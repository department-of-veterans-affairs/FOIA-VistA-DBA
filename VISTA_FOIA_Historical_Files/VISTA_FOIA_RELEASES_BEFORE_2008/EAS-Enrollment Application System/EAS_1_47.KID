KIDS Distribution saved on Dec 31, 2003@12:11:51
Z09 BUILDER BY INCOME YEAR
**KIDS**:EAS*1.0*47^IVM*2.0*96^

**INSTALL NAME**
EAS*1.0*47
"BLD",5306,0)
EAS*1.0*47^ENROLLMENT APPLICATION SYSTEM^0^3031231^y
"BLD",5306,1,0)
^^1^1^3031222^
"BLD",5306,1,1,0)
Fix Z09 issue pertaining to Income Year for multiple years.
"BLD",5306,4,0)
^9.64PA^^0
"BLD",5306,"KRN",0)
^9.67PA^8989.52^19
"BLD",5306,"KRN",.4,0)
.4
"BLD",5306,"KRN",.401,0)
.401
"BLD",5306,"KRN",.402,0)
.402
"BLD",5306,"KRN",.403,0)
.403
"BLD",5306,"KRN",.5,0)
.5
"BLD",5306,"KRN",.84,0)
.84
"BLD",5306,"KRN",3.6,0)
3.6
"BLD",5306,"KRN",3.8,0)
3.8
"BLD",5306,"KRN",9.2,0)
9.2
"BLD",5306,"KRN",9.8,0)
9.8
"BLD",5306,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",5306,"KRN",9.8,"NM",1,0)
EASPTRN1^^0^B17779016
"BLD",5306,"KRN",9.8,"NM",2,0)
EASPTRN5^^0^B18336809
"BLD",5306,"KRN",9.8,"NM",3,0)
EASUFNC3^^0^B12179090
"BLD",5306,"KRN",9.8,"NM","B","EASPTRN1",1)

"BLD",5306,"KRN",9.8,"NM","B","EASPTRN5",2)

"BLD",5306,"KRN",9.8,"NM","B","EASUFNC3",3)

"BLD",5306,"KRN",19,0)
19
"BLD",5306,"KRN",19,"NM",0)
^9.68A^^
"BLD",5306,"KRN",19.1,0)
19.1
"BLD",5306,"KRN",101,0)
101
"BLD",5306,"KRN",409.61,0)
409.61
"BLD",5306,"KRN",771,0)
771
"BLD",5306,"KRN",870,0)
870
"BLD",5306,"KRN",8989.51,0)
8989.51
"BLD",5306,"KRN",8989.52,0)
8989.52
"BLD",5306,"KRN",8994,0)
8994
"BLD",5306,"KRN","B",.4,.4)

"BLD",5306,"KRN","B",.401,.401)

"BLD",5306,"KRN","B",.402,.402)

"BLD",5306,"KRN","B",.403,.403)

"BLD",5306,"KRN","B",.5,.5)

"BLD",5306,"KRN","B",.84,.84)

"BLD",5306,"KRN","B",3.6,3.6)

"BLD",5306,"KRN","B",3.8,3.8)

"BLD",5306,"KRN","B",9.2,9.2)

"BLD",5306,"KRN","B",9.8,9.8)

"BLD",5306,"KRN","B",19,19)

"BLD",5306,"KRN","B",19.1,19.1)

"BLD",5306,"KRN","B",101,101)

"BLD",5306,"KRN","B",409.61,409.61)

"BLD",5306,"KRN","B",771,771)

"BLD",5306,"KRN","B",870,870)

"BLD",5306,"KRN","B",8989.51,8989.51)

"BLD",5306,"KRN","B",8989.52,8989.52)

"BLD",5306,"KRN","B",8994,8994)

"BLD",5306,"QUES",0)
^9.62^^
"BLD",5306,"REQB",0)
^9.611^2^2
"BLD",5306,"REQB",1,0)
EAS*1.0*23^1
"BLD",5306,"REQB",2,0)
EAS*1.0*33^1
"BLD",5306,"REQB","B","EAS*1.0*23",1)

"BLD",5306,"REQB","B","EAS*1.0*33",2)

"MBREQ")
0
"PKG",552,-1)
1^1
"PKG",552,0)
ENROLLMENT APPLICATION SYSTEM^EAS^ENROLLMENT
"PKG",552,20,0)
^9.402P^2^1
"PKG",552,20,2,0)
2^^EASXDR
"PKG",552,20,2,1)
 
"PKG",552,20,"B",2,2)

"PKG",552,22,0)
^9.49I^1^1
"PKG",552,22,1,0)
1.0^3010315^3010419^66481
"PKG",552,22,1,"PAH",1,0)
47^3031231
"PKG",552,22,1,"PAH",1,1,0)
^^1^1^3031231
"PKG",552,22,1,"PAH",1,1,1,0)
Fix Z09 issue pertaining to Income Year for multiple years.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","EASPTRN1")
0^1^B17779016
"RTN","EASPTRN1",1,0)
EASPTRN1 ;ALB/EJG/GN - GENERATE EAS SUBPROCESSES ;03/07/2003 [12/17/03 11:30am]
"RTN","EASPTRN1",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**30,33,47**; 21-OCT-94
"RTN","EASPTRN1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","EASPTRN1",4,0)
 ;
"RTN","EASPTRN1",5,0)
 ; Cloned from IVMPTRN1
"RTN","EASPTRN1",6,0)
 ;
"RTN","EASPTRN1",7,0)
 ;EAS*1*47 - break up Z09's by Income year, via new "ATR" xref
"RTN","EASPTRN1",8,0)
 ;
"RTN","EASPTRN1",9,0)
 ;
"RTN","EASPTRN1",10,0)
DELMT ; send delete mt transaction if pt no longer meets IVM criteria
"RTN","EASPTRN1",11,0)
 ;
"RTN","EASPTRN1",12,0)
 ; Input - DFN
"RTN","EASPTRN1",13,0)
 ;         IVMMTDT - date of means test
"RTN","EASPTRN1",14,0)
 ;
"RTN","EASPTRN1",15,0)
 N I,IVMIY,X
"RTN","EASPTRN1",16,0)
 S IVMIY=$$LYR^DGMTSCU1(IVMMTDT)
"RTN","EASPTRN1",17,0)
 F I=1:1:5,8:1:14 S $P(X,HLFS,I)=HLQ
"RTN","EASPTRN1",18,0)
 S ^TMP("HLS",$J,HLSDT,IVMCT)="ZMT"_HLFS_X
"RTN","EASPTRN1",19,0)
 D CLOSE(IVMIY,DFN,2,3) ; set flag to stop future transmissions
"RTN","EASPTRN1",20,0)
 Q
"RTN","EASPTRN1",21,0)
 ;
"RTN","EASPTRN1",22,0)
 ;
"RTN","EASPTRN1",23,0)
CLOSE(IVMIY,DFN,IVMCS,IVMCR) ; Close IVM case record for a patient
"RTN","EASPTRN1",24,0)
 ; Input:    DFN  --  Pointer to the patient in file #2
"RTN","EASPTRN1",25,0)
 ;         IVMIY  --  Income year of the closed case
"RTN","EASPTRN1",26,0)
 ;         IVMCS  --  Closure source [1=IVM | 2=DHCP]
"RTN","EASPTRN1",27,0)
 ;         IVMCR  --  Pointer to the closure reason in file #301.93
"RTN","EASPTRN1",28,0)
 ;
"RTN","EASPTRN1",29,0)
 N DA,DIE,DR,X,Y,EVENTS,STATUS,EAEVENT
"RTN","EASPTRN1",30,0)
 I '$G(IVMIY)!'$G(DFN)!'$G(IVMCS)!'$G(IVMCR) G CLOSEQ
"RTN","EASPTRN1",31,0)
 S IVMDELMT=1 ; flag indicates deletion
"RTN","EASPTRN1",32,0)
 S DA=$O(^IVM(301.5,"APT",+DFN,+IVMIY,0))
"RTN","EASPTRN1",33,0)
 I $G(^IVM(301.5,+DA,0))']"" G CLOSEQ
"RTN","EASPTRN1",34,0)
 ;
"RTN","EASPTRN1",35,0)
 ;don't want closing a case to stop transmission of an enrollment event
"RTN","EASPTRN1",36,0)
 S STATUS=1
"RTN","EASPTRN1",37,0)
 I ($$STATUS^IVMPLOG(+DA,.EVENTS)=0),EVENTS("ENROLL")=1 S STATUS=0
"RTN","EASPTRN1",38,0)
 ;
"RTN","EASPTRN1",39,0)
 ;If previous years event make sure enrollment event does not get 
"RTN","EASPTRN1",40,0)
 ;  updated
"RTN","EASPTRN1",41,0)
 ;
"RTN","EASPTRN1",42,0)
 S EAEVENT=1
"RTN","EASPTRN1",43,0)
 I $G(EXPIRED)=1 S EAEVENT=2,STATUS=1
"RTN","EASPTRN1",44,0)
 I $G(EXPIRED)=0 S EAEVENT=1,STATUS=0
"RTN","EASPTRN1",45,0)
 D NOW^%DTC S DR=".03////"_STATUS_";.04////1;1.01////"_IVMCR_";1.02////"_IVMCS_";1.03////"_%_";30.01////2;30.02////2;30.03////"_$G(EAEVENT)
"RTN","EASPTRN1",46,0)
 S DIE="^IVM(301.5," D ^DIE
"RTN","EASPTRN1",47,0)
CLOSEQ Q
"RTN","EASPTRN1",48,0)
 ;
"RTN","EASPTRN1",49,0)
 ;
"RTN","EASPTRN1",50,0)
PSEUDO ; strip P from pseudo SSNs before transmitting to IVM
"RTN","EASPTRN1",51,0)
 ;
"RTN","EASPTRN1",52,0)
 N X
"RTN","EASPTRN1",53,0)
 S X=IVMPID_$G(IVMPID(1))
"RTN","EASPTRN1",54,0)
 S $P(X,HLFS,20)=$E($P(X,HLFS,20),1,9) ; remove P
"RTN","EASPTRN1",55,0)
 K IVMPID S IVMPID=$E(X,1,245)
"RTN","EASPTRN1",56,0)
 I $L(X)>245 S IVMPID(1)=$E(X,246,999)
"RTN","EASPTRN1",57,0)
 Q
"RTN","EASPTRN1",58,0)
 ;
"RTN","EASPTRN1",59,0)
 ;Check if EDB Z06 in Annual Means Test file #408.31
"RTN","EASPTRN1",60,0)
 ; 'Z06 MT via Edb' will be stored in Comments if EDB Z06 Means Test
"RTN","EASPTRN1",61,0)
 ;
"RTN","EASPTRN1",62,0)
Z06MT(IVMMTIEN,Z06COM) N FLAG,LINE,COMMENT
"RTN","EASPTRN1",63,0)
 I '$G(IVMMTIEN) Q 0
"RTN","EASPTRN1",64,0)
 I $G(Z06COM)="" S Z06COM="Z06 MT via Edb"
"RTN","EASPTRN1",65,0)
 S (FLAG,LINE)=0
"RTN","EASPTRN1",66,0)
 F  S LINE=$O(^DGMT(408.31,IVMMTIEN,"C",LINE)) Q:'LINE!(FLAG)  D
"RTN","EASPTRN1",67,0)
 . S COMMENT=$G(^DGMT(408.31,IVMMTIEN,"C",LINE,0))
"RTN","EASPTRN1",68,0)
 . I COMMENT=Z06COM S FLAG=1 Q
"RTN","EASPTRN1",69,0)
 Q FLAG
"RTN","EASPTRN1",70,0)
 ;
"RTN","EASPTRN1",71,0)
 ;Retrieve Means Test information from incoming HL7 message.  
"RTN","EASPTRN1",72,0)
 ;
"RTN","EASPTRN1",73,0)
CHECKMT(DFN) N SOURCE,IVMLAST,IVMMTDT,IVMMTIEN
"RTN","EASPTRN1",74,0)
 I IVMTYPE'=1 Q    ;Only want MT = 1
"RTN","EASPTRN1",75,0)
 S SOURCE=$P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,22)
"RTN","EASPTRN1",76,0)
 S IVMMTDT=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,2))
"RTN","EASPTRN1",77,0)
 S IVMLAST=$$LST^DGMTU(DFN,$E(IVMMTDT,1,3)_1231,1)
"RTN","EASPTRN1",78,0)
 S IVMMTIEN=+IVMLAST
"RTN","EASPTRN1",79,0)
 Q $$Z06MT(IVMMTIEN)
"RTN","EASPTRN1",80,0)
 ;
"RTN","EASPTRN1",81,0)
 ;Based upon DFN and MT Date find primary MT
"RTN","EASPTRN1",82,0)
 ;
"RTN","EASPTRN1",83,0)
VERZ06(DFN) N CMT,CMTDATE,MTIEN,PRIM
"RTN","EASPTRN1",84,0)
 S CMT=$$LST^DGMTU(DFN)
"RTN","EASPTRN1",85,0)
 S MTIEN=+CMT,CMTDATE=$P(CMT,"^",2)
"RTN","EASPTRN1",86,0)
 I 'MTIEN Q 0                             ;No Means Test found
"RTN","EASPTRN1",87,0)
 S PRIM=$G(^DGMT(408.31,MTIEN,"PRIM"))
"RTN","EASPTRN1",88,0)
 I PRIM,$$Z06MT(MTIEN) Q 1
"RTN","EASPTRN1",89,0)
 Q 0
"RTN","EASPTRN1",90,0)
 ;
"RTN","EASPTRN1",91,0)
 ;Check for expired MT
"RTN","EASPTRN1",92,0)
 ;
"RTN","EASPTRN1",93,0)
EXPIRED(DFN,DGMTDT) N CMT,PMT
"RTN","EASPTRN1",94,0)
 S PMT=$$LST^DGMTU(DFN,DGMTDT)       ;Retrieve MT associated w/MT Test
"RTN","EASPTRN1",95,0)
 I PMT="" Q 0
"RTN","EASPTRN1",96,0)
 S CMT=$$LST^DGMTU(DFN)              ;Retrieve Current MT
"RTN","EASPTRN1",97,0)
 I $P(PMT,"^",2)<$P(CMT,"^",2) Q 1   ;Previous Year - Expired MT
"RTN","EASPTRN1",98,0)
 Q 0
"RTN","EASPTRN1",99,0)
 ;
"RTN","EASPTRN1",100,0)
 ;Determine if Z09 should be sent to EDB or HEC legacy       ;EAS*1*47
"RTN","EASPTRN1",101,0)
 ; Input:  DFN
"RTN","EASPTRN1",102,0)
 ; Output: Where to Send Z09
"RTN","EASPTRN1",103,0)
 ;          0 - HEC Legacy
"RTN","EASPTRN1",104,0)
 ;          1 - EDB
"RTN","EASPTRN1",105,0)
 ;
"RTN","EASPTRN1",106,0)
WHERETO(ICYR,DFN) N COM,DATE,FOUND,FRMDATE,IEN,MIEN,ONODE,MTD,TYPE,Z06COM
"RTN","EASPTRN1",107,0)
 S FOUND=0
"RTN","EASPTRN1",108,0)
 S Z06COM="Z06 MT via Edb"
"RTN","EASPTRN1",109,0)
 S IEN=$O(^IVM(301.61,"ATR",ICYR,DFN,0)) I IEN="" Q FOUND
"RTN","EASPTRN1",110,0)
 S FRMDATE=$P($G(^IVM(301.61,IEN,0)),"^",5) I FRMDATE="" Q FOUND
"RTN","EASPTRN1",111,0)
 S TYPE=""
"RTN","EASPTRN1",112,0)
 F  S TYPE=$O(^DGMT(408.31,"AID",TYPE)) Q:TYPE=""!(FOUND)  D
"RTN","EASPTRN1",113,0)
 .S MTD=""
"RTN","EASPTRN1",114,0)
 .F  S MTD=$O(^DGMT(408.31,"AID",TYPE,DFN,MTD)) Q:MTD=""!(FOUND)  D
"RTN","EASPTRN1",115,0)
 ..S MIEN=""
"RTN","EASPTRN1",116,0)
 ..F  S MIEN=$O(^DGMT(408.31,"AID",TYPE,DFN,MTD,MIEN)) Q:MIEN=""!(FOUND)  D
"RTN","EASPTRN1",117,0)
 ...S ONODE=$G(^DGMT(408.31,MIEN,0))
"RTN","EASPTRN1",118,0)
 ...S DATE=$P(ONODE,"^",25)                     ;Use IVM Verified Date
"RTN","EASPTRN1",119,0)
 ...I DATE="" S DATE=$P(ONODE,"^",7)            ;Use Completed Date
"RTN","EASPTRN1",120,0)
 ...S COM=$G(^DGMT(408.31,MIEN,"C",1,0))        ;Comment
"RTN","EASPTRN1",121,0)
 ...I DATE'="",COM[Z06COM,FRMDATE>(DATE-1),$G(^DGMT(408.31,MIEN,"PRIM")) S FOUND=1
"RTN","EASPTRN1",122,0)
 Q FOUND
"RTN","EASPTRN5")
0^2^B18336809
"RTN","EASPTRN5",1,0)
EASPTRN5 ;ALB/CPM/GN - NIGHTLY BILLING TRANSMISSION PROCESSING ; 10/30/01 9:58am [12/17/03 1:09pm]
"RTN","EASPTRN5",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**23,33,47**; 21-OCT-94
"RTN","EASPTRN5",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","EASPTRN5",4,0)
 ;
"RTN","EASPTRN5",5,0)
 ; For Edb Transmission Only - VAMC-to-Edb
"RTN","EASPTRN5",6,0)
 ;
"RTN","EASPTRN5",7,0)
 ;EAS*1*47 - break up Z09's by Income year, via new "ATR" xref
"RTN","EASPTRN5",8,0)
 ;
"RTN","EASPTRN5",9,0)
EN ; This routine performs the nightly compilation and transmission
"RTN","EASPTRN5",10,0)
 ; of DHCP billing activity for IVM patients to the IVM Center.
"RTN","EASPTRN5",11,0)
 ;
"RTN","EASPTRN5",12,0)
TRNSMT ; Transmit required billing activity.
"RTN","EASPTRN5",13,0)
 Q:'$D(^IVM(301.61,"ATR"))
"RTN","EASPTRN5",14,0)
 ; =============
"RTN","EASPTRN5",15,0)
 N HL,HLDT,HLDT1,HLEID,HLMID,MID,MTIEN,RESULT,ICYR
"RTN","EASPTRN5",16,0)
 S HLEID="EAS EDB ORU-Z09 SERVER"
"RTN","EASPTRN5",17,0)
 S HLEID=$O(^ORD(101,"B",HLEID,0))
"RTN","EASPTRN5",18,0)
 D INIT^IVMUFNC(HLEID,.HL) S HLMTN="ORU"
"RTN","EASPTRN5",19,0)
 S NUMS=""
"RTN","EASPTRN5",20,0)
 F I=1:1:30 S NUMS=NUMS_$S(NUMS'="":",",1:"")_I
"RTN","EASPTRN5",21,0)
 S ICYR=0                                                    ;EAS*1*47
"RTN","EASPTRN5",22,0)
 F  S ICYR=$O(^IVM(301.61,"ATR",ICYR)) Q:'ICYR  D
"RTN","EASPTRN5",23,0)
 . D BLDZ09(ICYR)
"RTN","EASPTRN5",24,0)
 D FILE^IVMPTRN3
"RTN","EASPTRN5",25,0)
 K DFN,IVMPID,IVMTDA,IVMMTDT,IVMN,IVMSTOP,IVMEVENT,IVMHZIC,VAFPID,DGREL,DGINC,DGINR,DGDEP
"RTN","EASPTRN5",26,0)
 D CLEAN^IVMUFNC
"RTN","EASPTRN5",27,0)
 Q
"RTN","EASPTRN5",28,0)
 ;
"RTN","EASPTRN5",29,0)
BLDZ09(ICYR) ;create the Z09 per DFN
"RTN","EASPTRN5",30,0)
 S DFN=0
"RTN","EASPTRN5",31,0)
 F  S DFN=$O(^IVM(301.61,"ATR",ICYR,DFN)) Q:'DFN  D
"RTN","EASPTRN5",32,0)
 .I '$$WHERETO^EASPTRN1(ICYR,DFN) Q          ;Do not send legacy Z09's
"RTN","EASPTRN5",33,0)
 .I IVMCT=0,$G(IVMGTOT) D FILE^HLTF
"RTN","EASPTRN5",34,0)
 .S HLEVN=HLEVN+1
"RTN","EASPTRN5",35,0)
 .; ==========
"RTN","EASPTRN5",36,0)
 .; Find a slot for each batch
"RTN","EASPTRN5",37,0)
 .I HLEVN#100=1 D
"RTN","EASPTRN5",38,0)
 ..K HLDT,HLDT1,HLMID,MTIEN
"RTN","EASPTRN5",39,0)
 ..D CREATE^HLTF(.HLMID,.MTIEN,.HLDT,.HLDT1)
"RTN","EASPTRN5",40,0)
 .; ==========
"RTN","EASPTRN5",41,0)
 .;
"RTN","EASPTRN5",42,0)
 .; Setup MSH Segment
"RTN","EASPTRN5",43,0)
 .S MID=HLMID_"-"_HLEVN
"RTN","EASPTRN5",44,0)
 .D MSH^HLFNC2(.HL,MID,.RESULT)
"RTN","EASPTRN5",45,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=RESULT
"RTN","EASPTRN5",46,0)
 .;
"RTN","EASPTRN5",47,0)
 .; - re-set msg control id into MSH segment
"RTN","EASPTRN5",48,0)
 .D MSGID^IVMUFNC4(.IVMCT)
"RTN","EASPTRN5",49,0)
 .;
"RTN","EASPTRN5",50,0)
 .; - create PID segment
"RTN","EASPTRN5",51,0)
 .K IVMPID,VAFPID
"RTN","EASPTRN5",52,0)
 .S IVMPID=$$EN^VAFCPID(DFN,"1,2,3,4,5,7,8,19")
"RTN","EASPTRN5",53,0)
 .I $D(VAFPID(1)) S IVMPID(1)=VAFPID(1)
"RTN","EASPTRN5",54,0)
 .;I $P(IVMPID_$G(IVMPID(1)),HLFS,20)["P" D PSEUDO^IVMPTRN1
"RTN","EASPTRN5",55,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMPID
"RTN","EASPTRN5",56,0)
 .I $D(IVMPID(1)) S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMPID(1)
"RTN","EASPTRN5",57,0)
 .;
"RTN","EASPTRN5",58,0)
 .; - create PD1 segment - Patient CMOR segment <<<<<<<<<<<<<<<<<
"RTN","EASPTRN5",59,0)
 .;S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLPD1(DFN,"1,2,3,4")
"RTN","EASPTRN5",60,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLPD1(DFN,"1,3")
"RTN","EASPTRN5",61,0)
 .;
"RTN","EASPTRN5",62,0)
 .; - find the patient's Means Test date and create ZIC segment
"RTN","EASPTRN5",63,0)
 .S IVMTDA=$O(^IVM(301.61,"ATR",ICYR,DFN,0))
"RTN","EASPTRN5",64,0)
 .S IVMMTDT=$S(IVMTDA:$P($G(^IVM(301.61,IVMTDA,0)),"^",5),1:DT)
"RTN","EASPTRN5",65,0)
 .D ALL^DGMTU21(DFN,"V",IVMMTDT,"IPR",+$$LST^DGMTU(DFN,IVMMTDT))
"RTN","EASPTRN5",66,0)
 .S IVMHZIC=$$EN^VAFHLZIC(+$G(DGINC("V")),"1,2")
"RTN","EASPTRN5",67,0)
 .;S IVMHZIC=$$EN^VAFHLZIC(+$G(DGINC("V")),$P(NUMS,",",1,23))
"RTN","EASPTRN5",68,0)
 .I '$P(IVMHZIC,"^",3) S $P(IVMHZIC,"^",3)=$$HLDATE^HLFNC($O(^IVM(301.5,"APT",DFN,0)))
"RTN","EASPTRN5",69,0)
 .;
"RTN","EASPTRN5",70,0)
 .; - find all transactions for the patient and create FT1 segments
"RTN","EASPTRN5",71,0)
 .S IVMTDA=0 F  S IVMTDA=$O(^IVM(301.61,"ATR",ICYR,DFN,IVMTDA)) Q:'IVMTDA  D
"RTN","EASPTRN5",72,0)
 ..S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$FT1^EASUFNC3(IVMTDA)
"RTN","EASPTRN5",73,0)
 ..S IVMN=$G(^IVM(301.61,IVMTDA,0))
"RTN","EASPTRN5",74,0)
 ..;
"RTN","EASPTRN5",75,0)
 ..; - if a payment has been made (or if the bill is closed),
"RTN","EASPTRN5",76,0)
 ..; - but the bill has never been transmitted, re-transmit.
"RTN","EASPTRN5",77,0)
 ..I ($P(IVMN,"^",9)!($P(IVMN,"^",10))),'$P(IVMN,"^",13) D
"RTN","EASPTRN5",78,0)
 ...D NOW^%DTC S DA=IVMTDA,DIE="^IVM(301.61,",DR=".13////"_% D ^DIE
"RTN","EASPTRN5",79,0)
 ...S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$FT1^EASUFNC3(IVMTDA)
"RTN","EASPTRN5",80,0)
 ..;
"RTN","EASPTRN5",81,0)
 ..; - update transmission record
"RTN","EASPTRN5",82,0)
 ..;D:ISITESW'["H"
"RTN","EASPTRN5",83,0)
 ..S IVMSTOP=0
"RTN","EASPTRN5",84,0)
 ..I $P(IVMN,"^",10)!$P(IVMN,"^",11) S IVMSTOP=1
"RTN","EASPTRN5",85,0)
 ..I $P(IVMN,"^",4)>1 S IVMSTOP=1
"RTN","EASPTRN5",86,0)
 ..D NOW^%DTC S DR=".12////0;.13////"_%
"RTN","EASPTRN5",87,0)
 ..I IVMSTOP S DR=DR_";.14////1"
"RTN","EASPTRN5",88,0)
 ..S DR=DR_";1.03////"_%_";1.04////"_DUZ
"RTN","EASPTRN5",89,0)
 ..S DA=IVMTDA,DIE="^IVM(301.61," D ^DIE K DA,DR,DIE
"RTN","EASPTRN5",90,0)
 .;
"RTN","EASPTRN5",91,0)
 .; - set ZIC segment
"RTN","EASPTRN5",92,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMHZIC
"RTN","EASPTRN5",93,0)
 .;
"RTN","EASPTRN5",94,0)
 .S IVMEVENT="Z09"
"RTN","EASPTRN5",95,0)
 .I HLEVN'<100 D FILE^IVMPTRN3
"RTN","EASPTRN5",96,0)
 ;
"RTN","EASPTRN5",97,0)
 Q
"RTN","EASPTRN5",98,0)
 ;
"RTN","EASPTRN5",99,0)
 ;
"RTN","EASPTRN5",100,0)
INIT(DFN) ; Find the initial date for which to return patient charges.
"RTN","EASPTRN5",101,0)
 ;  Input:   DFN  --  Pointer to the patient in file #2
"RTN","EASPTRN5",102,0)
 ; Output:   Date patient became Cat C, or null (for ins. patients)
"RTN","EASPTRN5",103,0)
 ;
"RTN","EASPTRN5",104,0)
 N IVMDATE,X,Y S IVMDATE=0
"RTN","EASPTRN5",105,0)
 I '$G(DFN) G INITQ
"RTN","EASPTRN5",106,0)
 S X=0 F  S X=$O(^IVM(301.61,"C",DFN,X)) Q:'X  S Y=$G(^IVM(301.61,X,0)) I $P(Y,"^",4)>1,$P(Y,"^",5) S IVMDATE=$P(Y,"^",5) Q
"RTN","EASPTRN5",107,0)
 I IVMDATE S IVMDATE=$P($$LST^DGMTU(DFN,IVMDATE),"^",2)
"RTN","EASPTRN5",108,0)
INITQ Q IVMDATE
"RTN","EASUFNC3")
0^3^B12179090
"RTN","EASUFNC3",1,0)
EASUFNC3 ;ALB/CPM/EJG/GN - BILLING TRANSMISSION UTILITIES ; 13-JUN-94 [12/22/03 10:30am]
"RTN","EASUFNC3",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**23,47**; 21-OCT-94
"RTN","EASUFNC3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","EASUFNC3",4,0)
 ;
"RTN","EASUFNC3",5,0)
 ;IVM Project Interface w/Edb
"RTN","EASUFNC3",6,0)
 ;
"RTN","EASUFNC3",7,0)
 ;EAS*1*47 - break up Z09's by Income year, via new "ATR" xref
"RTN","EASUFNC3",8,0)
 ;
"RTN","EASUFNC3",9,0)
REV(IVMREF,DFN,IVMCL,IVMTYP,IVMBF,IVMBT,IVMAB,IVMHLD) ; Interface w/ Rev fct.
"RTN","EASUFNC3",10,0)
 ;  Input:   IVMREF  --  Bill reference number
"RTN","EASUFNC3",11,0)
 ;              DFN  --  Pointer to the patient in file #2
"RTN","EASUFNC3",12,0)
 ;            IVMCL  --  Bill Classification [ 1-Inpt, 2-Opt ]
"RTN","EASUFNC3",13,0)
 ;           IVMTYP  --  Bill Type [ 2-Copayment, 3-Per Diem ]
"RTN","EASUFNC3",14,0)
 ;            IVMBF  --  Bill From Date in FM format
"RTN","EASUFNC3",15,0)
 ;            IVMBT  --  Bill To Date in FM format
"RTN","EASUFNC3",16,0)
 ;            IVMAB  --  Amount Billed
"RTN","EASUFNC3",17,0)
 ;           IVMHLD  --  Charge placed on hold? [ 1-Yes, 0-No ]
"RTN","EASUFNC3",18,0)
 ;
"RTN","EASUFNC3",19,0)
 ; Output:   New entry created in file #301.61
"RTN","EASUFNC3",20,0)
 ;
"RTN","EASUFNC3",21,0)
 N IVMTDA,DA,DIK
"RTN","EASUFNC3",22,0)
 I $G(IVMREF)=""!'$G(DFN) G REVQ
"RTN","EASUFNC3",23,0)
 S IVMTDA=$O(^IVM(301.61,"B",IVMREF,0))
"RTN","EASUFNC3",24,0)
 I 'IVMTDA S IVMTDA=$$ADD(IVMREF) I 'IVMTDA G REVQ
"RTN","EASUFNC3",25,0)
 ;
"RTN","EASUFNC3",26,0)
 D NOW^%DTC
"RTN","EASUFNC3",27,0)
 S $P(^IVM(301.61,IVMTDA,0),"^",2,12)=DFN_"^"_IVMCL_"^"_IVMTYP_"^"_IVMBF_"^"_IVMBT_"^"_$S($G(IVMHLD):"",1:DT)_"^"_IVMAB_"^^^^"_$S($G(IVMHLD):0,1:1),$P(^(1),"^",3,4)=%_"^"_DUZ
"RTN","EASUFNC3",28,0)
 S DA=IVMTDA,DIK="^IVM(301.61," D IX1^DIK
"RTN","EASUFNC3",29,0)
REVQ Q
"RTN","EASUFNC3",30,0)
 ;
"RTN","EASUFNC3",31,0)
ADD(X) ; Add a new entry to file #301.61
"RTN","EASUFNC3",32,0)
 ;  Input:     X  --  Reference number to be used as the .01 field
"RTN","EASUFNC3",33,0)
 ;  Output:  IVM  --  Internal entry number to new entry, or 0.
"RTN","EASUFNC3",34,0)
 ;
"RTN","EASUFNC3",35,0)
 N DA,DD,DO,DIE,DIC,DLAYGO,IVM,Y
"RTN","EASUFNC3",36,0)
 I $G(X)="" S IVM=0 G ADDQ
"RTN","EASUFNC3",37,0)
 S DIC="^IVM(301.61,",DIC(0)="L",DLAYGO=301.61 D FILE^DICN
"RTN","EASUFNC3",38,0)
 S (DA,IVM)=+Y I DA<0 S IVM=0 G ADDQ
"RTN","EASUFNC3",39,0)
 ;
"RTN","EASUFNC3",40,0)
 D NOW^%DTC
"RTN","EASUFNC3",41,0)
 S DIE=DIC,DR="1.01////"_%_";1.02////"_DUZ D ^DIE
"RTN","EASUFNC3",42,0)
ADDQ Q IVM
"RTN","EASUFNC3",43,0)
 ;
"RTN","EASUFNC3",44,0)
 ;
"RTN","EASUFNC3",45,0)
CHK(DFN) ; Is the insurance patient recorded in file #301.61?
"RTN","EASUFNC3",46,0)
 ;  Input:   DFN  --  Pointer to the patient in file #2
"RTN","EASUFNC3",47,0)
 ; Output:     1  --  Patient recorded in #301.61; otherwise, 0
"RTN","EASUFNC3",48,0)
 ;
"RTN","EASUFNC3",49,0)
 Q $O(^IVM(301.61,"C",+$G(DFN),0))>0
"RTN","EASUFNC3",50,0)
 ;
"RTN","EASUFNC3",51,0)
 ;
"RTN","EASUFNC3",52,0)
FT1(IVMTDA) ; Entry point to build FT1 segment from file #301.61
"RTN","EASUFNC3",53,0)
 ;  Input:  IVMTDA  --  Pointer to the transmission record in #301.61
"RTN","EASUFNC3",54,0)
 ;          The HL7 variables HLFS, HLQ and HLECH must also be defined
"RTN","EASUFNC3",55,0)
 ; Output:  String in the form of the HL7 FT1 segment
"RTN","EASUFNC3",56,0)
 ;
"RTN","EASUFNC3",57,0)
 N IVMN,IVMY,IVMSEP
"RTN","EASUFNC3",58,0)
 I '$G(IVMTDA) G FT1Q
"RTN","EASUFNC3",59,0)
 S IVMN=$G(^IVM(301.61,IVMTDA,0)) I IVMN="" G FT1Q
"RTN","EASUFNC3",60,0)
 S IVMSEP=$E(HLECH)
"RTN","EASUFNC3",61,0)
 ;
"RTN","EASUFNC3",62,0)
 S $P(IVMY,HLFS,1)=1 ; set id
"RTN","EASUFNC3",63,0)
 S $P(IVMY,HLFS,4)=$S($P(IVMN,"^",7):$$HLDATE^HLFNC($P(IVMN,"^",7)),1:HLQ) ; date generated
"RTN","EASUFNC3",64,0)
 S $P(IVMY,HLFS,6)=$S($P(IVMN,"^",11):2,$P(IVMN,"^",10)&$P(IVMN,"^",13):4,$P(IVMN,"^",9)&$P(IVMN,"^",13):3,1:1) ; transaction type
"RTN","EASUFNC3",65,0)
 S $P(IVMY,HLFS,7)=$P(IVMN,"^") ; transaction code
"RTN","EASUFNC3",66,0)
 ;
"RTN","EASUFNC3",67,0)
 ; - build extended transaction description
"RTN","EASUFNC3",68,0)
 S $P(IVMY,HLFS,9)=$P(IVMN,"^",3)_IVMSEP_$P(IVMN,"^",4)_IVMSEP_$S($P(IVMN,"^",5):$$HLDATE^HLFNC($P(IVMN,"^",5)),1:HLQ)_IVMSEP_$S($P(IVMN,"^",6):$$HLDATE^HLFNC($P(IVMN,"^",6)),1:HLQ)
"RTN","EASUFNC3",69,0)
 ;
"RTN","EASUFNC3",70,0)
 ; - build extended transaction amount
"RTN","EASUFNC3",71,0)
 S $P(IVMY,HLFS,11)=$S($P(IVMN,"^",10)&$P(IVMN,"^",13):+$P(IVMN,"^",9),$P(IVMN,"^",9)&$P(IVMN,"^",13):$P(IVMN,"^",9),1:"")    ;Amount Collected
"RTN","EASUFNC3",72,0)
 S $P(IVMY,HLFS,12)=$P(IVMN,"^",8)              ;Amount Billed
"RTN","EASUFNC3",73,0)
 ;
"RTN","EASUFNC3",74,0)
FT1Q Q "FT1"_HLFS_$G(IVMY)
"RTN","EASUFNC3",75,0)
 ;
"RTN","EASUFNC3",76,0)
SETATR(DA,DFN) ; Mumps cross reference add logic                     ;EAS*1*47
"RTN","EASUFNC3",77,0)
 Q:'DFN
"RTN","EASUFNC3",78,0)
 N ICYR,TSTDT
"RTN","EASUFNC3",79,0)
 S TSTDT=$P($G(^IVM(301.61,DA,0)),"^",5)
"RTN","EASUFNC3",80,0)
 Q:TSTDT'>0
"RTN","EASUFNC3",81,0)
 ;find last MT date via Billing From Date
"RTN","EASUFNC3",82,0)
 S ICYR=$P($$LST^DGMTU(DFN,TSTDT,1),"^",2)
"RTN","EASUFNC3",83,0)
 ;calculate income year
"RTN","EASUFNC3",84,0)
 S ICYR=$E(ICYR,1,3)-1_"0000"
"RTN","EASUFNC3",85,0)
 Q:ICYR'>0
"RTN","EASUFNC3",86,0)
 ;set if xmit is Yes
"RTN","EASUFNC3",87,0)
 S:$P($G(^IVM(301.61,DA,0)),"^",12) ^IVM(301.61,"ATR",ICYR,DFN,DA)=""
"RTN","EASUFNC3",88,0)
 Q
"RTN","EASUFNC3",89,0)
KILLATR(DA,DFN) ; Mumps cross reference kill logic                   ;EAS*1*47
"RTN","EASUFNC3",90,0)
 Q:'DFN
"RTN","EASUFNC3",91,0)
 N ICYR,TSTDT
"RTN","EASUFNC3",92,0)
 S TSTDT=$P($G(^IVM(301.61,DA,0)),"^",5)
"RTN","EASUFNC3",93,0)
 ;find last MT date for Billing From Date
"RTN","EASUFNC3",94,0)
 S ICYR=$P($$LST^DGMTU(DFN,TSTDT,1),"^",2)
"RTN","EASUFNC3",95,0)
 ;calculate income year
"RTN","EASUFNC3",96,0)
 S ICYR=$E(ICYR,1,3)-1_"0000"
"RTN","EASUFNC3",97,0)
 K ^IVM(301.61,"ATR",ICYR,DFN,DA)
"RTN","EASUFNC3",98,0)
 Q
"VER")
8.0^22
**INSTALL NAME**
IVM*2.0*96
"BLD",5307,0)
IVM*2.0*96^INCOME VERIFICATION MATCH^0^3031231^y
"BLD",5307,1,0)
^^1^1^3031222^
"BLD",5307,1,1,0)
Fix Z09 issue pertaining to Income Year for multiple years.
"BLD",5307,4,0)
^9.64PA^301.61^1
"BLD",5307,4,301.61,0)
301.61
"BLD",5307,4,301.61,222)
y^y^p^^^^n^^n
"BLD",5307,4,301.61,224)

"BLD",5307,4,"B",301.61,301.61)

"BLD",5307,"INIT")
EN^IVM2096
"BLD",5307,"KRN",0)
^9.67PA^8989.52^19
"BLD",5307,"KRN",.4,0)
.4
"BLD",5307,"KRN",.401,0)
.401
"BLD",5307,"KRN",.402,0)
.402
"BLD",5307,"KRN",.403,0)
.403
"BLD",5307,"KRN",.5,0)
.5
"BLD",5307,"KRN",.84,0)
.84
"BLD",5307,"KRN",3.6,0)
3.6
"BLD",5307,"KRN",3.8,0)
3.8
"BLD",5307,"KRN",9.2,0)
9.2
"BLD",5307,"KRN",9.8,0)
9.8
"BLD",5307,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",5307,"KRN",9.8,"NM",1,0)
IVM2096^^0^B1381226
"BLD",5307,"KRN",9.8,"NM",2,0)
IVMPTRN5^^0^B22443798
"BLD",5307,"KRN",9.8,"NM","B","IVM2096",1)

"BLD",5307,"KRN",9.8,"NM","B","IVMPTRN5",2)

"BLD",5307,"KRN",19,0)
19
"BLD",5307,"KRN",19.1,0)
19.1
"BLD",5307,"KRN",101,0)
101
"BLD",5307,"KRN",101,"NM",0)
^9.68A^^
"BLD",5307,"KRN",409.61,0)
409.61
"BLD",5307,"KRN",771,0)
771
"BLD",5307,"KRN",870,0)
870
"BLD",5307,"KRN",8989.51,0)
8989.51
"BLD",5307,"KRN",8989.52,0)
8989.52
"BLD",5307,"KRN",8994,0)
8994
"BLD",5307,"KRN","B",.4,.4)

"BLD",5307,"KRN","B",.401,.401)

"BLD",5307,"KRN","B",.402,.402)

"BLD",5307,"KRN","B",.403,.403)

"BLD",5307,"KRN","B",.5,.5)

"BLD",5307,"KRN","B",.84,.84)

"BLD",5307,"KRN","B",3.6,3.6)

"BLD",5307,"KRN","B",3.8,3.8)

"BLD",5307,"KRN","B",9.2,9.2)

"BLD",5307,"KRN","B",9.8,9.8)

"BLD",5307,"KRN","B",19,19)

"BLD",5307,"KRN","B",19.1,19.1)

"BLD",5307,"KRN","B",101,101)

"BLD",5307,"KRN","B",409.61,409.61)

"BLD",5307,"KRN","B",771,771)

"BLD",5307,"KRN","B",870,870)

"BLD",5307,"KRN","B",8989.51,8989.51)

"BLD",5307,"KRN","B",8989.52,8989.52)

"BLD",5307,"KRN","B",8994,8994)

"BLD",5307,"QUES",0)
^9.62^^
"BLD",5307,"REQB",0)
^9.611^1^1
"BLD",5307,"REQB",1,0)
IVM*2.0*78^1
"BLD",5307,"REQB","B","IVM*2.0*78",1)

"FIA",301.61)
IVM BILLING TRANSMISSION
"FIA",301.61,0)
^IVM(301.61,
"FIA",301.61,0,0)
301.61
"FIA",301.61,0,1)
y^y^f^^^^n^^n
"FIA",301.61,0,10)

"FIA",301.61,0,11)

"FIA",301.61,0,"RLRO")

"FIA",301.61,0,"VR")
2.0^IVM
"FIA",301.61,301.61)
0
"INIT")
EN^IVM2096
"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
96^3031231
"PKG",220,22,1,"PAH",1,1,0)
^^1^1^3031231
"PKG",220,22,1,"PAH",1,1,1,0)
Fix Z09 issue pertaining to Income Year for multiple years.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","IVM2096")
0^1^B1381226
"RTN","IVM2096",1,0)
IVM2096 ;ALB/GN IVM BILLING TRANSMISSION ATR XREF CONVERSION; 03/03/03 ; 12/22/03 3:13pm
"RTN","IVM2096",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**96**;21-OCT-94
"RTN","IVM2096",3,0)
 ;
"RTN","IVM2096",4,0)
 ; This post-install will convert the ATR cross-reference from the
"RTN","IVM2096",5,0)
 ; old format to the new format, providing any are currently set.
"RTN","IVM2096",6,0)
 ;
"RTN","IVM2096",7,0)
 ;   OLD Format: ^IVM(301.5,"ATR",DFN,IEN)
"RTN","IVM2096",8,0)
 ;   NEW Format: ^IVM(301.5,"ATR",Income Year,DFN,IEN)
"RTN","IVM2096",9,0)
 ;
"RTN","IVM2096",10,0)
EN ;
"RTN","IVM2096",11,0)
 D BMES^XPDUTL(" >>Beginning conversion process "_$$FMTE^XLFDT($$NOW^XLFDT))
"RTN","IVM2096",12,0)
 ;
"RTN","IVM2096",13,0)
 N DATA,IVMIEN,ERR,DA,DIK
"RTN","IVM2096",14,0)
 S DFN=0
"RTN","IVM2096",15,0)
 F  S DFN=$O(^IVM(301.61,"ATR",DFN)) Q:'DFN  D
"RTN","IVM2096",16,0)
 . S IVMIEN=0
"RTN","IVM2096",17,0)
 . F  S IVMIEN=$O(^IVM(301.61,"ATR",DFN,IVMIEN)) Q:'IVMIEN  D
"RTN","IVM2096",18,0)
 . . K ^IVM(301.61,"ATR",DFN,IVMIEN)
"RTN","IVM2096",19,0)
 . . S DA=IVMIEN,DIK="^IVM(301.61,"
"RTN","IVM2096",20,0)
 . . D IX1^DIK                                    ;re-index this ien 
"RTN","IVM2096",21,0)
 ;
"RTN","IVM2096",22,0)
 D MES^XPDUTL(" >>Conversion process completed:"_$$FMTE^XLFDT($$NOW^XLFDT))
"RTN","IVM2096",23,0)
 ;
"RTN","IVM2096",24,0)
 Q
"RTN","IVMPTRN5")
0^2^B22443798
"RTN","IVMPTRN5",1,0)
IVMPTRN5 ;ALB/CPM/GN - NIGHTLY BILLING TRANSMISSION PROCESSING ; 1/15/01 11:21am [12/17/03 3:45pm]
"RTN","IVMPTRN5",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**1,9,24,34,69,78,96**; 21-OCT-94
"RTN","IVMPTRN5",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMPTRN5",4,0)
 ;
"RTN","IVMPTRN5",5,0)
 ;
"RTN","IVMPTRN5",6,0)
 ;IVM*2*96 - break up Z09's by Income year, via new "ATR" xref
"RTN","IVMPTRN5",7,0)
 ;
"RTN","IVMPTRN5",8,0)
EN ; This routine performs the nightly compilation and transmission
"RTN","IVMPTRN5",9,0)
 ; of DHCP billing activity for IVM patients to the IVM Center.
"RTN","IVMPTRN5",10,0)
 ;
"RTN","IVMPTRN5",11,0)
 K ^TMP("IVMPTRN5",$J)
"RTN","IVMPTRN5",12,0)
 D IVMPT ;                                get data for IVM patients
"RTN","IVMPTRN5",13,0)
 D INS^IBAMTV4("^TMP(""IVMPTRN5"",$J)") ; get data for Insurance patients
"RTN","IVMPTRN5",14,0)
 D UPDATE^IVMPTRN6 ;                      update file #301.61
"RTN","IVMPTRN5",15,0)
 D TRNSMT ;                               post transmissions
"RTN","IVMPTRN5",16,0)
 D TRNSMT^EASPTRN5            ;If any EDB Z09's to transmit - then send
"RTN","IVMPTRN5",17,0)
 Q
"RTN","IVMPTRN5",18,0)
 ;
"RTN","IVMPTRN5",19,0)
 ;
"RTN","IVMPTRN5",20,0)
IVMPT ; Get claims and patient charges for IVM patients
"RTN","IVMPTRN5",21,0)
 N DFN,IVMSTART,IVMEND
"RTN","IVMPTRN5",22,0)
 S DFN=0 F  S DFN=$O(^IVM(301.61,"C",DFN)) Q:'DFN  D
"RTN","IVMPTRN5",23,0)
 .S IVMSTART=$$INIT(DFN) S:'IVMSTART IVMEND=0
"RTN","IVMPTRN5",24,0)
 .I IVMSTART S IVMEND=$$FMADD^XLFDT(IVMSTART,364) S:IVMEND>DT IVMEND=DT
"RTN","IVMPTRN5",25,0)
 .D ALL^IBAMTV4(DFN,"^TMP(""IVMPTRN5"",$J)",IVMSTART,IVMEND)
"RTN","IVMPTRN5",26,0)
 Q
"RTN","IVMPTRN5",27,0)
 ;
"RTN","IVMPTRN5",28,0)
 ;
"RTN","IVMPTRN5",29,0)
TRNSMT ; Transmit required billing activity.
"RTN","IVMPTRN5",30,0)
 Q:'$D(^IVM(301.61,"ATR"))
"RTN","IVMPTRN5",31,0)
 ;
"RTN","IVMPTRN5",32,0)
 N HL,HLDT,HLDT1,HLEID,HLMID,MID,MTIEN,RESULT
"RTN","IVMPTRN5",33,0)
 S HLEID="VAMC "_$P($$SITE^VASITE,"^",3)_" ORU-Z09 SERVER"
"RTN","IVMPTRN5",34,0)
 S HLEID=$O(^ORD(101,"B",HLEID,0))
"RTN","IVMPTRN5",35,0)
 D INIT^IVMUFNC(HLEID,.HL) S HLMTN="ORU"
"RTN","IVMPTRN5",36,0)
 ;
"RTN","IVMPTRN5",37,0)
 S ICYR=0                                                    ;IVM*2*96
"RTN","IVMPTRN5",38,0)
 F  S ICYR=$O(^IVM(301.61,"ATR",ICYR)) Q:'ICYR  D
"RTN","IVMPTRN5",39,0)
 . D BLDZ09(ICYR)
"RTN","IVMPTRN5",40,0)
 D FILE^IVMPTRN3
"RTN","IVMPTRN5",41,0)
 K DFN,IVMPID,IVMTDA,IVMMTDT,IVMN,IVMSTOP,IVMEVENT,IVMHZIC,VAFPID,DGREL,DGINC,DGINR,DGDEP
"RTN","IVMPTRN5",42,0)
 D CLEAN^IVMUFNC
"RTN","IVMPTRN5",43,0)
 Q
"RTN","IVMPTRN5",44,0)
 ;
"RTN","IVMPTRN5",45,0)
BLDZ09(ICYR) ;create the Z09 per DFN
"RTN","IVMPTRN5",46,0)
 S DFN=0
"RTN","IVMPTRN5",47,0)
 F  S DFN=$O(^IVM(301.61,"ATR",ICYR,DFN)) Q:'DFN  D
"RTN","IVMPTRN5",48,0)
 .I $$WHERETO^EASPTRN1(ICYR,DFN) Q          ;Do not send EDB Z09's
"RTN","IVMPTRN5",49,0)
 .I IVMCT=0,$G(IVMGTOT) D FILE^HLTF
"RTN","IVMPTRN5",50,0)
 .S HLEVN=HLEVN+1
"RTN","IVMPTRN5",51,0)
 .;
"RTN","IVMPTRN5",52,0)
 .; FIND A SLOT FOR EACH BATCH
"RTN","IVMPTRN5",53,0)
 .I HLEVN#100=1 D
"RTN","IVMPTRN5",54,0)
 ..K HLDT,HLDT1,HLMID,MTIEN
"RTN","IVMPTRN5",55,0)
 ..D CREATE^HLTF(.HLMID,.MTIEN,.HLDT,.HLDT1)
"RTN","IVMPTRN5",56,0)
 .;
"RTN","IVMPTRN5",57,0)
 .; SET UP MSH SEGMENT
"RTN","IVMPTRN5",58,0)
 .S MID=HLMID_"-"_HLEVN
"RTN","IVMPTRN5",59,0)
 .D MSH^HLFNC2(.HL,MID,.RESULT)
"RTN","IVMPTRN5",60,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=RESULT
"RTN","IVMPTRN5",61,0)
 .;
"RTN","IVMPTRN5",62,0)
 .; - re-set msg control id into MSH segment
"RTN","IVMPTRN5",63,0)
 .D MSGID^IVMUFNC4(.IVMCT)
"RTN","IVMPTRN5",64,0)
 .;
"RTN","IVMPTRN5",65,0)
 .; - create PID segment
"RTN","IVMPTRN5",66,0)
 .K IVMPID,VAFPID
"RTN","IVMPTRN5",67,0)
 .S IVMPID=$$EN^VAFHLPID(DFN,"1,3,5,7,8,19") I $D(VAFPID(1)) S IVMPID(1)=VAFPID(1)
"RTN","IVMPTRN5",68,0)
 .;I $P(IVMPID_$G(IVMPID(1)),HLFS,20)["P" D PSEUDO^IVMPTRN1
"RTN","IVMPTRN5",69,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMPID
"RTN","IVMPTRN5",70,0)
 .I $D(IVMPID(1)) S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMPID(1)
"RTN","IVMPTRN5",71,0)
 .;
"RTN","IVMPTRN5",72,0)
 .; - find the patient's Means Test date and create ZIC segment
"RTN","IVMPTRN5",73,0)
 .S IVMTDA=$O(^IVM(301.61,"ATR",ICYR,DFN,0))
"RTN","IVMPTRN5",74,0)
 .S IVMMTDT=$S(IVMTDA:$P($G(^IVM(301.61,IVMTDA,0)),"^",5),1:DT)
"RTN","IVMPTRN5",75,0)
 .D ALL^DGMTU21(DFN,"V",IVMMTDT,"IPR",+$$LST^DGMTU(DFN,IVMMTDT))
"RTN","IVMPTRN5",76,0)
 .S IVMHZIC=$$EN^VAFHLZIC(+$G(DGINC("V")),"1,2")
"RTN","IVMPTRN5",77,0)
 .I '$P(IVMHZIC,"^",3) S $P(IVMHZIC,"^",3)=$$HLDATE^HLFNC($O(^IVM(301.5,"APT",DFN,0)))
"RTN","IVMPTRN5",78,0)
 .;
"RTN","IVMPTRN5",79,0)
 .; - find all transactions for the patient and create FT1 segments
"RTN","IVMPTRN5",80,0)
 .S IVMTDA=0 F  S IVMTDA=$O(^IVM(301.61,"ATR",ICYR,DFN,IVMTDA)) Q:'IVMTDA  D
"RTN","IVMPTRN5",81,0)
 ..S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$FT1^IVMUFNC3(IVMTDA)
"RTN","IVMPTRN5",82,0)
 ..S IVMN=$G(^IVM(301.61,IVMTDA,0))
"RTN","IVMPTRN5",83,0)
 ..;
"RTN","IVMPTRN5",84,0)
 ..; - if a payment has been made (or if the bill is closed),
"RTN","IVMPTRN5",85,0)
 ..; - but the bill has never been transmitted, re-transmit.
"RTN","IVMPTRN5",86,0)
 ..I ($P(IVMN,"^",9)!($P(IVMN,"^",10))),'$P(IVMN,"^",13) D
"RTN","IVMPTRN5",87,0)
 ...D NOW^%DTC S DA=IVMTDA,DIE="^IVM(301.61,",DR=".13////"_% D ^DIE
"RTN","IVMPTRN5",88,0)
 ...S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$FT1^IVMUFNC3(IVMTDA)
"RTN","IVMPTRN5",89,0)
 ..;
"RTN","IVMPTRN5",90,0)
 ..; - update transmission record
"RTN","IVMPTRN5",91,0)
 ..S IVMSTOP=0
"RTN","IVMPTRN5",92,0)
 ..I $P(IVMN,"^",10)!$P(IVMN,"^",11) S IVMSTOP=1
"RTN","IVMPTRN5",93,0)
 ..I $P(IVMN,"^",4)>1 S IVMSTOP=1
"RTN","IVMPTRN5",94,0)
 ..D NOW^%DTC S DR=".12////0;.13////"_%
"RTN","IVMPTRN5",95,0)
 ..I IVMSTOP S DR=DR_";.14////1"
"RTN","IVMPTRN5",96,0)
 ..S DR=DR_";1.03////"_%_";1.04////"_DUZ
"RTN","IVMPTRN5",97,0)
 ..S DA=IVMTDA,DIE="^IVM(301.61," D ^DIE K DA,DR,DIE
"RTN","IVMPTRN5",98,0)
 .;
"RTN","IVMPTRN5",99,0)
 .; - set ZIC segment
"RTN","IVMPTRN5",100,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMHZIC
"RTN","IVMPTRN5",101,0)
 .;
"RTN","IVMPTRN5",102,0)
 .S IVMEVENT="Z09"
"RTN","IVMPTRN5",103,0)
 .I HLEVN'<100 D FILE^IVMPTRN3
"RTN","IVMPTRN5",104,0)
 ;
"RTN","IVMPTRN5",105,0)
 Q
"RTN","IVMPTRN5",106,0)
 ;
"RTN","IVMPTRN5",107,0)
 ;
"RTN","IVMPTRN5",108,0)
INIT(DFN) ; Find the initial date for which to return patient charges.
"RTN","IVMPTRN5",109,0)
 ;  Input:   DFN  --  Pointer to the patient in file #2
"RTN","IVMPTRN5",110,0)
 ; Output:   Date patient became Cat C, or null (for ins. patients)
"RTN","IVMPTRN5",111,0)
 ;
"RTN","IVMPTRN5",112,0)
 N IVMDATE,X,Y S IVMDATE=0
"RTN","IVMPTRN5",113,0)
 I '$G(DFN) G INITQ
"RTN","IVMPTRN5",114,0)
 S X=0 F  S X=$O(^IVM(301.61,"C",DFN,X)) Q:'X  S Y=$G(^IVM(301.61,X,0)) I $P(Y,"^",4)>1,$P(Y,"^",5) S IVMDATE=$P(Y,"^",5) Q
"RTN","IVMPTRN5",115,0)
 I IVMDATE S IVMDATE=$P($$LST^DGMTU(DFN,IVMDATE),"^",2)
"RTN","IVMPTRN5",116,0)
INITQ Q IVMDATE
"RTN","IVMPTRN5",117,0)
 ;
"RTN","IVMPTRN5",118,0)
 ;Check DISABLE text in #101 to determine if communications with
"RTN","IVMPTRN5",119,0)
 ; Edb are active or not.  Text in this field indicates link is not
"RTN","IVMPTRN5",120,0)
 ; active
"RTN","IVMPTRN5",121,0)
 ;
"RTN","IVMPTRN5",122,0)
EDB(HLEID) S HLEID=$O(^ORD(101,"B",HLEID,0))
"RTN","IVMPTRN5",123,0)
 I 'HLEID Q 0                                 ;Protocol not defined
"RTN","IVMPTRN5",124,0)
 I $P(^ORD(101,HLEID,0),"^",3)="" Q 1         ;Edb protocol active
"RTN","IVMPTRN5",125,0)
 Q 0
"VER")
8.0^22
"^DD",301.61,301.61,0)
FIELD^^1.04^18
"^DD",301.61,301.61,0,"DT")
2940613
"^DD",301.61,301.61,0,"IX","ATR",301.61,.02)

"^DD",301.61,301.61,0,"IX","ATR1",301.61,.12)

"^DD",301.61,301.61,0,"IX","ATR2",301.61,.05)

"^DD",301.61,301.61,0,"IX","B",301.61,.01)

"^DD",301.61,301.61,0,"IX","C",301.61,.02)

"^DD",301.61,301.61,0,"NM","IVM BILLING TRANSMISSION")

"^DD",301.61,301.61,.01,0)
REFERENCE NUMBER^RF^^0;1^K:$L(X)>20!($L(X)<1)!'(X'?1P.E) X
"^DD",301.61,301.61,.01,1,0)
^.1
"^DD",301.61,301.61,.01,1,1,0)
301.61^B
"^DD",301.61,301.61,.01,1,1,1)
S ^IVM(301.61,"B",$E(X,1,30),DA)=""
"^DD",301.61,301.61,.01,1,1,2)
K ^IVM(301.61,"B",$E(X,1,30),DA)
"^DD",301.61,301.61,.01,3)
Answer must be 1-20 characters in length.
"^DD",301.61,301.61,.01,21,0)
^^4^4^2940825^^^
"^DD",301.61,301.61,.01,21,1,0)
This field is used to uniquely identify each bill or charge which
"^DD",301.61,301.61,.01,21,2,0)
is stored in this file.  This number will be equal to the bill
"^DD",301.61,301.61,.01,21,3,0)
number for insurance claims, or to the REFERENCE NUMBER (#.01)
"^DD",301.61,301.61,.01,21,4,0)
for charges stored in file #350, INTEGRATED BILLING ACTIONS.
"^DD",301.61,301.61,.01,"DT")
2940613
"^DD",301.61,301.61,.02,0)
PATIENT^P2'^DPT(^0;2^Q
"^DD",301.61,301.61,.02,1,0)
^.1
"^DD",301.61,301.61,.02,1,1,0)
301.61^C
"^DD",301.61,301.61,.02,1,1,1)
S ^IVM(301.61,"C",$E(X,1,30),DA)=""
"^DD",301.61,301.61,.02,1,1,2)
K ^IVM(301.61,"C",$E(X,1,30),DA)
"^DD",301.61,301.61,.02,1,1,"DT")
2940612
"^DD",301.61,301.61,.02,1,2,0)
301.61^ATR^MUMPS
"^DD",301.61,301.61,.02,1,2,1)
D SETATR^EASUFNC3(DA,X)
"^DD",301.61,301.61,.02,1,2,2)
D KILLATR^EASUFNC3(DA,X)
"^DD",301.61,301.61,.02,1,2,"%D",0)
^^4^4^3031222^
"^DD",301.61,301.61,.02,1,2,"%D",1,0)
This cross reference lists all billing transmission records, by patient,
"^DD",301.61,301.61,.02,1,2,"%D",2,0)
& Income Year billing occurred in, which need to be transmitted to the IVM
"^DD",301.61,301.61,.02,1,2,"%D",3,0)
Center. The 'ATR1' cross reference on the TRANSMIT BILL (#.12) field is 
"^DD",301.61,301.61,.02,1,2,"%D",4,0)
the companion to this cross reference.
"^DD",301.61,301.61,.02,1,2,"DT")
3031222
"^DD",301.61,301.61,.02,21,0)
^^2^2^2940612^
"^DD",301.61,301.61,.02,21,1,0)
This field points to the patient (in file #2) for whom the charge
"^DD",301.61,301.61,.02,21,2,0)
or bill was created.
"^DD",301.61,301.61,.02,"DT")
3031222
"^DD",301.61,301.61,.03,0)
CLASSIFICATION^S^1:INPATIENT;2:OUTPATIENT;3:PHARMACY REFILL;4:PROSTHETICS;^0;3^Q
"^DD",301.61,301.61,.03,21,0)
^^2^2^2940612^
"^DD",301.61,301.61,.03,21,1,0)
This field is used to determine whether the bill was for inpatient
"^DD",301.61,301.61,.03,21,2,0)
or outpatient care, or for a Pharmacy refill or a Prosthetics bill.
"^DD",301.61,301.61,.03,"DT")
2940612
"^DD",301.61,301.61,.04,0)
BILL TYPE^S^1:INS CLAIM;2:COPAYMENT;3:PER DIEM;^0;4^Q
"^DD",301.61,301.61,.04,21,0)
^^3^3^2940825^^
"^DD",301.61,301.61,.04,21,1,0)
This field is used to determine whether the bill was a claim to an
"^DD",301.61,301.61,.04,21,2,0)
insurance company or direct charge to the patient (Means Test
"^DD",301.61,301.61,.04,21,3,0)
copayment or per diem charge).
"^DD",301.61,301.61,.04,"DT")
2940612
"^DD",301.61,301.61,.05,0)
BILL FROM^D^^0;5^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",301.61,301.61,.05,1,0)
^.1
"^DD",301.61,301.61,.05,1,1,0)
301.61^ATR2^MUMPS
"^DD",301.61,301.61,.05,1,1,1)
D SETATR^EASUFNC3(DA,$P(^IVM(301.61,DA,0),"^",2))
"^DD",301.61,301.61,.05,1,1,2)
D KILLATR^EASUFNC3(DA,$P(^IVM(301.61,DA,0),"^",2))
"^DD",301.61,301.61,.05,1,1,"%D",0)
^^4^4^3031222^
"^DD",301.61,301.61,.05,1,1,"%D",1,0)
This cross reference is used to list all billing transmission records, 
"^DD",301.61,301.61,.05,1,1,"%D",2,0)
by patient & Income Year billing occurred in, which need to be tranmitted
"^DD",301.61,301.61,.05,1,1,"%D",3,0)
to the IVM Center.  The 'ATR' cross reference on the PATIENT (#.02) field
"^DD",301.61,301.61,.05,1,1,"%D",4,0)
is the companion to this cross reference.
"^DD",301.61,301.61,.05,1,1,"DT")
3031222
"^DD",301.61,301.61,.05,21,0)
^^2^2^2940825^^
"^DD",301.61,301.61,.05,21,1,0)
This field is used to store the initial date of care which is covered
"^DD",301.61,301.61,.05,21,2,0)
on the bill.
"^DD",301.61,301.61,.05,23,0)
^^2^2^2940825^
"^DD",301.61,301.61,.05,23,1,0)
The value of this field is retrieved from field #.14 of file #350,
"^DD",301.61,301.61,.05,23,2,0)
or field #151 of file #399.
"^DD",301.61,301.61,.05,"DT")
3031222
"^DD",301.61,301.61,.06,0)
BILL TO^D^^0;6^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",301.61,301.61,.06,3)

"^DD",301.61,301.61,.06,21,0)
^^2^2^2940825^^^
"^DD",301.61,301.61,.06,21,1,0)
This field is used to store the final date for care which is covered
"^DD",301.61,301.61,.06,21,2,0)
by the bill.
"^DD",301.61,301.61,.06,23,0)
^^2^2^2940825^
"^DD",301.61,301.61,.06,23,1,0)
The value of this field is retrieved from field #.15 of file #350,
"^DD",301.61,301.61,.06,23,2,0)
or field #152 of file #399.
"^DD",301.61,301.61,.06,"DT")
2940612
"^DD",301.61,301.61,.07,0)
DATE BILL CREATED^D^^0;7^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",301.61,301.61,.07,3)

"^DD",301.61,301.61,.07,21,0)
^^2^2^2940825^^
"^DD",301.61,301.61,.07,21,1,0)
This field is used to store the date on which the bill was processed
"^DD",301.61,301.61,.07,21,2,0)
and passed to the Accounts Receivable module.
"^DD",301.61,301.61,.07,23,0)
^^2^2^2940825^
"^DD",301.61,301.61,.07,23,1,0)
The value of this field is retrieved from field #14 of file #350,
"^DD",301.61,301.61,.07,23,2,0)
or field #12 of file #399.
"^DD",301.61,301.61,.07,"DT")
2940612
"^DD",301.61,301.61,.08,0)
AMOUNT BILLED^NJ11,2^^0;8^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>99999999)!(X<0) X
"^DD",301.61,301.61,.08,3)
Type a Dollar Amount between 0 and 99999999, 2 Decimal Digits
"^DD",301.61,301.61,.08,21,0)
^^1^1^2940825^^
"^DD",301.61,301.61,.08,21,1,0)
This field is used to store the total amount that was billed.
"^DD",301.61,301.61,.08,23,0)
^^3^3^2940825^
"^DD",301.61,301.61,.08,23,1,0)
The value of this field is retrieved from field #.07 of file #350,
"^DD",301.61,301.61,.08,23,2,0)
or the Original Amount of the receivable established in the AR
"^DD",301.61,301.61,.08,23,3,0)
package.
"^DD",301.61,301.61,.08,"DT")
2940612
"^DD",301.61,301.61,.09,0)
AMOUNT COLLECTED^NJ11,2^^0;9^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>99999999)!(X<0) X
"^DD",301.61,301.61,.09,3)
Type a Dollar Amount between 0 and 99999999, 2 Decimal Digits
"^DD",301.61,301.61,.09,21,0)
^^2^2^2940825^^
"^DD",301.61,301.61,.09,21,1,0)
This field is used to store the total amount collected an the bill.
"^DD",301.61,301.61,.09,21,2,0)
This field will only be used for insurance claims.
"^DD",301.61,301.61,.09,23,0)
^^2^2^2940825^
"^DD",301.61,301.61,.09,23,1,0)
For insurance claims. this is the total paid principal established
"^DD",301.61,301.61,.09,23,2,0)
in the AR package.
"^DD",301.61,301.61,.09,"DT")
2940612
"^DD",301.61,301.61,.1,0)
DATE BILL CLOSED^D^^0;10^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",301.61,301.61,.1,21,0)
^^3^3^2940825^^
"^DD",301.61,301.61,.1,21,1,0)
This field is used to store the date that a bill was closed out
"^DD",301.61,301.61,.1,21,2,0)
in Accounts Receivable.  This field is only used for insurance
"^DD",301.61,301.61,.1,21,3,0)
claims.
"^DD",301.61,301.61,.1,23,0)
^^2^2^2940825^
"^DD",301.61,301.61,.1,23,1,0)
For insurance claims. this is the date the receivable was closed
"^DD",301.61,301.61,.1,23,2,0)
out in the AR package.
"^DD",301.61,301.61,.1,"DT")
2940612
"^DD",301.61,301.61,.11,0)
BILL CANCELLED^S^0:NO;1:YES;^0;11^Q
"^DD",301.61,301.61,.11,21,0)
^^1^1^2940612^
"^DD",301.61,301.61,.11,21,1,0)
This field is used to flag bills which were subsequently cancelled.
"^DD",301.61,301.61,.11,"DT")
2940612
"^DD",301.61,301.61,.12,0)
TRANSMIT BILL^S^0:NO;1:YES;^0;12^Q
"^DD",301.61,301.61,.12,1,0)
^.1
"^DD",301.61,301.61,.12,1,1,0)
301.61^ATR1^MUMPS
"^DD",301.61,301.61,.12,1,1,1)
D SETATR^EASUFNC3(DA,$P(^IVM(301.61,DA,0),"^",2))
"^DD",301.61,301.61,.12,1,1,2)
D KILLATR^EASUFNC3(DA,$P(^IVM(301.61,DA,0),"^",2))
"^DD",301.61,301.61,.12,1,1,"%D",0)
^^4^4^3031222^
"^DD",301.61,301.61,.12,1,1,"%D",1,0)
This cross reference is used to list all billing transmission records,
"^DD",301.61,301.61,.12,1,1,"%D",2,0)
by patient & Income Year billing occurred in, which need to be tranmitted 
"^DD",301.61,301.61,.12,1,1,"%D",3,0)
to the IVM Center.  The 'ATR' cross reference on the PATIENT (#.02) field
"^DD",301.61,301.61,.12,1,1,"%D",4,0)
is the companion to this cross reference.
"^DD",301.61,301.61,.12,1,1,"DT")
3031222
"^DD",301.61,301.61,.12,21,0)
^^2^2^2940612^
"^DD",301.61,301.61,.12,21,1,0)
This field is used to determine whether the billing information
"^DD",301.61,301.61,.12,21,2,0)
should be transmitted to the IVM Center.
"^DD",301.61,301.61,.12,"DT")
3031222
"^DD",301.61,301.61,.13,0)
DATE LAST TRANSMITTED^D^^0;13^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",301.61,301.61,.13,21,0)
^^2^2^2940612^
"^DD",301.61,301.61,.13,21,1,0)
This field is used to store the last date/time that the billing
"^DD",301.61,301.61,.13,21,2,0)
information was transmitted to the IVM Center.
"^DD",301.61,301.61,.13,"DT")
2940612
"^DD",301.61,301.61,.14,0)
STOP TRANSMISSIONS^S^0:NO;1:YES;^0;14^Q
"^DD",301.61,301.61,.14,21,0)
^^2^2^2940612^
"^DD",301.61,301.61,.14,21,1,0)
This field is used to determine whether any additional billing
"^DD",301.61,301.61,.14,21,2,0)
information needs to be transmitted to the IVM Center.
"^DD",301.61,301.61,.14,"DT")
2940612
"^DD",301.61,301.61,1.01,0)
DATE ENTRY ADDED^D^^1;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",301.61,301.61,1.01,21,0)
^^1^1^2940612^
"^DD",301.61,301.61,1.01,21,1,0)
This field stores the date/time that the entry was added to the file.
"^DD",301.61,301.61,1.01,"DT")
2940612
"^DD",301.61,301.61,1.02,0)
USER ADDING ENTRY^P200'^VA(200,^1;2^Q
"^DD",301.61,301.61,1.02,21,0)
^^2^2^2940612^
"^DD",301.61,301.61,1.02,21,1,0)
This field stores the user who added, or caused the entry to be added
"^DD",301.61,301.61,1.02,21,2,0)
to the file.
"^DD",301.61,301.61,1.02,"DT")
2940612
"^DD",301.61,301.61,1.03,0)
DATE LAST UPDATED^D^^1;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",301.61,301.61,1.03,21,0)
^^1^1^2940612^
"^DD",301.61,301.61,1.03,21,1,0)
This field stores the date/time that the entry was last updated.
"^DD",301.61,301.61,1.03,"DT")
2940612
"^DD",301.61,301.61,1.04,0)
USER UPDATING ENTRY^P200'^VA(200,^1;4^Q
"^DD",301.61,301.61,1.04,21,0)
^^2^2^2940612^
"^DD",301.61,301.61,1.04,21,1,0)
This field stores the user who updated, or caused the record to
"^DD",301.61,301.61,1.04,21,2,0)
be updated.
"^DD",301.61,301.61,1.04,"DT")
2940612
"^DIC",301.61,301.61,0)
IVM BILLING TRANSMISSION^301.61
"^DIC",301.61,301.61,0,"GL")
^IVM(301.61,
"^DIC",301.61,301.61,"%D",0)
^^5^5^2940825^^^^
"^DIC",301.61,301.61,"%D",1,0)
This file is used to track DHCP billing activity which has been
"^DIC",301.61,301.61,"%D",2,0)
transmitted to the IVM Center.  The data in this file is maintained
"^DIC",301.61,301.61,"%D",3,0)
by the IVM software module and should not be altered.
"^DIC",301.61,301.61,"%D",4,0)
 
"^DIC",301.61,301.61,"%D",5,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",301.61,"B","IVM BILLING TRANSMISSION",301.61)

**END**
**END**
