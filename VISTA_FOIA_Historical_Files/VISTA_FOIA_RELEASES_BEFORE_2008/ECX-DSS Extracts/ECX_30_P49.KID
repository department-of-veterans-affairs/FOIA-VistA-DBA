KIDS Distribution saved on Oct 28, 2003@13:57:25
FY2004 DSS EXTRACTS - ECX*3.0*49
**KIDS**:ECX*3.0*49^

**INSTALL NAME**
ECX*3.0*49
"BLD",4868,0)
ECX*3.0*49^DSS EXTRACTS^0^3031028^y
"BLD",4868,4,0)
^9.64PA^728^8
"BLD",4868,4,727,0)
727
"BLD",4868,4,727,2,0)
^9.641^727^1
"BLD",4868,4,727,2,727,0)
DSS EXTRACT LOG  (File-top level)
"BLD",4868,4,727,2,727,1,0)
^9.6411^14^1
"BLD",4868,4,727,2,727,1,14,0)
EXTRACT LOGIC
"BLD",4868,4,727,222)
y^n^p^^^^n^^n
"BLD",4868,4,727,224)

"BLD",4868,4,727.1,0)
727.1
"BLD",4868,4,727.1,2,0)
^9.641^727.1^1
"BLD",4868,4,727.1,2,727.1,0)
EXTRACT DEFINITIONS  (File-top level)
"BLD",4868,4,727.1,2,727.1,1,0)
^9.6411^13^1
"BLD",4868,4,727.1,2,727.1,1,13,0)
INACTIVE
"BLD",4868,4,727.1,222)
y^n^p^^^^n^^n
"BLD",4868,4,727.1,224)

"BLD",4868,4,727.809,0)
727.809
"BLD",4868,4,727.809,2,0)
^9.641^727.809^1
"BLD",4868,4,727.809,2,727.809,0)
UNIT DOSE LOCAL EXTRACT  (File-top level)
"BLD",4868,4,727.809,2,727.809,1,0)
^9.6411^66^5
"BLD",4868,4,727.809,2,727.809,1,62,0)
BCMA DRUG DISPENSED
"BLD",4868,4,727.809,2,727.809,1,63,0)
BCMA DOSE GIVEN
"BLD",4868,4,727.809,2,727.809,1,64,0)
BCMA UNIT OF ADMINISTRATION
"BLD",4868,4,727.809,2,727.809,1,65,0)
BCMA ICU FLAG
"BLD",4868,4,727.809,2,727.809,1,66,0)
ORDERING PROVIDER PERSON CLASS
"BLD",4868,4,727.809,222)
y^n^p^^^^n^^n
"BLD",4868,4,727.809,224)

"BLD",4868,4,727.815,0)
727.815
"BLD",4868,4,727.815,2,0)
^9.641^727.815^1
"BLD",4868,4,727.815,2,727.815,0)
EVENT CAPTURE LOCAL EXTRACT  (File-top level)
"BLD",4868,4,727.815,2,727.815,1,0)
^9.6411^74^1
"BLD",4868,4,727.815,2,727.815,1,74,0)
ENROLLMENT LOCATION
"BLD",4868,4,727.815,222)
y^n^p^^^^n^^n
"BLD",4868,4,727.815,224)

"BLD",4868,4,727.819,0)
727.819
"BLD",4868,4,727.819,2,0)
^9.641^727.819^1
"BLD",4868,4,727.819,2,727.819,0)
IV DETAIL EXTRACT  (File-top level)
"BLD",4868,4,727.819,2,727.819,1,0)
^9.6411^71^5
"BLD",4868,4,727.819,2,727.819,1,67,0)
BCMA DRUG DISPENSED
"BLD",4868,4,727.819,2,727.819,1,68,0)
BCMA DOSE GIVEN
"BLD",4868,4,727.819,2,727.819,1,69,0)
BCMA UNIT OF ADMINISTRATION
"BLD",4868,4,727.819,2,727.819,1,70,0)
BCMA ICU FLAG
"BLD",4868,4,727.819,2,727.819,1,71,0)
ORDERING PROVIDER PERSON CLASS
"BLD",4868,4,727.819,222)
y^n^p^^^^n^^n
"BLD",4868,4,727.819,224)

"BLD",4868,4,727.825,0)
727.825
"BLD",4868,4,727.825,2,0)
^9.641^727.825^1
"BLD",4868,4,727.825,2,727.825,0)
QUASAR EXTRACT  (File-top level)
"BLD",4868,4,727.825,2,727.825,1,0)
^9.6411^74^1
"BLD",4868,4,727.825,2,727.825,1,74,0)
ENROLLMENT LOCATION
"BLD",4868,4,727.825,222)
y^n^p^^^^n^^n
"BLD",4868,4,727.825,224)

"BLD",4868,4,727.827,0)
727.827
"BLD",4868,4,727.827,2,0)
^9.641^727.827^1
"BLD",4868,4,727.827,2,727.827,0)
CLINIC EXTRACT  (File-top level)
"BLD",4868,4,727.827,2,727.827,1,0)
^9.6411^75^1
"BLD",4868,4,727.827,2,727.827,1,75,0)
CBOC STATUS INDICATOR
"BLD",4868,4,727.827,222)
y^n^p^^^^n^^n
"BLD",4868,4,727.827,224)

"BLD",4868,4,728,0)
728
"BLD",4868,4,728,222)
y^n^f^^^^n^^n
"BLD",4868,4,728,224)

"BLD",4868,4,"APDD",727,727)

"BLD",4868,4,"APDD",727,727,14)

"BLD",4868,4,"APDD",727.1,727.1)

"BLD",4868,4,"APDD",727.1,727.1,13)

"BLD",4868,4,"APDD",727.809,727.809)

"BLD",4868,4,"APDD",727.809,727.809,62)

"BLD",4868,4,"APDD",727.809,727.809,63)

"BLD",4868,4,"APDD",727.809,727.809,64)

"BLD",4868,4,"APDD",727.809,727.809,65)

"BLD",4868,4,"APDD",727.809,727.809,66)

"BLD",4868,4,"APDD",727.815,727.815)

"BLD",4868,4,"APDD",727.815,727.815,74)

"BLD",4868,4,"APDD",727.819,727.819)

"BLD",4868,4,"APDD",727.819,727.819,67)

"BLD",4868,4,"APDD",727.819,727.819,68)

"BLD",4868,4,"APDD",727.819,727.819,69)

"BLD",4868,4,"APDD",727.819,727.819,70)

"BLD",4868,4,"APDD",727.819,727.819,71)

"BLD",4868,4,"APDD",727.825,727.825)

"BLD",4868,4,"APDD",727.825,727.825,74)

"BLD",4868,4,"APDD",727.827,727.827)

"BLD",4868,4,"APDD",727.827,727.827,75)

"BLD",4868,4,"B",727,727)

"BLD",4868,4,"B",727.1,727.1)

"BLD",4868,4,"B",727.809,727.809)

"BLD",4868,4,"B",727.815,727.815)

"BLD",4868,4,"B",727.819,727.819)

"BLD",4868,4,"B",727.825,727.825)

"BLD",4868,4,"B",727.827,727.827)

"BLD",4868,4,"B",728,728)

"BLD",4868,"ABPKG")
n
"BLD",4868,"INI")

"BLD",4868,"INID")
^
"BLD",4868,"INIT")
POST^ECX3049
"BLD",4868,"KRN",0)
^9.67PA^8989.52^19
"BLD",4868,"KRN",.4,0)
.4
"BLD",4868,"KRN",.4,"NM",0)
^9.68A^^
"BLD",4868,"KRN",.401,0)
.401
"BLD",4868,"KRN",.402,0)
.402
"BLD",4868,"KRN",.403,0)
.403
"BLD",4868,"KRN",.5,0)
.5
"BLD",4868,"KRN",.84,0)
.84
"BLD",4868,"KRN",3.6,0)
3.6
"BLD",4868,"KRN",3.8,0)
3.8
"BLD",4868,"KRN",9.2,0)
9.2
"BLD",4868,"KRN",9.8,0)
9.8
"BLD",4868,"KRN",9.8,"NM",0)
^9.68A^50^29
"BLD",4868,"KRN",9.8,"NM",7,0)
ECXSCXN^^0^B83811770
"BLD",4868,"KRN",9.8,"NM",11,0)
ECXEC^^0^B29847517
"BLD",4868,"KRN",9.8,"NM",12,0)
ECXQSR^^0^B48509545
"BLD",4868,"KRN",9.8,"NM",13,0)
ECXPIVDN^^0^B60333256
"BLD",4868,"KRN",9.8,"NM",14,0)
ECXMTL^^0^B25539892
"BLD",4868,"KRN",9.8,"NM",18,0)
ECXUD^^0^B39722973
"BLD",4868,"KRN",9.8,"NM",28,0)
ECXTRT^^0^B48711867
"BLD",4868,"KRN",9.8,"NM",29,0)
ECXTRANS^^0^B51749382
"BLD",4868,"KRN",9.8,"NM",30,0)
ECXOPRX^^0^B62185341
"BLD",4868,"KRN",9.8,"NM",31,0)
ECXSCNS^^1^
"BLD",4868,"KRN",9.8,"NM",32,0)
ECXAPHA^^0^B28973464
"BLD",4868,"KRN",9.8,"NM",33,0)
ECXAPHA2^^0^B21127139
"BLD",4868,"KRN",9.8,"NM",34,0)
ECXUCBOC^^0^B66849120
"BLD",4868,"KRN",9.8,"NM",35,0)
ECXUPRO^^0^B23072481
"BLD",4868,"KRN",9.8,"NM",36,0)
ECXUPRO1^^0^B6816358
"BLD",4868,"KRN",9.8,"NM",37,0)
ECXUSUR^^0^B22897989
"BLD",4868,"KRN",9.8,"NM",38,0)
ECXUSUR1^^0^B10773880
"BLD",4868,"KRN",9.8,"NM",39,0)
ECXUCPT^^0^B2891121
"BLD",4868,"KRN",9.8,"NM",40,0)
ECXUTL4^^0^B40522905
"BLD",4868,"KRN",9.8,"NM",41,0)
ECX3049^^0^B17754499
"BLD",4868,"KRN",9.8,"NM",42,0)
ECXKILL^^0^B5975044
"BLD",4868,"KRN",9.8,"NM",43,0)
ECXTAUTO^^0^B32126653
"BLD",4868,"KRN",9.8,"NM",44,0)
ECXTLOCL^^0^B9199336
"BLD",4868,"KRN",9.8,"NM",45,0)
ECXTRAC^^0^B55792203
"BLD",4868,"KRN",9.8,"NM",46,0)
ECXTREX^^0^B11293888
"BLD",4868,"KRN",9.8,"NM",47,0)
ECXUTL1^^0^B8865457
"BLD",4868,"KRN",9.8,"NM",48,0)
ECXPURG1^^0^B35510892
"BLD",4868,"KRN",9.8,"NM",49,0)
ECXPURG^^0^B15706994
"BLD",4868,"KRN",9.8,"NM",50,0)
ECXSCX2^^0^B8083580
"BLD",4868,"KRN",9.8,"NM","B","ECX3049",41)

"BLD",4868,"KRN",9.8,"NM","B","ECXAPHA",32)

"BLD",4868,"KRN",9.8,"NM","B","ECXAPHA2",33)

"BLD",4868,"KRN",9.8,"NM","B","ECXEC",11)

"BLD",4868,"KRN",9.8,"NM","B","ECXKILL",42)

"BLD",4868,"KRN",9.8,"NM","B","ECXMTL",14)

"BLD",4868,"KRN",9.8,"NM","B","ECXOPRX",30)

"BLD",4868,"KRN",9.8,"NM","B","ECXPIVDN",13)

"BLD",4868,"KRN",9.8,"NM","B","ECXPURG",49)

"BLD",4868,"KRN",9.8,"NM","B","ECXPURG1",48)

"BLD",4868,"KRN",9.8,"NM","B","ECXQSR",12)

"BLD",4868,"KRN",9.8,"NM","B","ECXSCNS",31)

"BLD",4868,"KRN",9.8,"NM","B","ECXSCX2",50)

"BLD",4868,"KRN",9.8,"NM","B","ECXSCXN",7)

"BLD",4868,"KRN",9.8,"NM","B","ECXTAUTO",43)

"BLD",4868,"KRN",9.8,"NM","B","ECXTLOCL",44)

"BLD",4868,"KRN",9.8,"NM","B","ECXTRAC",45)

"BLD",4868,"KRN",9.8,"NM","B","ECXTRANS",29)

"BLD",4868,"KRN",9.8,"NM","B","ECXTREX",46)

"BLD",4868,"KRN",9.8,"NM","B","ECXTRT",28)

"BLD",4868,"KRN",9.8,"NM","B","ECXUCBOC",34)

"BLD",4868,"KRN",9.8,"NM","B","ECXUCPT",39)

"BLD",4868,"KRN",9.8,"NM","B","ECXUD",18)

"BLD",4868,"KRN",9.8,"NM","B","ECXUPRO",35)

"BLD",4868,"KRN",9.8,"NM","B","ECXUPRO1",36)

"BLD",4868,"KRN",9.8,"NM","B","ECXUSUR",37)

"BLD",4868,"KRN",9.8,"NM","B","ECXUSUR1",38)

"BLD",4868,"KRN",9.8,"NM","B","ECXUTL1",47)

"BLD",4868,"KRN",9.8,"NM","B","ECXUTL4",40)

"BLD",4868,"KRN",19,0)
19
"BLD",4868,"KRN",19,"NM",0)
^9.68A^12^10
"BLD",4868,"KRN",19,"NM",1,0)
ECXSCNS^^1^
"BLD",4868,"KRN",19,"NM",2,0)
ECX CBOC REPORT^^0
"BLD",4868,"KRN",19,"NM",3,0)
ECX PRO COST^^0
"BLD",4868,"KRN",19,"NM",4,0)
ECX SUR VOL^^0
"BLD",4868,"KRN",19,"NM",5,0)
ECX UNUSUAL REPORTS^^0
"BLD",4868,"KRN",19,"NM",7,0)
ECX FISCAL YEAR EXTRACT^^0
"BLD",4868,"KRN",19,"NM",8,0)
ECXMENU^^2
"BLD",4868,"KRN",19,"NM",9,0)
ECX MAINTENANCE^^2
"BLD",4868,"KRN",19,"NM",11,0)
ECX CPT INQUIRY^^0
"BLD",4868,"KRN",19,"NM",12,0)
ECX PHA VOL^^0^
"BLD",4868,"KRN",19,"NM","B","ECX CBOC REPORT",2)

"BLD",4868,"KRN",19,"NM","B","ECX CPT INQUIRY",11)

"BLD",4868,"KRN",19,"NM","B","ECX FISCAL YEAR EXTRACT",7)

"BLD",4868,"KRN",19,"NM","B","ECX MAINTENANCE",9)

"BLD",4868,"KRN",19,"NM","B","ECX PHA VOL",12)

"BLD",4868,"KRN",19,"NM","B","ECX PRO COST",3)

"BLD",4868,"KRN",19,"NM","B","ECX SUR VOL",4)

"BLD",4868,"KRN",19,"NM","B","ECX UNUSUAL REPORTS",5)

"BLD",4868,"KRN",19,"NM","B","ECXMENU",8)

"BLD",4868,"KRN",19,"NM","B","ECXSCNS",1)

"BLD",4868,"KRN",19.1,0)
19.1
"BLD",4868,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",4868,"KRN",101,0)
101
"BLD",4868,"KRN",409.61,0)
409.61
"BLD",4868,"KRN",771,0)
771
"BLD",4868,"KRN",870,0)
870
"BLD",4868,"KRN",8989.51,0)
8989.51
"BLD",4868,"KRN",8989.52,0)
8989.52
"BLD",4868,"KRN",8994,0)
8994
"BLD",4868,"KRN","B",.4,.4)

"BLD",4868,"KRN","B",.401,.401)

"BLD",4868,"KRN","B",.402,.402)

"BLD",4868,"KRN","B",.403,.403)

"BLD",4868,"KRN","B",.5,.5)

"BLD",4868,"KRN","B",.84,.84)

"BLD",4868,"KRN","B",3.6,3.6)

"BLD",4868,"KRN","B",3.8,3.8)

"BLD",4868,"KRN","B",9.2,9.2)

"BLD",4868,"KRN","B",9.8,9.8)

"BLD",4868,"KRN","B",19,19)

"BLD",4868,"KRN","B",19.1,19.1)

"BLD",4868,"KRN","B",101,101)

"BLD",4868,"KRN","B",409.61,409.61)

"BLD",4868,"KRN","B",771,771)

"BLD",4868,"KRN","B",870,870)

"BLD",4868,"KRN","B",8989.51,8989.51)

"BLD",4868,"KRN","B",8989.52,8989.52)

"BLD",4868,"KRN","B",8994,8994)

"BLD",4868,"PRET")
 
"BLD",4868,"QUES",0)
^9.62^^
"BLD",4868,"REQB",0)
^9.611^6^1
"BLD",4868,"REQB",6,0)
ECX*3.0*46^2
"BLD",4868,"REQB","B","ECX*3.0*46",6)

"FIA",727)
DSS EXTRACT LOG
"FIA",727,0)
^ECX(727,
"FIA",727,0,0)
727I
"FIA",727,0,1)
y^n^p^^^^n^^n
"FIA",727,0,10)

"FIA",727,0,11)

"FIA",727,0,"RLRO")

"FIA",727,0,"VR")
3.0^ECX
"FIA",727,727)
1
"FIA",727,727,14)

"FIA",727.1)
EXTRACT DEFINITIONS
"FIA",727.1,0)
^ECX(727.1,
"FIA",727.1,0,0)
727.1
"FIA",727.1,0,1)
y^n^p^^^^n^^n
"FIA",727.1,0,10)

"FIA",727.1,0,11)

"FIA",727.1,0,"RLRO")

"FIA",727.1,0,"VR")
3.0^ECX
"FIA",727.1,727.1)
1
"FIA",727.1,727.1,13)

"FIA",727.809)
UNIT DOSE LOCAL EXTRACT
"FIA",727.809,0)
^ECX(727.809,
"FIA",727.809,0,0)
727.809
"FIA",727.809,0,1)
y^n^p^^^^n^^n
"FIA",727.809,0,10)

"FIA",727.809,0,11)

"FIA",727.809,0,"RLRO")

"FIA",727.809,0,"VR")
3.0^ECX
"FIA",727.809,727.809)
1
"FIA",727.809,727.809,62)

"FIA",727.809,727.809,63)

"FIA",727.809,727.809,64)

"FIA",727.809,727.809,65)

"FIA",727.809,727.809,66)

"FIA",727.815)
EVENT CAPTURE LOCAL EXTRACT
"FIA",727.815,0)
^ECX(727.815,
"FIA",727.815,0,0)
727.815
"FIA",727.815,0,1)
y^n^p^^^^n^^n
"FIA",727.815,0,10)

"FIA",727.815,0,11)

"FIA",727.815,0,"RLRO")

"FIA",727.815,0,"VR")
3.0^ECX
"FIA",727.815,727.815)
1
"FIA",727.815,727.815,74)

"FIA",727.819)
IV DETAIL EXTRACT
"FIA",727.819,0)
^ECX(727.819,
"FIA",727.819,0,0)
727.819
"FIA",727.819,0,1)
y^n^p^^^^n^^n
"FIA",727.819,0,10)

"FIA",727.819,0,11)

"FIA",727.819,0,"RLRO")

"FIA",727.819,0,"VR")
3.0^ECX
"FIA",727.819,727.819)
1
"FIA",727.819,727.819,67)

"FIA",727.819,727.819,68)

"FIA",727.819,727.819,69)

"FIA",727.819,727.819,70)

"FIA",727.819,727.819,71)

"FIA",727.825)
QUASAR EXTRACT
"FIA",727.825,0)
^ECX(727.825,
"FIA",727.825,0,0)
727.825
"FIA",727.825,0,1)
y^n^p^^^^n^^n
"FIA",727.825,0,10)

"FIA",727.825,0,11)

"FIA",727.825,0,"RLRO")

"FIA",727.825,0,"VR")
3.0^ECX
"FIA",727.825,727.825)
1
"FIA",727.825,727.825,74)

"FIA",727.827)
CLINIC EXTRACT
"FIA",727.827,0)
^ECX(727.827,
"FIA",727.827,0,0)
727.827
"FIA",727.827,0,1)
y^n^p^^^^n^^n
"FIA",727.827,0,10)

"FIA",727.827,0,11)

"FIA",727.827,0,"RLRO")

"FIA",727.827,0,"VR")
3.0^ECX
"FIA",727.827,727.827)
1
"FIA",727.827,727.827,75)

"FIA",728)
DSS EXTRACTS
"FIA",728,0)
^ECX(728,
"FIA",728,0,0)
728P
"FIA",728,0,1)
y^n^f^^^^n^^n
"FIA",728,0,10)

"FIA",728,0,11)

"FIA",728,0,"RLRO")

"FIA",728,0,"VR")
3.0^ECX
"FIA",728,728)
0
"FIA",728,728.059)
0
"FIA",728,728.068)
0
"INIT")
POST^ECX3049
"KRN",19,10119,-1)
2^8
"KRN",19,10119,0)
ECXMENU^Package Extracts^^M^11714^ECXMGR^^^^^^513
"KRN",19,10119,10,0)
^19.01IP^23^23
"KRN",19,10119,10,23,0)
12462
"KRN",19,10119,10,23,"^")
ECX FISCAL YEAR EXTRACT
"KRN",19,10119,"U")
PACKAGE EXTRACTS
"KRN",19,10161,-1)
2^9
"KRN",19,10161,0)
ECX MAINTENANCE^Maintenance^^M^11714^ECXMGR^^^^^^513
"KRN",19,10161,10,0)
^19.01IP^19^19
"KRN",19,10161,10,16,0)
12456^15^80
"KRN",19,10161,10,16,"^")
ECX CBOC REPORT
"KRN",19,10161,10,18,0)
12457^12^65
"KRN",19,10161,10,18,"^")
ECX UNUSUAL REPORTS
"KRN",19,10161,10,19,0)
12463^16^85
"KRN",19,10161,10,19,"^")
ECX CPT INQUIRY
"KRN",19,10161,"U")
MAINTENANCE
"KRN",19,12456,-1)
0^2
"KRN",19,12456,0)
ECX CBOC REPORT^CBOC Activity Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12456,1,0)
^19.06^6^6^3030923^^^^
"KRN",19,12456,1,1,0)
This option displays all records from the CLI Extract that have a 
"KRN",19,12456,1,2,0)
Community Based Outpatient Clinic (CBOC) status of Y (=yes).  The 
"KRN",19,12456,1,3,0)
report is grouped by Feeder Key,Division, and Clinic; it lists the P
"KRN",19,12456,1,4,0)
atient Name, SSN, and Date of Visit for each record.  Totals for 
"KRN",19,12456,1,5,0)
unique SSNs and Visits will be printed for each Clinic, Division, 
"KRN",19,12456,1,6,0)
and Feeder Key, as well as overall totals for the station.
"KRN",19,12456,25)
EN^ECXUCBOC
"KRN",19,12456,"U")
CBOC ACTIVITY REPORT
"KRN",19,12457,-1)
0^5
"KRN",19,12457,0)
ECX UNUSUAL REPORTS^Extracts Unusual Reports^^M^^^^^^^^DSS EXTRACTS
"KRN",19,12457,1,0)
^19.06^2^2^3030715^^
"KRN",19,12457,1,1,0)
This menu provides the extract manager with a set of report
"KRN",19,12457,1,2,0)
with unusual results.
"KRN",19,12457,10,0)
^19.01IP^4^4
"KRN",19,12457,10,2,0)
12458^2^20
"KRN",19,12457,10,2,"^")
ECX PRO COST
"KRN",19,12457,10,3,0)
12459^3^30
"KRN",19,12457,10,3,"^")
ECX SUR VOL
"KRN",19,12457,10,4,0)
12464^1^10
"KRN",19,12457,10,4,"^")
ECX PHA VOL
"KRN",19,12457,99)
59458,41167
"KRN",19,12457,"U")
EXTRACTS UNUSUAL REPORTS
"KRN",19,12458,-1)
0^3
"KRN",19,12458,0)
ECX PRO COST^Prosthetic Extract Unusual Cost Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12458,1,0)
0
"KRN",19,12458,25)
EN^ECXUPRO
"KRN",19,12458,"U")
PROSTHETIC EXTRACT UNUSUAL COS
"KRN",19,12459,-1)
0^4
"KRN",19,12459,0)
ECX SUR VOL^Surgery Extract Unusual Volume Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12459,1,0)
^19.06^9^9^3030715^^
"KRN",19,12459,1,1,0)
This option creates a report that lists unusual volumes that would be generated
"KRN",19,12459,1,2,0)
by the Surgery extract (SUR) as determined by a user-defined threshold value.
"KRN",19,12459,1,3,0)
It should be run prior to the generation of the actual extract to identify and
"KRN",19,12459,1,4,0)
fix, as necessary, any volumes determined to be erroneous.
"KRN",19,12459,1,5,0)

"KRN",19,12459,1,6,0)
Unusual volumes are defined as Operation Time, Patient Time, or Anesthesia Time
"KRN",19,12459,1,7,0)
fields greater than the threshold value.
"KRN",19,12459,1,8,0)

"KRN",19,12459,1,9,0)
The report is sorted by descending Volume and Case Number.
"KRN",19,12459,25)
EN^ECXUSUR
"KRN",19,12459,"U")
SURGERY EXTRACT UNUSUAL VOLUME
"KRN",19,12462,-1)
0^7
"KRN",19,12462,0)
ECX FISCAL YEAR EXTRACT^Extract data using chosen fiscal year logic^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,12462,1,0)
^19.06^7^7^3030915^^
"KRN",19,12462,1,1,0)
This option allows the user to run any nationally supported DSS extract
"KRN",19,12462,1,2,0)
for any timeframe using user selected fiscal year extract logic.  The
"KRN",19,12462,1,3,0)
extracts were baselined to FY 2003 logic.
"KRN",19,12462,1,4,0)
 
"KRN",19,12462,1,5,0)
Extracts for current fiscal year data using current fiscal year logic
"KRN",19,12462,1,6,0)
will go to AAC production queue; everything else goes to the AAC test 
"KRN",19,12462,1,7,0)
queue.
"KRN",19,12462,25)
EN^ECXTREX
"KRN",19,12462,"U")
EXTRACT DATA USING CHOSEN FISC
"KRN",19,12463,-1)
0^11
"KRN",19,12463,0)
ECX CPT INQUIRY^CPT Inquiry^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12463,1,0)
^19.06^2^2^3030923^^^
"KRN",19,12463,1,1,0)
This inquiry allows the user to select a CPT code, then displays the Short
"KRN",19,12463,1,2,0)
Name, Category, and Description for the selected code.
"KRN",19,12463,25)
EN^ECXUCPT
"KRN",19,12463,"U")
CPT INQUIRY
"KRN",19,12464,-1)
0^12
"KRN",19,12464,0)
ECX PHA VOL^Pharmacy Extracts Unusual Volume Report^^R^^^^^^^^
"KRN",19,12464,25)
EN^ECXAPHA
"KRN",19,12464,99)
59457,58244
"KRN",19,12464,"U")
PHARMACY EXTRACTS UNUSUAL VOLU
"KRN",19,12465,-1)
1^1
"KRN",19,12465,0)
ECXSCNS
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",513,-1)
1^1
"PKG",513,0)
DSS EXTRACTS^ECX^Decision Support System. (DSS)
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
3.0^3010618^2980112^11714
"PKG",513,22,1,"PAH",1,0)
49^3031028^3507
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
29
"RTN","ECX3049")
0^41^B17754499
"RTN","ECX3049",1,0)
ECX3049 ;BPFO/JRP - PRE/PORT INIT FOR ECX*3.0*49;7/11/2003 ; 10/17/03 6:55am
"RTN","ECX3049",2,0)
 ;;3.0;DSS EXTRACTS;**49**;Dec 22, 1997
"RTN","ECX3049",3,0)
 ;
"RTN","ECX3049",4,0)
 Q
"RTN","ECX3049",5,0)
POST ;Main entry point for post init
"RTN","ECX3049",6,0)
 D MENUS
"RTN","ECX3049",7,0)
 D LOG
"RTN","ECX3049",8,0)
 D DEFINE
"RTN","ECX3049",9,0)
 D EXTRACT
"RTN","ECX3049",10,0)
 Q
"RTN","ECX3049",11,0)
 ;
"RTN","ECX3049",12,0)
MENUS ;Remove erroneous entry from'ECX MAINTENANCE MENU'
"RTN","ECX3049",13,0)
 ;Set variables
"RTN","ECX3049",14,0)
 N MENU,SMENU,PTR
"RTN","ECX3049",15,0)
 S (MENU,SMENU,PTR)=""
"RTN","ECX3049",16,0)
 S ECXMSG(1)=" "
"RTN","ECX3049",17,0)
 S ECXMSG(2)="** Looking for ECX PHA VOL menu under ECX MAINTENANCE **"
"RTN","ECX3049",18,0)
 S ECXMSG(3)="     If found, the submenu item will be deleted  "
"RTN","ECX3049",19,0)
 D MES^XPDUTL(.ECXMSG)
"RTN","ECX3049",20,0)
 ;Order thru option file and find ECX MAINTENANCE and retrieve IEN
"RTN","ECX3049",21,0)
 S MENU=$O(^DIC(19,"B","ECX MAINTENANCE",MENU))
"RTN","ECX3049",22,0)
 I 'MENU D BMES^XPDUTL("** ECX MAINTENANCE MENU item not found **") Q
"RTN","ECX3049",23,0)
 ;Order thru option file and find ECX PHA VOL and retrieve IEN
"RTN","ECX3049",24,0)
 S SMENU=$O(^DIC(19,"B","ECX PHA VOL",SMENU))
"RTN","ECX3049",25,0)
 I 'SMENU D BMES^XPDUTL("** ECX PHA VOL menu item not found **") Q
"RTN","ECX3049",26,0)
 ;Order thru ECX MAINTENANCE menu subfile check for ECX PHA VOL
"RTN","ECX3049",27,0)
 S PTR=($O(^DIC(19,MENU,10,"B",SMENU,PTR)))
"RTN","ECX3049",28,0)
 I 'PTR D BMES^XPDUTL("** ECX PHA VOL was not found as a submenu, nothing deleted **") Q
"RTN","ECX3049",29,0)
 D BMES^XPDUTL("** ECX PHA VOL menu found under ECX MAINTENANCE menu **")
"RTN","ECX3049",30,0)
 S DA(1)=MENU,DIK="^DIC(19,"_DA(1)_","_10_",",DA=PTR
"RTN","ECX3049",31,0)
 D ^DIK
"RTN","ECX3049",32,0)
 N ECXMSG
"RTN","ECX3049",33,0)
 S ECXMSG(1)=" "
"RTN","ECX3049",34,0)
 S ECXMSG(2)="** ECX PHA VOL menu deleted from ECX MAINTENANCE menu **"
"RTN","ECX3049",35,0)
 D MES^XPDUTL(.ECXMSG)
"RTN","ECX3049",36,0)
 Q
"RTN","ECX3049",37,0)
LOG ;Seed new field in DSS EXTRACT LOG file (#727)
"RTN","ECX3049",38,0)
 N ECXFDA,ECXERR,ECXMSG,ECXDA,ECXSD
"RTN","ECX3049",39,0)
 S ECXMSG(1)=" "
"RTN","ECX3049",40,0)
 S ECXMSG(2)="Seeding newly created EXTRACT LOGIC field"
"RTN","ECX3049",41,0)
 S ECXMSG(3)="(#14) of the DSS EXTRACT LOG file (#727)"
"RTN","ECX3049",42,0)
 D MES^XPDUTL(.ECXMSG)
"RTN","ECX3049",43,0)
 S ECXDA=0 F  S ECXDA=+$O(^ECX(727,ECXDA)) Q:'ECXDA  D
"RTN","ECX3049",44,0)
 .S ECXSD=$P($G(^ECX(727,ECXDA,0)),"^",4)
"RTN","ECX3049",45,0)
 .S ECXSD=$$FISCAL^ECXUTL1(ECXSD)
"RTN","ECX3049",46,0)
 .K ECXFDA,ECXERR
"RTN","ECX3049",47,0)
 .S ECXFDA(727,ECXDA_",",14)=ECXSD
"RTN","ECX3049",48,0)
 .D FILE^DIE("","ECXFDA","ECXERR")
"RTN","ECX3049",49,0)
 .Q:'$D(ECXERR)
"RTN","ECX3049",50,0)
 .D BMES^XPDUTL("   ** ERROR SEEDING FIELD FOR ENTRY ENTRY #"_ECXDA_" **")
"RTN","ECX3049",51,0)
 .K ECXMSG D MSG^DIALOG("AE",.ECXMSG,65,6,"ECXERR")
"RTN","ECX3049",52,0)
 .D MES^XPDUTL(.ECXERR)
"RTN","ECX3049",53,0)
 D BMES^XPDUTL("- Done -")
"RTN","ECX3049",54,0)
 Q
"RTN","ECX3049",55,0)
 ;
"RTN","ECX3049",56,0)
DEFINE ;Seed new field in EXTRACT DEFINITION file (#727.1)
"RTN","ECX3049",57,0)
 N ECXFDA,ECXERR,ECXMSG,ECXDA,ECXHDR,ECXOFF
"RTN","ECX3049",58,0)
 S ECXMSG(1)=" "
"RTN","ECX3049",59,0)
 S ECXMSG(2)="Seeding newly created INACTIVE field (#13)"
"RTN","ECX3049",60,0)
 S ECXMSG(3)="of the EXTRACT DEFINITIONS file (#727.1)"
"RTN","ECX3049",61,0)
 D MES^XPDUTL(.ECXMSG)
"RTN","ECX3049",62,0)
 D BMES^XPDUTL("   Inactivating all entries ...")
"RTN","ECX3049",63,0)
 S ECXDA=0 F  S ECXDA=+$O(^ECX(727.1,ECXDA)) Q:'ECXDA  D
"RTN","ECX3049",64,0)
 .K ECXFDA,ECXERR
"RTN","ECX3049",65,0)
 .S ECXFDA(727.1,ECXDA_",",13)=1
"RTN","ECX3049",66,0)
 .D FILE^DIE("","ECXFDA","ECXERR")
"RTN","ECX3049",67,0)
 .Q:'$D(ECXERR)
"RTN","ECX3049",68,0)
 .D BMES^XPDUTL("   ** ERROR INACTIVING ENTRY #"_ECXDA_" **")
"RTN","ECX3049",69,0)
 .K ECXMSG D MSG^DIALOG("AE",.ECXMSG,65,6,"ECXERR")
"RTN","ECX3049",70,0)
 .D MES^XPDUTL(.ECXERR)
"RTN","ECX3049",71,0)
 D MES^XPDUTL("   Activating all nationally supported entries ...")
"RTN","ECX3049",72,0)
 F ECXOFF=1:1 S ECXHDR=$P($T(NTLHDR+ECXOFF),";;",2) Q:ECXHDR=""  D
"RTN","ECX3049",73,0)
 .S ECXDA=+$O(^ECX(727.1,"C",ECXHDR,0))
"RTN","ECX3049",74,0)
 .I 'ECXDA D  Q
"RTN","ECX3049",75,0)
 ..K ECXMSG
"RTN","ECX3049",76,0)
 ..S ECXMSG(1)=" "
"RTN","ECX3049",77,0)
 ..S ECXMSG(2)="   ** ERROR ACTIVATING "_ECXHDR_" **"
"RTN","ECX3049",78,0)
 ..S ECXMSG(3)="      Entry not found in file"
"RTN","ECX3049",79,0)
 ..D MES^XPDUTL(.ECXMSG)
"RTN","ECX3049",80,0)
 .K ECXFDA,ECXERR
"RTN","ECX3049",81,0)
 .S ECXFDA(727.1,ECXDA_",",13)=0
"RTN","ECX3049",82,0)
 .D FILE^DIE("","ECXFDA","ECXERR")
"RTN","ECX3049",83,0)
 .Q:'$D(ECXERR)
"RTN","ECX3049",84,0)
 .D BMES^XPDUTL("   ** ERROR ACTIVING "_ECXHDR_" **")
"RTN","ECX3049",85,0)
 .K ECXMSG D MSG^DIALOG("AE",.ECXMSG,65,6,"ECXERR")
"RTN","ECX3049",86,0)
 .D MES^XPDUTL(.ECXERR)
"RTN","ECX3049",87,0)
 D BMES^XPDUTL("- Done -")
"RTN","ECX3049",88,0)
 Q
"RTN","ECX3049",89,0)
 ;
"RTN","ECX3049",90,0)
EXTRACT ;Seed new field in DSS EXTRACTS file (#728)
"RTN","ECX3049",91,0)
 N ECXFDA,ECXERR,ECXMSG
"RTN","ECX3049",92,0)
 S ECXMSG(1)=" "
"RTN","ECX3049",93,0)
 S ECXMSG(2)="Seeding newly created AUSTIN TEST QUEUE NAME"
"RTN","ECX3049",94,0)
 S ECXMSG(3)="field (#67) of the DSS EXTRACTS file (#728)"
"RTN","ECX3049",95,0)
 D MES^XPDUTL(.ECXMSG)
"RTN","ECX3049",96,0)
 I '$D(^ECX(728,1)) D  Q
"RTN","ECX3049",97,0)
 .D BMES^XPDUTL("**  FILE DOES NOT HAVE AN ENTRY #1.  SEEDING OF FIELD NOT DONE.  **")
"RTN","ECX3049",98,0)
 S ECXFDA(728,"1,",67)="DMT"
"RTN","ECX3049",99,0)
 D FILE^DIE("","ECXFDA","ECXERR")
"RTN","ECX3049",100,0)
 I $D(ECXERR) D
"RTN","ECX3049",101,0)
 .D BMES^XPDUTL("** ERROR OCCURRED WHILE SEEDING FIELD **")
"RTN","ECX3049",102,0)
 .K ECXMSG D MSG^DIALOG("AE",.ECXMSG,70,5,"ECXERR")
"RTN","ECX3049",103,0)
 .D MES^XPDUTL(.ECXERR)
"RTN","ECX3049",104,0)
 D BMES^XPDUTL("- Done -")
"RTN","ECX3049",105,0)
 Q
"RTN","ECX3049",106,0)
 ;
"RTN","ECX3049",107,0)
NTLHDR ;List of nationally supported headers
"RTN","ECX3049",108,0)
 ;;ADM
"RTN","ECX3049",109,0)
 ;;CLI
"RTN","ECX3049",110,0)
 ;;DEN
"RTN","ECX3049",111,0)
 ;;ECQ
"RTN","ECX3049",112,0)
 ;;ECS
"RTN","ECX3049",113,0)
 ;;IVP
"RTN","ECX3049",114,0)
 ;;LAB
"RTN","ECX3049",115,0)
 ;;LAR
"RTN","ECX3049",116,0)
 ;;MTL
"RTN","ECX3049",117,0)
 ;;MOV
"RTN","ECX3049",118,0)
 ;;NUR
"RTN","ECX3049",119,0)
 ;;PAS
"RTN","ECX3049",120,0)
 ;;PRE
"RTN","ECX3049",121,0)
 ;;PRO
"RTN","ECX3049",122,0)
 ;;RAD
"RTN","ECX3049",123,0)
 ;;SUR
"RTN","ECX3049",124,0)
 ;;TRT
"RTN","ECX3049",125,0)
 ;;UDP
"RTN","ECX3049",126,0)
 ;;
"RTN","ECXAPHA")
0^32^B28973464
"RTN","ECXAPHA",1,0)
ECXAPHA ;ALB/TMD-Pharmacy Extracts Unusual Volumes Report ; 4/12/02 9:14am
"RTN","ECXAPHA",2,0)
 ;;3.0;DSS EXTRACTS;**40,49**;Dec 22, 1997
"RTN","ECXAPHA",3,0)
 ;
"RTN","ECXAPHA",4,0)
EN ; entry point
"RTN","ECXAPHA",5,0)
 N X,Y,DATE,ECRUN,ECXOPT,ECXDESC,ECXSAVE,ECXTL,ECTHLD,ECSD
"RTN","ECXAPHA",6,0)
 N ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG
"RTN","ECXAPHA",7,0)
 S QFLG=0
"RTN","ECXAPHA",8,0)
 ; get today's date
"RTN","ECXAPHA",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXAPHA",10,0)
 D BEGIN Q:QFLG
"RTN","ECXAPHA",11,0)
 D SELECT Q:QFLG
"RTN","ECXAPHA",12,0)
 S ECXDESC=ECXTL_" Extract Unusual Volume Report"
"RTN","ECXAPHA",13,0)
 S ECXSAVE("EC*")=""
"RTN","ECXAPHA",14,0)
 W !!,"This report requires 132-column format."
"RTN","ECXAPHA",15,0)
 D EN^XUTMDEVQ("PROCESS^ECXAPHA",ECXDESC,.ECXSAVE)
"RTN","ECXAPHA",16,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXAPHA",17,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAPHA",18,0)
 D HOME^%ZIS
"RTN","ECXAPHA",19,0)
 D AUDIT^ECXKILL
"RTN","ECXAPHA",20,0)
 Q
"RTN","ECXAPHA",21,0)
 ;
"RTN","ECXAPHA",22,0)
BEGIN ; display report description
"RTN","ECXAPHA",23,0)
 W @IOF
"RTN","ECXAPHA",24,0)
 W !,"This report prints a listing of unusual volumes that would be"
"RTN","ECXAPHA",25,0)
 W !,"generated by the pharmacy extracts (PRE, IVP and UDP) as"
"RTN","ECXAPHA",26,0)
 W !,"determined by a user defined threshold value.  It shoud be run"
"RTN","ECXAPHA",27,0)
 W !,"prior to the generation of the actual extract(s) to identify and"
"RTN","ECXAPHA",28,0)
 W !,"fix as necessary any volumes determined to be erroneous."
"RTN","ECXAPHA",29,0)
 W !!,"Unusual volumes are defined as follows:"
"RTN","ECXAPHA",30,0)
 W !!,"PRE Extract:  Quantity field greater than the threshold value."
"RTN","ECXAPHA",31,0)
 W !,"IVP Extract:  Total Doses Per Day field greater than the threshold"
"RTN","ECXAPHA",32,0)
 W !,?14,"or less than the negative of the threshold value."
"RTN","ECXAPHA",33,0)
 W !,"UDP Extract:  Quantity field greater than threshold value."
"RTN","ECXAPHA",34,0)
 W !!,"Note: The threshold can be set after a report is selected."
"RTN","ECXAPHA",35,0)
 W !!,"Run times for this report will vary depending upon the size of"
"RTN","ECXAPHA",36,0)
 W !,"the extract and could take as long as 30 minutes or more to"
"RTN","ECXAPHA",37,0)
 W !,"complete.  This report has no effect on the actual extracts and"
"RTN","ECXAPHA",38,0)
 W !,"can be run as needed."
"RTN","ECXAPHA",39,0)
 W !!,"The report is sorted by Feeder Key, descending Volume, and SSN."
"RTN","ECXAPHA",40,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXAPHA",41,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXAPHA",42,0)
 Q
"RTN","ECXAPHA",43,0)
 ;
"RTN","ECXAPHA",44,0)
SELECT ; user inputs for report option, threshold volume and date range
"RTN","ECXAPHA",45,0)
 N DONE,OUT
"RTN","ECXAPHA",46,0)
 ; allow user to select report option (PRE,IVP or UDP)
"RTN","ECXAPHA",47,0)
 W "Choose the report you would like to run."
"RTN","ECXAPHA",48,0)
 S DIR(0)="S^1:PRE;2:IVP;3:UDP",DIR("A")="Selection",DIR("B")=1 D ^DIR K DIR S ECXOPT=Y I X["^" S QFLG=1 Q
"RTN","ECXAPHA",49,0)
 S ECXTL=$S(ECXOPT=1:"Prescription",ECXOPT=2:"IV Detail",ECXOPT=3:"Unit Dose Local",1:"")
"RTN","ECXAPHA",50,0)
 ; allow user to set threshold volume
"RTN","ECXAPHA",51,0)
 S ECTHLD=$S(ECXOPT=2:1000,1:500)
"RTN","ECXAPHA",52,0)
 W !!,"The default threshold volume for the ",ECXTL," extract is ",ECTHLD,"."
"RTN","ECXAPHA",53,0)
 S DIR(0)="Y",DIR("A")="Would you like to change the threshold",DIR("B")="NO" D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXAPHA",54,0)
 I Y D
"RTN","ECXAPHA",55,0)
 .W !!,$S(ECXOPT=2:"threshold > Total Doses Per Day < -threshold",1:"Quantity > threshold")
"RTN","ECXAPHA",56,0)
 .S DIR(0)="N^0:100000:0",DIR("A")="Enter the new threshold volume" D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1 Q
"RTN","ECXAPHA",57,0)
 ; get date range from user
"RTN","ECXAPHA",58,0)
 W !!,"Enter the date range for which you would like to scan the ",ECXTL,!,"Extract records."
"RTN","ECXAPHA",59,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXAPHA",60,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXAPHA",61,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXAPHA",62,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXAPHA",63,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXAPHA",64,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXAPHA",65,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXAPHA",66,0)
 .I Y<ECSD D  Q
"RTN","ECXAPHA",67,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXAPHA",68,0)
 ..W !,"Please try again.",!!
"RTN","ECXAPHA",69,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXAPHA",70,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXAPHA",71,0)
 ..W !,"Please try again.",!!
"RTN","ECXAPHA",72,0)
 .S ECED=Y
"RTN","ECXAPHA",73,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXAPHA",74,0)
 .S DONE=1
"RTN","ECXAPHA",75,0)
 Q
"RTN","ECXAPHA",76,0)
 ;
"RTN","ECXAPHA",77,0)
PROCESS ; entry point for queued report
"RTN","ECXAPHA",78,0)
 S ZTREQ="@"
"RTN","ECXAPHA",79,0)
 S ECXERR=0 D EN^ECXAPHA2 Q:ECXERR
"RTN","ECXAPHA",80,0)
 S QFLG=0 D PRINT
"RTN","ECXAPHA",81,0)
 Q
"RTN","ECXAPHA",82,0)
 ;
"RTN","ECXAPHA",83,0)
PRINT ; process temp file and print report
"RTN","ECXAPHA",84,0)
 N PG,QFLG,GTOT,LN,COUNT,FKEY,QTY,SSN,REC
"RTN","ECXAPHA",85,0)
 U IO
"RTN","ECXAPHA",86,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAPHA",87,0)
 S (PG,QFLG,GTOT)=0,$P(LN,"-",132)=""
"RTN","ECXAPHA",88,0)
 D HEADER Q:QFLG
"RTN","ECXAPHA",89,0)
 S COUNT=0,FKEY="" F  S FKEY=$O(^TMP($J,FKEY)) Q:FKEY=""!QFLG  D
"RTN","ECXAPHA",90,0)
 .S QTY="" F  S QTY=$O(^TMP($J,FKEY,QTY)) Q:QTY=""!QFLG  D
"RTN","ECXAPHA",91,0)
 ..S SSN=""
"RTN","ECXAPHA",92,0)
 ..F  S SSN=$O(^TMP($J,FKEY,QTY,SSN)) Q:SSN=""!QFLG  S REC=^(SSN)  D
"RTN","ECXAPHA",93,0)
 ...S COUNT=COUNT+1
"RTN","ECXAPHA",94,0)
 ...I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXAPHA",95,0)
 ...W !,$P(REC,U),?8,$P(REC,U,2),?20,$P(REC,U,3),?29,$P(REC,U,4)
"RTN","ECXAPHA",96,0)
 ...W ?76,$P(REC,U,5),?94,$$RJ^XLFSTR($P(REC,U,6),9)
"RTN","ECXAPHA",97,0)
 ...I ECXOPT=1 D
"RTN","ECXAPHA",98,0)
 ....W ?106,$$RJ^XLFSTR($P(REC,U,8),12),?123,$$RJ^XLFSTR($P(REC,U,9),3)
"RTN","ECXAPHA",99,0)
 ...I ECXOPT'=1 D
"RTN","ECXAPHA",100,0)
 ....W ?106,$P(REC,U,7),?116,$$RJ^XLFSTR($P(REC,U,8),14)
"RTN","ECXAPHA",101,0)
 Q:QFLG
"RTN","ECXAPHA",102,0)
 I COUNT=0 W !!,?8,"No unusual volumes to report for this extract"
"RTN","ECXAPHA",103,0)
CLOSE ;
"RTN","ECXAPHA",104,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAPHA",105,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPHA",106,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAPHA",107,0)
 Q
"RTN","ECXAPHA",108,0)
 ;
"RTN","ECXAPHA",109,0)
HEADER ;header and page control
"RTN","ECXAPHA",110,0)
 N SS,JJ
"RTN","ECXAPHA",111,0)
 I $E(IOST)="C" D
"RTN","ECXAPHA",112,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPHA",113,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAPHA",114,0)
 Q:QFLG
"RTN","ECXAPHA",115,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAPHA",116,0)
 W !,ECXTL_" Extract Unusual Volume Report",?124,"Page: "_PG
"RTN","ECXAPHA",117,0)
 W !,"Start Date: ",ECSTART,?97,"Report Run Date/Time:  "_ECRUN
"RTN","ECXAPHA",118,0)
 W !,"End Date:   ",ECEND,?97,"Threshold Value = ",ECTHLD
"RTN","ECXAPHA",119,0)
 W !!,"Name",?11,"SSN",?21,"Day",?29,"Generic Name",?76,"Feeder Key"
"RTN","ECXAPHA",120,0)
 I ECXOPT=1 D
"RTN","ECXAPHA",121,0)
 .W ?95,"Quantity",?108,"Total Cost",?120,"Days Supply"
"RTN","ECXAPHA",122,0)
 E  D
"RTN","ECXAPHA",123,0)
 .I ECXOPT=2 W ?96,"Total Doses",?120,"Total Cost",!,?98,"Per Day"
"RTN","ECXAPHA",124,0)
 .I ECXOPT'=2 W ?99,"Quantity",?120,"Total Cost"
"RTN","ECXAPHA",125,0)
 W !,LN,!
"RTN","ECXAPHA",126,0)
 Q
"RTN","ECXAPHA",127,0)
 ;
"RTN","ECXAPHA2")
0^33^B21127139
"RTN","ECXAPHA2",1,0)
ECXAPHA2 ;ALB/TMD-Pharmacy Extracts Unusual Volumes Report ; 3/8/02 11:12am
"RTN","ECXAPHA2",2,0)
 ;;3.0;DSS EXTRACTS;**40,49**;Dec 22, 1997
"RTN","ECXAPHA2",3,0)
 ;
"RTN","ECXAPHA2",4,0)
EN ; entry point
"RTN","ECXAPHA2",5,0)
 N COUNT,ECUNIT,LINE,ECDFN,ECD,ECDRG,ECDAY,ECDFN,ECQTY,ECUNIT,ECCOST,ECDS
"RTN","ECXAPHA2",6,0)
 K ^TMP($J)
"RTN","ECXAPHA2",7,0)
 S (COUNT,ECDS)=0,ECUNIT=""
"RTN","ECXAPHA2",8,0)
 S ECD=ECSD1,ECED=ECED+.3
"RTN","ECXAPHA2",9,0)
 S LINE=$S(ECXOPT=1:"PRE",ECXOPT=2:"IVP",ECXOPT=3:"UDP",1:"EXIT")
"RTN","ECXAPHA2",10,0)
 D @LINE
"RTN","ECXAPHA2",11,0)
 Q
"RTN","ECXAPHA2",12,0)
 ;
"RTN","ECXAPHA2",13,0)
PRE ; entry point for PRE data
"RTN","ECXAPHA2",14,0)
 ; order through fills, refills and partial refills
"RTN","ECXAPHA2",15,0)
 N ECRFL,ECRX,ECREF,ECDATA,ECDATA1,ECPRC
"RTN","ECXAPHA2",16,0)
 S ECREF=1
"RTN","ECXAPHA2",17,0)
 F  S ECD=$O(^PSRX("AL",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S ECRX=$O(^PSRX("AL",ECD,ECRX)),ECRFL="" Q:'ECRX  Q:ECXERR  F  S ECRFL=$O(^PSRX("AL",ECD,ECRX,ECRFL)) Q:ECRFL=""  Q:ECXERR  D PRE2
"RTN","ECXAPHA2",18,0)
 S ECD=ECSD1,ECREF="P"
"RTN","ECXAPHA2",19,0)
 F  S ECD=$O(^PSRX("AM",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S ECRX=$O(^PSRX("AM",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AM",ECD,ECRX,ECRFL)) Q:ECRFL=""  Q:ECXERR  D PRE2
"RTN","ECXAPHA2",20,0)
 Q
"RTN","ECXAPHA2",21,0)
 ;
"RTN","ECXAPHA2",22,0)
PRE2 ; get Prescription data
"RTN","ECXAPHA2",23,0)
 S ECDATA=$G(^PSRX(ECRX,0))
"RTN","ECXAPHA2",24,0)
 I ECRFL D
"RTN","ECXAPHA2",25,0)
 .S ECDATA1=$G(^PSRX(ECRX,ECREF,ECRFL,0))
"RTN","ECXAPHA2",26,0)
 .S ECQTY=+$P(ECDATA1,U,4)
"RTN","ECXAPHA2",27,0)
 .S ECDS=+$P(ECDATA1,U,10)
"RTN","ECXAPHA2",28,0)
 .S ECPRC=+$P(ECDATA1,U,11)
"RTN","ECXAPHA2",29,0)
 I 'ECRFL D
"RTN","ECXAPHA2",30,0)
 .S ECQTY=+$P(ECDATA,U,7)
"RTN","ECXAPHA2",31,0)
 .S ECDS=+$P(ECDATA,U,8)
"RTN","ECXAPHA2",32,0)
 .S ECPRC=+$P(ECDATA,U,17)
"RTN","ECXAPHA2",33,0)
 ;check to see if quantity>threshold
"RTN","ECXAPHA2",34,0)
 I ECQTY>ECTHLD D
"RTN","ECXAPHA2",35,0)
 .S ECDAY=ECD
"RTN","ECXAPHA2",36,0)
 .S ECDFN=$P(ECDATA,U,2)
"RTN","ECXAPHA2",37,0)
 .S ECDRG=+$P(ECDATA,U,6)
"RTN","ECXAPHA2",38,0)
 .S ECCOST=ECQTY*ECPRC
"RTN","ECXAPHA2",39,0)
 .D FILE Q:ECXERR
"RTN","ECXAPHA2",40,0)
 Q
"RTN","ECXAPHA2",41,0)
 ;
"RTN","ECXAPHA2",42,0)
IVP ; entry point for IVP Data
"RTN","ECXAPHA2",43,0)
 N DFN,ON,DA,SA,ECCOUNT
"RTN","ECXAPHA2",44,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^("S") D  Q:ECXERR
"RTN","ECXAPHA2",45,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  Q:ECXERR  I $D(^ECX(728.113,DA,0)) S EC=^(0) Q:ECXERR  D
"RTN","ECXAPHA2",46,0)
 ..S ECDRG=$P(EC,U,4)
"RTN","ECXAPHA2",47,0)
 ..S SA=$S($P(EC,U,8)]"":"A",$P(EC,U,9):"S",1:"")
"RTN","ECXAPHA2",48,0)
 ..; set up new record for first DA for this drug
"RTN","ECXAPHA2",49,0)
 ..I '$D(^TMP($J,SA,ECDRG)) D
"RTN","ECXAPHA2",50,0)
 ...S ECQTY=+$S(SA="A":+$P(EC,U,7),SA="S":+$P(EC,U,9),1:0)
"RTN","ECXAPHA2",51,0)
 ...S ECUNIT=$S(SA="A":$P(EC,U,8),SA="S":"ML",1:"")
"RTN","ECXAPHA2",52,0)
 ...S ECCOST=$P(EC,U,12),ECDFN=DFN
"RTN","ECXAPHA2",53,0)
 ...S ^TMP($J,SA,ECDRG)=ECUNIT_U_ECD_U_ECDFN_U_ECCOST_U_ECQTY
"RTN","ECXAPHA2",54,0)
 ...S ^(ECDRG,1)=0
"RTN","ECXAPHA2",55,0)
 ..; add to qty (0,1, or -1) to total
"RTN","ECXAPHA2",56,0)
 ..S ^TMP($J,SA,ECDRG,1)=^TMP($J,SA,ECDRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXAPHA2",57,0)
 .; looped thru all DAs for this order - now check for unusual volumes
"RTN","ECXAPHA2",58,0)
 .F SA="S","A" S ECDRG="" F  S ECDRG=$O(^TMP($J,SA,ECDRG)) Q:ECDRG=""  Q:ECXERR  D
"RTN","ECXAPHA2",59,0)
 ..S ECQTY=$P(^TMP($J,SA,ECDRG),U,5),ECCOUNT=^(ECDRG,1)
"RTN","ECXAPHA2",60,0)
 ..S ECQTY=ECQTY*ECCOUNT
"RTN","ECXAPHA2",61,0)
 ..; check to see if quantity is outside of threshold range
"RTN","ECXAPHA2",62,0)
 ..I (ECQTY>ECTHLD)!(ECQTY<-ECTHLD) D
"RTN","ECXAPHA2",63,0)
 ...S ECUNIT=$P(^TMP($J,SA,ECDRG),U)
"RTN","ECXAPHA2",64,0)
 ...S ECDAY=$P(^(ECDRG),U,2)
"RTN","ECXAPHA2",65,0)
 ...S ECDFN=$P(^(ECDRG),U,3)
"RTN","ECXAPHA2",66,0)
 ...S ECCOST=$P(^(ECDRG),U,4)*ECCOUNT
"RTN","ECXAPHA2",67,0)
 ...D FILE Q:ECXERR
"RTN","ECXAPHA2",68,0)
 K ^TMP($J,"A"),^("S")
"RTN","ECXAPHA2",69,0)
 Q
"RTN","ECXAPHA2",70,0)
 ;
"RTN","ECXAPHA2",71,0)
UDP ; entry point for UDP data
"RTN","ECXAPHA2",72,0)
 N ECXJ,ECDATA
"RTN","ECXAPHA2",73,0)
 F  S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:ECXERR  D
"RTN","ECXAPHA2",74,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:ECXERR  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXAPHA2",75,0)
 ..S DATA=^ECX(728.904,ECXJ,0),ECQTY=$P(DATA,U,5)
"RTN","ECXAPHA2",76,0)
 ..;check to see if quantity>threshold
"RTN","ECXAPHA2",77,0)
 ..I ECQTY>ECTHLD D
"RTN","ECXAPHA2",78,0)
 ...S ECDFN=$P(DATA,U,2),ECDRG=$P(DATA,U,4),ECCOST=$P(DATA,U,8),ECDAY=ECD
"RTN","ECXAPHA2",79,0)
 ...D FILE Q:ECXERR
"RTN","ECXAPHA2",80,0)
 Q
"RTN","ECXAPHA2",81,0)
 ;
"RTN","ECXAPHA2",82,0)
FILE ; put records in temp file to print later
"RTN","ECXAPHA2",83,0)
 N OK,ECXPAT,ECNAME,ECSSN,ECGNAME,ECNDC,ECPROD,ECFKEY
"RTN","ECXAPHA2",84,0)
 ; get demographics
"RTN","ECXAPHA2",85,0)
 S OK=$$PAT^ECXUTL3(ECDFN,$P(ECD,"."),"1;",.ECXPAT)
"RTN","ECXAPHA2",86,0)
 I 'OK Q
"RTN","ECXAPHA2",87,0)
 S ECNAME=ECXPAT("NAME")
"RTN","ECXAPHA2",88,0)
 S ECSSN=ECXPAT("SSN")
"RTN","ECXAPHA2",89,0)
 S ECDAY=$E(ECDAY,4,5)_"/"_$E(ECDAY,6,7)
"RTN","ECXAPHA2",90,0)
 ; get drug file data
"RTN","ECXAPHA2",91,0)
 S ECGNAME=$P($G(^PSDRUG(ECDRG,0)),U)
"RTN","ECXAPHA2",92,0)
 S ECNDC=$P($G(^PSDRUG(ECDRG,2)),U,4)
"RTN","ECXAPHA2",93,0)
 S ECNDC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0)
"RTN","ECXAPHA2",94,0)
 S ECNDC=$TR(ECNDC,"*",0)
"RTN","ECXAPHA2",95,0)
 S ECPROD=$P($G(^PSDRUG(ECDRG,"ND")),U,3)
"RTN","ECXAPHA2",96,0)
 S ECPROD=$$RJ^XLFSTR(ECPROD,5,0)
"RTN","ECXAPHA2",97,0)
 S ECFKEY=ECPROD_ECNDC
"RTN","ECXAPHA2",98,0)
 I ECXOPT'=2 S ECUNIT=$P($G(^PSDRUG(ECDRG,660)),U,8)
"RTN","ECXAPHA2",99,0)
 ; file 
"RTN","ECXAPHA2",100,0)
 S ^TMP($J,ECFKEY,-ECQTY,ECSSN)=ECNAME_U_ECSSN_U_ECDAY_U_ECGNAME_U_ECFKEY_U_ECQTY_U_ECUNIT_U_"$"_$FNUMBER(ECCOST,",",2)_U_ECDS
"RTN","ECXAPHA2",101,0)
 S COUNT=COUNT+1
"RTN","ECXAPHA2",102,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZSTOP,ECXERR)=1
"RTN","ECXAPHA2",103,0)
 Q
"RTN","ECXAPHA2",104,0)
 ;
"RTN","ECXAPHA2",105,0)
EXIT S ECXERR=1 Q
"RTN","ECXEC")
0^11^B29847517
"RTN","ECXEC",1,0)
ECXEC ;ALB/JAP,BIR/JLP,PTD-DSS Event Capture Extract  [ 02/14/97   2:26 PM ] ; 8/28/02 1:10pm
"RTN","ECXEC",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,24,27,33,39,46,49**;Dec 22, 1997
"RTN","ECXEC",3,0)
BEG ;entry point from option
"RTN","ECXEC",4,0)
 I '$D(^ECH) W !,"Event Capture is not initialized",!! Q
"RTN","ECXEC",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXEC",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXEC",7,0)
 Q
"RTN","ECXEC",8,0)
START ;begin EC extract
"RTN","ECXEC",9,0)
 N X,Y,ECDCM
"RTN","ECXEC",10,0)
 S ECED=ECED+.3,ECLL=0
"RTN","ECXEC",11,0)
 K ^TMP("EC",$J)
"RTN","ECXEC",12,0)
 F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:'ECLL  D
"RTN","ECXEC",13,0)
 .F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXEC",14,0)
 ..F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D UPDATE
"RTN","ECXEC",15,0)
 Q
"RTN","ECXEC",16,0)
 ;
"RTN","ECXEC",17,0)
UPDATE ;sets record and updates counters
"RTN","ECXEC",18,0)
 S ECCH=^ECH(ECDA,0),ECL=$P(ECCH,U,4),ECXDFN=$P(ECCH,U,2)
"RTN","ECXEC",19,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECL)  ;Get production division from file 4
"RTN","ECXEC",20,0)
 S ECDT=$P(ECCH,U,3),ECM=$P(ECCH,U,6),ECC=$P(ECCH,U,8)
"RTN","ECXEC",21,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECDT,"1;3;5;")
"RTN","ECXEC",22,0)
 S ECTM=$$ECXTIME^ECXUTL(ECDT),ECP=$P(ECCH,U,9)
"RTN","ECXEC",23,0)
 Q:ECP']""
"RTN","ECXEC",24,0)
 S ECO=$P(ECCH,U,12),ECV=$P(ECCH,U,10),ECDU=$P(ECCH,U,7)
"RTN","ECXEC",25,0)
 S ECXUNIT=$G(^ECD(ECDU,0)),ECCS=+$P(ECXUNIT,U,4),ECDCM=$P(ECXUNIT,U,5)
"RTN","ECXEC",26,0)
 S ECXDSSD=$E(ECDCM,1,10),ECUSTOP=$P(ECXUNIT,U,10),ECUPCE=$P(ECXUNIT,U,14)
"RTN","ECXEC",27,0)
 S ICD9=$P($G(^ECH(ECDA,"P")),U,2) S:ICD9="" ICD9=" "
"RTN","ECXEC",28,0)
 S ECXICD9=$P($G(^ICD9(ICD9,0)),U)
"RTN","ECXEC",29,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXEC",30,0)
 S (CNT,I)=0
"RTN","ECXEC",31,0)
 F  S CNT=$O(^ECH(ECDA,"DX",CNT)) Q:'CNT  D  Q:I>3
"RTN","ECXEC",32,0)
 .S ICD9=$P($G(^ECH(ECDA,"DX",CNT,0)),U) D:ICD9'=""
"RTN","ECXEC",33,0)
 ..S I=I+1,@("ECXICD9"_I)=$P($G(^ICD9(ICD9,0)),U)
"RTN","ECXEC",34,0)
 ;derivation of dss identifier depends on whether dss unit is 
"RTN","ECXEC",35,0)
 ;set to send data to pce
"RTN","ECXEC",36,0)
 S ECAC=$P($G(ECCH),U,19)
"RTN","ECXEC",37,0)
 ;if this is a record that 'goes to pce', then get the dss identifier
"RTN","ECXEC",38,0)
 ;from the clinic stop codes
"RTN","ECXEC",39,0)
 S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",40,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECXA="O")) D
"RTN","ECXEC",41,0)
 .D:+ECAC
"RTN","ECXEC",42,0)
 ..S ECAC1=$P($G(^SC(+ECAC,0)),U,7),ECAC2=$P($G(^(0)),U,18)
"RTN","ECXEC",43,0)
 ..I 'ECAC2 S ECAC2S="000"
"RTN","ECXEC",44,0)
 ..I 'ECAC1 S (ECAC1S,ECAC2S)="000" Q
"RTN","ECXEC",45,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECAC1,0)),U,2)
"RTN","ECXEC",46,0)
 ..S ECAC2S=$P($G(^DIC(40.7,+ECAC2,0)),U,2)
"RTN","ECXEC",47,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S=$$RJ^XLFSTR(ECAC2S,3,0)
"RTN","ECXEC",48,0)
 .S:'ECAC (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",49,0)
 ;if this record doesn't go to pce, then get the dss identifier
"RTN","ECXEC",50,0)
 ;from the dss unit
"RTN","ECXEC",51,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECXA="I")) D
"RTN","ECXEC",52,0)
 .I +ECUSTOP D
"RTN","ECXEC",53,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECUSTOP,0)),U,2)
"RTN","ECXEC",54,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S="000"
"RTN","ECXEC",55,0)
 .I 'ECUSTOP D
"RTN","ECXEC",56,0)
 ..S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",57,0)
 S ECDSS=ECAC1S_ECAC2S
"RTN","ECXEC",58,0)
 I ECXLOGIC>2003 I "^18^23^24^36^41^65^94^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXEC",59,0)
 S ECXDIV=""
"RTN","ECXEC",60,0)
 ;
"RTN","ECXEC",61,0)
 ;- Ord Div, Contrct St/End Dates, Contrct Type placeholders for FY2002
"RTN","ECXEC",62,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXEC",63,0)
 ;setup provider(s) as'2'_ien
"RTN","ECXEC",64,0)
 S (ECU1A,ECU2A,ECU3A,ECU1NPI,ECU2NPI,ECU3NPI,ECXPPC1,ECXPPC2,ECXPPC3)=""
"RTN","ECXEC",65,0)
 S ECU=$P(ECCH,U,11)
"RTN","ECXEC",66,0)
 S:$L(ECU) ECXPPC1=$$PRVCLASS^ECXUTL(ECU,ECDT),ECU1A="2"_$P(ECU,";")
"RTN","ECXEC",67,0)
 S ECU2=$P(ECCH,U,15)
"RTN","ECXEC",68,0)
 S:$L(ECU2) ECXPPC2=$$PRVCLASS^ECXUTL(ECU2,ECDT),ECU2A="2"_$P(ECU2,";")
"RTN","ECXEC",69,0)
 S ECU3=$P(ECCH,U,17)
"RTN","ECXEC",70,0)
 S:$L(ECU3) ECXPPC3=$$PRVCLASS^ECXUTL(ECU3,ECDT),ECU3A="2"_$P(ECU3,";")
"RTN","ECXEC",71,0)
 ;change for version 2 where ECP is a variable pointer and we want to
"RTN","ECXEC",72,0)
 ;expand it category = category or null if stored as 0
"RTN","ECXEC",73,0)
 D:ECP[";"
"RTN","ECXEC",74,0)
 .S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U)_"01",ECP<90000:$P(^EC(725,+ECP,0),U,2)_"N",1:$P(^EC(725,+ECP,0),U,2)_"L"),ECC=$S(ECC:ECC,1:"")
"RTN","ECXEC",75,0)
 ;pick up EC to PCE data from "P" in File 721
"RTN","ECXEC",76,0)
 S ECPCE=$G(^ECH(ECDA,"P"))
"RTN","ECXEC",77,0)
 S ECPCE1=$P(ECPCE,U),ECPCE2=$P(ECPCE,U,2),ECPCE3=$P(ECPCE,U,3)
"RTN","ECXEC",78,0)
 S ECPCE4=$P(ECPCE,U,4),ECPCE5=$P(ECPCE,U,5),ECPCE6=$P(ECPCE,U,6)
"RTN","ECXEC",79,0)
 S ECPCE7=$S($P(ECPCE,U,7)=1:"Y",1:"N"),ECXMST=$P(ECPCE,U,9)
"RTN","ECXEC",80,0)
 S ECXCMOD=""
"RTN","ECXEC",81,0)
 I $D(^ECH(ECDA,"MOD")) D
"RTN","ECXEC",82,0)
 .S MOD=0,M=""
"RTN","ECXEC",83,0)
 .F  S MOD=$O(^ECH(ECDA,"MOD",MOD)) Q:'MOD  S M=$P(^(MOD,0),U) D
"RTN","ECXEC",84,0)
 ..I M S ECXCMOD=ECXCMOD_M_";"
"RTN","ECXEC",85,0)
 .K MOD,M
"RTN","ECXEC",86,0)
 S:ECP?1.N ECP=$$CPT^ECXUTL3($E(ECP,1,5),"",ECV)
"RTN","ECXEC",87,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPCE1,ECXCMOD,ECV)
"RTN","ECXEC",88,0)
 ;
"RTN","ECXEC",89,0)
 ;- Observation Patient Indicator (YES/NO)
"RTN","ECXEC",90,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXEC",91,0)
 ;
"RTN","ECXEC",92,0)
 ;- CNH status (YES/NO)
"RTN","ECXEC",93,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXEC",94,0)
 ;
"RTN","ECXEC",95,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXEC",96,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXEC",97,0)
 ;
"RTN","ECXEC",98,0)
 ;- If no encounter number don't file record
"RTN","ECXEC",99,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSS,ECCS)
"RTN","ECXEC",100,0)
 D:ECXENC'="" FILE
"RTN","ECXEC",101,0)
 Q
"RTN","ECXEC",102,0)
 ;
"RTN","ECXEC",103,0)
FILE ;file record in #727.815
"RTN","ECXEC",104,0)
 ;node0
"RTN","ECXEC",105,0)
 ;ecode=inst ECL^dfn ECXDFN^ssn ECXSSN^name^i/o status ECXA^day^
"RTN","ECXEC",106,0)
 ;DSS unit ECDU^category ECC^procedure ECP^volume ECV^
"RTN","ECXEC",107,0)
 ;cost center ECCS^ordering sec ECO^section ^
"RTN","ECXEC",108,0)
 ;provider ECU1A^^prov 2 ECU2A^^prov 3 ECU3A^^^mov # ECXMN^
"RTN","ECXEC",109,0)
 ;treat spec ECXTS^time ECTM^
"RTN","ECXEC",110,0)
 ;primary care team^primary care provider^pce cpt code (ECXCPT)^
"RTN","ECXEC",111,0)
 ;primary icd-9 code ICD9^secondary icd-9 ICD91^secondary icd-9 ICD92^
"RTN","ECXEC",112,0)
 ;secondary icd-9 ICD93^secondary icd-9 ICD94^
"RTN","ECXEC",113,0)
 ;agent orange^radiation exposure ECPCC3^
"RTN","ECXEC",114,0)
 ;environmental contaminants ECPTTM^service connected ECPTPR^
"RTN","ECXEC",115,0)
 ;sent to pce ECPCE^^dss identifier ECDSS^dss dept
"RTN","ECXEC",116,0)
 ;node1
"RTN","ECXEC",117,0)
 ;mpi ECXMPI^dss dept ECXDSSD^provider npi ECXPRV2^
"RTN","ECXEC",118,0)
 ;provider #2 npi ECU2NPI^provider #3 npi ECU3NPI^^
"RTN","ECXEC",119,0)
 ;pc provider npi ECPTNPI^pc prov person class ECCLAS^
"RTN","ECXEC",120,0)
 ;assoc pc prov ECASPR^assoc pc prov person class ECCLAS2^
"RTN","ECXEC",121,0)
 ;assoc pc prov npi ECASNPI^
"RTN","ECXEC",122,0)
 ;divison ECXDIV^mst status ECXMST^dom ECXDOM^date of birth ECXDOB^
"RTN","ECXEC",123,0)
 ;enrollment category ECXCAT^ enrollment status ECXSTAT^
"RTN","ECXEC",124,0)
 ;enrollment priorty ECXPRIOR^period of service ECXPOS^
"RTN","ECXEC",125,0)
 ;purple heart indicator ECXPHI^observ pat ind ECXOBS^
"RTN","ECXEC",126,0)
 ;encounter num ECXENC^ao loc ECXAOL^ord div ECXODIV^contr st dt ECXCSDT^
"RTN","ECXEC",127,0)
 ;contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXEC",128,0)
 ;production division ECXPDIV^eligibility ECXELIG^
"RTN","ECXEC",129,0)
 ;head & neck cancer ind. ECXHNCI^ethnicity ECXETH^race1 ECXRAC1
"RTN","ECXEC",130,0)
 ;enrollment location ECXENRL
"RTN","ECXEC",131,0)
 N DA,DIK
"RTN","ECXEC",132,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXEC",133,0)
 S ECODE=EC7_U_EC23_U_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXEC",134,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECDT,ECXYM)_U_ECDU_U_ECC_U
"RTN","ECXEC",135,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECU1A_U_ECXPPC1_U
"RTN","ECXEC",136,0)
 S ECODE=ECODE_ECU2A_U_ECXPPC2_U_ECU3A_U_ECXPPC3_U_U_ECXMN_U
"RTN","ECXEC",137,0)
 S ECODE=ECODE_ECXTS_U_ECTM_U
"RTN","ECXEC",138,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_ECXCPT_U_ECXICD9_U
"RTN","ECXEC",139,0)
 S ECODE=ECODE_ECXICD91_U_ECXICD92_U_ECXICD93_U
"RTN","ECXEC",140,0)
 S ECODE=ECODE_ECXICD94_U_ECPCE3_U_ECPCE4_U_ECPCE5_U
"RTN","ECXEC",141,0)
 S ECODE=ECODE_ECPCE6_U_ECPCE7_U_U_ECDSS_U_U
"RTN","ECXEC",142,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECU1NPI_U_ECU2NPI_U_ECU3NPI_U_ECCLAS_U
"RTN","ECXEC",143,0)
 S ECODE1=ECODE1_ECPTNPI_U_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXDIV_U
"RTN","ECXEC",144,0)
 S ECODE1=ECODE1_ECXMST_U_ECXDOM_U_ECXDOB_U_ECXCAT_U_ECXSTAT_U
"RTN","ECXEC",145,0)
 S ECODE1=ECODE1_ECXPRIOR_U_ECXPOS_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXEC",146,0)
 S ECODE1=ECODE1_ECXODIV_U_ECXCSDT_U_ECXCEDT_U_ECXCTYP_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXEC",147,0)
 S ECODE1=ECODE1_ECXELIG_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXEC",148,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL
"RTN","ECXEC",149,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXEC",150,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXEC",151,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXEC",152,0)
 Q
"RTN","ECXEC",153,0)
 ;
"RTN","ECXEC",154,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXEC",155,0)
 S ECHEAD="ECS"
"RTN","ECXEC",156,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXEC",157,0)
 Q
"RTN","ECXEC",158,0)
 ;
"RTN","ECXEC",159,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXEC",160,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXKILL")
0^42^B5975044
"RTN","ECXKILL",1,0)
ECXKILL ;BIR/DMA,PTD-Kill Local Variables ; 02/06/97 10:25 [ 03/27/97 12:43 PM]
"RTN","ECXKILL",2,0)
 ;;3.0;DSS EXTRACTS;**9,8,21,24,31,39,49**;Dec 22, 1997
"RTN","ECXKILL",3,0)
 ;
"RTN","ECXKILL",4,0)
 K %,%DT,%Y,%ZIS,A,A1,A2,ABR,B,BY,D,D0,D1,DA,DAT,DATA,DATA1,DATA2,DATA6
"RTN","ECXKILL",5,0)
 K DATAOP,DD,DFN,DHDH,DIC,DIE,DIK,DINUM,DIQ
"RTN","ECXKILL",6,0)
 K DIR,DIRUT,DO,DR,DTOUT,DUOUT,EC,EC0,EC1,EC10,EC11,EC16,EC2,EC23,EC2NODE
"RTN","ECXKILL",7,0)
 K EC3,EC42,EC50,EC6,EC7,ECA,ECAC,ECACA,ECAD,ECADM,ECALL
"RTN","ECXKILL",8,0)
 K ECANE,ECAO,ECARG,ECAS,ECAT,ECATSV,ECB,ECC,ECCA,ECCAN,ECCAT,ECCH,ECCN
"RTN","ECXKILL",9,0)
 K ECCNT,ECCS,ECCSC,ECD,ECD0,ECD1,ECDA,ECDAL,ECDAT
"RTN","ECXKILL",10,0)
 K ECDATA,ECDATA1,ECDATE,ECDEN,ECDEX,ECDF,ECDFN,ECDFN0,ECDI,ECDIA,ECDIF
"RTN","ECXKILL",11,0)
 K ECDIV,ECDL,ECDN,ECDNEW,ECDO,ECDOC,ECDR,ECDRG,ECDS,ECDSSU,ECDT,ECDTTM
"RTN","ECXKILL",12,0)
 K ECDU,ECEC0,ECED,ECED1,ECEDN,ECEDNEW,ECF,ECF1,ECFD,ECFDT,ECFILE,ECFK
"RTN","ECXKILL",13,0)
 K ECFL,ECFR,ECGRP,ECH,ECHD,ECHEAD,ECI,ECID,ECIEN,ECIFN,ECIN
"RTN","ECXKILL",14,0)
 K ECINST,ECINV,ECIV,ECJ,ECK,ECL,ECL1,ECLAN,ECLAST,ECLDT,ECLINK,ECLIST
"RTN","ECXKILL",15,0)
 K ECLL,ECLN,ECLOC,ECLRN,ECLX,ECLY,ECM,ECMAX,ECMIN
"RTN","ECXKILL",16,0)
 K ECXMISS,ECMN,ECMOD,ECMODS,ECMORE,ECMS,ECMSG,ECMSN,ECMT,ECMW,ECMY,ECN
"RTN","ECXKILL",17,0)
 K ECNA,ECNDC,ECNDF,ECNFC,ECNL,ECNO,ECNODE,ECNOGO
"RTN","ECXKILL",18,0)
 K ECNT,ECO,ECO0,ECO1,ECO2,ECOB,ECODE,ECODE0,ECODE1,ECOLD,ECONE,ECOPAY
"RTN","ECXKILL",19,0)
 K ECOPAYT,ECORTY,ECOS,ECP,ECPACK,ECPCE,ECPCE1,ECPCE2,ECPCE3,ECPCE4
"RTN","ECXKILL",20,0)
 K ECPCE5,ECPCE6,ECPCE7,ECPIECE,ECPN,ECPRC,ECPRO
"RTN","ECXKILL",21,0)
 K ECPROF,ECPT,ECPTF,ECPTPR,ECPTTM,ECQ,ECQT,ECQTY,ECRD,ECRE,ECRED,ECREF
"RTN","ECXKILL",22,0)
 K ECRFL,ECRN,ECROU,ECRR,ECRS,ECRSD,ECRTN,ECRX,ECS,ECSA,ECSC
"RTN","ECXKILL",23,0)
 K ECSD,ECSD1,ECSDN,ECSN,ECSR,ECSS,ECST,ECSTOP,ECSU,ECT,ECT1,ECTD,ECTD1
"RTN","ECXKILL",24,0)
 K ECTEMP,ECTM,ECTNTL,ECTOTAL,ECTREAT,ECTRT,ECTS,ECTY,ECXLOGIC,ECXDATES
"RTN","ECXKILL",25,0)
 ;
"RTN","ECXKILL",26,0)
AUDIT ;kill audit report variables, close slave printer
"RTN","ECXKILL",27,0)
 K ECX,ECXARRAY,ECXACC,ECXALL,ECXAUD,ECXCODE,ECXD,ECXDEF,ECXDESC,ECXDIV
"RTN","ECXKILL",28,0)
 K ECXRCST,ECXRQST,ECXEND,ECXERR,ECXEXT,ECXHEAD,ECXLOC,ECXPGM,ECXPHCPC
"RTN","ECXKILL",29,0)
 K ECXPRIME,ECXPRO,ECXREPT,ECXRUN,ECXSAVE,ECXSTART,ECXSRCE
"RTN","ECXKILL",30,0)
 K ECXCTAMT,ECXFEKEY,ECXFELOC,ECXFORM,ECXGRPR,ECXHCPC,ECXPHCPC,ECXHCPCS
"RTN","ECXKILL",31,0)
 K ECXLAB,ECXLLC,ECXLMC,ECXQTY,ECXREQ,ECXSTAT,ECXTYPE
"RTN","ECXKILL",32,0)
 K IO("Q"),POP,DIR,DIC,DIE,DA,DR,DO,DIRUT,DUOUT,DTOUT
"RTN","ECXKILL",33,0)
 K ^TMP($J)
"RTN","ECXKILL",34,0)
 I IO=IO(0),IOST'="C" D ^%ZISC
"RTN","ECXKILL",35,0)
 Q
"RTN","ECXKILL",36,0)
 ;
"RTN","ECXKILL",37,0)
 D ^ECXKILL1
"RTN","ECXKILL",38,0)
 Q
"RTN","ECXMTL")
0^14^B25539892
"RTN","ECXMTL",1,0)
ECXMTL ;ALB/JAP - DSS Mental Health Extract ; 8/28/02 1:25pm
"RTN","ECXMTL",2,0)
 ;;3.0;DSS EXTRACTS;**24,30,33,39,46,49**;Dec 22, 1997
"RTN","ECXMTL",3,0)
 ;
"RTN","ECXMTL",4,0)
BEG ;entry point from option
"RTN","ECXMTL",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXMTL",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXMTL",7,0)
 Q
"RTN","ECXMTL",8,0)
 ;
"RTN","ECXMTL",9,0)
START ;entry point from tasked job
"RTN","ECXMTL",10,0)
 S QFLG=0
"RTN","ECXMTL",11,0)
 ;get first record #
"RTN","ECXMTL",12,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1)
"RTN","ECXMTL",13,0)
 ;call mh/dss api for extract record creation
"RTN","ECXMTL",14,0)
 ;variables ecfile,ecxym,ecinst,ecsd,eced passed in by taskmanager
"RTN","ECXMTL",15,0)
 S ECXSEQ=EC7,ECXECX=$P(EC23,U,2),ECXERR=0
"RTN","ECXMTL",16,0)
 ;call mh api to create extract records
"RTN","ECXMTL",17,0)
 S X="YSDSS" X ^%ZOSF("TEST") I '$T S QFLG=1 Q
"RTN","ECXMTL",18,0)
 D UPD^YSDSS(ECFILE,.ECXSEQ,ECXYM,ECXECX,ECINST,ECSD,ECED,.ECXERR)
"RTN","ECXMTL",19,0)
 Q:ECXERR
"RTN","ECXMTL",20,0)
 Q:QFLG
"RTN","ECXMTL",21,0)
 ;if no error, continue
"RTN","ECXMTL",22,0)
 D UPDATE
"RTN","ECXMTL",23,0)
 Q
"RTN","ECXMTL",24,0)
 ;
"RTN","ECXMTL",25,0)
UPDATE ;add non-mh data to each record created by mh api
"RTN","ECXMTL",26,0)
 N ECXADT,JJ
"RTN","ECXMTL",27,0)
 S EC7=EC7+1
"RTN","ECXMTL",28,0)
 F JJ=EC7:1:ECXSEQ Q:QFLG  D
"RTN","ECXMTL",29,0)
 .Q:'$D(^ECX(ECFILE,JJ,0))
"RTN","ECXMTL",30,0)
 .S ECXDFN=$P(^ECX(ECFILE,JJ,0),U,5),ECXDATE=$P(^ECX(ECFILE,JJ,0),U,9),ECXPRV=$P(^ECX(ECFILE,JJ,0),U,18)
"RTN","ECXMTL",31,0)
 .S ECXSCNUM=$P(^ECX(ECFILE,JJ,0),U,23),ECXSCNAM=$P(^ECX(ECFILE,JJ,0),U,24)
"RTN","ECXMTL",32,0)
 .D PAT(ECXDFN,ECXDATE)
"RTN","ECXMTL",33,0)
 .S (ECXPRCLS,ECXPRNPI,ECXDIV)="" I ECXPRV D PROV(.ECXPRV,ECXDATE)
"RTN","ECXMTL",34,0)
 .S ECXDSSI=""
"RTN","ECXMTL",35,0)
 .I ECXLOGIC>2003 D
"RTN","ECXMTL",36,0)
 ..I "^18^23^24^36^41^65^94^"[("^"_ECXTS_"^") S ECXDSSI=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXMTL",37,0)
 .;
"RTN","ECXMTL",38,0)
 .;- Observation patient indicator (YES/NO)
"RTN","ECXMTL",39,0)
 .S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXDSSI)
"RTN","ECXMTL",40,0)
 .;
"RTN","ECXMTL",41,0)
 .;- If no encounter number don't file record
"RTN","ECXMTL",42,0)
 .S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXMTL",43,0)
 .S ECXDATE=$$ECXDATE^ECXUTL(ECXDATE,ECXYM)
"RTN","ECXMTL",44,0)
 .;adjust scale name & scale number
"RTN","ECXMTL",45,0)
 .S ECXSCNAM=$E(ECXSCNAM,1,10)
"RTN","ECXMTL",46,0)
 .I ECXSCNUM]"",ECXSCNUM'=+ECXSCNUM S ECXSCNUM=+$E(ECXSCNUM,2,99)
"RTN","ECXMTL",47,0)
 .N ECXDEPT S ECXDEPT="" ;dss department use postponed S ECXDEPT=$$MTL^ECXDEPT(ECXDIV,ECXSCNAM,ECINST) ;p-46 line added
"RTN","ECXMTL",48,0)
 .N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV) ;p-46 line added
"RTN","ECXMTL",49,0)
 .D FILE
"RTN","ECXMTL",50,0)
 Q
"RTN","ECXMTL",51,0)
 ;
"RTN","ECXMTL",52,0)
PAT(ECXDFN,ECXDATE) ;determine in/outpatient status, demographics, primary care
"RTN","ECXMTL",53,0)
 N OK
"RTN","ECXMTL",54,0)
 S (ECXADT,ECXPNM,ECXSSN,ECXMPI)=""
"RTN","ECXMTL",55,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;3;5;",.ECXPAT)
"RTN","ECXMTL",56,0)
 S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXMTL",57,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXMTL",58,0)
 ;
"RTN","ECXMTL",59,0)
 ;- Purple Heart Indicator, Period of Service, Agent Orange Location
"RTN","ECXMTL",60,0)
 S ECXPHI=$G(ECXPAT("PHI")),ECXPOS=ECXPAT("POS"),ECXAOL=ECXPAT("AOL")
"RTN","ECXMTL",61,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXMTL",62,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXMTL",63,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXMTL",64,0)
 ; - Race and Ethnicity
"RTN","ECXMTL",65,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXMTL",66,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXMTL",67,0)
 ;get primary care data
"RTN","ECXMTL",68,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,ECXDATE),ECPTTM=$P(X,U)
"RTN","ECXMTL",69,0)
 S ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXMTL",70,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXMTL",71,0)
 ;get inpatient data
"RTN","ECXMTL",72,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXDOM=$P(X,U,10),ECXTS=$P(X,U,3)
"RTN","ECXMTL",73,0)
 S ECXA=$P(X,U),(ECXADT,ECXADMDT)=$P($P(X,U,4),"."),ECXDCDT=$P($P(X,U,6),".")
"RTN","ECXMTL",74,0)
 S ECXWPRV=$P(X,U,7),ECXATT=$P(X,U,8)
"RTN","ECXMTL",75,0)
 I ECXADMDT S ECXADMDT=$$ECXDATE^ECXUTL(ECXADMDT,ECXYM)
"RTN","ECXMTL",76,0)
 I ECXDCDT S ECXDCDT=$$ECXDATE^ECXUTL(ECXDCDT,ECXYM)
"RTN","ECXMTL",77,0)
 Q
"RTN","ECXMTL",78,0)
 ;
"RTN","ECXMTL",79,0)
PROV(ECXPRV,ECXDATE) ;get provider data
"RTN","ECXMTL",80,0)
 N INST,DGIEN,ARR,DIC,DR,DA,DIQ
"RTN","ECXMTL",81,0)
 S ECXPRCLS=$$PRVCLASS^ECXUTL(ECXPRV,ECXDATE)
"RTN","ECXMTL",82,0)
 S ECXPRNPI=""
"RTN","ECXMTL",83,0)
 ;get division identifier using provider
"RTN","ECXMTL",84,0)
 S ECXDIV=""
"RTN","ECXMTL",85,0)
 S IEN=0 F  D  Q:'IEN  Q:'INST  Q:ECXDIV
"RTN","ECXMTL",86,0)
 .;get pointer to file #4 from provider record
"RTN","ECXMTL",87,0)
 .I '$D(^VA(200,ECXPRV,0)) Q
"RTN","ECXMTL",88,0)
 .S IEN=$O(^VA(200,ECXPRV,2,IEN))
"RTN","ECXMTL",89,0)
 .Q:'IEN
"RTN","ECXMTL",90,0)
 .S DIC="^VA(200,",DR="16",DA=ECXPRV
"RTN","ECXMTL",91,0)
 .S DR(200.02)=".01",DA(200.02)=IEN,DIQ="ARR",DIQ(0)="I"
"RTN","ECXMTL",92,0)
 .D EN^DIQ1
"RTN","ECXMTL",93,0)
 .S INST=$G(ARR(200.02,IEN,.01,"I"))
"RTN","ECXMTL",94,0)
 .Q:'INST
"RTN","ECXMTL",95,0)
 .;get medical center division
"RTN","ECXMTL",96,0)
 .S DGIEN=$O(^DG(40.8,"AD",INST,0)) I DGIEN D
"RTN","ECXMTL",97,0)
 ..S ECXDIV=$P($G(^ECX(727.3,DGIEN,0)),U,2)
"RTN","ECXMTL",98,0)
 S ECXPRV="2"_ECXPRV
"RTN","ECXMTL",99,0)
 Q
"RTN","ECXMTL",100,0)
 ;
"RTN","ECXMTL",101,0)
FILE ;file record in #727.812
"RTN","ECXMTL",102,0)
 ;node0
"RTN","ECXMTL",103,0)
 ;facility^dfn^ssn ECXSSN^name ECXPNM^i/o status ECXA^
"RTN","ECXMTL",104,0)
 ;day ECXDATE^division ECXDIV^admit date ECXADMDT^
"RTN","ECXMTL",105,0)
 ;d/c date ECXDCDT^dss id ECXDSSI^pc team ECPTTM^pc provider ECPTPR^
"RTN","ECXMTL",106,0)
 ;pc provider npi ECPTNPI^pc prov person class ECCLAS^
"RTN","ECXMTL",107,0)
 ;provider ECXPRV^provider npi ECXPRNPI^prov person class ECXPRCLS^
"RTN","ECXMTL",108,0)
 ;test name ECXSCNAM(?)^test ien ECXSCNUM(?)^scale number^scale name^
"RTN","ECXMTL",109,0)
 ;test score^scale score^attend phys^ward provider
"RTN","ECXMTL",110,0)
 ;node1
"RTN","ECXMTL",111,0)
 ;mpi^assoc pc provider^assoc pc provider npi^
"RTN","ECXMTL",112,0)
 ;assoc pc prov person class^asi class^asi special^asi encounter date^
"RTN","ECXMTL",113,0)
 ;purple heart ind.^dom prrtp & saartp ind.^enrollment cat^
"RTN","ECXMTL",114,0)
 ;enrollment stat^enrollment prior^period of serv.^obs. pat ind.^
"RTN","ECXMTL",115,0)
 ;encounter num^agent orange loc^dob^production division^dss dept.^
"RTN","ECXMTL",116,0)
 ;head & neck canc. ind.^ethnicity^race1
"RTN","ECXMTL",117,0)
 N DA,DIK,STR
"RTN","ECXMTL",118,0)
 I $P(^ECX(ECFILE,JJ,0),U,21)="ASI" S $P(^ECX(ECFILE,JJ,1),U,7)=ECXDATE
"RTN","ECXMTL",119,0)
 S $P(^ECX(ECFILE,JJ,0),U,6,9)=ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE
"RTN","ECXMTL",120,0)
 S STR=ECXDIV_U_ECXADMDT_U_ECXDCDT_U_ECXDSSI_U_ECPTTM_U_ECPTPR_U
"RTN","ECXMTL",121,0)
 S STR=STR_ECPTNPI_U_ECCLAS,$P(^ECX(ECFILE,JJ,0),U,10,17)=STR,STR=""
"RTN","ECXMTL",122,0)
 S $P(^ECX(ECFILE,JJ,0),U,18,20)=ECXPRV_U_ECXPRNPI_U_ECXPRCLS
"RTN","ECXMTL",123,0)
 S $P(^ECX(ECFILE,JJ,0),U,23,24)=ECXSCNUM_U_ECXSCNAM
"RTN","ECXMTL",124,0)
 S $P(^ECX(ECFILE,JJ,0),U,27,29)=ECXATT_U_ECXWPRV_U
"RTN","ECXMTL",125,0)
 I '$D(^ECX(ECFILE,JJ,1)) S ^ECX(727.812,JJ,1)="^^^^^"
"RTN","ECXMTL",126,0)
 S $P(^ECX(ECFILE,JJ,1),U,1,4)=ECXMPI_U_ECASPR_U_ECASNPI_U_ECCLAS2
"RTN","ECXMTL",127,0)
 S STR=ECXPHI_U_ECXDOM_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXPOS_U
"RTN","ECXMTL",128,0)
 S STR=STR_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXDOB_U_ECXPDIV_U_ECXDEPT_U
"RTN","ECXMTL",129,0)
 S STR=STR_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXMTL",130,0)
 S $P(^ECX(ECFILE,JJ,1),U,8,22)=STR
"RTN","ECXMTL",131,0)
 S DA=JJ,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXMTL",132,0)
 S ECRN=ECRN+1
"RTN","ECXMTL",133,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXMTL",134,0)
 Q
"RTN","ECXMTL",135,0)
 ;
"RTN","ECXMTL",136,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXMTL",137,0)
 S ECHEAD="MTL"
"RTN","ECXMTL",138,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXMTL",139,0)
 Q
"RTN","ECXMTL",140,0)
 ;
"RTN","ECXMTL",141,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXMTL",142,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXMTL",143,0)
 Q
"RTN","ECXOPRX")
0^30^B62185341
"RTN","ECXOPRX",1,0)
ECXOPRX ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ; 9/3/02 3:08pm
"RTN","ECXOPRX",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,30,33,38,39,46,49**;Dec 22, 1997
"RTN","ECXOPRX",3,0)
 ;
"RTN","ECXOPRX",4,0)
BEG ;entry point from option
"RTN","ECXOPRX",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXOPRX",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXOPRX",7,0)
 Q
"RTN","ECXOPRX",8,0)
START ;entry when queued
"RTN","ECXOPRX",9,0)
 N X,DA,DIC,DIQ,DR
"RTN","ECXOPRX",10,0)
 S QFLG=0
"RTN","ECXOPRX",11,0)
 I '$D(ECINST) D
"RTN","ECXOPRX",12,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXOPRX",13,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXOPRX",14,0)
 ;before V6
"RTN","ECXOPRX",15,0)
 S ECPROF=6
"RTN","ECXOPRX",16,0)
 S ECD=$O(^PSRX("AL",0)) I ECD,ECD<ECSD1 G V6
"RTN","ECXOPRX",17,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",18,0)
 F  S ECD=$O(^PSRX("AD",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AD",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AD",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",19,0)
 Q
"RTN","ECXOPRX",20,0)
 ;
"RTN","ECXOPRX",21,0)
V6 ;version 6 or better
"RTN","ECXOPRX",22,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",23,0)
 S ECPROF=2
"RTN","ECXOPRX",24,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",25,0)
 F  S ECD=$O(^PSRX("AL",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AL",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AL",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",26,0)
 Q:QFLG
"RTN","ECXOPRX",27,0)
 S ECREF="P",ECD=ECSD1
"RTN","ECXOPRX",28,0)
 F  S ECD=$O(^PSRX("AM",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AM",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AM",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",29,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",30,0)
 Q
"RTN","ECXOPRX",31,0)
 ;
"RTN","ECXOPRX",32,0)
STUFF ;get data
"RTN","ECXOPRX",33,0)
 S ECDATA=$G(^PSRX(ECRX,0))
"RTN","ECXOPRX",34,0)
 I ECRFL S ECDATA1=$G(^PSRX(ECRX,ECREF,ECRFL,0)) I ECDATA1="" Q
"RTN","ECXOPRX",35,0)
 ;ecref set to 1 in extract+5 and v6+1 and to "P" in v6+2
"RTN","ECXOPRX",36,0)
 ;refill nodes and partial nodes are identical in layout.  Fills
"RTN","ECXOPRX",37,0)
 ;(ie ecrfl=0)& refills (ie ecrfl>0) from "AL" xref, partials from "AM"
"RTN","ECXOPRX",38,0)
 ;
"RTN","ECXOPRX",39,0)
 S (ECXDSSD,ECXPROVN)="",ECXERR=0
"RTN","ECXOPRX",40,0)
 S ECXDATE=ECD
"RTN","ECXOPRX",41,0)
 S ECXDFN=$P(ECDATA,U,2)
"RTN","ECXOPRX",42,0)
 S ECDRG=+$P(ECDATA,U,6)
"RTN","ECXOPRX",43,0)
 ;
"RTN","ECXOPRX",44,0)
 ;- Get provider (either 2_provider or 6_provider depending on version)
"RTN","ECXOPRX",45,0)
 S ECXPROV=$S($P(ECDATA,U,4)'="":ECPROF_$P(ECDATA,U,4),1:"")
"RTN","ECXOPRX",46,0)
 S ECXPROVP=$$PRVCLASS^ECXUTL($P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",47,0)
 ;
"RTN","ECXOPRX",48,0)
 ;get patient specific data
"RTN","ECXOPRX",49,0)
 D PAT(ECXDFN,ECXDATE,.ECXERR)
"RTN","ECXOPRX",50,0)
 Q:ECXERR
"RTN","ECXOPRX",51,0)
 I 'ECRFL D
"RTN","ECXOPRX",52,0)
 .S ECMW=$P(ECDATA,U,11),ECQTY=+$P(ECDATA,U,7),ECXDIV=$S($D(^PSRX(ECRX,2)):$P(^(2),U,9),1:1)
"RTN","ECXOPRX",53,0)
 .S ECPRC=+$P(ECDATA,U,17),ECOPAY=$P($G(^PSRX(ECRX,"IB")),U,2)]""
"RTN","ECXOPRX",54,0)
 I ECRFL D
"RTN","ECXOPRX",55,0)
 .S ECMW=$P(ECDATA1,U,2),ECQTY=+$P(ECDATA1,U,4),ECXDIV=$S(+$P(ECDATA1,U,9):$P(ECDATA1,U,9),1:1)
"RTN","ECXOPRX",56,0)
 .S ECPRC=+$P(ECDATA1,U,11),ECOPAY=$P($G(^PSRX(ECRX,1,ECRFL,"IB")),U)]""
"RTN","ECXOPRX",57,0)
 ;
"RTN","ECXOPRX",58,0)
 S ECXCOST=$J((ECQTY*ECPRC),1,2)
"RTN","ECXOPRX",59,0)
 S ECDS=$S(ECRFL:$P(ECDATA1,U,10),1:$P(ECDATA,U,8))
"RTN","ECXOPRX",60,0)
 S ECCAT=$P(^PSDRUG(ECDRG,0),U,2),ECINV=$P(^(0),U,3)["I",ECINV=$S(ECINV:"I",1:"")
"RTN","ECXOPRX",61,0)
 S ECUI=$P($G(^PSDRUG(ECDRG,660)),U,8)
"RTN","ECXOPRX",62,0)
 S ECNDC=$P($G(^PSDRUG(ECDRG,2)),U,4),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXOPRX",63,0)
 S ECNDF=$G(^PSDRUG(ECDRG,"ND")),P1=$P(ECNDF,U),P3=$P(ECNDF,U,3)
"RTN","ECXOPRX",64,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXOPRX",65,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXOPRX",66,0)
 I ECMW="M" S ECMW=1 I $D(^PSRX("AR",ECD,ECRX)) S ECMW=2
"RTN","ECXOPRX",67,0)
 I ECMW="W" S ECMW=""
"RTN","ECXOPRX",68,0)
 S ECXNEW="" I ECRFL=0 S ECXNEW=1
"RTN","ECXOPRX",69,0)
 ;
"RTN","ECXOPRX",70,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXOPRX",71,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXOPRX",72,0)
 ;
"RTN","ECXOPRX",73,0)
 ;- Ordering physician (null for FY2002)
"RTN","ECXOPRX",74,0)
 S ECXORDPH=""
"RTN","ECXOPRX",75,0)
 ;
"RTN","ECXOPRX",76,0)
 ;- Ordering stop code
"RTN","ECXOPRX",77,0)
 S ECXORDST=$P($G(^ECX(728.44,+$P(ECDATA,U,5),0)),U,2)
"RTN","ECXOPRX",78,0)
 ;
"RTN","ECXOPRX",79,0)
 ;- Ordering date
"RTN","ECXOPRX",80,0)
 S ECXORDDT=$$ECXDATE^ECXUTL(+$P(ECDATA,U,13),ECXYM)
"RTN","ECXOPRX",81,0)
 ;
"RTN","ECXOPRX",82,0)
 ;- CNH status (YES/NO)
"RTN","ECXOPRX",83,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXOPRX",84,0)
 ;
"RTN","ECXOPRX",85,0)
 ;- DSS Dept and National Prod Division
"RTN","ECXOPRX",86,0)
 ;S ECXDSSD=$$PRE^ECXDEPT(ECXDIV,ECMW,ECINST) dss department postponed
"RTN","ECXOPRX",87,0)
 N ECXPDIV S ECXPDIV=$$PREDIV^ECXDEPT(ECXDIV)
"RTN","ECXOPRX",88,0)
 ;
"RTN","ECXOPRX",89,0)
 ;- If no encounter number don't file record
"RTN","ECXOPRX",90,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXOPRX",91,0)
 I ECXLOGIC>2003 D
"RTN","ECXOPRX",92,0)
 .I ECMW=2,ECXSSN'="" D
"RTN","ECXOPRX",93,0)
 ..N TMP
"RTN","ECXOPRX",94,0)
 ..S TMP=$S(ECXADMDT:$$JULDT^ECXUTL4(ECXADMDT),1:$$JULDT^ECXUTL4(ECXDATE))
"RTN","ECXOPRX",95,0)
 ..S ECXENC=$E(ECXSSN,1,9)_TMP_"160"
"RTN","ECXOPRX",96,0)
 ..S ECXA="O"
"RTN","ECXOPRX",97,0)
 I ECXENC'="" D FILE
"RTN","ECXOPRX",98,0)
 Q
"RTN","ECXOPRX",99,0)
 ;
"RTN","ECXOPRX",100,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;Determine in/outpatient status, movement number, primary care team and provider
"RTN","ECXOPRX",101,0)
 N OK,X,PT
"RTN","ECXOPRX",102,0)
 ;get patient data if saved
"RTN","ECXOPRX",103,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXOPRX",104,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXSSN=$P(PT,U),ECXPNM=$P(PT,U,2)
"RTN","ECXOPRX",105,0)
 .S ECXMPI=$P(PT,U,3),ECXSEX=$P(PT,U,4),ECXDOB=$P(PT,U,5)
"RTN","ECXOPRX",106,0)
 .S ECXELIG=$P(PT,U,6),ECXVET=$P(PT,U,7),ECXRACE=$P(PT,U,8)
"RTN","ECXOPRX",107,0)
 .S ECXPST=$P(PT,U,9),ECXPLOC=$P(PT,U,10),ECXRST=$P(PT,U,11)
"RTN","ECXOPRX",108,0)
 .S ECXAST=$P(PT,U,12),ECXMST=$P(PT,U,13),ECXSTATE=$P(PT,U,14)
"RTN","ECXOPRX",109,0)
 .S ECXCNTY=$P(PT,U,15),ECXZIP=$P(PT,U,16),ECXENRL=$P(PT,U,17)
"RTN","ECXOPRX",110,0)
 .S ECXPAYOR=$P(PT,U,18),ECXSAI=$P(PT,U,19),ECXPHI=$P(PT,U,20)
"RTN","ECXOPRX",111,0)
 .S ECXCAT=$P(PT,U,21),ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23)
"RTN","ECXOPRX",112,0)
 .S ECXCNHU=$P(PT,U,24),ECXPOS=$P(PT,U,25),ECXAOL=$P(PT,U,26)
"RTN","ECXOPRX",113,0)
 .S ECXHNCI=$P(PT,U,27),ECXETH=$P(PT,U,28),ECXRC1=$P(PT,U,29),ECXMTST=$P(PT,U,30)
"RTN","ECXOPRX",114,0)
 ;set patient data
"RTN","ECXOPRX",115,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXOPRX",116,0)
 .K ECXPAT
"RTN","ECXOPRX",117,0)
 .S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD1,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXOPRX",118,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXOPRX",119,0)
 .S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI")
"RTN","ECXOPRX",120,0)
 .S ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXOPRX",121,0)
 .S ECXVET=ECXPAT("VET"),ECXRACE=ECXPAT("RACE"),ECXPST=ECXPAT("POW STAT")
"RTN","ECXOPRX",122,0)
 .S ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXOPRX",123,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXOPRX",124,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXOPRX",125,0)
 .S ECXZIP=ECXPAT("ZIP"),ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXOPRX",126,0)
 .;
"RTN","ECXOPRX",127,0)
 .;- CNH Stat (placeholder),Purp Heart Ind,Per of Svce,AO Loc,MT Stat
"RTN","ECXOPRX",128,0)
 .S ECXCNHU="",ECXPHI=ECXPAT("PHI"),ECXPOS=ECXPAT("POS"),ECXAOL=ECXPAT("AOL"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXOPRX",129,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",130,0)
 .;get sharing agreement data
"RTN","ECXOPRX",131,0)
 .S (ECXPAYOR,ECXSAI)=""
"RTN","ECXOPRX",132,0)
 .D VISN19^ECXUTL2(ECXDFN,.ECXPAYOR,.ECXSAI)
"RTN","ECXOPRX",133,0)
 .; - Head and Neck Cancer Indicator
"RTN","ECXOPRX",134,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXOPRX",135,0)
 .; - Race and Ethnicity
"RTN","ECXOPRX",136,0)
 .S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXOPRX",137,0)
 .S ECXRC1=ECXPAT("RACE1")
"RTN","ECXOPRX",138,0)
 .;save for later
"RTN","ECXOPRX",139,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXSSN_U_ECXPNM_U_ECXMPI_U_ECXSEX_U_ECXDOB_U_ECXELIG_U_ECXVET_U_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U_ECXMST_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXENRL_U_ECXPAYOR_U_ECXSAI
"RTN","ECXOPRX",140,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXPHI_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXCNHU_U_ECXPOS_U_ECXAOL_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXOPRX",141,0)
 ;get inpatient data
"RTN","ECXOPRX",142,0)
 S (ECXA,ECXADMDT,ECXDOM,ECXMN,ECXTS)=""
"RTN","ECXOPRX",143,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE) D
"RTN","ECXOPRX",144,0)
 .S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10)
"RTN","ECXOPRX",145,0)
 .S ECXADMDT=$P(X,U,4)
"RTN","ECXOPRX",146,0)
 ;get primary care data
"RTN","ECXOPRX",147,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXOPRX",148,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXOPRX",149,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXOPRX",150,0)
 Q
"RTN","ECXOPRX",151,0)
 ;
"RTN","ECXOPRX",152,0)
FILE ;file record
"RTN","ECXOPRX",153,0)
 ;node0
"RTN","ECXOPRX",154,0)
 ;inst^dfn^ssn^name^in/out ECXA^day^division^provider^drug category^mail^
"RTN","ECXOPRX",155,0)
 ;placeholder1^new^placeholder2^qty^cost^placeholder3^
"RTN","ECXOPRX",156,0)
 ;mov #^treat spec^placeholder4^unit of issue^dob^elig^vet^copay^
"RTN","ECXOPRX",157,0)
 ;feeder key^investigational^days supply^primary care team^
"RTN","ECXOPRX",158,0)
 ;primary care provider^time^race
"RTN","ECXOPRX",159,0)
 ;node1
"RTN","ECXOPRX",160,0)
 ;mpi^dss dept^sex^zip+4^provider npi^pc provider npi^state^county^
"RTN","ECXOPRX",161,0)
 ;pc prov person class^pow status^pow location^
"RTN","ECXOPRX",162,0)
 ;ir status^ao status^sharing agree. payor^sharing agree. ins.^
"RTN","ECXOPRX",163,0)
 ;mst status^enroll loc^assoc pc provider^assoc pc prov person class^
"RTN","ECXOPRX",164,0)
 ;assoc pc prov npi^dom ECXDOM^purple heart ECXPHI^
"RTN","ECXOPRX",165,0)
 ;enrollment category ECXCAT^enrollment status ECXSTST^
"RTN","ECXOPRX",166,0)
 ;enrollment priority ECXPRIOR^cnhu status ECXCNHU^
"RTN","ECXOPRX",167,0)
 ;period of service ECXPOS^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXOPRX",168,0)
 ;ao loc ECXAOL^ord physician ECXORDPH^ord stop code ECXORDST^
"RTN","ECXOPRX",169,0)
 ;ord date ECXORDDT^CNH status ECXCNH^national division ECXPDIV^
"RTN","ECXOPRX",170,0)
 ;MT Stat ECXMTST^head & neck cancer ind. ECXHNCI^ethnicity ECXETH^race ECXRC1
"RTN","ECXOPRX",171,0)
 N DA,DIK
"RTN","ECXOPRX",172,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXOPRX",173,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXOPRX",174,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXDIV_U
"RTN","ECXOPRX",175,0)
 S ECODE=ECODE_ECXPROV_U_ECCAT_U_ECMW_U_ECXPROVP_U_ECXNEW_U_U_ECQTY_U
"RTN","ECXOPRX",176,0)
 S ECODE=ECODE_ECXCOST_U_U_ECXMN_U_ECXTS_U_U_ECUI_U_ECXDOB_U
"RTN","ECXOPRX",177,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECOPAY_U_ECNFC_U_ECINV_U_ECDS_U
"RTN","ECXOPRX",178,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_$$ECXTIME^ECXUTL(ECXDATE)_U_ECXRACE_U
"RTN","ECXOPRX",179,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U_ECXPROVN_U_ECPTNPI_U
"RTN","ECXOPRX",180,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECCLAS_U_ECXPST_U_ECXPLOC_U
"RTN","ECXOPRX",181,0)
 S ECODE1=ECODE1_ECXRST_U_ECXAST_U_ECXPAYOR_U_ECXSAI_U_ECXMST_U_ECXENRL_U
"RTN","ECXOPRX",182,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXDOM_U_ECXPHI_U_ECXCAT_U
"RTN","ECXOPRX",183,0)
 S ECODE1=ECODE1_ECXSTAT_U_ECXPRIOR_U_ECXCNHU_U_ECXPOS_U_ECXOBS_U
"RTN","ECXOPRX",184,0)
 S ECODE1=ECODE1_ECXENC_U_ECXAOL_U_ECXORDPH_U_ECXORDST_U_ECXORDDT_U
"RTN","ECXOPRX",185,0)
 S ECODE1=ECODE1_ECXCNH_U_ECXPDIV_U_ECXMTST_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXOPRX",186,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXOPRX",187,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXOPRX",188,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXOPRX",189,0)
 Q
"RTN","ECXOPRX",190,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXOPRX",191,0)
 S ECHEAD="PRE"
"RTN","ECXOPRX",192,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXOPRX",193,0)
 Q
"RTN","ECXOPRX",194,0)
 ;
"RTN","ECXOPRX",195,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXOPRX",196,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPIVDN")
0^13^B60333256
"RTN","ECXPIVDN",1,0)
ECXPIVDN ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ; 9/26/02 1:51pm
"RTN","ECXPIVDN",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,33,39,46,49**;Dec 22, 1997
"RTN","ECXPIVDN",3,0)
START ; start package specific extract
"RTN","ECXPIVDN",4,0)
 N DIC,DA,DR,DIQ,DFN
"RTN","ECXPIVDN",5,0)
 S QFLG=0
"RTN","ECXPIVDN",6,0)
 I '$D(ECINST) D
"RTN","ECXPIVDN",7,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPIVDN",8,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPIVDN",9,0)
 S ECED=ECED+.3
"RTN","ECXPIVDN",10,0)
 K ^TMP($J,"A"),^TMP($J,"S")
"RTN","ECXPIVDN",11,0)
 S ECD=ECSD1
"RTN","ECXPIVDN",12,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^TMP($J,"S") S ECVOL=0 D  Q:QFLG
"RTN","ECXPIVDN",13,0)
 .S ECXERR=0 D PAT(DFN,ECD,.ECXERR)
"RTN","ECXPIVDN",14,0)
 .Q:ECXERR
"RTN","ECXPIVDN",15,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  Q:QFLG  I $D(^ECX(728.113,DA,0)) S EC=^(0) D  Q:QFLG
"RTN","ECXPIVDN",16,0)
 ..S DRG=$P(EC,U,4) I $P(EC,U,8)]"" D
"RTN","ECXPIVDN",17,0)
 ...I '$D(^TMP($J,"A",DRG)) S ^(DRG)=$P(EC,U,7,8),^(DRG,1)=0,^(2)=$P(EC,U,12)
"RTN","ECXPIVDN",18,0)
 ...S ^(1)=^TMP($J,"A",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",19,0)
 ..I $P(EC,U,9) D
"RTN","ECXPIVDN",20,0)
 ...I '$D(^TMP($J,"S",DRG)) S ^(DRG)=$P(EC,U,9)_"^ML",^(DRG,1)=0,^(2)=$P(EC,U,12),ECVOL=$P(EC,U,9)+ECVOL
"RTN","ECXPIVDN",21,0)
 ...S ^(1)=^TMP($J,"S",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",22,0)
 ..S ECTYP=$P(EC,U,11),ECTOTC=0,ECDTTM=$$ECXTIME^ECXUTL($P(EC,U,5))
"RTN","ECXPIVDN",23,0)
 .;looped thru all DAs for this order - now put it together
"RTN","ECXPIVDN",24,0)
 .;leave the next line in case the decision is made to send volume designations
"RTN","ECXPIVDN",25,0)
 .;I ECTYP="H" S ECTYP=ECTYP_$S(ECVOL'>1000:1,ECVOL'>2000:2,1:3)
"RTN","ECXPIVDN",26,0)
 .S ECXDSSI="",ECXDSSD=""
"RTN","ECXPIVDN",27,0)
 .F SA="S","A" S DRG="" F  S DRG=$O(^TMP($J,SA,DRG)) Q:DRG=""  I $D(^PSDRUG(DRG,0)) D STUFF Q:QFLG
"RTN","ECXPIVDN",28,0)
 K ^TMP($J),CLIN,DA,DFN,DIC,DIK,DRG,ON,SA,X,Y,P1,P3
"RTN","ECXPIVDN",29,0)
 Q
"RTN","ECXPIVDN",30,0)
 ;
"RTN","ECXPIVDN",31,0)
STUFF ;get data
"RTN","ECXPIVDN",32,0)
 S ECST=^TMP($J,SA,DRG),ECXCNT=^(DRG,1),ECXCOST=^(2),ECXCOST=ECXCOST*ECXCNT
"RTN","ECXPIVDN",33,0)
 S EC0=^PSDRUG(DRG,0),ECVACL=$P(EC0,U,2),EC2=$G(^(2)),ECND=$G(^("ND"))
"RTN","ECXPIVDN",34,0)
 ;if outpatient get division from iv rm; get dss identifier for clinic
"RTN","ECXPIVDN",35,0)
 I ECXA="O" D
"RTN","ECXPIVDN",36,0)
 .;
"RTN","ECXPIVDN",37,0)
 .;- Only set ward to .5 if outpatient (but NOT observation patient)
"RTN","ECXPIVDN",38,0)
 .I $G(ECXW)="" S ECXW=.5
"RTN","ECXPIVDN",39,0)
 .I $D(^PS(55,DFN,"IV",ON,2)) S ECIVRM=$P(^(2),U,2),ECXDIV=$P(^PS(59.5,ECIVRM,0),U,4)
"RTN","ECXPIVDN",40,0)
 .S CLIN=+$P(EC,U,13),(ECXP1,ECXP2)="000"
"RTN","ECXPIVDN",41,0)
 .S ECXCL=$G(^ECX(728.44,CLIN,0)) Q:ECXCL=""
"RTN","ECXPIVDN",42,0)
 .S ECSC=$P(ECXCL,U,4),ECCSC=$P(ECXCL,U,5)
"RTN","ECXPIVDN",43,0)
 .I ECSC="" S ECSC=$P(ECXCL,U,2),ECCSC=$P(ECXCL,U,3)
"RTN","ECXPIVDN",44,0)
 .I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXPIVDN",45,0)
 .I ECSC="" S ECSC=$P($G(^SC(ECXCL,0)),U,7),ECCSC=$P($G(^SC(ECXCL,0)),U,18) I ECSC D
"RTN","ECXPIVDN",46,0)
 ..S ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2) S:ECCSC]"" ECXP2=$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXPIVDN",47,0)
 ..S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXPIVDN",48,0)
 .S ECXDSSI=ECXP1_ECXP2
"RTN","ECXPIVDN",49,0)
 .I ECXLOGIC>2003 D
"RTN","ECXPIVDN",50,0)
 ..I "^18^23^24^36^41^65^94^"[("^"_ECXTS_"^") S ECXDSSI=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXPIVDN",51,0)
 S ECINV=$P(EC0,U,3),ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXPIVDN",52,0)
 S ECST=ECXCNT*ECST_" "_$P(ECST,U,2)
"RTN","ECXPIVDN",53,0)
 S ECNDC=$P(EC2,U,4),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXPIVDN",54,0)
 S P1=$P(ECND,U),P3=$P(ECND,U,3)
"RTN","ECXPIVDN",55,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXPIVDN",56,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXPIVDN",57,0)
 ;
"RTN","ECXPIVDN",58,0)
 ;- Ordering provider ("2"_provider)
"RTN","ECXPIVDN",59,0)
 S ECXORDPR=$S(+$P(EC,U,10):"2"_$P(EC,U,10),1:"")
"RTN","ECXPIVDN",60,0)
 S ECXOPNPI=""
"RTN","ECXPIVDN",61,0)
 ;- Ordering date
"RTN","ECXPIVDN",62,0)
 S ECXORDDT=$S(+$P($G(^PS(55,DFN,"IV",ON,4)),U,2):$P($G(^PS(55,DFN,"IV",ON,4)),U,2),+$P($G(^PS(55,DFN,"IV",ON,2)),U):$P($G(^PS(55,DFN,"IV",ON,2)),U),1:"")
"RTN","ECXPIVDN",63,0)
 ;S ECXORDDT=$P(EC,U,14)
"RTN","ECXPIVDN",64,0)
 ;- Requesting physician (null for FY2002)
"RTN","ECXPIVDN",65,0)
 S ECXRPHY=""
"RTN","ECXPIVDN",66,0)
 ;- Department and National Prod Division
"RTN","ECXPIVDN",67,0)
 S ECXDSSD="" ;dss department use postponed $$IVP^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",68,0)
 N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",69,0)
 ;- Observation patient indicator (yes/no)
"RTN","ECXPIVDN",70,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXDSSI)
"RTN","ECXPIVDN",71,0)
 ; - Ordering Date, Ordering Stop Code
"RTN","ECXPIVDN",72,0)
 S ECXORDST=""
"RTN","ECXPIVDN",73,0)
 I ECXA="O" D
"RTN","ECXPIVDN",74,0)
 .I ECXOBS="NO" S ECXORDST=$S(ECXP1:ECXP1,1:"160")
"RTN","ECXPIVDN",75,0)
 .I ECXOBS="YES" S ECXORDST=$P($G(^ECX(727.831,+ECXTS,0)),U,6)
"RTN","ECXPIVDN",76,0)
 ;- If no encounter number don't file record
"RTN","ECXPIVDN",77,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ECD,ECXTS,ECXOBS,ECHEAD,ECXORDST,)
"RTN","ECXPIVDN",78,0)
 ;
"RTN","ECXPIVDN",79,0)
 ;get BCMA data
"RTN","ECXPIVDN",80,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)=""
"RTN","ECXPIVDN",81,0)
 ;
"RTN","ECXPIVDN",82,0)
 ;get ordering provider person class
"RTN","ECXPIVDN",83,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXORDPR,2,999),ECXORDDT)
"RTN","ECXPIVDN",84,0)
 ;
"RTN","ECXPIVDN",85,0)
 D:ECXENC'="" FILE K P1,P3
"RTN","ECXPIVDN",86,0)
 Q
"RTN","ECXPIVDN",87,0)
 ;
"RTN","ECXPIVDN",88,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographics, primary care, and inpatient data
"RTN","ECXPIVDN",89,0)
 N X
"RTN","ECXPIVDN",90,0)
 ;get patient data if saved
"RTN","ECXPIVDN",91,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXPIVDN",92,0)
 .S PT=^TMP($J,"ECXP",ECXDFN)
"RTN","ECXPIVDN",93,0)
 .S ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2),ECXMPI=$P(PT,U,3)
"RTN","ECXPIVDN",94,0)
 .S ECXDOB=$P(PT,U,4),ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6)
"RTN","ECXPIVDN",95,0)
 .S ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXPIVDN",96,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12)
"RTN","ECXPIVDN",97,0)
 .S ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXPIVDN",98,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18)
"RTN","ECXPIVDN",99,0)
 .S ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXPIVDN",100,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24)
"RTN","ECXPIVDN",101,0)
 .S ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXPIVDN",102,0)
 ;set patient data
"RTN","ECXPIVDN",103,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXPIVDN",104,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXPIVDN",105,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXPIVDN",106,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXPIVDN",107,0)
 .S ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXPIVDN",108,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXPIVDN",109,0)
 .S ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET")
"RTN","ECXPIVDN",110,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT")
"RTN","ECXPIVDN",111,0)
 .S ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXPIVDN",112,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL")
"RTN","ECXPIVDN",113,0)
 .S ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXPIVDN",114,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXPIVDN",115,0)
 .;get CNHU status
"RTN","ECXPIVDN",116,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXPIVDN",117,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXPIVDN",118,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",119,0)
 .; - Head and Neck Cancer Indicator
"RTN","ECXPIVDN",120,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXPIVDN",121,0)
 .; - Race and Ethnicity
"RTN","ECXPIVDN",122,0)
 .S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXPIVDN",123,0)
 .S ECXRC1=ECXPAT("RACE1")
"RTN","ECXPIVDN",124,0)
 .;save for later
"RTN","ECXPIVDN",125,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXPIVDN",126,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXPIVDN",127,0)
 ;
"RTN","ECXPIVDN",128,0)
 ;get primary care data
"RTN","ECXPIVDN",129,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXPIVDN",130,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXPIVDN",131,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXPIVDN",132,0)
 ;
"RTN","ECXPIVDN",133,0)
 ;get inpatient data
"RTN","ECXPIVDN",134,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW,ECXDIV)=""
"RTN","ECXPIVDN",135,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXPIVDN",136,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4)
"RTN","ECXPIVDN",137,0)
 S W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";"),ECXDIV=$P(W,";",2)
"RTN","ECXPIVDN",138,0)
 Q
"RTN","ECXPIVDN",139,0)
 ;
"RTN","ECXPIVDN",140,0)
FILE ;file record
"RTN","ECXPIVDN",141,0)
 ;node0
"RTN","ECXPIVDN",142,0)
 ;fac^dfn^ssn^name^i/o^day^va class^qty^ward^cost^movement #^treat spec^ndc^investigational^iv dispensing fee^new feeder key^total doses^
"RTN","ECXPIVDN",143,0)
 ;primary care team^primary care provider^ivp time^adm date^adm time^dss identifier
"RTN","ECXPIVDN",144,0)
 ;node1
"RTN","ECXPIVDN",145,0)
 ;mpi^dss dept^pc provider npi^pc prov person class^assoc pc provider^assoc pc prov person class^assoc pc prov npi^dom^obs pat ind^enc num^
"RTN","ECXPIVDN",146,0)
 ;ord pr^ord dt^req phys^nat prod division^means tst^elig^dob^sex^state^county^zip+4^vet^period of svc^pow stat^pow loc^ir stat^ao stat^
"RTN","ECXPIVDN",147,0)
 ;ao loc^purple heart ind.^mst stat^enrollment loc^enrollment cat^enrollment stat^enrollment prior^cnh/sh stat^ord pr npi
"RTN","ECXPIVDN",148,0)
 ;node2
"RTN","ECXPIVDN",149,0)
 ;head & neck cancer ind.^ethnicity^race1^bcma drug dispensed^
"RTN","ECXPIVDN",150,0)
 ;bcma dose given^bcma unit of administration^bcma ICU flag^
"RTN","ECXPIVDN",151,0)
 ;ordering provider person class
"RTN","ECXPIVDN",152,0)
 N DA,DIK
"RTN","ECXPIVDN",153,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPIVDN",154,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_DFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPIVDN",155,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECVACL_U_ECXCNT_U_ECXW_U
"RTN","ECXPIVDN",156,0)
 S ECODE=ECODE_ECXCOST_U_ECXMN_U_ECXTS_U_ECNDC_U_ECINV_U_ECTYP_U_ECNFC_U
"RTN","ECXPIVDN",157,0)
 S ECODE=ECODE_ECST_U_ECPTTM_U_ECPTPR_U_ECDTTM_U
"RTN","ECXPIVDN",158,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U
"RTN","ECXPIVDN",159,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECXADM)_U_ECXDSSI_U
"RTN","ECXPIVDN",160,0)
 ;if outpat and not observ patient, admit date="" and admit time="000000"
"RTN","ECXPIVDN",161,0)
 I ECXA="O",(ECXOBS="NO") S $P(ECODE,U,24)="",$P(ECODE,U,25)="000000"
"RTN","ECXPIVDN",162,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECPTNPI_U_ECCLAS_U_ECASPR_U_ECCLAS2_U
"RTN","ECXPIVDN",163,0)
 S ECODE1=ECODE1_ECASNPI_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDPR_U
"RTN","ECXPIVDN",164,0)
 S ECODE1=ECODE1_ECXORDST_U_$$ECXDATE^ECXUTL(ECXORDDT,ECXYM)_U
"RTN","ECXPIVDN",165,0)
 S ECODE1=ECODE1_ECXRPHY_U_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U
"RTN","ECXPIVDN",166,0)
 S ECODE1=ECODE1_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U
"RTN","ECXPIVDN",167,0)
 S ECODE1=ECODE1_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXPIVDN",168,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCAT_U
"RTN","ECXPIVDN",169,0)
 S ECODE1=ECODE1_ECXSTAT_U_ECXPRIOR_U_ECXCNHU_U_ECXOPNPI_U
"RTN","ECXPIVDN",170,0)
 S ECODE2=ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXPIVDN",171,0)
 I ECXLOGIC>2003 D
"RTN","ECXPIVDN",172,0)
 .S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXPIVDN",173,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXPIVDN",174,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXPIVDN",175,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXPIVDN",176,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPIVDN",177,0)
 Q
"RTN","ECXPIVDN",178,0)
 ;
"RTN","ECXPIVDN",179,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPIVDN",180,0)
 S ECHEAD="IVP"
"RTN","ECXPIVDN",181,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPIVDN",182,0)
 ;variables ecver and ecrtn will be reset in routine ecxtrac if appropriate
"RTN","ECXPIVDN",183,0)
 S ECVER=7
"RTN","ECXPIVDN",184,0)
 Q
"RTN","ECXPIVDN",185,0)
 ;
"RTN","ECXPIVDN",186,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPIVDN",187,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPURG")
0^49^B15706994
"RTN","ECXPURG",1,0)
ECXPURG ;BIR/CML-Driver for Purge of DSS Data from Local Extract & Holding Files ; [ 12/03/96  5:19 PM ]
"RTN","ECXPURG",2,0)
 ;;3.0;DSS EXTRACTS;**9,24,33,35,49**;Dec 22, 1997
"RTN","ECXPURG",3,0)
EN ;entry point from option
"RTN","ECXPURG",4,0)
 W @IOF,!!,"This option will allow you to purge:"
"RTN","ECXPURG",5,0)
 W !,"1. individual or a range of DSS extracts, or"
"RTN","ECXPURG",6,0)
 W !,"2. data that resides in the ""holding files"" for the IVP and UDP extracts."
"RTN","ECXPURG",7,0)
 W !!,"Care must be taken for several reasons:"
"RTN","ECXPURG",8,0)
 W !!,"-  You can purge ANY existing extract.  This includes transmitted and non-"
"RTN","ECXPURG",9,0)
 W !,"   transmitted extracts as well as extracts that did not run to completion"
"RTN","ECXPURG",10,0)
 W !,"   due to errors or system problems."
"RTN","ECXPURG",11,0)
 W !,"-  Choosing a range of extracts (or a broad date range for the ""holding"
"RTN","ECXPURG",12,0)
 W !,"   files"") could mean an excessively large number of records and be very"
"RTN","ECXPURG",13,0)
 W !,"   CPU intensive.  Please be sure to queue this purge for off-hours and"
"RTN","ECXPURG",14,0)
 W !,"   limit the number of extracts to be purged per a single queued session."
"RTN","ECXPURG",15,0)
 W !,"-  The IVP and UDP ""holding"" files are intermediate files that are"
"RTN","ECXPURG",16,0)
 W !,"   populated ""realtime"" by inpatient pharmacy activity.  These files are"
"RTN","ECXPURG",17,0)
 W !,"   then used to generate the IVP and UDP extracts and CANNOT be recreated."
"RTN","ECXPURG",18,0)
 W !,"   Once they are purged for a date range, extracts can no longer be"
"RTN","ECXPURG",19,0)
 W !,"   generated for that time period."
"RTN","ECXPURG",20,0)
 ;
"RTN","ECXPURG",21,0)
 K DIR W !
"RTN","ECXPURG",22,0)
 S DIR(0)="SAM^E:Extract Files;I:IVP Holding File;U:UDP Holding File"
"RTN","ECXPURG",23,0)
 S DIR("A")="Purge (E)xtract files, (I)VP data, or (U)DP data? "
"RTN","ECXPURG",24,0)
 D ^DIR K DIR G:$D(DIRUT) QUIT S ECY=Y
"RTN","ECXPURG",25,0)
 I ECY="E" D ^ECXPURG1 I $D(ECLOC) S ZTSAVE("ECLOC(")="",ZTIO="",ZTRTN="PUR1^ECXPURG",ZTDESC="DSS - Purge of Extract Files" D QUE
"RTN","ECXPURG",26,0)
 I ECY="I" D DATES^ECXPURG1 I $D(ECBDT)&($D(ECEDT)) S (ZTSAVE("ECBDT"),ZTSAVE("ECEDT"))="",ZTIO="",ZTRTN="PUR2^ECXPURG",ZTDESC="DSS - Purge of IVP Holding File" D QUE
"RTN","ECXPURG",27,0)
 I ECY="U" D DATES^ECXPURG1 I $D(ECBDT)&($D(ECEDT)) S (ZTSAVE("ECBDT"),ZTSAVE("ECEDT"))="",ZTIO="",ZTRTN="PUR3^ECXPURG",ZTDESC="DSS - Purge of UDP Holding File" D QUE
"RTN","ECXPURG",28,0)
QUIT ;
"RTN","ECXPURG",29,0)
 K %X,%Y,EC,ECBDT,ECDATE,ECDT,ECEDT,ECEX,ECFR,ECLOC,ECRC,ECTO,ECTRN,ECTYP,ECY,HDT,HI,JJ,LN,LO,PG,QFLG,SS,X,Y,ZTSK
"RTN","ECXPURG",30,0)
 K ECXDIV
"RTN","ECXPURG",31,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECXPURG",32,0)
 Q
"RTN","ECXPURG",33,0)
QUE W $C(7),$C(7),!!?3,"<<This purge should be queued to run during non-peak hours.>>",!
"RTN","ECXPURG",34,0)
 D ^%ZTLOAD
"RTN","ECXPURG",35,0)
 I $D(ZTSK) W !,"Request queued as Task #",ZTSK,".",!
"RTN","ECXPURG",36,0)
 Q
"RTN","ECXPURG",37,0)
 ;
"RTN","ECXPURG",38,0)
PUR1 ; entry point for queued purge job of extract files
"RTN","ECXPURG",39,0)
 S ECDA=0 F  S ECDA=$O(ECLOC(ECDA)) Q:'ECDA  D
"RTN","ECXPURG",40,0)
 .S ECFILE=^ECX(727,ECDA,"FILE"),ECJ=0
"RTN","ECXPURG",41,0)
 .I ECFILE=727.827 D
"RTN","ECXPURG",42,0)
 ..S DA(1)=1
"RTN","ECXPURG",43,0)
 ..S DA=$O(^ECX(728,DA(1),"CBOC","B",ECDA,0))
"RTN","ECXPURG",44,0)
 ..S DIK="^ECX(728,"_DA(1)_","_"""CBOC"""_","
"RTN","ECXPURG",45,0)
 ..I DA'="" D ^DIK K DIK,DA
"RTN","ECXPURG",46,0)
 .F  S ECJ=$O(^ECX(ECFILE,"AC",ECDA,ECJ)) Q:'ECJ  D
"RTN","ECXPURG",47,0)
 ..S DIK="^ECX("_ECFILE_",",DA=ECJ D ^DIK K DIK,DA
"RTN","ECXPURG",48,0)
 .I ECFILE=727.816 S ECFILE=727.818,ECJ=0 D
"RTN","ECXPURG",49,0)
 ..F  S ECJ=$O(^ECX(ECFILE,"AC",ECDA,ECJ)) Q:'ECJ  D
"RTN","ECXPURG",50,0)
 ...S DIK="^ECX("_ECFILE_",",DA=ECJ D ^DIK K DIK,DA
"RTN","ECXPURG",51,0)
 .S ^ECX(727,ECDA,"PURG")=DT
"RTN","ECXPURG",52,0)
 D QUIT
"RTN","ECXPURG",53,0)
 Q
"RTN","ECXPURG",54,0)
 ;
"RTN","ECXPURG",55,0)
PUR2 ; entry point for queued purge job of IVP holding file (#728.113)
"RTN","ECXPURG",56,0)
 F ECDT=ECBDT-1:0 S ECDT=$O(^ECX(728.113,"A",ECDT)) Q:'ECDT  Q:ECDT>ECEDT  S ECPT=0 F  S ECPT=$O(^ECX(728.113,"A",ECDT,ECPT)) Q:'ECPT  D
"RTN","ECXPURG",57,0)
 .S ECOR=0 F  S ECOR=$O(^ECX(728.113,"A",ECDT,ECPT,ECOR)) Q:'ECOR  D
"RTN","ECXPURG",58,0)
 ..S ECREC=0 F  S ECREC=$O(^ECX(728.113,"A",ECDT,ECPT,ECOR,ECREC)) Q:'ECREC  D
"RTN","ECXPURG",59,0)
 ...S DIK="^ECX(728.113,",DA=ECREC D ^DIK K DIK,DA
"RTN","ECXPURG",60,0)
 D QUIT
"RTN","ECXPURG",61,0)
 Q
"RTN","ECXPURG",62,0)
 ;
"RTN","ECXPURG",63,0)
PUR3 ; entry point for queued purge job of UDP holding file (#728.904)
"RTN","ECXPURG",64,0)
 F ECDT=ECBDT-1:0 S ECDT=$O(^ECX(728.904,"A",ECDT)) Q:'ECDT  Q:ECDT>ECEDT  D
"RTN","ECXPURG",65,0)
 .S ECREC=0 F  S ECREC=$O(^ECX(728.904,"A",ECDT,ECREC)) Q:'ECREC  D
"RTN","ECXPURG",66,0)
 ..S DIK="^ECX(728.904,",DA=ECREC D ^DIK K DIK,DA
"RTN","ECXPURG",67,0)
 D QUIT
"RTN","ECXPURG",68,0)
 Q
"RTN","ECXPURG1")
0^48^B35510892
"RTN","ECXPURG1",1,0)
ECXPURG1 ;BIR/CML-Purge of DSS Extract Files (CONTINUED) ; [ 12/05/96  11:58 AM ]
"RTN","ECXPURG1",2,0)
 ;;3.0;DSS EXTRACTS;**2,9,8,24,49**;Dec 22, 1997
"RTN","ECXPURG1",3,0)
GET ;compile list of purgable extracts
"RTN","ECXPURG1",4,0)
 K HI,LO,ECBDT,ECEDT,ECLOC,^TMP("ECXPURG",$J)
"RTN","ECXPURG1",5,0)
 S QFLG=1 W !!,"...one moment please"
"RTN","ECXPURG1",6,0)
 S ECEX=0 F  S ECEX=$O(^ECX(727,ECEX)) Q:'ECEX  I '$G(^ECX(727,ECEX,"PURG")),$D(^ECX(727,ECEX,0)) S EC=^(0) D
"RTN","ECXPURG1",7,0)
 .S ^TMP("ECXPURG",$J,$P(EC,U,3),ECEX)="",ECLOC(ECEX)=$P(EC,U,3)_U_$P(EC,U,4,5)
"RTN","ECXPURG1",8,0)
 I '$D(^TMP("ECXPURG",$J)) W !!,"There are no extracts that can be purged at this time." G DONE
"RTN","ECXPURG1",9,0)
ASK1 ;ask for print
"RTN","ECXPURG1",10,0)
 W !
"RTN","ECXPURG1",11,0)
 K DIR S DIR(0)="Y",DIR("A")="Do you want to print a list of extracts that can be purged",DIR("B")="NO"
"RTN","ECXPURG1",12,0)
 D ^DIR K DIR I $D(DIRUT) K ECLOC G DONE
"RTN","ECXPURG1",13,0)
 G:'Y ASK2
"RTN","ECXPURG1",14,0)
 W !!,"The right margin for this report is 80.",!!
"RTN","ECXPURG1",15,0)
 K ZTSAVE S ZTSAVE("^TMP(""ECXPURG"",$J,")=""
"RTN","ECXPURG1",16,0)
 D EN^XUTMDEVQ("PRT^ECXPURG1","DSS - Print Purgable Extracts",.ZTSAVE) I 'POP G ASK2
"RTN","ECXPURG1",17,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","ECXPURG1",18,0)
ASK2 ;ask for extract range
"RTN","ECXPURG1",19,0)
 ;
"RTN","ECXPURG1",20,0)
 ;** Check divisions for purging
"RTN","ECXPURG1",21,0)
 N ECCHK,ECTMP
"RTN","ECXPURG1",22,0)
 S ECCHK=$$DIV4^XUSER(.ECTMP,DUZ)
"RTN","ECXPURG1",23,0)
 I 'ECCHK DO
"RTN","ECXPURG1",24,0)
 .W !,"You do not have any divisions defined in your user set up and can not purge."
"RTN","ECXPURG1",25,0)
 .S DIR(0)="FAO^1:1",DIR("A")="Hit Return to continue." D ^DIR K DIR,X,Y
"RTN","ECXPURG1",26,0)
 .K ECLOC
"RTN","ECXPURG1",27,0)
 ;
"RTN","ECXPURG1",28,0)
 I 'ECCHK G DONE  ;** (essentially) QUIT out of middle
"RTN","ECXPURG1",29,0)
 ;
"RTN","ECXPURG1",30,0)
 W !,"You will not be able to select an extract that is not from your division.",!
"RTN","ECXPURG1",31,0)
 S LO=$O(ECLOC(0)),HI=$O(ECLOC(" "),-1)
"RTN","ECXPURG1",32,0)
 S DIR(0)="L^"_LO_":"_HI_"",DIR("A")="Select extracts to be purged"
"RTN","ECXPURG1",33,0)
 S DIR("?",1)="Choose the number(s) of the extract(s) you wish to purge,",DIR("?")="(e.g. 1-3,17,20 to choose 1 thru 3, 17, and 20)."
"RTN","ECXPURG1",34,0)
 W ! D ^DIR K DIR I $D(DIRUT) K ECLOC G DONE
"RTN","ECXPURG1",35,0)
 S JJ=0,Y=","_Y F  S JJ=$O(ECLOC(JJ)) Q:'JJ  S JZ=","_JJ_"," I Y'[JZ K ECLOC(JJ)
"RTN","ECXPURG1",36,0)
 D CBOCCHK(.ECLOC) I '$D(ECLOC) G GET
"RTN","ECXPURG1",37,0)
 D DIVCHK(.ECLOC,.ECTMP)
"RTN","ECXPURG1",38,0)
 I '$D(ECLOC) W !!,"You have not chosen a valid extract number.  Try again." G GET
"RTN","ECXPURG1",39,0)
ASK3 W !!,"I will purge the following extract(s):"
"RTN","ECXPURG1",40,0)
 S JJ=0 F  S JJ=$O(ECLOC(JJ)) Q:'JJ  D
"RTN","ECXPURG1",41,0)
 .W !?5,"#",JJ," - ",$P(ECLOC(JJ),U)
"RTN","ECXPURG1",42,0)
 .W ?47,$TR($$FMTE^XLFDT($P(ECLOC(JJ),U,2),"5DF")," ","0")," to ",$TR($$FMTE^XLFDT($P(ECLOC(JJ),U,3),"5DF")," ","0")
"RTN","ECXPURG1",43,0)
 W !! K DIR S DIR(0)="Y",DIR("A")="Is this OK",DIR("B")="NO"
"RTN","ECXPURG1",44,0)
 S DIR("?",1)="    Enter:"
"RTN","ECXPURG1",45,0)
 S DIR("?",2)="      ""YES"" if you agree with this list and would like to proceed,"
"RTN","ECXPURG1",46,0)
 S DIR("?",3)="       ""NO"" if you would like to make a different selection, or"
"RTN","ECXPURG1",47,0)
 S DIR("?")="        ""^"" to exit option."
"RTN","ECXPURG1",48,0)
 D ^DIR K DIR I $D(DIRUT) K ECLOC G DONE
"RTN","ECXPURG1",49,0)
 I 'Y G GET
"RTN","ECXPURG1",50,0)
 ; at this point, the local array ECLOC( is passed back to ^ECXPURG
"RTN","ECXPURG1",51,0)
 G DONE
"RTN","ECXPURG1",52,0)
QUIT ;
"RTN","ECXPURG1",53,0)
 I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECXPURG1",54,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXPURG1",55,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECXPURG1",56,0)
DONE K ^TMP("ECXPURG",$J),ZTSK Q
"RTN","ECXPURG1",57,0)
PRT ;print list of extracts
"RTN","ECXPURG1",58,0)
 S (PG,QFLG)=0,$P(LN,"-",81)="" D NOW^%DTC S Y=$E(%,1,12) X ^DD("DD") S HDT=Y D HDR
"RTN","ECXPURG1",59,0)
 S ECTYP="" F  S ECTYP=$O(^TMP("ECXPURG",$J,ECTYP)) Q:ECTYP=""  Q:QFLG  D:$Y+4>IOSL HDR Q:QFLG  W !!,ECTYP D
"RTN","ECXPURG1",60,0)
 .S ECEX=0 F  S ECEX=$O(^TMP("ECXPURG",$J,ECTYP,ECEX)) Q:'ECEX  Q:QFLG  I $D(^ECX(727,ECEX,0)) S EC=^(0) D
"RTN","ECXPURG1",61,0)
 ..S ECDT=$$FMTE^XLFDT($P(EC,U,2),"D")
"RTN","ECXPURG1",62,0)
 ..S ECFR=$TR($$FMTE^XLFDT($P(EC,U,4),"5DF")," ","0")
"RTN","ECXPURG1",63,0)
 ..S ECTO=$TR($$FMTE^XLFDT($P(EC,U,5),"5DF")," ","0")
"RTN","ECXPURG1",64,0)
 ..S ECRC=$P(EC,U,6) S:ECRC="" ECRC="Incomplete"
"RTN","ECXPURG1",65,0)
 ..S ECTRN=$$FMTE^XLFDT($G(^ECX(727,ECEX,"TR")),"D")
"RTN","ECXPURG1",66,0)
 ..S ECXDIV=$P($G(^ECX(727,ECEX,"DIV")),U,1) I ECXDIV D
"RTN","ECXPURG1",67,0)
 ...K ECXDIC S DA=ECXDIV,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPURG1",68,0)
 ...D EN^DIQ1 S ECXDIV=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPURG1",69,0)
 ..D:$Y+3>IOSL HDR Q:QFLG
"RTN","ECXPURG1",70,0)
 ..W !?1,ECEX,?11,ECDT,?25,ECFR,"-",ECTO,?48,$J(ECRC,9),?60,ECTRN,?75,ECXDIV
"RTN","ECXPURG1",71,0)
 G QUIT
"RTN","ECXPURG1",72,0)
HDR ;HEADER
"RTN","ECXPURG1",73,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXPURG1",74,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXPURG1",75,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"PURGABLE EXTRACTS",?72,"Page: ",PG,!,"Printed on ",HDT,!
"RTN","ECXPURG1",76,0)
 W !,"FEEDER SYS",?12,"EXTRACT,",!,"EXTRACT #",?12,"DATE",?33,"FROM-TO",?48,"RECORD CNT",?60,"TRANSMIT DATE",?75,"DIV",!,LN
"RTN","ECXPURG1",77,0)
 Q
"RTN","ECXPURG1",78,0)
DATES ;ask for date range for purge of holding files
"RTN","ECXPURG1",79,0)
 K HI,LO,ECBDT,ECEDT
"RTN","ECXPURG1",80,0)
 I ECY="I" D
"RTN","ECXPURG1",81,0)
 .I '$O(^ECX(728.113,0)) W !!,"You have no data in the IVP holding file (file #728.113) to purge." Q
"RTN","ECXPURG1",82,0)
 .S LO=$O(^ECX(728.113,"A",0)),HI=$O(^ECX(728.113,"A"," "),-1)
"RTN","ECXPURG1",83,0)
 I ECY="U" D
"RTN","ECXPURG1",84,0)
 .I '$O(^ECX(728.904,0)) W !!,"You have no data in the UDP holding file (file #728.904) to purge." Q
"RTN","ECXPURG1",85,0)
 .S LO=$O(^ECX(728.904,"A",0)),HI=$O(^ECX(728.904,"A"," "),-1)
"RTN","ECXPURG1",86,0)
 Q:$G(LO)=""
"RTN","ECXPURG1",87,0)
 W @IOF,!!,"This file currently holds ",$S(ECY="I":"IVP",1:"UDP")," data from <",$$FMTE^XLFDT(LO,"D"),"> to <",$$FMTE^XLFDT(HI,"D"),">."
"RTN","ECXPURG1",88,0)
 W ! K DIR S DIR(0)="DA^"_LO_":"_HI_":EPX",DIR("A")="Beginning date for purge: " D ^DIR K DIR I $D(DIRUT) K HI,LO Q
"RTN","ECXPURG1",89,0)
 S ECBDT=+Y
"RTN","ECXPURG1",90,0)
 K DIR S DIR(0)="DA^"_ECBDT_":"_HI_":EPX",DIR("A")="Ending date for purge: " D ^DIR K DIR I $D(DIRUT) K HI,LO,ECBDT Q
"RTN","ECXPURG1",91,0)
 S ECEDT=+Y
"RTN","ECXPURG1",92,0)
ASK4 ; ask to confirm date range
"RTN","ECXPURG1",93,0)
 W !!,"I will purge the ",$S(ECY="I":"IVP",1:"UDP")," holding file from <",$$FMTE^XLFDT(ECBDT,"D"),"> to <",$$FMTE^XLFDT(ECEDT,"D"),">."
"RTN","ECXPURG1",94,0)
 W $C(7),$C(7),!!?3,"** REMEMBER - Once this data is purged it CANNOT be recreated. **"
"RTN","ECXPURG1",95,0)
 W !! K DIR S DIR(0)="Y",DIR("A")="Is this OK",DIR("B")="NO"
"RTN","ECXPURG1",96,0)
 S DIR("?",1)="    Enter:"
"RTN","ECXPURG1",97,0)
 S DIR("?",2)="      ""YES"" if you agree with this date range and wish to proceed,"
"RTN","ECXPURG1",98,0)
 S DIR("?",3)="       ""NO"" if you would like to make a different selection, or"
"RTN","ECXPURG1",99,0)
 S DIR("?")="        ""^"" to exit option."
"RTN","ECXPURG1",100,0)
 D ^DIR K DIR I $D(DIRUT) K ECBDT,ECEDT Q 
"RTN","ECXPURG1",101,0)
 I 'Y G DATES
"RTN","ECXPURG1",102,0)
 ; at this point, ECBDT and ECEDT are passed back to ^ECXPURG
"RTN","ECXPURG1",103,0)
 Q
"RTN","ECXPURG1",104,0)
 ;
"RTN","ECXPURG1",105,0)
DIVCHK(ECLOC,ECTMP) ;**Remove extracts from ECLOC that are for user's div.
"RTN","ECXPURG1",106,0)
 N ECLPDA
"RTN","ECXPURG1",107,0)
 S ECLPDA=0
"RTN","ECXPURG1",108,0)
 F  S ECLPDA=$O(ECLOC(ECLPDA)) Q:(+ECLPDA=0)  DO
"RTN","ECXPURG1",109,0)
 .I '$D(ECTMP($P(^ECX(727,ECLPDA,"DIV"),U,1))) KILL ECLOC(ECLPDA)
"RTN","ECXPURG1",110,0)
 Q
"RTN","ECXPURG1",111,0)
CBOCCHK(ECLOC) ;**Check that CBOC report has been viewed prior to purging
"RTN","ECXPURG1",112,0)
 N LOOPDA,YYYMMDD
"RTN","ECXPURG1",113,0)
 S LOOPDA=0
"RTN","ECXPURG1",114,0)
 F  S LOOPDA=$O(ECLOC(LOOPDA)) Q:(+LOOPDA=0)  D
"RTN","ECXPURG1",115,0)
 .I ^ECX(727,LOOPDA,"HEAD")="CLI" D
"RTN","ECXPURG1",116,0)
 ..S DA(1)=1
"RTN","ECXPURG1",117,0)
 ..S YYYMMDD=$P(^ECX(727,LOOPDA,0),U,4)
"RTN","ECXPURG1",118,0)
 ..I YYYMMDD>3030930 I '$D(^ECX(728,DA(1),"CBOC","B",LOOPDA)) D
"RTN","ECXPURG1",119,0)
 ...K DIR S DIR(0)="Y",DIR("A")="The CBOC Activity Report has not been viewed.  Purge anyway",DIR("B")="NO"
"RTN","ECXPURG1",120,0)
 ...D ^DIR K DIR I 'Y K ECLOC(LOOPDA)
"RTN","ECXPURG1",121,0)
 Q
"RTN","ECXQSR")
0^12^B48509545
"RTN","ECXQSR",1,0)
ECXQSR ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ; 8/28/02 1:13pm
"RTN","ECXQSR",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,26,24,34,33,35,39,43,46,49**;Dec 22, 1997
"RTN","ECXQSR",3,0)
BEG ;entry point from option
"RTN","ECXQSR",4,0)
 I '$O(^ACK(509850.8,0)) W !,"You must be using the Quality Audiology & Speech Pathology",!,"Audit & Review (QUASAR) software to run this extract.",!! Q
"RTN","ECXQSR",5,0)
 I '$D(^ACK(509850.8,1,"DSS")) W !,"Linkage has not been established between QUASAR and the DSS UNIT file (#724).",!! Q
"RTN","ECXQSR",6,0)
 I '$O(^ACK(509850.6,0)) W !,"There is no data in the A&SP CLINIC VISIT file (#509850.6).",!! Q
"RTN","ECXQSR",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXQSR",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXQSR",9,0)
 Q
"RTN","ECXQSR",10,0)
 ;
"RTN","ECXQSR",11,0)
START ;entry point from tasked job
"RTN","ECXQSR",12,0)
 N ERR,ECXQDT
"RTN","ECXQSR",13,0)
 S QFLG=0,ECED=ECED+.9,ECD=ECSD1,ECXQV=""
"RTN","ECXQSR",14,0)
 D QINST I $D(ERR) Q
"RTN","ECXQSR",15,0)
 S ECL=+^ACK(509850.8,1,0),ECLINK=^ACK(509850.8,1,"DSS")
"RTN","ECXQSR",16,0)
 F  S ECD=$O(^ACK(509850.6,"B",ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)!(QFLG)  D
"RTN","ECXQSR",17,0)
 .I +ECXQV=3,ECD<ECXQDT S ECXQV=2.0
"RTN","ECXQSR",18,0)
 .F  S ECDA=$O(^ACK(509850.6,"B",ECD,ECDA)) Q:'ECDA  D UPDATE Q:QFLG
"RTN","ECXQSR",19,0)
 Q
"RTN","ECXQSR",20,0)
 ;
"RTN","ECXQSR",21,0)
QINST ;Get installed information for QUASAR
"RTN","ECXQSR",22,0)
 N ARR,IENS,QVIEN,INTIEN
"RTN","ECXQSR",23,0)
 S ECXQDT=""
"RTN","ECXQSR",24,0)
 D FILE^DID(509850.6,,"VERSION","ARR","ERR")
"RTN","ECXQSR",25,0)
 S ECXQV=$G(ARR("VERSION")) I +ECXQV=0 S ERR=1 Q
"RTN","ECXQSR",26,0)
 S QVIEN=$$FIND1^DIC(9.4,"","X","QUASAR") I +QVIEN<1 S ERR=1 Q
"RTN","ECXQSR",27,0)
 S IENS=","_QVIEN_","
"RTN","ECXQSR",28,0)
 S INTIEN=$$FIND1^DIC(9.49,IENS,"X",ECXQV) I +INTIEN<1 S ERR=1 Q
"RTN","ECXQSR",29,0)
 S IENS=INTIEN_","_QVIEN,ECXQDT=$$GET1^DIQ(9.49,IENS,2,"I")
"RTN","ECXQSR",30,0)
 Q
"RTN","ECXQSR",31,0)
 ;
"RTN","ECXQSR",32,0)
UPDATE ;create record for each unique CPT code for clinic visit 
"RTN","ECXQSR",33,0)
 N ARY,ECZNODE,CPT,LOC,MOD,STR,VOL,XX,ECTP,ECV
"RTN","ECXQSR",34,0)
 Q:'$D(^ACK(509850.6,ECDA,0))
"RTN","ECXQSR",35,0)
 S ECZNODE=^ACK(509850.6,ECDA,0),EC2NODE=$G(^ACK(509850.6,ECDA,2))
"RTN","ECXQSR",36,0)
 S ECDT=$P(ECZNODE,U),ECDAY=$$ECXDATE^ECXUTL(ECDT,ECXYM)
"RTN","ECXQSR",37,0)
 S ECTIME=$$ECXTIME^ECXUTL(ECDT) S:$P(ECDT,".",2)="" ECTIME="000000"
"RTN","ECXQSR",38,0)
 S ECXDFN=$P(ECZNODE,U,2)
"RTN","ECXQSR",39,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECD,"1;3;5")
"RTN","ECXQSR",40,0)
 S ECHL=""
"RTN","ECXQSR",41,0)
 S ECXDIV=$P($G(^ACK(509850.6,ECDA,5)),U),ECSTOP=$P(EC2NODE,U)
"RTN","ECXQSR",42,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get Production Division
"RTN","ECXQSR",43,0)
 Q:ECSTOP=""
"RTN","ECXQSR",44,0)
 S (ECHLS,ECHL2S)="000",ECAC=$P($G(ECZNODE),U,6)
"RTN","ECXQSR",45,0)
 I ECAC D
"RTN","ECXQSR",46,0)
 .S ECHL=+$P($G(^SC(ECAC,0)),U,7),ECHL2=+$P($G(^(0)),U,18) I ECHL D
"RTN","ECXQSR",47,0)
 ..S ECHLS=$P($G(^DIC(40.7,+ECHL,0)),U,2)
"RTN","ECXQSR",48,0)
 ..S ECHL2S=$P($G(^DIC(40.7,+ECHL2,0)),U,2)
"RTN","ECXQSR",49,0)
 ..S ECHLS=$$RJ^XLFSTR(ECHLS,3,0),ECHL2S=$$RJ^XLFSTR(ECHL2S,3,0)
"RTN","ECXQSR",50,0)
 S ECDSS=ECHLS_ECHL2S
"RTN","ECXQSR",51,0)
 I ECXLOGIC>2003 D
"RTN","ECXQSR",52,0)
 .I "^18^23^24^36^41^65^94^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXQSR",53,0)
 S ECDU=$S(ECSTOP["A":$P(ECLINK,U),ECSTOP["S":$P(ECLINK,U,2),1:"")
"RTN","ECXQSR",54,0)
 Q:'ECDU
"RTN","ECXQSR",55,0)
 S ECDSSU=$G(^ECD(ECDU,0)),ECCS=+$P(ECDSSU,U,4),(ECO,ECM)=+$P(ECDSSU,U,3),ECXDSSD=$E($P(ECDSSU,U,5),1,10)
"RTN","ECXQSR",56,0)
 Q:'$O(^ACK(509850.6,ECDA,3,0))
"RTN","ECXQSR",57,0)
 ;Create local array of procedure codes and # of times each procedure
"RTN","ECXQSR",58,0)
 ; was performed.
"RTN","ECXQSR",59,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXQSR",60,0)
 S (ECDIA,ECXMST,ECXPPC,ECXPRV1,ECXPRV2,ECXPRV3,ECUN1NPI)=""
"RTN","ECXQSR",61,0)
 ;if QUASAR v2
"RTN","ECXQSR",62,0)
 I +ECXQV=2 D
"RTN","ECXQSR",63,0)
 .S ECXPRV1=$P(EC2NODE,U,7),ECXPRV2=$P(EC2NODE,U,3)
"RTN","ECXQSR",64,0)
 .S ECXPRV3=$P(EC2NODE,U,5),ECPN=0
"RTN","ECXQSR",65,0)
 .F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",66,0)
 ..S XX=^ACK(509850.6,ECDA,3,ECPN,0),XX=$P(XX,U)
"RTN","ECXQSR",67,0)
 ..S XX=$P($G(^ACK(509850.4,XX,0)),U),ECXCPT=$E($$CPT^ECXUTL3(XX),1,5)
"RTN","ECXQSR",68,0)
 ..I ECXCPT]"" D
"RTN","ECXQSR",69,0)
 ...I '$D(LOC(ECXCPT)) S LOC(ECXCPT)=0_U_ECXPRV1
"RTN","ECXQSR",70,0)
 ...S $P(LOC(ECXCPT),U)=$P(LOC(ECXCPT),U)+1
"RTN","ECXQSR",71,0)
 .S ECIEN=$O(^ACK(509850.6,ECDA,1,0))
"RTN","ECXQSR",72,0)
 .S ECDIA=$P($G(^ICD9(+$G(^ACK(509850.6,ECDA,1,ECIEN,0)),0)),U)
"RTN","ECXQSR",73,0)
 .F I=1:1:4 S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'+ECIEN  D
"RTN","ECXQSR",74,0)
 ..S @("ECXICD9"_I)=$P($G(^ICD9(+$P(^ACK(509850.6,ECDA,1,ECIEN,0),U),0)),U)
"RTN","ECXQSR",75,0)
 ;if QUASAR v3
"RTN","ECXQSR",76,0)
 I +ECXQV=3 D
"RTN","ECXQSR",77,0)
 .N CPT,DIA,I,J,MOD,MOD1,P,STR,VOL,ECTP,ARY,ECP,ECPN
"RTN","ECXQSR",78,0)
 .S ECXMST=$P(EC2NODE,U,9),ECXMST=$S(ECXMST=1:"Y",ECXMST=0:"N",1:"")
"RTN","ECXQSR",79,0)
 .S ECXPRV2=$G(^ACK(509850.6,ECDA,2.7,1,0))
"RTN","ECXQSR",80,0)
 .S ECXPRV3=$G(^ACK(509850.6,ECDA,2.7,2,0))
"RTN","ECXQSR",81,0)
 .S ECPN=0
"RTN","ECXQSR",82,0)
 .F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",83,0)
 ..S CPT=^ACK(509850.6,ECDA,3,ECPN,0)
"RTN","ECXQSR",84,0)
 ..S ECXCPT=$P(CPT,U),ECTP=+$P(CPT,U,5),ECV=1,ECP=""
"RTN","ECXQSR",85,0)
 ..Q:ECXCPT=""
"RTN","ECXQSR",86,0)
 ..I ECTP D
"RTN","ECXQSR",87,0)
 ...S CPT=$G(^ACK(509850.6,ECDA,7,ECTP,0)),ECP=$P(CPT,U)
"RTN","ECXQSR",88,0)
 ...S ECP=$S(ECP<90000:$P($G(^EC(725,+ECP,0)),U,2)_"N",1:$P($G(^EC(725,+ECP,0)),U,2)_"L")
"RTN","ECXQSR",89,0)
 ...S VOL=+$P(CPT,U,2),ECXPRV1=$P(CPT,U,3)
"RTN","ECXQSR",90,0)
 ..I 'ECTP D
"RTN","ECXQSR",91,0)
 ...S VOL=+$P(CPT,U,3),ECXPRV1=$P(CPT,U,4)
"RTN","ECXQSR",92,0)
 ..S ECXCPT=$E($$CPT^ECXUTL3(ECXCPT),1,5)
"RTN","ECXQSR",93,0)
 ..S ECXMOD="",MOD=0
"RTN","ECXQSR",94,0)
 ..F  S MOD=$O(^ACK(509850.6,ECDA,3,ECPN,1,MOD)) Q:'MOD  D
"RTN","ECXQSR",95,0)
 ...S MOD1=+^ACK(509850.6,ECDA,3,ECPN,1,MOD,0) D:MOD1
"RTN","ECXQSR",96,0)
 ....S ECXMOD=ECXMOD_MOD1_";"
"RTN","ECXQSR",97,0)
 ..F I=1:1:$L(ECXMOD,";") I $G(ARY(ECXCPT))'[$P(ECXMOD,";",I) D
"RTN","ECXQSR",98,0)
 ...S ARY(ECXCPT)=$G(ARY(ECXCPT))_$P(ECXMOD,";",I)_";"
"RTN","ECXQSR",99,0)
 ..S:VOL ECV=VOL
"RTN","ECXQSR",100,0)
 ..S ECV=ECV+$G(LOC(ECXCPT))
"RTN","ECXQSR",101,0)
 ..S LOC(ECXCPT)=ECV_U_ECXPRV1_U_ECP
"RTN","ECXQSR",102,0)
 .S ECIEN=0
"RTN","ECXQSR",103,0)
 .F  S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'ECIEN  D
"RTN","ECXQSR",104,0)
 ..S DIA=^ACK(509850.6,ECDA,1,ECIEN,0)
"RTN","ECXQSR",105,0)
 ..S P=$P(DIA,U,2),P=$S(P=1:"P",1:"S"),CNT=$G(STR(P))+1
"RTN","ECXQSR",106,0)
 ..S STR(P,CNT)=$P($G(^ICD9(+DIA,0)),U),STR(P)=CNT
"RTN","ECXQSR",107,0)
 .S ECDIA=$G(STR("P",1))
"RTN","ECXQSR",108,0)
 .F I=1:1:4 Q:'$D(STR("P",I+1))  S @("ECXICD9"_I)=STR("P",I)
"RTN","ECXQSR",109,0)
 .S:ECDIA="" ECDIA=$G(STR("S",1)),I=2
"RTN","ECXQSR",110,0)
 .F J=I:1:4 Q:'$D(STR("S",J))  S @("ECXICD9"_J)=STR("S",J)
"RTN","ECXQSR",111,0)
 Q:('$D(LOC))!('$O(^ACK(509850.6,ECDA,1,0)))
"RTN","ECXQSR",112,0)
 ;
"RTN","ECXQSR",113,0)
 ;- Ord Div, Contrct St/End Dates, Contrct Type placeholders for FY2002
"RTN","ECXQSR",114,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXQSR",115,0)
 ;set up Provider Person class
"RTN","ECXQSR",116,0)
 S (ECXCPT,ECXPPC1,ECXPPC2,ECXPPC3)=""
"RTN","ECXQSR",117,0)
 S:ECXPRV2'="" ECXPPC2=$$PRVCLASS^ECXUTL(ECXPRV2,ECD),ECXPRV2=2_ECXPRV2
"RTN","ECXQSR",118,0)
 S:ECXPRV3'="" ECXPPC3=$$PRVCLASS^ECXUTL(ECXPRV3,ECD),ECXPRV3=2_ECXPRV3
"RTN","ECXQSR",119,0)
 ;
"RTN","ECXQSR",120,0)
 ;- Observation Patient Indicator (yes/no)
"RTN","ECXQSR",121,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXQSR",122,0)
 ;
"RTN","ECXQSR",123,0)
 ;- CNH status (YES/NO)
"RTN","ECXQSR",124,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXQSR",125,0)
 ;
"RTN","ECXQSR",126,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXQSR",127,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXQSR",128,0)
 ;
"RTN","ECXQSR",129,0)
 ;- If no encounter number don't file record
"RTN","ECXQSR",130,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSS,)
"RTN","ECXQSR",131,0)
 Q:ECXENC=""
"RTN","ECXQSR",132,0)
 ;Loop through array of unique procedures. Create record in ECODE.
"RTN","ECXQSR",133,0)
 S CPT=""
"RTN","ECXQSR",134,0)
 F  S CPT=$O(LOC(CPT)) Q:CPT=""  D
"RTN","ECXQSR",135,0)
 .S ECV=+$P(LOC(CPT),U),ECXCPT=$$CPT^ECXUTL3(CPT,$G(ARY(CPT)),ECV)
"RTN","ECXQSR",136,0)
 .S ECXPRV1=$P(LOC(CPT),U,2)
"RTN","ECXQSR",137,0)
 .S:ECXPRV1'="" ECXPPC1=$$PRVCLASS^ECXUTL(ECXPRV1,ECD),ECXPRV1=2_ECXPRV1
"RTN","ECXQSR",138,0)
 .S ECP=$P(LOC(CPT),U,3) I ECP="" S ECP=$$CPT^ECXUTL3(CPT,"",ECV)
"RTN","ECXQSR",139,0)
 .D FILE
"RTN","ECXQSR",140,0)
 K CPT,LOC
"RTN","ECXQSR",141,0)
 Q
"RTN","ECXQSR",142,0)
 ;
"RTN","ECXQSR",143,0)
FILE ;file record in #727.825
"RTN","ECXQSR",144,0)
 ;node0
"RTN","ECXQSR",145,0)
 ;inst^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^
"RTN","ECXQSR",146,0)
 ;day ECDAY^DSS unit ECDU^^
"RTN","ECXQSR",147,0)
 ;category ECPTTM^procedure ECP^volume ECV^
"RTN","ECXQSR",148,0)
 ;cost center ^ordering sec ^section^
"RTN","ECXQSR",149,0)
 ;provider ECXPRV1^ECXPPC1^ECXPRV2^ECXPPC2^ECXPRV3^ECXPPC3^
"RTN","ECXQSR",150,0)
 ;mov # ECXMN^treat spec ECXTS^time ECTIME^
"RTN","ECXQSR",151,0)
 ;primary care team ECPTTM^
"RTN","ECXQSR",152,0)
 ;primary care provider ECPTPR^pce cpt code & modifers ECXCPT^
"RTN","ECXQSR",153,0)
 ;primary icd-9 code ECDIA^secondary icd-9 #1 ECXICD91^
"RTN","ECXQSR",154,0)
 ;secondary icd-9 #2 ECXICD92^secondary icd-9 #3 ECXICD93^
"RTN","ECXQSR",155,0)
 ;secondary icd-9 #4 ECXICD94^agent orange ECXAST^
"RTN","ECXQSR",156,0)
 ;radiation exposure ECRE^
"RTN","ECXQSR",157,0)
 ;environmental contaminants ECENV^
"RTN","ECXQSR",158,0)
 ;service connected ECSC^sent to pce^^dss identifier ECDSS^placeholder
"RTN","ECXQSR",159,0)
 ;node1
"RTN","ECXQSR",160,0)
 ;mpi ECXNPI^dss dept ECXDSSD^provider npi ECUN1NPI^^^
"RTN","ECXQSR",161,0)
 ;pc prov person class ECPTNPI^assoc pc provider ECASPR^
"RTN","ECXQSR",162,0)
 ;assoc pc prov person class ECCLAS2^assoc pc provider npi ECASNPI^
"RTN","ECXQSR",163,0)
 ;divison ECXDIV^dom ECXDOM^enrollment category ECXCAT^
"RTN","ECXQSR",164,0)
 ;enrollment status ECXSTAT^enrollment priority ECXPRIOR^
"RTN","ECXQSR",165,0)
 ;period of service ECXPOS^purple heart ECXPHI^observ pat ind ECXOBS^
"RTN","ECXQSR",166,0)
 ;encounter num ECXENC^ao loc ECXAOL^ord div ECXODIV^contr st dt ECXCSDT^
"RTN","ECXQSR",167,0)
 ;contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXQSR",168,0)
 ;production division ECXPDIV^eligibility ECXELIG^ethnicity ECXETH^
"RTN","ECXQSR",169,0)
 ;race1 ECXRC1^enrollment location ECXENRL
"RTN","ECXQSR",170,0)
 N DA,DIK
"RTN","ECXQSR",171,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXQSR",172,0)
 S ECODE=EC7_U_EC23_U
"RTN","ECXQSR",173,0)
 S ECODE=ECODE_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECDAY_U_ECDU_U_U
"RTN","ECXQSR",174,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECXPRV1_U_ECXPPC1_U
"RTN","ECXQSR",175,0)
 S ECODE=ECODE_ECXPRV2_U_ECXPPC2_U_ECXPRV3_U_ECXPPC3_U_U
"RTN","ECXQSR",176,0)
 S ECODE=ECODE_ECXMN_U_ECXTS_U_ECTIME_U_ECPTTM_U
"RTN","ECXQSR",177,0)
 S ECODE=ECODE_ECPTPR_U_ECXCPT_U_ECDIA_U_ECXICD91_U_ECXICD92_U
"RTN","ECXQSR",178,0)
 S ECODE=ECODE_ECXICD93_U_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXQSR",179,0)
 S ECODE=ECODE_ECSC_U_"N"_U_U_ECDSS_U_U
"RTN","ECXQSR",180,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECUN1NPI_U_U_U_ECCLAS_U_ECPTNPI_U_ECASPR_U
"RTN","ECXQSR",181,0)
 S ECODE1=ECODE1_ECCLAS2_U_ECASNPI_U_ECXDIV_U_ECXMST_U_ECXDOM_U
"RTN","ECXQSR",182,0)
 S ECODE1=ECODE1_ECXDOB_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXPOS_U_ECXPHI_U
"RTN","ECXQSR",183,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXODIV_U_ECXCSDT_U_ECXCEDT_U
"RTN","ECXQSR",184,0)
 S ECODE1=ECODE1_ECXCTYP_U_ECXCNH_U_ECXPDIV_U_ECXELIG_U_ECXHNCI_U_ECXETH_U
"RTN","ECXQSR",185,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXQSR",186,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL
"RTN","ECXQSR",187,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXQSR",188,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXQSR",189,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXQSR",190,0)
 Q
"RTN","ECXQSR",191,0)
 ;
"RTN","ECXQSR",192,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR",193,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR",194,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR",195,0)
 Q
"RTN","ECXQSR",196,0)
 ;
"RTN","ECXQSR",197,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR",198,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXSCNS")
1^31
"RTN","ECXSCX2")
0^50^B8083580
"RTN","ECXSCX2",1,0)
ECXSCX2 ;ALB/ESD  DSS Clinic Extract Utilities (continued) ; 8/28/02 1:01pm
"RTN","ECXSCX2",2,0)
 ;;3.0;DSS EXTRACTS;**39,46,49**;Dec 22, 1997
"RTN","ECXSCX2",3,0)
 ;
"RTN","ECXSCX2",4,0)
 ;
"RTN","ECXSCX2",5,0)
INTPAT ;initialize patient variables
"RTN","ECXSCX2",6,0)
 S (ECXSSN,ECXPNM,ECPTPR,ECCLAS,ECPTNPI,ECASPR,ECCLAS2,ECASNPI,ECXZIP)=""
"RTN","ECXSCX2",7,0)
 S (ECPTTM,ECXPAYOR,ECXSAI,ECXVET,ECXRACE,ECXENRL,ECXMPI,ECXSEX)=""
"RTN","ECXSCX2",8,0)
 S (ECXDOB,ECXELIG,ECXPST,ECXPLOC,ECXRST,ECXAST,ECXMST,ECXSTATE)=""
"RTN","ECXSCX2",9,0)
 S (ECXCNTY,ECXATYP,ECXPVST,ECXMTST)=""
"RTN","ECXSCX2",10,0)
 Q
"RTN","ECXSCX2",11,0)
 ;
"RTN","ECXSCX2",12,0)
PAT1(ECXDFN,ECXDATE,ECXERR)     ;get patient demographic data
"RTN","ECXSCX2",13,0)
 N ECXPAT,K,OK,X
"RTN","ECXSCX2",14,0)
 S ECXERR=0
"RTN","ECXSCX2",15,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;4;5",.ECXPAT)
"RTN","ECXSCX2",16,0)
 I 'OK S ECXERR=1 Q
"RTN","ECXSCX2",17,0)
 S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI")
"RTN","ECXSCX2",18,0)
 S ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXSCX2",19,0)
 S ECXVET=ECXPAT("VET"),ECXSVC=ECXPAT("SC%"),ECXRACE=ECXPAT("RACE")
"RTN","ECXSCX2",20,0)
 S ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXSCX2",21,0)
 S ECXRST=ECXPAT("IR STAT"),ECXAST=ECXPAT("AO STAT")
"RTN","ECXSCX2",22,0)
 S ECXMST=ECXPAT("MST STAT"),ECXSTATE=ECXPAT("STATE")
"RTN","ECXSCX2",23,0)
 S ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP")
"RTN","ECXSCX2",24,0)
 S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXSCX2",25,0)
 ; changes for 2001
"RTN","ECXSCX2",26,0)
 S ECXPOS=ECXPAT("POS"),ECXPHI=ECXPAT("PHI")
"RTN","ECXSCX2",27,0)
 ;- Agent Orange location
"RTN","ECXSCX2",28,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXSCX2",29,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXSCX2",30,0)
 ;get sharing agreement data
"RTN","ECXSCX2",31,0)
 S (ECXPAYOR,ECXSAI)=""
"RTN","ECXSCX2",32,0)
 D VISN19^ECXUTL2(ECXDFN,.ECXPAYOR,.ECXSAI)
"RTN","ECXSCX2",33,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSCX2",34,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSCX2",35,0)
 ; - Race and Ethnicity
"RTN","ECXSCX2",36,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXSCX2",37,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXSCX2",38,0)
 Q
"RTN","ECXSCX2",39,0)
 ;
"RTN","ECXSCX2",40,0)
PAT2(ECXDFN,ECXDATE)    ;get date specific patient data
"RTN","ECXSCX2",41,0)
 N K,X
"RTN","ECXSCX2",42,0)
 ;get primary care data
"RTN","ECXSCX2",43,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXSCX2",44,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXSCX2",45,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXSCX2",46,0)
 ;get inpatient data
"RTN","ECXSCX2",47,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXTS=$P(X,U,3)
"RTN","ECXSCX2",48,0)
 S ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXSCX2",49,0)
 Q
"RTN","ECXSCX2",50,0)
 ;
"RTN","ECXSCX2",51,0)
FILE2(ECXFILE,EC7,ECODE) ;file record
"RTN","ECXSCX2",52,0)
 N DA,DIK,X S X=""
"RTN","ECXSCX2",53,0)
 F  S X=$O(ECODE(X)) Q:X=""  S ^ECX(ECXFILE,EC7,X)=ECODE(X)
"RTN","ECXSCX2",54,0)
 S DA=EC7,DIK="^ECX("_ECXFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSCX2",55,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSCX2",56,0)
 Q
"RTN","ECXSCX2",57,0)
 ;
"RTN","ECXSCX2",58,0)
CBOC(MDIV) ;Determine whether patient's facility was CBOC
"RTN","ECXSCX2",59,0)
 N LOCARR,DIC,DR,DIQ,DA,INST,FTYP
"RTN","ECXSCX2",60,0)
 S DIC=40.8,DA=MDIV,DR=".07",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",61,0)
 S INST=$G(LOCARR(40.8,MDIV,.07,"I")) I INST="" Q ""
"RTN","ECXSCX2",62,0)
 K LOCARR S DIC=4,DA=INST,DR="13",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",63,0)
 S FTYP=$G(LOCARR(4,INST,13,"I")) I FTYP="" Q ""
"RTN","ECXSCX2",64,0)
 K LOCARR S DIC=4.1,DA=FTYP,DR=".01",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",65,0)
 Q $S($G(LOCARR(4.1,FTYP,.01,"I"))="CBOC":"Y",1:"")
"RTN","ECXSCXN")
0^7^B83811770
"RTN","ECXSCXN",1,0)
ECXSCXN ;ALB/JAP  Clinic Extract ; 8/28/02 1:11pm
"RTN","ECXSCXN",2,0)
 ;;3.0;DSS EXTRACTS;**24,27,29,30,31,32,33,39,46,49**;Dec 22, 1997
"RTN","ECXSCXN",3,0)
 ;
"RTN","ECXSCXN",4,0)
BEG ;entry point from option
"RTN","ECXSCXN",5,0)
 D SETUP Q:ECFILE=""  D ^ECXTRAC,^ECXKILL
"RTN","ECXSCXN",6,0)
 Q
"RTN","ECXSCXN",7,0)
 ;
"RTN","ECXSCXN",8,0)
START ;entry point from taskmgr
"RTN","ECXSCXN",9,0)
 N DIC,EXNUM,I,LOCARR,OUT,P1,P2,P3,PROCESS,SOURCE,STOP,STAT,TOSEND,TIU,X,Y
"RTN","ECXSCXN",10,0)
 F I=1:1:8 S @("ECXCPT"_I)=""
"RTN","ECXSCXN",11,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXSCXN",12,0)
 S (OUT,QFLG,ECRN)=0,(ECXICD9P,ECXOBI)=""
"RTN","ECXSCXN",13,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",14,0)
 ;get ien for tiu in file #839.7
"RTN","ECXSCXN",15,0)
 S DIC="^PX(839.7,",DIC(0)="X",X="TEXT INTEGRATION UTILITIES"
"RTN","ECXSCXN",16,0)
 D ^DIC S TIU=+Y,ECED=ECED+.3,ECXCLIN=0 K DIC,Y
"RTN","ECXSCXN",17,0)
 ;get clinic default appt length, type, division
"RTN","ECXSCXN",18,0)
 F  S ECXCLIN=$O(^SC(ECXCLIN)) Q:'ECXCLIN  D
"RTN","ECXSCXN",19,0)
 .K LOCARR S DIC=44,DA=ECXCLIN,DR="2;3.5;1912",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",20,0)
 .D EN^DIQ1
"RTN","ECXSCXN",21,0)
 .Q:$G(LOCARR(44,ECXCLIN,2,"I"))'="C"
"RTN","ECXSCXN",22,0)
 .S ALEN=+$G(LOCARR(44,ECXCLIN,1912,"I"))
"RTN","ECXSCXN",23,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=ALEN,ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",24,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=^TMP($J,"ECXCL",ECXCLIN)_"^"_ALEN_"^"_$G(LOCARR(44,ECXCLIN,2,"I"))_"^"_+$G(LOCARR(44,ECXCLIN,3.5,"I"))
"RTN","ECXSCXN",25,0)
 .D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",26,0)
 .K P1,P2,P3,TOSEND,ECXDIV
"RTN","ECXSCXN",27,0)
 ;get from file #44 any no-shows & get encounters from #409.68
"RTN","ECXSCXN",28,0)
 D NOSHOW(ECSD1,ECED),ENCNTR(ECSD1,ECED)
"RTN","ECXSCXN",29,0)
 ;send missing clinic msg
"RTN","ECXSCXN",30,0)
 D:$D(^TMP($J,"ECXS")) EN^ECXSCX1
"RTN","ECXSCXN",31,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",32,0)
 Q
"RTN","ECXSCXN",33,0)
 ;
"RTN","ECXSCXN",34,0)
ENCNTR(ECSD1,ECED) ;search file #409.68 for encounter data
"RTN","ECXSCXN",35,0)
 N CHKOUT,ECD,JJ,K,OUT,PNODE,PP,STAT,STOP,MDIV
"RTN","ECXSCXN",36,0)
 S ECD=ECSD1
"RTN","ECXSCXN",37,0)
 F  S ECD=$O(^SCE("B",ECD)) Q:('ECD!(ECD>ECED))!(QFLG)  S ECXIEN=0 D
"RTN","ECXSCXN",38,0)
 .F  S ECXIEN=$O(^SCE("B",ECD,ECXIEN)) Q:'ECXIEN  D  Q:QFLG
"RTN","ECXSCXN",39,0)
 ..Q:'$D(^SCE(ECXIEN,0))
"RTN","ECXSCXN",40,0)
 ..D INTPAT^ECXSCX2 K LOCARR S DIC=409.68,DA=ECXIEN
"RTN","ECXSCXN",41,0)
 ..S DR=".01;.02;.03;.04;.05;.06;.07;.08;.11;.12;.13",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",42,0)
 ..D EN^DIQ1
"RTN","ECXSCXN",43,0)
 ..S ECXTI=$P($$FMTE^XLFDT(+$G(LOCARR(409.68,ECXIEN,.01,"I")),1),"@",2)
"RTN","ECXSCXN",44,0)
 ..S ECXTI=$E(($TR(ECXTI,":","")_"000000"),1,6)
"RTN","ECXSCXN",45,0)
 ..S:ECXTI="000000" ECXTI="000300" S MDIV=+$G(LOCARR(409.68,ECXIEN,.11,"I"))
"RTN","ECXSCXN",46,0)
 ..S STOP=+$G(LOCARR(409.68,ECXIEN,.03,"I"))
"RTN","ECXSCXN",47,0)
 ..S CHKOUT=+$G(LOCARR(409.68,ECXIEN,.07,"I"))
"RTN","ECXSCXN",48,0)
 ..S PROCESS=+$G(LOCARR(409.68,ECXIEN,.08,"I"))
"RTN","ECXSCXN",49,0)
 ..S STAT=$G(LOCARR(409.68,ECXIEN,.12,"I"))
"RTN","ECXSCXN",50,0)
 ..S ECXDFN=+$G(LOCARR(409.68,ECXIEN,.02,"I"))
"RTN","ECXSCXN",51,0)
 ..Q:(ECXDFN=0)!('CHKOUT)
"RTN","ECXSCXN",52,0)
 ..S:STAT="" STAT="ZZ" S STAT=";"_STAT_";"
"RTN","ECXSCXN",53,0)
 ..Q:";3;4;5;6;7;9;10;13;"[STAT
"RTN","ECXSCXN",54,0)
 ..Q:('STOP)!(PROCESS=4)!(+$G(LOCARR(409.68,ECXIEN,.06,"I")))
"RTN","ECXSCXN",55,0)
 ..S ECXDATE=+$G(LOCARR(409.68,ECXIEN,.01,"I"))
"RTN","ECXSCXN",56,0)
 ..S ECXCLIN=+$G(LOCARR(409.68,ECXIEN,.04,"I"))
"RTN","ECXSCXN",57,0)
 ..Q:$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,3)'="C"
"RTN","ECXSCXN",58,0)
 ..S ECXVISIT=+$G(LOCARR(409.68,ECXIEN,.05,"I"))
"RTN","ECXSCXN",59,0)
 ..S ECXENEL=+$G(LOCARR(409.68,ECXIEN,.13,"I"))
"RTN","ECXSCXN",60,0)
 ..Q:'ECXVISIT
"RTN","ECXSCXN",61,0)
 ..S ECXERR=0
"RTN","ECXSCXN",62,0)
 ..D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",63,0)
 ..D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",64,0)
 ..Q:TOSEND=6
"RTN","ECXSCXN",65,0)
 ..K LOCARR S DIC=40.7,DA=STOP,DR="1",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",66,0)
 ..S ECXSTOP=$$RJ^XLFSTR($G(LOCARR(40.7,STOP,1,"I")),3,0)
"RTN","ECXSCXN",67,0)
 ..;get date specific patient data
"RTN","ECXSCXN",68,0)
 ..D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN",69,0)
 ..;get visit specific data
"RTN","ECXSCXN",70,0)
 ..S ECXERR=0 D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",71,0)
 ..F I=1:1:8 S @("ECXCPT"_I)=$G(ECXVIST("CPT"_I))
"RTN","ECXSCXN",72,0)
 ..S ECXICD9P=$G(ECXVIST("ICD9P"))
"RTN","ECXSCXN",73,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=$G(ECXVIST("ICD9"_I))
"RTN","ECXSCXN",74,0)
 ..S SOURCE=ECXVIST("SOURCE"),ECXAO=ECXVIST("AO"),ECXIR=ECXVIST("IR")
"RTN","ECXSCXN",75,0)
 ..S ECXMIL=ECXVIST("MST"),ECXPROV=ECXVIST("PROV")
"RTN","ECXSCXN",76,0)
 ..S ECXPROVP=ECXVIST("PROV CLASS"),ECXPROVN=ECXVIST("PROV NPI")
"RTN","ECXSCXN",77,0)
 ..K LOCARR S DIC=8,DA=ECXENEL,DR="8",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",78,0)
 ..S ECXENEL=+$G(LOCARR(8,ECXENEL,8,"I"))
"RTN","ECXSCXN",79,0)
 ..S:ECXENEL ECXENEL=$$ELIG^ECXUTL3(ECXENEL,ECXSVC)
"RTN","ECXSCXN",80,0)
 ..S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")  ;is cboc facility?
"RTN","ECXSCXN",81,0)
 ..;setup feeder key and file in extract records
"RTN","ECXSCXN",82,0)
 ..S (ECXKEY,ECXDSSD)=""
"RTN","ECXSCXN",83,0)
 ..;xray (105) or lab (108)
"RTN","ECXSCXN",84,0)
 ..I (ECXSTOP=105)!(ECXSTOP=108) D  Q
"RTN","ECXSCXN",85,0)
 ...S ECXKEY=ECXSTOP_"00003000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",86,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE       ;- Don't file rec if no encounter num
"RTN","ECXSCXN",87,0)
 ..;appointments
"RTN","ECXSCXN",88,0)
 ..I PROCESS=1 D  Q     ;get appt length
"RTN","ECXSCXN",89,0)
 ...S (ALEN,JJ,OUT)=0
"RTN","ECXSCXN",90,0)
 ...F  S JJ=$O(^SC(ECXCLIN,"S",ECXDATE,JJ)) Q:('JJ)!(OUT)  S K=0 D
"RTN","ECXSCXN",91,0)
 ....F  S K=$O(^SC(ECXCLIN,"S",ECXDATE,JJ,K)) Q:('K)!(OUT)  D
"RTN","ECXSCXN",92,0)
 .....S ECXOBI=$G(^SC(ECXCLIN,"S",ECXDATE,JJ,K,"OB")),PP=$P($G(^SC(ECXCLIN,"S",ECXDATE,JJ,K,0)),U)
"RTN","ECXSCXN",93,0)
 .....S:PP=ECXDFN OUT=1,ALEN=$P(^(0),U,2),ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",94,0)
 .....S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",95,0)
 ....S ECXSTOP=P1
"RTN","ECXSCXN",96,0)
 ....S PNODE=$G(^DPT(ECXDFN,"S",ECXDATE,0)),ECXPVST=$P(PNODE,U,7),ECXATYP=$P(PNODE,U,16)  ;Get purpose of visit & appt type
"RTN","ECXSCXN",97,0)
 ....I TOSEND'=3 D
"RTN","ECXSCXN",98,0)
 .....S ECXKEY=P1_P2_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",99,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",100,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN",101,0)
 .....S ECXKEY=P1_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",102,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",103,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN",104,0)
 .....S ECXKEY=P2_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",105,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",106,0)
 ....I $P(PNODE,U,1)=ECXCLIN,$P(PNODE,U,5) D
"RTN","ECXSCXN",107,0)
 .....S ECXKEY="10700003000000",ECXSTOP="107",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",108,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",109,0)
 ..I PROCESS=2 D  Q
"RTN","ECXSCXN",110,0)
 ...S ALEN=0
"RTN","ECXSCXN",111,0)
 ...I SOURCE=TIU S ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",112,0)
 ...S:+ALEN=0 ALEN="030" S ECXKEY=P1_P2_ALEN_P3_"0",ECXSTOP=P1
"RTN","ECXSCXN",113,0)
 ...S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",114,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",115,0)
 ..;dispositions
"RTN","ECXSCXN",116,0)
 ..I PROCESS=3 D  Q
"RTN","ECXSCXN",117,0)
 ...S ECXKEY=ECXSTOP_"47906000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",118,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",119,0)
 Q
"RTN","ECXSCXN",120,0)
 ;
"RTN","ECXSCXN",121,0)
NOSHOW(ECXSD,ECXED) ;get noshows from file #44
"RTN","ECXSCXN",122,0)
 ;      ECXSD  = start date, ECXED  = end date
"RTN","ECXSCXN",123,0)
 N ALEN,CLIN,JDATE,JJ,NODE,NOSHOW,PP,STAT,MDIV
"RTN","ECXSCXN",124,0)
 S CLIN=0
"RTN","ECXSCXN",125,0)
 F  S CLIN=$O(^TMP($J,"ECXCL",CLIN)) Q:'CLIN  D
"RTN","ECXSCXN",126,0)
 .Q:$P($G(^TMP($J,"ECXCL",CLIN)),U,3)'="C"
"RTN","ECXSCXN",127,0)
 .S (P1,P2,P3)=""
"RTN","ECXSCXN",128,0)
 .D FEEDER^ECXSCX1(CLIN,ECXSD,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",129,0)
 .Q:TOSEND=6
"RTN","ECXSCXN",130,0)
 .;find appts in date range
"RTN","ECXSCXN",131,0)
 .S JDATE=ECXSD,(ALEN,NOSHOW)=""
"RTN","ECXSCXN",132,0)
 .F  S JDATE=$O(^SC(CLIN,"S",JDATE)) Q:'JDATE  Q:JDATE>ECXED  D
"RTN","ECXSCXN",133,0)
 ..S ECXDATE=JDATE,JJ=0,ECXTI=$P($$FMTE^XLFDT(JDATE,1),"@",2)
"RTN","ECXSCXN",134,0)
 ..S ECXTI=$E(($TR(ECXTI,":","")_"000000"),1,6)
"RTN","ECXSCXN",135,0)
 ..S:ECXTI="000000" ECXTI="000300"
"RTN","ECXSCXN",136,0)
 ..;get noshows only - no data in check-in/check-out node
"RTN","ECXSCXN",137,0)
 ..F  S JJ=$O(^SC(CLIN,"S",JDATE,JJ)) Q:'JJ  D
"RTN","ECXSCXN",138,0)
 ...S K=0
"RTN","ECXSCXN",139,0)
 ...F  S K=$O(^SC(CLIN,"S",JDATE,JJ,K)) Q:'K  D
"RTN","ECXSCXN",140,0)
 ....S PP=$G(^SC(CLIN,"S",JDATE,JJ,K,0)),ECXDFN=$P(PP,U) Q:ECXDFN=""
"RTN","ECXSCXN",141,0)
 ....S NODE=$G(^DPT(ECXDFN,"S",JDATE,0)),MDIV=$P($G(^SC(CLIN,0)),U,15)
"RTN","ECXSCXN",142,0)
 ....Q:(NODE="")!($P(NODE,U)'=CLIN)
"RTN","ECXSCXN",143,0)
 ....S ECXOBI=$G(^SC(CLIN,"S",JDATE,JJ,K,"OB")),STAT=$P(NODE,U,2)
"RTN","ECXSCXN",144,0)
 ....S NOSHOW=$S(STAT="N":"N",STAT="NA":"N",1:"")
"RTN","ECXSCXN",145,0)
 ....Q:NOSHOW=""  D INTPAT^ECXSCX2 S ECXERR=0
"RTN","ECXSCXN",146,0)
 ....D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",147,0)
 ....S ALEN=$P(PP,U,2),ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",148,0)
 ....D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN",149,0)
 ....S ECXPVST=$P(NODE,U,7),ECXATYP=$P(NODE,U,16)  ;Get POV & appt type
"RTN","ECXSCXN",150,0)
 ....S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",CLIN)),U,2)
"RTN","ECXSCXN",151,0)
 ....S ECXCLIN=CLIN,ECXSTOP=P1 S:ECXICD9P="" ECXICD9P="799.9"
"RTN","ECXSCXN",152,0)
 ....S:ECXCPT1="" ECXCPT1="9919901"
"RTN","ECXSCXN",153,0)
 ....S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")
"RTN","ECXSCXN",154,0)
 ....S (ECXDSSD,ECXENEL,ECXIR,ECXAO,ECXMIL,ECXPROV,ECXPROVP,ECXPROVN)=""
"RTN","ECXSCXN",155,0)
 ....I TOSEND'=3 D
"RTN","ECXSCXN",156,0)
 .....S ECXKEY=P1_P2_ALEN_P3_NOSHOW,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",157,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",158,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN",159,0)
 .....S ECXKEY=P1_"000"_ALEN_P3_NOSHOW,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",160,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",161,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN",162,0)
 .....S ECXKEY=P2_"000"_ALEN_P3_NOSHOW,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",163,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",164,0)
 ....;create a record for noshow appended ekg
"RTN","ECXSCXN",165,0)
 ....D:$P(NODE,U,5)
"RTN","ECXSCXN",166,0)
 .....S ECXKEY="1070000300000N",ECXSTOP="107",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",167,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",168,0)
 Q
"RTN","ECXSCXN",169,0)
 ;
"RTN","ECXSCXN",170,0)
FILE ;record setup for file #727.827
"RTN","ECXSCXN",171,0)
 N STR
"RTN","ECXSCXN",172,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get production division
"RTN","ECXSCXN",173,0)
 S EC7=$O(^ECX(727.827,999999999),-1),EC7=EC7+1
"RTN","ECXSCXN",174,0)
 S STR(0)=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSCXN",175,0)
 S STR(0)=STR(0)_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXKEY_U_ECXOBI_U
"RTN","ECXSCXN",176,0)
 S STR(0)=STR(0)_ECXCLIN_U_ECXTS_U_ECXTI_U_ECPTTM_U_ECPTPR_U_ECCLAS_U
"RTN","ECXSCXN",177,0)
 S STR(0)=STR(0)_ECXPROV_U_ECXPROVP_U_ECXCPT1_U_ECXCPT2_U_ECXCPT3_U
"RTN","ECXSCXN",178,0)
 S STR(0)=STR(0)_ECXCPT4_U_ECXCPT5_U
"RTN","ECXSCXN",179,0)
 S STR(1)=ECXCPT6_U_ECXCPT7_U_ECXCPT8_U_ECXICD9P_U_ECXICD91_U_ECXICD92_U
"RTN","ECXSCXN",180,0)
 S STR(1)=STR(1)_ECXICD93_U_ECXICD94_U_ECXDOB_U_ECXELIG_U_ECXVET_U
"RTN","ECXSCXN",181,0)
 S STR(1)=STR(1)_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXIR_U_ECXAST_U
"RTN","ECXSCXN",182,0)
 S STR(1)=STR(1)_ECXAO_U_ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U
"RTN","ECXSCXN",183,0)
 S STR(1)=STR(1)_$G(ECXPCPNP)_U_$G(ECXNPIPR)_U_ECXENEL_U_ECXMST_U
"RTN","ECXSCXN",184,0)
 S STR(1)=STR(1)_ECXMIL_U_ECXPAYOR_U_ECXSAI_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXSCXN",185,0)
 S STR(1)=STR(1)_ECXCNTY_U_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXDOM_U_ECXCAT_U
"RTN","ECXSCXN",186,0)
 S STR(2)=ECXSTAT_U_ECXPRIOR_U_ECXPHI_U_ECXPOS_U_ECXOBS_U_ECXENC_U
"RTN","ECXSCXN",187,0)
 S STR(2)=STR(2)_ECXAOL_U_ECXPDIV_U_ECXATYP_U_ECXPVST_U_ECXMTST_U
"RTN","ECXSCXN",188,0)
 S STR(2)=STR(2)_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXSCXN",189,0)
 I ECXLOGIC>2003 S STR(2)=STR(2)_U_ECXCBOC
"RTN","ECXSCXN",190,0)
 D FILE2^ECXSCX2(727.827,EC7,.STR)
"RTN","ECXSCXN",191,0)
 S ECRN=ECRN+1,$P(^ECX(727.827,0),U,3)=EC7
"RTN","ECXSCXN",192,0)
 Q
"RTN","ECXSCXN",193,0)
 ;
"RTN","ECXSCXN",194,0)
SETUP ;set required input for ECXTRAC
"RTN","ECXSCXN",195,0)
 S ECHEAD="CLI"
"RTN","ECXSCXN",196,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSCXN",197,0)
 Q
"RTN","ECXTAUTO")
0^43^B32126653
"RTN","ECXTAUTO",1,0)
ECXTAUTO ;ALB/JAP,BIR/DMA-Background Queuing for Package Extracts ; 17 Mar 95 / 1:04 PM
"RTN","ECXTAUTO",2,0)
 ;;3.0;DSS EXTRACTS;**8,24,49**;Dec 22, 1997
"RTN","ECXTAUTO",3,0)
 ;generate extract & auto-requeue
"RTN","ECXTAUTO",4,0)
 ;
"RTN","ECXTAUTO",5,0)
QUE ;entry point from package extracts - determine start and stop date from 727.1
"RTN","ECXTAUTO",6,0)
 ;and variables from setup^routine
"RTN","ECXTAUTO",7,0)
 S EC=$O(^ECX(727.1,"AF",ECFILE,0))
"RTN","ECXTAUTO",8,0)
 S ECDT=$P($$HTFM^XLFDT(ZTDTH,1),".")
"RTN","ECXTAUTO",9,0)
 S ECED=$$LASTMON^ECXDEFIN(ECDT)
"RTN","ECXTAUTO",10,0)
 S ECSD=$E(ECED,1,5)_"01"
"RTN","ECXTAUTO",11,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXTAUTO",12,0)
 ;get station number; ecinst is defined only for prosthetics
"RTN","ECXTAUTO",13,0)
 ;automatic requeue can be setup only for site's with 1 primary prosthetics division
"RTN","ECXTAUTO",14,0)
 S:'$D(ECINST) ECINST=+$P(^ECX(728,1,0),U)
"RTN","ECXTAUTO",15,0)
 S ECXINST=ECINST
"RTN","ECXTAUTO",16,0)
 K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXTAUTO",17,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTAUTO",18,0)
 ;check if currently running
"RTN","ECXTAUTO",19,0)
 I $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)="R" D RUNMSG,REQUE Q
"RTN","ECXTAUTO",20,0)
 ;check if date range has been extracted
"RTN","ECXTAUTO",21,0)
 ;get last date for all extracts except prosthetics
"RTN","ECXTAUTO",22,0)
 I ECGRP'="PRO" D
"RTN","ECXTAUTO",23,0)
 .S ECLDT=$P($G(^ECX(728,1,ECNODE)),U,ECPIECE)
"RTN","ECXTAUTO",24,0)
 ;get last date for prosthetics
"RTN","ECXTAUTO",25,0)
 I ECGRP="PRO" D
"RTN","ECXTAUTO",26,0)
 .S ECLDT=""
"RTN","ECXTAUTO",27,0)
 .S ECXDA1=$O(^ECX(728,0))
"RTN","ECXTAUTO",28,0)
 .I $D(^ECX(728,ECXDA1,1,ECXINST,0)) S ECLDT=$P(^ECX(728,ECXDA1,1,ECXINST,0),U,2)
"RTN","ECXTAUTO",29,0)
 ;if last run date doesn't exist don't allow auto requeue to continue
"RTN","ECXTAUTO",30,0)
 I ECLDT="" S ZTREQ="@" Q
"RTN","ECXTAUTO",31,0)
 ;if last run date is last day of previous fy don't allow auto requeue to continue
"RTN","ECXTAUTO",32,0)
 S X=$$CYFY^ECXUTL1(DT)
"RTN","ECXTAUTO",33,0)
 I ECLDT=$$FMADD^XLFDT($P(X,U,3),-1) S ZTREQ="@" Q
"RTN","ECXTAUTO",34,0)
 ;otherwise continue to check data range
"RTN","ECXTAUTO",35,0)
 S ECFDT=$$FMADD^XLFDT(ECLDT,1)
"RTN","ECXTAUTO",36,0)
 I ECFDT>ECED D ERROR,REQUE Q
"RTN","ECXTAUTO",37,0)
 ;do specific extract using appropriate fiscal year logic
"RTN","ECXTAUTO",38,0)
 S ECXLOGIC=$$FISCAL^ECXUTL1(ECSD)
"RTN","ECXTAUTO",39,0)
 S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)="R"
"RTN","ECXTAUTO",40,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXTAUTO",41,0)
 L +^ECX(727,0) S EC=$P(^ECX(727,0),U,3)+1,$P(^(0),U,3,4)=EC_U_EC L -^ECX(727,0)
"RTN","ECXTAUTO",42,0)
 S ^ECX(727,EC,0)=EC_U_DT_U_ECPACK_U_ECSD_U_$E(ECED,1,7)
"RTN","ECXTAUTO",43,0)
 S ^ECX(727,EC,"HEAD")=ECHEAD
"RTN","ECXTAUTO",44,0)
 S ^ECX(727,EC,"FILE")=ECFILE
"RTN","ECXTAUTO",45,0)
 S ^ECX(727,EC,"GRP")=ECGRP
"RTN","ECXTAUTO",46,0)
 S ^ECX(727,EC,"VER")=$G(ECVER)_U_ECXLOGIC
"RTN","ECXTAUTO",47,0)
 S ^ECX(727,EC,"DIV")=ECXINST
"RTN","ECXTAUTO",48,0)
 S DA=EC,DIK="^ECX(727," D IX^DIK K DIK,DA
"RTN","ECXTAUTO",49,0)
 S ECRN=0,ECXYM=$$ECXYM^ECXUTL(ECED),EC23=ECXYM_U_EC
"RTN","ECXTAUTO",50,0)
 S ECXSTART=$P($$HTE^XLFDT($H),":",1,2),ECXNOW=$H
"RTN","ECXTAUTO",51,0)
 D @ECRTN
"RTN","ECXTAUTO",52,0)
 ;set last date for all extracts except prosthetics
"RTN","ECXTAUTO",53,0)
 S:(ECGRP'="PRO") $P(^ECX(728,1,ECNODE),U,ECPIECE)=$P(ECED,".")
"RTN","ECXTAUTO",54,0)
 ;set last date for prosthetics
"RTN","ECXTAUTO",55,0)
 I ECGRP="PRO" D
"RTN","ECXTAUTO",56,0)
 .S J=$O(^ECX(728,0))
"RTN","ECXTAUTO",57,0)
 .S $P(^ECX(728,J,1,ECXINST,0),U,2)=$P(ECED,".")
"RTN","ECXTAUTO",58,0)
 S TIME=$P($$HTE^XLFDT($H),":",1,2)
"RTN","ECXTAUTO",59,0)
 S $P(^ECX(727,$P(EC23,U,2),0),U,6)=ECRN
"RTN","ECXTAUTO",60,0)
 ;set piece 3 and 4 of the zero node
"RTN","ECXTAUTO",61,0)
 S ECLAST=$O(^ECX(ECFILE,99999999),-1),ECTOTAL=$P(^ECX(ECFILE,0),U,4)+ECRN,$P(^(0),U,3,4)=ECLAST_U_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXTAUTO",62,0)
 D MSG
"RTN","ECXTAUTO",63,0)
 S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)=""
"RTN","ECXTAUTO",64,0)
 D REQUE
"RTN","ECXTAUTO",65,0)
 Q
"RTN","ECXTAUTO",66,0)
 ;
"RTN","ECXTAUTO",67,0)
REQUE ;reque job for next time
"RTN","ECXTAUTO",68,0)
 S EC=$O(^ECX(727.1,"AF",ECFILE,0))
"RTN","ECXTAUTO",69,0)
 S ECFDT=$$HTFM^XLFDT(ZTDTH)
"RTN","ECXTAUTO",70,0)
 S ECFDT=$$NEXTMON^ECXDEFIN(ECFDT)
"RTN","ECXTAUTO",71,0)
 ;do not allow october extract to start from auto-requeue
"RTN","ECXTAUTO",72,0)
 I $E(ECFDT,4,5)="10" D  Q
"RTN","ECXTAUTO",73,0)
 .D FYMSG
"RTN","ECXTAUTO",74,0)
 .S $P(^ECX(727.1,ECDA,0),"^",6)=""
"RTN","ECXTAUTO",75,0)
 .S ZTREQ="@"
"RTN","ECXTAUTO",76,0)
 S ZTDTH=$$FMTH^XLFDT(ECFDT)
"RTN","ECXTAUTO",77,0)
 D REQ^%ZTLOAD
"RTN","ECXTAUTO",78,0)
 Q
"RTN","ECXTAUTO",79,0)
 ;
"RTN","ECXTAUTO",80,0)
MSG ; send message to mail group 'DSS-ECGRP'
"RTN","ECXTAUTO",81,0)
 S XMSUB=ECINST_" - "_ECPACK_" AUTO-REQUEUE EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTAUTO",82,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTAUTO",83,0)
 S ECMSG(1,0)="The BACKGROUND DSS-"_ECPACK_" extract (#"_$P(EC23,U,2)_") for "_ECSDN
"RTN","ECXTAUTO",84,0)
 S ECMSG(2,0)="through "_ECEDN_" was begun on "_$P(ECXSTART,"@")_" at "_$P(ECXSTART,"@",2)
"RTN","ECXTAUTO",85,0)
 S ECMSG(3,0)="and completed on "_$P(TIME,"@")_" at "_$P(TIME,"@",2)_"."
"RTN","ECXTAUTO",86,0)
 S ECMSG(4,0)=" "
"RTN","ECXTAUTO",87,0)
 S ECMSG(5,0)="A total of "_ECRN_" records were written."
"RTN","ECXTAUTO",88,0)
 S ECMSG(6,0)=" "
"RTN","ECXTAUTO",89,0)
 S ECMSG(7,0)="Extract time was [HH:MM:SS] "_$$HDIFF^XLFDT($H,ECXNOW,3)
"RTN","ECXTAUTO",90,0)
 S ECMSG(8,0)=" "
"RTN","ECXTAUTO",91,0)
 S X=$E(ECXLOGIC,5) S X=$S((X="")!(X=" "):"",1:"revision "_X_" of ")
"RTN","ECXTAUTO",92,0)
 S ECMSG(9,0)="The data was extracted using "_X_"fiscal year "_$E(ECXLOGIC,1,4)_" logic."
"RTN","ECXTAUTO",93,0)
 S ECMSG(10,0)=" "
"RTN","ECXTAUTO",94,0)
 S XMTEXT="ECMSG(" D ^XMD
"RTN","ECXTAUTO",95,0)
 Q
"RTN","ECXTAUTO",96,0)
 ;
"RTN","ECXTAUTO",97,0)
ERROR ; send message when job was queued to extract data already extracted
"RTN","ECXTAUTO",98,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED)
"RTN","ECXTAUTO",99,0)
 S XMSUB=ECINST_" - "_ECPACK_" BACKGROUND EXTRACT FAILURE",XMDUZ="DSS SYSTEM"
"RTN","ECXTAUTO",100,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTAUTO",101,0)
 S ECMSG(1,0)="The "_ECPACK_" extract was automatically requeued to extract"
"RTN","ECXTAUTO",102,0)
 S ECMSG(2,0)="data for "_ECSDN_" through "_ECEDN_"."
"RTN","ECXTAUTO",103,0)
 S ECMSG(3,0)="Data for this range of dates has already been extracted."
"RTN","ECXTAUTO",104,0)
 S ECMSG(4,0)=" "
"RTN","ECXTAUTO",105,0)
 S ECMSG(5,0)="The extract was NOT generated, but has been requeued to run"
"RTN","ECXTAUTO",106,0)
 S ECMSG(6,0)="next month. "
"RTN","ECXTAUTO",107,0)
 S XMTEXT="ECMSG(" D ^XMD
"RTN","ECXTAUTO",108,0)
 Q
"RTN","ECXTAUTO",109,0)
 ;
"RTN","ECXTAUTO",110,0)
FYMSG ; send message for october extract
"RTN","ECXTAUTO",111,0)
 S Y=$E(ECFDT,1,5)_"00" D DD^%DT
"RTN","ECXTAUTO",112,0)
 S XMSUB=ECINST_" - "_ECPACK_" BACKGROUND EXTRACT FAILURE",XMDUZ="DSS SYSTEM"
"RTN","ECXTAUTO",113,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTAUTO",114,0)
 S ECMSG(1,0)="There was an attempt to automatically requeue the "_ECPACK
"RTN","ECXTAUTO",115,0)
 S ECMSG(2,0)="extract for the month of "_Y_"."
"RTN","ECXTAUTO",116,0)
 S ECMSG(3,0)=" "
"RTN","ECXTAUTO",117,0)
 S ECMSG(4,0)="The extract was NOT generated.  The first extract of the new fiscal"
"RTN","ECXTAUTO",118,0)
 S ECMSG(5,0)="year will need to be queued to run after any required fiscal year"
"RTN","ECXTAUTO",119,0)
 S ECMSG(6,0)="update is installed."
"RTN","ECXTAUTO",120,0)
 S XMTEXT="ECMSG(" D ^XMD
"RTN","ECXTAUTO",121,0)
 Q
"RTN","ECXTAUTO",122,0)
 ;
"RTN","ECXTAUTO",123,0)
RUNMSG ;
"RTN","ECXTAUTO",124,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED)
"RTN","ECXTAUTO",125,0)
 S XMSUB=ECINST_" - "_ECPACK_" BACKGROUND EXTRACT FAILURE",XMDUZ="DSS SYSTEM"
"RTN","ECXTAUTO",126,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTAUTO",127,0)
 S ECMSG(1,0)="The "_ECPACK_" extract was automatically requeued to extract"
"RTN","ECXTAUTO",128,0)
 S ECMSG(2,0)="data for "_ECSDN_" through "_ECEDN_"."
"RTN","ECXTAUTO",129,0)
 S ECMSG(3,0)="But a "_ECHEAD_" extract appears to be currently running."
"RTN","ECXTAUTO",130,0)
 S ECMSG(4,0)=" "
"RTN","ECXTAUTO",131,0)
 S ECMSG(5,0)="The requeued extract was NOT generated, but has been requeued"
"RTN","ECXTAUTO",132,0)
 S ECMSG(6,0)="for next month."
"RTN","ECXTAUTO",133,0)
 S XMTEXT="ECMSG(" D ^XMD
"RTN","ECXTAUTO",134,0)
 Q
"RTN","ECXTLOCL")
0^44^B9199336
"RTN","ECXTLOCL",1,0)
ECXTLOCL ;BIR/DMA-Package Extracts for Local Use ; 17 Mar 95 / 1:04 PM
"RTN","ECXTLOCL",2,0)
 ;;3.0;DSS EXTRACTS;**8,49**;Dec 22, 1997
"RTN","ECXTLOCL",3,0)
EN ;entry point
"RTN","ECXTLOCL",4,0)
 ;Queuing and message sending for package extracts for local use
"RTN","ECXTLOCL",5,0)
 ;Input ECPACK   printed name of package (e.g. Lab, Prescriptions)
"RTN","ECXTLOCL",6,0)
 ;      ECRTN    in the form of START^ROUTINE
"RTN","ECXTLOCL",7,0)
 ;      ECGRP    name of local mail group to receive summary message
"RTN","ECXTLOCL",8,0)
 ;               (MUST BE 1 TO 5 UPPER CASE ALPHA - NO SPACES)
"RTN","ECXTLOCL",9,0)
 ;      ECFILE   file number of the local editing file
"RTN","ECXTLOCL",10,0)
 ; generates EC23=2nd and 3rd piece of zero node in local editing file
"RTN","ECXTLOCL",11,0)
 ;               =YYMM of end date^pointer to 727
"RTN","ECXTLOCL",12,0)
 ;       ECXLOGIC=Fiscal year extract logic to use
"RTN","ECXTLOCL",13,0)
 ;
"RTN","ECXTLOCL",14,0)
 S EC=$O(^ECX(727.1,"AF",ECFILE,0)),EC=$P($G(^ECX(727.1,EC,0)),U,5) I 'EC G ERROR
"RTN","ECXTLOCL",15,0)
 S ECED=$$FMADD^XLFDT(DT,-EC+1),ECSD=$$FMADD^XLFDT(DT,-EC)
"RTN","ECXTLOCL",16,0)
 ;look at results for DT-Offset so ECSD=DT-EC
"RTN","ECXTLOCL",17,0)
 S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXTLOCL",18,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTLOCL",19,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXTLOCL",20,0)
 I '$D(ECXLOGIC) S ECXLOGIC=$$FISCAL^ECXUTL1(ECSD)
"RTN","ECXTLOCL",21,0)
 L +^ECX(727,0) S EC=$P(^ECX(727,0),U,3)+1,$P(^(0),U,3,4)=EC_U_EC L -^ECX(727,0)
"RTN","ECXTLOCL",22,0)
 S ^ECX(727,EC,0)=EC_U_DT_U_ECPACK_U_ECSD_U_$E(ECED,1,7)
"RTN","ECXTLOCL",23,0)
 S ^ECX(727,EC,"HEAD")=ECHEAD
"RTN","ECXTLOCL",24,0)
 S ^ECX(727,EC,"FILE")=ECFILE
"RTN","ECXTLOCL",25,0)
 S ^ECX(727,EC,"GRP")=ECGRP
"RTN","ECXTLOCL",26,0)
 S ^ECX(727,EC,"L")="L"
"RTN","ECXTLOCL",27,0)
 S ^ECX(727,EC,"VER")=$G(ECVER)_"^"_ECXLOGIC
"RTN","ECXTLOCL",28,0)
 S ^ECX(727,"AC",DT,EC)="",^ECX(727,"AD",ECPACK,EC)=""
"RTN","ECXTLOCL",29,0)
 S ECRN=0,EC23=$$ECXYM^ECXUTL(ECED)_U_EC
"RTN","ECXTLOCL",30,0)
EXTRACT ;do specific extract
"RTN","ECXTLOCL",31,0)
 D @ECRTN
"RTN","ECXTLOCL",32,0)
 S TIME=$P($$HTE^XLFDT($H),":",1,2)
"RTN","ECXTLOCL",33,0)
 S $P(^ECX(727,$P(EC23,U,2),0),U,6)=ECRN
"RTN","ECXTLOCL",34,0)
 S ECLAST=$O(^ECX(ECFILE,999999999),-1),ECTOTAL=$P(^ECX(ECFILE,0),U,4)+ECRN,$P(^(0),U,3,4)=ECLAST_U_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXTLOCL",35,0)
 ;set piece 3 and 4 of the zero node
"RTN","ECXTLOCL",36,0)
 ;
"RTN","ECXTLOCL",37,0)
MSG ; send message to mail group 'DSS-ECGRP'
"RTN","ECXTLOCL",38,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTLOCL",39,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTLOCL",40,0)
 S ECMSG(1,0)="The LOCAL USE DSS-"_ECPACK_" extract for "_ECSDN_" through "
"RTN","ECXTLOCL",41,0)
 S ECMSG(2,0)=ECEDN_" was completed on "_$P(TIME,"@")_" at "_$P(TIME,"@",2)_". "
"RTN","ECXTLOCL",42,0)
 S ECMSG(3,0)=" "
"RTN","ECXTLOCL",43,0)
 S ECMSG(4,0)="A total of "_ECRN_" records were written."
"RTN","ECXTLOCL",44,0)
 S ECMSG(5,0)=" "
"RTN","ECXTLOCL",45,0)
 S X=$E(ECXLOGIC,5) S X=$S((X="")!(X=" "):"",1:"revision "_X_" of ")
"RTN","ECXTLOCL",46,0)
 S ECMSG(6,0)="The data was extracted using "_X_"fiscal year "_$E(ECXLOGIC,1,4)_" logic."
"RTN","ECXTLOCL",47,0)
 S ECMSG(7,0)=" "
"RTN","ECXTLOCL",48,0)
 S XMTEXT="ECMSG(" D ^XMD
"RTN","ECXTLOCL",49,0)
 Q
"RTN","ECXTLOCL",50,0)
 ;
"RTN","ECXTLOCL",51,0)
 Q
"RTN","ECXTLOCL",52,0)
ERROR ;local extract not properly setup
"RTN","ECXTLOCL",53,0)
 S EC(1)="The local "_ECPACK_" extract was not properly set up",EC(2)="Please review settings in file 727.1 and requeue this extract"
"RTN","ECXTLOCL",54,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))="",XMTEXT="EC(",XMSUB="Local extract not properly setup",XMDUZ="DSS SYSTEM" D ^XMD
"RTN","ECXTLOCL",55,0)
 S ZTREQ="@" Q
"RTN","ECXTRAC")
0^45^B55792203
"RTN","ECXTRAC",1,0)
ECXTRAC ;ALB/GTS,JAP,BIR/DMA,CML-Package Extracts for DSS ; 11/08/96 15:37
"RTN","ECXTRAC",2,0)
 ;;3.0;DSS EXTRACTS;**9,8,14,24,30,33,49**;Dec 22, 1997
"RTN","ECXTRAC",3,0)
 ;Date range, queuing and message sending for package extracts
"RTN","ECXTRAC",4,0)
 ;Input
"RTN","ECXTRAC",5,0)
 ;  ECPACK   printed name of package (e.g. Lab, Prescriptions)
"RTN","ECXTRAC",6,0)
 ;  ECNODE   in file 728 where last date is stored
"RTN","ECXTRAC",7,0)
 ;  ECPIECE  piece of node where last date is stored
"RTN","ECXTRAC",8,0)
 ;  ECRTN    in the form of START^ROUTINE
"RTN","ECXTRAC",9,0)
 ;  ECGRP    name of local mail group to receive summary message
"RTN","ECXTRAC",10,0)
 ;           (MUST BE 1 TO 5 UPPER CASE ALPHA - NO SPACES)
"RTN","ECXTRAC",11,0)
 ;  ECFILE   file number of the local editing file
"RTN","ECXTRAC",12,0)
 ;  ECXLOGIC Fiscal year extract logic to use (optional)
"RTN","ECXTRAC",13,0)
 ;  ECXDATES StartDate^EndDate^DoNotUpdate728 (optional)
"RTN","ECXTRAC",14,0)
 ;Generates
"RTN","ECXTRAC",15,0)
 ;  EC23=2nd and 3rd piece of zero node in local editing file
"RTN","ECXTRAC",16,0)
 ;      =YYMM of end date^pointer to 727
"RTN","ECXTRAC",17,0)
 ;  ECXLOGIC=Fiscal year extract logic to use
"RTN","ECXTRAC",18,0)
 ;
"RTN","ECXTRAC",19,0)
EN ;entry point
"RTN","ECXTRAC",20,0)
 N OUT,CHKFLG
"RTN","ECXTRAC",21,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXTRAC",22,0)
 I '$D(ECHEAD) S ECHEAD=" "
"RTN","ECXTRAC",23,0)
 I $P($G(^ECX(728,1,ECNODE+.1)),U,ECPIECE)]"" D  Q
"RTN","ECXTRAC",24,0)
 .W !!,$C(7),ECPACK," extract is already scheduled to run",!!
"RTN","ECXTRAC",25,0)
 .D PAUSE
"RTN","ECXTRAC",26,0)
 W @IOF,!,"Extract ",ECPACK," Information for DSS",!!
"RTN","ECXTRAC",27,0)
 S:'$D(ECINST) ECINST=+$P(^ECX(728,1,0),U)
"RTN","ECXTRAC",28,0)
 S ECXINST=ECINST
"RTN","ECXTRAC",29,0)
 K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXTRAC",30,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTRAC",31,0)
 ;* get last date for all extracts except prosthetics
"RTN","ECXTRAC",32,0)
 I ECGRP'="PRO" D
"RTN","ECXTRAC",33,0)
 .S ECLDT=$S($D(^ECX(728,1,ECNODE)):$P(^(ECNODE),U,ECPIECE),1:2610624)
"RTN","ECXTRAC",34,0)
 .S:ECLDT="" ECLDT=2610624
"RTN","ECXTRAC",35,0)
 ;* get last date for prosthetics
"RTN","ECXTRAC",36,0)
 I ECGRP="PRO" D
"RTN","ECXTRAC",37,0)
 .N ECXDA1
"RTN","ECXTRAC",38,0)
 .S ECXDA1=$O(^ECX(728,0))
"RTN","ECXTRAC",39,0)
 .I $D(^ECX(728,ECXDA1,1,ECXINST,0)) D
"RTN","ECXTRAC",40,0)
 ..S ECLDT=$P(^ECX(728,ECXDA1,1,ECXINST,0),U,2)
"RTN","ECXTRAC",41,0)
 .I '$D(^ECX(728,ECXDA1,1,ECXINST,0)) D
"RTN","ECXTRAC",42,0)
 ..S DA(1)=ECXDA1
"RTN","ECXTRAC",43,0)
 ..S DIC(0)="L" K ECXDD
"RTN","ECXTRAC",44,0)
 ..D FIELD^DID(728,59,,"SPECIFIER","ECXDD")
"RTN","ECXTRAC",45,0)
 ..S DIC("P")=ECXDD("SPECIFIER") K ECXDD
"RTN","ECXTRAC",46,0)
 ..S DIC="^ECX(728,"_DA(1)_",1,",X=ECXINST,DINUM=X
"RTN","ECXTRAC",47,0)
 ..K DD,DO D FILE^DICN
"RTN","ECXTRAC",48,0)
 ..K DIC,X,DINUM,Y,DA
"RTN","ECXTRAC",49,0)
 ..S ECLDT=2610624
"RTN","ECXTRAC",50,0)
 S X=$G(ECXDATES) S ECSD=$P(X,"^",1),ECED=$P(X,"^",2)
"RTN","ECXTRAC",51,0)
 S OUT=0
"RTN","ECXTRAC",52,0)
 I (ECSD="")!(ECED="") F  S (ECED,ECSD)="" D  Q:OUT
"RTN","ECXTRAC",53,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: " D ^%DT
"RTN","ECXTRAC",54,0)
 .I Y<0 S OUT=1 Q
"RTN","ECXTRAC",55,0)
 .S ECSD=Y
"RTN","ECXTRAC",56,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: " D ^%DT
"RTN","ECXTRAC",57,0)
 .I Y<0 S OUT=1 Q
"RTN","ECXTRAC",58,0)
 .I Y<ECSD D  Q
"RTN","ECXTRAC",59,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXTRAC",60,0)
 ..W !,"Please try again.",!!
"RTN","ECXTRAC",61,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXTRAC",62,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXTRAC",63,0)
 ..W !,"Please try again.",!!
"RTN","ECXTRAC",64,0)
 .S ECED=Y
"RTN","ECXTRAC",65,0)
 .I ECLDT'<ECSD D  Q
"RTN","ECXTRAC",66,0)
 ..W !!,"The ",ECPACK," information has already been extracted through ",$$FMTE^XLFDT(ECLDT),"."
"RTN","ECXTRAC",67,0)
 ..W !,"Please enter a new date range.",!!
"RTN","ECXTRAC",68,0)
 .S OUT=1
"RTN","ECXTRAC",69,0)
 I ECED]"",ECSD]"" D QUE
"RTN","ECXTRAC",70,0)
 Q
"RTN","ECXTRAC",71,0)
 ;
"RTN","ECXTRAC",72,0)
QUE ;queue extract
"RTN","ECXTRAC",73,0)
 N CHKFLG
"RTN","ECXTRAC",74,0)
 ;if extract is ivp (i.e., file=727.819) and data in the intermediate file use new format
"RTN","ECXTRAC",75,0)
 I ECFILE=727.819 D  Q:CHKFLG
"RTN","ECXTRAC",76,0)
 .S CHKFLG=0
"RTN","ECXTRAC",77,0)
 .S X="PSIVSTAT" X ^%ZOSF("TEST") I '$T Q
"RTN","ECXTRAC",78,0)
 .I '$D(^ECX(728.113,"A")) S CHKFLG=1 D NOIVP Q
"RTN","ECXTRAC",79,0)
 .S DATE=$O(^ECX(728.113,"A",ECED+1),-1) I DATE<ECSD S CHKFLG=1 D NOIVP Q
"RTN","ECXTRAC",80,0)
 .D CHK^ECXDIVIV Q:CHKFLG
"RTN","ECXTRAC",81,0)
 .D CHK2
"RTN","ECXTRAC",82,0)
 .S ECRTN="START^ECXPIVDN",ECVER=7
"RTN","ECXTRAC",83,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXTRAC",84,0)
 I '$D(ECHEAD) S ECHEAD=""
"RTN","ECXTRAC",85,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXTRAC",86,0)
 K ZTSAVE
"RTN","ECXTRAC",87,0)
 F X="ECINST","ECED","ECSD","ECSD1","ECEDN","ECSDN" S ZTSAVE(X)=""
"RTN","ECXTRAC",88,0)
 F X="ECPACK","ECPIECE","ECRTN","ECGRP","ECNODE" S ZTSAVE(X)=""
"RTN","ECXTRAC",89,0)
 F X="ECFILE","ECHEAD","ECVER","ECINST","ECXINST" S ZTSAVE(X)=""
"RTN","ECXTRAC",90,0)
 F X="ECXLOGIC","ECXDATES" S ZTSAVE(X)=""
"RTN","ECXTRAC",91,0)
 S ZTDESC=ECPACK_" EXTRACT: "_ECSDN_" TO "_ECEDN,ZTRTN="START^ECXTRAC",ZTIO=""
"RTN","ECXTRAC",92,0)
 D ^%ZTLOAD
"RTN","ECXTRAC",93,0)
 I $D(ZTSK) D
"RTN","ECXTRAC",94,0)
 .S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)="R"
"RTN","ECXTRAC",95,0)
 .W !,"Request queued as Task #",ZTSK,".",!
"RTN","ECXTRAC",96,0)
 .D PAUSE
"RTN","ECXTRAC",97,0)
 Q
"RTN","ECXTRAC",98,0)
 ;
"RTN","ECXTRAC",99,0)
NOIVP ;cannot generate ivp message
"RTN","ECXTRAC",100,0)
 W !!,?5,"There does not appear to be any data in the IV EXTRACT DATA"
"RTN","ECXTRAC",101,0)
 W !,?5,"file (#728.113) for the selected date range."
"RTN","ECXTRAC",102,0)
 W !!,?5,"The IVP extract cannot be generated."
"RTN","ECXTRAC",103,0)
 D PAUSE
"RTN","ECXTRAC",104,0)
 Q
"RTN","ECXTRAC",105,0)
 ;
"RTN","ECXTRAC",106,0)
START ; entry when queued
"RTN","ECXTRAC",107,0)
 S QFLG=0
"RTN","ECXTRAC",108,0)
 L +^ECX(727,0) S EC=$P(^ECX(727,0),U,3)+1,$P(^(0),U,3,4)=EC_U_EC L -^ECX(727,0)
"RTN","ECXTRAC",109,0)
 S ^ECX(727,EC,0)=EC_U_DT_U_ECPACK_U_ECSD_U_$E(ECED,1,7)
"RTN","ECXTRAC",110,0)
 S ^ECX(727,EC,"HEAD")=ECHEAD
"RTN","ECXTRAC",111,0)
 S:ECFILE=727.816 ECFILE=727.827 S ^ECX(727,EC,"FILE")=ECFILE
"RTN","ECXTRAC",112,0)
 S ^ECX(727,EC,"GRP")=ECGRP
"RTN","ECXTRAC",113,0)
 I $G(ECXLOGIC)="" S ECXLOGIC=$$FISCAL^ECXUTL1(ECSD)
"RTN","ECXTRAC",114,0)
 S ^ECX(727,EC,"VER")=$G(ECVER)_"^"_ECXLOGIC
"RTN","ECXTRAC",115,0)
 S ^ECX(727,EC,"DIV")=ECXINST
"RTN","ECXTRAC",116,0)
 S DA=EC,DIK="^ECX(727," D IX^DIK K DIK,DA
"RTN","ECXTRAC",117,0)
 S ECRN=0,ECXYM=$$ECXYM^ECXUTL(ECED),EC23=ECXYM_U_EC
"RTN","ECXTRAC",118,0)
 S ECXSTART=$P($$HTE^XLFDT($H),":",1,2),ECXNOW=$H
"RTN","ECXTRAC",119,0)
 ;do specific extract
"RTN","ECXTRAC",120,0)
 D @ECRTN
"RTN","ECXTRAC",121,0)
 ;if task gets stop request, set ztstop and quit
"RTN","ECXTRAC",122,0)
 I QFLG D  Q
"RTN","ECXTRAC",123,0)
 .S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)="",ZTSTOP=1
"RTN","ECXTRAC",124,0)
 .D QKILL
"RTN","ECXTRAC",125,0)
 .D QMSG
"RTN","ECXTRAC",126,0)
 .D ^ECXKILL
"RTN","ECXTRAC",127,0)
 ;Set last date for extract
"RTN","ECXTRAC",128,0)
 I '$P($G(ECXDATES),"^",3) D
"RTN","ECXTRAC",129,0)
 .;* set last date for all extracts except prosthetics
"RTN","ECXTRAC",130,0)
 .I ECGRP'="PRO" S $P(^ECX(728,1,ECNODE),U,ECPIECE)=$P(ECED,".") Q
"RTN","ECXTRAC",131,0)
 .;* set last date for prosthetics
"RTN","ECXTRAC",132,0)
 .N ECXDA1
"RTN","ECXTRAC",133,0)
 .S ECXDA1=$O(^ECX(728,0))
"RTN","ECXTRAC",134,0)
 .S $P(^ECX(728,ECXDA1,1,ECXINST,0),U,2)=$P(ECED,".")
"RTN","ECXTRAC",135,0)
 S TIME=$P($$HTE^XLFDT($H),":",1,2)
"RTN","ECXTRAC",136,0)
 S $P(^ECX(727,$P(EC23,U,2),0),U,6)=ECRN
"RTN","ECXTRAC",137,0)
 ;set piece 3 and 4 of the zero node
"RTN","ECXTRAC",138,0)
 S ECLAST=$O(^ECX(ECFILE,99999999),-1),ECTOTAL=$P(^ECX(ECFILE,0),U,4)+ECRN,$P(^(0),U,3,4)=ECLAST_U_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXTRAC",139,0)
 D MSG
"RTN","ECXTRAC",140,0)
 S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)=""
"RTN","ECXTRAC",141,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ECXTRAC",142,0)
 Q
"RTN","ECXTRAC",143,0)
 ;
"RTN","ECXTRAC",144,0)
MSG ; send message to mail group 'DSS-ECGRP'
"RTN","ECXTRAC",145,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTRAC",146,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTRAC",147,0)
 S ECMSG(1,0)="The DSS-"_ECPACK_" extract (#"_$P(EC23,U,2)_") for "_ECSDN
"RTN","ECXTRAC",148,0)
 S ECMSG(2,0)="through "_ECEDN_" was begun on "_$P(ECXSTART,"@")_" at "_$P(ECXSTART,"@",2)
"RTN","ECXTRAC",149,0)
 S ECMSG(3,0)="and completed on "_$P(TIME,"@")_" at "_$P(TIME,"@",2)_"."
"RTN","ECXTRAC",150,0)
 S ECMSG(4,0)=" "
"RTN","ECXTRAC",151,0)
 S ECMSG(5,0)="A total of "_ECRN_" records were written."
"RTN","ECXTRAC",152,0)
 S ECMSG(6,0)=" "
"RTN","ECXTRAC",153,0)
 S ECMSG(7,0)="Extract time was [HH:MM:SS] "_$$HDIFF^XLFDT($H,ECXNOW,3)
"RTN","ECXTRAC",154,0)
 S ECMSG(8,0)=" "
"RTN","ECXTRAC",155,0)
 S X=$E(ECXLOGIC,5) S X=$S((X="")!(X=" "):"",1:"revision "_X_" of ")
"RTN","ECXTRAC",156,0)
 S ECMSG(9,0)="The data was extracted using "_X_"fiscal year "_$E(ECXLOGIC,1,4)_" logic."
"RTN","ECXTRAC",157,0)
 S ECMSG(10,0)=" "
"RTN","ECXTRAC",158,0)
 S XMTEXT="ECMSG("
"RTN","ECXTRAC",159,0)
 D ^XMD
"RTN","ECXTRAC",160,0)
 Q
"RTN","ECXTRAC",161,0)
 ;
"RTN","ECXTRAC",162,0)
QMSG ; send abort message to mail group 'DSS-ECGRP'
"RTN","ECXTRAC",163,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTRAC",164,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTRAC",165,0)
 S ECMSG(1,0)="The DSS-"_ECPACK_" extract (#"_$P(EC23,U,2)_") for "_ECSDN
"RTN","ECXTRAC",166,0)
 S ECMSG(2,0)="through "_ECEDN_" was begun on "_$P(ECXSTART,"@")_" at "_$P(ECXSTART,"@",2)_"."
"RTN","ECXTRAC",167,0)
 S ECMSG(3,0)=" "
"RTN","ECXTRAC",168,0)
 S ECMSG(4,0)="A user stop request was received by Taskmanager which caused processing"
"RTN","ECXTRAC",169,0)
 S ECMSG(5,0)="to terminate before completion.  Any records which may have been created"
"RTN","ECXTRAC",170,0)
 S ECMSG(6,0)="in file #"_ECFILE_" for this extract have been deleted."
"RTN","ECXTRAC",171,0)
 S ECMSG(7,0)=" "
"RTN","ECXTRAC",172,0)
 S XMTEXT="ECMSG("
"RTN","ECXTRAC",173,0)
 D ^XMD
"RTN","ECXTRAC",174,0)
 Q
"RTN","ECXTRAC",175,0)
 ;
"RTN","ECXTRAC",176,0)
QKILL ;delete records created for any extract stopped at user request
"RTN","ECXTRAC",177,0)
 N ECX,FILE,IEN,DA,DIK
"RTN","ECXTRAC",178,0)
 S FILE="^ECX("_ECFILE_","
"RTN","ECXTRAC",179,0)
 S ECX=$P(EC23,U,2)
"RTN","ECXTRAC",180,0)
 F  S IEN=$O(^ECX(ECFILE,999999999),-1) Q:($P(^ECX(ECFILE,IEN,0),U,3)'=ECX)  D
"RTN","ECXTRAC",181,0)
 .S DIK=FILE,DA=IEN D ^DIK
"RTN","ECXTRAC",182,0)
 Q
"RTN","ECXTRAC",183,0)
 ;
"RTN","ECXTRAC",184,0)
CHK2 ;iv extract check - all active iv rooms to have a division
"RTN","ECXTRAC",185,0)
 S EC=0
"RTN","ECXTRAC",186,0)
 F  S EC=$O(^PS(59.5,EC)) Q:'EC  I '$P(^PS(59.5,EC,0),U,4) D  Q:CHKFLG
"RTN","ECXTRAC",187,0)
 .S CHKFLG=$S('$G(^PS(59.5,EC,"I")):1,$G(^PS(59.5,EC,"I"))>DT:1,1:0)
"RTN","ECXTRAC",188,0)
 .I CHKFLG D
"RTN","ECXTRAC",189,0)
 ..W !!,"All active IV Rooms in the IV Room file (#59.5) must have a ""DIVISION""",!,"assigned to run this extract!"
"RTN","ECXTRAC",190,0)
 ..W !!,"This information can be entered using the DSS Extract Manager's Maintenance ",!,"option ""Enter/Edit IV Room Division""."
"RTN","ECXTRAC",191,0)
 ..D PAUSE
"RTN","ECXTRAC",192,0)
 Q
"RTN","ECXTRAC",193,0)
 ;
"RTN","ECXTRAC",194,0)
PAUSE ;pause screen
"RTN","ECXTRAC",195,0)
 N DIR,X,Y
"RTN","ECXTRAC",196,0)
 S OUT=0
"RTN","ECXTRAC",197,0)
 I $E(IOST)="C" D
"RTN","ECXTRAC",198,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXTRAC",199,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXTRAC",200,0)
 I 'Y S OUT=1
"RTN","ECXTRAC",201,0)
 W !!
"RTN","ECXTRAC",202,0)
 Q
"RTN","ECXTRANS")
0^29^B51749382
"RTN","ECXTRANS",1,0)
ECXTRANS ;ALB/GTS,JAP,BIR/DMA-Extract from Local Editing Files and Transmit ; [ 11/26/96  2:13 PM ]
"RTN","ECXTRANS",2,0)
 ;;3.0;DSS EXTRACTS;**2,9,12,8,13,14,23,24,33,49**;Dec 22, 1997
"RTN","ECXTRANS",3,0)
EN ;entry point
"RTN","ECXTRANS",4,0)
 N ECDA,ECRE,ECTMP,ECCHK,ECDIVVR,ECXDIQ,JJ,SS,OUT,DIR,DUOUT
"RTN","ECXTRANS",5,0)
 N DTOUT,DIRUT,DIC,X,Y
"RTN","ECXTRANS",6,0)
 S ECXQUEUE=$P($G(^ECX(728,1,"QUEUE")),"^",1)
"RTN","ECXTRANS",7,0)
 I ECXQUEUE'?1"DM"1U D  Q
"RTN","ECXTRANS",8,0)
 .W !,"You have not defined a proper transmission queue"
"RTN","ECXTRANS",9,0)
 .W !,"for entry number 1 in the DSS EXTRACTS file (#728)."
"RTN","ECXTRANS",10,0)
 .W !,"No transmission allowed."
"RTN","ECXTRANS",11,0)
 .D PAUSE
"RTN","ECXTRANS",12,0)
 ;** check divisions for transmission
"RTN","ECXTRANS",13,0)
 S ECCHK=$$DIV4^XUSER(.ECTMP,DUZ)
"RTN","ECXTRANS",14,0)
 I 'ECCHK D  Q
"RTN","ECXTRANS",15,0)
 .W !,"You do not have any divisions defined in your user set up and cannot transmit."
"RTN","ECXTRANS",16,0)
 .S DIR(0)="FAO^1:1",DIR("A")="Hit Return to continue." D ^DIR K DIR,X,Y
"RTN","ECXTRANS",17,0)
 W !!,"Your user setup will only allow you to transmit extracts from the"
"RTN","ECXTRANS",18,0)
 W !,"following divisions:",!
"RTN","ECXTRANS",19,0)
 S ECDIVVR=""
"RTN","ECXTRANS",20,0)
 F  S ECDIVVR=$O(ECTMP(ECDIVVR)) Q:'(+ECDIVVR)  D
"RTN","ECXTRANS",21,0)
 .K ECXDIC S DA=ECDIVVR,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01"
"RTN","ECXTRANS",22,0)
 .D EN^DIQ1 W !,"   ",$G(ECXDIC(4,DA,.01,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTRANS",23,0)
 W !!,"If you can't select an extract, it is probably from another division.",!
"RTN","ECXTRANS",24,0)
 D PAUSE Q:OUT
"RTN","ECXTRANS",25,0)
AGAIN S ECRE="",DIC="^ECX(727,",DIC(0)="AEQM"
"RTN","ECXTRANS",26,0)
 S DIC("A")="Transmit which extract: "
"RTN","ECXTRANS",27,0)
 S DIC("S")="I '$D(^ECX(727,+Y,""L"")),'$D(^ECX(727,+Y,""PURG"")),$D(ECTMP(+$P($G(^ECX(727,+Y,""DIV"")),U,1)))"
"RTN","ECXTRANS",28,0)
 D ^DIC
"RTN","ECXTRANS",29,0)
 I Y<0 W !! Q
"RTN","ECXTRANS",30,0)
 ;get data on extract
"RTN","ECXTRANS",31,0)
 S DR="1;2;3;4;5;6;14;15",(ECDA,DA)=+Y,DIQ(0)="IE",DIQ="ECXDIQ" D EN^DIQ1
"RTN","ECXTRANS",32,0)
 I ECXDIQ(727,ECDA,14,"I")="" D
"RTN","ECXTRANS",33,0)
 .S ECXDIQ(727,ECDA,14,"I")=$$FISCAL^ECXUTL1(ECXDIQ(727,ECDA,3,"I"))
"RTN","ECXTRANS",34,0)
 .S ECXDIQ(727,ECDA,14,"E")=ECXDIQ(727,ECDA,14,"I")
"RTN","ECXTRANS",35,0)
 I ($$FISCAL^ECXUTL1(ECXDIQ(727,ECDA,3,"I"))=2004)&($E(ECXDIQ(727,ECDA,14,"I"),1,4)=2004) D  G AGAIN
"RTN","ECXTRANS",36,0)
 .W !!
"RTN","ECXTRANS",37,0)
 .W !,"**********************************************************************"
"RTN","ECXTRANS",38,0)
 .W !,"**  TRANSMISSION OF FISCAL YEAR 2004 DATA IS NOT CURRENTLY ALLOWED  **"
"RTN","ECXTRANS",39,0)
 .W !,"**                                                                  **"
"RTN","ECXTRANS",40,0)
 .W !,"**  THE ABILITY TO DO THIS WILL BE RELEASED IN A SUBSEQUENT PATCH   **"
"RTN","ECXTRANS",41,0)
 .W !,"**********************************************************************"
"RTN","ECXTRANS",42,0)
 .W !!
"RTN","ECXTRANS",43,0)
 .K ECXDIQ,DIQ,DR,DA,ECDA
"RTN","ECXTRANS",44,0)
 W !!,ECXDIQ(727,ECDA,6,"E")_" Extract (#"_ECDA_")",?42,"Records:    ",ECXDIQ(727,ECDA,5,"E")
"RTN","ECXTRANS",45,0)
 W !,"Generated on: ",ECXDIQ(727,ECDA,1,"E"),?42,"Start date: ",ECXDIQ(727,ECDA,3,"E")
"RTN","ECXTRANS",46,0)
 W !,"Division:     ",$E(ECXDIQ(727,ECDA,15,"E"),1,26),?42,"End date:   ",ECXDIQ(727,ECDA,4,"E")
"RTN","ECXTRANS",47,0)
 S X=$E(ECXDIQ(727,ECDA,14,"I"),5) S X=$S((X="")!(X=" "):"",1:"revision "_X_" of ")
"RTN","ECXTRANS",48,0)
 W !!,"The data was extracted using "_X_"fiscal year "_$E(ECXDIQ(727,ECDA,14,"I"),1,4)_" logic."
"RTN","ECXTRANS",49,0)
 W !!,"MailMan transmission of the "_ECXDIQ(727,ECDA,2,"E")_" extract is set to a"
"RTN","ECXTRANS",50,0)
 W !,"limit of 131,000 bytes per message.  Each extract record ends with a ^~."
"RTN","ECXTRANS",51,0)
 I $G(^ECX(727,ECDA,"TR")) S ECX=^("TR") D  Q:OUT
"RTN","ECXTRANS",52,0)
 .S OUT=0
"RTN","ECXTRANS",53,0)
 .W !!,"This extract was transmitted on ",$TR($$FMTE^XLFDT(ECX,"5DF")," ","0")
"RTN","ECXTRANS",54,0)
 .K ECX S DIR(0)="Y",DIR("A")="Do you want to retransmit " D ^DIR K DIR
"RTN","ECXTRANS",55,0)
 .I 'Y S OUT=1 Q
"RTN","ECXTRANS",56,0)
 .K ^ECX(727,ECDA,"TR")
"RTN","ECXTRANS",57,0)
 .S ECRE="re"
"RTN","ECXTRANS",58,0)
 S ECTYPE=$P(^ECX(727,ECDA,0),U,3),ECIEN=+$O(^ECX(727.1,"AC",ECTYPE,0))
"RTN","ECXTRANS",59,0)
 S ECPIECE=$P($G(^ECX(727.1,ECIEN,0)),U,10)
"RTN","ECXTRANS",60,0)
 I ECPIECE>0,$P($G(^ECX(728,1,7.1)),U,ECPIECE)]"" D  Q
"RTN","ECXTRANS",61,0)
 .D MES^XPDUTL(" ")
"RTN","ECXTRANS",62,0)
 .D MES^XPDUTL("An "_ECTYPE_" Extract is currently running or scheduled to run.")
"RTN","ECXTRANS",63,0)
 .D MES^XPDUTL("Please wait until that job has completed before attempting")
"RTN","ECXTRANS",64,0)
 .D MES^XPDUTL("this transmission.")
"RTN","ECXTRANS",65,0)
 .D MES^XPDUTL(" ")
"RTN","ECXTRANS",66,0)
 .D PAUSE
"RTN","ECXTRANS",67,0)
 S ZTSK=$G(^ECX(727,ECDA,"Q"))
"RTN","ECXTRANS",68,0)
 I ZTSK D STAT^%ZTLOAD I ZTSK(0) I ZTSK(1)<3 D  Q
"RTN","ECXTRANS",69,0)
 .W !!,"Task ",ZTSK," is already queued to transmit this extract."
"RTN","ECXTRANS",70,0)
 .K ZTSK
"RTN","ECXTRANS",71,0)
 .D PAUSE
"RTN","ECXTRANS",72,0)
 S ZTSAVE("ECDA")="",ZTSAVE("ECXQUEUE")="",ZTSAVE("ECRE")=""
"RTN","ECXTRANS",73,0)
 S ZTRTN="START^ECXTRANS",ZTIO=""
"RTN","ECXTRANS",74,0)
 S ZTDESC="Transmission of extract # "_ECDA
"RTN","ECXTRANS",75,0)
 W !! D ^%ZTLOAD
"RTN","ECXTRANS",76,0)
 I $D(ZTSK) D
"RTN","ECXTRANS",77,0)
 .W !,"Request queued as Task #",ZTSK,"."
"RTN","ECXTRANS",78,0)
 .S ^ECX(727,ECDA,"Q")=ZTSK K ZTSK
"RTN","ECXTRANS",79,0)
 .D PAUSE
"RTN","ECXTRANS",80,0)
 Q
"RTN","ECXTRANS",81,0)
 ; entry point for task
"RTN","ECXTRANS",82,0)
START N DA,DIC,DIQ,DR,ECAR1,ECAR2,ECC1,ECC2,ECED,ECGPR,ECF,ECGRP,ECHEAD,ECINST
"RTN","ECXTRANS",83,0)
 N ECMAX,ECMAXR,ECMSN,ECPACK,ECSIZ,ECVER,ECXDIC,I,J,EXDT
"RTN","ECXTRANS",84,0)
 N STR,STRCNT,X,ECSD,ECXLOGIC
"RTN","ECXTRANS",85,0)
 S:$P(^ECX(727,ECDA,0),U,3)'="Prosthetics" ECINST=$P(^ECX(728,1,0),U)
"RTN","ECXTRANS",86,0)
 S:$P(^ECX(727,ECDA,0),U,3)="Prosthetics" ECINST=$P(^("DIV"),U)
"RTN","ECXTRANS",87,0)
 S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXTRANS",88,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I"))
"RTN","ECXTRANS",89,0)
 S ECF=^ECX(727,ECDA,"FILE"),ECHEAD=^("HEAD"),ECGRP=^("GRP")
"RTN","ECXTRANS",90,0)
 S X=^(0),ECPACK=$P(X,U,3),ECSD=$P(X,U,4),ECED=$P(X,U,5)
"RTN","ECXTRANS",91,0)
 S X=$G(^("VER")),ECVER=$P(X,"^",1),ECXLOGIC=$P(X,"^",2)
"RTN","ECXTRANS",92,0)
 S:'ECVER ECVER=1 S ECVER=$$RJ^XLFSTR(ECVER,3,0)
"RTN","ECXTRANS",93,0)
 I ECXLOGIC="" S ECXLOGIC=$$FISCAL^ECXUTL1(ECSD)
"RTN","ECXTRANS",94,0)
 S ECXLOGIC=$$PAD^ECXUTL1(ECXLOGIC,5,"B"," ")
"RTN","ECXTRANS",95,0)
 I $E(ECXLOGIC,1,4)'=2004 S ECXLOGIC=""
"RTN","ECXTRANS",96,0)
 I ECPACK["(setup)" S ECXQUEUE="DMU"
"RTN","ECXTRANS",97,0)
 I (ECXLOGIC'="")!($$FISCAL^ECXUTL1(ECSD)'=2003) D
"RTN","ECXTRANS",98,0)
 .S ECXQUEUE=$P($G(^ECX(728,1,"QUEUE")),"^",2)
"RTN","ECXTRANS",99,0)
 .S:ECXQUEUE="" ECXQUEUE="DMT"
"RTN","ECXTRANS",100,0)
 K ^TMP($J)
"RTN","ECXTRANS",101,0)
 S ECHD(1)=ECINST_ECHEAD_$$ECXYM^ECXUTL(ECED)_ECVER_ECXLOGIC
"RTN","ECXTRANS",102,0)
 S ECMAX=130000,ECMAXR=250,ECLN=2,ECMSN=1,(ECRN,ECSIZ)=0,J=""
"RTN","ECXTRANS",103,0)
 F  S J=$O(^ECX(ECF,"AC",ECDA,J)) Q:('J)  D
"RTN","ECXTRANS",104,0)
 .M ECAR1=^ECX(ECF,J) S (ECAR2,ECC2)=1,(ECAR2(ECC2),ECC1)=""
"RTN","ECXTRANS",105,0)
 .F  S ECC1=$O(ECAR1(ECC1)) Q:ECC1=""  D
"RTN","ECXTRANS",106,0)
 ..S:ECC1=0 ECAR1(ECC1)=$P(ECAR1(ECC1),"^",4,999)
"RTN","ECXTRANS",107,0)
 ..S ECAR2(ECC2)=ECAR2(ECC2)_ECAR1(ECC1) I $L(ECAR2(ECC2))>ECMAXR D
"RTN","ECXTRANS",108,0)
 ...F I=ECMAXR:-1:1 Q:$E(ECAR2(ECC2),I)="^"
"RTN","ECXTRANS",109,0)
 ...S (X,ECAR2)=ECAR2+1,ECAR2(X)=$E(ECAR2(ECC2),I+1,$L(ECAR2(ECC2)))
"RTN","ECXTRANS",110,0)
 ...S ECAR2(ECC2)=$E(ECAR2(ECC2),1,I),ECC2=X
"RTN","ECXTRANS",111,0)
 .S ECAR2(ECC2)=ECAR2(ECC2)_"^~",ECRN=ECRN+1,X=""
"RTN","ECXTRANS",112,0)
 .F  S X=$O(ECAR2(X)) Q:X=""  D
"RTN","ECXTRANS",113,0)
 ..S ^TMP($J,ECMSN,ECLN,0)=ECAR2(X),ECLN=ECLN+1,ECSIZ=ECSIZ+$L(ECAR2(X))
"RTN","ECXTRANS",114,0)
 .K ECAR1,ECAR2
"RTN","ECXTRANS",115,0)
 .I (ECSIZ>ECMAX),($O(^ECX(ECF,"AC",ECDA,J))) D
"RTN","ECXTRANS",116,0)
 ..S ECLN=2,ECMSN=ECMSN+1,ECSIZ=0
"RTN","ECXTRANS",117,0)
 ;quit if user stopped task
"RTN","ECXTRANS",118,0)
 I $$S^%ZTLOAD D CLEAN Q
"RTN","ECXTRANS",119,0)
 ;generate mailman messages to aac
"RTN","ECXTRANS",120,0)
 S ECXLNCNT=9,(ECXXMZ,STRCNT)=0,STR=""
"RTN","ECXTRANS",121,0)
 F ECMS=1:1:ECMSN D
"RTN","ECXTRANS",122,0)
 .D SEND(.ECXXMZ)
"RTN","ECXTRANS",123,0)
 .S STR=STR_$$RJ^XLFSTR(ECXXMZ,18," "),STRCNT=STRCNT+1 I STRCNT=4 D
"RTN","ECXTRANS",124,0)
 ..S ^TMP($J,"LOC",ECXLNCNT,0)=STR,ECXLNCNT=ECXLNCNT+1
"RTN","ECXTRANS",125,0)
 ..S STR="",STRCNT=0
"RTN","ECXTRANS",126,0)
 I STR]"" S ^TMP($J,"LOC",ECXLNCNT,0)=STR
"RTN","ECXTRANS",127,0)
 ;send msg to local dss grp
"RTN","ECXTRANS",128,0)
 D SENDLOC,CLEAN
"RTN","ECXTRANS",129,0)
 Q
"RTN","ECXTRANS",130,0)
 ;
"RTN","ECXTRANS",131,0)
SEND(ECXXMZ) ;send individual messages
"RTN","ECXTRANS",132,0)
 N ECXDD,DA,DIC,DIE,DINUM,X,Y,Z,XMDUZ,XMTEXT,XMSUB,XMY,XMZ
"RTN","ECXTRANS",133,0)
 S XMSUB="("_ECGRP_") "_ECINST_" - "_ECPACK_" DSS EXTRACT, MESSAGE "_ECMS_" OF "_ECMSN
"RTN","ECXTRANS",134,0)
 S XMDUZ="DSS SYSTEM",^TMP($J,ECMS,1,0)=ECHD(1)
"RTN","ECXTRANS",135,0)
 S XMY("XXX@Q-"_ECXQUEUE_".VA.GOV")=""
"RTN","ECXTRANS",136,0)
 ;Send extracts done at field offices to user instead of AAC
"RTN","ECXTRANS",137,0)
 S X=$G(^XMB("NETNAME"))
"RTN","ECXTRANS",138,0)
 F Y=1:1:$L(X,".") D
"RTN","ECXTRANS",139,0)
 .S Z=$P(X,".",Y)
"RTN","ECXTRANS",140,0)
 .I ($E(Z,1,3)="FO-")!($E(Z,1,4)="ISC-") D
"RTN","ECXTRANS",141,0)
 ..K XMY
"RTN","ECXTRANS",142,0)
 ..S XMY(DUZ)=""
"RTN","ECXTRANS",143,0)
 S XMTEXT="^TMP($J,ECMS,"
"RTN","ECXTRANS",144,0)
 D ^XMD
"RTN","ECXTRANS",145,0)
 S ECXXMZ=XMZ
"RTN","ECXTRANS",146,0)
 ;store msg# in extract log
"RTN","ECXTRANS",147,0)
 D FIELD^DID(727,301,"","SPECIFIER","ECXDD")
"RTN","ECXTRANS",148,0)
 S DA(1)=ECDA,DIC(0)="L",DIC("P")=ECXDD("SPECIFIER")
"RTN","ECXTRANS",149,0)
 S DIC="^ECX(727,"_DA(1)_",1,",X=XMZ,DINUM=X
"RTN","ECXTRANS",150,0)
 K DD,DO D FILE^DICN
"RTN","ECXTRANS",151,0)
 Q
"RTN","ECXTRANS",152,0)
 ;
"RTN","ECXTRANS",153,0)
SENDLOC ; send message to mail group 'DSS-ECGRP'
"RTN","ECXTRANS",154,0)
 S TIME=$P($$HTE^XLFDT($H),":",1,2)
"RTN","ECXTRANS",155,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTRANS",156,0)
 K XMY S XMY(DUZ)="",XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTRANS",157,0)
 S ^TMP($J,"LOC",1,0)="The DSS "_ECPACK_" ("_ECHEAD_") extract, #"_ECDA_","
"RTN","ECXTRANS",158,0)
 S ^TMP($J,"LOC",2,0)="was "_ECRE_"transmitted on "_$P(TIME,"@")_" at "_$P(TIME,"@",2)_". "
"RTN","ECXTRANS",159,0)
 S ^TMP($J,"LOC",3,0)=" "
"RTN","ECXTRANS",160,0)
 S ^TMP($J,"LOC",4,0)="Maximum number of Bytes (characters) per message: 131,000 "
"RTN","ECXTRANS",161,0)
 S ^TMP($J,"LOC",5,0)=" "
"RTN","ECXTRANS",162,0)
 S ^TMP($J,"LOC",6,0)="A total of "_ECRN_" records were written."
"RTN","ECXTRANS",163,0)
 S ^TMP($J,"LOC",7,0)="A total of "_ECMSN_" messages were sent."
"RTN","ECXTRANS",164,0)
 S ^TMP($J,"LOC",8,0)="    Message numbers :"
"RTN","ECXTRANS",165,0)
 S XMTEXT="^TMP($J,""LOC"","
"RTN","ECXTRANS",166,0)
 D ^XMD
"RTN","ECXTRANS",167,0)
 S ^ECX(727,ECDA,"TR")=DT
"RTN","ECXTRANS",168,0)
 Q
"RTN","ECXTRANS",169,0)
 ;
"RTN","ECXTRANS",170,0)
CLEAN ;clean-up
"RTN","ECXTRANS",171,0)
 S ZTREQ="@"
"RTN","ECXTRANS",172,0)
 K ^TMP($J),^ECX(727,ECDA,"Q"),XMDUZ,XMTEXT,XMSUB,XMY,XMZ
"RTN","ECXTRANS",173,0)
 K ECDA,ECRE,ECTMP,ECCHK,ECDIVVR,ECXDIQ,ECXMAX,ECXMSG
"RTN","ECXTRANS",174,0)
 D ^ECXKILL
"RTN","ECXTRANS",175,0)
 I $$S^%ZTLOAD K ZTREQ S ZTSTOP=1
"RTN","ECXTRANS",176,0)
 Q
"RTN","ECXTRANS",177,0)
 ;
"RTN","ECXTRANS",178,0)
PAUSE ;pause screen
"RTN","ECXTRANS",179,0)
 S OUT=0
"RTN","ECXTRANS",180,0)
 I $E(IOST)="C" D
"RTN","ECXTRANS",181,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXTRANS",182,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXTRANS",183,0)
 I 'Y S OUT=1
"RTN","ECXTRANS",184,0)
 W !!
"RTN","ECXTRANS",185,0)
 Q
"RTN","ECXTREX")
0^46^B11293888
"RTN","ECXTREX",1,0)
ECXTREX ;BPFO/JRP - Queue DSS Fiscal Year Specific Extract;8-AUG-2003
"RTN","ECXTREX",2,0)
 ;;3.0;DSS EXTRACTS;**49**;Dec 22, 1997
"RTN","ECXTREX",3,0)
 ;
"RTN","ECXTREX",4,0)
EN ;Main entry point
"RTN","ECXTREX",5,0)
 W @IOF
"RTN","ECXTREX",6,0)
 N DIC,X,Y,DTOUT,DUOUT
"RTN","ECXTREX",7,0)
 W !,"****************************************************************"
"RTN","ECXTREX",8,0)
 W !,"*                                                              *"
"RTN","ECXTREX",9,0)
 W !,"* This option should be used with caution as it allows for the *"
"RTN","ECXTREX",10,0)
 W !,"* extraction of data using specified fiscal year logic.  This  *"
"RTN","ECXTREX",11,0)
 W !,"* gives the ability to extract fiscal year 200x data using     *"
"RTN","ECXTREX",12,0)
 W !,"* fiscal year 200(x+1) logic and vice versa.  Note that data   *"
"RTN","ECXTREX",13,0)
 W !,"* extracted via this method may or may not be transmittable to *"
"RTN","ECXTREX",14,0)
 W !,"* the DSS production queue at the Austin Automation Center.    *"
"RTN","ECXTREX",15,0)
 W !,"*                                                              *"
"RTN","ECXTREX",16,0)
 W !,"*--------------------------------------------------------------*"
"RTN","ECXTREX",17,0)
 W !,"*                                                              *"
"RTN","ECXTREX",18,0)
 W !,"* Note that this option does not update the last date used for *"
"RTN","ECXTREX",19,0)
 W !,"* the given extraction.  It also does not verify that the time *"
"RTN","ECXTREX",20,0)
 W !,"* frame selected is after the last date used for the extract.  *"
"RTN","ECXTREX",21,0)
 W !,"*                                                              *"
"RTN","ECXTREX",22,0)
 W !,"****************************************************************"
"RTN","ECXTREX",23,0)
 W !!
"RTN","ECXTREX",24,0)
 ;Pick extract to queue
"RTN","ECXTREX",25,0)
 S DIC="^ECX(727.1,"
"RTN","ECXTREX",26,0)
 S DIC(0)="AEQMZ"
"RTN","ECXTREX",27,0)
 S DIC("A")="Select DSS Extract to queue: "
"RTN","ECXTREX",28,0)
 S DIC("S")="I ('$P(^(0),U,12))&($P(^(0),U,8)'="""")&($G(^(7))'[""Inactive"")"
"RTN","ECXTREX",29,0)
 S DIC("W")="W ""("",$P(^(0),U,8),"")"""
"RTN","ECXTREX",30,0)
 D ^DIC
"RTN","ECXTREX",31,0)
 I ($D(DUOUT))!($D(DTOUT))!(Y<1) Q
"RTN","ECXTREX",32,0)
 N ECXRTN,ECXDA
"RTN","ECXTREX",33,0)
 S ECXDA=+Y
"RTN","ECXTREX",34,0)
 ;Get extraxt specific routine name
"RTN","ECXTREX",35,0)
 S ECXRTN=$G(^ECX(727.1,ECXDA,"ROU"))
"RTN","ECXTREX",36,0)
 I ECXRTN="" D  Q
"RTN","ECXTREX",37,0)
 .W !!,"Selected extract is not correctly defined in the EXTRACT"
"RTN","ECXTREX",38,0)
 .W !,"DEFINITIONS file (#727.1).  The ROUTINE field (#4) does not"
"RTN","ECXTREX",39,0)
 .W !,"have a value in it."
"RTN","ECXTREX",40,0)
 .W !
"RTN","ECXTREX",41,0)
 .D PAUSE
"RTN","ECXTREX",42,0)
 ;Get time frame for extract
"RTN","ECXTREX",43,0)
 N STRTDT,ENDDT,DIR,DIRUT,DIROUT,OUT,ECXDATES
"RTN","ECXTREX",44,0)
 S OUT=0 F  S (STRTDT,ENDDT)="" D  Q:OUT
"RTN","ECXTREX",45,0)
 .;Get start date (must be in past)
"RTN","ECXTREX",46,0)
 .S DIR(0)="DOA"
"RTN","ECXTREX",47,0)
 .S $P(DIR(0),"^",2)=":"_DT_":AEXP"
"RTN","ECXTREX",48,0)
 .S DIR("A")="Starting with Date: "
"RTN","ECXTREX",49,0)
 .D ^DIR
"RTN","ECXTREX",50,0)
 .I $D(DIROUT)!$D(DIRUT)!(Y="") S (STRTDT,ENDDT)="" S OUT=1 Q
"RTN","ECXTREX",51,0)
 .S STRTDT=Y
"RTN","ECXTREX",52,0)
 .K DIR
"RTN","ECXTREX",53,0)
 .;Get end date (must be in same month; must be in past)
"RTN","ECXTREX",54,0)
 .S DIR(0)="DOA"
"RTN","ECXTREX",55,0)
 .S X=$E(STRTDT,1,5)_"01"
"RTN","ECXTREX",56,0)
 .S X=$$FMADD^XLFDT(X,32)
"RTN","ECXTREX",57,0)
 .S X=$$FMADD^XLFDT(X,-($E(X,6,7)))
"RTN","ECXTREX",58,0)
 .I X>DT S X=DT
"RTN","ECXTREX",59,0)
 .S $P(DIR(0),"^",2)=STRTDT_":"_X_":AEXP"
"RTN","ECXTREX",60,0)
 .S DIR("A")="Ending with Date: "
"RTN","ECXTREX",61,0)
 .S DIR("B")=$$FMTE^XLFDT(X,"5D")
"RTN","ECXTREX",62,0)
 .D ^DIR
"RTN","ECXTREX",63,0)
 .I $D(DIROUT)!$D(DIRUT)!(Y="") S (STRTDT,ENDDT)=""  S OUT=1 Q
"RTN","ECXTREX",64,0)
 .S ENDDT=Y
"RTN","ECXTREX",65,0)
 .S OUT=1
"RTN","ECXTREX",66,0)
 Q:(STRTDT="")!(ENDDT="")
"RTN","ECXTREX",67,0)
 S ECXDATES=STRTDT_"^"_ENDDT_"^1"
"RTN","ECXTREX",68,0)
 ;Get extract logic to use
"RTN","ECXTREX",69,0)
 N ECXLOGIC
"RTN","ECXTREX",70,0)
 K DIR
"RTN","ECXTREX",71,0)
 S DIR("A")="Select fiscal year logic to use for extract"
"RTN","ECXTREX",72,0)
 S DIR(0)="SO^"
"RTN","ECXTREX",73,0)
 F X=2003,2004 D
"RTN","ECXTREX",74,0)
 .S Y=$E(X,5)
"RTN","ECXTREX",75,0)
 .S Y=$S((Y="")!(Y=" "):"",1:"Revision "_Y_" of ")
"RTN","ECXTREX",76,0)
 .S DIR(0)=DIR(0)_X_":"_Y_"Fiscal Year "_$E(X,1,4)_";"
"RTN","ECXTREX",77,0)
 D ^DIR
"RTN","ECXTREX",78,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","ECXTREX",79,0)
 S ECXLOGIC=Y
"RTN","ECXTREX",80,0)
 ;Queue extract
"RTN","ECXTREX",81,0)
 D @("BEG^"_ECXRTN)
"RTN","ECXTREX",82,0)
 Q
"RTN","ECXTREX",83,0)
PAUSE ;pause screen
"RTN","ECXTREX",84,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","ECXTREX",85,0)
 S DIR(0)="E"
"RTN","ECXTREX",86,0)
 W !!
"RTN","ECXTREX",87,0)
 D ^DIR
"RTN","ECXTREX",88,0)
 W !!
"RTN","ECXTREX",89,0)
 Q
"RTN","ECXTRT")
0^28^B48711867
"RTN","ECXTRT",1,0)
ECXTRT ;ALB/JAP,BIR/DMA,CML,PTD-Treating Specialty Change Extract ; [ 01/10/97  4:33 PM ]
"RTN","ECXTRT",2,0)
 ;;3.0;DSS EXTRACTS;**1,8,17,24,33,35,39,46,49**;Dec 22, 1997
"RTN","ECXTRT",3,0)
BEG ;entry point from option
"RTN","ECXTRT",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXTRT",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXTRT",6,0)
 Q
"RTN","ECXTRT",7,0)
 ;
"RTN","ECXTRT",8,0)
START ; start package specific extract
"RTN","ECXTRT",9,0)
 N LOC,SPC,TRT,WRD
"RTN","ECXTRT",10,0)
 S QFLG=0
"RTN","ECXTRT",11,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXTRT",12,0)
 S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXTRT",13,0)
 K ^TMP($J,"ECXTMP") S TRT=0
"RTN","ECXTRT",14,0)
 F  S TRT=$O(^DIC(45.7,TRT)) Q:+TRT=0  S SPC=$P(^DIC(45.7,TRT,0),U,2),^TMP($J,"ECXTMP",TRT)=SPC
"RTN","ECXTRT",15,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXTRT",16,0)
 ;loop through type 6 movements to get treating specialty and provider changes
"RTN","ECXTRT",17,0)
 F  S ECD=$O(^DGPM("ATT6",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)!(QFLG)  F  S ECDA=$O(^DGPM("ATT6",ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXTRT",18,0)
 .I $D(^DGPM(ECDA,0)) S EC=^(0),ECXDFN=+$P(EC,U,3) D  Q:QFLG
"RTN","ECXTRT",19,0)
 ..S ECXMVD1=$P(EC,U),WRD=$P(EC,U,6)
"RTN","ECXTRT",20,0)
 ..;
"RTN","ECXTRT",21,0)
 ..;- Call sets ECXA (In/Out indicator)
"RTN","ECXTRT",22,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXMVD1,"1;",13)
"RTN","ECXTRT",23,0)
 ..S ECMT=$P(EC,U,18),ECXADM=$P(EC,U,14),ECXADT=$P($G(^DGPM(ECXADM,0)),U)
"RTN","ECXTRT",24,0)
 ..;skip the record if its the admission treat. spec. change for this episode of care
"RTN","ECXTRT",25,0)
 ..Q:ECXADM=$P(EC,U,24)
"RTN","ECXTRT",26,0)
 ..S (ECXLOS,ECXLOSA,ECXLOSP)="" S ECXDSSD=""
"RTN","ECXTRT",27,0)
 ..K LOC D SETLOC(ECXDFN,ECXADM,ECPRO,.LOC)
"RTN","ECXTRT",28,0)
 ..;get data for current (new) ts movement
"RTN","ECXTRT",29,0)
 ..S ECD1=9999999.9999999-ECXMVD1
"RTN","ECXTRT",30,0)
 ..D FINDLOC(ECD1,.LOC,.ECXSPCN,.ECXPRVN,.ECXATTN,.ECXMOVN,.ECXTRTN)
"RTN","ECXTRT",31,0)
 ..Q:ECXSPCN=""
"RTN","ECXTRT",32,0)
 ..S ECD2=$O(LOC(ECD1)) Q:ECD2=""
"RTN","ECXTRT",33,0)
 ..S ECXMVD2=9999999.9999999-ECD2
"RTN","ECXTRT",34,0)
 ..;get data for previous (losing) ts movement
"RTN","ECXTRT",35,0)
 ..D FINDLOC(ECD2,.LOC,.ECXSPCL,.ECXPRVL,.ECXATTL,.ECXMOVL,.ECXTRTL)
"RTN","ECXTRT",36,0)
 ..;if ts has changed, find los on losing ts
"RTN","ECXTRT",37,0)
 ..D:ECXTRTL'=ECXTRTN PREVTRT^ECXTRT1(.LOC,ECD1,ECD2,ECXTRTL,.ECXLOS)
"RTN","ECXTRT",38,0)
 ..;whether ts has changed or not, see if primary provider has changed
"RTN","ECXTRT",39,0)
 ..;dont bother if there's no data on current primary provider or no change in provider
"RTN","ECXTRT",40,0)
 ..D:(ECXPRVN'="")&(ECXPRVN'=ECXPRVL) PREVPRV^ECXTRT1(.LOC,ECD1,ECXPRVN,ECD2,.ECXPRVL,.ECXLOSP)
"RTN","ECXTRT",41,0)
 ..;whether ts has changed or not, see if attending physician has changed
"RTN","ECXTRT",42,0)
 ..;dont bother if theres no data on current attending physician or no change in attending
"RTN","ECXTRT",43,0)
 ..D:(ECXATTN'="")&(ECXATTN'=ECXATTL) PREVATT^ECXTRT1(.LOC,ECD1,ECXATTN,ECD2,.ECXATTL,.ECXLOSA)
"RTN","ECXTRT",44,0)
 ..S ECXDATE=$$ECXDATE^ECXUTL(ECXMVD1,ECXYM),ECXTIME=$$ECXTIME^ECXUTL(ECXMVD1)
"RTN","ECXTRT",45,0)
 ..S ECXADMDT=$$ECXDATE^ECXUTL(ECXADT,ECXYM),ECXADMTM=$$ECXTIME^ECXUTL(ECXADT),ECXDCDT=""
"RTN","ECXTRT",46,0)
 ..;- Production Division
"RTN","ECXTRT",47,0)
 ..S ECXPDIV=""
"RTN","ECXTRT",48,0)
 ..I ECXLOGIC>2003 S ECXPDIV=$S(WRD="":"",1:$$NPDIV(WRD))
"RTN","ECXTRT",49,0)
 ..S (ECXALNPI,ECXANNPI,ECXPLNPI,ECXPNNPI)=""
"RTN","ECXTRT",50,0)
 ..;
"RTN","ECXTRT",51,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXTRT",52,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXTRT",53,0)
 ..;
"RTN","ECXTRT",54,0)
 ..;- Chg outpat with movemnt/discharge to inpat (to comply w/existing business rule)
"RTN","ECXTRT",55,0)
 ..I ECXA="O"&(ECXOBS="NO")&(ECXMVD1) S ECXA="I"
"RTN","ECXTRT",56,0)
 ..;
"RTN","ECXTRT",57,0)
 ..;- If no encounter number, don't file record
"RTN","ECXTRT",58,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADT,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXTRT",59,0)
 ..D:ECXENC'="" FILE
"RTN","ECXTRT",60,0)
 ;for nhcu episodes with intervening asih stays, the los calculated here is not accurate,
"RTN","ECXTRT",61,0)
 ;but it never has been; this is best solution within current extract framework;
"RTN","ECXTRT",62,0)
 ;at discharge the los calculated for nhcu apisodes will be the los since admission w/o asih los subtracted;
"RTN","ECXTRT",63,0)
 ;
"RTN","ECXTRT",64,0)
 ;loop through discharges to get last treating specialty
"RTN","ECXTRT",65,0)
 S ECD=ECSD1
"RTN","ECXTRT",66,0)
 F  S ECD=$O(^DGPM("ATT3",ECD)),ECDA=0 Q:'ECD  Q:ECD>ECED  F  S ECDA=$O(^DGPM("ATT3",ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXTRT",67,0)
 .I $D(^DGPM(ECDA,0)) S EC=^(0),ECXDFN=+$P(EC,U,3) D  Q:QFLG
"RTN","ECXTRT",68,0)
 ..S ECXMVD1=$P(EC,U),WRD=$P(EC,U,6)
"RTN","ECXTRT",69,0)
 ..S (ECXDATE,ECXDCDT)=$$ECXDATE^ECXUTL(ECXMVD1,ECXYM),ECXTIME=$$ECXTIME^ECXUTL(ECXMVD1)
"RTN","ECXTRT",70,0)
 ..I ECXDCDT'>0 S ECXDCDT=""
"RTN","ECXTRT",71,0)
 ..S ECMT=$P(EC,U,18),ECXADM=$P(EC,U,14),ECXADT=$P($G(^DGPM(ECXADM,0)),U,1)
"RTN","ECXTRT",72,0)
 ..S (ECXTRTN,ECXSPCN,ECXPRVN,ECXATTN)="" S (ECXLOS,ECXLOSA,ECXLOSP)="" S ECXDSSD=""
"RTN","ECXTRT",73,0)
 ..K LOC D SETLOC(ECXDFN,ECXADM,ECPRO,.LOC)
"RTN","ECXTRT",74,0)
 ..S ECD1=9999999.9999999-ECXMVD1
"RTN","ECXTRT",75,0)
 ..;get ts change just before d/c
"RTN","ECXTRT",76,0)
 ..S ECD2=$O(LOC(ECD1)),ECXMVD2=9999999.9999999-ECD2
"RTN","ECXTRT",77,0)
 ..D FINDLOC(ECD2,.LOC,.ECXSPCL,.ECXPRVL,.ECXATTL,.ECXMOVL,.ECXTRTL)
"RTN","ECXTRT",78,0)
 ..;
"RTN","ECXTRT",79,0)
 ..;- Call sets ECXA (In/Out indicator) using date before discharge
"RTN","ECXTRT",80,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXMVD2,"1;",13)
"RTN","ECXTRT",81,0)
 ..S ECXADMDT=$$ECXDATE^ECXUTL(ECXADT,ECXYM),ECXADMTM=$$ECXTIME^ECXUTL(ECXADT)
"RTN","ECXTRT",82,0)
 ..;if closest ts change is admission ts, cant go back any further
"RTN","ECXTRT",83,0)
 ..S TRT=$O(LOC(ECD2,0)),REC=$O(LOC(ECD2,TRT,0))
"RTN","ECXTRT",84,0)
 ..I REC=ECXADM D
"RTN","ECXTRT",85,0)
 ...S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOS=X
"RTN","ECXTRT",86,0)
 ...I ECXPRVL'="" S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOSP=X
"RTN","ECXTRT",87,0)
 ...I ECXATTL'="" S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOSA=X
"RTN","ECXTRT",88,0)
 ..;otherwise, need to find when change to last ts occurred
"RTN","ECXTRT",89,0)
 ..I REC'=ECXADM D
"RTN","ECXTRT",90,0)
 ...D PREVTRT^ECXTRT1(.LOC,ECD1,ECD2,ECXTRTL,.ECXLOS)
"RTN","ECXTRT",91,0)
 ...D PREVPRV^ECXTRT1(.LOC,ECD1,ECXPRVN,ECD2,.ECXPRVL,.ECXLOSP)
"RTN","ECXTRT",92,0)
 ...D PREVATT^ECXTRT1(.LOC,ECD1,ECXATTN,ECD2,.ECXATTL,.ECXLOSA)
"RTN","ECXTRT",93,0)
 ..S:ECXLOS>9999 ECXLOS=9999 S:ECXLOSA>9999 ECXLOSA=9999
"RTN","ECXTRT",94,0)
 ..S:ECXLOSP>9999 ECXLOSP=9999
"RTN","ECXTRT",95,0)
 ..;- Production Division
"RTN","ECXTRT",96,0)
 ..S ECXPDIV=""
"RTN","ECXTRT",97,0)
 ..I ECXLOGIC>2003 S ECXPDIV=$S(WRD="":"",1:$$NPDIV(WRD))
"RTN","ECXTRT",98,0)
 ..S (ECXALNPI,ECXANNPI,ECXPLNPI,ECXPNNPI)=""
"RTN","ECXTRT",99,0)
 ..;
"RTN","ECXTRT",100,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXTRT",101,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXTRT",102,0)
 ..;
"RTN","ECXTRT",103,0)
 ..;- Chg outpat with movemnt/discharge to inpat (to comply w/existing business rule)
"RTN","ECXTRT",104,0)
 ..I ECXA="O"&(ECXOBS="NO")&(ECXMVD1) S ECXA="I"
"RTN","ECXTRT",105,0)
 ..;
"RTN","ECXTRT",106,0)
 ..;- If no encounter number don't file record
"RTN","ECXTRT",107,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADT,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXTRT",108,0)
 ..D:ECXENC'="" FILE
"RTN","ECXTRT",109,0)
 D KPATDEM^ECXUTL2
"RTN","ECXTRT",110,0)
 Q
"RTN","ECXTRT",111,0)
 ;
"RTN","ECXTRT",112,0)
NPDIV(WRD) ;National Production Division
"RTN","ECXTRT",113,0)
 N DIV
"RTN","ECXTRT",114,0)
 S DIV=$$GET1^DIQ(42,WRD,.015,"I")
"RTN","ECXTRT",115,0)
 Q $S(DIV="":"",1:$$GETDIV^ECXDEPT(DIV))
"RTN","ECXTRT",116,0)
 ;
"RTN","ECXTRT",117,0)
SETLOC(ECXDFN,ECXADM,ECXPRO,ECXLOC) ;setup the local array from the ATS index
"RTN","ECXTRT",118,0)
 ; output
"RTN","ECXTRT",119,0)
 ; ECXLOC = local array (passed by reference)
"RTN","ECXTRT",120,0)
 ;
"RTN","ECXTRT",121,0)
 N SUB3,SUB4,SUB5,SPC,PRV,ATT,MOV
"RTN","ECXTRT",122,0)
 S SUB3=0
"RTN","ECXTRT",123,0)
 F  S SUB3=$O(^DGPM("ATS",ECXDFN,ECXADM,SUB3)) Q:SUB3=""  D
"RTN","ECXTRT",124,0)
 .S (SUB4,SUB5)=0
"RTN","ECXTRT",125,0)
 .S SUB4=$O(^DGPM("ATS",ECXDFN,ECXADM,SUB3,SUB4))
"RTN","ECXTRT",126,0)
 .S SUB5=$O(^DGPM("ATS",ECXDFN,ECXADM,SUB3,SUB4,SUB5))
"RTN","ECXTRT",127,0)
 .S ECXLOC(SUB3,SUB4,SUB5)="",SPC=$G(^TMP($J,"ECXTMP",SUB4))
"RTN","ECXTRT",128,0)
 .S DATA=$G(^DGPM(SUB5,0)),PRV=$P(DATA,U,8),ATT=$P(DATA,U,19)
"RTN","ECXTRT",129,0)
 .S MOV=$P(DATA,U,14)
"RTN","ECXTRT",130,0)
 .S:PRV]"" PRV=ECXPRO_PRV S:ATT]"" ATT=ECXPRO_ATT
"RTN","ECXTRT",131,0)
 .S ECXLOC(SUB3,SUB4,SUB5)=SPC_U_PRV_U_ATT_U_MOV
"RTN","ECXTRT",132,0)
 Q
"RTN","ECXTRT",133,0)
 ;
"RTN","ECXTRT",134,0)
FINDLOC(ECXTSD,ECXLOC,ECXSPC,ECXPRV,ECXATT,ECXMOV,ECXTRT) ;find local array node for current ts movement
"RTN","ECXTRT",135,0)
 ;   input
"RTN","ECXTRT",136,0)
 ;   ECXTSD = inverse date/time for current ts movement; required
"RTN","ECXTRT",137,0)
 ;   ECXLOC = local array; passed by reference; required
"RTN","ECXTRT",138,0)
 ;   output; data from record contained in MOVE
"RTN","ECXTRT",139,0)
 ;   ECXSPC = piece 1 of LOC (passed by reference)
"RTN","ECXTRT",140,0)
 ;   ECXPRV = piece 2 of LOC concatenated to PRO (passed by reference)
"RTN","ECXTRT",141,0)
 ;   ECXATT = piece 3 of LOC concatenated to PRO (passed by reference)
"RTN","ECXTRT",142,0)
 ;   ECXMOV = piece 4 of LOC (passed by reference)
"RTN","ECXTRT",143,0)
 ;   ECXTRT = pointer to file #45.7
"RTN","ECXTRT",144,0)
 ;
"RTN","ECXTRT",145,0)
 N SUB3,SUB4,SUB5,LOC
"RTN","ECXTRT",146,0)
 S (ECXSPC,ECXPRV,ECXATT,ECXMOV)=""
"RTN","ECXTRT",147,0)
 S SUB3=ECXTSD
"RTN","ECXTRT",148,0)
 I $D(ECXLOC(SUB3)) D
"RTN","ECXTRT",149,0)
 .S SUB4=$O(ECXLOC(SUB3,0)),SUB5=$O(ECXLOC(SUB3,SUB4,0))
"RTN","ECXTRT",150,0)
 .S LOC=ECXLOC(SUB3,SUB4,SUB5),ECXTRT=SUB4,ECXSPC=$P(LOC,U)
"RTN","ECXTRT",151,0)
 .S ECXPRV=$P(LOC,U,2),ECXATT=$P(LOC,U,3),ECXMOV=$P(LOC,U,4)
"RTN","ECXTRT",152,0)
 Q
"RTN","ECXTRT",153,0)
 ;
"RTN","ECXTRT",154,0)
FILE ;file the extract record
"RTN","ECXTRT",155,0)
 ;node0
"RTN","ECXTRT",156,0)
 ;^dfn^ssn^name^i/o (ECXA)^date^product^adm date^d/c date^
"RTN","ECXTRT",157,0)
 ;mov#^type^new ts^losing ts^losing ts los^
"RTN","ECXTRT",158,0)
 ;losing attending^movement type^time^adm time^new provider^
"RTN","ECXTRT",159,0)
 ;new attending^losing provider
"RTN","ECXTRT",160,0)
 ;node1
"RTN","ECXTRT",161,0)
 ;mpi^dss dept^losing attending npi^new provider npi^new attending npi^
"RTN","ECXTRT",162,0)
 ;losing provider npi^losing attending los^losing provider los^dom^
"RTN","ECXTRT",163,0)
 ;observ pat ind^encounter num
"RTN","ECXTRT",164,0)
 ;
"RTN","ECXTRT",165,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXTRT",166,0)
 S ECODE=EC7_U_EC23_U_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE_U_U
"RTN","ECXTRT",167,0)
 S ECODE=ECODE_ECXADMDT_U_ECXDCDT_U_ECDA_U_6_U_ECXSPCN_U_ECXSPCL_U
"RTN","ECXTRT",168,0)
 S ECODE=ECODE_ECXLOS_U_ECXATTL_U_ECMT_U_ECXTIME_U_ECXADMTM_U_ECXPRVN_U
"RTN","ECXTRT",169,0)
 S ECODE=ECODE_ECXATTN_U_ECXPRVL_U
"RTN","ECXTRT",170,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXALNPI_U_ECXPNNPI_U_ECXANNPI_U_ECXPLNPI_U
"RTN","ECXTRT",171,0)
 S ECODE1=ECODE1_ECXLOSA_U_ECXLOSP_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXPDIV
"RTN","ECXTRT",172,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXTRT",173,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXTRT",174,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXTRT",175,0)
 Q
"RTN","ECXTRT",176,0)
 ;
"RTN","ECXTRT",177,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXTRT",178,0)
 S ECHEAD="TRT"
"RTN","ECXTRT",179,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXTRT",180,0)
 Q
"RTN","ECXTRT",181,0)
 ;
"RTN","ECXTRT",182,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXTRT",183,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXTRT",184,0)
 Q
"RTN","ECXUCBOC")
0^34^B66849120
"RTN","ECXUCBOC",1,0)
ECXUCBOC ;ALB/TJL-CBOC Activity Report ; 10/20/03 11:19am
"RTN","ECXUCBOC",2,0)
 ;;3.0;DSS EXTRACTS;**49**;July 1, 2003
"RTN","ECXUCBOC",3,0)
 ;
"RTN","ECXUCBOC",4,0)
EN ; entry point
"RTN","ECXUCBOC",5,0)
 N X,Y,DATE,PG,COUNT,ECRUN,ECXDESC,ECXSAVE,ECXTL,YYYYMM,ECXJOB
"RTN","ECXUCBOC",6,0)
 N ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG
"RTN","ECXUCBOC",7,0)
 S (QFLG,COUNT,PG)=0
"RTN","ECXUCBOC",8,0)
 ; get today's date
"RTN","ECXUCBOC",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUCBOC",10,0)
 ;D BEGIN Q:QFLG
"RTN","ECXUCBOC",11,0)
 D SELECT Q:QFLG
"RTN","ECXUCBOC",12,0)
 S ECXDESC="CBOC Activity Report"
"RTN","ECXUCBOC",13,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUCBOC",14,0)
 W !!,"This report requires 80-column format."
"RTN","ECXUCBOC",15,0)
 D EN^XUTMDEVQ("PROCESS^ECXUCBOC",ECXDESC,.ECXSAVE)
"RTN","ECXUCBOC",16,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXUCBOC",17,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUCBOC",18,0)
 D HOME^%ZIS
"RTN","ECXUCBOC",19,0)
 D AUDIT^ECXKILL
"RTN","ECXUCBOC",20,0)
 Q
"RTN","ECXUCBOC",21,0)
 ;
"RTN","ECXUCBOC",22,0)
BEGIN ; display report description
"RTN","ECXUCBOC",23,0)
 W @IOF
"RTN","ECXUCBOC",24,0)
 W !,"This report prints a listing of all Clinical (CLI) records"
"RTN","ECXUCBOC",25,0)
 W !,"that have a Community Based Outpatient Clinic (CBOC) status of"
"RTN","ECXUCBOC",26,0)
 W !,"Y (=Yes).  Reports are grouped by Feeder Key, Division, and"
"RTN","ECXUCBOC",27,0)
 W !,"Clinic; detail lines include Patient Name, SSN, and Date of Visit."
"RTN","ECXUCBOC",28,0)
 W !,"Totals for unique SSNs and unique Dates of Visit will be displayed"
"RTN","ECXUCBOC",29,0)
 W !,"at the Clinic, Division, Feeder Key, and Report levels."
"RTN","ECXUCBOC",30,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUCBOC",31,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUCBOC",32,0)
 Q
"RTN","ECXUCBOC",33,0)
 ;
"RTN","ECXUCBOC",34,0)
SELECT ; user inputs for start date
"RTN","ECXUCBOC",35,0)
 N OUT,DONE,LIST,IEN,ECXFROM,ECXEND,ECXRUN,ECXCNT,ECXDIV,LN
"RTN","ECXUCBOC",36,0)
 W @IOF
"RTN","ECXUCBOC",37,0)
 S (PG,QFLG)=0,$P(LN,"-",80)=""
"RTN","ECXUCBOC",38,0)
 D NOW^%DTC S Y=$E(%,1,12) X ^DD("DD") S HDT=Y D LISTHDR
"RTN","ECXUCBOC",39,0)
 S IEN=0 F  S IEN=$O(^ECX(727,IEN)) Q:IEN=""  Q:QFLG  D:$Y+4>IOSL LISTHDR Q:QFLG  I $G(^ECX(727,IEN,"HEAD"))="CLI" D
"RTN","ECXUCBOC",40,0)
 .I $G(^ECX(727,IEN,"PURG")) Q
"RTN","ECXUCBOC",41,0)
 .I '$D(^ECX(727,IEN,0)) Q
"RTN","ECXUCBOC",42,0)
 .I $P(^ECX(727,IEN,0),U,4)<3030101 Q
"RTN","ECXUCBOC",43,0)
 .S ECXJOB=$P(^ECX(727,IEN,0),U)
"RTN","ECXUCBOC",44,0)
 .S ECXFROM=$TR($$FMTE^XLFDT($P(^ECX(727,IEN,0),U,4),"5DF")," ","0")
"RTN","ECXUCBOC",45,0)
 .S ECXEND=$TR($$FMTE^XLFDT($P(^ECX(727,IEN,0),U,5),"5DF")," ","0")
"RTN","ECXUCBOC",46,0)
 .S ECXRUN=$TR($$FMTE^XLFDT($P(^ECX(727,IEN,0),U,2),"5DF")," ","0")
"RTN","ECXUCBOC",47,0)
 .S ECXCNT=$P(^ECX(727,IEN,0),U,6)
"RTN","ECXUCBOC",48,0)
 .S ECXDIV=$P($G(^ECX(727,IEN,"DIV")),U) I ECXDIV D
"RTN","ECXUCBOC",49,0)
 ..S DA=ECXDIV,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXUCBOC",50,0)
 ..D EN^DIQ1 S ECXDIV=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXUCBOC",51,0)
 .D:$Y+3>IOSL LISTHDR Q:QFLG
"RTN","ECXUCBOC",52,0)
 .W !?4,ECXJOB,?14,ECXRUN,?28,$J(ECXCNT,9),?41,ECXFROM," - ",ECXEND,?71,ECXDIV
"RTN","ECXUCBOC",53,0)
 .S LIST(ECXJOB)=1
"RTN","ECXUCBOC",54,0)
 S LO=$O(LIST(0)),HI=$O(LIST(" "),-1)
"RTN","ECXUCBOC",55,0)
 S DIR(0)="L^"_LO_":"_HI_"",DIR("A")="Create the CBOC Activity Report for the following extract"
"RTN","ECXUCBOC",56,0)
 W ! D ^DIR K DIR I $D(DIRUT) K LIST S QFLG=1 Q
"RTN","ECXUCBOC",57,0)
 S JJ=0,Y=","_Y
"RTN","ECXUCBOC",58,0)
 F  S JJ=$O(LIST(JJ)) Q:'JJ  S JZ=","_JJ_"," I Y'[JZ K LIST(JJ)
"RTN","ECXUCBOC",59,0)
 I '$D(LIST) W !!,"Invalid choice.  Please try again." S DIR(0)="E" W ! D ^DIR K DIR D  Q:QFLG  G SELECT
"RTN","ECXUCBOC",60,0)
 .I 'Y S QFLG=1
"RTN","ECXUCBOC",61,0)
 S ECXJOB=X
"RTN","ECXUCBOC",62,0)
 S Y=$P(^ECX(727,ECXJOB,0),U,4) D DD^%DT
"RTN","ECXUCBOC",63,0)
 S ECSTART=$P(Y," ")_$P(Y,",",2)
"RTN","ECXUCBOC",64,0)
 Q
"RTN","ECXUCBOC",65,0)
 ;
"RTN","ECXUCBOC",66,0)
LISTHDR ;
"RTN","ECXUCBOC",67,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUCBOC",68,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUCBOC",69,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"Selectable Clinic Extracts for CBOC Activity Report",?72,"Page: ",PG
"RTN","ECXUCBOC",70,0)
 W !!,"Extract #",?15,"Run Date",?28,"Rec Count",?42,"Date Range of Extract",?68,"Division",!,LN
"RTN","ECXUCBOC",71,0)
 Q
"RTN","ECXUCBOC",72,0)
 ;
"RTN","ECXUCBOC",73,0)
PROCESS ; entry point for queued report
"RTN","ECXUCBOC",74,0)
 N ECXD,QFLG,PG,RECDA,LN,COUNT
"RTN","ECXUCBOC",75,0)
 N FKEY,DIV,CLIN,SSN,DFN,VDATE,KEY
"RTN","ECXUCBOC",76,0)
 N TSSN,FSSN,DSSN,CSSN,TVISIT,FVISIT,DVISIT,CVISIT
"RTN","ECXUCBOC",77,0)
 N OLDFKEY,OLDDIV,OLDCLIN,OLDSSN,OLDDFN,OLDVDATE,OLDKEY,HEADKEY
"RTN","ECXUCBOC",78,0)
 S (QFLG,COUNT,PG)=0,ZTREQ="@",ECXD="-",$P(LN,"-",80)=""
"RTN","ECXUCBOC",79,0)
 K ^TMP($J)
"RTN","ECXUCBOC",80,0)
 W @IOF
"RTN","ECXUCBOC",81,0)
 ;
"RTN","ECXUCBOC",82,0)
 ; set report created indicator
"RTN","ECXUCBOC",83,0)
 K DA,DIC,DD,DO
"RTN","ECXUCBOC",84,0)
 S DA(1)=1
"RTN","ECXUCBOC",85,0)
 I '$D(^ECX(728,DA(1),"CBOC","B",ECXJOB)) D
"RTN","ECXUCBOC",86,0)
 .S DLAYGO=728,DIC(0)="L",DIC("P")=$P(^DD(728,68,0),U,2)
"RTN","ECXUCBOC",87,0)
 .S DIC="^ECX(728,"_DA(1)_",""CBOC"",",X=ECXJOB
"RTN","ECXUCBOC",88,0)
 .D FILE^DICN
"RTN","ECXUCBOC",89,0)
 ;
"RTN","ECXUCBOC",90,0)
 I $O(^ECX(727.827,"AC",ECXJOB,0))="" D  Q
"RTN","ECXUCBOC",91,0)
 .W !,"No extract records exist for the selected extract."
"RTN","ECXUCBOC",92,0)
 S RECDA=0
"RTN","ECXUCBOC",93,0)
 F  S RECDA=$O(^ECX(727.827,"AC",ECXJOB,RECDA)) Q:'RECDA  D ISCBOC
"RTN","ECXUCBOC",94,0)
 ;
"RTN","ECXUCBOC",95,0)
 I '$D(^TMP($J)) W !,"No records were found with a CBOC Indicator value of ""Y""." S QFLG=1 Q
"RTN","ECXUCBOC",96,0)
 ;
"RTN","ECXUCBOC",97,0)
 S (TSSN,FSSN,DSSN,CSSN,TVISIT,FVISIT,DVISIT,CVISIT)=0
"RTN","ECXUCBOC",98,0)
 S RECDA=$O(^TMP($J,"AKEY",""))
"RTN","ECXUCBOC",99,0)
 S HEADKEY=RECDA
"RTN","ECXUCBOC",100,0)
 D HEADER Q:QFLG  D DETAIL Q:QFLG  D INCVIS D INCSSN D SETOLD
"RTN","ECXUCBOC",101,0)
 ;
"RTN","ECXUCBOC",102,0)
 ; process all CBOC records
"RTN","ECXUCBOC",103,0)
 F  S RECDA=$O(^TMP($J,"AKEY",RECDA)) Q:RECDA=""  D  Q:QFLG
"RTN","ECXUCBOC",104,0)
 .S HEADKEY=OLDKEY
"RTN","ECXUCBOC",105,0)
 .; key fields match, so print detail record and increment total(s)
"RTN","ECXUCBOC",106,0)
 .I $P(RECDA,ECXD,1,3)=OLDKEY D  Q
"RTN","ECXUCBOC",107,0)
 ..D DETAIL Q:QFLG
"RTN","ECXUCBOC",108,0)
 ..D INCVIS
"RTN","ECXUCBOC",109,0)
 ..S SSN=$P(RECDA,ECXD,4)
"RTN","ECXUCBOC",110,0)
 ..I '$D(^TMP($J,"C",OLDCLIN,SSN)) D INCSSN S OLDSSN=SSN
"RTN","ECXUCBOC",111,0)
 .;
"RTN","ECXUCBOC",112,0)
 .; if fkey changed, print "C","D", and "F" totals
"RTN","ECXUCBOC",113,0)
 .I $P(RECDA,ECXD)'=OLDFKEY D  Q:QFLG
"RTN","ECXUCBOC",114,0)
 ..D CLINTOT Q:QFLG  D DIVTOT Q:QFLG  D FKEYTOT Q:QFLG
"RTN","ECXUCBOC",115,0)
 .E  D  Q:QFLG
"RTN","ECXUCBOC",116,0)
 ..I $P(RECDA,ECXD,2)'=OLDDIV D
"RTN","ECXUCBOC",117,0)
 ...D CLINTOT Q:QFLG  D DIVTOT Q:QFLG
"RTN","ECXUCBOC",118,0)
 ..E  D CLINTOT Q:QFLG
"RTN","ECXUCBOC",119,0)
 .;
"RTN","ECXUCBOC",120,0)
 .; something changed, so print subheader and detail line
"RTN","ECXUCBOC",121,0)
 .Q:QFLG  S HEADKEY=RECDA
"RTN","ECXUCBOC",122,0)
 .D HEADER2 Q:QFLG
"RTN","ECXUCBOC",123,0)
 .D DETAIL Q:QFLG
"RTN","ECXUCBOC",124,0)
 .D INCVIS
"RTN","ECXUCBOC",125,0)
 .D INCSSN
"RTN","ECXUCBOC",126,0)
 .D SETOLD
"RTN","ECXUCBOC",127,0)
 .Q
"RTN","ECXUCBOC",128,0)
 Q:QFLG
"RTN","ECXUCBOC",129,0)
 ; print totals for clinic, division, feeder key, and grand totals
"RTN","ECXUCBOC",130,0)
 S HEADKEY=OLDKEY
"RTN","ECXUCBOC",131,0)
 D CLINTOT Q:QFLG
"RTN","ECXUCBOC",132,0)
 D DIVTOT Q:QFLG
"RTN","ECXUCBOC",133,0)
 D FKEYTOT Q:QFLG
"RTN","ECXUCBOC",134,0)
 D GTOTAL Q:QFLG
"RTN","ECXUCBOC",135,0)
 Q
"RTN","ECXUCBOC",136,0)
 ;
"RTN","ECXUCBOC",137,0)
ISCBOC ;
"RTN","ECXUCBOC",138,0)
 I $P(^ECX(727.827,RECDA,2),U,15)="Y" D SETKEY
"RTN","ECXUCBOC",139,0)
 Q
"RTN","ECXUCBOC",140,0)
 ;
"RTN","ECXUCBOC",141,0)
INCVIS ;
"RTN","ECXUCBOC",142,0)
 S TVISIT=TVISIT+1
"RTN","ECXUCBOC",143,0)
 S FVISIT=FVISIT+1
"RTN","ECXUCBOC",144,0)
 S DVISIT=DVISIT+1
"RTN","ECXUCBOC",145,0)
 S CVISIT=CVISIT+1
"RTN","ECXUCBOC",146,0)
 Q
"RTN","ECXUCBOC",147,0)
 ;
"RTN","ECXUCBOC",148,0)
INCSSN ;
"RTN","ECXUCBOC",149,0)
 N ZSSN,ZF,ZD,ZC
"RTN","ECXUCBOC",150,0)
 S ZSSN=$P(RECDA,ECXD,4)
"RTN","ECXUCBOC",151,0)
 S ZF=$P(RECDA,ECXD,1)
"RTN","ECXUCBOC",152,0)
 S ZD=$P(RECDA,ECXD,2)
"RTN","ECXUCBOC",153,0)
 S ZC=$P(RECDA,ECXD,3)
"RTN","ECXUCBOC",154,0)
 I '$D(^TMP($J,"SSN",ZSSN)) S ^TMP($J,"SSN",ZSSN)="" S TSSN=TSSN+1
"RTN","ECXUCBOC",155,0)
 I '$D(^TMP($J,"F",ZF,ZSSN)) S ^TMP($J,"F",ZF,ZSSN)="" S FSSN=FSSN+1
"RTN","ECXUCBOC",156,0)
 I '$D(^TMP($J,"D",ZD,ZSSN)) S ^TMP($J,"D",ZD,ZSSN)="" S DSSN=DSSN+1
"RTN","ECXUCBOC",157,0)
 I '$D(^TMP($J,"C",ZC,ZSSN)) S ^TMP($J,"C",ZC,ZSSN)="" S CSSN=CSSN+1
"RTN","ECXUCBOC",158,0)
 Q
"RTN","ECXUCBOC",159,0)
 ;
"RTN","ECXUCBOC",160,0)
SETOLD ;
"RTN","ECXUCBOC",161,0)
 S OLDKEY=$P(RECDA,ECXD,1,3)
"RTN","ECXUCBOC",162,0)
 S OLDFKEY=$P(RECDA,ECXD)
"RTN","ECXUCBOC",163,0)
 S OLDDIV=$P(RECDA,ECXD,2)
"RTN","ECXUCBOC",164,0)
 S OLDCLIN=$P(RECDA,ECXD,3)
"RTN","ECXUCBOC",165,0)
 S OLDSSN=$P(RECDA,ECXD,4)
"RTN","ECXUCBOC",166,0)
 Q
"RTN","ECXUCBOC",167,0)
 ;
"RTN","ECXUCBOC",168,0)
SETKEY ;
"RTN","ECXUCBOC",169,0)
 N CLIN,DIV,FKEY,DFN,SSN,VDATE
"RTN","ECXUCBOC",170,0)
 S CLIN=$P(^ECX(727.827,RECDA,0),U,12)
"RTN","ECXUCBOC",171,0)
 S DIV=$P(^ECX(727.827,RECDA,2),U,8)
"RTN","ECXUCBOC",172,0)
 S FKEY=$P(^ECX(727.827,RECDA,0),U,10)
"RTN","ECXUCBOC",173,0)
 S DFN=$P(^ECX(727.827,RECDA,0),U,5)
"RTN","ECXUCBOC",174,0)
 S SSN=$P(^ECX(727.827,RECDA,0),U,6)
"RTN","ECXUCBOC",175,0)
 S VDATE=$P(^ECX(727.827,RECDA,0),U,9)_"."_$P(^ECX(727.827,RECDA,0),U,14)
"RTN","ECXUCBOC",176,0)
 S KEY=FKEY_ECXD_DIV_ECXD_CLIN_ECXD_SSN_ECXD_DFN_ECXD_VDATE
"RTN","ECXUCBOC",177,0)
 S ^TMP($J,"AKEY",KEY)=""
"RTN","ECXUCBOC",178,0)
 Q
"RTN","ECXUCBOC",179,0)
 ;
"RTN","ECXUCBOC",180,0)
DETAIL ; print detail line
"RTN","ECXUCBOC",181,0)
 N DFN,PTNAME,DISPDT,DISPTM
"RTN","ECXUCBOC",182,0)
 U IO
"RTN","ECXUCBOC",183,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUCBOC",184,0)
 S COUNT=COUNT+1
"RTN","ECXUCBOC",185,0)
 ;S QFLG=0
"RTN","ECXUCBOC",186,0)
 I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUCBOC",187,0)
 ; get patient name using DFN
"RTN","ECXUCBOC",188,0)
 S DFN=$P(RECDA,ECXD,5)
"RTN","ECXUCBOC",189,0)
 S PTNAME=$S(DFN'="":$P(^DPT(DFN,0),U),1:"")
"RTN","ECXUCBOC",190,0)
 S DISPDT=$P(RECDA,ECXD,6)
"RTN","ECXUCBOC",191,0)
 S DISPTM=$E(DISPDT,9,14)
"RTN","ECXUCBOC",192,0)
 S DISPDT=$E(DISPDT,1,4)-1700_$E(DISPDT,5,8)
"RTN","ECXUCBOC",193,0)
 S DISPDT=DISPDT_DISPTM
"RTN","ECXUCBOC",194,0)
 W !,PTNAME,?36,$P(RECDA,ECXD,4),?51,$$FMTE^XLFDT(DISPDT,1)
"RTN","ECXUCBOC",195,0)
 Q
"RTN","ECXUCBOC",196,0)
 ;
"RTN","ECXUCBOC",197,0)
CLINTOT ;
"RTN","ECXUCBOC",198,0)
 S COUNT=COUNT+2
"RTN","ECXUCBOC",199,0)
 I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUCBOC",200,0)
 W !!,?5,"Total Unique SSNs for Clinic:"
"RTN","ECXUCBOC",201,0)
 W ?35,$J(CSSN,10),?50,$J(CVISIT,10),?61,"Clinic Visits"
"RTN","ECXUCBOC",202,0)
 S (CSSN,CVISIT)=0 S OLDCLIN=$P(RECDA,ECXD,3) K ^TMP($J,"C")
"RTN","ECXUCBOC",203,0)
 Q
"RTN","ECXUCBOC",204,0)
 ;
"RTN","ECXUCBOC",205,0)
DIVTOT ;
"RTN","ECXUCBOC",206,0)
 S COUNT=COUNT+1
"RTN","ECXUCBOC",207,0)
 I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUCBOC",208,0)
 W !,?3,"Total Unique SSNs for Division:"
"RTN","ECXUCBOC",209,0)
 W ?35,$J(DSSN,10),?50,$J(DVISIT,10),?61,"Division Visits"
"RTN","ECXUCBOC",210,0)
 S (DSSN,DVISIT)=0 S OLDDIV=$P(RECDA,ECXD,2) K ^TMP($J,"D")
"RTN","ECXUCBOC",211,0)
 Q
"RTN","ECXUCBOC",212,0)
 ;
"RTN","ECXUCBOC",213,0)
FKEYTOT ;
"RTN","ECXUCBOC",214,0)
 S COUNT=COUNT+1
"RTN","ECXUCBOC",215,0)
 I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUCBOC",216,0)
 W !,?1,"Total Unique SSNs for Feeder Key:"
"RTN","ECXUCBOC",217,0)
 W ?35,$J(FSSN,10),?50,$J(FVISIT,10),?61,"Feeder Key Visits"
"RTN","ECXUCBOC",218,0)
 S (FSSN,FVISIT)=0 S OLDFKEY=$P(RECDA,ECXD) K ^TMP($J,"F")
"RTN","ECXUCBOC",219,0)
 Q
"RTN","ECXUCBOC",220,0)
 ;
"RTN","ECXUCBOC",221,0)
GTOTAL ;
"RTN","ECXUCBOC",222,0)
 S COUNT=COUNT+1
"RTN","ECXUCBOC",223,0)
 I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUCBOC",224,0)
 W !,"Total Unique SSNs (entire report):"
"RTN","ECXUCBOC",225,0)
 W ?35,$J(TSSN,10),?50,$J(TVISIT,10),?61,"Total Visits"
"RTN","ECXUCBOC",226,0)
 Q
"RTN","ECXUCBOC",227,0)
 ;
"RTN","ECXUCBOC",228,0)
CLOSE ;
"RTN","ECXUCBOC",229,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXUCBOC",230,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUCBOC",231,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUCBOC",232,0)
 Q
"RTN","ECXUCBOC",233,0)
 ;
"RTN","ECXUCBOC",234,0)
HEADER ;header and page control
"RTN","ECXUCBOC",235,0)
 D HEADER1 Q:QFLG
"RTN","ECXUCBOC",236,0)
 D HEADER2 Q:QFLG
"RTN","ECXUCBOC",237,0)
 Q
"RTN","ECXUCBOC",238,0)
HEADER1 ;header1 and page control
"RTN","ECXUCBOC",239,0)
 N SS,JJ
"RTN","ECXUCBOC",240,0)
 I $E(IOST)="C" D
"RTN","ECXUCBOC",241,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUCBOC",242,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUCBOC",243,0)
 Q:QFLG
"RTN","ECXUCBOC",244,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUCBOC",245,0)
 W !,"CBOC Activity Report"
"RTN","ECXUCBOC",246,0)
 W ?(73-$L(PG)),"Page: "_PG
"RTN","ECXUCBOC",247,0)
 W !,ECSTART,?50,"Report Run Date: "_ECRUN
"RTN","ECXUCBOC",248,0)
 Q
"RTN","ECXUCBOC",249,0)
 ;
"RTN","ECXUCBOC",250,0)
HEADER2 ;display whenever feeder key, division, or clinic changes
"RTN","ECXUCBOC",251,0)
 I $Y+8>IOSL D HEADER1 Q:QFLG
"RTN","ECXUCBOC",252,0)
 N CLINIC
"RTN","ECXUCBOC",253,0)
 S CLINIC=$$GET1^DIQ(44,$P($P(HEADKEY,ECXD,3),U),.01,)
"RTN","ECXUCBOC",254,0)
 W !!,"Feeder Key: ",$P(HEADKEY,ECXD)
"RTN","ECXUCBOC",255,0)
 W ?31,"Division: ",$P(HEADKEY,ECXD,2)
"RTN","ECXUCBOC",256,0)
 W ?51,"Clinic: ",$E(CLINIC,1,20)
"RTN","ECXUCBOC",257,0)
 W !!,"Patient",?39,"SSN",?51,"Visit Date/Time"
"RTN","ECXUCBOC",258,0)
 W !,LN
"RTN","ECXUCBOC",259,0)
 Q
"RTN","ECXUCPT")
0^39^B2891121
"RTN","ECXUCPT",1,0)
ECXUCPT ;ALB/TJL-CPT INQUIRY FOR MYSTERY FEEDER KEYS ; 10/15/03 2:12pm
"RTN","ECXUCPT",2,0)
 ;;3.0;DSS EXTRACTS;**49**;July 1, 2003
"RTN","ECXUCPT",3,0)
 ;
"RTN","ECXUCPT",4,0)
EN ; entry point
"RTN","ECXUCPT",5,0)
 N X,Y,DATE,ECRUN,QFLG
"RTN","ECXUCPT",6,0)
 S QFLG=0
"RTN","ECXUCPT",7,0)
 ; get today's date
"RTN","ECXUCPT",8,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUCPT",9,0)
 D BEGIN
"RTN","ECXUCPT",10,0)
 F  D SELECT W @IOF Q:QFLG
"RTN","ECXUCPT",11,0)
 Q
"RTN","ECXUCPT",12,0)
 ;
"RTN","ECXUCPT",13,0)
BEGIN ; display report description
"RTN","ECXUCPT",14,0)
 W @IOF
"RTN","ECXUCPT",15,0)
 W !,"This inquiry allows the user to select a CPT code, then displays"
"RTN","ECXUCPT",16,0)
 W !,"the Short Name, Category, and Description for the selected code."
"RTN","ECXUCPT",17,0)
 W !!
"RTN","ECXUCPT",18,0)
 Q
"RTN","ECXUCPT",19,0)
 ;
"RTN","ECXUCPT",20,0)
SELECT ; user inputs for CPT Code
"RTN","ECXUCPT",21,0)
 N OUT,DIC,X,Y,DIR,ECXARR,ECXERR,ECXIEN
"RTN","ECXUCPT",22,0)
 S DIC="^ICPT(",DIC(0)="AZEMQ" D ^DIC
"RTN","ECXUCPT",23,0)
 I Y<0 S QFLG=1 Q
"RTN","ECXUCPT",24,0)
 S ECXIEN=+Y
"RTN","ECXUCPT",25,0)
 D GETS^DIQ(81,ECXIEN,".01;2;3;50*","E","ECXARR","ECXERR")
"RTN","ECXUCPT",26,0)
 I $D(ECXERR) W !,"CPT Code Error." S QFLG=1 Q
"RTN","ECXUCPT",27,0)
 D PRINT
"RTN","ECXUCPT",28,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1
"RTN","ECXUCPT",29,0)
 Q
"RTN","ECXUCPT",30,0)
 ;
"RTN","ECXUCPT",31,0)
PRINT ; display results of inquiry
"RTN","ECXUCPT",32,0)
 N LN,DA,DESCDA
"RTN","ECXUCPT",33,0)
 S $P(LN,"-",80)=""
"RTN","ECXUCPT",34,0)
 W !!,"CPT Inquiry",?54,"Date: ",ECRUN,!,LN,!
"RTN","ECXUCPT",35,0)
 S DA=ECXIEN S DA=DA_","
"RTN","ECXUCPT",36,0)
 W !,"CPT Code: ",ECXARR(81,DA,.01,"E")
"RTN","ECXUCPT",37,0)
 W ?30,"Short Name: ",ECXARR(81,DA,2,"E")
"RTN","ECXUCPT",38,0)
 W !!,"Category: ",ECXARR(81,DA,3,"E")
"RTN","ECXUCPT",39,0)
 W !!,"Description: "
"RTN","ECXUCPT",40,0)
 F LN=1:1 S DESCDA=LN_","_DA  Q:'$D(ECXARR(81.01,DESCDA,.01,"E"))  D
"RTN","ECXUCPT",41,0)
 .W ECXARR(81.01,DESCDA,.01,"E"),!
"RTN","ECXUCPT",42,0)
 W !!!
"RTN","ECXUCPT",43,0)
 Q
"RTN","ECXUCPT",44,0)
 ;
"RTN","ECXUD")
0^18^B39722973
"RTN","ECXUD",1,0)
ECXUD ;ALB/JAP,BIR/DMA,PTD-Extract from UNIT DOSE EXTRACT DATA File (#728.904) ; 8/28/02 2:08pm
"RTN","ECXUD",2,0)
 ;;3.0;DSS EXTRACTS;**10,8,24,33,39,46,49**;Dec 22, 1997
"RTN","ECXUD",3,0)
BEG ;entry point from option
"RTN","ECXUD",4,0)
 I '$O(^ECX(728.904,"A",0)) W !,"There are no unit dose orders to extract",!! R X:5 K X Q
"RTN","ECXUD",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXUD",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXUD",7,0)
 Q
"RTN","ECXUD",8,0)
 ;
"RTN","ECXUD",9,0)
START ;start package specific extract
"RTN","ECXUD",10,0)
 S QFLG=0
"RTN","ECXUD",11,0)
 S ECED=ECED+.3
"RTN","ECXUD",12,0)
 F ECD=ECSD1:0 S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:QFLG  D
"RTN","ECXUD",13,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:QFLG  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXUD",14,0)
 ..S DATA=^ECX(728.904,ECXJ,0),^(1)=$P(EC23,U,2),^ECX(728.904,"AC",$P(EC23,U,2),ECXJ)="" D STUFF
"RTN","ECXUD",15,0)
 K ^TMP($J,"ECXP")
"RTN","ECXUD",16,0)
 Q
"RTN","ECXUD",17,0)
 ;
"RTN","ECXUD",18,0)
STUFF ;get data
"RTN","ECXUD",19,0)
 N X,W,OK,P1,P3,PSTAT,PT
"RTN","ECXUD",20,0)
 S ECXDFN=$P(DATA,U,2)
"RTN","ECXUD",21,0)
 ;
"RTN","ECXUD",22,0)
 ;get patient specific data
"RTN","ECXUD",23,0)
 S ECXERR="" D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXUD",24,0)
 Q:ECXERR
"RTN","ECXUD",25,0)
 ;
"RTN","ECXUD",26,0)
 S ECXPRO=$P(DATA,U,7),ECXPRO=$E($P(ECXPRO,";",2))_$P(ECXPRO,";")
"RTN","ECXUD",27,0)
 S ECXPRNPI="",W=$P(DATA,U,6)
"RTN","ECXUD",28,0)
 S ECXDIV=$P($G(^DIC(42,+W,0)),U,11),ECXW=$P($G(^DIC(42,+W,44)),U)
"RTN","ECXUD",29,0)
 S ECXUDDT=$$ECXDATE^ECXUTL($P(DATA,U,3),ECXYM)
"RTN","ECXUD",30,0)
 S ECXUDTM=$E($P($P(DATA,U,3),".",2)_"000000",1,6)
"RTN","ECXUD",31,0)
 S ECXQTY=$P(DATA,U,5),ECXCOST=$P(DATA,U,8)
"RTN","ECXUD",32,0)
 S ECCAT=$P(^PSDRUG(+$P(DATA,U,4),0),U,2),ECINV=$P(^(0),U,3)
"RTN","ECXUD",33,0)
 S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXUD",34,0)
 S ECNDC=$P($G(^PSDRUG(+$P(DATA,U,4),2)),U,4),ECNDF=$G(^("ND"))
"RTN","ECXUD",35,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXUD",36,0)
 S P1=$P(ECNDF,U),P3=$P(ECNDF,U,3),X="PSNAPIS"
"RTN","ECXUD",37,0)
 X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXUD",38,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXUD",39,0)
 ; - Department and National Production Division
"RTN","ECXUD",40,0)
 ;- Use of DSS Department postponed [S ECXDSSD=$$UDP^ECXDEPT(ECXDIV)]
"RTN","ECXUD",41,0)
 S ECXDSSD=""
"RTN","ECXUD",42,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXUD",43,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXUD",44,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXUD",45,0)
 ;- Ordering Date, Ordering Stop Code
"RTN","ECXUD",46,0)
 ;S ECXORDDT=$P(DATA,U,9)
"RTN","ECXUD",47,0)
 S ECXORDDT=$TR($$FMTE^XLFDT($P(DATA,U,9),"7DF")," /","0")
"RTN","ECXUD",48,0)
 S ECXORDST="" I ECXA="O" D
"RTN","ECXUD",49,0)
 .I ECXOBS="NO" S ECXORDST=160
"RTN","ECXUD",50,0)
 .I ECXOBS="YES" S ECXORDST=$P($G(^ECX(727.831,+ECXTS,0)),U,6)
"RTN","ECXUD",51,0)
 ;Ordering Provider Person Class
"RTN","ECXUD",52,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXPRO,2,999),$P(DATA,U,9))
"RTN","ECXUD",53,0)
 ;BCMA data (place holder)
"RTN","ECXUD",54,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)=""
"RTN","ECXUD",55,0)
 ;- If no encounter number don't file record
"RTN","ECXUD",56,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,$P(DATA,U,3),ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXUD",57,0)
 D:ECXENC'="" FILE
"RTN","ECXUD",58,0)
 Q
"RTN","ECXUD",59,0)
 ;
"RTN","ECXUD",60,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get demographics from patient file
"RTN","ECXUD",61,0)
 ;get patient data if saved
"RTN","ECXUD",62,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXUD",63,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2)
"RTN","ECXUD",64,0)
 .S ECXMPI=$P(PT,U,3),ECXDOB=$P(PT,U,4)
"RTN","ECXUD",65,0)
 .S ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6)
"RTN","ECXUD",66,0)
 .S ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXUD",67,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12)
"RTN","ECXUD",68,0)
 .S ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXUD",69,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18)
"RTN","ECXUD",70,0)
 .S ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXUD",71,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24)
"RTN","ECXUD",72,0)
 .S ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXUD",73,0)
 ;set patient data
"RTN","ECXUD",74,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXUD",75,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXUD",76,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXUD",77,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXUD",78,0)
 .S ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXUD",79,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXUD",80,0)
 .S ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET")
"RTN","ECXUD",81,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT")
"RTN","ECXUD",82,0)
 .S ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXUD",83,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL")
"RTN","ECXUD",84,0)
 .S ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXUD",85,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXUD",86,0)
 .;get CNHU status
"RTN","ECXUD",87,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXUD",88,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXUD",89,0)
 .S (ECXCAT,ECXSTAT,ECXPRIOR)=""
"RTN","ECXUD",90,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",91,0)
 .; - Head and Neck Cancer Indicator
"RTN","ECXUD",92,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXUD",93,0)
 .; - Race and Ethnicity
"RTN","ECXUD",94,0)
 .S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXUD",95,0)
 .S ECXRC1=ECXPAT("RACE1")
"RTN","ECXUD",96,0)
 .;save for later
"RTN","ECXUD",97,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXUD",98,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXUD",99,0)
 ;
"RTN","ECXUD",100,0)
 ;get inpatient data
"RTN","ECXUD",101,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXUD",102,0)
 S ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),ECXDOM=$P(X,U,10)
"RTN","ECXUD",103,0)
 ;
"RTN","ECXUD",104,0)
 ;get primary care data
"RTN","ECXUD",105,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXUD",106,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXUD",107,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXUD",108,0)
 Q
"RTN","ECXUD",109,0)
 ;
"RTN","ECXUD",110,0)
FILE ;file record
"RTN","ECXUD",111,0)
 ;node0
"RTN","ECXUD",112,0)
 ;facility^dfn^ssn^name^in/out^day^drug category^quantity^ward^
"RTN","ECXUD",113,0)
 ;provider^cost^mov #^treat spec^ndc^new feeder key^investigational^
"RTN","ECXUD",114,0)
 ;udp time^adm date^adm time
"RTN","ECXUD",115,0)
 ;node1
"RTN","ECXUD",116,0)
 ;mpi^dss dept^provider npi^dom^observ pat ind^encounter num^
"RTN","ECXUD",117,0)
 ;prod div code^means tst^elig^dob^sex^state^county^zip+4^vet^
"RTN","ECXUD",118,0)
 ;period of svc^pow stat^pow loc^ir status^ao status^ao loc^
"RTN","ECXUD",119,0)
 ;purple heart ind.^mst status^cnh/sh status^enrollment loc^
"RTN","ECXUD",120,0)
 ;enrollment cat^enrollment status^enrollment priority^pc team^
"RTN","ECXUD",121,0)
 ;pc provider^pc provider npi^pc provider p.class^assoc. pc provider^
"RTN","ECXUD",122,0)
 ;assoc. pc provider npi^assoc. pc provider p.class
"RTN","ECXUD",123,0)
 ;node2
"RTN","ECXUD",124,0)
 ;ordering date^ordering stop code^head & neck cancer ind.^ethnicity^
"RTN","ECXUD",125,0)
 ;race1^bcma drug dispensed^bcma dose given^bcma unit of administration
"RTN","ECXUD",126,0)
 ;bcma icu flag^ordering provider person class
"RTN","ECXUD",127,0)
 N DA,DIK
"RTN","ECXUD",128,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXUD",129,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXUD",130,0)
 S ECODE=ECODE_ECXUDDT_U_ECCAT_U_ECXQTY_U_ECXW_U_ECXPRO_U_ECXCOST_U
"RTN","ECXUD",131,0)
 S ECODE=ECODE_ECXMN_U_ECXTS_U_ECNDC_U_ECNFC_U_ECINV_U_ECXUDTM_U
"RTN","ECXUD",132,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U
"RTN","ECXUD",133,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECXADM)_U
"RTN","ECXUD",134,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXPRNPI_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXUD",135,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U_ECXSEX_U
"RTN","ECXUD",136,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U
"RTN","ECXUD",137,0)
 S ECODE1=ECODE1_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXUD",138,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXCNHU_U_ECXENRL_U
"RTN","ECXUD",139,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECPTTM_U_ECPTPR_U
"RTN","ECXUD",140,0)
 S ECODE1=ECODE1_ECPTNPI_U_ECCLAS_U_ECASPR_U_ECASNPI_U_ECCLAS2_U
"RTN","ECXUD",141,0)
 S ECODE2=ECXORDDT_U_ECXORDST_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXUD",142,0)
 I ECXLOGIC>2003 S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXUD",143,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXUD",144,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXUD",145,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXUD",146,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXUD",147,0)
 Q
"RTN","ECXUD",148,0)
 ;
"RTN","ECXUD",149,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXUD",150,0)
 S ECHEAD="UDP"
"RTN","ECXUD",151,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXUD",152,0)
 Q
"RTN","ECXUD",153,0)
 ;
"RTN","ECXUD",154,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXUD",155,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXUD",156,0)
 Q
"RTN","ECXUPRO")
0^35^B23072481
"RTN","ECXUPRO",1,0)
ECXUPRO ;ALB/TJL-Prosthetic Extract Unusual Cost Report ; 7/1/03 1:00pm
"RTN","ECXUPRO",2,0)
 ;;3.0;DSS EXTRACTS;**49**;July 1, 2003
"RTN","ECXUPRO",3,0)
 ;
"RTN","ECXUPRO",4,0)
EN ; entry point
"RTN","ECXUPRO",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD
"RTN","ECXUPRO",6,0)
 N ECINST,ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG
"RTN","ECXUPRO",7,0)
 S QFLG=0
"RTN","ECXUPRO",8,0)
 S ECINST=$$PDIV^ECXPUTL
"RTN","ECXUPRO",9,0)
 ; get today's date
"RTN","ECXUPRO",10,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUPRO",11,0)
 D BEGIN Q:QFLG
"RTN","ECXUPRO",12,0)
 D SELECT Q:QFLG
"RTN","ECXUPRO",13,0)
 S ECXDESC="Prosthetic Extract Unusual Cost Report"
"RTN","ECXUPRO",14,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUPRO",15,0)
 W !!,"This report requires 132-column format."
"RTN","ECXUPRO",16,0)
 D EN^XUTMDEVQ("PROCESS^ECXUPRO",ECXDESC,.ECXSAVE)
"RTN","ECXUPRO",17,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXUPRO",18,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUPRO",19,0)
 D HOME^%ZIS
"RTN","ECXUPRO",20,0)
 D AUDIT^ECXKILL
"RTN","ECXUPRO",21,0)
 Q
"RTN","ECXUPRO",22,0)
 ;
"RTN","ECXUPRO",23,0)
BEGIN ; display report description
"RTN","ECXUPRO",24,0)
 W @IOF
"RTN","ECXUPRO",25,0)
 W !,"This report prints a listing of unusual costs that would be"
"RTN","ECXUPRO",26,0)
 W !,"generated by the Prosthetic extract (PRO) as determined by a"
"RTN","ECXUPRO",27,0)
 W !,"user-defined threshold value.  It should be run prior to the"
"RTN","ECXUPRO",28,0)
 W !,"generation of the actual extract(s) to identify and fix, as"
"RTN","ECXUPRO",29,0)
 W !,"necessary, any costs determined to be erroneous."
"RTN","ECXUPRO",30,0)
 W !!,"Unusual costs are those where the Cost of Transaction is"
"RTN","ECXUPRO",31,0)
 W !,"greater than the threshold value."
"RTN","ECXUPRO",32,0)
 W !!,"Note: The threshold can be set after a report is selected."
"RTN","ECXUPRO",33,0)
 W !!,"Run times for this report will vary depending upon the size of"
"RTN","ECXUPRO",34,0)
 W !,"the extract and could take as long as 30 minutes or more to"
"RTN","ECXUPRO",35,0)
 W !,"complete.  This report has no effect on the actual extracts and"
"RTN","ECXUPRO",36,0)
 W !,"can be run as needed."
"RTN","ECXUPRO",37,0)
 W !!,"The report is sorted by Feeder Key, then by descending Cost of"
"RTN","ECXUPRO",38,0)
 W !,"Transaction and SSN."
"RTN","ECXUPRO",39,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUPRO",40,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUPRO",41,0)
 Q
"RTN","ECXUPRO",42,0)
 ;
"RTN","ECXUPRO",43,0)
SELECT ; user inputs for threshold cost and date range
"RTN","ECXUPRO",44,0)
 N DONE,OUT
"RTN","ECXUPRO",45,0)
 ; allow user to set threshold cost
"RTN","ECXUPRO",46,0)
 S ECTHLD=500
"RTN","ECXUPRO",47,0)
 W !!,"The default threshold cost for the Prosthetic extract is $"_ECTHLD_".00."
"RTN","ECXUPRO",48,0)
 S DIR(0)="Y",DIR("A")="Would you like to change the threshold?",DIR("B")="NO" D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUPRO",49,0)
 I Y D
"RTN","ECXUPRO",50,0)
 .W !!,"Cost > threshold"
"RTN","ECXUPRO",51,0)
 .S DIR(0)="N^0:999999",DIR("A")="Enter the new threshold cost" D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1 Q
"RTN","ECXUPRO",52,0)
 ; get date range from user
"RTN","ECXUPRO",53,0)
 W !!,"Enter the date range for which you would like to scan the Prosthetic",!,"Extract records.",!
"RTN","ECXUPRO",54,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXUPRO",55,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUPRO",56,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUPRO",57,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXUPRO",58,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXUPRO",59,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUPRO",60,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUPRO",61,0)
 .I Y<ECSD D  Q
"RTN","ECXUPRO",62,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXUPRO",63,0)
 ..W !,"Please try again.",!!
"RTN","ECXUPRO",64,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXUPRO",65,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXUPRO",66,0)
 ..W !,"Please try again.",!!
"RTN","ECXUPRO",67,0)
 .S ECED=Y
"RTN","ECXUPRO",68,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXUPRO",69,0)
 .S DONE=1
"RTN","ECXUPRO",70,0)
 Q
"RTN","ECXUPRO",71,0)
 ;
"RTN","ECXUPRO",72,0)
PROCESS ; entry point for queued report
"RTN","ECXUPRO",73,0)
 S ZTREQ="@"
"RTN","ECXUPRO",74,0)
 S ECXERR=0 D EN^ECXUPRO1 Q:ECXERR
"RTN","ECXUPRO",75,0)
 S QFLG=0 D PRINT
"RTN","ECXUPRO",76,0)
 Q
"RTN","ECXUPRO",77,0)
 ;
"RTN","ECXUPRO",78,0)
PRINT ; process temp file and print report
"RTN","ECXUPRO",79,0)
 N PG,QFLG,GTOT,LN,COUNT,FKEY,COST,SSN,REC
"RTN","ECXUPRO",80,0)
 U IO
"RTN","ECXUPRO",81,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUPRO",82,0)
 S (PG,QFLG,GTOT)=0,$P(LN,"-",132)=""
"RTN","ECXUPRO",83,0)
 D HEADER Q:QFLG
"RTN","ECXUPRO",84,0)
 S COUNT=0,FKEY=""
"RTN","ECXUPRO",85,0)
 F  S FKEY=$O(^TMP($J,FKEY)) Q:FKEY=""!QFLG  D
"RTN","ECXUPRO",86,0)
 .S COST="" F  S COST=$O(^TMP($J,FKEY,COST)) Q:COST=""!QFLG  D
"RTN","ECXUPRO",87,0)
 ..S SSN="" F  S SSN=$O(^TMP($J,FKEY,COST,SSN)) Q:SSN=""!QFLG  S REC=^(SSN)  D
"RTN","ECXUPRO",88,0)
 ...S COUNT=COUNT+1
"RTN","ECXUPRO",89,0)
 ...I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUPRO",90,0)
 ...W !,$P(REC,U),?8,$P(REC,U,2),?21,$P(REC,U,3),?39,$P(REC,U,4),?70,$P(REC,U,5),?93,$$RJ^XLFSTR($P(REC,U,6),8),?110,$$RJ^XLFSTR($P(REC,U,7),11)
"RTN","ECXUPRO",91,0)
 Q:QFLG
"RTN","ECXUPRO",92,0)
 I COUNT=0 W !!,?8,"No unusual costs to report for this extract"
"RTN","ECXUPRO",93,0)
CLOSE ;
"RTN","ECXUPRO",94,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXUPRO",95,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUPRO",96,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUPRO",97,0)
 Q
"RTN","ECXUPRO",98,0)
 ;
"RTN","ECXUPRO",99,0)
HEADER ;header and page control
"RTN","ECXUPRO",100,0)
 N SS,JJ
"RTN","ECXUPRO",101,0)
 I $E(IOST)="C" D
"RTN","ECXUPRO",102,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUPRO",103,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUPRO",104,0)
 Q:QFLG
"RTN","ECXUPRO",105,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUPRO",106,0)
 W !,"Prosthetic Extract Unusual Cost Report",?124,"Page: "_PG
"RTN","ECXUPRO",107,0)
 W !,"Start Date: ",ECSTART,?97,"Report Run Date/Time: "_ECRUN
"RTN","ECXUPRO",108,0)
 W !,"  End Date: ",ECEND,?97,"     Threshold Value: ",ECTHLD
"RTN","ECXUPRO",109,0)
 W !!,?21,"Date of",?43,"PCE CPT/",?112,"Cost of"
"RTN","ECXUPRO",110,0)
 W !,"Name",?11,"SSN",?21,"Service",?36,"HCPCS CODE & Modifiers"
"RTN","ECXUPRO",111,0)
 W ?72,"Feeder Key",?93,"Quantity",?110,"Transaction"
"RTN","ECXUPRO",112,0)
 W !,LN,!
"RTN","ECXUPRO",113,0)
 Q
"RTN","ECXUPRO",114,0)
 ;
"RTN","ECXUPRO1")
0^36^B6816358
"RTN","ECXUPRO1",1,0)
ECXUPRO1 ;ALB/TJL-Prosthetics Extract Unusual Cost Report; 7/2/03 2:49pm
"RTN","ECXUPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**49**;Jul 2, 2003
"RTN","ECXUPRO1",3,0)
 ;
"RTN","ECXUPRO1",4,0)
EN ; entry point
"RTN","ECXUPRO1",5,0)
 N COUNT,ECDFN,ECD,PROCOST
"RTN","ECXUPRO1",6,0)
 K ^TMP($J)
"RTN","ECXUPRO1",7,0)
 S COUNT=0
"RTN","ECXUPRO1",8,0)
 S ECD=ECSD1,ECED=ECED+.3
"RTN","ECXUPRO1",9,0)
 D GETRECS
"RTN","ECXUPRO1",10,0)
 Q
"RTN","ECXUPRO1",11,0)
 ;
"RTN","ECXUPRO1",12,0)
GETRECS ; get records that are over the threshold
"RTN","ECXUPRO1",13,0)
 N PDA,SUBDA,PROLB,PRO0,PROFORM
"RTN","ECXUPRO1",14,0)
 N DIC,DR,DA,DIQ
"RTN","ECXUPRO1",15,0)
 S QFLG=0,ECXLNE=1,ECXED1=ECED+.9999
"RTN","ECXUPRO1",16,0)
 S PDA=ECSD1
"RTN","ECXUPRO1",17,0)
 F  S PDA=$O(^RMPR(660,"CT",PDA)) Q:(PDA>ECXED1)!('PDA)!(QFLG=1)  D
"RTN","ECXUPRO1",18,0)
 .S SUBDA=0
"RTN","ECXUPRO1",19,0)
 .F  S SUBDA=$O(^RMPR(660,"CT",PDA,SUBDA))  Q:('SUBDA)!(QFLG=1)  D
"RTN","ECXUPRO1",20,0)
 ..Q:'$D(^RMPR(660,SUBDA,0))
"RTN","ECXUPRO1",21,0)
 ..S PRO0=^RMPR(660,SUBDA,0)
"RTN","ECXUPRO1",22,0)
 ..S PROLB=$G(^RMPR(660,SUBDA,"LB"))
"RTN","ECXUPRO1",23,0)
 ..K ECXP S DIC="^RMPR(660,",DR=".02;11",DA=SUBDA,DIQ(0)="EI"
"RTN","ECXUPRO1",24,0)
 ..S DIQ="ECXP" D EN^DIQ1
"RTN","ECXUPRO1",25,0)
 ..S ECXDFN=$G(ECXP(660,SUBDA,.02,"I"))
"RTN","ECXUPRO1",26,0)
 ..S PROFORM=$G(ECXP(660,SUBDA,11,"E"))_U_$G(ECXP(660,SUBDA,11,"I"))
"RTN","ECXUPRO1",27,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,PDA)
"RTN","ECXUPRO1",28,0)
 ..Q:'$$NTEG^ECXPRO1(ECXDFN,.ECXLNE,SUBDA,PRO0,PROLB,ECINST,PROFORM)
"RTN","ECXUPRO1",29,0)
 ..S PROCOST=$P(PRO0,U,16)
"RTN","ECXUPRO1",30,0)
 ..S:PROFORM["-3" PROCOST=$P(PROLB,U,9)
"RTN","ECXUPRO1",31,0)
 ..S:($P(PROFORM,U,2)=11)!($P(PROFORM,U,2)=12) PROCOST=0
"RTN","ECXUPRO1",32,0)
 ..S:PROCOST="" PROCOST=0
"RTN","ECXUPRO1",33,0)
 ..S PROCOST=(PROCOST+.5)\1
"RTN","ECXUPRO1",34,0)
 ..S:PROCOST>999999 PROCOST=999999
"RTN","ECXUPRO1",35,0)
 ..I PROCOST>ECTHLD D FILE
"RTN","ECXUPRO1",36,0)
 Q
"RTN","ECXUPRO1",37,0)
FILE ; put records in temp file to print later
"RTN","ECXUPRO1",38,0)
 N OK,PROPAT,PRONAME,PROSSN,CPTCODE,ECXFEKEY,PROQTY
"RTN","ECXUPRO1",39,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECD,"."),"1;",.PROPAT)
"RTN","ECXUPRO1",40,0)
 I 'OK Q
"RTN","ECXUPRO1",41,0)
 S PRONAME=PROPAT("NAME")
"RTN","ECXUPRO1",42,0)
 S PROSSN=PROPAT("SSN")
"RTN","ECXUPRO1",43,0)
 S PRODAY=$E(PDA,4,5)_"/"_$E(PDA,6,7)_"/"_$E(PDA,2,3)
"RTN","ECXUPRO1",44,0)
 S CPTCODE=$E(ECXHCPCS,1,5)
"RTN","ECXUPRO1",45,0)
 I PROFORM["-3" F ECXLAB="LAB","ORD" D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB)
"RTN","ECXUPRO1",46,0)
 I PROFORM'["-3" S ECXLAB="NONL" D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB)
"RTN","ECXUPRO1",47,0)
 S PROQTY=$P(PRO0,U,7)
"RTN","ECXUPRO1",48,0)
 S:(+PROQTY=0) PROQTY=1
"RTN","ECXUPRO1",49,0)
 S PROQTY=$$RJ^XLFSTR(PROQTY,8,0)
"RTN","ECXUPRO1",50,0)
 S ^TMP($J,ECXFEKEY,-PROQTY,PROSSN)=PRONAME_U_PROSSN_U_PRODAY_U_ECXHCPCS_U_ECXFEKEY_U_PROQTY_U_"$"_$FNUMBER(PROCOST,",",2)
"RTN","ECXUPRO1",51,0)
 S COUNT=COUNT+1
"RTN","ECXUPRO1",52,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZSTOP,ECXERR)=1
"RTN","ECXUPRO1",53,0)
 Q
"RTN","ECXUPRO1",54,0)
EXIT S ECXERR=1 Q
"RTN","ECXUSUR")
0^37^B22897989
"RTN","ECXUSUR",1,0)
ECXUSUR ;ALB/TJL-Surgery Extract Unusual Volume Report ; 7/1/03 1:00pm
"RTN","ECXUSUR",2,0)
 ;;3.0;DSS EXTRACTS;**49**;July 1, 2003
"RTN","ECXUSUR",3,0)
 ;
"RTN","ECXUSUR",4,0)
EN ; entry point
"RTN","ECXUSUR",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD
"RTN","ECXUSUR",6,0)
 N ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG
"RTN","ECXUSUR",7,0)
 S QFLG=0
"RTN","ECXUSUR",8,0)
 ; get today's date
"RTN","ECXUSUR",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUSUR",10,0)
 D BEGIN Q:QFLG
"RTN","ECXUSUR",11,0)
 D SELECT Q:QFLG
"RTN","ECXUSUR",12,0)
 S ECXDESC="Surgery Extract Unusual Volume Report"
"RTN","ECXUSUR",13,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUSUR",14,0)
 W !!,"This report requires 132-column format."
"RTN","ECXUSUR",15,0)
 D EN^XUTMDEVQ("PROCESS^ECXUSUR",ECXDESC,.ECXSAVE)
"RTN","ECXUSUR",16,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXUSUR",17,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUSUR",18,0)
 D HOME^%ZIS
"RTN","ECXUSUR",19,0)
 D AUDIT^ECXKILL
"RTN","ECXUSUR",20,0)
 Q
"RTN","ECXUSUR",21,0)
 ;
"RTN","ECXUSUR",22,0)
BEGIN ; display report description
"RTN","ECXUSUR",23,0)
 W @IOF
"RTN","ECXUSUR",24,0)
 W !,"This report prints a listing of unusual volumes that would be"
"RTN","ECXUSUR",25,0)
 W !,"generated by the Surgery extract (SUR) as determined by a"
"RTN","ECXUSUR",26,0)
 W !,"user-defined threshold value.  It should be run prior to the"
"RTN","ECXUSUR",27,0)
 W !,"generation of the actual extract(s) to identify and fix, as"
"RTN","ECXUSUR",28,0)
 W !,"necessary, any volumes determined to be erroneous."
"RTN","ECXUSUR",29,0)
 W !!,"Unusual volumes are those where either the Operation Time,"
"RTN","ECXUSUR",30,0)
 W !,"Patient Time, or Anesthesia Time field is greater than the"
"RTN","ECXUSUR",31,0)
 W !,"threshold value."
"RTN","ECXUSUR",32,0)
 W !!,"Note: The threshold can be set after a report is selected."
"RTN","ECXUSUR",33,0)
 W !!,"Run times for this report will vary depending upon the size of"
"RTN","ECXUSUR",34,0)
 W !,"the extract and could take as long as 30 minutes or more to"
"RTN","ECXUSUR",35,0)
 W !,"complete.  This report has no effect on the actual extracts and"
"RTN","ECXUSUR",36,0)
 W !,"can be run as needed."
"RTN","ECXUSUR",37,0)
 W !!,"The report is sorted by descending Volume and Case Number."
"RTN","ECXUSUR",38,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUSUR",39,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUSUR",40,0)
 Q
"RTN","ECXUSUR",41,0)
 ;
"RTN","ECXUSUR",42,0)
SELECT ; user inputs for threshold volume and date range
"RTN","ECXUSUR",43,0)
 N DONE,OUT
"RTN","ECXUSUR",44,0)
 ; allow user to set threshold volume
"RTN","ECXUSUR",45,0)
 S ECTHLD=25
"RTN","ECXUSUR",46,0)
 W !!,"The default threshold volume for the Surgery extract is "_ECTHLD_"."
"RTN","ECXUSUR",47,0)
 W !,"The default threshold volume ("_ECTHLD_") equates to 6 hours."
"RTN","ECXUSUR",48,0)
 S DIR(0)="Y",DIR("A")="Would you like to change the threshold?",DIR("B")="NO" D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUSUR",49,0)
 I Y D
"RTN","ECXUSUR",50,0)
 .W !!,"Volume > threshold"
"RTN","ECXUSUR",51,0)
 .S DIR(0)="N^0:99",DIR("A")="Enter the new threshold volume" D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1 Q
"RTN","ECXUSUR",52,0)
 ; get date range from user
"RTN","ECXUSUR",53,0)
 W !!,"Enter the date range for which you would like to scan the"
"RTN","ECXUSUR",54,0)
 W !,"Surgery Extract records.",!
"RTN","ECXUSUR",55,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXUSUR",56,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUSUR",57,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUSUR",58,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXUSUR",59,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXUSUR",60,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUSUR",61,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUSUR",62,0)
 .I Y<ECSD D  Q
"RTN","ECXUSUR",63,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXUSUR",64,0)
 ..W !,"Please try again.",!!
"RTN","ECXUSUR",65,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXUSUR",66,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXUSUR",67,0)
 ..W !,"Please try again.",!!
"RTN","ECXUSUR",68,0)
 .S ECED=Y
"RTN","ECXUSUR",69,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXUSUR",70,0)
 .S DONE=1
"RTN","ECXUSUR",71,0)
 Q
"RTN","ECXUSUR",72,0)
 ;
"RTN","ECXUSUR",73,0)
PROCESS ; entry point for queued report
"RTN","ECXUSUR",74,0)
 S ZTREQ="@"
"RTN","ECXUSUR",75,0)
 S ECXERR=0 D EN^ECXUSUR1 Q:ECXERR
"RTN","ECXUSUR",76,0)
 S QFLG=0 D PRINT
"RTN","ECXUSUR",77,0)
 Q
"RTN","ECXUSUR",78,0)
 ;
"RTN","ECXUSUR",79,0)
PRINT ; process temp file and print report
"RTN","ECXUSUR",80,0)
 N PG,QFLG,GTOT,LN,COUNT,VOL,SUB,REC
"RTN","ECXUSUR",81,0)
 U IO
"RTN","ECXUSUR",82,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUSUR",83,0)
 S (PG,QFLG,GTOT,COUNT)=0,$P(LN,"-",132)=""
"RTN","ECXUSUR",84,0)
 D HEADER Q:QFLG
"RTN","ECXUSUR",85,0)
 S VOL=-999999 F  S VOL=$O(^TMP($J,VOL)) Q:VOL=""!QFLG  D
"RTN","ECXUSUR",86,0)
 .S SUB="" F  S SUB=$O(^TMP($J,VOL,SUB)) Q:SUB=""!QFLG  S REC=^(SUB)  D
"RTN","ECXUSUR",87,0)
 ..S COUNT=COUNT+1
"RTN","ECXUSUR",88,0)
 ..I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUSUR",89,0)
 ..W !,$P(REC,U),?8,$P(REC,U,2),?21,$P(REC,U,3),?34,$P(REC,U,4)
"RTN","ECXUSUR",90,0)
 ..W ?45,$P(REC,U,5),?70,$$RJ^XLFSTR($P(REC,U,6),4)
"RTN","ECXUSUR",91,0)
 ..W ?85,$$RJ^XLFSTR($P(REC,U,7),4),?100,$$RJ^XLFSTR($P(REC,U,8),4)
"RTN","ECXUSUR",92,0)
 Q:QFLG
"RTN","ECXUSUR",93,0)
 I COUNT=0 W !!,?8,"No unusual volumes to report for this extract"
"RTN","ECXUSUR",94,0)
CLOSE ;
"RTN","ECXUSUR",95,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXUSUR",96,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUSUR",97,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUSUR",98,0)
 Q
"RTN","ECXUSUR",99,0)
 ;
"RTN","ECXUSUR",100,0)
HEADER ;header and page control
"RTN","ECXUSUR",101,0)
 N SS,JJ
"RTN","ECXUSUR",102,0)
 I $E(IOST)="C" D
"RTN","ECXUSUR",103,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUSUR",104,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUSUR",105,0)
 Q:QFLG
"RTN","ECXUSUR",106,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUSUR",107,0)
 W !,"Surgery Extract Unusual Volume Report",?124,"Page: "_PG
"RTN","ECXUSUR",108,0)
 W !,"Start Date: ",ECSTART,?97,"Report Run Date/Time: "_ECRUN
"RTN","ECXUSUR",109,0)
 W !,"  End Date: ",ECEND,?97,"     Threshold Value: ",ECTHLD
"RTN","ECXUSUR",110,0)
 W !!,?35,"Case",?49,"Encounter",?68,"Patient",?82,"Operation",?97,"Anesthesia"
"RTN","ECXUSUR",111,0)
 W !,"Name",?11,"SSN",?23,"Day",?34,"Number",?51,"Number"
"RTN","ECXUSUR",112,0)
 W ?70,"Time",?85,"Time",?100,"Time"
"RTN","ECXUSUR",113,0)
 W !,LN,!
"RTN","ECXUSUR",114,0)
 Q
"RTN","ECXUSUR",115,0)
 ;
"RTN","ECXUSUR1")
0^38^B10773880
"RTN","ECXUSUR1",1,0)
ECXUSUR1 ;ALB/TJL-Surgery Extract Unusual Volume Report ; 7/1/03 9:00am
"RTN","ECXUSUR1",2,0)
 ;;3.0;DSS EXTRACTS;**49**;July 1, 2003
"RTN","ECXUSUR1",3,0)
EN ;
"RTN","ECXUSUR1",4,0)
 N ECHEAD,COUNT,TIMEDIF
"RTN","ECXUSUR1",5,0)
 S ECHEAD="SUR"
"RTN","ECXUSUR1",6,0)
 S (COUNT,QFLG)=0,ECED=ECED+.3,ECD=ECSD1
"RTN","ECXUSUR1",7,0)
 F  S ECD=$O(^SRF("AC",ECD)) Q:('ECD)!(ECD>ECED)!(QFLG)  D
"RTN","ECXUSUR1",8,0)
 .S ECD0=0
"RTN","ECXUSUR1",9,0)
 .F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXUSUR1",10,0)
 ..I $D(^SRF(ECD0,0)) S ECXDFN=+$P(^(0),U,1) D STUFF Q:QFLG
"RTN","ECXUSUR1",11,0)
 Q
"RTN","ECXUSUR1",12,0)
 ;
"RTN","ECXUSUR1",13,0)
STUFF ;gather data
"RTN","ECXUSUR1",14,0)
 N J,DATA1,DATA2,DATAOP,ECXNONL,ECXSTOP
"RTN","ECXUSUR1",15,0)
 S ECXDATE=ECD,ECXERR=0,ECXQ=""
"RTN","ECXUSUR1",16,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXDATE,"1;2;3;5;")
"RTN","ECXUSUR1",17,0)
 S EC0=^SRF(ECD0,0)
"RTN","ECXUSUR1",18,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:"")
"RTN","ECXUSUR1",19,0)
 S DATA2=$S($D(^SRF(ECD0,.2)):^(.2),1:"")
"RTN","ECXUSUR1",20,0)
 S DATAOP=$S($D(^SRF(ECD0,"OP")):^("OP"),1:"")
"RTN","ECXUSUR1",21,0)
 S ECNO=$G(^SRF(ECD0,"NON"))
"RTN","ECXUSUR1",22,0)
 ;get data
"RTN","ECXUSUR1",23,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXUSUR1",24,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0)
"RTN","ECXUSUR1",25,0)
 S:ECSS="000" ECSS="999"
"RTN","ECXUSUR1",26,0)
 ;look for non-OR
"RTN","ECXUSUR1",27,0)
 S (ECNT,ECNL,ECXNONL,ECXSTOP)=""
"RTN","ECXUSUR1",28,0)
 I $P(ECNO,U)="Y" D
"RTN","ECXUSUR1",29,0)
 .S A1=$P(ECNO,U,5)
"RTN","ECXUSUR1",30,0)
 .S A2=$P(ECNO,U,4)
"RTN","ECXUSUR1",31,0)
 .S TIME="##"
"RTN","ECXUSUR1",32,0)
 .D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXUSUR1",33,0)
 .S ECXNONL=+$P(ECNO,U,2)
"RTN","ECXUSUR1",34,0)
 .S ECNL=$P($G(^ECX(728.44,ECXNONL,0)),U,9)
"RTN","ECXUSUR1",35,0)
 .I ECNL="" S ECNL="UNKNOWN"
"RTN","ECXUSUR1",36,0)
 .;
"RTN","ECXUSUR1",37,0)
 .; Get DSS Stop Code to use in encounter number
"RTN","ECXUSUR1",38,0)
 .S ECXSTOP=$P($G(^ECX(728.44,ECXNONL,0)),U,4)
"RTN","ECXUSUR1",39,0)
 ;
"RTN","ECXUSUR1",40,0)
 ;retrieving anesthesia times first, then operation and patient
"RTN","ECXUSUR1",41,0)
 ;times, then storing in following order:
"RTN","ECXUSUR1",42,0)
 ;ecode0="patient time^operation time^anesthesia time"
"RTN","ECXUSUR1",43,0)
 S ECODE0=""
"RTN","ECXUSUR1",44,0)
 F J="1,4","2,3","10,12" D
"RTN","ECXUSUR1",45,0)
 .S A2=$P(DATA2,U,$P(J,","))
"RTN","ECXUSUR1",46,0)
 .S A1=$P(DATA2,U,$P(J,",",2))
"RTN","ECXUSUR1",47,0)
 .S TIME="##"
"RTN","ECXUSUR1",48,0)
 .I (A1&A2) D TIMEDIF(A1,A2) D
"RTN","ECXUSUR1",49,0)
 ..I +J'=2 D TIME
"RTN","ECXUSUR1",50,0)
 ..I +J=2 D  ;-Operation Time
"RTN","ECXUSUR1",51,0)
 ...S TIME=$TR($J(TIMEDIF,4,0)," ")
"RTN","ECXUSUR1",52,0)
 ...;I TIME<0 S TIME="###"
"RTN","ECXUSUR1",53,0)
 .S ECODE0=TIME_U_ECODE0 K TIME
"RTN","ECXUSUR1",54,0)
 ;
"RTN","ECXUSUR1",55,0)
 I ECNL]"" S $P(ECODE0,U,2)=ECNT
"RTN","ECXUSUR1",56,0)
 ;
"RTN","ECXUSUR1",57,0)
 N PIECE,FILE
"RTN","ECXUSUR1",58,0)
 S FILE="NO"
"RTN","ECXUSUR1",59,0)
 F PIECE=1,2,3 D
"RTN","ECXUSUR1",60,0)
 . I $P(ECODE0,U,PIECE)>ECTHLD S FILE="YES"
"RTN","ECXUSUR1",61,0)
 . I $P(ECODE0,U,PIECE)<0 S FILE="YES"
"RTN","ECXUSUR1",62,0)
 I FILE="YES" D FILE Q:ECXERR
"RTN","ECXUSUR1",63,0)
 Q
"RTN","ECXUSUR1",64,0)
 ;
"RTN","ECXUSUR1",65,0)
FILE ; Store unusual records for display later
"RTN","ECXUSUR1",66,0)
 N OK,SURPAT,SURNAME,SURSSN,SURDT,VOL
"RTN","ECXUSUR1",67,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECD,"."),"1;",.SURPAT)
"RTN","ECXUSUR1",68,0)
 I 'OK Q
"RTN","ECXUSUR1",69,0)
 S SURNAME=SURPAT("NAME")
"RTN","ECXUSUR1",70,0)
 S SURSSN=SURPAT("SSN")
"RTN","ECXUSUR1",71,0)
 S SURDT=$E(ECXDATE,4,5)_"/"_$E(ECXDATE,6,7)_"/"_$E(ECXDATE,2,3)
"RTN","ECXUSUR1",72,0)
 ;
"RTN","ECXUSUR1",73,0)
 ; Observation Patient Indicator (yes/no)
"RTN","ECXUSUR1",74,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECNL)
"RTN","ECXUSUR1",75,0)
 ;
"RTN","ECXUSUR1",76,0)
 ; If no encounter number don't file record
"RTN","ECXUSUR1",77,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXSTOP,ECSS) Q:ECXENC=""
"RTN","ECXUSUR1",78,0)
 ;
"RTN","ECXUSUR1",79,0)
 S VOL=$P(ECODE0,U)
"RTN","ECXUSUR1",80,0)
 I $P(ECODE0,U,2)>VOL S VOL=$P(ECODE0,U,2)
"RTN","ECXUSUR1",81,0)
 I $P(ECODE0,U,3)>VOL S VOL=$P(ECODE0,U,3)
"RTN","ECXUSUR1",82,0)
 S ^TMP($J,-VOL,-ECD0)=SURNAME_U_SURSSN_U_SURDT_U_ECD0_U_ECXENC_U_ECODE0
"RTN","ECXUSUR1",83,0)
 S COUNT=COUNT+1
"RTN","ECXUSUR1",84,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZSTOP,ECXERR)=1
"RTN","ECXUSUR1",85,0)
 Q
"RTN","ECXUSUR1",86,0)
 ;
"RTN","ECXUSUR1",87,0)
TIME ; given date/time get increment
"RTN","ECXUSUR1",88,0)
 N CON
"RTN","ECXUSUR1",89,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXUSUR1",90,0)
 D TIMEDIF(A1,A2)
"RTN","ECXUSUR1",91,0)
 I 'CON D
"RTN","ECXUSUR1",92,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXUSUR1",93,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXUSUR1",94,0)
 I CON D
"RTN","ECXUSUR1",95,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXUSUR1",96,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXUSUR1",97,0)
 ;S:TIME<0 TIME="###"
"RTN","ECXUSUR1",98,0)
 Q
"RTN","ECXUSUR1",99,0)
 ;
"RTN","ECXUSUR1",100,0)
TIMEDIF(START,FINISH) ; Set values to be compared, in seconds
"RTN","ECXUSUR1",101,0)
 ;
"RTN","ECXUSUR1",102,0)
 S TIMEDIF=$$FMDIFF^XLFDT(START,FINISH,2)/900
"RTN","ECXUSUR1",103,0)
 I (TIMEDIF>0)&(TIMEDIF<.5) S TIMEDIF=.5
"RTN","ECXUSUR1",104,0)
 Q
"RTN","ECXUSUR1",105,0)
 ;
"RTN","ECXUSUR1",106,0)
EXIT S ECXERR=1 Q
"RTN","ECXUTL1")
0^47^B8865457
"RTN","ECXUTL1",1,0)
ECXUTL1 ;ALB/GTS - Utilities for DSS Extracts ;July 16, 1998
"RTN","ECXUTL1",2,0)
 ;;3.0;DSS EXTRACTS;**9,49**;Dec 22, 1997
"RTN","ECXUTL1",3,0)
 ;
"RTN","ECXUTL1",4,0)
CYFY(ECXFMDT) ;** Return the calandar and fiscal years for a FM date
"RTN","ECXUTL1",5,0)
 ;
"RTN","ECXUTL1",6,0)
 ; Input
"RTN","ECXUTL1",7,0)
 ;   ECXFMDT - Fileman formated date
"RTN","ECXUTL1",8,0)
 ;
"RTN","ECXUTL1",9,0)
 ; Output
"RTN","ECXUTL1",10,0)
 ;   X - CY begin date^ CY end date^ FY begin date^ FY end date
"RTN","ECXUTL1",11,0)
 ;
"RTN","ECXUTL1",12,0)
 N X,Y,Y2
"RTN","ECXUTL1",13,0)
 S X=""
"RTN","ECXUTL1",14,0)
 S ECXFMDT=$G(ECXFMDT)\1
"RTN","ECXUTL1",15,0)
 I ECXFMDT?7N DO
"RTN","ECXUTL1",16,0)
 .S (Y,Y2)=$E(ECXFMDT,1,3)
"RTN","ECXUTL1",17,0)
 .I $E(ECXFMDT,4,5)>9 S Y2=Y+1
"RTN","ECXUTL1",18,0)
 .S X=Y_"0101^"_Y_"1231^"_(Y2-1)_"1001^"_Y2_"0930"
"RTN","ECXUTL1",19,0)
 Q X
"RTN","ECXUTL1",20,0)
 ;
"RTN","ECXUTL1",21,0)
FISCAL(DATE)    ;Return fiscal year
"RTN","ECXUTL1",22,0)
 ; Input: DATE = Date (FileMan format) (defaults to today)
"RTN","ECXUTL1",23,0)
 ;Output: YYYY = Fiscal year that input date falls within
"RTN","ECXUTL1",24,0)
 ;
"RTN","ECXUTL1",25,0)
 N YEAR
"RTN","ECXUTL1",26,0)
 I '$G(DATE) S DATE=$$DT^XLFDT()
"RTN","ECXUTL1",27,0)
 S DATE=$$ECXYM^ECXUTL(DATE)
"RTN","ECXUTL1",28,0)
 S YEAR=$E(DATE,1,4)
"RTN","ECXUTL1",29,0)
 I $E(DATE,5,6)>9 S YEAR=YEAR+1
"RTN","ECXUTL1",30,0)
 Q YEAR
"RTN","ECXUTL1",31,0)
 ;
"RTN","ECXUTL1",32,0)
DTRNG() ;** Prompt the user for a date range
"RTN","ECXUTL1",33,0)
 ;
"RTN","ECXUTL1",34,0)
 N ECXBEG,ECXEND,ECXRNG,ENDRNG
"RTN","ECXUTL1",35,0)
 S ECXRNG=0
"RTN","ECXUTL1",36,0)
 ;
"RTN","ECXUTL1",37,0)
 ;* Prompt for beginning date
"RTN","ECXUTL1",38,0)
 W ! S DIR(0)="DA^:DT:EX",DIR("A")="Enter Start Date: "
"RTN","ECXUTL1",39,0)
 S DIR("?")="^W ""*** Future dates are not allowed ***"",! D HELP^%DTC"
"RTN","ECXUTL1",40,0)
 D ^DIR K DIR
"RTN","ECXUTL1",41,0)
 S:'$D(DIRUT) ECXBEG=+Y
"RTN","ECXUTL1",42,0)
 K %DT,Y,DTOUT,DUOUT,DIRUT
"RTN","ECXUTL1",43,0)
 ;
"RTN","ECXUTL1",44,0)
 ;* Prompt for ending date
"RTN","ECXUTL1",45,0)
 I $G(ECXBEG) DO
"RTN","ECXUTL1",46,0)
 .S ENDRNG=$$CYFY(ECXBEG)
"RTN","ECXUTL1",47,0)
 .S ENDRNG=$S($P(ENDRNG,"^",4)<DT:$P(ENDRNG,"^",4),1:DT)
"RTN","ECXUTL1",48,0)
 .W ! S DIR(0)="DA^"_ECXBEG_":"_ENDRNG_":EX"
"RTN","ECXUTL1",49,0)
 .S DIR("A")="Enter End date: "
"RTN","ECXUTL1",50,0)
 .S DIR("?")="^W ""Future dates and dates after the beginning date's FY end are not allowed."",! D HELP^%DTC"
"RTN","ECXUTL1",51,0)
 .D ^DIR
"RTN","ECXUTL1",52,0)
 .S ECXEND=+Y
"RTN","ECXUTL1",53,0)
 .S:'$D(DIRUT) ECXRNG=ECXBEG_"^"_ECXEND
"RTN","ECXUTL1",54,0)
 .K DIR,%DT,Y,DIRUT,DTOUT,DUOUT
"RTN","ECXUTL1",55,0)
 Q ECXRNG
"RTN","ECXUTL1",56,0)
 ;
"RTN","ECXUTL1",57,0)
STRIP(ECXFIELD,ECXLGTH,ECXPOS) ;* Strip blanks from a padded field
"RTN","ECXUTL1",58,0)
 ;
"RTN","ECXUTL1",59,0)
 ; Input
"RTN","ECXUTL1",60,0)
 ;  ECXFIELD - Data to remove blanks from
"RTN","ECXUTL1",61,0)
 ;  ECXLGTH  - Total length of padded field
"RTN","ECXUTL1",62,0)
 ;  ECXPOS   - Front or Back indicator ('F' or 'B')
"RTN","ECXUTL1",63,0)
 ;
"RTN","ECXUTL1",64,0)
 ; Output
"RTN","ECXUTL1",65,0)
 ;  ECXVAL   - Field with blanks removed
"RTN","ECXUTL1",66,0)
 ;
"RTN","ECXUTL1",67,0)
 N ECXPVAL,QVAL
"RTN","ECXUTL1",68,0)
 S:ECXPOS="B" ECXPVAL=ECXLGTH
"RTN","ECXUTL1",69,0)
 S:ECXPOS="F" ECXPVAL=1
"RTN","ECXUTL1",70,0)
 S QVAL=0
"RTN","ECXUTL1",71,0)
 F  Q:QVAL  DO
"RTN","ECXUTL1",72,0)
 .I ECXPOS="B" DO
"RTN","ECXUTL1",73,0)
 ..S:($E(ECXFIELD,ECXPVAL)'=" ") QVAL=1
"RTN","ECXUTL1",74,0)
 ..S:($E(ECXFIELD,ECXPVAL)=" ") ECXFIELD=$E(ECXFIELD,1,ECXPVAL-1)
"RTN","ECXUTL1",75,0)
 ..S ECXPVAL=ECXPVAL-1
"RTN","ECXUTL1",76,0)
 ..S:(ECXPVAL<1) QVAL=1
"RTN","ECXUTL1",77,0)
 .I ECXPOS="F" DO
"RTN","ECXUTL1",78,0)
 ..S:($E(ECXFIELD,1)'=" ") QVAL=1
"RTN","ECXUTL1",79,0)
 ..S:($E(ECXFIELD,1)=" ") ECXFIELD=$E(ECXFIELD,2,ECXLGTH-(ECXPVAL-1))
"RTN","ECXUTL1",80,0)
 ..S ECXPVAL=ECXPVAL+1
"RTN","ECXUTL1",81,0)
 ..S:(ECXPVAL>ECXLGTH) QVAL=1
"RTN","ECXUTL1",82,0)
 Q ECXFIELD
"RTN","ECXUTL1",83,0)
 ;
"RTN","ECXUTL1",84,0)
PAD(ECXVAL,ECXLGTH,ECXFB,ECXCHAR) ;* Pad the value passed in with ECXCHAR
"RTN","ECXUTL1",85,0)
 ;
"RTN","ECXUTL1",86,0)
 ;   ECXVAL   - The value to pad
"RTN","ECXUTL1",87,0)
 ;   ECXLGTH  - The maximum length
"RTN","ECXUTL1",88,0)
 ;   ECXFB    - 'F': Pad on front; 'B' Pad on back
"RTN","ECXUTL1",89,0)
 ;   ECXCHAR  - The character to pad ECXVAL with
"RTN","ECXUTL1",90,0)
 ;
"RTN","ECXUTL1",91,0)
 ; Output
"RTN","ECXUTL1",92,0)
 ;   ECXVAR   - The padded result
"RTN","ECXUTL1",93,0)
 ;
"RTN","ECXUTL1",94,0)
 N ECXLPCT,ECXVAR
"RTN","ECXUTL1",95,0)
 I $D(ECXVAL),($D(ECXLGTH)),($D(ECXFB)),($D(ECXCHAR)) DO
"RTN","ECXUTL1",96,0)
 .S (ECXVAL,ECXVAR)=$E(ECXVAL,1,ECXLGTH)
"RTN","ECXUTL1",97,0)
 .F ECXLPCT=1:1:ECXLGTH-$L($E(ECXVAR,1,ECXLGTH)) DO
"RTN","ECXUTL1",98,0)
 ..S:ECXFB="B" ECXVAL=ECXVAL_ECXCHAR
"RTN","ECXUTL1",99,0)
 ..S:ECXFB="F" ECXVAL=ECXCHAR_ECXVAL
"RTN","ECXUTL1",100,0)
 I '$D(ECXVAL) S ECXVAL=""
"RTN","ECXUTL1",101,0)
 Q ECXVAL
"RTN","ECXUTL4")
0^40^B40522905
"RTN","ECXUTL4",1,0)
ECXUTL4 ;ALB/ESD - Utilities for DSS Extracts ; 10/4/02 1:29pm
"RTN","ECXUTL4",2,0)
 ;;3.0;DSS EXTRACTS;**39,41,46,49**;Dec 22,1997
"RTN","ECXUTL4",3,0)
 ;
"RTN","ECXUTL4",4,0)
OBSPAT(ECXIO,ECXTS,DSSID) ;
"RTN","ECXUTL4",5,0)
 ; Get observation patient indicator from DSS TREATING SPECIALTY
"RTN","ECXUTL4",6,0)
 ; TRANSLATION file (#727.831) or DSS Identifier
"RTN","ECXUTL4",7,0)
 ;
"RTN","ECXUTL4",8,0)
 ; Input:
"RTN","ECXUTL4",9,0)
 ;   ECXIO  - Inpatient/Outpatient indicator
"RTN","ECXUTL4",10,0)
 ;   ECXTS  - Treating specialty (from file #42.4)
"RTN","ECXUTL4",11,0)
 ;   DSSID  - DSS Identifier
"RTN","ECXUTL4",12,0)
 ;
"RTN","ECXUTL4",13,0)
 ;Output:
"RTN","ECXUTL4",14,0)
 ;   ECXOBS - Observation patient indicator (YES/NO)
"RTN","ECXUTL4",15,0)
 ;
"RTN","ECXUTL4",16,0)
 ;- Check input vars
"RTN","ECXUTL4",17,0)
 S ECXIO=$G(ECXIO),ECXTS=+$G(ECXTS),DSSID=+$G(DSSID)
"RTN","ECXUTL4",18,0)
 S ECXOBS=""
"RTN","ECXUTL4",19,0)
 D
"RTN","ECXUTL4",20,0)
 .;- Look up obs patient indicator if treating spec is in file #727.831
"RTN","ECXUTL4",21,0)
 . I $G(^ECX(727.831,ECXTS,0)) S ECXOBS=$P($G(^ECX(727.831,ECXTS,0)),"^",4)
"RTN","ECXUTL4",22,0)
 . I ECXOBS'="" S ECXOBS=$S(ECXOBS="Y":"YES",1:"NO") Q
"RTN","ECXUTL4",23,0)
 .;
"RTN","ECXUTL4",24,0)
 .;- If outpatient and TS not in file, AND Feeder Key (CLI) or DSS ID
"RTN","ECXUTL4",25,0)
 .;- (MTL,IVP,ECQ,QSR,NOS,SUR) is 290-296, Observation Patient Ind=YES
"RTN","ECXUTL4",26,0)
 . I ECXIO="O",ECXOBS="",DSSID D
"RTN","ECXUTL4",27,0)
 .. I $E(DSSID,1,3)>289&($E(DSSID,1,3)<297) S ECXOBS="YES"
"RTN","ECXUTL4",28,0)
 .. E  S ECXOBS="NO"
"RTN","ECXUTL4",29,0)
 Q $S(ECXOBS'="":ECXOBS,1:"NO")
"RTN","ECXUTL4",30,0)
 ;
"RTN","ECXUTL4",31,0)
INOUTP(ECXTS) ;
"RTN","ECXUTL4",32,0)
 ; Get inpatient/outpatient indicator from DSS TREATING SPECIALTY
"RTN","ECXUTL4",33,0)
 ; TRANSLATION file (#727.831)
"RTN","ECXUTL4",34,0)
 ;
"RTN","ECXUTL4",35,0)
 ; Input:
"RTN","ECXUTL4",36,0)
 ;   ECXTS   - Treating specialty
"RTN","ECXUTL4",37,0)
 ;
"RTN","ECXUTL4",38,0)
 ; Output:
"RTN","ECXUTL4",39,0)
 ;             Inpatient/Outpatient indicator (I/O)
"RTN","ECXUTL4",40,0)
 ;
"RTN","ECXUTL4",41,0)
 S ECXTS=+$G(ECXTS)
"RTN","ECXUTL4",42,0)
 S ECXIO=""
"RTN","ECXUTL4",43,0)
 ;
"RTN","ECXUTL4",44,0)
 ;- Look up inpat/outpat indicator if treating spec is in file
"RTN","ECXUTL4",45,0)
 I $G(^ECX(727.831,ECXTS,0)) S ECXIO=$P($G(^ECX(727.831,ECXTS,0)),"^",5)
"RTN","ECXUTL4",46,0)
 Q $S(ECXIO'="":ECXIO,1:"I")
"RTN","ECXUTL4",47,0)
 ;
"RTN","ECXUTL4",48,0)
ENCNUM(ECXIO,ECXSSN,ECXADT,ECXVDT,ECXTRT,ECXOBS,ECXEXT,ECXSTP,ECXSTP2) ;
"RTN","ECXUTL4",49,0)
 ; Get encounter number
"RTN","ECXUTL4",50,0)
 ;
"RTN","ECXUTL4",51,0)
 ; Input:
"RTN","ECXUTL4",52,0)
 ;   ECXIO   - Inpat/Outpat indicator = I or O
"RTN","ECXUTL4",53,0)
 ;   ECXSSN  - Patient SSN
"RTN","ECXUTL4",54,0)
 ;   ECXADT  - Admit Date
"RTN","ECXUTL4",55,0)
 ;   ECXVDT  - Visit Date
"RTN","ECXUTL4",56,0)
 ;   ECXTRT  - Treating Spec
"RTN","ECXUTL4",57,0)
 ;   ECXOBS  - Observation Pat Indicator
"RTN","ECXUTL4",58,0)
 ;   ECXEXT  - Extract
"RTN","ECXUTL4",59,0)
 ;   ECXSTP  - Stop Code (or stop code related) variable
"RTN","ECXUTL4",60,0)
 ;   ECXSTP2 - Stop Code (or stop code related) addtl variable
"RTN","ECXUTL4",61,0)
 ;             (used for SUR and ECS)
"RTN","ECXUTL4",62,0)
 ;
"RTN","ECXUTL4",63,0)
 ;Output:
"RTN","ECXUTL4",64,0)
 ;             Encounter Number
"RTN","ECXUTL4",65,0)
 ;
"RTN","ECXUTL4",66,0)
 N ENCNUM,ECXDATE,ECXSTCD
"RTN","ECXUTL4",67,0)
 S (ENCNUM,ECXSTCD)=""
"RTN","ECXUTL4",68,0)
 ;
"RTN","ECXUTL4",69,0)
 ;- Check input vars
"RTN","ECXUTL4",70,0)
 S ECXEXT=$G(ECXEXT),ECXIO=$G(ECXIO),ECXOBS=$G(ECXOBS),ECXTRT=+$G(ECXTRT)
"RTN","ECXUTL4",71,0)
 S ECXSTP=+$G(ECXSTP),ECXSTP2=+$G(ECXSTP2)
"RTN","ECXUTL4",72,0)
 S ECXADT=+$G(ECXADT),ECXVDT=+$G(ECXVDT)
"RTN","ECXUTL4",73,0)
 ;
"RTN","ECXUTL4",74,0)
 ;- Don't use pseudo-SSN in encounter number
"RTN","ECXUTL4",75,0)
 S ECXSSN=$E($G(ECXSSN),1,9)
"RTN","ECXUTL4",76,0)
 ;
"RTN","ECXUTL4",77,0)
 D
"RTN","ECXUTL4",78,0)
 . ;- Inpatient
"RTN","ECXUTL4",79,0)
 . I ECXIO="I",ECXADT,ECXSSN'="" D  Q
"RTN","ECXUTL4",80,0)
 .. S ECXDATE=$$ADMITDT(ECXADT)
"RTN","ECXUTL4",81,0)
 .. I ECXDATE'="" S ENCNUM=ECXSSN_ECXDATE_"I"
"RTN","ECXUTL4",82,0)
 . ;
"RTN","ECXUTL4",83,0)
 . ;- Outpatient branch
"RTN","ECXUTL4",84,0)
 . I ECXIO="O" D
"RTN","ECXUTL4",85,0)
 .. ;- Observation patient (outpatient)
"RTN","ECXUTL4",86,0)
 .. I ECXOBS="YES",ECXSSN'="" D  Q
"RTN","ECXUTL4",87,0)
 ... ;
"RTN","ECXUTL4",88,0)
 ... S ECXDATE=$S(ECXADT:$$JULDT(ECXADT),1:$$JULDT(ECXVDT))
"RTN","ECXUTL4",89,0)
 ... S ECXSTCD=$S(+$P($G(^ECX(727.831,ECXTRT,0)),"^",6):+$P($G(^ECX(727.831,ECXTRT,0)),"^",6),1:+$E(ECXSTP,1,3))
"RTN","ECXUTL4",90,0)
 ... Q:ECXDATE=""!(ECXSTCD="")
"RTN","ECXUTL4",91,0)
 ... S ENCNUM=ECXSSN_ECXDATE_ECXSTCD
"RTN","ECXUTL4",92,0)
 .. ;
"RTN","ECXUTL4",93,0)
 .. ;- Outpatient (no observation pat)
"RTN","ECXUTL4",94,0)
 .. I ECXOBS="NO",ECXVDT,ECXSSN'="" D  Q
"RTN","ECXUTL4",95,0)
 ... ;
"RTN","ECXUTL4",96,0)
 ... ;- ADM, MOV, TRT have no outpat encounter number
"RTN","ECXUTL4",97,0)
 ... I ECXEXT="ADM"!(ECXEXT="MOV")!(ECXEXT="TRT") Q
"RTN","ECXUTL4",98,0)
 ... ;
"RTN","ECXUTL4",99,0)
 ... ;- Use 1st 3 chars of DSS ID for NOS and ECQ (feeder key for CLI)
"RTN","ECXUTL4",100,0)
 ... ;- Use observation stop code for IVP
"RTN","ECXUTL4",101,0)
 ... I ECXEXT="CLI"!(ECXEXT="NOS")!(ECXEXT="ECQ")!(ECXEXT="IVP") S ECXSTCD=+$E(ECXSTP,1,3) Q:'ECXSTCD
"RTN","ECXUTL4",102,0)
 ... ;
"RTN","ECXUTL4",103,0)
 ... ;- Use cost center to obtain stop code for ECS
"RTN","ECXUTL4",104,0)
 ... I ECXEXT="ECS" D  Q:'ECXSTCD
"RTN","ECXUTL4",105,0)
 .... S ECXSTCD=$$ECSCOST(ECXSTP2)
"RTN","ECXUTL4",106,0)
 ....;
"RTN","ECXUTL4",107,0)
 ....;- If no cost center, use 1st 3 chars of DSS ID
"RTN","ECXUTL4",108,0)
 .... I ECXSTCD="" S ECXSTCD=+$E(ECXSTP,1,3)
"RTN","ECXUTL4",109,0)
 ... ;
"RTN","ECXUTL4",110,0)
 ... ;- These extracts have predetermined stop code values
"RTN","ECXUTL4",111,0)
 ... I ECXEXT="DEN" S ECXSTCD=180
"RTN","ECXUTL4",112,0)
 ... I ECXEXT="PRE"!(ECXEXT="UDP") S ECXSTCD=160
"RTN","ECXUTL4",113,0)
 ... I ECXEXT="LAB"!(ECXEXT="LAR") S ECXSTCD=108
"RTN","ECXUTL4",114,0)
 ... I ECXEXT="MTL" S ECXSTCD=538
"RTN","ECXUTL4",115,0)
 ... I ECXEXT="NUR" S ECXSTCD=950
"RTN","ECXUTL4",116,0)
 ... I ECXEXT="PRO" S ECXSTCD=423
"RTN","ECXUTL4",117,0)
 ... ;
"RTN","ECXUTL4",118,0)
 ... ;- If Imaging Type fld=2, use 109 otherwise use 105
"RTN","ECXUTL4",119,0)
 ... I ECXEXT="RAD" S ECXSTCD=$S(ECXSTP=2:109,1:105)
"RTN","ECXUTL4",120,0)
 ... ;
"RTN","ECXUTL4",121,0)
 ... ;- Use DSS STOP CODE fld if populated or if SURG SPEC fld=59 use 430
"RTN","ECXUTL4",122,0)
 ... ;- otherwise if null use 429
"RTN","ECXUTL4",123,0)
 ... I ECXEXT="SUR" S ECXSTCD=$S(ECXSTP:ECXSTP,ECXSTP2=59:430,1:429)
"RTN","ECXUTL4",124,0)
 ... ;
"RTN","ECXUTL4",125,0)
 ... ;- Get Julian Date
"RTN","ECXUTL4",126,0)
 ... S ECXDATE=$$JULDT(ECXVDT)
"RTN","ECXUTL4",127,0)
 ... I ECXDATE'="" S ENCNUM=ECXSSN_ECXDATE_ECXSTCD
"RTN","ECXUTL4",128,0)
 Q ENCNUM
"RTN","ECXUTL4",129,0)
 ;
"RTN","ECXUTL4",130,0)
ADMITDT(ECXINDT) ; Returns date in YYMMDD format
"RTN","ECXUTL4",131,0)
 ;
"RTN","ECXUTL4",132,0)
 ; Input:
"RTN","ECXUTL4",133,0)
 ;   ECXINDT - Date (can also include time) in internal FM format
"RTN","ECXUTL4",134,0)
 ;
"RTN","ECXUTL4",135,0)
 ;Output:
"RTN","ECXUTL4",136,0)
 ;             Date in YYMMDD form
"RTN","ECXUTL4",137,0)
 ;
"RTN","ECXUTL4",138,0)
 N ECXDT
"RTN","ECXUTL4",139,0)
 S ECXDT=""
"RTN","ECXUTL4",140,0)
 S ECXINDT=+$G(ECXINDT)
"RTN","ECXUTL4",141,0)
 ;
"RTN","ECXUTL4",142,0)
 ;- If no input or full FM date not passed in, quit
"RTN","ECXUTL4",143,0)
 I 'ECXINDT!($L(ECXINDT)<7) G ADMTDTQ
"RTN","ECXUTL4",144,0)
 ;
"RTN","ECXUTL4",145,0)
 ;- Date in YYMMDD form
"RTN","ECXUTL4",146,0)
 S ECXDT=$TR($$FMTE^XLFDT(ECXINDT,"4DF")," /","0")
"RTN","ECXUTL4",147,0)
ADMTDTQ Q ECXDT
"RTN","ECXUTL4",148,0)
 ;
"RTN","ECXUTL4",149,0)
 ;
"RTN","ECXUTL4",150,0)
JULDT(ECXINDT) ;  Returns Julian Date in MMDDD format
"RTN","ECXUTL4",151,0)
 ;
"RTN","ECXUTL4",152,0)
 ; Input:
"RTN","ECXUTL4",153,0)
 ;   ECINDT  - Date (can also include time) in internal FM format
"RTN","ECXUTL4",154,0)
 ;
"RTN","ECXUTL4",155,0)
 ;Output:
"RTN","ECXUTL4",156,0)
 ;             Julian date in MM_DDD form
"RTN","ECXUTL4",157,0)
 ;
"RTN","ECXUTL4",158,0)
 N ECXDDD,ECXDT,ECXJUL,ECXMM
"RTN","ECXUTL4",159,0)
 S (ECXDDD,ECXMM)=""
"RTN","ECXUTL4",160,0)
 ;
"RTN","ECXUTL4",161,0)
 ;- If no input or full FM date not passed in, quit
"RTN","ECXUTL4",162,0)
 S ECXINDT=+$G(ECXINDT)
"RTN","ECXUTL4",163,0)
 I 'ECXINDT!($L(ECXINDT)<7) G JULDTQ
"RTN","ECXUTL4",164,0)
 ;
"RTN","ECXUTL4",165,0)
 ;- Extract date portion
"RTN","ECXUTL4",166,0)
 S ECXDT=$E(ECXINDT,1,7)
"RTN","ECXUTL4",167,0)
 ;
"RTN","ECXUTL4",168,0)
 ;- Get month (MM)
"RTN","ECXUTL4",169,0)
 S ECXMM=$E(ECXINDT,2,3)
"RTN","ECXUTL4",170,0)
 ;
"RTN","ECXUTL4",171,0)
 ;- Number of day within year (DDD)
"RTN","ECXUTL4",172,0)
 S ECXDDD=$$RJ^XLFSTR($$FMDIFF^XLFDT(ECXDT,$E(ECXDT,1,3)_"0101",1)+1,3,"0")
"RTN","ECXUTL4",173,0)
JULDTQ Q ECXMM_ECXDDD
"RTN","ECXUTL4",174,0)
 ;
"RTN","ECXUTL4",175,0)
CNHSTAT(ECXDFN) ;  Get CNH (Contract Nursing Home) status
"RTN","ECXUTL4",176,0)
 ;
"RTN","ECXUTL4",177,0)
 ; Input:
"RTN","ECXUTL4",178,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",179,0)
 ;
"RTN","ECXUTL4",180,0)
 ;Output:
"RTN","ECXUTL4",181,0)
 ;             CNH status (YES/NO)
"RTN","ECXUTL4",182,0)
 ;
"RTN","ECXUTL4",183,0)
 N ECXCNH
"RTN","ECXUTL4",184,0)
 S ECXDFN=+$G(ECXDFN)
"RTN","ECXUTL4",185,0)
 S ECXCNH=$P($G(^DPT(ECXDFN,"NHC")),U)
"RTN","ECXUTL4",186,0)
 Q $S(ECXCNH="Y":"YES",ECXCNH="N":"NO",1:"")
"RTN","ECXUTL4",187,0)
 ;
"RTN","ECXUTL4",188,0)
CANC(ECXNOR,ECXTMOR) ; Get Surgery Cancelled/Aborted Status
"RTN","ECXUTL4",189,0)
 ;
"RTN","ECXUTL4",190,0)
 ; Function called after determining CANCEL DATE in SURGERY record exists
"RTN","ECXUTL4",191,0)
 ;
"RTN","ECXUTL4",192,0)
 ; Input:
"RTN","ECXUTL4",193,0)
 ;   ECXNOR   - Non-OR DSS ID
"RTN","ECXUTL4",194,0)
 ;   ECXTMOR  - Time Pat in OR
"RTN","ECXUTL4",195,0)
 ;
"RTN","ECXUTL4",196,0)
 ;Output:
"RTN","ECXUTL4",197,0)
 ;              Cancelled/aborted status (C/A)
"RTN","ECXUTL4",198,0)
 ;
"RTN","ECXUTL4",199,0)
 N ECXCANC
"RTN","ECXUTL4",200,0)
 S ECXCANC=""
"RTN","ECXUTL4",201,0)
 S ECXNOR=$G(ECXNOR)
"RTN","ECXUTL4",202,0)
 ;
"RTN","ECXUTL4",203,0)
 ;- If Non-OR DSS ID or Time Pat in OR, ECXCANC = "A" else = "C"
"RTN","ECXUTL4",204,0)
 D
"RTN","ECXUTL4",205,0)
 . I ECXNOR'=""&(ECXNOR'="UNKNOWN") S ECXCANC="A" Q
"RTN","ECXUTL4",206,0)
 . I +$G(ECXTMOR) S ECXCANC="A" Q
"RTN","ECXUTL4",207,0)
 . S ECXCANC="C"
"RTN","ECXUTL4",208,0)
 Q ECXCANC
"RTN","ECXUTL4",209,0)
 ;
"RTN","ECXUTL4",210,0)
ECSCOST(ECXCOST) ;Get ECS extract stop code based on cost center
"RTN","ECXUTL4",211,0)
 ;
"RTN","ECXUTL4",212,0)
 ;
"RTN","ECXUTL4",213,0)
 ; Input:
"RTN","ECXUTL4",214,0)
 ;   ECXCOST  - ECS extract cost center
"RTN","ECXUTL4",215,0)
 ;
"RTN","ECXUTL4",216,0)
 ;Output:
"RTN","ECXUTL4",217,0)
 ;              ECS extract stop code
"RTN","ECXUTL4",218,0)
 ;
"RTN","ECXUTL4",219,0)
 N ECXFND,ECXSTOP,I
"RTN","ECXUTL4",220,0)
 S ECXFND=0
"RTN","ECXUTL4",221,0)
 S ECXSTOP=""
"RTN","ECXUTL4",222,0)
 S ECXCOST=+$G(ECXCOST)
"RTN","ECXUTL4",223,0)
 D
"RTN","ECXUTL4",224,0)
 . I 'ECXCOST Q
"RTN","ECXUTL4",225,0)
 . F I=1:1 Q:ECXFND!($P($T(COST+I),";;",2)="END")  D
"RTN","ECXUTL4",226,0)
 .. I ECXCOST=$P($T(COST+I),";;",2) S ECXSTOP=$P($T(COST+I),";;",3),ECXFND=1
"RTN","ECXUTL4",227,0)
 Q ECXSTOP
"RTN","ECXUTL4",228,0)
 ;
"RTN","ECXUTL4",229,0)
COST ;- ECS Cost Center and stop code
"RTN","ECXUTL4",230,0)
 ;;833100;;652
"RTN","ECXUTL4",231,0)
 ;;833200;;653
"RTN","ECXUTL4",232,0)
 ;;833300;;681
"RTN","ECXUTL4",233,0)
 ;;834100;;651
"RTN","ECXUTL4",234,0)
 ;;834200;;650
"RTN","ECXUTL4",235,0)
 ;;834300;;681
"RTN","ECXUTL4",236,0)
 ;;834400;;654
"RTN","ECXUTL4",237,0)
 ;;834500;;681
"RTN","ECXUTL4",238,0)
 ;;834600;;681
"RTN","ECXUTL4",239,0)
 ;;834700;;681
"RTN","ECXUTL4",240,0)
 ;;834800;;681
"RTN","ECXUTL4",241,0)
 ;;834900;;681
"RTN","ECXUTL4",242,0)
 ;;836100;;654
"RTN","ECXUTL4",243,0)
 ;;836200;;654
"RTN","ECXUTL4",244,0)
 ;;END
"RTN","ECXUTL4",245,0)
 ;
"RTN","ECXUTL4",246,0)
HNCI(ECXDFN) ; Get head & neck cancer indicator
"RTN","ECXUTL4",247,0)
 ;
"RTN","ECXUTL4",248,0)
 ; Input:
"RTN","ECXUTL4",249,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",250,0)
 ;
"RTN","ECXUTL4",251,0)
 ;Output:
"RTN","ECXUTL4",252,0)
 ;             Head/Neck CA DX (Y/N)
"RTN","ECXUTL4",253,0)
 ;
"RTN","ECXUTL4",254,0)
 N ECXHNCI,DGNT
"RTN","ECXUTL4",255,0)
 S ECXHNCI=""
"RTN","ECXUTL4",256,0)
 S ECXDFN=+$G(ECXDFN) I ECXDFN D
"RTN","ECXUTL4",257,0)
 .I $$GETCUR^DGNTAPI(ECXDFN,"DGNT") S ECXHNCI=$P(DGNT("HNC"),U)
"RTN","ECXUTL4",258,0)
 Q ECXHNCI
"RTN","ECXUTL4",259,0)
 ;
"RTN","ECXUTL4",260,0)
TSMAP(ECXTS) ;Determines DSS Identifier for the following observation
"RTN","ECXUTL4",261,0)
 ; treating speciality
"RTN","ECXUTL4",262,0)
 ; Input:
"RTN","ECXUTL4",263,0)
 ;   ECXTS - Observation Treating Speciality
"RTN","ECXUTL4",264,0)
 ;
"RTN","ECXUTL4",265,0)
 ; Output:
"RTN","ECXUTL4",266,0)
 ;   DSS Identifier (Stop Code)
"RTN","ECXUTL4",267,0)
 ;
"RTN","ECXUTL4",268,0)
 N TS,SC,I
"RTN","ECXUTL4",269,0)
 S TS="^18^23^24^36^41^65^94^",SC="^293^295^290^294^296^291^292^"
"RTN","ECXUTL4",270,0)
 F I=1:1:$L(TS) Q:$P(TS,"^",I)=ECXTS
"RTN","ECXUTL4",271,0)
 Q $P(SC,"^",I)_"000"
"VER")
8.0^22.0
"^DD",727,727,14,0)
EXTRACT LOGIC^F^^VER;2^K:$L(X)>5!($L(X)<4)!'(X?4N.1N.1A.1" ") X
"^DD",727,727,14,3)
Enter the fiscal year extract logic used
"^DD",727,727,14,21,0)
^^3^3^3030710^
"^DD",727,727,14,21,1,0)
Fiscal year extract logic used when extracting the data.  Format of is the
"^DD",727,727,14,21,2,0)
extract year + an optional revision denotion (ex: "2004", "2004A",
"^DD",727,727,14,21,3,0)
"20041").  Note that "2004" and "2004 " are considered the same value.
"^DD",727,727,14,"DT")
3030710
"^DD",727.1,727.1,13,0)
INACTIVE^S^1:YES;0:NO;^0;12^Q
"^DD",727.1,727.1,13,3)
Enter YES if this extract is inactive
"^DD",727.1,727.1,13,21,0)
^^1^1^3030710^
"^DD",727.1,727.1,13,21,1,0)
Denotes whether or not this extract is considered inactive.
"^DD",727.1,727.1,13,"DT")
3030710
"^DD",727.809,727.809,62,0)
BCMA DRUG DISPENSED^P50'^PSDRUG(^2;6^Q
"^DD",727.809,727.809,62,.1)
BCMA Drug Dispensed
"^DD",727.809,727.809,62,21,0)
^.001^2^2^3030624^^^
"^DD",727.809,727.809,62,21,1,0)
Pointer to the drug file.  Contains the actual medication scanned for this
"^DD",727.809,727.809,62,21,2,0)
entry.
"^DD",727.809,727.809,62,23,0)
^.001^4^4^3030624^^
"^DD",727.809,727.809,62,23,1,0)
BCMA DRUG DISPENSED field is a pointer to the DRUG file (#50).  BCMA DRUG 
"^DD",727.809,727.809,62,23,2,0)
DISPENSED field is derived from the DISPENSED DRUG field (.01) of the 
"^DD",727.809,727.809,62,23,3,0)
DISPENSED DRUG multiple (sub-file #53.795) of the BCMA MEDICATION LOG 
"^DD",727.809,727.809,62,23,4,0)
file (#53.79).
"^DD",727.809,727.809,62,"DT")
3030624
"^DD",727.809,727.809,63,0)
BCMA DOSE GIVEN^NJ5,2^^2;7^K:+X'=X!(X>50)!(X<0)!(X?.E1"."3N.N) X
"^DD",727.809,727.809,63,.1)
BCMA Dose Given
"^DD",727.809,727.809,63,3)
Type a Number between 0 and 50, 2 Decimal Digits
"^DD",727.809,727.809,63,21,0)
^.001^1^1^3030624^^
"^DD",727.809,727.809,63,21,1,0)
Actual number of units given.
"^DD",727.809,727.809,63,23,0)
^^3^3^3030624^
"^DD",727.809,727.809,63,23,1,0)
BCMA DOSE GIVEN field is derived from the DOSE GIVEN field (.03) of the 
"^DD",727.809,727.809,63,23,2,0)
DISPENSED DRUG multiple (sub-file #53.795) of the BCMA MEDICATION LOG 
"^DD",727.809,727.809,63,23,3,0)
file (#53.79).
"^DD",727.809,727.809,63,"DT")
3030624
"^DD",727.809,727.809,64,0)
BCMA UNIT OF ADMINISTRATION^F^^2;8^K:$L(X)>40!($L(X)<1) X
"^DD",727.809,727.809,64,.1)
BCMA Unit of Administration
"^DD",727.809,727.809,64,3)
Answer must be 1-40 characters in length.
"^DD",727.809,727.809,64,21,0)
^.001^1^1^3030624^^
"^DD",727.809,727.809,64,21,1,0)
Unit of administration (i.e. TABLET, ML, VIAL).
"^DD",727.809,727.809,64,23,0)
^^3^3^3030624^
"^DD",727.809,727.809,64,23,1,0)
BCMA UNIT OF ADMINISTRATION field is derived from the UNIT OF ADMINSTRATION 
"^DD",727.809,727.809,64,23,2,0)
field (.04) of the DISPENSED DRUG multiple (sub-file #53.795) of the BCMA 
"^DD",727.809,727.809,64,23,3,0)
MEDICATION LOG file (#53.79).
"^DD",727.809,727.809,64,"DT")
3030624
"^DD",727.809,727.809,65,0)
BCMA ICU FLAG^F^^2;9^K:$L(X)>1!($L(X)<1) X
"^DD",727.809,727.809,65,.1)
BCMA ICU Flag
"^DD",727.809,727.809,65,3)
Answer must be 1 character in length
"^DD",727.809,727.809,65,21,0)
^^1^1^3030624^
"^DD",727.809,727.809,65,21,1,0)
Enter the ICU flag.
"^DD",727.809,727.809,65,"DT")
3030624
"^DD",727.809,727.809,66,0)
ORDERING PROVIDER PERSON CLASS^F^^2;10^K:$L(X)>7!($L(X)<7) X
"^DD",727.809,727.809,66,.1)
Ordering Provider Person Class
"^DD",727.809,727.809,66,3)
Answer must be 7 characters in length
"^DD",727.809,727.809,66,21,0)
^.001^2^2^3030625^^
"^DD",727.809,727.809,66,21,1,0)
The VA code of the Person Class of the Ordering Provider as of the date of 
"^DD",727.809,727.809,66,21,2,0)
this extract record.
"^DD",727.809,727.809,66,23,0)
^.001^4^4^3030625^^
"^DD",727.809,727.809,66,23,1,0)
ORDERING PROVIDER PERSON CLASS format of the field will be V999999, where 
"^DD",727.809,727.809,66,23,2,0)
the 999999 will be six numeric digits.  ORDERING PROVIDER PERSON CLASS is 
"^DD",727.809,727.809,66,23,3,0)
the Active Person which is determined by $$GET^XUA4A72(PERS,DATE), where 
"^DD",727.809,727.809,66,23,4,0)
PERS is the IEN from NEW PERSON file (#200).
"^DD",727.809,727.809,66,"DT")
3030624
"^DD",727.815,727.815,74,0)
ENROLLMENT LOCATION^F^^1;33^K:$L(X)>7!($L(X)<3) X
"^DD",727.815,727.815,74,.1)
Enrollment Location
"^DD",727.815,727.815,74,3)
Answer must be 3-7 characters in length
"^DD",727.815,727.815,74,21,0)
^.001^2^2^3030624^^
"^DD",727.815,727.815,74,21,1,0)
The facility that the patient chooses to designate as his preferred location 
"^DD",727.815,727.815,74,21,2,0)
for care.
"^DD",727.815,727.815,74,23,0)
^.001^5^5^3030624^^
"^DD",727.815,727.815,74,23,1,0)
The PREFERRED FACILITY field (# 27.02) of the PATIENT file (#2) is defined as 
"^DD",727.815,727.815,74,23,2,0)
the facility that the patient chooses to designate as his preferred location 
"^DD",727.815,727.815,74,23,3,0)
for care.  The PREFERRED FACILITY field (# 27.02) is a pointer to the 
"^DD",727.815,727.815,74,23,4,0)
INSTITUTION file (#4).  From the INSTITUTION file #4, the value in the 
"^DD",727.815,727.815,74,23,5,0)
STATION NUMBER field (#99) is used.
"^DD",727.815,727.815,74,"DT")
3030624
"^DD",727.819,727.819,67,0)
BCMA DRUG DISPENSED^P50'^PSDRUG(^2;4^Q
"^DD",727.819,727.819,67,.1)
BCMA Drug Dispensed
"^DD",727.819,727.819,67,21,0)
^.001^4^4^3030624^^^
"^DD",727.819,727.819,67,21,1,0)
BCMA DRUG DISPENSED field is a pointer to the DRUG file (#50).  BCMA DRUG 
"^DD",727.819,727.819,67,21,2,0)
DISPENSED field is derived from the DISPENSED DRUG field (.01) of the 
"^DD",727.819,727.819,67,21,3,0)
DISPENSED DRUG multiple (sub-file #53.795) of the BCMA MEDICATION LOG 
"^DD",727.819,727.819,67,21,4,0)
file (#53.79).
"^DD",727.819,727.819,67,23,0)
^.001^4^4^3030624^^
"^DD",727.819,727.819,67,23,1,0)
BCMA DRUG DISPENSED field is a pointer to the DRUG file (#50).
"^DD",727.819,727.819,67,23,2,0)
BCMA DRUG DISPENSED field si derived from the DISPENSED DRUG field
"^DD",727.819,727.819,67,23,3,0)
(.01) of the DISPENSED DRUG multiple (sub-file #53.795) of the
"^DD",727.819,727.819,67,23,4,0)
BCMA MEDICATION LOG file (#53.79).
"^DD",727.819,727.819,67,"DT")
3030624
"^DD",727.819,727.819,68,0)
BCMA DOSE GIVEN^NJ5,2^^2;5^K:+X'=X!(X>50)!(X<0)!(X?.E1"."3N.N) X
"^DD",727.819,727.819,68,.1)
BCMA Dose Given
"^DD",727.819,727.819,68,3)
Type a Number between 0 and 50, 2 Decimal Digits
"^DD",727.819,727.819,68,21,0)
^.001^1^1^3030624^^^^
"^DD",727.819,727.819,68,21,1,0)
Actual number of units given.
"^DD",727.819,727.819,68,23,0)
^.001^3^3^3030624^^
"^DD",727.819,727.819,68,23,1,0)
BCMA DOSE GIVEN field is derived from the DOSE GIVEN field (.03) of the 
"^DD",727.819,727.819,68,23,2,0)
DISPENSED DRUG multiple (sub-file #53.795) of the BCMA MEDICATION LOG 
"^DD",727.819,727.819,68,23,3,0)
file (#53.79).
"^DD",727.819,727.819,68,"DT")
3030624
"^DD",727.819,727.819,69,0)
BCMA UNIT OF ADMINISTRATION^F^^2;6^K:$L(X)>40!($L(X)<1) X
"^DD",727.819,727.819,69,.1)
BCMA Unit of Administration
"^DD",727.819,727.819,69,3)
Answer must be 1-40 characters in length.
"^DD",727.819,727.819,69,21,0)
^.001^1^1^3030624^^
"^DD",727.819,727.819,69,21,1,0)
Unit of administration (i.e. TABLET, ML, VIAL)
"^DD",727.819,727.819,69,23,0)
^^3^3^3030624^
"^DD",727.819,727.819,69,23,1,0)
BCMA UNIT OF ADMINISTRATION field is derived from the UNIT OF ADMINSTRATION 
"^DD",727.819,727.819,69,23,2,0)
field (.04) of the DISPENSED DRUG multiple (sub-file #53.795) of the BCMA 
"^DD",727.819,727.819,69,23,3,0)
MEDICATION LOG file (#53.79).
"^DD",727.819,727.819,69,"DT")
3030624
"^DD",727.819,727.819,70,0)
BCMA ICU FLAG^F^^2;7^K:$L(X)>1!($L(X)<1) X
"^DD",727.819,727.819,70,.1)
BCMA ICU Flag
"^DD",727.819,727.819,70,3)
Answer must be 1 character in length.
"^DD",727.819,727.819,70,21,0)
^.001^1^1^3030624^^
"^DD",727.819,727.819,70,21,1,0)
ICU Flag.
"^DD",727.819,727.819,70,"DT")
3030624
"^DD",727.819,727.819,71,0)
ORDERING PROVIDER PERSON CLASS^F^^2;8^K:$L(X)>7!($L(X)<7) X
"^DD",727.819,727.819,71,.1)
Ordering Provider Person Class
"^DD",727.819,727.819,71,3)
Answer must be 7 characters in length.
"^DD",727.819,727.819,71,21,0)
^.001^2^2^3030624^^
"^DD",727.819,727.819,71,21,1,0)
The VA code of the Person Class of the Ordering Provider as of the
"^DD",727.819,727.819,71,21,2,0)
date of this extract record.
"^DD",727.819,727.819,71,23,0)
^^5^5^3030624^
"^DD",727.819,727.819,71,23,1,0)
ORDERING PROVIDER PERSON CLASS format of the field will be V999999, where
"^DD",727.819,727.819,71,23,2,0)
999999 wil be six numeric digits.
"^DD",727.819,727.819,71,23,3,0)

"^DD",727.819,727.819,71,23,4,0)
ORDERING PROVIDER PERSON CLASS is the Active Person which is determined by
"^DD",727.819,727.819,71,23,5,0)
$$GET^AU4A71(PERS,DATE), where PERS is the IEN from NEW PERSON file (#200).
"^DD",727.819,727.819,71,"DT")
3030624
"^DD",727.825,727.825,74,0)
ENROLLMENT LOCATION^F^^1;33^K:$L(X)>7!($L(X)<3) X
"^DD",727.825,727.825,74,.1)
Enrollment Location
"^DD",727.825,727.825,74,3)
Answer must be 3-7 characters in length
"^DD",727.825,727.825,74,21,0)
^^2^2^3030624^
"^DD",727.825,727.825,74,21,1,0)
The facility that the patient chooses to designate as his preferred location
"^DD",727.825,727.825,74,21,2,0)
for care.
"^DD",727.825,727.825,74,23,0)
^^5^5^3030624^
"^DD",727.825,727.825,74,23,1,0)
The PREFERRED FACILITY field (# 27.02) of the PATIENT file (#2) is defined as
"^DD",727.825,727.825,74,23,2,0)
the facility that the patient chooses to designate as his preferred location
"^DD",727.825,727.825,74,23,3,0)
for care.  The PREFERRED FACILITY field (# 27.02) is a pointer to the
"^DD",727.825,727.825,74,23,4,0)
INSTITUTION file (#4).  From the INSTITUTION file #4, the value in the
"^DD",727.825,727.825,74,23,5,0)
STATION NUMBER field (#99) is used.
"^DD",727.825,727.825,74,"DT")
3030624
"^DD",727.827,727.827,75,0)
CBOC STATUS INDICATOR^F^^2;15^K:$L(X)>1!($L(X)<1) X
"^DD",727.827,727.827,75,.1)
CBOC Status Indicator
"^DD",727.827,727.827,75,3)
Answer must be 1 character in length.
"^DD",727.827,727.827,75,21,0)
^.001^3^3^3030624^^^
"^DD",727.827,727.827,75,21,1,0)
CBOC STATUS INDICATOR field values are 'Y' for yes, the facility where the
"^DD",727.827,727.827,75,21,2,0)
patient was seen is a CBOC; or null will be sent if the facility where the
"^DD",727.827,727.827,75,21,3,0)
patient was seen is not a CBOC.
"^DD",727.827,727.827,75,23,0)
^.001^3^3^3030624^^
"^DD",727.827,727.827,75,23,1,0)
CBOC STATUS INDICATOR field is a pointer to the FACILITY TYPE file (#4.1).
"^DD",727.827,727.827,75,23,2,0)
CBOC STATUS INDICATOR field is derived from the FACILITY TYPE field (#13)
"^DD",727.827,727.827,75,23,3,0)
of the INSTITUTION file (#4).  
"^DD",727.827,727.827,75,"DT")
3030624
"^DD",728,728,0)
FIELD^^68^64
"^DD",728,728,0,"DDA")
N
"^DD",728,728,0,"DT")
3031003
"^DD",728,728,0,"IX","B",728,.01)

"^DD",728,728,0,"NM","DSS EXTRACTS")

"^DD",728,728,0,"VRPK")
ECX
"^DD",728,728,.01,0)
NAME^RP4'^DIC(4,^0;1^Q
"^DD",728,728,.01,1,0)
^.1^^-1
"^DD",728,728,.01,1,1,0)
728^B
"^DD",728,728,.01,1,1,1)
S ^ECX(728,"B",$E(X,1,30),DA)=""
"^DD",728,728,.01,1,1,2)
K ^ECX(728,"B",$E(X,1,30),DA)
"^DD",728,728,.01,3)
Enter your DSS location or station number.
"^DD",728,728,.01,21,0)
^.001^2^2^3031006^^^^
"^DD",728,728,.01,21,1,0)
This field contains a pointer to the corresponding location (station number)
"^DD",728,728,.01,21,2,0)
entry in the INSTITUTION file (#4).
"^DD",728,728,.01,23,0)
^.001^1^1^3031006^^^^
"^DD",728,728,.01,23,1,0)
Pointer to the INSTITUTION file (#4).
"^DD",728,728,.01,"DT")
3031003
"^DD",728,728,.5,0)
LAB LMIP^SI^0:NO;1:YES;^LMIP;1^Q
"^DD",728,728,.5,3)
Enter "YES" if you are ready to send LMIP Codes for LAB Extract.
"^DD",728,728,.5,21,0)
^^15^15^2960605^
"^DD",728,728,.5,21,1,0)
This field is a flag that indicates whether a facility is ready to send 
"^DD",728,728,.5,21,2,0)
LMIP codes for the LAB Extract. To answer "YES" to this question, the 
"^DD",728,728,.5,21,3,0)
site must be able to answer "YES" to BOTH of the following questions:
"^DD",728,728,.5,21,4,0)
 
"^DD",728,728,.5,21,5,0)
1. They are in DSS Implementation Round 5 or higher, OR they are in IR1 
"^DD",728,728,.5,21,6,0)
   through IR4 and are extracting data for FY97 or beyond.
"^DD",728,728,.5,21,7,0)
2. All Lab CO directives for LMIP have been completed at their facility.
"^DD",728,728,.5,21,8,0)
   This means that their Lab Service has matched all entries in the 
"^DD",728,728,.5,21,9,0)
   LABORATORY TEST file (#60) to an LMIP code and therefore they are 
"^DD",728,728,.5,21,10,0)
   ready to use the new DSS LAB Extract version that sends only the LMIP 
"^DD",728,728,.5,21,11,0)
   codes to DSS for their initial LAB Feeder Key Values.
"^DD",728,728,.5,21,12,0)
 
"^DD",728,728,.5,21,13,0)
**NOTE** Once this field is set to "YES", the facility is not asked any 
"^DD",728,728,.5,21,14,0)
of these questions again and will automatically use the new DSS LAB 
"^DD",728,728,.5,21,15,0)
Extract version for all future extracts.
"^DD",728,728,.5,"DT")
2970523
"^DD",728,728,7,0)
LAST DATE LAB^D^^7;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,7,3)
Enter the last date that information was extracted for Laboratory.
"^DD",728,728,7,21,0)
^^2^2^2950314^^^^
"^DD",728,728,7,21,1,0)
This field contains the last date that Laboratory information was
"^DD",728,728,7,21,2,0)
extracted to the DSS software.
"^DD",728,728,7,23,0)
^^2^2^2960625^^
"^DD",728,728,7,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,7,23,2,0)
the VA FileMan.
"^DD",728,728,7,"DT")
2900522
"^DD",728,728,8,0)
LAST DATE OP PHARMACY^D^^7;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,8,3)
Enter the last date that information was extracted for Outpatient Pharmacy.
"^DD",728,728,8,21,0)
^^2^2^2950314^^^
"^DD",728,728,8,21,1,0)
This field contains the last date that Outpatient Pharmacy information
"^DD",728,728,8,21,2,0)
was extracted to the DSS software.
"^DD",728,728,8,23,0)
^^2^2^2951018^
"^DD",728,728,8,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,8,23,2,0)
the VA FileMan.
"^DD",728,728,8,"DT")
2900522
"^DD",728,728,9,0)
LAST DATE EC^D^^7;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,9,3)
Enter the last date that information was extracted for Event Capture.
"^DD",728,728,9,21,0)
^^2^2^2950314^^^^
"^DD",728,728,9,21,1,0)
This field contains the last date that Event Capture information was
"^DD",728,728,9,21,2,0)
extracted to the DSS software.
"^DD",728,728,9,23,0)
^^2^2^2951018^
"^DD",728,728,9,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,9,23,2,0)
the VA FileMan.
"^DD",728,728,9,"DT")
2940328
"^DD",728,728,10,0)
LAST DATE ADT^D^^7;4^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,10,3)
Enter the last date that information was extracted for ADT.
"^DD",728,728,10,21,0)
^^2^2^2950315^^^^
"^DD",728,728,10,21,1,0)
This field contains the last date that MAS admission/discharge/transfer
"^DD",728,728,10,21,2,0)
information was extracted to the DSS software.
"^DD",728,728,10,23,0)
^^2^2^2951018^
"^DD",728,728,10,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,10,23,2,0)
the VA FileMan.
"^DD",728,728,10,"DT")
2900821
"^DD",728,728,11,0)
LAST DATE SURGERY^D^^7;5^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,11,3)
Enter the last date that information was extracted for Surgery.
"^DD",728,728,11,21,0)
^^2^2^2950314^^^^
"^DD",728,728,11,21,1,0)
This field contains the last date that Surgery information was extracted
"^DD",728,728,11,21,2,0)
to the DSS software.
"^DD",728,728,11,23,0)
^^2^2^2951018^
"^DD",728,728,11,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,11,23,2,0)
the VA FileMan.
"^DD",728,728,11,"DT")
2900614
"^DD",728,728,12,0)
LAST DATE RADIOLOGY^D^^7;6^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,12,3)
Enter the last date that information was extracted for Radiology.
"^DD",728,728,12,21,0)
^^2^2^2950314^^^^
"^DD",728,728,12,21,1,0)
This field contains the last date that Radiology information was extracted
"^DD",728,728,12,21,2,0)
to the DSS software.
"^DD",728,728,12,23,0)
^^2^2^2951018^
"^DD",728,728,12,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,12,23,2,0)
the VA FileMan.
"^DD",728,728,12,"DT")
2900821
"^DD",728,728,13,0)
LAST DATE NURSING^D^^7;7^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,13,3)
Enter the last date that information was extracted for Nursing.
"^DD",728,728,13,21,0)
^^2^2^2950314^^
"^DD",728,728,13,21,1,0)
This field contains the last date that Nursing information was extracted 
"^DD",728,728,13,21,2,0)
to the DSS software.
"^DD",728,728,13,23,0)
^^2^2^2951018^
"^DD",728,728,13,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,13,23,2,0)
the VA FileMan.
"^DD",728,728,13,"DT")
2901210
"^DD",728,728,14,0)
LAST DATE UD MEDS^D^^7;8^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,14,3)
Enter the last date that information was extracted for Pharmacy Unit Dose.
"^DD",728,728,14,21,0)
^^2^2^2951018^^^
"^DD",728,728,14,21,1,0)
This field contains the last date that Pharmacy Unit Dose information
"^DD",728,728,14,21,2,0)
was extracted to the DSS software.
"^DD",728,728,14,23,0)
^^2^2^2951018^
"^DD",728,728,14,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,14,23,2,0)
the VA FileMan.
"^DD",728,728,14,"DT")
2910214
"^DD",728,728,15,0)
LAST DATE DENTAL^D^^7;9^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,15,3)
Enter the last date that information was extracted for Dental.
"^DD",728,728,15,21,0)
^^2^2^2950314^^
"^DD",728,728,15,21,1,0)
This field contains the last date that Dental information was extracted
"^DD",728,728,15,21,2,0)
to the DSS software.
"^DD",728,728,15,23,0)
^^2^2^2951018^
"^DD",728,728,15,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,15,23,2,0)
the VA FileMan.
"^DD",728,728,15,"DT")
2910228
"^DD",728,728,16,0)
LAST DATE IFCAP^D^^7;10^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,16,3)
Enter the last date that information was extracted for IFCAP.
"^DD",728,728,16,21,0)
^^2^2^2950314^^
"^DD",728,728,16,21,1,0)
This field contains the last date that IFCAP/DSS Unit information was
"^DD",728,728,16,21,2,0)
extracted to the DSS software.
"^DD",728,728,16,23,0)
^^2^2^2951018^
"^DD",728,728,16,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,16,23,2,0)
the VA FileMan.
"^DD",728,728,16,"DT")
2910228
"^DD",728,728,17,0)
LAST DATE CLINIC VISITS^D^^7;11^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,17,3)
Enter the last date that information was extracted for Clinic Visits.
"^DD",728,728,17,21,0)
^^2^2^2950314^^
"^DD",728,728,17,21,1,0)
This field contains the last date that Clinic Visits information was
"^DD",728,728,17,21,2,0)
extracted to the DSS software.
"^DD",728,728,17,23,0)
^^2^2^2951018^
"^DD",728,728,17,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,17,23,2,0)
the VA FileMan.
"^DD",728,728,17,"DT")
2910322
"^DD",728,728,18,0)
LAST DATE WARD STOCK^D^^7;12^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,18,3)
Enter the last date that information was extracted for Ward Stock.
"^DD",728,728,18,21,0)
^^2^2^2950314^^
"^DD",728,728,18,21,1,0)
This field contains the last date that Ward Stock information was extracted
"^DD",728,728,18,21,2,0)
to the DSS software.
"^DD",728,728,18,23,0)
^^2^2^2951018^
"^DD",728,728,18,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,18,23,2,0)
the VA FileMan.
"^DD",728,728,18,"DT")
2910514
"^DD",728,728,19,0)
LAST DATE ADMISSIONS^D^^7;13^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,19,3)
Enter the last date that information was extracted for Patient Admissions.
"^DD",728,728,19,21,0)
^^2^2^2990413^^^^
"^DD",728,728,19,21,1,0)
This field contains the last date that Patient Admissions information
"^DD",728,728,19,21,2,0)
was extracted to the DSS software.
"^DD",728,728,19,23,0)
^^2^2^2990413^^^^
"^DD",728,728,19,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,19,23,2,0)
the VA FileMan.
"^DD",728,728,19,"DT")
2910603
"^DD",728,728,20,0)
LAST DATE MOVEMENT^D^^7;14^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,20,3)
Enter the last date that information was extracted for Patient Movement.
"^DD",728,728,20,21,0)
^^2^2^2950314^^
"^DD",728,728,20,21,1,0)
This field contains the last date that Patient Movement information was
"^DD",728,728,20,21,2,0)
extracted to the DSS software.
"^DD",728,728,20,23,0)
^^2^2^2951018^
"^DD",728,728,20,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,20,23,2,0)
the VA FileMan.
"^DD",728,728,20,"DT")
2910603
"^DD",728,728,21,0)
LAST DATE NO SHOWS^D^^7;15^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,21,3)
Enter the last date that information was extracted for Clinic No-Shows.
"^DD",728,728,21,21,0)
^^2^2^2950314^^
"^DD",728,728,21,21,1,0)
This field contains the last date that Clinic No-Shows information was
"^DD",728,728,21,21,2,0)
extracted to the DSS software.
"^DD",728,728,21,23,0)
^^2^2^2951018^
"^DD",728,728,21,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,21,23,2,0)
the VA FileMan.
"^DD",728,728,21,"DT")
2910604
"^DD",728,728,22,0)
LAB^S^R:RUNNING;^7.1;1^Q
"^DD",728,728,22,3)
Enter R if the extract is currently running.
"^DD",728,728,22,21,0)
^^1^1^2950314^^
"^DD",728,728,22,21,1,0)
This field contains data if the Laboratory extract is currently running.
"^DD",728,728,22,23,0)
^^2^2^2951018^
"^DD",728,728,22,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,22,23,2,0)
the VA FileMan.
"^DD",728,728,22,"DT")
2910613
"^DD",728,728,23,0)
OP^S^R:RUNNING;^7.1;2^Q
"^DD",728,728,23,3)
Enter R if the extract is currently running.
"^DD",728,728,23,21,0)
^^2^2^2950314^^^
"^DD",728,728,23,21,1,0)
This fields contains data if the Outpatient Pharmacy extract is currently
"^DD",728,728,23,21,2,0)
running.
"^DD",728,728,23,23,0)
^^2^2^2951018^
"^DD",728,728,23,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,23,23,2,0)
the VA FileMan.
"^DD",728,728,23,"DT")
2910613
"^DD",728,728,24,0)
EC^S^R:RUNNING;^7.1;3^Q
"^DD",728,728,24,3)
Enter R if the extract is currently running.
"^DD",728,728,24,21,0)
^^1^1^2950314^^^
"^DD",728,728,24,21,1,0)
This field contains data if the Event Capture extract is currently running.
"^DD",728,728,24,23,0)
^^2^2^2951018^
"^DD",728,728,24,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,24,23,2,0)
the VA FileMan.
"^DD",728,728,24,"DT")
2910613
"^DD",728,728,25,0)
SURGERY^S^R:RUNNING;^7.1;5^Q
"^DD",728,728,25,3)
Enter R if the extract is currently running.
"^DD",728,728,25,21,0)
^^1^1^2970929^^^
"^DD",728,728,25,21,1,0)
This field contains data if the Surgery extract is currently running.
"^DD",728,728,25,23,0)
^^2^2^2970929^^
"^DD",728,728,25,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,25,23,2,0)
the VA FileMan.
"^DD",728,728,25,"DT")
2910613
"^DD",728,728,26,0)
RADIOLOGY^S^R:RUNNING;^7.1;6^Q
"^DD",728,728,26,3)
Enter R if the extract is currently running.
"^DD",728,728,26,21,0)
^^1^1^2950314^^
"^DD",728,728,26,21,1,0)
This field contains data if the Radiology extract is currently running.
"^DD",728,728,26,23,0)
^^2^2^2951018^
"^DD",728,728,26,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,26,23,2,0)
the VA FileMan.
"^DD",728,728,26,"DT")
2910613
"^DD",728,728,27,0)
NURSING^S^R:RUNNING;^7.1;7^Q
"^DD",728,728,27,3)
Enter R if the extract is currently running.
"^DD",728,728,27,21,0)
^^1^1^2950314^^
"^DD",728,728,27,21,1,0)
This field contains data if the Nursing extract is currently running.
"^DD",728,728,27,23,0)
^^2^2^2951018^
"^DD",728,728,27,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,27,23,2,0)
the VA FileMan.
"^DD",728,728,27,"DT")
2910613
"^DD",728,728,28,0)
UD^S^R:RUNNING;^7.1;8^Q
"^DD",728,728,28,3)
Enter R if the extract is currently running.
"^DD",728,728,28,21,0)
^^2^2^2951018^^^
"^DD",728,728,28,21,1,0)
This field contains data if the Pharmacy Unit Dose extract is currently
"^DD",728,728,28,21,2,0)
running.
"^DD",728,728,28,23,0)
^^2^2^2951018^
"^DD",728,728,28,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,28,23,2,0)
the VA FileMan.
"^DD",728,728,28,"DT")
2910613
"^DD",728,728,29,0)
ADT^S^R:RUNNING;^7.1;4^Q
"^DD",728,728,29,3)
Enter R if the extract is currently running.
"^DD",728,728,29,21,0)
^^2^2^2950315^^
"^DD",728,728,29,21,1,0)
This field contains data if the MAS Admission/Discharge/Transfer extract
"^DD",728,728,29,21,2,0)
is currently running.
"^DD",728,728,29,23,0)
^^2^2^2951018^
"^DD",728,728,29,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,29,23,2,0)
the VA FileMan.
"^DD",728,728,29,"DT")
2910613
"^DD",728,728,30,0)
DENTAL^S^R:RUNNING;^7.1;9^Q
"^DD",728,728,30,3)
Enter R if the extract is currently running.
"^DD",728,728,30,21,0)
^^1^1^2950315^^^
"^DD",728,728,30,21,1,0)
This field contains data if the Dental extract is currently running.
"^DD",728,728,30,23,0)
^^2^2^2951018^
"^DD",728,728,30,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,30,23,2,0)
the VA FileMan.
"^DD",728,728,30,"DT")
2910613
"^DD",728,728,31,0)
IFCAP^S^R:RUNNING;^7.1;10^Q
"^DD",728,728,31,3)
Enter R if the extract is currently running.
"^DD",728,728,31,21,0)
^^2^2^2950315^^
"^DD",728,728,31,21,1,0)
This field contains data if the IFCAP/DSS Unit extract is currently
"^DD",728,728,31,21,2,0)
running.
"^DD",728,728,31,23,0)
^^2^2^2951018^
"^DD",728,728,31,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,31,23,2,0)
the VA FileMan.
"^DD",728,728,31,"DT")
2910613
"^DD",728,728,32,0)
CLINIC^S^R:RUNNING;^7.1;11^Q
"^DD",728,728,32,3)
Enter R if the extract is currently running.
"^DD",728,728,32,21,0)
^^1^1^2951018^^^
"^DD",728,728,32,21,1,0)
This field contains data if the Clinic Visit extract is currently running.
"^DD",728,728,32,23,0)
^^2^2^2951018^
"^DD",728,728,32,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,32,23,2,0)
the VA FileMan.
"^DD",728,728,32,"DT")
2910613
"^DD",728,728,33,0)
WARD STOCK^S^R:RUNNING;^7.1;12^Q
"^DD",728,728,33,3)
Enter R if the extract is currently running.
"^DD",728,728,33,21,0)
^^1^1^2950315^^
"^DD",728,728,33,21,1,0)
This field contains data if the Ward Stock extract is currently running.
"^DD",728,728,33,23,0)
^^2^2^2951018^
"^DD",728,728,33,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,33,23,2,0)
the VA FileMan.
"^DD",728,728,33,"DT")
2910613
"^DD",728,728,34,0)
ADMISSIONS^S^R:RUNNING;^7.1;13^Q
"^DD",728,728,34,3)
Enter R if the extract is currently running.
"^DD",728,728,34,21,0)
^^2^2^2990413^^^^
"^DD",728,728,34,21,1,0)
This field contains data if the Patient Admissions extract is currently
"^DD",728,728,34,21,2,0)
running.
"^DD",728,728,34,23,0)
^^2^2^2990413^^^^
"^DD",728,728,34,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,34,23,2,0)
the VA FileMan.
"^DD",728,728,34,"DT")
2910613
"^DD",728,728,35,0)
MOVES^S^R:RUNNING;^7.1;14^Q
"^DD",728,728,35,3)
Enter R if the extract is currently running.
"^DD",728,728,35,21,0)
^^2^2^2950315^^
"^DD",728,728,35,21,1,0)
This field contains data if the Patient Movements extract is currently
"^DD",728,728,35,21,2,0)
running.
"^DD",728,728,35,23,0)
^^2^2^2951018^
"^DD",728,728,35,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,35,23,2,0)
the VA FileMan.
"^DD",728,728,35,"DT")
2910613
"^DD",728,728,36,0)
NO SHOW^S^R:RUNNING;^7.1;15^Q
"^DD",728,728,36,3)
Enter R if the extract is currently running.
"^DD",728,728,36,21,0)
^^1^1^2950315^^
"^DD",728,728,36,21,1,0)
This field contains data if the Clinic No-Show extract is currently running.
"^DD",728,728,36,23,0)
^^2^2^2951018^
"^DD",728,728,36,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,36,23,2,0)
the VA FileMan.
"^DD",728,728,36,"DT")
2910613
"^DD",728,728,37,0)
LAST DATE IVS^D^^7;16^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,37,3)
Enter the last date that information was extracted for Pharmacy IV.
"^DD",728,728,37,21,0)
^^2^2^2980707^^^^
"^DD",728,728,37,21,1,0)
This field contains the last date that the Pharmacy IV information was
"^DD",728,728,37,21,2,0)
extracted to the DSS software.
"^DD",728,728,37,23,0)
^^2^2^2980707^^^^
"^DD",728,728,37,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,37,23,2,0)
the VA FileMan.
"^DD",728,728,37,"DT")
2911204
"^DD",728,728,38,0)
IVS^S^R:RUNNING;^7.1;16^Q
"^DD",728,728,38,3)
Enter R if the extract is currently running.
"^DD",728,728,38,21,0)
^^1^1^2951018^^^^
"^DD",728,728,38,21,1,0)
This field contains data if the Pharmacy IV extract is currently running.
"^DD",728,728,38,23,0)
^^2^2^2951018^^^^
"^DD",728,728,38,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,38,23,2,0)
the VA FileMan.
"^DD",728,728,38,"DT")
2911204
"^DD",728,728,39,0)
LAST DATE TREATING SPECIALTY^D^^7;17^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,39,3)
Enter the last date that information was extracted for Treating Specialty Change.
"^DD",728,728,39,21,0)
^^2^2^2951018^^^^
"^DD",728,728,39,21,1,0)
This field contains the last date that the Treating Specialty Change
"^DD",728,728,39,21,2,0)
information was extracted to the DSS software.
"^DD",728,728,39,23,0)
^^2^2^2951018^^^^
"^DD",728,728,39,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,39,23,2,0)
the VA FileMan.
"^DD",728,728,39,"DT")
2920410
"^DD",728,728,40,0)
TREATING SPEC^S^R:RUNNING;^7.1;17^Q
"^DD",728,728,40,3)
Enter R if the extract is currently running.
"^DD",728,728,40,21,0)
^^2^2^2951018^^^
"^DD",728,728,40,21,1,0)
This field contains data if the Treating Specialty Change extract is
"^DD",728,728,40,21,2,0)
currently running.
"^DD",728,728,40,23,0)
^^2^2^2951018^^^
"^DD",728,728,40,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,40,23,2,0)
the VA FileMan.
"^DD",728,728,40,"DT")
2920410
"^DD",728,728,41,0)
LAST DATE IFCAP SUMMARY^D^^7;18^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,41,3)
Enter the last date that information was extracted for the IFCAP Summary.
"^DD",728,728,41,21,0)
^^2^2^2951018^^^
"^DD",728,728,41,21,1,0)
This field contains the last date that IFCAP Summary information was
"^DD",728,728,41,21,2,0)
extracted to the DSS software.
"^DD",728,728,41,23,0)
^^2^2^2951018^
"^DD",728,728,41,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,41,23,2,0)
the VA FileMan.
"^DD",728,728,41,"DT")
2920826
"^DD",728,728,42,0)
IFCAP SUMMARY^S^R:RUNNING;^7.1;18^Q
"^DD",728,728,42,3)
Enter R if the extract is currently running.
"^DD",728,728,42,21,0)
^^1^1^2950315^^
"^DD",728,728,42,21,1,0)
This field comntains data if the IFCAP Summary extract is currently running.
"^DD",728,728,42,23,0)
^^2^2^2951018^
"^DD",728,728,42,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,42,23,2,0)
the VA FileMan.
"^DD",728,728,42,"DT")
2920826
"^DD",728,728,43,0)
LAST DATE IV DETAIL^D^^7;19^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,43,3)
Enter the last date that information was extracted for the Pharmacy IV Detail.
"^DD",728,728,43,21,0)
^^2^2^2980707^^^^
"^DD",728,728,43,21,1,0)
This field contains the last date that the Pharmacy IV Detail information
"^DD",728,728,43,21,2,0)
was extracted to the DSS software.
"^DD",728,728,43,23,0)
^^2^2^2980707^^
"^DD",728,728,43,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,43,23,2,0)
the VA FileMan.
"^DD",728,728,43,"DT")
2920922
"^DD",728,728,44,0)
IV DETAIL^S^R:RUNNING;^7.1;19^Q
"^DD",728,728,44,3)
Enter R if the extract is currently running.
"^DD",728,728,44,21,0)
^^2^2^2951025^^^^
"^DD",728,728,44,21,1,0)
This field contains data if the Pharmacy IV Detail extract is currently
"^DD",728,728,44,21,2,0)
running.
"^DD",728,728,44,23,0)
^^2^2^2951025^^^^
"^DD",728,728,44,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,44,23,2,0)
the VA FileMan.
"^DD",728,728,44,"DT")
2920922
"^DD",728,728,45,0)
SETUP DATE^D^^S;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,45,3)
Enter the date that the Setup information was extracted.
"^DD",728,728,45,21,0)
^^2^2^2951018^^^^
"^DD",728,728,45,21,1,0)
This field contains the last date that the Setup information
"^DD",728,728,45,21,2,0)
was extracted to the DSS software.
"^DD",728,728,45,23,0)
^^2^2^2951018^
"^DD",728,728,45,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,45,23,2,0)
the VA FileMan.
"^DD",728,728,45,"DT")
2921222
"^DD",728,728,46,0)
SETUP RUNNING^S^R:RUNNING;^S;2^Q
"^DD",728,728,46,3)
Enter R if the extract is currently running.
"^DD",728,728,46,21,0)
^^1^1^2951018^^^
"^DD",728,728,46,21,1,0)
This field contains data if the Setup extract is running.
"^DD",728,728,46,23,0)
^^2^2^2951018^
"^DD",728,728,46,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,46,23,2,0)
the VA FileMan.
"^DD",728,728,46,"DT")
2921222
"^DD",728,728,47,0)
LAST DATE PAI^D^^7;20^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,47,3)
Enter the last date that information was extracted for PAI.
"^DD",728,728,47,21,0)
^^2^2^2950315^^^
"^DD",728,728,47,21,1,0)
This field contains the last date that the PAI information was
"^DD",728,728,47,21,2,0)
extracted to the DSS software.
"^DD",728,728,47,23,0)
^^2^2^2951018^^^^
"^DD",728,728,47,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,47,23,2,0)
the VA FileMan.
"^DD",728,728,47,"DT")
2930106
"^DD",728,728,48,0)
PAI^S^R:RUNNING;^7.1;20^Q
"^DD",728,728,48,3)
Enter R if the extract is currently running.
"^DD",728,728,48,21,0)
^^1^1^2950315^^
"^DD",728,728,48,21,1,0)
This field contains data if the PAI extract is currently running.
"^DD",728,728,48,23,0)
^^2^2^2951018^^^
"^DD",728,728,48,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,48,23,2,0)
the VA FileMan.
"^DD",728,728,48,"DT")
2930106
"^DD",728,728,49,0)
AUSTIN QUEUE NAME^FX^^QUEUE;1^K:$L(X)>3!($L(X)<3)!'(X?1"DM"1U)!(X=$P($G(^("QUEUE")),"^",2)) X
"^DD",728,728,49,3)
Enter the three character identifier of the assigned Austin queue for your site.
"^DD",728,728,49,21,0)
^^3^3^2960130^^^^
"^DD",728,728,49,21,1,0)
The name of the queue in Austin to which DSS data will be sent.  This
"^DD",728,728,49,21,2,0)
should be of the two characters DM followed by a single upper case
"^DD",728,728,49,21,3,0)
letter.
"^DD",728,728,49,23,0)
7^^6^6^2960130^^^
"^DD",728,728,49,23,1,0)
This field determines the Austin queue to which data is sent.
"^DD",728,728,49,23,2,0)
During implementation, sites at different stages may be asked
"^DD",728,728,49,23,3,0)
to direct transmission to different queues.  This field is used
"^DD",728,728,49,23,4,0)
by the routine ECXTRANS.  The entry in this field should begin
"^DD",728,728,49,23,5,0)
with the two letters DM.  The third letter will be assigned by
"^DD",728,728,49,23,6,0)
the Austin Automation Center.
"^DD",728,728,49,"DT")
3030715
"^DD",728,728,50,0)
LAST DATE LAB RESULTS^D^^7;21^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,50,3)
Enter the last date that information was extracted for Lab Results.
"^DD",728,728,50,21,0)
^^2^2^2951018^^^
"^DD",728,728,50,21,1,0)
This field contains the last date that the Laboratory Results information
"^DD",728,728,50,21,2,0)
was extracted to the DSS software.
"^DD",728,728,50,23,0)
^^2^2^2951018^^
"^DD",728,728,50,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,50,23,2,0)
the VA FileMan.
"^DD",728,728,50,"DT")
2950307
"^DD",728,728,51,0)
LAB RESULTS^S^R:RUNNING;^7.1;21^Q
"^DD",728,728,51,3)
Enter R if the extract is currently running.
"^DD",728,728,51,21,0)
^^2^2^2951018^^
"^DD",728,728,51,21,1,0)
This field contains data if the Laboratory Results extract is currently
"^DD",728,728,51,21,2,0)
running.
"^DD",728,728,51,23,0)
^^2^2^2951018^
"^DD",728,728,51,23,1,0)
This data is set by the extract routine.  Must not be manipulated via
"^DD",728,728,51,23,2,0)
the VA FileMan.
"^DD",728,728,51,"DT")
2950307
"^DD",728,728,52,0)
RECIPIENT^D^^R1;1^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,52,3)
Enter the last date that Recipient information was extracted.
"^DD",728,728,52,21,0)
^^2^2^2951018^^^
"^DD",728,728,52,21,1,0)
This field contains the last date that the Recipient information was
"^DD",728,728,52,21,2,0)
extracted to the Rational Meds software.
"^DD",728,728,52,23,0)
^^2^2^2951018^^^^
"^DD",728,728,52,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,52,23,2,0)
the VA FileMan.
"^DD",728,728,52,"DT")
2950728
"^DD",728,728,53,0)
PROVIDER^D^^R1;2^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,53,3)
Enter the last date that Provider information was extracted.
"^DD",728,728,53,21,0)
^^2^2^2951018^^
"^DD",728,728,53,21,1,0)
This field contains the last date that the Provider information was
"^DD",728,728,53,21,2,0)
extracted to the Rational Meds software.
"^DD",728,728,53,23,0)
^^2^2^2951018^^
"^DD",728,728,53,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,53,23,2,0)
the VA FileMan.
"^DD",728,728,53,"DT")
2950728
"^DD",728,728,54,0)
PHARMACY^D^^R1;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,54,3)
Enter the last date that Pharmacy Claim information was extracted.
"^DD",728,728,54,21,0)
^^1^1^2951127^^^^
"^DD",728,728,54,21,1,0)
Enter the last date that Hospital Claim information was extracted.
"^DD",728,728,54,23,0)
^^2^2^2951127^^^^
"^DD",728,728,54,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,54,23,2,0)
the VA FileMan.
"^DD",728,728,54,"DT")
2950728
"^DD",728,728,55,0)
HOSPITAL^D^^R1;4^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,55,3)
Enter the last date that Hospital Claim information was extracted.
"^DD",728,728,55,21,0)
^^2^2^2951018^^^
"^DD",728,728,55,21,1,0)
This field contains the last date that the Hospital Claim information
"^DD",728,728,55,21,2,0)
was extracted to the Rational Meds software.
"^DD",728,728,55,23,0)
^^2^2^2951018^^^
"^DD",728,728,55,23,1,0)
This date is set by the extract routine.  Must not be manipulated via
"^DD",728,728,55,23,2,0)
the VA FileMan.
"^DD",728,728,55,"DT")
2950728
"^DD",728,728,56,0)
IV CLAIM^D^^R1;5^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,56,21,0)
^^1^1^2951127^
"^DD",728,728,56,21,1,0)
The last date for which the Rational Meds IV claim was extracted.
"^DD",728,728,56,23,0)
^^2^2^2951127^
"^DD",728,728,56,23,1,0)
This field is set by the extract routine and should not be
"^DD",728,728,56,23,2,0)
manipulated by using VA FileMan.
"^DD",728,728,56,"DT")
2951127
"^DD",728,728,57,0)
LAST DATE QUASAR^D^^7;22^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,57,.1)
Last Date QUASAR
"^DD",728,728,57,3)
Enter the last date that information was extracted for QUASAR.
"^DD",728,728,57,21,0)
^^2^2^2980706^^^^
"^DD",728,728,57,21,1,0)
This field contains the last date that Audiology and Speech Pathology
"^DD",728,728,57,21,2,0)
information was extracted to the DSS software.
"^DD",728,728,57,23,0)
^^2^2^2980706^^^
"^DD",728,728,57,23,1,0)
This date is set by the extract routine.  It must not be manipulated
"^DD",728,728,57,23,2,0)
via VA FileMan.
"^DD",728,728,57,"DT")
2960625
"^DD",728,728,58,0)
QUASAR^S^R:RUNNING;^7.1;22^Q
"^DD",728,728,58,3)
Enter R if the extract is currently running.
"^DD",728,728,58,21,0)
^^1^1^2980706^^^
"^DD",728,728,58,21,1,0)
This field contains data if the QUASAR extract is currently running.
"^DD",728,728,58,23,0)
^^2^2^2980706^^
"^DD",728,728,58,23,1,0)
This data is set by the extract routine.  It must not be manipulated
"^DD",728,728,58,23,2,0)
via VA FileMan.
"^DD",728,728,58,"DT")
2960625
"^DD",728,728,59,0)
LAST DATE PROSTHETICS^728.059P^^1;0
"^DD",728,728,59,10)
The routine ^ECXTRAC adds entries as new Prosthetics Divisions are encountered.
"^DD",728,728,59,21,0)
^^2^2^2980722^^^
"^DD",728,728,59,21,1,0)
This sub-file/field contains DSS Prosthetics divisions and their
"^DD",728,728,59,21,2,0)
respective LAST DATE(s) extracted.
"^DD",728,728,59,23,0)
^^7^7^2980722^^^
"^DD",728,728,59,23,1,0)
This sub-file/field(s) are populated by the ECXTRAC routine.  The routine
"^DD",728,728,59,23,2,0)
looks for a given division as a Prosthetics extract processes.  If the
"^DD",728,728,59,23,3,0)
division is not an entry in this sub-file, it is added.  The respecitive
"^DD",728,728,59,23,4,0)
LAST DATE processed is also updated in this sub-file.
"^DD",728,728,59,23,5,0)
 
"^DD",728,728,59,23,6,0)
This sub-file is DINUMed on the pointer to the Institution file (#4) in
"^DD",728,728,59,23,7,0)
the .01 field.
"^DD",728,728,60,0)
PROSTHETICS^S^R:RUNNING;^7.1;23^Q
"^DD",728,728,60,21,0)
^^1^1^2980706^
"^DD",728,728,60,21,1,0)
This field contains data if the PROSTHETICS extract is currently running.
"^DD",728,728,60,23,0)
^^2^2^2980706^
"^DD",728,728,60,23,1,0)
This data is set by the extract routine.  It must not be manipulated
"^DD",728,728,60,23,2,0)
via VA FileMan.
"^DD",728,728,60,"DT")
2980706
"^DD",728,728,61,0)
LAST DATE MENTAL HEALTH^D^^7;24^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,61,21,0)
^^1^1^2990511^
"^DD",728,728,61,21,1,0)
The last date for which Mental Health data was extracted.
"^DD",728,728,61,"DT")
2990511
"^DD",728,728,62,0)
MENTAL HEALTH^S^R:RUNNING;^7.1;24^Q
"^DD",728,728,62,21,0)
^^2^2^2990511^
"^DD",728,728,62,21,1,0)
If the Mental Health extract is running or queued to run, that is
"^DD",728,728,62,21,2,0)
indicated here.
"^DD",728,728,62,"DT")
2990511
"^DD",728,728,63,0)
LAST DATE CLINIC I^D^^7;25^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,63,21,0)
^^1^1^2990511^
"^DD",728,728,63,21,1,0)
The last date for which Clinic Visit data was extracted.
"^DD",728,728,63,"DT")
2990511
"^DD",728,728,64,0)
CLINIC I^S^R:RUNNING;^7.1;25^Q
"^DD",728,728,64,21,0)
^^2^2^2990511^
"^DD",728,728,64,21,1,0)
If the Clinic Visit extract is running or queued to run, that will
"^DD",728,728,64,21,2,0)
be indicated here.
"^DD",728,728,64,"DT")
2990511
"^DD",728,728,65,0)
LAST DATE CLINIC II^D^^7;26^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,65,21,0)
^^1^1^2990511^
"^DD",728,728,65,21,1,0)
Last date for which Clinic Visit data was extracted.
"^DD",728,728,65,"DT")
2990511
"^DD",728,728,66,0)
CLINIC II^S^R:RUNNING;^7.1;26^Q
"^DD",728,728,66,21,0)
^^2^2^2990511^
"^DD",728,728,66,21,1,0)
If the Clinic Visit extract is running or queued to run, it will
"^DD",728,728,66,21,2,0)
be indicated here.
"^DD",728,728,66,"DT")
2990511
"^DD",728,728,67,0)
AUSTIN TEST QUEUE NAME^FX^^QUEUE;2^K:$L(X)>3!($L(X)<3)!'(X?3U)!(X=$P($G(^("QUEUE")),"^",1)) X
"^DD",728,728,67,3)
Enter the three character identifier of the Austin test queue
"^DD",728,728,67,21,0)
^^3^3^3030710^
"^DD",728,728,67,21,1,0)
The name of the test queue in Austin to which DSS data will be sent.  This
"^DD",728,728,67,21,2,0)
should be 3 upper case letters and can not be the same value as AUSTIN
"^DD",728,728,67,21,3,0)
QUEUE NAME (field #49).
"^DD",728,728,67,"DT")
3030711
"^DD",728,728,68,0)
CBOC REPORT VIEWED INDICATOR^728.068A^^2;0
"^DD",728,728.059,0)
LAST DATE PROSTHETICS SUB-FIELD^^1^2
"^DD",728,728.059,0,"DT")
2980722
"^DD",728,728.059,0,"IX","B",728.059,.01)

"^DD",728,728.059,0,"NM","LAST DATE PROSTHETICS")

"^DD",728,728.059,0,"UP")
728
"^DD",728,728.059,.01,0)
DIVISION^P4^DIC(4,^0;1^Q
"^DD",728,728.059,.01,.1)
Division
"^DD",728,728.059,.01,1,0)
^.1
"^DD",728,728.059,.01,1,1,0)
728.059^B
"^DD",728,728.059,.01,1,1,1)
S ^ECX(728,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",728,728.059,.01,1,1,2)
K ^ECX(728,DA(1),1,"B",$E(X,1,30),DA)
"^DD",728,728.059,.01,3)
Enter the Division for the Prosthetics extract
"^DD",728,728.059,.01,10)
Routine ECXTRAC populates this field as a Prosthetics extract processes.
"^DD",728,728.059,.01,21,0)
^^2^2^2980722^^^
"^DD",728,728.059,.01,21,1,0)
This field indicates the division for which Prosthetics information has
"^DD",728,728.059,.01,21,2,0)
been extracted.
"^DD",728,728.059,.01,23,0)
^^6^6^2980722^^
"^DD",728,728.059,.01,23,1,0)
This field is populated by ^ECXTRAC.  If the Prosthetics division that
"^DD",728,728.059,.01,23,2,0)
the Prosthetics extract is processing is not an entry in this file, it
"^DD",728,728.059,.01,23,3,0)
is added.
"^DD",728,728.059,.01,23,4,0)
 
"^DD",728,728.059,.01,23,5,0)
This field is a pointer to the Institution file (#4) and the IEN for the
"^DD",728,728.059,.01,23,6,0)
sub-file is DINUMed on this value.
"^DD",728,728.059,.01,"DT")
2980722
"^DD",728,728.059,1,0)
LAST DATE^D^^0;2^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728.059,1,3)
Enter the last date that information was extracted for Prosthetics.
"^DD",728,728.059,1,10)
ECXTRAC populates this field during the Prosthetics extract process.
"^DD",728,728.059,1,21,0)
^^2^2^2980722^^
"^DD",728,728.059,1,21,1,0)
The LAST DATE field indicates the last date that the prosthetics extract
"^DD",728,728.059,1,21,2,0)
was completed for the division indicated in the Division (.01) field.
"^DD",728,728.059,1,23,0)
^^3^3^2980722^
"^DD",728,728.059,1,23,1,0)
This field is populated by ^ECXTRAC when the DSS Prosthetics extract is
"^DD",728,728.059,1,23,2,0)
processing.  It is the end date the user enters when generating the
"^DD",728,728.059,1,23,3,0)
Prosthetics extract.
"^DD",728,728.059,1,"DT")
2980722
"^DD",728,728.068,0)
CBOC REPORT VIEWED INDICATOR SUB-FIELD^^.01^1
"^DD",728,728.068,0,"DT")
3031003
"^DD",728,728.068,0,"IX","B",728.068,.01)

"^DD",728,728.068,0,"NM","CBOC REPORT VIEWED INDICATOR")

"^DD",728,728.068,0,"UP")
728
"^DD",728,728.068,.01,0)
CBOC REPORT VIEWED INDICATOR^NJ9,0^^0;1^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",728,728.068,.01,1,0)
^.1
"^DD",728,728.068,.01,1,1,0)
728.068^B
"^DD",728,728.068,.01,1,1,1)
S ^ECX(728,DA(1),"CBOC","B",$E(X,1,30),DA)=""
"^DD",728,728.068,.01,1,1,2)
K ^ECX(728,DA(1),"CBOC","B",$E(X,1,30),DA)
"^DD",728,728.068,.01,1,1,"%D",0)
^^1^1^3031006^
"^DD",728,728.068,.01,1,1,"%D",1,0)
CBOC Cross Reference
"^DD",728,728.068,.01,3)
Type a Number between 0 and 999999999, 0 Decimal Digits
"^DD",728,728.068,.01,"DT")
3031006
"^DIC",728,728,0)
DSS EXTRACTS^728
"^DIC",728,728,0,"GL")
^ECX(728,
"^DIC",728,728,"%D",0)
^^11^11^2990914^^^^
"^DIC",728,728,"%D",1,0)
This file contains various data extract information utilized by the DSS
"^DIC",728,728,"%D",2,0)
Extracts software.  This data includes the last date an extract was
"^DIC",728,728,"%D",3,0)
run, the Austin queue receiving the extract data, and extract setup
"^DIC",728,728,"%D",4,0)
information.
"^DIC",728,728,"%D",5,0)
 
"^DIC",728,728,"%D",6,0)
Data in this file should be entered and edited only by using the DSS
"^DIC",728,728,"%D",7,0)
software and not by direct access via VA FileMan.
"^DIC",728,728,"%D",8,0)
 
"^DIC",728,728,"%D",9,0)
**TECH NOTE**
"^DIC",728,728,"%D",10,0)
When adding a new extract, make sure that the "LAST DATE XXX" is on
"^DIC",728,728,"%D",11,0)
same piece of the 7 node as the "XXX" field is on the 7.1 node.
"^DIC",728,"B","DSS EXTRACTS",728)

**END**
**END**
