KIDS Distribution saved on May 07, 1999@09:43:54
CIRN Patient Demographics/Master Patient Index 1.0
**KIDS**:CIRN PD/MPI 1.0^CIRN PATIENT DEMOGRAPHICS 1.0^CIRN MESSAGING COMPONENTS 1.0^CIRN MESSAGING SUPPORT 1.0^MASTER PATIENT INDEX VISTA 1.0^DG*5.3*231^

**INSTALL NAME**
CIRN PD/MPI 1.0
"BLD",551,0)
CIRN PD/MPI 1.0^^1^2990428
"BLD",551,1,0)
^^2^2^2990408^
"BLD",551,1,1,0)
This builds contains all the components for CLINICAL INFORMATION RESOURCE
"BLD",551,1,2,0)
NETWORK - PATIENT DEMOGRAPHICS/MASTER PATIENT INDEX.
"BLD",551,10,0)
^9.63^5^5
"BLD",551,10,1,0)
CIRN PATIENT DEMOGRAPHICS 1.0
"BLD",551,10,2,0)
CIRN MESSAGING COMPONENTS 1.0
"BLD",551,10,3,0)
CIRN MESSAGING SUPPORT 1.0
"BLD",551,10,4,0)
MASTER PATIENT INDEX VISTA 1.0
"BLD",551,10,5,0)
DG*5.3*231
"BLD",551,10,"B","CIRN MESSAGING COMPONENTS 1.0",2)

"BLD",551,10,"B","CIRN MESSAGING SUPPORT 1.0",3)

"BLD",551,10,"B","CIRN PATIENT DEMOGRAPHICS 1.0",1)

"BLD",551,10,"B","DG*5.3*231",5)

"BLD",551,10,"B","MASTER PATIENT INDEX VISTA 1.0",4)

"BLD",551,"KRN",0)
^9.67PA^19^18
"BLD",551,"KRN",.4,0)
.4
"BLD",551,"KRN",.401,0)
.401
"BLD",551,"KRN",.402,0)
.402
"BLD",551,"KRN",.403,0)
.403
"BLD",551,"KRN",.5,0)
.5
"BLD",551,"KRN",.84,0)
.84
"BLD",551,"KRN",3.6,0)
3.6
"BLD",551,"KRN",3.8,0)
3.8
"BLD",551,"KRN",9.2,0)
9.2
"BLD",551,"KRN",9.8,0)
9.8
"BLD",551,"KRN",19,0)
19
"BLD",551,"KRN",19.1,0)
19.1
"BLD",551,"KRN",101,0)
101
"BLD",551,"KRN",409.61,0)
409.61
"BLD",551,"KRN",771,0)
771
"BLD",551,"KRN",869.2,0)
869.2
"BLD",551,"KRN",870,0)
870
"BLD",551,"KRN",8994,0)
8994
"BLD",551,"KRN","B",.4,.4)

"BLD",551,"KRN","B",.401,.401)

"BLD",551,"KRN","B",.402,.402)

"BLD",551,"KRN","B",.403,.403)

"BLD",551,"KRN","B",.5,.5)

"BLD",551,"KRN","B",.84,.84)

"BLD",551,"KRN","B",3.6,3.6)

"BLD",551,"KRN","B",3.8,3.8)

"BLD",551,"KRN","B",9.2,9.2)

"BLD",551,"KRN","B",9.8,9.8)

"BLD",551,"KRN","B",19,19)

"BLD",551,"KRN","B",19.1,19.1)

"BLD",551,"KRN","B",101,101)

"BLD",551,"KRN","B",409.61,409.61)

"BLD",551,"KRN","B",771,771)

"BLD",551,"KRN","B",869.2,869.2)

"BLD",551,"KRN","B",870,870)

"BLD",551,"KRN","B",8994,8994)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^21.0
**INSTALL NAME**
CIRN PATIENT DEMOGRAPHICS 1.0
"BLD",552,0)
CIRN PATIENT DEMOGRAPHICS 1.0^CLINICAL INFO RESOURCE NETWORK^0^2990428^y
"BLD",552,1,0)
^^1^1^2990301^^
"BLD",552,1,1,0)
CIRN Patient Demographics build.
"BLD",552,4,0)
^9.64PA^991.8^1
"BLD",552,4,991.8,0)
991.8
"BLD",552,4,991.8,222)
y^n^f^^^^n
"BLD",552,4,"B",991.8,991.8)

"BLD",552,"ABNS",0)
^9.66A^17^5
"BLD",552,"ABNS",1,0)
RGRS
"BLD",552,"ABNS",1,1,0)
^9.661A^^
"BLD",552,"ABNS",2,0)
RGMT
"BLD",552,"ABNS",2,1,0)
^9.661A^^
"BLD",552,"ABNS",15,0)
RGJC
"BLD",552,"ABNS",15,1,0)
^9.661A^^
"BLD",552,"ABNS",16,0)
RGJU
"BLD",552,"ABNS",16,1,0)
^9.661A^^
"BLD",552,"ABNS",17,0)
RGPD
"BLD",552,"ABNS",17,1,0)
^9.661A^^
"BLD",552,"ABNS","B","RGJC",15)

"BLD",552,"ABNS","B","RGJU",16)

"BLD",552,"ABNS","B","RGMT",2)

"BLD",552,"ABNS","B","RGPD",17)

"BLD",552,"ABNS","B","RGRS",1)

"BLD",552,"ABPKG")
^^
"BLD",552,"INIT")
PD^RGPDPST
"BLD",552,"KRN",0)
^9.67PA^8994^18
"BLD",552,"KRN",.4,0)
.4
"BLD",552,"KRN",.4,"NM",0)
^9.68A^^0
"BLD",552,"KRN",.401,0)
.401
"BLD",552,"KRN",.401,"NM",0)
^9.68A^^0
"BLD",552,"KRN",.402,0)
.402
"BLD",552,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",552,"KRN",.402,"NM",1,0)
RG MERGE    FILE #991.8^991.8^0
"BLD",552,"KRN",.402,"NM","B","RG MERGE    FILE #991.8",1)

"BLD",552,"KRN",.403,0)
.403
"BLD",552,"KRN",.403,"NM",0)
^9.68A^^
"BLD",552,"KRN",.5,0)
.5
"BLD",552,"KRN",.5,"NM",0)
^9.68A^^
"BLD",552,"KRN",.84,0)
.84
"BLD",552,"KRN",.84,"NM",0)
^9.68A^^
"BLD",552,"KRN",3.6,0)
3.6
"BLD",552,"KRN",3.6,"NM",0)
^9.68A^2^1
"BLD",552,"KRN",3.6,"NM",2,0)
RG CIRN DEMOGRAPHIC ISSUES^^0
"BLD",552,"KRN",3.6,"NM","B","RG CIRN DEMOGRAPHIC ISSUES",2)

"BLD",552,"KRN",3.8,0)
3.8
"BLD",552,"KRN",3.8,"NM",0)
^9.68A^17^2
"BLD",552,"KRN",3.8,"NM",16,0)
RG CIRN DEMOGRAPHIC ISSUES^^0
"BLD",552,"KRN",3.8,"NM",17,0)
RG CIRN HL7 PROBLEMS^^0
"BLD",552,"KRN",3.8,"NM","B","RG CIRN DEMOGRAPHIC ISSUES",16)

"BLD",552,"KRN",3.8,"NM","B","RG CIRN HL7 PROBLEMS",17)

"BLD",552,"KRN",9.2,0)
9.2
"BLD",552,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",552,"KRN",9.8,0)
9.8
"BLD",552,"KRN",9.8,"NM",0)
^9.68A^153^27
"BLD",552,"KRN",9.8,"NM",34,0)
RGRSDYN2^^0^B5883091
"BLD",552,"KRN",9.8,"NM",35,0)
RGRSPARS^^0^B40069784
"BLD",552,"KRN",9.8,"NM",36,0)
RGRSENS^^0^B7437712
"BLD",552,"KRN",9.8,"NM",39,0)
RGRSUTIL^^0^B6067828
"BLD",552,"KRN",9.8,"NM",43,0)
RGRSZZPT^^0^B1077869
"BLD",552,"KRN",9.8,"NM",54,0)
RGRSMSH^^0^B1382514
"BLD",552,"KRN",9.8,"NM",56,0)
RGJUSITE^^0^B878481
"BLD",552,"KRN",9.8,"NM",84,0)
RGRSBULL^^0^B32274652
"BLD",552,"KRN",9.8,"NM",85,0)
RGRSUTL2^^0^B18502967
"BLD",552,"KRN",9.8,"NM",89,0)
RGRSDYN^^0^B5847609
"BLD",552,"KRN",9.8,"NM",90,0)
RGRSDYN1^^0^B17468649
"BLD",552,"KRN",9.8,"NM",91,0)
RGRSPAR1^^0^B949320
"BLD",552,"KRN",9.8,"NM",101,0)
RGMTAUD^^0^B13445152
"BLD",552,"KRN",9.8,"NM",134,0)
RGRSPAR2^^0^B5893991
"BLD",552,"KRN",9.8,"NM",137,0)
RGMTAUDP^^0^B35467684
"BLD",552,"KRN",9.8,"NM",138,0)
RGMTTFL^^0^B14814708
"BLD",552,"KRN",9.8,"NM",139,0)
RGRSPT^^0^B15701822
"BLD",552,"KRN",9.8,"NM",140,0)
RGRSPARM^^0^B429127
"BLD",552,"KRN",9.8,"NM",143,0)
RGJCTS01^^0^B1793488
"BLD",552,"KRN",9.8,"NM",146,0)
RGRSBUL1^^0^B16213443
"BLD",552,"KRN",9.8,"NM",147,0)
RGMTDPCT^^0^B18961820
"BLD",552,"KRN",9.8,"NM",148,0)
RGMTDPSC^^0^B20971775
"BLD",552,"KRN",9.8,"NM",149,0)
RGPRELIG^^0^B8053996
"BLD",552,"KRN",9.8,"NM",150,0)
RGPRSSN^^0^B29982029
"BLD",552,"KRN",9.8,"NM",151,0)
RGRSWPT^^0^B4114330
"BLD",552,"KRN",9.8,"NM",152,0)
RGVCCMR1^^0^B41493047
"BLD",552,"KRN",9.8,"NM",153,0)
RGVCCMR2^^0^B31191851
"BLD",552,"KRN",9.8,"NM","B","RGJCTS01",143)

"BLD",552,"KRN",9.8,"NM","B","RGJUSITE",56)

"BLD",552,"KRN",9.8,"NM","B","RGMTAUD",101)

"BLD",552,"KRN",9.8,"NM","B","RGMTAUDP",137)

"BLD",552,"KRN",9.8,"NM","B","RGMTDPCT",147)

"BLD",552,"KRN",9.8,"NM","B","RGMTDPSC",148)

"BLD",552,"KRN",9.8,"NM","B","RGMTTFL",138)

"BLD",552,"KRN",9.8,"NM","B","RGPRELIG",149)

"BLD",552,"KRN",9.8,"NM","B","RGPRSSN",150)

"BLD",552,"KRN",9.8,"NM","B","RGRSBUL1",146)

"BLD",552,"KRN",9.8,"NM","B","RGRSBULL",84)

"BLD",552,"KRN",9.8,"NM","B","RGRSDYN",89)

"BLD",552,"KRN",9.8,"NM","B","RGRSDYN1",90)

"BLD",552,"KRN",9.8,"NM","B","RGRSDYN2",34)

"BLD",552,"KRN",9.8,"NM","B","RGRSENS",36)

"BLD",552,"KRN",9.8,"NM","B","RGRSMSH",54)

"BLD",552,"KRN",9.8,"NM","B","RGRSPAR1",91)

"BLD",552,"KRN",9.8,"NM","B","RGRSPAR2",134)

"BLD",552,"KRN",9.8,"NM","B","RGRSPARM",140)

"BLD",552,"KRN",9.8,"NM","B","RGRSPARS",35)

"BLD",552,"KRN",9.8,"NM","B","RGRSPT",139)

"BLD",552,"KRN",9.8,"NM","B","RGRSUTIL",39)

"BLD",552,"KRN",9.8,"NM","B","RGRSUTL2",85)

"BLD",552,"KRN",9.8,"NM","B","RGRSWPT",151)

"BLD",552,"KRN",9.8,"NM","B","RGRSZZPT",43)

"BLD",552,"KRN",9.8,"NM","B","RGVCCMR1",152)

"BLD",552,"KRN",9.8,"NM","B","RGVCCMR2",153)

"BLD",552,"KRN",19,0)
19
"BLD",552,"KRN",19,"NM",0)
^9.68A^73^18
"BLD",552,"KRN",19,"NM",16,0)
RG MERGE EDIT PARAMETER^^0
"BLD",552,"KRN",19,"NM",17,0)
RG MERGE PATIENT^^0
"BLD",552,"KRN",19,"NM",34,0)
RGINIT MENU^^0
"BLD",552,"KRN",19,"NM",35,0)
RG ADMIN COORD MENU^^0
"BLD",552,"KRN",19,"NM",36,0)
RG ADMIN USER MENU^^0
"BLD",552,"KRN",19,"NM",37,0)
RG IRM MENU^^0
"BLD",552,"KRN",19,"NM",57,0)
RG TRAN/AUD AUD REP^^0
"BLD",552,"KRN",19,"NM",60,0)
RG CIRN PROCESS CONTROL^^0
"BLD",552,"KRN",19,"NM",63,0)
RGMGR^^0
"BLD",552,"KRN",19,"NM",64,0)
RGMT AUDIT TF STATISTICS^^0
"BLD",552,"KRN",19,"NM",66,0)
RGMT AUDIT PRINT^^0
"BLD",552,"KRN",19,"NM",67)
^^^
"BLD",552,"KRN",19,"NM",67,0)
RGCIRN CMOR INDIV^^4
"BLD",552,"KRN",19,"NM",68)
^^^
"BLD",552,"KRN",19,"NM",68,0)
RGCIRN CMOR MAIN^^4
"BLD",552,"KRN",19,"NM",69)
^^^
"BLD",552,"KRN",19,"NM",69,0)
RGPR PRE-IMP MENU^^4
"BLD",552,"KRN",19,"NM",70,0)
RGCIRN CMOR USER MENU^^0
"BLD",552,"KRN",19,"NM",71,0)
VAFC EXCEPTION HANDLER^^0
"BLD",552,"KRN",19,"NM",72,0)
VAFC EXCEPTION NOTIFIER^^0
"BLD",552,"KRN",19,"NM",73,0)
XU USER SIGN-ON^^2
"BLD",552,"KRN",19,"NM","B","RG ADMIN COORD MENU",35)

"BLD",552,"KRN",19,"NM","B","RG ADMIN USER MENU",36)

"BLD",552,"KRN",19,"NM","B","RG CIRN PROCESS CONTROL",60)

"BLD",552,"KRN",19,"NM","B","RG IRM MENU",37)

"BLD",552,"KRN",19,"NM","B","RG MERGE EDIT PARAMETER",16)

"BLD",552,"KRN",19,"NM","B","RG MERGE PATIENT",17)

"BLD",552,"KRN",19,"NM","B","RG TRAN/AUD AUD REP",57)

"BLD",552,"KRN",19,"NM","B","RGCIRN CMOR INDIV",67)

"BLD",552,"KRN",19,"NM","B","RGCIRN CMOR MAIN",68)

"BLD",552,"KRN",19,"NM","B","RGCIRN CMOR USER MENU",70)

"BLD",552,"KRN",19,"NM","B","RGINIT MENU",34)

"BLD",552,"KRN",19,"NM","B","RGMGR",63)

"BLD",552,"KRN",19,"NM","B","RGMT AUDIT PRINT",66)

"BLD",552,"KRN",19,"NM","B","RGMT AUDIT TF STATISTICS",64)

"BLD",552,"KRN",19,"NM","B","RGPR PRE-IMP MENU",69)

"BLD",552,"KRN",19,"NM","B","VAFC EXCEPTION HANDLER",71)

"BLD",552,"KRN",19,"NM","B","VAFC EXCEPTION NOTIFIER",72)

"BLD",552,"KRN",19,"NM","B","XU USER SIGN-ON",73)

"BLD",552,"KRN",19.1,0)
19.1
"BLD",552,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",552,"KRN",101,0)
101
"BLD",552,"KRN",101,"NM",0)
^9.68A^8^4
"BLD",552,"KRN",101,"NM",1,0)
VAFC ADT-A04 SERVER^^3
"BLD",552,"KRN",101,"NM",2,0)
VAFC ADT-A08 SERVER^^3
"BLD",552,"KRN",101,"NM",8,0)
RG ADT-A04 CLIENT^^0
"BLD",552,"KRN",101,"NM",10,0)
RG ADT-A08 CLIENT^^0
"BLD",552,"KRN",101,"NM","B","RG ADT-A04 CLIENT",8)

"BLD",552,"KRN",101,"NM","B","RG ADT-A08 CLIENT",10)

"BLD",552,"KRN",101,"NM","B","VAFC ADT-A04 SERVER",1)

"BLD",552,"KRN",101,"NM","B","VAFC ADT-A08 SERVER",2)

"BLD",552,"KRN",409.61,0)
409.61
"BLD",552,"KRN",409.61,"NM",0)
^9.68A^^0
"BLD",552,"KRN",771,0)
771
"BLD",552,"KRN",771,"NM",0)
^9.68A^2^1
"BLD",552,"KRN",771,"NM",2,0)
RG CIRN^^0
"BLD",552,"KRN",771,"NM","B","RG CIRN",2)

"BLD",552,"KRN",869.2,0)
869.2
"BLD",552,"KRN",869.2,"NM",0)
^9.68A^^0
"BLD",552,"KRN",870,0)
870
"BLD",552,"KRN",870,"NM",0)
^9.68A^^0
"BLD",552,"KRN",8994,0)
8994
"BLD",552,"KRN",8994,"NM",0)
^9.68A^^
"BLD",552,"KRN","B",.4,.4)

"BLD",552,"KRN","B",.401,.401)

"BLD",552,"KRN","B",.402,.402)

"BLD",552,"KRN","B",.403,.403)

"BLD",552,"KRN","B",.5,.5)

"BLD",552,"KRN","B",.84,.84)

"BLD",552,"KRN","B",3.6,3.6)

"BLD",552,"KRN","B",3.8,3.8)

"BLD",552,"KRN","B",9.2,9.2)

"BLD",552,"KRN","B",9.8,9.8)

"BLD",552,"KRN","B",19,19)

"BLD",552,"KRN","B",19.1,19.1)

"BLD",552,"KRN","B",101,101)

"BLD",552,"KRN","B",409.61,409.61)

"BLD",552,"KRN","B",771,771)

"BLD",552,"KRN","B",869.2,869.2)

"BLD",552,"KRN","B",870,870)

"BLD",552,"KRN","B",8994,8994)

"BLD",552,"PRE")
RGPDENV
"BLD",552,"QUES",0)
^9.62^^
"BLD",552,"REQB",0)
^9.611^5^5
"BLD",552,"REQB",1,0)
CLINICAL INFO RESOURCE NETWORK 0.5^2
"BLD",552,"REQB",2,0)
DG*5.3*149^2
"BLD",552,"REQB",3,0)
RUN TIME LIBRARY 2.1^2
"BLD",552,"REQB",4,0)
EXTENSIBLE EDITOR 2.6^2
"BLD",552,"REQB",5,0)
HL*1.6*51^2
"BLD",552,"REQB","B","CLINICAL INFO RESOURCE NETWORK 0.5",1)

"BLD",552,"REQB","B","DG*5.3*149",2)

"BLD",552,"REQB","B","EXTENSIBLE EDITOR 2.6",4)

"BLD",552,"REQB","B","HL*1.6*51",5)

"BLD",552,"REQB","B","RUN TIME LIBRARY 2.1",3)

"FIA",991.8)
CIRN SITE PARAMETER
"FIA",991.8,0)
^RGSITE(991.8,
"FIA",991.8,0,0)
991.8
"FIA",991.8,0,1)
y^n^f^^^^n
"FIA",991.8,0,10)

"FIA",991.8,0,11)

"FIA",991.8,0,"RLRO")

"FIA",991.8,0,"VR")
1.0^CIRN PATIENT DEMOGRAPHICS
"FIA",991.8,991.8)
0
"FIA",991.8,991.817)
0
"INIT")
PD^RGPDPST
"KRN",.402,1570,-1)
0^1
"KRN",.402,1570,0)
RG MERGE^2961112.1312^@^991.8^^@^2990407
"KRN",.402,1570,"DR",1,991.8)
11;
"KRN",3.6,90,-1)
0^2
"KRN",3.6,90,0)
RG CIRN DEMOGRAPHIC ISSUES^NOTIFICATION FROM CIRN PACKAGE
"KRN",3.6,90,1,0)
^^3^3^2990113^^^^
"KRN",3.6,90,1,1,0)
An event has occurred on your system which may require further action.
"KRN",3.6,90,1,2,0)
 
"KRN",3.6,90,1,3,0)
 
"KRN",3.8,104,-1)
0^16
"KRN",3.8,104,0)
RG CIRN DEMOGRAPHIC ISSUES^PU^^^^0^
"KRN",3.8,104,2,0)
^^4^4^2990223^^^
"KRN",3.8,104,2,1,0)
This mail group should contain person(s) responsible for ensuring
"KRN",3.8,104,2,2,0)
the integrity of the Patient Information Management System (PIMS)
"KRN",3.8,104,2,3,0)
data.  The members of this group will be notified upon login that
"KRN",3.8,104,2,4,0)
there are patients awaiting review.
"KRN",3.8,106,-1)
0^17
"KRN",3.8,106,0)
RG CIRN HL7 PROBLEMS^PU^y^^^0^
"KRN",3.8,106,2,0)
^^2^2^2990216^^^
"KRN",3.8,106,2,1,0)
This is the mail group that will receive notifications of problems that
"KRN",3.8,106,2,2,0)
CIRN has when interacting with the VISTA HL7 package.
"KRN",19,4718,-1)
2^73
"KRN",19,4718,0)
XU USER SIGN-ON^User sign-on event^^X^12541^^^^^^^^^
"KRN",19,4718,10,0)
^19.01IP^2^1
"KRN",19,4718,10,2,0)
5634
"KRN",19,4718,10,2,"^")
VAFC EXCEPTION NOTIFIER
"KRN",19,4718,"U")
USER SIGN-ON EVENT
"KRN",19,5488,-1)
0^71
"KRN",19,5488,0)
VAFC EXCEPTION HANDLER^Patient Data Review^^R^^^^^^^^REGISTRATION
"KRN",19,5488,1,0)
^^4^4^2990201^^^^
"KRN",19,5488,1,1,0)
This option is used to review demographic data that is logged 
"KRN",19,5488,1,2,0)
into the PATIENT DATA EXCEPTION file (#391.98) from other sites.
"KRN",19,5488,1,3,0)
It allows a user to upload or merge the data into the receiving
"KRN",19,5488,1,4,0)
site's database.
"KRN",19,5488,25)
EN^VAFCEHLM
"KRN",19,5488,"U")
PATIENT DATA REVIEW
"KRN",19,5492,-1)
0^16
"KRN",19,5492,0)
RG MERGE EDIT PARAMETER^Edit Merge Parameter^^R^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",19,5492,1,0)
^^3^3^2981020^^^^
"KRN",19,5492,1,1,0)
This option allows a user to edit the parameter that controls the Auto
"KRN",19,5492,1,2,0)
merge functionality.  This parameter will have no effect at a non owner
"KRN",19,5492,1,3,0)
site.
"KRN",19,5492,25)
EDTMRG^RGJUSITE
"KRN",19,5492,"U")
EDIT MERGE PARAMETER
"KRN",19,5493,-1)
0^17
"KRN",19,5493,0)
RG MERGE PATIENT^Patient Merge Utilities^^M^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",19,5493,1,0)
^^3^3^2990105^^^^
"KRN",19,5493,1,1,0)
This menu contains the options that deal with the merging of patient 
"KRN",19,5493,1,2,0)
information.  It should also contain the option that allows the editing
"KRN",19,5493,1,3,0)
of the Auto merge parameter.
"KRN",19,5493,10,0)
^19.01IP^2^2
"KRN",19,5493,10,1,0)
5492
"KRN",19,5493,10,1,"^")
RG MERGE EDIT PARAMETER
"KRN",19,5493,10,2,0)
5488
"KRN",19,5493,10,2,"^")
VAFC EXCEPTION HANDLER
"KRN",19,5493,99)
57580,35396
"KRN",19,5493,"U")
PATIENT MERGE UTILITIES
"KRN",19,5634,-1)
0^72
"KRN",19,5634,0)
VAFC EXCEPTION NOTIFIER^Patient Review Notifier^^A^^^^^^^^REGISTRATION^^1
"KRN",19,5634,1,0)
^^2^2^2990127^^
"KRN",19,5634,1,1,0)
This option is used to notify members of the RG CIRN DEMOGRAPHIC 
"KRN",19,5634,1,2,0)
ISSUES Mail Group that there are patients awaiting review.
"KRN",19,5634,20)
D ^VAFCMGB4
"KRN",19,5634,"U")
PATIENT REVIEW NOTIFIER
"KRN",19,5658,-1)
0^60
"KRN",19,5658,0)
RG CIRN PROCESS CONTROL^STOP/SEND/SUSPEND CIRN messages^^R^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",19,5658,1,0)
^^13^13^2990105^^^^
"KRN",19,5658,1,1,0)
This option is used to edit the STOP CIRN MESSAGING field (#16)
"KRN",19,5658,1,2,0)
in the CIRN SITE PARAMETER file (#991.8), to STOP/SEND/SUSPEND messages.
"KRN",19,5658,1,3,0)
 
"KRN",19,5658,1,4,0)
STOP - should be used only to totally shutdown HL7 V2.3 and CIRN
"KRN",19,5658,1,5,0)
       messages. It should only be used under the direction of 
"KRN",19,5658,1,6,0)
       Technical Services.
"KRN",19,5658,1,7,0)
 
"KRN",19,5658,1,8,0)
SUSPEND - should be used in an emergency situation to suspend HL7 V2.3
"KRN",19,5658,1,9,0)
          and CIRN messages if the volume of messages is affecting
"KRN",19,5658,1,10,0)
          system performance. Technical Services should also be called
"KRN",19,5658,1,11,0)
          in this situation.
"KRN",19,5658,1,12,0)
 
"KRN",19,5658,1,13,0)
SEND - normal operating mode.
"KRN",19,5658,25)
EN^RGRSPARM
"KRN",19,5658,"U")
STOP/SEND/SUSPEND CIRN MESSAGE
"KRN",19,5660,-1)
0^63
"KRN",19,5660,0)
RGMGR^CIRN Master Menu^^M^^^^^^^^CLINICAL INFO RESOURCE NETWORK^^1
"KRN",19,5660,1,0)
^^3^3^2990319^^^^
"KRN",19,5660,1,1,0)
This is the primary CIRN menu that contains all other CIRN menus.
"KRN",19,5660,1,2,0)
The sub-menus will be assigned to other users as appropriate and
"KRN",19,5660,1,3,0)
are described in the Implementation Guide.
"KRN",19,5660,10,0)
^19.01IP^5^5
"KRN",19,5660,10,1,0)
5863^PRE^5
"KRN",19,5660,10,1,"^")
RGPR PRE-IMP MENU
"KRN",19,5660,10,2,0)
5661^NTL^10
"KRN",19,5660,10,2,"^")
RGINIT MENU
"KRN",19,5660,10,3,0)
5662^IRM^15
"KRN",19,5660,10,3,"^")
RG IRM MENU
"KRN",19,5660,10,4,0)
5663^CORD^20
"KRN",19,5660,10,4,"^")
RG ADMIN COORD MENU
"KRN",19,5660,10,5,0)
5664^ADU^25
"KRN",19,5660,10,5,"^")
RG ADMIN USER MENU
"KRN",19,5660,20)
D STATUS^RGEQDMN1
"KRN",19,5660,99)
57588,37801
"KRN",19,5660,"U")
CIRN MASTER MENU
"KRN",19,5661,-1)
0^34
"KRN",19,5661,0)
RGINIT MENU^CIRN Initialization Menu^^M^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",19,5661,1,0)
^^1^1^2990302^^
"KRN",19,5661,1,1,0)
This option provides a menu of all of the CIRN initialization options.
"KRN",19,5661,10,0)
^19.01IP^7^3
"KRN",19,5661,10,6,0)
5677^^5
"KRN",19,5661,10,6,"^")
RGCIRN CMOR MAIN
"KRN",19,5661,10.1)

"KRN",19,5661,99)
57660,32950
"KRN",19,5661,"U")
CIRN INITIALIZATION MENU
"KRN",19,5662,-1)
0^37
"KRN",19,5662,0)
RG IRM MENU^CIRN IRM Menu^^M^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",19,5662,1,0)
^^3^3^2990323^^^^
"KRN",19,5662,1,1,0)
This option provides the Information Resource Management (IRM) personnel
"KRN",19,5662,1,2,0)
with the options needed to maintain the background event queue processes
"KRN",19,5662,1,3,0)
and to view CIRN Health Level Seven (HL7) message exceptions.
"KRN",19,5662,10,0)
^19.01IP^2^2
"KRN",19,5662,99)
57799,55396
"KRN",19,5662,"U")
CIRN IRM MENU
"KRN",19,5663,-1)
0^35
"KRN",19,5663,0)
RG ADMIN COORD MENU^CIRN Patient Admin Coordinator Menu^^M^^^^^^^^CLINICAL INFO RESOURCE NETWORK^^^
"KRN",19,5663,1,0)
^^3^3^2990105^^^^
"KRN",19,5663,1,1,0)
The CIRN Patient Admin Coordinator Menu [RG ADMIN COORD MENU] options 
"KRN",19,5663,1,2,0)
allow control and monitoring of CMOR, subscription, and patient 
"KRN",19,5663,1,3,0)
data activities.
"KRN",19,5663,10,0)
^19.01IP^37^9
"KRN",19,5663,10,6,0)
5664^ADU^30
"KRN",19,5663,10,6,"^")
RG ADMIN USER MENU
"KRN",19,5663,10,26,0)
5493^PM^5
"KRN",19,5663,10,26,"^")
RG MERGE PATIENT
"KRN",19,5663,10,30,0)
5685^LOG^35
"KRN",19,5663,10,30,"^")
RG TRAN/AUD AUD REP
"KRN",19,5663,10,37,0)
5922^CMOR^25
"KRN",19,5663,10,37,"^")
RGCIRN CMOR USER MENU
"KRN",19,5663,10.1)

"KRN",19,5663,15)

"KRN",19,5663,99)
57588,45019
"KRN",19,5663,"U")
CIRN PATIENT ADMIN COORDINATOR
"KRN",19,5664,-1)
0^36
"KRN",19,5664,0)
RG ADMIN USER MENU^CIRN Patient Admin User Menu^^M^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",19,5664,1,0)
^^2^2^2990105^^^
"KRN",19,5664,1,1,0)
This option provides the Patient Admin Coordinator with the
"KRN",19,5664,1,2,0)
CIRN Patient Admin User Menu [RG ADMIN USER MENU].
"KRN",19,5664,10,0)
^19.01IP^2^2
"KRN",19,5664,10,1,0)
5488^^5
"KRN",19,5664,10,1,"^")
VAFC EXCEPTION HANDLER
"KRN",19,5664,99)
57588,45221
"KRN",19,5664,"U")
CIRN PATIENT ADMIN USER MENU
"KRN",19,5677,-1)
4^68
"KRN",19,5677,0)
RGCIRN CMOR MAIN
"KRN",19,5678,-1)
4^67
"KRN",19,5678,0)
RGCIRN CMOR INDIV
"KRN",19,5685,-1)
0^57
"KRN",19,5685,0)
RG TRAN/AUD AUD REP^Patient Audit Log Reports^^M^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",19,5685,1,0)
^^1^1^2981020^^^
"KRN",19,5685,1,1,0)
This menu contains options to monitor CIRN related data.
"KRN",19,5685,10,0)
^19.01IP^3^2
"KRN",19,5685,10,2,0)
5767^^10
"KRN",19,5685,10,2,"^")
RGMT AUDIT PRINT
"KRN",19,5685,10,3,0)
5768^^15
"KRN",19,5685,10,3,"^")
RGMT AUDIT TF STATISTICS
"KRN",19,5685,99)
57695,46149
"KRN",19,5685,"U")
PATIENT AUDIT LOG REPORTS
"KRN",19,5767,-1)
0^66
"KRN",19,5767,0)
RGMT AUDIT PRINT^Patient Audit File Print^^R^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",19,5767,1,0)
^^11^11^2971118^^^^
"KRN",19,5767,1,1,0)
This option prints information stored in the AUDIT file (#1.1) for 
"KRN",19,5767,1,2,0)
fields being audited in the PATIENT file (#2).  For a specified date 
"KRN",19,5767,1,3,0)
range, you can view all audited fields or selected fields.
"KRN",19,5767,1,4,0)
  
"KRN",19,5767,1,5,0)
If selected fields are viewed, you can choose to see data for all or 
"KRN",19,5767,1,6,0)
selected patients.  If all audited fields are viewed, you must 
"KRN",19,5767,1,7,0)
choose the patients to examine.
"KRN",19,5767,1,8,0)
  
"KRN",19,5767,1,9,0)
The report prints the patient name and DFN, date/time the field was 
"KRN",19,5767,1,10,0)
edited, the user who made the change, the field edited, the old 
"KRN",19,5767,1,11,0)
value, and the new value.  The right margin for this report is 80.
"KRN",19,5767,25)
RGMTAUDP
"KRN",19,5767,"U")
PATIENT AUDIT FILE PRINT
"KRN",19,5768,-1)
0^64
"KRN",19,5768,0)
RGMT AUDIT TF STATISTICS^Treating Facility List Statistics^^R^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",19,5768,1,0)
^^7^7^2971118^^
"KRN",19,5768,1,1,0)
This option prints a statistical breakdown of the entries in the 
"KRN",19,5768,1,2,0)
TREATING FACILITY LIST file (#391.91).  Data is available for the 
"KRN",19,5768,1,3,0)
following categories.
"KRN",19,5768,1,4,0)
   Number of unique patients
"KRN",19,5768,1,5,0)
   Number of patients assigned to each site
"KRN",19,5768,1,6,0)
   Number of single site patients for each site
"KRN",19,5768,1,7,0)
   Number of shared patients
"KRN",19,5768,25)
RGMTTFL
"KRN",19,5768,"U")
TREATING FACILITY LIST STATIST
"KRN",19,5863,-1)
4^69
"KRN",19,5863,0)
RGPR PRE-IMP MENU
"KRN",19,5922,-1)
0^70
"KRN",19,5922,0)
RGCIRN CMOR USER MENU^CMOR User Menu^^M^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",19,5922,1,0)
^^3^3^2990302^^^
"KRN",19,5922,1,1,0)
This menu contains options for CIRN Master of Record (CMOR) 
"KRN",19,5922,1,2,0)
for calculating individual scores, status of CMOR calculation,
"KRN",19,5922,1,3,0)
and scoring options based on CMOR scores.
"KRN",19,5922,10,0)
^19.01IP^4^4
"KRN",19,5922,10,1,0)
5678^IND^5
"KRN",19,5922,10,1,"^")
RGCIRN CMOR INDIV
"KRN",19,5922,99)
57588,47728
"KRN",19,5922,"U")
CMOR USER MENU
"KRN",101,1003,-1)
0^8
"KRN",101,1003,0)
RG ADT-A04 CLIENT^CIRN'S A04 CLIENT^^S^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1003,1,0)
^^4^4^2990414^^^^
"KRN",101,1003,1,1,0)
This client protocol processes Admission, Discharge, and Transfer (ADT)
"KRN",101,1003,1,2,0)
register a patient (event code A04) Health Level Seven (HL7) messages.
"KRN",101,1003,1,3,0)
This protocol also reroutes the messages to the CIRN Master Of Record
"KRN",101,1003,1,4,0)
(CMOR) and from the CMOR to all other subscribers.
"KRN",101,1003,15)

"KRN",101,1003,99)
57363,53002
"KRN",101,1003,770)
^RG CIRN^ADT^A04^^P^^^NE^2.3^ADT
"KRN",101,1003,771)
D ^RGRSPT
"KRN",101,1003,774)
D EN^RGRSDYN("RG ADT-A04 CLIENT",0)
"KRN",101,1022,-1)
3^1
"KRN",101,1022,0)
VAFC ADT-A04 SERVER^This protocol fires off of the PIMS Registration option^^E^^^^^^^^REGISTRATION
"KRN",101,1022,1,0)
^^2^2^2990303^^^
"KRN",101,1022,1,1,0)
This server protocol fires when a patient is registered. It generates a
"KRN",101,1022,1,2,0)
Health Level Seven (HL7) register a patient (event code A04) message.
"KRN",101,1022,10,0)
^101.01PA^6^4
"KRN",101,1022,10,5,0)
1003^^^
"KRN",101,1022,10,5,"^")
RG ADT-A04 CLIENT
"KRN",101,1022,99)
57737,45279
"KRN",101,1022,770)
VAFC PIMS^^ADT^A04^^P^^NE^NE^2.3^
"KRN",101,1047,-1)
3^2
"KRN",101,1047,0)
VAFC ADT-A08 SERVER^Registration's ADT-A08 Server Protocol^^E^^^^^^^^REGISTRATION
"KRN",101,1047,1,0)
^^3^3^2990326^^^^
"KRN",101,1047,1,1,0)
This server protocol fires when a patient record is updated.  It
"KRN",101,1047,1,2,0)
generates a Health Level Seven (HL7) update a patient (event code A08)
"KRN",101,1047,1,3,0)
  message.
"KRN",101,1047,10,0)
^101.01PA^6^4
"KRN",101,1047,10,5,0)
1048^^^
"KRN",101,1047,10,5,"^")
RG ADT-A08 CLIENT
"KRN",101,1047,99)
57737,45227
"KRN",101,1047,770)
VAFC PIMS^^ADT^A08^d^P^^NE^NE^2.3^
"KRN",101,1047,772)
Q
"KRN",101,1048,-1)
0^10
"KRN",101,1048,0)
RG ADT-A08 CLIENT^CIRN's ADT-A08 client protocol^^S^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1048,1,0)
^^4^4^2990211^^^
"KRN",101,1048,1,1,0)
This client protocol processes Admission, Discharge, and Transfer (ADT)
"KRN",101,1048,1,2,0)
update patient information (event code A08) Health Level Seven (HL7)
"KRN",101,1048,1,3,0)
messages.  This protocol also reroutes the messages to the CIRN Master
"KRN",101,1048,1,4,0)
Of Record (CMOR) and from the CMOR to all other subscribers.
"KRN",101,1048,99)
57180,38695
"KRN",101,1048,770)
^RG CIRN^ADT^A08^d^P^^^NE^2.3^ADT
"KRN",101,1048,771)
D ^RGRSPT
"KRN",101,1048,773)
^^^
"KRN",101,1048,774)
D EN^RGRSDYN("RG ADT-A08 CLIENT",0)
"KRN",771,22,-1)
0^2
"KRN",771,22,0)
RG CIRN^a^^RG CIRN HL7 PROBLEMS^^^USA
"KRN",771,22,"SEG",0)
^771.05P^1^1
"KRN",771,22,"SEG",1,0)
PID
"KRN",771,22,"SEG",1,"F")
1
"ORD",2,3.6)
3.6;2;1;;BUL^XPDTA1;;BULE1^XPDIA1;;;BULDEL^XPDIA1
"ORD",2,3.6,0)
BULLETIN
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1
"ORD",11,3.8,0)
MAIL GROUP
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",272,-1)
1^1
"PKG",272,0)
CLINICAL INFO RESOURCE NETWORK^RG^CIRN
"PKG",272,1,0)
^^1^1^2980714^^^^
"PKG",272,1,1,0)
Clinical Information Resource Network (CIRN)
"PKG",272,20,0)
^9.402P^^
"PKG",272,22,0)
^9.49I^1^1
"PKG",272,22,1,0)
1.0^2990428
"PKG",272,22,1,1,0)
^^1^1^2990507
"PKG",272,22,1,1,1,0)
CIRN Patient Demographics build.
"PKG",272,"VERSION")
1.0
"PRE")
RGPDENV
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
29
"RTN","RGJCTS01")
0^143^B1793488
"RTN","RGJCTS01",1,0)
RGJCTS01 ;SLC/TS-Subscription Control Startup Utility TO CMOR ;09/18/97
"RTN","RGJCTS01",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGJCTS01",3,0)
 ;IMPROVED FOR CMOR COMMUNICATION TS
"RTN","RGJCTS01",4,0)
INSERT(ZZHLDPT) ; pass dfn
"RTN","RGJCTS01",5,0)
 S ZZRGEV="SCN_REQ"
"RTN","RGJCTS01",6,0)
 K ZZFMLK,ZZTOLK
"RTN","RGJCTS01",7,0)
 ;setup for event stub
"RTN","RGJCTS01",8,0)
 S ZZHLINST=+$$KSP^XUPARAM("INST") ;who are we
"RTN","RGJCTS01",9,0)
 D LINK^HLUTIL3(ZZHLINST,.ZZFMLK) S ZZFMLK=$O(ZZFMLK(0)) Q:ZZFMLK<1
"RTN","RGJCTS01",10,0)
 S $P(ZZSTUB,U,1)=ZZFMLK(ZZFMLK)
"RTN","RGJCTS01",11,0)
 S ZZTOST=$$GETVCCI^MPIF001(ZZHLDPT) ;who owns him
"RTN","RGJCTS01",12,0)
 ;fix TS change to IEN
"RTN","RGJCTS01",13,0)
 S ZZTOST=$$LKUP^XUAF4(ZZTOST)
"RTN","RGJCTS01",14,0)
 D LINK^HLUTIL3(ZZTOST,.ZZTOLK) S ZZTOLK=$O(ZZTOLK(0)) Q:ZZTOLK<1
"RTN","RGJCTS01",15,0)
 S $P(ZZSTUB,U,2)=ZZTOLK(ZZTOLK)
"RTN","RGJCTS01",16,0)
 S ZZRGICN=$$GETICN^MPIF001(ZZHLDPT)
"RTN","RGJCTS01",17,0)
 S $P(ZZSTUB,U,3)=ZZRGICN
"RTN","RGJCTS01",18,0)
 S DIC="^DPT(",DIC(0)="NZ",X=ZZHLDPT D ^DIC Q:Y'>0  S ZZPNM=$P(Y,U,2)
"RTN","RGJCTS01",19,0)
 S $P(ZZSTUB,U,4)=ZZPNM
"RTN","RGJCTS01",20,0)
 S $P(ZZSTUB,U,5)=0
"RTN","RGJCTS01",21,0)
 Q:ZZFMLK(ZZFMLK)=ZZTOLK(ZZTOLK)
"RTN","RGJCTS01",22,0)
 D EN^RGEQ(ZZRGEV,ZZSTUB)
"RTN","RGJCTS01",23,0)
 K ZZHLINST,ZZRGEV,ZZFMLK,ZZTOLK,ZZSTUB,ZZTOST,ZZRGICN,ZZPNM,X,Y,DIC
"RTN","RGJCTS01",24,0)
 Q
"RTN","RGJUSITE")
0^56^B878481
"RTN","RGJUSITE",1,0)
RGJUSITE ;ALB/JLU-routine to hold api for the CIRN parameter file 991.8 ;01-OCT-1996
"RTN","RGJUSITE",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGJUSITE",3,0)
 ;
"RTN","RGJUSITE",4,0)
AUTO() ;function call to check the merge parameter
"RTN","RGJUSITE",5,0)
 ;INPUT  there are no inputs necessary for this function call
"RTN","RGJUSITE",6,0)
 ;OUTPUTS this function call will return 1 if the parameter is set to
"RTN","RGJUSITE",7,0)
 ;        yes auto merge. A zero will be returned if the parameter does
"RTN","RGJUSITE",8,0)
 ;        not exist or it is set to zero for no auto merge.
"RTN","RGJUSITE",9,0)
 ;
"RTN","RGJUSITE",10,0)
 N IEN,VAL,AUTO
"RTN","RGJUSITE",11,0)
 S AUTO=0
"RTN","RGJUSITE",12,0)
 S IEN=$O(^RGSITE(991.8,"B",1,0))
"RTN","RGJUSITE",13,0)
 G AUTOQ:'IEN
"RTN","RGJUSITE",14,0)
 S VAL=$P($G(^RGSITE(991.8,IEN,1)),U,1)
"RTN","RGJUSITE",15,0)
 S AUTO=$S(VAL:1,1:0)
"RTN","RGJUSITE",16,0)
 ;
"RTN","RGJUSITE",17,0)
AUTOQ Q AUTO
"RTN","RGJUSITE",18,0)
 ;
"RTN","RGJUSITE",19,0)
SEND() ;this function call is used to determine if the CIRN messages should
"RTN","RGJUSITE",20,0)
 ;be fired.  It will check the parameter 'stop cirn messaging' in 991.8
"RTN","RGJUSITE",21,0)
 ;INPUTS - There are no inputs.
"RTN","RGJUSITE",22,0)
 ;OUTPUTS - This function will return a zero if the messages are
"RTN","RGJUSITE",23,0)
 ;          to be stopped.
"RTN","RGJUSITE",24,0)
 ;          A positive one will be returned if the messages are 
"RTN","RGJUSITE",25,0)
 ;          not to be stopped.
"RTN","RGJUSITE",26,0)
 ;          A two will be returned for suspend.
"RTN","RGJUSITE",27,0)
 ;
"RTN","RGJUSITE",28,0)
 N VAL,IEN
"RTN","RGJUSITE",29,0)
 S STOP=1
"RTN","RGJUSITE",30,0)
 S IEN=$O(^RGSITE(991.8,"B",1,0))
"RTN","RGJUSITE",31,0)
 G STOPQ:'IEN
"RTN","RGJUSITE",32,0)
 S VAL=$P($G(^RGSITE(991.8,IEN,1)),U,6)
"RTN","RGJUSITE",33,0)
 S STOP=$S('VAL:0,1:1,2:2)
"RTN","RGJUSITE",34,0)
 ;
"RTN","RGJUSITE",35,0)
STOPQ Q STOP
"RTN","RGJUSITE",36,0)
 ;
"RTN","RGJUSITE",37,0)
EDTMRG ;entry point to edit the merge parameter.
"RTN","RGJUSITE",38,0)
 N DA,DR,DIE
"RTN","RGJUSITE",39,0)
 W !!
"RTN","RGJUSITE",40,0)
 S DA=1
"RTN","RGJUSITE",41,0)
 S DIE="^RGSITE(991.8,"
"RTN","RGJUSITE",42,0)
 S DR="[RG MERGE]"
"RTN","RGJUSITE",43,0)
 D ^DIE
"RTN","RGJUSITE",44,0)
 K DIE
"RTN","RGJUSITE",45,0)
 Q
"RTN","RGJUSITE",46,0)
 ;
"RTN","RGMTAUD")
0^101^B13445152
"RTN","RGMTAUD",1,0)
RGMTAUD ;BIR/CML-CIRN AUDIT File Print for a Specified Patient;01/06/99
"RTN","RGMTAUD",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGMTAUD",3,0)
 S QFLG=1
"RTN","RGMTAUD",4,0)
BEGIN ;
"RTN","RGMTAUD",5,0)
 W !!,"This option prints information from the AUDIT file (#1.1) for a"
"RTN","RGMTAUD",6,0)
 W !,"selected patient and date range."
"RTN","RGMTAUD",7,0)
 W !!,"For the PATIENT file (#2) entry selected, the report prints the"
"RTN","RGMTAUD",8,0)
 W !,"patient name and RGDFN, date/time the field was edited, the user who"
"RTN","RGMTAUD",9,0)
 W !,"made the change, the field edited, the old value, and the new value."
"RTN","RGMTAUD",10,0)
ASK1 ;Ask for PATIENT
"RTN","RGMTAUD",11,0)
 W !
"RTN","RGMTAUD",12,0)
 S DIC="^DPT(",DIC(0)="QEAM",DIC("A")="Select PATIENT: " D ^DIC K DIC G:Y<0 QUIT S RGDFN=+Y
"RTN","RGMTAUD",13,0)
 I '$O(^DIA(2,"B",RGDFN,0)) W !!,"This patient has no audit data available for any date." G ASK1
"RTN","RGMTAUD",14,0)
ASK2 ;Ask for Date Range
"RTN","RGMTAUD",15,0)
 I '$D(RGDFN)&($D(DFN)) S RGDFN=DFN
"RTN","RGMTAUD",16,0)
 W !!,"Enter date range for data to be included in report."
"RTN","RGMTAUD",17,0)
 K DIR,DIRUT,DTOUT,DUOUT S DIR(0)="DAO^:DT:EPX",DIR("A")="Beginning Date:  " D ^DIR K DIR G:$D(DIRUT) QUIT
"RTN","RGMTAUD",18,0)
 S RGBDT=Y,DIR(0)="DAO^"_RGBDT_":DT:EPX",DIR("A")="Ending Date:  " D ^DIR K DIR G:$D(DIRUT) QUIT S RGEDT=Y
"RTN","RGMTAUD",19,0)
DEV W !!,"The right margin for this report is 80.",!!
"RTN","RGMTAUD",20,0)
 S ZTSAVE("RGBDT")="",ZTSAVE("RGEDT")="",ZTSAVE("RGDFN")=""
"RTN","RGMTAUD",21,0)
 D EN^XUTMDEVQ("START^RGMTAUD","CIRN - Print AUDIT File Data for a Specific Patient") I 'POP Q
"RTN","RGMTAUD",22,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","RGMTAUD",23,0)
 G QUIT
"RTN","RGMTAUD",24,0)
START ;
"RTN","RGMTAUD",25,0)
 K ^TMP("RGMTAUD",$J) S U="^"
"RTN","RGMTAUD",26,0)
 ;
"RTN","RGMTAUD",27,0)
LOOP ;Loop on "B" xref of the AUDIT file
"RTN","RGMTAUD",28,0)
 S STOP=RGEDT+1
"RTN","RGMTAUD",29,0)
 S IEN=0 F  S IEN=$O(^DIA(2,"B",RGDFN,IEN)) Q:'IEN  D
"RTN","RGMTAUD",30,0)
 .I $D(^DIA(2,IEN,0)) S EDITDT=$P(^(0),U,2) I EDITDT>RGBDT,EDITDT<STOP D
"RTN","RGMTAUD",31,0)
 ..S ^TMP("RGMTAUD",$J,EDITDT,IEN)=""
"RTN","RGMTAUD",32,0)
PRT ;Print report
"RTN","RGMTAUD",33,0)
 S (PG,QFLG)=0,U="^",$P(LN,"-",81)="",SITE=$P($$SITE^VASITE(),U,2)
"RTN","RGMTAUD",34,0)
 S PRGBDT=$$FMTE^XLFDT(RGBDT),PRGEDT=$$FMTE^XLFDT(RGEDT)
"RTN","RGMTAUD",35,0)
 D NOW^%DTC S HDT=$$FMTE^XLFDT($E(%,1,12))
"RTN","RGMTAUD",36,0)
 D HDR
"RTN","RGMTAUD",37,0)
 I '$O(^TMP("RGMTAUD",$J,0)) W !!,"No audit data found in this date range for this patient." G QUIT
"RTN","RGMTAUD",38,0)
 S EDITDT=0 F  S EDITDT=$O(^TMP("RGMTAUD",$J,EDITDT)) Q:QFLG  Q:'EDITDT  D
"RTN","RGMTAUD",39,0)
 .S IEN=0 F  S IEN=$O(^TMP("RGMTAUD",$J,EDITDT,IEN)) Q:QFLG  Q:'IEN  D
"RTN","RGMTAUD",40,0)
 ..S PRTDT=$$FMTE^XLFDT($E(EDITDT,1,12))
"RTN","RGMTAUD",41,0)
 ..S IEN0=^DIA(2,IEN,0)
"RTN","RGMTAUD",42,0)
 ..K RGARR D FIELD^DID(2,$P(IEN0,U,3),"","LABEL","RGARR")
"RTN","RGMTAUD",43,0)
 ..S FLD=$G(RGARR("LABEL"))  Q:FLD=""
"RTN","RGMTAUD",44,0)
 ..S USER=$P(IEN0,U,4)
"RTN","RGMTAUD",45,0)
 ..I 'USER S USER="UNKNOWN"
"RTN","RGMTAUD",46,0)
 ..I USER'="UNKNOWN" S DIC="^VA(200,",DIC(0)="MZO",X="`"_USER D ^DIC S USER=$P(Y,"^",2)
"RTN","RGMTAUD",47,0)
 ..S OLD=$G(^DIA(2,IEN,2)) I OLD']"" S OLD="<no previous value>"
"RTN","RGMTAUD",48,0)
 ..S NEW=$G(^DIA(2,IEN,3)) I NEW']"" S NEW="<no current value>"
"RTN","RGMTAUD",49,0)
 ..D:$Y+4>IOSL HDR Q:QFLG  W !!,PRTDT,?20,FLD,?51,USER,!?20,OLD," / ",NEW
"RTN","RGMTAUD",50,0)
QUIT ;
"RTN","RGMTAUD",51,0)
 I $E(IOST,1,2)="C-"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","RGMTAUD",52,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","RGMTAUD",53,0)
 K ^TMP("RGMTAUD",$J)
"RTN","RGMTAUD",54,0)
 K %I,C,RGDFN,EDITDT,FLD,HDT,IEN,IEN0,JJ,LN,NEW,OLD,PG,PRGBDT,PRGEDT,PRTDT,QFLG,RGARR,RGBDT,RGEDT,SITE,SS,STOP,USER,X,Y,ZTSK
"RTN","RGMTAUD",55,0)
 D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","RGMTAUD",56,0)
HDR ;HEADER
"RTN","RGMTAUD",57,0)
 I $E(IOST,1,2)="C-" S SS=22-$Y F JJ=1:1:SS W !
"RTN","RGMTAUD",58,0)
 I $E(IOST,1,2)="C-",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","RGMTAUD",59,0)
 S PG=PG+1 W:$Y!($E(IOST,1,2)="C-") @IOF
"RTN","RGMTAUD",60,0)
 W !,"PATIENT AUDIT LIST at ",SITE," on ",HDT,?72,"Page: ",PG
"RTN","RGMTAUD",61,0)
 W !,"Patient: ",$P(^DPT(RGDFN,0),U)," (DFN #",RGDFN,")"
"RTN","RGMTAUD",62,0)
 W !,"Date Range: ",PRGBDT," to ",PRGEDT
"RTN","RGMTAUD",63,0)
 W !!,"Date/Time Edited",?20,"Field Edited",?51,"Edited By",!?20,"Old Value / New Value",!,LN
"RTN","RGMTAUD",64,0)
 Q
"RTN","RGMTAUDP")
0^137^B35467684
"RTN","RGMTAUDP",1,0)
RGMTAUDP ;BIR/CML,PTD-CIRN AUDIT File Print of Patient Data;01/06/99
"RTN","RGMTAUDP",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGMTAUDP",3,0)
BEGIN ;
"RTN","RGMTAUDP",4,0)
 S QFLG=1
"RTN","RGMTAUDP",5,0)
 W @IOF
"RTN","RGMTAUDP",6,0)
 W !,"This option prints information stored in the AUDIT file (#1.1)"
"RTN","RGMTAUDP",7,0)
 W !,"for fields being audited in the PATIENT file (#2).  For a specified"
"RTN","RGMTAUDP",8,0)
 W !,"date range, you can view all audited fields or selected fields."
"RTN","RGMTAUDP",9,0)
 W !!,"If selected fields are viewed, you can choose to see data for all or"
"RTN","RGMTAUDP",10,0)
 W !,"selected patients.  If all audited fields are viewed, you must choose"
"RTN","RGMTAUDP",11,0)
 W !,"the patients to examine."
"RTN","RGMTAUDP",12,0)
 ;
"RTN","RGMTAUDP",13,0)
ASKFLD ;Ask for Data Fields
"RTN","RGMTAUDP",14,0)
 I '$O(^DD(2,"AUDIT",0)) W !!,"No fields are currently being audited in the PATIENT file (#2)." G QUIT
"RTN","RGMTAUDP",15,0)
 W !
"RTN","RGMTAUDP",16,0)
 K DIR S DIR(0)="SAM^A:ALL;S:SELECTED;"
"RTN","RGMTAUDP",17,0)
 S DIR("A")="Do you want to see (A)LL or (S)ELECTED audited fields? "
"RTN","RGMTAUDP",18,0)
 S DIR("B")="A"
"RTN","RGMTAUDP",19,0)
 S DIR("?",1)="Enter:"
"RTN","RGMTAUDP",20,0)
 S DIR("?",2)=" ""A"" to see ALL audited fields in the PATIENT file (#2)."
"RTN","RGMTAUDP",21,0)
 S DIR("?")=" ""S"" to select specific audited fields."
"RTN","RGMTAUDP",22,0)
 D ^DIR G:$D(DIRUT) QUIT S ANS1=Y
"RTN","RGMTAUDP",23,0)
FLDLOOP ;
"RTN","RGMTAUDP",24,0)
 W ! K FLD
"RTN","RGMTAUDP",25,0)
 ;stuff all fields
"RTN","RGMTAUDP",26,0)
 I ANS1="A" D  G ASKPAT
"RTN","RGMTAUDP",27,0)
 .S FLD=0 F  S FLD=$O(^DD(2,"AUDIT",FLD)) Q:'FLD  S FLD(FLD)=""
"RTN","RGMTAUDP",28,0)
 ;ask for specific fields
"RTN","RGMTAUDP",29,0)
 K DIR S DIR(0)="NAOC^.0000001:9999999:7^K:'$D(^DD(2,""AUDIT"",X)) X S RGERR=1"
"RTN","RGMTAUDP",30,0)
 S DIR("A")="Select FIELD NUMBER of audited field (enter ""?"" for list): "
"RTN","RGMTAUDP",31,0)
 S DIR("?")="^D FLDLIST^RGMTAUDP"
"RTN","RGMTAUDP",32,0)
 F QQ=0:0 S RGERR=0 D ^DIR Q:$D(DIRUT)  S FLD(+Y)=""
"RTN","RGMTAUDP",33,0)
 ;
"RTN","RGMTAUDP",34,0)
ASKPAT ;Ask for Patient
"RTN","RGMTAUDP",35,0)
 I '$O(FLD(0))!($D(DUOUT)) S QFLG=1 G QUIT
"RTN","RGMTAUDP",36,0)
 I ANS1="A" S ANS2="S" G PATLOOP
"RTN","RGMTAUDP",37,0)
 K DIR S DIR(0)="SAM^A:ALL;S:SELECTED;"
"RTN","RGMTAUDP",38,0)
 S DIR("A")="Do you want to see audited data for (A)LL or (S)ELECTED patients? "
"RTN","RGMTAUDP",39,0)
 S DIR("B")="S"
"RTN","RGMTAUDP",40,0)
 S DIR("?",1)="Enter:"
"RTN","RGMTAUDP",41,0)
 S DIR("?",2)=" ""A"" to see audited fields for ALL patients."
"RTN","RGMTAUDP",42,0)
 S DIR("?")=" ""S"" to select specific patients(s)."
"RTN","RGMTAUDP",43,0)
 W ! D ^DIR G:$D(DIRUT) QUIT S ANS2=Y
"RTN","RGMTAUDP",44,0)
PATLOOP ;
"RTN","RGMTAUDP",45,0)
 W ! K PAT
"RTN","RGMTAUDP",46,0)
 I ANS2="A" S PAT("ALL")="" G ASKDT
"RTN","RGMTAUDP",47,0)
 ;ask for specific patient(s)
"RTN","RGMTAUDP",48,0)
 F QQ=0:0 S DIC="^DPT(",DIC(0)="QEAM",DIC("A")="Select PATIENT: " D ^DIC K DIC Q:Y<0  S RGDFN=+Y D
"RTN","RGMTAUDP",49,0)
 .I '$O(^DIA(2,"B",RGDFN,0)) W $C(7),!?5,"This patient has no audit data available for any date." Q
"RTN","RGMTAUDP",50,0)
 .S PAT(RGDFN)=""
"RTN","RGMTAUDP",51,0)
 ;
"RTN","RGMTAUDP",52,0)
ASKDT ;Ask for Date Range
"RTN","RGMTAUDP",53,0)
 I '$D(PAT)!($D(DUOUT)) S QFLG=1 G QUIT
"RTN","RGMTAUDP",54,0)
 W !!,"Enter date range for data to be included in report."
"RTN","RGMTAUDP",55,0)
 K DIR,DIRUT,DTOUT,DUOUT S DIR(0)="DAO^:DT:EPX",DIR("A")="Beginning Date:  " D ^DIR K DIR G:$D(DIRUT) QUIT
"RTN","RGMTAUDP",56,0)
 S RGBDT=Y,DIR(0)="DAO^"_RGBDT_":DT:EPX",DIR("A")="Ending Date:  " D ^DIR K DIR G:$D(DIRUT) QUIT S RGEDT=Y
"RTN","RGMTAUDP",57,0)
DEV W !!,"The right margin for this report is 80.",!!
"RTN","RGMTAUDP",58,0)
 I ANS2="A" S IOP="Q" W "Because you selected ALL patients, you MUST queue this report.",!!
"RTN","RGMTAUDP",59,0)
 S ZTSAVE("RGBDT")="",ZTSAVE("RGEDT")="",ZTSAVE("ANS2")="",ZTSAVE("FLD(")="",ZTSAVE("PAT(")="",%ZIS("B")=""
"RTN","RGMTAUDP",60,0)
 D EN^XUTMDEVQ("START^RGMTAUDP","CIRN - Print AUDIT File Data from the PATIENT file",.ZTSAVE,.%ZIS) I 'POP Q
"RTN","RGMTAUDP",61,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","RGMTAUDP",62,0)
 S QFLG=1 G QUIT
"RTN","RGMTAUDP",63,0)
START ;
"RTN","RGMTAUDP",64,0)
 K ^TMP("RGMTAUDP",$J) S U="^"
"RTN","RGMTAUDP",65,0)
 S STOP=RGEDT+1
"RTN","RGMTAUDP",66,0)
 I ANS2="A" D
"RTN","RGMTAUDP",67,0)
 .S CNT=0
"RTN","RGMTAUDP",68,0)
 .S RGDFN=0 F  S RGDFN=$O(^DIA(2,"B",RGDFN)) Q:'RGDFN  S CNT=CNT+1 S:'(CNT#10000) ^TMP("RGMTAUDP",$J,"@@@@","CUR DFN")=RGDFN D LOOP
"RTN","RGMTAUDP",69,0)
 I ANS2="S" D
"RTN","RGMTAUDP",70,0)
 .S RGDFN=0 F  S RGDFN=$O(PAT(RGDFN)) Q:'RGDFN  D LOOP
"RTN","RGMTAUDP",71,0)
 G PRT
"RTN","RGMTAUDP",72,0)
 ;
"RTN","RGMTAUDP",73,0)
LOOP ;Loop on "B" xref of the AUDIT file
"RTN","RGMTAUDP",74,0)
 Q:'$D(^DPT(RGDFN,0))
"RTN","RGMTAUDP",75,0)
 S IEN=0 F  S IEN=$O(^DIA(2,"B",RGDFN,IEN)) Q:'IEN  D
"RTN","RGMTAUDP",76,0)
 .I $D(^DIA(2,IEN,0)) S IEN0=(^(0)),EDITDT=$P(IEN0,U,2) I EDITDT>RGBDT,EDITDT<STOP D
"RTN","RGMTAUDP",77,0)
 ..S FLD=$P(IEN0,U,3) I $D(FLD(FLD)) D
"RTN","RGMTAUDP",78,0)
 ...S PATNM=$P(^DPT(RGDFN,0),U)_U_RGDFN,^TMP("RGMTAUDP",$J,PATNM,EDITDT,IEN)=""
"RTN","RGMTAUDP",79,0)
 Q
"RTN","RGMTAUDP",80,0)
PRT ;Print report
"RTN","RGMTAUDP",81,0)
 S (PG,QFLG)=0,U="^",$P(LN,"-",81)="",SITE=$P($$SITE^VASITE(),U,2)
"RTN","RGMTAUDP",82,0)
 S PRGBDT=$$FMTE^XLFDT(RGBDT),PRGEDT=$$FMTE^XLFDT(RGEDT)
"RTN","RGMTAUDP",83,0)
 D NOW^%DTC S HDT=$$FMTE^XLFDT($E(%,1,12))
"RTN","RGMTAUDP",84,0)
 D HDR
"RTN","RGMTAUDP",85,0)
 I '$D(^TMP("RGMTAUDP",$J)) W !!,"No audit data found in this date range for specified parameters." G QUIT
"RTN","RGMTAUDP",86,0)
 S PATNM="@@@@" F  S PATNM=$O(^TMP("RGMTAUDP",$J,PATNM)) Q:PATNM=""  Q:QFLG  D
"RTN","RGMTAUDP",87,0)
 .D:$Y+4>IOSL HDR Q:QFLG
"RTN","RGMTAUDP",88,0)
 .W !!,"==> ",$P(PATNM,U),"  (DFN #",$P(PATNM,U,2),")"
"RTN","RGMTAUDP",89,0)
 .S EDITDT=0 F  S EDITDT=$O(^TMP("RGMTAUDP",$J,PATNM,EDITDT)) Q:QFLG  Q:'EDITDT  D
"RTN","RGMTAUDP",90,0)
 ..S IEN=0 F  S IEN=$O(^TMP("RGMTAUDP",$J,PATNM,EDITDT,IEN)) Q:QFLG  Q:'IEN  D
"RTN","RGMTAUDP",91,0)
 ...S PRTDT=$$FMTE^XLFDT($E(EDITDT,1,12))
"RTN","RGMTAUDP",92,0)
 ...S IEN0=^DIA(2,IEN,0)
"RTN","RGMTAUDP",93,0)
 ...K RGARR D FIELD^DID(2,$P(IEN0,U,3),"","LABEL","RGARR")
"RTN","RGMTAUDP",94,0)
 ...S FLD=$G(RGARR("LABEL"))  Q:FLD=""
"RTN","RGMTAUDP",95,0)
 ...S USER=$P(IEN0,U,4)
"RTN","RGMTAUDP",96,0)
 ...I 'USER S USER="UNKNOWN"
"RTN","RGMTAUDP",97,0)
 ...I USER'="UNKNOWN" S DIC="^VA(200,",DIC(0)="MZO",X="`"_USER D ^DIC S USER=$P(Y,"^",2)
"RTN","RGMTAUDP",98,0)
 ...S OLD=$G(^DIA(2,IEN,2)) I OLD']"" S OLD="<no previous value>"
"RTN","RGMTAUDP",99,0)
 ...S NEW=$G(^DIA(2,IEN,3)) I NEW']"" S NEW="<no current value>"
"RTN","RGMTAUDP",100,0)
 ...D:$Y+4>IOSL HDR Q:QFLG  W !!,PRTDT,?20,FLD,?51,USER,!?20,OLD," / ",NEW
"RTN","RGMTAUDP",101,0)
QUIT ;
"RTN","RGMTAUDP",102,0)
 I $E(IOST,1,2)="C-"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","RGMTAUDP",103,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","RGMTAUDP",104,0)
 K ^TMP("RGMTAUDP",$J)
"RTN","RGMTAUDP",105,0)
 K %I,ANS1,ANS2,C,CNT,RGDFN,DIR,DIRUT,DTOUT,DUOUT,EDITDT,FLD,FLDLP,FLDNM,HDR
"RTN","RGMTAUDP",106,0)
 K HDT,IEN,IEN0,JJ,LN,NEW,OLD,PAT,PATNM,PG,PRGBDT,PRGEDT,PRTDT,QFLG,QQ,RGARR,RGBDT
"RTN","RGMTAUDP",107,0)
 K RGEDT,RGERR,SITE,SS,STOP,USER,X,Y,ZTSK
"RTN","RGMTAUDP",108,0)
 D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","RGMTAUDP",109,0)
HDR ;HEADER
"RTN","RGMTAUDP",110,0)
 I $E(IOST,1,2)="C-" S SS=22-$Y F JJ=1:1:SS W !
"RTN","RGMTAUDP",111,0)
 I $E(IOST,1,2)="C-",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","RGMTAUDP",112,0)
 S PG=PG+1 W:$Y!($E(IOST,1,2)="C-") @IOF
"RTN","RGMTAUDP",113,0)
 W !,"PATIENT AUDIT LIST at ",SITE," on ",HDT,?72,"Page: ",PG
"RTN","RGMTAUDP",114,0)
 W !,"Date Range: ",PRGBDT," to ",PRGEDT
"RTN","RGMTAUDP",115,0)
 W !!,"Date/Time Edited",?20,"Field Edited",?51,"Edited By",!?20,"Old Value / New Value",!,LN
"RTN","RGMTAUDP",116,0)
 Q
"RTN","RGMTAUDP",117,0)
FLDLIST ;Help for Field # List
"RTN","RGMTAUDP",118,0)
 K RG N DIR S QFLG=0 I RGERR W $C(7)," ??"
"RTN","RGMTAUDP",119,0)
 S HDR="Select a FIELD NUMBER from the audited field(s) in the PATIENT file:"
"RTN","RGMTAUDP",120,0)
 W @IOF,HDR,!
"RTN","RGMTAUDP",121,0)
 S FLDLP=0 F  S FLDLP=$O(^DD(2,"AUDIT",FLDLP)) Q:'FLDLP  Q:QFLG  D
"RTN","RGMTAUDP",122,0)
 .I $Y+6>IOSL D  Q:QFLG
"RTN","RGMTAUDP",123,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","RGMTAUDP",124,0)
 ..E  W @IOF,HDR,!
"RTN","RGMTAUDP",125,0)
 .K RGARR D FIELD^DID(2,FLDLP,"","LABEL","RGARR")
"RTN","RGMTAUDP",126,0)
 .S FLDNM=$G(RGARR("LABEL")) Q:FLDNM=""
"RTN","RGMTAUDP",127,0)
 .W !,FLDLP,?13,FLDNM
"RTN","RGMTAUDP",128,0)
 Q
"RTN","RGMTDPCT")
0^147^B18961820
"RTN","RGMTDPCT",1,0)
RGMTDPCT ;GAI/TMG-Count Entries for ^DPT in Dup. Record file ;3-11-98
"RTN","RGMTDPCT",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGMTDPCT",3,0)
 ;;  Counts duplicate entries for ^DPT in Duplicate Record file by each
"RTN","RGMTDPCT",4,0)
 ;;  of the following and then by the match percentile.
"RTN","RGMTDPCT",5,0)
 ;;  - STATUS (verification status)
"RTN","RGMTDPCT",6,0)
 ;;                   P = potential duplicate
"RTN","RGMTDPCT",7,0)
 ;;                   N = verified, not a duplicate
"RTN","RGMTDPCT",8,0)
 ;;                   V = verified duplicate
"RTN","RGMTDPCT",9,0)
 ;;                   X = verification in progress
"RTN","RGMTDPCT",10,0)
 ;;                   R = required review
"RTN","RGMTDPCT",11,0)
 ;;  - MERGE STATUS - 0 = not ready
"RTN","RGMTDPCT",12,0)
 ;;                   1 = ready
"RTN","RGMTDPCT",13,0)
 ;;                   2 = merged
"RTN","RGMTDPCT",14,0)
 ;;                   3 = in progress
"RTN","RGMTDPCT",15,0)
 ;;
"RTN","RGMTDPCT",16,0)
START W !,"Duplicate Record File Statistics Scan",!
"RTN","RGMTDPCT",17,0)
 I '$D(DUZ) W !!,"Your user identification is not set.  Please D ^XUP and try again." Q
"RTN","RGMTDPCT",18,0)
 S USER=DUZ,ZTIO="",ZTRTN="SCAN^RGMTDPCT",ZTDESC="Duplicate Record Statistics Search"
"RTN","RGMTDPCT",19,0)
 S ZTSAVE("USER")="" D ^%ZTLOAD I $D(ZTSK) W !,"  Task# ",ZTSK," queued to run." D ^%ZISC,KILL
"RTN","RGMTDPCT",20,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","RGMTDPCT",21,0)
 Q
"RTN","RGMTDPCT",22,0)
 ;;
"RTN","RGMTDPCT",23,0)
SCAN K ^XTMP("RGMTDPCT") S U="^"
"RTN","RGMTDPCT",24,0)
 ;set purge date of XTMP = 30 days
"RTN","RGMTDPCT",25,0)
 S ^XTMP("RGMTDPCT",0)=$$FMADD^XLFDT($$NOW^XLFDT,30)_U_$$NOW^XLFDT_U_"DUPLICATE RECORD CHECK"
"RTN","RGMTDPCT",26,0)
 S ^XTMP("RGMTDPCT","@@@@","STARTED")=$$NOW^XLFDT
"RTN","RGMTDPCT",27,0)
 S (^XTMP("RGMTDPCT","@@@@","SITE"),SITE)=$$SITE^VASITE()
"RTN","RGMTDPCT",28,0)
 S IEN=0 F  S IEN=$O(^VA(15,IEN)) Q:+IEN'>0  I $D(^VA(15,+IEN,0)) S NODE0=^(0) D
"RTN","RGMTDPCT",29,0)
 .S ^XTMP("RGMTDPCT","@@@@","CURR IEN")=IEN
"RTN","RGMTDPCT",30,0)
 .S (VSTAT,MSTAT)="ZZZ" S:$P(NODE0,U,3)'="" VSTAT=$P(NODE0,U,3) S:$P(NODE0,U,5)'="" MSTAT=$P(NODE0,U,5)
"RTN","RGMTDPCT",31,0)
 .S MPERC=(($P(NODE0,U,19))\10)*10
"RTN","RGMTDPCT",32,0)
 .S:'$D(^XTMP("RGMTDPCT","VERIF",VSTAT,MPERC)) ^XTMP("RGMTDPCT","VERIF",VSTAT,MPERC)=0 S ^XTMP("RGMTDPCT","VERIF",VSTAT,MPERC)=^XTMP("RGMTDPCT","VERIF",VSTAT,MPERC)+1
"RTN","RGMTDPCT",33,0)
 .S:'$D(^XTMP("RGMTDPCT","MERGE",MSTAT,MPERC)) ^XTMP("RGMTDPCT","MERGE",MSTAT,MPERC)=0 S ^XTMP("RGMTDPCT","MERGE",MSTAT,MPERC)=^XTMP("RGMTDPCT","MERGE",MSTAT,MPERC)+1
"RTN","RGMTDPCT",34,0)
 ;
"RTN","RGMTDPCT",35,0)
MSG ;
"RTN","RGMTDPCT",36,0)
 S X=^XTMP("RGMTDPCT","@@@@","STARTED")
"RTN","RGMTDPCT",37,0)
 S %DT="T" D ^%DT S X=Y X ^DD("DD") S MSGDT=Y
"RTN","RGMTDPCT",38,0)
 S BLANKS="                         "
"RTN","RGMTDPCT",39,0)
 S TXT(.1)="Duplicate Record (^DPT) Statistics"_$J(" ",15)_"Run Date: "_MSGDT
"RTN","RGMTDPCT",40,0)
 S TXT(.2)=""
"RTN","RGMTDPCT",41,0)
 S TXT(.3)=$P(SITE,U,2)_" ("_$P(SITE,U)_")"
"RTN","RGMTDPCT",42,0)
 S TXT(.4)=""
"RTN","RGMTDPCT",43,0)
 S TXT(.5)="  Counts by:  Merge Status and Match Percentile:"
"RTN","RGMTDPCT",44,0)
 S LINE=1,STATUS="" F  S STATUS=$O(^XTMP("RGMTDPCT","MERGE",STATUS)) Q:STATUS=""  D
"RTN","RGMTDPCT",45,0)
 .S MSGSTAT=$S(STATUS=0:"NOT READY",STATUS=1:"READY",STATUS=2:"MERGED",STATUS=3:"IN PROGRESS",STATUS="ZZZ":"UNKNOWN")
"RTN","RGMTDPCT",46,0)
 . S LINE=LINE+.001
"RTN","RGMTDPCT",47,0)
 . S TXT(LINE)=""
"RTN","RGMTDPCT",48,0)
 . S LINE=LINE+.001 S TXT(LINE)="    Merge Status: "_MSGSTAT
"RTN","RGMTDPCT",49,0)
 .S PERC=0 F  S PERC=$O(^XTMP("RGMTDPCT","MERGE",STATUS,PERC)) Q:+PERC'>0  S COUNT=^(PERC) D
"RTN","RGMTDPCT",50,0)
 . . S LINE=LINE+.001
"RTN","RGMTDPCT",51,0)
 . . S TEXT="      Percentile: "_PERC_BLANKS,TEXT=$E(TEXT,1,30),TEXT=TEXT_COUNT
"RTN","RGMTDPCT",52,0)
 . . S TXT(LINE)=TEXT
"RTN","RGMTDPCT",53,0)
 S LINE=2,LINE=LINE+.001 S TXT(LINE)=""
"RTN","RGMTDPCT",54,0)
 S LINE=LINE+.001
"RTN","RGMTDPCT",55,0)
 S TXT(LINE)="  Counts by:  Verification Status and Match Percentile:"
"RTN","RGMTDPCT",56,0)
 S STATUS="" F  S STATUS=$O(^XTMP("RGMTDPCT","VERIF",STATUS)) Q:STATUS=""  D
"RTN","RGMTDPCT",57,0)
 . S MSGSTAT=$S(STATUS="P":"POTENTIAL DUP., UNVERIF",STATUS="N":"VERIFIED, NOT A DUPLICATE",STATUS="V":"VERIFIED DUPLICATE",STATUS="X":"VERIF. IN PROGRESS",STATUS="R":"REQUIRES RESOLUTION",1:"")
"RTN","RGMTDPCT",58,0)
 . S LINE=LINE+.001,TXT(LINE)=""
"RTN","RGMTDPCT",59,0)
 . S LINE=LINE+.001,TXT(LINE)="    Verification Status: "_MSGSTAT
"RTN","RGMTDPCT",60,0)
 . S PERC=0 F  S PERC=$O(^XTMP("RGMTDPCT","VERIF",STATUS,PERC)) Q:+PERC'>0  S COUNT=^(PERC) D
"RTN","RGMTDPCT",61,0)
 . . S LINE=LINE+.001
"RTN","RGMTDPCT",62,0)
 . . S TEXT="      Percentile: "_PERC_BLANKS,TEXT=$E(TEXT,1,30),TEXT=TEXT_COUNT
"RTN","RGMTDPCT",63,0)
 . . S TXT(LINE)=TEXT
"RTN","RGMTDPCT",64,0)
 S (XMY(DUZ),XMY(USER))="",(XMDUZ)=DUZ
"RTN","RGMTDPCT",65,0)
 S XMSUB="Duplicate Record Counts: "_$P(SITE,U,2)
"RTN","RGMTDPCT",66,0)
 S XMTEXT="TXT(" D ^XMD
"RTN","RGMTDPCT",67,0)
 ;
"RTN","RGMTDPCT",68,0)
KILL K ^XTMP("RGMTDPCT"),BLANKS,COUNT,IEN,LINE,MPERC,MSGDT,MSGSTAT,MSTAT,NODE0
"RTN","RGMTDPCT",69,0)
 K PERC,SITE,STATUS,TEXT,TXT,USER,VSTAT,X,XMDUZ,XMSUB,XMTEXT,XMY,Y,ZTSAVE
"RTN","RGMTDPCT",70,0)
 K ZTDESC,ZTIO,ZTRTN,ZTSK,%DT
"RTN","RGMTDPCT",71,0)
 Q
"RTN","RGMTDPSC")
0^148^B20971775
"RTN","RGMTDPSC",1,0)
RGMTDPSC ;GAI/TMG-COUNT DUPLICATE RECORD ENTRIES BY CMOR SCORE RANGE ;5-30-98
"RTN","RGMTDPSC",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGMTDPSC",3,0)
 ;; search the Duplicate Record file (#15) for duplicate pairs and
"RTN","RGMTDPSC",4,0)
 ;; display by CMOR activity score range.  The ranges are in 100's with
"RTN","RGMTDPSC",5,0)
 ;; a separate range for pairs where both members have no score and where
"RTN","RGMTDPSC",6,0)
 ;; both members have zero score or one member has a zero score and the
"RTN","RGMTDPSC",7,0)
 ;; other has no score.
"RTN","RGMTDPSC",8,0)
 ;; 
"RTN","RGMTDPSC",9,0)
EN ; que or select device for output
"RTN","RGMTDPSC",10,0)
 I '$D(^DPT("ACMORS")) D  Q
"RTN","RGMTDPSC",11,0)
 . W !,"The option, Start/Restart CIRN CMOR Score Calculation"
"RTN","RGMTDPSC",12,0)
 . W !,"[RGCIRN CMOR START], needs to be run before this option."
"RTN","RGMTDPSC",13,0)
 S %ZIS="QM" D ^%ZIS Q:POP  S:IO'=IO(0) IO("Q")="" I '$D(IO("Q")) G SCAN
"RTN","RGMTDPSC",14,0)
 S ZTRTN="SCAN^RGMTDPSC"
"RTN","RGMTDPSC",15,0)
 S ZTIO=ION_";"_IOST_";"_IOM_";"_IOSL,ZTSAVE("IO*")=""
"RTN","RGMTDPSC",16,0)
 S ZTDESC="DUP. RECORD REPORT BY CMOR SCORE" D ^%ZTLOAD,EXIT,^%ZISC
"RTN","RGMTDPSC",17,0)
 Q
"RTN","RGMTDPSC",18,0)
 ;
"RTN","RGMTDPSC",19,0)
SCAN ; search and count duplicate pairs by score ranges
"RTN","RGMTDPSC",20,0)
 S U="^",MSG=0,MSGLINE=1,DPTCNT=0 K SCRARR
"RTN","RGMTDPSC",21,0)
 N NODE1,NODE2
"RTN","RGMTDPSC",22,0)
 S IEN=0 F  S IEN=$O(^VA(15,IEN)) Q:+IEN'>0  I $D(^VA(15,+IEN,0)) S NODE=^(0) D
"RTN","RGMTDPSC",23,0)
 . S (SCRANGE,SCORE,SCORE1,SCORE2)="NO SCORE"
"RTN","RGMTDPSC",24,0)
 . S DPT1=+$P(NODE,U),DPT2=+$P(NODE,U,2)
"RTN","RGMTDPSC",25,0)
 . S NODE1=$$MPINODE^MPIFAPI(+DPT1)
"RTN","RGMTDPSC",26,0)
 . I $P($G(NODE1),U,6)'="" S SCORE1=$P(NODE1,U,6)
"RTN","RGMTDPSC",27,0)
 . S NODE2=$$MPINODE^MPIFAPI(+DPT2)
"RTN","RGMTDPSC",28,0)
 . I $P($G(NODE2),U,6)'="" S SCORE2=$P(NODE2,U,6)
"RTN","RGMTDPSC",29,0)
 . I SCORE1=0&(SCORE2=0) S (SCRANGE,SCORE)="ZERO"
"RTN","RGMTDPSC",30,0)
 . I SCORE1?.N!(SCORE2?.N) D
"RTN","RGMTDPSC",31,0)
 . . Q:SCRANGE="ZERO"
"RTN","RGMTDPSC",32,0)
 . . S:+SCORE1>+SCORE SCORE=SCORE1 S:+SCORE2>+SCORE SCORE=SCORE2 S SCRANGE=SCORE\100 I SCRANGE>0 S SCRANGE=SCRANGE*100
"RTN","RGMTDPSC",33,0)
 . S:'$D(SCRARR("RANGE",SCRANGE)) SCRARR("RANGE",SCRANGE)=0
"RTN","RGMTDPSC",34,0)
 . S SCRARR("RANGE",SCRANGE)=SCRARR("RANGE",SCRANGE)+1
"RTN","RGMTDPSC",35,0)
 D PRINT
"RTN","RGMTDPSC",36,0)
 ;
"RTN","RGMTDPSC",37,0)
EXIT K COUNT,DPT1,DPT2,DPTCNT,IEN,MSG,MSGLINE,NODE,PAGE,POP,PRANGE,PRDT,SCORE
"RTN","RGMTDPSC",38,0)
 K SCORE1,SCORE2,SCRANGE,SCRARR,S,TXT,X,Y,ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZZ,%DT,%ZIS,DTOUT,DUOUT,SITE,XMSUB,XMTEXT,XMY
"RTN","RGMTDPSC",39,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","RGMTDPSC",40,0)
 Q
"RTN","RGMTDPSC",41,0)
 ;
"RTN","RGMTDPSC",42,0)
PRINT ; print duplicate pair counts by score range
"RTN","RGMTDPSC",43,0)
 S (PAGE,COUNT)=0 S X="N",%DT="T" D ^%DT S X=Y X ^DD("DD") S PRDT=Y
"RTN","RGMTDPSC",44,0)
 D HDR I MSG=0 D MSG
"RTN","RGMTDPSC",45,0)
 I $D(SCRARR("RANGE","ZERO")) D
"RTN","RGMTDPSC",46,0)
 . S PRANGE="0" W !?10,PRANGE,?40,$J(SCRARR("RANGE","ZERO"),6,0)
"RTN","RGMTDPSC",47,0)
 . S COUNT=COUNT+SCRARR("RANGE","ZERO")
"RTN","RGMTDPSC",48,0)
 S SCRANGE="" F  S SCRANGE=$O(SCRARR("RANGE",SCRANGE)) Q:SCRANGE=""  Q:SCRANGE="ZERO"  D
"RTN","RGMTDPSC",49,0)
 . I SCRANGE=0 S PRANGE="1 - 99"
"RTN","RGMTDPSC",50,0)
 . I SCRANGE'="NO SCORE" I SCRANGE>0 S PRANGE=SCRANGE_" - "_(SCRANGE+99)
"RTN","RGMTDPSC",51,0)
 . I SCRANGE="NO SCORE" S PRANGE=SCRANGE
"RTN","RGMTDPSC",52,0)
 . S MSGLINE=MSGLINE+.001
"RTN","RGMTDPSC",53,0)
 . S TXT(MSGLINE)=$J(" ",10)_PRANGE_$J(" ",23)_$J(SCRARR("RANGE",SCRANGE),6,0)
"RTN","RGMTDPSC",54,0)
 . D:$Y>(IOSL-6) HDR W !?10,PRANGE,?39,$J(SCRARR("RANGE",SCRANGE),6,0) S COUNT=COUNT+SCRARR("RANGE",SCRANGE)
"RTN","RGMTDPSC",55,0)
 S DPTCNT=$P(^DPT(0),U,4)
"RTN","RGMTDPSC",56,0)
 D:$Y>(IOSL-6) HDR W !!,"TOTAL Potential Duplicates (15): ",?39,$J(COUNT,6,0)
"RTN","RGMTDPSC",57,0)
 D:$Y>(IOSL-6) HDR W !,"TOTAL Patients (2): ",?39,$J(DPTCNT,6,0)
"RTN","RGMTDPSC",58,0)
 S MSGLINE=MSGLINE+.001 D
"RTN","RGMTDPSC",59,0)
 . S TXT(MSGLINE)="  ",MSGLINE=MSGLINE+.001
"RTN","RGMTDPSC",60,0)
 . S TXT(MSGLINE)="TOTAL Potential Duplicates (15)       "_COUNT
"RTN","RGMTDPSC",61,0)
 . S MSGLINE=MSGLINE+.001
"RTN","RGMTDPSC",62,0)
 . S TXT(MSGLINE)="TOTAL Patients (2)                    "_DPTCNT
"RTN","RGMTDPSC",63,0)
 D MSG1
"RTN","RGMTDPSC",64,0)
 Q
"RTN","RGMTDPSC",65,0)
 ;
"RTN","RGMTDPSC",66,0)
HDR I ($E(IOST,1,2)="C-")&(IO=IO(0)) D
"RTN","RGMTDPSC",67,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","RGMTDPSC",68,0)
 Q:$D(DUOUT)!($D(DTOUT))
"RTN","RGMTDPSC",69,0)
 S PAGE=PAGE+1 W #
"RTN","RGMTDPSC",70,0)
 W "Duplicate Record Count by CMOR Score",?(IOM-23),"Page: ",PAGE
"RTN","RGMTDPSC",71,0)
 W !?(IOM-23),"Date: ",PRDT,!
"RTN","RGMTDPSC",72,0)
 F ZZ=1:1:IOM W "-"
"RTN","RGMTDPSC",73,0)
 I PAGE=1 D
"RTN","RGMTDPSC",74,0)
 .W !,"This report is drawn from the Duplicate Record file (#15) with"
"RTN","RGMTDPSC",75,0)
 .W !,"CMOR scores from the PATIENT file, CMOR ACTIVITY SCORE field.",!
"RTN","RGMTDPSC",76,0)
 .W !,"- If both members of a pair have a score of zero the pair is"
"RTN","RGMTDPSC",77,0)
 .W !,"  counted in the '0' group."
"RTN","RGMTDPSC",78,0)
 .W !,"- If one or both members of the pair have a score greater than"
"RTN","RGMTDPSC",79,0)
 .W !,"  zero, that pair is counted in the group for the higher score."
"RTN","RGMTDPSC",80,0)
 .W !,"- If neither member of the pair have a CMOR score, the pair is"
"RTN","RGMTDPSC",81,0)
 .W !,"  counted in the 'NO SCORE' group."
"RTN","RGMTDPSC",82,0)
 W !!,?10,"Score Range",?40,"Count",!?10,"-----------",?40,"-----",!
"RTN","RGMTDPSC",83,0)
 Q
"RTN","RGMTDPSC",84,0)
MSG ;create the message
"RTN","RGMTDPSC",85,0)
 S TXT(.1)="Duplicate Record Count by CMOR Score"_$J(" ",20)_"Date: "_PRDT
"RTN","RGMTDPSC",86,0)
 S TXT(.2)="  "
"RTN","RGMTDPSC",87,0)
 S SITE=$$SITE^VASITE()
"RTN","RGMTDPSC",88,0)
 S TXT(.3)=$P(SITE,U,2)_" ("_$P(SITE,U)_")"
"RTN","RGMTDPSC",89,0)
 S TXT(.4)="  "
"RTN","RGMTDPSC",90,0)
 S TXT(.5)=$J(" ",10)_"Score Range"_$J(" ",20)_"Count"
"RTN","RGMTDPSC",91,0)
 S TXT(.6)=$J(" ",10)_"-----------"_$J(" ",20)_"-----"
"RTN","RGMTDPSC",92,0)
 S TXT(.7)="  "
"RTN","RGMTDPSC",93,0)
 Q
"RTN","RGMTDPSC",94,0)
MSG1 ;call XMD
"RTN","RGMTDPSC",95,0)
 S XMSUB="Duplicate Records by CMOR Score: "_$P(SITE,U,2)
"RTN","RGMTDPSC",96,0)
 S XMY(DUZ)="",XMDUZ=DUZ
"RTN","RGMTDPSC",97,0)
 S XMTEXT="TXT(" D ^XMD
"RTN","RGMTDPSC",98,0)
 Q
"RTN","RGMTTFL")
0^138^B14814708
"RTN","RGMTTFL",1,0)
RGMTTFL ;BIR/CML-Treating Facility List Statistics ;01/06/99
"RTN","RGMTTFL",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGMTTFL",3,0)
 S QFLG=1
"RTN","RGMTTFL",4,0)
BEGIN ;
"RTN","RGMTTFL",5,0)
 W !!,"This option prints a statistical breakdown of the entries in the"
"RTN","RGMTTFL",6,0)
 W !,"TREATING FACILITY LIST file (#391.91)."
"RTN","RGMTTFL",7,0)
DEV W !!,"The right margin for this report is 80.",!!
"RTN","RGMTTFL",8,0)
 D EN^XUTMDEVQ("START^RGMTTFL","CIRN - Treating Facility Statistics") I 'POP Q
"RTN","RGMTTFL",9,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","RGMTTFL",10,0)
 G QUIT
"RTN","RGMTTFL",11,0)
START ;
"RTN","RGMTTFL",12,0)
 ;Report shows:
"RTN","RGMTTFL",13,0)
 ;# of unique patients - ^TMP("RGMTTFL",$J,"UNIQUEPTS")
"RTN","RGMTTFL",14,0)
 ;# of patients assigned to each site - ^TMP("RGMTTFL",$J,"TOTPTS",SITE)
"RTN","RGMTTFL",15,0)
 ;# of single site patients for each site - ^TMP("RGMTTFL",$J,"SINGLE",SITE)
"RTN","RGMTTFL",16,0)
 ;# of shared patients - ^TMP("RGMTTFL",$J,"SHARED")
"RTN","RGMTTFL",17,0)
 ;to check totals:
"RTN","RGMTTFL",18,0)
 ;shared total + all single totals = total unique patients
"RTN","RGMTTFL",19,0)
 ;sum of all site totals - total shared = total unique patients
"RTN","RGMTTFL",20,0)
 K ^TMP("RGMTTFL",$J) S U="^"
"RTN","RGMTTFL",21,0)
 S ^TMP("RGMTTFL",$J,"UNIQUEPTS")=0
"RTN","RGMTTFL",22,0)
 S ^TMP("RGMTTFL",$J,"SHARED")=0
"RTN","RGMTTFL",23,0)
 S HOME=$$SITE^VASITE() ;institution file ptr^station name^station number
"RTN","RGMTTFL",24,0)
 S SITECNT=0,SITE=0 F  S SITE=$O(^DGCN(391.91,"C",SITE)) Q:'SITE  D
"RTN","RGMTTFL",25,0)
 .S ^TMP("RGMTTFL",$J,"TOTPTS",SITE)=0
"RTN","RGMTTFL",26,0)
 .S ^TMP("RGMTTFL",$J,"SINGLE",SITE)=0
"RTN","RGMTTFL",27,0)
 ;
"RTN","RGMTTFL",28,0)
LOOP ;Loop on "APAT" xref of the TREATING FACILITY LIST file (#391.91)
"RTN","RGMTTFL",29,0)
 S RGDFN=0 F  S RGDFN=$O(^DGCN(391.91,"APAT",RGDFN)) Q:'RGDFN  D
"RTN","RGMTTFL",30,0)
 .S GOT=0
"RTN","RGMTTFL",31,0)
 .S ^TMP("RGMTTFL",$J,"UNIQUEPTS")=^TMP("RGMTTFL",$J,"UNIQUEPTS")+1
"RTN","RGMTTFL",32,0)
 .S CNT=0,FAC=0 F  S FAC=$O(^DGCN(391.91,"APAT",RGDFN,FAC)) Q:'FAC  S CNT=CNT+1 D
"RTN","RGMTTFL",33,0)
 ..S ^TMP("RGMTTFL",$J,"TOTPTS",FAC)=^TMP("RGMTTFL",$J,"TOTPTS",FAC)+1
"RTN","RGMTTFL",34,0)
 ..I CNT=1,'$O(^DGCN(391.91,"APAT",RGDFN,FAC)) S ^TMP("RGMTTFL",$J,"SINGLE",FAC)=^TMP("RGMTTFL",$J,"SINGLE",FAC)+1 Q
"RTN","RGMTTFL",35,0)
 ..I 'GOT,CNT>1 S ^TMP("RGMTTFL",$J,"SHARED")=^TMP("RGMTTFL",$J,"SHARED")+1 S GOT=1
"RTN","RGMTTFL",36,0)
SORT ;Sort single-site and site total data alphabetically
"RTN","RGMTTFL",37,0)
 S SITE=0 F  S SITE=$O(^TMP("RGMTTFL",$J,"SINGLE",SITE)) Q:'SITE  D
"RTN","RGMTTFL",38,0)
 .S SITENM=$P($$NS^XUAF4(SITE),"^"),^TMP("RGMTTFL",$J,"SINGLE",SITENM)=^TMP("RGMTTFL",$J,"SINGLE",SITE) K ^TMP("RGMTTFL",$J,"SINGLE",SITE)
"RTN","RGMTTFL",39,0)
 S SITE=0 F  S SITE=$O(^TMP("RGMTTFL",$J,"TOTPTS",SITE)) Q:'SITE  D
"RTN","RGMTTFL",40,0)
 .S SITENM=$P($$NS^XUAF4(SITE),"^"),^TMP("RGMTTFL",$J,"TOTPTS",SITENM)=^TMP("RGMTTFL",$J,"TOTPTS",SITE) K ^TMP("RGMTTFL",$J,"TOTPTS",SITE)
"RTN","RGMTTFL",41,0)
PRT ;Print report
"RTN","RGMTTFL",42,0)
 S (PG,QFLG)=0,U="^",$P(LN,"-",81)="",LOCSITE=$P(HOME,U,2)
"RTN","RGMTTFL",43,0)
 D NOW^%DTC S HDT=$$FMTE^XLFDT($E(%,1,12))
"RTN","RGMTTFL",44,0)
 D HDR
"RTN","RGMTTFL",45,0)
 I '$D(^TMP("RGMTTFL",$J)) W !!,"No data available for this report." G QUIT
"RTN","RGMTTFL",46,0)
 W !!,"Total single-facility patients:",!,"==============================="
"RTN","RGMTTFL",47,0)
 S SITE="" F  S SITE=$O(^TMP("RGMTTFL",$J,"SINGLE",SITE)) Q:SITE=""  Q:QFLG  D
"RTN","RGMTTFL",48,0)
 .D:$Y+4>IOSL HDR Q:QFLG  W !,SITE,?50,$J(^TMP("RGMTTFL",$J,"SINGLE",SITE),8)
"RTN","RGMTTFL",49,0)
 Q:QFLG
"RTN","RGMTTFL",50,0)
 W !!,"Total patients found for each facility:",!,"======================================="
"RTN","RGMTTFL",51,0)
 S SITE="" F  S SITE=$O(^TMP("RGMTTFL",$J,"TOTPTS",SITE)) Q:SITE=""  Q:QFLG  D
"RTN","RGMTTFL",52,0)
 .D:$Y+4>IOSL HDR Q:QFLG  W !,SITE,?50,$J(^TMP("RGMTTFL",$J,"TOTPTS",SITE),8)
"RTN","RGMTTFL",53,0)
 Q:QFLG  W !!
"RTN","RGMTTFL",54,0)
 D:$Y+4>IOSL HDR Q:QFLG  W !,"Total number of shared patients:",?50,$J(^TMP("RGMTTFL",$J,"SHARED"),8)
"RTN","RGMTTFL",55,0)
 D:$Y+4>IOSL HDR Q:QFLG  W !,"Total number of unique patients:",?50,$J(^TMP("RGMTTFL",$J,"UNIQUEPTS"),8)
"RTN","RGMTTFL",56,0)
QUIT ;
"RTN","RGMTTFL",57,0)
 I $E(IOST,1,2)="C-"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","RGMTTFL",58,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","RGMTTFL",59,0)
 K ^TMP("RGMTTFL",$J)
"RTN","RGMTTFL",60,0)
 K %,CNT,RGDFN,FAC,GOT,HDT,HOME,JJ,LN,LOCSITE,PG,QFLG,SITE,SITECNT,SITENM,SS,X,Y,ZTSK
"RTN","RGMTTFL",61,0)
 D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","RGMTTFL",62,0)
HDR ;HEADER
"RTN","RGMTTFL",63,0)
 I $E(IOST,1,2)="C-" S SS=22-$Y F JJ=1:1:SS W !
"RTN","RGMTTFL",64,0)
 I $E(IOST,1,2)="C-",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","RGMTTFL",65,0)
 S PG=PG+1 W:$Y!($E(IOST,1,2)="C-") @IOF
"RTN","RGMTTFL",66,0)
 W !,"TREATING FACILITY LIST STATISTICS",?72,"Page: ",PG
"RTN","RGMTTFL",67,0)
 W !,"Printed at ",LOCSITE," on ",HDT,!,LN
"RTN","RGMTTFL",68,0)
 Q
"RTN","RGPDENV")
0^^B4517860
"RTN","RGPDENV",1,0)
RGPDENV ;B'HAM/PTD-CIRN PD build environment check routine ;4/15/99
"RTN","RGPDENV",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGPDENV",3,0)
PSJ ;Determine which version of Inpatient Medications is installed.
"RTN","RGPDENV",4,0)
 S RGOUT="^",RGVER=$$VERSION^XPDUTL("PSJ")
"RTN","RGPDENV",5,0)
 ;If version not 4.5 or 5.0, abort install.
"RTN","RGPDENV",6,0)
 I (RGVER'="4.5"),(RGVER'="5.0") W !!,"Inpatient Medications version 4.5 or 5.0 must be installed." S XPDQUIT=2 K RGVER G PSO
"RTN","RGPDENV",7,0)
 ;If version 5.0 installed, we're ok; go to PSO.
"RTN","RGPDENV",8,0)
 I RGVER="5.0" G PSO
"RTN","RGPDENV",9,0)
 ;If version 4.5 installed, check for patch PSJ*4.5*43.
"RTN","RGPDENV",10,0)
 I RGVER="4.5" S RGPCH=$$PATCH^XPDUTL("PSJ*4.5*43")
"RTN","RGPDENV",11,0)
 ;If patch PSJ*4.5*43 is installed, continue with PSO.
"RTN","RGPDENV",12,0)
 I RGPCH=1 G PSO
"RTN","RGPDENV",13,0)
 ;Else PSJ*4.5*43 is missing; continue with PSO.
"RTN","RGPDENV",14,0)
 S RGOUT=RGOUT_"INP^",XPDQUIT=2
"RTN","RGPDENV",15,0)
 ;
"RTN","RGPDENV",16,0)
PSO ;Determine which version of Outpatient Pharmacy is installed.
"RTN","RGPDENV",17,0)
 S RGVER=$$VERSION^XPDUTL("PSO")
"RTN","RGPDENV",18,0)
 ;If version not 6.0 or 7.0, abort install.
"RTN","RGPDENV",19,0)
 I (RGVER'="6.0"),(RGVER'="7.0") W !!,"Outpatient Pharmacy version 6.0 or 7.0 must be installed." S XPDQUIT=2 G END
"RTN","RGPDENV",20,0)
 I RGVER="7.0" G PSO7
"RTN","RGPDENV",21,0)
PSO6 ;If version 6.0 installed, check for patch PSO*6*156.
"RTN","RGPDENV",22,0)
 I RGVER="6.0" S RGPCH=$$PATCH^XPDUTL("PSO*6.0*156")
"RTN","RGPDENV",23,0)
 ;If patch PSO*6*156 is installed, quit.
"RTN","RGPDENV",24,0)
 I RGPCH=1 G END
"RTN","RGPDENV",25,0)
 ;Else PSO*6*156 is missing.
"RTN","RGPDENV",26,0)
 S RGOUT=RGOUT_"OUT6^",XPDQUIT=2 G END
"RTN","RGPDENV",27,0)
PSO7 ;If version 7.0 installed, check for patch PSO*7*11.
"RTN","RGPDENV",28,0)
 I RGVER="7.0" S RGPCH=$$PATCH^XPDUTL("PSO*7.0*11")
"RTN","RGPDENV",29,0)
 ;If patch PSO*7*11 is installed, quit.
"RTN","RGPDENV",30,0)
 I RGPCH=1 G END
"RTN","RGPDENV",31,0)
 ;Else PSO*7*11 is missing.
"RTN","RGPDENV",32,0)
 S RGOUT=RGOUT_"OUT7^",XPDQUIT=2
"RTN","RGPDENV",33,0)
 ;
"RTN","RGPDENV",34,0)
END ;Write install message based on set conditions.
"RTN","RGPDENV",35,0)
 ;Patch PSJ*4.5*43 missing.
"RTN","RGPDENV",36,0)
 I RGOUT["IMP" W !!,"You must have patch PSJ*4.5*43 installed for Inpatient Medications."
"RTN","RGPDENV",37,0)
 ;Patch PSO*6*156 missing.
"RTN","RGPDENV",38,0)
 I RGOUT["OUT6" W !!,"You must have patch PSO*6*156 installed for Outpatient Pharmacy."
"RTN","RGPDENV",39,0)
 ;Patch PSO*7*11 missing.
"RTN","RGPDENV",40,0)
 I RGOUT["OUT7" W !!,"You must have patch PSO*7*11 installed for Outpatient Pharmacy."
"RTN","RGPDENV",41,0)
 ;All conditions are OK.
"RTN","RGPDENV",42,0)
 I '$D(XPDQUIT) W !!,"Environment check is ok.",!
"RTN","RGPDENV",43,0)
 K RGOUT,RGPCH,RGVER
"RTN","RGPDENV",44,0)
 Q
"RTN","RGPDENV",45,0)
 ;
"RTN","RGPDPST")
0^^B927208
"RTN","RGPDPST",1,0)
RGPDPST ;SF/CMC,PTD-CIRN build post-init ;11/24/98
"RTN","RGPDPST",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGPDPST",3,0)
PD ;Post-init called by CIRN PD - updating facility in the HL7 application parameter file
"RTN","RGPDPST",4,0)
 N SITE,DIE,X,Y,DR,DIC,DA
"RTN","RGPDPST",5,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1
"RTN","RGPDPST",6,0)
 ; ^ SITE is Station Number of site doing install
"RTN","RGPDPST",7,0)
 S DIC="^HL(771,",DIC(0)="XQZ",X="RG CIRN"
"RTN","RGPDPST",8,0)
 D ^DIC
"RTN","RGPDPST",9,0)
 Q:+Y<0
"RTN","RGPDPST",10,0)
 S DA=+Y
"RTN","RGPDPST",11,0)
 S DIE="^HL(771,",DR="3///^S X=SITE"
"RTN","RGPDPST",12,0)
 D ^DIE
"RTN","RGPDPST",13,0)
 K SITE,DIC,X,Y,DA,DIE,DR
"RTN","RGPDPST",14,0)
 Q
"RTN","RGPDPST",15,0)
 ;
"RTN","RGPDPST",16,0)
MC ;Post-init called by Messaging Components - updating facility in the HL7 application parameter file
"RTN","RGPDPST",17,0)
 N SITE,DIE,X,Y,DR,ENT,DIC,DA,I
"RTN","RGPDPST",18,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1
"RTN","RGPDPST",19,0)
 ; ^ SITE is Station Number of site doing install
"RTN","RGPDPST",20,0)
 S DIC="^HL(771,",DIC(0)="XQZ",X="RG SUBSCRIPTION"
"RTN","RGPDPST",21,0)
 D ^DIC
"RTN","RGPDPST",22,0)
 Q:+Y<0
"RTN","RGPDPST",23,0)
 S DA=+Y
"RTN","RGPDPST",24,0)
 S DIE="^HL(771,",DR="3///^S X=SITE"
"RTN","RGPDPST",25,0)
 D ^DIE
"RTN","RGPDPST",26,0)
 K SITE,DIC,X,Y,DA,DIE,DR
"RTN","RGPDPST",27,0)
 Q
"RTN","RGPDPST",28,0)
 ;
"RTN","RGPRELIG")
0^149^B8053996
"RTN","RGPRELIG",1,0)
RGPRELIG ;GAI/TMG-TEST AND COMPARE FILES 8 AND 8.1 ;6-25-1998
"RTN","RGPRELIG",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGPRELIG",3,0)
 S U="^" S:'$D(DTIME) DTIME=120
"RTN","RGPRELIG",4,0)
 W !!,"This Option will compare the ELIGIBILITY CODE file (#8) and"
"RTN","RGPRELIG",5,0)
 W !,"the MAS ELIGIBILITY CODE file (8.1) to insure that all required"
"RTN","RGPRELIG",6,0)
 W !,"links are present."
"RTN","RGPRELIG",7,0)
 G QUE
"RTN","RGPRELIG",8,0)
EN ;ENTRY POINT FROM QUEUE
"RTN","RGPRELIG",9,0)
 N DTOUT,DUOUT S RGFS=""
"RTN","RGPRELIG",10,0)
 D DISP
"RTN","RGPRELIG",11,0)
 S RGPR=0 F I=0:0 S RGPR=$O(^DIC(8,RGPR)) Q:RGPR'>0  S RGPR(RGPR,0)="",RGPR(RGPR,0)=RGPR_U_$P(^DIC(8,RGPR,0),U,9)_U_$P(^DIC(8,RGPR,0),U,7)
"RTN","RGPRELIG",12,0)
 S RGPR1=0 F I=0:0 S RGPR1=$O(^DIC(8.1,RGPR1)) Q:RGPR1'>0  S RGPR1(RGPR1,0)=RGPR1_U_$P(^DIC(8.1,RGPR1,0),U,7)
"RTN","RGPRELIG",13,0)
 S RGPR=0 F I=0:0 S RGPR=$O(RGPR(RGPR)) Q:RGPR'>0  G:$D(DUOUT)!($D(DTOUT)) FINAL D
"RTN","RGPRELIG",14,0)
 .D:$Y>(IOSL-3) DISP I $D(DUOUT)!($D(DTOUT)) Q
"RTN","RGPRELIG",15,0)
 .W ! W:'$D(RGPR(RGPR,0))!$P(RGPR(RGPR,0),U,3)=1 "***" W $P(^DIC(8,RGPR,0),U,1)
"RTN","RGPRELIG",16,0)
 .W "=>",?40,"<=",$S($P(RGPR(RGPR,0),U,2)'="":$P(^DIC(8.1,$P(RGPR(RGPR,0),U,2),0),U,1),1:"NO MATCHING ENTRY") S RGPR1=$P(RGPR(RGPR,0),U,2) D:RGPR1'="" CLEAN W !
"RTN","RGPRELIG",17,0)
 G FINAL
"RTN","RGPRELIG",18,0)
 Q
"RTN","RGPRELIG",19,0)
CLEAN ;CLEAN UP FOR CHECK
"RTN","RGPRELIG",20,0)
 K:$P(RGPR(RGPR,0),U,2)'="" RGPR(RGPR,0)
"RTN","RGPRELIG",21,0)
 I RGPR1="" W ! Q
"RTN","RGPRELIG",22,0)
 I $P(RGPR1(RGPR1,0),U,2)'="" W "***"
"RTN","RGPRELIG",23,0)
 Q
"RTN","RGPRELIG",24,0)
QUE ;QUE TO RUN
"RTN","RGPRELIG",25,0)
 S %ZIS="Q",%ZIS("A")="DEVICE: " D ^%ZIS G:POP KILL K %ZIS
"RTN","RGPRELIG",26,0)
 I IO=IO(0) K ZTSK G EN
"RTN","RGPRELIG",27,0)
 S ZTRTN="EN^RGPRELIG",ZTDESC="CIRN - File 8 & 8.1 Compare" D ^%ZTLOAD
"RTN","RGPRELIG",28,0)
 W !!,$S($D(ZTSK):"Request Queued, Task #"_ZTSK,1:"Request Cancelled")
"RTN","RGPRELIG",29,0)
 D HOME^%ZIS U IO
"RTN","RGPRELIG",30,0)
 G KILL
"RTN","RGPRELIG",31,0)
 Q
"RTN","RGPRELIG",32,0)
FINAL ;END STATEMENT
"RTN","RGPRELIG",33,0)
 W !,"*** = INACTIVE ELIGIBILITY"
"RTN","RGPRELIG",34,0)
 W !,"If an entry in the File 8 column has NO MATCHING ENTRY listed in the"
"RTN","RGPRELIG",35,0)
 W !,"File 8.1 column, please contact your IRM Service.  See pages 14 & 15"
"RTN","RGPRELIG",36,0)
 W !,"in the PIMS Technical manual on Eligibility/ID Maintenance Menu."
"RTN","RGPRELIG",37,0)
KILL ;KILL LOCALS
"RTN","RGPRELIG",38,0)
 K RGFS,RGPR,RGPR1,ZTSK,I,POP,ZTDESC,ZTRTN
"RTN","RGPRELIG",39,0)
 D ^%ZISC S DTIME=$$DTIME^XUP($G(DUZ))
"RTN","RGPRELIG",40,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","RGPRELIG",41,0)
 Q
"RTN","RGPRELIG",42,0)
DISP ;DISPLAY AND FIND ANY STRAYS
"RTN","RGPRELIG",43,0)
 I RGFS'="" I $E(IOST,1,2)="C-"&(IO=IO(0)) D
"RTN","RGPRELIG",44,0)
 . S DIR(0)="E"
"RTN","RGPRELIG",45,0)
 . D ^DIR K DIR
"RTN","RGPRELIG",46,0)
 Q:$D(DUOUT)!($D(DTOUT))
"RTN","RGPRELIG",47,0)
 W:$D(IOF) @IOF
"RTN","RGPRELIG",48,0)
 W #!!,"CIRN: ELIGIBILITY CODE REVIEW" D NOW^%DTC,YX^%DTC W ?50,Y,!! K Y
"RTN","RGPRELIG",49,0)
 W "ELIGIBILITY CODE File (8)",?40,"MAS ELIGIBILITY CODE File (8.1)",!,"=========================",?40,"===============================",!
"RTN","RGPRELIG",50,0)
 S RGFS=1
"RTN","RGPRSSN")
0^150^B29982029
"RTN","RGPRSSN",1,0)
RGPRSSN ;WAS/FHM-CIRN Pseudo/Missing SSN Report ;6-25-1998
"RTN","RGPRSSN",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGPRSSN",3,0)
 ;WAS/FHM ;EXTRACT BAD SSN AND SORTS THEM BY CLASSIFICATION
"RTN","RGPRSSN",4,0)
 ;
"RTN","RGPRSSN",5,0)
 W !,"This report will provide a list of:"
"RTN","RGPRSSN",6,0)
 W !,"(1) any B Cross-references (there is no 'zero' node but a B x-ref)"
"RTN","RGPRSSN",7,0)
 W !,"    on the patient file,"
"RTN","RGPRSSN",8,0)
 W !,"(2) patients with Pseudo SSNs who have not had activity within the past 3 years,"
"RTN","RGPRSSN",9,0)
 W !,"(3) patients with Pseudo SSNs who have had activity within the past 3 years.",!
"RTN","RGPRSSN",10,0)
 W !,"The Reports are sorted by Primary Eligibility Code. The report can"
"RTN","RGPRSSN",11,0)
 W !,"be queued if desired."
"RTN","RGPRSSN",12,0)
 W !,!,"For CIRN purposes, general advice is to concentrate first on"
"RTN","RGPRSSN",13,0)
 W !,"getting correct SSNs for the patients who HAVE had activity within"
"RTN","RGPRSSN",14,0)
 W !,"the past 3 years.",!
"RTN","RGPRSSN",15,0)
 S %ZIS="QM" D ^%ZIS G EXIT:POP
"RTN","RGPRSSN",16,0)
 K ^TMP($J)
"RTN","RGPRSSN",17,0)
 I $D(IO("Q")) D  Q
"RTN","RGPRSSN",18,0)
   .S ZTRTN="DQ^RGPRSSN",ZTDESC="CIRN SSN VALIDATION"
"RTN","RGPRSSN",19,0)
   .D ^%ZTLOAD D HOME^%ZIS K IO("Q")
"RTN","RGPRSSN",20,0)
DQ N DTOUT,DUOUT S RGFS=1,PRNTCODE="",RGPRNTCO=""
"RTN","RGPRSSN",21,0)
 U IO W @IOF,!,"CIRN Report of Pseudo, missing & potentially false SSNs "
"RTN","RGPRSSN",22,0)
 D NOW^%DTC D YX^%DTC
"RTN","RGPRSSN",23,0)
 W ?55,Y,!
"RTN","RGPRSSN",24,0)
 W !,"Bad B Cross References Report"
"RTN","RGPRSSN",25,0)
 W !,"Please contact IRM for assistance with bad B Cross references."
"RTN","RGPRSSN",26,0)
 W !,"----------------------------------------------------------------------------"
"RTN","RGPRSSN",27,0)
 S BREF=0
"RTN","RGPRSSN",28,0)
 S NAME=""
"RTN","RGPRSSN",29,0)
 F  S NAME=$O(^DPT("B",NAME)) Q:NAME=""  D
"RTN","RGPRSSN",30,0)
   .S REFNO=0
"RTN","RGPRSSN",31,0)
   .S REFNO=$O(^DPT("B",NAME,REFNO)) Q:REFNO=""
"RTN","RGPRSSN",32,0)
   .IF $D(^DPT(REFNO,0)) S NODE=^DPT(REFNO,0),RGSSN=$P(NODE,"^",9)
"RTN","RGPRSSN",33,0)
   .E  S BREF=1 W !,"B Cross Reference with no 0 Node in DPT: DFN= ",REFNO Q
"RTN","RGPRSSN",34,0)
   .IF RGSSN="" S RGSSN="None"
"RTN","RGPRSSN",35,0)
   .IF RGSSN'?9N S SCRATCH=$$SETGBL
"RTN","RGPRSSN",36,0)
   .IF RGSSN="123456789" S SCRATCH=$$SETGBL
"RTN","RGPRSSN",37,0)
   .IF RGSSN="000000000" S SCRATCH=$$SETGBL
"RTN","RGPRSSN",38,0)
   .IF RGSSN="111111111" S SCRATCH=$$SETGBL
"RTN","RGPRSSN",39,0)
   .IF RGSSN="222222222" S SCRATCH=$$SETGBL
"RTN","RGPRSSN",40,0)
   .IF RGSSN="333333333" S SCRATCH=$$SETGBL
"RTN","RGPRSSN",41,0)
   .IF RGSSN="444444444" S SCRATCH=$$SETGBL
"RTN","RGPRSSN",42,0)
   .IF RGSSN="555555555" S SCRATCH=$$SETGBL
"RTN","RGPRSSN",43,0)
   .IF RGSSN="666666666" S SCRATCH=$$SETGBL
"RTN","RGPRSSN",44,0)
   .IF RGSSN="777777777" S SCRATCH=$$SETGBL
"RTN","RGPRSSN",45,0)
   .IF RGSSN="888888888" S SCRATCH=$$SETGBL
"RTN","RGPRSSN",46,0)
   .IF RGSSN?1"9"8N S SCRATCH=$$SETGBL
"RTN","RGPRSSN",47,0)
   .QUIT
"RTN","RGPRSSN",48,0)
 IF BREF=0 W !,"*** No Bad B Cross References Found in your account.***"
"RTN","RGPRSSN",49,0)
LST S (ACTIV1,ECODE1,NAME1,REFNO1)=""
"RTN","RGPRSSN",50,0)
LST1 S ACTIV1=$O(^TMP($J,ACTIV1)) G EXIT:ACTIV1="" D HEADER G EXIT:$D(DUOUT)!($D(DTOUT))
"RTN","RGPRSSN",51,0)
LST2 S ECODE1=$O(^TMP($J,ACTIV1,ECODE1))  G LST1:ECODE1="" D:$Y>(IOSL-4) HEADER,HEAD2 G:$D(DUOUT)!($D(DTOUT)) EXIT W ! S SCRATCH=$$GETECODE
"RTN","RGPRSSN",52,0)
LST3 S NAME1=$O(^TMP($J,ACTIV1,ECODE1,NAME1))  G LST2:NAME1="" D:$Y>(IOSL-4) HEADER,HEAD2 G:$D(DUOUT)!($D(DTOUT)) EXIT
"RTN","RGPRSSN",53,0)
 S REFNO1=^TMP($J,ACTIV1,ECODE1,NAME1)
"RTN","RGPRSSN",54,0)
 S (PHONE,RGSSN,ECODE)="None"
"RTN","RGPRSSN",55,0)
 ;Using VADPT for PHONE# , SSN     ,eligibility code, and Name  
"RTN","RGPRSSN",56,0)
 K VAPTYP,VAHOW,VAROOT,VADM,VAEL,VAPA,VATEST S DFN=REFNO1 D ADD^VADPT,DEM^VADPT,ELIG^VADPT S NAME=VADM(1),RGSSN=$P(VADM(2),U),PHONE=VAPA(8),ECODE=$P(VAEL(1),U)
"RTN","RGPRSSN",57,0)
 K VAPTYP,VAHOW,VAROOT,VADM,VAEL,VAPA,VATEST
"RTN","RGPRSSN",58,0)
 S ACTIVITY=$$ACTIVE(REFNO1)
"RTN","RGPRSSN",59,0)
 W !,?10,ECODE,?20,NAME1,?54,RGSSN,?65,PHONE
"RTN","RGPRSSN",60,0)
 GOTO LST3
"RTN","RGPRSSN",61,0)
EXIT D ^%ZISC
"RTN","RGPRSSN",62,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","RGPRSSN",63,0)
 K ^TMP($J)
"RTN","RGPRSSN",64,0)
 K ACTIV1,ACTIVITY,BREF,ECODE,ECODE1,NAME,NAME1,NODE,NODE2,NODE3
"RTN","RGPRSSN",65,0)
 K NODE4,PHONE,PRNTCODE,REFNO,REFNO1,RGFS,RGPRNTCO,SCRATCH,RGSSN,ZTREQ,%ZIS,NODE1,POP,ZTDESC,ZTRTN
"RTN","RGPRSSN",66,0)
 QUIT
"RTN","RGPRSSN",67,0)
SETGBL()        ;SETS GLOBAL
"RTN","RGPRSSN",68,0)
 S ECODE=""
"RTN","RGPRSSN",69,0)
 K VAEL S DFN=REFNO D ELIG^VADPT S ECODE=$P(VAEL(1),U)
"RTN","RGPRSSN",70,0)
 IF ECODE="" S ECODE="None"
"RTN","RGPRSSN",71,0)
 S ACTIVITY=$$ACTIVE(REFNO)
"RTN","RGPRSSN",72,0)
 S ^TMP($J,ACTIVITY,ECODE,NAME)=REFNO
"RTN","RGPRSSN",73,0)
 QUIT 1
"RTN","RGPRSSN",74,0)
GETECODE()      ;
"RTN","RGPRSSN",75,0)
 S PRNTCODE="None"
"RTN","RGPRSSN",76,0)
 IF $D(^DIC(8,ECODE1,0)) S NODE4=^DIC(8,ECODE1,0),PRNTCODE=$P(NODE4,"^",1)
"RTN","RGPRSSN",77,0)
 W !,PRNTCODE S RGFS=0
"RTN","RGPRSSN",78,0)
 QUIT 1
"RTN","RGPRSSN",79,0)
LTD(DFN)        ;
"RTN","RGPRSSN",80,0)
 ;FIND LAST TREATMENT DATE
"RTN","RGPRSSN",81,0)
 ;INPUT: DFN
"RTN","RGPRSSN",82,0)
 ;OUTPUT: LTD LAST TREATMENT DATE
"RTN","RGPRSSN",83,0)
 ;
"RTN","RGPRSSN",84,0)
 ;
"RTN","RGPRSSN",85,0)
 N LTD,X
"RTN","RGPRSSN",86,0)
 ;
"RTN","RGPRSSN",87,0)
 ; - NEED A PATIENT
"RTN","RGPRSSN",88,0)
 I '$G(DFN) S LTD=0 G LTDQ
"RTN","RGPRSSN",89,0)
 ;
"RTN","RGPRSSN",90,0)
 ; - IF CURRENT INPATIENT, SET LTD = TODAY AND QUIT
"RTN","RGPRSSN",91,0)
 ;Current admission movement from ADM^VAPDT2
"RTN","RGPRSSN",92,0)
 K VADMVT,VAINDT D ADM^VADPT2 I $L(VADMVT) S LTD=DT K VADMVT,VAERR,VAINDT G LTDQ
"RTN","RGPRSSN",93,0)
 K VADMVT,VAERR,VAINDT
"RTN","RGPRSSN",94,0)
 ;
"RTN","RGPRSSN",95,0)
 ; - GET THE LAST DISCHARGE DATE
"RTN","RGPRSSN",96,0)
 S LTD=+$O(^DGPM("ATID3",DFN,"")) S:LTD LTD=9999999.9999999-LTD\1 S:LTD>DT LTD=DT
"RTN","RGPRSSN",97,0)
 ;
"RTN","RGPRSSN",98,0)
 ; - GET THE LAST REGISTRATION DATE AND COMPARE IT TO LTD
"RTN","RGPRSSN",99,0)
 K VAROOT,VARP,^UTILITY("VARP",$J) S VARP("F")=2000101 D REG^VADPT I $D(^UTILITY("VARP",$J,1,"I")) S X=$P(^("I"),U) I X S X=X\1 S:X>LTD LTD=X
"RTN","RGPRSSN",100,0)
 K ^UTILITY("VARP",$J),VARP,VAERR
"RTN","RGPRSSN",101,0)
 ;
"RTN","RGPRSSN",102,0)
 ; - GET THE LAST APPOINTMENT DATE AND COMPARE TO LTD
"RTN","RGPRSSN",103,0)
 K VASD,^UTILTIY("VASD",$J) S VASD("F")=2000101 D SDA^VADPT S Y="" F  S Y=$O(^UTILITY("VASD",$J,Y)) Q:'Y  I $P(^UTILITY("VASD",$J,Y,"I"),U,3)="" S X=$P(^("I"),U) I X S X=X\1 S:X>LTD LTD=X
"RTN","RGPRSSN",104,0)
 K VASD,VAERR,^UTILITY("VASD",$J)
"RTN","RGPRSSN",105,0)
 ;
"RTN","RGPRSSN",106,0)
 ; - GET THE LAST STOP AND COMPARE TO LTD
"RTN","RGPRSSN",107,0)
 ; Look at Outpatient Encounter, ^SDV is going away
"RTN","RGPRSSN",108,0)
 ; Use an API instead of ordering through global
"RTN","RGPRSSN",109,0)
 N OPIEN S OPIEN=$$GETLAST^SDOE(DFN,2000101,"C")
"RTN","RGPRSSN",110,0)
 I $G(^SCE(+OPIEN,0)) S LTD=$P(^SCE(OPIEN,0),"^",1)\1
"RTN","RGPRSSN",111,0)
 ;
"RTN","RGPRSSN",112,0)
LTDQ ;
"RTN","RGPRSSN",113,0)
 Q $S(LTD:LTD,1:0)
"RTN","RGPRSSN",114,0)
 ;
"RTN","RGPRSSN",115,0)
ACTIVE(DFN) ;
"RTN","RGPRSSN",116,0)
 N LTD,TODAY,DIFF
"RTN","RGPRSSN",117,0)
 S LTD=$$LTD(DFN)
"RTN","RGPRSSN",118,0)
 Q:LTD'>0 "NO"
"RTN","RGPRSSN",119,0)
 Q:$L(LTD)'=7 1_"^"_LTD_"^"_"ZERO"
"RTN","RGPRSSN",120,0)
 S TODAY=$$NOW^XLFDT\1
"RTN","RGPRSSN",121,0)
 S DIFF=$$FMDIFF^XLFDT(TODAY,LTD)
"RTN","RGPRSSN",122,0)
 ; if difference is > 1096 days or 3 years
"RTN","RGPRSSN",123,0)
 I DIFF>1096 Q "NO"
"RTN","RGPRSSN",124,0)
 Q "YES"
"RTN","RGPRSSN",125,0)
HEADER ;PRINT REPORT HEADER
"RTN","RGPRSSN",126,0)
 I ($E(IOST,1,2)="C-")&(IO=IO(0)) D
"RTN","RGPRSSN",127,0)
 . S DIR(0)="E"
"RTN","RGPRSSN",128,0)
 . D ^DIR K DIR
"RTN","RGPRSSN",129,0)
 Q:$D(DUOUT)!($D(DTOUT))
"RTN","RGPRSSN",130,0)
 ;;;W:$D(IOF) @IOF
"RTN","RGPRSSN",131,0)
 W @IOF,!,"CIRN Report of Pseudo, missing & potentially false SSNs "
"RTN","RGPRSSN",132,0)
 D NOW^%DTC D YX^%DTC
"RTN","RGPRSSN",133,0)
 W ?55,Y,! K Y
"RTN","RGPRSSN",134,0)
 W !,?20,"Patient activity within past 3 years = ",$G(ACTIV1)
"RTN","RGPRSSN",135,0)
 W !,?1,"Primary"
"RTN","RGPRSSN",136,0)
 W !,?1,"Elig Code"
"RTN","RGPRSSN",137,0)
 W !,?10,"Elig.",?20,"Name",?54,"SSN",?65,"Home Phone"
"RTN","RGPRSSN",138,0)
 W !,"-----------------------------------------------------------------------------"
"RTN","RGPRSSN",139,0)
 Q
"RTN","RGPRSSN",140,0)
HEAD2 ;SUB HEADER
"RTN","RGPRSSN",141,0)
 Q:$D(DUOUT)!($D(DTOUT))
"RTN","RGPRSSN",142,0)
 I RGFS=0,PRNTCODE=RGPRNTCO W !,PRNTCODE
"RTN","RGPRSSN",143,0)
 E  I RGFS=0 W !,PRNTCODE S RGPRNTCO=PRNTCODE
"RTN","RGPRSSN",144,0)
 Q
"RTN","RGRSBUL1")
0^146^B16213443
"RTN","RGRSBUL1",1,0)
RGRSBUL1 ;ALB/RJS,CML-RGRSTEXT BULLTINE ROUTINE (PART 2) ;07/24/98
"RTN","RGRSBUL1",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGRSBUL1",3,0)
SSNBULL(DFN,ARRAY,NAME,SSN,ICN,CMOR) ;
"RTN","RGRSBUL1",4,0)
 ;Entry point generates a bulletin to the RG CIRN DEMOGRAPHIC
"RTN","RGRSBUL1",5,0)
 ;ISSUES mail group about an SSN change for a given patient.
"RTN","RGRSBUL1",6,0)
 ;
"RTN","RGRSBUL1",7,0)
 ;Input:  Required Variables
"RTN","RGRSBUL1",8,0)
 ;
"RTN","RGRSBUL1",9,0)
 ;   DFN   - IEN in the PATIENT file (#2)
"RTN","RGRSBUL1",10,0)
 ;  ARRAY  - Array of data containing sending sites station number
"RTN","RGRSBUL1",11,0)
 ;   NAME  - Patient's Name
"RTN","RGRSBUL1",12,0)
 ;   SSN   - Patient's SSN
"RTN","RGRSBUL1",13,0)
 ;   ICN   - Patient's ICN (Integration Control Number) 
"RTN","RGRSBUL1",14,0)
 ;   CMOR  - Patient's CMOR (CIRN Master of Record)
"RTN","RGRSBUL1",15,0)
 ;
"RTN","RGRSBUL1",16,0)
 Q:$G(DFN)=""!($G(ARRAY)="")
"RTN","RGRSBUL1",17,0)
 N LOCDATA,RGRSTEXT,INDEX,COUNTER
"RTN","RGRSBUL1",18,0)
 S RGRSTEXT(1)="The CIRN Package has received an SSN change from:"
"RTN","RGRSBUL1",19,0)
 S RGRSTEXT(2)=$$INST(@ARRAY@("SENDING SITE"))
"RTN","RGRSBUL1",20,0)
 S RGRSTEXT(3)="           "
"RTN","RGRSBUL1",21,0)
 S RGRSTEXT(4)="This change has been made in your local data base for:"
"RTN","RGRSBUL1",22,0)
 S RGRSTEXT(5)=NAME
"RTN","RGRSBUL1",23,0)
 S RGRSTEXT(6)="           "
"RTN","RGRSBUL1",24,0)
 S RGRSTEXT(7)="=> Local "_$P($$SITE^VASITE(),"^",2)_" data PRIOR to update:"
"RTN","RGRSBUL1",25,0)
 S RGRSTEXT(8)="NAME: "_NAME
"RTN","RGRSBUL1",26,0)
 S RGRSTEXT(9)="SSN: "_SSN
"RTN","RGRSBUL1",27,0)
 S RGRSTEXT(10)="ICN: "_ICN
"RTN","RGRSBUL1",28,0)
 S RGRSTEXT(11)="CMOR: "_CMOR
"RTN","RGRSBUL1",29,0)
 S RGRSTEXT(12)="--------------------------------------------------------"
"RTN","RGRSBUL1",30,0)
 S RGRSTEXT(13)="=> Update received from "_$P($$INST(@ARRAY@("SENDING SITE"))," -->")_":"
"RTN","RGRSBUL1",31,0)
 S RGRSTEXT(14)="SSN: "_@ARRAY@("SSN")
"RTN","RGRSBUL1",32,0)
 D BULL2^RGRSBULL("CIRN SSN CHANGE - "_NAME,"RGRSTEXT(")
"RTN","RGRSBUL1",33,0)
 Q
"RTN","RGRSBUL1",34,0)
 ;
"RTN","RGRSBUL1",35,0)
NOT2(ARRAY) ;
"RTN","RGRSBUL1",36,0)
 ;Entry point generates a bulletin to the RG CIRN DEMOGRAPHIC
"RTN","RGRSBUL1",37,0)
 ;ISSUES mail group about invalid subscription information for a given
"RTN","RGRSBUL1",38,0)
 ;patient.
"RTN","RGRSBUL1",39,0)
 ;
"RTN","RGRSBUL1",40,0)
 ;Input:  Required Variables
"RTN","RGRSBUL1",41,0)
 ;
"RTN","RGRSBUL1",42,0)
 ;  ARRAY  - Array of information regarding the invalid subscription
"RTN","RGRSBUL1",43,0)
 ;
"RTN","RGRSBUL1",44,0)
 Q:($G(ARRAY)="")
"RTN","RGRSBUL1",45,0)
 N RGRSTEXT,INDEX,COUNTER
"RTN","RGRSBUL1",46,0)
 S RGRSTEXT(1)="The CIRN Package has received a message from:"
"RTN","RGRSBUL1",47,0)
 S RGRSTEXT(2)=$$INST(@ARRAY@("SENDING SITE"))
"RTN","RGRSBUL1",48,0)
 S RGRSTEXT(3)="This patient has your station as a subscriber, however"
"RTN","RGRSBUL1",49,0)
 S RGRSTEXT(4)="the patient was not found in your database."
"RTN","RGRSBUL1",50,0)
 S RGRSTEXT(5)="--------------------------------------------------------"
"RTN","RGRSBUL1",51,0)
 S RGRSTEXT(6)="Remote Data"
"RTN","RGRSBUL1",52,0)
 S RGRSTEXT(7)="           "
"RTN","RGRSBUL1",53,0)
 S INDEX=0,COUNTER=8
"RTN","RGRSBUL1",54,0)
 F  S INDEX=$O(@ARRAY@("MESSAGE",INDEX)) Q:INDEX']""  D
"RTN","RGRSBUL1",55,0)
 . S RGRSTEXT(COUNTER)=@ARRAY@("MESSAGE",INDEX)
"RTN","RGRSBUL1",56,0)
 . S COUNTER=COUNTER+1
"RTN","RGRSBUL1",57,0)
 D BULL2^RGRSBULL("CIRN - PATIENT NOT FOUND","RGRSTEXT(")
"RTN","RGRSBUL1",58,0)
 Q
"RTN","RGRSBUL1",59,0)
 ;
"RTN","RGRSBUL1",60,0)
SENSTIVE(DFN,ARRAY,NAME) ;FIRES WHEN PT. IS FLAGGED AS SENSITIVE AT ANOTHER SITE
"RTN","RGRSBUL1",61,0)
 ;Entry point generates a bulletin to the RG CIRN DEMOGRAPHIC
"RTN","RGRSBUL1",62,0)
 ;ISSUES mail group when a given patient is flagged as sensitive at
"RTN","RGRSBUL1",63,0)
 ;another site.
"RTN","RGRSBUL1",64,0)
 ;
"RTN","RGRSBUL1",65,0)
 ;Input:  Required Variables
"RTN","RGRSBUL1",66,0)
 ;
"RTN","RGRSBUL1",67,0)
 ;   DFN  - IEN in the PATIENT file (#2)
"RTN","RGRSBUL1",68,0)
 ;  ARRAY - Array of data containing sending sites station number
"RTN","RGRSBUL1",69,0)
 ;  NAME  - Patient's name
"RTN","RGRSBUL1",70,0)
 ;
"RTN","RGRSBUL1",71,0)
 Q:($G(ARRAY)="")!($G(DFN)="")
"RTN","RGRSBUL1",72,0)
 N RGRSTEXT,INDEX,COUNTER
"RTN","RGRSBUL1",73,0)
 S RGRSTEXT(1)="The CIRN Package has received a message from:"
"RTN","RGRSBUL1",74,0)
 S RGRSTEXT(2)=$$INST(@ARRAY@("SENDING SITE"))
"RTN","RGRSBUL1",75,0)
 S RGRSTEXT(3)="   "
"RTN","RGRSBUL1",76,0)
 S RGRSTEXT(4)="This message indicates that Pt. "_NAME_" is flagged as Sensitive at"
"RTN","RGRSBUL1",77,0)
 S RGRSTEXT(5)="the other facility but is not flagged as Sensitive at your facility."
"RTN","RGRSBUL1",78,0)
 S RGRSTEXT(6)="  "
"RTN","RGRSBUL1",79,0)
 S RGRSTEXT(7)="Remote User Who Flagged the Pt as Sensitive: "_@ARRAY@("SENSITIVITY USER")
"RTN","RGRSBUL1",80,0)
 S RGRSTEXT(8)="Date/time remote user Flagged Pt Sensitive:  "_$$FMTE^XLFDT(@ARRAY@("SENSITIVITY DATE"))
"RTN","RGRSBUL1",81,0)
 D BULL2^RGRSBULL("Remote Sensitivity Indicated","RGRSTEXT(")
"RTN","RGRSBUL1",82,0)
 Q
"RTN","RGRSBUL1",83,0)
 ;
"RTN","RGRSBUL1",84,0)
INST(SITENUM) ;
"RTN","RGRSBUL1",85,0)
 N RETURN,IEN,DATA,NAME,NUMBER
"RTN","RGRSBUL1",86,0)
 S RETURN=""
"RTN","RGRSBUL1",87,0)
 Q:$G(SITENUM)="" RETURN
"RTN","RGRSBUL1",88,0)
 S IEN=$$LKUP^XUAF4(SITENUM)
"RTN","RGRSBUL1",89,0)
 I IEN>0 S DATA=$$NS^XUAF4(IEN)
"RTN","RGRSBUL1",90,0)
 I $G(DATA)]"" D 
"RTN","RGRSBUL1",91,0)
 . S NAME=$P(DATA,"^",1),NUMBER=$P(DATA,"^",2)
"RTN","RGRSBUL1",92,0)
 . S RETURN=NAME_" --> Site Number: "_NUMBER
"RTN","RGRSBUL1",93,0)
 Q RETURN
"RTN","RGRSBUL1",94,0)
 ;
"RTN","RGRSBUL1",95,0)
FORMAT(DATA1,DATA2) ;
"RTN","RGRSBUL1",96,0)
 N SPACES,SPACENUM,LENGTH1,LENGTH2,RETURN
"RTN","RGRSBUL1",97,0)
 S SPACES="                       "
"RTN","RGRSBUL1",98,0)
 S LENGTH1=$L(DATA1),LENGTH2=$L(DATA2)
"RTN","RGRSBUL1",99,0)
 I LENGTH1>23 S DATA1=$E(DATA1,1,23) S LENGTH1=23
"RTN","RGRSBUL1",100,0)
 I LENGTH2>22 S DATA2=$E(DATA2,1,22)
"RTN","RGRSBUL1",101,0)
 S SPACENUM=23-LENGTH1
"RTN","RGRSBUL1",102,0)
 S SPACES=$E(SPACES,1,SPACENUM)
"RTN","RGRSBUL1",103,0)
 S RETURN=DATA1_SPACES_" "_DATA2
"RTN","RGRSBUL1",104,0)
 Q $G(RETURN)
"RTN","RGRSBUL1",105,0)
 ;
"RTN","RGRSBUL1",106,0)
FREE(DATA) ;
"RTN","RGRSBUL1",107,0)
 Q:$G(DATA)="" ""
"RTN","RGRSBUL1",108,0)
 Q:$G(DATA)["@" ""
"RTN","RGRSBUL1",109,0)
 Q:$G(DATA)=HL("Q") ""
"RTN","RGRSBUL1",110,0)
 Q $G(DATA)
"RTN","RGRSBULL")
0^84^B32274652
"RTN","RGRSBULL",1,0)
RGRSBULL ;ALB/RJS,CML-RGRSTEXT BULLETIN ROUTINE ;07/24/98
"RTN","RGRSBULL",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGRSBULL",3,0)
BULL(XMB,XMTEXT) ;
"RTN","RGRSBULL",4,0)
 ;Entry point generates a bulletin when a notification
"RTN","RGRSBULL",5,0)
 ;from the CIRN package has been generated
"RTN","RGRSBULL",6,0)
 ;
"RTN","RGRSBULL",7,0)
 ;Input:Required variables
"RTN","RGRSBULL",8,0)
 ;  
"RTN","RGRSBULL",9,0)
 ;      XMB    - Bulletin name e.g. ("RG CIRN DEMOGRAPHIC ISSUES")
"RTN","RGRSBULL",10,0)
 ;      XMTEXT - global or array root (EX. "^TMP("), location of 
"RTN","RGRSBULL",11,0)
 ;               error message(s)
"RTN","RGRSBULL",12,0)
 ;
"RTN","RGRSBULL",13,0)
 ;If XMY is defined, the call to ^XMB will process accordingly.
"RTN","RGRSBULL",14,0)
 ;XMY is used to pass additional recipients.
"RTN","RGRSBULL",15,0)
 ;
"RTN","RGRSBULL",16,0)
 Q:$G(XMB)=""!($G(XMTEXT)="")
"RTN","RGRSBULL",17,0)
 D NOW^%DTC S XMDT=X K X
"RTN","RGRSBULL",18,0)
 S XMDUZ="CIRN PACKAGE"
"RTN","RGRSBULL",19,0)
 D ^XMB
"RTN","RGRSBULL",20,0)
 K XMDT,XMDUZ
"RTN","RGRSBULL",21,0)
 Q
"RTN","RGRSBULL",22,0)
BULL2(XMSUB,XMTEXT) ;
"RTN","RGRSBULL",23,0)
 N XMY,XMDUZ
"RTN","RGRSBULL",24,0)
 S XMY("G.RG CIRN DEMOGRAPHIC ISSUES")=""
"RTN","RGRSBULL",25,0)
 S XMDUZ="CIRN PACKAGE"
"RTN","RGRSBULL",26,0)
 D ^XMD
"RTN","RGRSBULL",27,0)
 Q
"RTN","RGRSBULL",28,0)
 ;
"RTN","RGRSBULL",29,0)
ADDRESS(DFN,NAME,LINE1,LINE2,LINE3,SENDSITE,CITY,COUNTY,STATE,ZIP) ;
"RTN","RGRSBULL",30,0)
 ;Entry point generates a bulletin to the RG CIRN DEMOGRAPHIC
"RTN","RGRSBULL",31,0)
 ;ISSUES mail group about changes to the address of a given patient.
"RTN","RGRSBULL",32,0)
 ;
"RTN","RGRSBULL",33,0)
 ;Input:  Required Variables
"RTN","RGRSBULL",34,0)
 ;
"RTN","RGRSBULL",35,0)
 ;   DFN   - IEN in the PATIENT file (#2)
"RTN","RGRSBULL",36,0)
 ;   NAME  - Patient's Name
"RTN","RGRSBULL",37,0)
 ;   LINE1,LINE2,LINE3 - Lines of the Address
"RTN","RGRSBULL",38,0)
 ; SENDSITE- The station number of the site that initiated the change
"RTN","RGRSBULL",39,0)
 ;    CITY - city
"RTN","RGRSBULL",40,0)
 ;  COUNTY - county
"RTN","RGRSBULL",41,0)
 ;   STATE - state
"RTN","RGRSBULL",42,0)
 ;     ZIP - zip
"RTN","RGRSBULL",43,0)
 ;
"RTN","RGRSBULL",44,0)
 Q:$G(DFN)=""!($G(NAME)="")
"RTN","RGRSBULL",45,0)
 Q:$G(^DPT(DFN,0))=""
"RTN","RGRSBULL",46,0)
 N RGADRES,DA,DIC,DR,ADDR1,ADDR11,ADDR2,ADDR22,ADDR3,ADDR33,LINE11,LINE22,LINE33,ADDR4,ADDR44,ADDR5,ADDR55,ADDR6,ADDR66,ADDR7,ADDR77,DELFLG
"RTN","RGRSBULL",47,0)
 S DIC=2,DR=".111;.112;.113;.114;.115;.117;.1112",DA=DFN,DIQ="RGADRES",DIQ(0)="E" D EN^DIQ1
"RTN","RGRSBULL",48,0)
 S ADDR1=$G(RGADRES(2,DFN,.111,"E")),ADDR2=$G(RGADRES(2,DFN,.112,"E")),ADDR3=$G(RGADRES(2,DFN,.113,"E")),ADDR4=$G(RGADRES(2,DFN,.114,"E")),ADDR5=$G(RGADRES(2,DFN,.115,"E")),ADDR6=$G(RGADRES(2,DFN,.117,"E")),ADDR7=$G(RGADRES(2,DFN,.1112,"E"))
"RTN","RGRSBULL",49,0)
 ;
"RTN","RGRSBULL",50,0)
 S ADDR6=$$COUNTY^RGRSPARS(ADDR5,ADDR6)
"RTN","RGRSBULL",51,0)
 ;
"RTN","RGRSBULL",52,0)
 ;Check for null or deleted address fields from remote site
"RTN","RGRSBULL",53,0)
 ;
"RTN","RGRSBULL",54,0)
 S DELFLG=0
"RTN","RGRSBULL",55,0)
 ;
"RTN","RGRSBULL",56,0)
 I $S(LINE1="@":1,LINE1="""@""":1,LINE1="""""":1,1:LINE1="") D
"RTN","RGRSBULL",57,0)
 .I ADDR1'="" S DELFLG=1,LINE1="<<DELETED>>" Q
"RTN","RGRSBULL",58,0)
 .S LINE1=""
"RTN","RGRSBULL",59,0)
 ;
"RTN","RGRSBULL",60,0)
 I $S(LINE2="@":1,LINE2="""@""":1,LINE2="""""":1,1:LINE2="") D
"RTN","RGRSBULL",61,0)
 .I ADDR2'="" S LINE2="<<DELETED>>" Q
"RTN","RGRSBULL",62,0)
 .S LINE2=""
"RTN","RGRSBULL",63,0)
 ;
"RTN","RGRSBULL",64,0)
 I $S(LINE3="@":1,LINE3="""@""":1,LINE3="""""":1,1:LINE3="") D
"RTN","RGRSBULL",65,0)
 .I ADDR3'="" S LINE3="<<DELETED>>" Q
"RTN","RGRSBULL",66,0)
 .S LINE3=""
"RTN","RGRSBULL",67,0)
 ;
"RTN","RGRSBULL",68,0)
 I $S(CITY="@":1,CITY="""@""":1,CITY="""""":1,1:CITY="") D
"RTN","RGRSBULL",69,0)
 .I ADDR4'="" S DELFLG=1,CITY="<<DELETED>>" Q
"RTN","RGRSBULL",70,0)
 .S CITY=""
"RTN","RGRSBULL",71,0)
 ;
"RTN","RGRSBULL",72,0)
 I $S(STATE="@":1,STATE="""@""":1,STATE="""""":1,1:STATE="") D
"RTN","RGRSBULL",73,0)
 .I ADDR5'="" S DELFLG=1,STATE="<<DELETED>>" Q
"RTN","RGRSBULL",74,0)
 .S STATE=""
"RTN","RGRSBULL",75,0)
 ;
"RTN","RGRSBULL",76,0)
 I $S(COUNTY="@":1,COUNTY="""@""":1,COUNTY="""""":1,1:COUNTY="") D
"RTN","RGRSBULL",77,0)
 .I ADDR6'="" S DELFLG=1,COUNTY="<<DELETED>>" Q
"RTN","RGRSBULL",78,0)
 .S COUNTY=""
"RTN","RGRSBULL",79,0)
 ;
"RTN","RGRSBULL",80,0)
 I $S(ZIP="@":1,ZIP="""@""":1,ZIP="""""":1,1:ZIP="") D
"RTN","RGRSBULL",81,0)
 .I ADDR7'="" S DELFLG=1,ZIP="<<DELETED>>" Q
"RTN","RGRSBULL",82,0)
 .S ZIP=""
"RTN","RGRSBULL",83,0)
 ;
"RTN","RGRSBULL",84,0)
 I DELFLG G SENDADD
"RTN","RGRSBULL",85,0)
 ;
"RTN","RGRSBULL",86,0)
EXITADD ;
"RTN","RGRSBULL",87,0)
 Q
"RTN","RGRSBULL",88,0)
SENDADD ;
"RTN","RGRSBULL",89,0)
 N RGRSTEXT,XMSUB
"RTN","RGRSBULL",90,0)
 S RGRSTEXT(1)="The CIRN Package has received a message from:"
"RTN","RGRSBULL",91,0)
 S RGRSTEXT(2)=$$INST^RGRSBUL1(SENDSITE)
"RTN","RGRSBULL",92,0)
 S RGRSTEXT(3)="This message deleted address information for Patient:"
"RTN","RGRSBULL",93,0)
 S RGRSTEXT(4)=NAME
"RTN","RGRSBULL",94,0)
 S RGRSTEXT(5)="               "
"RTN","RGRSBULL",95,0)
 S RGRSTEXT(6)="                         <<OLD ADDRESS>>         <<NEW ADDRESS>>"
"RTN","RGRSBULL",96,0)
 S RGRSTEXT(7)="       "
"RTN","RGRSBULL",97,0)
 S RGRSTEXT(8)="STREET ADDRESS [LINE 1]: "_$$FORMAT^RGRSBUL1(ADDR1,LINE1)
"RTN","RGRSBULL",98,0)
 S RGRSTEXT(9)="STREET ADDRESS [LINE 2]: "_$$FORMAT^RGRSBUL1(ADDR2,LINE2)
"RTN","RGRSBULL",99,0)
 S RGRSTEXT(10)="STREET ADDRESS [LINE 3]: "_$$FORMAT^RGRSBUL1(ADDR3,LINE3)
"RTN","RGRSBULL",100,0)
 S RGRSTEXT(11)="                   CITY: "_$$FORMAT^RGRSBUL1(ADDR4,CITY)
"RTN","RGRSBULL",101,0)
 S RGRSTEXT(12)="                 COUNTY: "_$$FORMAT^RGRSBUL1(ADDR6,COUNTY)
"RTN","RGRSBULL",102,0)
 S RGRSTEXT(13)="                  STATE: "_$$FORMAT^RGRSBUL1(ADDR5,STATE)
"RTN","RGRSBULL",103,0)
 S RGRSTEXT(14)="                  ZIP+4: "_$$FORMAT^RGRSBUL1(ADDR7,ZIP)
"RTN","RGRSBULL",104,0)
 D BULL2($P(NAME,",",1)_" **CIRN ADDRESS DELETION**","RGRSTEXT(")
"RTN","RGRSBULL",105,0)
 G EXITADD
"RTN","RGRSBULL",106,0)
 ;
"RTN","RGRSBULL",107,0)
SKIPBULL(ARRAY) ;
"RTN","RGRSBULL",108,0)
 ;Entry point generates a bulletin to the RG CIRN DEMOGRAPHIC
"RTN","RGRSBULL",109,0)
 ;ISSUES mail group about missing required data for a given patient.
"RTN","RGRSBULL",110,0)
 ;
"RTN","RGRSBULL",111,0)
 ;Input:  Required Variables
"RTN","RGRSBULL",112,0)
 ;
"RTN","RGRSBULL",113,0)
 ;  ARRAY  - Array of information regarding missing required data
"RTN","RGRSBULL",114,0)
 ;
"RTN","RGRSBULL",115,0)
 Q:'$D(@ARRAY)
"RTN","RGRSBULL",116,0)
 N RGRSTEXT,INDEX,COUNTER
"RTN","RGRSBULL",117,0)
 S RGRSTEXT(1)="The CIRN Package has received a message from:"
"RTN","RGRSBULL",118,0)
 S RGRSTEXT(2)=$$INST^RGRSBUL1(@ARRAY@("SENDING SITE"))
"RTN","RGRSBULL",119,0)
 S RGRSTEXT(3)="This message was missing required data"
"RTN","RGRSBULL",120,0)
 S RGRSTEXT(4)="    "
"RTN","RGRSBULL",121,0)
 S INDEX=0,COUNTER=5
"RTN","RGRSBULL",122,0)
 F  S INDEX=$O(@ARRAY@(INDEX)) Q:INDEX']""  D
"RTN","RGRSBULL",123,0)
 . S RGRSTEXT(COUNTER)="FIELD: "_INDEX_" = "_@ARRAY@(INDEX)
"RTN","RGRSBULL",124,0)
 . S COUNTER=COUNTER+1
"RTN","RGRSBULL",125,0)
 D BULL2("CIRN - MISSING DATA","RGRSTEXT(")
"RTN","RGRSBULL",126,0)
 Q
"RTN","RGRSBULL",127,0)
 ;
"RTN","RGRSBULL",128,0)
MTCHBULL(DFN,ARRAY,NAME,SSN,ICN,CMOR,BULSUB) ;
"RTN","RGRSBULL",129,0)
 ;Entry point generates a bulletin to the RG CIRN DEMOGRAPHIC
"RTN","RGRSBULL",130,0)
 ;ISSUES mail group about differences in the data of a given patient.
"RTN","RGRSBULL",131,0)
 ;
"RTN","RGRSBULL",132,0)
 ;Input:  Required Variables
"RTN","RGRSBULL",133,0)
 ;
"RTN","RGRSBULL",134,0)
 ;   DFN   - IEN in the PATIENT file (#2)
"RTN","RGRSBULL",135,0)
 ;  ARRAY  - Array of data containing sending sites station number
"RTN","RGRSBULL",136,0)
 ;   NAME  - Patient's Name
"RTN","RGRSBULL",137,0)
 ;   SSN   - Patient's SSN
"RTN","RGRSBULL",138,0)
 ;   ICN   - Patient's ICN (Integration Control Number) 
"RTN","RGRSBULL",139,0)
 ;   CMOR  - Patient's CMOR (CIRN Master of Record)
"RTN","RGRSBULL",140,0)
 ;  BULSUB - Bulletin subject (Ex. ICN)
"RTN","RGRSBULL",141,0)
 ;
"RTN","RGRSBULL",142,0)
 Q:$G(DFN)=""!($G(ARRAY)="")
"RTN","RGRSBULL",143,0)
 N LOCDATA,RGRSTEXT,INDEX,COUNTER
"RTN","RGRSBULL",144,0)
 S RGRSTEXT(1)="The CIRN Package has received a message from:"
"RTN","RGRSBULL",145,0)
 S RGRSTEXT(2)=$$INST^RGRSBUL1(@ARRAY@("SENDING SITE"))
"RTN","RGRSBULL",146,0)
 S RGRSTEXT(3)="This message contains "_$P(BULSUB,"(")_" data that is"
"RTN","RGRSBULL",147,0)
 S RGRSTEXT(4)="inconsistent with your site's data."
"RTN","RGRSBULL",148,0)
 S RGRSTEXT(5)="           "
"RTN","RGRSBULL",149,0)
 S RGRSTEXT(6)="=> "_$P($$SITE^VASITE(),"^",2)_" local data:"
"RTN","RGRSBULL",150,0)
 S RGRSTEXT(7)="NAME: "_NAME
"RTN","RGRSBULL",151,0)
 S RGRSTEXT(8)="SSN: "_SSN
"RTN","RGRSBULL",152,0)
 S RGRSTEXT(9)="ICN: "_ICN
"RTN","RGRSBULL",153,0)
 S RGRSTEXT(10)="CMOR: "_CMOR
"RTN","RGRSBULL",154,0)
 S RGRSTEXT(11)="--------------------------------------------------------"
"RTN","RGRSBULL",155,0)
 S RGRSTEXT(12)="=> "_$P($$INST^RGRSBUL1(@ARRAY@("SENDING SITE"))," -->")_" data:"
"RTN","RGRSBULL",156,0)
 S COUNTER=12
"RTN","RGRSBULL",157,0)
 F INDEX="NAME","SSN","ICN","CMOR" D
"RTN","RGRSBULL",158,0)
 . I $D(@ARRAY@(INDEX)) S COUNTER=COUNTER+1,RGRSTEXT(COUNTER)=INDEX_": "_@ARRAY@(INDEX)
"RTN","RGRSBULL",159,0)
 D BULL2("CIRN - INCONSISTENT "_BULSUB,"RGRSTEXT(")
"RTN","RGRSBULL",160,0)
 Q
"RTN","RGRSDYN")
0^89^B5847609
"RTN","RGRSDYN",1,0)
RGRSDYN ;ALB/RJS-BUILD DYNAMIC LINK LIST FOR A PATIENT ;3-21-97
"RTN","RGRSDYN",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGRSDYN",3,0)
EN(CLIENT,CLASS) ;
"RTN","RGRSDYN",4,0)
 ;CLIENT=HL7 CLIENT PROTOCOL AT TARGET SYSTEM
"RTN","RGRSDYN",5,0)
 ;DATA CLASS (Opt.) = Pull from Subs. Registry ONLY
"RTN","RGRSDYN",6,0)
 ;For now, anything else is both DESCRIPTIVE AND CLINICAL
"RTN","RGRSDYN",7,0)
 S CLASS=$G(CLASS),CLIENT=$G(CLIENT)
"RTN","RGRSDYN",8,0)
 Q:CLIENT=""  ;No receiver
"RTN","RGRSDYN",9,0)
 N PPF,DFN,HERE,RGRS,PPFIEN
"RTN","RGRSDYN",10,0)
PARS ;Parse local outbound message
"RTN","RGRSDYN",11,0)
 N RGDC
"RTN","RGRSDYN",12,0)
 D INITIZE^RGRSUTIL,EN^RGRSPARS("RGRS")
"RTN","RGRSDYN",13,0)
 ;Get patients owner site
"RTN","RGRSDYN",14,0)
 S PPF=$G(RGRS("SITENUM"))\1 Q:PPF'>0
"RTN","RGRSDYN",15,0)
 S PPFIEN=$$LKUP^XUAF4(PPF)
"RTN","RGRSDYN",16,0)
 ;Get DFN
"RTN","RGRSDYN",17,0)
 S DFN=$G(RGRS("DFN")) Q:$G(DFN)']""
"RTN","RGRSDYN",18,0)
 Q:+$$SEND2^VAFCUTL1(DFN,"T")  ;quit if test patient
"RTN","RGRSDYN",19,0)
 Q:$$IFLOCAL^MPIF001(DFN)
"RTN","RGRSDYN",20,0)
 ;Where we're at
"RTN","RGRSDYN",21,0)
 S HERE=$P($$SITE^VASITE,"^",3)\1
"RTN","RGRSDYN",22,0)
NOTPPF ; if not ppf send only to ppf
"RTN","RGRSDYN",23,0)
 I PPF'=HERE D  Q
"RTN","RGRSDYN",24,0)
 . N PPFLINK,INDEX
"RTN","RGRSDYN",25,0)
 . D LINK^HLUTIL3(PPFIEN,.PPFLINK)
"RTN","RGRSDYN",26,0)
 . S INDEX=$O(PPFLINK(0))
"RTN","RGRSDYN",27,0)
 . I INDEX]"" S HLL("LINKS",1)=CLIENT_"^"_PPFLINK(INDEX)
"RTN","RGRSDYN",28,0)
ISPPF ;
"RTN","RGRSDYN",29,0)
 I PPF=HERE D  Q
"RTN","RGRSDYN",30,0)
 . N PARENT,INDEX,SUBCONTL,CHILDREN,INDEX1,NODE
"RTN","RGRSDYN",31,0)
 . S NODE=$$MPINODE^MPIFAPI(DFN)
"RTN","RGRSDYN",32,0)
 . S SUBCONTL=$P($G(NODE),"^",5)
"RTN","RGRSDYN",33,0)
 . ;Get subscribers, return updated HLL array
"RTN","RGRSDYN",34,0)
 . I SUBCONTL]"" D GET^HLSUB(SUBCONTL,+CLASS,CLIENT,.HLL)
"RTN","RGRSDYN",35,0)
 . ;LAST MINUTE CHANGE MARILYN REQUESTED
"RTN","RGRSDYN",36,0)
 . ;Get MPI link from SITE PARAMETER
"RTN","RGRSDYN",37,0)
 . S MPI=$$MPILINK^MPIFAPI() D
"RTN","RGRSDYN",38,0)
 . . I $P($G(MPI),U)'=-1 S HLL("LINKS",9999999999)=CLIENT_"^"_MPI
"RTN","RGRSDYN",39,0)
 . . I $P($G(MPI),U)=-1 D
"RTN","RGRSDYN",40,0)
 . . . N RGLOG,RGMTXT
"RTN","RGRSDYN",41,0)
 . . . D START^RGHLLOG(HLMTIEN,"","")
"RTN","RGRSDYN",42,0)
 . . . S RGMTXT=" See Appendix F of the Clinical Information Resource Network Patient Demographics (CIRN-PD) and Master Patient Index (MPI) Installation and Implementation Guide."
"RTN","RGRSDYN",43,0)
 . . . D EXC^RGHLLOG(224,"No MPI link identified in CIRN SITE PARAMETER file (#991.8)"_RGMTXT)
"RTN","RGRSDYN",44,0)
 . . . D STOP^RGHLLOG(0)
"RTN","RGRSDYN",45,0)
 ;
"RTN","RGRSDYN",46,0)
 ;the following was commented out because we're not updating all sites
"RTN","RGRSDYN",47,0)
 ;in the VISN anymore
"RTN","RGRSDYN",48,0)
 ;
"RTN","RGRSDYN",49,0)
 ;. ;Get owners PARENT
"RTN","RGRSDYN",50,0)
 ;. D PARENT^XUAF4("PARENT",PPF)
"RTN","RGRSDYN",51,0)
 ;. S INDEX=""
"RTN","RGRSDYN",52,0)
 ;. S INDEX=$O(PARENT("P",INDEX))
"RTN","RGRSDYN",53,0)
 ;. Q:INDEX']""
"RTN","RGRSDYN",54,0)
 ;. D LINK^HLUTIL3(INDEX,.CHILDREN)
"RTN","RGRSDYN",55,0)
 ;. S INDEX=$O(HLL("LINKS",9999999999999),-1)
"RTN","RGRSDYN",56,0)
 ;. Q:INDEX']""
"RTN","RGRSDYN",57,0)
 ;. S INDEX1=0
"RTN","RGRSDYN",58,0)
 ;. F  S INDEX1=$O(CHILDREN(INDEX1)) Q:INDEX1'>0  D
"RTN","RGRSDYN",59,0)
 ;. . S INDEX=INDEX+1
"RTN","RGRSDYN",60,0)
 ;. . S HLL("LINKS",INDEX)=CLIENT_"^"_CHILDREN(INDEX1)
"RTN","RGRSDYN1")
0^90^B17468649
"RTN","RGRSDYN1",1,0)
RGRSDYN1 ;ALB/RJS-BUILD DYNAMIC LINK LIST FOR A TFU ;6-9-97
"RTN","RGRSDYN1",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGRSDYN1",3,0)
EN(CLIENT,CLASS) ;
"RTN","RGRSDYN1",4,0)
 ;CLIENT=HL7 CLIENT PROTOCOL AT TARGET SYSTEM
"RTN","RGRSDYN1",5,0)
 ;DATA CLASS (Opt.) = Pull from Subs. Registry ONLY
"RTN","RGRSDYN1",6,0)
 ;For now, anything else is both DESCRIPTIVE AND CLINICAL
"RTN","RGRSDYN1",7,0)
 S CLASS=$G(CLASS),CLIENT=$G(CLIENT)
"RTN","RGRSDYN1",8,0)
 Q:CLIENT=""  ;No receiver
"RTN","RGRSDYN1",9,0)
 N PPF,DFN,HERE,RGRS,PPFIEN
"RTN","RGRSDYN1",10,0)
PARS ;Parse local outbound message
"RTN","RGRSDYN1",11,0)
 N RGDC
"RTN","RGRSDYN1",12,0)
 D INITIZE^RGRSUTIL,EN^RGRSPAR1("RGRS")
"RTN","RGRSDYN1",13,0)
 ;Get DFN
"RTN","RGRSDYN1",14,0)
 S ICN=$G(RGRS("ICN")) Q:$G(ICN)']""
"RTN","RGRSDYN1",15,0)
 S DFN=$$GETDFN^MPIF001(ICN) Q:+DFN'>0
"RTN","RGRSDYN1",16,0)
 Q:+$$SEND2^VAFCUTL1(DFN,"T")  ;don't broadcast test patients
"RTN","RGRSDYN1",17,0)
 Q:$$IFLOCAL^MPIF001(DFN)
"RTN","RGRSDYN1",18,0)
 S PPF=$$GETVCCI^MPIF001(DFN)\1 Q:+PPF'>0
"RTN","RGRSDYN1",19,0)
 S PPFIEN=$$LKUP^XUAF4(PPF)
"RTN","RGRSDYN1",20,0)
 ;Where we're at            Changed to 3rd piece CMC 5/9/98
"RTN","RGRSDYN1",21,0)
 S HERE=$P($$SITE^VASITE,"^",3)\1
"RTN","RGRSDYN1",22,0)
NOTPPF ; if not ppf send only to ppf
"RTN","RGRSDYN1",23,0)
 I PPF'=HERE D  Q
"RTN","RGRSDYN1",24,0)
 . N PPFLINK,INDEX
"RTN","RGRSDYN1",25,0)
 . D LINK^HLUTIL3(PPFIEN,.PPFLINK)
"RTN","RGRSDYN1",26,0)
 . S INDEX=$O(PPFLINK(0))
"RTN","RGRSDYN1",27,0)
 . I INDEX]"" S HLL("LINKS",1)=CLIENT_"^"_PPFLINK(INDEX)
"RTN","RGRSDYN1",28,0)
ISPPF ;
"RTN","RGRSDYN1",29,0)
 I PPF=HERE D  Q
"RTN","RGRSDYN1",30,0)
 . N PARENT,INDEX,SUBCONTL,CHILDREN,INDEX1,NODE
"RTN","RGRSDYN1",31,0)
 . S NODE=$$MPINODE^MPIFAPI(DFN)
"RTN","RGRSDYN1",32,0)
 . S SUBCONTL=$P($G(NODE),"^",5)
"RTN","RGRSDYN1",33,0)
 . ;Get subscribers, return updated HLL array
"RTN","RGRSDYN1",34,0)
 . ;replaced with GET line tag: I SUBCONTL]"" D GET^HLSUB(SUBCONTL,+CLASS,CLIENT,.HLL)
"RTN","RGRSDYN1",35,0)
 . D GET(DFN,SUBCONTL,+CLASS,CLIENT,.HLL)
"RTN","RGRSDYN1",36,0)
 . ;Get MPI link from SITE PARAMETER
"RTN","RGRSDYN1",37,0)
 . S MPI=$$MPILINK^MPIFAPI() D
"RTN","RGRSDYN1",38,0)
 . . I $P($G(MPI),U)'=-1 S HLL("LINKS",9999999999)=CLIENT_"^"_MPI
"RTN","RGRSDYN1",39,0)
 . . I $P($G(MPI),U)=-1 D
"RTN","RGRSDYN1",40,0)
 . . . N RGLOG,RGMTXT
"RTN","RGRSDYN1",41,0)
 . . . S RGMTXT=" See Appendix F of the Clinical Information Resource Network Patient Demographics (CIRN-PD) and Master Patient Index (MPI) Installation and Implementation Guide."
"RTN","RGRSDYN1",42,0)
 . . . D START^RGHLLOG(HLMTIEN,"","") D EXC^RGHLLOG(224,"No MPI link identified in CIRN SITE PARAMETER file (#991.8)"_RGMTXT) D STOP^RGHLLOG(0)
"RTN","RGRSDYN1",43,0)
 ;
"RTN","RGRSDYN1",44,0)
GET(RGDFN,RGSCN,RGTP,RGCLP,RGLL) ;GET Subscribers
"RTN","RGRSDYN1",45,0)
 ;RGDFN - Patient IEN from FILE (#2)
"RTN","RGRSDYN1",46,0)
 ;RGSCN - Subcription Control Number
"RTN","RGRSDYN1",47,0)
 ;RGTP  - SUBSCRIBER TYPE (0,1,2)/Null=all
"RTN","RGRSDYN1",48,0)
 ;RGCLP - HL7 CLIENT PROTOCOL (required)
"RTN","RGRSDYN1",49,0)
 ;RGLL  - HLL("LINKS",x)=CLIENT PROTOCOL^LOGICAL LINK (passed by reference)
"RTN","RGRSDYN1",50,0)
 N RG,RGI,RGLLIEN,RGLLI,RGLLS,RGLLZ,RGTF,RGTFF,RGTFI,RGX
"RTN","RGRSDYN1",51,0)
 S U="^"
"RTN","RGRSDYN1",52,0)
 ;get subscribers
"RTN","RGRSDYN1",53,0)
 I RGSCN'="" D GET^HLSUB(RGSCN,RGTP,RGCLP,.RGLL)
"RTN","RGRSDYN1",54,0)
 ;check for a treating facility that is not a subscriber
"RTN","RGRSDYN1",55,0)
 S RGI=0 F  S RGI=$O(^DGCN(391.91,"B",RGDFN,RGI)) Q:'RGI  I $D(^DGCN(391.91,RGI,0)) S RGTF=$G(^DGCN(391.91,RGI,0)),RGTFI=$P(RGTF,U,2) D:RGTFI'=+$$SITE^VASITE
"RTN","RGRSDYN1",56,0)
 .;checking INSTITUTION of links to the TREATING FACILITY INSTITUTION
"RTN","RGRSDYN1",57,0)
 .;RGTFF=1 - Flag for adding Treating Facility to Subcription Control
"RTN","RGRSDYN1",58,0)
 .S RGTFF=1
"RTN","RGRSDYN1",59,0)
 .S RGX=0 F  S RGX=$O(RGLL("LINKS",RGX)) Q:'RGX!(RGTFF=0)  D
"RTN","RGRSDYN1",60,0)
 ..S RGLLIEN=$P(RGLL("LINKS",RGX),U,6) D
"RTN","RGRSDYN1",61,0)
 ..I $G(RGLL)="" S RGLL("ERR",RGX)="No logical link defined for "_$P(RGLL("LINKS",RGX),U)_"." Q
"RTN","RGRSDYN1",62,0)
 ..S RGLLZ=$$LLZ(RGLLIEN),RGLLI=$P(RGLLZ,U,2),RGLLN=$P(RGLLZ,U)
"RTN","RGRSDYN1",63,0)
 ..I '$L(RGLLI),'$D(RGLL("ERR",RGX)) S RGLL("ERR",RGX)="Link "_$P(RGLL("LINKS",RGX),U,2)_" does not contain a link to the INSTUTUTION (#4) file." Q
"RTN","RGRSDYN1",64,0)
 ..I $L(RGLLI) S:RGLLI'=RGTFI RGTFF=1 I RGLLI=RGTFI S RGTFF=0 Q
"RTN","RGRSDYN1",65,0)
 .;If TF not in Subscriber list, kill list, add to subscription control file then get new list 
"RTN","RGRSDYN1",66,0)
 .I RGTFF=1 D LINK^HLUTIL3(RGTFI,.RG,"I") S RGLLI=$O(RG(0)) D
"RTN","RGRSDYN1",67,0)
 ..I +$G(RGLLI)>0 S RGLLZ=$$LLZ(RGLLI),RGLLI=$P(RGLLZ,U,2),RGLLN=$P(RGLLZ,U)
"RTN","RGRSDYN1",68,0)
 ..I +$G(RGLLI)>0 S:RGSCN="" RGSCN=$$GETSCN^RGJCREC(RGDFN) D UPD^HLSUB(RGSCN,RGLLN,RGTP,$$NOW^XLFDT,,,.HLER) K RGLL("LINKS") D GET^HLSUB(RGSCN,RGTP,RGCLP,.RGLL)
"RTN","RGRSDYN1",69,0)
 ..I +$G(RGLLI)'>0 W !,"Unable to find Logical link for "_$$GET1^DIQ(4,RGTFI_",",.01)
"RTN","RGRSDYN1",70,0)
 Q
"RTN","RGRSDYN1",71,0)
LLZ(IEN) ;call returns ZERO node of LOGICAL LINK given IEN
"RTN","RGRSDYN1",72,0)
 Q:'$D(^HLCS(870,IEN,0)) 0
"RTN","RGRSDYN1",73,0)
 Q ^HLCS(870,IEN,0)
"RTN","RGRSDYN2")
0^34^B5883091
"RTN","RGRSDYN2",1,0)
RGRSDYN2 ;ALB/RJS-BUILD DYNAMIC LINK LIST FOR SENSITIVITY ;3-21-97
"RTN","RGRSDYN2",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGRSDYN2",3,0)
EN(CLIENT,CLASS) ;
"RTN","RGRSDYN2",4,0)
 ;CLIENT=HL7 CLIENT PROTOCOL AT TARGET SYSTEM
"RTN","RGRSDYN2",5,0)
 ;DATA CLASS (Opt.) = Pull from Subs. Registry ONLY
"RTN","RGRSDYN2",6,0)
 ;For now, anything else is both DESCRIPTIVE AND CLINICAL
"RTN","RGRSDYN2",7,0)
 S CLASS=$G(CLASS),CLIENT=$G(CLIENT)
"RTN","RGRSDYN2",8,0)
 Q:CLIENT=""  ;No receiver
"RTN","RGRSDYN2",9,0)
 N PPF,DFN,HERE,RGRS,PPFIEN
"RTN","RGRSDYN2",10,0)
PARS ;Parse local outbound message
"RTN","RGRSDYN2",11,0)
 N RGDC
"RTN","RGRSDYN2",12,0)
 D INITIZE^RGRSUTIL,EN^RGRSPARS("RGRS")
"RTN","RGRSDYN2",13,0)
 ;Get patients owner site
"RTN","RGRSDYN2",14,0)
 S PPF=$G(RGRS("SITENUM"))\1 Q:PPF'>0
"RTN","RGRSDYN2",15,0)
 S PPFIEN=$$LKUP^XUAF4(PPF)
"RTN","RGRSDYN2",16,0)
 ;Get DFN
"RTN","RGRSDYN2",17,0)
 S DFN=$G(RGRS("DFN")) Q:$G(DFN)']""
"RTN","RGRSDYN2",18,0)
 Q:$$IFLOCAL^MPIF001(DFN)
"RTN","RGRSDYN2",19,0)
 ;Where we're at
"RTN","RGRSDYN2",20,0)
 S HERE=$P($$SITE^VASITE,"^",3)\1
"RTN","RGRSDYN2",21,0)
NOTPPF ; if not ppf send only to ppf
"RTN","RGRSDYN2",22,0)
 I PPF'=HERE D  Q
"RTN","RGRSDYN2",23,0)
 . N PPFLINK,INDEX
"RTN","RGRSDYN2",24,0)
 . D LINK^HLUTIL3(PPFIEN,.PPFLINK)
"RTN","RGRSDYN2",25,0)
 . S INDEX=$O(PPFLINK(0))
"RTN","RGRSDYN2",26,0)
 . I INDEX]"" S HLL("LINKS",1)=CLIENT_"^"_PPFLINK(INDEX)
"RTN","RGRSDYN2",27,0)
ISPPF ;
"RTN","RGRSDYN2",28,0)
 I PPF=HERE D  Q
"RTN","RGRSDYN2",29,0)
 . N PARENT,INDEX,SUBCONTL,CHILDREN,INDEX1,NODE
"RTN","RGRSDYN2",30,0)
 . S NODE=$$MPINODE^MPIFAPI(DFN)
"RTN","RGRSDYN2",31,0)
 . S SUBCONTL=$P($G(NODE),"^",5)
"RTN","RGRSDYN2",32,0)
 . ;Get subscribers, return updated HLL array
"RTN","RGRSDYN2",33,0)
 . I SUBCONTL]"" D GET^HLSUB(SUBCONTL,+CLASS,CLIENT,.HLL)
"RTN","RGRSDYN2",34,0)
 . ;LAST MINUTE CHANGE MARILYN REQUESTED, COMMENTED OUT HERE
"RTN","RGRSDYN2",35,0)
 . ;BECAUSE WE'RE NOT SURE THE MPI WANTS Z12'S
"RTN","RGRSDYN2",36,0)
 . ;S MPI=$$MPILINK^MPIFAPI() D
"RTN","RGRSDYN2",37,0)
 . ;. I $P($G(MPI),U)'=-1 S HLL("LINKS",9999999999)=CLIENT_"^"_MPI
"RTN","RGRSDYN2",38,0)
 . ;. I $P($G(MPI),U)=-1 D
"RTN","RGRSDYN2",39,0)
 . ;. . N RGLOG,RGMTXT
"RTN","RGRSDYN2",40,0)
 . ;. . D START^RGHLLOG(HLMTIEN,"","")
"RTN","RGRSDYN2",41,0)
 . ;. . S RGMTXT=" See Appendix F of the Clinical Information Resource Network Patient Demographics (CIRN-PD) and Master Patient Index (MPI) Installation and Implementation Guide."
"RTN","RGRSDYN2",42,0)
 . ;. . D EXC^RGHLLOG(224,"No MPI link identified in CIRN SITE PARAMETER file (#991.8)"_RGMTXT) D STOP^RGHLLOG(0)
"RTN","RGRSDYN2",43,0)
 ;
"RTN","RGRSDYN2",44,0)
 ;the following was commented out because we're not updating all sites
"RTN","RGRSDYN2",45,0)
 ;in the VISN anymore
"RTN","RGRSDYN2",46,0)
 ;
"RTN","RGRSDYN2",47,0)
 ;. ;Get owners PARENT
"RTN","RGRSDYN2",48,0)
 ;. D PARENT^XUAF4("PARENT",PPF)
"RTN","RGRSDYN2",49,0)
 ;. S INDEX=""
"RTN","RGRSDYN2",50,0)
 ;. S INDEX=$O(PARENT("P",INDEX))
"RTN","RGRSDYN2",51,0)
 ;. Q:INDEX']""
"RTN","RGRSDYN2",52,0)
 ;. D LINK^HLUTIL3(INDEX,.CHILDREN)
"RTN","RGRSDYN2",53,0)
 ;. S INDEX=$O(HLL("LINKS",9999999999999),-1)
"RTN","RGRSDYN2",54,0)
 ;. Q:INDEX']""
"RTN","RGRSDYN2",55,0)
 ;. S INDEX1=0
"RTN","RGRSDYN2",56,0)
 ;. F  S INDEX1=$O(CHILDREN(INDEX1)) Q:INDEX1'>0  D
"RTN","RGRSDYN2",57,0)
 ;. . S INDEX=INDEX+1
"RTN","RGRSDYN2",58,0)
 ;. . S HLL("LINKS",INDEX)=CLIENT_"^"_CHILDREN(INDEX1)
"RTN","RGRSENS")
0^36^B7437712
"RTN","RGRSENS",1,0)
RGRSENS ;ALB/RJS,CML-PT SENSITIVITY PARSER/FILER ;06/25/98
"RTN","RGRSENS",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGRSENS",3,0)
 ;
"RTN","RGRSENS",4,0)
 ;Parse Incoming Message, and file.
"RTN","RGRSENS",5,0)
 ;
"RTN","RGRSENS",6,0)
 ;
"RTN","RGRSENS",7,0)
 N RGRSDFN,VAFCA,RGRS,VAFCA08,ARRAY,BOGUS,RGDC,RGRSDATA
"RTN","RGRSENS",8,0)
 N NAME,LASTNAME,SSN,ICN,CMOR,OTHSITE,SENSTVTY,CMORIEN,CMORDISP,BULSUB
"RTN","RGRSENS",9,0)
 S ARRAY="RGRS(2)"
"RTN","RGRSENS",10,0)
 D INITIZE^RGRSUTIL ;copy HL7 message into local RGDC array
"RTN","RGRSENS",11,0)
 D EN^RGRSPAR2(ARRAY) ;parse HL7 nessage into local array RGRS
"RTN","RGRSENS",12,0)
 I $$SKIP^RGRSZZPT(1,ARRAY) D  G EXIT ;skip if certain data is not there
"RTN","RGRSENS",13,0)
 . D SKIPBULL^RGRSBULL(ARRAY)
"RTN","RGRSENS",14,0)
 S RGRSDFN=$$GETDFN^MPIF001(@ARRAY@(991.01)) ;Get DFN from ICN
"RTN","RGRSENS",15,0)
 S OTHSITE=@ARRAY@("SENDING SITE")
"RTN","RGRSENS",16,0)
 ;
"RTN","RGRSENS",17,0)
 ;If patient not known in site, send bulletin, go exit
"RTN","RGRSENS",18,0)
 ;
"RTN","RGRSENS",19,0)
 I +RGRSDFN=-1 M RGRS("MESSAGE")=RGDC D NOT2^RGRSBUL1(ARRAY) G EXIT
"RTN","RGRSENS",20,0)
 ;
"RTN","RGRSENS",21,0)
 D GETDATA^MPIFQ0("^DPT(",RGRSDFN,"RGRSDATA",".01;.09;991.01;991.03","EI")
"RTN","RGRSENS",22,0)
 S NAME=$G(RGRSDATA(2,RGRSDFN,.01,"E"))
"RTN","RGRSENS",23,0)
 S LASTNAME=$P(NAME,",",1)
"RTN","RGRSENS",24,0)
 S SSN=$G(RGRSDATA(2,RGRSDFN,.09,"E"))
"RTN","RGRSENS",25,0)
 S ICN=$G(RGRSDATA(2,RGRSDFN,991.01,"E"))
"RTN","RGRSENS",26,0)
 S CMORIEN=$G(RGRSDATA(2,RGRSDFN,991.03,"I"))
"RTN","RGRSENS",27,0)
 S CMOR=$$NS^XUAF4(CMORIEN)
"RTN","RGRSENS",28,0)
 S CMORDISP=$P(CMOR,"^",1)
"RTN","RGRSENS",29,0)
 S CMOR=$P(CMOR,"^",2)
"RTN","RGRSENS",30,0)
 ;
"RTN","RGRSENS",31,0)
 S @ARRAY@("NAME")=@ARRAY@(.01)
"RTN","RGRSENS",32,0)
 S @ARRAY@("SSN")=@ARRAY@(.09)
"RTN","RGRSENS",33,0)
 S @ARRAY@("ICN")=@ARRAY@(991.01)
"RTN","RGRSENS",34,0)
 S @ARRAY@("CMOR")=$P($$NS^XUAF4($$LKUP^XUAF4(OTHSITE)),"^")
"RTN","RGRSENS",35,0)
 ;
"RTN","RGRSENS",36,0)
 ;If ICN or CMOR don't match, send bulletin and go exit
"RTN","RGRSENS",37,0)
 I '$$MATCH(RGRSDFN,ARRAY,,,ICN,CMOR,.BULSUB) D  G EXIT
"RTN","RGRSENS",38,0)
 . D MTCHBULL^RGRSBULL(RGRSDFN,ARRAY,NAME,SSN,ICN,CMORDISP,BULSUB)
"RTN","RGRSENS",39,0)
 ;
"RTN","RGRSENS",40,0)
 ;If patient is Sensitive at other site but not here send bulletin
"RTN","RGRSENS",41,0)
 S SENSTVTY=@ARRAY@("SENSITIVITY")
"RTN","RGRSENS",42,0)
 I '$$SENSTIVE(RGRSDFN),SENSTVTY D SENSTIVE^RGRSBUL1(RGRSDFN,ARRAY,NAME)
"RTN","RGRSENS",43,0)
 ;
"RTN","RGRSENS",44,0)
EXIT ;
"RTN","RGRSENS",45,0)
 Q
"RTN","RGRSENS",46,0)
 ;
"RTN","RGRSENS",47,0)
SENSTIVE(DFN) ;CHECK SENSITIVITY FLAG FOR A PATIENT
"RTN","RGRSENS",48,0)
 Q:$G(DFN)="" 0
"RTN","RGRSENS",49,0)
 Q:$P($G(^DGSL(38.1,DFN,0)),"^",2)=1 1
"RTN","RGRSENS",50,0)
 Q 0
"RTN","RGRSENS",51,0)
 ;
"RTN","RGRSENS",52,0)
 ;
"RTN","RGRSENS",53,0)
MATCH(DFN,ARRAY,LASTNAME,SSN,ICN,CMOR,BULSUB) ;
"RTN","RGRSENS",54,0)
 Q:$G(DFN)=""!($G(ARRAY)="") 0
"RTN","RGRSENS",55,0)
 N COUNT,TRUE S (COUNT,TRUE)=0
"RTN","RGRSENS",56,0)
 S BULSUB=""
"RTN","RGRSENS",57,0)
 I $D(LASTNAME) D
"RTN","RGRSENS",58,0)
 . S COUNT=COUNT+1
"RTN","RGRSENS",59,0)
 . I (LASTNAME'=""),(LASTNAME=$P(@ARRAY@(.01),",",1)) S TRUE=TRUE+1
"RTN","RGRSENS",60,0)
 I $D(SSN) D
"RTN","RGRSENS",61,0)
 . S COUNT=COUNT+1
"RTN","RGRSENS",62,0)
 . I (SSN'=""),(SSN=$G(@ARRAY@(.09))) S TRUE=TRUE+1
"RTN","RGRSENS",63,0)
 I $D(ICN) D
"RTN","RGRSENS",64,0)
 . S COUNT=COUNT+1
"RTN","RGRSENS",65,0)
 . I (ICN'=""),(ICN=$G(@ARRAY@(991.01))) S TRUE=TRUE+1 Q
"RTN","RGRSENS",66,0)
 . S BULSUB=BULSUB_"ICN"
"RTN","RGRSENS",67,0)
 I $D(CMOR) D
"RTN","RGRSENS",68,0)
 . S COUNT=COUNT+1
"RTN","RGRSENS",69,0)
 . I (CMOR'=""),(CMOR=$G(@ARRAY@("SITENUM"))) S TRUE=TRUE+1 Q
"RTN","RGRSENS",70,0)
 . I BULSUB]"" S BULSUB=BULSUB_" & "
"RTN","RGRSENS",71,0)
 . S BULSUB=BULSUB_"CMOR"
"RTN","RGRSENS",72,0)
 I COUNT=TRUE Q 1
"RTN","RGRSENS",73,0)
 Q 0
"RTN","RGRSMSH")
0^54^B1382514
"RTN","RGRSMSH",1,0)
RGRSMSH ;ALB/RJS-REGISTRATION MESSAGE PARSER FOR CIRN ;3/8/96
"RTN","RGRSMSH",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGRSMSH",3,0)
EN() ;
"RTN","RGRSMSH",4,0)
 ;This function call returns informtaion from the MSH and EVN segments
"RTN","RGRSMSH",5,0)
 ;
"RTN","RGRSMSH",6,0)
 ; Output:
"RTN","RGRSMSH",7,0)
 ;    Date Recieved^event date from EVN segment^sending facility name
"RTN","RGRSMSH",8,0)
 ;
"RTN","RGRSMSH",9,0)
 N RGRSMSH,RGC,RGRSEVN,SENDING,RECDATE,EVDATE,%,SENDPTR,INSTNUM
"RTN","RGRSMSH",10,0)
 S RGC=$E(HL("ECH"))
"RTN","RGRSMSH",11,0)
 S RGRSMSH=$$SEG1^RGRSUTIL("MSH",1,"MSH")
"RTN","RGRSMSH",12,0)
 S RGRSEVN=$$SEG1^RGRSUTIL("EVN",1,"EVN")
"RTN","RGRSMSH",13,0)
 ;;S INSTNUM=$P(RGRSMSH,HL("FS"),4)
"RTN","RGRSMSH",14,0)
 ;; ^ changed 11/20/98 by cmc - MSH segment read into 2 array entries
"RTN","RGRSMSH",15,0)
 ;; need to use new supported variable HL("SFN")
"RTN","RGRSMSH",16,0)
 S SENDPTR=$O(^DIC(4,"D",HL("SFN"),0))
"RTN","RGRSMSH",17,0)
 S SENDING=$P(^DIC(4,SENDPTR,0),"^",1)
"RTN","RGRSMSH",18,0)
 D NOW^%DTC
"RTN","RGRSMSH",19,0)
 S (RECDATE)=$G(%)
"RTN","RGRSMSH",20,0)
 S EVDATE=$P(RGRSEVN,HL("FS"),3)
"RTN","RGRSMSH",21,0)
 S EVDATE=$$FMDATE^HLFNC(EVDATE)
"RTN","RGRSMSH",22,0)
 ;
"RTN","RGRSMSH",23,0)
 Q $G(RECDATE)_"^"_$G(EVDATE)_"^"_$G(SENDING)
"RTN","RGRSPAR1")
0^91^B949320
"RTN","RGRSPAR1",1,0)
RGRSPAR1 ;ALB/RJS-REGISTRATION MESSAGE PARSER FOR CIRN TFU ;6/9/97
"RTN","RGRSPAR1",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGRSPAR1",3,0)
EN(ARRAY) ;
"RTN","RGRSPAR1",4,0)
 ;This procedure call updates a given array with CMOR site number and ICN
"RTN","RGRSPAR1",5,0)
 ;
"RTN","RGRSPAR1",6,0)
 ;Input: Required Variable
"RTN","RGRSPAR1",7,0)
 ;
"RTN","RGRSPAR1",8,0)
 ;  ARRAY - Supplied array variable (Passed by reference)
"RTN","RGRSPAR1",9,0)
 ;
"RTN","RGRSPAR1",10,0)
 ;Output:
"RTN","RGRSPAR1",11,0)
 ;
"RTN","RGRSPAR1",12,0)
 ;  ARRAY("SITENUM") - Patient's CMOR site number
"RTN","RGRSPAR1",13,0)
 ;  ARRAY("ICN") - Patient's ICN 
"RTN","RGRSPAR1",14,0)
 ;
"RTN","RGRSPAR1",15,0)
 N RGRSMFI,RGRSMFE,RGC,SUBCOMP
"RTN","RGRSPAR1",16,0)
 S RGC=$E(HL("ECH")),SUBCOMP=$E(HL("ECH"),2)
"RTN","RGRSPAR1",17,0)
 S RGRSMFI=$$SEG1^RGRSUTIL("MFI",1,"MFI")
"RTN","RGRSPAR1",18,0)
 S RGRSMFE=$$SEG1^RGRSUTIL("MFE",1,"MFE")
"RTN","RGRSPAR1",19,0)
 S @ARRAY@("SITENUM")=$$FREE($P($P(RGRSMFE,HL("FS"),5),RGC,1)) ;VCCI SITENUM
"RTN","RGRSPAR1",20,0)
 S @ARRAY@("ICN")=$$FREE($P($P(RGRSMFE,HL("FS"),5),RGC,4)) ;ICN
"RTN","RGRSPAR1",21,0)
 Q
"RTN","RGRSPAR1",22,0)
FREE(DATA)      ;
"RTN","RGRSPAR1",23,0)
 Q:$G(DATA)="" ""
"RTN","RGRSPAR1",24,0)
 Q:DATA=HL("Q") """@"""
"RTN","RGRSPAR1",25,0)
 Q $G(DATA)
"RTN","RGRSPAR1",26,0)
 Q
"RTN","RGRSPAR2")
0^134^B5893991
"RTN","RGRSPAR2",1,0)
RGRSPAR2 ;ALB/RJS-SENSITIVITY MESSAGE PARSER FOR CIRN ;1/8/98
"RTN","RGRSPAR2",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGRSPAR2",3,0)
EN(ARRAY) ;
"RTN","RGRSPAR2",4,0)
 ;This procedure returns specific patient information into a supplied
"RTN","RGRSPAR2",5,0)
 ;variable
"RTN","RGRSPAR2",6,0)
 ;
"RTN","RGRSPAR2",7,0)
 ;Input: Required Variable
"RTN","RGRSPAR2",8,0)
 ;
"RTN","RGRSPAR2",9,0)
 ;  ARRAY - Supplied array variable (Passed by reference)
"RTN","RGRSPAR2",10,0)
 ;
"RTN","RGRSPAR2",11,0)
 ;Output: from segments built from the PATIENT file (#2) of sending site
"RTN","RGRSPAR2",12,0)
 ;
"RTN","RGRSPAR2",13,0)
 ;  ARRAY(.01) - .01 field in PATIENT file (#2)
"RTN","RGRSPAR2",14,0)
 ;  ARRAY(.02) - .02 field in PATIENT file (#2)
"RTN","RGRSPAR2",15,0)
 ;  ARRAY(.03) - .03 field in PATIENT file (#2)
"RTN","RGRSPAR2",16,0)
 ;  ARRAY(.09) - .09 field in PATIENT file (#2)
"RTN","RGRSPAR2",17,0)
 ;  ARRAY(991.01) - 991.01 field in PATIENT file (#2)
"RTN","RGRSPAR2",18,0)
 ;  ARRAY(991.02) - 991.02 field in PATIENT file (#2)
"RTN","RGRSPAR2",19,0)
 ;  ARRAY(991.03) - 991.03 field in PATIENT file (#2)
"RTN","RGRSPAR2",20,0)
 ;  ARRAY("SENDING SITE") - sending sites station number
"RTN","RGRSPAR2",21,0)
 ;  ARRAY("SENSITIVITY") - sensitivity of the patient at sending site
"RTN","RGRSPAR2",22,0)
 ;  ARRAY("SENSITIVITY USER") - user at sending site that make patient
"RTN","RGRSPAR2",23,0)
 ;  ARRAY("SENSITIVITY DATE") - date when patient was marked sensitive
"RTN","RGRSPAR2",24,0)
 ;
"RTN","RGRSPAR2",25,0)
 N RGRSPID,RGC,RGRSPD1,SUBCOMP
"RTN","RGRSPAR2",26,0)
 S RGC=$E(HL("ECH")),SUBCOMP=$E(HL("ECH"),2)
"RTN","RGRSPAR2",27,0)
 S RGRSMSH=$$SEG1^RGRSUTIL("MSH",1,"MSH")
"RTN","RGRSPAR2",28,0)
 S RGRSPID=$$SEG1^RGRSUTIL("PID",1,"PID")
"RTN","RGRSPAR2",29,0)
 S RGRSPD1=$$SEG1^RGRSUTIL("PD1",1,"PD1")
"RTN","RGRSPAR2",30,0)
 S RGRSZSN=$$SEG1^RGRSUTIL("ZSN",1,"ZSN")
"RTN","RGRSPAR2",31,0)
 S @ARRAY@(.01)=$$FREE($$FMNAME^HLFNC($P(RGRSPID,HL("FS"),6),HL("ECH"))) ;NAME
"RTN","RGRSPAR2",32,0)
 S @ARRAY@(.02)=$$SEX($P(RGRSPID,HL("FS"),9)) ;SEX
"RTN","RGRSPAR2",33,0)
 S @ARRAY@(.03)=$$FREE($$FMDATE^HLFNC($P(RGRSPID,HL("FS"),8))) ;DOB
"RTN","RGRSPAR2",34,0)
 S @ARRAY@(.09)=$$FREE($P(RGRSPID,HL("FS"),20)) ;SOCIAL SECURITY #
"RTN","RGRSPAR2",35,0)
 S @ARRAY@(991.01)=$$FREE($P($P(RGRSPID,HL("FS"),3),"V",1)) ;INTEG CONTROL #
"RTN","RGRSPAR2",36,0)
 S @ARRAY@(991.02)=$$FREE($P($P(RGRSPID,HL("FS"),3),"V",2)) ;CHECKSUM
"RTN","RGRSPAR2",37,0)
 S @ARRAY@(991.03)=$$FREE($P($P(RGRSPD1,HL("FS"),4),RGC,1)) ;VCCI
"RTN","RGRSPAR2",38,0)
 S @ARRAY@("SITENUM")=$$FREE($P($P(RGRSPD1,HL("FS"),4),RGC,3)) ;VCCI SITENUM
"RTN","RGRSPAR2",39,0)
 S @ARRAY@("SENDING SITE")=$$FREE($P(RGRSMSH,HL("FS"),4)) ;SENDING SITE
"RTN","RGRSPAR2",40,0)
 S @ARRAY@("SENSITIVITY")=$$FREE($P(RGRSZSN,HL("FS"),2)) ;SENSTIVITY
"RTN","RGRSPAR2",41,0)
 S @ARRAY@("SENSITIVITY USER")=$$FREE($P(RGRSZSN,HL("FS"),3)) ;REMOTE PERSON WHO MADE PT. SENSITIVE
"RTN","RGRSPAR2",42,0)
 S @ARRAY@("SENSITIVITY DATE")=$$FREE($$FMDATE^HLFNC($P(RGRSZSN,HL("FS"),4))) ;DATE/TIME PERSON MADE PT. SENSITIVE AT REMOTE SITE
"RTN","RGRSPAR2",43,0)
 Q
"RTN","RGRSPAR2",44,0)
 ;
"RTN","RGRSPAR2",45,0)
KILL ;
"RTN","RGRSPAR2",46,0)
 K @ARRAY
"RTN","RGRSPAR2",47,0)
 Q
"RTN","RGRSPAR2",48,0)
 ;
"RTN","RGRSPAR2",49,0)
FREE(DATA) ;
"RTN","RGRSPAR2",50,0)
 Q:$G(DATA)="" ""
"RTN","RGRSPAR2",51,0)
 Q:DATA=HL("Q") """@"""
"RTN","RGRSPAR2",52,0)
 Q $G(DATA)
"RTN","RGRSPAR2",53,0)
 ;
"RTN","RGRSPAR2",54,0)
SEX(DATA) ;
"RTN","RGRSPAR2",55,0)
 Q:$$FREE(DATA)="" ""
"RTN","RGRSPAR2",56,0)
 Q:$$FREE(DATA)="""@""" """@"""
"RTN","RGRSPAR2",57,0)
 I DATA="M" Q "MALE"
"RTN","RGRSPAR2",58,0)
 I DATA="F" Q "FEMALE"
"RTN","RGRSPAR2",59,0)
 Q "^<UNRESOLVED>"
"RTN","RGRSPAR2",60,0)
 ;
"RTN","RGRSPARM")
0^140^B429127
"RTN","RGRSPARM",1,0)
RGRSPARM ;ALB/RJS-EDIT SEND/STOP/SUSPEND PARAMETER ;2/10/97
"RTN","RGRSPARM",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGRSPARM",3,0)
EN ;
"RTN","RGRSPARM",4,0)
 ;This routine is used to edit the STOP CIRN MESSAGING field (#16)
"RTN","RGRSPARM",5,0)
 ;in the CIRN SITE PARAMETER file (#991.8), to STOP/SEND/SUSPEND
"RTN","RGRSPARM",6,0)
 ;messages.
"RTN","RGRSPARM",7,0)
 ;
"RTN","RGRSPARM",8,0)
 N DA,DIE,DR,RGMAS
"RTN","RGRSPARM",9,0)
 S DA=$O(^RGSITE(991.8,0))
"RTN","RGRSPARM",10,0)
 I +DA'>0 Q
"RTN","RGRSPARM",11,0)
 S DR="16",DIE="991.8"
"RTN","RGRSPARM",12,0)
 D ^DIE
"RTN","RGRSPARM",13,0)
 S RGMAS=$P($$SEND^VAFHUTL,"^",2)
"RTN","RGRSPARM",14,0)
 I X'=RGMAS W !?5,"Does not match MAS parameter."
"RTN","RGRSPARM",15,0)
 E  W !?5,"In sync with MAS parameter."
"RTN","RGRSPARM",16,0)
 Q
"RTN","RGRSPARS")
0^35^B40069784
"RTN","RGRSPARS",1,0)
RGRSPARS ;ALB/RJS-REGISTRATION MESSAGE PARSER FOR CIRN ;3/8/96
"RTN","RGRSPARS",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGRSPARS",3,0)
EN(ARRAY) ;
"RTN","RGRSPARS",4,0)
 ;This procedure call returns an array of patient information in the 
"RTN","RGRSPARS",5,0)
 ;corresponding PATIENT file (#2) field numbers as well as Patient
"RTN","RGRSPARS",6,0)
 ;sensitivity.
"RTN","RGRSPARS",7,0)
 ;
"RTN","RGRSPARS",8,0)
 ;Input: Required Variable
"RTN","RGRSPARS",9,0)
 ;
"RTN","RGRSPARS",10,0)
 ; ARRAY - Supplied array variable (Pass by reference)
"RTN","RGRSPARS",11,0)
 ;
"RTN","RGRSPARS",12,0)
 ;Output:
"RTN","RGRSPARS",13,0)
 ;
"RTN","RGRSPARS",14,0)
 ; ARRAY - Array of patient information gathered from HL7 segments
"RTN","RGRSPARS",15,0)
 ;
"RTN","RGRSPARS",16,0)
 N RGRSPID,RGRSZEL,RGRSZPD,RGRSZSP,RGC,RGRSPD1,RGRSZEM,RGRSZCT,RGRSZFF
"RTN","RGRSPARS",17,0)
 N STATE,STATEIEN,SUBCOMP,STREETS,INSTITU,CNTYCODE,ADDRESS,RGRSOBX
"RTN","RGRSPARS",18,0)
 N RGRSMSH
"RTN","RGRSPARS",19,0)
 S RGC=$E(HL("ECH")),SUBCOMP=$E(HL("ECH"),2)
"RTN","RGRSPARS",20,0)
 S RGRSMSH=$$SEG1^RGRSUTIL("MSH",1,"MSH")
"RTN","RGRSPARS",21,0)
 S RGRSPID=$$SEG1^RGRSUTIL("PID",1,"PID")
"RTN","RGRSPARS",22,0)
 S RGRSPD1=$$SEG1^RGRSUTIL("PD1",1,"PD1")
"RTN","RGRSPARS",23,0)
 S RGRSZEL=$$SEG1^RGRSUTIL("ZEL",1,"ZEL")
"RTN","RGRSPARS",24,0)
 S RGRSZPD=$$SEG1^RGRSUTIL("ZPD",1,"ZPD")
"RTN","RGRSPARS",25,0)
 S RGRSZSP=$$SEG1^RGRSUTIL("ZSP",1,"ZSP")
"RTN","RGRSPARS",26,0)
 S RGRSZEM=$$SEG1^RGRSUTIL("ZEM",1,"ZEM")
"RTN","RGRSPARS",27,0)
 S RGRSZCT=$$SEG1^RGRSUTIL("ZCT",1,"ZCT")
"RTN","RGRSPARS",28,0)
 S RGRSZFF=$$SEG1^RGRSUTIL("ZFF",1,"ZFF")
"RTN","RGRSPARS",29,0)
 S RGRSOBX=$$SEG1^RGRSUTIL("OBX",1,"OBX")
"RTN","RGRSPARS",30,0)
 S @ARRAY@(.01)=$$FREE($$FMNAME^HLFNC($P(RGRSPID,HL("FS"),6),HL("ECH"))) ;NAME
"RTN","RGRSPARS",31,0)
 S @ARRAY@(.02)=$$SEX($P(RGRSPID,HL("FS"),9)) ;SEX
"RTN","RGRSPARS",32,0)
 S @ARRAY@(.03)=$$FREE($$FMDATE^HLFNC($P(RGRSPID,HL("FS"),8))) ;DOB
"RTN","RGRSPARS",33,0)
 S @ARRAY@(.05)=$$MARITAL($P(RGRSPID,HL("FS"),17)) ;MARITAL STATUS
"RTN","RGRSPARS",34,0)
 S @ARRAY@(.08)=$$RELIG($P(RGRSPID,HL("FS"),18)) ;RELIGIOUS PREFERENCE
"RTN","RGRSPARS",35,0)
 S @ARRAY@(.09)=$$FREE($P(RGRSPID,HL("FS"),20)) ;SOCIAL SECURITY #
"RTN","RGRSPARS",36,0)
 S ADDRESS=$$FREE($P(RGRSPID,HL("FS"),12)) ;ADDRESS FIELDS
"RTN","RGRSPARS",37,0)
 S @ARRAY@(.111)=$$FREE($P(ADDRESS,RGC,1)) ;STREET ADDRESS [1]
"RTN","RGRSPARS",38,0)
 S @ARRAY@(.112)=$$FREE($P(ADDRESS,RGC,2)) ;STREET ADDRESS [2]
"RTN","RGRSPARS",39,0)
 S @ARRAY@(.113)=$$FREE($P(ADDRESS,RGC,8)) ;STREET ADDRESS [3]
"RTN","RGRSPARS",40,0)
 S @ARRAY@(.114)=$$FREE($P($P(RGRSPID,HL("FS"),12),RGC,3)) ;CITY
"RTN","RGRSPARS",41,0)
 S @ARRAY@(.115)=$$STATE($P($P(RGRSPID,HL("FS"),12),RGC,4)) ;STATE
"RTN","RGRSPARS",42,0)
 S @ARRAY@(.1112)=$$FREE($P($P(RGRSPID,HL("FS"),12),RGC,5)) ;ZIP+4
"RTN","RGRSPARS",43,0)
 S CNTYCODE=$P(RGRSPID,HL("FS"),13) ;COUNTY CODE
"RTN","RGRSPARS",44,0)
 S @ARRAY@(.117)=$$COUNTY(@ARRAY@(.115),CNTYCODE)
"RTN","RGRSPARS",45,0)
 S @ARRAY@(.131)=$$FREE($P(RGRSPID,HL("FS"),14)) ;PHONE NUMBER-HOME
"RTN","RGRSPARS",46,0)
 S @ARRAY@(.132)=$$FREE($P(RGRSPID,HL("FS"),15)) ;PHONE NUMBER-WORK
"RTN","RGRSPARS",47,0)
 S @ARRAY@(.211)=$$FREE($P(RGRSZCT,HL("FS"),4)) ;K-NAME
"RTN","RGRSPARS",48,0)
 S @ARRAY@(.219)=$$FREE($P(RGRSZCT,HL("FS"),7)) ;K-PHONE NUMBER
"RTN","RGRSPARS",49,0)
 S @ARRAY@(.2403)=$$FREE($P(RGRSPID,HL("FS"),7)) ;MOTHERS MAIDEN NAME
"RTN","RGRSPARS",50,0)
 S @ARRAY@(.301)=$$YESNO($P(RGRSZSP,HL("FS"),3)) ;SERVICE CONNECTED
"RTN","RGRSPARS",51,0)
 S @ARRAY@(.302)=$$FREE($P(RGRSZSP,HL("FS"),4)) ;SERVICE CONNECTED PERCENTAGE
"RTN","RGRSPARS",52,0)
 S @ARRAY@(.31115)=$$EMP($P(RGRSZEM,HL("FS"),4)) ;EMPLOYMENT STATUS
"RTN","RGRSPARS",53,0)
 S @ARRAY@(.323)=$$POS($P(RGRSZSP,HL("FS"),5)) ;PERIOD OF SERVICE
"RTN","RGRSPARS",54,0)
 S @ARRAY@(.351)=$$FREE($$FMDATE^HLFNC($P(RGRSZPD,HL("FS"),10))) ;DATE OF DEATH
"RTN","RGRSPARS",55,0)
 S @ARRAY@(.361)=$$ELIG($P(RGRSZEL,HL("FS"),3)) ;PRIMARY ELIGIBILITY CODE
"RTN","RGRSPARS",56,0)
 S @ARRAY@(.3612)=$$FREE($$FMDATE^HLFNC($P(RGRSZEL,HL("FS"),12))) ;DT VER
"RTN","RGRSPARS",57,0)
 S @ARRAY@(.3615)=$$FREE($P(RGRSZEL,HL("FS"),14)) ;VERIFICATION METHOD
"RTN","RGRSPARS",58,0)
 S @ARRAY@(391)=$$TYPE($P(RGRSZEL,HL("FS"),10)) ;PATIENT TYPE
"RTN","RGRSPARS",59,0)
 S @ARRAY@(1901)=$$VETERAN($P(RGRSZEL,HL("FS"),9)) ;VETERAN (Y/N)
"RTN","RGRSPARS",60,0)
 S @ARRAY@(991.01)=$$FREE($P($P(RGRSPID,HL("FS"),3),"V",1)) ;INTEG CONTROL #
"RTN","RGRSPARS",61,0)
 S @ARRAY@(991.02)=$$FREE($P($P(RGRSPID,HL("FS"),3),"V",2)) ;CHECKSUM
"RTN","RGRSPARS",62,0)
 S @ARRAY@(991.03)=$$FREE($P($P(RGRSPD1,HL("FS"),4),RGC,1)) ;VCCI
"RTN","RGRSPARS",63,0)
 S @ARRAY@("SENDING SITE")=$$FREE($P(RGRSMSH,HL("FS"),4)) ;SENDING SITE
"RTN","RGRSPARS",64,0)
 S @ARRAY@("SITENUM")=$$FREE($P($P(RGRSPD1,HL("FS"),4),RGC,3)) ;VCCI SITENUM
"RTN","RGRSPARS",65,0)
 S @ARRAY@("DFN")=$$FREE($P($P(RGRSPID,HL("FS"),4),RGC,1)) ;DFN
"RTN","RGRSPARS",66,0)
 S @ARRAY@("FLD")=$P(RGRSZFF,HL("FS"),3) ;FIELD(S) EDITED
"RTN","RGRSPARS",67,0)
 I $$FREE($P($P(RGRSOBX,HL("FS"),4),RGC,2))="SECURITY LEVEL" DO
"RTN","RGRSPARS",68,0)
 . S @ARRAY@("SENSITIVITY")=$$SENSTIVE($P(RGRSOBX,HL("FS"),6),RGC) ;SENSTIVITY
"RTN","RGRSPARS",69,0)
 . S @ARRAY@("SENSITIVITY USER")=$$FREE($P($P(RGRSOBX,HL("FS"),17),RGC,2))_","_$$FREE($P($P(RGRSOBX,HL("FS"),17),RGC,3)) ;REMOTE PERSON WHO MADE PT. SENSITIVE
"RTN","RGRSPARS",70,0)
 . S @ARRAY@("SENSITIVITY DATE")=$$FREE($$FMDATE^HLFNC($P(RGRSOBX,HL("FS"),15))) ;DATE/TIME PERSON MADE PT. SENSITIVE AT REMOTE SITE
"RTN","RGRSPARS",71,0)
 D NOW^%DTC S @ARRAY@(.097)=X
"RTN","RGRSPARS",72,0)
 K %H,%I,X,%
"RTN","RGRSPARS",73,0)
 Q
"RTN","RGRSPARS",74,0)
 ;
"RTN","RGRSPARS",75,0)
VETERAN(HLCODE) ;
"RTN","RGRSPARS",76,0)
 Q:$$FREE(HLCODE)="" ""
"RTN","RGRSPARS",77,0)
 Q:$$FREE(HLCODE)="""@""" """@"""
"RTN","RGRSPARS",78,0)
 Q:HLCODE=1 "YES"
"RTN","RGRSPARS",79,0)
 Q:HLCODE=0 "NO"
"RTN","RGRSPARS",80,0)
 Q HLCODE_"^1"
"RTN","RGRSPARS",81,0)
 ;
"RTN","RGRSPARS",82,0)
STATE(STATE) ;
"RTN","RGRSPARS",83,0)
 N RETURN,STATEIEN
"RTN","RGRSPARS",84,0)
 Q:$$FREE(STATE)="" ""
"RTN","RGRSPARS",85,0)
 Q:$$FREE(STATE)="""@""" """@"""
"RTN","RGRSPARS",86,0)
 S STATEIEN=$O(^DIC(5,"C",STATE,0))
"RTN","RGRSPARS",87,0)
 I $G(STATEIEN)="" Q STATE_"^1"
"RTN","RGRSPARS",88,0)
 S RETURN=$P(^DIC(5,STATEIEN,0),"^",1)
"RTN","RGRSPARS",89,0)
 Q:$G(RETURN)'="" RETURN
"RTN","RGRSPARS",90,0)
 Q STATE_"^1"
"RTN","RGRSPARS",91,0)
 ;
"RTN","RGRSPARS",92,0)
COUNTY(STATE,CNTYCODE) ;
"RTN","RGRSPARS",93,0)
 ;This function entry point is used to obtain the county name
"RTN","RGRSPARS",94,0)
 ;
"RTN","RGRSPARS",95,0)
 ;Input: Required Variables
"RTN","RGRSPARS",96,0)
 ;
"RTN","RGRSPARS",97,0)
 ; STATE - State name
"RTN","RGRSPARS",98,0)
 ; CNTYCODE - County code
"RTN","RGRSPARS",99,0)
 ;
"RTN","RGRSPARS",100,0)
 ;Output:
"RTN","RGRSPARS",101,0)
 ; County name   - If known
"RTN","RGRSPARS",102,0)
 ;    "@"        - If missing required input
"RTN","RGRSPARS",103,0)
 ; County Code^1 - If county code was unknown
"RTN","RGRSPARS",104,0)
 ;
"RTN","RGRSPARS",105,0)
 N STATEIEN,COUNTIEN,CNTYNAME
"RTN","RGRSPARS",106,0)
 Q:$G(STATE)=""!($G(STATE)=HL("Q"))!($G(CNTYCODE)="") ""
"RTN","RGRSPARS",107,0)
 Q:$G(CNTYCODE)=HL("Q") """@"""
"RTN","RGRSPARS",108,0)
 S STATEIEN=$O(^DIC(5,"B",STATE,0))
"RTN","RGRSPARS",109,0)
 Q:$G(STATEIEN)'>0 CNTYCODE_"^1"
"RTN","RGRSPARS",110,0)
 S COUNTIEN=$O(^DIC(5,STATEIEN,1,"C",CNTYCODE,0))
"RTN","RGRSPARS",111,0)
 Q:$G(COUNTIEN)'>0 CNTYCODE_"^1"
"RTN","RGRSPARS",112,0)
 S CNTYNAME=$P(^DIC(5,STATEIEN,1,COUNTIEN,0),"^",1)
"RTN","RGRSPARS",113,0)
 Q:$L(CNTYNAME)'>0 CNTYCODE_"^1"
"RTN","RGRSPARS",114,0)
 Q $G(CNTYNAME)
"RTN","RGRSPARS",115,0)
 ;
"RTN","RGRSPARS",116,0)
KILL ;
"RTN","RGRSPARS",117,0)
 K @ARRAY
"RTN","RGRSPARS",118,0)
 Q
"RTN","RGRSPARS",119,0)
 ;
"RTN","RGRSPARS",120,0)
FREE(DATA) ;
"RTN","RGRSPARS",121,0)
 Q:$G(DATA)="" ""
"RTN","RGRSPARS",122,0)
 Q:DATA=HL("Q") """@"""
"RTN","RGRSPARS",123,0)
 Q $G(DATA)
"RTN","RGRSPARS",124,0)
SEX(DATA) ;
"RTN","RGRSPARS",125,0)
 Q:$$FREE(DATA)="" ""
"RTN","RGRSPARS",126,0)
 Q:$$FREE(DATA)="""@""" """@"""
"RTN","RGRSPARS",127,0)
 I DATA="M" Q "MALE"
"RTN","RGRSPARS",128,0)
 I DATA="F" Q "FEMALE"
"RTN","RGRSPARS",129,0)
 Q "^<UNRESOLVED>"
"RTN","RGRSPARS",130,0)
 ;
"RTN","RGRSPARS",131,0)
MARITAL(DATA) ;
"RTN","RGRSPARS",132,0)
 Q:$$FREE(DATA)="" ""
"RTN","RGRSPARS",133,0)
 Q:$$FREE(DATA)="""@""" """@"""
"RTN","RGRSPARS",134,0)
 Q:DATA="A" "SEPARATED"
"RTN","RGRSPARS",135,0)
 Q:DATA="D" "DIVORCED"
"RTN","RGRSPARS",136,0)
 Q:DATA="M" "MARRIED"
"RTN","RGRSPARS",137,0)
 Q:DATA="S" "NEVER MARRIED"
"RTN","RGRSPARS",138,0)
 Q:DATA="W" "WIDOW/WIDOWER"
"RTN","RGRSPARS",139,0)
 Q:DATA="U" "UNKNOWN"
"RTN","RGRSPARS",140,0)
 Q DATA_"^1"
"RTN","RGRSPARS",141,0)
 ;
"RTN","RGRSPARS",142,0)
SENSTIVE(DATA,SUBCOMP) ;
"RTN","RGRSPARS",143,0)
 Q:$G(DATA)="" 0
"RTN","RGRSPARS",144,0)
 Q:$P(DATA,SUBCOMP,1)=1 1
"RTN","RGRSPARS",145,0)
 Q 0
"RTN","RGRSPARS",146,0)
 ;
"RTN","RGRSPARS",147,0)
YESNO(DATA) ;
"RTN","RGRSPARS",148,0)
 Q:$$FREE(DATA)="" ""
"RTN","RGRSPARS",149,0)
 Q:$$FREE(DATA)="""@""" """@"""
"RTN","RGRSPARS",150,0)
 I DATA="1" Q "YES"
"RTN","RGRSPARS",151,0)
 I DATA="0" Q "NO"
"RTN","RGRSPARS",152,0)
 Q "^<UNRESOLVED>"
"RTN","RGRSPARS",153,0)
RELIG(DATA) ;
"RTN","RGRSPARS",154,0)
 N IEN,RELIG
"RTN","RGRSPARS",155,0)
 Q:$$FREE(DATA)="" ""
"RTN","RGRSPARS",156,0)
 Q:$$FREE(DATA)="""@""" """@"""
"RTN","RGRSPARS",157,0)
 S IEN=$O(^DIC(13,"C",DATA,0))
"RTN","RGRSPARS",158,0)
 I $G(IEN)="" Q DATA_"^1"
"RTN","RGRSPARS",159,0)
 S RELIG=$P($G(^DIC(13,IEN,0)),"^",1)
"RTN","RGRSPARS",160,0)
 I $G(RELIG)="" Q DATA_"^1"
"RTN","RGRSPARS",161,0)
 Q $G(RELIG)
"RTN","RGRSPARS",162,0)
POS(DATA) ;
"RTN","RGRSPARS",163,0)
 N IEN,POS
"RTN","RGRSPARS",164,0)
 Q:$$FREE(DATA)="" ""
"RTN","RGRSPARS",165,0)
 Q:$$FREE(DATA)="""@""" """@"""
"RTN","RGRSPARS",166,0)
 S IEN=$O(^DIC(21,"D",DATA,0))
"RTN","RGRSPARS",167,0)
 I $G(IEN)="" Q DATA_"^1"
"RTN","RGRSPARS",168,0)
 S POS=$P($G(^DIC(21,IEN,0)),"^",1)
"RTN","RGRSPARS",169,0)
 I $G(POS)="" Q DATA_"^1"
"RTN","RGRSPARS",170,0)
 Q $G(POS)
"RTN","RGRSPARS",171,0)
ELIG(DATA)      ;
"RTN","RGRSPARS",172,0)
 N IEN,ELIGPTR,ELIG
"RTN","RGRSPARS",173,0)
 Q:$$FREE(DATA)="" ""
"RTN","RGRSPARS",174,0)
 Q:$$FREE(DATA)="""@""" """@"""
"RTN","RGRSPARS",175,0)
 S ELIGPTR=$O(^DIC(8,"D",DATA,0))
"RTN","RGRSPARS",176,0)
 I $G(ELIGPTR)'>0 Q DATA_"^1"
"RTN","RGRSPARS",177,0)
 S ELIG=$P($G(^DIC(8,ELIGPTR,0)),"^",1)
"RTN","RGRSPARS",178,0)
 I $G(ELIG)="" Q DATA_"^1"
"RTN","RGRSPARS",179,0)
 Q $G(ELIG)
"RTN","RGRSPARS",180,0)
TYPE(DATA) ;
"RTN","RGRSPARS",181,0)
 N IEN,TYPE
"RTN","RGRSPARS",182,0)
 Q:$$FREE(DATA)="" ""
"RTN","RGRSPARS",183,0)
 Q:$$FREE(DATA)="""@""" """@"""
"RTN","RGRSPARS",184,0)
 S IEN=$O(^DG(391,"B",DATA,0))
"RTN","RGRSPARS",185,0)
 I $G(IEN)="" Q DATA_"^1"
"RTN","RGRSPARS",186,0)
 S TYPE=$P($G(^DG(391,IEN,0)),"^",1)
"RTN","RGRSPARS",187,0)
 I $G(TYPE)="" Q DATA_"^1"
"RTN","RGRSPARS",188,0)
 Q $G(TYPE)
"RTN","RGRSPARS",189,0)
EMP(DATA) ;
"RTN","RGRSPARS",190,0)
 N IEN,EMP
"RTN","RGRSPARS",191,0)
 Q:$$FREE(DATA)="" ""
"RTN","RGRSPARS",192,0)
 Q:$$FREE(DATA)="""@""" """@"""
"RTN","RGRSPARS",193,0)
 Q:DATA=1 "EMPLOYED FULL TIME"
"RTN","RGRSPARS",194,0)
 Q:DATA=2 "EMPLOYED PART TIME"
"RTN","RGRSPARS",195,0)
 Q:DATA=3 "NOT EMPLOYED"
"RTN","RGRSPARS",196,0)
 Q:DATA=4 "SELF EMPLOYED"
"RTN","RGRSPARS",197,0)
 Q:DATA=5 "RETIRED"
"RTN","RGRSPARS",198,0)
 Q:DATA=6 "ACTIVE MILITARY DUTY"
"RTN","RGRSPARS",199,0)
 Q:DATA=9 "UNKNOWN"
"RTN","RGRSPARS",200,0)
 Q DATA_"^1"
"RTN","RGRSPT")
0^139^B15701822
"RTN","RGRSPT",1,0)
RGRSPT ;ALB/RJS,CML-HIGH LEVEL ROUTINE FOR PARSING AND FILING ;06/25/98
"RTN","RGRSPT",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGRSPT",3,0)
 ;
"RTN","RGRSPT",4,0)
 ;Parse Incoming Message, and file.
"RTN","RGRSPT",5,0)
 ;
"RTN","RGRSPT",6,0)
 ;
"RTN","RGRSPT",7,0)
 N RGRSDFN,VAFCA,RGRS,VAFCA08,RGRSARAY,BOGUS,RGDC,SENSTVTY,CMORDISP
"RTN","RGRSPT",8,0)
 N NAME,LASTNAME,SSN,ICN,CMOR,CMORIEN,OTHSITE,RGRSDATA,HERE,BULSUB
"RTN","RGRSPT",9,0)
 S RGRSARAY="RGRS(2)"
"RTN","RGRSPT",10,0)
 D INITIZE^RGRSUTIL ;copy HL7 message into local RGDC array
"RTN","RGRSPT",11,0)
 S VAFCA=$$EN^RGRSMSH() ;parse MSH for Joe's filer
"RTN","RGRSPT",12,0)
 D EN^RGRSPARS(RGRSARAY) ;parse HL7 nessage into local array RGRS
"RTN","RGRSPT",13,0)
 I $$SKIP^RGRSZZPT(1,RGRSARAY) D  G EXIT ;skip if certain data is not there
"RTN","RGRSPT",14,0)
 . D SKIPBULL^RGRSBULL(RGRSARAY)
"RTN","RGRSPT",15,0)
 S RGRSDFN=$$GETDFN^MPIF001(@RGRSARAY@(991.01)) ;Get DFN from ICN
"RTN","RGRSPT",16,0)
 Q:+$$SEND2^VAFCUTL1(RGRSDFN,"T")  ;safeguard to prevent the processing of test patients
"RTN","RGRSPT",17,0)
 S OTHSITE=@RGRSARAY@("SITENUM")\1
"RTN","RGRSPT",18,0)
 S HERE=$P($$SITE^VASITE,"^",3)\1
"RTN","RGRSPT",19,0)
 ;
"RTN","RGRSPT",20,0)
 ;If patient not known in site, send bulletin, go exit
"RTN","RGRSPT",21,0)
 ;
"RTN","RGRSPT",22,0)
 I +RGRSDFN=-1 M RGRS("MESSAGE")=RGDC D NOT2^RGRSBUL1(RGRSARAY) G EXIT
"RTN","RGRSPT",23,0)
 ;
"RTN","RGRSPT",24,0)
 D GETDATA^MPIFQ0("^DPT(",RGRSDFN,"RGRSDATA",".01;.09;991.01;991.03","EI")
"RTN","RGRSPT",25,0)
 S NAME=$G(RGRSDATA(2,RGRSDFN,.01,"E"))
"RTN","RGRSPT",26,0)
 S LASTNAME=$P(NAME,",",1)
"RTN","RGRSPT",27,0)
 S SSN=$G(RGRSDATA(2,RGRSDFN,.09,"E"))
"RTN","RGRSPT",28,0)
 S ICN=$G(RGRSDATA(2,RGRSDFN,991.01,"E"))
"RTN","RGRSPT",29,0)
 S CMORIEN=$G(RGRSDATA(2,RGRSDFN,991.03,"I"))
"RTN","RGRSPT",30,0)
 S CMOR=$$NS^XUAF4(CMORIEN)
"RTN","RGRSPT",31,0)
 S CMORDISP=$P(CMOR,"^",1)
"RTN","RGRSPT",32,0)
 S CMOR=$P(CMOR,"^",2)
"RTN","RGRSPT",33,0)
 ;
"RTN","RGRSPT",34,0)
 S @RGRSARAY@("NAME")=@RGRSARAY@(.01)
"RTN","RGRSPT",35,0)
 S @RGRSARAY@("SSN")=@RGRSARAY@(.09)
"RTN","RGRSPT",36,0)
 S @RGRSARAY@("ICN")=@RGRSARAY@(991.01)
"RTN","RGRSPT",37,0)
 S @RGRSARAY@("CMOR")=$P($$NS^XUAF4($$LKUP^XUAF4(OTHSITE)),"^")
"RTN","RGRSPT",38,0)
 ;
"RTN","RGRSPT",39,0)
 ;If ICN or CMOR don't match, send bulletin and go exit
"RTN","RGRSPT",40,0)
 I '$$MATCH(RGRSDFN,RGRSARAY,,,ICN,CMOR,.BULSUB) D  G EXIT
"RTN","RGRSPT",41,0)
 . D MTCHBULL^RGRSBULL(RGRSDFN,RGRSARAY,NAME,SSN,ICN,CMORDISP,BULSUB)
"RTN","RGRSPT",42,0)
 ;
"RTN","RGRSPT",43,0)
 ;if ICN and CMOR match, check for SSN edit from CMOR
"RTN","RGRSPT",44,0)
 I @RGRSARAY@("SENDING SITE")=CMOR,(SSN'=@RGRSARAY@(.09)) D
"RTN","RGRSPT",45,0)
 .D SSNBULL^RGRSBUL1(RGRSDFN,RGRSARAY,NAME,SSN,ICN,CMORDISP)
"RTN","RGRSPT",46,0)
 ;
"RTN","RGRSPT",47,0)
 ;If patient is Sensitive at other site but not here send bulletin
"RTN","RGRSPT",48,0)
 ;;S SENSTVTY=@RGRSARAY@("SENSITIVITY")
"RTN","RGRSPT",49,0)
 ;;I '$$SENSTIVE^RGRSENS(RGRSDFN),SENSTVTY D SENSTIVE^RGRSBUL1(RGRSDFN,RGRSARAY,NAME)
"RTN","RGRSPT",50,0)
 ;
"RTN","RGRSPT",51,0)
 I '$$AUTO^RGJUSITE() D  G EXIT
"RTN","RGRSPT",52,0)
 . ;
"RTN","RGRSPT",53,0)
 . ;IF it's the CMOR - review file
"RTN","RGRSPT",54,0)
 . ;
"RTN","RGRSPT",55,0)
 . I (OTHSITE)=(HERE) D  Q
"RTN","RGRSPT",56,0)
 . . S VAFCA=VAFCA_"^"_RGRSDFN
"RTN","RGRSPT",57,0)
 . . S VAFCA08=1 S BOGUS=$$ADD^VAFCEHU1(VAFCA,"RGRS")
"RTN","RGRSPT",58,0)
 . ;
"RTN","RGRSPT",59,0)
 . ;IF it's not the VCCI - Don't Rebroadcast
"RTN","RGRSPT",60,0)
 . ;
"RTN","RGRSPT",61,0)
 . I (OTHSITE)'=(HERE) D  Q
"RTN","RGRSPT",62,0)
 . . S VAFCA08=1
"RTN","RGRSPT",63,0)
 . . D EDIT^VAFCPTED(RGRSDFN,RGRSARAY,".01;.03;.09;.02;.05;.08;.111;.112;.113;.114;.115;.1112;.117;.131;.132;.211;.219;.2403;.31115")
"RTN","RGRSPT",64,0)
 ;
"RTN","RGRSPT",65,0)
 I $$AUTO^RGJUSITE() D  G EXIT
"RTN","RGRSPT",66,0)
 . ;
"RTN","RGRSPT",67,0)
 . ;IF it's the VCCI - rebroadcast
"RTN","RGRSPT",68,0)
 . ;
"RTN","RGRSPT",69,0)
 . I (OTHSITE)=(HERE) D  Q
"RTN","RGRSPT",70,0)
 . . D EDIT^VAFCPTED(RGRSDFN,RGRSARAY,".01;.03;.09;.02;.05;.08;.111;.112;.113;.114;.115;.1112;.117;.131;.132;.211;.219;.2403;.31115")
"RTN","RGRSPT",71,0)
 . ;
"RTN","RGRSPT",72,0)
 . ;IF it's not the VCCI - Don't Rebroadcast
"RTN","RGRSPT",73,0)
 . ;
"RTN","RGRSPT",74,0)
 . I (OTHSITE)'=(HERE) D  Q
"RTN","RGRSPT",75,0)
 . . S VAFCA08=1
"RTN","RGRSPT",76,0)
 . . D EDIT^VAFCPTED(RGRSDFN,RGRSARAY,".01;.03;.09;.02;.05;.08;.111;.112;.113;.114;.115;.1112;.117;.131;.132;.211;.219;.2403;.31115")
"RTN","RGRSPT",77,0)
EXIT ;
"RTN","RGRSPT",78,0)
 Q
"RTN","RGRSPT",79,0)
 ;
"RTN","RGRSPT",80,0)
MATCH(DFN,RGRSARAY,LASTNAME,SSN,ICN,CMOR,BULSUB) ;
"RTN","RGRSPT",81,0)
 Q:$G(DFN)=""!($G(RGRSARAY)="") 0
"RTN","RGRSPT",82,0)
 N COUNT,TRUE S (COUNT,TRUE)=0
"RTN","RGRSPT",83,0)
 S BULSUB=""
"RTN","RGRSPT",84,0)
 I $D(LASTNAME) D
"RTN","RGRSPT",85,0)
 . S COUNT=COUNT+1
"RTN","RGRSPT",86,0)
 . I (LASTNAME'=""),(LASTNAME=$P(@RGRSARAY@(.01),",",1)) S TRUE=TRUE+1
"RTN","RGRSPT",87,0)
 I $D(SSN) D
"RTN","RGRSPT",88,0)
 . S COUNT=COUNT+1
"RTN","RGRSPT",89,0)
 . I (SSN'=""),(SSN=$G(@RGRSARAY@(.09))) S TRUE=TRUE+1
"RTN","RGRSPT",90,0)
 I $D(ICN) D
"RTN","RGRSPT",91,0)
 . S COUNT=COUNT+1
"RTN","RGRSPT",92,0)
 . I (ICN'=""),(ICN=$G(@RGRSARAY@(991.01))) S TRUE=TRUE+1 Q
"RTN","RGRSPT",93,0)
 . S BULSUB=BULSUB_"ICN"
"RTN","RGRSPT",94,0)
 I $D(CMOR) D
"RTN","RGRSPT",95,0)
 . S COUNT=COUNT+1
"RTN","RGRSPT",96,0)
 . I (CMOR'=""),(CMOR=$G(@RGRSARAY@("SITENUM"))) S TRUE=TRUE+1 Q
"RTN","RGRSPT",97,0)
 . I BULSUB]"" S BULSUB=BULSUB_" & "
"RTN","RGRSPT",98,0)
 . S BULSUB=BULSUB_"CMOR"
"RTN","RGRSPT",99,0)
 I COUNT=TRUE Q 1
"RTN","RGRSPT",100,0)
 Q 0
"RTN","RGRSUTIL")
0^39^B6067828
"RTN","RGRSUTIL",1,0)
RGRSUTIL ;ALB/RJS-CIRN UTILITIES ;3/12/96
"RTN","RGRSUTIL",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGRSUTIL",3,0)
SNODE(PEICE,DATA,NODE1,NODE2) ;Set Node in ^TMP("RGDC",$J) Global
"RTN","RGRSUTIL",4,0)
 I $D(NODE2) S $P(^TMP("RGDC",$J,RGNOW,NODE1,NODE2),"^",PEICE)=DATA Q
"RTN","RGRSUTIL",5,0)
 S $P(^TMP("RGDC",$J,RGNOW,NODE1),"^",PEICE)=DATA
"RTN","RGRSUTIL",6,0)
 Q
"RTN","RGRSUTIL",7,0)
SEG(SEGMENT,PIECE,CODE) ;Return segment from RGDC array and kill node
"RTN","RGRSUTIL",8,0)
 N RGNODE,RGDATA,RGDONE,RGC K RGDONE
"RTN","RGRSUTIL",9,0)
 I '$D(RGC) S RGC=$E(HL("ECH"))
"RTN","RGRSUTIL",10,0)
 S RGNODE=0
"RTN","RGRSUTIL",11,0)
 F  S RGNODE=$O(RGDC(RGNODE)) Q:RGNODE=""!($D(RGDONE))  D
"RTN","RGRSUTIL",12,0)
 .S RGDATA=RGDC(RGNODE)
"RTN","RGRSUTIL",13,0)
 .I ($P(RGDATA,HL("FS"),1)=SEGMENT)&($P($P(RGDATA,HL("FS"),PIECE),RGC,1)=CODE) S RGDONE=1 K RGDC(RGNODE)
"RTN","RGRSUTIL",14,0)
 Q:$D(RGDONE) $G(RGDATA)
"RTN","RGRSUTIL",15,0)
 Q ""
"RTN","RGRSUTIL",16,0)
SEG1(SEGMENT,PIECE,CODE) ;Return segment from RGDC array 
"RTN","RGRSUTIL",17,0)
 N RGNODE,RGDATA,RGDONE,RGC K RGDONE
"RTN","RGRSUTIL",18,0)
 I '$D(RGC) S RGC=$E(HL("ECH"))
"RTN","RGRSUTIL",19,0)
 S RGNODE=0
"RTN","RGRSUTIL",20,0)
 F  S RGNODE=$O(RGDC(RGNODE)) Q:RGNODE=""!($D(RGDONE))  D
"RTN","RGRSUTIL",21,0)
 .S RGDATA=RGDC(RGNODE)
"RTN","RGRSUTIL",22,0)
 .I ($P(RGDATA,HL("FS"),1)=SEGMENT)&($P($P(RGDATA,HL("FS"),PIECE),RGC,1)=CODE) S RGDONE=1
"RTN","RGRSUTIL",23,0)
 Q:$D(RGDONE) $G(RGDATA)
"RTN","RGRSUTIL",24,0)
 Q ""
"RTN","RGRSUTIL",25,0)
ERROR(CODE) ;Return text error from ^RGE global
"RTN","RGRSUTIL",26,0)
 I '$D(CODE) Q ""
"RTN","RGRSUTIL",27,0)
 N RGNODE
"RTN","RGRSUTIL",28,0)
 S RGNODE=$O(^RGE(360.3,"B",CODE,0))
"RTN","RGRSUTIL",29,0)
 I RGNODE="" Q ""
"RTN","RGRSUTIL",30,0)
 Q $E($P(^RGE(360.3,RGNODE,0),"^",2),1,80)
"RTN","RGRSUTIL",31,0)
INITIZE ;Initialize RGDC array with incoming message
"RTN","RGRSUTIL",32,0)
 N I,J,X
"RTN","RGRSUTIL",33,0)
 F I=1:1 X HLNEXT Q:HLQUIT'>0  S RGDC(I)=HLNODE,J=0  F  S J=$O(HLNODE(J)) Q:'J  S RGDC(I,J)=HLNODE(J)
"RTN","RGRSUTIL",34,0)
 Q
"RTN","RGRSUTIL",35,0)
SSNDFN(SSN) ;Input ssn output DFN
"RTN","RGRSUTIL",36,0)
 N DFN
"RTN","RGRSUTIL",37,0)
 Q:$G(SSN)="" -1
"RTN","RGRSUTIL",38,0)
 S DFN=$O(^DPT("SSN",+SSN,0))
"RTN","RGRSUTIL",39,0)
 Q:$L(DFN) DFN
"RTN","RGRSUTIL",40,0)
 S DFN=$O(^DPT("SSN",SSN,0))
"RTN","RGRSUTIL",41,0)
 Q:$L(DFN) DFN
"RTN","RGRSUTIL",42,0)
 Q -1
"RTN","RGRSUTIL",43,0)
 ;
"RTN","RGRSUTIL",44,0)
LINE() ; Return a dashed line.       
"RTN","RGRSUTIL",45,0)
 Q $TR($J("",80)," ","-")
"RTN","RGRSUTIL",46,0)
 ;
"RTN","RGRSUTIL",47,0)
PAUSE() ; Pause for CRT output.
"RTN","RGRSUTIL",48,0)
 ;  Input:   IOST, IOSL
"RTN","RGRSUTIL",49,0)
 ;  Output:  0  --  Continue to display output
"RTN","RGRSUTIL",50,0)
 ;           1  --  Quit
"RTN","RGRSUTIL",51,0)
 Q:$E(IOST,1,2)'["C-" 0
"RTN","RGRSUTIL",52,0)
 N DIR,DIRUT,DTOUT,DUOUT,RGJ
"RTN","RGRSUTIL",53,0)
 F RGJ=$Y:1:(IOSL-4) W !
"RTN","RGRSUTIL",54,0)
 S DIR(0)="E" D ^DIR
"RTN","RGRSUTIL",55,0)
 Q $D(DIRUT)!($D(DUOUT))
"RTN","RGRSUTIL",56,0)
 ;
"RTN","RGRSUTIL",57,0)
DIAG(X) ; Return a string for diagnoses.
"RTN","RGRSUTIL",58,0)
 ;  Input:   X  -  Code for type of diagnosis (Primary, etc.)
"RTN","RGRSUTIL",59,0)
 ;  Output:  Descriptive string, i.e., "Primary", etc.
"RTN","RGRSUTIL",60,0)
 Q $S($G(X)="":"Unknown",X="A":"Additional",X="P":"Primary",X="S":"Secondary",X="T":"Tertiary",1:"Unknown")
"RTN","RGRSUTIL",61,0)
 ;
"RTN","RGRSUTIL",62,0)
ORD(X) ; Return a string for orders.
"RTN","RGRSUTIL",63,0)
 ;  Input:   X  -  Code for type of order (Lab, etc.)
"RTN","RGRSUTIL",64,0)
 ;  Output:  Descriptive string, i.e., "Lab", etc.
"RTN","RGRSUTIL",65,0)
 Q $S($G(X)="":"Unknown",X="L":"Lab",X="R":"Radiology",1:"Unknown")
"RTN","RGRSUTIL",66,0)
 ;
"RTN","RGRSUTIL",67,0)
UPDTFLD(FILE,FLD,ANS1,ANS2) ; Returns the correct field answer
"RTN","RGRSUTIL",68,0)
 ;DLR - Added to prevent the overwriting the last four in ZIP with null
"RTN","RGRSUTIL",69,0)
 ; input:  FILE  - file number (ex. 2 PATIENT)
"RTN","RGRSUTIL",70,0)
 ;         FLD  -  field number (ex. .1112 ZIP+4)
"RTN","RGRSUTIL",71,0)
 ;         ANS1 -  existing field value
"RTN","RGRSUTIL",72,0)
 ;         ANS2 -  incoming value
"RTN","RGRSUTIL",73,0)
 I (FILE=2)&(FLD=.1112) I $E(ANS1,1,5)=$E(ANS2,1,5),($L(ANS2)=5) Q ANS1
"RTN","RGRSUTIL",74,0)
 Q ANS2
"RTN","RGRSUTIL",75,0)
 ;
"RTN","RGRSUTIL",76,0)
SSNINT(SSN) ;
"RTN","RGRSUTIL",77,0)
 Q:$G(SSN)="" ""
"RTN","RGRSUTIL",78,0)
 Q $TRANSLATE(SSN,"-","")
"RTN","RGRSUTL2")
0^85^B18502967
"RTN","RGRSUTL2",1,0)
RGRSUTL2 ;ALB/RJS-UTILITIES FOR CIRN ;1/2/97
"RTN","RGRSUTL2",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGRSUTL2",3,0)
 ;
"RTN","RGRSUTL2",4,0)
SSN(SSN,ARRAY) ;RETURNS DFN'S OF ALL SSN'S OR PSUEDO'S THAT MATCH 
"RTN","RGRSUTL2",5,0)
 ;        THE SSN PASSED
"RTN","RGRSUTL2",6,0)
 ;        CALLING ROUTINE MUST KILL ARRAY BEFORE CALLING THIS
"RTN","RGRSUTL2",7,0)
 ;        FUNCTION
"RTN","RGRSUTL2",8,0)
 Q:$G(SSN)=""!($G(ARRAY)="")
"RTN","RGRSUTL2",9,0)
 N RGDFN S RGDFN=0
"RTN","RGRSUTL2",10,0)
 F  S RGDFN=$O(^DPT("SSN",SSN,RGDFN)) Q:RGDFN'>0  D SET(RGDFN)
"RTN","RGRSUTL2",11,0)
 I $D(@ARRAY) Q 1
"RTN","RGRSUTL2",12,0)
 Q 0
"RTN","RGRSUTL2",13,0)
SET(DFN) ;
"RTN","RGRSUTL2",14,0)
 Q:'$D(^DPT(DFN,0))
"RTN","RGRSUTL2",15,0)
 S @ARRAY@(DFN)=$P(^DPT(DFN,0),"^",1)
"RTN","RGRSUTL2",16,0)
 Q
"RTN","RGRSUTL2",17,0)
 ; This function determines if a word is singular or plural and also
"RTN","RGRSUTL2",18,0)
 ; determines if "no" or a numeric value is placed in front of
"RTN","RGRSUTL2",19,0)
 ; the word (ie no exception(s)).
"RTN","RGRSUTL2",20,0)
SNGPLR(RGNUM,RGSNG,RGPLR) ;
"RTN","RGRSUTL2",21,0)
 N RGZ
"RTN","RGRSUTL2",22,0)
 S RGZ=RGSNG?.E1L.E,RGPLR=$G(RGPLR,RGSNG_$S(RGZ:"s",1:"S"))
"RTN","RGRSUTL2",23,0)
 Q $S('RGNUM:$S(RGZ:"no ",1:"NO ")_RGPLR,RGNUM=1:"1 "_RGSNG,1:RGNUM_" "_RGPLR)
"RTN","RGRSUTL2",24,0)
 ; Display formatted title
"RTN","RGRSUTL2",25,0)
TITLE(RGTTL,RGVER,RGFN) ;
"RTN","RGRSUTL2",26,0)
 I '$D(IOM) N IOM,IOF S IOM=80,IOF="#"
"RTN","RGRSUTL2",27,0)
 S RGVER=$G(RGVER,"1.0")
"RTN","RGRSUTL2",28,0)
 S:RGVER RGVER="Version "_RGVER
"RTN","RGRSUTL2",29,0)
 U $G(IO,$I)
"RTN","RGRSUTL2",30,0)
 W @IOF,$S(IO=IO(0):$C(27,91,55,109),1:""),$C(13)
"RTN","RGRSUTL2",31,0)
 S Y=$$DT^XLFDT X ^DD("DD")
"RTN","RGRSUTL2",32,0)
 W Y,?(IOM-$L(RGTTL)\2),RGTTL,?(IOM-$L(RGVER)),RGVER,!,$S(IO=IO(0):$C(27,91,109),1:$$UND),!
"RTN","RGRSUTL2",33,0)
 W:$D(RGFN) ?(IOM-$L(RGFN)\2),RGFN,!
"RTN","RGRSUTL2",34,0)
 Q
"RTN","RGRSUTL2",35,0)
 ; Pause for user response
"RTN","RGRSUTL2",36,0)
PAUSE(RGP,RGX,RGY) ;
"RTN","RGRSUTL2",37,0)
 Q $$GETCH($G(RGP,"Press RETURN or ENTER to continue..."),U,.RGX,.RGY)
"RTN","RGRSUTL2",38,0)
 ; Single character read
"RTN","RGRSUTL2",39,0)
GETCH(RGP,RGV,RGX,RGY,RGT,RGD) ;
"RTN","RGRSUTL2",40,0)
 N RGZ,RGC
"RTN","RGRSUTL2",41,0)
 W:$D(RGX)!$D(RGY) $$XY($G(RGX,$X),$G(RGY,$Y))
"RTN","RGRSUTL2",42,0)
 W $G(RGP)
"RTN","RGRSUTL2",43,0)
 S RGT=$G(RGT,$G(DTIME,999999999999)),RGD=$G(RGD,U),RGC=""
"RTN","RGRSUTL2",44,0)
 S:$D(RGV) RGV=$$UP^XLFSTR(RGV)_U
"RTN","RGRSUTL2",45,0)
 F  D  Q:'$L(RGZ)
"RTN","RGRSUTL2",46,0)
 .S RGZ=$$READ^XGF(1,RGT)
"RTN","RGRSUTL2",47,0)
 .E  S RGC=RGD Q
"RTN","RGRSUTL2",48,0)
 .W $C(8)
"RTN","RGRSUTL2",49,0)
 .Q:'$L(RGZ)
"RTN","RGRSUTL2",50,0)
 .S RGZ=$$UP^XLFSTR(RGZ)
"RTN","RGRSUTL2",51,0)
 .I $D(RGV) D
"RTN","RGRSUTL2",52,0)
 ..I RGV[RGZ S RGC=RGZ
"RTN","RGRSUTL2",53,0)
 ..E  W $C(7,32,8) S RGC=""
"RTN","RGRSUTL2",54,0)
 .E  S RGC=RGZ
"RTN","RGRSUTL2",55,0)
 W !
"RTN","RGRSUTL2",56,0)
 Q RGC
"RTN","RGRSUTL2",57,0)
 ; Convert X to base Y padded to length L
"RTN","RGRSUTL2",58,0)
BASE(X,Y,L) ;
"RTN","RGRSUTL2",59,0)
 Q:(Y<2)!(Y>62) ""
"RTN","RGRSUTL2",60,0)
 N RGZ,RGZ1
"RTN","RGRSUTL2",61,0)
 S RGZ1="",X=$S(X<0:-X,1:X)
"RTN","RGRSUTL2",62,0)
 F  S RGZ=X#Y,X=X\Y,RGZ1=$C($S(RGZ<10:RGZ+48,RGZ<36:RGZ+55,1:RGZ+61))_RGZ1 Q:'X
"RTN","RGRSUTL2",63,0)
 Q $S('$G(L):RGZ1,1:$$REPEAT^XLFSTR(0,L-$L(RGZ1))_$E(RGZ1,1,L))
"RTN","RGRSUTL2",64,0)
 ;
"RTN","RGRSUTL2",65,0)
 ; Output an underline X bytes long
"RTN","RGRSUTL2",66,0)
UND(X) Q $$REPEAT^XLFSTR("-",$G(X,$G(IOM,80)))
"RTN","RGRSUTL2",67,0)
 ;
"RTN","RGRSUTL2",68,0)
 ; Position cursor
"RTN","RGRSUTL2",69,0)
XY(DX,DY) ;
"RTN","RGRSUTL2",70,0)
 D:$G(IOXY)="" HOME^%ZIS
"RTN","RGRSUTL2",71,0)
 S DX=$S(+$G(DX)>0:+DX,1:0),DY=$S(+$G(DY)>0:+DY,1:0),$X=0
"RTN","RGRSUTL2",72,0)
 X IOXY
"RTN","RGRSUTL2",73,0)
 S $X=DX,$Y=DY
"RTN","RGRSUTL2",74,0)
 ; Send an alert.
"RTN","RGRSUTL2",75,0)
 ;    XQAMSG = Message to send
"RTN","RGRSUTL2",76,0)
 ;    RGUSR  = A semicolon-delimited list of users to receive alert.
"RTN","RGRSUTL2",77,0)
ALERT(XQAMSG,RGUSR) ;
"RTN","RGRSUTL2",78,0)
 N XQA,XQAOPT,XQAFLG,XQAROU,XQADATA,XQAID
"RTN","RGRSUTL2",79,0)
 S @$$TRAP^RGZOSF("EXIT^RGRSUTL2"),RGUSR=$G(RGUSR,"*"),XQAMSG=$TR(XQAMSG,U,"~")
"RTN","RGRSUTL2",80,0)
 D ENTRY(RGUSR,.XQA),SETUP^XQALERT:$D(XQA)
"RTN","RGRSUTL2",81,0)
EXIT Q
"RTN","RGRSUTL2",82,0)
 ; Takes a list of receipients as input and produces an array of
"RTN","RGRSUTL2",83,0)
 ; DUZ's as output.
"RTN","RGRSUTL2",84,0)
 ; Inputs:
"RTN","RGRSUTL2",85,0)
 ;     RGUSR = Semicolon-delimited list of recipients
"RTN","RGRSUTL2",86,0)
 ;     RGLST = Special token list
"RTN","RGRSUTL2",87,0)
 ; Outputs:
"RTN","RGRSUTL2",88,0)
 ;     RGOUT = Local array to receive DUZ list
"RTN","RGRSUTL2",89,0)
ENTRY(RGUSR,RGOUT,RGLST) ;
"RTN","RGRSUTL2",90,0)
 N RGZ,RGZ1,RGZ2
"RTN","RGRSUTL2",91,0)
 K RGOUT
"RTN","RGRSUTL2",92,0)
 F RGZ=1:1:$L(RGUSR,";") S RGZ1=$P(RGUSR,";",RGZ) D:RGZ1'=""  S:RGZ1 RGOUT(+RGZ1)=""
"RTN","RGRSUTL2",93,0)
 .S:$D(RGLST(RGZ1)) RGZ1=RGLST(RGZ1)
"RTN","RGRSUTL2",94,0)
 .Q:RGZ1?.N
"RTN","RGRSUTL2",95,0)
 .I RGZ1?1"-"1.N D MGRP(-RGZ1) S RGZ1=0 Q
"RTN","RGRSUTL2",96,0)
 .S RGZ2=$E(RGZ1,1,2)
"RTN","RGRSUTL2",97,0)
 .I RGZ2="G." D MGRP($E(RGZ1,3,999)) Q
"RTN","RGRSUTL2",98,0)
 .I RGZ2="L." D LIST($E(RGZ1,3,999)) Q
"RTN","RGRSUTL2",99,0)
 .S RGZ1=$$LKP(RGZ1)
"RTN","RGRSUTL2",100,0)
 Q
"RTN","RGRSUTL2",101,0)
LKP(RGNAME) ;
"RTN","RGRSUTL2",102,0)
 N RGZ,RGZ1
"RTN","RGRSUTL2",103,0)
 I $D(^VA(200,"B",RGNAME)) S RGZ=RGNAME G L1
"RTN","RGRSUTL2",104,0)
 S RGZ=$O(^(RGNAME)),RGZ1=$O(^(RGZ))
"RTN","RGRSUTL2",105,0)
 Q:(RGZ="")!(RGNAME'=$E(RGZ,1,$L(RGNAME))) 0
"RTN","RGRSUTL2",106,0)
 Q:(RGZ1'="")&(RGNAME=$E(RGZ1,1,$L(RGNAME))) 0
"RTN","RGRSUTL2",107,0)
L1 S RGZ1=$O(^(RGZ,0)),RGZ=$O(^(RGZ1))
"RTN","RGRSUTL2",108,0)
 Q:'RGZ1!RGZ 0
"RTN","RGRSUTL2",109,0)
 Q RGZ1
"RTN","RGRSUTL2",110,0)
 ; Send a mail message.
"RTN","RGRSUTL2",111,0)
MAIL(RGMSG,XMY,XMSUB,XMDUZ) ;
"RTN","RGRSUTL2",112,0)
 N XMTEXT
"RTN","RGRSUTL2",113,0)
 S:$D(RGMSG)=1 RGMSG(1)=RGMSG
"RTN","RGRSUTL2",114,0)
 S XMTEXT="RGMSG(",@$$TRAP^RGZOSF("EXIT^RGRSUTL2"),XMY=$G(XMY)
"RTN","RGRSUTL2",115,0)
 S:$G(XMSUB)="" XMSUB=RGMSG
"RTN","RGRSUTL2",116,0)
 S:$G(XMDUZ)="" XMDUZ=$G(DUZ)
"RTN","RGRSUTL2",117,0)
 F  Q:'$L(XMY)  S X=$P(XMY,";"),XMY=$P(XMY,";",2,999) S:$L(X) XMY(X)=""
"RTN","RGRSUTL2",118,0)
 D ^XMD:$D(XMY)>9
"RTN","RGRSUTL2",119,0)
 Q
"RTN","RGRSUTL2",120,0)
LIST(RGLIST) ;
"RTN","RGRSUTL2",121,0)
 Q:RGLIST=""
"RTN","RGRSUTL2",122,0)
 S:RGLIST'=+RGLIST RGLIST=+$O(^RGCDSS(993.6,"B",RGLIST,0))
"RTN","RGRSUTL2",123,0)
 S @$$TRAP^RGZOSF("LERR^RGUTUSR")
"RTN","RGRSUTL2",124,0)
 X:$D(^RGCDSS(993.6,RGLIST,1)) ^(1)
"RTN","RGRSUTL2",125,0)
LERR Q
"RTN","RGRSUTL2",126,0)
MGRP(RGMGRP) ;
"RTN","RGRSUTL2",127,0)
 N RGX
"RTN","RGRSUTL2",128,0)
 S RGX(0)=""
"RTN","RGRSUTL2",129,0)
 D MGRP2(RGMGRP)
"RTN","RGRSUTL2",130,0)
 Q
"RTN","RGRSUTL2",131,0)
MGRP2(RGMGRP) ;
"RTN","RGRSUTL2",132,0)
 N RGZ,RGZ1
"RTN","RGRSUTL2",133,0)
 Q:RGMGRP=""
"RTN","RGRSUTL2",134,0)
 S:RGMGRP'=+RGMGRP RGMGRP=+$O(^XMB(3.8,"B",RGMGRP,0))
"RTN","RGRSUTL2",135,0)
 Q:$D(RGX(RGMGRP))
"RTN","RGRSUTL2",136,0)
 S RGX(RGMGRP)=""
"RTN","RGRSUTL2",137,0)
 F RGZ=0:0 S RGZ=+$O(^XMB(3.8,RGMGRP,1,RGZ)) Q:'RGZ  S RGOUT(+^(RGZ,0))=""
"RTN","RGRSUTL2",138,0)
 F RGZ=0:0 S RGZ=+$O(^XMB(3.8,RGMGRP,5,RGZ)) Q:'RGZ  D MGRP2(^(RGZ,0))
"RTN","RGRSUTL2",139,0)
 Q
"RTN","RGRSWPT")
0^151^B4114330
"RTN","RGRSWPT",1,0)
RGRSWPT ;ALB/RJS-ACTIVE PATIENT CHECK ;4/11/96
"RTN","RGRSWPT",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGRSWPT",3,0)
LTD(DFN)        ;
"RTN","RGRSWPT",4,0)
 ;FIND LAST TREATMENT DATE
"RTN","RGRSWPT",5,0)
 ;INPUT: DFN
"RTN","RGRSWPT",6,0)
 ;OUTPUT: LTD LAST TREATMENT DATE
"RTN","RGRSWPT",7,0)
 ;
"RTN","RGRSWPT",8,0)
 ;
"RTN","RGRSWPT",9,0)
 N LTD,X
"RTN","RGRSWPT",10,0)
 ;
"RTN","RGRSWPT",11,0)
 ; - NEED A PATIENT
"RTN","RGRSWPT",12,0)
 I '$G(DFN) S LTD=0 G LTDQ
"RTN","RGRSWPT",13,0)
 ;
"RTN","RGRSWPT",14,0)
 ; - IF CURRENT INPATIENT, SET LTD = TODAY AND QUIT
"RTN","RGRSWPT",15,0)
 ;Current admission movement from ADM^VAPDT2
"RTN","RGRSWPT",16,0)
 K VADMVT,VAINDT D ADM^VADPT2 I $L(VADMVT) S LTD=DT K VADMVT,VAERR,VAINDT G LTDQ
"RTN","RGRSWPT",17,0)
 K VADMVT,VAERR,VAINDT
"RTN","RGRSWPT",18,0)
 ;
"RTN","RGRSWPT",19,0)
 ; - GET THE LAST DISCHARGE DATE
"RTN","RGRSWPT",20,0)
 S LTD=+$O(^DGPM("ATID3",DFN,"")) S:LTD LTD=9999999.9999999-LTD\1 S:LTD>DT LTD=DT
"RTN","RGRSWPT",21,0)
 ;
"RTN","RGRSWPT",22,0)
 ; - GET THE LAST REGISTRATION DATE AND COMPARE IT TO LTD
"RTN","RGRSWPT",23,0)
 K VAROOT,VARP,^UTILITY("VARP",$J) S VARP("F")=2000101 D REG^VADPT I $D(^UTILITY("VARP",$J,1,"I")) S X=$P(^("I"),U) I X S X=X\1 S:X>LTD LTD=X
"RTN","RGRSWPT",24,0)
 K ^UTILITY("VARP",$J),VARP,VAERR
"RTN","RGRSWPT",25,0)
 ;
"RTN","RGRSWPT",26,0)
 ; - GET THE LAST APPOINTMENT DATE AND COMPARE TO LTD
"RTN","RGRSWPT",27,0)
 K VASD,^UTILTIY("VASD",$J) S VASD("F")=2000101 D SDA^VADPT S Y="" F  S Y=$O(^UTILITY("VASD",$J,Y)) Q:'Y  I $P(^UTILITY("VASD",$J,Y,"I"),U,3)="" S X=$P(^("I"),U) I X S X=X\1 S:X>LTD LTD=X
"RTN","RGRSWPT",28,0)
 K VASD,VAERR,^UTILITY("VASD",$J)
"RTN","RGRSWPT",29,0)
 ;
"RTN","RGRSWPT",30,0)
 ; - GET THE LAST STOP AND COMPARE TO LTD
"RTN","RGRSWPT",31,0)
 ; Look at Outpatient Encounter, ^SDV is going away
"RTN","RGRSWPT",32,0)
 ; Use an API instead of ordering through global
"RTN","RGRSWPT",33,0)
 N OPIEN S OPIEN=$$GETLAST^SDOE(DFN,2000101,"C")
"RTN","RGRSWPT",34,0)
 I $G(^SCE(+OPIEN,0)) S LTD=$P(^SCE(OPIEN,0),"^",1)\1
"RTN","RGRSWPT",35,0)
 ;
"RTN","RGRSWPT",36,0)
LTDQ ;
"RTN","RGRSWPT",37,0)
 Q $S(LTD:LTD,1:0)
"RTN","RGRSWPT",38,0)
 ;
"RTN","RGRSWPT",39,0)
ACTIVE(DFN) ;
"RTN","RGRSWPT",40,0)
 N LTD,TODAY,DIFF
"RTN","RGRSWPT",41,0)
 S LTD=$$LTD(DFN)
"RTN","RGRSWPT",42,0)
 Q:LTD'>0 0
"RTN","RGRSWPT",43,0)
 Q:$L(LTD)'=7 1_"^"_LTD_"^"_"ZERO"
"RTN","RGRSWPT",44,0)
 S TODAY=$$NOW^XLFDT\1
"RTN","RGRSWPT",45,0)
 S DIFF=$$FMDIFF^XLFDT(TODAY,LTD)
"RTN","RGRSWPT",46,0)
 ; if difference is > 1096 days or 3 years
"RTN","RGRSWPT",47,0)
 I DIFF>1096 Q 0
"RTN","RGRSWPT",48,0)
 Q 1_"^"_LTD
"RTN","RGRSZZPT")
0^43^B1077869
"RTN","RGRSZZPT",1,0)
RGRSZZPT ;ALB/RJS-UTILITY FOR CIRN ;4/11/96
"RTN","RGRSZZPT",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGRSZZPT",3,0)
 ;
"RTN","RGRSZZPT",4,0)
SKIP(SILENT,ARRAY) ;
"RTN","RGRSZZPT",5,0)
 ;Pass Silent=1 if you want this call to be silent
"RTN","RGRSZZPT",6,0)
 S SILENT=$G(SILENT)
"RTN","RGRSZZPT",7,0)
 I $G(@ARRAY@(.01))=""!($G(@ARRAY@(.01))["@") D  Q 1
"RTN","RGRSZZPT",8,0)
 . I SILENT="" U IO(0) W !,"MISSING PATIENT NAME, CANNOT FILE"
"RTN","RGRSZZPT",9,0)
 I $G(@ARRAY@(.09))=""!($G(@ARRAY@(.09))["@") D  Q 1
"RTN","RGRSZZPT",10,0)
 . I SILENT="" U IO(0) W !,"MISSING PATIENT SSN, CANNOT FILE"
"RTN","RGRSZZPT",11,0)
 I $G(@ARRAY@(.03))=""!($G(@ARRAY@(.03))["@") D  Q 1
"RTN","RGRSZZPT",12,0)
 . I SILENT="" U IO(0) W !,"MISSING PATIENT DOB, CANNOT FILE"
"RTN","RGRSZZPT",13,0)
 I $G(@ARRAY@(991.01))=""!($G(@ARRAY@(991.01))["@") D  Q 1
"RTN","RGRSZZPT",14,0)
 . I SILENT="" U IO(0) W !,"MISSING ICN, CANNOT FILE"
"RTN","RGRSZZPT",15,0)
 Q 0
"RTN","RGVCCMR1")
0^152^B41493047
"RTN","RGVCCMR1",1,0)
RGVCCMR1 ;GAI/TMG-CIRN CMOR ACTIVITY SCORE GENERATOR (PART 1) ;1-15-1998 
"RTN","RGVCCMR1",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGVCCMR1",3,0)
EN ;  this routine contains entry points to start/restart the batch cmor
"RTN","RGVCCMR1",4,0)
 ;  score initialization, flag a running
"RTN","RGVCCMR1",5,0)
 ;  initialization to stop, calculate and file an activity score for an
"RTN","RGVCCMR1",6,0)
 ;  individual patient, and display the status of the cmor initialization 
"RTN","RGVCCMR1",7,0)
START ; entry point to start or restart the cmor activity score initialization
"RTN","RGVCCMR1",8,0)
 N RGY
"RTN","RGVCCMR1",9,0)
 S U="^"
"RTN","RGVCCMR1",10,0)
 S NODE=$G(^RGSITE(991.8,1,"CMOR"))
"RTN","RGVCCMR1",11,0)
 I '(+$P(NODE,U)) D  G QUIT
"RTN","RGVCCMR1",12,0)
 .W !!,"This is the initial run of the CIRN CMOR patient activity score generator."
"RTN","RGVCCMR1",13,0)
 .S RUNTYPE="I",RGDFN=0 D TASK
"RTN","RGVCCMR1",14,0)
 S STATUS=$P(NODE,U,7)
"RTN","RGVCCMR1",15,0)
 I STATUS="R" D  I RUN G QUIT
"RTN","RGVCCMR1",16,0)
 .S RUN=0
"RTN","RGVCCMR1",17,0)
 .S ZTSK=+$P(NODE,U,9)
"RTN","RGVCCMR1",18,0)
 .I 'ZTSK D INT Q
"RTN","RGVCCMR1",19,0)
 .D STAT^%ZTLOAD
"RTN","RGVCCMR1",20,0)
 .I ZTSK(1)=0!(ZTSK(1)=3)!(ZTSK(1)=4) D INT Q
"RTN","RGVCCMR1",21,0)
 .I ZTSK(1)=1 W !!,"CMOR Patient Activity Score queued task #",ZTSK,!,"is waiting to run.  Do not start another job at this time." S RUN=1 Q
"RTN","RGVCCMR1",22,0)
 .I ZTSK(1)=2 W !!,"CMOR Patient Activity Score queued task #",ZTSK,!,"is currently running.  Do not start another job at this time." S RUN=1 Q
"RTN","RGVCCMR1",23,0)
 .I ZTSK(1)=5 W !!,"CMOR Patient Activity Score queued task #",ZTSK,!,"was interrupted abnormally, possibly from a system error." D INT
"RTN","RGVCCMR1",24,0)
 I STATUS="SN" D
"RTN","RGVCCMR1",25,0)
 .S STOPDT=$P(NODE,U,3) I +STOPDT D
"RTN","RGVCCMR1",26,0)
 ..S STOPDT=$$FMTE^XLFDT(STOPDT,"1P")
"RTN","RGVCCMR1",27,0)
 ..W !!,"The CIRN CMOR patient activity score generator",!,"completed successfully on ",STOPDT,"."
"RTN","RGVCCMR1",28,0)
 .W !
"RTN","RGVCCMR1",29,0)
 .S DIR(0)="Y",DIR("A")="Would you like to reset all patient activity scores",DIR("B")="N" D ^DIR S RGY=Y
"RTN","RGVCCMR1",30,0)
 .I RGY=1 S DIR(0)="Y",DIR("A")="This will take quite a while.  Are you sure",DIR("B")="N" D ^DIR S RGY=Y
"RTN","RGVCCMR1",31,0)
 .I RGY=1 S RUNTYPE="R",RGDFN=0 D TASK
"RTN","RGVCCMR1",32,0)
 I STATUS="SM"!(STATUS="INT") D 
"RTN","RGVCCMR1",33,0)
 .S STOPDT=$P(NODE,U,3) D
"RTN","RGVCCMR1",34,0)
 ..I +STOPDT S STOPDT=$$FMTE^XLFDT(STOPDT,"1P")
"RTN","RGVCCMR1",35,0)
 ..W !!,"The CIRN CMOR patient activity score generator was "
"RTN","RGVCCMR1",36,0)
 ..W:STATUS="SM" ! W $S(STATUS="SM":"STOPPED MANUALLY",1:"INTERRUPTED ABNORMALLY.") I STATUS="SM" W " on ",STOPDT,"."
"RTN","RGVCCMR1",37,0)
 .I +$P(NODE,U) D
"RTN","RGVCCMR1",38,0)
 ..S LASTDFN=$P(NODE,U),LASTPT=$P($G(^DPT(+LASTDFN,0)),U),LASTSSN=$P(^(0),U,9)
"RTN","RGVCCMR1",39,0)
 ..W !,"The last patient processed was ",LASTPT,"   SSN: ",LASTSSN,!?31,"[RECORD# ",LASTDFN,"]"
"RTN","RGVCCMR1",40,0)
 .W ! S DIR(0)="Y",DIR("A")="Would you like to start with this patient and continue",DIR("B")="N" D ^DIR S RGY=Y
"RTN","RGVCCMR1",41,0)
 .W ! I RGY=1 D
"RTN","RGVCCMR1",42,0)
 ..S DIR(0)="Y",DIR("A")="This will take quite a while.  Are you sure"
"RTN","RGVCCMR1",43,0)
 ..S DIR("B")="N" D ^DIR I Y=1 S RUNTYPE="RS",RGDFN=LASTDFN D TASK
"RTN","RGVCCMR1",44,0)
 .W ! I RGY=0 D
"RTN","RGVCCMR1",45,0)
 ..S DIR(0)="Y",DIR("A")="Would you like to rerun the CMOR calculation for all patients"
"RTN","RGVCCMR1",46,0)
 ..S DIR("B")="N" D ^DIR I Y=1 D
"RTN","RGVCCMR1",47,0)
 ...W ! S DIR(0)="Y",DIR("A")="This will take quite a while.  Are you sure",DIR("B")="N" D ^DIR I Y=1 S RUNTYPE="RS",RGDFN=0 D TASK
"RTN","RGVCCMR1",48,0)
 G QUIT
"RTN","RGVCCMR1",49,0)
STOP ;  entry point to flag a running cmor score initialization to stop
"RTN","RGVCCMR1",50,0)
 S U="^"
"RTN","RGVCCMR1",51,0)
 S NODE=$G(^RGSITE(991.8,1,"CMOR"))
"RTN","RGVCCMR1",52,0)
 I $P(NODE,U,7)'="R" W !,"The CIRN CMOR activity score generation is NOT running." G QUIT
"RTN","RGVCCMR1",53,0)
 W !,"This option will stop the CIRN CMOR patient activity score generation"
"RTN","RGVCCMR1",54,0)
 W !,"after it has completed calculating and filing the score for the current"
"RTN","RGVCCMR1",55,0)
 W !,"patient."
"RTN","RGVCCMR1",56,0)
 W ! S DIR("A")="Are you sure you want to do this",DIR("B")="N",DIR(0)="Y" D ^DIR K DIR S RGY=Y
"RTN","RGVCCMR1",57,0)
 W ! S DIR("A")="Stop patient activity score generation after the current patient",DIR("B")="N",DIR(0)="Y" D ^DIR S RGY=Y
"RTN","RGVCCMR1",58,0)
 ;I RGY=1 S DA=1,DIE="^RGSITE(991.8,",DR="21////Y;24////SM" D ^DIE
"RTN","RGVCCMR1",59,0)
 I RGY=1 D
"RTN","RGVCCMR1",60,0)
 .S $P(^RGSITE(991.8,1,"CMOR"),U,4)="Y"
"RTN","RGVCCMR1",61,0)
 .W !!,"CIRN CMOR patient activity generation is flagged to stop after"
"RTN","RGVCCMR1",62,0)
 .W !,"it has completed the current patient.  This may take a short time."
"RTN","RGVCCMR1",63,0)
 .W !,"Please check the status later."
"RTN","RGVCCMR1",64,0)
 G QUIT
"RTN","RGVCCMR1",65,0)
INDIV ;  entry point to allow a cmor score for an individual patient to be
"RTN","RGVCCMR1",66,0)
 ;  calculated and filed
"RTN","RGVCCMR1",67,0)
 N MNODE
"RTN","RGVCCMR1",68,0)
 S U="^"
"RTN","RGVCCMR1",69,0)
 S DIC="^DPT(",DIC(0)="AEQMNZ" D ^DIC K DIC Q:+Y<0  S RGDFN=+Y
"RTN","RGVCCMR1",70,0)
 S PTNAM=$P(Y(0),"^"),SSN=$P(Y(0),"^",9),FILE=1
"RTN","RGVCCMR1",71,0)
 S MNODE=$$MPINODE^MPIFAPI(RGDFN)
"RTN","RGVCCMR1",72,0)
 I $P($G(MNODE),U,7)'="" D
"RTN","RGVCCMR1",73,0)
 .S FILE=0
"RTN","RGVCCMR1",74,0)
 .S SCOREDT=$$FMTE^XLFDT($P(MNODE,U,7),"1P")
"RTN","RGVCCMR1",75,0)
 .S CURSCORE=$P(MNODE,U,6) W !!,"This patient has an existing CMOR score of ",+CURSCORE," calculated on ",SCOREDT,".",!
"RTN","RGVCCMR1",76,0)
 .S DIR(0)="Y",DIR("A")="Do you want to calculate and file a new score for this patient",DIR("B")="NO" D ^DIR I Y=1 S FILE=1
"RTN","RGVCCMR1",77,0)
 I FILE=1 D
"RTN","RGVCCMR1",78,0)
 .W !!,"Working.  Please standby..." S FILEFLG=0 D CALC^RGVCCMR2
"RTN","RGVCCMR1",79,0)
 .I 'FILEFLG W !!,"No Patient Activity in the Past Three Years - No Score Filed!" Q
"RTN","RGVCCMR1",80,0)
 .W !!,"CMOR Activity Score: ",SCORE," filed for ",PTNAM,"  SSN: ",SSN,"."
"RTN","RGVCCMR1",81,0)
 G QUIT
"RTN","RGVCCMR1",82,0)
DISPLAY ;  displays the status of the background cmor score initialization
"RTN","RGVCCMR1",83,0)
 W !,"The CIRN CMOR Activity Score Generator",!
"RTN","RGVCCMR1",84,0)
 W !,"There are ",$P(^DPT(0),U,4)," records in your PATIENT file."
"RTN","RGVCCMR1",85,0)
 W !,"The last record number is ",$P(^DPT(0),U,3),"."
"RTN","RGVCCMR1",86,0)
 I $P($G(^RGSITE(991.8,1,"CMOR")),U)'="" D CHKSTAT
"RTN","RGVCCMR1",87,0)
 I $P($G(^RGSITE(991.8,1,"CMOR")),U)="" D
"RTN","RGVCCMR1",88,0)
 . W !,"The CMOR Calculation has NEVER been run on your system."
"RTN","RGVCCMR1",89,0)
 G QUIT
"RTN","RGVCCMR1",90,0)
CHKSTAT S NODE=$G(^RGSITE(991.8,1,"CMOR"))
"RTN","RGVCCMR1",91,0)
 S PTNAM="-Unknown-",SSN="---"
"RTN","RGVCCMR1",92,0)
 S RGDFN=+NODE I RGDFN,$D(^DPT(RGDFN,0)) D
"RTN","RGVCCMR1",93,0)
 .S PTNAM=$P(^(0),U),SSN=$P(^(0),U,9)
"RTN","RGVCCMR1",94,0)
 S OSTARTED="UNSPECIFIED" I $P(NODE,U,2)'="" D
"RTN","RGVCCMR1",95,0)
 .S OSTARTED=$$FMTE^XLFDT($P(NODE,U,2),"1P")
"RTN","RGVCCMR1",96,0)
 S OSTOPPED="UNSPECIFIED" I $P(NODE,U,3)'="" D
"RTN","RGVCCMR1",97,0)
 .S OSTOPPED=$$FMTE^XLFDT($P(NODE,U,3),"1P")
"RTN","RGVCCMR1",98,0)
 S ORESTART=$G(^XTMP("RGVCCMR","@@@@","RESTARTED"))
"RTN","RGVCCMR1",99,0)
 I +ORESTART S ORESTART=$$FMTE^XLFDT(ORESTART,"1P")
"RTN","RGVCCMR1",100,0)
 S ODFNCT="----"
"RTN","RGVCCMR1",101,0)
 I $D(^XTMP("RGVCCMR","@@@@","DFNCOUNT")) S ODFNCT=^XTMP("RGVCCMR","@@@@","DFNCOUNT")
"RTN","RGVCCMR1",102,0)
STATUS S ST=$P(NODE,U,7)
"RTN","RGVCCMR1",103,0)
 ;if status is RUNNING, check to see if task errored out
"RTN","RGVCCMR1",104,0)
 I ST="R" D
"RTN","RGVCCMR1",105,0)
 .S ZTSK=$P(NODE,U,9) I $D(ZTSK) D
"RTN","RGVCCMR1",106,0)
 ..D STAT^%ZTLOAD
"RTN","RGVCCMR1",107,0)
 ..I ZTSK(1)=5 D INT S ST="INT"
"RTN","RGVCCMR1",108,0)
 S STATUS=$S(ST="R":"RUNNING.",ST="SM":"STOPPED MANUALLY",ST="SN":"SUCCESSFULLY COMPLETED",ST="INT":"INTERRUPTED ABNORMALLY.",1:"- NO STATUS LISTED -")
"RTN","RGVCCMR1",109,0)
 ;S PERCOMP=((ODFNCT/$P(^DPT(0),U,4))*100),PERCOMP=$P(PERCOMP,".")_"."_$E($P(PERCOMP,".",2),1,2)
"RTN","RGVCCMR1",110,0)
 W !,"Last Patient Processed: ",PTNAM,"   SSN: ",SSN,"   [RECORD# ",RGDFN,"]"
"RTN","RGVCCMR1",111,0)
 W !!,"The CMOR score initialization last started on ",OSTARTED,!
"RTN","RGVCCMR1",112,0)
 I ORESTART]"" W "was restarted on ",ORESTART," "
"RTN","RGVCCMR1",113,0)
 W "and has processed ",ODFNCT," records."
"RTN","RGVCCMR1",114,0)
 W !,"Status is:  ",STATUS I ST'="R"&(ST'="INT") W " on ",OSTOPPED,"."
"RTN","RGVCCMR1",115,0)
 G QUIT
"RTN","RGVCCMR1",116,0)
 ;
"RTN","RGVCCMR1",117,0)
INT ;Set status to INTERRUPTED for abnormally stopped jobs
"RTN","RGVCCMR1",118,0)
 S $P(^RGSITE(991.8,1,"CMOR"),"^",7)="INT"
"RTN","RGVCCMR1",119,0)
 S STATUS="INT"
"RTN","RGVCCMR1",120,0)
 Q
"RTN","RGVCCMR1",121,0)
TASK S ZTIO="",ZTRTN="^RGVCCMR2",ZTDESC="BACKGROUND CMOR SCORE CALCULATOR"
"RTN","RGVCCMR1",122,0)
 S (ZTSAVE("RUNTYPE"),ZTSAVE("RGDFN"))=""
"RTN","RGVCCMR1",123,0)
 ; change ztsave("*")="" to specific variables when done
"RTN","RGVCCMR1",124,0)
 D ^%ZTLOAD
"RTN","RGVCCMR1",125,0)
 I $D(ZTSK) W "   Task#, ",ZTSK," queued" S $P(^RGSITE(991.8,1,"CMOR"),U,9)=ZTSK
"RTN","RGVCCMR1",126,0)
 D ^%ZISC
"RTN","RGVCCMR1",127,0)
 Q
"RTN","RGVCCMR1",128,0)
QUIT K RGDFN,DIC,DIR,FILE,LASTDFN,LASTPT,LASTSSN,ODFNCT,ORESTART,OSTARTED
"RTN","RGVCCMR1",129,0)
 K OSTOPPED,PTNAM,RUNTYPE,SCORE,SSN,ST,STATUS,X,Y,%DT,ZTDESC,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","RGVCCMR1",130,0)
 K CURSCORE,SCOREDT,NODE,STOPDT,FILEFLG
"RTN","RGVCCMR1",131,0)
 Q
"RTN","RGVCCMR2")
0^153^B31191851
"RTN","RGVCCMR2",1,0)
RGVCCMR2 ;GAI/TMG,ALS-CIRN CMOR ACTIVITY SCORE GENERATOR (PART 2) ;10-6-1997
"RTN","RGVCCMR2",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGVCCMR2",3,0)
EN S U="^"
"RTN","RGVCCMR2",4,0)
 I '$D(RUNTYPE) I '$D(RGDFN) S RUNTYPE="I",RGDFN=0 K ^XTMP("RGVCCMR")
"RTN","RGVCCMR2",5,0)
 I RUNTYPE'="I",($G(RGDFN)'=0) D NOW^%DTC S ^XTMP("RGVCCMR","@@@@","RESTARTED")=% G BATCH
"RTN","RGVCCMR2",6,0)
 I RUNTYPE="I"!($G(RGDFN)=0) K ^XTMP("RGVCCMR")
"RTN","RGVCCMR2",7,0)
 D NOW^%DTC
"RTN","RGVCCMR2",8,0)
 ;set purge date of XTMP = 30 days
"RTN","RGVCCMR2",9,0)
 S ^XTMP("RGVCCMR",0)=$$FMADD^XLFDT($$NOW^XLFDT,30)_U_$$NOW^XLFDT_U_"CIRN CMOR CALCULATION DATA"
"RTN","RGVCCMR2",10,0)
BATCH I '$D(DT) S X="T",%DT="" D ^%DT S DT=Y
"RTN","RGVCCMR2",11,0)
 D NOW^%DTC
"RTN","RGVCCMR2",12,0)
 I $G(RGDFN)=0!(RUNTYPE="I") S ^XTMP("RGVCCMR","@@@@","STARTED")=%,$P(^RGSITE(991.8,1,"CMOR"),U,2)=%
"RTN","RGVCCMR2",13,0)
 S $P(^RGSITE(991.8,1,"CMOR"),U,8)=RUNTYPE
"RTN","RGVCCMR2",14,0)
 S:'$D(^XTMP("RGVCCMR","@@@@","BIG")) ^XTMP("RGVCCMR","@@@@","BIG")=0
"RTN","RGVCCMR2",15,0)
ALLPTS S ^XTMP("RGVCCMR","@@@@","SECTION")="ALL"
"RTN","RGVCCMR2",16,0)
 S $P(^RGSITE(991.8,1,"CMOR"),U,7)="R"
"RTN","RGVCCMR2",17,0)
 S:'$D(^XTMP("RGVCCMR","@@@@","DFNCOUNT")) ^XTMP("RGVCCMR","@@@@","DFNCOUNT")=0
"RTN","RGVCCMR2",18,0)
 F  S RGDFN=$O(^DPT(+RGDFN)) Q:+RGDFN'>0  I $D(^DPT(+RGDFN,0)) S DPT0=^(0) G:$P($G(^RGSITE(991.8,1,"CMOR")),U,4)="Y" STOP D
"RTN","RGVCCMR2",19,0)
 .S QUIT=0 D CKPT I QUIT Q
"RTN","RGVCCMR2",20,0)
 .S FILEFLG=0
"RTN","RGVCCMR2",21,0)
 .D CALC S ^XTMP("RGVCCMR","@@@@","CURR DFN")=RGDFN S $P(^RGSITE(991.8,1,"CMOR"),U)=RGDFN
"RTN","RGVCCMR2",22,0)
 .I FILEFLG=1 D
"RTN","RGVCCMR2",23,0)
 ..I SCORE>^XTMP("RGVCCMR","@@@@","BIG") S ^XTMP("RGVCCMR","@@@@","BIG")=SCORE
"RTN","RGVCCMR2",24,0)
 ..S RATING=SCORE\100 S:'$D(^XTMP("RGVCCMR","@@@@","RATING",RATING)) ^XTMP("RGVCCMR","@@@@","RATING",RATING)=0
"RTN","RGVCCMR2",25,0)
 ..S ^XTMP("RGVCCMR","@@@@","RATING",RATING)=^XTMP("RGVCCMR","@@@@","RATING",RATING)+1
"RTN","RGVCCMR2",26,0)
STOP I $P($G(^RGSITE(991.8,1,"CMOR")),U,4)="Y" S $P(^RGSITE(991.8,1,"CMOR"),U,7)="SM",$P(^RGSITE(991.8,1,"CMOR"),U,4)=""
"RTN","RGVCCMR2",27,0)
 E  S $P(^RGSITE(991.8,1,"CMOR"),U,7)="SN"
"RTN","RGVCCMR2",28,0)
 D NOW^%DTC
"RTN","RGVCCMR2",29,0)
 S ^XTMP("RGVCCMR","@@@@","STOPPED")=%
"RTN","RGVCCMR2",30,0)
 S $P(^RGSITE(991.8,1,"CMOR"),U,3)=%
"RTN","RGVCCMR2",31,0)
 D COUNT,KILL
"RTN","RGVCCMR2",32,0)
 Q
"RTN","RGVCCMR2",33,0)
CALC S SCORE=0,X="T-1065",%DT="" D ^%DT S STDT=Y,X="T",%DT="" D ^%DT
"RTN","RGVCCMR2",34,0)
 S APSTDT=Y,YR=$E(DT,1,3)
"RTN","RGVCCMR2",35,0)
 I '+$$ACTIVE^RGRSWPT(RGDFN) D  Q
"RTN","RGVCCMR2",36,0)
 .I '$$AUTH^FBUTL(RGDFN,"2961001") Q
"RTN","RGVCCMR2",37,0)
 .D FILE
"RTN","RGVCCMR2",38,0)
 I '$D(DT) D NOW^%DTC S DT=%\1
"RTN","RGVCCMR2",39,0)
OPT ;  outpatient visit section
"RTN","RGVCCMR2",40,0)
 ;  each visit valued as follows:    current fy = 30 pts.
"RTN","RGVCCMR2",41,0)
 ;                                           fy - 1 = 20 pts
"RTN","RGVCCMR2",42,0)
 ;                                           fy - 2 = 10 pts
"RTN","RGVCCMR2",43,0)
 ;  primary care visits (based on the PCCODE array) = 50 pts each in
"RTN","RGVCCMR2",44,0)
 ;  addition to the visit value
"RTN","RGVCCMR2",45,0)
 ;  XRCODE = ien of xray stop code  LRCODE = ien of lab stop code 
"RTN","RGVCCMR2",46,0)
 ;  encounters with a stop code for lab or xray are not counted to
"RTN","RGVCCMR2",47,0)
 ;  avoid duplication since lab & xray are counted separately 
"RTN","RGVCCMR2",48,0)
 ;  in the XR & LR sections
"RTN","RGVCCMR2",49,0)
 K PCCODE S NXPC=0 F  S NXPC=$O(^RGSITE(991.8,1,"PC",NXPC)) Q:+NXPC'>0  I $D(^DIC(40.7,+$P($G(^RGSITE(991.8,1,"PC",NXPC,0)),U),0)) S PCCODE($P($G(^RGSITE(991.8,1,"PC",NXPC,0)),U))=""
"RTN","RGVCCMR2",50,0)
 I '$D(PCCODE) S PCCODE=""
"RTN","RGVCCMR2",51,0)
 S XRCODE=0 I $D(^DIC(40.7,"C",105)) S XRCODE=$O(^DIC(40.7,"C",105,0))
"RTN","RGVCCMR2",52,0)
 S LRCODE=0 I $D(^DIC(40.7,"C",108)) S LRCODE=$O(^DIC(40.7,"C",108,0))
"RTN","RGVCCMR2",53,0)
 K VISIT S NXSCE=0 F  S NXSCE=$O(^SCE("C",+RGDFN,NXSCE)) Q:+NXSCE'>0  I $D(^SCE(+NXSCE,0)) S SCE0=^(0) D
"RTN","RGVCCMR2",54,0)
 .I $P(SCE0,U,3)=XRCODE!($P(SCE0,U,3))=LRCODE Q
"RTN","RGVCCMR2",55,0)
 .I $P(SCE0,U)>STDT I '$D(VISIT(+$P(SCE0,U)\1)) S VISIT(+$P(SCE0,U)\1)=30+(($E($P(SCE0,U),1,3)-YR)*10) S SCORE=SCORE+30+(($E($P(SCE0,U),1,3)-YR)*10)
"RTN","RGVCCMR2",56,0)
 .I $D(PCCODE(+$P(SCE0,U,3))) I '$D(VISIT($P(SCE0,U)\1)) S VISIT(+$P(SCE0,U)\1)=50 S SCORE=SCORE+50
"RTN","RGVCCMR2",57,0)
 .I $D(PCCODE(+$P(SCE0,U,3))) I $D(VISIT($P(SCE0,U)\1)) S VISIT(+$P(SCE0,U)\1)=VISIT(+$P(SCE0,U)\1)+50 S SCORE=SCORE+50
"RTN","RGVCCMR2",58,0)
ADM ;  past admission section
"RTN","RGVCCMR2",59,0)
 ;  each admission valued as follows:  current fy = 50 pts
"RTN","RGVCCMR2",60,0)
 ;                                             fy - 1 = 40 pts
"RTN","RGVCCMR2",61,0)
 ;                                             fy - 2 = 30 pts
"RTN","RGVCCMR2",62,0)
 K ADM S NXPTF=0 F  S NXPTF=$O(^DGPT("B",+RGDFN,NXPTF)) Q:+NXPTF'>0  I $D(^DGPT(NXPTF,0)) S PTF0=^(0) D
"RTN","RGVCCMR2",63,0)
 .I $P(PTF0,U,2)>STDT I '$D(ADM($P(PTF0,U,2)\1)) S ADM(+$P(PTF0,U,2)\1)=50+(($E($P(PTF0,U,2),1,3)-YR)*10) S SCORE=SCORE+50+(($E($P(PTF0,U,2),1,3)-YR)*10)
"RTN","RGVCCMR2",64,0)
 .I $D(ADM(+$P(PTF0,U,2)\1)) I $O(^DGPT(+NXPTF,"S",0)) S ADM($P(PTF0,U,2)\1)=ADM($P(PTF0,U,2)\1)+10 S SCORE=SCORE+10
"RTN","RGVCCMR2",65,0)
XRAY ; radiololgy section - each radiology exam valued at 20 pts
"RTN","RGVCCMR2",66,0)
 ;
"RTN","RGVCCMR2",67,0)
 S X="T-365",%DT="" D ^%DT S XRSTDT=Y
"RTN","RGVCCMR2",68,0)
 K XRAY S NXXR=0 F  S NXXR=$O(^RARPT("C",+RGDFN,NXXR)) Q:+NXXR'>0  I $D(^RARPT(+NXXR,0)),$P(^(0),U,3)>XRSTDT S RARPT0=^(0) D
"RTN","RGVCCMR2",69,0)
 .I '$D(XRAY($P(RARPT0,U,3)\1)) S XRAY($P(RARPT0,U,3)\1)=20 S SCORE=SCORE+20
"RTN","RGVCCMR2",70,0)
RX ;  prescription section 
"RTN","RGVCCMR2",71,0)
 ;
"RTN","RGVCCMR2",72,0)
 ;  currently active prescriptions valued at 20 pts
"RTN","RGVCCMR2",73,0)
 K RX,^TMP("PSOR",$J) S NXRX=0
"RTN","RGVCCMR2",74,0)
 ;check for version of Outpatient Pharmacy used
"RTN","RGVCCMR2",75,0)
 ;if under 7.0 use direct global access, else use api PSOORDER
"RTN","RGVCCMR2",76,0)
 S PSOVER=$$VERSION^XPDUTL("PSO")
"RTN","RGVCCMR2",77,0)
 S RXDT=$$FMADD^XLFDT(DT,-121) F  S RXDT=$O(^PS(55,RGDFN,"P","A",RXDT)) Q:RXDT'>0  S RXIEN=0 F  S RXIEN=$O(^PS(55,RGDFN,"P","A",RXDT,RXIEN)) Q:RXIEN'>0  D
"RTN","RGVCCMR2",78,0)
 . I PSOVER<7 DO  ;
"RTN","RGVCCMR2",79,0)
 .. I $D(^PSRX(+RXIEN,0)),$P(^(0),U,15)=0 S RX(NXRX)=20 S SCORE=SCORE+20
"RTN","RGVCCMR2",80,0)
 . I PSOVER'<7 D EN^PSOORDER(RGDFN,RXIEN) I $D(^TMP("PSOR",$J,RXIEN)) D
"RTN","RGVCCMR2",81,0)
 .. S RGRXST=$P($P(^TMP("PSOR",$J,RXIEN,0),"^",4),";") I RGRXST="A"!(RGRXST="S")!(RGRXST="H") S RX(NXRX)=20 K RGRXST S SCORE=SCORE+20
"RTN","RGVCCMR2",82,0)
 K ^TMP("PSOR",$J)
"RTN","RGVCCMR2",83,0)
LR ;  laboratory section
"RTN","RGVCCMR2",84,0)
 ;  "CH" = chemistry; "CY" = cytotology; "EM" = electron microscopy;
"RTN","RGVCCMR2",85,0)
 ;  "MI = microbiology; "SP" = surgical pathology
"RTN","RGVCCMR2",86,0)
 ; each lab test done in the past year is valued at 10 points
"RTN","RGVCCMR2",87,0)
 ;
"RTN","RGVCCMR2",88,0)
 S LRSCORE=0 I $D(^DPT(+RGDFN,"LR")) S LRDFN=^DPT(+RGDFN,"LR") I $D(^LR(+LRDFN)) S X="T-365",%DT="" D ^%DT S LRSTDT=Y-.0001 F TEST="CH","CY","EM","MI","SP" D
"RTN","RGVCCMR2",89,0)
 .S NXLR=0 F  S NXLR=$O(^LR(+LRDFN,TEST,NXLR)) Q:+NXLR'>0  I $D(^(NXLR,0)),$P(^(0),U)>LRSTDT S LRSCORE=LRSCORE+10
"RTN","RGVCCMR2",90,0)
 S SCORE=SCORE+LRSCORE
"RTN","RGVCCMR2",91,0)
FILE ;  file score & date calculated in appropriate locations in the
"RTN","RGVCCMR2",92,0)
 ;  PATIENT file 'MPI' node
"RTN","RGVCCMR2",93,0)
 ;  scores are filed even if zero
"RTN","RGVCCMR2",94,0)
 ;  FILEFLG variable used to illiminate unnecessary statistcal processing
"RTN","RGVCCMR2",95,0)
 S FILEFLG=1
"RTN","RGVCCMR2",96,0)
 S DIE="^DPT(",DA=RGDFN,DR="991.06///^S X=SCORE;991.07///TODAY" D ^DIE
"RTN","RGVCCMR2",97,0)
 I $D(^XTMP("RGVCCMR","@@@@","DFNCOUNT")) S ^XTMP("RGVCCMR","@@@@","DFNCOUNT")=^XTMP("RGVCCMR","@@@@","DFNCOUNT")+1
"RTN","RGVCCMR2",98,0)
 Q
"RTN","RGVCCMR2",99,0)
KILL K ADM,APSTDT,DA,DIE,RGDFN,DGS0,DPT0,DR,LRCODE,LRDFN,LRSCORE,LRSTDT
"RTN","RGVCCMR2",100,0)
 K NUM,NXLR,NXPTF,NXRX,NXSCE,NXXR,PCODE,PTF0,PTNAM
"RTN","RGVCCMR2",101,0)
 K QUIT,RARPT0,RATE,RATING,RX,RXIEN,SCE0,SCORE,SSN,STDT,TEST,VISIT,X
"RTN","RGVCCMR2",102,0)
 K XRAY,XRCODE,XRSTDT,Y,YR,%,%DT,NXPC,PSOVER,RUNTYPE,FILEFLG
"RTN","RGVCCMR2",103,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","RGVCCMR2",104,0)
 Q
"RTN","RGVCCMR2",105,0)
CKPT S PTNAM=$P(DPT0,U),SSN=$P(DPT0,U,9)
"RTN","RGVCCMR2",106,0)
 I PTNAM?1"ZZ".E S QUIT=1
"RTN","RGVCCMR2",107,0)
 I SSN?1"00000".E S QUIT=1
"RTN","RGVCCMR2",108,0)
 Q
"RTN","RGVCCMR2",109,0)
COUNT S ^XTMP("RGVCCMR","@@@@","RATING","TCOUNT")=0,RATE="" F  S RATE=$O(^XTMP("RGVCCMR","@@@@","RATING",RATE)) Q:RATE'?.N  D
"RTN","RGVCCMR2",110,0)
 .;.W !,RATE
"RTN","RGVCCMR2",111,0)
 .S ^XTMP("RGVCCMR","@@@@","RATING","TCOUNT")=^XTMP("RGVCCMR","@@@@","RATING","TCOUNT")+^XTMP("RGVCCMR","@@@@","RATING",RATE)
"RTN","RGVCCMR2",112,0)
 Q
"VER")
8.0^21.0
"^DD",991.8,991.8,0)
FIELD^^119^41
"^DD",991.8,991.8,0,"DDA")
N
"^DD",991.8,991.8,0,"DT")
2990104
"^DD",991.8,991.8,0,"IX","B",991.8,.01)

"^DD",991.8,991.8,0,"NM","CIRN SITE PARAMETER")

"^DD",991.8,991.8,0,"VRPK")
CLINICAL INFO RESOURCE NETWORK
"^DD",991.8,991.8,.01,0)
PARAMETER NUMBER^RNJ1,0^^0;1^K:+X'=X!(X>1)!(X<1)!(X?.E1"."1N.N) X
"^DD",991.8,991.8,.01,1,0)
^.1
"^DD",991.8,991.8,.01,1,1,0)
991.8^B
"^DD",991.8,991.8,.01,1,1,1)
S ^RGSITE(991.8,"B",$E(X,1,30),DA)=""
"^DD",991.8,991.8,.01,1,1,2)
K ^RGSITE(991.8,"B",$E(X,1,30),DA)
"^DD",991.8,991.8,.01,3)
Type a Number between 1 and 1, 0 Decimal Digits
"^DD",991.8,991.8,.01,21,0)
^^3^3^2980923^^^^
"^DD",991.8,991.8,.01,21,1,0)
Number assigned to given site parameter entry.  Entry number 1 is the
"^DD",991.8,991.8,.01,21,2,0)
only entry that should exist in this file.  CIRN does not support
"^DD",991.8,991.8,.01,21,3,0)
multiple site parameter entries for a single station.
"^DD",991.8,991.8,.01,"DT")
2960723
"^DD",991.8,991.8,.02,0)
CMOR REQUEST CHANGE^RS^0:MANUAL;1:AUTOMATIC;^0;2^Q
"^DD",991.8,991.8,.02,3)
Enter a '0' if the CMOR information will be manually reviewed or a '1' if it will automatically approved.
"^DD",991.8,991.8,.02,21,0)
^^3^3^2980826^
"^DD",991.8,991.8,.02,21,1,0)
Based on this field setting, any CIRN Master of Record (CMOR) change
"^DD",991.8,991.8,.02,21,2,0)
request received from another station can either be manually reviewed or
"^DD",991.8,991.8,.02,21,3,0)
automatically approved.
"^DD",991.8,991.8,.02,"DT")
2980414
"^DD",991.8,991.8,.03,0)
NEW REQUEST MAILGROUP^P3.8'^XMB(3.8,^0;3^Q
"^DD",991.8,991.8,.03,3)
Enter a Mailgroup that will receive new CMOR change requests from other station.
"^DD",991.8,991.8,.03,21,0)
^^3^3^2980922^^^
"^DD",991.8,991.8,.03,21,1,0)
If the CMOR Request Change parameter is set to manual, new CMOR change
"^DD",991.8,991.8,.03,21,2,0)
requests received will notify the mailgroup entered in this field.  This
"^DD",991.8,991.8,.03,21,3,0)
gives a means of prompting someone to review the new request.
"^DD",991.8,991.8,.03,"DT")
2971208
"^DD",991.8,991.8,11,0)
AUTO ACCEPT DEMOGRAPHICS^S^1:AUTO ACCEPT;0:NOT AUTO ACCEPT;^1;1^Q
"^DD",991.8,991.8,11,3)
Enter a '1' to allow automatic updating from non-CMOR sites or a '0' to not allow automatic updating from non-CMOR sites.
"^DD",991.8,991.8,11,21,0)
^^5^5^2990423^^^^
"^DD",991.8,991.8,11,21,1,0)
This field is the parameter that a site would set to determine if data
"^DD",991.8,991.8,11,21,2,0)
coming from another site, that is not the owner of the data, could be 
"^DD",991.8,991.8,11,21,3,0)
automatically uploaded.
"^DD",991.8,991.8,11,21,4,0)
If this field is not set, then the software will assume that all
"^DD",991.8,991.8,11,21,5,0)
incoming data can not be automatically uploaded.
"^DD",991.8,991.8,11,"DT")
2990423
"^DD",991.8,991.8,16,0)
STOP CIRN MESSAGING^RS^1:SEND MESSAGES;0:STOP MESSAGES;2:SUSPEND MESSAGES;^1;6^Q
"^DD",991.8,991.8,16,3)
Enter a '0' to stop CIRN messaging or '1' to start CIRN messaging or '2' to suspend CIRN messaging.
"^DD",991.8,991.8,16,21,0)
^^1^1^2990104^^^^
"^DD",991.8,991.8,16,21,1,0)
This field will instruct the software to allow CIRN messaging, stop it or suspend it.  
"^DD",991.8,991.8,16,"DT")
2990104
"^DD",991.8,991.8,17,0)
PRIMARY CARE CLINIC STOPS^991.817P^^PC;0
"^DD",991.8,991.8,17,21,0)
^^2^2^2980922^^^
"^DD",991.8,991.8,17,21,1,0)
All primary care Clinic Stops (Decision Support System (DSS) Identifiers).
"^DD",991.8,991.8,17,21,2,0)
Used in CMOR patient activity score calculations.
"^DD",991.8,991.8,18,0)
CMOR LAST PATIENT PROCESSED^P2'^DPT(^CMOR;1^Q
"^DD",991.8,991.8,18,3)
This field is used to identify the last patient processed through the sequential CMOR patient activity score process.
"^DD",991.8,991.8,18,21,0)
^^2^2^2980922^^
"^DD",991.8,991.8,18,21,1,0)
This field keeps track of the last sequential patient processed through
"^DD",991.8,991.8,18,21,2,0)
the CMOR patient activity score calculations process.
"^DD",991.8,991.8,18,"DT")
2970926
"^DD",991.8,991.8,19,0)
CMOR INIT STARTED DATE/TIME^D^^CMOR;2^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",991.8,991.8,19,3)
This field contains the initial start date/time of the CMOR score calculations.
"^DD",991.8,991.8,19,21,0)
^^2^2^2980922^^
"^DD",991.8,991.8,19,21,1,0)
This field contain the date/time that the Start/Restart CMOR Score 
"^DD",991.8,991.8,19,21,2,0)
Calculation option [RGCIRN CMOR START] was first run.
"^DD",991.8,991.8,19,"DT")
2980826
"^DD",991.8,991.8,20,0)
CMOR INIT STOPPED DATE/TIME^D^^CMOR;3^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",991.8,991.8,20,3)
This field contains the last time that the CMOR score calculations were stopped either manually or normally.
"^DD",991.8,991.8,20,21,0)
^^2^2^2980922^^
"^DD",991.8,991.8,20,21,1,0)
This field contain the date/time that the Stop CMOR Score Calculation
"^DD",991.8,991.8,20,21,2,0)
option [RGCIRN CMOR STOP] was last stopped either manually or normally.
"^DD",991.8,991.8,20,"DT")
2980826
"^DD",991.8,991.8,21,0)
CMOR INIT MANUAL STOP^S^Y:YES;^CMOR;4^Q
"^DD",991.8,991.8,21,3)
This field is used to manually stop the CMOR score calculations.
"^DD",991.8,991.8,21,21,0)
^^4^4^2980922^^^^
"^DD",991.8,991.8,21,21,1,0)
This field is used to stop the background task started by the
"^DD",991.8,991.8,21,21,2,0)
Start/Restart CMOR Score Calculation option [RGCIRN CMOR START].
"^DD",991.8,991.8,21,21,3,0)
This field is populated by the Stop CMOR Score Calculation option
"^DD",991.8,991.8,21,21,4,0)
[RGCIRN CMOR STOP].
"^DD",991.8,991.8,21,"DT")
2970926
"^DD",991.8,991.8,22,0)
CMOR DAILY START TIME^F^^CMOR;5^K:$L(X)>4!($L(X)<4)!'(X?4N) X
"^DD",991.8,991.8,22,1,0)
^.1^^0
"^DD",991.8,991.8,22,3)
Please enter the START TIME in 24 hour format (i.e. 0001 - 2359).
"^DD",991.8,991.8,22,21,0)
^^2^2^2980903^
"^DD",991.8,991.8,22,21,1,0)
This field identifies the daily start time in 24 hour format for the CMOR
"^DD",991.8,991.8,22,21,2,0)
activity score calculations.
"^DD",991.8,991.8,22,"DT")
2970926
"^DD",991.8,991.8,23,0)
CMOR DAILY STOP TIME^F^^CMOR;6^K:$L(X)>4!($L(X)<4)!'(X?4N) X
"^DD",991.8,991.8,23,3)
Please enter the STOP TIME in 24 hour format (i.e. 0001 - 2359).
"^DD",991.8,991.8,23,21,0)
^^2^2^2980903^
"^DD",991.8,991.8,23,21,1,0)
This field identifies the daily stop time in 24 hour format for the CMOR
"^DD",991.8,991.8,23,21,2,0)
activity score calculations.
"^DD",991.8,991.8,23,"DT")
2970926
"^DD",991.8,991.8,24,0)
CMOR INIT STATUS^S^R:RUNNING;SN:SUCCESSFULLY COMPLETED;SM:STOPPED MANUALLY;INT:INTERRUPTED ABNORMALLY;^CMOR;7^Q
"^DD",991.8,991.8,24,3)
This field contains the current status of the CMOR Score Calculation process.
"^DD",991.8,991.8,24,21,0)
^^2^2^2981105^^
"^DD",991.8,991.8,24,21,1,0)
This field contains the current status of the CMOR Score Calculations
"^DD",991.8,991.8,24,21,2,0)
process.
"^DD",991.8,991.8,24,"DT")
2981105
"^DD",991.8,991.8,25,0)
CMOR RUN TYPE^S^I:INITIAL RUN;R:RESET ALL;RS:RESTART FROM LAST CALCULATED;^CMOR;8^Q
"^DD",991.8,991.8,25,21,0)
^^3^3^2980922^^
"^DD",991.8,991.8,25,21,1,0)
This field contains the current type of CMOR Score Calculation run.  
"^DD",991.8,991.8,25,21,2,0)
This field is used by the Start/Restart CMOR Score Calculation option
"^DD",991.8,991.8,25,21,3,0)
[RGCIRN CMOR START] to identify a starting point.
"^DD",991.8,991.8,25,"DT")
2970926
"^DD",991.8,991.8,26,0)
CMOR LAST TASK#^NJ9,0^^CMOR;9^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",991.8,991.8,26,3)
This field contains the task number of the CMOR Score Calculation task.
"^DD",991.8,991.8,26,21,0)
^^1^1^2980827^
"^DD",991.8,991.8,26,21,1,0)
This field contains the task number of the CMOR Score Calculation process.
"^DD",991.8,991.8,26,"DT")
2971003
"^DD",991.8,991.8,30,0)
CMOR COMP LAST PATIENT^P2'^DPT(^COMP;1^Q
"^DD",991.8,991.8,30,3)
Patient last processed with CMOR Comparison.
"^DD",991.8,991.8,30,21,0)
^^2^2^2980827^
"^DD",991.8,991.8,30,21,1,0)
This patient was the last processed patient in the CMOR Comparison
"^DD",991.8,991.8,30,21,2,0)
process.
"^DD",991.8,991.8,30,"DT")
2980220
"^DD",991.8,991.8,31,0)
CMOR COMP STARTED DATE/TIME^D^^COMP;2^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",991.8,991.8,31,3)
Date/time this process started to run.
"^DD",991.8,991.8,31,21,0)
^^1^1^2980827^
"^DD",991.8,991.8,31,21,1,0)
This is the date/time the CMOR Comparison process started.
"^DD",991.8,991.8,31,"DT")
2980220
"^DD",991.8,991.8,32,0)
CMOR COMP STOPPED DATE/TIME^D^^COMP;3^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",991.8,991.8,32,3)
Date/time this process was stopped.
"^DD",991.8,991.8,32,21,0)
^^2^2^2980827^^
"^DD",991.8,991.8,32,21,1,0)
When the CMOR Comparison stopped, (either naturally or manually) a time is
"^DD",991.8,991.8,32,21,2,0)
logged in this field for record.
"^DD",991.8,991.8,32,"DT")
2980220
"^DD",991.8,991.8,33,0)
CMOR COMP STATUS^S^R:RUNNING;MS:MANUALLY STOPPED;C:COMPLETED;^COMP;4^Q
"^DD",991.8,991.8,33,3)
Status of CMOR Comparison process.
"^DD",991.8,991.8,33,21,0)
^^1^1^2980827^^
"^DD",991.8,991.8,33,21,1,0)
This is the status of the CMOR Comparison process in your system.
"^DD",991.8,991.8,33,"DT")
2980220
"^DD",991.8,991.8,34,0)
CMOR COMP LAST TASK #^NJ10,0^^COMP;5^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",991.8,991.8,34,3)
This field contains the task number of the last CMOR Comparison task.
"^DD",991.8,991.8,34,21,0)
^^1^1^2980827^^
"^DD",991.8,991.8,34,21,1,0)
This is the task number that the CMOR Comparison ran on last.
"^DD",991.8,991.8,34,"DT")
2980220
"^DD",991.8,991.8,35,0)
CMOR COMP FLAG^S^Y:YES;N:NO;^COMP;6^Q
"^DD",991.8,991.8,35,3)
Request to stop the compare process.
"^DD",991.8,991.8,35,21,0)
^^1^1^2980827^^
"^DD",991.8,991.8,35,21,1,0)
This flag is for the user to request the CMOR Comparison process to stop. 
"^DD",991.8,991.8,35,"DT")
2980220
"^DD",991.8,991.8,100,0)
REL INIT STATUS^S^R:RUNNING;SN:STOPPED NORMALLY;SM:STOPPED MANUALLY;^PRE;1^Q
"^DD",991.8,991.8,100,3)
This field contain the current status of the patient religion process.
"^DD",991.8,991.8,100,21,0)
^^1^1^2980903^
"^DD",991.8,991.8,100,21,1,0)
This field contains the current status of the religion status process.
"^DD",991.8,991.8,100,"DT")
2971202
"^DD",991.8,991.8,101,0)
REL INIT START^D^^PRE;2^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",991.8,991.8,101,3)
This field contains the initial start date/time of the patient religion status process.
"^DD",991.8,991.8,101,21,0)
^^2^2^2980904^^
"^DD",991.8,991.8,101,21,1,0)
This field contains the initial start date/time of the patient religion
"^DD",991.8,991.8,101,21,2,0)
status process.
"^DD",991.8,991.8,101,"DT")
2971202
"^DD",991.8,991.8,102,0)
REL INIT STOP^D^^PRE;3^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",991.8,991.8,102,3)
This field is populated with date/time that the religion status process ended.
"^DD",991.8,991.8,102,21,0)
^^2^2^2980904^
"^DD",991.8,991.8,102,21,1,0)
This field contains the date/time that the patient religion status
"^DD",991.8,991.8,102,21,2,0)
process stopped.
"^DD",991.8,991.8,102,"DT")
2971202
"^DD",991.8,991.8,103,0)
REL INIT LAST^P2'^DPT(^PRE;4^Q
"^DD",991.8,991.8,103,3)
This field contains the last patient processed by the religion status process.
"^DD",991.8,991.8,103,21,0)
^^2^2^2980903^
"^DD",991.8,991.8,103,21,1,0)
This field contains the last patient processed by the religion status
"^DD",991.8,991.8,103,21,2,0)
process.
"^DD",991.8,991.8,103,"DT")
2971202
"^DD",991.8,991.8,104,0)
REL INIT USER^P200'^VA(200,^PRE;5^Q
"^DD",991.8,991.8,104,3)
This field identifies the person who ran the initial religion status process.
"^DD",991.8,991.8,104,21,0)
^^2^2^2980904^
"^DD",991.8,991.8,104,21,1,0)
This field contains the person who ran the initial religion status
"^DD",991.8,991.8,104,21,2,0)
process.
"^DD",991.8,991.8,104,"DT")
2971202
"^DD",991.8,991.8,105,0)
MAR INIT STATUS^S^R:RUNNING;SN:STOPPED NORMALLY;SM:STOPPED MANUALLY;^PRE;6^Q
"^DD",991.8,991.8,105,3)
This field is populated with the status of the initial marital status process.
"^DD",991.8,991.8,105,21,0)
^^2^2^2980904^
"^DD",991.8,991.8,105,21,1,0)
This field contains the status of the marital status initialization
"^DD",991.8,991.8,105,21,2,0)
process.
"^DD",991.8,991.8,105,"DT")
2971202
"^DD",991.8,991.8,106,0)
MAR INIT START^D^^PRE;7^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",991.8,991.8,106,3)
This field is populated with the exact starting date/time of the marital status initialization process.
"^DD",991.8,991.8,106,21,0)
^^2^2^2980904^
"^DD",991.8,991.8,106,21,1,0)
This field contains the starting date/time of the marital status
"^DD",991.8,991.8,106,21,2,0)
initialization process.
"^DD",991.8,991.8,106,"DT")
2971202
"^DD",991.8,991.8,107,0)
MAR INIT STOP^D^^PRE;8^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",991.8,991.8,107,3)
This field is populated with the date/time that the marital status initialization process stopped.
"^DD",991.8,991.8,107,21,0)
^^2^2^2980904^
"^DD",991.8,991.8,107,21,1,0)
This field contains the date/time that the marital status initialization
"^DD",991.8,991.8,107,21,2,0)
process stopped.
"^DD",991.8,991.8,107,"DT")
2971202
"^DD",991.8,991.8,108,0)
MAR INIT LAST^P2'^DPT(^PRE;9^Q
"^DD",991.8,991.8,108,3)
This field is populated with the patient processed by the marital status process.
"^DD",991.8,991.8,108,21,0)
^^2^2^2980904^
"^DD",991.8,991.8,108,21,1,0)
This field contains the last PATIENT file (#2) entry that was processed by
"^DD",991.8,991.8,108,21,2,0)
the marital status initialization process.
"^DD",991.8,991.8,108,"DT")
2971202
"^DD",991.8,991.8,109,0)
MAR INIT USER^P200'^VA(200,^PRE;10^Q
"^DD",991.8,991.8,109,3)
This field is populated with the user the ran the marital status initialization process.
"^DD",991.8,991.8,109,21,0)
^^2^2^2980904^
"^DD",991.8,991.8,109,21,1,0)
This field contains the user that ran the marital status initialization
"^DD",991.8,991.8,109,21,2,0)
process.
"^DD",991.8,991.8,109,"DT")
2971202
"^DD",991.8,991.8,110,0)
ELIG INIT STATUS^S^R:RUNNING;SN:STOPPED NORMALLY;SM:STOPPED MANUALLY;^PRE1;1^Q
"^DD",991.8,991.8,110,3)
This field is populated with the current status of the patient eligibility process.
"^DD",991.8,991.8,110,21,0)
^^2^2^2980904^
"^DD",991.8,991.8,110,21,1,0)
This field contains the status of the patient eligibility initialization
"^DD",991.8,991.8,110,21,2,0)
process.
"^DD",991.8,991.8,110,"DT")
2971202
"^DD",991.8,991.8,111,0)
ELIG INIT START^D^^PRE1;2^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",991.8,991.8,111,3)
This field is populated with the start date/time of the patient eligibility initialization process.
"^DD",991.8,991.8,111,21,0)
^^2^2^2980904^
"^DD",991.8,991.8,111,21,1,0)
This field contains the date/time that the patient eligibility
"^DD",991.8,991.8,111,21,2,0)
initialization process was started.
"^DD",991.8,991.8,111,"DT")
2971202
"^DD",991.8,991.8,112,0)
ELIG INIT STOP^D^^PRE1;3^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",991.8,991.8,112,3)
This field is populated with the date/time that the patient eligibility initialization process was stopped.
"^DD",991.8,991.8,112,21,0)
^^2^2^2980904^
"^DD",991.8,991.8,112,21,1,0)
This field contains the date/time that the patient eligibility
"^DD",991.8,991.8,112,21,2,0)
initialization process was stopped.
"^DD",991.8,991.8,112,"DT")
2971202
"^DD",991.8,991.8,113,0)
ELIG INIT LAST^P2'^DPT(^PRE1;4^Q
"^DD",991.8,991.8,113,3)
This field is populated with the last patient processed by the patient eligibility process.
"^DD",991.8,991.8,113,21,0)
^^2^2^2980904^
"^DD",991.8,991.8,113,21,1,0)
This field contains the last PATIENT file (#2) entry processed by the
"^DD",991.8,991.8,113,21,2,0)
patient eligibility initialization process.
"^DD",991.8,991.8,113,"DT")
2971202
"^DD",991.8,991.8,114,0)
ELIG INIT USER^P200'^VA(200,^PRE1;5^Q
"^DD",991.8,991.8,114,3)
This field is populated with the user that ran the patient eligibility process.
"^DD",991.8,991.8,114,21,0)
^^2^2^2980904^
"^DD",991.8,991.8,114,21,1,0)
This field contains the user that ran the patient eligibility
"^DD",991.8,991.8,114,21,2,0)
initialization process.
"^DD",991.8,991.8,114,"DT")
2971202
"^DD",991.8,991.8,115,0)
PSEUDO INIT STATUS^S^R:RUNNING;SN:STOPPED NORMALLY;SM:STOPPED MANUALLY;^PRE1;6^Q
"^DD",991.8,991.8,115,3)
This field is populated with the current status of the Pseudo-SSN process.
"^DD",991.8,991.8,115,21,0)
^^1^1^2980904^
"^DD",991.8,991.8,115,21,1,0)
This field contains the status of the Pseudo-SSN initialization process.
"^DD",991.8,991.8,115,"DT")
2971202
"^DD",991.8,991.8,116,0)
PSEUDO INIT START^D^^PRE1;7^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",991.8,991.8,116,3)
This field is populated with the date/time that the Pseudo-SSN process was started.
"^DD",991.8,991.8,116,21,0)
^^2^2^2980904^
"^DD",991.8,991.8,116,21,1,0)
This field contains the start date/time of the Pseudo-SSN initialization
"^DD",991.8,991.8,116,21,2,0)
process.
"^DD",991.8,991.8,116,"DT")
2971202
"^DD",991.8,991.8,117,0)
PSEUDO INIT STOP^D^^PRE1;8^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",991.8,991.8,117,3)
This field is populated with the date/time that the Pseudo-SSN process was stopped.
"^DD",991.8,991.8,117,21,0)
^^2^2^2980904^
"^DD",991.8,991.8,117,21,1,0)
This field contains the date/time that the Pseudo-SSN initialization
"^DD",991.8,991.8,117,21,2,0)
process was stopped.
"^DD",991.8,991.8,117,"DT")
2971202
"^DD",991.8,991.8,118,0)
PSEUDO INIT LAST^P2'^DPT(^PRE1;9^Q
"^DD",991.8,991.8,118,3)
This field is populated with the last patient processed by the Pseudo-SSN process.
"^DD",991.8,991.8,118,21,0)
^^2^2^2980904^
"^DD",991.8,991.8,118,21,1,0)
This field contains the last PATIENT file (#2) entry that was processed by
"^DD",991.8,991.8,118,21,2,0)
the Pseudo-SSN initialization process.
"^DD",991.8,991.8,118,"DT")
2971202
"^DD",991.8,991.8,119,0)
PSEUDO INIT USER^P200'^VA(200,^PRE1;10^Q
"^DD",991.8,991.8,119,3)
This field is populated with the user who ran the Pseudo-SSN process.
"^DD",991.8,991.8,119,21,0)
^^2^2^2980904^
"^DD",991.8,991.8,119,21,1,0)
This field contains the user that ran the Pseudo-SSN initialization
"^DD",991.8,991.8,119,21,2,0)
process.
"^DD",991.8,991.8,119,"DT")
2971202
"^DD",991.8,991.817,0)
PRIMARY CARE CLINIC STOPS SUB-FIELD^^2^3
"^DD",991.8,991.817,0,"DT")
2970926
"^DD",991.8,991.817,0,"IX","B",991.817,.01)

"^DD",991.8,991.817,0,"NM","PRIMARY CARE CLINIC STOPS")

"^DD",991.8,991.817,0,"UP")
991.8
"^DD",991.8,991.817,.01,0)
PRIMARY CARE CLINIC STOPS^MP40.7'^DIC(40.7,^0;1^Q
"^DD",991.8,991.817,.01,1,0)
^.1
"^DD",991.8,991.817,.01,1,1,0)
991.817^B
"^DD",991.8,991.817,.01,1,1,1)
S ^RGSITE(991.8,DA(1),"PC","B",$E(X,1,30),DA)=""
"^DD",991.8,991.817,.01,1,1,2)
K ^RGSITE(991.8,DA(1),"PC","B",$E(X,1,30),DA)
"^DD",991.8,991.817,.01,3)
Identify the Clinic Stops to use for calculating the CMOR activity scores.
"^DD",991.8,991.817,.01,21,0)
^^3^3^2980826^
"^DD",991.8,991.817,.01,21,1,0)
This field contains the primary care Clinic Stops or Decision Support
"^DD",991.8,991.817,.01,21,2,0)
System (DSS) identifiers used to calculate the CMOR patient activity
"^DD",991.8,991.817,.01,21,3,0)
scores.
"^DD",991.8,991.817,.01,"DT")
2970926
"^DD",991.8,991.817,1,0)
ACTIVATION DATE^D^^0;2^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",991.8,991.817,1,3)
Enter the date/time to activate this clinic stop.
"^DD",991.8,991.817,1,21,0)
^^2^2^2980826^
"^DD",991.8,991.817,1,21,1,0)
This field contains the activation date of the clinic stop used in
"^DD",991.8,991.817,1,21,2,0)
calculating the CMOR patient activity scores.
"^DD",991.8,991.817,1,"DT")
2970926
"^DD",991.8,991.817,2,0)
INACTIVE DATE^D^^0;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",991.8,991.817,2,3)
Enter the date/time to inactive the use of this clinic stop for calculating CMOR scores.
"^DD",991.8,991.817,2,21,0)
^^2^2^2980922^^
"^DD",991.8,991.817,2,21,1,0)
This field identifies the date/time that the clinic stop will be
"^DD",991.8,991.817,2,21,2,0)
inactivated for calculating CMOR patient activity scores.
"^DD",991.8,991.817,2,"DT")
2970926
"^DIC",991.8,991.8,0)
CIRN SITE PARAMETER^991.8
"^DIC",991.8,991.8,0,"GL")
^RGSITE(991.8,
"^DIC",991.8,991.8,"%D",0)
^^3^3^2990104^^^^
"^DIC",991.8,991.8,"%D",1,0)
File to store generic site parameters for the Clinical Information
"^DIC",991.8,991.8,"%D",2,0)
Resource Network (CIRN) package.  Only one entry (entry number 1) should
"^DIC",991.8,991.8,"%D",3,0)
exist in this file.
"^DIC",991.8,"B","CIRN SITE PARAMETER",991.8)

**INSTALL NAME**
CIRN MESSAGING COMPONENTS 1.0
"BLD",553,0)
CIRN MESSAGING COMPONENTS 1.0^^0^2990428^y
"BLD",553,1,0)
^^4^4^2990301^^
"BLD",553,1,1,0)
This build includes all components associated with the CIRN MESSAGING
"BLD",553,1,2,0)
SUPPORT build.  It must be installed just prior to the CIRN MESSAGING
"BLD",553,1,3,0)
SUPPORT build so that pointer references in the latter are correctly
"BLD",553,1,4,0)
resolved.
"BLD",553,4,0)
^9.64PA^^
"BLD",553,"INIT")
MC^RGPDPST
"BLD",553,"KRN",0)
^9.67PA^19^18
"BLD",553,"KRN",.4,0)
.4
"BLD",553,"KRN",.4,"NM",0)
^9.68A^1^1
"BLD",553,"KRN",.4,"NM",1,0)
RGEQ STAT    FILE #995.2^995.2^0
"BLD",553,"KRN",.4,"NM","B","RGEQ STAT    FILE #995.2",1)

"BLD",553,"KRN",.401,0)
.401
"BLD",553,"KRN",.401,"NM",0)
^9.68A^1^1
"BLD",553,"KRN",.401,"NM",1,0)
RGEQ STAT    FILE #995.2^995.2^0
"BLD",553,"KRN",.401,"NM","B","RGEQ STAT    FILE #995.2",1)

"BLD",553,"KRN",.402,0)
.402
"BLD",553,"KRN",.402,"NM",0)
^9.68A^2^2
"BLD",553,"KRN",.402,"NM",1,0)
RGEQ NEW EXCEPTION    FILE #995.1^995.1^0
"BLD",553,"KRN",.402,"NM",2,0)
RGEQ NEW STATISTIC    FILE #995.2^995.2^0
"BLD",553,"KRN",.402,"NM","B","RGEQ NEW EXCEPTION    FILE #995.1",1)

"BLD",553,"KRN",.402,"NM","B","RGEQ NEW STATISTIC    FILE #995.2",2)

"BLD",553,"KRN",.403,0)
.403
"BLD",553,"KRN",.5,0)
.5
"BLD",553,"KRN",.84,0)
.84
"BLD",553,"KRN",3.6,0)
3.6
"BLD",553,"KRN",3.8,0)
3.8
"BLD",553,"KRN",3.8,"NM",0)
^9.68A^^0
"BLD",553,"KRN",9.2,0)
9.2
"BLD",553,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",553,"KRN",9.8,0)
9.8
"BLD",553,"KRN",19,0)
19
"BLD",553,"KRN",19,"NM",0)
^9.68A^21^11
"BLD",553,"KRN",19,"NM",1,0)
RG ADMIN COORD MENU^^2
"BLD",553,"KRN",19,"NM",2,0)
RG IRM MENU^^2
"BLD",553,"KRN",19,"NM",4,0)
RG SUBSCRIBE^^0
"BLD",553,"KRN",19,"NM",5,0)
RG SUBSCRIPT STAT INQ^^0
"BLD",553,"KRN",19,"NM",16,0)
RGEQ AUTOSTART^^0
"BLD",553,"KRN",19,"NM",17,0)
RGEQ ERROR^^0
"BLD",553,"KRN",19,"NM",18,0)
RGEQ MGR^^0
"BLD",553,"KRN",19,"NM",19,0)
RGEQ START^^0
"BLD",553,"KRN",19,"NM",20,0)
RGEQ STATS^^0
"BLD",553,"KRN",19,"NM",21,0)
RGEQ STOP^^0
"BLD",553,"KRN",19,"NM",22,0)
RGHL EXCEPTION^^0
"BLD",553,"KRN",19,"NM","B","RG ADMIN COORD MENU",1)

"BLD",553,"KRN",19,"NM","B","RG IRM MENU",2)

"BLD",553,"KRN",19,"NM","B","RG SUBSCRIBE",4)

"BLD",553,"KRN",19,"NM","B","RG SUBSCRIPT STAT INQ",5)

"BLD",553,"KRN",19,"NM","B","RGEQ AUTOSTART",16)

"BLD",553,"KRN",19,"NM","B","RGEQ ERROR",17)

"BLD",553,"KRN",19,"NM","B","RGEQ MGR",18)

"BLD",553,"KRN",19,"NM","B","RGEQ START",19)

"BLD",553,"KRN",19,"NM","B","RGEQ STATS",20)

"BLD",553,"KRN",19,"NM","B","RGEQ STOP",21)

"BLD",553,"KRN",19,"NM","B","RGHL EXCEPTION",22)

"BLD",553,"KRN",19.1,0)
19.1
"BLD",553,"KRN",101,0)
101
"BLD",553,"KRN",101,"NM",0)
^9.68A^3^3
"BLD",553,"KRN",101,"NM",1,0)
RG PT SUBSCRIPTION RECEIVER^^0
"BLD",553,"KRN",101,"NM",2,0)
RG PT SUBSCRIPTION REQUEST^^0
"BLD",553,"KRN",101,"NM",3,0)
VAFC ADT-A04 SERVER^^3
"BLD",553,"KRN",101,"NM","B","RG PT SUBSCRIPTION RECEIVER",1)

"BLD",553,"KRN",101,"NM","B","RG PT SUBSCRIPTION REQUEST",2)

"BLD",553,"KRN",101,"NM","B","VAFC ADT-A04 SERVER",3)

"BLD",553,"KRN",409.61,0)
409.61
"BLD",553,"KRN",771,0)
771
"BLD",553,"KRN",771,"NM",0)
^9.68A^1^1
"BLD",553,"KRN",771,"NM",1,0)
RG SUBSCRIPTION^^0
"BLD",553,"KRN",771,"NM","B","RG SUBSCRIPTION",1)

"BLD",553,"KRN",869.2,0)
869.2
"BLD",553,"KRN",870,0)
870
"BLD",553,"KRN",8994,0)
8994
"BLD",553,"KRN","B",.4,.4)

"BLD",553,"KRN","B",.401,.401)

"BLD",553,"KRN","B",.402,.402)

"BLD",553,"KRN","B",.403,.403)

"BLD",553,"KRN","B",.5,.5)

"BLD",553,"KRN","B",.84,.84)

"BLD",553,"KRN","B",3.6,3.6)

"BLD",553,"KRN","B",3.8,3.8)

"BLD",553,"KRN","B",9.2,9.2)

"BLD",553,"KRN","B",9.8,9.8)

"BLD",553,"KRN","B",19,19)

"BLD",553,"KRN","B",19.1,19.1)

"BLD",553,"KRN","B",101,101)

"BLD",553,"KRN","B",409.61,409.61)

"BLD",553,"KRN","B",771,771)

"BLD",553,"KRN","B",869.2,869.2)

"BLD",553,"KRN","B",870,870)

"BLD",553,"KRN","B",8994,8994)

"BLD",553,"QUES",0)
^9.62^^
"BLD",553,"REQB",0)
^9.611^^
"INIT")
MC^RGPDPST
"KRN",.4,1034,-1)
0^1
"KRN",.4,1034,0)
RGEQ STAT^2980120.0928^@^995.2^^@^2990422
"KRN",.4,1034,"DCL","995.2^1.01")
&
"KRN",.4,1034,"DCL","995.2^1.02")
&
"KRN",.4,1034,"F",2)
.02;"EVENT"~1.01~1.02~
"KRN",.4,1034,"H")
CIRN EVENT
"KRN",.401,782,-1)
0^1
"KRN",.401,782,0)
RGEQ STAT^2960401.1255^@^995.2^^@^2990421
"KRN",.401,782,2,0)
^.4014^1^1
"KRN",.401,782,2,1,0)
995.2^.03^DATE^+^^^^^^1
"KRN",.401,782,2,1,"ASK")
1
"KRN",.401,782,2,1,"F")
2990400.99999^040199^Apr 1,1999
"KRN",.401,782,2,1,"GET")
S DISX(1)=$P($G(^RGSTAT(995.2,D0,0)),U,3)
"KRN",.401,782,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,782,2,1,"T")
z^
"KRN",.401,782,2,1,"TXT")
DATE not null
"KRN",.401,782,2,"B",995.2,1)

"KRN",.402,1556,-1)
0^1
"KRN",.402,1556,0)
RGEQ NEW EXCEPTION^2960307.0844^@^995.1^^@^2981111
"KRN",.402,1556,"DR",1,995.1)
.02///^S X="NOW";.03////^S X=TYPE;1////^S X=STUB;2////^S X=ERROR;
"KRN",.402,1557,-1)
0^2
"KRN",.402,1557,0)
RGEQ NEW STATISTIC^2960306.1425^@^995.2^^@^2990416
"KRN",.402,1557,"DR",1,995.2)
.02////^S X=TYPE;.03////^S X=DATE;
"KRN",19,5452,-1)
0^18
"KRN",19,5452,0)
RGEQ MGR^CIRN Event Queue Manager^^M^^^^^^^^CLINICAL INFO RESOURCE NETWORK^^1
"KRN",19,5452,1,0)
^^2^2^2990302^
"KRN",19,5452,1,1,0)
The CIRN Event Queue Manager [RGEQ MGR] menu is designed to manage 
"KRN",19,5452,1,2,0)
the background event queue processes.
"KRN",19,5452,10,0)
^19.01IP^5^4
"KRN",19,5452,10,1,0)
5453^^15
"KRN",19,5452,10,1,"^")
RGEQ ERROR
"KRN",19,5452,10,2,0)
5454^^10
"KRN",19,5452,10,2,"^")
RGEQ STOP
"KRN",19,5452,10,4,0)
5456^^20
"KRN",19,5452,10,4,"^")
RGEQ STATS
"KRN",19,5452,10,5,0)
5502^^5
"KRN",19,5452,10,5,"^")
RGEQ START
"KRN",19,5452,20)
D STATUS^RGEQDMN1
"KRN",19,5452,99)
57588,44229
"KRN",19,5452,"U")
CIRN EVENT QUEUE MANAGER
"KRN",19,5453,-1)
0^17
"KRN",19,5453,0)
RGEQ ERROR^Error Processing CIRN Event Queue^^R^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",19,5453,1,0)
^^5^5^2990302^^^
"KRN",19,5453,1,1,0)
When an event is being processed, under some conditions it may
"KRN",19,5453,1,2,0)
not process due to software or system errors.  These events are
"KRN",19,5453,1,3,0)
saved to be processed at a later time once the error condition is
"KRN",19,5453,1,4,0)
eliminated.  This option processes all events that did not complete
"KRN",19,5453,1,5,0)
due to an error condition.
"KRN",19,5453,25)
ERROR^RGEQERR
"KRN",19,5453,"U")
ERROR PROCESSING CIRN EVENT QU
"KRN",19,5454,-1)
0^21
"KRN",19,5454,0)
RGEQ STOP^Halt CIRN Event Queue^^R^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",19,5454,1,0)
^^4^4^2990302^^^
"KRN",19,5454,1,1,0)
This option allows the background event queue processing task started by
"KRN",19,5454,1,2,0)
the Start CIRN Event Queue [RGEQ START] option to be stopped.  The option
"KRN",19,5454,1,3,0)
can stop all CIRN data class processing queues or individual CIRN data
"KRN",19,5454,1,4,0)
class processing queues.
"KRN",19,5454,25)
STOP^RGEQDMN1
"KRN",19,5454,"U")
HALT CIRN EVENT QUEUE
"KRN",19,5456,-1)
0^20
"KRN",19,5456,0)
RGEQ STATS^CIRN Event Queue Class Statistics^^R^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",19,5456,1,0)
^^5^5^2990302^^^
"KRN",19,5456,1,1,0)
This option displays by date statistical information recorded in the CIRN
"KRN",19,5456,1,2,0)
EVENT STATISTICS file (#995.2).  The CIRN EVENT STATISTICS file (#995.2)
"KRN",19,5456,1,3,0)
holds information related to the type of event, date of the event and the
"KRN",19,5456,1,4,0)
number of events processed as well as the number of errors encountered
"KRN",19,5456,1,5,0)
while processing those events.
"KRN",19,5456,25)
STAT^RGEQRPT
"KRN",19,5456,"U")
CIRN EVENT QUEUE CLASS STATIST
"KRN",19,5482,-1)
0^22
"KRN",19,5482,0)
RGHL EXCEPTION^HL7 Exception Utility^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK^^1
"KRN",19,5482,1,0)
^^2^2^2990323^^^
"KRN",19,5482,1,1,0)
This option is used to view CIRN Health Level Seven (HL7) message
"KRN",19,5482,1,2,0)
exceptions logged in the CIRN HL7 EXCEPTION LOG file (#991.1).
"KRN",19,5482,20)
D ^RGED("","","","HL7EXC")
"KRN",19,5482,99)
56830,44650
"KRN",19,5482,"U")
HL7 EXCEPTION UTILITY
"KRN",19,5487,-1)
0^16
"KRN",19,5487,0)
RGEQ AUTOSTART^CIRN Event Queue Autostart^^R^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",19,5487,1,0)
^^3^3^2990302^^^
"KRN",19,5487,1,1,0)
This menu option is not designed for user interaction.  It is defined 
"KRN",19,5487,1,2,0)
to be called when the system is started-up.  This option starts the
"KRN",19,5487,1,3,0)
background event queue processor.
"KRN",19,5487,25)
AUTO^RGEQDMN1
"KRN",19,5487,"U")
CIRN EVENT QUEUE AUTOSTART
"KRN",19,5502,-1)
0^19
"KRN",19,5502,0)
RGEQ START^Start CIRN Event Queue^^R^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",19,5502,1,0)
^^2^2^2990302^^^
"KRN",19,5502,1,1,0)
This option starts the background processing job that processes 
"KRN",19,5502,1,2,0)
the CIRN event queue.
"KRN",19,5502,25)
START^RGEQDMN1
"KRN",19,5502,"U")
START CIRN EVENT QUEUE
"KRN",19,5517,-1)
0^4
"KRN",19,5517,0)
RG SUBSCRIBE^Generate a Patient Subscription Request^^R^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",19,5517,1,0)
^^4^4^2990416^^^
"KRN",19,5517,1,1,0)
This option is used to manually register a patient subscription at the
"KRN",19,5517,1,2,0)
patient's CIRN Master of Record (CMOR). Once the patient is registered a
"KRN",19,5517,1,3,0)
Health Level Seven (HL7) Master Files Notification message will be
"KRN",19,5517,1,4,0)
generated and submitted to the HL7 package for transmission.
"KRN",19,5517,25)
SUB^RGJCSUB
"KRN",19,5517,"U")
GENERATE A PATIENT SUBSCRIPTIO
"KRN",19,5662,-1)
2^2
"KRN",19,5662,0)
RG IRM MENU^CIRN IRM Menu^^M^^^^^^^^272
"KRN",19,5662,10,0)
^19.01IP^2^2
"KRN",19,5662,10,1,0)
5452^^5
"KRN",19,5662,10,1,"^")
RGEQ MGR
"KRN",19,5662,10,2,0)
5482^^10
"KRN",19,5662,10,2,"^")
RGHL EXCEPTION
"KRN",19,5662,"U")
CIRN IRM MENU
"KRN",19,5663,-1)
2^1
"KRN",19,5663,0)
RG ADMIN COORD MENU^CIRN Patient Admin Coordinator Menu^^M^12551^^^^^^^272^^^
"KRN",19,5663,10,0)
^19.01IP^37^9
"KRN",19,5663,10,27,0)
5517^GS^10
"KRN",19,5663,10,27,"^")
RG SUBSCRIBE
"KRN",19,5663,10,28,0)
5456^EQ^15
"KRN",19,5663,10,28,"^")
RGEQ STATS
"KRN",19,5663,10,34,0)
5689^INQ^40
"KRN",19,5663,10,34,"^")
RG SUBSCRIPT STAT INQ
"KRN",19,5663,"U")
CIRN PATIENT ADMIN COORDINATOR
"KRN",19,5689,-1)
0^5
"KRN",19,5689,0)
RG SUBSCRIPT STAT INQ^Subscription Status Inquiry^^A^^^^^^^^CLINICAL INFO RESOURCE NETWORK^^1
"KRN",19,5689,1,0)
^^2^2^2990302^^^^
"KRN",19,5689,1,1,0)
This option displays information from the SUBSCRIPTION CONTROL file
"KRN",19,5689,1,2,0)
(#774) for a given patient.
"KRN",19,5689,20)
NEW DIC,DA S DIC="^DPT(",DIC(0)="QEAM" D ^DIC Q:+Y<0  S DIC="^HLS(774,",DA=+$P($G(^DPT(+Y,"MPI")),"^",5) W:'DA !,"No sub. info exists for this patient!" I DA D EN^DIQ
"KRN",19,5689,"U")
SUBSCRIPTION STATUS INQUIRY
"KRN",101,1004,-1)
0^2
"KRN",101,1004,0)
RG PT SUBSCRIPTION REQUEST^Request to subscribe to patient data^^E^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1004,1,0)
^^3^3^2981106^^^^
"KRN",101,1004,1,1,0)
This server protocol creates a Master Files Notification (MFN) message
"KRN",101,1004,1,2,0)
that contains information for the request to become a subscriber to
"KRN",101,1004,1,3,0)
a certain patient's data.
"KRN",101,1004,10,0)
^101.01PA^1^1
"KRN",101,1004,10,1,0)
1064^^^
"KRN",101,1004,10,1,"^")
RG PT SUBSCRIPTION RECEIVER
"KRN",101,1004,99)
57363,53001
"KRN",101,1004,770)
RG SUBSCRIPTION^^MFN^Z15^^P^^AL^NE^2.3^
"KRN",101,1004,771)

"KRN",101,1004,772)
Q
"KRN",101,1022,-1)
3^3
"KRN",101,1022,0)
VAFC ADT-A04 SERVER^This protocol fires off of the PIMS Registration option^^E^^^^^^^^REGISTRATION
"KRN",101,1022,1,0)
^^2^2^2990303^^^
"KRN",101,1022,1,1,0)
This server protocol fires when a patient is registered. It generates a
"KRN",101,1022,1,2,0)
Health Level Seven (HL7) register a patient (event code A04) message.
"KRN",101,1022,10,0)
^101.01PA^6^4
"KRN",101,1022,10,6,0)
1064^^^
"KRN",101,1022,10,6,"^")
RG PT SUBSCRIPTION RECEIVER
"KRN",101,1022,99)
57737,45279
"KRN",101,1022,770)
VAFC PIMS^^ADT^A04^^P^^NE^NE^2.3^
"KRN",101,1064,-1)
0^1
"KRN",101,1064,0)
RG PT SUBSCRIPTION RECEIVER^Process a CIRN patient subscription request^^S^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",101,1064,1,0)
^^4^4^2981015^
"KRN",101,1064,1,1,0)
This client protocol is used to process subscription control Master Files
"KRN",101,1064,1,2,0)
Notification messages.  The protocol is also used to reroute the message
"KRN",101,1064,1,3,0)
from the  CIRN Master Of Record (CMOR) to all other subscribers of the
"KRN",101,1064,1,4,0)
identified patient.
"KRN",101,1064,99)
57363,53001
"KRN",101,1064,770)
^RG SUBSCRIPTION^MFN^Z15^i^P^^^NE^2.3^MFN
"KRN",101,1064,771)
D REC^RGJCREC
"KRN",101,1064,773)
1^1^^1
"KRN",101,1064,774)
D ROUTE^RGJCSUB
"KRN",771,9,-1)
0^1
"KRN",771,9,0)
RG SUBSCRIPTION^a^^RG CIRN HL7 EXCEPTIONS^^^USA
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","RGPDPST")
0^^B927208
"RTN","RGPDPST",1,0)
RGPDPST ;SF/CMC,PTD-CIRN build post-init ;11/24/98
"RTN","RGPDPST",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGPDPST",3,0)
PD ;Post-init called by CIRN PD - updating facility in the HL7 application parameter file
"RTN","RGPDPST",4,0)
 N SITE,DIE,X,Y,DR,DIC,DA
"RTN","RGPDPST",5,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1
"RTN","RGPDPST",6,0)
 ; ^ SITE is Station Number of site doing install
"RTN","RGPDPST",7,0)
 S DIC="^HL(771,",DIC(0)="XQZ",X="RG CIRN"
"RTN","RGPDPST",8,0)
 D ^DIC
"RTN","RGPDPST",9,0)
 Q:+Y<0
"RTN","RGPDPST",10,0)
 S DA=+Y
"RTN","RGPDPST",11,0)
 S DIE="^HL(771,",DR="3///^S X=SITE"
"RTN","RGPDPST",12,0)
 D ^DIE
"RTN","RGPDPST",13,0)
 K SITE,DIC,X,Y,DA,DIE,DR
"RTN","RGPDPST",14,0)
 Q
"RTN","RGPDPST",15,0)
 ;
"RTN","RGPDPST",16,0)
MC ;Post-init called by Messaging Components - updating facility in the HL7 application parameter file
"RTN","RGPDPST",17,0)
 N SITE,DIE,X,Y,DR,ENT,DIC,DA,I
"RTN","RGPDPST",18,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1
"RTN","RGPDPST",19,0)
 ; ^ SITE is Station Number of site doing install
"RTN","RGPDPST",20,0)
 S DIC="^HL(771,",DIC(0)="XQZ",X="RG SUBSCRIPTION"
"RTN","RGPDPST",21,0)
 D ^DIC
"RTN","RGPDPST",22,0)
 Q:+Y<0
"RTN","RGPDPST",23,0)
 S DA=+Y
"RTN","RGPDPST",24,0)
 S DIE="^HL(771,",DR="3///^S X=SITE"
"RTN","RGPDPST",25,0)
 D ^DIE
"RTN","RGPDPST",26,0)
 K SITE,DIC,X,Y,DA,DIE,DR
"RTN","RGPDPST",27,0)
 Q
"RTN","RGPDPST",28,0)
 ;
"VER")
8.0^21.0
**INSTALL NAME**
CIRN MESSAGING SUPPORT 1.0
"BLD",554,0)
CIRN MESSAGING SUPPORT 1.0^^0^2990428^y
"BLD",554,1,0)
^^6^6^2990301^^
"BLD",554,1,1,0)
This build contains various messaging support components required by both the 
"BLD",554,1,2,0)
clinical and demographic builds.  It includes support for the following.
"BLD",554,1,3,0)
 
"BLD",554,1,4,0)
1) Event Queue
"BLD",554,1,5,0)
2) Exception Logging
"BLD",554,1,6,0)
3) Subscription Services
"BLD",554,4,0)
^9.64PA^995^6
"BLD",554,4,990.8,0)
990.8
"BLD",554,4,990.8,222)
y^n^f^^n^^y^o^n
"BLD",554,4,991.1,0)
991.1
"BLD",554,4,991.1,222)
y^y^f^^^^n
"BLD",554,4,991.11,0)
991.11
"BLD",554,4,991.11,222)
y^y^f^^y^^y^o^n
"BLD",554,4,991.11,224)
N X S X=+^(0) I X>99!(X=18)
"BLD",554,4,995,0)
995
"BLD",554,4,995,222)
y^y^f^^y^^y^o^n
"BLD",554,4,995,224)
I $P(^(0),U)="SCN_REQ"!($P(^(0),U,1)["MPIF")
"BLD",554,4,995.1,0)
995.1
"BLD",554,4,995.1,222)
y^y^f^^^^n
"BLD",554,4,995.2,0)
995.2
"BLD",554,4,995.2,222)
y^y^f^^^^n
"BLD",554,4,"B",990.8,990.8)

"BLD",554,4,"B",991.1,991.1)

"BLD",554,4,"B",991.11,991.11)

"BLD",554,4,"B",995,995)

"BLD",554,4,"B",995.1,995.1)

"BLD",554,4,"B",995.2,995.2)

"BLD",554,"INIT")
RGHLPOST
"BLD",554,"KRN",0)
^9.67PA^8994^18
"BLD",554,"KRN",.4,0)
.4
"BLD",554,"KRN",.4,"NM",0)
^9.68A^^0
"BLD",554,"KRN",.401,0)
.401
"BLD",554,"KRN",.401,"NM",0)
^9.68A^^0
"BLD",554,"KRN",.402,0)
.402
"BLD",554,"KRN",.402,"NM",0)
^9.68A^^0
"BLD",554,"KRN",.403,0)
.403
"BLD",554,"KRN",.5,0)
.5
"BLD",554,"KRN",.84,0)
.84
"BLD",554,"KRN",3.6,0)
3.6
"BLD",554,"KRN",3.8,0)
3.8
"BLD",554,"KRN",3.8,"NM",0)
^9.68A^^0
"BLD",554,"KRN",9.2,0)
9.2
"BLD",554,"KRN",9.8,0)
9.8
"BLD",554,"KRN",9.8,"NM",0)
^9.68A^21^16
"BLD",554,"KRN",9.8,"NM",1,0)
RGEQ^^0^B87159
"BLD",554,"KRN",9.8,"NM",2,0)
RGEQDMN^^0^B1060755
"BLD",554,"KRN",9.8,"NM",3,0)
RGEQDMN1^^0^B7242124
"BLD",554,"KRN",9.8,"NM",4,0)
RGEQSUB^^0^B6151712
"BLD",554,"KRN",9.8,"NM",5,0)
RGHLEXC^^0^B52824836
"BLD",554,"KRN",9.8,"NM",6,0)
RGHLEXC1^^0^B1256163
"BLD",554,"KRN",9.8,"NM",7,0)
RGHLLOG^^0^B6486240
"BLD",554,"KRN",9.8,"NM",8,0)
RGHLUT^^0^B11985843
"BLD",554,"KRN",9.8,"NM",9,0)
RGHOUT^^0^B41871664
"BLD",554,"KRN",9.8,"NM",10,0)
RGEQSTAT^^0^B1857334
"BLD",554,"KRN",9.8,"NM",11,0)
RGEQEXC^^0^B1109891
"BLD",554,"KRN",9.8,"NM",12,0)
RGEQERR^^0^B3702927
"BLD",554,"KRN",9.8,"NM",13,0)
RGEQRPT^^0^B536138
"BLD",554,"KRN",9.8,"NM",19,0)
RGJCSUB^^0^B43002045
"BLD",554,"KRN",9.8,"NM",20,0)
RGJCREC^^0^B31727575
"BLD",554,"KRN",9.8,"NM",21,0)
RGHLPOST^^0^B214401
"BLD",554,"KRN",9.8,"NM","B","RGEQ",1)

"BLD",554,"KRN",9.8,"NM","B","RGEQDMN",2)

"BLD",554,"KRN",9.8,"NM","B","RGEQDMN1",3)

"BLD",554,"KRN",9.8,"NM","B","RGEQERR",12)

"BLD",554,"KRN",9.8,"NM","B","RGEQEXC",11)

"BLD",554,"KRN",9.8,"NM","B","RGEQRPT",13)

"BLD",554,"KRN",9.8,"NM","B","RGEQSTAT",10)

"BLD",554,"KRN",9.8,"NM","B","RGEQSUB",4)

"BLD",554,"KRN",9.8,"NM","B","RGHLEXC",5)

"BLD",554,"KRN",9.8,"NM","B","RGHLEXC1",6)

"BLD",554,"KRN",9.8,"NM","B","RGHLLOG",7)

"BLD",554,"KRN",9.8,"NM","B","RGHLPOST",21)

"BLD",554,"KRN",9.8,"NM","B","RGHLUT",8)

"BLD",554,"KRN",9.8,"NM","B","RGHOUT",9)

"BLD",554,"KRN",9.8,"NM","B","RGJCREC",20)

"BLD",554,"KRN",9.8,"NM","B","RGJCSUB",19)

"BLD",554,"KRN",19,0)
19
"BLD",554,"KRN",19,"NM",0)
^9.68A^^0
"BLD",554,"KRN",19.1,0)
19.1
"BLD",554,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",554,"KRN",101,0)
101
"BLD",554,"KRN",101,"NM",0)
^9.68A^^0
"BLD",554,"KRN",409.61,0)
409.61
"BLD",554,"KRN",771,0)
771
"BLD",554,"KRN",771,"NM",0)
^9.68A^^0
"BLD",554,"KRN",869.2,0)
869.2
"BLD",554,"KRN",870,0)
870
"BLD",554,"KRN",8994,0)
8994
"BLD",554,"KRN","B",.4,.4)

"BLD",554,"KRN","B",.401,.401)

"BLD",554,"KRN","B",.402,.402)

"BLD",554,"KRN","B",.403,.403)

"BLD",554,"KRN","B",.5,.5)

"BLD",554,"KRN","B",.84,.84)

"BLD",554,"KRN","B",3.6,3.6)

"BLD",554,"KRN","B",3.8,3.8)

"BLD",554,"KRN","B",9.2,9.2)

"BLD",554,"KRN","B",9.8,9.8)

"BLD",554,"KRN","B",19,19)

"BLD",554,"KRN","B",19.1,19.1)

"BLD",554,"KRN","B",101,101)

"BLD",554,"KRN","B",409.61,409.61)

"BLD",554,"KRN","B",771,771)

"BLD",554,"KRN","B",869.2,869.2)

"BLD",554,"KRN","B",870,870)

"BLD",554,"KRN","B",8994,8994)

"BLD",554,"PRE")
RGMSENV
"BLD",554,"QUES",0)
^9.62^^
"BLD",554,"REQB",0)
^9.611^17^17
"BLD",554,"REQB",1,0)
HL*1.6*17^2
"BLD",554,"REQB",2,0)
HL*1.6*19^2
"BLD",554,"REQB",3,0)
HL*1.6*26^2
"BLD",554,"REQB",4,0)
HL*1.6*35^2
"BLD",554,"REQB",5,0)
HL*1.6*40^2
"BLD",554,"REQB",6,0)
XU*8.0*24^2
"BLD",554,"REQB",7,0)
XU*8.0*41^2
"BLD",554,"REQB",8,0)
XU*8.0*43^2
"BLD",554,"REQB",9,0)
XU*8.0*44^2
"BLD",554,"REQB",10,0)
XU*8.0*49^2
"BLD",554,"REQB",11,0)
XU*8.0*67^2
"BLD",554,"REQB",12,0)
XU*8.0*68^2
"BLD",554,"REQB",13,0)
XU*8.0*85^2
"BLD",554,"REQB",14,0)
XU*8.0*94^2
"BLD",554,"REQB",15,0)
HL*1.6*41^2
"BLD",554,"REQB",16,0)
HL*1.6*43^2
"BLD",554,"REQB",17,0)
XU*8.0*111^2
"BLD",554,"REQB","B","HL*1.6*17",1)

"BLD",554,"REQB","B","HL*1.6*19",2)

"BLD",554,"REQB","B","HL*1.6*26",3)

"BLD",554,"REQB","B","HL*1.6*35",4)

"BLD",554,"REQB","B","HL*1.6*40",5)

"BLD",554,"REQB","B","HL*1.6*41",15)

"BLD",554,"REQB","B","HL*1.6*43",16)

"BLD",554,"REQB","B","XU*8.0*111",17)

"BLD",554,"REQB","B","XU*8.0*24",6)

"BLD",554,"REQB","B","XU*8.0*41",7)

"BLD",554,"REQB","B","XU*8.0*43",8)

"BLD",554,"REQB","B","XU*8.0*44",9)

"BLD",554,"REQB","B","XU*8.0*49",10)

"BLD",554,"REQB","B","XU*8.0*67",11)

"BLD",554,"REQB","B","XU*8.0*68",12)

"BLD",554,"REQB","B","XU*8.0*85",13)

"BLD",554,"REQB","B","XU*8.0*94",14)

"DATA",990.8,1,0)
1^5^5^5^^5^0^1
"DATA",990.8,1,"TZ")
^
"DATA",991.11,18,0)
18^0^0^^0
"DATA",991.11,18,10)
Unclassified exception
"DATA",991.11,18,99,0)
^^3^3^2970206.114932
"DATA",991.11,18,99,1,0)
Refer to the supplemental text reported with this exception to determine the 
"DATA",991.11,18,99,2,0)
nature of the problem.  This exception type should normally not be used, but is 
"DATA",991.11,18,99,3,0)
provided for backward compatibility.
"DATA",991.11,200,0)
200^2^1^^0
"DATA",991.11,200,10)
Missing BHS Segment
"DATA",991.11,200,99,0)
^^2^2^2980818^^
"DATA",991.11,200,99,1,0)
Missing BHS Segment in message received from the MPI in the batch load
"DATA",991.11,200,99,2,0)
initialization.
"DATA",991.11,201,0)
201^1^1^^0
"DATA",991.11,201,10)
Missing MSH Segment
"DATA",991.11,201,99,0)
^^1^1^2980110^^
"DATA",991.11,201,99,1,0)
Missing MSH segment in MPI Batch Message being processed from the MPI.
"DATA",991.11,202,0)
202^1^1^^0
"DATA",991.11,202,10)
Missing QAK Segment
"DATA",991.11,202,99,0)
^^1^1^2980110^^
"DATA",991.11,202,99,1,0)
Missing QAK segment in MPI Batch Initialization Message from the MPI.
"DATA",991.11,203,0)
203^1^1^^0
"DATA",991.11,203,10)
Missing MSA Segment
"DATA",991.11,203,99,0)
^^1^1^2980110^^
"DATA",991.11,203,99,1,0)
Missing MSA segment from MPI Batch Initialization Message from the MPI.
"DATA",991.11,204,0)
204^1^1^^0
"DATA",991.11,204,10)
Missing RDF Segment
"DATA",991.11,204,99,0)
^^1^1^2980110^^
"DATA",991.11,204,99,1,0)
Missing RDF Segment from MPI Initialization Batch Message from the MPI.
"DATA",991.11,205,0)
205^1^1^^0
"DATA",991.11,205,10)
Missing RDT Segment
"DATA",991.11,205,99,0)
^^1^1^2980110^^
"DATA",991.11,205,99,1,0)
Missing RDT Segment from the Batch Initialization Message from the MPI.
"DATA",991.11,206,0)
206^1^1^^0
"DATA",991.11,206,10)
Could Not Create VTQ
"DATA",991.11,206,99,0)
^^2^2^2980110^
"DATA",991.11,206,99,1,0)
Unable to create VTQ query segment in Batch Initialization Message to the
"DATA",991.11,206,99,2,0)
MPI.  Tracking only missing encoding characters or invalid DFN.
"DATA",991.11,207,0)
207^2^1^^0
"DATA",991.11,207,10)
Application Reject Error
"DATA",991.11,207,99,0)
^^1^1^2980110^^
"DATA",991.11,207,99,1,0)
Application Rejection Error, wrong application sent in message to MPI.
"DATA",991.11,208,0)
208^2^1^^0
"DATA",991.11,208,10)
Application Error
"DATA",991.11,208,99,0)
^^1^1^2980110^^
"DATA",991.11,208,99,1,0)
Application Error returned from the MPI.
"DATA",991.11,209,0)
209^1^1^104^0
"DATA",991.11,209,10)
Required field(s) Date of Birth or Name missing for patient sent to MPI
"DATA",991.11,209,99,0)
^^3^3^2990121^
"DATA",991.11,209,99,1,0)
No data was returned in the QAK Segment in the Batch Initialization
"DATA",991.11,209,99,2,0)
message from the MPI.  This was returned due to missing one or both of the
"DATA",991.11,209,99,3,0)
required fields - Name or Date of Birth.
"DATA",991.11,210,0)
210^1^1^^1
"DATA",991.11,210,10)
Patient DFN Failed
"DATA",991.11,210,99,0)
^^1^1^2990421^^
"DATA",991.11,210,99,1,0)
Patient DFN is bad, lookup in Patient file failed.
"DATA",991.11,211,0)
211^1^1^^0
"DATA",991.11,211,10)
CMOR Lookup Failed
"DATA",991.11,211,99,0)
^^2^2^2980110^^
"DATA",991.11,211,99,1,0)
CMOR Lookup failed in Institution file.  Maybe two entries with the same
"DATA",991.11,211,99,2,0)
station number or missing a station number.
"DATA",991.11,212,0)
212^1^1^^6
"DATA",991.11,212,10)
TF Update Failed in Pivot file
"DATA",991.11,212,99,0)
^^2^2^2980110^^
"DATA",991.11,212,99,1,0)
Attempted to add treating facility update to Adt/HL7 Pivot file and it
"DATA",991.11,212,99,2,0)
failed to add.
"DATA",991.11,213,0)
213^1^1^104^0
"DATA",991.11,213,10)
SSN Match Failed
"DATA",991.11,213,99,0)
^^1^1^2980110^
"DATA",991.11,213,99,1,0)
SSN returned from MPI did not match DFN's entry in Patient file.
"DATA",991.11,214,0)
214^1^1^104^0
"DATA",991.11,214,10)
Name Doesn't Match
"DATA",991.11,214,99,0)
^^1^1^2980110^
"DATA",991.11,214,99,1,0)
Name returned from MPI did not match DFN's entry in Patient file.
"DATA",991.11,215,0)
215^1^1^104^0
"DATA",991.11,215,10)
Death Entry on MPI not in VISTA
"DATA",991.11,215,99,0)
^^1^1^2980110^
"DATA",991.11,215,99,1,0)
MPI had Date of Death field populated.  Vista did not have Date of Death.
"DATA",991.11,216,0)
216^1^1^104^0
"DATA",991.11,216,10)
Death Entry on Vista not in MPI
"DATA",991.11,216,99,0)
^^1^1^2980110^
"DATA",991.11,216,99,1,0)
VISTA had Date of Death field populated.  MPI did not have Date of Death.
"DATA",991.11,217,0)
217^1^1^104^0
"DATA",991.11,217,10)
Death Entries on MPI and Vista DO NOT Match
"DATA",991.11,217,99,0)
^^1^1^2980110^
"DATA",991.11,217,99,1,0)
MPI and VistA had different dates of death for this patient.
"DATA",991.11,218,0)
218^0^1^104^0
"DATA",991.11,218,10)
Potential Matches Returned
"DATA",991.11,218,99,0)
^^2^2^2980112^^
"DATA",991.11,218,99,1,0)
Missing or Local ICN resolution job returned potential matches from the
"DATA",991.11,218,99,2,0)
MPI.  This must be resolved via the Interactive Query option.
"DATA",991.11,219,0)
219^2^1^104^0
"DATA",991.11,219,10)
Missing ICN
"DATA",991.11,219,99,0)
^^1^1^2990421^
"DATA",991.11,219,99,1,0)
The message being prcessed is missing required field, ICN.
"DATA",991.11,220,0)
220^2^1^^0
"DATA",991.11,220,10)
Error Setting Up HL7
"DATA",991.11,220,99,0)
^^1^1^2990421^^
"DATA",991.11,220,99,1,0)
Error returned from HL7 call to setup hl7 variables or sending messages.
"DATA",991.11,221,0)
221^0^1^^0
"DATA",991.11,221,10)
Missing Site/CMOR
"DATA",991.11,221,99,0)
^^1^1^2990412^^
"DATA",991.11,221,99,1,0)
Site/CMOR not in CMOR message
"DATA",991.11,222,0)
222^2^1^^0
"DATA",991.11,222,10)
Invalid Event Type
"DATA",991.11,222,99,0)
^^1^1^2990412^^
"DATA",991.11,222,99,1,0)
Invalid Event passed in CMOR message
"DATA",991.11,223,0)
223^0^1^104^0
"DATA",991.11,223,10)
Missing Excepted Field
"DATA",991.11,223,99,0)
^^1^1^2990421^^^
"DATA",991.11,223,99,1,0)
Missing excepted field
"DATA",991.11,224,0)
224^2^1^^0
"DATA",991.11,224,10)
Missing/Unable to get Logical Link
"DATA",991.11,224,99,0)
^^1^1^2990412^^
"DATA",991.11,224,99,1,0)
Link was unable to be retrieved.
"DATA",991.11,225,0)
225^2^1^104^0
"DATA",991.11,225,10)
Have Subscribers
"DATA",991.11,225,99,0)
^^2^2^2990421^^
"DATA",991.11,225,99,1,0)
Have subscribers for given patient and can not have subscribers to perform
"DATA",991.11,225,99,2,0)
action.
"DATA",991.11,226,0)
226^2^1^104^0
"DATA",991.11,226,10)
Not CMOR
"DATA",991.11,226,99,0)
^^1^1^2990421^^^
"DATA",991.11,226,99,1,0)
Message received is not from the CMOR and should not be processed.
"DATA",991.11,227,0)
227^1^1^104^9
"DATA",991.11,227,10)
Multiple ICNs
"DATA",991.11,227,99,0)
^^5^5^2990428^^
"DATA",991.11,227,99,1,0)
There is a new business rule that "More than one patient in a single
"DATA",991.11,227,99,2,0)
 Patient file can not have the same ICN".  If an ICN is returned from the
"DATA",991.11,227,99,3,0)
 MPI and another patient in that database already has that same ICN, an
"DATA",991.11,227,99,4,0)
 exception will be logged and the ICN, CMOR, etc will not be updated for
"DATA",991.11,227,99,5,0)
 this new patient. 
"DATA",995,25,0)
MPIF CMOR REQUEST^^5^60^0
"DATA",995,25,1)
EN^MPIFREQ
"DATA",995,26,0)
MPIF CMOR RESULT^^5^60^0
"DATA",995,26,1)
EN^MPIFRESS
"DATA",995,62,0)
SCN_REQ^1004^10^60^0
"DATA",995,62,1)
EQ^RGJCSUB
"FIA",990.8)
CIRN REPOSITORY SITE PARAMETER
"FIA",990.8,0)
^RGSITE("COR",
"FIA",990.8,0,0)
990.8
"FIA",990.8,0,1)
y^n^f^^n^^y^o^n
"FIA",990.8,0,10)

"FIA",990.8,0,11)

"FIA",990.8,0,"RLRO")

"FIA",990.8,990.8)
0
"FIA",991.1)
CIRN HL7 EXCEPTION LOG
"FIA",991.1,0)
^RGHL7(991.1,
"FIA",991.1,0,0)
991.1
"FIA",991.1,0,1)
y^y^f^^^^n
"FIA",991.1,0,10)

"FIA",991.1,0,11)

"FIA",991.1,0,"RLRO")

"FIA",991.1,991.1)
0
"FIA",991.1,991.12)
0
"FIA",991.11)
CIRN HL7 EXCEPTION TYPE
"FIA",991.11,0)
^RGHL7(991.11,
"FIA",991.11,0,0)
991.11I
"FIA",991.11,0,1)
y^y^f^^y^^y^o^n
"FIA",991.11,0,10)

"FIA",991.11,0,11)
N X S X=+^(0) I X>99!(X=18)
"FIA",991.11,0,"RLRO")

"FIA",991.11,991.11)
0
"FIA",991.11,991.112)
0
"FIA",991.11,991.1199)
0
"FIA",995)
CIRN EVENT ASSOCIATION
"FIA",995,0)
^RGEQASN(
"FIA",995,0,0)
995
"FIA",995,0,1)
y^y^f^^y^^y^o^n
"FIA",995,0,10)

"FIA",995,0,11)
I $P(^(0),U)="SCN_REQ"!($P(^(0),U,1)["MPIF")
"FIA",995,0,"RLRO")

"FIA",995,995)
0
"FIA",995,995.099)
0
"FIA",995.1)
CIRN EVENT EXCEPTION
"FIA",995.1,0)
^RGEQEXC(
"FIA",995.1,0,0)
995.1I
"FIA",995.1,0,1)
y^y^f^^^^n
"FIA",995.1,0,10)

"FIA",995.1,0,11)

"FIA",995.1,0,"RLRO")

"FIA",995.1,995.1)
0
"FIA",995.2)
CIRN EVENT STATISTICS
"FIA",995.2,0)
^RGSTAT(995.2,
"FIA",995.2,0,0)
995.2I
"FIA",995.2,0,1)
y^y^f^^^^n
"FIA",995.2,0,10)

"FIA",995.2,0,11)

"FIA",995.2,0,"RLRO")

"FIA",995.2,995.2)
0
"FRV1",991.11,"209,0",4)
RG CIRN DEMOGRAPHIC ISSUES
"FRV1",991.11,"209,0",4,"F")
;XMB(3.8,
"FRV1",991.11,"213,0",4)
RG CIRN DEMOGRAPHIC ISSUES
"FRV1",991.11,"213,0",4,"F")
;XMB(3.8,
"FRV1",991.11,"214,0",4)
RG CIRN DEMOGRAPHIC ISSUES
"FRV1",991.11,"214,0",4,"F")
;XMB(3.8,
"FRV1",991.11,"215,0",4)
RG CIRN DEMOGRAPHIC ISSUES
"FRV1",991.11,"215,0",4,"F")
;XMB(3.8,
"FRV1",991.11,"216,0",4)
RG CIRN DEMOGRAPHIC ISSUES
"FRV1",991.11,"216,0",4,"F")
;XMB(3.8,
"FRV1",991.11,"217,0",4)
RG CIRN DEMOGRAPHIC ISSUES
"FRV1",991.11,"217,0",4,"F")
;XMB(3.8,
"FRV1",991.11,"218,0",4)
RG CIRN DEMOGRAPHIC ISSUES
"FRV1",991.11,"218,0",4,"F")
;XMB(3.8,
"FRV1",991.11,"219,0",4)
RG CIRN DEMOGRAPHIC ISSUES
"FRV1",991.11,"219,0",4,"F")
;XMB(3.8,
"FRV1",991.11,"223,0",4)
RG CIRN DEMOGRAPHIC ISSUES
"FRV1",991.11,"223,0",4,"F")
;XMB(3.8,
"FRV1",991.11,"225,0",4)
RG CIRN DEMOGRAPHIC ISSUES
"FRV1",991.11,"225,0",4,"F")
;XMB(3.8,
"FRV1",991.11,"226,0",4)
RG CIRN DEMOGRAPHIC ISSUES
"FRV1",991.11,"226,0",4,"F")
;XMB(3.8,
"FRV1",991.11,"227,0",4)
RG CIRN DEMOGRAPHIC ISSUES
"FRV1",991.11,"227,0",4,"F")
;XMB(3.8,
"FRV1",995,"62,0",2)
RG PT SUBSCRIPTION REQUEST
"FRV1",995,"62,0",2,"F")
;ORD(101,
"INIT")
RGHLPOST
"PGL",991.11,0,4,6)
MAIL GROUP^P3.8'^XMB(3.8,^0;4^Q
"PGL",995,0,2,1)
HL7 EVENT PROTOCOL^*P101'^ORD(101,^0;2^S DIC("S")="I $P(^(0),U,4)=""E""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PRE")
RGMSENV
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
17
"RTN","RGEQ")
0^1^B87159
"RTN","RGEQ",1,0)
RGEQ ;BHM/RGY,DKM-Queue processor ;17-Feb-98
"RTN","RGEQ",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGEQ",3,0)
EN(TYPE,STUB) ;
"RTN","RGEQ",4,0)
 ;This routine creates stub event queue entries which are later processed
"RTN","RGEQ",5,0)
 ;by the Event Queue Daemon.  The Event Queue Daemon then creates and
"RTN","RGEQ",6,0)
 ;broadcasts HL7 messages.
"RTN","RGEQ",7,0)
 ;
"RTN","RGEQ",8,0)
 ; Input: Required Variables
"RTN","RGEQ",9,0)
 ;
"RTN","RGEQ",10,0)
 ;  TYPE - data class (Ex. "CH" for CHemistry)
"RTN","RGEQ",11,0)
 ;  STUB - event stub (Ex. 91;7048784.917679;238
"RTN","RGEQ",12,0)
 ;           translated LRDFN;Inverse date  ;data name)
"RTN","RGEQ",13,0)
 ;
"RTN","RGEQ",14,0)
 I $$SEND^RGJUSITE=0 Q
"RTN","RGEQ",15,0)
 S ^RGEQ(TYPE,STUB)=""
"RTN","RGEQ",16,0)
 Q
"RTN","RGEQDMN")
0^2^B1060755
"RTN","RGEQDMN",1,0)
RGEQDMN ;BHM/RGY-Dequeue processor ;17-Feb-98
"RTN","RGEQDMN",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGEQDMN",3,0)
MAIN ;
"RTN","RGEQDMN",4,0)
 N TYPE,ZTIO,ZTRTN,ZTDESC,ZTDTH,ZTSK
"RTN","RGEQDMN",5,0)
 L +^RGEQ("MAIN"):1 E  Q
"RTN","RGEQDMN",6,0)
 F  D:$$TM^%ZTLOAD  Q:$$ESTOP^RGEQDMN1("MAIN")  H 15
"RTN","RGEQDMN",7,0)
 .S TYPE="B"
"RTN","RGEQDMN",8,0)
 .F  S TYPE=$O(^RGEQ(TYPE)) Q:TYPE=""  I '$$ESTOP^RGEQDMN1(TYPE) D
"RTN","RGEQDMN",9,0)
 ..L +^RGEQ(TYPE):1 E  Q
"RTN","RGEQDMN",10,0)
 ..L -^RGEQ(TYPE)
"RTN","RGEQDMN",11,0)
 ..S ZTREQ="@",ZTIO="",ZTRTN="SUBPROC^RGEQSUB",ZTSAVE("TYPE")="",ZTDTH=$H,ZTDESC="'"_TYPE_"' CIRN Subprocess" D ^%ZTLOAD
"RTN","RGEQDMN",12,0)
 .Q
"RTN","RGEQDMN",13,0)
 L -^RGEQ("MAIN")
"RTN","RGEQDMN",14,0)
 Q
"RTN","RGEQDMN1")
0^3^B7242124
"RTN","RGEQDMN1",1,0)
RGEQDMN1 ;BHM/RGY-Dequeue processor continued ;17-Feb-98
"RTN","RGEQDMN1",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGEQDMN1",3,0)
  ;;1.0T14; CLINICAL INFO RESOURCE NETWORK ;;26 Feb 99
"RTN","RGEQDMN1",4,0)
STOP ;Stop dequeue processor
"RTN","RGEQDMN1",5,0)
 NEW ENT,DIR,DTOUT,DUOUT,DIRUT,DIE,DA,DR
"RTN","RGEQDMN1",6,0)
 S DIR("A")="Do you want to stop ALL CIRN processing"
"RTN","RGEQDMN1",7,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","RGEQDMN1",8,0)
 D ^DIR K DIR Q:$D(DIRUT)
"RTN","RGEQDMN1",9,0)
 I Y=1 S ^RGEQ("ASTOP")="YES" W " ... Done" Q
"RTN","RGEQDMN1",10,0)
 S DIR("A")="Do you want to ENABLE/DISABLE a particular data class"
"RTN","RGEQDMN1",11,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","RGEQDMN1",12,0)
 D ^DIR K DIR Q:$D(DIRUT)
"RTN","RGEQDMN1",13,0)
 I Y=1 D
"RTN","RGEQDMN1",14,0)
   .S DIR(0)="PO^995:QEAM",DIR("A")="Select CIRN Data Class"
"RTN","RGEQDMN1",15,0)
   .D ^DIR K DIR Q:$D(DIRUT)
"RTN","RGEQDMN1",16,0)
   .S ENT=+Y,STAT=+$P(^RGEQASN(ENT,0),"^",5)
"RTN","RGEQDMN1",17,0)
   .W !
"RTN","RGEQDMN1",18,0)
   .S DIR("A",1)="NOTE: This class is currently "_$P("enabled^disabled","^",STAT+1)
"RTN","RGEQDMN1",19,0)
   .S DIR("A")="   ...Do you want to "_$P("DISABLE^ENABLE","^",STAT+1)
"RTN","RGEQDMN1",20,0)
   .S DIR(0)="Y",DIR("B")="NO"
"RTN","RGEQDMN1",21,0)
   .D ^DIR K DIR Q:$D(DIRUT)
"RTN","RGEQDMN1",22,0)
   .I Y=0 Q
"RTN","RGEQDMN1",23,0)
   .S DIE="^RGEQASN(",DA=ENT,DR="5////^S X="_$P("1^0","^",STAT+1) D ^DIE
"RTN","RGEQDMN1",24,0)
   .W " ...Done."
"RTN","RGEQDMN1",25,0)
   .Q
"RTN","RGEQDMN1",26,0)
 Q
"RTN","RGEQDMN1",27,0)
START ;Start the queue processor
"RTN","RGEQDMN1",28,0)
 NEW DIR,DTOUT,DUOUT,DIRUT,ZTSK,ZTIO,ZTRTN,ZTSAVE,ZTDESC
"RTN","RGEQDMN1",29,0)
 L +^RGEQ("MAIN"):0 E  D  Q
"RTN","RGEQDMN1",30,0)
   .W !!,"The CIRN processor is already running!"
"RTN","RGEQDMN1",31,0)
   .Q
"RTN","RGEQDMN1",32,0)
 L -^RGEQ("MAIN")
"RTN","RGEQDMN1",33,0)
 S DIR("A")="Are you sure you want to start the CIRN processor"
"RTN","RGEQDMN1",34,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","RGEQDMN1",35,0)
 D ^DIR K DIR Q:$D(DIRUT)
"RTN","RGEQDMN1",36,0)
 I Y=1 D  Q
"RTN","RGEQDMN1",37,0)
   .S ZTRTN="MAIN^RGEQDMN",ZTDESC="'MAIN' CIRN process"
"RTN","RGEQDMN1",38,0)
   .S ZTREQ="@",ZTDTH=$H,ZTIO=""
"RTN","RGEQDMN1",39,0)
   .D ^%ZTLOAD
"RTN","RGEQDMN1",40,0)
   .I $G(ZTSK) W " ... done."
"RTN","RGEQDMN1",41,0)
   .S ^RGEQ("ASTOP")="NO"
"RTN","RGEQDMN1",42,0)
   .Q
"RTN","RGEQDMN1",43,0)
 W "...NOT queued"
"RTN","RGEQDMN1",44,0)
 Q
"RTN","RGEQDMN1",45,0)
AUTO ;Automatically start background process
"RTN","RGEQDMN1",46,0)
 NEW ZTSK,ZTIO,ZTRTN,ZTSAVE,ZTDESC
"RTN","RGEQDMN1",47,0)
 L +^RGEQ("MAIN"):0 E  Q
"RTN","RGEQDMN1",48,0)
 L -^RGEQ("MAIN")
"RTN","RGEQDMN1",49,0)
 S ZTRTN="MAIN^RGEQDMN",ZTDESC="'MAIN' CIRN process"
"RTN","RGEQDMN1",50,0)
 S ZTREQ="@",ZTDTH=$H,ZTIO=""
"RTN","RGEQDMN1",51,0)
 D ^%ZTLOAD
"RTN","RGEQDMN1",52,0)
 S ^RGEQ("ASTOP")="NO"
"RTN","RGEQDMN1",53,0)
 Q
"RTN","RGEQDMN1",54,0)
TEST(TYPE,PARAM,ERROR,HL7) ;Test queue processor
"RTN","RGEQDMN1",55,0)
 Q
"RTN","RGEQDMN1",56,0)
ESTOP(TYPE) ;Check to see if filer should stop
"RTN","RGEQDMN1",57,0)
 I ($G(^RGEQ("ASTOP"))="YES")!($$SEND^RGJUSITE=0) Q 1
"RTN","RGEQDMN1",58,0)
 I TYPE="MAIN" Q 0
"RTN","RGEQDMN1",59,0)
 Q ($$SEND^RGJUSITE=2)!(+$P($G(^RGEQASN(+$O(^RGEQASN("B",TYPE,0)),0)),"^",5))
"RTN","RGEQDMN1",60,0)
STATUS ;check current status of event queue, used for menu entry actions
"RTN","RGEQDMN1",61,0)
 ;added by CML 4/1/99
"RTN","RGEQDMN1",62,0)
 L +^RGEQ("MAIN"):0 E  D  Q
"RTN","RGEQDMN1",63,0)
 .W !!,"=> CIRN Event Queue processor is currently running.",!
"RTN","RGEQDMN1",64,0)
 .Q
"RTN","RGEQDMN1",65,0)
 W $C(7),$C(7),!!,"=> CIRN Event Queue processor is <<NOT>> currently running.",!
"RTN","RGEQDMN1",66,0)
 L -^RGEQ("MAIN")
"RTN","RGEQDMN1",67,0)
 Q
"RTN","RGEQERR")
0^12^B3702927
"RTN","RGEQERR",1,0)
RGEQERR ;BHM/RGY-Reprocess data class error ;17-Feb-98
"RTN","RGEQERR",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGEQERR",3,0)
ERROR ;Requeue errors
"RTN","RGEQERR",4,0)
 NEW DIR,DTOUT,DUOUT,DIRUT,ZTSK,ZTIO,ZTRTN,ZTSAVE,ZTDESC,CLASS,PARAM,COUNT,DIE,DR,DA,ENT,TYPE
"RTN","RGEQERR",5,0)
 L +^RGEQEXC("ERROR"):1 E  D  Q
"RTN","RGEQERR",6,0)
   .W !!,"Someone else is running this option!",!!
"RTN","RGEQERR",7,0)
   .Q
"RTN","RGEQERR",8,0)
 S DIR("A")="Do you want to requeue all the exception events"
"RTN","RGEQERR",9,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","RGEQERR",10,0)
 D ^DIR K DIR G:$D(DIRUT) Q1
"RTN","RGEQERR",11,0)
 I Y=1 D  G Q1
"RTN","RGEQERR",12,0)
   .S COUNT=0
"RTN","RGEQERR",13,0)
   .F ENT=0:0 S ENT=$O(^RGEQEXC(ENT)) Q:'ENT  D
"RTN","RGEQERR",14,0)
     ..S COUNT=COUNT+1 I COUNT=100 W "." S COUNT=0
"RTN","RGEQERR",15,0)
     ..S CLASS=$P($G(^RGEQASN(+$P(^RGEQEXC(ENT,0),"^",3),0)),"^")
"RTN","RGEQERR",16,0)
     ..S PARAM=$G(^RGEQEXC(ENT,1))
"RTN","RGEQERR",17,0)
     ..I CLASS]"",PARAM]"" D EN^RGEQ(CLASS,PARAM) S DIE="^RGEQEXC(",DA=ENT,DR=".01///@" D ^DIE
"RTN","RGEQERR",18,0)
     ..Q
"RTN","RGEQERR",19,0)
   .W "...Done."
"RTN","RGEQERR",20,0)
   .Q
"RTN","RGEQERR",21,0)
 I Y=0 D  G Q1
"RTN","RGEQERR",22,0)
   .S DIR(0)="PO^995:QEAM" D ^DIR K DIR Q:$D(DIRUT)  S TYPE=+Y
"RTN","RGEQERR",23,0)
   .I '$O(^RGEQEXC("AC",TYPE,0)) W !,"...No exceptions exist for this type of data class" Q
"RTN","RGEQERR",24,0)
   .S COUNT=0
"RTN","RGEQERR",25,0)
   .F ENT=0:0 S ENT=$O(^RGEQEXC("AC",TYPE,ENT)) Q:'ENT  D
"RTN","RGEQERR",26,0)
     ..S COUNT=COUNT+1 I COUNT=100 W "." S COUNT=0
"RTN","RGEQERR",27,0)
     ..S CLASS=$P($G(^RGEQASN(+$P(^RGEQEXC(ENT,0),"^",3),0)),"^")
"RTN","RGEQERR",28,0)
     ..S PARAM=$G(^RGEQEXC(ENT,1))
"RTN","RGEQERR",29,0)
     ..I CLASS]"",PARAM]"" D EN^RGEQ(CLASS,PARAM) S DIE="^RGEQEXC(",DA=ENT,DR=".01///@" D ^DIE
"RTN","RGEQERR",30,0)
     ..Q
"RTN","RGEQERR",31,0)
   .W "...Done."
"RTN","RGEQERR",32,0)
   .Q
"RTN","RGEQERR",33,0)
Q1 L -^RGEQEXC("ERROR")
"RTN","RGEQERR",34,0)
 Q
"RTN","RGEQEXC")
0^11^B1109891
"RTN","RGEQEXC",1,0)
RGEQEXC ;BHM/RGY-Error processor ;17-Feb-98
"RTN","RGEQEXC",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGEQEXC",3,0)
SET(TYPE,ERROR,STUB) ;Receive Error
"RTN","RGEQEXC",4,0)
 NEW DIC,D0,DIE,DA,X,DLAYGO,DR,RGOK,EVN
"RTN","RGEQEXC",5,0)
 I $G(TYPE)="" G Q
"RTN","RGEQEXC",6,0)
 I TYPE'?1N.N S TYPE=$O(^RGEQASN("B",TYPE,0)) I TYPE="" G Q
"RTN","RGEQEXC",7,0)
 F EVN=+$P(^RGEQEXC(0),"^",3)+1:1 L +^RGEQEXC(EVN):0 I $T S RGOK=0 D  L -^RGEQEXC(EVN) Q:RGOK
"RTN","RGEQEXC",8,0)
   .I $D(^RGEQEXC(EVN)) Q
"RTN","RGEQEXC",9,0)
   .S DINUM=EVN,DIC="^RGEQEXC(",DIC(0)="L",DLAYGO=995.1,X=EVN K DD,D0 D FILE^DICN K DIC,DLAYGO,D0
"RTN","RGEQEXC",10,0)
   .S DIE="^RGEQEXC(",DR="[RGEQ NEW EXCEPTION]",DA=EVN D ^DIE
"RTN","RGEQEXC",11,0)
   .S RGOK=1
"RTN","RGEQEXC",12,0)
   .Q
"RTN","RGEQEXC",13,0)
Q Q
"RTN","RGEQRPT")
0^13^B536138
"RTN","RGEQRPT",1,0)
RGEQRPT ;BHM/RGY-Print CIRN queue statistics ;17-Feb-98
"RTN","RGEQRPT",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGEQRPT",3,0)
STAT ;
"RTN","RGEQRPT",4,0)
 NEW L,DIC,FLDS,BY,FR,TO,DHD
"RTN","RGEQRPT",5,0)
 S L=0,DIC="^RGSTAT(995.2,",FLDS="[RGEQ STAT]",BY="[RGEQ STAT]",FR="?",TO="?",DHD="CIRN Data Class Statistics"
"RTN","RGEQRPT",6,0)
 D EN1^DIP
"RTN","RGEQRPT",7,0)
 Q
"RTN","RGEQSTAT")
0^10^B1857334
"RTN","RGEQSTAT",1,0)
RGEQSTAT ;BHM/RGY-Statistics ;17-Feb-98
"RTN","RGEQSTAT",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGEQSTAT",3,0)
ENT(TYPE) ;Get available entry
"RTN","RGEQSTAT",4,0)
 NEW DATE
"RTN","RGEQSTAT",5,0)
 I TYPE'?1N.N S TYPE=+$O(^RGEQASN("B",TYPE,0))
"RTN","RGEQSTAT",6,0)
 I '$D(^RGEQASN(TYPE,0)) Q 0
"RTN","RGEQSTAT",7,0)
 S DATE=$$NOW^XLFDT\1
"RTN","RGEQSTAT",8,0)
 I '$O(^RGSTAT(995.2,"AX",TYPE,DATE,0)) D ADD(TYPE,DATE)
"RTN","RGEQSTAT",9,0)
 Q $O(^RGSTAT(995.2,"AX",TYPE,DATE,0))
"RTN","RGEQSTAT",10,0)
 ;
"RTN","RGEQSTAT",11,0)
ADD(TYPE,DATE) ;Add statistics entry for type of event
"RTN","RGEQSTAT",12,0)
 NEW DIC,D0,DIE,DA,X,DLAYGO,DR,RGOK,EVN
"RTN","RGEQSTAT",13,0)
 I $G(TYPE)="" Q
"RTN","RGEQSTAT",14,0)
 I $G(DATE)="" Q
"RTN","RGEQSTAT",15,0)
 I TYPE'?1N.N S TYPE=$O(^RGEQASN("B",TYPE,0)) I TYPE="" G Q
"RTN","RGEQSTAT",16,0)
 F EVN=+$P(^RGSTAT(995.2,0),"^",3)+1:1 L +^RGSTAT(995.2,EVN):0 I $T S RGOK=0 D  L -^RGSTAT(995.2,EVN) Q:RGOK
"RTN","RGEQSTAT",17,0)
   .I $D(^RGSTAT(995.2,EVN)) Q
"RTN","RGEQSTAT",18,0)
   .S DINUM=EVN,DIC="^RGSTAT(995.2,",DIC(0)="L",DLAYGO=995.2,X=EVN K DD,D0 D FILE^DICN K DIC,DLAYGO,D0
"RTN","RGEQSTAT",19,0)
   .S DIE="^RGSTAT(995.2,",DR="[RGEQ NEW STATISTIC]",DA=EVN D ^DIE
"RTN","RGEQSTAT",20,0)
   .S RGOK=1
"RTN","RGEQSTAT",21,0)
   .Q
"RTN","RGEQSTAT",22,0)
Q Q
"RTN","RGEQSUB")
0^4^B6151712
"RTN","RGEQSUB",1,0)
RGEQSUB ;BHM/RGY,DKM-Dequeue processor ;14-Oct-1998
"RTN","RGEQSUB",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGEQSUB",3,0)
SUBPROC ;
"RTN","RGEQSUB",4,0)
 NEW ENT,CURTIME,HTIME,HORLOG,PARAM,STAT,PROG,ERROR,RGLOG
"RTN","RGEQSUB",5,0)
 L +^RGEQ(TYPE):1 E  Q
"RTN","RGEQSUB",6,0)
 S ENT=$G(^RGEQASN(+$O(^RGEQASN("B",TYPE,0)),0))
"RTN","RGEQSUB",7,0)
 S X=+$P(ENT,"^",3) S:X<1!(X>10) X=10 X ^%ZOSF("PRIORITY")
"RTN","RGEQSUB",8,0)
 I $$NEWERR^%ZTER N $ET S $ET=""
"RTN","RGEQSUB",9,0)
 S HTIME=+$P($G(^RGEQASN(+$O(^RGEQASN("B",TYPE,0)),0)),"^",4)
"RTN","RGEQSUB",10,0)
 S:HTIME<30 HTIME=30
"RTN","RGEQSUB",11,0)
 S CURTIME=0
"RTN","RGEQSUB",12,0)
 F  Q:$$ESTOP^RGEQDMN1(TYPE)!(CURTIME'<HTIME)  D
"RTN","RGEQSUB",13,0)
 .M ^RGEQ(TYPE)=^RGEQ("ADQ",TYPE)
"RTN","RGEQSUB",14,0)
 .K ^RGEQ("ADQ")
"RTN","RGEQSUB",15,0)
 .I $O(^RGEQ(TYPE,""))]"" D PROCESS S CURTIME=0 Q
"RTN","RGEQSUB",16,0)
 .S CURTIME=CURTIME+5
"RTN","RGEQSUB",17,0)
 .H 5
"RTN","RGEQSUB",18,0)
 .Q
"RTN","RGEQSUB",19,0)
 L -^RGEQ(TYPE)
"RTN","RGEQSUB",20,0)
 K TYPE Q
"RTN","RGEQSUB",21,0)
PROCESS ;
"RTN","RGEQSUB",22,0)
 S PARAM="",STAT=$$ENT^RGEQSTAT(TYPE),HORLOG=+$H
"RTN","RGEQSUB",23,0)
 S PROG=$P($G(^RGEQASN(+$O(^RGEQASN("B",TYPE,0)),1)),"^",1,2)
"RTN","RGEQSUB",24,0)
 I PROG="" S PROG="EVENT TYPE DOES NOT EXIST"
"RTN","RGEQSUB",25,0)
 E  D
"RTN","RGEQSUB",26,0)
 .S X=$P(PROG,"^",2)
"RTN","RGEQSUB",27,0)
 .I X="" S PROG="INVALID PROGRAM NAME"
"RTN","RGEQSUB",28,0)
 .E  D
"RTN","RGEQSUB",29,0)
 ..X ^%ZOSF("TEST")
"RTN","RGEQSUB",30,0)
 ..I '$T S PROG="PROGRAM DOES NOT EXIST"
"RTN","RGEQSUB",31,0)
 ..Q
"RTN","RGEQSUB",32,0)
 .Q
"RTN","RGEQSUB",33,0)
 F  S PARAM=$O(^RGEQ(TYPE,PARAM)) Q:PARAM=""  D
"RTN","RGEQSUB",34,0)
 .I +$H'=HORLOG S STAT=$$ENT^RGEQSTAT(TYPE),HORLOG=+$H
"RTN","RGEQSUB",35,0)
 .I PROG'["^" D  Q
"RTN","RGEQSUB",36,0)
 ..D SET^RGEQEXC(TYPE,PROG,PARAM)
"RTN","RGEQSUB",37,0)
 ..K ^RGEQ(TYPE,PARAM)
"RTN","RGEQSUB",38,0)
 ..S $P(^RGSTAT(995.2,STAT,1),"^",2)=$P($G(^RGSTAT(995.2,STAT,1)),"^",2)+1
"RTN","RGEQSUB",39,0)
 ..Q
"RTN","RGEQSUB",40,0)
 .S X="ERROR^RGEQSUB",@^%ZOSF("TRAP"),ERROR=""
"RTN","RGEQSUB",41,0)
 .D START^RGHLLOG(,TYPE,PARAM)
"RTN","RGEQSUB",42,0)
 .S ^RGEQ("ADQ",TYPE,PARAM)=""
"RTN","RGEQSUB",43,0)
 .K ^RGEQ(TYPE,PARAM)
"RTN","RGEQSUB",44,0)
 .D @(PROG_"("""_TYPE_""","""_PARAM_""",.ERROR,"""_$P(ENT,"^",2)_""")")
"RTN","RGEQSUB",45,0)
 .I ERROR="" S $P(^RGSTAT(995.2,STAT,1),"^")=$P($G(^RGSTAT(995.2,STAT,1)),"^")+1
"RTN","RGEQSUB",46,0)
 .I ERROR]"" D
"RTN","RGEQSUB",47,0)
 ..S $P(^RGSTAT(995.2,STAT,1),"^",2)=$P($G(^RGSTAT(995.2,STAT,1)),"^",2)+1
"RTN","RGEQSUB",48,0)
 ..D EXC^RGHLLOG(ERROR),SET^RGEQEXC(TYPE,ERROR,PARAM)
"RTN","RGEQSUB",49,0)
 ..Q
"RTN","RGEQSUB",50,0)
 .K ^RGEQ("ADQ",TYPE,PARAM)
"RTN","RGEQSUB",51,0)
 .D STOP^RGHLLOG(0)
"RTN","RGEQSUB",52,0)
 .Q
"RTN","RGEQSUB",53,0)
 Q
"RTN","RGEQSUB",54,0)
ERROR ;Come here on application error
"RTN","RGEQSUB",55,0)
 N ERROR
"RTN","RGEQSUB",56,0)
 S ERROR=$$EC^%ZOSV
"RTN","RGEQSUB",57,0)
 S $P(^RGSTAT(995.2,STAT,1),"^",2)=$P($G(^RGSTAT(995.2,STAT,1)),"^",2)+1
"RTN","RGEQSUB",58,0)
 D EXC^RGHLLOG(6,ERROR),SET^RGEQEXC(TYPE,ERROR,PARAM)
"RTN","RGEQSUB",59,0)
 K ^RGEQ("ADQ",TYPE,PARAM),^RGEQ(TYPE,PARAM)
"RTN","RGEQSUB",60,0)
 D STOP^RGHLLOG(1),^%ZTER
"RTN","RGEQSUB",61,0)
 Q
"RTN","RGHLEXC")
0^5^B52824836
"RTN","RGHLEXC",1,0)
RGHLEXC ;CAIRO/DKM-HL7 exception handling utilities ;17-Oct-1998
"RTN","RGHLEXC",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGHLEXC",3,0)
 ;=================================================================
"RTN","RGHLEXC",4,0)
 ; Utility that creates a report of the Cirn HL7 Exception Log
"RTN","RGHLEXC",5,0)
 ; the report is sorted by exception or by frequency.
"RTN","RGHLEXC",6,0)
LOAD N RGZ,RGZ1,RGZ2,RGZ3,RGTOT,RGSRT,RGEXC,RGDET
"RTN","RGHLEXC",7,0)
 K ^TMP(RGPID,"RGHLEXC"),^("RGHLEXC2"),^("RGHLMSG"),^(RGBUF)
"RTN","RGHLEXC",8,0)
 S RGSRT=RGST(583000),RGDET=RGST(583001),RGLC=0,RGTOT=0,RGTTL="HL7 Exception Utility"
"RTN","RGHLEXC",9,0)
 W $$PRMPT^RGED2("Sorting by "_$S(RGSRT:"exception",1:"frequency")_"...",0)
"RTN","RGHLEXC",10,0)
 D MOVETO^RGED2(1,1)
"RTN","RGHLEXC",11,0)
 F RGEXC=0:0 S RGEXC=$O(^RGHL7(991.1,"AC",RGEXC)) Q:'RGEXC  D:$$KEY(RGEXC)
"RTN","RGHLEXC",12,0)
 .F RGZ=0:0 S RGZ=$O(^RGHL7(991.1,"AC",RGEXC,RGZ)) Q:'RGZ  D
"RTN","RGHLEXC",13,0)
 ..F RGZ1=0:0 S RGZ1=$O(^RGHL7(991.1,"AC",RGEXC,RGZ,RGZ1)) Q:'RGZ1  D
"RTN","RGHLEXC",14,0)
 ...S RGTOT=RGTOT+1,RGZ2=$S(RGDET:$$EXC(RGEXC,$G(^RGHL7(991.1,RGZ,1,RGZ1,10))),1:$$EXC(RGEXC)),RGZ3=$$UP^XLFSTR($E(RGZ2,1,80))
"RTN","RGHLEXC",15,0)
 ...S ^(RGZ3)=$G(^TMP(RGPID,"RGHLEXC",RGZ3))+1,^(RGZ3,0)=RGZ2,^(-1)=RGEXC,^(RGZ,RGZ1)=""
"RTN","RGHLEXC",16,0)
 I RGSRT D
"RTN","RGHLEXC",17,0)
 .S RGZ=""
"RTN","RGHLEXC",18,0)
 .F  S RGZ=$O(^TMP(RGPID,"RGHLEXC",RGZ)) Q:RGZ=""  D
"RTN","RGHLEXC",19,0)
 ..D ADD(^TMP(RGPID,"RGHLEXC",RGZ),^(RGZ,0))
"RTN","RGHLEXC",20,0)
 ..M ^TMP(RGPID,"RGHLMSG",RGLC)=^TMP(RGPID,"RGHLEXC",RGZ)
"RTN","RGHLEXC",21,0)
 E  D
"RTN","RGHLEXC",22,0)
 .S RGZ=""
"RTN","RGHLEXC",23,0)
 .F  S RGZ=$O(^TMP(RGPID,"RGHLEXC",RGZ)) Q:RGZ=""  S RGZ1=^(RGZ),RGZ2=^(RGZ,0),^TMP(RGPID,"RGHLEXC2",RGZ1,RGZ)=RGZ2
"RTN","RGHLEXC",24,0)
 .F  S RGZ=$O(^TMP(RGPID,"RGHLEXC2",RGZ),-1),RGZ1="" Q:'RGZ  D
"RTN","RGHLEXC",25,0)
 ..F  S RGZ1=$O(^TMP(RGPID,"RGHLEXC2",RGZ,RGZ1)) Q:RGZ1=""  D
"RTN","RGHLEXC",26,0)
 ...D ADD(RGZ,^TMP(RGPID,"RGHLEXC2",RGZ,RGZ1))
"RTN","RGHLEXC",27,0)
 ...M ^TMP(RGPID,"RGHLMSG",RGLC)=^TMP(RGPID,"RGHLEXC",RGZ1)
"RTN","RGHLEXC",28,0)
 S RGOBJ=$$SNGPLR^RGRSUTL2(RGTOT,"exception"),RGLN=$G(^TMP(RGPID,RGBUF,1))
"RTN","RGHLEXC",29,0)
 D PAINT^RGEDS
"RTN","RGHLEXC",30,0)
 K ^TMP(RGPID,"RGHLEXC"),^("RGHLEXC2")
"RTN","RGHLEXC",31,0)
 Q
"RTN","RGHLEXC",32,0)
ADD(RGCNT,RGEXC) ;
"RTN","RGHLEXC",33,0)
 S:RGCNT RGLC=RGLC+1,^TMP(RGPID,RGBUF,RGLC)=" "_$J(RGCNT,6)_"  "_RGEXC
"RTN","RGHLEXC",34,0)
 Q
"RTN","RGHLEXC",35,0)
 ; Check to see if user is allowed to view exception
"RTN","RGHLEXC",36,0)
KEY(RGEXC) ;
"RTN","RGHLEXC",37,0)
 Q:'$G(DUZ) 0
"RTN","RGHLEXC",38,0)
 Q:$G(DUZ(0))["@" 1
"RTN","RGHLEXC",39,0)
 Q:'$O(^RGHL7(991.11,RGEXC,20,0)) 1
"RTN","RGHLEXC",40,0)
 N RGZ,RGZ1
"RTN","RGHLEXC",41,0)
 F RGZ=0:0 S RGZ=+$O(^RGHL7(991.11,RGEXC,20,RGZ)) Q:'RGZ  D  I $L(RGZ1),$D(^XUSEC(RGZ1,DUZ)) Q
"RTN","RGHLEXC",42,0)
 .S RGZ1=$P($G(^DIC(19.1,RGZ,0)),U)
"RTN","RGHLEXC",43,0)
 Q RGZ
"RTN","RGHLEXC",44,0)
 ; Mark/unmark current line
"RTN","RGHLEXC",45,0)
MARK D MARK2(RGROW),PAINT^RGEDS
"RTN","RGHLEXC",46,0)
 Q
"RTN","RGHLEXC",47,0)
 ; Mark/unmark specified line
"RTN","RGHLEXC",48,0)
MARK2(RGR) ;
"RTN","RGHLEXC",49,0)
 N RGZ
"RTN","RGHLEXC",50,0)
 D UPDATE^RGED2
"RTN","RGHLEXC",51,0)
 S RGZ=$G(^TMP(RGPID,RGBUF,RGR))
"RTN","RGHLEXC",52,0)
 S:$L(RGZ) $E(RGZ)=$TR($E(RGZ),$C(32,127),$C(127,32))
"RTN","RGHLEXC",53,0)
 S ^TMP(RGPID,RGBUF,RGR)=RGZ
"RTN","RGHLEXC",54,0)
 S:RGR=RGROW RGLN=RGZ
"RTN","RGHLEXC",55,0)
 Q
"RTN","RGHLEXC",56,0)
 ; Toggle mark/unmark for all rows
"RTN","RGHLEXC",57,0)
TOGGLE N RGZ
"RTN","RGHLEXC",58,0)
 F RGZ=1:1:RGLC D MARK2(RGZ)
"RTN","RGHLEXC",59,0)
 D PAINT^RGEDS
"RTN","RGHLEXC",60,0)
 Q
"RTN","RGHLEXC",61,0)
 ; Perform operations on log entries with marked exception
"RTN","RGHLEXC",62,0)
 ; Input - RGX = Operation to perform (VIEW,DELETE,PROC)
"RTN","RGHLEXC",63,0)
 ;         RGLOAD (Optional) create report
"RTN","RGHLEXC",64,0)
MSG(RGX,RGLOAD) ;
"RTN","RGHLEXC",65,0)
 N RGEXC,RGHL7,RGSPN,RGLOG,RGPARAM,RGDAT,RGDC,RGZ
"RTN","RGHLEXC",66,0)
 S RGLOAD=+$G(RGLOAD)
"RTN","RGHLEXC",67,0)
 W $$PRMPT^RGED2("Scanning exceptions... ",0)
"RTN","RGHLEXC",68,0)
 K ^TMP(RGPID,"RGHLEXC")
"RTN","RGHLEXC",69,0)
 F RGZ=1:1:RGLC M:$A($G(^TMP(RGPID,RGBUF,RGZ)))=127 ^TMP(RGPID,"RGHLEXC")=^TMP(RGPID,"RGHLMSG",RGZ)
"RTN","RGHLEXC",70,0)
 I '$D(^TMP(RGPID,"RGHLEXC")) W $$PRMPT^RGED2("No exceptions marked",0) Q
"RTN","RGHLEXC",71,0)
 F RGLOG=0:0 S RGLOG=$O(^TMP(RGPID,"RGHLEXC",RGLOG)) D:RGLOG  Q:'RGLOG
"RTN","RGHLEXC",72,0)
 .S RGZ=$G(^RGHL7(991.1,RGLOG,0)),RGDAT=$P(RGZ,U,2),RGHL7=+$P(RGZ,U,5),RGDC=+$P(RGZ,U,6),RGPARAM=$G(^(2))
"RTN","RGHLEXC",73,0)
 .S RGDC(0)=$P($G(^RGEQASN(RGDC,0)),U),Y=RGDAT
"RTN","RGHLEXC",74,0)
 .X ^DD("DD") S RGDAT(0)=$E(Y,1,16)
"RTN","RGHLEXC",75,0)
 .F RGEXC=0:0 S RGEXC=$O(^TMP(RGPID,"RGHLEXC",RGLOG,RGEXC)) D:RGEXC @RGX Q:'RGEXC
"RTN","RGHLEXC",76,0)
 K ^TMP(RGPID,"RGHLEXC")
"RTN","RGHLEXC",77,0)
 D LOAD:RGLOAD,PAINT^RGEDS:'RGLOAD
"RTN","RGHLEXC",78,0)
 Q
"RTN","RGHLEXC",79,0)
 ; Reprocess a message or event
"RTN","RGHLEXC",80,0)
PROC N RGZ
"RTN","RGHLEXC",81,0)
 S DIR(0)="F^1:1" D ^DIR K DIR
"RTN","RGHLEXC",82,0)
 S RGZ=Y
"RTN","RGHLEXC",83,0)
 I RGZ=U S (RGEXC,RGLOG)=0 Q
"RTN","RGHLEXC",84,0)
 D DELLOG(RGLOG)
"RTN","RGHLEXC",85,0)
 I RGHL7 D
"RTN","RGHLEXC",86,0)
 .W $$PRMPT^RGED2("Reprocessing message #"_RGHL7,0)
"RTN","RGHLEXC",87,0)
 .D REPROC(RGHL7,RGPARAM)
"RTN","RGHLEXC",88,0)
 E  I RGDC,$L(RGPARAM) D
"RTN","RGHLEXC",89,0)
 .W $$PRMPT^RGED2("Reprocessing event type "_RGDC(0),0)
"RTN","RGHLEXC",90,0)
 .D EN^RGEQ(RGDC(0),RGPARAM)
"RTN","RGHLEXC",91,0)
 S RGEXC=0,RGLOAD=1
"RTN","RGHLEXC",92,0)
 Q
"RTN","RGHLEXC",93,0)
 ; View HL7 message or event
"RTN","RGHLEXC",94,0)
VIEW N RGZ
"RTN","RGHLEXC",95,0)
 D VMSG:RGHL7,VEVN:RGDC&RGLOG
"RTN","RGHLEXC",96,0)
 S RGEXC=0
"RTN","RGHLEXC",97,0)
 Q
"RTN","RGHLEXC",98,0)
 ; View HL7 message
"RTN","RGHLEXC",99,0)
VMSG N RGHLEXC
"RTN","RGHLEXC",100,0)
 S RGZ=$$PRMPT^RGED2("View message #"_RGHL7_"? ",1,"U","YN^"),RGHLEXC=0
"RTN","RGHLEXC",101,0)
 S:RGZ=U RGLOG=0
"RTN","RGHLEXC",102,0)
 Q:"^N"[RGZ
"RTN","RGHLEXC",103,0)
 S RGZ=$$PRMPT^RGED2("Loading message #"_RGHL7_"...",0)
"RTN","RGHLEXC",104,0)
 S RGZ=$$REPROC^HLUTIL(RGHL7,"VMSG2^RGHLEXC")
"RTN","RGHLEXC",105,0)
 Q
"RTN","RGHLEXC",106,0)
VMSG2 N RGZ,RGG
"RTN","RGHLEXC",107,0)
 K ^TMP(RGPID,"RGHLEVN")
"RTN","RGHLEXC",108,0)
 F  X HLNEXT Q:HLQUIT'>0  D
"RTN","RGHLEXC",109,0)
 .D VDX(HLNODE)
"RTN","RGHLEXC",110,0)
 .F RGZ=0:0 S RGZ=$O(HLNODE(RGZ)) Q:'RGZ  D VDX(HLNODE(RGZ))
"RTN","RGHLEXC",111,0)
 .D VDX("")
"RTN","RGHLEXC",112,0)
 D ^RGED($NA(^TMP(RGPID,"RGHLEVN")),"Message Viewer","Message #"_RGHL7,"HL7VIEW",RGPID)
"RTN","RGHLEXC",113,0)
 K ^TMP(RGPID,"RGHLEVN")
"RTN","RGHLEXC",114,0)
 Q
"RTN","RGHLEXC",115,0)
 ; View event
"RTN","RGHLEXC",116,0)
VEVN N RGET
"RTN","RGHLEXC",117,0)
 S RGZ=$$PRMPT^RGED2("View "_RGDC(0)_" event? ",1,"U","YN^")
"RTN","RGHLEXC",118,0)
 S:RGZ=U RGLOG=0
"RTN","RGHLEXC",119,0)
 Q:"^N"[RGZ
"RTN","RGHLEXC",120,0)
 S RGET(1)=$G(^RGHL7(991.1,RGLOG,1,RGEXC,10),"none"),RGET=+$P($G(^(0)),U,3),RGET(0)=$$EXC(RGET)
"RTN","RGHLEXC",121,0)
 K ^TMP(RGPID,"RGHLEVN")
"RTN","RGHLEXC",122,0)
 D VDX($$CJ^XLFSTR("Event Information",80,"-"))
"RTN","RGHLEXC",123,0)
 D VDX("Class : "_RGDC(0))
"RTN","RGHLEXC",124,0)
 D VDX("Stub  : "_RGPARAM)
"RTN","RGHLEXC",125,0)
 D VDX("Date  : "_RGDAT(0))
"RTN","RGHLEXC",126,0)
 D VDX("Detail: "_$S($O(^RGEQASN(RGDC,99,0)):"",1:"none"))
"RTN","RGHLEXC",127,0)
 D VDX("")
"RTN","RGHLEXC",128,0)
 F RGZ=0:0 S RGZ=$O(^RGEQASN(RGDC,99,RGZ)) Q:'RGZ  D VDX(^(RGZ,0))
"RTN","RGHLEXC",129,0)
 D VDX("")
"RTN","RGHLEXC",130,0)
 D VDX($$CJ^XLFSTR("Exception Information",80,"-"))
"RTN","RGHLEXC",131,0)
 D VDX("Type  : "_RGET(0))
"RTN","RGHLEXC",132,0)
 D VDX("Text  : "_RGET(1))
"RTN","RGHLEXC",133,0)
 D VDX("Detail: "_$S($O(^RGHL7(991.11,RGET,99,0)):"",1:"none"))
"RTN","RGHLEXC",134,0)
 D VDX("")
"RTN","RGHLEXC",135,0)
 F RGZ=0:0 S RGZ=$O(^RGHL7(991.11,RGET,99,RGZ)) Q:'RGZ  D VDX(^(RGZ,0))
"RTN","RGHLEXC",136,0)
 D ^RGED($NA(^TMP(RGPID,"RGHLEVN")),"Event Viewer",RGDC(0),"BROWSE",RGPID)
"RTN","RGHLEXC",137,0)
 K ^TMP(RGPID,"RGHLEVN")
"RTN","RGHLEXC",138,0)
 Q
"RTN","RGHLEXC",139,0)
VDX(RGX) S ^(1+$O(^TMP(RGPID,"RGHLEVN",""),-1),0)=RGX
"RTN","RGHLEXC",140,0)
 Q
"RTN","RGHLEXC",141,0)
 ; Move to next exception (message view)
"RTN","RGHLEXC",142,0)
NXTEXC N RGZ,RGZ1,RGZ2
"RTN","RGHLEXC",143,0)
 S RGHLEXC=$O(^RGHL7(991.1,RGLOG,1,RGHLEXC))
"RTN","RGHLEXC",144,0)
 S:'RGHLEXC RGHLEXC=$O(^RGHL7(991.1,RGHLOG,1,0))
"RTN","RGHLEXC",145,0)
 Q:'RGHLEXC
"RTN","RGHLEXC",146,0)
 S RGZ=$G(^RGHL7(991.1,RGHLOG,1,RGHLEXC,0)),RGZ1=$G(^(10))
"RTN","RGHLEXC",147,0)
 W $$PRMPT^RGED2($$EXC($P(RGZ,U,3),RGZ1),0)
"RTN","RGHLEXC",148,0)
 S RGZ1=$P(RGZ,U,2),RGZ2=1
"RTN","RGHLEXC",149,0)
 D UPDATE^RGED2
"RTN","RGHLEXC",150,0)
 F RGZ=1:1:RGLC Q:RGZ2=RGZ1  D
"RTN","RGHLEXC",151,0)
 .S:^TMP(RGPID,RGBUF,RGZ)="" RGZ2=RGZ2+1
"RTN","RGHLEXC",152,0)
 D MOVETO^RGED2(RGZ,1)
"RTN","RGHLEXC",153,0)
 Q
"RTN","RGHLEXC",154,0)
 ; Show detailed explanation of an exception
"RTN","RGHLEXC",155,0)
EXPLAIN N RGEXC
"RTN","RGHLEXC",156,0)
 S RGEXC=+$G(^TMP(RGPID,"RGHLMSG",RGROW,-1))
"RTN","RGHLEXC",157,0)
 I '$O(^RGHL7(991.11,RGEXC,99,0)) W $$PRMPT^RGED2("No explanation available for this exception",0)
"RTN","RGHLEXC",158,0)
 E  D ^RGED("^RGHL7(991.11,"_RGEXC_",99,","Explanation of exception",$$EXC(RGEXC),"BROWSE",RGPID),PAINT^RGEDS
"RTN","RGHLEXC",159,0)
 Q
"RTN","RGHLEXC",160,0)
 ; Delete exception
"RTN","RGHLEXC",161,0)
DELETE S DIK="^RGHL7(991.1,"_RGLOG_","_RGEXC_",",DA(1)=RGLOG D ^DIK
"RTN","RGHLEXC",162,0)
 D DELLOG(RGLOG)
"RTN","RGHLEXC",163,0)
 I $$WORKING^RGUT(.RGSPN) D
"RTN","RGHLEXC",164,0)
 .S RGLOG=0
"RTN","RGHLEXC",165,0)
 .W $$PRMPT^RGED2("Deletion aborted",0)
"RTN","RGHLEXC",166,0)
 S RGLOAD=1
"RTN","RGHLEXC",167,0)
 Q
"RTN","RGHLEXC",168,0)
 ; Delete log entry
"RTN","RGHLEXC",169,0)
DELLOG(RGLOG) ;
"RTN","RGHLEXC",170,0)
 N HLMTIENS,HLMTIEN
"RTN","RGHLEXC",171,0)
 L +^RGHL7(991.1,RGLOG):0
"RTN","RGHLEXC",172,0)
 E  Q
"RTN","RGHLEXC",173,0)
 S HLMTIENS=$P($G(^RGHL7(991.1,RGLOG,0)),U,5)
"RTN","RGHLEXC",174,0)
 S DIK="^RGHL7(991.1,",DA=RGLOG D ^DIK
"RTN","RGHLEXC",175,0)
 I HLMTIENS,'$D(^RGHL7(991.1,"HL7",HLMTIENS)),$$SETPURG^HLUTIL(0)
"RTN","RGHLEXC",176,0)
 L -^RGHL7(991.1,RGLOG)
"RTN","RGHLEXC",177,0)
 Q
"RTN","RGHLEXC",178,0)
 ; Retrieve short text description of exception
"RTN","RGHLEXC",179,0)
EXC(RGEXC,RGTXT) ;
"RTN","RGHLEXC",180,0)
 Q $G(^RGHL7(991.11,+RGEXC,10))_$S($G(RGTXT)="":"",1:": "_RGTXT)
"RTN","RGHLEXC",181,0)
 ; Interactive purge of CIRN HL7 Exception Log
"RTN","RGHLEXC",182,0)
PURGEX N RGDAT,RGOPT
"RTN","RGHLEXC",183,0)
 S RGDAT=$$PRMPT^RGED2("Purge before date: ")
"RTN","RGHLEXC",184,0)
 Q:U[RGDAT
"RTN","RGHLEXC",185,0)
 S X=RGDAT,%DT="P" D ^%DT
"RTN","RGHLEXC",186,0)
 S RGDAT=Y
"RTN","RGHLEXC",187,0)
 I RGDAT<1 W $$PRMPT^RGED2("Illegal date",-1) Q
"RTN","RGHLEXC",188,0)
 S RGOPT=$$PRMPT^RGED2("Preserve entries with exceptions? ",1,"U","YN^")
"RTN","RGHLEXC",189,0)
 Q:U[RGOPT
"RTN","RGHLEXC",190,0)
 W $$PRMPT^RGED2("Purging entries... ",0)
"RTN","RGHLEXC",191,0)
 D PURGE(RGDAT,$S(RGOPT="Y":"EI",1:"I")),LOAD
"RTN","RGHLEXC",192,0)
 Q
"RTN","RGHLEXC",193,0)
 ; Purge exception log
"RTN","RGHLEXC",194,0)
 ; RGDAT = Purge before this date
"RTN","RGHLEXC",195,0)
 ; RGOPT = C: purge only entries marked as completed
"RTN","RGHLEXC",196,0)
 ;         E: preserve entries with exceptions
"RTN","RGHLEXC",197,0)
 ;         I: interactive
"RTN","RGHLEXC",198,0)
PURGE(RGDAT,RGOPT) ;
"RTN","RGHLEXC",199,0)
 N RGLOG,RGSPN
"RTN","RGHLEXC",200,0)
 S RGDAT=$G(RGDAT),RGOPT=$G(RGOPT)
"RTN","RGHLEXC",201,0)
 F  S RGDAT=$O(^RGHL7(991.1,"AD",RGDAT),-1),RGLOG=0 Q:'RGDAT  D
"RTN","RGHLEXC",202,0)
 .F  S RGLOG=$O(^RGHL7(991.1,"AD",RGDAT,RGLOG)) Q:'RGLOG  D  I RGOPT["I",$$WORKING^RGUT(.RGSPN) Q
"RTN","RGHLEXC",203,0)
 ..I RGOPT["E",$O(^RGHL7(991.1,RGLOG,1,0)) Q
"RTN","RGHLEXC",204,0)
 ..I RGOPT["C",$P($G(^RGHL7(991.1,RGLOG,0)),U,4) Q
"RTN","RGHLEXC",205,0)
 ..D DELLOG(RGLOG)
"RTN","RGHLEXC",206,0)
 Q
"RTN","RGHLEXC",207,0)
 ; Reprocess a message from exception log
"RTN","RGHLEXC",208,0)
REPROC(HLMTIENS,RGRTN) ;
"RTN","RGHLEXC",209,0)
 S:$G(RGRTN)="" RGRTN="^RGHL"
"RTN","RGHLEXC",210,0)
 I $$SETPURG^HLUTIL(0)
"RTN","RGHLEXC",211,0)
 I $$REPROC^HLUTIL(HLMTIENS,RGRTN)
"RTN","RGHLEXC",212,0)
 Q
"RTN","RGHLEXC1")
0^6^B1256163
"RTN","RGHLEXC1",1,0)
RGHLEXC1 ;CAIRO/DKM-Generate exception statistics report ;02-Jul-97 11:27
"RTN","RGHLEXC1",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGHLEXC1",3,0)
 ;=================================================================
"RTN","RGHLEXC1",4,0)
 D TITLE^RGRSUTL2("HL7 Message Exception Report")
"RTN","RGHLEXC1",5,0)
 D ^%ZIS
"RTN","RGHLEXC1",6,0)
 G:POP DONE
"RTN","RGHLEXC1",7,0)
 U IO
"RTN","RGHLEXC1",8,0)
 N RGZ,RGZ1,RGZ2,RGP,RGL
"RTN","RGHLEXC1",9,0)
 S RGZ="",RGL=IOSL-5,RGP=0,$Y=999999
"RTN","RGHLEXC1",10,0)
 K ^TMP($J)
"RTN","RGHLEXC1",11,0)
 F  S RGZ=$O(^RGHL7(991.1,"AC",RGZ)) Q:RGZ=""  S ^TMP($J,+$G(^(RGZ)),RGZ)=""
"RTN","RGHLEXC1",12,0)
 F  S RGZ=$O(^TMP($J,RGZ),-1),RGZ1="" Q:'RGZ  D
"RTN","RGHLEXC1",13,0)
 .F  S RGZ1=$O(^TMP($J,RGZ,RGZ1)) Q:RGZ1=""  D
"RTN","RGHLEXC1",14,0)
 ..D:$Y'<RGL PAUSE,TITLE^RGRSUTL2("HL7 Message Exception Report","Page "_RGP)
"RTN","RGHLEXC1",15,0)
 ..W $J(RGZ,8),?10,RGZ1,!
"RTN","RGHLEXC1",16,0)
 D PAUSE:$Y,^%ZISC
"RTN","RGHLEXC1",17,0)
DONE K ^TMP($J)
"RTN","RGHLEXC1",18,0)
 W:IO'=IO(0) @IOF
"RTN","RGHLEXC1",19,0)
 Q
"RTN","RGHLEXC1",20,0)
PAUSE I IO=IO(0),$Y=RGL,$$PAUSE^RGRSUTL2
"RTN","RGHLEXC1",21,0)
 S $Y=0,RGP=RGP+1
"RTN","RGHLEXC1",22,0)
 Q
"RTN","RGHLLOG")
0^7^B6486240
"RTN","RGHLLOG",1,0)
RGHLLOG ;CAIRO/DKM-Log message processing info ;04-Sep-1998
"RTN","RGHLLOG",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGHLLOG",3,0)
 ;=================================================================
"RTN","RGHLLOG",4,0)
 ; Log information about message processing and exceptions
"RTN","RGHLLOG",5,0)
 ; in CIRN HL7 Exception Log file.
"RTN","RGHLLOG",6,0)
 ;=================================================================
"RTN","RGHLLOG",7,0)
 ; Start time for run log
"RTN","RGHLLOG",8,0)
START(RGMSG,RGDC,RGPARAM) ;
"RTN","RGHLLOG",9,0)
 S U="^"
"RTN","RGHLLOG",10,0)
 K RGLOG
"RTN","RGHLLOG",11,0)
 S RGLOG(3)=$G(RGMSG),RGLOG(5)=$G(RGDC),RGLOG(4)=$G(RGPARAM),RGLOG(1)=$$NOW^XLFDT
"RTN","RGHLLOG",12,0)
 I '$P(^RGSITE("COR",1,0),U,8),$$CREATE
"RTN","RGHLLOG",13,0)
 Q
"RTN","RGHLLOG",14,0)
 ; Create a log entry
"RTN","RGHLLOG",15,0)
CREATE() Q:$G(RGLOG) RGLOG
"RTN","RGHLLOG",16,0)
 L +^RGHL7(991.1,0):10
"RTN","RGHLLOG",17,0)
 F RGLOG=1+$O(^RGHL7(991.1,$C(1)),-1):1 L +^RGHL7(991.1,RGLOG):0 I  Q
"RTN","RGHLLOG",18,0)
 S DIC="^RGHL7(991.1,",DIC(0)="FL",DIC("P")="991.1",X=RGLOG
"RTN","RGHLLOG",19,0)
 S Y=".01////^S",DLAYGO=DIC("P")\1
"RTN","RGHLLOG",20,0)
 D ^DIC
"RTN","RGHLLOG",21,0)
 S DIE="RGHL7(991.1,"
"RTN","RGHLLOG",22,0)
 S DR="1///^S X=RGLOG(1);3////^S X=RGLOG(5);4////^S X=RGLOG(4)"
"RTN","RGHLLOG",23,0)
 S DA=RGLOG D ^DIE
"RTN","RGHLLOG",24,0)
 L -^RGHL7(991.1,0)
"RTN","RGHLLOG",25,0)
 Q RGLOG
"RTN","RGHLLOG",26,0)
 ; Log time run completed
"RTN","RGHLLOG",27,0)
STOP(RGQUIT) ;
"RTN","RGHLLOG",28,0)
 Q:'$G(RGLOG)
"RTN","RGHLLOG",29,0)
 S DIE="^RGHL7(991.1,",DR="1.5///NOW;1.6///^S X=$G(RGQUIT)",DA=RGLOG D ^DIE
"RTN","RGHLLOG",30,0)
 L -^RGHL7(991.1,RGLOG)
"RTN","RGHLLOG",31,0)
 Q
"RTN","RGHLLOG",32,0)
 ; Log unclassified exception (old entry point)
"RTN","RGHLLOG",33,0)
ERR(RGERR,RGSEV) ;
"RTN","RGHLLOG",34,0)
 D EXC(18,RGERR)
"RTN","RGHLLOG",35,0)
 S RGQUIT=$G(RGQUIT)!$G(RGSEV)
"RTN","RGHLLOG",36,0)
 Q
"RTN","RGHLLOG",37,0)
 ; Log an exception
"RTN","RGHLLOG",38,0)
 ;   RGEXC = Exception type
"RTN","RGHLLOG",39,0)
 ;   RGERR = Supplemental text
"RTN","RGHLLOG",40,0)
EXC(RGEXC,RGERR) ;
"RTN","RGHLLOG",41,0)
 N RGI,RGZ
"RTN","RGHLLOG",42,0)
 S U="^"
"RTN","RGHLLOG",43,0)
 S:RGEXC[U RGERR=$P(RGEXC,U,2,999),RGEXC=+RGEXC
"RTN","RGHLLOG",44,0)
 S:RGEXC'=+RGEXC RGERR=RGEXC,RGEXC=18
"RTN","RGHLLOG",45,0)
 S:'$D(^RGHL7(991.11,RGEXC)) RGEXC=18
"RTN","RGHLLOG",46,0)
 L +^RGHL7(991.11,RGEXC):10
"RTN","RGHLLOG",47,0)
 S RGZ=$G(^RGHL7(991.11,RGEXC,0))
"RTN","RGHLLOG",48,0)
 S:$L(RGZ) $P(^RGHL7(991.11,RGEXC,0),U,5)=$P(RGZ,U,5)+1
"RTN","RGHLLOG",49,0)
 S:$P(RGZ,U,2)>1 RGQUIT=1
"RTN","RGHLLOG",50,0)
 L -^RGHL7(991.11,RGEXC)
"RTN","RGHLLOG",51,0)
 S RGLOG=$$CREATE,RGI=$O(^RGHL7(991.1,RGLOG,1,$C(1)),-1)+1,RGERR=$E($G(RGERR),1,240)
"RTN","RGHLLOG",52,0)
 S DIC="^RGHL7(991.1,"_RGLOG_",1,"
"RTN","RGHLLOG",53,0)
 S X=RGI,DA(1)=RGLOG,DIC(0)="FL",DIC("P")="991.12"
"RTN","RGHLLOG",54,0)
 D ^DIC
"RTN","RGHLLOG",55,0)
 S DIE=DIC
"RTN","RGHLLOG",56,0)
 S DA=RGI,DR="1///^S X=$G(RGLN);2///^S X=RGEXC;10///^S X=RGERR"
"RTN","RGHLLOG",57,0)
 D ^DIE
"RTN","RGHLLOG",58,0)
 S RGI=$P(RGZ,U,3),RGZ=$P(RGZ,U,4)
"RTN","RGHLLOG",59,0)
 Q:'RGI!'RGZ
"RTN","RGHLLOG",60,0)
 S DIC="^XMB(3.8,",DIC(0)="NZ",X="`"_RGZ D ^DIC K DIC Q:+Y<1  S RGZ=$P(Y,U,2) K Y
"RTN","RGHLLOG",61,0)
 Q:RGZ=""!$P($G(^RGSITE("COR",1,0)),U,7)
"RTN","RGHLLOG",62,0)
 S RGERR=$$EXC^RGHLEXC(RGEXC,RGERR),RGZ="G."_RGZ
"RTN","RGHLLOG",63,0)
 I RGI=2 D ALERT^RGRSUTL2(RGERR,RGZ) Q
"RTN","RGHLLOG",64,0)
 D MAIL^RGRSUTL2(RGERR,RGZ,"CIRN Exception: "_$$EXC^RGHLEXC(RGEXC),"HL7 Msg#"_$G(HL("MID")))
"RTN","RGHLLOG",65,0)
 Q
"RTN","RGHLPOST")
0^21^B214401
"RTN","RGHLPOST",1,0)
RGHLPOST ;CAIRO/DKM-CIRN Messaging Build Postinit ;19-Dec-97
"RTN","RGHLPOST",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGHLPOST",3,0)
 ;=================================================================
"RTN","RGHLPOST",4,0)
 ;cairo's stuff
"RTN","RGHLPOST",5,0)
 W !!
"RTN","RGHLPOST",6,0)
 X ^%ZOSF("EON"),^%ZOSF("TRMOFF")
"RTN","RGHLPOST",7,0)
 I $P($G(^RGSITE("COR",1,"TZ")),U)="",$$^RGMSCDIC(990.8,"1|<;10;11")
"RTN","RGHLPOST",8,0)
 Q
"RTN","RGHLPOST",9,0)
 ;
"RTN","RGHLUT")
0^8^B11985843
"RTN","RGHLUT",1,0)
RGHLUT ;CAIRO/DKM-HL7 message processing utilities ;04-Sep-1998
"RTN","RGHLUT",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGHLUT",3,0)
 ;=================================================================
"RTN","RGHLUT",4,0)
 ; Converts HL7 style date/time to FileMan format.
"RTN","RGHLUT",5,0)
DTHF(RGDT) ;
"RTN","RGHLUT",6,0)
 Q:RGDT="" ""
"RTN","RGHLUT",7,0)
 Q $$FMDATE^HLFNC(RGDT)
"RTN","RGHLUT",8,0)
 ; Converts Fileman style date/time to HL7 format.
"RTN","RGHLUT",9,0)
DTFH(RGDT,RGTZ) ;
"RTN","RGHLUT",10,0)
 Q:RGDT="" ""
"RTN","RGHLUT",11,0)
 S RGTZ=$S('(RGDT#1):"",$G(RGTZ):$$TZ(RGDT,1),1:"")
"RTN","RGHLUT",12,0)
 S:RGDT>1 RGDT=RGDT+17000000
"RTN","RGHLUT",13,0)
 S:RGDT#1 RGDT=RGDT*10000
"RTN","RGHLUT",14,0)
 S:RGDT#1 RGDT=RGDT*100\1
"RTN","RGHLUT",15,0)
 Q RGDT_RGTZ
"RTN","RGHLUT",16,0)
 ; Get time zone offset for this site
"RTN","RGHLUT",17,0)
TZ(RGDT,RGHL) ;
"RTN","RGHLUT",18,0)
 N RGTZ,RGSN
"RTN","RGHLUT",19,0)
 S RGTZ=$P($G(^RGSITE("COR",1,"TZ")),U,1+$$ISDST(.RGDT))
"RTN","RGHLUT",20,0)
 S:'RGTZ RGTZ=+$G(^RGSITE("COR",1,"TZ"))
"RTN","RGHLUT",21,0)
 S RGTZ=$P($G(^XMB(4.4,RGTZ,0)),U,3)
"RTN","RGHLUT",22,0)
 Q:RGTZ=""!'$G(RGHL) RGTZ
"RTN","RGHLUT",23,0)
 I RGTZ<0 S RGSN="-",RGTZ=-RGTZ
"RTN","RGHLUT",24,0)
 E  S RGSN="+"
"RTN","RGHLUT",25,0)
 Q RGSN_$E(RGTZ\1+100,2,3)_$E(RGTZ#1*60\1+100,2,3)
"RTN","RGHLUT",26,0)
 ; Determine if FM date is during DST
"RTN","RGHLUT",27,0)
ISDST(RGDAT) ;
"RTN","RGHLUT",28,0)
 N RGD1,RGD2,RGDY,RGYR
"RTN","RGHLUT",29,0)
 S:'$G(RGDAT) RGDAT=$$NOW^XLFDT
"RTN","RGHLUT",30,0)
 S RGYR=RGDAT\10000*10000
"RTN","RGHLUT",31,0)
 ; Find first Sunday in April of target year
"RTN","RGHLUT",32,0)
 S RGD1=+$$FMTH^XLFDT(RGYR+401),RGDY=RGD1#7
"RTN","RGHLUT",33,0)
 S RGD1=$$HTFM^XLFDT(RGD1+$S(RGDY>3:10-RGDY,1:3-RGDY))+.02
"RTN","RGHLUT",34,0)
 ; Find last Sunday in October of target year
"RTN","RGHLUT",35,0)
 S RGD2=+$$FMTH^XLFDT(RGYR+1031),RGDY=RGD2#7
"RTN","RGHLUT",36,0)
 S RGD2=$$HTFM^XLFDT(RGD2-$S(RGDY=3:0,RGDY>3:RGDY-3,1:4+RGDY))+.02
"RTN","RGHLUT",37,0)
 Q RGDAT'<RGD1&(RGDAT<RGD2)
"RTN","RGHLUT",38,0)
 ; Get ICN (convert if old format)
"RTN","RGHLUT",39,0)
GETICN(RGDFN) ;
"RTN","RGHLUT",40,0)
 S RGDFN=$$GETICN^MPIF001(RGDFN)
"RTN","RGHLUT",41,0)
 Q $S(RGDFN?1.N1"^"1.N:$TR(RGDFN,U,"V"),1:RGDFN)
"RTN","RGHLUT",42,0)
 ; Get DFN from ICN
"RTN","RGHLUT",43,0)
ICN2DFN(RGICN,RGCHK) ;
"RTN","RGHLUT",44,0)
 N RGDFN
"RTN","RGHLUT",45,0)
 S RGDFN=$$GETDFN^MPIF001(RGICN)
"RTN","RGHLUT",46,0)
 I RGDFN>0,$D(RGCHK) D
"RTN","RGHLUT",47,0)
 .S RGICN=$$GETICN(RGDFN)
"RTN","RGHLUT",48,0)
 .S RGDFN=$S(RGICN<0:RGICN,+$P(RGICN,"V",2)'=+RGCHK:"-1^INVALID ICN CHECKSUM",1:RGDFN)
"RTN","RGHLUT",49,0)
 Q RGDFN
"RTN","RGHLUT",50,0)
 ; Lookup institution, returning IEN
"RTN","RGHLUT",51,0)
INST(RGINST) ;
"RTN","RGHLUT",52,0)
 Q +$$FIND1^DIC(4,,"MX",RGINST)
"RTN","RGHLUT",53,0)
 ; Convert HL7 suffix code to attribute
"RTN","RGHLUT",54,0)
SFX2ATR(RGSFX) ;
"RTN","RGHLUT",55,0)
 Q:'$L(RGSFX) ""
"RTN","RGHLUT",56,0)
 S:RGSFX'=+RGSFX RGSFX=+$O(^RGHL7(991.7,"B",RGSFX,0))
"RTN","RGHLUT",57,0)
 Q $S(RGSFX:$P(^RGHL7(991.7,RGSFX,0),U,2),1:"")
"RTN","RGHLUT",58,0)
 ; HL7 <==> COR flag conversion
"RTN","RGHLUT",59,0)
FLG(RGFLG,RGDLM,RGHL) ;
"RTN","RGHLUT",60,0)
 N RGZ,RGC,RGR
"RTN","RGHLUT",61,0)
 S RGHL=''$G(RGHL),RGR=""
"RTN","RGHLUT",62,0)
 F RGZ=1:1:$S(RGHL:$L(RGFLG,RGDLM),1:$L(RGFLG)) D
"RTN","RGHLUT",63,0)
 .S RGC=$S(RGHL:$P(RGFLG,RGDLM,RGZ),1:$E(RGFLG,RGZ))
"RTN","RGHLUT",64,0)
 .Q:RGC=""
"RTN","RGHLUT",65,0)
 .S RGC=$O(^RGHL7(991.2,$S(RGHL:"B",1:"AC"),RGC,0))
"RTN","RGHLUT",66,0)
 .Q:'RGC
"RTN","RGHLUT",67,0)
 .S RGC=$P(^RGHL7(991.2,RGC,0),U,RGHL+1)
"RTN","RGHLUT",68,0)
 .S:RGC'="" RGR=RGR_$S(RGR="":"",RGHL:"",1:RGDLM)_RGC
"RTN","RGHLUT",69,0)
 Q RGR
"RTN","RGHLUT",70,0)
 ; Parse fields from RGREC into target array RGFLD using delimiter RGD.
"RTN","RGHLUT",71,0)
 ; RGREC and RGFLD must be passed by reference.
"RTN","RGHLUT",72,0)
FLD(RGREC,RGFLD,RGD) ;
"RTN","RGHLUT",73,0)
 N RGG,RGZ,RGI,RGJ,RGC
"RTN","RGHLUT",74,0)
 K RGFLD
"RTN","RGHLUT",75,0)
 S RGG="RGREC",RGC=0
"RTN","RGHLUT",76,0)
 F  D  Q:RGG=""
"RTN","RGHLUT",77,0)
 .S RGZ=$G(@RGG),RGJ=$L(RGZ,RGD)
"RTN","RGHLUT",78,0)
 .F RGI=1:1:RGJ S RGFLD(RGC)=$G(RGFLD(RGC))_$P(RGZ,RGD,RGI),RGC=RGC+(RGI'=RGJ)
"RTN","RGHLUT",79,0)
 .S RGG=$Q(@RGG)
"RTN","RGHLUT",80,0)
 Q
"RTN","RGHLUT",81,0)
 ; Parse MSH header
"RTN","RGHLUT",82,0)
MSH(RGMSH,RGARY) ;
"RTN","RGHLUT",83,0)
 N RGZ
"RTN","RGHLUT",84,0)
 Q:$E(RGMSH,1,3)'="MSH" 0
"RTN","RGHLUT",85,0)
 S RGARY("FS")=$E(RGMSH,4)
"RTN","RGHLUT",86,0)
 F RGZ=2:1:7,9:1:12 D
"RTN","RGHLUT",87,0)
 .S RGARY($P("^ECH^SAN^SAF^RAN^RAF^DTM^^MTN^MID^PID^VER",U,RGZ))=$P(RGMSH,RGARY("FS"),RGZ)
"RTN","RGHLUT",88,0)
 S RGZ=$E(RGARY("ECH")),RGARY("ETN")=$P(RGARY("MTN"),RGZ,2),RGARY("MTN")=$P(RGARY("MTN"),RGZ)
"RTN","RGHLUT",89,0)
 Q 1
"RTN","RGHLUT",90,0)
 ; Convert HL7 escape codes
"RTN","RGHLUT",91,0)
ESCAPE(RGTXT) ;
"RTN","RGHLUT",92,0)
 N RGZ,RGRTN
"RTN","RGHLUT",93,0)
 S RGRTN=""
"RTN","RGHLUT",94,0)
 F  Q:RGTXT'[RGD(4)  D
"RTN","RGHLUT",95,0)
 .S RGRTN=RGRTN_$P(RGTXT,RGD(4)),RGZ=$P(RGTXT,RGD(4),2),RGTXT=$P(RGTXT,RGD(4),3,999)
"RTN","RGHLUT",96,0)
 .I $L(RGZ)=1 D
"RTN","RGHLUT",97,0)
 ..S RGZ1=$F("FSRET",RGZ)-1
"RTN","RGHLUT",98,0)
 ..S:RGZ1>0 RGRTN=RGRTN_RGD(RGZ1)
"RTN","RGHLUT",99,0)
 .E  I $E(RGZ)="X" D
"RTN","RGHLUT",100,0)
 ..F RGZ1=2:2:$L(RGZ) S RGRTN=RGRTN_$C($$BASE^XLFUTL($E(RGZ,RGZ1,RGZ1+1),16,10))
"RTN","RGHLUT",101,0)
 Q RGRTN_RGTXT
"RTN","RGHOUT")
0^9^B41871664
"RTN","RGHOUT",1,0)
RGHOUT ;CAIRO/DKM-HL7 message generation utilities ;14-Oct-1998
"RTN","RGHOUT",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGHOUT",3,0)
 ;=================================================================
"RTN","RGHOUT",4,0)
 ; Initialize
"RTN","RGHOUT",5,0)
INIT(RGEP,HL,RGD,RGERR,RGSB) ;
"RTN","RGHOUT",6,0)
 K HL,RGD
"RTN","RGHOUT",7,0)
 D INIT^HLFNC2(RGEP,.HL)
"RTN","RGHOUT",8,0)
 I $G(HL) S RGERR=$P(HL,U,2) Q +HL
"RTN","RGHOUT",9,0)
 S RGD(1)=HL("FS"),HL("RGSB")=$G(RGSB,"HLS")
"RTN","RGHOUT",10,0)
 F RGD=2:1:5 S RGD(RGD)=$E(HL("ECH"),RGD-1)
"RTN","RGHOUT",11,0)
 K ^TMP("HLS",$J)
"RTN","RGHOUT",12,0)
 Q 0
"RTN","RGHOUT",13,0)
 ; Hand off completed message
"RTN","RGHOUT",14,0)
SEND(RGEP,HL,RGERR) ;
"RTN","RGHOUT",15,0)
 N RGZ
"RTN","RGHOUT",16,0)
 D GENERATE^HLMA(RGEP,"GM",1,.RGZ,"",.HL)
"RTN","RGHOUT",17,0)
 K ^TMP("HLS",$J)
"RTN","RGHOUT",18,0)
 S:$P($G(RGZ),U,2) RGERR=$P(RGZ,U,3)
"RTN","RGHOUT",19,0)
 Q
"RTN","RGHOUT",20,0)
 ; Send acknowledgment
"RTN","RGHOUT",21,0)
ACK(RGEP,RGCL,RGMSG,RGERR) ;
"RTN","RGHOUT",22,0)
 N RGZ
"RTN","RGHOUT",23,0)
 D GENACK^HLMA1($$PROIEN(RGEP),RGMSG,$$PROIEN(RGCL),"GM",1,.RGZ)
"RTN","RGHOUT",24,0)
 K ^TMP("HLA",$J)
"RTN","RGHOUT",25,0)
 S:$G(RGZ) RGERR=$P(RGZ,U,$L(RGZ,U))
"RTN","RGHOUT",26,0)
 Q
"RTN","RGHOUT",27,0)
 ; Build a segment from a local array and add to stream.
"RTN","RGHOUT",28,0)
 ; This code makes heavy use of naked reference to output global.
"RTN","RGHOUT",29,0)
SEG(RGTYPE,RGSEG,RGK) ;
"RTN","RGHOUT",30,0)
 N RGPC,RGPC0,RGPC1,RGPC2,RGF,RGN,RGS
"RTN","RGHOUT",31,0)
 S RGS=RGTYPE,RGF=1,RGN=+$O(^TMP($G(HL("RGSB"),"HLS"),$J,""),-1)
"RTN","RGHOUT",32,0)
 F RGPC0=1:1:$O(RGSEG($C(1)),-1) D
"RTN","RGHOUT",33,0)
 .S RGPC=RGPC0
"RTN","RGHOUT",34,0)
 .F  D  Q:RGPC\1'=RGPC0
"RTN","RGHOUT",35,0)
 ..D SEGA("RGSEG(RGPC)",$S(RGPC0=RGPC:1,1:3),0)
"RTN","RGHOUT",36,0)
 ..D:$D(RGSEG(RGPC))>9 SEG1
"RTN","RGHOUT",37,0)
 ..S RGPC=$O(RGSEG(RGPC))
"RTN","RGHOUT",38,0)
 D:$L(RGS) SEGX("",0,1)
"RTN","RGHOUT",39,0)
 K:$G(RGK) RGSEG
"RTN","RGHOUT",40,0)
 Q
"RTN","RGHOUT",41,0)
SEG1 F RGPC1=1:1:$O(RGSEG(RGPC,$C(1)),-1) D
"RTN","RGHOUT",42,0)
 .D SEGA("RGSEG(RGPC,RGPC1)",2,RGPC1=1)
"RTN","RGHOUT",43,0)
 .D:$D(RGSEG(RGPC,RGPC1))>9 SEG2
"RTN","RGHOUT",44,0)
 Q
"RTN","RGHOUT",45,0)
SEG2 F RGPC2=1:1:$O(RGSEG(RGPC,RGPC1,$C(1)),-1) D
"RTN","RGHOUT",46,0)
 .D SEGA("RGSEG(RGPC,RGPC1,RGPC2)",5,RGPC2=1)
"RTN","RGHOUT",47,0)
 Q
"RTN","RGHOUT",48,0)
SEGA(RGG,RGP,RGT) ;
"RTN","RGHOUT",49,0)
 D SEGX($G(@RGG),RGP,RGT)
"RTN","RGHOUT",50,0)
 F RGP=0:0 S RGP=$O(@RGG@(0,RGP)) Q:'RGP  D SEGX(@RGG@(0,RGP),1,1)
"RTN","RGHOUT",51,0)
 Q
"RTN","RGHOUT",52,0)
SEGX(RGX,RGP,RGT) ;
"RTN","RGHOUT",53,0)
 S:'RGT RGX=RGD(RGP)_RGX
"RTN","RGHOUT",54,0)
 S RGT=200-$L(RGS),RGS=RGS_$E(RGX,1,RGT),RGX=$E(RGX,RGT+1,99999)
"RTN","RGHOUT",55,0)
 I $L(RGX)!'RGP D
"RTN","RGHOUT",56,0)
 .S RGN=RGN+1,^TMP($G(HL("RGSB"),"HLS"),$J,RGN)=RGS,RGS="" S:RGF RGF=0,RGN=+$O(^(RGN,0))
"RTN","RGHOUT",57,0)
 .D:RGP SEGX(RGX,1,1)
"RTN","RGHOUT",58,0)
 Q
"RTN","RGHOUT",59,0)
 ; Build brief PID segment
"RTN","RGHOUT",60,0)
PID(RGDFN) ;
"RTN","RGHOUT",61,0)
 N RGPID,RGS,RGZ,RGZ1,RGZ2
"RTN","RGHOUT",62,0)
 S RGZ=^DPT(RGDFN,0),RGZ2=$P(RGZ,U),RGZ1=$P(RGZ2,","),RGZ2=$P(RGZ2,",",2)
"RTN","RGHOUT",63,0)
 S RGPID(5,1)=RGZ1,RGPID(5,2)=$P(RGZ2," "),RGPID(5,3)=$P(RGZ2," ",2,99)
"RTN","RGHOUT",64,0)
 S RGPID(7)=$$DTFH^RGHLUT($P(RGZ,U,3))
"RTN","RGHOUT",65,0)
 S RGPID(19)=$P(RGZ,U,9)
"RTN","RGHOUT",66,0)
 S RGZ=$$GETICN^RGHLUT(RGDFN)
"RTN","RGHOUT",67,0)
 S:RGZ'<0 RGPID(2,1)=+RGZ,RGPID(2,2)=$P(RGZ,"V",2)
"RTN","RGHOUT",68,0)
 D SEG("PID",.RGPID)
"RTN","RGHOUT",69,0)
 Q
"RTN","RGHOUT",70,0)
 ; Build PV1 segment from visit IEN
"RTN","RGHOUT",71,0)
PV1(RGV,RGDFN,RGF) ;
"RTN","RGHOUT",72,0)
 N RGSEG,RGZ,RGZ1,RGZ2,RGSC
"RTN","RGHOUT",73,0)
 Q:'RGV
"RTN","RGHOUT",74,0)
 L +^AUPNVSIT(RGV):10 I '$T Q
"RTN","RGHOUT",75,0)
 I '$$FIND1^DIC(9000010,,"X","`"_RGV) D UNLCK Q
"RTN","RGHOUT",76,0)
 K RGZ
"RTN","RGHOUT",77,0)
 S RGZ(1)=+$$GET1^DIQ(9000010,RGV,.01,"I")
"RTN","RGHOUT",78,0)
 S RGZ(5)=$$GET1^DIQ(9000010,RGV,.05,"I")
"RTN","RGHOUT",79,0)
 S RGZ(6)=$$GET1^DIQ(9000010,RGV,.06,"I")
"RTN","RGHOUT",80,0)
 S RGZ(18)=$$GET1^DIQ(9000010,RGV,.18,"I")
"RTN","RGHOUT",81,0)
 S RGZ(150,2)=$$GET1^DIQ(9000010,RGV,15002,"I")
"RTN","RGHOUT",82,0)
 S RGZ(150,3)=$$GET1^DIQ(9000010,RGV,15003,"I")
"RTN","RGHOUT",83,0)
 I $G(RGDFN),RGZ(5)'=RGDFN D UNLCK Q
"RTN","RGHOUT",84,0)
 S RGZ=$$GET1^DIQ(9000010,RGV,.12,"I")
"RTN","RGHOUT",85,0)
 I RGZ,RGZ'=RGV D PV1(RGZ,.RGDFN) D UNLCK Q
"RTN","RGHOUT",86,0)
 Q:RGZ(150,3)'="P"
"RTN","RGHOUT",87,0)
 S RGSEG(50)=$$GET1^DIQ(9000010,RGV,15001,"I")
"RTN","RGHOUT",88,0)
 I $G(RGF) D SEG("PV1",.RGSEG) D UNLCK Q
"RTN","RGHOUT",89,0)
 S RGSC=+$$GET1^DIQ(9000010,RGV,.22,"I")
"RTN","RGHOUT",90,0)
 S RGSEG(2)=$S($G(RGZ(150,2)):"I",1:"O")
"RTN","RGHOUT",91,0)
 S RGSEG(3,1)=$$GET1^DIQ(44,RGSC_",",.01)
"RTN","RGHOUT",92,0)
 S RGSEG(3,4)=$$GET1^DIQ(4,RGZ(6)_",",99)
"RTN","RGHOUT",93,0)
 S RGSEG(44)=$$DTFH^RGHLUT(RGZ(1),1)
"RTN","RGHOUT",94,0)
 S RGSEG(45)=$$DTFH^RGHLUT(RGZ(18),1)
"RTN","RGHOUT",95,0)
 S RGZ2=0
"RTN","RGHOUT",96,0)
 F RGZ=0:0 S RGZ=$O(^AUPNVPRV("AD",RGV,RGZ)) Q:'RGZ  D
"RTN","RGHOUT",97,0)
 .S RGZ1(1)=$$GET1^DIQ(9000010.06,RGZ,.01,"I")
"RTN","RGHOUT",98,0)
 .S RGZ1(3)=$$GET1^DIQ(9000010.06,RGZ,.03,"I")
"RTN","RGHOUT",99,0)
 .S RGZ1(4)=$$GET1^DIQ(9000010.06,RGZ,.04,"I")
"RTN","RGHOUT",100,0)
 .Q:RGZ1(3)'=RGV
"RTN","RGHOUT",101,0)
 .I RGZ1(4)="P",'$D(RGSEG(7)) S RGSEG(7)=$$PRV(+RGZ1(1))
"RTN","RGHOUT",102,0)
 .E  S RGSEG(9+RGZ2)=$$PRV(+RGZ1(1)),RGZ2=RGZ2+.00001
"RTN","RGHOUT",103,0)
 D SEG("PV1",.RGSEG,1)
"RTN","RGHOUT",104,0)
 I RGSC D
"RTN","RGHOUT",105,0)
 .I $T(CODE^RGHOMAP)]"" S RGSEG(2)=$TR($$CODE^RGHOMAP(44,RGSC),U,RGD(2))
"RTN","RGHOUT",106,0)
 .D:$L(RGSEG(2)) SEG("PV2",.RGSEG)
"RTN","RGHOUT",107,0)
UNLCK L -^AUPNVSIT(RGV)
"RTN","RGHOUT",108,0)
 Q
"RTN","RGHOUT",109,0)
 ; Build ORC segment
"RTN","RGHOUT",110,0)
ORC(RGODAT,RGPRV,RGSTATUS,RGINST) ;
"RTN","RGHOUT",111,0)
 N RGORC
"RTN","RGHOUT",112,0)
 S RGORC(5)=$G(RGSTATUS)
"RTN","RGHOUT",113,0)
 S RGORC(9)=$$DTFH^RGHLUT(RGODAT,1)
"RTN","RGHOUT",114,0)
 S RGORC(12)=$$PRV(.RGPRV)
"RTN","RGHOUT",115,0)
 S:$G(RGINST) RGORC(17)=$$INST(RGINST)
"RTN","RGHOUT",116,0)
 D SEG("ORC",.RGORC)
"RTN","RGHOUT",117,0)
 Q
"RTN","RGHOUT",118,0)
 ; Build OBR segment
"RTN","RGHOUT",119,0)
OBR(RGODAT,RGSRC,RGPRV,RGNS,RGFON,RGUDAT) ;
"RTN","RGHOUT",120,0)
 N RGOBR
"RTN","RGHOUT",121,0)
 S:$G(RGFON)'="" RGOBR(3,1)=RGFON
"RTN","RGHOUT",122,0)
 S:$G(RGNS)'="" RGOBR(3,2)=RGNS
"RTN","RGHOUT",123,0)
 S:$G(RGODAT) RGOBR(7)=$$DTFH^RGHLUT(RGODAT,1)
"RTN","RGHOUT",124,0)
 S:$G(RGSRC) RGOBR(15)=$$SNM(RGSRC,61)
"RTN","RGHOUT",125,0)
 S:$G(RGPRV) RGOBR(16)=$$PRV(.RGPRV)
"RTN","RGHOUT",126,0)
 S:$G(RGUDAT) RGOBR(22)=$$DTFH^RGHLUT(RGUDAT,1)
"RTN","RGHOUT",127,0)
 D SEG("OBR",.RGOBR)
"RTN","RGHOUT",128,0)
 Q
"RTN","RGHOUT",129,0)
 ; Build OBX segment
"RTN","RGHOUT",130,0)
OBX(RGCODE,RGVAL,RGUNITS,RGSTAT,RGSEQ,RGSID,RGLO,RGHI,RGFLG) ;
"RTN","RGHOUT",131,0)
 Q:RGVAL=""
"RTN","RGHOUT",132,0)
 N RGOBX
"RTN","RGHOUT",133,0)
 S RGOBX(1)=$G(RGSEQ)
"RTN","RGHOUT",134,0)
 S RGOBX(2)=$S(RGVAL[RGD(2):"CE",RGVAL=+RGVAL:"NM",1:"ST")
"RTN","RGHOUT",135,0)
 S RGOBX(3)=$TR(RGCODE,U,RGD(2)),RGOBX(4)=$G(RGSID),RGOBX(5)=RGVAL
"RTN","RGHOUT",136,0)
 S:$G(RGUNITS)'="" RGOBX(6)=RGUNITS
"RTN","RGHOUT",137,0)
 S:$G(RGFLG)'="" RGOBX(8)=RGFLG
"RTN","RGHOUT",138,0)
 S:$G(RGSTAT)'="" RGOBX(11)=RGSTAT
"RTN","RGHOUT",139,0)
 S:$G(RGLO)'="" RGOBX(7)=RGLO
"RTN","RGHOUT",140,0)
 S:$G(RGHI)'="" $P(RGOBX(7),"-",2)=RGHI
"RTN","RGHOUT",141,0)
 D SEG("OBX",.RGOBX)
"RTN","RGHOUT",142,0)
 Q
"RTN","RGHOUT",143,0)
 ; Convert imbedded reserved characters to escape format
"RTN","RGHOUT",144,0)
ESCAPE(RGTXT) ;
"RTN","RGHOUT",145,0)
 N RGZ,RGZ1,RGX,RGC,RGA,RGRTN
"RTN","RGHOUT",146,0)
 S (RGX,RGRTN)=""
"RTN","RGHOUT",147,0)
 F RGZ=1:1:5 S RGX=RGX_RGD(RGZ)
"RTN","RGHOUT",148,0)
 F RGZ=1:1:$L(RGTXT) D
"RTN","RGHOUT",149,0)
 .S RGC=$E(RGTXT,RGZ),RGA=$A(RGC),RGZ1=$F(RGX,RGC)-1
"RTN","RGHOUT",150,0)
 .I RGZ1>0 S RGRTN=RGRTN_RGD(4)_$E("FSRET",RGZ1)_RGD(4)
"RTN","RGHOUT",151,0)
 .E  I RGA>31,RGA<127 S RGRTN=RGRTN_RGC
"RTN","RGHOUT",152,0)
 .E  S RGRTN=RGRTN_RGD(4)_"X"_$$BASE^RGRSUTL2(RGA,16,2)_RGD(4)
"RTN","RGHOUT",153,0)
 Q RGRTN
"RTN","RGHOUT",154,0)
 ; Get routing info for domain/institution
"RTN","RGHOUT",155,0)
LINK(RGDI,RGCL,RGF) ;
"RTN","RGHOUT",156,0)
 N RGZ,RGLL
"RTN","RGHOUT",157,0)
 D LINK^HLUTIL3(RGDI,.RGLL,.RGF)
"RTN","RGHOUT",158,0)
 S RGZ=$O(HLL("LINKS",$C(1)),-1)
"RTN","RGHOUT",159,0)
 F RGLL=0:0 S RGLL=$O(RGLL(RGLL)) Q:'RGLL  S RGZ=RGZ+1,HLL("LINKS",RGZ)=RGCL_U_RGLL(RGLL)
"RTN","RGHOUT",160,0)
 Q
"RTN","RGHOUT",161,0)
 ; Get protocol IEN
"RTN","RGHOUT",162,0)
PROIEN(RGPR) ;
"RTN","RGHOUT",163,0)
 Q $S(RGPR="":0,RGPR=+RGPR:RGPR,1:$O(^ORD(101,"B",RGPR,0)))
"RTN","RGHOUT",164,0)
 ; Universal provider ID
"RTN","RGHOUT",165,0)
PRV(RGPRV) ;
"RTN","RGHOUT",166,0)
 N RGID,RGZ,USR
"RTN","RGHOUT",167,0)
 D GETS^DIQ(200,RGPRV,".01;9","I","USR")
"RTN","RGHOUT",168,0)
 I $D(USR(200,RGPRV_",",.01,"I")) D
"RTN","RGHOUT",169,0)
 .S RGZ=USR(200,RGPRV_",",.01,"I"),RGID=USR(200,RGPRV_",",9,"I")
"RTN","RGHOUT",170,0)
 .S RGID=RGID_RGD(2)_$P(RGZ,",")_RGD(2)
"RTN","RGHOUT",171,0)
 .S RGZ=$P(RGZ,",",2,99)
"RTN","RGHOUT",172,0)
 .S RGID=RGID_$P(RGZ," ")_RGD(2)_$P(RGZ," ",2)_RGD(2)_$P(RGZ," ",3,99)
"RTN","RGHOUT",173,0)
 Q $G(RGID)
"RTN","RGHOUT",174,0)
 ; SNOMED pointer --> HL7 CE format
"RTN","RGHOUT",175,0)
SNM(RGSNM,RGFN) ;
"RTN","RGHOUT",176,0)
 S RGSNM=$G(^LAB(RGFN,+RGSNM,0))
"RTN","RGHOUT",177,0)
 Q $S($P(RGSNM,U,2)="":"",1:$E("TMEFDPJ",RGFN-61*10+1)_"-"_$P(RGSNM,U,2)_RGD(2)_$P(RGSNM,U)_RGD(2)_"SNM")
"RTN","RGHOUT",178,0)
 ; Return CPT4 coded element with optional subid attached
"RTN","RGHOUT",179,0)
CPT(RGCPT,RGID) ;
"RTN","RGHOUT",180,0)
 N RGZ
"RTN","RGHOUT",181,0)
 S RGZ=$$CPT^ICPTCOD(+RGCPT)
"RTN","RGHOUT",182,0)
 Q $S(+RGZ<1:"",1:$$SFX($P(RGZ,U)_RGD(2)_$P(RGZ,U,2)_RGD(2)_"C4",.RGID))
"RTN","RGHOUT",183,0)
 ; Return institution in CE format
"RTN","RGHOUT",184,0)
INST(RGINST) ;
"RTN","RGHOUT",185,0)
 Q $S(RGINST:$$GET1^DIQ(4,+RGINST_",",99)_RGD(2)_$$GET1^DIQ(4,+RGINST_",",.01)_RGD(2)_99002,1:"")
"RTN","RGHOUT",186,0)
 ; Add a suffix to a code
"RTN","RGHOUT",187,0)
SFX(RGCODE,RGSFX) ;
"RTN","RGHOUT",188,0)
 Q $S(RGCODE="":"",$G(RGSFX)="":RGCODE,1:$P(RGCODE,RGD(2))_RGD(5)_RGSFX_RGD(2)_$P(RGCODE,RGD(2),2,99))
"RTN","RGHOUT",189,0)
 ; Format line from WP field
"RTN","RGHOUT",190,0)
WP(RGTXT) ;
"RTN","RGHOUT",191,0)
 F  Q:RGTXT'["|"  S RGTXT=$P(RGTXT,"|")_$P(RGTXT,"|",3,999)
"RTN","RGHOUT",192,0)
 Q $$ESCAPE(RGTXT)
"RTN","RGJCREC")
0^20^B31727575
"RTN","RGJCREC",1,0)
RGJCREC ;SF/JC,LTL-CIRN SUBSCRIPTION PROCESSOR ;05/12/98
"RTN","RGJCREC",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGJCREC",3,0)
 ;TS added kills to RGLL 3-27-98 ;added exception handling
"RTN","RGJCREC",4,0)
REC ;Receive inbound CIRN Subscription request
"RTN","RGJCREC",5,0)
 ;Read in message for file 774 Master File Update
"RTN","RGJCREC",6,0)
 ;
"RTN","RGJCREC",7,0)
 ;CML - Temporary setting of ^XTMP("RGJCREC", will pull code after
"RTN","RGJCREC",8,0)
 ;exception handler
"RTN","RGJCREC",9,0)
 K RGS,RGSEG,RGFS,RGCS,RGEC,RGSS,RGFILE,RGACT,RGCD,RGID,RGICN,RGSSN,RGPN,RGLL,RGTP,RGAD,RGTD,RGRAP,RGCMOR,RGDFN,RGPPFI,RGSCN,RGCURI,RGFROM,RGTO,RGSTUB,RGAD1,RGL,RGRC
"RTN","RGJCREC",10,0)
 N RGLOG,RGMTXT,X D START^RGHLLOG(,"SCN_REQ","")
"RTN","RGJCREC",11,0)
 ;
"RTN","RGJCREC",12,0)
 S RGS="",U="^"
"RTN","RGJCREC",13,0)
 F I=1:1 X HLNEXT Q:HLQUIT'>0  S RGS(I)=HLNODE D
"RTN","RGJCREC",14,0)
 .S J=0 F  S J=$O(HLNODE(J)) Q:'J  S RGS(I,J)=HLNODE(J)
"RTN","RGJCREC",15,0)
 K RGLL ;TS 3-27-98
"RTN","RGJCREC",16,0)
 D PARS
"RTN","RGJCREC",17,0)
 I $D(RGFILE) Q:RGFILE'=774
"RTN","RGJCREC",18,0)
 ;Pt DFN
"RTN","RGJCREC",19,0)
 S RGDFN=$$GETDFN^MPIF001(+RGICN)
"RTN","RGJCREC",20,0)
 Q:+$$SEND2^VAFCUTL1(RGDFN,"T")  ;don't process test patients
"RTN","RGJCREC",21,0)
 ;Validate DFN/ICN/SSN on receiving system
"RTN","RGJCREC",22,0)
 ;I RGDFN'>0 S ^XTMP("RGJCREC","BAD DFN",RGICN)="" Q
"RTN","RGJCREC",23,0)
 I RGDFN'>0 D  Q
"RTN","RGJCREC",24,0)
 . S RGMTXT=" See Appendix F of the Clinical Information Resource Network Patient Demographics (CIRN-PD) and Master Patient Index (MPI) Installation and Implementation Guide."
"RTN","RGJCREC",25,0)
 . D EXC^RGHLLOG(210,"Msg#"_$G(HL("MID"))_" Bad DFN, "_$G(RGDFN)_", for "_$G(RGPN)_" (ICN#"_$G(RGICN)_")"_RGMTXT) D STOP^RGHLLOG(1) Q
"RTN","RGJCREC",26,0)
 ;I $P(^DPT(RGDFN,0),U,9)'=RGSSN S ^XTMP("RGJCREC","SSNER",RGICN)="" Q
"RTN","RGJCREC",27,0)
 I $P(^DPT(RGDFN,0),U,9)'=RGSSN D  Q
"RTN","RGJCREC",28,0)
 . S RGMTXT=" See Appendix B of the Clinical Information Resource Network (CIRN) Patient Administration User Manual."
"RTN","RGJCREC",29,0)
 . D EXC^RGHLLOG(213,"Msg#"_$G(HL("MID"))_" Mismatched SSN,"_$P(^DPT(RGDFN,0),U,9)_"/"_$G(RGSSN)_" for "_$G(RGPN)_" (ICN#"_$G(RGICN)_")"_RGMTXT) D STOP^RGHLLOG(1) Q
"RTN","RGJCREC",30,0)
 ;Pt CMOR/Subscription Control Number
"RTN","RGJCREC",31,0)
 S RGPPFI=$$GETVCCI^MPIF001(RGDFN)
"RTN","RGJCREC",32,0)
 ;I +RGPPFI<1 S ^XTMP("RGJCREC","BAD CMOR",RGICN)="" Q
"RTN","RGJCREC",33,0)
 I +RGPPFI<1 D  Q
"RTN","RGJCREC",34,0)
 . S RGMTXT=" See Appendix F of the Clinical Information Resource Network Patient Demographics (CIRN-PD) and Master Patient Index (MPI) Installation and Implementation Guide."
"RTN","RGJCREC",35,0)
 . D EXC^RGHLLOG(211,"Msg#"_$G(HL("MID"))_" Bad CMOR "_$G(RGPPFI)_" for DFN#"_$G(RGDFN)_RGMTXT) D STOP^RGHLLOG(1) Q
"RTN","RGJCREC",36,0)
 ;Verify that sender and receiver agree on CMOR
"RTN","RGJCREC",37,0)
 ;; removed cmc 5/9/98 S RGCMOR=$O(^DIC(4,"D",RGCMOR,0))
"RTN","RGJCREC",38,0)
 ;I RGCMOR'=RGPPFI S ^XTMP("RGJCREC","CMOR MISMATCH",RGICN)="" Q
"RTN","RGJCREC",39,0)
 I RGCMOR'=RGPPFI D  Q
"RTN","RGJCREC",40,0)
 . S RGMTXT=" See Appendix F of the Clinical Information Resource Network Patient Demographics (CIRN-PD) and Master Patient Index (MPI) Installation and Implementation Guide."
"RTN","RGJCREC",41,0)
 . D EXC^RGHLLOG(211,"Msg#"_$G(HL("MID"))_" Mismatched CMOR, "_$G(RGCMOR)_"/"_$G(RGPPFI)_" for "_$G(RGPN)_" (ICN#"_$G(RGICN)_")"_RGMTXT) D STOP^RGHLLOG(1) Q
"RTN","RGJCREC",42,0)
 S RGSCN=$$GETSCN(RGDFN)
"RTN","RGJCREC",43,0)
 ;Current Site ien
"RTN","RGJCREC",44,0)
 S RGCURI=+$$SITE^VASITE()
"RTN","RGJCREC",45,0)
 ;If not VCCI, don't update anyone else
"RTN","RGJCREC",46,0)
 I $$IFVCCI^MPIF001(RGDFN)'=1 D FIL K RGLL Q  ;TS 3-27-98
"RTN","RGJCREC",47,0)
 ;If filing data at owner site, que update to CLINICAL SUBSCRIBERS
"RTN","RGJCREC",48,0)
 D REC1
"RTN","RGJCREC",49,0)
 ;Add new clinical subscriber to local registry
"RTN","RGJCREC",50,0)
 D FIL
"RTN","RGJCREC",51,0)
 D REC2
"RTN","RGJCREC",52,0)
 K RGSTUB,RGLL ;TS 3-27-98
"RTN","RGJCREC",53,0)
 D STOP^RGHLLOG(0) Q
"RTN","RGJCREC",54,0)
 K RGS,RGSEG,RGFS,RGCS,RGEC,RGSS,RGFILE,RGACT,RGCD,RGID,RGICN,RGSSN,RGPN,RGLL,RGTP,RGAD,RGTD,RGRAP,RGCMOR,RGDFN,RGPPFI,RGSCN,RGCURI,RGFROM,RGTO,RGSTUB,RGAD1,RGL,RGRC
"RTN","RGJCREC",55,0)
 Q
"RTN","RGJCREC",56,0)
REC1 ;Update clinical subscribers with newest one
"RTN","RGJCREC",57,0)
 D GET^RGRSDYN1(RGDFN,RGSCN,0,"",.RGLL)
"RTN","RGJCREC",58,0)
 ;D GET^HLSUB(RGSCN,0,"",.RGLL) ;get all clinical subscribers, changed to 0 to get subs, TS 2-26-98
"RTN","RGJCREC",59,0)
 N I S I=0 F  S I=$O(RGLL("LINKS",I)) Q:I<1  D
"RTN","RGJCREC",60,0)
 .S RGFROM=RGLL ;New Subscriber
"RTN","RGJCREC",61,0)
 .S RGTO=$P(RGLL("LINKS",I),U,2) ;Destination (Clinical Subscriber)
"RTN","RGJCREC",62,0)
 .S RGSTUB=RGFROM_U_RGTO_U_RGICN_U_RGPN_U_RGTP_U_RGAD_U_$G(RGTD)
"RTN","RGJCREC",63,0)
 .D:RGFROM'=RGTO EN^RGEQ("SCN_REQ",RGSTUB) ;put on Event Queue
"RTN","RGJCREC",64,0)
 Q
"RTN","RGJCREC",65,0)
REC2 ;Update newest subscriber with previous subscribers and CMOR
"RTN","RGJCREC",66,0)
 ;change 4/10/98 CMC to get links
"RTN","RGJCREC",67,0)
 K RGLL("LINKS")
"RTN","RGJCREC",68,0)
 D GET^RGRSDYN1(RGDFN,RGSCN,0,"",.RGLL)
"RTN","RGJCREC",69,0)
 ;D GET^HLSUB(RGSCN,0,"",.RGLL)
"RTN","RGJCREC",70,0)
 S I=0 F  S I=$O(RGLL("LINKS",I)) Q:I<1  D
"RTN","RGJCREC",71,0)
 .S RGTO=RGLL
"RTN","RGJCREC",72,0)
 .S RGFROM=$P(RGLL("LINKS",I),U,2)
"RTN","RGJCREC",73,0)
 .S RGSTUB=RGFROM_U_RGTO_U_RGICN_U_RGPN_U_RGTP_U_RGAD_U_$G(RGTD)
"RTN","RGJCREC",74,0)
 .I RGTO'=RGFROM D EN^RGEQ("SCN_REQ",RGSTUB)
"RTN","RGJCREC",75,0)
 ;Now send current institution (CMOR)
"RTN","RGJCREC",76,0)
 K RGL
"RTN","RGJCREC",77,0)
 D LINK^HLUTIL3(RGCURI,.RGL) S RGL=$O(RGL(0)) Q:RGL<1
"RTN","RGJCREC",78,0)
 ;changed cmc 5/9/98
"RTN","RGJCREC",79,0)
 S RGSTUB=RGL(RGL)_U_RGLL_U_RGICN_U_RGPN_U_RGTP_U_RGAD_U_$G(RGTD)
"RTN","RGJCREC",80,0)
 D:RGL(RGL)'=RGLL EN^RGEQ("SCN_REQ",RGSTUB)
"RTN","RGJCREC",81,0)
 K RGSTUB
"RTN","RGJCREC",82,0)
 Q
"RTN","RGJCREC",83,0)
PARS ;Parse it
"RTN","RGJCREC",84,0)
 S I=0 F  S I=$O(RGS(I)) Q:'I  S RGSEG=RGS(I) D
"RTN","RGJCREC",85,0)
 .I $E(RGSEG,1,3)="MSH" D
"RTN","RGJCREC",86,0)
 ..S RGFS=$E(RGSEG,4) ;Field
"RTN","RGJCREC",87,0)
 ..S RGCS=$E(RGSEG,5) ;Component
"RTN","RGJCREC",88,0)
 ..S RGRC=$E(RGSEG,6) ;Repitition
"RTN","RGJCREC",89,0)
 ..S RGEC=$E(RGSEG,7) ;Escape
"RTN","RGJCREC",90,0)
 ..S RGSS=$E(RGSEG,8) ;Sub-component separator
"RTN","RGJCREC",91,0)
 .I $E(RGSEG,1,3)="MFI" D
"RTN","RGJCREC",92,0)
 ..S RGFILE=+$P(RGSEG,RGFS,2) ;File number
"RTN","RGJCREC",93,0)
 .I $E(RGSEG,1,3)="MFE" D
"RTN","RGJCREC",94,0)
 ..S RGACT=$P(RGSEG,RGFS,2) ;Action
"RTN","RGJCREC",95,0)
 ..S RGCD=$P(RGSEG,RGFS,4) ;creation date
"RTN","RGJCREC",96,0)
 ..S RGID=$P(RGSEG,RGFS,5) D  ;Primary Key
"RTN","RGJCREC",97,0)
 ...S RGICN=+RGID,RGSSN=$P(RGID,RGSS,2),RGPN=$P(RGID,RGCS,2) ;ICN,Patient Name
"RTN","RGJCREC",98,0)
 .I $E(RGSEG,1,3)="ZSD" D
"RTN","RGJCREC",99,0)
 ..S RGLL=$P(RGSEG,RGFS,2) ;LLink
"RTN","RGJCREC",100,0)
 ..S RGTP=$P(RGSEG,RGFS,3) ;Type
"RTN","RGJCREC",101,0)
 ..S RGAD=$P(RGSEG,RGFS,4) ;Activation Date
"RTN","RGJCREC",102,0)
 ..S RGTD=$P(RGSEG,RGFS,5) ;Termination Date
"RTN","RGJCREC",103,0)
 ..S RGRAP=$P(RGSEG,RGFS,6) ;Receiving Application
"RTN","RGJCREC",104,0)
 ..S RGCMOR=$P(RGSEG,RGFS,7) ;CIRN Master of Record
"RTN","RGJCREC",105,0)
 Q
"RTN","RGJCREC",106,0)
GETSCN(RGDPT) ;Return existing SCN or Activate a new subscription for this patient
"RTN","RGJCREC",107,0)
 ;RGDPT=PATIENT DFN
"RTN","RGJCREC",108,0)
 N RGAR,RGAN
"RTN","RGJCREC",109,0)
 ;get subscription control #
"RTN","RGJCREC",110,0)
 S RGSCN=+$P($$MPINODE^MPIFAPI(RGDPT),"^",5)
"RTN","RGJCREC",111,0)
 ;if no SCN, create new and update 991.05, then return result
"RTN","RGJCREC",112,0)
 I 'RGSCN S RGSCN=$$ACT^HLSUB S RGAR(991.05)=RGSCN S RGAN=$$UPDATE^MPIFAPI(RGDPT,"RGAR") I RGAN=-1 S RGSCN=""
"RTN","RGJCREC",113,0)
 Q RGSCN
"RTN","RGJCREC",114,0)
FIL ;File message
"RTN","RGJCREC",115,0)
 ;Normalize dates
"RTN","RGJCREC",116,0)
 N RGCHK
"RTN","RGJCREC",117,0)
 S RGAD1=$$DTHF^RGHLUT(RGAD)
"RTN","RGJCREC",118,0)
 I $G(RGTD)]"" S RGTD1=$$DTHF^RGHLUT(RGTD)
"RTN","RGJCREC",119,0)
 ;check to see if this subscriber is yourself
"RTN","RGJCREC",120,0)
 D LINK^HLUTIL3(+$$SITE^VASITE,.RGCHK) Q:$O(RGCHK(0))=""  S RGCHK=RGCHK($O(RGCHK(0)))
"RTN","RGJCREC",121,0)
 I $G(RGCHK)'=RGLL D UPD^HLSUB(RGSCN,RGLL,RGTP,RGAD1,$G(RGTD1),$G(RGRAP),.HLER)
"RTN","RGJCREC",122,0)
 Q
"RTN","RGJCREC",123,0)
GETINST(LINK) ;returns institution ien from logical link
"RTN","RGJCREC",124,0)
 I $G(LINK)="" Q 0
"RTN","RGJCREC",125,0)
 S DIC=870,DIC(0)="EMQZ",X=LINK D ^DIC
"RTN","RGJCREC",126,0)
 I Y=-1 Q Y
"RTN","RGJCREC",127,0)
 Q $P(Y(0),"^",2)
"RTN","RGJCSUB")
0^19^B43002045
"RTN","RGJCSUB",1,0)
RGJCSUB ;SF/JC-CIRN SUBSCRIPTION GENERATOR ;04/30/97
"RTN","RGJCSUB",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGJCSUB",3,0)
SUB ;Interactive PATIENT SUBSCRIPTION REQUEST
"RTN","RGJCSUB",4,0)
 ;Institution originating request
"RTN","RGJCSUB",5,0)
 N RGFROM,RGFROMS
"RTN","RGJCSUB",6,0)
 S RGFROM=+$$KSP^XUPARAM("INST")
"RTN","RGJCSUB",7,0)
 S DIC=4,DIC(0)="XMQZ",X=RGFROM D ^DIC
"RTN","RGJCSUB",8,0)
 K DIC,DA,DR
"RTN","RGJCSUB",9,0)
 S DIC("A")="Select your current institution: "
"RTN","RGJCSUB",10,0)
 S DIC=4,DIC(0)="AEMQZ",DIC("B")=$P(Y,U,2) D ^DIC
"RTN","RGJCSUB",11,0)
 Q:$D(DTOUT)!($D(DUOUT))
"RTN","RGJCSUB",12,0)
 S RGFROM=$P(Y,U,2)
"RTN","RGJCSUB",13,0)
 K DIC
"RTN","RGJCSUB",14,0)
 ;Local Station Number
"RTN","RGJCSUB",15,0)
 S RGFROMS=$$GET1^DIQ(4,+Y_",",99)
"RTN","RGJCSUB",16,0)
 ;Logical Link
"RTN","RGJCSUB",17,0)
 D LINK^HLUTIL3(RGFROM,.HLI)
"RTN","RGJCSUB",18,0)
 S HLI=+$O(HLI(0)) I 'HLI W !!,"There's no LOGICAL LINK associated with the facility you entered." G SUB
"RTN","RGJCSUB",19,0)
 S RGFRLNK=HLI(HLI)
"RTN","RGJCSUB",20,0)
 K HLI
"RTN","RGJCSUB",21,0)
PAT ;Patient ICN
"RTN","RGJCSUB",22,0)
 N RGDFN,RGNAME,RGICN
"RTN","RGJCSUB",23,0)
 S DIC="^DPT(",DIC(0)="AEQMZ" D ^DIC Q:Y'>0  S RGDFN=+Y
"RTN","RGJCSUB",24,0)
 S RGNAME=$P(Y,U,2),RGICN=$$GETICN^MPIF001(RGDFN)
"RTN","RGJCSUB",25,0)
 I +RGICN=-1 W !,"ERROR - Patient, ",RGNAME," does not have an INTEGRATION CONTROL NUMBER ASSIGNED." Q
"RTN","RGJCSUB",26,0)
VCCI ;Owner Site
"RTN","RGJCSUB",27,0)
 S RGVCCI=$$GETVCCI^MPIF001(RGDFN) ;SITE IEN
"RTN","RGJCSUB",28,0)
 S RGVCCIS=$$GET1^DIQ(4,+RGVCCI_",",99) ;INSTITUTION NUMBER
"RTN","RGJCSUB",29,0)
 S RGVCCIN=$$GET1^DIQ(4,+RGVCCI_",",.01) ;SITE NAME
"RTN","RGJCSUB",30,0)
 I RGVCCIN=RGFROM!(RGVCCI="") W !,"You appear to be the owner site for this patient.",!,"The local Subscription Registry will not be updated." Q
"RTN","RGJCSUB",31,0)
 W !,"The CMOR Site for this patient is ",$G(RGVCCIN)
"RTN","RGJCSUB",32,0)
TYPE ;Subscription type-0=descriptive,1=descriptive and clinical
"RTN","RGJCSUB",33,0)
 N RGTYPE,RGTYPEX
"RTN","RGJCSUB",34,0)
 K DIR
"RTN","RGJCSUB",35,0)
 S DIR(0)="SM^0:Descriptive;1:Clinical and Descriptive"
"RTN","RGJCSUB",36,0)
 S DIR("A")="Enter the TYPE of subscription: "
"RTN","RGJCSUB",37,0)
 S DIR("B")="Clinical and Descriptive"
"RTN","RGJCSUB",38,0)
 D ^DIR K DIR
"RTN","RGJCSUB",39,0)
 Q:$D(DUOUT)!($D(DTOUT))
"RTN","RGJCSUB",40,0)
 S RGTYPE=Y,RGTYPEX=Y(0)
"RTN","RGJCSUB",41,0)
TARGET ;Institution to receive request
"RTN","RGJCSUB",42,0)
 N RGTO,RGTOS
"RTN","RGJCSUB",43,0)
 S DIC=4,DIC(0)="AEMQZ"
"RTN","RGJCSUB",44,0)
 S DIC("A")="Send subscription request to which institution? "
"RTN","RGJCSUB",45,0)
 S DIC("B")=$$GET1^DIQ(4,+RGVCCI_",",.01)
"RTN","RGJCSUB",46,0)
 D ^DIC
"RTN","RGJCSUB",47,0)
 K DIC
"RTN","RGJCSUB",48,0)
 Q:$D(DTOUT)!($D(DUOUT))
"RTN","RGJCSUB",49,0)
 S RGTO=$P(Y,U,2),RGTOS=+$$GET1^DIQ(4,+Y_",",99)
"RTN","RGJCSUB",50,0)
 ;Logical Link
"RTN","RGJCSUB",51,0)
 N HLI,RGTOLNK
"RTN","RGJCSUB",52,0)
 D LINK^HLUTIL3(RGTO,.HLI)
"RTN","RGJCSUB",53,0)
 S HLI=+$O(HLI(0))
"RTN","RGJCSUB",54,0)
 I 'HLI W !,"There is no LOGICAL LINK associated with this institution.",!,"Your request cannot be transmitted without this information." Q
"RTN","RGJCSUB",55,0)
 S RGTOLNK=HLI(HLI)
"RTN","RGJCSUB",56,0)
 K HLI
"RTN","RGJCSUB",57,0)
AD ;Activation date/time+/-TIMEZONE OFFSET
"RTN","RGJCSUB",58,0)
 N RGAD,RGTZAD
"RTN","RGJCSUB",59,0)
 S %DT="AETX",%DT("A")="Enter the ACTIVATION DATE/TIME: "
"RTN","RGJCSUB",60,0)
 S %DT("B")="NOW"
"RTN","RGJCSUB",61,0)
 D ^%DT
"RTN","RGJCSUB",62,0)
 Q:$D(DTOUT)!($D(DUOUT))
"RTN","RGJCSUB",63,0)
 I Y=-1 W !,"Invalid date" G AD
"RTN","RGJCSUB",64,0)
 S RGAD=Y,RGTZAD=$$DTFH^RGHLUT(Y,1)
"RTN","RGJCSUB",65,0)
TD ;Optional Termination Date
"RTN","RGJCSUB",66,0)
 N RGTD,RGTZTD
"RTN","RGJCSUB",67,0)
 K %DT
"RTN","RGJCSUB",68,0)
 S %DT="AETX",%DT("A")="Enter an optional TERMINATION DATE/TIME: "
"RTN","RGJCSUB",69,0)
 D ^%DT
"RTN","RGJCSUB",70,0)
 Q:$D(DTOUT)!($D(DUOUT))
"RTN","RGJCSUB",71,0)
 I Y>0 S RGTD=Y,RGTZTD=$$DTFH^RGHLUT(Y,1)
"RTN","RGJCSUB",72,0)
REVIEW ;
"RTN","RGJCSUB",73,0)
 W !!
"RTN","RGJCSUB",74,0)
 W "You are about to submit a PATIENT SUBSCRIPTION REQUEST ",!
"RTN","RGJCSUB",75,0)
 W "with the following information:",!!
"RTN","RGJCSUB",76,0)
 W "ORIGIN OF REQUEST: ",RGFROMS,"   NETWORK NODE: ",RGFRLNK,!!
"RTN","RGJCSUB",77,0)
 W "RECEIVER OF REQUEST: ",RGTOS,"   NETWORK NODE: ",RGTOLNK,!!
"RTN","RGJCSUB",78,0)
 W "SUBSCRIPTION TYPE: ",RGTYPEX,!!
"RTN","RGJCSUB",79,0)
 W "PATIENT: ",RGNAME,!!
"RTN","RGJCSUB",80,0)
 W "PATIENT ICN: ",RGICN,!!
"RTN","RGJCSUB",81,0)
 W "ACTIVATION DATE: ",$$FMTE^XLFDT(RGAD,1),!!
"RTN","RGJCSUB",82,0)
 I $G(RGTD) W "TERMINATION DATE: ",$$FMTE^XLFDT(RGTD,1),!!
"RTN","RGJCSUB",83,0)
 K DIR
"RTN","RGJCSUB",84,0)
 S DIR("A")="Is this correct? "
"RTN","RGJCSUB",85,0)
 S DIR("?")="Enter '^' to quit, 'NO' to start over."
"RTN","RGJCSUB",86,0)
 S DIR("?",1)="Accepting this information will result in a message"
"RTN","RGJCSUB",87,0)
 S DIR("?",2)="being sent to the institution (receiver) you have specified."
"RTN","RGJCSUB",88,0)
 S DIR(0)="Y",DIR("B")="YES" D ^DIR K DIR
"RTN","RGJCSUB",89,0)
 Q:$D(DTOUT)!($D(DUOUT))
"RTN","RGJCSUB",90,0)
 I Y=0 G SUB
"RTN","RGJCSUB",91,0)
 D BM(RGFRLNK,RGTOLNK,+RGICN,RGNAME,RGTYPE,RGTZAD,$G(RGTZTD))
"RTN","RGJCSUB",92,0)
 Q
"RTN","RGJCSUB",93,0)
EQ(RGEV,RGSTUB,RGERR,RGEP) ;Entry point for Event Queue Processor
"RTN","RGJCSUB",94,0)
 S FLL=$P(RGSTUB,U),TLL=$P(RGSTUB,U,2),ICN=$P(RGSTUB,U,3)
"RTN","RGJCSUB",95,0)
 S PN=$P(RGSTUB,U,4),TP=$P(RGSTUB,U,5),AD=$P(RGSTUB,U,6)
"RTN","RGJCSUB",96,0)
 S TD=$P(RGSTUB,U,7)
"RTN","RGJCSUB",97,0)
 I FLL=""!(TLL="")!(ICN="")!(PN="")!(TP="") S RGERR="REQUIRED PARAMETERS MISSING IN STUB"
"RTN","RGJCSUB",98,0)
 I AD="" S AD=$$NOW^XLFDT,AD=$$DTFH^RGHLUT(AD,1) ;activation date
"RTN","RGJCSUB",99,0)
 D BM(FLL,TLL,ICN,PN,TP,AD,TD)
"RTN","RGJCSUB",100,0)
 Q
"RTN","RGJCSUB",101,0)
BM(FLL,TLL,ICN,PN,TP,AD,TD) ;Build Subscription Request Message
"RTN","RGJCSUB",102,0)
 ;FLL-'FROM' LOGICAL LINK NAME
"RTN","RGJCSUB",103,0)
 ;TLL-'TO' LOGICAL LINK NAME
"RTN","RGJCSUB",104,0)
 ;ICN-PATIENT ID
"RTN","RGJCSUB",105,0)
 ;PN-PATIENT NAME
"RTN","RGJCSUB",106,0)
 ;TP-SUBSCRIPTION TYPE
"RTN","RGJCSUB",107,0)
 ;AD-ACTIVATION DATE HL7 FORMAT
"RTN","RGJCSUB",108,0)
 ;TD-TERMINATION DATE HL7 FORMAT-OPTIONAL
"RTN","RGJCSUB",109,0)
 Q:'+ICN
"RTN","RGJCSUB",110,0)
 S RGDFN=$$GETDFN^MPIF001(+ICN) Q:+RGDFN<1
"RTN","RGJCSUB",111,0)
 S RGSSN=$P(^DPT(RGDFN,0),U,9)
"RTN","RGJCSUB",112,0)
 ;Get institution number of CMOR
"RTN","RGJCSUB",113,0)
 S RGCMOR=$$GETVCCI^MPIF001(RGDFN)
"RTN","RGJCSUB",114,0)
 N RGCS,RGRC,RGEC,RGSS
"RTN","RGJCSUB",115,0)
 D INIT^HLFNC2("RG PT SUBSCRIPTION REQUEST",.HL) Q:+$G(HL)
"RTN","RGJCSUB",116,0)
 S HLL("LINKS",1)="RG PT SUBSCRIPTION RECEIVER^"_TLL
"RTN","RGJCSUB",117,0)
 S RGCS=$E(HL("ECH"),1) ;Component
"RTN","RGJCSUB",118,0)
 S RGRC=$E(HL("ECH"),2) ;Repitition
"RTN","RGJCSUB",119,0)
 S RGEC=$E(HL("ECH"),3) ;Escape
"RTN","RGJCSUB",120,0)
 S RGSS=$E(HL("ECH"),4) ;Sub-component separator
"RTN","RGJCSUB",121,0)
MFI ;MFI-master file identifier segment
"RTN","RGJCSUB",122,0)
 N X,HLA S X=""
"RTN","RGJCSUB",123,0)
 S $P(X,HLFS)="MFI"
"RTN","RGJCSUB",124,0)
 S $P(X,HLFS,2)="774"_RGCS_"SUBSCRIPTION REGISTRY"_RGCS_"L"
"RTN","RGJCSUB",125,0)
 S $P(X,HLFS,4)="UPD"
"RTN","RGJCSUB",126,0)
 S $P(X,HLFS,7)="NE"
"RTN","RGJCSUB",127,0)
 S HLA("HLS",1)=X
"RTN","RGJCSUB",128,0)
MFE ;MFE-master file entry segment
"RTN","RGJCSUB",129,0)
 S X=""
"RTN","RGJCSUB",130,0)
 S $P(X,HLFS)="MFE"
"RTN","RGJCSUB",131,0)
 S $P(X,HLFS,2)="MUP",$P(X,HLFS,4)=AD
"RTN","RGJCSUB",132,0)
 S $P(X,HLFS,5)=+ICN_RGSS_RGSSN_RGSS_2_RGCS_PN_RGCS_"L"
"RTN","RGJCSUB",133,0)
 S HLA("HLS",2)=X
"RTN","RGJCSUB",134,0)
DATA ;Record level data in 'ZSD' SEGMENT
"RTN","RGJCSUB",135,0)
 S HLA("HLS",3)="ZSD"_HLFS_FLL_HLFS_TP_HLFS_AD_HLFS_$G(TD)_HLFS_HLFS_RGCMOR
"RTN","RGJCSUB",136,0)
SEND ;SEND TO HL7 PACKAGE
"RTN","RGJCSUB",137,0)
 D GENERATE^HLMA("RG PT SUBSCRIPTION REQUEST","LM",1,.HLRST,"",.HL)
"RTN","RGJCSUB",138,0)
 Q
"RTN","RGJCSUB",139,0)
ROUTE ;routing logic-parse A04 and put new message on event queue
"RTN","RGJCSUB",140,0)
 ;to primary facility
"RTN","RGJCSUB",141,0)
 ;If triggered by an A04
"RTN","RGJCSUB",142,0)
 ;I $G(HL("ETN"))'="A04" Q
"RTN","RGJCSUB",143,0)
 K RGLL D R1
"RTN","RGJCSUB",144,0)
 Q
"RTN","RGJCSUB",145,0)
R1 ;A04
"RTN","RGJCSUB",146,0)
 S RGS="",RGFS=HLFS,RGECH=HLECH
"RTN","RGJCSUB",147,0)
 F I=1:1 X HLNEXT Q:HLQUIT'>0  Q:$P(HLNODE,HLFS)="PID"
"RTN","RGJCSUB",148,0)
 Q:HLQUIT'>0
"RTN","RGJCSUB",149,0)
 S RGICN=+$P(HLNODE,HLFS,3)
"RTN","RGJCSUB",150,0)
 Q:'RGICN
"RTN","RGJCSUB",151,0)
 S RGDFN=+$$GETDFN^MPIF001(RGICN)
"RTN","RGJCSUB",152,0)
 Q:RGDFN'>0
"RTN","RGJCSUB",153,0)
 S RGVCCI=$$GETVCCI^MPIF001(RGDFN)
"RTN","RGJCSUB",154,0)
 Q:RGVCCI<1
"RTN","RGJCSUB",155,0)
 ;fix TS need IEN for compare not sta. num.
"RTN","RGJCSUB",156,0)
 S RGVCCI=$$LKUP^XUAF4(RGVCCI)
"RTN","RGJCSUB",157,0)
 S RGPN=$P(^DPT(RGDFN,0),U) Q:RGPN=""
"RTN","RGJCSUB",158,0)
 S RGTP=1 ;clinical update
"RTN","RGJCSUB",159,0)
 S RGAD=$$NOW^XLFDT,RGAD=$$DTFH^RGHLUT(RGAD,1) ;activation date
"RTN","RGJCSUB",160,0)
 ;Local Station information
"RTN","RGJCSUB",161,0)
 S RGLOC=$$SITE^VASITE(),RGLOCIEN=$P(RGLOC,U,1),RGLOCNM=$P(RGLOC,U,2),RGLOCSN=$P(RGLOC,U,3)
"RTN","RGJCSUB",162,0)
 I RGVCCI=RGLOCIEN D  ;current site is owner site, update existing subscribers
"RTN","RGJCSUB",163,0)
 .S RGSCN=$$GETSCN^RGJCREC(RGDFN) ;get SCN
"RTN","RGJCSUB",164,0)
 .D LINK^HLUTIL3(RGLOCIEN,.RGFROM) ;get local link definition
"RTN","RGJCSUB",165,0)
 .S RGLL=$O(RGFROM(0)) Q:RGLL=""  S RGLL=RGFROM(RGLL)
"RTN","RGJCSUB",166,0)
 .D REC1^RGJCREC
"RTN","RGJCSUB",167,0)
 I RGVCCI'=RGLOCIEN D  ;current site is not owner, update only owner
"RTN","RGJCSUB",168,0)
 .D LINK^HLUTIL3(RGLOCIEN,.RGFROM) ;Local Link
"RTN","RGJCSUB",169,0)
 .S RGFROM=$O(RGFROM(0)) Q:RGFROM=""  S RGFROM=RGFROM(RGFROM) ;sending facility
"RTN","RGJCSUB",170,0)
 .D LINK^HLUTIL3(RGVCCI,.RGTO) ;get VCCI Link
"RTN","RGJCSUB",171,0)
 .S RGTO=$O(RGTO(0)) Q:RGTO=""
"RTN","RGJCSUB",172,0)
 .S RGTO=RGTO(RGTO) ;receiving facility
"RTN","RGJCSUB",173,0)
 .Q:RGTO=RGFROM
"RTN","RGJCSUB",174,0)
 .S RGSTUB=RGFROM_U_RGTO_U_RGICN_U_RGPN_U_RGTP_U_RGAD
"RTN","RGJCSUB",175,0)
 .D EN^RGEQ("SCN_REQ",RGSTUB)
"RTN","RGMSENV")
0^^B3051971
"RTN","RGMSENV",1,0)
RGMSENV ;B'HAM/PTD-CIRN MESSAGING SUPPORT build environment check routine ;4/6/99
"RTN","RGMSENV",2,0)
 ;;1.0; CLINICAL INFO RESOURCE NETWORK ;;30 Apr 99
"RTN","RGMSENV",3,0)
 ;If this is a production account, ensure that HL*1.6*39 is installed.
"RTN","RGMSENV",4,0)
 Q:XPDENV=1  ;do not run environment check at install time
"RTN","RGMSENV",5,0)
 ;run environment check only during Load a Distribution
"RTN","RGMSENV",6,0)
 ;Determine if this is a production account.  If NOT, quit.
"RTN","RGMSENV",7,0)
DIR K DIR S DIR(0)="SAM^P:Production;T:Test;"
"RTN","RGMSENV",8,0)
 S DIR("A",1)="Identify this account as 'Production' or 'Test'."
"RTN","RGMSENV",9,0)
 S DIR("A")="This installation is taking place in which account? "
"RTN","RGMSENV",10,0)
 S DIR("B")="TEST"
"RTN","RGMSENV",11,0)
 S DIR("?")="Enter 'P' for Production or 'T' for Test"
"RTN","RGMSENV",12,0)
 S DIR("??")="^D HLP^RGMSENV"
"RTN","RGMSENV",13,0)
 D ^DIR G:$D(DIRUT) ABORT S RGANS=Y
"RTN","RGMSENV",14,0)
 I RGANS="T" G END
"RTN","RGMSENV",15,0)
 ;For production account, check for patch HL*1.6*39.
"RTN","RGMSENV",16,0)
 S RGPCH=$$PATCH^XPDUTL("HL*1.6*39") I RGPCH=1 G END
"RTN","RGMSENV",17,0)
 ;
"RTN","RGMSENV",18,0)
ABORT ;Patch HL*1.6*39 missing; abort install; leave transport global.
"RTN","RGMSENV",19,0)
 W !!,"You must have patch HL*1.6*39 installed."
"RTN","RGMSENV",20,0)
 S XPDQUIT=2
"RTN","RGMSENV",21,0)
 ;
"RTN","RGMSENV",22,0)
END I '$D(XPDQUIT) W !!,"Environment check is ok.",!
"RTN","RGMSENV",23,0)
 K DIR,DIRUT,DTOUT,DUOUT,RGANS,RGPCH,X,Y
"RTN","RGMSENV",24,0)
 Q
"RTN","RGMSENV",25,0)
 ;
"RTN","RGMSENV",26,0)
HLP ;Help text.
"RTN","RGMSENV",27,0)
 W !!,"Enter 'P' if this installation is taking place in your"
"RTN","RGMSENV",28,0)
 W !,"PRODUCTION account.  This will require patch HL*1.6*39."
"RTN","RGMSENV",29,0)
 W !,"Enter 'T' if this installation is taking place in your"
"RTN","RGMSENV",30,0)
 W !,"TEST account.  HL*1.6*39 should NOT be installed in any"
"RTN","RGMSENV",31,0)
 W !,"test account.",!
"RTN","RGMSENV",32,0)
 Q
"RTN","RGMSENV",33,0)
 ;
"SEC","^DIC",991.11,991.11,0,"AUDIT")
@
"SEC","^DIC",991.11,991.11,0,"DD")
@
"SEC","^DIC",991.11,991.11,0,"DEL")
@
"SEC","^DIC",991.11,991.11,0,"LAYGO")
@
"SEC","^DIC",991.11,991.11,0,"RD")
@
"SEC","^DIC",991.11,991.11,0,"WR")
@
"VER")
8.0^21.0
"^DD",990.8,990.8,0)
FIELD^^11^10
"^DD",990.8,990.8,0,"DDA")
N
"^DD",990.8,990.8,0,"DT")
2970922
"^DD",990.8,990.8,0,"IX","B",990.8,.01)

"^DD",990.8,990.8,0,"NM","CIRN REPOSITORY SITE PARAMETER")

"^DD",990.8,990.8,0,"VRPK")
CLINICAL INFO RESOURCE NETWORK
"^DD",990.8,990.8,.01,0)
SITE^RNJ1,0XI^^0;1^S (X,DINUM)=1
"^DD",990.8,990.8,.01,1,0)
^.1
"^DD",990.8,990.8,.01,1,1,0)
990.8^B
"^DD",990.8,990.8,.01,1,1,1)
S ^RGSITE("COR","B",$E(X,1,30),DA)=""
"^DD",990.8,990.8,.01,1,1,2)
K ^RGSITE("COR","B",$E(X,1,30),DA)
"^DD",990.8,990.8,.01,3)
This field is uneditable.
"^DD",990.8,990.8,.01,21,0)
^^1^1^2990305^
"^DD",990.8,990.8,.01,21,1,0)
This is a dummy field whose value should always be 1.
"^DD",990.8,990.8,.01,"DT")
2950815
"^DD",990.8,990.8,.5,0)
PACKAGE MANAGER MAIL GROUP^P3.8'^XMB(3.8,^0;5^Q
"^DD",990.8,990.8,.5,3)
Enter the mail group to which package-generated status messages should be sent.
"^DD",990.8,990.8,.5,21,0)
^^2^2^2990305^
"^DD",990.8,990.8,.5,21,1,0)
This is the mail group to whom package-critical status messages 
"^DD",990.8,990.8,.5,21,2,0)
should be sent.
"^DD",990.8,990.8,.5,"DT")
2950815
"^DD",990.8,990.8,1,0)
RECENT RESULTS INDEX RETENTION^NJ9,0^^0;2^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",990.8,990.8,1,3)
Enter the number of days after which entries in the recent results index will be deleted.
"^DD",990.8,990.8,1,21,0)
^^8^8^2980402.230824
"^DD",990.8,990.8,1,21,1,0)
Whenever new data are stored in the COR, an entry is made in the Recent 
"^DD",990.8,990.8,1,21,2,0)
Results Index that shows the date when the entry was stored.  This index 
"^DD",990.8,990.8,1,21,3,0)
can be used when browsing the COR to restrict the search to data stored 
"^DD",990.8,990.8,1,21,4,0)
within the recent past.  This parameter permits the site to dictate how 
"^DD",990.8,990.8,1,21,5,0)
many days worth of data are to be tracked by this index.  The nightly 
"^DD",990.8,990.8,1,21,6,0)
purge will remove any entries older than the threshold set by this 
"^DD",990.8,990.8,1,21,7,0)
parameter.  Typical values will range from 3-5 days, but should be 
"^DD",990.8,990.8,1,21,8,0)
determined by local clinical needs and storage capacity.
"^DD",990.8,990.8,1,"DT")
2950815
"^DD",990.8,990.8,2,0)
ACCESS LOG RETENTION^NJ9,0^^0;3^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",990.8,990.8,2,3)
Enter the number of days after which entries in the ACCESS LOG file will be deleted.
"^DD",990.8,990.8,2,21,0)
^^5^5^2980402.231053
"^DD",990.8,990.8,2,21,1,0)
This parameter dictates how many days worth of CIRN ACCESS LOG data are 
"^DD",990.8,990.8,2,21,2,0)
to be maintained.  Entries older than this threshold are removed by the 
"^DD",990.8,990.8,2,21,3,0)
nightly purge.  The value of this parameter is entirely up to the 
"^DD",990.8,990.8,2,21,4,0)
discretion of the local site.  Obviously, larger values will incur more 
"^DD",990.8,990.8,2,21,5,0)
storage requirements.
"^DD",990.8,990.8,2,"DT")
2950815
"^DD",990.8,990.8,3,0)
TRANSMITTED RESULT RETENTION^NJ9,0^^0;4^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",990.8,990.8,3,3)
Enter the number of days after which verified entries in the data entry holding area will be deleted.
"^DD",990.8,990.8,3,21,0)
^^3^3^2980402^
"^DD",990.8,990.8,3,21,1,0)
Number of days to retain verified and transmitted data from the CIRN 
"^DD",990.8,990.8,3,21,2,0)
data entry holding area.  Data older than this threshold are deleted by 
"^DD",990.8,990.8,3,21,3,0)
the nightly purge.
"^DD",990.8,990.8,3,"DT")
2961106
"^DD",990.8,990.8,4,0)
EXCEPTION LOG RETENTION^NJ9,0^^0;6^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",990.8,990.8,4,3)
Number of days to retain data in CIRN HL7 EXCEPTION LOG
"^DD",990.8,990.8,4,21,0)
^^3^3^2980402.231141
"^DD",990.8,990.8,4,21,1,0)
Number of days to retain entries in the CIRN HL7 EXCEPTION LOG file.  
"^DD",990.8,990.8,4,21,2,0)
See a description of this file for information about its purpose.  
"^DD",990.8,990.8,4,21,3,0)
Entries older than this threshold are removed by the nightly purge.
"^DD",990.8,990.8,4,"DT")
2961106
"^DD",990.8,990.8,5,0)
SUPPRESS EXCEPTION ALERTS?^S^0:NO;1:YES;^0;7^Q
"^DD",990.8,990.8,5,3)
If yes, alerts are not sent when exceptions are encountered on sending and receiving HL7 messages.
"^DD",990.8,990.8,5,21,0)
^^5^5^2980402.2315
"^DD",990.8,990.8,5,21,1,0)
When set to yes, this parameter suppresses the generation of all alerts 
"^DD",990.8,990.8,5,21,2,0)
or email messages when an exception is logged.  This setting overrides 
"^DD",990.8,990.8,5,21,3,0)
that specified for individual exception types.  It is advisable to set 
"^DD",990.8,990.8,5,21,4,0)
this parameter to yes during historical load operations to avoid 
"^DD",990.8,990.8,5,21,5,0)
transmitting large numbers of alerts.
"^DD",990.8,990.8,5,"DT")
2970311
"^DD",990.8,990.8,6,0)
MINIMAL EXCEPTION LOGGING?^S^0:NO;1:YES;^0;8^Q
"^DD",990.8,990.8,6,3)
If yes, log entries are created only if an exception occurred.
"^DD",990.8,990.8,6,21,0)
^^4^4^2980402.232544
"^DD",990.8,990.8,6,21,1,0)
If yes, entries are created in the CIRN HL7 EXCEPTION file only if an 
"^DD",990.8,990.8,6,21,2,0)
exception is logged.  Otherwise, an entry is created each time an event 
"^DD",990.8,990.8,6,21,3,0)
or message is processed.  The latter permits better tracking of 
"^DD",990.8,990.8,6,21,4,0)
background activity, but at the expense of greater storage consumption.
"^DD",990.8,990.8,6,"DT")
2970325
"^DD",990.8,990.8,10,0)
STANDARD TIMEZONE^P4.4'^XMB(4.4,^TZ;1^Q
"^DD",990.8,990.8,10,3)
Standard time zone for this site.
"^DD",990.8,990.8,10,21,0)
^^2^2^2990305^^^
"^DD",990.8,990.8,10,21,1,0)
This is a pointer to the MAILMAN TIME ZONE file (#4.4)
"^DD",990.8,990.8,10,21,2,0)
and indicates the standard time zone for this site.
"^DD",990.8,990.8,10,"DT")
2970227
"^DD",990.8,990.8,11,0)
DST TIMEZONE^P4.4'^XMB(4.4,^TZ;2^Q
"^DD",990.8,990.8,11,3)
Daylight savings timezone for this site.  Leave blank if location does not honor DST.
"^DD",990.8,990.8,11,21,0)
^^4^4^2970227^
"^DD",990.8,990.8,11,21,1,0)
Timezone active during daylight savings time.
"^DD",990.8,990.8,11,21,2,0)
If this locale does not honor daylight savings
"^DD",990.8,990.8,11,21,3,0)
time, you may either leave this entry blank or
"^DD",990.8,990.8,11,21,4,0)
enter same timezone as standard time.
"^DD",990.8,990.8,11,"DT")
2970227
"^DD",991.1,991.1,0)
FIELD^^5^8
"^DD",991.1,991.1,0,"DDA")
N
"^DD",991.1,991.1,0,"DT")
2980925
"^DD",991.1,991.1,0,"IX","AC",991.12,2)

"^DD",991.1,991.1,0,"IX","AD",991.1,1.5)

"^DD",991.1,991.1,0,"IX","B",991.1,.01)

"^DD",991.1,991.1,0,"IX","HL7",991.1,3)

"^DD",991.1,991.1,0,"NM","CIRN HL7 EXCEPTION LOG")

"^DD",991.1,991.1,0,"VRPK")
CLINICAL INFO RESOURCE NETWORK
"^DD",991.1,991.1,.01,0)
NUMBER^RNJ12,0X^^0;1^K:X\1'=X!(X<1) X S:$D(X) DINUM=X
"^DD",991.1,991.1,.01,1,0)
^.1
"^DD",991.1,991.1,.01,1,1,0)
991.1^B
"^DD",991.1,991.1,.01,1,1,1)
S ^RGHL7(991.1,"B",$E(X,1,30),DA)=""
"^DD",991.1,991.1,.01,1,1,2)
K ^RGHL7(991.1,"B",$E(X,1,30),DA)
"^DD",991.1,991.1,.01,3)
Internal entry number of this log entry.
"^DD",991.1,991.1,.01,21,0)
^^1^1^2990308^^^
"^DD",991.1,991.1,.01,21,1,0)
This is the internal entry number (IEN) of this HL7 exception.
"^DD",991.1,991.1,.01,"DT")
2970313
"^DD",991.1,991.1,1,0)
START^RD^^0;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",991.1,991.1,1,3)
Date/time message processing started.
"^DD",991.1,991.1,1,21,0)
^^1^1^2990308^^
"^DD",991.1,991.1,1,21,1,0)
This the date/time the message processing started.
"^DD",991.1,991.1,1,"DT")
2960225
"^DD",991.1,991.1,1.5,0)
STOP^D^^0;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",991.1,991.1,1.5,1,0)
^.1
"^DD",991.1,991.1,1.5,1,1,0)
991.1^AD
"^DD",991.1,991.1,1.5,1,1,1)
S ^RGHL7(991.1,"AD",$E(X,1,30),DA)=""
"^DD",991.1,991.1,1.5,1,1,2)
K ^RGHL7(991.1,"AD",$E(X,1,30),DA)
"^DD",991.1,991.1,1.5,1,1,"DT")
2961030
"^DD",991.1,991.1,1.5,3)
Date/time message processing completed.
"^DD",991.1,991.1,1.5,21,0)
^^1^1^2990308^^^
"^DD",991.1,991.1,1.5,21,1,0)
This is the date/time the message processing completed.
"^DD",991.1,991.1,1.5,"DT")
2961030
"^DD",991.1,991.1,1.6,0)
COMPLETION STATUS^S^0:SUCCESS;1:FAILURE;^0;4^Q
"^DD",991.1,991.1,1.6,3)
Completion status for this message.  If FAILURE, processing of the message was aborted.
"^DD",991.1,991.1,1.6,21,0)
^^2^2^2990308^^
"^DD",991.1,991.1,1.6,21,1,0)
This is the completion status for this message.
"^DD",991.1,991.1,1.6,21,2,0)
'0' for Success, '1' for Failure (processing aborted).
"^DD",991.1,991.1,1.6,"DT")
2960302
"^DD",991.1,991.1,2,0)
EXCEPTION^991.12^^1;0
"^DD",991.1,991.1,2,21,0)
^^1^1^2990308^^
"^DD",991.1,991.1,2,21,1,0)
This is a multiple field that holds exception data.
"^DD",991.1,991.1,2,"DT")
2970131
"^DD",991.1,991.1,3,0)
MESSAGE^NJ12,0X^^0;5^K:X\1'=X!(X<1) X
"^DD",991.1,991.1,3,1,0)
^.1
"^DD",991.1,991.1,3,1,1,0)
991.1^HL7
"^DD",991.1,991.1,3,1,1,1)
S ^RGHL7(991.1,"HL7",$E(X,1,30),DA)=""
"^DD",991.1,991.1,3,1,1,2)
K ^RGHL7(991.1,"HL7",$E(X,1,30),DA)
"^DD",991.1,991.1,3,1,1,"DT")
2970311
"^DD",991.1,991.1,3,3)
Enter HL7 message IEN
"^DD",991.1,991.1,3,21,0)
^^1^1^2990308^^
"^DD",991.1,991.1,3,21,1,0)
This is the internal entry number (IEN) of the HL7 message.
"^DD",991.1,991.1,3,"DT")
2980925
"^DD",991.1,991.1,4,0)
PARAMETER^F^^2;E1,250^K:$L(X)>250!($L(X)<1) X
"^DD",991.1,991.1,4,3)
For outbound messages, this is the event stub; for inbound messages, this is the entry point for the message processor.
"^DD",991.1,991.1,4,21,0)
^^3^3^2990308^^
"^DD",991.1,991.1,4,21,1,0)
This is a free text field that holds up to 250 characters.
"^DD",991.1,991.1,4,21,2,0)
For outbound messages, this is the event stub.  For inbound
"^DD",991.1,991.1,4,21,3,0)
messages, this is the entry point for the message processor.
"^DD",991.1,991.1,4,"DT")
2970407
"^DD",991.1,991.1,5,0)
EVENT CLASS^P995'^RGEQASN(^0;6^Q
"^DD",991.1,991.1,5,3)
Event class to which stub entry belongs.
"^DD",991.1,991.1,5,21,0)
^^1^1^2990308^^^
"^DD",991.1,991.1,5,21,1,0)
This is a pointer to the CIRN EVENT ASSOCIATION file (#995).
"^DD",991.1,991.1,5,"DT")
2970311
"^DD",991.1,991.12,0)
EXCEPTION SUB-FIELD^^10^4
"^DD",991.1,991.12,0,"DT")
2970202
"^DD",991.1,991.12,0,"IX","B",991.12,.01)

"^DD",991.1,991.12,0,"NM","EXCEPTION")

"^DD",991.1,991.12,0,"UP")
991.1
"^DD",991.1,991.12,.01,0)
NUMBER^MNJ12,0X^^0;1^K:X'=X\1!(X<1) X
"^DD",991.1,991.12,.01,1,0)
^.1
"^DD",991.1,991.12,.01,1,1,0)
991.12^B
"^DD",991.1,991.12,.01,1,1,1)
S ^RGHL7(991.1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",991.1,991.12,.01,1,1,2)
K ^RGHL7(991.1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",991.1,991.12,.01,3)
Index of this exception
"^DD",991.1,991.12,.01,21,0)
^^1^1^2990308^^
"^DD",991.1,991.12,.01,21,1,0)
This is the index number of this exception.
"^DD",991.1,991.12,.01,"DT")
2970131
"^DD",991.1,991.12,1,0)
LINE^NJ12,0X^^0;2^K:X\1'=X!(X<1) X S:$D(X) DINUM=X
"^DD",991.1,991.12,1,3)
HL7 message line number in which exception occurred.
"^DD",991.1,991.12,1,21,0)
^^1^1^2990308^^
"^DD",991.1,991.12,1,21,1,0)
This is the HL7 line number in which the exception occurred.
"^DD",991.1,991.12,1,"DT")
2970313
"^DD",991.1,991.12,2,0)
TYPE^P991.11'^RGHL7(991.11,^0;3^Q
"^DD",991.1,991.12,2,1,0)
^.1
"^DD",991.1,991.12,2,1,1,0)
991.1^AC
"^DD",991.1,991.12,2,1,1,1)
S ^RGHL7(991.1,"AC",$E(X,1,30),DA(1),DA)=""
"^DD",991.1,991.12,2,1,1,2)
K ^RGHL7(991.1,"AC",$E(X,1,30),DA(1),DA)
"^DD",991.1,991.12,2,1,1,"DT")
2970202
"^DD",991.1,991.12,2,3)
Type of this exception.
"^DD",991.1,991.12,2,21,0)
^^1^1^2990308^^^
"^DD",991.1,991.12,2,21,1,0)
This is a pointer to the CIRN HL7 EXCEPTION TYPE file (#991.11).
"^DD",991.1,991.12,2,"DT")
2970202
"^DD",991.1,991.12,10,0)
TEXT^F^^10;E1,100^K:$L(X)>100!($L(X)<1) X
"^DD",991.1,991.12,10,3)
Supplemental text for exception.
"^DD",991.1,991.12,10,21,0)
^^1^1^2990308^^
"^DD",991.1,991.12,10,21,1,0)
This is a free text field used for supplemental text for the exception.
"^DD",991.1,991.12,10,"DT")
2970202
"^DD",991.11,991.11,0)
FIELD^^99^8
"^DD",991.11,991.11,0,"DDA")
N
"^DD",991.11,991.11,0,"DT")
2980721
"^DD",991.11,991.11,0,"ID",10)
W:$D(^(10)) "   ",$E(^(10),1,100)
"^DD",991.11,991.11,0,"IX","B",991.11,.01)

"^DD",991.11,991.11,0,"IX","C",991.11,10)

"^DD",991.11,991.11,0,"NM","CIRN HL7 EXCEPTION TYPE")

"^DD",991.11,991.11,0,"PT",991.12,2)

"^DD",991.11,991.11,0,"VRPK")
CLINICAL INFO RESOURCE NETWORK
"^DD",991.11,991.11,.01,0)
NUMBER^RNJ12,0X^^0;1^K:X'=X\1!(X<1) X S:$D(X) DINUM=X
"^DD",991.11,991.11,.01,1,0)
^.1
"^DD",991.11,991.11,.01,1,1,0)
991.11^B
"^DD",991.11,991.11,.01,1,1,1)
S ^RGHL7(991.11,"B",$E(X,1,30),DA)=""
"^DD",991.11,991.11,.01,1,1,2)
K ^RGHL7(991.11,"B",$E(X,1,30),DA)
"^DD",991.11,991.11,.01,3)
Index of this exception.
"^DD",991.11,991.11,.01,21,0)
^^1^1^2990308^^
"^DD",991.11,991.11,.01,21,1,0)
This is the index number of this exception.
"^DD",991.11,991.11,.01,"DT")
2970201
"^DD",991.11,991.11,1,0)
SEVERITY^S^0:INFORMATIONAL;1:MINOR;2:SEVERE;^0;2^Q
"^DD",991.11,991.11,1,3)
Severity level of this exception.
"^DD",991.11,991.11,1,21,0)
^^2^2^2990308^^
"^DD",991.11,991.11,1,21,1,0)
This is the severity level of this exception, '0' for Informational,
"^DD",991.11,991.11,1,21,2,0)
'1' for Minor or '2' for Severe.
"^DD",991.11,991.11,1,"DT")
2970201
"^DD",991.11,991.11,2,0)
ACTION^S^0:NONE;1:MAIL;2:ALERT;^0;3^Q
"^DD",991.11,991.11,2,3)
Action to be taken upon logging this exception.
"^DD",991.11,991.11,2,21,0)
^^2^2^2990308^^
"^DD",991.11,991.11,2,21,1,0)
This is the action to be taken upon logging this exception,
"^DD",991.11,991.11,2,21,2,0)
'0' for None, '1' for Mail, or '2' for Alert.
"^DD",991.11,991.11,2,"DT")
2970201
"^DD",991.11,991.11,3,0)
COUNT^NJ12,0X^^0;5^K:X\1'=X!(X<0) X
"^DD",991.11,991.11,3,3)
Total number of exceptions logged with this type.
"^DD",991.11,991.11,3,21,0)
^^1^1^2990308^^
"^DD",991.11,991.11,3,21,1,0)
This is a count of all exceptions logged of this type.
"^DD",991.11,991.11,3,"DT")
2970317
"^DD",991.11,991.11,6,0)
MAIL GROUP^P3.8'^XMB(3.8,^0;4^Q
"^DD",991.11,991.11,6,3)
Mail group to which notification will be sent for alert and mail action types.
"^DD",991.11,991.11,6,21,0)
^^3^3^2990308^^
"^DD",991.11,991.11,6,21,1,0)
This is a pointer to the MAIL GROUP file (#3.8), indicating
"^DD",991.11,991.11,6,21,2,0)
which mail group a notification will be sent to for alert
"^DD",991.11,991.11,6,21,3,0)
and mail action types.
"^DD",991.11,991.11,6,"DT")
2970201
"^DD",991.11,991.11,10,0)
TEXT^F^^10;E1,100^K:$L(X)>100!($L(X)<1) X
"^DD",991.11,991.11,10,1,0)
^.1
"^DD",991.11,991.11,10,1,1,0)
991.11^C
"^DD",991.11,991.11,10,1,1,1)
S ^RGHL7(991.11,"C",$E(X,1,30),DA)=""
"^DD",991.11,991.11,10,1,1,2)
K ^RGHL7(991.11,"C",$E(X,1,30),DA)
"^DD",991.11,991.11,10,1,1,"DT")
2970201
"^DD",991.11,991.11,10,3)
Text message for this exception.
"^DD",991.11,991.11,10,21,0)
^^2^2^2990308^^
"^DD",991.11,991.11,10,21,1,0)
This is a free text field (up to 100 characters) which holds the
"^DD",991.11,991.11,10,21,2,0)
message for this exception.
"^DD",991.11,991.11,10,"DT")
2970201
"^DD",991.11,991.11,20,0)
SECURITY KEY^991.112P^^20;0
"^DD",991.11,991.11,20,21,0)
^^4^4^2990308^^^
"^DD",991.11,991.11,20,21,1,0)
This is used to control access to a particular exception type. 
"^DD",991.11,991.11,20,21,2,0)
A user must possess at least one of the listed security keys to 
"^DD",991.11,991.11,20,21,3,0)
access the associated exception.  If no security keys are listed, 
"^DD",991.11,991.11,20,21,4,0)
access is unrestricted.
"^DD",991.11,991.11,99,0)
DESCRIPTION^991.1199^^99;0
"^DD",991.11,991.11,99,21,0)
^^2^2^2990308^^^
"^DD",991.11,991.11,99,21,1,0)
This is a word-processing field used for storing
"^DD",991.11,991.11,99,21,2,0)
the detailed explanation of this exception type.
"^DD",991.11,991.112,0)
SECURITY KEY SUB-FIELD^^.01^1
"^DD",991.11,991.112,0,"DT")
2980721
"^DD",991.11,991.112,0,"IX","B",991.112,.01)

"^DD",991.11,991.112,0,"NM","SECURITY KEY")

"^DD",991.11,991.112,0,"UP")
991.11
"^DD",991.11,991.112,.01,0)
SECURITY KEY^MP19.1'X^DIC(19.1,^0;1^S DINUM=X
"^DD",991.11,991.112,.01,1,0)
^.1
"^DD",991.11,991.112,.01,1,1,0)
991.112^B
"^DD",991.11,991.112,.01,1,1,1)
S ^RGHL7(991.11,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",991.11,991.112,.01,1,1,2)
K ^RGHL7(991.11,DA(1),20,"B",$E(X,1,30),DA)
"^DD",991.11,991.112,.01,3)
Enter a security key to control access to this exception.
"^DD",991.11,991.112,.01,21,0)
^^4^4^2990308^^
"^DD",991.11,991.112,.01,21,1,0)
This is used to control access to a particular exception type. 
"^DD",991.11,991.112,.01,21,2,0)
A user must possess at least one of the listed security keys to 
"^DD",991.11,991.112,.01,21,3,0)
access the associated exception.  If no security keys are listed, 
"^DD",991.11,991.112,.01,21,4,0)
access is unrestricted.
"^DD",991.11,991.112,.01,"DT")
2980721
"^DD",991.11,991.1199,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",991.11,991.1199,0,"DT")
2970201
"^DD",991.11,991.1199,0,"NM","DESCRIPTION")

"^DD",991.11,991.1199,0,"UP")
991.11
"^DD",991.11,991.1199,.01,0)
DESCRIPTION^WL^^0;1^Q
"^DD",991.11,991.1199,.01,3)
Detailed explanation of this exception.
"^DD",991.11,991.1199,.01,21,0)
^^1^1^2990308^^^
"^DD",991.11,991.1199,.01,21,1,0)
This field holds the detailed explanation of this exception.
"^DD",991.11,991.1199,.01,"DT")
2970201
"^DD",995,995,0)
FIELD^^99^8
"^DD",995,995,0,"DDA")
N
"^DD",995,995,0,"DT")
2970407
"^DD",995,995,0,"IX","B",995,.01)

"^DD",995,995,0,"NM","CIRN EVENT ASSOCIATION")

"^DD",995,995,0,"PT",991.1,5)

"^DD",995,995,0,"PT",991.5,1)

"^DD",995,995,0,"PT",995.1,.03)

"^DD",995,995,0,"PT",995.2,.02)

"^DD",995,995,0,"VRPK")
CLINICAL INFO RESOURCE NETWORK
"^DD",995,995,.01,0)
EVENT TYPE^RFX^^0;1^K:$L(X)>30!($L(X)<2)!'(X'?1P.E) X I $D(X),($E(X)="A"!(X="B")) K X
"^DD",995,995,.01,1,0)
^.1
"^DD",995,995,.01,1,1,0)
995^B
"^DD",995,995,.01,1,1,1)
S ^RGEQASN("B",$E(X,1,30),DA)=""
"^DD",995,995,.01,1,1,2)
K ^RGEQASN("B",$E(X,1,30),DA)
"^DD",995,995,.01,3)
Answer must be 2-30 characters in length.
"^DD",995,995,.01,21,0)
^^2^2^2960928^^
"^DD",995,995,.01,21,1,0)
Name given to CIRN event that describes the condition that triggers
"^DD",995,995,.01,21,2,0)
the event.
"^DD",995,995,.01,"DT")
2960321
"^DD",995,995,1,0)
HL7 EVENT PROTOCOL^*P101'^ORD(101,^0;2^S DIC("S")="I $P(^(0),U,4)=""E""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",995,995,1,3)
HL7 event protocol associated with this CIRN event type.
"^DD",995,995,1,12)
Event protocols only
"^DD",995,995,1,12.1)
S DIC("S")="I $P(^(0),U,4)=""E"""
"^DD",995,995,1,21,0)
^^2^2^2970327^^
"^DD",995,995,1,21,1,0)
If an event triggers an HL7 message to be transmitted to other stations,
"^DD",995,995,1,21,2,0)
the event protocol that is triggered should be store in this field.
"^DD",995,995,1,"DT")
2960416
"^DD",995,995,2,0)
PRIORITY^NJ2,0^^0;3^K:+X'=X!(X>10)!(X<1)!(X?.E1"."1N.N) X
"^DD",995,995,2,3)
Type a Number between 1 and 10, 0 Decimal Digits
"^DD",995,995,2,21,0)
^^2^2^2970327^^
"^DD",995,995,2,21,1,0)
The priority field defines the system priority that background queue
"^DD",995,995,2,21,2,0)
is assigned.  A priority of 1 is lowest to priority 10 highest.
"^DD",995,995,2,"DT")
2960329
"^DD",995,995,4,0)
HANG TIME (SECONDS)^NJ3,0^^0;4^K:+X'=X!(X>600)!(X<30)!(X?.E1"."1N.N) X
"^DD",995,995,4,3)
Type a Number between 30 and 600, 0 Decimal Digits
"^DD",995,995,4,21,0)
^^6^6^2990308^^^^
"^DD",995,995,4,21,1,0)
When an event is put on a queue to be processed, a separate job
"^DD",995,995,4,21,2,0)
is started in the background to process the entries on the queue.  After
"^DD",995,995,4,21,3,0)
all entries on the queue are processed, the job can continue to monitor
"^DD",995,995,4,21,4,0)
the queue for new entries.  The hang time defines the amount of time
"^DD",995,995,4,21,5,0)
the job stays active waiting for new entries.  If no entries are placed
"^DD",995,995,4,21,6,0)
in the queue within the hang time, the background job stops.
"^DD",995,995,4,"DT")
2960321
"^DD",995,995,5,0)
DISABLE^S^0:NO;1:YES;^0;5^Q
"^DD",995,995,5,3)
Enter '1' to Disable, '0' to process.
"^DD",995,995,5,21,0)
^^1^1^2990308^^^^
"^DD",995,995,5,21,1,0)
When a queue is disabled, no entries will be processed on the queue.
"^DD",995,995,5,"DT")
2960321
"^DD",995,995,10,0)
TAG^F^^1;1^K:$L(X)>8!($L(X)<1)!'(X?1.8AN) X
"^DD",995,995,10,3)
Optional tag defining entry point for subdaemon.
"^DD",995,995,10,21,0)
^^1^1^2970327^^
"^DD",995,995,10,21,1,0)
Routine line tag to use to process event entries on the queue.
"^DD",995,995,10,"DT")
2960222
"^DD",995,995,11,0)
ROUTINE^F^^1;2^K:$L(X)>8!($L(X)<1)!'(X?1.8AN) X
"^DD",995,995,11,3)
Routine name of subdaemon for this data class.
"^DD",995,995,11,21,0)
^^1^1^2970327^^
"^DD",995,995,11,21,1,0)
Name of routine to use to process event entries on the queue.
"^DD",995,995,11,"DT")
2960222
"^DD",995,995,99,0)
DESCRIPTION^995.099^^99;0
"^DD",995,995,99,21,0)
^^2^2^2990308^^^
"^DD",995,995,99,21,1,0)
This field holds a detailed explanation of this event type and
"^DD",995,995,99,21,2,0)
the format of its associated event stub.
"^DD",995,995.099,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",995,995.099,0,"DT")
2970407
"^DD",995,995.099,0,"NM","DESCRIPTION")

"^DD",995,995.099,0,"UP")
995
"^DD",995,995.099,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",995,995.099,.01,3)
Detailed description of this event type and the format of its associated event stub.
"^DD",995,995.099,.01,21,0)
^^2^2^2990308^^^
"^DD",995,995.099,.01,21,1,0)
This is a word-processing field which holds a detailed explanation
"^DD",995,995.099,.01,21,2,0)
of this event type and the format of its associated event stub.
"^DD",995,995.099,.01,"DT")
2970407
"^DD",995.1,995.1,0)
FIELD^^2^5
"^DD",995.1,995.1,0,"DDA")
N
"^DD",995.1,995.1,0,"DT")
2960307
"^DD",995.1,995.1,0,"ID","WR1")
W "   ",$E($P(^(0),U,2),4,5)_"-"_$E($P(^(0),U,2),6,7)_"-"_$E($P(^(0),U,2),2,3)
"^DD",995.1,995.1,0,"ID","WR2")
S %I=Y,Y=$S('$D(^(0)):"",$D(^RGEQASN(+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(995,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",995.1,995.1,0,"IX","AC",995.1,.03)

"^DD",995.1,995.1,0,"IX","B",995.1,.01)

"^DD",995.1,995.1,0,"NM","CIRN EVENT EXCEPTION")

"^DD",995.1,995.1,0,"VRPK")
CLINICAL INFO RESOURCE NETWORK
"^DD",995.1,995.1,.01,0)
NUMBER^RNJ8,0^^0;1^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",995.1,995.1,.01,1,0)
^.1
"^DD",995.1,995.1,.01,1,1,0)
995.1^B
"^DD",995.1,995.1,.01,1,1,1)
S ^RGEQEXC("B",$E(X,1,30),DA)=""
"^DD",995.1,995.1,.01,1,1,2)
K ^RGEQEXC("B",$E(X,1,30),DA)
"^DD",995.1,995.1,.01,3)
Type a Number between 1 and 99999999, 0 Decimal Digits
"^DD",995.1,995.1,.01,21,0)
^^1^1^2970327^^
"^DD",995.1,995.1,.01,21,1,0)
A sequential number assigned to event exceptions.
"^DD",995.1,995.1,.01,"DT")
2960307
"^DD",995.1,995.1,.02,0)
DATE/TIME^RD^^0;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",995.1,995.1,.02,3)
Date/time event exception occurred.
"^DD",995.1,995.1,.02,21,0)
^^1^1^2990308^^^
"^DD",995.1,995.1,.02,21,1,0)
Date/time event exception occurred.
"^DD",995.1,995.1,.02,"DT")
2960307
"^DD",995.1,995.1,.03,0)
TYPE^RP995'^RGEQASN(^0;3^Q
"^DD",995.1,995.1,.03,1,0)
^.1
"^DD",995.1,995.1,.03,1,1,0)
995.1^AC
"^DD",995.1,995.1,.03,1,1,1)
S ^RGEQEXC("AC",$E(X,1,30),DA)=""
"^DD",995.1,995.1,.03,1,1,2)
K ^RGEQEXC("AC",$E(X,1,30),DA)
"^DD",995.1,995.1,.03,1,1,"DT")
2960325
"^DD",995.1,995.1,.03,3)
References the type of CIRN event that caused the exception.
"^DD",995.1,995.1,.03,21,0)
^^1^1^2990308^^^
"^DD",995.1,995.1,.03,21,1,0)
References the type of CIRN event that errored.
"^DD",995.1,995.1,.03,"DT")
2960325
"^DD",995.1,995.1,1,0)
PARAMETERS^F^^1;E1,245^K:$L(X)>245!($L(X)<1) X
"^DD",995.1,995.1,1,3)
Answer must be 1-245 characters in length.
"^DD",995.1,995.1,1,21,0)
^^7^7^2970327^^
"^DD",995.1,995.1,1,21,1,0)
When an event is placed on a queue for later process, parameter passing
"^DD",995.1,995.1,1,21,2,0)
is supported.  Parameters are required so the processing routine knows
"^DD",995.1,995.1,1,21,3,0)
what entries on the queue to process or other special parameters defined
"^DD",995.1,995.1,1,21,4,0)
by the event processing routine.
"^DD",995.1,995.1,1,21,5,0)
 
"^DD",995.1,995.1,1,21,6,0)
When an error occurs, the parameters that were required are store in this
"^DD",995.1,995.1,1,21,7,0)
field so when re-processing takes place the same parameters can be used.
"^DD",995.1,995.1,1,"DT")
2960307
"^DD",995.1,995.1,2,0)
ERROR^F^^2;E1,245^K:$L(X)>245!($L(X)<1) X
"^DD",995.1,995.1,2,3)
Answer must be 1-245 characters in length.
"^DD",995.1,995.1,2,21,0)
^^2^2^2970327^^
"^DD",995.1,995.1,2,21,1,0)
If a soft-error or hard-error occurs, the description of error is stored
"^DD",995.1,995.1,2,21,2,0)
in this field for debugging purposes.
"^DD",995.1,995.1,2,"DT")
2960307
"^DD",995.2,995.2,0)
FIELD^^1.02^5
"^DD",995.2,995.2,0,"DT")
2960307
"^DD",995.2,995.2,0,"ID","WR1")
W "   ",$E($P(^(0),U,3),4,5)_"-"_$E($P(^(0),U,3),6,7)_"-"_$E($P(^(0),U,3),2,3)
"^DD",995.2,995.2,0,"ID","WR2")
S %I=Y,Y=$S('$D(^(0)):"",$D(^RGEQASN(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(995,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",995.2,995.2,0,"IX","AX1",995.2,.02)

"^DD",995.2,995.2,0,"IX","AX2",995.2,.03)

"^DD",995.2,995.2,0,"IX","B",995.2,.01)

"^DD",995.2,995.2,0,"NM","CIRN EVENT STATISTICS")

"^DD",995.2,995.2,0,"VRPK")
CLINICAL INFO RESOURCE NETWORK
"^DD",995.2,995.2,.01,0)
NUMBER^RNJ9,0^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",995.2,995.2,.01,1,0)
^.1
"^DD",995.2,995.2,.01,1,1,0)
995.2^B
"^DD",995.2,995.2,.01,1,1,1)
S ^RGSTAT(995.2,"B",$E(X,1,30),DA)=""
"^DD",995.2,995.2,.01,1,1,2)
K ^RGSTAT(995.2,"B",$E(X,1,30),DA)
"^DD",995.2,995.2,.01,3)
Type a Number between 1 and 999999999, 0 Decimal Digits
"^DD",995.2,995.2,.01,21,0)
^^2^2^2961008^
"^DD",995.2,995.2,.01,21,1,0)
A generic number assigned to each statistical entry in the file.  This
"^DD",995.2,995.2,.01,21,2,0)
number is sequential.
"^DD",995.2,995.2,.01,"DT")
2960307
"^DD",995.2,995.2,.02,0)
TYPE^RP995'^RGEQASN(^0;2^Q
"^DD",995.2,995.2,.02,1,0)
^.1
"^DD",995.2,995.2,.02,1,1,0)
995.2^AX1^MUMPS
"^DD",995.2,995.2,.02,1,1,1)
I $P(^RGSTAT(995.2,DA,0),"^",3)]"" S ^RGSTAT(995.2,"AX",X,$P(^RGSTAT(995.2,DA,0),"^",3),DA)=""
"^DD",995.2,995.2,.02,1,1,2)
I $P(^RGSTAT(995.2,DA,0),"^",3)]"" K ^RGSTAT(995.2,"AX",X,$P(^RGSTAT(995.2,DA,0),"^",3),DA)
"^DD",995.2,995.2,.02,1,1,"DT")
2960307
"^DD",995.2,995.2,.02,3)
References the event type this statistical entry represents.
"^DD",995.2,995.2,.02,21,0)
^^1^1^2990308^^^
"^DD",995.2,995.2,.02,21,1,0)
The event type the statistical entry represents.
"^DD",995.2,995.2,.02,"DT")
2960307
"^DD",995.2,995.2,.03,0)
DATE^RD^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",995.2,995.2,.03,1,0)
^.1
"^DD",995.2,995.2,.03,1,1,0)
995.2^AX2^MUMPS
"^DD",995.2,995.2,.03,1,1,1)
I $P(^RGSTAT(995.2,DA,0),"^",2)]"" S ^RGSTAT(995.2,"AX",$P(^RGSTAT(995.2,DA,0),"^",2),X,DA)=""
"^DD",995.2,995.2,.03,1,1,2)
I $P(^RGSTAT(995.2,DA,0),"^",2)]"" K ^RGSTAT(995.2,"AX",$P(^RGSTAT(995.2,DA,0),"^",2),X,DA)
"^DD",995.2,995.2,.03,1,1,"DT")
2960307
"^DD",995.2,995.2,.03,3)
Date this statistical entry was created.
"^DD",995.2,995.2,.03,21,0)
^^4^4^2990308^^^
"^DD",995.2,995.2,.03,21,1,0)
The date the statistical entry was created.  When an event is triggered,
"^DD",995.2,995.2,.03,21,2,0)
it creates an entry in this file if one does not exist for the date.
"^DD",995.2,995.2,.03,21,3,0)
If an event type is not triggered in a particular day, an entry will
"^DD",995.2,995.2,.03,21,4,0)
not exist for that date.
"^DD",995.2,995.2,.03,"DT")
2960307
"^DD",995.2,995.2,1.01,0)
PROCESSED^NJ7,0^^1;1^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",995.2,995.2,1.01,3)
Enter the number of times the event was triggered for the date specified.
"^DD",995.2,995.2,1.01,21,0)
^^2^2^2990308^^^
"^DD",995.2,995.2,1.01,21,1,0)
Number representing the number of times the event was triggered for
"^DD",995.2,995.2,1.01,21,2,0)
the date specified in the date field.
"^DD",995.2,995.2,1.01,"DT")
2960307
"^DD",995.2,995.2,1.02,0)
ERRORS^NJ7,0^^1;2^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",995.2,995.2,1.02,3)
Type a Number between 0 and 9999999, 0 Decimal Digits
"^DD",995.2,995.2,1.02,21,0)
^^9^9^2961008^^
"^DD",995.2,995.2,1.02,21,1,0)
This represents the number of errors that were encountered while trying
"^DD",995.2,995.2,1.02,21,2,0)
to process an event.  Since events can be re-processed after an
"^DD",995.2,995.2,1.02,21,3,0)
error condition is corrected, the number of errors and number of events
"^DD",995.2,995.2,1.02,21,4,0)
successfully processed can be greater than the number of total events.
"^DD",995.2,995.2,1.02,21,5,0)
 
"^DD",995.2,995.2,1.02,21,6,0)
For example: If a single event attempted to run and had an error and
"^DD",995.2,995.2,1.02,21,7,0)
was reprocessed successfully, the number of errors would be one and the
"^DD",995.2,995.2,1.02,21,8,0)
number processed would be one.  If you totaled these two fields
"^DD",995.2,995.2,1.02,21,9,0)
it would equal two, but this represents only one occurrence of an event.
"^DD",995.2,995.2,1.02,"DT")
2960307
"^DIC",990.8,990.8,0)
CIRN REPOSITORY SITE PARAMETER^990.8
"^DIC",990.8,990.8,0,"GL")
^RGSITE("COR",
"^DIC",990.8,990.8,"%",0)
^1.005^1^1
"^DIC",990.8,990.8,"%",1,0)
RG
"^DIC",990.8,990.8,"%","B","RG",1)

"^DIC",990.8,990.8,"%D",0)
^^2^2^2980318^
"^DIC",990.8,990.8,"%D",1,0)
This file contains settable parameters that control the behavior of various 
"^DIC",990.8,990.8,"%D",2,0)
components of the CIRN Object Repository.
"^DIC",990.8,"B","CIRN REPOSITORY SITE PARAMETER",990.8)

"^DIC",991.1,991.1,0)
CIRN HL7 EXCEPTION LOG^991.1
"^DIC",991.1,991.1,0,"GL")
^RGHL7(991.1,
"^DIC",991.1,991.1,"%D",0)
^^2^2^2990308^^
"^DIC",991.1,991.1,"%D",1,0)
This is the CIRN HL7 EXCEPTION LOG file (#991.1), used
"^DIC",991.1,991.1,"%D",2,0)
for tracking CIRN HL7 exception information.
"^DIC",991.1,"B","CIRN HL7 EXCEPTION LOG",991.1)

"^DIC",991.11,991.11,0)
CIRN HL7 EXCEPTION TYPE^991.11
"^DIC",991.11,991.11,0,"GL")
^RGHL7(991.11,
"^DIC",991.11,991.11,"%D",0)
^^3^3^2990308^^
"^DIC",991.11,991.11,"%D",1,0)
This file holds the CIRN HL7 exception types.  It is pointed to by
"^DIC",991.11,991.11,"%D",2,0)
the TYPE field (#2) for the EXCEPTION subfield (#991.12) of the CIRN
"^DIC",991.11,991.11,"%D",3,0)
HL7 EXCEPTION LOG file (#991.1).
"^DIC",991.11,"B","CIRN HL7 EXCEPTION TYPE",991.11)

"^DIC",995,995,0)
CIRN EVENT ASSOCIATION^995
"^DIC",995,995,0,"GL")
^RGEQASN(
"^DIC",995,995,"%D",0)
^^8^8^2990308^^^^
"^DIC",995,995,"%D",1,0)
This file holds definitions of CIRN events that occur.  When an event
"^DIC",995,995,"%D",2,0)
occurs, and entry is placed into a queue and is associated with
"^DIC",995,995,"%D",3,0)
an entry in this file.  This file will determine how the event
"^DIC",995,995,"%D",4,0)
is processed (i.e., the routine to call to process the event and
"^DIC",995,995,"%D",5,0)
related HL7 Protocol).
"^DIC",995,995,"%D",6,0)
 
"^DIC",995,995,"%D",7,0)
Since each event type is placed on it's on queue, this file also
"^DIC",995,995,"%D",8,0)
determines characteristics of the queue itself.
"^DIC",995,"B","CIRN EVENT ASSOCIATION",995)

"^DIC",995.1,995.1,0)
CIRN EVENT EXCEPTION^995.1
"^DIC",995.1,995.1,0,"GL")
^RGEQEXC(
"^DIC",995.1,995.1,"%D",0)
^^6^6^2960928^^
"^DIC",995.1,995.1,"%D",1,0)
If a soft-error or hard-error occurs while processing a CIRN event,
"^DIC",995.1,995.1,"%D",2,0)
an entry is placed in this file and the event is removed from the
"^DIC",995.1,995.1,"%D",3,0)
active queue.
"^DIC",995.1,995.1,"%D",4,0)
 
"^DIC",995.1,995.1,"%D",5,0)
This file holds all necessary information to research the error and
"^DIC",995.1,995.1,"%D",6,0)
to re-process the event after the error-condition is corrected.
"^DIC",995.1,"B","CIRN EVENT EXCEPTION",995.1)

"^DIC",995.2,995.2,0)
CIRN EVENT STATISTICS^995.2I
"^DIC",995.2,995.2,0,"GL")
^RGSTAT(995.2,
"^DIC",995.2,995.2,"%D",0)
^^3^3^2961008^
"^DIC",995.2,995.2,"%D",1,0)
For each event association (or event type) statistics are automatically
"^DIC",995.2,995.2,"%D",2,0)
store each time the event is triggered.  Statistics are grouped by date and
"^DIC",995.2,995.2,"%D",3,0)
event type.
"^DIC",995.2,"B","CIRN EVENT STATISTICS",995.2)

**INSTALL NAME**
MASTER PATIENT INDEX VISTA 1.0
"BLD",555,0)
MASTER PATIENT INDEX VISTA 1.0^MASTER PATIENT INDEX VISTA^0^2990428^y
"BLD",555,1,0)
^^2^2^2980625^^^
"BLD",555,1,1,0)
 
"BLD",555,1,2,0)
Master Patient Index project.
"BLD",555,4,0)
^9.64PA^984.9^4
"BLD",555,4,984.1,0)
984.1
"BLD",555,4,984.1,222)
y^y^f^^^^n
"BLD",555,4,984.5,0)
984.5
"BLD",555,4,984.5,222)
y^y^f^^n^^y^o^n
"BLD",555,4,984.8,0)
984.8
"BLD",555,4,984.8,222)
y^y^f^^n^^y^o^n
"BLD",555,4,984.9,0)
984.9
"BLD",555,4,984.9,222)
y^y^f^^^^n
"BLD",555,4,"B",984.1,984.1)

"BLD",555,4,"B",984.5,984.5)

"BLD",555,4,"B",984.8,984.8)

"BLD",555,4,"B",984.9,984.9)

"BLD",555,"ABNS",0)
^9.66A^1^1
"BLD",555,"ABNS",1,0)
MPIF
"BLD",555,"ABNS",1,1,0)
^9.661A^^
"BLD",555,"ABNS","B","MPIF",1)

"BLD",555,"ABPKG")
^^
"BLD",555,"INI")

"BLD",555,"INIT")
MPIFPST
"BLD",555,"KRN",0)
^9.67PA^19^18
"BLD",555,"KRN",.4,0)
.4
"BLD",555,"KRN",.4,"NM",0)
^9.68A^6^2
"BLD",555,"KRN",.4,"NM",5,0)
MPIF REQUEST VIEW    FILE #984.9^984.9^0
"BLD",555,"KRN",.4,"NM",6,0)
MPIF OUTSTANDING REQUESTS    FILE #984.9^984.9^0
"BLD",555,"KRN",.4,"NM","B","MPIF OUTSTANDING REQUESTS    FILE #984.9",6)

"BLD",555,"KRN",.4,"NM","B","MPIF REQUEST VIEW    FILE #984.9",5)

"BLD",555,"KRN",.401,0)
.401
"BLD",555,"KRN",.401,"NM",0)
^9.68A^6^2
"BLD",555,"KRN",.401,"NM",5,0)
MPIF PENDING REQUESTS    FILE #984.9^984.9^0
"BLD",555,"KRN",.401,"NM",6,0)
MPIF REQUEST SORT    FILE #984.9^984.9^0
"BLD",555,"KRN",.401,"NM","B","MPIF PENDING REQUESTS    FILE #984.9",5)

"BLD",555,"KRN",.401,"NM","B","MPIF REQUEST SORT    FILE #984.9",6)

"BLD",555,"KRN",.402,0)
.402
"BLD",555,"KRN",.402,"NM",0)
^9.68A^26^9
"BLD",555,"KRN",.402,"NM",18,0)
MPIF SITE PARAMETERS    FILE #991.8^991.8^0
"BLD",555,"KRN",.402,"NM",19,0)
MPIF REQUEST EDIT    FILE #984.9^984.9^0
"BLD",555,"KRN",.402,"NM",20,0)
MPIF REQUEST INCOMING    FILE #984.9^984.9^0
"BLD",555,"KRN",.402,"NM",21,0)
MPIF RESULT INCOMING    FILE #984.9^984.9^0
"BLD",555,"KRN",.402,"NM",22,0)
MPIF REVIEW AUTO    FILE #984.9^984.9^0
"BLD",555,"KRN",.402,"NM",23,0)
MPIF REVIEW RESET    FILE #984.9^984.9^0
"BLD",555,"KRN",.402,"NM",24,0)
MPIF REVIEW RESULT    FILE #984.9^984.9^0
"BLD",555,"KRN",.402,"NM",25,0)
MPIF OPEN REQUEST    FILE #984.9^984.9^0
"BLD",555,"KRN",.402,"NM",26,0)
MPIF PCMM REQUEST    FILE #984.9^984.9^0
"BLD",555,"KRN",.402,"NM","B","MPIF OPEN REQUEST    FILE #984.9",25)

"BLD",555,"KRN",.402,"NM","B","MPIF PCMM REQUEST    FILE #984.9",26)

"BLD",555,"KRN",.402,"NM","B","MPIF REQUEST EDIT    FILE #984.9",19)

"BLD",555,"KRN",.402,"NM","B","MPIF REQUEST INCOMING    FILE #984.9",20)

"BLD",555,"KRN",.402,"NM","B","MPIF RESULT INCOMING    FILE #984.9",21)

"BLD",555,"KRN",.402,"NM","B","MPIF REVIEW AUTO    FILE #984.9",22)

"BLD",555,"KRN",.402,"NM","B","MPIF REVIEW RESET    FILE #984.9",23)

"BLD",555,"KRN",.402,"NM","B","MPIF REVIEW RESULT    FILE #984.9",24)

"BLD",555,"KRN",.402,"NM","B","MPIF SITE PARAMETERS    FILE #991.8",18)

"BLD",555,"KRN",.403,0)
.403
"BLD",555,"KRN",.403,"NM",0)
^9.68A^^
"BLD",555,"KRN",.5,0)
.5
"BLD",555,"KRN",.84,0)
.84
"BLD",555,"KRN",3.6,0)
3.6
"BLD",555,"KRN",3.8,0)
3.8
"BLD",555,"KRN",3.8,"NM",0)
^9.68A^6^3
"BLD",555,"KRN",3.8,"NM",4,0)
MPIF EXCEPTIONS^^0
"BLD",555,"KRN",3.8,"NM",5,0)
MPIF CMOR REQUEST^^0
"BLD",555,"KRN",3.8,"NM",6,0)
MPIF HL7 GROUP^^0
"BLD",555,"KRN",3.8,"NM","B","MPIF CMOR REQUEST",5)

"BLD",555,"KRN",3.8,"NM","B","MPIF EXCEPTIONS",4)

"BLD",555,"KRN",3.8,"NM","B","MPIF HL7 GROUP",6)

"BLD",555,"KRN",9.2,0)
9.2
"BLD",555,"KRN",9.8,0)
9.8
"BLD",555,"KRN",9.8,"NM",0)
^9.68A^73^27
"BLD",555,"KRN",9.8,"NM",41,0)
MPIFBT1^^0^B34418079
"BLD",555,"KRN",9.8,"NM",42,0)
MPIFBT2^^0^B80747724
"BLD",555,"KRN",9.8,"NM",43,0)
MPIFAPI^^0^B9599583
"BLD",555,"KRN",9.8,"NM",44,0)
MPIFVTQ^^0^B38777593
"BLD",555,"KRN",9.8,"NM",45,0)
MPIFSPC^^0^B1359691
"BLD",555,"KRN",9.8,"NM",46,0)
MPIFSAQ^^0^B69573214
"BLD",555,"KRN",9.8,"NM",47,0)
MPIFRES^^0^B8301437
"BLD",555,"KRN",9.8,"NM",49,0)
MPIFMER^^0^B12062764
"BLD",555,"KRN",9.8,"NM",50,0)
MPIFDEL^^0^B6388541
"BLD",555,"KRN",9.8,"NM",53,0)
MPIFQ0^^0^B59054901
"BLD",555,"KRN",9.8,"NM",54,0)
MPIFQ1^^0^B50548350
"BLD",555,"KRN",9.8,"NM",56,0)
MPIFQED^^0^B148390
"BLD",555,"KRN",9.8,"NM",57,0)
MPIF001^^0^B30811725
"BLD",555,"KRN",9.8,"NM",58,0)
MPIFCMOR^^0^B3986016
"BLD",555,"KRN",9.8,"NM",59,0)
MPIFEDIT^^0^B4208388
"BLD",555,"KRN",9.8,"NM",60,0)
MPIFHL7^^0^B2010275
"BLD",555,"KRN",9.8,"NM",62,0)
MPIFNEW^^0^B2551537
"BLD",555,"KRN",9.8,"NM",64,0)
MPIFQUE3^^0^B46973942
"BLD",555,"KRN",9.8,"NM",65,0)
MPIFQUE4^^0^B38805707
"BLD",555,"KRN",9.8,"NM",66,0)
MPIFQUE5^^0^B7649149
"BLD",555,"KRN",9.8,"NM",67,0)
MPIFREQ^^0^B11231888
"BLD",555,"KRN",9.8,"NM",68,0)
MPIFRESS^^0^B7094513
"BLD",555,"KRN",9.8,"NM",69,0)
MPIFREV^^0^B7744343
"BLD",555,"KRN",9.8,"NM",70,0)
MPIFUTL^^0^B7092487
"BLD",555,"KRN",9.8,"NM",71,0)
MPIFA31I^^0^B23786221
"BLD",555,"KRN",9.8,"NM",72,0)
MPIFRTC^^0^B5305331
"BLD",555,"KRN",9.8,"NM",73,0)
MPIFNQ^^0^B4622197
"BLD",555,"KRN",9.8,"NM","B","MPIF001",57)

"BLD",555,"KRN",9.8,"NM","B","MPIFA31I",71)

"BLD",555,"KRN",9.8,"NM","B","MPIFAPI",43)

"BLD",555,"KRN",9.8,"NM","B","MPIFBT1",41)

"BLD",555,"KRN",9.8,"NM","B","MPIFBT2",42)

"BLD",555,"KRN",9.8,"NM","B","MPIFCMOR",58)

"BLD",555,"KRN",9.8,"NM","B","MPIFDEL",50)

"BLD",555,"KRN",9.8,"NM","B","MPIFEDIT",59)

"BLD",555,"KRN",9.8,"NM","B","MPIFHL7",60)

"BLD",555,"KRN",9.8,"NM","B","MPIFMER",49)

"BLD",555,"KRN",9.8,"NM","B","MPIFNEW",62)

"BLD",555,"KRN",9.8,"NM","B","MPIFNQ",73)

"BLD",555,"KRN",9.8,"NM","B","MPIFQ0",53)

"BLD",555,"KRN",9.8,"NM","B","MPIFQ1",54)

"BLD",555,"KRN",9.8,"NM","B","MPIFQED",56)

"BLD",555,"KRN",9.8,"NM","B","MPIFQUE3",64)

"BLD",555,"KRN",9.8,"NM","B","MPIFQUE4",65)

"BLD",555,"KRN",9.8,"NM","B","MPIFQUE5",66)

"BLD",555,"KRN",9.8,"NM","B","MPIFREQ",67)

"BLD",555,"KRN",9.8,"NM","B","MPIFRES",47)

"BLD",555,"KRN",9.8,"NM","B","MPIFRESS",68)

"BLD",555,"KRN",9.8,"NM","B","MPIFREV",69)

"BLD",555,"KRN",9.8,"NM","B","MPIFRTC",72)

"BLD",555,"KRN",9.8,"NM","B","MPIFSAQ",46)

"BLD",555,"KRN",9.8,"NM","B","MPIFSPC",45)

"BLD",555,"KRN",9.8,"NM","B","MPIFUTL",70)

"BLD",555,"KRN",9.8,"NM","B","MPIFVTQ",44)

"BLD",555,"KRN",19,0)
19
"BLD",555,"KRN",19,"NM",0)
^9.68A^45^22
"BLD",555,"KRN",19,"NM",12,0)
RGINIT MENU^^2
"BLD",555,"KRN",19,"NM",13,0)
RG ADMIN USER MENU^^2
"BLD",555,"KRN",19,"NM",14,0)
RG ADMIN COORD MENU^^2
"BLD",555,"KRN",19,"NM",16,0)
MPIFINIT DPT TO MPI^^0
"BLD",555,"KRN",19,"NM",17,0)
MPIF DISPLAY ONLY QUERY TO MPI^^0
"BLD",555,"KRN",19,"NM",19,0)
MPIF PAT INACT^^0
"BLD",555,"KRN",19,"NM",20,0)
MPIF VISTA MENU^^0
"BLD",555,"KRN",19,"NM",27,0)
MPIF IND MPI LOAD^^0
"BLD",555,"KRN",19,"NM",32,0)
MPIF LOC/MIS ICN RES^^0
"BLD",555,"KRN",19,"NM",33,0)
MPIF VIEW REQUEST^^0
"BLD",555,"KRN",19,"NM",34,0)
MPIF SITE PARAMETER^^0
"BLD",555,"KRN",19,"NM",35,0)
MPIF SENT REQUESTS^^0
"BLD",555,"KRN",19,"NM",36,0)
MPIF REVIEW REQUEST^^0
"BLD",555,"KRN",19,"NM",37,0)
MPIF RECEIVED REQUESTS^^0
"BLD",555,"KRN",19,"NM",38,0)
MPIF CMOR MGR^^0
"BLD",555,"KRN",19,"NM",39,0)
MPIF COMP MAIN^^0
"BLD",555,"KRN",19,"NM",40,0)
MPIF CMOR COMP BATCH^^0
"BLD",555,"KRN",19,"NM",41,0)
MPIF CMOR COMP STOP/RESTART^^0
"BLD",555,"KRN",19,"NM",42,0)
MPIF CMOR COMP STATUS^^0
"BLD",555,"KRN",19,"NM",43,0)
MPIF BATCH REVIEW^^0
"BLD",555,"KRN",19,"NM",44,0)
MPIF NEW REQUEST^^0
"BLD",555,"KRN",19,"NM",45,0)
MPIF EDIT REQUEST^^0
"BLD",555,"KRN",19,"NM","B","MPIF BATCH REVIEW",43)

"BLD",555,"KRN",19,"NM","B","MPIF CMOR COMP BATCH",40)

"BLD",555,"KRN",19,"NM","B","MPIF CMOR COMP STATUS",42)

"BLD",555,"KRN",19,"NM","B","MPIF CMOR COMP STOP/RESTART",41)

"BLD",555,"KRN",19,"NM","B","MPIF CMOR MGR",38)

"BLD",555,"KRN",19,"NM","B","MPIF COMP MAIN",39)

"BLD",555,"KRN",19,"NM","B","MPIF DISPLAY ONLY QUERY TO MPI",17)

"BLD",555,"KRN",19,"NM","B","MPIF EDIT REQUEST",45)

"BLD",555,"KRN",19,"NM","B","MPIF IND MPI LOAD",27)

"BLD",555,"KRN",19,"NM","B","MPIF LOC/MIS ICN RES",32)

"BLD",555,"KRN",19,"NM","B","MPIF NEW REQUEST",44)

"BLD",555,"KRN",19,"NM","B","MPIF PAT INACT",19)

"BLD",555,"KRN",19,"NM","B","MPIF RECEIVED REQUESTS",37)

"BLD",555,"KRN",19,"NM","B","MPIF REVIEW REQUEST",36)

"BLD",555,"KRN",19,"NM","B","MPIF SENT REQUESTS",35)

"BLD",555,"KRN",19,"NM","B","MPIF SITE PARAMETER",34)

"BLD",555,"KRN",19,"NM","B","MPIF VIEW REQUEST",33)

"BLD",555,"KRN",19,"NM","B","MPIF VISTA MENU",20)

"BLD",555,"KRN",19,"NM","B","MPIFINIT DPT TO MPI",16)

"BLD",555,"KRN",19,"NM","B","RG ADMIN COORD MENU",14)

"BLD",555,"KRN",19,"NM","B","RG ADMIN USER MENU",13)

"BLD",555,"KRN",19,"NM","B","RGINIT MENU",12)

"BLD",555,"KRN",19.1,0)
19.1
"BLD",555,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",555,"KRN",101,0)
101
"BLD",555,"KRN",101,"NM",0)
^9.68A^37^18
"BLD",555,"KRN",101,"NM",18,0)
MPIF A30^^0
"BLD",555,"KRN",101,"NM",19,0)
MPIF A29^^0
"BLD",555,"KRN",101,"NM",21,0)
MPIF CMOR COMPARISON CLIENT^^0
"BLD",555,"KRN",101,"NM",22,0)
MPIF CMOR RESULT CLIENT^^0
"BLD",555,"KRN",101,"NM",23,0)
MPIF A28 REQUEST^^0
"BLD",555,"KRN",101,"NM",24,0)
MPIF A28 RESPONSE^^0
"BLD",555,"KRN",101,"NM",25,0)
MPIF A29 SERVER^^0
"BLD",555,"KRN",101,"NM",26,0)
MPIF A30 SERVER^^0
"BLD",555,"KRN",101,"NM",27,0)
MPIF CMOR COMPARISON SERVER^^0
"BLD",555,"KRN",101,"NM",28,0)
MPIF CMOR RESULT SERVER^^0
"BLD",555,"KRN",101,"NM",30,0)
MPIF TEST^^0
"BLD",555,"KRN",101,"NM",31,0)
MPIF REAL-TIME QUERY (ADD PATIENT)^^0
"BLD",555,"KRN",101,"NM",32,0)
MPIF REAL-TIME QUERY (HELP)^^0
"BLD",555,"KRN",101,"NM",33,0)
MPIF REAL-TIME QUERY (SELECT PATIENT)^^0
"BLD",555,"KRN",101,"NM",34,0)
MPIF REAL-TIME QUERY MENU^^0
"BLD",555,"KRN",101,"NM",35,0)
MPIF ICN-Q02 SERVER^^0
"BLD",555,"KRN",101,"NM",36,0)
MPIF CMOR RESPONSE^^0
"BLD",555,"KRN",101,"NM",37,0)
MPIF CMOR REQUEST^^0
"BLD",555,"KRN",101,"NM","B","MPIF A28 REQUEST",23)

"BLD",555,"KRN",101,"NM","B","MPIF A28 RESPONSE",24)

"BLD",555,"KRN",101,"NM","B","MPIF A29",19)

"BLD",555,"KRN",101,"NM","B","MPIF A29 SERVER",25)

"BLD",555,"KRN",101,"NM","B","MPIF A30",18)

"BLD",555,"KRN",101,"NM","B","MPIF A30 SERVER",26)

"BLD",555,"KRN",101,"NM","B","MPIF CMOR COMPARISON CLIENT",21)

"BLD",555,"KRN",101,"NM","B","MPIF CMOR COMPARISON SERVER",27)

"BLD",555,"KRN",101,"NM","B","MPIF CMOR REQUEST",37)

"BLD",555,"KRN",101,"NM","B","MPIF CMOR RESPONSE",36)

"BLD",555,"KRN",101,"NM","B","MPIF CMOR RESULT CLIENT",22)

"BLD",555,"KRN",101,"NM","B","MPIF CMOR RESULT SERVER",28)

"BLD",555,"KRN",101,"NM","B","MPIF ICN-Q02 SERVER",35)

"BLD",555,"KRN",101,"NM","B","MPIF REAL-TIME QUERY (ADD PATIENT)",31)

"BLD",555,"KRN",101,"NM","B","MPIF REAL-TIME QUERY (HELP)",32)

"BLD",555,"KRN",101,"NM","B","MPIF REAL-TIME QUERY (SELECT PATIENT)",33)

"BLD",555,"KRN",101,"NM","B","MPIF REAL-TIME QUERY MENU",34)

"BLD",555,"KRN",101,"NM","B","MPIF TEST",30)

"BLD",555,"KRN",409.61,0)
409.61
"BLD",555,"KRN",409.61,"NM",0)
^9.68A^2^1
"BLD",555,"KRN",409.61,"NM",2,0)
MPIF REAL-TIME QUERY^^0
"BLD",555,"KRN",409.61,"NM","B","MPIF REAL-TIME QUERY",2)

"BLD",555,"KRN",771,0)
771
"BLD",555,"KRN",771,"NM",0)
^9.68A^15^7
"BLD",555,"KRN",771,"NM",7,0)
MPIF LOC/MIS^^0
"BLD",555,"KRN",771,"NM",10,0)
MPIF-STARTUP^^0
"BLD",555,"KRN",771,"NM",11,0)
MPIF A29 SERVER^^0
"BLD",555,"KRN",771,"NM",12,0)
MPIF A30 SERVER^^0
"BLD",555,"KRN",771,"NM",13,0)
MPIF MPI^^0
"BLD",555,"KRN",771,"NM",14,0)
MPIF CMOR COMP^^0
"BLD",555,"KRN",771,"NM",15,0)
MPIF CMOR RSLT^^0
"BLD",555,"KRN",771,"NM","B","MPIF A29 SERVER",11)

"BLD",555,"KRN",771,"NM","B","MPIF A30 SERVER",12)

"BLD",555,"KRN",771,"NM","B","MPIF CMOR COMP",14)

"BLD",555,"KRN",771,"NM","B","MPIF CMOR RSLT",15)

"BLD",555,"KRN",771,"NM","B","MPIF LOC/MIS",7)

"BLD",555,"KRN",771,"NM","B","MPIF MPI",13)

"BLD",555,"KRN",771,"NM","B","MPIF-STARTUP",10)

"BLD",555,"KRN",869.2,0)
869.2
"BLD",555,"KRN",869.2,"NM",0)
^9.68A^5^1
"BLD",555,"KRN",869.2,"NM",5,0)
MPIVA MAIL^^0
"BLD",555,"KRN",869.2,"NM","B","MPIVA MAIL",5)

"BLD",555,"KRN",870,0)
870
"BLD",555,"KRN",870,"NM",0)
^9.68A^^0
"BLD",555,"KRN",8994,0)
8994
"BLD",555,"KRN",8994,"NM",0)
^9.68A^^
"BLD",555,"KRN","B",.4,.4)

"BLD",555,"KRN","B",.401,.401)

"BLD",555,"KRN","B",.402,.402)

"BLD",555,"KRN","B",.403,.403)

"BLD",555,"KRN","B",.5,.5)

"BLD",555,"KRN","B",.84,.84)

"BLD",555,"KRN","B",3.6,3.6)

"BLD",555,"KRN","B",3.8,3.8)

"BLD",555,"KRN","B",9.2,9.2)

"BLD",555,"KRN","B",9.8,9.8)

"BLD",555,"KRN","B",19,19)

"BLD",555,"KRN","B",19.1,19.1)

"BLD",555,"KRN","B",101,101)

"BLD",555,"KRN","B",409.61,409.61)

"BLD",555,"KRN","B",771,771)

"BLD",555,"KRN","B",869.2,869.2)

"BLD",555,"KRN","B",870,870)

"BLD",555,"KRN","B",8994,8994)

"BLD",555,"QUES",0)
^9.62^^
"BLD",555,"REQB",0)
^9.611^^
"DATA",984.5,1,0)
TABLE #1^4;9;7;4;4;4;4;0;9;9;7;7;8;4;6;8
"DATA",984.5,1,1)
^5;0;6;5;1;1;2;3;6;5;3;5;7;6;5;5
"DATA",984.5,1,2)
^9;4;2;0;3;7;5;1;7;1;0;9;0;3;2;2
"DATA",984.5,1,3)
^3;2;1;7;7;0;6;9;2;4;1;1;3;8;1;0
"DATA",984.5,1,4)
^2;3;3;9;5;9;9;2;3;8;6;0;1;9;8;1
"DATA",984.5,1,5)
^1;6;8;2;0;6;1;7;4;3;5;4;4;2;3;3
"DATA",984.5,1,6)
^7;8;9;1;2;2;0;8;1;6;8;6;9;0;0;4
"DATA",984.5,1,7)
^6;7;0;8;8;8;3;4;5;2;4;3;5;1;4;6
"DATA",984.5,1,8)
^0;1;5;6;6;3;8;5;0;0;9;2;2;5;9;7
"DATA",984.5,1,9)
^8;5;4;3;9;5;7;6;8;7;2;8;6;7;7;9
"DATA",984.5,2,0)
TABLE #2^4;7;3;4;6;0;0;1;2;9;5;6;2;6;1;1
"DATA",984.5,2,1)
^0;1;9;2;2;6;4;7;9;8;4;9;7;8;0;7
"DATA",984.5,2,2)
^2;6;4;8;9;2;8;6;7;0;9;3;5;0;8;4
"DATA",984.5,2,3)
^8;0;5;1;3;8;2;3;4;1;0;0;9;1;3;0
"DATA",984.5,2,4)
^5;3;7;0;7;9;9;9;6;2;1;2;8;9;4;8
"DATA",984.5,2,5)
^1;9;8;5;1;5;1;0;5;7;2;8;6;7;7;9
"DATA",984.5,2,6)
^9;5;1;9;5;4;6;5;0;6;3;4;1;3;9;2
"DATA",984.5,2,7)
^3;4;0;3;8;1;3;4;8;5;6;5;4;2;5;5
"DATA",984.5,2,8)
^7;2;6;6;0;3;7;8;1;4;7;1;0;4;6;3
"DATA",984.5,2,9)
^6;8;2;7;4;7;5;2;3;3;8;7;3;5;2;6
"DATA",984.5,3,0)
TABLE #3^8;5;2;3;2;7;3;4;6;3;6;1;6;4;5;0
"DATA",984.5,3,1)
^9;7;3;9;9;6;0;7;5;9;4;5;1;8;6;2
"DATA",984.5,3,2)
^1;4;4;5;0;0;4;2;2;6;1;2;8;9;8;6
"DATA",984.5,3,3)
^4;1;0;6;3;3;7;6;8;8;3;8;3;1;1;4
"DATA",984.5,3,4)
^0;0;9;0;5;1;5;3;4;0;5;7;7;2;9;3
"DATA",984.5,3,5)
^3;6;6;2;6;4;6;8;7;1;7;4;2;7;7;9
"DATA",984.5,3,6)
^5;8;1;4;7;2;8;0;1;7;2;3;0;0;4;8
"DATA",984.5,3,7)
^2;9;7;7;4;9;9;1;3;5;0;9;9;6;0;1
"DATA",984.5,3,8)
^7;2;8;1;8;5;1;5;0;2;9;0;5;3;2;7
"DATA",984.5,3,9)
^6;3;5;8;1;8;2;9;9;4;8;6;4;5;3;5
"DATA",984.5,4,0)
TABLE #4^5;0;3;6;4;0;6;7;1;6;4;3;5;5;6;6
"DATA",984.5,4,1)
^0;9;7;7;1;3;4;5;2;9;6;6;9;6;7;1
"DATA",984.5,4,2)
^2;3;5;5;9;2;5;6;4;4;8;1;3;4;2;4
"DATA",984.5,4,3)
^4;5;4;1;0;4;2;4;6;7;5;2;0;1;5;3
"DATA",984.5,4,4)
^7;1;2;3;6;6;3;0;0;5;9;8;2;9;9;2
"DATA",984.5,4,5)
^3;4;0;4;8;8;9;9;9;0;7;0;4;2;0;0
"DATA",984.5,4,6)
^6;7;6;9;2;5;1;3;5;8;2;4;8;3;8;5
"DATA",984.5,4,7)
^1;8;8;8;3;7;0;2;3;2;3;9;7;0;4;9
"DATA",984.5,4,8)
^9;6;9;0;5;1;7;1;8;3;0;7;1;7;1;8
"DATA",984.5,4,9)
^8;2;1;2;7;9;8;8;7;1;1;5;6;8;3;7
"DATA",984.5,5,0)
TABLE #5^4;4;0;2;2;9;3;2;2;6;5;1;2;7;2;7
"DATA",984.5,5,1)
^8;3;6;9;0;3;9;7;4;7;6;6;4;9;0;0
"DATA",984.5,5,2)
^2;7;1;8;3;5;2;5;1;8;9;0;9;3;6;2
"DATA",984.5,5,3)
^7;0;5;0;9;4;1;1;6;1;7;8;8;2;3;4
"DATA",984.5,5,4)
^5;1;7;7;4;6;0;8;7;5;2;2;1;5;4;9
"DATA",984.5,5,5)
^1;6;9;3;6;1;8;9;0;4;4;3;7;0;1;8
"DATA",984.5,5,6)
^0;9;2;1;5;0;4;0;3;9;1;7;0;6;7;3
"DATA",984.5,5,7)
^9;2;8;4;8;7;7;6;5;0;0;9;3;1;8;6
"DATA",984.5,5,8)
^3;5;3;6;1;8;6;3;8;3;3;5;6;8;9;5
"DATA",984.5,5,9)
^6;8;4;5;7;2;5;4;9;2;8;4;5;4;5;1
"DATA",984.5,6,0)
TABLE #6^6;2;8;2;7;3;3;8;4;9;2;4;4;1;6;1
"DATA",984.5,6,1)
^8;1;9;3;1;6;7;9;2;4;7;5;9;6;2;0
"DATA",984.5,6,2)
^5;3;2;9;0;1;9;4;8;7;4;6;3;7;8;9
"DATA",984.5,6,3)
^0;7;0;5;8;2;6;7;6;5;0;7;1;9;9;4
"DATA",984.5,6,4)
^2;9;1;4;9;9;4;0;1;3;9;3;0;2;5;6
"DATA",984.5,6,5)
^7;0;3;8;6;8;0;1;3;0;5;9;2;8;3;8
"DATA",984.5,6,6)
^9;6;5;6;3;4;2;6;7;6;3;2;7;4;1;3
"DATA",984.5,6,7)
^4;8;6;7;4;5;1;3;5;1;6;1;6;3;0;5
"DATA",984.5,6,8)
^3;5;4;1;5;7;5;5;9;2;8;0;8;5;7;7
"DATA",984.5,6,9)
^1;4;7;0;2;0;8;2;0;8;1;8;5;0;4;2
"DATA",984.8,1,0)
ONE^^^^^^^^^^
"FIA",984.1)
MASTER PATIENT INDEX (LOCAL NUMBERS)
"FIA",984.1,0)
^MPIF(984.1,
"FIA",984.1,0,0)
984.1
"FIA",984.1,0,1)
y^y^f^^^^n
"FIA",984.1,0,10)

"FIA",984.1,0,11)

"FIA",984.1,0,"RLRO")

"FIA",984.1,0,"VR")
1.0^MASTER PATIENT INDEX VISTA
"FIA",984.1,984.1)
0
"FIA",984.5)
MPI CHECKDIGIT
"FIA",984.5,0)
^MPIF(984.5,
"FIA",984.5,0,0)
984.5
"FIA",984.5,0,1)
y^y^f^^n^^y^o^n
"FIA",984.5,0,10)

"FIA",984.5,0,11)

"FIA",984.5,0,"RLRO")

"FIA",984.5,0,"VR")
1.0^MASTER PATIENT INDEX VISTA
"FIA",984.5,984.5)
0
"FIA",984.8)
MPI ICN BUILD MANAGEMENT
"FIA",984.8,0)
^MPIF(984.8,
"FIA",984.8,0,0)
984.8
"FIA",984.8,0,1)
y^y^f^^n^^y^o^n
"FIA",984.8,0,10)

"FIA",984.8,0,11)

"FIA",984.8,0,"RLRO")

"FIA",984.8,0,"VR")
1.0^MASTER PATIENT INDEX VISTA
"FIA",984.8,984.8)
0
"FIA",984.9)
MPIF CMOR REQUEST
"FIA",984.9,0)
^MPIF(984.9,
"FIA",984.9,0,0)
984.9I
"FIA",984.9,0,1)
y^y^f^^^^n
"FIA",984.9,0,10)

"FIA",984.9,0,11)

"FIA",984.9,0,"RLRO")

"FIA",984.9,0,"VR")
1.0^MASTER PATIENT INDEX VISTA
"FIA",984.9,984.9)
0
"INIT")
MPIFPST
"KRN",.4,1104,-1)
0^6
"KRN",.4,1104,0)
MPIF OUTSTANDING REQUESTS^2971006.1122^@^984.9^^@^2990429
"KRN",.4,1104,"DXS",1,9.2)
S I(0,0)=$S($D(D0):D0,1:""),DIP(1)=$S($D(^MPIF(984.9,D0,0)):^(0),1:"") S X=$S('$D(^DPT(+$P(DIP(1),U,4),0)):"",1:$P(^(0),U,1)),DIP(2)=X S X=1,DIP(3)=X S X=20
"KRN",.4,1104,"DXS",1,9.3)
X DXS(1,9.2) S X=$E(DIP(2),DIP(3),X)_" (",DIP(4)=X,D0=$P(DIP(1),U,4) S:'$D(^DPT(+D0,0)) D0=-1 S DIP(101)=$S($D(^DPT(D0,0)):^(0),1:"") S X=$P(DIP(101),U,9)
"KRN",.4,1104,"F",1)
.01;L10;"Request Number"~101;L20;"Requested By"~
"KRN",.4,1104,"F",2)
X DXS(1,9.3) S DIP(102)=X S X=6,DIP(103)=X S X=9,X=$E(DIP(102),DIP(103),X) S Y=X,X=DIP(4),X=X_Y_")" S D0=I(0,0) W X K DIP;L27;"Patient";Z;"$E(PATIENT,1,20)_" ("_$E(PATIENT:SSN,6,9)_")""~
"KRN",.4,1104,"F",3)
.03;"Date Requested"~"Reason: ";C5~1.02;X~
"KRN",.4,1104,"H")
Pending CMOR Requests
"KRN",.4,1105,-1)
0^5
"KRN",.4,1105,0)
MPIF REQUEST VIEW^2980204.1426^@^984.9^^@^2990401
"KRN",.4,1105,"DXS",1,9.2)
S DIP(2)=$C(59)_$S($D(^DD(984.9,.08,0)):$P(^(0),U,3),1:""),DIP(1)=$S($D(^MPIF(984.9,D0,0)):^(0),1:"") S X="View of CMOR Request {"_$P($P(DIP(2),$C(59)_$P(DIP(1),U,8)_":",2),$C(59),1)
"KRN",.4,1105,"DXS",2,9.2)
S I(0,0)=$S($D(D0):D0,1:""),DIP(1)=$S($D(^MPIF(984.9,D0,0)):^(0),1:"") S X=$S('$D(^DPT(+$P(DIP(1),U,4),0)):"",1:$P(^(0),U,1)),DIP(2)=X S X=1,DIP(3)=X S X=15
"KRN",.4,1105,"DXS",2,9.3)
X DXS(2,9.2) S X=$E(DIP(2),DIP(3),X)_" (",DIP(4)=X,D0=$P(DIP(1),U,4) S:'$D(^DPT(+D0,0)) D0=-1 S DIP(101)=$S($D(^DPT(D0,0)):^(0),1:"") S X=$P(DIP(101),U,9)
"KRN",.4,1105,"DXS",3,9.2)
S I(0,0)=$S($D(D0):D0,1:""),DIP(1)=$S($D(^MPIF(984.9,D0,0)):^(0),1:"") S X=$S('$D(^DIC(4,+$P(DIP(1),U,7),0)):"",1:$P(^(0),U,1)),DIP(2)=X S X=1,DIP(3)=X S X=15
"KRN",.4,1105,"DXS",3,9.3)
X DXS(3,9.2) S X=$E(DIP(2),DIP(3),X)_" (",DIP(4)=X,D0=$P(DIP(1),U,7) S:'$D(^DIC(4,+D0,0)) D0=-1 S DIP(101)=$S($D(^DIC(4,D0,99)):^(99),1:"") S X=$P(DIP(101),U,1)
"KRN",.4,1105,"F",1)
S X=DT S Y=X D DT K DIP;C1;L18;Z;"TODAY"~
"KRN",.4,1105,"F",2)
X DXS(1,9.2) S X=X_"}",X=$J("",$S($D(DIWR)+$D(DIWL)=2:DIWR-DIWL+1,$D(IOM):IOM,1:80)-$L(X)\2-$X)_X W X K DIP;X;Z;"CENTER("View of CMOR Request {"_#.08_"}")"~
"KRN",.4,1105,"F",3)
.01;C70;X~S X="-",DIP(1)=X S X=80,X1=DIP(1) S %=X,X="" Q:X1=""  S $P(X,X1,%\$L(X1)+1)=X1,X=$E(X,1,%) W X K DIP;C1;Z;"DUP("-",80)"~"Requested by: ";C2~
"KRN",.4,1105,"F",4)
101;L20;X~"Date: ";C53~.03;X~"Phone (req): ";C3~.05;X~"Patient: ";C7~
"KRN",.4,1105,"F",5)
X DXS(2,9.3) S DIP(102)=X S X=6,DIP(103)=X S X=9,X=$E(DIP(102),DIP(103),X) S Y=X,X=DIP(4),X=X_Y_")" S D0=I(0,0) W X K DIP;X;Z;"$E(PATIENT,1,15)_" ("_$E(PATIENT:SSN,6,9)_")""~
"KRN",.4,1105,"F",6)
"Type: ";C53~1.03;X~"Status: ";C8~.06;X~X DXS(3,9.3) S Y=X,X=DIP(4),X=X_Y_")" S D0=I(0,0) W X K DIP;C59;Z;"$E(#.07,1,15)_" ("_(#.07:#99)_")""~
"KRN",.4,1105,"F",7)
"Reviewed by: ";C3~102;L20;X~"Date: ";C53~2.02;X~"Phone (rev): ";C3~2.03;X~
"KRN",.4,1105,"F",8)
S X="-",DIP(1)=X S X=79,X1=DIP(1) S %=X,X="" Q:X1=""  S $P(X,X1,%\$L(X1)+1)=X1,X=$E(X,1,%) W X K DIP;C1;Z;"DUP("-",79)"~"Requestor Comments: ";C1~
"KRN",.4,1105,"F",9)
1.02;C3~" ";C1~"Reviewer Comments: ";C1~3.02;C3~
"KRN",.4,1105,"H")
@
"KRN",.4,1105,"SUB")
1
"KRN",.401,817,-1)
0^6
"KRN",.401,817,0)
MPIF REQUEST SORT^2971006.1138^@^984.9^^@^2990429
"KRN",.401,817,2,0)
^.4014^5^5
"KRN",.401,817,2,1,0)
984.9^^$E(#.07,1,15)_" ("_(#.07:#99)_")"^"^;"STATION: "^^^^^4
"KRN",.401,817,2,1,3,0)
^.401419^2^2
"KRN",.401,817,2,1,3,1,0)
OVF0^9.2
"KRN",.401,817,2,1,3,1,"OVF0")
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^MPIF(984.9,D0,0)):^(0),1:"") S X=$S('$D(^DIC(4,+$P(Y(1),U,7),0)):"",1:$P(^(0),U,1)),Y(2)=X S X=1,Y(3)=X S X=15
"KRN",.401,817,2,1,3,2,0)
OVF0^9.3
"KRN",.401,817,2,1,3,2,"OVF0")
X DPP(1,"OVF0",9.2) S X=$E(Y(2),Y(3),X)_" (",Y(4)=X,D0=$P(Y(1),U,7) S:'$D(^DIC(4,+D0,0)) D0=-1 S Y(101)=$S($D(^DIC(4,D0,99)):^(99),1:"") S X=$P(Y(101),U,1)
"KRN",.401,817,2,1,3,"B","OVF0",1)

"KRN",.401,817,2,1,3,"B","OVF0",2)

"KRN",.401,817,2,1,"CM")
X DPP(1,"OVF0",9.3) S Y=X,X=Y(4),X=X_Y_")" S D0=I(0,0) I D0>0 S DISX(1)=X
"KRN",.401,817,2,1,"GET")
X DPP(1,"OVF0",9.3) S Y=X,X=Y(4),X=X_Y_")" S D0=I(0,0) I D0>0 S DISX(1)=X
"KRN",.401,817,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,817,2,1,"TXT")
$E(#.07,1,15)_"" (""_(#.07:#99)_"")"" not null
"KRN",.401,817,2,2,0)
984.9^.03^DATE REQUESTED^^^^^^^1
"KRN",.401,817,2,2,"GET")
S DISX(2)=$P($G(^MPIF(984.9,D0,0)),U,3)
"KRN",.401,817,2,2,"QCON")
I DISX(2)'=""
"KRN",.401,817,2,2,"SER")
0.0323^0.0323
"KRN",.401,817,2,2,"TXT")
DATE REQUESTED not null
"KRN",.401,817,2,3,0)
984.9^^INTERNAL(#.06)^@"^^^^^^4
"KRN",.401,817,2,3,"ASK")
1
"KRN",.401,817,2,3,"CM")
S Y(1)=$S($D(^MPIF(984.9,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X I D0>0 S DISX(3)=X
"KRN",.401,817,2,3,"F")
1.99999^2
"KRN",.401,817,2,3,"GET")
S Y(1)=$S($D(^MPIF(984.9,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X I D0>0 S DISX(3)=X
"KRN",.401,817,2,3,"QCON")
I DISX(3)=2
"KRN",.401,817,2,3,"T")
2^2
"KRN",.401,817,2,3,"TXT")
INTERNAL(#.06) equals 2
"KRN",.401,817,2,4,0)
984.9^^INTERNAL(#.02)^@"^^^^^^4
"KRN",.401,817,2,4,"ASK")
1
"KRN",.401,817,2,4,"CM")
S Y(1)=$S($D(^MPIF(984.9,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X I D0>0 S DISX(4)=X
"KRN",.401,817,2,4,"F")
12563.99999^12564
"KRN",.401,817,2,4,"GET")
S Y(1)=$S($D(^MPIF(984.9,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X I D0>0 S DISX(4)=X
"KRN",.401,817,2,4,"QCON")
I DISX(4)'=""
"KRN",.401,817,2,4,"T")
12564^12564
"KRN",.401,817,2,4,"TXT")
INTERNAL(#.02) not null
"KRN",.401,817,2,5,0)
984.9^100^DAYS OLD^@^^^^^^2
"KRN",.401,817,2,5,"ASK")
1
"KRN",.401,817,2,5,"F")
1.99999^2
"KRN",.401,817,2,5,"GET")
S X=0 I $P(^MPIF(984.9,D0,0),"^",3)]"" S X=$$FMDIFF^XLFDT($S($P($G(^MPIF(984.9,D0,2)),"^",2)]"":$P(^(2),"^",2),1:DT),$P(^MPIF(984.9,D0,0),"^",3)) S X=$J(X,0,0) S DISX(5)=X S:DISX(5)]"" DISX(5)=+DISX(5)
"KRN",.401,817,2,5,"QCON")
I DISX(5)]]1.99999
"KRN",.401,817,2,5,"SER")
0.2258^0.2258
"KRN",.401,817,2,5,"T")
z^
"KRN",.401,817,2,5,"TXT")
DAYS OLD from 2
"KRN",.401,817,2,"B",984.9,1)

"KRN",.401,817,2,"B",984.9,2)

"KRN",.401,817,2,"B",984.9,3)

"KRN",.401,817,2,"B",984.9,4)

"KRN",.401,817,2,"B",984.9,5)

"KRN",.401,818,-1)
0^5
"KRN",.401,818,0)
MPIF PENDING REQUESTS^2961101.1139^@^984.9^^@^2981214
"KRN",.401,818,2,0)
^.4014^2^2
"KRN",.401,818,2,1,0)
984.9^.06^STATUS^@^^^^^^3
"KRN",.401,818,2,1,"F")
2.99999^3^3 (PENDING APPROVAL)
"KRN",.401,818,2,1,"GET")
S DISX(1)=$P($G(^MPIF(984.9,D0,0)),U,6)
"KRN",.401,818,2,1,"IX")
^MPIF(984.9,"AC",^MPIF(984.9,^2
"KRN",.401,818,2,1,"QCON")
I DISX(1)=3
"KRN",.401,818,2,1,"SER")
8.6667^0.8966
"KRN",.401,818,2,1,"T")
3^3^3 (PENDING APPROVAL)
"KRN",.401,818,2,1,"TXT")
STATUS equals 3 (PENDING APPROVAL)
"KRN",.401,818,2,2,0)
984.9^^SITE^".07^;"Request From: "^^^^^7
"KRN",.401,818,2,2,"CM")
S Y(1)=$S($D(^MPIF(984.9,D0,0)):^(0),1:"") S X=$S('$D(^DIC(4,+$P(Y(1),U,7),0)):"",1:$P(^(0),U,1)) I D0>0 S DISX(2)=X
"KRN",.401,818,2,2,"GET")
S Y(1)=$S($D(^MPIF(984.9,D0,0)):^(0),1:"") S X=$S('$D(^DIC(4,+$P(Y(1),U,7),0)):"",1:$P(^(0),U,1)) I D0>0 S DISX(2)=X
"KRN",.401,818,2,2,"QCON")
I DISX(2)'=""
"KRN",.401,818,2,2,"TXT")
SITE not null
"KRN",.401,818,2,"B",984.9,1)

"KRN",.401,818,2,"B",984.9,2)

"KRN",.402,1602,-1)
0^18
"KRN",.402,1602,0)
MPIF SITE PARAMETERS^2960724.1606^@^991.8^^@^2990415
"KRN",.402,1602,"DIAB",1,0,991.8,0)
.02;"Type of Processing"
"KRN",.402,1602,"DIAB",2,0,991.8,0)
.03;"New Request Mailgroup"
"KRN",.402,1602,"DR",1,991.8)
.02Type of Processing~;.03New Request Mailgroup~;
"KRN",.402,1630,-1)
0^26
"KRN",.402,1630,0)
MPIF PCMM REQUEST^2960730.1144^@^984.9^^@^2990114
"KRN",.402,1630,"DR",1,984.9)
1.03////^S X=2;.02////^S X=DUZ;.05////^S X=PHONE;.04////^S X=DFN;1.02////^S X="Change by PCMM software";.07////^S X=SITE;1.03////^S X=1;.06////^S X=2;
"KRN",.402,1631,-1)
0^25
"KRN",.402,1631,0)
MPIF OPEN REQUEST^2960718.1536^@^984.9^^@^2990429
"KRN",.402,1631,"DR",1,984.9)
.03///^S X="TODAY";.06////^S X=1;
"KRN",.402,1632,-1)
0^19
"KRN",.402,1632,0)
MPIF REQUEST EDIT^2990423.1409^@^984.9^^@^2990429
"KRN",.402,1632,"DIAB",3,0,984.9,3)
.07;"SEND REQUEST TO"
"KRN",.402,1632,"DR",1,984.9)
1.03////^S X=2;.02////^S X=DUZ;S DIE("NO^")="OUTOK";W !,"REQUEST NUMBER: ",$P(^MPIF(984.9,D0,0),"^");.04;S:$$CHK1^MPIFUTL(D0) Y="@3";
"KRN",.402,1632,"DR",1,984.9,1)
N IEN S IEN=$P(^MPIF(984.9,D0,0),"^",4) W !,"*** Current CMOR: ",$$CMOR2^MPIF001(IEN)," (",$$GETVCCI^MPIF001(IEN),") ***";1.02;.05//^S X=PHONE;S:$P(^MPIF(984.9,D0,0),"^",4)="" Y="";
"KRN",.402,1632,"DR",1,984.9,2)
.07////^S X=$S($P($$SITE^VASITE(),"^",1)'=$$PAT^MPIFNQ($P(^MPIF(984.9,D0,0),"^",4)):$$PAT^MPIFNQ($P(^MPIF(984.9,D0,0),"^",4)),1:"");S:$P($$SITE^VASITE(),"^",1)'=$$PAT^MPIFNQ($P(^MPIF(984.9,D0,0),"^",4)) Y="";
"KRN",.402,1632,"DR",1,984.9,3)
W !,"-",!,"Since this patient belongs to your site,";W !,"select the site you wish to transfer this patient to.",!,"-";.07SEND REQUEST TO~;S:$$CHK2^MPIFUTL(D0) Y="@4";1.03////^S X=1;S Y="";@3;.04////^S X="@";S Y=.04;@4;.07////@;
"KRN",.402,1632,"DR",1,984.9,4)
S Y=.07;
"KRN",.402,1633,-1)
0^20
"KRN",.402,1633,0)
MPIF REQUEST INCOMING^2990409.1427^@^984.9^^@^2990421
"KRN",.402,1633,"DR",1,984.9)
1.03////^S X=TYPE;.08////^S X=1;.06////^S X=3;.03////^S X=NDATE;1.01////^S X=USER;.07////^S X=INST;1.02////^S X=REASON;.05////^S X=PHONE;.04////^S X=PATIEN;
"KRN",.402,1634,-1)
0^24
"KRN",.402,1634,0)
MPIF REVIEW RESULT^2960722.0907^@^984.9^^@^2980123
"KRN",.402,1634,"DR",1,984.9)
2.01////^S X=DUZ;2.02///^S X="TODAY";.06////^S X=$S($E(RESULT)="A":4,1:5);2.03//^S X=PHONE;3.02;
"KRN",.402,1635,-1)
0^23
"KRN",.402,1635,0)
MPIF REVIEW RESET^2960722.0911^@^984.9^^@^2980414
"KRN",.402,1635,"DR",1,984.9)
2.01///@;2.02///@;.06////^S X=3;2.03///@;3.02///@;
"KRN",.402,1636,-1)
0^21
"KRN",.402,1636,0)
MPIF RESULT INCOMING^2960722.1004^@^984.9^^@^2960928
"KRN",.402,1636,"DR",1,984.9)
.06////^S X=RESULT;2.02////^S X=DATE;2.03////^S X=PHONE;3.01////^S X=REVIEWER;3.02////^S X=COMMENTS;
"KRN",.402,1637,-1)
0^22
"KRN",.402,1637,0)
MPIF REVIEW AUTO^2960723.095^@^984.9^^@^2960726
"KRN",.402,1637,"DR",1,984.9)
2.02///^S X="TODAY";.06////^S X=4;3.01////^S X="AUTOMATIC PROCESSING";
"KRN",3.8,78,-1)
0^6
"KRN",3.8,78,0)
MPIF HL7 GROUP^PU^n^^^0^
"KRN",3.8,78,2,0)
^^2^2^2981222^^
"KRN",3.8,78,2,1,0)
This is the mail group that is used to send HL7 messags via the MailMan
"KRN",3.8,78,2,2,0)
protocol to the MPI in Austin.
"KRN",3.8,78,3)

"KRN",3.8,78,6,0)
^3.812^1^1
"KRN",3.8,78,6,1,0)
S.HL V16 SERVER@MPI.ISC-ALBANY.VA.GOV
"KRN",3.8,78,6,"B","S.HL V16 SERVER@MPI.ISC-ALBANY",1)

"KRN",3.8,84,-1)
0^5
"KRN",3.8,84,0)
MPIF CMOR REQUEST^PU^^^^0^
"KRN",3.8,84,2,0)
^^3^3^2981222^^^
"KRN",3.8,84,2,1,0)
The members of this group will receive mail that there may be a
"KRN",3.8,84,2,2,0)
problem with a CIRN Master of Record Requests either from another
"KRN",3.8,84,2,3,0)
facility or to another facility.
"KRN",3.8,85,-1)
0^4
"KRN",3.8,85,0)
MPIF EXCEPTIONS^PU^^^^0^
"KRN",3.8,85,2,0)
^^1^1^2981222^^
"KRN",3.8,85,2,1,0)
MPI Exception Messages to be addressed.
"KRN",3.8,85,3)

"KRN",19,5469,-1)
0^38
"KRN",19,5469,0)
MPIF CMOR MGR^CIRN Master of Record (CMOR) Request^^M^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",19,5469,1,0)
^^2^2^2990420^^^^
"KRN",19,5469,1,1,0)
Main menu that contains options for managing incoming and outgoing
"KRN",19,5469,1,2,0)
CMOR requests.
"KRN",19,5469,10,0)
^19.01IP^8^7
"KRN",19,5469,10,1,0)
5471^^20
"KRN",19,5469,10,1,"^")
MPIF RECEIVED REQUESTS
"KRN",19,5469,10,2,0)
5470^^30
"KRN",19,5469,10,2,"^")
MPIF SENT REQUESTS
"KRN",19,5469,10,3,0)
5472^^10
"KRN",19,5469,10,3,"^")
MPIF VIEW REQUEST
"KRN",19,5469,10,4,0)
5473^^15
"KRN",19,5469,10,4,"^")
MPIF NEW REQUEST
"KRN",19,5469,10,6,0)
5475^^25
"KRN",19,5469,10,6,"^")
MPIF REVIEW REQUEST
"KRN",19,5469,10,7,0)
5476^^5
"KRN",19,5469,10,7,"^")
MPIF BATCH REVIEW
"KRN",19,5469,10,8,0)
6385
"KRN",19,5469,10,8,"^")
MPIF EDIT REQUEST
"KRN",19,5469,99)
57818,56600
"KRN",19,5469,"U")
CIRN MASTER OF RECORD (CMOR) R
"KRN",19,5470,-1)
0^35
"KRN",19,5470,0)
MPIF SENT REQUESTS^Sent Request Report^^R^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",19,5470,1,0)
^^3^3^2980120^^^
"KRN",19,5470,1,1,0)
Listing of CMOR requests that were entered and are still outstanding.
"KRN",19,5470,1,2,0)
 
"KRN",19,5470,1,3,0)
Report sorts by Station # and Date Requested.
"KRN",19,5470,25)
RPT1^MPIFNQ
"KRN",19,5470,"U")
SENT REQUEST REPORT
"KRN",19,5471,-1)
0^37
"KRN",19,5471,0)
MPIF RECEIVED REQUESTS^Received Requests Report^^R^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",19,5471,1,0)
^^2^2^2971222^^^
"KRN",19,5471,1,1,0)
Listing of all outstanding CMOR request that need to be reviewed and
"KRN",19,5471,1,2,0)
processed.
"KRN",19,5471,25)
RPT2^MPIFNQ
"KRN",19,5471,99)
56810,32094
"KRN",19,5471,"U")
RECEIVED REQUESTS REPORT
"KRN",19,5472,-1)
0^33
"KRN",19,5472,0)
MPIF VIEW REQUEST^Display CIRN Master of Record Request^^R^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",19,5472,1,0)
^^1^1^2970710^^
"KRN",19,5472,1,1,0)
View all information for a particular CMOR request.
"KRN",19,5472,25)
INQ^MPIFNQ
"KRN",19,5472,"U")
DISPLAY CIRN MASTER OF RECORD 
"KRN",19,5473,-1)
0^44
"KRN",19,5473,0)
MPIF NEW REQUEST^New CMOR Change Request^^R^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",19,5473,1,0)
^^2^2^2990420^
"KRN",19,5473,1,1,0)
Used to request changing CMOR from the current CMOR to the site making the
"KRN",19,5473,1,2,0)
request.
"KRN",19,5473,25)
NEW^MPIFEDIT
"KRN",19,5473,"U")
NEW CMOR CHANGE REQUEST
"KRN",19,5474,-1)
0^34
"KRN",19,5474,0)
MPIF SITE PARAMETER^Site Parameters Edit for CMOR^^R^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",19,5474,1,0)
^^4^4^2981020^^
"KRN",19,5474,1,1,0)
Allows editing of site parameters that affect the processing of CMOR
"KRN",19,5474,1,2,0)
requests.  These parameters allow incoming CMOR request to be processed
"KRN",19,5474,1,3,0)
manually or automatically and define a mailgroup that will receive
"KRN",19,5474,1,4,0)
a message when a new request is received.
"KRN",19,5474,25)
TYPE^MPIFUTL
"KRN",19,5474,"U")
SITE PARAMETERS EDIT FOR CMOR
"KRN",19,5475,-1)
0^36
"KRN",19,5475,0)
MPIF REVIEW REQUEST^CIRN Master of Record Request Review^^R^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",19,5475,1,0)
^^1^1^2970710^^
"KRN",19,5475,1,1,0)
Review CMOR requests that can be either approved or denied.
"KRN",19,5475,25)
EN^MPIFREV
"KRN",19,5475,"U")
CIRN MASTER OF RECORD REQUEST 
"KRN",19,5476,-1)
0^43
"KRN",19,5476,0)
MPIF BATCH REVIEW^Batch Review Requests^^R^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",19,5476,1,0)
^^2^2^2990416^^^^
"KRN",19,5476,1,1,0)
Allows processing pending CMOR request by station, rather than having
"KRN",19,5476,1,2,0)
to enter individual CMOR request numbers.
"KRN",19,5476,25)
BATCH^MPIFREV
"KRN",19,5476,"U")
BATCH REVIEW REQUESTS
"KRN",19,5659,-1)
0^27
"KRN",19,5659,0)
MPIF IND MPI LOAD^Single Patient Initialization to MPI^^R^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",19,5659,1,0)
^^3^3^2981223^^^^
"KRN",19,5659,1,1,0)
This option can be used to initialize an already existing patient
"KRN",19,5659,1,2,0)
with an ICN and CMOR. The preferred way to accomplish this is through
"KRN",19,5659,1,3,0)
Registration or Load/Edit.
"KRN",19,5659,10.1)
Standalone MPI Query
"KRN",19,5659,25)
INTACTV^MPIFQ0
"KRN",19,5659,"U")
SINGLE PATIENT INITIALIZATION 
"KRN",19,5661,-1)
2^12
"KRN",19,5661,0)
RGINIT MENU^CIRN Initialization Menu^^M^11982^^^^^^^272
"KRN",19,5661,10,0)
^19.01IP^7^3
"KRN",19,5661,10,3,0)
5667^^10
"KRN",19,5661,10,3,"^")
MPIFINIT DPT TO MPI
"KRN",19,5661,10,7,0)
5810^^15
"KRN",19,5661,10,7,"^")
MPIF COMP MAIN
"KRN",19,5661,"U")
CIRN INITIALIZATION MENU
"KRN",19,5663,-1)
2^14
"KRN",19,5663,0)
RG ADMIN COORD MENU^CIRN Patient Admin Coordinator Menu^^M^12551^^^^^^^272^^^
"KRN",19,5663,10,0)
^19.01IP^37^9
"KRN",19,5663,10,6,0)
5664^ADU^30
"KRN",19,5663,10,6,"^")
RG ADMIN USER MENU
"KRN",19,5663,10,23,0)
5474^SP^20
"KRN",19,5663,10,23,"^")
MPIF SITE PARAMETER
"KRN",19,5663,10,36,0)
5774^MPI^45
"KRN",19,5663,10,36,"^")
MPIF VISTA MENU
"KRN",19,5663,"U")
CIRN PATIENT ADMIN COORDINATOR
"KRN",19,5664,-1)
2^13
"KRN",19,5664,0)
RG ADMIN USER MENU^CIRN Patient Admin User Menu^^M^^^^^^^^272
"KRN",19,5664,10,0)
^19.01IP^2^2
"KRN",19,5664,10,2,0)
5469^^10
"KRN",19,5664,10,2,"^")
MPIF CMOR MGR
"KRN",19,5664,"U")
CIRN PATIENT ADMIN USER MENU
"KRN",19,5667,-1)
0^16
"KRN",19,5667,0)
MPIFINIT DPT TO MPI^Patient File Initialization to MPI^^R^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",19,5667,1,0)
^^1^1^2981222^
"KRN",19,5667,1,1,0)
This option builds messages to the MPI for initialization.
"KRN",19,5667,10.1)
Initialize MPI
"KRN",19,5667,25)
GOBKG^MPIFBT1
"KRN",19,5667,"U")
PATIENT FILE INITIALIZATION TO
"KRN",19,5687,-1)
0^19
"KRN",19,5687,0)
MPIF PAT INACT^Inactivate Patient from MPI^^R^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",19,5687,1,0)
^^3^3^2981222^
"KRN",19,5687,1,1,0)
This option is to be used very cautiously.  It should only be used to
"KRN",19,5687,1,2,0)
remove "test patients" that went to the MPI by mistake.  These patients
"KRN",19,5687,1,3,0)
must not have any subscribers and your site must be the CMOR.  
"KRN",19,5687,25)
INTER^MPIFDEL
"KRN",19,5687,"U")
INACTIVATE PATIENT FROM MPI
"KRN",19,5773,-1)
0^17
"KRN",19,5773,0)
MPIF DISPLAY ONLY QUERY TO MPI^Display Only Query^^R^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",19,5773,1,0)
^^5^5^2980123^^
"KRN",19,5773,1,1,0)
This option allows the user to query the MPI in Austin for all known data
"KRN",19,5773,1,2,0)
about a patient.  The patient may or may not be currently in the Patient
"KRN",19,5773,1,3,0)
file.  The MPI will return:  Patient Not Known at the MPI, a list of
"KRN",19,5773,1,4,0)
potential matches along with all known data, or an exact match along with
"KRN",19,5773,1,5,0)
all known data.  This will be for display purposes only.
"KRN",19,5773,10.1)
Query MPI
"KRN",19,5773,25)
INTACTV^MPIFSAQ
"KRN",19,5773,"U")
DISPLAY ONLY QUERY
"KRN",19,5774,-1)
0^20
"KRN",19,5774,0)
MPIF VISTA MENU^Master Patient Index Menu^^M^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",19,5774,1,0)
^^1^1^2981020^^^^
"KRN",19,5774,1,1,0)
Main Menu for Master Patient Index options.
"KRN",19,5774,10,0)
^19.01IP^5^4
"KRN",19,5774,10,2,0)
5687^^15
"KRN",19,5774,10,2,"^")
MPIF PAT INACT
"KRN",19,5774,10,3,0)
5659^^5
"KRN",19,5774,10,3,"^")
MPIF IND MPI LOAD
"KRN",19,5774,10,4,0)
5773^^10
"KRN",19,5774,10,4,"^")
MPIF DISPLAY ONLY QUERY TO MPI
"KRN",19,5774,10,5,0)
5910^^20
"KRN",19,5774,10,5,"^")
MPIF LOC/MIS ICN RES
"KRN",19,5774,10.1)
MPI MAIN MENU
"KRN",19,5774,99)
57588,45963
"KRN",19,5774,"U")
MASTER PATIENT INDEX MENU
"KRN",19,5807,-1)
0^40
"KRN",19,5807,0)
MPIF CMOR COMP BATCH^Begin CMOR Comparison^^R^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",19,5807,1,0)
^^10^10^2981222^^
"KRN",19,5807,1,1,0)
This option searches the PATIENT file (#2) for records that are not CIRN
"KRN",19,5807,1,2,0)
Master Of Records (CMOR) for your site.  Based on the search criteria, the
"KRN",19,5807,1,3,0)
CMOR score is re-calculated for each record found.  That record is then
"KRN",19,5807,1,4,0)
loaded into an HL7 batch message(s) (maximum 100 records per batch
"KRN",19,5807,1,5,0)
message).  Once it's completed, the batch message is then sent to the
"KRN",19,5807,1,6,0)
current CMOR site.
"KRN",19,5807,1,7,0)
 
"KRN",19,5807,1,8,0)
This option is tasked to run in the background.  It can be stopped and
"KRN",19,5807,1,9,0)
restarted.  If you choose to stop and restart, it will begin processing
"KRN",19,5807,1,10,0)
again with the next patient record from where it was stopped.
"KRN",19,5807,25)
COMP^MPIFQUE3
"KRN",19,5807,"U")
BEGIN CMOR COMPARISON
"KRN",19,5808,-1)
0^42
"KRN",19,5808,0)
MPIF CMOR COMP STATUS^CMOR Comparison Process Status^^R^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",19,5808,1,0)
^^3^3^2980223^
"KRN",19,5808,1,1,0)
Use this option to view the progress of the CMOR Comparison background
"KRN",19,5808,1,2,0)
job.  It displays the current patient being processed including the task
"KRN",19,5808,1,3,0)
number and the run status.
"KRN",19,5808,25)
STATUS^MPIFQUE3
"KRN",19,5808,"U")
CMOR COMPARISON PROCESS STATUS
"KRN",19,5809,-1)
0^41
"KRN",19,5809,0)
MPIF CMOR COMP STOP/RESTART^Stop/Restart CMOR Comparison Process^^R^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",19,5809,1,0)
^^1^1^2980223^
"KRN",19,5809,1,1,0)
Use this option to stop or restart the CMOR Comparison background job.
"KRN",19,5809,25)
STOP^MPIFQUE3
"KRN",19,5809,"U")
STOP/RESTART CMOR COMPARISON P
"KRN",19,5810,-1)
0^39
"KRN",19,5810,0)
MPIF COMP MAIN^CMOR Comparison Menu^^M^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",19,5810,1,0)
^^2^2^2980303^
"KRN",19,5810,1,1,0)
This is the main menu to: 1) START the CMOR Comparison process, 2)
"KRN",19,5810,1,2,0)
track its progress, and 3) stop and restart the process.
"KRN",19,5810,10,0)
^19.01IP^3^3
"KRN",19,5810,10,1,0)
5809^^15
"KRN",19,5810,10,1,"^")
MPIF CMOR COMP STOP/RESTART
"KRN",19,5810,10,2,0)
5808^^5
"KRN",19,5810,10,2,"^")
MPIF CMOR COMP STATUS
"KRN",19,5810,10,3,0)
5807^^10
"KRN",19,5810,10,3,"^")
MPIF CMOR COMP BATCH
"KRN",19,5810,99)
57588,43948
"KRN",19,5810,"U")
CMOR COMPARISON MENU
"KRN",19,5910,-1)
0^32
"KRN",19,5910,0)
MPIF LOC/MIS ICN RES^Local/Missing ICN Resolution Background Job^^R^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",19,5910,1,0)
^^5^5^2981222^
"KRN",19,5910,1,1,0)
This option will start the background job of resolving local and missing
"KRN",19,5910,1,2,0)
ICNs against the MPI.
"KRN",19,5910,1,3,0)
 
"KRN",19,5910,1,4,0)
It is recommended that this option be scheduled to run via TaskMan once
"KRN",19,5910,1,5,0)
every evening.
"KRN",19,5910,25)
MPIFRES
"KRN",19,5910,"U")
LOCAL/MISSING ICN RESOLUTION B
"KRN",19,6385,-1)
0^45
"KRN",19,6385,0)
MPIF EDIT REQUEST^Edit CMOR Change Request^^R^^^^^^^^MASTER PATIENT INDEX VISTA^^
"KRN",19,6385,1,0)
^^2^2^2990420^
"KRN",19,6385,1,1,0)
This option is to be used to edit existing CMOR change request that have a
"KRN",19,6385,1,2,0)
status of OPEN.
"KRN",19,6385,20)

"KRN",19,6385,25)
EDIT^MPIFNEW
"KRN",19,6385,"U")
EDIT CMOR CHANGE REQUEST
"KRN",101,1074,-1)
0^30
"KRN",101,1074,0)
MPIF TEST^MPI PROTOCOL^^S^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1074,99)
57700,28895
"KRN",101,1074,770)
^MPIF MPI^ACK^Q02^i^P^MPIVA^NE^NE^2.3^VTQ
"KRN",101,1074,771)
Q
"KRN",101,1074,772)

"KRN",101,1074,773)
1^1^^1
"KRN",101,1075,-1)
0^35
"KRN",101,1075,0)
MPIF ICN-Q02 SERVER^^^E^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1075,10,0)
^101.01PA^1^1
"KRN",101,1075,10,1,0)
1074^^^
"KRN",101,1075,10,1,"^")
MPIF TEST
"KRN",101,1075,99)
57700,28895
"KRN",101,1075,770)
MPIF-STARTUP^^VTQ^Q02^^P^^NE^NE^2.3^VTQ
"KRN",101,1075,772)
D ADDPAT^MPIFBT2
"KRN",101,1199,-1)
0^34
"KRN",101,1199,0)
MPIF REAL-TIME QUERY MENU^actions for real-time query screen^^M^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1199,4)
32^4
"KRN",101,1199,10,0)
^101.01PA^3^3
"KRN",101,1199,10,1,0)
1200^SP^21^
"KRN",101,1199,10,1,"^")
MPIF REAL-TIME QUERY (SELECT PATIENT)
"KRN",101,1199,10,2,0)
1202^ADD^11^
"KRN",101,1199,10,2,"^")
MPIF REAL-TIME QUERY (ADD PATIENT)
"KRN",101,1199,10,3,0)
1205^HE^12^
"KRN",101,1199,10,3,"^")
MPIF REAL-TIME QUERY (HELP)
"KRN",101,1199,20)

"KRN",101,1199,26)
D SHOW^VALM
"KRN",101,1199,28)
Select Action:
"KRN",101,1199,99)
57357,57410
"KRN",101,1200,-1)
0^33
"KRN",101,1200,0)
MPIF REAL-TIME QUERY (SELECT PATIENT)^Select a Patient from List^^A^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1200,20)
D SELECT^MPIFQ1
"KRN",101,1200,99)
57357,57410
"KRN",101,1202,-1)
0^31
"KRN",101,1202,0)
MPIF REAL-TIME QUERY (ADD PATIENT)^Add Patient to MPI^^A^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1202,20)
D ADD^MPIFQ1
"KRN",101,1202,99)
57357,57410
"KRN",101,1205,-1)
0^32
"KRN",101,1205,0)
MPIF REAL-TIME QUERY (HELP)^HELP^^A^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1205,1,0)
^^1^1^2970912^^^
"KRN",101,1205,1,1,0)
HELP FOR REAL-TIME CIRN QUERY
"KRN",101,1205,20)
D HELP^MPIFQ1
"KRN",101,1205,99)
57357,57410
"KRN",101,1328,-1)
0^21
"KRN",101,1328,0)
MPIF CMOR COMPARISON CLIENT^Change of CMOR Request^^S^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1328,1,0)
^^3^3^2971217^^^^
"KRN",101,1328,1,1,0)
This client will make the CMOR request for change. This task used by the
"KRN",101,1328,1,2,0)
COMPARISON options. This should not be used for seeding the MPI with new
"KRN",101,1328,1,3,0)
patient/s.
"KRN",101,1328,20)

"KRN",101,1328,99)
57700,28361
"KRN",101,1328,770)
^MPIF CMOR COMP^ADT^A31^^P^^NE^NE^2.3^ADT
"KRN",101,1328,771)
D ^MPIFQUE4
"KRN",101,1328,773)
1^1
"KRN",101,1328,774)
D LOGIC^MPIFQUE3
"KRN",101,1329,-1)
0^27
"KRN",101,1329,0)
MPIF CMOR COMPARISON SERVER^Control of the CMOR comparison process^^E^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1329,1,0)
^^6^6^2990420^
"KRN",101,1329,1,1,0)
This process will take all the patients that your site is not the CMOR for
"KRN",101,1329,1,2,0)
and send the CMOR Activity Score to the CMOR for comparison.  If the score
"KRN",101,1329,1,3,0)
from your site, for that patient, is greater and the difference is more
"KRN",101,1329,1,4,0)
than 80% the CMOR will automatically be changed to your site.
"KRN",101,1329,1,5,0)
 
"KRN",101,1329,1,6,0)
This process should run after the MPI initialization has been completed.
"KRN",101,1329,10,0)
^101.01PA^1^1
"KRN",101,1329,10,1,0)
1328^^^
"KRN",101,1329,10,1,"^")
MPIF CMOR COMPARISON CLIENT
"KRN",101,1329,99)
57700,28421
"KRN",101,1329,770)
MPIF CMOR COMP^^ADT^A31^^P^^NE^NE^2.3^
"KRN",101,1329,772)
Q
"KRN",101,1330,-1)
0^28
"KRN",101,1330,0)
MPIF CMOR RESULT SERVER^^^E^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1330,1,0)
^^1^1^2981223^
"KRN",101,1330,1,1,0)
This is the server protocol for the Change of CMOR Requests.
"KRN",101,1330,10,0)
^101.01PA^1^1
"KRN",101,1330,10,1,0)
1331^^^
"KRN",101,1330,10,1,"^")
MPIF CMOR RESULT CLIENT
"KRN",101,1330,99)
57700,28787
"KRN",101,1330,770)
MPIF CMOR RSLT^^ADT^A31^^P^^NE^NE^2.3^
"KRN",101,1330,772)
Q
"KRN",101,1331,-1)
0^22
"KRN",101,1331,0)
MPIF CMOR RESULT CLIENT^Change of CMOR Client^^S^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1331,1,0)
^^1^1^2990420^
"KRN",101,1331,1,1,0)
This is the client protocol for the change of CMOR request.
"KRN",101,1331,99)
57700,28787
"KRN",101,1331,770)
^MPIF CMOR RSLT^ADT^A31^^P^^NE^NE^2.3^ADT
"KRN",101,1331,771)
D EN^MPIFQUE5
"KRN",101,1331,773)
1^1
"KRN",101,1331,774)
Q
"KRN",101,1342,-1)
0^37
"KRN",101,1342,0)
MPIF CMOR REQUEST^CIRN Master of Record Request^^E^^^^^^^^
"KRN",101,1342,10,0)
^101.01PA^1^1
"KRN",101,1342,10,1,0)
1343^^^
"KRN",101,1342,10,1,"^")
MPIF CMOR RESPONSE
"KRN",101,1342,99)
57785,37602
"KRN",101,1342,770)
RG CIRN^^ADT^A31^^P^^NE^NE^2.3^
"KRN",101,1343,-1)
0^36
"KRN",101,1343,0)
MPIF CMOR RESPONSE^CIRN Master of Record Response^^S^^^^^^^^
"KRN",101,1343,99)
57394,60160
"KRN",101,1343,770)
^RG CIRN^ADT^A31^^P^^NE^NE^2.3^ADT
"KRN",101,1343,771)
D IN^MPIFHL7
"KRN",101,1343,773)
0^0^0^0
"KRN",101,1343,774)
Q
"KRN",101,1427,-1)
0^23
"KRN",101,1427,0)
MPIF A28 REQUEST^MPIF A28 REQUEST^^E^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1427,10,0)
^101.01PA^1^1
"KRN",101,1427,10,1,0)
1428^^^
"KRN",101,1427,10,1,"^")
MPIF A28 RESPONSE
"KRN",101,1427,99)
57572,47295
"KRN",101,1427,770)
MPIF LOC/MIS^^ADT^A28^i^P^^NE^NE^2.3^ADT
"KRN",101,1427,772)

"KRN",101,1428,-1)
0^24
"KRN",101,1428,0)
MPIF A28 RESPONSE^MPIF A28 RESPONSE^^S^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1428,99)
57572,47295
"KRN",101,1428,770)
^MPIF LOC/MIS^ADT^A28^i^P^MPIVA^NE^NE^2.3^ADT
"KRN",101,1428,771)
Q
"KRN",101,1428,773)
1^1^^1
"KRN",101,1428,774)

"KRN",101,1429,-1)
0^25
"KRN",101,1429,0)
MPIF A29 SERVER^INACTIVATE ICN^^E^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1429,1,0)
^^2^2^2990308^
"KRN",101,1429,1,1,0)
Inactivates ICN at the MPI and removes the CIRN/MPI fields populated when
"KRN",101,1429,1,2,0)
ICN is added to Patient file.
"KRN",101,1429,10,0)
^101.01PA^1^1
"KRN",101,1429,10,1,0)
1430^^^
"KRN",101,1429,10,1,"^")
MPIF A29
"KRN",101,1429,99)
57572,47295
"KRN",101,1429,770)
MPIF A29 SERVER^^ADT^A29^i^P^^NE^NE^2.3^ADT
"KRN",101,1429,771)
D PAT^MPIFDEL
"KRN",101,1430,-1)
0^19
"KRN",101,1430,0)
MPIF A29^INACTIVATE ICN^^S^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1430,1,0)
^^1^1^2980722^
"KRN",101,1430,1,1,0)
Subscriber for the Inactivate ICN protocol
"KRN",101,1430,99)
57572,47295
"KRN",101,1430,770)
^MPIF MPI^ACK^A29^i^P^MPIVA^NE^NE^2.3^ADT
"KRN",101,1430,771)
Q
"KRN",101,1430,773)
1^1^
"KRN",101,1431,-1)
0^18
"KRN",101,1431,0)
MPIF A30^MERGE ICN^^S^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1431,1,0)
^^1^1^2980723^^
"KRN",101,1431,1,1,0)
Merges ICN at the MPI and all subscriber sites.
"KRN",101,1431,99)
57572,47295
"KRN",101,1431,770)
^MPIF MPI^ADT^A30^i^P^^NE^NE^2.3^ADT
"KRN",101,1431,771)
D IN^MPIFMER
"KRN",101,1431,773)
1^1
"KRN",101,1431,774)
D LINKS^MPIFMER
"KRN",101,1432,-1)
0^26
"KRN",101,1432,0)
MPIF A30 SERVER^MERGE ICN^^E^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1432,10,0)
^101.01PA^1^1
"KRN",101,1432,10,1,0)
1431^^^
"KRN",101,1432,10,1,"^")
MPIF A30
"KRN",101,1432,99)
57589,29314
"KRN",101,1432,770)
MPIF A30 SERVER^^ADT^A30^i^P^^NE^NE^2.3^ADT
"KRN",101,1432,771)
D MER^MPIFMER
"KRN",409.61,125,-1)
0^2
"KRN",409.61,125,0)
MPIF REAL-TIME QUERY^1^^80^7^16^1^1^^MPIF REAL-TIME QUERY MENU^MPI QUERY RESULTS^1^^1
"KRN",409.61,125,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,125,"ARRAY")
 ^TMP("MPIFQ0",$J)
"KRN",409.61,125,"COL",0)
^409.621^4^4
"KRN",409.61,125,"COL",1,0)
PATIENT^6^31^Patient
"KRN",409.61,125,"COL",2,0)
SSN^31^9^SSN^^0
"KRN",409.61,125,"COL",3,0)
Date of Birth^42^11^DOB
"KRN",409.61,125,"COL",4,0)
CMOR^53^20^Cirn Master Record
"KRN",409.61,125,"COL","AIDENT",0,2)

"KRN",409.61,125,"COL","B","CMOR",4)

"KRN",409.61,125,"COL","B","Date of Birth",3)

"KRN",409.61,125,"COL","B","PATIENT",1)

"KRN",409.61,125,"COL","B","SSN",2)

"KRN",409.61,125,"FNL")
D EXIT^MPIFQ1
"KRN",409.61,125,"HDR")
D HDR^MPIFQ1
"KRN",409.61,125,"INIT")
D INIT^MPIFQ1
"KRN",771,26,-1)
0^10
"KRN",771,26,0)
MPIF-STARTUP^a^^
"KRN",771,26,"EC")

"KRN",771,26,"FS")

"KRN",771,26,"MSG",0)
^771.06P^1^1
"KRN",771,26,"MSG",1,0)
PRA
"KRN",771,26,"MSG",1,"R")
ADDPAT^MPIFBT2
"KRN",771,26,"SEG",0)
^771.05P^1^1
"KRN",771,26,"SEG",1,0)
VTQ
"KRN",771,26,"SEG",1,"F")
1,2,3,4,5
"KRN",771,32,-1)
0^13
"KRN",771,32,0)
MPIF MPI^a^^MPIF HL7 GROUP^^^USA
"KRN",771,36,-1)
0^14
"KRN",771,36,0)
MPIF CMOR COMP^a^^^^^USA
"KRN",771,36,"EC")

"KRN",771,37,-1)
0^15
"KRN",771,37,0)
MPIF CMOR RSLT^a^^^^^USA
"KRN",771,37,"SEG",0)
^771.05P
"KRN",771,38,-1)
0^7
"KRN",771,38,0)
MPIF LOC/MIS^a
"KRN",771,39,-1)
0^11
"KRN",771,39,0)
MPIF A29 SERVER^a^
"KRN",771,39,"MSG",0)
^771.06P^1^1
"KRN",771,39,"MSG",1,0)
QRD
"KRN",771,39,"MSG",1,"R")
Q
"KRN",771,39,"SEG",0)
^771.05P^1^1
"KRN",771,39,"SEG",1,0)
MSH
"KRN",771,39,"SEG",1,"F")
1
"KRN",771,40,-1)
0^12
"KRN",771,40,0)
MPIF A30 SERVER^a^^^^^USA
"KRN",869.2,63,-1)
0^5
"KRN",869.2,63,0)
MPIVA MAIL^MAILMAN
"KRN",869.2,63,100)
MPIF HL7 GROUP
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1
"ORD",11,3.8,0)
MAIL GROUP
"ORD",12,869.2)
869.2;12;1;;HLLLP^XPDTA1;;HLLLPE^XPDIA1
"ORD",12,869.2,0)
HL LOWER LEVEL PROTOCOL PARAMETER
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",282,-1)
1^1
"PKG",282,0)
MASTER PATIENT INDEX VISTA^MPIF^Master Patient Index VistA side
"PKG",282,20,0)
^9.402P^^
"PKG",282,22,0)
^9.49I^1^1
"PKG",282,22,1,0)
1.0^2990428
"PKG",282,22,1,1,0)
^^2^2^2990507
"PKG",282,22,1,1,1,0)
 
"PKG",282,22,1,1,2,0)
Master Patient Index project.
"PKG",282,22,1,"PAH",0)
^9.4901^2^2
"PKG",282,22,1,"PAH",1,0)
2^2980817^12564
"PKG",282,22,1,"PAH",2,0)
3
"PKG",282,22,1,"PAH","B",2,1)

"PKG",282,22,1,"PAH","B",3,2)

"PKG",282,"VERSION")
1.0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
28
"RTN","MPIF001")
0^57^B30811725
"RTN","MPIF001",1,0)
MPIF001 ;ALB/RJS-UTILITY ROUTINE TO SUPPORT VCCI STUFF ;JUL 12, 1996
"RTN","MPIF001",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIF001",3,0)
GETICN(DFN) ;
"RTN","MPIF001",4,0)
 ; This function returns the ICN, including checksum for a given DFN
"RTN","MPIF001",5,0)
 ; or -1^error message
"RTN","MPIF001",6,0)
 ; DFN - ien in Patient file
"RTN","MPIF001",7,0)
 ;
"RTN","MPIF001",8,0)
 N RETURN,NODE
"RTN","MPIF001",9,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN" G EXIT1
"RTN","MPIF001",10,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT1
"RTN","MPIF001",11,0)
 I '$D(^DPT(DFN,"MPI")) S RETURN="-1^NO MPI NODE" G EXIT1
"RTN","MPIF001",12,0)
 S NODE=^DPT(DFN,"MPI")
"RTN","MPIF001",13,0)
 I $P(NODE,"^",1)'>0 S RETURN="-1^NO ICN" G EXIT1
"RTN","MPIF001",14,0)
 S RETURN=$P(NODE,"^",1)_"V"_$P(NODE,"^",2)
"RTN","MPIF001",15,0)
EXIT1 ;
"RTN","MPIF001",16,0)
 Q RETURN
"RTN","MPIF001",17,0)
 ;
"RTN","MPIF001",18,0)
 ;
"RTN","MPIF001",19,0)
GETDFN(ICN) ;
"RTN","MPIF001",20,0)
 ; Returns DFN (ien Patient file) or -1^error message for a given ICN
"RTN","MPIF001",21,0)
 ; ICN - ICN for a given Patient in the Patient file
"RTN","MPIF001",22,0)
 N RETURN,DFN
"RTN","MPIF001",23,0)
 I $G(ICN)'>0 S RETURN="-1^NO ICN" G EXIT2
"RTN","MPIF001",24,0)
 I '$D(^DPT("AICN",ICN)) S RETURN="-1^ICN NOT IN DATABASE" G EXIT2
"RTN","MPIF001",25,0)
 S DFN=$O(^DPT("AICN",ICN,0))
"RTN","MPIF001",26,0)
 I $G(DFN)'>0 S RETURN="-1^BAD ICN CROSS-REFERENCE" G EXIT2
"RTN","MPIF001",27,0)
 S RETURN=DFN
"RTN","MPIF001",28,0)
EXIT2 ;
"RTN","MPIF001",29,0)
 Q RETURN
"RTN","MPIF001",30,0)
 ;
"RTN","MPIF001",31,0)
CMOR2(DFN) ;
"RTN","MPIF001",32,0)
 ; Returns CMOR Site Name or -1^error message
"RTN","MPIF001",33,0)
 ; DFN = Patient IEN
"RTN","MPIF001",34,0)
 N NODE
"RTN","MPIF001",35,0)
 S NODE=$$MPINODE^MPIFAPI(DFN)
"RTN","MPIF001",36,0)
 Q:$P(NODE,"^",3)="" "-1^No CMOR"
"RTN","MPIF001",37,0)
 Q $$CMORNAME($P(NODE,"^",3))
"RTN","MPIF001",38,0)
 ;
"RTN","MPIF001",39,0)
CMORNAME(CIEN) ;
"RTN","MPIF001",40,0)
 ; Returns CMOR site name or -1^error message
"RTN","MPIF001",41,0)
 ; CIEN - ien from Institution file
"RTN","MPIF001",42,0)
 ;
"RTN","MPIF001",43,0)
 Q:CIEN="" "-1^No Institution parameter"
"RTN","MPIF001",44,0)
 N INST
"RTN","MPIF001",45,0)
 S INST=$$NNT^XUAF4(CIEN)
"RTN","MPIF001",46,0)
 Q:INST="" "-1^No Institution for that IEN"
"RTN","MPIF001",47,0)
 Q:$P(INST,"^")="" "-1^No Name for this Institution"
"RTN","MPIF001",48,0)
 Q $P(INST,"^")
"RTN","MPIF001",49,0)
 ;
"RTN","MPIF001",50,0)
GETVCCI(DFN) ;
"RTN","MPIF001",51,0)
 ; Returns CMOR or -1^error message for a given patient
"RTN","MPIF001",52,0)
 ; DFN - ien of patient in Patient file
"RTN","MPIF001",53,0)
 N RETURN,NODE,PTR,STANUM
"RTN","MPIF001",54,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN" G EXIT3
"RTN","MPIF001",55,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT3
"RTN","MPIF001",56,0)
 I '$D(^DPT(DFN,"MPI")) S RETURN="-1^NO MPI NODE" G EXIT3
"RTN","MPIF001",57,0)
 S NODE=$$MPINODE^MPIFAPI(DFN)
"RTN","MPIF001",58,0)
 S PTR=$P(NODE,"^",3)
"RTN","MPIF001",59,0)
 I PTR'>0 S RETURN="-1^NO CMOR DEFINED FOR PT" G EXIT3
"RTN","MPIF001",60,0)
 S STANUM=$P($$NNT^XUAF4(PTR),"^",2)
"RTN","MPIF001",61,0)
 I STANUM'>0 S RETURN="-1^PTS CMOR IS DANGLING PTR" G EXIT3
"RTN","MPIF001",62,0)
 S RETURN=STANUM
"RTN","MPIF001",63,0)
EXIT3 ;
"RTN","MPIF001",64,0)
 Q RETURN
"RTN","MPIF001",65,0)
 ;
"RTN","MPIF001",66,0)
 ;
"RTN","MPIF001",67,0)
CHANGE(DFN,VCCI) ;
"RTN","MPIF001",68,0)
 ; ** This function is only to be used by approved packages **
"RTN","MPIF001",69,0)
 ;
"RTN","MPIF001",70,0)
 ; This function updates the CMOR field in the Patient file
"RTN","MPIF001",71,0)
 ; DFN = ien in Patient file
"RTN","MPIF001",72,0)
 ; VCCI = CMOR ien from the institution file or CMOR site name
"RTN","MPIF001",73,0)
 ; returned:  -1^error message - problem
"RTN","MPIF001",74,0)
 ;             1 - successful
"RTN","MPIF001",75,0)
 N RETURN,DIQUIET,DIE,DA,DR,IEN,Y,X,DIC
"RTN","MPIF001",76,0)
 S (RETURN,DIQUIET)=1
"RTN","MPIF001",77,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN PASSED" G EXIT4
"RTN","MPIF001",78,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT4
"RTN","MPIF001",79,0)
 I $G(VCCI)="" S RETURN="-1^NO CMOR PASSED" G EXIT4
"RTN","MPIF001",80,0)
 I VCCI'?.N S IEN=$$LKUP^XUAF4(VCCI)
"RTN","MPIF001",81,0)
 ; ^ passed name, get ien from Institution file
"RTN","MPIF001",82,0)
 I $G(IEN)=0 S RETURN="-1^NO INSTITUTION BY THAT NAME" G EXIT4
"RTN","MPIF001",83,0)
 I $D(IEN) S VCCI=IEN
"RTN","MPIF001",84,0)
 S VCCI="`"_VCCI
"RTN","MPIF001",85,0)
 ; ^ Have ien stuff added to use ien instead of station number
"RTN","MPIF001",86,0)
 D LOCK
"RTN","MPIF001",87,0)
 S DIQUIET=1
"RTN","MPIF001",88,0)
 S DIE="^DPT(",DA=DFN,DR="991.03///^S X=VCCI"
"RTN","MPIF001",89,0)
 D ^DIE
"RTN","MPIF001",90,0)
 I +$G(Y)=-1 S RETURN="-1^UNSUCCESSFUL DIE CALL"
"RTN","MPIF001",91,0)
 D UNLOCK
"RTN","MPIF001",92,0)
EXIT4 ;
"RTN","MPIF001",93,0)
 Q RETURN
"RTN","MPIF001",94,0)
 ;
"RTN","MPIF001",95,0)
SETICN(DFN,ICN,CHKSUM) ;
"RTN","MPIF001",96,0)
 ; ** this function is to only be used by approved packages **
"RTN","MPIF001",97,0)
 ;
"RTN","MPIF001",98,0)
 ; This function updates the ICN and ICN Checksum fields in the Patient 
"RTN","MPIF001",99,0)
 ; file for a given patient.
"RTN","MPIF001",100,0)
 ; DFN - ien in the Patient file to be updated
"RTN","MPIF001",101,0)
 ; ICN - ICN (without checksum) to be updated
"RTN","MPIF001",102,0)
 ; CHKSUM - ICN checksum
"RTN","MPIF001",103,0)
 ; return:  -1^error message - problem
"RTN","MPIF001",104,0)
 ;          1 - successful
"RTN","MPIF001",105,0)
 N RETURN,DIQUIET,DIE,DA,DR,RGRSICN,Y
"RTN","MPIF001",106,0)
 S (RETURN,DIQUIET,RGRSICN)=1
"RTN","MPIF001",107,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN PASSED" G EXIT5
"RTN","MPIF001",108,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT5
"RTN","MPIF001",109,0)
 I $G(ICN)="" S RETURN="-1^NO ICN PASSED" G EXIT5
"RTN","MPIF001",110,0)
 I $G(CHKSUM)="" S RETURN="-1^NO CHKSUM PASSED" G EXIT5
"RTN","MPIF001",111,0)
 I $D(^DPT("AICN",ICN)) D
"RTN","MPIF001",112,0)
 .N RGLOG D START^RGHLLOG(0)
"RTN","MPIF001",113,0)
 .D EXC^RGHLLOG(227,"Patient dfn "_DFN_" returned ICN "_ICN_" that is already in use for Patient dfn "_$O(^DPT("AICN",ICN,""))_" use Duplicate Record Merge to Checkout pair")
"RTN","MPIF001",114,0)
 .D STOP^RGHLLOG(0)
"RTN","MPIF001",115,0)
 .S RETURN="-1^ICN ALREADY IN USE"
"RTN","MPIF001",116,0)
 G:+RETURN=-1 EXIT5
"RTN","MPIF001",117,0)
 D LOCK S DIQUIET=1
"RTN","MPIF001",118,0)
 S DIE="^DPT(",DA=DFN,DR="991.01///^S X=ICN;991.02///^S X=CHKSUM"
"RTN","MPIF001",119,0)
 D ^DIE
"RTN","MPIF001",120,0)
 I +$G(Y)=-1 S RETURN="-1^UNSUCCESSFUL DIE CALL"
"RTN","MPIF001",121,0)
 D UNLOCK
"RTN","MPIF001",122,0)
EXIT5 ;
"RTN","MPIF001",123,0)
 Q RETURN
"RTN","MPIF001",124,0)
 ;
"RTN","MPIF001",125,0)
SETLOC(DFN,DELFLAG) ;
"RTN","MPIF001",126,0)
 ; ** This function should be only used by approved packages **
"RTN","MPIF001",127,0)
 ;
"RTN","MPIF001",128,0)
 ; This function updates the LOCALLY ASSIGNED ICN field in the Patient
"RTN","MPIF001",129,0)
 ; for the given patient
"RTN","MPIF001",130,0)
 ;DFN - ien from Patient file of patient to be updated
"RTN","MPIF001",131,0)
 ;DELFLAG - 1 is to turn the flag on
"RTN","MPIF001",132,0)
 ;        - 0 is to turn off the flag
"RTN","MPIF001",133,0)
 ;
"RTN","MPIF001",134,0)
 N RETURN,DIQUIET,DIE,DA,DR,VALUE,Y
"RTN","MPIF001",135,0)
 S (RETURN,DIQUIET)=1
"RTN","MPIF001",136,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN PASSED" G EXIT6
"RTN","MPIF001",137,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT6
"RTN","MPIF001",138,0)
 D LOCK S DIQUIET=1
"RTN","MPIF001",139,0)
 S VALUE=$S($G(DELFLAG)=0:"@",1:1)
"RTN","MPIF001",140,0)
 S DIE="^DPT(",DA=DFN,DR="991.04///^S X=VALUE"
"RTN","MPIF001",141,0)
 D ^DIE
"RTN","MPIF001",142,0)
 I +$G(Y)=-1 S RETURN="-1^UNSUCCESSFUL DIE CALL"
"RTN","MPIF001",143,0)
 D UNLOCK
"RTN","MPIF001",144,0)
EXIT6 ;
"RTN","MPIF001",145,0)
 Q RETURN
"RTN","MPIF001",146,0)
 ;
"RTN","MPIF001",147,0)
IFLOCAL(DFN) ;
"RTN","MPIF001",148,0)
 ; This function is used to see if a patient has a local ICN
"RTN","MPIF001",149,0)
 ; DFN - ien of patient in Patient file
"RTN","MPIF001",150,0)
 ; returned:  0 = patient does not exist, dfn is not defined or no MPI node OR Patient does not have a local ICN
"RTN","MPIF001",151,0)
 ;            1 = patient has a Local ICN assigned
"RTN","MPIF001",152,0)
 Q:$G(DFN)="" 0
"RTN","MPIF001",153,0)
 Q:$G(^DPT(DFN,0))="" 0
"RTN","MPIF001",154,0)
 Q:'$D(^DPT(DFN,"MPI")) 0
"RTN","MPIF001",155,0)
 Q:$P($G(^DPT(DFN,"MPI")),"^",4)=1 1
"RTN","MPIF001",156,0)
 Q 0
"RTN","MPIF001",157,0)
 ;
"RTN","MPIF001",158,0)
IFVCCI(DFN) ;
"RTN","MPIF001",159,0)
 ; this function returns 1 if your facility is the CMOR for the given pt
"RTN","MPIF001",160,0)
 ; DFN - ien of patient in Patient file
"RTN","MPIF001",161,0)
 ; returns: 1 = your site in the CMOR for this patient
"RTN","MPIF001",162,0)
 ;          -1 = your site is not the CMOR for this patient
"RTN","MPIF001",163,0)
 N VCCI,SITE
"RTN","MPIF001",164,0)
 S VCCI=$P($$GETVCCI(DFN),"^",1)
"RTN","MPIF001",165,0)
 S SITE=$P($$SITE^VASITE,"^",3)\1
"RTN","MPIF001",166,0)
 I $P(VCCI,"^",1)=-1 Q -1
"RTN","MPIF001",167,0)
 I VCCI'=SITE Q -1
"RTN","MPIF001",168,0)
 Q 1
"RTN","MPIF001",169,0)
 ;
"RTN","MPIF001",170,0)
HL7CMOR(DFN,SEP) ;
"RTN","MPIF001",171,0)
 ; This function returns the CMOR station number and institution name for
"RTN","MPIF001",172,0)
 ; the given patient.
"RTN","MPIF001",173,0)
 ; DFN = ien for patient in Patient file
"RTN","MPIF001",174,0)
 ; SEP = delimeter to separate station number and name
"RTN","MPIF001",175,0)
 ; returned:  Station Number <sep> Institution name
"RTN","MPIF001",176,0)
 ;            -1^error message
"RTN","MPIF001",177,0)
 N RETURN,NODE,PTR,STAT
"RTN","MPIF001",178,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN" G EXIT7
"RTN","MPIF001",179,0)
 I $G(SEP)="" S RETURN="-1^NO FIELD SEPERATOR" G EXIT7
"RTN","MPIF001",180,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT7
"RTN","MPIF001",181,0)
 I $$MPINODE^MPIFAPI(DFN)<1 S RETURN="-1^NO MPI NODE" G EXIT7
"RTN","MPIF001",182,0)
 S NODE=$$MPINODE^MPIFAPI(DFN)
"RTN","MPIF001",183,0)
 S PTR=$P(NODE,"^",3)
"RTN","MPIF001",184,0)
 I PTR'>0 S RETURN="-1^NO CMOR DEFINED FOR PT" G EXIT7
"RTN","MPIF001",185,0)
 S STAT=$$NNT^XUAF4(PTR)
"RTN","MPIF001",186,0)
 I STAT="" S RETURN="-1^PTS CMOR IS DANGLING PTR" G EXIT7
"RTN","MPIF001",187,0)
 I $P(STAT,"^")="" S RETURN="-1^NO INSTITUTION NAME" G EXIT7
"RTN","MPIF001",188,0)
 S RETURN=$P(STAT,"^",2)_SEP_$P(STAT,"^")
"RTN","MPIF001",189,0)
EXIT7 ;
"RTN","MPIF001",190,0)
 Q RETURN
"RTN","MPIF001",191,0)
 ;
"RTN","MPIF001",192,0)
LOCK ;
"RTN","MPIF001",193,0)
 L +^DPT(DFN,"MPI"):10 I '$T G LOCK
"RTN","MPIF001",194,0)
 Q
"RTN","MPIF001",195,0)
 ;
"RTN","MPIF001",196,0)
 ;
"RTN","MPIF001",197,0)
UNLOCK ;
"RTN","MPIF001",198,0)
 L -^DPT(DFN,"MPI")
"RTN","MPIF001",199,0)
 Q
"RTN","MPIFA31I")
0^71^B23786221
"RTN","MPIFA31I",1,0)
MPIFA31I ;ALB/JRP-PROCESS ADT-A31 MESSAGE FROM MPI ;03-JAN-97
"RTN","MPIFA31I",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFA31I",3,0)
 ;
"RTN","MPIFA31I",4,0)
PROCESS(MSGARR) ;Process ADT-A31 message received from MPI when a new
"RTN","MPIFA31I",5,0)
 ; patient is assigned an Integration Control Number
"RTN","MPIFA31I",6,0)
 ;
"RTN","MPIFA31I",7,0)
 ;Input  : MSGARR - Array containing ADT-A31 message (full global ref)
"RTN","MPIFA31I",8,0)
 ;                - MSGARR must be in format compatible with interaction
"RTN","MPIFA31I",9,0)
 ;                  with DHCP HL7 package
"RTN","MPIFA31I",10,0)
 ;                    MSGARR(1) = First segment of message
"RTN","MPIFA31I",11,0)
 ;                    MSGARR(1,n) = Continuation node(s) for segment
"RTN","MPIFA31I",12,0)
 ;                    MSGARR(x) = Xth segment of message
"RTN","MPIFA31I",13,0)
 ;                    MSGARR(x,n) = Continuation node(s) for segment
"RTN","MPIFA31I",14,0)
 ;                - Defaults to ^TMP("MPIFA31",$J,"MPI-ADT-A31")
"RTN","MPIFA31I",15,0)
 ;Output : ICN = Successfully processed
"RTN","MPIFA31I",16,0)
 ;        -1^Reason = Failure
"RTN","MPIFA31I",17,0)
 ;Notes  : The MPI uses an ADT-A31 message to return the ICN of new
"RTN","MPIFA31I",18,0)
 ;         patients.  This value (seq # 2 of PID segment) is the only
"RTN","MPIFA31I",19,0)
 ;         information that will be stored.
"RTN","MPIFA31I",20,0)
 ;
"RTN","MPIFA31I",21,0)
 ;Check input
"RTN","MPIFA31I",22,0)
 S MSGARR=$G(MSGARR)
"RTN","MPIFA31I",23,0)
 S:(MSGARR="") MSGARR="^TMP(""MPIFA31"","_$J_",""MPI-ADT-A31"")"
"RTN","MPIFA31I",24,0)
 Q:(('$D(@MSGARR))!('$O(@MSGARR@(0)))) "-1^Array containing ADT-A31 message not valid"
"RTN","MPIFA31I",25,0)
 ;Declare variables
"RTN","MPIFA31I",26,0)
 N MSH,EVN,PID,SEND,RECEIVE,EVENT,REASON,SEGMENT,SEGNAME
"RTN","MPIFA31I",27,0)
 N ICN,ICNNUM,ICNCHECK,DFN,DFNCHECK,CHKSCHM,SSN,LOCAL,TMP,FLDSEP,HLECH
"RTN","MPIFA31I",28,0)
 N CMPSEP,REPSEP,ESC,SUBSEP,TMP1,TMP2
"RTN","MPIFA31I",29,0)
 ;Parse required segments out of message
"RTN","MPIFA31I",30,0)
 S (MSH,EVN,PID)=""
"RTN","MPIFA31I",31,0)
 S TMP=0
"RTN","MPIFA31I",32,0)
 F  S TMP=+$O(@MSGARR@(TMP)) Q:('TMP)  D
"RTN","MPIFA31I",33,0)
 .;Get segment and screen out unused segments
"RTN","MPIFA31I",34,0)
 .S SEGMENT=$G(@MSGARR@(TMP))
"RTN","MPIFA31I",35,0)
 .S SEGNAME=$E(SEGMENT,1,3)
"RTN","MPIFA31I",36,0)
 .S TMP1=","_SEGNAME_","
"RTN","MPIFA31I",37,0)
 .Q:('(",MSH,EVN,PID,"[TMP1))
"RTN","MPIFA31I",38,0)
 .;Use first occurrance of segment
"RTN","MPIFA31I",39,0)
 .Q:(@SEGNAME'="")
"RTN","MPIFA31I",40,0)
 .;Remember field separator if MSH segment
"RTN","MPIFA31I",41,0)
 .S:(SEGNAME="MSH") FLDSEP=$E(SEGMENT,4)
"RTN","MPIFA31I",42,0)
 .;Drop segment name and field separator for storage
"RTN","MPIFA31I",43,0)
 .S @SEGNAME=$E(SEGMENT,5,$L(SEGMENT))
"RTN","MPIFA31I",44,0)
 .;Account for rollover (begin rollover subscripting with 1)
"RTN","MPIFA31I",45,0)
 .S TMP1=0
"RTN","MPIFA31I",46,0)
 .S TMP2=1
"RTN","MPIFA31I",47,0)
 .F  S TMP1=+$O(@MSGARR@(TMP,TMP1)) Q:('TMP1)  D
"RTN","MPIFA31I",48,0)
 ..;Get/save rollover
"RTN","MPIFA31I",49,0)
 ..S @SEGNAME@(TMP2)=$G(@MSGARR@(TMP,TMP1))
"RTN","MPIFA31I",50,0)
 ..S TMP2=TMP2+1
"RTN","MPIFA31I",51,0)
 ;Make sure used segments were all found
"RTN","MPIFA31I",52,0)
 F SEGNAME="MSH","EVN","PID" Q:(@SEGNAME="")
"RTN","MPIFA31I",53,0)
 Q:(@SEGNAME="") "-1^Required segment ("_SEGNAME_") missing"
"RTN","MPIFA31I",54,0)
 ;Safety check on field separator (use DHCP default value)
"RTN","MPIFA31I",55,0)
 S:($G(FLDSEP)="") FLDSEP="^"
"RTN","MPIFA31I",56,0)
 ;Get encoding characters
"RTN","MPIFA31I",57,0)
 S HLECH=$P(MSH,FLDSEP,1)
"RTN","MPIFA31I",58,0)
 ;Component separator
"RTN","MPIFA31I",59,0)
 S CMPSEP=$E(HLECH,1)
"RTN","MPIFA31I",60,0)
 ;Repetion separator
"RTN","MPIFA31I",61,0)
 S REPSEP=$E(HLECH,2)
"RTN","MPIFA31I",62,0)
 ;Escape character
"RTN","MPIFA31I",63,0)
 S ESC=$E(HLECH,3)
"RTN","MPIFA31I",64,0)
 ;Subcomponent separator
"RTN","MPIFA31I",65,0)
 S SUBSEP=$E(HLECH,4)
"RTN","MPIFA31I",66,0)
 ;Process MSH segment
"RTN","MPIFA31I",67,0)
 ; - Get sending facility
"RTN","MPIFA31I",68,0)
 S SEND=$P(MSH,FLDSEP,3)
"RTN","MPIFA31I",69,0)
 ; - Get receiving facility
"RTN","MPIFA31I",70,0)
 S RECEIVE=$P(MSH,FLDSEP,5)
"RTN","MPIFA31I",71,0)
 ; - Get event type
"RTN","MPIFA31I",72,0)
 S EVENT=$P($P(MSH,FLDSEP,8),CMPSEP,2)
"RTN","MPIFA31I",73,0)
 ; - Validate information in MSH segment
"RTN","MPIFA31I",74,0)
 ;   - MPI is sending facility
"RTN","MPIFA31I",75,0)
 ;Q:(SEND'="200M") "-1^Sending facility not valid (must be '200M')"
"RTN","MPIFA31I",76,0)
 ;   - Receiving facility is local facility
"RTN","MPIFA31I",77,0)
 S TMP=+$P($$SITE^VASITE(),"^",3)
"RTN","MPIFA31I",78,0)
 Q:(RECEIVE'=TMP) "-1^Receiving facility not valid (must be "_TMP_")"
"RTN","MPIFA31I",79,0)
 ;   - Event type is A31
"RTN","MPIFA31I",80,0)
 Q:(EVENT'="A31") "-1^Event type not valid (must be 'A31')"
"RTN","MPIFA31I",81,0)
 ;Process EVN segment
"RTN","MPIFA31I",82,0)
 ; - Get event reason
"RTN","MPIFA31I",83,0)
 S REASON=$P(EVN,FLDSEP,4)
"RTN","MPIFA31I",84,0)
 ; - Validate information in EVN segment
"RTN","MPIFA31I",85,0)
 ;   - Event reason is 95
"RTN","MPIFA31I",86,0)
 Q:(REASON'="95") "-1^Event reason code not valid (must be '95')"
"RTN","MPIFA31I",87,0)
 ;Process PID segment
"RTN","MPIFA31I",88,0)
 ; - Get ICN & checksum & checksum scheme
"RTN","MPIFA31I",89,0)
 S TMP=$P(PID,FLDSEP,2)
"RTN","MPIFA31I",90,0)
 S ICN=$P(TMP,CMPSEP,1)
"RTN","MPIFA31I",91,0)
 Q:(ICN'?1.16N1"V"6N) "-1^ICN not in correct format"
"RTN","MPIFA31I",92,0)
 S ICNNUM=$P(ICN,"V",1)
"RTN","MPIFA31I",93,0)
 S ICNCHECK=$P(TMP,"V",2)
"RTN","MPIFA31I",94,0)
 Q:((ICNNUM="")!(ICNCHECK="")) "-1^Could not determine ICN"
"RTN","MPIFA31I",95,0)
 ; - Validate checksum
"RTN","MPIFA31I",96,0)
 Q:(ICNCHECK'=$$CHECKDG^MPIFSPC(ICNNUM)) "-1^ICN/checksum not valid"
"RTN","MPIFA31I",97,0)
 ; - Get DFN & checksum & checksum scheme
"RTN","MPIFA31I",98,0)
 S TMP=$P(PID,FLDSEP,3)
"RTN","MPIFA31I",99,0)
 S DFN=$P(TMP,CMPSEP,1)
"RTN","MPIFA31I",100,0)
 S DFNCHECK=$P(TMP,CMPSEP,2)
"RTN","MPIFA31I",101,0)
 S CHKSCHM=$P(TMP,CMPSEP,3)
"RTN","MPIFA31I",102,0)
 ; - Validate checksum
"RTN","MPIFA31I",103,0)
 Q:((CHKSCHM'="M10")&(CHKSCHM'="M11")) "-1^Unable to validate DFN/checksum"
"RTN","MPIFA31I",104,0)
 S TMP=$$M10^HLFNC(DFN)
"RTN","MPIFA31I",105,0)
 S:(CHKSCHM="M11") TMP=$$M11^HLFNC(DFN)
"RTN","MPIFA31I",106,0)
 Q:($P(TMP,CMPSEP,2)'=DFNCHECK) "-1^DFN/checksum not valid"_TMP
"RTN","MPIFA31I",107,0)
 ; - Get SSN (account for roll over)
"RTN","MPIFA31I",108,0)
 S SSN=""
"RTN","MPIFA31I",109,0)
 S TMP=$L(PID,FLDSEP)
"RTN","MPIFA31I",110,0)
 S TMP1=$P(PID,FLDSEP,TMP)
"RTN","MPIFA31I",111,0)
 S:(TMP=19) SSN=$P(PID,FLDSEP,19)_$P($G(PID(1)),FLDSEP,1)
"RTN","MPIFA31I",112,0)
 S:(TMP>19) SSN=$P(PID,FLDSEP,19)
"RTN","MPIFA31I",113,0)
 S:(TMP<19) SSN=$P($G(PID(1)),FLDSEP,((19-TMP)+1))
"RTN","MPIFA31I",114,0)
 ; - Validate information in PID
"RTN","MPIFA31I",115,0)
 ;   - Make sure DFN exists
"RTN","MPIFA31I",116,0)
 S LOCAL=$G(^DPT(DFN,0))
"RTN","MPIFA31I",117,0)
 Q:($P(LOCAL,"^",1)="") "-1^Could not locate patient (bad DFN)"
"RTN","MPIFA31I",118,0)
 ;   - Make sure SSNs match
"RTN","MPIFA31I",119,0)
 Q:($P(LOCAL,"^",9)'=SSN) "-1^DFN/SSN pairing not valid"
"RTN","MPIFA31I",120,0)
 ;Extra validation checks
"RTN","MPIFA31I",121,0)
 ; - Verify local ownership of patient
"RTN","MPIFA31I",122,0)
 Q:($$IFVCCI^MPIF001(DFN)<0) "-1^Local facility not listed as Primary Patient Facility"
"RTN","MPIFA31I",123,0)
 ; - Verify lack of national ICN
"RTN","MPIFA31I",124,0)
 I ($$GETICN^MPIF001(DFN)>0) Q:('$D(^DPT("AICNL",1,DFN))) "-1^National ICN already assigned to patient"
"RTN","MPIFA31I",125,0)
 ;Passed all validation checks - store ICN & checksum
"RTN","MPIFA31I",126,0)
 S TMP=$$SETICN^MPIF001(DFN,ICNNUM,ICNCHECK)
"RTN","MPIFA31I",127,0)
 Q:(TMP<0) "-1^Unable to store ICN and checksum"
"RTN","MPIFA31I",128,0)
 ;Delete local ICN flag
"RTN","MPIFA31I",129,0)
 S TMP=$$SETLOC^MPIF001(DFN,0)
"RTN","MPIFA31I",130,0)
 N HERE,TFSITE
"RTN","MPIFA31I",131,0)
 S HERE=+$P($$SITE^VASITE,"^",3)
"RTN","MPIFA31I",132,0)
 S TFSITE=$$LKUP^XUAF4(HERE)
"RTN","MPIFA31I",133,0)
 Q:+TFSITE'>0 ICN
"RTN","MPIFA31I",134,0)
 Q:$D(^DGCN(391.91,"APAT",DFN,TFSITE)) ICN
"RTN","MPIFA31I",135,0)
 K DD,DO N DIC,X,Y
"RTN","MPIFA31I",136,0)
 S DIC="^DGCN(391.91,",DIC("DR")=".02///`"_TFSITE,X=DFN,DIC(0)="LQZ"
"RTN","MPIFA31I",137,0)
 D FILE^DICN
"RTN","MPIFA31I",138,0)
 I +Y=-1 S ^XTMP($J,"MPIF","MSHERR")="Treating Facility Add Failed" D
"RTN","MPIFA31I",139,0)
 .D EXC^RGHLLOG(212,"DFN= "_DFN_"  Treating Facility= "_TFSITE)
"RTN","MPIFA31I",140,0)
 K DD,DO,DIC,X,Y
"RTN","MPIFA31I",141,0)
 ;Done
"RTN","MPIFA31I",142,0)
 Q ICN
"RTN","MPIFAPI")
0^43^B9599583
"RTN","MPIFAPI",1,0)
MPIFAPI ;CMC/BP-APIS FOR MPI ;DEC 21, 1998
"RTN","MPIFAPI",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFAPI",3,0)
 ;original 1st line ARS/SLC - API for local ICNs ;04-FEB-97
"RTN","MPIFAPI",4,0)
 ;
"RTN","MPIFAPI",5,0)
EN2() ;NEW ENTRY POINT FOR LOCALS
"RTN","MPIFAPI",6,0)
 N MPIOUT,DIC,MPICHK,MPINCK,MPINNM,MPINUM1,DA,MPINUM
"RTN","MPIFAPI",7,0)
 I $O(^MPIF(984.1,0))="" G SETUP
"RTN","MPIFAPI",8,0)
AGN2 L +^MPIF(984.1):1 E  H 3 G AGN2
"RTN","MPIFAPI",9,0)
 S MPINUM=0
"RTN","MPIFAPI",10,0)
 S X=$$SITE^VASITE,X=$P(X,"^",3),X=X\1
"RTN","MPIFAPI",11,0)
 S DIC="^MPIF(984.1,",DIC(0)="XZ" D ^DIC
"RTN","MPIFAPI",12,0)
 S MPINUM1=$P(Y(0),"^",4),MPICHK=$P(Y(0),"^",5),MPINNM=MPINUM1+1
"RTN","MPIFAPI",13,0)
 S MPINUM=MPINUM1_"V"_MPICHK
"RTN","MPIFAPI",14,0)
 S MPINCK=$$CHECKDG^MPIFSPC(MPINNM)
"RTN","MPIFAPI",15,0)
 S DA=1,DIE="^MPIF(984.1,",DR="1////^S X=MPINUM1;2////^S X=MPICHK;3////^S X=MPINNM;5////"_MPINCK
"RTN","MPIFAPI",16,0)
 D ^DIE
"RTN","MPIFAPI",17,0)
 K DIE,DR,X,Y
"RTN","MPIFAPI",18,0)
 L -^MPIF(984.1)
"RTN","MPIFAPI",19,0)
 Q MPINUM
"RTN","MPIFAPI",20,0)
SETUP ;
"RTN","MPIFAPI",21,0)
 N CHK,NUM,NXTCHK,NXTNUM,SITE,DA
"RTN","MPIFAPI",22,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1
"RTN","MPIFAPI",23,0)
 S DIC="^MPIF(984.1,",DA=1,DIC(0)="",X=SITE
"RTN","MPIFAPI",24,0)
 S NUM=SITE_"0000000"
"RTN","MPIFAPI",25,0)
 S CHK=$$CHECKDG^MPIFSPC(NUM)
"RTN","MPIFAPI",26,0)
 S MPINUM=NUM_"V"_CHK
"RTN","MPIFAPI",27,0)
 S NXTNUM=NUM+1,NXTCHK=$$CHECKDG^MPIFSPC(NXTNUM)
"RTN","MPIFAPI",28,0)
 S DIC("DR")="1////^S X=NUM;2////^S X=CHK;3////^S X=NXTNUM;5////"_NXTCHK
"RTN","MPIFAPI",29,0)
 K DD,D0
"RTN","MPIFAPI",30,0)
 D FILE^DICN
"RTN","MPIFAPI",31,0)
 K DIC,X,Y
"RTN","MPIFAPI",32,0)
 Q MPINUM
"RTN","MPIFAPI",33,0)
 ;
"RTN","MPIFAPI",34,0)
MPILINK() ;returns MPI logical LInk
"RTN","MPIFAPI",35,0)
 N MPIL,MPILINK
"RTN","MPIFAPI",36,0)
 D LINK^HLUTIL3("MPI",.MPIL)
"RTN","MPIFAPI",37,0)
 I '$D(MPIL) S MPIL(0)="-1^NOT DEFINED"
"RTN","MPIFAPI",38,0)
 S MPILINK=$O(MPIL(0)),MPILINK=$G(MPIL(MPILINK))
"RTN","MPIFAPI",39,0)
 Q MPILINK
"RTN","MPIFAPI",40,0)
 ;
"RTN","MPIFAPI",41,0)
SUBNUM(DFN) ; returns Subscription Control Number from MPI node for given DFN
"RTN","MPIFAPI",42,0)
 ; DFN - ien of patient file
"RTN","MPIFAPI",43,0)
 ; returns:  -1^error message
"RTN","MPIFAPI",44,0)
 ;           Subscription Control Number
"RTN","MPIFAPI",45,0)
 I '$D(DFN) Q "-1^DFN not defined"
"RTN","MPIFAPI",46,0)
 I '$D(^DPT(DFN)) Q "-1^DFN doesn't exist"
"RTN","MPIFAPI",47,0)
 I '$D(^DPT(DFN,"MPI")) Q "-1^No MPI node for DFN "_DFN
"RTN","MPIFAPI",48,0)
 N NODE,SUB
"RTN","MPIFAPI",49,0)
 S NODE=$$MPINODE(DFN)
"RTN","MPIFAPI",50,0)
 S SUB=$P(NODE,"^",5)
"RTN","MPIFAPI",51,0)
 I SUB="" S SUB="-1^No Subscription Control Number for DFN "_DFN
"RTN","MPIFAPI",52,0)
 Q SUB
"RTN","MPIFAPI",53,0)
 ;
"RTN","MPIFAPI",54,0)
MPINODE(DFN) ; returns MPI node for given DFN
"RTN","MPIFAPI",55,0)
 ; DFN - patient file ien
"RTN","MPIFAPI",56,0)
 ; returns:  -1^error message
"RTN","MPIFAPI",57,0)
 ;           MPI node from patient file
"RTN","MPIFAPI",58,0)
 I '$D(DFN) Q "-1^DFN not defined"
"RTN","MPIFAPI",59,0)
 I '$D(^DPT(DFN)) Q "-1^DFN doesn't exist"
"RTN","MPIFAPI",60,0)
 I '$D(^DPT(DFN,"MPI")) Q "-1^No MPI node for DFN "_DFN
"RTN","MPIFAPI",61,0)
 N NODE
"RTN","MPIFAPI",62,0)
 S NODE=$G(^DPT(DFN,"MPI"))
"RTN","MPIFAPI",63,0)
 I NODE=""!(NODE?."^") S NODE="-1^No MPI data for DFN "_DFN
"RTN","MPIFAPI",64,0)
 Q NODE
"RTN","MPIFAPI",65,0)
 ;
"RTN","MPIFAPI",66,0)
UPDATE(DFN,ARR) ; updates fields on MPI node passed in ARR(field number) for
"RTN","MPIFAPI",67,0)
 ;patient DFN.  Fields 991.01-991.05 only
"RTN","MPIFAPI",68,0)
 ;ARR - array of values for each field to be updated where subscript
"RTN","MPIFAPI",69,0)
 ; is the field number to be updated
"RTN","MPIFAPI",70,0)
 ;DFN - patient IEN
"RTN","MPIFAPI",71,0)
 ;Returns : -1^error message if unable to update fields
"RTN","MPIFAPI",72,0)
 ;          0 if sucessfully updated fields
"RTN","MPIFAPI",73,0)
 ;
"RTN","MPIFAPI",74,0)
 N FLD,DR,DIE,DA
"RTN","MPIFAPI",75,0)
 Q:'$D(^DPT(DFN,0)) "-1^No Entry in Patient file"
"RTN","MPIFAPI",76,0)
 S DIE="^DPT(",DA=DFN,RGRSICN=""
"RTN","MPIFAPI",77,0)
 F FLD=991.01,991.02,991.03,991.04,991.05 D
"RTN","MPIFAPI",78,0)
 .Q:$G(@ARR@(FLD))=""
"RTN","MPIFAPI",79,0)
 .S DR=FLD_"///^S X=$G(@ARR@(FLD))"
"RTN","MPIFAPI",80,0)
 .D ^DIE
"RTN","MPIFAPI",81,0)
 K RGRSICN
"RTN","MPIFAPI",82,0)
 Q 0
"RTN","MPIFAPI",83,0)
 ;
"RTN","MPIFAPI",84,0)
MPIQ(MDFN) ;
"RTN","MPIFAPI",85,0)
 ;MPI QUERY
"RTN","MPIFAPI",86,0)
 K MPIFRTN D VTQ^MPIFQ0
"RTN","MPIFAPI",87,0)
 I $G(MPIFRTN)="" D
"RTN","MPIFAPI",88,0)
 .; ^ Quit at LM screen when presented with a list of possible matches
"RTN","MPIFAPI",89,0)
 .; \/ setup Local ICN and proceed
"RTN","MPIFAPI",90,0)
 .N ICN,ERR
"RTN","MPIFAPI",91,0)
 .S ICN=$$EN2^MPIFAPI()
"RTN","MPIFAPI",92,0)
 .Q:ICN=""!(+ICN=-1)
"RTN","MPIFAPI",93,0)
 .S ERR=$$SETICN^MPIF001(MDFN,+ICN,$P(ICN,"V",2))
"RTN","MPIFAPI",94,0)
 .S ERR=$$SETLOC^MPIF001(MDFN,1)
"RTN","MPIFAPI",95,0)
 .S ERR=$$CHANGE^MPIF001(MDFN,$P($$SITE^VASITE,"^",2))
"RTN","MPIFAPI",96,0)
 K MPIFRTN
"RTN","MPIFAPI",97,0)
 Q
"RTN","MPIFBT1")
0^41^B34418079
"RTN","MPIFBT1",1,0)
MPIFBT1 ;SLC/ARS-BATCH QUERY TO MPI ;FEB 4, 1997
"RTN","MPIFBT1",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFBT1",3,0)
 ;Changed "New"
"RTN","MPIFBT1",4,0)
 ;
"RTN","MPIFBT1",5,0)
 ;CHANGED AGAIN - CMC 12/8/97
"RTN","MPIFBT1",6,0)
 ;
"RTN","MPIFBT1",7,0)
GOBKG ;
"RTN","MPIFBT1",8,0)
 K STOP
"RTN","MPIFBT1",9,0)
 ;make sure only one job will run
"RTN","MPIFBT1",10,0)
 L +^XTMP("MPIF BATCH LOAD"):3 E  W !,"JOB ALREADY RUNNING" Q
"RTN","MPIFBT1",11,0)
 ;
"RTN","MPIFBT1",12,0)
 I '$D(^RGSITE(991.8,1,"CMOR")) W !,"CMOR Scores NOT Complete" G EXIT
"RTN","MPIFBT1",13,0)
 I $D(^RGSITE(991.8,1,"CMOR")),$P($G(^RGSITE(991.8,1,"CMOR")),"^",7)'="SN" W !,"CMOR Scores NOT Complete" G EXIT
"RTN","MPIFBT1",14,0)
 ;
"RTN","MPIFBT1",15,0)
 ;Check to see if job had STOPed -start where left off, start over or quit
"RTN","MPIFBT1",16,0)
 I $P($G(^MPIF(984.8,1,0)),"^",6)'="" D AGAIN
"RTN","MPIFBT1",17,0)
 I $D(STOP) W !,"Job NOT Started" K STOP G EXIT
"RTN","MPIFBT1",18,0)
 D BEG
"RTN","MPIFBT1",19,0)
 I $D(STOP) K STOP G EXIT
"RTN","MPIFBT1",20,0)
 S ZTRTN="GO^MPIFBT1",ZTDESC="USE HL7 MSGS AND MAIL TO BUILD ICN"
"RTN","MPIFBT1",21,0)
 S ZTIO="",ZTDTH=START
"RTN","MPIFBT1",22,0)
 I $D(DUZ) S ZTSAVE("DUZ")=DUZ
"RTN","MPIFBT1",23,0)
 I $D(ORDER) S ZTSAVE("ORDER")=ORDER
"RTN","MPIFBT1",24,0)
 D ^%ZTLOAD W:$D(ZTSK) !,"TASK #: ",ZTSK
"RTN","MPIFBT1",25,0)
 D HOME^%ZIS K IO("Q")
"RTN","MPIFBT1",26,0)
 K ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,ZTSK,ORDER,START,ENDT
"RTN","MPIFBT1",27,0)
 Q
"RTN","MPIFBT1",28,0)
EXIT ;
"RTN","MPIFBT1",29,0)
 L -^XTMP("MPIF BATCH LOAD")
"RTN","MPIFBT1",30,0)
 Q
"RTN","MPIFBT1",31,0)
 ;
"RTN","MPIFBT1",32,0)
BEG K DIR,DIE,DR,DA,X,Y
"RTN","MPIFBT1",33,0)
 S DIR(0)="D^::AEFT",DIR("B")="NOW",DIR("A")="START TIME"
"RTN","MPIFBT1",34,0)
 D ^DIR
"RTN","MPIFBT1",35,0)
 I $D(DTOUT)!($D(DUOUT)) W !,"Job NOT Scheduled" K DTOUT,DUOUT,DIR,DA,X,Y S STOP="" Q
"RTN","MPIFBT1",36,0)
 S START=Y
"RTN","MPIFBT1",37,0)
 D DD^%DT
"RTN","MPIFBT1",38,0)
 S ENDT=Y
"RTN","MPIFBT1",39,0)
TRY K DIR,DIE,DR,DA,X,Y
"RTN","MPIFBT1",40,0)
 S DIR(0)="D^::AEFT",DIR("B")=ENDT,DIR("A")="STOP TIME"
"RTN","MPIFBT1",41,0)
 D ^DIR
"RTN","MPIFBT1",42,0)
 I $D(DTOUT)!($D(DUOUT)) W !,"Job NOT Scheduled" K DTOUT,DUOUT,DIR,DA,X,Y S STOP="" Q
"RTN","MPIFBT1",43,0)
 I Y'>START W !,"Stop Time must be greater than Start Time" G TRY
"RTN","MPIFBT1",44,0)
 D DD^%DT
"RTN","MPIFBT1",45,0)
 S ENDT=Y
"RTN","MPIFBT1",46,0)
 K DIR,DIE,DR,DA,X,Y
"RTN","MPIFBT1",47,0)
 S DIE="^MPIF(984.8,",DR="9///"_ENDT,DA=1 D ^DIE
"RTN","MPIFBT1",48,0)
 K DIE,X,Y,DA,DR
"RTN","MPIFBT1",49,0)
 I $D(DTOUT)!($D(DUOUT)) W !,"Job NOT Scheduled" K DTOUT,DUOUT,DIR,DA,X,Y S STOP="" Q
"RTN","MPIFBT1",50,0)
 Q
"RTN","MPIFBT1",51,0)
 ;
"RTN","MPIFBT1",52,0)
GO ;ENTRY POINT
"RTN","MPIFBT1",53,0)
 I '$D(ZTQUEUED) L +^XTMP("MPIF BATCH LOAD"):3 E  W !,"JOB ALREADY RUNNING" Q
"RTN","MPIFBT1",54,0)
 I '$D(ZTQUEUED),('$D(^RGSITE(991.8,1,"CMOR"))) W !,"CMOR Scores NOT Complete" G EXIT
"RTN","MPIFBT1",55,0)
 I '$D(ZTQUEUED),$D(^RGSITE(991.8,1,"CMOR")),$P($G(^RGSITE(991.8,1,"CMOR")),"^",7)'="SN" W !,"CMOR Scores NOT Complete" G EXIT
"RTN","MPIFBT1",56,0)
 K STOP
"RTN","MPIFBT1",57,0)
 ;Check to see if job had STOPed-start where left off, start over or quit
"RTN","MPIFBT1",58,0)
 I '$D(ZTQUEUED),$P($G(^MPIF(984.8,1,0)),"^",6)'="" D AGAIN
"RTN","MPIFBT1",59,0)
 I $D(STOP) W !,"Job NOT Started" K STOP G EXIT
"RTN","MPIFBT1",60,0)
 I '$D(ZTQUEUED) D BEG
"RTN","MPIFBT1",61,0)
 I $D(STOP) K STOP G EXIT
"RTN","MPIFBT1",62,0)
GO1 K ^TMP("HLS",$J)
"RTN","MPIFBT1",63,0)
 N MPIMORE,MPITOT
"RTN","MPIFBT1",64,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","MPIFBT1",65,0)
 S QUITIME=$P(^MPIF(984.8,1,0),"^",10)
"RTN","MPIFBT1",66,0)
 I '$D(ORDER) S ORDER=0
"RTN","MPIFBT1",67,0)
 ;
"RTN","MPIFBT1",68,0)
 K ^TMP("HLS",$J)
"RTN","MPIFBT1",69,0)
 S MPICNT=$S($P(^MPIF(984.8,1,0),"^",9)>1:$P(^MPIF(984.8,1,0),"^",9),1:1)
"RTN","MPIFBT1",70,0)
 I +ORDER<1 S ORDER=0
"RTN","MPIFBT1",71,0)
 D WORK
"RTN","MPIFBT1",72,0)
 I $D(^TMP("HLS",$J)) D SEND
"RTN","MPIFBT1",73,0)
 D STOP^RGHLLOG(0)
"RTN","MPIFBT1",74,0)
 K MPIIT,MPITOT,HLDT,HLDT1,MPICNT,MPIDNUM,MPIEROR,MPIHL,MPIMIDT,MPIMSH
"RTN","MPIFBT1",75,0)
 K MPIOUT,MPIQRYNM,MPISEQ,ORDER,QCNT,QUITIME,MPIMCNT,MPIMTX,ORDER,START
"RTN","MPIFBT1",76,0)
 K ENDT
"RTN","MPIFBT1",77,0)
 L -^XTMP("MPIF BATCH LOAD")
"RTN","MPIFBT1",78,0)
 Q
"RTN","MPIFBT1",79,0)
WORK ;
"RTN","MPIFBT1",80,0)
 Q:$P(^MPIF(984.8,1,0),"^",6)="STOP"
"RTN","MPIFBT1",81,0)
 D NOW^%DTC
"RTN","MPIFBT1",82,0)
 S $P(^MPIF(984.8,1,0),"^",2)=%
"RTN","MPIFBT1",83,0)
 I %>QUITIME Q
"RTN","MPIFBT1",84,0)
 S MPIMCNT="",MPIMTX=""
"RTN","MPIFBT1",85,0)
 D HLRDF,LOOP
"RTN","MPIFBT1",86,0)
 Q
"RTN","MPIFBT1",87,0)
 ;
"RTN","MPIFBT1",88,0)
HLRDF ;
"RTN","MPIFBT1",89,0)
 S (MPIOUT,MPIMCNT)=""
"RTN","MPIFBT1",90,0)
 S MPIHL("ECH")="^~\&"
"RTN","MPIFBT1",91,0)
 S MPIHL("FS")="|"
"RTN","MPIFBT1",92,0)
 D INIT^HLFNC2("MPIF ICN-Q02 SERVER",.MPIHL)
"RTN","MPIFBT1",93,0)
 I $O(MPIHL("")) S ^TMP($J,"MPIF","ERR")=MPIHL
"RTN","MPIFBT1",94,0)
 D CREATE^HLTF(.MPIMCNT,.MPIMTX,.HLDT,.HLDT1)
"RTN","MPIFBT1",95,0)
 D START^RGHLLOG()
"RTN","MPIFBT1",96,0)
 Q:$P(^MPIF(984.8,1,0),"^",6)="STOP"
"RTN","MPIFBT1",97,0)
 S $P(^MPIF(984.8,1,0),"^",7)=MPIMCNT
"RTN","MPIFBT1",98,0)
 S $P(^MPIF(984.8,1,0),"^",8)=MPIMTX
"RTN","MPIFBT1",99,0)
 Q
"RTN","MPIFBT1",100,0)
LOOP ;
"RTN","MPIFBT1",101,0)
 Q:$P(^MPIF(984.8,1,0),"^",6)="STOP"
"RTN","MPIFBT1",102,0)
 S MPIDNUM=1
"RTN","MPIFBT1",103,0)
 D MAKE
"RTN","MPIFBT1",104,0)
 Q
"RTN","MPIFBT1",105,0)
SEND ;ready to send
"RTN","MPIFBT1",106,0)
 S $P(^MPIF(984.8,1,0),"^",5)="GENERATE TAG"
"RTN","MPIFBT1",107,0)
 D GENERATE^HLMA("MPIF ICN-Q02 SERVER","GB",1,.MPIMTX,.MPIEROR,.MPIMORE)
"RTN","MPIFBT1",108,0)
 I +MPIEROR=0 S ^TMP($J,"MPIF","ERR")=MPIEROR
"RTN","MPIFBT1",109,0)
 D NOW^%DTC
"RTN","MPIFBT1",110,0)
 S $P(^MPIF(984.8,1,0),"^",3)=%
"RTN","MPIFBT1",111,0)
 K %,MPIMTX,MPIEROR,MPIMORE
"RTN","MPIFBT1",112,0)
 K ^TMP("HLS",$J)
"RTN","MPIFBT1",113,0)
 Q
"RTN","MPIFBT1",114,0)
MAKE ;
"RTN","MPIFBT1",115,0)
 F  S ORDER=$O(^DPT("ACMORS",ORDER)) Q:ORDER=""!($P(^MPIF(984.8,1,0),"^",6)="STOP")  D
"RTN","MPIFBT1",116,0)
 .S MPIIT=0
"RTN","MPIFBT1",117,0)
 .F  S MPIIT=$O(^DPT("ACMORS",ORDER,MPIIT)) Q:MPIIT=""!($P(^MPIF(984.8,1,0),"^",6)="STOP")  D
"RTN","MPIFBT1",118,0)
 ..D MAKE3
"RTN","MPIFBT1",119,0)
 ..D NOW^%DTC
"RTN","MPIFBT1",120,0)
 ..I %>QUITIME S $P(^MPIF(984.8,1,0),"^",6)="STOP"
"RTN","MPIFBT1",121,0)
 Q
"RTN","MPIFBT1",122,0)
MAKE3 ;
"RTN","MPIFBT1",123,0)
 K MPIOUT
"RTN","MPIFBT1",124,0)
 Q:$P(^MPIF(984.8,1,0),"^",6)="STOP"
"RTN","MPIFBT1",125,0)
 S $P(^MPIF(984.8,1,0),"^",5)="LOOPING: "_MPIDNUM
"RTN","MPIFBT1",126,0)
 S:$G(MPIQRYNM)="" MPIQRYNM="VTQ_PID_ICN_LOAD_1"
"RTN","MPIFBT1",127,0)
 D VTQ1^MPIFVTQ(MPIIT,.MPIOUT,.MPIHL,.MPIQRYNM)
"RTN","MPIFBT1",128,0)
 I $P(MPIOUT(0),"^",1)<0,$P(MPIOUT(0),"^",2)="invalid DFN"!($P(MPIOUT(0),"^",2)="no encoding characters") D
"RTN","MPIFBT1",129,0)
 .D EXC^RGHLLOG(206,"DFN = "_MPIIT_"  Problem with building VTQ was "_$P(MPIOUT(0),"^",2)) Q
"RTN","MPIFBT1",130,0)
 Q:$P(MPIOUT(0),"^",1)<0
"RTN","MPIFBT1",131,0)
 ;call for HL7 header
"RTN","MPIFBT1",132,0)
 S MPIMIDT=MPIMCNT_"-"_MPIDNUM
"RTN","MPIFBT1",133,0)
 D MSH^HLFNC2(.MPIHL,MPIMIDT,.MPIMSH)
"RTN","MPIFBT1",134,0)
 S MPIOUT(1)=MPIMSH
"RTN","MPIFBT1",135,0)
 ;MESSAGE BUILT
"RTN","MPIFBT1",136,0)
 S MPISEQ=0
"RTN","MPIFBT1",137,0)
 F  S MPISEQ=$O(MPIOUT(MPISEQ)) Q:MPISEQ'>0  D
"RTN","MPIFBT1",138,0)
 .S ^TMP("HLS",$J,MPICNT)=MPIOUT(MPISEQ)
"RTN","MPIFBT1",139,0)
 .S MPICNT=MPICNT+1
"RTN","MPIFBT1",140,0)
 S $P(^MPIF(984.8,1,0),"^",11)=ORDER
"RTN","MPIFBT1",141,0)
 S $P(^MPIF(984.8,1,0),"^",9)=MPICNT
"RTN","MPIFBT1",142,0)
 S $P(^MPIF(984.8,1,0),"^",4)=MPIIT
"RTN","MPIFBT1",143,0)
 S MPIDNUM=MPIDNUM+1
"RTN","MPIFBT1",144,0)
 I MPIDNUM>100 D
"RTN","MPIFBT1",145,0)
 .D SEND
"RTN","MPIFBT1",146,0)
 .S (MPICNT,MPIDNUM)=1
"RTN","MPIFBT1",147,0)
 .D HLRDF
"RTN","MPIFBT1",148,0)
 Q
"RTN","MPIFBT1",149,0)
 ;
"RTN","MPIFBT1",150,0)
AGAIN ;job started before
"RTN","MPIFBT1",151,0)
 W !,"Job was started before and has Stopped"
"RTN","MPIFBT1",152,0)
 K DIR,DR
"RTN","MPIFBT1",153,0)
 S DIR(0)="Y",DIR("B")="YES",DIR("A")="Begin Where Left Off? ",DIR("?")="Y for yes to start where job left off, N for no"
"RTN","MPIFBT1",154,0)
 D ^DIR
"RTN","MPIFBT1",155,0)
 I Y=1 S ORDER=$P(^MPIF(984.8,1,0),"^",11),$P(^MPIF(984.8,1,0),"^",6)="" G END
"RTN","MPIFBT1",156,0)
 ;job started but used doesn't want to start where job left off
"RTN","MPIFBT1",157,0)
 W !,"'E' - Exit or 'O' - Start over from the Beginning"
"RTN","MPIFBT1",158,0)
 K DIR,DR
"RTN","MPIFBT1",159,0)
 S DIR(0)="S^E:EXIT;O:OVER",DIR("?")="E for Exit, O to Start Over from the Beginning"
"RTN","MPIFBT1",160,0)
 S DIR("A")="What would you like to do?"
"RTN","MPIFBT1",161,0)
 D ^DIR
"RTN","MPIFBT1",162,0)
 S:Y="E" STOP=""
"RTN","MPIFBT1",163,0)
 S:Y="O" ORDER=0,$P(^MPIF(984.8,1,0),"^",6)=""
"RTN","MPIFBT1",164,0)
END ;
"RTN","MPIFBT1",165,0)
 K DIR,Y,DR,X
"RTN","MPIFBT1",166,0)
 ; wants to start over or from where job left off if '$d(stop)
"RTN","MPIFBT1",167,0)
 Q
"RTN","MPIFBT2")
0^42^B80747724
"RTN","MPIFBT2",1,0)
MPIFBT2 ;SLC/ARS-BATCH RESPONSE FROM MPI ;FEB 4, 1997
"RTN","MPIFBT2",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFBT2",3,0)
ADDPAT ;Called when response from MPI is received for messages sent.
"RTN","MPIFBT2",4,0)
 K ^XTMP($J,"MPIF")
"RTN","MPIFBT2",5,0)
 D NOW^%DTC S ST=%,X1=ST,X2=20 D C^%DTC
"RTN","MPIFBT2",6,0)
 S STP=X,^XTMP($J,"MPIF","MPIIN",0)=STP_"^"_ST_"^"_"MPI BATCH JOB"
"RTN","MPIFBT2",7,0)
 ; ^XTMP($J, MPIF" is killed when the job is successfully completed.
"RTN","MPIFBT2",8,0)
 K %,X,Y,X1,X2,ST,STP N RGLOG,MPIMSG S MPIMSG=HLMTIEN
"RTN","MPIFBT2",9,0)
 D START^RGHLLOG(HLMTIEN,"","ADDPAT^MPIFBT2")
"RTN","MPIFBT2",10,0)
 D PREPMSG,PROCESS(MPIMSG)
"RTN","MPIFBT2",11,0)
 D STOP^RGHLLOG(0)
"RTN","MPIFBT2",12,0)
 K ACK1,ACK2,ACK3,ACK4,HDR,MPICKG,MPIIN,MPIIPPF,MPIIT,MPINUM,MPIPPF,DA
"RTN","MPIFBT2",13,0)
 K CNTR,COM,ENC,ESC,LOCAL,MSHDR,PATID,REP,SCOM,SEP,SITE,MPIDTH,VISTDTH,MPITMP,MPICNTR,MPIFOK,^XTMP($J,"MPIF")
"RTN","MPIFBT2",14,0)
 Q
"RTN","MPIFBT2",15,0)
PREPMSG ;prepare for response
"RTN","MPIFBT2",16,0)
 N I,J,X F I=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPIFBT2",17,0)
 .S ^XTMP($J,"MPIF","MPIIN",I)=HLNODE,J=0
"RTN","MPIFBT2",18,0)
 .F  S J=$O(HLNODE(J))  Q:'J  S ^XTMP($J,"MPIF","MPIIN",I,J)=HLNODE(J)
"RTN","MPIFBT2",19,0)
 Q
"RTN","MPIFBT2",20,0)
PROCESS(MPIMSG) ;Process mesage out of array
"RTN","MPIFBT2",21,0)
 N HDR,MPICNTR S MPICNTR=1,HDR=^XTMP($J,"MPIF","MPIIN",1) ;check hdr here
"RTN","MPIFBT2",22,0)
 D CHDR(HDR,.SEP,MPICNTR,MPIMSG)
"RTN","MPIFBT2",23,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",24,0)
 F  S MPICNTR=$O(^XTMP($J,"MPIF","MPIIN",MPICNTR)) Q:'MPICNTR  D LOOPS(.MPICNTR,SEP,MPIMSG)
"RTN","MPIFBT2",25,0)
 Q
"RTN","MPIFBT2",26,0)
LOOPS(CNTR,SEP,MPIMSG) ;Loop in the batch
"RTN","MPIFBT2",27,0)
 K ^XTMP($J,"MPIF","MSHERR") N MSHDR,ACK1,ACK2,ACK3,ACK4,ACK5,PATID,LOCAL,MPITMP
"RTN","MPIFBT2",28,0)
 S MSHDR=^XTMP($J,"MPIF","MPIIN",+CNTR)
"RTN","MPIFBT2",29,0)
 D CHKMSH(MSHDR,.SITE,SEP,MPIMSG)
"RTN","MPIFBT2",30,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",31,0)
 S CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR)) Q:CNTR'>0
"RTN","MPIFBT2",32,0)
 S ACK1=^XTMP($J,"MPIF","MPIIN",CNTR)
"RTN","MPIFBT2",33,0)
 I $P(ACK1,SEP)'="MSA" S ^XTMP($J,"MPIF","MSHERR")="NOT AN MSA SEGMENT" D EXC^RGHLLOG(203,"Around line number "_(CNTR*2)_" of message "_MPIMSG_".")
"RTN","MPIFBT2",34,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",35,0)
 I ACK1["AR" S ^XTMP($J,"MPIF","MSHERR")="APP REJECT ERROR" D EXC^RGHLLOG(207,"Around line number "_(CNTR*2)_" of message "_MPIMSG_".")
"RTN","MPIFBT2",36,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",37,0)
 I ACK1["AE" S ^XTMP($J,"MPIF","MSHERR")="APP ERROR" D EXC^RGHLLOG(208,"Around line number "_(CNTR*2)_" of message "_MPIMSG_".")
"RTN","MPIFBT2",38,0)
 ;ACK1 must be an AA
"RTN","MPIFBT2",39,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",40,0)
 S CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR)) Q:CNTR'>0
"RTN","MPIFBT2",41,0)
 S ACK2=^XTMP($J,"MPIF","MPIIN",CNTR)
"RTN","MPIFBT2",42,0)
 I $P(ACK2,SEP)'="QAK" S ^XTMP($J,"MPIF","MSHERR")="NOT A QAK SEGMENT" D EXC^RGHLLOG(202,"Around line number "_(CNTR*2)_" of message "_MPIMSG_".")
"RTN","MPIFBT2",43,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",44,0)
 I ACK2["NO DATA" D
"RTN","MPIFBT2",45,0)
 .S ^XTMP($J,"MPIF","MSHERR")="NO DATA in MPI "
"RTN","MPIFBT2",46,0)
 .I ACK2["POTENTIAL MATCHES" D EXC^RGHLLOG(218,"For Patient DFN="_$P(ACK2,SEP,2)_".  Use Single Patient Initialization to MPI option to manually process.")
"RTN","MPIFBT2",47,0)
 .I ACK2'["POTENTIAL MATCHES" D EXC^RGHLLOG(209,"For Patient DFN="_$P(ACK2,SEP,2)_".  Need required fields before patient can be processed again the MPI.")
"RTN","MPIFBT2",48,0)
 .N TACK,TCNTR S TCNTR=CNTR,CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR))
"RTN","MPIFBT2",49,0)
 .S TACK=^XTMP($J,"MPIF","MPIIN",CNTR)
"RTN","MPIFBT2",50,0)
 .I $P(TACK,SEP)="MSH" S CNTR=TCNTR
"RTN","MPIFBT2",51,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",52,0)
 ;Verify patient is in database
"RTN","MPIFBT2",53,0)
 S PATID=$P(ACK2,SEP,2),LOCAL=$G(^DPT(PATID,0))
"RTN","MPIFBT2",54,0)
 I LOCAL']"" S ^XTMP($J,"MPIF","MSHERR")="PATIENT DFN NOT IN DATABASE- BAD " D EXC^RGHLLOG(210,"Around line number "_(CNTR*2)_"  DFN= "_PATID_"  MESSAGE# "_MPIMSG)
"RTN","MPIFBT2",55,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",56,0)
 S CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR)) Q:CNTR'>0
"RTN","MPIFBT2",57,0)
 S ACK3=^XTMP($J,"MPIF","MPIIN",CNTR) ;RDF DEFINITION SEGMENT NO-OP
"RTN","MPIFBT2",58,0)
 I $P(ACK3,SEP)'="RDF" S ^XTMP($J,"MPIF","MSHERR")="NOT RDF SEGMENT" D EXC^RGHLLOG(204,"Around line number "_(CNTR*2)_" of message "_MPIMSG_".")
"RTN","MPIFBT2",59,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",60,0)
 S CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR)) Q:CNTR'>0
"RTN","MPIFBT2",61,0)
 S ACK4=^XTMP($J,"MPIF","MPIIN",CNTR)
"RTN","MPIFBT2",62,0)
 I $P(ACK4,SEP)'="RDT" S ^XTMP($J,"MPIF","MSHERR")="NOT RDT SEGMENT" D EXC^RGHLLOG(205,"Around line number "_(CNTR*2)_" of message "_MPIMSG_".")
"RTN","MPIFBT2",63,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",64,0)
 S MPITMP=$O(^XTMP($J,"MPIF","MPIIN",CNTR))
"RTN","MPIFBT2",65,0)
 I MPITMP'>0 S:$E($G(^XTMP($J,"MPIF","MPIIN",MPITMP)),1,3)="BTS" CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR))
"RTN","MPIFBT2",66,0)
 Q:CNTR'>0
"RTN","MPIFBT2",67,0)
 D VFYRDT(ACK4,SEP,CNTR,PATID,SITE,MPIMSG)
"RTN","MPIFBT2",68,0)
 S MPITMP=$O(^XTMP($J,"MPIF","MPIIN",CNTR))
"RTN","MPIFBT2",69,0)
 Q:MPITMP'>0
"RTN","MPIFBT2",70,0)
 S ACK5=^XTMP($J,"MPIF","MPIIN",MPITMP)
"RTN","MPIFBT2",71,0)
 I $P(ACK5,SEP)="RDT" D MULT(.CNTR,ACK5,SEP,MPIMSG,PATID)
"RTN","MPIFBT2",72,0)
 Q
"RTN","MPIFBT2",73,0)
MULT(CNTR,ACK5,SEP,MPIMSG,PATID) ;multiple RDT segments
"RTN","MPIFBT2",74,0)
 N NEXTTF,MPITMP S CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR)),NEXTTF=$P(ACK5,SEP,8)
"RTN","MPIFBT2",75,0)
 D TFLIST(NEXTTF,PATID)
"RTN","MPIFBT2",76,0)
 S MPITMP=$O(^XTMP($J,"MPIF","MPIIN",CNTR)) Q:MPITMP'>0
"RTN","MPIFBT2",77,0)
 S ACK5=^XTMP($J,"MPIF","MPIIN",MPITMP) K NEXTTF,MPITMP
"RTN","MPIFBT2",78,0)
 I $P(ACK5,SEP)="RDT" D MULT(.CNTR,ACK5,SEP,MPIMSG,PATID) ; ^ add to treating facility list.  If not RDT continue on processing next msh
"RTN","MPIFBT2",79,0)
 Q
"RTN","MPIFBT2",80,0)
VFYRDT(ACK4,SEP,CNTR,PATID,SITE,MPIMSG) ;Here is the meat
"RTN","MPIFBT2",81,0)
 N MPIY,IEN,MPICMOR S DGSENFLG=""
"RTN","MPIFBT2",82,0)
 D FINDHM(PATID,ACK4,SEP,.MPIY,MPIMSG,CNTR)
"RTN","MPIFBT2",83,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",84,0)
 N MPINUM,MPICKG,MPIIT,DR,DIE,X
"RTN","MPIFBT2",85,0)
 S MPINUM=$P(ACK4,SEP,6),MPICKG=$P(MPINUM,"V",2),MPINUM=$P(MPINUM,"V",1)
"RTN","MPIFBT2",86,0)
 ;check if ICN already in use in Patient file
"RTN","MPIFBT2",87,0)
 I $D(^DPT("AICN",MPINUM)) D
"RTN","MPIFBT2",88,0)
 .S ^XTMP($J,"MPIF","MSHERR")="ICN already in use"
"RTN","MPIFBT2",89,0)
 .Q:PATID=$O(^DPT("AICN",MPINUM,""))   ; same patient
"RTN","MPIFBT2",90,0)
 .D EXC^RGHLLOG(227,"Patient dfn "_PATID_" returned ICN "_MPINUM_" that is already in use for Patient dfn "_$O(^DPT("AICN",MPINUM,""))_" use Duplicate Record Merge to Checkout pair")
"RTN","MPIFBT2",91,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",92,0)
 S DIE="^DPT(",DA=$P(MPIY,"^",1),MPIIT=$P(MPIY,"^",1),DR="991.01////^S X=MPINUM;991.02////^S X=MPICKG"
"RTN","MPIFBT2",93,0)
 D ^DIE K DR,DIE,DA
"RTN","MPIFBT2",94,0)
 S IEN=$P(MPIY,"^") ; check if need to kill Local/MISSING ICN field
"RTN","MPIFBT2",95,0)
 I $D(^DPT("AMPIMIS",IEN)) K ^DPT("AMPIMIS",IEN)
"RTN","MPIFBT2",96,0)
 I $D(^DPT("AICNL",1,IEN)) D
"RTN","MPIFBT2",97,0)
 .S DIE="^DPT(",DA=IEN,DR="991.04///@" D ^DIE K DR,DIE,DA
"RTN","MPIFBT2",98,0)
 S MPIPPF=$P(ACK4,SEP,5),MPICMOR=$$LKUP^XUAF4(MPIPPF)
"RTN","MPIFBT2",99,0)
 I MPICMOR'="" S MPIIPPF=$$CHANGE^MPIF001(MPIIT,MPICMOR)
"RTN","MPIFBT2",100,0)
 I +MPIIPPF<0 D EXC^RGHLLOG(211,"Around line number "_(CNTR*2)_"  CMOR= "_MPIPPF_" DFN= "_MPIIT_"  MESSAGE# "_MPIMSG)
"RTN","MPIFBT2",101,0)
 Q:+MPIIPPF<0
"RTN","MPIFBT2",102,0)
 D TFLIST(SITE,PATID)
"RTN","MPIFBT2",103,0)
 I MPIPPF'=SITE D TFUPDT(PATID,MPIMSG,CNTR),INSERT^RGJCTS01(PATID)
"RTN","MPIFBT2",104,0)
 Q
"RTN","MPIFBT2",105,0)
TFLIST(TFSITE,PATID) ;
"RTN","MPIFBT2",106,0)
 ;adding TFSITE site for patient to Treating Facility List (#391.91)
"RTN","MPIFBT2",107,0)
 I $G(TFSITE)="" S ^XTMP($J,"MPIF","MSHERR")="Treating Facility = null" D EXC^RGHLLOG(212,"DFN = "_PATID_" Treating Facility = Null") Q
"RTN","MPIFBT2",108,0)
 ; is there already an entry for this patient and this site?
"RTN","MPIFBT2",109,0)
 S TFSITE=$$LKUP^XUAF4(TFSITE)
"RTN","MPIFBT2",110,0)
 Q:+TFSITE'>0
"RTN","MPIFBT2",111,0)
 Q:$D(^DGCN(391.91,"APAT",PATID,TFSITE))
"RTN","MPIFBT2",112,0)
 K DD,DO N DIC,X,Y
"RTN","MPIFBT2",113,0)
 S DIC="^DGCN(391.91,",DIC("DR")=".02///"_TFSITE,X=PATID,DIC(0)="LQZ"
"RTN","MPIFBT2",114,0)
 D FILE^DICN
"RTN","MPIFBT2",115,0)
 I +Y=-1 S ^XTMP($J,"MPIF","MSHERR")="Treating Facility Add Failed" D EXC^RGHLLOG(212,"DFN= "_PATID_"  Treating Facility= "_TFSITE)
"RTN","MPIFBT2",116,0)
 K DD,DO,DIC,X,Y
"RTN","MPIFBT2",117,0)
 Q
"RTN","MPIFBT2",118,0)
TFUPDT(PATID,MPIMSG,CNTR) ;treating facility update message to pivot file
"RTN","MPIFBT2",119,0)
 N ERR,TRANS,EVDT,X,Y,%
"RTN","MPIFBT2",120,0)
 D NOW^%DTC S EVDT=% K %,X,Y
"RTN","MPIFBT2",121,0)
 S ERR=$$PIVNW^VAFHPIVT(PATID,EVDT,5,PATID_";DPT(")
"RTN","MPIFBT2",122,0)
 I +ERR<1 D EXC^RGHLLOG(212,"When trying to add Patient (DFN)"_PATID_"   message# "_MPIMSG_" around line number "_(CNTR*2))
"RTN","MPIFBT2",123,0)
 Q:+ERR<1
"RTN","MPIFBT2",124,0)
 D XMITFLAG^VAFCDD01("",+ERR)
"RTN","MPIFBT2",125,0)
 Q
"RTN","MPIFBT2",126,0)
FINDHM(PATID,ACK4,SEP,MPIY,MPIMSG,CNTR) ;LOOKUP
"RTN","MPIFBT2",127,0)
 N DIC,X,Y,NM,YTMP
"RTN","MPIFBT2",128,0)
 S DGSENFLG="",DIC="^DPT(",DIC(0)="OSZ",X="`"_PATID D ^DIC
"RTN","MPIFBT2",129,0)
 K DIC,DGSENFLG
"RTN","MPIFBT2",130,0)
 I Y=-1 S ^XTMP($J,"MPIF","MSHERR")="LOOKUP FAILED" D EXC^RGHLLOG(210,"SSN = "_$P(ACK4,SEP,3)_"  MESSAGE# "_MPIMSG_" around line number "_(CNTR*2))
"RTN","MPIFBT2",131,0)
 Q:Y=-1
"RTN","MPIFBT2",132,0)
 S NM=$P(Y(0),"^"),YTMP=$G(Y(0)),MPIY=Y ; check if ICN already populated
"RTN","MPIFBT2",133,0)
 N ICN S ICN=$$GETICN^MPIF001(PATID)
"RTN","MPIFBT2",134,0)
 I +ICN'=-1,$E(+ICN,1,3)'=$P($$SITE^VASITE,"^",3) S ^XTMP($J,"MPIF","MSHERR")="Patient "_PATID_" Already has an ICN"
"RTN","MPIFBT2",135,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",136,0)
 S Y(0)=$G(YTMP)
"RTN","MPIFBT2",137,0)
 I $P(Y(0),"^",9)'=$P(ACK4,SEP,3) S ^XTMP($J,"MPIF","MSHERR")="SSN MISMATCH" D EXC^RGHLLOG(213,"SSN on File = "_$P(Y(0),"^",9)_" SSN in Message = "_$P(ACK4,SEP,3)_"    MESSAGE # "_MPIMSG_" around line number "_(CNTR*2))
"RTN","MPIFBT2",138,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",139,0)
 I NM'[$P(ACK4,SEP,2) S ^XTMP($J,"MPIF","MSHERR")="NAME MISMATCH" D EXC^RGHLLOG(214,"Name on File = "_$P(Y(0),"^")_"  Name in Message = "_$P(ACK4,SEP,2)_"  MESSAGE# "_MPIMSG_" around line number "_(CNTR*2))
"RTN","MPIFBT2",140,0)
 ;check to see if MPI has Date of Death or if VistA has DOD
"RTN","MPIFBT2",141,0)
 N MPIDTH,VISTDTH
"RTN","MPIFBT2",142,0)
 I $P(ACK4,SEP,9)'="" S MPIDTH=$P(ACK4,SEP,9),MPIDTH=$$FMDATE^HLFNC(MPIDTH)\1
"RTN","MPIFBT2",143,0)
 I $D(^DPT(PATID,.35)),$P($G(^DPT(PATID,.35)),"^")'="" S VISTDTH=$P($G(^DPT(PATID,.35)),"^")\1
"RTN","MPIFBT2",144,0)
 I $D(MPIDTH)&$D(VISTDTH),MPIDTH'=VISTDTH D
"RTN","MPIFBT2",145,0)
 .N Y S Y=MPIDTH D DD^%DT S MPIDTH=Y
"RTN","MPIFBT2",146,0)
 .S Y=VISTDTH D DD^%DT S VISTDTH=Y
"RTN","MPIFBT2",147,0)
 .D EXC^RGHLLOG(217,"Around line "_(CNTR*2)_" VISTA DOD= "_VISTDTH_" MPI DOD= "_MPIDTH_"  DFN= "_PATID_"  MESSAGE# "_MPIMSG)
"RTN","MPIFBT2",148,0)
 ; ^ BOTH HAVE DOD BUT THEY DON'T MATCH
"RTN","MPIFBT2",149,0)
 I '$D(MPIDTH)&($D(VISTDTH)) D
"RTN","MPIFBT2",150,0)
 .N Y S Y=VISTDTH D DD^%DT S VISTDTH=Y
"RTN","MPIFBT2",151,0)
 .D EXC^RGHLLOG(216,"Around line "_(CNTR*2)_" VISTA DOD= "_VISTDTH_"  DFN= "_PATID_"  MESSAGE# "_MPIMSG)
"RTN","MPIFBT2",152,0)
 ; ^ VISTA HAS DOD BUT MPI DOESN'T
"RTN","MPIFBT2",153,0)
 I $D(MPIDTH)&('$D(VISTDTH)) D
"RTN","MPIFBT2",154,0)
 .N Y S Y=MPIDTH D DD^%DT S MPIDTH=Y
"RTN","MPIFBT2",155,0)
 .D EXC^RGHLLOG(215,"Around line "_(CNTR*2)_" MPI DOD= "_MPIDTH_"  DFN= "_PATID_"  MESSAGE# "_MPIMSG)
"RTN","MPIFBT2",156,0)
 ; ^ MPI HAS DOD BUT VISTA DOESN'T
"RTN","MPIFBT2",157,0)
 Q
"RTN","MPIFBT2",158,0)
CHDR(HDR,SEP,CNTR,MPIMSG) ;check the header
"RTN","MPIFBT2",159,0)
 I $P(HDR,"^")'="BHS" S ^XTMP($J,"MPIF","MSHERR")="BHS SEGMENT MISSING" D EXC^RGHLLOG(200,"Around line number "_(CNTR*2)_" of message "_MPIMSG_".")
"RTN","MPIFBT2",160,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",161,0)
 ;Only process Batch message responses
"RTN","MPIFBT2",162,0)
 S SEP=$G(HL("FS")) ;get field sep, and encoding characters
"RTN","MPIFBT2",163,0)
 I SEP="" S ^XTMP($J,"MPIF","MSHERR")="Missing field seperator" D EXC^RGHLLOG(200,"Missing field seperator")
"RTN","MPIFBT2",164,0)
 Q
"RTN","MPIFBT2",165,0)
CHKMSH(MSHDR,SITE,SEP,MPIMSG) ;VERIFY MSH
"RTN","MPIFBT2",166,0)
 I $P(MSHDR,SEP)="BTS" S ^XTMP($J,"MPIF","MSHERR")="BTS FOUND" Q
"RTN","MPIFBT2",167,0)
 S:$P(MSHDR,SEP)'="MSH" ^XTMP($J,"MPIF","MSHERR")="NOT MSH HEADER   MESSAGE# "_MPIMSG
"RTN","MPIFBT2",168,0)
 S:$E(MSHDR,4)'=SEP ^XTMP($J,"MPIF","MSHERR")="FIELD SEPARATOR MISMATCH   MESSAGE# "_MPIMSG
"RTN","MPIFBT2",169,0)
 I $D(^XTMP($J,"MPIF","MSHERR")) D EXC^RGHLLOG(201,$G(^XTMP($J,"MPIF","MSHERR")))
"RTN","MPIFBT2",170,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",171,0)
 S SITE=$P(MSHDR,SEP,6)
"RTN","MPIFBT2",172,0)
 I SITE="" S ^XTMP($J,"MPIF","MSHERR")="SITE NOT IN MSH"
"RTN","MPIFBT2",173,0)
 I $D(^XTMP($J,"MPIF","MSHERR")) D EXC^RGHLLOG(8,"MSH Doesn't Have SITE as 6th piece.   MESSAGE# "_MPIMSG)
"RTN","MPIFBT2",174,0)
 Q
"RTN","MPIFCMOR")
0^58^B3986016
"RTN","MPIFCMOR",1,0)
MPIFCMOR ;BHM/RGY-Set and broadcast CMOR changes ;FEB 20, 1998
"RTN","MPIFCMOR",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFCMOR",3,0)
BROAD(REQNO) ;Broadcase CMOR change for request
"RTN","MPIFCMOR",4,0)
 N CN,RGL,SITE,HL,CNT,HLA,PDX,ICN,HOME,RGLINK,RGL,TMP,II,CLIENT,HLA,USER,N0,NDATE,RLST
"RTN","MPIFCMOR",5,0)
 S CLIENT="MPIF CMOR REQUEST" K ERROR
"RTN","MPIFCMOR",6,0)
 S N0=$G(^MPIF(984.9,REQNO,0))
"RTN","MPIFCMOR",7,0)
 S DFN=$P(N0,"^",4)
"RTN","MPIFCMOR",8,0)
 S NDATE=$P(N0,"^",3)
"RTN","MPIFCMOR",9,0)
 N X,Y,DIC
"RTN","MPIFCMOR",10,0)
 S DIC="^VA(200,",DIC(0)="MZO",X="`"_+$P(N0,"^",2)
"RTN","MPIFCMOR",11,0)
 D ^DIC
"RTN","MPIFCMOR",12,0)
 I $G(Y)<1 S USER=""
"RTN","MPIFCMOR",13,0)
 I $G(Y)>0 S USER=$G(Y(0,0))
"RTN","MPIFCMOR",14,0)
 S ICN=$$ICN^MPIFNQ(DFN)
"RTN","MPIFCMOR",15,0)
 S HOME=$P($$MPINODE^MPIFAPI(DFN),"^",3)
"RTN","MPIFCMOR",16,0)
 S CN=+$P($$MPINODE^MPIFAPI(DFN),"^",5)
"RTN","MPIFCMOR",17,0)
 S HL=0,CNT=0
"RTN","MPIFCMOR",18,0)
 D INIT^HLFNC2(CLIENT,.HL)
"RTN","MPIFCMOR",19,0)
 I CN>0 D GET^HLSUB(CN,1,"MPIF CMOR RESPONSE",.HLL)
"RTN","MPIFCMOR",20,0)
 F II=0:0 S II=$O(HLL("LINKS",II)) Q:'II  S HLL("LINKS",II)="MPIF CMOR RESPONSE^"_$P(HLL("LINKS",II),"^",2)
"RTN","MPIFCMOR",21,0)
 ;S RGL=0  F  S RGL=$O(RGL(RGL)) Q:RGL<1  S II=II+1,HLL("LINKS",II)=CLIENT_"^"_RGL(RGL)
"RTN","MPIFCMOR",22,0)
 N MPILINK
"RTN","MPIFCMOR",23,0)
 S MPILINK=$$MPILINK^MPIFAPI()
"RTN","MPIFCMOR",24,0)
 S HLL("LINKS",9999999)="MPIF CMOR RESPONSE^"_MPILINK
"RTN","MPIFCMOR",25,0)
 ;Broadcase new pff to other sites
"RTN","MPIFCMOR",26,0)
 I HL S ERROR=HL Q
"RTN","MPIFCMOR",27,0)
 S CNT=CNT+1,HLA("HLS",CNT)="EVN"_HL("FS")_"A31"_HL("FS")_NDATE_HL("FS")_HL("FS")_""_HL("FS")_USER
"RTN","MPIFCMOR",28,0)
 S CNT=CNT+1,PDX=$$EN^VAFCPID(DFN,"2,3,5"),$P(PDX,"^",3)=ICN,HLA("HLS",CNT)=PDX
"RTN","MPIFCMOR",29,0)
 S CNT=CNT+1,HLA("HLS",CNT)="PV1"_HL("FS")_HL("FS")_HL("FS")_$P($$NNT^XUAF4(+$P(N0,"^",7)),"^",2)_HL("FS")_HL("FS")_HL("FS")_$P($$SITE^VASITE,"^",3)
"RTN","MPIFCMOR",30,0)
 D GENERATE^HLMA(CLIENT,"LM",1,.RLST,"",.HL)
"RTN","MPIFCMOR",31,0)
 I 'RLST S ERROR=RLST
"RTN","MPIFCMOR",32,0)
 Q
"RTN","MPIFCMOR",33,0)
SET(DFN,SITE) ;Set CMOR for patient to site
"RTN","MPIFCMOR",34,0)
 NEW RESULT
"RTN","MPIFCMOR",35,0)
 S RESULT=$$CHANGE^MPIF001(DFN,SITE)
"RTN","MPIFCMOR",36,0)
 Q
"RTN","MPIFDEL")
0^50^B6388541
"RTN","MPIFDEL",1,0)
MPIFDEL ;SF/MJM,CMC-DELETE PATIENT FROM MPI ;JUL 14, 1998
"RTN","MPIFDEL",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFDEL",3,0)
 ;
"RTN","MPIFDEL",4,0)
INTER ;
"RTN","MPIFDEL",5,0)
 ;Entry point for Inactivate Patient from MPI option [MPIF PAT INACT]
"RTN","MPIFDEL",6,0)
 ;No input or output variables ^DPT
"RTN","MPIFDEL",7,0)
 N DIC,DA,DFN,HL,ERROR,CNT,HLRST,ICN,DATE
"RTN","MPIFDEL",8,0)
 S ERROR=""
"RTN","MPIFDEL",9,0)
 S DIC=2,DIC(0)="QEAM" D ^DIC Q:+Y<0  S DFN=+Y
"RTN","MPIFDEL",10,0)
 I +$$PAT^MPIFNQ(DFN)'=+$$SITE^VASITE D  Q
"RTN","MPIFDEL",11,0)
 .I +$$PAT^MPIFNQ(DFN)=0 W !,"*** CIRN Master of Record is Not Defined ***" Q
"RTN","MPIFDEL",12,0)
 .W !,"*** CIRN Master of record site is '"_$$CMORNAME^MPIF001(+$$PAT^MPIFNQ(DFN))_"' ***"
"RTN","MPIFDEL",13,0)
 D HL7(DFN,.ERROR)
"RTN","MPIFDEL",14,0)
 I ERROR="" D DELETE(DFN) W !,"*** Done ***"
"RTN","MPIFDEL",15,0)
 I ERROR'="" W !,"Error Occurred - "_ERROR
"RTN","MPIFDEL",16,0)
 Q
"RTN","MPIFDEL",17,0)
 ;
"RTN","MPIFDEL",18,0)
HL7(DFN,ERROR) ; create HL7 message
"RTN","MPIFDEL",19,0)
 ; check if no subscribers
"RTN","MPIFDEL",20,0)
 N SUB,HL,CNT,ICN,%,HLDATE
"RTN","MPIFDEL",21,0)
 K HLL
"RTN","MPIFDEL",22,0)
 S SUB=$P($G(^DPT(DFN,"MPI")),"^",5)
"RTN","MPIFDEL",23,0)
 I SUB'="" D GET^HLSUB(SUB,"","MPIF A29 SERVER",.HLL) I $D(HLL) S ERROR="Subscribers present, CAN'T DELETE for DFN "_DFN D EXC(DFN,ERROR,225) Q
"RTN","MPIFDEL",24,0)
 S ICN=+$$ICN^MPIFNQ(DFN)
"RTN","MPIFDEL",25,0)
 D NOW^%DTC S HLDATE=$$HLDATE^HLFNC(%,"DT")
"RTN","MPIFDEL",26,0)
 S HL=0,CNT=0
"RTN","MPIFDEL",27,0)
 D INIT^HLFNC2("MPIF A29 SERVER",.HL)
"RTN","MPIFDEL",28,0)
 I HL S ERROR="ERROR = "_HL_" During INIT^HLFNC2 for MPIF A29 Server" D EXC(DFN,ERROR,220)
"RTN","MPIFDEL",29,0)
 S CNT=CNT+1,HLA("HLS",CNT)="EVN"_HL("FS")_"A29"_HL("FS")_HLDATE_HL("FS")_HL("FS")_""_HL("FS")
"RTN","MPIFDEL",30,0)
 S CNT=CNT+1,HLA("HLS",CNT)=$$EN^VAFCPID(DFN,"2,3,5")
"RTN","MPIFDEL",31,0)
 ; message only goes to MPI Link
"RTN","MPIFDEL",32,0)
 D GENERATE^HLMA("MPIF A29 SERVER","LM",1,.HLRST,"",.HL)
"RTN","MPIFDEL",33,0)
 I 'HLRST S ERROR="Error During Generate for MPIF A29 Server Error= "_HLRST_" for dfn "_DFN D EXC(DFN,ERROR,220)
"RTN","MPIFDEL",34,0)
 Q
"RTN","MPIFDEL",35,0)
 ;
"RTN","MPIFDEL",36,0)
PAT(DFN,ERROR) ;Programmer API to Delete MPI entry and remove ICN data from DPT
"RTN","MPIFDEL",37,0)
 S ERROR=""
"RTN","MPIFDEL",38,0)
 I $G(DFN)="" S ERROR="DFN not defined" Q
"RTN","MPIFDEL",39,0)
 I +$$PAT^MPIFNQ(DFN)'=+$$SITE^VASITE S ERROR="This site is not the CMOR for this patient" Q
"RTN","MPIFDEL",40,0)
 D HL7(DFN,ERROR)
"RTN","MPIFDEL",41,0)
 I ERROR="" D DELETE(DFN)
"RTN","MPIFDEL",42,0)
 Q
"RTN","MPIFDEL",43,0)
DELETE(DFN) ;
"RTN","MPIFDEL",44,0)
 N DA,DIE,X,Y,DR
"RTN","MPIFDEL",45,0)
 Q:DFN=""
"RTN","MPIFDEL",46,0)
 S DA=DFN,DIE="^DPT(",DR="991.01///@;991.02///@;991.03///@;991.04///@"
"RTN","MPIFDEL",47,0)
 D ^DIE
"RTN","MPIFDEL",48,0)
 Q
"RTN","MPIFDEL",49,0)
 ;
"RTN","MPIFDEL",50,0)
EXC(DFN,ERROR,TYPE) ; subscribers, log exception
"RTN","MPIFDEL",51,0)
 D START^RGHLLOG(0)
"RTN","MPIFDEL",52,0)
 D EXC^RGHLLOG(TYPE,ERROR)
"RTN","MPIFDEL",53,0)
 D STOP^RGHLLOG(0)
"RTN","MPIFDEL",54,0)
 Q
"RTN","MPIFEDIT")
0^59^B4208388
"RTN","MPIFEDIT",1,0)
MPIFEDIT ;BHM/RGY-Request a CMOR for patient ;FEB 20, 1998
"RTN","MPIFEDIT",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFEDIT",3,0)
NEW ;
"RTN","MPIFEDIT",4,0)
 ;Entry point for option: MPIF NEW REQUEST - create a new request
"RTN","MPIFEDIT",5,0)
 ; to change CMOR.  No input or output variables.
"RTN","MPIFEDIT",6,0)
 ; If a request exists already but have not been sent, it can be editted
"RTN","MPIFEDIT",7,0)
 ; via this option.
"RTN","MPIFEDIT",8,0)
 NEW N0,PHONE,DA,DIE,DR,DIR,ERROR,DIK,Y,DIRUT
"RTN","MPIFEDIT",9,0)
 S DA=$$ADD^MPIFNEW()
"RTN","MPIFEDIT",10,0)
EDIT S PHONE=$P($G(^MPIF(984.9,+$O(^MPIF(984.9,"AD",DUZ,""),-1),0)),"^",5)
"RTN","MPIFEDIT",11,0)
 S DIE="^MPIF(984.9,",DR="[MPIF REQUEST EDIT]" D ^DIE
"RTN","MPIFEDIT",12,0)
 I $D(Y) S DIK="^MPIF(984.9," D ^DIK W "... Request deleted" Q
"RTN","MPIFEDIT",13,0)
 F  Q:'$$CHK^MPIFEDIT(DA)  D  Q:'$D(DA)
"RTN","MPIFEDIT",14,0)
 .W !,"This request is missing required data."
"RTN","MPIFEDIT",15,0)
 .S DIR("A")="Do you want to Edit or Delete this request? ",DIR("B")="EDIT",DIR(0)="SAO^EDIT:EDIT;DELETE:DELETE"
"RTN","MPIFEDIT",16,0)
 .D ^DIR K DIR
"RTN","MPIFEDIT",17,0)
 .I $E(Y)="D"!$D(DIRUT) S DIK="^MPIF(984.9," D ^DIK K DA W "... Request deleted" Q
"RTN","MPIFEDIT",18,0)
 .S DR="[MPIF REQUEST EDIT]",DIE="^MPIF(984.9," D ^DIE
"RTN","MPIFEDIT",19,0)
 .Q
"RTN","MPIFEDIT",20,0)
 I '$D(DA) Q
"RTN","MPIFEDIT",21,0)
APP S DIR("A")="Select Request Action (SEND/EDIT/DELETE)? ",DIR("B")="SEND",DIR(0)="SAO^SEND:SEND;EDIT:EDIT;DELETE:DELETE"
"RTN","MPIFEDIT",22,0)
 D ^DIR K DIR
"RTN","MPIFEDIT",23,0)
 I $E(Y)="D"!$D(DIRUT) D  Q
"RTN","MPIFEDIT",24,0)
 .S DIK="^MPIF(984.9," D ^DIK W "... Request deleted"
"RTN","MPIFEDIT",25,0)
 .Q
"RTN","MPIFEDIT",26,0)
 I $E(Y)="E" S DR="[MPIF REQUEST EDIT]",DIE="^MPIF(984.9," D ^DIE G APP
"RTN","MPIFEDIT",27,0)
 S DR=".08////^S X=2;.06////^S X=2",DIE="^MPIF(984.9," D ^DIE W !,"... Request will be sent"
"RTN","MPIFEDIT",28,0)
 D EN^RGEQ("MPIF CMOR REQUEST",DA)
"RTN","MPIFEDIT",29,0)
 Q
"RTN","MPIFEDIT",30,0)
CHK(IEN) ;
"RTN","MPIFEDIT",31,0)
 NEW X,ERROR
"RTN","MPIFEDIT",32,0)
 S ERROR=0
"RTN","MPIFEDIT",33,0)
 S N0=$G(^MPIF(984.9,IEN,0))
"RTN","MPIFEDIT",34,0)
 F X=1:1:7 I $P(N0,"^",X)="" S ERROR=1 Q
"RTN","MPIFEDIT",35,0)
 I $P($G(^MPIF(984.9,IEN,1)),"^",2)="" S ERROR=1
"RTN","MPIFEDIT",36,0)
 Q ERROR
"RTN","MPIFHL7")
0^60^B2010275
"RTN","MPIFHL7",1,0)
MPIFHL7 ;BHM/RGY-Processing incoming hl7 message ;FEB 20, 1998
"RTN","MPIFHL7",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFHL7",3,0)
IN ;
"RTN","MPIFHL7",4,0)
 ;Entry point used for MPIF CMOR RESPONSE protocol
"RTN","MPIFHL7",5,0)
 ; It process the inbound HL7 message to update CMOR
"RTN","MPIFHL7",6,0)
 N I,PHONE,COMMENTS,STATUS,ID,SITE,NDATE,USER,INST,ICN,HLNODE,HLQUIT
"RTN","MPIFHL7",7,0)
 S HLQUIT="",ID=""
"RTN","MPIFHL7",8,0)
 F I=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPIFHL7",9,0)
 .I $P(HLNODE,HL("FS"),1)="NTE" D
"RTN","MPIFHL7",10,0)
 ..S PHONE=$P(HLNODE,HL("FS"),4)
"RTN","MPIFHL7",11,0)
 ..S COMMENTS=$P(HLNODE,HL("FS"),5)
"RTN","MPIFHL7",12,0)
 ..S STATUS=$P(HLNODE,HL("FS"),6)
"RTN","MPIFHL7",13,0)
 ..S ID=$P(HLNODE,HL("FS"),7)
"RTN","MPIFHL7",14,0)
 ..S SITE=$P(HLNODE,HL("FS"),8)
"RTN","MPIFHL7",15,0)
 .I $P(HLNODE,HL("FS"),1)="EVN" D
"RTN","MPIFHL7",16,0)
 ..S NDATE=$P(HLNODE,HL("FS"),3)
"RTN","MPIFHL7",17,0)
 ..S USER=$P(HLNODE,HL("FS"),6)
"RTN","MPIFHL7",18,0)
 .I $P(HLNODE,HL("FS"),1)="PID" S ICN=+$P(HLNODE,HL("FS"),3)
"RTN","MPIFHL7",19,0)
 .I $P(HLNODE,HL("FS"),1)="PV1" S SITE=+$P(HLNODE,HL("FS"),4)
"RTN","MPIFHL7",20,0)
 I $G(SITE) S SITE=$$LKUP^XUAF4(SITE)
"RTN","MPIFHL7",21,0)
 ;Broadcase to all site to change cmor is id=null
"RTN","MPIFHL7",22,0)
 I ID="" D  Q
"RTN","MPIFHL7",23,0)
 .I SITE'="" S SITE=$$CMORNAME^MPIF001(SITE) D SET^MPIFCMOR($$IEN^MPIFNQ(ICN),SITE)
"RTN","MPIFHL7",24,0)
 I $D(ICN) D IN^MPIFREQ(SITE,USER,COMMENTS,NDATE,ICN,PHONE,ID) Q
"RTN","MPIFHL7",25,0)
 D IN^MPIFRESS(ID,STATUS,NDATE,PHONE,USER,COMMENTS)
"RTN","MPIFHL7",26,0)
 Q
"RTN","MPIFMER")
0^49^B12062764
"RTN","MPIFMER",1,0)
MPIFMER ;SF/MJM,CMC-Merge patient ICN ;JUL 14, 1998
"RTN","MPIFMER",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFMER",3,0)
 ;
"RTN","MPIFMER",4,0)
 ;Notify MPI and other TF of change to patient's ICN
"RTN","MPIFMER",5,0)
 ;
"RTN","MPIFMER",6,0)
MER(PDFN,OLD,ERROR,FLG) ;
"RTN","MPIFMER",7,0)
 Q:$D(MPIFMER)
"RTN","MPIFMER",8,0)
 Q:$E(OLD,1,3)=$E($P($$SITE^VASITE,"^",3),1,3)
"RTN","MPIFMER",9,0)
 ; ^ LOCAL ICN being resolved don't send to CIRN sites.
"RTN","MPIFMER",10,0)
 I '$G(PDFN) S ERROR="DFN VARIABLE UNDEFINED" Q
"RTN","MPIFMER",11,0)
 Q:OLD=""
"RTN","MPIFMER",12,0)
 I '$D(FLG) S FLG=""
"RTN","MPIFMER",13,0)
 I '$D(ERROR) S ERROR=""
"RTN","MPIFMER",14,0)
 S ZTRTN="MER2^MPIFMER",ZTDESC="MERGE ICN JOB",ZTIO=""
"RTN","MPIFMER",15,0)
 D NOW^%DTC S ZTDTH=% K %,X
"RTN","MPIFMER",16,0)
 I $D(DUZ) S ZTSAVE("DUZ")=DUZ
"RTN","MPIFMER",17,0)
 S ZTSAVE("PDFN")=PDFN,ZTSAVE("OLD")=OLD,ZTSAVE("ERROR")=ERROR,ZTSAVE("FLG")=FLG
"RTN","MPIFMER",18,0)
 D ^%ZTLOAD
"RTN","MPIFMER",19,0)
 ;W:$D(ZTSK) !,"TASK #: ",ZTSK
"RTN","MPIFMER",20,0)
 K ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","MPIFMER",21,0)
 Q
"RTN","MPIFMER",22,0)
MER2 ;
"RTN","MPIFMER",23,0)
 N RGLOG,CNT,HLA,HL,RGLINK,HOME,SUB,ICN,TMP,PARENT,RGL,CLIENT,I,TD,X,CMOR,HERE,%
"RTN","MPIFMER",24,0)
 Q:$E(OLD,1,3)=$E($P($$SITE^VASITE,"^",3),1,3)
"RTN","MPIFMER",25,0)
 ; ^ LOCAL ICN being resolved don't send to CIRN sites.
"RTN","MPIFMER",26,0)
 S CNT=0,HL=0,ERROR="",CLIENT="MPIF A30 SERVER"
"RTN","MPIFMER",27,0)
 D NOW^%DTC S TD=$$HLDATE^HLFNC(%,"DT")
"RTN","MPIFMER",28,0)
 I '$G(PDFN) S ERROR="DFN VARIABLE UNDEFINED" Q
"RTN","MPIFMER",29,0)
 S CMOR=+$$PAT^MPIFNQ(PDFN),HERE=+$$SITE^VASITE()
"RTN","MPIFMER",30,0)
 I CMOR'=HERE,FLG="" S ERROR="PATIENT'S CMOR MUST BE THIS FACILITY" D EXC^MPIFDEL(PDFN,ERROR,226) Q
"RTN","MPIFMER",31,0)
 S ICN=$P($$GETICN^MPIF001(PDFN),"^")
"RTN","MPIFMER",32,0)
 I +ICN=-1 S ERROR="NO ICN FOR DFN = "_PDFN Q  ;icn deleted
"RTN","MPIFMER",33,0)
 D INIT^HLFNC2(CLIENT,.HL)
"RTN","MPIFMER",34,0)
 I HL S ERROR=HL D EXC^MPIFDEL(PDFN,ERROR,220) Q
"RTN","MPIFMER",35,0)
 S CNT=CNT+1,HLA("HLS",CNT)="EVN"_HL("FS")_"A30"_HL("FS")_TD_HL("FS")_HL("FS")_HL("FS")
"RTN","MPIFMER",36,0)
 S CNT=CNT+1,HLA("HLS",CNT)=$$EN^VAFCPID(PDFN,"1,2,3,4,5,6,7,8,10,13,14,17,19,11")
"RTN","MPIFMER",37,0)
 S CNT=CNT+1,HLA("HLS",CNT)="MRG"_HL("FS")_OLD
"RTN","MPIFMER",38,0)
 D GENERATE^HLMA(CLIENT,"LM",1,.HLRST,"",.HL)
"RTN","MPIFMER",39,0)
 I 'HLRST S ERROR=HLRST D EXC^MPIFDEL(PDFN,ERROR,220)
"RTN","MPIFMER",40,0)
 Q
"RTN","MPIFMER",41,0)
LINKS ; gets links to send messages to, including mpi
"RTN","MPIFMER",42,0)
 N SUB,MPI
"RTN","MPIFMER",43,0)
 S SUB=$P($G(^DPT(PDFN,"MPI")),"^",5)
"RTN","MPIFMER",44,0)
 I SUB'="" D GET^HLSUB(SUB,0,"MPIF A30",.HLL)
"RTN","MPIFMER",45,0)
 S MPI=$$MPILINK^MPIFAPI() D
"RTN","MPIFMER",46,0)
 .I $P($G(MPI),U)'=-1 S HLL("LINKS",999)="MPIF A30"_"^"_MPI
"RTN","MPIFMER",47,0)
 .I $P($G(MPI),U)=-1 N RGLOG D START^RGHLLOG(HLMTIEN,"","") D EXC^RGHLLOG(224,"No MPI link defines in CIRN Site Paramater file") D STOP^RGHLLOG(0)
"RTN","MPIFMER",48,0)
 Q
"RTN","MPIFMER",49,0)
 ;
"RTN","MPIFMER",50,0)
IN ;process inbound Merge ICN Message
"RTN","MPIFMER",51,0)
 N I,CNT,NODE,SENDER,NEWICN,OLDICN,PDFN,CMOR,ERR,DA,DIE,DR,SEP,CHK
"RTN","MPIFMER",52,0)
 K ^XTMP($J,"MPIFMER")
"RTN","MPIFMER",53,0)
 ; get message
"RTN","MPIFMER",54,0)
 F I=1:1 X HLNEXT Q:HLQUIT'>0  S ^XTMP($J,"MPIFMER","IN",I)=HLNODE
"RTN","MPIFMER",55,0)
 ; ^XTMP($J,"MPIFMER","IN",I look for data
"RTN","MPIFMER",56,0)
 S CNT=0
"RTN","MPIFMER",57,0)
 F  S CNT=$O(^XTMP($J,"MPIFMER","IN",CNT)) Q:CNT=""  D
"RTN","MPIFMER",58,0)
 .S NODE=$G(^XTMP($J,"MPIFMER","IN",CNT))
"RTN","MPIFMER",59,0)
 .I $E(NODE,1,3)="MSH" S SEP=$E(NODE,4),SENDER=$P(NODE,SEP,4) Q:'$D(SEP)
"RTN","MPIFMER",60,0)
 .I $P(NODE,SEP)="EVN" Q:$P(NODE,SEP,2)'="A30"
"RTN","MPIFMER",61,0)
 .I $P(NODE,SEP)="PID" S NEWICN=+$P(NODE,SEP,3),CHK=$P($P(NODE,SEP,3),"V",2) Q:NEWICN=""
"RTN","MPIFMER",62,0)
 .I $P(NODE,SEP)="MRG" S OLDICN=+$P(NODE,SEP,2) Q:OLDICN=""
"RTN","MPIFMER",63,0)
 ;
"RTN","MPIFMER",64,0)
 Q:'$D(OLDICN)
"RTN","MPIFMER",65,0)
 Q:'$D(^DPT("AICN",OLDICN))
"RTN","MPIFMER",66,0)
 ; ^ old icn not at site
"RTN","MPIFMER",67,0)
 S PDFN=""
"RTN","MPIFMER",68,0)
 F  S PDFN=$O(^DPT("AICN",OLDICN,PDFN)) Q:PDFN=""  D
"RTN","MPIFMER",69,0)
 .; incase have multiple OLD-ICNs
"RTN","MPIFMER",70,0)
 .S CMOR=$$PAT^MPIFNQ(PDFN)
"RTN","MPIFMER",71,0)
 .I CMOR'=SENDER S ERR="MERGE ICN MESSAGE DID NOT COME FROM CMOR for Patient dfn="_PDFN D EXC^MPIFDEL(PDFN,ERR,226) Q
"RTN","MPIFMER",72,0)
 .K DA,DIE,DR
"RTN","MPIFMER",73,0)
 .S DA=PDFN,DIE="^DPT(",DR="991.01////"_NEWICN_";991.02////"_CHK,MPIFMER=""
"RTN","MPIFMER",74,0)
 .D ^DIE K MPIFMER
"RTN","MPIFMER",75,0)
 Q
"RTN","MPIFNEW")
0^62^B2551537
"RTN","MPIFNEW",1,0)
MPIFNEW ;BHM/RGY-Create new request for patient demographic change ;FEB 20, 1998
"RTN","MPIFNEW",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFNEW",3,0)
ADD(RNO) ;
"RTN","MPIFNEW",4,0)
 ;This function allows the addition of new CMOR Change requests to be
"RTN","MPIFNEW",5,0)
 ;added to the 984.9 file
"RTN","MPIFNEW",6,0)
 ; RNO - is the site making the request, optional
"RTN","MPIFNEW",7,0)
 ;Returned:  is the IEN of the new entry in 984.9
"RTN","MPIFNEW",8,0)
 ;  OR 0 if no entry is added.
"RTN","MPIFNEW",9,0)
 ;
"RTN","MPIFNEW",10,0)
 N DIC,D0,DIE,DA,X,DLAYGO,DR,RGOK,EVN,DINUM
"RTN","MPIFNEW",11,0)
 S RNO=$G(RNO)
"RTN","MPIFNEW",12,0)
 F EVN=+$P(^MPIF(984.9,0),"^",3)+1:1 L +^MPIF(984.9,EVN):0 I $T S RGOK=0 D  L -^MPIF(984.9,EVN) Q:RGOK
"RTN","MPIFNEW",13,0)
 .I $D(^MPIF(984.9,EVN)) Q
"RTN","MPIFNEW",14,0)
 .S DINUM=EVN,DIC="^MPIF(984.9,",DIC(0)="L",DLAYGO=984.9,X=$S(RNO="":$P($$SITE^VASITE(),"^",3)_"-"_EVN,1:RNO) K DD,D0 D FILE^DICN K DIC,DLAYGO,D0
"RTN","MPIFNEW",15,0)
 .S DIE="^MPIF(984.9,",DR="[MPIF OPEN REQUEST]",DA=EVN D ^DIE
"RTN","MPIFNEW",16,0)
 .S RGOK=1
"RTN","MPIFNEW",17,0)
 .Q
"RTN","MPIFNEW",18,0)
Q Q EVN
"RTN","MPIFNEW",19,0)
 ;
"RTN","MPIFNEW",20,0)
EDIT ; edit existing Requests that have a status of OPEN
"RTN","MPIFNEW",21,0)
 ;select a patient to edit request
"RTN","MPIFNEW",22,0)
 ;
"RTN","MPIFNEW",23,0)
 N ERR,PT,Y
"RTN","MPIFNEW",24,0)
 S DIC="^DPT(",DIC(0)="AEMQZ",DIC("A")="Select Patient's Request you would like to edit: ",DIC("S")="I $D(^MPIF(984.9,""C"",Y))"
"RTN","MPIFNEW",25,0)
 D ^DIC
"RTN","MPIFNEW",26,0)
 Q:+Y<0
"RTN","MPIFNEW",27,0)
 S PT=+Y
"RTN","MPIFNEW",28,0)
 ;check if request is editable
"RTN","MPIFNEW",29,0)
 S ERR=$$CHK3^MPIFUTL(PT)
"RTN","MPIFNEW",30,0)
 Q:ERR=0
"RTN","MPIFNEW",31,0)
 ;yes can edit
"RTN","MPIFNEW",32,0)
 S DA=ERR
"RTN","MPIFNEW",33,0)
 D EDIT^MPIFEDIT
"RTN","MPIFNEW",34,0)
 K DA,ERR
"RTN","MPIFNEW",35,0)
 Q
"RTN","MPIFNQ")
0^73^B4622197
"RTN","MPIFNQ",1,0)
MPIFNQ ;BHM/RGY-Miscellaneous functions for CMOR ;FEB 20, 1998
"RTN","MPIFNQ",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFNQ",3,0)
PAT(IEN) ;Return patient CMOR (Site IEN)
"RTN","MPIFNQ",4,0)
 NEW RESULT
"RTN","MPIFNQ",5,0)
 S RESULT=$$GETVCCI^MPIF001(IEN)
"RTN","MPIFNQ",6,0)
 I RESULT<0 Q ""
"RTN","MPIFNQ",7,0)
 Q RESULT
"RTN","MPIFNQ",8,0)
ICN(IEN) ;Return patient ICN
"RTN","MPIFNQ",9,0)
 NEW RESULT
"RTN","MPIFNQ",10,0)
 S RESULT=$$GETICN^MPIF001(IEN)
"RTN","MPIFNQ",11,0)
 I RESULT<0 Q ""
"RTN","MPIFNQ",12,0)
 Q +RESULT
"RTN","MPIFNQ",13,0)
IEN(ICN) ;Return patient IEN
"RTN","MPIFNQ",14,0)
 NEW RESULT
"RTN","MPIFNQ",15,0)
 S RESULT=$$GETDFN^MPIF001(ICN)
"RTN","MPIFNQ",16,0)
 I RESULT<0 Q ""
"RTN","MPIFNQ",17,0)
 Q RESULT
"RTN","MPIFNQ",18,0)
AUTO() ;
"RTN","MPIFNQ",19,0)
 NEW TMX
"RTN","MPIFNQ",20,0)
 S TMX=+$P($G(^RGSITE(991.8,1,0)),"^",2)
"RTN","MPIFNQ",21,0)
 S:TMX'=1&(TMX'=0) TMX=0
"RTN","MPIFNQ",22,0)
 Q TMX
"RTN","MPIFNQ",23,0)
RPT1 ;
"RTN","MPIFNQ",24,0)
 ; Entry point for option MPIF SENT REQUEST.  This option prints
"RTN","MPIFNQ",25,0)
 ; all outstanding requests for Change of CMOR that this site has sent.
"RTN","MPIFNQ",26,0)
 ; NO input or output variables.
"RTN","MPIFNQ",27,0)
 N X1,X2,Y,USER,AGE,DIC,L,BY,FLDS,FROM,TO,DIR,DTOUT,DUTOUT,DIROUT,DIRUT,X
"RTN","MPIFNQ",28,0)
 S USER=""
"RTN","MPIFNQ",29,0)
 S DIR("A")="Do you only want to list your requests? ",DIR("B")="YES",DIR(0)="YAO" D ^DIR K DIR Q:$D(DIRUT)
"RTN","MPIFNQ",30,0)
 I Y=1 S USER=DUZ
"RTN","MPIFNQ",31,0)
 S DIR("A")="Display requests entered on or before date: ",DIR("B")="T-2",DIR(0)="DAO^::EP" D ^DIR K DIR Q:$D(DIRUT)
"RTN","MPIFNQ",32,0)
 S X2=Y,X1=DT D D^%DTC
"RTN","MPIFNQ",33,0)
 S AGE=X
"RTN","MPIFNQ",34,0)
 S DIC="^MPIF(984.9,",FLDS="[MPIF OUTSTANDING REQUESTS]",L=0
"RTN","MPIFNQ",35,0)
 S BY="[MPIF REQUEST SORT]",FR=",,2,"_USER_","_AGE,TO=",,2,"_USER_","
"RTN","MPIFNQ",36,0)
 D EN1^DIP
"RTN","MPIFNQ",37,0)
 Q
"RTN","MPIFNQ",38,0)
RPT2 ;
"RTN","MPIFNQ",39,0)
 ; Entry point for option:  MPIF RECEIVED REQUESTS to list all change 
"RTN","MPIFNQ",40,0)
 ; of CMOR requests that are still outstanding for review/processing
"RTN","MPIFNQ",41,0)
 ; NO input or output variables.
"RTN","MPIFNQ",42,0)
 N DIC,L,BY,FLDS,FROM,TO,DIR,DTOUT,DUTOUT,DIROUT
"RTN","MPIFNQ",43,0)
 S DIC="^MPIF(984.9,",FLDS="[MPIF OUTSTANDING REQUESTS]",L=0
"RTN","MPIFNQ",44,0)
 S BY="[MPIF PENDING REQUESTS]",FR="",TO=""
"RTN","MPIFNQ",45,0)
 D EN1^DIP
"RTN","MPIFNQ",46,0)
 Q
"RTN","MPIFNQ",47,0)
INQ ;View CMOR request
"RTN","MPIFNQ",48,0)
 N DIC,FLDS,FR,TO,L,BY,Y
"RTN","MPIFNQ",49,0)
ASK S DIC="^MPIF(984.9,",DIC(0)="QEAM",DIC("A")="Select Request #: " D ^DIC Q:+Y<0
"RTN","MPIFNQ",50,0)
 S FR=+Y,TO=+Y,L=0,FLDS="[MPIF REQUEST VIEW]",BY="@NUMBER" D EN1^DIP
"RTN","MPIFNQ",51,0)
 G ASK
"RTN","MPIFNQ",52,0)
 Q
"RTN","MPIFPST")
0^^B4419479
"RTN","MPIFPST",1,0)
MPIFPST ;CMC/SF-MPI VISTA build post-init ;DEC 12, 1998
"RTN","MPIFPST",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFPST",3,0)
 ;
"RTN","MPIFPST",4,0)
EN ;
"RTN","MPIFPST",5,0)
 D MAIL
"RTN","MPIFPST",6,0)
 D MAIL2
"RTN","MPIFPST",7,0)
 D HL7SITE
"RTN","MPIFPST",8,0)
 D CHECKMPI
"RTN","MPIFPST",9,0)
 D REMOVE
"RTN","MPIFPST",10,0)
 Q
"RTN","MPIFPST",11,0)
REMOVE ;
"RTN","MPIFPST",12,0)
 S $P(^RGSITE(991.8,1,1),"^",2)=""
"RTN","MPIFPST",13,0)
 S DIK="^RGSITE(991.8,",DA=36,DA(1)=991.8
"RTN","MPIFPST",14,0)
 D ^DIK
"RTN","MPIFPST",15,0)
 K DIK,DA
"RTN","MPIFPST",16,0)
 Q
"RTN","MPIFPST",17,0)
 ;
"RTN","MPIFPST",18,0)
CHECKMPI ; checking to see if MPI Institition is defined
"RTN","MPIFPST",19,0)
 N DIC,DA,DIE,DR,X,Y
"RTN","MPIFPST",20,0)
 S DIC="^DIC(4,",DIC(0)="XZ",X="MPI"
"RTN","MPIFPST",21,0)
 D ^DIC
"RTN","MPIFPST",22,0)
 I +Y<0 D BMES^XPDUTL("Missing MPI in Institution file, need to update before proceeding.")
"RTN","MPIFPST",23,0)
 Q
"RTN","MPIFPST",24,0)
MAIL2 ;add mail group to 991.8
"RTN","MPIFPST",25,0)
 N DIC,GROUP,DIC,DA,DIE,DR,X,Y
"RTN","MPIFPST",26,0)
 S DIC="^XMB(3.8,",DIC(0)="XQZ",X="MPIF CMOR REQUEST"
"RTN","MPIFPST",27,0)
 D ^DIC
"RTN","MPIFPST",28,0)
 Q:+Y<0
"RTN","MPIFPST",29,0)
 S GROUP=+Y
"RTN","MPIFPST",30,0)
 S DA=1,DIE="^RGSITE(991.8,",DR=".03///^S X=GROUP" D ^DIE
"RTN","MPIFPST",31,0)
 D BMES^XPDUTL("Adding MPIF CMOR REQUEST mailgroup to file 991.8")
"RTN","MPIFPST",32,0)
 Q
"RTN","MPIFPST",33,0)
 ;add mail group to exception file
"RTN","MPIFPST",34,0)
MAIL ;
"RTN","MPIFPST",35,0)
 N DIC,GROUP,DIC,DA,DIE,X,Y,DR,ENT
"RTN","MPIFPST",36,0)
 S DIC="^XMB(3.8,",DIC(0)="XQZ",X="MPIF EXCEPTIONS"
"RTN","MPIFPST",37,0)
 D ^DIC
"RTN","MPIFPST",38,0)
 Q:+Y<0
"RTN","MPIFPST",39,0)
 S GROUP=+Y
"RTN","MPIFPST",40,0)
 F ENT=200:1:208,210:1:212,220:1:222,224 D
"RTN","MPIFPST",41,0)
 .S DIC="^RGHL7(991.11,",DIC(0)="XQZ",X=ENT
"RTN","MPIFPST",42,0)
 .D ^DIC
"RTN","MPIFPST",43,0)
 .Q:+Y<0
"RTN","MPIFPST",44,0)
 .S DA=+Y,DIE="^RGHL7(991.11,",DR="6///^S X=GROUP"
"RTN","MPIFPST",45,0)
 .D ^DIE
"RTN","MPIFPST",46,0)
 Q
"RTN","MPIFPST",47,0)
 ;
"RTN","MPIFPST",48,0)
HL7SITE ;updating Facility in the MPIF-Startup HL7 Application Parameter file
"RTN","MPIFPST",49,0)
 N SITE,DIE,X,Y,DR,ENT,DIC,DA,I
"RTN","MPIFPST",50,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1
"RTN","MPIFPST",51,0)
 ; ^ SITE is Station Number of site doing install
"RTN","MPIFPST",52,0)
 F I="MPIF-STARTUP","MPIF CMOR RSLT","MPIF CMOR COMP","MPIF A29 SERVER","MPIF A30 SERVER","MPIF MPI","MPIF LOC/MIS" D
"RTN","MPIFPST",53,0)
 . S DIC="^HL(771,",DIC(0)="XQZ",X=I
"RTN","MPIFPST",54,0)
 . D ^DIC
"RTN","MPIFPST",55,0)
 . Q:+Y<0
"RTN","MPIFPST",56,0)
 . S DA=+Y
"RTN","MPIFPST",57,0)
 . S DIE="^HL(771,",DR="3///^S X=SITE"
"RTN","MPIFPST",58,0)
 . D ^DIE
"RTN","MPIFPST",59,0)
 Q
"RTN","MPIFPST",60,0)
 ;
"RTN","MPIFQ0")
0^53^B59054901
"RTN","MPIFQ0",1,0)
MPIFQ0 ;ALB/RJS-CIRN QUERY HANDLER TOP LEVEL ;JUL 11, 1997
"RTN","MPIFQ0",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFQ0",3,0)
 ;
"RTN","MPIFQ0",4,0)
INTACTV ;Interactive standalone query
"RTN","MPIFQ0",5,0)
 ;
"RTN","MPIFQ0",6,0)
 ;
"RTN","MPIFQ0",7,0)
 N DFN,NAME1,MPIFLL
"RTN","MPIFQ0",8,0)
 S MPIFRES="",MPIFINT=""
"RTN","MPIFQ0",9,0)
 K DTOUT,DUOUT,X,Y,DIC
"RTN","MPIFQ0",10,0)
 S DIC="^DPT(",DIC(0)="AEMQ"
"RTN","MPIFQ0",11,0)
 D ^DIC
"RTN","MPIFQ0",12,0)
 I ($D(DTOUT))!($D(DUOUT))!((+$G(Y))<0) W !,"TRY AGAIN LATER" G END
"RTN","MPIFQ0",13,0)
 S DFN=+Y
"RTN","MPIFQ0",14,0)
 W !
"RTN","MPIFQ0",15,0)
 ; change to display messages to user 2/10/98 cmc
"RTN","MPIFQ0",16,0)
 I $$SEND^RGJUSITE'>0 W !,"CIRN Messaging Parameter Not Enabled" G END
"RTN","MPIFQ0",17,0)
 N LOCDATA ;Data Returned from GETDATA in ICN array
"RTN","MPIFQ0",18,0)
 D GETDATA("^DPT(",DFN,"LOCDATA",".01;.02;.03;.09;.301;391;1901")
"RTN","MPIFQ0",19,0)
 S LOCDATA(2,DFN,991.01)=$P($$MPINODE^MPIFAPI(DFN),"^")
"RTN","MPIFQ0",20,0)
 I $$IFLOCAL^MPIF001(DFN)=1 S MPIFLL=""
"RTN","MPIFQ0",21,0)
 I $G(LOCDATA(2,DFN,991.01))>0&('$D(MPIFLL)) W !,"Patient already has an ICN" G END
"RTN","MPIFQ0",22,0)
 I +$$SEND2^VAFCUTL1(DFN,"T")=1 W !,"Patient has Test SSN" G END
"RTN","MPIFQ0",23,0)
 G JUMP
"RTN","MPIFQ0",24,0)
 ;
"RTN","MPIFQ0",25,0)
VTQ ;
"RTN","MPIFQ0",26,0)
 G:$G(DFN)']"" END
"RTN","MPIFQ0",27,0)
 I $$SEND^RGJUSITE'>0 S MPIFRTN="STOP/SUSPEND" G END
"RTN","MPIFQ0",28,0)
 ;
"RTN","MPIFQ0",29,0)
 N LOCDATA ;Data Returned from GETDATA in ICN array
"RTN","MPIFQ0",30,0)
 D GETDATA("^DPT(",DFN,"LOCDATA",".01;.02;.03;.09;.301;391;1901")
"RTN","MPIFQ0",31,0)
 S LOCDATA(2,DFN,991.01)=$P($$MPINODE^MPIFAPI(DFN),"^")
"RTN","MPIFQ0",32,0)
 ;
"RTN","MPIFQ0",33,0)
 ;If Pt already has ICN don't connect to MPI
"RTN","MPIFQ0",34,0)
 ;
"RTN","MPIFQ0",35,0)
 I $G(LOCDATA(2,DFN,991.01))>0 S MPIFRTN="ALREADY HAS ICN" G END
"RTN","MPIFQ0",36,0)
 I +$$SEND2^VAFCUTL1(DFN,"T")=1 S MPIFRTN="TEST" G END
"RTN","MPIFQ0",37,0)
JUMP ;
"RTN","MPIFQ0",38,0)
 N TIME,%
"RTN","MPIFQ0",39,0)
 D NOW^%DTC S TIME=%
"RTN","MPIFQ0",40,0)
 W !!,"Attempting to connect to the Master Patient Index in Austin..."
"RTN","MPIFQ0",41,0)
 ;
"RTN","MPIFQ0",42,0)
 ;Initialization for call to MPIVTQ
"RTN","MPIFQ0",43,0)
 ;
"RTN","MPIFQ0",44,0)
 N HL,MPIQRYNM,MPIINM,MPIOUT,MPIIN,MPIMCNT,MPICNT,MPICS,HEADER
"RTN","MPIFQ0",45,0)
 N TEST,SITE,RGDC
"RTN","MPIFQ0",46,0)
 S HL("ECH")="^~\&",HL("FS")="|",MPIQRYNM="VTQ_PID_ICN"
"RTN","MPIFQ0",47,0)
 S MPIIN="",MPIMCNT=DFN,MPICNT=1
"RTN","MPIFQ0",48,0)
 S MPICS=$E(HL("ECH"),1)
"RTN","MPIFQ0",49,0)
 ;
"RTN","MPIFQ0",50,0)
 D VTQ1^MPIFVTQ(DFN,.MPIOUT,.HL,.MPIQRYNM,"00108.1;00108.2;00110;00122")
"RTN","MPIFQ0",51,0)
 ;
"RTN","MPIFQ0",52,0)
 ;If call to VTQ1^MPIFVTQ returns '-1^error code', log error
"RTN","MPIFQ0",53,0)
 ;and exit
"RTN","MPIFQ0",54,0)
 ;
"RTN","MPIFQ0",55,0)
 I +MPIOUT(0)=-1 D  G EXIT
"RTN","MPIFQ0",56,0)
 . S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)=$G(MPIOUT(0))
"RTN","MPIFQ0",57,0)
 . S MPIFRTN="CONTINUE"
"RTN","MPIFQ0",58,0)
 ;
"RTN","MPIFQ0",59,0)
 ;Create MSH
"RTN","MPIFQ0",60,0)
 ;
"RTN","MPIFQ0",61,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1
"RTN","MPIFQ0",62,0)
 S HEADER="MSH"_HL("FS")_HL("ECH")_HL("FS")_"MPI_LOAD"_HL("FS")_SITE_HL("FS")
"RTN","MPIFQ0",63,0)
 S HEADER=HEADER_"MPI-ICN"_HL("FS")_HL("FS")_HL("FS")_HL("FS")_"VTQ"_MPICS_"Q02"_HL("FS")_MPIMCNT_"-"_MPICNT_HL("FS")
"RTN","MPIFQ0",64,0)
 S MPIOUT(1)=HEADER K MPIOUT(0)
"RTN","MPIFQ0",65,0)
 ;
"RTN","MPIFQ0",66,0)
 ;
"RTN","MPIFQ0",67,0)
 ;Attempt to connect to MPI and send message,receive message.
"RTN","MPIFQ0",68,0)
 ;Message is returned in RGDC array
"RTN","MPIFQ0",69,0)
 ;
"RTN","MPIFQ0",70,0)
 S TEST=$$EN^HLCSAC("MPIVA DIR","MPIOUT","RGDC")
"RTN","MPIFQ0",71,0)
 ;
"RTN","MPIFQ0",72,0)
 ;Can't connect to MPI, assign a local ICN, this site as CMOR, and
"RTN","MPIFQ0",73,0)
 ;continue with Registration
"RTN","MPIFQ0",74,0)
 ;
"RTN","MPIFQ0",75,0)
 I +TEST=-1 D  G EXIT
"RTN","MPIFQ0",76,0)
 . S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)=TEST
"RTN","MPIFQ0",77,0)
 . W !!,"Could not connect to MPI, assigning local ICN..."
"RTN","MPIFQ0",78,0)
 . D LOCAL(DFN)
"RTN","MPIFQ0",79,0)
 . S MPIFRTN="ASSIGNING LOCAL"
"RTN","MPIFQ0",80,0)
 ;
"RTN","MPIFQ0",81,0)
 ;
"RTN","MPIFQ0",82,0)
 ;Kill ^TMP("MPIFQ0",$J) this is the array the data is parsed into
"RTN","MPIFQ0",83,0)
 ;for display in list manager
"RTN","MPIFQ0",84,0)
 ;
"RTN","MPIFQ0",85,0)
 K ^TMP("MPIFQ0",$J)
"RTN","MPIFQ0",86,0)
 ;
"RTN","MPIFQ0",87,0)
INIPARS ;
"RTN","MPIFQ0",88,0)
 N SEG,INDEX,COUNTER,LASTSSN
"RTN","MPIFQ0",89,0)
 S INDEX=0,COUNTER=1
"RTN","MPIFQ0",90,0)
PARSE ;
"RTN","MPIFQ0",91,0)
 S SEG=$$SEG^RGRSUTIL("RDT",1,"RDT")
"RTN","MPIFQ0",92,0)
 I $G(SEG)'="" D  G PARSE
"RTN","MPIFQ0",93,0)
 . N LASTNAME,FRSTNAME,SSN,BIRTHDAY,CMOR,STRING,NAME,TF,ICN
"RTN","MPIFQ0",94,0)
 . N HEREICN,HERESSN,MIDDLE,IEN
"RTN","MPIFQ0",95,0)
 . S STRING=""
"RTN","MPIFQ0",96,0)
 . S FRSTNAME=$P(SEG,HL("FS"),7)
"RTN","MPIFQ0",97,0)
 . S LASTNAME=$P(SEG,HL("FS"),2)
"RTN","MPIFQ0",98,0)
 . S MIDDLE=$P(SEG,HL("FS"),10)
"RTN","MPIFQ0",99,0)
 . S (LASTSSN,SSN)=$P(SEG,HL("FS"),3)
"RTN","MPIFQ0",100,0)
 . S NAME=LASTNAME_","_FRSTNAME_" "_MIDDLE
"RTN","MPIFQ0",101,0)
 . S TF=$P(SEG,HL("FS"),8)
"RTN","MPIFQ0",102,0)
 . ;
"RTN","MPIFQ0",103,0)
 . ;Same patient just adding TF's
"RTN","MPIFQ0",104,0)
 . ;
"RTN","MPIFQ0",105,0)
 . I NAME_"^"_SSN=$P($G(^TMP("MPIFQ0",$J,INDEX,"DATA")),"^",0,2) D  Q
"RTN","MPIFQ0",106,0)
 . . S COUNTER=COUNTER+1
"RTN","MPIFQ0",107,0)
 . . S ^TMP("MPIFQ0",$J,INDEX,COUNTER)=TF
"RTN","MPIFQ0",108,0)
 . ;
"RTN","MPIFQ0",109,0)
 . S BIRTHDAY=$P(SEG,HL("FS"),4)
"RTN","MPIFQ0",110,0)
 . S CMOR=$P(SEG,HL("FS"),5),CCMOR=CMOR
"RTN","MPIFQ0",111,0)
 . S ICN=$P(SEG,HL("FS"),6)
"RTN","MPIFQ0",112,0)
 . I $G(LASTNAME)="" Q
"RTN","MPIFQ0",113,0)
 . I $G(BIRTHDAY)]"" D
"RTN","MPIFQ0",114,0)
 . . S BIRTHDAY=$$FMDATE^HLFNC(BIRTHDAY)
"RTN","MPIFQ0",115,0)
 . . S BIRTHDAY=$$IN2EXDT^VAFCMGU0(BIRTHDAY,0)
"RTN","MPIFQ0",116,0)
 . I $G(CMOR)]"" S IEN=$$LKUP^XUAF4(CMOR) I IEN'="" S CMOR=$P($$NS^XUAF4(IEN),"^")
"RTN","MPIFQ0",117,0)
 . ;
"RTN","MPIFQ0",118,0)
 . ;New pt. so incrementing index and resetting counter
"RTN","MPIFQ0",119,0)
 . ;
"RTN","MPIFQ0",120,0)
 . S INDEX=INDEX+1
"RTN","MPIFQ0",121,0)
 . S COUNTER=1
"RTN","MPIFQ0",122,0)
 . S HEREICN=$$HEREICN($P(ICN,"V",1))
"RTN","MPIFQ0",123,0)
 . I HEREICN D
"RTN","MPIFQ0",124,0)
 . . S STRING=$$SETSTR^VALM1("*",STRING,1,1)
"RTN","MPIFQ0",125,0)
 . . S ^TMP("MPIFQ0",$J,INDEX,"INDICATOR")="*"_"^"_HEREICN
"RTN","MPIFQ0",126,0)
 . S STRING=$$SETSTR^VALM1(INDEX,STRING,2,4)
"RTN","MPIFQ0",127,0)
 . S STRING=$$SETSTR^VALM1($E(NAME,1,23),STRING,6,23)
"RTN","MPIFQ0",128,0)
 . S STRING=$$SETSTR^VALM1(SSN,STRING,30,9)
"RTN","MPIFQ0",129,0)
 . S STRING=$$SETSTR^VALM1(BIRTHDAY,STRING,41,10)
"RTN","MPIFQ0",130,0)
 . S STRING=$$SETSTR^VALM1(CMOR,STRING,54,20)
"RTN","MPIFQ0",131,0)
 . S ^TMP("MPIFQ0",$J,INDEX,0)=STRING
"RTN","MPIFQ0",132,0)
 . S ^TMP("MPIFQ0",$J,"IDX",INDEX,INDEX)=""
"RTN","MPIFQ0",133,0)
 . S ^TMP("MPIFQ0",$J,INDEX,"DATA")=NAME_"^"_SSN_"^"_BIRTHDAY_"^"_ICN_"^"_CMOR_"^"_TF
"RTN","MPIFQ0",134,0)
 . S (VALMCNT,VALMLST)=INDEX
"RTN","MPIFQ0",135,0)
 ;
"RTN","MPIFQ0",136,0)
DECIDE ;
"RTN","MPIFQ0",137,0)
 ;I no data in ^TMP that means the patient was not found in the MPI
"RTN","MPIFQ0",138,0)
 ;with the VTQ Query. So we go to A28 to add the patient to the MPI.
"RTN","MPIFQ0",139,0)
 ;
"RTN","MPIFQ0",140,0)
 I '$D(^TMP("MPIFQ0",$J)) D  G EXIT
"RTN","MPIFQ0",141,0)
 . W !!,"Patient was not found in the MPI..."
"RTN","MPIFQ0",142,0)
 . D A28(DFN)
"RTN","MPIFQ0",143,0)
 . S MPIFRTN="DID A28"
"RTN","MPIFQ0",144,0)
 ;
"RTN","MPIFQ0",145,0)
 ;If INDEX=1 it means we got 1 match. So we check the SSN to
"RTN","MPIFQ0",146,0)
 ;see if it's definitely the same patient. If so, we automatically
"RTN","MPIFQ0",147,0)
 ;update the ICN, CMOR
"RTN","MPIFQ0",148,0)
 ;
"RTN","MPIFQ0",149,0)
 I (INDEX=1) D  G EXIT
"RTN","MPIFQ0",150,0)
 . N CMOR,ICN,DATA
"RTN","MPIFQ0",151,0)
 . S DATA=^TMP("MPIFQ0",$J,INDEX,"DATA")
"RTN","MPIFQ0",152,0)
 . S CMOR=CCMOR
"RTN","MPIFQ0",153,0)
 . S ICN=$P(DATA,"^",4)
"RTN","MPIFQ0",154,0)
 . D START^RGHLLOG(0)
"RTN","MPIFQ0",155,0)
 . I $$GETDFN^MPIF001(+ICN)>0 D EXC^RGHLLOG(227,"Patient dfn "_DFN_" returned ICN "_+ICN_" that is already in use for Patient dfn "_$$GETDFN^MPIF001(+ICN)_" use Duplicate Record Merge to Checkout pair")
"RTN","MPIFQ0",156,0)
 . Q:$$GETDFN^MPIF001(+ICN)>0
"RTN","MPIFQ0",157,0)
 . W !!,"Found Patient "_$G(LOCDATA(2,DFN,.01))_" in MPI, updating ICN and CMOR..."
"RTN","MPIFQ0",158,0)
 . D STOP^RGHLLOG(0)
"RTN","MPIFQ0",159,0)
 . D UPDATE(DFN,ICN,CMOR)
"RTN","MPIFQ0",160,0)
 . S MPIFRTN="GOT 1 HIT FROM MPI"
"RTN","MPIFQ0",161,0)
 ;
"RTN","MPIFQ0",162,0)
 D START^MPIFQ1(INDEX) G END
"RTN","MPIFQ0",163,0)
EXIT ;
"RTN","MPIFQ0",164,0)
 I $D(MPIFINT) K MPIFINT,MPIFRES
"RTN","MPIFQ0",165,0)
 K CCMOR
"RTN","MPIFQ0",166,0)
 H 3
"RTN","MPIFQ0",167,0)
 W !!
"RTN","MPIFQ0",168,0)
END ;
"RTN","MPIFQ0",169,0)
 Q
"RTN","MPIFQ0",170,0)
A28(DFN) ;
"RTN","MPIFQ0",171,0)
 S ICN=$$GETICN^MPIFRTC(DFN)
"RTN","MPIFQ0",172,0)
 I +ICN>0 W !!,"Adding Patient to Master Patient Index..." Q
"RTN","MPIFQ0",173,0)
 ;ASSIGN LOCAL ICN
"RTN","MPIFQ0",174,0)
 W !!,"Could not connect to MPI, Assigning Local ICN..."
"RTN","MPIFQ0",175,0)
 D LOCAL(DFN)
"RTN","MPIFQ0",176,0)
 Q
"RTN","MPIFQ0",177,0)
 ;
"RTN","MPIFQ0",178,0)
UPDATE(DFN,ICN,CMOR,LOCAL) ;
"RTN","MPIFQ0",179,0)
 N CHKSUM,SETICN,SETLOC,CHANGE,RGLOG
"RTN","MPIFQ0",180,0)
 D START^RGHLLOG(0)
"RTN","MPIFQ0",181,0)
 S CHKSUM=$P(ICN,"V",2)
"RTN","MPIFQ0",182,0)
 S ICN=$P(ICN,"V",1)
"RTN","MPIFQ0",183,0)
 I $$GETDFN^MPIF001(+ICN)>0 D EXC^RGHLLOG(227,"Patient dfn "_DFN_" returned ICN "_+ICN_" that is already in use for Patient dfn "_$$GETDFN^MPIF001(+ICN)_" use Duplicate Record Merge to Checkout pair")
"RTN","MPIFQ0",184,0)
 D STOP^RGHLLOG(0)
"RTN","MPIFQ0",185,0)
 Q:$D(^DPT("AICN",+ICN))
"RTN","MPIFQ0",186,0)
 S SETICN=$$SETICN^MPIF001(DFN,ICN,CHKSUM)
"RTN","MPIFQ0",187,0)
 I +SETICN'>0 D  Q
"RTN","MPIFQ0",188,0)
 . S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)="COULD NOT SET ICN IN MPIFQ0"
"RTN","MPIFQ0",189,0)
 S SETLOC=1
"RTN","MPIFQ0",190,0)
 I $G(LOCAL)="Y" S SETLOC=$$SETLOC^MPIF001(DFN)
"RTN","MPIFQ0",191,0)
 I +SETLOC'>0 D  Q
"RTN","MPIFQ0",192,0)
 . S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)="COULD NOT SETLOC IN MPIFQ0"
"RTN","MPIFQ0",193,0)
 N CMOR1 S CMOR1=$$LKUP^XUAF4(CMOR)
"RTN","MPIFQ0",194,0)
 I CMOR1'="" S CHANGE=$$CHANGE^MPIF001(DFN,CMOR1)
"RTN","MPIFQ0",195,0)
 I CMOR1="" S CHANGE=-1
"RTN","MPIFQ0",196,0)
 I +CHANGE'>0 D  Q
"RTN","MPIFQ0",197,0)
 . S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)="COULD NOT SET CMOR IN MPIFQ0"
"RTN","MPIFQ0",198,0)
 Q:$G(LOCAL)="Y"
"RTN","MPIFQ0",199,0)
 N HERE
"RTN","MPIFQ0",200,0)
 S HERE=+$P($$SITE^VASITE,"^",3)
"RTN","MPIFQ0",201,0)
 I CMOR=HERE D TFLIST^MPIFBT2(CMOR,DFN)
"RTN","MPIFQ0",202,0)
 ; ^ add CMOR to treating facility list
"RTN","MPIFQ0",203,0)
 I CMOR'=HERE D TFLIST^MPIFBT2(HERE,DFN),TFUPDT^MPIFBT2(DFN,0,0),INSERT^RGJCTS01(DFN)
"RTN","MPIFQ0",204,0)
 ; ^ not CMOR add site to Treating Facility list, add pivot file treating facility message and add subscription control message to event queue.
"RTN","MPIFQ0",205,0)
 Q
"RTN","MPIFQ0",206,0)
 ;
"RTN","MPIFQ0",207,0)
LOCAL(DFN) ;
"RTN","MPIFQ0",208,0)
 N ICN,CMOR
"RTN","MPIFQ0",209,0)
 S ICN=$$EN2^MPIFAPI()
"RTN","MPIFQ0",210,0)
 I +ICN'>0 D  Q
"RTN","MPIFQ0",211,0)
 . S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)="DID NOT GET ICN IN LOCAL(DFN)"
"RTN","MPIFQ0",212,0)
 S CMOR=$P($$SITE^VASITE(),"^",2)
"RTN","MPIFQ0",213,0)
 D UPDATE(DFN,ICN,CMOR,"Y")
"RTN","MPIFQ0",214,0)
 Q
"RTN","MPIFQ0",215,0)
 ;
"RTN","MPIFQ0",216,0)
 ;
"RTN","MPIFQ0",217,0)
HEREICN(ICN) ;
"RTN","MPIFQ0",218,0)
 N DFN
"RTN","MPIFQ0",219,0)
 I $G(ICN)="" Q 0
"RTN","MPIFQ0",220,0)
 S DFN=$$GETDFN^MPIF001(+ICN)
"RTN","MPIFQ0",221,0)
 Q:$G(DFN)'>0 0
"RTN","MPIFQ0",222,0)
 Q DFN
"RTN","MPIFQ0",223,0)
 ;
"RTN","MPIFQ0",224,0)
TEST(SSN) ;
"RTN","MPIFQ0",225,0)
 N DFN
"RTN","MPIFQ0",226,0)
 I $G(SSN)="" Q 0
"RTN","MPIFQ0",227,0)
 S DFN=$O(^DPT("SSN",SSN,0))
"RTN","MPIFQ0",228,0)
 Q:$G(DFN)']"" 0
"RTN","MPIFQ0",229,0)
 Q DFN
"RTN","MPIFQ0",230,0)
 ;
"RTN","MPIFQ0",231,0)
HERESSN(X) ;
"RTN","MPIFQ0",232,0)
 N DFN,X,Y,DIC,D
"RTN","MPIFQ0",233,0)
 I $G(X)="" Q 0
"RTN","MPIFQ0",234,0)
 S DIC="^DPT(",D="SSN",DIC(0)="X"
"RTN","MPIFQ0",235,0)
 D MIX^DIC1
"RTN","MPIFQ0",236,0)
 Q:$G(Y)=-1 0
"RTN","MPIFQ0",237,0)
 Q $P(Y,"^",1)
"RTN","MPIFQ0",238,0)
 ;
"RTN","MPIFQ0",239,0)
GETDATA(DIC,DA,ARRAY,DR,EI) ;
"RTN","MPIFQ0",240,0)
 ;This function returns the values stored in the fields via FM call DIQ1
"RTN","MPIFQ0",241,0)
 ;DIC is the file reference
"RTN","MPIFQ0",242,0)
 ;DA is the file entry IEN
"RTN","MPIFQ0",243,0)
 ;ARRAY is the storage array for the values to be stored in
"RTN","MPIFQ0",244,0)
 ;DR are the fields requested
"RTN","MPIFQ0",245,0)
 ;EI is external/internal values of the fields or dont return null values
"RTN","MPIFQ0",246,0)
 N DIQ
"RTN","MPIFQ0",247,0)
 S DIQ=ARRAY
"RTN","MPIFQ0",248,0)
 I $G(EI)]"" S DIQ(0)=EI
"RTN","MPIFQ0",249,0)
 D EN^DIQ1
"RTN","MPIFQ0",250,0)
 Q
"RTN","MPIFQ1")
0^54^B50548350
"RTN","MPIFQ1",1,0)
MPIFQ1 ;ALB/RJS-CIRN QUERY HANDLER ;JUN 30, 1997
"RTN","MPIFQ1",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFQ1",3,0)
INIT ;Entry point for List Manager Template - MPIF REAL-TIME QUERY
"RTN","MPIFQ1",4,0)
 ; It is started from outside of the template.
"RTN","MPIFQ1",5,0)
 Q
"RTN","MPIFQ1",6,0)
HDR ;Header code for List Manager Template - MPIF REAL-TIME QUERY
"RTN","MPIFQ1",7,0)
 N SSN,DOB,MPIFQ1,NAME1
"RTN","MPIFQ1",8,0)
 D GETDATA^MPIFQ0("^DPT(",DFN,"MPIFQ1",".01;.03;.09","EI")
"RTN","MPIFQ1",9,0)
 S NAME1=$G(MPIFQ1(2,DFN,.01,"E"))
"RTN","MPIFQ1",10,0)
 S SSN=$G(MPIFQ1(2,DFN,.09,"E"))
"RTN","MPIFQ1",11,0)
 S DOB=$G(MPIFQ1(2,DFN,.03,"I"))
"RTN","MPIFQ1",12,0)
 I DOB]"" S DOB=$$IN2EXDT^VAFCMGU0(DOB,0)
"RTN","MPIFQ1",13,0)
 S VALMHDR(1)=" Possible MPI Matches for Patient: "_IOINHI_NAME1_IOINORM
"RTN","MPIFQ1",14,0)
 S VALMHDR(2)="                              SSN: "_IOINHI_SSN_IOINORM
"RTN","MPIFQ1",15,0)
 S VALMHDR(3)="                              DOB: "_IOINHI_DOB_IOINORM
"RTN","MPIFQ1",16,0)
 Q
"RTN","MPIFQ1",17,0)
START(INDEX) ;
"RTN","MPIFQ1",18,0)
 ;Starting entry point for envoking the List Manager Template MPIF Real-time query
"RTN","MPIFQ1",19,0)
 S VALMCNT=INDEX
"RTN","MPIFQ1",20,0)
 D EN^VALM("MPIF REAL-TIME QUERY")
"RTN","MPIFQ1",21,0)
 Q
"RTN","MPIFQ1",22,0)
SELECT ;
"RTN","MPIFQ1",23,0)
 N VALMY
"RTN","MPIFQ1",24,0)
 D EN^VALM2(XQORNOD(0),"OS")
"RTN","MPIFQ1",25,0)
 I '$D(VALMY) Q
"RTN","MPIFQ1",26,0)
 N DATA,INDEX,ICN,CHKSUM,NODE2,HERESSN
"RTN","MPIFQ1",27,0)
 S INDEX=$O(VALMY(0))
"RTN","MPIFQ1",28,0)
 S DATA=^TMP("MPIFQ0",$J,INDEX,"DATA")
"RTN","MPIFQ1",29,0)
 S NODE2=$G(^TMP("MPIFQ0",$J,INDEX,"INDICATOR"))
"RTN","MPIFQ1",30,0)
 S DATA(.01)=$P(DATA,"^",1) ;NAME
"RTN","MPIFQ1",31,0)
 S DATA(.03)=$P(DATA,"^",3) ;DOB
"RTN","MPIFQ1",32,0)
 S DATA(.09)=$P(DATA,"^",2) ;SSN
"RTN","MPIFQ1",33,0)
 S ICN=$P(DATA,"^",4)
"RTN","MPIFQ1",34,0)
 S CHKSUM=$P(ICN,"V",2)
"RTN","MPIFQ1",35,0)
 S ICN=$P(ICN,"V",1) ;ICN
"RTN","MPIFQ1",36,0)
 S DATA(991.01)=ICN
"RTN","MPIFQ1",37,0)
 S DATA(991.02)=CHKSUM ;CHKSUM
"RTN","MPIFQ1",38,0)
 S DATA(991.03)=$P(DATA,"^",5) ;CMOR
"RTN","MPIFQ1",39,0)
 ;
"RTN","MPIFQ1",40,0)
 ;If NODE2["*" it means we got a match on ICN for a patient in our
"RTN","MPIFQ1",41,0)
 ;list, with a patient in our local database. So we're pretty confident
"RTN","MPIFQ1",42,0)
 ;this is the same patient. But we do extra checking on LASTNAME
"RTN","MPIFQ1",43,0)
 ;and SSN to be sure. If all these things are not equal, we
"RTN","MPIFQ1",44,0)
 ;notify the user of an error condition, and quit
"RTN","MPIFQ1",45,0)
 ;
"RTN","MPIFQ1",46,0)
 ;If we find a match on SSN (but not ICN), it means we already have
"RTN","MPIFQ1",47,0)
 ;a patient with that SSN in the database, so we have 2 patients
"RTN","MPIFQ1",48,0)
 ;with the same SSN, but not the same ICN. This also signifies
"RTN","MPIFQ1",49,0)
 ;a special condition, so we check to see if the local record has
"RTN","MPIFQ1",50,0)
 ;an ICN.
"RTN","MPIFQ1",51,0)
 ;
"RTN","MPIFQ1",52,0)
 S HERESSN=$$HERESSN(DATA(.09))
"RTN","MPIFQ1",53,0)
 ;
"RTN","MPIFQ1",54,0)
 I NODE2["*"!(HERESSN) D  Q
"RTN","MPIFQ1",55,0)
 . N MPINAME,LOCNAME,MPISSN,LOCSSN,LOCDATA2,LOCICN,DELETE
"RTN","MPIFQ1",56,0)
 . ;
"RTN","MPIFQ1",57,0)
 . ;Delete the stub we created because they've picked a patient
"RTN","MPIFQ1",58,0)
 . ;off the list whose ICN matches a local one, or whose SSN 
"RTN","MPIFQ1",59,0)
 . ;matches a local one.
"RTN","MPIFQ1",60,0)
 . ;
"RTN","MPIFQ1",61,0)
 . I $G(DGNEW) D DELETE(DFN)
"RTN","MPIFQ1",62,0)
 . ;
"RTN","MPIFQ1",63,0)
 . S DFN=$S(NODE2["*":$P(NODE2,"^",2),1:HERESSN)
"RTN","MPIFQ1",64,0)
 . D GETDATA^MPIFQ0("^DPT(",DFN,"LOCDATA2",".01;.09")
"RTN","MPIFQ1",65,0)
 . S LOCDATA2(2,DFN,991.01)=$P($$MPINODE^MPIFAPI(DFN),"^")
"RTN","MPIFQ1",66,0)
 . S LOCNAME=LOCDATA2(2,DFN,.01) D NAME^VAFCPID2(DFN,.LOCNAME) S LOCNAME=$P(LOCNAME,",") ;local last name in same processed format as MPI name was sent
"RTN","MPIFQ1",67,0)
 . S LOCSSN=LOCDATA2(2,DFN,.09)
"RTN","MPIFQ1",68,0)
 . S MPINAME=$P(DATA(.01),",",1)
"RTN","MPIFQ1",69,0)
 . S MPISSN=DATA(.09)
"RTN","MPIFQ1",70,0)
 . S LOCICN=LOCDATA2(2,DFN,991.01)
"RTN","MPIFQ1",71,0)
 . ;
"RTN","MPIFQ1",72,0)
 . ;If NODE2["*" we have a match on ICN, if lastnames match and
"RTN","MPIFQ1",73,0)
 . ;ssn's match they've picked a patient off the list who is already
"RTN","MPIFQ1",74,0)
 . ;in the database, so we just CONTINUE with that patient.
"RTN","MPIFQ1",75,0)
 . ;If not, we print out an error condition and return to the
"RTN","MPIFQ1",76,0)
 . ;Select Patient Prompt in DGREG
"RTN","MPIFQ1",77,0)
 . ;
"RTN","MPIFQ1",78,0)
 . I NODE2["*" D  Q
"RTN","MPIFQ1",79,0)
 . . I (LOCNAME'=MPINAME)!(LOCSSN'=MPISSN) D  Q
"RTN","MPIFQ1",80,0)
 . . . D CLEAR^VALM1
"RTN","MPIFQ1",81,0)
 . . . D MSG1
"RTN","MPIFQ1",82,0)
 . . . D MSG(LOCICN,LOCSSN,LOCNAME,ICN,MPISSN,MPINAME)
"RTN","MPIFQ1",83,0)
 . . . D PROMPT
"RTN","MPIFQ1",84,0)
 . . . S MPIFRTN="GO PROMPT"
"RTN","MPIFQ1",85,0)
 . . S MPIFRTN="CONTINUE"
"RTN","MPIFQ1",86,0)
 . ;
"RTN","MPIFQ1",87,0)
 . ;If we've reached here it means we've selected a patient whose
"RTN","MPIFQ1",88,0)
 . ;SSN matches a record in the database. If the lastnames don't
"RTN","MPIFQ1",89,0)
 . ;match, or the local patient has an ICN we print out an error
"RTN","MPIFQ1",90,0)
 . ;condition and return to the Select Patient prompt in DGREG
"RTN","MPIFQ1",91,0)
 . ;
"RTN","MPIFQ1",92,0)
 . I (LOCNAME'=MPINAME)!(LOCICN]"") D  Q
"RTN","MPIFQ1",93,0)
 . . D CLEAR^VALM1
"RTN","MPIFQ1",94,0)
 . . D MSG2
"RTN","MPIFQ1",95,0)
 . . D MSG(LOCICN,LOCSSN,LOCNAME,ICN,MPISSN,MPINAME)
"RTN","MPIFQ1",96,0)
 . . D PROMPT
"RTN","MPIFQ1",97,0)
 . . S MPIFRTN="GO PROMPT"
"RTN","MPIFQ1",98,0)
 . ;
"RTN","MPIFQ1",99,0)
 . ;If we've reached here, we've got a match on SSN and Lastname
"RTN","MPIFQ1",100,0)
 . ;but ICN is undefined, so we update CMOR,ICN,CHECKSUM and 
"RTN","MPIFQ1",101,0)
 . ;CONTINUE with that record.
"RTN","MPIFQ1",102,0)
 . ;
"RTN","MPIFQ1",103,0)
 . K DATA(.09),DATA(.01),DATA(.03)
"RTN","MPIFQ1",104,0)
 . D EDIT^MPIFQED(DFN,"DATA")
"RTN","MPIFQ1",105,0)
 . S MPIFRTN="CONTINUE"
"RTN","MPIFQ1",106,0)
 ;
"RTN","MPIFQ1",107,0)
 ;If the Patient they were Registering is a new patient we can
"RTN","MPIFQ1",108,0)
 ;just overload the 'stub' record with data coming in from MPI
"RTN","MPIFQ1",109,0)
 ;NAME,DOB,SSN,CMOR,ICN,CHECKSUM
"RTN","MPIFQ1",110,0)
 ;
"RTN","MPIFQ1",111,0)
 I $G(DGNEW) D  Q
"RTN","MPIFQ1",112,0)
 . D EDIT^MPIFQED(DFN,"DATA")
"RTN","MPIFQ1",113,0)
 . S MPIFRTN="CONTINUE"
"RTN","MPIFQ1",114,0)
 ;
"RTN","MPIFQ1",115,0)
 ;
"RTN","MPIFQ1",116,0)
 ;If its an old record they started with, but selected a new
"RTN","MPIFQ1",117,0)
 ;Patient from the list, we don't get enough data back from the
"RTN","MPIFQ1",118,0)
 ;MPI to create them, so we need to prompt for more data.
"RTN","MPIFQ1",119,0)
 ;
"RTN","MPIFQ1",120,0)
 D CLEAR^VALM1
"RTN","MPIFQ1",121,0)
 D MSG3
"RTN","MPIFQ1",122,0)
 S DFN=$$ADD^VAFCPTAD("DATA")
"RTN","MPIFQ1",123,0)
 I DFN'>0 S MPIFRTN="GO PROMPT" Q
"RTN","MPIFQ1",124,0)
 S MPIFRTN="CONTINUE"
"RTN","MPIFQ1",125,0)
 Q
"RTN","MPIFQ1",126,0)
 ;
"RTN","MPIFQ1",127,0)
 ;
"RTN","MPIFQ1",128,0)
ADD ;
"RTN","MPIFQ1",129,0)
 ;Add List Manager Action (MPIF REAL-TIME QUERY (ADD PATIENT)) to add
"RTN","MPIFQ1",130,0)
 ; patient to the MPI Austin.
"RTN","MPIFQ1",131,0)
 D A28^MPIFQ0(DFN)
"RTN","MPIFQ1",132,0)
 S MPIFRTN="CONTINUE"
"RTN","MPIFQ1",133,0)
 Q
"RTN","MPIFQ1",134,0)
 ;
"RTN","MPIFQ1",135,0)
HELP ; Help List Manager Action (MPIF REAL-TIME QUERY (HELP))
"RTN","MPIFQ1",136,0)
 D CLEAR^VALM1
"RTN","MPIFQ1",137,0)
 D MSG4
"RTN","MPIFQ1",138,0)
 D PROMPT
"RTN","MPIFQ1",139,0)
 S VALMBCK="R"
"RTN","MPIFQ1",140,0)
 Q
"RTN","MPIFQ1",141,0)
 ;
"RTN","MPIFQ1",142,0)
MSG(LOCICN,LOCSSN,LOCNAME,ICN,MPISSN,MPINAME) ;
"RTN","MPIFQ1",143,0)
 ;
"RTN","MPIFQ1",144,0)
 W !!,"Local ICN = "_LOCICN,?25,"MPI ICN = "_ICN
"RTN","MPIFQ1",145,0)
 W !,"Local SSN = "_LOCSSN,?25,"MPI SSN = "_MPISSN
"RTN","MPIFQ1",146,0)
 W !,"Local NAME = "_LOCNAME,?25,"MPI NAME = "_MPINAME
"RTN","MPIFQ1",147,0)
 Q
"RTN","MPIFQ1",148,0)
 ;
"RTN","MPIFQ1",149,0)
MSG1 ;
"RTN","MPIFQ1",150,0)
 W !!,"You are attempting to add a patient whose Name or SSN"
"RTN","MPIFQ1",151,0)
 W !,"Does not match the data stored on the Master Patient Index"
"RTN","MPIFQ1",152,0)
 W !,"See your Supervisor for Assistance"
"RTN","MPIFQ1",153,0)
 Q
"RTN","MPIFQ1",154,0)
 ;
"RTN","MPIFQ1",155,0)
MSG2 ;
"RTN","MPIFQ1",156,0)
 W !!,"You are attempting to add a patient who has the Same SSN"
"RTN","MPIFQ1",157,0)
 W !,"as another patient on your system, but their ICN's do not"
"RTN","MPIFQ1",158,0)
 W !,"match. See your Supervisor for assistance."
"RTN","MPIFQ1",159,0)
 Q
"RTN","MPIFQ1",160,0)
 ;
"RTN","MPIFQ1",161,0)
MSG3 ;
"RTN","MPIFQ1",162,0)
 W !!,"You are attempting to add a new patient to your database,"
"RTN","MPIFQ1",163,0)
 W !,"different from the patient you originally selected. You need"
"RTN","MPIFQ1",164,0)
 W !,"to type in the following data: SEX, TYPE, VETERAN(Y/N), and"
"RTN","MPIFQ1",165,0)
 W !,"SERVICE CONNECTED?"
"RTN","MPIFQ1",166,0)
 Q
"RTN","MPIFQ1",167,0)
 ;
"RTN","MPIFQ1",168,0)
MSG4 ;
"RTN","MPIFQ1",169,0)
 W !!,"When you have reached MPI QUERY RESULTS screen, the software has"
"RTN","MPIFQ1",170,0)
 W !,"queried the Master Patient Index, for possible matches to the patient"
"RTN","MPIFQ1",171,0)
 W !,"you are adding, or selected (pre-existing record)."
"RTN","MPIFQ1",172,0)
 W !!,"The MPI has returned a list of possible matches for that patient"
"RTN","MPIFQ1",173,0)
 W !,"An '*' indicates the Integration Control Number of a patient"
"RTN","MPIFQ1",174,0)
 W !,"on the list, matches one in your database."
"RTN","MPIFQ1",175,0)
 W !!,"You may continue to work with the patient you originally added"
"RTN","MPIFQ1",176,0)
 W !,"or selected. Or, you may select a different patient off of the list."
"RTN","MPIFQ1",177,0)
 W !!,"To continue working with the original patient, choose ADD."
"RTN","MPIFQ1",178,0)
 W !,"To select a patient from the list, choose SP."
"RTN","MPIFQ1",179,0)
 Q
"RTN","MPIFQ1",180,0)
 ;
"RTN","MPIFQ1",181,0)
 ;
"RTN","MPIFQ1",182,0)
PROMPT ;
"RTN","MPIFQ1",183,0)
 W !!
"RTN","MPIFQ1",184,0)
 S DIR("A")="Hit the Enter key, to Continue "
"RTN","MPIFQ1",185,0)
 S DIR(0)="EA"
"RTN","MPIFQ1",186,0)
 D ^DIR
"RTN","MPIFQ1",187,0)
 K DIR(0),DIR("A")
"RTN","MPIFQ1",188,0)
 Q
"RTN","MPIFQ1",189,0)
HERESSN(SSN) ;
"RTN","MPIFQ1",190,0)
 N DFN
"RTN","MPIFQ1",191,0)
 I $G(SSN)="" Q 0
"RTN","MPIFQ1",192,0)
 S DFN=$O(^DPT("SSN",SSN,0))
"RTN","MPIFQ1",193,0)
 Q:$G(DFN)']"" 0
"RTN","MPIFQ1",194,0)
 Q DFN
"RTN","MPIFQ1",195,0)
 ;
"RTN","MPIFQ1",196,0)
DELETE(DFN) ;
"RTN","MPIFQ1",197,0)
 N DIK,DA
"RTN","MPIFQ1",198,0)
 S DA=DFN
"RTN","MPIFQ1",199,0)
 S DIK="^DPT("
"RTN","MPIFQ1",200,0)
 D ^DIK
"RTN","MPIFQ1",201,0)
 Q
"RTN","MPIFQ1",202,0)
CHECK(DFN) ;
"RTN","MPIFQ1",203,0)
 N CHECK
"RTN","MPIFQ1",204,0)
 D GETDATA^MPIFQ0("^DPT(",DFN,"CHECK",".01;.02;.03;.09;.301;391;1901")
"RTN","MPIFQ1",205,0)
 I $G(CHECK(2,DFN,.01))']"" Q 0
"RTN","MPIFQ1",206,0)
 I $G(CHECK(2,DFN,.02))']"" Q 0
"RTN","MPIFQ1",207,0)
 I $G(CHECK(2,DFN,.03))']"" Q 0
"RTN","MPIFQ1",208,0)
 I $G(CHECK(2,DFN,.09))']"" Q 0
"RTN","MPIFQ1",209,0)
 I $G(CHECK(2,DFN,.301))']"" Q 0
"RTN","MPIFQ1",210,0)
 I $G(CHECK(2,DFN,391))']"" Q 0
"RTN","MPIFQ1",211,0)
 I $G(CHECK(2,DFN,1901))']"" Q 0
"RTN","MPIFQ1",212,0)
 Q 1
"RTN","MPIFQ1",213,0)
 ;
"RTN","MPIFQ1",214,0)
EXIT ;Exit for List Manager Template MPIF REAL-TIME QUERY
"RTN","MPIFQ1",215,0)
 K VALMBCK,VALMCNT,VALMHDR
"RTN","MPIFQ1",216,0)
 Q
"RTN","MPIFQED")
0^56^B148390
"RTN","MPIFQED",1,0)
MPIFQED ;ALB/RJS-ADD PATIENT RETURNED IN QUERY ;AUG 22, 1997
"RTN","MPIFQED",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFQED",3,0)
EDIT(DFN,ARRAY) ;-- Edits existing patient
"RTN","MPIFQED",4,0)
 ;--Data needs to be loaded in a certain sequence
"RTN","MPIFQED",5,0)
 N ERR,FLD
"RTN","MPIFQED",6,0)
 S FLD=".01;.03;.09"
"RTN","MPIFQED",7,0)
 D EDIT^VAFCPTED(DFN,.ARRAY,FLD)
"RTN","MPIFQED",8,0)
 S ERR=$$UPDATE^MPIFAPI(DFN,ARRAY)
"RTN","MPIFQED",9,0)
 Q
"RTN","MPIFQUE3")
0^64^B46973942
"RTN","MPIFQUE3",1,0)
MPIFQUE3 ;SF/TNV-Generate Batch message for comparison of CMOR score ;FEB 27, 1998
"RTN","MPIFQUE3",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFQUE3",3,0)
 ;
"RTN","MPIFQUE3",4,0)
COMP ; Create a batch CMOR request for comparing the CMOR score with the owner
"RTN","MPIFQUE3",5,0)
 ; of this patient. This will be for ALL CMOR SITES. (NOT ONE SITE)
"RTN","MPIFQUE3",6,0)
 ;
"RTN","MPIFQUE3",7,0)
 N DIRUT
"RTN","MPIFQUE3",8,0)
 S DIR("A")="This process will take a while to complete. Are you sure? "
"RTN","MPIFQUE3",9,0)
 S DIR("B")="NO",DIR(0)="YAO" D ^DIR K DIR Q:$D(DIRUT)
"RTN","MPIFQUE3",10,0)
 I Y=0 K DIR Q                           ; no go
"RTN","MPIFQUE3",11,0)
 I $P($G(^RGSITE(991.8,1,"COMP")),"^")'="" S $P(^("COMP"),"^")=""
"RTN","MPIFQUE3",12,0)
TASK ; Task this job to run
"RTN","MPIFQUE3",13,0)
 S ZTIO="",ZTRTN="EN^MPIFQUE3",ZTSAVE("DUZ")=""
"RTN","MPIFQUE3",14,0)
 S ZTDESC="GENERATE CMOR COMPARISON PROCESS"
"RTN","MPIFQUE3",15,0)
 D ^%ZTLOAD
"RTN","MPIFQUE3",16,0)
 I $D(ZTSK) W "   Task#, ",ZTSK," queued" S $P(^RGSITE(991.8,1,"COMP"),U,5)=ZTSK
"RTN","MPIFQUE3",17,0)
 ;
"RTN","MPIFQUE3",18,0)
KILL ; Clean up the partition
"RTN","MPIFQUE3",19,0)
 K DIR,ZTSK,Y,ZTIO,ZTRTN,ZTDESC,ZTSAVE
"RTN","MPIFQUE3",20,0)
 Q
"RTN","MPIFQUE3",21,0)
 ;
"RTN","MPIFQUE3",22,0)
EN ; Entry point for CMOR Batch comparison.  This should only be run after
"RTN","MPIFQUE3",23,0)
 ; the initialization to the MPI has been completed.
"RTN","MPIFQUE3",24,0)
 N U,SITE,NODE,MPI,MTIEN,MPILOOP,DTNOW,MSGCOUNT,LINCOUNT,RGLOG
"RTN","MPIFQUE3",25,0)
 S U="^",(MPILOOP,SITE)="",MPISTOP=0
"RTN","MPIFQUE3",26,0)
 D START^RGHLLOG()
"RTN","MPIFQUE3",27,0)
 N X,Y,DIC
"RTN","MPIFQUE3",28,0)
 S DIC="^VA(200,",DIC(0)="MZO",X="`"_+DUZ
"RTN","MPIFQUE3",29,0)
 D ^DIC
"RTN","MPIFQUE3",30,0)
 I $G(Y)<1 S MPINAME=""
"RTN","MPIFQUE3",31,0)
 I $G(Y)>0 S MPINAME=$G(Y(0,0))
"RTN","MPIFQUE3",32,0)
 ; If the job has manually stopped status it should restart at where
"RTN","MPIFQUE3",33,0)
 ; it left off
"RTN","MPIFQUE3",34,0)
 I $P($G(^RGSITE(991.8,1,"COMP")),U,4)="MS" D
"RTN","MPIFQUE3",35,0)
 . I $P($G(^RGSITE(991.8,1,"COMP")),U)="" S $P(^("COMP"),U,4)="C" Q  ; Not logical restart from the top
"RTN","MPIFQUE3",36,0)
 . S NODE=$$MPINODE^MPIFAPI(+$P(^RGSITE(991.8,1,"COMP"),U))
"RTN","MPIFQUE3",37,0)
 . S CMOR=$P(NODE,U,3)   ; CMOR of the last patient
"RTN","MPIFQUE3",38,0)
 . I +CMOR>0 S SITE=$O(^DPT("ACMOR",CMOR),-1)                        ; Back up one level
"RTN","MPIFQUE3",39,0)
 . I +CMOR>0 S MPILOOP=+$P(^RGSITE(991.8,1,"COMP"),U)                ; Marked the last patient
"RTN","MPIFQUE3",40,0)
 . I +CMOR<1 S (SITE,MPILOOP)=0
"RTN","MPIFQUE3",41,0)
 . K CMOR
"RTN","MPIFQUE3",42,0)
 ; If the job has completed status it should restart at the top
"RTN","MPIFQUE3",43,0)
 I $P($G(^RGSITE(991.8,1,"COMP")),U,4)="C" S $P(^("COMP"),U)=""
"RTN","MPIFQUE3",44,0)
 ; Start the job
"RTN","MPIFQUE3",45,0)
 S ^XTMP("RGVCCMR","@@@@","DFNCOUNT")=0          ; set for counter in CALC^RGVCCMR2
"RTN","MPIFQUE3",46,0)
 D NOW^%DTC S Y=X X ^DD("DD") S DTNOW=Y          ; get current date and time
"RTN","MPIFQUE3",47,0)
 S $P(^RGSITE(991.8,1,"COMP"),U,2)=%             ; timestamp the job
"RTN","MPIFQUE3",48,0)
 S $P(^RGSITE(991.8,1,"COMP"),U,4)="R"           ; mark the status as running
"RTN","MPIFQUE3",49,0)
 S $P(^RGSITE(991.8,1,"COMP"),U,6)="N"           ; reset the flag
"RTN","MPIFQUE3",50,0)
 N RGDFN,CALDT,NODE
"RTN","MPIFQUE3",51,0)
 F  S SITE=$O(^DPT("ACMOR",SITE)) Q:SITE=""  D   ; Get the site CMOR on file
"RTN","MPIFQUE3",52,0)
 . Q:MPISTOP=1                                   ; Trouble occured, user wanted to stop
"RTN","MPIFQUE3",53,0)
 . I +SITE=+$$SITE^VASITE() Q                    ; Don't process your own
"RTN","MPIFQUE3",54,0)
 . D HDR                                         ; Create batch for each site
"RTN","MPIFQUE3",55,0)
 . F  S MPILOOP=$O(^DPT("ACMOR",+SITE,MPILOOP)) Q:MPILOOP=""  D  Q:MPISTOP=1  ; Start with DFN and go
"RTN","MPIFQUE3",56,0)
 . . S DFN=+MPILOOP Q:DFN<0
"RTN","MPIFQUE3",57,0)
 . . S NODE=$$MPINODE^MPIFAPI(DFN) Q:+NODE<1    ; Was not CIRN'ed
"RTN","MPIFQUE3",58,0)
 . . I $G(^DPT(DFN,.35)),$P($G(^DPT(DFN,.35)),"^")'="" Q  ; Death patient
"RTN","MPIFQUE3",59,0)
 . . I $P(NODE,"^")="" D LOG Q     ; Log exception if no ICN
"RTN","MPIFQUE3",60,0)
 . . I $P(NODE,"^",6)="" Q   ;No score
"RTN","MPIFQUE3",61,0)
 . . S CALDT=$P(NODE,"^",7)   ; current calc date
"RTN","MPIFQUE3",62,0)
 . . S X="T-90" D ^%DT
"RTN","MPIFQUE3",63,0)
 . . I CALDT<Y S RGDFN=DFN D CALC^RGVCCMR2   ; score is older than 90 days
"RTN","MPIFQUE3",64,0)
 . . S $P(^RGSITE(991.8,1,"COMP"),U)=+DFN        ; mark that patient as done
"RTN","MPIFQUE3",65,0)
 . . D INDV
"RTN","MPIFQUE3",66,0)
 . . I MSGCOUNT>99 D SEND D HDR                   ; send out if over 100 messages
"RTN","MPIFQUE3",67,0)
 . . I $P($G(^RGSITE(991.8,1,"COMP")),U,6)="Y" S MPISTOP=1 D SEND Q
"RTN","MPIFQUE3",68,0)
 . D SEND
"RTN","MPIFQUE3",69,0)
 ;
"RTN","MPIFQUE3",70,0)
 ; if user asked to stop set flag = yes and status to MS
"RTN","MPIFQUE3",71,0)
 ; if naturally stop set status to SN
"RTN","MPIFQUE3",72,0)
 I MPISTOP=1 S $P(^RGSITE(991.8,1,"COMP"),U,6)="Y",$P(^("COMP"),U,4)="MS"
"RTN","MPIFQUE3",73,0)
 E  S $P(^RGSITE(991.8,1,"COMP"),U,4)="C"
"RTN","MPIFQUE3",74,0)
 D NOW^%DTC S $P(^RGSITE(991.8,1,"COMP"),U,3)=%  ; timestamp when it stop
"RTN","MPIFQUE3",75,0)
 D CLEAN
"RTN","MPIFQUE3",76,0)
 D STOP^RGHLLOG()
"RTN","MPIFQUE3",77,0)
 Q
"RTN","MPIFQUE3",78,0)
 ;
"RTN","MPIFQUE3",79,0)
HDR ; Create HL7 batch HEADER message to each of the CMOR site
"RTN","MPIFQUE3",80,0)
 K ^TMP("HLS",$J)
"RTN","MPIFQUE3",81,0)
 D INIT^HLFNC2("MPIF CMOR COMPARISON SERVER",.HL)
"RTN","MPIFQUE3",82,0)
 I $D(HL)=1 D EXC^RGHLLOG(220,"Error Returned in INIT^HLFNC2") K HL S MPISTOP=1 Q
"RTN","MPIFQUE3",83,0)
 D CREATE^HLTF(.HLMID,.MTIEN,.HLDT,.HLDT1)
"RTN","MPIFQUE3",84,0)
 I $D(MTIEN)="" D EXC^RGHLLOG(220,"Error Returned in CREATE^HLTF") K HLMID,HLDT,HLDT1 S MPISTOP=1 Q
"RTN","MPIFQUE3",85,0)
 S LINCOUNT=0                            ; Set line counter
"RTN","MPIFQUE3",86,0)
 S MSGCOUNT=1                            ; Set counter for 100 message per batch
"RTN","MPIFQUE3",87,0)
 Q
"RTN","MPIFQUE3",88,0)
 ;
"RTN","MPIFQUE3",89,0)
INDV ; Create individual message of the HL7 ADT-A31 batch message
"RTN","MPIFQUE3",90,0)
 ; EVN segment = event, date, CMOR score, requestor name
"RTN","MPIFQUE3",91,0)
 ; PID segment = standard call
"RTN","MPIFQUE3",92,0)
 ; NTE segment = Reason CMOR COMPARISON, site requested
"RTN","MPIFQUE3",93,0)
 D INIT^HLFNC2("MPIF CMOR COMPARISON SERVER",.HL)  ; Because HL7 did not know
"RTN","MPIFQUE3",94,0)
 S HL("SAF")=$P($$SITE^VASITE,"^",3)       ; the facility # when dynamic
"RTN","MPIFQUE3",95,0)
 ;                                              address of batch. This needs
"RTN","MPIFQUE3",96,0)
 ;                                              to be set. Until HL7 fixs it
"RTN","MPIFQUE3",97,0)
 S MPIID=HLMID_"-"_MSGCOUNT
"RTN","MPIFQUE3",98,0)
 D MSH^HLFNC2(.HL,MPIID,.MPI)
"RTN","MPIFQUE3",99,0)
 N NODE
"RTN","MPIFQUE3",100,0)
 S LINCOUNT=LINCOUNT+1
"RTN","MPIFQUE3",101,0)
 S ^TMP("HLS",$J,LINCOUNT)=MPI
"RTN","MPIFQUE3",102,0)
 S LINCOUNT=LINCOUNT+1
"RTN","MPIFQUE3",103,0)
 S NODE=$$MPINODE^MPIFAPI(DFN)
"RTN","MPIFQUE3",104,0)
 Q:+NODE<1
"RTN","MPIFQUE3",105,0)
 S ^TMP("HLS",$J,LINCOUNT)="EVN"_HL("FS")_"A31"_HL("FS")_$P(NODE,"^",7)_HL("FS")_$P(NODE,U,6)_HL("FS")_MPINAME
"RTN","MPIFQUE3",106,0)
 S LINCOUNT=LINCOUNT+1
"RTN","MPIFQUE3",107,0)
 S ^TMP("HLS",$J,LINCOUNT)=$$EN^VAFCPID(DFN,"2,3,5")
"RTN","MPIFQUE3",108,0)
 S LINCOUNT=LINCOUNT+1
"RTN","MPIFQUE3",109,0)
 ;this is the request to the site for a comparison
"RTN","MPIFQUE3",110,0)
 S ^TMP("HLS",$J,LINCOUNT)="NTE"_HL("FS")_"COMPARISON"_HL("FS")_$P($$SITE^VASITE(),U,3)
"RTN","MPIFQUE3",111,0)
 S MSGCOUNT=MSGCOUNT+1
"RTN","MPIFQUE3",112,0)
 Q
"RTN","MPIFQUE3",113,0)
 ;
"RTN","MPIFQUE3",114,0)
SEND ; Send out the batch message
"RTN","MPIFQUE3",115,0)
 N RESLT
"RTN","MPIFQUE3",116,0)
 D GENERATE^HLMA("MPIF CMOR COMPARISON SERVER","GB",1,.RESLT,MTIEN)
"RTN","MPIFQUE3",117,0)
 I $P(RESLT,U,2)'="" D EXC^RGHLLOG(220,"Error Returned in GENERATE^HLMA "_$P(RESLT,U,2)) S MPISTOP=1
"RTN","MPIFQUE3",118,0)
 Q
"RTN","MPIFQUE3",119,0)
 ;
"RTN","MPIFQUE3",120,0)
LOGIC ; This is where the dynamic address located. Routing logic is being used
"RTN","MPIFQUE3",121,0)
 ; instead of GET^HLSUB.
"RTN","MPIFQUE3",122,0)
 ; For now, I have to hard set the receiving logical link, intercept
"RTN","MPIFQUE3",123,0)
 ; the message before it send out, figure out the receiving Logical
"RTN","MPIFQUE3",124,0)
 ; link from the MSH segment and let the Routing logic create the
"RTN","MPIFQUE3",125,0)
 ; HLL("LINKS") array.
"RTN","MPIFQUE3",126,0)
 K RGL
"RTN","MPIFQUE3",127,0)
 D LINK^HLUTIL3(SITE,.RGL)               ; get the logical link to that institution
"RTN","MPIFQUE3",128,0)
 S INSTITU=$O(RGL(0))
"RTN","MPIFQUE3",129,0)
 I INSTITU<1 Q                           ; if there is no logical link
"RTN","MPIFQUE3",130,0)
 S HLL("LINKS",1)="MPIF CMOR COMPARISON CLIENT"_HL("FS")_RGL(INSTITU)
"RTN","MPIFQUE3",131,0)
 K INSTITU,RGL
"RTN","MPIFQUE3",132,0)
 Q
"RTN","MPIFQUE3",133,0)
 ;
"RTN","MPIFQUE3",134,0)
CLEAN ; Clean up the partition
"RTN","MPIFQUE3",135,0)
 K %,X,Y,MPISTOP,MPINAME,DFN,MPIID
"RTN","MPIFQUE3",136,0)
 K ^XTMP("HLS",$J)
"RTN","MPIFQUE3",137,0)
 Q
"RTN","MPIFQUE3",138,0)
 ;
"RTN","MPIFQUE3",139,0)
LOG ; Log exception for non ICN but CMOR belong to someone else
"RTN","MPIFQUE3",140,0)
 N NAME,SSN,RGLOG,TEXT
"RTN","MPIFQUE3",141,0)
 S XMCHAN=1,NAME=$P(^DPT(DFN,0),"^",1),SSN=$P(^(0),"^",9)
"RTN","MPIFQUE3",142,0)
 S TEXT="This patient "_NAME_" ssn# "_SSN_" is missing the ICN"
"RTN","MPIFQUE3",143,0)
 D EXC^RGHLLOG(219,TEXT)
"RTN","MPIFQUE3",144,0)
 K XMCHAN
"RTN","MPIFQUE3",145,0)
 Q
"RTN","MPIFQUE3",146,0)
 ;
"RTN","MPIFQUE3",147,0)
STOP ; Stop/Restart the CMOR Comparison process
"RTN","MPIFQUE3",148,0)
 I $P($G(^RGSITE(991.8,1,"COMP")),"^",4)'="R" D  Q
"RTN","MPIFQUE3",149,0)
 . S DIR("A")="Do you want to RESTART this CMOR Comparison process"
"RTN","MPIFQUE3",150,0)
 . S DIR("B")="N",DIR(0)="Y" D ^DIR
"RTN","MPIFQUE3",151,0)
 . I $G(Y)=1 D TASK
"RTN","MPIFQUE3",152,0)
 I $P($G(^RGSITE(991.8,1,"COMP")),"^",4)="R" D  Q
"RTN","MPIFQUE3",153,0)
 . W !
"RTN","MPIFQUE3",154,0)
 . S DIR("A")="Do you want to stop CMOR Comparison process after the current patient"
"RTN","MPIFQUE3",155,0)
 . S DIR("B")="N",DIR(0)="Y" D ^DIR
"RTN","MPIFQUE3",156,0)
 . I $G(Y)=1 S $P(^RGSITE(991.8,1,"COMP"),"^",6)="Y"
"RTN","MPIFQUE3",157,0)
 Q
"RTN","MPIFQUE3",158,0)
 ;
"RTN","MPIFQUE3",159,0)
STATUS ; Where is the process right now?
"RTN","MPIFQUE3",160,0)
 N IEN,NAME,SSN,STATUS,Y
"RTN","MPIFQUE3",161,0)
 I $P($G(^RGSITE(991.8,1,"COMP")),"^",5)="" W !,"The CMOR Comparison process HAS NEVER been tasked" Q
"RTN","MPIFQUE3",162,0)
 W !,"The CMOR Comparison process has been tasked with task # ",$P($G(^RGSITE(991.8,1,"COMP")),"^",5),". The"
"RTN","MPIFQUE3",163,0)
 S STATUS=$P($G(^RGSITE(991.8,1,"COMP")),"^",4)
"RTN","MPIFQUE3",164,0)
 W !,"process ",$S(STATUS="R":"is currently running",STATUS="MS":"was manually stopped",STATUS="C":"has completed",1:"")
"RTN","MPIFQUE3",165,0)
 I (STATUS="C")!(STATUS="MS") S Y=$P($G(^RGSITE(991.8,1,"COMP")),"^",3) X ^DD("DD") W " on ",Y
"RTN","MPIFQUE3",166,0)
 S IEN=$P($G(^RGSITE(991.8,1,"COMP")),"^")
"RTN","MPIFQUE3",167,0)
 I IEN'="" D
"RTN","MPIFQUE3",168,0)
 .S NAME=$P($G(^DPT(+IEN,0)),"^"),SSN=$P($G(^(0)),"^",9)
"RTN","MPIFQUE3",169,0)
 .S CMOR=$P($G(^DPT(+IEN,"MPI")),"^",3)
"RTN","MPIFQUE3",170,0)
 .S CMOR=$P($$NNT^XUAF4(CMOR),"^")
"RTN","MPIFQUE3",171,0)
 .W " and the last patient",!,"was ",NAME," ssn # ",SSN," CMOR= ",CMOR
"RTN","MPIFQUE3",172,0)
 Q
"RTN","MPIFQUE3",173,0)
 ;
"RTN","MPIFQUE4")
0^65^B38805707
"RTN","MPIFQUE4",1,0)
MPIFQUE4 ;SF/TNV-Process the CMOR COMPARISON request ;FEB 25, 1998
"RTN","MPIFQUE4",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFQUE4",3,0)
 ; 
"RTN","MPIFQUE4",4,0)
 ; This routine will process the batch message from the sending CMOR
"RTN","MPIFQUE4",5,0)
 ; who wished to change the patient CMOR from you to their own.
"RTN","MPIFQUE4",6,0)
 ; PLEASE NOTE THAT THIS PROCESS WILL NOT BE TRACKED AS CMOR REQUEST
"RTN","MPIFQUE4",7,0)
 ; EVENT. SO NOTHING WILL BE RECORDED IN THAT FILE. (PER SRS 9-18-97)
"RTN","MPIFQUE4",8,0)
 ; Approving process:
"RTN","MPIFQUE4",9,0)
 ; The sender will give the CMOR score and the date for a patient
"RTN","MPIFQUE4",10,0)
 ; The receiver will look into the CMOR score on the system and compare
"RTN","MPIFQUE4",11,0)
 ; the date if the date is less than 90 days. Go and use the Current
"RTN","MPIFQUE4",12,0)
 ; CMOR score and compare. If the incoming CMOR score is 80% or more than
"RTN","MPIFQUE4",13,0)
 ; the system CMOR score. CMOR site will be changed to the requesting CMOR
"RTN","MPIFQUE4",14,0)
 ; site. An approved HL7 message will be send to ALL SITES in the
"RTN","MPIFQUE4",15,0)
 ; subscriber list and notify them the new CMOR site. MPI is included.
"RTN","MPIFQUE4",16,0)
 ; If the score is equal or greater than 90 days. CMOR score will be
"RTN","MPIFQUE4",17,0)
 ; recalulated for this patient and compare. Same process as above.
"RTN","MPIFQUE4",18,0)
 ; If the incoming CMOR score is not higher than 80% nothing will happen.
"RTN","MPIFQUE4",19,0)
BEGIN ; Entry point for CMOR COMPARISON request to process.
"RTN","MPIFQUE4",20,0)
 ; NO input or output variables
"RTN","MPIFQUE4",21,0)
 N IEN,RGLOG
"RTN","MPIFQUE4",22,0)
 K RGL
"RTN","MPIFQUE4",23,0)
 D NOW^%DTC
"RTN","MPIFQUE4",24,0)
 S ZTIO="",ZTDTH=%,ZTRTN="EN^MPIFQUE4"
"RTN","MPIFQUE4",25,0)
 S ZTDESC="BACKGROUND CMOR COMPARISON"
"RTN","MPIFQUE4",26,0)
 S ZTSAVE("HL*")=""
"RTN","MPIFQUE4",27,0)
 D ^%ZTLOAD,CLEAN
"RTN","MPIFQUE4",28,0)
 K COUNT,RGL,%,ZTIO,ZTDTH,ZTRTN,ZTDESC,ZTSAVE
"RTN","MPIFQUE4",29,0)
 Q
"RTN","MPIFQUE4",30,0)
 ;
"RTN","MPIFQUE4",31,0)
EN ; Background job to run for cmor comparison
"RTN","MPIFQUE4",32,0)
 K ERROR
"RTN","MPIFQUE4",33,0)
 N MPII,U,LINE,PARENT,COUNT,NDATE,IKI,MPIFFS,MPIFSFS,MPIFREAP,RGLOG
"RTN","MPIFQUE4",34,0)
 S MPIFFS=HL("FS"),MPIFSFS=$E(HL("ECH"),1),MPIFREAP=$E(HL("ECH"),2)
"RTN","MPIFQUE4",35,0)
 D START^RGHLLOG()
"RTN","MPIFQUE4",36,0)
 S U="^",COUNT=0
"RTN","MPIFQUE4",37,0)
 F MPII=1:1 X HLNEXT Q:HLQUIT'>0!($D(ERROR))  G:$$S^%ZTLOAD CLEAN D
"RTN","MPIFQUE4",38,0)
 . S LINE=HLNODE
"RTN","MPIFQUE4",39,0)
 . I $P(LINE,MPIFFS)["MSH" D MSH
"RTN","MPIFQUE4",40,0)
 . I $P(LINE,MPIFFS)["NTE" D NTE
"RTN","MPIFQUE4",41,0)
 . I $P(LINE,MPIFFS)["PID" D PID
"RTN","MPIFQUE4",42,0)
 . I $P(LINE,MPIFFS)["EVN" D EVN
"RTN","MPIFQUE4",43,0)
 . I COUNT=4,'$D(ERROR) D PROCES
"RTN","MPIFQUE4",44,0)
 K SERVER,CLIENT,ERROR
"RTN","MPIFQUE4",45,0)
 D STOP^RGHLLOG()
"RTN","MPIFQUE4",46,0)
 Q
"RTN","MPIFQUE4",47,0)
 ;
"RTN","MPIFQUE4",48,0)
MSH ; Process MSH segment
"RTN","MPIFQUE4",49,0)
 S COUNT=COUNT+1
"RTN","MPIFQUE4",50,0)
 Q
"RTN","MPIFQUE4",51,0)
 ;
"RTN","MPIFQUE4",52,0)
NTE ; Process NTE segment
"RTN","MPIFQUE4",53,0)
 S COUNT=COUNT+1
"RTN","MPIFQUE4",54,0)
 S SITE=$P(LINE,MPIFFS,3)
"RTN","MPIFQUE4",55,0)
 I SITE="" S ERROR="Missing CMOR in message " D EXC^RGHLLOG(221,ERROR) Q
"RTN","MPIFQUE4",56,0)
 S REASON=$P(LINE,MPIFFS,2)
"RTN","MPIFQUE4",57,0)
 I REASON'="COMPARISON" S ERROR="I don't understand the reason of your request" D EXC^RGHLLOG(222,ERROR)
"RTN","MPIFQUE4",58,0)
 Q
"RTN","MPIFQUE4",59,0)
 ;
"RTN","MPIFQUE4",60,0)
PID ; Process PID segment
"RTN","MPIFQUE4",61,0)
 N NODE
"RTN","MPIFQUE4",62,0)
 S COUNT=COUNT+1
"RTN","MPIFQUE4",63,0)
 S ICN=+$P(LINE,MPIFFS,3)   ; get ICN out.
"RTN","MPIFQUE4",64,0)
 I ICN="" S ERROR="Missing ICN in PID segment" D EXC^RGHLLOG(219,ERROR) Q
"RTN","MPIFQUE4",65,0)
 S DFN=$$IEN^MPIFNQ(ICN)                  ; get DFN of this patient
"RTN","MPIFQUE4",66,0)
 I DFN="" S ERROR="Patient with ICN "_ICN_" is not on file for this site" D EXC^RGHLLOG(210,ERROR) Q
"RTN","MPIFQUE4",67,0)
 S NODE=$$MPINODE^MPIFAPI(+DFN)
"RTN","MPIFQUE4",68,0)
 S CMOR=$P(NODE,"^",3)               ; get the CMOR of this patient
"RTN","MPIFQUE4",69,0)
 S SCORE=$P(NODE,U,6),NDATE=$P(NODE,U,7)
"RTN","MPIFQUE4",70,0)
 Q
"RTN","MPIFQUE4",71,0)
 ;
"RTN","MPIFQUE4",72,0)
EVN ; Process EVN segment
"RTN","MPIFQUE4",73,0)
 S COUNT=COUNT+1
"RTN","MPIFQUE4",74,0)
 S X=$P(LINE,MPIFFS,3) D ^%DT S INDATE=Y
"RTN","MPIFQUE4",75,0)
 I INDATE=-1 S ERROR="CMOR score Date was missing for DFN "_DFN_" in CMOR Compare Inbound Message" D EXC^RGHLLOG(223,ERROR) Q
"RTN","MPIFQUE4",76,0)
 S INSCORE=$P($G(LINE),MPIFFS,4)
"RTN","MPIFQUE4",77,0)
 I INSCORE="" S ERROR="CMOR score was missing for DFN "_DFN_" in CMOR Compare Inbound Message" D EXC^RGHLLOG(223,ERROR)
"RTN","MPIFQUE4",78,0)
 Q
"RTN","MPIFQUE4",79,0)
 ;
"RTN","MPIFQUE4",80,0)
PROCES ; Process one complete message (MSH,PID,EVN,NTE)
"RTN","MPIFQUE4",81,0)
 N LIMIT
"RTN","MPIFQUE4",82,0)
 Q:SCORE=""!(NDATE="")    ;No score or calc date at CMOR
"RTN","MPIFQUE4",83,0)
 I $G(ERROR)]"" D CLEAN Q                ; Don't do anything if there is an error
"RTN","MPIFQUE4",84,0)
 S X="T-90" D ^%DT                       ; get the target date
"RTN","MPIFQUE4",85,0)
 I NDATE>Y D  Q                           ; RECORDED DATE is less than 90 days
"RTN","MPIFQUE4",86,0)
 . S LIMIT=$$PERCENT(INSCORE,SCORE)      ; Incoming CMOR score is above 80%
"RTN","MPIFQUE4",87,0)
 . I (LIMIT>80.5)&(INSCORE>SCORE) D CHANGE                 ; Incoming CMOR score is greater
"RTN","MPIFQUE4",88,0)
 . D CLEAN                               ; Incoming CMOR score is LESS
"RTN","MPIFQUE4",89,0)
 N RGDFN S RGDFN=DFN D CALC^RGVCCMR2                         ; Last calculation was greater than 90 days
"RTN","MPIFQUE4",90,0)
 S SCORE=$P($$MPINODE^MPIFAPI(DFN),U,6)    ; Get the latest score
"RTN","MPIFQUE4",91,0)
 S LIMIT=$$PERCENT(INSCORE,SCORE)        ; Incoming CMOR score is above 80%
"RTN","MPIFQUE4",92,0)
 I (LIMIT>80.5)&(INSCORE>SCORE) D CHANGE                   ; Incoming CMOR score is greater
"RTN","MPIFQUE4",93,0)
 D CLEAN                                 ; Incoming CMOR score is LESS than the latest score
"RTN","MPIFQUE4",94,0)
 Q
"RTN","MPIFQUE4",95,0)
 ;
"RTN","MPIFQUE4",96,0)
PERCENT(NUM1,NUM2) ; Calculate the percent difference 80% or more need for change
"RTN","MPIFQUE4",97,0)
 ; of CMOR number
"RTN","MPIFQUE4",98,0)
 N DIF
"RTN","MPIFQUE4",99,0)
 I NUM1="" S NUM1=0
"RTN","MPIFQUE4",100,0)
 I NUM2="" S NUM2=0
"RTN","MPIFQUE4",101,0)
 Q:$$MAX^XLFMTH(NUM1,NUM2)=0 0
"RTN","MPIFQUE4",102,0)
 S DIF=(100-(($$MIN^XLFMTH(NUM1,NUM2))/($$MAX^XLFMTH(NUM1,NUM2))*100))
"RTN","MPIFQUE4",103,0)
 Q DIF
"RTN","MPIFQUE4",104,0)
 ;
"RTN","MPIFQUE4",105,0)
CHANGE ; Process the change CMOR request to the new CMOR site and Send out 
"RTN","MPIFQUE4",106,0)
 ; notification to the Subscriber list and MPI.
"RTN","MPIFQUE4",107,0)
 N CHANGE
"RTN","MPIFQUE4",108,0)
 S DIC="^DIC(4,",DIC(0)="QMOZ",X=SITE D ^DIC K DIC           ; Figure out
"RTN","MPIFQUE4",109,0)
 I Y=-1 S ERROR="CMOR Site name is not on file for Station Number "_SITE D EXC^RGHLLOG(211,ERROR) Q            ; the CMOR site
"RTN","MPIFQUE4",110,0)
 S CHANGE=$$CHANGE^MPIF001(+DFN,Y(0,0))                      ; name and change
"RTN","MPIFQUE4",111,0)
 I +CHANGE<1 S ERROR="Unable to update CMOR for site "_SITE_". For DFN "_DFN D EXC^RGHLLOG(211,ERROR) Q    ; Major problem here, unable to change the CMOR
"RTN","MPIFQUE4",112,0)
 S SERVER="MPIF CMOR RESULT SERVER",CLIENT="MPIF CMOR RESULT CLIENT"
"RTN","MPIFQUE4",113,0)
 D INIT^HLFNC2(SERVER,.HL)
"RTN","MPIFQUE4",114,0)
 I $G(HL) S ERROR=HL D EXC^RGHLLOG(210,ERROR) Q
"RTN","MPIFQUE4",115,0)
 D LINK
"RTN","MPIFQUE4",116,0)
 I $G(RESULT)=0 K RESULT Q
"RTN","MPIFQUE4",117,0)
 S HLA("HLS",1)=$$EN^VAFCPID(+DFN,"2,3,4,5,6,7,8,9,10")
"RTN","MPIFQUE4",118,0)
 S HLA("HLS",2)="EVN"_HL("FS")_"A31"_HL("FS")_INDATE_HL("FS")_INSCORE_HL("FS")_"POSTMASTER"
"RTN","MPIFQUE4",119,0)
 ;actually change the cmor
"RTN","MPIFQUE4",120,0)
 S HLA("HLS",3)="PV1"_HL("FS")_HL("FS")_HL("FS")_SITE_HL("FS")_HL("FS")_HL("FS")_CMOR
"RTN","MPIFQUE4",121,0)
 N RESLT
"RTN","MPIFQUE4",122,0)
 D GENERATE^HLMA(SERVER,"LM",1,.RESLT)
"RTN","MPIFQUE4",123,0)
 I $P(RESLT,U,2)'="" D EXC^RGHLLOG(220,"Error returned in GENERATE^HLMA  "_$P(RESLT,U,2))
"RTN","MPIFQUE4",124,0)
 K RESULT
"RTN","MPIFQUE4",125,0)
 Q
"RTN","MPIFQUE4",126,0)
 ;
"RTN","MPIFQUE4",127,0)
LINK ; Give back the subscriber list in HLL(LINKS") array for this patient
"RTN","MPIFQUE4",128,0)
 N SUB,IEN,MPILINK
"RTN","MPIFQUE4",129,0)
 K RGL
"RTN","MPIFQUE4",130,0)
 S RGL(0)=""
"RTN","MPIFQUE4",131,0)
 S RESULT=0
"RTN","MPIFQUE4",132,0)
 S SUB=$P($$MPINODE^MPIFAPI(+DFN),U,5)                  ; Subscriber list
"RTN","MPIFQUE4",133,0)
 S MPILINK=$$MPILINK^MPIFAPI()
"RTN","MPIFQUE4",134,0)
 I MPILINK="" D EXC^RGHLLOG(224,"No MPI Link defined") Q
"RTN","MPIFQUE4",135,0)
 I $G(SUB)="" D  Q                                       ; If this empty
"RTN","MPIFQUE4",136,0)
 . S IEN=$$LKUP^XUAF4(SITE)
"RTN","MPIFQUE4",137,0)
 . I IEN'="" D LINK^HLUTIL3(IEN,.RGL)          ; Get the logical link to that site
"RTN","MPIFQUE4",138,0)
 . S X=$O(RGL(0))
"RTN","MPIFQUE4",139,0)
 . I X="" S ERROR="No Logical Link set up on this site "_SITE D EXC^RGHLLOG(224,ERROR) Q
"RTN","MPIFQUE4",140,0)
 . S HLL("LINKS",1)=CLIENT_U_$G(RGL(X))
"RTN","MPIFQUE4",141,0)
 . S HLL("LINKS",2)=CLIENT_U_MPILINK
"RTN","MPIFQUE4",142,0)
 . S RESULT=1
"RTN","MPIFQUE4",143,0)
 D GET^HLSUB(SUB,"",CLIENT,.HLL)
"RTN","MPIFQUE4",144,0)
 S RESULT=1,HLL("LINKS",9999)=CLIENT_U_MPILINK
"RTN","MPIFQUE4",145,0)
 Q
"RTN","MPIFQUE4",146,0)
 ;
"RTN","MPIFQUE4",147,0)
CLEAN ; Clean up the partition and ready for the next message
"RTN","MPIFQUE4",148,0)
 D STOP^RGHLLOG()
"RTN","MPIFQUE4",149,0)
 K RGL,EVENT,SITE,REASON,ICN,DFN,CMOR,SCORE,X,Y,INDATE,INSCORE
"RTN","MPIFQUE4",150,0)
 S COUNT=0
"RTN","MPIFQUE4",151,0)
 Q
"RTN","MPIFQUE5")
0^66^B7649149
"RTN","MPIFQUE5",1,0)
MPIFQUE5 ;SF/TNV-Process the RESULT from CMOR COMPARISON request ;FEB 20, 1998
"RTN","MPIFQUE5",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFQUE5",3,0)
 ; 
"RTN","MPIFQUE5",4,0)
 ; This routine will process the message from the CMOR site
"RTN","MPIFQUE5",5,0)
 ; who agreed to change the patient CMOR from his to you.
"RTN","MPIFQUE5",6,0)
 ; PLEASE NOTE THAT THIS PROCESS WILL NOT BE TRACKED AS CMOR REQUEST
"RTN","MPIFQUE5",7,0)
 ; EVENT. SO NOTHING WILL BE RECORDED IN THAT FILE. (PER SRS 9-18-97)
"RTN","MPIFQUE5",8,0)
 ; Now you are the CMOR site for this patient.
"RTN","MPIFQUE5",9,0)
 ;
"RTN","MPIFQUE5",10,0)
EN ; Entry point for process the update of CMOR
"RTN","MPIFQUE5",11,0)
 N U,LINE,IKI,ERROR,RGL,RGLOG
"RTN","MPIFQUE5",12,0)
 ; After being called from the Inbound Filler, this part was executed to
"RTN","MPIFQUE5",13,0)
 ; update the CMOR for this patient and an ack message to send back if requested.
"RTN","MPIFQUE5",14,0)
 S U="^",ACK="NO"
"RTN","MPIFQUE5",15,0)
 D START^RGHLLOG()
"RTN","MPIFQUE5",16,0)
 ;
"RTN","MPIFQUE5",17,0)
 N MPII,U,LINE,ERROR,PARENT,COUNT,NDATE,IKI,MPIFFS,MPIFSFS,MPIFREAP,RGLOG
"RTN","MPIFQUE5",18,0)
 F MPII=1:1 X HLNEXT Q:HLQUIT'>0  G:$$S^%ZTLOAD ACK D
"RTN","MPIFQUE5",19,0)
 . S LINE=HLNODE
"RTN","MPIFQUE5",20,0)
 . I $P(LINE,HL("FS"))["MSH" D MSH
"RTN","MPIFQUE5",21,0)
 . I $P(LINE,HL("FS"))["PV1" D PV1
"RTN","MPIFQUE5",22,0)
 . I $P(LINE,HL("FS"))["PID" D PID
"RTN","MPIFQUE5",23,0)
 I $G(ERROR)]"" D ACK Q          ; Any problems before changing the CMOR
"RTN","MPIFQUE5",24,0)
 I ($G(SITE)]"")&($G(DFN)]"") D CHANGE
"RTN","MPIFQUE5",25,0)
 I $G(ERROR)]"" D ACK          ; Any problems after changing the CMOR
"RTN","MPIFQUE5",26,0)
 D STOP^RGHLLOG()
"RTN","MPIFQUE5",27,0)
 Q
"RTN","MPIFQUE5",28,0)
 ;
"RTN","MPIFQUE5",29,0)
MSH ; Process MSH segment
"RTN","MPIFQUE5",30,0)
 I $P(LINE,HL("FS"),16)="AL" S ACK="YES"
"RTN","MPIFQUE5",31,0)
 I $P(LINE,HL("FS"),16)="ER" S ACK="ERROR"
"RTN","MPIFQUE5",32,0)
 Q
"RTN","MPIFQUE5",33,0)
 ;
"RTN","MPIFQUE5",34,0)
PV1 ; Process PV1 segment
"RTN","MPIFQUE5",35,0)
 S SITE=$P(LINE,HL("FS"),4)
"RTN","MPIFQUE5",36,0)
 I SITE="" S ERROR="Missing CMOR site number" D EXC^RGHLLOG(221,ERROR)
"RTN","MPIFQUE5",37,0)
 Q
"RTN","MPIFQUE5",38,0)
NTE ; Process NTE segment
"RTN","MPIFQUE5",39,0)
 S SITE=$P(LINE,HL("FS"),8)
"RTN","MPIFQUE5",40,0)
 I SITE="" S ERROR="Missing CMOR site number" D EXC^RGHLLOG(221,ERROR)
"RTN","MPIFQUE5",41,0)
 Q
"RTN","MPIFQUE5",42,0)
 ;
"RTN","MPIFQUE5",43,0)
PID ; Process PID segment
"RTN","MPIFQUE5",44,0)
 S ICN=+$P(LINE,HL("FS"),3)                  ; get ICN out.
"RTN","MPIFQUE5",45,0)
 I ICN<1 S ERROR="Missing Patient Integration Control Number" D EXC^RGHLLOG(219,ERROR) Q
"RTN","MPIFQUE5",46,0)
 S DFN=$$IEN^MPIFNQ(ICN)                  ; get DFN of this patient
"RTN","MPIFQUE5",47,0)
 I DFN="" S ERROR="Patient is not on file at this site" D EXC^RGHLLOG(210,ERROR) Q
"RTN","MPIFQUE5",48,0)
 Q
"RTN","MPIFQUE5",49,0)
 ;
"RTN","MPIFQUE5",50,0)
CHANGE ; Process the change CMOR to the new CMOR site (YOUR SITE NOW)
"RTN","MPIFQUE5",51,0)
 S DIC="^DIC(4,",DIC(0)="QMOZ",X=SITE D ^DIC K DIC           ; Figure out
"RTN","MPIFQUE5",52,0)
 I Y=-1 S ERROR="CMOR Site name is not on file for Station Number "_SITE D EXC^RGHLLOG(211,ERROR) Q            ; the CMOR site
"RTN","MPIFQUE5",53,0)
 S CHANGE=$$CHANGE^MPIF001(+DFN,Y(0,0))                      ; name and change
"RTN","MPIFQUE5",54,0)
 I +CHANGE=-1 S ERROR=ERROR="Unable to update CMOR for site "_SITE_". For DFN "_DFN D EXC^RGHLLOG(211,ERROR)
"RTN","MPIFQUE5",55,0)
 Q
"RTN","MPIFQUE5",56,0)
 ;
"RTN","MPIFQUE5",57,0)
ACK ; Create ACK to send back and Clean up the partition.
"RTN","MPIFQUE5",58,0)
 ;
"RTN","MPIFQUE5",59,0)
 D STOP^RGHLLOG()
"RTN","MPIFQUE5",60,0)
 K X,Y,DFN,ICN,SITE,MPIFREAP,ACK,PARENT,CHANGE
"RTN","MPIFQUE5",61,0)
 Q
"RTN","MPIFREQ")
0^67^B11231888
"RTN","MPIFREQ",1,0)
MPIFREQ ;BHM/RGY,LTL-Process a CMOR request from CIRN demon ;FEB 20, 1998
"RTN","MPIFREQ",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFREQ",3,0)
EN(TYPE,REQNO,ERROR,HL7) ;
"RTN","MPIFREQ",4,0)
 NEW RGL,INST,USER,REASON,NDATE,ICN,PHONE,N0,CNT,HLA,HL,ID,X
"RTN","MPIFREQ",5,0)
 S CNT=0,HL=0
"RTN","MPIFREQ",6,0)
 S N0=$G(^MPIF(984.9,REQNO,0))
"RTN","MPIFREQ",7,0)
 I N0="" S ERROR="Node for request #"_REQNO_" is not defined" Q
"RTN","MPIFREQ",8,0)
 S INST=$P($$SITE^VASITE(),"^",3)
"RTN","MPIFREQ",9,0)
 N X,Y,DIC
"RTN","MPIFREQ",10,0)
 S DIC="^VA(200,",DIC(0)="MZO",X="`"_+$P(N0,"^",2)
"RTN","MPIFREQ",11,0)
 D ^DIC
"RTN","MPIFREQ",12,0)
 I $G(Y)<1 S USER=""
"RTN","MPIFREQ",13,0)
 I $G(Y)>0 S USER=$G(Y(0,0))
"RTN","MPIFREQ",14,0)
 S REASON=$P($G(^MPIF(984.9,REQNO,1)),"^",2)
"RTN","MPIFREQ",15,0)
 S NDATE=$P(N0,"^",3)
"RTN","MPIFREQ",16,0)
 S ICN=$$ICN^MPIFNQ(+$P(N0,"^",4))
"RTN","MPIFREQ",17,0)
 S PHONE=$P(N0,"^",5)
"RTN","MPIFREQ",18,0)
 S ID=$P(N0,"^")
"RTN","MPIFREQ",19,0)
 D INIT^HLFNC2("MPIF CMOR REQUEST",.HL)
"RTN","MPIFREQ",20,0)
 I HL S ERROR=HL Q
"RTN","MPIFREQ",21,0)
 D LINK^HLUTIL3($P(N0,"^",7),.RGL) S X=$O(RGL(0)) I X>0 S HLL("LINKS",1)="MPIF CMOR RESPONSE^"_RGL(X)
"RTN","MPIFREQ",22,0)
 S CNT=CNT+1,X=$$EN^VAFHLPID(+$P(N0,"^",4),"2,3,5"),$P(X,"^",3)=ICN
"RTN","MPIFREQ",23,0)
 S HLA("HLS",CNT)=X
"RTN","MPIFREQ",24,0)
 S CNT=CNT+1
"RTN","MPIFREQ",25,0)
 S HLA("HLS",CNT)="NTE"_HL("FS")_HL("FS")_"P"_HL("FS")_PHONE_HL("FS")_REASON_HL("FS")_HL("FS")_ID_HL("FS")_INST
"RTN","MPIFREQ",26,0)
 S CNT=CNT+1
"RTN","MPIFREQ",27,0)
 S HLA("HLS",CNT)="EVN"_HL("FS")_"A31"_HL("FS")_NDATE_HL("FS")_HL("FS")_""_HL("FS")_USER
"RTN","MPIFREQ",28,0)
 N RLST
"RTN","MPIFREQ",29,0)
 D GENERATE^HLMA("MPIF CMOR REQUEST","LM",1,.RLST,"",.HL)
"RTN","MPIFREQ",30,0)
 I 'RLST S ERROR=RLST
"RTN","MPIFREQ",31,0)
 Q
"RTN","MPIFREQ",32,0)
IN(INST,USER,REASON,NDATE,ICN,PHONE,ID) ;Process an incoming CMOR request
"RTN","MPIFREQ",33,0)
 NEW PATIEN,MAIL,MPIF,TYPE,N0,IEN,XMCHAN,XMDUZ,XMTEXT,XMSUB,XMY,TEXT,X
"RTN","MPIFREQ",34,0)
 S PATIEN=$$IEN^MPIFNQ(ICN)
"RTN","MPIFREQ",35,0)
 I PATIEN<1 D  K Y Q
"RTN","MPIFREQ",36,0)
 . I $G(^RGHL7(991.11,0))="" Q   ; No way to log this exception
"RTN","MPIFREQ",37,0)
 . S DIC="^RGHL7(991.11,",DIC(0)="MNOZ",X=210 D ^DIC K DIC
"RTN","MPIFREQ",38,0)
 . I Y=-1 D ERR^RGHLLOG("","") Q        ; This type of error is not define, log as Unclassified exception
"RTN","MPIFREQ",39,0)
 . D START^RGHLLOG()
"RTN","MPIFREQ",40,0)
 . S XMCHAN=1,TEXT=^RGHL7(991.11,+Y,10)_" with ICN # :"_ICN
"RTN","MPIFREQ",41,0)
 . D EXC^RGHLLOG(+Y,TEXT)            ; Log this error as 210 type
"RTN","MPIFREQ",42,0)
 . K XMCHAN
"RTN","MPIFREQ",43,0)
 . D STOP^RGHLLOG()
"RTN","MPIFREQ",44,0)
 ; Good to process 
"RTN","MPIFREQ",45,0)
 S IEN=$$ADD^MPIFNEW(ID)
"RTN","MPIFREQ",46,0)
 S TYPE=$S(+$$SITE^VASITE()=$$PAT^MPIFNQ(PATIEN):1,1:3)
"RTN","MPIFREQ",47,0)
 S DIE="^MPIF(984.9,",DA=IEN,DR="[MPIF REQUEST INCOMING]" D ^DIE
"RTN","MPIFREQ",48,0)
 I $$AUTO^MPIFNQ() D AUTO(IEN) Q
"RTN","MPIFREQ",49,0)
 S MAIL=$$MAIL^MPIFUTL()
"RTN","MPIFREQ",50,0)
 I MAIL]"" D
"RTN","MPIFREQ",51,0)
 .S XMDUZ="MPI VISTA Package",XMTEXT="MPIF(1,",MPIF(1,1)="New CIRN Master Of Record (CMOR) request received for patient "_$S($P($G(^DPT(+PATIEN,0)),U)]"":$P(^DPT(PATIEN,0),"^")_" ("_$E($P(^(0),"^",9),6,9)_")",1:"UNKNOWN")
"RTN","MPIFREQ",52,0)
 .S XMSUB=$P(^MPIF(984.9,IEN,0),"^"),XMY("G."_MAIL)="" D ^XMD
"RTN","MPIFREQ",53,0)
 .Q
"RTN","MPIFREQ",54,0)
 Q
"RTN","MPIFREQ",55,0)
AUTO(REQNO) ;Process a request automatically
"RTN","MPIFREQ",56,0)
 NEW DFN,ERROR,DIE,DR,DA,CMOR
"RTN","MPIFREQ",57,0)
 S DIE="^MPIF(984.9,",DR="[MPIF REVIEW AUTO]",DA=REQNO D ^DIE
"RTN","MPIFREQ",58,0)
 D EN^RGEQ("MPIF RESULT",REQNO)
"RTN","MPIFREQ",59,0)
 S DFN=$P($G(^MPIF(984.9,REQNO,0)),"^",4)
"RTN","MPIFREQ",60,0)
 S CMOR=$$CMORNAME^MPIF001($P(^MPIF(984.9,REQNO,0),"^",7))
"RTN","MPIFREQ",61,0)
 Q:+CMOR=-1      ;No CMOR defined
"RTN","MPIFREQ",62,0)
 I $P($G(^MPIF(984.9,REQNO,1)),"^",3)=1 D
"RTN","MPIFREQ",63,0)
 .D SET^MPIFCMOR(DFN,CMOR)
"RTN","MPIFREQ",64,0)
 .D BROAD^MPIFCMOR(REQNO)
"RTN","MPIFREQ",65,0)
 Q
"RTN","MPIFRES")
0^47^B8301437
"RTN","MPIFRES",1,0)
MPIFRES ;SF/CMC-LOCAL AND MISSING ICN RESOLUTION ;JUL 13, 1998
"RTN","MPIFRES",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFRES",3,0)
 ;
"RTN","MPIFRES",4,0)
BKG ;
"RTN","MPIFRES",5,0)
 S ZTRTN="GO^MPIFRES",ZTDESC="USE HL7 MSGS AND MAIL TO BUILD ICN"
"RTN","MPIFRES",6,0)
 D NOW^%DTC
"RTN","MPIFRES",7,0)
 S ZTIO="",ZTDTH=%
"RTN","MPIFRES",8,0)
 I $D(DUZ) S ZTSAVE("DUZ")=DUZ
"RTN","MPIFRES",9,0)
 D ^%ZTLOAD
"RTN","MPIFRES",10,0)
 D HOME^%ZIS K IO("Q")
"RTN","MPIFRES",11,0)
 K ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,ZTSK,%
"RTN","MPIFRES",12,0)
 Q
"RTN","MPIFRES",13,0)
 ;
"RTN","MPIFRES",14,0)
GO ;ENTRY POINT
"RTN","MPIFRES",15,0)
 N MPIMORE,MPITOT
"RTN","MPIFRES",16,0)
 L +^XTMP("MPIF RESOLUTION"):3 E  Q
"RTN","MPIFRES",17,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","MPIFRES",18,0)
 ;
"RTN","MPIFRES",19,0)
 K ^TMP("HLS",$J)
"RTN","MPIFRES",20,0)
 D START^RGHLLOG()
"RTN","MPIFRES",21,0)
 D HLRDF,LOOP
"RTN","MPIFRES",22,0)
 I $D(^TMP("HLS",$J)) D SEND
"RTN","MPIFRES",23,0)
 D STOP^RGHLLOG(0)
"RTN","MPIFRES",24,0)
 K MPIIT,MPITOT,HLDT,HLDT1,MPICNT,MPIDNUM,MPIEROR,MPIHL,MPIMIDT,MPIMSH
"RTN","MPIFRES",25,0)
 K MPIOUT,MPIQRYNM,MPISEQ,QCNT,MPIMCNT,MPIMTX,ENDT,MPIFRES
"RTN","MPIFRES",26,0)
 L -^XTMP("MPIF RESOLUTION")
"RTN","MPIFRES",27,0)
 Q
"RTN","MPIFRES",28,0)
 ;
"RTN","MPIFRES",29,0)
HLRDF ;
"RTN","MPIFRES",30,0)
 S (MPIOUT,MPIMCNT)=""
"RTN","MPIFRES",31,0)
 S MPIHL("ECH")="^~\&"
"RTN","MPIFRES",32,0)
 S MPIHL("FS")="|"
"RTN","MPIFRES",33,0)
 D INIT^HLFNC2("MPIF ICN-Q02 SERVER",.MPIHL)
"RTN","MPIFRES",34,0)
 I $O(MPIHL("")) D EXC^RGHLLOG(220,"INIT^HLFNC2 call error returned") Q
"RTN","MPIFRES",35,0)
 D CREATE^HLTF(.MPIMCNT,.MPIMTX,.HLDT,.HLDT1)
"RTN","MPIFRES",36,0)
 Q
"RTN","MPIFRES",37,0)
LOOP ;
"RTN","MPIFRES",38,0)
 S (MPICNT,MPIDNUM)=1
"RTN","MPIFRES",39,0)
 D MAKE
"RTN","MPIFRES",40,0)
 Q
"RTN","MPIFRES",41,0)
SEND ;ready to send
"RTN","MPIFRES",42,0)
 D GENERATE^HLMA("MPIF ICN-Q02 SERVER","GB",1,.MPIMTX,.MPIEROR,.MPIMORE)
"RTN","MPIFRES",43,0)
 I +MPIEROR=0 D EXC^RGHLLOG(220,"GENERATE^HLMA call returned error") Q
"RTN","MPIFRES",44,0)
 K %,MPIMTX,MPIEROR,MPIMORE
"RTN","MPIFRES",45,0)
 K ^TMP("HLS",$J)
"RTN","MPIFRES",46,0)
 Q
"RTN","MPIFRES",47,0)
MAKE ;
"RTN","MPIFRES",48,0)
 N LOCAL,MPIIT
"RTN","MPIFRES",49,0)
 S LOCAL="",MPIIT=0,MPIFRES=""
"RTN","MPIFRES",50,0)
 ;local ICNs
"RTN","MPIFRES",51,0)
 F  S MPIIT=$O(^DPT("AICNL",1,MPIIT)) Q:MPIIT=""  D
"RTN","MPIFRES",52,0)
 .;need to kill local?
"RTN","MPIFRES",53,0)
 .D MAKE3
"RTN","MPIFRES",54,0)
 ;missing ICNs
"RTN","MPIFRES",55,0)
 S MPIIT=0
"RTN","MPIFRES",56,0)
 F  S MPIIT=$O(^DPT("AMPIMIS",MPIIT)) Q:MPIIT=""  D
"RTN","MPIFRES",57,0)
 .D MAKE3
"RTN","MPIFRES",58,0)
 Q
"RTN","MPIFRES",59,0)
MAKE3 ;
"RTN","MPIFRES",60,0)
 K MPIOUT
"RTN","MPIFRES",61,0)
 S MPIFRES=""
"RTN","MPIFRES",62,0)
 S:$G(MPIQRYNM)="" MPIQRYNM="VTQ_PID_ICN_LOAD_1"
"RTN","MPIFRES",63,0)
 D VTQ1^MPIFVTQ(MPIIT,.MPIOUT,.MPIHL,.MPIQRYNM)
"RTN","MPIFRES",64,0)
 I $P(MPIOUT(0),"^",1)<0,$P(MPIOUT(0),"^",2)="invalid DFN"!($P(MPIOUT(0),"^",2)="no encoding characters") D
"RTN","MPIFRES",65,0)
 .D EXC^RGHLLOG(206,"DFN = "_MPIIT_"  Problem with building VTQ was "_$P(MPIOUT(0),"^",2)) Q
"RTN","MPIFRES",66,0)
 Q:$P(MPIOUT(0),"^",1)<0
"RTN","MPIFRES",67,0)
 ;call for HL7 header
"RTN","MPIFRES",68,0)
 S MPIMIDT=MPIMCNT_"-"_MPIDNUM
"RTN","MPIFRES",69,0)
 D MSH^HLFNC2(.MPIHL,MPIMIDT,.MPIMSH)
"RTN","MPIFRES",70,0)
 S MPIOUT(1)=MPIMSH
"RTN","MPIFRES",71,0)
 ;MESSAGE BUILT
"RTN","MPIFRES",72,0)
 S MPISEQ=0
"RTN","MPIFRES",73,0)
 F  S MPISEQ=$O(MPIOUT(MPISEQ)) Q:MPISEQ'>0  D
"RTN","MPIFRES",74,0)
 .S ^TMP("HLS",$J,MPICNT)=MPIOUT(MPISEQ)
"RTN","MPIFRES",75,0)
 .S MPICNT=MPICNT+1
"RTN","MPIFRES",76,0)
 S MPIDNUM=MPIDNUM+1
"RTN","MPIFRES",77,0)
 I MPIDNUM>100 D
"RTN","MPIFRES",78,0)
 .D SEND
"RTN","MPIFRES",79,0)
 .S (MPICNT,MPIDNUM)=1
"RTN","MPIFRES",80,0)
 .D HLRDF
"RTN","MPIFRES",81,0)
 Q
"RTN","MPIFRESS")
0^68^B7094513
"RTN","MPIFRESS",1,0)
MPIFRESS ;BHM/RGY-Process a CMOR result from CIRN demon ;FEB 27, 1998
"RTN","MPIFRESS",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFRESS",3,0)
EN(TYPE,REQNO,ERROR,HL7) ;
"RTN","MPIFRESS",4,0)
 NEW RGL,ID,COMMENTS,STATUS,NDATE,PHONE,REVIEWER,N0,CNT,HL,HLA,X
"RTN","MPIFRESS",5,0)
 S CNT=0,HL=0
"RTN","MPIFRESS",6,0)
 S N0=$G(^MPIF(984.9,REQNO,0))
"RTN","MPIFRESS",7,0)
 I N0="" S ERROR="Request does not exist" Q
"RTN","MPIFRESS",8,0)
 S ID=$P(N0,"^")
"RTN","MPIFRESS",9,0)
 S STATUS=$P(N0,"^",6)
"RTN","MPIFRESS",10,0)
 S COMMENTS=$P($G(^MPIF(984.9,REQNO,3)),"^",2)
"RTN","MPIFRESS",11,0)
 I $P($G(^MPIF(984.9,REQNO,3)),"^")]"" S REVIEWER=$P(^(3),"^")
"RTN","MPIFRESS",12,0)
 I $P($G(^MPIF(984.9,REQNO,3)),"^")']"" D
"RTN","MPIFRESS",13,0)
 .N DIC,X,Y
"RTN","MPIFRESS",14,0)
 .S DIC="^VA(200,",DIC(0)="ZMO",X="`"_+$P(^MPIF(984.9,REQNO,2),"^")
"RTN","MPIFRESS",15,0)
 .I $G(Y)>1 S REVIEWER=$G(Y(0,0))
"RTN","MPIFRESS",16,0)
 .I $G(Y)<1 S REVIEWER=""
"RTN","MPIFRESS",17,0)
 S NDATE=$P($G(^MPIF(984.9,REQNO,2)),"^",2)
"RTN","MPIFRESS",18,0)
 S PHONE=$P($G(^MPIF(984.9,REQNO,2)),"^",3)
"RTN","MPIFRESS",19,0)
 S COMMENTS=$P($G(^MPIF(984.9,REQNO,3)),"^",2)
"RTN","MPIFRESS",20,0)
 D INIT^HLFNC2("MPIF CMOR REQUEST",.HL)
"RTN","MPIFRESS",21,0)
 I HL S ERROR=HL Q
"RTN","MPIFRESS",22,0)
 D LINK^HLUTIL3($P(N0,"^",7),.RGL) S X=$O(RGL(0)) I X>0 S HLL("LINKS",1)="MPIF CMOR RESPONSE^"_RGL(X)
"RTN","MPIFRESS",23,0)
 S CNT=CNT+1,HLA("HLS",CNT)="NTE"_HL("FS")_HL("FS")_"P"_HL("FS")_PHONE_HL("FS")_COMMENTS_HL("FS")_STATUS_HL("FS")_ID
"RTN","MPIFRESS",24,0)
 S CNT=CNT+1,HLA("HLS",CNT)="EVN"_HL("FS")_"A31"_HL("FS")_NDATE_HL("FS")_HL("FS")_""_HL("FS")_REVIEWER
"RTN","MPIFRESS",25,0)
 N RLST
"RTN","MPIFRESS",26,0)
 D GENERATE^HLMA("MPIF CMOR REQUEST","LM",1,.RLST,"",.HL)
"RTN","MPIFRESS",27,0)
 I 'RLST S ERROR=RLST
"RTN","MPIFRESS",28,0)
 Q
"RTN","MPIFRESS",29,0)
IN(ID,RESULT,NDATE,PHONE,REVIEWER,COMMENTS) ;Process an incoming CMOR result
"RTN","MPIFRESS",30,0)
 NEW DFN,ENT,XMY,XMDUZ,XMTEXT,MPIF,XMSUB,FSITE,CMOR
"RTN","MPIFRESS",31,0)
 S ENT=$O(^MPIF(984.9,"B",ID,0))
"RTN","MPIFRESS",32,0)
 Q:'$D(^MPIF(984.9,ENT,0))
"RTN","MPIFRESS",33,0)
 S DFN=$P($G(^MPIF(984.9,ENT,0)),"^",4),FSITE=$P($G(^(0)),"^",7)
"RTN","MPIFRESS",34,0)
 S DIC="^DIC(4,",DIC(0)="MNZ",X=FSITE D ^DIC
"RTN","MPIFRESS",35,0)
 I $G(Y)>0 S FSITE=$P(Y,"^",2)
"RTN","MPIFRESS",36,0)
 K Y,X,DIC
"RTN","MPIFRESS",37,0)
 S CMOR=$$CMORNAME^MPIF001($P(^MPIF(984.9,REQNO,0),"^",7))
"RTN","MPIFRESS",38,0)
 Q:+CMOR=-1
"RTN","MPIFRESS",39,0)
 I RESULT=4,$P($G(^MPIF(984.9,ENT,1)),"^",3)=1 D
"RTN","MPIFRESS",40,0)
 .D SET^MPIFCMOR(DFN,CMOR)
"RTN","MPIFRESS",41,0)
 .D BROAD^MPIFCMOR(ENT)
"RTN","MPIFRESS",42,0)
 S DIE="^MPIF(984.9,",DA=ENT,DR="[MPIF RESULT INCOMING]" D ^DIE K DIE,DA,DR
"RTN","MPIFRESS",43,0)
 S XMDUZ="MPI VISTA Package"
"RTN","MPIFRESS",44,0)
 S XMSUB="Request "_ID_" is "_$S(RESULT=4:"approved",1:"disapproved")
"RTN","MPIFRESS",45,0)
 S XMY($P(^MPIF(984.9,ENT,0),"^",2))="",XMTEXT="MPIF(1,"
"RTN","MPIFRESS",46,0)
 S MPIF(1,1)=FSITE_" received CMOR request for "_$P($G(^DPT(+$P(^MPIF(984.9,ENT,0),"^",4),0)),"^")_" ("_$E($P(^(0),"^",9),6,9)_")."
"RTN","MPIFRESS",47,0)
 S MPIF(1,2)=XMSUB_"."
"RTN","MPIFRESS",48,0)
 D ^XMD
"RTN","MPIFRESS",49,0)
 Q
"RTN","MPIFREV")
0^69^B7744343
"RTN","MPIFREV",1,0)
MPIFREV ;BHM/RGY-Review CMOR request ;FEB 26, 1998
"RTN","MPIFREV",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFREV",3,0)
EN ;
"RTN","MPIFREV",4,0)
 ; Entry point for option MPIF REVIEW REQUEST.  This option allows the
"RTN","MPIFREV",5,0)
 ; user to review CMOR Change requests and approve or deny them
"RTN","MPIFREV",6,0)
 ; No input or output variables.
"RTN","MPIFREV",7,0)
 NEW DIC
"RTN","MPIFREV",8,0)
ASK S DIC="^MPIF(984.9,",DIC("A")="Select CMOR request to review: ",DIC(0)="QEAM" D ^DIC Q:+Y<0
"RTN","MPIFREV",9,0)
 D EN1^MPIFREV(+Y)
"RTN","MPIFREV",10,0)
 G ASK
"RTN","MPIFREV",11,0)
EN1(Y,MSTOP) ;Review a CMOR request
"RTN","MPIFREV",12,0)
 N DFN,PHONE,RESULT,DIE,DA,DR,ENT,DIC,FR,BY,TO,FLDS,L,DIR,DUTOUT,X
"RTN","MPIFREV",13,0)
 S MSTOP=0
"RTN","MPIFREV",14,0)
 I $P($G(^MPIF(984.9,+Y,0)),"^",6)'=3 W !,"*** Request is not pending review ***" Q
"RTN","MPIFREV",15,0)
 S L=0,ENT=+Y,DIC="^MPIF(984.9,",FR=+Y,TO=+Y,BY="@NUMBER",FLDS="[MPIF REQUEST VIEW]" D EN1^DIP
"RTN","MPIFREV",16,0)
APP S DIR("A")="Select Review Action ("_$S($P(^MPIF(984.9,ENT,0),"^",4)]"":"APPROVE/",1:"")_"DISAPPROVE, OR '^' to Exit)? "
"RTN","MPIFREV",17,0)
 S DIR(0)="SAO^"_$S($P(^MPIF(984.9,ENT,0),"^",4)]"":"A:APPROVE;",1:"")_"D:DISAPPROVE"
"RTN","MPIFREV",18,0)
 N DIRUT,DTOUT
"RTN","MPIFREV",19,0)
 D ^DIR K DIR
"RTN","MPIFREV",20,0)
 I $D(DIRUT) S:X="^"!$D(DTOUT) MSTOP=1 W " ... No Action!" Q
"RTN","MPIFREV",21,0)
 S RESULT=Y
"RTN","MPIFREV",22,0)
 S PHONE=$P($G(^MPIF(984.9,+$O(^MPIF(984.9,"AE",DUZ,""),-1),2)),"^",3)
"RTN","MPIFREV",23,0)
 S DIE="^MPIF(984.9,",DR="[MPIF REVIEW RESULT]",DA=ENT D ^DIE
"RTN","MPIFREV",24,0)
 I $D(Y)!$D(DTOUT) S:$D(DTOUT) MSTOP=1 S DIE="^MPIF(984.9,",DR="[MPIF REVIEW RESET]",DA=ENT D ^DIE W " ... No Action!" Q
"RTN","MPIFREV",25,0)
 W !!," ... Done!",!!
"RTN","MPIFREV",26,0)
 D EN^RGEQ("MPIF RESULT",ENT)
"RTN","MPIFREV",27,0)
 S DFN=$P($G(^MPIF(984.9,ENT,0)),"^",4)
"RTN","MPIFREV",28,0)
 I $E(RESULT)="A",$P($G(^MPIF(984.9,ENT,1)),"^",3)=1
"RTN","MPIFREV",29,0)
 D SET^MPIFCMOR(DFN,+$P($G(^MPIF(984.9,ENT,0)),"^",7)),BROAD^MPIFCMOR(ENT)
"RTN","MPIFREV",30,0)
 Q
"RTN","MPIFREV",31,0)
BATCH ;Approve in batch mode
"RTN","MPIFREV",32,0)
 NEW SITE,DIR,DIRUT,IOP,MSTOP,IEN
"RTN","MPIFREV",33,0)
 I $O(^MPIF(984.9,"AC",3,0))="" W !!,"*** No request to approve ***",! Q
"RTN","MPIFREV",34,0)
 S MSTOP=0,SITE=0
"RTN","MPIFREV",35,0)
 S DIR("A")="Do you want to approve by SITE",DIR(0)="Y"
"RTN","MPIFREV",36,0)
 D ^DIR K DIR
"RTN","MPIFREV",37,0)
 Q:$D(DIRUT)
"RTN","MPIFREV",38,0)
 W !
"RTN","MPIFREV",39,0)
 I Y=0 D  Q
"RTN","MPIFREV",40,0)
 .F IEN=0:0 S IEN=$O(^MPIF(984.9,"AC",3,IEN)) Q:'IEN  S IOP=ION D EN1^MPIFREV(IEN,.MSTOP) Q:MSTOP
"RTN","MPIFREV",41,0)
 .Q
"RTN","MPIFREV",42,0)
SITE S DIC("A")="Select Site: ",DIC="^DIC(4,",DIC(0)="QEAM",DIC("S")="I $D(MPIF(984.0,""AS"",Y))" D ^DIC Q:Y<0  S SITE=+Y
"RTN","MPIFREV",43,0)
 I $O(^MPIF(984.9,"AS",SITE,3,0))="" W !!,"*** No requests to approve for this site ***",! G SITE
"RTN","MPIFREV",44,0)
 W !
"RTN","MPIFREV",45,0)
 F IEN=0:0 S IEN=$O(^MPIF(984.9,"AS",SITE,3,IEN)) Q:'IEN  S IOP=ION D EN1^MPIFREV(IEN,.MSTOP) Q:MSTOP
"RTN","MPIFREV",46,0)
 Q
"RTN","MPIFRTC")
0^72^B5305331
"RTN","MPIFRTC",1,0)
MPIFRTC ;ALB/JRP-GET ICN FROM MPI USING REAL TIME CONNECTION ;21-JAN-1997
"RTN","MPIFRTC",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFRTC",3,0)
 ;
"RTN","MPIFRTC",4,0)
GETICN(DFN) ;Get ICN from MPI using real time connection
"RTN","MPIFRTC",5,0)
 ;
"RTN","MPIFRTC",6,0)
 ;Input  : DFN - Pointer to entry in PATIENT file (#2)
"RTN","MPIFRTC",7,0)
 ;Output : ICN = Success
"RTN","MPIFRTC",8,0)
 ;         -1^Reason = Failure
"RTN","MPIFRTC",9,0)
 ;
"RTN","MPIFRTC",10,0)
 ;Check input
"RTN","MPIFRTC",11,0)
 S DFN=+$G(DFN)
"RTN","MPIFRTC",12,0)
 Q:('$D(^DPT(DFN,0))) "-1^Did not pass valid DFN"
"RTN","MPIFRTC",13,0)
 ;Declare variables
"RTN","MPIFRTC",14,0)
 N DPTZERO,CREATED,USER,INFOARR,MSG2MPI,MSG2DHCP,TMP,ICN
"RTN","MPIFRTC",15,0)
 S MSG2MPI="^TMP(""MPIFRTC"","_$J_",""MSG2MPI"")"
"RTN","MPIFRTC",16,0)
 S MSG2DHCP="^TMP(""MPIFRTC"","_$J_",""MSG2DHCP"")"
"RTN","MPIFRTC",17,0)
 S INFOARR="^TMP(""MPIFRTC"","_$J_",""INFOARR"")"
"RTN","MPIFRTC",18,0)
 K @MSG2MPI,@MSG2DHCP,@INFOARR
"RTN","MPIFRTC",19,0)
 ;Determine user that created patient and date/time patient was created
"RTN","MPIFRTC",20,0)
 S DPTZERO=$G(^DPT(DFN,0))
"RTN","MPIFRTC",21,0)
 S USER=+$P(DPTZERO,"^",15)
"RTN","MPIFRTC",22,0)
 S:('USER) USER=+$G(DUZ)
"RTN","MPIFRTC",23,0)
 S CREATED=+$P(DPTZERO,"^",16)
"RTN","MPIFRTC",24,0)
 S:('CREATED) CREATED=$$NOW^XLFDT()
"RTN","MPIFRTC",25,0)
 ;Set up extra info array for message builder
"RTN","MPIFRTC",26,0)
 ; - Event reason code (EVN segment, seq #4)
"RTN","MPIFRTC",27,0)
 S @INFOARR@("REASON",1)=94
"RTN","MPIFRTC",28,0)
 ; - Operator (EVN segment, seq #5)
"RTN","MPIFRTC",29,0)
 S @INFOARR@("USER")=$P($G(^VA(200,USER,0)),"^",1)
"RTN","MPIFRTC",30,0)
 ;Build MSH segment for ADT-A28 HL7 message
"RTN","MPIFRTC",31,0)
 D BLDMSH("A28","MPI","200M",MSG2MPI,1)
"RTN","MPIFRTC",32,0)
 ;Build rest of ADT-A28 HL7 message
"RTN","MPIFRTC",33,0)
 S TMP=$$BLDMSG^VAFCMSG1(DFN,"A28",CREATED,INFOARR,MSG2MPI,2)
"RTN","MPIFRTC",34,0)
 ;Send ADT-A28 HL7 message to MPI using real time connection
"RTN","MPIFRTC",35,0)
 S TMP=$$EN^HLCSAC("MPIVA DIR",MSG2MPI,MSG2DHCP)
"RTN","MPIFRTC",36,0)
 Q:(TMP<0) TMP
"RTN","MPIFRTC",37,0)
 ;Process ADT-A31 HL7 message returned by MPI (contains ICN assignment)
"RTN","MPIFRTC",38,0)
 S ICN=$$PROCESS^MPIFA31I(MSG2DHCP)
"RTN","MPIFRTC",39,0)
 ;Done - Clean up and return ICN
"RTN","MPIFRTC",40,0)
 K @MSG2MPI,@MSG2DHCP,@INFOARR
"RTN","MPIFRTC",41,0)
 Q ICN
"RTN","MPIFRTC",42,0)
 ;
"RTN","MPIFRTC",43,0)
BLDMSH(EVNTHL7,RCVAPP,RCVFAC,ARRAY,LINE) ;Build MSH segment for ADT
"RTN","MPIFRTC",44,0)
 ; HL7 message
"RTN","MPIFRTC",45,0)
 ;
"RTN","MPIFRTC",46,0)
 ;Input  : EVNTHL7 - HL7 ADT event to build MSH segment for A28
"RTN","MPIFRTC",47,0)
 ;                   (Defaults to A28)
"RTN","MPIFRTC",48,0)
 ;         RCVAPP - Text to use as RECEIVING APPLICATION (seq #5)
"RTN","MPIFRTC",49,0)
 ;         RCVFAC - Text to use as RECEIVING FACILITY (seq #6)
"RTN","MPIFRTC",50,0)
 ;         ARRAY - Array to store MSH segment in (full global reference)
"RTN","MPIFRTC",51,0)
 ;                 (Defaults to ^TMP("MPIFRTC",$J,"MSH"))
"RTN","MPIFRTC",52,0)
 ;         LINE - Line number in ARRAY to store MSH segment in
"RTN","MPIFRTC",53,0)
 ;                Can not be zero or negative number (defaults to 1)
"RTN","MPIFRTC",54,0)
 ;Output : None
"RTN","MPIFRTC",55,0)
 ;         ARRAY() will be in the following format
"RTN","MPIFRTC",56,0)
 ;           ARRAY(LINE) = MSH segment
"RTN","MPIFRTC",57,0)
 ;           ARRAY(LINE,1) = First continuation node
"RTN","MPIFRTC",58,0)
 ;           ARRAY(LINE,n) = Nth continuation node
"RTN","MPIFRTC",59,0)
 ;Notes  : ARRAY(LINE) will be initialized (KILLed) on input
"RTN","MPIFRTC",60,0)
 ;       : ARRAY(LINE) will not be defined on bad input
"RTN","MPIFRTC",61,0)
 ;       : SENDING APPLICATION (seq #3) and SENDING FACILITY (seq #4)
"RTN","MPIFRTC",62,0)
 ;         are based on the application attached to the PIMS ADT-xxx
"RTN","MPIFRTC",63,0)
 ;         HL7 Server Protocol
"RTN","MPIFRTC",64,0)
 ;
"RTN","MPIFRTC",65,0)
 ;Check input
"RTN","MPIFRTC",66,0)
 S EVNTHL7=$G(EVNTHL7)
"RTN","MPIFRTC",67,0)
 S:(EVNTHL7="") EVNTHL7="A28"
"RTN","MPIFRTC",68,0)
 S RCVAPP=$G(RCVAPP)
"RTN","MPIFRTC",69,0)
 S RCVFAC=$G(RCVFAC)
"RTN","MPIFRTC",70,0)
 S ARRAY=$G(ARRAY)
"RTN","MPIFRTC",71,0)
 S:(ARRAY="") ARRAY="^TMP(""MPIFRTC"","_$J_",""MSH"")"
"RTN","MPIFRTC",72,0)
 S LINE=+$G(LINE)
"RTN","MPIFRTC",73,0)
 S:(LINE<1) LINE=1
"RTN","MPIFRTC",74,0)
 ;Declare variables
"RTN","MPIFRTC",75,0)
 N HLEID,HL,TMPMSHAR
"RTN","MPIFRTC",76,0)
 ;Inintialize output array
"RTN","MPIFRTC",77,0)
 K @ARRAY@(LINE)
"RTN","MPIFRTC",78,0)
 ;Get pointer to ADT-xxx HL7 Server Protocol
"RTN","MPIFRTC",79,0)
 S HLEID=$$GETSRVR^VAFCMSG5(EVNTHL7)
"RTN","MPIFRTC",80,0)
 ;Initialize HL7 variables
"RTN","MPIFRTC",81,0)
 D INIT^HLFNC2(HLEID,.HL)
"RTN","MPIFRTC",82,0)
 ;Build MSH segment for ADT-xxx HL7 message
"RTN","MPIFRTC",83,0)
 D MSH^HLFNC2(.HL,"",.TMPMSHAR)
"RTN","MPIFRTC",84,0)
 ;Manually set RECEIVING APPLICATION (seq #5)
"RTN","MPIFRTC",85,0)
 S $P(TMPMSHAR,HL("FS"),5)=RCVAPP
"RTN","MPIFRTC",86,0)
 ;Manually set RECEIVING FACILITY (seq #6)
"RTN","MPIFRTC",87,0)
 S $P(TMPMSHAR,HL("FS"),6)=RCVFAC
"RTN","MPIFRTC",88,0)
 ;Move MSH segment into output array
"RTN","MPIFRTC",89,0)
 S @ARRAY@(LINE)=TMPMSHAR
"RTN","MPIFRTC",90,0)
 S HL=0
"RTN","MPIFRTC",91,0)
 F  S HL=+$O(MSH(HL)) Q:('HL)  S @ARRAY@(LINE,HL)=TMPMSHAR(HL)
"RTN","MPIFRTC",92,0)
 ;Done
"RTN","MPIFRTC",93,0)
 Q
"RTN","MPIFSAQ")
0^46^B69573214
"RTN","MPIFSAQ",1,0)
MPIFSAQ ;SF/CMC-STAND ALONE QUERY ;JAN 12, 1998
"RTN","MPIFSAQ",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFSAQ",3,0)
 ;
"RTN","MPIFSAQ",4,0)
INTACTV ;Interactive standalone query - Display Only!
"RTN","MPIFSAQ",5,0)
 ;patient doesn't have to be in Patient file
"RTN","MPIFSAQ",6,0)
 ;
"RTN","MPIFSAQ",7,0)
 K DIR,X,Y
"RTN","MPIFSAQ",8,0)
 S DIR(0)="Y",DIR("B")="YES",DIR("A")="Is Patient in the PATIENT file? "
"RTN","MPIFSAQ",9,0)
 D ^DIR
"RTN","MPIFSAQ",10,0)
 G:(Y'=1)&(Y'=0) END
"RTN","MPIFSAQ",11,0)
 I Y=1 D PAT(.MPIVAR)
"RTN","MPIFSAQ",12,0)
 I Y'=1,'$D(MPIVAR) D NOPAT(.MPIVAR)
"RTN","MPIFSAQ",13,0)
 G:+$G(MPIVAR("DOB"))'>0 END
"RTN","MPIFSAQ",14,0)
 D VTQ(.MPIVAR)
"RTN","MPIFSAQ",15,0)
 K DIR,X,Y,MPIVAR
"RTN","MPIFSAQ",16,0)
 Q
"RTN","MPIFSAQ",17,0)
END ;
"RTN","MPIFSAQ",18,0)
 K DIR,X,Y,MPIVAR,DIRUT,DTOUT,DUOUT
"RTN","MPIFSAQ",19,0)
 Q
"RTN","MPIFSAQ",20,0)
 ;
"RTN","MPIFSAQ",21,0)
CLEAN(NAM) ;
"RTN","MPIFSAQ",22,0)
 ;NAM is the name to be cleaned up
"RTN","MPIFSAQ",23,0)
 ; Returned from this function is a clean name
"RTN","MPIFSAQ",24,0)
 N YY,I
"RTN","MPIFSAQ",25,0)
 ; -- only uppercase
"RTN","MPIFSAQ",26,0)
 I NAM?.E1L.E F I=1:1:$L(NAM) S:$E(NAM,I)?1L NAM=$E(NAM,0,I-1)_$C($A(NAM,I)-32)_$E(NAM,I+1,$L(NAM))
"RTN","MPIFSAQ",27,0)
 ; -- no space after comma and no double spaces
"RTN","MPIFSAQ",28,0)
 F YY=", ","  " F  Q:'$F(NAM,YY)  S NAM=$E(NAM,1,($F(NAM,YY)-2))_$E(NAM,$F(NAM,YY),$L(NAM))
"RTN","MPIFSAQ",29,0)
 ; -- no space at the end
"RTN","MPIFSAQ",30,0)
 F  Q:$E(NAM,$L(NAM))'=" "  S NAM=$E(NAM,1,$L(NAM)-1)
"RTN","MPIFSAQ",31,0)
 Q NAM
"RTN","MPIFSAQ",32,0)
 ;
"RTN","MPIFSAQ",33,0)
PAT(MPIVAR) ;
"RTN","MPIFSAQ",34,0)
 ;patient is in local Patient file
"RTN","MPIFSAQ",35,0)
PATA N DIC,X,Y,DIQ,DR,DA,ARRAY,DFN,DTOUT,DUOUT
"RTN","MPIFSAQ",36,0)
 S DIC="^DPT(",DIC(0)="AEQZM",DIC("A")="Patient Name: "
"RTN","MPIFSAQ",37,0)
 D ^DIC
"RTN","MPIFSAQ",38,0)
 G:$D(DTOUT)!($D(DUOUT)) END
"RTN","MPIFSAQ",39,0)
 I +Y=-1 W !,"Patient not found.  Try Again" G PATA
"RTN","MPIFSAQ",40,0)
 S (DFN,MPIVAR("DFN"))=+Y,MPIVAR("NM")=$P(Y(0),"^")
"RTN","MPIFSAQ",41,0)
 S DIQ="ARRAY",DR=".09;.03",DIC="^DPT(",DA=+Y,DIQ(0)="I"
"RTN","MPIFSAQ",42,0)
 D EN^DIQ1
"RTN","MPIFSAQ",43,0)
 S MPIVAR("DOB")=$G(ARRAY(2,DFN,.03,"I"))
"RTN","MPIFSAQ",44,0)
 S MPIVAR("SSN")=$G(ARRAY(2,DFN,.09,"I")) I MPIVAR("SSN")["P" S MPIVAR("SSN")=""
"RTN","MPIFSAQ",45,0)
 Q
"RTN","MPIFSAQ",46,0)
 ;
"RTN","MPIFSAQ",47,0)
NOPAT(MPIVAR) ;
"RTN","MPIFSAQ",48,0)
 ; patient is not in the local Patient file
"RTN","MPIFSAQ",49,0)
NAME N DTOUT,DUOUT,DIR,X,Y
"RTN","MPIFSAQ",50,0)
 S DIR(0)="FU^::",DIR("A")="PATIENT NAME (last,first middle)"
"RTN","MPIFSAQ",51,0)
 D ^DIR
"RTN","MPIFSAQ",52,0)
 G:$D(DTOUT)!($D(DUOUT)) END
"RTN","MPIFSAQ",53,0)
 I (Y="")!($L(Y)>45)!($L(Y)<3) W !,"Name should be Last,first middle and at least 3 characters and no more than 30" G NAME
"RTN","MPIFSAQ",54,0)
 I (Y?1P.E)!(Y'?1U.ANP)!(Y'[",")!(Y[":")!(Y[";") W !,"Name should be Last,first middle and at least 3 characters and no more than 30" G NAME
"RTN","MPIFSAQ",55,0)
 I Y'?.UNP F %=1:1:$L(Y) I $E(Y,%)?1L S Y=$E(Y,0,%-1)_$C($A(Y,%)-32)_$E(Y,%+1,999)
"RTN","MPIFSAQ",56,0)
 S MPIVAR("NM")=$$CLEAN(Y)
"RTN","MPIFSAQ",57,0)
 ;
"RTN","MPIFSAQ",58,0)
DOB K DIR,X,Y
"RTN","MPIFSAQ",59,0)
 S DIR(0)="DU^::AE",DIR("A")="Date of Birth"
"RTN","MPIFSAQ",60,0)
 D ^DIR
"RTN","MPIFSAQ",61,0)
 G:$D(DTOUT)!($D(DUOUT)) END
"RTN","MPIFSAQ",62,0)
 S MPIVAR("DOB")=Y
"RTN","MPIFSAQ",63,0)
SSN ; ssn is optional
"RTN","MPIFSAQ",64,0)
 K DIR,X,Y
"RTN","MPIFSAQ",65,0)
 S DIR(0)="FUO^9:9:",DIR("A")="9 Digit SSN (No Dashes)"
"RTN","MPIFSAQ",66,0)
 D ^DIR
"RTN","MPIFSAQ",67,0)
 G:$D(DTOUT)!($D(DUOUT)) END
"RTN","MPIFSAQ",68,0)
 I Y'="",Y'?9N W !,"SSN should be 9 numbers" G SSN
"RTN","MPIFSAQ",69,0)
 S MPIVAR("SSN")=Y
"RTN","MPIFSAQ",70,0)
 Q
"RTN","MPIFSAQ",71,0)
 ;
"RTN","MPIFSAQ",72,0)
VTQ(MPIVAR) ;
"RTN","MPIFSAQ",73,0)
 I $$SEND^RGJUSITE'>0 W !,"Not in SEND or SUSPEND mode, Try Again Later" G END
"RTN","MPIFSAQ",74,0)
 N TIME,%
"RTN","MPIFSAQ",75,0)
 D NOW^%DTC S TIME=%
"RTN","MPIFSAQ",76,0)
 ;
"RTN","MPIFSAQ",77,0)
 W !!,"Attempting to connect to the Master Patient Index in Austin..."
"RTN","MPIFSAQ",78,0)
 ;
"RTN","MPIFSAQ",79,0)
 N HL,MPIQRYNM,MPIINM,MPIOUT,MPIIN,MPIMCNT,MPICNT,MPICS,HEADER
"RTN","MPIFSAQ",80,0)
 N TEST,SITE,RGDC,MPINM,MPI1NM,MPI2NM,MPIESC,MPIHDOB,MPIRS,MPISCS
"RTN","MPIFSAQ",81,0)
 N QUEDDOB,QUERY,RDF
"RTN","MPIFSAQ",82,0)
 S HL("ECH")="^~\&",HL("FS")="|",MPIQRYNM="VTQ_PID_ICN"
"RTN","MPIFSAQ",83,0)
 S MPIIN="",MPICNT=1
"RTN","MPIFSAQ",84,0)
 S MPICS=$E(HL("ECH"),1)
"RTN","MPIFSAQ",85,0)
 I '$D(MPIVAR("DFN")) S MPIVAR("DFN")=235
"RTN","MPIFSAQ",86,0)
 S MPIMCNT=MPIVAR("DFN")
"RTN","MPIFSAQ",87,0)
 ;
"RTN","MPIFSAQ",88,0)
 ;SETUP VTQ
"RTN","MPIFSAQ",89,0)
 ;
"RTN","MPIFSAQ",90,0)
 S MPICS=$E(HL("ECH"),1),MPIRS=$E(HL("ECH"),2),MPISCS=$E(HL("ECH"),4),MPIESC=$E(HL("ECH"),3)
"RTN","MPIFSAQ",91,0)
 ;
"RTN","MPIFSAQ",92,0)
 S RDF="RDF"_HL("FS")_"15"_HL("FS")_"@00108.1"_MPICS_"ST"_MPICS_"16"_MPIRS_"@00122"_MPICS_"ST"_MPICS_"9"_MPIRS_"@00110"_MPICS_"TS"_MPICS_8_MPIRS_"@00756"_MPICS_"ST"_MPICS_30
"RTN","MPIFSAQ",93,0)
 S RDF=RDF_MPIRS_"@00105"_MPICS_"ST"_MPICS_19_MPIRS_"@00108.2"_MPICS_"ST"_MPICS_"16"_MPIRS_"@00169"_MPICS_"ST"_MPICS_30_MPIRS_"@00740"_MPICS_"TS"_MPICS_8
"RTN","MPIFSAQ",94,0)
 S RDF=RDF_MPIRS_"@00108.3"_MPICS_"ST"_MPICS_16_MPIRS_"@00111"_MPICS_"ST"_MPICS_1_MPIRS_"@00126.1"_MPICS_"ST"_MPICS_30_MPIRS_"@00126.2"_MPICS_"ST"_MPICS_3
"RTN","MPIFSAQ",95,0)
 S RDF=RDF_MPIRS_"@00108.5"_MPICS_"ST"_MPICS_20_MPIRS_"@00108.4"_MPICS_"ST"_MPICS_20_MPIRS_"@00109.1"_MPICS_"ST"_MPICS_30
"RTN","MPIFSAQ",96,0)
 ; ^ fields to be returned in query response
"RTN","MPIFSAQ",97,0)
 S QUERY="VTQ"_HL("FS")_$G(MPIVAR("DFN"))_HL("FS")_"T"_HL("FS")_MPIQRYNM_HL("FS")_"ICN"_HL("FS")
"RTN","MPIFSAQ",98,0)
 S MPI2NM=$P($G(MPIVAR("NM")),",",1),QUERY=QUERY_"@00108.1"_MPICS_"EQ"_MPICS_MPI2NM
"RTN","MPIFSAQ",99,0)
 ; ^ sending last name
"RTN","MPIFSAQ",100,0)
 I MPIVAR("SSN")'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00122"_MPICS_"EQ"_MPICS_$G(MPIVAR("SSN"))
"RTN","MPIFSAQ",101,0)
 ; ^ sending SSN
"RTN","MPIFSAQ",102,0)
 S MPI1NM=$P($G(MPIVAR("NM")),",",2),MPI1NM=$P(MPI1NM," ",1) I MPI1NM'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.2"_MPICS_"EQ"_MPICS_MPI1NM
"RTN","MPIFSAQ",103,0)
 ; ^ sending first name
"RTN","MPIFSAQ",104,0)
 I $G(MPIVAR("DOB"))>0 D
"RTN","MPIFSAQ",105,0)
 .S MPIHDOB=$$HLDATE^HLFNC(MPIVAR("DOB"))
"RTN","MPIFSAQ",106,0)
 .; send date of birth (convert to hl7 date format)
"RTN","MPIFSAQ",107,0)
 .S QUEDDOB=MPICS_"AND"_MPIRS_"@00110"_MPICS_"EQ"_MPICS_MPIHDOB
"RTN","MPIFSAQ",108,0)
 .S QUERY=QUERY_QUEDDOB
"RTN","MPIFSAQ",109,0)
 .; ^ sending date of birth
"RTN","MPIFSAQ",110,0)
 ;
"RTN","MPIFSAQ",111,0)
 ;Create MSH
"RTN","MPIFSAQ",112,0)
 ;
"RTN","MPIFSAQ",113,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1
"RTN","MPIFSAQ",114,0)
 S HEADER="MSH"_HL("FS")_HL("ECH")_HL("FS")_"MPI_LOAD"_HL("FS")_SITE_HL("FS")
"RTN","MPIFSAQ",115,0)
 S HEADER=HEADER_"MPI-ICN"_HL("FS")_HL("FS")_HL("FS")_HL("FS")_"VTQ"_MPICS_"Q02"_HL("FS")_MPIMCNT_"-"_MPICNT_HL("FS")
"RTN","MPIFSAQ",116,0)
 S MPIOUT(1)=HEADER K MPIOUT(0)
"RTN","MPIFSAQ",117,0)
 S MPIOUT(2)=QUERY
"RTN","MPIFSAQ",118,0)
 S MPIOUT(3)=RDF
"RTN","MPIFSAQ",119,0)
 ;
"RTN","MPIFSAQ",120,0)
 ;Attempt to connect to MPI and send message,receive message.
"RTN","MPIFSAQ",121,0)
 ;Message is returned in RGDC array
"RTN","MPIFSAQ",122,0)
 ;
"RTN","MPIFSAQ",123,0)
 K RGDC
"RTN","MPIFSAQ",124,0)
 S TEST=$$EN^HLCSAC("MPIVA DIR","MPIOUT","RGDC")
"RTN","MPIFSAQ",125,0)
 ;
"RTN","MPIFSAQ",126,0)
 I +TEST=-1 W !!,"Could not connect to MPI, try again later." G EXIT
"RTN","MPIFSAQ",127,0)
 ;
"RTN","MPIFSAQ",128,0)
 ;Kill ^TMP("MPIFSAQ",$J) this is the array the data is parsed into
"RTN","MPIFSAQ",129,0)
 K ^TMP("MPIFSAQ",$J)
"RTN","MPIFSAQ",130,0)
 ;
"RTN","MPIFSAQ",131,0)
INIPARS ;
"RTN","MPIFSAQ",132,0)
 N SEG,INDEX,COUNTER,LASTSSN,SKIP,CHECK
"RTN","MPIFSAQ",133,0)
 S INDEX=0,COUNTER=1
"RTN","MPIFSAQ",134,0)
 K CHECK
"RTN","MPIFSAQ",135,0)
PARSE ;
"RTN","MPIFSAQ",136,0)
 S SEG=$$SEG^RGRSUTIL("RDT",1,"RDT")
"RTN","MPIFSAQ",137,0)
 I $G(SEG)'="" D  G PARSE
"RTN","MPIFSAQ",138,0)
 . N LASTNAME,FRSTNAME,SSN,BIRTHDAY,CMOR,NAME,TF,ICN,POBC,POBS,PAST
"RTN","MPIFSAQ",139,0)
 . N HEREICN,HERESSN,MIDDLE,MNAME,SUFFIX,PREFIX,SEX,IEN,CMOR2,TF2
"RTN","MPIFSAQ",140,0)
 . S FRSTNAME=$P(SEG,HL("FS"),7)
"RTN","MPIFSAQ",141,0)
 . S LASTNAME=$P(SEG,HL("FS"),2)
"RTN","MPIFSAQ",142,0)
 . S MIDDLE=$P(SEG,HL("FS"),10)
"RTN","MPIFSAQ",143,0)
 . S (LASTSSN,SSN)=$P(SEG,HL("FS"),3)
"RTN","MPIFSAQ",144,0)
 . S NAME=LASTNAME_","_FRSTNAME_" "_MIDDLE
"RTN","MPIFSAQ",145,0)
 . S CMOR=$P(SEG,HL("FS"),5),CMOR2=CMOR
"RTN","MPIFSAQ",146,0)
 . I $G(CMOR)'="" S IEN=$$LKUP^XUAF4(CMOR) I IEN'="" S CMOR=$P($$NS^XUAF4(+IEN),"^"),CMOR2=CMOR
"RTN","MPIFSAQ",147,0)
 . S TF=$P(SEG,HL("FS"),8),TF2=TF
"RTN","MPIFSAQ",148,0)
 . I $G(TF)'="" S IEN=$$LKUP^XUAF4(TF) I IEN>0 S TF=$P($$NS^XUAF4(+IEN),"^")
"RTN","MPIFSAQ",149,0)
 . ;
"RTN","MPIFSAQ",150,0)
 . ;Same patient just adding TF's
"RTN","MPIFSAQ",151,0)
 . I TF'="",NAME_"^"_SSN=$P($G(^TMP("MPIFSAQ",$J,INDEX,"DATA")),"^",0,2) D
"RTN","MPIFSAQ",152,0)
 . . S SKIP="Y"
"RTN","MPIFSAQ",153,0)
 . . Q:CMOR2=TF2!($D(CHECK(TF2)))
"RTN","MPIFSAQ",154,0)
 . . S COUNTER=COUNTER+1
"RTN","MPIFSAQ",155,0)
 . . S ^TMP("MPIFSAQ",$J,INDEX,COUNTER)=TF,CHECK(TF2)=""
"RTN","MPIFSAQ",156,0)
 . ;
"RTN","MPIFSAQ",157,0)
 . I $D(SKIP) K SKIP Q
"RTN","MPIFSAQ",158,0)
 . S BIRTHDAY=$P(SEG,HL("FS"),4)
"RTN","MPIFSAQ",159,0)
 . S ICN=$P(SEG,HL("FS"),6)
"RTN","MPIFSAQ",160,0)
 . I $G(LASTNAME)="" Q
"RTN","MPIFSAQ",161,0)
 . I $G(BIRTHDAY)]"" D
"RTN","MPIFSAQ",162,0)
 . . S BIRTHDAY=$$FMDATE^HLFNC(BIRTHDAY)
"RTN","MPIFSAQ",163,0)
 . . S BIRTHDAY=$$IN2EXDT^VAFCMGU0(BIRTHDAY,0)
"RTN","MPIFSAQ",164,0)
 . S SEX=$P(SEG,HL("FS"),11)
"RTN","MPIFSAQ",165,0)
 . S SUFFIX=$P(SEG,HL("FS"),15)
"RTN","MPIFSAQ",166,0)
 . S PREFIX=$P(SEG,HL("FS"),14)
"RTN","MPIFSAQ",167,0)
 . S MNAME=$P(SEG,HL("FS"),16)
"RTN","MPIFSAQ",168,0)
 . S POBC=$P(SEG,HL("FS"),12)
"RTN","MPIFSAQ",169,0)
 . S POBS=$P(SEG,HL("FS"),13)
"RTN","MPIFSAQ",170,0)
 . S PAST=$P(SEG,HL("FS"),9)
"RTN","MPIFSAQ",171,0)
 . ;
"RTN","MPIFSAQ",172,0)
 . ;New pt. so incrementing index and resetting counter
"RTN","MPIFSAQ",173,0)
 . ;
"RTN","MPIFSAQ",174,0)
 . S INDEX=INDEX+1
"RTN","MPIFSAQ",175,0)
 . S COUNTER=1
"RTN","MPIFSAQ",176,0)
 . I CMOR2=TF2 S TF=""
"RTN","MPIFSAQ",177,0)
 . S ^TMP("MPIFSAQ",$J,INDEX,"DATA")=NAME_"^"_SSN_"^"_BIRTHDAY_"^"_ICN_"^"_CMOR_"^"_TF_"^"_SEX_"^"_SUFFIX_"^"_PREFIX_"^"_MNAME_"^"_POBC_"^"_POBS_"^"_PAST
"RTN","MPIFSAQ",178,0)
 ;
"RTN","MPIFSAQ",179,0)
 ; If no data in ^TMP that means the patient was not found in the MPI
"RTN","MPIFSAQ",180,0)
 I '$D(^TMP("MPIFSAQ",$J)) W !!,"Patient was not found in the MPI." G EXIT
"RTN","MPIFSAQ",181,0)
 ;
"RTN","MPIFSAQ",182,0)
DISPLAY ;
"RTN","MPIFSAQ",183,0)
 I INDEX>1 W !!,"Found potential matches"
"RTN","MPIFSAQ",184,0)
 I INDEX=1 W !!,"Found One Match"
"RTN","MPIFSAQ",185,0)
 ; display data returned
"RTN","MPIFSAQ",186,0)
 N CNT1,CNT2,STOP,CNTR2,TTF,CNT3,DIR,X,Y,DATA
"RTN","MPIFSAQ",187,0)
 S (CNT1)=0
"RTN","MPIFSAQ",188,0)
 F  S CNT1=$O(^TMP("MPIFSAQ",$J,CNT1)) Q:CNT1'>0!($D(STOP))  D
"RTN","MPIFSAQ",189,0)
 . S CNTR2=0
"RTN","MPIFSAQ",190,0)
 . I CNT1>1 D
"RTN","MPIFSAQ",191,0)
 . . K DIR,X,Y
"RTN","MPIFSAQ",192,0)
 . . S DIR(0)="Y",DIR("B")="YES",DIR("A")="Continue to next Patient? "
"RTN","MPIFSAQ",193,0)
 . . D ^DIR
"RTN","MPIFSAQ",194,0)
 . . I Y'=1 S STOP=""
"RTN","MPIFSAQ",195,0)
 . Q:$D(STOP)
"RTN","MPIFSAQ",196,0)
 . S CNTR2=CNTR2+1
"RTN","MPIFSAQ",197,0)
 . S DATA=$G(^TMP("MPIFSAQ",$J,CNT1,"DATA"))
"RTN","MPIFSAQ",198,0)
 . Q:DATA=""
"RTN","MPIFSAQ",199,0)
 . K TF,CHECK
"RTN","MPIFSAQ",200,0)
 . S NAME=$P(DATA,"^"),SSN=$P(DATA,"^",2),BIRTHDAY=$P(DATA,"^",3)
"RTN","MPIFSAQ",201,0)
 . S ICN=$P(DATA,"^",4),CMOR=$P(DATA,"^",5)
"RTN","MPIFSAQ",202,0)
 . S TTF=$P(DATA,"^",6)
"RTN","MPIFSAQ",203,0)
 . I TTF'="",CMOR'=TTF S TF(CNTR2)=TTF
"RTN","MPIFSAQ",204,0)
 . S SEX=$P(DATA,"^",7),SUFFIX=$P(DATA,"^",8),PREFIX=$P(DATA,"^",9)
"RTN","MPIFSAQ",205,0)
 . S MNAME=$P(DATA,"^",10),POBC=$P(DATA,"^",11),POBS=$P(DATA,"^",12)
"RTN","MPIFSAQ",206,0)
 . S PAST=$P(DATA,"^",13)
"RTN","MPIFSAQ",207,0)
 . S CNT3=""
"RTN","MPIFSAQ",208,0)
 . F  S CNT3=$O(^TMP("MPIFSAQ",$J,CNT1,CNT3)) Q:CNT3<0!(CNT3'?.N)  D
"RTN","MPIFSAQ",209,0)
 . . S TTF=$G(^TMP("MPIFSAQ",$J,CNT1,CNT3))
"RTN","MPIFSAQ",210,0)
 . . I TTF'=CMOR S CNTR2=CNTR2+1,TF(CNTR2)=TTF
"RTN","MPIFSAQ",211,0)
 . W !!!,"Name: ",NAME," ",SUFFIX," ",PREFIX
"RTN","MPIFSAQ",212,0)
 . W !,"SSN: ",SSN,?25,"Gender: ",SEX
"RTN","MPIFSAQ",213,0)
 . W !,"Integration Control Number (ICN): ",$P(ICN,"V")
"RTN","MPIFSAQ",214,0)
 . W !,"Date of Birth: ",BIRTHDAY,?30,"Date of Death: ",PAST
"RTN","MPIFSAQ",215,0)
 . W:$G(POBC)'="" !,"Place of Birth: ",POBC,", ",POBS
"RTN","MPIFSAQ",216,0)
 . W !,"CMOR: ",CMOR
"RTN","MPIFSAQ",217,0)
 . S CNT2=""
"RTN","MPIFSAQ",218,0)
 . F  S CNT2=$O(TF(CNT2)) Q:CNT2=""  D
"RTN","MPIFSAQ",219,0)
 . . W !?10,"Treating Facility: ",TF(CNT2)
"RTN","MPIFSAQ",220,0)
 .W !!
"RTN","MPIFSAQ",221,0)
 Q
"RTN","MPIFSAQ",222,0)
EXIT ;
"RTN","MPIFSAQ",223,0)
 H 3
"RTN","MPIFSAQ",224,0)
 W !!
"RTN","MPIFSPC")
0^45^B1359691
"RTN","MPIFSPC",1,0)
MPIFSPC ;SLC/ARS-MASTER PATIENT INDEX SYSTEM CHECK SUM RTN ;SEP 4, 1996
"RTN","MPIFSPC",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFSPC",3,0)
 ;MPICHECK
"RTN","MPIFSPC",4,0)
CHECKDG(NUM) ;Check Digit Calculation
"RTN","MPIFSPC",5,0)
 ;change to local array of MPI global.
"RTN","MPIFSPC",6,0)
 D EXIN
"RTN","MPIFSPC",7,0)
 K I,J,LTH,MPID,MPIMAP,MPIT,TAB,VAL
"RTN","MPIFSPC",8,0)
 N TMP
"RTN","MPIFSPC",9,0)
 S TMP=SUM K SUM
"RTN","MPIFSPC",10,0)
 Q TMP
"RTN","MPIFSPC",11,0)
READ ;
"RTN","MPIFSPC",12,0)
 ;
"RTN","MPIFSPC",13,0)
EXIN ;
"RTN","MPIFSPC",14,0)
 I $L(NUM)'=16 D
"RTN","MPIFSPC",15,0)
 .; W !,"I WILL PAD TO 16!"
"RTN","MPIFSPC",16,0)
 .S LTH=($L(NUM)+1) F I=LTH:1:16 S NUM="0"_NUM
"RTN","MPIFSPC",17,0)
 F MPIT=1:1:6  D
"RTN","MPIFSPC",18,0)
 .; For each check digit, compute a value
"RTN","MPIFSPC",19,0)
 .F MPID=1:1:16  D
"RTN","MPIFSPC",20,0)
 ..S MPIMAP(MPIT,0,"MAP")=0
"RTN","MPIFSPC",21,0)
 ..S MPIMAP(MPIT,MPID)=$E(NUM,MPID),VAL=MPIMAP(MPIT,MPID)
"RTN","MPIFSPC",22,0)
 ..S SUM=(MPIMAP(MPIT,MPID)+(MPIMAP(MPIT,MPID-1,"MAP")))#10
"RTN","MPIFSPC",23,0)
 ..S MPIMAP(MPIT,MPID,"MAP")=$P($P(^MPIF(984.5,MPIT,SUM),"^",2),";",MPID)
"RTN","MPIFSPC",24,0)
 .S TAB(MPIT)=MPIMAP(MPIT,16,"MAP")
"RTN","MPIFSPC",25,0)
 .Q
"RTN","MPIFSPC",26,0)
 S SUM=""
"RTN","MPIFSPC",27,0)
 F J=1:1:6  D
"RTN","MPIFSPC",28,0)
 .S SUM=SUM_TAB(J)
"RTN","MPIFSPC",29,0)
 Q 
"RTN","MPIFSPC",30,0)
 ;
"RTN","MPIFSPC",31,0)
 ;Before calculation of check digits the number must be
"RTN","MPIFSPC",32,0)
 ;expanded to sixteen digits by padding zeros to the
"RTN","MPIFSPC",33,0)
 ;left of the number.
"RTN","MPIFUTL")
0^70^B7092487
"RTN","MPIFUTL",1,0)
MPIFUTL ;BHM/RGY-CMOR Utilities ;FEB 26, 1998
"RTN","MPIFUTL",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFUTL",3,0)
TYPE ;Set type of CMOR request change
"RTN","MPIFUTL",4,0)
 NEW DIE,DR,DA
"RTN","MPIFUTL",5,0)
 S DIE="^RGSITE(991.8,",DR="[MPIF SITE PARAMETERS]",DA=1 D ^DIE
"RTN","MPIFUTL",6,0)
 Q
"RTN","MPIFUTL",7,0)
MAIL() ;Get mailgroup for new requests
"RTN","MPIFUTL",8,0)
 N IEN,MGROUP
"RTN","MPIFUTL",9,0)
 S IEN=$P($G(^RGSITE(991.8,1,0)),"^",3)
"RTN","MPIFUTL",10,0)
 Q:IEN="" "-1^No Mailgroup defined"
"RTN","MPIFUTL",11,0)
 S MGROUP=$$EXTERNAL^DILFD(991.8,.03,,IEN)
"RTN","MPIFUTL",12,0)
 Q:MGROUP="" "-1^No Mailgroup defined"
"RTN","MPIFUTL",13,0)
 Q MGROUP
"RTN","MPIFUTL",14,0)
CHK1(D0) ;Check out a new request for patient data
"RTN","MPIFUTL",15,0)
 NEW PAT,X,OPEN
"RTN","MPIFUTL",16,0)
 S OPEN=0
"RTN","MPIFUTL",17,0)
 S PAT=+$P($G(^MPIF(984.9,D0,0)),"^",4)
"RTN","MPIFUTL",18,0)
 I PAT=0 W !!,"*** Patient not defined for this request ***" Q 1
"RTN","MPIFUTL",19,0)
 I '$$PAT^MPIFNQ(PAT) W !!,"*** Patient has not been assigned a CMOR Site ***",! Q 1
"RTN","MPIFUTL",20,0)
 F X=0:0 S X=$O(^MPIF(984.9,"C",PAT,X)) Q:'X  D:X'=D0  Q:OPEN
"RTN","MPIFUTL",21,0)
 .I $P(^MPIF(984.9,X,0),"^",6)'=4,$P(^(0),"^",6)'=5 S OPEN=X
"RTN","MPIFUTL",22,0)
 I OPEN W !,"*** Patient already has an open request (",$P(^MPIF(984.9,OPEN,0),"^"),") ***" Q 1
"RTN","MPIFUTL",23,0)
 Q 0
"RTN","MPIFUTL",24,0)
 ;
"RTN","MPIFUTL",25,0)
CHK3(PAT) ; Does patient have an open and edittable request
"RTN","MPIFUTL",26,0)
 N XX,OPEN,REQ
"RTN","MPIFUTL",27,0)
 S OPEN=0
"RTN","MPIFUTL",28,0)
 K REQ
"RTN","MPIFUTL",29,0)
 I '$$PAT^MPIFNQ(PAT) W !!,"*** Patient has not been assigned a CMOR Site ***",! Q 0
"RTN","MPIFUTL",30,0)
 F XX=0:0 S XX=$O(^MPIF(984.9,"C",PAT,XX)) Q:'XX  D  Q:OPEN!($D(REQ))
"RTN","MPIFUTL",31,0)
 .I $P(^MPIF(984.9,XX,0),"^",6)'=1 S OPEN=1
"RTN","MPIFUTL",32,0)
 .I $P(^MPIF(984.9,XX,0),"^",6)=1 S REQ=XX
"RTN","MPIFUTL",33,0)
 I OPEN W !,"*** Patient has an open request that has already been sent, can not edit request (",$P(^MPIF(984.9,OPEN,0),"^"),") ***" Q 0
"RTN","MPIFUTL",34,0)
 I '$D(REQ) Q 0
"RTN","MPIFUTL",35,0)
 Q REQ
"RTN","MPIFUTL",36,0)
 ;
"RTN","MPIFUTL",37,0)
CHK2(D0) ;Check out a new requeste for site
"RTN","MPIFUTL",38,0)
 I $P(^MPIF(984.9,D0,0),"^",7)="" W !!,"*** You must enter a site to send this request to ***" Q 1
"RTN","MPIFUTL",39,0)
 I $P(^MPIF(984.9,D0,0),"^",7)=+$$SITE^VASITE() W !!,"*** You cannot send a request to your own site ***" Q 1
"RTN","MPIFUTL",40,0)
 N SITE,PT
"RTN","MPIFUTL",41,0)
 S SITE=$P(^MPIF(984.9,D0,0),"^",7),PT=$P(^MPIF(984.9,D0,0),"^",4)
"RTN","MPIFUTL",42,0)
 I '$D(^DGCN(391.91,"APAT",PT,SITE)) W !!,"*** You cannot send a request to a site that isn't a treating facility for this patient ***" Q 1
"RTN","MPIFUTL",43,0)
 Q 0
"RTN","MPIFVTQ")
0^44^B38777593
"RTN","MPIFVTQ",1,0)
MPIFVTQ ;SLC/ARS-BUILD DATA TO QUERY MPI RESPONSE PROCESS (ADDPAT) ;JUL 16, 1997
"RTN","MPIFVTQ",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;;30 Apr 99
"RTN","MPIFVTQ",3,0)
 ;
"RTN","MPIFVTQ",4,0)
 Q  ;NOT an entry point
"RTN","MPIFVTQ",5,0)
HLRDF D INIT^HLFNC2("MPIF-STARTUP",.MPIHL)
"RTN","MPIFVTQ",6,0)
 S SITE=$$KSP^XUPARAM("INST")
"RTN","MPIFVTQ",7,0)
 Q
"RTN","MPIFVTQ",8,0)
VTQ2(MPIIT,MPIOUT,MPIHL,MPIQRYNM,MPISND) ;
"RTN","MPIFVTQ",9,0)
 ;MPIIT=DFN in patient file.
"RTN","MPIFVTQ",10,0)
 ;MPIOUT=Array you want the VTQ/RDF put into.
"RTN","MPIFVTQ",11,0)
 ;MPIHL=Array of encoding characters and Field separator.
"RTN","MPIFVTQ",12,0)
 ;MPIQRYNM=Name of query to put into message.
"RTN","MPIFVTQ",13,0)
 ;MPISND (OPTIONAL) = item #'s separated by ; to be used to query.
"RTN","MPIFVTQ",14,0)
 ;  default is DOB;SSN;LAST NAME;FIRST NAME;SUFFIX OF NAME;SEX;DOD;
"RTN","MPIFVTQ",15,0)
 ;  POB-CITY;POB-STATE
"RTN","MPIFVTQ",16,0)
 ;
"RTN","MPIFVTQ",17,0)
 ;If invalid DFN, Patient Merged, if ICN (NOT LOCAL) already assigned, Test SSN, the VTQ query is not built and -1^'error message' returned in MPIOUT(0).
"RTN","MPIFVTQ",18,0)
 ;
"RTN","MPIFVTQ",19,0)
 ;If patient has a date of death, the VTQ query is built with MPIOUT(0) returned with 0^Patient has date of death.  Programmer to decide if VTQ should be sent.
"RTN","MPIFVTQ",20,0)
 ;
"RTN","MPIFVTQ",21,0)
 ; allows VTQ to be created for Local ICN patients.
"RTN","MPIFVTQ",22,0)
 ;
"RTN","MPIFVTQ",23,0)
 N MPITEST,MPISSN,MPIDTH
"RTN","MPIFVTQ",24,0)
 S MPIOUT(0)=""
"RTN","MPIFVTQ",25,0)
 I '$D(MPISND) S MPISND="00122;00108.1;00108.2;00110;00740;00111;00180.4;00126.1;00126.2"
"RTN","MPIFVTQ",26,0)
 ;validation check
"RTN","MPIFVTQ",27,0)
 I '$D(MPIHL) S MPIOUT(0)="-1^no encoding characters" Q
"RTN","MPIFVTQ",28,0)
 I $G(MPIHL("FS"))=""!($G(MPIHL("ECH"))="") S MPIOUT(0)="-1^no encoding characters" Q
"RTN","MPIFVTQ",29,0)
 I MPIIT="" S MPIOUT(0)="-1^invalid DFN" Q
"RTN","MPIFVTQ",30,0)
 I $G(^DPT(MPIIT,-9))'="" S MPIOUT(0)="-1^Patient merged "_^DPT(MPIIT,-9) Q
"RTN","MPIFVTQ",31,0)
 S MPIMPI=$G(^DPT(MPIIT,"MPI"))
"RTN","MPIFVTQ",32,0)
 S:MPIMPI'="" MPIZICN=$P(^DPT(MPIIT,"MPI"),"^",1),MPIZLOC=$P(^DPT(MPIIT,"MPI"),"^",4)
"RTN","MPIFVTQ",33,0)
 I $G(MPIZICN)'="",$G(MPIZLOC)'=1 S MPIOUT(0)="-1^ICN already assigned "_MPIZICN Q
"RTN","MPIFVTQ",34,0)
 S MPITEST=$G(^DPT(MPIIT,0))
"RTN","MPIFVTQ",35,0)
 I MPITEST="" S MPIOUT(0)="-1^invalid DFN" Q
"RTN","MPIFVTQ",36,0)
 S MPISSN=$P(MPITEST,"^",9)
"RTN","MPIFVTQ",37,0)
 I $E(MPISSN,1,5)="00000" S MPIOUT(0)="-1^5 zero SSN" Q
"RTN","MPIFVTQ",38,0)
 S MPIDTH=""
"RTN","MPIFVTQ",39,0)
 S:$G(^DPT(MPIIT,.35))'="" MPIDTH=$P(^DPT(MPIIT,.35),"^",1)
"RTN","MPIFVTQ",40,0)
 I $G(MPIDTH)'="" S MPIOUT(0)="0^Patient has Date of Death "_MPIDTH
"RTN","MPIFVTQ",41,0)
 D VTQC(MPISSN,MPIDTH,MPISND,.MPIHL,MPIQRYNM,.MPIOUT,MPIIT)
"RTN","MPIFVTQ",42,0)
 Q
"RTN","MPIFVTQ",43,0)
 ;
"RTN","MPIFVTQ",44,0)
VTQ1(MPIIT,MPIOUT,MPIHL,MPIQRYNM,MPISND) ;
"RTN","MPIFVTQ",45,0)
 ;MPIIT=DFN in patient file.
"RTN","MPIFVTQ",46,0)
 ;MPIOUT=Array you want the VTQ/RDF put into.
"RTN","MPIFVTQ",47,0)
 ;MPIHL=Array of encoding characters and Field separator.
"RTN","MPIFVTQ",48,0)
 ;MPIQRYNM=Name of query to put into message.
"RTN","MPIFVTQ",49,0)
 ;MPISND (OPTIONAL) = item #'s separated by ; to be used to query.
"RTN","MPIFVTQ",50,0)
 ;  default is DOB;SSN;LAST NAME;FIRST NAME;SUFFIX OF NAME;SEX;DOD;
"RTN","MPIFVTQ",51,0)
 ;  POB-CITY;POB-STATE
"RTN","MPIFVTQ",52,0)
 ;
"RTN","MPIFVTQ",53,0)
 ;If invalid DFN, Patient Merged, if ICN already assigned, Test SSN, the VTQ query is not built and -1^'error message' returned in MPIOUT(0).
"RTN","MPIFVTQ",54,0)
 ;
"RTN","MPIFVTQ",55,0)
 ;If patient has a date of death, the VTQ query is built with MPIOUT(0) returned with 0^Patient has date of death.  Programmer to decide if VTQ should be sent.
"RTN","MPIFVTQ",56,0)
 ;
"RTN","MPIFVTQ",57,0)
 N MPITEST,MPISSN,MPIDTH
"RTN","MPIFVTQ",58,0)
 S MPIOUT(0)=""
"RTN","MPIFVTQ",59,0)
 I '$D(MPISND) S MPISND="00122;00108.1;00108.2;00110;00740;00111;00180.4;00126.1;00126.2"
"RTN","MPIFVTQ",60,0)
 ;validation check
"RTN","MPIFVTQ",61,0)
 I '$D(MPIHL) S MPIOUT(0)="-1^no encoding characters" Q
"RTN","MPIFVTQ",62,0)
 I $G(MPIHL("FS"))=""!($G(MPIHL("ECH"))="") S MPIOUT(0)="-1^no encoding characters" Q
"RTN","MPIFVTQ",63,0)
 I MPIIT="" S MPIOUT(0)="-1^invalid DFN" Q
"RTN","MPIFVTQ",64,0)
 I $G(^DPT(MPIIT,-9))'="" S MPIOUT(0)="-1^Patient merged "_^DPT(MPIIT,-9) Q
"RTN","MPIFVTQ",65,0)
 S MPIMPI=$G(^DPT(MPIIT,"MPI"))
"RTN","MPIFVTQ",66,0)
 S:MPIMPI'="" MPIZICN=$P(^DPT(MPIIT,"MPI"),"^",1)
"RTN","MPIFVTQ",67,0)
 I '$D(MPIFRES),$G(MPIZICN)'="" S MPIOUT(0)="-1^ICN already assigned "_MPIZICN Q
"RTN","MPIFVTQ",68,0)
 S MPITEST=$G(^DPT(MPIIT,0))
"RTN","MPIFVTQ",69,0)
 I MPITEST="" S MPIOUT(0)="-1^invalid DFN" Q
"RTN","MPIFVTQ",70,0)
 S MPISSN=$P(MPITEST,"^",9)
"RTN","MPIFVTQ",71,0)
 I $E(MPISSN,1,5)="00000" S MPIOUT(0)="-1^5 zero SSN" Q
"RTN","MPIFVTQ",72,0)
 S MPIDTH=""
"RTN","MPIFVTQ",73,0)
 S:$G(^DPT(MPIIT,.35))'="" MPIDTH=$P(^DPT(MPIIT,.35),"^",1)
"RTN","MPIFVTQ",74,0)
 I $G(MPIDTH)'="" S MPIOUT(0)="0^Patient has Date of Death "_MPIDTH
"RTN","MPIFVTQ",75,0)
 D VTQC(MPISSN,MPIDTH,MPISND,.MPIHL,MPIQRYNM,.MPIOUT,MPIIT)
"RTN","MPIFVTQ",76,0)
 Q
"RTN","MPIFVTQ",77,0)
 ;
"RTN","MPIFVTQ",78,0)
VTQC(MPISSN,MPIDTH,MPISND,MPIHL,MPIQRYNM,MPIOUT,MPIIT) ;
"RTN","MPIFVTQ",79,0)
 N MPIPOB,MPIPOBS,MPINM,MPI2MN,MPI1NM,QUERY,MPIDOB,RDF,MPIMOD
"RTN","MPIFVTQ",80,0)
 N MPIHDTH,MPIZDOB,MPIXDOB,MPIMPI,MPIZICN,QUEDOB,MPI2NM,MPICS,MPIESC,MPIHDOB,MPIMNM
"RTN","MPIFVTQ",81,0)
 N MPINMSFX,MPIRS,MPISCS,MPISEX,MPIZLOC
"RTN","MPIFVTQ",82,0)
 I $G(MPIQRYNM)="" S MPIQRYNM="VTQ_PID_ICN_LOAD_1"
"RTN","MPIFVTQ",83,0)
 S MPICS=$E(MPIHL("ECH"),1)
"RTN","MPIFVTQ",84,0)
 S MPIRS=$E(MPIHL("ECH"),2)
"RTN","MPIFVTQ",85,0)
 S MPISCS=$E(MPIHL("ECH"),4)
"RTN","MPIFVTQ",86,0)
 S MPIESC=$E(MPIHL("ECH"),3)
"RTN","MPIFVTQ",87,0)
 ;
"RTN","MPIFVTQ",88,0)
 S RDF="RDF"_MPIHL("FS")_"9"_MPIHL("FS")_"@00108.1"_MPICS_"ST"_MPICS_"16"_MPIRS_"@00122"_MPICS_"ST"_MPICS_"9"_MPIRS_"@00110"_MPICS_"TS"_MPICS_8_MPIRS_"@00756"_MPICS_"ST"_MPICS_30_MPIRS_"@00105"_MPICS_"ST"_MPICS_19
"RTN","MPIFVTQ",89,0)
 S RDF=RDF_MPIRS_"@00108.2"_MPICS_"ST"_MPICS_"16"_MPIRS_"@00169"_MPICS_"ST"_MPICS_30_MPIRS_"@00740"_MPICS_"TS"_MPICS_8_MPIRS_"@00108.3"_MPICS_"ST"_MPICS_16
"RTN","MPIFVTQ",90,0)
 ; ^ fields to be returned in query response
"RTN","MPIFVTQ",91,0)
 ;
"RTN","MPIFVTQ",92,0)
 S QUERY="VTQ"_MPIHL("FS")_MPIIT_MPIHL("FS")_"T"_MPIHL("FS")_MPIQRYNM_MPIHL("FS")_"ICN"_MPIHL("FS")
"RTN","MPIFVTQ",93,0)
 ;
"RTN","MPIFVTQ",94,0)
 I MPISND["00108" S MPINM=$P(MPITEST,"^",1),VAFHA08=1,VAFHCA08=1 D NAME^VAFCPID2(MPIIT,.MPINM) K VAFHA08,VAFHCA08 ;agressive name reformatting
"RTN","MPIFVTQ",95,0)
 ; ^ sending all or part of name
"RTN","MPIFVTQ",96,0)
 I MPISND["00108.1" S MPI2NM=$P(MPINM,",",1) I MPI2NM'="" S QUERY=QUERY_"@00108.1"_MPICS_"EQ"_MPICS_MPI2NM
"RTN","MPIFVTQ",97,0)
 ; ^ sending last name
"RTN","MPIFVTQ",98,0)
 I MPISND["00122"&(MPISSN'="")&(MPISSN'["P") S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00122"_MPICS_"EQ"_MPICS_MPISSN
"RTN","MPIFVTQ",99,0)
 ; ^ sending SSN
"RTN","MPIFVTQ",100,0)
 I MPISND["00108.2" S MPI1NM=$P(MPINM,",",2),MPI1NM=$P(MPI1NM," ",1) I MPI1NM'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.2"_MPICS_"EQ"_MPICS_MPI1NM
"RTN","MPIFVTQ",101,0)
 ; ^ sending first name
"RTN","MPIFVTQ",102,0)
 I MPISND["00110" D
"RTN","MPIFVTQ",103,0)
 .S MPIDOB=$P(MPITEST,"^",3)
"RTN","MPIFVTQ",104,0)
 .Q:MPIDOB=""
"RTN","MPIFVTQ",105,0)
 .S MPIHDOB=$$HLDATE^HLFNC(MPIDOB)
"RTN","MPIFVTQ",106,0)
 .; send date of birth (convert to hl7 date format)
"RTN","MPIFVTQ",107,0)
 .S MPIMOD=MPIDOB#100
"RTN","MPIFVTQ",108,0)
 .I MPIQRYNM'="VTQ_PID_ICN_LOAD_1" S MPIZDOB=MPICS_"AND"_MPIRS_"@00110"_MPICS_"GN"_MPICS_MPIHDOB
"RTN","MPIFVTQ",109,0)
 .I MPIQRYNM="VTQ_PID_ICN_LOAD_1" S MPIZDOB=MPICS_"AND"_MPIRS_"@00110"_MPICS_"EQ"_MPICS_MPIHDOB
"RTN","MPIFVTQ",110,0)
 .S MPIXDOB=MPICS_"AND"_MPIRS_"@00110"_MPICS_"EQ"_MPICS_MPIHDOB
"RTN","MPIFVTQ",111,0)
 .S QUEDOB=$S(MPIMOD>0:MPIXDOB,1:MPIZDOB)
"RTN","MPIFVTQ",112,0)
 .S QUERY=QUERY_QUEDOB
"RTN","MPIFVTQ",113,0)
 ; ^ sending date of birth
"RTN","MPIFVTQ",114,0)
 I $D(MPIDTH),(MPISND["00740")&(MPIDTH'="") S MPIHDTH=$$HLDATE^HLFNC(MPIDTH),QUERY=QUERY_MPICS_"AND"_MPIRS_"@00740"_MPICS_"EQ"_MPICS_MPIHDTH
"RTN","MPIFVTQ",115,0)
 ; ^ sending date of death
"RTN","MPIFVTQ",116,0)
 I MPISND["00111" S:$G(^DPT(MPIIT,0))'="" MPISEX=$P(^DPT(MPIIT,0),"^",2) I MPISEX'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00111"_MPICS_"EQ"_MPICS_MPISEX
"RTN","MPIFVTQ",117,0)
 ; ^ sending Sex
"RTN","MPIFVTQ",118,0)
 I MPISND["00108.4" S MPIMNM=$P(MPI1NM," ",2),MPINMSFX=$P(MPI1NM," ",3) I MPINMSFX'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.4"_MPICS_"EQ"_MPICS_MPINMSFX
"RTN","MPIFVTQ",119,0)
 ; ^ sending suffix name
"RTN","MPIFVTQ",120,0)
 I MPISND["00126.1" S MPIPOB=$P(^DPT(MPIIT,0),"^",11) I MPIPOB'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00126.1"_MPICS_"EQ"_MPICS_MPIPOB
"RTN","MPIFVTQ",121,0)
 ; send place of birth - city
"RTN","MPIFVTQ",122,0)
 I MPISND["00126.2" S MPIPOBS=$P(^DPT(MPIIT,0),"^",12) I MPIPOBS'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00126.2"_MPICS_"EQ"_MPICS_MPIPOBS
"RTN","MPIFVTQ",123,0)
 ; send place of birth - state
"RTN","MPIFVTQ",124,0)
 ;
"RTN","MPIFVTQ",125,0)
 I $G(MPIOUT(0))="" S MPIOUT(0)="1^good data"
"RTN","MPIFVTQ",126,0)
 S MPIOUT(2)=QUERY
"RTN","MPIFVTQ",127,0)
 S MPIOUT(3)=RDF
"RTN","MPIFVTQ",128,0)
 ;W !,QUERY
"RTN","MPIFVTQ",129,0)
 Q
"SEC","^DIC",984.1,984.1,0,"AUDIT")
@
"SEC","^DIC",984.1,984.1,0,"DD")
@
"SEC","^DIC",984.1,984.1,0,"DEL")
@
"SEC","^DIC",984.1,984.1,0,"LAYGO")
@
"SEC","^DIC",984.1,984.1,0,"RD")
@
"SEC","^DIC",984.1,984.1,0,"WR")
@
"SEC","^DIC",984.5,984.5,0,"AUDIT")
@
"SEC","^DIC",984.5,984.5,0,"DD")
@
"SEC","^DIC",984.5,984.5,0,"DEL")
@
"SEC","^DIC",984.5,984.5,0,"LAYGO")
@
"SEC","^DIC",984.5,984.5,0,"RD")
@
"SEC","^DIC",984.5,984.5,0,"WR")
@
"SEC","^DIC",984.8,984.8,0,"AUDIT")
@
"SEC","^DIC",984.8,984.8,0,"DD")
@
"SEC","^DIC",984.8,984.8,0,"DEL")
@
"SEC","^DIC",984.8,984.8,0,"LAYGO")
@
"SEC","^DIC",984.8,984.8,0,"RD")
@
"SEC","^DIC",984.8,984.8,0,"WR")
@
"SEC","^DIC",984.9,984.9,0,"AUDIT")
@
"SEC","^DIC",984.9,984.9,0,"DD")
@
"SEC","^DIC",984.9,984.9,0,"DEL")
@
"SEC","^DIC",984.9,984.9,0,"LAYGO")
@
"SEC","^DIC",984.9,984.9,0,"RD")
@
"SEC","^DIC",984.9,984.9,0,"WR")
@
"VER")
8.0^21.0
"^DD",984.1,984.1,0)
FIELD^^5^5
"^DD",984.1,984.1,0,"DDA")
N
"^DD",984.1,984.1,0,"DT")
2970207
"^DD",984.1,984.1,0,"IX","B",984.1,.01)

"^DD",984.1,984.1,0,"NM","MASTER PATIENT INDEX (LOCAL NUMBERS)")

"^DD",984.1,984.1,0,"VRPK")
ZZTRUNG
"^DD",984.1,984.1,.01,0)
SITE ID NUMBER^RNJ3,0^^0;1^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",984.1,984.1,.01,1,0)
^.1
"^DD",984.1,984.1,.01,1,1,0)
984.1^B
"^DD",984.1,984.1,.01,1,1,1)
S ^MPIF(984.1,"B",$E(X,1,30),DA)=""
"^DD",984.1,984.1,.01,1,1,2)
K ^MPIF(984.1,"B",$E(X,1,30),DA)
"^DD",984.1,984.1,.01,3)
Type a Number between 0 and 999, 0 Decimal Digits
"^DD",984.1,984.1,.01,21,0)
^^2^2^2970207^
"^DD",984.1,984.1,.01,21,1,0)
This is the number which will be used as a multiple to generate
"^DD",984.1,984.1,.01,21,2,0)
local ICNs when the MPI is unreachable.
"^DD",984.1,984.1,.01,"DT")
2970207
"^DD",984.1,984.1,1,0)
LAST NUMBER USED^RNJ9,0^^0;2^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",984.1,984.1,1,3)
Type a Number between 0 and 999999999, 0 Decimal Digits
"^DD",984.1,984.1,1,21,0)
^^1^1^2981221^
"^DD",984.1,984.1,1,21,1,0)
This keeps the last number used (not the next number to use).
"^DD",984.1,984.1,1,"DT")
2970207
"^DD",984.1,984.1,2,0)
CHECK SUM FOR LAST NUMBER USED^NJ6,0^^0;3^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",984.1,984.1,2,3)
Type a Number between 0 and 999999, 0 Decimal Digits
"^DD",984.1,984.1,2,21,0)
^^2^2^2981221^
"^DD",984.1,984.1,2,21,1,0)
This filed contains the checksum for the last Local ICN (Integration
"^DD",984.1,984.1,2,21,2,0)
Control Number) in the LAST NUMBER USED field.
"^DD",984.1,984.1,2,"DT")
2970207
"^DD",984.1,984.1,3,0)
NEXT NUMBER TO USE^NJ9,0^^0;4^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",984.1,984.1,3,3)
Type a Number between 0 and 999999999, 0 Decimal Digits
"^DD",984.1,984.1,3,21,0)
^^1^1^2970207^
"^DD",984.1,984.1,3,21,1,0)
When used move to last number used and generate a new entry.
"^DD",984.1,984.1,3,"DT")
2970207
"^DD",984.1,984.1,5,0)
CHECK SUM FOR NEXT^NJ6,0^^0;5^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",984.1,984.1,5,3)
Type a Number between 0 and 999999, 0 Decimal Digits
"^DD",984.1,984.1,5,21,0)
^^2^2^2981221^
"^DD",984.1,984.1,5,21,1,0)
This is the checksum for the next number to use.  Move to the checksum
"^DD",984.1,984.1,5,21,2,0)
used then generate a new entry.
"^DD",984.1,984.1,5,"DT")
2981221
"^DD",984.5,984.5,0)
FIELD^^10^11
"^DD",984.5,984.5,0,"DT")
2961124
"^DD",984.5,984.5,0,"IX","B",984.5,.01)

"^DD",984.5,984.5,0,"NM","MPI CHECKDIGIT")

"^DD",984.5,984.5,0,"VRPK")
ZZTRUNG
"^DD",984.5,984.5,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",984.5,984.5,.01,1,0)
^.1
"^DD",984.5,984.5,.01,1,1,0)
984.5^B
"^DD",984.5,984.5,.01,1,1,1)
S ^MPIF(984.5,"B",$E(X,1,30),DA)=""
"^DD",984.5,984.5,.01,1,1,2)
K ^MPIF(984.5,"B",$E(X,1,30),DA)
"^DD",984.5,984.5,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",984.5,984.5,.01,21,0)
^^1^1^2981221^
"^DD",984.5,984.5,.01,21,1,0)
Table name for each check digit schema.
"^DD",984.5,984.5,1,0)
STRING^F^^0;2^K:$L(X)>31!($L(X)<31) X
"^DD",984.5,984.5,1,3)
Answer must be 31 characters in length.
"^DD",984.5,984.5,1,21,0)
^^1^1^2981221^
"^DD",984.5,984.5,1,21,1,0)
Check digit schema components.
"^DD",984.5,984.5,1,"DT")
2961124
"^DD",984.5,984.5,2,0)
STRING1^F^^1;2^K:$L(X)>31!($L(X)<31) X
"^DD",984.5,984.5,2,3)
Answer must be 31 characters in length.
"^DD",984.5,984.5,2,21,0)
^^1^1^2981221^
"^DD",984.5,984.5,2,21,1,0)
Check digit schema components.
"^DD",984.5,984.5,2,"DT")
2961124
"^DD",984.5,984.5,3,0)
STRING2^F^^2;2^K:$L(X)>31!($L(X)<31) X
"^DD",984.5,984.5,3,3)
Answer must be 31 characters in length.
"^DD",984.5,984.5,3,21,0)
^^1^1^2981221^
"^DD",984.5,984.5,3,21,1,0)
Check digit schema components.
"^DD",984.5,984.5,3,"DT")
2961124
"^DD",984.5,984.5,4,0)
STRING3^F^^3;2^K:$L(X)>31!($L(X)<31) X
"^DD",984.5,984.5,4,3)
Answer must be 31 characters in length.
"^DD",984.5,984.5,4,21,0)
^^1^1^2981221^
"^DD",984.5,984.5,4,21,1,0)
Check digit schema components.
"^DD",984.5,984.5,4,"DT")
2961124
"^DD",984.5,984.5,5,0)
STRING4^F^^4;2^K:$L(X)>31!($L(X)<31) X
"^DD",984.5,984.5,5,3)
Answer must be 31 characters in length.
"^DD",984.5,984.5,5,21,0)
^^1^1^2981221^
"^DD",984.5,984.5,5,21,1,0)
Check digit schema components.
"^DD",984.5,984.5,5,"DT")
2961124
"^DD",984.5,984.5,6,0)
STRING5^F^^5;2^K:$L(X)>31!($L(X)<31) X
"^DD",984.5,984.5,6,3)
Answer must be 31 characters in length.
"^DD",984.5,984.5,6,21,0)
^^1^1^2981221^
"^DD",984.5,984.5,6,21,1,0)
Check digit schema components.
"^DD",984.5,984.5,6,"DT")
2961124
"^DD",984.5,984.5,7,0)
STRING6^F^^6;2^K:$L(X)>31!($L(X)<31) X
"^DD",984.5,984.5,7,3)
Answer must be 31 characters in length.
"^DD",984.5,984.5,7,21,0)
^^1^1^2981221^
"^DD",984.5,984.5,7,21,1,0)
Check digit schema components.
"^DD",984.5,984.5,7,"DT")
2961124
"^DD",984.5,984.5,8,0)
STRING7^F^^7;2^K:$L(X)>31!($L(X)<31) X
"^DD",984.5,984.5,8,3)
Answer must be 31 characters in length.
"^DD",984.5,984.5,8,21,0)
^^1^1^2981221^
"^DD",984.5,984.5,8,21,1,0)
Check digit schema components.
"^DD",984.5,984.5,8,"DT")
2961124
"^DD",984.5,984.5,9,0)
STRING8^F^^8;2^K:$L(X)>31!($L(X)<31) X
"^DD",984.5,984.5,9,3)
Answer must be 31 characters in length.
"^DD",984.5,984.5,9,21,0)
^^1^1^2981221^
"^DD",984.5,984.5,9,21,1,0)
Check digit schema components.
"^DD",984.5,984.5,9,"DT")
2961124
"^DD",984.5,984.5,10,0)
STRING9^F^^9;2^K:$L(X)>31!($L(X)<31) X
"^DD",984.5,984.5,10,3)
Answer must be 31 characters in length.
"^DD",984.5,984.5,10,21,0)
^^1^1^2981221^
"^DD",984.5,984.5,10,21,1,0)
Check digit schema components.
"^DD",984.5,984.5,10,"DT")
2961124
"^DD",984.8,984.8,0)
FIELD^^9^11
"^DD",984.8,984.8,0,"DDA")
N
"^DD",984.8,984.8,0,"DT")
2990420
"^DD",984.8,984.8,0,"IX","B",984.8,.01)

"^DD",984.8,984.8,0,"NM","MPI ICN BUILD MANAGEMENT")

"^DD",984.8,984.8,0,"VRPK")
ZZTRUNG
"^DD",984.8,984.8,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",984.8,984.8,.01,1,0)
^.1
"^DD",984.8,984.8,.01,1,1,0)
984.8^B
"^DD",984.8,984.8,.01,1,1,1)
S ^MPIF(984.8,"B",$E(X,1,30),DA)=""
"^DD",984.8,984.8,.01,1,1,2)
K ^MPIF(984.8,"B",$E(X,1,30),DA)
"^DD",984.8,984.8,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",984.8,984.8,.01,21,0)
^^2^2^2981221^
"^DD",984.8,984.8,.01,21,1,0)
This field will only have ONE entry - ONE.  It is used to keep track of
"^DD",984.8,984.8,.01,21,2,0)
the latest initialization run to the MPI (Master Patient Index).
"^DD",984.8,984.8,1,0)
ICN ASSIGNMENT STARTED^D^^0;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",984.8,984.8,1,3)
Enter the date and time to start the initialization job
"^DD",984.8,984.8,1,21,0)
^^1^1^2981231^^
"^DD",984.8,984.8,1,21,1,0)
The date/time the Master Patient Index (MPI) initialization started.
"^DD",984.8,984.8,1,"DT")
2970820
"^DD",984.8,984.8,2,0)
ICN ASSIGNMENT ENDED^D^^0;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",984.8,984.8,2,3)
Enter the date/time for the Initialization job to stop if it has not completed.
"^DD",984.8,984.8,2,21,0)
^^1^1^2981221^
"^DD",984.8,984.8,2,21,1,0)
The date/time the Master Patient Index (MPI) initialization job stopped.
"^DD",984.8,984.8,2,"DT")
2970820
"^DD",984.8,984.8,3,0)
LAST PATIENT BUILT^NJ10,0^^0;4^K:+X'=X!(X>9999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",984.8,984.8,3,3)
Type a Number between 0 and 9999999999, 0 Decimal Digits
"^DD",984.8,984.8,3,21,0)
^^2^2^2981221^
"^DD",984.8,984.8,3,21,1,0)
This is the DFN of the last patient in the PATIENT file that was
"^DD",984.8,984.8,3,21,2,0)
initialized against the Master Patient Index (MPI).
"^DD",984.8,984.8,3,"DT")
2970820
"^DD",984.8,984.8,3.5,0)
LAST CMOR COMPLETED^NJ7,0^^0;11^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",984.8,984.8,3.5,3)
Type a Number between 0 and 9999999, 0 Decimal Digits
"^DD",984.8,984.8,3.5,21,0)
^^2^2^2981221^
"^DD",984.8,984.8,3.5,21,1,0)
This is the last CMOR Activity Score that was used to send patients to the
"^DD",984.8,984.8,3.5,21,2,0)
MPI for Initialization.
"^DD",984.8,984.8,3.5,"DT")
2971015
"^DD",984.8,984.8,4,0)
STATUS^F^^0;5^K:$L(X)>20!($L(X)<2) X
"^DD",984.8,984.8,4,3)
Answer must be 2-20 characters in length.
"^DD",984.8,984.8,4,21,0)
^^2^2^2990420^^
"^DD",984.8,984.8,4,21,1,0)
This field is used by the initialization job to note the activity it is
"^DD",984.8,984.8,4,21,2,0)
performing on a given patient.
"^DD",984.8,984.8,4,"DT")
2990420
"^DD",984.8,984.8,5,0)
REQUEST TO STOP^F^^0;6^K:$L(X)>10!($L(X)<2) X
"^DD",984.8,984.8,5,3)
Answer must be 2-10 characters in length.
"^DD",984.8,984.8,5,21,0)
^^2^2^2981221^
"^DD",984.8,984.8,5,21,1,0)
This field is used to request the Initialization job to stop.  An option
"^DD",984.8,984.8,5,21,2,0)
will be provided to allow a user to stop the job prior to STOP WHEN.
"^DD",984.8,984.8,5,"DT")
2970821
"^DD",984.8,984.8,6,0)
MESSAGE ID^F^^0;7^K:$L(X)>20!($L(X)<2) X
"^DD",984.8,984.8,6,3)
Answer must be 2-20 characters in length.
"^DD",984.8,984.8,6,21,0)
^^2^2^2981221^
"^DD",984.8,984.8,6,21,1,0)
This is the HL7 message ID for the last message created during the MPI
"^DD",984.8,984.8,6,21,2,0)
Initialization process.
"^DD",984.8,984.8,6,"DT")
2970821
"^DD",984.8,984.8,7,0)
MESSAGE TEXT IEN^F^^0;8^K:$L(X)>20!($L(X)<2) X
"^DD",984.8,984.8,7,3)
Answer must be 2-20 characters in length.
"^DD",984.8,984.8,7,21,0)
^^2^2^2981221^
"^DD",984.8,984.8,7,21,1,0)
This is the HL7 message IEN for the last message created during the
"^DD",984.8,984.8,7,21,2,0)
MPI Initialization process.
"^DD",984.8,984.8,7,"DT")
2970821
"^DD",984.8,984.8,8,0)
COUNTER SEQUENCE^NJ5,0^^0;9^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",984.8,984.8,8,3)
Type a Number between 0 and 99999, 0 Decimal Digits
"^DD",984.8,984.8,8,21,0)
^^2^2^2981221^
"^DD",984.8,984.8,8,21,1,0)
This is a counter for the number of messages sent to the MPI during the
"^DD",984.8,984.8,8,21,2,0)
Initialization process.
"^DD",984.8,984.8,8,"DT")
2970821
"^DD",984.8,984.8,9,0)
STOP WHEN^D^^0;10^S %DT="ETR" D ^%DT S X=Y K:Y<1 X
"^DD",984.8,984.8,9,3)
TYPE A DATE/TIME WHEN YOU WISH THE PROCESS TO END.
"^DD",984.8,984.8,9,21,0)
^^2^2^2981221^
"^DD",984.8,984.8,9,21,1,0)
This field is a date/time that the user has selected for the
"^DD",984.8,984.8,9,21,2,0)
initialization process to stop if it has not completed.
"^DD",984.8,984.8,9,"DT")
2970916
"^DD",984.9,984.9,0)
FIELD^^102^19
"^DD",984.9,984.9,0,"ID","WR1")
W "   ",$E($P(^(0),U,3),4,5)_"-"_$E($P(^(0),U,3),6,7)_"-"_$E($P(^(0),U,3),2,3)
"^DD",984.9,984.9,0,"ID","WR2")
W "   ",@("$P($P($C(59)_$S($D(^DD(991,.06,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,6)_"":"",2),$C(59),1)")
"^DD",984.9,984.9,0,"ID","WR3")
S %I=Y,Y=$S('$D(^(0)):"",$D(^DPT(+$P(^(0),U,4),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",984.9,984.9,0,"IX","AC",984.9,.06)

"^DD",984.9,984.9,0,"IX","AD",984.9,.02)

"^DD",984.9,984.9,0,"IX","AE",984.9,2.01)

"^DD",984.9,984.9,0,"IX","AS1",984.9,.06)

"^DD",984.9,984.9,0,"IX","AS2",984.9,.07)

"^DD",984.9,984.9,0,"IX","B",984.9,.01)

"^DD",984.9,984.9,0,"IX","C",984.9,.04)

"^DD",984.9,984.9,0,"NM","MPIF CMOR REQUEST")

"^DD",984.9,984.9,.01,0)
REQUEST NUMBER^RF^^0;1^K:$L(X)>20!($L(X)<3) X
"^DD",984.9,984.9,.01,1,0)
^.1
"^DD",984.9,984.9,.01,1,1,0)
984.9^B
"^DD",984.9,984.9,.01,1,1,1)
S ^MPIF(984.9,"B",$E(X,1,30),DA)=""
"^DD",984.9,984.9,.01,1,1,2)
K ^MPIF(984.9,"B",$E(X,1,30),DA)
"^DD",984.9,984.9,.01,3)
Answer must be 3-20 characters in length.
"^DD",984.9,984.9,.01,21,0)
^^4^4^2970408^^
"^DD",984.9,984.9,.01,21,1,0)
Request number is automatically generated by the system and is used
"^DD",984.9,984.9,.01,21,2,0)
to identify a specific CMOR request.  When a request is transmitted to
"^DD",984.9,984.9,.01,21,3,0)
another station, the request number remains the same across both
"^DD",984.9,984.9,.01,21,4,0)
stations.
"^DD",984.9,984.9,.01,"DT")
2960712
"^DD",984.9,984.9,.02,0)
REQUESTED BY^RP200'^VA(200,^0;2^Q
"^DD",984.9,984.9,.02,1,0)
^.1
"^DD",984.9,984.9,.02,1,1,0)
984.9^AD
"^DD",984.9,984.9,.02,1,1,1)
S ^MPIF(984.9,"AD",$E(X,1,30),DA)=""
"^DD",984.9,984.9,.02,1,1,2)
K ^MPIF(984.9,"AD",$E(X,1,30),DA)
"^DD",984.9,984.9,.02,1,1,"DT")
2960703
"^DD",984.9,984.9,.02,3)
Select the person making the request from the New Person file.
"^DD",984.9,984.9,.02,21,0)
^^4^4^2981221^
"^DD",984.9,984.9,.02,21,1,0)
The REQUESTED BY field will exist at the originating station only.  Once
"^DD",984.9,984.9,.02,21,2,0)
the request is transmitted to another station, the receiving station
"^DD",984.9,984.9,.02,21,3,0)
will not have data in this field.  This is due to the fact that the
"^DD",984.9,984.9,.02,21,4,0)
receiving location will not have the originating person in their files.
"^DD",984.9,984.9,.02,"DT")
2960703
"^DD",984.9,984.9,.03,0)
DATE REQUESTED^RD^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",984.9,984.9,.03,3)
Enter the date/time of the request.
"^DD",984.9,984.9,.03,21,0)
^^1^1^2970408^^^
"^DD",984.9,984.9,.03,21,1,0)
Date requested is the date the request was entered into the system.
"^DD",984.9,984.9,.03,"DT")
2960702
"^DD",984.9,984.9,.04,0)
PATIENT^P2'^DPT(^0;4^Q
"^DD",984.9,984.9,.04,1,0)
^.1
"^DD",984.9,984.9,.04,1,1,0)
984.9^C
"^DD",984.9,984.9,.04,1,1,1)
S ^MPIF(984.9,"C",$E(X,1,30),DA)=""
"^DD",984.9,984.9,.04,1,1,2)
K ^MPIF(984.9,"C",$E(X,1,30),DA)
"^DD",984.9,984.9,.04,1,1,"DT")
2960724
"^DD",984.9,984.9,.04,3)
Select the patient that the CMOR request is for.
"^DD",984.9,984.9,.04,21,0)
^^1^1^2981221^^^
"^DD",984.9,984.9,.04,21,1,0)
Patient affected by the CMOR change request.
"^DD",984.9,984.9,.04,"DT")
2971006
"^DD",984.9,984.9,.05,0)
REQUESTOR PHONE NUMBER^RF^^0;5^K:$L(X)>20!($L(X)<4) X
"^DD",984.9,984.9,.05,3)
Answer must be 4-20 characters in length.
"^DD",984.9,984.9,.05,21,0)
^^3^3^2970408^^^^
"^DD",984.9,984.9,.05,21,1,0)
Phone number that can be used to contact the person requesting the
"^DD",984.9,984.9,.05,21,2,0)
CMOR change request.  This data is transmitted to the receiving location
"^DD",984.9,984.9,.05,21,3,0)
and is needed if the person reviewing the request has questions.
"^DD",984.9,984.9,.05,"DT")
2960703
"^DD",984.9,984.9,.06,0)
STATUS^RS^1:OPEN;2:REQUESTED;3:PENDING APPROVAL;4:APPROVED;5:DISAPPROVED;^0;6^Q
"^DD",984.9,984.9,.06,1,0)
^.1
"^DD",984.9,984.9,.06,1,1,0)
984.9^AC
"^DD",984.9,984.9,.06,1,1,1)
S ^MPIF(984.9,"AC",$E(X,1,30),DA)=""
"^DD",984.9,984.9,.06,1,1,2)
K ^MPIF(984.9,"AC",$E(X,1,30),DA)
"^DD",984.9,984.9,.06,1,1,"DT")
2960703
"^DD",984.9,984.9,.06,1,2,0)
984.9^AS1^MUMPS
"^DD",984.9,984.9,.06,1,2,1)
S:$P(^MPIF(984.9,D0,0),"^",7)]"" ^MPIF(984.9,"AS",$P(^(0),"^",7),X,DA)=""
"^DD",984.9,984.9,.06,1,2,2)
K:$P(^MPIF(984.9,D0,0),"^",7)]"" ^MPIF(984.9,"AS",$P(^(0),"^",7),X,DA)
"^DD",984.9,984.9,.06,1,2,"DT")
2960726
"^DD",984.9,984.9,.06,3)
Select a status: Open, Requested, Pending, Approved, Disapproved
"^DD",984.9,984.9,.06,21,0)
^^6^6^2981221^
"^DD",984.9,984.9,.06,21,1,0)
This field tracks the progress of the CMOR change request.  As the
"^DD",984.9,984.9,.06,21,2,0)
request is being entered, it has a status of Open.  Once the person
"^DD",984.9,984.9,.06,21,3,0)
accepts the request, the status is change to requested and transmitted
"^DD",984.9,984.9,.06,21,4,0)
to the receiving location.  At the receiving location, the request
"^DD",984.9,984.9,.06,21,6,0)
or Denied), the status is changed at both stations.
"^DD",984.9,984.9,.06,"DT")
2971006
"^DD",984.9,984.9,.07,0)
SITE^P4'^DIC(4,^0;7^Q
"^DD",984.9,984.9,.07,1,0)
^.1
"^DD",984.9,984.9,.07,1,1,0)
984.9^AS2^MUMPS
"^DD",984.9,984.9,.07,1,1,1)
S:$P(^MPIF(984.9,D0,0),"^",6)]"" ^MPIF(984.9,"AS",X,$P(^(0),"^",6),DA)=""
"^DD",984.9,984.9,.07,1,1,2)
K:$P(^MPIF(984.9,D0,0),"^",6)]"" ^MPIF(984.9,"AS",X,$P(^(0),"^",6),DA)
"^DD",984.9,984.9,.07,1,1,"DT")
2960726
"^DD",984.9,984.9,.07,3)
Select the site the request is to go to.
"^DD",984.9,984.9,.07,21,0)
^^3^3^2981221^
"^DD",984.9,984.9,.07,21,1,0)
Site the CMOR Request was sent to.  If this site is the CMOR for the
"^DD",984.9,984.9,.07,21,2,0)
patient, it will be a treating facility.  If this site is not the CMOR,
"^DD",984.9,984.9,.07,21,3,0)
then the request will go to the CMOR.
"^DD",984.9,984.9,.07,"DT")
2971006
"^DD",984.9,984.9,.08,0)
TYPE OF MESSAGE^RS^1:RECEIVED;2:SENT;^0;8^Q
"^DD",984.9,984.9,.08,21,0)
^^3^3^2981221^
"^DD",984.9,984.9,.08,21,1,0)
A type of sent refers to the CMOR request originated from the station and
"^DD",984.9,984.9,.08,21,2,0)
is being sent to another station.  A received type refers to the CMOR
"^DD",984.9,984.9,.08,21,3,0)
request originated from the other station.
"^DD",984.9,984.9,.08,"DT")
2960724
"^DD",984.9,984.9,1.01,0)
REQUESTOR NAME^F^^1;1^K:$L(X)>30!($L(X)<3) X
"^DD",984.9,984.9,1.01,3)
Answer must be 3-30 characters in length.
"^DD",984.9,984.9,1.01,21,0)
^^4^4^2970408^^^^
"^DD",984.9,984.9,1.01,21,1,0)
The requestor name is a free-text name of the person sending the CMOR
"^DD",984.9,984.9,1.01,21,2,0)
request.  This field is blank at the originating site since the
"^DD",984.9,984.9,1.01,21,3,0)
Request By field points to the person.  This field is used at the
"^DD",984.9,984.9,1.01,21,4,0)
receiving location.
"^DD",984.9,984.9,1.01,"DT")
2960702
"^DD",984.9,984.9,1.02,0)
REASON FOR REQUEST^RF^^1;2^K:$L(X)>60!($L(X)<3) X
"^DD",984.9,984.9,1.02,3)
Answer must be 3-60 characters in length.
"^DD",984.9,984.9,1.02,21,0)
^^2^2^2970408^^
"^DD",984.9,984.9,1.02,21,1,0)
Enter a brief reason for requesting the CMOR
"^DD",984.9,984.9,1.02,21,2,0)
transfer.
"^DD",984.9,984.9,1.02,"DT")
2960711
"^DD",984.9,984.9,1.03,0)
TYPE OF REQUEST^RS^1:TRANSFER TO;2:REQUESTED FROM;3:ACCEPT FROM;^1;3^Q
"^DD",984.9,984.9,1.03,3)
Enter 1 for Transfer To, 2 for Requested From, or 3 for Accept From
"^DD",984.9,984.9,1.03,21,0)
^^3^3^2981221^
"^DD",984.9,984.9,1.03,21,1,0)
Type of request determines whether the patient is being moved from
"^DD",984.9,984.9,1.03,21,2,0)
the originating station to the receiving station or being requested
"^DD",984.9,984.9,1.03,21,3,0)
from the receiving station.
"^DD",984.9,984.9,1.03,"DT")
2960724
"^DD",984.9,984.9,2.01,0)
REVIEWED BY^P200'^VA(200,^2;1^Q
"^DD",984.9,984.9,2.01,1,0)
^.1
"^DD",984.9,984.9,2.01,1,1,0)
984.9^AE
"^DD",984.9,984.9,2.01,1,1,1)
S ^MPIF(984.9,"AE",$E(X,1,30),DA)=""
"^DD",984.9,984.9,2.01,1,1,2)
K ^MPIF(984.9,"AE",$E(X,1,30),DA)
"^DD",984.9,984.9,2.01,1,1,"DT")
2960722
"^DD",984.9,984.9,2.01,3)
Select the user making the request.
"^DD",984.9,984.9,2.01,21,0)
^^5^5^2960924^
"^DD",984.9,984.9,2.01,21,1,0)
The reviewed by field will exist at the receiving station only.  Once
"^DD",984.9,984.9,2.01,21,2,0)
the request is reviewed and the result is transmitted to the originating
"^DD",984.9,984.9,2.01,21,3,0)
station, the originating station will not have data in this field.  This
"^DD",984.9,984.9,2.01,21,4,0)
is due to the fact that the originating station will not have the reviewing
"^DD",984.9,984.9,2.01,"DT")
2960722
"^DD",984.9,984.9,2.02,0)
DATE REVIEWED^D^^2;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",984.9,984.9,2.02,3)
Enter the date the request was approved/denied.
"^DD",984.9,984.9,2.02,21,0)
^^1^1^2981231^^
"^DD",984.9,984.9,2.02,21,1,0)
This date reflects the date the request was approved or denied.
"^DD",984.9,984.9,2.02,"DT")
2960702
"^DD",984.9,984.9,2.03,0)
REVIEWER PHONE NUMBER^F^^2;3^K:$L(X)>20!($L(X)<4) X
"^DD",984.9,984.9,2.03,3)
Answer must be 4-20 characters in length.
"^DD",984.9,984.9,2.03,21,0)
^^4^4^2960924^
"^DD",984.9,984.9,2.03,21,1,0)
Phone number that is used to contact the person that reviewed and approved
"^DD",984.9,984.9,2.03,21,2,0)
or denied the CMOR change request.  This data is transmitted to the
"^DD",984.9,984.9,2.03,21,3,0)
requesting station and is needed if the person receiving the result
"^DD",984.9,984.9,2.03,21,4,0)
has questions.
"^DD",984.9,984.9,2.03,"DT")
2960702
"^DD",984.9,984.9,3.01,0)
REVIEWER NAME^F^^3;1^K:$L(X)>30!($L(X)<3) X
"^DD",984.9,984.9,3.01,3)
Answer must be 3-30 characters in length.
"^DD",984.9,984.9,3.01,21,0)
^^5^5^2960924^
"^DD",984.9,984.9,3.01,21,1,0)
The reviewer name is a free-text name of the person reviewing the
"^DD",984.9,984.9,3.01,21,2,0)
CMOR request.  This field is blank at the reviewing site since the
"^DD",984.9,984.9,3.01,21,3,0)
Reviewed By field points to the person.  This field is used at the
"^DD",984.9,984.9,3.01,21,4,0)
originating station and is transmitted along with the result of the
"^DD",984.9,984.9,3.01,"DT")
2960716
"^DD",984.9,984.9,3.02,0)
REVIEWER COMMENTS^F^^3;2^K:$L(X)>60!($L(X)<3) X
"^DD",984.9,984.9,3.02,3)
Answer must be 3-60 characters in length.
"^DD",984.9,984.9,3.02,21,0)
^^3^3^2960924^
"^DD",984.9,984.9,3.02,21,1,0)
Comments that are entered by the person reviewing the request.  These
"^DD",984.9,984.9,3.02,21,2,0)
comments are transmitted back to the origination station after the
"^DD",984.9,984.9,3.02,21,3,0)
request is approved or denied.
"^DD",984.9,984.9,3.02,"DT")
2960702
"^DD",984.9,984.9,100,0)
DAYS OLD^CJ3,0^^ ; ^S X=0 I $P(^MPIF(984.9,D0,0),"^",3)]"" S X=$$FMDIFF^XLFDT($S($P($G(^MPIF(984.9,D0,2)),"^",2)]"":$P(^(2),"^",2),1:DT),$P(^MPIF(984.9,D0,0),"^",3)) S X=$J(X,0,0)
"^DD",984.9,984.9,100,9)
^
"^DD",984.9,984.9,100,9.01)

"^DD",984.9,984.9,100,9.1)
S X=0 I $P(^MPIF(984.9,D0,0),"^",3)]"" S X=$$FMDIFF^XLFDT($S($P($G(^MPIF(984.9,D0,2)),"^",2)]"":$P(^(2),"^",2),1:DT),$P(^MPIF(984.9,D0,0),"^",3))
"^DD",984.9,984.9,100,21,0)
^^3^3^2960924^^
"^DD",984.9,984.9,100,21,1,0)
Days old is calculated by comparing the date the request was entered
"^DD",984.9,984.9,100,21,2,0)
or received and compared to today's date.  The number of days between
"^DD",984.9,984.9,100,21,3,0)
these two dates determines the number of days old a request is.
"^DD",984.9,984.9,100,"DT")
2960715
"^DD",984.9,984.9,101,0)
REQUESTOR^CJ30^^ ; ^S X=$P($G(^VA(200,+$P(^MPIF(984.9,D0,0),"^",2),0)),"^") S:X="" X=$P($G(^MPIF(984.9,D0,1)),"^") S X=$E(X,1,30)
"^DD",984.9,984.9,101,9)
^
"^DD",984.9,984.9,101,9.01)

"^DD",984.9,984.9,101,9.1)
S X=$P($G(^VA(200,+$P(^MPIF(984.9,D0,0),"^",2),0)),"^") S:X="" X=$P($G(^MPIF(984.9,D0,1)),"^") S X=$E(X,1,30)
"^DD",984.9,984.9,101,21,0)
^^5^5^2981221^
"^DD",984.9,984.9,101,21,1,0)
The result of this computed field is the comparison of the Request By and
"^DD",984.9,984.9,101,21,2,0)
the Requestor Name field.  Since only one of these two fields exist within
"^DD",984.9,984.9,101,21,3,0)
a CMOR request, this computed field extracts the one that exists and gives
"^DD",984.9,984.9,101,21,4,0)
a consistent place to use in print templates for displaying the name
"^DD",984.9,984.9,101,"DT")
2960716
"^DD",984.9,984.9,102,0)
REVIEWER^CJ30^^ ; ^S X=$P($G(^VA(200,+$P($G(^MPIF(984.9,D0,2)),"^"),0)),"^") S:X="" X=$P($G(^MPIF(984.9,D0,3)),"^") S X=$E(X,1,30)
"^DD",984.9,984.9,102,9)
^
"^DD",984.9,984.9,102,9.01)

"^DD",984.9,984.9,102,9.1)
S X=$P($G(^VA(200,+$P($G(^MPIF(984.9,D0,2)),"^"),0)),"^") S:X="" X=$P($G(^MPIF(984.9,D0,3)),"^") S X=$E(X,1,30)
"^DD",984.9,984.9,102,21,0)
^^5^5^2960924^
"^DD",984.9,984.9,102,21,1,0)
The result of this computed field is the comparison of the Reviewed By and
"^DD",984.9,984.9,102,21,2,0)
the Reviewer Name field.  Since only on of these two fields exist within
"^DD",984.9,984.9,102,21,3,0)
a CMOR request, this computed field extracts the one that exists and gives
"^DD",984.9,984.9,102,21,4,0)
a consistent place to use in print templates for displaying the name
"^DD",984.9,984.9,102,"DT")
2960716
"^DIC",984.1,984.1,0)
MASTER PATIENT INDEX (LOCAL NUMBERS)^984.1
"^DIC",984.1,984.1,0,"GL")
^MPIF(984.1,
"^DIC",984.1,984.1,"%D",0)
^^2^2^2981221^^^
"^DIC",984.1,984.1,"%D",1,0)
This file is used to assign Local ICNs (Integration Control Numbers) when
"^DIC",984.1,984.1,"%D",2,0)
the Master Patient Index (MPI) is unavailable.
"^DIC",984.1,"B","MASTER PATIENT INDEX (LOCAL NUMBERS)",984.1)

"^DIC",984.5,984.5,0)
MPI CHECKDIGIT^984.5
"^DIC",984.5,984.5,0,"GL")
^MPIF(984.5,
"^DIC",984.5,984.5,"%D",0)
^^2^2^2990428^
"^DIC",984.5,984.5,"%D",1,0)
This file is used to calculate the check digit (check sum) for an ICN
"^DIC",984.5,984.5,"%D",2,0)
(Integration Control Number).
"^DIC",984.5,"B","MPI CHECKDIGIT",984.5)

"^DIC",984.8,984.8,0)
MPI ICN BUILD MANAGEMENT^984.8
"^DIC",984.8,984.8,0,"GL")
^MPIF(984.8,
"^DIC",984.8,984.8,"%D",0)
^^2^2^2981231^
"^DIC",984.8,984.8,"%D",1,0)
This file is used to track the MPI Initialization process.  It is utilized
"^DIC",984.8,984.8,"%D",2,0)
when stopping and restarting the initialization process.
"^DIC",984.8,"B","MPI ICN BUILD MANAGEMENT",984.8)

"^DIC",984.9,984.9,0)
MPIF CMOR REQUEST^984.9
"^DIC",984.9,984.9,0,"GL")
^MPIF(984.9,
"^DIC",984.9,984.9,"%D",0)
^^3^3^2981231^^
"^DIC",984.9,984.9,"%D",1,0)
This file holds all requests for change a patient's CIRN Master of Record.
"^DIC",984.9,984.9,"%D",2,0)
Requests being sent to remote locations and received from remote
"^DIC",984.9,984.9,"%D",3,0)
locations are stored in this file and updated.
"^DIC",984.9,"B","MPIF CMOR REQUEST",984.9)

**INSTALL NAME**
DG*5.3*231
"BLD",1852,0)
DG*5.3*231^REGISTRATION^0^^y
"BLD",1852,1,0)
^^34^34^2990407^
"BLD",1852,1,1,0)
 Patch DG*5.3*149 added new cross references to a number of fields
"BLD",1852,1,2,0)
 from the PATIENT file (#2). Clinical Information Resource Network
"BLD",1852,1,3,0)
 (CIRN) needs to monitor changes made to these fields.  This patch
"BLD",1852,1,4,0)
 turns audit ON for a number of fields in the PATIENT file. 
"BLD",1852,1,5,0)
  
"BLD",1852,1,6,0)
 The following is a list of fields in the PATIENT file for which 
"BLD",1852,1,7,0)
 auditing is turned on: 
"BLD",1852,1,8,0)
      .02    SEX
"BLD",1852,1,9,0)
      .03    DATE OF BIRTH
"BLD",1852,1,10,0)
      .05    MARITAL STATUS
"BLD",1852,1,11,0)
      .08    RELIGIOUS PREFERENCE
"BLD",1852,1,12,0)
      .09    SOCIAL SECURITY NUMBER
"BLD",1852,1,13,0)
      .111   STREET ADDRESS [LINE 1]
"BLD",1852,1,14,0)
      .1112  ZIP+4
"BLD",1852,1,15,0)
      .112   STREET ADDRESS [LINE 2]
"BLD",1852,1,16,0)
      .113   STREET ADDRESS [LINE 3]
"BLD",1852,1,17,0)
      .114   CITY
"BLD",1852,1,18,0)
      .115   STATE
"BLD",1852,1,19,0)
      .117   COUNTY
"BLD",1852,1,20,0)
      .131   PHONE NUMBER [RESIDENCE]
"BLD",1852,1,21,0)
      .132   PHONE NUMBER [WORK]
"BLD",1852,1,22,0)
      .211   K-NAME OF PRIMARY NOK
"BLD",1852,1,23,0)
      .219   K-PHONE NUMBER
"BLD",1852,1,24,0)
      .2403  MOTHER'S MAIDEN NAME
"BLD",1852,1,25,0)
      .301   SERVICE CONNECTED?
"BLD",1852,1,26,0)
      .302   SERVICE CONNECTED PERCENTAGE
"BLD",1852,1,27,0)
      .31115 EMPLOYMENT STATUS
"BLD",1852,1,28,0)
      .323   PERIOD OF SERVICE
"BLD",1852,1,29,0)
      .351   DATE OF DEATH
"BLD",1852,1,30,0)
   391       TYPE
"BLD",1852,1,31,0)
  1901       VETERAN
"BLD",1852,1,32,0)
  
"BLD",1852,1,33,0)
 The post-install routine DG53231P is invoked to re-compile all Print
"BLD",1852,1,34,0)
 Templates and Input Templates for the affected fields. 
"BLD",1852,4,0)
^9.64PA^2^1
"BLD",1852,4,2,0)
2
"BLD",1852,4,2,2,0)
^9.641^2^1
"BLD",1852,4,2,2,2,0)
PATIENT  (File-top level)
"BLD",1852,4,2,2,2,1,0)
^9.6411^1901^24
"BLD",1852,4,2,2,2,1,.02,0)
SEX
"BLD",1852,4,2,2,2,1,.03,0)
DATE OF BIRTH
"BLD",1852,4,2,2,2,1,.05,0)
MARITAL STATUS
"BLD",1852,4,2,2,2,1,.08,0)
RELIGIOUS PREFERENCE
"BLD",1852,4,2,2,2,1,.09,0)
SOCIAL SECURITY NUMBER
"BLD",1852,4,2,2,2,1,.111,0)
STREET ADDRESS [LINE 1]
"BLD",1852,4,2,2,2,1,.1112,0)
ZIP+4
"BLD",1852,4,2,2,2,1,.112,0)
STREET ADDRESS [LINE 2]
"BLD",1852,4,2,2,2,1,.113,0)
STREET ADDRESS [LINE 3]
"BLD",1852,4,2,2,2,1,.114,0)
CITY
"BLD",1852,4,2,2,2,1,.115,0)
STATE
"BLD",1852,4,2,2,2,1,.117,0)
COUNTY
"BLD",1852,4,2,2,2,1,.131,0)
PHONE NUMBER [RESIDENCE]
"BLD",1852,4,2,2,2,1,.132,0)
PHONE NUMBER [WORK]
"BLD",1852,4,2,2,2,1,.211,0)
K-NAME OF PRIMARY NOK
"BLD",1852,4,2,2,2,1,.219,0)
K-PHONE NUMBER
"BLD",1852,4,2,2,2,1,.2403,0)
MOTHER'S MAIDEN NAME
"BLD",1852,4,2,2,2,1,.301,0)
SERVICE CONNECTED?
"BLD",1852,4,2,2,2,1,.302,0)
SERVICE CONNECTED PERCENTAGE
"BLD",1852,4,2,2,2,1,.31115,0)
EMPLOYMENT STATUS
"BLD",1852,4,2,2,2,1,.323,0)
PERIOD OF SERVICE
"BLD",1852,4,2,2,2,1,.351,0)
DATE OF DEATH
"BLD",1852,4,2,2,2,1,391,0)
TYPE
"BLD",1852,4,2,2,2,1,1901,0)
VETERAN (Y/N)?
"BLD",1852,4,2,222)
y^y^p^^^^n
"BLD",1852,4,"APDD",2,2)

"BLD",1852,4,"APDD",2,2,.02)

"BLD",1852,4,"APDD",2,2,.03)

"BLD",1852,4,"APDD",2,2,.05)

"BLD",1852,4,"APDD",2,2,.08)

"BLD",1852,4,"APDD",2,2,.09)

"BLD",1852,4,"APDD",2,2,.111)

"BLD",1852,4,"APDD",2,2,.1112)

"BLD",1852,4,"APDD",2,2,.112)

"BLD",1852,4,"APDD",2,2,.113)

"BLD",1852,4,"APDD",2,2,.114)

"BLD",1852,4,"APDD",2,2,.115)

"BLD",1852,4,"APDD",2,2,.117)

"BLD",1852,4,"APDD",2,2,.131)

"BLD",1852,4,"APDD",2,2,.132)

"BLD",1852,4,"APDD",2,2,.211)

"BLD",1852,4,"APDD",2,2,.219)

"BLD",1852,4,"APDD",2,2,.2403)

"BLD",1852,4,"APDD",2,2,.301)

"BLD",1852,4,"APDD",2,2,.302)

"BLD",1852,4,"APDD",2,2,.31115)

"BLD",1852,4,"APDD",2,2,.323)

"BLD",1852,4,"APDD",2,2,.351)

"BLD",1852,4,"APDD",2,2,391)

"BLD",1852,4,"APDD",2,2,1901)

"BLD",1852,4,"B",2,2)

"BLD",1852,"INIT")
DG53231P
"BLD",1852,"KRN",0)
^9.67PA^19^18
"BLD",1852,"KRN",.4,0)
.4
"BLD",1852,"KRN",.401,0)
.401
"BLD",1852,"KRN",.402,0)
.402
"BLD",1852,"KRN",.403,0)
.403
"BLD",1852,"KRN",.5,0)
.5
"BLD",1852,"KRN",.84,0)
.84
"BLD",1852,"KRN",3.6,0)
3.6
"BLD",1852,"KRN",3.8,0)
3.8
"BLD",1852,"KRN",9.2,0)
9.2
"BLD",1852,"KRN",9.8,0)
9.8
"BLD",1852,"KRN",9.8,"NM",0)
^9.68A^^
"BLD",1852,"KRN",19,0)
19
"BLD",1852,"KRN",19.1,0)
19.1
"BLD",1852,"KRN",101,0)
101
"BLD",1852,"KRN",409.61,0)
409.61
"BLD",1852,"KRN",771,0)
771
"BLD",1852,"KRN",869.2,0)
869.2
"BLD",1852,"KRN",870,0)
870
"BLD",1852,"KRN",8994,0)
8994
"BLD",1852,"KRN","B",.4,.4)

"BLD",1852,"KRN","B",.401,.401)

"BLD",1852,"KRN","B",.402,.402)

"BLD",1852,"KRN","B",.403,.403)

"BLD",1852,"KRN","B",.5,.5)

"BLD",1852,"KRN","B",.84,.84)

"BLD",1852,"KRN","B",3.6,3.6)

"BLD",1852,"KRN","B",3.8,3.8)

"BLD",1852,"KRN","B",9.2,9.2)

"BLD",1852,"KRN","B",9.8,9.8)

"BLD",1852,"KRN","B",19,19)

"BLD",1852,"KRN","B",19.1,19.1)

"BLD",1852,"KRN","B",101,101)

"BLD",1852,"KRN","B",409.61,409.61)

"BLD",1852,"KRN","B",771,771)

"BLD",1852,"KRN","B",869.2,869.2)

"BLD",1852,"KRN","B",870,870)

"BLD",1852,"KRN","B",8994,8994)

"BLD",1852,"QUES",0)
^9.62^^
"BLD",1852,"REQB",0)
^9.611^^0
"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^y^p^^^^n
"FIA",2,0,10)

"FIA",2,0,11)

"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
5.3^DG
"FIA",2,2)
1
"FIA",2,2,.02)

"FIA",2,2,.03)

"FIA",2,2,.05)

"FIA",2,2,.08)

"FIA",2,2,.09)

"FIA",2,2,.111)

"FIA",2,2,.1112)

"FIA",2,2,.112)

"FIA",2,2,.113)

"FIA",2,2,.114)

"FIA",2,2,.115)

"FIA",2,2,.117)

"FIA",2,2,.131)

"FIA",2,2,.132)

"FIA",2,2,.211)

"FIA",2,2,.219)

"FIA",2,2,.2403)

"FIA",2,2,.301)

"FIA",2,2,.302)

"FIA",2,2,.31115)

"FIA",2,2,.323)

"FIA",2,2,.351)

"FIA",2,2,391)

"FIA",2,2,1901)

"INIT")
DG53231P
"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
231
"PKG",5,22,1,"PAH",1,1,0)
^^34^34^2990407
"PKG",5,22,1,"PAH",1,1,1,0)
 Patch DG*5.3*149 added new cross references to a number of fields
"PKG",5,22,1,"PAH",1,1,2,0)
 from the PATIENT file (#2). Clinical Information Resource Network
"PKG",5,22,1,"PAH",1,1,3,0)
 (CIRN) needs to monitor changes made to these fields.  This patch
"PKG",5,22,1,"PAH",1,1,4,0)
 turns audit ON for a number of fields in the PATIENT file. 
"PKG",5,22,1,"PAH",1,1,5,0)
  
"PKG",5,22,1,"PAH",1,1,6,0)
 The following is a list of fields in the PATIENT file for which 
"PKG",5,22,1,"PAH",1,1,7,0)
 auditing is turned on: 
"PKG",5,22,1,"PAH",1,1,8,0)
      .02    SEX
"PKG",5,22,1,"PAH",1,1,9,0)
      .03    DATE OF BIRTH
"PKG",5,22,1,"PAH",1,1,10,0)
      .05    MARITAL STATUS
"PKG",5,22,1,"PAH",1,1,11,0)
      .08    RELIGIOUS PREFERENCE
"PKG",5,22,1,"PAH",1,1,12,0)
      .09    SOCIAL SECURITY NUMBER
"PKG",5,22,1,"PAH",1,1,13,0)
      .111   STREET ADDRESS [LINE 1]
"PKG",5,22,1,"PAH",1,1,14,0)
      .1112  ZIP+4
"PKG",5,22,1,"PAH",1,1,15,0)
      .112   STREET ADDRESS [LINE 2]
"PKG",5,22,1,"PAH",1,1,16,0)
      .113   STREET ADDRESS [LINE 3]
"PKG",5,22,1,"PAH",1,1,17,0)
      .114   CITY
"PKG",5,22,1,"PAH",1,1,18,0)
      .115   STATE
"PKG",5,22,1,"PAH",1,1,19,0)
      .117   COUNTY
"PKG",5,22,1,"PAH",1,1,20,0)
      .131   PHONE NUMBER [RESIDENCE]
"PKG",5,22,1,"PAH",1,1,21,0)
      .132   PHONE NUMBER [WORK]
"PKG",5,22,1,"PAH",1,1,22,0)
      .211   K-NAME OF PRIMARY NOK
"PKG",5,22,1,"PAH",1,1,23,0)
      .219   K-PHONE NUMBER
"PKG",5,22,1,"PAH",1,1,24,0)
      .2403  MOTHER'S MAIDEN NAME
"PKG",5,22,1,"PAH",1,1,25,0)
      .301   SERVICE CONNECTED?
"PKG",5,22,1,"PAH",1,1,26,0)
      .302   SERVICE CONNECTED PERCENTAGE
"PKG",5,22,1,"PAH",1,1,27,0)
      .31115 EMPLOYMENT STATUS
"PKG",5,22,1,"PAH",1,1,28,0)
      .323   PERIOD OF SERVICE
"PKG",5,22,1,"PAH",1,1,29,0)
      .351   DATE OF DEATH
"PKG",5,22,1,"PAH",1,1,30,0)
   391       TYPE
"PKG",5,22,1,"PAH",1,1,31,0)
  1901       VETERAN
"PKG",5,22,1,"PAH",1,1,32,0)
  
"PKG",5,22,1,"PAH",1,1,33,0)
 The post-install routine DG53231P is invoked to re-compile all Print
"PKG",5,22,1,"PAH",1,1,34,0)
 Templates and Input Templates for the affected fields. 
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","DG53231P")
0^^B8374609
"RTN","DG53231P",1,0)
DG53231P ;ISA/Zoltan - Post-install for DG*5.3*231;April 7, 1999
"RTN","DG53231P",2,0)
 ;;5.3;Registration;**231**;Aug 13, 1993
"RTN","DG53231P",3,0)
 ;
"RTN","DG53231P",4,0)
POST ; Re-compiles print and input templates for those fields
"RTN","DG53231P",5,0)
 ; included in the patch.
"RTN","DG53231P",6,0)
 N FLDLIST,FLD,PTEMP,ETEMP,TEMPLATE,ROUTINE,MAXSIZE,X,Y,DMAX
"RTN","DG53231P",7,0)
 D LOADFLDS(.FLDLIST) ; Obtain list of fields being sent.
"RTN","DG53231P",8,0)
 S FLD="" ; For each field...
"RTN","DG53231P",9,0)
 F  S FLD=$O(FLDLIST(FLD)) Q:FLD=""  D
"RTN","DG53231P",10,0)
 . M PTEMP=^DIPT("AF",2,FLD) ; ...note affected print templates...
"RTN","DG53231P",11,0)
 . M ETEMP=^DIE("AF",2,FLD) ; ...note affected edit templates.
"RTN","DG53231P",12,0)
 ; Determine maximum routine size...
"RTN","DG53231P",13,0)
 S MAXSIZE=$$ROUSIZE^DILF
"RTN","DG53231P",14,0)
 ; Recompile print templates...
"RTN","DG53231P",15,0)
 D BMES^XPDUTL(" *****************************")
"RTN","DG53231P",16,0)
 D BMES^XPDUTL(" * Compiling Print Templates *")
"RTN","DG53231P",17,0)
 D BMES^XPDUTL(" *****************************")
"RTN","DG53231P",18,0)
 S TEMPLATE=""
"RTN","DG53231P",19,0)
 F  S TEMPLATE=$O(PTEMP(TEMPLATE)) Q:TEMPLATE=""  D
"RTN","DG53231P",20,0)
 . S ROUTINE=$G(^DIPT(TEMPLATE,"ROU")) ; Note Routine Name
"RTN","DG53231P",21,0)
 . I ROUTINE="" Q  ; Not a compiled template.
"RTN","DG53231P",22,0)
 . ; Set up bulletproof FileMan call.
"RTN","DG53231P",23,0)
 . S X=ROUTINE,Y=TEMPLATE,DMAX=MAXSIZE
"RTN","DG53231P",24,0)
 . S $E(X)="" ; Remove initial ^.
"RTN","DG53231P",25,0)
 . ; This NEW only lasts for one loop iteration...
"RTN","DG53231P",26,0)
 . N ROUTINE,TEMPLATE,MAXSIZE,PTEMP,ETEMP
"RTN","DG53231P",27,0)
 . D EN^DIPZ ; Classic FileMan--Trust No One.
"RTN","DG53231P",28,0)
 ; Recompile edit templates...
"RTN","DG53231P",29,0)
 D BMES^XPDUTL("   ")
"RTN","DG53231P",30,0)
 D BMES^XPDUTL(" *****************************")
"RTN","DG53231P",31,0)
 D BMES^XPDUTL(" * Compiling Input Templates *")
"RTN","DG53231P",32,0)
 D BMES^XPDUTL(" *****************************")
"RTN","DG53231P",33,0)
 S TEMPLATE=""
"RTN","DG53231P",34,0)
 F  S TEMPLATE=$O(ETEMP(TEMPLATE)) Q:TEMPLATE=""  D
"RTN","DG53231P",35,0)
 . S ROUTINE=$G(^DIE(TEMPLATE,"ROU")) ; Note Routine Name
"RTN","DG53231P",36,0)
 . I ROUTINE="" Q
"RTN","DG53231P",37,0)
 . ; Set up bulletproof FileMan call.
"RTN","DG53231P",38,0)
 . S X=ROUTINE,Y=TEMPLATE,DMAX=MAXSIZE
"RTN","DG53231P",39,0)
 . S $E(X)="" ; Remove initial ^.
"RTN","DG53231P",40,0)
 . ; This NEW only lasts for one loop iteration...
"RTN","DG53231P",41,0)
 . N ROUTINE,TEMPLATE,MAXSIZE,PTEMP,ETEMP
"RTN","DG53231P",42,0)
 . D EN^DIEZ ; Classic FileMan--Trust No One.
"RTN","DG53231P",43,0)
 Q
"RTN","DG53231P",44,0)
LOADFLDS(ARR) ; Load field list.
"RTN","DG53231P",45,0)
 N FNUM,FNAME,LINE,TEXT
"RTN","DG53231P",46,0)
 F TEXT=1:1 S LINE=$T(FLDS+TEXT) Q:$P(LINE," ")'=""  D
"RTN","DG53231P",47,0)
 . S FNUM=$P(LINE,";",3)
"RTN","DG53231P",48,0)
 . S FNAME=$P(LINE,";",4)
"RTN","DG53231P",49,0)
 . S ARR(FNUM)=FNAME
"RTN","DG53231P",50,0)
 Q
"RTN","DG53231P",51,0)
FLDS ; Fields included in this patch.
"RTN","DG53231P",52,0)
 ;;.02;SEX
"RTN","DG53231P",53,0)
 ;;.03;DATE OF BIRTH
"RTN","DG53231P",54,0)
 ;;.05;MARITAL STATUS
"RTN","DG53231P",55,0)
 ;;.08;RELIGIOUS PREFERENCE
"RTN","DG53231P",56,0)
 ;;.09;SOCIAL SECURITY NUMBER
"RTN","DG53231P",57,0)
 ;;.111;STREET ADDRESS [LINE 1]
"RTN","DG53231P",58,0)
 ;;.1112;ZIP+4
"RTN","DG53231P",59,0)
 ;;.112;STREET ADDRESS [LINE 2]
"RTN","DG53231P",60,0)
 ;;.113;STREET ADDRESS [LINE 3]
"RTN","DG53231P",61,0)
 ;;.114;CITY
"RTN","DG53231P",62,0)
 ;;.115;STATE
"RTN","DG53231P",63,0)
 ;;.117;COUNTY
"RTN","DG53231P",64,0)
 ;;.131;PHONE NUMBER [RESIDENCE]
"RTN","DG53231P",65,0)
 ;;.132;PHONE NUMBER [WORK]
"RTN","DG53231P",66,0)
 ;;.211;K-NAME OF PRIMARY NOK
"RTN","DG53231P",67,0)
 ;;.219;K-PHONE NUMBER
"RTN","DG53231P",68,0)
 ;;.2403;MOTHER'S MAIDEN NAME
"RTN","DG53231P",69,0)
 ;;.301;SERVICE CONNECTED?
"RTN","DG53231P",70,0)
 ;;.302;SERVICE CONNECTED PERCENTAGE
"RTN","DG53231P",71,0)
 ;;.31115;EMPLOYMENT STATUS
"RTN","DG53231P",72,0)
 ;;.323;PERIOD OF SERVICE
"RTN","DG53231P",73,0)
 ;;.351;DATE OF DEATH
"RTN","DG53231P",74,0)
 ;;391;TYPE
"RTN","DG53231P",75,0)
 ;;1901;VETERAN
"RTN","DG53231P",76,0)
END ;End of field list.
"VER")
8.0^21.0
"^DD",2,2,.02,0)
SEX^RSa^M:MALE;F:FEMALE;^0;2^Q
"^DD",2,2,.02,1,0)
^.1^^-1
"^DD",2,2,.02,1,1,0)
2^ASX
"^DD",2,2,.02,1,1,1)
S ^DPT("ASX",$E(X,1,30),DA)=""
"^DD",2,2,.02,1,1,2)
K ^DPT("ASX",$E(X,1,30),DA)
"^DD",2,2,.02,1,2,0)
2^AENR02^MUMPS
"^DD",2,2,.02,1,2,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.02,1,2,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.02,1,2,3)
DO NOT DELETE
"^DD",2,2,.02,1,2,"%D",0)
^^2^2^2971007^^^
"^DD",2,2,.02,1,2,"%D",1,0)
This cross-reference is used to notify HEC of changes that may affect
"^DD",2,2,.02,1,2,"%D",2,0)
enrollment. 
"^DD",2,2,.02,1,2,"DT")
2971007
"^DD",2,2,.02,1,301,0)
2^IVM02^MUMPS
"^DD",2,2,.02,1,301,1)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.02,1,301,2)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.02,1,301,"%D",0)
^^5^5^2930605^
"^DD",2,2,.02,1,301,"%D",1,0)
This cross-reference will check the IVM PATIENT file to see if a change
"^DD",2,2,.02,1,301,"%D",2,0)
to this field will require transmission to the IVM Center.  If it does,
"^DD",2,2,.02,1,301,"%D",3,0)
the IVM PATIENT file entry's TRANSMISSION STATUS will be set to 0 and
"^DD",2,2,.02,1,301,"%D",4,0)
the nightly background job will transmit the updated information.
"^DD",2,2,.02,1,301,"DT")
2930605
"^DD",2,2,.02,1,991,0)
2^AVAFC02^MUMPS
"^DD",2,2,.02,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".02;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.02,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".02;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.02,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.02,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.02,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.02,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.02,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.02,1,991,"%D",5,0)
 
"^DD",2,2,.02,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.02,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.02,1,991,"%D",8,0)
process.
"^DD",2,2,.02,1,991,"%D",9,0)
 
"^DD",2,2,.02,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.02,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.02,1,991,"%D",12,0)
  
"^DD",2,2,.02,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.02,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.02,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.02,1,991,"DT")
2970825
"^DD",2,2,.02,3)
Enter 'M' for MALE, or 'F' for FEMALE.
"^DD",2,2,.02,20,0)
^.3LA^1^1
"^DD",2,2,.02,20,1,0)
DEMOG^
"^DD",2,2,.02,21,0)
^^1^1^2920721^^^
"^DD",2,2,.02,21,1,0)
Enter 'M' if this applicant is a male, or 'F' if female.
"^DD",2,2,.02,"AUDIT")
y
"^DD",2,2,.02,"DT")
2990105
"^DD",2,2,.03,0)
DATE OF BIRTH^RDXOa^^0;3^S %DT="EP" D ^%DT S X=Y K:1701231>X!(DT<X) X
"^DD",2,2,.03,.1)
DOB
"^DD",2,2,.03,1,0)
^.1^^-1
"^DD",2,2,.03,1,1,0)
2^ADOB
"^DD",2,2,.03,1,1,1)
S ^DPT("ADOB",$E(X,1,30),DA)=""
"^DD",2,2,.03,1,1,2)
K ^DPT("ADOB",$E(X,1,30),DA)
"^DD",2,2,.03,1,2,0)
^^TRIGGER^2^.083
"^DD",2,2,.03,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DPT(D0,0)):^(0),1:"") S X=$P(Y(1),U,20),X=X S DIU=X K Y S X=DIV S X="1" X ^DD(2,.03,1,2,1.4)
"^DD",2,2,.03,1,2,1.4)
S DIH=$S($D(^DPT(DIV(0),0)):^(0),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,19,99))  S DIH=DIH_U" S %=$P(DIH,U,21,999),DIU=$P(DIH,U,20),^(0)=$P(DIH,U,1,19)_U_DIV_$S(%]"":U_%,1:""),DIH=2,DIG=.083 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.03,1,2,2)
Q
"^DD",2,2,.03,1,2,"CREATE VALUE")
"1"
"^DD",2,2,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",2,2,.03,1,2,"FIELD")
#.083
"^DD",2,2,.03,1,3,0)
2^AODS3^MUMPS
"^DD",2,2,.03,1,3,1)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.03,1,3,2)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.03,1,4,0)
2^AENR03^MUMPS
"^DD",2,2,.03,1,4,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.03,1,4,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.03,1,4,3)
DO NOT DELETE
"^DD",2,2,.03,1,4,"%D",0)
^^2^2^2971007^^^
"^DD",2,2,.03,1,4,"%D",1,0)
This cross-reference is used to notify HEC of changes that may affect
"^DD",2,2,.03,1,4,"%D",2,0)
enrollment. 
"^DD",2,2,.03,1,4,"DT")
2971007
"^DD",2,2,.03,1,301,0)
2^IVM03^MUMPS
"^DD",2,2,.03,1,301,1)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.03,1,301,2)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.03,1,301,"%D",0)
^^5^5^2930605^
"^DD",2,2,.03,1,301,"%D",1,0)
This cross-reference will check the IVM PATIENT file to see if a change
"^DD",2,2,.03,1,301,"%D",2,0)
to this field will require transmission to the IVM Center.  If it does,
"^DD",2,2,.03,1,301,"%D",3,0)
the IVM PATIENT file entry's TRANSMISSION STATUS will be set to 0 and
"^DD",2,2,.03,1,301,"%D",4,0)
the nightly background job will transmit the updated information.
"^DD",2,2,.03,1,301,"DT")
2930605
"^DD",2,2,.03,1,991,0)
2^AVAFC03^MUMPS
"^DD",2,2,.03,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".03;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.03,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".03;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.03,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.03,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.03,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.03,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.03,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.03,1,991,"%D",5,0)
 
"^DD",2,2,.03,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.03,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.03,1,991,"%D",8,0)
process.
"^DD",2,2,.03,1,991,"%D",9,0)
 
"^DD",2,2,.03,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.03,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.03,1,991,"%D",12,0)
  
"^DD",2,2,.03,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.03,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.03,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.03,1,991,"DT")
2980501
"^DD",2,2,.03,2)
S Y(0)=Y S X=Y(0) S:X X=$E(X,4,5)_"/"_$E(X,6,7)_"/"_(1700+$E(X,1,3)) S Y=X
"^DD",2,2,.03,2.1)
NUMDATE4(DOB)
"^DD",2,2,.03,3)
Enter the patients DATE OF BIRTH which must be later than 12/31/1870.
"^DD",2,2,.03,20,0)
^.3LA^1^1
"^DD",2,2,.03,20,1,0)
DEMOG^
"^DD",2,2,.03,21,0)
^^2^2^2990205^^^^
"^DD",2,2,.03,21,1,0)
Enter the applicant's date of birth between December 31, 1870 and today's
"^DD",2,2,.03,21,2,0)
date.
"^DD",2,2,.03,"AUDIT")
y
"^DD",2,2,.03,"DT")
2990105
"^DD",2,2,.05,0)
MARITAL STATUS^RP11'a^DIC(11,^0;5^Q
"^DD",2,2,.05,1,0)
^.1
"^DD",2,2,.05,1,991,0)
2^AVAFC05^MUMPS
"^DD",2,2,.05,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".05;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.05,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".05;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.05,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.05,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.05,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.05,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.05,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.05,1,991,"%D",5,0)
 
"^DD",2,2,.05,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.05,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.05,1,991,"%D",8,0)
process.
"^DD",2,2,.05,1,991,"%D",9,0)
 
"^DD",2,2,.05,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.05,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.05,1,991,"%D",12,0)
  
"^DD",2,2,.05,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.05,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.05,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.05,1,991,"DT")
2970825
"^DD",2,2,.05,3)
Select from the available listing this patients current marital status.
"^DD",2,2,.05,20,0)
^.3LA^1^1
"^DD",2,2,.05,20,1,0)
DEMOG^
"^DD",2,2,.05,21,0)
^^2^2^2870403^^^
"^DD",2,2,.05,21,1,0)
Select from the available listing this applicant's current
"^DD",2,2,.05,21,2,0)
marital status.
"^DD",2,2,.05,"AUDIT")
y
"^DD",2,2,.05,"DT")
2980227
"^DD",2,2,.08,0)
RELIGIOUS PREFERENCE^P13'a^DIC(13,^0;8^Q
"^DD",2,2,.08,.1)
RELIGION
"^DD",2,2,.08,1,0)
^.1
"^DD",2,2,.08,1,991,0)
2^AVAFC08^MUMPS
"^DD",2,2,.08,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".08;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.08,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".08;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.08,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.08,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.08,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.08,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.08,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.08,1,991,"%D",5,0)
 
"^DD",2,2,.08,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.08,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.08,1,991,"%D",8,0)
process.
"^DD",2,2,.08,1,991,"%D",9,0)
 
"^DD",2,2,.08,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.08,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.08,1,991,"%D",12,0)
  
"^DD",2,2,.08,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.08,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.08,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.08,1,991,"DT")
2970825
"^DD",2,2,.08,3)
Select from the available list this patients religious preference.
"^DD",2,2,.08,20,0)
^.3LA^1^1
"^DD",2,2,.08,20,1,0)
DEMOG
"^DD",2,2,.08,21,0)
^^2^2^2861117^^
"^DD",2,2,.08,21,1,0)
Select from the available listing the religious preference of this
"^DD",2,2,.08,21,2,0)
applicant.
"^DD",2,2,.08,"AUDIT")
y
"^DD",2,2,.08,"DT")
2970825
"^DD",2,2,.09,0)
SOCIAL SECURITY NUMBER^RFXa^^0;9^K:X[""""!($A(X)=45) X I $D(X) S:'$D(DPTX) DFN=DA D SSN^DGINP Q  I $L(X)>10
"^DD",2,2,.09,.1)
SSN
"^DD",2,2,.09,1,0)
^.1^^-1
"^DD",2,2,.09,1,1,0)
2^BS^MUMPS
"^DD",2,2,.09,1,1,1)
S ^DPT("BS",$E(X,6,9),DA)=""
"^DD",2,2,.09,1,1,2)
K ^DPT("BS",$E(X,6,9),DA)
"^DD",2,2,.09,1,2,0)
^^TRIGGER^2^.083
"^DD",2,2,.09,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DPT(D0,0)):^(0),1:"") S X=$P(Y(1),U,20),X=X S DIU=X K Y S X=DIV S X="1" X ^DD(2,.09,1,2,1.4)
"^DD",2,2,.09,1,2,1.4)
S DIH=$S($D(^DPT(DIV(0),0)):^(0),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,19,99))  S DIH=DIH_U" S %=$P(DIH,U,21,999),DIU=$P(DIH,U,20),^(0)=$P(DIH,U,1,19)_U_DIV_$S(%]"":U_%,1:""),DIH=2,DIG=.083 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.09,1,2,2)
Q
"^DD",2,2,.09,1,2,"CREATE VALUE")
"1"
"^DD",2,2,.09,1,2,"DELETE VALUE")
NO EFFECT
"^DD",2,2,.09,1,2,"FIELD")
#.083
"^DD",2,2,.09,1,3,0)
2^BS5^MUMPS
"^DD",2,2,.09,1,3,1)
S ^DPT("BS5",$E(^DPT(DA,0),1)_$E(X,6,9),DA)=""
"^DD",2,2,.09,1,3,2)
K ^DPT("BS5",$E(^DPT(DA,0),1)_$E(X,6,9),DA)
"^DD",2,2,.09,1,4,0)
2^AODS1^MUMPS
"^DD",2,2,.09,1,4,1)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.09,1,4,2)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.09,1,5,0)
2^ATP^MUMPS
"^DD",2,2,.09,1,5,1)
I $E(X,1,5)="00000" D SET^DGREGDD1(DA,.6,0,21,1)
"^DD",2,2,.09,1,5,2)
D KILL^DGREGDD1(DA,.6,0,21,0)
"^DD",2,2,.09,1,5,"%D",0)
^^2^2^2951026^^^^
"^DD",2,2,.09,1,5,"%D",1,0)
This cross reference is used to indentify test patients. Test patients are
"^DD",2,2,.09,1,5,"%D",2,0)
designated by five leading zeros in the SSN.
"^DD",2,2,.09,1,5,"DT")
2951026
"^DD",2,2,.09,1,6,0)
2^AENR09^MUMPS
"^DD",2,2,.09,1,6,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.09,1,6,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.09,1,6,3)
DO NOT DELETE
"^DD",2,2,.09,1,6,"%D",0)
^^3^3^2971007^^^
"^DD",2,2,.09,1,6,"%D",1,0)
 
"^DD",2,2,.09,1,6,"%D",2,0)
This cross-reference is used to notify HEC of changes that may affect
"^DD",2,2,.09,1,6,"%D",3,0)
enrollment. 
"^DD",2,2,.09,1,6,"DT")
2971007
"^DD",2,2,.09,1,7,0)
2^SSN
"^DD",2,2,.09,1,7,1)
S ^DPT("SSN",$E(X,1,30),DA)=""
"^DD",2,2,.09,1,7,2)
K ^DPT("SSN",$E(X,1,30),DA)
"^DD",2,2,.09,1,8,0)
2^AVADPT6^MUMPS
"^DD",2,2,.09,1,8,1)
S VADFN=DA D SET^VADPT6 K VADFN
"^DD",2,2,.09,1,8,2)
S VADFN=DA D KILL^VADPT6 K VADFN
"^DD",2,2,.09,1,9,0)
2^AD^MUMPS
"^DD",2,2,.09,1,9,1)
S PPP=X,X="PPPFMX" X ^%ZOSF("TEST") D:$T SNSSN^PPPFMX S X=PPP K PPP
"^DD",2,2,.09,1,9,2)
S PPP=X,X="PPPFMX" X ^%ZOSF("TEST") D:$T KNSSN^PPPFMX S X=PPP K PPP
"^DD",2,2,.09,1,9,"%D",0)
^^2^2^2920611^
"^DD",2,2,.09,1,9,"%D",1,0)
This cross-reference is used to add a new SSN to the Prescription
"^DD",2,2,.09,1,9,"%D",2,0)
Practices Files when a new patient is added to the patient file.
"^DD",2,2,.09,1,9,"DT")
2920611
"^DD",2,2,.09,1,301,0)
2^IVM09^MUMPS
"^DD",2,2,.09,1,301,1)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.09,1,301,2)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.09,1,301,"%D",0)
^^5^5^2930605^
"^DD",2,2,.09,1,301,"%D",1,0)
This cross-reference will check the IVM PATIENT file to see if a change
"^DD",2,2,.09,1,301,"%D",2,0)
to this field will require transmission to the IVM Center.  If it does,
"^DD",2,2,.09,1,301,"%D",3,0)
the IVM PATIENT file entry's TRANSMISSION STATUS will be set to 0 and
"^DD",2,2,.09,1,301,"%D",4,0)
the nightly background job will transmit the updated information.
"^DD",2,2,.09,1,301,"DT")
2930605
"^DD",2,2,.09,1,800,0)
2^PX09^MUMPS
"^DD",2,2,.09,1,800,1)
S PX=X,X="PXXDPT" X ^%ZOSF("TEST") D:$T SETSSN^PXXDPT S X=PX K PX
"^DD",2,2,.09,1,800,2)
S PX=X,X="PXXDPT" X ^%ZOSF("TEST") D:$T KILLSSN^PXXDPT S X=PX K PX
"^DD",2,2,.09,1,800,"%D",0)
^^2^2^2960624^^^
"^DD",2,2,.09,1,800,"%D",1,0)
This cross-reference is used to add a new SSN to the 9000001 IHS Patient
"^DD",2,2,.09,1,800,"%D",2,0)
File when a new patient is added to the Patient File.
"^DD",2,2,.09,1,800,"DT")
2930908
"^DD",2,2,.09,1,991,0)
2^AVAFC09^MUMPS
"^DD",2,2,.09,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".09;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.09,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".09;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.09,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.09,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.09,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.09,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.09,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.09,1,991,"%D",5,0)
 
"^DD",2,2,.09,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.09,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.09,1,991,"%D",8,0)
process.
"^DD",2,2,.09,1,991,"%D",9,0)
 
"^DD",2,2,.09,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.09,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.09,1,991,"%D",12,0)
  
"^DD",2,2,.09,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.09,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.09,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.09,1,991,"DT")
2970825
"^DD",2,2,.09,2)
S Y(0)=Y S:$L(Y)=11 Y=$E(Y,10,11)_$E(Y,1,9)
"^DD",2,2,.09,2.1)
S:$L(Y)=11 Y=$E(Y,10,11)_$E(Y,1,9)
"^DD",2,2,.09,3)
Enter 9-digit SSN or 'P' for pseudo-SSN.
"^DD",2,2,.09,10)
10/10 FORM
"^DD",2,2,.09,11,0)
^.2LAP^^0
"^DD",2,2,.09,11,1,0)
1^
"^DD",2,2,.09,11,2,0)
2^
"^DD",2,2,.09,20,0)
^.3LA^1^1
"^DD",2,2,.09,20,1,0)
DEMOG^
"^DD",2,2,.09,21,0)
^^34^34^2990205^^^^
"^DD",2,2,.09,21,1,0)
Enter the applicants social security number as nine digits, i.e.,
"^DD",2,2,.09,21,2,0)
123456789.  If the social security number is unknown and you need to
"^DD",2,2,.09,21,3,0)
assign a pseudo SSN follow it with a 'P', i.e., 123456789P.  Simply
"^DD",2,2,.09,21,4,0)
enter a 'P' if you wish the system to determine the proper pseudo SSN.
"^DD",2,2,.09,21,5,0)
Pseudo SSN's are determined as follows:
"^DD",2,2,.09,21,6,0)
   
"^DD",2,2,.09,21,7,0)
   1.  Based on the following table assign the first three numbers
"^DD",2,2,.09,21,8,0)
       of the pseudo SSN based on the patient's three initials in
"^DD",2,2,.09,21,9,0)
       first-middle-last initial order.  For example, if the name
"^DD",2,2,.09,21,10,0)
       is 'SMITH,JOHN P' the table would be used to convert JPS
"^DD",2,2,.09,21,11,0)
       (the initials for JOHN P SMITH) into 467.
"^DD",2,2,.09,21,12,0)
    
"^DD",2,2,.09,21,13,0)
       ALPHA     NUMBER              ALPHA      NUMBER
"^DD",2,2,.09,21,14,0)
       -----     ------              -----      ------
"^DD",2,2,.09,21,15,0)
       A,B,C       1                 D,E,F        2
"^DD",2,2,.09,21,16,0)
       G,H,I       3                 J,K,L        4
"^DD",2,2,.09,21,17,0)
       M,N,O       5                 P,Q,R        6
"^DD",2,2,.09,21,18,0)
       S,T,U       7                 V,W,X        8
"^DD",2,2,.09,21,19,0)
       Y,Z         9                 NO INITIAL   0
"^DD",2,2,.09,21,20,0)
   
"^DD",2,2,.09,21,21,0)
   2.  Using the patient's date of birth convert it to six numerics
"^DD",2,2,.09,21,22,0)
       in month-day-year order.  Where a month, day or year consists of
"^DD",2,2,.09,21,23,0)
       less than one numeric, i.e., JUNE=6, preceed it by a zero, i.e.,
"^DD",2,2,.09,21,24,0)
       JUNE=06.  If the month and/or year of birth are unknown indicate
"^DD",2,2,.09,21,25,0)
       them as '00'.
"^DD",2,2,.09,21,26,0)
    
"^DD",2,2,.09,21,27,0)
 EXAMPLES
"^DD",2,2,.09,21,28,0)
 --------
"^DD",2,2,.09,21,29,0)
 Patient Name             DOB                 Pseudo SSN
"^DD",2,2,.09,21,30,0)
 ------------             ---                 ----------
"^DD",2,2,.09,21,31,0)
 SMITH,JOHN P             Jan 3, 1917         467010317P
"^DD",2,2,.09,21,32,0)
 SMITH,JOHN P             Jan 1917            467010017P
"^DD",2,2,.09,21,33,0)
 SMITH,JOHN P             1917                467000017P
"^DD",2,2,.09,21,34,0)
 SMITH,JOHN               Dec 15, 1945        407121545P
"^DD",2,2,.09,"AUDIT")
y
"^DD",2,2,.09,"DT")
2980521
"^DD",2,2,.111,0)
STREET ADDRESS [LINE 1]^Fa^^.11;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>35!($L(X)<3) X
"^DD",2,2,.111,.1)

"^DD",2,2,.111,1,0)
^.1^^-1
"^DD",2,2,.111,1,1,0)
2^AXR29^MUMPS
"^DD",2,2,.111,1,1,1)
Q
"^DD",2,2,.111,1,1,2)
S DGXRF=.111 D ^DGDDC Q
"^DD",2,2,.111,1,2,0)
2^AODS111^MUMPS
"^DD",2,2,.111,1,2,1)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.111,1,2,2)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.111,1,3,0)
2^AENR111^MUMPS
"^DD",2,2,.111,1,3,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.111,1,3,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.111,1,3,3)
DO NOT DELETE
"^DD",2,2,.111,1,3,"%D",0)
^^2^2^2971007^^^^
"^DD",2,2,.111,1,3,"%D",1,0)
This cross-reference is used to notify HEC of changes that may affect
"^DD",2,2,.111,1,3,"%D",2,0)
enrollment. 
"^DD",2,2,.111,1,3,"DT")
2971007
"^DD",2,2,.111,1,301,0)
2^IVM111^MUMPS
"^DD",2,2,.111,1,301,1)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.111,1,301,2)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.111,1,301,"%D",0)
^^5^5^2930605^
"^DD",2,2,.111,1,301,"%D",1,0)
This cross-reference will check the IVM PATIENT file to see if a change
"^DD",2,2,.111,1,301,"%D",2,0)
to this field will require transmission to the IVM Center.  If it does,
"^DD",2,2,.111,1,301,"%D",3,0)
the IVM PATIENT file entry's TRANSMISSION STATUS will be set to 0 and
"^DD",2,2,.111,1,301,"%D",4,0)
the nightly background job will transmit the updated information.
"^DD",2,2,.111,1,301,"DT")
2930605
"^DD",2,2,.111,1,991,0)
2^AVAFC111^MUMPS
"^DD",2,2,.111,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".111;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.111,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".111;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.111,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.111,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.111,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.111,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.111,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.111,1,991,"%D",5,0)
 
"^DD",2,2,.111,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.111,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.111,1,991,"%D",8,0)
process.
"^DD",2,2,.111,1,991,"%D",9,0)
 
"^DD",2,2,.111,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.111,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.111,1,991,"%D",12,0)
  
"^DD",2,2,.111,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.111,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.111,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.111,1,991,"DT")
2970825
"^DD",2,2,.111,3)
Enter the first line of this applicant's residence street address [3-35 characters].
"^DD",2,2,.111,20,0)
^.3LA^2^1
"^DD",2,2,.111,20,2,0)
DEMOG^
"^DD",2,2,.111,21,0)
^^2^2^2910501^^^^
"^DD",2,2,.111,21,1,0)
Enter the first line of this applicant's residence street address
"^DD",2,2,.111,21,2,0)
[3-35 characters].
"^DD",2,2,.111,"AUDIT")
y
"^DD",2,2,.111,"DT")
2980520
"^DD",2,2,.1112,0)
ZIP+4^FXOa^^.11;12^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>20!($L(X)<5) X I $D(X) D ZIPIN^VAFADDR
"^DD",2,2,.1112,1,0)
^.1^^-1
"^DD",2,2,.1112,1,1,0)
2^AZIP4^MUMPS
"^DD",2,2,.1112,1,1,1)
D SET^DGREGDD1(DA,.116,.11,6,$E(X,1,5))
"^DD",2,2,.1112,1,1,2)
D KILL^DGREGDD1(DA,.116,.11,6,$E(X,1,5))
"^DD",2,2,.1112,1,1,"%D",0)
2
"^DD",2,2,.1112,1,1,"%D",1,0)
This sets the corresponding zip code field to the first 5 digits of
"^DD",2,2,.1112,1,1,"%D",2,0)
this field.
"^DD",2,2,.1112,1,1,"DT")
2930505
"^DD",2,2,.1112,1,2,0)
2^AENR1112^MUMPS
"^DD",2,2,.1112,1,2,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.1112,1,2,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.1112,1,2,3)
DO NOT DELETE
"^DD",2,2,.1112,1,2,"%D",0)
^^2^2^2971007^^^
"^DD",2,2,.1112,1,2,"%D",1,0)
This cross-reference is used to notify HEC of changes that may affect
"^DD",2,2,.1112,1,2,"%D",2,0)
enrollment. 
"^DD",2,2,.1112,1,2,"DT")
2971007
"^DD",2,2,.1112,1,301,0)
2^IVM1112^MUMPS
"^DD",2,2,.1112,1,301,1)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.1112,1,301,2)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.1112,1,301,"%D",0)
^^5^5^2930605^
"^DD",2,2,.1112,1,301,"%D",1,0)
This cross-reference will check the IVM PATIENT file to see if a change
"^DD",2,2,.1112,1,301,"%D",2,0)
to this field will require transmission to the IVM Center.  If it does,
"^DD",2,2,.1112,1,301,"%D",3,0)
the IVM PATIENT file entry's TRANSMISSION STATUS will be set to 0 and
"^DD",2,2,.1112,1,301,"%D",4,0)
the nightly background job will transmit the updated information.
"^DD",2,2,.1112,1,301,"DT")
2930605
"^DD",2,2,.1112,1,991,0)
2^AVAFC1112^MUMPS
"^DD",2,2,.1112,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".1112;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.1112,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".1112;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.1112,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.1112,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.1112,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.1112,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.1112,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.1112,1,991,"%D",5,0)
 
"^DD",2,2,.1112,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.1112,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.1112,1,991,"%D",8,0)
process.
"^DD",2,2,.1112,1,991,"%D",9,0)
 
"^DD",2,2,.1112,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.1112,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.1112,1,991,"%D",12,0)
  
"^DD",2,2,.1112,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.1112,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.1112,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.1112,1,991,"DT")
2970825
"^DD",2,2,.1112,2)
S Y(0)=Y D ZIPOUT^VAFADDR
"^DD",2,2,.1112,2.1)
D ZIPOUT^VAFADDR
"^DD",2,2,.1112,3)
Answer with either 5 digit or 9 digit zip code.
"^DD",2,2,.1112,20,0)
^.3LA^1^1
"^DD",2,2,.1112,20,1,0)
DEMOG
"^DD",2,2,.1112,21,0)
^^2^2^2930603^^^^
"^DD",2,2,.1112,21,1,0)
Answer with either the 5 digit format (e.g. 12345) or the nine digit
"^DD",2,2,.1112,21,2,0)
format (e.g. 12345-6789 or 123456789).
"^DD",2,2,.1112,23,0)
^^2^2^2930603^^^^
"^DD",2,2,.1112,23,1,0)
Related to other address fields on this node.  This field 'triggers'
"^DD",2,2,.1112,23,2,0)
the ZIP CODE (#.116) field, using the first 5 digits of this field.
"^DD",2,2,.1112,"AUDIT")
y
"^DD",2,2,.1112,"DT")
2971219
"^DD",2,2,.112,0)
STREET ADDRESS [LINE 2]^Fa^^.11;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>30!($L(X)<3) X D:$D(X) UP^DGHELP
"^DD",2,2,.112,.1)

"^DD",2,2,.112,1,0)
^.1^^-1
"^DD",2,2,.112,1,1,0)
2^AXR30^MUMPS
"^DD",2,2,.112,1,1,1)
Q
"^DD",2,2,.112,1,1,2)
S DGXRF=.112 D ^DGDDC Q
"^DD",2,2,.112,1,2,0)
2^AODS112^MUMPS
"^DD",2,2,.112,1,2,1)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.112,1,2,2)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.112,1,3,0)
2^AENR112^MUMPS
"^DD",2,2,.112,1,3,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.112,1,3,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.112,1,3,3)
DO NOT DELETE
"^DD",2,2,.112,1,3,"%D",0)
^^2^2^2971007^^^
"^DD",2,2,.112,1,3,"%D",1,0)
This cross-reference is used to notify HEC of changes that may affect
"^DD",2,2,.112,1,3,"%D",2,0)
enrollment. 
"^DD",2,2,.112,1,3,"DT")
2971007
"^DD",2,2,.112,1,301,0)
2^IVM112^MUMPS
"^DD",2,2,.112,1,301,1)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.112,1,301,2)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.112,1,301,"%D",0)
^^5^5^2930605^
"^DD",2,2,.112,1,301,"%D",1,0)
This cross-reference will check the IVM PATIENT file to see if a change
"^DD",2,2,.112,1,301,"%D",2,0)
to this field will require transmission to the IVM Center.  If it does,
"^DD",2,2,.112,1,301,"%D",3,0)
the IVM PATIENT file entry's TRANSMISSION STATUS will be set to 0 and
"^DD",2,2,.112,1,301,"%D",4,0)
the nightly background job will transmit the updated information.
"^DD",2,2,.112,1,301,"DT")
2930605
"^DD",2,2,.112,1,991,0)
2^AVAFC112^MUMPS
"^DD",2,2,.112,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".112;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.112,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".112;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.112,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.112,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.112,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.112,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.112,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.112,1,991,"%D",5,0)
 
"^DD",2,2,.112,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.112,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.112,1,991,"%D",8,0)
process.
"^DD",2,2,.112,1,991,"%D",9,0)
 
"^DD",2,2,.112,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.112,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.112,1,991,"%D",12,0)
  
"^DD",2,2,.112,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.112,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.112,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.112,1,991,"DT")
2970825
"^DD",2,2,.112,3)
If necessary, enter the second line of this applicant's street address [3-30 characters].
"^DD",2,2,.112,20,0)
^.3LA^1^1
"^DD",2,2,.112,20,1,0)
DEMOG
"^DD",2,2,.112,21,0)
^^3^3^2861007^
"^DD",2,2,.112,21,1,0)
Enter the second line of this applicant's residence street address
"^DD",2,2,.112,21,2,0)
[3-30 characters] if the space provided in 'street address' was
"^DD",2,2,.112,21,3,0)
not sufficient.
"^DD",2,2,.112,"AUDIT")
y
"^DD",2,2,.112,"DT")
2980520
"^DD",2,2,.113,0)
STREET ADDRESS [LINE 3]^Fa^^.11;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>30!($L(X)<3) X
"^DD",2,2,.113,.1)

"^DD",2,2,.113,1,0)
^.1^^-1
"^DD",2,2,.113,1,1,0)
2^AODS113^MUMPS
"^DD",2,2,.113,1,1,1)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.113,1,1,2)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.113,1,2,0)
2^AENR113^MUMPS
"^DD",2,2,.113,1,2,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.113,1,2,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.113,1,2,3)
DO NOT DELETE
"^DD",2,2,.113,1,2,"%D",0)
^^2^2^2971007^^^
"^DD",2,2,.113,1,2,"%D",1,0)
This cross-reference is used to notify HEC of changes that may affect
"^DD",2,2,.113,1,2,"%D",2,0)
enrollment. 
"^DD",2,2,.113,1,2,"DT")
2971007
"^DD",2,2,.113,1,301,0)
2^IVM113^MUMPS
"^DD",2,2,.113,1,301,1)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.113,1,301,2)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.113,1,301,"%D",0)
^^5^5^2930605^
"^DD",2,2,.113,1,301,"%D",1,0)
This cross-reference will check the IVM PATIENT file to see if a change
"^DD",2,2,.113,1,301,"%D",2,0)
to this field will require transmission to the IVM Center.  If it does,
"^DD",2,2,.113,1,301,"%D",3,0)
the IVM PATIENT file entry's TRANSMISSION STATUS will be set to 0 and
"^DD",2,2,.113,1,301,"%D",4,0)
the nightly background job will transmit the updated information.
"^DD",2,2,.113,1,301,"DT")
2930605
"^DD",2,2,.113,1,991,0)
2^AVAFC113^MUMPS
"^DD",2,2,.113,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".113;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.113,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".113;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.113,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.113,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.113,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.113,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.113,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.113,1,991,"%D",5,0)
 
"^DD",2,2,.113,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.113,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.113,1,991,"%D",8,0)
process.
"^DD",2,2,.113,1,991,"%D",9,0)
 
"^DD",2,2,.113,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.113,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.113,1,991,"%D",12,0)
  
"^DD",2,2,.113,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.113,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.113,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.113,1,991,"DT")
2970825
"^DD",2,2,.113,3)
If necessary, enter a third line of this applicant's street address [3-30 characters].
"^DD",2,2,.113,20,0)
^.3LA^1^1
"^DD",2,2,.113,20,1,0)
DEMOG
"^DD",2,2,.113,21,0)
^^3^3^2861007^
"^DD",2,2,.113,21,1,0)
Enter the third line of this applicant's residence street address
"^DD",2,2,.113,21,2,0)
[3-30 characters] if the space provided in 'street address' and
"^DD",2,2,.113,21,3,0)
'street address 2' was not sufficient.
"^DD",2,2,.113,"AUDIT")
y
"^DD",2,2,.113,"DT")
2971219
"^DD",2,2,.114,0)
CITY^Fa^^.11;4^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>15!($L(X)<2) X
"^DD",2,2,.114,1,0)
^.1^^-1
"^DD",2,2,.114,1,1,0)
2^AODS114^MUMPS
"^DD",2,2,.114,1,1,1)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.114,1,1,2)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.114,1,2,0)
2^AENR114^MUMPS
"^DD",2,2,.114,1,2,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.114,1,2,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.114,1,2,3)
DO NOT DELETE
"^DD",2,2,.114,1,2,"%D",0)
^^2^2^2971007^^^
"^DD",2,2,.114,1,2,"%D",1,0)
This cross-reference is used to notify HEC of changes that may affect
"^DD",2,2,.114,1,2,"%D",2,0)
enrollment. 
"^DD",2,2,.114,1,2,"DT")
2971007
"^DD",2,2,.114,1,301,0)
2^IVM114^MUMPS
"^DD",2,2,.114,1,301,1)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.114,1,301,2)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.114,1,301,"%D",0)
^^4^4^2971107^^
"^DD",2,2,.114,1,301,"%D",1,0)
This cross-reference will check the IVM PATIENT file to see if a change
"^DD",2,2,.114,1,301,"%D",2,0)
to this field will require transmission to the IVM Center.  If it does,
"^DD",2,2,.114,1,301,"%D",3,0)
the IVM PATIENT file entry's TRANSMISSION STATUS will be set to 0 and
"^DD",2,2,.114,1,301,"%D",4,0)
the nightly background job will transmit the updated information.
"^DD",2,2,.114,1,301,"DT")
2930605
"^DD",2,2,.114,1,991,0)
2^AVAFC114^MUMPS
"^DD",2,2,.114,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".114;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.114,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".114;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.114,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.114,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.114,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.114,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.114,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.114,1,991,"%D",5,0)
 
"^DD",2,2,.114,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.114,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.114,1,991,"%D",8,0)
process.
"^DD",2,2,.114,1,991,"%D",9,0)
 
"^DD",2,2,.114,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.114,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.114,1,991,"%D",12,0)
  
"^DD",2,2,.114,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.114,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.114,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.114,1,991,"DT")
2970825
"^DD",2,2,.114,3)
ANSWER MUST BE 2-15 CHARACTERS IN LENGTH
"^DD",2,2,.114,20,0)
^.3LA^1^1
"^DD",2,2,.114,20,1,0)
DEMOG
"^DD",2,2,.114,21,0)
^^3^3^2870130^^
"^DD",2,2,.114,21,1,0)
Enter the city in which this applicant resides [2-15 characters].
"^DD",2,2,.114,21,2,0)
If the space provided is not sufficient please abbreviate the
"^DD",2,2,.114,21,3,0)
city to the best of your ability.
"^DD",2,2,.114,"AUDIT")
y
"^DD",2,2,.114,"DT")
2980520
"^DD",2,2,.115,0)
STATE^P5'a^DIC(5,^.11;5^Q
"^DD",2,2,.115,1,0)
^.1^^-1
"^DD",2,2,.115,1,1,0)
^^TRIGGER^2^.117
"^DD",2,2,.115,1,1,1)
Q
"^DD",2,2,.115,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DPT(D0,.11)):^(.11),1:""),Y=$P(Y(1),U,7) X:$D(^DD(2,.117,2)) ^(2) S X=Y S DIU=X K Y S X=DIV S X="" X ^DD(2,.115,1,1,2.4)
"^DD",2,2,.115,1,1,2.4)
S DIH=$S($D(^DPT(DIV(0),.11)):^(.11),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,6,99))  S DIH=DIH_U" S %=$P(DIH,U,8,999),^(.11)=$P(DIH,U,1,6)_U_DIV_$S(%]"":U_%,1:""),DIH=2,DIG=.117 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.115,1,1,"CREATE VALUE")
NO EFFECT
"^DD",2,2,.115,1,1,"DELETE VALUE")
@
"^DD",2,2,.115,1,1,"FIELD")
COUNTY
"^DD",2,2,.115,1,2,0)
2^AODS115^MUMPS
"^DD",2,2,.115,1,2,1)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.115,1,2,2)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.115,1,3,0)
2^AENR115^MUMPS
"^DD",2,2,.115,1,3,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.115,1,3,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.115,1,3,3)
DO NOT DELETE
"^DD",2,2,.115,1,3,"%D",0)
^^2^2^2971007^^^
"^DD",2,2,.115,1,3,"%D",1,0)
This cross-reference is used to notify HEC of changes that may affect
"^DD",2,2,.115,1,3,"%D",2,0)
enrollment. 
"^DD",2,2,.115,1,3,"DT")
2971007
"^DD",2,2,.115,1,301,0)
2^IVM115^MUMPS
"^DD",2,2,.115,1,301,1)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.115,1,301,2)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.115,1,301,"%D",0)
^^5^5^2930605^
"^DD",2,2,.115,1,301,"%D",1,0)
This cross-reference will check the IVM PATIENT file to see if a change
"^DD",2,2,.115,1,301,"%D",2,0)
to this field will require transmission to the IVM Center.  If it does,
"^DD",2,2,.115,1,301,"%D",3,0)
the IVM PATIENT file entry's TRANSMISSION STATUS will be set to 0 and
"^DD",2,2,.115,1,301,"%D",4,0)
the nightly background job will transmit the updated information.
"^DD",2,2,.115,1,301,"DT")
2930605
"^DD",2,2,.115,1,991,0)
2^AVAFC115^MUMPS
"^DD",2,2,.115,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".115;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.115,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".115;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.115,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.115,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.115,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.115,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.115,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.115,1,991,"%D",5,0)
 
"^DD",2,2,.115,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.115,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.115,1,991,"%D",8,0)
process.
"^DD",2,2,.115,1,991,"%D",9,0)
 
"^DD",2,2,.115,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.115,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.115,1,991,"%D",12,0)
  
"^DD",2,2,.115,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.115,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.115,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.115,1,991,"DT")
2970825
"^DD",2,2,.115,3)
Select from the available listing the state in which this applicant resides.
"^DD",2,2,.115,20,0)
^.3LA^1^1
"^DD",2,2,.115,20,1,0)
DEMOG
"^DD",2,2,.115,21,0)
^^2^2^2861117^^
"^DD",2,2,.115,21,1,0)
From the available listing choose the state in which this applicant
"^DD",2,2,.115,21,2,0)
resides.
"^DD",2,2,.115,"AUDIT")
y
"^DD",2,2,.115,"DT")
2980520
"^DD",2,2,.117,0)
COUNTY^NJ3,0XOa^^.11;7^S Z0=$S($D(^DPT(D0,.11)):+$P(^(.11),"^",5),1:0) K:'Z0 X Q:'Z0!'$D(^DIC(5,Z0,1,0))  S DIC="^DIC(5,Z0,1,",DIC(0)="QEM" D ^DIC S X=+Y K:Y'>0 X K Z0,DIC
"^DD",2,2,.117,1,0)
^.1^^-1
"^DD",2,2,.117,1,1,0)
2^AODS117^MUMPS
"^DD",2,2,.117,1,1,1)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.117,1,1,2)
S A1B2TAG="PAT" D ^A1B2XFR
"^DD",2,2,.117,1,2,0)
2^AENR117^MUMPS
"^DD",2,2,.117,1,2,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.117,1,2,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.117,1,2,3)
DO NOT DELETE
"^DD",2,2,.117,1,2,"%D",0)
^^2^2^2971007^^^
"^DD",2,2,.117,1,2,"%D",1,0)
This cross-reference is used to notify HEC of changes that may affect
"^DD",2,2,.117,1,2,"%D",2,0)
enrollment. 
"^DD",2,2,.117,1,2,"DT")
2971007
"^DD",2,2,.117,1,301,0)
2^IVM117^MUMPS
"^DD",2,2,.117,1,301,1)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.117,1,301,2)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.117,1,301,"%D",0)
^^5^5^2930605^
"^DD",2,2,.117,1,301,"%D",1,0)
This cross-reference will check the IVM PATIENT file to see if a change
"^DD",2,2,.117,1,301,"%D",2,0)
to this field will require transmission to the IVM Center.  If it does,
"^DD",2,2,.117,1,301,"%D",3,0)
the IVM PATIENT file entry's TRANSMISSION STATUS will be set to 0 and
"^DD",2,2,.117,1,301,"%D",4,0)
the nightly background job will transmit the updated information.
"^DD",2,2,.117,1,301,"DT")
2930605
"^DD",2,2,.117,1,991,0)
2^AVAFC117^MUMPS
"^DD",2,2,.117,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".117;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.117,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".117;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.117,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.117,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.117,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.117,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.117,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.117,1,991,"%D",5,0)
 
"^DD",2,2,.117,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.117,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.117,1,991,"%D",8,0)
process.
"^DD",2,2,.117,1,991,"%D",9,0)
 
"^DD",2,2,.117,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.117,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.117,1,991,"%D",12,0)
  
"^DD",2,2,.117,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.117,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.117,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.117,1,991,"DT")
2970825
"^DD",2,2,.117,2)
S Y(0)=Y Q:Y']""  S Z0=$S($D(^DPT(D0,.11)):+$P(^(.11),"^",5),1:"") Q:'Z0  S Y=$P($S($D(^DIC(5,Z0,1,Y,0)):^(0),1:""),"^",3)
"^DD",2,2,.117,2.1)
Q:Y']""  S Z0=$S($D(^DPT(D0,.11)):+$P(^(.11),"^",5),1:"") Q:'Z0  S Y=$P($S($D(^DIC(5,Z0,1,Y,0)):^(0),1:""),"^",3)
"^DD",2,2,.117,3)
Enter the county in which this applicant resides.
"^DD",2,2,.117,4)
S ZD=D,X="?",Z0=$S($D(^DPT(D0,.11)):+$P(^(.11),U,5),1:0) Q:'Z0!'$D(^DIC(5,Z0,1,0))  S DIC="^DIC(5,Z0,1,",DIC(0)="QEM" D ^DIC S DIC=DIE,D=ZD K ZD
"^DD",2,2,.117,5,1,0)
2^.115^1
"^DD",2,2,.117,20,0)
^.3LA^1^1
"^DD",2,2,.117,20,1,0)
DEMOG
"^DD",2,2,.117,21,0)
3^^3^3^2920305^^
"^DD",2,2,.117,21,1,0)
If a state of residence is entered select from the available
"^DD",2,2,.117,21,2,0)
listing the county in which this applicant resides.  If no
"^DD",2,2,.117,21,3,0)
state (or a non-state) is entered no selection is possible.
"^DD",2,2,.117,"AUDIT")
y
"^DD",2,2,.117,"DT")
2980520
"^DD",2,2,.131,0)
PHONE NUMBER [RESIDENCE]^Fa^^.13;1^K:$L(X)>20!($L(X)<4) X
"^DD",2,2,.131,.1)

"^DD",2,2,.131,1,0)
^.1^^-1
"^DD",2,2,.131,1,1,0)
2^AENR131^MUMPS
"^DD",2,2,.131,1,1,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.131,1,1,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.131,1,1,3)
DO NOT DELETE
"^DD",2,2,.131,1,1,"%D",0)
^^2^2^2971007^^^
"^DD",2,2,.131,1,1,"%D",1,0)
This cross-reference is used to notify HEC of changes that may affect
"^DD",2,2,.131,1,1,"%D",2,0)
enrollment. 
"^DD",2,2,.131,1,1,"DT")
2971007
"^DD",2,2,.131,1,301,0)
2^IVM131^MUMPS
"^DD",2,2,.131,1,301,1)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.131,1,301,2)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.131,1,301,"%D",0)
^^5^5^2930605^
"^DD",2,2,.131,1,301,"%D",1,0)
This cross-reference will check the IVM PATIENT file to see if a change
"^DD",2,2,.131,1,301,"%D",2,0)
to this field will require transmission to the IVM Center.  If it does,
"^DD",2,2,.131,1,301,"%D",3,0)
the IVM PATIENT file entry's TRANSMISSION STATUS will be set to 0 and
"^DD",2,2,.131,1,301,"%D",4,0)
the nightly background job will transmit the updated information.
"^DD",2,2,.131,1,301,"DT")
2930605
"^DD",2,2,.131,1,991,0)
2^AVAFC131^MUMPS
"^DD",2,2,.131,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".131;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.131,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".131;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.131,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.131,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.131,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.131,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.131,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.131,1,991,"%D",5,0)
 
"^DD",2,2,.131,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.131,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.131,1,991,"%D",8,0)
process.
"^DD",2,2,.131,1,991,"%D",9,0)
 
"^DD",2,2,.131,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.131,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.131,1,991,"%D",12,0)
  
"^DD",2,2,.131,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.131,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.131,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.131,1,991,"DT")
2970825
"^DD",2,2,.131,3)
Enter the patients home telephone number [4-20 characters].
"^DD",2,2,.131,20,0)
^.3LA^1^1
"^DD",2,2,.131,20,1,0)
DEMOG
"^DD",2,2,.131,21,0)
^^2^2^2861007^
"^DD",2,2,.131,21,1,0)
Enter the telephone number [4-20 characters] to this applicant's
"^DD",2,2,.131,21,2,0)
place of residence.
"^DD",2,2,.131,"AUDIT")
y
"^DD",2,2,.131,"DT")
2980520
"^DD",2,2,.132,0)
PHONE NUMBER [WORK]^Fa^^.13;2^K:$L(X)>20!($L(X)<4) X
"^DD",2,2,.132,.1)
OFFICE PHONE
"^DD",2,2,.132,1,0)
^.1^^-1
"^DD",2,2,.132,1,1,0)
2^AENR132^MUMPS
"^DD",2,2,.132,1,1,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.132,1,1,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.132,1,1,3)
DO NOT DELETE
"^DD",2,2,.132,1,1,"%D",0)
^^2^2^2971007^^^
"^DD",2,2,.132,1,1,"%D",1,0)
This cross-reference is used to notify HEC of changes that may affect
"^DD",2,2,.132,1,1,"%D",2,0)
enrollment. 
"^DD",2,2,.132,1,1,"DT")
2971007
"^DD",2,2,.132,1,301,0)
2^IVM132^MUMPS
"^DD",2,2,.132,1,301,1)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.132,1,301,2)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.132,1,301,"%D",0)
^^5^5^2930605^
"^DD",2,2,.132,1,301,"%D",1,0)
This cross-reference will check the IVM PATIENT file to see if a change
"^DD",2,2,.132,1,301,"%D",2,0)
to this field will require transmission to the IVM Center.  If it does,
"^DD",2,2,.132,1,301,"%D",3,0)
the IVM PATIENT file entry's TRANSMISSION STATUS will be set to 0 and
"^DD",2,2,.132,1,301,"%D",4,0)
the nightly background job will transmit the updated information.
"^DD",2,2,.132,1,301,"DT")
2930605
"^DD",2,2,.132,1,991,0)
2^AVAFC132^MUMPS
"^DD",2,2,.132,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".132;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.132,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".132;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.132,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.132,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.132,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.132,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.132,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.132,1,991,"%D",5,0)
 
"^DD",2,2,.132,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.132,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.132,1,991,"%D",8,0)
process.
"^DD",2,2,.132,1,991,"%D",9,0)
 
"^DD",2,2,.132,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.132,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.132,1,991,"%D",12,0)
  
"^DD",2,2,.132,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.132,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.132,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.132,1,991,"DT")
2970825
"^DD",2,2,.132,3)
If employed, enter the telephone number of this applicants place of employment [4-20 characters].
"^DD",2,2,.132,20,0)
^.3LA^1^1
"^DD",2,2,.132,20,1,0)
PEMP
"^DD",2,2,.132,21,0)
^^2^2^2861007^
"^DD",2,2,.132,21,1,0)
Enter the office phone number [4-20 characters] where this applicant
"^DD",2,2,.132,21,2,0)
can be reached while employed, if employed.
"^DD",2,2,.132,"AUDIT")
y
"^DD",2,2,.132,"DT")
2971219
"^DD",2,2,.211,0)
K-NAME OF PRIMARY NOK^Fa^^.21;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>35!($L(X)<3) X
"^DD",2,2,.211,.1)
NEXT OF KIN
"^DD",2,2,.211,1,0)
^.1
"^DD",2,2,.211,1,1,0)
2^AXR^MUMPS
"^DD",2,2,.211,1,1,1)
Q
"^DD",2,2,.211,1,1,2)
S DGXRF=.211 D ^DGDDC Q
"^DD",2,2,.211,1,991,0)
2^AVAFC211^MUMPS
"^DD",2,2,.211,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".211;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.211,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".211;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.211,1,991,"%D",0)
^^15^15^2990204^^^
"^DD",2,2,.211,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.211,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.211,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.211,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.211,1,991,"%D",5,0)
 
"^DD",2,2,.211,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.211,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.211,1,991,"%D",8,0)
process.
"^DD",2,2,.211,1,991,"%D",9,0)
 
"^DD",2,2,.211,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.211,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.211,1,991,"%D",12,0)
  
"^DD",2,2,.211,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.211,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.211,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.211,1,991,"DT")
2970825
"^DD",2,2,.211,3)
Enter the name of the primary NOK [3-35 characters].
"^DD",2,2,.211,20,0)
^.3LA^1^1
"^DD",2,2,.211,20,1,0)
NK1
"^DD",2,2,.211,21,0)
^^2^2^2861007^
"^DD",2,2,.211,21,1,0)
Enter the name of the primary next-of-kin [3-35 characters] for
"^DD",2,2,.211,21,2,0)
this applicant.
"^DD",2,2,.211,"AUDIT")
y
"^DD",2,2,.211,"DT")
2970825
"^DD",2,2,.219,0)
K-PHONE NUMBER^FXa^^.21;9^K:$L(X)>20!($L(X)<4) X I $D(X) S DFN=DA D K1^DGLOCK2
"^DD",2,2,.219,.1)

"^DD",2,2,.219,1,0)
^.1
"^DD",2,2,.219,1,991,0)
2^AVAFC219^MUMPS
"^DD",2,2,.219,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".219;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.219,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".219;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.219,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.219,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.219,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.219,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.219,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.219,1,991,"%D",5,0)
 
"^DD",2,2,.219,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.219,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.219,1,991,"%D",8,0)
process.
"^DD",2,2,.219,1,991,"%D",9,0)
 
"^DD",2,2,.219,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.219,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.219,1,991,"%D",12,0)
  
"^DD",2,2,.219,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.219,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.219,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.219,1,991,"DT")
2970825
"^DD",2,2,.219,3)
Enter the phone number of the primary NOK [4-20 characters].
"^DD",2,2,.219,20,0)
^.3LA^1^1
"^DD",2,2,.219,20,1,0)
NK1
"^DD",2,2,.219,21,0)
^^4^4^2861117^^
"^DD",2,2,.219,21,1,0)
If a primary next-of-kin is specified enter that person's
"^DD",2,2,.219,21,2,0)
telephone number [4-20 characters], otherwise nothing may
"^DD",2,2,.219,21,3,0)
be entered.  This field cannot be deleted as long as a
"^DD",2,2,.219,21,4,0)
'next of kin' name is on file.
"^DD",2,2,.219,"AUDIT")
y
"^DD",2,2,.219,"DT")
2970825
"^DD",2,2,.2403,0)
MOTHER'S MAIDEN NAME^Fa^^.24;3^K:$L(X)>35!($L(X)<3) X
"^DD",2,2,.2403,1,0)
^.1
"^DD",2,2,.2403,1,991,0)
2^AVAFC2403^MUMPS
"^DD",2,2,.2403,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".2403;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.2403,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".2403;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.2403,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.2403,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.2403,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.2403,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.2403,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.2403,1,991,"%D",5,0)
 
"^DD",2,2,.2403,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.2403,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.2403,1,991,"%D",8,0)
process.
"^DD",2,2,.2403,1,991,"%D",9,0)
 
"^DD",2,2,.2403,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.2403,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.2403,1,991,"%D",12,0)
  
"^DD",2,2,.2403,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.2403,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.2403,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.2403,1,991,"DT")
2970825
"^DD",2,2,.2403,3)
Enter this patient's mothers maiden name [3-35 characters].
"^DD",2,2,.2403,21,0)
^^2^2^2861007^
"^DD",2,2,.2403,21,1,0)
Enter the maiden name (last name prior to marriage) of this
"^DD",2,2,.2403,21,2,0)
applicant's mother [3-35 characters].
"^DD",2,2,.2403,"AUDIT")
y
"^DD",2,2,.2403,"DT")
2970825
"^DD",2,2,.301,0)
SERVICE CONNECTED?^RSXa^Y:YES;N:NO;^.3;1^S DFN=DA D EV^DGLOCK I $D(X),X="Y" D VET^DGLOCK
"^DD",2,2,.301,.1)
SC APPLICANT
"^DD",2,2,.301,1,0)
^.1
"^DD",2,2,.301,1,1,0)
^^TRIGGER^2^.302
"^DD",2,2,.301,1,1,1)
X ^DD(2,.301,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^DPT(D0,.3)):^(.3),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(2,.301,1,1,1.4)
"^DD",2,2,.301,1,1,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$S($D(^DD(2,.301,0)):$P(^(0),U,3),1:"") S X=$P($P(Y(1),$C(59)_Y(0)_":",2),$C(59),1)="NO"
"^DD",2,2,.301,1,1,1.4)
S DIH=$S($D(^DPT(DIV(0),.3)):^(.3),1:""),DIV=X S %=$P(DIH,U,3,999),DIU=$P(DIH,U,2),^(.3)=$P(DIH,U,1,1)_U_DIV_$S(%]"":U_%,1:""),DIH=2,DIG=.302 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.301,1,1,2)
Q
"^DD",2,2,.301,1,1,"CREATE CONDITION")
#.301="NO"
"^DD",2,2,.301,1,1,"CREATE VALUE")
@
"^DD",2,2,.301,1,1,"DELETE VALUE")
NO EFFECT
"^DD",2,2,.301,1,1,"FIELD")
#.302
"^DD",2,2,.301,1,2,0)
^^TRIGGER^2^.3012
"^DD",2,2,.301,1,2,1)
X ^DD(2,.301,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^DPT(D0,.3)):^(.3),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X="" X ^DD(2,.301,1,2,1.4)
"^DD",2,2,.301,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$S($D(^DD(2,.301,0)):$P(^(0),U,3),1:"") S X=$P($P(Y(1),$C(59)_Y(0)_":",2),$C(59),1)="NO"
"^DD",2,2,.301,1,2,1.4)
S DIH=$S($D(^DPT(DIV(0),.3)):^(.3),1:""),DIV=X S $P(^(.3),U,12)=DIV,DIH=2,DIG=.3012 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.301,1,2,2)
Q
"^DD",2,2,.301,1,2,"%D",0)
^^2^2^2930419^
"^DD",2,2,.301,1,2,"%D",1,0)
This will delete the SC AWARD DATE (#.3012) field when the SERVICE
"^DD",2,2,.301,1,2,"%D",2,0)
CONNECTED? field is changed to NO.
"^DD",2,2,.301,1,2,"CREATE CONDITION")
#.301="NO"
"^DD",2,2,.301,1,2,"CREATE VALUE")
@
"^DD",2,2,.301,1,2,"DELETE VALUE")
NO EFFECT
"^DD",2,2,.301,1,2,"DT")
2930419
"^DD",2,2,.301,1,2,"FIELD")
#.3012
"^DD",2,2,.301,1,3,0)
2^AENR301^MUMPS
"^DD",2,2,.301,1,3,1)
D AUTOUPD^DGENA2(DA)
"^DD",2,2,.301,1,3,2)
D AUTOUPD^DGENA2(DA)
"^DD",2,2,.301,1,3,3)
DO NOT DELETE
"^DD",2,2,.301,1,3,"%D",0)
^^2^2^2970630^^
"^DD",2,2,.301,1,3,"%D",1,0)
This cross-reference is used to update the patient's current Patient Enrollment 
"^DD",2,2,.301,1,3,"%D",2,0)
record.
"^DD",2,2,.301,1,3,"DT")
2970630
"^DD",2,2,.301,1,991,0)
2^AVAFC301^MUMPS
"^DD",2,2,.301,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".301;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.301,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".301;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.301,1,991,"%D",0)
^^15^15^2990204^^^
"^DD",2,2,.301,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.301,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.301,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.301,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.301,1,991,"%D",5,0)
 
"^DD",2,2,.301,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.301,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.301,1,991,"%D",8,0)
process.
"^DD",2,2,.301,1,991,"%D",9,0)
 
"^DD",2,2,.301,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.301,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.301,1,991,"%D",12,0)
  
"^DD",2,2,.301,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.301,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.301,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.301,1,991,"DT")
2970825
"^DD",2,2,.301,3)
Enter 'Y' if this patient is service connected, 'N' if not.
"^DD",2,2,.301,5,1,0)
2^1901^3
"^DD",2,2,.301,20,0)
^.3LA^1^1
"^DD",2,2,.301,20,1,0)
ECD
"^DD",2,2,.301,21,0)
^^5^5^2990204^^^
"^DD",2,2,.301,21,1,0)
Enter 'Y' if this applicant is service connected, 'N' if not.
"^DD",2,2,.301,21,2,0)
Applicants identified as being non-veterans cannot be entered
"^DD",2,2,.301,21,3,0)
as service connected.  Once eligibility has been verified only
"^DD",2,2,.301,21,4,0)
users holding the designated security key may enter/edit this
"^DD",2,2,.301,21,5,0)
field.
"^DD",2,2,.301,"AUDIT")
y
"^DD",2,2,.301,"DEL",1,0)
S DFN=DA D EV^DGLOCK I '$D(X)
"^DD",2,2,.301,"DT")
2960911
"^DD",2,2,.302,0)
SERVICE CONNECTED PERCENTAGE^NJ3,0Xa^^.3;2^S DFN=DA D EV^DGLOCK Q:'$D(X)  K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X I $D(X),$D(^DPT(DA,.3)),$P(^(.3),U,1)'="Y" W !?4,*7,"Only applies to service-connected applicants." K X
"^DD",2,2,.302,1,0)
^.1
"^DD",2,2,.302,1,1,0)
2^ASCP^MUMPS
"^DD",2,2,.302,1,1,1)
Q
"^DD",2,2,.302,1,1,2)
Q
"^DD",2,2,.302,1,2,0)
2^AENR302^MUMPS
"^DD",2,2,.302,1,2,1)
D AUTOUPD^DGENA2(DA)
"^DD",2,2,.302,1,2,2)
D AUTOUPD^DGENA2(DA)
"^DD",2,2,.302,1,2,3)
DO NOT DELETE
"^DD",2,2,.302,1,2,"%D",0)
^^2^2^2970630^^
"^DD",2,2,.302,1,2,"%D",1,0)
This cross-reference is used to update the patient's current Patient Enrollment 
"^DD",2,2,.302,1,2,"%D",2,0)
record.
"^DD",2,2,.302,1,2,"DT")
2970630
"^DD",2,2,.302,1,3,0)
2^ACP^MUMPS
"^DD",2,2,.302,1,3,1)
S DFN=DA D EN^DGMTR K DGREQF
"^DD",2,2,.302,1,3,2)
S DFN=DA D EN^DGMTR K DGREQF
"^DD",2,2,.302,1,3,"%D",0)
^^2^2^2970927^^
"^DD",2,2,.302,1,3,"%D",1,0)
This cross-reference is used to determine whether or not a means test is 
"^DD",2,2,.302,1,3,"%D",2,0)
required.
"^DD",2,2,.302,1,3,"DT")
2970923
"^DD",2,2,.302,1,991,0)
2^AVAFC302^MUMPS
"^DD",2,2,.302,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".302;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.302,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".302;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.302,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.302,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.302,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.302,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.302,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.302,1,991,"%D",5,0)
 
"^DD",2,2,.302,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.302,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.302,1,991,"%D",8,0)
process.
"^DD",2,2,.302,1,991,"%D",9,0)
 
"^DD",2,2,.302,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.302,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.302,1,991,"%D",12,0)
  
"^DD",2,2,.302,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.302,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.302,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.302,1,991,"DT")
2970825
"^DD",2,2,.302,3)
For this service connected applicant enter the percentage of service connection between 0 and 100%.
"^DD",2,2,.302,5,1,0)
2^.301^1
"^DD",2,2,.302,20,0)
^.3LA^1^1
"^DD",2,2,.302,20,1,0)
ECD
"^DD",2,2,.302,21,0)
^^5^5^2861007^^
"^DD",2,2,.302,21,1,0)
If this applicant is service connected (SERVICE CONNECTED prompt must
"^DD",2,2,.302,21,2,0)
be answered YES) enter the service connected percentage [a number
"^DD",2,2,.302,21,3,0)
between 0-100].  Once eligibility has been verified only users who hold
"^DD",2,2,.302,21,4,0)
the designated security key may enter/edit this field.  Field may not be
"^DD",2,2,.302,21,5,0)
deleted as long as service connection is indicated.
"^DD",2,2,.302,"AUDIT")
y
"^DD",2,2,.302,"DEL",1,0)
S DFN=DA D EV^DGLOCK Q:'$D(X)  I $D(^DPT(DFN,.3)),$P(^(.3),U,1)="Y" W !?4,*7,"Service Connected Applicant...CAN'T DELETE!!" K X
"^DD",2,2,.302,"DT")
2970924
"^DD",2,2,.31115,0)
EMPLOYMENT STATUS^RSa^1:EMPLOYED FULL TIME;2:EMPLOYED PART TIME;3:NOT EMPLOYED;4:SELF EMPLOYED;5:RETIRED;6:ACTIVE MILITARY DUTY;9:UNKNOWN;^.311;15^Q
"^DD",2,2,.31115,1,0)
^.1
"^DD",2,2,.31115,1,2,0)
^^TRIGGER^2^.3111
"^DD",2,2,.31115,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I "^3^9^"[$P(^DPT(DA,.311),U,15) I X S X=DIV S Y(1)=$S($D(^DPT(D0,.311)):^(.311),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X="" X ^DD(2,.31115,1,2,1.4)
"^DD",2,2,.31115,1,2,1.4)
S DIH=$S($D(^DPT(DIV(0),.311)):^(.311),1:""),DIV=X S %=$P(DIH,U,2,999),DIU=$P(DIH,U,1),^(.311)=DIV_$S(%]"":U_%,1:""),DIH=2,DIG=.3111 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.31115,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I "^3^9^"[$P(^DPT(DA,.311),U,15) I X S X=DIV S Y(1)=$S($D(^DPT(D0,.311)):^(.311),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X="" X ^DD(2,.31115,1,2,2.4)
"^DD",2,2,.31115,1,2,2.4)
S DIH=$S($D(^DPT(DIV(0),.311)):^(.311),1:""),DIV=X S %=$P(DIH,U,2,999),DIU=$P(DIH,U,1),^(.311)=DIV_$S(%]"":U_%,1:""),DIH=2,DIG=.3111 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.31115,1,2,"CREATE CONDITION")
I "^3^9^"[$P(^DPT(DA,.311),U,15)
"^DD",2,2,.31115,1,2,"CREATE VALUE")
@
"^DD",2,2,.31115,1,2,"DELETE CONDITION")
I "^3^9^"[$P(^DPT(DA,.311),U,15)
"^DD",2,2,.31115,1,2,"DELETE VALUE")
@
"^DD",2,2,.31115,1,2,"FIELD")
EMPLOYER NAME
"^DD",2,2,.31115,1,991,0)
2^AVAFC31115^MUMPS
"^DD",2,2,.31115,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".31115;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.31115,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".31115;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.31115,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.31115,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.31115,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.31115,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.31115,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.31115,1,991,"%D",5,0)
 
"^DD",2,2,.31115,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.31115,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.31115,1,991,"%D",8,0)
process.
"^DD",2,2,.31115,1,991,"%D",9,0)
 
"^DD",2,2,.31115,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.31115,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.31115,1,991,"%D",12,0)
  
"^DD",2,2,.31115,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.31115,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.31115,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.31115,1,991,"DT")
2970825
"^DD",2,2,.31115,3)
Enter this patient's current employment status.
"^DD",2,2,.31115,20,0)
^.3LA^1^1
"^DD",2,2,.31115,20,1,0)
PEMP
"^DD",2,2,.31115,21,0)
^^2^2^2920604^^
"^DD",2,2,.31115,21,1,0)
Enter the patient's current employment status.  Choose from the available
"^DD",2,2,.31115,21,2,0)
choices.
"^DD",2,2,.31115,"AUDIT")
y
"^DD",2,2,.31115,"DT")
2970501
"^DD",2,2,.323,0)
PERIOD OF SERVICE^*P21'Xa^DIC(21,^.32;3^S DFN=DA D POS^DGLOCK1
"^DD",2,2,.323,1,0)
^.1
"^DD",2,2,.323,1,1,0)
2^APOS
"^DD",2,2,.323,1,1,1)
S ^DPT("APOS",$E(X,1,30),DA)=""
"^DD",2,2,.323,1,1,2)
K ^DPT("APOS",$E(X,1,30),DA)
"^DD",2,2,.323,1,2,0)
^^TRIGGER^2^11500.01
"^DD",2,2,.323,1,2,1)
X ^DD(2,.323,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^DPT(D0,"ODS")):^("ODS"),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y X ^DD(2,.323,1,2,1.1) X ^DD(2,.323,1,2,1.4)
"^DD",2,2,.323,1,2,1.1)
S X=DIV S %=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100)
"^DD",2,2,.323,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$S('$D(^DIC(21,+$P(^DPT(DA,.32),"^",3),0)):0,$P(^(0),"^",3)'=6:0,'$D(^DPT(DA,"ODS")):1,'^("ODS"):1,1:0)
"^DD",2,2,.323,1,2,1.4)
S DIH=$S($D(^DPT(DIV(0),"ODS")):^("ODS"),1:""),DIV=X S $P(^("ODS"),U,1)=DIV,DIH=2,DIG=11500.01 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.323,1,2,2)
Q
"^DD",2,2,.323,1,2,"CREATE CONDITION")
S X=$S('$D(^DIC(21,+$P(^DPT(DA,.32),"^",3),0)):0,$P(^(0),"^",3)'=6:0,'$D(^DPT(DA,"ODS")):1,'^("ODS"):1,1:0)
"^DD",2,2,.323,1,2,"CREATE VALUE")
NOW
"^DD",2,2,.323,1,2,"DELETE VALUE")
NO EFFECT
"^DD",2,2,.323,1,2,"FIELD")
INIT
"^DD",2,2,.323,1,991,0)
2^AVAFC323^MUMPS
"^DD",2,2,.323,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".323;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.323,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".323;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.323,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,.323,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.323,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.323,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.323,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.323,1,991,"%D",5,0)
 
"^DD",2,2,.323,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.323,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.323,1,991,"%D",8,0)
process.
"^DD",2,2,.323,1,991,"%D",9,0)
 
"^DD",2,2,.323,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.323,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.323,1,991,"%D",12,0)
  
"^DD",2,2,.323,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.323,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.323,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.323,1,991,"DT")
2970825
"^DD",2,2,.323,3)
Select from the available listing the period of service which best classifies this patient.
"^DD",2,2,.323,11,0)
^.2LAP
"^DD",2,2,.323,12)
POS must be compatible with Eligibility Code
"^DD",2,2,.323,12.1)
S DIC("S")="I $D(^DPT(DA,.36)),$D(^DIC(21,""AELIG"",+Y,+$P(^(.36),U,1)))"
"^DD",2,2,.323,20,0)
^.3LA^2^2
"^DD",2,2,.323,20,1,0)
SVC
"^DD",2,2,.323,20,2,0)
ECD
"^DD",2,2,.323,21,0)
^^6^6^2920721^^
"^DD",2,2,.323,21,1,0)
From the available listing select the period of service which best
"^DD",2,2,.323,21,2,0)
classifies this applicant.  The selections displayed are limited
"^DD",2,2,.323,21,3,0)
based on the eligibility code which must have been entered in order
"^DD",2,2,.323,21,4,0)
to select a period of service.  Once the service record is verified
"^DD",2,2,.323,21,5,0)
only those users who hold the designated security key may enter/edit
"^DD",2,2,.323,21,6,0)
this field.
"^DD",2,2,.323,"AUDIT")
y
"^DD",2,2,.323,"DEL",1,0)
S DFN=DA D SV1^DGLOCK I '$D(X)
"^DD",2,2,.323,"DT")
2970825
"^DD",2,2,.351,0)
DATE OF DEATH^DXa^^.35;1^S %DT="EPT" D ^%DT S X=Y K:Y<1 X I $D(X) D H^DGUTL K:X>DGTIME X K DGTIME,DGDATE I $D(X),X<$P(^DPT(DA,0),"^",3) K X
"^DD",2,2,.351,1,0)
^.1^^-1
"^DD",2,2,.351,1,1,0)
^^TRIGGER^2^.091
"^DD",2,2,.351,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DPT(D0,0)):^(0),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y X ^DD(2,.351,1,1,1.1) X ^DD(2,.351,1,1,1.4)
"^DD",2,2,.351,1,1,1,9.2)
S X=DIU_"[PATIENT DIED ON ",Y(1)=X S X=DIV,Y(2)=X S X=4,Y(3)=X S X=5,X=$E(Y(2),Y(3),X) S Y=X,X=Y(1),X=X_Y_"/",Y(4)=X S X=DIV,Y(5)=X S X=6,Y(6)=X S X=7
"^DD",2,2,.351,1,1,1.1)
S X=DIV X ^DD(2,.351,1,1,49.2) S X=$E(Y(5),Y(6),X) S Y=X,X=Y(4),X=X_Y_"/",Y(7)=X S X=DIV,Y(8)=X S X=2,Y(9)=X S X=3,X=$E(Y(8),Y(9),X) S Y=X,X=Y(7),X=X_Y_"]"
"^DD",2,2,.351,1,1,1.4)
S DIH=$S($D(^DPT(DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,10)=DIV,DIH=2,DIG=.091 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.351,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DPT(D0,0)):^(0),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y X ^DD(2,.351,1,1,2.1) X ^DD(2,.351,1,1,2.4)
"^DD",2,2,.351,1,1,2.1)
S X=DIV X ^DD(2,.351,1,1,59.2) S Y(8)=X S X=2,X=$P(Y(7),Y(8),X) S Y=X,X=Y(3),X=X_Y
"^DD",2,2,.351,1,1,2.4)
S DIH=$S($D(^DPT(DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,10)=DIV,DIH=2,DIG=.091 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.351,1,1,49.2)
S X=DIU_"[PATIENT DIED ON ",Y(1)=X S X=DIV,Y(2)=X S X=4,Y(3)=X S X=5,X=$E(Y(2),Y(3),X) S Y=X,X=Y(1),X=X_Y_"/",Y(4)=X S X=DIV,Y(5)=X S X=6,Y(6)=X S X=7
"^DD",2,2,.351,1,1,59.2)
S X=DIU,Y(1)=X S X="[PATIENT DIED",Y(2)=X S X=1,X=$P(Y(1),Y(2),X),Y(3)=X,Y(4)=X S X=DIU,Y(5)=X S X="PATIENT DIED",Y(6)=X S X=2,X=$P(Y(5),Y(6),X),Y(7)=X S X="]"
"^DD",2,2,.351,1,1,"%D",0)
^^3^3^2930723^^
"^DD",2,2,.351,1,1,"%D",1,0)
This appends into the REMARKS field a notation regarding the DATE OF 
"^DD",2,2,.351,1,1,"%D",2,0)
DEATH.  If DATE OF DEATH is deleted, the notation will be stripped out
"^DD",2,2,.351,1,1,"%D",3,0)
of the REMARKS field.
"^DD",2,2,.351,1,1,"CREATE VALUE")
REMARKS_"[PATIENT DIED ON "_$E(DATE OF DEATH,4,5)_"/"_$E(DATE OF DEATH,6,7)_"/"_$E(DATE OF DEATH,2,3)_"]"
"^DD",2,2,.351,1,1,"DELETE VALUE")
$P(REMARKS,"[PATIENT DIED",1)_$P($P(REMARKS,"PATIENT DIED",2),"]",2)
"^DD",2,2,.351,1,1,"DT")
2930601
"^DD",2,2,.351,1,1,"FIELD")
REMARKS
"^DD",2,2,.351,1,2,0)
^^TRIGGER^2^.352
"^DD",2,2,.351,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DPT(D0,.35)):^(.35),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y X ^DD(2,.351,1,2,1.1) X ^DD(2,.351,1,2,1.4)
"^DD",2,2,.351,1,2,1.1)
S X=DIV S X=$S(($D(DUZ)#2):DUZ,1:"")
"^DD",2,2,.351,1,2,1.4)
S DIH=$S($D(^DPT(DIV(0),.35)):^(.35),1:""),DIV=X S %=$P(DIH,U,3,999),DIU=$P(DIH,U,2),^(.35)=$P(DIH,U,1,1)_U_DIV_$S(%]"":U_%,1:""),DIH=2,DIG=.352 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,.351,1,2,2)
Q
"^DD",2,2,.351,1,2,"CREATE VALUE")
S X=$S(($D(DUZ)#2):DUZ,1:"")
"^DD",2,2,.351,1,2,"DELETE VALUE")
NO EFFECT
"^DD",2,2,.351,1,2,"FIELD")
DEATH ENTERED BY
"^DD",2,2,.351,1,3,0)
2^AEXP^MUMPS
"^DD",2,2,.351,1,3,1)
S %X=X,X="DGDEATH" X ^%ZOSF("TEST") S X=%X I $T S DFN=DA D XFR^DGDEATH
"^DD",2,2,.351,1,3,2)
D DEL^DGDEATH
"^DD",2,2,.351,1,3,"%D",0)
^^1^1^2941229^
"^DD",2,2,.351,1,3,"%D",1,0)
This cross-reference will generate a message when a patient death is added or removed.
"^DD",2,2,.351,1,3,"DT")
2941229
"^DD",2,2,.351,1,4,0)
2^AEXP1
"^DD",2,2,.351,1,4,1)
S ^DPT("AEXP1",$E(X,1,30),DA)=""
"^DD",2,2,.351,1,4,2)
K ^DPT("AEXP1",$E(X,1,30),DA)
"^DD",2,2,.351,1,5,0)
2^AOERR^MUMPS
"^DD",2,2,.351,1,5,1)
D DEATH^DGOERNOT
"^DD",2,2,.351,1,5,2)
Q
"^DD",2,2,.351,1,5,"%D",0)
^^3^3^2910716^^^^
"^DD",2,2,.351,1,5,"%D",1,0)
     This cross-reference is used in conjunction with ORDER ENTRY/RESULTS
"^DD",2,2,.351,1,5,"%D",2,0)
REPORTING v2.09 or higher to send MAS OE/RR NOTIFICATIONS of
"^DD",2,2,.351,1,5,"%D",3,0)
DEATH to users who are on an OE/RR LIST for a patient.
"^DD",2,2,.351,1,5,"DT")
2910715
"^DD",2,2,.351,1,6,0)
2^APSJD^MUMPS
"^DD",2,2,.351,1,6,1)
S XX=X,X="PSJADT" X ^%ZOSF("TEST") S X=XX K XX I  D END^PSJADT
"^DD",2,2,.351,1,6,2)
Q
"^DD",2,2,.351,1,6,3)
Cancels Inpatient Medication orders.
"^DD",2,2,.351,1,6,"%D",0)
^^3^3^2930608^^^
"^DD",2,2,.351,1,6,"%D",1,0)
This is used by the Inpatient Medications package to cancel a patient's
"^DD",2,2,.351,1,6,"%D",2,0)
IV and Unit Dose orders whenever a date of death is entered for the
"^DD",2,2,.351,1,6,"%D",3,0)
patient.
"^DD",2,2,.351,1,6,"DT")
2930608
"^DD",2,2,.351,1,7,0)
2^ARCDTH^MUMPS
"^DD",2,2,.351,1,7,1)
S RCX=X,X="RCAMDTH" X ^%ZOSF("TEST") S X=RCX K RCX I  D SET^RCAMDTH
"^DD",2,2,.351,1,7,2)
S RCX=X,X="RCAMDTH" X ^%ZOSF("TEST") S X=RCX K RCX I  D ERR^RCAMDTH
"^DD",2,2,.351,1,7,3)
ACCOUNTS RECEIVABLE DEATH NOTIFICATION
"^DD",2,2,.351,1,7,"%D",0)
^^3^3^2930722^^^^
"^DD",2,2,.351,1,7,"%D",1,0)
This cross-reference is used to notify the Accounts Receivable package (v4 or
"^DD",2,2,.351,1,7,"%D",2,0)
higher) of a patient's death so that the patient's account may be reviewed for
"^DD",2,2,.351,1,7,"%D",3,0)
appropriate action. 
"^DD",2,2,.351,1,7,"DT")
2930609
"^DD",2,2,.351,1,8,0)
2^ADEP^MUMPS
"^DD",2,2,.351,1,8,1)
D SET^DGDEPINA
"^DD",2,2,.351,1,8,2)
D KILL^DGDEPINA
"^DD",2,2,.351,1,8,"%D",0)
^^1^1^2941114^
"^DD",2,2,.351,1,8,"%D",1,0)
This is used to updated the effective dates in file 408.12.
"^DD",2,2,.351,1,8,"DT")
2941114
"^DD",2,2,.351,1,9,0)
2^AENR351^MUMPS
"^DD",2,2,.351,1,9,1)
D AUTOUPD^DGENA2(DA)
"^DD",2,2,.351,1,9,2)
D AUTOUPD^DGENA2(DA)
"^DD",2,2,.351,1,9,3)
DO NOT DELETE
"^DD",2,2,.351,1,9,"%D",0)
^^1^1^2970630^^^^
"^DD",2,2,.351,1,9,"%D",1,0)
Used to update the patient's enrollment.
"^DD",2,2,.351,1,9,"DT")
2970630
"^DD",2,2,.351,1,52,0)
2^APSOD^MUMPS
"^DD",2,2,.351,1,52,1)
I $$VERSION^XPDUTL("PSO")>6 D APSOD^PSOCAN3(DA)
"^DD",2,2,.351,1,52,2)
Q
"^DD",2,2,.351,1,52,3)
Discontinues Outpatient Medications.
"^DD",2,2,.351,1,52,"%D",0)
^^3^3^2961122^^^^
"^DD",2,2,.351,1,52,"%D",1,0)
This xref is used to discontinue all active outpatient medications whenever
"^DD",2,2,.351,1,52,"%D",2,0)
a date of death is entered for the patient.  This xref is used with v7 of
"^DD",2,2,.351,1,52,"%D",3,0)
Outpatient Pharmacy (DBIA #1624).
"^DD",2,2,.351,1,52,"DT")
2961023
"^DD",2,2,.351,1,301,0)
2^IVM351^MUMPS
"^DD",2,2,.351,1,301,1)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.351,1,301,2)
S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
"^DD",2,2,.351,1,301,"%D",0)
^^5^5^2930605^
"^DD",2,2,.351,1,301,"%D",1,0)
This cross-reference will check the IVM PATIENT file to see if a change
"^DD",2,2,.351,1,301,"%D",2,0)
to this field will require transmission to the IVM Center.  If it does,
"^DD",2,2,.351,1,301,"%D",3,0)
the IVM PATIENT file entry's TRANSMISSION STATUS will be set to 0 and
"^DD",2,2,.351,1,301,"%D",4,0)
the nightly background job will transmit the updated information.
"^DD",2,2,.351,1,301,"DT")
2930605
"^DD",2,2,.351,1,991,0)
2^AVAFC351^MUMPS
"^DD",2,2,.351,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".351;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.351,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF=".351;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,.351,1,991,"%D",0)
^^15^15^2990204^^
"^DD",2,2,.351,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,.351,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,.351,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,.351,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,.351,1,991,"%D",5,0)
 
"^DD",2,2,.351,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,.351,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,.351,1,991,"%D",8,0)
process.
"^DD",2,2,.351,1,991,"%D",9,0)
 
"^DD",2,2,.351,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,.351,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,.351,1,991,"%D",12,0)
  
"^DD",2,2,.351,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,.351,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,.351,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,.351,1,991,"DT")
2990204
"^DD",2,2,.351,3)
Enter the date this patient died.  Date must not be before date of birth.
"^DD",2,2,.351,5,1,0)
405^.01^3
"^DD",2,2,.351,5,2,0)
405^.18^2
"^DD",2,2,.351,21,0)
^^1^1^2861022^
"^DD",2,2,.351,21,1,0)
Enter the date of this patient's expiration.
"^DD",2,2,.351,"AUDIT")
y
"^DD",2,2,.351,"DT")
2990204
"^DD",2,2,391,0)
TYPE^RP391'a^DG(391,^TYPE;1^Q
"^DD",2,2,391,1,0)
^.1
"^DD",2,2,391,1,991,0)
2^AVAFC391^MUMPS
"^DD",2,2,391,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF="391;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,391,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF="391;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,391,1,991,"%D",0)
^^15^15^2990204^^^^
"^DD",2,2,391,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,391,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,391,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,391,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,391,1,991,"%D",5,0)
 
"^DD",2,2,391,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,391,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,391,1,991,"%D",8,0)
process.
"^DD",2,2,391,1,991,"%D",9,0)
 
"^DD",2,2,391,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,391,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,391,1,991,"%D",12,0)
  
"^DD",2,2,391,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,391,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,391,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,391,1,991,"DT")
2970825
"^DD",2,2,391,3)
Choose from the available listing the PATIENT TYPE which best classifies this patient.
"^DD",2,2,391,20,0)
^.3LA^1^1
"^DD",2,2,391,20,1,0)
ECD
"^DD",2,2,391,21,0)
^^10^10^2990205^^^
"^DD",2,2,391,21,1,0)
Enter the patient type for this patient.  This is selectable from the
"^DD",2,2,391,21,2,0)
distributed entries in the TYPE OF PATIENT file.  The type selected should
"^DD",2,2,391,21,3,0)
be the primary one selectable.  For example, if the patient is both an
"^DD",2,2,391,21,4,0)
NSC veteran and an employee, the patient type should be NSC VETERAN, not
"^DD",2,2,391,21,5,0)
employee.
"^DD",2,2,391,21,6,0)
 
"^DD",2,2,391,21,7,0)
This field is used by the registration screen processor to determine which
"^DD",2,2,391,21,8,0)
screens will be editable for this patient.  The selection of which screens
"^DD",2,2,391,21,9,0)
can be viewed for which types of patients can be made through the 'Patient
"^DD",2,2,391,21,10,0)
Type Update' option.
"^DD",2,2,391,23,0)
^^4^4^2990205^^
"^DD",2,2,391,23,1,0)
The type of patient is used to determine which screens in the registration
"^DD",2,2,391,23,2,0)
process should be allowed for entry/edit.  The 'Patient Type Update' option
"^DD",2,2,391,23,3,0)
in MAS can be used to determine which screens are editable for each patient
"^DD",2,2,391,23,4,0)
type.
"^DD",2,2,391,"AUDIT")
y
"^DD",2,2,391,"DT")
2970825
"^DD",2,2,1901,0)
VETERAN (Y/N)?^RSXa^Y:YES;N:NO;^VET;1^I $D(X) S:'$D(DPTX) DFN=DA D:'$D(^XUSEC("DG ELIGIBILITY",DUZ)) VAGE^DGLOCK:X="Y" I $D(X) D:$D(DFN) EV^DGLOCK
"^DD",2,2,1901,.1)

"^DD",2,2,1901,1,0)
^.1
"^DD",2,2,1901,1,1,0)
2^AN^MUMPS
"^DD",2,2,1901,1,1,1)
S DFN=DA D EN^DGMTCOR K DGMTCOR
"^DD",2,2,1901,1,1,2)
S DFN=DA D EN^DGMTCOR K DGMTCOR
"^DD",2,2,1901,1,1,"%D",0)
^^3^3^2930121^^^^
"^DD",2,2,1901,1,1,"%D",1,0)
This cross reference acts like a trigger.  It 'triggers' the status field
"^DD",2,2,1901,1,1,"%D",2,0)
in file 408.31 (ANNUAL MEANS TEST) for the co-pay exemption test.  It
"^DD",2,2,1901,1,1,"%D",3,0)
will update the field to 'NO LONGER APPLICABLE' if appropriate.
"^DD",2,2,1901,1,1,"DT")
2930121
"^DD",2,2,1901,1,3,0)
^^TRIGGER^2^.301
"^DD",2,2,1901,1,3,1)
X ^DD(2,1901,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^DPT(D0,.3)):^(.3),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X=DIV S X="N" X ^DD(2,1901,1,3,1.4)
"^DD",2,2,1901,1,3,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$S($D(^DD(2,1901,0)):$P(^(0),U,3),1:"") S X=$P($P(Y(1),$C(59)_Y(0)_":",2),$C(59),1)'["Y"
"^DD",2,2,1901,1,3,1.4)
S DIH=$S($D(^DPT(DIV(0),.3)):^(.3),1:""),DIV=X S %=$P(DIH,U,2,999),DIU=$P(DIH,U,1),^(.3)=DIV_$S(%]"":U_%,1:""),DIH=2,DIG=.301 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",2,2,1901,1,3,2)
Q
"^DD",2,2,1901,1,3,"CREATE CONDITION")
#1901'["Y"
"^DD",2,2,1901,1,3,"CREATE VALUE")
"N"
"^DD",2,2,1901,1,3,"DELETE VALUE")
NO EFFECT
"^DD",2,2,1901,1,3,"FIELD")
#.301
"^DD",2,2,1901,1,4,0)
2^AENR1901^MUMPS
"^DD",2,2,1901,1,4,1)
D AUTOUPD^DGENA2(DA)
"^DD",2,2,1901,1,4,2)
D AUTOUPD^DGENA2(DA)
"^DD",2,2,1901,1,4,3)
DO NOT DELETE
"^DD",2,2,1901,1,4,"%D",0)
^^1^1^2980225^
"^DD",2,2,1901,1,4,"%D",1,0)
This cross-reference will be used to update the patient's enrollment.
"^DD",2,2,1901,1,4,"DT")
2980225
"^DD",2,2,1901,1,991,0)
2^AVAFC1901^MUMPS
"^DD",2,2,1901,1,991,1)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF="1901;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,1901,1,991,2)
I ($T(AVAFC^VAFCDD01)'="") S VAFCF="1901;" D AVAFC^VAFCDD01(DA)
"^DD",2,2,1901,1,991,"%D",0)
^^15^15^2990204^^
"^DD",2,2,1901,1,991,"%D",1,0)
This cross reference is used to remember that changes were made to the
"^DD",2,2,1901,1,991,"%D",2,0)
PATIENT file (#2) outside of the Registration process.  Execution of this
"^DD",2,2,1901,1,991,"%D",3,0)
cross reference will create an entry in the ADT/HL7 PIVOT file (#391.71)
"^DD",2,2,1901,1,991,"%D",4,0)
and mark it as requiring transmission of an HL7 ADT-A08 message.
"^DD",2,2,1901,1,991,"%D",5,0)
 
"^DD",2,2,1901,1,991,"%D",6,0)
The local variable VAFCFLG will be set to 1 if the cross reference is
"^DD",2,2,1901,1,991,"%D",7,0)
not executed because the change is being made from within the Registration
"^DD",2,2,1901,1,991,"%D",8,0)
process.
"^DD",2,2,1901,1,991,"%D",9,0)
 
"^DD",2,2,1901,1,991,"%D",10,0)
Execution of this cross reference can be prevented by setting the local
"^DD",2,2,1901,1,991,"%D",11,0)
variable VAFCA08 equal to 1.
"^DD",2,2,1901,1,991,"%D",12,0)
  
"^DD",2,2,1901,1,991,"%D",13,0)
The local variable VAFCF is used to identify the field edited.
"^DD",2,2,1901,1,991,"%D",14,0)
This data is stored in the FIELD(S) EDITED (#2.1) field in the 
"^DD",2,2,1901,1,991,"%D",15,0)
ADT/HL7 PIVOT file (#391.71).
"^DD",2,2,1901,1,991,"DT")
2990204
"^DD",2,2,1901,3)
Is this patient requesting care as a veteran of the U.S. Armed Forces?
"^DD",2,2,1901,20,0)
^.3LA^2^2
"^DD",2,2,1901,20,1,0)
ECD
"^DD",2,2,1901,20,2,0)
SVC
"^DD",2,2,1901,21,0)
^^5^5^2990205^^^^
"^DD",2,2,1901,21,1,0)
Enter 'Y' if this applicant is over 17 years of age and is a veteran,
"^DD",2,2,1901,21,2,0)
'N' if not.  If applicant is under 17 years of age and is a veteran
"^DD",2,2,1901,21,3,0)
only those users holding the designated security may identify him/her
"^DD",2,2,1901,21,4,0)
as a veteran.  Once eligibility is verified only those users who
"^DD",2,2,1901,21,5,0)
hold the designated security key may enter/edit this field.
"^DD",2,2,1901,"AUDIT")
y
"^DD",2,2,1901,"DEL",1,0)
S DFN=DA D EV^DGLOCK I '$D(X)
"^DD",2,2,1901,"DT")
2990204
**END**
**END**
