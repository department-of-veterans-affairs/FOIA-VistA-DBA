Released ECX*3*90 SEQ #81
Extracted from mail message
**KIDS**:ECX*3.0*90^

**INSTALL NAME**
ECX*3.0*90
"BLD",6524,0)
ECX*3.0*90^DSS EXTRACTS^0^3051212^y
"BLD",6524,1,0)
^^1^1^3051212^
"BLD",6524,1,1,0)
This patch provides the fix to several remedy tickets.
"BLD",6524,4,0)
^9.64PA^^
"BLD",6524,"INIT")
ECX3P90P
"BLD",6524,"KRN",0)
^9.67PA^8989.52^19
"BLD",6524,"KRN",.4,0)
.4
"BLD",6524,"KRN",.401,0)
.401
"BLD",6524,"KRN",.402,0)
.402
"BLD",6524,"KRN",.403,0)
.403
"BLD",6524,"KRN",.5,0)
.5
"BLD",6524,"KRN",.84,0)
.84
"BLD",6524,"KRN",3.6,0)
3.6
"BLD",6524,"KRN",3.8,0)
3.8
"BLD",6524,"KRN",9.2,0)
9.2
"BLD",6524,"KRN",9.8,0)
9.8
"BLD",6524,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",6524,"KRN",9.8,"NM",1,0)
ECX3P90P^^0^B6063013
"BLD",6524,"KRN",9.8,"NM",2,0)
ECXLBB^^0^B15257792
"BLD",6524,"KRN",9.8,"NM",3,0)
ECXUTL^^0^B37094272
"BLD",6524,"KRN",9.8,"NM","B","ECX3P90P",1)

"BLD",6524,"KRN",9.8,"NM","B","ECXLBB",2)

"BLD",6524,"KRN",9.8,"NM","B","ECXUTL",3)

"BLD",6524,"KRN",19,0)
19
"BLD",6524,"KRN",19.1,0)
19.1
"BLD",6524,"KRN",101,0)
101
"BLD",6524,"KRN",409.61,0)
409.61
"BLD",6524,"KRN",771,0)
771
"BLD",6524,"KRN",870,0)
870
"BLD",6524,"KRN",8989.51,0)
8989.51
"BLD",6524,"KRN",8989.52,0)
8989.52
"BLD",6524,"KRN",8994,0)
8994
"BLD",6524,"KRN","B",.4,.4)

"BLD",6524,"KRN","B",.401,.401)

"BLD",6524,"KRN","B",.402,.402)

"BLD",6524,"KRN","B",.403,.403)

"BLD",6524,"KRN","B",.5,.5)

"BLD",6524,"KRN","B",.84,.84)

"BLD",6524,"KRN","B",3.6,3.6)

"BLD",6524,"KRN","B",3.8,3.8)

"BLD",6524,"KRN","B",9.2,9.2)

"BLD",6524,"KRN","B",9.8,9.8)

"BLD",6524,"KRN","B",19,19)

"BLD",6524,"KRN","B",19.1,19.1)

"BLD",6524,"KRN","B",101,101)

"BLD",6524,"KRN","B",409.61,409.61)

"BLD",6524,"KRN","B",771,771)

"BLD",6524,"KRN","B",870,870)

"BLD",6524,"KRN","B",8989.51,8989.51)

"BLD",6524,"KRN","B",8989.52,8989.52)

"BLD",6524,"KRN","B",8994,8994)

"BLD",6524,"QUES",0)
^9.62^^
"BLD",6524,"REQB",0)
^9.611^2^2
"BLD",6524,"REQB",1,0)
ECX*3.0*87^2
"BLD",6524,"REQB",2,0)
ECX*3.0*84^2
"BLD",6524,"REQB","B","ECX*3.0*84",2)

"BLD",6524,"REQB","B","ECX*3.0*87",1)

"INIT")
ECX3P90P
"MBREQ")
0
"PKG",535,-1)
1^1
"PKG",535,0)
DSS EXTRACTS^ECX
"PKG",535,20,0)
^9.402P^^
"PKG",535,22,0)
^9.49I^1^1
"PKG",535,22,1,0)
3.0^2971222^3000224^66481
"PKG",535,22,1,"PAH",1,0)
90^3051212
"PKG",535,22,1,"PAH",1,1,0)
^^1^1^3051212
"PKG",535,22,1,"PAH",1,1,1,0)
This patch provides the fix to several remedy tickets.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","ECX3P90P")
0^1^B6063013
"RTN","ECX3P90P",1,0)
ECX3P90P ;ALB/JAP - National Clinic Update ;DEC 06, 2005
"RTN","ECX3P90P",2,0)
 ;;3.0;DSS EXTRACTS;**90**;Dec 22, 1997
"RTN","ECX3P90P",3,0)
 ;
"RTN","ECX3P90P",4,0)
ADD7272 ;** Add entries to file #727.2
"RTN","ECX3P90P",5,0)
 ;ECXX is in format: ien;test^source
"RTN","ECX3P90P",6,0)
 N ECX,ECXX,DA,DIC,DIE,DR,DINUM,X,Y,TEST,SOURCE
"RTN","ECX3P90P",7,0)
 D CLEAN2
"RTN","ECX3P90P",8,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P90P",9,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P90P",10,0)
 D MES^XPDUTL(" Adding entries to DSS LAB TESTS File (#727.2)...")
"RTN","ECX3P90P",11,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P90P",12,0)
 S $P(^DD(727.21,.01,0),U,5)=""
"RTN","ECX3P90P",13,0)
 F ECX=1:1 S ECXX=$P($T(NEW7272+ECX),";;",2) Q:ECXX="QUIT"  D
"RTN","ECX3P90P",14,0)
 .S ECXDA=$P(ECXX,";",1),ECXX=$P(ECXX,";",2)
"RTN","ECX3P90P",15,0)
 .Q:'$D(^ECX(727.2,1))
"RTN","ECX3P90P",16,0)
 .I $D(^ECX(727.2,1,1,0)),'$D(^ECX(727.2,1,1,ECXDA,0)) D
"RTN","ECX3P90P",17,0)
 ..S TEST=$P(ECXX,U,1),SOURCE=$P(ECXX,U,2)
"RTN","ECX3P90P",18,0)
 ..S DA(1)=1,DIC("P")=$P(^DD(727.2,1,0),U,2),DINUM=ECXDA
"RTN","ECX3P90P",19,0)
 ..S X=TEST,DIC="^ECX(727.2,1,1,",DLAYGO=727.21,DIC(0)="LX",DIC("DR")="2///^S X=SOURCE"
"RTN","ECX3P90P",20,0)
 ..K DD,DO D FILE^DICN K DLAYGO
"RTN","ECX3P90P",21,0)
 ..D MESS
"RTN","ECX3P90P",22,0)
 S $P(^DD(727.21,.01,0),U,5)="K X"
"RTN","ECX3P90P",23,0)
 Q
"RTN","ECX3P90P",24,0)
 ;
"RTN","ECX3P90P",25,0)
MESS ;** Add message
"RTN","ECX3P90P",26,0)
 N ECXADMSG
"RTN","ECX3P90P",27,0)
 S ECXADMSG=" "_TEST
"RTN","ECX3P90P",28,0)
 D MES^XPDUTL(ECXADMSG)
"RTN","ECX3P90P",29,0)
 S ECXADMSG="     added as record #"_ECXDA_"."
"RTN","ECX3P90P",30,0)
 D MES^XPDUTL(ECXADMSG)
"RTN","ECX3P90P",31,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P90P",32,0)
 Q
"RTN","ECX3P90P",33,0)
 ;
"RTN","ECX3P90P",34,0)
MESS2 ;** Add message
"RTN","ECX3P90P",35,0)
 N ECXADMSG
"RTN","ECX3P90P",36,0)
 S ECXADMSG=" "_A1_" - "_A3
"RTN","ECX3P90P",37,0)
 D MES^XPDUTL(ECXADMSG)
"RTN","ECX3P90P",38,0)
 S ECXADMSG="     added as record #"_ECXDA_"."
"RTN","ECX3P90P",39,0)
 D MES^XPDUTL(ECXADMSG)
"RTN","ECX3P90P",40,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P90P",41,0)
 Q
"RTN","ECX3P90P",42,0)
 ;
"RTN","ECX3P90P",43,0)
CLEAN2 ;delete records added to file #727.2
"RTN","ECX3P90P",44,0)
 N ECX,X,Y,DA,DIK,DIC,JJ,SS
"RTN","ECX3P90P",45,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P90P",46,0)
 D MES^XPDUTL(" This subroutine will delete those entries in file #727.2,")
"RTN","ECX3P90P",47,0)
 D MES^XPDUTL(" DSS LAB TESTS File, which were added by patch ECX*3.0*87.")
"RTN","ECX3P90P",48,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P90P",49,0)
 ;I $E(IOST)="C" D  Q:'Y
"RTN","ECX3P90P",50,0)
 ;.S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECX3P90P",51,0)
 ;.K X,Y
"RTN","ECX3P90P",52,0)
 ;.S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECX3P90P",53,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P90P",54,0)
 D MES^XPDUTL(" Deleting...")
"RTN","ECX3P90P",55,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P90P",56,0)
 F ECX=60:1:71 D
"RTN","ECX3P90P",57,0)
 .S DA=ECX,DA(1)=1,DIK="^ECX(727.2,1,1,"
"RTN","ECX3P90P",58,0)
 .D ^DIK
"RTN","ECX3P90P",59,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P90P",60,0)
 D MES^XPDUTL(" Done.")
"RTN","ECX3P90P",61,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P90P",62,0)
 Q
"RTN","ECX3P90P",63,0)
 ;
"RTN","ECX3P90P",64,0)
NEW7272 ;new records for file #727.2
"RTN","ECX3P90P",65,0)
 ;;60;BILIRUBIN, DIRECT^B
"RTN","ECX3P90P",66,0)
 ;;61;C REACTIVE PROTEIN^B
"RTN","ECX3P90P",67,0)
 ;;62;C REACTIVE PROTEIN HS^B
"RTN","ECX3P90P",68,0)
 ;;63;CALCIUM SERUM^B
"RTN","ECX3P90P",69,0)
 ;;64;CARBON DIOXIDE^B
"RTN","ECX3P90P",70,0)
 ;;65;CHLORIDE^B
"RTN","ECX3P90P",71,0)
 ;;66;CREATININE EGFR^B
"RTN","ECX3P90P",72,0)
 ;;67;B NATRIURETIC PEPTIDE^B
"RTN","ECX3P90P",73,0)
 ;;68;O2 SATURATION^B
"RTN","ECX3P90P",74,0)
 ;;69;PO2^B
"RTN","ECX3P90P",75,0)
 ;;70;PCO2^B
"RTN","ECX3P90P",76,0)
 ;;71;TOTAL PROTEIN^B
"RTN","ECX3P90P",77,0)
 ;;QUIT
"RTN","ECXLBB")
0^2^B15257792
"RTN","ECXLBB",1,0)
ECXLBB ;DALOI/KML - DSS BLOOD BANK EXTRACT ; 12/12/05 11:50am
"RTN","ECXLBB",2,0)
 ;;3.0;DSS EXTRACTS;**78,84,90**;Dec 22, 1997
"RTN","ECXLBB",3,0)
 ;Per VHA Directive 97-033 this routine should not be modified.  Medical Device # BK970021
"RTN","ECXLBB",4,0)
 ; access to the LAB DATA file (#63) is supported by 
"RTN","ECXLBB",5,0)
 ; controlled subscription to IA 525  (global root ^LR)  
"RTN","ECXLBB",6,0)
BEG ;entry point from option
"RTN","ECXLBB",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLBB",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLBB",9,0)
 Q
"RTN","ECXLBB",10,0)
 ;
"RTN","ECXLBB",11,0)
START ; Entry point from tasked job
"RTN","ECXLBB",12,0)
 ; begin package specific extract
"RTN","ECXLBB",13,0)
 N ECTRSP,ECADMT,ECTODT,ECENCTR,ECPAT,ECLRDFN,ECXPHY,ECXPHYPC
"RTN","ECXLBB",14,0)
 N ECD,ECXDFN,ECARRY,EC66,ECERR,ECTRFDT,ECTRFTM,ECX,ECINOUT,ECXINST
"RTN","ECXLBB",15,0)
 ;variables ECFILE,EC23,ECXYM,ECINST,ECSD,ECSD1,ECED passed in 
"RTN","ECXLBB",16,0)
 ; by taskmanager 
"RTN","ECXLBB",17,0)
 ; ECED defined in ^ECXTRAC - it represents the end date of the extract
"RTN","ECXLBB",18,0)
 ; sort process.  TRANSFUSION DATE should be within start and end dates
"RTN","ECXLBB",19,0)
 ; ECED and ECSD were assigned with input provided by the user interface
"RTN","ECXLBB",20,0)
 ; and ECSD1 = ECSD-.1
"RTN","ECXLBB",21,0)
 ; Read through the TRANSFUSION RECORD sub-file (63.017) of 
"RTN","ECXLBB",22,0)
 ; the LAB DATA file (#63)
"RTN","ECXLBB",23,0)
 ;the global nodes containing transfusion record entries are constructed
"RTN","ECXLBB",24,0)
 ; by calculating the TRANSFUSION DATE/TIME (.01)
"RTN","ECXLBB",25,0)
 ; into its reverse date/time representation and then DINUM'd when 
"RTN","ECXLBB",26,0)
 ;filing the record entry 
"RTN","ECXLBB",27,0)
 ; ECD equals the reverse date/time of ECED+.3 and will need to be
"RTN","ECXLBB",28,0)
 ; reset for each DFN.
"RTN","ECXLBB",29,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1 Q  ;quit if tasked and user sends stop request  (QFLG assigned in ECXTRAC)
"RTN","ECXLBB",30,0)
AUDRPT ; entry point for pre-extract audit report
"RTN","ECXLBB",31,0)
 S ECTODT=9999999-ECSD1,ECLRDFN=0
"RTN","ECXLBB",32,0)
 F  S ECLRDFN=$O(^LR(ECLRDFN)) Q:'ECLRDFN  S ECXDFN=$$GETDFN(ECLRDFN),ECERR=$$PAT(ECXDFN) S ECD=9999999-(ECED+.3) F  S ECD=$O(^LR(ECLRDFN,1.6,ECD)) Q:ECERR  Q:'ECD!(ECD>ECTODT)  S EC0=^LR(ECLRDFN,1.6,ECD,0) D
"RTN","ECXLBB",33,0)
 .; ECARRY(1)=TRANSFUSION DATE AND TIME, 
"RTN","ECXLBB",34,0)
 .; ECARRY(3)=COMPONENT, ECARRY(4)=COMPONENT ABBREVIATION
"RTN","ECXLBB",35,0)
 .; ECARRY(5)=UNITS POOLED, ECARRY(6)=TRANSFUSION REACTION, 
"RTN","ECXLBB",36,0)
 .; ECARRY(7)=VOLUME TRANSFUSED, ECARRY(8)=TRANSFUSION REACTION TYPE
"RTN","ECXLBB",37,0)
 . S ECARRY(1)=$P(EC0,"^"),EC66=$P($G(^LAB(66,$P(EC0,"^",2),0)),"^",1,2)
"RTN","ECXLBB",38,0)
 . S ECARRY(3)=$E($P(EC66,"^"),1,15),ECARRY(4)=$P(EC66,"^",2)
"RTN","ECXLBB",39,0)
 . S ECARRY(5)=$S(+$P(EC0,"^",7)=0:1,1:+$P(EC0,"^",7))
"RTN","ECXLBB",40,0)
 . S ECARRY(6)=$S($P(EC0,"^",8)=1:"Y",1:"N"),ECARRY(7)=$P(EC0,"^",10)
"RTN","ECXLBB",41,0)
 . S ECARRY(8)=$P($G(^LAB(65.4,+$P(EC0,"^",11),0)),"^",2)
"RTN","ECXLBB",42,0)
 . S (ECXPHY,ECXPHYPC)=""
"RTN","ECXLBB",43,0)
 . D GETDATA
"RTN","ECXLBB",44,0)
 . K ECARRY
"RTN","ECXLBB",45,0)
 Q
"RTN","ECXLBB",46,0)
 ;
"RTN","ECXLBB",47,0)
GETDATA ; gather rest of extract data that will be recorded in an 
"RTN","ECXLBB",48,0)
 ; entry in file 727.829
"RTN","ECXLBB",49,0)
 S ECTRFDT=$$ECXDOB^ECXUTL(ECARRY(1)),ECTRFTM=$$ECXTIME^ECXUTL(ECARRY(1))
"RTN","ECXLBB",50,0)
 S ECX=$$INP^ECXUTL2(ECXDFN,ECARRY(1)),ECINOUT=$P(ECX,U),ECTRSP=$P(ECX,U,3),ECADMT=$P(ECX,U,4) ; [FLD #5]
"RTN","ECXLBB",51,0)
 ;
"RTN","ECXLBB",52,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLBB",53,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECINOUT,ECTRSP)
"RTN","ECXLBB",54,0)
 ;- If no encounter number don't file record
"RTN","ECXLBB",55,0)
 S ECENCTR=$$ENCNUM^ECXUTL4(ECINOUT,ECPAT("SSN"),ECADMT,ECARRY(1),ECTRSP,ECXOBS,ECHEAD,,) ; [FLD #6]
"RTN","ECXLBB",56,0)
 Q:ECENCTR=""
"RTN","ECXLBB",57,0)
 ;
"RTN","ECXLBB",58,0)
 S ECXSTR=$G(EC23)_"^"_ECINST_"^"_ECXDFN_"^"_ECPAT("SSN")_"^"_ECPAT("NAME")_"^"_ECINOUT_"^"_ECENCTR_"^"_ECTRFDT_"^"_ECTRFTM_"^"_ECARRY(3)_"^"_ECARRY(4)_"^"_ECARRY(5)_"^"_ECARRY(7)_"^"_ECARRY(6)_"^"_ECARRY(8)_"^BB"_ECINST_"^^"
"RTN","ECXLBB",59,0)
 I $G(ECXLOGIC)>2005 S ECXSTR=ECXSTR_U_ECXPHY_U_ECXPHYPC
"RTN","ECXLBB",60,0)
 I '$D(ECXRPT) D FILE(ECXSTR) Q
"RTN","ECXLBB",61,0)
 S ^TMP("ECXLBB",$J,ECXDFN,ECD)=ECXSTR  ;temporary global array
"RTN","ECXLBB",62,0)
 ;   used in ECXPLBB (pre-extract audit report)
"RTN","ECXLBB",63,0)
 Q
"RTN","ECXLBB",64,0)
 ;
"RTN","ECXLBB",65,0)
GETDFN(ECXLRDFN) ;
"RTN","ECXLBB",66,0)
 ; INPUT - LRDFN
"RTN","ECXLBB",67,0)
 ; OUTPUT - DFN
"RTN","ECXLBB",68,0)
 ; Obtains DFN (Patient ID) from LRDFN (Lab Patient ID).
"RTN","ECXLBB",69,0)
 ; If no valid DFN exists, 0 is returned.
"RTN","ECXLBB",70,0)
 S ECXLRDFN=+$G(ECXLRDFN)
"RTN","ECXLBB",71,0)
 I $P($G(^LR(ECXLRDFN,0)),"^",2)'=2 Q 0
"RTN","ECXLBB",72,0)
 Q +$P(^LR(ECXLRDFN,0),"^",3)
"RTN","ECXLBB",73,0)
 ; 
"RTN","ECXLBB",74,0)
PAT(ECXDFN) ;get/set patient data
"RTN","ECXLBB",75,0)
 ; INPUT - ECXDFN = patient ien (DFN)
"RTN","ECXLBB",76,0)
 ; OUTPUT - ECPAT array:
"RTN","ECXLBB",77,0)
 ;          ECPAT("SSN")
"RTN","ECXLBB",78,0)
 ;          ECPAT("NAME")
"RTN","ECXLBB",79,0)
 ; returns 0 or 1 in ECXERR - 0=successful
"RTN","ECXLBB",80,0)
 ;                            1=error condition
"RTN","ECXLBB",81,0)
 N X,OK,ECXERR
"RTN","ECXLBB",82,0)
 ;get data
"RTN","ECXLBB",83,0)
 S ECXERR=0
"RTN","ECXLBB",84,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,"",1,.ECPAT)
"RTN","ECXLBB",85,0)
 I 'OK S ECXERR=1
"RTN","ECXLBB",86,0)
 Q ECXERR
"RTN","ECXLBB",87,0)
 ;
"RTN","ECXLBB",88,0)
FILE(ECODE) ;
"RTN","ECXLBB",89,0)
 ; Input - ECODE = extract record
"RTN","ECXLBB",90,0)
 ;
"RTN","ECXLBB",91,0)
 ; record the extract record at a global node in file 727.829
"RTN","ECXLBB",92,0)
 ; sequence #^year/month of extract^extract #^facility^patient dfn^SSN^
"RTN","ECXLBB",93,0)
 ; name^i/o pt indicator^encounter #^date of transfusion^time of 
"RTN","ECXLBB",94,0)
 ; transfusion^component^component abbrev^# of units^volume in mm^
"RTN","ECXLBB",95,0)
 ; reaction^reaction type^feeder location^DSS product dept^DSS IP #
"RTN","ECXLBB",96,0)
 ; ordering physician^ordering physician pc
"RTN","ECXLBB",97,0)
 ;note:  DSS product dept and DSS IP # are dependent on the release of
"RTN","ECXLBB",98,0)
 ; ECX*3*61
"RTN","ECXLBB",99,0)
 N DA,DIK,EC7
"RTN","ECXLBB",100,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLBB",101,0)
 S ECODE=EC7_"^"_ECODE
"RTN","ECXLBB",102,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,ECRN=ECRN+1
"RTN","ECXLBB",103,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLBB",104,0)
 Q
"RTN","ECXLBB",105,0)
 ;
"RTN","ECXLBB",106,0)
 ;
"RTN","ECXLBB",107,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXLBB",108,0)
 S ECHEAD="LBB"
"RTN","ECXLBB",109,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLBB",110,0)
 Q
"RTN","ECXLBB",111,0)
 ;
"RTN","ECXLBB",112,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXLBB",113,0)
 ; should be queued with a 1D frequency
"RTN","ECXLBB",114,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXLBB",115,0)
 ;
"RTN","ECXLBB",116,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLBB",117,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXLBB",118,0)
 Q
"RTN","ECXLBB",119,0)
 ;
"RTN","ECXLBB",120,0)
 ;ECXLBB
"RTN","ECXUTL")
0^3^B37094272
"RTN","ECXUTL",1,0)
ECXUTL ;ALB/JAP - Utilities for DSS Extracts ; 12/12/05 8:43am
"RTN","ECXUTL",2,0)
 ;;3.0;DSS EXTRACTS;**1,5,8,84,90**;Dec 22, 1997
"RTN","ECXUTL",3,0)
 ;
"RTN","ECXUTL",4,0)
ECXYM(ECXFMDT) ;extrinsic function
"RTN","ECXUTL",5,0)
 ;converts any FM internal format date or date/time to a 6-character string
"RTN","ECXUTL",6,0)
 ;
"RTN","ECXUTL",7,0)
 ;   input
"RTN","ECXUTL",8,0)
 ;   ECXFMDT = date or date/time; FM internal format (required)
"RTN","ECXUTL",9,0)
 ;   output
"RTN","ECXUTL",10,0)
 ;   ECXYM = YYYYMM string
"RTN","ECXUTL",11,0)
 ;
"RTN","ECXUTL",12,0)
 N MONTH,YEAR,CENTURY,ECXYM
"RTN","ECXUTL",13,0)
 ;
"RTN","ECXUTL",14,0)
 ;error checks
"RTN","ECXUTL",15,0)
 I +ECXFMDT'=ECXFMDT S ECXYM="000000" Q ECXYM
"RTN","ECXUTL",16,0)
 I $L($P(ECXFMDT,"."))'=7 S ECXYM="000000" Q ECXYM
"RTN","ECXUTL",17,0)
 I +$E(ECXFMDT,4,5)<1!(+$E(ECXFMDT,4,5)>12) S ECXYM="000000" Q ECXYM
"RTN","ECXUTL",18,0)
 ;
"RTN","ECXUTL",19,0)
 S MONTH=$E(ECXFMDT,4,5),YEAR=$E(ECXFMDT,2,3),CENTURY=$E(ECXFMDT,1)+17
"RTN","ECXUTL",20,0)
 S ECXYM=CENTURY_YEAR_MONTH
"RTN","ECXUTL",21,0)
 Q ECXYM
"RTN","ECXUTL",22,0)
 ;
"RTN","ECXUTL",23,0)
ECXYMX(ECXYM) ;extrinsic function
"RTN","ECXUTL",24,0)
 ;converts a 6-character numeric string of format YYYYMM
"RTN","ECXUTL",25,0)
 ;to a FM external format date
"RTN","ECXUTL",26,0)
 ;
"RTN","ECXUTL",27,0)
 ;   input
"RTN","ECXUTL",28,0)
 ;   ECXYM = YYYYMM string (required)
"RTN","ECXUTL",29,0)
 ;   output
"RTN","ECXUTL",30,0)
 ;   ECXYMX = FM external format date;
"RTN","ECXUTL",31,0)
 ;            SEP 1997
"RTN","ECXUTL",32,0)
 ;   error code
"RTN","ECXUTL",33,0)
 ;   if input problem, then "000000" returned
"RTN","ECXUTL",34,0)
 ;
"RTN","ECXUTL",35,0)
 N Y,%DT,CENTURY,FMCENT,ECXYMX
"RTN","ECXUTL",36,0)
 ;
"RTN","ECXUTL",37,0)
 ;error checks
"RTN","ECXUTL",38,0)
 I ECXYM="" S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",39,0)
 I +ECXYM'=ECXYM S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",40,0)
 I $L(ECXYM)'=6 S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",41,0)
 I +$E(ECXYM,1,4)<1800 S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",42,0)
 I +$E(ECXYM,5,6)<1!(+$E(ECXYM,5,6)>12) S ECXYMX="000000" Q ECXYMX
"RTN","ECXUTL",43,0)
 ;
"RTN","ECXUTL",44,0)
 S CENTURY=$E(ECXYM,1,2)
"RTN","ECXUTL",45,0)
 S FMCENT=CENTURY-17
"RTN","ECXUTL",46,0)
 S Y=FMCENT_$E(ECXYM,3,6) D DD^%DT S ECXYMX=Y
"RTN","ECXUTL",47,0)
 ;
"RTN","ECXUTL",48,0)
 ;error checks
"RTN","ECXUTL",49,0)
 I $L(ECXYMX)'=8 S ECXYMX="000000"
"RTN","ECXUTL",50,0)
 I "JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC"'[$E(ECXYMX,1,3) S ECXYMX="000000"
"RTN","ECXUTL",51,0)
 Q ECXYMX
"RTN","ECXUTL",52,0)
 ;
"RTN","ECXUTL",53,0)
ECXDATE(ECXFMDT,ECXYM) ;extrinsic function
"RTN","ECXUTL",54,0)
 ;converts any FM internal format date or date/time to a 8-character string
"RTN","ECXUTL",55,0)
 ;
"RTN","ECXUTL",56,0)
 ;   input
"RTN","ECXUTL",57,0)
 ;   ECXFMDT = date or date/time; FM internal format (required)
"RTN","ECXUTL",58,0)
 ;   ECXYM = YYYYMM; year/month 6-character string (required)
"RTN","ECXUTL",59,0)
 ;   output
"RTN","ECXUTL",60,0)
 ;   ECXDATE = YYYYMMDD string
"RTN","ECXUTL",61,0)
 ;   error code
"RTN","ECXUTL",62,0)
 ;   "000000" returned, if problem with input
"RTN","ECXUTL",63,0)
 ;
"RTN","ECXUTL",64,0)
 N MONTH,YEAR,CENTURY,DAY,ECXDATE
"RTN","ECXUTL",65,0)
 ;
"RTN","ECXUTL",66,0)
 ;error checks
"RTN","ECXUTL",67,0)
 I +ECXYM'=ECXYM S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",68,0)
 I $L(ECXYM)'=6 S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",69,0)
 I +$E(ECXYM,1,4)<1800 S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",70,0)
 I +$E(ECXYM,5,6)<1!($E(ECXYM,5,6)>12) S ECXDATE="000000" Q ECXDATE
"RTN","ECXUTL",71,0)
 ;special case where ecxfmdt is null; default to year/month of ecxym
"RTN","ECXUTL",72,0)
 I ECXFMDT="" S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",73,0)
 ;error checks
"RTN","ECXUTL",74,0)
 I +ECXFMDT'=ECXFMDT S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",75,0)
 I $L(ECXFMDT)<7 S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",76,0)
 I +$E(ECXFMDT,4,5)>12 S ECXDATE=ECXYM_"01" Q ECXDATE
"RTN","ECXUTL",77,0)
 I +$E(ECXFMDT,6,7)>31 S ECXFMDT=$E(ECXFMDT,1,5)_"01"
"RTN","ECXUTL",78,0)
 ;default to 1st day of month
"RTN","ECXUTL",79,0)
 S DAY=$E(ECXFMDT,6,7) S:DAY="00" DAY="01"
"RTN","ECXUTL",80,0)
 ;default to month of ecxym
"RTN","ECXUTL",81,0)
 S MONTH=$E(ECXFMDT,4,5) S:MONTH="00" MONTH=$E(ECXYM,5,6)
"RTN","ECXUTL",82,0)
 S YEAR=$E(ECXFMDT,2,3)
"RTN","ECXUTL",83,0)
 S CENTURY=$E(ECXFMDT,1)+17
"RTN","ECXUTL",84,0)
 S ECXDATE=CENTURY_YEAR_MONTH_DAY
"RTN","ECXUTL",85,0)
 Q ECXDATE
"RTN","ECXUTL",86,0)
 ;
"RTN","ECXUTL",87,0)
ECXDATEX(ECXDATE) ;extrinsic function
"RTN","ECXUTL",88,0)
 ;converts an 8-character numeric string of format YYYYMMDD
"RTN","ECXUTL",89,0)
 ;to a FM external format date
"RTN","ECXUTL",90,0)
 ;
"RTN","ECXUTL",91,0)
 ;   input
"RTN","ECXUTL",92,0)
 ;   ECXDATE = YYYYMMDD string (required)
"RTN","ECXUTL",93,0)
 ;   output
"RTN","ECXUTL",94,0)
 ;   ECXDATEX = FM external format date;
"RTN","ECXUTL",95,0)
 ;              SEP 12, 1997
"RTN","ECXUTL",96,0)
 ;   error code
"RTN","ECXUTL",97,0)
 ;   if input problem, then "000000" returned
"RTN","ECXUTL",98,0)
 ;
"RTN","ECXUTL",99,0)
 N Y,%DT,CENTURY,FMCENT,ECXDATEX
"RTN","ECXUTL",100,0)
 ;
"RTN","ECXUTL",101,0)
 ;error checks
"RTN","ECXUTL",102,0)
 I +ECXDATE'=ECXDATE S ECXDATEX="000000" Q ECXDATEX
"RTN","ECXUTL",103,0)
 I $L(ECXDATE)'=8 S ECXDATEX="000000" Q ECXDATEX
"RTN","ECXUTL",104,0)
 I +$E(ECXDATE,7,8)>31 S ECXDATEX="000000" Q ECXDATEX
"RTN","ECXUTL",105,0)
 ;
"RTN","ECXUTL",106,0)
 S CENTURY=$E(ECXDATE,1,2)
"RTN","ECXUTL",107,0)
 S FMCENT=CENTURY-17
"RTN","ECXUTL",108,0)
 S Y=FMCENT_$E(ECXDATE,3,8) D DD^%DT S ECXDATEX=Y
"RTN","ECXUTL",109,0)
 ;
"RTN","ECXUTL",110,0)
 ;error checks
"RTN","ECXUTL",111,0)
 I $L(ECXDATEX)'=12 S ECXDATEX="000000"
"RTN","ECXUTL",112,0)
 I "JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC"'[$E(ECXDATEX,1,3) S ECXDATEX="000000"
"RTN","ECXUTL",113,0)
 Q ECXDATEX
"RTN","ECXUTL",114,0)
 ;
"RTN","ECXUTL",115,0)
ECXDOB(ECXFMDT) ;extrinsic function
"RTN","ECXUTL",116,0)
 ;converts a FM internal format date or date/time to a 6-character string
"RTN","ECXUTL",117,0)
 ;if ecxfmdt is null, the function returns 19420101
"RTN","ECXUTL",118,0)
 ;   input
"RTN","ECXUTL",119,0)
 ;   ECXFMDT = date or date/time (required); 
"RTN","ECXUTL",120,0)
 ;             must be valid FM internal format 
"RTN","ECXUTL",121,0)
 ;   output
"RTN","ECXUTL",122,0)
 ;   ECXDOB = YYYYMMDD string (required);
"RTN","ECXUTL",123,0)
 ;            defaults to 19420101
"RTN","ECXUTL",124,0)
 ;
"RTN","ECXUTL",125,0)
 N MONTH,YEAR,CENTURY,DAY,ECXDOB
"RTN","ECXUTL",126,0)
 ;only consider date portion
"RTN","ECXUTL",127,0)
 S ECXFMDT=$P(ECXFMDT,".",1)
"RTN","ECXUTL",128,0)
 ;special case where ecxfmdt is null
"RTN","ECXUTL",129,0)
 I ECXFMDT="" S ECXDOB="19420101" Q ECXDOB
"RTN","ECXUTL",130,0)
 ;error checks - return default
"RTN","ECXUTL",131,0)
 I +ECXFMDT'=ECXFMDT S ECXDOB="19420101" Q ECXDOB
"RTN","ECXUTL",132,0)
 I $L(ECXFMDT)<7 S ECXDOB="19420101" Q ECXDOB
"RTN","ECXUTL",133,0)
 I +ECXFMDT>DT S ECXDOB="19420101" Q ECXDOB
"RTN","ECXUTL",134,0)
 ;default to 1st day of month
"RTN","ECXUTL",135,0)
 S DAY=$E(ECXFMDT,6,7) S:DAY="00"!(+DAY>31) DAY="01"
"RTN","ECXUTL",136,0)
 ;default to 1st month of year
"RTN","ECXUTL",137,0)
 S MONTH=$E(ECXFMDT,4,5) S:MONTH="00"!(+MONTH>12) MONTH="01",DAY="01"
"RTN","ECXUTL",138,0)
 S YEAR=$E(ECXFMDT,2,3)
"RTN","ECXUTL",139,0)
 S CENTURY=$E(ECXFMDT,1)+17
"RTN","ECXUTL",140,0)
 S ECXDOB=CENTURY_YEAR_MONTH_DAY
"RTN","ECXUTL",141,0)
 Q ECXDOB
"RTN","ECXUTL",142,0)
 ;
"RTN","ECXUTL",143,0)
ECXTIME(ECXFMDT) ;extrinsic function
"RTN","ECXUTL",144,0)
 ;converts Fileman internal date/time to 6-character time string
"RTN","ECXUTL",145,0)
 ;format HHMMSS
"RTN","ECXUTL",146,0)
 ;
"RTN","ECXUTL",147,0)
 ;   input
"RTN","ECXUTL",148,0)
 ;   ECXFMDT = date or date/time (required); 
"RTN","ECXUTL",149,0)
 ;             must be valid FM internal format
"RTN","ECXUTL",150,0)
 ;   output
"RTN","ECXUTL",151,0)
 ;   ECXTIME = 6-character numeric string;
"RTN","ECXUTL",152,0)
 ;             format HHMMSS; string length always 6
"RTN","ECXUTL",153,0)
 ;
"RTN","ECXUTL",154,0)
 N J,JJ,TIME,HH,MM,SS,ECXTIME
"RTN","ECXUTL",155,0)
 ;if any non-numerics, set default
"RTN","ECXUTL",156,0)
 I +ECXFMDT=0 S ECXTIME="000300" Q ECXTIME
"RTN","ECXUTL",157,0)
 ;use only time portion of fileman internal format
"RTN","ECXUTL",158,0)
 S TIME=$P(ECXFMDT,".",2),TIME=$E(TIME,1,6)
"RTN","ECXUTL",159,0)
 ;if time unknown, set default
"RTN","ECXUTL",160,0)
 I TIME="" S ECXTIME="000300" Q ECXTIME
"RTN","ECXUTL",161,0)
 ;be sure time is 6 characters
"RTN","ECXUTL",162,0)
 S TIME=$$LJ^XLFSTR(TIME,6,0)
"RTN","ECXUTL",163,0)
 ;error checks -- set default
"RTN","ECXUTL",164,0)
 S HH=$E(TIME,1,2),MM=$E(TIME,3,4),SS=$E(TIME,5,6)
"RTN","ECXUTL",165,0)
 I +HH>23 S ECXTIME="000300" Q ECXTIME
"RTN","ECXUTL",166,0)
 I +MM>59 S MM="59"
"RTN","ECXUTL",167,0)
 I +SS>59 S SS="59"
"RTN","ECXUTL",168,0)
 S ECXTIME=HH_MM_SS
"RTN","ECXUTL",169,0)
 Q ECXTIME
"RTN","ECXUTL",170,0)
 ;
"RTN","ECXUTL",171,0)
ECXTIMEX(ECXTIME,ECXMIL) ;extrinsic function
"RTN","ECXUTL",172,0)
 ;converts a 6-character time string to external, user readable format
"RTN","ECXUTL",173,0)
 ;used as output transform for time fields in many dss extract files
"RTN","ECXUTL",174,0)
 ;   input
"RTN","ECXUTL",175,0)
 ;   ECXTIME = 6-character numeric string (required); 
"RTN","ECXUTL",176,0)
 ;   ECXMIL = if "1", then return military time (optional)          
"RTN","ECXUTL",177,0)
 ;   output
"RTN","ECXUTL",178,0)
 ;   ECXTIMEX = character string;
"RTN","ECXUTL",179,0)
 ;              if ECXMIL=1, format HH:MM:SS
"RTN","ECXUTL",180,0)
 ;              otherwise, hours:mins AM/PM
"RTN","ECXUTL",181,0)
 ;   error code
"RTN","ECXUTL",182,0)
 ;   if input problem, then "000000" returned
"RTN","ECXUTL",183,0)
 ;              
"RTN","ECXUTL",184,0)
 N TIME,HH,MM,SS,ECXTIMEX,J,JJ
"RTN","ECXUTL",185,0)
 ;error checks
"RTN","ECXUTL",186,0)
 I $L(ECXTIME)'=6 S ECXTIMEX="000000" Q ECXTIMEX
"RTN","ECXUTL",187,0)
 F J=1:1:6 S JJ=$E(ECXTIME,J) I $A(JJ)<48!($A(JJ)>57) S ECXTIMEX="000000" Q
"RTN","ECXUTL",188,0)
 I $D(ECXTIMEX) Q ECXTIMEX
"RTN","ECXUTL",189,0)
 S HH=$E(ECXTIME,1,2),MM=$E(ECXTIME,3,4),SS=$E(ECXTIME,5,6)
"RTN","ECXUTL",190,0)
 I +HH>23!(+MM>59)!(+SS>59) S ECXTIMEX="000000" Q ECXTIMEX
"RTN","ECXUTL",191,0)
 ;if ecxmil=1, return military time
"RTN","ECXUTL",192,0)
 I $G(ECXMIL) S ECXTIMEX=HH_":"_MM_":"_SS Q ECXTIMEX
"RTN","ECXUTL",193,0)
 ;otherwise, use am/pm format
"RTN","ECXUTL",194,0)
 S X="0."_ECXTIME
"RTN","ECXUTL",195,0)
 S X=$E($P(X,".",2)_"0000",1,4),%=X>1159 S:X>1259 X=X-1200
"RTN","ECXUTL",196,0)
 S X=X\100_":"_$E(X#100+100,2,3)_" "_$E("AP",%+1)_"M"
"RTN","ECXUTL",197,0)
 S ECXTIMEX=X
"RTN","ECXUTL",198,0)
 Q ECXTIMEX
"RTN","ECXUTL",199,0)
 ;
"RTN","ECXUTL",200,0)
AOIRPOW(ECXDFN,ECXAIP) ;get data on ao, ir, pow status
"RTN","ECXUTL",201,0)
 ;
"RTN","ECXUTL",202,0)
 ;   input
"RTN","ECXUTL",203,0)
 ;   ECXDFN = ien in file #2 (required)
"RTN","ECXUTL",204,0)
 ;   ECXAIP = array for returned data (required)
"RTN","ECXUTL",205,0)
 ;            (passed by reference)
"RTN","ECXUTL",206,0)
 ;
"RTN","ECXUTL",207,0)
 ;   output
"RTN","ECXUTL",208,0)
 ;   ECXAIP("AO") = agent orange status
"RTN","ECXUTL",209,0)
 ;   ECXAIP("IR") = ion. radiation status
"RTN","ECXUTL",210,0)
 ;   ECXAIP("POW") = pow status
"RTN","ECXUTL",211,0)
 ;   ECXAIP("POWL") = pow location/period
"RTN","ECXUTL",212,0)
 ;
"RTN","ECXUTL",213,0)
 N J
"RTN","ECXUTL",214,0)
 S ECXAIP("AO")="",ECXAIP("IR")="",ECXAIP("POW")="",ECXAIP("POWL")=""
"RTN","ECXUTL",215,0)
 S ECXAIP("AO")=$P($G(^DPT(ECXDFN,.321)),U,2),ECXAIP("IR")=$P($G(^(.321)),U,3)
"RTN","ECXUTL",216,0)
 S ECXAIP("POW")=$P($G(^DPT(ECXDFN,.52)),U,5),ECXAIP("POWL")=$P($G(^(.52)),U,6)
"RTN","ECXUTL",217,0)
 F J="AO","IR","POW" I ECXAIP(J)="" S ECXAIP(J)="U"
"RTN","ECXUTL",218,0)
 I ECXAIP("POWL"),ECXAIP("POW")'="Y" S ECXAIP("POWL")=""
"RTN","ECXUTL",219,0)
 Q
"RTN","ECXUTL",220,0)
 ;
"RTN","ECXUTL",221,0)
PRVCLASS(PERS,DATE) ;determine the person class and return va code
"RTN","ECXUTL",222,0)
 ;   input
"RTN","ECXUTL",223,0)
 ;   PERS  = pointer to file #200 (required)
"RTN","ECXUTL",224,0)
 ;   DATE  = date on which person class must be active (required)
"RTN","ECXUTL",225,0)
 ;           (internal Fileman format)
"RTN","ECXUTL",226,0)
 ;   output
"RTN","ECXUTL",227,0)
 ;   VACODE = VA code field from file #8932.1
"RTN","ECXUTL",228,0)
 ;            (exactly 7 characters in length)
"RTN","ECXUTL",229,0)
 N ECX,VACODE
"RTN","ECXUTL",230,0)
 S VACODE=""
"RTN","ECXUTL",231,0)
 S ECHEAD=$G(ECHEAD)
"RTN","ECXUTL",232,0)
 S ECX=$$GET^XUA4A72(PERS,DATE)
"RTN","ECXUTL",233,0)
 ;if no person class use alternate date to resolve person class
"RTN","ECXUTL",234,0)
 I +ECX'>0 D
"RTN","ECXUTL",235,0)
 .N DATE
"RTN","ECXUTL",236,0)
 .S DATE=$S(ECHEAD="LAB":$P(EC1,U,14),ECHEAD="LAR":$P(EC1,U,4),ECHEAD="PRE":$P(ECDATA,U,13),ECHEAD="RAD":$P($G(^RAO(75.1,+$G(ECXIEN),0)),U,16),1:"")
"RTN","ECXUTL",237,0)
 .S ECX=$$GET^XUA4A72(PERS,DATE)
"RTN","ECXUTL",238,0)
 .Q
"RTN","ECXUTL",239,0)
 S VACODE=$P(ECX,U,7) I $L(VACODE)'=7 S VACODE=""
"RTN","ECXUTL",240,0)
 Q VACODE
"VER")
8.0^22.0
"BLD",6524,6)
^81
**END**
**END**
