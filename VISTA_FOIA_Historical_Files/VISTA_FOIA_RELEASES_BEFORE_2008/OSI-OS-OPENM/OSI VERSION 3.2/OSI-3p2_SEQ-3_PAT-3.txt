
=============================================================================
Run Date: JAN 23, 2002                     Designation: OSI*3.2*3
Package : OSI - OS-OPENM                       Priority: Mandatory
Version : 3.2         SEQ #3                   Status: Released
=============================================================================


Subject: New %Integrit Utility

Category: 
  - Other

Description: 
============

 **THIS PATCH IS FOR AVANTI (Windows NT/Intersystems Cache) SITES
     RUNNING CACHE GOLDEN BUILD VERSION 3.2 (Build 031 + Compaq4) ONLY**
  
 With the release of Cache version 3.2, a marked increased in processing 
 time was noted in the INTEGRIT utility.  This was due to how the utility
 was handling big data blocks up to 32K in size.  In order to alleviate
 this problem, a new utility named %Integrit has been released which
 greatly reduces the processing time.  In addition to the %Integrit routine, 
 another utility - ZINTEGRIT - is also being included in this patch.  
 This routine is an abbreviated Integrit Check that can be used to check 
 the database integrity of the routine directory and the pointer structure 
 of one or more globals.
  
 NOTE: THE ZINTEGRIT utility checks the integrity of POINTERS ONLY and
       should only be run as a quick check and not relied upon in lieu of
       running a full %Integrit report.
  
  
 Upon completion of this patch, $ZV will display the following version
 string:
  
 W $ZV
  
 Cache for Windows NT (Alpha) 3.2 (Build 031 + Compaq4 + %Integrit) 
 Mon Jun 25 20 01 16:49:06 EDT
  
 This patch also contains the routines %DSET, BACKIRM, NVSDEAD, NVSMSG,
 NVSINTEG and NVSINTE1, along with the option NVS AUTOMATED %INTEGRIT REPORT.
 This option will allow the ability to queue the report in the background on
 a reocurring basis and have the report sent to the G.IRM mailgroup.
  
  
 NOTE: This patch will require Cache to be shutdown during installation.
  
  
 Routine Description:
 ====================   
  
 %Integrit Routine:
  
 The %Integrit routine has been redesigned to improve run time processing, 
 provide additional information and includes a line tag for generating 
 reports in the background.  This utility also has the same capability that
 the INTEGRIT utility has to run multiple instances as the same time.
  
 NOTE: This update will NOT MODIFY the Integrity Check option that is 
       available through the Cache Control Panel\Local Databases folder.  
       In other words, if you chose to validate the database via the GUI, 
       i.e. Cache Control Panel\Local Database\Integrity Check, the 
       distributed INTEGRIT routine will be used, which will result in 
       longer run times which you may already be experiencing.
  
 New Line Tag to run %Integrit in the background:   
  
    INT(output,format,directory,stoponerror) ; no return code
       ; output = device for output log
       ; format = output device parameters for the open
       ; directory = * for all directories OR one specific directory name
       ; stoponerror = Y or N
  
  
 %DSET Routine:
  
 The %DSET routine, which is called by %Integrit, has been updated to run
 in either a Cache 3.2 or Cache 4.0 environment.
  
   
 NVSMSG Routine:
  
 The NVSMSG routine has been updated adding a new line tag EN, that allows
 parameter passing and mail notification.  The default mailgroup is G.IRM
 but can be changed by editing the NVSMSG routine.
  
     EN(DIR,FILE,SUBJ,ALERT,CSTAT)   ;
  
  
 ZINTEGRIT Routine:
  
 This routine is an abbreviated Integrit Check that can be used to check the
 database integrity of the routine directory and the pointer structure of one
 or more globals.
  
 NOTE: THE ZINTEGRIT utility checks the integrity of POINTERS ONLY and
       should only be run as a quick check and not relied upon in lieu of
       running a full %Integrit report.
  
  
 NVSINTEG/NVSINTE1 Routines:
   
 These two routines automate the %Integrit reporting process by generating
 a mail message/alert to the G.IRM mailgroup.  The NVS Automated %Integrit
 Report option is also being distributed to allow queuing of the the report
 via Taskman.
  
  
 BACKIRM/NVSDEAD Routines:
  
 These routines have been updated to take advantage of the new line tag in 
 the NVSMSG routine.  BACKIRM has been modified to provide better error 
 reporting messages and alerts.
  
 BACKIRMT (for Test System)
  
 This routine has been included in case this patch is installed on the
 Test System.  This routine has been updated to call the new line tag
 in the NVSMSG routine.
  
 Routine Summary:
    
   After installation of this patch, the second line of the appropriate
   routines listed below will look like:
    
           ;;3.2;NVS system management utility;**patch list**; NOV 21, 2001
    
  
                           Checksum        Checksum       
           Routine         Before Patch    After Patch     Patch List
  
           NVSINTEG        n/a             5968659         **3**
           NVSMSG          6419975         7763793         **3**
           NVS32PRE        n/a(deleted after install)
           %DSET           n/a             n/a             (OS routine)
           %Integrit       n/a             n/a             (OS routine)
           BACKIRM         n/a             n/a             **3**
           NVSDEAD         n/a             n/a             **3**
           NVSINTE1        n/a             n/a             **3**
  
  
 CACHE EXECUTABLES:
  
           CACHE.EXE
           CSTAT.EXE 
  
 TEST SYSTEM:
  
           BACKIRM     released in the BACKIRMT.RSA file   **3**
  
 Installation:
    
 1)  Use ftp to download the following files from the Hines Anonymous 
     Directory - address 152.129.1.110\avanti\osi_32_3.  
  
     The OSI_32_3.KID, OSI_32_3_SYS.RSA and BACKIRMT.RSA files will need 
     to be downloaded in ASCII format, while the CACHE and CSTAT executable 
     files will need to be downloaded in BINARY format.  Save these files 
     to the T:\ANONYMOUS directory.
   
     Files being distributed with this patch include:
  
      OSI_32_3.KID               -      download in ascii format
      OSI_32_3_SYS.RSA           -      download in ascii format
      BACKIRMT.RSA               -      download in ascii format
      CACHE.EXE                  -      download in binary format
      CSTAT.EXE                  -      download in binary format
   
 2)  In Vista, Inhibit Logons in the Volume Set (#14.5) file, for the ROU 
     entry.
  
 3)  Shutdown Cache.
  
 4)  Copy the current CACHE.EXE and CSTAT.EXE files from the \BIN directory 
     where Cache is installed, i.e. Y:\OPENM\BIN or Y:\CACHESYS\BIN to a 
     backup directory of your choice i.e. c:\osi323_original\. 
  
 5)  Copy the updated CACHE.EXE and CSTAT.EXE files from T:\ANONYMOUS 
     to the \BIN directory where Cache is installed, i.e. Y:\OPENM\BIN 
     or Y:\CACHESYS\BIN folder, and answer 'Yes' to overwrite.
  
 6)  Start Cache.
  
 7)  At the programmer's prompt write $ZV to verify the Cache version.
  
     W $ZV
   
     Cache for Windows NT (Alpha) 3.2 (Build 031 + Compaq4 + %Integrit) 
     Mon Jun 25 20 01 16:49:06 EDT
  
 8)  Log into the %SYS namespace.
  
 9)  Using the %RI utility, restore the %Integrit, ZINTEGRIT, %DSET,
     NVSINTE1,BACKIRM and NVSDEAD routines from the OSI_32_3_SYS.RSA file.
  
     %SYS>D ^%RI
  
     Input routines from Sequential
     Device: T:\ANONYMOUS\OSI_32_3_SYS.RSA   Parameters: "RS"=><cr>
  
     File written by Cache for Windows NT using %RO on 22 Nov 2001  10:09 PM
     with extension INT and with description:
     New %Integrity Routines for %SYS - OSI*3.2*3
  
     ( All Select Enter List Quit )
  
     Routine Input Option: [A]ll Routines
  
     If a selected routine has the same name as one already on file,
     shall it replace the one on file? No => [Y]es
     Recompile? Yes => [Y]es
     Display Syntax Errors? Yes => [Y]es
  
     ^ indicates routines which will replace those now on file.
     @ indicates routines which have been [re]compiled.
     - indicates routines which have not been filed.
  
  
     %DSET.INT^@  %Integrit.INT@  BACKIRM.INT^@  NVSDEAD.INT^@  NVSINTE1.INT@
     ZINTEGRIT.INT@  
  
     6 routines processed.
  
  
 10) Switch into the VAH namespace.
  
  
 11) From the KIDS Menu Driven routine, use the following options to install
     the Transport Global:
  
     VAH>D ^XPDKRN
  
     KIDS 8.0
  
     Select KIDS OPTION: ?
         Answer with KIDS OPTION NUMBER, or NAME
        Choose from:
        1            LOAD A DISTRIBUTION
        2            INSTALL PACKAGE(S)
        3            RESTART INSTALL OF PACKAGE(S)
        4            UNLOAD A DISTRIBUTION
        5            VERIFY CHECKSUMS IN TRANSPORT GLOBAL
     
     Select KIDS OPTION:  Load a Distribution
                          ===================
  
     Enter a Host File: T:\ANONYMOUS\OSI_32_3.KID
                        =========================
     KIDS Distribution saved on Nov 22, 2001@22:38:57
     Comment: KIDS BUILD FOR PATCH OSI*3.2*3
  
     This Distribution contains Transport Globals for the following
     Package(s):  OSI*3.2*3
     Distribution OK!
  
     Want to Continue with Load? YES// YES
     Loading Distribution...           ===
  
     OSI*3.2*3
     This Patch is for Version 3.2, you are running Version 2
  
     Want to continue installing this build? NO// YES
                                                  ===
     Use INSTALL NAME: OSI*3.2*3 to install this Distribution.
   
   
     Select KIDS OPTION: Verify Checksums in Transport Global
                         ==================================== 
  
     Select INSTALL NAME:    OSI*3.2*3     Loaded from Distribution
                             =========
     Loaded from Distribution  11/22/01@22:54:07
     => KIDS BUILD FOR PATCH OSI*3.2*3  ;Created on Nov 22, 2001@22:38:57
  
     This Distribution was loaded on Nov 22, 2001@22:54:07 with header of 
     KIDS BUILD FOR PATCH OSI*3.2*3  ;Created on Nov 22, 2001@22:38:57
     It consisted of the following Install(s):
        OSI*3.2*3
     DEVICE: HOME//<CR>   TELNET
                   ====
  
     3 Routine checked, 0 failed.
  
  
     Select KIDS OPTION: INSTALL Package(s)
     Select INSTALL NAME:    OSI*3.2*3     Loaded from Distribution
                             ========= 
     Loaded from Distribution  11/22/01@22:54:07
     => KIDS BUILD FOR PATCH OSI*3.2*3  ;Created on Nov 22, 2001@22:38:57
  
     This Distribution was loaded on Nov 22, 2001@22:54:07 with header of 
     KIDS BUILD FOR PATCH OSI*3.2*3  ;Created on Nov 22, 2001@22:38:57
     It consisted of the following Install(s):
        OSI*3.2*3
     Checking Install for Package OSI*3.2*3
     This Patch is for Version 3.2, you are running Version 2
  
     Want to continue installing this build? NO// YES
                                                  ===
     Install Questions for OSI*3.2*3
  
  
     Want KIDS to Rebuild Menu Trees Upon Completion of Install? YES// YES
                                                                       ===
  
     Want KIDS to INHIBIT LOGONs during the install? YES// NO
                                                           ==
     Want to DISABLE Scheduled Options, Menu Options, and Protocols? YES// NO
                                                                           ==
     Enter the Device you want to print the Install messages.
     You can queue the install by enter a 'Q' at the device prompt.
     Enter a '^' to abort the install.
  
     DEVICE: HOME//<cr>   TELNET
                   ====
  
  
                                Rebuilding Menus                                
     ------------------------------------------------------------------------
  
     Starting Menu Rebuild:  Nov 22, 2001@22:55:18
  
     Collecting primary menus in the New Person file...
  
                    Primary menus found in the New Person file
                    ------------------------------------------
  
     OPTION NAME    MENU TEXT                 # OF        LAST       LAST
                                              USERS       USED       BUILT
  
     EVE            Systems Manager Menu        1         11/14/01   11/22/01
  
     Building the Common Options (XUCOMMAND)....
   
     Building secondary menu trees....
  
     Menu Rebuild Complete:  Nov 22, 2001@22:55:23
     -------------------------------------------------------------------------
               +------------------------------------------------------------+
     100%      |             25             50             75               |
     Complete  +------------------------------------------------------------+
  
  
  
  
     Install Completed
  
  
 12) Create an entry in the OPTION SCHEDULING (#19.2) for the NVS AUTOMATED
     %INTEGRIT REPORT option and queue it to run on the weekend.
  
     NAME: NVS AUTOMATED %INTEGRIT REPORT
     QUEUED TO RUN AT WHAT TIME: NOV 09, 2001@22:00
     RESCHEDULING FREQUENCY: 7D            TASK ID:
  
  
 13) Re-enable logins in the Volume Set file (#14.5) for the ROU entry.
  
  
 14) Installing Patch in the Test System
  
  a) To install this patch in the Test System, follow steps 2 through
     8.  For step 9, restore the BACKIRMT.RSA file to bring in the
     Test account version of BACKIRM.
  
     %SYS>D ^%RI
  
     Input routines from Sequential
     Device: T:\ANONYMOUS\BACKIRMT.RSA   Parameters: "RS"=>
  
     File written by Cache for Windows NT using %RO on 14 Jan 2002 12:35 PM
     with extension INT and with description:
     BACKIRM routine for Test System - OSI*3.2*3
  
     ( All Select Enter List Quit )
  
     Routine Input Option: All Routines
  
     If a selected routine has the same name as one already on file,
     shall it replace the one on file? No => Yes
     Recompile? Yes => Yes
     Display Syntax Errors? Yes => Yes
  
     ^ indicates routines which will replace those now on file.
     @ indicates routines which have been [re]compiled.
     - indicates routines which have not been filed.
  
  
     BACKIRMT.INT^@  
  
     1 routine saved.
  
  b) After the BACKIRMT.RSA file has been restored zload the BACKIRMT
     routine and zsave it as BACKIRM.
  
  c) Complete the installation of the patch in the Test System by following
     steps 10 through 13.  For step 10 when switching namespaces, replace
     VAH with TST.
  
     %SYS>ZL BACKIRMT ZS BACKIRM
  
 Manually Generating a Report:
  
 1) %Integrit:
  
    Since the new utility is a % routine, it can be run from any namespace
    or dataset.  To generate a report, log into programmer mode and from
    the programmer's prompt i.e. %SYS>, D ^%Integrit.
  
     a) At the device prompt, you can direct output to a terminal
        window, a printer defined to Cache, or a host file (recommended
        choice) i.e. INTEG_dataset name_date.DAT.
  
     b) At the 'Stop after any error?' prompt, you have the ability
        to indicate either 'Yes';stop if an error is encounter or
        'No';display the error and continue checking the global.
  
        NOTE:  The %Integrit utility will automatically stop checking
               a global if more than 5 errors are encountered.  If
               5 errors are encountered, the utility will skip to the
               next global.
  
               In addition, if more than 10 errors are encountered per
               dataset, checking of that dataset will be aborted.
  
    Example:
  
    %SYS>D ^%Integrit
  
    Output Integrity Check Results to 
    Device:<cr>      Right margin: 80=>   
    Check all databases? Yes => n
    Directory: y:\rou
    Directory: 
    1 directory
    Stop after any error? yes => n
    All globals? no=> y
  
    %Integrity Check of All Globals in y:\rou\       (Sep 19, 2001 09:34AM)
  
  
    Global: %Z
  
    Bottom Pointer Level:         1 block          2kb (3% full)
    Data Level:                   8 blocks        16kb (82% full)
    ***Total                      9 blocks        18kb (73% full)
    elapsed time = .171 seconds  9:33 AM
  
   
 2) ZINTEGRIT:
  
    Since the ZINTEGRIT routine is a non-% routine, this utility will need
    to be run from the %SYS namespace.
  
    This example illustrates running the utility for the ROU dataset.
  
    %SYS>D ^ZINTEGRIT
  
    This utility is used to check the database integrity of the routine 
    directory and the pointer structure of one or more globals.
  
    **** THIS IS AN ABBREVIATED INTEGRITY CHECK OF POINTERS ONLY ****
    Output results on 
    Device:<cr>    Right margin: 80=>
  
  
    11/22/2001 23:28:14
  
  
    Do you want to check all databases?   No=>  (answer yes for all mounted
                                                 datasets)
  
    Directory: : y:\openm\mgr\ => [Y:\ROU]
    All globals?  No=> [Y]
  
  
    Check storage allocation maps and displays the number of free blocks:
  
       0:  11   1:  67   2: 399   3: 399   4: 399   5: 399   6: 399   7: 399
       8:  94   9:   0  10:   0  11:   0  12:   0  13:   0  14:   0  15:   0
      16:   0  17:   0  18:   0  19:   0  20:   0  21:   0  22:   0  23:   0
       .
       .
       .
    Concurrent backup bitmaps in y:\rou\ are ok.
  
    ------------------------------------------------------------------------
  
    Check data integrity:
  
    Global ^SPOOL
    1 Levels in this global
    Level: 1, # ptrs = 1
    Data level:  # blks = 1, eff = 0%                    11:28 PM
  
  
    Total global blocks in y:\rou\ = 899
    Total efficiency = 64%

Routine Information:
====================

=============================================================================
User Information:                               
Entered By  : BOGGESS,MIKE                   Date Entered : SEP 18, 2001
Completed By: NEVIUS,GORDON D              Date Completed: JAN 23, 2002
Released By : WANG,MARK                     Date Released : JAN 23, 2002
=============================================================================


Packman Mail Message:
=====================

No routines included
