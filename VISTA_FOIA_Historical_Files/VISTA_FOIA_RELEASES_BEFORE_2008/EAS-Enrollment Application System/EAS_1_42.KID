KIDS Distribution saved on Jul 13, 2004@11:22:09
ADD RX COPY UPLOAD ABILITY TO THE Z06 PROCESS FROM THE EDB
**KIDS**:EAS*1.0*42^IB*2.0*269^IVM*2.0*99^DG*5.3*612^

**INSTALL NAME**
EAS*1.0*42
"BLD",5432,0)
EAS*1.0*42^ENROLLMENT APPLICATION SYSTEM^0^3040713^y
"BLD",5432,1,0)
^^2^2^3040518^
"BLD",5432,1,1,0)
Add ability to process IVM close case/converted Pharmacy Exemption Income
"BLD",5432,1,2,0)
tests via Z06 transmissions from the EDB.
"BLD",5432,4,0)
^9.64PA^^
"BLD",5432,"ABPKG")
n
"BLD",5432,"KRN",0)
^9.67PA^8989.52^19
"BLD",5432,"KRN",.4,0)
.4
"BLD",5432,"KRN",.401,0)
.401
"BLD",5432,"KRN",.402,0)
.402
"BLD",5432,"KRN",.403,0)
.403
"BLD",5432,"KRN",.5,0)
.5
"BLD",5432,"KRN",.84,0)
.84
"BLD",5432,"KRN",3.6,0)
3.6
"BLD",5432,"KRN",3.8,0)
3.8
"BLD",5432,"KRN",9.2,0)
9.2
"BLD",5432,"KRN",9.8,0)
9.8
"BLD",5432,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",5432,"KRN",9.8,"NM",1,0)
EASPREC7^^0^B65284032
"BLD",5432,"KRN",9.8,"NM",2,0)
EASPTRN1^^0^B20417401
"BLD",5432,"KRN",9.8,"NM",3,0)
EASUM1^^0^B30769211
"BLD",5432,"KRN",9.8,"NM",4,0)
EASUM7^^0^B34406080
"BLD",5432,"KRN",9.8,"NM",5,0)
EASUM8^^0^B12545151
"BLD",5432,"KRN",9.8,"NM","B","EASPREC7",1)

"BLD",5432,"KRN",9.8,"NM","B","EASPTRN1",2)

"BLD",5432,"KRN",9.8,"NM","B","EASUM1",3)

"BLD",5432,"KRN",9.8,"NM","B","EASUM7",4)

"BLD",5432,"KRN",9.8,"NM","B","EASUM8",5)

"BLD",5432,"KRN",19,0)
19
"BLD",5432,"KRN",19.1,0)
19.1
"BLD",5432,"KRN",101,0)
101
"BLD",5432,"KRN",409.61,0)
409.61
"BLD",5432,"KRN",771,0)
771
"BLD",5432,"KRN",870,0)
870
"BLD",5432,"KRN",8989.51,0)
8989.51
"BLD",5432,"KRN",8989.52,0)
8989.52
"BLD",5432,"KRN",8994,0)
8994
"BLD",5432,"KRN","B",.4,.4)

"BLD",5432,"KRN","B",.401,.401)

"BLD",5432,"KRN","B",.402,.402)

"BLD",5432,"KRN","B",.403,.403)

"BLD",5432,"KRN","B",.5,.5)

"BLD",5432,"KRN","B",.84,.84)

"BLD",5432,"KRN","B",3.6,3.6)

"BLD",5432,"KRN","B",3.8,3.8)

"BLD",5432,"KRN","B",9.2,9.2)

"BLD",5432,"KRN","B",9.8,9.8)

"BLD",5432,"KRN","B",19,19)

"BLD",5432,"KRN","B",19.1,19.1)

"BLD",5432,"KRN","B",101,101)

"BLD",5432,"KRN","B",409.61,409.61)

"BLD",5432,"KRN","B",771,771)

"BLD",5432,"KRN","B",870,870)

"BLD",5432,"KRN","B",8989.51,8989.51)

"BLD",5432,"KRN","B",8989.52,8989.52)

"BLD",5432,"KRN","B",8994,8994)

"BLD",5432,"QUES",0)
^9.62^^
"BLD",5432,"REQB",0)
^9.611^3^3
"BLD",5432,"REQB",1,0)
EAS*1.0*35^1
"BLD",5432,"REQB",2,0)
EAS*1.0*47^1
"BLD",5432,"REQB",3,0)
EAS*1.0*52^1
"BLD",5432,"REQB","B","EAS*1.0*35",1)

"BLD",5432,"REQB","B","EAS*1.0*47",2)

"BLD",5432,"REQB","B","EAS*1.0*52",3)

"MBREQ")
0
"PKG",552,-1)
1^1
"PKG",552,0)
ENROLLMENT APPLICATION SYSTEM^EAS^ENROLLMENT
"PKG",552,20,0)
^9.402P^2^1
"PKG",552,20,2,0)
2^^EASXDR
"PKG",552,20,2,1)
 
"PKG",552,20,"B",2,2)

"PKG",552,22,0)
^9.49I^1^1
"PKG",552,22,1,0)
1.0^3010315^3010419^66481
"PKG",552,22,1,"PAH",1,0)
42^3040713
"PKG",552,22,1,"PAH",1,1,0)
^^2^2^3040713
"PKG",552,22,1,"PAH",1,1,1,0)
Add ability to process IVM close case/converted Pharmacy Exemption Income
"PKG",552,22,1,"PAH",1,1,2,0)
tests via Z06 transmissions from the EDB.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","EASPREC7")
0^1^B65284032
"RTN","EASPREC7",1,0)
EASPREC7 ;ALB/SEK,RTK,GN - ROUTINE TO PROCESS INCOMING (Z06 EVENT TYPE) HL7 MESSAGES ; 6/16/04 9:28am
"RTN","EASPREC7",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**23,30,35,52,42**;21-OCT-94
"RTN","EASPREC7",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","EASPREC7",4,0)
 ;
"RTN","EASPREC7",5,0)
 ;** Warning **  currently only one ZMT seg per Z06 can be processed.
"RTN","EASPREC7",6,0)
 ;
"RTN","EASPREC7",7,0)
 ;EAS*1*52 call PARSEZMT within tag ZMT to define all ZMT variables
"RTN","EASPREC7",8,0)
 ;EAS*1*42 add RX Copay Testing Upload and Delete to this routine.
"RTN","EASPREC7",9,0)
 ;         - added DGMTYPT and passed down thru all calls that need.
"RTN","EASPREC7",10,0)
 ;         o DGMTYPT = 1 (Means Test, MT)
"RTN","EASPREC7",11,0)
 ;         o DGMTYPT = 2 (RX Copay Test, CT)
"RTN","EASPREC7",12,0)
 ;
"RTN","EASPREC7",13,0)
 ; This routine will process (validate) batch ORU Means Test(event type
"RTN","EASPREC7",14,0)
 ; Z06) HL7 messages received from the IVM center.  Format of batch:
"RTN","EASPREC7",15,0)
 ;       BHS
"RTN","EASPREC7",16,0)
 ;       {MSH
"RTN","EASPREC7",17,0)
 ;        PID
"RTN","EASPREC7",18,0)
 ;        ZIC
"RTN","EASPREC7",19,0)
 ;        ZIR
"RTN","EASPREC7",20,0)
 ;        {ZDP
"RTN","EASPREC7",21,0)
 ;         ZIC
"RTN","EASPREC7",22,0)
 ;         ZIR
"RTN","EASPREC7",23,0)
 ;        }
"RTN","EASPREC7",24,0)
 ;        ZMT
"RTN","EASPREC7",25,0)
 ;        ZIV
"RTN","EASPREC7",26,0)
 ;       }
"RTN","EASPREC7",27,0)
 ;       BTS
"RTN","EASPREC7",28,0)
 ;
"RTN","EASPREC7",29,0)
EN ; entry point to validate Means Test messages 
"RTN","EASPREC7",30,0)
 ;
"RTN","EASPREC7",31,0)
 N DEPFLG,EDB,CANCFLG,CASEFLG,SEGSTR,SEGMENTS,MISSING,ERRFLG,Z06COM
"RTN","EASPREC7",32,0)
 N IVM2,IVM3,IVM7,IVM8,IVM10,IVM12,IVM17,IVM18,IVM20,IVM25,IVM26,IVMIY
"RTN","EASPREC7",33,0)
 N IVMDA,IVMPAT,IVMMTSTS,MTFND,UPMTS,MTDATE,TYPE,EASMTDT,EASZ06,EXPIRED
"RTN","EASPREC7",34,0)
 N IVM5,EASZ06D,DGMTYPT
"RTN","EASPREC7",35,0)
 S SEGSTR="00000000000"      ;One byte for each segment in message
"RTN","EASPREC7",36,0)
 S SEGMENTS="BHS,MSH,PID,ZIC,ZIR,ZDP,ZIC,ZIR,ZMT,ZIV,BTS"
"RTN","EASPREC7",37,0)
 S EDB="EDB-EAS"
"RTN","EASPREC7",38,0)
 S Z06COM="Z06 MT via Edb"
"RTN","EASPREC7",39,0)
 S (CASEFLG,DEPFLG,ERRFLG,HLERR,IVMDA,IVMFLGC,MTFND,UPMTS)=0
"RTN","EASPREC7",40,0)
EN1 F  S IVMDA=$O(^TMP($J,IVMRTN,IVMDA)) Q:'IVMDA  D  I $D(HLERR) D ACK^IVMPREC S ERRFLG=1 Q 
"RTN","EASPREC7",41,0)
 .K HLERR
"RTN","EASPREC7",42,0)
 .D GET
"RTN","EASPREC7",43,0)
 .D @IVMSEG1                            ;process each segment type
"RTN","EASPREC7",44,0)
 Q:ERRFLG                               ;Error detected do not continue
"RTN","EASPREC7",45,0)
 S MISSING=$F(SEGSTR,0)                 ;Ensure all required segments
"RTN","EASPREC7",46,0)
 I MISSING D  I $D(HLERR) D ACK^IVMPREC,CLEANUP Q
"RTN","EASPREC7",47,0)
 . S TYPE=$S(MISSING=3!(MISSING=4):"Veteran's",MISSING>4&(MISSING<8):"Spouse's",1:"")
"RTN","EASPREC7",48,0)
 . S HLERR="Missing "_TYPE_" "_$P(SEGMENTS,",",(MISSING-1))_" Segment"
"RTN","EASPREC7",49,0)
 D PROCESS
"RTN","EASPREC7",50,0)
 I $D(HLERR) D ACK^IVMPREC
"RTN","EASPREC7",51,0)
 ;
"RTN","EASPREC7",52,0)
 ; cleanup
"RTN","EASPREC7",53,0)
CLEANUP K DGLY,DGMTP,IVMDAP,IVMDAS,IVMDAZ,IVMDGLY,CANCFLG,IVMFLGC,IVMMT31
"RTN","EASPREC7",54,0)
 K IVMMTDT,IVMMTIEN,IVMSEG,IVMSEG1,IVMSTAT,IVMTEXT,XMSUB,HLERR,CLOSFLG
"RTN","EASPREC7",55,0)
 K IVMZ10,IVMDAV,ZIVSEG,ZMTSEG
"RTN","EASPREC7",56,0)
 Q
"RTN","EASPREC7",57,0)
 ;
"RTN","EASPREC7",58,0)
 ;Dependent upon type of Z06 sent perform the following;
"RTN","EASPREC7",59,0)
 ;IVM Case Status:
"RTN","EASPREC7",60,0)
 ;  Value of 1 = Create/Update Z06 MT/CT, Close Case & Mark REASON CODE
"RTN","EASPREC7",61,0)
 ;               as 'Converted'
"RTN","EASPREC7",62,0)
 ;  Value of 0 = Cancel Z06 MT/CT and Mark REASON CODE as 'Not Convert'
"RTN","EASPREC7",63,0)
 ;
"RTN","EASPREC7",64,0)
 ; If Z06 MT/CT and IVM Case Status is 1 and Z06 MT/CT doesn't exist then
"RTN","EASPREC7",65,0)
 ;   Create new Z06 MT/CT (new Z06 MT/CT becomes primary and existing
"RTN","EASPREC7",66,0)
 ;     MT/CT becomes non-primary)
"RTN","EASPREC7",67,0)
 ;   Assign REASON CODE of 'Converted' in #301.5
"RTN","EASPREC7",68,0)
 ; If Z06 MT/CT already exists then
"RTN","EASPREC7",69,0)
 ;   If IVM Case Status is 0 Then
"RTN","EASPREC7",70,0)
 ;     Delete Z06 MT/CT for income year and return old MT/CT to primary
"RTN","EASPREC7",71,0)
 ;    Change REASON CODE from 'Converted' to 'Not Converted' in #301.5
"RTN","EASPREC7",72,0)
 ;   If IVM Case Status is 1 Then
"RTN","EASPREC7",73,0)
 ;     Update MT/CT Z06 and Close/Convert Case
"RTN","EASPREC7",74,0)
 ; Else  (Z06 MT/CT, IVM Case Status=0 and Z06 MT/CT does not exist)
"RTN","EASPREC7",75,0)
 ;   Send back 'AE' to Edb indicating MT/CT Z06 not available for 
"RTN","EASPREC7",76,0)
 ;   cancellation
"RTN","EASPREC7",77,0)
 ;
"RTN","EASPREC7",78,0)
PROCESS N DIC,%,%H,%I,IVMDATE
"RTN","EASPREC7",79,0)
 D NOW^%DTC
"RTN","EASPREC7",80,0)
 S IVMDATE=%
"RTN","EASPREC7",81,0)
 I '$D(ZMTSEG) S HLERR="ZMT Segment is Missing" Q
"RTN","EASPREC7",82,0)
 S EASZ06=1,EXPIRED=0
"RTN","EASPREC7",83,0)
 S:DGMTYPT=2 IVMCEB=$P($$RXST^IBARXEU(DFN),"^",2)    ;prev RX sts
"RTN","EASPREC7",84,0)
 I $G(IVMMTIEN)="" D
"RTN","EASPREC7",85,0)
 . S CURMT=$$LST^DGMTU(DFN,,DGMTYPT)    ;Retrieve current test on file
"RTN","EASPREC7",86,0)
 . S IVMMTIEN=$P(CURMT,"^",1)           ;for appropriate income year
"RTN","EASPREC7",87,0)
 . S IVMMTDT=$P(CURMT,"^",2)
"RTN","EASPREC7",88,0)
 . S IVMMTSTS=$P(CURMT,"^",3)
"RTN","EASPREC7",89,0)
 I $G(IVMMTIEN)]"" D                   ;dgmtp is event driver variable
"RTN","EASPREC7",90,0)
 . S (IVMMT31,DGMTP)=$G(^DGMT(408.31,IVMMTIEN,0))
"RTN","EASPREC7",91,0)
 ;
"RTN","EASPREC7",92,0)
 ; Main loop to process the IVM income test just received.
"RTN","EASPREC7",93,0)
 ;
"RTN","EASPREC7",94,0)
 ; No previous 408.31 test on file
"RTN","EASPREC7",95,0)
 I 'MTFND D  Q
"RTN","EASPREC7",96,0)
 . I CASEFLG D                                ;Case=1 Close/Converted
"RTN","EASPREC7",97,0)
 . . ;change old MT/CT to non-primary
"RTN","EASPREC7",98,0)
 . . I $G(IVMMTIEN)>0 D
"RTN","EASPREC7",99,0)
 . . . S DA=IVMMTIEN,DIE="^DGMT(408.31,",DR="2////0;"
"RTN","EASPREC7",100,0)
 . . . D ^DIE K DA,DIE,DR
"RTN","EASPREC7",101,0)
 . . ;
"RTN","EASPREC7",102,0)
 . . S IVMMTDT=EASMTDT
"RTN","EASPREC7",103,0)
 . . D ^EASUM1                                ;Create New Z06 MT/CT
"RTN","EASPREC7",104,0)
 . . I $G(IVMMTDT)="" S IVMMTDT=EASMTDT
"RTN","EASPREC7",105,0)
 . . I $$EXPIRED^EASPTRN1(DFN,$G(IVMMTDT)) D
"RTN","EASPREC7",106,0)
 . . . S EXPIRED=1,IVMZ10="UPLOAD IN PROGRESS"
"RTN","EASPREC7",107,0)
 . . D CLOSE^EASPTRN1(IVMIY,DFN,1,6)          ;Close Case/Converted
"RTN","EASPREC7",108,0)
 . ;
"RTN","EASPREC7",109,0)
 . I 'CASEFLG D  Q
"RTN","EASPREC7",110,0)
 . . S:DGMTYPT=1 HLERR="Existing Z06 MT not found"
"RTN","EASPREC7",111,0)
 . . S:DGMTYPT=2 HLERR="Existing Z06 CT not found"
"RTN","EASPREC7",112,0)
 ;
"RTN","EASPREC7",113,0)
 ; Previous 408.31 test on file
"RTN","EASPREC7",114,0)
 I MTFND D
"RTN","EASPREC7",115,0)
 . I 'CASEFLG D                             ;Case=0 Close/Not Convert
"RTN","EASPREC7",116,0)
 . . ; Check to see if MT/CT Z06 exists prior to trying to delete
"RTN","EASPREC7",117,0)
 . . ; If NOT defined then send an AE back to Edb
"RTN","EASPREC7",118,0)
 . . I 'UPMTS D  Q                          ;Existing Z06 not found
"RTN","EASPREC7",119,0)
 . . . S:DGMTYPT=1 HLERR="Existing Z06 MT not found"
"RTN","EASPREC7",120,0)
 . . . S:DGMTYPT=2 HLERR="Existing Z06 CT not found"
"RTN","EASPREC7",121,0)
 . . I UPMTS D  Q
"RTN","EASPREC7",122,0)
 . . . N CURMT,IVMMTI,IVMDFN,DGCAT
"RTN","EASPREC7",123,0)
 . . . S IVMDFN=DFN                         ;Save off DFN
"RTN","EASPREC7",124,0)
 . . . I $$EXPIRED^EASPTRN1(DFN,$G(IVMMTDT)) D
"RTN","EASPREC7",125,0)
 . . . . S EXPIRED=1,IVMZ10="UPLOAD IN PROGRESS"
"RTN","EASPREC7",126,0)
 . . . S DGCAT=$P($G(^DG(408.32,IVM3,0)),"^",1),IVM5=""
"RTN","EASPREC7",127,0)
 . . . S EASZ06D=1                          ;Set del flag for IB event
"RTN","EASPREC7",128,0)
 . . . D ^EASUM7                            ;Delete Z06 MT/CT
"RTN","EASPREC7",129,0)
 . . . S DFN=IVMDFN
"RTN","EASPREC7",130,0)
 . . . I $G(IVMMTDT)="" S IVMMTDT=EASMTDT
"RTN","EASPREC7",131,0)
 . . . D CLOSE^EASPTRN1(IVMIY,DFN,1,7)      ;Close Case/Not Converted
"RTN","EASPREC7",132,0)
 . ;
"RTN","EASPREC7",133,0)
 . I CASEFLG D                              ;Case=1 Close/Converted
"RTN","EASPREC7",134,0)
 . . Q:$G(IVMMTIEN)<1
"RTN","EASPREC7",135,0)
 . . S DA=IVMMTIEN,DIE="^DGMT(408.31,"
"RTN","EASPREC7",136,0)
 . . S DR=".03////^S X=IVM3;.12////^S X=IVM8;.07////^S X=IVM10;"
"RTN","EASPREC7",137,0)
 . . S DR=DR_".09////^S X=IVM25;.11////^S X=IVM7;.18////^S X=IVM12;"
"RTN","EASPREC7",138,0)
 . . S DR=DR_".23////^S X=IVM18;.25////^S X=IVM20;"
"RTN","EASPREC7",139,0)
 . . S DR=DR_"2.02////^S X=IVMDATE;2.03////^S X=IVM26"
"RTN","EASPREC7",140,0)
 . . D ^DIE K DA,DIE,DR                     ;Update existing Z06
"RTN","EASPREC7",141,0)
 . . I $G(IVMMTDT)="" S IVMMTDT=EASMTDT
"RTN","EASPREC7",142,0)
 . . I $$EXPIRED^EASPTRN1(DFN,$G(IVMMTDT)) D
"RTN","EASPREC7",143,0)
 . . . S EXPIRED=1,IVMZ10="UPLOAD IN PROGRESS"
"RTN","EASPREC7",144,0)
 . . D CLOSE^EASPTRN1(IVMIY,DFN,1,6)        ;Close Case/Converted
"RTN","EASPREC7",145,0)
 . . S DGCAT=$P($G(^DG(408.32,IVM3,0)),"^",1),IVM5=""
"RTN","EASPREC7",146,0)
 . . D MTBULL^EASUM7,MAIL^IVMUFNC()         ;Send Bulletin
"RTN","EASPREC7",147,0)
 Q
"RTN","EASPREC7",148,0)
 ;
"RTN","EASPREC7",149,0)
MSH S (HLMID,MSGID)=$P(IVMSEG,HLFS,10)         ;Message control id from MSH
"RTN","EASPREC7",150,0)
 Q
"RTN","EASPREC7",151,0)
PID S DFN=$P($P(IVMSEG,HLFS,4),$E(HLECH))
"RTN","EASPREC7",152,0)
 I ('DFN!(DFN'=+DFN)!('$D(^DPT(+DFN,0)))) D  Q
"RTN","EASPREC7",153,0)
 . S HLERR="Invalid DFN"
"RTN","EASPREC7",154,0)
 I $P(IVMSEG,HLFS,20)'=$P(^DPT(DFN,0),"^",9) D  Q
"RTN","EASPREC7",155,0)
 . S HLERR="Couldn't match IVM SSN with DHCP SSN"
"RTN","EASPREC7",156,0)
 S IVMDAP=IVMDA                  ;Save IVMDA for veteran PID segment
"RTN","EASPREC7",157,0)
 Q
"RTN","EASPREC7",158,0)
ZIC I 'DEPFLG S IVMDGLY=$P(IVMSEG,"^",3)           ;Income year
"RTN","EASPREC7",159,0)
 Q
"RTN","EASPREC7",160,0)
ZIR Q
"RTN","EASPREC7",161,0)
ZDP S DEPFLG=1
"RTN","EASPREC7",162,0)
 Q
"RTN","EASPREC7",163,0)
 ;Get primary means test
"RTN","EASPREC7",164,0)
 ; IVMMTDT - means test date
"RTN","EASPREC7",165,0)
 ; DGLY - income year
"RTN","EASPREC7",166,0)
 ; If Means Test not in DHCP, don't upload IVM Means Test 
"RTN","EASPREC7",167,0)
 ;
"RTN","EASPREC7",168,0)
ZMT N IVMIEN,MTCODE                                             ;EAS*1*42
"RTN","EASPREC7",169,0)
 S IVMDAZ=IVMDA,ZMTSEG=IVMSEG            ;ZMT segment ivmda
"RTN","EASPREC7",170,0)
 D PARSEZMT(ZMTSEG)                      ;Retrieve ZMT Values
"RTN","EASPREC7",171,0)
 ;Means test date from ZMT segment
"RTN","EASPREC7",172,0)
 S (EASMTDT,IVMMTDT)=$$FMDATE^HLFNC($P(IVMSEG,HLFS,3))
"RTN","EASPREC7",173,0)
 S DGMTYPT=$G(IVM17)                     ;int type of test
"RTN","EASPREC7",174,0)
 S:DGMTYPT="" DGMTYPT=1                  ;insure type defined
"RTN","EASPREC7",175,0)
 S DGLY=$$LYR^DGMTSCU1(IVMMTDT)          ;Get means test to be updated
"RTN","EASPREC7",176,0)
 S MTDATE=-IVMMTDT
"RTN","EASPREC7",177,0)
 S IVMIEN=""
"RTN","EASPREC7",178,0)
 S MTFND=0
"RTN","EASPREC7",179,0)
 F  S IVMIEN=$O(^DGMT(408.31,"AID",DGMTYPT,DFN,MTDATE,IVMIEN)) Q:MTFND!(IVMIEN="")  D
"RTN","EASPREC7",180,0)
 . S IVMMTIEN=IVMIEN
"RTN","EASPREC7",181,0)
 . ; match to MT Z06 from Edb
"RTN","EASPREC7",182,0)
 . S MTCODE=$P($G(^DGMT(408.31,IVMIEN,0)),"^",3)
"RTN","EASPREC7",183,0)
 . I (MTCODE=6)!(MTCODE=16)!(MTCODE=8) D    ;Previous Converted MT/CT?
"RTN","EASPREC7",184,0)
 . . S UPMTS=IVMIEN
"RTN","EASPREC7",185,0)
 . . S MTFND=1
"RTN","EASPREC7",186,0)
 Q
"RTN","EASPREC7",187,0)
ZIV S IVMDAV=IVMDA,ZIVSEG=IVMSEG
"RTN","EASPREC7",188,0)
 S IVMIY=$P(IVMSEG,HLFS,3)
"RTN","EASPREC7",189,0)
 S IVMIY=$$FMDATE^HLFNC(IVMIY)
"RTN","EASPREC7",190,0)
 I $E(IVMIY,4,7)'="0000"!($E(IVMIY,1,3)<292) D  Q
"RTN","EASPREC7",191,0)
 . S HLERR="Invalid Income Year"
"RTN","EASPREC7",192,0)
 I "01"'[$P(IVMSEG,HLFS,9) D  Q
"RTN","EASPREC7",193,0)
 . S HLERR="Case Status not 0 or 1"
"RTN","EASPREC7",194,0)
 I $P(IVMSEG,HLFS,9)=1 S CASEFLG=1         ;Close/Convert Case Flag
"RTN","EASPREC7",195,0)
 I $P(IVMSEG,HLFS,9)=0 S CASEFLG=0         ;Delete/Not Converted MT Flag
"RTN","EASPREC7",196,0)
BHS Q
"RTN","EASPREC7",197,0)
BTS Q
"RTN","EASPREC7",198,0)
 ;
"RTN","EASPREC7",199,0)
GET ; get HL7 segment from ^TMP
"RTN","EASPREC7",200,0)
 ;S IVMDA=$O(^TMP($J,IVMRTN,+IVMDA))
"RTN","EASPREC7",201,0)
 S IVMSEG=$G(^TMP($J,IVMRTN,+IVMDA,0))
"RTN","EASPREC7",202,0)
 S IVMSEG1=$E(IVMSEG,1,3)
"RTN","EASPREC7",203,0)
 S $E(SEGSTR,IVMDA)=1
"RTN","EASPREC7",204,0)
 Q
"RTN","EASPREC7",205,0)
 ;
"RTN","EASPREC7",206,0)
 ;Parse ZMT Segment for MT Data
"RTN","EASPREC7",207,0)
 ;
"RTN","EASPREC7",208,0)
PARSEZMT(ZSEG) S IVM2=$$FMDATE^HLFNC($P(ZSEG,"^",3))  ;Means Test Date
"RTN","EASPREC7",209,0)
 S IVM3=$O(^DG(408.32,"C",$P(ZSEG,"^",4),""))   ;Means Test Status 
"RTN","EASPREC7",210,0)
 S IVM7=$S($P(ZSEG,"^",8)="Y":1,1:0)            ;Agrees To Deductible
"RTN","EASPREC7",211,0)
 S IVM8=$P(ZSEG,"^",9)                          ;Threshold A
"RTN","EASPREC7",212,0)
 S IVM10=$$FMDATE^HLFNC($P(ZSEG,"^",11))        ;Date/Time Completed
"RTN","EASPREC7",213,0)
 S IVM12=$P(ZSEG,"^",13)                        ;Number of Dependents
"RTN","EASPREC7",214,0)
 S IVM17=$P(ZSEG,"^",18)                        ;Type of Test
"RTN","EASPREC7",215,0)
 S IVM18=$P(ZSEG,"^",19)                        ;Source of Test
"RTN","EASPREC7",216,0)
 S IVM20=$$FMDATE^HLFNC($P(ZSEG,"^",21))        ;IVM Verified MT
"RTN","EASPREC7",217,0)
 S IVM25=$$FMDATE^HLFNC($P(ZSEG,"^",26))        ;D/T Last Changed
"RTN","EASPREC7",218,0)
 S IVM26=$O(^DG(408.32,"C",$P(ZSEG,"^",27),"")) ;Test Determined Status
"RTN","EASPREC7",219,0)
 Q
"RTN","EASPTRN1")
0^2^B20417401
"RTN","EASPTRN1",1,0)
EASPTRN1 ;ALB/EJG,GN - GENERATE EAS SUBPROCESSES ; 3/5/04 11:00am
"RTN","EASPTRN1",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**30,33,47,42**; 21-OCT-94
"RTN","EASPTRN1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","EASPTRN1",4,0)
 ;
"RTN","EASPTRN1",5,0)
 ; Cloned from IVMPTRN1
"RTN","EASPTRN1",6,0)
 ;
"RTN","EASPTRN1",7,0)
 ;EAS*1*47 - break up Z09's by Income year, via new "ATR" xref
"RTN","EASPTRN1",8,0)
 ;EAS*1*42 - add RXCP testing to Expired tag
"RTN","EASPTRN1",9,0)
 ;
"RTN","EASPTRN1",10,0)
 ;
"RTN","EASPTRN1",11,0)
DELMT ; send delete mt transaction if pt no longer meets IVM criteria
"RTN","EASPTRN1",12,0)
 ;
"RTN","EASPTRN1",13,0)
 ; Input - DFN
"RTN","EASPTRN1",14,0)
 ;         IVMMTDT - date of means test
"RTN","EASPTRN1",15,0)
 ;
"RTN","EASPTRN1",16,0)
 N I,IVMIY,X
"RTN","EASPTRN1",17,0)
 S IVMIY=$$LYR^DGMTSCU1(IVMMTDT)
"RTN","EASPTRN1",18,0)
 F I=1:1:5,8:1:14 S $P(X,HLFS,I)=HLQ
"RTN","EASPTRN1",19,0)
 S ^TMP("HLS",$J,HLSDT,IVMCT)="ZMT"_HLFS_X
"RTN","EASPTRN1",20,0)
 D CLOSE(IVMIY,DFN,2,3) ; set flag to stop future transmissions
"RTN","EASPTRN1",21,0)
 Q
"RTN","EASPTRN1",22,0)
 ;
"RTN","EASPTRN1",23,0)
 ;
"RTN","EASPTRN1",24,0)
CLOSE(IVMIY,DFN,IVMCS,IVMCR) ; Close IVM case record for a patient
"RTN","EASPTRN1",25,0)
 ; Input:    DFN  --  Pointer to the patient in file #2
"RTN","EASPTRN1",26,0)
 ;         IVMIY  --  Income year of the closed case
"RTN","EASPTRN1",27,0)
 ;         IVMCS  --  Closure source [1=IVM | 2=DHCP]
"RTN","EASPTRN1",28,0)
 ;         IVMCR  --  Pointer to the closure reason in file #301.93
"RTN","EASPTRN1",29,0)
 ;
"RTN","EASPTRN1",30,0)
 N DA,DIE,DR,X,Y,EVENTS,STATUS,EAEVENT
"RTN","EASPTRN1",31,0)
 I '$G(IVMIY)!'$G(DFN)!'$G(IVMCS)!'$G(IVMCR) G CLOSEQ
"RTN","EASPTRN1",32,0)
 S IVMDELMT=1 ; flag indicates deletion
"RTN","EASPTRN1",33,0)
 S DA=$O(^IVM(301.5,"APT",+DFN,+IVMIY,0))
"RTN","EASPTRN1",34,0)
 I $G(^IVM(301.5,+DA,0))']"" G CLOSEQ
"RTN","EASPTRN1",35,0)
 ;
"RTN","EASPTRN1",36,0)
 ;don't want closing a case to stop transmission of an enrollment event
"RTN","EASPTRN1",37,0)
 S STATUS=1
"RTN","EASPTRN1",38,0)
 I ($$STATUS^IVMPLOG(+DA,.EVENTS)=0),EVENTS("ENROLL")=1 S STATUS=0
"RTN","EASPTRN1",39,0)
 ;
"RTN","EASPTRN1",40,0)
 ;If previous years event make sure enrollment event does not get 
"RTN","EASPTRN1",41,0)
 ;  updated
"RTN","EASPTRN1",42,0)
 ;
"RTN","EASPTRN1",43,0)
 S EAEVENT=1
"RTN","EASPTRN1",44,0)
 I $G(EXPIRED)=1 S EAEVENT=2,STATUS=1
"RTN","EASPTRN1",45,0)
 I $G(EXPIRED)=0 S EAEVENT=1,STATUS=0
"RTN","EASPTRN1",46,0)
 D NOW^%DTC S DR=".03////"_STATUS_";.04////1;1.01////"_IVMCR_";1.02////"_IVMCS_";1.03////"_%_";30.01////2;30.02////2;30.03////"_$G(EAEVENT)
"RTN","EASPTRN1",47,0)
 S DIE="^IVM(301.5," D ^DIE
"RTN","EASPTRN1",48,0)
CLOSEQ Q
"RTN","EASPTRN1",49,0)
 ;
"RTN","EASPTRN1",50,0)
 ;
"RTN","EASPTRN1",51,0)
PSEUDO ; strip P from pseudo SSNs before transmitting to IVM
"RTN","EASPTRN1",52,0)
 ;
"RTN","EASPTRN1",53,0)
 N X
"RTN","EASPTRN1",54,0)
 S X=IVMPID_$G(IVMPID(1))
"RTN","EASPTRN1",55,0)
 S $P(X,HLFS,20)=$E($P(X,HLFS,20),1,9) ; remove P
"RTN","EASPTRN1",56,0)
 K IVMPID S IVMPID=$E(X,1,245)
"RTN","EASPTRN1",57,0)
 I $L(X)>245 S IVMPID(1)=$E(X,246,999)
"RTN","EASPTRN1",58,0)
 Q
"RTN","EASPTRN1",59,0)
 ;
"RTN","EASPTRN1",60,0)
 ;Check if EDB Z06 in Annual Means Test file #408.31
"RTN","EASPTRN1",61,0)
 ; 'Z06 MT via Edb' will be stored in Comments if EDB Z06 Means Test
"RTN","EASPTRN1",62,0)
 ;
"RTN","EASPTRN1",63,0)
Z06MT(IVMMTIEN,Z06COM) N FLAG,LINE,COMMENT
"RTN","EASPTRN1",64,0)
 I '$G(IVMMTIEN) Q 0
"RTN","EASPTRN1",65,0)
 I $G(Z06COM)="" S Z06COM="Z06 MT via Edb"
"RTN","EASPTRN1",66,0)
 S (FLAG,LINE)=0
"RTN","EASPTRN1",67,0)
 F  S LINE=$O(^DGMT(408.31,IVMMTIEN,"C",LINE)) Q:'LINE!(FLAG)  D
"RTN","EASPTRN1",68,0)
 . S COMMENT=$G(^DGMT(408.31,IVMMTIEN,"C",LINE,0))
"RTN","EASPTRN1",69,0)
 . I COMMENT=Z06COM S FLAG=1 Q
"RTN","EASPTRN1",70,0)
 Q FLAG
"RTN","EASPTRN1",71,0)
 ;
"RTN","EASPTRN1",72,0)
 ;Retrieve Means Test information from incoming HL7 message.  
"RTN","EASPTRN1",73,0)
 ;
"RTN","EASPTRN1",74,0)
CHECKMT(DFN) N SOURCE,IVMLAST,IVMMTDT,IVMMTIEN
"RTN","EASPTRN1",75,0)
 I IVMTYPE'=1 Q    ;Only want MT = 1
"RTN","EASPTRN1",76,0)
 S SOURCE=$P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,22)
"RTN","EASPTRN1",77,0)
 S IVMMTDT=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,2))
"RTN","EASPTRN1",78,0)
 S IVMLAST=$$LST^DGMTU(DFN,$E(IVMMTDT,1,3)_1231,1)
"RTN","EASPTRN1",79,0)
 S IVMMTIEN=+IVMLAST
"RTN","EASPTRN1",80,0)
 Q $$Z06MT(IVMMTIEN)
"RTN","EASPTRN1",81,0)
 ;
"RTN","EASPTRN1",82,0)
 ;Based upon DFN and MT Date find primary MT
"RTN","EASPTRN1",83,0)
 ;
"RTN","EASPTRN1",84,0)
VERZ06(DFN) N CMT,CMTDATE,MTIEN,PRIM
"RTN","EASPTRN1",85,0)
 S CMT=$$LST^DGMTU(DFN)
"RTN","EASPTRN1",86,0)
 S MTIEN=+CMT,CMTDATE=$P(CMT,"^",2)
"RTN","EASPTRN1",87,0)
 I 'MTIEN Q 0                             ;No Means Test found
"RTN","EASPTRN1",88,0)
 S PRIM=$G(^DGMT(408.31,MTIEN,"PRIM"))
"RTN","EASPTRN1",89,0)
 I PRIM,$$Z06MT(MTIEN) Q 1
"RTN","EASPTRN1",90,0)
 Q 0
"RTN","EASPTRN1",91,0)
 ;
"RTN","EASPTRN1",92,0)
 ;Check for expired MT or CT                                 ;EAS*1*42
"RTN","EASPTRN1",93,0)
 ;
"RTN","EASPTRN1",94,0)
EXPIRED(DFN,DGMTDT) N CMT,PMT,CCT,PCT
"RTN","EASPTRN1",95,0)
 S (CMT,PMT,CCT,PCT)=""
"RTN","EASPTRN1",96,0)
 S:DGMTYPT=2 PCT=$$LST^DGMTU(DFN,DGMTDT,2)     ;Retrieve previous CT
"RTN","EASPTRN1",97,0)
 S PMT=$$LST^DGMTU(DFN,DGMTDT,1)               ;Retrieve previous MT
"RTN","EASPTRN1",98,0)
 I PCT="",PMT="" Q 0
"RTN","EASPTRN1",99,0)
 S:DGMTYPT=2 CCT=$$LST^DGMTU(DFN,DT,2)         ;Retrieve current CT
"RTN","EASPTRN1",100,0)
 S CMT=$$LST^DGMTU(DFN,DT,1)                   ;Retrieve current MT
"RTN","EASPTRN1",101,0)
 ;check for any expired test
"RTN","EASPTRN1",102,0)
 I DGMTYPT=2,$P(PCT,"^",2)<$P(CCT,"^",2) Q 1   ;Prev Yr CT is Expired
"RTN","EASPTRN1",103,0)
 I $P(PMT,"^",2)<$P(CMT,"^",2) Q 1             ;Prev Yr MT is Expired
"RTN","EASPTRN1",104,0)
 Q 0
"RTN","EASPTRN1",105,0)
 ;
"RTN","EASPTRN1",106,0)
 ;Determine if Z09 should be sent to EDB or HEC legacy       ;EAS*1*47
"RTN","EASPTRN1",107,0)
 ; Input:  DFN
"RTN","EASPTRN1",108,0)
 ; Output: Where to Send Z09
"RTN","EASPTRN1",109,0)
 ;          0 - HEC Legacy
"RTN","EASPTRN1",110,0)
 ;          1 - EDB
"RTN","EASPTRN1",111,0)
 ;
"RTN","EASPTRN1",112,0)
WHERETO(ICYR,DFN) N COM,DATE,FOUND,FRMDATE,IEN,MIEN,ONODE,MTD,TYPE,Z06COM
"RTN","EASPTRN1",113,0)
 S FOUND=0
"RTN","EASPTRN1",114,0)
 S Z06COM="Z06 MT via Edb"
"RTN","EASPTRN1",115,0)
 S IEN=$O(^IVM(301.61,"ATR",ICYR,DFN,0)) I IEN="" Q FOUND
"RTN","EASPTRN1",116,0)
 S FRMDATE=$P($G(^IVM(301.61,IEN,0)),"^",5) I FRMDATE="" Q FOUND
"RTN","EASPTRN1",117,0)
 S TYPE=""
"RTN","EASPTRN1",118,0)
 F  S TYPE=$O(^DGMT(408.31,"AID",TYPE)) Q:TYPE=""!(FOUND)  D
"RTN","EASPTRN1",119,0)
 .S MTD=""
"RTN","EASPTRN1",120,0)
 .F  S MTD=$O(^DGMT(408.31,"AID",TYPE,DFN,MTD)) Q:MTD=""!(FOUND)  D
"RTN","EASPTRN1",121,0)
 ..S MIEN=""
"RTN","EASPTRN1",122,0)
 ..F  S MIEN=$O(^DGMT(408.31,"AID",TYPE,DFN,MTD,MIEN)) Q:MIEN=""!(FOUND)  D
"RTN","EASPTRN1",123,0)
 ...S ONODE=$G(^DGMT(408.31,MIEN,0))
"RTN","EASPTRN1",124,0)
 ...S DATE=$P(ONODE,"^",25)                     ;Use IVM Verified Date
"RTN","EASPTRN1",125,0)
 ...I DATE="" S DATE=$P(ONODE,"^",7)            ;Use Completed Date
"RTN","EASPTRN1",126,0)
 ...S COM=$G(^DGMT(408.31,MIEN,"C",1,0))        ;Comment
"RTN","EASPTRN1",127,0)
 ...I DATE'="",COM[Z06COM,FRMDATE>(DATE-1),$G(^DGMT(408.31,MIEN,"PRIM")) S FOUND=1
"RTN","EASPTRN1",128,0)
 Q FOUND
"RTN","EASUM1")
0^3^B30769211
"RTN","EASUM1",1,0)
EASUM1 ;ALB/SEK,GN - IVM MEANS/COPAY TEST UPLOAD DRIVER ; 7/6/04 1:23pm
"RTN","EASUM1",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**23,30,35,42**;21-OCT-94
"RTN","EASUM1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","EASUM1",4,0)
 ;
"RTN","EASUM1",5,0)
 ;EAS*1*42 add RX Copay to Z06 Upload/Delete
"RTN","EASUM1",6,0)
 ;
"RTN","EASUM1",7,0)
EN ; this routine will call routines to upload means tests sent by the IVM
"RTN","EASUM1",8,0)
 ; Center in HL7 segments.  the required sequence of these segments were
"RTN","EASUM1",9,0)
 ; validated in the calling routine IVMPREC7.  this routine will call
"RTN","EASUM1",10,0)
 ; IVMUCHK to ensure that the data is consistent with DHCP means test
"RTN","EASUM1",11,0)
 ; file and software requirements.
"RTN","EASUM1",12,0)
 ;
"RTN","EASUM1",13,0)
 ; entries will be added/modified in the following means test and
"RTN","EASUM1",14,0)
 ; patient files:
"RTN","EASUM1",15,0)
 ;
"RTN","EASUM1",16,0)
 ;       PATIENT RELATION (#408.12)
"RTN","EASUM1",17,0)
 ;       INCOME PERSON (#408.13)
"RTN","EASUM1",18,0)
 ;       INDIVIDUAL ANNUAL INCOME (#408.21)
"RTN","EASUM1",19,0)
 ;       INCOME RELATION (#408.22)
"RTN","EASUM1",20,0)
 ;       ANNUAL MEANS TEST (#408.31)
"RTN","EASUM1",21,0)
 ;       MEANS TEST CHANGES (#408.41)
"RTN","EASUM1",22,0)
 ;       PATIENT (#2)
"RTN","EASUM1",23,0)
 ;
"RTN","EASUM1",24,0)
 ; current year is date of means test.
"RTN","EASUM1",25,0)
 ; income year is calendar year before date of means test.
"RTN","EASUM1",26,0)
 ; meant test status is based on income year data.
"RTN","EASUM1",27,0)
 ;
"RTN","EASUM1",28,0)
 ; IVMDAP is pointer to the PID HL7 segment in file #772
"RTN","EASUM1",29,0)
 ; IVMDAZ is pointer to the ZMT segment
"RTN","EASUM1",30,0)
 ;
"RTN","EASUM1",31,0)
 S:'$D(DUZ) DUZ=.5 ; if no DUZ set to postmaster
"RTN","EASUM1",32,0)
 ;
"RTN","EASUM1",33,0)
 ; get copay exemption status (IVMCEB) and means test status (IVMMTB)
"RTN","EASUM1",34,0)
 ; before upload
"RTN","EASUM1",35,0)
 S IVMCEB=$P($$RXST^IBARXEU(DFN),"^",2)
"RTN","EASUM1",36,0)
 S IVMMTB=$P($$LST^DGMTU(DFN),"^",3)
"RTN","EASUM1",37,0)
 ;
"RTN","EASUM1",38,0)
 ; subscript of array IVMAR is ien of 408.12 transmitted by IVM Center
"RTN","EASUM1",39,0)
 ; or created by upload.
"RTN","EASUM1",40,0)
 ;K IVMAR
"RTN","EASUM1",41,0)
 ;S IVMX=$$EN^IVMUCHK() I IVMX]"" S HLERR=IVMX K IVMX Q  ; error found in MT data
"RTN","EASUM1",42,0)
 ;
"RTN","EASUM1",43,0)
ADD ; add new annual means test file (408.31) stub
"RTN","EASUM1",44,0)
 ; input   DGMTDT (.01) dt of test
"RTN","EASUM1",45,0)
 ;         DFN (.02) Patient IEN
"RTN","EASUM1",46,0)
 ;         DGMTYPT (.19) type of test (1-means test, 2-Rx Copay test)
"RTN","EASUM1",47,0)
 ; output  DGMTI annual means test IEN
"RTN","EASUM1",48,0)
 S DGMTDT=IVMMTDT                 ;stop setting DGMTYPT here, EAS*1*42
"RTN","EASUM1",49,0)
 D ADD^DGMTA
"RTN","EASUM1",50,0)
 I $G(IVMMTIEN)="" S IVMMTIEN=+Y    ;Set IEN if only MT on file is Z06 MT
"RTN","EASUM1",51,0)
 ;
"RTN","EASUM1",52,0)
 ;Create new Z06 IVM Means Test
"RTN","EASUM1",53,0)
 ; Make STUB MT primary, add comment that it was created by Edb
"RTN","EASUM1",54,0)
 S DGCOM="Z06 MT via Edb"
"RTN","EASUM1",55,0)
 D PARSEZMT^EASPREC7(ZMTSEG)              ;Parse ZMT Segment for MT Data
"RTN","EASUM1",56,0)
 I $$EXPIRED^EASPTRN1(DFN,$G(IVM2)) S DGENUPLD="ENROLLMENT/ELIGIBILITY UPLOAD IN PROGRESS"    ;If MT expired then do not update Enrollment record
"RTN","EASUM1",57,0)
 S DA=DGMTI,DIE="^DGMT(408.31,"
"RTN","EASUM1",58,0)
 S DR=".03////^S X=IVM3;.12////^S X=IVM8;.07////^S X=IVM10;.09////^S X=IVM25;.11////^S X=IVM7;.18////^S X=IVM12;.23////^S X=IVM18;.25////^S X=IVM20;2////1;2.02////^S X=IVMDATE;2.03////^S X=IVM26;50///^S X=DGCOM"
"RTN","EASUM1",59,0)
 ;
"RTN","EASUM1",60,0)
 ; Linking logic for MT & CT, conditionally set link field 2.06 
"RTN","EASUM1",61,0)
 ;   Link the CT to MT (if MT found), or MT to CT (if CT found)
"RTN","EASUM1",62,0)
 ;   don't link tests older than Oct. 1999 or not same Year & NOT
"RTN","EASUM1",63,0)
 ;    Cat "C" (i.e. Cat "C" & > Oct. 1999 is ok to link)
"RTN","EASUM1",64,0)
 N LNKDAT,LNKMT,LNKDTE,LNKCAT,CURIEN
"RTN","EASUM1",65,0)
 S CURIEN=DGMTI,LNKMT=""
"RTN","EASUM1",66,0)
 S LNKDAT=$$LST^DGMTU(DFN,DGMTDT,$S(DGMTYPT=1:2,1:1)),DGMTI=CURIEN
"RTN","EASUM1",67,0)
 S:LNKDAT LNKMT=+LNKDAT,LNKDTE=$P(LNKDAT,"^",2),LNKCAT=$P(LNKDAT,"^",4)
"RTN","EASUM1",68,0)
 ; set LNKMT off if either of two scenarios below
"RTN","EASUM1",69,0)
 I LNKMT D                                  ;check for < Oct. 1999 1st
"RTN","EASUM1",70,0)
 . I DGMTDT<2991001 S LNKMT="" Q
"RTN","EASUM1",71,0)
 . I $E(LNKDTE,1,3)'=$E(DGMTDT,1,3),LNKCAT'="C" S LNKMT="" Q
"RTN","EASUM1",72,0)
 S:LNKMT DR=DR_";2.06////^S X=LNKMT"
"RTN","EASUM1",73,0)
 ;
"RTN","EASUM1",74,0)
 D ^DIE K DA,DIE,DR                            ;update new 408.31 test
"RTN","EASUM1",75,0)
 ;
"RTN","EASUM1",76,0)
 ; Update other 408.31 related Test, Link field, if link scenario true
"RTN","EASUM1",77,0)
 I LNKMT S DA=LNKMT,DIE="^DGMT(408.31,",DR="2.06////^S X=CURIEN" D ^DIE K DA,DIE,DR
"RTN","EASUM1",78,0)
 ;
"RTN","EASUM1",79,0)
 ;Variables needed for Bulletins
"RTN","EASUM1",80,0)
 ;
"RTN","EASUM1",81,0)
 S DGCAT=$P($G(^DG(408.32,IVM3,0)),"^",1)
"RTN","EASUM1",82,0)
 I '$D(IVM5) S IVM5=""
"RTN","EASUM1",83,0)
 ;
"RTN","EASUM1",84,0)
 D GETREL^DGMTU11(DFN,"V",DGLY,IVMMTIEN)
"RTN","EASUM1",85,0)
 I EASZ06 S (IVMMT31,DGMTP)=$G(^DGMT(408.31,IVMMTIEN,0)) ;dgmtp is event driver variable
"RTN","EASUM1",86,0)
 D COMPLETE
"RTN","EASUM1",87,0)
 Q
"RTN","EASUM1",88,0)
 ;
"RTN","EASUM1",89,0)
 ; add dependent(s) to income person file (408.13)
"RTN","EASUM1",90,0)
 ;
"RTN","EASUM1",91,0)
 ; add spouse if not in 408.13
"RTN","EASUM1",92,0)
 S IVMSPCHV="S" ; spouse/child/vet indicator
"RTN","EASUM1",93,0)
 S IVMDA1=IVMDAP+3 D GET ; spouse ZDP segment
"RTN","EASUM1",94,0)
 D INPIEN^IVMUM2
"RTN","EASUM1",95,0)
 Q:$D(IVMFERR)
"RTN","EASUM1",96,0)
 ;
"RTN","EASUM1",97,0)
 I IVMFLG5 G ADDCHILD ; entry not added - goto add children
"RTN","EASUM1",98,0)
 ;
"RTN","EASUM1",99,0)
 ; add entry to patient relation file (408.12)
"RTN","EASUM1",100,0)
 D EN^IVMUM3
"RTN","EASUM1",101,0)
 Q:$D(IVMFERR)
"RTN","EASUM1",102,0)
 ;
"RTN","EASUM1",103,0)
ADDS21 ; add spouse entry to individual annual income file (408.21)
"RTN","EASUM1",104,0)
 S IVMDA1=IVMDAP+4 D GET ; spouse ZIC segment
"RTN","EASUM1",105,0)
 D EN^IVMUM4
"RTN","EASUM1",106,0)
 Q:$D(IVMFERR)
"RTN","EASUM1",107,0)
 ;
"RTN","EASUM1",108,0)
 ; add spouse entry to income relation file (408.22)
"RTN","EASUM1",109,0)
 S IVMDA1=IVMDAP+5 D GET ; spouse ZIR segment
"RTN","EASUM1",110,0)
 D EN^IVMUM5
"RTN","EASUM1",111,0)
 Q:$D(IVMFERR)
"RTN","EASUM1",112,0)
 ;
"RTN","EASUM1",113,0)
ADDCHILD ; add children if not in 408.13
"RTN","EASUM1",114,0)
 S IVMSPCHV="C" ; spouse/child/vet indicator
"RTN","EASUM1",115,0)
 I 'IVMFLGC G ADDV21 ; no dependent children 
"RTN","EASUM1",116,0)
 S IVMCTR2=5
"RTN","EASUM1",117,0)
 F IVMCTR3=1:1:IVMFLGC D  Q:$D(IVMFERR)
"RTN","EASUM1",118,0)
 .S IVMCTR2=IVMCTR2+1
"RTN","EASUM1",119,0)
 .S IVMDA1=IVMDAP+IVMCTR2 D GET ; child ZDP segment
"RTN","EASUM1",120,0)
 .D INPIEN^IVMUM2
"RTN","EASUM1",121,0)
 .Q:$D(IVMFERR)
"RTN","EASUM1",122,0)
 .;
"RTN","EASUM1",123,0)
 .; add child entry to patient relation file (408.12)
"RTN","EASUM1",124,0)
 .D EN^IVMUM3
"RTN","EASUM1",125,0)
 .Q:$D(IVMFERR)
"RTN","EASUM1",126,0)
 .;
"RTN","EASUM1",127,0)
ADDC21 .; add child entry to individual annual income file (408.21)
"RTN","EASUM1",128,0)
 .S IVMCTR2=IVMCTR2+1
"RTN","EASUM1",129,0)
 .S IVMDA1=IVMDAP+IVMCTR2 D GET ; child ZIC segment
"RTN","EASUM1",130,0)
 .D EN^IVMUM4
"RTN","EASUM1",131,0)
 .Q:$D(IVMFERR)
"RTN","EASUM1",132,0)
 .;
"RTN","EASUM1",133,0)
 .; add entry to income relation file (408.22)
"RTN","EASUM1",134,0)
 .S IVMCTR2=IVMCTR2+1
"RTN","EASUM1",135,0)
 .S IVMDA1=IVMDAP+IVMCTR2 D GET ; child ZIR segment
"RTN","EASUM1",136,0)
 .D EN^IVMUM5
"RTN","EASUM1",137,0)
 .Q:$D(IVMFERR)
"RTN","EASUM1",138,0)
 .Q
"RTN","EASUM1",139,0)
 Q:$D(IVMFERR)
"RTN","EASUM1",140,0)
 ;
"RTN","EASUM1",141,0)
ADDV21 ; add vet entry to individual annual income file (408.21)
"RTN","EASUM1",142,0)
 ; get vet patient relation ien
"RTN","EASUM1",143,0)
 S DGPRI=+$G(DGREL("V"))
"RTN","EASUM1",144,0)
 S IVMDA1=IVMDAP+1 D GET ; vet ZIC segment
"RTN","EASUM1",145,0)
 S IVMSPCHV="V" ; spouse/child/vet indicator
"RTN","EASUM1",146,0)
 D EN^IVMUM4
"RTN","EASUM1",147,0)
 Q:$D(IVMFERR)
"RTN","EASUM1",148,0)
 S DGVINI=DGINI ; vet individual annual income ien
"RTN","EASUM1",149,0)
 ;
"RTN","EASUM1",150,0)
 ; add vet entry to income relation file (408.22)
"RTN","EASUM1",151,0)
 S IVMDA1=IVMDAP+2 D GET ; vet ZIR segment
"RTN","EASUM1",152,0)
 D EN^IVMUM5
"RTN","EASUM1",153,0)
 Q:$D(IVMFERR)
"RTN","EASUM1",154,0)
 S DGVIRI=DGIRI ; vet income relation ien
"RTN","EASUM1",155,0)
 ;
"RTN","EASUM1",156,0)
COMPLETE ; complete means test
"RTN","EASUM1",157,0)
 ;
"RTN","EASUM1",158,0)
 ;D EN^IVMUM6
"RTN","EASUM1",159,0)
 ;Call Means Test Event Driver to complete processing
"RTN","EASUM1",160,0)
 ;
"RTN","EASUM1",161,0)
 S DGMTACT="UPL"
"RTN","EASUM1",162,0)
 D AFTER^DGMTEVT
"RTN","EASUM1",163,0)
 S DGMTINF=1                                    ;Non-Interactive Flag
"RTN","EASUM1",164,0)
 D EN^DGMTEVT
"RTN","EASUM1",165,0)
 D MTBULL^EASUM7,MAIL^IVMUFNC()               ;Build Mail Message
"RTN","EASUM1",166,0)
 ;
"RTN","EASUM1",167,0)
 ; cleanup                                  ;EAS*1*42   remove Dgmtypt
"RTN","EASUM1",168,0)
 K DGINI,DGIRI,DGLY,DGMTDT,DGPRI,DGREL,DGVINI,DGVIRI,DGENUPLD
"RTN","EASUM1",169,0)
 K DGCAT,IVMAR,IVMCEB,IVMCTR2,IVMCTR3,IVMDA1,IVMDAP,IVMFERR
"RTN","EASUM1",170,0)
 K IVMFLG2,IVMFLG5,IVMFLGC,IVMMTB,IVMPRN
"RTN","EASUM1",171,0)
 K IVMRELN,IVMRELO,IVMSEG,IVMSPCHV,IVMX
"RTN","EASUM1",172,0)
 Q
"RTN","EASUM1",173,0)
 ; 
"RTN","EASUM1",174,0)
GET ; get HL7 segment from ^HL
"RTN","EASUM1",175,0)
 S IVMSEG=$P($G(^TMP($J,IVMRTN,IVMDA1,0)),"^",2,999)
"RTN","EASUM1",176,0)
 Q
"RTN","EASUM7")
0^4^B34406080
"RTN","EASUM7",1,0)
EASUM7 ;ALB/GN - DELETE IVM MEANS TEST ; 6/15/04 10:52pm
"RTN","EASUM7",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**42**;21-OCT-94
"RTN","EASUM7",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","EASUM7",4,0)
 ;
"RTN","EASUM7",5,0)
 ;EAS*1*42 This routine patterned after IVMUM7.
"RTN","EASUM7",6,0)
 ;
"RTN","EASUM7",7,0)
EN ; this routine will process an IVM MT/CT delete request
"RTN","EASUM7",8,0)
 ; from the IVM Center.
"RTN","EASUM7",9,0)
 ;
"RTN","EASUM7",10,0)
 ; delete IVM MT/CT records in the following files:
"RTN","EASUM7",11,0)
 ;     408.22
"RTN","EASUM7",12,0)
 ;     408.21
"RTN","EASUM7",13,0)
 ;
"RTN","EASUM7",14,0)
 ;     408.12 & 408.13 if IVM dependent
"RTN","EASUM7",15,0)
 ;               or
"RTN","EASUM7",16,0)
 ;     408.1275 if IVM & VAMC dependent (new 408.1275 record was
"RTN","EASUM7",17,0)
 ;              created for each IVM dependent by upload). 
"RTN","EASUM7",18,0)
 ;              change back the following fields to VAMC values
"RTN","EASUM7",19,0)
 ;              from IVM values:
"RTN","EASUM7",20,0)
 ;                 408.12  - relationship
"RTN","EASUM7",21,0)
 ;                 408.13  - name, dob, ssn, sex
"RTN","EASUM7",22,0)
 ;               or
"RTN","EASUM7",23,0)
 ;     408.1275 if VAMC dependent (new inactivated 408.1275 record
"RTN","EASUM7",24,0)
 ;              was created by upload).
"RTN","EASUM7",25,0)
 ;
"RTN","EASUM7",26,0)
 ;     408.31
"RTN","EASUM7",27,0)
 ;
"RTN","EASUM7",28,0)
 ; the "PRIM" node for the VAMC MT will be changed to 1 
"RTN","EASUM7",29,0)
 ;
"RTN","EASUM7",30,0)
 ; the event driver will be called twice
"RTN","EASUM7",31,0)
 ;    DGMTACT="DUP"
"RTN","EASUM7",32,0)
 ;    DGMTACT="DEL"
"RTN","EASUM7",33,0)
 ;
"RTN","EASUM7",34,0)
 ;
"RTN","EASUM7",35,0)
 ;     Input       IVMMTDT      MT date
"RTN","EASUM7",36,0)
 ;                 IVMMTIEN     primary MT IEN
"RTN","EASUM7",37,0)
 ;
"RTN","EASUM7",38,0)
 ; check primary test is IVM
"RTN","EASUM7",39,0)
 S IVMNO=$G(^DGMT(408.31,IVMMTIEN,0)) ; ivm mt 0th node  
"RTN","EASUM7",40,0)
 S IVMSOT=$P($G(^DG(408.34,+$P(IVMNO,"^",23),0)),"^") ; source of test
"RTN","EASUM7",41,0)
 I IVMSOT'="IVM" D  Q
"RTN","EASUM7",42,0)
 .S HLERR="IVM "_^DG(408.33,DGMTYPT,0)_" for income year "_($E(DGLY,1,3)+1700)_" not found"
"RTN","EASUM7",43,0)
 .D ACK^IVMPREC
"RTN","EASUM7",44,0)
 ;
"RTN","EASUM7",45,0)
 ; get VAMC MT/CT via AD xref (by type) to be re-instated    ;EAS*1*42
"RTN","EASUM7",46,0)
 S IVMVAMC=0 ; ivmvamc is vamc ien
"RTN","EASUM7",47,0)
 F  S IVMVAMC=$O(^DGMT(408.31,"AD",DGMTYPT,DFN,IVMMTDT,IVMVAMC)) Q:'IVMVAMC  D  Q:$D(IVMVNO)
"RTN","EASUM7",48,0)
 .S IVMVNO=$G(^DGMT(408.31,+IVMVAMC,0)) ; vamc 0th node
"RTN","EASUM7",49,0)
 .S IVMSOT=$P($G(^DG(408.34,+$P(IVMVNO,"^",23),0)),"^") ; source of test
"RTN","EASUM7",50,0)
 .I IVMSOT'="VAMC",IVMSOT'="DCD",IVMSOT'="OTHER FACILITY" K IVMVNO Q
"RTN","EASUM7",51,0)
 ;
"RTN","EASUM7",52,0)
 ; if no previous VAMC RXCT (type 2) on file, then          ;EAS*1*42
"RTN","EASUM7",53,0)
 ; simply delete the IVM RX converted 408.31 record
"RTN","EASUM7",54,0)
 I '$D(IVMVNO),DGMTYPT=2 D EN1^EASUM8 Q
"RTN","EASUM7",55,0)
 ;
"RTN","EASUM7",56,0)
 ; if no VAMC MT type 1, then error
"RTN","EASUM7",57,0)
 I '$D(IVMVNO) D  Q
"RTN","EASUM7",58,0)
 .S HLERR=IVMSOT_^DG(408.33,DGMTYPT,0)_" for income year "_($E(DGLY,1,3)+1700)_" not found"
"RTN","EASUM7",59,0)
 .D ACK^IVMPREC
"RTN","EASUM7",60,0)
 ;
"RTN","EASUM7",61,0)
 ; get array dginc containing ien(s) of 408.21
"RTN","EASUM7",62,0)
 ; get array dginr containing ien(s) of 408.22
"RTN","EASUM7",63,0)
 D ALL^DGMTU21(DFN,"VSC",IVMMTDT,"IR",IVMMTIEN)
"RTN","EASUM7",64,0)
 ;
"RTN","EASUM7",65,0)
 ; delete 408.22
"RTN","EASUM7",66,0)
 ;
"RTN","EASUM7",67,0)
 S DA=$G(DGINR("V")) D
"RTN","EASUM7",68,0)
 .Q:'DA  S DIK="^DGMT(408.22," D ^DIK
"RTN","EASUM7",69,0)
 S DA=$G(DGINR("S")) D
"RTN","EASUM7",70,0)
 .Q:'DA  S DIK="^DGMT(408.22," D ^DIK
"RTN","EASUM7",71,0)
 S IVMN=0
"RTN","EASUM7",72,0)
 F  S IVMN=$O(DGINR("C",IVMN)) Q:'IVMN  S DA=$G(DGINR("C",IVMN)),DIK="^DGMT(408.22," D ^DIK
"RTN","EASUM7",73,0)
 ;
"RTN","EASUM7",74,0)
 ; delete 408.21
"RTN","EASUM7",75,0)
 ;
"RTN","EASUM7",76,0)
 S DA=$G(DGINC("V")) D
"RTN","EASUM7",77,0)
 .Q:'DA  S DIK="^DGMT(408.21," D ^DIK
"RTN","EASUM7",78,0)
 S DA=$G(DGINC("S")) D
"RTN","EASUM7",79,0)
 .Q:'DA  S DIK="^DGMT(408.21," D ^DIK
"RTN","EASUM7",80,0)
 S IVMN=0
"RTN","EASUM7",81,0)
 F  S IVMN=$O(DGINC("C",IVMN)) Q:'IVMN  S DA=$G(DGINC("C",IVMN)),DIK="^DGMT(408.21," D ^DIK
"RTN","EASUM7",82,0)
 ;
"RTN","EASUM7",83,0)
 ; logic for 408.12/408.1275 & 408.13
"RTN","EASUM7",84,0)
 ;
"RTN","EASUM7",85,0)
 D SETUPAR^EASUM8
"RTN","EASUM7",86,0)
 ;
"RTN","EASUM7",87,0)
 ; no "AIVM" x-ref means
"RTN","EASUM7",88,0)
 ;   no dependents
"RTN","EASUM7",89,0)
 ;       or
"RTN","EASUM7",90,0)
 ; IVM v2.0 means test (no dependent difference)
"RTN","EASUM7",91,0)
 ; only 408.22, 408.21, and 408.31 records will be deleted
"RTN","EASUM7",92,0)
 ;
"RTN","EASUM7",93,0)
 S IVM12="" F  S IVM12=$O(^DGPR(408.12,"AIVM",IVMMTIEN,IVM12)) Q:'IVM12  D  Q:$D(IVMFERR)
"RTN","EASUM7",94,0)
 .I $G(^DGPR(408.12,+IVM12,0))']"" D  Q
"RTN","EASUM7",95,0)
 ..S (IVMTEXT(6),HLERR)="Can't find 408.12 record "_IVM12
"RTN","EASUM7",96,0)
 ..D ERRBULL^IVMPREC7,MAIL^IVMUFNC()
"RTN","EASUM7",97,0)
 ..S IVMFERR=""
"RTN","EASUM7",98,0)
 ..D ACK^IVMPREC
"RTN","EASUM7",99,0)
 ..Q
"RTN","EASUM7",100,0)
 .;
"RTN","EASUM7",101,0)
 .I $P($G(^DGPR(408.12,+IVM12,"E",0)),"^",4)=1 D  Q
"RTN","EASUM7",102,0)
 ..; only 1 multiple record (408.1275) indicates IVM dependent
"RTN","EASUM7",103,0)
 ..; delete 408.12 & 408.13 records for IVM dependent
"RTN","EASUM7",104,0)
 ..S IVM13=$P($P($G(^DGPR(408.12,+IVM12,0)),"^",3),";") I $G(^DGPR(408.13,+IVM13,0))']"" D  Q
"RTN","EASUM7",105,0)
 ...S (IVMTEXT(6),HLERR)="Can't find 408.13 record "_IVM13
"RTN","EASUM7",106,0)
 ...D ERRBULL^IVMPREC7,MAIL^IVMUFNC()
"RTN","EASUM7",107,0)
 ...S IVMFERR=""
"RTN","EASUM7",108,0)
 ...D ACK^IVMPREC
"RTN","EASUM7",109,0)
 ...Q
"RTN","EASUM7",110,0)
 ..S DA=IVM12,DIK="^DGPR(408.12," D ^DIK K DA,DIK
"RTN","EASUM7",111,0)
 ..S DA=IVM13,DIK="^DGPR(408.13," D ^DIK K DA,DIK
"RTN","EASUM7",112,0)
 ..Q
"RTN","EASUM7",113,0)
 .;
"RTN","EASUM7",114,0)
 .; delete 408.1275 record for IVM dependent and
"RTN","EASUM7",115,0)
 .; change demo data in 408.12 & 408.13 back to VAMC values
"RTN","EASUM7",116,0)
 .;       or
"RTN","EASUM7",117,0)
 .; delete 408.1275 record for inactivated VAMC dependent
"RTN","EASUM7",118,0)
 .S IVM121="",IVM121=$O(^DGPR(408.12,"AIVM",IVMMTIEN,+IVM12,IVM121))
"RTN","EASUM7",119,0)
 .I $G(^DGPR(408.12,+IVM12,"E",+IVM121,0))']"" D  Q
"RTN","EASUM7",120,0)
 ..S (IVMTEXT(6),HLERR)="Can't find 408.1275 record "_IVM12_"  "_IVM121
"RTN","EASUM7",121,0)
 ..D ERRBULL^IVMPREC7,MAIL^IVMUFNC()
"RTN","EASUM7",122,0)
 ..S IVMFERR=""
"RTN","EASUM7",123,0)
 ..D ACK^IVMPREC
"RTN","EASUM7",124,0)
 ..Q
"RTN","EASUM7",125,0)
 .S IVMVAMCA=$P(^(0),"^",2) ; dependent active?
"RTN","EASUM7",126,0)
 .S DA(1)=IVM12,DA=IVM121,DIK="^DGPR(408.12,"_DA(1)_",""E"","
"RTN","EASUM7",127,0)
 .D ^DIK K DA(1),DA,DIK
"RTN","EASUM7",128,0)
 .Q:'IVMVAMCA  ; quit if inactivated VAMC dependent 
"RTN","EASUM7",129,0)
 .S IVM13=+$P($P($G(^DGPR(408.12,+IVM12,0)),"^",3),";")
"RTN","EASUM7",130,0)
 .D EN^EASUM8
"RTN","EASUM7",131,0)
 .Q
"RTN","EASUM7",132,0)
 ;
"RTN","EASUM7",133,0)
 Q:$D(IVMFERR)
"RTN","EASUM7",134,0)
 D EN1^EASUM8
"RTN","EASUM7",135,0)
 Q
"RTN","EASUM7",136,0)
 ;
"RTN","EASUM7",137,0)
ERRBULL ; build mail message for transmission to IVM mail group notifying site
"RTN","EASUM7",138,0)
 ; of upload error.
"RTN","EASUM7",139,0)
 S IVMPAT=$$PT^IVMUFNC4(DFN)
"RTN","EASUM7",140,0)
 S XMSUB="IVM - MEANS TEST UPLOAD"
"RTN","EASUM7",141,0)
 S IVMTEXT(1)="The following error occured when an Income Verification Match"
"RTN","EASUM7",142,0)
 S IVMTEXT(2)="verified Means Test was being uploaded for the following patient:"
"RTN","EASUM7",143,0)
 S IVMTEXT(3)=" "
"RTN","EASUM7",144,0)
 S IVMTEXT(4)="    NAME:     "_$P(IVMPAT,"^")
"RTN","EASUM7",145,0)
 S IVMTEXT(5)="    ID:       "_$P(IVMPAT,"^",2)
"RTN","EASUM7",146,0)
 S IVMTEXT(6)="    ERROR:    "_IVMTEXT(6)
"RTN","EASUM7",147,0)
 Q
"RTN","EASUM7",148,0)
 ;
"RTN","EASUM7",149,0)
MTBULL ; build mail message for transmission to IVM mail group notifying them
"RTN","EASUM7",150,0)
 ; an IVM verified MT/CT has been uploaded into DHCP for a patient.
"RTN","EASUM7",151,0)
 ;
"RTN","EASUM7",152,0)
 S IVMPAT=$$PT^IVMUFNC4(DFN)
"RTN","EASUM7",153,0)
 S XMSUB="IVM - INCOME TEST UPLOAD for "_$P($P(IVMPAT,"^"),",")_" ("_$P(IVMPAT,"^",3)_")"
"RTN","EASUM7",154,0)
 S IVMTEXT(1)="An Income Verification Match verified "
"RTN","EASUM7",155,0)
 S IVMTEXT(1)=IVMTEXT(1)_^DG(408.33,DGMTYPT,0)_" has been uploaded"
"RTN","EASUM7",156,0)
 S IVMTEXT(2)="for the following patient:"
"RTN","EASUM7",157,0)
 S IVMTEXT(3)=" "
"RTN","EASUM7",158,0)
 S IVMTEXT(4)="  NAME:           "_$P(IVMPAT,"^")
"RTN","EASUM7",159,0)
 S IVMTEXT(5)="  ID:             "_$P(IVMPAT,"^",2)
"RTN","EASUM7",160,0)
 S Y=IVMMTDT X ^DD("DD")
"RTN","EASUM7",161,0)
 S IVMTEXT(6)="  DATE OF TEST:   "_Y
"RTN","EASUM7",162,0)
 ;set previous sts from previous 408.31 or previous RX sts
"RTN","EASUM7",163,0)
 S IVMTEXT(7)="  PREV CATEGORY:  "
"RTN","EASUM7",164,0)
 I DGMTYPT=2 D
"RTN","EASUM7",165,0)
 . S IVMTEXT(7)=IVMTEXT(7)_IVMCEB
"RTN","EASUM7",166,0)
 E  D
"RTN","EASUM7",167,0)
 . S IVMTEXT(7)=IVMTEXT(7)_$P($G(^DG(408.32,+$P(IVMMT31,"^",3),0)),"^",1)
"RTN","EASUM7",168,0)
 ;
"RTN","EASUM7",169,0)
 S IVMTEXT(8)="  NEW CATEGORY:   "_DGCAT
"RTN","EASUM7",170,0)
 I IVM5 S Y=IVM5 X ^DD("DD") S IVMTEXT(9)="  DATE/TIME OF ADJUDICATION:  "_Y
"RTN","EASUM7",171,0)
 Q
"RTN","EASUM8")
0^5^B12545151
"RTN","EASUM8",1,0)
EASUM8 ;ALB/GN - DELETE IVM MEANS TEST (CON'T) ; 6/16/04 1:09am
"RTN","EASUM8",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**42**;21-OCT-94
"RTN","EASUM8",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","EASUM8",4,0)
 ;
"RTN","EASUM8",5,0)
 ;EAS*1*42 this routine patterned after IVMUM8
"RTN","EASUM8",6,0)
 ;         - add RX Copay Testing indentification to this routine.
"RTN","EASUM8",7,0)
 ;         - added language to the bulletin message specific to the
"RTN","EASUM8",8,0)
 ;           type of test being deleted.      type = 1 (Means Test)
"RTN","EASUM8",9,0)
 ;                                                 = 2 (RX Copay Test)
"RTN","EASUM8",10,0)
 ;
"RTN","EASUM8",11,0)
EN ; change demo data in 408.12 & 408.13 back to VAMC values
"RTN","EASUM8",12,0)
 ; ivm12     408.12 ien
"RTN","EASUM8",13,0)
 ; ivm13     408.13 ien
"RTN","EASUM8",14,0)
 ; ivmmtien  408.31 ien
"RTN","EASUM8",15,0)
 ;
"RTN","EASUM8",16,0)
 ; note: 408.13 fields were added to 408.41 before 408.12 field
"RTN","EASUM8",17,0)
 ;
"RTN","EASUM8",18,0)
 K DR S IVM41=0
"RTN","EASUM8",19,0)
 F  S IVM41=$O(^DGMT(408.41,"D",IVMMTIEN,IVM41)) Q:'IVM41  D
"RTN","EASUM8",20,0)
 .S IVM411=$G(^DGMT(408.41,+IVM41,0))
"RTN","EASUM8",21,0)
 .Q:$P(IVM411,"^",10)'=IVM13
"RTN","EASUM8",22,0)
 .S IVMOLD=$P(IVM411,"^",5)
"RTN","EASUM8",23,0)
 .S IVMOLD=$S(IVMOLD="":"@",1:IVMOLD)
"RTN","EASUM8",24,0)
 .S IVMFILE=$P(IVMAR1($P(IVM411,"^",2)),";")
"RTN","EASUM8",25,0)
 .S IVMNOD=$P(IVMAR1($P(IVM411,"^",2)),";",2)
"RTN","EASUM8",26,0)
 .I IVMFILE=408.13 S DA=IVM13,DIE="^DGPR(408.13,"
"RTN","EASUM8",27,0)
 .I IVMFILE=408.12 S DA=IVM12,DIE="^DGPR(408.12,"
"RTN","EASUM8",28,0)
 .S DR=IVMNOD_"////^S X=IVMOLD" D ^DIE K DA,DR,DIE
"RTN","EASUM8",29,0)
 .Q
"RTN","EASUM8",30,0)
 Q
"RTN","EASUM8",31,0)
 ;
"RTN","EASUM8",32,0)
EN1 ; change primary income test for year? code from 0 to 1 for VAMC MT
"RTN","EASUM8",33,0)
 I IVMVAMC D
"RTN","EASUM8",34,0)
 . S DA=IVMVAMC,DIE="^DGMT(408.31,",DR="2////1" D ^DIE K DA,DIE,DR
"RTN","EASUM8",35,0)
 ;
"RTN","EASUM8",36,0)
 ; Check link field, remove link before deleting record
"RTN","EASUM8",37,0)
 N LNKTEST S LNKTEST=$P($G(^DGMT(408.31,IVMMTIEN,2)),U,6)
"RTN","EASUM8",38,0)
 I LNKTEST S DA=LNKTEST,DIE="^DGMT(408.31,",DR="2.06////@" D ^DIE K DA,DIE,DR,LNKTEST
"RTN","EASUM8",39,0)
 ;
"RTN","EASUM8",40,0)
 ; delete 408.31
"RTN","EASUM8",41,0)
 S DA=IVMMTIEN,DIK="^DGMT(408.31," D ^DIK
"RTN","EASUM8",42,0)
 ;
"RTN","EASUM8",43,0)
 ; open IVM case record which was closed during upload
"RTN","EASUM8",44,0)
 S DA=$O(^IVM(301.5,"APT",+DFN,+DGLY,0))
"RTN","EASUM8",45,0)
 I $G(^IVM(301.5,+DA,0))']"" G MTBULL
"RTN","EASUM8",46,0)
 S DR=".04////0",DIE="^IVM(301.5," D ^DIE
"RTN","EASUM8",47,0)
 K ^IVM(301.5,DA,1)
"RTN","EASUM8",48,0)
 ;
"RTN","EASUM8",49,0)
MTBULL ; Build and transmit mail message to IVM mail group notifying site
"RTN","EASUM8",50,0)
 ; that an income test was deleted.  Run MT event driver or only IB
"RTN","EASUM8",51,0)
 ; event driver
"RTN","EASUM8",52,0)
 ;
"RTN","EASUM8",53,0)
 ;if deleting a previous IVM RXCT that had no previous VAMC 408.31,
"RTN","EASUM8",54,0)
 ;then only call IB event driver for the IB delete
"RTN","EASUM8",55,0)
 I '$D(IVMVNO) D
"RTN","EASUM8",56,0)
 . S DGMTACT="DEL"
"RTN","EASUM8",57,0)
 . D ^IBAMTED
"RTN","EASUM8",58,0)
 E  D
"RTN","EASUM8",59,0)
 . ; call event driver
"RTN","EASUM8",60,0)
 . S DGMTINF=1,DGMTP=IVMNO,DGMTA=IVMVNO
"RTN","EASUM8",61,0)
 . S DGMTACT="DUP",DGMTI=IVMVAMC D EN^DGMTEVT
"RTN","EASUM8",62,0)
 . S DGMTACT="DEL",DGMTI=IVMMTIEN D EN^DGMTEVT
"RTN","EASUM8",63,0)
 ;
"RTN","EASUM8",64,0)
 S IVMPAT=$$PT^IVMUFNC4(DFN)
"RTN","EASUM8",65,0)
 S XMSUB="IVM - INCOME TEST DELETED"
"RTN","EASUM8",66,0)
 S IVMTEXT(1)="An Income Verification Match "
"RTN","EASUM8",67,0)
 S IVMTEXT(1)=IVMTEXT(1)_^DG(408.33,DGMTYPT,0)_" was deleted"
"RTN","EASUM8",68,0)
 S IVMTEXT(2)="for the following patient:"
"RTN","EASUM8",69,0)
 S IVMTEXT(3)=" "
"RTN","EASUM8",70,0)
 S IVMTEXT(4)="    NAME:          "_$P(IVMPAT,"^")
"RTN","EASUM8",71,0)
 S IVMTEXT(5)="    ID:            "_$P(IVMPAT,"^",2)
"RTN","EASUM8",72,0)
 S Y=IVMMTDT X ^DD("DD")
"RTN","EASUM8",73,0)
 S IVMTEXT(6)="    DATE OF TEST:  "_Y
"RTN","EASUM8",74,0)
 S IVMTEXT(7)=" "
"RTN","EASUM8",75,0)
 S IVMTEXT(8)="NOTE:  The original DHCP "
"RTN","EASUM8",76,0)
 S IVMTEXT(8)=IVMTEXT(8)_^DG(408.33,DGMTYPT,0)_" is now primary"
"RTN","EASUM8",77,0)
 S IVMTEXT(9)=" "
"RTN","EASUM8",78,0)
 S IVMTEXT(10)="  PREV CATEGORY:  "_DGCAT
"RTN","EASUM8",79,0)
 ;
"RTN","EASUM8",80,0)
 S IVMTEXT(11)="   NEW CATEGORY:  "
"RTN","EASUM8",81,0)
 I DGMTYPT=2 D
"RTN","EASUM8",82,0)
 . S IVMTEXT(11)=IVMTEXT(11)_$P($$RXST^IBARXEU(DFN),"^",2)
"RTN","EASUM8",83,0)
 E  D
"RTN","EASUM8",84,0)
 . Q:'IVMVAMC
"RTN","EASUM8",85,0)
 . S IVMTEXT(11)=IVMTEXT(11)_$P($G(^DG(408.32,+$P(IVMVNO,"^",3),0)),"^",1)
"RTN","EASUM8",86,0)
 D MAIL^IVMUFNC()
"RTN","EASUM8",87,0)
 ;
"RTN","EASUM8",88,0)
 ; cleanup
"RTN","EASUM8",89,0)
 K DA,DFN,DGINC,DGINR,DGLY,DGMTA,DGMTACT,DGMTI,DGMTINF,DGMTP
"RTN","EASUM8",90,0)
 K DIE,DIK,DR,IVM12,IVM121,IVM13,IVM41,IVM411,IVMFILE
"RTN","EASUM8",91,0)
 K IVMFLGC,IVMMTDT,IVMMTIEN,IVMN,IVMNO,IVMNOD,IVMOLD
"RTN","EASUM8",92,0)
 K IVMPAT,IVMSOT,IVMTEXT,IVMVAMC,IVMVAMCA,IVMVNO,XMSUB,Y
"RTN","EASUM8",93,0)
 Q
"RTN","EASUM8",94,0)
 ;
"RTN","EASUM8",95,0)
SETUPAR ; create array ivmar1
"RTN","EASUM8",96,0)
 ; subscript is 408.42 node (type of change - name, dob, ssn, sex, relationship)
"RTN","EASUM8",97,0)
 ; 1st piece is file 408.12 or 408.13
"RTN","EASUM8",98,0)
 ; 2nd piece is 408.12 or 408.13 field #
"RTN","EASUM8",99,0)
 F IVM41=4:1 S IVM411=$P($T(TYPECH+IVM41),";;",2) Q:IVM411="QUIT"  D
"RTN","EASUM8",100,0)
 .S IVMAR1($P(IVM411,";"))=$P(IVM411,";",2,3)
"RTN","EASUM8",101,0)
 K IVM41,IVM411
"RTN","EASUM8",102,0)
 Q
"RTN","EASUM8",103,0)
 ;
"RTN","EASUM8",104,0)
TYPECH ; type of dependent changes 408.41/408.42
"RTN","EASUM8",105,0)
 ; 1st piece - 408.42 table file node
"RTN","EASUM8",106,0)
 ; 2nd piece - file (408.12/408.13)
"RTN","EASUM8",107,0)
 ; 3rd piece - 408.12/408.13 field
"RTN","EASUM8",108,0)
 ;;16;408.13;.01
"RTN","EASUM8",109,0)
 ;;17;408.13;.03
"RTN","EASUM8",110,0)
 ;;18;408.13;.09
"RTN","EASUM8",111,0)
 ;;19;408.13;.02
"RTN","EASUM8",112,0)
 ;;20;408.12;.02
"RTN","EASUM8",113,0)
 ;;QUIT
"VER")
8.0^22
**INSTALL NAME**
IB*2.0*269
"BLD",5513,0)
IB*2.0*269^INTEGRATED BILLING^0^3040713^y
"BLD",5513,1,0)
^^2^2^3040420^
"BLD",5513,1,1,0)
Add ability to process IVM close case/converted Pharmacy Exemption tests 
"BLD",5513,1,2,0)
via Z06 transmissions from the EDB.
"BLD",5513,4,0)
^9.64PA^^
"BLD",5513,"KRN",0)
^9.67PA^8989.52^19
"BLD",5513,"KRN",.4,0)
.4
"BLD",5513,"KRN",.401,0)
.401
"BLD",5513,"KRN",.402,0)
.402
"BLD",5513,"KRN",.403,0)
.403
"BLD",5513,"KRN",.5,0)
.5
"BLD",5513,"KRN",.84,0)
.84
"BLD",5513,"KRN",3.6,0)
3.6
"BLD",5513,"KRN",3.8,0)
3.8
"BLD",5513,"KRN",9.2,0)
9.2
"BLD",5513,"KRN",9.8,0)
9.8
"BLD",5513,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",5513,"KRN",9.8,"NM",1,0)
IBAMTED^^0^B8126243
"BLD",5513,"KRN",9.8,"NM",2,0)
IBAMTED2^^0^B3708640
"BLD",5513,"KRN",9.8,"NM","B","IBAMTED",1)

"BLD",5513,"KRN",9.8,"NM","B","IBAMTED2",2)

"BLD",5513,"KRN",19,0)
19
"BLD",5513,"KRN",19.1,0)
19.1
"BLD",5513,"KRN",101,0)
101
"BLD",5513,"KRN",409.61,0)
409.61
"BLD",5513,"KRN",771,0)
771
"BLD",5513,"KRN",870,0)
870
"BLD",5513,"KRN",8989.51,0)
8989.51
"BLD",5513,"KRN",8989.52,0)
8989.52
"BLD",5513,"KRN",8994,0)
8994
"BLD",5513,"KRN","B",.4,.4)

"BLD",5513,"KRN","B",.401,.401)

"BLD",5513,"KRN","B",.402,.402)

"BLD",5513,"KRN","B",.403,.403)

"BLD",5513,"KRN","B",.5,.5)

"BLD",5513,"KRN","B",.84,.84)

"BLD",5513,"KRN","B",3.6,3.6)

"BLD",5513,"KRN","B",3.8,3.8)

"BLD",5513,"KRN","B",9.2,9.2)

"BLD",5513,"KRN","B",9.8,9.8)

"BLD",5513,"KRN","B",19,19)

"BLD",5513,"KRN","B",19.1,19.1)

"BLD",5513,"KRN","B",101,101)

"BLD",5513,"KRN","B",409.61,409.61)

"BLD",5513,"KRN","B",771,771)

"BLD",5513,"KRN","B",870,870)

"BLD",5513,"KRN","B",8989.51,8989.51)

"BLD",5513,"KRN","B",8989.52,8989.52)

"BLD",5513,"KRN","B",8994,8994)

"BLD",5513,"QUES",0)
^9.62^^
"BLD",5513,"REQB",0)
^9.611^1^1
"BLD",5513,"REQB",1,0)
IB*2.0*255^1
"BLD",5513,"REQB","B","IB*2.0*255",1)

"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
269^3040713
"PKG",200,22,1,"PAH",1,1,0)
^^2^2^3040713
"PKG",200,22,1,"PAH",1,1,1,0)
Add ability to process IVM close case/converted Pharmacy Exemption tests 
"PKG",200,22,1,"PAH",1,1,2,0)
via Z06 transmissions from the EDB.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","IBAMTED")
0^1^B8126243
"RTN","IBAMTED",1,0)
IBAMTED ;ALB/CPM,GN - MEANS TEST EVENT DRIVER INTERFACE ; 6/1/04 2:10pm
"RTN","IBAMTED",2,0)
 ;;2.0;INTEGRATED BILLING;**15,255,269**;21-MAR-94
"RTN","IBAMTED",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBAMTED",4,0)
 ;
"RTN","IBAMTED",5,0)
 ;IB*2*269 add IVM converted RX Copay Test update calls to a new API.
"RTN","IBAMTED",6,0)
 ;
"RTN","IBAMTED",7,0)
 ; -- do medication copayment exemption processing
"RTN","IBAMTED",8,0)
 ;
"RTN","IBAMTED",9,0)
 ;Z06 processing for RX Copay then Quit
"RTN","IBAMTED",10,0)
 I $D(EASZ06),DGMTYPT=2 D ^IBAMTED2 G END                    ;IB*2*269
"RTN","IBAMTED",11,0)
 ;Original Non-Z06 Copay processing
"RTN","IBAMTED",12,0)
 D:'$D(EASZ06) ^IBAMTED1
"RTN","IBAMTED",13,0)
 ;
"RTN","IBAMTED",14,0)
 ; -- end medication copayment exemption processing
"RTN","IBAMTED",15,0)
 ;
"RTN","IBAMTED",16,0)
 ; Quit if supported variables are unavailable.
"RTN","IBAMTED",17,0)
 Q:'$D(DFN)!('$D(DGMTA))!('$D(DGMTP))!('$D(DUZ))!('$D(DGMTINF))!('$D(DGMTACT))
"RTN","IBAMTED",18,0)
 ;
"RTN","IBAMTED",19,0)
 ;***
"RTN","IBAMTED",20,0)
 ;S XRTL=$ZU(0),XRTN="IBAMTED-1" D T0^%ZOSV ;start rt clock
"RTN","IBAMTED",21,0)
 ;
"RTN","IBAMTED",22,0)
 ; -- quit if copay exemption test
"RTN","IBAMTED",23,0)
 I $P(DGMTA,"^",19)=2!($P(DGMTP,"^",19)=2) G END
"RTN","IBAMTED",24,0)
 ;
"RTN","IBAMTED",25,0)
 ; Quit if test is a Category change resulting from a deleted test.
"RTN","IBAMTED",26,0)
 I DGMTA]"",DGMTP]"",+DGMTA'=+DGMTP G END ; on-line deletion
"RTN","IBAMTED",27,0)
 I DGMTA]"",DGMTP]"",DGMTACT="DEL" G END ; IVM 'delete' transmission
"RTN","IBAMTED",28,0)
 ;
"RTN","IBAMTED",29,0)
 ; Process Means Tests uploaded by IVM.
"RTN","IBAMTED",30,0)
 I DGMTACT="UPL"!(DGMTACT="DUP") D  G END
"RTN","IBAMTED",31,0)
 .;
"RTN","IBAMTED",32,0)
 .; - if IVM is uploading a verified test, create new MT charges
"RTN","IBAMTED",33,0)
 .I $P(DGMTP,"^",23)<2,$P(DGMTA,"^",23)>1,'$$CK^DGMTUB(DGMTP),$$CK^DGMTUB(DGMTA) D ^IBAMTV Q
"RTN","IBAMTED",34,0)
 .;
"RTN","IBAMTED",35,0)
 .; - if IVM is sending a 'Delete' transmission, cancel previous charges
"RTN","IBAMTED",36,0)
 .I $P(DGMTP,"^",23)>1,$P(DGMTA,"^",23)<2,$$CK^DGMTUB(DGMTP),'$$CK^DGMTUB(DGMTA) D CANC^IBAMTV
"RTN","IBAMTED",37,0)
 ;
"RTN","IBAMTED",38,0)
 ; Quit if the most current Means Test was not altered.
"RTN","IBAMTED",39,0)
 S IBMT=$S(DGMTA="":DGMTP,1:DGMTA)
"RTN","IBAMTED",40,0)
 S X=$$LST^DGMTU(DFN) I X,$P(X,"^",2)>+IBMT G END
"RTN","IBAMTED",41,0)
 ;
"RTN","IBAMTED",42,0)
 ; Quit if an added or deleted test is a Required test.
"RTN","IBAMTED",43,0)
 I (DGMTA=""!(DGMTP="")),$P(IBMT,"^",3)=1 G END
"RTN","IBAMTED",44,0)
 ;
"RTN","IBAMTED",45,0)
 ; Determine the billable status before and after the transaction.
"RTN","IBAMTED",46,0)
 D NOW^%DTC S IBCATCA=$$BIL^DGMTUB(DFN,%)
"RTN","IBAMTED",47,0)
 S IBCATCP=$S(DGMTP="":$$ADD,DGMTA="":$$CK^DGMTUB(DGMTP),1:$$EDIT)
"RTN","IBAMTED",48,0)
 ;
"RTN","IBAMTED",49,0)
 ; Generate a bulletin if the patient's billing status has changed.
"RTN","IBAMTED",50,0)
 I (IBCATCP&('IBCATCA))!('IBCATCP&(IBCATCA)) D
"RTN","IBAMTED",51,0)
 .S IBEFDT=$S($P(IBMT,"^",7):+$P(IBMT,"^",7),1:+IBMT)
"RTN","IBAMTED",52,0)
 .I IBCATCP,'IBCATCA,'$$CHG^IBAMTEDU(IBEFDT) Q  ; hasn't been billed since going c->a
"RTN","IBAMTED",53,0)
 .I 'IBCATCP,IBCATCA,'$$EP^IBAMTEDU(IBEFDT) Q  ; hasn't been treated since going a->c
"RTN","IBAMTED",54,0)
 .D MT^IBAMTBU2 ; create bulletin
"RTN","IBAMTED",55,0)
 ;
"RTN","IBAMTED",56,0)
END K IBARR,IBCANCEL,IBCATCA,IBCATCP,IBDIQ,IBDUZ,IBEFDT,IBMT,IBI,IBC,IBPT,IBT
"RTN","IBAMTED",57,0)
 K DIC,DIQ,DR,DA,VA,VAERR,VAEL,X,X1,X2,XMDUZ,XMTEXT,XMY,XMSUB
"RTN","IBAMTED",58,0)
 ;***
"RTN","IBAMTED",59,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBAMTED" D T1^%ZOSV ;stop rt clock
"RTN","IBAMTED",60,0)
 Q
"RTN","IBAMTED",61,0)
 ;
"RTN","IBAMTED",62,0)
 ;
"RTN","IBAMTED",63,0)
ADD() ; Determine the billable status before adding a Means Test.
"RTN","IBAMTED",64,0)
 S X1=$S($P(DGMTA,"^",3)=3:+DGMTA,1:+$P(DGMTA,"^",7)\1),X2=-1 D C^%DTC
"RTN","IBAMTED",65,0)
 Q $$BIL^DGMTUB(DFN,X)
"RTN","IBAMTED",66,0)
 ;
"RTN","IBAMTED",67,0)
 ;
"RTN","IBAMTED",68,0)
EDIT() ; Determine the billable status before editing a Means Test.
"RTN","IBAMTED",69,0)
 I $P(DGMTP,"^",3)'=1 Q $$CK^DGMTUB(DGMTP)
"RTN","IBAMTED",70,0)
 S X1=+DGMTP,X2=-1 D C^%DTC Q $$BIL^DGMTUB(DFN,X)
"RTN","IBAMTED2")
0^2^B3708640
"RTN","IBAMTED2",1,0)
IBAMTED2 ;ALB/GN - RX COPAY TEST EVENT DRIVER - Z06 EXEMPTION PROCESSING ; 6/5/04 2:32pm
"RTN","IBAMTED2",2,0)
 ;;2.0;INTEGRATED BILLING;**269**;21-MAR-94
"RTN","IBAMTED2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBAMTED2",4,0)
 ;
"RTN","IBAMTED2",5,0)
 ;IB*2*269 add this new API to handle updating IVM converted RX Copay
"RTN","IBAMTED2",6,0)
 ;         Tests via Z06 transmissions.
"RTN","IBAMTED2",7,0)
 ;
"RTN","IBAMTED2",8,0)
 ;
"RTN","IBAMTED2",9,0)
EN N IBAD,IBADDE,IBADD,IBDT,IBEXREA,IBAUTO,IBAX,IBAX1,IBOLDAUT,IBWHER
"RTN","IBAMTED2",10,0)
 N IBEXERR,IBJOB,IBON,IBAFY,IBATYP,IBBDT,IBCANDT,IBCHRG,IBCODA,IBCODP
"RTN","IBAMTED2",11,0)
 N IBCRES,IBDEPEN,IBFAC,IBIL,IBL,IBAST,IBLDT,IBN,IBND,IBNN,IBNOW
"RTN","IBAMTED2",12,0)
 N IBPARNT,IBPARNT1,IBSEQNO,IBSITE,IBUNIT
"RTN","IBAMTED2",13,0)
 N DA,DR,DIC,DIE,I,J,X,Y,X1
"RTN","IBAMTED2",14,0)
 ;
"RTN","IBAMTED2",15,0)
 ;
"RTN","IBAMTED2",16,0)
 ;check if add and/or delete of a Z06 was performed by ^EASPREC7
"RTN","IBAMTED2",17,0)
 I DGMTACT="UPL",+DGMTA,'$G(EASZ06D) D ADD
"RTN","IBAMTED2",18,0)
 I DGMTACT="DEL",+DGMTP,$G(EASZ06D) D DEL
"RTN","IBAMTED2",19,0)
 Q
"RTN","IBAMTED2",20,0)
 ;
"RTN","IBAMTED2",21,0)
ADD ;quit if before start date
"RTN","IBAMTED2",22,0)
 Q:+$$PLUS^IBARXEU0(+DGMTA)<$$STDATE^IBARXEU
"RTN","IBAMTED2",23,0)
 ;
"RTN","IBAMTED2",24,0)
 ;if no patient add patient
"RTN","IBAMTED2",25,0)
 I '+$G(^IBA(354,DFN,0)) D ADDP^IBAUTL6 I $G(IBEXERR) D ^IBAERR  Q
"RTN","IBAMTED2",26,0)
 ;
"RTN","IBAMTED2",27,0)
 ;see if last reason is auto type and save date, used by ADDEX tag
"RTN","IBAMTED2",28,0)
 N IB0 S IB0=$$LSTAC^IBARXEU0(DFN)
"RTN","IBAMTED2",29,0)
 I $L(+IB0)=2,$P(IB0,"^",2)>+DGMTA S IBOLDAUT=$P(IB0,"^",2)
"RTN","IBAMTED2",30,0)
 ;
"RTN","IBAMTED2",31,0)
 ;set IVM converted case to reason: Income>Threshold (Not Exempt)
"RTN","IBAMTED2",32,0)
 S IBEXREA=$O(^IBE(354.2,"ACODE",110,0))
"RTN","IBAMTED2",33,0)
 ;
"RTN","IBAMTED2",34,0)
 ;inactivate most recent exemption test
"RTN","IBAMTED2",35,0)
 D MOSTR^IBARXEU5(+DGMTA,+IBEXREA)
"RTN","IBAMTED2",36,0)
 ;
"RTN","IBAMTED2",37,0)
 ;add new IVM converted test
"RTN","IBAMTED2",38,0)
 D ADDEX^IBAUTL6(+IBEXREA,+DGMTA,1,1,$G(IBOLDAUT))
"RTN","IBAMTED2",39,0)
 ;
"RTN","IBAMTED2",40,0)
 Q
"RTN","IBAMTED2",41,0)
 ;
"RTN","IBAMTED2",42,0)
DEL ; Converted Copay test deleted.  Now inactivate that exemption for
"RTN","IBAMTED2",43,0)
 ; that date & update current exemption status for this date
"RTN","IBAMTED2",44,0)
 ;
"RTN","IBAMTED2",45,0)
 ;force inactivate entries for deleted date
"RTN","IBAMTED2",46,0)
 N IBFORCE
"RTN","IBAMTED2",47,0)
 Q:'$D(^IBA(354.1,"AIVDT",1,DFN,-DGMTP))
"RTN","IBAMTED2",48,0)
 S IBFORCE=+DGMTP
"RTN","IBAMTED2",49,0)
 ;
"RTN","IBAMTED2",50,0)
 ;test in DGMT(408.31) has been deleted at this point, now get
"RTN","IBAMTED2",51,0)
 ;the last test that remains on file in order to activate it
"RTN","IBAMTED2",52,0)
 S IBEXREA=$$STATUS^IBARXEU1(DFN,+DGMTP)
"RTN","IBAMTED2",53,0)
 S IBSTAT=$P($G(^IBE(354.2,+IBEXREA,0)),"^",4)
"RTN","IBAMTED2",54,0)
 ;
"RTN","IBAMTED2",55,0)
 ;if last date is older than 1 year, then cancel prior exemption
"RTN","IBAMTED2",56,0)
 ;cancel prior exemption with a no exemption
"RTN","IBAMTED2",57,0)
 I $$PLUS^IBARXEU0($P(IBEXREA,"^",2))<DT D  Q
"RTN","IBAMTED2",58,0)
 . D ADDEX^IBAUTL6(+$O(^IBE(354.2,"ACODE",210,0)),+DGMTP)
"RTN","IBAMTED2",59,0)
 ;
"RTN","IBAMTED2",60,0)
 ;else, add correct exemption and update current status
"RTN","IBAMTED2",61,0)
 D ADDEX^IBAUTL6(+IBEXREA,+$P(IBEXREA,"^",2))
"RTN","IBAMTED2",62,0)
 Q
"VER")
8.0^22
**INSTALL NAME**
IVM*2.0*99
"BLD",5628,0)
IVM*2.0*99^INCOME VERIFICATION MATCH^0^3040713^y
"BLD",5628,1,0)
^^2^2^3040629^
"BLD",5628,1,1,0)
Correct Z07 process to now send a llinked RX Copay along with the MT to 
"BLD",5628,1,2,0)
the HEC.
"BLD",5628,4,0)
^9.64PA^^
"BLD",5628,"KRN",0)
^9.67PA^8989.52^19
"BLD",5628,"KRN",.4,0)
.4
"BLD",5628,"KRN",.401,0)
.401
"BLD",5628,"KRN",.402,0)
.402
"BLD",5628,"KRN",.403,0)
.403
"BLD",5628,"KRN",.5,0)
.5
"BLD",5628,"KRN",.84,0)
.84
"BLD",5628,"KRN",3.6,0)
3.6
"BLD",5628,"KRN",3.8,0)
3.8
"BLD",5628,"KRN",9.2,0)
9.2
"BLD",5628,"KRN",9.8,0)
9.8
"BLD",5628,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",5628,"KRN",9.8,"NM",1,0)
IVMPTRN9^^0^B27173973
"BLD",5628,"KRN",9.8,"NM","B","IVMPTRN9",1)

"BLD",5628,"KRN",19,0)
19
"BLD",5628,"KRN",19.1,0)
19.1
"BLD",5628,"KRN",101,0)
101
"BLD",5628,"KRN",409.61,0)
409.61
"BLD",5628,"KRN",771,0)
771
"BLD",5628,"KRN",870,0)
870
"BLD",5628,"KRN",8989.51,0)
8989.51
"BLD",5628,"KRN",8989.52,0)
8989.52
"BLD",5628,"KRN",8994,0)
8994
"BLD",5628,"KRN","B",.4,.4)

"BLD",5628,"KRN","B",.401,.401)

"BLD",5628,"KRN","B",.402,.402)

"BLD",5628,"KRN","B",.403,.403)

"BLD",5628,"KRN","B",.5,.5)

"BLD",5628,"KRN","B",.84,.84)

"BLD",5628,"KRN","B",3.6,3.6)

"BLD",5628,"KRN","B",3.8,3.8)

"BLD",5628,"KRN","B",9.2,9.2)

"BLD",5628,"KRN","B",9.8,9.8)

"BLD",5628,"KRN","B",19,19)

"BLD",5628,"KRN","B",19.1,19.1)

"BLD",5628,"KRN","B",101,101)

"BLD",5628,"KRN","B",409.61,409.61)

"BLD",5628,"KRN","B",771,771)

"BLD",5628,"KRN","B",870,870)

"BLD",5628,"KRN","B",8989.51,8989.51)

"BLD",5628,"KRN","B",8989.52,8989.52)

"BLD",5628,"KRN","B",8994,8994)

"BLD",5628,"QUES",0)
^9.62^^
"BLD",5628,"REQB",0)
^9.611^1^1
"BLD",5628,"REQB",1,0)
IVM*2.0*79^1
"BLD",5628,"REQB","B","IVM*2.0*79",1)

"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
99^3040713
"PKG",220,22,1,"PAH",1,1,0)
^^2^2^3040713
"PKG",220,22,1,"PAH",1,1,1,0)
Correct Z07 process to now send a llinked RX Copay along with the MT to 
"PKG",220,22,1,"PAH",1,1,2,0)
the HEC.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","IVMPTRN9")
0^1^B27173973
"RTN","IVMPTRN9",1,0)
IVMPTRN9 ;ALB/KCL/CN/BRM/TDM - HL7 FULL DATA TRANSMISSION (Z07) BUILDER (CONTINUED) ; 06/28/04
"RTN","IVMPTRN9",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**9,11,19,12,21,17,46,50,53,34,49,58,79,99**; 21-OCT-94
"RTN","IVMPTRN9",3,0)
 ;
"RTN","IVMPTRN9",4,0)
 ;
"RTN","IVMPTRN9",5,0)
GOTO ; place to break up the routine
"RTN","IVMPTRN9",6,0)
 ;
"RTN","IVMPTRN9",7,0)
 ;find if the deletion flags were set in the IVM Patient file, and if so, should the deletion indicators be sent?
"RTN","IVMPTRN9",8,0)
 F I="RX","MT","HARDSHIP","DATE OF TEST","LTC" S DELETE(I)=""
"RTN","IVMPTRN9",9,0)
 S IVMPIEN=$$FIND^IVMPLOG(DFN,($E(IVMMTDT,1,3)-1))
"RTN","IVMPTRN9",10,0)
 I IVMPIEN D
"RTN","IVMPTRN9",11,0)
 .S IVMPNODE=$G(^IVM(301.5,IVMPIEN,0))
"RTN","IVMPTRN9",12,0)
 .I $P(IVMPNODE,"^",8)!$P(IVMPNODE,"^",9)!$P(IVMPNODE,"^",10)!$P(IVMPNODE,"^",11) S DELETE("SET")=1
"RTN","IVMPTRN9",13,0)
 .;was the MT deletion flag set, and if so verify that there is no completed MT
"RTN","IVMPTRN9",14,0)
 .I $P(IVMPNODE,"^",8),(TESTTYPE'=1)!(TESTCODE="")!("ACGP"'[TESTCODE) S DELETE("DATE OF TEST")=$P(IVMPNODE,"^",8),DELETE("MT")=1
"RTN","IVMPTRN9",15,0)
 .;
"RTN","IVMPTRN9",16,0)
 .;was the hardship deletion flag set, and if so verify that there is no completed hardship
"RTN","IVMPTRN9",17,0)
 .I $P(IVMPNODE,"^",10),'HARDSHIP D
"RTN","IVMPTRN9",18,0)
 ..S:('DELETE("DATE OF TEST")) DELETE("DATE OF TEST")=$P(IVMPNODE,"^",10)
"RTN","IVMPTRN9",19,0)
 ..S DELETE("HARDSHIP")=1
"RTN","IVMPTRN9",20,0)
 ;
"RTN","IVMPTRN9",21,0)
 ; create (ZMT) Means Test segment 
"RTN","IVMPTRN9",22,0)
 ;
"RTN","IVMPTRN9",23,0)
 S SEQS=$S(TESTTYPE=1:"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,28,29",1:"1,17")
"RTN","IVMPTRN9",24,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^IVMCZMT(DFN,SEQS,IVMMTDT,1,1,.DELETE,1)
"RTN","IVMPTRN9",25,0)
 ;
"RTN","IVMPTRN9",26,0)
 ; create (ZMT) Rx-Copay Test segment
"RTN","IVMPTRN9",27,0)
 I IVMPIEN D
"RTN","IVMPTRN9",28,0)
 .;was the RX deletion flag set, and if so verify that there is no completed test
"RTN","IVMPTRN9",29,0)
 .I $P(IVMPNODE,"^",9),(TESTTYPE'=2)!(TESTCODE="")!("EM"'[TESTCODE) S DELETE("DATE OF TEST")=$P(IVMPNODE,"^",9),DELETE("RX")=1
"RTN","IVMPTRN9",30,0)
 ;
"RTN","IVMPTRN9",31,0)
 N CPTST,LINK
"RTN","IVMPTRN9",32,0)
 S SEQS="1,17",CPTST=+$$LST^DGMTU(DFN,IVMMTDT,2),LINK=$P($G(^DGMT(408.31,CPTST,2)),U,6)
"RTN","IVMPTRN9",33,0)
 I LINK=+$$LST^DGMTU(DFN,IVMMTDT,1) S SEQS="1,2,3,4,9,10,12,15,16,17,18,22,25,26"
"RTN","IVMPTRN9",34,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^IVMCZMT(DFN,SEQS,IVMMTDT,2,2,.DELETE,1)
"RTN","IVMPTRN9",35,0)
 ;
"RTN","IVMPTRN9",36,0)
 ; create (ZMT) Long Term Care Copay Exemption Test segment
"RTN","IVMPTRN9",37,0)
 I IVMPIEN D
"RTN","IVMPTRN9",38,0)
 .; set deletion indicators if LTC test deletion should be transmitted
"RTN","IVMPTRN9",39,0)
 .I $P(IVMPNODE,"^",11) S DELETE("LTC")=1 S:('DELETE("DATE OF TEST")) DELETE("DATE OF TEST")=$P(IVMPNODE,"^",11)
"RTN","IVMPTRN9",40,0)
 ;
"RTN","IVMPTRN9",41,0)
 S SEQS="1,2,3,4,5,7,9,10,12,16,17,18,22,25"
"RTN","IVMPTRN9",42,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^IVMCZMT(DFN,SEQS,IVMMTDT,4,4,.DELETE,1)
"RTN","IVMPTRN9",43,0)
 ;
"RTN","IVMPTRN9",44,0)
 ;if the deletion flags were set in the IVM Patient file, unset them
"RTN","IVMPTRN9",45,0)
 I $G(DELETE("SET")) D
"RTN","IVMPTRN9",46,0)
 .N DATA
"RTN","IVMPTRN9",47,0)
 .S DATA(.08)="",DATA(.09)="",DATA(.1)="",DATA(.11)=""
"RTN","IVMPTRN9",48,0)
 .I $$UPD^DGENDBS(301.5,IVMPIEN,.DATA)
"RTN","IVMPTRN9",49,0)
 ;
"RTN","IVMPTRN9",50,0)
 ; create (ZBT) Beneficiary Travel segment based on last BT Claim
"RTN","IVMPTRN9",51,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZBT($$BTCLM^IVMUFNC4(DFN),"1,2,3,4,7")
"RTN","IVMPTRN9",52,0)
 ;
"RTN","IVMPTRN9",53,0)
 ; create (ZFE) Fee Basis segment(s)
"RTN","IVMPTRN9",54,0)
 D EN^FBHLZFE(DFN,"1,2,3,4,5")
"RTN","IVMPTRN9",55,0)
 F IVMSUB=0:0 S IVMSUB=+$O(FBZFE(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN9",56,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(FBZFE(+IVMSUB))
"RTN","IVMPTRN9",57,0)
 ;
"RTN","IVMPTRN9",58,0)
 ; create (ZSP) Service Period segment
"RTN","IVMPTRN9",59,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZSP(DFN,1,1)
"RTN","IVMPTRN9",60,0)
 ;
"RTN","IVMPTRN9",61,0)
 ; create (OBX) segment for NTR
"RTN","IVMPTRN9",62,0)
 ; CALL PIMS API TO GET NTRARRY OF NTR DATA
"RTN","IVMPTRN9",63,0)
 S GETCUR=$$ENRGET^DGNTAPI1(DFN)
"RTN","IVMPTRN9",64,0)
 I GETCUR D NTROBX^IVMPTRNA(.DGNTARR)
"RTN","IVMPTRN9",65,0)
 I $D(NTROBX) D
"RTN","IVMPTRN9",66,0)
 . S IVMCT=IVMCT+1
"RTN","IVMPTRN9",67,0)
 . S ^TMP("HLS",$J,IVMCT)=$$EN^VAFHLOBX(.NTROBX,,"2,3,5,11,12,14,15,16,17")
"RTN","IVMPTRN9",68,0)
 . I $G(NTROBX(16))'="" S $P(^TMP("HLS",$J,IVMCT),"^",17)=$G(NTROBX(16))
"RTN","IVMPTRN9",69,0)
 . K NTROBX
"RTN","IVMPTRN9",70,0)
 ;
"RTN","IVMPTRN9",71,0)
 ; create (RF1) segment
"RTN","IVMPTRN9",72,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$RF1^IVMPTRNA(DFN)
"RTN","IVMPTRN9",73,0)
 ;
"RTN","IVMPTRN9",74,0)
 Q
"RTN","IVMPTRN9",75,0)
 ;
"RTN","IVMPTRN9",76,0)
GETTYPE(DFN,IVMMTDT,CODE,HARDSHIP,ACTVIEN) ;
"RTN","IVMPTRN9",77,0)
 ;Determines the type of test to include in the Z10.  HEC wants only the
"RTN","IVMPTRN9",78,0)
 ;test that they would consider primary,i.e., preference given to a comptleted means test, even if not currently in effect.
"RTN","IVMPTRN9",79,0)
 ;
"RTN","IVMPTRN9",80,0)
 ;Input:
"RTN","IVMPTRN9",81,0)
 ;  DFN
"RTN","IVMPTRN9",82,0)
 ;  IVMMTDT -date to be the search for the test
"RTN","IVMPTRN9",83,0)
 ;Output:
"RTN","IVMPTRN9",84,0)
 ;  Function value - type of test to send in Z10
"RTN","IVMPTRN9",85,0)
 ;  CODE - status code of test (pass by reference)
"RTN","IVMPTRN9",86,0)
 ;  HARDSHIP - hardship indicator (pass by reference)
"RTN","IVMPTRN9",87,0)
 ;  ACTVIEN - ien of test that should have the associated Income Relations (pass by reference)
"RTN","IVMPTRN9",88,0)
 ;
"RTN","IVMPTRN9",89,0)
 N TESTTYPE,MTNODE,RXNODE,NODE0,NODE2
"RTN","IVMPTRN9",90,0)
 S TESTTYPE=1
"RTN","IVMPTRN9",91,0)
 S (HARDSHIP,CODE,ACTVIEN)=""
"RTN","IVMPTRN9",92,0)
 Q:'$G(IVMMTDT) TESTTYPE
"RTN","IVMPTRN9",93,0)
 Q:'$G(DFN) TESTTYPE
"RTN","IVMPTRN9",94,0)
 ;
"RTN","IVMPTRN9",95,0)
 S MTNODE=$$LST^DGMTU(DFN,IVMMTDT,1) I $E($P(MTNODE,"^",2),1,3)'=$E(IVMMTDT,1,3) S MTNODE=""
"RTN","IVMPTRN9",96,0)
 S RXNODE=$$LST^DGMTU(DFN,IVMMTDT,2) I $E($P(RXNODE,"^",2),1,3)'=$E(IVMMTDT,1,3) S RXNODE=""
"RTN","IVMPTRN9",97,0)
 ;
"RTN","IVMPTRN9",98,0)
 I MTNODE="" S MTNODE=$$FUT^DGMTU(DFN,"",1) I $E($P(MTNODE,"^",2),1,3)'=$E(IVMMTDT,1,3) S MTNODE=""
"RTN","IVMPTRN9",99,0)
 I RXNODE="" S RXNODE=$$FUT^DGMTU(DFN,"",2) I $E($P(RXNODE,"^",2),1,3)'=$E(IVMMTDT,1,3) S RXNODE=""
"RTN","IVMPTRN9",100,0)
 D
"RTN","IVMPTRN9",101,0)
 .;determine which test has the associated income relations
"RTN","IVMPTRN9",102,0)
 .;
"RTN","IVMPTRN9",103,0)
 .I +MTNODE S CODE=$P(MTNODE,"^",4) I CODE'="",("ACGPR"[CODE) S ACTVIEN=+MTNODE Q
"RTN","IVMPTRN9",104,0)
 .I +RXNODE S CODE=$P(RXNODE,"^",4) I CODE'="",("EMI"[CODE) S ACTVIEN=+RXNODE Q
"RTN","IVMPTRN9",105,0)
 .I +MTNODE S ACTVIEN=+MTNODE Q
"RTN","IVMPTRN9",106,0)
 .I +RXNODE S ACTVIEN=+RXNODE Q
"RTN","IVMPTRN9",107,0)
 I ACTVIEN,+MTNODE,+RXNODE D TRANSFER^DGMTU4(DFN,$S((ACTVIEN=+MTNODE):+RXNODE,1:+MTNODE),ACTVIEN)
"RTN","IVMPTRN9",108,0)
 ;
"RTN","IVMPTRN9",109,0)
 ;now find the primary test
"RTN","IVMPTRN9",110,0)
 I '(+MTNODE) G CHKCOPAY
"RTN","IVMPTRN9",111,0)
 S CODE=$P(MTNODE,"^",4)
"RTN","IVMPTRN9",112,0)
 S HARDSHIP=$P($G(^DGMT(408.31,+MTNODE,0)),"^",20)
"RTN","IVMPTRN9",113,0)
 I (CODE="")!("ACGP"'[CODE) S NODE2=$G(^DGMT(408.31,+MTNODE,2)),CODE=$$GETCODE^DGMTH($P(NODE2,"^",3)) I (CODE="")!("ACGP"'[CODE) G CHKCOPAY
"RTN","IVMPTRN9",114,0)
 ;
"RTN","IVMPTRN9",115,0)
 G QGETTYPE
"RTN","IVMPTRN9",116,0)
 ;
"RTN","IVMPTRN9",117,0)
CHKCOPAY ;
"RTN","IVMPTRN9",118,0)
 I '(+RXNODE) G QGETTYPE
"RTN","IVMPTRN9",119,0)
 S CODE=$P(RXNODE,"^",4)
"RTN","IVMPTRN9",120,0)
 I (CODE="")!("EM"'[CODE) S NODE2=$G(^DGMT(408.31,+RXNODE,2)),CODE=$$GETCODE^DGMTH($P(NODE2,"^",3)) I (CODE="")!("EM"'[CODE) G QGETTYPE
"RTN","IVMPTRN9",121,0)
 S TESTTYPE=2
"RTN","IVMPTRN9",122,0)
 ;
"RTN","IVMPTRN9",123,0)
QGETTYPE ;
"RTN","IVMPTRN9",124,0)
 Q TESTTYPE
"RTN","IVMPTRN9",125,0)
 ;
"RTN","IVMPTRN9",126,0)
FILTER(DFN) ; address transmission filter
"RTN","IVMPTRN9",127,0)
 ; Check Bad Address Indicator for a known bad address and
"RTN","IVMPTRN9",128,0)
 ; Scrutinize the Street Address line 1 field for known bad address
"RTN","IVMPTRN9",129,0)
 ; strings based on functionality currently in place in HEC Legacy.
"RTN","IVMPTRN9",130,0)
 ;
"RTN","IVMPTRN9",131,0)
 ;  Input: DFN - ien of the Patient (#2) file
"RTN","IVMPTRN9",132,0)
 ; Output:   0 - filter passed (ok to transmit address)
"RTN","IVMPTRN9",133,0)
 ;           1 - filter failed (do not transmit address)
"RTN","IVMPTRN9",134,0)
 ;
"RTN","IVMPTRN9",135,0)
 N VAPA
"RTN","IVMPTRN9",136,0)
 Q:'$G(DFN) 1  ;DFN missing
"RTN","IVMPTRN9",137,0)
 Q:$$BADADR^DGUTL3(DFN) 1  ;check Bad Address Indicator
"RTN","IVMPTRN9",138,0)
 D ADD^VADPT  ;get patient address
"RTN","IVMPTRN9",139,0)
 ; Street Address Line 1 or Zip Code is <null>
"RTN","IVMPTRN9",140,0)
 Q:($G(VAPA(1))="")!($P($G(VAPA(11)),"^")="") 1
"RTN","IVMPTRN9",141,0)
 ; St Addr Line 1 contains 'UNKNOWN', 'HOMELESS', or 'ADDRESS'
"RTN","IVMPTRN9",142,0)
 Q:(VAPA(1)["UNKNOWN")!(VAPA(1)["HOMELESS")!(VAPA(1)["ADDRESS") 1
"RTN","IVMPTRN9",143,0)
 ; The first two characters of the address is equal to '**'
"RTN","IVMPTRN9",144,0)
 Q:$E(VAPA(1),1,2)="**" 1
"RTN","IVMPTRN9",145,0)
 ; passed all address filters - ok to send
"RTN","IVMPTRN9",146,0)
 Q 0
"VER")
8.0^22
**INSTALL NAME**
DG*5.3*612
"BLD",5648,0)
DG*5.3*612^REGISTRATION^0^3040713^y
"BLD",5648,1,0)
^^2^2^3040706^
"BLD",5648,1,1,0)
FIX LINKED FIELD FOR MT/CP TESTS.  REMOVE LINK WHEN A MT OR RXCT IS 
"BLD",5648,1,2,0)
DELETED.
"BLD",5648,4,0)
^9.64PA^^
"BLD",5648,"ABPKG")
n
"BLD",5648,"KRN",0)
^9.67PA^8989.52^19
"BLD",5648,"KRN",.4,0)
.4
"BLD",5648,"KRN",.401,0)
.401
"BLD",5648,"KRN",.402,0)
.402
"BLD",5648,"KRN",.403,0)
.403
"BLD",5648,"KRN",.5,0)
.5
"BLD",5648,"KRN",.84,0)
.84
"BLD",5648,"KRN",3.6,0)
3.6
"BLD",5648,"KRN",3.8,0)
3.8
"BLD",5648,"KRN",9.2,0)
9.2
"BLD",5648,"KRN",9.8,0)
9.8
"BLD",5648,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",5648,"KRN",9.8,"NM",1,0)
DGMTA^^0^B34534200
"BLD",5648,"KRN",9.8,"NM","B","DGMTA",1)

"BLD",5648,"KRN",19,0)
19
"BLD",5648,"KRN",19.1,0)
19.1
"BLD",5648,"KRN",101,0)
101
"BLD",5648,"KRN",409.61,0)
409.61
"BLD",5648,"KRN",771,0)
771
"BLD",5648,"KRN",870,0)
870
"BLD",5648,"KRN",8989.51,0)
8989.51
"BLD",5648,"KRN",8989.52,0)
8989.52
"BLD",5648,"KRN",8994,0)
8994
"BLD",5648,"KRN","B",.4,.4)

"BLD",5648,"KRN","B",.401,.401)

"BLD",5648,"KRN","B",.402,.402)

"BLD",5648,"KRN","B",.403,.403)

"BLD",5648,"KRN","B",.5,.5)

"BLD",5648,"KRN","B",.84,.84)

"BLD",5648,"KRN","B",3.6,3.6)

"BLD",5648,"KRN","B",3.8,3.8)

"BLD",5648,"KRN","B",9.2,9.2)

"BLD",5648,"KRN","B",9.8,9.8)

"BLD",5648,"KRN","B",19,19)

"BLD",5648,"KRN","B",19.1,19.1)

"BLD",5648,"KRN","B",101,101)

"BLD",5648,"KRN","B",409.61,409.61)

"BLD",5648,"KRN","B",771,771)

"BLD",5648,"KRN","B",870,870)

"BLD",5648,"KRN","B",8989.51,8989.51)

"BLD",5648,"KRN","B",8989.52,8989.52)

"BLD",5648,"KRN","B",8994,8994)

"BLD",5648,"QUES",0)
^9.62^^
"BLD",5648,"REQB",0)
^9.611^1^1
"BLD",5648,"REQB",1,0)
DG*5.3*535^1
"BLD",5648,"REQB","B","DG*5.3*535",1)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
612^3040713
"PKG",5,22,1,"PAH",1,1,0)
^^2^2^3040713
"PKG",5,22,1,"PAH",1,1,1,0)
FIX LINKED FIELD FOR MT/CP TESTS.  REMOVE LINK WHEN A MT OR RXCT IS 
"PKG",5,22,1,"PAH",1,1,2,0)
DELETED.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","DGMTA")
0^1^B34534200
"RTN","DGMTA",1,0)
DGMTA ;ALB/RMO/CAW/LD/SCG/AEG/PHH - Add a New Means Test ; 07/06/2004
"RTN","DGMTA",2,0)
 ;;5.3;Registration;**33,45,137,166,177,182,290,344,332,433,458,535,612**;Aug 13, 1993
"RTN","DGMTA",3,0)
 ;
"RTN","DGMTA",4,0)
EN ;Entry point to add a new means test
"RTN","DGMTA",5,0)
 N DGMDOD S DGMDOD=""
"RTN","DGMTA",6,0)
 S DGADDF=1
"RTN","DGMTA",7,0)
 I $D(DGMTDFN)#2 D UNLOCK^DGMTUTL(DGMTDFN) K DGMTDFN
"RTN","DGMTA",8,0)
 S DIC="^DPT(",DIC(0)="AEMQ" W ! D ^DIC K DIC G Q:Y<0 S (DFN,DGMTDFN)=+Y
"RTN","DGMTA",9,0)
 I $P($G(^DPT(DFN,.35)),U)'="" S DGMDOD=$P(^DPT(DFN,.35),U)
"RTN","DGMTA",10,0)
 I $G(DGMDOD) W !,"Patient died on: ",$$FMTE^XLFDT(DGMDOD,"1D") Q
"RTN","DGMTA",11,0)
 ;
"RTN","DGMTA",12,0)
 ; check if income test in progress
"RTN","DGMTA",13,0)
 D CKUPLOAD^IVMCUPL(DFN)
"RTN","DGMTA",14,0)
 ;
"RTN","DGMTA",15,0)
 ; obtain lock used to synchronize local MT/CT options with income test upload
"RTN","DGMTA",16,0)
 I $$LOCK^DGMTUTL(DFN)
"RTN","DGMTA",17,0)
 ;
"RTN","DGMTA",18,0)
 I DGMTYPT=1 N DGDOM1 D EN^DGMTR I 'DGREQF,'$G(DGDOM1) W !,*7,"A means test can only be added for patients who require one.",! K DGDOM1 G EN
"RTN","DGMTA",19,0)
 ;
"RTN","DGMTA",20,0)
 N FUTMT S FUTMT=$$FUT^DGMTU(DFN,"",DGMTYPT) I FUTMT D FTST G EN
"RTN","DGMTA",21,0)
 ;
"RTN","DGMTA",22,0)
 ;if a test was auto-completed, DGADDF gets set to 0
"RTN","DGMTA",23,0)
 I 'DGADDF W !!,*7,"A means test already exists and is in effect" G EN
"RTN","DGMTA",24,0)
 ;
"RTN","DGMTA",25,0)
 K:DGMTYPT=1 DGDOM1
"RTN","DGMTA",26,0)
 I DGMTYPT=2 D EN^DGMTCOR I 'DGMTCOR S I=$P($T(WHY+DGWRT),";",3,99) W !!,*7,"A copay exemption test can only be added for applicable veterans.",!,I G EN
"RTN","DGMTA",27,0)
 S DGLDT=$$LST^DGMTU(DFN,"",DGMTYPT),DGLD=$P(DGLDT,U,2),DGLDYR=$E(DGLD,1,3)_"1231"
"RTN","DGMTA",28,0)
 ;
"RTN","DGMTA",29,0)
DT S %DT("A")="DATE OF TEST: ",%DT="AEX",%DT(0)="-NOW",%DT("B")="NOW" W ! D ^%DT K %DT G Q:Y<0 S DGMTDT=Y
"RTN","DGMTA",30,0)
 I DGMTDT<$S(DGMTYPT=1:2860701,1:2921029) W !?3,*7,"The date of test cannot be before "_$S(DGMTYPT=1:"7/1/1986.",1:"10/29/1992.") G DT
"RTN","DGMTA",31,0)
 I DGLD,DGMTDT<DGLD W !?3,*7,"The date of test cannot be before the last date of test on " S Y=DGLD X ^DD("DD") W Y,"." G DT
"RTN","DGMTA",32,0)
 I DGLD S X1=DGMTDT,X2=DGLD D ^%DTC I X<365,DGMTDT'>DGLDYR D  G EN
"RTN","DGMTA",33,0)
 .W !?3,*7,"An annual date of test already exists on " S Y=DGLD X ^DD("DD") W Y,"."
"RTN","DGMTA",34,0)
 .S DGTTYP=$S(DGMTYPT=1:"Means ",1:"Copay Exemption ")
"RTN","DGMTA",35,0)
 .W !,$S($P($G(^DG(408.34,+$P($G(^DGMT(408.31,+DGLDT,0)),U,23),0)),U)="VAMC":"   Use the 'Edit an Existing "_DGTTYP_"Test' Option.",1:"   Use the 'View a Past Means Test' Option.")
"RTN","DGMTA",36,0)
 ;
"RTN","DGMTA",37,0)
 ;Means Test cannot be added for patient on a DOM ward on date of test
"RTN","DGMTA",38,0)
 I DGMTYPT=2 G PRINT
"RTN","DGMTA",39,0)
 N VAINDT,VADMVT,DGDOM,DGDOM1
"RTN","DGMTA",40,0)
 S VAINDT=DGMTDT
"RTN","DGMTA",41,0)
 D DOM1^DGMTR I $G(DGDOM1) D  K VAINDT,VADMVT,DGDOM,DGDOM1 G EN
"RTN","DGMTA",42,0)
 .W !,*7,"A Means Test cannot be added for patients on a DOM ward on date of test.",!
"RTN","DGMTA",43,0)
 K VAINDT,VADMVT,DGDOM,DGDOM1
"RTN","DGMTA",44,0)
 ;
"RTN","DGMTA",45,0)
 ;A warning message is displayed if last means test for patient is
"RTN","DGMTA",46,0)
 ;from a prior year and has a status of required.  The user is given
"RTN","DGMTA",47,0)
 ;the option to continue or stop adding a new means test.
"RTN","DGMTA",48,0)
 N %
"RTN","DGMTA",49,0)
 I DGLD,DGMTDT>DGLDYR,$P(DGLDT,"^",4)="R" D  Q:%=-1  I %=2 K % G EN
"RTN","DGMTA",50,0)
 .W !?3,*7,"WARNING - last means test on " S Y=DGLD X ^DD("DD") W Y," has a status of required."
"RTN","DGMTA",51,0)
DT2 .W !?3,"Do you still want to continue adding new test"
"RTN","DGMTA",52,0)
 .S %=2 D YN^DICN
"RTN","DGMTA",53,0)
 .I %=0 W !?3,"Answer 'Y'es to continue adding new test." G DT2
"RTN","DGMTA",54,0)
 .Q 
"RTN","DGMTA",55,0)
 K %
"RTN","DGMTA",56,0)
 ;
"RTN","DGMTA",57,0)
PRINT I "^P^A^C^G^"[(U_$P(DGLDT,U,4)_U) S %=1 W !,"Do you wish to print the prior means test" D YN^DICN G:%=-1 Q I %Y["?" W !!,"This will print the prior means test information.",! G PRINT
"RTN","DGMTA",58,0)
 I $G(%)=1 S DGX=DGMTDT,DGMTDT=DGLD,DGMTI=+DGLDT,DGOPT="" D DEV^DGMTP,CLOSE^DGUTQ S DGMTDT=DGX K DGX
"RTN","DGMTA",59,0)
 D ADD G EN:DGMTI<0
"RTN","DGMTA",60,0)
 S DGMTACT="ADD",DGMTROU="EN^DGMTA" G EN^DGMTSC
"RTN","DGMTA",61,0)
 ;
"RTN","DGMTA",62,0)
Q K DA,DFN,DGADDF,DGBL,DGFL,DGFLD,DGIRO,DGLD,DGLDT,DGLDYR,DGMTACT,DGMTCOR,DGMTDT,DGMTI,DGMTROU,DGREQF,DGTTYP,DGMTYPT,DGVI,DGVO,X,X1,X2,Y
"RTN","DGMTA",63,0)
 ;
"RTN","DGMTA",64,0)
 ; release lock used to synchronize local MT/CT options with income test upload
"RTN","DGMTA",65,0)
 I $D(DGMTDFN)#2 D UNLOCK^DGMTUTL(DGMTDFN) K DGMTDFN
"RTN","DGMTA",66,0)
 Q
"RTN","DGMTA",67,0)
 ;
"RTN","DGMTA",68,0)
ADD ;Add means test
"RTN","DGMTA",69,0)
 ; Input  -- DFN     Patient IEN
"RTN","DGMTA",70,0)
 ;           DGMTDT  Date
"RTN","DGMTA",71,0)
 ;           DGMTYPT Type of Test 1=MT 2=COPAY 4=LTC
"RTN","DGMTA",72,0)
 ; Output -- DGMTI   Annual Means/Copay/LTC Test IEN
"RTN","DGMTA",73,0)
 N DA,DD,DIC,DIK,DINUM,DLAYGO,DO,DS,X,D0,DGSITE
"RTN","DGMTA",74,0)
 ;
"RTN","DGMTA",75,0)
 ; obtain lock used to synchronize local MT/CT options with income test upload
"RTN","DGMTA",76,0)
 I $$LOCK^DGMTUTL(DFN) E  Q
"RTN","DGMTA",77,0)
 ;
"RTN","DGMTA",78,0)
 ; Check for Linked test and don't loose the link.
"RTN","DGMTA",79,0)
 S LINK="",CURIEN=+$$LST^DGMTU(DFN,DGMTDT,DGMTYPT)
"RTN","DGMTA",80,0)
 I CURIEN S LINK=$P($G(^DGMT(408.31,CURIEN,2)),U,6)
"RTN","DGMTA",81,0)
 ;
"RTN","DGMTA",82,0)
 S DGSITE=$$GETSITE^DGMTU4(.DUZ)
"RTN","DGMTA",83,0)
 S X=DGMTDT,(DIC,DIK)="^DGMT(408.31,",DIC(0)="L",DLAYGO=408.31
"RTN","DGMTA",84,0)
 ;
"RTN","DGMTA",85,0)
 ; The DIC("DR") string is built in this specific order so that
"RTN","DGMTA",86,0)
 ; all triggers and "M" x-refs fire correctly.  Should not be
"RTN","DGMTA",87,0)
 ; modified without an in-depth review of DD of file #408.31.
"RTN","DGMTA",88,0)
 ;
"RTN","DGMTA",89,0)
 I DGMTYPT=2 D
"RTN","DGMTA",90,0)
 .S DIC("DR")="2////"_(DGMTYPT'=4)_";2.05////"_DGSITE_";2.06////"_LINK
"RTN","DGMTA",91,0)
 .S DIC("DR")=DIC("DR")_";.02////"_DFN_";.019////"_DGMTYPT_";.23////1"
"RTN","DGMTA",92,0)
 E  D
"RTN","DGMTA",93,0)
 .S DIC("DR")="2////"_(DGMTYPT'=4)_";2.05////"_DGSITE_";2.06////"_LINK
"RTN","DGMTA",94,0)
 .S DIC("DR")=DIC("DR")_";.019////"_DGMTYPT_";.02////"_DFN_";.23////1"
"RTN","DGMTA",95,0)
 K DD,DO
"RTN","DGMTA",96,0)
 D FILE^DICN S DGMTI=+Y
"RTN","DGMTA",97,0)
 ;
"RTN","DGMTA",98,0)
 ; release lock used to synchronize local MT/CT options with income test upload
"RTN","DGMTA",99,0)
 D UNLOCK^DGMTUTL(DFN)
"RTN","DGMTA",100,0)
 ;
"RTN","DGMTA",101,0)
ADDQ Q
"RTN","DGMTA",102,0)
 ;
"RTN","DGMTA",103,0)
FTST ; Build message for future tests that are added to the system, but
"RTN","DGMTA",104,0)
 ; were not performed by the VAMC trying to add a new MT.
"RTN","DGMTA",105,0)
 N SITE,DGMTYPT,DGTTYP,SRC,SCT
"RTN","DGMTA",106,0)
 S SCT=$P(^DGMT(408.31,+FUTMT,2),U,5),SITE=$$INST^DGENU()
"RTN","DGMTA",107,0)
 S DGMTYPT=$P(^DGMT(408.31,+FUTMT,0),U,19)
"RTN","DGMTA",108,0)
 S DGTTYP=$S(DGMTYPT=1:"Means ",1:"Copay Exemption ")
"RTN","DGMTA",109,0)
 W !?3,*7,"A future test already exists on "
"RTN","DGMTA",110,0)
 S Y=$P(FUTMT,U,2) X ^DD("DD") W Y,"."
"RTN","DGMTA",111,0)
 ; This site performed the MT
"RTN","DGMTA",112,0)
 I SITE=SCT D
"RTN","DGMTA",113,0)
 .W !?3,"Use the 'Edit an Existing "_DGTTYP_"Test' Option."
"RTN","DGMTA",114,0)
 ;
"RTN","DGMTA",115,0)
 ; The MT was added by another VAMC
"RTN","DGMTA",116,0)
 I SITE'=SCT D
"RTN","DGMTA",117,0)
 .S SRC=$P(FUTMT,U,5)
"RTN","DGMTA",118,0)
 .I SCT W !?3,"The "_DGTTYP_"Test was conducted at Site: ",SCT
"RTN","DGMTA",119,0)
 .W !?3,"Please contact "
"RTN","DGMTA",120,0)
 .W $S($D(^DIC(4,+SCT,0)):$P(^DIC(4,+SCT,0),U),SRC=2:"IVM",SRC=3:"the HEC",1:"the site")
"RTN","DGMTA",121,0)
 .W ",",!?3,"if it is necessary to edit the test."
"RTN","DGMTA",122,0)
 Q
"RTN","DGMTA",123,0)
WHY ;Why Copay Test cannot be added
"RTN","DGMTA",124,0)
 ;;Patient is not a veteran.
"RTN","DGMTA",125,0)
 ;;Patient does not have a Primary Eligibility Code.
"RTN","DGMTA",126,0)
 ;;Patient has a Primary or Other Eligibility Code of SC>50%, AA, HB or NSC,Pension
"RTN","DGMTA",127,0)
 ;;Means Test options must be used instead of Copay options.
"RTN","DGMTA",128,0)
 ;;Patient is receiving Aid and Attendance, automatically exempted.
"RTN","DGMTA",129,0)
 ;;Patient is receiving Housebound Benefits, automatically exempted.
"RTN","DGMTA",130,0)
 ;;Patient is receiving a VA Pension, automatically exempted.
"RTN","DGMTA",131,0)
 ;;Patient is in a DOM ward, automatically exempted.
"RTN","DGMTA",132,0)
 ;;Patient is an inpatient, automatically exempted.
"VER")
8.0^22
**END**
**END**
