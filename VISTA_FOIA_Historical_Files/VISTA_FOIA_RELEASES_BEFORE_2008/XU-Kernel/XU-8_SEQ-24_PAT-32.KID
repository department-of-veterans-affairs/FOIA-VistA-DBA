Released XU*8*32 SEQ #24
Extracted from mail message
**KIDS**:XU*8.0*32^

**INSTALL NAME**
XU*8.0*32
"BLD",44,0)
XU*8.0*32^KERNEL^0^2960516^n
"BLD",44,1,0)
^^44^44^2960516^
"BLD",44,1,1,0)
These routines have been patched in support of the RPC Broker 1T19.
"BLD",44,1,2,0)
 
"BLD",44,1,3,0)
routine     new checksum
"BLD",44,1,4,0)
XUS3           5732668
"BLD",44,1,5,0)
XUSRB          2741649
"BLD",44,1,6,0)
ZTER          18166218
"BLD",44,1,7,0)
 
"BLD",44,1,8,0)
========================================================================= 
"BLD",44,1,9,0)
Installation:
"BLD",44,1,10,0)
 
"BLD",44,1,11,0)
  1.  These routines are usually mapped on systems that allow mapping,
"BLD",44,1,12,0)
      so you will need to disable mapping for the effected routines.
"BLD",44,1,13,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"BLD",44,1,14,0)
      option will load the KIDS package onto your system.
"BLD",44,1,15,0)
  3.  The patch has now been loaded into a Transport global on your
"BLD",44,1,16,0)
      system. You now need to use KIDS to install the Transport global.
"BLD",44,1,17,0)
      On the KIDS menu, under the 'Installation' menu, use the following
"BLD",44,1,18,0)
      options:
"BLD",44,1,19,0)
         Print Transport Global
"BLD",44,1,20,0)
         Compare Transport Global to Current System
"BLD",44,1,21,0)
         Verify Checksums in Transport Global
"BLD",44,1,22,0)
         Backup a Transport Global
"BLD",44,1,23,0)
  4.  Inhibit users from login into system. 
"BLD",44,1,24,0)
  5. Inhibit users from login into the system. (If you install when few
"BLD",44,1,25,0)
    user are on the system and the possibility of some CLOBER errors is
"BLD",44,1,26,0)
    acceptable then users can stay on the system.)
"BLD",44,1,27,0)
  6.  On the KIDS menu, under the 'Installation' menu, use the following
"BLD",44,1,28,0)
      options:
"BLD",44,1,29,0)
         Install Package(s)  'XU*8.0*23'
"BLD",44,1,30,0)
  7.  MSM Sites - Answer YES to the question 'Want to MOVE routines to
"BLD",44,1,31,0)
      other CPUs?'. Enter the names of your Compute and Print server(s).
"BLD",44,1,32,0)
  8. After installing this patch, you need to move several routines from 
"BLD",44,1,33,0)
     your productions account to the manager account:
"BLD",44,1,34,0)
     ZTER
"BLD",44,1,35,0)
     and in the manager account rename
"BLD",44,1,36,0)
     ZTER       to %ZTER
"BLD",44,1,37,0)
     
"BLD",44,1,38,0)
       Example: ZL ZOSVVXD ZS %ZOSV
"BLD",44,1,39,0)
       
"BLD",44,1,40,0)
  9.  AXP Sites, after patch has installed, rebuild your map set.
"BLD",44,1,41,0)
 10.  Enable user's login.
"BLD",44,1,42,0)
     
"BLD",44,1,43,0)
 
"BLD",44,1,44,0)
=========================================================================
"BLD",44,4,0)
^9.64PA^^
"BLD",44,"KRN",0)
^9.67PA^8994^15
"BLD",44,"KRN",.4,0)
.4
"BLD",44,"KRN",.401,0)
.401
"BLD",44,"KRN",.402,0)
.402
"BLD",44,"KRN",.403,0)
.403
"BLD",44,"KRN",.5,0)
.5
"BLD",44,"KRN",.84,0)
.84
"BLD",44,"KRN",3.6,0)
3.6
"BLD",44,"KRN",9.2,0)
9.2
"BLD",44,"KRN",9.8,0)
9.8
"BLD",44,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",44,"KRN",9.8,"NM",1,0)
XUS3^^0^B10638084
"BLD",44,"KRN",9.8,"NM",2,0)
ZTER^^0^B24145496
"BLD",44,"KRN",9.8,"NM",3,0)
XUSRB^^0^B6498085
"BLD",44,"KRN",9.8,"NM","B","XUS3",1)

"BLD",44,"KRN",9.8,"NM","B","XUSRB",3)

"BLD",44,"KRN",9.8,"NM","B","ZTER",2)

"BLD",44,"KRN",19,0)
19
"BLD",44,"KRN",19.1,0)
19.1
"BLD",44,"KRN",101,0)
101
"BLD",44,"KRN",409.61,0)
409.61
"BLD",44,"KRN",8994,0)
8994
"BLD",44,"KRN",8995,0)
8995
"BLD",44,"KRN","B",.4,.4)

"BLD",44,"KRN","B",.401,.401)

"BLD",44,"KRN","B",.402,.402)

"BLD",44,"KRN","B",.403,.403)

"BLD",44,"KRN","B",.5,.5)

"BLD",44,"KRN","B",.84,.84)

"BLD",44,"KRN","B",3.6,3.6)

"BLD",44,"KRN","B",9.2,9.2)

"BLD",44,"KRN","B",9.8,9.8)

"BLD",44,"KRN","B",19,19)

"BLD",44,"KRN","B",19.1,19.1)

"BLD",44,"KRN","B",101,101)

"BLD",44,"KRN","B",409.61,409.61)

"BLD",44,"KRN","B",8994,8994)

"BLD",44,"KRN","B",8995,8995)

"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^XUDOCV7 NEW FEATURES
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^2950703^2951018^4
"PKG",3,22,1,"PAH",1,0)
32^2960516
"PKG",3,22,1,"PAH",1,1,0)
^^44^44^2960516
"PKG",3,22,1,"PAH",1,1,1,0)
These routines have been patched in support of the RPC Broker 1T19.
"PKG",3,22,1,"PAH",1,1,2,0)
 
"PKG",3,22,1,"PAH",1,1,3,0)
routine     new checksum
"PKG",3,22,1,"PAH",1,1,4,0)
XUS3           5732668
"PKG",3,22,1,"PAH",1,1,5,0)
XUSRB          2741649
"PKG",3,22,1,"PAH",1,1,6,0)
ZTER          18166218
"PKG",3,22,1,"PAH",1,1,7,0)
 
"PKG",3,22,1,"PAH",1,1,8,0)
========================================================================= 
"PKG",3,22,1,"PAH",1,1,9,0)
Installation:
"PKG",3,22,1,"PAH",1,1,10,0)
 
"PKG",3,22,1,"PAH",1,1,11,0)
  1.  These routines are usually mapped on systems that allow mapping,
"PKG",3,22,1,"PAH",1,1,12,0)
      so you will need to disable mapping for the effected routines.
"PKG",3,22,1,"PAH",1,1,13,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"PKG",3,22,1,"PAH",1,1,14,0)
      option will load the KIDS package onto your system.
"PKG",3,22,1,"PAH",1,1,15,0)
  3.  The patch has now been loaded into a Transport global on your
"PKG",3,22,1,"PAH",1,1,16,0)
      system. You now need to use KIDS to install the Transport global.
"PKG",3,22,1,"PAH",1,1,17,0)
      On the KIDS menu, under the 'Installation' menu, use the following
"PKG",3,22,1,"PAH",1,1,18,0)
      options:
"PKG",3,22,1,"PAH",1,1,19,0)
         Print Transport Global
"PKG",3,22,1,"PAH",1,1,20,0)
         Compare Transport Global to Current System
"PKG",3,22,1,"PAH",1,1,21,0)
         Verify Checksums in Transport Global
"PKG",3,22,1,"PAH",1,1,22,0)
         Backup a Transport Global
"PKG",3,22,1,"PAH",1,1,23,0)
  4.  Inhibit users from login into system. 
"PKG",3,22,1,"PAH",1,1,24,0)
  5. Inhibit users from login into the system. (If you install when few
"PKG",3,22,1,"PAH",1,1,25,0)
    user are on the system and the possibility of some CLOBER errors is
"PKG",3,22,1,"PAH",1,1,26,0)
    acceptable then users can stay on the system.)
"PKG",3,22,1,"PAH",1,1,27,0)
  6.  On the KIDS menu, under the 'Installation' menu, use the following
"PKG",3,22,1,"PAH",1,1,28,0)
      options:
"PKG",3,22,1,"PAH",1,1,29,0)
         Install Package(s)  'XU*8.0*23'
"PKG",3,22,1,"PAH",1,1,30,0)
  7.  MSM Sites - Answer YES to the question 'Want to MOVE routines to
"PKG",3,22,1,"PAH",1,1,31,0)
      other CPUs?'. Enter the names of your Compute and Print server(s).
"PKG",3,22,1,"PAH",1,1,32,0)
  8. After installing this patch, you need to move several routines from 
"PKG",3,22,1,"PAH",1,1,33,0)
     your productions account to the manager account:
"PKG",3,22,1,"PAH",1,1,34,0)
     ZTER
"PKG",3,22,1,"PAH",1,1,35,0)
     and in the manager account rename
"PKG",3,22,1,"PAH",1,1,36,0)
     ZTER       to %ZTER
"PKG",3,22,1,"PAH",1,1,37,0)
     
"PKG",3,22,1,"PAH",1,1,38,0)
       Example: ZL ZOSVVXD ZS %ZOSV
"PKG",3,22,1,"PAH",1,1,39,0)
       
"PKG",3,22,1,"PAH",1,1,40,0)
  9.  AXP Sites, after patch has installed, rebuild your map set.
"PKG",3,22,1,"PAH",1,1,41,0)
 10.  Enable user's login.
"PKG",3,22,1,"PAH",1,1,42,0)
     
"PKG",3,22,1,"PAH",1,1,43,0)
 
"PKG",3,22,1,"PAH",1,1,44,0)
=========================================================================
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","XUS3")
0^1^B10638084
"RTN","XUS3",1,0)
XUS3 ;SF-ISC/STAFF - SIGNON ;5/14/96  14:29
"RTN","XUS3",2,0)
 ;;8.0;KERNEL;**32**;Jul 10, 1995
"RTN","XUS3",3,0)
TT ;Terminal Type select
"RTN","XUS3",4,0)
 Q:$D(XUIOP(1))
"RTN","XUS3",5,0)
 S DIC("B")=$S($P(XUIOP,";",2)]"":$P(XUIOP,";",2),$D(^%ZIS(1,XUDEV,"SUBTYPE")):+^("SUBTYPE"),1:"C-VT100")
"RTN","XUS3",6,0)
 S DIC="^%ZIS(2,",DIC(0)="AEMQO",DIC("S")="I $P(^(0),U,2)" D ^DIC K DIC Q:Y<1
"RTN","XUS3",7,0)
 ;M/11 & M/VX sites may want to remove the ; from the next line.
"RTN","XUS3",8,0)
 ;S J=$P(Y,U,2) I $D(^%IS(0,"SUB",J)) S $P(^%IS($I,1),U,3)=J
"RTN","XUS3",9,0)
 S ^VA(200,DUZ,1.2)=+Y,$P(XUIOP,";",2)=$P(Y,U,2) Q
"RTN","XUS3",10,0)
 ;
"RTN","XUS3",11,0)
WAIT ;See if long enough after locking device.
"RTN","XUS3",12,0)
 S X=XUT,XUT=0,H=$P(^DISV("XU",XUDEV),U,2),T=$P(H,",",2)+$P(XOPT,U,3),H=T\86400+H,T=T#86400 Q:H<$H  I +$H=H Q:$P($H,",",2)'<T
"RTN","XUS3",13,0)
LOCK S XUT=X,XMB="XUSLOCK",XMB(1)=$I,XMB(2)=+XUT,XMB(3)=$P(XUVOL,U,1)_","_XUCI D ^XMB
"RTN","XUS3",14,0)
Q Q
"RTN","XUS3",15,0)
 ;
"RTN","XUS3",16,0)
SEC ;Check device's security and time lock.
"RTN","XUS3",17,0)
 Q:$P(XOPT,"^",11)
"RTN","XUS3",18,0)
 S %A=$P(XUSER(0),U,4) I $D(^%ZIS(1,XUDEV,95)),^(95)]"",%A'="@" S %H=$P(^(95),U) F Y=1:1 I %A[$E(%H,Y) Q:Y'>$L(%H)  S XMB="XUSECURITY",XMB(1)=$P(XUSER(0),U,1),XMB(2)=$I,XMB(3)=^(95),XMB(4)=%A D ^XMB S XUM=10 G Q
"RTN","XUS3",19,0)
 S %A=$P($G(^%ZIS(1,XUDEV,"TIME")),U) Q:%A=""  S Y=$P($H,",",2),%H=Y\60#60+(Y\3600*100),Y=$P(%A,"-",2)
"RTN","XUS3",20,0)
 I Y'<%A G NOPE:%H'>Y&(%H'<%A) Q
"RTN","XUS3",21,0)
 Q:%H'>%A&(%H'<Y)
"RTN","XUS3",22,0)
NOPE S XMB="XUSTIME",XMB(1)=$I,XMB(2)=$P(XUSER(0),U,1),XMB(4)=%A,XUM=13,XUM(0)=%A D ^XMB
"RTN","XUS3",23,0)
 Q
"RTN","XUS3",24,0)
NO() ;;Fail
"RTN","XUS3",25,0)
 N XUEX
"RTN","XUS3",26,0)
 S XUT=$G(XUT)+1
"RTN","XUS3",27,0)
 I '$D(XGWIN) W !,"Device: ",$I,!,$$TXT(XUM),!
"RTN","XUS3",28,0)
 I $D(XGWIN) D ^XGLMSG("W",$$TXT(XUM))
"RTN","XUS3",29,0)
 I ('XUEX)&(XUT<$P(XOPT,U,2)) Q 0 ;Continue
"RTN","XUS3",30,0)
 I 'XUEX&(XUM-7) D
"RTN","XUS3",31,0)
 . I $D(XGWIN) D ^XGLMSG("I",$$TXT(7))
"RTN","XUS3",32,0)
 . I '$D(XGWIN) W !,$$TXT(7)
"RTN","XUS3",33,0)
 I XUF S X1=IOS,X2=DT F I=1:1:XUF(.2) S X=XUF(I) D EN^XUSHSHP S XUF(I)=X
"RTN","XUS3",34,0)
 I '$D(XGWIN)&'XUEX D ^XUSTZ
"RTN","XUS3",35,0)
 H 4
"RTN","XUS3",36,0)
 Q XUEX
"RTN","XUS3",37,0)
TXT(%) ;
"RTN","XUS3",38,0)
 S %=$T(ZZ+%) S:'$D(XUEX) XUEX=$P(%,";",3)
"RTN","XUS3",39,0)
 S %=$P(%,";",4,9) I %["|" S %=$P(%,"|",1)_$G(XUM(0))_$P(%,"|",2)
"RTN","XUS3",40,0)
 Q %
"RTN","XUS3",41,0)
ZZ ;;Halt;Error Messages
"RTN","XUS3",42,0)
1 ;;1;Signons not currently allowed on this processor.
"RTN","XUS3",43,0)
2 ;;1;Maximum number of users already signed on to this processor.
"RTN","XUS3",44,0)
3 ;;1;This device has not been defined to the system -- contact system manager.
"RTN","XUS3",45,0)
4 ;;0;Not a valid ACCESS CODE/VERIFY CODE pair.
"RTN","XUS3",46,0)
5 ;;0;No Access Allowed for this User.
"RTN","XUS3",47,0)
6 ;;0;Invalid device password.
"RTN","XUS3",48,0)
7 ;;0;Device locked due to too many invalid sign-on attempts.
"RTN","XUS3",49,0)
8 ;;1;This device is out of service.
"RTN","XUS3",50,0)
9 ;;0;*** MULTIPLE SIGN-ONS NOT ALLOWED ***"
"RTN","XUS3",51,0)
10 ;;1;You don't have access to this device.
"RTN","XUS3",52,0)
11 ;;0;Your access code has been terminated.  Please see your site manager 
"RTN","XUS3",53,0)
12 ;;0;VERIFY CODE MUST be changed before continued use.
"RTN","XUS3",54,0)
13 ;;1;This device may only be used outside of this time frame |
"RTN","XUS3",55,0)
14 ;;0;'|' is not a valid UCI!
"RTN","XUS3",56,0)
15 ;;0;'|' is not a valid program name!
"RTN","XUSRB")
0^3^B6498085
"RTN","XUSRB",1,0)
XUSRB ;ISCSF/RWF - Request Broker ;05/16/96  09:00
"RTN","XUSRB",2,0)
 ;;8.0;KERNEL;**11,16,28,32**;Jul 05, 1995
"RTN","XUSRB",3,0)
 Q  ;No entry from top
"RTN","XUSRB",4,0)
 ;
"RTN","XUSRB",5,0)
 ;DATA BROKER calls, First parameter is always call-by-reference
"RTN","XUSRB",6,0)
VALIDAV(RESULT,AVCODE) ;Check a users access
"RTN","XUSRB",7,0)
 ;Return R(0)=DUZ, R(1)=(1=Invalid code),(0=OK)
"RTN","XUSRB",8,0)
 ;  R(2)=verify needs changing, R(3)=Message
"RTN","XUSRB",9,0)
 N X,XUSER,XUF,XUNOW,XUDEV,XUM,XUMSG,%1,VCOK K DUZ
"RTN","XUSRB",10,0)
 S AVCODE=$$DECRYP^XUSRB1(AVCODE),DUZ=0,VCOK=0
"RTN","XUSRB",11,0)
 S U="^",XUNOW=$$NOW^XLFDT(),DT=$P(XUNOW,"."),XUDEV=0
"RTN","XUSRB",12,0)
 S XOPT=$$STATE^XWBSEC("XUS XOPT"),XUT=$$STATE^XWBSEC("XUS CNT")
"RTN","XUSRB",13,0)
 S XUF=0,XUM=0,XUMSG=0,DUZ=$$CHECKAV^XUS(AVCODE,.XUSER)
"RTN","XUSRB",14,0)
 S XUT=$G(XUT)+1 D SET^XWBSEC("XUS CNT",XUT)
"RTN","XUSRB",15,0)
 I XUT>$P(XOPT,U,2) S XUM=1,XUMSG=7 H 5 G VAX
"RTN","XUSRB",16,0)
 S XUMSG=$$UVALID^XUS() G:XUMSG VAX
"RTN","XUSRB",17,0)
 S VCOK=$$VCVALID() I VCOK S XUMSG=12 G VAX
"RTN","XUSRB",18,0)
 I DUZ>0 S XUMSG=$$POST() 
"RTN","XUSRB",19,0)
VAX S:XUMSG>0 DUZ=0
"RTN","XUSRB",20,0)
 S RESULT(0)=DUZ,RESULT(1)=XUM,RESULT(2)=VCOK,RESULT(3)=$S(XUMSG:$P($T(@XUMSG^XUS3),";",4),1:"")
"RTN","XUSRB",21,0)
 Q
"RTN","XUSRB",22,0)
 ;
"RTN","XUSRB",23,0)
INTRO(RESULT) ;Return INTRO TEXT.
"RTN","XUSRB",24,0)
 D INTRO^XUS1A("RESULT")
"RTN","XUSRB",25,0)
 Q
"RTN","XUSRB",26,0)
 ;
"RTN","XUSRB",27,0)
VCVALID() ;Return 1 if the Verify code needs changing.
"RTN","XUSRB",28,0)
 Q:'$G(DUZ) 1
"RTN","XUSRB",29,0)
 Q:$P($G(^VA(200,DUZ,.1)),U,2)="" 1
"RTN","XUSRB",30,0)
 Q $G(^VA(200,DUZ,.1))+$P(^XTV(8989.3,1,"XUS"),"^",15)'>(+$H)
"RTN","XUSRB",31,0)
 ;
"RTN","XUSRB",32,0)
CVC(RESULT,XU1) ;change VC
"RTN","XUSRB",33,0)
 S RESULT=0 Q:$G(DUZ)'>0  N XU2 S U="^",XU2=$P(XU1,U,2),XU1=$P(XU1,U)
"RTN","XUSRB",34,0)
 ;S XU1=$$DECRYP^XUSRB1(XU1),XU2=$$DECRYP^XUSRB1(XU2)
"RTN","XUSRB",35,0)
 Q $$XXCVC^XUS2(XU1,XU2)
"RTN","XUSRB",36,0)
 ;
"RTN","XUSRB",37,0)
POST() ;Finish setup partition
"RTN","XUSRB",38,0)
 N X,XUM,IO S IO="",IO("ZIO")="RPC BROKER"
"RTN","XUSRB",39,0)
 K ^UTILITY($J),^TMP($J),^XUTL("XQ",$J)
"RTN","XUSRB",40,0)
 S XUM=$$USER^XUS1A Q:XUM>0 XUM ;User can't sign on for some reason.
"RTN","XUSRB",41,0)
 ;F %=1:1 S RESULT(10+%)=XUTEXT(%)
"RTN","XUSRB",42,0)
 D DUZ^XUS1A,LOG^XUS1,SAVE^XUS1,KILL^XWBSEC("XUS CNT"),KILL^XWBSEC("XUS XOPT"),ABT^XQ12
"RTN","XUSRB",43,0)
 K XUTEXT
"RTN","XUSRB",44,0)
 Q 0
"RTN","XUSRB",45,0)
 ;
"RTN","XUSRB",46,0)
LOGOUT ;Finish logout of user.
"RTN","XUSRB",47,0)
 D BYE^XUSCLEAN
"RTN","XUSRB",48,0)
 Q
"RTN","XUSRB",49,0)
 ;
"RTN","XUSRB",50,0)
SETUP(RESULT) ;sets up environment for GUI signon
"RTN","XUSRB",51,0)
 D SET1^XUS(0),SET^XWBSEC("XUS XOPT",XOPT),SET^XWBSEC("XUS CNT",0)
"RTN","XUSRB",52,0)
 S RESULT(0)=$P(XUENV,U,3)   ;server name
"RTN","XUSRB",53,0)
 S RESULT(1)=$P(XUVOL,U)     ;volume
"RTN","XUSRB",54,0)
 S RESULT(2)=XUCI            ;uci
"RTN","XUSRB",55,0)
 S RESULT(3)=$I              ;device
"RTN","XUSRB",56,0)
 S RESULT(4)=$P(XOPT,U,2)    ;# attempts
"RTN","XUSRB",57,0)
 Q
"RTN","XUSRB",58,0)
 ;
"RTN","XUSRB",59,0)
OWNSKEY(RESULT,LIST) ;Does user have Key
"RTN","XUSRB",60,0)
 N I,K S I=""
"RTN","XUSRB",61,0)
 I $G(DUZ)'>0 S RESULT=0 Q
"RTN","XUSRB",62,0)
 I $D(LIST)#2 S RESULT=$$KCHK(LIST) Q
"RTN","XUSRB",63,0)
 F  S I=$O(LIST(I)) Q:I=""  S RESULT(I)=$$KCHK(LIST(I))
"RTN","XUSRB",64,0)
 Q
"RTN","XUSRB",65,0)
KCHK(%) Q $S($G(DUZ)>0:$D(^XUSEC(%,DUZ)),1:0) ;Key Check
"RTN","XUSRB",66,0)
 ;
"RTN","XUSRB",67,0)
SENDKEYS(RESULT) ;send encryption keys to the client
"RTN","XUSRB",68,0)
 D SENDKEYS(.RESULT)
"RTN","XUSRB",69,0)
 Q
"RTN","ZTER")
0^2^B24145496
"RTN","ZTER",1,0)
%ZTER ; ISC-SF.SEA/JLI - ERROR TRAP TO LOG ERRORS ;5/15/96  13:25
"RTN","ZTER",2,0)
 ;;8.0;KERNEL;**8,18,32**;JUL 10, 1995
"RTN","ZTER",3,0)
 I $ZE["-ALLOC,"!($ZE["<STORE>") D @$S('$D(^%ZOSF("OS")):"^%ET",^("OS")["DTM":"^%errlog",1:"^%ET") D H^XUS
"RTN","ZTER",4,0)
 S %ZT("^XUTL(""XQ"",$J)")="" S:'$D(%ZTERLGR) %ZTERLGR=$$LGR^%ZOSV()
"RTN","ZTER",5,0)
 S %ZTER11N=$P($G(^%ZTER(1,+$H,0)),"^",2)+1,^%ZTER(1,+$H,0)=(+$H)_"^"_%ZTER11N,^(1,0)="^3.0751^"_%ZTER11N_"^"_%ZTER11N
"RTN","ZTER",6,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,0)=%ZTER11N,^("ZE")=$ZE S:$D(%ZTERLGR) ^("GR")=%ZTERLGR K %ZTERLGR I %ZTER11N=1 S ^%ZTER(1,0)=$P(^%ZTER(1,0),"^",1,2)_"^"_(+$H)_"^"_($P(^%ZTER(1,0),"^",4)+1)
"RTN","ZTER",7,0)
 S %ZTER11B="" F %ZTER11I=1:1:$L($ZB) S %ZTER11A=$E($ZB,%ZTER11I),%ZTER11B=%ZTER11B_$S(%ZTER11A?1C:$C($A(%ZTER11A)+32#128),1:%ZTER11A)
"RTN","ZTER",8,0)
 S %ZTER11I="" I $D(^%ZOSF("UCI")) K %ZTER11A S:$D(Y) %ZTER11A="" S:($D(Y)#2) %ZTER11A=Y X ^%ZOSF("UCI") S %ZTER11I=Y K:'$D(%ZTER11A) Y S:$D(%ZTER11A) Y=%ZTER11A
"RTN","ZTER",9,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,"H")=$H,^("J")=$J_"^^^"_%ZTER11I_"^"_$J,^("I")=$I_"^"_$S($I[":":$ZA,1:"")_"^"_%ZTER11B_"^"_$S($D(IO("ZIO")):IO("ZIO"),1:""),%ZTER11C=0
"RTN","ZTER",10,0)
 S %ZTERROR=$S($ZE["%DSM-E":$P($P($ZE,"%DSM-E-",2),","),1:$P($P($ZE,"<",2),">"))
"RTN","ZTER",11,0)
 I $G(^%ZOSF("OS"))["VAX DSM" K %ZTER11A,%ZTER11B S:'$D(%ZTER11S) %ZTER11S=$STACK-1 D ^%ZTER1 I 1
"RTN","ZTER",12,0)
 E  S %ZTERVAR="%" D:$D(%) VAR:$D(%)#2,SUBS:$D(%)\10 F %ZTER11Z=0:0 S %ZTERVAR=$O(@%ZTERVAR) Q:%ZTERVAR=""  D VAR:$D(@%ZTERVAR)#2,SUBS:$D(@%ZTERVAR)\10
"RTN","ZTER",13,0)
 D GLOB S:%ZTER11C>0 ^%ZTER(1,+$H,1,%ZTER11N,"ZV",0)="^3.0752^"_%ZTER11C_"^"_%ZTER11C S:'$D(^%ZTER(1,"B",+$H)) ^(+$H,+$H)="" S ^%ZTER(1,+$H,1,"B",%ZTER11N,%ZTER11N)=""
"RTN","ZTER",14,0)
LIN ;
"RTN","ZTER",15,0)
 S %ZTY=$P($ZE,","),%ZTX=$P(%ZTY,"^") S:%ZTX[">" %ZTX=$P(%ZTX,">",2)
"RTN","ZTER",16,0)
 I %ZTX'="" S X=$P($P(%ZTY,"^",2),":") I X'="" X ^%ZOSF("TEST") I $T D
"RTN","ZTER",17,0)
 .S XCNP=0,DIF="^TMP($J,""XTER1""," X ^%ZOSF("LOAD") S %ZTY=$P(%ZTX,"+",1) D
"RTN","ZTER",18,0)
 ..I %ZTY'="" F X=0:0 S X=$O(^TMP($J,"XTER1",X)) Q:X'>0  I $P(^(X,0)," ")=%ZTY S X=X+$P(%ZTX,"+",2),%ZTZLIN=^TMP($J,"XTER1",X,0) Q
"RTN","ZTER",19,0)
 ..I %ZTY="" S X=+$P(%ZTX,"+",2) Q:X'>0  S %ZTZLIN=^TMP($J,"XTER1",X,0)
"RTN","ZTER",20,0)
 K ^TMP($J,"XTER1"),XCNP,DIF,%ZTY,%ZTX,X,Y
"RTN","ZTER",21,0)
 S:$D(%ZTZLIN) ^%ZTER(1,+$H,1,%ZTER11N,"LINE")=%ZTZLIN K %ZTZLIN
"RTN","ZTER",22,0)
 I %ZTERROR'="",$D(^%ZTER(2,"B",%ZTERROR)) S %ZTERROR=%ZTERROR_"^"_$P(^%ZTER(2,+$O(^(%ZTERROR,0)),0),"^",2)
"RTN","ZTER",23,0)
 K %ZTER11A,%ZTER11B,%ZTER11C,%ZTER11S,%ZTER11Z,%ZTERVAP,%ZTERVAR,%ZTERSUB,%ZTER11I,%ZTER11D,%ZTER11L,%ZTER11Q,%,%ZTER111,%ZTER112,%H,%ZTER11N
"RTN","ZTER",24,0)
 Q
"RTN","ZTER",25,0)
 ;
"RTN","ZTER",26,0)
VAR I ",%ZTERVAR,%ZTER11Z,%ZTER11A,%ZTER11B,%ZTER11C,%ZTER11N,%ZTER11I,%ZTER11L,%ZTER11S,%ZTERVAP,%ZTERSUB,"'[(","_%ZTERVAR_",") S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)=%ZTERVAR D
"RTN","ZTER",27,0)
 . I $L(@%ZTERVAR)'>255 S ^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,"D")=@%ZTERVAR Q
"RTN","ZTER",28,0)
 . S ^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,"D")=" **** VALUE IS GREATER THAN 255 CHARACTERS (SEE SUBNODES FOR DATA) *** "
"RTN","ZTER",29,0)
 . N %ZTER11,%ZTER12
"RTN","ZTER",30,0)
 . F %ZTER11=1:1 S %ZTER12=$E(@%ZTERVAR,1,245) Q:%ZTER12=""  S @%ZTERVAR=$E(@%ZTERVAR,246,$L(@%ZTERVAR)),^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,"D",%ZTER11)=%ZTER12
"RTN","ZTER",31,0)
 . Q
"RTN","ZTER",32,0)
 Q
"RTN","ZTER",33,0)
 ;
"RTN","ZTER",34,0)
SUBS S %ZTER11S="" Q:"%ZT("=$E(%ZTERVAR,1,4)  Q:",%ZTER11S,%ZTER11L,"[(","_%ZTERVAR_",")  S %ZTERVAP=%ZTERVAR_"(",%ZTERSUB="%ZTER11S)"
"RTN","ZTER",35,0)
 ;
"RTN","ZTER",36,0)
DESC S %ZTER11I=%ZTER11I+1,%ZTER11S(%ZTER11I)=%ZTER11S,%ZTER11S="",%ZTER11L(%ZTER11I)=$L(%ZTERSUB)-9 F %ZTER11Z=0:0 S %ZTER11S=$O(@(%ZTERVAP_%ZTERSUB)) Q:%ZTER11S=""  D SUBX
"RTN","ZTER",37,0)
 S %ZTER11S=%ZTER11S(%ZTER11I) K %ZTER11S(%ZTER11I),%ZTER11L(%ZTER11I) S %ZTER11I=%ZTER11I-1
"RTN","ZTER",38,0)
 Q
"RTN","ZTER",39,0)
 ;
"RTN","ZTER",40,0)
SUBX I $D(@(%ZTERVAP_%ZTERSUB))#10 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)=$P(%ZTERVAP_%ZTERSUB,"%ZTER11S",1)_""""_%ZTER11S_""""_$P(%ZTERVAP_%ZTERSUB,"%ZTER11S",2),^("D")=@(%ZTERVAP_%ZTERSUB)
"RTN","ZTER",41,0)
 I $D(@(%ZTERVAP_%ZTERSUB))\10 S %ZTERSUB=$E(%ZTERSUB,1,%ZTER11L(%ZTER11I))_""""_%ZTER11S_""""_",%ZTER11S)" D DESC S %ZTERSUB=$E(%ZTERSUB,1,%ZTER11L(%ZTER11I))_"%ZTER11S)"
"RTN","ZTER",42,0)
 Q
"RTN","ZTER",43,0)
 ;
"RTN","ZTER",44,0)
GLOB ;
"RTN","ZTER",45,0)
 S %ZTER11D="" F %ZTER11I=0:0 S %ZTER11D=$O(%ZT(%ZTER11D)) Q:%ZTER11D=""  S %ZTER11A=%ZTER11D S:%ZTER11A["$J" %ZTER11B=$J,%ZTER11A=$P(%ZTER11A,"$J",1)_%ZTER11B_$P(%ZTER11A,"$J",2,99) S %ZTER11B=$P(%ZTER11A,")",1) D LOOP
"RTN","ZTER",46,0)
 Q
"RTN","ZTER",47,0)
 ;
"RTN","ZTER",48,0)
LOOP ;
"RTN","ZTER",49,0)
 F %ZTER11I=0:0 S %ZTER11A=$ZO(@%ZTER11A) Q:%ZTER11A'[%ZTER11B  S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)=$P(%ZTER11D,")")_$P(%ZTER11A,%ZTER11B,2),^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,"D")=@%ZTER11A
"RTN","ZTER",50,0)
 Q
"RTN","ZTER",51,0)
UNWIND ;Unwind stack for new error trap. Called by app code.
"RTN","ZTER",52,0)
 S $ETRAP="D UNW^%ZTER Q"
"RTN","ZTER",53,0)
UNW Q:$ESTACK>1  S $ECODE="" Q
"VER")
8.0^21.0
**END**
**END**
