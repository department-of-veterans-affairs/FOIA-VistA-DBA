Released ECX*3*32 SEQ #32
Extracted from mail message
**KIDS**:ECX*3.0*32^

**INSTALL NAME**
ECX*3.0*32
"BLD",2647,0)
ECX*3.0*32^DSS EXTRACTS^0^3000330^y
"BLD",2647,4,0)
^9.64PA^^0
"BLD",2647,"ABPKG")
n
"BLD",2647,"KRN",0)
^9.67PA^19^17
"BLD",2647,"KRN",.4,0)
.4
"BLD",2647,"KRN",.401,0)
.401
"BLD",2647,"KRN",.402,0)
.402
"BLD",2647,"KRN",.403,0)
.403
"BLD",2647,"KRN",.5,0)
.5
"BLD",2647,"KRN",.84,0)
.84
"BLD",2647,"KRN",3.6,0)
3.6
"BLD",2647,"KRN",3.8,0)
3.8
"BLD",2647,"KRN",9.2,0)
9.2
"BLD",2647,"KRN",9.8,0)
9.8
"BLD",2647,"KRN",9.8,"NM",0)
^9.68A^6^3
"BLD",2647,"KRN",9.8,"NM",1,0)
ECXSCXN^^0^B67850206
"BLD",2647,"KRN",9.8,"NM",5,0)
ECXLABN^^0^B20206961
"BLD",2647,"KRN",9.8,"NM",6,0)
ECXUTL3^^0^B47678275
"BLD",2647,"KRN",9.8,"NM","B","ECXLABN",5)

"BLD",2647,"KRN",9.8,"NM","B","ECXSCXN",1)

"BLD",2647,"KRN",9.8,"NM","B","ECXUTL3",6)

"BLD",2647,"KRN",19,0)
19
"BLD",2647,"KRN",19,"NM",0)
^9.68A^^
"BLD",2647,"KRN",19.1,0)
19.1
"BLD",2647,"KRN",101,0)
101
"BLD",2647,"KRN",409.61,0)
409.61
"BLD",2647,"KRN",771,0)
771
"BLD",2647,"KRN",870,0)
870
"BLD",2647,"KRN",8994,0)
8994
"BLD",2647,"KRN","B",.4,.4)

"BLD",2647,"KRN","B",.401,.401)

"BLD",2647,"KRN","B",.402,.402)

"BLD",2647,"KRN","B",.403,.403)

"BLD",2647,"KRN","B",.5,.5)

"BLD",2647,"KRN","B",.84,.84)

"BLD",2647,"KRN","B",3.6,3.6)

"BLD",2647,"KRN","B",3.8,3.8)

"BLD",2647,"KRN","B",9.2,9.2)

"BLD",2647,"KRN","B",9.8,9.8)

"BLD",2647,"KRN","B",19,19)

"BLD",2647,"KRN","B",19.1,19.1)

"BLD",2647,"KRN","B",101,101)

"BLD",2647,"KRN","B",409.61,409.61)

"BLD",2647,"KRN","B",771,771)

"BLD",2647,"KRN","B",870,870)

"BLD",2647,"KRN","B",8994,8994)

"BLD",2647,"QUES",0)
^9.62^^
"BLD",2647,"REQB",0)
^9.611^1^1
"BLD",2647,"REQB",1,0)
ECX*3.0*31^2
"BLD",2647,"REQB","B","ECX*3.0*31",1)

"MBREQ")
0
"PKG",513,-1)
1^1
"PKG",513,0)
DSS EXTRACTS^ECX^Decision Support System. (DSS)
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
3.0^2971222^2980112^11714
"PKG",513,22,1,"PAH",1,0)
32^3000330^11724
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","ECXLABN")
0^5^B20206961
"RTN","ECXLABN",1,0)
ECXLABN ;ALB/JAP,BIR/CML-Lab Extract for DSS (New Format - With LMIP Codes) ; [ 11/22/96  5:14 PM ]
"RTN","ECXLABN",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,28,24,30,31,32**;Dec 22, 1997
"RTN","ECXLABN",3,0)
BEG ;entry point
"RTN","ECXLABN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABN",6,0)
 Q
"RTN","ECXLABN",7,0)
 ;
"RTN","ECXLABN",8,0)
START ; entry when queued
"RTN","ECXLABN",9,0)
 S QFLG=0
"RTN","ECXLABN",10,0)
 K ^LRO(64.03),^TMP($J,"ECXP")
"RTN","ECXLABN",11,0)
 S LRSDT=ECSD,LREDT=ECED
"RTN","ECXLABN",12,0)
 D ^LRCAPDSS
"RTN","ECXLABN",13,0)
 ;quit if no completion date for API compile
"RTN","ECXLABN",14,0)
 I '$P($G(^LRO(64.03,1,1,1,0)),U,4) Q
"RTN","ECXLABN",15,0)
 ;quit if tasked and user sends stop request
"RTN","ECXLABN",16,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","ECXLABN",17,0)
 .S QFLG=1
"RTN","ECXLABN",18,0)
 .K ^LRO(64.03) S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",19,0)
 ;otherwise, continue
"RTN","ECXLABN",20,0)
 K ECXDD D FIELD^DID(64.03,1,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXLABN",21,0)
 S ECLRN=1
"RTN","ECXLABN",22,0)
 F  S ECLRN=$O(^LRO(64.03,ECLRN)) Q:'ECLRN  D  Q:QFLG
"RTN","ECXLABN",23,0)
 .Q:'$D(^LRO(64.03,ECLRN,0))
"RTN","ECXLABN",24,0)
 .S EC1=^LRO(64.03,ECLRN,0)
"RTN","ECXLABN",25,0)
 .S ECDOC=ECPROF_$P(EC1,U,2),ECDOCNPI=""
"RTN","ECXLABN",26,0)
 .S ECLOC=$P(EC1,U,15),EC=$P(EC1,U,3)
"RTN","ECXLABN",27,0)
 .I EC]"" D GET
"RTN","ECXLABN",28,0)
 K ^LRO(64.03),^TMP($J,"ECXP") S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",29,0)
 K ECDOCNPI,ECXAGC,ECXL1,ECXL2
"RTN","ECXLABN",30,0)
 Q
"RTN","ECXLABN",31,0)
 ;
"RTN","ECXLABN",32,0)
GET ;get data
"RTN","ECXLABN",33,0)
 N X,ECXSTN
"RTN","ECXLABN",34,0)
 S ECF=$S($P(EC,";",2)="DPT(":2,$P(EC,";",2)="LRT(67,":67,1:0) Q:'ECF
"RTN","ECXLABN",35,0)
 S ECIFN=$P(EC,";")
"RTN","ECXLABN",36,0)
 ;resolve ecloc
"RTN","ECXLABN",37,0)
 S ECXL1=+$P(ECLOC,";",1),ECXL2=$P(ECLOC,";",2)
"RTN","ECXLABN",38,0)
 I ECF=2 S ECLOC=$S(ECXL1>0:ECXL1,1:"") I ECXL2]"",ECXL2'="SC(" S ECLOC=""
"RTN","ECXLABN",39,0)
 I ECF=67 D  S ECLOC=ECXSTN
"RTN","ECXLABN",40,0)
 .S (ECXSTN,ECXAGC)=""
"RTN","ECXLABN",41,0)
 .I ECXL2'="DIC(4," S ECXSTN="XXXXX",ECXAGC="XX" Q
"RTN","ECXLABN",42,0)
 .I '$D(^DIC(4,ECXL1)) S ECXSTN="XXXXX",ECXAGC="XX" Q
"RTN","ECXLABN",43,0)
 .I $D(^DIC(4,ECXL1)) S ECXSTN=$P(^DIC(4,ECXL1,"99"),U,1),ECXAGC=$E($P(^(99),U,5),1,2) S:ECXSTN="" ECXSTN="ZZZZZ" S:ECXAGC="" ECXAGC="ZZ"
"RTN","ECXLABN",44,0)
 S ECDT=$P(EC1,U,13),ECD=$P(ECDT,"."),ECTM=$$ECXTIME^ECXUTL(ECDT)
"RTN","ECXLABN",45,0)
 S ECWKLD=$P(EC1,U,11),ECWK="" I $D(^LAM(ECWKLD,0)) S ECWK=$P(^(0),U,2)
"RTN","ECXLABN",46,0)
 S ECTREAT=$P(EC1,U,10) I ECTREAT S ECTREAT=$P($G(^DIC(45.7,+ECTREAT,0)),U,2)
"RTN","ECXLABN",47,0)
 S (ECNA,ECSN,ECMN,ECPTTM,ECPTPR,ECCLAS)="",ECA=1,ECXERR=0
"RTN","ECXLABN",48,0)
 S (ECPTNPI,ECASPR,ECCLAS2,ECASNPI)=""
"RTN","ECXLABN",49,0)
 ;get the patient data if record is in file #2
"RTN","ECXLABN",50,0)
 I ECF=2 D PAT(ECIFN,$P(ECD,"."),.ECXERR)
"RTN","ECXLABN",51,0)
 Q:ECXERR
"RTN","ECXLABN",52,0)
 ;get patient data if record is in file #67
"RTN","ECXLABN",53,0)
 I ECF=67 S ECSN="000123456",ECNA="RFRL" I $D(^LRT(67,ECIFN,0)) D
"RTN","ECXLABN",54,0)
 .S ECXMPI=""
"RTN","ECXLABN",55,0)
 .S EC0=^LRT(67,ECIFN,0),ECNA=$E($P($P(EC0,U),",")_"    ",1,4),ECSN=$P(EC0,U,9) D
"RTN","ECXLABN",56,0)
 ..S ECNA=$TR(ECNA,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABN",57,0)
 ..I ECSN="" S ECSN="000123456" Q
"RTN","ECXLABN",58,0)
 ..S ECSN=$TR(ECSN," "),ECSN=$TR(ECSN,"-")
"RTN","ECXLABN",59,0)
 ..I ($L(ECSN)<9)!($L(ECSN)>10) S ECSN="000123456" Q
"RTN","ECXLABN",60,0)
 ..I $L(ECSN)=9,ECSN'?9N S ECSN="000123456" Q
"RTN","ECXLABN",61,0)
 ..I $L(ECSN)=10,ECSN'?9N1"P" S ECSN="000123456"
"RTN","ECXLABN",62,0)
 ;create extract record only if patient name and accession area exist
"RTN","ECXLABN",63,0)
 S ECXDSSD=""
"RTN","ECXLABN",64,0)
 I ECNA]"" S ECT=$P(EC1,U,8),ECURG=$P(EC1,U,9),EC=+$P(EC1,U,7) I EC D
"RTN","ECXLABN",65,0)
 .S:ECF=2 ECACA=EC_U_$P($G(^LRO(68,EC,0)),U,11) S:ECF=67 ECACA=ECXAGC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",66,0)
 .D FILE
"RTN","ECXLABN",67,0)
 Q
"RTN","ECXLABN",68,0)
 ;
"RTN","ECXLABN",69,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get/set patient data
"RTN","ECXLABN",70,0)
 N X,OK,PT
"RTN","ECXLABN",71,0)
 ;get data
"RTN","ECXLABN",72,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXLABN",73,0)
 .S PT=^TMP($J,"ECXP",ECXDFN)
"RTN","ECXLABN",74,0)
 .S ECNA=$P(PT,U,1)
"RTN","ECXLABN",75,0)
 .S ECSN=$P(PT,U,2)
"RTN","ECXLABN",76,0)
 .S ECXMPI=$P(PT,U,3)
"RTN","ECXLABN",77,0)
 ;set data and save for later
"RTN","ECXLABN",78,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXLABN",79,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD,"."),"1;",.ECXPAT)
"RTN","ECXLABN",80,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXLABN",81,0)
 .S ECNA=ECXPAT("NAME"),ECSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABN",82,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECNA_U_ECSN_U_ECXMPI
"RTN","ECXLABN",83,0)
 ;get date specific data
"RTN","ECXLABN",84,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECA=$P(X,U,1),ECMN=$P(X,U,2)
"RTN","ECXLABN",85,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."),ECPROF)
"RTN","ECXLABN",86,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXLABN",87,0)
 Q
"RTN","ECXLABN",88,0)
 ;
"RTN","ECXLABN",89,0)
FILE ;file record
"RTN","ECXLABN",90,0)
 ;node0
"RTN","ECXLABN",91,0)
 ;facility^patient number^SSN (or equivalent)^name^in/out^day^accession area^abbreviation^test^urgency^treating spec^location^provider and file^
"RTN","ECXLABN",92,0)
 ;movement number^file^time^workload code^primary care team^primary care provider
"RTN","ECXLABN",93,0)
 ;node1
"RTN","ECXLABN",94,0)
 ;mpi^dss dept^provider npi^pc provider npi^pc prov person class^assoc pc prov^assoc pc prov person class^assoc pc prov npi
"RTN","ECXLABN",95,0)
 N DA,DIK
"RTN","ECXLABN",96,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABN",97,0)
 S ECODE=EC7_U_EC23
"RTN","ECXLABN",98,0)
 S ECODE=ECODE_U_ECINST_U_ECIFN_U_ECSN_U_ECNA_U_ECA_U_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECACA_U_ECT_U_ECURG_U_ECTREAT_U_ECLOC_U_ECDOC_U_ECMN_U_ECF_U_ECTM_U_ECWK_U_ECPTTM_U_ECPTPR
"RTN","ECXLABN",99,0)
 ;(ECACA=acc area^abbreviation)
"RTN","ECXLABN",100,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECDOCNPI_U_ECPTNPI_U_ECCLAS_U_ECASPR_U_ECCLAS2_U_ECASNPI
"RTN","ECXLABN",101,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXLABN",102,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXLABN",103,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABN",104,0)
 Q
"RTN","ECXLABN",105,0)
 ;
"RTN","ECXLABN",106,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABN",107,0)
 S ECHEAD="LAB"
"RTN","ECXLABN",108,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABN",109,0)
 Q
"RTN","ECXLABN",110,0)
 ;
"RTN","ECXLABN",111,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABN",112,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXSCXN")
0^1^B67850206
"RTN","ECXSCXN",1,0)
ECXSCXN ;ALB/JAP  Clinic Extract ; 05/14/99
"RTN","ECXSCXN",2,0)
 ;;3.0;DSS EXTRACTS;**24,27,29,30,31,32**;Dec 22, 1997
"RTN","ECXSCXN",3,0)
 ;
"RTN","ECXSCXN",4,0)
BEG ;entry point from option
"RTN","ECXSCXN",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSCXN",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSCXN",7,0)
 Q
"RTN","ECXSCXN",8,0)
 ;
"RTN","ECXSCXN",9,0)
START ;entry point from taskmgr
"RTN","ECXSCXN",10,0)
 N DIC,OUT,TIU,LOCARR,PROCESS,STOP,STATUS,P1,P2,P3,TOSEND,SOURCE,EXNUM,X,Y
"RTN","ECXSCXN",11,0)
 S OUT=0,QFLG=0,ECRN=0
"RTN","ECXSCXN",12,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",13,0)
 ;get ien for tiu in file #839.7
"RTN","ECXSCXN",14,0)
 S DIC="^PX(839.7,",DIC(0)="X",X="TEXT INTEGRATION UTILITIES" D ^DIC S TIU=+Y K DIC,Y
"RTN","ECXSCXN",15,0)
 S ECED=ECED+.3
"RTN","ECXSCXN",16,0)
 ;get clinic default appt length, type, division
"RTN","ECXSCXN",17,0)
 S ECXCLIN=0 F  S ECXCLIN=$O(^SC(ECXCLIN)) Q:'ECXCLIN  D
"RTN","ECXSCXN",18,0)
 .K LOCARR S DIC=44,DA=ECXCLIN,DR="2;3.5;1912",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",19,0)
 .I $G(LOCARR(44,ECXCLIN,2,"I"))'="C" Q
"RTN","ECXSCXN",20,0)
 .S ALEN=+$G(LOCARR(44,ECXCLIN,1912,"I")),^TMP($J,"ECXCL",ECXCLIN)=ALEN,ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",21,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=^TMP($J,"ECXCL",ECXCLIN)_"^"_ALEN_"^"_$G(LOCARR(44,ECXCLIN,2,"I"))_"^"_+$G(LOCARR(44,ECXCLIN,3.5,"I"))
"RTN","ECXSCXN",22,0)
 .D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",23,0)
 .K P1,P2,P3,TOSEND,ECXDIV
"RTN","ECXSCXN",24,0)
 ;get from file #44 any no-shows & get encounters from #409.68
"RTN","ECXSCXN",25,0)
 D NOSHOW(ECSD1,ECED)
"RTN","ECXSCXN",26,0)
 D ENCNTR(ECSD1,ECED)
"RTN","ECXSCXN",27,0)
 ;update for CLJ extract
"RTN","ECXSCXN",28,0)
 D CLINII^ECXSCX1(ECRN,$P(ECED,"."))
"RTN","ECXSCXN",29,0)
 ;send missing clinic msg
"RTN","ECXSCXN",30,0)
 D:$D(^TMP($J,"ECXS")) EN^ECXSCX1
"RTN","ECXSCXN",31,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",32,0)
 Q
"RTN","ECXSCXN",33,0)
 ;
"RTN","ECXSCXN",34,0)
ENCNTR(ECSD1,ECED) ;search file #409.68 for encounter data
"RTN","ECXSCXN",35,0)
 N OUT,JJ,PP,CHKOUT,PNODE
"RTN","ECXSCXN",36,0)
 S ECD=ECSD1
"RTN","ECXSCXN",37,0)
 F  S ECD=$O(^SCE("B",ECD)) Q:'ECD!(ECD>ECED)  Q:QFLG  S ECXIEN=0 F  S ECXIEN=$O(^SCE("B",ECD,ECXIEN)) Q:'ECXIEN  D  I QFLG Q
"RTN","ECXSCXN",38,0)
 .Q:'$D(^SCE(ECXIEN,0))  D INTPAT
"RTN","ECXSCXN",39,0)
 .K LOCARR S DIC=409.68,DA=ECXIEN,DR=".01;.02;.03;.04;.05;.06;.07;.08;.12;.13",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",40,0)
 .S STOP=+$G(LOCARR(409.68,ECXIEN,.03,"I")),CHKOUT=+$G(LOCARR(409.68,ECXIEN,.07,"I")),PROCESS=+$G(LOCARR(409.68,ECXIEN,.08,"I")),STATUS=$G(LOCARR(409.68,ECXIEN,.12,"I"))
"RTN","ECXSCXN",41,0)
 .S ECXDFN=+$G(LOCARR(409.68,ECXIEN,.02,"I")) I ECXDFN="" Q
"RTN","ECXSCXN",42,0)
 .Q:'CHKOUT
"RTN","ECXSCXN",43,0)
 .S:STATUS="" STATUS="ZZ" S STATUS=";"_STATUS_";"
"RTN","ECXSCXN",44,0)
 .Q:";3;4;5;6;7;9;10;13;"[STATUS
"RTN","ECXSCXN",45,0)
 .Q:'STOP
"RTN","ECXSCXN",46,0)
 .Q:PROCESS=4
"RTN","ECXSCXN",47,0)
 .Q:+$G(LOCARR(409.68,ECXIEN,.06,"I"))
"RTN","ECXSCXN",48,0)
 .S ECXDATE=+$G(LOCARR(409.68,ECXIEN,.01,"I")),ECXCLIN=+$G(LOCARR(409.68,ECXIEN,.04,"I"))
"RTN","ECXSCXN",49,0)
 .Q:$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,3)'="C"
"RTN","ECXSCXN",50,0)
 .S ECXVISIT=+$G(LOCARR(409.68,ECXIEN,.05,"I")),ECXENEL=+$G(LOCARR(409.68,ECXIEN,.13,"I"))
"RTN","ECXSCXN",51,0)
 .Q:'ECXVISIT
"RTN","ECXSCXN",52,0)
 .S ECXERR=0 D PAT1(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",53,0)
 .D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",54,0)
 .Q:TOSEND=6
"RTN","ECXSCXN",55,0)
 .K LOCARR S DIC=40.7,DA=STOP,DR="1",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",56,0)
 .S ECXSTOP=$$RJ^XLFSTR($G(LOCARR(40.7,STOP,1,"I")),3,0)
"RTN","ECXSCXN",57,0)
 .;get date specific patient data
"RTN","ECXSCXN",58,0)
 .D PAT2(ECXDFN,ECXDATE)
"RTN","ECXSCXN",59,0)
 .;get visit specific data
"RTN","ECXSCXN",60,0)
 .S ECXERR=0 D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",61,0)
 .S ECXCPT=ECXVIST("CPT"),ECXICD9=ECXVIST("ICD9"),SOURCE=ECXVIST("SOURCE")
"RTN","ECXSCXN",62,0)
 .S ECXAO=ECXVIST("AO"),ECXIR=ECXVIST("IR"),ECXMIL=ECXVIST("MST")
"RTN","ECXSCXN",63,0)
 .S ECXPROV=ECXVIST("PROV"),ECXPROVP=ECXVIST("PROV CLASS"),ECXPROVN=ECXVIST("PROV NPI")
"RTN","ECXSCXN",64,0)
 .K LOCARR S DIC=8,DA=ECXENEL,DR="8",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",65,0)
 .S ECXENEL=+$G(LOCARR(8,ECXENEL,8,"I")) I ECXENEL S ECXENEL=$$ELIG^ECXUTL3(ECXENEL,ECXSVC)
"RTN","ECXSCXN",66,0)
 .;setup feeder key and file in extract records
"RTN","ECXSCXN",67,0)
 .S (ECXKEY,ECXDSSD)=""
"RTN","ECXSCXN",68,0)
 .;xray (105) or lab (108)
"RTN","ECXSCXN",69,0)
 .I (ECXSTOP=105)!(ECXSTOP=108) D  Q
"RTN","ECXSCXN",70,0)
 ..S ECXKEY=ECXSTOP_"00003000000"
"RTN","ECXSCXN",71,0)
 ..D FILE
"RTN","ECXSCXN",72,0)
 .;appointments
"RTN","ECXSCXN",73,0)
 .I PROCESS=1 D  Q
"RTN","ECXSCXN",74,0)
 ..;get appt length
"RTN","ECXSCXN",75,0)
 ..S ALEN=0,JJ=0,OUT=0
"RTN","ECXSCXN",76,0)
 ..F  S JJ=$O(^SC(ECXCLIN,"S",ECXDATE,JJ)) Q:'JJ  Q:OUT  S K=0 F  S K=$O(^SC(ECXCLIN,"S",ECXDATE,JJ,K)) Q:'K  Q:OUT  D
"RTN","ECXSCXN",77,0)
 ...S PP=$P($G(^SC(ECXCLIN,"S",ECXDATE,JJ,K,0)),U) I PP=ECXDFN S OUT=1,ALEN=$P(^(0),U,2),ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",78,0)
 ..S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",79,0)
 ..S ECXSTOP=P1
"RTN","ECXSCXN",80,0)
 ..I TOSEND'=3 S ECXKEY=P1_P2_ALEN_P3_"0" D FILE
"RTN","ECXSCXN",81,0)
 ..I TOSEND=3 S ECXKEY=P1_"000"_ALEN_P3_"0" D FILE
"RTN","ECXSCXN",82,0)
 ..I TOSEND=3 S ECXKEY=P2_"000"_ALEN_P3_"0" D FILE
"RTN","ECXSCXN",83,0)
 ..;create a record for appended ekg
"RTN","ECXSCXN",84,0)
 ..S PNODE=$G(^DPT(ECXDFN,"S",ECXDATE,0)) I $P(PNODE,U,1)=ECXCLIN,$P(PNODE,U,5) D
"RTN","ECXSCXN",85,0)
 ...S ECXKEY="10700003000000",ECXSTOP="107" D FILE
"RTN","ECXSCXN",86,0)
 .;stop code additions
"RTN","ECXSCXN",87,0)
 .I PROCESS=2 D  Q
"RTN","ECXSCXN",88,0)
 ..S ALEN=0
"RTN","ECXSCXN",89,0)
 ..I SOURCE=TIU S ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",90,0)
 ..S:+ALEN=0 ALEN="030" S ECXKEY=P1_P2_ALEN_P3_"0",ECXSTOP=P1
"RTN","ECXSCXN",91,0)
 ..D FILE
"RTN","ECXSCXN",92,0)
 .;dispositions
"RTN","ECXSCXN",93,0)
 .I PROCESS=3 D  Q
"RTN","ECXSCXN",94,0)
 ..S ECXKEY=ECXSTOP_"47906000000"
"RTN","ECXSCXN",95,0)
 ..D FILE
"RTN","ECXSCXN",96,0)
 Q
"RTN","ECXSCXN",97,0)
 ;
"RTN","ECXSCXN",98,0)
INTPAT ;initialize pateint variables
"RTN","ECXSCXN",99,0)
 S (ECXSSN,ECXPNM,ECPTPR,ECCLAS,ECPTNPI,ECASPR,ECCLAS2,ECASNPI,ECXZIP)=""
"RTN","ECXSCXN",100,0)
 S (ECPTTM,ECXPAYOR,ECXSAI,ECXVET,ECXRACE,ECXENRL,ECXMPI,ECXSEX)=""
"RTN","ECXSCXN",101,0)
 S (ECXDOB,ECXELIG,ECXPST,ECXPLOC,ECXRST,ECXAST,ECXMST,ECXSTATE,ECXCNTY)=""
"RTN","ECXSCXN",102,0)
 Q
"RTN","ECXSCXN",103,0)
 ;
"RTN","ECXSCXN",104,0)
PAT1(ECXDFN,ECXDATE,ECXERR) ;get patient demographic data
"RTN","ECXSCXN",105,0)
 N OK,X
"RTN","ECXSCXN",106,0)
 K ECXPAT
"RTN","ECXSCXN",107,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;4;5",.ECXPAT)
"RTN","ECXSCXN",108,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXSCXN",109,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXSCXN",110,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXSCXN",111,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXSCXN",112,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXSCXN",113,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXSCXN",114,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXSCXN",115,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXSCXN",116,0)
 S ECXSVC=ECXPAT("SC%")
"RTN","ECXSCXN",117,0)
 S ECXRACE=ECXPAT("RACE")
"RTN","ECXSCXN",118,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXSCXN",119,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXSCXN",120,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXSCXN",121,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXSCXN",122,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXSCXN",123,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXSCXN",124,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXSCXN",125,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXSCXN",126,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXSCXN",127,0)
 ;get sharing agreement data
"RTN","ECXSCXN",128,0)
 S (ECXPAYOR,ECXSAI)=""
"RTN","ECXSCXN",129,0)
 D VISN19^ECXUTL2(ECXDFN,.ECXPAYOR,.ECXSAI)
"RTN","ECXSCXN",130,0)
 Q
"RTN","ECXSCXN",131,0)
 ;
"RTN","ECXSCXN",132,0)
PAT2(ECXDFN,ECXDATE) ;get date specific patient data
"RTN","ECXSCXN",133,0)
 N X
"RTN","ECXSCXN",134,0)
 ;get primary care data
"RTN","ECXSCXN",135,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXSCXN",136,0)
 S ECPTTM=$P(X,U,1)
"RTN","ECXSCXN",137,0)
 S ECPTPR=$P(X,U,2)
"RTN","ECXSCXN",138,0)
 S ECCLAS=$P(X,U,3)
"RTN","ECXSCXN",139,0)
 S ECPTNPI=$P(X,U,4)
"RTN","ECXSCXN",140,0)
 S ECASPR=$P(X,U,5)
"RTN","ECXSCXN",141,0)
 S ECCLAS2=$P(X,U,6)
"RTN","ECXSCXN",142,0)
 S ECASNPI=$P(X,U,7)
"RTN","ECXSCXN",143,0)
 ;get inpatient data
"RTN","ECXSCXN",144,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U,1),ECXTS=$P(X,U,3)
"RTN","ECXSCXN",145,0)
 Q
"RTN","ECXSCXN",146,0)
 ;
"RTN","ECXSCXN",147,0)
NOSHOW(ECXSD,ECXED) ;get noshows from file #44
"RTN","ECXSCXN",148,0)
 ;      ECXSD  = start date
"RTN","ECXSCXN",149,0)
 ;      ECXED  = end date
"RTN","ECXSCXN",150,0)
 N JJ,K,PP,JDATE,NODE,STATUS,CLIN,ALEN,NOSHOW
"RTN","ECXSCXN",151,0)
 S CLIN=0
"RTN","ECXSCXN",152,0)
 F  S CLIN=$O(^TMP($J,"ECXCL",CLIN)) Q:'CLIN  D
"RTN","ECXSCXN",153,0)
 .I $P($G(^TMP($J,"ECXCL",CLIN)),U,3)'="C" Q
"RTN","ECXSCXN",154,0)
 .S (P1,P2,P3)="" D FEEDER^ECXSCX1(CLIN,ECXSD,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",155,0)
 .Q:TOSEND=6
"RTN","ECXSCXN",156,0)
 .;find appts in date range
"RTN","ECXSCXN",157,0)
 .S JDATE=ECXSD
"RTN","ECXSCXN",158,0)
 .F  S JDATE=$O(^SC(CLIN,"S",JDATE)) Q:'JDATE  Q:JDATE>ECXED  D
"RTN","ECXSCXN",159,0)
 ..S ECXDATE=JDATE,JJ=0
"RTN","ECXSCXN",160,0)
 ..;get noshows only - no data in check-in/check-out node
"RTN","ECXSCXN",161,0)
 ..F  S JJ=$O(^SC(CLIN,"S",JDATE,JJ)) Q:'JJ  S K=0 F  S K=$O(^SC(CLIN,"S",JDATE,JJ,K)) Q:'K  D
"RTN","ECXSCXN",162,0)
 ...S PP=$G(^SC(CLIN,"S",JDATE,JJ,K,0)),ECXDFN=$P(PP,U) I ECXDFN="" Q
"RTN","ECXSCXN",163,0)
 ...S NODE=$G(^DPT(ECXDFN,"S",JDATE,0)) I NODE=""!($P(NODE,U)'=CLIN) Q
"RTN","ECXSCXN",164,0)
 ...S STATUS=$P(NODE,U,2),NOSHOW=$S(STATUS="N":"N",STATUS="NA":"N",1:"")
"RTN","ECXSCXN",165,0)
 ...Q:NOSHOW=""  D INTPAT
"RTN","ECXSCXN",166,0)
 ...S ECXERR=0 D PAT1(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",167,0)
 ...S ALEN=$P(PP,U,2),ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",168,0)
 ...D PAT2(ECXDFN,ECXDATE)
"RTN","ECXSCXN",169,0)
 ...S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",CLIN)),U,2) S ECXCLIN=CLIN,ECXSTOP=P1
"RTN","ECXSCXN",170,0)
 ...S ECXCPT="99199" F L=6:1:120 S ECXCPT=ECXCPT_" "
"RTN","ECXSCXN",171,0)
 ...S ECXICD9="799.9" F L=6:1:63 S ECXICD9=ECXICD9_" "
"RTN","ECXSCXN",172,0)
 ...S (ECXDSSD,ECXENEL,ECXIR,ECXAO,ECXMIL,ECXPROV,ECXPROVP,ECXPROVN)=""
"RTN","ECXSCXN",173,0)
 ...I TOSEND'=3 S ECXKEY=P1_P2_ALEN_P3_NOSHOW D FILE
"RTN","ECXSCXN",174,0)
 ...I TOSEND=3 S ECXKEY=P1_"000"_ALEN_P3_NOSHOW D FILE
"RTN","ECXSCXN",175,0)
 ...I TOSEND=3 S ECXKEY=P2_"000"_ALEN_P3_NOSHOW D FILE
"RTN","ECXSCXN",176,0)
 ...;create a record for noshow appended ekg
"RTN","ECXSCXN",177,0)
 ...I $P(NODE,U,5) S ECXKEY="1070000300000N",ECXSTOP="107" D FILE
"RTN","ECXSCXN",178,0)
 Q
"RTN","ECXSCXN",179,0)
 ;
"RTN","ECXSCXN",180,0)
FILE ;record setup for files #727.816 & #727.818
"RTN","ECXSCXN",181,0)
 ;file #727.816 record
"RTN","ECXSCXN",182,0)
 ;node0
"RTN","ECXSCXN",183,0)
 ;facility^dfn^ssn^name^in/out status^day^feeder key^treat spec^encounter elig^pc provider^pc provider person class^pc prov npi
"RTN","ECXSCXN",184,0)
 ;assoc pc provider^assoc pc prov person class^assoc pc prov npi^clinic
"RTN","ECXSCXN",185,0)
 ;node1
"RTN","ECXSCXN",186,0)
 ;cpt&modifiers^pc team
"RTN","ECXSCXN",187,0)
 S EC7=$O(^ECX(727.816,999999999),-1),EC7=EC7+1
"RTN","ECXSCXN",188,0)
 S ECODE=EC7_U_EC23
"RTN","ECXSCXN",189,0)
 S ECODE=ECODE_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXKEY
"RTN","ECXSCXN",190,0)
 S ECODE=ECODE_U_ECXTS_U_ECXENEL_U_ECPTPR_U_ECCLAS_U_ECPTNPI_U_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXCLIN
"RTN","ECXSCXN",191,0)
 S ECODE1=ECXCPT_U_ECPTTM
"RTN","ECXSCXN",192,0)
 D FILE2(727.816,EC7,ECODE,ECODE1)
"RTN","ECXSCXN",193,0)
 ;
"RTN","ECXSCXN",194,0)
 ;file #727.818 record
"RTN","ECXSCXN",195,0)
 ;node0
"RTN","ECXSCXN",196,0)
 ;facility^dfn^ssn^name^in/out status^day^primary stop^mpi^sex^dob^elig^vet^race^pow status^pow loc^ir status^ao status^mst status^
"RTN","ECXSCXN",197,0)
 ;state^county^zip^enroll loc^^provider^prov person class^prov npi^sa payor^sa insurance^ir encounter^ao encounter^mst encounter^dss dept
"RTN","ECXSCXN",198,0)
 ;node1
"RTN","ECXSCXN",199,0)
 ;icd9
"RTN","ECXSCXN",200,0)
 ;be sure that stop matches feeder key
"RTN","ECXSCXN",201,0)
 S ECXSTOP=$E(ECXKEY,1,3)
"RTN","ECXSCXN",202,0)
 S ECODE=EC7_U_EC23
"RTN","ECXSCXN",203,0)
 S ECODE=ECODE_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXSTOP_U_ECXMPI
"RTN","ECXSCXN",204,0)
 S ECODE=ECODE_U_ECXSEX_U_ECXDOB_U_ECXELIG_U_ECXVET_U_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U_ECXMST
"RTN","ECXSCXN",205,0)
 S ECODE=ECODE_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXENRL_U_U_ECXPROV_U_ECXPROVP_U_ECXPROVN_U_ECXPAYOR_U_ECXSAI_U_ECXIR_U_ECXAO_U_ECXMIL_U_ECXDSSD
"RTN","ECXSCXN",206,0)
 S ECODE1=ECXICD9
"RTN","ECXSCXN",207,0)
 D FILE2(727.818,EC7,ECODE,ECODE1)
"RTN","ECXSCXN",208,0)
 S ECRN=ECRN+1
"RTN","ECXSCXN",209,0)
 Q
"RTN","ECXSCXN",210,0)
 ;
"RTN","ECXSCXN",211,0)
FILE2(ECXFILE,EC7,ECODE,ECODE1) ;file record
"RTN","ECXSCXN",212,0)
 N DA,DIK
"RTN","ECXSCXN",213,0)
 S ^ECX(ECXFILE,EC7,0)=ECODE,^ECX(ECXFILE,EC7,1)=ECODE1
"RTN","ECXSCXN",214,0)
 S DA=EC7,DIK="^ECX("_ECXFILE_"," D IX^DIK K DIK,DA
"RTN","ECXSCXN",215,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSCXN",216,0)
 Q
"RTN","ECXSCXN",217,0)
 ;
"RTN","ECXSCXN",218,0)
SETUP ;set required input for ECXTRAC
"RTN","ECXSCXN",219,0)
 S ECHEAD="CLI"
"RTN","ECXSCXN",220,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSCXN",221,0)
 Q
"RTN","ECXUTL3")
0^6^B47678275
"RTN","ECXUTL3",1,0)
ECXUTL3 ;ALB/GTS - Utilities for DSS Extracts ;October 2, 1998
"RTN","ECXUTL3",2,0)
 ;;3.0;DSS EXTRACTS;**11,24,32**;Dec 22, 1997
"RTN","ECXUTL3",3,0)
 ;
"RTN","ECXUTL3",4,0)
OUTPTTM(ECXDFN,ECXDT) ;* Return PC Team from PCMM files or DPT
"RTN","ECXUTL3",5,0)
 ; Variables -
"RTN","ECXUTL3",6,0)
 ;            ECXDFN - IEN from Patient file (Required)
"RTN","ECXUTL3",7,0)
 ;            ECXDT  - Relevant Date for Primary Care Team
"RTN","ECXUTL3",8,0)
 ;                      (Defaults to DT)
"RTN","ECXUTL3",9,0)
 ;
"RTN","ECXUTL3",10,0)
 ; Returned: ECXTM -
"RTN","ECXUTL3",11,0)
 ;            Pointer to team file (#404.51)
"RTN","ECXUTL3",12,0)
 ;            or, if error or none defined, returns 0
"RTN","ECXUTL3",13,0)
 ;
"RTN","ECXUTL3",14,0)
 Q:'$G(ECXDFN) 0 ;** Quit if ECXDFN not defined
"RTN","ECXUTL3",15,0)
 N ECXTM
"RTN","ECXUTL3",16,0)
 S:'$D(ECXDT) ECXDT=DT
"RTN","ECXUTL3",17,0)
 I $T(OUTPTTM^SDUTL3)[",SCDATE" D
"RTN","ECXUTL3",18,0)
 .S ECXTM=+$$OUTPTTM^SDUTL3(ECXDFN,ECXDT)
"RTN","ECXUTL3",19,0)
 I $T(OUTPTTM^SDUTL3)'[",SCDATE" D
"RTN","ECXUTL3",20,0)
 .S ECXTM=+$$OUTPTTM^SDUTL3(ECXDFN)
"RTN","ECXUTL3",21,0)
 I ECXTM=0 D
"RTN","ECXUTL3",22,0)
 .S ECXTM=+$P($G(^DPT(+ECXDFN,"PC")),U,2)
"RTN","ECXUTL3",23,0)
 Q ECXTM
"RTN","ECXUTL3",24,0)
 ;
"RTN","ECXUTL3",25,0)
OUTPTPR(ECXDFN,ECXDT) ;* Return PC Provider from PCMM files or DPT
"RTN","ECXUTL3",26,0)
 ; Variables -
"RTN","ECXUTL3",27,0)
 ;            ECXDFN - IEN from Patient file (Required)
"RTN","ECXUTL3",28,0)
 ;            ECXDT  - Relevant Date for Primary Care Provider
"RTN","ECXUTL3",29,0)
 ;                      (Defaults to DT)
"RTN","ECXUTL3",30,0)
 ;
"RTN","ECXUTL3",31,0)
 ; Returned: ECXPR -
"RTN","ECXUTL3",32,0)
 ;            Pointer to file #200 
"RTN","ECXUTL3",33,0)
 ;            or, if error or none defined, returns a 0
"RTN","ECXUTL3",34,0)
 ;
"RTN","ECXUTL3",35,0)
 Q:'$G(ECXDFN) 0 ;** Quit if ECXDFN not defined
"RTN","ECXUTL3",36,0)
 N ECXPR
"RTN","ECXUTL3",37,0)
 S:'$D(ECXDT) ECXDT=DT
"RTN","ECXUTL3",38,0)
 I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXUTL3",39,0)
 .S ECXPR=+$$OUTPTPR^SDUTL3(ECXDFN,ECXDT)
"RTN","ECXUTL3",40,0)
 I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXUTL3",41,0)
 .S ECXPR=+$$OUTPTPR^SDUTL3(ECXDFN)
"RTN","ECXUTL3",42,0)
 I ECXPR=0 D
"RTN","ECXUTL3",43,0)
 .S ECXPR=+$G(^DPT(+ECXDFN,"PC"))
"RTN","ECXUTL3",44,0)
 Q ECXPR
"RTN","ECXUTL3",45,0)
 ;
"RTN","ECXUTL3",46,0)
PAT(ECXDFN,ECXDATE,ECXDATA,ECXPAT) ;Return basic patient data for extract
"RTN","ECXUTL3",47,0)
 ; Will not return data associated with test patients (SSN begin w 00000)
"RTN","ECXUTL3",48,0)
 ; Variables -
"RTN","ECXUTL3",49,0)
 ;  Input  ECXDFN - Patient internal entry number, DFN file#2; required
"RTN","ECXUTL3",50,0)
 ;         ECXDATE- Date used to get specific data from GETSTAT^DGMSTAPI
"RTN","ECXUTL3",51,0)
 ;                  for MST. If no date, defaults to today's date,
"RTN","ECXUTL3",52,0)
 ;                  standard FM format, optional
"RTN","ECXUTL3",53,0)
 ;         ECXDATA- Code indicating which data to return, optional.
"RTN","ECXUTL3",54,0)
 ;                  If code not specified then returns all. Codes are:
"RTN","ECXUTL3",55,0)
 ;                  1 - DEM^VADPT (demographic data)
"RTN","ECXUTL3",56,0)
 ;                  2 - ADD^VADPT (current address)
"RTN","ECXUTL3",57,0)
 ;                  3 - ELIG^VADPT (eligibility & enrollment location)
"RTN","ECXUTL3",58,0)
 ;                  4 - OPD^VADPT (other patient data)
"RTN","ECXUTL3",59,0)
 ;                  5 - SVC^VADPT & GETSTAT^DGMSTAPI (service & MST inf)
"RTN","ECXUTL3",60,0)
 ;         ECXPAT(- Passed by referece; required
"RTN","ECXUTL3",61,0)
 ;
"RTN","ECXUTL3",62,0)
 ;  Output:
"RTN","ECXUTL3",63,0)
 ;         ECXPAT   0 error or test patient no data in ECXPAT array
"RTN","ECXUTL3",64,0)
 ;                  1 data returneed in ECXPAT array
"RTN","ECXUTL3",65,0)
 ;         ECXPAT(  Local array with patient data.
"RTN","ECXUTL3",66,0)
 ;
"RTN","ECXUTL3",67,0)
 N SSN,I,ECXCOD,ECXDAT,DFN,VAPA,VADM,VAEL,VAPD,VASV,STR,ECXAR,DIC,DIQ
"RTN","ECXUTL3",68,0)
 N DA,DR,PELG,MELIG,ZIP,MPI
"RTN","ECXUTL3",69,0)
 I ECXDFN="" Q 0
"RTN","ECXUTL3",70,0)
 S SSN=$$GET1^DIQ(2,ECXDFN,.09,"I"),DFN=ECXDFN,ECXPAT=0
"RTN","ECXUTL3",71,0)
 I $E(SSN,1,5)="00000"!(SSN="") K ECXPAT Q 0  ;test patient
"RTN","ECXUTL3",72,0)
 S STR="NAME;SSN;DOB;SEX;RACE;RELIGION;STATE;COUNTY;ZIP;SC%;MEANS;ELIG;"
"RTN","ECXUTL3",73,0)
 S STR=STR_"EMPLOY;AO STAT;IR STAT;EC STAT;POW STAT;POW LOC;MST STAT;"
"RTN","ECXUTL3",74,0)
 S STR=STR_"ENROLL LOC;MPI;VIETNAM;POS;MARITAL"
"RTN","ECXUTL3",75,0)
 ;initialize return array values
"RTN","ECXUTL3",76,0)
 F I=1:1 S ECXDAT=$P(STR,";",I) Q:ECXDAT=""  S ECXPAT(ECXDAT)=""
"RTN","ECXUTL3",77,0)
 F I=1:1:$L(ECXDATA,";") S ECXDAT=$P(ECXDATA,";",I) I ECXDAT'="" D
"RTN","ECXUTL3",78,0)
 . S ECXCOD(ECXDAT)=""
"RTN","ECXUTL3",79,0)
 ;get icn if mpi installed
"RTN","ECXUTL3",80,0)
 S X="MPIF001" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",81,0)
 . S MPI=$$GETICN^MPIF001(DFN)
"RTN","ECXUTL3",82,0)
 . S MPI=$E(MPI,"V",1),ECXPAT("MPI")=MPI
"RTN","ECXUTL3",83,0)
 D  ;get demographic data
"RTN","ECXUTL3",84,0)
 . I ECXDATA'="",'$D(ECXCOD(1)) Q
"RTN","ECXUTL3",85,0)
 . D DEM^VADPT
"RTN","ECXUTL3",86,0)
 . S ECXPAT("NAME")=$E($P(VADM(1),",")_"    ",1,4)
"RTN","ECXUTL3",87,0)
 . S ECXPAT("SSN")=$P(VADM(2),U),ECXPAT("MARITAL")=$P(VADM(10),U)
"RTN","ECXUTL3",88,0)
 . S ECXPAT("DOB")=$$ECXDOB^ECXUTL($P(VADM(3),U))
"RTN","ECXUTL3",89,0)
 . S ECXPAT("SEX")=$P(VADM(5),U),ECXPAT("RELIGION")=$P(VADM(9),U)
"RTN","ECXUTL3",90,0)
 . S DIC=10,DR=2,DA=+VADM(8),DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",91,0)
 . S ECXPAT("RACE")=$G(ECXAR(10,DA,DR,"I")),ECXPAT=1
"RTN","ECXUTL3",92,0)
 D  ;get address information
"RTN","ECXUTL3",93,0)
 . I ECXDATA'="",'$D(ECXCOD(2)) Q
"RTN","ECXUTL3",94,0)
 . D ADD^VADPT
"RTN","ECXUTL3",95,0)
 . S DIC=5,DR=2,DA=+VAPA(5),DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",96,0)
 . S ECXPAT("STATE")=$G(ECXAR(5,DA,DR,"I"))
"RTN","ECXUTL3",97,0)
 . S DIC=5,DA=+VAPA(5),DR=3,DR(5.01)=2,DA(5.01)=+VAPA(7),DIQ="ECXAR"
"RTN","ECXUTL3",98,0)
 . S DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",99,0)
 . S ECXPAT("COUNTY")=$G(ECXAR(5.01,DA(5.01),2,"I"))
"RTN","ECXUTL3",100,0)
 . S ECXPAT("ZIP")=$P(VAPA(11),U,2),ECXPAT=1
"RTN","ECXUTL3",101,0)
 D  ;get eligibility information
"RTN","ECXUTL3",102,0)
 . I ECXDATA'="",'$D(ECXCOD(3)) Q
"RTN","ECXUTL3",103,0)
 . D ELIG^VADPT
"RTN","ECXUTL3",104,0)
 . S PELG=$P(VAEL(1),U),MELIG=$S(PELG="":"",1:$$GET1^DIQ(8,PELG,8,"I"))
"RTN","ECXUTL3",105,0)
 . S ECXPAT("POS")=$P(VAEL(2),U) I ECXPAT("POS")'="" D
"RTN","ECXUTL3",106,0)
 . . S ECXPAT("POS")=$$GET1^DIQ(21,ECXPAT("POS"),.03,"I")
"RTN","ECXUTL3",107,0)
 . S ECXPAT("SC STAT")=$S(+VAEL(3):"Y",+VAEL(3)=0:"N",1:"")
"RTN","ECXUTL3",108,0)
 . S ECXPAT("SC%")=$P(VAEL(3),U,2)
"RTN","ECXUTL3",109,0)
 . S ECXPAT("VET")=$S(VAEL(4):"Y",VAEL(4)=0:"N",1:"")
"RTN","ECXUTL3",110,0)
 . S ECXPAT("MEANS")=$P(VAEL(9),U),ECXPAT=1
"RTN","ECXUTL3",111,0)
 . S ECXPAT("ELIG")=$$ELIG(MELIG,ECXPAT("SC%"))
"RTN","ECXUTL3",112,0)
 . ;get enrollment location
"RTN","ECXUTL3",113,0)
 . S DIC=2,DR=27.02,DA=ECXDFN,DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",114,0)
 . S ECXDAT=$G(ECXAR(2,ECXDFN,DR,"I")) I ECXDAT K ECXAR D
"RTN","ECXUTL3",115,0)
 . . S DIC=4,DA=ECXDAT,DR=99,DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",116,0)
 . . S ECXPAT("ENROLL LOC")=ECXAR(4,ECXDAT,DR,"I")
"RTN","ECXUTL3",117,0)
 D  ;get other patient information
"RTN","ECXUTL3",118,0)
 . I ECXDATA'="",'$D(ECXCOD(4)) Q
"RTN","ECXUTL3",119,0)
 . D OPD^VADPT
"RTN","ECXUTL3",120,0)
 . S ECXPAT("EMPLOY")=$P(VAPD(7),U),ECXPAT=1
"RTN","ECXUTL3",121,0)
 D  ;get service information
"RTN","ECXUTL3",122,0)
 . I ECXDATA'="",'$D(ECXCOD(5)) Q
"RTN","ECXUTL3",123,0)
 . D SVC^VADPT
"RTN","ECXUTL3",124,0)
 . S ECXPAT("VIETNAM")=$S(VASV(1):"Y",VASV(2)=0:"N",1:"U")
"RTN","ECXUTL3",125,0)
 . S ECXPAT("AO STAT")=$S(VASV(2):"Y",VASV(2)=0:"N",1:"U")
"RTN","ECXUTL3",126,0)
 . S ECXPAT("IR STAT")=$S(VASV(3):"Y",VASV(3)=0:"N",1:"U")
"RTN","ECXUTL3",127,0)
 . S ECXPAT("EC STAT")=$$GET1^DIQ(2,ECXDFN,.322013,"I")
"RTN","ECXUTL3",128,0)
 . S ECXPAT("POW STAT")=$S(VASV(4):"Y",VASV(4)=0:"N",1:"U")
"RTN","ECXUTL3",129,0)
 . S ECXPAT("POW LOC")=$P(VASV(4,3),U),ECXPAT=1
"RTN","ECXUTL3",130,0)
 . ;get patient current MST status
"RTN","ECXUTL3",131,0)
 . I ECXDATE'="",ECXDATE'["." S ECXDATE=ECXDATE+.9
"RTN","ECXUTL3",132,0)
 . S X="DGMSTAPI" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",133,0)
 . . S ECXDAT=$$GETSTAT^DGMSTAPI(DFN,ECXDATE)
"RTN","ECXUTL3",134,0)
 . . S ECXPAT("MST STAT")=$S(+ECXDAT>0:$P(ECXDAT,U,2),1:"")
"RTN","ECXUTL3",135,0)
 I 'ECXPAT K ECXPAT Q 0
"RTN","ECXUTL3",136,0)
 Q 1
"RTN","ECXUTL3",137,0)
 ;
"RTN","ECXUTL3",138,0)
ELIG(ECXELIG,ECXSVCP) ;Converts veteran eligibility code to NPCD code
"RTN","ECXUTL3",139,0)
 ; Variables -
"RTN","ECXUTL3",140,0)
 ;  Input  ECXELIG - Pointer to MAS ELIGIBILITY CODE file #8.1
"RTN","ECXUTL3",141,0)
 ;         ECXSVCP - Number value rep. service connected percentage.
"RTN","ECXUTL3",142,0)
 ;
"RTN","ECXUTL3",143,0)
 ;  Output:
"RTN","ECXUTL3",144,0)
 ;         ECXNCPD  NPCD Eligibility Code
"RTN","ECXUTL3",145,0)
 ;
"RTN","ECXUTL3",146,0)
 N TEXT,IEN,SCPER,FND,NPCD,I,ECXBG,ECXEN,ECXNPCD
"RTN","ECXUTL3",147,0)
 I ECXELIG="" Q ""
"RTN","ECXUTL3",148,0)
 F I=1:1 S TEXT=$P($T(ELGTXT+I),";",3,999) Q:TEXT="END"  D  I $D(NPCD) Q
"RTN","ECXUTL3",149,0)
 . S IEN=$P(TEXT,";"),SCPER=$P(TEXT,";",2)
"RTN","ECXUTL3",150,0)
 . I ECXELIG=IEN D
"RTN","ECXUTL3",151,0)
 . . I SCPER="" S NPCD=$P(TEXT,";",3) Q
"RTN","ECXUTL3",152,0)
 . . S ECXBG=$S($E(SCPER)="<":0,$E(SCPER)=">":$P(SCPER,">",2)+1,SCPER["-":+SCPER,1:"")
"RTN","ECXUTL3",153,0)
 . . S ECXEN=$S($E(SCPER)="<":$P(SCPER,"<",2),$E(SCPER)=">":100,SCPER["-":$P(SCPER,"-",2),1:"")
"RTN","ECXUTL3",154,0)
 . . I ECXSVCP'<ECXBG,ECXSVCP'>ECXEN S NPCD=$P(TEXT,";",3)
"RTN","ECXUTL3",155,0)
 S ECXNPCD=$G(NPCD)
"RTN","ECXUTL3",156,0)
 Q ECXNPCD
"RTN","ECXUTL3",157,0)
ELGTXT ;Eligibility codes
"RTN","ECXUTL3",158,0)
 ;;1;>49;10;SC 50-100%
"RTN","ECXUTL3",159,0)
 ;;2;;20;Aid & Attendance
"RTN","ECXUTL3",160,0)
 ;;15;;21;Housebound
"RTN","ECXUTL3",161,0)
 ;;16;;22;Mexican Border War
"RTN","ECXUTL3",162,0)
 ;;17;;23;WWI
"RTN","ECXUTL3",163,0)
 ;;18;;24;POW
"RTN","ECXUTL3",164,0)
 ;;3;40-49;30;SC 40-49%
"RTN","ECXUTL3",165,0)
 ;;3;30-39;31;SC 30-39%
"RTN","ECXUTL3",166,0)
 ;;3;20-29;32;SC 20-29%
"RTN","ECXUTL3",167,0)
 ;;3;10-19;33;SC 10-19%
"RTN","ECXUTL3",168,0)
 ;;3;<10;34;SC less than 10%
"RTN","ECXUTL3",169,0)
 ;;4;;40;NSC - VA Pension
"RTN","ECXUTL3",170,0)
 ;;5;;50;NSC
"RTN","ECXUTL3",171,0)
 ;;21;;60;Catastrophic Disability
"RTN","ECXUTL3",172,0)
 ;;12;;101;CHAMPVA
"RTN","ECXUTL3",173,0)
 ;;13;;102;Collateral of Veteran
"RTN","ECXUTL3",174,0)
 ;;14;;103;Employee
"RTN","ECXUTL3",175,0)
 ;;6;;104;Other Federal Agency
"RTN","ECXUTL3",176,0)
 ;;7;;105;Allied Veteran
"RTN","ECXUTL3",177,0)
 ;;8;;106;Humanitarian Emergency
"RTN","ECXUTL3",178,0)
 ;;9;;107;Sharing Agreement
"RTN","ECXUTL3",179,0)
 ;;10;;108;;Reimbursable Insurance
"RTN","ECXUTL3",180,0)
 ;;19;;109;;TRICARE/CHAMPUS
"RTN","ECXUTL3",181,0)
 ;;END
"RTN","ECXUTL3",182,0)
 ;
"RTN","ECXUTL3",183,0)
CPT(ECXCPT,ECXCMOD) ;Returns a string with CPT code and modifier codes
"RTN","ECXUTL3",184,0)
 ;Return string is composed of a 5 character CPT code plus up to 5
"RTN","ECXUTL3",185,0)
 ;modifier codes, 2 characters each.
"RTN","ECXUTL3",186,0)
 ; Variables -
"RTN","ECXUTL3",187,0)
 ;  Input  ECXCPT  - Pointer value to the CPT file (#81)
"RTN","ECXUTL3",188,0)
 ;         ECXCMOD - A string with pointer values to the CPT
"RTN","ECXUTL3",189,0)
 ;                   MODIFIER file (#81.3) separated by ";"
"RTN","ECXUTL3",190,0)
 ;
"RTN","ECXUTL3",191,0)
 ;  Output:
"RTN","ECXUTL3",192,0)
 ;         CPTMOD  - String of up to 15 characters, 5 character CPT
"RTN","ECXUTL3",193,0)
 ;                   code plus up to 5 2-character code modifiers.
"RTN","ECXUTL3",194,0)
 ;
"RTN","ECXUTL3",195,0)
 N CPT,ECXSTR,MOD,I,CPTMOD
"RTN","ECXUTL3",196,0)
 S $P(ECXSTR," ",15)=" "
"RTN","ECXUTL3",197,0)
 S CPT=$$CPT^ICPTCOD(ECXCPT,"") I +CPT=-1 Q ECXSTR
"RTN","ECXUTL3",198,0)
 S CPT=$P(CPT,U,2)
"RTN","ECXUTL3",199,0)
 F I=1:1:99 I $P(ECXCMOD,";",I)'="" D
"RTN","ECXUTL3",200,0)
 . S MOD=$$MOD^ICPTMOD($P(ECXCMOD,";",I),"I","")
"RTN","ECXUTL3",201,0)
 . I +MOD>0,$P(MOD,U,2)'="99" S CPT=CPT_$P(MOD,U,2)
"RTN","ECXUTL3",202,0)
 S CPTMOD=$E(CPT_ECXSTR,1,15)
"RTN","ECXUTL3",203,0)
 Q CPTMOD
"RTN","ECXUTL3",204,0)
 ;
"RTN","ECXUTL3",205,0)
CPTOUT(ECXCPT) ;output transform for CPT code plus modifiers
"RTN","ECXUTL3",206,0)
 ;input  ECXCPT  - character string of CPT code plus modifiers (required)
"RTN","ECXUTL3",207,0)
 ;
"RTN","ECXUTL3",208,0)
 N J,CPTX,MOD,MODS,MODX,CPTMOD,I
"RTN","ECXUTL3",209,0)
 S CPTMOD=""
"RTN","ECXUTL3",210,0)
 F I=1:15:120 S CPTX=$E(ECXCPT,I,I+4) Q:$A(CPTX)=32!(CPTX="")  D
"RTN","ECXUTL3",211,0)
 . S MODS=$E(ECXCPT,I+5,I+14),MODX=$S($A(MODS)'=32:"-",1:"")
"RTN","ECXUTL3",212,0)
 . F J=1:2:9 S MOD=$E(MODS,J,J+1) Q:MOD=""  D:$A(MOD)'=32
"RTN","ECXUTL3",213,0)
 . . S:J=1 MODX=MODX_MOD S:J>1 MODX=MODX_","_MOD
"RTN","ECXUTL3",214,0)
 . S CPTMOD=CPTMOD_CPTX_MODX_" "
"RTN","ECXUTL3",215,0)
 Q CPTMOD
"VER")
8.0^22.0
**END**
**END**
