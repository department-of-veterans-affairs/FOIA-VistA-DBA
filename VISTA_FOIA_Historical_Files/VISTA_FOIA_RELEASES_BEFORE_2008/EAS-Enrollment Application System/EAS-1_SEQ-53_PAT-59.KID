Released EAS*1*59 SEQ #53
Extracted from mail message
**KIDS**:EAS*1.0*59^

**INSTALL NAME**
EAS*1.0*59
"BLD",5862,0)
EAS*1.0*59^ENROLLMENT APPLICATION SYSTEM^0^3041108^y
"BLD",5862,4,0)
^9.64PA^^
"BLD",5862,"KRN",0)
^9.67PA^8989.52^19
"BLD",5862,"KRN",.4,0)
.4
"BLD",5862,"KRN",.401,0)
.401
"BLD",5862,"KRN",.402,0)
.402
"BLD",5862,"KRN",.403,0)
.403
"BLD",5862,"KRN",.5,0)
.5
"BLD",5862,"KRN",.84,0)
.84
"BLD",5862,"KRN",3.6,0)
3.6
"BLD",5862,"KRN",3.8,0)
3.8
"BLD",5862,"KRN",9.2,0)
9.2
"BLD",5862,"KRN",9.8,0)
9.8
"BLD",5862,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",5862,"KRN",9.8,"NM",1,0)
EASPTRN1^^0^B20699352
"BLD",5862,"KRN",9.8,"NM","B","EASPTRN1",1)

"BLD",5862,"KRN",19,0)
19
"BLD",5862,"KRN",19.1,0)
19.1
"BLD",5862,"KRN",101,0)
101
"BLD",5862,"KRN",409.61,0)
409.61
"BLD",5862,"KRN",771,0)
771
"BLD",5862,"KRN",870,0)
870
"BLD",5862,"KRN",8989.51,0)
8989.51
"BLD",5862,"KRN",8989.52,0)
8989.52
"BLD",5862,"KRN",8994,0)
8994
"BLD",5862,"KRN","B",.4,.4)

"BLD",5862,"KRN","B",.401,.401)

"BLD",5862,"KRN","B",.402,.402)

"BLD",5862,"KRN","B",.403,.403)

"BLD",5862,"KRN","B",.5,.5)

"BLD",5862,"KRN","B",.84,.84)

"BLD",5862,"KRN","B",3.6,3.6)

"BLD",5862,"KRN","B",3.8,3.8)

"BLD",5862,"KRN","B",9.2,9.2)

"BLD",5862,"KRN","B",9.8,9.8)

"BLD",5862,"KRN","B",19,19)

"BLD",5862,"KRN","B",19.1,19.1)

"BLD",5862,"KRN","B",101,101)

"BLD",5862,"KRN","B",409.61,409.61)

"BLD",5862,"KRN","B",771,771)

"BLD",5862,"KRN","B",870,870)

"BLD",5862,"KRN","B",8989.51,8989.51)

"BLD",5862,"KRN","B",8989.52,8989.52)

"BLD",5862,"KRN","B",8994,8994)

"BLD",5862,"QUES",0)
^9.62^^
"BLD",5862,"REQB",0)
^9.611^1^1
"BLD",5862,"REQB",1,0)
EAS*1.0*42^2
"BLD",5862,"REQB","B","EAS*1.0*42",1)

"MBREQ")
0
"PKG",552,-1)
1^1
"PKG",552,0)
ENROLLMENT APPLICATION SYSTEM^EAS^ENROLLMENT
"PKG",552,20,0)
^9.402P^2^1
"PKG",552,20,2,0)
2^^EASXDR
"PKG",552,20,2,1)
 
"PKG",552,20,"B",2,2)

"PKG",552,22,0)
^9.49I^1^1
"PKG",552,22,1,0)
1.0^3010315^3010419^66481
"PKG",552,22,1,"PAH",1,0)
59^3041108
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","EASPTRN1")
0^1^B20699352
"RTN","EASPTRN1",1,0)
EASPTRN1 ;ALB/EJG,GN - GENERATE EAS SUBPROCESSES ; 11/09/2004
"RTN","EASPTRN1",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**30,33,47,42,59**; 21-OCT-94
"RTN","EASPTRN1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","EASPTRN1",4,0)
 ;
"RTN","EASPTRN1",5,0)
 ; Cloned from IVMPTRN1
"RTN","EASPTRN1",6,0)
 ;
"RTN","EASPTRN1",7,0)
 ;EAS*1*47 - break up Z09's by Income year, via new "ATR" xref
"RTN","EASPTRN1",8,0)
 ;EAS*1*42 - add RXCP testing to Expired tag
"RTN","EASPTRN1",9,0)
 ;
"RTN","EASPTRN1",10,0)
 ;
"RTN","EASPTRN1",11,0)
DELMT ; send delete mt transaction if pt no longer meets IVM criteria
"RTN","EASPTRN1",12,0)
 ;
"RTN","EASPTRN1",13,0)
 ; Input - DFN
"RTN","EASPTRN1",14,0)
 ;         IVMMTDT - date of means test
"RTN","EASPTRN1",15,0)
 ;
"RTN","EASPTRN1",16,0)
 N I,IVMIY,X
"RTN","EASPTRN1",17,0)
 S IVMIY=$$LYR^DGMTSCU1(IVMMTDT)
"RTN","EASPTRN1",18,0)
 F I=1:1:5,8:1:14 S $P(X,HLFS,I)=HLQ
"RTN","EASPTRN1",19,0)
 S ^TMP("HLS",$J,HLSDT,IVMCT)="ZMT"_HLFS_X
"RTN","EASPTRN1",20,0)
 D CLOSE(IVMIY,DFN,2,3) ; set flag to stop future transmissions
"RTN","EASPTRN1",21,0)
 Q
"RTN","EASPTRN1",22,0)
 ;
"RTN","EASPTRN1",23,0)
 ;
"RTN","EASPTRN1",24,0)
CLOSE(IVMIY,DFN,IVMCS,IVMCR) ; Close IVM case record for a patient
"RTN","EASPTRN1",25,0)
 ; Input:    DFN  --  Pointer to the patient in file #2
"RTN","EASPTRN1",26,0)
 ;         IVMIY  --  Income year of the closed case
"RTN","EASPTRN1",27,0)
 ;         IVMCS  --  Closure source [1=IVM | 2=DHCP]
"RTN","EASPTRN1",28,0)
 ;         IVMCR  --  Pointer to the closure reason in file #301.93
"RTN","EASPTRN1",29,0)
 ;
"RTN","EASPTRN1",30,0)
 N DA,DIE,DR,X,Y,EVENTS,STATUS,EAEVENT,IVEVENT
"RTN","EASPTRN1",31,0)
 I '$G(IVMIY)!'$G(DFN)!'$G(IVMCS)!'$G(IVMCR) G CLOSEQ
"RTN","EASPTRN1",32,0)
 S IVMDELMT=1 ; flag indicates deletion
"RTN","EASPTRN1",33,0)
 S DA=$O(^IVM(301.5,"APT",+DFN,+IVMIY,0))
"RTN","EASPTRN1",34,0)
 I $G(^IVM(301.5,+DA,0))']"" G CLOSEQ
"RTN","EASPTRN1",35,0)
 ;
"RTN","EASPTRN1",36,0)
 ;don't want closing a case to stop transmission of an enrollment event
"RTN","EASPTRN1",37,0)
 S STATUS=1
"RTN","EASPTRN1",38,0)
 I ($$STATUS^IVMPLOG(+DA,.EVENTS)=0),EVENTS("ENROLL")=1 S STATUS=0
"RTN","EASPTRN1",39,0)
 ;
"RTN","EASPTRN1",40,0)
 ; If previous years event make sure Enrollment Event does not get 
"RTN","EASPTRN1",41,0)
 ; updated, and the IVM Event does
"RTN","EASPTRN1",42,0)
 ;
"RTN","EASPTRN1",43,0)
 S EAEVENT=1,IVEVENT=2
"RTN","EASPTRN1",44,0)
 I $G(EXPIRED)=1 S EAEVENT=2,STATUS=0,IVEVENT=1
"RTN","EASPTRN1",45,0)
 I $G(EXPIRED)=0 S EAEVENT=1,STATUS=0
"RTN","EASPTRN1",46,0)
 D NOW^%DTC S DR=".03////"_STATUS_";.04////1;1.01////"_IVMCR_";1.02////"_IVMCS_";1.03////"_%_";30.01////"_IVEVENT_";30.02////2;30.03////"_$G(EAEVENT)
"RTN","EASPTRN1",47,0)
 S DIE="^IVM(301.5," D ^DIE
"RTN","EASPTRN1",48,0)
CLOSEQ Q
"RTN","EASPTRN1",49,0)
 ;
"RTN","EASPTRN1",50,0)
 ;
"RTN","EASPTRN1",51,0)
PSEUDO ; strip P from pseudo SSNs before transmitting to IVM
"RTN","EASPTRN1",52,0)
 ;
"RTN","EASPTRN1",53,0)
 N X
"RTN","EASPTRN1",54,0)
 S X=IVMPID_$G(IVMPID(1))
"RTN","EASPTRN1",55,0)
 S $P(X,HLFS,20)=$E($P(X,HLFS,20),1,9) ; remove P
"RTN","EASPTRN1",56,0)
 K IVMPID S IVMPID=$E(X,1,245)
"RTN","EASPTRN1",57,0)
 I $L(X)>245 S IVMPID(1)=$E(X,246,999)
"RTN","EASPTRN1",58,0)
 Q
"RTN","EASPTRN1",59,0)
 ;
"RTN","EASPTRN1",60,0)
 ;Check if EDB Z06 in Annual Means Test file #408.31
"RTN","EASPTRN1",61,0)
 ; 'Z06 MT via Edb' will be stored in Comments if EDB Z06 Means Test
"RTN","EASPTRN1",62,0)
 ;
"RTN","EASPTRN1",63,0)
Z06MT(IVMMTIEN,Z06COM) N FLAG,LINE,COMMENT
"RTN","EASPTRN1",64,0)
 I '$G(IVMMTIEN) Q 0
"RTN","EASPTRN1",65,0)
 I $G(Z06COM)="" S Z06COM="Z06 MT via Edb"
"RTN","EASPTRN1",66,0)
 S (FLAG,LINE)=0
"RTN","EASPTRN1",67,0)
 F  S LINE=$O(^DGMT(408.31,IVMMTIEN,"C",LINE)) Q:'LINE!(FLAG)  D
"RTN","EASPTRN1",68,0)
 . S COMMENT=$G(^DGMT(408.31,IVMMTIEN,"C",LINE,0))
"RTN","EASPTRN1",69,0)
 . I COMMENT=Z06COM S FLAG=1 Q
"RTN","EASPTRN1",70,0)
 Q FLAG
"RTN","EASPTRN1",71,0)
 ;
"RTN","EASPTRN1",72,0)
 ;Retrieve Means Test information from incoming HL7 message.  
"RTN","EASPTRN1",73,0)
 ;
"RTN","EASPTRN1",74,0)
CHECKMT(DFN) N SOURCE,IVMLAST,IVMMTDT,IVMMTIEN
"RTN","EASPTRN1",75,0)
 I IVMTYPE'=1 Q    ;Only want MT = 1
"RTN","EASPTRN1",76,0)
 S SOURCE=$P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,22)
"RTN","EASPTRN1",77,0)
 S IVMMTDT=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,2))
"RTN","EASPTRN1",78,0)
 S IVMLAST=$$LST^DGMTU(DFN,$E(IVMMTDT,1,3)_1231,1)
"RTN","EASPTRN1",79,0)
 S IVMMTIEN=+IVMLAST
"RTN","EASPTRN1",80,0)
 Q $$Z06MT(IVMMTIEN)
"RTN","EASPTRN1",81,0)
 ;
"RTN","EASPTRN1",82,0)
 ;Based upon DFN and MT Date find primary MT
"RTN","EASPTRN1",83,0)
 ;
"RTN","EASPTRN1",84,0)
VERZ06(DFN) N CMT,CMTDATE,MTIEN,PRIM
"RTN","EASPTRN1",85,0)
 S CMT=$$LST^DGMTU(DFN)
"RTN","EASPTRN1",86,0)
 S MTIEN=+CMT,CMTDATE=$P(CMT,"^",2)
"RTN","EASPTRN1",87,0)
 I 'MTIEN Q 0                             ;No Means Test found
"RTN","EASPTRN1",88,0)
 S PRIM=$G(^DGMT(408.31,MTIEN,"PRIM"))
"RTN","EASPTRN1",89,0)
 I PRIM,$$Z06MT(MTIEN) Q 1
"RTN","EASPTRN1",90,0)
 Q 0
"RTN","EASPTRN1",91,0)
 ;
"RTN","EASPTRN1",92,0)
 ;Check for expired MT or CT                                 ;EAS*1*42
"RTN","EASPTRN1",93,0)
 ;
"RTN","EASPTRN1",94,0)
EXPIRED(DFN,DGMTDT) N CMT,PMT,CCT,PCT
"RTN","EASPTRN1",95,0)
 S (CMT,PMT,CCT,PCT)=""
"RTN","EASPTRN1",96,0)
 S:DGMTYPT=2 PCT=$$LST^DGMTU(DFN,DGMTDT,2)     ;Retrieve previous CT
"RTN","EASPTRN1",97,0)
 S PMT=$$LST^DGMTU(DFN,DGMTDT,1)               ;Retrieve previous MT
"RTN","EASPTRN1",98,0)
 I PCT="",PMT="" Q 0
"RTN","EASPTRN1",99,0)
 S:DGMTYPT=2 CCT=$$LST^DGMTU(DFN,DT,2)         ;Retrieve current CT
"RTN","EASPTRN1",100,0)
 S CMT=$$LST^DGMTU(DFN,DT,1)                   ;Retrieve current MT
"RTN","EASPTRN1",101,0)
 ;check for any expired test
"RTN","EASPTRN1",102,0)
 I DGMTYPT=2,$P(PCT,"^",2)<$P(CCT,"^",2) Q 1   ;Prev Yr CT is Expired
"RTN","EASPTRN1",103,0)
 I $P(PMT,"^",2)<$P(CMT,"^",2) Q 1             ;Prev Yr MT is Expired
"RTN","EASPTRN1",104,0)
 Q 0
"RTN","EASPTRN1",105,0)
 ;
"RTN","EASPTRN1",106,0)
 ;Determine if Z09 should be sent to EDB or HEC legacy       ;EAS*1*47
"RTN","EASPTRN1",107,0)
 ; Input:  DFN
"RTN","EASPTRN1",108,0)
 ; Output: Where to Send Z09
"RTN","EASPTRN1",109,0)
 ;          0 - HEC Legacy
"RTN","EASPTRN1",110,0)
 ;          1 - EDB
"RTN","EASPTRN1",111,0)
 ;
"RTN","EASPTRN1",112,0)
WHERETO(ICYR,DFN) N COM,DATE,FOUND,FRMDATE,IEN,MIEN,ONODE,MTD,TYPE,Z06COM
"RTN","EASPTRN1",113,0)
 S FOUND=0
"RTN","EASPTRN1",114,0)
 S Z06COM="Z06 MT via Edb"
"RTN","EASPTRN1",115,0)
 S IEN=$O(^IVM(301.61,"ATR",ICYR,DFN,0)) I IEN="" Q FOUND
"RTN","EASPTRN1",116,0)
 S FRMDATE=$P($G(^IVM(301.61,IEN,0)),"^",5) I FRMDATE="" Q FOUND
"RTN","EASPTRN1",117,0)
 S TYPE=""
"RTN","EASPTRN1",118,0)
 F  S TYPE=$O(^DGMT(408.31,"AID",TYPE)) Q:TYPE=""!(FOUND)  D
"RTN","EASPTRN1",119,0)
 .S MTD=""
"RTN","EASPTRN1",120,0)
 .F  S MTD=$O(^DGMT(408.31,"AID",TYPE,DFN,MTD)) Q:MTD=""!(FOUND)  D
"RTN","EASPTRN1",121,0)
 ..S MIEN=""
"RTN","EASPTRN1",122,0)
 ..F  S MIEN=$O(^DGMT(408.31,"AID",TYPE,DFN,MTD,MIEN)) Q:MIEN=""!(FOUND)  D
"RTN","EASPTRN1",123,0)
 ...S ONODE=$G(^DGMT(408.31,MIEN,0))
"RTN","EASPTRN1",124,0)
 ...S DATE=$P(ONODE,"^",25)                     ;Use IVM Verified Date
"RTN","EASPTRN1",125,0)
 ...I DATE="" S DATE=$P(ONODE,"^",7)            ;Use Completed Date
"RTN","EASPTRN1",126,0)
 ...S COM=$G(^DGMT(408.31,MIEN,"C",1,0))        ;Comment
"RTN","EASPTRN1",127,0)
 ...I DATE'="",COM[Z06COM,FRMDATE>(DATE-1),$G(^DGMT(408.31,MIEN,"PRIM")) S FOUND=1
"RTN","EASPTRN1",128,0)
 Q FOUND
"VER")
8.0^22
**END**
**END**
