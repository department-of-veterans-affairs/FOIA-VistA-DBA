Released IB*2*322 SEQ #299
Extracted from mail message
**KIDS**:IB*2.0*322^

**INSTALL NAME**
IB*2.0*322
"BLD",5867,0)
IB*2.0*322^INTEGRATED BILLING^0^3060209^y
"BLD",5867,1,0)
^^8^8^3060209^^
"BLD",5867,1,1,0)
In preparation for the e-Pharmacy software package, insurance
"BLD",5867,1,2,0)
staff need to match their pharmacy group plans to the appropriate
"BLD",5867,1,3,0)
VA National Plan.  (For more detailed background information
"BLD",5867,1,4,0)
regarding this matching process, please refer to the web site
"BLD",5867,1,5,0)
http://vaww.vistau.med.va.gov/VistaU/e-bp/e-pharmacy.htm and
"BLD",5867,1,6,0)
download the e-Pharmacy Claims Insurance Process User Guide
"BLD",5867,1,7,0)
There is other information available at this web site that you
"BLD",5867,1,8,0)
will find helpful regarding the e-Pharmacy project.)
"BLD",5867,4,0)
^9.64PA^^
"BLD",5867,"ABPKG")
n
"BLD",5867,"KRN",0)
^9.67PA^8989.52^19
"BLD",5867,"KRN",.4,0)
.4
"BLD",5867,"KRN",.4,"NM",0)
^9.68A^^
"BLD",5867,"KRN",.401,0)
.401
"BLD",5867,"KRN",.402,0)
.402
"BLD",5867,"KRN",.403,0)
.403
"BLD",5867,"KRN",.5,0)
.5
"BLD",5867,"KRN",.84,0)
.84
"BLD",5867,"KRN",3.6,0)
3.6
"BLD",5867,"KRN",3.8,0)
3.8
"BLD",5867,"KRN",9.2,0)
9.2
"BLD",5867,"KRN",9.8,0)
9.8
"BLD",5867,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",5867,"KRN",9.8,"NM",1,0)
IBCNRSM^^0^B52666057
"BLD",5867,"KRN",9.8,"NM","B","IBCNRSM",1)

"BLD",5867,"KRN",19,0)
19
"BLD",5867,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",5867,"KRN",19,"NM",1,0)
IBCNR SHARED MATCHES RPT TASK^^0
"BLD",5867,"KRN",19,"NM","B","IBCNR SHARED MATCHES RPT TASK",1)

"BLD",5867,"KRN",19.1,0)
19.1
"BLD",5867,"KRN",101,0)
101
"BLD",5867,"KRN",409.61,0)
409.61
"BLD",5867,"KRN",771,0)
771
"BLD",5867,"KRN",870,0)
870
"BLD",5867,"KRN",8989.51,0)
8989.51
"BLD",5867,"KRN",8989.52,0)
8989.52
"BLD",5867,"KRN",8994,0)
8994
"BLD",5867,"KRN","B",.4,.4)

"BLD",5867,"KRN","B",.401,.401)

"BLD",5867,"KRN","B",.402,.402)

"BLD",5867,"KRN","B",.403,.403)

"BLD",5867,"KRN","B",.5,.5)

"BLD",5867,"KRN","B",.84,.84)

"BLD",5867,"KRN","B",3.6,3.6)

"BLD",5867,"KRN","B",3.8,3.8)

"BLD",5867,"KRN","B",9.2,9.2)

"BLD",5867,"KRN","B",9.8,9.8)

"BLD",5867,"KRN","B",19,19)

"BLD",5867,"KRN","B",19.1,19.1)

"BLD",5867,"KRN","B",101,101)

"BLD",5867,"KRN","B",409.61,409.61)

"BLD",5867,"KRN","B",771,771)

"BLD",5867,"KRN","B",870,870)

"BLD",5867,"KRN","B",8989.51,8989.51)

"BLD",5867,"KRN","B",8989.52,8989.52)

"BLD",5867,"KRN","B",8994,8994)

"BLD",5867,"QUES",0)
^9.62^^
"BLD",5867,"REQB",0)
^9.611^^0
"KRN",19,2938271,-1)
0^1
"KRN",19,2938271,0)
IBCNR SHARED MATCHES RPT TASK^EPHARMACY SHARED MATCHES REPORT - TASKMAN^^R^^^^^^^^
"KRN",19,2938271,1,0)
^19.06^3^3^3041202^^^^
"KRN",19,2938271,1,1,0)
EPHARMACY SHARED MATCHES REPORT TASKMAN - Initiates e-pharmacy Shared 
"KRN",19,2938271,1,2,0)
Plan Matches Report which generates and sends the report - For use with 
"KRN",19,2938271,1,3,0)
TASKMAN scheduling.
"KRN",19,2938271,25)
TASKMAN^IBCNRSM
"KRN",19,2938271,"U")
EPHARMACY SHARED MATCHES REPOR
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",179,-1)
1^1
"PKG",179,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",179,20,0)
^9.402P^1^1
"PKG",179,20,1,0)
2^^IBAXDR
"PKG",179,20,1,1)

"PKG",179,20,"B",2,1)

"PKG",179,22,0)
^9.49I^1^1
"PKG",179,22,1,0)
2.0^2940321^2940528
"PKG",179,22,1,"PAH",1,0)
322^3060209
"PKG",179,22,1,"PAH",1,1,0)
^^8^8^3060209
"PKG",179,22,1,"PAH",1,1,1,0)
In preparation for the e-Pharmacy software package, insurance
"PKG",179,22,1,"PAH",1,1,2,0)
staff need to match their pharmacy group plans to the appropriate
"PKG",179,22,1,"PAH",1,1,3,0)
VA National Plan.  (For more detailed background information
"PKG",179,22,1,"PAH",1,1,4,0)
regarding this matching process, please refer to the web site
"PKG",179,22,1,"PAH",1,1,5,0)
http://vaww.vistau.med.va.gov/VistaU/e-bp/e-pharmacy.htm and
"PKG",179,22,1,"PAH",1,1,6,0)
download the e-Pharmacy Claims Insurance Process User Guide
"PKG",179,22,1,"PAH",1,1,7,0)
There is other information available at this web site that you
"PKG",179,22,1,"PAH",1,1,8,0)
will find helpful regarding the e-Pharmacy project.)
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","IBCNRSM")
0^1^B52666057
"RTN","IBCNRSM",1,0)
IBCNRSM ;DAOU/BEE - Shared Plan Matches Report ;14-OCT-2004
"RTN","IBCNRSM",2,0)
 ;;2.0;INTEGRATED BILLING;**322**;21-MAR-94
"RTN","IBCNRSM",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCNRSM",4,0)
 ;
"RTN","IBCNRSM",5,0)
 ; e-Pharmacy Shared Plan Matches Report
"RTN","IBCNRSM",6,0)
 ;
"RTN","IBCNRSM",7,0)
 ; Input parameter: N/A
"RTN","IBCNRSM",8,0)
 ;
"RTN","IBCNRSM",9,0)
 ; Predefined Variables:  U => "^"
"RTN","IBCNRSM",10,0)
 ;                       DT => Current System Date (VA format: yyymmdd)
"RTN","IBCNRSM",11,0)
 ;
"RTN","IBCNRSM",12,0)
 ; Other relevant variables:
"RTN","IBCNRSM",13,0)
 ;   IBCNRRTN = "IBCNRSM" (current routine name, used for ^XTMP and ^TMP
"RTN","IBCNRSM",14,0)
 ;                         storage subscript)
"RTN","IBCNRSM",15,0)
 ; Storage Global:
"RTN","IBCNRSM",16,0)
 ;   ^XTMP("IBCNRSM",0) = Piece 1^Piece 2^Piece 3^Piece 4^Piece 5^Piece 6
"RTN","IBCNRSM",17,0)
 ;      where:
"RTN","IBCNRSM",18,0)
 ;      Piece 1 => Purge Date - 1 year in future
"RTN","IBCNRSM",19,0)
 ;      Piece 2 => Create Date - Today
"RTN","IBCNRSM",20,0)
 ;      Piece 3 => Description
"RTN","IBCNRSM",21,0)
 ;      Piece 4 => Last Date Compiled
"RTN","IBCNRSM",22,0)
 ;      Piece 5 => $H of Paid Date Compile
"RTN","IBCNRSM",23,0)
 ;      Piece 6 => $H last run completion time
"RTN","IBCNRSM",24,0)
 ;
"RTN","IBCNRSM",25,0)
 ;   ^XTMP("IBCNRSM",1,IEN) = LDT
"RTN","IBCNRSM",26,0)
 ;      where:
"RTN","IBCNRSM",27,0)
 ;          IEN => Internal GROUP INSURANCE index entry
"RTN","IBCNRSM",28,0)
 ;          LDT => Last Date Paid, VA Fileman Format
"RTN","IBCNRSM",29,0)
 ;
"RTN","IBCNRSM",30,0)
 ; Entry Point - TASKMAN => Run report in background using TASKMAN
"RTN","IBCNRSM",31,0)
 ;
"RTN","IBCNRSM",32,0)
 Q
"RTN","IBCNRSM",33,0)
 ;
"RTN","IBCNRSM",34,0)
 ; TASKMAN ENTRY POINT
"RTN","IBCNRSM",35,0)
 ;
"RTN","IBCNRSM",36,0)
TASKMAN N IBCNRRTN,P,D0,D1,D2,DG,DIC,DICR,DISYS,DIW,Y
"RTN","IBCNRSM",37,0)
 ;
"RTN","IBCNRSM",38,0)
 ;Process Report
"RTN","IBCNRSM",39,0)
 ;
"RTN","IBCNRSM",40,0)
 ;Initialize variables
"RTN","IBCNRSM",41,0)
 S IBCNRRTN="IBCNRSM"
"RTN","IBCNRSM",42,0)
 S P="|"
"RTN","IBCNRSM",43,0)
 ;
"RTN","IBCNRSM",44,0)
 ;Check to see if report is in use
"RTN","IBCNRSM",45,0)
 L +^XTMP(IBCNRRTN):5 I '$T G EXIT
"RTN","IBCNRSM",46,0)
 ;
"RTN","IBCNRSM",47,0)
 ;Reset Temporary Scratch Global
"RTN","IBCNRSM",48,0)
 K ^TMP(IBCNRRTN,$J)
"RTN","IBCNRSM",49,0)
 ;
"RTN","IBCNRSM",50,0)
 ;Check for required variables
"RTN","IBCNRSM",51,0)
 I $G(U)=""!($G(DT)="") G EXIT
"RTN","IBCNRSM",52,0)
 ;
"RTN","IBCNRSM",53,0)
 ;Pull Station (Institution) address
"RTN","IBCNRSM",54,0)
 D STAT(IBCNRRTN)
"RTN","IBCNRSM",55,0)
 ;
"RTN","IBCNRSM",56,0)
 ;Perform Compile
"RTN","IBCNRSM",57,0)
 ;
"RTN","IBCNRSM",58,0)
 ;Recompile the Paid Date Index
"RTN","IBCNRSM",59,0)
 D PDT(IBCNRRTN,DT)
"RTN","IBCNRSM",60,0)
 ;
"RTN","IBCNRSM",61,0)
 ;Process the entries
"RTN","IBCNRSM",62,0)
 D PROC(IBCNRRTN)
"RTN","IBCNRSM",63,0)
 ;
"RTN","IBCNRSM",64,0)
 ;Send the message
"RTN","IBCNRSM",65,0)
 D EMAIL(IBCNRRTN)
"RTN","IBCNRSM",66,0)
 ;
"RTN","IBCNRSM",67,0)
 ;Log Run Completion Time
"RTN","IBCNRSM",68,0)
 S $P(^XTMP(IBCNRRTN,0),U,6)=$H
"RTN","IBCNRSM",69,0)
 ;
"RTN","IBCNRSM",70,0)
 ;Standard EXIT point
"RTN","IBCNRSM",71,0)
EXIT K ^TMP(IBCNRRTN,$J)
"RTN","IBCNRSM",72,0)
 L -^XTMP(IBCNRRTN)
"RTN","IBCNRSM",73,0)
 K IBCNRRTN,P,D0,D1,D2,DG,DIC,DICR,DISYS,DIW,Y
"RTN","IBCNRSM",74,0)
 Q
"RTN","IBCNRSM",75,0)
 ;
"RTN","IBCNRSM",76,0)
 ; PULL STATION AND INSTITUTION ADDRESS
"RTN","IBCNRSM",77,0)
 ;
"RTN","IBCNRSM",78,0)
STAT(IBCNRRTN) N INST,N,CITY,SINFO,SITE,STATE,ZIP
"RTN","IBCNRSM",79,0)
 S (CITY,STATE,ZIP)=""
"RTN","IBCNRSM",80,0)
 ;
"RTN","IBCNRSM",81,0)
 ;Pull Site Info
"RTN","IBCNRSM",82,0)
 S SINFO=$$SITE^VASITE
"RTN","IBCNRSM",83,0)
 S SITE=$P(SINFO,U,3)
"RTN","IBCNRSM",84,0)
 S INST=$P(SINFO,U)
"RTN","IBCNRSM",85,0)
 ;
"RTN","IBCNRSM",86,0)
 I INST D
"RTN","IBCNRSM",87,0)
 .S N(0)=$G(^DIC(4,INST,0))
"RTN","IBCNRSM",88,0)
 .S N(1)=$G(^DIC(4,INST,1))
"RTN","IBCNRSM",89,0)
 .S CITY=$P(N(1),U,3)
"RTN","IBCNRSM",90,0)
 .S STATE=$P(N(0),U,2)
"RTN","IBCNRSM",91,0)
 .I STATE S STATE=$P($G(^DIC(5,STATE,0)),U,2)
"RTN","IBCNRSM",92,0)
 .S ZIP=$P(N(1),U,4)
"RTN","IBCNRSM",93,0)
 S ^TMP(IBCNRRTN,$J,1)="Station: "_SITE_P_CITY_P_STATE_P_ZIP
"RTN","IBCNRSM",94,0)
 ;
"RTN","IBCNRSM",95,0)
 K IBCNRRTN,INST,N,CITY,SINFO,SITE,STATE,ZIP
"RTN","IBCNRSM",96,0)
 Q
"RTN","IBCNRSM",97,0)
 ;
"RTN","IBCNRSM",98,0)
 ; PROCESS EACH GROUP INSURANCE ENTRY
"RTN","IBCNRSM",99,0)
 ;
"RTN","IBCNRSM",100,0)
PROC(IBCNRRTN) N COUNT,IGRP,IPAYER,IINS,GRPDATA,INSDATA,PLNDATA,PAYDATA,PDTDATA,PLANID
"RTN","IBCNRSM",101,0)
 ;
"RTN","IBCNRSM",102,0)
 ;Initialize Counter
"RTN","IBCNRSM",103,0)
 S COUNT=1
"RTN","IBCNRSM",104,0)
 ;
"RTN","IBCNRSM",105,0)
 ;Loop through GROUP INSURANCE PLAN and process any item with a PLANID
"RTN","IBCNRSM",106,0)
 S IGRP=0 F  S IGRP=$O(^IBA(355.3,IGRP)) Q:'IGRP  D
"RTN","IBCNRSM",107,0)
 .;
"RTN","IBCNRSM",108,0)
 .;Get PLANID and process each entry
"RTN","IBCNRSM",109,0)
 .S PLANID=$P($G(^IBA(355.3,IGRP,6)),U) I 'PLANID Q
"RTN","IBCNRSM",110,0)
 .;
"RTN","IBCNRSM",111,0)
 .;Pull Group Information
"RTN","IBCNRSM",112,0)
 .S GRPDATA=$$GRP(IGRP)
"RTN","IBCNRSM",113,0)
 .;
"RTN","IBCNRSM",114,0)
 .;Get Insurance Lookup from GROUP INSURANCE
"RTN","IBCNRSM",115,0)
 .S IINS=+$P($G(^IBA(355.3,IGRP,0)),U)
"RTN","IBCNRSM",116,0)
 .;
"RTN","IBCNRSM",117,0)
 .;Pull Insurance Information from INSURANCE COMPANY
"RTN","IBCNRSM",118,0)
 .S INSDATA=$$INS(IINS)
"RTN","IBCNRSM",119,0)
 .;
"RTN","IBCNRSM",120,0)
 .;Get Plan info from PLAN
"RTN","IBCNRSM",121,0)
 .S PLNDATA=$$PLAN(PLANID) I PLNDATA="" Q
"RTN","IBCNRSM",122,0)
 .;
"RTN","IBCNRSM",123,0)
 .;Get Payer Lookup from PLAN
"RTN","IBCNRSM",124,0)
 .S IPAYER=+$P($G(^IBCNR(366.03,PLANID,0)),U,3)
"RTN","IBCNRSM",125,0)
 .;
"RTN","IBCNRSM",126,0)
 .;If no (or invalid) Payer Lookup in PLAN, Pull from INSURANCE COMPANY
"RTN","IBCNRSM",127,0)
 .I IPAYER=0!('$D(^IBE(365.12,IPAYER,0))) S IPAYER=+$P($G(^DIC(36,IINS,3)),U,10)
"RTN","IBCNRSM",128,0)
 .;
"RTN","IBCNRSM",129,0)
 .;Pull Payer Information
"RTN","IBCNRSM",130,0)
 .S PAYDATA=P_P I IPAYER S PAYDATA=$$PAYER(IPAYER)
"RTN","IBCNRSM",131,0)
 .;
"RTN","IBCNRSM",132,0)
 .;Last Paid Date
"RTN","IBCNRSM",133,0)
 .S PDTDATA=$$PAID(IBCNRRTN,IGRP)
"RTN","IBCNRSM",134,0)
 .;
"RTN","IBCNRSM",135,0)
 .;Update Counter and Save Entry
"RTN","IBCNRSM",136,0)
 .S COUNT=$G(COUNT)+1
"RTN","IBCNRSM",137,0)
 .S ^TMP(IBCNRRTN,$J,COUNT)=INSDATA_P_PAYDATA_P_GRPDATA_P_PLNDATA_P_PDTDATA
"RTN","IBCNRSM",138,0)
 ;
"RTN","IBCNRSM",139,0)
 K IBCNRRTN,COUNT,IGRP,IPAYER,IINS,GRPDATA,INSDATA,PLNDATA,PAYDATA,PDTDATA,PLANID
"RTN","IBCNRSM",140,0)
 Q
"RTN","IBCNRSM",141,0)
 ;
"RTN","IBCNRSM",142,0)
 ; PULL GROUP INFORMATION
"RTN","IBCNRSM",143,0)
 ;
"RTN","IBCNRSM",144,0)
 ; Function Returns Piece 1 -> Group Name
"RTN","IBCNRSM",145,0)
 ;                        2 -> Group Number
"RTN","IBCNRSM",146,0)
 ;                    
"RTN","IBCNRSM",147,0)
GRP(IGRP) N GRPDATA,NAME,NUMB,N
"RTN","IBCNRSM",148,0)
 ;
"RTN","IBCNRSM",149,0)
 S N=$G(^IBA(355.3,IGRP,0))
"RTN","IBCNRSM",150,0)
 ;
"RTN","IBCNRSM",151,0)
 ;Group Name
"RTN","IBCNRSM",152,0)
 S NAME=$P(N,U,3)
"RTN","IBCNRSM",153,0)
 ;
"RTN","IBCNRSM",154,0)
 ;Group Number
"RTN","IBCNRSM",155,0)
 S NUMB=$P(N,U,4)
"RTN","IBCNRSM",156,0)
 ;
"RTN","IBCNRSM",157,0)
 S GRPDATA=NAME_P_NUMB
"RTN","IBCNRSM",158,0)
 K IGRP,NAME,NUMB,N
"RTN","IBCNRSM",159,0)
 Q GRPDATA
"RTN","IBCNRSM",160,0)
 ;
"RTN","IBCNRSM",161,0)
 ; GET INSURANCE INFORMATION
"RTN","IBCNRSM",162,0)
 ;
"RTN","IBCNRSM",163,0)
 ; Return Variable:  Piece 1 -> Company Name
"RTN","IBCNRSM",164,0)
 ;                         2 -> Company Address 1
"RTN","IBCNRSM",165,0)
 ;                         3 -> Company Address 2
"RTN","IBCNRSM",166,0)
 ;                         4 -> Company City
"RTN","IBCNRSM",167,0)
 ;                         5 -> Company State
"RTN","IBCNRSM",168,0)
 ;                         6 -> Company Zip Code
"RTN","IBCNRSM",169,0)
 ;                           
"RTN","IBCNRSM",170,0)
INS(IINS) N ADDR1,ADDR2,CITY,NAME,N,STATE,ZIP
"RTN","IBCNRSM",171,0)
 ;
"RTN","IBCNRSM",172,0)
 ;Reset Return Variable
"RTN","IBCNRSM",173,0)
 S INSDATA=P_P_P_P_P I IINS="" G XINS
"RTN","IBCNRSM",174,0)
 ;
"RTN","IBCNRSM",175,0)
 S NAME=$P($G(^DIC(36,IINS,0)),U)
"RTN","IBCNRSM",176,0)
 S N=$G(^DIC(36,IINS,.11))
"RTN","IBCNRSM",177,0)
 S ADDR1=$P(N,U,1)                              ;Address Line 1
"RTN","IBCNRSM",178,0)
 S ADDR2=$P(N,U,2)                              ;Address Line 2
"RTN","IBCNRSM",179,0)
 S CITY=$P(N,U,4)                               ;City
"RTN","IBCNRSM",180,0)
 S STATE=$P(N,U,5)                              ;State
"RTN","IBCNRSM",181,0)
 I STATE]"" S STATE=$P($G(^DIC(5,STATE,0)),U,2)
"RTN","IBCNRSM",182,0)
 S ZIP=$P(N,U,6)                                ;Zip Code
"RTN","IBCNRSM",183,0)
 ;
"RTN","IBCNRSM",184,0)
XINS I IINS]"" S INSDATA=NAME_P_ADDR1_P_ADDR2_P_CITY_P_STATE_P_ZIP
"RTN","IBCNRSM",185,0)
 K IINS,ADDR1,ADDR2,CITY,NAME,N,STATE,ZIP
"RTN","IBCNRSM",186,0)
 Q INSDATA
"RTN","IBCNRSM",187,0)
 ;
"RTN","IBCNRSM",188,0)
 ; GET PAYER INFORMATION
"RTN","IBCNRSM",189,0)
 ;
"RTN","IBCNRSM",190,0)
 ; Return Variable: Piece 1 -> VA National Payer ID
"RTN","IBCNRSM",191,0)
 ;                        2 -> Professional ID
"RTN","IBCNRSM",192,0)
 ;                        3 -> Institutional ID
"RTN","IBCNRSM",193,0)
 ;
"RTN","IBCNRSM",194,0)
PAYER(IPAYER) N N,VAID,PROF,INST,PAYDATA
"RTN","IBCNRSM",195,0)
 ;
"RTN","IBCNRSM",196,0)
 S N=$G(^IBE(365.12,IPAYER,0))
"RTN","IBCNRSM",197,0)
 S VAID=$P(N,U,2)                ;VA National Payer ID
"RTN","IBCNRSM",198,0)
 S PROF=$P(N,U,5)                ;Professional ID
"RTN","IBCNRSM",199,0)
 S INST=$P(N,U,6)                ;Institutional ID
"RTN","IBCNRSM",200,0)
 ;
"RTN","IBCNRSM",201,0)
 S PAYDATA=INST_P_PROF_P_VAID
"RTN","IBCNRSM",202,0)
 K IPAYER,N,VAID,PROF,INST
"RTN","IBCNRSM",203,0)
 Q PAYDATA
"RTN","IBCNRSM",204,0)
 ;
"RTN","IBCNRSM",205,0)
 ; GET PLAN INFORMATION
"RTN","IBCNRSM",206,0)
 ;
"RTN","IBCNRSM",207,0)
 ; Return Variable: Piece 1 -> VA National Plan ID
"RTN","IBCNRSM",208,0)
 ;
"RTN","IBCNRSM",209,0)
PLAN(PLANID) N PLNDATA
"RTN","IBCNRSM",210,0)
 ;
"RTN","IBCNRSM",211,0)
 ;Get Plan ID
"RTN","IBCNRSM",212,0)
 S PLNDATA=$P($G(^IBCNR(366.03,PLANID,0)),U)
"RTN","IBCNRSM",213,0)
 ;
"RTN","IBCNRSM",214,0)
 K PLANID
"RTN","IBCNRSM",215,0)
 Q PLNDATA
"RTN","IBCNRSM",216,0)
 ;
"RTN","IBCNRSM",217,0)
 ; GET LAST DATE PAID
"RTN","IBCNRSM",218,0)
 ;
"RTN","IBCNRSM",219,0)
PAID(IBCNRRTN,IGRP) N PDTDATA
"RTN","IBCNRSM",220,0)
 ;
"RTN","IBCNRSM",221,0)
 ;Pull Last Date Paid from Storage Global
"RTN","IBCNRSM",222,0)
 S PDTDATA=$G(^XTMP(IBCNRRTN,1,IGRP))
"RTN","IBCNRSM",223,0)
 ;
"RTN","IBCNRSM",224,0)
 ;Convert to External Format
"RTN","IBCNRSM",225,0)
 I PDTDATA]"" S PDTDATA=PDTDATA+17000000
"RTN","IBCNRSM",226,0)
 ;
"RTN","IBCNRSM",227,0)
 K IBCNRRTN,IGRP
"RTN","IBCNRSM",228,0)
 Q PDTDATA
"RTN","IBCNRSM",229,0)
 ;
"RTN","IBCNRSM",230,0)
 ; COMPILE THE PAID DATE SCRATCH GLOBAL
"RTN","IBCNRSM",231,0)
 ;
"RTN","IBCNRSM",232,0)
PDT(IBCNRRTN,DATE) N CDT,RDT,LDT,LASTDT,XBPS,CID,IEN,DESC
"RTN","IBCNRSM",233,0)
 ;
"RTN","IBCNRSM",234,0)
 ;Pull the current information from ^XTMP
"RTN","IBCNRSM",235,0)
 S CDT=$P($G(^XTMP(IBCNRRTN,0)),U,4)  ;Last Date Compiled
"RTN","IBCNRSM",236,0)
 ;
"RTN","IBCNRSM",237,0)
 ;Capture the most current response entry
"RTN","IBCNRSM",238,0)
 S LASTDT=$P($O(^BPSR("AE",""),-1),".")
"RTN","IBCNRSM",239,0)
 ;
"RTN","IBCNRSM",240,0)
 ;Loop through Response Received Index and get latest paid date
"RTN","IBCNRSM",241,0)
 S RDT="" F  S RDT=$O(^BPSR("AE",RDT),-1),LDT=$P(RDT,".") Q:RDT=""!(LDT<CDT)  D
"RTN","IBCNRSM",242,0)
 .S XBPS="" F  S XBPS=$O(^BPSR("AE",RDT,XBPS)) Q:XBPS=""  D
"RTN","IBCNRSM",243,0)
 ..;
"RTN","IBCNRSM",244,0)
 ..;Screen out any non-accepted claims
"RTN","IBCNRSM",245,0)
 ..I $P($G(^BPSR(XBPS,500)),U)'="A" Q
"RTN","IBCNRSM",246,0)
 ..;
"RTN","IBCNRSM",247,0)
 ..;Pull Claim Internal ID
"RTN","IBCNRSM",248,0)
 ..S CID=$P($G(^BPSR(XBPS,0)),U) I CID="" Q
"RTN","IBCNRSM",249,0)
 ..;
"RTN","IBCNRSM",250,0)
 ..;Pull VA Plan IEN (Lookup to Group Insurance)
"RTN","IBCNRSM",251,0)
 ..S IEN=$P($G(^BPSC(CID,1)),U,4) I IEN="" Q
"RTN","IBCNRSM",252,0)
 ..;
"RTN","IBCNRSM",253,0)
 ..;If more recent Response Date update storage entry
"RTN","IBCNRSM",254,0)
 ..I (LDT>$G(^XTMP(IBCNRRTN,1,IEN))) S ^XTMP(IBCNRRTN,1,IEN)=LDT
"RTN","IBCNRSM",255,0)
 ;
"RTN","IBCNRSM",256,0)
 ;Update ^XTMP(IBCNRRTN,0) top level entry
"RTN","IBCNRSM",257,0)
 S DESC="Shared Plan Matches Report Storage - Do Not Delete"
"RTN","IBCNRSM",258,0)
 S ^XTMP(IBCNRRTN,0)=(DATE+10000)_U_DATE_U_DESC_U_LASTDT_U_$H
"RTN","IBCNRSM",259,0)
 ;
"RTN","IBCNRSM",260,0)
 K IBCNRRTN,DATE,CDT,RDT,LDT,XBPS,CID,IEN,DESC,LASTDT
"RTN","IBCNRSM",261,0)
 Q
"RTN","IBCNRSM",262,0)
 ;
"RTN","IBCNRSM",263,0)
 ; EMAIL THE MESSAGE
"RTN","IBCNRSM",264,0)
 ;
"RTN","IBCNRSM",265,0)
EMAIL(IBCNRRTN) N XMY,XMTEXT,XMSUB,XMDUN,XMDUZ,XMZ
"RTN","IBCNRSM",266,0)
 ;
"RTN","IBCNRSM",267,0)
 S XMTEXT="^TMP("""_IBCNRRTN_""","_$J_","
"RTN","IBCNRSM",268,0)
 S XMY("JANUS@MED.VA.GOV")=""
"RTN","IBCNRSM",269,0)
 S XMSUB=$TR($P($G(^TMP(IBCNRRTN,$J,1)),P),":")_" Matches"
"RTN","IBCNRSM",270,0)
 D ^XMD
"RTN","IBCNRSM",271,0)
 ;
"RTN","IBCNRSM",272,0)
 K IBCNRRTN,XMY,XMTEXT,XMSUB,XMDUN,XMDUZ,XMZ
"RTN","IBCNRSM",273,0)
 Q
"VER")
8.0^22.0
"BLD",5867,6)
^299
**END**
**END**
