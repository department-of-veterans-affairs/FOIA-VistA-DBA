KIDS Distribution saved on Jan 04, 2006@12:02:37
DG*5.3*538
**KIDS**:DG*5.3*538^

**INSTALL NAME**
DG*5.3*538
"BLD",4983,0)
DG*5.3*538^REGISTRATION^0^3060104^y
"BLD",4983,1,0)
^^1^1^3040928^
"BLD",4983,1,1,0)
Patch contains functionality for GUI Patient Lookup.
"BLD",4983,4,0)
^9.64PA^^
"BLD",4983,"ABNS",0)
^9.66A^1^1
"BLD",4983,"ABNS",1,0)
DG
"BLD",4983,"ABNS",1,1,0)
^9.661A^^
"BLD",4983,"ABNS","B","DG",1)

"BLD",4983,"ABPKG")
n^n
"BLD",4983,"INID")
^
"BLD",4983,"INIT")
DG53538P
"BLD",4983,"KRN",0)
^9.67PA^8989.52^19
"BLD",4983,"KRN",.4,0)
.4
"BLD",4983,"KRN",.401,0)
.401
"BLD",4983,"KRN",.402,0)
.402
"BLD",4983,"KRN",.403,0)
.403
"BLD",4983,"KRN",.5,0)
.5
"BLD",4983,"KRN",.84,0)
.84
"BLD",4983,"KRN",3.6,0)
3.6
"BLD",4983,"KRN",3.8,0)
3.8
"BLD",4983,"KRN",9.2,0)
9.2
"BLD",4983,"KRN",9.8,0)
9.8
"BLD",4983,"KRN",9.8,"NM",0)
^9.68A^13^12
"BLD",4983,"KRN",9.8,"NM",1,0)
DGRRLU^^0^B38010373
"BLD",4983,"KRN",9.8,"NM",2,0)
DGRRLU0^^0^B36764979
"BLD",4983,"KRN",9.8,"NM",3,0)
DGRRLU1^^0^B55226700
"BLD",4983,"KRN",9.8,"NM",4,0)
DGRRLU1A^^0^B29052428
"BLD",4983,"KRN",9.8,"NM",5,0)
DGRRLU2^^0^B12113753
"BLD",4983,"KRN",9.8,"NM",6,0)
DGRRLU3^^0^B63039034
"BLD",4983,"KRN",9.8,"NM",7,0)
DGRRLU4^^0^B18531017
"BLD",4983,"KRN",9.8,"NM",8,0)
DGRRLU5^^0^B34859755
"BLD",4983,"KRN",9.8,"NM",9,0)
DGRRLU6^^0^B34442401
"BLD",4983,"KRN",9.8,"NM",11,0)
DGRRUTL^^0^B4044912
"BLD",4983,"KRN",9.8,"NM",12,0)
DGRRLUA^^0^B14717059
"BLD",4983,"KRN",9.8,"NM",13,0)
DPTLK1^^0^B41327686
"BLD",4983,"KRN",9.8,"NM","B","DGRRLU",1)

"BLD",4983,"KRN",9.8,"NM","B","DGRRLU0",2)

"BLD",4983,"KRN",9.8,"NM","B","DGRRLU1",3)

"BLD",4983,"KRN",9.8,"NM","B","DGRRLU1A",4)

"BLD",4983,"KRN",9.8,"NM","B","DGRRLU2",5)

"BLD",4983,"KRN",9.8,"NM","B","DGRRLU3",6)

"BLD",4983,"KRN",9.8,"NM","B","DGRRLU4",7)

"BLD",4983,"KRN",9.8,"NM","B","DGRRLU5",8)

"BLD",4983,"KRN",9.8,"NM","B","DGRRLU6",9)

"BLD",4983,"KRN",9.8,"NM","B","DGRRLUA",12)

"BLD",4983,"KRN",9.8,"NM","B","DGRRUTL",11)

"BLD",4983,"KRN",9.8,"NM","B","DPTLK1",13)

"BLD",4983,"KRN",19,0)
19
"BLD",4983,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",4983,"KRN",19,"NM",1,0)
DGRR GUI PATIENT LOOKUP^^0
"BLD",4983,"KRN",19,"NM","B","DGRR GUI PATIENT LOOKUP",1)

"BLD",4983,"KRN",19.1,0)
19.1
"BLD",4983,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",4983,"KRN",19.1,"NM",1,0)
DGRR PLU ADMINISTRATOR^^0
"BLD",4983,"KRN",19.1,"NM","B","DGRR PLU ADMINISTRATOR",1)

"BLD",4983,"KRN",101,0)
101
"BLD",4983,"KRN",101,"NM",0)
^9.68A^^
"BLD",4983,"KRN",409.61,0)
409.61
"BLD",4983,"KRN",771,0)
771
"BLD",4983,"KRN",870,0)
870
"BLD",4983,"KRN",8989.51,0)
8989.51
"BLD",4983,"KRN",8989.51,"NM",0)
^9.68A^13^10
"BLD",4983,"KRN",8989.51,"NM",1,0)
DGRR PL GENDER^^0
"BLD",4983,"KRN",8989.51,"NM",2,0)
DGRR PL MAX NUM PATIENTS RET^^0
"BLD",4983,"KRN",8989.51,"NM",3,0)
DGRR PL PATIENT TYPE^^0
"BLD",4983,"KRN",8989.51,"NM",4,0)
DGRR PL PRIMARY ELIGIBILITY^^0
"BLD",4983,"KRN",8989.51,"NM",8,0)
DGRR PL ROOM BED^^0
"BLD",4983,"KRN",8989.51,"NM",9,0)
DGRR PL SERVICE CONNECTED^^0
"BLD",4983,"KRN",8989.51,"NM",10,0)
DGRR PL VETERAN STATUS^^0
"BLD",4983,"KRN",8989.51,"NM",11,0)
DGRR PL WARD^^0
"BLD",4983,"KRN",8989.51,"NM",12,0)
DGRR PL NUM PATIENTS PER PAGE^^0
"BLD",4983,"KRN",8989.51,"NM",13,0)
DGRR PL VETERAN IMAGE^^0
"BLD",4983,"KRN",8989.51,"NM","B","DGRR PL GENDER",1)

"BLD",4983,"KRN",8989.51,"NM","B","DGRR PL MAX NUM PATIENTS RET",2)

"BLD",4983,"KRN",8989.51,"NM","B","DGRR PL NUM PATIENTS PER PAGE",12)

"BLD",4983,"KRN",8989.51,"NM","B","DGRR PL PATIENT TYPE",3)

"BLD",4983,"KRN",8989.51,"NM","B","DGRR PL PRIMARY ELIGIBILITY",4)

"BLD",4983,"KRN",8989.51,"NM","B","DGRR PL ROOM BED",8)

"BLD",4983,"KRN",8989.51,"NM","B","DGRR PL SERVICE CONNECTED",9)

"BLD",4983,"KRN",8989.51,"NM","B","DGRR PL VETERAN IMAGE",13)

"BLD",4983,"KRN",8989.51,"NM","B","DGRR PL VETERAN STATUS",10)

"BLD",4983,"KRN",8989.51,"NM","B","DGRR PL WARD",11)

"BLD",4983,"KRN",8989.52,0)
8989.52
"BLD",4983,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",4983,"KRN",8994,0)
8994
"BLD",4983,"KRN",8994,"NM",0)
^9.68A^7^7
"BLD",4983,"KRN",8994,"NM",1,0)
DGRR GET LOOKUP TYPE LIST^^0
"BLD",4983,"KRN",8994,"NM",2,0)
DGRR GET PTLK BUSINESS DATA^^0
"BLD",4983,"KRN",8994,"NM",3,0)
DGRR PATIENT LKUP PREFERENCES^^0
"BLD",4983,"KRN",8994,"NM",4,0)
DGRR PATIENT LOOKUP SEARCH^^0
"BLD",4983,"KRN",8994,"NM",5,0)
DGRR SET PTLK PREFERENCES^^0
"BLD",4983,"KRN",8994,"NM",6,0)
DGRR SET SENSITIVE ACCESS LOG^^0
"BLD",4983,"KRN",8994,"NM",7,0)
DGRR CANCEL SEARCH^^0
"BLD",4983,"KRN",8994,"NM","B","DGRR CANCEL SEARCH",7)

"BLD",4983,"KRN",8994,"NM","B","DGRR GET LOOKUP TYPE LIST",1)

"BLD",4983,"KRN",8994,"NM","B","DGRR GET PTLK BUSINESS DATA",2)

"BLD",4983,"KRN",8994,"NM","B","DGRR PATIENT LKUP PREFERENCES",3)

"BLD",4983,"KRN",8994,"NM","B","DGRR PATIENT LOOKUP SEARCH",4)

"BLD",4983,"KRN",8994,"NM","B","DGRR SET PTLK PREFERENCES",5)

"BLD",4983,"KRN",8994,"NM","B","DGRR SET SENSITIVE ACCESS LOG",6)

"BLD",4983,"KRN","B",.4,.4)

"BLD",4983,"KRN","B",.401,.401)

"BLD",4983,"KRN","B",.402,.402)

"BLD",4983,"KRN","B",.403,.403)

"BLD",4983,"KRN","B",.5,.5)

"BLD",4983,"KRN","B",.84,.84)

"BLD",4983,"KRN","B",3.6,3.6)

"BLD",4983,"KRN","B",3.8,3.8)

"BLD",4983,"KRN","B",9.2,9.2)

"BLD",4983,"KRN","B",9.8,9.8)

"BLD",4983,"KRN","B",19,19)

"BLD",4983,"KRN","B",19.1,19.1)

"BLD",4983,"KRN","B",101,101)

"BLD",4983,"KRN","B",409.61,409.61)

"BLD",4983,"KRN","B",771,771)

"BLD",4983,"KRN","B",870,870)

"BLD",4983,"KRN","B",8989.51,8989.51)

"BLD",4983,"KRN","B",8989.52,8989.52)

"BLD",4983,"KRN","B",8994,8994)

"BLD",4983,"QUES",0)
^9.62^^
"BLD",4983,"REQB",0)
^9.611^5^3
"BLD",4983,"REQB",1,0)
XU*8.0*309^2
"BLD",4983,"REQB",4,0)
XU*8.0*325^2
"BLD",4983,"REQB",5,0)
DG*5.3*680^2
"BLD",4983,"REQB","B","DG*5.3*680",5)

"BLD",4983,"REQB","B","XU*8.0*309",1)

"BLD",4983,"REQB","B","XU*8.0*325",4)

"INIT")
DG53538P
"KRN",19,11859,-1)
0^1
"KRN",19,11859,0)
DGRR GUI PATIENT LOOKUP^GUI Patient Lookup RPC access^^B^^^^^^^^REGISTRATION
"KRN",19,11859,1,0)
^^1^1^3030709^
"KRN",19,11859,1,1,0)
The main option to provide RPC access for Java Patient Lookup users.
"KRN",19,11859,99.1)
59359,58522
"KRN",19,11859,"RPC",0)
^19.05P^10^10
"KRN",19,11859,"RPC",1,0)
DGRR GET LOOKUP TYPE LIST
"KRN",19,11859,"RPC",2,0)
DGRR PATIENT LOOKUP SEARCH
"KRN",19,11859,"RPC",3,0)
DGRR SET SENSITIVE ACCESS LOG
"KRN",19,11859,"RPC",4,0)
DGRR GET PTLK BUSINESS DATA
"KRN",19,11859,"RPC",5,0)
DGRR SET PTLK PREFERENCES^DGRR PLU ADMINISTRATOR
"KRN",19,11859,"RPC",6,0)
DGRR PATIENT LKUP PREFERENCES^
"KRN",19,11859,"RPC",7,0)
ORQPT TEAM PATIENTS
"KRN",19,11859,"RPC",8,0)
ORQPT TEAMS
"KRN",19,11859,"RPC",9,0)
ORQPT DEFAULT PATIENT LIST
"KRN",19,11859,"RPC",10,0)
DGRR CANCEL SEARCH
"KRN",19,11859,"U")
GUI PATIENT LOOKUP RPC ACCESS
"KRN",19.1,469,-1)
0^1
"KRN",19.1,469,0)
DGRR PLU ADMINISTRATOR^Patient Lookup Administrator^l
"KRN",19.1,469,1,0)
^^2^2^3040218^
"KRN",19.1,469,1,1,0)
This key will allow users of a site to update the GUI Patient Lookup 
"KRN",19.1,469,1,2,0)
operational parameters.
"KRN",8989.5,845,0)
5;DIC(9.4,^DGRR PL NUM PATIENTS PER PAGE^1
"KRN",8989.5,845,1)
10
"KRN",8989.5,846,0)
5;DIC(9.4,^DGRR PL PATIENT TYPE^1
"KRN",8989.5,846,1)
E
"KRN",8989.5,847,0)
5;DIC(9.4,^DGRR PL PRIMARY ELIGIBILITY^1
"KRN",8989.5,847,1)
E
"KRN",8989.5,849,0)
5;DIC(9.4,^DGRR PL SERVICE CONNECTED^1
"KRN",8989.5,849,1)
D
"KRN",8989.5,850,0)
5;DIC(9.4,^DGRR PL VETERAN STATUS^1
"KRN",8989.5,850,1)
D
"KRN",8989.5,851,0)
5;DIC(9.4,^DGRR PL WARD^1
"KRN",8989.5,851,1)
D
"KRN",8989.5,857,0)
5;DIC(9.4,^DGRR PL ROOM BED^1
"KRN",8989.5,857,1)
D
"KRN",8989.5,897,0)
5;DIC(9.4,^DGRR PL MAX NUM PATIENTS RET^1
"KRN",8989.5,897,1)
50
"KRN",8989.5,898,0)
5;DIC(9.4,^DGRR PL GENDER^1
"KRN",8989.5,898,1)
E
"KRN",8989.5,1076,0)
5;DIC(9.4,^DGRR PL VETERAN IMAGE^1
"KRN",8989.5,1076,1)
E
"KRN",8989.51,330,-1)
0^12
"KRN",8989.51,330,0)
DGRR PL NUM PATIENTS PER PAGE^Number of Patients per Page^0^^Patients per Page
"KRN",8989.51,330,1)
N^5:20^Enter the number (between 5 and 20) of patients displayed per page.
"KRN",8989.51,330,20,0)
^8989.512^2^2^3040311^^^^
"KRN",8989.51,330,20,1,0)
This parameter is a numeric value containing the number of patients to be 
"KRN",8989.51,330,20,2,0)
displayed per page.
"KRN",8989.51,330,30,0)
^8989.513I^2^2
"KRN",8989.51,330,30,1,0)
5^4
"KRN",8989.51,330,30,2,0)
10^9.4
"KRN",8989.51,331,-1)
0^2
"KRN",8989.51,331,0)
DGRR PL MAX NUM PATIENTS RET^Maximum Number of Patients Returned^^^Max. # of Patient returned
"KRN",8989.51,331,1)
N^20:100^Please enter the maximum number (between 20 and 100) of patients to be returned.
"KRN",8989.51,331,20,0)
^8989.512^1^1^3040311^^
"KRN",8989.51,331,20,1,0)
This parameter contains the maximum number of patients returned.
"KRN",8989.51,331,30,0)
^8989.513I^2^2
"KRN",8989.51,331,30,1,0)
5^4
"KRN",8989.51,331,30,2,0)
10^9.4
"KRN",8989.51,332,-1)
0^1
"KRN",8989.51,332,0)
DGRR PL GENDER^Gender^^^Gender (Enabled/Disabled)
"KRN",8989.51,332,1)
S^E:Enabled;D:Disabled^Enter E if gender parameter should be enabled or D if it should be disabled.
"KRN",8989.51,332,20,0)
^8989.512^2^2^3040311^^
"KRN",8989.51,332,20,1,0)
A user holding the DGRR PLU Administrator may choose 3 fields to be
"KRN",8989.51,332,20,2,0)
displayed by the Patient Lookup application in the search list.
"KRN",8989.51,332,30,0)
^8989.513I^2^2
"KRN",8989.51,332,30,1,0)
5^4
"KRN",8989.51,332,30,2,0)
10^9.4
"KRN",8989.51,333,-1)
0^3
"KRN",8989.51,333,0)
DGRR PL PATIENT TYPE^Patient Type^^^Patient Type (Enabled/Disabled)
"KRN",8989.51,333,1)
S^E:Enabled;D:Disabled^Enter E if gender parameter should be enabled.
"KRN",8989.51,333,20,0)
^8989.512^2^2^3040311^^
"KRN",8989.51,333,20,1,0)
A user holding the DGRR PLU Administrator may choose 3 fields to be
"KRN",8989.51,333,20,2,0)
displayed by the Patient Lookup application in the search list.
"KRN",8989.51,333,30,0)
^8989.513I^2^2
"KRN",8989.51,333,30,1,0)
5^4
"KRN",8989.51,333,30,2,0)
10^9.4
"KRN",8989.51,336,-1)
0^4
"KRN",8989.51,336,0)
DGRR PL PRIMARY ELIGIBILITY^Primary Eligibility^^^Primary Eligibility (Enabled/Disabled)
"KRN",8989.51,336,1)
S^E:Enabled;D:Disabled^Enter E if the Primary Eligibility parameter should be enabled.
"KRN",8989.51,336,20,0)
^^2^2^3040311^
"KRN",8989.51,336,20,1,0)
A user holding the DGRR PLU Administrator may choose 3 fields to be
"KRN",8989.51,336,20,2,0)
displayed by the Patient Lookup application in the search list.
"KRN",8989.51,336,30,0)
^8989.513I^2^2
"KRN",8989.51,336,30,1,0)
5^4
"KRN",8989.51,336,30,2,0)
10^9.4
"KRN",8989.51,337,-1)
0^8
"KRN",8989.51,337,0)
DGRR PL ROOM BED^Room Bed^^^Room-Bed (Enabled/Disabled)
"KRN",8989.51,337,1)
S^E:Enabled;D:Disabled^Please enter E if the Room/Bed parameter should be enabled.
"KRN",8989.51,337,20,0)
^8989.512^2^2^3040311^^
"KRN",8989.51,337,20,1,0)
A user holding the DGRR PLU Administrator may choose 3 fields to be
"KRN",8989.51,337,20,2,0)
displayed by the Patient Lookup application in the search list.
"KRN",8989.51,337,30,0)
^8989.513I^2^2
"KRN",8989.51,337,30,1,0)
5^4
"KRN",8989.51,337,30,2,0)
10^9.4
"KRN",8989.51,338,-1)
0^9
"KRN",8989.51,338,0)
DGRR PL SERVICE CONNECTED^Service Connected^^^Service Connected (Enabled/Disabled)
"KRN",8989.51,338,1)
S^E:Enabled;D:Disabled^Please enter an E if the Service Connected parameter should be enabled.
"KRN",8989.51,338,20,0)
^^2^2^3040311^
"KRN",8989.51,338,20,1,0)
A user holding the DGRR PLU Administrator may choose 3 fields to be
"KRN",8989.51,338,20,2,0)
displayed by the Patient Lookup application in the search list.
"KRN",8989.51,338,30,0)
^8989.513I^2^2
"KRN",8989.51,338,30,1,0)
5^4
"KRN",8989.51,338,30,2,0)
10^9.4
"KRN",8989.51,339,-1)
0^10
"KRN",8989.51,339,0)
DGRR PL VETERAN STATUS^Veteran Status^^^Veteran Status (Enabled/Disabled)
"KRN",8989.51,339,1)
S^E:Enabled;D:Disabled^Please enter an E if the Veteran Status parameter should be enabled.
"KRN",8989.51,339,20,0)
^^2^2^3040311^
"KRN",8989.51,339,20,1,0)
A user holding the DGRR PLU Administrator may choose 3 fields to be
"KRN",8989.51,339,20,2,0)
displayed by the Patient Lookup application in the search list.
"KRN",8989.51,339,30,0)
^8989.513I^2^2
"KRN",8989.51,339,30,1,0)
5^4
"KRN",8989.51,339,30,2,0)
10^9.4
"KRN",8989.51,340,-1)
0^11
"KRN",8989.51,340,0)
DGRR PL WARD^Ward^^^Ward (Enabled/Disabled)
"KRN",8989.51,340,1)
S^E:Enabled;D:Disabled^Please enter an E if the Ward parameter should be enabled.
"KRN",8989.51,340,6)

"KRN",8989.51,340,20,0)
^8989.512^2^2^3050303^^^^
"KRN",8989.51,340,20,1,0)
A user holding the DGRR PLU Administrator may choose 3 fields to be
"KRN",8989.51,340,20,2,0)
displayed by the Patient Lookup application in the search list.
"KRN",8989.51,340,30,0)
^8989.513I^2^2
"KRN",8989.51,340,30,1,0)
5^4
"KRN",8989.51,340,30,2,0)
10^9.4
"KRN",8989.51,381,-1)
0^13
"KRN",8989.51,381,0)
DGRR PL VETERAN IMAGE^Veteran Image^^^Veteran Image (Enabled/Disabled)
"KRN",8989.51,381,1)
S^E:Enabled;D:Disabled^Enter E if image parameter should enabled or D if it should be disabled.
"KRN",8989.51,381,20,0)
^^2^2^3041103^
"KRN",8989.51,381,20,1,0)
A user holding the DGRR PLU Administrator security key may set this
"KRN",8989.51,381,20,2,0)
parameter.  If enabled, the veteran image will be displayed.
"KRN",8989.51,381,30,0)
^8989.513I^2^2
"KRN",8989.51,381,30,1,0)
5^4
"KRN",8989.51,381,30,2,0)
10^9.4
"KRN",8994,1529,-1)
0^4
"KRN",8994,1529,0)
DGRR PATIENT LOOKUP SEARCH^SEARCH^DGRRLU^4^P^^^1^.001^^0
"KRN",8994,1529,1,0)
^8994.01^3^3^3050531^^^^
"KRN",8994,1529,1,1,0)
This rpc is set to return an xml document via VistaLink that contains
"KRN",8994,1529,1,2,0)
the display data for a gui patient lookup.  
"KRN",8994,1529,1,3,0)
 
"KRN",8994,1529,2,0)
^8994.02A^1^1
"KRN",8994,1529,2,1,0)
PARAM^2^999^1
"KRN",8994,1529,2,1,1,0)
^^3^3^3041116^
"KRN",8994,1529,2,1,1,1,0)
Input PARAM("SEARCH TYPE") = type of search requested
"KRN",8994,1529,2,1,1,2,0)
Input PARAM("SEARCH VALUE") = value to search on
"KRN",8994,1529,2,1,1,3,0)
Input PARAM("JOB") = a unique job # used to check for cancelled jobs
"KRN",8994,1529,2,"B","PARAM",1)

"KRN",8994,1529,3,0)
^8994.03^11^11^3041116^^^^
"KRN",8994,1529,3,1,0)
XML document with list of patients found based on search type and 
"KRN",8994,1529,3,2,0)
search value.
"KRN",8994,1529,3,3,0)
 
"KRN",8994,1529,3,4,0)
<?xml version="1.0" encoding="utf-8" ?>
"KRN",8994,1529,3,5,0)
 
"KRN",8994,1529,3,6,0)
<record count='1'>
"KRN",8994,1529,3,7,0)
 
"KRN",8994,1529,3,8,0)
<patient num='1' dfn='40' sensitive='true' name='RUCKER,JOHN W III' dob='2560306 ' ssn='123456799' type='SC VETERAN' primaryeligibility='SC LESS THAN 50%' servic econnected='true' scpercent='20' gender='M' icn='' veteran='true' ward='5 WEST P
"KRN",8994,1529,3,9,0)
SYCH' roombed='501-1'></patient>
"KRN",8994,1529,3,10,0)
 
"KRN",8994,1529,3,11,0)
</record>
"KRN",8994,1530,-1)
0^2
"KRN",8994,1530,0)
DGRR GET PTLK BUSINESS DATA^BUS^DGRRLU1^4^P^^^1^.001^^0
"KRN",8994,1530,1,0)
^8994.01^2^2^3040516^^^^
"KRN",8994,1530,1,1,0)
Returns XML document containing data needed to perform business logic
"KRN",8994,1530,1,2,0)
checks on patient lookup.
"KRN",8994,1530,2,0)
^8994.02A^1^1
"KRN",8994,1530,2,1,0)
PARAM^2
"KRN",8994,1530,2,1,1,0)
^8994.021^4^4^3040516^^^
"KRN",8994,1530,2,1,1,1,0)
PARAM("PatientId_Type") = DFN (default) or ICN
"KRN",8994,1530,2,1,1,2,0)
PARAM("PatientId") = value for dfn or ICN
"KRN",8994,1530,2,1,1,3,0)
PARAM("UserId") = DUZ
"KRN",8994,1530,2,1,1,4,0)
PARAM("UserInstitution") = division usage default to DUZ(2)
"KRN",8994,1530,2,"B","PARAM",1)

"KRN",8994,1531,-1)
0^6
"KRN",8994,1531,0)
DGRR SET SENSITIVE ACCESS LOG^NOTICE^DGRRLU2^1^P^^^^^^0
"KRN",8994,1531,1,0)
^8994.01^5^5^3050124^^^^
"KRN",8994,1531,1,1,0)
This Remote Procedure Call (RPC) will add an entry to the DG SECURITY LOG
"KRN",8994,1531,1,2,0)
(#38.1) file and/or generate the sensitive record access bulletin
"KRN",8994,1531,1,3,0)
depending on the value in ACTION input parameter.  If ACTION parameter not
"KRN",8994,1531,1,4,0)
defined, defaults to update DG Security Log file and generate Sensitive
"KRN",8994,1531,1,5,0)
Record Access mail message.
"KRN",8994,1531,2,0)
^8994.02A^5^3
"KRN",8994,1531,2,1,0)
ACTION^1^1^0^3
"KRN",8994,1531,2,1,1,0)
^^3^3^3000112^^^^
"KRN",8994,1531,2,1,1,1,0)
ACTION = 1 - Set DG Security Log entry
"KRN",8994,1531,2,1,1,2,0)
         2 - Generate Sensitive Record Access bulletin
"KRN",8994,1531,2,1,1,3,0)
         3 - Both
"KRN",8994,1531,2,2,0)
DFN^1^^1^1
"KRN",8994,1531,2,2,1,0)
^8994.021^1^1^3030213^^^^
"KRN",8994,1531,2,2,1,1,0)
DFN = Patient (#2) file DFN
"KRN",8994,1531,2,5,0)
DGOPT^1^^0^2
"KRN",8994,1531,2,5,1,0)
^8994.021^2^2^3040516^^^^
"KRN",8994,1531,2,5,1,1,0)
DGOPT = Option Name^Menu test 
"KRN",8994,1531,2,5,1,2,0)
        If not defined, OP^XQCHK identifies option or defaults to UNKNOWN.
"KRN",8994,1531,2,"B","ACTION",1)

"KRN",8994,1531,2,"B","DFN",2)

"KRN",8994,1531,2,"B","DGOPT",5)

"KRN",8994,1531,2,"PARAMSEQ",1,2)

"KRN",8994,1531,2,"PARAMSEQ",2,5)

"KRN",8994,1531,2,"PARAMSEQ",3,1)

"KRN",8994,1531,3,0)
^8994.03^3^3^3050124^^^^
"KRN",8994,1531,3,1,0)
RESULT=1 - successfully added entry and/or generated sensitive record
"KRN",8994,1531,3,2,0)
           access bulletin
"KRN",8994,1531,3,3,0)
       0 - unsuccessful
"KRN",8994,1532,-1)
0^1
"KRN",8994,1532,0)
DGRR GET LOOKUP TYPE LIST^GETLIST^DGRRLU3^4^P^^^^.01^^0
"KRN",8994,1532,1,0)
^8994.01^2^2^3040623^^^^
"KRN",8994,1532,1,1,0)
Returns an XML document containing a list of wards or a list of
"KRN",8994,1532,1,2,0)
clinics (depending on what was requested)
"KRN",8994,1532,2,0)
^8994.02A^1^1
"KRN",8994,1532,2,1,0)
PARAM^2^99^1
"KRN",8994,1532,2,1,1,0)
^8994.021^3^3^3040516^^^^
"KRN",8994,1532,2,1,1,1,0)
PARAM("TYPE")="ward" returns a list of wards
"KRN",8994,1532,2,1,1,2,0)
PARAM("TYPE")="clinic" returns a list of clinics
"KRN",8994,1532,2,1,1,3,0)
PARAM("TYPE")="provider" returns a list of providers
"KRN",8994,1532,2,1,1,4,0)
PARAM("VALUE")=Beginning value or null to start at the beginning
"KRN",8994,1532,2,1,1,5,0)
               or end of the file.
"KRN",8994,1532,2,1,1,6,0)
PARAM("MAXNUM")=Number of entries to be returned.  Defaults to
"KRN",8994,1532,2,1,1,7,0)
                traversing forward. If MAXNUM contains a negative
"KRN",8994,1532,2,1,1,8,0)
                number, traverses through the file backwards.
"KRN",8994,1532,2,"B","PARAM",1)

"KRN",8994,1626,-1)
0^3
"KRN",8994,1626,0)
DGRR PATIENT LKUP PREFERENCES^START^DGRRLU4^4^P^^^1^^^0
"KRN",8994,1626,1,0)
^8994.01^2^2^3051219^^^^
"KRN",8994,1626,1,1,0)
This remote procedure call returns an xml document containing the division
"KRN",8994,1626,1,2,0)
or package preferences.  
"KRN",8994,1626,2,0)
^8994.02A^1^1
"KRN",8994,1626,2,1,0)
PARAM^2^^0^1
"KRN",8994,1626,2,1,1,0)
^8994.021^2^2^3051219^^^^
"KRN",8994,1626,2,1,1,1,0)
PARAM("stationNumber") = station number for institution.  If not 
"KRN",8994,1626,2,1,1,2,0)
defined, RPC will return the package default values.
"KRN",8994,1626,2,"B","PARAM",1)

"KRN",8994,1626,2,"PARAMSEQ",1,1)

"KRN",8994,1626,3,0)
^8994.03^19^19^3051219^^^^
"KRN",8994,1626,3,1,0)
Returns xml document containing a list of preferences:
"KRN",8994,1626,3,2,0)
 
"KRN",8994,1626,3,3,0)
<?xml version="1.0" encoding="utf-8" ?>
"KRN",8994,1626,3,4,0)
<preferences>
"KRN",8994,1626,3,5,0)
<error/>
"KRN",8994,1626,3,6,0)
<institutionPreferences>
"KRN",8994,1626,3,7,0)
<stationNumber>500</stationNumber>
"KRN",8994,1626,3,8,0)
<maxNumPatients>50</maxNumPatients>
"KRN",8994,1626,3,9,0)
<patientsPerPage>10</patientsPerPage>
"KRN",8994,1626,3,10,0)
<patientType>Enabled</patientType>
"KRN",8994,1626,3,11,0)
<gender>Enabled</gender>
"KRN",8994,1626,3,12,0)
<primaryEligibility>Enabled</primaryEligibility>
"KRN",8994,1626,3,13,0)
<roomBed>Disabled</roomBed>
"KRN",8994,1626,3,14,0)
<serviceConnected>Disabled</serviceConnected>
"KRN",8994,1626,3,15,0)
<veteranStatus>Disabled</veteranStatus>
"KRN",8994,1626,3,16,0)
<ward>Disabled</ward>
"KRN",8994,1626,3,17,0)
<veteranImage>Enabled</veteranImage>
"KRN",8994,1626,3,18,0)
</institutionPreferences>
"KRN",8994,1626,3,19,0)
</preferences>
"KRN",8994,1627,-1)
0^5
"KRN",8994,1627,0)
DGRR SET PTLK PREFERENCES^UPDATE^DGRRLU4^4^P^^^1^^^0
"KRN",8994,1627,1,0)
^8994.01^5^5^3050301^^^
"KRN",8994,1627,1,1,0)
This remote procedure call updates the division/institutional preferences 
"KRN",8994,1627,1,2,0)
passed to the call. It returns an xml document containing the station
"KRN",8994,1627,1,3,0)
number and status.  If update was successful, status is returned as
"KRN",8994,1627,1,4,0)
true.  If errors were encountered during the update, false is returned
"KRN",8994,1627,1,5,0)
with an error message.
"KRN",8994,1627,2,0)
^8994.02A^1^1
"KRN",8994,1627,2,1,0)
PARAMS^2
"KRN",8994,1627,2,1,1,0)
^8994.021^11^11^3050301^^^^
"KRN",8994,1627,2,1,1,1,0)
PARAMS("stationNumber")=station number for division/institution
"KRN",8994,1627,2,1,1,2,0)
PARAMS("maxNumberPatients")=Number between 20 and 100
"KRN",8994,1627,2,1,1,3,0)
PARAMS("patientsPerPage")=Number between 5 and 20
"KRN",8994,1627,2,1,1,4,0)
PARAMS("patientType")=Disabled or Enabled
"KRN",8994,1627,2,1,1,5,0)
PARAMS("gender")=Disabled or Enabled
"KRN",8994,1627,2,1,1,6,0)
PARAMS("primaryEligibility")=Disabled or Enabled
"KRN",8994,1627,2,1,1,7,0)
PARAMS("roomBed")=Disabled or Enabled
"KRN",8994,1627,2,1,1,8,0)
PARAMS("serviceConnected")=Disabled or Enabled
"KRN",8994,1627,2,1,1,9,0)
PARAMS("veteranStatus")=Disabled or Enabled
"KRN",8994,1627,2,1,1,10,0)
PARAMS("ward")=Disabled or Enabled
"KRN",8994,1627,2,1,1,11,0)
PARAMS("veteranImage")=Disabled or Enabled
"KRN",8994,1627,2,1,1,12,0)
PARAMS("veteranStatus")=Disabled or Enabled
"KRN",8994,1627,2,1,1,13,0)
PARAMS("ward")=Disabled or Enabled
"KRN",8994,1627,2,1,1,14,0)
PARAMS("veteranImage")=Disabled or Enabled
"KRN",8994,1627,2,"B","PARAMS",1)

"KRN",8994,1627,3,0)
^8994.03^12^12^3041105^^^^
"KRN",8994,1627,3,1,0)
XML file documenting error condition or successful update.
"KRN",8994,1627,3,2,0)
 
"KRN",8994,1627,3,3,0)
Successful update xml format:
"KRN",8994,1627,3,4,0)
 
"KRN",8994,1627,3,5,0)
  <?xml version="1.0" encoding="utf-8" ?> 
"KRN",8994,1627,3,6,0)
- <preferences>
"KRN",8994,1627,3,7,0)
  <error /> 
"KRN",8994,1627,3,8,0)
- <institutionPreferences>
"KRN",8994,1627,3,9,0)
  <stationNumber>500</stationNumber> 
"KRN",8994,1627,3,10,0)
  <preferencesUpdated>true</preferencesUpdated> 
"KRN",8994,1627,3,11,0)
  </institutionPreferences>
"KRN",8994,1627,3,12,0)
  </preferences>
"KRN",8994,1831,-1)
0^7
"KRN",8994,1831,0)
DGRR CANCEL SEARCH^CANCEL^DGRRLU^1^^^^^^^0
"KRN",8994,1831,1,0)
^^1^1^3041026^
"KRN",8994,1831,1,1,0)
The DGRR CANCEL SEARCH RPC will cancel a patient search in VistA.
"KRN",8994,1831,2,0)
^8994.02A^1^1
"KRN",8994,1831,2,1,0)
JOB^1^99^1
"KRN",8994,1831,2,1,1,0)
^^1^1^3041026^
"KRN",8994,1831,2,1,1,1,0)
JOB = A unique JOB ID used to cancel a VistA search.
"KRN",8994,1831,2,"B","JOB",1)

"MBREQ")
0
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
538^3060104^823
"PKG",5,22,1,"PAH",1,1,0)
^^1^1^3060104
"PKG",5,22,1,"PAH",1,1,1,0)
Patch contains functionality for GUI Patient Lookup.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
13
"RTN","DG53538P")
0^^B2534601
"RTN","DG53538P",1,0)
DG53538P ;BPFO/MM Post Init routine for DG*5.3*538 - ;2/19/2004
"RTN","DG53538P",2,0)
 ;;5.3;Registration;**538**;Aug 13, 1993
"RTN","DG53538P",3,0)
 ;
"RTN","DG53538P",4,0)
 ; This is the post-initialization routine for DG*5.3*538.
"RTN","DG53538P",5,0)
 ; It will populate the package level for the parameter definitions
"RTN","DG53538P",6,0)
 ; distributed with this patch.
"RTN","DG53538P",7,0)
 ;
"RTN","DG53538P",8,0)
 N DGRRI,LINE
"RTN","DG53538P",9,0)
 D BMES^XPDUTL("Updating Parameter Definitions with package values...")
"RTN","DG53538P",10,0)
 F DGRRI=1:1 S LINE=$P($T(PREF+DGRRI),";;",2) Q:LINE="QUIT"  D
"RTN","DG53538P",11,0)
 .N DGRRPREF,DGRRVAL,ERR
"RTN","DG53538P",12,0)
 .S DGRRPREF=$P(LINE,U)
"RTN","DG53538P",13,0)
 .S DGRRVAL=$P(LINE,U,2)
"RTN","DG53538P",14,0)
 .D EN^XPAR("PKG.REGISTRATION",DGRRPREF,1,DGRRVAL,.ERR)
"RTN","DG53538P",15,0)
 .I ERR'=0 D  Q
"RTN","DG53538P",16,0)
 ..D MES^XPDUTL("     "_DGRRPREF_" NOT Updated.")
"RTN","DG53538P",17,0)
 ..D MES^XPDUTL("      Error message:  "_$P($G(ERR),U,2))
"RTN","DG53538P",18,0)
 .D MES^XPDUTL("     "_DGRRPREF_" updated with package value of "_DGRRVAL)
"RTN","DG53538P",19,0)
 D MES^XPDUTL("Updating done.")
"RTN","DG53538P",20,0)
 Q
"RTN","DG53538P",21,0)
PREF ;Parameter definition^package value
"RTN","DG53538P",22,0)
 ;;DGRR PL MAX NUM PATIENTS RET^50
"RTN","DG53538P",23,0)
 ;;DGRR PL NUM PATIENTS PER PAGE^10
"RTN","DG53538P",24,0)
 ;;DGRR PL PATIENT TYPE^Enabled
"RTN","DG53538P",25,0)
 ;;DGRR PL GENDER^Enabled
"RTN","DG53538P",26,0)
 ;;DGRR PL PRIMARY ELIGIBILITY^Enabled
"RTN","DG53538P",27,0)
 ;;DGRR PL ROOM BED^Disabled
"RTN","DG53538P",28,0)
 ;;DGRR PL SERVICE CONNECTED^Disabled
"RTN","DG53538P",29,0)
 ;;DGRR PL VETERAN STATUS^Disabled
"RTN","DG53538P",30,0)
 ;;DGRR PL WARD^Disabled
"RTN","DG53538P",31,0)
 ;;DGRR PL VETERAN IMAGE^Enabled
"RTN","DG53538P",32,0)
 ;;QUIT
"RTN","DG53538P",33,0)
 Q
"RTN","DGRRLU")
0^1^B38010373
"RTN","DGRRLU",1,0)
DGRRLU  ;alb/aas - DG Replacement and Rehosting RPC for VADPT ;12/22/05  14:53
"RTN","DGRRLU",2,0)
 ;;5.3;Registration;**538**;Aug 13, 1993
"RTN","DGRRLU",3,0)
 ;
"RTN","DGRRLU",4,0)
 SET X="You Can't Enter DGRRLU at top of routine!"
"RTN","DGRRLU",5,0)
 QUIT
"RTN","DGRRLU",6,0)
 ;
"RTN","DGRRLU",7,0)
SEARCH(RESULT,PARAMS) ; -- return patient data in XML format
"RTN","DGRRLU",8,0)
 ; -- RPC:  DGRR PATIENT LOOKUP SEARCH
"RTN","DGRRLU",9,0)
 ;
"RTN","DGRRLU",10,0)
 ; -- input  PARAMS ARRAY
"RTN","DGRRLU",11,0)
 ;       PARAMS("SEARCH_TYPE") = "NAME","SSN","ICN","SSN4","DFN", "PRVLUP"
"RTN","DGRRLU",12,0)
 ;       PARAMS("SEARCH_VALUE") = value to search for.
"RTN","DGRRLU",13,0)
 ;       PARAMS("JOB") = a unique job # used to check for cancelled jobs
"RTN","DGRRLU",14,0)
 ;
"RTN","DGRRLU",15,0)
 NEW I,X,Y,DGRRAPTS,DGRRIENS,DGRRPCNT,DGRRLINE,DGRRLIST,DGRRESLT,SEARCH,VALUE,FILTER,FILTERV,BDATE,EDATE,CODE,CANCEL,JOB ; ****
"RTN","DGRRLU",16,0)
 NEW MAXSIZE,MAXSIZRE,LINENO,DELIM,DOMAIN,RESTRICT,ERRMSG,SITENM,SITENO,PRODSTAT,DGERR
"RTN","DGRRLU",17,0)
 ; NEW MSCREEN ; references to MSCREEN removed by sgg 05/06/04 advised by babul no longer required
"RTN","DGRRLU",18,0)
 IF '$D(DT) D DT^DICRW
"RTN","DGRRLU",19,0)
 KILL RESULT
"RTN","DGRRLU",20,0)
 SET DGRRPCNT=0
"RTN","DGRRLU",21,0)
 SET DGRRLINE=0
"RTN","DGRRLU",22,0)
 K ^TMP($J,"PLU-SEARCH")
"RTN","DGRRLU",23,0)
 SET DGRRESLT="^TMP($J,""PLU-SEARCH"")"
"RTN","DGRRLU",24,0)
 SET RESULT=$NA(@DGRRESLT)
"RTN","DGRRLU",25,0)
 DO ADD($$XMLHDR^DGRRUTL)
"RTN","DGRRLU",26,0)
 ;
"RTN","DGRRLU",27,0)
 SET CANCEL=0 ; ****
"RTN","DGRRLU",28,0)
 SET SEARCH=$$UP^XLFSTR($GET(PARAMS("SEARCH_TYPE")))
"RTN","DGRRLU",29,0)
 SET VALUE=$$UP^XLFSTR($GET(PARAMS("SEARCH_VALUE")))
"RTN","DGRRLU",30,0)
 SET MAXSIZE=+$GET(PARAMS("MAX_PATIENTS"),50),MAXSIZRE=0
"RTN","DGRRLU",31,0)
 ;
"RTN","DGRRLU",32,0)
 IF (MAXSIZE<5) SET MAXSIZE=5
"RTN","DGRRLU",33,0)
 IF (MAXSIZE>100) SET MAXSIZE=100
"RTN","DGRRLU",34,0)
 ;
"RTN","DGRRLU",35,0)
 SET FILTER=$$UP^XLFSTR($GET(PARAMS("FILTER_TYPE")))
"RTN","DGRRLU",36,0)
 SET FILTERV=$G(PARAMS("FILTER_VALUE"))
"RTN","DGRRLU",37,0)
 SET BDATE=$G(PARAMS("CLINIC_STARTDATE"))
"RTN","DGRRLU",38,0)
 SET EDATE=$G(PARAMS("CLINIC_ENDDATE"))
"RTN","DGRRLU",39,0)
 SET JOB=$G(PARAMS("JOB")) ; ****
"RTN","DGRRLU",40,0)
 I JOB="" S JOB=0 ; **** Until Job parameter is used
"RTN","DGRRLU",41,0)
 ;SET MSCREEN=$$UP^XLFSTR($G(PARAMS("MSCREEN")))
"RTN","DGRRLU",42,0)
 ;IF MSCREEN'="" DO
"RTN","DGRRLU",43,0)
 ;. SET X=MSCREEN D ^DIM IF $D(X)=0 SET MSCREEN="" SET ERRMSG="MSCREEN is invalid M code" Q
"RTN","DGRRLU",44,0)
 ;. IF $E(MSCREEN)'="I" SET MSCREEN="" SET ERRMSG="MSCREEN Deleted, must start with an If statement." Q
"RTN","DGRRLU",45,0)
 ;. IF MSCREEN[" S "!(MSCREEN[" SET ")!(MSCREEN[" S:")!(MSCREEN["SET:") SET MSCREEN="" SET ERRMSG="MSCREEN Deleted, can not set values." Q
"RTN","DGRRLU",46,0)
 ;. IF MSCREEN[" K "!(MSCREEN[" KILL ")!(MSCREEN[" K:")!(MSCREEN["SET:") SET MSCREEN="" SET ERRMSG="MSCREEN Deleted, can not kill values." Q
"RTN","DGRRLU",47,0)
 ;. IF MSCREEN[" W "!(MSCREEN[" WRITE ")!(MSCREEN[" W:")!(MSCREEN["WRITE:") SET MSCREEN="" SET ERRMSG="MSCREEN Deleted, can not WRITE." Q
"RTN","DGRRLU",48,0)
 SET DELIM=$G(PARAMS("DELIMITER"),",") ; Defaults to comma to support old way.
"RTN","DGRRLU",49,0)
 ;
"RTN","DGRRLU",50,0)
 SET SITENM=$$CHARCHK^DGRRUTL($$SITENAM^DGRRUTL())
"RTN","DGRRLU",51,0)
 SET SITENO=$$CHARCHK^DGRRUTL($$SITENO^DGRRUTL())
"RTN","DGRRLU",52,0)
 SET X=$$PRODST1^DGRRUTL()
"RTN","DGRRLU",53,0)
 SET Y=$$PRODST2^DGRRUTL()
"RTN","DGRRLU",54,0)
 SET PRODSTAT=$$CHARCHK^DGRRUTL(X+Y)
"RTN","DGRRLU",55,0)
 SET DOMAIN=$$CHARCHK^DGRRUTL($$KSP^XUPARAM("WHERE"))
"RTN","DGRRLU",56,0)
 ;SET RESTRICT=$G(^VA(200,+$G(DUZ),101))
"RTN","DGRRLU",57,0)
 S DGRRIENS=$$IENS^DILF(+$G(DUZ))
"RTN","DGRRLU",58,0)
 D GETS^DIQ(200,DGRRIENS,"101.01;101.02","I","DGRRLIST")
"RTN","DGRRLU",59,0)
 S RESTRICT=$G(DGRRLIST(200,DGRRIENS,101.01,"I"))_U_$G(DGRRLIST(200,DGRRIENS,101.02,"I"))
"RTN","DGRRLU",60,0)
 IF +RESTRICT S CODE="I $D(^OR(100.21,"_$P(RESTRICT,"^",2)_",10,""B"",+$G(DFN)_"";DPT(""))"
"RTN","DGRRLU",61,0)
 ;.IF MSCREEN'="" S MSCREEN=" "_CODE Q
"RTN","DGRRLU",62,0)
 ;.IF MSCREEN="" S MSCREEN=CODE
"RTN","DGRRLU",63,0)
 IF (FILTER'=""),(FILTERV'="") DO BYFILTER^DGRRLU0(FILTER,FILTERV,BDATE,EDATE,SEARCH,VALUE,DELIM) GOTO DONE1
"RTN","DGRRLU",64,0)
 IF (SEARCH="PRVLUP") DO PRVLUP^DGRRLU5(.RESULT,.PARAMS) GOTO DONE1
"RTN","DGRRLU",65,0)
 IF (SEARCH="NAME"),($G(PARAMS("VERSION 1"))="") DO BYNAME^DGRRLU6 GOTO DONE1 ; v2 sgg 05/06/04
"RTN","DGRRLU",66,0)
 DO ADD("<record count='0'>")
"RTN","DGRRLU",67,0)
 SET LINENO=DGRRLINE
"RTN","DGRRLU",68,0)
 IF SEARCH="DFN" D  Q:$G(DGERR)=1
"RTN","DGRRLU",69,0)
 .D DFNLST(VALUE)
"RTN","DGRRLU",70,0)
 .I $G(DGERR)=1 D DONE1
"RTN","DGRRLU",71,0)
 IF (SEARCH="NAME")!(SEARCH="SSN")!(SEARCH="ICN")!(SEARCH="SSN4") D BYNAME I $G(DGERR)=1 G DONE1  ; ****
"RTN","DGRRLU",72,0)
 IF ("|NAME|SSN|ICN|SSN4|DFN|PRVLUP|"'[SEARCH)!(SEARCH="") DO  GOTO DONE1  ; *****
"RTN","DGRRLU",73,0)
 . DO ADD("<error message='Searching for patients by "_$S(SEARCH="":"Empty String",1:SEARCH)_" not yet implemented!'></error>")  ; ****
"RTN","DGRRLU",74,0)
 ;
"RTN","DGRRLU",75,0)
 D DONE
"RTN","DGRRLU",76,0)
 IF CANCEL=1 DO CLEAN^DILF  ; ****
"RTN","DGRRLU",77,0)
 QUIT
"RTN","DGRRLU",78,0)
 ;
"RTN","DGRRLU",79,0)
BYNAME  ;
"RTN","DGRRLU",80,0)
 NEW FULLCNT,DGRR,NODE,DFN,XREF,DIERR
"RTN","DGRRLU",81,0)
 ;; copied From scutbk11
"RTN","DGRRLU",82,0)
 ;; DO FIND^DIC(2,,".01;.03;.363;.09","PS",VALUE,300,"B^BS^BS5^SSN")
"RTN","DGRRLU",83,0)
 ;
"RTN","DGRRLU",84,0)
 IF VALUE="" DO  Q
"RTN","DGRRLU",85,0)
 . DO ADD("<error message='Not Enough Information Provided to Search for Patients.  Search Type = """_SEARCH_"""  Search For = """_VALUE_"""'></error>")
"RTN","DGRRLU",86,0)
 . S DGERR=1
"RTN","DGRRLU",87,0)
 ;
"RTN","DGRRLU",88,0)
 IF SEARCH="NAME" SET XREF="B^NOP" IF VALUE[", " DO
"RTN","DGRRLU",89,0)
 . SET VALUE=$P(VALUE,", ")_","_$P(VALUE,", ",2) ;REMOVE FIRST SPACE
"RTN","DGRRLU",90,0)
 IF SEARCH="SSN" SET XREF="SSN",VALUE=$TR(VALUE," -","") ; REMOVE DASHES AND SPACES
"RTN","DGRRLU",91,0)
 IF SEARCH="SSN4" SET XREF="BS5" DO 
"RTN","DGRRLU",92,0)
 . IF $L(VALUE)>5 SET VALUE=$E(VALUE,1,5) ; can't exceed 5 characters, if P for psuedo on end take it off.
"RTN","DGRRLU",93,0)
 IF SEARCH="ICN" SET XREF="AICN" DO
"RTN","DGRRLU",94,0)
 . SET VALUE=$P(VALUE,"V",1)
"RTN","DGRRLU",95,0)
 IF $D(^XTMP("DGRRLU",JOB,1)) S CANCEL=1 Q  ; *****
"RTN","DGRRLU",96,0)
 ;DO FIND^DIC(2,,".01;.03;.09","PS",VALUE,300,XREF) ; replaced sgg 05/04/04
"RTN","DGRRLU",97,0)
 ;DO FIND^DIC(2,,".01;.03;.09","PS",VALUE,MAXSIZE+3,XREF)
"RTN","DGRRLU",98,0)
 ;IF $G(DIERR) DO  Q
"RTN","DGRRLU",99,0)
 ;. DO ADD("<error message='Error occurred in ""Mumps"" during patient lookup'></error>")
"RTN","DGRRLU",100,0)
 ;. DO CLEAN^DILF
"RTN","DGRRLU",101,0)
 ;. S DGERR=1
"RTN","DGRRLU",102,0)
 ;SET FULLCNT=+$G(^TMP("DILIST",$J,0))
"RTN","DGRRLU",103,0)
 ;DO ADD("<record count='0'>")
"RTN","DGRRLU",104,0)
 ;SET LINENO=DGRRLINE
"RTN","DGRRLU",105,0)
 ;
"RTN","DGRRLU",106,0)
 K ^TMP($J,"DGRRPTS")
"RTN","DGRRLU",107,0)
 N DGRRARRY,DGRRLST,DGRRI,DPTPSREF
"RTN","DGRRLU",108,0)
 S DGRRARRY="^TMP($J,""DGRRPTS"")"
"RTN","DGRRLU",109,0)
 ; Set variable to cross references to be used by $$LIST^DPTLK1 call
"RTN","DGRRLU",110,0)
 S DPTPSREF=$TR(XREF,"^",",")
"RTN","DGRRLU",111,0)
 S DGRRLST=$$LIST^DPTLK1(VALUE,MAXSIZE,DGRRARRY)
"RTN","DGRRLU",112,0)
 S DGRRI=0
"RTN","DGRRLU",113,0)
 F  S DGRRI=$O(^TMP($J,"DGRRPTS",DGRRI)) Q:'DGRRI  D  Q:$$STOP^XOBVLIB()  Q:CANCEL=1
"RTN","DGRRLU",114,0)
 .N DGRRCA
"RTN","DGRRLU",115,0)
 .S NODE=$G(^TMP($J,"DGRRPTS",DGRRI))
"RTN","DGRRLU",116,0)
 .S DFN=$P(NODE,"^")
"RTN","DGRRLU",117,0)
 .I $P(NODE,"^",2)'=$P(NODE,"^",3) S DGRRCA=1_"^"_$P(NODE,"^",3)
"RTN","DGRRLU",118,0)
 .D PTDATA^DGRRLUA(+NODE,.DGRRPCNT)
"RTN","DGRRLU",119,0)
 .I $D(^XTMP("DGRRLU",JOB,1)) S CANCEL=1
"RTN","DGRRLU",120,0)
 ;
"RTN","DGRRLU",121,0)
 ;FOR DGRR=1:1:FULLCNT D  Q:$$STOP^XOBVLIB()  Q:CANCEL=1  ; ****
"RTN","DGRRLU",122,0)
 ;. SET NODE=^TMP("DILIST",$J,DGRR,0)
"RTN","DGRRLU",123,0)
 ;. SET DFN=$P(NODE,"^",1)
"RTN","DGRRLU",124,0)
 ;. D PTDATA^DGRRLUA(+NODE,.DGRRPCNT)
"RTN","DGRRLU",125,0)
 ;. IF $D(^XTMP("DGRRLU",JOB,1)) S CANCEL=1  ; *****
"RTN","DGRRLU",126,0)
 K ^TMP($J,"DGRRPTS")
"RTN","DGRRLU",127,0)
 Q
"RTN","DGRRLU",128,0)
 ;
"RTN","DGRRLU",129,0)
DONE IF CANCEL=1 Q  ; *****
"RTN","DGRRLU",130,0)
 IF ($G(MAXSIZRE)<1) DO ADD("<maximum message=''></maximum>") ; sgg moved one line to maintain consistent order
"RTN","DGRRLU",131,0)
 DO ADD("<error message=''>"_$G(ERRMSG)_"</error>")
"RTN","DGRRLU",132,0)
 SET @DGRRESLT@(LINENO)="<record count='"_DGRRPCNT_"'>"
"RTN","DGRRLU",133,0)
 ;
"RTN","DGRRLU",134,0)
DONE1    D ADD("<institution name='"_SITENM_"' number='"_SITENO_"' productiondatabase='"_PRODSTAT_"' domain='"_DOMAIN_"' ></institution>")
"RTN","DGRRLU",135,0)
 IF (SEARCH="PRVLUP") DO ADD("</persons>")
"RTN","DGRRLU",136,0)
 ;IF (SEARCH="NAME")!(SEARCH="SSN")!(SEARCH="ICN")!(SEARCH="SSN4") DO ADD("</record>")
"RTN","DGRRLU",137,0)
 IF (SEARCH'="PRVLUP") DO ADD("</record>")
"RTN","DGRRLU",138,0)
 QUIT
"RTN","DGRRLU",139,0)
 ;
"RTN","DGRRLU",140,0)
ADD(STR) ; -- add string to array
"RTN","DGRRLU",141,0)
 SET DGRRLINE=DGRRLINE+1
"RTN","DGRRLU",142,0)
 SET @DGRRESLT@(DGRRLINE)=STR
"RTN","DGRRLU",143,0)
 QUIT
"RTN","DGRRLU",144,0)
 ;
"RTN","DGRRLU",145,0)
CANCEL(RESULT,PARAM) ;  Cancel a patient search ; ****
"RTN","DGRRLU",146,0)
 S JOB=$G(PARAM) ; ****
"RTN","DGRRLU",147,0)
 I JOB="" S RESULT=0 Q
"RTN","DGRRLU",148,0)
 N DGRRCDT
"RTN","DGRRLU",149,0)
 S DGRRCDT=$$FMADD^XLFDT(DT,2)
"RTN","DGRRLU",150,0)
 S ^XTMP("DGRRLU",JOB,0)=DGRRCDT_"^"_DT ; ****
"RTN","DGRRLU",151,0)
 S ^XTMP("DGRRLU",JOB,1)=JOB ; ****
"RTN","DGRRLU",152,0)
 S RESULT=1
"RTN","DGRRLU",153,0)
 Q  ; ****
"RTN","DGRRLU",154,0)
 ;
"RTN","DGRRLU",155,0)
DFNLST(DGRRVAL) ;Loop through DFN list
"RTN","DGRRLU",156,0)
 ;
"RTN","DGRRLU",157,0)
 N DGRRDFN,DGRRI
"RTN","DGRRLU",158,0)
 IF DGRRVAL="" DO  Q
"RTN","DGRRLU",159,0)
 . DO ADD("<error message='Not Enough Information Provided to Search for Patients.  Search Type = """_SEARCH_"""  Search For = """_DGRRVAL_"""'></error>")
"RTN","DGRRLU",160,0)
 . S DGERR=1
"RTN","DGRRLU",161,0)
 F DGRRI=1:1 S DGRRDFN=$P(DGRRVAL,U,DGRRI) Q:DGRRDFN=""  D 
"RTN","DGRRLU",162,0)
 .I $D(^DPT(+DGRRDFN,0)) D
"RTN","DGRRLU",163,0)
 ..D PTDATA^DGRRLUA(+DGRRDFN,.DGRRPCNT)
"RTN","DGRRLU",164,0)
 Q
"RTN","DGRRLU",165,0)
 ;
"RTN","DGRRLU0")
0^2^B36764979
"RTN","DGRRLU0",1,0)
DGRRLU0 ;alb/aas - DG Replacement and Rehosting RPC for VADPT ;10/27/05  09:53
"RTN","DGRRLU0",2,0)
 ;;5.3;Registration;**538**;Aug 13, 1993
"RTN","DGRRLU0",3,0)
 ;
"RTN","DGRRLU0",4,0)
 SET X="You Can't Enter DGRRLU0 at top of routine!"
"RTN","DGRRLU0",5,0)
 QUIT
"RTN","DGRRLU0",6,0)
 ;
"RTN","DGRRLU0",7,0)
BYFILTER(FILTER,FILTERV,BDATE,EDATE,SEARCH,VALUE,DELIM) ; -- search type by clinic, provider, or ward.
"RTN","DGRRLU0",8,0)
 NEW PCNT,OKAY,VAL
"RTN","DGRRLU0",9,0)
 K ^TMP("DGPTLKUP",$J)
"RTN","DGRRLU0",10,0)
 SET (OKAY,PCNT)=0
"RTN","DGRRLU0",11,0)
 ;
"RTN","DGRRLU0",12,0)
 DO ADD^DGRRUTL("<record count='0'>")
"RTN","DGRRLU0",13,0)
 SET LINENO=DGRRLINE
"RTN","DGRRLU0",14,0)
 FOR I=1:1 S VAL=$P(FILTERV,DELIM,I) QUIT:VAL=""  DO  Q:$$STOP^XOBVLIB()
"RTN","DGRRLU0",15,0)
 . IF FILTER="WARD" DO WARDPTS(VAL) S OKAY=1 Q
"RTN","DGRRLU0",16,0)
 . IF FILTER="CLINIC" DO CLINPTS(VAL,BDATE,EDATE) S OKAY=2 Q
"RTN","DGRRLU0",17,0)
 . IF FILTER="PROVIDER" D PROVPTS(VAL) S OKAY=3 Q
"RTN","DGRRLU0",18,0)
 . IF FILTER="SPECIALTY" D SPECPTS(VAL) S OKAY=4 Q
"RTN","DGRRLU0",19,0)
 ;
"RTN","DGRRLU0",20,0)
 IF OKAY<1 DO ADD^DGRRUTL("<error message='Filter not correctly specified'></error>")
"RTN","DGRRLU0",21,0)
 ;
"RTN","DGRRLU0",22,0)
 ; -- update the record count
"RTN","DGRRLU0",23,0)
 DO ADDPTS()
"RTN","DGRRLU0",24,0)
 SET @DGRRESLT@(LINENO)="<record count='"_PCNT_"'>"
"RTN","DGRRLU0",25,0)
 IF ($G(MAXSIZRE)<1) DO ADD^DGRRUTL("<maximum message=''></maximum>")
"RTN","DGRRLU0",26,0)
 DO ADD^DGRRUTL("<error message=''></error>")
"RTN","DGRRLU0",27,0)
 QUIT
"RTN","DGRRLU0",28,0)
 ;
"RTN","DGRRLU0",29,0)
FILTCHK(DFN,TYPE,VALUE) ; -- Filter search -
"RTN","DGRRLU0",30,0)
 ; -- check patients to match search type and search value for filter searches
"RTN","DGRRLU0",31,0)
 ; -- returns 1 if matches, 0 if no match
"RTN","DGRRLU0",32,0)
 ;
"RTN","DGRRLU0",33,0)
 SET VALUE=$$UP^XLFSTR(VALUE)
"RTN","DGRRLU0",34,0)
 Q:($G(VALUE)="")!($G(VALUE)="*") 1
"RTN","DGRRLU0",35,0)
 Q:($G(TYPE)="") 1
"RTN","DGRRLU0",36,0)
 Q:($G(DFN)<1) 0
"RTN","DGRRLU0",37,0)
 ;
"RTN","DGRRLU0",38,0)
 NEW I,J,OKAY,CHKVAL
"RTN","DGRRLU0",39,0)
 SET OKAY=0
"RTN","DGRRLU0",40,0)
 IF TYPE="NAME" DO
"RTN","DGRRLU0",41,0)
 . IF VALUE[", " SET VALUE=$P(VALUE,", ")_","_$P(VALUE,", ",2) ; REMOVE FIRST SPACE line added sgg 070104
"RTN","DGRRLU0",42,0)
 . SET CHKVAL=$P($G(^DPT(DFN,0)),"^",1)
"RTN","DGRRLU0",43,0)
 . IF $E(CHKVAL,1,$LENGTH(VALUE))=VALUE SET OKAY=1
"RTN","DGRRLU0",44,0)
 IF TYPE="SSN" DO
"RTN","DGRRLU0",45,0)
 . SET CHKVAL=$P($G(^DPT(DFN,0)),"^",9)
"RTN","DGRRLU0",46,0)
 . SET VALUE=$TR(VALUE," -","") ; REMOVE DASHES AND SPACES line added sgg 070104
"RTN","DGRRLU0",47,0)
 . IF $E(CHKVAL,1,$LENGTH(VALUE))=VALUE SET OKAY=1
"RTN","DGRRLU0",48,0)
 IF TYPE="ICN" DO
"RTN","DGRRLU0",49,0)
 . ;SET CHKVAL=$P($G(^DPT(DFN,"MPI")),"^",1)
"RTN","DGRRLU0",50,0)
 . S CHKVAL=+$$GETICN^MPIF001(DFN)
"RTN","DGRRLU0",51,0)
 . IF $E(CHKVAL,1,$LENGTH(VALUE))=VALUE SET OKAY=1
"RTN","DGRRLU0",52,0)
 IF TYPE="SSN4" DO
"RTN","DGRRLU0",53,0)
 . SET CHKVAL=$E($P($G(^DPT(DFN,0)),"^",1),1)_$E($P($G(^DPT(DFN,0)),"^",9),6,9)
"RTN","DGRRLU0",54,0)
 . IF $E(CHKVAL,1,$LENGTH(VALUE))=VALUE SET OKAY=1
"RTN","DGRRLU0",55,0)
 QUIT OKAY
"RTN","DGRRLU0",56,0)
 ;
"RTN","DGRRLU0",57,0)
WARDPTS(WARD) ; RETURN LIST OF PATIENTS IN A WARD
"RTN","DGRRLU0",58,0)
 ; Based on ORQPTQ2
"RTN","DGRRLU0",59,0)
 Q:+$G(WARD)<1 
"RTN","DGRRLU0",60,0)
 N DFN
"RTN","DGRRLU0",61,0)
 S DFN=0
"RTN","DGRRLU0",62,0)
 S WARD=$P(^DIC(42,WARD,0),"^")   ;GET WARD NAME FOR "CN"  LOOKUP
"RTN","DGRRLU0",63,0)
 Q:WARD=""
"RTN","DGRRLU0",64,0)
 F  D  Q:DFN'>0  Q:$$STOP^XOBVLIB()
"RTN","DGRRLU0",65,0)
 . S DFN=$O(^DPT("CN",WARD,DFN)) Q:DFN'>0
"RTN","DGRRLU0",66,0)
 . Q:'$$FILTCHK(DFN,SEARCH,VALUE)
"RTN","DGRRLU0",67,0)
 . S ^TMP("DGPTLKUP",$J,$P($G(^DPT(DFN,0)),"^",1),DFN)=""
"RTN","DGRRLU0",68,0)
 Q
"RTN","DGRRLU0",69,0)
 ;
"RTN","DGRRLU0",70,0)
PROVPTS(PROV) ;  RETURN LIST OF PATIENTS LINKED TO A PRIMARY PROVIDER
"RTN","DGRRLU0",71,0)
 ; Based on ORQPTQ2
"RTN","DGRRLU0",72,0)
 ; "APR" xref is on field PROVIDER in file 2 (2;.104)
"RTN","DGRRLU0",73,0)
 ; "AAP" xref is on field ATTENDING PHYSICIAN in file 2 (2;.1041)
"RTN","DGRRLU0",74,0)
 ; 
"RTN","DGRRLU0",75,0)
 Q:+$G(PROV)<1
"RTN","DGRRLU0",76,0)
 ;
"RTN","DGRRLU0",77,0)
 N DFN,XREF
"RTN","DGRRLU0",78,0)
 S DFN=0
"RTN","DGRRLU0",79,0)
 F XREF="AAP","APR" DO
"RTN","DGRRLU0",80,0)
 . F  S DFN=$O(^DPT(XREF,PROV,DFN)) Q:DFN'>0  D  Q:$$STOP^XOBVLIB()
"RTN","DGRRLU0",81,0)
 .. Q:'$$FILTCHK(DFN,SEARCH,VALUE)
"RTN","DGRRLU0",82,0)
 .. S ^TMP("DGPTLKUP",$J,$P($G(^DPT(DFN,0)),"^",1),DFN)=""
"RTN","DGRRLU0",83,0)
 Q
"RTN","DGRRLU0",84,0)
 ;
"RTN","DGRRLU0",85,0)
CLINPTS(CLIN,BDATE,EDATE) ; RETURN LIST OF PTS W/CLINIC APPT W/IN BEGINNING AND END DATES
"RTN","DGRRLU0",86,0)
 Q:+$G(CLIN)<1
"RTN","DGRRLU0",87,0)
 ;
"RTN","DGRRLU0",88,0)
 N DFN,NAME,I,J,X,Y,ORJ,ORSRV,ORNOWDT,CHKX,CHKIN,MAXAPPTS,ORC,CLNAM,NOWDT
"RTN","DGRRLU0",89,0)
 S MAXAPPTS=200
"RTN","DGRRLU0",90,0)
 S NOWDT=$$NOW^XLFDT
"RTN","DGRRLU0",91,0)
 ;
"RTN","DGRRLU0",92,0)
 S DFN=0,I=1
"RTN","DGRRLU0",93,0)
 IF $G(BDATE)="" S BDATE="T"
"RTN","DGRRLU0",94,0)
 IF $G(EDATE)="" S EDATE="T+1"
"RTN","DGRRLU0",95,0)
 ;CONVERT BDATE AND EDATE INTO FILEMAN DATE/TIME
"RTN","DGRRLU0",96,0)
 D DT^DILF("T",BDATE,.BDATE,"","")
"RTN","DGRRLU0",97,0)
 D DT^DILF("T",EDATE,.EDATE,"","")
"RTN","DGRRLU0",98,0)
 I (BDATE=-1)!(EDATE=-1) S Y(1)="^Error in date range." Q
"RTN","DGRRLU0",99,0)
 S EDATE=$P(EDATE,".")_.5  ;ADD 1/2 DAY TO END DATE
"RTN","DGRRLU0",100,0)
 ;
"RTN","DGRRLU0",101,0)
 D CLINPT2(+CLIN,BDATE,EDATE)
"RTN","DGRRLU0",102,0)
 QUIT
"RTN","DGRRLU0",103,0)
 ;
"RTN","DGRRLU0",104,0)
CLINPT2(CLIN,BEGIN,END) ; -- Use scheduling rehosting API from patches SD*5.3*253 and SD*5.3*275
"RTN","DGRRLU0",105,0)
 ; -- GETPLIST^SDAMA202(SDIEN,SDFIELDS,SDAPSTAT,SDSTART,SDEND,.SDRESULT,SDIOSTAT)
"RTN","DGRRLU0",106,0)
 ;
"RTN","DGRRLU0",107,0)
 K ^TMP($J,"SDAMA202","GETPLIST")
"RTN","DGRRLU0",108,0)
 NEW I,X,APPTS,APPTDT SET APPTS=""
"RTN","DGRRLU0",109,0)
 ;
"RTN","DGRRLU0",110,0)
 ; -- get appointment date/time, patient status, patient ien & name,
"RTN","DGRRLU0",111,0)
 ;    only get appointment status = "R" for scheduled or kept appointments.
"RTN","DGRRLU0",112,0)
 DO GETPLIST^SDAMA202(+CLIN,"1;3;4","R",BEGIN,END,.APPTS)
"RTN","DGRRLU0",113,0)
 ;
"RTN","DGRRLU0",114,0)
 ; -- check number of appointments
"RTN","DGRRLU0",115,0)
 Q:APPTS<1
"RTN","DGRRLU0",116,0)
 ;
"RTN","DGRRLU0",117,0)
 ; -- check for an error, may need to pass message up.
"RTN","DGRRLU0",118,0)
 I $D(^TMP($J,"SDAMA202","GETPTLIST","ERROR")) QUIT
"RTN","DGRRLU0",119,0)
 ;
"RTN","DGRRLU0",120,0)
 ; -- move list of appointments to list of patients, ordered by name, dfn
"RTN","DGRRLU0",121,0)
 S (I,X)=""
"RTN","DGRRLU0",122,0)
 F  SET I=$O(^TMP($J,"SDAMA202","GETPLIST",I)) Q:I<1  S X=^(I,4) DO
"RTN","DGRRLU0",123,0)
 .  Q:'$$FILTCHK(+X,SEARCH,VALUE)  ;check if meets search criteria
"RTN","DGRRLU0",124,0)
 .  S APPTDT=$G(^TMP($J,"SDAMA202","GETPLIST",I,1))
"RTN","DGRRLU0",125,0)
 .  S ^TMP("DGPTLKUP",$J,$P(X,"^",2),+X,+APPTDT)=""
"RTN","DGRRLU0",126,0)
 QUIT
"RTN","DGRRLU0",127,0)
 ;
"RTN","DGRRLU0",128,0)
SPECPTS(SPEC) ;Returns a list of patients associated with a specialty
"RTN","DGRRLU0",129,0)
 ; "ATR" cross reference is on the Treating Specialty (#.103) field
"RTN","DGRRLU0",130,0)
 ; in the Patient (#2) file and is a pointer to the Facility 
"RTN","DGRRLU0",131,0)
 ; Treating Specialty (#45.7) file.
"RTN","DGRRLU0",132,0)
 ;
"RTN","DGRRLU0",133,0)
 Q:+$G(SPEC)<1
"RTN","DGRRLU0",134,0)
 N DFN
"RTN","DGRRLU0",135,0)
 S DFN=0
"RTN","DGRRLU0",136,0)
 F  S DFN=$O(^DPT("ATR",+SPEC,DFN)) Q:DFN'>0  D  Q:$$STOP^XOBVLIB()
"RTN","DGRRLU0",137,0)
 .Q:'$$FILTCHK(DFN,SEARCH,VALUE)
"RTN","DGRRLU0",138,0)
 .S ^TMP("DGPTLKUP",$J,$P($G(^DPT(DFN,0)),U),DFN)=""
"RTN","DGRRLU0",139,0)
 Q
"RTN","DGRRLU0",140,0)
 ;
"RTN","DGRRLU0",141,0)
ADDPTS() ;
"RTN","DGRRLU0",142,0)
 N NAME,DFN,DGRRFLG,DGRRAPTS,DGRRCTR
"RTN","DGRRLU0",143,0)
 S NAME=""
"RTN","DGRRLU0",144,0)
 S (DGRRFLG,DGRRCTR)=0
"RTN","DGRRLU0",145,0)
 S DGRRAPTS=$S(FILTER="CLINIC":1,1:0)
"RTN","DGRRLU0",146,0)
 FOR  SET NAME=$O(^TMP("DGPTLKUP",$J,NAME)) Q:NAME=""!(DGRRFLG=1)  DO
"RTN","DGRRLU0",147,0)
 . S DFN=""  FOR  SET DFN=$O(^TMP("DGPTLKUP",$J,NAME,DFN)) Q:DFN<1!(DGRRFLG=1)  DO
"RTN","DGRRLU0",148,0)
 .. S DGRRCTR=DGRRCTR+1
"RTN","DGRRLU0",149,0)
 .. I DGRRCTR>MAXSIZE S DGRRFLG=1 Q
"RTN","DGRRLU0",150,0)
 .. DO PTDATA^DGRRLUA(DFN,.PCNT)
"RTN","DGRRLU0",151,0)
 .. I FILTER'="CLINIC" Q
"RTN","DGRRLU0",152,0)
 .. D ADD^DGRRUTL("<appointments>")
"RTN","DGRRLU0",153,0)
 .. N APPTDT
"RTN","DGRRLU0",154,0)
 .. S APPTDT=""
"RTN","DGRRLU0",155,0)
 .. F  S APPTDT=$O(^TMP("DGPTLKUP",$J,NAME,DFN,APPTDT)) Q:'APPTDT  D
"RTN","DGRRLU0",156,0)
 ...D ADD^DGRRUTL("<appointmentTime>"_APPTDT_"</appointmentTime>")
"RTN","DGRRLU0",157,0)
 .. D ADD^DGRRUTL("</appointments>")
"RTN","DGRRLU0",158,0)
 .. D ADD^DGRRUTL("</patient>")
"RTN","DGRRLU0",159,0)
 I DGRRCTR>MAXSIZE D
"RTN","DGRRLU0",160,0)
 .IF $G(MAXSIZRE)<1 DO ADD^DGRRLU("<maximum message='Too many patients found (more than "_MAXSIZE_").  Please Limit Search.'></maximum>")
"RTN","DGRRLU0",161,0)
 .SET MAXSIZRE=1
"RTN","DGRRLU0",162,0)
 K ^TMP("DGPTLKUP",$J)
"RTN","DGRRLU0",163,0)
 ;IF ($G(MAXSIZRE)<1) DO ADD^DGRRUTL("<maximum message=''></maximum>")
"RTN","DGRRLU0",164,0)
 Q
"RTN","DGRRLU0",165,0)
 ;
"RTN","DGRRLU0",166,0)
NAMECOMP(DFN,DGRRCNT) ; ENTRY IS +$P($G(^DPT(DFN,"NAME")),"^",1)  
"RTN","DGRRLU0",167,0)
 ; 
"RTN","DGRRLU0",168,0)
 N LN,FN,MI,PR,SU,DE,DGA,DGNMC
"RTN","DGRRLU0",169,0)
 S DGA=+$P($G(^DPT(DFN,"NAME")),U)_","
"RTN","DGRRLU0",170,0)
 D GETS^DIQ(20,+DGA,"1:6","","DGNMC")
"RTN","DGRRLU0",171,0)
 S LN=$$CHARCHK^DGRRUTL($G(DGNMC(20,DGA,1)))
"RTN","DGRRLU0",172,0)
 S FN=$$CHARCHK^DGRRUTL($G(DGNMC(20,DGA,2)))
"RTN","DGRRLU0",173,0)
 S MI=$$CHARCHK^DGRRUTL($G(DGNMC(20,DGA,3)))
"RTN","DGRRLU0",174,0)
 S PR=$$CHARCHK^DGRRUTL($G(DGNMC(20,DGA,4)))
"RTN","DGRRLU0",175,0)
 S SU=$$CHARCHK^DGRRUTL($G(DGNMC(20,DGA,5)))
"RTN","DGRRLU0",176,0)
 S DE=$$CHARCHK^DGRRUTL($G(DGNMC(20,DGA,6)))
"RTN","DGRRLU0",177,0)
 DO ADD^DGRRUTL("<namecomp number='"_DGRRCNT_"' last='"_LN_"' first='"_FN_"' middle='"_MI_"' prefix='"_PR_"' suffix='"_SU_"' degree='"_DE_"' ></namecomp>")
"RTN","DGRRLU0",178,0)
 ;
"RTN","DGRRLU1")
0^3^B55226700
"RTN","DGRRLU1",1,0)
DGRRLU1 ;alb/aas - DG Replacement and Rehosting RPC for VADPT ;1/4/06  11:31
"RTN","DGRRLU1",2,0)
 ;;5.3;Registration;**538**;Aug 13, 1993
"RTN","DGRRLU1",3,0)
 ;
"RTN","DGRRLU1",4,0)
 SET X="You Can't Enter DGRRLU1 at top of routine!"
"RTN","DGRRLU1",5,0)
 QUIT
"RTN","DGRRLU1",6,0)
 ;
"RTN","DGRRLU1",7,0)
BUS(RESULT,PARAMS) ; -- return business logic data for 1 patient in xml format
"RTN","DGRRLU1",8,0)
 ; -- RPC: DGRR GET PTLK BUSINESS DATA 
"RTN","DGRRLU1",9,0)
 ; 
"RTN","DGRRLU1",10,0)
 ; -- input  [required] PARAMS("PATIENT_ID_TYPE") = 'DFN' or 'ICN'
"RTN","DGRRLU1",11,0)
 ;           [required] PARAMS("PATIENT_ID") = a DFN value or an ICN value
"RTN","DGRRLU1",12,0)
 ;           [required] PARAMS("USER_ID_TYPE") = 'VPID' or 'DUZ'
"RTN","DGRRLU1",13,0)
 ;           [required] PARAMS("USER_ID") = value of a VPID, or DUZ
"RTN","DGRRLU1",14,0)
 ;           [optional] PARAMS("USER_INSTITUTION") = Station # (Defaults to DUZ(2) if not received)
"RTN","DGRRLU1",15,0)
 ; [temporary/optional] PARAMS("PATIENT_RECORD_FLAG") = Optional.  If 1 the query returns old version of the patient_record_flag business rule
"RTN","DGRRLU1",16,0)
 ;           
"RTN","DGRRLU1",17,0)
 ; -- returns result array that contains XML document containing data for 12 checks of patient
"RTN","DGRRLU1",18,0)
 ;    related to lookup that is executed in the business layer.  See Patient Lookup documentation
"RTN","DGRRLU1",19,0)
 ;    for logic
"RTN","DGRRLU1",20,0)
 ;       
"RTN","DGRRLU1",21,0)
 NEW X,Y,CNT,DGRRLINE,DGRRESLT,PTID,DGENR,ICN,USERID,INSTTTN,ERRMESS
"RTN","DGRRLU1",22,0)
 KILL RESULT,DGRRESLT
"RTN","DGRRLU1",23,0)
 SET CNT=0
"RTN","DGRRLU1",24,0)
 SET DGRRLINE=0
"RTN","DGRRLU1",25,0)
 K ^TMP($J,"PLU-BRULES")
"RTN","DGRRLU1",26,0)
 SET DGRRESLT="^TMP($J,""PLU-BRULES"")"
"RTN","DGRRLU1",27,0)
 SET RESULT=$NA(@DGRRESLT)
"RTN","DGRRLU1",28,0)
 DO DT^DICRW
"RTN","DGRRLU1",29,0)
 ;
"RTN","DGRRLU1",30,0)
USER ; establish the DUZ from User ID
"RTN","DGRRLU1",31,0)
 IF ($G(PARAMS("USER_ID_TYPE"))="VPID") SET USERID=$$IEN^XUPS($G(PARAMS("USER_ID")))
"RTN","DGRRLU1",32,0)
 IF ($G(PARAMS("USER_ID_TYPE"))="DUZ") SET USERID=$G(PARAMS("USER_ID"))
"RTN","DGRRLU1",33,0)
 IF +$G(USERID)>0 DO DUZ^XUP(USERID)
"RTN","DGRRLU1",34,0)
 IF +$G(USERID)<1 SET ERRMESS="USER_ID_TYPE: "_$G(PARAMS("USER_ID_TYPE"))_"  USER_ID: "_$G(PARAMS("USER_ID"))_" does not exist."
"RTN","DGRRLU1",35,0)
 ;
"RTN","DGRRLU1",36,0)
INSTTTN ; set institution to USER_INSTITUTION if available else set to default institution
"RTN","DGRRLU1",37,0)
 ;USER_INSTITUTION parameter if defined will contain the station number for
"RTN","DGRRLU1",38,0)
 ;an institution.  Call $$IEN^XUAF4 (IA#2171) to convert station number to IEN.
"RTN","DGRRLU1",39,0)
 SET INSTTTN=$G(PARAMS("USER_INSTITUTION")),INSTTTN=$$IEN^XUAF4(INSTTTN)
"RTN","DGRRLU1",40,0)
 IF INSTTTN="" S INSTTTN=$G(DUZ(2))
"RTN","DGRRLU1",41,0)
 ;
"RTN","DGRRLU1",42,0)
PATIENT ; establish Patient VPID from Patient ID
"RTN","DGRRLU1",43,0)
 IF $G(PARAMS("PATIENT_ID_TYPE"))="ICN" DO 
"RTN","DGRRLU1",44,0)
 .SET ICN=$G(PARAMS("PATIENT_ID"))
"RTN","DGRRLU1",45,0)
 .SET PTID=$$CHARCHK^DGRRUTL($$GETDFN^MPIF001($P(ICN,"V",1)))
"RTN","DGRRLU1",46,0)
 IF $G(PARAMS("PATIENT_ID_TYPE"))="DFN" DO 
"RTN","DGRRLU1",47,0)
 .SET PTID=$$CHARCHK^DGRRUTL($GET(PARAMS("PATIENT_ID")))
"RTN","DGRRLU1",48,0)
 IF ($G(PTID)<1) SET ERRMESS="PATIENT_ID_TYPE: "_$G(PARAMS("PATIENT_ID_TYPE"))_"   PATIENT_ID: "_$G(PARAMS("PATIENT_ID"))_" does not exist."
"RTN","DGRRLU1",49,0)
 IF ($G(PTID)>0),($G(^DPT(PTID,0))="") SET ERRMESS="For Patient Id ("_PTID_"), no data exists."
"RTN","DGRRLU1",50,0)
 ;
"RTN","DGRRLU1",51,0)
 DO ADD^DGRRLU($$XMLHDR^DGRRUTL())
"RTN","DGRRLU1",52,0)
 IF ($G(ERRMESS)'="") D ADD^DGRRLU("<error message="_ERRMESS_"'></error>") GOTO BUSEND
"RTN","DGRRLU1",53,0)
 DO ADD^DGRRLU("<businessRules patientId='"_PTID_"' patientName='"_$$CHARCHK^DGRRUTL($P($G(^DPT(PTID,0)),"^",1))_"' patientSSN='"_$P($G(^DPT(PTID,0)),"^",9)_"'>")
"RTN","DGRRLU1",54,0)
 DO ADD^DGRRLU("<error message=''></error>")
"RTN","DGRRLU1",55,0)
 D RULES(PTID,INSTTTN)
"RTN","DGRRLU1",56,0)
BUSEND DO ADD^DGRRLU("</businessRules>")
"RTN","DGRRLU1",57,0)
 QUIT
"RTN","DGRRLU1",58,0)
 ;
"RTN","DGRRLU1",59,0)
RULES(DFN,DIV) ;
"RTN","DGRRLU1",60,0)
 ; -- display order from old SRS  
"RTN","DGRRLU1",61,0)
 ;    Messages will display in the following order: 
"RTN","DGRRLU1",62,0)
 ;    emp SSN mission, Similar, Deceased, Security (sometimes), CWAD, Missing, Test, Enrollment and Means Test. 
"RTN","DGRRLU1",63,0)
 ;    
"RTN","DGRRLU1",64,0)
 N DOD,MASPARAM,TPFIELD,SENSITIV,USERKEY,SIM,PTSSN,PRIM1,EMPSSN,PTSSN
"RTN","DGRRLU1",65,0)
 SET EMPSSN=$$GET1^DIQ(200,DUZ_",",9,"I","","DGNPERR")
"RTN","DGRRLU1",66,0)
 SET PTSSN=$P($G(^DPT(DFN,0)),"^",9)
"RTN","DGRRLU1",67,0)
 SET USERKEY=$S($D(^XUSEC("DG RECORD ACCESS",DUZ)):"true",1:"false")
"RTN","DGRRLU1",68,0)
 SET MASPARAM=$S(+$P($G(^DG(43,1,"REC")),"^")=1:"true",1:"false") ;Restrict Patient Record Access (#1201)
"RTN","DGRRLU1",69,0)
 ;
"RTN","DGRRLU1",70,0)
0 ; -- employee SSN missing from new person file
"RTN","DGRRLU1",71,0)
 N X
"RTN","DGRRLU1",72,0)
 S X="   <businessRule alertId='employeeSSNExists' empSsn='"_$$CHARCHK^DGRRUTL(EMPSSN)
"RTN","DGRRLU1",73,0)
 S X=X_"' masParameter='"_$$CHARCHK^DGRRUTL(MASPARAM)
"RTN","DGRRLU1",74,0)
 S X=X_"' userRecordAccessPrivilege='"_$$CHARCHK^DGRRUTL(USERKEY)_"'></businessRule>"
"RTN","DGRRLU1",75,0)
 D ADD^DGRRLU(X)
"RTN","DGRRLU1",76,0)
 ;
"RTN","DGRRLU1",77,0)
1 ; -- similar patients, Checks the BS5 cross reference for similar patients and matches last name
"RTN","DGRRLU1",78,0)
 ;    bs5 index is first character of last name concatenated with last 4 of ssn.
"RTN","DGRRLU1",79,0)
 ;    give warning, ask if okay, 
"RTN","DGRRLU1",80,0)
 ;    
"RTN","DGRRLU1",81,0)
 SET SIM=$S($$BS5^DPTLK5(DFN)=1:"true",1:"false")
"RTN","DGRRLU1",82,0)
 DO ADD^DGRRLU("  <businessRule alertId='similarPatients' similarPatientsFound='"_$$CHARCHK^DGRRUTL(SIM)_"'></businessRule>")
"RTN","DGRRLU1",83,0)
 ;
"RTN","DGRRLU1",84,0)
2 ; -- deceased patient
"RTN","DGRRLU1",85,0)
 ;    give warning if patient is deceased
"RTN","DGRRLU1",86,0)
 SET DOD=$P($G(^DPT(DFN,.35)),"^",1)
"RTN","DGRRLU1",87,0)
 DO ADD^DGRRLU("  <businessRule alertId='deceasedPatient' theDateOfDeath='"_$$CHARCHK^DGRRUTL(DOD)_"'></businessRule>")
"RTN","DGRRLU1",88,0)
 ;
"RTN","DGRRLU1",89,0)
3 ; -- accessing own record and user doesn't have dg record access key and MAS parameter to restrict patient records=yes
"RTN","DGRRLU1",90,0)
 ;    check parameter first, check key second.  if (param && !userKey), if (emp ssn == to pt ssn) don't allow (check format of ssn)
"RTN","DGRRLU1",91,0)
 ;    if (empssn=="") tell them to get added and don't allow access
"RTN","DGRRLU1",92,0)
 SET X="  <businessRule alertId='accessOwnRecord' masParameter='"_$$CHARCHK^DGRRUTL(MASPARAM)
"RTN","DGRRLU1",93,0)
 SET X=X_"' userRecordAccessPrivilege='"_$$CHARCHK^DGRRUTL(USERKEY)_"' employeeSSN='"_$$CHARCHK^DGRRUTL(EMPSSN)_"' patientSSN='"_$$CHARCHK^DGRRUTL(PTSSN)_"'></businessRule>"
"RTN","DGRRLU1",94,0)
 DO ADD^DGRRLU(X)
"RTN","DGRRLU1",95,0)
 ;
"RTN","DGRRLU1",96,0)
4 ; -- primary elig = employee and user doesn't hold dg security office key,from EMPL^DGSEC4(DFN)
"RTN","DGRRLU1",97,0)
 ;    give message and log if chosen
"RTN","DGRRLU1",98,0)
 NEW ELIST,DGELIG
"RTN","DGRRLU1",99,0)
 S DGELIG=0,ELIST=""
"RTN","DGRRLU1",100,0)
 F  S DGELIG=+$O(^DPT("AEL",DFN,DGELIG)) Q:'DGELIG  D
"RTN","DGRRLU1",101,0)
 . S ELIST=ELIST_$P($G(^DIC(8.1,+$P($G(^DIC(8,DGELIG,0)),"^",9),0)),"^",1)_","
"RTN","DGRRLU1",102,0)
 SET USERKEY=$S($D(^XUSEC("DG SECURITY OFFICER",DUZ)):"true",1:"false")
"RTN","DGRRLU1",103,0)
 DO ADD^DGRRLU("  <businessRule alertId='patientIsEmployee' eligibilityList='"_$$CHARCHK^DGRRUTL(ELIST)_"' primElig='"_$$CHARCHK^DGRRUTL($$PRIM^DGRRLUA(DFN))_"' userSecurityOfficerPrivilege='"_$$CHARCHK^DGRRUTL(USERKEY)_"'></businessRule>")
"RTN","DGRRLU1",104,0)
 ;
"RTN","DGRRLU1",105,0)
5 ; -- sensitive record and user doesn't have the dg sensitivity key
"RTN","DGRRLU1",106,0)
 ;    ask to continue, if yes, log if chosen
"RTN","DGRRLU1",107,0)
 SET SENSITIV=$S($P($G(^DGSL(38.1,DFN,0)),"^",2)=1:"true",1:"false")
"RTN","DGRRLU1",108,0)
 SET USERKEY=$S($D(^XUSEC("DG SENSITIVITY",DUZ)):"true",1:"false")
"RTN","DGRRLU1",109,0)
 DO ADD^DGRRLU("  <businessRule alertId='sensitiveRecord' isSensitive='"_$$CHARCHK^DGRRUTL(SENSITIV)_"' userSensitivityPrivilege='"_$$CHARCHK^DGRRUTL(USERKEY)_"'></businessRule>")
"RTN","DGRRLU1",110,0)
 ;
"RTN","DGRRLU1",111,0)
6 ; -- cwad for patient (C)risis notes, Clinical (W)arnings, (A)lergies, and Advance (D)irectives 
"RTN","DGRRLU1",112,0)
 NEW CWAD
"RTN","DGRRLU1",113,0)
 SET CWAD=$$CWAD^ORQPT2(DFN)
"RTN","DGRRLU1",114,0)
 DO ADD^DGRRLU("  <businessRule alertId='cwadChecks' cwads='"_$$CHARCHK^DGRRUTL(CWAD)_"'></businessRule>")
"RTN","DGRRLU1",115,0)
 ;
"RTN","DGRRLU1",116,0)
7 ; -- patient on MPR, see if patient is listed in Missing Patient Register
"RTN","DGRRLU1",117,0)
 NEW MPREC
"RTN","DGRRLU1",118,0)
 ;S X="MPRCHK" X ^%ZOSF("TEST") I $T I $L($T(GUI^MPRCHK)) D GUI^MPRCHK(DFN,.MPREC) ; MPR
"RTN","DGRRLU1",119,0)
 DO ADD^DGRRLU("  <businessRule alertId='patientOnMPR' value='"_$$CHARCHK^DGRRUTL($S($G(MPREC(0))=1:"true",1:"false"))_"'></businessRule>")
"RTN","DGRRLU1",120,0)
 ;
"RTN","DGRRLU1",121,0)
8 ; -- test patient 
"RTN","DGRRLU1",122,0)
 ;    if (dataColumn=1) display message.
"RTN","DGRRLU1",123,0)
 S TPFIELD="false"
"RTN","DGRRLU1",124,0)
 I $$TESTPAT^VADPT(DFN) S TPFIELD="true"
"RTN","DGRRLU1",125,0)
 DO ADD^DGRRLU("  <businessRule alertId='testPatient' testPatientColumn='"_$$CHARCHK^DGRRUTL(TPFIELD)_"'></businessRule>")
"RTN","DGRRLU1",126,0)
 ;
"RTN","DGRRLU1",127,0)
9 ; -- enrollment information FROM DPTLK,  Provide Enrollment data for user notification
"RTN","DGRRLU1",128,0)
 ;    
"RTN","DGRRLU1",129,0)
 ; If patient is NOT ELIGIBLE, display Enrollment Status (Ineligible Project Phase I)
"RTN","DGRRLU1",130,0)
 ; Get Enrollment Group Threshold Priority and Subgroup
"RTN","DGRRLU1",131,0)
 ; Compare Patient's Enrollment Priority to Enrollment Group Threshold
"RTN","DGRRLU1",132,0)
 ;
"RTN","DGRRLU1",133,0)
 NEW ENCAT,ENPRIO,ENSUBGRP,ENEND,LINE,DGENST
"RTN","DGRRLU1",134,0)
 S ENCAT=""
"RTN","DGRRLU1",135,0)
 I $$GET^DGENA($$FINDCUR^DGENA(+DFN),.DGENR) D
"RTN","DGRRLU1",136,0)
 . S ENCAT=$$CATEGORY^DGENA4(+DFN)
"RTN","DGRRLU1",137,0)
 . S ENCAT=$$EXTERNAL^DILFD(27.15,.02,"",ENCAT)
"RTN","DGRRLU1",138,0)
 S ENPRIO=$S($G(DGENR("PRIORITY")):$$EXT^DGENU("PRIORITY",DGENR("PRIORITY")),1:"")
"RTN","DGRRLU1",139,0)
 S ENSUBGRP=$S($G(DGENR("SUBGRP"))="":"",1:$$EXT^DGENU("SUBGRP",$G(DGENR("SUBGRP"))))
"RTN","DGRRLU1",140,0)
 SET ENEND=$G(DGENR("END"))
"RTN","DGRRLU1",141,0)
 SET DGENST=$S($G(DGENR("STATUS"))=10:DGENR("STATUS"),$G(DGENR("STATUS"))=19:DGENR("STATUS"),$G(DGENR("STATUS"))=20:DGENR("STATUS"),1:"")
"RTN","DGRRLU1",142,0)
 I DGENST'="" S DGENST=$$EXTERNAL^DILFD(27.11,.04,"",DGENST)
"RTN","DGRRLU1",143,0)
 ; check for Combat Veteran Eligibility, if elig do not display EGT info
"RTN","DGRRLU1",144,0)
 N DGENTHR
"RTN","DGRRLU1",145,0)
 S DGENTHR=1
"RTN","DGRRLU1",146,0)
 I '$$CVEDT^DGCV(+DFN) D
"RTN","DGRRLU1",147,0)
 .;Get Enrollment Group Threshold Priority and Subgroup
"RTN","DGRRLU1",148,0)
 .N DGEGTIEN,DGEGT
"RTN","DGRRLU1",149,0)
 .S DGEGTIEN=$$FINDCUR^DGENEGT
"RTN","DGRRLU1",150,0)
 .S DGEGT=$$GET^DGENEGT(DGEGTIEN,.DGEGT)
"RTN","DGRRLU1",151,0)
 .Q:$G(DGENR("PRIORITY"))=""!($G(DGEGT("PRIORITY"))="")
"RTN","DGRRLU1",152,0)
 .;Compare Patient's Enrollment Priority to Enrollment Group Threshold
"RTN","DGRRLU1",153,0)
 .S DGENTHR=$$ABOVE^DGENEGT1(+DFN,DGENR("PRIORITY"),$G(DGENR("SUBGRP")),DGEGT("PRIORITY"),DGEGT("SUBGRP"))
"RTN","DGRRLU1",154,0)
 SET LINE="  <businessRule alertId='enrollmentData' category='"_$$CHARCHK^DGRRUTL(ENCAT)_"' endDate='"_$$CHARCHK^DGRRUTL(ENEND)_"' priority='"
"RTN","DGRRLU1",155,0)
 SET LINE=LINE_$$CHARCHK^DGRRUTL(ENPRIO)_"' subgroup='"_$$CHARCHK^DGRRUTL(ENSUBGRP)_"' status='"_$$CHARCHK^DGRRUTL(DGENST)
"RTN","DGRRLU1",156,0)
 SET LINE=LINE_"' aboveThreshold='"_DGENTHR_"'></businessRule>"
"RTN","DGRRLU1",157,0)
 D ADD^DGRRLU(LINE)
"RTN","DGRRLU1",158,0)
 ;
"RTN","DGRRLU1",159,0)
 D 10^DGRRLU1A
"RTN","DGRRLU1",160,0)
END ;
"RTN","DGRRLU1",161,0)
 QUIT
"RTN","DGRRLU1A")
0^4^B29052428
"RTN","DGRRLU1A",1,0)
DGRRLU1A ;alb/aas,BPFO/MM DG Replacement and Rehosting RPC for VADPT (cont) - ;11/12/2003
"RTN","DGRRLU1A",2,0)
 ;;5.3;Registration;**538**;Aug 13, 1993
"RTN","DGRRLU1A",3,0)
 ;
"RTN","DGRRLU1A",4,0)
 ;Continued from DGRRLU1
"RTN","DGRRLU1A",5,0)
 ;
"RTN","DGRRLU1A",6,0)
10 ; -- means test required, get current means test status and MAS Parameter display of notification
"RTN","DGRRLU1A",7,0)
 ;    if (paramater && last means test indicator == "r") display message
"RTN","DGRRLU1A",8,0)
 N DGMTLST,DIVRULE,DIVTXT,DGMSGF,DGMFLG,X,DGDOM,DGDOM1
"RTN","DGRRLU1A",9,0)
 S DIVRULE="false"
"RTN","DGRRLU1A",10,0)
 I $P($G(^DG(40.8,+$O(^DG(40.8,"AD",+$G(DIV),0)),"MT")),"^")="Y" S DIVRULE="true"
"RTN","DGRRLU1A",11,0)
 S DGMSGF=1
"RTN","DGRRLU1A",12,0)
 S DGMTLST=$$CMTS^DGMTU(DFN)
"RTN","DGRRLU1A",13,0)
 S DGMFLG=$$MFLG^DGMTU(DGMTLST)
"RTN","DGRRLU1A",14,0)
 ;S DGMTDATE=$P($G(^DGMT(408.31,+DGMTLST,0)),U)
"RTN","DGRRLU1A",15,0)
 S DIVTXT=$P($G(^DG(40.8,+$O(^DG(40.8,"AD",+$G(DIV),0)),"MT")),"^",2)
"RTN","DGRRLU1A",16,0)
 S X="  <businessRule alertId='meansTestRequired' lastMeansTestDate='"_$$CHARCHK^DGRRUTL($P(DGMTLST,"^",2))
"RTN","DGRRLU1A",17,0)
 S X=X_"' lastMeansTestIndicator='"_$$CHARCHK^DGRRUTL($P(DGMTLST,"^",3))_"' masDivisionRule='"_$$CHARCHK^DGRRUTL(DIVRULE)_"' text='"_$$CHARCHK^DGRRUTL(DIVTXT)
"RTN","DGRRLU1A",18,0)
 S X=X_"' addTxt='"_$$CHARCHK^DGRRUTL(DGMFLG)_"'></businessRule>"
"RTN","DGRRLU1A",19,0)
 DO ADD^DGRRLU(X)
"RTN","DGRRLU1A",20,0)
 ;
"RTN","DGRRLU1A",21,0)
11 ; -- legacy data for patient, check to see if patient on M data base merged into current M database
"RTN","DGRRLU1A",22,0)
 ; Beginning with release 4, the legacy alert will always return false.
"RTN","DGRRLU1A",23,0)
 ; Alert no longer displayed.  It  will be removed in a future release. 
"RTN","DGRRLU1A",24,0)
 DO ADD^DGRRLU("  <businessRule alertId='legacyDataExists' checkValue='"_$$CHARCHK^DGRRUTL("false")_"' facility=''></businessRule>")
"RTN","DGRRLU1A",25,0)
 ;
"RTN","DGRRLU1A",26,0)
12 ; -- fugitive felon -- to be released soon.
"RTN","DGRRLU1A",27,0)
 NEW FUGITIVE
"RTN","DGRRLU1A",28,0)
 SET FUGITIVE="false"
"RTN","DGRRLU1A",29,0)
 IF $D(^DPT("AXFFP",1,DFN)) SET FUGITIVE="true"
"RTN","DGRRLU1A",30,0)
 DO ADD^DGRRLU("  <businessRule alertId='fugitiveFelon' fugitiveStatus='"_$$CHARCHK^DGRRUTL(FUGITIVE)_"'></businessRule>")
"RTN","DGRRLU1A",31,0)
 ;
"RTN","DGRRLU1A",32,0)
13 ; -- patient record flag
"RTN","DGRRLU1A",33,0)
 N DGPFFLGS,DGPFFLG,DGRRNFLG
"RTN","DGRRLU1A",34,0)
 S DGRRNFLG=0
"RTN","DGRRLU1A",35,0)
 S DGPFFLG=""
"RTN","DGRRLU1A",36,0)
 IF +$G(PARAMS("PATIENT_RECORD_FLAG")) DO  ; old version of patient record flag
"RTN","DGRRLU1A",37,0)
 .I $L($T(GETACT^DGPFAPI)) S DGPFFLGS=$$GETACT^DGPFAPI(DFN,"DGPFFLGS") D
"RTN","DGRRLU1A",38,0)
 .. I $G(DGPFFLGS)=0 Q
"RTN","DGRRLU1A",39,0)
 .. N DGPFI
"RTN","DGRRLU1A",40,0)
 .. S DGPFI=0
"RTN","DGRRLU1A",41,0)
 .. F  S DGPFI=$O(DGPFFLGS(DGPFI)) Q:'DGPFI  D
"RTN","DGRRLU1A",42,0)
 ...I DGPFI>1 S DGPFFLG=DGPFFLG_", "
"RTN","DGRRLU1A",43,0)
 ...S DGPFFLG=DGPFFLG_$P($G(DGPFFLGS(+DGPFI,"FLAG")),U,2)
"RTN","DGRRLU1A",44,0)
 .DO ADD^DGRRLU("  <businessRule alertId='patientRecordFlag' flag='"_$$CHARCHK^DGRRUTL(DGPFFLG)_"'></businessRule>")
"RTN","DGRRLU1A",45,0)
 ;
"RTN","DGRRLU1A",46,0)
 IF '+$G(PARAMS("PATIENT_RECORD_FLAG")) DO  ; new (06/17/04) version of patient record flag can be turned on with this param, the flag and the old code can be removed once the new stuff is approved
"RTN","DGRRLU1A",47,0)
 .I '$L($T(GETACT^DGPFAPI)) S DGRRNFLG=1 D NOALRT
"RTN","DGRRLU1A",48,0)
 .Q:DGRRNFLG=1
"RTN","DGRRLU1A",49,0)
 .S DGPFFLGS=$$GETACT^DGPFAPI(DFN,"DGPFFLGS") D
"RTN","DGRRLU1A",50,0)
 .. I $G(DGPFFLGS)=0 D NOALRT Q
"RTN","DGRRLU1A",51,0)
 .. D ADD^DGRRLU("  <businessRule alertId='patientRecordFlag'>")
"RTN","DGRRLU1A",52,0)
 .. N DGPFI
"RTN","DGRRLU1A",53,0)
 .. S DGPFI=0
"RTN","DGRRLU1A",54,0)
 .. F  S DGPFI=$O(DGPFFLGS(DGPFI)) Q:'DGPFI  D
"RTN","DGRRLU1A",55,0)
 ...N APPRVBY,ASSIGNDT,CATEGORY,FLAG,FLAGTYPE,ORIGSITE,OWNER,REVDT,LINE
"RTN","DGRRLU1A",56,0)
 ...S APPRVBY=$$CHARCHK^DGRRUTL($P($G(DGPFFLGS(DGPFI,"APPRVBY")),U,2))
"RTN","DGRRLU1A",57,0)
 ...S ASSIGNDT=$P($P($G(DGPFFLGS(DGPFI,"ASSIGNDT")),U),".")
"RTN","DGRRLU1A",58,0)
 ...S FLAG=$$CHARCHK^DGRRUTL($P($G(DGPFFLGS(DGPFI,"FLAG")),U,2))
"RTN","DGRRLU1A",59,0)
 ...S FLAGTYPE=$$CHARCHK^DGRRUTL($P($G(DGPFFLGS(DGPFI,"FLAGTYPE")),U,2))
"RTN","DGRRLU1A",60,0)
 ...S ORIGSITE=$$CHARCHK^DGRRUTL($P($G(DGPFFLGS(DGPFI,"ORIGSITE")),U,2))
"RTN","DGRRLU1A",61,0)
 ...S OWNER=$$CHARCHK^DGRRUTL($P($G(DGPFFLGS(DGPFI,"OWNER")),U,2))
"RTN","DGRRLU1A",62,0)
 ...S REVDT=$P($G(DGPFFLGS(DGPFI,"REVIEWDT")),U)
"RTN","DGRRLU1A",63,0)
 ...S LINE="  <flag flagNumber='"_DGPFI_"' flag='"_FLAG_"' category='"_FLAGTYPE_"' type='"_FLAGTYPE_"' assigndt='"_ASSIGNDT_"' apprvBy='"_APPRVBY_"' revDate='"_REVDT
"RTN","DGRRLU1A",64,0)
 ...S LINE=LINE_"' ownerSite='"_OWNER_"' origSite='"_ORIGSITE_"'>"
"RTN","DGRRLU1A",65,0)
 ...D ADD^DGRRLU(LINE)
"RTN","DGRRLU1A",66,0)
 ...D ADD^DGRRLU("  <narrations>")
"RTN","DGRRLU1A",67,0)
 ...N DGRRNI
"RTN","DGRRLU1A",68,0)
 ...S DGRRNI=0
"RTN","DGRRLU1A",69,0)
 ...F  S DGRRNI=$O(DGPFFLGS(DGPFI,"NARR",DGRRNI)) Q:'DGRRNI  D
"RTN","DGRRLU1A",70,0)
 ....N DGRRNL
"RTN","DGRRLU1A",71,0)
 ....S DGRRNL=$G(DGPFFLGS(DGPFI,"NARR",DGRRNI,0))
"RTN","DGRRLU1A",72,0)
 ....D ADD^DGRRLU("  <narration>"_$$CHARCHK^DGRRUTL(DGRRNL)_"</narration>")
"RTN","DGRRLU1A",73,0)
 ...D ADD^DGRRLU("  </narrations>")
"RTN","DGRRLU1A",74,0)
 ...D ADD^DGRRLU("  </flag>")
"RTN","DGRRLU1A",75,0)
 ..D ADD^DGRRLU("  </businessRule>")
"RTN","DGRRLU1A",76,0)
 ;
"RTN","DGRRLU1A",77,0)
14 ; -- patient merged -- not a requirement
"RTN","DGRRLU1A",78,0)
 DO ADD^DGRRLU("  <businessRule alertId='mergedPatient' recordMergedTo='"_$$CHARCHK^DGRRUTL($P($G(^DPT(DFN,0)),"^",19))_"'></businessRule>")
"RTN","DGRRLU1A",79,0)
 ;
"RTN","DGRRLU1A",80,0)
15 ; -- combat vet status -- being worked on by Edna Curtain.
"RTN","DGRRLU1A",81,0)
 N CVSTATUS,CVEND,DGCV
"RTN","DGRRLU1A",82,0)
 SET (CVSTATUS,CVEND,DGCV)=""
"RTN","DGRRLU1A",83,0)
 I $L($T(CVEDT^DGCV)) S DGCV=$$CVEDT^DGCV(+DFN)
"RTN","DGRRLU1A",84,0)
 I $P(DGCV,"^")=1 D
"RTN","DGRRLU1A",85,0)
 . SET CVSTATUS=$S($P(DGCV,"^",2)>DT:"ELIGIBLE",1:"EXPIRED")
"RTN","DGRRLU1A",86,0)
 . SET CVEND=$P(DGCV,"^",2)
"RTN","DGRRLU1A",87,0)
 DO ADD^DGRRLU("  <businessRule alertId='combatvet' status='"_$$CHARCHK^DGRRUTL($G(CVSTATUS))_"' endDate='"_$$CHARCHK^DGRRUTL($G(CVEND))_"'></businessRule>")
"RTN","DGRRLU1A",88,0)
16 ;Bad Address Indicator
"RTN","DGRRLU1A",89,0)
 N DGRRBA
"RTN","DGRRLU1A",90,0)
 S DGRRBA=$$BADADR^DGUTL3(DFN)
"RTN","DGRRLU1A",91,0)
 DO ADD^DGRRLU("  <businessRule alertId='badAddress' indicator='"_$$CHARCHK^DGRRUTL($G(DGRRBA))_"'></businessRule>")
"RTN","DGRRLU1A",92,0)
 ;
"RTN","DGRRLU1A",93,0)
END QUIT
"RTN","DGRRLU1A",94,0)
 ;
"RTN","DGRRLU1A",95,0)
NOALRT ;Returns an empty alert for Patient Record Flag
"RTN","DGRRLU1A",96,0)
 D ADD^DGRRLU("  <businessRule alertId='patientRecordFlag'>")
"RTN","DGRRLU1A",97,0)
 S LINE="  <flag flagNumber='' category='' type='' assigndt='' apprvBy='' revDate='' ownerSite='' origSite=''>"
"RTN","DGRRLU1A",98,0)
 D ADD^DGRRLU(LINE)
"RTN","DGRRLU1A",99,0)
 D ADD^DGRRLU("  <narrations></narrations>")
"RTN","DGRRLU1A",100,0)
 D ADD^DGRRLU("  </flag>")
"RTN","DGRRLU1A",101,0)
 D ADD^DGRRLU("  </businessRule>")
"RTN","DGRRLU1A",102,0)
 Q
"RTN","DGRRLU2")
0^5^B12113753
"RTN","DGRRLU2",1,0)
DGRRLU2 ;ALB/AAS - Patient Look-up log data, copied from DGSEC ;7/15/05  14:26
"RTN","DGRRLU2",2,0)
 ;;5.3;Registration;**538**;Aug 13, 1993
"RTN","DGRRLU2",3,0)
 ;
"RTN","DGRRLU2",4,0)
NOTICE(RESULT,DFN,DGOPT,ACTION) ;RPC/API entry point for log entry and message generation
"RTN","DGRRLU2",5,0)
 ;Input parameters:  
"RTN","DGRRLU2",6,0)
 ;  DFN    = Patient file DFN
"RTN","DGRRLU2",7,0)
 ;  DGOPT  = Java application name, needed for DG Security Log file and bulletin
"RTN","DGRRLU2",8,0)
 ;  ACTION = 1 - Set DG Security Log entry, 2 - Generate mail 
"RTN","DGRRLU2",9,0)
 ;           message, 3 - Both (Optional - Defaults to both)
"RTN","DGRRLU2",10,0)
 ;
"RTN","DGRRLU2",11,0)
 ;Output:  RESULT = 1 - DG Security Log updated and/or Sensitive Record msg sent (Determined by ACTION value)
"RTN","DGRRLU2",12,0)
 ;                  0 - Required variable undefined
"RTN","DGRRLU2",13,0)
 ;
"RTN","DGRRLU2",14,0)
 I $G(DFN)="" S RESULT=0 Q
"RTN","DGRRLU2",15,0)
 I $G(^DPT(+DFN,0))="" S RESULT=0 Q
"RTN","DGRRLU2",16,0)
 I $G(DUZ)="" S RESULT=0 Q
"RTN","DGRRLU2",17,0)
 S DGOPT=$G(DGOPT)
"RTN","DGRRLU2",18,0)
 I $G(ACTION)="" S ACTION=3
"RTN","DGRRLU2",19,0)
 I ACTION'=1 D BULTIN1(DFN,DUZ,.DGOPT)
"RTN","DGRRLU2",20,0)
 I ACTION'=2 D SETLOG1(DFN,DUZ,,.DGOPT)
"RTN","DGRRLU2",21,0)
 S RESULT=1 ;_"^"_$G(DGOPT)
"RTN","DGRRLU2",22,0)
 Q
"RTN","DGRRLU2",23,0)
 ;
"RTN","DGRRLU2",24,0)
SETLOG1(DFN,DGDUZ,DG1,DGOPT) ;Adds/updates entry in DG Security Log file (38.1)
"RTN","DGRRLU2",25,0)
 ;Input:
"RTN","DGRRLU2",26,0)
 ;  DFN   - Patient (#2) file DFN (Required)
"RTN","DGRRLU2",27,0)
 ;  DGDUZ - New Person (#200) file IEN
"RTN","DGRRLU2",28,0)
 ;  DG1   - Inpatient or Outpatient (Optional)
"RTN","DGRRLU2",29,0)
 ;  DGOPT - Java Application name
"RTN","DGRRLU2",30,0)
 ;
"RTN","DGRRLU2",31,0)
 N DGA1,DGDATE,DGDTE,DGT,DGTIME,XQOPT
"RTN","DGRRLU2",32,0)
 ;Lock global
"RTN","DGRRLU2",33,0)
LOCK L +^DGSL(38.1,+DFN):1 G:'$T LOCK
"RTN","DGRRLU2",34,0)
 ;Add new entry for patient if not found
"RTN","DGRRLU2",35,0)
 I '$D(^DGSL(38.1,+DFN,0)) D
"RTN","DGRRLU2",36,0)
 .S ^DGSL(38.1,+DFN,0)=+DFN
"RTN","DGRRLU2",37,0)
 .S ^DGSL(38.1,"B",+DFN,+DFN)=""
"RTN","DGRRLU2",38,0)
 .S $P(^DGSL(38.1,0),U,3)=+DFN
"RTN","DGRRLU2",39,0)
 .S $P(^DGSL(38.1,0),U,4)=$P(^DGSL(38.1,0),U,4)+1
"RTN","DGRRLU2",40,0)
 .;Determine if entry is automatically sensitive
"RTN","DGRRLU2",41,0)
 .N ELIG,FLAG,X
"RTN","DGRRLU2",42,0)
 .S FLAG=0
"RTN","DGRRLU2",43,0)
 .S X=$S($D(^DPT(+DFN,"TYPE")):+^("TYPE"),1:"")
"RTN","DGRRLU2",44,0)
 .I $D(^DG(391,+X,0)),$P(^(0),"^",4) S FLAG=1
"RTN","DGRRLU2",45,0)
 .I 'FLAG S ELIG=0 F  S ELIG=$O(^DPT(+DFN,"E",ELIG)) Q:'ELIG  D  Q:FLAG
"RTN","DGRRLU2",46,0)
 ..S X=$G(^DIC(8,ELIG,0))
"RTN","DGRRLU2",47,0)
 ..I $P(X,"^",12) S FLAG=1
"RTN","DGRRLU2",48,0)
 .S $P(^DGSL(38.1,+DFN,0),"^",2)=FLAG
"RTN","DGRRLU2",49,0)
 .;Date/time sensitivity was set
"RTN","DGRRLU2",50,0)
 .S $P(^DGSL(38.1,+DFN,0),"^",4)=$$NOW^XLFDT()
"RTN","DGRRLU2",51,0)
 ;determine if an inpatient
"RTN","DGRRLU2",52,0)
 D H^DGUTL
"RTN","DGRRLU2",53,0)
 S DGT=DGTIME
"RTN","DGRRLU2",54,0)
 I $G(DG1)="" D ^DGPMSTAT
"RTN","DGRRLU2",55,0)
 ;get option name
"RTN","DGRRLU2",56,0)
 I $G(DGOPT)="" SET DGOPT="From Java Patient Lookup"
"RTN","DGRRLU2",57,0)
 ;I $G(DGOPT)="" D OP^XQCHK S DGOPT=$S(+XQOPT<0:"^UNKNOWN",1:$P(XQOPT,U)_U_$P(XQOPT,U,2))
"RTN","DGRRLU2",58,0)
SETUSR ;
"RTN","DGRRLU2",59,0)
 S DGDTE=9999999.9999-DGTIME
"RTN","DGRRLU2",60,0)
 I $D(^DGSL(38.1,+DFN,"D",DGDTE,0)) S DGTIME=DGTIME+.00001 G SETUSR
"RTN","DGRRLU2",61,0)
 S:'$D(^DGSL(38.1,+DFN,"D",0)) ^(0)="^38.11DA^^"
"RTN","DGRRLU2",62,0)
 S ^DGSL(38.1,+DFN,"D",DGDTE,0)=DGTIME_U_DGDUZ_U_DGOPT_U_$S(DG1:"y",1:"n")
"RTN","DGRRLU2",63,0)
 S $P(^(0),U,3,4)=DGDTE_U_($P(^DGSL(38.1,+DFN,"D",0),U,4)+1)
"RTN","DGRRLU2",64,0)
 S ^DGSL(38.1,"AD",DGDTE,+DFN)=""
"RTN","DGRRLU2",65,0)
 S ^DGSL(38.1,"AU",+DFN,DGDUZ,DGDTE)=""
"RTN","DGRRLU2",66,0)
 L -^DGSL(38.1,+DFN)
"RTN","DGRRLU2",67,0)
 Q
"RTN","DGRRLU2",68,0)
 ;
"RTN","DGRRLU2",69,0)
BULTIN1(DFN,DGDUZ,DGOPT,DGMSG) ;Generate sensitive record access bulletin
"RTN","DGRRLU2",70,0)
 ;
"RTN","DGRRLU2",71,0)
 ;Input:  DFN = Patient file IEN
"RTN","DGRRLU2",72,0)
 ;        DGDUZ = New Person (#200) file IEN
"RTN","DGRRLU2",73,0)
 ;        DGOPT = OPTION from Java
"RTN","DGRRLU2",74,0)
 ;        DGMSG = Message array (Optional)
"RTN","DGRRLU2",75,0)
 ;
"RTN","DGRRLU2",76,0)
 N DGEMPLEE,XMSUB,XQOPT
"RTN","DGRRLU2",77,0)
 K DGB
"RTN","DGRRLU2",78,0)
 ;I $D(^DG(43,1,"NOT")),+$P(^("NOT"),U,10) S DGB=10
"RTN","DGRRLU2",79,0)
 ;Q:'$D(DGB)
"RTN","DGRRLU2",80,0)
 S XMSUB="RESTRICTED PATIENT RECORD ACCESSED"
"RTN","DGRRLU2",81,0)
 ;S DGB=+$P($G(^DG(43,1,"NOT")),U,DGB) Q:'DGB
"RTN","DGRRLU2",82,0)
 ;S DGB=$P($G(^XMB(3.8,DGB,0)),U) Q:'$L(DGB)
"RTN","DGRRLU2",83,0)
 S DGB=$$GET1^DIQ(43,1,509)
"RTN","DGRRLU2",84,0)
 Q:'$L(DGB)
"RTN","DGRRLU2",85,0)
 ;
"RTN","DGRRLU2",86,0)
 I $G(DGOPT)="" SET DGOPT="From Java Patient Lookup"
"RTN","DGRRLU2",87,0)
 N XMB,XMY,XMY0,XMZ
"RTN","DGRRLU2",88,0)
 S XMB="DG SENSITIVITY",XMB(1)=$P(^DPT(+DFN,0),U)
"RTN","DGRRLU2",89,0)
 S DGEMPLEE=$$EMPL^DGSEC4(+DFN)
"RTN","DGRRLU2",90,0)
 I DGEMPLEE=1 S XMB(1)=XMB(1)_"  (Employee)"
"RTN","DGRRLU2",91,0)
 S XMB(2)=$P(^DPT(+DFN,0),U,9),XMB(3)=DGOPT,XMY("G."_DGB)=""
"RTN","DGRRLU2",92,0)
 N Y S Y=$$NOW^XLFDT() X ^DD("DD") S XMB(4)=Y
"RTN","DGRRLU2",93,0)
 D SEND(.XMB,.XMY)
"RTN","DGRRLU2",94,0)
 S DGMSG(1)="NOTE: A bulletin will now be sent to your station security officer."
"RTN","DGRRLU2",95,0)
 Q
"RTN","DGRRLU2",96,0)
 ;
"RTN","DGRRLU2",97,0)
SEND(XMB,XMY) ;Queue mail bulletin
"RTN","DGRRLU2",98,0)
 ;Input: XMB,XMY=Mailman bulletin parameters
"RTN","DGRRLU2",99,0)
 ;
"RTN","DGRRLU2",100,0)
 N ZTSK,ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTSAVE,DGI,X,Y
"RTN","DGRRLU2",101,0)
 F DGI="XMB","XMB(","XMY(" S ZTSAVE(DGI)=""
"RTN","DGRRLU2",102,0)
 S ZTRTN="EN^XMB",ZTDESC="DG Security Bulletin",ZTIO="",ZTDTH=$H
"RTN","DGRRLU2",103,0)
 D ^%ZTLOAD
"RTN","DGRRLU2",104,0)
 Q
"RTN","DGRRLU2",105,0)
TEST4 ;
"RTN","DGRRLU2",106,0)
 N RESULT
"RTN","DGRRLU2",107,0)
 SET RESULT=""
"RTN","DGRRLU2",108,0)
 D NOTICE(.RESULT,40,"ALAN TEST",3)
"RTN","DGRRLU2",109,0)
 W !,"Result = ",RESULT
"RTN","DGRRLU2",110,0)
 Q
"RTN","DGRRLU3")
0^6^B63039034
"RTN","DGRRLU3",1,0)
DGRRLU3 ;alb/aas - DG Replacement and Rehosting RPC for VADPT ;8/8/05  15:38
"RTN","DGRRLU3",2,0)
 ;;5.3;Registration;**538**;Aug 13, 1993
"RTN","DGRRLU3",3,0)
 ;
"RTN","DGRRLU3",4,0)
 QUIT
"RTN","DGRRLU3",5,0)
 ; -- Get list of wards or clinics for patient lookup by ward
"RTN","DGRRLU3",6,0)
 ;
"RTN","DGRRLU3",7,0)
 ; -- Does not currently limit display by division, institution, etc.  May need to.
"RTN","DGRRLU3",8,0)
 ;
"RTN","DGRRLU3",9,0)
GETLIST(RESULT,PARAM) ;
"RTN","DGRRLU3",10,0)
 ; Input: PARAM("TYPE")="ward" returns a list of wards
"RTN","DGRRLU3",11,0)
 ;        PARAM("TYPE")="clinic" returns a list of clinics
"RTN","DGRRLU3",12,0)
 ;        PARAM("TYPE")="provider" returns a list of providers 
"RTN","DGRRLU3",13,0)
 ;        PARAM("TYPE")="specialty" returns a list of specialties
"RTN","DGRRLU3",14,0)
 ;        PARAM("VALUE")= Beginning lookup value or null to start
"RTN","DGRRLU3",15,0)
 ;                         at the beginning or end of the file.
"RTN","DGRRLU3",16,0)
 ;        PARAM("MAXNUM")= Number of records to be returned.  If a
"RTN","DGRRLU3",17,0)
 ;                          negative number, traverse backwards.
"RTN","DGRRLU3",18,0)
 ;
"RTN","DGRRLU3",19,0)
 NEW X,CNT,DGRRLINE,DGRRESLT,OKAY
"RTN","DGRRLU3",20,0)
 SET (CNT,OKAY)=0
"RTN","DGRRLU3",21,0)
 IF '$D(DT) D DT^DICRW
"RTN","DGRRLU3",22,0)
 ;
"RTN","DGRRLU3",23,0)
 SET DGRRLINE=0
"RTN","DGRRLU3",24,0)
 K ^TMP($J,"PLU-FILTER")
"RTN","DGRRLU3",25,0)
 SET DGRRESLT="^TMP($J,""PLU-FILTER"")"
"RTN","DGRRLU3",26,0)
 SET RESULT=$NA(@DGRRESLT)
"RTN","DGRRLU3",27,0)
 ;
"RTN","DGRRLU3",28,0)
 DO ADD^DGRRUTL($$XMLHDR^DGRRUTL)
"RTN","DGRRLU3",29,0)
 ;
"RTN","DGRRLU3",30,0)
 IF $$UP^XLFSTR($G(PARAM("TYPE")))="WARD" S OKAY=1 D
"RTN","DGRRLU3",31,0)
 . D ADD^DGRRUTL("<filterlist type='ward'>")
"RTN","DGRRLU3",32,0)
 . D WLIST("ward",$G(PARAM("VALUE")),$G(PARAM("MAXNUM")))
"RTN","DGRRLU3",33,0)
 . D ADD^DGRRUTL("</filterlist>")
"RTN","DGRRLU3",34,0)
 ;
"RTN","DGRRLU3",35,0)
 IF $$UP^XLFSTR($G(PARAM("TYPE")))="CLINIC" S OKAY=2 D
"RTN","DGRRLU3",36,0)
 . D ADD^DGRRUTL("<filterlist type='clinic'>")
"RTN","DGRRLU3",37,0)
 . D CLIST("clinic","C",$G(PARAM("VALUE")),$G(PARAM("MAXNUM")))
"RTN","DGRRLU3",38,0)
 . D ADD^DGRRUTL("</filterlist>")
"RTN","DGRRLU3",39,0)
 ;
"RTN","DGRRLU3",40,0)
 IF $$UP^XLFSTR($G(PARAM("TYPE")))="PROVIDER" S OKAY=3 D
"RTN","DGRRLU3",41,0)
 . D ADD^DGRRUTL("<filterlist type='provider'>")
"RTN","DGRRLU3",42,0)
 . D PLIST("provider",$G(PARAM("VALUE")),$G(PARAM("MAXNUM")))
"RTN","DGRRLU3",43,0)
 . D ADD^DGRRUTL("</filterlist>")
"RTN","DGRRLU3",44,0)
 ;
"RTN","DGRRLU3",45,0)
 IF $$UP^XLFSTR($G(PARAM("TYPE")))="SPECIALTY" S OKAY=4 D
"RTN","DGRRLU3",46,0)
 . D ADD^DGRRUTL("<filterlist type='specialty'>")
"RTN","DGRRLU3",47,0)
 . D SLIST("specialty",$G(PARAM("VALUE")),$G(PARAM("MAXNUM")))
"RTN","DGRRLU3",48,0)
 . D ADD^DGRRUTL("</filterlist>")
"RTN","DGRRLU3",49,0)
 ;
"RTN","DGRRLU3",50,0)
 IF OKAY<1 D
"RTN","DGRRLU3",51,0)
 . D ADD^DGRRUTL("<unspecified>")
"RTN","DGRRLU3",52,0)
 . D ADD^DGRRUTL("<error message='List type not supported or not specified!'>")
"RTN","DGRRLU3",53,0)
 . D ADD^DGRRUTL("</unspecified>")
"RTN","DGRRLU3",54,0)
 ;
"RTN","DGRRLU3",55,0)
 QUIT
"RTN","DGRRLU3",56,0)
 ;
"RTN","DGRRLU3",57,0)
 ; -- get list of clinics for patient lookup by clinic
"RTN","DGRRLU3",58,0)
CLIST(ITEM,CHKVAL,VALUE,MAXNUM) ;
"RTN","DGRRLU3",59,0)
 NEW NAME,IEN,IDATE,RDATE,DIR,CNT2,DGRRB,FLAG
"RTN","DGRRLU3",60,0)
 S VALUE=$$UP^XLFSTR($G(VALUE))
"RTN","DGRRLU3",61,0)
 S NAME=$G(VALUE)
"RTN","DGRRLU3",62,0)
 S MAXNUM=$G(MAXNUM)
"RTN","DGRRLU3",63,0)
 S DGRRB=0
"RTN","DGRRLU3",64,0)
 K ^TMP("DGRRLU3-CLIST",$J)
"RTN","DGRRLU3",65,0)
 I $E(MAXNUM)="-" D
"RTN","DGRRLU3",66,0)
 . S DGRRB=1  ; ****
"RTN","DGRRLU3",67,0)
 .I MAXNUM="-" S MAXNUM="" Q  ; ****
"RTN","DGRRLU3",68,0)
 .S MAXNUM=$$ABS^XLFMTH(MAXNUM)
"RTN","DGRRLU3",69,0)
 S (FLAG,CNT)=0
"RTN","DGRRLU3",70,0)
 I $L(NAME)>0,DGRRB=0,$D(^SC("B",NAME)) S NAME=$O(^SC("B",NAME),-1) ; ****
"RTN","DGRRLU3",71,0)
 I $L(NAME)>0,DGRRB=1,$D(^SC("B",NAME)) S NAME=$O(^SC("B",NAME)) ; ****
"RTN","DGRRLU3",72,0)
 I 'DGRRB D
"RTN","DGRRLU3",73,0)
 . S DIR=1
"RTN","DGRRLU3",74,0)
 .FOR  S NAME=$O(^SC("B",NAME)) Q:NAME=""  DO  Q:FLAG=1
"RTN","DGRRLU3",75,0)
 .. S IEN=0
"RTN","DGRRLU3",76,0)
 .. FOR  S IEN=$O(^SC("B",NAME,IEN)) Q:IEN<1  DO  Q:FLAG=1
"RTN","DGRRLU3",77,0)
 ...N STATUS
"RTN","DGRRLU3",78,0)
 ...S STATUS=$$STATUS(IEN,CHKVAL)
"RTN","DGRRLU3",79,0)
 ...I STATUS=1 D
"RTN","DGRRLU3",80,0)
 ....S CNT=CNT+1  I MAXNUM,CNT>MAXNUM S FLAG=1 Q   ; ****
"RTN","DGRRLU3",81,0)
 .... ;DO ADD^DGRRUTL("<lineitem number='"_CNT_"' id='"_IEN_"' name='"_$$CHARCHK^DGRRUTL(NAME)_"'></lineitem>")
"RTN","DGRRLU3",82,0)
 .... S ^TMP("DGRRLU3-CLIST",$J,CNT)=IEN_U_NAME
"RTN","DGRRLU3",83,0)
 I DGRRB D
"RTN","DGRRLU3",84,0)
 . S DIR=-1
"RTN","DGRRLU3",85,0)
 .FOR  S NAME=$O(^SC("B",NAME),-1) Q:NAME=""  DO  Q:FLAG=1
"RTN","DGRRLU3",86,0)
 .. S IEN=0
"RTN","DGRRLU3",87,0)
 .. FOR  S IEN=$O(^SC("B",NAME,IEN)) Q:IEN<1  DO  Q:FLAG=1
"RTN","DGRRLU3",88,0)
 ...N STATUS
"RTN","DGRRLU3",89,0)
 ...S STATUS=$$STATUS(IEN,CHKVAL)
"RTN","DGRRLU3",90,0)
 ...I STATUS=1 D
"RTN","DGRRLU3",91,0)
 ....S CNT=CNT+1  I MAXNUM,CNT>MAXNUM S FLAG=1 Q   ; ****
"RTN","DGRRLU3",92,0)
 .... ; DO ADD^DGRRUTL("<lineitem number='"_CNT_"' id='"_IEN_"' name='"_$$CHARCHK^DGRRUTL(NAME)_"'></lineitem>")
"RTN","DGRRLU3",93,0)
 .... S ^TMP("DGRRLU3-CLIST",$J,CNT)=IEN_U_NAME
"RTN","DGRRLU3",94,0)
 S CNT2="",CNT=0
"RTN","DGRRLU3",95,0)
 F  S CNT2=$O(^TMP("DGRRLU3-CLIST",$J,CNT2),DIR) Q:CNT2=""  D
"RTN","DGRRLU3",96,0)
 . S IEN=+^TMP("DGRRLU3-CLIST",$J,CNT2)
"RTN","DGRRLU3",97,0)
 . S NAME=$P(^TMP("DGRRLU3-CLIST",$J,CNT2),U,2)
"RTN","DGRRLU3",98,0)
 . S CNT=CNT+1
"RTN","DGRRLU3",99,0)
 . DO ADD^DGRRUTL("<lineitem number='"_CNT_"' id='"_IEN_"' name='"_$$CHARCHK^DGRRUTL(NAME)_"'></lineitem>")
"RTN","DGRRLU3",100,0)
 QUIT
"RTN","DGRRLU3",101,0)
STATUS(IEN,CHKVAL) ;
"RTN","DGRRLU3",102,0)
 N IDATE,RDATE,STATUS
"RTN","DGRRLU3",103,0)
 S STATUS=0
"RTN","DGRRLU3",104,0)
 IF $P($G(^SC(IEN,0)),"^",3)=CHKVAL DO  ;is a clinic
"RTN","DGRRLU3",105,0)
 .S IDATE=$P($G(^SC(IEN,"I")),"^",1) ;inactivate date
"RTN","DGRRLU3",106,0)
 .S RDATE=$P($G(^SC(IEN,"I")),"^",2) ;reactivate date
"RTN","DGRRLU3",107,0)
 .IF (IDATE="")!(IDATE'<DT)!((IDATE<DT)&(RDATE>IDATE)) S STATUS=1
"RTN","DGRRLU3",108,0)
 Q STATUS
"RTN","DGRRLU3",109,0)
 ;
"RTN","DGRRLU3",110,0)
WLIST(ITEM,VALUE,MAXNUM) ;
"RTN","DGRRLU3",111,0)
 ;  Input:  VALUE - Beginning value or null to start at the beginning
"RTN","DGRRLU3",112,0)
 ;                  or end of the file.
"RTN","DGRRLU3",113,0)
 ;         MAXNUM - Number of entries to be returned.  Defaults to
"RTN","DGRRLU3",114,0)
 ;                  traversing forward but if MAXNUM is a negative
"RTN","DGRRLU3",115,0)
 ;                  number, traverses through the file backwards.
"RTN","DGRRLU3",116,0)
 N FLAG,ERROR,CNT,DGRRB,BACKMTCH,CNT2
"RTN","DGRRLU3",117,0)
 S CNT=0
"RTN","DGRRLU3",118,0)
 ;I VALUE is null and MAXNUM is set to "-" or null, all wards returned
"RTN","DGRRLU3",119,0)
 S VALUE=$$UP^XLFSTR($G(VALUE))
"RTN","DGRRLU3",120,0)
 S MAXNUM=$G(MAXNUM)
"RTN","DGRRLU3",121,0)
 S FLAG=""
"RTN","DGRRLU3",122,0)
 I $E(MAXNUM)="-" D
"RTN","DGRRLU3",123,0)
 .;Set direction for traversing file to backwards and remove - from
"RTN","DGRRLU3",124,0)
 .;maximum number of records returned.
"RTN","DGRRLU3",125,0)
 .S FLAG="B"
"RTN","DGRRLU3",126,0)
 .I MAXNUM="-" S MAXNUM="" Q
"RTN","DGRRLU3",127,0)
 .S MAXNUM=$$ABS^XLFMTH(MAXNUM)
"RTN","DGRRLU3",128,0)
 ;Look for exact match
"RTN","DGRRLU3",129,0)
 K ^TMP("DILIST",$J)
"RTN","DGRRLU3",130,0)
 I ($G(VALUE)'="") D EXMTCH
"RTN","DGRRLU3",131,0)
 ;Call File Manager for remaining matches
"RTN","DGRRLU3",132,0)
 ; K ^TMP("DILIST",$J)
"RTN","DGRRLU3",133,0)
 I MAXNUM'=0 D LIST^DIC(42,,.01,$G(FLAG),MAXNUM,VALUE,,"B",,,,"ERROR")
"RTN","DGRRLU3",134,0)
 Q:$D(ERROR)
"RTN","DGRRLU3",135,0)
 N DGRRI
"RTN","DGRRLU3",136,0)
 S DGRRI=""
"RTN","DGRRLU3",137,0)
 I $G(BACKMTCH) D
"RTN","DGRRLU3",138,0)
 . S ^TMP("DILIST",$J,2,"ZZ")=+BACKMTCH
"RTN","DGRRLU3",139,0)
 . S ^TMP("DILIST",$J,1,"ZZ")=$P(BACKMTCH,U,2)
"RTN","DGRRLU3",140,0)
 S DGRRB=1 ; I FLAG="B" S DGRRB=-1
"RTN","DGRRLU3",141,0)
 F  S DGRRI=$O(^TMP("DILIST",$J,1,DGRRI),DGRRB) Q:DGRRI=""  D
"RTN","DGRRLU3",142,0)
 .N IEN,NAME
"RTN","DGRRLU3",143,0)
 .S CNT=CNT+1
"RTN","DGRRLU3",144,0)
 .S NAME=$G(^TMP("DILIST",$J,1,DGRRI))
"RTN","DGRRLU3",145,0)
 .S IEN=$G(^TMP("DILIST",$J,2,DGRRI))
"RTN","DGRRLU3",146,0)
 .DO ADD^DGRRUTL("<lineitem number='"_CNT_"' id='"_IEN_"' name='"_$$CHARCHK^DGRRUTL(NAME)_"'></lineitem>")
"RTN","DGRRLU3",147,0)
 ; I FLAG="B",($G(VALUE)'="") D EXMTCH
"RTN","DGRRLU3",148,0)
 Q
"RTN","DGRRLU3",149,0)
EXMTCH ;Look for exact match
"RTN","DGRRLU3",150,0)
 I $D(^DIC(42,"B",VALUE)) D
"RTN","DGRRLU3",151,0)
 .N IEN
"RTN","DGRRLU3",152,0)
 .S IEN=0
"RTN","DGRRLU3",153,0)
 .F  S IEN=$O(^DIC(42,"B",VALUE,IEN)) Q:IEN=""  D
"RTN","DGRRLU3",154,0)
 ..N NAME
"RTN","DGRRLU3",155,0)
 ..S NAME=$P($G(^DIC(42,+IEN,0)),U)
"RTN","DGRRLU3",156,0)
 .. ; S CNT=CNT+1
"RTN","DGRRLU3",157,0)
 .. I MAXNUM'="" S MAXNUM=MAXNUM-1
"RTN","DGRRLU3",158,0)
 .. I FLAG'="B" S CNT=CNT+1 DO ADD^DGRRUTL("<lineitem number='"_CNT_"' id='"_IEN_"' name='"_$$CHARCHK^DGRRUTL(NAME)_"'></lineitem>")
"RTN","DGRRLU3",159,0)
 .. I FLAG="B" S BACKMTCH=IEN_U_NAME
"RTN","DGRRLU3",160,0)
 Q
"RTN","DGRRLU3",161,0)
 ; -- get list of providers for patient lookup by provider
"RTN","DGRRLU3",162,0)
 ;    from ORQPTQ2
"RTN","DGRRLU3",163,0)
PLIST(ITEM,VALUE,MAXNUM) ;
"RTN","DGRRLU3",164,0)
 NEW NAME,IEN,DGRRB,FLAG,CNT2,DGRRSCR,DGRRFMT
"RTN","DGRRLU3",165,0)
 S VALUE=$$UP^XLFSTR($G(VALUE))
"RTN","DGRRLU3",166,0)
 S NAME=$G(VALUE)
"RTN","DGRRLU3",167,0)
 S MAXNUM=$G(MAXNUM)
"RTN","DGRRLU3",168,0)
 S DGRRB=1
"RTN","DGRRLU3",169,0)
 ;K ^TMP("DGRRLU3-PLIST",$J)
"RTN","DGRRLU3",170,0)
 K ^TMP("DILIST",$J)
"RTN","DGRRLU3",171,0)
 I $E(MAXNUM)="-" D
"RTN","DGRRLU3",172,0)
 . S DGRRB=-1  ; *****
"RTN","DGRRLU3",173,0)
 . I MAXNUM="-" S MAXNUM="" Q  ; *****
"RTN","DGRRLU3",174,0)
 .S MAXNUM=$$ABS^XLFMTH(MAXNUM)
"RTN","DGRRLU3",175,0)
 S (FLAG,CNT)=0
"RTN","DGRRLU3",176,0)
 ;I $L(NAME)>0,DGRRB=1,$D(^VA(200,"B",NAME)) S NAME=$O(^VA(200,"B",NAME),-1)
"RTN","DGRRLU3",177,0)
 ;I $L(NAME)>0,DGRRB=-1,$D(^VA(200,"B",NAME)) S NAME=$O(^VA(200,"B",NAME))
"RTN","DGRRLU3",178,0)
 ;FOR  S NAME=$O(^VA(200,"B",NAME),DGRRB) Q:NAME=""  DO  Q:FLAG=1
"RTN","DGRRLU3",179,0)
 ;. S IEN=0
"RTN","DGRRLU3",180,0)
 ;. FOR  S IEN=$O(^VA(200,"B",NAME,IEN)) Q:IEN<1  DO  Q:FLAG=1
"RTN","DGRRLU3",181,0)
 ;.. I $D(^XUSEC("PROVIDER",IEN)),$$ACTIVE^XUSER(IEN) DO
"RTN","DGRRLU3",182,0)
 ;... SET CNT=CNT+1
"RTN","DGRRLU3",183,0)
 ;... S ^TMP("DGRRLU3-PLIST",$J,CNT)=IEN_U_NAME
"RTN","DGRRLU3",184,0)
 ;... I MAXNUM,CNT>(MAXNUM-1) S FLAG=1
"RTN","DGRRLU3",185,0)
 ;S CNT2="",CNT=0
"RTN","DGRRLU3",186,0)
 ;F  S CNT2=$O(^TMP("DGRRLU3-PLIST",$J,CNT2),DGRRB) Q:CNT2=""  D
"RTN","DGRRLU3",187,0)
 ;. S IEN=+^TMP("DGRRLU3-PLIST",$J,CNT2)
"RTN","DGRRLU3",188,0)
 ;. S NAME=$P(^TMP("DGRRLU3-PLIST",$J,CNT2),U,2)
"RTN","DGRRLU3",189,0)
 ;. S CNT=CNT+1
"RTN","DGRRLU3",190,0)
 ;. DO ADD^DGRRUTL("<lineitem number='"_CNT_"' id='"_IEN_"' name='"_$$CHARCHK^DGRRUTL(NAME)_"'></lineitem>")
"RTN","DGRRLU3",191,0)
 I $L(NAME)>0,DGRRB=1,$D(^VA(200,"AK.PROVIDER",NAME)) S NAME=$O(^VA(200,"AK.PROVIDER",NAME),-1)
"RTN","DGRRLU3",192,0)
 I $L(NAME)>0,DGRRB=-1,$D(^VA(200,"AK.PROVIDER",NAME)) S NAME=$O(^VA(200,"AK.PROVIDER",NAME))
"RTN","DGRRLU3",193,0)
 S DGRRSCR="I $$ACTIVE^XUSER(+Y)"
"RTN","DGRRLU3",194,0)
 S DGRRFMT="P"_$S(DGRRB=-1:"B",1:"")
"RTN","DGRRLU3",195,0)
 D LIST^DIC(200,,"@;.01",DGRRFMT,MAXNUM,NAME,,"AK.PROVIDER",DGRRSCR)
"RTN","DGRRLU3",196,0)
 S (CNT2,CNT)=0
"RTN","DGRRLU3",197,0)
 F  S CNT2=$O(^TMP("DILIST",$J,CNT2)) Q:CNT2=""  D
"RTN","DGRRLU3",198,0)
 . S IEN=+$G(^TMP("DILIST",$J,CNT2,0))
"RTN","DGRRLU3",199,0)
 . S NAME=$P($G(^TMP("DILIST",$J,CNT2,0)),U,2)
"RTN","DGRRLU3",200,0)
 . S CNT=CNT+1
"RTN","DGRRLU3",201,0)
 . DO ADD^DGRRUTL("<lineitem number='"_CNT_"' id='"_IEN_"' name='"_$$CHARCHK^DGRRUTL(NAME)_"'></lineitem>")
"RTN","DGRRLU3",202,0)
 K ^TMP("DILIST",$J)
"RTN","DGRRLU3",203,0)
 D CLEAN^DILF
"RTN","DGRRLU3",204,0)
 QUIT
"RTN","DGRRLU3",205,0)
 ;
"RTN","DGRRLU3",206,0)
SLIST(ITEM,VALUE,MAXNUM) ;Returns active specialties in Facility TreatingSpecialty (#45.7) file
"RTN","DGRRLU3",207,0)
 ;
"RTN","DGRRLU3",208,0)
 N NAME,IEN,CNT,FLAG,DGRRB,DGRRD,CNT2
"RTN","DGRRLU3",209,0)
 S NAME=$$UP^XLFSTR($G(VALUE))
"RTN","DGRRLU3",210,0)
 ; S NAME=$G(VALUE)
"RTN","DGRRLU3",211,0)
 S (FLAG,IEN,CNT)=0
"RTN","DGRRLU3",212,0)
 S MAXNUM=$G(MAXNUM)
"RTN","DGRRLU3",213,0)
 S DGRRB=1
"RTN","DGRRLU3",214,0)
 K ^TMP("DGRRLU3-SLIST",$J)
"RTN","DGRRLU3",215,0)
 I $E(MAXNUM)="-" D
"RTN","DGRRLU3",216,0)
 .S DGRRB=-1
"RTN","DGRRLU3",217,0)
 .S MAXNUM=$$ABS^XLFMTH(MAXNUM)
"RTN","DGRRLU3",218,0)
 ;Capture exact matches
"RTN","DGRRLU3",219,0)
 I $L(NAME),$D(^DIC(45.7,"B",NAME)) D
"RTN","DGRRLU3",220,0)
 .N DGRRD
"RTN","DGRRLU3",221,0)
 .S DGRRD=$S(DGRRB=1:-1,1:1)
"RTN","DGRRLU3",222,0)
 .S NAME=$O(^DIC(45.7,"B",NAME),DGRRD)
"RTN","DGRRLU3",223,0)
 F  S NAME=$O(^DIC(45.7,"B",NAME),DGRRB) Q:NAME=""  D  Q:FLAG=1
"RTN","DGRRLU3",224,0)
 .F  S IEN=$O(^DIC(45.7,"B",NAME,IEN)) Q:IEN'>0  D  Q:FLAG=1
"RTN","DGRRLU3",225,0)
 ..I $$ACTIVE^DGACT(45.7,IEN) D
"RTN","DGRRLU3",226,0)
 ...S CNT=CNT+1
"RTN","DGRRLU3",227,0)
 ...I MAXNUM,(CNT>MAXNUM) S FLAG=1 Q
"RTN","DGRRLU3",228,0)
 ...; DO ADD^DGRRUTL("<lineitem number='"_CNT_"' id='"_IEN_"' name='"_$$CHARCHK^DGRRUTL(NAME)_"'></lineitem>")
"RTN","DGRRLU3",229,0)
 ...S ^TMP("DGRRLU3-SLIST",$J,CNT)=IEN_U_NAME
"RTN","DGRRLU3",230,0)
 S CNT=1,CNT2=""
"RTN","DGRRLU3",231,0)
 S DGRRD=$S(DGRRB=1:1,1:-1)
"RTN","DGRRLU3",232,0)
 F  S CNT2=$O(^TMP("DGRRLU3-SLIST",$J,CNT2),DGRRD) Q:CNT2=""  D
"RTN","DGRRLU3",233,0)
 . S IEN=+^TMP("DGRRLU3-SLIST",$J,CNT2)
"RTN","DGRRLU3",234,0)
 . S NAME=$P(^TMP("DGRRLU3-SLIST",$J,CNT2),U,2)
"RTN","DGRRLU3",235,0)
 . DO ADD^DGRRUTL("<lineitem number='"_CNT_"' id='"_IEN_"' name='"_$$CHARCHK^DGRRUTL(NAME)_"'></lineitem>")
"RTN","DGRRLU3",236,0)
 . S CNT=CNT+1
"RTN","DGRRLU3",237,0)
 Q
"RTN","DGRRLU3",238,0)
 ;
"RTN","DGRRLU3",239,0)
DISPLAY(RESULT) ;
"RTN","DGRRLU3",240,0)
 NEW I
"RTN","DGRRLU3",241,0)
 S I=-1 FOR  SET I=$O(@RESULT@(I)) Q:I<1  W !!,@RESULT@(I)
"RTN","DGRRLU3",242,0)
 QUIT
"RTN","DGRRLU4")
0^7^B18531017
"RTN","DGRRLU4",1,0)
DGRRLU4 ;BPFO/MM RPCs for Division preferences - ;11/15/04  11:38
"RTN","DGRRLU4",2,0)
 ;;5.3;Registration;**538**;Aug 13, 1993
"RTN","DGRRLU4",3,0)
 ;
"RTN","DGRRLU4",4,0)
START(RESULT,PARAMS) ;Generates division/package preferences in xml format
"RTN","DGRRLU4",5,0)
 ;
"RTN","DGRRLU4",6,0)
 ;Called from DGRR PATIENT LKUP PREFERENCES remote procedure call
"RTN","DGRRLU4",7,0)
 ;
"RTN","DGRRLU4",8,0)
 ;Input:  PARAMS("stationNumber")= station number for institution
"RTN","DGRRLU4",9,0)
 ;              If not defined, defaults to package parameter values.
"RTN","DGRRLU4",10,0)
 ;
"RTN","DGRRLU4",11,0)
 ;Output: RESULT contains the preferences for the division.  If not
"RTN","DGRRLU4",12,0)
 ;        specified contains the default package parameters.
"RTN","DGRRLU4",13,0)
 ; 
"RTN","DGRRLU4",14,0)
 N LINE,DGRRI,DGRRVAL,DGRRATT,DGRRDIV,DGRRDIVN,DGRRLINE,DGRRESLT
"RTN","DGRRLU4",15,0)
 S DGRRDIVN=$G(PARAMS("stationNumber"))
"RTN","DGRRLU4",16,0)
 S DGRRDIV=$$IEN^XUAF4(DGRRDIVN)
"RTN","DGRRLU4",17,0)
 S DGRRLINE=0
"RTN","DGRRLU4",18,0)
 K ^TMP($J,"PLU-DIVPREF")
"RTN","DGRRLU4",19,0)
 S DGRRESLT="^TMP($J,""PLU-DIVPREF"")"
"RTN","DGRRLU4",20,0)
 S RESULT=$NA(@DGRRESLT)
"RTN","DGRRLU4",21,0)
 D ADD^DGRRUTL($$XMLHDR^DGRRUTL())
"RTN","DGRRLU4",22,0)
 D ADD^DGRRUTL("<preferences>")
"RTN","DGRRLU4",23,0)
 D ADD^DGRRUTL("<error/>")
"RTN","DGRRLU4",24,0)
 D ADD^DGRRUTL("<institutionPreferences>")
"RTN","DGRRLU4",25,0)
 D ADD^DGRRUTL("<stationNumber>"_$$CHARCHK^DGRRUTL($G(DGRRDIVN))_"</stationNumber>")
"RTN","DGRRLU4",26,0)
 ;
"RTN","DGRRLU4",27,0)
 ; Gather preference values and build xml file
"RTN","DGRRLU4",28,0)
 F DGRRI=1:1 S LINE=$P($T(PREF+DGRRI),";;",2) Q:LINE="QUIT"  D
"RTN","DGRRLU4",29,0)
 .;Return preferences in precedence order set in Parameter Definition.
"RTN","DGRRLU4",30,0)
 .;Will return division values if found.  If not defined, returns
"RTN","DGRRLU4",31,0)
 .;package default values
"RTN","DGRRLU4",32,0)
 .S DGRRVAL=$$GET^XPAR("ALL^DIV.`"_DGRRDIV,$P(LINE,U),1,"E")
"RTN","DGRRLU4",33,0)
 .S DGRRATT=$P(LINE,U,2)
"RTN","DGRRLU4",34,0)
 .D ADD^DGRRUTL("<"_DGRRATT_">"_$$CHARCHK^DGRRUTL(DGRRVAL)_"</"_DGRRATT_">")
"RTN","DGRRLU4",35,0)
 D ADD^DGRRUTL("</institutionPreferences>")
"RTN","DGRRLU4",36,0)
 D ADD^DGRRUTL("</preferences>")
"RTN","DGRRLU4",37,0)
 Q
"RTN","DGRRLU4",38,0)
 ;
"RTN","DGRRLU4",39,0)
UPDATE(RESULT,PARAMS) ;Entry point to add or change preference values
"RTN","DGRRLU4",40,0)
 ;
"RTN","DGRRLU4",41,0)
 ;Input: PARAMS("stationNumber")=Station # for the institution (Required)
"RTN","DGRRLU4",42,0)
 ;       PARAMS("divPreference",Preference Name)=Value (Required)
"RTN","DGRRLU4",43,0)
 ;
"RTN","DGRRLU4",44,0)
 ;Output:  Results in xml format 
"RTN","DGRRLU4",45,0)
 ;
"RTN","DGRRLU4",46,0)
 N DGRRARY,DGRRDIV,DGRRDIVN,DGRRERR,DGRRI,DGRRESLT,DGRRPREF,DGRRUPD,LINE
"RTN","DGRRLU4",47,0)
 S DGRRDIVN=$G(PARAMS("stationNumber"))
"RTN","DGRRLU4",48,0)
 S DGRRDIV=+$$IEN^XUAF4(DGRRDIVN)
"RTN","DGRRLU4",49,0)
 K ^TMP($J,"PLU-DIVPREF-UPD")
"RTN","DGRRLU4",50,0)
 S RESULT=$NA(^TMP($J,"PLU-DIVPREF-UPD"))
"RTN","DGRRLU4",51,0)
 ; Log error for xml document and quit if invalid station number passed to call.
"RTN","DGRRLU4",52,0)
 I 'DGRRDIV D  Q
"RTN","DGRRLU4",53,0)
 .S DGRRERR="Invalid stationNumber"
"RTN","DGRRLU4",54,0)
 .S DGRRUPD="false"
"RTN","DGRRLU4",55,0)
 .D XML(DGRRERR,DGRRUPD,RESULT)
"RTN","DGRRLU4",56,0)
 ; Build array of preferences from parameter preference names.
"RTN","DGRRLU4",57,0)
 F DGRRI=1:1 S LINE=$P($T(PREF+DGRRI),";;",2) Q:LINE="QUIT"  D
"RTN","DGRRLU4",58,0)
 .S DGRRARY($P(LINE,U,2))=$P(LINE,U)
"RTN","DGRRLU4",59,0)
 S DGRRPREF=""
"RTN","DGRRLU4",60,0)
 F DGRRI=1:1 S DGRRPREF=$O(DGRRARY(DGRRPREF)) Q:DGRRPREF=""  D  Q:DGRRUPD="false"
"RTN","DGRRLU4",61,0)
 .N DGRRPR,DGRRVAL,ERR
"RTN","DGRRLU4",62,0)
 .S (DGRRERR,DGRRUPD)=""
"RTN","DGRRLU4",63,0)
 .S DGRRPR=$G(DGRRARY(DGRRPREF))
"RTN","DGRRLU4",64,0)
 .S DGRRVAL=$G(PARAMS(DGRRPREF))
"RTN","DGRRLU4",65,0)
 .;Value and Preference must be defined
"RTN","DGRRLU4",66,0)
 .I DGRRPR=""!(DGRRVAL="") D  Q
"RTN","DGRRLU4",67,0)
 ..S DGRRUPD="false"
"RTN","DGRRLU4",68,0)
 ..S DGRRERR="Invalid Preference "_$S(DGRRPR="":"Name",1:"Value")
"RTN","DGRRLU4",69,0)
 .D EN^XPAR("DIV.`"_DGRRDIV,DGRRPR,1,DGRRVAL,.ERR)
"RTN","DGRRLU4",70,0)
 .; If no errors, ERR=0.  Errors are returned in the format:
"RTN","DGRRLU4",71,0)
 .; internal entry number in Dialog file^error text describing error
"RTN","DGRRLU4",72,0)
 .I ERR'=0 D  Q
"RTN","DGRRLU4",73,0)
 ..S DGRRUPD="false"
"RTN","DGRRLU4",74,0)
 ..S DGRRERR=$P(ERR,U,2)
"RTN","DGRRLU4",75,0)
 .S DGRRUPD="true"
"RTN","DGRRLU4",76,0)
 D XML(DGRRERR,DGRRUPD,RESULT)
"RTN","DGRRLU4",77,0)
 Q
"RTN","DGRRLU4",78,0)
XML(DGRRERR,DGRRUPD,DGRRESLT) ;Builds xml document
"RTN","DGRRLU4",79,0)
 N DGRRLINE
"RTN","DGRRLU4",80,0)
 S DGRRERR=$G(DGRRERR)
"RTN","DGRRLU4",81,0)
 S DGRRUPD=$G(DGRRUPD)
"RTN","DGRRLU4",82,0)
 S DGRRLINE=0
"RTN","DGRRLU4",83,0)
 K @DGRRESLT
"RTN","DGRRLU4",84,0)
 D ADD^DGRRUTL($$XMLHDR^DGRRUTL())
"RTN","DGRRLU4",85,0)
 D ADD^DGRRUTL("<preferences>")
"RTN","DGRRLU4",86,0)
 D ADD^DGRRUTL("<error>"_$$CHARCHK^DGRRUTL(DGRRERR)_"</error>")
"RTN","DGRRLU4",87,0)
 D ADD^DGRRUTL("<institutionPreferences>")
"RTN","DGRRLU4",88,0)
 D ADD^DGRRUTL("<stationNumber>"_$$CHARCHK^DGRRUTL($G(DGRRDIVN))_"</stationNumber>")
"RTN","DGRRLU4",89,0)
 D ADD^DGRRUTL("<preferencesUpdated>"_$$CHARCHK^DGRRUTL(DGRRUPD)_"</preferencesUpdated>")
"RTN","DGRRLU4",90,0)
 D ADD^DGRRUTL("</institutionPreferences>")
"RTN","DGRRLU4",91,0)
 D ADD^DGRRUTL("</preferences>")
"RTN","DGRRLU4",92,0)
 Q
"RTN","DGRRLU4",93,0)
 ;
"RTN","DGRRLU4",94,0)
PREF ;Parameter definition^divPref received from/returned to calling app
"RTN","DGRRLU4",95,0)
 ;;DGRR PL MAX NUM PATIENTS RET^maxNumPatients
"RTN","DGRRLU4",96,0)
 ;;DGRR PL NUM PATIENTS PER PAGE^patientsPerPage
"RTN","DGRRLU4",97,0)
 ;;DGRR PL PATIENT TYPE^patientType
"RTN","DGRRLU4",98,0)
 ;;DGRR PL GENDER^gender
"RTN","DGRRLU4",99,0)
 ;;DGRR PL PRIMARY ELIGIBILITY^primaryEligibility
"RTN","DGRRLU4",100,0)
 ;;DGRR PL ROOM BED^roomBed
"RTN","DGRRLU4",101,0)
 ;;DGRR PL SERVICE CONNECTED^serviceConnected
"RTN","DGRRLU4",102,0)
 ;;DGRR PL VETERAN STATUS^veteranStatus
"RTN","DGRRLU4",103,0)
 ;;DGRR PL WARD^ward
"RTN","DGRRLU4",104,0)
 ;;DGRR PL VETERAN IMAGE^veteranImage
"RTN","DGRRLU4",105,0)
 ;;QUIT
"RTN","DGRRLU4",106,0)
 Q
"RTN","DGRRLU5")
0^8^B34859755
"RTN","DGRRLU5",1,0)
DGRRLU5 ; ALB/sgg/MM - DG Replacement and Rehosting RPC for VADPT ; May-4-2004  ;
"RTN","DGRRLU5",2,0)
 ;;5.3;Registration;**538**;Aug 13, 1993
"RTN","DGRRLU5",3,0)
 ; provider lookup
"RTN","DGRRLU5",4,0)
 ; called by DGRRLU at line PRVLUP^DGRRLU5 if PARAMS("SEARCH_TYPE") = "PRVLUP"
"RTN","DGRRLU5",5,0)
 ;
"RTN","DGRRLU5",6,0)
 ;
"RTN","DGRRLU5",7,0)
DOC ;INPUT:  Input is by the following parameters in the PARAMS() array:
"RTN","DGRRLU5",8,0)
 ;
"RTN","DGRRLU5",9,0)
 ;"PRV_VPID" - VPID [Required VPID unless PRV_LNAM is not Null.]
"RTN","DGRRLU5",10,0)
 ;             If not null the query will only return the one person 
"RTN","DGRRLU5",11,0)
 ;             with this VPID, and only then if SSN, PROV and STN filters
"RTN","DGRRLU5",12,0)
 ;             do not exclude this person.
"RTN","DGRRLU5",13,0)
 ;"PRV_LNAM" - LAST NAME [Required Char String unless VPID is not Null.]
"RTN","DGRRLU5",14,0)
 ;             If not null the query will only return persons whose 
"RTN","DGRRLU5",15,0)
 ;             last name starts with this string.
"RTN","DGRRLU5",16,0)
 ;"PRV_FNAM" - FIRST NAME [Optional: Character String or Null.]
"RTN","DGRRLU5",17,0)
 ;             If not null the query will only return persons whose 
"RTN","DGRRLU5",18,0)
 ;             first name starts with this string.
"RTN","DGRRLU5",19,0)
 ;"PRV_SSN"  - SSN FILTER [Optional: 9 digits or Null.]
"RTN","DGRRLU5",20,0)
 ;             If not null the query will only return persons with 
"RTN","DGRRLU5",21,0)
 ;             this social security number.
"RTN","DGRRLU5",22,0)
 ;"PRV_PROV" - PROVIDER FILTER [Optional: "P" or Null.]
"RTN","DGRRLU5",23,0)
 ;             If set to "P" the query includes only providers, i.e. 
"RTN","DGRRLU5",24,0)
 ;             persons with a person class active on the PRV_DATE.
"RTN","DGRRLU5",25,0)
 ;"PRV_STN"  - STATION NUMBER FILTER [Optional: an STN or Null.]
"RTN","DGRRLU5",26,0)
 ;             If not null the query only returns persons with this 
"RTN","DGRRLU5",27,0)
 ;             station number.
"RTN","DGRRLU5",28,0)
 ;"PRV_MNM"  - MAXIMUM NUMBER [Optional: min=1 max=50 default=50.]
"RTN","DGRRLU5",29,0)
 ;             The maximum number of persons the query will return.  
"RTN","DGRRLU5",30,0)
 ;             If VPID is not null this is always 1.
"RTN","DGRRLU5",31,0)
 ;"PRV_DATE" - DATE [Optional: if Null this defaults to Today.]
"RTN","DGRRLU5",32,0)
 ;             The Date against which a persons active person class is
"RTN","DGRRLU5",33,0)
 ;             determined.
"RTN","DGRRLU5",34,0)
 ;
"RTN","DGRRLU5",35,0)
 ;OUTPUT:  Output an XML with a schema as given:
"RTN","DGRRLU5",36,0)
 ;
"RTN","DGRRLU5",37,0)
 ; <?xml version="1.0" encoding="utf-8" ?>
"RTN","DGRRLU5",38,0)
 ;      <persons>                                   Example Data
"RTN","DGRRLU5",39,0)
 ;           <person>
"RTN","DGRRLU5",40,0)
 ;           </vpid>                                999999999
"RTN","DGRRLU5",41,0)
 ;           </ien>                                 11579
"RTN","DGRRLU5",42,0)
 ;           </lname>                               KRUSHER
"RTN","DGRRLU5",43,0)
 ;           </fname>                               WILL
"RTN","DGRRLU5",44,0)
 ;           </mname>                               MIDDIE
"RTN","DGRRLU5",45,0)
 ;           </ssn>                                 232323232
"RTN","DGRRLU5",46,0)
 ;           </dob>                                 2330303
"RTN","DGRRLU5",47,0)
 ;           </sex>                                 M
"RTN","DGRRLU5",48,0)
 ;                <providerInfo>
"RTN","DGRRLU5",49,0)
 ;                     </type>                      Physician Assistants
"RTN","DGRRLU5",50,0)
 ;                     </classification>            Physician Assistant
"RTN","DGRRLU5",51,0)
 ;                     </specialization>            Medical
"RTN","DGRRLU5",52,0)
 ;                     </VACode>                    V100100
"RTN","DGRRLU5",53,0)
 ;                     </X12Code>                   363AM0700N
"RTN","DGRRLU5",54,0)
 ;                     </SpecialityCode>            97
"RTN","DGRRLU5",55,0)
 ;                </providerInfo>                                      
"RTN","DGRRLU5",56,0)
 ;           </person>                                      
"RTN","DGRRLU5",57,0)
 ;           <error message=''></error>                                  
"RTN","DGRRLU5",58,0)
 ;           <maximum message=''></maximum>                         
"RTN","DGRRLU5",59,0)
 ;           <record count='1'></record>                           
"RTN","DGRRLU5",60,0)
 ;           <institution name='ALBANY' number='500' productiondatabase='0' domain='DMA.FO-ALBANY.MED.VA.GOV' ></institution>
"RTN","DGRRLU5",61,0)
 ;      </persons>
"RTN","DGRRLU5",62,0)
 ;
"RTN","DGRRLU5",63,0)
 ;
"RTN","DGRRLU5",64,0)
PRVLUP(RESULT,PARAMS) ;
"RTN","DGRRLU5",65,0)
 NEW DGRRVPID,DGRRLNAM,DGRRFNAM,DGRRSSN,DGRRPROV,DGRRSTN,DGRRMNM,DGRRDATE
"RTN","DGRRLU5",66,0)
 SET DGRRVPID=$G(PARAMS("PRV_VPID")) ; - The VPID of a Provider (Required unless lookup is by Provider Name)
"RTN","DGRRLU5",67,0)
 SET DGRRLNAM=$G(PARAMS("PRV_LNAM")) ; - Part or all of the last name to use for basis of query (Required unless lookup is by VPID)
"RTN","DGRRLU5",68,0)
 SET DGRRFNAM=$G(PARAMS("PRV_FNAM")) ; - Part or all of the first name to use for basis of query filter (optional, can be null)
"RTN","DGRRLU5",69,0)
 SET DGRRSSN=$G(PARAMS("PRV_SSN"))   ; - Social Security Number (null or full 9 digits) to use as additional filter for query
"RTN","DGRRLU5",70,0)
 SET DGRRPROV=$G(PARAMS("PRV_PROV")) ; - If value set to "P", screen for only providers (only persons with active person class)
"RTN","DGRRLU5",71,0)
 SET DGRRSTN=$G(PARAMS("PRV_STN"))   ; - Filter persons based on station number entered (optional, can be null)
"RTN","DGRRLU5",72,0)
 SET DGRRMNM=$G(PARAMS("PRV_MNM"))   ; - Maximum Number of entries to return (Number between 1 and 50.  Null defaults to 50)
"RTN","DGRRLU5",73,0)
 SET DGRRDATE=$G(PARAMS("PRV_DATE")) ; - Date to be used to determine whether person has active person class.  If null, current date is used.
"RTN","DGRRLU5",74,0)
 ;
"RTN","DGRRLU5",75,0)
 N DGRRARR,DGRRCNT,ERRMESS,DGRRGLB
"RTN","DGRRLU5",76,0)
 DO ADD("<persons>")
"RTN","DGRRLU5",77,0)
 SET DGRRCNT=0 ;Initialize Record Count
"RTN","DGRRLU5",78,0)
 IF (DGRRLNAM=""),(DGRRVPID="") SET ERRMESS="Query requires a last name or a VPID." GOTO FINALLY
"RTN","DGRRLU5",79,0)
 ;
"RTN","DGRRLU5",80,0)
 D EN1^XUPSQRY(.DGRRARR,DGRRVPID,DGRRLNAM,DGRRFNAM,DGRRSSN,DGRRPROV,DGRRSTN,DGRRMNM,DGRRDATE)
"RTN","DGRRLU5",81,0)
 K ^TMP($J,"PLUQRY")
"RTN","DGRRLU5",82,0)
 M ^TMP($J,"PLUQRY")=@DGRRARR
"RTN","DGRRLU5",83,0)
 I '$D(^TMP($J,"PLUQRY",1))!($G(^TMP($J,"PLUQRY",1))=0) D  Q
"RTN","DGRRLU5",84,0)
 .S ERRMESS="No records found."
"RTN","DGRRLU5",85,0)
 .D FINALLY
"RTN","DGRRLU5",86,0)
 N DGRRI,DGRRCNT
"RTN","DGRRLU5",87,0)
 S (DGRRI,DGRRCNT)=0
"RTN","DGRRLU5",88,0)
 F  S DGRRI=$O(^TMP($J,"PLUQRY",DGRRI)) Q:DGRRI=""  D
"RTN","DGRRLU5",89,0)
 .N DGRR0,DGRR1,DGRR2,DGRR3,DGRR4,DGRRVPID,DGRRIEN,DGRRNM,DGRRSSN,DGRRDOB,DGRRSEX
"RTN","DGRRLU5",90,0)
 .S DGRRCNT=DGRRCNT+1
"RTN","DGRRLU5",91,0)
 .; DGRR0=VPID^IEN^Last Name~First Name~Middle Name^SSN^DOB^SEX
"RTN","DGRRLU5",92,0)
 .S DGRR0=$G(^TMP($J,"PLUQRY",DGRRCNT,0))
"RTN","DGRRLU5",93,0)
 .S DGRR1=$G(^TMP($J,"PLUQRY",DGRRCNT,1))  ;Provider Type
"RTN","DGRRLU5",94,0)
 .S DGRR2=$G(^TMP($J,"PLUQRY",DGRRCNT,2))  ;Provider Classification
"RTN","DGRRLU5",95,0)
 .S DGRR3=$G(^TMP($J,"PLUQRY",DGRRCNT,3))  ;Area of Specialization
"RTN","DGRRLU5",96,0)
 .; DGRR4=VA Code^X12 Code^Specialty Code
"RTN","DGRRLU5",97,0)
 .S DGRR4=$G(^TMP($J,"PLUQRY",DGRRCNT,4))
"RTN","DGRRLU5",98,0)
 .S DGRRVPID=$P(DGRR0,U)
"RTN","DGRRLU5",99,0)
 .S DGRRIEN=$P(DGRR0,U,2)
"RTN","DGRRLU5",100,0)
 .S DGRRNM=$P(DGRR0,U,3)
"RTN","DGRRLU5",101,0)
 .S DGRRSSN=$P(DGRR0,U,4)
"RTN","DGRRLU5",102,0)
 .S DGRRDOB=$P(DGRR0,U,5)
"RTN","DGRRLU5",103,0)
 .S DGRRSEX=$P(DGRR0,U,6)
"RTN","DGRRLU5",104,0)
 .D FOUND
"RTN","DGRRLU5",105,0)
 D FINALLY
"RTN","DGRRLU5",106,0)
 Q
"RTN","DGRRLU5",107,0)
 ;
"RTN","DGRRLU5",108,0)
FINALLY DO ADD("<error message='"_$G(ERRMESS)_"'></error>")
"RTN","DGRRLU5",109,0)
 DO ADD("<maximum message=''></maximum>")
"RTN","DGRRLU5",110,0)
 DO ADD("<record count='"_DGRRCNT_"'></record>")
"RTN","DGRRLU5",111,0)
 I $G(DGRRARR)'="" K @DGRRARR
"RTN","DGRRLU5",112,0)
 K ^TMP($J,"PLUQRY")
"RTN","DGRRLU5",113,0)
 Q
"RTN","DGRRLU5",114,0)
 ;
"RTN","DGRRLU5",115,0)
FOUND ;Build XML of found records
"RTN","DGRRLU5",116,0)
 ;
"RTN","DGRRLU5",117,0)
 DO ADD("<person>")
"RTN","DGRRLU5",118,0)
 DO ADD("<vpid>"_$$CHARCHK^DGRRUTL(DGRRVPID)_"</vpid>")
"RTN","DGRRLU5",119,0)
 DO ADD("<ien>"_$$CHARCHK^DGRRUTL(DGRRIEN)_"</ien>")
"RTN","DGRRLU5",120,0)
 DO ADD("<lname>"_$$CHARCHK^DGRRUTL($P(DGRRNM,"~",1))_"</lname>")
"RTN","DGRRLU5",121,0)
 DO ADD("<fname>"_$$CHARCHK^DGRRUTL($P(DGRRNM,"~",2))_"</fname>")
"RTN","DGRRLU5",122,0)
 DO ADD("<mname>"_$$CHARCHK^DGRRUTL($P(DGRRNM,"~",3))_"</mname>")
"RTN","DGRRLU5",123,0)
 DO ADD("<ssn>"_$$CHARCHK^DGRRUTL(DGRRSSN)_"</ssn>")
"RTN","DGRRLU5",124,0)
 DO ADD("<dob>"_$$CHARCHK^DGRRUTL(DGRRDOB)_"</dob>")
"RTN","DGRRLU5",125,0)
 DO ADD("<sex>"_$$CHARCHK^DGRRUTL(DGRRSEX)_"</sex>")
"RTN","DGRRLU5",126,0)
 DO ADD("<providerInfo>")
"RTN","DGRRLU5",127,0)
 DO ADD("<type>"_$$CHARCHK^DGRRUTL($P(DGRR1,U))_"</type>")
"RTN","DGRRLU5",128,0)
 DO ADD("<classification>"_$$CHARCHK^DGRRUTL($P(DGRR2,U))_"</classification>")
"RTN","DGRRLU5",129,0)
 DO ADD("<specialization>"_$$CHARCHK^DGRRUTL($P(DGRR3,U))_"</specialization>")
"RTN","DGRRLU5",130,0)
 DO ADD("<VACode>"_$$CHARCHK^DGRRUTL($P(DGRR4,U))_"</VACode>")
"RTN","DGRRLU5",131,0)
 DO ADD("<X12Code>"_$$CHARCHK^DGRRUTL($P(DGRR4,U,2))_"</X12Code>")
"RTN","DGRRLU5",132,0)
 DO ADD("<SpecialityCode>"_$$CHARCHK^DGRRUTL($P(DGRR4,U,3))_"</SpecialityCode>")
"RTN","DGRRLU5",133,0)
 DO ADD("</providerInfo>")
"RTN","DGRRLU5",134,0)
 DO ADD("</person>")
"RTN","DGRRLU5",135,0)
 QUIT
"RTN","DGRRLU5",136,0)
 ;
"RTN","DGRRLU5",137,0)
ADD(STR) ; add string to array
"RTN","DGRRLU5",138,0)
 SET DGRRLINE=DGRRLINE+1
"RTN","DGRRLU5",139,0)
 SET @DGRRESLT@(DGRRLINE)=STR
"RTN","DGRRLU5",140,0)
 QUIT
"RTN","DGRRLU6")
0^9^B34442401
"RTN","DGRRLU6",1,0)
DGRRLU6 ;alb/aas - DG Replacement and Rehosting RPC for VADPT ; Jan-7-2003  ; Compiled April 27, 2004 10:10:10
"RTN","DGRRLU6",2,0)
 ;;5.3;Registration;**538**;Aug 13, 1993
"RTN","DGRRLU6",3,0)
 ;
"RTN","DGRRLU6",4,0)
 ; CALLED BY DGRRLU LINE:
"RTN","DGRRLU6",5,0)
 ; IF (SEARCH="NAME"),($G(PARAMS("VERSION 2"))'="") DO BYNAME^DGRRLU6 ; sgg 05/06/04
"RTN","DGRRLU6",6,0)
 ;
"RTN","DGRRLU6",7,0)
 ;
"RTN","DGRRLU6",8,0)
 ;
"RTN","DGRRLU6",9,0)
BYNAME ; (VALUE)
"RTN","DGRRLU6",10,0)
 NEW FULLCNT,DGRRPCNT,DGRR,NODE,DFN,XREF,DIERR
"RTN","DGRRLU6",11,0)
 ;
"RTN","DGRRLU6",12,0)
 IF SEARCH="NAME" SET XREF="B" IF VALUE[", " SET VALUE=$P(VALUE,", ")_","_$P(VALUE,", ",2) ;REMOVE FIRST SPACE
"RTN","DGRRLU6",13,0)
 IF SEARCH="SSN" SET XREF="SSN",VALUE=$TR(VALUE," -","") ; REMOVE DASHES AND SPACES
"RTN","DGRRLU6",14,0)
 IF SEARCH="SSN4" SET XREF="BS5" IF $L(VALUE)>5 SET VALUE=$E(VALUE,1,5) ; can't exceed 5 characters, if P for psuedo on end take it off.
"RTN","DGRRLU6",15,0)
 IF SEARCH="ICN" SET XREF="AICN" SET VALUE=$P(VALUE,"V",1)
"RTN","DGRRLU6",16,0)
 ;
"RTN","DGRRLU6",17,0)
 NEW SGGCOUNT,IEN,QUITFLG,PP,CNTLINE,OVERMAX,MAXMSG,RCLINE,LIMIT,GLOB
"RTN","DGRRLU6",18,0)
 ;
"RTN","DGRRLU6",19,0)
 IF VALUE="" DO  QUIT
"RTN","DGRRLU6",20,0)
 . DO ADD("<record count='0'>")
"RTN","DGRRLU6",21,0)
 . DO ADD("<maximum message=''></maximum>")
"RTN","DGRRLU6",22,0)
 . DO ADD("<error message='Not Enough Information Provided to Search for Patients.  Search Type = """_SEARCH_"""  Search For = """_VALUE_"""'></error>")
"RTN","DGRRLU6",23,0)
 ;
"RTN","DGRRLU6",24,0)
 SET DGRRLINE=DGRRLINE+1,RCLINE=DGRRLINE
"RTN","DGRRLU6",25,0)
 S SGGCOUNT=0,PP=$O(^DPT("B",VALUE),-1),IEN=""
"RTN","DGRRLU6",26,0)
 S LIMIT=MAXSIZE,OVERMAX=0
"RTN","DGRRLU6",27,0)
 SET QUITFLG=0
"RTN","DGRRLU6",28,0)
 F  S PP=$O(^DPT("B",PP)) Q:PP=""  DO  QUIT:QUITFLG
"RTN","DGRRLU6",29,0)
 .IF ($E(PP,1,$L(VALUE))'=VALUE) SET QUITFLG=1 QUIT
"RTN","DGRRLU6",30,0)
 .IF ((LIMIT'="")&(SGGCOUNT+1>LIMIT)) SET QUITFLG=1,OVERMAX=1 QUIT
"RTN","DGRRLU6",31,0)
 .IF $D(^XTMP("DGRRLU",JOB,1)) S QUITFLG=1,CANCEL=1  ; ****
"RTN","DGRRLU6",32,0)
 .IF ($$STOP^XOBVLIB()) SET QUITFLG=1 QUIT
"RTN","DGRRLU6",33,0)
 .F  S IEN=$O(^DPT("B",PP,IEN)) Q:IEN=""  D
"RTN","DGRRLU6",34,0)
 ..S GLOB(0)=$G(^DPT(IEN,0))
"RTN","DGRRLU6",35,0)
 ..;S ^TMP($J,"NAME",IEN)=$P(^DPT(IEN,0),"^",1)
"RTN","DGRRLU6",36,0)
 ..D PTDATA(IEN,SGGCOUNT)
"RTN","DGRRLU6",37,0)
 ..S SGGCOUNT=SGGCOUNT+1
"RTN","DGRRLU6",38,0)
 IF CANCEL=1 QUIT  ; ****
"RTN","DGRRLU6",39,0)
 ;
"RTN","DGRRLU6",40,0)
 SET MAXMSG="" IF +$G(OVERMAX) SET MAXMSG="Too many patients found (more than "_LIMIT_").  Please Limit Search."
"RTN","DGRRLU6",41,0)
 DO ADD("<maximum message='"_MAXMSG_"'></maximum>")
"RTN","DGRRLU6",42,0)
 DO ADD("<error message=''></error>")
"RTN","DGRRLU6",43,0)
 ;
"RTN","DGRRLU6",44,0)
 SET @DGRRESLT@(RCLINE)=("<record count='"_SGGCOUNT_"'>")
"RTN","DGRRLU6",45,0)
 QUIT
"RTN","DGRRLU6",46,0)
 ;
"RTN","DGRRLU6",47,0)
PTDATA(DFN,DGRRPCNT) ;
"RTN","DGRRLU6",48,0)
 NEW I,DONE,LINE,ALIAS,NAME,PTNAME,DOB,SSN,TYPE,GENDER,ICN,PRIM,SC,SCPER,VET,WARD,ROOMBED,SENSITIV,DGEMP,PCPIEN,PCPVPID,PCPNAME,PATSPCP
"RTN","DGRRLU6",49,0)
 IF DGRRPCNT>(MAXSIZE-1) DO MAXOUT QUIT
"RTN","DGRRLU6",50,0)
 ;IF (MSCREEN'="") X MSCREEN I '$T Q
"RTN","DGRRLU6",51,0)
 SET DGRRPCNT=DGRRPCNT+1
"RTN","DGRRLU6",52,0)
 SET LINE="<patient number='"_DGRRPCNT_"' dfn='"_DFN_"'"
"RTN","DGRRLU6",53,0)
 ;
"RTN","DGRRLU6",54,0)
 SET PTNAME=$P(^DPT(DFN,0),"^",1)
"RTN","DGRRLU6",55,0)
 IF SEARCH="NAME",FILTER="" IF $E(PTNAME,1,$L(VALUE))'=VALUE DO
"RTN","DGRRLU6",56,0)
 . SET (I,DONE)=0
"RTN","DGRRLU6",57,0)
 . SET ALIAS=""
"RTN","DGRRLU6",58,0)
 . FOR  S I=$O(^DPT(DFN,.01,I)) Q:I<1  Q:DONE  DO
"RTN","DGRRLU6",59,0)
 .. SET ALIAS=$P($G(^DPT(DFN,.01,I,0)),"^",1)
"RTN","DGRRLU6",60,0)
 .. IF $E(ALIAS,1,$L(VALUE))=VALUE SET PTNAME="("_ALIAS_")  "_PTNAME,DONE=1
"RTN","DGRRLU6",61,0)
 . IF DONE=0 SET PTNAME="(Unknown Alias)  "_PTNAME
"RTN","DGRRLU6",62,0)
 ; -- REQUIRED COMPONENTS
"RTN","DGRRLU6",63,0)
 ;SENSITIV will be set to true to block the display of the SSN and DOB 
"RTN","DGRRLU6",64,0)
 ;if patient is marked as sensitive in DG Security Log (#38.1) file or 
"RTN","DGRRLU6",65,0)
 ;has an employee eligibility code
"RTN","DGRRLU6",66,0)
 SET SENSITIV=$S($P($G(^DGSL(38.1,DFN,0)),"^",2)=1:"true",1:"false")
"RTN","DGRRLU6",67,0)
 I SENSITIV="false" D
"RTN","DGRRLU6",68,0)
 .S DGEMP=$$EMPL^DGSEC4(DFN)
"RTN","DGRRLU6",69,0)
 .I DGEMP=1 S SENSITIV="true"
"RTN","DGRRLU6",70,0)
 SET NAME=$$CHARCHK^DGRRUTL(PTNAME)
"RTN","DGRRLU6",71,0)
 SET DOB=$$CHARCHK^DGRRUTL($P($G(^DPT(DFN,0)),"^",3))
"RTN","DGRRLU6",72,0)
 SET SSN=$$CHARCHK^DGRRUTL($P($G(^DPT(DFN,0)),"^",9))
"RTN","DGRRLU6",73,0)
 SET LINE=LINE_" sensitive='"_SENSITIV_"' name='"_NAME_"' dob='"_DOB_"' ssn='"_SSN_"' "
"RTN","DGRRLU6",74,0)
 ; -- OPTIONAL COMPONENTS
"RTN","DGRRLU6",75,0)
 ;Patient Type (391)
"RTN","DGRRLU6",76,0)
 SET TYPE=$$CHARCHK^DGRRUTL($P($G(^DG(391,+$G(^DPT(DFN,"TYPE")),0)),"^",1))
"RTN","DGRRLU6",77,0)
 ;
"RTN","DGRRLU6",78,0)
 ;gender
"RTN","DGRRLU6",79,0)
 SET GENDER=$$CHARCHK^DGRRUTL($P($G(^DPT(DFN,0)),"^",2))
"RTN","DGRRLU6",80,0)
 ;
"RTN","DGRRLU6",81,0)
 ;icn
"RTN","DGRRLU6",82,0)
 SET ICN=$$ICNLC^MPIF001(DFN)
"RTN","DGRRLU6",83,0)
 ;
"RTN","DGRRLU6",84,0)
 ;Primary Eligibility(.361)
"RTN","DGRRLU6",85,0)
 SET PRIM=$$PRIM(DFN)
"RTN","DGRRLU6",86,0)
 ;
"RTN","DGRRLU6",87,0)
 SET SC=$P($G(^DPT(DFN,.3)),"^",1,2) ;Is Service Connected (.301) %=.302
"RTN","DGRRLU6",88,0)
 SET SCPER=$P(SC,"^",2)
"RTN","DGRRLU6",89,0)
 IF $P(SC,"^",1)="Y" SET SC="true"
"RTN","DGRRLU6",90,0)
 IF $P(SC,"^",1)="N" SET SC="false"
"RTN","DGRRLU6",91,0)
 ;
"RTN","DGRRLU6",92,0)
 SET VET=$P($G(^DPT(DFN,"VET")),"^",1) ;Veteran Status (1901)
"RTN","DGRRLU6",93,0)
 IF VET="Y" SET VET="true"
"RTN","DGRRLU6",94,0)
 IF VET="N" SET VET="false"
"RTN","DGRRLU6",95,0)
 ;
"RTN","DGRRLU6",96,0)
 SET WARD=$$CHARCHK^DGRRUTL($E($G(^DPT(DFN,.1)),1,30))
"RTN","DGRRLU6",97,0)
 SET ROOMBED=$$CHARCHK^DGRRUTL($P($G(^DPT(DFN,.101)),"^",1))
"RTN","DGRRLU6",98,0)
 ;
"RTN","DGRRLU6",99,0)
 ; get the PCP's IEN and convert to VPID (primary care physician)  sgg 06/17/04
"RTN","DGRRLU6",100,0)
 SET PATSPCP=$$NMPCPR^SCAPMCU2(DFN,DT,1)
"RTN","DGRRLU6",101,0)
 SET PCPIEN=$P(PATSPCP,"^",1)
"RTN","DGRRLU6",102,0)
 SET PCPNAME=$P(PATSPCP,"^",2)
"RTN","DGRRLU6",103,0)
 SET PCPVPID=$$VPID^XUPS(+PCPIEN)
"RTN","DGRRLU6",104,0)
 ;
"RTN","DGRRLU6",105,0)
 SET LINE=LINE_" type='"_TYPE_"' primaryeligibility='"_PRIM_"' serviceconnected='"_SC_"' scpercent='"_SCPER_"'"
"RTN","DGRRLU6",106,0)
 SET LINE=LINE_" gender='"_GENDER_"' icn='"_ICN_"' veteran='"_VET_"' ward='"_WARD_"' roombed='"_ROOMBED_"'"
"RTN","DGRRLU6",107,0)
 SET LINE=LINE_" pcpien='"_PCPIEN_"' pcpvpid='"_PCPVPID_"' pcpname='"_PCPNAME_"'></patient>"
"RTN","DGRRLU6",108,0)
 ;
"RTN","DGRRLU6",109,0)
 DO ADD(LINE)
"RTN","DGRRLU6",110,0)
 DO NAMECOMP^DGRRLU0(DFN,DGRRPCNT)
"RTN","DGRRLU6",111,0)
 ;
"RTN","DGRRLU6",112,0)
 QUIT
"RTN","DGRRLU6",113,0)
 ;
"RTN","DGRRLU6",114,0)
MAXOUT ;
"RTN","DGRRLU6",115,0)
 IF $G(MAXSIZRE)<1 DO ADD("<maximum message='Too many patients found (more than "_MAXSIZE_").  Please Limit Search.'></maximum>")
"RTN","DGRRLU6",116,0)
 SET MAXSIZRE=1
"RTN","DGRRLU6",117,0)
 QUIT
"RTN","DGRRLU6",118,0)
 ;
"RTN","DGRRLU6",119,0)
PRIM(DFN) ; -- returns print name from file 8.1
"RTN","DGRRLU6",120,0)
 NEW PRIM1
"RTN","DGRRLU6",121,0)
 SET PRIM1=$P($G(^DIC(8,+$G(^DPT(DFN,.36)),0)),"^",9) ; station entry
"RTN","DGRRLU6",122,0)
 Q $$CHARCHK^DGRRUTL($P($G(^DIC(8.1,+PRIM1,0)),"^",6)) ; mas entry
"RTN","DGRRLU6",123,0)
 ;
"RTN","DGRRLU6",124,0)
ADD(STR) ; -- add string to array
"RTN","DGRRLU6",125,0)
 SET DGRRLINE=DGRRLINE+1
"RTN","DGRRLU6",126,0)
 SET @DGRRESLT@(DGRRLINE)=STR
"RTN","DGRRLU6",127,0)
 QUIT
"RTN","DGRRLU6",128,0)
 ;
"RTN","DGRRLU6",129,0)
TEST(XSTRING,XNUMBER,DISPLAY) ;
"RTN","DGRRLU6",130,0)
 ; ZL DGRRLU6 D TEST("SMITH",100,1)
"RTN","DGRRLU6",131,0)
 ; DO THE OLD CODE
"RTN","DGRRLU6",132,0)
 N RESULT,PARAMS,AAA,BBB
"RTN","DGRRLU6",133,0)
 SET PARAMS("SEARCH_VALUE")=XSTRING
"RTN","DGRRLU6",134,0)
 SET PARAMS("SEARCH_TYPE")="NAME"
"RTN","DGRRLU6",135,0)
 SET PARAMS("MAX_PATIENTS")=+XNUMBER
"RTN","DGRRLU6",136,0)
 SET PARAMS("VERSION 1")="OLD CODE"
"RTN","DGRRLU6",137,0)
 D SEARCH^DGRRLU(.RESULT,.PARAMS)
"RTN","DGRRLU6",138,0)
 D RESTOT(.RESULT,.AAA)
"RTN","DGRRLU6",139,0)
 IF +$G(DISPLAY) D DISPLAY(.RESULT)
"RTN","DGRRLU6",140,0)
 ; DO THE NEW CODE
"RTN","DGRRLU6",141,0)
 N RESULT,PARAMS
"RTN","DGRRLU6",142,0)
 K PARAMS
"RTN","DGRRLU6",143,0)
 SET PARAMS("SEARCH_VALUE")=XSTRING
"RTN","DGRRLU6",144,0)
 SET PARAMS("SEARCH_TYPE")="NAME"
"RTN","DGRRLU6",145,0)
 SET PARAMS("MAX_PATIENTS")=+XNUMBER
"RTN","DGRRLU6",146,0)
 D SEARCH^DGRRLU(.RESULT,.PARAMS)
"RTN","DGRRLU6",147,0)
 IF +$G(DISPLAY) D DISPLAY(.RESULT)
"RTN","DGRRLU6",148,0)
 D RESTOT(.RESULT,.BBB)
"RTN","DGRRLU6",149,0)
 ;
"RTN","DGRRLU6",150,0)
 ;IF AAA=BBB W !!!,"NO MISMATCH"
"RTN","DGRRLU6",151,0)
 ;IF AAA'=BBB W !!!,"RESULT MISMATCH" DO
"RTN","DGRRLU6",152,0)
 ;.W !!!,"AAA>",AAA
"RTN","DGRRLU6",153,0)
 ;.W !!!,"BBB>",BBB
"RTN","DGRRLU6",154,0)
 ;.F I=1:1 Q:($E(AAA,I,I+4)="[EOF]")  I $E(AAA,I)'=$E(BBB,I) W !,I,"[A",I,"] ",$E(AAA,I),?10,"[B",I,"] ",$E(BBB,I)
"RTN","DGRRLU6",155,0)
 ;
"RTN","DGRRLU6",156,0)
 QUIT
"RTN","DGRRLU6",157,0)
 ;
"RTN","DGRRLU6",158,0)
DISPLAY(RESULT) ;
"RTN","DGRRLU6",159,0)
 NEW I
"RTN","DGRRLU6",160,0)
 S I=-1 FOR  SET I=$O(@RESULT@(I)) Q:I<1  W !!,@RESULT@(I)
"RTN","DGRRLU6",161,0)
 QUIT
"RTN","DGRRLU6",162,0)
 ;
"RTN","DGRRLU6",163,0)
RESTOT(RESULT,OUT) ;
"RTN","DGRRLU6",164,0)
 NEW I
"RTN","DGRRLU6",165,0)
 S OUT="",I=-1 FOR  SET I=$O(@RESULT@(I)) Q:I<1  S OUT(I)=@RESULT@(I)
"RTN","DGRRLU6",166,0)
 QUIT
"RTN","DGRRLUA")
0^12^B14717059
"RTN","DGRRLUA",1,0)
DGRRLUA ;alb/aas - Person Service Lookup gather patient data;2/15/2005
"RTN","DGRRLUA",2,0)
 ;;5.3;Registration;**538**;Aug 13, 1993
"RTN","DGRRLUA",3,0)
 ;
"RTN","DGRRLUA",4,0)
 ;DGRRLUA created when DGRRLU exceeded maximum routine size
"RTN","DGRRLUA",5,0)
 ;
"RTN","DGRRLUA",6,0)
PTDATA(DFN,DGRRPCNT)    ;
"RTN","DGRRLUA",7,0)
 NEW I,DONE,LINE,ALIAS,NAME,PTNAME,DOB,SSN,TYPE,GENDER,ICN,PRIM,SC,SCPER,VET,WARD,ROOMBED,SENSITIV,DGEMP,PATSPCP,PCPIEN,PCPVPID,PCPNAME
"RTN","DGRRLUA",8,0)
 IF DGRRPCNT>(MAXSIZE-1) DO MAXOUT QUIT
"RTN","DGRRLUA",9,0)
 ;IF (MSCREEN'="") X MSCREEN I '$T Q
"RTN","DGRRLUA",10,0)
 SET DGRRPCNT=DGRRPCNT+1
"RTN","DGRRLUA",11,0)
 SET LINE="<patient number='"_DGRRPCNT_"' dfn='"_DFN_"'"
"RTN","DGRRLUA",12,0)
 ;
"RTN","DGRRLUA",13,0)
 SET PTNAME=$P(^DPT(DFN,0),"^",1)
"RTN","DGRRLUA",14,0)
 IF SEARCH="NAME",FILTER="" IF $P($G(DGRRCA),"^")=1 DO
"RTN","DGRRLUA",15,0)
 .I $O(^DPT(DFN,.01,0)) D
"RTN","DGRRLUA",16,0)
 .. SET (I,DONE)=0
"RTN","DGRRLUA",17,0)
 .. SET ALIAS=""
"RTN","DGRRLUA",18,0)
 .. FOR  S I=$O(^DPT(DFN,.01,I)) Q:I<1  Q:DONE  DO
"RTN","DGRRLUA",19,0)
 ... SET ALIAS=$P($G(^DPT(DFN,.01,I,0)),"^",1)
"RTN","DGRRLUA",20,0)
 ... IF ALIAS=$P(DGRRCA,"^",2) SET PTNAME="("_ALIAS_")  "_PTNAME,DONE=1
"RTN","DGRRLUA",21,0)
 .. IF DONE=0 SET PTNAME="(Unknown Alias)  "_PTNAME
"RTN","DGRRLUA",22,0)
 ;
"RTN","DGRRLUA",23,0)
 ;IF SEARCH="NAME",FILTER="" IF $E(PTNAME,1,$L(VALUE))'=VALUE DO
"RTN","DGRRLUA",24,0)
 ;. SET (I,DONE)=0
"RTN","DGRRLUA",25,0)
 ;. SET ALIAS=""
"RTN","DGRRLUA",26,0)
 ;. FOR  S I=$O(^DPT(DFN,.01,I)) Q:I<1  Q:DONE  DO
"RTN","DGRRLUA",27,0)
 ;.. SET ALIAS=$P($G(^DPT(DFN,.01,I,0)),"^",1)
"RTN","DGRRLUA",28,0)
 ;.. IF $E(ALIAS,1,$L(VALUE))=VALUE SET PTNAME="("_ALIAS_")  "_PTNAME,DONE=1
"RTN","DGRRLUA",29,0)
 ;. IF DONE=0 SET PTNAME="(Unknown Alias)  "_PTNAME
"RTN","DGRRLUA",30,0)
 ;
"RTN","DGRRLUA",31,0)
 ; -- REQUIRED COMPONENTS
"RTN","DGRRLUA",32,0)
 ;SENSITIV will be set to true to block the display of the SSN and DOB 
"RTN","DGRRLUA",33,0)
 ;if patient is marked as sensitive in DG Security Log (#38.1) file or 
"RTN","DGRRLUA",34,0)
 ;has an employee eligibility code
"RTN","DGRRLUA",35,0)
 SET SENSITIV=$S($P($G(^DGSL(38.1,DFN,0)),"^",2)=1:"true",1:"false")
"RTN","DGRRLUA",36,0)
 I SENSITIV="false" D
"RTN","DGRRLUA",37,0)
 .S DGEMP=$$EMPL^DGSEC4(DFN)
"RTN","DGRRLUA",38,0)
 .I DGEMP=1 S SENSITIV="true"
"RTN","DGRRLUA",39,0)
 SET NAME=$$CHARCHK^DGRRUTL(PTNAME)
"RTN","DGRRLUA",40,0)
 SET DOB=$$CHARCHK^DGRRUTL($P($G(^DPT(DFN,0)),"^",3))
"RTN","DGRRLUA",41,0)
 SET SSN=$$CHARCHK^DGRRUTL($P($G(^DPT(DFN,0)),"^",9))
"RTN","DGRRLUA",42,0)
 SET LINE=LINE_" sensitive='"_SENSITIV_"' name='"_NAME_"' dob='"_DOB_"' ssn='"_SSN_"' "
"RTN","DGRRLUA",43,0)
 ;
"RTN","DGRRLUA",44,0)
 ; -- OPTIONAL COMPONENTS
"RTN","DGRRLUA",45,0)
 ;Patient Type (391)
"RTN","DGRRLUA",46,0)
 SET TYPE=$$CHARCHK^DGRRUTL($P($G(^DG(391,+$G(^DPT(DFN,"TYPE")),0)),"^",1))
"RTN","DGRRLUA",47,0)
 ;
"RTN","DGRRLUA",48,0)
 ;gender
"RTN","DGRRLUA",49,0)
 SET GENDER=$$CHARCHK^DGRRUTL($P($G(^DPT(DFN,0)),"^",2))
"RTN","DGRRLUA",50,0)
 ;
"RTN","DGRRLUA",51,0)
 ;icn
"RTN","DGRRLUA",52,0)
 SET ICN=$$ICNLC^MPIF001(DFN)
"RTN","DGRRLUA",53,0)
 ;
"RTN","DGRRLUA",54,0)
 ;Primary Eligibility(.361)
"RTN","DGRRLUA",55,0)
 SET PRIM=$$PRIM(DFN)
"RTN","DGRRLUA",56,0)
 ;
"RTN","DGRRLUA",57,0)
 SET SC=$P($G(^DPT(DFN,.3)),"^",1,2) ;Is Service Connected (.301) %=.302
"RTN","DGRRLUA",58,0)
 SET SCPER=$P(SC,"^",2)
"RTN","DGRRLUA",59,0)
 IF $P(SC,"^",1)="Y" SET SC="true"
"RTN","DGRRLUA",60,0)
 IF $P(SC,"^",1)="N" SET SC="false"
"RTN","DGRRLUA",61,0)
 ;
"RTN","DGRRLUA",62,0)
 SET VET=$P($G(^DPT(DFN,"VET")),"^",1) ;Veteran Status (1901)
"RTN","DGRRLUA",63,0)
 IF VET="Y" SET VET="true"
"RTN","DGRRLUA",64,0)
 IF VET="N" SET VET="false"
"RTN","DGRRLUA",65,0)
 ;
"RTN","DGRRLUA",66,0)
 SET WARD=$$CHARCHK^DGRRUTL($E($G(^DPT(DFN,.1)),1,30))
"RTN","DGRRLUA",67,0)
 SET ROOMBED=$$CHARCHK^DGRRUTL($P($G(^DPT(DFN,.101)),"^",1))
"RTN","DGRRLUA",68,0)
 ;
"RTN","DGRRLUA",69,0)
 ; get the PCP's IEN and convert to VPID (primary care physician)  sgg 06/17/04
"RTN","DGRRLUA",70,0)
 SET PATSPCP=$$NMPCPR^SCAPMCU2(DFN,DT,1)
"RTN","DGRRLUA",71,0)
 SET PCPIEN=$P(PATSPCP,"^",1)
"RTN","DGRRLUA",72,0)
 SET PCPNAME=$P(PATSPCP,"^",2)
"RTN","DGRRLUA",73,0)
 SET PCPVPID=$$VPID^XUPS(+PCPIEN)
"RTN","DGRRLUA",74,0)
 ;
"RTN","DGRRLUA",75,0)
 SET LINE=LINE_" type='"_TYPE_"' primaryeligibility='"_PRIM_"' serviceconnected='"_SC_"' scpercent='"_SCPER_"'"
"RTN","DGRRLUA",76,0)
 SET LINE=LINE_" gender='"_GENDER_"' icn='"_ICN_"' veteran='"_VET_"' ward='"_WARD_"' roombed='"_ROOMBED_"'"
"RTN","DGRRLUA",77,0)
 SET LINE=LINE_" pcpien='"_PCPIEN_"' pcpvpid='"_PCPVPID_"' pcpname='"_PCPNAME_"'>"
"RTN","DGRRLUA",78,0)
 I +$G(DGRRAPTS)=0 S LINE=LINE_"</patient>"
"RTN","DGRRLUA",79,0)
 ;
"RTN","DGRRLUA",80,0)
 DO ADD^DGRRUTL(LINE)
"RTN","DGRRLUA",81,0)
 ;
"RTN","DGRRLUA",82,0)
 DO NAMECOMP^DGRRLU0(DFN,DGRRPCNT)
"RTN","DGRRLUA",83,0)
 ;
"RTN","DGRRLUA",84,0)
 QUIT
"RTN","DGRRLUA",85,0)
 ;
"RTN","DGRRLUA",86,0)
MAXOUT  ;
"RTN","DGRRLUA",87,0)
 IF $G(MAXSIZRE)<1 DO ADD^DGRRUTL("<maximum message='Too many patients found (more than "_MAXSIZE_").  Please Limit Search.'></maximum>")
"RTN","DGRRLUA",88,0)
 SET MAXSIZRE=1
"RTN","DGRRLUA",89,0)
 QUIT
"RTN","DGRRLUA",90,0)
 ;
"RTN","DGRRLUA",91,0)
PRIM(DFN)       ; -- returns print name from file 8.1
"RTN","DGRRLUA",92,0)
 NEW PRIM1
"RTN","DGRRLUA",93,0)
 SET PRIM1=$P($G(^DIC(8,+$G(^DPT(DFN,.36)),0)),"^",9) ; station entry
"RTN","DGRRLUA",94,0)
 Q $$CHARCHK^DGRRUTL($P($G(^DIC(8.1,+PRIM1,0)),"^",6)) ; mas entry
"RTN","DGRRUTL")
0^11^B4044912
"RTN","DGRRUTL",1,0)
DGRRUTL ;alb/aas - DG Replacement and Rehosting RPC for VADPT ;10/21/05  13:19
"RTN","DGRRUTL",2,0)
 ;;5.3;Registration;**538**;Aug 13, 1993
"RTN","DGRRUTL",3,0)
 ;
"RTN","DGRRUTL",4,0)
 QUIT
"RTN","DGRRUTL",5,0)
 ;
"RTN","DGRRUTL",6,0)
ADD(STR) ; -- add string to array
"RTN","DGRRUTL",7,0)
 SET DGRRLINE=DGRRLINE+1
"RTN","DGRRUTL",8,0)
 SET @DGRRESLT@(DGRRLINE)=STR
"RTN","DGRRUTL",9,0)
 QUIT
"RTN","DGRRUTL",10,0)
 ;
"RTN","DGRRUTL",11,0)
CHARCHK(STR) ; -- replace xml character limits with entities
"RTN","DGRRUTL",12,0)
 NEW A,I,X,Y,Z,NEWSTR
"RTN","DGRRUTL",13,0)
 SET (Y,Z)=""
"RTN","DGRRUTL",14,0)
 IF STR["&" SET NEWSTR=STR DO  SET STR=Y_Z
"RTN","DGRRUTL",15,0)
 . FOR X=1:1  SET Y=Y_$PIECE(NEWSTR,"&",X)_"&amp;",Z=$PIECE(STR,"&",X+1,999) QUIT:Z'["&"
"RTN","DGRRUTL",16,0)
 IF STR["<" FOR  SET STR=$PIECE(STR,"<",1)_"&lt;"_$PIECE(STR,"<",2,99) Q:STR'["<"
"RTN","DGRRUTL",17,0)
 IF STR[">" FOR  SET STR=$PIECE(STR,">",1)_"&gt;"_$PIECE(STR,">",2,99) Q:STR'[">"
"RTN","DGRRUTL",18,0)
 IF STR["'" FOR  SET STR=$PIECE(STR,"'",1)_"&apos;"_$PIECE(STR,"'",2,99) Q:STR'["'"
"RTN","DGRRUTL",19,0)
 IF STR["""" FOR  SET STR=$PIECE(STR,"""",1)_"&quot;"_$PIECE(STR,"""",2,99) QUIT:STR'[""""
"RTN","DGRRUTL",20,0)
 ;
"RTN","DGRRUTL",21,0)
 FOR I=1:1:$LENGTH(STR) DO
"RTN","DGRRUTL",22,0)
 . SET X=$EXTRACT(STR,I)
"RTN","DGRRUTL",23,0)
 . SET A=$ASCII(X)
"RTN","DGRRUTL",24,0)
 . IF A<31 S STR=$P(STR,X,1)_$P(STR,X,2,99)
"RTN","DGRRUTL",25,0)
 QUIT STR
"RTN","DGRRUTL",26,0)
 ;
"RTN","DGRRUTL",27,0)
SITENO() ; institution number, including suffix, from vasite.
"RTN","DGRRUTL",28,0)
 Q $P($$SITE^VASITE(),"^",3)
"RTN","DGRRUTL",29,0)
 ;
"RTN","DGRRUTL",30,0)
SITENAM() ; - Institution name, from vasite
"RTN","DGRRUTL",31,0)
 Q $P($$SITE^VASITE(),"^",2)
"RTN","DGRRUTL",32,0)
 ;
"RTN","DGRRUTL",33,0)
PRODST1() ; Production account status check 1
"RTN","DGRRUTL",34,0)
 ; -- Returns 1 if production, 0 if not
"RTN","DGRRUTL",35,0)
 N X S X=$G(^XMB("NETNAME"))
"RTN","DGRRUTL",36,0)
 Q $L(X,".")=3!($L(X,".")=4&(X[".MED."))
"RTN","DGRRUTL",37,0)
 ;
"RTN","DGRRUTL",38,0)
PRODST2() ; Production account status check 2
"RTN","DGRRUTL",39,0)
 ; -- returns 1 if Default Processing Id from HL COMMUNICATION SERVER PARAMETERS file is Production, 0 if not
"RTN","DGRRUTL",40,0)
 Q ($P($$PARAM^HLCS2,"^",3)="P")
"RTN","DGRRUTL",41,0)
 ;
"RTN","DGRRUTL",42,0)
DOMAIN() ; -- get the default domain
"RTN","DGRRUTL",43,0)
 QUIT $$KSP^XUPARAM("WHERE")
"RTN","DGRRUTL",44,0)
 ;
"RTN","DGRRUTL",45,0)
XMLHDR() ; -- provides current XML standard header 
"RTN","DGRRUTL",46,0)
 QUIT "<?xml version=""1.0"" encoding=""utf-8"" ?>"
"RTN","DGRRUTL",47,0)
 ;
"RTN","DGRRUTL",48,0)
CHKSUM(ARRAY) ;
"RTN","DGRRUTL",49,0)
 NEW VAL,ITEM,DATA,CHAR
"RTN","DGRRUTL",50,0)
 SET VAL=0
"RTN","DGRRUTL",51,0)
 SET ITEM=0
"RTN","DGRRUTL",52,0)
 FOR  S ITEM=$ORDER(ARRAY(ITEM)) QUIT:ITEM=""  SET DATA=ARRAY(ITEM) DO
"RTN","DGRRUTL",53,0)
 .  FOR CHAR=1:1:$L(DATA) S VAL=($ASCII(DATA,CHAR)*CHAR*ITEM)+VAL
"RTN","DGRRUTL",54,0)
 QUIT VAL
"RTN","DPTLK1")
0^13^B41327686
"RTN","DPTLK1",1,0)
DPTLK1 ;ALB/RMO - MAS Patient Look-up Check Cross-References ;12/16/05  08:47
"RTN","DPTLK1",2,0)
 ;;5.3;Registration;**32,50,197,249,317,391,244,532,574,620,641,680,538**;Aug 13, 1993
"RTN","DPTLK1",3,0)
FIND ;Cross reference patient lookup
"RTN","DPTLK1",4,0)
 ;Optional input: DPTNOFZY='1' to suppress fuzzy lookups implemented
"RTN","DPTLK1",5,0)
 ;                by patch DG*5.3*244
"RTN","DPTLK1",6,0)
 ;
"RTN","DPTLK1",7,0)
 N DDCOMA,DPTXOLD,DPTOUT,DPTOVAL,DGLASTLK
"RTN","DPTLK1",8,0)
 S DGLASTLK=1
"RTN","DPTLK1",9,0)
 S (DPTXOLD,DPTX)=$$UCASE(DPTX)
"RTN","DPTLK1",10,0)
 I DPTX?1A.E1","1.A.E S DPTXOLD=DPTX,DDCOMA="I $E($P($G(DPTVAL),"","",2),1,"_$L($P(DPTX,",",2))_")="""_$TR($P(DPTX,",",2),"""")_"""",DPTX=$P(DPTX,",")
"RTN","DPTLK1",11,0)
 K DPTREFS S DPTREFS=$S(DIC(0)'["M":"B,NOP",DPTX?1A1N.N:$S($L(DPTX)<6:"BS5,CN,RM",1:"CN,RM"),DPTX?4N!(DPTX?4N1A):"BS,SSN,CN,RM",DPTX?9N.E:"SSN,CN,RM",1:"")
"RTN","DPTLK1",12,0)
 S:DPTREFS="" DPTREFS=$S(DPTX?1N.N:$S($L(DPTX)<5:"CN,RM,BS,SSN",1:"CN,RM,SSN"),DPTX?1N.E:"CN,RM",1:"B,NOP,CN,RM") S:$D(DPTIX) DPTREFS=DPTIX_","_DPTREFS
"RTN","DPTLK1",13,0)
 ;Use cross reference passed to LIST^DPTLK1 by Person Service Lookup (DPTPSREF) if defined.
"RTN","DPTLK1",14,0)
 I $G(DPTPSREF)'="" S DPTREFS=DPTPSREF
"RTN","DPTLK1",15,0)
 S DPTBEG=1,(DPTDFN,DPTNUM,DPTOUT)=0
"RTN","DPTLK1",16,0)
 F DPTLP=1:1 S DPTREF=$P(DPTREFS,",",DPTLP) Q:DPTREF=""!(DPTDFN)  D  Q:DPTDFN!DPTOUT
"RTN","DPTLK1",17,0)
 .S DPTVAL=DPTX
"RTN","DPTLK1",18,0)
 .I DPTREF="NOP",'$G(DPTNOFZY) S DPTVAL=$$FORMAT^XLFNAME7(DPTVAL,2,30,1,0,,1) Q:'$L(DPTVAL)
"RTN","DPTLK1",19,0)
 .D LOOK(DPTVAL)
"RTN","DPTLK1",20,0)
 .I DPTREF="B",'$G(DPTNOFZY) S DPTVAL=$$FORMAT^XLFNAME7(DPTX,2,30,1,0,,1) D:DPTVAL'=DPTX LOOK(DPTVAL)
"RTN","DPTLK1",21,0)
 .Q
"RTN","DPTLK1",22,0)
SET I 'DPTDFN S:DPTCNT=1&($D(DPTIFNS(DPTCNT))) DPTDFN=+DPTIFNS(DPTCNT) S DPT("NOPRT^")="" D PRTDPT:'DPTDFN&(DPTCNT>DPTNUM)&(DIC(0)["E") K DPT("NOPRT^") I 'DPTDFN,$D(DPTSEL),DPTSEL="" S DPTX="",DPTDFN=-1
"RTN","DPTLK1",23,0)
 I DPTDFN'>0,$L($G(DPTXOLD)) I DPTX=$P(DPTXOLD,",") S DPTX=DPTXOLD
"RTN","DPTLK1",24,0)
 I DPTDFN>0,$D(DPTXOLD) S DPTX=DPTXOLD
"RTN","DPTLK1",25,0)
 ; one last stab at lookup - DG*641
"RTN","DPTLK1",26,0)
 I '$G(DPTCNT),DPTX[",",DGLASTLK=1,'$G(DPTNOFZY) D
"RTN","DPTLK1",27,0)
 .S DPTX=$$FORMAT^XLFNAME7(DPTX,2,30,1)
"RTN","DPTLK1",28,0)
 .S DDCOMA="I $E($P($G(DPTVAL),"","",2),1,"_$L($P(DPTX,",",2))_")="""_$TR($P(DPTX,",",2),"""")_""""
"RTN","DPTLK1",29,0)
 .S DPTX=$P(DPTX,",")
"RTN","DPTLK1",30,0)
 .S DGLASTLK=0
"RTN","DPTLK1",31,0)
 .S DPTREFS="B,NOP,CN,RM"
"RTN","DPTLK1",32,0)
 .;Person Service Lookup does not allow lookup by RM cross reference
"RTN","DPTLK1",33,0)
 .;PSL release 4 does not allow lookup by ward (CN) cross reference
"RTN","DPTLK1",34,0)
 .I $G(DPTPSREF)'="" S DPTREFS="B,NOP"
"RTN","DPTLK1",35,0)
 .F DPTLP=1:1 S DPTREF=$P(DPTREFS,",",DPTLP) Q:DPTREF=""!(DPTDFN)  D  Q:DPTDFN!DPTOUT
"RTN","DPTLK1",36,0)
 ..S DPTVAL=DPTX
"RTN","DPTLK1",37,0)
 ..D LOOK(DPTVAL)
"RTN","DPTLK1",38,0)
 I DGLASTLK=0,$G(DPTCNT) S DGLASTLK=1 G SET
"RTN","DPTLK1",39,0)
 I DGLASTLK=0,'$G(DPTCNT),$L($G(DPTXOLD)) S DPTX=DPTXOLD
"RTN","DPTLK1",40,0)
 ; end of DG*641 change
"RTN","DPTLK1",41,0)
 ;
"RTN","DPTLK1",42,0)
Q K DPTBEG,DPTIFN,DPTIFNS,DPTLP,DPTLP1,DPTNUM,DPTREF,DPTREFS,DPTVAL
"RTN","DPTLK1",43,0)
 K DPTOVAL,DPTOUT,DPTXOLD,^TMP("DPTLK",$J)
"RTN","DPTLK1",44,0)
 Q
"RTN","DPTLK1",45,0)
 ;
"RTN","DPTLK1",46,0)
LOOK(DPTVAL) ;Look for x-ref matches
"RTN","DPTLK1",47,0)
 ;Input: DPTVAL=lookup seed value
"RTN","DPTLK1",48,0)
 I $L(DPTVAL),$D(^DPT(DPTREF,DPTVAL)) D CHKIFN Q:DPTDFN!DPTOUT
"RTN","DPTLK1",49,0)
 I $L(DPTVAL),'($D(^DPT(DPTREF,DPTVAL))&(DIC(0)["O"))&(DIC(0)'["X") D CHKVAL
"RTN","DPTLK1",50,0)
 Q
"RTN","DPTLK1",51,0)
 ;
"RTN","DPTLK1",52,0)
CHKVAL S DPTOVAL=DPTVAL
"RTN","DPTLK1",53,0)
 N DPTSEED S DPTSEED=DPTVAL
"RTN","DPTLK1",54,0)
 I DPTREF="SSN",(DPTVAL?9N1"p") D  Q
"RTN","DPTLK1",55,0)
 .S DPTVAL=$E(DPTVAL,1,9)_"P" D CHKIFN
"RTN","DPTLK1",56,0)
 .Q
"RTN","DPTLK1",57,0)
 I DPTREF="SSN",(DPTVAL?2.9N) D  Q
"RTN","DPTLK1",58,0)
 .S DPTVAL=$E(DPTVAL_"0000000",1,9)
"RTN","DPTLK1",59,0)
 .D CV1(DPTVAL),CHKIFN
"RTN","DPTLK1",60,0)
 .S DPTVAL=DPTVAL_"P" D CV1(DPTVAL),CHKIFN
"RTN","DPTLK1",61,0)
 .Q
"RTN","DPTLK1",62,0)
 D CV1(DPTVAL)
"RTN","DPTLK1",63,0)
 I DPTREF="CN"!(DPTREF="RM"),DPTVAL'["E",DPTVAL=+DPTVAL,'$D(^DPT(DPTREF,DPTVAL)) D  Q
"RTN","DPTLK1",64,0)
 .S DPTVAL=$O(^DPT(DPTREF,DPTVAL_" "),-1)
"RTN","DPTLK1",65,0)
 .D CV1(DPTVAL)
"RTN","DPTLK1",66,0)
 .Q
"RTN","DPTLK1",67,0)
 Q
"RTN","DPTLK1",68,0)
 ;
"RTN","DPTLK1",69,0)
CV1(DPTVAL) ;Look for input value matches
"RTN","DPTLK1",70,0)
 I $L(DPTVAL) F DPTLP1=0:0 S DPTVAL=$O(^DPT(DPTREF,DPTVAL)) Q:DPTVAL=""!(DPTDFN)!($P(DPTVAL,DPTSEED)'="")  D CHKIFN
"RTN","DPTLK1",71,0)
 Q
"RTN","DPTLK1",72,0)
 ;
"RTN","DPTLK1",73,0)
CHKIFN F DPTIFN=0:0 S DPTIFN=$O(^DPT(DPTREF,DPTVAL,DPTIFN)) Q:'DPTIFN!(DPTDFN)!DPTOUT  S Y=DPTIFN D SETDPT I $S<DPTSZ F I=1:1:DPTNUM-7 S J=$S($D(DPTIFNS(I)):+DPTIFNS(I),1:0) K DPTIFNS(I),DPTS(J) S DPTBEG=I
"RTN","DPTLK1",74,0)
 Q
"RTN","DPTLK1",75,0)
 ;
"RTN","DPTLK1",76,0)
SETDPT Q:($D(DPTS(Y))&($G(DPTREF)'="B"))!'$D(^DPT(Y,0))
"RTN","DPTLK1",77,0)
 ; screen out MERGED FROM records - DG/574
"RTN","DPTLK1",78,0)
 Q:$D(^DPT(Y,-9))
"RTN","DPTLK1",79,0)
 N DPTNVAL I '$D(DPTOVAL) N DPTOVAL S DPTOVAL=DPTX
"RTN","DPTLK1",80,0)
 I 1 S X=DPTOVAL X:$D(DIC("S")) DIC("S") Q:'$T  X:($D(DO("SCR"))) DO("SCR") Q:'$T  X:$D(DDCOMA) DDCOMA Q:'$T
"RTN","DPTLK1",81,0)
 K:$G(DPTCNT)<1 ^TMP("DPTLK",$J)
"RTN","DPTLK1",82,0)
 S DPTS(Y)=$S('$D(DPTREF):$P(^DPT(Y,0),U),1:$P(^DPT(Y,0),U))_U_$S($D(DPTVAL):$E(DPTVAL,($L(DPTOVAL)+1),$L(DPTVAL)),1:"")
"RTN","DPTLK1",83,0)
 S DPTNVAL=$P(^DPT(Y,0),U)_U_$S($G(DPTREF)="NOP":$P(^DPT(Y,0),U),$D(DPTVAL):DPTVAL,1:"")
"RTN","DPTLK1",84,0)
 Q:$D(^TMP("DPTLK",$J,Y,DPTNVAL))
"RTN","DPTLK1",85,0)
 S DPTCNT=DPTCNT+1,^TMP("DPTLK",$J,Y,DPTNVAL)="",DPTIFNS(DPTCNT)=Y_U_DPTNVAL
"RTN","DPTLK1",86,0)
 I $D(DPTLARR) D  Q
"RTN","DPTLK1",87,0)
 .I DPTLMAX,DPTCNT>DPTLMAX D  Q
"RTN","DPTLK1",88,0)
 ..S @DPTLARR@(DPTCNT)="ADDITIONAL MATCHES FOUND BUT NOT RETURNED"
"RTN","DPTLK1",89,0)
 ..S DPTOUT=1
"RTN","DPTLK1",90,0)
 ..Q
"RTN","DPTLK1",91,0)
 .S @DPTLARR@(DPTCNT)=DPTIFNS(DPTCNT)_U_$$SSN(Y)_U_$$DOB(Y)
"RTN","DPTLK1",92,0)
 .Q
"RTN","DPTLK1",93,0)
 I '(DPTCNT#5),DIC(0)["E" D PRTDPT
"RTN","DPTLK1",94,0)
 Q
"RTN","DPTLK1",95,0)
 ;
"RTN","DPTLK1",96,0)
PRTDPT I $D(DDS) D CLRMSG^DDS S DX=0,DY=DDSHBX+1 X DDXY S X=0 X ^%ZOSF("RM")
"RTN","DPTLK1",97,0)
 N DPTP1,DPTP2
"RTN","DPTLK1",98,0)
 F DPTNUM=DPTNUM+1:1:DPTCNT Q:DPTOUT  S DPTIFN=+DPTIFNS(DPTNUM) D
"RTN","DPTLK1",99,0)
 .W:'$D(DDS) !
"RTN","DPTLK1",100,0)
 .S DPTP2=$P(DPTIFNS(DPTNUM),U,3)
"RTN","DPTLK1",101,0)
 .S DPTP1=$P(DPTIFNS(DPTNUM),U,2)
"RTN","DPTLK1",102,0)
 .W ?3,DPTNUM,?$X+(4-$L(DPTNUM))
"RTN","DPTLK1",103,0)
 .; write the xref value
"RTN","DPTLK1",104,0)
 .W DPTP2_"  "
"RTN","DPTLK1",105,0)
 .; write patient name if diff than xref value
"RTN","DPTLK1",106,0)
 .I DPTP1'=DPTP2 W DPTP1
"RTN","DPTLK1",107,0)
 .S Y=DPTIFN X:$D(^DPT(DPTIFN,0)) "N DDS X DIC(""W"")" I $D(DDS) S DY=DY+1,DX=0 X DDXY S $X=0
"RTN","DPTLK1",108,0)
 I '$D(DPT("NOPRT^")) W:'$D(DDS) ! W "ENTER '^' TO STOP, OR "
"RTN","DPTLK1",109,0)
 W:'$D(DDS) ! W "CHOOSE ",DPTBEG,"-",DPTNUM,": " R X:DTIME S DPTSEL=X D  Q:DPTSEL=""!$D(DTOUT)!$D(DUOUT)
"RTN","DPTLK1",110,0)
 .S:'$T DPTSEL=$S($D(DPTOVAL):DPTOVAL,$D(DPTVAL):DPTVAL,$D(DPTX):DPTX,$D(DPTXOLD):DPTXOLD,1:""),(DPTOUT,DTOUT)=1
"RTN","DPTLK1",111,0)
 .S:X="^" (DPTOUT,DUOUT)=1
"RTN","DPTLK1",112,0)
 S DPTDFN=$S(DPTSEL'?.ANP!($L(DPTSEL)>30):-1,'$D(DPTIFNS(DPTSEL)):-1,$D(DPTS(+DPTIFNS(DPTSEL))):+DPTIFNS(DPTSEL),1:-1),DPTX=$S(DPTDFN<0:DPTSEL,1:DPTX)
"RTN","DPTLK1",113,0)
 S:DPTDFN=-1 DPTXOLD=DPTSEL
"RTN","DPTLK1",114,0)
 Q
"RTN","DPTLK1",115,0)
 ;
"RTN","DPTLK1",116,0)
LIST(DPTX,DPTLMAX,DPTLARR) ;Silent lookup list
"RTN","DPTLK1",117,0)
 ;Input: DPTX=lookup value (name, SSN, room, ward, DFN or 
"RTN","DPTLK1",118,0)
 ;             "space_return").
"RTN","DPTLK1",119,0)
 ;       DPTLMAX=maximum number of matches to return (optional), this
"RTN","DPTLK1",120,0)
 ;               parameter has no effect if DFN or "space_return"
"RTN","DPTLK1",121,0)
 ;               lookup methods are used.
"RTN","DPTLK1",122,0)
 ;       DPTLARR=name of array to return list of matches, this should
"RTN","DPTLK1",123,0)
 ;               be a global if DPTLMAX is a large value or unspecified
"RTN","DPTLK1",124,0)
 ;               This array is returned in the format:
"RTN","DPTLK1",125,0)
 ;               @DPTLARR@(n)=DFN^patient_name^xref_lookup_match_value^
"RTN","DPTLK1",126,0)
 ;                            SSN^Date_of_Birth
"RTN","DPTLK1",127,0)
 ;               If more matches exist than the maximum to be returned
"RTN","DPTLK1",128,0)
 ;               as specified by DPTLMAX, the @DPTLARR@(DPTLMAX+1) node
"RTN","DPTLK1",129,0)
 ;               will be defined = "ADDITIONAL MATCHES FOUND BUT NOT 
"RTN","DPTLK1",130,0)
 ;               RETURNED".
"RTN","DPTLK1",131,0)
 ;               The calling program has the responsibility to kill
"RTN","DPTLK1",132,0)
 ;               @DPTLARR prior to calling this entry point.
"RTN","DPTLK1",133,0)
 ;Output: number of matches and array named by DPTLARR.
"RTN","DPTLK1",134,0)
 ;
"RTN","DPTLK1",135,0)
 N X,Y,DPTCNT,DIC,DPTSZ,DPTDFN,DPTIFNS,DPTS
"RTN","DPTLK1",136,0)
 S DPTCNT=0,DIC(0)="M",DPTSZ=1000 S:$G(DPTLMAX)<1 DPTLMAX=0
"RTN","DPTLK1",137,0)
 ;Check for "space_return" or DFN lookup
"RTN","DPTLK1",138,0)
 I DPTX=" "!($E(DPTX)="`") D  Q DPTCNT
"RTN","DPTLK1",139,0)
 .I DPTX=" " S Y=$S('($D(DUZ)#2):-1,$D(^DISV(DUZ,"^DPT(")):^("^DPT("),1:-1)
"RTN","DPTLK1",140,0)
 .I $E(DPTX)="`" S Y=$S($D(^DPT(+$P(DPTX,"`",2),0)):+$P(DPTX,"`",2),1:-1)
"RTN","DPTLK1",141,0)
 .Q:Y<1  Q:'$D(^DPT(Y,0))  D SETDPT S DPTCNT=1
"RTN","DPTLK1",142,0)
 .Q
"RTN","DPTLK1",143,0)
 D FIND
"RTN","DPTLK1",144,0)
 Q $S(DPTLMAX&(DPTCNT>DPTLMAX):DPTLMAX,1:DPTCNT)
"RTN","DPTLK1",145,0)
 ;
"RTN","DPTLK1",146,0)
UCASE(DGX) ;Uppercase lookup value
"RTN","DPTLK1",147,0)
 ;Input: DGX=lookup value
"RTN","DPTLK1",148,0)
 ;Output: transformed DGX
"RTN","DPTLK1",149,0)
 N DGI,DGY,DGZ S DGZ=DGX,DGX=""
"RTN","DPTLK1",150,0)
 F DGI=1:1:$L(DGZ) S DGY=$E(DGZ,DGI) D
"RTN","DPTLK1",151,0)
 .S:DGY?1L DGY=$C($A(DGY)-32)
"RTN","DPTLK1",152,0)
 .S DGX=DGX_DGY
"RTN","DPTLK1",153,0)
 Q DGX
"RTN","DPTLK1",154,0)
 ;        
"RTN","DPTLK1",155,0)
SSN(DFN) ;do not show ssn identifier for patient
"RTN","DPTLK1",156,0)
 ; input DFN = ien in file #2 [required]
"RTN","DPTLK1",157,0)
 ; output SSN = nnnnnnnnn
"RTN","DPTLK1",158,0)
 ;
"RTN","DPTLK1",159,0)
 N SSN
"RTN","DPTLK1",160,0)
 S SSN="",DFN=+DFN
"RTN","DPTLK1",161,0)
 I DFN>0 D
"RTN","DPTLK1",162,0)
 .I $$SCREEN(DFN) S SSN="*SENSITIVE*" Q
"RTN","DPTLK1",163,0)
 .S SSN=$P($G(^DPT(DFN,0)),U,9)
"RTN","DPTLK1",164,0)
 Q SSN
"RTN","DPTLK1",165,0)
 ;
"RTN","DPTLK1",166,0)
DOB(DFN,DGYR) ;do not show dob identifier for patient
"RTN","DPTLK1",167,0)
 ; input DFN = ien in file #2  [required]
"RTN","DPTLK1",168,0)
 ;       DGYR = 0/1  [optional]
"RTN","DPTLK1",169,0)
 ;              where 0 returns 4-digit year (default)
"RTN","DPTLK1",170,0)
 ;                    1 returns 2-digit year
"RTN","DPTLK1",171,0)
 ;                    2 returns File manager date
"RTN","DPTLK1",172,0)
 ; output DOB = mm/dd/yyyy (default)
"RTN","DPTLK1",173,0)
 ;            = mm/dd/yy, if DGYR=1
"RTN","DPTLK1",174,0)
 ;            = yyymmdd, if DGYR=2
"RTN","DPTLK1",175,0)
 N B,DOB,YEAR
"RTN","DPTLK1",176,0)
 S DOB="",DFN=+DFN,DGYR=+$G(DGYR)
"RTN","DPTLK1",177,0)
 I DFN>0 D
"RTN","DPTLK1",178,0)
 .I $$SCREEN(DFN) S DOB="*SENSITIVE*" Q
"RTN","DPTLK1",179,0)
 .S B=$P($G(^DPT(DFN,0)),U,3)
"RTN","DPTLK1",180,0)
 .I DGYR'=2 D  Q
"RTN","DPTLK1",181,0)
 ..S YEAR=$S(DGYR=1:"2D",1:"5D")
"RTN","DPTLK1",182,0)
 ..S DOB=$$FMTE^XLFDT(B,YEAR)
"RTN","DPTLK1",183,0)
 .S DOB=B
"RTN","DPTLK1",184,0)
 Q DOB
"RTN","DPTLK1",185,0)
 ;
"RTN","DPTLK1",186,0)
SCREEN(DFN) ;Screening logic for SSN & DOB
"RTN","DPTLK1",187,0)
 ;Input  : DFN - Pointer to PATIENT file (#2)
"RTN","DPTLK1",188,0)
 ;Output : 1 - Apply screen
"RTN","DPTLK1",189,0)
 ;         0 - Don't apply screen
"RTN","DPTLK1",190,0)
 ;Notes  : Screen applied if patient is sensitive or an employee
"RTN","DPTLK1",191,0)
 ;
"RTN","DPTLK1",192,0)
 N DGTIME,DGT,DGA1,DG1,DGXFR0
"RTN","DPTLK1",193,0)
 ;Inpatient check - no longer used (kept for future reference)
"RTN","DPTLK1",194,0)
 ;D H^DGUTL S DGT=DGTIME D ^DGPMSTAT I DG1 Q 0
"RTN","DPTLK1",195,0)
 ;Sensitive - screen
"RTN","DPTLK1",196,0)
 I $P($G(^DGSL(38.1,DFN,0)),"^",2) Q 1
"RTN","DPTLK1",197,0)
 ;Employee - screen
"RTN","DPTLK1",198,0)
 I $$EMPL^DGSEC4(DFN) Q 1
"RTN","DPTLK1",199,0)
 ;Don't screen
"RTN","DPTLK1",200,0)
 Q 0
"VER")
8.0^22.0
**END**
**END**
