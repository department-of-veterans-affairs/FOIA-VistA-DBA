EMERGENCY Released DG*5.3*689 SEQ #637
Extracted from mail message
**KIDS**:DG*5.3*689^

**INSTALL NAME**
DG*5.3*689
"BLD",6488,0)
DG*5.3*689^REGISTRATION^0^3061003^y
"BLD",6488,1,0)
^^2^2^3060104^^
"BLD",6488,1,1,0)
Please refer to patch DG*5.3*689 in the National Patch Module for a 
"BLD",6488,1,2,0)
complete description of this patch.
"BLD",6488,4,0)
^9.64PA^2^1
"BLD",6488,4,2,0)
2
"BLD",6488,4,2,2,0)
^9.641^2.3215^2
"BLD",6488,4,2,2,2,0)
PATIENT  (File-top level)
"BLD",6488,4,2,2,2,1,0)
^9.6411^.3298^6
"BLD",6488,4,2,2,2,1,.326,0)
SERVICE ENTRY DATE [LAST]
"BLD",6488,4,2,2,2,1,.327,0)
SERVICE SEPARATION DATE [LAST]
"BLD",6488,4,2,2,2,1,.3292,0)
SERVICE ENTRY DATE [NTL]
"BLD",6488,4,2,2,2,1,.3293,0)
SERVICE SEPARATION DATE [NTL]
"BLD",6488,4,2,2,2,1,.3297,0)
SERVICE ENTRY DATE [NNTL]
"BLD",6488,4,2,2,2,1,.3298,0)
SERVICE SEPARATION DATE [NNTL]
"BLD",6488,4,2,2,2.3215,0)
SERVICE [OEF OR OIF]  (sub-file)
"BLD",6488,4,2,2,2.3215,1,0)
^9.6411^.03^1
"BLD",6488,4,2,2,2.3215,1,.03,0)
OEF/OIF TO DATE
"BLD",6488,4,2,222)
y^n^p^^^^n^^n
"BLD",6488,4,2,224)

"BLD",6488,4,"APDD",2,2)

"BLD",6488,4,"APDD",2,2,.326)

"BLD",6488,4,"APDD",2,2,.327)

"BLD",6488,4,"APDD",2,2,.3292)

"BLD",6488,4,"APDD",2,2,.3293)

"BLD",6488,4,"APDD",2,2,.3297)

"BLD",6488,4,"APDD",2,2,.3298)

"BLD",6488,4,"APDD",2,2.3215)

"BLD",6488,4,"APDD",2,2.3215,.03)

"BLD",6488,4,"B",2,2)

"BLD",6488,6)
3^
"BLD",6488,6.3)
1
"BLD",6488,"KRN",0)
^9.67PA^8989.52^19
"BLD",6488,"KRN",.4,0)
.4
"BLD",6488,"KRN",.401,0)
.401
"BLD",6488,"KRN",.402,0)
.402
"BLD",6488,"KRN",.403,0)
.403
"BLD",6488,"KRN",.5,0)
.5
"BLD",6488,"KRN",.84,0)
.84
"BLD",6488,"KRN",3.6,0)
3.6
"BLD",6488,"KRN",3.8,0)
3.8
"BLD",6488,"KRN",9.2,0)
9.2
"BLD",6488,"KRN",9.8,0)
9.8
"BLD",6488,"KRN",9.8,"NM",0)
^9.68A^36^15
"BLD",6488,"KRN",9.8,"NM",3,0)
DGRP6^^0^B17663817
"BLD",6488,"KRN",9.8,"NM",5,0)
DGRPH^^0^B24473030
"BLD",6488,"KRN",9.8,"NM",6,0)
DGRPV^^0^B16870639
"BLD",6488,"KRN",9.8,"NM",7,0)
DGRPU^^0^B61935480
"BLD",6488,"KRN",9.8,"NM",11,0)
DGRP6CL^^0^B62064109
"BLD",6488,"KRN",9.8,"NM",12,0)
DGRP6EF^^0^B14465405
"BLD",6488,"KRN",9.8,"NM",13,0)
DGRP6CL1^^0^B35021800
"BLD",6488,"KRN",9.8,"NM",14,0)
VADPT4^^0^B33593643
"BLD",6488,"KRN",9.8,"NM",20,0)
VADPT0^^0^B12629835
"BLD",6488,"KRN",9.8,"NM",28,0)
DGRPE^^0^B60930744
"BLD",6488,"KRN",9.8,"NM",30,0)
DGRP6CL2^^0^B18050719
"BLD",6488,"KRN",9.8,"NM",31,0)
DGRPCE^^0^B28964060
"BLD",6488,"KRN",9.8,"NM",34,0)
DGRPMS^^0^B49590588
"BLD",6488,"KRN",9.8,"NM",35,0)
DGRPCE1^^0^B58806369
"BLD",6488,"KRN",9.8,"NM",36,0)
DGRPP^^0^B23860016
"BLD",6488,"KRN",9.8,"NM","B","DGRP6",3)

"BLD",6488,"KRN",9.8,"NM","B","DGRP6CL",11)

"BLD",6488,"KRN",9.8,"NM","B","DGRP6CL1",13)

"BLD",6488,"KRN",9.8,"NM","B","DGRP6CL2",30)

"BLD",6488,"KRN",9.8,"NM","B","DGRP6EF",12)

"BLD",6488,"KRN",9.8,"NM","B","DGRPCE",31)

"BLD",6488,"KRN",9.8,"NM","B","DGRPCE1",35)

"BLD",6488,"KRN",9.8,"NM","B","DGRPE",28)

"BLD",6488,"KRN",9.8,"NM","B","DGRPH",5)

"BLD",6488,"KRN",9.8,"NM","B","DGRPMS",34)

"BLD",6488,"KRN",9.8,"NM","B","DGRPP",36)

"BLD",6488,"KRN",9.8,"NM","B","DGRPU",7)

"BLD",6488,"KRN",9.8,"NM","B","DGRPV",6)

"BLD",6488,"KRN",9.8,"NM","B","VADPT0",20)

"BLD",6488,"KRN",9.8,"NM","B","VADPT4",14)

"BLD",6488,"KRN",19,0)
19
"BLD",6488,"KRN",19,"NM",0)
^9.68A^^
"BLD",6488,"KRN",19.1,0)
19.1
"BLD",6488,"KRN",101,0)
101
"BLD",6488,"KRN",409.61,0)
409.61
"BLD",6488,"KRN",771,0)
771
"BLD",6488,"KRN",870,0)
870
"BLD",6488,"KRN",8989.51,0)
8989.51
"BLD",6488,"KRN",8989.52,0)
8989.52
"BLD",6488,"KRN",8994,0)
8994
"BLD",6488,"KRN","B",.4,.4)

"BLD",6488,"KRN","B",.401,.401)

"BLD",6488,"KRN","B",.402,.402)

"BLD",6488,"KRN","B",.403,.403)

"BLD",6488,"KRN","B",.5,.5)

"BLD",6488,"KRN","B",.84,.84)

"BLD",6488,"KRN","B",3.6,3.6)

"BLD",6488,"KRN","B",3.8,3.8)

"BLD",6488,"KRN","B",9.2,9.2)

"BLD",6488,"KRN","B",9.8,9.8)

"BLD",6488,"KRN","B",19,19)

"BLD",6488,"KRN","B",19.1,19.1)

"BLD",6488,"KRN","B",101,101)

"BLD",6488,"KRN","B",409.61,409.61)

"BLD",6488,"KRN","B",771,771)

"BLD",6488,"KRN","B",870,870)

"BLD",6488,"KRN","B",8989.51,8989.51)

"BLD",6488,"KRN","B",8989.52,8989.52)

"BLD",6488,"KRN","B",8994,8994)

"BLD",6488,"QUES",0)
^9.62^^
"BLD",6488,"REQB",0)
^9.611^3^2
"BLD",6488,"REQB",2,0)
DG*5.3*673^2
"BLD",6488,"REQB",3,0)
DG*5.3*702^2
"BLD",6488,"REQB","B","DG*5.3*673",2)

"BLD",6488,"REQB","B","DG*5.3*702",3)

"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^n^p^^^^n^^n
"FIA",2,0,10)

"FIA",2,0,11)

"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
5.3^DG
"FIA",2,2)
1
"FIA",2,2,.326)

"FIA",2,2,.327)

"FIA",2,2,.3292)

"FIA",2,2,.3293)

"FIA",2,2,.3297)

"FIA",2,2,.3298)

"FIA",2,2.3215)
1
"FIA",2,2.3215,.03)

"IX",2,2,"ACVCOM",0)
2^ACVCOM^Update Combat Vet Eligibility End Date^MU^^R^^I^2^^^^^A
"IX",2,2,"ACVCOM",.1,0)
^^11^11^3030613^
"IX",2,2,"ACVCOM",.1,1,0)
This multi-level MUMPS x-ref will trigger an update to the Combat Vet 
"IX",2,2,"ACVCOM",.1,2,0)
Eligibility End Date field under the following conditions:
"IX",2,2,"ACVCOM",.1,3,0)
  1) Service Separation Date [Last] is precise and > 2981111 AND EITHER
"IX",2,2,"ACVCOM",.1,4,0)
  2) Combat To Date is after 11/11/98 OR
"IX",2,2,"ACVCOM",.1,5,0)
     Persian Gulf To Date is after 11/11/98 OR
"IX",2,2,"ACVCOM",.1,6,0)
     Somalia To Date is after 11/11/98 OR
"IX",2,2,"ACVCOM",.1,7,0)
     Yugoslavia To Date is after 11/11/98
"IX",2,2,"ACVCOM",.1,8,0)
 
"IX",2,2,"ACVCOM",.1,9,0)
The Combat vet field will be set to the Service Separation Date + 2 
"IX",2,2,"ACVCOM",.1,10,0)
years, and will only be updated if information in these fields has 
"IX",2,2,"ACVCOM",.1,11,0)
changed.
"IX",2,2,"ACVCOM",1)
D SETCV^DGCV(DA,X2(1))
"IX",2,2,"ACVCOM",1.4)
I '$P($G(^DPT(DA,.52)),"^",15) S X=$$CVELIG^DGCV(DA)
"IX",2,2,"ACVCOM",2)
Q
"IX",2,2,"ACVCOM",2.4)
Q
"IX",2,2,"ACVCOM",11.1,0)
^.114IA^9^9
"IX",2,2,"ACVCOM",11.1,1,0)
1^F^2^.327^^^F
"IX",2,2,"ACVCOM",11.1,2,0)
2^F^2^.5294^^^F
"IX",2,2,"ACVCOM",11.1,3,0)
3^F^2^.322021^^^F
"IX",2,2,"ACVCOM",11.1,4,0)
4^F^2^.322018^^^F
"IX",2,2,"ACVCOM",11.1,5,0)
5^F^2^.322012^^^F
"IX",2,2,"ACVCOM",11.1,6,0)
6^F^2^.5291^^^F
"IX",2,2,"ACVCOM",11.1,7,0)
7^F^2^.322019^^^F
"IX",2,2,"ACVCOM",11.1,8,0)
8^F^2^.322016^^^F
"IX",2,2,"ACVCOM",11.1,9,0)
9^F^2^.32201^^^F
"IX",2,2,"ASERLAST",0)
2^ASERLAST^Index LAST ENTRY and SEPARATION dates^MU^^R^R^I^2^^^^^A
"IX",2,2,"ASERLAST",.1,0)
^^5^5^3060323
"IX",2,2,"ASERLAST",.1,1,0)
This cross-reference indexes the LAST ENTRY and SEPARATION dates.
"IX",2,2,"ASERLAST",.1,2,0)
The form of the index is:
"IX",2,2,"ASERLAST",.1,3,0)
  ^DPT("ASERVICE",SEPARATION DATE,ENTRY DATE,DA,"LAST")
"IX",2,2,"ASERLAST",.1,4,0)

"IX",2,2,"ASERLAST",.1,5,0)
If one of the dates is missing the corresponding subscript is replaced by U_DA.
"IX",2,2,"ASERLAST",1)
D SSERV^DGSRVICE(.X,.DA,"LAST")
"IX",2,2,"ASERLAST",2)
D KSERV^DGSRVICE(.X,.DA,"LAST")
"IX",2,2,"ASERLAST",2.5)
K ^DPT("ASERVICE")
"IX",2,2,"ASERLAST",11.1,0)
^.114IA^2^2
"IX",2,2,"ASERLAST",11.1,1,0)
1^F^2^.326
"IX",2,2,"ASERLAST",11.1,2,0)
2^F^2^.327
"IX",2,2,"ASERNNTL",0)
2^ASERNNTL^Index NNTL ENTRY and SEPARATION dates^MU^^R^R^I^2^^^^^A
"IX",2,2,"ASERNNTL",.1,0)
^^5^5^3060323
"IX",2,2,"ASERNNTL",.1,1,0)
This cross-reference indexes the NNTL ENTRY and SEPARATION dates.
"IX",2,2,"ASERNNTL",.1,2,0)
The form of the index is:
"IX",2,2,"ASERNNTL",.1,3,0)
  ^DPT("ASERVICE",SEPARATION DATE,ENTRY DATE,DA,"NNTL")
"IX",2,2,"ASERNNTL",.1,4,0)

"IX",2,2,"ASERNNTL",.1,5,0)
If one of the dates is missing the corresponding subscript is replaced by U_DA.
"IX",2,2,"ASERNNTL",1)
D SSERV^DGSRVICE(.X,.DA,"NNTL")
"IX",2,2,"ASERNNTL",2)
D KSERV^DGSRVICE(.X,.DA,"NNTL")
"IX",2,2,"ASERNNTL",2.5)
K ^DPT("ASERVICE")
"IX",2,2,"ASERNNTL",11.1,0)
^.114IA^2^2
"IX",2,2,"ASERNNTL",11.1,1,0)
1^F^2^.3297
"IX",2,2,"ASERNNTL",11.1,2,0)
2^F^2^.3298
"IX",2,2,"ASERNTL",0)
2^ASERNTL^Index NTL ENTRY and SEPARATION dates^MU^^R^R^I^2^^^^^A
"IX",2,2,"ASERNTL",.1,0)
^^5^5^3060323
"IX",2,2,"ASERNTL",.1,1,0)
This cross-reference indexes the NTL ENTRY and SEPARATION dates.
"IX",2,2,"ASERNTL",.1,2,0)
The form of the index is:
"IX",2,2,"ASERNTL",.1,3,0)
  ^DPT("ASERVICE",SEPARATION DATE,ENTRY DATE,DA,"NTL")
"IX",2,2,"ASERNTL",.1,4,0)

"IX",2,2,"ASERNTL",.1,5,0)
If one of the dates is missing the corresponding subscript is replaced by U_DA.
"IX",2,2,"ASERNTL",1)
D SSERV^DGSRVICE(.X,.DA,"NTL")
"IX",2,2,"ASERNTL",2)
D KSERV^DGSRVICE(.X,.DA,"NTL")
"IX",2,2,"ASERNTL",2.5)
K ^DPT("ASERVICE")
"IX",2,2,"ASERNTL",11.1,0)
^.114IA^2^2
"IX",2,2,"ASERNTL",11.1,1,0)
1^F^2^.3292
"IX",2,2,"ASERNTL",11.1,2,0)
2^F^2^.3293
"IX",2,2.3215,"ACVCOM1",0)
2.3215^ACVCOM1^Set CV End Date based on OEF/OIF fields^MU^^R^^I^2.3215^^^^^A
"IX",2,2.3215,"ACVCOM1",.1,0)
^^9^9^3060814^
"IX",2,2.3215,"ACVCOM1",.1,1,0)
This MUMPS x-ref will trigger an update to the Combat Vet Eligibility End
"IX",2,2.3215,"ACVCOM1",.1,2,0)
Date field under the following conditions:
"IX",2,2.3215,"ACVCOM1",.1,3,0)
 
"IX",2,2.3215,"ACVCOM1",.1,4,0)
  If the COMBAT VETERAN END DATE (#.5295) of the PATIENT file (#2) is null
"IX",2,2.3215,"ACVCOM1",.1,5,0)
 AND either
"IX",2,2.3215,"ACVCOM1",.1,6,0)
        The SERVICE SEPARATION DATE [LAST] (#.327) is missing
"IX",2,2.3215,"ACVCOM1",.1,7,0)
                          OR
"IX",2,2.3215,"ACVCOM1",.1,8,0)
        The SERVICE SEPARATION DATE [LAST] (#.327) is less than the
"IX",2,2.3215,"ACVCOM1",.1,9,0)
           OEF/OIF TO DATE - #.03 in subfile 2.3215
"IX",2,2.3215,"ACVCOM1",1)
D SETCV^DGCV(DA(1),$$LAST^DGENOEIF(DA(1)))
"IX",2,2.3215,"ACVCOM1",1.4)
I '$P($G(^DPT(DA(1),.52)),"^",15) S X=$$CVELIG^DGCV(DA(1))
"IX",2,2.3215,"ACVCOM1",2)
Q
"IX",2,2.3215,"ACVCOM1",11.1,0)
^.114IA^1^1
"IX",2,2.3215,"ACVCOM1",11.1,1,0)
1^F^2.3215^.03^^^F
"IX",2,2.3215,"ALOEIF",0)
2.3215^ALOEIF^Sets the latest OIF/ OEF/ UNKNOWN OEF/OIF episode in a cross reference^MU^^R^IR^I^2.3215^^^^^A
"IX",2,2.3215,"ALOEIF",.1,0)
^^10^10^3060105^^^^
"IX",2,2.3215,"ALOEIF",.1,1,0)
Cross reference is:
"IX",2,2.3215,"ALOEIF",.1,2,0)
  ^DPT("ALOEIF",TO DATE,FROM DATE,OIF/ OEF/ UNKNOWN OEF/OIF indicator,
"IX",2,2.3215,"ALOEIF",.1,3,0)
                DA(1),DA)=""
"IX",2,2.3215,"ALOEIF",.1,4,0)
 
"IX",2,2.3215,"ALOEIF",.1,5,0)
Subscripts are:
"IX",2,2.3215,"ALOEIF",.1,6,0)
  TO DATE = latest conflict to date for OIF/ OEF/ UNKNOWN OEF/OIF
"IX",2,2.3215,"ALOEIF",.1,7,0)
  FROM DATE = corresponding from date for TO DATE value
"IX",2,2.3215,"ALOEIF",.1,8,0)
  OIF/ OEF/ UNKNOWN OEF/OIF indicator = "OIF" "OEF" "UNK"
"IX",2,2.3215,"ALOEIF",.1,9,0)
 
"IX",2,2.3215,"ALOEIF",.1,10,0)
 DA(1) = entry in patient file      DA = entry in OEF/OIF subfile
"IX",2,2.3215,"ALOEIF",1)
D UPDLAST^DGENOEIF(.DA,.X2,1)
"IX",2,2.3215,"ALOEIF",2)
D UPDLAST^DGENOEIF(.DA,.X1,0)
"IX",2,2.3215,"ALOEIF",2.5)

"IX",2,2.3215,"ALOEIF",11.1,0)
^.114IA^4^3
"IX",2,2.3215,"ALOEIF",11.1,2,0)
1^F^2.3215^.03^^^F
"IX",2,2.3215,"ALOEIF",11.1,2,3)

"IX",2,2.3215,"ALOEIF",11.1,3,0)
3^F^2.3215^.02^^^F
"IX",2,2.3215,"ALOEIF",11.1,4,0)
2^F^2.3215^.01^^^F
"IX",2,2.3215,"ALSTUP",0)
2.3215^ALSTUP^TRIGGER THE DATE/TIME OF LAST CHANGE WHEN ANY PERTINENT FIELDS CHANGE^MU^^R^IR^I^2.3215^^^^^A
"IX",2,2.3215,"ALSTUP",1)
N DATA,DGENDA S DATA(.05)=$$NOW^XLFDT,DGENDA=DA,DGENDA(1)=DA(1) I $$UPD^DGENDBS(2.3215,.DGENDA,.DATA)
"IX",2,2.3215,"ALSTUP",1.4)
S X=$S($G(X2(1))'=""&($G(X1(1))'=$G(X2(1))):1,$G(X1(2))'=$G(X2(2)):1,$G(X1(3))'=$G(X2(3)):1,1:0)
"IX",2,2.3215,"ALSTUP",2)
N DATA,DGENDA S DATA(.05)=$$NOW^XLFDT,DGENDA=DA,DGENDA(1)=DA(1) I $$UPD^DGENDBS(2.3215,.DGENDA,.DATA)
"IX",2,2.3215,"ALSTUP",11.1,0)
^.114IA^3^3
"IX",2,2.3215,"ALSTUP",11.1,1,0)
1^F^2.3215^.01^^^F
"IX",2,2.3215,"ALSTUP",11.1,2,0)
2^F^2.3215^.02^^^F
"IX",2,2.3215,"ALSTUP",11.1,3,0)
3^F^2.3215^.03^^^F
"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
689^3061003^539
"PKG",5,22,1,"PAH",1,1,0)
^^2^2^3061003
"PKG",5,22,1,"PAH",1,1,1,0)
Please refer to patch DG*5.3*689 in the National Patch Module for a 
"PKG",5,22,1,"PAH",1,1,2,0)
complete description of this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
15
"RTN","DGRP6")
0^3^B17663817^B21696130
"RTN","DGRP6",1,0)
DGRP6 ;ALB/MRL,LBD,TMK - REGISTRATION SCREEN 6/SERVICE INFORMATION ;12 SEP 05
"RTN","DGRP6",2,0)
 ;;5.3;Registration;**161,247,343,397,342,451,672,689**;Aug 13, 1993;Build 1
"RTN","DGRP6",3,0)
 N DIPA,LIN,XX,Z1
"RTN","DGRP6",4,0)
 S DGRPS=6 D H^DGRPU F I=.32,.321,.322,.36,.52,.53 S DGRP(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","DGRP6",5,0)
 S (DGRPW,Z)=1 D WW^DGRPV S Z=" Service Branch/Component",Z1=27 D WW1^DGRPV S Z="Service #",Z1=16 D WW1^DGRPV S Z="Entered",Z1=12 D WW1^DGRPV S Z="Separated",Z1=12 D WW1^DGRPV W "Discharge"
"RTN","DGRP6",6,0)
 W !?4,"------------------------",?30,"---------",?46,"-------",?58,"---------",?70,"---------"
"RTN","DGRP6",7,0)
 S DGRPX=DGRP(.32),DGRPSV=4 D S I $P(DGRPX,"^",19)="Y" S DGRPSV=9 D S I $P(DGRPX,"^",20)="Y" S DGRPSV=14 D S
"RTN","DGRP6",8,0)
 W !
"RTN","DGRP6",9,0)
 D CL^DGRP6CL2(DFN,.LIN)
"RTN","DGRP6",10,0)
 S Z=2 D WW2^DGRPV S Z="  Conflict Locations: ",Z1=20 D WW1^DGRPV W:'$D(LIN(1)) "< None Specified >" W:$D(LIN(1)) LIN(1)
"RTN","DGRP6",11,0)
 S Z=1 F  S Z=$O(LIN(Z)) Q:'Z  W !,?25,LIN(Z)
"RTN","DGRP6",12,0)
 D EF^DGRP6EF(DFN,.LIN)
"RTN","DGRP6",13,0)
 S Z=3 D WW2^DGRPV S Z=" Environment Factors: ",Z1=21 D WW1^DGRPV W:'$D(LIN(1)) "< None Specified >" W:$D(LIN(1)) LIN(1)
"RTN","DGRP6",14,0)
 S Z=1 F  S Z=$O(LIN(Z)) Q:'Z  W !,?4,"+ ",LIN(Z)
"RTN","DGRP6",15,0)
 S Z=4,DGRPX=DGRP(.52) D WW^DGRPV W "          POW: " S X=5,Z1=6 D YN W "From: " S X=7,Z1=13 D DAT W "To: " S X=8,Z1=12 D DAT W "War: ",$S($D(^DIC(22,+$P(DGRPX,"^",6),0)):$P(^(0),"^",2),1:"")
"RTN","DGRP6",16,0)
 S Z=5 D WW^DGRPV W "       Combat: " S X=11,Z1=6 D YN W "From: " S X=13,Z1=13 D DAT W "To: " S X=14,Z1=12 D DAT W "Loc: ",$S($D(^DIC(22,+$P(DGRPX,"^",12),0)):$P(^(0),"^",2),1:"")
"RTN","DGRP6",17,0)
 S Z=6 D WW^DGRPV S X=$P(DGRP(.36),"^",12),XX=$P(DGRP(.36),"^",13)
"RTN","DGRP6",18,0)
 N DGSPACE
"RTN","DGRP6",19,0)
 S DGSPACE=$S($G(X)="0":" ",$G(X)="1":"",1:"   ")
"RTN","DGRP6",20,0)
 W "     Mil Disab Retirement: ",$S(X=0:"NO",X=1:"YES",1:"") W DGSPACE_"        Dischrg Due to Disab: ",$S(XX=0:"NO",XX=1:"YES",1:"")
"RTN","DGRP6",21,0)
 ;W !
"RTN","DGRP6",22,0)
 S Z=7 D WW^DGRPV W "     Dent Inj: " S DGRPX=DGRP(.36),X=8,Z1=28 D YN W "Teeth Extracted: " S X=9,Z1=9 D YN S DGRPD=0 I $P(DGRPX,"^",8)="Y",$P(DGRPX,"^",9)="Y" S DGRPD=1
"RTN","DGRP6",23,0)
 I DGRPD S I1="" F I=0:0 S I=$O(^DPT(DFN,.37,I)) Q:'I  S I1=1,DGRPX=^(I,0) D DEN
"RTN","DGRP6",24,0)
 S Z=8 D WW^DGRPV W " Purple Heart: " S DGRPX=DGRP(.53),X=1 D YN D
"RTN","DGRP6",25,0)
 . I $P($G(DGRPX),U)="Y",($P($G(DGRPX),U,2)]"") W ?26,"PH Status: "_$S($P($G(DGRPX),U,2)="1":"Pending",$P($G(DGRPX),U,2)="2":"In Process",$P($G(DGRPX),U,2)="3":"Confirmed",1:"")
"RTN","DGRP6",26,0)
 I $P($G(DGRPX),U)="N" D
"RTN","DGRP6",27,0)
 . S DGX=$P(DGRPX,U,3)
"RTN","DGRP6",28,0)
 . S DGX=$S($G(DGX)=1:"UNACCEPTABLE DOCUMENTATION",$G(DGX)=2:"NO DOCUMENTATION REC'D",$G(DGX)=3:"ENTERED IN ERROR",$G(DGX)=4:"UNSUPPORTED PURPLE HEART",$G(DGX)=5:"VAMC",$G(DGX)=6:"UNDELIVERABLE MAIL",1:"")
"RTN","DGRP6",29,0)
 . I $G(DGX)]"" W ?26,"PH Remarks: "_$S($G(DGX)]"":$G(DGX),1:"")
"RTN","DGRP6",30,0)
Q K DGRPD,DGRPSV
"RTN","DGRP6",31,0)
 G ^DGRPP
"RTN","DGRP6",32,0)
YN S Z=$S($P(DGRPX,"^",X)="Y":"YES",$P(DGRPX,"^",X)="N":"NO",$P(DGRPX,"^",X)="U":"UNK",1:"") D WW1^DGRPV Q
"RTN","DGRP6",33,0)
DAT S Z=$P(DGRPX,"^",X) I Z']"" S Z=""
"RTN","DGRP6",34,0)
 E  S Z=$$FMTE^XLFDT(Z,"5DZ")
"RTN","DGRP6",35,0)
 D WW1^DGRPV Q
"RTN","DGRP6",36,0)
DEN W !?3," Trt Date: " S X=1,Z1=10 D DAT W "Cond.: ",$E($P(DGRPX,"^",2),1,45) Q
"RTN","DGRP6",37,0)
S N Z,DGRPSB S DGRPSB=+$P(DGRPX,U,DGRPSV+1)  ;Service Branch
"RTN","DGRP6",38,0)
 S Z=$S($D(^DIC(23,DGRPSB,0)):$E($P(^(0),"^",1),1,15),1:DGRPU)
"RTN","DGRP6",39,0)
 I $P($G(^DPT(DFN,.3291)),U,(DGRPSV+1)/5)'="" D
"RTN","DGRP6",40,0)
 . N Z0
"RTN","DGRP6",41,0)
 . ; Component
"RTN","DGRP6",42,0)
 . S Z0=$$SVCCOMP^DGRP6CL($P($G(^DPT(DFN,.3291)),U,(DGRPSV+1)/5))
"RTN","DGRP6",43,0)
 . Q:Z0=""
"RTN","DGRP6",44,0)
 . S Z=Z_"/"_Z0
"RTN","DGRP6",45,0)
 I $$FV^DGRPMS(DGRPSB)=1 S Z=$E(Z_$J("",21),1,21)_"("_$P(DGRP(.321),U,14)_")"
"RTN","DGRP6",46,0)
 W !?4,Z
"RTN","DGRP6",47,0)
 W ?30,$S($P(DGRPX,"^",DGRPSV+4)]"":$P(DGRPX,"^",DGRPSV+4),1:DGRPU)
"RTN","DGRP6",48,0)
 F I=2,3 S X=$P(DGRPX,"^",DGRPSV+I),X=$S(X]"":$$FMTE^XLFDT(X,"5DZ"),1:"UNKNOWN") W ?$S(I=2:46,1:58),X
"RTN","DGRP6",49,0)
 W ?70,$S($D(^DIC(25,+$P(DGRPX,"^",DGRPSV),0)):$E($P(^(0),"^",1),1,9),1:"UNKNOWN") Q
"RTN","DGRP6",50,0)
MR W !?19,"Receiving Military retirement in lieu of VA Compensation." Q
"RTN","DGRP6",51,0)
 ;
"RTN","DGRP6",52,0)
SETLNEX(Z,SEQ,LIN,LENGTH) ;
"RTN","DGRP6",53,0)
 I 'LIN S LIN=1,LIN(1)=""
"RTN","DGRP6",54,0)
 S Z=$E("("_SEQ_") "_Z,1,75)
"RTN","DGRP6",55,0)
 I LENGTH+$L(Z)>$S(LIN<2:49,1:70) S LIN=LIN+1,LIN(LIN)="",LENGTH=0
"RTN","DGRP6",56,0)
 S LIN(LIN)=LIN(LIN)_$S(LENGTH:"    ",1:"")_Z,LENGTH=$L(LIN(LIN))
"RTN","DGRP6",57,0)
 Q
"RTN","DGRP6",58,0)
 ;
"RTN","DGRP6CL")
0^11^B62064109^n/a
"RTN","DGRP6CL",1,0)
DGRP6CL ;ALB/TMK - REGISTRATION SCREEN 6 FIELDS Conflict locations ; 09/15/2005
"RTN","DGRP6CL",2,0)
 ;;5.3;Registration;**689**;Aug 13, 1993;Build 1
"RTN","DGRP6CL",3,0)
 ;
"RTN","DGRP6CL",4,0)
CLLST(DFN,DGCONF,DGPOSS,DGMSE) ;
"RTN","DGRP6CL",5,0)
 ; For patient DFN:
"RTN","DGRP6CL",6,0)
 ; Returns DGCONF array: DGCONF(conf loc)= Start dt^End dt
"RTN","DGRP6CL",7,0)
 ;  or, for multiple OEF/OIF/ UNKNOWN OEF/OIF: DGCONF(conf loc-ien) =
"RTN","DGRP6CL",8,0)
 ;                    Start dt ^ End dt ^ Site source ^ Lock flag
"RTN","DGRP6CL",9,0)
 ;    DGCONF(conflict loc,1)=1 if dts inconsistent w/mse dts
"RTN","DGRP6CL",10,0)
 ; DGPOSS = array of possible conflict locations, based on service
"RTN","DGRP6CL",11,0)
 ;          episode dts DGPOSS(conf loc)=""
"RTN","DGRP6CL",12,0)
 ; DGMSE = array of military svc episodes
"RTN","DGRP6CL",13,0)
 ;          DGMSE(1-3)=fr dt^to dt^branch ien^comp code
"RTN","DGRP6CL",14,0)
 ;
"RTN","DGRP6CL",15,0)
 N DGZ,DGZ0,DGZ1,DG32,DG3291,DIQUIET,FRTO
"RTN","DGRP6CL",16,0)
 S DIQUIET=1 K DGCONF,DGPOSS
"RTN","DGRP6CL",17,0)
 S DG32=$G(^DPT(DFN,.32)),DG3291=$G(^(.3291))
"RTN","DGRP6CL",18,0)
 S DGZ1=0
"RTN","DGRP6CL",19,0)
 F DGZ=1:1:3 S DGZ0=$S(DGZ=1:"5^5^6^7",DGZ=2:"19^10^11^12",1:"20^15^16^17") D
"RTN","DGRP6CL",20,0)
 . Q:$S($P(DG32,U,+DGZ0)="Y":0,1:'$P(DG32,U,+DGZ0))
"RTN","DGRP6CL",21,0)
 . S DGZ1=DGZ1+1,DGMSE(DGZ1)=$P(DG32,U,$P(DGZ0,U,3))_U_$P(DG32,U,$P(DGZ0,U,4))_U_$P(DG32,U,$P(DGZ0,U,2))_U_$P(DG3291,U,DGZ)
"RTN","DGRP6CL",22,0)
 ;
"RTN","DGRP6CL",23,0)
 ; Must chk all possible/on-file conf locs for valid mil svc pd
"RTN","DGRP6CL",24,0)
 ; Extract OEF/OIF data
"RTN","DGRP6CL",25,0)
 F DGZ="OEF","OIF","UNK" S DGCONF(DGZ)=""
"RTN","DGRP6CL",26,0)
 D GET^DGENOEIF(DFN,.DGZ,0,"","")
"RTN","DGRP6CL",27,0)
 S DGZ0=0 F  S DGZ0=$O(DGZ("IEN",DGZ0)) Q:'DGZ0  S DGZ=$G(DGZ("IEN",DGZ0)) D
"RTN","DGRP6CL",28,0)
 . N DGCONFX
"RTN","DGRP6CL",29,0)
 . Q:'$G(DGZ("FR",DGZ0))&'$G(DGZ("TO",DGZ0))
"RTN","DGRP6CL",30,0)
 . S DGCONFX=$P("OIF^OEF^UNK",U,+$G(DGZ("LOC",DGZ0)))_"-"_DGZ,DGCONF=DGCONFX,DGCONF($P(DGCONFX,"-"))=$G(DGCONF($P(DGCONFX,"-")))_DGZ_";"
"RTN","DGRP6CL",31,0)
 . F FRTO=1,0 S $P(DGCONF(DGCONFX),U,$S(FRTO:1,1:2))=$$GETDT^DGRPMS(DFN,DGCONFX,FRTO) I FRTO=0 D CKDT^DGRP6CL1(.DGCONF,.DGMSE,.DGPOSS)
"RTN","DGRP6CL",32,0)
 . S $P(DGCONF(DGCONFX),U,3)=$G(DGZ("SITE",DGZ0))
"RTN","DGRP6CL",33,0)
 . S $P(DGCONF(DGCONFX),U,4)=$G(DGZ("LOCK",DGZ0))
"RTN","DGRP6CL",34,0)
 F DGCONF="OEF","OIF","UNK" D CKDT^DGRP6CL1(.DGCONF,.DGMSE,.DGPOSS)
"RTN","DGRP6CL",35,0)
 F DGCONF="VIET","LEB","GREN","PAN","GULF","SOM","YUG" F FRTO=1,0 S $P(DGCONF(DGCONF),U,$S(FRTO:1,1:2))=$$GETDT^DGRPMS(DFN,DGCONF,FRTO) I FRTO=0 D CKDT^DGRP6CL1(.DGCONF,.DGMSE,.DGPOSS)
"RTN","DGRP6CL",36,0)
 Q
"RTN","DGRP6CL",37,0)
 ;
"RTN","DGRP6CL",38,0)
YN(DGRPX,X) ;Format Yes/No fld in $P(DGRPX,U,X)
"RTN","DGRP6CL",39,0)
 Q $S($P(DGRPX,"^",X)="Y":"YES",$P(DGRPX,"^",X)="N":"NO ",$P(DGRPX,"^",X)="U":"UNK",1:"   ")
"RTN","DGRP6CL",40,0)
 ;
"RTN","DGRP6CL",41,0)
DAT(DGRPX,X,Z1) ; Format dt in $P(DGRPX,U,X) for a length of Z1
"RTN","DGRP6CL",42,0)
 N Z
"RTN","DGRP6CL",43,0)
 S Z=$P(DGRPX,U,X)
"RTN","DGRP6CL",44,0)
 I Z'="" S Z=$$FMTE^XLFDT(Z,"5DZ")
"RTN","DGRP6CL",45,0)
 S:$L(Z)<Z1 Z=$E(Z_$J("",Z1),1,Z1)
"RTN","DGRP6CL",46,0)
 Q Z
"RTN","DGRP6CL",47,0)
 ;
"RTN","DGRP6CL",48,0)
EN(DFN,QUIT) ; Entry from reg screen 6
"RTN","DGRP6CL",49,0)
 N DIPA,DGCONF,DGCONFS,DGCONF1,DGMSE,DGMSG,DGPOSS,DIR,DIE,DR,DA
"RTN","DGRP6CL",50,0)
 ;
"RTN","DGRP6CL",51,0)
 ; Return QUIT=1 if ^ entered
"RTN","DGRP6CL",52,0)
EN1 ; Entry from conf subscreen off reg screen 6
"RTN","DGRP6CL",53,0)
 ; Routine loops until exit/quit from subscreen
"RTN","DGRP6CL",54,0)
 D CLEAR^VALM1
"RTN","DGRP6CL",55,0)
 K DGCONF,DGCONFS,DGPOSS,DGMSE,DGMSG
"RTN","DGRP6CL",56,0)
 N DIR,DTOUT,DUOUT,Z,Z0,Z1,Z2,X,Y,LOOP,DG,DGM,DGZ,DGEG,DGEGS,DGX,DGX1,DG321,DG322,DGCT,DGY,DGY1,DGCTX,SSN
"RTN","DGRP6CL",57,0)
 D CLLST(DFN,.DGCONF,.DGPOSS,.DGMSE)
"RTN","DGRP6CL",58,0)
 I $G(DGRPV) S $E(DGRPVV(6),2,3)="00",DGRPVV(6,"NOEDIT")=1
"RTN","DGRP6CL",59,0)
 I '$G(DGRPV),$E(DGRPVV(6),2,3)="11" S $E(DGRPVV(6),2,3)="00",DGRPVV(6,"NOEDIT")=1
"RTN","DGRP6CL",60,0)
 S DGMSG=0,DGCTX=0
"RTN","DGRP6CL",61,0)
 F Z="OEF","OIF","UNK" D  ; Sort OEF/OIF/ UNKNOWN OEF/OIF
"RTN","DGRP6CL",62,0)
 . ; by reverse from dt within each conf
"RTN","DGRP6CL",63,0)
 . S Z0=Z F  S Z0=$O(DGCONF(Z0)) Q:Z0=""!(Z0'[Z)  S Z2=Z_"-"_(9999999-DGCONF(Z0)) S DGCONFS(Z2)=$P(Z0,"-",2) I 'DGMSG,$G(DGCONF(Z0,1)) S DGMSG=1
"RTN","DGRP6CL",64,0)
 S DG321=$G(^DPT(DFN,.321)),DG322=$G(^(.322))
"RTN","DGRP6CL",65,0)
 ;
"RTN","DGRP6CL",66,0)
 S DIR(0)="SA^",DGCT=0
"RTN","DGRP6CL",67,0)
 S X=$S($D(^DPT(+DFN,0)):^(0),1:""),SSN=$P(X,"^",9),SSN=$E(SSN,1,3)_"-"_$E(SSN,4,5)_"-"_$E(SSN,6,10)
"RTN","DGRP6CL",68,0)
 S DGCT=DGCT+1,DIR("A",DGCT)=$$SSNNM^DGRPU(DFN)
"RTN","DGRP6CL",69,0)
 S DGCT=DGCT+1,DIR("A",DGCT)="",$P(DIR("A",DGCT),"=",81)=""
"RTN","DGRP6CL",70,0)
 S DGCT=DGCT+1,DIR("A",DGCT)=$S($O(DGMSE(0)):"MILITARY SERVICE PERIODS:",1:"NO SERVICE PERIODS FOR THIS PATIENT - NO CONFLICT LOC CAN BE ENTERED")
"RTN","DGRP6CL",71,0)
 S Z=0 F  S Z=$O(DGMSE(Z)) Q:'Z  D
"RTN","DGRP6CL",72,0)
 . S DGCT=DGCT+1,DIR("A",DGCT)=$J("",3)_$E($$EXTERNAL^DILFD(2,.325,"",$P(DGMSE(Z),U,3))_$S($P(DGMSE(Z),U,4)'="":"/"_$$SVCCOMP($P(DGMSE(Z),U,4)),1:"")_$J("",30),1,30)
"RTN","DGRP6CL",73,0)
 . S DIR("A",DGCT)=DIR("A",DGCT)_"  ("_$S($P(DGMSE(Z),U):$$FMTE^XLFDT($P(DGMSE(Z),U),"5DZ"),1:"missing")_"-"_$S($P(DGMSE(Z),U,2):$$FMTE^XLFDT($P(DGMSE(Z),U,2),"5DZ"),1:"missing")_")"
"RTN","DGRP6CL",74,0)
 S DGCT=DGCT+1,DIR("A",DGCT)=" "
"RTN","DGRP6CL",75,0)
 S DGCT=DGCT+1,DIR("A",DGCT)=$J("",24)_"---- CONFLICT LOCATIONS ----"
"RTN","DGRP6CL",76,0)
 S DGCT=DGCT+1,DIR("A",DGCT)=$J("",34)_"FROM"_$J("",9)_"TO"_$J("",7)_"SOURCE (FOR OEF/OIF)"
"RTN","DGRP6CL",77,0)
 ; DGCONF(DGCONF,"OK")=# entries for OEF/OIF/ UNKNOWN OEF/OIF
"RTN","DGRP6CL",78,0)
 ;                     that are site-entered
"RTN","DGRP6CL",79,0)
 ; DGCONF(DGCONF,"OK",entry ien)=display #^formatted from dt^
"RTN","DGRP6CL",80,0)
 ;       formatted to dt^inconsistent flag (valid entries for editing)
"RTN","DGRP6CL",81,0)
 S DGEG=0
"RTN","DGRP6CL",82,0)
 F DGEGS=2,1,3 D
"RTN","DGRP6CL",83,0)
 . S DGCONF=$P("OIF^OEF^UNK",U,DGEGS),DGM=0
"RTN","DGRP6CL",84,0)
 . S DG=$$ISVALID^DGRP6CL2(.DGCONF,.DGPOSS)
"RTN","DGRP6CL",85,0)
 . S DGEG=DGEG+1
"RTN","DGRP6CL",86,0)
 . S DGCT=DGCT+1,DGCTX=DGCT S DIR("A",DGCT)="   "_$E(DG,1)_DGEG_$E(DG,2)_"  -        "_$P(DGCONF,"-")_": "_$$YN($S(DGCONF(DGCONF):"Y",'$D(^DPT(DFN,.3215,0)):"",1:"N"),1)
"RTN","DGRP6CL",87,0)
 . I $G(DGCONF(DGCONF))!$D(DGPOSS(DGCONF)) I '$G(DGRPV),$G(DGCONF(DGCONF,"VEDIT"))'=2,'$G(DGCONF(DGCONF,"NOEDIT")) S:DGCONF'="UNK" DIR(0)=DIR(0)_DGEG_":"_DGCONF_";"
"RTN","DGRP6CL",88,0)
 . S (DGZ,DGCONFS)=DGCONF F  S DGCONFS=$O(DGCONFS(DGCONFS)) Q:DGCONFS=""!(DGCONFS'[DGZ)  D
"RTN","DGRP6CL",89,0)
 .. N DGUN,DGIEN
"RTN","DGRP6CL",90,0)
 .. S DGIEN=DGCONFS(DGCONFS),DGCONF=DGZ_"-"_DGIEN,DGCONF1=DGZ,DGM=DGM+1
"RTN","DGRP6CL",91,0)
 .. I $G(DGCONF(DGCONF,1)),DGCTX S $E(DIR("A",DGCTX),1,3)="***"
"RTN","DGRP6CL",92,0)
 .. S DG=$$ISVALID^DGRP6CL2(.DGCONF,.DGPOSS)
"RTN","DGRP6CL",93,0)
 .. S DGUN=$S($G(DGCONF(DGCONF,"NOEDIT")):1,1:0)
"RTN","DGRP6CL",94,0)
 .. I 'DGUN S DGCONF(DGCONF1,"OK")=$G(DGCONF(DGCONF1,"OK"))+1,DGCONF(DGCONF1,"OK",DGIEN)=DGM_U_$$FMTE^XLFDT($P(DGCONF(DGCONF),U),"5DZ")_U_$$FMTE^XLFDT($P(DGCONF(DGCONF),U,2),"5DZ")
"RTN","DGRP6CL",95,0)
 .. I DGM>1 S DGCT=DGCT+1
"RTN","DGRP6CL",96,0)
 .. S DIR("A",DGCT)=$S(DGM>1:$J("",27-$L(DGM)),1:DIR("A",DGCT)_" ")_"("_DGM_")  "_$E($$DAT(DGCONF(DGCONF),1,13)_$J("",12),1,12)_$E($$DAT(DGCONF(DGCONF),2,11)_$J("",10),1,10)_"   "
"RTN","DGRP6CL",97,0)
 .. S DIR("A",DGCT)=DIR("A",DGCT)_$S($P(DGCONF(DGCONF),U,3)="CEV":"",1:"Station #")_$E($P(DGCONF(DGCONF),U,3)_$J("",$S('DGUN:6,1:3)),1,$S('DGUN:6,1:3))_$S(DGUN:" (No Edit)",1:"")
"RTN","DGRP6CL",98,0)
 D LOOPCNF^DGRP6CL1(.DGCONF,.DGPOSS,.DIR)
"RTN","DGRP6CL",99,0)
 S DGCT=DGCT+1,DIR("A",DGCT)=" "
"RTN","DGRP6CL",100,0)
 I $G(DGMSG) S DGCT=DGCT+1,DIR("A",DGCT)="*** ==>OEF/OIF Dates are inconsistent with veteran's military service episodes"
"RTN","DGRP6CL",101,0)
 S DIR("A")="SELECT THE NUMBER OF A CONFLICT LOCATION OR (Q)UIT: "
"RTN","DGRP6CL",102,0)
 S DIR(0)=DIR(0)_"Q:QUIT"
"RTN","DGRP6CL",103,0)
 S DIR("?")="^D HELP^DGRP6CL1($P(DIR(0),U,2))"
"RTN","DGRP6CL",104,0)
 S DIR("B")="QUIT"
"RTN","DGRP6CL",105,0)
 D ^DIR K DIR
"RTN","DGRP6CL",106,0)
 I $D(DUOUT)!$D(DTOUT)!(Y="Q") S:Y'="Q" QUIT=1 G QUIT
"RTN","DGRP6CL",107,0)
 S DGY=Y,DGY1=$S(Y=2:1,Y=1:2,1:Y)
"RTN","DGRP6CL",108,0)
 I DGY<4 S DGCONF=""
"RTN","DGRP6CL",109,0)
 I DGY'<4 D
"RTN","DGRP6CL",110,0)
 . S DGCONF=$P("OEF^OIF^UNK^VIET^LEB^GREN^PAN^GULF^SOM^YUG",U,DGY)
"RTN","DGRP6CL",111,0)
 . I $G(DGCONF(DGCONF,1)) W !!,"WARNING - THIS CONFLICT IS INCONSISTENT WITH MILITARY SERVICE DATA",!
"RTN","DGRP6CL",112,0)
 . S DIE=2,DA=DFN,DR=$P($T(@DGCONF),";;",2) D:DR'="" ^DIE K DIE,DA,DR
"RTN","DGRP6CL",113,0)
 I DGY=1!(DGY=2) D
"RTN","DGRP6CL",114,0)
 . S DGCONF=$P("OEF^OIF",U,DGY)
"RTN","DGRP6CL",115,0)
 . I '$G(DGCONF(DGCONF,"OK")),$G(DGCONF(DGCONF,"VEDIT"))'=2 D ADDCFL^DGRP6CL1(DFN,DGY1,DGCONF) Q  ; Add new only valid action
"RTN","DGRP6CL",116,0)
 . I $G(DGCONF(DGCONF,"VEDIT"))=1 S DIR("A")="DO YOU WANT TO (A)DD OR (E)DIT "_DGCONF_" CONFLICT DATA?: ",DIR(0)="SA^A:ADD;E:EDIT",DIR("B")="ADD" D ^DIR K DIR
"RTN","DGRP6CL",117,0)
 . I $G(DGCONF(DGCONF,"VEDIT"))=2,$G(DGCONF(DGCONF,"OK")) S DIR("A")="DO YOU WANT TO EDIT "_DGCONF_" CONFLICT DATA?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR S Y=$S(Y=1:"E",1:Y)
"RTN","DGRP6CL",118,0)
 . Q:$D(DTOUT)!$D(DUOUT)
"RTN","DGRP6CL",119,0)
 . I Y="A" D ADDCFL^DGRP6CL1(DFN,DGY1,DGCONF) Q
"RTN","DGRP6CL",120,0)
 . I Y="E" D
"RTN","DGRP6CL",121,0)
 .. N DGXREF,IEN,DIR,X,Y
"RTN","DGRP6CL",122,0)
 .. I DGCONF(DGCONF,"OK")=1 S IEN=+$O(DGCONF(DGCONF,"OK",0)) I IEN D EDCFL^DGRP6CL1(DFN,IEN,$G(DGCONF(DGCONF,"VEDIT"))) Q
"RTN","DGRP6CL",123,0)
 .. S DIR(0)="SA^",DIR("A")="SELECT THE # OF THE "_DGCONF_" CONFLICT PERIOD TO EDIT: ",DIR("A",1)=" "
"RTN","DGRP6CL",124,0)
 .. S Z=0 F  S Z=$O(DGCONF(DGCONF,"OK",Z)) Q:'Z  S Z0=DGCONF(DGCONF,"OK",Z),DIR(0)=DIR(0)_+Z0_":"_$P(Z0,U,2)_$S($P(Z0,U,3)'="":"-"_$P(Z0,U,3),1:"")_";",DGXREF(+Z0)=Z
"RTN","DGRP6CL",125,0)
 .. S DIR(0)=DIR(0)_"Q:QUIT"
"RTN","DGRP6CL",126,0)
 .. D ^DIR K DIR
"RTN","DGRP6CL",127,0)
 .. I Y D EDCFL^DGRP6CL1(DFN,+$G(DGXREF(+Y)),$G(DGCONF(DGCONF,"VEDIT")))
"RTN","DGRP6CL",128,0)
 G EN1
"RTN","DGRP6CL",129,0)
 ;
"RTN","DGRP6CL",130,0)
QUIT Q
"RTN","DGRP6CL",131,0)
 ;
"RTN","DGRP6CL",132,0)
EN2 ; Consistency checker re-edit entrypoint for OEF/OIF data
"RTN","DGRP6CL",133,0)
 N DGOEIF,DGZ,DGQUIT,Z,Z0,Y
"RTN","DGRP6CL",134,0)
 D GET^DGENOEIF(DFN,.DGOEIF,2,"",1)
"RTN","DGRP6CL",135,0)
 I $G(DGOEIF("COUNT"))&($O(DGOEIF("OIF",0))!$O(DGOEIF("OEF",0))) D
"RTN","DGRP6CL",136,0)
 . F Z="OEF","OIF" S Z0=0 F  S Z0=$O(DGOEIF(Z,Z0)) Q:'Z0  I $G(DGOEIF(Z,Z0,"IEN")) S DGZ(DGOEIF(Z,Z0,"IEN"))=""
"RTN","DGRP6CL",137,0)
 . S (DGQUIT,DGZ)=0 F  S DGZ=$O(DGZ(DGZ)) Q:'DGZ  D  Q:DGQUIT
"RTN","DGRP6CL",138,0)
 .. N DGX,DA,DIE,DR,X
"RTN","DGRP6CL",139,0)
 .. S DGX=$G(^DPT(DFN,.3215,DGZ,0))
"RTN","DGRP6CL",140,0)
 .. W !!,"OEF/OIF CONFLICT: ",$$EXTERNAL^DILFD(2.3215,.01,"",$P(DGX,U)),"  FROM: "_$$EXTERNAL^DILFD(2.3215,.02,"",$P(DGX,U,2)),"  TO: "_$$EXTERNAL^DILFD(2.3215,.03,"",$P(DGX,U,3))
"RTN","DGRP6CL",141,0)
 .. S DA=DGZ,DA(1)=DFN,DIE="^DPT("_DA(1)_",.3215,",DR=".01;.02R;.03R" D ^DIE I $D(Y) S DGQUIT=1
"RTN","DGRP6CL",142,0)
 Q
"RTN","DGRP6CL",143,0)
 ;
"RTN","DGRP6CL",144,0)
SVCCOMP(X) ; Returns display text for service component
"RTN","DGRP6CL",145,0)
 Q $S(X="R":"REGULAR",X="V":"RESERVE",X="G":"GUARD",1:"")
"RTN","DGRP6CL",146,0)
 ;
"RTN","DGRP6CL",147,0)
VIET ;;.32101//NO;S:X'="Y" Y="@64";.32104;.32105;@64;
"RTN","DGRP6CL",148,0)
LEB ;;.3221//NO;S:X'="Y" Y="@67";.3222;Q;.3223;@67;
"RTN","DGRP6CL",149,0)
GREN ;;.3224//NO;S:X'="Y" Y="@68";.3225;Q;.3226;@68;
"RTN","DGRP6CL",150,0)
PAN ;;.3227//NO;S:X'="Y" Y="@69";.3228;Q;.3229;@69;
"RTN","DGRP6CL",151,0)
GULF ;;.32201//NO;S:X'="Y" Y="@610";.322011;Q;.322012;@610;
"RTN","DGRP6CL",152,0)
SOM ;;.322016//NO;S:X'="Y" Y="@611";.322017;Q;.322018;@611;
"RTN","DGRP6CL",153,0)
YUG ;;.322019//NO;S:X'="Y" Y="@615";.32202;Q;.322021;@615;
"RTN","DGRP6CL",154,0)
OEF ;;
"RTN","DGRP6CL",155,0)
OIF ;;
"RTN","DGRP6CL",156,0)
UNK ;;
"RTN","DGRP6CL",157,0)
 ;;
"RTN","DGRP6CL1")
0^13^B35021800^n/a
"RTN","DGRP6CL1",1,0)
DGRP6CL1 ;ALB/TMK - REGISTRATION SCREEN 6 FLDS Conflict loc (cont) ; 09/15/2005
"RTN","DGRP6CL1",2,0)
 ;;5.3;Registration;**689**;Aug 13, 1993;Build 1
"RTN","DGRP6CL1",3,0)
 ;
"RTN","DGRP6CL1",4,0)
DELCFL(DFN) ; Delete all existing OEF/OIF episodes for a patient
"RTN","DGRP6CL1",5,0)
 ; DFN = patient ien
"RTN","DGRP6CL1",6,0)
 N DA,DIK,X,Y,DG
"RTN","DGRP6CL1",7,0)
 S DG=0 F  S DG=$O(^DPT(DFN,.3215,DG)) Q:'DG  I $G(^(DG,0))'="" S DA(1)=DFN,DA=DG,DIK="^DPT("_DA(1)_",.3215," D ^DIK
"RTN","DGRP6CL1",8,0)
 Q
"RTN","DGRP6CL1",9,0)
 ;
"RTN","DGRP6CL1",10,0)
EDCFL(DFN,IEN,VEDIT) ; Edit OEF/OIF conflict from/to dates only or delete entry
"RTN","DGRP6CL1",11,0)
 N DIE,DA,X,Y,DR,DIPA
"RTN","DGRP6CL1",12,0)
 I $G(VEDIT)=2 W !!,"WARNING - THIS CONFLICT IS INCONSISTENT WITH MILITARY SERVICE DATA",!
"RTN","DGRP6CL1",13,0)
 Q:$P($G(^DPT(DFN,.3215,IEN,0)),U,4)
"RTN","DGRP6CL1",14,0)
 S DIPA(.01)=+$G(^DPT(DFN,.3215,IEN,0))
"RTN","DGRP6CL1",15,0)
 S DA(1)=DFN,DA=IEN,DIE="^DPT("_DA(1)_",.3215,",DR=".05///NOW;@10;.01;I X'=DIPA(.01) S Y=""@50"";.02R;.03R;S Y=""@99"";@50;D NOCHG^DGRP6CL1;.01////"_$G(DIPA(.01))_";S Y=""@10"";@99"
"RTN","DGRP6CL1",16,0)
 D ^DIE
"RTN","DGRP6CL1",17,0)
 Q
"RTN","DGRP6CL1",18,0)
 ;
"RTN","DGRP6CL1",19,0)
ADDCFL(DFN,DGY,DGCONF,SRC) ; Add a new OEF/OIF conflict entry
"RTN","DGRP6CL1",20,0)
 ; DFN = patient ien
"RTN","DGRP6CL1",21,0)
 ; DGY = 1 for OIF, 2 for OEF, 3 for UNKNOWN OEF/OIF
"RTN","DGRP6CL1",22,0)
 ; DGCONF = the conflict record being added (OEF/OIF/ UNKNOWN OEF/OIF)
"RTN","DGRP6CL1",23,0)
 ; SRC = 1 if HEC data (locked) or 0 if site entered
"RTN","DGRP6CL1",24,0)
 ;   If SRC is passed by reference, it must contain the values needed
"RTN","DGRP6CL1",25,0)
 ;   to 'stuff' a new record into the file at the fld # subscript level
"RTN","DGRP6CL1",26,0)
 ;   SRC(.02)=from dt  SRC(.03)=to dt  SRC(.04)=1 if HEC source of data
"RTN","DGRP6CL1",27,0)
 ;   SRC("OK") is returned as 1 if filing was successful or as the
"RTN","DGRP6CL1",28,0)
 ;       reason why the data was not filed if unsuccessful
"RTN","DGRP6CL1",29,0)
 ;
"RTN","DGRP6CL1",30,0)
 N DGFORCE,DIC,DA,DO,DD,X,Y,DIR,DIK,Z0
"RTN","DGRP6CL1",31,0)
 S DGFORCE=$S($O(SRC("")):1,1:0)
"RTN","DGRP6CL1",32,0)
 I DGFORCE,('$G(SRC(.01))!'$G(SRC(.02))!'$G(SRC(.03))) S SRC("OK")="MISSING DATA" Q
"RTN","DGRP6CL1",33,0)
 S X=DGY,DIC("DR")=".05///NOW;.04////"_+$G(SRC)
"RTN","DGRP6CL1",34,0)
 Q:'X
"RTN","DGRP6CL1",35,0)
 I 'DGFORCE D
"RTN","DGRP6CL1",36,0)
 . W !!,"Adding NEW "_DGCONF_" conflict data ...",!
"RTN","DGRP6CL1",37,0)
 . S DIC("DR")=DIC("DR")_";.06////"_$$GETSITE^DGMTU4(.DUZ)_";.02R;.03R"
"RTN","DGRP6CL1",38,0)
 ;
"RTN","DGRP6CL1",39,0)
 I DGFORCE D
"RTN","DGRP6CL1",40,0)
 . S DIC("DR")=DIC("DR")_";.02///"_SRC(.02)_";.03///"_SRC(.03)
"RTN","DGRP6CL1",41,0)
 ;
"RTN","DGRP6CL1",42,0)
 S DIC(0)="L",DA(1)=DFN,DIC="^DPT("_DA(1)_",.3215," K DO,DD D FILE^DICN
"RTN","DGRP6CL1",43,0)
 S Z0=$G(^DPT(DFN,.3215,+Y,0))
"RTN","DGRP6CL1",44,0)
 I Z0'="",'$P(Z0,U,2)!'$P(Z0,U,3) D  Q
"RTN","DGRP6CL1",45,0)
 . S DA=+Y,DA(1)=DFN,DIK="^DPT("_DA(1)_",.3215," D ^DIK
"RTN","DGRP6CL1",46,0)
 . I DGFORCE S SRC("OK")="DATA NOT FILED - BAD DATA"
"RTN","DGRP6CL1",47,0)
 . I 'DGFORCE S DIR("A",1)="BAD DATA ENCOUNTERED.  NO NEW CONFLICT DATA FILED.",DIR("A")="PRESS RETURN TO CONTINUE: ",DIR(0)="EA" D ^DIR K DIR
"RTN","DGRP6CL1",48,0)
 I DGFORCE,'$D(SRC("OK")) S SRC("OK")=1
"RTN","DGRP6CL1",49,0)
 Q
"RTN","DGRP6CL1",50,0)
 ;
"RTN","DGRP6CL1",51,0)
CKDT(DGCONF,DGMSE,DGPOSS) ; Check dates for conflict in DGCONF(DGCONF)=
"RTN","DGRP6CL1",52,0)
 ; fr date^to date are valid against military service episodes (DGMSE)
"RTN","DGRP6CL1",53,0)
 ; for the patient and if no dates, if the MSE's would support that
"RTN","DGRP6CL1",54,0)
 ; conflict being entered.
"RTN","DGRP6CL1",55,0)
 ; Assume DFN exists
"RTN","DGRP6CL1",56,0)
 ; FUNCTION returns
"RTN","DGRP6CL1",57,0)
 ;     DGCONF(DGCONF,1)=1 if MSE inconsistency found,0 if none
"RTN","DGRP6CL1",58,0)
 ;     Also returns DGPOSS(DGCONF) if patient has no dates for the
"RTN","DGRP6CL1",59,0)
 ;       conflict, but the MSE's indicate entry of the conflict would
"RTN","DGRP6CL1",60,0)
 ;       not be inconsistent.
"RTN","DGRP6CL1",61,0)
 ;
"RTN","DGRP6CL1",62,0)
 N Z,CRNG,DGOK,FAIL
"RTN","DGRP6CL1",63,0)
 S CRNG=$$GETCNFDT^DGRPDT(DGCONF)
"RTN","DGRP6CL1",64,0)
 I $TR($G(DGCONF(DGCONF)),U)="" D  Q  ; Conflict pd not prev entered
"RTN","DGRP6CL1",65,0)
 . S:$S(DGCONF="OEF"!(DGCONF="OIF")!(DGCONF="UNK"):0,1:1) DGCONF(DGCONF)=""
"RTN","DGRP6CL1",66,0)
 . ; Check if conflict period COULD be valid based on MSE
"RTN","DGRP6CL1",67,0)
 . S Z=0 F  S Z=$O(DGMSE(Z)) Q:'Z  D  Q:$D(DGPOSS(DGCONF))
"RTN","DGRP6CL1",68,0)
 .. I $S($P(DGMSE(Z),U)>$P(CRNG,U,2):1,$P(DGMSE(Z),U,2)<$P(CRNG,U):1,1:0) Q  ; Not within valid for the mil svc pd for pt
"RTN","DGRP6CL1",69,0)
 .. S DGPOSS(DGCONF)=""
"RTN","DGRP6CL1",70,0)
 . ;
"RTN","DGRP6CL1",71,0)
 S DGOK=1
"RTN","DGRP6CL1",72,0)
 I $O(DGMSE(""))="" S DGOK=0,FAIL=1
"RTN","DGRP6CL1",73,0)
 I DGOK F Z=0,1 I '$$VALCON^DGRPMS(DFN,DGCONF,$S($P(DGCONF(DGCONF),U,Z+1):$P(DGCONF(DGCONF),U,Z+1),1:DT),Z,.FAIL) S DGOK=0 Q
"RTN","DGRP6CL1",74,0)
 S DGCONF(DGCONF,1)=$S(DGOK:"",$G(FAIL):1,1:0) ; MSE Inconsistency flag
"RTN","DGRP6CL1",75,0)
 ;
"RTN","DGRP6CL1",76,0)
 Q
"RTN","DGRP6CL1",77,0)
 ;
"RTN","DGRP6CL1",78,0)
NOCHG ;Only from,to dates can be chged on locally entered OEF/OIF conflict data
"RTN","DGRP6CL1",79,0)
 N DIR,X,Y
"RTN","DGRP6CL1",80,0)
 S DIR("A",1)="You may not change this field - but you may delete it",DIR("A")="Press RETURN to continue ",DIR(0)="EA" W ! D ^DIR K DIR W !
"RTN","DGRP6CL1",81,0)
 Q
"RTN","DGRP6CL1",82,0)
 ;
"RTN","DGRP6CL1",83,0)
HELP(SET) ;Help text for reader prompt for conflict to add/edit/delete
"RTN","DGRP6CL1",84,0)
 N Z,Z0
"RTN","DGRP6CL1",85,0)
 W !!,"Those conflicts with a number enclosed in brackets ""[]"" are valid",!,"for the veteran while those enclosed in arrows ""<>"" are not.",!
"RTN","DGRP6CL1",86,0)
 W !,$J("",5),"Select one of the following:",!
"RTN","DGRP6CL1",87,0)
 F Z=1:1:$L(SET,";") S Z0=$P(SET,";",Z) I Z0'="" W !,$J("",15),$E($P(Z0,":")_$J("",10),1,10)_$P(Z0,":",2)
"RTN","DGRP6CL1",88,0)
 W !
"RTN","DGRP6CL1",89,0)
 N DIR,X,Y
"RTN","DGRP6CL1",90,0)
 S DIR(0)="EA",DIR("A")="PRESS RETURN TO CONTINUE: " D ^DIR
"RTN","DGRP6CL1",91,0)
 Q
"RTN","DGRP6CL1",92,0)
 ;
"RTN","DGRP6CL1",93,0)
LOOPCNF(DGCONF,DGPOSS,DIR) ; Loop thru non-OEF/OIF conflicts
"RTN","DGRP6CL1",94,0)
 ; DGCONF,DGPOSS = arrays from DGRP6CL containing conflict data
"RTN","DGRP6CL1",95,0)
 ; Returns DIR array for screen display of conflicts
"RTN","DGRP6CL1",96,0)
 N LOOP,DGX,DGX1
"RTN","DGRP6CL1",97,0)
 S DGX="VIET;4;Vietnam^LEB;5;Lebanon^GREN;6;Grenada^PAN;7;Panama^GULF;8;Gulf War^SOM;9;Somalia^YUG;10;Yugoslavia"
"RTN","DGRP6CL1",98,0)
 F LOOP=1:1 Q:$P(DGX,U,LOOP)=""  S DGX1=$P(DGX,U,LOOP) D
"RTN","DGRP6CL1",99,0)
 . S DGCONF=$P(DGX1,";"),DG=$$ISVALID^DGRP6CL2(.DGCONF,.DGPOSS) I $G(DGCONF(DGCONF,"VEDIT")) S DIR(0)=DIR(0)_$P(DGX1,";",2)_":"_$P(DGX1,";",3)_";"
"RTN","DGRP6CL1",100,0)
 . S DGCT=DGCT+1,DIR("A",DGCT)=$S($G(DGCONF(DGCONF,1)):"***",1:"   ")_$E(DG,1)_$P(DGX1,";",2)_$E(DG,2)_$S($L($P(DGX1,";",2))<2:" ",1:"")_" -"_$J("",11-$L($P(DGX1,";",3)))_$P(DGX1,";",3)_": "
"RTN","DGRP6CL1",101,0)
 . I $P(DGX1,";",2)=4 S DIR("A",DGCT)=DIR("A",DGCT)_$$YN^DGRP6CL(DG321,1)_$J("",6)_$E($$DAT^DGRP6CL(DG321,4,13)_$J("",12),1,12)_$E($$DAT^DGRP6CL(DG321,5,11)_$J("",12),1,12)
"RTN","DGRP6CL1",102,0)
 . I $P(DGX1,";",2)=5 S DIR("A",DGCT)=DIR("A",DGCT)_$$YN^DGRP6CL(DG322,1)_$J("",6)_$E($$DAT^DGRP6CL(DG322,2,13)_$J("",12),1,12)_$E($$DAT^DGRP6CL(DG322,3,11)_$J("",12),1,12)
"RTN","DGRP6CL1",103,0)
 . I $P(DGX1,";",2)=6 S DIR("A",DGCT)=DIR("A",DGCT)_$$YN^DGRP6CL(DG322,4)_$J("",6)_$E($$DAT^DGRP6CL(DG322,5,13)_$J("",12),1,12)_$E($$DAT^DGRP6CL(DG322,6,11)_$J("",12),1,12)
"RTN","DGRP6CL1",104,0)
 . I $P(DGX1,";",2)=7 S DIR("A",DGCT)=DIR("A",DGCT)_$$YN^DGRP6CL(DG322,7)_$J("",6)_$E($$DAT^DGRP6CL(DG322,8,13)_$J("",12),1,12)_$E($$DAT^DGRP6CL(DG322,9,11)_$J("",12),1,12)
"RTN","DGRP6CL1",105,0)
 . I $P(DGX1,";",2)=8 S DIR("A",DGCT)=DIR("A",DGCT)_$$YN^DGRP6CL(DG322,10)_$J("",6)_$E($$DAT^DGRP6CL(DG322,11,13)_$J("",12),1,12)_$E($$DAT^DGRP6CL(DG322,12,11)_$J("",12),1,12)
"RTN","DGRP6CL1",106,0)
 . I $P(DGX1,";",2)=9 S DIR("A",DGCT)=DIR("A",DGCT)_$$YN^DGRP6CL(DG322,16)_$J("",6)_$E($$DAT^DGRP6CL(DG322,17,13)_$J("",12),1,12)_$E($$DAT^DGRP6CL(DG322,18,11)_$J("",12),1,12)
"RTN","DGRP6CL1",107,0)
 . I $P(DGX1,";",2)=10 S DIR("A",DGCT)=DIR("A",DGCT)_$$YN^DGRP6CL(DG322,19)_$J("",6)_$E($$DAT^DGRP6CL(DG322,20,13)_$J("",12),1,12)_$E($$DAT^DGRP6CL(DG322,21,11)_$J("",12),1,12)
"RTN","DGRP6CL1",108,0)
 ;
"RTN","DGRP6CL1",109,0)
 Q
"RTN","DGRP6CL1",110,0)
 ;
"RTN","DGRP6CL2")
0^30^B18050719^n/a
"RTN","DGRP6CL2",1,0)
DGRP6CL2 ;ALB/TMK - REGISTRATION SCREEN 6 FLDS Conflict loc (cont) ; 09/15/2005
"RTN","DGRP6CL2",2,0)
 ;;5.3;Registration;**689**;Aug 13, 1993;Build 1
"RTN","DGRP6CL2",3,0)
 ;
"RTN","DGRP6CL2",4,0)
ISVALID(DGCONF,DGPOSS) ; Configure delimiter for edit/no edit
"RTN","DGRP6CL2",5,0)
 ; DGCONF = the conflict location or location multiple entry
"RTN","DGRP6CL2",6,0)
 ; DGCONF(DGCONF) is the array returned from CLLST^DGRP6CL call
"RTN","DGRP6CL2",7,0)
 ; DGPOSS(DGCONF) is the array returned from CLLST^DGRP6CL call
"RTN","DGRP6CL2",8,0)
 ; Assume DFN exists
"RTN","DGRP6CL2",9,0)
 ;
"RTN","DGRP6CL2",10,0)
 ; RETURNS:
"RTN","DGRP6CL2",11,0)
 ; DGCONF(DGCONF,"NOEDIT"))=1 if data is locked (no editing of HEC data or if VIEW only)
"RTN","DGRP6CL2",12,0)
 ; DGCONF(DGCONF,"VEDIT"))=1 if the data is valid for entry/edit
"RTN","DGRP6CL2",13,0)
 ;                        =2 if data valid but only for edit/delete
"RTN","DGRP6CL2",14,0)
 ; Function returns either  [] for editable or <> for not editable.
"RTN","DGRP6CL2",15,0)
 ;
"RTN","DGRP6CL2",16,0)
 N DG,Z,DGCONF1,DGLOCK
"RTN","DGRP6CL2",17,0)
 S DGLOCK=$S('$G(DGRPVV(6,"NOEDIT")):+$P(DGCONF(DGCONF),U,4),1:1)
"RTN","DGRP6CL2",18,0)
 S DGCONF1=$E(DGCONF,1,3)
"RTN","DGRP6CL2",19,0)
 I DGLOCK S DGCONF(DGCONF,"NOEDIT")=1
"RTN","DGRP6CL2",20,0)
 I $G(DGCONF(DGCONF))'=""!$D(DGPOSS(DGCONF)) D
"RTN","DGRP6CL2",21,0)
 . Q:DGCONF1="UNK"!DGLOCK  ; Never editable
"RTN","DGRP6CL2",22,0)
 . I DGCONF="OEF"!(DGCONF="OIF")!$D(DGPOSS(DGCONF)) S DGCONF(DGCONF,"VEDIT")=$S('$G(DGCONF(DGCONF,1)):1,1:2)
"RTN","DGRP6CL2",23,0)
 . I "^OEF^OIF^"[(U_DGCONF1_U) D:DGCONF=DGCONF1&($G(DGCONF(DGCONF,"VEDIT"))=2)  Q
"RTN","DGRP6CL2",24,0)
 .. N OK
"RTN","DGRP6CL2",25,0)
 .. Q:$G(DGCONF(DGCONF,"VEDIT"))'=2
"RTN","DGRP6CL2",26,0)
 .. S OK=0
"RTN","DGRP6CL2",27,0)
 .. S Z=DGCONF F  S Z=$O(DGCONF(Z)) Q:Z=""!($E(Z,1,3)'=$E(DGCONF,1,3))  I '$P($G(DGCONF(Z)),U,4) S OK=1 Q
"RTN","DGRP6CL2",28,0)
 .. I 'OK S DGCONF(DGCONF,"NOEDIT")=1 K DGCONF(DGCONF,"VEDIT")
"RTN","DGRP6CL2",29,0)
 . ;
"RTN","DGRP6CL2",30,0)
 . S DGCONF(DGCONF,"VEDIT")=$S('$G(DGCONF(DGCONF,1)):1,1:2)
"RTN","DGRP6CL2",31,0)
 ;
"RTN","DGRP6CL2",32,0)
 I '$G(DGCONF(DGCONF,"VEDIT")),'DGLOCK D
"RTN","DGRP6CL2",33,0)
 . I $S(DGCONF1="OEF"!(DGCONF1="OIF")!(DGCONF1="UNK"):0,1:1) D  Q
"RTN","DGRP6CL2",34,0)
 .. S DG=$S(DGCONF="VIET":$G(^DPT(DFN,.321)),1:$G(^DPT(DFN,.322)))
"RTN","DGRP6CL2",35,0)
 .. I "NO"'[$TR($$YN(DG,$S(DGCONF="VIET":6,DGCONF="LEB":1,DGCONF="GREN":4,DGCONF="PAN":7,DGCONF="GULF":10,DGCONF="SOM":16,DGCONF="YUG":19,1:""))," ") S DGCONF(DGCONF,"VEDIT")=$S('$G(DGCONF(DGCONF,1)):1,1:2) Q
"RTN","DGRP6CL2",36,0)
 .. S DGCONF(DGCONF,"NOEDIT")=1 ;,DGCONF(DGCONF,1)=1
"RTN","DGRP6CL2",37,0)
 Q $S($G(DGCONF(DGCONF,"VEDIT")):"[]",1:"<>")
"RTN","DGRP6CL2",38,0)
 ;
"RTN","DGRP6CL2",39,0)
YN(DGRPX,X) ;Format Yes/No fld in $P(DGRPX,U,X)
"RTN","DGRP6CL2",40,0)
 ;
"RTN","DGRP6CL2",41,0)
 Q $S($P(DGRPX,"^",X)="Y":"YES",$P(DGRPX,"^",X)="N":"NO ",$P(DGRPX,"^",X)="U":"UNK",1:"   ")
"RTN","DGRP6CL2",42,0)
 ;
"RTN","DGRP6CL2",43,0)
CL(DFN,LIN) ; Format conflict locations on file for the pt
"RTN","DGRP6CL2",44,0)
 N DGCONF,DGCONFX,DGLIM,DGOEIF,DGCT,Z,Z0,Z1,Z2,Z3
"RTN","DGRP6CL2",45,0)
 K LIN
"RTN","DGRP6CL2",46,0)
 S (DGLIM,DGCT,LIN)=0,LIN(0)=0
"RTN","DGRP6CL2",47,0)
 F Z="OEF","OIF","UNK" S LIN(Z)=0
"RTN","DGRP6CL2",48,0)
 D CLLST^DGRP6CL(DFN,.DGCONF,"")
"RTN","DGRP6CL2",49,0)
 ; Make OEF/OIF/ UNKNOWN OEF/OIF display in reverse date order
"RTN","DGRP6CL2",50,0)
 ;  within conflict & only display the first 4 of all the vet's conflicts
"RTN","DGRP6CL2",51,0)
 ;  with data
"RTN","DGRP6CL2",52,0)
 S Z2=0
"RTN","DGRP6CL2",53,0)
 F Z0="OEF","OIF","UNK" S Z1=Z0,Z2=Z2+1 I $D(DGCONF(Z0)) M DGCONF(Z2_Z0)=DGCONF(Z0) F  S Z1=$O(DGCONF(Z1)) Q:Z1=""!(Z1'[Z0)  I DGCONF(Z1) M DGCONF(Z2_Z0_"-"_(9999999-$P(DGCONF(Z1),U)))=DGCONF(Z1) K DGCONF(Z1)
"RTN","DGRP6CL2",54,0)
 S DGCONF="" F  S DGCONF=$O(DGCONF(DGCONF)) Q:DGCONF=""  S DGCONFX=$S($E(DGCONF)?1N:$E(DGCONF,2,$L(DGCONF)),1:DGCONF) I DGCONF(DGCONF)'=""!$D(DGPOSS(DGCONFX)) D  I DGCT=5 S DGLIM=1 Q
"RTN","DGRP6CL2",55,0)
 . S Z3=$E(DGCONFX,1,3)
"RTN","DGRP6CL2",56,0)
 . S Z0=$S(Z3'="UNK":Z3,1:"UNK OEF/OIF"),DGOEIF=$S(Z3="OEF"!(Z3="OIF")!(Z3="UNK"):1,1:0)
"RTN","DGRP6CL2",57,0)
 . I DGOEIF Q:DGCONFX'["-"
"RTN","DGRP6CL2",58,0)
 . I DGOEIF D
"RTN","DGRP6CL2",59,0)
 .. S LIN=LIN+1,LIN(Z3)=LIN(Z3)+1,LIN(LIN)=Z0
"RTN","DGRP6CL2",60,0)
 . E  D
"RTN","DGRP6CL2",61,0)
 .. S LIN=LIN+1,LIN(LIN)=$S(DGCONFX="VIET":"Vietnam",DGCONFX="LEB":"Lebanon",DGCONFX="GREN":"Grenada",DGCONFX="PAN":"Panama",DGCONFX="GULF":"Gulf War",DGCONFX="SOM":"Somalia",DGCONFX="YUG":"Yugoslavia",1:"")
"RTN","DGRP6CL2",62,0)
 . S DGCT=DGCT+1
"RTN","DGRP6CL2",63,0)
 . I $L(LIN(LIN))>LIN(0) S LIN(0)=$L(LIN(LIN))
"RTN","DGRP6CL2",64,0)
 . S LIN(LIN,1)="("_$S($P(DGCONF(DGCONF),U):$$FMTE^XLFDT($P(DGCONF(DGCONF),U),"5DZ"),1:"date missing")_"-"_$S($P(DGCONF(DGCONF),U,2):$$FMTE^XLFDT($P(DGCONF(DGCONF),U,2),"5DZ"),1:"date missing")_") "
"RTN","DGRP6CL2",65,0)
 . S LIN(LIN,1)=$E(LIN(LIN,1)_$J("",25),1,25)
"RTN","DGRP6CL2",66,0)
 . S LIN(LIN,1)=LIN(LIN,1)_$S($G(DGCONF(DGCONF,1))=1:"**Not Within MSE",1:"")
"RTN","DGRP6CL2",67,0)
 S:'LIN(0) LIN(0)=25
"RTN","DGRP6CL2",68,0)
 S Z0=0 F  S Z0=$O(LIN(Z0)) Q:'Z0  S LIN(Z0)=$E(LIN(Z0)_$J("",LIN(0)),1,LIN(0))_LIN(Z0,1) K LIN(Z0,1)
"RTN","DGRP6CL2",69,0)
 I DGLIM S LIN(LIN)="++Additional Conflict Locations exist for this patient"
"RTN","DGRP6CL2",70,0)
 Q
"RTN","DGRP6CL2",71,0)
 ;
"RTN","DGRP6EF")
0^12^B14465405^n/a
"RTN","DGRP6EF",1,0)
DGRP6EF ;ALB/TMK - REGISTRATION SCREEN 6 FIELDS FOR EXPOSURE FACTORS; 07/28/05
"RTN","DGRP6EF",2,0)
 ;;5.3;Registration;**689**;Aug 13, 1993;Build 1
"RTN","DGRP6EF",3,0)
 ;
"RTN","DGRP6EF",4,0)
EN(DFN,QUIT) ; Display Environmental exposure factors/allow to edit
"RTN","DGRP6EF",5,0)
 N I,IND,DG321,DG322,DGCT,DIR,Z,X,Y,DIE,DR,DA,DGNONT
"RTN","DGRP6EF",6,0)
 ; Returns QUIT=1 if ^ entered
"RTN","DGRP6EF",7,0)
 ;
"RTN","DGRP6EF",8,0)
EN1 D CLEAR^VALM1
"RTN","DGRP6EF",9,0)
 N DTOUT,DUOUT
"RTN","DGRP6EF",10,0)
 S DG321=$G(^DPT(DFN,.321)),DG322=$G(^DPT(DFN,.322))
"RTN","DGRP6EF",11,0)
 ;
"RTN","DGRP6EF",12,0)
 S DIR(0)="SA^",DGCT=0
"RTN","DGRP6EF",13,0)
 S DGCT=DGCT+1,DIR("A",DGCT)=$$SSNNM^DGRPU(DFN)
"RTN","DGRP6EF",14,0)
 S DGCT=DGCT+1,DIR("A",DGCT)="",$P(DIR("A",DGCT),"=",81)=""
"RTN","DGRP6EF",15,0)
 S DGCT=DGCT+1,DIR("A",DGCT)=$J("",23)_"**** ENVIRONMENTAL FACTORS ****",DGCT=DGCT+1,DIR("A",DGCT)=" "
"RTN","DGRP6EF",16,0)
 S IND=$S('$G(DGRPV):"[]",1:"<>")
"RTN","DGRP6EF",17,0)
 S DGCT=DGCT+1
"RTN","DGRP6EF",18,0)
 S Z=$E(IND)_"1"_$E(IND,2)
"RTN","DGRP6EF",19,0)
 S DIR("A",DGCT)=$J("",2)_Z_"   A/O Exp.: "_$$YN^DGRP6CL(DG321,2)_$S($P(DG321,U,13)="K":" (DMZ) ",$P(DG321,U,13)="V":" (VIET)",1:$J("",7))_" Reg: "_$$DAT^DGRP6CL(DG321,7,12)_"  Exam: "_$$DAT^DGRP6CL(DG321,9,12)_"A/O#: "_$P(DG321,U,10)
"RTN","DGRP6EF",20,0)
 S Z=$E(IND)_"2"_$E(IND,2)
"RTN","DGRP6EF",21,0)
 S DGCT=DGCT+1,DIR("A",DGCT)=$J("",2)_Z_"   ION Rad.: "_$$YN^DGRP6CL(DG321,3)_$J("",8)_"Reg: "_$$DAT^DGRP6CL(DG321,11,12)_"Method: "
"RTN","DGRP6EF",22,0)
 S DIR("A",DGCT)=DIR("A",DGCT)_$S($P(DG321,U,12)="B":"BOTH",$P(DG321,U,12)="T":"NUCLEAR TESTING",$P(DG321,U,12)="N":"NAGASAKI/HIROSHIMA",1:"")
"RTN","DGRP6EF",23,0)
 S Z=$E(IND)_"3"_$E(IND,2)
"RTN","DGRP6EF",24,0)
 S DGCT=DGCT+1,DIR("A",DGCT)=$J("",2)_Z_" Env Contam: "_$$YN^DGRP6CL(DG322,13)_$J("",8)_"Reg: "_$$DAT^DGRP6CL(DG322,14,12)_"  Exam: "_$$DAT^DGRP6CL(DG322,15,11)
"RTN","DGRP6EF",25,0)
 S DGNONT=0 I $$GETSTAT^DGNTAPI1(DFN)>2,'$D(^XUSEC("DGNT VERIFY",DUZ)) S DGNONT=1
"RTN","DGRP6EF",26,0)
 I $G(DGRPV) S DGNONT=1
"RTN","DGRP6EF",27,0)
 S DGCT=DGCT+1,DIR("A",DGCT)=$J("",2)_$S(DGNONT:"<",1:"[")_"4"_$S(DGNONT:">",1:"]")_" N/T Radium: " N DGNT S DGRPX=$$GETCUR^DGNTAPI(DFN,"DGNT") S DIR("A",DGCT)=DIR("A",DGCT)_$G(DGNT("INTRP"))
"RTN","DGRP6EF",28,0)
 ;
"RTN","DGRP6EF",29,0)
 S DGCT=DGCT+1,DIR("A",DGCT)=" "
"RTN","DGRP6EF",30,0)
 S DIR("A")=$S('$G(DGRPV):"SELECT AN ENVIRONMENTAL FACTOR (1-"_(4-DGNONT)_") OR (Q)UIT: ",1:"PRESS RETURN TO CONTINUE ")
"RTN","DGRP6EF",31,0)
 S DIR(0)=$S('$G(DGRPV):"SA^1:A/O Exp;2:ION Rad;3:Env Contam;"_$S(DGNONT:"",1:"4:N/T Radium;")_"Q:QUIT",1:"EA")
"RTN","DGRP6EF",32,0)
 I '$G(DGRPV) S DIR("B")="QUIT"
"RTN","DGRP6EF",33,0)
 D ^DIR K DIR
"RTN","DGRP6EF",34,0)
 I $G(DGRPV)!$D(DUOUT)!$D(DTOUT)!(Y="Q") S:Y'="Q" QUIT=1 G QUIT
"RTN","DGRP6EF",35,0)
 S Z="603"_$E("0",2-$L(+Y))_+Y
"RTN","DGRP6EF",36,0)
 S DIE=2,DA=DFN,DR=$P($T(@Z),";;",2) D:DR'="" ^DIE
"RTN","DGRP6EF",37,0)
 K DIE,DA,DR
"RTN","DGRP6EF",38,0)
 G EN1
"RTN","DGRP6EF",39,0)
 ;
"RTN","DGRP6EF",40,0)
QUIT Q
"RTN","DGRP6EF",41,0)
 ;
"RTN","DGRP6EF",42,0)
EF(DFN,LIN) ;
"RTN","DGRP6EF",43,0)
 N DG321,DG322,LENGTH,Z,SEQ
"RTN","DGRP6EF",44,0)
 K LIN S (LENGTH,LIN)=0
"RTN","DGRP6EF",45,0)
 S DG321=$G(^DPT(DFN,.321)),DG322=$G(^(.322))
"RTN","DGRP6EF",46,0)
 I $P(DG321,U,2)="Y" D
"RTN","DGRP6EF",47,0)
 . S Z="A/O Exp.",SEQ=1
"RTN","DGRP6EF",48,0)
 . S:'$P(DG321,U,7)!'$P(DG321,U,9)!($P(DG321,U,10)="") Z=Z_"(Incomplete)"
"RTN","DGRP6EF",49,0)
 . D SETLNEX^DGRP6(Z,SEQ,.LIN,.LENGTH)
"RTN","DGRP6EF",50,0)
 ;
"RTN","DGRP6EF",51,0)
 I $P(DG321,U,3)="Y" D
"RTN","DGRP6EF",52,0)
 . S Z="Ion Rad.",SEQ=2
"RTN","DGRP6EF",53,0)
 . S:'$P(DG321,U,11)!($P(DG321,U,12)="") Z=Z_"(Incomplete)"
"RTN","DGRP6EF",54,0)
 . D SETLNEX^DGRP6(Z,SEQ,.LIN,.LENGTH)
"RTN","DGRP6EF",55,0)
 ;
"RTN","DGRP6EF",56,0)
 I $P(DG322,U,13)="Y" D
"RTN","DGRP6EF",57,0)
 . I 'LIN S LIN=LIN+1,LIN(LIN)=""
"RTN","DGRP6EF",58,0)
 . S Z="Env Contam.",SEQ=3
"RTN","DGRP6EF",59,0)
 . S:'$P(DG322,U,14)!'$P(DG322,U,15) Z=Z_"(Incomplete)"
"RTN","DGRP6EF",60,0)
 . D SETLNEX^DGRP6(Z,SEQ,.LIN,.LENGTH)
"RTN","DGRP6EF",61,0)
 ; N/T Radium Exposure
"RTN","DGRP6EF",62,0)
 N DGNT,DGRPX S DGRPX=$$GETCUR^DGNTAPI(DFN,"DGNT")
"RTN","DGRP6EF",63,0)
 I "NO"'[$G(DGNT("INTRP")) D
"RTN","DGRP6EF",64,0)
 . I 'LIN S LIN=LIN+1,LIN(LIN)=""
"RTN","DGRP6EF",65,0)
 . S SEQ=4 D SETLNEX^DGRP6("N/T Radium ("_$P(DGNT("INTRP"),"YES,",2)_")",SEQ,.LIN,.LENGTH)
"RTN","DGRP6EF",66,0)
  Q
"RTN","DGRP6EF",67,0)
 ;
"RTN","DGRP6EF",68,0)
60301 ;;.32102//NO;S:X'="Y" Y="@65";.3213;.32107;.32109;.3211;@65;
"RTN","DGRP6EF",69,0)
60302 ;;.32103//NO;S:X'="Y" Y="@66";.3212;.32111;@66;
"RTN","DGRP6EF",70,0)
60303 ;;.322013//NO;S:X'="Y" Y="@612";.322014;Q;.322015;@612;
"RTN","DGRP6EF",71,0)
60304 ;;D REG^DGNTQ(DFN)
"RTN","DGRP6EF",72,0)
 ;;
"RTN","DGRPCE")
0^31^B28964060^B28667064
"RTN","DGRPCE",1,0)
DGRPCE ;ALB/MRL,KV,PJR,BRM - CONSISTENCY CHECKER, EDIT INCONSISTENCIES ; 12/14/04 9:42am
"RTN","DGRPCE",2,0)
 ;;5.3;Registration;**121,122,175,297,342,451,626,689**;Aug 13, 1993;Build 1
"RTN","DGRPCE",3,0)
 ;
"RTN","DGRPCE",4,0)
 ;KV;11/15/00;DG*5.3*297;Disable addition of CD Elig Code in Reg. Screens
"RTN","DGRPCE",5,0)
 ;                      ;Adding CD Elig Codes in Load/Edit Screen used to
"RTN","DGRPCE",6,0)
 ;                      ;cause undefined line tag error.
"RTN","DGRPCE",7,0)
 ;
"RTN","DGRPCE",8,0)
 S DGVTYN=$P($G(^DPT(DFN,"VET")),"^",1),DGDR="DR",(DR,DGD,DGDRC,DGCCF)="",DGASK=",",DGER=","_DGER D ^DGRPCE1
"RTN","DGRPCE",9,0)
 S DGEK=0 F I=9,10,11,12,13,14,18,19,20,22,24,36,51 Q:DGEK  I DGER[(","_I_",") S DGEK=1 Q
"RTN","DGRPCE",10,0)
 I 'DGKEY(1) D:DGEK ELDR S I=15 D SASK S I=23 D SASK
"RTN","DGRPCE",11,0)
 F I=29,30,31,32,33,43,44,45,48,56 D SASK,MON:DGCCF S DGCCF=0
"RTN","DGRPCE",12,0)
 G NKEY:DGKEY(3) F I=25,26,27,28,34,35 D SASK
"RTN","DGRPCE",13,0)
 I DGASK'[26 F I=41,42 I DGASK'[41 D SASK
"RTN","DGRPCE",14,0)
 I DGASK'[27 S I=60 I DGASK'[25 D SASK
"RTN","DGRPCE",15,0)
 I DGASK'[34 F I=37,38 I DGASK'[37 D SASK
"RTN","DGRPCE",16,0)
 I DGASK'[35 F I=39,40 I DGASK'[39 D SASK
"RTN","DGRPCE",17,0)
NKEY D ^DGRPCE1
"RTN","DGRPCE",18,0)
 I $S(DGER[49:1,(DGER[50):1,(DGER[52):1,1:0) D
"RTN","DGRPCE",19,0)
 .I $G(DGPRFLG) D PREG^IBCNBME(DFN) Q
"RTN","DGRPCE",20,0)
 .D REG^IBCNBME(DFN)
"RTN","DGRPCE",21,0)
 .Q
"RTN","DGRPCE",22,0)
 D Q S DIE="^DPT(",(DA,Y)=DFN D ^DIE:$D(DR)
"RTN","DGRPCE",23,0)
 I DGER[54 D GETREL^DGMTU11(DFN,"SD",$$LYR^DGMTSCU1(DT)) D
"RTN","DGRPCE",24,0)
 . I $D(DGREL("S")),($$SSN^DGMTU1(+DGREL("S"))']"") D ASKSSN(DGREL("S"))
"RTN","DGRPCE",25,0)
 . F DGDEP=0:0 S DGDEP=$O(DGREL("D",DGDEP)) Q:'DGDEP  I $$SSN^DGMTU1(+DGREL("D",DGDEP))']"" D ASKSSN(DGREL("D",DGDEP))
"RTN","DGRPCE",26,0)
 ;
"RTN","DGRPCE",27,0)
 I DGER[59 D CATDIB
"RTN","DGRPCE",28,0)
 I DGER["82" D EN2^DGRP6CL
"RTN","DGRPCE",29,0)
 ;
"RTN","DGRPCE",30,0)
 K DGREL,DGDEP
"RTN","DGRPCE",31,0)
KVAR K DR,DGEDCN,DGCT,DGER,DGINC55,DGRPADI,DGRPOUT,DGVTYN
"RTN","DGRPCE",32,0)
Q K %,C,DA,DGASK,DGCCF,DGCT1,DGCT2,DGCT3,DGD,DGD1,DGD2,DGDR,DGDRC,DGECODE,DGEDIT,DGEK,DGKEY,DGP,DGRPADI,DGRPE,DIC,DIE,DIK,I,I1,J,X,X1,X2
"RTN","DGRPCE",33,0)
 K DGCOMLOC,DGCOMBR,FRDT,DGFRDT
"RTN","DGRPCE",34,0)
 D KVAR^VADPT
"RTN","DGRPCE",35,0)
 Q
"RTN","DGRPCE",36,0)
SASK I DGER[(","_I_","),DGASK'[(","_I_",") S DGD=$P($T(@I),";;",2,999),DGASK=DGASK_I_",",DGCCF=1 D SAVE
"RTN","DGRPCE",37,0)
 Q
"RTN","DGRPCE",38,0)
SAVE I $L(@DGDR)+$L(DGD)<241 S @DGDR=@DGDR_DGD,DGD="" Q
"RTN","DGRPCE",39,0)
 S DGDRC=DGDRC+1,DGDR="DR(1,2,"_DGDRC_")",@DGDR=DGD,DGD="" Q
"RTN","DGRPCE",40,0)
ELDR S DGASK=DGASK_"9,10,11,12,13,14,18,19,20,24,29,30,31,34,36,37,38,"
"RTN","DGRPCE",41,0)
 I 'DGKEY(1) S DGD="391;1901;S DGVTYN=$S($D(^DPT(DFN,""VET"")):$P(^(""VET""),""^"",1),1:"""");S:X'=""Y"" Y=""@1"";.301;S:X'=""Y"" Y=""@1"";.302;@1;" D SAVE
"RTN","DGRPCE",42,0)
 I 'DGKEY(2) F I=29,30,31 S DGD=$P($T(@I),";;",2,999) D SAVE
"RTN","DGRPCE",43,0)
 D:DGD]"" SAVE I 'DGKEY(3) S DGD=$P($T(34),";;",2,999) D SAVE S DGD=$P($T(51),";;",2,999) D SAVE
"RTN","DGRPCE",44,0)
 I 'DGKEY(1) D ELIG^DGRPCE1
"RTN","DGRPCE",45,0)
 Q
"RTN","DGRPCE",46,0)
MON I $S(I<40:1,I=56:1,1:0) D SAVE Q
"RTN","DGRPCE",47,0)
 I $S(I<46:1,1:0),DGASK'[(","_(I-14)_",") D SAVE Q
"RTN","DGRPCE",48,0)
 I DGASK'[(","_(I-15)_",") D SAVE
"RTN","DGRPCE",49,0)
 Q
"RTN","DGRPCE",50,0)
 ;
"RTN","DGRPCE",51,0)
15 ;;.152;S:X']"" Y="@15";S DIE("NO^")="";.307;I X']"" W !!,*7,"But I need a reason why this applicant is ineligible!" S Y=.152;@15;K DIE("NO^");
"RTN","DGRPCE",52,0)
23 ;;.3611;S:X'="V" Y="@23";.3612;S DIE("NO^")="";I X']"" W !!,*7,"But I need to know the date eligibility was verifed!";@23;K DIE("NO^");
"RTN","DGRPCE",53,0)
25 ;;.323;.32102;S:X'="Y" Y="@25";.32107;.3211;.32109;.3213;@25;
"RTN","DGRPCE",54,0)
26 ;;
"RTN","DGRPCE",55,0)
27 ;;
"RTN","DGRPCE",56,0)
28 ;;
"RTN","DGRPCE",57,0)
29 ;;.36205;S:X'="Y" Y="@29";I DGVTYN'="Y" W !,"Patient not a veteran-can't claim A&A" S Y=.36205;.36295;@29;
"RTN","DGRPCE",58,0)
30 ;;.36215;S:X'="Y" Y="@30";I DGVTYN'="Y" W !,"Patient not a veteran-can't claim HOUSEBOUND" S Y=.36215;.36295;@30;
"RTN","DGRPCE",59,0)
31 ;;.36235;S:X'="Y" Y="@31";I DGVTYN'="Y" W !,"Patient not a veteran-can't claim VA PENSION" S Y=.36235;.36295;@31;
"RTN","DGRPCE",60,0)
32 ;;.36255;S:X'="Y" Y="@32";I DGVTYN'="Y" W !,"Patient not a veteran-can't claim MIL. RET." S Y=.36255;.3625;@32;
"RTN","DGRPCE",61,0)
33 ;;
"RTN","DGRPCE",62,0)
34 ;;.525;S:X'="Y" Y="@34";I DGVTYN'="Y" W !,"Patient not a veteran-can't claim POW STATUS" S Y=.525;.526:.528;@34;
"RTN","DGRPCE",63,0)
35 ;;
"RTN","DGRPCE",64,0)
37 ;;.525;S:X'="Y" Y="@37";.526:.528;@37;
"RTN","DGRPCE",65,0)
38 ;;.525;S:X'="Y" Y="@38";.526:.528;@38;
"RTN","DGRPCE",66,0)
39 ;;.5291;S:X'="Y" Y="@39";.5292:.5294;@39;
"RTN","DGRPCE",67,0)
40 ;;.5291;S:X'="Y" Y="@40";.5292:.5294;@40;
"RTN","DGRPCE",68,0)
41 ;;.32101;S:X'="Y" Y="@41";.32104;.32105;@41;
"RTN","DGRPCE",69,0)
42 ;;.32101;S:X'="Y" Y="@42";.32104;.32105;@42;
"RTN","DGRPCE",70,0)
43 ;;
"RTN","DGRPCE",71,0)
44 ;;
"RTN","DGRPCE",72,0)
45 ;;
"RTN","DGRPCE",73,0)
46 ;;
"RTN","DGRPCE",74,0)
47 ;;
"RTN","DGRPCE",75,0)
48 ;;.36265;S:X'="Y" Y="@48";.3626;@48;
"RTN","DGRPCE",76,0)
51 ;;I DGVTYN'="Y" S Y="@51";.324:.328;@51;
"RTN","DGRPCE",77,0)
56 ;;.3025;S:X'="Y" Y="@56";.36295;@56;
"RTN","DGRPCE",78,0)
60 ;;.32102;S:X'="Y" Y="@60";.32107;.3211;.32109;.3213;@60;
"RTN","DGRPCE",79,0)
 ;
"RTN","DGRPCE",80,0)
 ; NOTE: #46 & 47 REMOVED WITH PIMS5.3
"RTN","DGRPCE",81,0)
 ;
"RTN","DGRPCE",82,0)
ASKSSN(DEP) ;edit ssns if missing
"RTN","DGRPCE",83,0)
 ;
"RTN","DGRPCE",84,0)
 ; input:  DEP as string for dependent (from GETREL)
"RTN","DGRPCE",85,0)
 ;
"RTN","DGRPCE",86,0)
 W !,$$NAME^DGMTU1(+DEP)
"RTN","DGRPCE",87,0)
 S DA=+$P(DEP,"^",2),DIE="^DGPR(408.13,",DR=.09 D ^DIE
"RTN","DGRPCE",88,0)
 K DA,DR,DIE
"RTN","DGRPCE",89,0)
 Q
"RTN","DGRPCE",90,0)
 ;
"RTN","DGRPCE",91,0)
CATDIB ;
"RTN","DGRPCE",92,0)
 ;Could be inconsistent because there is the catastrophic disability
"RTN","DGRPCE",93,0)
 ;code without supporting information, or visa versa
"RTN","DGRPCE",94,0)
 ;
"RTN","DGRPCE",95,0)
 N DGCDIS,CODE,INFO
"RTN","DGRPCE",96,0)
 S (INFO,CODE)=0
"RTN","DGRPCE",97,0)
 I $$GET^DGENCDA(DFN,.DGCDIS),DGCDIS("DATE") S INFO=1
"RTN","DGRPCE",98,0)
 S CODE=$$HASCAT^DGENCDA(DFN)
"RTN","DGRPCE",99,0)
 I CODE D  Q
"RTN","DGRPCE",100,0)
 .W !!,">>> Catastrophically Disabled eligibilty requires additional information <<<"
"RTN","DGRPCE",101,0)
 .D EDITCD^DGENCD(DFN)
"RTN","DGRPCE",102,0)
 I INFO D
"RTN","DGRPCE",103,0)
 . ;KV;11/15/00;DG*5.3*297;Start of modifications
"RTN","DGRPCE",104,0)
 . W !!,"The patient record indicates that a  determination was made "
"RTN","DGRPCE",105,0)
 . W "that the patient",!,"is catastrophically disabled."
"RTN","DGRPCE",106,0)
 . W !!,"To add Catastrophic Disability Eligibility Code(s), please use "
"RTN","DGRPCE",107,0)
 . W "the menu option",!,"DGEN PATIENT ENROLLMENT.",!!
"RTN","DGRPCE",108,0)
 .I $$ASKDEL() D
"RTN","DGRPCE",109,0)
 .. I $$DELETE^DGENCDA1(DFN) D
"RTN","DGRPCE",110,0)
 ...W !,">>> Determination Deleted <<<"
"RTN","DGRPCE",111,0)
 ..;
"RTN","DGRPCE",112,0)
 ..;could fail if lock could not be obtained
"RTN","DGRPCE",113,0)
 ..E  W !,"Catastrophic disability determination can not be deleted at this time.",!,"Please try again later."
"RTN","DGRPCE",114,0)
 ;KV;11/15/00;DG*5.3*297;End of modifications
"RTN","DGRPCE",115,0)
 Q
"RTN","DGRPCE",116,0)
 ;
"RTN","DGRPCE",117,0)
ASKDEL() ;
"RTN","DGRPCE",118,0)
 ;ask whether to delete catastrphic disability determination
"RTN","DGRPCE",119,0)
 N DIR
"RTN","DGRPCE",120,0)
 S DIR(0)="Y"
"RTN","DGRPCE",121,0)
 ;KV;11/15/00;DG*5.3*297;Cosmetic change for DIR("A")
"RTN","DGRPCE",122,0)
 S DIR("A")="Do you want to delete the determination showing that patient is catastrophically disabled"
"RTN","DGRPCE",123,0)
 S DIR("B")="YES"
"RTN","DGRPCE",124,0)
 D ^DIR
"RTN","DGRPCE",125,0)
 Q:$D(DIRUT) 0
"RTN","DGRPCE",126,0)
 Q $S(Y=1:1,1:0)
"RTN","DGRPCE1")
0^35^B58806369^B52840183
"RTN","DGRPCE1",1,0)
DGRPCE1 ;ALB/MIR/BRM/LBD - CONSISTENCY CHECKER EDIT ; 6/21/04 8:47am  
"RTN","DGRPCE1",2,0)
 ;;5.3;Registration;**108,226,470,454,489,505,522,451,632,689**;Aug 13, 1993;Build 1
"RTN","DGRPCE1",3,0)
 N I,J F I=1:1:8,16,53,57,58,61:1:86 D SASK
"RTN","DGRPCE1",4,0)
 ;F I=49,50,52 D SASK ;BELOW REPLACED WITH ^IBCNSP2 CALL
"RTN","DGRPCE1",5,0)
 ;OLDS DR(2,2.312)="S DGRPADI="""";.01;1;2;15;8;7;3;6;S DGRPADI=X;I DGRPADI'=""v"" S Y=""@2312"";17///^S X=""`""_DFN;16///^S X=""01"";S Y=""@23121"";@2312;17;16//^S X=$S(DGRPADI=""s"":""02"",1:"""");@23121;9:14;"
"RTN","DGRPCE1",6,0)
 Q
"RTN","DGRPCE1",7,0)
SASK I DGER[(","_I_","),DGASK'[(","_I_",") F J=I,I*1000:1 Q:'$T(@J)  S DGD=DGD_$P($T(@J),";;",2,999) D SAVE
"RTN","DGRPCE1",8,0)
 S DGASK=DGASK_I_","
"RTN","DGRPCE1",9,0)
 Q
"RTN","DGRPCE1",10,0)
SAVE I $L(@DGDR)+$L(DGD)<241 S @DGDR=@DGDR_DGD,DGD="" Q
"RTN","DGRPCE1",11,0)
 S DGDRC=DGDRC+1,DGDR="DR(1,2,"_DGDRC_")",@DGDR=DGD,DGD="" Q
"RTN","DGRPCE1",12,0)
 ;
"RTN","DGRPCE1",13,0)
 ;
"RTN","DGRPCE1",14,0)
ELIG ;eligibility code...if M11+, use compiled template, otherwise DR string
"RTN","DGRPCE1",15,0)
 I ^%ZOSF("OS")'["M/11+" S DGD=$P($T(14),";;",2,999) D SAVE Q
"RTN","DGRPCE1",16,0)
 N DA,DIE,DR S DIE="^DPT(",DA=DFN,DR="[DG CONSISTENCY CHECKER]" D ^DIE
"RTN","DGRPCE1",17,0)
 Q
"RTN","DGRPCE1",18,0)
 ;
"RTN","DGRPCE1",19,0)
 ;
"RTN","DGRPCE1",20,0)
1 ;;.01;
"RTN","DGRPCE1",21,0)
2 ;;1;
"RTN","DGRPCE1",22,0)
3 ;;.02;
"RTN","DGRPCE1",23,0)
4 ;;.03;
"RTN","DGRPCE1",24,0)
5 ;;.05;
"RTN","DGRPCE1",25,0)
6 ;;.08;
"RTN","DGRPCE1",26,0)
7 ;;.09;
"RTN","DGRPCE1",27,0)
8 ;;N FLG S FLG(2)=1 S:$G(DGER)[",61," FLG(1)=1 D EN^DGREGAED(DFN,.FLG);
"RTN","DGRPCE1",28,0)
14 ;;.361;S DGECODE=$S($D(^DIC(8,+X,0)):$P(^(0),"^",1),1:"");S:$S(DGECODE["ALLIED":0,DGECODE["FEDERAL":0,1:1) Y=.323;.309;.323;D ^DGYZODS;S:'DGODS Y="@14";11500.02;11500.03;@14;
"RTN","DGRPCE1",29,0)
16 ;;.351;
"RTN","DGRPCE1",30,0)
53 ;;.07;.31115;I $S(X']"":1,X=3:1,X=9:1,1:0) S Y="@53";.3111;S:X']"" Y="@53";.3113;S:X']"" Y=.3116;.3114;S:X']"" Y=.3116;.3115:.3117;.2205;.3119;@53;
"RTN","DGRPCE1",31,0)
57 ;;.381;.382///NOW;
"RTN","DGRPCE1",32,0)
58 ;;.322013;S:X'="Y" Y="@589";.322014;.322015;.32201;S:X'="Y" Y="@581";.322011;.322012;@581;.322016;S:X'="Y" Y="@589";.322017;.322018;@589;
"RTN","DGRPCE1",33,0)
61 ;;S:$G(DGER)[",8," Y="@619";.131;.132;@619;
"RTN","DGRPCE1",34,0)
62 ;;.331;
"RTN","DGRPCE1",35,0)
63 ;;.1411;S DIE("NO^")="OUTOK";S:X']"" Y=.1414;.1412;S:X']"" Y=.1414;.1413;.1414;.1415;.1416;Q;.14111;K DIE("NO^");
"RTN","DGRPCE1",36,0)
64 ;;.092;.093;
"RTN","DGRPCE1",37,0)
65 ;;.2403;
"RTN","DGRPCE1",38,0)
66 ;;.09;
"RTN","DGRPCE1",39,0)
67 ;;S:$$DGERCK^DGRPCE1("73^79^80^81^82",.DGER) Y="@67";W !!,$C(7),"SERVICE SEPARATION DATE [LAST] must be a precise date to determine CV Elig",!;.325;.32911;.326;.327;@67;
"RTN","DGRPCE1",40,0)
68 ;;S:$$DGERCK^DGRPCE1("39^40",.DGER) Y="@68";W !!,$C(7),"COMBAT TO DATE must be a precise date to determine CV Eligibility",!;.5291;S:X'="Y" Y="@68";.5292;.5293;.5294;@68;
"RTN","DGRPCE1",41,0)
69 ;;S:$$DGERCK^DGRPCE1("74^75^76",.DGER) Y="@69";W !!,$C(7),"YUGOSLAVIA TO DATE must be a precise date to determine CV Eligibility",!;.322019;S:X'="Y" Y="@69";.32202;.322021;@69;
"RTN","DGRPCE1",42,0)
70 ;;S:$$DGERCK^DGRPCE1("74^75^76",.DGER) Y="@70";W !!,$C(7),"SOMALIA TO DATE must be a precise date to determine CV Eligibility",!;.322016;S:X'="Y" Y="@70";.322017;.322018,@70;
"RTN","DGRPCE1",43,0)
71 ;;S:$$DGERCK^DGRPCE1("74^75^76",.DGER) Y="@71";W !!,$C(7),"PERSIAN GULF TO DATE must be a precise date to determine CV Eligibility",!;.32201;S:X'="Y" Y="@71";.322011;.322012;@71;
"RTN","DGRPCE1",44,0)
72 ;;.325;.32911;.326;.327;.324;S:'$$YN^DGRPCE1(.3285) Y="@7201";.3291;.32912;.3292;.3293;.329;@7201;S:'$$YN^DGRPCE1(.32945) Y="@7202";.3296;.32913;.3297;.3298;.3295;@7202;
"RTN","DGRPCE1",45,0)
 ;
"RTN","DGRPCE1",46,0)
73 ;;S:$$DGERCK^DGRPCE1(72,.DGER) Y="@7302";.325;.32911;.326;.327;.324;S:'$$YN^DGRPCE1(.3285) Y="@7301";.3291;.32912;.3292;.3293;.329;@7301;S:'$$YN^DGRPCE1(.32945) Y="@7302";.3296;.32913;.3297;.3298;.3295;@7302;
"RTN","DGRPCE1",47,0)
74 ;;S:'$$YN^DGRPCE1(.32101) Y="@7401";.32101;S:X'="Y" Y="@7401";.32104;.32105;@7401;S:'$$YN^DGRPCE1(.322016) Y="@7402";.322016;S:X'="Y" Y="@7402";.322017;.322018;@7402;
"RTN","DGRPCE1",48,0)
74000 ;;S:'$$YN^DGRPCE1(.322019) Y="@7403";.322019;S:X'="Y" Y="@7403";.32202;.322021;@7403;S:'$$YN^DGRPCE1(.3221) Y="@7404";.3221;S:X'="Y" Y="@7404";.3222;.3223;@7404;
"RTN","DGRPCE1",49,0)
74001 ;;S:'$$YN^DGRPCE1(.3224) Y="@7405";.3224;S:X'="Y" Y="@7405";.3225;.3226;@7405;S:'$$YN^DGRPCE1(.3227) Y="@7406";.3227;S:X'="Y" Y="@7406";.3228;.3229;@7406;
"RTN","DGRPCE1",50,0)
74002 ;;S:'$$YN^DGRPCE1(.32201) Y="@7407";.32201;S:X'="Y" Y="@7407";.322011;.322012;@7407;
"RTN","DGRPCE1",51,0)
75 ;;S:$$DGERCK^DGRPCE1(74,.DGER) Y="@7507";S:'$$YN^DGRPCE1(.32101) Y="@7501";.32101;S:X'="Y" Y="@7501";.32104;.32105;@7501;S:'$$YN^DGRPCE1(.322016) Y="@7502";.322016;S:X'="Y" Y="@7502";.322017;.322018;@7502;
"RTN","DGRPCE1",52,0)
75000 ;;S:'$$YN^DGRPCE1(.322019) Y="@7503";.322019;S:X'="Y" Y="@7503";.32202;.322021;@7503;S:'$$YN^DGRPCE1(.3221) Y="@7504";.3221;S:X'="Y" Y="@7504";.3222;.3223;@7504;
"RTN","DGRPCE1",53,0)
75001 ;;S:'$$YN^DGRPCE1(.3224) Y="@7505";.3224;S:X'="Y" Y="@7505";.3225;.3226;@7505;S:'$$YN^DGRPCE1(.3227) Y="@7506";.3227;S:X'="Y" Y="@7506";.3228;.3229;@7506;
"RTN","DGRPCE1",54,0)
75002 ;;S:'$$YN^DGRPCE1(.32201) Y="@7507";.32201;S:X'="Y" Y="@7507";.322011;.322012;@7507;
"RTN","DGRPCE1",55,0)
76 ;;S:$$DGERCK^DGRPCE1("74^75",.DGER) Y="@7607";S:'$$YN^DGRPCE1(.32101) Y="@7601";.32101;S:X'="Y" Y="@7601";.32104;.32105;@7601;S:'$$YN^DGRPCE1(.322016) Y="@7602";.322016;S:X'="Y" Y="@7602";.322017;.322018;@7602;
"RTN","DGRPCE1",56,0)
76000 ;;S:'$$YN^DGRPCE1(.322019) Y="@7603";.322019;S:X'="Y" Y="@7603";.32202;.322021;@7603;S:'$$YN^DGRPCE1(.3221) Y="@7604";.3221;S:X'="Y" Y="@7604";.3222;.3223;@7604;
"RTN","DGRPCE1",57,0)
76001 ;;S:'$$YN^DGRPCE1(.3224) Y="@7605";.3224;S:X'="Y" Y="@7605";.3225;.3226;@7605;S:'$$YN^DGRPCE1(.3227) Y="@7606";.3227;S:X'="Y" Y="@7606";.3228;.3229;@7606;
"RTN","DGRPCE1",58,0)
76002 ;;S:'$$YN^DGRPCE1(.32201) Y="@7607";.32201;S:X'="Y" Y="@7607";.322011;.322012;@7607;
"RTN","DGRPCE1",59,0)
77 ;;S:(($$DGERCK^DGRPCE1("37^38",.DGER))!('$$YN^DGRPCE1(.525))) Y="@77";.525;S:X'="Y" Y="@77";.526;.527;.528;@77;
"RTN","DGRPCE1",60,0)
78 ;;S:(($$DGERCK^DGRPCE1("39^40^68",.DGER))!('$$YN^DGRPCE1(.5291))) Y="@78";.5291;S:X'="Y" Y="@78";.5292;.5293;.5294;@78;
"RTN","DGRPCE1",61,0)
79 ;;S:$$DGERCK^DGRPCE1("72^73",.DGER) Y="@7902";.325;.32911;.326;.327;.324;S:'$$YN^DGRPCE1(.3285) Y="@7901";.3291;.32912;.3292;.3293;.329;@7901;S:'$$YN^DGRPCE1(.32945) Y="@7902";.3296;.32913;.3297;.3298;.3295;@7902;
"RTN","DGRPCE1",62,0)
80 ;;S:(($$DGERCK^DGRPCE1("37^38^77",.DGER))!('$$YN^DGRPCE1(.525))) Y="@8001";.525;S:X'="Y" Y="@8001";.526;.527;.528;@8001;S:$$DGERCK^DGRPCE1("72^73^79",.DGER) Y="@8003";
"RTN","DGRPCE1",63,0)
80000 ;;.325;.32911;.326;.327;.324;S:'$$YN^DGRPCE1(.3285) Y="@8002";.3291;.32912;.3292;.3293;.329;@8002;S:'$$YN^DGRPCE1(.32945) Y="@8003";.3296;.32913;.3297;.3298;.3295;@8003;
"RTN","DGRPCE1",64,0)
81 ;;S:(($$DGERCK^DGRPCE1("39^40^78",.DGER))!('$$YN^DGRPCE1(.5291))) Y="@8101";.5291;S:X'="Y" Y="@8101";.5292;.5293;.5294;@8101;S:$$DGERCK^DGRPCE1("72^73^79^80",.DGER) Y="@8103";
"RTN","DGRPCE1",65,0)
81000 ;;.325;.32911;.326;.327;.324;S:'$$YN^DGRPCE1(.3285) Y="@8102";.3291;.32912;.3292;.3293;.329;@8102;S:'$$YN^DGRPCE1(.32945) Y="@8103";.3296;.32913;.3297;.3298;.3295;@8103;
"RTN","DGRPCE1",66,0)
82 ;;S:($$DGERCK^DGRPCE1("74^75^76",.DGER)) Y="@8207";S:'$$YN^DGRPCE1(.32101) Y="@8201";.32101;S:X'="Y" Y="@8201";.32104;.32105;@8201;S:'$$YN^DGRPCE1(.322016) Y="@8202";.322016;
"RTN","DGRPCE1",67,0)
82000 ;;S:X'="Y" Y="@8202";.322017;.322018;@8202;S:'$$YN^DGRPCE1(.322019) Y="@8203";.322019;S:X'="Y" Y="@8203";.32202;.322021;@8203;S:'$$YN^DGRPCE1(.3221) Y="@8204";.3221;
"RTN","DGRPCE1",68,0)
82001 ;;S:X'="Y" Y="@8204";.3222;.3223;@8204;S:'$$YN^DGRPCE1(.3224) Y="@8205";.3224;S:X'="Y" Y="@8205";.3225;.3226;@8205;S:'$$YN^DGRPCE1(.3227) Y="@8206";.3227;S:X'="Y" Y="@8206";
"RTN","DGRPCE1",69,0)
82002 ;;.3228;.3229;@8206;S:'$$YN^DGRPCE1(.32201) Y="@8207";.32201;S:X'="Y" Y="@8207";.322011;.322012;@8207;S:($$DGERCK^DGRPCE1("72^73^79^80^81",.DGER)) Y="@8209";
"RTN","DGRPCE1",70,0)
82003 ;;.325;.32911;.326;.327;.324;S:'$$YN^DGRPCE1(.3285) Y="@8208";.3291;.32912;.3292;.3293;.329;@8208;S:'$$YN^DGRPCE1(.32945) Y="@8209";,3296;.32913;.3297;.3298;.3295;@8209;
"RTN","DGRPCE1",71,0)
83 ;;S:$$DGERCK^DGRPCE1(73,.DGER) Y="@83";@8295;D SET32^DGRPE(DA,.DIPA,1);.325;S DIPA("X1")=X S:X']"" Y="@83";S:$$FV^DGRPMS(X)'=1 Y="@8296";.3214;I X']"" W !?4,$C(7),"Proof is required for Filipino Vet." S Y="@8295";
"RTN","DGRPCE1",72,0)
83000 ;;@8296;D:DIPA("X1")'="" WARN32^DGRPE(DIPA("X1"),.DIPA,1,.Y) S:$E(Y,1,4)="@601" Y=.326;.32911;.326;.327;
"RTN","DGRPCE1",73,0)
83001 ;;.3285//NO;S:X'="Y" Y="@83";D SET32^DGRPE(DA,.DIPA,2);.3291;S DIPA("X2")=X S:X']"" Y="@83";S:$$FV^DGRPMS(X)'=1 Y="@832";.3214;I X']"" W !?4,$C(7),"Proof is required for Filipino Vet." S Y=".3291";S Y=.3292;
"RTN","DGRPCE1",74,0)
83002 ;;@832;D:DIPA("X2")'="" WARN32^DGRPE(DIPA("X2"),.DIPA,2,.Y) S:$E(Y,1,4)="@601" Y=.3292;.32912;.3292;.3293;
"RTN","DGRPCE1",75,0)
83003 ;;.32945//NO;S:X'="Y" Y="@83";D SET32^DGRPE(DA,.DIPA,3);.3296;S DIPA("X3")=X S:X']"" Y="@83";S:$$FV^DGRPMS(X)'=1 Y="@833";.3214;I X']"" W !?4,$C(7),"Proof is required for Filipino Vet." S Y=".3296";S Y=.3297;@833;
"RTN","DGRPCE1",76,0)
83004 ;;D:DIPA("X3")'="" WARN32^DGRPE(DIPA("X3"),.DIPA,3,.Y) S:$E(Y,1,4)="@601" Y=.3297;.32913;.3297;.3298;@83;
"RTN","DGRPCE1",77,0)
84 ;;.3214;
"RTN","DGRPCE1",78,0)
85 ;;1901;
"RTN","DGRPCE1",79,0)
86 ;;1901;
"RTN","DGRPCE1",80,0)
 ;
"RTN","DGRPCE1",81,0)
YN(FLD,DFN,FILE) ; return binary for YES/NO flds in the Patient (#2) file
"RTN","DGRPCE1",82,0)
 N RTN
"RTN","DGRPCE1",83,0)
 Q:$G(FLD)']"" ""
"RTN","DGRPCE1",84,0)
 S:$G(FILE)="" FILE=2 S:$G(DFN)="" DFN=$G(DA) Q:$G(DFN)']"" ""
"RTN","DGRPCE1",85,0)
 S RTN=$$GET1^DIQ(FILE,DFN_",",FLD,"I")
"RTN","DGRPCE1",86,0)
 Q $S(RTN=1:1,RTN=0:0,RTN="Y":1,RTN="N":0,1:"")
"RTN","DGRPCE1",87,0)
 ;
"RTN","DGRPCE1",88,0)
DGERCK(STR,DGER) ;do any of the STR errors exist in DGER?
"RTN","DGRPCE1",89,0)
 N RTN,X
"RTN","DGRPCE1",90,0)
 Q:$G(STR)']"" 0  Q:$G(DGER)']"" 0
"RTN","DGRPCE1",91,0)
 S RTN=0 F X=1:1 Q:RTN!($P(STR,"^",X)="")  I DGER[(","_$P(STR,"^",X)_",") S RTN=1
"RTN","DGRPCE1",92,0)
 Q RTN
"RTN","DGRPE")
0^28^B60930744^B49305780
"RTN","DGRPE",1,0)
DGRPE ;ALB/MRL,LBD,BRM,TMK - REGISTRATIONS EDITS ; 09/12/05 1:27pm
"RTN","DGRPE",2,0)
 ;;5.3;Registration;**32,114,139,169,175,247,190,343,397,342,454,415,489,506,244,547,522,528,555,508,451,626,638,624,677,672,702,689**;Aug 13, 1993;Build 1
"RTN","DGRPE",3,0)
 ;
"RTN","DGRPE",4,0)
 ;DGDR contains a string of edits; edit=screen*10+item #
"RTN","DGRPE",5,0)
 ;
"RTN","DGRPE",6,0)
 ;line tag screen*10+item*1000 = continuation line
"RTN","DGRPE",7,0)
 ;
"RTN","DGRPE",8,0)
 I DGRPS=1,DGDR["101," D CEDITS^DGRPECE(DFN)
"RTN","DGRPE",9,0)
 I DGRPS=8 D ^DGRPEIS,Q Q  ; family demographic edit...not conventional!!  :)
"RTN","DGRPE",10,0)
 I DGRPS=9 D EDIT9^DGRPEIS2,Q Q  ; income screening data ($$$)
"RTN","DGRPE",11,0)
 I DGRPS=5,DGDR["501," D
"RTN","DGRPE",12,0)
 .I $G(DGPRFLG) D PREG^IBCNBME(DFN) Q
"RTN","DGRPE",13,0)
 .D REG^IBCNBME(DFN)
"RTN","DGRPE",14,0)
 .Q
"RTN","DGRPE",15,0)
 N QUIT S QUIT=0
"RTN","DGRPE",16,0)
 I DGRPS=6,$S(DGDR["602,"!(DGDR["603,"):1,1:0) D  I QUIT D Q Q  ;Screen 6 subscreens
"RTN","DGRPE",17,0)
 . I DGDR["601," D  Q:QUIT
"RTN","DGRPE",18,0)
 .. D SETDR("601,",.DR)
"RTN","DGRPE",19,0)
 .. S (DA,Y)=DFN,DIE="^DPT("
"RTN","DGRPE",20,0)
 .. D ^DIE I $D(Y) S QUIT=1
"RTN","DGRPE",21,0)
 .. S DGDR=$P(DGDR,"601,",1)_$P(DGDR,"601,",2,999)
"RTN","DGRPE",22,0)
 . I DGDR["602," D EN^DGRP6CL(DFN,.QUIT)  Q:QUIT  ; Conflicts
"RTN","DGRPE",23,0)
 . I DGDR["603," D EN^DGRP6EF(DFN,.QUIT)  Q:QUIT  ; Exposures
"RTN","DGRPE",24,0)
 ;-- Tricare screen #15
"RTN","DGRPE",25,0)
 I DGRPS=15 D EDIT^DGRP15,Q Q
"RTN","DGRPE",26,0)
 ;
"RTN","DGRPE",27,0)
 N DGPH,DGPHFLG
"RTN","DGRPE",28,0)
 K DR S (DA,Y)=DFN,DIE="^DPT(",DR="",DGDRS="DR",DGCT=0
"RTN","DGRPE",29,0)
 G ^DGRPE1:DGRPS>6
"RTN","DGRPE",30,0)
 I DGRPS=4 D ^DGRPE4
"RTN","DGRPE",31,0)
 D SETDR(DGDR,.DR)
"RTN","DGRPE",32,0)
 S (DA,Y)=DFN,DIE="^DPT("
"RTN","DGRPE",33,0)
 D ^DIE
"RTN","DGRPE",34,0)
 ;check for Combat Vet status
"RTN","DGRPE",35,0)
 I $G(DGCVFLG)=1,($P($$CVEDT^DGCV(DFN),U,2)']"") D
"RTN","DGRPE",36,0)
 . W !!,"**NOTE-Change(s) made in this session deleted the veteran's Combat Vet status!"
"RTN","DGRPE",37,0)
 . S DIR(0)="EA" D ^DIR K DIR
"RTN","DGRPE",38,0)
 I $G(DGPHFLG)>0 D EDITPH1^DGRPLE()
"RTN","DGRPE",39,0)
Q K DA,DIE,DR,DGCT,DGCVFLG,DGDR,DGDRD,DGDRS,DGRPADI,I,J,J1,DGCOMLOC,DIPA
"RTN","DGRPE",40,0)
 Q
"RTN","DGRPE",41,0)
 ;
"RTN","DGRPE",42,0)
SETDR(DGDR,DR) ; Set up DR string(s) for edit groups selected
"RTN","DGRPE",43,0)
 N DGCT,DGDRS,J1,J2
"RTN","DGRPE",44,0)
 K DR S DR="",DGDRS="DR",DGCT=0
"RTN","DGRPE",45,0)
 F I=1:1 S J=$P(DGDR,",",I) Q:J=""  S J1=J D:$T(@J1)
"RTN","DGRPE",46,0)
 . S DGDRD=$P($T(@J1),";;",2) D S
"RTN","DGRPE",47,0)
 . N J2
"RTN","DGRPE",48,0)
 . F J2=0:1 S J1=J*1000+J2 Q:'$T(@J1)  S DGDRD=$P($T(@J1),";;",2) D S
"RTN","DGRPE",49,0)
 Q
"RTN","DGRPE",50,0)
 ;
"RTN","DGRPE",51,0)
S I $L(@DGDRS)+$L(DGDRD)<241 S @DGDRS=@DGDRS_DGDRD Q
"RTN","DGRPE",52,0)
 S DGCT=DGCT+1,DGDRS="DR(1,2,"_DGCT_")",@DGDRS=DGDRD Q
"RTN","DGRPE",53,0)
 Q
"RTN","DGRPE",54,0)
 ;
"RTN","DGRPE",55,0)
SETFLDS(DGDR) ; Set up fields to edit
"RTN","DGRPE",56,0)
 Q
"RTN","DGRPE",57,0)
 ;
"RTN","DGRPE",58,0)
101 ;;
"RTN","DGRPE",59,0)
102 ;;1;
"RTN","DGRPE",60,0)
103 ;;.091;
"RTN","DGRPE",61,0)
104 ;;N FLG S (FLG(1),FLG(2))=1 D EN^DGREGAED(DFN,.FLG);
"RTN","DGRPE",62,0)
105 ;;.12105//NO;S:X="N" Y="@15" S:X="Y" DIE("NO^")="";.1217;I X']"" W !?4,$C(7),"But I need a Start Date for this Temporary Address." S Y=.12105;.1218;.1211;I X']"" W !?4,$C(7),"But I need at least one line of a Temporary address." S Y=.12105;
"RTN","DGRPE",63,0)
105000 ;;.1212;S:X']"" Y=.1214;.1213:.1215;.12112;Q;.12111;.1219;@15;K DIE("NO^");
"RTN","DGRPE",64,0)
109 ;;N FLG S (FLG(1),FLG(2))=1 D EN^DGREGAED(DFN,.FLG);.02;D DR109^DGRPE;6;2;K DR(2,2.02),DR(2,2.06);.05;.08;K DIE("NO^");
"RTN","DGRPE",65,0)
111 ;;.14105//NO;S:X="N" Y="@111" S:X="Y" DIE("NO^")="";.1417;I X']"" W !?4,$C(7),"But I need a Start Date." S Y=.14105;.1418;D DR111^DGRPE;.141;I '$P($$CAACT^DGRPCADD(DFN),U,2) W !?4,"But I need at least one active category." S Y=.14105;
"RTN","DGRPE",66,0)
111000 ;;K DR(2,2.141);.1411;I X']"" W !?4,$C(7),"I need at least one line of Address." S Y=.14105;.1412;S:X']"" Y=.1414;.1413;.1414;.1415;.1416;Q;.14111;@111;K DIE("NO^");
"RTN","DGRPE",67,0)
112 ;;.134;.135;.133
"RTN","DGRPE",68,0)
201 ;;.05;.08;.092;.093;.2401:.2403;57.4//NOT APPLICABLE;
"RTN","DGRPE",69,0)
202 ;;1010.15//NO;S:X'="Y" Y="@22";S DIE("NO^")="";1010.152;I X']"" W !?4,*7,"But I need to know where you were treated most recently." S Y=1010.15;1010.151;1010.154;S:X']"" Y="@22";1010.153;@22;K DIE("NO^");
"RTN","DGRPE",70,0)
203 ;;D DR203^DGRPE;6ETHNICITY;2RACE;K DR(2,2.02),DR(2,2.06);
"RTN","DGRPE",71,0)
205 ;;.181;
"RTN","DGRPE",72,0)
301 ;;.211;S:X']"" Y="@31";.212;.2125//NO;I X="Y" S DGADD=".21" D AD^DGRPE S Y=.21011;.213;S:X']"" Y=.216;.214;S:X']"" Y=.216;.215:.217;.2207;.219;.21011;@31;
"RTN","DGRPE",73,0)
302 ;;.2191;S:X']"" Y="@32";.2192;.21925//NO;I X="Y" S DGADD=".211" D AD^DGRPE S Y=.211011;
"RTN","DGRPE",74,0)
302000 ;;.2193;S:X']"" Y=.2196;.2194;S:X']"" Y=.2196;.2195:.2197;.2203;.2199;.211011;@32;
"RTN","DGRPE",75,0)
303 ;;N DGX1,DGX2;I '$L($P($G(^DPT(DFN,.21)),U)) S Y="@33";.3305//NO;I X="Y" S Y="@34",DGX1=1 S:$D(^DPT(DFN,.22)) $P(^(.22),U,1)=$P(^(.22),U,7);@33;.331;S:X']"" DGX1=2,Y="@34";.332;@34;
"RTN","DGRPE",76,0)
303000 ;;S:$G(DGX1) Y="@341";.333;S:X']"" Y=.336;.334;S:X']"" Y=.336;.335:.337;.2201;.339;.33011;S DGX1=2;@341;
"RTN","DGRPE",77,0)
303001 ;;S:$G(DGX1)=2 Y="@35";S DGX2=$G(^DPT(DA,.21));.331///^S X=$P(DGX2,U);.332///^S X=$P(DGX2,U,2);.333////^S X=$P(DGX2,U,3);.334///^S X=$P(DGX2,U,4);@35;
"RTN","DGRPE",78,0)
303002 ;;S:$G(DGX1)=2 Y="@351";.335///^S X=$P(DGX2,U,5);.336///^S X=$P(DGX2,U,6);.337///^S X=$P(DGX2,U,7);.338///^S X=$P(DGX2,U,8);.339///^S X=$P(DGX2,U,9);.33011///^S X=$P(DGX2,U,11);@351;K DGX1,DGX2;
"RTN","DGRPE",79,0)
304 ;;.3311;S:X']"" Y="@36";.3312;.3313;S:X']"" Y=.3316;.3314;S:X']"" Y=.3316;.3315:.3317;.2204;.3319;.331011;@36;        
"RTN","DGRPE",80,0)
305 ;;N DGX1,DGX2;I '$L($P($G(^DPT(DFN,.21)),U)) S Y="@37";.3405//NO;I X="Y" S DGX1=1,Y="@371" S:$D(^DPT(DFN,.22)) $P(^(.22),U,2)=$P(^(.22),U,7);@37;.341;S:X']"" DGX1=2,Y="@371";.342;@371;
"RTN","DGRPE",81,0)
305000 ;;S:$G(DGX1) Y="@38";.343;S:X']"" Y=.346;.344;S:X']"" Y=.346;.345:.347;.2202;.349;.34011;S DGX1=2;@38;
"RTN","DGRPE",82,0)
305001 ;;S:$G(DGX1)=2 Y="@381";S DGX2=$G(^DPT(DA,.21));.341///^S X=$P(DGX2,U);.342///^S X=$P(DGX2,U,2);.343///^S X=$P(DGX2,U,3);.344///^S X=$P(DGX2,U,4);@381
"RTN","DGRPE",83,0)
305002 ;;S:$G(DGX1)=2 Y="@39";.345///^S X=$P(DGX2,U,5);.346///^S X=$P(DGX2,U,6);.347///^S X=$P(DGX2,U,7);.348///^S X=$P(DGX2,U,8);.349///^S X=$P(DGX2,U,9);.34011///^S X=$P(DGX2,U,11);@39;K DGX1,DGX2;
"RTN","DGRPE",84,0)
401 ;;.01;.31115;S:($S(X']"":1,X=3:1,X=9:1,1:0)) Y="@41" S:(X'=5) Y=.3111;.31116;.3111;S:X']"" Y="@41";.3113;S:X']"" Y=.3116;.3114;S:X']"" Y=.3116;.3115:.3117;.2205;.3119;@41;
"RTN","DGRPE",85,0)
402 ;;.2514;.2515;S:($S(X']"":1,X=3:1,X=9:1,1:0)) Y="@42" S:(X'=5) Y=.251;.2516;.251;S:X']"" Y="@42";.252;S:X']"" Y=.255;.253;S:X']"" Y=.255;.254:.256;.2206;.258;@42;
"RTN","DGRPE",86,0)
501 ;;
"RTN","DGRPE",87,0)
502 ;;.381;.382///NOW;
"RTN","DGRPE",88,0)
503 ;;.383;
"RTN","DGRPE",89,0)
601 ;;@60101;D SET32^DGRPE(DA,.DIPA,1);.325;S DIPA("X1")=X S:X="" Y="@60199" S:$$FV^DGRPMS(X)'=1 Y="@60111";.3214;I X="" D PRF^DGRPE S Y="@60101";S Y="@6011";
"RTN","DGRPE",90,0)
601000 ;;@60111;D:DIPA("X1")'="" WARN32^DGRPE(DIPA("X1"),.DIPA,1,.Y);.32911;@6011;.328;.326;.327;.324;.3285//NO;S:X'="Y" Y="@60199";
"RTN","DGRPE",91,0)
601001 ;;@60102;D SET32^DGRPE(DA,.DIPA,2);.3291;S DIPA("X2")=X S:X="" Y="@60199" S:$$FV^DGRPMS(X)'=1 Y="@60112";.3214;I X="" D PRF^DGRPE S Y="@60102";S Y="@6012";
"RTN","DGRPE",92,0)
601002 ;;@60112;D:DIPA("X2")'="" WARN32^DGRPE(DIPA("X2"),.DIPA,2,.Y);.32912;@6012;.3294;.3292;.3293;.329;.32945//NO;S:X'="Y" Y="@60199";
"RTN","DGRPE",93,0)
601003 ;;@60103;D SET32^DGRPE(DA,.DIPA,3);.3296;S DIPA("X3")=X S:X="" Y="@60199" S:$$FV^DGRPMS(X)'=1 Y="@60113";.3214;I X="" D PRF^DGRPE S Y="@60103";S Y="@6013";
"RTN","DGRPE",94,0)
601004 ;;@60113;D:DIPA("X3")'="" WARN32^DGRPE(DIPA("X3"),.DIPA,3,.Y);.32913;@6013;.3299;.3297;.3298;.3295;@60199;
"RTN","DGRPE",95,0)
602 ;;Q;
"RTN","DGRPE",96,0)
603 ;;Q;
"RTN","DGRPE",97,0)
604 ;;.525//NO;S:X'="Y" Y="@62";.526:.528;@62;
"RTN","DGRPE",98,0)
605 ;;.5291//NO;S:X'="Y" Y="@63";.5292:.5294;@63;
"RTN","DGRPE",99,0)
606 ;;I $P($G(^DPT(DFN,.361)),U,3)="H" S Y="@6131";.3602//NO;.3603//NO;S Y="@6132";@6131;.3602;.3603;@6132;
"RTN","DGRPE",100,0)
607 ;;.368//NO;.369//NO;I $S('$D(^DPT(DA,.36)):1,$P(^(.36),U,8)="Y"!($P(^(.36),U,9)="Y"):0,1:1) S Y="@614";.37;@614;
"RTN","DGRPE",101,0)
608 ;;S DGPHFLG=0;.531;S:X'="Y" DGX=X,Y="@616";.532///^S X="PENDING";S Y="@6161";@616;S:DGX'="N" Y="@6162";.533///^S X="VAMC";@6161;S DGPHFLG=1;.535///^S X=$$DIV^DGRPLE();@6162;
"RTN","DGRPE",102,0)
AD N DGZ4,DGPC
"RTN","DGRPE",103,0)
 S X=$S($D(^DPT(DA,.11)):^(.11),1:""),DGZ4=$P(X,U,12),DGPHONE=$S($D(^(.13)):$P(^(.13),U,1),1:""),Y=$S($D(^(DGADD)):^(DGADD),1:""),^(DGADD)=$P(Y,U,1)_U_$P(Y,U,2)_U_$P(X,U,1,6)_U_DGPHONE_U_$P(Y,U,10)
"RTN","DGRPE",104,0)
 I DGZ4 S DGPC=$S((DGADD=.33):1,(DGADD=.34):2,(DGADD=.211):3,(DGADD=.331):4,(DGADD=.311):5,(DGADD=.25):6,(DGADD=.21):7,1:0) S:DGPC $P(^DPT(DFN,.22),U,DGPC)=DGZ4
"RTN","DGRPE",105,0)
 K DGADD,DGPHONE Q
"RTN","DGRPE",106,0)
DR109 ;Drop through (use same logic as DR203)
"RTN","DGRPE",107,0)
DR203 S DR(2,2.02)=".01RACE;I $P($G(^DIC(10.3,+$P($G(^DPT(DA(1),.02,DA,0)),""^"",2),0)),""^"",2)=""S"" S Y=""@2031"";.02;@2031;"
"RTN","DGRPE",108,0)
 S DR(2,2.06)=".01ETHNICITY;I $P($G(^DIC(10.3,+$P($G(^DPT(DA(1),.06,DA,0)),""^"",2),0)),""^"",2)=""S"" S Y=""@2032"";.02;@2032;"
"RTN","DGRPE",109,0)
 Q
"RTN","DGRPE",110,0)
DR111 ;Set DR string for Confidential Address categories
"RTN","DGRPE",111,0)
 S DR(2,2.141)=".01;1//YES;"
"RTN","DGRPE",112,0)
 Q
"RTN","DGRPE",113,0)
PRF ; Write Proof needed for FV
"RTN","DGRPE",114,0)
 W !?4,$C(7),"Proof is required for Filipino vet."
"RTN","DGRPE",115,0)
 Q
"RTN","DGRPE",116,0)
 ;
"RTN","DGRPE",117,0)
SET32(DA,DIPA,SEQ) ; Extract the .32 node from patient file and set DIPA
"RTN","DGRPE",118,0)
 ; array with the BOS and component data for the SEQ military service
"RTN","DGRPE",119,0)
 ; episode (1-3)
"RTN","DGRPE",120,0)
 N I,Q,Z
"RTN","DGRPE",121,0)
 K DIPA(32,SEQ)
"RTN","DGRPE",122,0)
 S Q=$G(^DPT(DA,.32)),Z=$G(^(.3291))
"RTN","DGRPE",123,0)
 S DIPA(32,SEQ)=$P(Q,U,SEQ*5)_U_$P(Z,U,SEQ),DIPA("X"_SEQ)=$P(DIPA(32,SEQ),U)
"RTN","DGRPE",124,0)
 Q
"RTN","DGRPE",125,0)
 ;
"RTN","DGRPE",126,0)
WARN32(X,DIPA,SEQ,Y) ; Warn if the BOS is changed, then the component will
"RTN","DGRPE",127,0)
 ; be deleted
"RTN","DGRPE",128,0)
 ; Returns Y to skip component if the component should not be asked
"RTN","DGRPE",129,0)
 ;   for this branch of service
"RTN","DGRPE",130,0)
 N Z
"RTN","DGRPE",131,0)
 I '$$CMP(X) S Y="@601"_SEQ
"RTN","DGRPE",132,0)
 S Z=$G(DIPA(32,SEQ))
"RTN","DGRPE",133,0)
 Q:$S($P(Z,U,2)=""!($P(Z,U)=""):1,1:$P(Z,U)=X)
"RTN","DGRPE",134,0)
 ;
"RTN","DGRPE",135,0)
 I '$D(DIQUIET) W !!,*7,"** WARNING - BRANCH OF SERVICE WAS CHANGED SO THE COMPONENT WAS DELETED",!
"RTN","DGRPE",136,0)
 Q
"RTN","DGRPE",137,0)
 ;
"RTN","DGRPE",138,0)
CMP(X) ; Function to determine if service component is valid for
"RTN","DGRPE",139,0)
 ; branch of service ien in X   0 = invalid  1 = valid  
"RTN","DGRPE",140,0)
 ; Component only valid for ARMY/AIR FORCE/MARINES/COAST GUARD/NOAA/USPHS
"RTN","DGRPE",141,0)
 Q $S('$G(X):0,X'>5!(X=9)!(X=10):1,1:0)
"RTN","DGRPE",142,0)
 ;
"RTN","DGRPH")
0^5^B24473030^B27125641
"RTN","DGRPH",1,0)
DGRPH ;ALB/MRL,TMK - REGISTRATION HELP ROUTINE ;19 OCT 05
"RTN","DGRPH",2,0)
 ;;5.3;Registration;**114,343,397,415,489,545,638,624,689**;Aug 13, 1993;Build 1
"RTN","DGRPH",3,0)
 S DGRPH="" D H^DGRPU K DGRPH W !,"Enter '^' to stop the display ",$S(DGRPV:"",1:"and edit "),"of data, '^N' to jump to screen #N (see",!,"listing below), <RET> to continue on to the next available screen" I DGRPV W "." G M
"RTN","DGRPH",4,0)
 W " or enter",!,"the field group number(s) you wish to edit using commas and dashes as",!,"delimiters.  Those groups enclosed in brackets ""[]"" are editable while those",!,"enclosed in arrows ""<>"" are not."
"RTN","DGRPH",5,0)
 W "  Enter 'ALL' to edit all editable data",!,"elements on the screen."
"RTN","DGRPH",6,0)
M I DGRPS=9,DGRPSEL="V" W !!,"You may precede your selection with 'V' to denote veteran."
"RTN","DGRPH",7,0)
 I DGRPS=9,DGRPSEL]"V" W !!,"To edit a specific column, enter 'V'",$S($D(DGREL("S")):", 'S'",1:""),$S($D(DGREL("D")):", 'D'",1:"")," in front of the selected items."
"RTN","DGRPH",8,0)
 S Z="DATA GROUPS ON SCREEN "_DGRPS,DGRPCM=1 W ! D WW^DGRPV S DGRPCM=0 D:DGRPS=1.1 A1 D:DGRPS'=1.1 @DGRPS D:$S(DGRPS<11:1,DGRPS=14:1,1:0) W D S W ! F I=$Y:1:20 W !
"RTN","DGRPH",9,0)
 ;S Z="Press RETURN key",DGRPCM=1 D WW^DGRPV S DGRPCM=0 W " to EXIT Screen ",DGRPS," HELP " R X:DTIME S X="" Q
"RTN","DGRPH",10,0)
 S DGRPW=0 W "Press " S Z="<RETURN>",DGRPCM=1 D WW^DGRPV W " KEY " S Z="TO EXIT" D WW^DGRPV W " SCREEN ",DGRPS," " S Z="HELP" D WW^DGRPV W " " R X:DTIME S (DGRPCM,DGRPW)=0 Q
"RTN","DGRPH",11,0)
1 S X="Name, SSN, DOB, Sex^Alias Name & SSN (if applicable)^Remarks concerning this patient^Home Address, Phone & Work Phone^Temporary Address, Dates, Phone" Q
"RTN","DGRPH",12,0)
A1 S X="Conf. Address,Dates and Types^E-Mail, Cell Phone & Pager #s" Q
"RTN","DGRPH",13,0)
2 S X="POB, Parents, etc.^Dates/Locations of Previous Care^Race and Ethnicity^Date of Death Information" Q
"RTN","DGRPH",14,0)
3 S X="Primary Next-of-Kin^Secondary Next-of-Kin^Primary Emergency Contact^Secondary Emergency Contact^Designee to receive personal effects" Q
"RTN","DGRPH",15,0)
4 S X="Applicant Employer, Address^Spouses Employer, Address" Q
"RTN","DGRPH",16,0)
5 S X="Unexpired Insurance Policies^Eligibile for Medicaid" Q
"RTN","DGRPH",17,0)
6 S X="Service History^Conflict Locations^Exposure Factors^Prisoner of War^Combat^Military Retirement/Disability^Dental History^Purple Heart Recipient" Q
"RTN","DGRPH",18,0)
7 S X="Patient Type, SC Data, Claim Info^VA Monetary Benefits^POS, Eligibility Code(s)^SC Conditions relayed by applicant" Q
"RTN","DGRPH",19,0)
8 S X="Spouse's Demographic Info^Dependents' Demographic Info" Q
"RTN","DGRPH",20,0)
9 S X="Social Security^U.S. Civil Service^U.S. Railroad Retirement^Military Retirement^Unemployment^Other Retirement^Total Employment Income^Interest,Dividend,Annuity^Workers Comp or Black Lung^Other Income" Q
"RTN","DGRPH",21,0)
10 S X="Ineligible Patient Information^Missing Patient Information" Q
"RTN","DGRPH",22,0)
11 S X="Eligibility Verification^Monetary Benefits Verification^Service Record Verification^Rated Disabilities (VA)" Q
"RTN","DGRPH",23,0)
12 W !,"Four most recent admission episodes on file for this applicant are displayed",!,"in inverse order." Q
"RTN","DGRPH",24,0)
13 W !,"Four most recent applications for care (registrations) are displayed in",!,"inverse order." Q
"RTN","DGRPH",25,0)
14 S X="Clinics in which actively enrolled^Pending (future) appointments" Q
"RTN","DGRPH",26,0)
15 W !,"Sponsor information is displayed for patients." Q
"RTN","DGRPH",27,0)
S W ! S Z="AVAILABLE SCREENS",DGRPCM=1 D WW^DGRPV S DGRPCM=0
"RTN","DGRPH",28,0)
 S X="Demographic^Confidential Address^Patient^Contact^Employment^Insurance^Service Record^Eligibility^Family Demographic^Income Screening^Missing/Ineligible^Eligibility Verification^"
"RTN","DGRPH",29,0)
 S X=X_"Admission Info^Application Info^Appointment Info^Sponsor Demograhics"
"RTN","DGRPH",30,0)
 ;S C=0 F I=1:1 S J=$P(X,"^",I) Q:J=""  I '$E(DGRPVV,I) S C=C+1,Z="^"_I,DGRPW=(C#2) D WW^DGRPV S Z=$S(I?1N:"  ",1:" ")_J_" Data",Z1=$S((C#2)&(I?1N):36,(C#2):35,1:1) D WW1^DGRPV:(C#2) I '(C#2) W Z
"RTN","DGRPH",31,0)
 N DGJ
"RTN","DGRPH",32,0)
 S DGJ=""
"RTN","DGRPH",33,0)
 S C=0 F I=1:1 S DGJ=$O(DGRPVV(DGJ)) Q:DGJ=""  I '$E(DGRPVV,DGJ) D
"RTN","DGRPH",34,0)
 .S C=C+1,Z="^"_DGJ,DGRPW=(C#2)
"RTN","DGRPH",35,0)
 .D WW^DGRPV
"RTN","DGRPH",36,0)
 .S Z1=$S((C#2)&(DGJ?1N):36,(C#2):35,1:1)
"RTN","DGRPH",37,0)
 .S Z=$S(DGJ?1N:"  ",1:" ")_$P(X,U,I)_" Data"
"RTN","DGRPH",38,0)
 .D WW1^DGRPV:(C#2)
"RTN","DGRPH",39,0)
 .I '(C#2) W Z
"RTN","DGRPH",40,0)
 Q
"RTN","DGRPH",41,0)
W F I=1:1 S J=$P(X,"^",I) Q:J=""  S Z=I,DGRPW=(I#2) D WW^DGRPV S Z=$S(I<10:"  ",1:" ")_J,Z1=$S((I#2)&(I>10):36,(I#2):37,1:1) D WW1^DGRPV
"RTN","DGRPH",42,0)
 W:'((I-1)#2) ! Q
"RTN","DGRPMS")
0^34^B49590588^B48037248
"RTN","DGRPMS",1,0)
DGRPMS ;ALB/BRM,LBD - MILITARY SERVICE APIS ; 1/24/05 8:44am
"RTN","DGRPMS",2,0)
 ;;5.3;Registration;**451,626,646,673,689**;Aug 13, 1993;Build 1
"RTN","DGRPMS",3,0)
 ;
"RTN","DGRPMS",4,0)
VALCON1(DFN,IEN,CDATE,FRTO) ; Valid conflict input for OIF/OEF/UNKNOWN OEF/OIF?
"RTN","DGRPMS",5,0)
 ; Need to send the ien of the multiple as well as the DFN and
"RTN","DGRPMS",6,0)
 ; determine the specific conflict area
"RTN","DGRPMS",7,0)
 N Z
"RTN","DGRPMS",8,0)
 S Z=$P("OIF^OEF^UNK",U,+$G(^DPT(DFN,.3215,+IEN,0)))
"RTN","DGRPMS",9,0)
 ;Q:Z="UNK" 1  ; Never need to check this - only entered through HEC
"RTN","DGRPMS",10,0)
 Q $$VALCON(DFN,Z_"-"_IEN,CDATE,FRTO)
"RTN","DGRPMS",11,0)
 ;
"RTN","DGRPMS",12,0)
VALCON(DFN,CNFLCT,CDATE,FRTO,OEIFAIL) ;is this a valid conflict input?
"RTN","DGRPMS",13,0)
 ;
"RTN","DGRPMS",14,0)
 ;INPUT:
"RTN","DGRPMS",15,0)
 ;      FRTO - 0=FRDT 1=TODT  (defaults to FRDT if FRTO="")
"RTN","DGRPMS",16,0)
 ;OUTPUT:
"RTN","DGRPMS",17,0)
 ;      OEIFAIL = 1 for not within MSE for OIF/OEF data (pass by ref)
"RTN","DGRPMS",18,0)
 ;
"RTN","DGRPMS",19,0)
 N RTN,X,Y,FRDT,TODT,CNFLCTV,IGNORE,COMPOW,MSG,DTCHK,CNFLCT2,OEFOIF
"RTN","DGRPMS",20,0)
 S OEIFAIL=0
"RTN","DGRPMS",21,0)
 Q:'$D(DFN) "0^INVALID PATIENT"
"RTN","DGRPMS",22,0)
 Q:'$D(^DPT(DFN)) "0^INVALID PATIENT"
"RTN","DGRPMS",23,0)
 Q:'$$VALID^DGRPDT(.CDATE) "0^INVALID DATE"
"RTN","DGRPMS",24,0)
 S FRTO=+$G(FRTO)
"RTN","DGRPMS",25,0)
 I 'FRTO S TODT=$$GETDT(DFN,.CNFLCT),FRDT=CDATE K DGFRDT
"RTN","DGRPMS",26,0)
 E  S FRDT=$$GETDT(DFN,.CNFLCT,FRTO) S:$G(DGFRDT) FRDT=$G(DGFRDT) S TODT=CDATE K DGFRDT
"RTN","DGRPMS",27,0)
 S DTCHK=$$DTUTIL^DGRPDT(CDATE,$$GETDT(DFN,.CNFLCT,'FRTO),1)
"RTN","DGRPMS",28,0)
 I 'DTCHK D MSG($P(DTCHK,"^",2),2,2) Q DTCHK
"RTN","DGRPMS",29,0)
 I CNFLCT="COMB"!(CNFLCT="POW") D
"RTN","DGRPMS",30,0)
 .S COMPOW=$S(CNFLCT="COMB":1,1:2)
"RTN","DGRPMS",31,0)
 .S CNFLCT2=CNFLCT
"RTN","DGRPMS",32,0)
 .S CNFLCT=$$COMPOW($S($G(DGCOMLOC):$P(DGCOMLOC,"^"),1:$$GETDT(DFN,CNFLCT,3)))
"RTN","DGRPMS",33,0)
 S CNFLCTV=""
"RTN","DGRPMS",34,0)
 I CNFLCT]"" S CNFLCTV=$$CNFLCTDT^DGRPDT(FRDT,$S(FRTO:TODT,1:""),.CNFLCT)
"RTN","DGRPMS",35,0)
 I ('CNFLCTV) D MSG($P(CNFLCTV,"^",2),2,1) Q CNFLCTV  ;dates are not within conflict
"RTN","DGRPMS",36,0)
 ;
"RTN","DGRPMS",37,0)
 S MSG=$S('$G(COMPOW):"Conflict",$G(COMPOW)=2:"POW",1:"Combat")
"RTN","DGRPMS",38,0)
 I FRDT,TODT,'$$B4^DGRPDT(FRDT,TODT,0) D MSG((MSG_" From Date is not Before "_MSG_" To Date"),2,1) Q "0^"_MSG_" From Date is not Before "_MSG_" To Date"
"RTN","DGRPMS",39,0)
 S IGNORE=$S('$P(CNFLCT,"-",2):$P($P($T(@($P(CNFLCT,"-"))),";;",2),"^",FRTO+1),1:"")
"RTN","DGRPMS",40,0)
 S:$G(COMPOW) IGNORE=$P($P($T(@(CNFLCT2)),";;",2),"^",FRTO+1)
"RTN","DGRPMS",41,0)
 I $G(COMPOW)=2 D
"RTN","DGRPMS",42,0)
 . S RTN=$$OVRLPCHK^DGRPDT(DFN,FRDT,TODT,-1,IGNORE)
"RTN","DGRPMS",43,0)
 E  D
"RTN","DGRPMS",44,0)
 . S OEFOIF=$S($P(CNFLCT,"-",2):$P(CNFLCT,"-",2)_U_CNFLCT,1:""),RTN=$$COVRLP2^DGRPDT(DFN,FRDT,TODT,IGNORE,.OEFOIF)
"RTN","DGRPMS",45,0)
 . I 'RTN,$G(OEFOIF),$G(OEFOIF(1)) S OEIFAIL=1
"RTN","DGRPMS",46,0)
 Q:RTN RTN
"RTN","DGRPMS",47,0)
 D MSG($P(RTN,"^",2),2,1)
"RTN","DGRPMS",48,0)
 Q RTN
"RTN","DGRPMS",49,0)
 ;
"RTN","DGRPMS",50,0)
VALMSE(DFN,MDATE,FRTO,FLD) ;is this a valid Military Service Episode date?
"RTN","DGRPMS",51,0)
 ;
"RTN","DGRPMS",52,0)
 ;INPUT:
"RTN","DGRPMS",53,0)
 ;      FRTO - 0=FRDT 1=TODT  (defaults to FRDT if FRTO="")
"RTN","DGRPMS",54,0)
 ;       FLD - MSE field being edited/added (MSL,MSNTL,MSNNTL)
"RTN","DGRPMS",55,0)
 ;
"RTN","DGRPMS",56,0)
 N RTN,X,Y,FRDT,TODT,IGNORE,DTCHK
"RTN","DGRPMS",57,0)
 Q:'$D(DFN) "0^INVALID PATIENT"
"RTN","DGRPMS",58,0)
 Q:'$D(^DPT(DFN)) "0^INVALID PATIENT"
"RTN","DGRPMS",59,0)
 Q:'$$VALID^DGRPDT(.MDATE) "0^INVALID DATE"
"RTN","DGRPMS",60,0)
 S FRTO=+$G(FRTO)
"RTN","DGRPMS",61,0)
 I 'FRTO S FRDT=MDATE,TODT=$$GETDT(DFN,.FLD,FRTO) K DGFRDT
"RTN","DGRPMS",62,0)
 E  S FRDT=$$GETDT(DFN,.FLD,FRTO) S:$G(DGFRDT) FRDT=$G(DGFRDT) S TODT=MDATE K DGFRDT
"RTN","DGRPMS",63,0)
 S DTCHK=$$DTUTIL^DGRPDT(MDATE,$$GETDT(DFN,.FLD,'FRTO),1)
"RTN","DGRPMS",64,0)
 I 'DTCHK D MSG($P(DTCHK,"^",2),2,2) K DGCOMBR Q DTCHK
"RTN","DGRPMS",65,0)
 I FRTO,FRDT,TODT,'$$B4^DGRPDT(.FRDT,.TODT,0) D MSG("Service Entry Date is not before Service Separation Date",2,1) K DGCOMBR Q "0^Service Entry Date is not before Service Separation Date"
"RTN","DGRPMS",66,0)
 S IGNORE=$P($P($T(@(FLD)),";;",2),"^",FRTO+1)
"RTN","DGRPMS",67,0)
 S RTN=$$OVRLPCHK^DGRPDT(.DFN,.FRDT,.TODT,1,.IGNORE)
"RTN","DGRPMS",68,0)
 I $G(DGCOMBR)']"" S DGCOMBR=$$GETDT(DFN,.FLD,4)
"RTN","DGRPMS",69,0)
 I RTN,FRTO,$$BRANCH(.DGCOMBR),('$$WWII(DFN,TODT,.FLD)) D MSG("Branch of Service Requires WWII Dates of Service",2,1) K DGCOMBR Q "0^BOS Requires WWII Dates"
"RTN","DGRPMS",70,0)
 K DGCOMBR
"RTN","DGRPMS",71,0)
 Q:RTN RTN
"RTN","DGRPMS",72,0)
 D MSG($P(RTN,"^",2),2,1)
"RTN","DGRPMS",73,0)
 Q RTN
"RTN","DGRPMS",74,0)
 ;
"RTN","DGRPMS",75,0)
BRANCH(DGCOMBR) ;branches of service that require WWII service dates
"RTN","DGRPMS",76,0)
 N BRANCH
"RTN","DGRPMS",77,0)
 Q:'$G(DGCOMBR) 0
"RTN","DGRPMS",78,0)
 S BRANCH=$P(DGCOMBR,"^",2)
"RTN","DGRPMS",79,0)
 Q:BRANCH="MERCHANT SEAMAN" 1
"RTN","DGRPMS",80,0)
 Q:BRANCH="F.COMMONWEALTH" 1
"RTN","DGRPMS",81,0)
 Q:BRANCH="F.GUERILLA" 1
"RTN","DGRPMS",82,0)
 Q:BRANCH="F.SCOUTS NEW" 1
"RTN","DGRPMS",83,0)
 Q:BRANCH="F.SCOUTS OLD" 1
"RTN","DGRPMS",84,0)
 Q 0
"RTN","DGRPMS",85,0)
 ;
"RTN","DGRPMS",86,0)
VALCOMP(DFN,CODE,DGEPI) ; Verify component is consistent with the corresponding
"RTN","DGRPMS",87,0)
 ;  branch of service  Also, branch of service must be entered before
"RTN","DGRPMS",88,0)
 ;  component.
"RTN","DGRPMS",89,0)
 ;  ACTIVATED NATIONAL GUARD (G) only valid for ARMY or AIR FORCE branch
"RTN","DGRPMS",90,0)
 ;  ACTIVATED RESERVE (V) only valid for ARMY, AIR FORCE, MARINES, NAVY
"RTN","DGRPMS",91,0)
 ;                    or COAST GUARD branch
"RTN","DGRPMS",92,0)
 ; DFN = ien of patient in file 2
"RTN","DGRPMS",93,0)
 ; DGEPI = episode # to check (1=LAST, 2=NTL, 3=NNTL)
"RTN","DGRPMS",94,0)
 ; CODE = the component code
"RTN","DGRPMS",95,0)
 ; OUTPUT: 1 if valid component
"RTN","DGRPMS",96,0)
 ;         0 if invalid component or branch of serv missing
"RTN","DGRPMS",97,0)
 N Z
"RTN","DGRPMS",98,0)
 S Z=+$P($G(^DPT(DFN,.32)),U,DGEPI*5)
"RTN","DGRPMS",99,0)
 I 'Z Q 0  ; Require bos
"RTN","DGRPMS",100,0)
 I CODE="R" Q 1  ; Regular is valid for all
"RTN","DGRPMS",101,0)
 Q:Z=1!(Z=2) 1  ; Army (1)/air force (2) valid for guard and reserves
"RTN","DGRPMS",102,0)
 ; reserves also include navy (3), marines (4), coast guard (5)
"RTN","DGRPMS",103,0)
 I CODE="V" Q $S(Z>2&(Z<6):1,1:0)
"RTN","DGRPMS",104,0)
 ;
"RTN","DGRPMS",105,0)
 Q 0
"RTN","DGRPMS",106,0)
 ;
"RTN","DGRPMS",107,0)
GETDT(DFN,CNFLCT,FRTO) ; get from date, to date, or location from patient file
"RTN","DGRPMS",108,0)
 ;
"RTN","DGRPMS",109,0)
 N CFLDS,CFLD,CNF1,CNF2,RTN1,IENS,FILE
"RTN","DGRPMS",110,0)
 Q:'$D(DFN) ""
"RTN","DGRPMS",111,0)
 Q:'$D(^DPT(DFN)) ""
"RTN","DGRPMS",112,0)
 Q:$G(CNFLCT)="" ""
"RTN","DGRPMS",113,0)
 S:$G(FRTO)="" FRTO=0
"RTN","DGRPMS",114,0)
 S CNF1=$P(CNFLCT,"-"),CNF2=+$P(CNFLCT,"-",2)
"RTN","DGRPMS",115,0)
 ; OEF/OIF/ UNKNOWN OEF/OIF data without a supplied entry in the
"RTN","DGRPMS",116,0)
 ;   multiple cannot be retrieved  OEF-1 indicates an OEF location
"RTN","DGRPMS",117,0)
 ;   stored at the '1' subscript of the .3215 multiple
"RTN","DGRPMS",118,0)
 I "^OEF^OIF^UNK^"[(U_CNF1_U),'CNF2 Q ""
"RTN","DGRPMS",119,0)
 S CFLDS=$P($T(@(CNF1)),";;",2) Q:CFLDS']"" ""
"RTN","DGRPMS",120,0)
 S CFLD=$S('FRTO:$P(CFLDS,"^",2),FRTO=1:$P(CFLDS,"^"),1:$P(CFLDS,"^",3))
"RTN","DGRPMS",121,0)
 Q:'CFLD ""
"RTN","DGRPMS",122,0)
 S IENS=DFN_",",FILE=2
"RTN","DGRPMS",123,0)
 S:CNF2 IENS=CNF2_","_IENS,FILE=2.3215 ; For OIF/OEF, must set ref to multiple
"RTN","DGRPMS",124,0)
 S RTN1=$$GET1^DIQ(FILE,IENS,CFLD,"I")
"RTN","DGRPMS",125,0)
 I FRTO=4 S RTN1=RTN1_"^"_$$EXTERNAL^DILFD(FILE,CFLD,"",RTN1)
"RTN","DGRPMS",126,0)
 Q RTN1
"RTN","DGRPMS",127,0)
 ;
"RTN","DGRPMS",128,0)
WWII(DFN,TODT,FLD) ; was this patient in WWII?
"RTN","DGRPMS",129,0)
 ;  this API assumes the WWII period to be from 12/07/41-12/31/46
"RTN","DGRPMS",130,0)
 ;
"RTN","DGRPMS",131,0)
 N OK,NODE,DATA,WWIIS,WWIIE,PATDT,PATE,PATS
"RTN","DGRPMS",132,0)
 Q:'$G(DFN) "-1^UNKNOWN"
"RTN","DGRPMS",133,0)
 S NODE(.32)=".326,.327,.3285,.3292,.3293,.32945,.3297,.3298"
"RTN","DGRPMS",134,0)
 S WWIIS=2411207,WWIIE=2461231
"RTN","DGRPMS",135,0)
 D GETDAT^DGRPDT(DFN,.NODE,.DATA)
"RTN","DGRPMS",136,0)
 S PATDT=$G(FLD) Q:PATDT']"" 0
"RTN","DGRPMS",137,0)
 S PATS=$P($G(DATA(PATDT)),"^"),PATE=$P($G(DATA(PATDT)),"^",2)
"RTN","DGRPMS",138,0)
 S:'$G(TODT) TODT=PATE
"RTN","DGRPMS",139,0)
 S OK=0
"RTN","DGRPMS",140,0)
 S OK=$$WITHIN^DGRPDT(WWIIS,WWIIE,PATS)
"RTN","DGRPMS",141,0)
 S:'OK OK=$$WITHIN^DGRPDT(WWIIS,WWIIE,TODT)
"RTN","DGRPMS",142,0)
 S:'OK OK=$$RWITHIN^DGRPDT(PATS,TODT,WWIIS,WWIIE)
"RTN","DGRPMS",143,0)
 Q $G(OK)
"RTN","DGRPMS",144,0)
DELMSE(DFN,TYPE) ; delete MSE from patient
"RTN","DGRPMS",145,0)
 ;
"RTN","DGRPMS",146,0)
 ; Input: DFN - Internal entry number for the Patient File (#2)
"RTN","DGRPMS",147,0)
 ;       TYPE - 1=Last MSE  2=Next to Last MSE  3=Next to Next to Last
"RTN","DGRPMS",148,0)
 ;
"RTN","DGRPMS",149,0)
 Q:'$G(TYPE)
"RTN","DGRPMS",150,0)
 Q:(('$G(DFN))!'$D(^DPT(DFN)))
"RTN","DGRPMS",151,0)
 N IENS,FDA,X,X1,X2,Y,ZZ,ROOT
"RTN","DGRPMS",152,0)
 S IENS=DFN_",",ROOT="FDA(2,IENS)",X=""
"RTN","DGRPMS",153,0)
 I TYPE=1 F ZZ=.324,.326,.327,.328 S @ROOT@(ZZ)=X
"RTN","DGRPMS",154,0)
 I TYPE=2 F ZZ=.329,.3292,.3293,.3294 S @ROOT@(ZZ)=X
"RTN","DGRPMS",155,0)
 I TYPE=3 F ZZ=.3295,.3297,.3298,.3299 S @ROOT@(ZZ)=X
"RTN","DGRPMS",156,0)
 D FILE^DIE("K","FDA","ERR")
"RTN","DGRPMS",157,0)
 Q
"RTN","DGRPMS",158,0)
 ;
"RTN","DGRPMS",159,0)
COMPOW(VAL) ;convert POW and Combat Location fields
"RTN","DGRPMS",160,0)
 ;
"RTN","DGRPMS",161,0)
 N ABRV
"RTN","DGRPMS",162,0)
 Q:'$G(VAL) ""
"RTN","DGRPMS",163,0)
 S ABRV=$$GET1^DIQ(22,VAL_",",1,"I")
"RTN","DGRPMS",164,0)
 Q:ABRV="WWI" "WWI"
"RTN","DGRPMS",165,0)
 Q:ABRV="WWII-EUROPE" "WWIIE"
"RTN","DGRPMS",166,0)
 Q:ABRV="WWII-PACIFIC" "WWIIP"
"RTN","DGRPMS",167,0)
 Q:ABRV="KOREAN" "KOR"
"RTN","DGRPMS",168,0)
 Q:ABRV="VIETNAM" "VIET"
"RTN","DGRPMS",169,0)
 Q:ABRV="OTHER" "OTHER"
"RTN","DGRPMS",170,0)
 Q:ABRV="PERSIAN GULF" "GULF"
"RTN","DGRPMS",171,0)
 Q:ABRV="YUGOSLAVIA" "YUG"
"RTN","DGRPMS",172,0)
 Q:ABRV="SOMALIA" "SOM"
"RTN","DGRPMS",173,0)
 Q ""
"RTN","DGRPMS",174,0)
 ;
"RTN","DGRPMS",175,0)
FV(X) ;Is this a Filipino Vet branch of service?
"RTN","DGRPMS",176,0)
 ;Added for HVE II (DG*5.3*451)
"RTN","DGRPMS",177,0)
 ;INPUT:  X = IEN Branch of Service file #23
"RTN","DGRPMS",178,0)
 ;OUTPUT: 1 = Filipino Vet BOS (F.COMMONWEALTH, F.GUERILLA, F.SCOUTS NEW)
"RTN","DGRPMS",179,0)
 ;        2 = Filipino Vet BOS (F.SCOUTS OLD)
"RTN","DGRPMS",180,0)
 ;        0 = Not Filipino Vet BOS
"RTN","DGRPMS",181,0)
 N FV
"RTN","DGRPMS",182,0)
 I '$G(X) Q 0
"RTN","DGRPMS",183,0)
 S FV=$P($G(^DIC(23,X,0)),U,1)
"RTN","DGRPMS",184,0)
 Q $S(FV="F.SCOUTS OLD":2,$E(FV,1,2)="F.":1,1:0)
"RTN","DGRPMS",185,0)
 ;
"RTN","DGRPMS",186,0)
FVP ;MUMPS cross-reference "AFV1" on Service Branch [Last] (#.325), "AFV2"
"RTN","DGRPMS",187,0)
 ;on Service Branch [NTL] (#.3291), and "AFV3" on Service Branch [NNTL]
"RTN","DGRPMS",188,0)
 ;(#.3296) in the Patient file #2.  If the Service Branch fields do not
"RTN","DGRPMS",189,0)
 ;contain a Filipino Veteran branch of service, the Filipino Vet Proof
"RTN","DGRPMS",190,0)
 ;field (#.3214) will be deleted.
"RTN","DGRPMS",191,0)
 Q:'$G(DA)
"RTN","DGRPMS",192,0)
 N BOS,MS,FV,IENS,FDA
"RTN","DGRPMS",193,0)
 S MS=$G(^DPT(DA,.32))
"RTN","DGRPMS",194,0)
 F BOS=5,10,15 S FV=$$FV($P(MS,U,BOS)) Q:FV=1
"RTN","DGRPMS",195,0)
 I FV=1 Q  ;Filipino Vet BOS found, quit
"RTN","DGRPMS",196,0)
 ;Delete Filipino Vet Proof
"RTN","DGRPMS",197,0)
 S IENS=DA_",",FDA(2,IENS,.3214)="@"
"RTN","DGRPMS",198,0)
 D FILE^DIE("","FDA")
"RTN","DGRPMS",199,0)
 Q
"RTN","DGRPMS",200,0)
 ;
"RTN","DGRPMS",201,0)
MSG(MSGTXT,LF1,LF2) ; This api will format the output text in order to utilize
"RTN","DGRPMS",202,0)
 ; the EN^DDIOL utility.
"RTN","DGRPMS",203,0)
 ;INPUT:  MSGTXT = Message text to display
"RTN","DGRPMS",204,0)
 ;           LF1 = Number of line feeds to preceed the message
"RTN","DGRPMS",205,0)
 ;           L2F = Number of line feeds to follow the message
"RTN","DGRPMS",206,0)
 ;        
"RTN","DGRPMS",207,0)
 N MSGARY,LFSTR
"RTN","DGRPMS",208,0)
 S $P(LFSTR,"!",50)="!"
"RTN","DGRPMS",209,0)
 S:$G(LF1)'="" MSGARY(.5,"F")=$E(LFSTR,1,(LF1-1))
"RTN","DGRPMS",210,0)
 S MSGARY(1)=MSGTXT
"RTN","DGRPMS",211,0)
 S:$G(LF2)'="" MSGARY(2,"F")=$E(LFSTR,1,LF2)
"RTN","DGRPMS",212,0)
 D EN^DDIOL(.MSGARY)
"RTN","DGRPMS",213,0)
 Q
"RTN","DGRPMS",214,0)
 ;
"RTN","DGRPMS",215,0)
CNFLCT ;; ***  DO NOT REMOVE BELOW CONFLICT FIELD LOCATIONS  ***
"RTN","DGRPMS",216,0)
 ;; FROM DATE^TO DATE
"RTN","DGRPMS",217,0)
WWI ;;
"RTN","DGRPMS",218,0)
WWIIE ;;
"RTN","DGRPMS",219,0)
WWIIP ;;
"RTN","DGRPMS",220,0)
KOR ;;
"RTN","DGRPMS",221,0)
VIET ;;.32104^.32105
"RTN","DGRPMS",222,0)
LEB ;;.3222^.3223
"RTN","DGRPMS",223,0)
GREN ;;.3225^.3226
"RTN","DGRPMS",224,0)
PAN ;;.3228^.3229
"RTN","DGRPMS",225,0)
GULF ;;.322011^.322012
"RTN","DGRPMS",226,0)
SOM ;;.322017^.322018
"RTN","DGRPMS",227,0)
YUG ;;.32202^.322021
"RTN","DGRPMS",228,0)
OEF ;;.02^.03
"RTN","DGRPMS",229,0)
OIF ;;.02^.03
"RTN","DGRPMS",230,0)
UNK ;;.02^.03
"RTN","DGRPMS",231,0)
 ;;
"RTN","DGRPMS",232,0)
 ;;  **BELOW VALUES ARE USED FOR MSE CHECKS - DO NOT REMOVE ***
"RTN","DGRPMS",233,0)
 ;; ENTRY DATE^SEPERATION DATE
"RTN","DGRPMS",234,0)
MSL ;;.326^.327^.325
"RTN","DGRPMS",235,0)
MSNTL ;;.3292^.3293^.3291
"RTN","DGRPMS",236,0)
MSNNTL ;;.3297^.3298^.3296
"RTN","DGRPMS",237,0)
 ;;
"RTN","DGRPMS",238,0)
 ;;  **BELOW VALUES ARE USED FOR POW AND COMBAT CHECKS - DO NOT REMOVE
"RTN","DGRPMS",239,0)
 ;; FROM DATE^TO DATE^LOCATION
"RTN","DGRPMS",240,0)
COMB ;;.5293^.5294^.5292
"RTN","DGRPMS",241,0)
POW ;;.527^.528^.526
"RTN","DGRPMS",242,0)
 ;;
"RTN","DGRPP")
0^36^B23860016^B23085136
"RTN","DGRPP",1,0)
DGRPP ;ALB/MRL,AEG - REGISTRATION SCREEN PROCESSOR ;06 JUN 88@2300
"RTN","DGRPP",2,0)
 ;;5.3;Registration;**92,147,343,404,397,489,689**;Aug 13, 1993;Build 1
"RTN","DGRPP",3,0)
 ;
"RTN","DGRPP",4,0)
 ;DGRPS    : Screen to edit
"RTN","DGRPP",5,0)
 ;DGRPSEL  : If screen 9 (income screening) set to allowable selections
"RTN","DGRPP",6,0)
 ;           (V=Veteran, S=Spouse, D=Dependents)
"RTN","DGRPP",7,0)
 ;DGRPSELT : If screen 9, type selected (V, S, or D or all if none specified)
"RTN","DGRPP",8,0)
 ;DGRPAN   : Selectable items on screen for edit (user input)
"RTN","DGRPP",9,0)
 ;DGRPANP  : Selectable items for print on page footer - i.e. 1-3
"RTN","DGRPP",10,0)
 ;DGRPANN  : Selected item(s) extrapolated (screen_item)
"RTN","DGRPP",11,0)
 ;
"RTN","DGRPP",12,0)
 ;
"RTN","DGRPP",13,0)
EN ;
"RTN","DGRPP",14,0)
 D:'$$BEGUPLD^DGENUPL3(DFN)
"RTN","DGRPP",15,0)
 .D UNLOCK^DGENPTA1(DFN)
"RTN","DGRPP",16,0)
 .D CKUPLOAD^DGENUPL3(DFN)
"RTN","DGRPP",17,0)
 .I $$LOCK^DGENPTA1(DFN)
"RTN","DGRPP",18,0)
 D ENDUPLD^DGENUPL3(DFN)
"RTN","DGRPP",19,0)
 D Q1,WHICH^DGRPP1 W ! K DGRP S DGRPAN="" F I=1:1:$L(DGRPVV(DGRPS)) I $S('DGRPV:1,DGRPS=6:I=2!(I=3),1:0) S:'$E(DGRPVV(DGRPS),I) DGRPAN=DGRPAN_I_","
"RTN","DGRPP",20,0)
 D STR^DGRPP1 F I=$Y:1:20 W !
"RTN","DGRPP",21,0)
 I ("8^9"[DGRPS),$G(DGNOBUCK) S Z="C" D W W "=COPY,"
"RTN","DGRPP",22,0)
 I ("8^9"[DGRPS),($G(DGEFDT)'=DT) S Z="E" D W W "=ENTER new "_(DGISYR+1)_" data,"
"RTN","DGRPP",23,0)
 S Z="<RET>" D W W " to ",$S(DGRPS<DGRPLAST:"CONTINUE",1:"QUIT"),", "
"RTN","DGRPP",24,0)
 I DGRPAN]"" S Z=DGRPANP D W D
"RTN","DGRPP",25,0)
 . I '$G(DGRPV) W " or " S Z="ALL" D W
"RTN","DGRPP",26,0)
 . W " to "_$S('$G(DGRPV):"EDIT, ",DGRPS=6:"EXPAND, ",1:"")
"RTN","DGRPP",27,0)
 S DGRPOUT=0,Z="^N" D W W " for screen N or " S Z="'^'" D W W " to QUIT" I DGRPSEL=""!(DGRPVV(9)'["0")!+$G(DGRPV) W ": "
"RTN","DGRPP",28,0)
 I DGRPSEL]"" D MOREHLP^DGRPP1
"RTN","DGRPP",29,0)
 R DGRPANN:DTIME S:'$T DGRPOUT=1 I DGRPANN']"",'DGRPOUT G NEXT
"RTN","DGRPP",30,0)
 I $E(DGRPANN)="E",$G(DGNOBUCK),("8^9"[DGRPS) D
"RTN","DGRPP",31,0)
 .S DGNOCOPY=1
"RTN","DGRPP",32,0)
 .S DGRPANN=U_DGRPS,DGRPVV(9)="0000000000",DGRPVV(8)="00"
"RTN","DGRPP",33,0)
 I $E(DGRPANN)="C",$G(DGNOBUCK),("8^9"[DGRPS) D
"RTN","DGRPP",34,0)
 .W !!,"  COPYING will move Family Demographic and Income Data into the next year...",!
"RTN","DGRPP",35,0)
 .I DGNOBUCK=2 D
"RTN","DGRPP",36,0)
 ..W !,"   YOU HAVE ALREADY MODIFIED CURRENT YEAR DEPENDENT INFORMATION"
"RTN","DGRPP",37,0)
 ..W !,"     COPYING will OVERWRITE this modified dependent information"
"RTN","DGRPP",38,0)
 ..W !,"     with LAST year's data -  ** Please review dependent data **"
"RTN","DGRPP",39,0)
 ..D COPY^DGMTU22(DFN,DT) S DGRPANN=U_8
"RTN","DGRPP",40,0)
 .I DGNOBUCK=1 D COPY^DGMTU22(DFN,DT) S DGRPANN=U_DGRPS
"RTN","DGRPP",41,0)
 .I Y>0 D
"RTN","DGRPP",42,0)
 ..W !,"   ...FAMILY DEMOGRAPHIC DATA COPIED"
"RTN","DGRPP",43,0)
 ..W !,"   ...............INCOME DATA COPIED"
"RTN","DGRPP",44,0)
 ..H 2
"RTN","DGRPP",45,0)
 ..S DGRPVV(9)="0000000000",DGRPVV(8)="00",DA=$$GETIN^DGMTU2(DFN,+DGREL("V"),DT) S DIE=408.21,DR=".18///^S X=""YES""" D ^DIE K DA,DIE,DR
"RTN","DGRPP",46,0)
JUMP G JUMP^DGRPP1:DGRPANN?1"^"1N.".".1N I DGRPOUT!(DGRPANN?1"^".E) G Q
"RTN","DGRPP",47,0)
 S (DGRPANN,X)=$$UPPER^DGUTL(DGRPANN)
"RTN","DGRPP",48,0)
 I $E(DGRPANN)="A" S X=DGRPANN,Z="^ALL" D IN^DGHELP I %'=-1 S DGRPANN=DGRPANP
"RTN","DGRPP",49,0)
 I DGRPANN]"",(DGRPSEL[$E(DGRPANN)) S DGRPSELT=$E(DGRPANN),DGRPANN=$P(DGRPANN,DGRPSELT,2) ; save off type, run through all other checks
"RTN","DGRPP",50,0)
 I DGRPANN'?1N.E D ^DGRPH G:DGRPS'=1.1 @("^DGRP"_DGRPS) G:DGRPS=1.1 ^DGRPCADD
"RTN","DGRPP",51,0)
 S DGDR="" F I=1:1 S DGCH=$P(DGRPANN,",",I) Q:DGCH']""!($L(DGCH)>5)  D CHOICE
"RTN","DGRPP",52,0)
 I DGDR']"" D ^DGRPH S X=DGRPS G SCRX
"RTN","DGRPP",53,0)
 D ^DGRPE G QQ:'$D(^DPT(DFN,0)) S X=DGRPS G SCRX
"RTN","DGRPP",54,0)
Q I 'DGELVER D:$S(DGRPOUT:0,'$D(DGRPV):0,'DGRPV:1,1:0) LT^DGRPP1
"RTN","DGRPP",55,0)
 K DGDEP,DGINC,DGINR,DGMTC,DGMTED,DGREL,DGTOT,DGSP
"RTN","DGRPP",56,0)
 K DGCH,DGGTOT,DGIRI,DGPRI,DGRPSE1,DGNOCOPY
"RTN","DGRPP",57,0)
 D SENSCHK
"RTN","DGRPP",58,0)
 I 'DGRPV S DGEDCN=1 D ^DGRPC K DGEDCN
"RTN","DGRPP",59,0)
QQ K DGRPNA,DGRPS,DGRPTYPE,DGRPU,DGRPV,DGRPVV,DGRPW,DGVI,DGVO,DGRPCM,DGELVER,DGRPLAST
"RTN","DGRPP",60,0)
Q1 K %DT,C,DGA,DGA1,DGA2,DGAD,DGDR,DGRP,DGRPAG,DGRPAN,DGRPANN,DGRPANP,DGRPD,DGRPSEL,DGRPSELT,DGRPVR,DGRPX,DGAAC
"RTN","DGRPP",61,0)
 K DIRUT,DUOUT,DTOUT
"RTN","DGRPP",62,0)
 K DIC,I,I1,I2,I3,J,X,X1,X2,X3,Y,Z,Z1 I $D(DFN)#2,DFN]"" S:$D(^DPT(DFN,0)) DA=DFN
"RTN","DGRPP",63,0)
 Q
"RTN","DGRPP",64,0)
 ;
"RTN","DGRPP",65,0)
SENSCHK ; check whether patient record should be made sensitive
"RTN","DGRPP",66,0)
 N ELIG,FLAG,X
"RTN","DGRPP",67,0)
 S ELIG=0,FLAG=0
"RTN","DGRPP",68,0)
 I '$D(^DPT($G(DFN),0)) Q  ; patient not defined
"RTN","DGRPP",69,0)
 I $D(^DGSL(38.1,DFN,0)) Q  ; patient already in dg security log file
"RTN","DGRPP",70,0)
 S X=$S($D(^DPT(DFN,"TYPE")):+^("TYPE"),1:"") I $D(^DG(391,+X,0)),$P(^(0),"^",4) D SEC Q:FLAG
"RTN","DGRPP",71,0)
 F  S ELIG=$O(^DPT(DFN,"E",ELIG)) Q:'ELIG  D  Q:FLAG
"RTN","DGRPP",72,0)
 . S X=$G(^DIC(8,ELIG,0))
"RTN","DGRPP",73,0)
 . I $P(X,"^",12) D SEC
"RTN","DGRPP",74,0)
 Q
"RTN","DGRPP",75,0)
 ;
"RTN","DGRPP",76,0)
SEC ;if patient type says make record sensitive, add to security log file
"RTN","DGRPP",77,0)
 K DD,DO S DIC="^DGSL(38.1,",(X,DINUM)=DFN,DIC(0)="L",DIC("DR")="2///1;3////"_DUZ_";4///NOW;" D FILE^DICN
"RTN","DGRPP",78,0)
 I $D(^DGSL(38.1,DFN,0)) W !!,"===> Record has been classified as sensitive." S FLAG=1
"RTN","DGRPP",79,0)
 K DIC,X,DINUM,DA,DD,DO,Y
"RTN","DGRPP",80,0)
 Q
"RTN","DGRPP",81,0)
 ;
"RTN","DGRPP",82,0)
CHOICE ;parse out which items were selected for edit
"RTN","DGRPP",83,0)
 ;
"RTN","DGRPP",84,0)
 ;DGCH=choice to be parsed (either number or number-number)
"RTN","DGRPP",85,0)
 ;
"RTN","DGRPP",86,0)
 N DGFL S DGFL=0
"RTN","DGRPP",87,0)
 I DGCH["-" Q:DGCH'?1.2N1"-"1.2N!($P(DGCH,"-",2)>17)  F J=$P(DGCH,"-",1):1:$P(DGCH,"-",2) I DGRPAN[(J_",") D:(DGRPS=9) SCR9 I 'DGFL S DGDR=DGDR_(DGRPS*100+J)_","
"RTN","DGRPP",88,0)
 I DGCH'["-",DGCH?1.2N,(DGRPAN[(DGCH_",")) S DGDR=DGDR_(DGRPS*100+DGCH)_","
"RTN","DGRPP",89,0)
 Q
"RTN","DGRPP",90,0)
 ;
"RTN","DGRPP",91,0)
NEXT ;find next available screen...goto
"RTN","DGRPP",92,0)
 I DGRPS=DGRPLAST G Q ;last screen and return...quit
"RTN","DGRPP",93,0)
 S X=DGRPLAST
"RTN","DGRPP",94,0)
 F I=DGRPS+1:1 S J=$E(DGRPVV,I) Q:J']""  I 'J S X=I Q
"RTN","DGRPP",95,0)
 I DGRPS=1 S X=1.1
"RTN","DGRPP",96,0)
SCRX ;goto screen X
"RTN","DGRPP",97,0)
 ;I DGRPLAST=DGRPS,DGRPLAST=X G Q
"RTN","DGRPP",98,0)
 I X[".",X'=1.1 S X=$P(X,".",1)
"RTN","DGRPP",99,0)
 G:X=1.1 ^DGRPCADD
"RTN","DGRPP",100,0)
 G:X'=1.1 @("^DGRP"_X) ;goto next available screen
"RTN","DGRPP",101,0)
 ;
"RTN","DGRPP",102,0)
W ;write highlighted text on screen (if parameter on)
"RTN","DGRPP",103,0)
 I IOST="C-QUME",$L(DGVI)'=2 W Z
"RTN","DGRPP",104,0)
 E  W @DGVI,Z,@DGVO
"RTN","DGRPP",105,0)
 Q
"RTN","DGRPP",106,0)
 ;
"RTN","DGRPP",107,0)
SCR9 ; see if MT is completed.  Allow only selective editing if so
"RTN","DGRPP",108,0)
 I 'DGMTC Q
"RTN","DGRPP",109,0)
 I '$D(DGRPSELT) S:DGMTC=1 DGFL=1 Q  ;if no non-mt dependents
"RTN","DGRPP",110,0)
 I DGRPSELT="S",$D(DGMTC("S")) Q
"RTN","DGRPP",111,0)
 I DGRPSELT="D",$D(DGMTC("D")) Q
"RTN","DGRPP",112,0)
 S DGFL=1
"RTN","DGRPP",113,0)
 Q
"RTN","DGRPU")
0^7^B61935480^B61271859
"RTN","DGRPU",1,0)
DGRPU ;ALB/MRL,TMK - REGISTRATION UTILITY ROUTINE ;19 OCT 2005
"RTN","DGRPU",2,0)
 ;;5.3;Registration;**33,114,489,624,672,689**;Aug 13, 1993;Build 1
"RTN","DGRPU",3,0)
H ;Screen Header
"RTN","DGRPU",4,0)
 I DGRPS'=1.1 W @IOF S Z=$P($T(H1+DGRPS),";;",2)_", SCREEN <"_DGRPS_">"_$S($D(DGRPH):" HELP",1:""),X=79-$L(Z)\2 D W
"RTN","DGRPU",5,0)
 I DGRPS=1.1 W @IOF S Z="ADDITIONAL PATIENT DEMOGRAPHIC DATA, SCREEN <"_DGRPS_">"_$S($D(DGRPH):" HELP",1:""),X=79-$L(Z)\2 D W
"RTN","DGRPU",6,0)
 S X=$$SSNNM(DFN)
"RTN","DGRPU",7,0)
 I '$D(DGRPH) W !,X S X=$S($D(DGRPTYPE):$P(DGRPTYPE,"^",1),1:"PATIENT TYPE UNKNOWN"),X1=79-$L(X) W ?X1,X
"RTN","DGRPU",8,0)
 S X="",$P(X,"=",80)="" W !,X Q
"RTN","DGRPU",9,0)
 Q
"RTN","DGRPU",10,0)
 ;
"RTN","DGRPU",11,0)
AL(DGLEN) ;DGLEN= Available length of line
"RTN","DGRPU",12,0)
A ;Format address(es)
"RTN","DGRPU",13,0)
 I '$D(DGLEN) N DGLEN S DGLEN=29
"RTN","DGRPU",14,0)
 N DGX
"RTN","DGRPU",15,0)
 F I=DGA1:1:DGA1+2 I $P(DGRP(DGAD),U,I)]"" S DGA(DGA2)=$P(DGRP(DGAD),U,I),DGA2=DGA2+2
"RTN","DGRPU",16,0)
 I DGA2=1 S DGA(1)="STREET ADDRESS UNKNOWN",DGA2=DGA2+2
"RTN","DGRPU",17,0)
 S J=$S('$D(^DIC(5,+$P(DGRP(DGAD),U,DGA1+4),0)):"",('$L($P(^(0),U,2))):$P(^(0),U,1),1:$P(^(0),U,2)),J(1)=$P(DGRP(DGAD),U,DGA1+3),J(2)=$P(DGRP(DGAD),U,DGA1+5),DGA(DGA2)=$S(J(1)]""&(J]""):J(1)_","_J,J(1)]"":J(1),J]"":J,1:"UNK. CITY/STATE")
"RTN","DGRPU",18,0)
 I ".33^.34^.211^.331^.311^.25^.21"[DGAD D
"RTN","DGRPU",19,0)
 .F I=1:1:7 I $P(".33^.34^.211^.331^.311^.25^.21",U,I)=DGAD S DGX=$P($G(^DPT(DFN,.22)),U,I)
"RTN","DGRPU",20,0)
 E  D
"RTN","DGRPU",21,0)
 .I DGAD=.141 S DGX=$P(DGRP(.141),U,6) Q
"RTN","DGRPU",22,0)
 .S DGX=$P(DGRP(DGAD),U,DGA1+11)
"RTN","DGRPU",23,0)
 S:$L(DGX)>5 DGX=$E(DGX,1,5)_"-"_$E(DGX,6,9)
"RTN","DGRPU",24,0)
 S DGA(DGA2)=$E($P(DGA(DGA2),",",1),1,(DGLEN-($L(DGX)+4)))_$S($L($P(DGA(DGA2),",",2)):",",1:"")_$P(DGA(DGA2),",",2)_" "_DGX
"RTN","DGRPU",25,0)
 F I=0:0 S I=$O(DGA(I)) Q:'I  S DGA(I)=$E(DGA(I),1,DGLEN)
"RTN","DGRPU",26,0)
 K DGA1,I,J
"RTN","DGRPU",27,0)
 Q
"RTN","DGRPU",28,0)
 ;
"RTN","DGRPU",29,0)
W I IOST="C-QUME",$L(DGVI)'=2 W ?X,Z Q
"RTN","DGRPU",30,0)
 W ?X,@DGVI,Z,@DGVO
"RTN","DGRPU",31,0)
 Q
"RTN","DGRPU",32,0)
 ;
"RTN","DGRPU",33,0)
H1 ;
"RTN","DGRPU",34,0)
 ;;PATIENT DEMOGRAPHIC DATA
"RTN","DGRPU",35,0)
 ;;PATIENT DATA
"RTN","DGRPU",36,0)
 ;;EMERGENCY CONTACT DATA
"RTN","DGRPU",37,0)
 ;;APPLICANT/SPOUSE EMPLOYMENT DATA
"RTN","DGRPU",38,0)
 ;;INSURANCE DATA
"RTN","DGRPU",39,0)
 ;;MILITARY SERVICE DATA
"RTN","DGRPU",40,0)
 ;;ELIGIBILITY STATUS DATA
"RTN","DGRPU",41,0)
 ;;FAMILY DEMOGRAPHIC DATA
"RTN","DGRPU",42,0)
 ;;INCOME SCREENING DATA
"RTN","DGRPU",43,0)
 ;;INELIGIBLE/MISSING DATA
"RTN","DGRPU",44,0)
 ;;ELIGIBILITY VERIFICATION DATA
"RTN","DGRPU",45,0)
 ;;ADMISSION INFORMATION
"RTN","DGRPU",46,0)
 ;;APPLICATION INFORMATION
"RTN","DGRPU",47,0)
 ;;APPOINTMENT INFORMATION
"RTN","DGRPU",48,0)
 ;;SPONSOR DEMOGRAPHIC INFORMATION
"RTN","DGRPU",49,0)
 ;
"RTN","DGRPU",50,0)
 ;
"RTN","DGRPU",51,0)
INCOME(DFN,DGDT) ; compute income for veteran...if not in 408.21, pass back file 2 data
"RTN","DGRPU",52,0)
 ; (called by PTF)
"RTN","DGRPU",53,0)
 ;
"RTN","DGRPU",54,0)
 ;
"RTN","DGRPU",55,0)
 ;  Input:  DFN as IEN of PATIENT file
"RTN","DGRPU",56,0)
 ;          DGDT as date to return income as of
"RTN","DGRPU",57,0)
 ;
"RTN","DGRPU",58,0)
 ; Output:  total income (computed function)
"RTN","DGRPU",59,0)
 ;          (from 408.21 if available...otherwise from file 2)
"RTN","DGRPU",60,0)
 ;
"RTN","DGRPU",61,0)
 ;
"RTN","DGRPU",62,0)
 N DGDEP,DGINC,DGREL,DGTOT,DGX,I S DGTOT=0
"RTN","DGRPU",63,0)
 D ALL^DGMTU21(DFN,"V",DGDT,"I")
"RTN","DGRPU",64,0)
 S DGX=$G(^DGMT(408.21,+$G(DGINC("V")),0)) I DGX]"" F I=8:1:17 S DGTOT=DGTOT+$P(DGX,"^",I)
"RTN","DGRPU",65,0)
 I DGX']"" S DGTOT=$P($G(^DPT(DFN,.362)),U,20)
"RTN","DGRPU",66,0)
 Q DGTOT
"RTN","DGRPU",67,0)
 ;
"RTN","DGRPU",68,0)
 ;
"RTN","DGRPU",69,0)
MTCOMP(DFN,DGDT) ; is current means test OR COPAY complete?
"RTN","DGRPU",70,0)
 ;
"RTN","DGRPU",71,0)
 ;  Input:  DFN as IEN of PATIENT file
"RTN","DGRPU",72,0)
 ;          DGDT as 'as of' date
"RTN","DGRPU",73,0)
 ;
"RTN","DGRPU",74,0)
 ; Output:  1 if means test/COPAY for year prior to DT passed is complete
"RTN","DGRPU",75,0)
 ;          0 otherwise
"RTN","DGRPU",76,0)
 ;          DGMTYPT 1=MT;2=CP;0=NONE
"RTN","DGRPU",77,0)
 ;
"RTN","DGRPU",78,0)
 N COMP,MT,X,YR
"RTN","DGRPU",79,0)
 S YR=$$LYR^DGMTSCU1(DGDT),MT=$$LST^DGMTCOU1(DFN,DGDT)
"RTN","DGRPU",80,0)
 S DGMTYPT=+$P(MT,U,5)
"RTN","DGRPU",81,0)
 S COMP=1
"RTN","DGRPU",82,0)
 I DGMTYPT=1 D  ;MT
"RTN","DGRPU",83,0)
 .I $P(MT,"^",4)']""!("^R^N^"[("^"_$P(MT,"^",4)_"^")) S COMP=0
"RTN","DGRPU",84,0)
 I DGMTYPT=2 D  ;CP
"RTN","DGRPU",85,0)
 .I $P(MT,"^",4)']""!("^I^L^"[("^"_$P(MT,"^",4)_"^")) S COMP=0
"RTN","DGRPU",86,0)
 S X=+$P(MT,"^",2) I ($E(X,1,3)-1)*10000<YR S COMP=0
"RTN","DGRPU",87,0)
 Q COMP
"RTN","DGRPU",88,0)
 ;
"RTN","DGRPU",89,0)
HLP1010 ;* This is called by the Executable Help for Patient field #1010.159
"RTN","DGRPU",90,0)
 ;   (APPOINTMENT REQUEST ON 1010EZ)
"RTN","DGRPU",91,0)
 W !!,"    Enter a 'Y' if the veteran applicant has requested an"
"RTN","DGRPU",92,0)
 W !,"    appointment with a VA doctor or provider and wants to be"
"RTN","DGRPU",93,0)
 W !,"    seen as soon as one becomes available  Enter a 'N'"
"RTN","DGRPU",94,0)
 W !,"    if the veteran applicant has not requested an appointment."
"RTN","DGRPU",95,0)
 W !!,"    This question may ONLY be entered ONCE for the veteran."
"RTN","DGRPU",96,0)
 W !,"    The answer to this question CANNOT be changed after the"
"RTN","DGRPU",97,0)
 W !,"    initial entry.",!
"RTN","DGRPU",98,0)
 Q
"RTN","DGRPU",99,0)
 ;
"RTN","DGRPU",100,0)
HLPCS ; * This is called by the Executable Help for Income Relation field #.1
"RTN","DGRPU",101,0)
 Q:X="?"
"RTN","DGRPU",102,0)
 N DIR,DGRDVAR
"RTN","DGRPU",103,0)
 W !?8,"Enter in this field a Yes or No to indicate whether the veteran"
"RTN","DGRPU",104,0)
 W !?8,"contributed any dollar amount to the child's support last calendar"
"RTN","DGRPU",105,0)
 W !?8,"year.  The contributions do not have to be in regular set amounts."
"RTN","DGRPU",106,0)
 W !?8,"For example, a veteran who paid a child's school tuition or"
"RTN","DGRPU",107,0)
 W !?8,"medical bills would be contributing to the child's support.",!
"RTN","DGRPU",108,0)
 W !,"Enter RETURN to continue:" R DGRDVAR:DTIME W !
"RTN","DGRPU",109,0)
 Q
"RTN","DGRPU",110,0)
 ;
"RTN","DGRPU",111,0)
HLP1823 ;*This is called by the Executable Help for Patient Relation field #.18
"RTN","DGRPU",112,0)
 N DIR,DGRDVAR
"RTN","DGRPU",113,0)
 W !?7,"Enter 'Y' if the child is currently 18 to 23 years old and the child"
"RTN","DGRPU",114,0)
 W !?7,"attended school last calendar year.  Enter 'N' if the child is currently"
"RTN","DGRPU",115,0)
 W !?7,"18 to 23 years old but the child did not attend school last calendar"
"RTN","DGRPU",116,0)
 W !?7,"year.  Enter 'N' if the child is not currently 18 to 23 years old.",!
"RTN","DGRPU",117,0)
 I $G(DA) W !,"Enter RETURN to continue:" R DGRDVAR:DTIME W !
"RTN","DGRPU",118,0)
 Q
"RTN","DGRPU",119,0)
 ;
"RTN","DGRPU",120,0)
HLPMLDS ;* This is called by the Executable Help for Patient field #.362
"RTN","DGRPU",121,0)
 ;   (DISABILITY RET. FROM MILITARY?)
"RTN","DGRPU",122,0)
 N X,Y,DIR
"RTN","DGRPU",123,0)
 W !!,"  Enter '0' or 'NO' if the veteran:"
"RTN","DGRPU",124,0)
 W !,"    -- Is NOT retired from the military OR"
"RTN","DGRPU",125,0)
 W !,"    -- Is retired from the military due to length of service AND"
"RTN","DGRPU",126,0)
 W !,"       does NOT have a disability confirmed by the Military Branch"
"RTN","DGRPU",127,0)
 W !,"       to have been incurred in or aggravated while on active duty."
"RTN","DGRPU",128,0)
 W !!,"  Enter '1' or 'YES, RECEIVING MILITARY RETIREMENT' if the veteran:"
"RTN","DGRPU",129,0)
 W !,"    -- Is confirmed by the Military Branch to have been discharged"
"RTN","DGRPU",130,0)
 W !,"       or released due to a disability incurred in or aggravated"
"RTN","DGRPU",131,0)
 W !,"       while on active duty AND"
"RTN","DGRPU",132,0)
 W !,"       -- Has NOT filed a claim for VA compensation benefits OR"
"RTN","DGRPU",133,0)
 W !,"       -- Has been rated by the VA to be NSC OR"
"RTN","DGRPU",134,0)
 W !,"       -- Has been rated by the VA to have noncompensable 0%"
"RTN","DGRPU",135,0)
 W !,"          SC conditions."
"RTN","DGRPU",136,0)
 S DIR(0)="E" D ^DIR Q:+Y<1
"RTN","DGRPU",137,0)
 W !!,"  Enter '2' or 'YES, RECEIVING MILITARY RETIREMENT IN LIEU OF VA"
"RTN","DGRPU",138,0)
 W !,"                COMPENSATION' if the veteran:"
"RTN","DGRPU",139,0)
 W !,"       -- Is confirmed by the Military Branch to have been discharged"
"RTN","DGRPU",140,0)
 W !,"          or released due to a disability incurred in or aggravated"
"RTN","DGRPU",141,0)
 W !,"          while on active duty AND"
"RTN","DGRPU",142,0)
 W !,"       -- Is receiving military disability retirement pay AND"
"RTN","DGRPU",143,0)
 W !,"       -- Has been rated by VA to have compensable SC conditions"
"RTN","DGRPU",144,0)
 W !,"          but is NOT receiving compensation from the VA"
"RTN","DGRPU",145,0)
 W !!,"          Once eligibility has been verified, this field will no longer"
"RTN","DGRPU",146,0)
 W !,"          be editable to any user who does not hold the designated security"
"RTN","DGRPU",147,0)
 W !,"          key."
"RTN","DGRPU",148,0)
 Q
"RTN","DGRPU",149,0)
HLP3602 ;help text for field .3602, Rec'ing Disability in Lieu of VA Comp
"RTN","DGRPU",150,0)
 W !,"     Enter 'Y' if this veteran applicant is receiving disability"
"RTN","DGRPU",151,0)
 W !,"     retirement pay from the Military instead of VA compensation."
"RTN","DGRPU",152,0)
 W !,"     Enter 'N' if this veteran applicant is not receiving disability"
"RTN","DGRPU",153,0)
 W !,"     retirement pay from the Military instead of VA compensation."
"RTN","DGRPU",154,0)
 W !,"     Once eligibility has been verified by HEC this field will no longer "
"RTN","DGRPU",155,0)
 W !,"     be editable by VistA users. Send updates and/or requests to HEC."
"RTN","DGRPU",156,0)
 Q
"RTN","DGRPU",157,0)
HLP3603 ;help text for field .3603, Discharge Due to LOD Disability
"RTN","DGRPU",158,0)
 W !,"     Enter 'Y' if this veteran applicant was discharged from the"
"RTN","DGRPU",159,0)
 W !,"     military for a disability incurred or aggravated in the line "
"RTN","DGRPU",160,0)
 W !,"     of duty.  Enter 'N' if this veteran applicant was not discharged"
"RTN","DGRPU",161,0)
 W !,"     from the military for a disability incurred or aggravated in the"
"RTN","DGRPU",162,0)
 W !,"     line of duty. Once eligibility has been verified by HEC this field"
"RTN","DGRPU",163,0)
 W !,"     will no longer be editable by VistA users. Send updates and/or requests"
"RTN","DGRPU",164,0)
 W !,"     to HEC."
"RTN","DGRPU",165,0)
 Q
"RTN","DGRPU",166,0)
SSNNM(DFN) ; SSN and name on first line of screen
"RTN","DGRPU",167,0)
 N X,SSN
"RTN","DGRPU",168,0)
 S X=$S($D(^DPT(+DFN,0)):^(0),1:""),SSN=$P(X,"^",9),SSN=$E(SSN,1,3)_"-"_$E(SSN,4,5)_"-"_$E(SSN,6,10)
"RTN","DGRPU",169,0)
 S X=$P(X,U)_"; "_SSN
"RTN","DGRPU",170,0)
 Q X
"RTN","DGRPU",171,0)
 ;
"RTN","DGRPV")
0^6^B16870639^B17077361
"RTN","DGRPV",1,0)
DGRPV ;ALB/MRL,RTK,PJR,BRM,TMK - REGISTRATION DEFINE VARIABLES ON ENTRY ; 8/11/05 12:56pm
"RTN","DGRPV",2,0)
 ;;5.3;Registration;**109,114,247,190,327,365,343,397,415,489,546,545,451,624,677,672,689**;Aug 13, 1993;Build 1
"RTN","DGRPV",3,0)
 ;
"RTN","DGRPV",4,0)
 ;
"RTN","DGRPV",5,0)
 ;set up variables for registration screen processing
"RTN","DGRPV",6,0)
 ;
"RTN","DGRPV",7,0)
 ;DGRPVV   :string of 15 ones and zeros each character corresponding to
"RTN","DGRPV",8,0)
 ;          a particular screen (0 means allow edit, 1 means don't)
"RTN","DGRPV",9,0)
 ;
"RTN","DGRPV",10,0)
 ;DGRPVV(n):where n=screen number.  String of x ones and zeros where
"RTN","DGRPV",11,0)
 ;          x is the number of elements on screen n (0=edit, 1=don't)
"RTN","DGRPV",12,0)
 ;
"RTN","DGRPV",13,0)
 ;DGVI     :Turn on high intensity
"RTN","DGRPV",14,0)
 ;DGVO     :Turn off high intensity
"RTN","DGRPV",15,0)
 ;
"RTN","DGRPV",16,0)
EN D DT^DICRW I '$D(DVBGUI) D HOME^%ZIS
"RTN","DGRPV",17,0)
 S (DGVI,DGVO)="""""" I $S('$D(IOST(0)):1,'$D(^DG(43,1,0)):1,'$P(^DG(43,1,0),"^",36):1,$D(^DG(43,1,"TERM",IOST(0))):1,1:0) G M ;goto M if not high intensity
"RTN","DGRPV",18,0)
 I $D(^%ZIS(2,IOST(0),7)) S I=^(7),X=$S($P(I,"^",3)]"":3,1:2) I $L($P(I,"^",1)),$L($P(I,"^",X)) S DGVI=$P(I,"^",1),DGVO=$P(I,"^",X)
"RTN","DGRPV",19,0)
M I $L(DGVI_DGVO)>4 S X=132 X ^%ZOSF("RM")
"RTN","DGRPV",20,0)
 S DGRPW=1,DGRPCM=0,DGRPU="UNANSWERED",DGRPNA="NOT APPLICABLE",DGRPV=$S($D(DGRPV):DGRPV,1:1)
"RTN","DGRPV",21,0)
SC7 S X=$S('$D(^DPT(DFN,"TYPE")):0,1:+^("TYPE")) S:'$D(DGELVER) DGELVER=0
"RTN","DGRPV",22,0)
 S DGRPTYPE=$S($D(^DG(391,+X,0)):^(0),1:""),(DGRPSC,DGRPSCE,DGRPSCE1)="" S:'$D(DGELVER) DGELVER=0
"RTN","DGRPV",23,0)
 I DGRPTYPE'="" S DGRPSC=$G(^DG(391,+X,"S")),DGRPSCE=$G(^("E")),DGRPSCE1=$G(^("E10"))
"RTN","DGRPV",24,0)
 ;
"RTN","DGRPV",25,0)
 S DGPH=$P($G(^DPT(DFN,.53)),U)  ;Purple Heart Indicator
"RTN","DGRPV",26,0)
 I $G(DGPRFLG)=1 D
"RTN","DGRPV",27,0)
 . S DGRPVV="000001111111111"
"RTN","DGRPV",28,0)
 E  D
"RTN","DGRPV",29,0)
 . S DGRPVV="000000000000000"
"RTN","DGRPV",30,0)
 S X="5^3^5^2^3^8^4^2^10^2^4^5^5^2^1"
"RTN","DGRPV",31,0)
 F I=1:1:15 S J=+$P(X,"^",I),DGRPVV(I)=$S((I<12)!(I=15):$E("00000000000000000",1,J),1:$E("11111111111111111",1,J))
"RTN","DGRPV",32,0)
 S DGRPVV(1.1)="00"
"RTN","DGRPV",33,0)
 S DGRPVV(2)="00010"
"RTN","DGRPV",34,0)
 I $G(DGPH)]"" S $E(DGRPVV(6),8)=1
"RTN","DGRPV",35,0)
 ;
"RTN","DGRPV",36,0)
 F I=3,6,8,9,10,11 S J=+$P(DGRPSC,"^",I) I 'J S DGRPVV=$E(DGRPVV,0,I-1)_1_$E(DGRPVV,I+1,99)
"RTN","DGRPV",37,0)
 ;
"RTN","DGRPV",38,0)
 ;-- if patient type is TRICARE then turn off screens 2,4
"RTN","DGRPV",39,0)
 ;
"RTN","DGRPV",40,0)
 ;-- modified 08/20/2003 for NOIS Calls MAC-0400-61574 & AMA-0700-71769 
"RTN","DGRPV",41,0)
 ;-- commented the line to allow screens 2 & 4 to display for Tricare
"RTN","DGRPV",42,0)
 ;I DGRPTYPE["TRICARE" F I=2,4 S J=+$P(DGRPSC,"^",I) I 'J S DGRPVV=$E(DGRPVV,0,I-1)_1_$E(DGRPVV,I+1,99)
"RTN","DGRPV",43,0)
 ;
"RTN","DGRPV",44,0)
 F I=31:0 S I=$O(^DD(391,I)) Q:I=""!(I>99)  I $D(^(I,0)),($E(^(0),1)'="*"),'+$P(DGRPSCE,"^",I) S X1=$E(I),X2=$E(I,2) I +X1 S DGRPVV(X1)=$E(DGRPVV(X1),0,X2-1)_1_$E(DGRPVV(X1),X2+1,99)
"RTN","DGRPV",45,0)
 I $G(^DPT(DFN,.35)),(^(.35)<+($E(DT,1,3)_"0000")) S DGRPVV=$E(DGRPVV,0,7)_11_$E(DGRPVV,10,99)
"RTN","DGRPV",46,0)
 K DIRUT,DUOUT,DTOUT
"RTN","DGRPV",47,0)
 ;
"RTN","DGRPV",48,0)
 ;Fields are numbered screen_item and put in that piece position.
"RTN","DGRPV",49,0)
 ;Because FM does not allow more than 100 pieces on a node, it was
"RTN","DGRPV",50,0)
 ;necessary to start a new node E10 for fields on screens 10 or higher.
"RTN","DGRPV",51,0)
 ;In these instances, the piece position will be screen_item-100 so,
"RTN","DGRPV",52,0)
 ;for example, screen 11, item 2 would be field 112, but piece 12.
"RTN","DGRPV",53,0)
 ;Items on screens <10 will be found on node E.
"RTN","DGRPV",54,0)
 ;
"RTN","DGRPV",55,0)
 F I=100:0 S I=$O(^DD(391,I)) Q:I=""!(I>150)  I $D(^(I,0)),($E(^(0),1)'="*"),'+$P(DGRPSCE1,"^",I-100) S X1=$E(I,1,2),X2=$E(I,3) I +X1 S DGRPVV(X1)=$E(DGRPVV(X1),0,X2-1)_1_$E(DGRPVV(X1),X2+1,99)
"RTN","DGRPV",56,0)
 ;
"RTN","DGRPV",57,0)
 I $S('($D(DUZ)#2):0,'$D(^XUSEC("DG ELIGIBILITY",DUZ)):0,1:1) G ELVER ;if user holds eligibility key, skip
"RTN","DGRPV",58,0)
 F I=.3,.32,.361 S DGRP(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","DGRPV",59,0)
 S DGRPVV(10)=11 I $P(DGRP(.361),"^",1)="V" S DGRPVV(7)=111,DGRPVV(1)=1_$E(DGRPVV(1),2,99) ;if elig verified, can't edit elig data, name, ssn, or dob
"RTN","DGRPV",60,0)
 I $P(DGRP(.3),"^",6)]"" S DGRPVV(8)=11 ;if monetary ben. verified, can't edit income screening data
"RTN","DGRPV",61,0)
 I $P(DGRP(.32),"^",2)]"" S DGRPVV(6)=111111111 ;if service data verified, can't edit service screen
"RTN","DGRPV",62,0)
 ;
"RTN","DGRPV",63,0)
ELVER ;set up variables for eligibility verification
"RTN","DGRPV",64,0)
 ;if elig ver option, only edit screens 1, 2, and 7 (and 6, 8, 9, 10,
"RTN","DGRPV",65,0)
 ;   and 11 if they're turned on).
"RTN","DGRPV",66,0)
 ;
"RTN","DGRPV",67,0)
 S DGRP(.361)=$G(^DPT(DFN,.361))
"RTN","DGRPV",68,0)
 I $P(DGRP(.361),U,3)="H" S DGRPVV(10)=10,DGRPVV(11)=1000
"RTN","DGRPV",69,0)
 I $P($G(DGRP(.361)),U)="V",($P(DGRP(.361),U,3)="H") S DGRPVV(6)=$E(DGRPVV(6),1,5)_1_$E(DGRPVV(6),7,99)
"RTN","DGRPV",70,0)
 S:'DGELVER DGRPLAST=$S($G(DGPRFLG)=1:5,1:15)
"RTN","DGRPV",71,0)
 I DGELVER S DGRPVV="00111"_$E(DGRPVV,6,11)_"1111" F I=1:1:11 S J=$E(DGRPVV,I) I 'J S DGRPLAST=I
"RTN","DGRPV",72,0)
Q K DGRPSC,DGRPSCE
"RTN","DGRPV",73,0)
 Q
"RTN","DGRPV",74,0)
 ;
"RTN","DGRPV",75,0)
WW ;Write number on screens for display and/or edit (Z=number)
"RTN","DGRPV",76,0)
 W:DGRPW ! S Z=$S(DGRPCM:Z,DGRPV:"<"_Z_">",$E(DGRPVV(DGRPS),Z):"<"_Z_">",1:"["_Z_"]")
"RTN","DGRPV",77,0)
 I DGRPCM!($E(Z)="[") W @DGVI,Z,@DGVO
"RTN","DGRPV",78,0)
 I 'DGRPCM&($E(Z)'="[") W Z
"RTN","DGRPV",79,0)
 Q
"RTN","DGRPV",80,0)
 ;
"RTN","DGRPV",81,0)
WW1 ;spacing for screen display (Z=item to print)
"RTN","DGRPV",82,0)
 F Z2=1:1:(Z1-$L(Z)) S Z=Z_" "
"RTN","DGRPV",83,0)
 W Z K Z2
"RTN","DGRPV",84,0)
 Q
"RTN","DGRPV",85,0)
 ;
"RTN","DGRPV",86,0)
WW2 ; Write number on screen for fields always selectable
"RTN","DGRPV",87,0)
 W:DGRPW ! S Z="["_Z_"]"
"RTN","DGRPV",88,0)
 I DGRPCM!($E(Z)="[") W @DGVI,Z,@DGVO
"RTN","DGRPV",89,0)
 Q
"RTN","VADPT0")
0^20^B12629835^B12457338
"RTN","VADPT0",1,0)
VADPT0 ;ALB/MRL/MJK - PATIENT VARIABLE ROUTINE DRIVER, CONT.; 12 DEC 1988
"RTN","VADPT0",2,0)
 ;;5.3;Registration;**343,342,415,489,498,528,689**;Aug 13, 1993;Build 1
"RTN","VADPT0",3,0)
 ;
"RTN","VADPT0",4,0)
 ;Initialize variables
"RTN","VADPT0",5,0)
 N I1
"RTN","VADPT0",6,0)
 S U="^" D DT^DICRW:'$D(DT)
"RTN","VADPT0",7,0)
 S VAERR=$S('$D(DFN)#2:1,'$D(^DPT(DFN,0)):1,1:0)
"RTN","VADPT0",8,0)
 S Y=VAN'=13 I Y,$D(VAROOT)'[0,VAROOT]"" S Y=0,VAV=VAROOT K @VAV
"RTN","VADPT0",9,0)
 I Y S:$S(VAN>9:1,'$D(VAHOW):0,1:VAHOW[2) VAV="^UTILITY("_""""_VAV_""""_","_$J_")"
"RTN","VADPT0",10,0)
 D @VAN
"RTN","VADPT0",11,0)
Q K X,Y,VAC,VAS,VAV,VAW,VAN,I,VAX,VAZ Q
"RTN","VADPT0",12,0)
 ;
"RTN","VADPT0",13,0)
INIT ; -- determine #'s or names then init array
"RTN","VADPT0",14,0)
 ;
"RTN","VADPT0",15,0)
 S VAS="1^2^3^4^5^6^7^8^9^10^11^12^13^14^15^16^17^18^19^20^21^22^23^24^25"
"RTN","VADPT0",16,0)
 I VAN<10,$D(VAHOW),VAHOW[1 S VAS=$P($T(SS+VAN),";;",2)
"RTN","VADPT0",17,0)
 I $D(VAN(1)) F I=1:1:VAN(1) S @VAV@($P(VAS,"^",I))=""
"RTN","VADPT0",18,0)
 Q
"RTN","VADPT0",19,0)
 ;
"RTN","VADPT0",20,0)
1 ; -- [DEM] demos 
"RTN","VADPT0",21,0)
 D C1,INIT I 'VAERR D 1^VADPT1,13 Q
"RTN","VADPT0",22,0)
 ;
"RTN","VADPT0",23,0)
2 ; -- [OPD] other pt vars
"RTN","VADPT0",24,0)
 D C2,INIT,2^VADPT1:'VAERR Q
"RTN","VADPT0",25,0)
 ;
"RTN","VADPT0",26,0)
3 ; -- [ADD] current address
"RTN","VADPT0",27,0)
 D C3,INIT,3^VADPT1:'VAERR Q
"RTN","VADPT0",28,0)
 ;
"RTN","VADPT0",29,0)
4 ; -- [OAD] other pt vars
"RTN","VADPT0",30,0)
 D C4,INIT,4^VADPT1:'VAERR Q
"RTN","VADPT0",31,0)
 ;
"RTN","VADPT0",32,0)
5 ; -- [INP] inpt data -v5
"RTN","VADPT0",33,0)
 D C5,INIT,5^VADPT2:'VAERR Q
"RTN","VADPT0",34,0)
 ;
"RTN","VADPT0",35,0)
6 ; -- [IN5] inpt data v5
"RTN","VADPT0",36,0)
 D C6,INIT F I=13:1:17 F I1=1:1:7 S @VAV@($P(VAS,"^",I),I1)=""
"RTN","VADPT0",37,0)
 F I=1:1:3 S @VAV@($P(VAS,"^",19),I)=""
"RTN","VADPT0",38,0)
 D 6^VADPT3:'VAERR Q
"RTN","VADPT0",39,0)
 ;
"RTN","VADPT0",40,0)
7 ; -- [ELIG] elig data
"RTN","VADPT0",41,0)
 D C7,INIT F I=1:1:6 S @VAV@($P(VAS,"^",5),I)=""
"RTN","VADPT0",42,0)
 D 7^VADPT4:'VAERR Q
"RTN","VADPT0",43,0)
 ;
"RTN","VADPT0",44,0)
8 ; -- [MB] $ benefits
"RTN","VADPT0",45,0)
 D C8,INIT D 8^VADPT4:'VAERR Q
"RTN","VADPT0",46,0)
 ;
"RTN","VADPT0",47,0)
9 ; -- [SVC] service data
"RTN","VADPT0",48,0)
 D C9,INIT F I=1:1:9 S @VAV@($P(VAS,"^",I),1)="",@VAV@($P(VAS,"^",I),2)=""
"RTN","VADPT0",49,0)
 F I=11:1:13 S @VAV@($P(VAS,"^",I))=0
"RTN","VADPT0",50,0)
 S @VAV@($P(VAS,"^",4),3)="",@VAV@($P(VAS,"^",5),3)=""
"RTN","VADPT0",51,0)
 F I=2,6,7,8 F I1=3,4,5 S @VAV@($P(VAS,"^",I),I1)=""
"RTN","VADPT0",52,0)
 D 9^VADPT4:'VAERR Q
"RTN","VADPT0",53,0)
 ;
"RTN","VADPT0",54,0)
10 ; -- [REG] registration data
"RTN","VADPT0",55,0)
 D C10,INIT D 10^VADPT5:'VAERR Q
"RTN","VADPT0",56,0)
 ;
"RTN","VADPT0",57,0)
11 ; -- [SDE] clinic enrollment data
"RTN","VADPT0",58,0)
 D C11,INIT D 11^VADPT5:'VAERR Q
"RTN","VADPT0",59,0)
 ;
"RTN","VADPT0",60,0)
12 ; -- [SDA] appt data
"RTN","VADPT0",61,0)
 D C12,INIT D 12^VADPT5:'VAERR Q
"RTN","VADPT0",62,0)
 ;
"RTN","VADPT0",63,0)
13 ; -- [PID] pt id's
"RTN","VADPT0",64,0)
 S (VA("PID"),VA("BID"))="" D 13^VADPT6:'VAERR Q
"RTN","VADPT0",65,0)
 ;
"RTN","VADPT0",66,0)
KVAR ; kill all vadpt data
"RTN","VADPT0",67,0)
 K VAN
"RTN","VADPT0",68,0)
C1 K ^UTILITY("VADM",$J),VADM Q:$D(VAN)
"RTN","VADPT0",69,0)
C2 K ^UTILITY("VAPD",$J),VAPD Q:$D(VAN)
"RTN","VADPT0",70,0)
C3 K X S:$D(VAPA("P")) X("P")=VAPA("P")
"RTN","VADPT0",71,0)
 S:$D(VAPA("CD")) X("CD")=VAPA("CD")
"RTN","VADPT0",72,0)
 K ^UTILITY("VAPA",$J),VAPA
"RTN","VADPT0",73,0)
 S:$D(X("P")) VAPA("P")=X("P") K X("P")
"RTN","VADPT0",74,0)
 S:$D(X("CD")) VAPA("CD")=X("CD") K X Q:$D(VAN)
"RTN","VADPT0",75,0)
C4 K X S:$D(VAOA("A")) X("A")=VAOA("A")
"RTN","VADPT0",76,0)
 K ^UTILITY("VAOA",$J),VAOA
"RTN","VADPT0",77,0)
 S:$D(X("A")) VAOA("A")=X("A") K X Q:$D(VAN)
"RTN","VADPT0",78,0)
C5 K ^UTILITY("VAIN",$J),VAIN Q:$D(VAN)
"RTN","VADPT0",79,0)
C6 K X F I="D","E","L","M","V" I $D(VAIP(I)) S X(I)=VAIP(I)
"RTN","VADPT0",80,0)
 S Y=$S('$D(VAIP("V")):"VAIP",VAIP("V")'?1A.E:"VAIP",1:VAIP("V")) K ^UTILITY(Y,$J),@Y
"RTN","VADPT0",81,0)
 F I="D","E","L","M","V" I $D(X(I)) S VAIP(I)=X(I)
"RTN","VADPT0",82,0)
 K X Q:$D(VAN)
"RTN","VADPT0",83,0)
C7 K ^UTILITY("VAEL",$J),VAEL Q:$D(VAN)
"RTN","VADPT0",84,0)
C8 K ^UTILITY("VAMB",$J),VAMB Q:$D(VAN)
"RTN","VADPT0",85,0)
C9 K ^UTILITY("VASV",$J),VASV Q:$D(VAN)
"RTN","VADPT0",86,0)
C10 K ^UTILITY("VARP",$J) Q:$D(VAN)
"RTN","VADPT0",87,0)
C11 K ^UTILITY("VAEN",$J) Q:$D(VAN)
"RTN","VADPT0",88,0)
C12 K ^UTILITY("VASD",$J) Q
"RTN","VADPT0",89,0)
C13 Q
"RTN","VADPT0",90,0)
 ;
"RTN","VADPT0",91,0)
SS ;  1^ 2^ 3^ 4^ 5^ 6^ 7^ 8^ 9^10^11^12^13^14^15^16^17^18^19^20^21^22^23^24^25
"RTN","VADPT0",92,0)
 ;;NM^SS^DB^AG^SX^EX^RE^RA^RP^MS^ET^RC
"RTN","VADPT0",93,0)
 ;;BC^BS^FN^MN^MM^OC^ES
"RTN","VADPT0",94,0)
 ;;L1^L2^L3^CI^ST^ZP^CO^PN^TS^TE^Z4^CCA^CL1^CL2^CL3^CCI^CST^CZP^CCO^CCS^CCE^CTY
"RTN","VADPT0",95,0)
 ;;L1^L2^L3^CI^ST^ZP^CO^PN^NM^RE^Z4
"RTN","VADPT0",96,0)
 ;;AN^DR^TS^WL^RB^BS^AD^AT^AF^PT^AP
"RTN","VADPT0",97,0)
 ;;MN^TT^MD^MT^WL^RB^DR^TS^MF^BS^RD^PT^AN^LN^PN^NN^DN^AP^FD
"RTN","VADPT0",98,0)
 ;;EL^PS^SC^VT^IN^TY^CN^ES^MT
"RTN","VADPT0",99,0)
 ;;AA^HB^SS^PE^MR^SI^DI^OR^GI
"RTN","VADPT0",100,0)
 ;;VN^AO^IR^PW^CS^S1^S2^S3^PH^OIF^OEF^VIS
"RTN","VADPT4")
0^14^B33593643^B28024676
"RTN","VADPT4",1,0)
VADPT4 ;ALB/MRL/MJK - PATIENT VARIABLES; 12 DEC 1988
"RTN","VADPT4",2,0)
 ;;5.3;Registration;**343,342,528,689**;Aug 13, 1993;Build 1
"RTN","VADPT4",3,0)
7 ;Eligibility [ELIG]
"RTN","VADPT4",4,0)
 F I=.15,.3,.31,.32,.36,.361,"INE","TYPE","VET" S VAX(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","VADPT4",5,0)
 S VAZ=$P(VAX(.36),"^",1) S:$D(^DIC(8,+VAZ,0)) VAZ=VAZ_"^"_$P(^(0),"^",1) S @VAV@($P(VAS,"^",1))=VAZ
"RTN","VADPT4",6,0)
 S VAX=0 F I=0:0 S VAX=$O(^DPT(DFN,"E",VAX)) Q:VAX'>0  S VAZ=VAX I $D(^DIC(8,+VAZ,0)),+@VAV@($P(VAS,"^"))'=VAZ S VAZ=VAZ_"^"_$P(^DIC(8,+VAZ,0),"^") S @VAV@($P(VAS,"^",1),VAX)=VAZ
"RTN","VADPT4",7,0)
 S VAZ=$P(VAX(.32),"^",3) S:$D(^DIC(21,+VAZ,0)) VAZ=VAZ_"^"_$P(^(0),"^",1) S @VAV@($P(VAS,"^",2))=VAZ
"RTN","VADPT4",8,0)
 S VAZ=$S($P(VAX(.3),"^",1)="Y":1,1:0) S:VAZ VAZ=VAZ_"^"_$P(VAX(.3),"^",2) S @VAV@($P(VAS,"^",3))=VAZ
"RTN","VADPT4",9,0)
 S @VAV@($P(VAS,"^",4))=$S(VAX("VET")="Y":1,1:0),VAZ=$S(+$P(VAX(.15),"^",2):0,1:1),@VAV@($P(VAS,"^",5))=VAZ
"RTN","VADPT4",10,0)
 I VAZ F I=1:1:6 S @VAV@($P(VAS,"^",5),I)="" G 71
"RTN","VADPT4",11,0)
 S VAZ=$P(VAX(.15),"^",2),Y=VAZ X ^DD("DD") S @VAV@($P(VAS,"^",5),1)=VAZ_"^"_Y,VAZ=$P(VAX("INE"),"^",1) S:VAZ]"" VAZ=VAZ_"^"_$P("VAMC^REGIONAL OFFICE^RPC","^",VAZ) S @VAV@($P(VAS,"^",5),2)=VAZ
"RTN","VADPT4",12,0)
 S @VAV@($P(VAS,"^",5),3)=$P(VAX("INE"),"^",3),VAZ=$P(VAX("INE"),"^",4) S:$D(^DIC(5,+VAZ,0)) VAZ=VAZ_"^"_$P(^(0),"^",1) S @VAV@($P(VAS,"^",5),4)=VAZ
"RTN","VADPT4",13,0)
 S @VAV@($P(VAS,"^",5),5)=$P(VAX("INE"),"^",6),@VAV@($P(VAS,"^",5),6)=$P(VAX(.3),"^",7)
"RTN","VADPT4",14,0)
71 S VAZ=VAX("TYPE") S:$D(^DG(391,+VAZ,0)) VAZ=VAZ_"^"_$P(^(0),"^",1) S @VAV@($P(VAS,"^",6))=VAZ
"RTN","VADPT4",15,0)
 S @VAV@($P(VAS,"^",7))=$P(VAX(.31),"^",3),VAZ=$P(VAX(.361),"^",1) S:VAZ]"" VAZ=VAZ_"^"_$S(VAZ="V":"VERIFIED",VAZ="P":"PENDING VERIFICATION",VAZ="R":"PENDING RE-VERIFICATION",1:"") S @VAV@($P(VAS,"^",8))=VAZ
"RTN","VADPT4",16,0)
 I $D(^DPT(DFN,0)) S VAX=$P(^(0),"^",14),VAX=$G(^DG(408.32,+VAX,0)) I VAX]"" S @VAV@($P(VAS,"^",9))=$P(VAX,"^",2)_"^"_$P(VAX,"^",1)
"RTN","VADPT4",17,0)
 Q
"RTN","VADPT4",18,0)
 ;
"RTN","VADPT4",19,0)
8 ;Monetary Benefits [MB]
"RTN","VADPT4",20,0)
 N DGTOTVA
"RTN","VADPT4",21,0)
 S @VAV@($P(VAS,"^",6))=0 ; SSI no longer supported
"RTN","VADPT4",22,0)
 D ALL^DGMTU21(DFN,"V",DT,"I")
"RTN","VADPT4",23,0)
 S VAX=$G(^DGMT(408.21,+$G(DGINC("V")),0)) F I=8,11,13 S @VAV@($S(I=8:$P(VAS,"^",3),I=11:$P(VAS,"^",5),1:$P(VAS,"^",8)))=$S($P(VAX,"^",I)'="":"1^"_$P(VAX,"^",I),1:0)
"RTN","VADPT4",24,0)
 S VAX=$G(^DPT(DFN,.362))
"RTN","VADPT4",25,0)
 S DGTOTVA=$P(VAX,U,20)
"RTN","VADPT4",26,0)
 F I=12,13,14 S @VAV@($S(I=12:$P(VAS,"^",1),(I=13):$P(VAS,"^",2),1:$P(VAS,"^",4)))=$S($P(VAX,"^",I)="Y":1_U_DGTOTVA,1:0)
"RTN","VADPT4",27,0)
 S I=17 S @VAV@($P(VAS,"^",9))=$S($P(VAX,"^",17)="Y":1_U_$P(VAX,U,6),1:0)
"RTN","VADPT4",28,0)
 S VAX=$G(^DPT(DFN,.3)) S @VAV@($P(VAS,"^",7))=$S($P(VAX,"^",11)="Y":1_U_DGTOTVA,1:0)
"RTN","VADPT4",29,0)
 K DGDEP,DGREL,DGINC,DGINR Q
"RTN","VADPT4",30,0)
 ;
"RTN","VADPT4",31,0)
9 ;Service information
"RTN","VADPT4",32,0)
 F I=.32,.321,.3291,.52,.53 S VAX(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","VADPT4",33,0)
 S VAX("N")=.321 F I=1,2,3 S VAX(3)=I,VAZ=$S($P(VAX(.321),"^",I)="Y":1,1:0),@VAV@($P(VAS,"^",VAX(3)))=VAZ I VAZ S VAX(1)=$S(I=1:"4^5",I=2:"7^9^8",1:11),VAX(4)=0 D 91
"RTN","VADPT4",34,0)
 S VAX("N")=.52 F I=5,11 S VAX(3)=$S(I=5:4,1:5),VAX(1)=$S(I=5:"7^8",1:"13^14"),VAZ=$S($P(VAX(.52),"^",I)="Y":1,1:0),@VAV@($P(VAS,"^",VAX(3)))=VAZ I VAZ S VAX(4)=0 D 91
"RTN","VADPT4",35,0)
 S VAX(3)=10,VAX(1)="15",VAZ=$S($P(VAX(.52),U,15)]"":1,1:0),@VAV@($P(VAS,U,VAX(3)))=VAZ I VAZ S VAX(4)=0 D 91
"RTN","VADPT4",36,0)
 F I=6,7,8 S @VAV@($P(VAS,"^",I))="" F VAX(1)=1:1:6 S @VAV@($P(VAS,"^",I),VAX(1))=""
"RTN","VADPT4",37,0)
 S VAX("N")=.32,VAZ=$S($P(VAX(.32),"^",5)]"":1,1:0),@VAV@($P(VAS,"^",6))=VAZ I VAZ,$P(VAX(.32),"^",19)="Y" S VAZ=1,@VAV@($P(VAS,"^",7))=VAZ I VAZ,$P(VAX(.32),"^",20)="Y" S @VAV@($P(VAS,"^",8))=1
"RTN","VADPT4",38,0)
 F I=6,7,8 I @VAV@($P(VAS,"^",I)) S VAX(3)=I,VAX(1)=$S(I=6:"6^7",I=7:"11^12",1:"16^17"),VAX(4)=3 D 91
"RTN","VADPT4",39,0)
 S VAX("N")=.3291
"RTN","VADPT4",40,0)
 F I=6,7,8 I @VAV@($P(VAS,"^",I)) S VAX(3)=I,VAX(1)=I-5,VAX(4)=6 D 94
"RTN","VADPT4",41,0)
 S VAX("N")=.53,VAX(3)=9,VAX(1)="2^3",VAZ=$S($P(VAX(.53),U)="Y":1,$P(VAX(.53),U)="N":1,1:0),@VAV@($P(VAS,U,VAX(3)))=$S($P(VAX(.53),U)="Y":1,$P(VAX(.53),U)="N":0,1:"") I VAZ S VAX(4)=0 D 93
"RTN","VADPT4",42,0)
 S VAX("N")=.3215,VAZ=$$GET^DGENOEIF(DFN,.VAZ,1)
"RTN","VADPT4",43,0)
 F I=11,12,13 S @VAV@(I)=+$G(VAZ($P("OIF^OEF^UNK",U,I-10),"COUNT"))
"RTN","VADPT4",44,0)
 S VAX(2)=11
"RTN","VADPT4",45,0)
 F I="OIF","OEF","UNK" S VAX=0 F  S VAX=$O(VAZ(I,VAX)) S:'VAX VAX(2)=VAX(2)+1 Q:'VAX  S VAX(3)=0 D
"RTN","VADPT4",46,0)
 . N Z
"RTN","VADPT4",47,0)
 . F VAX(1)="LOC","FR","TO" S VAX(3)=VAX(3)+1,Z=$G(VAZ(I,VAX,VAX(1))),@VAV@(VAX(2),VAX,VAX(3))=Z D 95
"RTN","VADPT4",48,0)
 Q
"RTN","VADPT4",49,0)
 ;
"RTN","VADPT4",50,0)
91 F VAX(2)=1:1 S VAX(4)=VAX(4)+1,X=+$P(VAX(1),"^",VAX(2)) Q:'X  S X=$P(VAX(VAX("N")),"^",X),VAZ=X,Y=VAZ X:Y]"" ^DD("DD") S @VAV@($P(VAS,"^",VAX(3)),VAX(4))=$S(VAZ]"":VAZ_"^"_Y,1:"")
"RTN","VADPT4",51,0)
 Q:VAX(3)=1!(VAX(3)=9)!(VAX(3)=10)
"RTN","VADPT4",52,0)
 I VAX(3)=2 S @VAV@($P(VAS,"^",2),4)=$P(VAX(.321),"^",10) S (X,VAZ)=$P(VAX(.321),"^",13) S:X]"" VAZ=VAZ_"^"_$S(X="K":"KOREAN DMZ",1:"VIETNAM") S @VAV@($P(VAS,"^",2),5)=VAZ Q
"RTN","VADPT4",53,0)
 I VAX(3)<4 S X=$P(VAX(.321),"^",12),VAZ=X S:X]"" VAZ=VAZ_"^"_$S(X="T":"NUCLEAR TESTING",X="N":"NAGASAKI/HIROSHIMA",1:"BOTH") S @VAV@($P(VAS,"^",3),2)=VAZ Q
"RTN","VADPT4",54,0)
 I VAX(3)<6 S X=$P(VAX(VAX("N")),"^",$S(VAX(3)=4:6,1:12)),VAZ=X S:$D(^DIC(22,+X,0)) VAZ=VAZ_"^"_$P(^(0),"^",1) S @VAV@($P(VAS,"^",VAX(3)),3)=VAZ Q
"RTN","VADPT4",55,0)
 S X=$S(VAX(3)=6:5,VAX(3)=7:10,1:15),VAX(2)=0 F VAX(5)=X,X+3,X-1 S VAX(2)=VAX(2)+1,VAZ=$P(VAX(VAX("N")),"^",VAX(5)),@VAV@($P(VAS,"^",VAX(3)),VAX(2))=VAZ I "^4^5^9^10^14^15^"[("^"_VAX(5)_"^"),+VAZ D 92
"RTN","VADPT4",56,0)
 Q
"RTN","VADPT4",57,0)
92 S VAX(6)="^DIC("_$S('(VAX(5)#5):23,1:25)_","_+VAZ_",0)" I $D(@(VAX(6))) S VAZ=$P(^(0),"^",1),@VAV@($P(VAS,"^",VAX(3)),VAX(2))=@VAV@($P(VAS,"^",VAX(3)),VAX(2))_"^"_VAZ
"RTN","VADPT4",58,0)
 Q
"RTN","VADPT4",59,0)
93 ;
"RTN","VADPT4",60,0)
 NEW VAFILE,VAIENS,VAFLDS,VAARR,VAI
"RTN","VADPT4",61,0)
 S VAFILE=2,VAIENS=DFN_",",VAFLDS=".532;.533"
"RTN","VADPT4",62,0)
 D GETS^DIQ(VAFILE,VAIENS,VAFLDS,"IEN","VAARR")
"RTN","VADPT4",63,0)
 F VAI=1:1 S VAFLDS(VAI)=$P(VAFLDS,";",VAI) Q:VAFLDS(VAI)=""  D
"RTN","VADPT4",64,0)
 . I '$D(VAARR(VAFILE,VAIENS,VAFLDS(VAI),"I")),'$D(VAARR(VAFILE,VAIENS,VAFLDS(VAI),"E")) S @VAV@($P(VAS,"^",VAX(3)),VAI)=""
"RTN","VADPT4",65,0)
 . E  S @VAV@($P(VAS,U,VAX(3)),VAI)=$G(VAARR(VAFILE,VAIENS,VAFLDS(VAI),"I"))_"^"_$G(VAARR(VAFILE,VAIENS,VAFLDS(VAI),"E"))
"RTN","VADPT4",66,0)
 Q
"RTN","VADPT4",67,0)
94 ;
"RTN","VADPT4",68,0)
 N VAARR,VAIENS,VAFLDS
"RTN","VADPT4",69,0)
 S VAIENS=DFN_",",VAFLDS=".3291"_VAX(1)
"RTN","VADPT4",70,0)
 D GETS^DIQ(2,VAIENS,VAFLDS,"IEN","VAARR")
"RTN","VADPT4",71,0)
 I $G(VAARR(2,VAIENS,VAFLDS,"I"))'="" D
"RTN","VADPT4",72,0)
 . S @VAV@($P(VAS,"^",VAX(3)),VAX(4))=$G(VAARR(2,VAIENS,VAFLDS,"I"))_"^"_$G(VAARR(2,VAIENS,VAFLDS,"E"))
"RTN","VADPT4",73,0)
 Q
"RTN","VADPT4",74,0)
 ;
"RTN","VADPT4",75,0)
95 ;
"RTN","VADPT4",76,0)
 N X,Y
"RTN","VADPT4",77,0)
 I VAX(3)=1 S $P(@VAV@(VAX(2),VAX,VAX(3)),U,2)=$$EXTERNAL^DILFD(2.3215,.01,"",Z)
"RTN","VADPT4",78,0)
 I VAX(3)=2!(VAX(3)=3) S Y=Z X ^DD("DD") S:Y'="" $P(@VAV@(VAX(2),VAX,VAX(3)),U,2)=Y
"RTN","VADPT4",79,0)
 Q
"RTN","VADPT4",80,0)
 ;
"UP",2,2.3215,-1)
2^.3215
"UP",2,2.3215,0)
2.3215
"VER")
8.0^22.0
"^DD",2,2,.326,0)
SERVICE ENTRY DATE [LAST]^RDX^^.32;6^S %DT="E",%DT(0)=-DT D ^%DT K %DT S X=Y K:Y<1 X I $D(X) S DFN=DA D SV^DGLOCK I $D(X) K:'$$VALMSE^DGRPMS(DFN,X,0,"MSL") X I $D(X) S DGFRDT=X I $D(^DG(43,1)) S SD1=1 D POS^DGINP
"^DD",2,2,.326,.1)
ENTRY DATE-SERVICE [LAST]
"^DD",2,2,.326,1,0)
^.1
"^DD",2,2,.326,1,1,0)
2^AE^MUMPS
"^DD",2,2,.326,1,1,1)
Q
"^DD",2,2,.326,1,1,2)
Q
"^DD",2,2,.326,1,2,0)
2^AENR326^MUMPS
"^DD",2,2,.326,1,2,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.326,1,2,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.326,1,2,"%D",0)
^^2^2^3040610^
"^DD",2,2,.326,1,2,"%D",1,0)
This MUMPS cross-reference is used to notify HEC of any changes to the
"^DD",2,2,.326,1,2,"%D",2,0)
SERVICE ENTRY DATE [LAST] field.
"^DD",2,2,.326,1,2,"DT")
3040610
"^DD",2,2,.326,1,992,0)
2^ADGRU326^MUMPS
"^DD",2,2,.326,1,992,1)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.326,1,992,2)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.326,1,992,"%D",0)
^^9^9^2990921^
"^DD",2,2,.326,1,992,"%D",1,0)
This cross reference is used to remember that changes were made to a 
"^DD",2,2,.326,1,992,"%D",2,0)
monitored data field in the PATIENT File (#2) required for a vendor
"^DD",2,2,.326,1,992,"%D",3,0)
RAI/MDS COTS system.  Execution of this cross reference will create
"^DD",2,2,.326,1,992,"%D",4,0)
an entry in the ADT/HL7 PIVOT file (#391.71) and mark it as requiring
"^DD",2,2,.326,1,992,"%D",5,0)
transmission of an HL7 demographic A08 update message to the COTS
"^DD",2,2,.326,1,992,"%D",6,0)
interface.
"^DD",2,2,.326,1,992,"%D",7,0)
 
"^DD",2,2,.326,1,992,"%D",8,0)
The local variable DGRUGA08 will be set to 1 if the cross reference is
"^DD",2,2,.326,1,992,"%D",9,0)
not to be executed as part of a re-indexing.
"^DD",2,2,.326,1,992,"DT")
2990921
"^DD",2,2,.326,3)
Enter the date the patient entered his last episode of military service.
"^DD",2,2,.326,20,0)
^.3LA^1^1
"^DD",2,2,.326,20,1,0)
SVC
"^DD",2,2,.326,21,0)
^.001^7^7^3061003^^^
"^DD",2,2,.326,21,1,0)
For this veteran applicant enter the date s/he commenced his/her
"^DD",2,2,.326,21,2,0)
most recent episode of military service.  If the military service
"^DD",2,2,.326,21,3,0)
component is ACTIVATED NATIONAL GUARD or ACTIVATED RESERVE, the
"^DD",2,2,.326,21,4,0)
period entered should be the period of activation, so this date is
"^DD",2,2,.326,21,5,0)
their first day of active duty for the episode.  Once the service
"^DD",2,2,.326,21,6,0)
record is verified only those users who hold the designated
"^DD",2,2,.326,21,7,0)
security key may enter/edit this field.
"^DD",2,2,.326,"DEL",1,0)
S DFN=DA D SV^DGLOCK I '$D(X)
"^DD",2,2,.326,"DT")
3040722
"^DD",2,2,.327,0)
SERVICE SEPARATION DATE [LAST]^RDX^^.32;7^S %DT="E",%DT(0)=-DT D ^%DT K %DT S X=Y K:Y<1 X I $D(X) S DFN=DA D SV^DGLOCK I $D(X) K:'$$VALMSE^DGRPMS(DFN,X,1,"MSL") X I $D(X),$D(^DG(43,1)) S SD1=1 D PS^DGINP
"^DD",2,2,.327,.1)
SEPARATION DATE-SERVICE [LAST]
"^DD",2,2,.327,1,0)
^.1
"^DD",2,2,.327,1,1,0)
2^AENR327^MUMPS
"^DD",2,2,.327,1,1,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.327,1,1,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.327,1,1,"%D",0)
^^2^2^3040610^
"^DD",2,2,.327,1,1,"%D",1,0)
This MUMPS cross-reference is used to notify HEC of changes to the
"^DD",2,2,.327,1,1,"%D",2,0)
SERVICE SEPARATION DATE [LAST] field.
"^DD",2,2,.327,1,1,"DT")
3040610
"^DD",2,2,.327,1,992,0)
2^ADGRU327^MUMPS
"^DD",2,2,.327,1,992,1)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.327,1,992,2)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DA)
"^DD",2,2,.327,1,992,"%D",0)
^^9^9^2990921^
"^DD",2,2,.327,1,992,"%D",1,0)
This cross reference is used to remember that changes were made to a 
"^DD",2,2,.327,1,992,"%D",2,0)
monitored data field in the PATIENT File (#2) required for a vendor
"^DD",2,2,.327,1,992,"%D",3,0)
RAI/MDS COTS system.  Execution of this cross reference will create
"^DD",2,2,.327,1,992,"%D",4,0)
an entry in the ADT/HL7 PIVOT file (#391.71) and mark it as requiring
"^DD",2,2,.327,1,992,"%D",5,0)
transmission of an HL7 demographic A08 update message to the COTS
"^DD",2,2,.327,1,992,"%D",6,0)
interface.
"^DD",2,2,.327,1,992,"%D",7,0)
 
"^DD",2,2,.327,1,992,"%D",8,0)
The local variable DGRUGA08 will be set to 1 if the cross reference is
"^DD",2,2,.327,1,992,"%D",9,0)
not to be executed as part of a re-indexing.
"^DD",2,2,.327,1,992,"DT")
2990921
"^DD",2,2,.327,3)
Enter the date on which this patient was separated from his last episode of military service.
"^DD",2,2,.327,20,0)
^.3LA^1^1
"^DD",2,2,.327,20,1,0)
SVC
"^DD",2,2,.327,21,0)
^.001^7^7^3061003^^
"^DD",2,2,.327,21,1,0)
For this veteran applicant enter the date s/he ended his/her
"^DD",2,2,.327,21,2,0)
most recent episode of military service. If the military
"^DD",2,2,.327,21,3,0)
service component is ACTIVATED NATIONAL GUARD or ACTIVATED
"^DD",2,2,.327,21,4,0)
RESERVE, the period entered should be the period of activation,
"^DD",2,2,.327,21,5,0)
so this date is their last day of active duty for this episode.
"^DD",2,2,.327,21,6,0)
Once the service record is verified only those users who hold
"^DD",2,2,.327,21,7,0)
the designated security key may enter/edit this field.
"^DD",2,2,.327,"DEL",1,0)
S DFN=DA D SV^DGLOCK I '$D(X)
"^DD",2,2,.327,"DT")
3040628
"^DD",2,2,.3292,0)
SERVICE ENTRY DATE [NTL]^RDX^^.32;11^S %DT="E",%DT(0)=-DT D ^%DT K %DT S X=Y K:Y<1 X I $D(X) S DFN=DA D SER1^DGLOCK I $D(X) K:'$$VALMSE^DGRPMS(DFN,X,0,"MSNTL") X I $D(X) S DGFRDT=X I $D(^DG(43,1)) S SD1=2 D POS^DGINP
"^DD",2,2,.3292,.1)
ENTRY DATE-SERVICE [NTL]
"^DD",2,2,.3292,1,0)
^.1
"^DD",2,2,.3292,1,1,0)
2^AF^MUMPS
"^DD",2,2,.3292,1,1,1)
Q
"^DD",2,2,.3292,1,1,2)
Q
"^DD",2,2,.3292,1,2,0)
2^AENR3292^MUMPS
"^DD",2,2,.3292,1,2,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.3292,1,2,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.3292,1,2,"%D",0)
^^2^2^3040610^
"^DD",2,2,.3292,1,2,"%D",1,0)
This MUMPS cross-reference is used to notify HEC of changes to the
"^DD",2,2,.3292,1,2,"%D",2,0)
SERVICE ENTRY DATE [NTL] field.
"^DD",2,2,.3292,1,2,"DT")
3040610
"^DD",2,2,.3292,3)
Enter the date this patient commenced his next-to-last episode of military service.
"^DD",2,2,.3292,20,0)
^.3LA^1^1
"^DD",2,2,.3292,20,1,0)
SVC
"^DD",2,2,.3292,21,0)
^.001^10^10^3061003^^^^
"^DD",2,2,.3292,21,1,0)
For this veteran applicant who has at least two episodes of military
"^DD",2,2,.3292,21,2,0)
service (ANY OTHER PERIODS OF SERVICE prompt must be answered YES)
"^DD",2,2,.3292,21,3,0)
enter the date on which the next to last episode of service commenced.
"^DD",2,2,.3292,21,4,0)
If the military service component is ACTIVATED NATIONAL GUARD or
"^DD",2,2,.3292,21,5,0)
ACTIVATED RESERVE, the period entered should be the period of
"^DD",2,2,.3292,21,6,0)
activation, so this date is their first day of active duty for the
"^DD",2,2,.3292,21,7,0)
episode.  Once the service record is verified only those users
"^DD",2,2,.3292,21,8,0)
who hold the designated security key may enter/edit this field.
"^DD",2,2,.3292,21,9,0)
This field cannot be deleted as long as more than one episode of
"^DD",2,2,.3292,21,10,0)
military service is indicated.
"^DD",2,2,.3292,"DEL",1,0)
S DFN=DA D SV^DGLOCK I '$D(X)
"^DD",2,2,.3292,"DT")
3040722
"^DD",2,2,.3293,0)
SERVICE SEPARATION DATE [NTL]^RDX^^.32;12^S %DT="E",%DT(0)=-DT D ^%DT K %DT S X=Y K:Y<1 X I $D(X) S DFN=DA D SER1^DGLOCK I $D(X) K:'$$VALMSE^DGRPMS(DFN,X,1,"MSNTL") X I $D(X),$D(^DG(43,1)) S SD1=2 D PS^DGINP
"^DD",2,2,.3293,.1)
SEPARATION DATE-SERVICE [NTL]
"^DD",2,2,.3293,1,0)
^.1
"^DD",2,2,.3293,1,1,0)
2^AENR3293^MUMPS
"^DD",2,2,.3293,1,1,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.3293,1,1,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.3293,1,1,"%D",0)
^^2^2^3040610^
"^DD",2,2,.3293,1,1,"%D",1,0)
This MUMPS cross-reference is used to notify HEC of changes to the
"^DD",2,2,.3293,1,1,"%D",2,0)
SERVICE SEPARATION DATE [NTL] field.
"^DD",2,2,.3293,1,1,"DT")
3040610
"^DD",2,2,.3293,3)
Enter the date this patient ended his next-to-last episode of military service.
"^DD",2,2,.3293,20,0)
^.3LA^1^1
"^DD",2,2,.3293,20,1,0)
SVC
"^DD",2,2,.3293,21,0)
^.001^10^10^3061003^^^^
"^DD",2,2,.3293,21,1,0)
For this veteran applicant who has at least two episodes of military
"^DD",2,2,.3293,21,2,0)
service (ANY OTHER PERIODS OF SERVICE prompt must be answered YES)
"^DD",2,2,.3293,21,3,0)
enter the date on which the next to last episode of service ended.
"^DD",2,2,.3293,21,4,0)
If the military service component is ACTIVATED NATIONAL GUARD or
"^DD",2,2,.3293,21,5,0)
ACTIVATED RESERVE, the period entered should be the period of
"^DD",2,2,.3293,21,6,0)
activation, so this date is their last day of active duty for
"^DD",2,2,.3293,21,7,0)
this episode. Once the service record is verified only those users
"^DD",2,2,.3293,21,8,0)
who hold the designated security key may enter/edit this field.  This
"^DD",2,2,.3293,21,9,0)
field cannot be deleted as long as more than one episode of military
"^DD",2,2,.3293,21,10,0)
service is indicated.
"^DD",2,2,.3293,"DEL",1,0)
S DFN=DA D SV^DGLOCK I '$D(X)
"^DD",2,2,.3293,"DT")
3040610
"^DD",2,2,.3297,0)
SERVICE ENTRY DATE [NNTL]^RDX^^.32;16^S %DT="E",%DT(0)=-DT D ^%DT K %DT S X=Y K:Y<1 X I $D(X) S DFN=DA D SER2^DGLOCK I $D(X) K:'$$VALMSE^DGRPMS(DFN,X,0,"MSNNTL") X I $D(X) S DGFRDT=X I $D(^DG(43,1)) S SD1=3 D POS^DGINP
"^DD",2,2,.3297,.1)
ENTRY DATE-SERVICE [NNTL]
"^DD",2,2,.3297,1,0)
^.1
"^DD",2,2,.3297,1,1,0)
2^AENR3297^MUMPS
"^DD",2,2,.3297,1,1,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.3297,1,1,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.3297,1,1,"%D",0)
^.101^2^2^3040702^^
"^DD",2,2,.3297,1,1,"%D",1,0)
This MUMPS cross-reference is used to notify HEC of changes to the
"^DD",2,2,.3297,1,1,"%D",2,0)
SERVICE ENTRY DATE [NNTL] field.
"^DD",2,2,.3297,1,1,"DT")
3040702
"^DD",2,2,.3297,3)
For this third episode of military service enter the date on which the patient commenced serving.
"^DD",2,2,.3297,20,0)
^.3LA^1^1
"^DD",2,2,.3297,20,1,0)
SVC
"^DD",2,2,.3297,21,0)
^.001^10^10^3061003^^^^
"^DD",2,2,.3297,21,1,0)
For this veteran applicant who has at least three episodes of military
"^DD",2,2,.3297,21,2,0)
service (ANOTHER PERIOD OF SERVICE prompt must be answered YES) enter
"^DD",2,2,.3297,21,3,0)
the date on which the third most recent episode of service commenced.
"^DD",2,2,.3297,21,4,0)
If the military service component is ACTIVATED NATIONAL GUARD or
"^DD",2,2,.3297,21,5,0)
ACTIVATED RESERVE, the period entered should be the period of
"^DD",2,2,.3297,21,6,0)
activation, so this date is their first day of active duty for the
"^DD",2,2,.3297,21,7,0)
episode.  Once the service record is verified only those users who
"^DD",2,2,.3297,21,8,0)
hold the designated security key may enter/edit this field.  This
"^DD",2,2,.3297,21,9,0)
field cannot be deleted as long as more than two episodes of military
"^DD",2,2,.3297,21,10,0)
service are indicated.
"^DD",2,2,.3297,"DEL",1,0)
S DFN=DA D SV^DGLOCK I '$D(X)
"^DD",2,2,.3297,"DT")
3040722
"^DD",2,2,.3298,0)
SERVICE SEPARATION DATE [NNTL]^RDX^^.32;17^S %DT="E",%DT(0)=-DT D ^%DT K %DT S X=Y K:Y<1 X I $D(X) S DFN=DA D SER2^DGLOCK I $D(X) K:'$$VALMSE^DGRPMS(DFN,X,1,"MSNNTL") X I $D(X),$D(^DG(43,1)) S SD1=3 D PS^DGINP
"^DD",2,2,.3298,.1)
SEPARATION DATE-SERVICE [NNTL]
"^DD",2,2,.3298,1,0)
^.1
"^DD",2,2,.3298,1,1,0)
2^AENR3298^MUMPS
"^DD",2,2,.3298,1,1,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.3298,1,1,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.3298,1,1,"%D",0)
^^2^2^3040610^
"^DD",2,2,.3298,1,1,"%D",1,0)
This MUMPS cross-reference is used to notify HEC of changes to the
"^DD",2,2,.3298,1,1,"%D",2,0)
SERVICE SEPARATION DATE [NNTL] field.
"^DD",2,2,.3298,1,1,"DT")
3040610
"^DD",2,2,.3298,3)
For this third episode of military service enter the date on which the service terminated.
"^DD",2,2,.3298,20,0)
^.3LA^1^1
"^DD",2,2,.3298,20,1,0)
SVC
"^DD",2,2,.3298,21,0)
^.001^9^9^3061003^^^^
"^DD",2,2,.3298,21,1,0)
For this veteran applicant who has at least three episodes of military
"^DD",2,2,.3298,21,2,0)
service (ANOTHER PERIOD OF SERVICE prompt must be answered YES) enter
"^DD",2,2,.3298,21,3,0)
the date on which the third most recent episode of service ended.  If
"^DD",2,2,.3298,21,4,0)
the military service component is ACTIVATED NATIONAL GUARD or ACTIVATED
"^DD",2,2,.3298,21,5,0)
RESERVE, the period entered should be the period of activation, so this
"^DD",2,2,.3298,21,6,0)
date is their last day of active duty for this episode.  Once the
"^DD",2,2,.3298,21,7,0)
service record is verified only those users who hold the designated
"^DD",2,2,.3298,21,8,0)
security key may enter/edit this field.  This field cannot be deleted
"^DD",2,2,.3298,21,9,0)
as long as more than two episodes of military service are indicated.
"^DD",2,2,.3298,"DEL",1,0)
S DFN=DA D SV^DGLOCK I '$D(X)
"^DD",2,2,.3298,"DT")
3040610
"^DD",2,2.3215,.03,0)
OEF/OIF TO DATE^DX^^0;3^S %DT="E" D ^%DT S X=Y I $D(X) K:'$$VALCON1^DGRPMS(DA(1),DA,X,1) X I $D(X) S DFN=DA(1) D OEIF^DGLOCK
"^DD",2,2.3215,.03,1,0)
^.1
"^DD",2,2.3215,.03,1,1,0)
2.3215^AENR321503^MUMPS
"^DD",2,2.3215,.03,1,1,1)
D EVENT^IVMPLOG(DA(1))
"^DD",2,2.3215,.03,1,1,2)
D EVENT^IVMPLOG(DA(1))
"^DD",2,2.3215,.03,1,1,"%D",0)
^^2^2^3060123^
"^DD",2,2.3215,.03,1,1,"%D",1,0)
This MUMPS cross-reference is used to notify HEC of changes to the
"^DD",2,2.3215,.03,1,1,"%D",2,0)
OEF/OIF TO DATE field.
"^DD",2,2.3215,.03,1,1,"DT")
3060123
"^DD",2,2.3215,.03,3)
Enter the date the patient left the OEF/OIF area if known.  Otherwise, enter the end date of military pay for this OEF/OIF deployment.
"^DD",2,2.3215,.03,4)

"^DD",2,2.3215,.03,21,0)
^.001^9^9^3060322^^^^
"^DD",2,2.3215,.03,21,1,0)
If the service indicated is OEF or UNKNOWN OEF/OIF, this date must be on
"^DD",2,2.3215,.03,21,2,0)
or after 9/11/2001. If the service indicated is OIF, this date must be on
"^DD",2,2.3215,.03,21,3,0)
or after 3/19/2003.
"^DD",2,2.3215,.03,21,4,0)
 
"^DD",2,2.3215,.03,21,5,0)
The meaning of this date depends on where the information was obtained
"^DD",2,2.3215,.03,21,6,0)
from.  If the data came from the VIS, Environmental Medicine or FHIE
"^DD",2,2.3215,.03,21,7,0)
systems, this is the military pay end date for the assignment to
"^DD",2,2.3215,.03,21,8,0)
the OEF/OIF operation.  If it came from any other source, it is the date
"^DD",2,2.3215,.03,21,9,0)
the patient actually left the OEF/OIF area.
"^DD",2,2.3215,.03,"DT")
3060814
"BLD",6488,6)
^637
**END**
**END**
