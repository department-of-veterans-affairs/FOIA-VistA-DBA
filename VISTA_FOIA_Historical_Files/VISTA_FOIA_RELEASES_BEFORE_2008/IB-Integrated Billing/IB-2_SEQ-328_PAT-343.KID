Released IB*2*343 SEQ #328
Extracted from mail message
**KIDS**:IB*2.0*343^

**INSTALL NAME**
IB*2.0*343
"BLD",6339,0)
IB*2.0*343^INTEGRATED BILLING^0^3070206^y
"BLD",6339,1,0)
^^1^1^3060628^
"BLD",6339,1,1,0)
NPI Modifications for the IB Package
"BLD",6339,4,0)
^9.64PA^350.8^7
"BLD",6339,4,350.8,0)
350.8
"BLD",6339,4,350.8,222)
n^n^f^^y^^y^o^n
"BLD",6339,4,350.8,224)
I $F(".IB141.IB142.IB143.IB144.IB145.IB149.IB251.IB252.IB253.IB254.IB255.IB259.IB161.IB162.IB163.IB165.IB166.IB167.","."_$P($G(^IBE(350.8,+Y,0)),U,1)_".")
"BLD",6339,4,355.93,0)
355.93
"BLD",6339,4,355.93,2,0)
^9.641^355.93^3
"BLD",6339,4,355.93,2,355.93,0)
IB NON/OTHER VA BILLING PROVIDER  (File-top level)
"BLD",6339,4,355.93,2,355.93,1,0)
^9.6411^41.01^1
"BLD",6339,4,355.93,2,355.93,1,41.01,0)
NPI
"BLD",6339,4,355.93,2,355.9301,0)
DATE/TIME OF LAST NPI CHANGE  (sub-file)
"BLD",6339,4,355.93,2,355.9301,1,0)
^9.6411^^0
"BLD",6339,4,355.93,2,355.9342,0)
TAXONOMY CODE  (sub-file)
"BLD",6339,4,355.93,2,355.9342,1,0)
^9.6411^^0
"BLD",6339,4,355.93,222)
y^n^p^^^^n^^n
"BLD",6339,4,355.93,224)

"BLD",6339,4,355.97,0)
355.97
"BLD",6339,4,355.97,222)
n^n^f^^y^^y^o^n
"BLD",6339,4,355.97,224)
I $$INCPIT^IBY343PR(Y)
"BLD",6339,4,364.5,0)
364.5
"BLD",6339,4,364.5,222)
n^n^f^^y^^y^o^n
"BLD",6339,4,364.5,224)
I $$INCLUDE^IBY343PR(5,Y)
"BLD",6339,4,364.6,0)
364.6
"BLD",6339,4,364.6,222)
n^n^f^^y^^y^o^n
"BLD",6339,4,364.6,224)
I $$INCLUDE^IBY343PR(6,Y)
"BLD",6339,4,364.7,0)
364.7
"BLD",6339,4,364.7,222)
n^n^f^^y^^y^o^n
"BLD",6339,4,364.7,224)
I $$INCLUDE^IBY343PR(7,Y)
"BLD",6339,4,399,0)
399
"BLD",6339,4,399,2,0)
^9.641^399.0222^2
"BLD",6339,4,399,2,399,0)
BILL/CLAIMS  (File-top level)
"BLD",6339,4,399,2,399,1,0)
^9.6411^244^4
"BLD",6339,4,399,2,399,1,.22,0)
DEFAULT DIVISION
"BLD",6339,4,399,2,399,1,232,0)
NON-VA FACILITY
"BLD",6339,4,399,2,399,1,243,0)
DEFAULT DIVISION TAXONOMY
"BLD",6339,4,399,2,399,1,244,0)
NON-VA FACILITY TAXONOMY
"BLD",6339,4,399,2,399.0222,0)
PROVIDER  (sub-file)
"BLD",6339,4,399,2,399.0222,1,0)
^9.6411^.02^2
"BLD",6339,4,399,2,399.0222,1,.02,0)
PERFORMED BY
"BLD",6339,4,399,2,399.0222,1,.15,0)
TAXONOMY
"BLD",6339,4,399,222)
y^n^p^^^^n^^n
"BLD",6339,4,399,224)

"BLD",6339,4,"APDD",355.93,355.93)

"BLD",6339,4,"APDD",355.93,355.93,41.01)

"BLD",6339,4,"APDD",355.93,355.9301)

"BLD",6339,4,"APDD",355.93,355.9342)

"BLD",6339,4,"APDD",399,399)

"BLD",6339,4,"APDD",399,399,.22)

"BLD",6339,4,"APDD",399,399,232)

"BLD",6339,4,"APDD",399,399,243)

"BLD",6339,4,"APDD",399,399,244)

"BLD",6339,4,"APDD",399,399.0222)

"BLD",6339,4,"APDD",399,399.0222,.02)

"BLD",6339,4,"APDD",399,399.0222,.15)

"BLD",6339,4,"B",350.8,350.8)

"BLD",6339,4,"B",355.93,355.93)

"BLD",6339,4,"B",355.97,355.97)

"BLD",6339,4,"B",364.5,364.5)

"BLD",6339,4,"B",364.6,364.6)

"BLD",6339,4,"B",364.7,364.7)

"BLD",6339,4,"B",399,399)

"BLD",6339,6.3)
16
"BLD",6339,"ABPKG")
n
"BLD",6339,"INI")
IBY343PR
"BLD",6339,"INID")
^y^y
"BLD",6339,"INIT")
IBY343PO
"BLD",6339,"KRN",0)
^9.67PA^8989.52^19
"BLD",6339,"KRN",.4,0)
.4
"BLD",6339,"KRN",.401,0)
.401
"BLD",6339,"KRN",.402,0)
.402
"BLD",6339,"KRN",.402,"NM",0)
^9.68A^4^4
"BLD",6339,"KRN",.402,"NM",1,0)
IB SCREEN6    FILE #399^399^0
"BLD",6339,"KRN",.402,"NM",2,0)
IB SCREEN7    FILE #399^399^0
"BLD",6339,"KRN",.402,"NM",3,0)
IB SCREEN82    FILE #399^399^0
"BLD",6339,"KRN",.402,"NM",4,0)
IB SCREEN8H    FILE #399^399^0
"BLD",6339,"KRN",.402,"NM","B","IB SCREEN6    FILE #399",1)

"BLD",6339,"KRN",.402,"NM","B","IB SCREEN7    FILE #399",2)

"BLD",6339,"KRN",.402,"NM","B","IB SCREEN82    FILE #399",3)

"BLD",6339,"KRN",.402,"NM","B","IB SCREEN8H    FILE #399",4)

"BLD",6339,"KRN",.403,0)
.403
"BLD",6339,"KRN",.403,"NM",0)
^9.68A^^
"BLD",6339,"KRN",.5,0)
.5
"BLD",6339,"KRN",.84,0)
.84
"BLD",6339,"KRN",3.6,0)
3.6
"BLD",6339,"KRN",3.8,0)
3.8
"BLD",6339,"KRN",9.2,0)
9.2
"BLD",6339,"KRN",9.8,0)
9.8
"BLD",6339,"KRN",9.8,"NM",0)
^9.68A^19^12
"BLD",6339,"KRN",9.8,"NM",6,0)
IBCBB1^^0^B71423794
"BLD",6339,"KRN",9.8,"NM",7,0)
IBCBB11^^0^B13216318
"BLD",6339,"KRN",9.8,"NM",10,0)
IBCEP81^^0^B19908581
"BLD",6339,"KRN",9.8,"NM",11,0)
IBCEP82^^0^B27027320
"BLD",6339,"KRN",9.8,"NM",12,0)
IBCSC6^^0^B17895378
"BLD",6339,"KRN",9.8,"NM",13,0)
IBCSC7^^0^B8540222
"BLD",6339,"KRN",9.8,"NM",14,0)
IBCSC82^^0^B20168513
"BLD",6339,"KRN",9.8,"NM",15,0)
IBCSC8H^^0^B34960375
"BLD",6339,"KRN",9.8,"NM",16,0)
IBCEF74^^0^B56167229
"BLD",6339,"KRN",9.8,"NM",17,0)
IBCEF74A^^0^B19549924
"BLD",6339,"KRN",9.8,"NM",18,0)
IBCEF73A^^0^B18056830
"BLD",6339,"KRN",9.8,"NM",19,0)
IBCEP8^^0^B72198572
"BLD",6339,"KRN",9.8,"NM","B","IBCBB1",6)

"BLD",6339,"KRN",9.8,"NM","B","IBCBB11",7)

"BLD",6339,"KRN",9.8,"NM","B","IBCEF73A",18)

"BLD",6339,"KRN",9.8,"NM","B","IBCEF74",16)

"BLD",6339,"KRN",9.8,"NM","B","IBCEF74A",17)

"BLD",6339,"KRN",9.8,"NM","B","IBCEP8",19)

"BLD",6339,"KRN",9.8,"NM","B","IBCEP81",10)

"BLD",6339,"KRN",9.8,"NM","B","IBCEP82",11)

"BLD",6339,"KRN",9.8,"NM","B","IBCSC6",12)

"BLD",6339,"KRN",9.8,"NM","B","IBCSC7",13)

"BLD",6339,"KRN",9.8,"NM","B","IBCSC82",14)

"BLD",6339,"KRN",9.8,"NM","B","IBCSC8H",15)

"BLD",6339,"KRN",19,0)
19
"BLD",6339,"KRN",19.1,0)
19.1
"BLD",6339,"KRN",101,0)
101
"BLD",6339,"KRN",101,"NM",0)
^9.68A^2^2
"BLD",6339,"KRN",101,"NM",1,0)
IBCE PRVNVA PROVINFO^^0
"BLD",6339,"KRN",101,"NM",2,0)
IBCE PRVNVA SECIDS^^0
"BLD",6339,"KRN",101,"NM","B","IBCE PRVNVA PROVINFO",1)

"BLD",6339,"KRN",101,"NM","B","IBCE PRVNVA SECIDS",2)

"BLD",6339,"KRN",409.61,0)
409.61
"BLD",6339,"KRN",771,0)
771
"BLD",6339,"KRN",870,0)
870
"BLD",6339,"KRN",8989.51,0)
8989.51
"BLD",6339,"KRN",8989.52,0)
8989.52
"BLD",6339,"KRN",8994,0)
8994
"BLD",6339,"KRN","B",.4,.4)

"BLD",6339,"KRN","B",.401,.401)

"BLD",6339,"KRN","B",.402,.402)

"BLD",6339,"KRN","B",.403,.403)

"BLD",6339,"KRN","B",.5,.5)

"BLD",6339,"KRN","B",.84,.84)

"BLD",6339,"KRN","B",3.6,3.6)

"BLD",6339,"KRN","B",3.8,3.8)

"BLD",6339,"KRN","B",9.2,9.2)

"BLD",6339,"KRN","B",9.8,9.8)

"BLD",6339,"KRN","B",19,19)

"BLD",6339,"KRN","B",19.1,19.1)

"BLD",6339,"KRN","B",101,101)

"BLD",6339,"KRN","B",409.61,409.61)

"BLD",6339,"KRN","B",771,771)

"BLD",6339,"KRN","B",870,870)

"BLD",6339,"KRN","B",8989.51,8989.51)

"BLD",6339,"KRN","B",8989.52,8989.52)

"BLD",6339,"KRN","B",8994,8994)

"BLD",6339,"QUES",0)
^9.62^^
"BLD",6339,"REQB",0)
^9.611^4^4
"BLD",6339,"REQB",1,0)
XU*8.0*410^2
"BLD",6339,"REQB",2,0)
IB*2.0*320^2
"BLD",6339,"REQB",3,0)
IB*2.0*358^2
"BLD",6339,"REQB",4,0)
XU*8.0*416^2
"BLD",6339,"REQB","B","IB*2.0*320",2)

"BLD",6339,"REQB","B","IB*2.0*358",3)

"BLD",6339,"REQB","B","XU*8.0*410",1)

"BLD",6339,"REQB","B","XU*8.0*416",4)

"DATA",350.8,321,0)
IB141^Referring provider NPI missing.^IB141^1^3
"DATA",350.8,322,0)
IB142^Operating provider NPI missing.^IB142^1^3
"DATA",350.8,323,0)
IB143^Rendering provider NPI missing.^IB143^1^3
"DATA",350.8,324,0)
IB144^Attending provider NPI missing.^IB144^1^3
"DATA",350.8,325,0)
IB145^Supervising provider NPI missing.^IB145^1^3
"DATA",350.8,326,0)
IB149^Other provider NPI missing.^IB149^1^3
"DATA",350.8,327,0)
IB251^Referring provider taxonomy missing.^IB251^1^3
"DATA",350.8,328,0)
IB252^Operating provider taxonomy missing.^IB252^1^3
"DATA",350.8,329,0)
IB253^Rendering provider taxonomy missing.^IB253^1^3
"DATA",350.8,330,0)
IB254^Attending provider taxonomy missing.^IB254^1^3
"DATA",350.8,331,0)
IB255^Supervising provider taxonomy missing.^IB255^1^3
"DATA",350.8,332,0)
IB259^Other provider taxonomy missing.^IB259^1^3
"DATA",350.8,333,0)
IB161^Division NPI missing.^IB161^1^3
"DATA",350.8,334,0)
IB162^Non-VA Service Facility NPI missing.^IB162^1^3
"DATA",350.8,335,0)
IB163^Billing Provider NPI missing.^IB163^1^3
"DATA",350.8,336,0)
IB165^Division taxonomy missing.^IB165^1^3
"DATA",350.8,337,0)
IB166^Non-VA Service Facility taxonomy missing.^IB166^1^3
"DATA",350.8,338,0)
IB167^Billing Provider taxonomy missing.^IB167^1^3
"DATA",355.97,35,0)
NATIONAL PROVIDER ID^1^XX^^^1^^1
"DATA",355.97,35,1)
^^^^^^1^1
"DATA",364.5,320,0)
N-PROVIDER TAXONOMIES^N^E^I^399^^^
"DATA",364.5,320,1)
S (IBXDATA,IBXSAVE("TAX"))=$$PROVTAX^IBCEF73A(IBXIEN)
"DATA",364.5,320,3,1,0)
This will return TAXONOMY codes for all providers
"DATA",364.5,321,0)
N-ORGANIZATION NPI CODES^N^E^I^399^^^
"DATA",364.5,321,1)
S (IBXDATA,IBXSAVE("ORGNPI"))=$$ORGNPI^IBCEF73A(IBXIEN)
"DATA",364.5,321,3,0)
^^1^1^3060420^
"DATA",364.5,321,3,1,0)
This will return NPI for all organizations
"DATA",364.5,322,0)
N-ORGANIZATION TAXONOMIES^N^E^I^399^^^
"DATA",364.5,322,1)
S (IBXDATA,IBXSAVE("ORGTAX"))=$$ORGTAX^IBCEF73A(IBXIEN)
"DATA",364.5,322,3,0)
^^1^1^3060616^
"DATA",364.5,322,3,1,0)
This will return TAXONOMY codes for all organizations
"DATA",364.5,323,0)
N-PROVIDER NPI CODES^N^E^I^399^^^
"DATA",364.5,323,1)
S (IBXDATA,IBXSAVE("NPI"))=$$PROVNPI^IBCEF73A(IBXIEN)
"DATA",364.5,323,3,0)
^364.53^1^1^3060629^^
"DATA",364.5,323,3,1,0)
This will return NPI for all providers
"DATA",364.6,1323,0)
8^N^^104.5^1^^0^1^4^RECORD ID 'NPI '^0^1^1
"DATA",364.6,1324,0)
8^N^^104.5^1^^0^2^10^ATTEND/RENDER PHY NPI CODE^0^1^0
"DATA",364.6,1325,0)
8^N^^104.5^1^^0^3^10^ATTEND/RENDER PHY TAXONOMY^0^1^0
"DATA",364.6,1326,0)
8^N^^104.5^1^^0^4^10^OTHER PROV NPI CODE^0^1^0
"DATA",364.6,1327,0)
8^N^^104.5^1^^0^5^10^OTHER PROV TAXONOMY^0^1^0
"DATA",364.6,1328,0)
8^N^^104.5^1^^0^6^10^OPERATING PHY NPI CODE^0^1^0
"DATA",364.6,1329,0)
8^N^^104.5^1^^0^7^10^OPERATING PHY TAXONOMY^0^1^0
"DATA",364.6,1330,0)
8^N^^104.5^1^^0^8^10^SUPERVISING PROV NPI CODE^0^1^0
"DATA",364.6,1331,0)
8^N^^104.5^1^^0^9^10^SUPERVISING PROV TAXONOMY^0^1^0
"DATA",364.6,1332,0)
8^N^^104.5^1^^0^10^10^REFERRING PROV NPI CODE^0^1^0
"DATA",364.6,1333,0)
8^N^^104.5^1^^0^11^10^REFERRING PROV TAXONOMY^0^1^0
"DATA",364.6,1334,0)
8^N^^104.5^1^^0^12^10^BILLING PROV NPI CODE^0^1^0
"DATA",364.6,1335,0)
8^N^^104.5^1^^0^13^10^BILLING PROV TAXONOMY^0^1^0
"DATA",364.6,1336,0)
8^N^^104.5^1^^0^14^10^PURCHASED SVC PROV NPI CODE^0^1^0
"DATA",364.6,1337,0)
8^N^^104.5^1^^0^15^10^PURCHASED SVC PROV TAXONOMY^0^1^0
"DATA",364.6,1338,0)
8^N^^104.5^1^^0^16^10^SVC FACILITY PROV NPI CODE^0^1^0
"DATA",364.6,1339,0)
8^N^^104.5^1^^0^17^10^SVC FACILITY PROV TAXONOMY^0^1^0
"DATA",364.7,1015,0)
1014^N^5
"DATA",364.7,1015,1)
S IBXDATA="343.0      "
"DATA",364.7,1015,3,0)
^364.73^1^1^3060807^^^^
"DATA",364.7,1015,3,1,0)
 
"DATA",364.7,1041,0)
1323^N^131^^^^N
"DATA",364.7,1041,1)
S IBXDATA="NPI "
"DATA",364.7,1042,0)
1324^N^323^^^^N
"DATA",364.7,1042,1)
S IBXDATA=$S($P($G(IBXSAVE("NPI")),U,3):$P($G(IBXSAVE("NPI")),U,3),1:$P($G(IBXSAVE("NPI")),U,4))
"DATA",364.7,1043,0)
1325^N^320^^^^N
"DATA",364.7,1043,1)
S IBXDATA=$S($P($G(IBXSAVE("TAX")),U,3):$P($G(IBXSAVE("TAX")),U,3),1:$P($G(IBXSAVE("TAX")),U,4))
"DATA",364.7,1044,0)
1326^N^5^^^^N
"DATA",364.7,1044,1)
S IBXDATA=$P($G(IBXSAVE("NPI")),U,9)
"DATA",364.7,1045,0)
1327^N^5^^^^N
"DATA",364.7,1045,1)
S IBXDATA=$P($G(IBXSAVE("TAX")),U,9)
"DATA",364.7,1046,0)
1328^N^5^^^^N
"DATA",364.7,1046,1)
S IBXDATA=$P($G(IBXSAVE("NPI")),U,2)
"DATA",364.7,1047,0)
1329^N^5^^^^N
"DATA",364.7,1047,1)
S IBXDATA=$P($G(IBXSAVE("TAX")),U,2)
"DATA",364.7,1048,0)
1330^N^5^^^^N
"DATA",364.7,1048,1)
S IBXDATA=$P($G(IBXSAVE("NPI")),U,5)
"DATA",364.7,1049,0)
1331^N^5^^^^N
"DATA",364.7,1049,1)
S IBXDATA=$P($G(IBXSAVE("TAX")),U,5)
"DATA",364.7,1050,0)
1332^N^5^^^^N
"DATA",364.7,1050,1)
S IBXDATA=$P($G(IBXSAVE("NPI")),U,1) K IBXSAVE("NPI")
"DATA",364.7,1051,0)
1333^N^5^^^^N
"DATA",364.7,1051,1)
S IBXDATA=$P($G(IBXSAVE("TAX")),U,1) K IBXSAVE("TAX")
"DATA",364.7,1052,0)
1334^N^321^^^^N
"DATA",364.7,1052,1)
S IBXDATA=$P($G(IBXSAVE("ORGNPI")),U,3)
"DATA",364.7,1053,0)
1335^N^322^^^^N
"DATA",364.7,1053,1)
S IBXDATA=$P($G(IBXSAVE("ORGTAX")),U,3)
"DATA",364.7,1054,0)
1336^N^5^^^^N
"DATA",364.7,1054,1)
I $$SUB1OK^IBCEP8A(IBXIEN) S IBXDATA=$P($G(IBXSAVE("ORGNPI")),U,2)
"DATA",364.7,1055,0)
1337^N^5^^^^N
"DATA",364.7,1055,1)
I $$SUB1OK^IBCEP8A(IBXIEN) S IBXDATA=$P($G(IBXSAVE("ORGTAX")),U,2)
"DATA",364.7,1056,0)
1338^N^5^^^^N
"DATA",364.7,1056,1)
N IBZ,Z,ZSVC S Z=IBXIEN D F^IBCEF("N-RENDERING INSTITUTION","IBZ",,Z) S ZSVC=$P($G(IBZ),U,2) S IBXDATA=$S(ZSVC=1:$P($G(IBXSAVE("ORGNPI")),U,2),ZSVC=0:$P($G(IBXSAVE("ORGNPI")),U,1),1:$P($G(IBXSAVE("ORGNPI")),U,3))
"DATA",364.7,1057,0)
1339^N^5^^^^N
"DATA",364.7,1057,1)
N IBZ,Z,ZSVC S Z=IBXIEN D F^IBCEF("N-RENDERING INSTITUTION","IBZ",,Z) S ZSVC=$P($G(IBZ),U,2) S IBXDATA=$S(ZSVC=1:$P($G(IBXSAVE("ORGTAX")),U,2),ZSVC=0:$P($G(IBXSAVE("ORGTAX")),U,1),1:$P($G(IBXSAVE("ORGTAX")),U,3))
"FIA",350.8)
IB ERROR
"FIA",350.8,0)
^IBE(350.8,
"FIA",350.8,0,0)
350.8I
"FIA",350.8,0,1)
n^n^f^^y^^y^o^n
"FIA",350.8,0,10)

"FIA",350.8,0,11)
I $F(".IB141.IB142.IB143.IB144.IB145.IB149.IB251.IB252.IB253.IB254.IB255.IB259.IB161.IB162.IB163.IB165.IB166.IB167.","."_$P($G(^IBE(350.8,+Y,0)),U,1)_".")
"FIA",350.8,0,"RLRO")

"FIA",350.8,0,"VR")
2.0^IB
"FIA",350.8,350.8)
0
"FIA",355.93)
IB NON/OTHER VA BILLING PROVIDER
"FIA",355.93,0)
^IBA(355.93,
"FIA",355.93,0,0)
355.93I
"FIA",355.93,0,1)
y^n^p^^^^n^^n
"FIA",355.93,0,10)

"FIA",355.93,0,11)

"FIA",355.93,0,"RLRO")

"FIA",355.93,0,"VR")
2.0^IB
"FIA",355.93,355.93)
1
"FIA",355.93,355.93,40)

"FIA",355.93,355.93,41.01)

"FIA",355.93,355.93,42)

"FIA",355.93,355.9301)
0
"FIA",355.93,355.9342)
0
"FIA",355.97)
IB PROVIDER ID # TYPE
"FIA",355.97,0)
^IBE(355.97,
"FIA",355.97,0,0)
355.97I
"FIA",355.97,0,1)
n^n^f^^y^^y^o^n
"FIA",355.97,0,10)

"FIA",355.97,0,11)
I $$INCPIT^IBY343PR(Y)
"FIA",355.97,0,"RLRO")

"FIA",355.97,0,"VR")
2.0^IB
"FIA",355.97,355.97)
0
"FIA",364.5)
IB DATA ELEMENT DEFINITION
"FIA",364.5,0)
^IBA(364.5,
"FIA",364.5,0,0)
364.5I
"FIA",364.5,0,1)
n^n^f^^y^^y^o^n
"FIA",364.5,0,10)

"FIA",364.5,0,11)
I $$INCLUDE^IBY343PR(5,Y)
"FIA",364.5,0,"RLRO")

"FIA",364.5,0,"VR")
2.0^IB
"FIA",364.5,364.5)
0
"FIA",364.5,364.53)
0
"FIA",364.6)
IB FORM SKELETON DEFINITION
"FIA",364.6,0)
^IBA(364.6,
"FIA",364.6,0,0)
364.6IP
"FIA",364.6,0,1)
n^n^f^^y^^y^o^n
"FIA",364.6,0,10)

"FIA",364.6,0,11)
I $$INCLUDE^IBY343PR(6,Y)
"FIA",364.6,0,"RLRO")

"FIA",364.6,0,"VR")
2.0^IB
"FIA",364.6,364.6)
0
"FIA",364.7)
IB FORM FIELD CONTENT
"FIA",364.7,0)
^IBA(364.7,
"FIA",364.7,0,0)
364.7IP
"FIA",364.7,0,1)
n^n^f^^y^^y^o^n
"FIA",364.7,0,10)

"FIA",364.7,0,11)
I $$INCLUDE^IBY343PR(7,Y)
"FIA",364.7,0,"RLRO")

"FIA",364.7,0,"VR")
2.0^IB
"FIA",364.7,364.7)
0
"FIA",364.7,364.73)
0
"FIA",399)
BILL/CLAIMS
"FIA",399,0)
^DGCR(399,
"FIA",399,0,0)
399I
"FIA",399,0,1)
y^n^p^^^^n^^n
"FIA",399,0,10)

"FIA",399,0,11)

"FIA",399,0,"RLRO")

"FIA",399,0,"VR")
2.0^IB
"FIA",399,399)
1
"FIA",399,399,.22)

"FIA",399,399,232)

"FIA",399,399,243)

"FIA",399,399,244)

"FIA",399,399.0222)
1
"FIA",399,399.0222,.02)

"FIA",399,399.0222,.15)

"INI")
IBY343PR
"INIT")
IBY343PO
"IX",355.93,355.93,"NPI42",0)
355.93^NPI42^NPI42 X-REF^R^^F^IR^W^355.9301^^^^^LS
"IX",355.93,355.93,"NPI42",1)
S ^IBA(355.93,"NPI42",$E(X,1,10),DA(1),DA)=""
"IX",355.93,355.93,"NPI42",2)
K ^IBA(355.93,"NPI42",$E(X,1,10),DA(1),DA)
"IX",355.93,355.93,"NPI42",2.5)
K ^IBA(355.93,"NPI42")
"IX",355.93,355.93,"NPI42",11.1,0)
^.114IA^1^1
"IX",355.93,355.93,"NPI42",11.1,1,0)
1^F^355.9301^.03^10^1^F
"IX",355.93,355.93,"NPI42",11.1,1,3)

"IX",364.6,364.6,"ALL",0)
364.6^ALL^Allows for identification of local override fields that apply to ALL^MU^^F^IR^I^364.6^^^^^S
"IX",364.6,364.6,"ALL",1)
S ^IBA(364.7,"ALL",DA,X2(5))=""
"IX",364.6,364.6,"ALL",1.4)
I X2(4)'="L"!'X2(5)!(X2(2)'="")!(X2(3)'="")!'X2(1) S X=0
"IX",364.6,364.6,"ALL",2)
K ^IBA(364.7,"ALL",DA,X1(5))
"IX",364.6,364.6,"ALL",2.4)
I X1(4)'="L"!'X1(5)!(X1(2)'="")!(X1(3)'="")!'X1(1) S X=0
"IX",364.6,364.6,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.6,364.6,"ALL",11.1,0)
^.114IA^5^5
"IX",364.6,364.6,"ALL",11.1,1,0)
1^F^364.6^.03^^1^F
"IX",364.6,364.6,"ALL",11.1,1,1)
 
"IX",364.6,364.6,"ALL",11.1,2,0)
2^C
"IX",364.6,364.6,"ALL",11.1,2,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,5)
"IX",364.6,364.6,"ALL",11.1,3,0)
3^C
"IX",364.6,364.6,"ALL",11.1,3,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,6)
"IX",364.6,364.6,"ALL",11.1,4,0)
4^C
"IX",364.6,364.6,"ALL",11.1,4,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,2)
"IX",364.6,364.6,"ALL",11.1,5,0)
5^C
"IX",364.6,364.6,"ALL",11.1,5,1.5)
S X=+$O(^IBA(364.7,"B",DA,0))
"IX",364.6,364.6,"D",0)
364.6^D^XREF BY FORM,PAGE,LINE,COL TO SIMPLIFY DEVELOPMENT^MU^^R^IR^I^364.6^^^^^LS
"IX",364.6,364.6,"D",1)
S ^IBA(364.6,"D",X2(1)_","_X2(2)_","_X2(3)_","_X2(4),DA)=""
"IX",364.6,364.6,"D",1.4)
I X2(1)=""!(X2(2)="")!(X2(3)="")!(X2(4)="") S X=0
"IX",364.6,364.6,"D",2)
K ^IBA(364.6,"D",X1(1)_","_X1(2)_","_X1(3)_","_X1(4),DA)
"IX",364.6,364.6,"D",2.4)
I X1(1)=""!(X1(2)="")!(X1(3)="")!(X1(4)="") S X=0
"IX",364.6,364.6,"D",2.5)
K ^IBA(364.6,"D")
"IX",364.6,364.6,"D",11.1,0)
^.114IA^4^4
"IX",364.6,364.6,"D",11.1,1,0)
1^F^364.6^.01^^1^F
"IX",364.6,364.6,"D",11.1,2,0)
2^F^364.6^.04^^^F
"IX",364.6,364.6,"D",11.1,3,0)
3^F^364.6^.05^^^F
"IX",364.6,364.6,"D",11.1,4,0)
4^F^364.6^.08^^^F
"IX",364.7,364.7,"ALL",0)
364.7^ALL^Xref contains all local overrides defined for all insurance and type^MU^^F^IR^I^364.7^^^^^S
"IX",364.7,364.7,"ALL",1)
S ^IBA(364.7,"ALL",X2(2),DA)=""
"IX",364.7,364.7,"ALL",1.4)
I 'X2(2)!(X2(4)'="")!(X2(5)'="")!(X2(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2)
K ^IBA(364.7,"ALL",X1(2),DA)
"IX",364.7,364.7,"ALL",2.4)
I 'X1(2)!(X1(4)'="")!(X1(5)'="")!(X1(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.7,364.7,"ALL",11.1,0)
^.114IA^5^5
"IX",364.7,364.7,"ALL",11.1,1,0)
1^F^364.7^.01^15^^F
"IX",364.7,364.7,"ALL",11.1,1,3)
 
"IX",364.7,364.7,"ALL",11.1,2,0)
2^C^^^10^1
"IX",364.7,364.7,"ALL",11.1,2,1.5)
S X=$P($G(^IBA(364.6,+X(1),0)),U,3)
"IX",364.7,364.7,"ALL",11.1,3,0)
3^F^364.7^.02^10^^F
"IX",364.7,364.7,"ALL",11.1,3,3)
 
"IX",364.7,364.7,"ALL",11.1,4,0)
4^F^364.7^.05^20^^F
"IX",364.7,364.7,"ALL",11.1,4,3)
 
"IX",364.7,364.7,"ALL",11.1,5,0)
5^F^364.7^.06^20^^F
"IX",364.7,364.7,"ALL",11.1,5,3)
 
"KRN",.402,1435,-1)
0^1
"KRN",.402,1435,0)
IB SCREEN6^3061213.1712^@^399^^@^3061221
"KRN",.402,1435,"DIAB",4,0,399,1)
.26;TIMEFRAME OF BILL~
"KRN",.402,1435,"DIAB",5,0,399,0)
.24;LOCATION OF CARE~
"KRN",.402,1435,"DIAB",7,0,399,0)
.25;BILL CLASSIFICATION~
"KRN",.402,1435,"DR",1,399)
S:IBDR20'["61" Y="@62";S:$P($G(^DGCR(399,DA,0)),U,19)'=3 Y="@612";@611;S DIE("NO^")="";.24LOCATION OF CARE~~;S:'$D(DIE("NO^")) DIE("NO^")="";.25BILL CLASSIFICATION~~;
"KRN",.402,1435,"DR",1,399,1)
I '$$TOBIN^IBCU4($P(^DGCR(399,DA,0),U,25),DA) W !!,*7,"  **  The 'BILL CLASSIFICATION' must be consistent with the 'LOCATION OF CARE.'",! S Y="@611";@612;K DIE("NO^");.26TIMEFRAME OF BILL~~;216;217;
"KRN",.402,1435,"DR",1,399,2)
I '$$INPAT^IBCEF(DA)!($$FT^IBCEF(DA)'=3) S Y="@6121";221;@6121;.22;243;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,2),"Default Division");.27;S DGRVRCAL=1;S DIPA("FT1")=$P($G(^DGCR(399,DA,0)),U,19);D CKFT^IBCIUT1(IBIFN);@614;.19;
"KRN",.402,1435,"DR",1,399,3)
S DIPA("FT")=$P($G(^DGCR(399,DA,0)),U,19);I $P($G(^IBE(353,+DIPA("FT"),2)),U,2)="P",$P($G(^(2)),U,4) S DIPA("FT1")=DIPA("FT") D CKFT^IBCIUT1(IBIFN) S Y="@615";W !,*7,"Must be a printable national form type";
"KRN",.402,1435,"DR",1,399,4)
.19///^S X=$G(DIPA("FT1"));S Y="@614";@615;D FTPRV^IBCEU5(DA);@62;S:IBDR20'["62" Y="@63";155;S:X=0 Y=156;157;156;S:'$D(IBOX) Y="@63";153;@63;S:IBDR20'["63" Y="@64";151;152;@64;S:IBDR20'["64" Y="@65";161;165;@65;
"KRN",.402,1435,"DR",1,399,5)
S:IBDR20'["65" Y="@66";D RCD^IBCU1;42;202;S:'X Y="@657";203;@657;I $P(^DGCR(399,DA,"U1"),"^",11)']"" S Y="@66";210;@66;@67;S:IBDR20'["67" Y="@68";S:'$D(^DGCR(399,DA,"I1")) Y="@672";218;@672;S:'$D(^DGCR(399,DA,"I2")) Y="@673";219;
"KRN",.402,1435,"DR",1,399,6)
@673;S:'$D(^DGCR(399,DA,"I3")) Y="@68";220;@68;K DIE("NO^");
"KRN",.402,1435,"DR",2,399.042)
.01;.02;.03;.04;.05;.09;.06;I '$P(^DGCR(399,DA(1),"RC",DA,0),U,6) S Y="@658";.07;@658;I +$P(^DGCR(399,DA(1),"RC",DA,0),U,8) S Y="@659";.1;.12;
"KRN",.402,1435,"DR",2,399.042,1)
I $P($G(^DGCR(399,DA(1),"RC",DA,0)),U,10)'=4!'$P(^DGCR(399,DA(1),"RC",DA,0),U,6) S Y="@659";D LINKCPT^IBCEU5(DA(1),DA);@659;I $$FT^IBCEF(DA(1))'=3 S Y="@6591";.13;@6591;
"KRN",.402,1435,"ROU")
^IBXSC6
"KRN",.402,1435,"ROUOLD")
IBXSC6
"KRN",.402,1436,-1)
0^2
"KRN",.402,1436,0)
IB SCREEN7^3061213.1715^@^399^^@^3061221
"KRN",.402,1436,"DIAB",1,1,399.043,0)
ALL
"KRN",.402,1436,"DIAB",4,0,399,1)
.26;TIMEFRAME OF BILL~
"KRN",.402,1436,"DIAB",11,0,399,0)
.24;LOCATION OF CARE~
"KRN",.402,1436,"DIAB",13,0,399,0)
.25;BILL CLASSIFICATION~
"KRN",.402,1436,"DR",1,399)
S:IBDR20'["74" Y="@71";S:$D(IBOUT) Y="@999";43;@999;K IBOUT;@71;S:IBDR20'["71" Y="@72";S:$P($G(^DGCR(399,DA,0)),U,19)'=3 Y="@712";@711;S DIE("NO^")="";.24LOCATION OF CARE~~;S:'$D(DIE("NO^")) DIE("NO^")="";.25BILL CLASSIFICATION~~;
"KRN",.402,1436,"DR",1,399,1)
I '$$TOBIN^IBCU4($P(^DGCR(399,DA,0),U,25),DA) W !!,*7,"  **  The 'BILL CLASSIFICATION' must be consistent with the 'LOCATION OF CARE.'",! S Y="@711";@712;K DIE("NO^");.26TIMEFRAME OF BILL~~;216;217;162;.22;243;
"KRN",.402,1436,"DR",1,399,2)
D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,2),"Default Division");.27;S DGRVRCAL=1;S DIPA("FT1")=$P($G(^DGCR(399,DA,0)),U,19);D CKFT^IBCIUT1(IBIFN);@714;.19;S DIPA("FT")=$P($G(^DGCR(399,DA,0)),U,19);
"KRN",.402,1436,"DR",1,399,3)
I $P($G(^IBE(353,+DIPA("FT"),2)),U,2)="P",$P($G(^(2)),U,4) S DIPA("FT1")=DIPA("FT") D CKFT^IBCIUT1(IBIFN) S Y="@715";W !,*7,"Must be a printable national form type";.19///^S X=$G(DIPA("FT1"));S Y="@714";@715;D FTPRV^IBCEU5(DA);@72;
"KRN",.402,1436,"DR",1,399,4)
S:IBDR20'["72" Y="@73";155;S:X=0 Y=156;157;156;S:'$D(IBOX) Y="@73";153;@73;S:IBDR20'["73" Y="@75";151;152;@75;S:IBDR20'["75" Y="@76";D RCD^IBCU1;42;202;S:'X Y="@757";203;@757;I $P(^DGCR(399,DA,"U1"),"^",11)']"" S Y="@76";210;@76;
"KRN",.402,1436,"DR",1,399,5)
@77;S:IBDR20'["77" Y="@78";S:'$D(^DGCR(399,DA,"I1")) Y="@772";218;@772;S:'$D(^DGCR(399,DA,"I2")) Y="@773";219;@773;S:'$D(^DGCR(399,DA,"I3")) Y="@78";220;@78;K DIE("NO^");
"KRN",.402,1436,"DR",2,399.042)
.01;.02;.03;.04;.05;.06;I '$P(^DGCR(399,DA(1),"RC",DA,0),U,6) S Y="@758";.07//^S X=$$DEFDIV^IBCU7(DA(1));@758;I +$P(^DGCR(399,DA(1),"RC",DA,0),U,8) W !," AUTO ADDED CHARGE - NO CHANGE TO TYPE/COMPONENT" S Y="@759";.1;.12;
"KRN",.402,1436,"DR",2,399.042,1)
I $S($P($G(^DGCR(399,DA(1),"RC",DA,0)),U,10)=3:0,1:$P($G(^(0)),U,10)'=4)!$P($G(^(0)),U,8) S Y="@759";I $P($G(^DGCR(399,DA(1),"RC",DA,0)),U,10)=4 S Y="@7581";S DGRVRCAL=1;D LINKRX^IBCEU5(DA(1),DA);.15;S Y="@759";@7581;
"KRN",.402,1436,"DR",2,399.042,2)
D LINKCPT^IBCEU5(DA(1),DA);@759;I $$FT^IBCEF(DA(1))'=3 S Y="@7591";.13;@7591;
"KRN",.402,1436,"DR",2,399.043)
.01
"KRN",.402,1436,"ROU")
^IBXSC7
"KRN",.402,1436,"ROUOLD")
IBXSC7
"KRN",.402,1438,-1)
0^4
"KRN",.402,1438,0)
IB SCREEN8H^3061213.1721^@^399^^@^3061221
"KRN",.402,1438,"%D",0)
^^1^1^3051227^
"KRN",.402,1438,"%D",1,0)
Billing screen 8 input template for form type HCFA-1500.
"KRN",.402,1438,"DIAB",1,0,399,1)
TREATMENT AUTHORIZATION CODE;"PRIMARY AUTHORIZATION CODE"
"KRN",.402,1438,"DIAB",1,0,399,3)
NON-VA FACILITY:
"KRN",.402,1438,"DIAB",4,1,399.0222,5)
PRIM INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1438,"DIAB",5,1,399.0222,5)
PRIMARY INS CO ID NUMBER;T
"KRN",.402,1438,"DIAB",8,0,399,0)
FORM LOCATOR 37A;T
"KRN",.402,1438,"DIAB",8,1,399.0222,5)
SEC INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1438,"DIAB",9,1,399.0222,5)
SECONDARY INS CO ID NUMBER;T
"KRN",.402,1438,"DIAB",10,0,399,0)
FORM LOCATOR 37B;T
"KRN",.402,1438,"DIAB",12,0,399,4)
D ASK19^IBCEU3(DA);X
"KRN",.402,1438,"DIAB",12,1,399.0222,5)
TERT INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1438,"DIAB",13,1,399.0222,5)
TERTIARY INS CO ID NUMBER;T
"KRN",.402,1438,"DR",1,399)
K DIPA S DIPA("I1")=$D(^DGCR(399,DA,"I1")),DIPA("I2")=$D(^("I2")),DIPA("I3")=$D(^("I3"));S:IBDR20'["81" Y="@82";166;167;@82;S:IBDR20'["82" Y="@83";215;453T~;S:'DIPA("I2") Y="@825";454T~;S:'DIPA("I3") Y="@825";455;@825;
"KRN",.402,1438,"DR",1,399,1)
163PRIMARY AUTHORIZATION CODE~;S:'DIPA("I2") Y="@83";230;S:'DIPA("I3") Y="@83";231;@83;S:IBDR20'["83" Y="@84";222;@84;S:IBDR20'["84" Y="@85";232;S DIPA("NVA_FC")=X S:X="" Y="@842";
"KRN",.402,1438,"DR",1,399,2)
S DIPA("NVA_FC-0")=$G(^IBA(355.93,+DIPA("NVA_FC"),0)) S:$P(DIPA("NVA_FC-0"),U,5)'=""&($P(DIPA("NVA_FC-0"),U,6)'="")&($P(DIPA("NVA_FC-0"),U,7)'="") Y="@841";
"KRN",.402,1438,"DR",1,399,3)
^355.93^IBA(355.93,^^S I(0,0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,10),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");@841;244;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,3),"Non-VA Facility");233;@842;
"KRN",.402,1438,"DR",1,399,4)
S DIPA("OLDCLIA")=$P($G(^DGCR(399,DA,"U2")),U,13);235;I X="",$G(DIPA("OLDCLIA"))'="" S IBMDOTCN=1;@843;I '$$XRAY^IBCEP8A(DA) S Y="@844";D MAMMODP^IBCEP8A(DA);242;@844;@85;S:IBDR20'["85" Y="@86";459;D ASK19^IBCEU3(DA);236;237;
"KRN",.402,1438,"DR",1,399,5)
238//^S X=$S($$WNRBILL^IBEFUNC(DA):"31",1:"");@86;S:IBDR20'["86" Y="@99";I $$NSAME^IBCSC8H(DA) S Y="@861";401;@861;I '$P($G(^DGCR(399,DA,"TX")),U,8),'$$TXMT^IBCEF4(DA) S Y="@862";I $$REQMRA^IBEFUNC(DA) S Y="@8611";
"KRN",.402,1438,"DR",1,399,6)
27//NO FORCED PRINT;S Y="@862";@8611;28//NO FORCED PRINT;@862;@99;
"KRN",.402,1438,"DR",2,355.93)
.05;.1;.06;.07;.08;
"KRN",.402,1438,"DR",2,399.0222)
.01;S DIPA("RF")=X S:$D(^XUSEC("IB PROVIDER EDIT",DUZ)) DLAYGO=355.93;.02;K DLAYGO S DIPA("PRF")=X S:X="" Y="@98";.15;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,15),"");
"KRN",.402,1438,"DR",2,399.0222,1)
N Z S Z=$$EXPAND^IBTRE(399.0222,.08,$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,8)),DIPA("SPC")=$S(Z'="":Z,1:"UNSPECIFIED") W !,"    Prov Specialty On File: ",DIPA("SPC");S DIPA("CRD")=$$CRED^IBCEU($P(^DGCR(399,DA(1),"PRV",DA,0),U,2));
"KRN",.402,1438,"DR",2,399.0222,2)
.03;K DIPA("W1") S:$G(DIPA("CRD"))'=$P(^DGCR(399,DA(1),"PRV",DA,0),U,3) DIPA("W1")=1;I $G(DIPA("W1")) D WRT1^IBCSC8H($G(DIPA("CRD")));K DIPA("W1");I '$G(DIPA("I1")) S Y="@8305";
"KRN",.402,1438,"DR",2,399.0222,3)
D PROVID^IBCEP2B(DA(1),DA,1,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8382",DIPA("EDIT")=1:"@8391",DIPA("EDIT")=2:"@8371",1:"");@8382;I '$G(DIPA("I2")) S Y="@8305";
"KRN",.402,1438,"DR",2,399.0222,4)
D PROVID^IBCEP2B(DA(1),DA,2,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8383",DIPA("EDIT")=1:"@8392",DIPA("EDIT")=2:"@8372",1:"");@8383;I '$G(DIPA("I3")) S Y="@8305";
"KRN",.402,1438,"DR",2,399.0222,5)
D PROVID^IBCEP2B(DA(1),DA,3,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8305",DIPA("EDIT")=1:"@8393",DIPA("EDIT")=2:"@8373",1:"");S Y="@8305";@8391;.12R~T~;.05T~;S Y="@8382";@8392;.13R~T~;.06T~;S Y="@8383";@8393;.14R~T~;.07T~;S Y="@8305";@8371;
"KRN",.402,1438,"DR",2,399.0222,6)
.12////^S X=DIPA("PRIDT");.05////^S X=DIPA("PRID");S Y="@8382";@8372;.13////^S X=DIPA("PRIDT");.06////^S X=DIPA("PRID");S Y="@8383";@8373;.14////^S X=DIPA("PRIDT");.07////^S X=DIPA("PRID");S Y="@8305";@8305;@98;W @IOF;
"KRN",.402,1438,"ROUOLD")
IBXSC8H
"KRN",.402,1765,-1)
0^3
"KRN",.402,1765,0)
IB SCREEN82^3061213.1718^@^399^^@^3061221
"KRN",.402,1765,"DIAB",1,0,399,5)
NON-VA FACILITY:
"KRN",.402,1765,"DIAB",4,0,399,0)
FORM LOCATOR 37A;T
"KRN",.402,1765,"DIAB",4,1,399.0222,5)
PRIM INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1765,"DIAB",5,1,399.0222,5)
PRIMARY INS CO ID NUMBER;T
"KRN",.402,1765,"DIAB",6,0,399,0)
FORM LOCATOR 37B;T
"KRN",.402,1765,"DIAB",8,0,399,0)
FORM LOCATOR 37C;T
"KRN",.402,1765,"DIAB",8,1,399.0222,5)
SEC INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1765,"DIAB",9,1,399.0222,5)
SECONDARY INS CO ID NUMBER;T
"KRN",.402,1765,"DIAB",10,0,399,0)
TREATMENT AUTHORIZATION CODE;"PRIMARY AUTHORIZATION CODE"
"KRN",.402,1765,"DIAB",12,1,399.0222,5)
TERT INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1765,"DIAB",13,1,399.0222,5)
TERTIARY INS CO ID NUMBER;T
"KRN",.402,1765,"DR",1,399)
K DIPA S DIPA("I1")=$D(^DGCR(399,DA,"I1")),DIPA("I2")=$D(^("I2")),DIPA("I3")=$D(^("I3"));S:IBDR20'["81" Y="@82";208;453T~;S:'DIPA("I2") Y="@8111";454T~;S:'DIPA("I3") Y="@8111";455T~;@8111;163PRIMARY AUTHORIZATION CODE~;
"KRN",.402,1765,"DR",1,399,1)
S:'DIPA("I2") Y="@811";230;S:'DIPA("I3") Y="@811";231;@811;215;159;@82;S:IBDR20'["82" Y="@83";222;@83;S:IBDR20'["83" Y="@84";450;451;@84;S:IBDR20'["84" Y="@85";452;@85;S:IBDR20'["85" Y="@86";456;458;@86;S:IBDR20'["86" Y="@87";
"KRN",.402,1765,"DR",1,399,2)
I '$P($G(^DGCR(399,DA,"TX")),U,8),'$$TXMT^IBCEF4(DA) S Y="@861";I $$REQMRA^IBEFUNC(DA) S Y="@8611";27//NO FORCED PRINT;S Y="@87";@8611;28//NO FORCED PRINT;S Y="@87";@861;
"KRN",.402,1765,"DR",1,399,3)
N X,Y,DIR S DIR(0)="EA",DIR("A",1)="NO FIELDS AVAILABLE TO EDIT",DIR("A")="PRESS RETURN TO CONTINUE: " W ! D ^DIR K DIR;@87;S:IBDR20'["87" Y="@88";@88;S:IBDR20'["88" Y="@89";232;S DIPA("NVA_FC")=X S:DIPA("NVA_FC")="" Y="@882";
"KRN",.402,1765,"DR",1,399,4)
S DIPA("NVA_FC-0")=$G(^IBA(355.93,+DIPA("NVA_FC"),0)) S:$P(DIPA("NVA_FC-0"),U,5)'=""&($P(DIPA("NVA_FC-0"),U,6)'="")&($P(DIPA("NVA_FC-0"),U,7)'="") Y="@881";
"KRN",.402,1765,"DR",1,399,5)
^355.93^IBA(355.93,^^S I(0,0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,10),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");@881;244;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,3),"Non-VA Facility");233;@882;@89;
"KRN",.402,1765,"DR",2,355.93)
.05;.1;.06;.07;.08;
"KRN",.402,1765,"DR",2,399.0222)
.01;S DIPA("RF")=X S:$D(^XUSEC("IB PROVIDER EDIT",DUZ)) DLAYGO=355.93;.02;K DLAYGO S DIPA("PRF")=X S:DIPA("PRF")="" Y="@98";.15;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,15),"");
"KRN",.402,1765,"DR",2,399.0222,1)
N Z S Z=$$EXPAND^IBTRE(399.0222,.08,$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,8)),DIPA("SPC")=$S(Z'="":Z,1:"UNSPECIFIED") W !,"    Prov Specialty On File: ",DIPA("SPC");
"KRN",.402,1765,"DR",2,399.0222,2)
S DIPA("CRD")=$$CRED^IBCEU($P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,2));.03;K DIPA("W1") S:$G(DIPA("CRD"))'=$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,3) DIPA("W1")=1;I $G(DIPA("W1")) D WRT1^IBCSC8H($G(DIPA("CRD")));K DIPA("W1");
"KRN",.402,1765,"DR",2,399.0222,3)
I '$G(DIPA("I1")) S Y="@8205";D PROVID^IBCEP2B(DA(1),DA,1,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8282",DIPA("EDIT")=1:"@8291",DIPA("EDIT")=2:"@8271",1:"");@8282;I '$G(DIPA("I2")) S Y="@8205";
"KRN",.402,1765,"DR",2,399.0222,4)
D PROVID^IBCEP2B(DA(1),DA,2,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8283",DIPA("EDIT")=1:"@8292",DIPA("EDIT")=2:"@8272",1:"");@8283;I '$G(DIPA("I3")) S Y="@8205";
"KRN",.402,1765,"DR",2,399.0222,5)
D PROVID^IBCEP2B(DA(1),DA,3,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8205",DIPA("EDIT")=1:"@8293",DIPA("EDIT")=2:"@8273",1:"");S Y="@8205";@8291;.12R~T~;.05T~;S Y="@8282";@8292;.13R~T~;.06T~;S Y="@8283";@8293;.14R~T~;.07T~;S Y="@8205";@8271;
"KRN",.402,1765,"DR",2,399.0222,6)
.12////^S X=DIPA("PRIDT");.05////^S X=DIPA("PRID");S Y="@8282";@8272;.13////^S X=DIPA("PRIDT");.06////^S X=DIPA("PRID");S Y="@8283";@8273;.14////^S X=DIPA("PRIDT");.07////^S X=DIPA("PRID");S Y="@8205";@8205;@98;W @IOF;
"KRN",.402,1765,"ROU")
^IBXSC82
"KRN",.402,1765,"ROUOLD")
IBXSC82
"KRN",101,6063,-1)
0^1
"KRN",101,6063,0)
IBCE PRVNVA PROVINFO^Facility Info^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,6063,15)
Q
"KRN",101,6063,20)
D EDIT1^IBCEP8($G(IBNPRV))
"KRN",101,6063,99)
60477,65897
"KRN",101,6064,-1)
0^2
"KRN",101,6064,0)
IBCE PRVNVA SECIDS^ID Maintenance^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,6064,15)
Q
"KRN",101,6064,20)
D EDITID^IBCEP8($G(IBNPRV))
"KRN",101,6064,99)
60477,65897
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"PGL",350.8,0,6,.06)
CORRESPONDING ALERT^P354.5'^IBE(354.5,^0;6^Q
"PGL",364.6,0,3,.03)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"PGL",364.7,0,5,.05)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"PKG",179,-1)
1^1
"PKG",179,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",179,20,0)
^9.402P^1^1
"PKG",179,20,1,0)
2^^IBAXDR
"PKG",179,20,1,1)

"PKG",179,20,"B",2,1)

"PKG",179,22,0)
^9.49I^1^1
"PKG",179,22,1,0)
2.0^2940321^2940528
"PKG",179,22,1,"PAH",1,0)
343^3070206^18133
"PKG",179,22,1,"PAH",1,1,0)
^^1^1^3070206
"PKG",179,22,1,"PAH",1,1,1,0)
NPI Modifications for the IB Package
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
14
"RTN","IBCBB1")
0^6^B71423794^B69487454
"RTN","IBCBB1",1,0)
IBCBB1 ;ALB/AAS - CONTINUATION OF EDIT CHECK ROUTINE ;2-NOV-89
"RTN","IBCBB1",2,0)
 ;;2.0;INTEGRATED BILLING;**27,52,80,93,106,51,151,148,153,137,232,280,155,320,343**;21-MAR-94;Build 16
"RTN","IBCBB1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCBB1",4,0)
 ;
"RTN","IBCBB1",5,0)
 ;MAP TO DGCRBB1
"RTN","IBCBB1",6,0)
 ;
"RTN","IBCBB1",7,0)
% ;Bill Status
"RTN","IBCBB1",8,0)
 N Z,Z0,Z1
"RTN","IBCBB1",9,0)
 I $S(+IBST=0:1,1:"^1^2^3^4^7^"'[(U_IBST_U)) S IBER=IBER_"IB045;"
"RTN","IBCBB1",10,0)
 ;
"RTN","IBCBB1",11,0)
 ;Statement Covers From
"RTN","IBCBB1",12,0)
 I IBFDT="" S IBER=IBER_"IB061;"
"RTN","IBCBB1",13,0)
 I IBFDT]"",IBFDT'?7N&(IBFDT'?7N1".".N) S IBER=IBER_"IB061;"
"RTN","IBCBB1",14,0)
 I IBFDT>IBTDT S IBER=IBER_"IB061;" ; from must be on or before the to date 
"RTN","IBCBB1",15,0)
 S IBFFY=$$FY^IBOUTL(IBFDT)
"RTN","IBCBB1",16,0)
 ; if inpat - from date must not be prior to admit date.
"RTN","IBCBB1",17,0)
 I $$INPAT^IBCEF(IBIFN,1),(IBFDT<($P($G(^DGPT(+$P(IBND0,U,8),0)),U,2)\1))  S IBER=IBER_"IB061;"
"RTN","IBCBB1",18,0)
 ;
"RTN","IBCBB1",19,0)
 ;Statement Covers To
"RTN","IBCBB1",20,0)
 I IBTDT="" S IBER=IBER_"IB062;"
"RTN","IBCBB1",21,0)
 I IBTDT]"",IBTDT'?7N&(IBTDT'?7N1".".N) S IBER=IBER_"IB062;"
"RTN","IBCBB1",22,0)
 I IBTDT>DT!(IBTDT<IBFDT) S IBER=IBER_"IB062;"  ; to date must not be >than today's date
"RTN","IBCBB1",23,0)
 S IBTFY=$$FY^IBOUTL(IBTDT)
"RTN","IBCBB1",24,0)
 ;
"RTN","IBCBB1",25,0)
 ;Statement crosses fiscal years
"RTN","IBCBB1",26,0)
 ;I IBTFY'=IBFFY S IBER=IBER_"IB047;"
"RTN","IBCBB1",27,0)
 ;
"RTN","IBCBB1",28,0)
 ;Statement crosses calendar years
"RTN","IBCBB1",29,0)
 ;I $E(IBTDT,1,3)'=$E(IBFDT,1,3) S IBER=IBER_"IB046;"
"RTN","IBCBB1",30,0)
 ;
"RTN","IBCBB1",31,0)
 ;Total Charges
"RTN","IBCBB1",32,0)
 I +IBTC'>0!(+IBTC'=IBTC) S IBER=IBER_"IB064;"
"RTN","IBCBB1",33,0)
 ;
"RTN","IBCBB1",34,0)
 ;Billable charges for secondary claim
"RTN","IBCBB1",35,0)
 I $$MCRONBIL^IBEFUNC(IBIFN)&(($P(IBNDU1,U,1)-$P(IBNDU1,U,2))'>0) S IBER=IBER_"IB094;"
"RTN","IBCBB1",36,0)
 ;Fiscal Year 1
"RTN","IBCBB1",37,0)
 S IBFFY=$$FY^IBOUTL(IBFDT)
"RTN","IBCBB1",38,0)
 ;
"RTN","IBCBB1",39,0)
 ;Check provider link for current user, enterer, reviewer and Authorizor
"RTN","IBCBB1",40,0)
 I '$D(^VA(200,DUZ,0)) S IBER=IBER_"IB048;"
"RTN","IBCBB1",41,0)
 I IBEU]"",'$D(^VA(200,IBEU,0)) S IBER=IBER_"IB048;"
"RTN","IBCBB1",42,0)
 I IBRU]"",'$D(^VA(200,IBRU,0)) S IBER=IBER_"IB060;"
"RTN","IBCBB1",43,0)
 I IBAU]"",'$D(^VA(200,IBAU,0)) S IBER=IBER_"IB041;"
"RTN","IBCBB1",44,0)
 ;
"RTN","IBCBB1",45,0)
 ;Bill exists and not already new bill
"RTN","IBCBB1",46,0)
 ;I $S('$D(^PRCA(430,IBIFN,0)):1,$P($P(^PRCA(430,IBIFN,0),"^"),"-",2)'=IBBNO:1,1:0) S IBER=IBER_"IB056;"
"RTN","IBCBB1",47,0)
 ;I $P($$BN^PRCAFN(IBIFN),"-",2)'=IBBNO S IBER=IBER_"IB056;"
"RTN","IBCBB1",48,0)
 ;I IBER="",$P(^PRCA(430,IBIFN,0),"^",8)=$O(^PRCA(430.3,"AC",104,"")) S IBER=IBER_"IB040;"
"RTN","IBCBB1",49,0)
 I IBER="",+$$STA^PRCAFN(IBIFN)=104 S IBER=IBER_"IB040;"
"RTN","IBCBB1",50,0)
 ; If ins bill, must have valid COB sequence
"RTN","IBCBB1",51,0)
 I $P(IBND0,U,11)="i",$S($P(IBND0,U,21)="":1,1:"PST"'[$P(IBND0,U,21)) S IBER=IBER_"IB324;"
"RTN","IBCBB1",52,0)
 ;
"RTN","IBCBB1",53,0)
 ; Check for valid sec provider id for current ins
"RTN","IBCBB1",54,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"PRV",Z)) Q:'Z  S Z0=$G(^(Z,0)),Z1=+$$COBN^IBCEF(IBIFN) I $P(Z0,U,4+Z1)'="",$P(Z0,U,11+Z1)'="" D
"RTN","IBCBB1",55,0)
 . I '$$SECIDCK^IBCEF74(IBIFN,Z1,$P(Z0,U,11+Z1),Z) D WARN^IBCBB11("Prov secondary id type for the "_$P("PRIMARY^SECONDARY^TERTIARY",U,Z1)_" "_$$EXTERNAL^DILFD(399.0222,.01,,+Z0)_" is invalid/won't transmit")
"RTN","IBCBB1",56,0)
 ; Check NPIs
"RTN","IBCBB1",57,0)
 D NPICHK^IBCBB11
"RTN","IBCBB1",58,0)
 ;
"RTN","IBCBB1",59,0)
 ; Check taxonomies
"RTN","IBCBB1",60,0)
 D TAXCHK^IBCBB11
"RTN","IBCBB1",61,0)
 ;
"RTN","IBCBB1",62,0)
 ; Check for Physician Name
"RTN","IBCBB1",63,0)
 K IBXDATA D F^IBCEF("N-ATT/REND PHYSICIAN NAME",,,IBIFN)
"RTN","IBCBB1",64,0)
 I $P($G(IBXDATA),U)="" S IBER=IBER_"IB303;"
"RTN","IBCBB1",65,0)
 ;
"RTN","IBCBB1",66,0)
 N FUNCTION,IBINS
"RTN","IBCBB1",67,0)
 S FUNCTION=$S($$FT^IBCEF(IBIFN)=3:4,1:3)
"RTN","IBCBB1",68,0)
 I IBER'["IB303;" D
"RTN","IBCBB1",69,0)
 . F IBINS=1:1:3 D
"RTN","IBCBB1",70,0)
 .. S Z=$$GETTYP^IBCEP2A(IBIFN,IBINS)
"RTN","IBCBB1",71,0)
 .. I Z,$P(Z,U,2) D  ; Rendering/attending prov secondary id required
"RTN","IBCBB1",72,0)
 ... N IBID,IBOK,Q0
"RTN","IBCBB1",73,0)
 ... D PROVINF^IBCEF74(IBIFN,IBINS,.IBID,1,"C")  ; check all as though they were current
"RTN","IBCBB1",74,0)
 ... S IBOK=0
"RTN","IBCBB1",75,0)
 ... S Q0=0 F  S Q0=$O(IBID(1,FUNCTION,Q0)) Q:'Q0  I $P(IBID(1,FUNCTION,Q0),U,9)=+Z S IBOK=1 Q
"RTN","IBCBB1",76,0)
 ... I 'IBOK S IBER=IBER_$S(IBINS=1:"IB236;",IBINS=2:"IB237;",IBINS=3:"IB238;",1:"")
"RTN","IBCBB1",77,0)
 . I $$TXMT^IBCEF4(IBIFN) D
"RTN","IBCBB1",78,0)
 .. D F^IBCEF("N-ALL ATT/REND PROV SSN/EI","IBZ",,IBIFN)
"RTN","IBCBB1",79,0)
 .. I $P(IBZ,U,3)=""&($P(IBZ,U,4)="") S IBER=IBER_"IB321;" ; SSN/IEN required for rend/att
"RTN","IBCBB1",80,0)
 ;
"RTN","IBCBB1",81,0)
 N IBM,IBM1
"RTN","IBCBB1",82,0)
 S IBM=$G(^DGCR(399,IBIFN,"M"))
"RTN","IBCBB1",83,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1"))
"RTN","IBCBB1",84,0)
 I $P(IBM,U),$P($G(^DIC(36,$P(IBM,U),4)),U,6),$P(IBM1,U,2)="" S IBER=IBER_"IB244;"
"RTN","IBCBB1",85,0)
 I $P(IBM,U,2),$P($G(^DIC(36,$P(IBM,U,2),4)),U,6),$P(IBM1,U,3)="" S IBER=IBER_"IB245;"
"RTN","IBCBB1",86,0)
 I $P(IBM,U,3),$P($G(^DIC(36,$P(IBM,U,3),4)),U,6),$P(IBM1,U,4)="" S IBER=IBER_"IB246;"
"RTN","IBCBB1",87,0)
 ;
"RTN","IBCBB1",88,0)
 ; If outside facility, check for ID and qualifier in 355.93
"RTN","IBCBB1",89,0)
 ; 5/15/06 - esg - hard error IB243 turned into warning message instead
"RTN","IBCBB1",90,0)
 S Z=$P($G(^DGCR(399,IBIFN,"U2")),U,10)
"RTN","IBCBB1",91,0)
 I Z D
"RTN","IBCBB1",92,0)
 . I $P($G(^IBA(355.93,Z,0)),U,9)=""!($P($G(^IBA(355.93,Z,0)),U,13)="") D
"RTN","IBCBB1",93,0)
 .. N Z1,Z2
"RTN","IBCBB1",94,0)
 .. S Z1="Missing Lab or Facility Primary ID for non-VA facility, "
"RTN","IBCBB1",95,0)
 .. S Z2=$$EXTERNAL^DILFD(399,232,,Z)
"RTN","IBCBB1",96,0)
 .. I $L(Z2)'>19 D WARN^IBCBB11(Z1_Z2) Q
"RTN","IBCBB1",97,0)
 .. D WARN^IBCBB11(Z1),WARN^IBCBB11("     "_Z2)
"RTN","IBCBB1",98,0)
 .. Q
"RTN","IBCBB1",99,0)
 . Q
"RTN","IBCBB1",100,0)
 ;
"RTN","IBCBB1",101,0)
 ; Must be one and only one division on bill
"RTN","IBCBB1",102,0)
 S IBZ=$$MULTDIV^IBCBB11(IBIFN,IBND0)
"RTN","IBCBB1",103,0)
 I IBZ S IBER=IBER_$S(IBZ=1:"IB095;",IBZ=2:"IB104;",1:"IB105;")
"RTN","IBCBB1",104,0)
 ; Division address must be defined in institution file
"RTN","IBCBB1",105,0)
 I $P(IBND0,U,22) D
"RTN","IBCBB1",106,0)
 . N Z,Z0,Z1
"RTN","IBCBB1",107,0)
 . S Z0=$G(^DIC(4,+$P($G(^DG(40.8,+$P(IBND0,U,22),0)),U,7),0))
"RTN","IBCBB1",108,0)
 . S Z1=$G(^DIC(4,+$P($G(^DG(40.8,+$P(IBND0,U,22),0)),U,7),1))
"RTN","IBCBB1",109,0)
 . I $P(Z0,U,2)="" S IBER=IBER_"IB097;" Q
"RTN","IBCBB1",110,0)
 . F Z=1,3,4 I $P(Z1,U,Z)="" S IBER=IBER_"IB097;" Q
"RTN","IBCBB1",111,0)
 ;
"RTN","IBCBB1",112,0)
 ;CHAMPVA Rate Type and Primary Insurance Carriers Type of Coverage must match
"RTN","IBCBB1",113,0)
 S (IBRTCHV,IBPICHV)=0
"RTN","IBCBB1",114,0)
 I $P($G(^DGCR(399.3,+IBAT,0)),U,1)="CHAMPVA" S IBRTCHV=1
"RTN","IBCBB1",115,0)
 I $P($G(^IBE(355.2,+$P($G(^DIC(36,+IBNDMP,0)),U,13),0)),U,1)="CHAMPVA" S IBPICHV=1
"RTN","IBCBB1",116,0)
 I (+IBRTCHV!+IBPICHV)&('IBRTCHV!'IBPICHV) S IBER=IBER_"IB085;"
"RTN","IBCBB1",117,0)
 ;
"RTN","IBCBB1",118,0)
 N IBZPRC,IBZPRC92
"RTN","IBCBB1",119,0)
 D F^IBCEF("N-ALL PROCEDURES","IBZPRC",,IBIFN)
"RTN","IBCBB1",120,0)
 ; Procedure Clinic is required for Surgical Procedures Outpt Facility Charges
"RTN","IBCBB1",121,0)
 I +$P(IBND0,U,27)'=2,$$BILLRATE^IBCRU3(IBAT,IBCL,IBEVDT,"RC OUTPATIENT") D
"RTN","IBCBB1",122,0)
 . N Z,Z0,Z1,ZE S (ZE,Z)=0 F  S Z=$O(^DGCR(399,IBIFN,"CP",Z)) Q:'Z  D  I +ZE S IBER=IBER_"IB320;" Q
"RTN","IBCBB1",123,0)
 .. S Z0=$G(^DGCR(399,IBIFN,"CP",Z,0)),Z1=+Z0 I Z0'[";ICPT(" Q
"RTN","IBCBB1",124,0)
 .. I '((Z1'<10000)&(Z1'>69999))&'((Z1'<93501)&(Z1'>93533)) Q
"RTN","IBCBB1",125,0)
 .. I '$P(Z0,U,7) S ZE=1
"RTN","IBCBB1",126,0)
 ;
"RTN","IBCBB1",127,0)
 ; Extract procedures for UB92
"RTN","IBCBB1",128,0)
 D F^IBCEF("N-UB92 PROCEDURES","IBZPRC92",,IBIFN)
"RTN","IBCBB1",129,0)
 ; Does this bill have ANY prescriptions associated with it?
"RTN","IBCBB1",130,0)
 ; Must bill prescriptions separately from other charges
"RTN","IBCBB1",131,0)
 ;
"RTN","IBCBB1",132,0)
 I $$ISRX^IBCEF1(IBIFN) D
"RTN","IBCBB1",133,0)
 . N IBZ,IBRXDEF
"RTN","IBCBB1",134,0)
 . S IBRXDEF=$P($G(^IBE(350.9,1,1)),U,30),IBZ=0
"RTN","IBCBB1",135,0)
 . F  S IBZ=$O(IBZPRC92(IBZ)) Q:'IBZ  I IBZPRC92(IBZ),+$P(IBZPRC92(IBZ),U)'=IBRXDEF S IBER=IBER_"IB102;" Q
"RTN","IBCBB1",136,0)
 . K IBZ
"RTN","IBCBB1",137,0)
 ;
"RTN","IBCBB1",138,0)
 ; Check that COB sequences are not skipped
"RTN","IBCBB1",139,0)
 K Z
"RTN","IBCBB1",140,0)
 F Z=1:1:3 S:+$G(^DGCR(399,IBIFN,"I"_Z)) Z(Z)=""
"RTN","IBCBB1",141,0)
 F Z=0:1:2 S Z0=$O(Z(Z)) Q:'Z0  I Z0'=(Z+1) S IBER=IBER_"IB322;" Q
"RTN","IBCBB1",142,0)
 K Z
"RTN","IBCBB1",143,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,21)="" S IBER=IBER_"IB323;"
"RTN","IBCBB1",144,0)
 K IBXDATA D F^IBCEF("N-PROCEDURE CODING METHD",,,IBIFN)
"RTN","IBCBB1",145,0)
 ; Coding method should agree with types of procedure codes
"RTN","IBCBB1",146,0)
 S IBOK=$S('$O(IBZPRC(0))!(IBXDATA=""):1,1:0)
"RTN","IBCBB1",147,0)
 I 'IBOK S IBOK=1,IBZ=0 F  S IBZ=$O(IBZPRC(IBZ)) Q:'IBZ  I IBZPRC(IBZ),$P(IBZPRC(IBZ),U)'[$S(IBXDATA=9:"ICD",1:"ICP") S IBOK=0 Q
"RTN","IBCBB1",148,0)
 I 'IBOK D WARN^IBCBB11("Coding Method does not agree with all procedure codes found on bill")
"RTN","IBCBB1",149,0)
 D EDITMRA^IBCBB3(.IBQUIT,.IBER,IBIFN,IBFT)
"RTN","IBCBB1",150,0)
 Q:$G(IBQUIT)
"RTN","IBCBB1",151,0)
 ;
"RTN","IBCBB1",152,0)
 ;Other things that could be added:  Rev Code - calculating charges
"RTN","IBCBB1",153,0)
 ;        Diagnosis Coding, if MT copay - check for other co-payments
"RTN","IBCBB1",154,0)
 ;
"RTN","IBCBB1",155,0)
 I $P(IBNDTX,U,8),$$REQMRA^IBEFUNC(IBIFN) S IBER=IBER_"IB121;"   ; can't force MRAs to print
"RTN","IBCBB1",156,0)
 I $P(IBNDTX,U,8)!$P(IBNDTX,U,9) D WARN^IBCBB11($S($$REQMRA^IBEFUNC(IBIFN)&($P(IBNDTX,U,9)):"MRA Secondary ",1:"")_"Bill has been forced to print "_$S($P(IBNDTX,U,8)=1!($P(IBNDTX,U,9)=1):"locally",1:"at clearinghouse"))
"RTN","IBCBB1",157,0)
 I IBFT'=2,$P(IBNDM,U,10)="" D WARN^IBCBB11("Patient Short Address has no value")
"RTN","IBCBB1",158,0)
 N IBXZ,IBIZ F IBIZ=12,13,14 S IBXZ=$P(IBNDM,U,IBIZ) I +IBXZ S IBXZ=$P($G(^DPT(DFN,.312,IBXZ,0)),U,18) I +IBXZ S IBXZ=$G(^IBA(355.3,+IBXZ,0)) I +$P(IBXZ,U,12) D
"RTN","IBCBB1",159,0)
 . D WARN^IBCBB11($P($G(^DIC(36,+IBXZ,0)),U,1)_" requires Amb Care Certification")
"RTN","IBCBB1",160,0)
 ;
"RTN","IBCBB1",161,0)
 ;Build AR array if no errors and MRA not needed or already rec'd
"RTN","IBCBB1",162,0)
 I IBER="",$S($$NEEDMRA^IBEFUNC(IBIFN)!($$REQMRA^IBEFUNC(IBIFN)):0,1:1) D ARRAY
"RTN","IBCBB1",163,0)
 ;
"RTN","IBCBB1",164,0)
END ;Don't kill IBIFN, IBER, DFN
"RTN","IBCBB1",165,0)
 I $O(^TMP($J,"BILL-WARN",0)),$G(IBER)="" S IBER="WARN" ;Warnings only
"RTN","IBCBB1",166,0)
 K IBBNO,IBEVDT,IBLOC,IBCL,IBTF,IBAT,IBWHO,IBST,IBFDT,IBTDT,IBTC,IBFY,IBFY1,IBAU,IBRU,IBEU,IBARTP,IBFYC,IBMRA,IBTOB,IBTOB12,IBNDU2,IBNDUF3,IBNDUF31,IBNDTX
"RTN","IBCBB1",167,0)
 K IBNDS,IBND0,IBNDU,IBNDM,IBNDMP,IBNDU1,IBFFY,IBTFY,IBFT,IBRTCHV,IBPICHV,IBXDATA,IBOK
"RTN","IBCBB1",168,0)
 I $D(IBER),IBER="" W !,"No Errors found for National edits"
"RTN","IBCBB1",169,0)
 Q
"RTN","IBCBB1",170,0)
 ;
"RTN","IBCBB1",171,0)
ARRAY ;Build PRCASV(array)
"RTN","IBCBB1",172,0)
 N IBCOBN,X
"RTN","IBCBB1",173,0)
 K PRCASV
"RTN","IBCBB1",174,0)
 Q:$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN))
"RTN","IBCBB1",175,0)
 S IBCOBN=$$COBN^IBCEF(IBIFN)
"RTN","IBCBB1",176,0)
 S X=IBIFN
"RTN","IBCBB1",177,0)
 S PRCASV("BDT")=DT,PRCASV("ARREC")=IBIFN
"RTN","IBCBB1",178,0)
 S PRCASV("APR")=DUZ
"RTN","IBCBB1",179,0)
 S PRCASV("PAT")=DFN,PRCASV("CAT")=$P(^DGCR(399.3,IBAT,0),"^",6)
"RTN","IBCBB1",180,0)
 I IBWHO="i" S PRCASV("DEBTOR")=+IBNDMP_";DIC(36,"
"RTN","IBCBB1",181,0)
 S PRCASV("DEBTOR")=$S(IBWHO="p":DFN_";DPT(",IBWHO="o":$P(IBNDM,"^",11)_";DIC(4,",IBWHO="i":PRCASV("DEBTOR"),1:"")
"RTN","IBCBB1",182,0)
 S PRCASV("CARE")=$E($$TOB^IBCEF1(IBIFN),1,2)
"RTN","IBCBB1",183,0)
 S PRCASV("FY")=$$FY^IBOUTL(DT)_U_($P(IBNDU1,U)-$P(IBNDU1,U,2))
"RTN","IBCBB1",184,0)
 ;S PRCASV("FY")=$P(IBNDU1,U,9)_U_$S($P(IBNDU1,U,2)]"":($P(IBNDU1,U,10)-$P(IBNDU1,U,2)),1:$P(IBNDU1,U,10))_$S($P(IBNDU1,U,11)]"":U_$P(IBNDU1,U,11)_U_$P(IBNDU1,U,12),1:"")
"RTN","IBCBB1",185,0)
PLUS I IBWHO="i",$P(IBNDM,"^",2),$D(^DIC(36,$P(IBNDM,"^",2),0)) S PRCASV("2NDINS")=$P(IBNDM,"^",2)
"RTN","IBCBB1",186,0)
 I IBWHO="i",$P(IBNDM,"^",3),$D(^DIC(36,$P(IBNDM,"^",3),0)) S PRCASV("3RDINS")=$P(IBNDM,"^",3)
"RTN","IBCBB1",187,0)
 ;
"RTN","IBCBB1",188,0)
 N IBX S IBX=$P(IBND0,U,21),IBX=$S(IBX="P":"I1",IBX="S":"I2",IBX="T":"I3",1:"") Q:IBX=""
"RTN","IBCBB1",189,0)
 N IBNDI1
"RTN","IBCBB1",190,0)
 Q:'$D(^DGCR(399,IBIFN,IBX))  S IBNDI1=^(IBX)
"RTN","IBCBB1",191,0)
 S:$P(IBNDI1,"^",3)]"" PRCASV("GPNO")=$P(IBNDI1,"^",3)
"RTN","IBCBB1",192,0)
 S:$P(IBNDI1,"^",15)]"" PRCASV("GPNM")=$P(IBNDI1,"^",15)
"RTN","IBCBB1",193,0)
 S:$P(IBNDI1,"^",17)]"" PRCASV("INPA")=$P(IBNDI1,"^",17)
"RTN","IBCBB1",194,0)
 S:$P(IBNDI1,"^",2)]"" PRCASV("IDNO")=$P(IBNDI1,"^",2),PRCASV("INID")=PRCASV("IDNO")
"RTN","IBCBB1",195,0)
 ; Check that this is a secondary or tertiary bill and insurance for previous
"RTN","IBCBB1",196,0)
 ; COB sequence is Medicare WNR and MRA is active --> send data elements to AR
"RTN","IBCBB1",197,0)
 I IBCOBN>1,$$WNRBILL^IBEFUNC(IBIFN,IBCOBN-1),$$EDIACTV^IBCEF4(2) D MRA
"RTN","IBCBB1",198,0)
 Q
"RTN","IBCBB1",199,0)
 ;
"RTN","IBCBB1",200,0)
MRA N IBEOB S IBEOB=0
"RTN","IBCBB1",201,0)
 ;
"RTN","IBCBB1",202,0)
 K PRCASV("MEDURE"),PRCASV("MEDCA")
"RTN","IBCBB1",203,0)
 ; Get EOB data
"RTN","IBCBB1",204,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D
"RTN","IBCBB1",205,0)
 . D MRACALC^IBCEMU2(IBEOB,IBIFN,1,.PRCASV)
"RTN","IBCBB1",206,0)
 Q  ;MRA
"RTN","IBCBB1",207,0)
 ;
"RTN","IBCBB1",208,0)
 ;; PREGNANCY DX CODES: V22**-V24**, V27**-V28**, 630**-677**
"RTN","IBCBB1",209,0)
 ;; FLU SHOTS PROCEDURE CODES: 90724, G0008, 90732, G0009
"RTN","IBCBB11")
0^7^B13216318^B1812610
"RTN","IBCBB11",1,0)
IBCBB11 ;ALB/AAS - CONTINUATION OF EDIT CHECK ROUTINE ; 12 Jun 2006  3:45 PM
"RTN","IBCBB11",2,0)
 ;;2.0;INTEGRATED BILLING;**51,343**;21-MAR-94;Build 16
"RTN","IBCBB11",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCBB11",4,0)
 ;
"RTN","IBCBB11",5,0)
WARN(IBDISP) ; Set warning in global
"RTN","IBCBB11",6,0)
 ; DISP = warning text to display
"RTN","IBCBB11",7,0)
 ;
"RTN","IBCBB11",8,0)
 N Z
"RTN","IBCBB11",9,0)
 S Z=+$O(^TMP($J,"BILL-WARN",""),-1)
"RTN","IBCBB11",10,0)
 I Z=0 S ^TMP($J,"BILL-WARN",1)=$J("",5)_"**Warnings**:",Z=1
"RTN","IBCBB11",11,0)
 S Z=Z+1,^TMP($J,"BILL-WARN",Z)=$J("",5)_IBDISP
"RTN","IBCBB11",12,0)
 Q
"RTN","IBCBB11",13,0)
 ;
"RTN","IBCBB11",14,0)
MULTDIV(IBIFN,IBND0) ; Check for multiple divisions on a bill ien IBIFN
"RTN","IBCBB11",15,0)
 ; IBND0 = 0-node of bill
"RTN","IBCBB11",16,0)
 ;
"RTN","IBCBB11",17,0)
 ;  Function returns 1 if more than 1 division found on bill
"RTN","IBCBB11",18,0)
 N Z,Z0,Z1,MULT
"RTN","IBCBB11",19,0)
 S MULT=0,Z1=$P(IBND0,U,22)
"RTN","IBCBB11",20,0)
 I Z1 D
"RTN","IBCBB11",21,0)
 . S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$P(^(Z,0),U,7) I Z0,Z0'=Z1 S MULT=1 Q
"RTN","IBCBB11",22,0)
 . S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"CP",Z)) Q:'Z  S Z0=$P(^(Z,0),U,6) I Z0,Z0'=Z1 S MULT=2 Q
"RTN","IBCBB11",23,0)
 I 'Z1 S MULT=3
"RTN","IBCBB11",24,0)
 Q MULT
"RTN","IBCBB11",25,0)
 ;
"RTN","IBCBB11",26,0)
 ;; PREGNANCY DX CODES: V22**-V24**, V27**-V28**, 630**-677**
"RTN","IBCBB11",27,0)
 ;; FLU SHOTS PROCEDURE CODES: 90724, G0008, 90732, G0009
"RTN","IBCBB11",28,0)
 ;
"RTN","IBCBB11",29,0)
 ; Check for required NPIs
"RTN","IBCBB11",30,0)
NPICHK ;
"RTN","IBCBB11",31,0)
 N IBNPIS,IBNONPI,IBNPIREQ,Z
"RTN","IBCBB11",32,0)
 S IBNPIREQ=$$NPIREQ^IBCEP81(DT)  ; Check if NPI is required
"RTN","IBCBB11",33,0)
 ; Check providers
"RTN","IBCBB11",34,0)
 S IBNPIS=$$PROVNPI^IBCEF73A(IBIFN,.IBNONPI)
"RTN","IBCBB11",35,0)
 I $L(IBNONPI) F Z=1:1:$L(IBNONPI,U) D
"RTN","IBCBB11",36,0)
 . I IBNPIREQ S IBER=IBER_"IB"_(140+$P(IBNONPI,U,Z))_";" Q  ; If required, set error
"RTN","IBCBB11",37,0)
 . D WARN("NPI for the "_$P("referring^operating^rendering^attending^supervising^^^^other",U,$P(IBNONPI,U,Z))_" provider has no value")  ; Else, set warning
"RTN","IBCBB11",38,0)
 ; Check organizations
"RTN","IBCBB11",39,0)
 S IBNONPI=""
"RTN","IBCBB11",40,0)
 S IBNPIS=$$ORGNPI^IBCEF73A(IBIFN,.IBNONPI)
"RTN","IBCBB11",41,0)
 I $L(IBNONPI) F Z=1:1:$L(IBNONPI,U) D
"RTN","IBCBB11",42,0)
 . I IBNPIREQ S IBER=IBER_"IB"_(160+$P(IBNONPI,U,Z))_";" Q  ; If required, set error
"RTN","IBCBB11",43,0)
 . ; PRXM/KJH - Changed descriptions.
"RTN","IBCBB11",44,0)
 . D WARN("NPI for the "_$P("Division^Non-VA Service Facility^Billing Provider",U,$P(IBNONPI,U,Z))_" has no value")  ; Else, set warning
"RTN","IBCBB11",45,0)
 Q
"RTN","IBCBB11",46,0)
 ;
"RTN","IBCBB11",47,0)
 ; Check for required taxonomies
"RTN","IBCBB11",48,0)
TAXCHK ;
"RTN","IBCBB11",49,0)
 N IBTAXS,IBNOTAX,IBTAXREQ,Z
"RTN","IBCBB11",50,0)
 S IBTAXREQ=$$TAXREQ^IBCEP81(DT)  ; Check if taxonomy is required
"RTN","IBCBB11",51,0)
 ; Check providers
"RTN","IBCBB11",52,0)
 S IBTAXS=$$PROVTAX^IBCEF73A(IBIFN,.IBNOTAX)
"RTN","IBCBB11",53,0)
 I $L(IBNOTAX) F Z=1:1:$L(IBNOTAX,U) D
"RTN","IBCBB11",54,0)
 . I IBTAXREQ S IBER=IBER_"IB"_(250+$P(IBNOTAX,U,Z))_";" Q  ; If required, set error
"RTN","IBCBB11",55,0)
 . D WARN("Taxonomy for the "_$P("referring^operating^rendering^attending^supervising^^^^other",U,$P(IBNOTAX,U,Z))_" provider has no value")  ; Else, set warning
"RTN","IBCBB11",56,0)
 ; Check organizations
"RTN","IBCBB11",57,0)
 S IBNOTAX=""
"RTN","IBCBB11",58,0)
 S IBTAXS=$$ORGTAX^IBCEF73A(IBIFN,.IBNOTAX)
"RTN","IBCBB11",59,0)
 I $L(IBNOTAX) F Z=1:1:$L(IBNOTAX,U) D
"RTN","IBCBB11",60,0)
 . I IBTAXREQ S IBER=IBER_"IB"_(164+$P(IBNOTAX,U,Z))_";" Q  ; If required, set error
"RTN","IBCBB11",61,0)
 . ; PRXM/KJH - Changed descriptions.
"RTN","IBCBB11",62,0)
 . D WARN("Taxonomy for the "_$P("Division^Non-VA Service Facility^Billing Provider",U,$P(IBNOTAX,U,Z))_" has no value")  ; Else, set warning
"RTN","IBCBB11",63,0)
 Q
"RTN","IBCEF73A")
0^18^B18056830^n/a
"RTN","IBCEF73A",1,0)
IBCEF73A ;ALB/KJH - FORMATTER AND EXTRACTOR SPECIFIC (NPI) BILL FUNCTIONS ; 30 Aug 2006  10:38 AM
"RTN","IBCEF73A",2,0)
 ;;2.0;INTEGRATED BILLING;**343**;21-MAR-94;Build 16
"RTN","IBCEF73A",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEF73A",4,0)
 ;
"RTN","IBCEF73A",5,0)
PROVNPI(IBIEN399,IBNONPI) ;
"RTN","IBCEF73A",6,0)
 ;Retrieves NPIs from #200 or 355.93
"RTN","IBCEF73A",7,0)
 ; Input:
"RTN","IBCEF73A",8,0)
 ;       IBIEN399 - IEN of record in BILL/CLAIMS file 399
"RTN","IBCEF73A",9,0)
 ;       IBNONPI - variable to pass info on missing NPI to calling routine.  Pass by reference
"RTN","IBCEF73A",10,0)
 ; Output:
"RTN","IBCEF73A",11,0)
 ;       NPI codes for all providers
"RTN","IBCEF73A",12,0)
 ;       IBNONPI - U-delimited list of provider types with missing NPIs
"RTN","IBCEF73A",13,0)
 N IBRETVAL,IBPTR,IBFT
"RTN","IBCEF73A",14,0)
 S IBRETVAL="",IBNONPI=""
"RTN","IBCEF73A",15,0)
 F IBFT=1:1:9 D
"RTN","IBCEF73A",16,0)
 . S IBPTR=$$PROVPTR^IBCEF7(IBIEN399,IBFT)
"RTN","IBCEF73A",17,0)
 . I IBPTR S $P(IBRETVAL,"^",IBFT)=$$GETNPI(IBPTR)
"RTN","IBCEF73A",18,0)
 Q IBRETVAL
"RTN","IBCEF73A",19,0)
GETNPI(IBPTR) ;look for NPI in #200 or #355.93
"RTN","IBCEF73A",20,0)
 ;Input: IBPTR from 399.0222, field .02
"RTN","IBCEF73A",21,0)
 ;Output: NPI
"RTN","IBCEF73A",22,0)
 ;if in file #200
"RTN","IBCEF73A",23,0)
 N NPI
"RTN","IBCEF73A",24,0)
 S NPI=""
"RTN","IBCEF73A",25,0)
 ;if in 200 then get it from 200
"RTN","IBCEF73A",26,0)
 I $P(IBPTR,";",2)="VA(200," S NPI=$P($$NPI^XUSNPI("Individual_ID",$P(IBPTR,";")),U) S:NPI=-1 NPI=""
"RTN","IBCEF73A",27,0)
 ;if in 355.93 then use 355.93
"RTN","IBCEF73A",28,0)
 I $P(IBPTR,";",2)="IBA(355.93," S NPI=$$NPIGET^IBCEP81($P(IBPTR,";"))
"RTN","IBCEF73A",29,0)
 I NPI="",$D(IBNONPI) S IBNONPI=$S(IBNONPI="":IBFT,1:IBNONPI_U_IBFT)
"RTN","IBCEF73A",30,0)
 Q NPI
"RTN","IBCEF73A",31,0)
 ;
"RTN","IBCEF73A",32,0)
SPECTAX(IBIEN399,IBNOSPEC) ;
"RTN","IBCEF73A",33,0)
 ;Retrieves Specialty Codes from Current Taxonomy entries for a claim from #399
"RTN","IBCEF73A",34,0)
 ; Input:
"RTN","IBCEF73A",35,0)
 ;       IBIEN399 - IEN of record in BILL/CLAIMS file 399
"RTN","IBCEF73A",36,0)
 ;       IBNOSPEC - variable to pass info on missing taxonomies to calling routine.  Pass by reference
"RTN","IBCEF73A",37,0)
 ; Output:
"RTN","IBCEF73A",38,0)
 ;       Taxonomy Specialty Codes for all providers
"RTN","IBCEF73A",39,0)
 ;       IBNOSPEC - U-delimited list of provider types with missing Taxonomy Specialty codes
"RTN","IBCEF73A",40,0)
 N IBRETVAL,IBN,IBFT,IBSPEC,SPEC
"RTN","IBCEF73A",41,0)
 S IBRETVAL="",IBNOSPEC=""
"RTN","IBCEF73A",42,0)
 F IBFT=1:1:9 D
"RTN","IBCEF73A",43,0)
 . S IBN=$O(^DGCR(399,IBIEN399,"PRV","B",IBFT,0))
"RTN","IBCEF73A",44,0)
 . I +IBN=0 Q
"RTN","IBCEF73A",45,0)
 . S IBSPEC=$P($G(^DGCR(399,IBIEN399,"PRV",+IBN,0)),"^",15)
"RTN","IBCEF73A",46,0)
 . S SPEC=$$GET1^DIQ(8932.1,IBSPEC,"SPECIALTY CODE")
"RTN","IBCEF73A",47,0)
 . S $P(IBRETVAL,"^",IBFT)=SPEC
"RTN","IBCEF73A",48,0)
 . I SPEC="",$D(IBNOSPEC) S IBNOSPEC=$S(IBNOSPEC="":IBFT,1:IBNOSPEC_U_IBFT)
"RTN","IBCEF73A",49,0)
 Q IBRETVAL
"RTN","IBCEF73A",50,0)
 ;
"RTN","IBCEF73A",51,0)
PROVTAX(IBIEN399,IBNOTAX) ;
"RTN","IBCEF73A",52,0)
 ;Retrieves Current Taxonomy entries for a claim from #399
"RTN","IBCEF73A",53,0)
 ; Input:
"RTN","IBCEF73A",54,0)
 ;       IBIEN399 - IEN of record in BILL/CLAIMS file 399
"RTN","IBCEF73A",55,0)
 ;       IBNOTAX - variable to pass info on missing taxonomies to calling routine.  Pass by reference
"RTN","IBCEF73A",56,0)
 ; Output:
"RTN","IBCEF73A",57,0)
 ;       Taxonomy X12 codes for all providers
"RTN","IBCEF73A",58,0)
 ;       IBNOTAX - U-delimited list of provider types with missing Taxonomy X12 codes
"RTN","IBCEF73A",59,0)
 N IBRETVAL,IBN,IBFT,IBTAX,TAX
"RTN","IBCEF73A",60,0)
 S IBRETVAL="",IBNOTAX=""
"RTN","IBCEF73A",61,0)
 F IBFT=1:1:9 D
"RTN","IBCEF73A",62,0)
 . S IBN=$O(^DGCR(399,IBIEN399,"PRV","B",IBFT,0))
"RTN","IBCEF73A",63,0)
 . I +IBN=0 Q
"RTN","IBCEF73A",64,0)
 . S IBTAX=$P($G(^DGCR(399,IBIEN399,"PRV",+IBN,0)),"^",15)
"RTN","IBCEF73A",65,0)
 . S TAX=$$GET1^DIQ(8932.1,IBTAX,"X12 CODE")
"RTN","IBCEF73A",66,0)
 . S $P(IBRETVAL,"^",IBFT)=TAX
"RTN","IBCEF73A",67,0)
 . I TAX="",$D(IBNOTAX) S IBNOTAX=$S(IBNOTAX="":IBFT,1:IBNOTAX_U_IBFT)
"RTN","IBCEF73A",68,0)
 Q IBRETVAL
"RTN","IBCEF73A",69,0)
GETTAX(IBPTR) ;look for Taxonomy in #200 or #355.93
"RTN","IBCEF73A",70,0)
 ;Input: IBPTR from 399.0222, field .02
"RTN","IBCEF73A",71,0)
 ;Output: Taxonomy X12 code_"^"_IEN
"RTN","IBCEF73A",72,0)
 N TAX
"RTN","IBCEF73A",73,0)
 S TAX="^"
"RTN","IBCEF73A",74,0)
 ;if in 200 then get it from 200
"RTN","IBCEF73A",75,0)
 I $P(IBPTR,";",2)="VA(200," S TAX=$$TAXIND^XUSTAX($P(IBPTR,";"))
"RTN","IBCEF73A",76,0)
 ;if in 355.93 then use 355.93
"RTN","IBCEF73A",77,0)
 I $P(IBPTR,";",2)="IBA(355.93," S TAX=$$TAXGET^IBCEP81($P(IBPTR,";"))
"RTN","IBCEF73A",78,0)
 Q TAX
"RTN","IBCEF73A",79,0)
 ;
"RTN","IBCEF73A",80,0)
ORGNPI(IBIEN399,IBNONPI) ; Extract NPIs for organizations on this claim
"RTN","IBCEF73A",81,0)
 ; Input
"RTN","IBCEF73A",82,0)
 ;       IBIEN399 - Claim IEN in file 399
"RTN","IBCEF73A",83,0)
 ;       IBNONPI - Variable to pass info on missing NPI back to calling routine.  Pass by reference.
"RTN","IBCEF73A",84,0)
 ; Output - NPI codes for facilities
"RTN","IBCEF73A",85,0)
 ;        Piece 1) Division (Responsible Institution) NPI code
"RTN","IBCEF73A",86,0)
 ;        Piece 2) Non-VA Service Facility NPI code
"RTN","IBCEF73A",87,0)
 ;        Piece 3) Billing Provider NPI code (main VA division)
"RTN","IBCEF73A",88,0)
 N IBRETVAL,IBORG,IBEVDT,IBDIV,NPI
"RTN","IBCEF73A",89,0)
 I IBIEN399="" Q ""
"RTN","IBCEF73A",90,0)
 S IBRETVAL=""
"RTN","IBCEF73A",91,0)
 S IBEVDT=$$GET1^DIQ(399,IBIEN399_",",.03,"I")
"RTN","IBCEF73A",92,0)
 I IBEVDT="" S IBEVDT=DT
"RTN","IBCEF73A",93,0)
 S IBDIV=$$GET1^DIQ(399,IBIEN399_",",.22,"I")
"RTN","IBCEF73A",94,0)
 I IBDIV="" S IBDIV=$$PRIM^VASITE(IBEVDT)
"RTN","IBCEF73A",95,0)
 S IBORG=$P($$SITE^VASITE(IBEVDT,IBDIV),U),NPI=""
"RTN","IBCEF73A",96,0)
 I IBORG S NPI=$P($$NPI^XUSNPI("Organization_ID",IBORG),U) S:NPI'=-1 $P(IBRETVAL,U)=NPI
"RTN","IBCEF73A",97,0)
 I NPI<1,$D(IBNONPI) S IBNONPI=1
"RTN","IBCEF73A",98,0)
 S IBORG=$$GET1^DIQ(399,IBIEN399_",",232,"I")
"RTN","IBCEF73A",99,0)
 I IBORG S NPI=$$NPIGET^IBCEP81(IBORG),$P(IBRETVAL,U,2)=NPI I 'NPI,$D(IBNONPI) S IBNONPI=$S(IBNONPI="":2,1:IBNONPI_U_2)
"RTN","IBCEF73A",100,0)
 S IBORG=$P($$SITE^VASITE,U),NPI=""
"RTN","IBCEF73A",101,0)
 I IBORG S NPI=$P($$NPI^XUSNPI("Organization_ID",IBORG),U) S:NPI'=-1 $P(IBRETVAL,U,3)=NPI
"RTN","IBCEF73A",102,0)
 I NPI<1,$D(IBNONPI) S IBNONPI=$S(IBNONPI="":3,1:IBNONPI_U_3)
"RTN","IBCEF73A",103,0)
 Q IBRETVAL
"RTN","IBCEF73A",104,0)
 ;
"RTN","IBCEF73A",105,0)
ORGTAX(IBIEN399,IBNOTAX) ; Extract Taxonomies for organizations on this claim
"RTN","IBCEF73A",106,0)
 ; Input
"RTN","IBCEF73A",107,0)
 ;       IBIEN399 - Claim IEN in file 399
"RTN","IBCEF73A",108,0)
 ;       IBNOTAX - Variable to pass info on missing taxonomies back to calling routine.  Pass by reference.
"RTN","IBCEF73A",109,0)
 ; Output - Taxonomy X12 codes for facilities
"RTN","IBCEF73A",110,0)
 ;        Piece 1) Division (Responsible Institution) Taxonomy X12 code
"RTN","IBCEF73A",111,0)
 ;        Piece 2) Non-VA Service Facility Taxonomy X12 code
"RTN","IBCEF73A",112,0)
 ;        Piece 3) Billing Provider Taxonomy X12 code (main VA division)
"RTN","IBCEF73A",113,0)
 N IBRETVAL,IBTAX,TAX
"RTN","IBCEF73A",114,0)
 I IBIEN399="" Q ""
"RTN","IBCEF73A",115,0)
 S IBTAX=$$GET1^DIQ(399,IBIEN399_",",243,"I")
"RTN","IBCEF73A",116,0)
 S TAX=$$GET1^DIQ(8932.1,IBTAX,"X12 CODE")
"RTN","IBCEF73A",117,0)
 S $P(IBRETVAL,U)=TAX
"RTN","IBCEF73A",118,0)
 I '$L(TAX),$D(IBNOTAX) S IBNOTAX=1
"RTN","IBCEF73A",119,0)
 S IBTAX=$$GET1^DIQ(399,IBIEN399_",",244,"I")
"RTN","IBCEF73A",120,0)
 S TAX=$$GET1^DIQ(8932.1,IBTAX,"X12 CODE")
"RTN","IBCEF73A",121,0)
 S $P(IBRETVAL,U,2)=TAX
"RTN","IBCEF73A",122,0)
 I '$L(TAX),$$GET1^DIQ(399,IBIEN399_",",232,"I"),$D(IBNOTAX) S IBNOTAX=$S(IBNOTAX="":2,1:IBNOTAX_U_2)
"RTN","IBCEF73A",123,0)
 S IBORG=$P($$SITE^VASITE,U)
"RTN","IBCEF73A",124,0)
 S TAX=$P($$TAXORG^XUSTAX(IBORG),U)
"RTN","IBCEF73A",125,0)
 S $P(IBRETVAL,U,3)=TAX
"RTN","IBCEF73A",126,0)
 I '$L(TAX),$D(IBNOTAX) S IBNOTAX=$S(IBNOTAX="":3,1:IBNOTAX_U_3)
"RTN","IBCEF73A",127,0)
 Q IBRETVAL
"RTN","IBCEF74")
0^16^B56167229^B57131951
"RTN","IBCEF74",1,0)
IBCEF74 ;WOIFO/SS - FORMATTER/EXTRACT BILL FUNCTIONS ;31-JUL-03
"RTN","IBCEF74",2,0)
 ;;2.0;INTEGRATED BILLING;**232,280,155,290,291,320,358,343**;21-MAR-94;Build 16
"RTN","IBCEF74",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEF74",4,0)
 ;
"RTN","IBCEF74",5,0)
SORT(IBPRNUM,IBPRTYP,IB399,IBSRC,IBDST,IBN,IBEXC,IBSEQ,IBLIMIT) ;
"RTN","IBCEF74",6,0)
 D SORT^IBCEF77($G(IBPRNUM),$G(IBPRTYP),$G(IB399),.IBSRC,.IBDST,$G(IBN),$G(IBEXC),$G(IBSEQ),$G(IBLIMIT))
"RTN","IBCEF74",7,0)
 Q
"RTN","IBCEF74",8,0)
 ;
"RTN","IBCEF74",9,0)
 ;-- PROVINF --
"RTN","IBCEF74",10,0)
 ;Create array with prov info
"RTN","IBCEF74",11,0)
 ;Input:
"RTN","IBCEF74",12,0)
 ; IB399 - ien #399
"RTN","IBCEF74",13,0)
 ; IBPRNUM - 1=prim ins, 2= sec, 3 -tert
"RTN","IBCEF74",14,0)
 ; IBRES - for results
"RTN","IBCEF74",15,0)
 ; IBSORT - to sort OTHER INSURANCE data 
"RTN","IBCEF74",16,0)
 ;  if PROVINF is called for "C" mode of PROVIDER subroutine then 
"RTN","IBCEF74",17,0)
 ;    IBSORT can be any (say 1)
"RTN","IBCEF74",18,0)
 ;  if PROVINF is called for "O" mode then can be more than set of data
"RTN","IBCEF74",19,0)
 ;    - need to sort array to use it (like IBXDATA(1) and IBXDATA(2))
"RTN","IBCEF74",20,0)
 ;    for mode "O" it should be 1 or 2 (see PROVIDER section)
"RTN","IBCEF74",21,0)
 ;IBINSTP -  "C" -current ins, "O"-other
"RTN","IBCEF74",22,0)
 ;Output:
"RTN","IBCEF74",23,0)
 ; IBRES(PRNUM,PRTYPE,SEQ#)=PROV^INSUR^IDTYPE^ID^FORMTYP^CARETYP
"RTN","IBCEF74",24,0)
 ; where:(see PROVIDER)
"RTN","IBCEF74",25,0)
PROVINF(IB399,IBPRNUM,IBRES,IBSORT,IBINSTP) ;
"RTN","IBCEF74",26,0)
 I +$G(IBSORT)=0 S IBSORT=IBPRNUM
"RTN","IBCEF74",27,0)
 N IBPRTYP,IBINSCO,IBPROV,IBFRMTYP,IBCARE,IB35591,IBN,IBCURR,IBEXC,IBALLSSN,IBSSNIEN,IBLIMIT
"RTN","IBCEF74",28,0)
 S IBN=0
"RTN","IBCEF74",29,0)
 D F^IBCEF("N-ALL ATT/RENDERING PROV SSN","IBALLSSN",,IB399)
"RTN","IBCEF74",30,0)
 S Q=0 F  S Q=$O(^IBE(355.97,Q)) Q:'Q  I $P($G(^(Q,0)),U,3)="SY" S IBSSNIEN=Q Q
"RTN","IBCEF74",31,0)
 S IBINSCO=+$P($G(^DGCR(399,IB399,"M")),"^",IBPRNUM)
"RTN","IBCEF74",32,0)
 S IBFRMTYP=$$FT^IBCEF(IB399),IBFRMTYP=$S(IBFRMTYP=2:2,IBFRMTYP=3:1,1:0)
"RTN","IBCEF74",33,0)
 S IBCARE=$S($$ISRX^IBCEF1(IB399):3,1:0) ;if an Rx refill bill
"RTN","IBCEF74",34,0)
 S:IBCARE=0 IBCARE=$$INPAT^IBCEF(IB399,1) S:'IBCARE IBCARE=2 ;1-inp,2-out
"RTN","IBCEF74",35,0)
 S IBLIMIT=$S($G(IBINSTP)="C":5,1:3)  ; Limits on secondary IDs
"RTN","IBCEF74",36,0)
 F IBPRTYP=1:1:9 D
"RTN","IBCEF74",37,0)
 . N Z,IB355OV
"RTN","IBCEF74",38,0)
 . S IBPROV=$$PROVPTR^IBCEF7(IB399,IBPRTYP)
"RTN","IBCEF74",39,0)
 . Q:+IBPROV=0
"RTN","IBCEF74",40,0)
 . ;don't create anything if form type not CMS-1500 or UB
"RTN","IBCEF74",41,0)
 . Q:IBFRMTYP=0
"RTN","IBCEF74",42,0)
 . N IBRETARR S IBRETARR=0
"RTN","IBCEF74",43,0)
 . D PRACT^IBCEF71(IBINSCO,IBFRMTYP,IBCARE,IBPROV,.IBRETARR,IBPRTYP,$G(IBINSTP))
"RTN","IBCEF74",44,0)
 . S IB355OV="",IBEXC=""
"RTN","IBCEF74",45,0)
 . S Z=$O(^DGCR(399,IB399,"PRV","B",IBPRTYP,0))
"RTN","IBCEF74",46,0)
 . I Z S Z=$G(^DGCR(399,IB399,"PRV",Z,0)) D
"RTN","IBCEF74",47,0)
 .. I $P(Z,U,IBPRNUM+4)'="",$P(Z,U,IBPRNUM+11)'="" S IB355OV=$P(Z,U,IBPRNUM+4)_U_$P(Z,U,IBPRNUM+11)
"RTN","IBCEF74",48,0)
 . S IBCURR=$$COB^IBCEF(IB399)
"RTN","IBCEF74",49,0)
 . S IBN=0,IB35591=$$CH35591^IBCEF72(IBINSCO,IBFRMTYP,IBCARE)
"RTN","IBCEF74",50,0)
 . I $G(IBINSTP)="C",$G(IBPRNUM)=1,"34"[$G(IBPRTYP),"P"[$G(IBCURR),$G(IBFRMTYP)=2,$$MCRONBIL^IBEFUNC(IB399) S IB355OV=$$MCR24K^IBCEU3(IB399)_"^12"
"RTN","IBCEF74",51,0)
 . I $G(IBINSTP)="O","34"[$G(IBPRTYP),"ST"[$G(IBCURR),$G(IBFRMTYP)=2,$$MCRONBIL^IBEFUNC(IB399) S IB355OV=$$MCR24K^IBCEU3(IB399)_"^12" ;Calculate MEDICARE (WNR) specific provider qualifier and ID for CMS-1500 secondary claims
"RTN","IBCEF74",52,0)
 . I $P(IB355OV,U,2) D
"RTN","IBCEF74",53,0)
 .. I $$CHCKSEC^IBCEF73(IBFRMTYP,IBPRTYP,$G(IBINSTP),$P($G(^IBE(355.97,+$P(IB355OV,U,2),0)),U,3)) D
"RTN","IBCEF74",54,0)
 ... S IBEXC=$P(IB355OV,U,2),IBN=IBN+1,IBRES(IBSORT,IBPRTYP,IBN)="OVERRIDE^"_IBINSCO_U_$P($G(^IBE(355.97,+IBEXC,0)),U,3)_U_$P(IB355OV,U)_"^^^^^"_+IBEXC
"RTN","IBCEF74",55,0)
 . I IB35591'="",IBEXC'=$P(IB35591,U,3) S:$$CHCKSEC^IBCEF73(IBFRMTYP,IBPRTYP,$G(IBINSTP),$P(IB35591,"^")) IBN=IBN+1,IBRES(IBSORT,IBPRTYP,IBN)="DEFAULT^"_IBINSCO_"^"_IB35591_"^^",$P(IBRES(IBSORT,IBPRTYP,IBN),U,9)=$P(IB35591,U,3)
"RTN","IBCEF74",56,0)
 . D SORT(IBSORT,IBPRTYP,IB399,.IBRETARR,.IBRES,IBN,IBEXC,IBPRNUM,IBLIMIT)
"RTN","IBCEF74",57,0)
 . S IBRES(IBSORT,IBPRTYP)=IBPROV
"RTN","IBCEF74",58,0)
 S IBRES(IBSORT)=$S(IBPRNUM=3:"T",IBPRNUM=2:"S",1:"P")
"RTN","IBCEF74",59,0)
 Q
"RTN","IBCEF74",60,0)
 ;
"RTN","IBCEF74",61,0)
SECIDCK(IBIFN,IBSEQ,IBTYP,IBIFN1) ; Function returns 1 if ID type ptr in
"RTN","IBCEF74",62,0)
 ;  IBTYP is valid X12 code for the claim/prov function (IBPROVF)
"RTN","IBCEF74",63,0)
 ;  as a sec id
"RTN","IBCEF74",64,0)
 ; IBSEQ = COB seq being checked
"RTN","IBCEF74",65,0)
 ; IBIFN1 = entry # in PRV multiple being checked
"RTN","IBCEF74",66,0)
 ;  Called from input transform of fields .12-.14, subfile 399.0222
"RTN","IBCEF74",67,0)
 N IBOK,IBFRM,IBCOBN,IBX12,IBPROVF
"RTN","IBCEF74",68,0)
 S IBPROVF=+$G(^DGCR(399,IBIFN,"PRV",IBIFN1,0))
"RTN","IBCEF74",69,0)
 S IBFRM=$$FT^IBCEF(IBIFN),IBFRM=$S(IBFRM=3:1,1:2) ; Form type
"RTN","IBCEF74",70,0)
 S IBCOBN=$$COBN^IBCEF(IBIFN) S:'IBCOBN IBCOBN=1 ; Current COB seq
"RTN","IBCEF74",71,0)
 S IBX12=$P($G(^IBE(355.97,+IBTYP,0)),U,3) ; X12 code for prov id typ
"RTN","IBCEF74",72,0)
 Q $$CHSEC^IBCEF73(IBFRM,IBPROVF,$S(IBSEQ=IBCOBN:"C",1:"O"),IBX12)
"RTN","IBCEF74",73,0)
 ;
"RTN","IBCEF74",74,0)
DEFID(IBIFN,IBPRV) ;
"RTN","IBCEF74",75,0)
 ; IBIFN = ien of bill
"RTN","IBCEF74",76,0)
 ; IBPRV = ien of entry subfile 399.0222
"RTN","IBCEF74",77,0)
 ;  Function returns default ids: prim id def^sec id def^tert id def
"RTN","IBCEF74",78,0)
 ;  SSN cannot be the default ID
"RTN","IBCEF74",79,0)
 N Z,Z1,ID,IBZ,IBINS,IBINS4,IBUB
"RTN","IBCEF74",80,0)
 S IBZ=""
"RTN","IBCEF74",81,0)
 S IBUB=($$FT^IBCEF(IBIFN)=3)
"RTN","IBCEF74",82,0)
 D F^IBCEF("N-ALL ATT/REND PROV SSN/EI","IBZ","",IBIFN)
"RTN","IBCEF74",83,0)
 S Z=$G(^DGCR(399,IBIFN,"PRV",IBPRV,0)),ID=$P(Z,U,5,7)
"RTN","IBCEF74",84,0)
 F Z1=1:1:3 I $P(ID,U,Z1)="" D
"RTN","IBCEF74",85,0)
 . Q:'$G(^DGCR(399,IBIFN,"I"_Z1))  S IBINS=+^("I"_Z1)
"RTN","IBCEF74",86,0)
 . S $P(ID,U,Z1)=$$GETID^IBCEP2(IBIFN,2,$P(Z,U,2),Z1)
"RTN","IBCEF74",87,0)
 . ; Set default if null
"RTN","IBCEF74",88,0)
 . I $P(ID,U,Z1)="" S $P(ID,U,Z1)="VAD000"
"RTN","IBCEF74",89,0)
 Q ID
"RTN","IBCEF74",90,0)
 ;
"RTN","IBCEF74",91,0)
DISPID(IBXIEN) ; Display list of all prov and fac ids that will
"RTN","IBCEF74",92,0)
 ; extract for this bill if transmitted electronically
"RTN","IBCEF74",93,0)
 N IBID,IBID1,IBZ,IBCT,IBFRM,IBCOBN,IBATT,IBQUIT,IBTYP,DIR,IBIFN,X,Y,Z,Z0,Z1
"RTN","IBCEF74",94,0)
 N IBNPI,IBNONPI
"RTN","IBCEF74",95,0)
 S IBIFN=IBXIEN
"RTN","IBCEF74",96,0)
 S IBFRM=$$FT^IBCEF(IBIFN),IBCOBN=$$COBN^IBCEF(IBIFN),IBATT=$S(IBFRM=2:3,1:4)
"RTN","IBCEF74",97,0)
 W @IOF
"RTN","IBCEF74",98,0)
 W !,"If this bill is transmitted electronically, the following IDs will be sent:"
"RTN","IBCEF74",99,0)
 ; Returns all prov sec ids to be transmitted in indicated segments
"RTN","IBCEF74",100,0)
 S Z=+$G(^DGCR(399,IBIFN,"I1")) I Z W !,"  Primary Ins Co: ",$$EXTERNAL^DILFD(399,101,"",Z) I IBCOBN=1 W ?54,"<<<Current Ins"
"RTN","IBCEF74",101,0)
 S Z=+$G(^DGCR(399,IBIFN,"I2")) I Z W !,"Secondary Ins Co: ",$$EXTERNAL^DILFD(399,101,"",Z) I IBCOBN=2 W ?54,"<<<Current Ins"
"RTN","IBCEF74",102,0)
 S Z=+$G(^DGCR(399,IBIFN,"I3")) I Z W !," Tertiary Ins Co: ",$$EXTERNAL^DILFD(399,101,"",Z) I IBCOBN=3 W ?54,"<<<Current Ins"
"RTN","IBCEF74",103,0)
 W !!,"Provider IDs: (VistA Records OP1,OP2,OP4,OP8,OP9,OPR2,OPR3,OPR4,OPR5,OPR8):"
"RTN","IBCEF74",104,0)
 F Z=1:1:3 I $G(^DGCR(399,IBIFN,"I"_Z)) D PROVINF(IBIFN,Z,.IBID,"",$S(IBCOBN=Z:"C",1:"O"))
"RTN","IBCEF74",105,0)
 S Z=0 F  S Z=$O(IBID(Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBID(Z,Z0)) Q:'Z0  S IBID1(Z0,Z)="",Z1=0 F  S Z1=$O(IBID(Z,Z0,Z1)) Q:'Z1  I $P(IBID(Z,Z0,Z1),U,9) S IBID1(Z0,Z,Z1)=IBID(Z,Z0,Z1)
"RTN","IBCEF74",106,0)
 ; PRXM/KJH - Add NPI to display for patch 343.
"RTN","IBCEF74",107,0)
 S IBNPI=$$PROVNPI^IBCEF73A(IBIFN,.IBNONPI)
"RTN","IBCEF74",108,0)
 S Z=+$O(^DGCR(399,IBIFN,"PRV","B",IBATT,0))
"RTN","IBCEF74",109,0)
 I Z S Z=$P($G(^DGCR(399,IBIFN,"PRV",Z,0)),U,2)
"RTN","IBCEF74",110,0)
 W !,?5,"ATTENDING/RENDERING: ",$$EXTERNAL^DILFD(399.0222,.02,"",Z)
"RTN","IBCEF74",111,0)
 D F^IBCEF("N-ALL ATT/REND PROV SSN/EI","IBZ","",IBIFN)
"RTN","IBCEF74",112,0)
 W !,?8,"NPI: ",?40,$S($P(IBNPI,U,IBATT)'="":$P(IBNPI,U,IBATT),1:"***MISSING***")
"RTN","IBCEF74",113,0)
 W !,?8,"SSN: ",?40,$S($P(IBZ,U,IBATT)'="":$P(IBZ,U,IBATT),1:"***MISSING***")
"RTN","IBCEF74",114,0)
 I $O(IBID1(IBATT,0)) W !,?8,"Secondary IDs"
"RTN","IBCEF74",115,0)
 S IBQUIT=0
"RTN","IBCEF74",116,0)
 ;
"RTN","IBCEF74",117,0)
 ; Attending/Rendering (4/3) secondary IDs
"RTN","IBCEF74",118,0)
 S Z0=0 F  S Z0=$O(IBID1(IBATT,Z0)) Q:'Z0!IBQUIT  K IBTYP S Z1=0 F  S Z1=$O(IBID1(IBATT,Z0,Z1)) Q:'Z1  D  Q:IBQUIT
"RTN","IBCEF74",119,0)
 . Q:$D(IBTYP(+$P(IBID1(IBATT,Z0,Z1),U,9)))  ;1st of each type transmits
"RTN","IBCEF74",120,0)
 . I ($Y+5)>IOSL S IBQUIT=$$NOMORE() Q:IBQUIT
"RTN","IBCEF74",121,0)
 . S IBTYP(+$P(IBID1(IBATT,Z0,Z1),U,9))=""
"RTN","IBCEF74",122,0)
 . W !,?8,"(",$E("PST",Z0),") ",$$EXTERNAL^DILFD(36,4.01,"",$P(IBID1(IBATT,Z0,Z1),U,9)),?40,$P(IBID1(IBATT,Z0,Z1),U,4)
"RTN","IBCEF74",123,0)
 . Q
"RTN","IBCEF74",124,0)
 I IBQUIT G DISPIDX
"RTN","IBCEF74",125,0)
 ;
"RTN","IBCEF74",126,0)
 ; Referring(1), Operating(2), Supervising(5), Other(9) secondary IDs
"RTN","IBCEF74",127,0)
 ; PRXM/KJH - Patch 343. Modified first loop so it will always display provider and NPI and conditionally display other data.
"RTN","IBCEF74",128,0)
 ; S Z=0 F  S Z=$O(IBID1(Z)) Q:'Z  I Z<3!(Z>4) D  Q:IBQUIT
"RTN","IBCEF74",129,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"PRV","B",Z)) Q:'Z  I Z<3!(Z>4) D  Q:IBQUIT
"RTN","IBCEF74",130,0)
 . N Q
"RTN","IBCEF74",131,0)
 . S Q=+$O(^DGCR(399,IBIFN,"PRV","B",Z,0))
"RTN","IBCEF74",132,0)
 . W !!,?5,$$EXTERNAL^DILFD(399.0222,.01,"",Z),": "_$$EXTERNAL^DILFD(399.0222,.02,"",$P($G(^DGCR(399,IBIFN,"PRV",Q,0)),U,2))
"RTN","IBCEF74",133,0)
 . W !,?8,"NPI: ",?40,$S($P(IBNPI,U,Z)'="":$P(IBNPI,U,Z),1:"***MISSING***")
"RTN","IBCEF74",134,0)
 . S Z0=0 F  S Z0=$O(IBID1(Z,Z0)) Q:'Z0!IBQUIT  K IBTYP S Z1=0 F  S Z1=$O(IBID1(Z,Z0,Z1)) Q:'Z1!IBQUIT  D
"RTN","IBCEF74",135,0)
 .. Q:$D(IBTYP(+$P(IBID1(Z,Z0,Z1),U,9)))  ; 1st of each type transmits
"RTN","IBCEF74",136,0)
 .. I ($Y+5)>IOSL S IBQUIT=$$NOMORE() Q:IBQUIT
"RTN","IBCEF74",137,0)
 .. S IBTYP(+$P(IBID1(Z,Z0,Z1),U,9))=""
"RTN","IBCEF74",138,0)
 .. W !,?8,"(",$E("PST",Z0),") ",$$EXTERNAL^DILFD(36,4.01,"",$P(IBID1(Z,Z0,Z1),U,9)),?40,$P(IBID1(Z,Z0,Z1),U,4)
"RTN","IBCEF74",139,0)
 .. Q
"RTN","IBCEF74",140,0)
 . Q
"RTN","IBCEF74",141,0)
 I IBQUIT G DISPIDX
"RTN","IBCEF74",142,0)
 ;
"RTN","IBCEF74",143,0)
 ; IB*2*320 - display additional IDs for ?ID
"RTN","IBCEF74",144,0)
 D EN^IBCEF74A(IBIFN,.IBQUIT)
"RTN","IBCEF74",145,0)
 ;
"RTN","IBCEF74",146,0)
DISPIDX ;
"RTN","IBCEF74",147,0)
 I '$G(IBQUIT) S DIR(0)="EA",DIR("A")="Press RETURN to continue " W ! D ^DIR K DIR
"RTN","IBCEF74",148,0)
 Q
"RTN","IBCEF74",149,0)
 ;
"RTN","IBCEF74",150,0)
NOMORE() ;
"RTN","IBCEF74",151,0)
 S DIR(0)="EA",DIR("A")="Press RETURN for more IDs or '^' to exit: " W ! D ^DIR
"RTN","IBCEF74",152,0)
 W @IOF
"RTN","IBCEF74",153,0)
 Q (Y'=1)
"RTN","IBCEF74",154,0)
 ;
"RTN","IBCEF74",155,0)
DEFSEC(IBIFN,IBARR) ; Returns array in IBARR for default prov sec ids for ien IBIFN
"RTN","IBCEF74",156,0)
 ; IBARR if passed by ref is returned   IBARR(prov function,COBN)=def id
"RTN","IBCEF74",157,0)
 N IBCAR,IBCOBN,IBPC,IBINS,IBARRX,Q,Z,Z0,ZINS,X
"RTN","IBCEF74",158,0)
 K IBARR
"RTN","IBCEF74",159,0)
 S ZINS="",IBCOBN=$$COBN^IBCEF(IBIFN),IBPC=$S($$FT^IBCEF(IBIFN)=3:2,1:1)
"RTN","IBCEF74",160,0)
 S IBCAR=$$INPAT^IBCEF(IBIFN,1),IBCAR=$S('IBCAR:2,1:1)
"RTN","IBCEF74",161,0)
 F Z=1:1:3 S ZINS=ZINS_+$G(^DGCR(399,IBIFN,"I"_Z))_U
"RTN","IBCEF74",162,0)
 F Z=1:1:3 I $P(ZINS,U,Z),'$P($G(^DIC(36,+$P(ZINS,U,Z),4)),U,IBPC) S $P(ZINS,U,Z)=""
"RTN","IBCEF74",163,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"PRV",Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","IBCEF74",164,0)
 . F Q=1:1:3 D
"RTN","IBCEF74",165,0)
 .. I $P(Z0,U,Q+4)'="" S IBARR(+Z0,Q)=$P(Z0,U,Q+4) Q  ; Override
"RTN","IBCEF74",166,0)
 .. S IBINS=$P(ZINS,U,Q)
"RTN","IBCEF74",167,0)
 .. Q:'IBINS
"RTN","IBCEF74",168,0)
 .. S X=$$IDFIND^IBCEP2(IBIFN,"",$P(Z0,U,2),Q,1)
"RTN","IBCEF74",169,0)
 .. I X'="" S IBARR(+Z0,Q)=X
"RTN","IBCEF74",170,0)
 Q
"RTN","IBCEF74",171,0)
 ;
"RTN","IBCEF74A")
0^17^B19549924^B17345464
"RTN","IBCEF74A",1,0)
IBCEF74A ;ALB/ESG - Provider ID maint ?ID continuation ;7 Mar 2006
"RTN","IBCEF74A",2,0)
 ;;2.0;INTEGRATED BILLING;**320,343**;21-MAR-94;Build 16
"RTN","IBCEF74A",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEF74A",4,0)
 ;
"RTN","IBCEF74A",5,0)
 Q
"RTN","IBCEF74A",6,0)
 ;
"RTN","IBCEF74A",7,0)
EN(IBIFN,IBQUIT) ; Display billing provider and service provider IDs as part
"RTN","IBCEF74A",8,0)
 ; of the ?ID display/help in the billing screens.
"RTN","IBCEF74A",9,0)
 ; Called from DISPID^IBCEF74.
"RTN","IBCEF74A",10,0)
 NEW IBID,IBX,Z,ZI,ZN,SEQ,PSIN,DATA,QUALNM,IDNUM,FACNAME,IBZ,IBXIEN,IBSSFI,ORGNPI
"RTN","IBCEF74A",11,0)
 ;
"RTN","IBCEF74A",12,0)
 D ALLIDS^IBCEF75(IBIFN,.IBID)
"RTN","IBCEF74A",13,0)
 ;
"RTN","IBCEF74A",14,0)
 ; Re-sort array by insurance sequence (P/S/T)
"RTN","IBCEF74A",15,0)
 K IBX
"RTN","IBCEF74A",16,0)
 F Z="BILLING PRV","LAB/FAC" F ZI="C","O" S ZN=0 F  S ZN=$O(IBID(Z,IBIFN,ZI,ZN)) Q:'ZN  D
"RTN","IBCEF74A",17,0)
 . S SEQ=$P($G(IBID(Z,IBIFN,ZI,ZN)),U,1) Q:SEQ=""
"RTN","IBCEF74A",18,0)
 . S IBX(Z,SEQ,ZI,ZN)=""
"RTN","IBCEF74A",19,0)
 . Q
"RTN","IBCEF74A",20,0)
 ;
"RTN","IBCEF74A",21,0)
 ; Display billing provider secondary ID's (current ins only)
"RTN","IBCEF74A",22,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",23,0)
 S Z="BILLING PRV"
"RTN","IBCEF74A",24,0)
 ; PRXM/KJH - Removed "I $D(IBX(Z))" from next line. Caused header to not display even though there would be a "None Found' message.
"RTN","IBCEF74A",25,0)
 W !!,"Billing Provider Secondary IDs (VistA Record CI1A):"
"RTN","IBCEF74A",26,0)
 D SECID(Z,.IBQUIT)
"RTN","IBCEF74A",27,0)
 I IBQUIT G EX
"RTN","IBCEF74A",28,0)
 ;
"RTN","IBCEF74A",29,0)
 ; Now display the lab or facility primary and secondary IDs
"RTN","IBCEF74A",30,0)
 ; This is the service facility information
"RTN","IBCEF74A",31,0)
 ;
"RTN","IBCEF74A",32,0)
 ; Facility name, same code as found in SUB-2
"RTN","IBCEF74A",33,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",34,0)
 W !!,"Service Facility Name and ID Information"
"RTN","IBCEF74A",35,0)
 S IBXIEN=IBIFN
"RTN","IBCEF74A",36,0)
 D F^IBCEF("N-RENDERING INSTITUTION","IBZ",,IBIFN)
"RTN","IBCEF74A",37,0)
 S FACNAME=$$GETFAC^IBCEP8(+IBZ,+$P(IBZ,U,2),0,"SUB")
"RTN","IBCEF74A",38,0)
 S Z="LAB/FAC"
"RTN","IBCEF74A",39,0)
 ;
"RTN","IBCEF74A",40,0)
 ; determine if flag to suppress lab/fac data is set
"RTN","IBCEF74A",41,0)
 D VAMCFD^IBCEF75(IBIFN,.IBSSFI)
"RTN","IBCEF74A",42,0)
 I $D(IBSSFI),'$G(IBSSFI("C",1)) D  I IBQUIT G EX
"RTN","IBCEF74A",43,0)
 . I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() Q:IBQUIT
"RTN","IBCEF74A",44,0)
 . W !!,"Note:  Service Facility Data not sent for Current Insurance"
"RTN","IBCEF74A",45,0)
 . W !,"       'Send VA Lab/Facility IDs or Facility Data for VAMC?' is set to NO",!
"RTN","IBCEF74A",46,0)
 . Q
"RTN","IBCEF74A",47,0)
 ;
"RTN","IBCEF74A",48,0)
 ; facility name
"RTN","IBCEF74A",49,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",50,0)
 I FACNAME="" S FACNAME="n/a"
"RTN","IBCEF74A",51,0)
 W !,"Facility:  ",FACNAME
"RTN","IBCEF74A",52,0)
 ;
"RTN","IBCEF74A",53,0)
 ; PRXM/KJH - Add NPI to display for patch 343.
"RTN","IBCEF74A",54,0)
 S ORGNPI=$$ORGNPI^IBCEF73A(IBIFN)
"RTN","IBCEF74A",55,0)
 S DATA=$S($P($G(IBZ),U,2)=1:$P(ORGNPI,U,2),$P($G(IBZ),U,2)=0:$P(ORGNPI,U,1),1:$P(ORGNPI,U,3))
"RTN","IBCEF74A",56,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",57,0)
 W !?5,"Lab or Facility NPI:"
"RTN","IBCEF74A",58,0)
 W !?12,$S(DATA'="":DATA,1:"***MISSING***")
"RTN","IBCEF74A",59,0)
 ; primary ID
"RTN","IBCEF74A",60,0)
 S DATA=$G(IBID(Z,IBIFN,"C",1,0))   ; lab/facility current ins primary
"RTN","IBCEF74A",61,0)
 S QUALNM=$$QUAL($P(DATA,U,1),$$FT^IBCEF(IBIFN))
"RTN","IBCEF74A",62,0)
 S IDNUM=$P(DATA,U,2)
"RTN","IBCEF74A",63,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",64,0)
 W !?5,"Lab or Facility Primary ID (VistA Record SUB):"
"RTN","IBCEF74A",65,0)
 I DATA'="" W !?8,"(",$P($G(IBID(Z,IBIFN,"C",1)),U,1),") ",QUALNM,?40,IDNUM
"RTN","IBCEF74A",66,0)
 I DATA="" W !?8,"(-) None Found"
"RTN","IBCEF74A",67,0)
 ;
"RTN","IBCEF74A",68,0)
 ; secondary IDs
"RTN","IBCEF74A",69,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",70,0)
 W !?5,"Lab or Facility Secondary IDs (VistA Records SUB1,SUB2,OP3,OP6,OP7):"
"RTN","IBCEF74A",71,0)
 D SECID(Z,.IBQUIT)
"RTN","IBCEF74A",72,0)
 I IBQUIT G EX
"RTN","IBCEF74A",73,0)
 ;
"RTN","IBCEF74A",74,0)
EX ;
"RTN","IBCEF74A",75,0)
 Q
"RTN","IBCEF74A",76,0)
 ;
"RTN","IBCEF74A",77,0)
QUAL(Z,FORMTYPE) ; turn the qualifier code into a qualifier description
"RTN","IBCEF74A",78,0)
 NEW QUAL,IEN
"RTN","IBCEF74A",79,0)
 S QUAL=""
"RTN","IBCEF74A",80,0)
 I $G(Z)="" G QUALX
"RTN","IBCEF74A",81,0)
 I Z="1C" D  G QUALX   ; qualifier for Medicare Part ?
"RTN","IBCEF74A",82,0)
 . I $G(FORMTYPE)=2 S QUAL="MEDICARE PART B"   ; hcfa
"RTN","IBCEF74A",83,0)
 . I $G(FORMTYPE)=3 S QUAL="MEDICARE PART A"   ; ub
"RTN","IBCEF74A",84,0)
 . Q
"RTN","IBCEF74A",85,0)
 I Z=34 S Z="SY"       ; qualifier for SSN
"RTN","IBCEF74A",86,0)
 S IEN=+$O(^IBE(355.97,"C",Z,"")) I 'IEN G QUALX
"RTN","IBCEF74A",87,0)
 S QUAL=$P($G(^IBE(355.97,IEN,0)),U,1)
"RTN","IBCEF74A",88,0)
QUALX ;
"RTN","IBCEF74A",89,0)
 Q QUAL
"RTN","IBCEF74A",90,0)
 ;
"RTN","IBCEF74A",91,0)
SECID(Z,IBQUIT) ; Display secondary ID and qualifier information
"RTN","IBCEF74A",92,0)
 ; Z is the type of IDs passed in; either BILLING PRV or LAB/FAC
"RTN","IBCEF74A",93,0)
 ; IBQUIT is returned if passed by reference
"RTN","IBCEF74A",94,0)
 NEW SEQ,ZI,ZN,PSIN,DATA,QUALNM,IDNUM,NODATA
"RTN","IBCEF74A",95,0)
 S IBQUIT=0,NODATA=1
"RTN","IBCEF74A",96,0)
 F SEQ="P","S","T" D  Q:IBQUIT
"RTN","IBCEF74A",97,0)
 . ;
"RTN","IBCEF74A",98,0)
 . ; current ins only for billing provider secondary IDs
"RTN","IBCEF74A",99,0)
 . I Z="BILLING PRV",SEQ'=$$COB^IBCEF(IBIFN) Q
"RTN","IBCEF74A",100,0)
 . S ZI=""
"RTN","IBCEF74A",101,0)
 . F  S ZI=$O(IBX(Z,SEQ,ZI)) Q:ZI=""  D  Q:IBQUIT
"RTN","IBCEF74A",102,0)
 .. S ZN=0
"RTN","IBCEF74A",103,0)
 .. F  S ZN=$O(IBX(Z,SEQ,ZI,ZN)) Q:'ZN  D  Q:IBQUIT
"RTN","IBCEF74A",104,0)
 ... S PSIN=0   ; start at 0 to skip primary IDs
"RTN","IBCEF74A",105,0)
 ... F  S PSIN=$O(IBID(Z,IBIFN,ZI,ZN,PSIN)) Q:PSIN=""  D  Q:IBQUIT
"RTN","IBCEF74A",106,0)
 .... S DATA=$G(IBID(Z,IBIFN,ZI,ZN,PSIN))
"RTN","IBCEF74A",107,0)
 .... S QUALNM=$$QUAL($P(DATA,U,1),$$FT^IBCEF(IBIFN))
"RTN","IBCEF74A",108,0)
 .... S IDNUM=$P(DATA,U,2)
"RTN","IBCEF74A",109,0)
 .... I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() Q:IBQUIT
"RTN","IBCEF74A",110,0)
 .... S NODATA=0
"RTN","IBCEF74A",111,0)
 .... W !?8,"(",SEQ,") ",QUALNM,?40,IDNUM
"RTN","IBCEF74A",112,0)
 .... I Z="LAB/FAC",$D(^DGCR(399,IBIFN,"I2")),SEQ=$$COB^IBCEF(IBIFN) W ?54,"<<<Current Ins"
"RTN","IBCEF74A",113,0)
 .... I Z="BILLING PRV",PSIN=1 W ?54,"<<<System Generated ID"
"RTN","IBCEF74A",114,0)
 .... Q
"RTN","IBCEF74A",115,0)
 ... Q
"RTN","IBCEF74A",116,0)
 .. Q
"RTN","IBCEF74A",117,0)
 . Q
"RTN","IBCEF74A",118,0)
 I NODATA,'IBQUIT W !?8,"(-) None Found"
"RTN","IBCEF74A",119,0)
SECIDX ;
"RTN","IBCEF74A",120,0)
 Q
"RTN","IBCEF74A",121,0)
 ;
"RTN","IBCEP8")
0^19^B72198572^B54137838
"RTN","IBCEP8",1,0)
IBCEP8 ;ALB/TMP - Functions for NON-VA PROVIDER ;11-07-00
"RTN","IBCEP8",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,232,288,320,343**;21-MAR-94;Build 16
"RTN","IBCEP8",3,0)
 ;
"RTN","IBCEP8",4,0)
EN ; -- main entry point
"RTN","IBCEP8",5,0)
 N IBNPRV
"RTN","IBCEP8",6,0)
 K IBFASTXT
"RTN","IBCEP8",7,0)
 D FULL^VALM1
"RTN","IBCEP8",8,0)
 D EN^VALM("IBCE PRVNVA MAINT")
"RTN","IBCEP8",9,0)
 Q
"RTN","IBCEP8",10,0)
 ;
"RTN","IBCEP8",11,0)
HDR ; -- header code
"RTN","IBCEP8",12,0)
 K VALMHDR
"RTN","IBCEP8",13,0)
 Q
"RTN","IBCEP8",14,0)
 ;
"RTN","IBCEP8",15,0)
INIT ; Initialization
"RTN","IBCEP8",16,0)
 N DIC,DA,X,Y,DLAYGO,IBIF,DIR,DTOUT,DUOUT
"RTN","IBCEP8",17,0)
 K ^TMP("IBCE_PRVNVA_MAINT",$J)
"RTN","IBCEP8",18,0)
 S DIR("A")="(I)NDIVIDUAL OR (F)ACILITY?: ",DIR(0)="SA^I:INDIVIDUAL;F:FACILITY" D ^DIR K DIR
"RTN","IBCEP8",19,0)
 I $D(DUOUT)!$D(DTOUT) S VALMQUIT=1 G INITQ
"RTN","IBCEP8",20,0)
 S IBIF=Y
"RTN","IBCEP8",21,0)
 ;
"RTN","IBCEP8",22,0)
 I IBIF="F" D
"RTN","IBCEP8",23,0)
 . S VALM("TITLE")="Non-VA Lab or Facility Info"
"RTN","IBCEP8",24,0)
 . K VALM("PROTOCOL")
"RTN","IBCEP8",25,0)
 . S Y=$$FIND1^DIC(101,,,"IBCE PRVNVA NONIND MAINT")
"RTN","IBCEP8",26,0)
 . I Y S VALM("PROTOCOL")=+Y_";ORD(101,"
"RTN","IBCEP8",27,0)
 ;
"RTN","IBCEP8",28,0)
 S DIC="^IBA(355.93,",DIC("DR")=".02////"_$S(IBIF'="F":2,1:1)
"RTN","IBCEP8",29,0)
 S DIC("S")="I $P(^(0),U,2)="_$S(IBIF'="F":2,1:1)
"RTN","IBCEP8",30,0)
 S DLAYGO=355.93,DIC(0)="AELMQ",DIC("A")="Select a NON"_$S(IBIF="I":"-",1:"/OTHER ")_"VA PROVIDER: "
"RTN","IBCEP8",31,0)
 D ^DIC K DIC,DLAYGO
"RTN","IBCEP8",32,0)
 I Y'>0 S VALMQUIT=1 G INITQ
"RTN","IBCEP8",33,0)
 S IBNPRV=+Y
"RTN","IBCEP8",34,0)
 D BLD
"RTN","IBCEP8",35,0)
INITQ Q
"RTN","IBCEP8",36,0)
 ;
"RTN","IBCEP8",37,0)
BLD ; Build/Rebuild display
"RTN","IBCEP8",38,0)
 N IBLCT,IBCT,IBLST,IBPRI,IBIEN,Z,Z1,Z2
"RTN","IBCEP8",39,0)
 K @VALMAR
"RTN","IBCEP8",40,0)
 S (IBLCT,IBCT)=0,Z=$G(^IBA(355.93,IBNPRV,0))
"RTN","IBCEP8",41,0)
 S IBCT=IBCT+1
"RTN","IBCEP8",42,0)
 S Z1=$J("Name: ",15)_$P(Z,U) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",43,0)
 I $P(Z,U,2)=2 D
"RTN","IBCEP8",44,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",45,0)
 . S Z1=$J("Type: ",15)_$S($P(Z,U,2)=2:"INDIVIDUAL PROVIDER",1:"OUTSIDE OR OTHER VA FACILITY") D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",46,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",47,0)
 . S Z1=$J("Credentials: ",15)_$P(Z,U,3) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",48,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",49,0)
 . S Z1=$J("Specialty: ",15)_$P(Z,U,4) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",50,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",51,0)
 . S Z1=$J("NPI: ",15)_$$NPIGET^IBCEP81(IBNPRV) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",52,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",53,0)
 . S IBPRI=$$TAXGET^IBCEP81(IBNPRV,.IBLST)
"RTN","IBCEP8",54,0)
 . S Z1=$J("Taxonomy Code: ",15)_$P(IBPRI,U)
"RTN","IBCEP8",55,0)
 . I $D(IBLST) S Z1=Z1_" ("_$S($P(IBLST(IBLST),U,3)=1:"Primary",1:"Secondary")_")"
"RTN","IBCEP8",56,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",57,0)
 . S IBIEN=""
"RTN","IBCEP8",58,0)
 . F  S IBIEN=$O(IBLST(IBIEN)) Q:IBIEN=""  D
"RTN","IBCEP8",59,0)
 .. I IBIEN=IBLST Q
"RTN","IBCEP8",60,0)
 .. S IBCT=IBCT+1
"RTN","IBCEP8",61,0)
 .. S Z1=$J("",15)_$P(IBLST(IBIEN),U)_" ("_$S($P(IBLST(IBIEN),U,3)=1:"Primary",1:"Secondary")_")"
"RTN","IBCEP8",62,0)
 .. D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",63,0)
 E  D
"RTN","IBCEP8",64,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",65,0)
 . S Z1=$J("Address: ",15)_$P(Z,U,5) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",66,0)
 . I $P(Z,U,10) D
"RTN","IBCEP8",67,0)
 .. S IBCT=IBCT+1
"RTN","IBCEP8",68,0)
 .. S Z1=$J("",15)_$P(Z,U,10)
"RTN","IBCEP8",69,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",70,0)
 . S Z1=$J("",15)_$P(Z,U,6)_$S($P(Z,U,6)'="":", ",1:"")_$S($P(Z,U,7):$$EXTERNAL^DILFD(355.93,.07,"",$P(Z,U,7))_"  ",1:"")_$P(Z,U,8)
"RTN","IBCEP8",71,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",72,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",73,0)
 . S Z1=" " D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",74,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",75,0)
 . S Z1=$J("Type of Facility: ",30)_$$EXTERNAL^DILFD(355.93,.11,,$P(Z,U,11))
"RTN","IBCEP8",76,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",77,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",78,0)
 . S Z1=$J("Primary ID: ",30)_$P(Z,U,9)
"RTN","IBCEP8",79,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",80,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",81,0)
 . S Z1=$J("ID Qualifier: ",30)_$$GET1^DIQ(355.97,$P(Z,U,13),.03) I $P(Z,U,13)]"" S Z1=Z1_" - "_$$GET1^DIQ(355.97,$P(Z,U,13),.01)
"RTN","IBCEP8",82,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",83,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",84,0)
 . S Z1=$J("Mammography Certification #: ",30)_$P(Z,U,15)
"RTN","IBCEP8",85,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",86,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",87,0)
 . S Z1=$J("NPI: ",30)_$$NPIGET^IBCEP81(IBNPRV) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",88,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",89,0)
 . S IBPRI=$$TAXGET^IBCEP81(IBNPRV,.IBLST)
"RTN","IBCEP8",90,0)
 . S Z1=$J("Taxonomy Code: ",30)_$P(IBPRI,U)
"RTN","IBCEP8",91,0)
 . I $D(IBLST) S Z1=Z1_" ("_$S($P(IBLST(IBLST),U,3)=1:"Primary",1:"Secondary")_")"
"RTN","IBCEP8",92,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",93,0)
 . S IBIEN=""
"RTN","IBCEP8",94,0)
 . F  S IBIEN=$O(IBLST(IBIEN)) Q:IBIEN=""  D
"RTN","IBCEP8",95,0)
 .. I IBIEN=IBLST Q
"RTN","IBCEP8",96,0)
 .. S IBCT=IBCT+1
"RTN","IBCEP8",97,0)
 .. S Z1=$J("",30)_$P(IBLST(IBIEN),U)_" ("_$S($P(IBLST(IBIEN),U,3)=1:"Primary",1:"Secondary")_")"
"RTN","IBCEP8",98,0)
 .. D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",99,0)
 K VALMBG,VALMCNT
"RTN","IBCEP8",100,0)
 S VALMBG=1,VALMCNT=IBLCT
"RTN","IBCEP8",101,0)
 Q
"RTN","IBCEP8",102,0)
 ;
"RTN","IBCEP8",103,0)
SET1(IBLCT,TEXT,IBCT) ;
"RTN","IBCEP8",104,0)
 S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,TEXT,$G(IBCT))
"RTN","IBCEP8",105,0)
 Q
"RTN","IBCEP8",106,0)
EXPND ;
"RTN","IBCEP8",107,0)
 Q
"RTN","IBCEP8",108,0)
 ;
"RTN","IBCEP8",109,0)
HELP ;
"RTN","IBCEP8",110,0)
 Q
"RTN","IBCEP8",111,0)
 ;
"RTN","IBCEP8",112,0)
EXIT ;
"RTN","IBCEP8",113,0)
 K ^TMP("IBCE_PRVNVA_MAINT",$J)
"RTN","IBCEP8",114,0)
 D CLEAN^VALM10
"RTN","IBCEP8",115,0)
 K IBFASTXT
"RTN","IBCEP8",116,0)
 Q
"RTN","IBCEP8",117,0)
 ;
"RTN","IBCEP8",118,0)
EDIT1(IBNPRV,IBNOLM) ; Edit non-VA provider/facility demographics
"RTN","IBCEP8",119,0)
 ; IBNPRV = ien of entry in file 355.93
"RTN","IBCEP8",120,0)
 ; IBNOLM = 1 if not called from list manager
"RTN","IBCEP8",121,0)
 ;
"RTN","IBCEP8",122,0)
 N DA,X,Y,DIE,DR,IBP
"RTN","IBCEP8",123,0)
 I '$G(IBNOLM) D FULL^VALM1
"RTN","IBCEP8",124,0)
 I IBNPRV D
"RTN","IBCEP8",125,0)
 . I '$G(IBNOLM) D CLEAR^VALM1
"RTN","IBCEP8",126,0)
 . S DIE="^IBA(355.93,",DA=IBNPRV,IBP=($P($G(^IBA(355.93,IBNPRV,0)),U,2)=2)
"RTN","IBCEP8",127,0)
 . ; PRXM/KJH - Added NPI and Taxonomy to the list of fields to be edited. Put a "NO^" around the Taxonomy multiple (#42) since some of the sub-field entries are 'required'.
"RTN","IBCEP8",128,0)
 . S DR=".01;"_$S(IBP:".03;.04",1:".05;.1;.06;.07;.08;.13///24;W !,""ID Qualifier: 24 - EMPLOYER'S IDENTIFICATION #"";.09Lab or Facility Primary ID;.11;.15")_";D EN^IBCEP82;S DIE(""NO^"")="""";42;K DIE(""NO^"")"
"RTN","IBCEP8",129,0)
 . D ^DIE
"RTN","IBCEP8",130,0)
 . Q:$G(IBNOLM)
"RTN","IBCEP8",131,0)
 . D BLD
"RTN","IBCEP8",132,0)
 I '$G(IBNOLM) K VALMBCK S VALMBCK="R"
"RTN","IBCEP8",133,0)
 Q
"RTN","IBCEP8",134,0)
 ;
"RTN","IBCEP8",135,0)
EDITID(IBNPRV) ; Link from this list template to maintain provider-specific ids
"RTN","IBCEP8",136,0)
 ; IBNPRV = ien of entry in file 355.93
"RTN","IBCEP8",137,0)
 N IBPRV
"RTN","IBCEP8",138,0)
 D FULL^VALM1
"RTN","IBCEP8",139,0)
 D CLEAR^VALM1
"RTN","IBCEP8",140,0)
 S IBPRV=IBNPRV
"RTN","IBCEP8",141,0)
 D EN1^IBCEP5
"RTN","IBCEP8",142,0)
 K VALMQUIT
"RTN","IBCEP8",143,0)
 S VALMBCK="R"
"RTN","IBCEP8",144,0)
 Q
"RTN","IBCEP8",145,0)
 ;
"RTN","IBCEP8",146,0)
NVAFAC ; Enter/edit Non-VA facility information
"RTN","IBCEP8",147,0)
 N X,Y,DA,DIC,IBNPRV,DLAYGO
"RTN","IBCEP8",148,0)
 S DIC="^IBA(355.93,",DIC("S")="I $P(^(0),U,2)=1",DIC("DR")=".02////1"
"RTN","IBCEP8",149,0)
 S DLAYGO=355.93,DIC(0)="AELMQ",DIC("A")="Select a NON/Other VA FACILITY: "
"RTN","IBCEP8",150,0)
 D ^DIC K DIC,DLAYGO
"RTN","IBCEP8",151,0)
 I Y'>0 S VALMQUIT=1 G NVAFACQ
"RTN","IBCEP8",152,0)
 S IBNPRV=+Y
"RTN","IBCEP8",153,0)
 D EDIT1(IBNPRV,1)
"RTN","IBCEP8",154,0)
 ;
"RTN","IBCEP8",155,0)
NVAFACQ Q
"RTN","IBCEP8",156,0)
 ;
"RTN","IBCEP8",157,0)
GETFAC(IB,IBFILE,IBELE,IBSFD) ; Returns facility name,address lines or city-state-zip
"RTN","IBCEP8",158,0)
 ; IB = ien of entry in file
"RTN","IBCEP8",159,0)
 ; IBFILE = 0 for retrieval from file 4, 1 for retrieval from file 355.93
"RTN","IBCEP8",160,0)
 ; If IBELE=0, returns name
"RTN","IBCEP8",161,0)
 ;         =1, returns address line 1
"RTN","IBCEP8",162,0)
 ;         =2, returns address line 2
"RTN","IBCEP8",163,0)
 ;         =3, returns city, state zip
"RTN","IBCEP8",164,0)
 ;         = "3C", returns city  = "3S", state    = "3Z", zip
"RTN","IBCEP8",165,0)
 ; IBSFD (optional) = Output formatter segment name if the output needs
"RTN","IBCEP8",166,0)
 ;       to be screened thru the VAMCFD^IBCEF75 procedure for the flag
"RTN","IBCEP8",167,0)
 ;       in the insurance company file
"RTN","IBCEP8",168,0)
 ;
"RTN","IBCEP8",169,0)
 N Z,IBX,IBZ
"RTN","IBCEP8",170,0)
 S IBX=""
"RTN","IBCEP8",171,0)
 ;
"RTN","IBCEP8",172,0)
 I $G(IBSFD)="SUB" D VAMCFD^IBCEF75(+$G(IBXIEN),.IBZ) I $D(IBZ),'$G(IBZ("C",1)) G GETFACX
"RTN","IBCEP8",173,0)
 ;
"RTN","IBCEP8",174,0)
 S Z=$S('IBFILE:$G(^DIC(4,+IB,1)),1:$G(^IBA(355.93,+IB,0)))
"RTN","IBCEP8",175,0)
 I +IBELE=0 S IBX=$S('IBFILE:$P($G(^DIC(4,+IB,0)),U),1:$P($G(^IBA(355.93,+IB,0)),U))
"RTN","IBCEP8",176,0)
 I IBELE=1!(IBELE=12) S IBX=$S('IBFILE:$P(Z,U),1:$P(Z,U,5))
"RTN","IBCEP8",177,0)
 I IBELE=2!(IBELE=12) S IBX=$S(IBELE=12:IBX_" ",1:"")_$S('IBFILE:$P(Z,U,2),1:$P(Z,U,10))
"RTN","IBCEP8",178,0)
 ;
"RTN","IBCEP8",179,0)
 I +IBELE=3,'IBFILE D
"RTN","IBCEP8",180,0)
 . S:IBELE=3!(IBELE["C") IBX=$P(Z,U,3) Q:IBELE["C"
"RTN","IBCEP8",181,0)
 . S:IBELE=3 IBX=IBX_$S(IBX'="":", ",1:"") S:IBELE=3!(IBELE["S") IBX=IBX_$$STATE^IBCEFG1($P($G(^DIC(4,+IB,0)),U,2)) Q:IBELE["S"
"RTN","IBCEP8",182,0)
 . S:IBELE=3 IBX=IBX_" " S:IBELE=3!(IBELE["Z") IBX=IBX_$P(Z,U,4)
"RTN","IBCEP8",183,0)
 . Q
"RTN","IBCEP8",184,0)
 ;
"RTN","IBCEP8",185,0)
 I +IBELE=3,IBFILE D
"RTN","IBCEP8",186,0)
 . S:IBELE=3!(IBELE["C") IBX=$P(Z,U,6) Q:IBELE["C"
"RTN","IBCEP8",187,0)
 . S:IBELE=3 IBX=IBX_$S(IBX'="":", ",1:"") S:IBELE=3!(IBELE["S") IBX=IBX_$$STATE^IBCEFG1($P(Z,U,7))
"RTN","IBCEP8",188,0)
 . S:IBELE=3 IBX=IBX_" " S:IBELE=3!(IBELE["Z") IBX=IBX_$P(Z,U,8)
"RTN","IBCEP8",189,0)
 . Q
"RTN","IBCEP8",190,0)
GETFACX ;
"RTN","IBCEP8",191,0)
 Q IBX
"RTN","IBCEP8",192,0)
 ;
"RTN","IBCEP8",193,0)
ALLID(IBPRV,IBPTYP,IBZ) ; Returns array IBZ for all ids for provider IBPRV
"RTN","IBCEP8",194,0)
 ; for all provider id types or for id type in IBPTYP
"RTN","IBCEP8",195,0)
 ; IBPRV = vp ien of provider
"RTN","IBCEP8",196,0)
 ; IBPTYP = ien of provider id type to return or "" for all
"RTN","IBCEP8",197,0)
 ; IBZ = array returned with internal data:
"RTN","IBCEP8",198,0)
 ;  IBZ(file 355.9 ien)=ID type^ID#^ins co^form typ^bill care typ^care un^X12 code for id type
"RTN","IBCEP8",199,0)
 N Z,Z0
"RTN","IBCEP8",200,0)
 K IBZ
"RTN","IBCEP8",201,0)
 G:'$G(IBPRV) ALLIDQ
"RTN","IBCEP8",202,0)
 S IBPTYP=$G(IBPTYP)
"RTN","IBCEP8",203,0)
 S Z=0 F  S Z=$O(^IBA(355.9,"B",IBPRV,Z)) Q:'Z  S Z0=$G(^IBA(355.9,Z,0)) D
"RTN","IBCEP8",204,0)
 . I $S(IBPTYP="":1,1:($P(Z0,U,6)=IBPTYP)) S IBZ(Z)=($P(Z0,U,6)_U_$P(Z0,U,7)_U_$P(Z0,U,2)_U_$P(Z0,U,4)_U_$P(Z0,U,5)_U_$P(Z0,U,3))_U_$P($G(^IBE(355.97,+$P(Z0,U,6),0)),U,3)
"RTN","IBCEP8",205,0)
 ;
"RTN","IBCEP8",206,0)
ALLIDQ Q
"RTN","IBCEP8",207,0)
 ;
"RTN","IBCEP8",208,0)
CLIA() ; Returns ien of CLIA # provider id type
"RTN","IBCEP8",209,0)
 N Z,IBZ
"RTN","IBCEP8",210,0)
 S (IBZ,Z)=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  I $P($G(^(Z,0)),U,3)="X4",$P(^(0),U)["CLIA" S IBZ=Z Q
"RTN","IBCEP8",211,0)
 Q IBZ
"RTN","IBCEP8",212,0)
 ;
"RTN","IBCEP8",213,0)
STLIC() ; Returns ien of STLIC# provider id type
"RTN","IBCEP8",214,0)
 N Z,IBZ
"RTN","IBCEP8",215,0)
 S (IBZ,Z)=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  I $P($G(^(Z,1)),U,3) S IBZ=Z Q
"RTN","IBCEP8",216,0)
 Q IBZ
"RTN","IBCEP8",217,0)
 ;
"RTN","IBCEP8",218,0)
TAXID() ; Returns ien of Fed tax id provider id type
"RTN","IBCEP8",219,0)
 N Z,IBZ
"RTN","IBCEP8",220,0)
 S (IBZ,Z)=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  I $P($G(^(Z,1)),U,4) S IBZ=Z Q
"RTN","IBCEP8",221,0)
 Q IBZ
"RTN","IBCEP8",222,0)
 ;
"RTN","IBCEP8",223,0)
CLIANVA(IBIFN) ; Returns CLIA # for a non-VA facility on bill ien IBIFN
"RTN","IBCEP8",224,0)
 N IBCLIA,IBZ,IBNVA,Z
"RTN","IBCEP8",225,0)
 S IBCLIA="",IBZ=$$CLIA()
"RTN","IBCEP8",226,0)
 I IBZ D
"RTN","IBCEP8",227,0)
 . S IBNVA=$P($G(^DGCR(399,IBIFN,"U2")),U,10) Q:'IBNVA
"RTN","IBCEP8",228,0)
 . S IBCLIA=$$IDFIND^IBCEP2(IBIFN,IBZ,IBNVA_";IBA(355.93,","",1)
"RTN","IBCEP8",229,0)
 Q IBCLIA
"RTN","IBCEP8",230,0)
 ;
"RTN","IBCEP8",231,0)
VALFAC(X) ; Function returns 1 if format is valid for X12 facility name
"RTN","IBCEP8",232,0)
 ; Alpha/numeric/certain punctuation valid.  Must start with an Alpha
"RTN","IBCEP8",233,0)
 N OK,VAL
"RTN","IBCEP8",234,0)
 S OK=1
"RTN","IBCEP8",235,0)
 S VAL("A")="",VAL("N")="",VAL=",.- "
"RTN","IBCEP8",236,0)
 I $E(X)'?1A!'$$VALFMT(X,.VAL) S OK=0
"RTN","IBCEP8",237,0)
 Q OK
"RTN","IBCEP8",238,0)
 ;
"RTN","IBCEP8",239,0)
VALFMT(X,VAL) ; Returns 1 if format of X is valid, 0 if not
"RTN","IBCEP8",240,0)
 ; X = data to be examined
"RTN","IBCEP8",241,0)
 ; VAL = a 'string' of valid characters AND/OR (passed by reference)
"RTN","IBCEP8",242,0)
 ;    if VAL("A") defined ==> Alpha
"RTN","IBCEP8",243,0)
 ;    if VAL("A") defined ==> Numeric valid
"RTN","IBCEP8",244,0)
 ;    if VAL("A") defined ==> Punctuation valid
"RTN","IBCEP8",245,0)
 ;   any other character included in the string is checked individually
"RTN","IBCEP8",246,0)
 N Z
"RTN","IBCEP8",247,0)
 I $D(VAL("A")) D
"RTN","IBCEP8",248,0)
 . N Z0
"RTN","IBCEP8",249,0)
 . F Z=1:1:$L(X) I $E(X,Z)?1A S Z0(Z)=""
"RTN","IBCEP8",250,0)
 . S Z0="" F  S Z0=$O(Z0(Z0),-1) Q:'Z0  S $E(X,Z0)=""
"RTN","IBCEP8",251,0)
 I $D(VAL("N")) D
"RTN","IBCEP8",252,0)
 . N Z0
"RTN","IBCEP8",253,0)
 . F Z=1:1:$L(X) I $E(X,Z)?1N S Z0(Z)=""
"RTN","IBCEP8",254,0)
 . S Z0="" F  S Z0=$O(Z0(Z0),-1) Q:'Z0  S $E(X,Z0)=""
"RTN","IBCEP8",255,0)
 I $D(VAL("P")) D
"RTN","IBCEP8",256,0)
 . N Z0
"RTN","IBCEP8",257,0)
 . F Z=1:1:$L(X) I $E(X,Z)?1P S Z0(Z)=""
"RTN","IBCEP8",258,0)
 . S Z0="" F  S Z0=$O(Z0(Z0),-1) Q:'Z0  S $E(X,Z0)=""
"RTN","IBCEP8",259,0)
 I $G(VAL)'="" S X=$TR(X,VAL,"")
"RTN","IBCEP8",260,0)
 Q (X="")
"RTN","IBCEP8",261,0)
 ;
"RTN","IBCEP8",262,0)
PS(IBXSAVE) ; Returns 1 if IBXSAVE("PSVC") indicates the svc was non-lab
"RTN","IBCEP8",263,0)
 ; 
"RTN","IBCEP8",264,0)
 Q $S($G(IBXSAVE("PSVC"))="":0,1:"13"[IBXSAVE("PSVC"))
"RTN","IBCEP8",265,0)
 ;
"RTN","IBCEP8",266,0)
 ; Pass in the Internal Entry number to File 355.93
"RTN","IBCEP8",267,0)
 ; Return the Primary ID and Qualifier (ID Type) from 355.9
"RTN","IBCEP8",268,0)
PRIMID(IEN35593) ; Return External Primary ID and ID Quailier
"RTN","IBCEP8",269,0)
 N INDXVAL,LIST,MSG,IDCODE
"RTN","IBCEP8",270,0)
 S INDXVAL=IEN35593_";IBA(355.93,"
"RTN","IBCEP8",271,0)
 N SCREEN S SCREEN="I $P(^(0),U,8)"
"RTN","IBCEP8",272,0)
 D FIND^DIC(355.9,,"@;.06EI;.07","Q",INDXVAL,,,SCREEN,,"LIST","MSG")
"RTN","IBCEP8",273,0)
 I '+$G(LIST("DILIST",0)) Q ""   ; No Primary ID
"RTN","IBCEP8",274,0)
 I +$G(LIST("DILIST",0))>1 Q "***ERROR***^***ERROR***"  ; Bad.  More than one. 
"RTN","IBCEP8",275,0)
 ; Found just one
"RTN","IBCEP8",276,0)
 S IDCODE=$$GET1^DIQ(355.97,LIST("DILIST","ID",1,.06,"I"),.03)
"RTN","IBCEP8",277,0)
 Q $G(LIST("DILIST","ID",1,.07))_U_IDCODE_" - "_$G(LIST("DILIST","ID",1,.06,"E"))
"RTN","IBCEP81")
0^10^B19908581^n/a
"RTN","IBCEP81",1,0)
IBCEP81 ;ALB/KJH - NPI and Taxonomy Functions ; 12 Jul 2006  6:56 PM
"RTN","IBCEP81",2,0)
 ;;2.0;INTEGRATED BILLING;**343**;21-MAR-94;Build 16
"RTN","IBCEP81",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEP81",4,0)
 ;
"RTN","IBCEP81",5,0)
 ; Must call at an entry point  
"RTN","IBCEP81",6,0)
 Q
"RTN","IBCEP81",7,0)
 ;
"RTN","IBCEP81",8,0)
 ; NPIREQ - Extrinsic function that will return a flag indicating
"RTN","IBCEP81",9,0)
 ;          if the NPI 'drop dead date' has passed.
"RTN","IBCEP81",10,0)
 ; Input
"RTN","IBCEP81",11,0)
 ;    IBDT - Date to check (internal Fileman format)
"RTN","IBCEP81",12,0)
 ; Output
"RTN","IBCEP81",13,0)
 ;    1 - On or after the May 23, 2008 drop dead date
"RTN","IBCEP81",14,0)
 ;    0 - Prior to the May 23, 2008 drop dead date 
"RTN","IBCEP81",15,0)
NPIREQ(IBDT) ; Check NPI drop dead date
"RTN","IBCEP81",16,0)
 N IBCHKDT
"RTN","IBCEP81",17,0)
 S IBCHKDT=3080523
"RTN","IBCEP81",18,0)
 Q $S(IBDT<IBCHKDT:0,1:1)
"RTN","IBCEP81",19,0)
 ;
"RTN","IBCEP81",20,0)
 ; TAXREQ - Extrinsic function that will return a flag indicating
"RTN","IBCEP81",21,0)
 ;          if the Taxonomy 'drop dead date' has passed.
"RTN","IBCEP81",22,0)
 ; Input
"RTN","IBCEP81",23,0)
 ;    IBDT - Date to check (internal Fileman format)
"RTN","IBCEP81",24,0)
 ; Output
"RTN","IBCEP81",25,0)
 ;    1 - On or after the May 23, 2008 drop dead date
"RTN","IBCEP81",26,0)
 ;    0 - Prior to the May 23, 2008 drop dead date 
"RTN","IBCEP81",27,0)
TAXREQ(IBDT) ; Check Taxonomy drop dead date
"RTN","IBCEP81",28,0)
 N IBCHKDT
"RTN","IBCEP81",29,0)
 S IBCHKDT=3080523
"RTN","IBCEP81",30,0)
 Q $S(IBDT<IBCHKDT:0,1:1)
"RTN","IBCEP81",31,0)
 ;
"RTN","IBCEP81",32,0)
 ; NPIGET - Extrinsic function to retrieve the NPI of a specified
"RTN","IBCEP81",33,0)
 ;          record from file 355.93.
"RTN","IBCEP81",34,0)
 ; Input
"RTN","IBCEP81",35,0)
 ;    IBIEN - IEN of the record from file 355.93
"RTN","IBCEP81",36,0)
 ; Output
"RTN","IBCEP81",37,0)
 ;    NPI of that record or "" if not yet defined
"RTN","IBCEP81",38,0)
NPIGET(IBIEN) ; Get NPI
"RTN","IBCEP81",39,0)
 I IBIEN="" Q ""
"RTN","IBCEP81",40,0)
 N NPI
"RTN","IBCEP81",41,0)
 S NPI=$$GET1^DIQ(355.93,IBIEN_",",41.01,"I")
"RTN","IBCEP81",42,0)
 Q NPI
"RTN","IBCEP81",43,0)
 ;
"RTN","IBCEP81",44,0)
 ; TAXGET - Extrinsic function to retrieve the Taxonomy of a specified
"RTN","IBCEP81",45,0)
 ;          record from file 355.93. (NOTE: Returns data for the 'active'
"RTN","IBCEP81",46,0)
 ;          primary record from the Taxonomy multiple or the earliest
"RTN","IBCEP81",47,0)
 ;          'active' secondary record if no primary is present.)
"RTN","IBCEP81",48,0)
 ;
"RTN","IBCEP81",49,0)
 ;          The 'optional' array parameter returns all Taxonomies in a
"RTN","IBCEP81",50,0)
 ;          formatted array so they can be displayed.
"RTN","IBCEP81",51,0)
 ; Input
"RTN","IBCEP81",52,0)
 ;    IBIEN - IEN of the record from file 355.93
"RTN","IBCEP81",53,0)
 ; Output
"RTN","IBCEP81",54,0)
 ;    Piece 1 = Taxonomy (X12 value) of that record as defined in file 8932.1
"RTN","IBCEP81",55,0)
 ;    Piece 2 = IEN from file 8932.1
"RTN","IBCEP81",56,0)
 ;
"RTN","IBCEP81",57,0)
 ;    IBARR = IEN of the record from the main output
"RTN","IBCEP81",58,0)
 ;    IBARR(IEN) = 3 pieces for each Taxonomy record
"RTN","IBCEP81",59,0)
 ;    Piece 1 = Taxonomy (X12 value) of that record as defined in file 8932.1
"RTN","IBCEP81",60,0)
 ;    Piece 2 = IEN from file 8932.1
"RTN","IBCEP81",61,0)
 ;    Piece 3 = Primary/Secondary (1/0)
"RTN","IBCEP81",62,0)
 ;    
"RTN","IBCEP81",63,0)
TAXGET(IBIEN,IBARR) ; Get Taxonomy
"RTN","IBCEP81",64,0)
 I IBIEN="" Q U
"RTN","IBCEP81",65,0)
 N TAX,IBPTR,IEN,IENS
"RTN","IBCEP81",66,0)
 S IEN=0,IBPTR=""
"RTN","IBCEP81",67,0)
 F  S IEN=$O(^IBA(355.93,IBIEN,"TAXONOMY",IEN)) Q:'IEN  D
"RTN","IBCEP81",68,0)
 . S IENS=IEN_","_IBIEN_","
"RTN","IBCEP81",69,0)
 . I $$GET1^DIQ(355.9342,IENS,.03,"E")'="ACTIVE" Q
"RTN","IBCEP81",70,0)
 . S IBARR(IEN)=U_$$GET1^DIQ(355.9342,IENS,.01,"I")_U_$$GET1^DIQ(355.9342,IENS,.02,"I")
"RTN","IBCEP81",71,0)
 . S $P(IBARR(IEN),U)=$$GET1^DIQ(8932.1,$P(IBARR(IEN),U,2),"X12 CODE")
"RTN","IBCEP81",72,0)
 . I $$GET1^DIQ(355.9342,IENS,.02,"E")="YES" S IBPTR=$P(IBARR(IEN),U,2),IBARR=IEN Q
"RTN","IBCEP81",73,0)
 . I IBPTR="" S IBPTR=$P(IBARR(IEN),U,2),IBARR=IEN
"RTN","IBCEP81",74,0)
 S TAX=$$GET1^DIQ(8932.1,IBPTR,"X12 CODE")
"RTN","IBCEP81",75,0)
 Q TAX_U_IBPTR
"RTN","IBCEP81",76,0)
 ;
"RTN","IBCEP81",77,0)
 ; TAXDEF - Extrinsic function to retrieve the Taxonomy for the Default
"RTN","IBCEP81",78,0)
 ;          Division from a record in file 399.
"RTN","IBCEP81",79,0)
 ; Input
"RTN","IBCEP81",80,0)
 ;    IBIEN399 - IEN of the record from file 399
"RTN","IBCEP81",81,0)
 ; Output
"RTN","IBCEP81",82,0)
 ;    Piece 1 = Taxonomy (X12 value) of that record as defined in file 8932.1
"RTN","IBCEP81",83,0)
 ;    Piece 2 = IEN from file 8932.1
"RTN","IBCEP81",84,0)
TAXDEF(IBIEN399) ; Get Taxonomy for Default Division
"RTN","IBCEP81",85,0)
 I IBIEN399="" Q U
"RTN","IBCEP81",86,0)
 N IBRETVAL,IBORG,IBEVDT,IBDIV,TAX
"RTN","IBCEP81",87,0)
 S IBDIV=$$GET1^DIQ(399,IBIEN399_",",.22,"I")
"RTN","IBCEP81",88,0)
 S IBEVDT=$$GET1^DIQ(399,IBIEN399_",",.03,"I")
"RTN","IBCEP81",89,0)
 S IBORG=$P($$SITE^VASITE(IBEVDT,IBDIV),U)
"RTN","IBCEP81",90,0)
 Q $$TAXORG^XUSTAX(IBORG)
"RTN","IBCEP81",91,0)
 ;
"RTN","IBCEP81",92,0)
 ; NPIUSED - Extrinsic function to determine whether a given NPI is already being used in files 200, 4, or 355.93.
"RTN","IBCEP81",93,0)
 ;
"RTN","IBCEP81",94,0)
 ; Input
"RTN","IBCEP81",95,0)
 ;    IBNPI - NPI number to check.
"RTN","IBCEP81",96,0)
 ; Output
"RTN","IBCEP81",97,0)
 ;    1 = NPI is already being used.
"RTN","IBCEP81",98,0)
 ;    0 = NPI is not currently being used.
"RTN","IBCEP81",99,0)
 ;
"RTN","IBCEP81",100,0)
NPIUSED(IBNPI) ; Check whether NPI is already used within files 200, 4, or 355.93.
"RTN","IBCEP81",101,0)
 N DUP
"RTN","IBCEP81",102,0)
 I IBNPI="" Q ""
"RTN","IBCEP81",103,0)
 S DUP=$$DUP(IBNPI)
"RTN","IBCEP81",104,0)
 I DUP'="" D  Q 1
"RTN","IBCEP81",105,0)
 . W !,"The NPI of ",IBNPI," in file IB NON/OTHER VA BILLING PROVIDER is now, or was in the past, assigned to: ",$$GET1^DIQ(355.93,DUP,.01),!
"RTN","IBCEP81",106,0)
 . Q
"RTN","IBCEP81",107,0)
 S DUP=$$QI^XUSNPI(IBNPI)
"RTN","IBCEP81",108,0)
 I $P(DUP,U)'=0 D  Q 1
"RTN","IBCEP81",109,0)
 . I $P(DUP,U)="Individual_ID" W !,"The NPI of ",IBNPI," in file NEW PERSON is now, or was in the past, assigned to: ",$$GET1^DIQ(200,$P(DUP,U,2),.01),!
"RTN","IBCEP81",110,0)
 . I $P(DUP,U)="Organization_ID" W !,"The NPI of ",IBNPI," in file INSTITUTION is now, or was in the past, assigned to: ",$$GET1^DIQ(4,$P(DUP,U,2),.01),!
"RTN","IBCEP81",111,0)
 . I $P(DUP,U)="Non_VA_Provider_ID" W !,"The NPI of ",IBNPI," in file IB NON/OTHER VA BILLING PROVIDER is now, or was in the past, assigned to: ",$$GET1^DIQ(355.93,$P(DUP,U,2),.01),!
"RTN","IBCEP81",112,0)
 . Q
"RTN","IBCEP81",113,0)
 Q 0
"RTN","IBCEP81",114,0)
 ;
"RTN","IBCEP81",115,0)
 ; DUP - Extrinsic function to determine whether a given NPI is already being used in file# 355.93.
"RTN","IBCEP81",116,0)
 ;
"RTN","IBCEP81",117,0)
 ; Input
"RTN","IBCEP81",118,0)
 ;    IBNPI - NPI number to check.
"RTN","IBCEP81",119,0)
 ; Output
"RTN","IBCEP81",120,0)
 ;    NULL - NPI is not currently being used.
"RTN","IBCEP81",121,0)
 ;    Otherwise, the IEN of the entry in file# 355.93 associated with that NPI.
"RTN","IBCEP81",122,0)
 ;
"RTN","IBCEP81",123,0)
DUP(IBNPI) ; Check whether this is a duplicate NPI within file# 355.93
"RTN","IBCEP81",124,0)
 I IBNPI="" Q ""
"RTN","IBCEP81",125,0)
 Q $O(^IBA(355.93,"NPIHISTORY",IBNPI,""))
"RTN","IBCEP81",126,0)
 ;
"RTN","IBCEP81",127,0)
 ; DISPTAX - Function to display extra Taxonomy info in the input templates in screens 6, 7, and 8 in IB EDIT BILLING INFO
"RTN","IBCEP81",128,0)
 ; 
"RTN","IBCEP81",129,0)
 ; Input
"RTN","IBCEP81",130,0)
 ;    IBIEN - IEN of the entry in file 8932.1 to be displayed
"RTN","IBCEP81",131,0)
 ;    IBTXT - (optional) extra text to be displayed before the entry (i.e. "Default Division" or "Non-VA Facility")
"RTN","IBCEP81",132,0)
 ;    
"RTN","IBCEP81",133,0)
DISPTAX(IBIEN,IBTXT) ; Display extra Taxonomy info (when available)
"RTN","IBCEP81",134,0)
 N IBX
"RTN","IBCEP81",135,0)
 I $G(IBIEN)="" Q
"RTN","IBCEP81",136,0)
 S IBX=$$GET1^DIQ(8932.1,IBIEN,1) I IBX]"" W !,"    ",$G(IBTXT)," Classification: ",IBX
"RTN","IBCEP81",137,0)
 S IBX=$$GET1^DIQ(8932.1,IBIEN,2) I IBX]"" W !,"    ",$G(IBTXT)," Area of Specialization: ",IBX
"RTN","IBCEP81",138,0)
 S IBX=$$GET1^DIQ(8932.1,IBIEN,8) I IBX]"" W !,"    ",$G(IBTXT)," Specialty Code: ",IBX
"RTN","IBCEP81",139,0)
 S IBX=$$GET1^DIQ(8932.1,IBIEN,6) W !,"    ",$G(IBTXT)," Taxonomy X12 Code: ",IBX
"RTN","IBCEP81",140,0)
 Q
"RTN","IBCEP82")
0^11^B27027320^n/a
"RTN","IBCEP82",1,0)
IBCEP82 ;ALB/CLT, Special cross references and data entry for fields in file 355.93 ; 14 Apr 2006  9:41 AM
"RTN","IBCEP82",2,0)
 ;;2.0;INTEGRATED BILLING;**343**;21-MAR-94;Build 16
"RTN","IBCEP82",3,0)
 ;
"RTN","IBCEP82",4,0)
 ; Call at tags only
"RTN","IBCEP82",5,0)
 Q
"RTN","IBCEP82",6,0)
 ;This routine will ask for the NPI, check for duplicate entries, and check for proper
"RTN","IBCEP82",7,0)
 ;format using the double-add-double formula.  If the NPI is being deleted it will ask
"RTN","IBCEP82",8,0)
 ;the user why it is being deleted.
"RTN","IBCEP82",9,0)
 ;If it is being deleted because of an erroneous entry it will be completely deleted.
"RTN","IBCEP82",10,0)
 ;If it is a valid NPI being deleted because of possible inappropriate usage it will be
"RTN","IBCEP82",11,0)
 ;maintained in the history cross reference to preclude anyone from using this NPI again.
"RTN","IBCEP82",12,0)
 ;
"RTN","IBCEP82",13,0)
EN ;Routine primary entry point
"RTN","IBCEP82",14,0)
 N DTOUT,DUOUT,DIR,DIE,DIC,DR,X,Y
"RTN","IBCEP82",15,0)
 N IBIEN,IBNPI,IBCHECK,IBOLDNPI,IBRBNPI,IBRB
"RTN","IBCEP82",16,0)
 S IBIEN=DA,IBOLDNPI=""
"RTN","IBCEP82",17,0)
EN1 ;
"RTN","IBCEP82",18,0)
 K DIR
"RTN","IBCEP82",19,0)
 S DIR(0)="FO^10:10",DIR("A")="NPI",DIR("?")="Enter a 10 digit National Provider Identifier"
"RTN","IBCEP82",20,0)
 I $G(DA) S:$P($G(^IBA(355.93,DA,0)),U,14)'="" (DIR("B"),IBOLDNPI)=$P($G(^IBA(355.93,DA,0)),U,14)
"RTN","IBCEP82",21,0)
 D ^DIR S IBCHECK=0
"RTN","IBCEP82",22,0)
 I X="^" W *7,!,"   EXIT NOT ALLOWED ??" G EN1
"RTN","IBCEP82",23,0)
 I $E(X)="^" W *7,!,"   JUMPING NOT ALLOWED ??" G EN1
"RTN","IBCEP82",24,0)
 I X="@" G:IBOLDNPI'="" DEL W *7,"??" G EN1
"RTN","IBCEP82",25,0)
 I $G(DUOUT)!$G(DTOUT)!(X="")!(Y=IBOLDNPI) G XIT
"RTN","IBCEP82",26,0)
 S IBNPI=Y
"RTN","IBCEP82",27,0)
 I '$$CHKDGT^XUSNPI(IBNPI) W !,*7,"Not a valid NPI.  Please try again.",! G EN1
"RTN","IBCEP82",28,0)
 I $$NPIUSED^IBCEP81(IBNPI) G EN1
"RTN","IBCEP82",29,0)
 S IBCHECK=1
"RTN","IBCEP82",30,0)
 I IBOLDNPI="" D ACTI
"RTN","IBCEP82",31,0)
 I IBOLDNPI'="" D:IBNPI'=IBOLDNPI INACT
"RTN","IBCEP82",32,0)
 S $P(^IBA(355.93,IBIEN,0),U,14)=IBNPI,^IBA(355.93,"NPI",IBNPI,IBIEN)="",^IBA(355.93,"NPIHISTORY",IBNPI,IBIEN)=""
"RTN","IBCEP82",33,0)
 G XIT
"RTN","IBCEP82",34,0)
 ;
"RTN","IBCEP82",35,0)
ACTI ;CREATE AN ACTIVATED ENTRY IN MULTIPLE NPISTATUS FIELD
"RTN","IBCEP82",36,0)
 S DA(1)=IBIEN,DIC="^IBA(355.93,"_DA(1)_",""NPISTATUS"",",DIC(0)="L",X=$$NOW^XLFDT()
"RTN","IBCEP82",37,0)
 S DIC("DR")=".02////^S X=1;.03////^S X=IBNPI;.04////^S X=DUZ"
"RTN","IBCEP82",38,0)
 D FILE^DICN
"RTN","IBCEP82",39,0)
 S $P(^IBA(355.93,IBIEN,0),U,14)=IBNPI
"RTN","IBCEP82",40,0)
 Q
"RTN","IBCEP82",41,0)
 ;
"RTN","IBCEP82",42,0)
DEL ;NPI HAS BEEN DELETED
"RTN","IBCEP82",43,0)
 ;If the user deletes the NPI this subroutine will determine why it was deleted and if it was because it was found
"RTN","IBCEP82",44,0)
 ;in a false identity situation will mark it in history to never be used again.
"RTN","IBCEP82",45,0)
 S IBNPI=DIR("B")
"RTN","IBCEP82",46,0)
 K DIR
"RTN","IBCEP82",47,0)
 S DIR(0)="Y"
"RTN","IBCEP82",48,0)
 S DIR("A")="Are you sure you wish to delete this NPI"
"RTN","IBCEP82",49,0)
 S DIR("?")="You have indicated you wish to delete the NPI.  This is a second chance check."
"RTN","IBCEP82",50,0)
 D ^DIR
"RTN","IBCEP82",51,0)
 G:Y(0)="NO" XIT
"RTN","IBCEP82",52,0)
 S DIR(0)="S^E:ERROR;V:VALID",DIR("A")="Was this a Valid NPI or an NPI entered in Error"
"RTN","IBCEP82",53,0)
 S DIR("?",1)="An example of an NPI entered in error is if the entry person transposed numbers,"
"RTN","IBCEP82",54,0)
 S DIR("?",2)="or if the NPI for one provider is accidentally assigned to a different provider."
"RTN","IBCEP82",55,0)
 S DIR("?")="Enter an 'E' for Error or a 'V' for Valid."
"RTN","IBCEP82",56,0)
 D ^DIR
"RTN","IBCEP82",57,0)
 I Y="E" D COMP
"RTN","IBCEP82",58,0)
 I Y="V" S IBCHECK=2 D INACT
"RTN","IBCEP82",59,0)
 Q
"RTN","IBCEP82",60,0)
 ;
"RTN","IBCEP82",61,0)
COMP ;COMPLETELY DELETE THE NPI
"RTN","IBCEP82",62,0)
 ;This subroutine will delete the NPI from the NPI and NPIHISTORY cross references.  It make an entry in the 
"RTN","IBCEP82",63,0)
 ;NPI multiple field within a vendor record to indicate that the NPI has been deleted.
"RTN","IBCEP82",64,0)
 S $P(^IBA(355.93,DA,0),U,14)=""
"RTN","IBCEP82",65,0)
 K ^IBA(355.93,"NPI",IBOLDNPI,DA),^IBA(355.93,"NPIHISTORY",IBOLDNPI,DA)
"RTN","IBCEP82",66,0)
 S DA(1)=IBIEN,DIC="^IBA(355.93,"_DA(1)_",""NPISTATUS"",",DIC(0)="L",X=$$NOW^XLFDT()
"RTN","IBCEP82",67,0)
 S IBRB=0
"RTN","IBCEP82",68,0)
 D  ; Find the most recent status '0' (inactive) NPI entry in the list that was not later made status '2' (deleted).
"RTN","IBCEP82",69,0)
 . N IBRBLST,IBRBTMP
"RTN","IBCEP82",70,0)
 . ; Don't want to roll back to the same number you are deleting.
"RTN","IBCEP82",71,0)
 . S IBRBLST(IBOLDNPI)=""
"RTN","IBCEP82",72,0)
 . S IBRBTMP=$P(^IBA(355.93,IBIEN,"NPISTATUS",0),U,3)
"RTN","IBCEP82",73,0)
 . ; Go through each entry in reverse order
"RTN","IBCEP82",74,0)
 . F  S IBRBTMP=$O(^IBA(355.93,IBIEN,"NPISTATUS",IBRBTMP),-1) Q:'IBRBTMP  D  Q:IBRB'=0
"RTN","IBCEP82",75,0)
 .. S IBRBLST=^IBA(355.93,IBIEN,"NPISTATUS",IBRBTMP,0)
"RTN","IBCEP82",76,0)
 .. ; If this is an 'active' entry then ignore it.
"RTN","IBCEP82",77,0)
 .. I $P(IBRBLST,U,2)=1 Q
"RTN","IBCEP82",78,0)
 .. ; If this entry does not have an NPI then ignore it.
"RTN","IBCEP82",79,0)
 .. I $P(IBRBLST,U,3)="" Q
"RTN","IBCEP82",80,0)
 .. ; If this is a 'deleted' entry then store the NPI for later comparison to any 'inactive' entries found.
"RTN","IBCEP82",81,0)
 .. I $P(IBRBLST,U,2)=2 S IBRBLST($P(IBRBLST,U,3))="" Q
"RTN","IBCEP82",82,0)
 .. ; If this is an 'inactive' entry and there is no 'deleted' entry then report it.
"RTN","IBCEP82",83,0)
 .. I $P(IBRBLST,U,2)=0,'$D(IBRBLST($P(IBRBLST,U,3))) S IBRB=IBRBTMP Q
"RTN","IBCEP82",84,0)
 .. Q
"RTN","IBCEP82",85,0)
 . Q
"RTN","IBCEP82",86,0)
 S DIC("DR")=".02////^S X=2;.03////^S X=IBOLDNPI;.04////^S X=DUZ"
"RTN","IBCEP82",87,0)
 D FILE^DICN
"RTN","IBCEP82",88,0)
 I IBRB>0 D ROLLBACK
"RTN","IBCEP82",89,0)
 W !,"The NPI has been deleted.",!
"RTN","IBCEP82",90,0)
 Q
"RTN","IBCEP82",91,0)
 ;
"RTN","IBCEP82",92,0)
INACT ;INACTIVATE AN ENTRY
"RTN","IBCEP82",93,0)
 ;This subroutine makes two entries in the NPI multiple field.
"RTN","IBCEP82",94,0)
 ;One for the deactivation of the old NPI and the second
"RTN","IBCEP82",95,0)
 ;for the activation of a new NPI.
"RTN","IBCEP82",96,0)
 S DA(1)=IBIEN,DIC="^IBA(355.93,"_DA(1)_",""NPISTATUS"",",DIC(0)="L",X=$$NOW^XLFDT()
"RTN","IBCEP82",97,0)
 S DIC("DR")=".02////^S X=0;.03////^S X=IBOLDNPI;.04////^S X=DUZ"
"RTN","IBCEP82",98,0)
 D FILE^DICN
"RTN","IBCEP82",99,0)
 S ^IBA(355.93,"NPIHISTORY",IBOLDNPI,DA(1))=""
"RTN","IBCEP82",100,0)
 K ^IBA(355.93,"NPI",IBOLDNPI,DA(1))
"RTN","IBCEP82",101,0)
 S $P(^IBA(355.93,IBIEN,0),U,14)=""
"RTN","IBCEP82",102,0)
 I $G(IBCHECK)<2 D ACTI
"RTN","IBCEP82",103,0)
 S ^IBA(355.93,"NPIHISTORY",IBNPI,DA(1))=""
"RTN","IBCEP82",104,0)
 Q
"RTN","IBCEP82",105,0)
 ;
"RTN","IBCEP82",106,0)
ROLLBACK ;ROLL BACK TO THE PREVIOUS NPI AFTER AN NPI IS DELETED
"RTN","IBCEP82",107,0)
 S IBRBNPI=$P(^IBA(355.93,IBIEN,"NPISTATUS",IBRB,0),U,3)
"RTN","IBCEP82",108,0)
 S DA(1)=IBIEN,DIC="^IBA(355.93,"_DA(1)_",""NPISTATUS"",",DIC(0)="L",X=$$NOW^XLFDT()
"RTN","IBCEP82",109,0)
 S DIC("DR")=".02////^S X=1;.03////^S X=IBRBNPI;.04////^S X=DUZ"
"RTN","IBCEP82",110,0)
 D FILE^DICN
"RTN","IBCEP82",111,0)
 S $P(^IBA(355.93,DA(1),0),U,14)=IBRBNPI,^IBA(355.93,"NPI",IBRBNPI,DA(1))=""
"RTN","IBCEP82",112,0)
 Q
"RTN","IBCEP82",113,0)
 ;
"RTN","IBCEP82",114,0)
XIT ;CLEAN AND EXIT
"RTN","IBCEP82",115,0)
 Q
"RTN","IBCEP82",116,0)
 ;
"RTN","IBCEP82",117,0)
XR ;Set the primary taxonomy code cross reference for field 42
"RTN","IBCEP82",118,0)
 N ATAX S ATAX=""
"RTN","IBCEP82",119,0)
 I $D(^IBA(355.93,DA(1),"TAXONOMY","D")) D:X=1
"RTN","IBCEP82",120,0)
 . F  S ATAX=$O(^IBA(355.93,DA(1),"TAXONOMY","D",1,ATAX)) Q:ATAX=""  D
"RTN","IBCEP82",121,0)
 .. K ^IBA(355.93,DA(1),"TAXONOMY","D",1,ATAX)
"RTN","IBCEP82",122,0)
 .. I ATAX'=DA S $P(^IBA(355.93,DA(1),"TAXONOMY",ATAX,0),U,2)=0,^IBA(355.93,DA(1),"TAXONOMY","D",0,ATAX)=""
"RTN","IBCEP82",123,0)
 S ^IBA(355.93,DA(1),"TAXONOMY","D",X,DA)=""
"RTN","IBCEP82",124,0)
 Q
"RTN","IBCEP82",125,0)
 ;
"RTN","IBCEP82",126,0)
KXR ;Kill primary taxonomy code cross reference for field 42
"RTN","IBCEP82",127,0)
 N K
"RTN","IBCEP82",128,0)
 F K=0,1 K ^IBA(355.93,DA(1),"TAXONOMY","D",K,DA)
"RTN","IBCEP82",129,0)
 Q
"RTN","IBCSC6")
0^12^B17895378^B16564182
"RTN","IBCSC6",1,0)
IBCSC6 ;ALB/MJB - MCCR SCREEN 6 (INPT. BILLING INFO) ;27 MAY 88 10:19
"RTN","IBCSC6",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,109,106,51,137,343**;21-MAR-94;Build 16
"RTN","IBCSC6",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC6",4,0)
 ;
"RTN","IBCSC6",5,0)
 ;MAP TO DGCRSC6
"RTN","IBCSC6",6,0)
 ;
"RTN","IBCSC6",7,0)
EN I $P(^DGCR(399,IBIFN,0),"^",5)>2 G EN^IBCSC7
"RTN","IBCSC6",8,0)
 I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
"RTN","IBCSC6",9,0)
 D ^IBCSCU S IBSR=6,IBSR1="",IBV1="0000000" S:IBV IBV1="1111111" F I="U","U1",0,"U2","U3" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCSC6",10,0)
 D H^IBCSCU
"RTN","IBCSC6",11,0)
 S IBBT=$P(IB(0),U,24)_$P(IB(0),U,5)_$P(IB(0),U,26)
"RTN","IBCSC6",12,0)
 S IBBT1=$P(IB(0),U,24)_$P($G(^DGCR(399.1,+$P(IB(0),U,25),0)),U,2)_$P(IB(0),U,26)
"RTN","IBCSC6",13,0)
 D 4^IBCVA1,5^IBCVA1
"RTN","IBCSC6",14,0)
 ;
"RTN","IBCSC6",15,0)
1 S Z=1,IBW=1 X IBWW W " Bill Type   : ",$S('$D(IBBT1):IBU,IBBT1="":IBU,1:IBBT1)
"RTN","IBCSC6",16,0)
 W $J("",14),"Loc. of Care: ",$E($G(IBBTP1),1,30) K IBBTP1
"RTN","IBCSC6",17,0)
 W !?4,"Covered Days: ",$S(IB("U2")="":IBU,$P(IB("U2"),U,2)'="":$P(IB("U2"),U,2),1:IBU)
"RTN","IBCSC6",18,0)
 W ?35,"Bill Classif: ",$E($G(IBBTP2),1,30) K IBBTP2
"RTN","IBCSC6",19,0)
 W !?4,"Non-Cov Days: ",$S(IB("U2")="":IBU,$P(IB("U2"),U,3)'="":$P(IB("U2"),U,3),1:IBU)
"RTN","IBCSC6",20,0)
 W ?38,"Timeframe: ",$S($D(IBBTP3):$E(IBBTP3,1,30),1:"") K IBBTP3
"RTN","IBCSC6",21,0)
 W !?4,"Charge Type : ",$S($P(IB(0),U,27)=1:"INSTITUTIONAL",$P(IB(0),U,27)=2:"PROFESSIONAL",1:IBU)
"RTN","IBCSC6",22,0)
 W ?39,"Division: ",$E($P($G(^DG(40.8,+$P(IB(0),U,22),0)),U,1),1,30)
"RTN","IBCSC6",23,0)
 ; PRXM/KJH - Add Taxonomy code to display for patch 343.
"RTN","IBCSC6",24,0)
 W !?34,"Div. Taxonomy: "
"RTN","IBCSC6",25,0)
 S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,2),"X12 CODE") W $S(IBZ'="":IBZ,1:IBU)
"RTN","IBCSC6",26,0)
 S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,2),"SPECIALTY CODE") W $S(IBZ'="":" ("_IBZ_")",1:"")
"RTN","IBCSC6",27,0)
 W !?4,"Form Type   : ",$P($G(^IBE(353,+$P(IB(0),U,19),0)),U,1)
"RTN","IBCSC6",28,0)
 W ?34,"Co-Insur Days: ",$S($P(IB("U2"),U,7)="":$S($$MCRONBIL^IBEFUNC(IBIFN):IBU,1:IBUN),1:$P(IB("U2"),U,7))
"RTN","IBCSC6",29,0)
 ;
"RTN","IBCSC6",30,0)
 ;W !?4,"Provider # : ",$S(IB("U2")="":IBU,$P(IB("U2"),U,2)'="":$P(IB("U2"),U,2),1:IBU)
"RTN","IBCSC6",31,0)
 ;
"RTN","IBCSC6",32,0)
ROI S Z=2,IBW=1 X IBWW
"RTN","IBCSC6",33,0)
 W " Sensitive?  : ",$S(IB("U")="":IBU,$P(IB("U"),U,5)="":IBU,$P(IB("U"),U,5)=1:"YES",1:"NO")
"RTN","IBCSC6",34,0)
 W ?46,"Assignment: ",$S(IB("U")="":IBU,$P(IB("U"),U,6)="":IBU,$P(IB("U"),U,6)["n":"NO",$P(IB("U"),U,6)["N":"NO",$P(IB("U"),U,6)=0:"NO",1:"YES")
"RTN","IBCSC6",35,0)
 I $P(IB("U"),U,5)=1 W !?4,"R.O.I. Form : ",$S($P(IB("U"),U,7)=1:"COMPLETED",$P(IB("U"),U,7)=0:"NOT COMPLETED",1:"STATUS UNKNOWN")
"RTN","IBCSC6",36,0)
 S IBOA="01^02^03^04^05^06^" F I=1:1:5 Q:'$D(IBOCN(I))  I IBOA[IBOCN(I)_"^" S IBOX=1
"RTN","IBCSC6",37,0)
 W:$D(IBOX) !,?4,"Pow of Atty : ",$S($P(IB("U"),U,3)=1:"COMPLETED",$P(IB("U"),U,3)=0:"NOT COMPLETED",1:"STATUS UNKNOWN")
"RTN","IBCSC6",38,0)
 ;
"RTN","IBCSC6",39,0)
3 S Z=3,IBW=1 X IBWW D FROMTO
"RTN","IBCSC6",40,0)
 ;
"RTN","IBCSC6",41,0)
BED S Z=4,IBW=1 X IBWW
"RTN","IBCSC6",42,0)
 W " Bedsection  : ",$S(IB("U")="":IBU,$P(IB("U"),U,11)'="":$P(^DGCR(399.1,$P(IB("U"),U,11),0),U,1),1:IBU)
"RTN","IBCSC6",43,0)
 ;S IBI=1,D1=0,IBLS=$S($D(DGNEWLOS):0,IB("U")="":0,$P(IB("U"),U,15)'="":$P(IB("U"),U,15),1:0) K DGNEWLOS
"RTN","IBCSC6",44,0)
 ;I 'IBLS S D0=DFN,(D1,DGPMIFN)=$O(^DGPM("AMV1",$P(IBIP,U,2),DFN,0)),X2=$P(IB("U"),"^"),X1=$P(IB("U"),"^",2) D ^%DTC S IBLS(1)=X
"RTN","IBCSC6",45,0)
 ;I 'IBLS K X D:DGPMIFN ^DGPMLOS S IBLS=$S($D(X):$P(X,U,5),1:IBLS(1)),IBLS=$S(IBLS(1)<IBLS:IBLS(1),1:IBLS) S:'IBLS IBLS=1 S (DA,Y)=IBIFN,DIE="^DGCR(399,",DR="165///"_IBLS D ^DIE K DR
"RTN","IBCSC6",46,0)
 W !?4,"LOS         : ",IBLS
"RTN","IBCSC6",47,0)
 ;
"RTN","IBCSC6",48,0)
 I $P($G(^DPT(DFN,.3)),"^")="Y" D SC I IBSCM>0 W !?4,"PTF record indicates ",IBSCM," of ",IBM," movements are for Service Connected Care."
"RTN","IBCSC6",49,0)
 ;
"RTN","IBCSC6",50,0)
REV S Z=5,IBREVC=0,IBW=1 X IBWW W " Rev. Code   : " F I=1:1:8 Q:'$D(IBREVC(I))  D:$S(IBREVC<7:1,1:$P(IBREVC(I),U,9)="") REV^IBCSC61 S IBREVC=IBREVC+1 Q:IBREVC>7
"RTN","IBCSC6",51,0)
 I $G(IBREVC)>9 W !,?4,"Too many Revenue Codes to display, enter '5' to list"
"RTN","IBCSC6",52,0)
BILL D OFFSET^IBCSC61
"RTN","IBCSC6",53,0)
 I $G(IBUCH),$$FT^IBCEF(IBIFN)=3 S X=IBUCH,X2="2$" D COMMA^%DTC W !,?39,"Non-Cov: ",X
"RTN","IBCSC6",54,0)
 ;
"RTN","IBCSC6",55,0)
RS S Z=6,IBW=1 X IBWW W " Rate Sched  : (re-calculate charges)"
"RTN","IBCSC6",56,0)
 ;
"RTN","IBCSC6",57,0)
PRPAY S Z=7,IBW=1 X IBWW
"RTN","IBCSC6",58,0)
 S IB("M1")=$G(^DGCR(399,IBIFN,"M1")),X3=0,IBI="Prior Payments:" F X=0,1,2 D
"RTN","IBCSC6",59,0)
 . S X1=$P(IB("U2"),U,(X+4)),X2=$P(IB("M1"),U,(5+X)) I X1="",X2="" Q
"RTN","IBCSC6",60,0)
 . S IBI=IBI_$J("",(17-$L(IBI)))_$S(X=0:"Primary",X=1:"Secondary",X=2:"Tertiary",1:"")
"RTN","IBCSC6",61,0)
 . S IBI=IBI_$J("",(28-$L(IBI)))_$S(X1'="":$J(X1,11,2),1:IBU)
"RTN","IBCSC6",62,0)
 . S IBI=IBI_$J("",(50-$L(IBI)))_"Bill #: "_$S(+X2:$P($G(^DGCR(399,+X2,0)),U,1),1:IBU)
"RTN","IBCSC6",63,0)
 . W:'X3 " " W:X3 !,?4 W IBI S X3=1,IBI=""
"RTN","IBCSC6",64,0)
 I 'X3 W " Prior Claims: ",IBU
"RTN","IBCSC6",65,0)
 ;
"RTN","IBCSC6",66,0)
 G ^IBCSCP
"RTN","IBCSC6",67,0)
 Q
"RTN","IBCSC6",68,0)
 ;
"RTN","IBCSC6",69,0)
FROMTO ;  - Print From and To dates of bill
"RTN","IBCSC6",70,0)
 W " Bill From   : " S Y=$P(IB("U"),"^") D D^DIQ W $S($L(Y):Y,1:IBU)
"RTN","IBCSC6",71,0)
 W ?49,"Bill To: " S Y=$P(IB("U"),"^",2) D D^DIQ W $S($L(Y):Y,1:IBU)
"RTN","IBCSC6",72,0)
 Q
"RTN","IBCSC6",73,0)
 ;
"RTN","IBCSC6",74,0)
SC ;  -if patient is sc, are movements for sc care
"RTN","IBCSC6",75,0)
 S PTF=$P(IB(0),"^",8)
"RTN","IBCSC6",76,0)
 ;
"RTN","IBCSC6",77,0)
SC1 ;
"RTN","IBCSC6",78,0)
 ;  -input ptf
"RTN","IBCSC6",79,0)
 ;
"RTN","IBCSC6",80,0)
 ;  -output IBm   = number of movements
"RTN","IBCSC6",81,0)
 ;          IBscm = number of SC movements
"RTN","IBCSC6",82,0)
 S (IBM,IBSCM,M)=0
"RTN","IBCSC6",83,0)
 I $S('PTF:1,'$D(^DGPT(PTF,0)):1,1:0) Q
"RTN","IBCSC6",84,0)
 F  S M=$O(^DGPT(PTF,"M",M)) Q:'M  S IBM=IBM+1 I $P($G(^DGPT(PTF,"M",M,0)),"^",18)=1 S IBSCM=IBSCM+1
"RTN","IBCSC6",85,0)
 Q
"RTN","IBCSC6",86,0)
 ;IBCSC6
"RTN","IBCSC7")
0^13^B8540222^B7583946
"RTN","IBCSC7",1,0)
IBCSC7 ;ALB/MJB - MCCR SCREEN 7 (INPT. BILLING INFO)  ;27 MAY 88 10:19
"RTN","IBCSC7",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,109,106,343**;21-MAR-94;Build 16
"RTN","IBCSC7",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC7",4,0)
 ;
"RTN","IBCSC7",5,0)
 ;MAP TO DGCRSC7
"RTN","IBCSC7",6,0)
 ;
"RTN","IBCSC7",7,0)
 I $P(^DGCR(399,IBIFN,0),"^",5)'>2 G ^IBCSC8
"RTN","IBCSC7",8,0)
 I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
"RTN","IBCSC7",9,0)
EN D ^IBCSCU S IBSR=7,IBSR1="",IBV1="0000000" S:IBV IBV1="1111111" F I="U","U1",0,"U2","U3" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCSC7",10,0)
 D H^IBCSCU
"RTN","IBCSC7",11,0)
 D 4^IBCVA1,5^IBCVA1
"RTN","IBCSC7",12,0)
 S IBBT=$P(IB(0),U,24)_$P($G(^DGCR(399.1,+$P(IB(0),U,25),0)),U,2)_$P(IB(0),U,26)
"RTN","IBCSC7",13,0)
 S Z=1,IBW=1 X IBWW W " Bill Type   : ",$S('$D(IBBT):IBU,IBBT="":IBU,1:IBBT)
"RTN","IBCSC7",14,0)
 W $J("",14),"Loc. of Care: ",$E($G(IBBTP1),1,30) K IBBTP1
"RTN","IBCSC7",15,0)
 W !?4,"Covered Days: ",$S(IB("U2")="":IBU,$P(IB("U2"),U,2)'="":$P(IB("U2"),U,2),1:IBU)
"RTN","IBCSC7",16,0)
 W ?35,"Bill Classif: ",$E($G(IBBTP2),1,30) K IBBTP2
"RTN","IBCSC7",17,0)
 W !?4,"Non-Cov Days: ",$S(IB("U2")="":IBU,$P(IB("U2"),U,3)'="":$P(IB("U2"),U,3),1:IBU)
"RTN","IBCSC7",18,0)
 W ?38,"Timeframe: ",$S($D(IBBTP3):$E(IBBTP3,1,30),1:"") K IBBTP3
"RTN","IBCSC7",19,0)
 W !?4,"Charge Type : ",$S($P(IB(0),U,27)=1:"INSTITUTIONAL",$P(IB(0),U,27)=2:"PROFESSIONAL",1:IBU)
"RTN","IBCSC7",20,0)
 W ?37,"Disch Stat: ",$E($$EXTERNAL^DILFD(399,162,"",$P(IB("U"),U,12)),1,30)
"RTN","IBCSC7",21,0)
 W !?4,"Form Type   : ",$P($G(^IBE(353,+$P(IB(0),U,19),0)),U,1)
"RTN","IBCSC7",22,0)
 W ?39,"Division: ",$E($P($G(^DG(40.8,+$P(IB(0),U,22),0)),U,1),1,30)
"RTN","IBCSC7",23,0)
 ; PRXM/KJH - Add Taxonomy code to display for patch 343.
"RTN","IBCSC7",24,0)
 W !?34,"Div. Taxonomy: "
"RTN","IBCSC7",25,0)
 S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,2),"X12 CODE") W $S(IBZ'="":IBZ,1:IBU)
"RTN","IBCSC7",26,0)
 S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,2),"SPECIALTY CODE") W $S(IBZ'="":" ("_IBZ_")",1:"")
"RTN","IBCSC7",27,0)
 ;
"RTN","IBCSC7",28,0)
 ;W !?4,"Provider # : ",$S(IB("U2")="":IBU,$P(IB("U2"),U,2)'="":$P(IB("U2"),U,2),1:IBU)
"RTN","IBCSC7",29,0)
 ;
"RTN","IBCSC7",30,0)
ROI S Z=2,IBW=1 X IBWW
"RTN","IBCSC7",31,0)
 W " Sensitive?  : ",$S(IB("U")="":IBU,$P(IB("U"),U,5)="":IBU,$P(IB("U"),U,5)=1:"YES",1:"NO")
"RTN","IBCSC7",32,0)
 W ?46,"Assignment: ",$S(IB("U")="":IBU,$P(IB("U"),U,6)="":IBU,$P(IB("U"),U,6)["n":"NO",$P(IB("U"),U,6)["N":"NO",$P(IB("U"),U,6)=0:"NO",1:"YES")
"RTN","IBCSC7",33,0)
 I $P(IB("U"),U,5)=1 W !?4,"R.O.I. Form : ",$S($P(IB("U"),U,7)=1:"COMPLETED",$P(IB("U"),U,7)=0:"NOT COMPLETED",1:"STATUS UNKNOWN")
"RTN","IBCSC7",34,0)
 S IBOA="01^02^03^04^05^06^" F I=1:1:5 Q:'$D(IBOCN(I))  I IBOA[IBOCN(I)_"^" S IBOX=1
"RTN","IBCSC7",35,0)
 W:$D(IBOX) !,?4,"Pow of Atty : ",$S($P(IB("U"),U,3)=1:"COMPLETED",$P(IB("U"),U,3)=0:"NOT COMPLETED",1:"STATUS UNKNOWN")
"RTN","IBCSC7",36,0)
 ;
"RTN","IBCSC7",37,0)
 S Z=3,IBW=1 X IBWW D FROMTO^IBCSC6
"RTN","IBCSC7",38,0)
 ;
"RTN","IBCSC7",39,0)
OP S Z=4,IBW=1 X IBWW W " OP Visits   : " F I=0:0 S I=$O(^DGCR(399,IBIFN,"OP",I)) Q:'I  S Y=I X ^DD("DD") W:$X>67 !?18 W Y_", "
"RTN","IBCSC7",40,0)
 I '$O(^DGCR(399,IBIFN,"OP",0)) W IBU
"RTN","IBCSC7",41,0)
 ;
"RTN","IBCSC7",42,0)
 G REV^IBCSC6
"RTN","IBCSC7",43,0)
 ;
"RTN","IBCSC7",44,0)
 ;IBCSC7
"RTN","IBCSC82")
0^14^B20168513^B16576811
"RTN","IBCSC82",1,0)
IBCSC82 ;ALB/MJB - MCCR SCREEN 8 (UB-92 BILL SPECIFIC INFO) ;27 MAY 88 10:20
"RTN","IBCSC82",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210,232,155,343**;21-MAR-94;Build 16
"RTN","IBCSC82",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC82",4,0)
 ;
"RTN","IBCSC82",5,0)
EN S IBCUBFT=$$FT^IBCU3(IBIFN) I IBCUBFT=2 K IBCUBFT G ^IBCSC8H ;hcfa 1500
"RTN","IBCSC82",6,0)
 ;
"RTN","IBCSC82",7,0)
 N I,IB,IBX,Z
"RTN","IBCSC82",8,0)
 D ^IBCSCU S IBSR=8,IBSR1=2,IBV1="000000" S:IBV IBV1="111111" F I="U","U1",0,"UF3","UF31","U2","TX","U3" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCSC82",9,0)
 N IBZ,IBPRV,IBREQ,IBMRASEC
"RTN","IBCSC82",10,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV)
"RTN","IBCSC82",11,0)
 K IB("PRV")
"RTN","IBCSC82",12,0)
 S IBZ=0 F  S IBZ=$O(IBPRV(IBZ)) Q:'IBZ  I $O(IBPRV(IBZ,0))!$D(IBPRV(IBZ,"NOTOPT")) M IB("PRV",IBZ)=IBPRV(IBZ)
"RTN","IBCSC82",13,0)
 ;
"RTN","IBCSC82",14,0)
 D H^IBCSCU
"RTN","IBCSC82",15,0)
 S Z=1,IBW=1 X IBWW W " Bill Remark       : ",$S($P(IB("U1"),U,8)]"":$P(IB("U1"),U,8),1:IBUN)
"RTN","IBCSC82",16,0)
 S IBZ="",IBZ=$S($P(IB("UF3"),U,4)]"":"Pri: "_$P(IB("UF3"),U,4),1:"")_$S($P(IB("UF3"),U,5)'="":"  Sec: "_$P(IB("UF3"),U,5),1:"")_$S($P(IB("UF3"),U,6)'="":" Ter: "_$P(IB("UF3"),U,6),1:"")
"RTN","IBCSC82",17,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC82",18,0)
 W !,?3," ICN/DCN(s)        : ",IBZ
"RTN","IBCSC82",19,0)
 S IBZ="",IBZ=$S($P(IB("U"),U,13)]"":"Pri: "_$P(IB("U"),U,13),1:"")_$S($P(IB("U2"),U,8)'="":"  Sec: "_$P(IB("U2"),U,8),1:"")_$S($P(IB("U2"),U,9)'="":"  Ter: "_$P(IB("U2"),U,9),1:"")
"RTN","IBCSC82",20,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC82",21,0)
 W !,?3," Tx Auth. Code(s)  : ",IBZ
"RTN","IBCSC82",22,0)
 W !,?3," Admitting Dx      : " S IBX=$$ICD9^IBACSV(+IB("U2"),$$BDATE^IBACSV(IBIFN)) W $S(IBX'="":$P(IBX,U)_" - "_$P(IBX,U,3),'$$INPAT^IBCEF(IBIFN):IBUN,1:IBU)
"RTN","IBCSC82",23,0)
 I $P(IB(0),U,5)>2 W !,?3," Admission Source  : " S IBX=$$EXTERNAL^DILFD(399,159,,$P(IB("U"),U,9)) W $S(IBX'="":IBX,1:IBU) ;Outpatient only
"RTN","IBCSC82",24,0)
 S Z=2,IBW=1 X IBWW
"RTN","IBCSC82",25,0)
 W " Providers         : ",$S('$O(IB("PRV",0)):IBU,1:"")
"RTN","IBCSC82",26,0)
 I $D(IB("PRV")) D
"RTN","IBCSC82",27,0)
 . N Z,IBT,IBQ,IBARR,IBTAX,IBNOTAX,IBSPEC,IBNOSPEC
"RTN","IBCSC82",28,0)
 . S IBZ=0
"RTN","IBCSC82",29,0)
 . D DEFSEC^IBCEF74(IBIFN,.IBARR)
"RTN","IBCSC82",30,0)
 . ; PRXM/KJH - Add Taxonomy code to display for patch 343. Moved secondary IDs slightly (below).
"RTN","IBCSC82",31,0)
 . S IBTAX=$$PROVTAX^IBCEF73A(IBIFN,.IBNOTAX)
"RTN","IBCSC82",32,0)
 . S IBSPEC=$$SPECTAX^IBCEF73A(IBIFN,.IBNOSPEC)
"RTN","IBCSC82",33,0)
 . F  S IBZ=$O(IB("PRV",IBZ)) Q:'IBZ  D
"RTN","IBCSC82",34,0)
 .. N A,A1
"RTN","IBCSC82",35,0)
 .. S IBQ=""
"RTN","IBCSC82",36,0)
 .. W !,?5,"- "
"RTN","IBCSC82",37,0)
 .. S A=$$EXPAND^IBTRE(399.0222,.01,IBZ)
"RTN","IBCSC82",38,0)
 .. I $P($G(IB("PRV",IBZ,1)),U,4)'="" S A1=" ("_$E($P(IB("PRV",IBZ,1),U,4),1,3)_")",A=$E(A,1,15-$L(A1))_A1
"RTN","IBCSC82",39,0)
 .. W $E(A_$J("",15),1,15),": "
"RTN","IBCSC82",40,0)
 .. I '$P($G(IB("PRV",IBZ,1)),U,3),$P($G(IB("PRV",IBZ,1)),U)="" W IBU Q
"RTN","IBCSC82",41,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)'="" W:'$G(IB("PRV",IBZ)) $E($P(IB("PRV",IBZ,1),U)_$J("",20),1,20) W:$G(IB("PRV",IBZ)) "(OLD PROV DATA) "_$P(IB("PRV",IBZ,1),U)
"RTN","IBCSC82",42,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)="",$P($G(IB("PRV",IBZ)),U)'="" W $E($P(IB("PRV",IBZ),U)_$J("",20),1,20)
"RTN","IBCSC82",43,0)
 .. W "    Taxonomy: ",$S($P(IBTAX,U,IBZ)'="":$P(IBTAX,U,IBZ),1:IBU),$S($P(IBSPEC,U,IBZ)'="":" ("_$P(IBSPEC,U,IBZ)_")",1:"")
"RTN","IBCSC82",44,0)
 .. F A=1:1:3 I $G(IBARR(IBZ,A))'="" S IBQ=IBQ_"["_$E("PST",A)_"]"_IBARR(IBZ,A)_" "
"RTN","IBCSC82",45,0)
 .. I $L(IBQ) W !,?30,$E(IBQ,1,49)
"RTN","IBCSC82",46,0)
 ;
"RTN","IBCSC82",47,0)
 K IB("PRV")
"RTN","IBCSC82",48,0)
 S Z=3,IBW=1 X IBWW W " Form Locator 2    : ",$S($P(IB("UF3"),U,1)]"":$P(IB("UF3"),U,1),1:IBUN)
"RTN","IBCSC82",49,0)
 W !,?3," Form Locator 11   : ",$S($P(IB("UF3"),U,2)]"":$P(IB("UF3"),U,2),1:IBUN)
"RTN","IBCSC82",50,0)
 S Z=4,IBW=1 X IBWW W " Form Locator 31   : ",$S($P(IB("UF3"),U,3)]"":$P(IB("UF3"),U,3),1:IBUN)
"RTN","IBCSC82",51,0)
 S Z=5,IBW=1 X IBWW W " Form Locator 56   : ",$S($P(IB("UF3"),U,7)]"":$P(IB("UF3"),U,7),1:IBUN)
"RTN","IBCSC82",52,0)
 W !,?3," Form Locator 78   : ",$S($P(IB("UF31"),U,2)]"":$P(IB("UF31"),U,2),1:IBUN)
"RTN","IBCSC82",53,0)
 S IBREQ=+$$REQMRA^IBEFUNC(IBIFN) S:IBREQ IBREQ=1
"RTN","IBCSC82",54,0)
 S IBMRASEC=$$MRASEC^IBCEF4(IBIFN)
"RTN","IBCSC82",55,0)
 S Z=6,IBW=1 X IBWW W " ",$S('IBREQ:"Force To Print?    : ",1:"Force MRA Sec Prt?: ")
"RTN","IBCSC82",56,0)
 S IBZ=$$EXTERNAL^DILFD(399,27+IBREQ,,+$P(IB("TX"),U,8+IBREQ))
"RTN","IBCSC82",57,0)
 I IBMRASEC,'$P(IB("TX"),U,8),$P(IB("TX"),U,9) S IBZ="FORCED TO PRINT BY MRA PRIMARY",$P(IB("TX"),U,8)=0
"RTN","IBCSC82",58,0)
 W $S(IBZ'=""&($P(IB("TX"),U,8+IBREQ)'=""):IBZ,'$$TXMT^IBCEF4(IBIFN):"[NOT APPLICABLE - NOT TRANSMITTABLE]",IBREQ:"NO FORCED PRINT",1:IBZ)
"RTN","IBCSC82",59,0)
 S Z=7,IBW=1 X IBWW
"RTN","IBCSC82",60,0)
 W " Provider ID Maint  : (Edit Provider ID information)"
"RTN","IBCSC82",61,0)
 S Z=8,IBW=1 X IBWW
"RTN","IBCSC82",62,0)
 W " Other Facility (VA/non): " S IBZ=$$EXPAND^IBTRE(399,232,+$P(IB("U2"),U,10))
"RTN","IBCSC82",63,0)
 W $E($S(IBZ'="":IBZ,$$PSRV^IBCEU(IBIFN):IBU,1:IBUN),1,23)
"RTN","IBCSC82",64,0)
 ; PRXM/KJH - Add Taxonomy code to display for patch 343.
"RTN","IBCSC82",65,0)
 W ?53,"Taxonomy: "
"RTN","IBCSC82",66,0)
 S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,3),"X12 CODE") W $S(IBZ'="":IBZ,1:IBU)
"RTN","IBCSC82",67,0)
 S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,3),"SPECIALTY CODE") W $S(IBZ'="":" ("_IBZ_")",1:"")
"RTN","IBCSC82",68,0)
 G ^IBCSCP
"RTN","IBCSC82",69,0)
Q Q
"RTN","IBCSC82",70,0)
 ;IBCSC8
"RTN","IBCSC8H")
0^15^B34960375^B30414621
"RTN","IBCSC8H",1,0)
IBCSC8H ;ALB/ARH - MCCR SCREEN 8 (BILL SPECIFIC INFO) HCFA 1500 ;4/21/92
"RTN","IBCSC8H",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,207,210,232,155,320,343**;21-MAR-94;Build 16
"RTN","IBCSC8H",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC8H",4,0)
 ; HCFA 1500 screen 8
"RTN","IBCSC8H",5,0)
 ;
"RTN","IBCSC8H",6,0)
 ; MAP TO DGCRSC8H
"RTN","IBCSC8H",7,0)
 ;
"RTN","IBCSC8H",8,0)
EN N I,IB,Y,Z
"RTN","IBCSC8H",9,0)
 D ^IBCSCU S IBSR=8,IBSR1="H",IBV1="0000000" S:IBV IBV1="1111111" F I="U","U1","UF2","UF3","U2","M","TX",0,"U3" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCSC8H",10,0)
 N IBZ,IBPRV,IBDATE,IBREQ,IBMRASEC,IBZ1
"RTN","IBCSC8H",11,0)
 ;
"RTN","IBCSC8H",12,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN) ; Date of service for the bill
"RTN","IBCSC8H",13,0)
 S IBPRV=""
"RTN","IBCSC8H",14,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV)
"RTN","IBCSC8H",15,0)
 K IB("PRV")
"RTN","IBCSC8H",16,0)
 S IBZ=0 F  S IBZ=$O(IBPRV(IBZ)) Q:'IBZ  I $O(IBPRV(IBZ,0))!$D(IBPRV(IBZ,"NOTOPT")) M IB("PRV",IBZ)=IBPRV(IBZ)
"RTN","IBCSC8H",17,0)
 ;
"RTN","IBCSC8H",18,0)
 D H^IBCSCU
"RTN","IBCSC8H",19,0)
 S Z=1,IBW=1 X IBWW W " Unable To Work From: " S Y=$P(IB("U"),U,16) X ^DD("DD") W $S(Y'="":Y,1:IBUN)
"RTN","IBCSC8H",20,0)
 W !?4,"Unable To Work To  : " S Y=$P(IB("U"),U,17) X ^DD("DD") W $S(Y'="":Y,1:IBUN)
"RTN","IBCSC8H",21,0)
 S Z=2,IBW=1 X IBWW W " Admitting Dx       : " S IBZ=$$ICD9^IBACSV(+IB("U2"),IBDATE) W $S(IBZ'="":$P(IBZ,U)_" - "_$P(IBZ,U,3),1:IBUN)
"RTN","IBCSC8H",22,0)
 S IBZ="",IBZ=$S($P(IB("UF3"),U,4)]"":"Pri: "_$P(IB("UF3"),U,4),1:"")_$S($P(IB("UF3"),U,5)'="":"  Sec: "_$P(IB("UF3"),U,5),1:"")_$S($P(IB("UF3"),U,6)'="":" Ter: "_$P(IB("UF3"),U,6),1:"")
"RTN","IBCSC8H",23,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC8H",24,0)
 W !,?4,"ICN/DCN(s)         : ",IBZ
"RTN","IBCSC8H",25,0)
 S IBZ=$$CKPROV^IBCEU(IBIFN,3)
"RTN","IBCSC8H",26,0)
 S IBZ="",IBZ=$S($P(IB("U"),U,13)]"":"Pri: "_$P(IB("U"),U,13),1:"")_$S($P(IB("U2"),U,8)'="":"  Sec: "_$P(IB("U2"),U,8),1:"")_$S($P(IB("U2"),U,9)'="":"  Ter: "_$P(IB("U2"),U,9),1:"")
"RTN","IBCSC8H",27,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC8H",28,0)
 W !?4,"Tx Auth. Code(s)   : ",IBZ
"RTN","IBCSC8H",29,0)
 S Z=3,IBW=1 X IBWW
"RTN","IBCSC8H",30,0)
 W " Providers          : ",$S('$O(IB("PRV",0)):IBU,1:"")
"RTN","IBCSC8H",31,0)
 I $D(IB("PRV")) D  ; at least 1 provider found
"RTN","IBCSC8H",32,0)
 . N IBQ,A,A1,IBARR,IBTAX,IBNOTAX,IBSPEC,IBNOSPEC
"RTN","IBCSC8H",33,0)
 . S IBZ=0
"RTN","IBCSC8H",34,0)
 . D DEFSEC^IBCEF74(IBIFN,.IBARR)
"RTN","IBCSC8H",35,0)
 . ; PRXM/KJH - Add Taxonomy code to display for patch 343. Moved secondary IDs slightly (below).
"RTN","IBCSC8H",36,0)
 . S IBTAX=$$PROVTAX^IBCEF73A(IBIFN,.IBNOTAX)
"RTN","IBCSC8H",37,0)
 . S IBSPEC=$$SPECTAX^IBCEF73A(IBIFN,.IBNOSPEC)
"RTN","IBCSC8H",38,0)
 . F  S IBZ=$O(IB("PRV",IBZ)) Q:'IBZ  D
"RTN","IBCSC8H",39,0)
 .. S IBQ=""
"RTN","IBCSC8H",40,0)
 .. W !,?5,"- "
"RTN","IBCSC8H",41,0)
 .. S A=$$EXPAND^IBTRE(399.0222,.01,IBZ)
"RTN","IBCSC8H",42,0)
 .. I $P($G(IB("PRV",IBZ,1)),U,4)'="" S A1=" ("_$E($P(IB("PRV",IBZ,1),U,4),1,3)_")",A=$E(A,1,16-$L(A1))_A1
"RTN","IBCSC8H",43,0)
 .. W $E(A_$J("",16),1,16),": "
"RTN","IBCSC8H",44,0)
 .. I '$P($G(IB("PRV",IBZ,1)),U,3),$P($G(IB("PRV",IBZ,1)),U)="" W IBU Q
"RTN","IBCSC8H",45,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)'="" W:'$G(IB("PRV",IBZ)) $E($P(IB("PRV",IBZ,1),U)_$J("",16),1,16) W:$G(IB("PRV",IBZ)) "(OLD BOX 31 DATA) "_$P(IB("PRV",IBZ,1),U)
"RTN","IBCSC8H",46,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)="",$P($G(IB("PRV",IBZ)),U)'="" W $E($P(IB("PRV",IBZ),U)_$J("",16),1,16)
"RTN","IBCSC8H",47,0)
 .. W "    Taxonomy: ",$S($P(IBTAX,U,IBZ)'="":$P(IBTAX,U,IBZ),1:IBU),$S($P(IBSPEC,U,IBZ)'="":" ("_$P(IBSPEC,U,IBZ)_")",1:"")
"RTN","IBCSC8H",48,0)
 .. F A=1:1:3 I $G(IBARR(IBZ,A))'="" S IBQ=IBQ_"["_$E("PST",A)_"]"_IBARR(IBZ,A)_" "
"RTN","IBCSC8H",49,0)
 .. I $L(IBQ) W !,?30,$E(IBQ,1,49)
"RTN","IBCSC8H",50,0)
 ;
"RTN","IBCSC8H",51,0)
 K IB("PRV")
"RTN","IBCSC8H",52,0)
 ;
"RTN","IBCSC8H",53,0)
 S Z=4,IBW=1 X IBWW
"RTN","IBCSC8H",54,0)
 W " Other Facility (VA/non): " S IBZ=$$EXPAND^IBTRE(399,232,+$P(IB("U2"),U,10))
"RTN","IBCSC8H",55,0)
 W $E($S(IBZ'="":IBZ,$$PSRV^IBCEU(IBIFN):IBU,1:IBUN),1,23)
"RTN","IBCSC8H",56,0)
 ; PRXM/KJH - Add Taxonomy code to display for patch 343.
"RTN","IBCSC8H",57,0)
 W ?53,"Taxonomy: "
"RTN","IBCSC8H",58,0)
 S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,3),"X12 CODE") W $S(IBZ'="":IBZ,1:IBU)
"RTN","IBCSC8H",59,0)
 S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,3),"SPECIALTY CODE") W $S(IBZ'="":" ("_IBZ_")",1:"")
"RTN","IBCSC8H",60,0)
 ;
"RTN","IBCSC8H",61,0)
 ; clia# display - IB patch 320
"RTN","IBCSC8H",62,0)
 S (IBZ,IBZ1)=$P(IB("U2"),U,13)     ; retrieve CLIA# from database
"RTN","IBCSC8H",63,0)
 ;
"RTN","IBCSC8H",64,0)
 I IBZ="" D
"RTN","IBCSC8H",65,0)
 . NEW CLIAREQ,DEFCLIA,DIE,DA,DR
"RTN","IBCSC8H",66,0)
 . S CLIAREQ=$$CLIAREQ^IBCEP8A(IBIFN)
"RTN","IBCSC8H",67,0)
 . I 'CLIAREQ S IBZ1=IBUN Q          ; clia# not needed
"RTN","IBCSC8H",68,0)
 . S DEFCLIA=$$CLIA^IBCEP8A(IBIFN)   ; default clia# for claim
"RTN","IBCSC8H",69,0)
 . I DEFCLIA="" S IBZ1=IBU Q         ; no default found
"RTN","IBCSC8H",70,0)
 . I $G(IBMDOTCN) K IBMDOTCN S IBZ1=IBU Q     ; user @-deleted clia#
"RTN","IBCSC8H",71,0)
 . S IBZ1=DEFCLIA                    ; display and stuff default clia#
"RTN","IBCSC8H",72,0)
 . S DIE=399,DA=IBIFN,DR="235///"_DEFCLIA D ^DIE    ; stuff in default
"RTN","IBCSC8H",73,0)
 . Q
"RTN","IBCSC8H",74,0)
 ;
"RTN","IBCSC8H",75,0)
 W !,?4,"Lab CLIA #         : ",IBZ1
"RTN","IBCSC8H",76,0)
 ;
"RTN","IBCSC8H",77,0)
 ; Mammo# display IB patch 320
"RTN","IBCSC8H",78,0)
 S (IBZ,IBZ1)=$P(IB("U3"),U,1)    ; retrieve mammo# from database
"RTN","IBCSC8H",79,0)
 ;
"RTN","IBCSC8H",80,0)
 ; If mammo# is there, but should not be, then blank it out
"RTN","IBCSC8H",81,0)
 I IBZ'="",'$$XRAY^IBCEP8A(IBIFN) D
"RTN","IBCSC8H",82,0)
 . NEW DIE,DA,DR
"RTN","IBCSC8H",83,0)
 . S IBZ1=IBUN        ; mammo# not needed
"RTN","IBCSC8H",84,0)
 . S DIE=399,DA=IBIFN,DR="242////@" D ^DIE
"RTN","IBCSC8H",85,0)
 . Q
"RTN","IBCSC8H",86,0)
 ;
"RTN","IBCSC8H",87,0)
 I IBZ="" S IBZ1=IBUN
"RTN","IBCSC8H",88,0)
 W !?4,"Mammography Cert # : ",IBZ1
"RTN","IBCSC8H",89,0)
 ;
"RTN","IBCSC8H",90,0)
 S Z=5,IBW=1 X IBWW
"RTN","IBCSC8H",91,0)
 W " Form Locator 19    : " S IBZ=$P($G(^DGCR(399,IBIFN,"UF31")),U,3) W $S(IBZ'="":IBZ,1:IBUN)
"RTN","IBCSC8H",92,0)
 I $P(IB("U2"),U,14)'="" W !,?4,"Homebound          : ",$$EXPAND^IBTRE(399,236,$P(IB("U2"),U,14))
"RTN","IBCSC8H",93,0)
 I $P(IB("U2"),U,15)'="" W !,?4,"Date Last Seen     : ",$$EXPAND^IBTRE(399,237,$P(IB("U2"),U,15))
"RTN","IBCSC8H",94,0)
 I $P(IB("U2"),U,16)'="" W !,?4,"Spec Prog Indicator: " S IBZ=$$EXPAND^IBTRE(399,238,$P(IB("U2"),U,16)) W $S(IBZ'="":IBZ,$$WNRBILL^IBEFUNC(IBIFN):"31",1:"")
"RTN","IBCSC8H",95,0)
 S Z=6,IBW=1 X IBWW
"RTN","IBCSC8H",96,0)
 W " Print Main Facility Box 32: ",$S($P($G(^IBE(350.9,1,0)),U,2)'=$P($G(^DG(40.8,+$P(IB(0),U,22),0)),U,7):"[DOES NOT APPLY]",$P(IB("UF2"),U,2):$$EXPAND^IBTRE(399,401,$P(IB("UF2"),U,2)),1:IBUN)
"RTN","IBCSC8H",97,0)
 S IBREQ=+$$REQMRA^IBEFUNC(IBIFN) S:IBREQ IBREQ=1
"RTN","IBCSC8H",98,0)
 S IBMRASEC=$$MRASEC^IBCEF4(IBIFN)
"RTN","IBCSC8H",99,0)
 W !,?4,$S('IBREQ:"Force To Print?    : ",1:"Force MRA Sec Prt? : ")
"RTN","IBCSC8H",100,0)
 S IBZ=$$EXTERNAL^DILFD(399,27+IBREQ,,+$P(IB("TX"),U,8+IBREQ))
"RTN","IBCSC8H",101,0)
 I IBMRASEC,'$P(IB("TX"),U,8),$P(IB("TX"),U,9) S IBZ="FORCED TO PRINT BY MRA PRIMARY",$P(IB("TX"),U,8)=0
"RTN","IBCSC8H",102,0)
 W $S(IBZ'=""&($P(IB("TX"),U,8+IBREQ)'=""):IBZ,'$$TXMT^IBCEF4(IBIFN):"[NOT APPLICABLE - NOT TRANSMITTABLE]",IBREQ:"NO FORCED PRINT",1:IBZ)
"RTN","IBCSC8H",103,0)
 S Z=7,IBW=1 X IBWW
"RTN","IBCSC8H",104,0)
 W " Provider ID Maint  : (Edit Provider ID information)",!
"RTN","IBCSC8H",105,0)
 G ^IBCSCP
"RTN","IBCSC8H",106,0)
Q Q
"RTN","IBCSC8H",107,0)
 ;
"RTN","IBCSC8H",108,0)
WRT1(IBCRED) ; Write credentials mismatch
"RTN","IBCSC8H",109,0)
 W !,*7,"  **Warning** Credentials differ from those found in NEW PERSON or IB NON VA",!,$J("",14),"BILLING PROVIDER file (",$S(IBCRED="":"none",1:IBCRED),")"
"RTN","IBCSC8H",110,0)
 W !,$J("",14),"Changes will print local, but only credentials on file transmit"
"RTN","IBCSC8H",111,0)
 Q
"RTN","IBCSC8H",112,0)
 ;
"RTN","IBCSC8H",113,0)
NSAME(DA) ; Returns 1 if div on bill is not the default billing facility
"RTN","IBCSC8H",114,0)
 Q ($P($G(^IBE(350.9,1,0)),U,2)'=$P($G(^DG(40.8,+$P(^DGCR(399,DA,0),U,22),0)),U,7))
"RTN","IBCSC8H",115,0)
 ;
"RTN","IBCSC8H",116,0)
 ;IBCSC8H
"RTN","IBY343PO")
0^^B3071313^n/a
"RTN","IBY343PO",1,0)
IBY343PO ;PRXM/KJH - Post-Install for IB patch 343 ;28-JUL-2006
"RTN","IBY343PO",2,0)
 ;;2.0;INTEGRATED BILLING;**343**;21-MAR-94;Build 16
"RTN","IBY343PO",3,0)
EN ; Standard Entry Point
"RTN","IBY343PO",4,0)
 D RESTORE
"RTN","IBY343PO",5,0)
 D INDEX
"RTN","IBY343PO",6,0)
 D SETPARM
"RTN","IBY343PO",7,0)
 Q
"RTN","IBY343PO",8,0)
RESTORE ; Restore data elements for a global node change that occurred between test versions 14 and 15.
"RTN","IBY343PO",9,0)
 ; These were saved during the pre-install.
"RTN","IBY343PO",10,0)
 N IBPAR,IBIEN,DA,DIK
"RTN","IBY343PO",11,0)
 D FIELD^DID(355.93,40,"","GLOBAL SUBSCRIPT LOCATION","IBPAR")
"RTN","IBY343PO",12,0)
 I $P($G(IBPAR("GLOBAL SUBSCRIPT LOCATION")),";")="NPISTATUS",'$D(^TMP("IBY343",$J)) Q  ; Update has already occurred.
"RTN","IBY343PO",13,0)
 ; Restore the "NPI" nodes for each entry in file 355.93.
"RTN","IBY343PO",14,0)
 S IBIEN=0
"RTN","IBY343PO",15,0)
 F  S IBIEN=$O(^TMP("IBY343",$J,IBIEN)) Q:'IBIEN  D
"RTN","IBY343PO",16,0)
 . M ^IBA(355.93,IBIEN,"NPISTATUS")=^TMP("IBY343",$J,IBIEN,"NPI")
"RTN","IBY343PO",17,0)
 . Q
"RTN","IBY343PO",18,0)
 ; Remove the temporary global.
"RTN","IBY343PO",19,0)
 K ^TMP("IBY343",$J)
"RTN","IBY343PO",20,0)
RESTOREX ;
"RTN","IBY343PO",21,0)
 Q
"RTN","IBY343PO",22,0)
 ;
"RTN","IBY343PO",23,0)
INDEX ; Re-index the new "NPISTATUS" x-refs in file 355.93
"RTN","IBY343PO",24,0)
 N IBIEN,DA,DIK,DIC,X,Y
"RTN","IBY343PO",25,0)
 I $D(^IBA(355.93,"NPI42")) Q  ; Update has already occurred.
"RTN","IBY343PO",26,0)
 S IBIEN=0
"RTN","IBY343PO",27,0)
 F  S IBIEN=$O(^IBA(355.93,IBIEN)) Q:'IBIEN  D
"RTN","IBY343PO",28,0)
 . S DA(1)=IBIEN,DIK="^IBA(355.93,"_DA(1)_",""NPISTATUS"",",DIK(1)=".03^NPI42^C" D ENALL^DIK
"RTN","IBY343PO",29,0)
 . Q
"RTN","IBY343PO",30,0)
INDEXX ;
"RTN","IBY343PO",31,0)
 Q
"RTN","IBY343PO",32,0)
 ;
"RTN","IBY343PO",33,0)
SETPARM ; Set an entry in file 8989.5 (PARAMETERS) for XUSNPI QUALIFIED IDENTIFIER.
"RTN","IBY343PO",34,0)
 N XUSPCK,XUSPR
"RTN","IBY343PO",35,0)
 S XUSPCK=$O(^DIC(9.4,"B","KERNEL",0))
"RTN","IBY343PO",36,0)
 I 'XUSPCK Q
"RTN","IBY343PO",37,0)
 S XUSPCK=XUSPCK_";DIC(9.4,"
"RTN","IBY343PO",38,0)
 S XUSPR="Non_VA_Provider_ID;IBA(355.93,"
"RTN","IBY343PO",39,0)
 D PUT^XPAR(XUSPCK,"XUSNPI QUALIFIED IDENTIFIER",$P(XUSPR,";"),$P(XUSPR,";",2))
"RTN","IBY343PO",40,0)
SETPARMX ;
"RTN","IBY343PO",41,0)
 Q
"RTN","IBY343PR")
0^^B11894613^n/a
"RTN","IBY343PR",1,0)
IBY343PR ;PRXM/KJH - Pre-Install for IB patch 343 ;29-JUN-2006
"RTN","IBY343PR",2,0)
 ;;2.0;INTEGRATED BILLING;**343**;21-MAR-94;Build 16
"RTN","IBY343PR",3,0)
 ;
"RTN","IBY343PR",4,0)
 ; Sections of this code were copied from IBY320PR - which was created by ESG for IB patch 320.
"RTN","IBY343PR",5,0)
 ;
"RTN","IBY343PR",6,0)
EN ; Standard Entry Point
"RTN","IBY343PR",7,0)
 D CHECK
"RTN","IBY343PR",8,0)
 D SAVE
"RTN","IBY343PR",9,0)
 D DELOF
"RTN","IBY343PR",10,0)
 D DELPIT
"RTN","IBY343PR",11,0)
 Q
"RTN","IBY343PR",12,0)
 ;
"RTN","IBY343PR",13,0)
CHECK ; Check for bad provider ID type entries related to NPI
"RTN","IBY343PR",14,0)
 N ERROR,IEN,DA,DIK,Y
"RTN","IBY343PR",15,0)
 S IEN=$$FIND1^DIC(355.97,,,"NATIONAL PROVIDER ID",,,"ERROR") ; Get IEN for NPI
"RTN","IBY343PR",16,0)
 I IEN=35 Q  ; NPI found in the correct IEN - OK to continue
"RTN","IBY343PR",17,0)
 I IEN="",'$D(ERROR) Q  ; Entry does not exist - OK to continue
"RTN","IBY343PR",18,0)
 I $D(ERROR)!(IEN>29) W !,"Suspected problem with NPI entry found in file 355.97. Contact programmer for assistance." S XPDQUIT=2 Q  ; May have caused other entries to be numbered improperly.
"RTN","IBY343PR",19,0)
 S DIK="^IBE(355.97,",DA=IEN D ^DIK ; Remove bad entry. Should be IEN=35.
"RTN","IBY343PR",20,0)
 Q
"RTN","IBY343PR",21,0)
 ;
"RTN","IBY343PR",22,0)
SAVE ; Save off data elements for a global node change that occurred between test versions 14 and 15.
"RTN","IBY343PR",23,0)
 ; These will be restored to their new location during the post-install (after the DD is updated).
"RTN","IBY343PR",24,0)
 N IBPAR,IBIEN,DA,DIK,DIC,X,Y
"RTN","IBY343PR",25,0)
 D FIELD^DID(355.93,40,"","GLOBAL SUBSCRIPT LOCATION","IBPAR")
"RTN","IBY343PR",26,0)
 I '$D(IBPAR) Q  ; First time this patch has been loaded.
"RTN","IBY343PR",27,0)
 I $P($G(IBPAR("GLOBAL SUBSCRIPT LOCATION")),";")="NPISTATUS" Q  ; Update has already occurred.
"RTN","IBY343PR",28,0)
 ; Save off the "NPI" nodes for each entry in file 355.93 and kill them.
"RTN","IBY343PR",29,0)
 K ^TMP("IBY343",$J)
"RTN","IBY343PR",30,0)
 S IBIEN=0
"RTN","IBY343PR",31,0)
 F  S IBIEN=$O(^IBA(355.93,IBIEN)) Q:'IBIEN  D
"RTN","IBY343PR",32,0)
 . M ^TMP("IBY343",$J,IBIEN,"NPI")=^IBA(355.93,IBIEN,"NPI")
"RTN","IBY343PR",33,0)
 . K ^IBA(355.93,IBIEN,"NPI")
"RTN","IBY343PR",34,0)
 . Q
"RTN","IBY343PR",35,0)
 ; Remove the multiple from the DD
"RTN","IBY343PR",36,0)
 K DA,DIK,DIC
"RTN","IBY343PR",37,0)
 S DIK="^DD(355.93,",DA=40,DA(1)=355.93 D ^DIK
"RTN","IBY343PR",38,0)
 ; Remove the DD entries in the multiple
"RTN","IBY343PR",39,0)
 K DA,DIK,DIC
"RTN","IBY343PR",40,0)
 S DIK="^DD(355.9301,",DA=.04,DA(1)=355.9301 D ^DIK
"RTN","IBY343PR",41,0)
 S DIK="^DD(355.9301,",DA=.03,DA(1)=355.9301 D ^DIK
"RTN","IBY343PR",42,0)
 S DIK="^DD(355.9301,",DA=.02,DA(1)=355.9301 D ^DIK
"RTN","IBY343PR",43,0)
 S DIK="^DD(355.9301,",DA=.01,DA(1)=355.9301 D ^DIK
"RTN","IBY343PR",44,0)
 ; Remove the remainder of DD entries in the multiple
"RTN","IBY343PR",45,0)
 K ^DD(355.9301,0)
"RTN","IBY343PR",46,0)
 Q
"RTN","IBY343PR",47,0)
 ;
"RTN","IBY343PR",48,0)
DELPIT ; Delete included provider ID type entries
"RTN","IBY343PR",49,0)
 NEW FILE,DIK,LN,TAG,DATA,PCE,DA,Y
"RTN","IBY343PR",50,0)
 S DIK="^IBE(355.97," F LN=2:1 S TAG="PIT+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  D
"RTN","IBY343PR",51,0)
 . F PCE=2:1 S DA=$P(DATA,U,PCE) Q:'DA  I $D(^IBE(355.97,DA,0)) D ^DIK
"RTN","IBY343PR",52,0)
 . Q
"RTN","IBY343PR",53,0)
DELPITX ;
"RTN","IBY343PR",54,0)
 Q
"RTN","IBY343PR",55,0)
 ;
"RTN","IBY343PR",56,0)
INCPIT(Y) ; Function to determine if provider ID type entry should be included in the build
"RTN","IBY343PR",57,0)
 ; Y=ien to check in file 355.97
"RTN","IBY343PR",58,0)
 ;
"RTN","IBY343PR",59,0)
 NEW OK,LN,TAG,DATA
"RTN","IBY343PR",60,0)
 S OK=0
"RTN","IBY343PR",61,0)
 F LN=2:1 S TAG="PIT+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  I $F(DATA,U_Y_U) S OK=1 Q
"RTN","IBY343PR",62,0)
INCPITX ;
"RTN","IBY343PR",63,0)
 Q OK
"RTN","IBY343PR",64,0)
 ;
"RTN","IBY343PR",65,0)
DELOF ; Delete included output formatter entries
"RTN","IBY343PR",66,0)
 NEW FILE,DIK,LN,TAG,DATA,PCE,DA,Y
"RTN","IBY343PR",67,0)
 F FILE=5,6,7 S DIK="^IBA(364."_FILE_"," F LN=2:1 S TAG="ENT"_FILE_"+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  D
"RTN","IBY343PR",68,0)
 . F PCE=2:1 S DA=$P(DATA,U,PCE) Q:'DA  I $D(^IBA("364."_FILE,DA,0)) D ^DIK
"RTN","IBY343PR",69,0)
 . Q
"RTN","IBY343PR",70,0)
DELOFX ;
"RTN","IBY343PR",71,0)
 Q
"RTN","IBY343PR",72,0)
 ;
"RTN","IBY343PR",73,0)
INCLUDE(FILE,Y) ; Function to determine if output formatter entry should be included in the build
"RTN","IBY343PR",74,0)
 ; FILE=5,6,7 indicating file 364.x
"RTN","IBY343PR",75,0)
 ; Y=ien to check
"RTN","IBY343PR",76,0)
 ;
"RTN","IBY343PR",77,0)
 NEW OK,LN,TAG,DATA
"RTN","IBY343PR",78,0)
 S OK=0
"RTN","IBY343PR",79,0)
 F LN=2:1 S TAG="ENT"_FILE_"+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  I $F(DATA,U_Y_U) S OK=1 Q
"RTN","IBY343PR",80,0)
INCLUDEX ;
"RTN","IBY343PR",81,0)
 Q OK
"RTN","IBY343PR",82,0)
 ;
"RTN","IBY343PR",83,0)
PIT ; provider ID type entries in file 355.97 to be included
"RTN","IBY343PR",84,0)
 ;
"RTN","IBY343PR",85,0)
 ;;^35^
"RTN","IBY343PR",86,0)
 ;;
"RTN","IBY343PR",87,0)
 ;
"RTN","IBY343PR",88,0)
ENT5 ; output formatter entries in file 364.5 to be included
"RTN","IBY343PR",89,0)
 ;
"RTN","IBY343PR",90,0)
 ;;^320^321^322^323^
"RTN","IBY343PR",91,0)
 ;;
"RTN","IBY343PR",92,0)
 ;
"RTN","IBY343PR",93,0)
ENT6 ; output formatter entries in file 364.6 to be included
"RTN","IBY343PR",94,0)
 ;
"RTN","IBY343PR",95,0)
 ;;^1323^1324^1325^1326^1327^1328^1329^1330^1331^1332^1333^1334^1335^1336^1337^1338^1339^
"RTN","IBY343PR",96,0)
 ;;
"RTN","IBY343PR",97,0)
 ;
"RTN","IBY343PR",98,0)
ENT7 ; output formatter entries in file 364.7 to be included
"RTN","IBY343PR",99,0)
 ;
"RTN","IBY343PR",100,0)
 ;;^1015^1041^1042^1043^1044^1045^1046^1047^1048^1049^1050^1051^1052^1053^1054^1055^1056^1057^
"RTN","IBY343PR",101,0)
 ;;
"RTN","IBY343PR",102,0)
 ;
"UP",355.93,355.9301,-1)
355.93^NPISTATUS
"UP",355.93,355.9301,0)
355.9301
"UP",355.93,355.9342,-1)
355.93^TAXONOMY
"UP",355.93,355.9342,0)
355.9342
"UP",399,399.0222,-1)
399^PRV
"UP",399,399.0222,0)
399.0222
"VER")
8.0^22.0
"^DD",350.8,350.8,0)
FIELD^^10^7
"^DD",350.8,350.8,0,"DDA")
N
"^DD",350.8,350.8,0,"DT")
2930322
"^DD",350.8,350.8,0,"ID",.03)
W "   ",$P(^(0),U,3)
"^DD",350.8,350.8,0,"IX","AC",350.8,.03)

"^DD",350.8,350.8,0,"IX","B",350.8,.01)

"^DD",350.8,350.8,0,"IX","C",350.8,.03)

"^DD",350.8,350.8,0,"NM","IB ERROR")
 
"^DD",350.8,350.8,0,"VRPK")
IB
"^DD",350.8,350.8,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",350.8,350.8,.01,1,0)
^.1
"^DD",350.8,350.8,.01,1,1,0)
350.8^B
"^DD",350.8,350.8,.01,1,1,1)
S ^IBE(350.8,"B",$E(X,1,30),DA)=""
"^DD",350.8,350.8,.01,1,1,2)
K ^IBE(350.8,"B",$E(X,1,30),DA)
"^DD",350.8,350.8,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",350.8,350.8,.01,21,0)
^^2^2^2910305^^
"^DD",350.8,350.8,.01,21,1,0)
This is a free text name of the entry.  It should be namespaced with
"^DD",350.8,350.8,.01,21,2,0)
the namespace of the package reporting the error.
"^DD",350.8,350.8,.02,0)
ERROR MESSAGE^F^^0;2^K:$L(X)>80!($L(X)<3) X
"^DD",350.8,350.8,.02,3)
Answer must be 3-80 characters in length.
"^DD",350.8,350.8,.02,21,0)
^^3^3^2940209^^^^
"^DD",350.8,350.8,.02,21,1,0)
This is the text of the message as it will be displayed to a user or
"^DD",350.8,350.8,.02,21,2,0)
posted in a bulletin.  It should be as meaningful as possible to the
"^DD",350.8,350.8,.02,21,3,0)
person seeing the message.
"^DD",350.8,350.8,.03,0)
ERROR CODE^F^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>9!($L(X)<1) X
"^DD",350.8,350.8,.03,1,0)
^.1
"^DD",350.8,350.8,.03,1,1,0)
350.8^AC
"^DD",350.8,350.8,.03,1,1,1)
S ^IBE(350.8,"AC",$E(X,1,30),DA)=""
"^DD",350.8,350.8,.03,1,1,2)
K ^IBE(350.8,"AC",$E(X,1,30),DA)
"^DD",350.8,350.8,.03,1,2,0)
350.8^C
"^DD",350.8,350.8,.03,1,2,1)
S ^IBE(350.8,"C",$E(X,1,30),DA)=""
"^DD",350.8,350.8,.03,1,2,2)
K ^IBE(350.8,"C",$E(X,1,30),DA)
"^DD",350.8,350.8,.03,3)
Answer must be 1-9 characters in length.
"^DD",350.8,350.8,.03,21,0)
^^9^9^2920219^^^^
"^DD",350.8,350.8,.03,21,1,0)
This is the error code that will be passed to or determined by
"^DD",350.8,350.8,.03,21,2,0)
Integrated Billing.  The format for the Error Code should be
"^DD",350.8,350.8,.03,21,3,0)
nnxxx, where nn is the reporting package namespace and xxx are numeric
"^DD",350.8,350.8,.03,21,4,0)
values.
"^DD",350.8,350.8,.03,21,5,0)
 
"^DD",350.8,350.8,.03,21,6,0)
This is the error code that will be passed as the second piece of
"^DD",350.8,350.8,.03,21,7,0)
the variable Y to IB when +Y=-1.  More than one error code can be
"^DD",350.8,350.8,.03,21,8,0)
placed in the second ^ piece of Y delimited by semi-colons.  Applications
"^DD",350.8,350.8,.03,21,9,0)
may call ^IBAERR to display the error message(s).
"^DD",350.8,350.8,.03,"DT")
2920219
"^DD",350.8,350.8,.04,0)
PACKAGE REPORTING ERROR^S^1:INTEGRATED BILLING;2:ACCOUNTS RECEIVABLE;3:PHARMACY;^0;4^Q
"^DD",350.8,350.8,.04,21,0)
^^2^2^2920415^^^
"^DD",350.8,350.8,.04,21,1,0)
This is the package that requested this entry in this file and will
"^DD",350.8,350.8,.04,21,2,0)
report it to IB as an error if the conditions are detected.
"^DD",350.8,350.8,.05,0)
ERROR ACTION^S^1:DISPLAY MESSAGE;2:SEND BULLETIN;3:EDIT FILE;^0;5^Q
"^DD",350.8,350.8,.05,21,0)
^^6^6^2910227^
"^DD",350.8,350.8,.05,21,1,0)
This is the type of action that should be taken when this error is
"^DD",350.8,350.8,.05,21,2,0)
reported to IB.  If action other than displaying a message is indicated
"^DD",350.8,350.8,.05,21,3,0)
then the MUMPS code in the ERROR ACTION field will be executed.
"^DD",350.8,350.8,.05,21,4,0)
 
"^DD",350.8,350.8,.05,21,5,0)
Currently only display actions are implemented.  Please contact the 
"^DD",350.8,350.8,.05,21,6,0)
developing ISC if other action types are desired.
"^DD",350.8,350.8,.06,0)
CORRESPONDING ALERT^P354.5'^IBE(354.5,^0;6^Q
"^DD",350.8,350.8,.06,21,0)
^^1^1^2940209^
"^DD",350.8,350.8,.06,21,1,0)
This is the type of alert that should be sent when this error occurs.
"^DD",350.8,350.8,.06,"DT")
2930322
"^DD",350.8,350.8,10,0)
EXECUTABLE LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",350.8,350.8,10,3)
This is Standard MUMPS code.
"^DD",350.8,350.8,10,21,0)
^^2^2^2910227^
"^DD",350.8,350.8,10,21,1,0)
This is the MUMPS code that will be executed if an error is reported
"^DD",350.8,350.8,10,21,2,0)
with an ERROR ACTION of other than to display a message.
"^DD",355.93,355.93,40,0)
DATE/TIME OF LAST NPI CHANGE^355.9301DA^^NPISTATUS;0
"^DD",355.93,355.93,41.01,0)
NPI^FX^^0;14^K:$L(X)>10!($L(X)<10)!'$$CHKDGT^XUSNPI(X)!$$NPIUSED^IBCEP81(X) X
"^DD",355.93,355.93,41.01,1,0)
^.1
"^DD",355.93,355.93,41.01,1,1,0)
355.93^NPI
"^DD",355.93,355.93,41.01,1,1,1)
S ^IBA(355.93,"NPI",$E(X,1,30),DA)=""
"^DD",355.93,355.93,41.01,1,1,2)
K ^IBA(355.93,"NPI",$E(X,1,30),DA)
"^DD",355.93,355.93,41.01,1,1,"%D",0)
^^1^1^3060914^
"^DD",355.93,355.93,41.01,1,1,"%D",1,0)
This cross reference holds a list of the active NPIs in this file.
"^DD",355.93,355.93,41.01,1,1,"DT")
3060728
"^DD",355.93,355.93,41.01,1,2,0)
355.93^NPIHISTORY
"^DD",355.93,355.93,41.01,1,2,1)
S ^IBA(355.93,"NPIHISTORY",$E(X,1,30),DA)=""
"^DD",355.93,355.93,41.01,1,2,2)
K ^IBA(355.93,"NPIHISTORY",$E(X,1,30),DA)
"^DD",355.93,355.93,41.01,1,2,3)
An entry into the NPI History cross reference should not be deleted
"^DD",355.93,355.93,41.01,1,2,"%D",0)
^.101^2^2^3060914^^
"^DD",355.93,355.93,41.01,1,2,"%D",1,0)
This cross reference holds the entire history of the NPIs used in the 
"^DD",355.93,355.93,41.01,1,2,"%D",2,0)
file.
"^DD",355.93,355.93,41.01,1,2,"DT")
3060914
"^DD",355.93,355.93,41.01,3)
Answer must be 10 characters in length and a valid unique NPI number.
"^DD",355.93,355.93,41.01,21,0)
^.001^2^2^3060728^^
"^DD",355.93,355.93,41.01,21,1,0)
Unique National Provider Identifier.  A unique integer assigned to a 
"^DD",355.93,355.93,41.01,21,2,0)
provider by CMS.  This field contains the current NPI for this provider.
"^DD",355.93,355.93,41.01,"DT")
3060914
"^DD",355.93,355.93,42,0)
TAXONOMY CODE^355.9342IP^^TAXONOMY;0
"^DD",355.93,355.9301,0)
DATE/TIME OF LAST NPI CHANGE SUB-FIELD^^.04^4
"^DD",355.93,355.9301,0,"DT")
3061218
"^DD",355.93,355.9301,0,"IX","B",355.9301,.01)

"^DD",355.93,355.9301,0,"IX","C",355.9301,.03)

"^DD",355.93,355.9301,0,"IX","NPISTATUS",355.9301,.02)

"^DD",355.93,355.9301,0,"NM","DATE/TIME OF LAST NPI CHANGE")

"^DD",355.93,355.9301,0,"UP")
355.93
"^DD",355.93,355.9301,.01,0)
DATE/TIME OF LAST NPI CHANGE^D^^0;1^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",355.93,355.9301,.01,1,0)
^.1
"^DD",355.93,355.9301,.01,1,1,0)
355.9301^B
"^DD",355.93,355.9301,.01,1,1,1)
S ^IBA(355.93,DA(1),"NPISTATUS","B",$E(X,1,30),DA)=""
"^DD",355.93,355.9301,.01,1,1,2)
K ^IBA(355.93,DA(1),"NPISTATUS","B",$E(X,1,30),DA)
"^DD",355.93,355.9301,.01,3)
Enter the date/time of the last change to this NPI.
"^DD",355.93,355.9301,.01,21,0)
^^1^1^3061218^
"^DD",355.93,355.9301,.01,21,1,0)
This is the date and time of the last change to the NPI value.
"^DD",355.93,355.9301,.01,"DT")
3061218
"^DD",355.93,355.9301,.02,0)
STATUS^S^1:ACTIVE;0:INACTIVE;2:DELETED;^0;2^Q
"^DD",355.93,355.9301,.02,1,0)
^.1
"^DD",355.93,355.9301,.02,1,1,0)
355.9301^NPISTATUS
"^DD",355.93,355.9301,.02,1,1,1)
S ^IBA(355.93,DA(1),"NPISTATUS","NPISTATUS",$E(X,1,30),DA)=""
"^DD",355.93,355.9301,.02,1,1,2)
K ^IBA(355.93,DA(1),"NPISTATUS","NPISTATUS",$E(X,1,30),DA)
"^DD",355.93,355.9301,.02,1,1,"%D",0)
^^1^1^3061218^
"^DD",355.93,355.9301,.02,1,1,"%D",1,0)
This cross reference is for identifying active, inactive, or deleted NPIs.
"^DD",355.93,355.9301,.02,1,1,"DT")
3061218
"^DD",355.93,355.9301,.02,3)
Enter a 1 for 'ACTIVE', 0 for 'INACTIVE', or 2 for 'DELETED'
"^DD",355.93,355.9301,.02,21,0)
^^6^6^3061218^
"^DD",355.93,355.9301,.02,21,1,0)
The Status of an NPI is either 'ACTIVE', 'INACTIVE', or 'DELETED'.  If 
"^DD",355.93,355.9301,.02,21,2,0)
'ACTIVE', then the NPI will be accessible by end-users to document a 
"^DD",355.93,355.9301,.02,21,3,0)
particular provider. If 'INACTIVE', then the NPI will only be accessible 
"^DD",355.93,355.9301,.02,21,4,0)
by the application to display legacy data. If 'DELETED', then the NPI is 
"^DD",355.93,355.9301,.02,21,5,0)
an audit trail showing that the NPI was at one time incorrectly entered 
"^DD",355.93,355.9301,.02,21,6,0)
for this provider.
"^DD",355.93,355.9301,.02,"DT")
3061218
"^DD",355.93,355.9301,.03,0)
NPI^FX^^0;3^K:$L(X)>10!($L(X)<10)!('$$CHKDGT^XUSNPI(X)) X
"^DD",355.93,355.9301,.03,1,0)
^.1
"^DD",355.93,355.9301,.03,1,1,0)
355.9301^C
"^DD",355.93,355.9301,.03,1,1,1)
S ^IBA(355.93,DA(1),"NPISTATUS","C",$E(X,1,30),DA)=""
"^DD",355.93,355.9301,.03,1,1,2)
K ^IBA(355.93,DA(1),"NPISTATUS","C",$E(X,1,30),DA)
"^DD",355.93,355.9301,.03,1,1,"%D",0)
^^3^3^3061218^
"^DD",355.93,355.9301,.03,1,1,"%D",1,0)
This x-ref (along with the NPI42 whole file x-ref) is used by Kernel when 
"^DD",355.93,355.9301,.03,1,1,"%D",2,0)
checking for existing NPI entries in this file before allowing them to be 
"^DD",355.93,355.9301,.03,1,1,"%D",3,0)
used in files 200 (NEW PERSON) or 4 (INSTITUTION).
"^DD",355.93,355.9301,.03,1,1,"DT")
3061218
"^DD",355.93,355.9301,.03,3)
Answer must be 10 characters in length.
"^DD",355.93,355.9301,.03,21,0)
^^5^5^3061218^
"^DD",355.93,355.9301,.03,21,1,0)
Unique National Provider Identifier. A unique integer assigned to 
"^DD",355.93,355.9301,.03,21,2,0)
providers by CMS. This field contains all of the NPIs associated with 
"^DD",355.93,355.9301,.03,21,3,0)
this provider. The current NPI will be set as active in the STATUS field 
"^DD",355.93,355.9301,.03,21,4,0)
of this multiple. All others will be set as inactive. There can only be 
"^DD",355.93,355.9301,.03,21,5,0)
one active NPI.
"^DD",355.93,355.9301,.03,"DT")
3061218
"^DD",355.93,355.9301,.04,0)
PERSON AFFECTING LAST CHANGE^P200'^VA(200,^0;4^Q
"^DD",355.93,355.9301,.04,3)
Enter the name of the person last changing this NPI.
"^DD",355.93,355.9301,.04,21,0)
^^1^1^3061218^
"^DD",355.93,355.9301,.04,21,1,0)
This is the name of the person who last changed the NPI.
"^DD",355.93,355.9301,.04,"DT")
3061218
"^DD",355.93,355.9342,0)
TAXONOMY CODE SUB-FIELD^^.03^3
"^DD",355.93,355.9342,0,"DT")
3060830
"^DD",355.93,355.9342,0,"ID","X12")

"^DD",355.93,355.9342,0,"IX","B",355.9342,.01)

"^DD",355.93,355.9342,0,"IX","D",355.9342,.02)

"^DD",355.93,355.9342,0,"NM","TAXONOMY CODE")

"^DD",355.93,355.9342,0,"UP")
355.93
"^DD",355.93,355.9342,.01,0)
TAXONOMY CODE^M*P8932.1'^USC(8932.1,^0;1^S DIC("S")="I $TR($P($G(^(90002)),U,2),""IN"",""21"")=$P(^IBA(355.93,DA(1),0),U,2)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",355.93,355.9342,.01,1,0)
^.1
"^DD",355.93,355.9342,.01,1,1,0)
355.9342^B
"^DD",355.93,355.9342,.01,1,1,1)
S ^IBA(355.93,DA(1),"TAXONOMY","B",$E(X,1,30),DA)=""
"^DD",355.93,355.9342,.01,1,1,2)
K ^IBA(355.93,DA(1),"TAXONOMY","B",$E(X,1,30),DA)
"^DD",355.93,355.9342,.01,3)
Enter the NUCC recognized taxonomy code
"^DD",355.93,355.9342,.01,12)
INDIVIDUAL/NON-INDIVIDUAL (FACILITY)
"^DD",355.93,355.9342,.01,12.1)
S DIC("S")="I $TR($P($G(^(90002)),U,2),""IN"",""21"")=$P(^IBA(355.93,DA(1),0),U,2)"
"^DD",355.93,355.9342,.01,21,0)
^.001^2^2^3060830^^^^
"^DD",355.93,355.9342,.01,21,1,0)
This multiple field holds the NUCC recognized taxonomy code for an 
"^DD",355.93,355.9342,.01,21,2,0)
individual or an organization.
"^DD",355.93,355.9342,.01,"DEL",1,0)
I 1 W *7,!,"TAXONOMY CODES SHOULD NOT BE DELETED. SET THE STATUS FLAG TO INACTIVE INSTEAD."
"^DD",355.93,355.9342,.01,"DT")
3060830
"^DD",355.93,355.9342,.02,0)
PRIMARY CODE^RS^1:YES;0:NO;^0;2^Q
"^DD",355.93,355.9342,.02,1,0)
^.1
"^DD",355.93,355.9342,.02,1,1,0)
355.9342^D^MUMPS
"^DD",355.93,355.9342,.02,1,1,1)
D XR^IBCEP82
"^DD",355.93,355.9342,.02,1,1,2)
D KXR^IBCEP82
"^DD",355.93,355.9342,.02,1,1,"%D",0)
^^2^2^3060613^
"^DD",355.93,355.9342,.02,1,1,"%D",1,0)
This x-ref is used to make sure that a maximum of one taxonomy is allowed 
"^DD",355.93,355.9342,.02,1,1,"%D",2,0)
to be marked as primary.
"^DD",355.93,355.9342,.02,1,1,"DT")
3060613
"^DD",355.93,355.9342,.02,3)
Enter a 1 if this is the provider's primary taxonomy code or a 0 for non-primary.
"^DD",355.93,355.9342,.02,21,0)
^.001^3^3^3060824^^
"^DD",355.93,355.9342,.02,21,1,0)
Only one code can be the primary taxonomy code for a provider.  When a 
"^DD",355.93,355.9342,.02,21,2,0)
specific taxonomy code is identified as the primary code then that 
"^DD",355.93,355.9342,.02,21,3,0)
code will be the default taxonomy code.
"^DD",355.93,355.9342,.02,"DT")
3060824
"^DD",355.93,355.9342,.03,0)
STATUS^RS^A:ACTIVE;I:INACTIVE;^0;3^Q
"^DD",355.93,355.9342,.03,1,0)
^.1
"^DD",355.93,355.9342,.03,1,1,0)
355.93^TAXSTATUS
"^DD",355.93,355.9342,.03,1,1,1)
S ^IBA(355.93,"TAXSTATUS",$E(X,1,30),DA(1),DA)=""
"^DD",355.93,355.9342,.03,1,1,2)
K ^IBA(355.93,"TAXSTATUS",$E(X,1,30),DA(1),DA)
"^DD",355.93,355.9342,.03,1,1,"DT")
3060501
"^DD",355.93,355.9342,.03,3)
Enter an 'A' for active code, or an 'I' for an inactive code.
"^DD",355.93,355.9342,.03,21,0)
^.001^5^5^3060824^^
"^DD",355.93,355.9342,.03,21,1,0)
If a taxonomy code listed for a provider is a currently active code (one
"^DD",355.93,355.9342,.03,21,2,0)
they use today), then the status should be marked with an 'A'.  At times a
"^DD",355.93,355.9342,.03,21,3,0)
provider will no longer use a taxonomy code.  This code will be marked
"^DD",355.93,355.9342,.03,21,4,0)
with an 'I' for inactive.  Codes should not be removed from a provider's
"^DD",355.93,355.9342,.03,21,5,0)
list.  They should be either active or inactive.
"^DD",355.93,355.9342,.03,"DT")
3060824
"^DD",355.97,355.97,0)
FIELD^^.07^17
"^DD",355.97,355.97,0,"DDA")
N
"^DD",355.97,355.97,0,"DT")
3051017
"^DD",355.97,355.97,0,"ID",.02)
W ""
"^DD",355.97,355.97,0,"ID",.03)
W "   ",$P(^(0),U,3)
"^DD",355.97,355.97,0,"IX","B",355.97,.01)

"^DD",355.97,355.97,0,"IX","C",355.97,.03)

"^DD",355.97,355.97,0,"NM","IB PROVIDER ID # TYPE")

"^DD",355.97,355.97,0,"PT",36,4.01)

"^DD",355.97,355.97,0,"PT",36,4.02)

"^DD",355.97,355.97,0,"PT",36,4.04)

"^DD",355.97,355.97,0,"PT",36,4.1)

"^DD",355.97,355.97,0,"PT",355.9,.06)

"^DD",355.97,355.97,0,"PT",355.91,.06)
 
"^DD",355.97,355.97,0,"PT",355.92,.06)

"^DD",355.97,355.97,0,"PT",355.93,.13)

"^DD",355.97,355.97,0,"PT",355.96,.06)

"^DD",355.97,355.97,0,"PT",399,128)

"^DD",355.97,355.97,0,"PT",399,129)

"^DD",355.97,355.97,0,"PT",399,130)

"^DD",355.97,355.97,0,"PT",399.0222,.12)

"^DD",355.97,355.97,0,"PT",399.0222,.13)

"^DD",355.97,355.97,0,"PT",399.0222,.14)

"^DD",355.97,355.97,0,"VRPK")
IB
"^DD",355.97,355.97,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",355.97,355.97,.01,1,0)
^.1
"^DD",355.97,355.97,.01,1,1,0)
355.97^B
"^DD",355.97,355.97,.01,1,1,1)
S ^IBE(355.97,"B",$E(X,1,30),DA)=""
"^DD",355.97,355.97,.01,1,1,2)
K ^IBE(355.97,"B",$E(X,1,30),DA)
"^DD",355.97,355.97,.01,3)
Answer must be 3-30 characters in length.
"^DD",355.97,355.97,.01,21,0)
^^1^1^3010724^
"^DD",355.97,355.97,.01,21,1,0)
This is the name used to describe the provider id type.
"^DD",355.97,355.97,.01,"DT")
3010724
"^DD",355.97,355.97,.02,0)
SOURCE LEVEL MINIMUM^RS^0:NONE;1:LICENSING/GOVT AGENCY - EACH PROV;2:FACILITY - ALL PROV;3:INSURANCE CO - ALL PROV;4:INSURANCE CO - EACH PROV;5:INSURANCE CO - ALL PROV BY CARE UNIT;^0;2^Q
"^DD",355.97,355.97,.02,3)
Enter the code that describes how this id type MUST be assigned or 0 for NO minimum requirements
"^DD",355.97,355.97,.02,21,0)
^.001^4^4^3031217^^^^
"^DD",355.97,355.97,.02,21,1,0)
This is the minimum level or criteria of data that MUST be used to search
"^DD",355.97,355.97,.02,21,2,0)
for this type of ID number for a provider.  If this field is zero or
"^DD",355.97,355.97,.02,21,3,0)
blank, there are no minimum data requirements to search for an ID for
"^DD",355.97,355.97,.02,21,4,0)
this id type.
"^DD",355.97,355.97,.02,"DT")
3031217
"^DD",355.97,355.97,.03,0)
X12 CODE^F^^0;3^K:$L(X)>2!($L(X)<1) X
"^DD",355.97,355.97,.03,1,0)
^.1
"^DD",355.97,355.97,.03,1,1,0)
355.97^C
"^DD",355.97,355.97,.03,1,1,1)
S ^IBE(355.97,"C",$E(X,1,30),DA)=""
"^DD",355.97,355.97,.03,1,1,2)
K ^IBE(355.97,"C",$E(X,1,30),DA)
"^DD",355.97,355.97,.03,1,1,"DT")
3051208
"^DD",355.97,355.97,.03,3)
Answer must be 1-2 characters in length.
"^DD",355.97,355.97,.03,21,0)
^^2^2^3000831^
"^DD",355.97,355.97,.03,21,1,0)
This is the X12 code that determines the qualifier to be output in the
"^DD",355.97,355.97,.03,21,2,0)
X12 data stream when reporting this type of provider ID number.
"^DD",355.97,355.97,.03,"DT")
3051208
"^DD",355.97,355.97,.04,0)
FACILITY'S DEFAULT ID #^F^^0;4^K:$L(X)>15!($L(X)<1) X
"^DD",355.97,355.97,.04,3)
Answer must be 1-15 characters in length.
"^DD",355.97,355.97,.04,21,0)
^.001^3^3^3001004^^^
"^DD",355.97,355.97,.04,21,1,0)
This is the number that will be the default for all providers for the
"^DD",355.97,355.97,.04,21,2,0)
id type at the facility if no number exists for the specific
"^DD",355.97,355.97,.04,21,3,0)
provider/ins. co/care unit combination.
"^DD",355.97,355.97,.04,"DT")
3000907
"^DD",355.97,355.97,.05,0)
RESTRICT EDITING^S^0:NO;1:YES;^0;5^Q
"^DD",355.97,355.97,.05,3)
Enter 1 (YES) to prevent users from editing this id type's id #'s at the facility level
"^DD",355.97,355.97,.05,21,0)
^.001^2^2^3010207^^
"^DD",355.97,355.97,.05,21,1,0)
This field controls whether or not users may edit the id #'s for the
"^DD",355.97,355.97,.05,21,2,0)
provider type at the facility level.
"^DD",355.97,355.97,.05,"DT")
3010207
"^DD",355.97,355.97,.06,0)
VALID FOR PERFORMING PROVIDER^S^0:NO;1:YES;^0;6^Q
"^DD",355.97,355.97,.06,3)
ENTER YES (1) IF THE ID TYPE IS VALID FOR PERFORMING ID
"^DD",355.97,355.97,.06,21,0)
^^2^2^3010509^
"^DD",355.97,355.97,.06,21,1,0)
This field indicates whether the id type is valid for performing
"^DD",355.97,355.97,.06,21,2,0)
provider ids.
"^DD",355.97,355.97,.06,"DT")
3010509
"^DD",355.97,355.97,.07,0)
ALLOWABLE FORM TYPE^S^I:INSTITUTIONAL;P:PROFESSIONAL;B:BOTH INSTITUTIONAL AND PROFESSIONAL;^0;7^Q
"^DD",355.97,355.97,.07,3)
Enter I if this is used on UB type forms, P if used on CMS/HCFA type forms, or B if used on either type.
"^DD",355.97,355.97,.07,21,0)
^^2^2^3060309^
"^DD",355.97,355.97,.07,21,1,0)
This is a flag used to determine what type of form this qualifier is 
"^DD",355.97,355.97,.07,21,2,0)
valid for.  It is used to validate provider id file set-up.
"^DD",355.97,355.97,.07,"DT")
3060309
"^DD",355.97,355.97,.08,0)
ACTIVE^S^1:YES;0:NO;^0;8^Q
"^DD",355.97,355.97,.08,3)
Enter YES if this entry is Active or NO if it is In-Active
"^DD",355.97,355.97,.08,21,0)
^^2^2^3060419^
"^DD",355.97,355.97,.08,21,1,0)
This field must be set to YES to allow this qualifier to be selected.  Old
"^DD",355.97,355.97,.08,21,2,0)
entries that are no longer allowed should be set to NO.
"^DD",355.97,355.97,.08,"DT")
3060419
"^DD",355.97,355.97,1.01,0)
STATE DEA#^SI^0:NO;1:YES;^1;1^Q
"^DD",355.97,355.97,1.01,3)
Enter a 1 (yes) if this is a state DEA # id type
"^DD",355.97,355.97,1.01,21,0)
^^2^2^3000907^
"^DD",355.97,355.97,1.01,21,1,0)
This is the flag that tells the system this id type is a state DEA # and
"^DD",355.97,355.97,1.01,21,2,0)
the data is stored in the NEW PERSON file by state.
"^DD",355.97,355.97,1.01,"DT")
3000907
"^DD",355.97,355.97,1.02,0)
FEDERAL DEA#^SI^0:NO;1:YES;^1;2^Q
"^DD",355.97,355.97,1.02,3)
Enter a 1 (yes) if this is a federal DEA # id type
"^DD",355.97,355.97,1.02,21,0)
^.001^2^2^3010108^^^
"^DD",355.97,355.97,1.02,21,1,0)
This is the flag that tells the system this id type is a federal DEA #
"^DD",355.97,355.97,1.02,21,2,0)
and the data is stored in the NEW PERSON file.             
"^DD",355.97,355.97,1.02,"DT")
3010108
"^DD",355.97,355.97,1.03,0)
STATE LICENSE #^SI^0:NO;1:YES;^1;3^Q
"^DD",355.97,355.97,1.03,3)
Enter a 1 (yes) if this is a state license # id type
"^DD",355.97,355.97,1.03,21,0)
^^2^2^3000907^
"^DD",355.97,355.97,1.03,21,1,0)
This is the flag that tells the system this id type is a state license #
"^DD",355.97,355.97,1.03,21,2,0)
and the data is stored in the NEW PERSON file by state.             
"^DD",355.97,355.97,1.03,"DT")
3000907
"^DD",355.97,355.97,1.04,0)
FEDERAL TAX # - FACILITY^SI^0:NO;1:YES;^1;4^Q
"^DD",355.97,355.97,1.04,3)
Enter a 1 (yes) if this is a facility federal tax id # id type
"^DD",355.97,355.97,1.04,21,0)
^.001^2^2^3001004^^
"^DD",355.97,355.97,1.04,21,1,0)
This is the flag that tells the system this id type is a facility
"^DD",355.97,355.97,1.04,21,2,0)
federal tax id and the data is stored in the IB SITE PARAMETERS file.
"^DD",355.97,355.97,1.04,"DT")
3000907
"^DD",355.97,355.97,1.05,0)
EMC ID TYPE^S^0:NO;1:YES;^1;5^Q
"^DD",355.97,355.97,1.05,3)
Enter yes if this type is for EMC ID #
"^DD",355.97,355.97,1.05,21,0)
^^1^1^3000913^
"^DD",355.97,355.97,1.05,21,1,0)
This is a flag to indicate if the record is for an EMC ID #
"^DD",355.97,355.97,1.05,"DT")
3000913
"^DD",355.97,355.97,1.06,0)
NETWORK ID TYPE^S^0:NO;1:YES;^1;6^Q
"^DD",355.97,355.97,1.06,3)
Enter yes if this type is for Network ID #
"^DD",355.97,355.97,1.06,21,0)
^^1^1^3000913^
"^DD",355.97,355.97,1.06,21,1,0)
This is a flag to indicate if the record is for a network id #.
"^DD",355.97,355.97,1.06,"DT")
3000913
"^DD",355.97,355.97,1.07,0)
PROVIDER'S OWN ID^S^0:NO;1:YES;^1;7^Q
"^DD",355.97,355.97,1.07,3)
ENTER YES (1) IF THE ID IS A PROVIDER'S PERSONAL #
"^DD",355.97,355.97,1.07,21,0)
^^2^2^3010427^
"^DD",355.97,355.97,1.07,21,1,0)
This is the flag that designates an id type is a personal # for the
"^DD",355.97,355.97,1.07,21,2,0)
provider, not assigned by the facility or an insurance co
"^DD",355.97,355.97,1.07,"DT")
3010427
"^DD",355.97,355.97,1.08,0)
STORED OUTSIDE OF BILLING^S^0:NO;1:YES;^1;8^Q
"^DD",355.97,355.97,1.08,3)
ENTER 1 IF THIS PROVIDER ID DATA IS NOT STORED IN IB FILES
"^DD",355.97,355.97,1.08,21,0)
^^2^2^3010427^
"^DD",355.97,355.97,1.08,21,1,0)
This is the flag that specifies the provider id data is not stored in an
"^DD",355.97,355.97,1.08,21,2,0)
IB file.
"^DD",355.97,355.97,1.08,"DT")
3010427
"^DD",355.97,355.97,1.09,0)
BILLING PROVIDER PRIMARY ID^S^0:NO;1:YES;^1;9^Q
"^DD",355.97,355.97,1.09,3)
Enter a 1 if this is the billing provider's primary id record
"^DD",355.97,355.97,1.09,21,0)
^^2^2^3040611^
"^DD",355.97,355.97,1.09,21,1,0)
This field is a 1 (YES) if this is the provider id type that represents
"^DD",355.97,355.97,1.09,21,2,0)
the billing provider's primary id.
"^DD",355.97,355.97,1.09,"DT")
3040611
"^DD",364.5,364.5,0)
FIELD^^3^11
"^DD",364.5,364.5,0,"DDA")
N
"^DD",364.5,364.5,0,"DT")
2960311
"^DD",364.5,364.5,0,"ID",.05)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DIC(+$P(^(0),U,5),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(1,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.5,364.5,0,"IX","B",364.5,.01)

"^DD",364.5,364.5,0,"NM","IB DATA ELEMENT DEFINITION")

"^DD",364.5,364.5,0,"PT",364.7,.03)

"^DD",364.5,364.5,0,"VRPK")
IB
"^DD",364.5,364.5,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",364.5,364.5,.01,1,0)
^.1
"^DD",364.5,364.5,.01,1,1,0)
364.5^B
"^DD",364.5,364.5,.01,1,1,1)
S ^IBA(364.5,"B",$E(X,1,30),DA)=""
"^DD",364.5,364.5,.01,1,1,2)
K ^IBA(364.5,"B",$E(X,1,30),DA)
"^DD",364.5,364.5,.01,3)
Answer must be 3-30 characters in length.
"^DD",364.5,364.5,.01,21,0)
^^1^1^2951205^
"^DD",364.5,364.5,.01,21,1,0)
The name to be used to uniquely identify this data element.
"^DD",364.5,364.5,.01,"DT")
2951219
"^DD",364.5,364.5,.02,0)
SECURITY LEVEL^RS^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.5,364.5,.02,21,0)
^^2^2^2960215^^^^
"^DD",364.5,364.5,.02,21,1,0)
If this field is set to N (NATIONAL,NO EDIT), this is a secured data
"^DD",364.5,364.5,.02,21,2,0)
element and will not be allowed to be edited or deleted.
"^DD",364.5,364.5,.02,"DT")
2960215
"^DD",364.5,364.5,.03,0)
TYPE OF ELEMENT^RS^F:NON-MULTIPLE FILEMAN FIELD;E:EXTRACTED VIA CODE;C:CONSTANT VALUE;^0;3^Q
"^DD",364.5,364.5,.03,1,0)
^.1
"^DD",364.5,364.5,.03,1,1,0)
^^TRIGGER^364.5^.04
"^DD",364.5,364.5,.03,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X="FC",Y(1)=X S X=Y(0),X=X S Y=X,X=Y(1),X=X S X=X[Y I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X="I" X ^DD(364.5,.03,1,1,1.4)
"^DD",364.5,364.5,.03,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=364.5,DIG=.04 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,1,2)
Q
"^DD",364.5,364.5,.03,1,1,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,1,"%D",0)
^^1^1^2960215^
"^DD",364.5,364.5,.03,1,1,"%D",1,0)
If TYPE OF ELEMENT is 'F' or 'C' then ELEMENT CATEGORY must be 'I'. 
"^DD",364.5,364.5,.03,1,1,"CREATE CONDITION")
"FC"[INTERNAL(TYPE OF ELEMENT)
"^DD",364.5,364.5,.03,1,1,"CREATE VALUE")
S X="I"
"^DD",364.5,364.5,.03,1,1,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,1,"DT")
2960215
"^DD",364.5,364.5,.03,1,1,"FIELD")
ELEMENT CATEGORY
"^DD",364.5,364.5,.03,1,2,0)
^^TRIGGER^364.5^.06
"^DD",364.5,364.5,.03,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="F" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,2,1.4)
"^DD",364.5,364.5,.03,1,2,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.5,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,2,2)
Q
"^DD",364.5,364.5,.03,1,2,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,2,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,2,"%D",1,0)
This triggers the FILEMAN FIELD REFERENCE field to null if the element type
"^DD",364.5,364.5,.03,1,2,"%D",2,0)
is not FILEMAN field type of element.
"^DD",364.5,364.5,.03,1,2,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="F"
"^DD",364.5,364.5,.03,1,2,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,2,"DT")
2960215
"^DD",364.5,364.5,.03,1,2,"FIELD")
FILEMAN FIELD REFERENCE
"^DD",364.5,364.5,.03,1,3,0)
^^TRIGGER^364.5^.08
"^DD",364.5,364.5,.03,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="C" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,3,1.4)
"^DD",364.5,364.5,.03,1,3,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=364.5,DIG=.08 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,3,2)
Q
"^DD",364.5,364.5,.03,1,3,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,3,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,3,"%D",1,0)
This triggers the CONSTANT VALUE field to null if the element type is not
"^DD",364.5,364.5,.03,1,3,"%D",2,0)
CONSTANT type of element.
"^DD",364.5,364.5,.03,1,3,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="C"
"^DD",364.5,364.5,.03,1,3,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,3,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,3,"DT")
2960215
"^DD",364.5,364.5,.03,1,3,"FIELD")
CONSTANT VALUE
"^DD",364.5,364.5,.03,1,4,0)
^^TRIGGER^364.5^1
"^DD",364.5,364.5,.03,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="E" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,1)):^(1),1:"") S X=$E(Y(1),1,245),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,4,1.4)
"^DD",364.5,364.5,.03,1,4,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),1)):^(1),1:""),DIV=X S DE=0-$L(DIH),DIU=$E(DIH,1,245),Y=$E(DIH,246,999),^(1)=$J("",$S(DE>0:DE,1:0))_DIV_$S(Y?." ":"",1:$J("",245-$L(DIV))_Y),DIH=364.5,DIG=1 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,4,2)
Q
"^DD",364.5,364.5,.03,1,4,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,4,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,4,"%D",1,0)
This triggers the EXTRACT CODE field to null if the element type is not an
"^DD",364.5,364.5,.03,1,4,"%D",2,0)
EXTRACTED VIA CODE type of element.
"^DD",364.5,364.5,.03,1,4,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="E"
"^DD",364.5,364.5,.03,1,4,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,4,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,4,"DT")
2960215
"^DD",364.5,364.5,.03,1,4,"FIELD")
EXTRACT CODE
"^DD",364.5,364.5,.03,21,0)
^^3^3^2951207^^
"^DD",364.5,364.5,.03,21,1,0)
The type of data element being defined as needed by one or more forms.  This
"^DD",364.5,364.5,.03,21,2,0)
field determines the type of retrieval needed to get the actual data element's
"^DD",364.5,364.5,.03,21,3,0)
value for a given bill.
"^DD",364.5,364.5,.03,"DT")
2960215
"^DD",364.5,364.5,.04,0)
ELEMENT CATEGORY^RSX^I:INDIVIDUAL ELEMENT;G:GROUP ELEMENT;^0;4^I $P($G(^IBA(364.5,DA,0)),U,3)="F",$G(X)="G" K X
"^DD",364.5,364.5,.04,1,0)
^.1
"^DD",364.5,364.5,.04,1,1,0)
^^TRIGGER^364.5^.06
"^DD",364.5,364.5,.04,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X="G" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.5,.04,1,1,1.4)
"^DD",364.5,364.5,.04,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.5,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.04,1,1,2)
Q
"^DD",364.5,364.5,.04,1,1,"CREATE CONDITION")
INTERNAL(ELEMENT CATEGORY)="G"
"^DD",364.5,364.5,.04,1,1,"CREATE VALUE")
""
"^DD",364.5,364.5,.04,1,1,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.04,1,1,"FIELD")
FILEMAN FIELD REFERENCE
"^DD",364.5,364.5,.04,3)
This indicates an INDIVIDUAL or GROUP of elements will be returned.  Group is not valid for Fileman type elements.
"^DD",364.5,364.5,.04,5,1,0)
364.5^.03^1
"^DD",364.5,364.5,.04,21,0)
^^3^3^2951205^
"^DD",364.5,364.5,.04,21,1,0)
This defines whether the data element to be extracted is a single piece of data
"^DD",364.5,364.5,.04,21,2,0)
or is a string of related data.  Fileman field references must be designated as
"^DD",364.5,364.5,.04,21,3,0)
individual elements.
"^DD",364.5,364.5,.04,"DT")
2960215
"^DD",364.5,364.5,.05,0)
BASE FILE^P1'^DIC(^0;5^Q
"^DD",364.5,364.5,.05,3)
Enter the Fileman file to be used as a 'base' to extract the data from.
"^DD",364.5,364.5,.05,21,0)
^^2^2^2960311^
"^DD",364.5,364.5,.05,21,1,0)
This is the number of the Fileman file to be used as a 'base' to extract
"^DD",364.5,364.5,.05,21,2,0)
data for this field.
"^DD",364.5,364.5,.05,"DT")
2960311
"^DD",364.5,364.5,.06,0)
FILEMAN FIELD REFERENCE^FX^^0;6^K:$L(X)>65!($L(X)<1) X I $D(X),$P($G(^IBA(364.5,DA,0)),U,4)="G" K X
"^DD",364.5,364.5,.06,1,0)
^.1
"^DD",364.5,364.5,.06,1,1,0)
^^TRIGGER^364.5^.07
"^DD",364.5,364.5,.06,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0)="" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(364.5,.06,1,1,1.4)
"^DD",364.5,364.5,.06,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=364.5,DIG=.07 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.06,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(364.5,.06,1,1,2.4)
"^DD",364.5,364.5,.06,1,1,2.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=364.5,DIG=.07 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.06,1,1,"CREATE CONDITION")
FILEMAN FIELD REFERENCE=""
"^DD",364.5,364.5,.06,1,1,"CREATE VALUE")
@
"^DD",364.5,364.5,.06,1,1,"DELETE VALUE")
@
"^DD",364.5,364.5,.06,1,1,"FIELD")
#.07
"^DD",364.5,364.5,.06,3)
Must be a valid Fileman reference and ELEMENT CATEGORY must not be GROUP.
"^DD",364.5,364.5,.06,5,1,0)
364.5^.04^1
"^DD",364.5,364.5,.06,5,2,0)
364.5^.03^2
"^DD",364.5,364.5,.06,21,0)
^^6^6^2951221^^^
"^DD",364.5,364.5,.06,21,1,0)
The valid Fileman field reference or simple Fileman navigation to be used
"^DD",364.5,364.5,.06,21,2,0)
to extract using the $$GET^DIQ utility. Note this will not return true
"^DD",364.5,364.5,.06,21,3,0)
multiple entries.  Word-processing type fields are able to be retrieved,
"^DD",364.5,364.5,.06,21,4,0)
however.  No syntax check is made on this field so the user must be careful
"^DD",364.5,364.5,.06,21,5,0)
to type a valid Fileman expression.  This must be designated as an
"^DD",364.5,364.5,.06,21,6,0)
INDIVIDUAL element, not a group element.
"^DD",364.5,364.5,.06,"DT")
2951221
"^DD",364.5,364.5,.07,0)
FILEMAN RETURN FORMAT^S^I:INTERNAL;E:EXTERNAL;^0;7^Q
"^DD",364.5,364.5,.07,5,1,0)
364.5^.06^1
"^DD",364.5,364.5,.07,21,0)
^^5^5^2951205^
"^DD",364.5,364.5,.07,21,1,0)
This is the format for the retrieved data for Fileman-type data elements.  It
"^DD",364.5,364.5,.07,21,2,0)
is recommended to use Internal format whenever possible to keep the data
"^DD",364.5,364.5,.07,21,3,0)
element definitions in this file as generic as possible to avoid duplication.  
"^DD",364.5,364.5,.07,21,4,0)
The format capabilities of the forms generator should be used to interpret and
"^DD",364.5,364.5,.07,21,5,0)
reformat the data element when needed.
"^DD",364.5,364.5,.07,"DT")
2951205
"^DD",364.5,364.5,.08,0)
CONSTANT VALUE^F^^0;8^K:$L(X)>80!($L(X)<1) X
"^DD",364.5,364.5,.08,3)
Answer must be 1-80 characters in length.
"^DD",364.5,364.5,.08,5,1,0)
364.5^.03^3
"^DD",364.5,364.5,.08,21,0)
^^1^1^2951205^
"^DD",364.5,364.5,.08,21,1,0)
The specific value that this data element should return for this data element.
"^DD",364.5,364.5,.08,"DT")
2951205
"^DD",364.5,364.5,1,0)
EXTRACT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.5,364.5,1,3)
This is Standard MUMPS code.
"^DD",364.5,364.5,1,5,1,0)
364.5^.03^4
"^DD",364.5,364.5,1,9)
@
"^DD",364.5,364.5,1,21,0)
^^7^7^2951207^^^
"^DD",364.5,364.5,1,21,1,0)
The code to be executed by the forms generator to return the value(s) of the
"^DD",364.5,364.5,1,21,2,0)
data element.  If no ARRAY ROOT field is completed for this data element, the
"^DD",364.5,364.5,1,21,3,0)
code should set the variable IBXDATA or the array IBXDATA(1) through IBXDATA(n)
"^DD",364.5,364.5,1,21,4,0)
where n=the total # of iterations of the data element retrieved.  If the ARRAY 
"^DD",364.5,364.5,1,21,5,0)
ROOT field has been completed for this data element, this code should set the
"^DD",364.5,364.5,1,21,6,0)
variable referenced there.  IBXIEN is assumed to be the internal entry number
"^DD",364.5,364.5,1,21,7,0)
of the  file (referenced by the variable IBXFILE) entry.
"^DD",364.5,364.5,1,"DT")
2951205
"^DD",364.5,364.5,2,0)
ARRAY ROOT^F^^2;E1,50^K:$L(X)>50!($L(X)<1) X
"^DD",364.5,364.5,2,3)
Answer must be a valid array root name.
"^DD",364.5,364.5,2,21,0)
^^3^3^2960117^^
"^DD",364.5,364.5,2,21,1,0)
 The local or global base root where multiple-valued output or word processing
"^DD",364.5,364.5,2,21,2,0)
data is to be stored for this data element.  IBXDATA is the default if there
"^DD",364.5,364.5,2,21,3,0)
is no data in this field.  Example of a global array: ^TMP($J)
"^DD",364.5,364.5,2,"DT")
2960117
"^DD",364.5,364.5,3,0)
DESCRIPTION^364.53^^3;0
"^DD",364.5,364.53,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.5,364.53,0,"DT")
2951205
"^DD",364.5,364.53,0,"NM","DESCRIPTION")

"^DD",364.5,364.53,0,"UP")
364.5
"^DD",364.5,364.53,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",364.5,364.53,.01,3)
Enter a description of the data element being defined.
"^DD",364.5,364.53,.01,21,0)
^^1^1^2951205^
"^DD",364.5,364.53,.01,21,1,0)
This is a free text description of the data that this data element represents.
"^DD",364.5,364.53,.01,"DT")
2951205
"^DD",364.6,364.6,0)
FIELD^^.13^13
"^DD",364.6,364.6,0,"DDA")
N
"^DD",364.6,364.6,0,"DT")
3000216
"^DD",364.6,364.6,0,"ID",.04)
W "   ",$P(^(0),U,4)
"^DD",364.6,364.6,0,"ID",.05)
W "   ",$P(^(0),U,5)
"^DD",364.6,364.6,0,"ID",.08)
W "   ",$P(^(0),U,8)
"^DD",364.6,364.6,0,"ID",.1)
W "   ",$P(^(0),U,10)
"^DD",364.6,364.6,0,"IX","APAR",364.6,.01)

"^DD",364.6,364.6,0,"IX","APAR1",364.6,.03)

"^DD",364.6,364.6,0,"IX","ASEQ",364.6,.01)

"^DD",364.6,364.6,0,"IX","ASEQ1",364.6,.04)

"^DD",364.6,364.6,0,"IX","ASEQ2",364.6,.05)

"^DD",364.6,364.6,0,"IX","ASEQ3",364.6,.08)

"^DD",364.6,364.6,0,"IX","B",364.6,.01)

"^DD",364.6,364.6,0,"IX","C",364.6,.1)

"^DD",364.6,364.6,0,"NM","IB FORM SKELETON DEFINITION")
 
"^DD",364.6,364.6,0,"PT",364.6,.03)

"^DD",364.6,364.6,0,"PT",364.7,.01)

"^DD",364.6,364.6,0,"VRPK")
IB
"^DD",364.6,364.6,.01,0)
BILL FORM^RP353'X^IBE(353,^0;1^I $$DUP^IBCEFG0($G(DA),X,1) K X
"^DD",364.6,364.6,.01,1,0)
^.1
"^DD",364.6,364.6,.01,1,1,0)
364.6^B
"^DD",364.6,364.6,.01,1,1,1)
S ^IBA(364.6,"B",$E(X,1,30),DA)=""
"^DD",364.6,364.6,.01,1,1,2)
K ^IBA(364.6,"B",$E(X,1,30),DA)
"^DD",364.6,364.6,.01,1,2,0)
364.6^ASEQ^MUMPS
"^DD",364.6,364.6,.01,1,2,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)=""
"^DD",364.6,364.6,.01,1,2,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)
"^DD",364.6,364.6,.01,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,2,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.01,1,2,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.01,1,2,"DT")
2960116
"^DD",364.6,364.6,.01,1,3,0)
364.6^APAR^MUMPS
"^DD",364.6,364.6,.01,1,3,1)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X S ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)=""
"^DD",364.6,364.6,.01,1,3,2)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X K ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)
"^DD",364.6,364.6,.01,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,3,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.01,1,3,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.01,1,3,"DT")
2960117
"^DD",364.6,364.6,.01,1,4,0)
^^TRIGGER^364.6^.03
"^DD",364.6,364.6,.01,1,4,1)
X ^DD(364.6,.01,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$S('$D(D0):"",D0<0:"",1:D0) X ^DD(364.6,.01,1,4,1.4)
"^DD",364.6,364.6,.01,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,69.2) S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,1.4)
S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2)
X ^DD(364.6,.01,1,4,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,79.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,4,69.2)
S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3),Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"")
"^DD",364.6,364.6,.01,1,4,79.2)
S I(0,0)=$G(D0),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3)
"^DD",364.6,364.6,.01,1,4,"%D",0)
^^1^1^3000613^
"^DD",364.6,364.6,.01,1,4,"%D",1,0)
This trigger is needed for the local screen 9 logic to work correctly.
"^DD",364.6,364.6,.01,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"CREATE VALUE")
NUMBER
"^DD",364.6,364.6,.01,1,4,"DELETE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"DELETE VALUE")
@
"^DD",364.6,364.6,.01,1,4,"DT")
3000613
"^DD",364.6,364.6,.01,1,4,"FIELD")
ASSOCIATED FORM DEFINITION
"^DD",364.6,364.6,.01,3)
Enter a BILLING FORM that the data element will appear on.
"^DD",364.6,364.6,.01,21,0)
^^2^2^2960318^^^^
"^DD",364.6,364.6,.01,21,1,0)
Identifies a billing 'form' or 'screen' where the data element is used.
"^DD",364.6,364.6,.01,21,2,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.01,"DT")
3000613
"^DD",364.6,364.6,.02,0)
SECURITY LEVEL^SX^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^I X="N",$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.02,3)
Enter an N if no editing is allowed, L if editing is OK because this entry is associated with a locally defined form.
"^DD",364.6,364.6,.02,5,1,0)
364.6^.03^7
"^DD",364.6,364.6,.02,21,0)
^.001^4^4^3001030^^
"^DD",364.6,364.6,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  If
"^DD",364.6,364.6,.02,21,2,0)
the security level of the entry is NATIONAL (N), no local editing is
"^DD",364.6,364.6,.02,21,3,0)
allowed.  If the security level of the entry is LOCAL (L), it may be
"^DD",364.6,364.6,.02,21,4,0)
edited.
"^DD",364.6,364.6,.02,"DT")
2960117
"^DD",364.6,364.6,.03,0)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"^DD",364.6,364.6,.03,1,0)
^.1
"^DD",364.6,364.6,.03,1,1,0)
364.6^APAR1^MUMPS
"^DD",364.6,364.6,.03,1,1,1)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X S ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.03,1,1,2)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X K ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)
"^DD",364.6,364.6,.03,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,1,1,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.03,1,1,"DT")
2960117
"^DD",364.6,364.6,.03,1,2,0)
^^TRIGGER^364.6^.04
"^DD",364.6,364.6,.03,1,2,1)
X ^DD(364.6,.03,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,2,1.4)
"^DD",364.6,364.6,.03,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,2,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=364.6,DIG=.04 D ^DICR
"^DD",364.6,364.6,.03,1,2,2)
Q
"^DD",364.6,364.6,.03,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,2,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,2,"%D",0)
^.101^2^2^3000424^^
"^DD",364.6,364.6,.03,1,2,"%D",1,0)
If an associated form that is not a screen form, page is taken from the
"^DD",364.6,364.6,.03,1,2,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,2,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,2,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,2,"DT")
3000405
"^DD",364.6,364.6,.03,1,2,"FIELD")
PAGE OR SEQUENCE
"^DD",364.6,364.6,.03,1,3,0)
^^TRIGGER^364.6^.05
"^DD",364.6,364.6,.03,1,3,1)
X ^DD(364.6,.03,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,3,1.4)
"^DD",364.6,364.6,.03,1,3,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,3,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,3,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=364.6,DIG=.05 D ^DICR
"^DD",364.6,364.6,.03,1,3,2)
Q
"^DD",364.6,364.6,.03,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,3,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,3,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,3,"%D",1,0)
If an associated form that is not a screen form, line is taken from the
"^DD",364.6,364.6,.03,1,3,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,3,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,3,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,3,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,3,"DT")
3000405
"^DD",364.6,364.6,.03,1,3,"FIELD")
FIRST LINE NUMBER
"^DD",364.6,364.6,.03,1,4,0)
^^TRIGGER^364.6^.08
"^DD",364.6,364.6,.03,1,4,1)
X ^DD(364.6,.03,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,4,1.4)
"^DD",364.6,364.6,.03,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,4,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,4,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=364.6,DIG=.08 D ^DICR
"^DD",364.6,364.6,.03,1,4,2)
Q
"^DD",364.6,364.6,.03,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,4,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,4,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,4,"%D",1,0)
If an associated form that is not a screen form, column is taken from the
"^DD",364.6,364.6,.03,1,4,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,4,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,4,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,4,"DT")
3000405
"^DD",364.6,364.6,.03,1,4,"FIELD")
STARTING COLUMN
"^DD",364.6,364.6,.03,1,5,0)
^^TRIGGER^364.6^.09
"^DD",364.6,364.6,.03,1,5,1)
X ^DD(364.6,.03,1,5,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,5,1.4)
"^DD",364.6,364.6,.03,1,5,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,5,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,5,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,9)=DIV,DIH=364.6,DIG=.09 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,5,2)
Q
"^DD",364.6,364.6,.03,1,5,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,5,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,5,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,5,"%D",1,0)
If an associated form that is not a screen form, length is taken from the
"^DD",364.6,364.6,.03,1,5,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,5,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,5,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,5,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,5,"DT")
3000405
"^DD",364.6,364.6,.03,1,5,"FIELD")
LENGTH
"^DD",364.6,364.6,.03,1,6,0)
^^TRIGGER^364.6^.06
"^DD",364.6,364.6,.03,1,6,1)
X ^DD(364.6,.03,1,6,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,6,1.4)
"^DD",364.6,364.6,.03,1,6,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,6,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,6,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.6,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,6,2)
Q
"^DD",364.6,364.6,.03,1,6,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,6,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,6,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,6,"%D",1,0)
If associated form that is not a screen form, the max number lines is taken
"^DD",364.6,364.6,.03,1,6,"%D",2,0)
from the associated with field definition.
"^DD",364.6,364.6,.03,1,6,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,6,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,6,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,6,"DT")
3000405
"^DD",364.6,364.6,.03,1,6,"FIELD")
MAX NUMBER LINES
"^DD",364.6,364.6,.03,1,7,0)
^^TRIGGER^364.6^.02
"^DD",364.6,364.6,.03,1,7,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X="L" X ^DD(364.6,.03,1,7,1.4)
"^DD",364.6,364.6,.03,1,7,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=364.6,DIG=.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,7,2)
Q
"^DD",364.6,364.6,.03,1,7,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,7,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.03,1,7,"%D",1,0)
Only local entries can be associated.
"^DD",364.6,364.6,.03,1,7,"CREATE VALUE")
"L"
"^DD",364.6,364.6,.03,1,7,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,7,"DT")
2960117
"^DD",364.6,364.6,.03,1,7,"FIELD")
SECURITY LEVEL
"^DD",364.6,364.6,.03,3)
Enter the form definition record this definition will override.
"^DD",364.6,364.6,.03,5,1,0)
364.6^.01^4
"^DD",364.6,364.6,.03,21,0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,21,1,0)
The form definition record this definition will override.
"^DD",364.6,364.6,.03,"DT")
3000414
"^DD",364.6,364.6,.04,0)
PAGE OR SEQUENCE^FX^^0;4^K:$L(X)>20!($L(X)<1) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,2) K X
"^DD",364.6,364.6,.04,1,0)
^.1^^-1
"^DD",364.6,364.6,.04,1,1,0)
364.6^ASEQ1^MUMPS
"^DD",364.6,364.6,.04,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)=""
"^DD",364.6,364.6,.04,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)
"^DD",364.6,364.6,.04,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.04,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.04,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.04,1,1,"DT")
2960117
"^DD",364.6,364.6,.04,3)
This data must be 1-20 char long, can't be an assoc form, and must be a unique form/page/line/column.
"^DD",364.6,364.6,.04,5,1,0)
364.6^.03^2
"^DD",364.6,364.6,.04,21,0)
^^4^4^2960318^^^^
"^DD",364.6,364.6,.04,21,1,0)
This field is used to specify the page, section, transaction segment, etc.
"^DD",364.6,364.6,.04,21,2,0)
that the data element is to be associated with.  This field will be used as
"^DD",364.6,364.6,.04,21,3,0)
the second-level sort field when extracting data fields for this form.
"^DD",364.6,364.6,.04,21,4,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.04,"DT")
3000428
"^DD",364.6,364.6,.05,0)
FIRST LINE NUMBER^NJ4,0X^^0;5^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,3) K X
"^DD",364.6,364.6,.05,.1)
LINE
"^DD",364.6,364.6,.05,1,0)
^.1
"^DD",364.6,364.6,.05,1,1,0)
364.6^ASEQ2^MUMPS
"^DD",364.6,364.6,.05,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)=""
"^DD",364.6,364.6,.05,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)
"^DD",364.6,364.6,.05,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.05,1,1,"%D",0)
^^1^1^2960117^^^^
"^DD",364.6,364.6,.05,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.05,1,1,"DT")
2960117
"^DD",364.6,364.6,.05,3)
Type a # 0-9999, 0 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.05,5,1,0)
364.6^.03^3
"^DD",364.6,364.6,.05,21,0)
^^5^5^2960318^^^
"^DD",364.6,364.6,.05,21,1,0)
If this is a printed form, this is the first line number that this data
"^DD",364.6,364.6,.05,21,2,0)
element will appear on.  For transmitted forms, this is assumed to always
"^DD",364.6,364.6,.05,21,3,0)
be a 1.  This will be used as the third-level sort field when extracting
"^DD",364.6,364.6,.05,21,4,0)
data fields for this form.  The combination of form/page/line/column must
"^DD",364.6,364.6,.05,21,5,0)
be unique.
"^DD",364.6,364.6,.05,"DT")
3000428
"^DD",364.6,364.6,.06,0)
MAX NUMBER LINES^NJ3,0X^^0;6^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.06,3)
Type a Number between 0 and 999, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.06,5,1,0)
364.6^.03^6
"^DD",364.6,364.6,.06,21,0)
^^2^2^2951205^
"^DD",364.6,364.6,.06,21,1,0)
If a printed form, this is the highest numbered line number that this data
"^DD",364.6,364.6,.06,21,2,0)
element is allowed to print on.
"^DD",364.6,364.6,.06,"DT")
2960117
"^DD",364.6,364.6,.07,0)
LOCAL OVERRIDE ALLOWED^S^0:NO;1:YES;^0;7^Q
"^DD",364.6,364.6,.07,3)
Enter 0 (NO) to prevent local override, 1 to allow local override.
"^DD",364.6,364.6,.07,21,0)
^.001^2^2^3020822^^
"^DD",364.6,364.6,.07,21,1,0)
This controls whether or not the output forms generator will allow for a
"^DD",364.6,364.6,.07,21,2,0)
redefinition of this record via a local override.
"^DD",364.6,364.6,.07,"DT")
2960311
"^DD",364.6,364.6,.08,0)
STARTING COLUMN OR PIECE^NJ3,1X^^0;8^K:+X'=X!(X>999)!(X<0)!($S(X[".":X'?.E1"."1.2N,1:0)) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,4) K X
"^DD",364.6,364.6,.08,.1)
COLUMN
"^DD",364.6,364.6,.08,1,0)
^.1
"^DD",364.6,364.6,.08,1,1,0)
364.6^ASEQ3^MUMPS
"^DD",364.6,364.6,.08,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.08,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)
"^DD",364.6,364.6,.08,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.08,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.08,1,1,"DT")
2960117
"^DD",364.6,364.6,.08,1,2,0)
^^TRIGGER^364.6^.11
"^DD",364.6,364.6,.08,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0)["." I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=1 X ^DD(364.6,.08,1,2,1.4)
"^DD",364.6,364.6,.08,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,11)=DIV,DIH=364.6,DIG=.11 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.08,1,2,2)
Q
"^DD",364.6,364.6,.08,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,2,"%D",0)
^^2^2^2960126^^^
"^DD",364.6,364.6,.08,1,2,"%D",1,0)
If the starting column or piece is not a whole number, this must be a
"^DD",364.6,364.6,.08,1,2,"%D",2,0)
calculate only field - no output.
"^DD",364.6,364.6,.08,1,2,"CREATE CONDITION")
STARTING COLUMN OR PIECE["."
"^DD",364.6,364.6,.08,1,2,"CREATE VALUE")
S X=1
"^DD",364.6,364.6,.08,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.08,1,2,"DT")
2960126
"^DD",364.6,364.6,.08,1,2,"FIELD")
#.11
"^DD",364.6,364.6,.08,3)
Type a # 0-9999, 1-2 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.08,5,1,0)
364.6^.03^4
"^DD",364.6,364.6,.08,21,0)
^^5^5^2960318^^^^
"^DD",364.6,364.6,.08,21,1,0)
This is the column on the form, position in the data string (for non-printed
"^DD",364.6,364.6,.08,21,2,0)
forms) -  starting at position 1, or delimited piece that this data element
"^DD",364.6,364.6,.08,21,3,0)
is to be printed or stored in.  This will be used as the fourth-level sort
"^DD",364.6,364.6,.08,21,4,0)
field when extracting data fields for this form.  The combination of
"^DD",364.6,364.6,.08,21,5,0)
form/page/line/column must be unique.
"^DD",364.6,364.6,.08,"DT")
3000428
"^DD",364.6,364.6,.09,0)
LENGTH^NJ3,0X^^0;9^K:+X'=X!(X>250)!(X<1)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3),$P($G(^IBE(353,+^IBA(364.6,DA,0),2)),U,2)'="S" K X
"^DD",364.6,364.6,.09,3)
Type a Number between 1 and 250, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.09,5,1,0)
364.6^.03^5
"^DD",364.6,364.6,.09,21,0)
^^3^3^2951205^
"^DD",364.6,364.6,.09,21,1,0)
The length desired for the data element.  If present, this field will be used
"^DD",364.6,364.6,.09,21,2,0)
to truncate or pad the data element to this length after the element has been
"^DD",364.6,364.6,.09,21,3,0)
passed through the routine identified in the FORMAT ROUTINE field.
"^DD",364.6,364.6,.09,"DT")
3000111
"^DD",364.6,364.6,.1,0)
SHORT DESCRIPTION^F^^0;10^K:$L(X)>30!($L(X)<1) X
"^DD",364.6,364.6,.1,1,0)
^.1
"^DD",364.6,364.6,.1,1,1,0)
364.6^C
"^DD",364.6,364.6,.1,1,1,1)
S ^IBA(364.6,"C",$E(X,1,30),DA)=""
"^DD",364.6,364.6,.1,1,1,2)
K ^IBA(364.6,"C",$E(X,1,30),DA)
"^DD",364.6,364.6,.1,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.1,1,1,"%D",0)
^^1^1^2960123^
"^DD",364.6,364.6,.1,1,1,"%D",1,0)
Field name lookup
"^DD",364.6,364.6,.1,1,1,"DT")
2960123
"^DD",364.6,364.6,.1,3)
Answer must be 1-30 characters in length.
"^DD",364.6,364.6,.1,21,0)
^^2^2^2951207^
"^DD",364.6,364.6,.1,21,1,0)
This is a short description of the field that is used as an identifier to
"^DD",364.6,364.6,.1,21,2,0)
make lookups on this file meaningful.
"^DD",364.6,364.6,.1,"DT")
2960123
"^DD",364.6,364.6,.11,0)
CALCULATE ONLY OR OUTPUT^S^1:CALCULATE ONLY;0:OUTPUT;^0;11^Q
"^DD",364.6,364.6,.11,3)
Enter 1 if this field is used for calculation purposes and is not meant to be output
"^DD",364.6,364.6,.11,5,1,0)
364.6^.08^2
"^DD",364.6,364.6,.11,21,0)
^^4^4^2960715^^^^
"^DD",364.6,364.6,.11,21,1,0)
This field is set to 1 if there is a need to do a special extract or
"^DD",364.6,364.6,.11,21,2,0)
calculation at some point in the processing, but no output is desired
"^DD",364.6,364.6,.11,21,3,0)
from the field's code execution.  Used to set up arrays for group elements
"^DD",364.6,364.6,.11,21,4,0)
then the individual elements are output separately.
"^DD",364.6,364.6,.11,"DT")
2960715
"^DD",364.6,364.6,.12,0)
TRANSMIT IGNORES IF NULL^S^0:FALSE;1:TRUE;^0;12^Q
"^DD",364.6,364.6,.12,3)
Enter 1 (TRUE) if there should be no entry made in the output global if the data value of the element is null.
"^DD",364.6,364.6,.12,21,0)
^.001^5^5^3001030^^^
"^DD",364.6,364.6,.12,21,1,0)
This field can be used to suppress output of a field if its value is null.
"^DD",364.6,364.6,.12,21,2,0)
If not suppressed, an entry is made in the output global used by the
"^DD",364.6,364.6,.12,21,3,0)
formatter, regardless of the contents of the data for this field.
"^DD",364.6,364.6,.12,21,4,0)
Supressing the value results in no output to the formatter's output
"^DD",364.6,364.6,.12,21,5,0)
global if the value of the data for this field is determined to be null.
"^DD",364.6,364.6,.12,"DT")
2991006
"^DD",364.6,364.6,.13,0)
DATA REQUIRED FOR FIELD^S^1:YES;0:NO;^0;13^Q
"^DD",364.6,364.6,.13,3)
Enter yes if there should always be data in this field.
"^DD",364.6,364.6,.13,21,0)
^^2^2^3000216^
"^DD",364.6,364.6,.13,21,1,0)
This field is a flag that will stop the output of a record if this field
"^DD",364.6,364.6,.13,21,2,0)
indicates data is required and the data extracted is null.
"^DD",364.6,364.6,.13,"DT")
3000216
"^DD",364.7,364.7,0)
FIELD^^3^12
"^DD",364.7,364.7,0,"DDA")
N
"^DD",364.7,364.7,0,"DT")
2960710
"^DD",364.7,364.7,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBA(364.5,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(364.5,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.7,364.7,0,"IX","AINS",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINS1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINTYP1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP2",364.7,.06)

"^DD",364.7,364.7,0,"IX","ATYPE",364.7,.01)

"^DD",364.7,364.7,0,"IX","ATYPE1",364.7,.06)

"^DD",364.7,364.7,0,"IX","B",364.7,.01)

"^DD",364.7,364.7,0,"IX","C",364.7,.03)

"^DD",364.7,364.7,0,"NM","IB FORM FIELD CONTENT")
 
"^DD",364.7,364.7,0,"VRPK")
IB
"^DD",364.7,364.7,.01,0)
FORM FIELD REFERENCE^RP364.6'^IBA(364.6,^0;1^Q
"^DD",364.7,364.7,.01,1,0)
^.1
"^DD",364.7,364.7,.01,1,1,0)
364.7^B
"^DD",364.7,364.7,.01,1,1,1)
S ^IBA(364.7,"B",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.01,1,1,2)
K ^IBA(364.7,"B",$E(X,1,30),DA)
"^DD",364.7,364.7,.01,1,2,0)
364.7^ATYPE^MUMPS
"^DD",364.7,364.7,.01,1,2,1)
N Z1,Z0 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3),'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,2,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,2,"%D",0)
^^1^1^2980104^^^^
"^DD",364.7,364.7,.01,1,2,"%D",1,0)
Xref by form and bill type
"^DD",364.7,364.7,.01,1,2,"DT")
2960117
"^DD",364.7,364.7,.01,1,3,0)
364.7^AINTYP^MUMPS
"^DD",364.7,364.7,.01,1,3,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) S ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)=""
"^DD",364.7,364.7,.01,1,3,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)
"^DD",364.7,364.7,.01,1,3,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,3,"%D",0)
^^1^1^2971231^^^
"^DD",364.7,364.7,.01,1,3,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.01,1,3,"DT")
2960117
"^DD",364.7,364.7,.01,1,4,0)
364.7^AINS^MUMPS
"^DD",364.7,364.7,.01,1,4,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3),$P(Z0,U,6)="" S ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,4,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,4,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,4,"%D",0)
^^1^1^2971231^^
"^DD",364.7,364.7,.01,1,4,"%D",1,0)
Xref by form field and insurance company
"^DD",364.7,364.7,.01,1,4,"DT")
2960118
"^DD",364.7,364.7,.01,3)
Enter the billing form that this field is associated with
"^DD",364.7,364.7,.01,21,0)
^^2^2^2951207^^^^
"^DD",364.7,364.7,.01,21,1,0)
This is a pointer to the billing form field that this field is associated
"^DD",364.7,364.7,.01,21,2,0)
with.
"^DD",364.7,364.7,.01,"DT")
3000428
"^DD",364.7,364.7,.02,0)
SECURITY LEVEL^S^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.7,364.7,.02,3)
Enter N for nationally released fields (no edit) or L for locally added fields.
"^DD",364.7,364.7,.02,21,0)
^^3^3^2951219^^^
"^DD",364.7,364.7,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  For
"^DD",364.7,364.7,.02,21,2,0)
NATIONAL (N) field, no local editing is allowed.  If LOCAL (L) field is
"^DD",364.7,364.7,.02,21,3,0)
created, editing is allowed.
"^DD",364.7,364.7,.02,"DT")
3000428
"^DD",364.7,364.7,.03,0)
DATA ELEMENT^P364.5'^IBA(364.5,^0;3^Q
"^DD",364.7,364.7,.03,1,0)
^.1
"^DD",364.7,364.7,.03,1,1,0)
364.7^C
"^DD",364.7,364.7,.03,1,1,1)
S ^IBA(364.7,"C",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.03,1,1,2)
K ^IBA(364.7,"C",$E(X,1,30),DA)
"^DD",364.7,364.7,.03,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.03,1,1,"%D",0)
^^1^1^2960702^
"^DD",364.7,364.7,.03,1,1,"%D",1,0)
Xref by DATA ELEMENT NAME
"^DD",364.7,364.7,.03,1,1,"DT")
2960702
"^DD",364.7,364.7,.03,3)
Enter the data element that will define this form field.  If used on a screen, it must be a fileman type.
"^DD",364.7,364.7,.03,21,0)
^^1^1^2960627^^^^
"^DD",364.7,364.7,.03,21,1,0)
This identifies the data element that be extracted for this entry.
"^DD",364.7,364.7,.03,23,0)
^^4^4^2960627^^^^
"^DD",364.7,364.7,.03,23,1,0)
This is the data element that will be allowed to be displayed/edited on a
"^DD",364.7,364.7,.03,23,2,0)
screen, extracted for a transmit, or printed on a printed form.  If used on
"^DD",364.7,364.7,.03,23,3,0)
a screen, the data element must be a fileman type and a local field (>10000
"^DD",364.7,364.7,.03,23,4,0)
for ifn and on a node >10000) to be editable.
"^DD",364.7,364.7,.03,"DT")
2960702
"^DD",364.7,364.7,.04,0)
SCREEN PROMPT^FX^^0;4^K:$L(X)>70!($L(X)<1) X I $D(X),$P($G(^IBE(353,+$G(^IBA(364.6,+$G(^IBA(364.7,DA,0)),0)),2)),U,2)'="S" K X
"^DD",364.7,364.7,.04,.1)
 
"^DD",364.7,364.7,.04,1,0)
^.1^^0
"^DD",364.7,364.7,.04,3)
Answer must be 1-70 characters in length.
"^DD",364.7,364.7,.04,21,0)
3^^2^2^2960321^^^^
"^DD",364.7,364.7,.04,21,1,0)
This is used only by screen-type forms to place a prompt on the screen
"^DD",364.7,364.7,.04,21,2,0)
for a particular field.
"^DD",364.7,364.7,.04,23,0)
^^3^3^2960321^^^^
"^DD",364.7,364.7,.04,23,1,0)
This is the prompt that will preceed the data element defined for this
"^DD",364.7,364.7,.04,23,2,0)
entry.  If no data element, this prompt will display.  This field is only
"^DD",364.7,364.7,.04,23,3,0)
used for screen-type forms.
"^DD",364.7,364.7,.04,"DT")
2960321
"^DD",364.7,364.7,.05,0)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"^DD",364.7,364.7,.05,1,0)
^.1
"^DD",364.7,364.7,.05,1,1,0)
364.7^AINS1^MUMPS
"^DD",364.7,364.7,.05,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,$P(Z0,U,6)="" S ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.05,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA) I Z2'="",$D(^IBA(364.7,"AINTYP",Z1,X,Z2,DA)) S ^IBA(364.7,"ATYPE",Z1,Z2,DA)=""
"^DD",364.7,364.7,.05,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,1,"%D",0)
^^1^1^2960118^
"^DD",364.7,364.7,.05,1,1,"%D",1,0)
Xref by form field and insurance company.
"^DD",364.7,364.7,.05,1,1,"DT")
2960118
"^DD",364.7,364.7,.05,1,2,0)
364.7^AINTYP1^MUMPS
"^DD",364.7,364.7,.05,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) I Z1,Z2'="" S ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)="" K ^IBA(364.7,"ATYPE",Z1,Z2,DA),^IBA(364.7,"AINS",Z1,X,DA)
"^DD",364.7,364.7,.05,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K:Z1&(Z2'="") ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)
"^DD",364.7,364.7,.05,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.05,1,2,"%D",1,0)
Xref by insurance company and bill type
"^DD",364.7,364.7,.05,1,2,"DT")
2960117
"^DD",364.7,364.7,.05,3)
Enter the name of the insurance company that this field is associated with.
"^DD",364.7,364.7,.05,21,0)
^^2^2^2951207^
"^DD",364.7,364.7,.05,21,1,0)
This is the insurance company who has a need for other than the standard
"^DD",364.7,364.7,.05,21,2,0)
data in this field.
"^DD",364.7,364.7,.05,"DT")
3000428
"^DD",364.7,364.7,.06,0)
BILL TYPE^S^I:INPATIENT;O:OUTPATIENT;^0;6^Q
"^DD",364.7,364.7,.06,1,0)
^.1
"^DD",364.7,364.7,.06,1,1,0)
364.7^ATYPE1^MUMPS
"^DD",364.7,364.7,.06,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1 K ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA) I Z2,$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) S ^IBA(364.7,"AINS",Z1,Z2,DA)=""
"^DD",364.7,364.7,.06,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,1,1,"%D",1,0)
Xref by form and bill type.
"^DD",364.7,364.7,.06,1,1,"DT")
2960117
"^DD",364.7,364.7,.06,1,2,0)
364.7^AINTYP2^MUMPS
"^DD",364.7,364.7,.06,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1,Z2 K:'$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) ^IBA(364.7,"AINS",Z1,Z2,DA) S ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) K:Z1&Z2 ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)
"^DD",364.7,364.7,.06,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.06,1,2,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.06,1,2,"DT")
2960117
"^DD",364.7,364.7,.06,3)
Enter the type of the bill.
"^DD",364.7,364.7,.06,21,0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,21,1,0)
This is the type of bill that requires this field.
"^DD",364.7,364.7,.06,"DT")
3000428
"^DD",364.7,364.7,.07,0)
PAD CHARACTER^S^ZL:ZERO PAD ON LEFT;ZR:ZERO PAD ON RIGHT;SL:SPACE PAD ON LEFT;SR:SPACE PAD ON RIGHT;N:NO PAD REQUIRED;^0;7^Q
"^DD",364.7,364.7,.07,3)
Enter the code that corresponds to the format and pad character to use for the data output in this field.
"^DD",364.7,364.7,.07,21,0)
^^3^3^2960126^^
"^DD",364.7,364.7,.07,21,1,0)
If present, this defines the character to be used to pad the DATA
"^DD",364.7,364.7,.07,21,2,0)
ELEMENT to its desired length and the orientation of the padding characters
"^DD",364.7,364.7,.07,21,3,0)
to the left or right of the data.  The default is space pad to the right.
"^DD",364.7,364.7,.07,"DT")
2960126
"^DD",364.7,364.7,.08,0)
REQUIRED^S^0:NO;1:YES;^0;8^Q
"^DD",364.7,364.7,.08,3)
Enter 1 (YES) if this data element is on a local screen 9 form and the data is required for the bill to be authorized.
"^DD",364.7,364.7,.08,21,0)
^.001^4^4^3001030^^
"^DD",364.7,364.7,.08,21,1,0)
This field controls the required/not required status of a data element
"^DD",364.7,364.7,.08,21,2,0)
on a local screen 9 form.  If this field is 1 (YES), this data element
"^DD",364.7,364.7,.08,21,3,0)
is always required to have data (not null) in order for a bill to be
"^DD",364.7,364.7,.08,21,4,0)
authorized.
"^DD",364.7,364.7,.08,"DT")
2951207
"^DD",364.7,364.7,.09,0)
EDIT STATUS^S^E:EDITABLE;D:DISPLAY ONLY;^0;9^Q
"^DD",364.7,364.7,.09,3)
Enter 'E' to enable editing for this field, 'D' for a display only field.
"^DD",364.7,364.7,.09,21,0)
^^2^2^2960320^
"^DD",364.7,364.7,.09,21,1,0)
This field is used to control whether or not a data element on a screen is
"^DD",364.7,364.7,.09,21,2,0)
editable or for display-only purposes.
"^DD",364.7,364.7,.09,"DT")
2960320
"^DD",364.7,364.7,.1,0)
EDIT GROUP NUMBER^NJ2,0^^0;10^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",364.7,364.7,.1,3)
 Enter the edit group # that this field will be included in.  Valid #'s are 1-99.
"^DD",364.7,364.7,.1,21,0)
^^6^6^2960321^^
"^DD",364.7,364.7,.1,21,1,0)
This field contains the # of the edit group that the screen data element
"^DD",364.7,364.7,.1,21,2,0)
will be included with.  When this group # is selected on an edit screen,
"^DD",364.7,364.7,.1,21,3,0)
all data elements assigned to this group # on this screen will be presented
"^DD",364.7,364.7,.1,21,4,0)
for editing.  If no # is entered here, this field will not be available for
"^DD",364.7,364.7,.1,21,5,0)
editing.  This field will only apply to screen-type forms' editable data
"^DD",364.7,364.7,.1,21,6,0)
element descriptions.
"^DD",364.7,364.7,.1,"DT")
2960321
"^DD",364.7,364.7,1,0)
FORMAT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.7,364.7,1,3)
This is Standard MUMPS code.
"^DD",364.7,364.7,1,9)
@
"^DD",364.7,364.7,1,21,0)
^^8^8^2951207^
"^DD",364.7,364.7,1,21,1,0)
This is the code that will be xecuted to format the 'raw' data element
"^DD",364.7,364.7,1,21,2,0)
value that is returned from the execution of the DATA ELEMENT's definition.
"^DD",364.7,364.7,1,21,3,0)
This code can assume the variable/array IBXDATA is available as input and
"^DD",364.7,364.7,1,21,4,0)
should set this variable/array as its output.  Standard calls for data
"^DD",364.7,364.7,1,21,5,0)
formatting have been provided.  The variables IBXPG, IBXLN, IBXCOL are the
"^DD",364.7,364.7,1,21,6,0)
only IBX* variables that should be changed in this routine.  These represent
"^DD",364.7,364.7,1,21,7,0)
the page, line, column as the first 3 levels of subscript for the output
"^DD",364.7,364.7,1,21,8,0)
array.
"^DD",364.7,364.7,1,"DT")
2951207
"^DD",364.7,364.7,3,0)
FORMAT CODE DESCRIPTION^364.73^^3;0
"^DD",364.7,364.7,3,21,0)
^.001^1^1^3010102^^
"^DD",364.7,364.7,3,21,1,0)
This field describes the function of the format code entered.
"^DD",364.7,364.7,3,"DT")
2960710
"^DD",364.7,364.73,0)
FORMAT CODE DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.7,364.73,0,"DT")
2960710
"^DD",364.7,364.73,0,"NM","FORMAT CODE DESCRIPTION")
 
"^DD",364.7,364.73,0,"UP")
364.7
"^DD",364.7,364.73,.01,0)
FORMAT CODE DESCRIPTION^W^^0;1^Q
"^DD",364.7,364.73,.01,3)
Enter a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,21,0)
^.001^1^1^3010102^^^^
"^DD",364.7,364.73,.01,21,1,0)
This is a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,"DT")
2960710
"^DD",399,399,.22,0)
DEFAULT DIVISION^P40.8'^DG(40.8,^0;22^Q
"^DD",399,399,.22,1,0)
^.1
"^DD",399,399,.22,1,1,0)
^^TRIGGER^399^122
"^DD",399,399,.22,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$$PRVNUM^IBCU(DA,"",1) X ^DD(399,.22,1,1,1.4)
"^DD",399,399,.22,1,1,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,2)=DIV,DIH=399,DIG=122 D ^DICR
"^DD",399,399,.22,1,1,2)
Q
"^DD",399,399,.22,1,1,"CREATE VALUE")
S X=$$PRVNUM^IBCU(DA,"",1)
"^DD",399,399,.22,1,1,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.22,1,1,"FIELD")
PRIMARY PROVIDER #
"^DD",399,399,.22,1,2,0)
^^TRIGGER^399^123
"^DD",399,399,.22,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$$PRVNUM^IBCU(DA,"",2) X ^DD(399,.22,1,2,1.4)
"^DD",399,399,.22,1,2,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,3)=DIV,DIH=399,DIG=123 D ^DICR
"^DD",399,399,.22,1,2,2)
Q
"^DD",399,399,.22,1,2,"CREATE VALUE")
S X=$$PRVNUM^IBCU(DA,"",2)
"^DD",399,399,.22,1,2,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.22,1,2,"DT")
3040611
"^DD",399,399,.22,1,2,"FIELD")
SECONDARY PROVIDER #
"^DD",399,399,.22,1,3,0)
^^TRIGGER^399^124
"^DD",399,399,.22,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X=$$PRVNUM^IBCU(DA,"",3) X ^DD(399,.22,1,3,1.4)
"^DD",399,399,.22,1,3,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,4)=DIV,DIH=399,DIG=124 D ^DICR
"^DD",399,399,.22,1,3,2)
Q
"^DD",399,399,.22,1,3,"CREATE VALUE")
S X=$$PRVNUM^IBCU(DA,"",3)
"^DD",399,399,.22,1,3,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.22,1,3,"DT")
3040611
"^DD",399,399,.22,1,3,"FIELD")
TERTIARY PROVIDER #
"^DD",399,399,.22,1,4,0)
^^TRIGGER^399^128
"^DD",399,399,.22,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X=DIV S X=$$PRVQUAL^IBCU(DA,"",1) X ^DD(399,.22,1,4,1.4)
"^DD",399,399,.22,1,4,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,10)=DIV,DIH=399,DIG=128 D ^DICR
"^DD",399,399,.22,1,4,2)
Q
"^DD",399,399,.22,1,4,"CREATE VALUE")
S X=$$PRVQUAL^IBCU(DA,"",1)
"^DD",399,399,.22,1,4,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.22,1,4,"DT")
3060219
"^DD",399,399,.22,1,4,"FIELD")
PRIMARY ID QUALIFIER
"^DD",399,399,.22,1,5,0)
^^TRIGGER^399^129
"^DD",399,399,.22,1,5,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=$$PRVQUAL^IBCU(DA,"",2) X ^DD(399,.22,1,5,1.4)
"^DD",399,399,.22,1,5,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,11)=DIV,DIH=399,DIG=129 D ^DICR
"^DD",399,399,.22,1,5,2)
Q
"^DD",399,399,.22,1,5,"CREATE VALUE")
S X=$$PRVQUAL^IBCU(DA,"",2)
"^DD",399,399,.22,1,5,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.22,1,5,"DT")
3060219
"^DD",399,399,.22,1,5,"FIELD")
SECONDARY ID QUALIFIER
"^DD",399,399,.22,1,6,0)
^^TRIGGER^399^130
"^DD",399,399,.22,1,6,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X=DIV S X=$$PRVQUAL^IBCU(DA,"",3) X ^DD(399,.22,1,6,1.4)
"^DD",399,399,.22,1,6,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,12)=DIV,DIH=399,DIG=130 D ^DICR
"^DD",399,399,.22,1,6,2)
Q
"^DD",399,399,.22,1,6,"CREATE VALUE")
S X=$$PRVQUAL^IBCU(DA,"",3)
"^DD",399,399,.22,1,6,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.22,1,6,"DT")
3060219
"^DD",399,399,.22,1,6,"FIELD")
TERTIARY ID QUALIFIER
"^DD",399,399,.22,1,7,0)
^^TRIGGER^399^235
"^DD",399,399,.22,1,7,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$$CLIAREQ^IBCEP8A(DA) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X=$$CLIA^IBCEP8A(DA) X ^DD(399,.22,1,7,1.4)
"^DD",399,399,.22,1,7,1.4)
S DIH=$G(^DGCR(399,DIV(0),"U2")),DIV=X S $P(^("U2"),U,13)=DIV,DIH=399,DIG=235 D ^DICR
"^DD",399,399,.22,1,7,2)
Q
"^DD",399,399,.22,1,7,"%D",0)
^^3^3^3060614^
"^DD",399,399,.22,1,7,"%D",1,0)
This trigger will set the LAB CLIA NUMBER field to the default CLIA# for 
"^DD",399,399,.22,1,7,"%D",2,0)
the division when the division field is entered or changed.  The trigger 
"^DD",399,399,.22,1,7,"%D",3,0)
condition ensures that lab services are on the claim.
"^DD",399,399,.22,1,7,"CREATE CONDITION")
S X=$$CLIAREQ^IBCEP8A(DA)
"^DD",399,399,.22,1,7,"CREATE VALUE")
S X=$$CLIA^IBCEP8A(DA)
"^DD",399,399,.22,1,7,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.22,1,7,"DT")
3060614
"^DD",399,399,.22,1,7,"FIELD")
LAB CLIA NUMBER
"^DD",399,399,.22,1,8,0)
^^TRIGGER^399^243
"^DD",399,399,.22,1,8,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U3")):^("U3"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$P($$TAXDEF^IBCEP81(DIV(0)),U,2) X ^DD(399,.22,1,8,1.4)
"^DD",399,399,.22,1,8,1.4)
S DIH=$G(^DGCR(399,DIV(0),"U3")),DIV=X S $P(^("U3"),U,2)=DIV,DIH=399,DIG=243 D ^DICR
"^DD",399,399,.22,1,8,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U3")):^("U3"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"U3")),DIV=X S $P(^("U3"),U,2)=DIV,DIH=399,DIG=243 D ^DICR
"^DD",399,399,.22,1,8,3)
Do not delete
"^DD",399,399,.22,1,8,"%D",0)
^^2^2^3060614^
"^DD",399,399,.22,1,8,"%D",1,0)
This xref updates the DEFAULT DIVISION TAXONOMY field with the Default 
"^DD",399,399,.22,1,8,"%D",2,0)
Division's default taxonomy.
"^DD",399,399,.22,1,8,"CREATE VALUE")
S X=$P($$TAXDEF^IBCEP81(DIV(0)),U,2)
"^DD",399,399,.22,1,8,"DELETE VALUE")
@
"^DD",399,399,.22,1,8,"DT")
3060614
"^DD",399,399,.22,1,8,"FIELD")
#243
"^DD",399,399,.22,3)
Enter the default division that should be used in charge calculations.
"^DD",399,399,.22,21,0)
^^2^2^2960724^
"^DD",399,399,.22,21,1,0)
For rates specific to a division, this division will be used to
"^DD",399,399,.22,21,2,0)
determine the charges for all CPT's that do not have a division specified.
"^DD",399,399,.22,"DT")
3060614
"^DD",399,399,232,0)
NON-VA FACILITY^*P355.93X^IBA(355.93,^U2;10^S DIC("S")="I $P(^(0),U,2)=1,$P(^(0),U)'["",""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399,232,1,0)
^.1
"^DD",399,399,232,1,1,0)
^^TRIGGER^399^234
"^DD",399,399,232,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y X ^DD(399,232,1,1,1.1) X ^DD(399,232,1,1,1.4)
"^DD",399,399,232,1,1,1.1)
S X=DIV S I(0,0)=$S($D(D0):D0,1:""),D0=DIV S:'$D(^IBA(355.93,+D0,0)) D0=-1 S Y(101)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(101),U,9) S D0=I(0,0)
"^DD",399,399,232,1,1,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"U2")):^("U2"),1:""),DIV=X S $P(^("U2"),U,12)=DIV,DIH=399,DIG=234 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,232,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X="" X ^DD(399,232,1,1,2.4)
"^DD",399,399,232,1,1,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"U2")):^("U2"),1:""),DIV=X S $P(^("U2"),U,12)=DIV,DIH=399,DIG=234 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,232,1,1,"CREATE VALUE")
NON-VA FACILITY:FACILITY DEFAULT ID NUMBER
"^DD",399,399,232,1,1,"DELETE VALUE")
@
"^DD",399,399,232,1,1,"DT")
3010102
"^DD",399,399,232,1,1,"FIELD")
NON-VA CARE ID #
"^DD",399,399,232,1,2,0)
^^TRIGGER^399^233
"^DD",399,399,232,1,2,1)
Q
"^DD",399,399,232,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X="" X ^DD(399,232,1,2,2.4)
"^DD",399,399,232,1,2,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"U2")):^("U2"),1:""),DIV=X S $P(^("U2"),U,11)=DIV,DIH=399,DIG=233 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,232,1,2,3)
Do not delete
"^DD",399,399,232,1,2,"%D",0)
^^2^2^3010110^
"^DD",399,399,232,1,2,"%D",1,0)
This cross reference deletes the NON-VA CARE TYPE field when the NON-VA
"^DD",399,399,232,1,2,"%D",2,0)
Facility value is deleted.
"^DD",399,399,232,1,2,"CREATE VALUE")
NO EFFECT
"^DD",399,399,232,1,2,"DELETE VALUE")
@
"^DD",399,399,232,1,2,"DT")
3010110
"^DD",399,399,232,1,2,"FIELD")
NON-VA CARE TYPE
"^DD",399,399,232,1,3,0)
^^TRIGGER^399^235
"^DD",399,399,232,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$$CLIAREQ^IBCEP8A(DA) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X=$$CLIA^IBCEP8A(DA) X ^DD(399,232,1,3,1.4)
"^DD",399,399,232,1,3,1.4)
S DIH=$G(^DGCR(399,DIV(0),"U2")),DIV=X S $P(^("U2"),U,13)=DIV,DIH=399,DIG=235 D ^DICR
"^DD",399,399,232,1,3,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$$CLIAREQ^IBCEP8A(DA) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X=$$CLIA^IBCEP8A(DA) X ^DD(399,232,1,3,2.4)
"^DD",399,399,232,1,3,2.4)
S DIH=$G(^DGCR(399,DIV(0),"U2")),DIV=X S $P(^("U2"),U,13)=DIV,DIH=399,DIG=235 D ^DICR
"^DD",399,399,232,1,3,"%D",0)
^^3^3^3060104^
"^DD",399,399,232,1,3,"%D",1,0)
This trigger will set the LAB CLIA NUMBER field to the default
"^DD",399,399,232,1,3,"%D",2,0)
CLIA# for the facility - either VA facility or non-VA facility.
"^DD",399,399,232,1,3,"%D",3,0)
The trigger condition ensures that lab services are on the claim.
"^DD",399,399,232,1,3,"CREATE CONDITION")
S X=$$CLIAREQ^IBCEP8A(DA)
"^DD",399,399,232,1,3,"CREATE VALUE")
S X=$$CLIA^IBCEP8A(DA)
"^DD",399,399,232,1,3,"DELETE CONDITION")
S X=$$CLIAREQ^IBCEP8A(DA)
"^DD",399,399,232,1,3,"DELETE VALUE")
S X=$$CLIA^IBCEP8A(DA)
"^DD",399,399,232,1,3,"DT")
3060104
"^DD",399,399,232,1,3,"FIELD")
LAB CLIA NUMBER
"^DD",399,399,232,1,4,0)
^^TRIGGER^399^244
"^DD",399,399,232,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U3")):^("U3"),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$P($$TAXGET^IBCEP81(X),U,2) X ^DD(399,232,1,4,1.4)
"^DD",399,399,232,1,4,1.4)
S DIH=$G(^DGCR(399,DIV(0),"U3")),DIV=X S $P(^("U3"),U,3)=DIV,DIH=399,DIG=244 D ^DICR
"^DD",399,399,232,1,4,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U3")):^("U3"),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^DGCR(399,DIV(0),"U3")),DIV=X S $P(^("U3"),U,3)=DIV,DIH=399,DIG=244 D ^DICR
"^DD",399,399,232,1,4,3)
Do not delete
"^DD",399,399,232,1,4,"%D",0)
^^2^2^3060614^
"^DD",399,399,232,1,4,"%D",1,0)
This xref updates the NON-VA FACILITY TAXONOMY field with the non-VA 
"^DD",399,399,232,1,4,"%D",2,0)
facility's default taxonomy.
"^DD",399,399,232,1,4,"CREATE VALUE")
S X=$P($$TAXGET^IBCEP81(X),U,2)
"^DD",399,399,232,1,4,"DELETE VALUE")
@
"^DD",399,399,232,1,4,"DT")
3060614
"^DD",399,399,232,1,4,"FIELD")
#244
"^DD",399,399,232,3)
Enter the non-VA/other VA facility where care was given.  Facility name cannot contain a comma.
"^DD",399,399,232,12)
Must be a facility provider type entry without a comma in the name
"^DD",399,399,232,12.1)
S DIC("S")="I $P(^(0),U,2)=1,$P(^(0),U)'["","""
"^DD",399,399,232,21,0)
^.001^2^2^3030807^^^^
"^DD",399,399,232,21,1,0)
The is the name of the non-VA or outside VA facility where the services
"^DD",399,399,232,21,2,0)
were rendered.
"^DD",399,399,232,"DT")
3060614
"^DD",399,399,243,0)
DEFAULT DIVISION TAXONOMY^*P8932.1'^USC(8932.1,^U3;2^S DIC("S")="I $P($G(^(90002)),U,2)=""N""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399,243,3)
Enter the Taxonomy Code associated with the Default Division.
"^DD",399,399,243,5,1,0)
399^.22^8
"^DD",399,399,243,12)
Only entries for 'Non-Individuals' may be selected.
"^DD",399,399,243,12.1)
S DIC("S")="I $P($G(^(90002)),U,2)=""N"""
"^DD",399,399,243,"DT")
3060613
"^DD",399,399,244,0)
NON-VA FACILITY TAXONOMY^*P8932.1'^USC(8932.1,^U3;3^S DIC("S")="I $P($G(^(90002)),U,2)=""N""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399,244,3)
Enter the Taxonomy Code associated with this Non-VA Facility.
"^DD",399,399,244,5,1,0)
399^232^4
"^DD",399,399,244,12)
Only entries for 'Non-Individuals' may be selected.
"^DD",399,399,244,12.1)
S DIC("S")="I $P($G(^(90002)),U,2)=""N"""
"^DD",399,399,244,"DT")
3060613
"^DD",399,399.0222,.02,0)
PERFORMED BY^V^^0;2^Q
"^DD",399,399.0222,.02,1,0)
^.1
"^DD",399,399.0222,.02,1,1,0)
^^TRIGGER^399.0222^.05
"^DD",399,399.0222,.02,1,1,1)
X ^DD(399.0222,.02,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(399.0222,.02,1,1,1.4)
"^DD",399,399.0222,.02,1,1,1.3)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:"") S X=$P(Y(1),U,5)="SLF000"
"^DD",399,399.0222,.02,1,1,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"PRV",DIV(1),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=399.0222,DIG=.05 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399.0222,.02,1,1,2)
Q
"^DD",399,399.0222,.02,1,1,3)
Do not delete
"^DD",399,399.0222,.02,1,1,"%D",0)
^.101^2^2^3040526^^
"^DD",399,399.0222,.02,1,1,"%D",1,0)
This cross reference deletes any SLF000 id in the primary insurance id if
"^DD",399,399.0222,.02,1,1,"%D",2,0)
a provider name is entered.
"^DD",399,399.0222,.02,1,1,"CREATE CONDITION")
PRIMARY INS CO ID NUMBER="SLF000"
"^DD",399,399.0222,.02,1,1,"CREATE VALUE")
@
"^DD",399,399.0222,.02,1,1,"DELETE VALUE")
NO EFFECT
"^DD",399,399.0222,.02,1,1,"DT")
3000330
"^DD",399,399.0222,.02,1,1,"FIELD")
PRIMARY INS CO ID NUMBER
"^DD",399,399.0222,.02,1,2,0)
^^TRIGGER^399.0222^.03
"^DD",399,399.0222,.02,1,2,1)
X ^DD(399.0222,.02,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$$EXTCR^IBCEU5(X) X ^DD(399.0222,.02,1,2,1.4)
"^DD",399,399.0222,.02,1,2,1.3)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(0)=X S Y(2)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:""),Y=Y(0) X:$D(^DD(399.0222,.02,2)) ^(2) S X=Y'["*",Y(1)=X S X=$P(Y(2),U,3)="",Y=X,X=Y(1),X=X&Y
"^DD",399,399.0222,.02,1,2,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"PRV",DIV(1),0)):^(0),1:""),DIV=X S $P(^(0),U,3)=DIV,DIH=399.0222,DIG=.03 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399.0222,.02,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(399.0222,.02,1,2,2.4)
"^DD",399,399.0222,.02,1,2,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"PRV",DIV(1),0)):^(0),1:""),DIV=X S $P(^(0),U,3)=DIV,DIH=399.0222,DIG=.03 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399.0222,.02,1,2,3)
Do not delete
"^DD",399,399.0222,.02,1,2,"%D",0)
^.101^4^4^3000926^^
"^DD",399,399.0222,.02,1,2,"%D",1,0)
This trigger will force the CREDENTIALS field of the provider multiple to be
"^DD",399,399.0222,.02,1,2,"%D",2,0)
set to the first 3 characters of the provider's degree if the credentials
"^DD",399,399.0222,.02,1,2,"%D",3,0)
don't already exist.
"^DD",399,399.0222,.02,1,2,"CREATE CONDITION")
CREDENTIALS=""
"^DD",399,399.0222,.02,1,2,"CREATE VALUE")
S X=$$EXTCR^IBCEU5(X)
"^DD",399,399.0222,.02,1,2,"DELETE VALUE")
@
"^DD",399,399.0222,.02,1,2,"DT")
3000405
"^DD",399,399.0222,.02,1,2,"FIELD")
CREDENTIALS
"^DD",399,399.0222,.02,1,3,0)
^^TRIGGER^399.0222^.08
"^DD",399,399.0222,.02,1,3,1)
X ^DD(399.0222,.02,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X=DIV S X=$$SPEC^IBCEU(X) X ^DD(399.0222,.02,1,3,1.4)
"^DD",399,399.0222,.02,1,3,1.3)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:"") S X=$P(Y(1),U,8)=""
"^DD",399,399.0222,.02,1,3,1.4)
S DIH=$G(^DGCR(399,DIV(0),"PRV",DIV(1),0)),DIV=X S $P(^(0),U,8)=DIV,DIH=399.0222,DIG=.08 D ^DICR
"^DD",399,399.0222,.02,1,3,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(399.0222,.02,1,3,2.4)
"^DD",399,399.0222,.02,1,3,2.4)
S DIH=$G(^DGCR(399,DIV(0),"PRV",DIV(1),0)),DIV=X S $P(^(0),U,8)=DIV,DIH=399.0222,DIG=.08 D ^DICR
"^DD",399,399.0222,.02,1,3,3)
Do not delete
"^DD",399,399.0222,.02,1,3,"%D",0)
^^2^2^3001018^
"^DD",399,399.0222,.02,1,3,"%D",1,0)
This trigger will force the SPECIALTY field of the provider multiple to be
"^DD",399,399.0222,.02,1,3,"%D",2,0)
set to the current specialty of the provider.
"^DD",399,399.0222,.02,1,3,"CREATE CONDITION")
SPECIALTY=""
"^DD",399,399.0222,.02,1,3,"CREATE VALUE")
S X=$$SPEC^IBCEU(X)
"^DD",399,399.0222,.02,1,3,"DELETE VALUE")
@
"^DD",399,399.0222,.02,1,3,"DT")
3001018
"^DD",399,399.0222,.02,1,3,"FIELD")
SPECIALTY
"^DD",399,399.0222,.02,1,4,0)
^^TRIGGER^399.0222^.05
"^DD",399,399.0222,.02,1,4,1)
Q
"^DD",399,399.0222,.02,1,4,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(399.0222,.02,1,4,2.4)
"^DD",399,399.0222,.02,1,4,2.4)
S DIH=$G(^DGCR(399,DIV(0),"PRV",DIV(1),0)),DIV=X S $P(^(0),U,5)=DIV,DIH=399.0222,DIG=.05 D ^DICR
"^DD",399,399.0222,.02,1,4,3)
Do not delete
"^DD",399,399.0222,.02,1,4,"%D",0)
^^2^2^3040526^
"^DD",399,399.0222,.02,1,4,"%D",1,0)
This xref deletes the PRIMARY INS CO ID NUMBER when the provider is
"^DD",399,399.0222,.02,1,4,"%D",2,0)
changed.
"^DD",399,399.0222,.02,1,4,"CREATE VALUE")
NO EFFECT
"^DD",399,399.0222,.02,1,4,"DELETE VALUE")
@
"^DD",399,399.0222,.02,1,4,"DT")
3040526
"^DD",399,399.0222,.02,1,4,"FIELD")
PRIMARY INS CO ID NUMBER
"^DD",399,399.0222,.02,1,5,0)
^^TRIGGER^399.0222^.06
"^DD",399,399.0222,.02,1,5,1)
Q
"^DD",399,399.0222,.02,1,5,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(399.0222,.02,1,5,2.4)
"^DD",399,399.0222,.02,1,5,2.4)
S DIH=$G(^DGCR(399,DIV(0),"PRV",DIV(1),0)),DIV=X S $P(^(0),U,6)=DIV,DIH=399.0222,DIG=.06 D ^DICR
"^DD",399,399.0222,.02,1,5,3)
Do not delete
"^DD",399,399.0222,.02,1,5,"%D",0)
^^2^2^3040526^
"^DD",399,399.0222,.02,1,5,"%D",1,0)
This xref deletes the SECONDARY INS CO ID NUMBER when the provider is
"^DD",399,399.0222,.02,1,5,"%D",2,0)
changed.
"^DD",399,399.0222,.02,1,5,"CREATE VALUE")
NO EFFECT
"^DD",399,399.0222,.02,1,5,"DELETE VALUE")
@
"^DD",399,399.0222,.02,1,5,"DT")
3040526
"^DD",399,399.0222,.02,1,5,"FIELD")
SECONDARY INS CO ID NUMBER
"^DD",399,399.0222,.02,1,6,0)
^^TRIGGER^399.0222^.07
"^DD",399,399.0222,.02,1,6,1)
Q
"^DD",399,399.0222,.02,1,6,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(399.0222,.02,1,6,2.4)
"^DD",399,399.0222,.02,1,6,2.4)
S DIH=$G(^DGCR(399,DIV(0),"PRV",DIV(1),0)),DIV=X S $P(^(0),U,7)=DIV,DIH=399.0222,DIG=.07 D ^DICR
"^DD",399,399.0222,.02,1,6,3)
Do not delete
"^DD",399,399.0222,.02,1,6,"%D",0)
^^2^2^3040526^
"^DD",399,399.0222,.02,1,6,"%D",1,0)
This xref deletes the TERTIARY INS CO ID NUMBER when the provider is
"^DD",399,399.0222,.02,1,6,"%D",2,0)
changed.
"^DD",399,399.0222,.02,1,6,"CREATE VALUE")
NO EFFECT
"^DD",399,399.0222,.02,1,6,"DELETE VALUE")
@
"^DD",399,399.0222,.02,1,6,"DT")
3040526
"^DD",399,399.0222,.02,1,6,"FIELD")
TERTIARY INS CO ID NUMBER
"^DD",399,399.0222,.02,1,7,0)
^^TRIGGER^399.0222^.15
"^DD",399,399.0222,.02,1,7,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:"") S X=$P(Y(1),U,15),X=X S DIU=X K Y S X=DIV S X=$P($$GETTAX^IBCEF73A(X),U,2) X ^DD(399.0222,.02,1,7,1.4)
"^DD",399,399.0222,.02,1,7,1.4)
S DIH=$G(^DGCR(399,DIV(0),"PRV",DIV(1),0)),DIV=X S $P(^(0),U,15)=DIV,DIH=399.0222,DIG=.15 D ^DICR
"^DD",399,399.0222,.02,1,7,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:"") S X=$P(Y(1),U,15),X=X S DIU=X K Y S X="" X ^DD(399.0222,.02,1,7,2.4)
"^DD",399,399.0222,.02,1,7,2.4)
S DIH=$G(^DGCR(399,DIV(0),"PRV",DIV(1),0)),DIV=X S $P(^(0),U,15)=DIV,DIH=399.0222,DIG=.15 D ^DICR
"^DD",399,399.0222,.02,1,7,3)
Do not delete
"^DD",399,399.0222,.02,1,7,"%D",0)
^^2^2^3060614^
"^DD",399,399.0222,.02,1,7,"%D",1,0)
This xref updates the TAXONOMY field with the provider's default taxonomy 
"^DD",399,399.0222,.02,1,7,"%D",2,0)
when the provider field is entered or changed.
"^DD",399,399.0222,.02,1,7,"CREATE VALUE")
S X=$P($$GETTAX^IBCEF73A(X),U,2)
"^DD",399,399.0222,.02,1,7,"DELETE VALUE")
@
"^DD",399,399.0222,.02,1,7,"DT")
3060614
"^DD",399,399.0222,.02,1,7,"FIELD")
#.15
"^DD",399,399.0222,.02,3)
Enter the name of the provider who performed the indicated function
"^DD",399,399.0222,.02,4)
 
"^DD",399,399.0222,.02,5,1,0)
399.0222^.05^1
"^DD",399,399.0222,.02,21,0)
^.001^2^2^3040521^^^^
"^DD",399,399.0222,.02,21,1,0)
Providers may be VA providers found in the VistA NEW PERSON file or
"^DD",399,399.0222,.02,21,2,0)
NON-VA providers found in the IB NON VA BILLING PROVIDER file.
"^DD",399,399.0222,.02,"DT")
3060614
"^DD",399,399.0222,.02,"V",0)
^.12P^2^2
"^DD",399,399.0222,.02,"V",1,0)
200^VistA identified provider^1^VA^y^n
"^DD",399,399.0222,.02,"V",1,1)
S DIC("S")="I $O(^(""USC1"",0))"
"^DD",399,399.0222,.02,"V",1,2)
VistA provider must have a person class defined
"^DD",399,399.0222,.02,"V",2,0)
355.93^Non-VA provider^2^NVA^y^y
"^DD",399,399.0222,.02,"V",2,1)
S DIC("S")="I 1"
"^DD",399,399.0222,.02,"V",2,2)
Non VA providers can be individuals or facilities
"^DD",399,399.0222,.15,0)
TAXONOMY^P8932.1'^USC(8932.1,^0;15^Q
"^DD",399,399.0222,.15,3)
Enter the Taxonomy Code associated with this entry.
"^DD",399,399.0222,.15,5,1,0)
399.0222^.02^7
"^DD",399,399.0222,.15,"DT")
3060613
"^DIC",350.8,350.8,0)
IB ERROR
"^DIC",350.8,350.8,0,"GL")
^IBE(350.8,
"^DIC",350.8,350.8,"%D",0)
^^11^11^2940214^^^^
"^DIC",350.8,350.8,"%D",1,0)
This file contains errors for billing functions.  It may be used by
"^DIC",350.8,350.8,"%D",2,0)
applications, IB or AR.  The normal format for a routine to return
"^DIC",350.8,350.8,"%D",3,0)
an error is to return the variable:
"^DIC",350.8,350.8,"%D",4,0)
  Y=1^... a successful event occured
"^DIC",350.8,350.8,"%D",5,0)
  Y=-1^error code[;error code;error code...]^additional text
"^DIC",350.8,350.8,"%D",6,0)
The error messages can be displayed by calling routine ^IBAERR.  If
"^DIC",350.8,350.8,"%D",7,0)
the error occurs in a tasked job ($D(ZTQUEUED)'=0) the routine will
"^DIC",350.8,350.8,"%D",8,0)
put the error message in a bulletin and post it to the group defined
"^DIC",350.8,350.8,"%D",9,0)
in the IB SITE PARAMETER FILE.
"^DIC",350.8,350.8,"%D",10,0)
 
"^DIC",350.8,350.8,"%D",11,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",350.8,"B","IB ERROR",350.8)

"^DIC",355.97,355.97,0)
IB PROVIDER ID # TYPE^355.97
"^DIC",355.97,355.97,0,"GL")
^IBE(355.97,
"^DIC",355.97,355.97,"%",0)
^1.005^^0
"^DIC",355.97,355.97,"%D",0)
^^6^6^3001129^^
"^DIC",355.97,355.97,"%D",1,0)
There can be many different kinds of provider id numbers that may need
"^DIC",355.97,355.97,"%D",2,0)
to be reported when billing for hospital and professional services. This
"^DIC",355.97,355.97,"%D",3,0)
file contains entries that will be used to classify or identify the valid
"^DIC",355.97,355.97,"%D",4,0)
kinds of provider ids that the V.A. will use.  This is needed specifically
"^DIC",355.97,355.97,"%D",5,0)
for the transmission of bills so the proper interpretation of the ID's can
"^DIC",355.97,355.97,"%D",6,0)
be made electronically.
"^DIC",355.97,"B","IB PROVIDER ID # TYPE",355.97)

"^DIC",364.5,364.5,0)
IB DATA ELEMENT DEFINITION^364.5
"^DIC",364.5,364.5,0,"GL")
^IBA(364.5,
"^DIC",364.5,364.5,"%D",0)
^^8^8^2970606^^^^
"^DIC",364.5,364.5,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.5,364.5,"%D",2,0)
 
"^DIC",364.5,364.5,"%D",3,0)
This file contains the definition of all data elements that are needed for
"^DIC",364.5,364.5,"%D",4,0)
various forms throughout the MCCR DHCP system.  It contains the 'blueprint'
"^DIC",364.5,364.5,"%D",5,0)
for how to extract the data for each data element entry.
"^DIC",364.5,364.5,"%D",6,0)
 
"^DIC",364.5,364.5,"%D",7,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.5,364.5,"%D",8,0)
NATIONAL should not be deleted or edited.
"^DIC",364.5,"B","IB DATA ELEMENT DEFINITION",364.5)

"^DIC",364.6,364.6,0)
IB FORM SKELETON DEFINITION^364.6P
"^DIC",364.6,364.6,0,"GL")
^IBA(364.6,
"^DIC",364.6,364.6,"%D",0)
^^10^10^2970606^^^^
"^DIC",364.6,364.6,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.6,364.6,"%D",2,0)
 
"^DIC",364.6,364.6,"%D",3,0)
This file contains records that define the skeleton makeup of forms for
"^DIC",364.6,364.6,"%D",4,0)
the IB system.  This definition includes the absolute position of every
"^DIC",364.6,364.6,"%D",5,0)
field that can be output on the form, the length each field must be limited
"^DIC",364.6,364.6,"%D",6,0)
to, and some descriptive information.   This includes printed forms,
"^DIC",364.6,364.6,"%D",7,0)
transmittable output files, and special local billing screens.
"^DIC",364.6,364.6,"%D",8,0)
 
"^DIC",364.6,364.6,"%D",9,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.6,364.6,"%D",10,0)
NATIONAL should not be deleted or edited.
"^DIC",364.6,"B","IB FORM SKELETON DEFINITION",364.6)

"^DIC",364.7,364.7,0)
IB FORM FIELD CONTENT^364.7P
"^DIC",364.7,364.7,0,"GL")
^IBA(364.7,
"^DIC",364.7,364.7,"%D",0)
^1.001^9^9^3030331^^^^
"^DIC",364.7,364.7,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.7,364.7,"%D",2,0)
 
"^DIC",364.7,364.7,"%D",3,0)
This is the file that contains the specific fields to be used to produce
"^DIC",364.7,364.7,"%D",4,0)
the associated form or screen.  If there is no insurance company or bill
"^DIC",364.7,364.7,"%D",5,0)
type specified for an entry, this is assumed to be the default definition
"^DIC",364.7,364.7,"%D",6,0)
of the field.
"^DIC",364.7,364.7,"%D",7,0)
 
"^DIC",364.7,364.7,"%D",8,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.7,364.7,"%D",9,0)
NATIONAL should not be deleted or edited.
"^DIC",364.7,"B","IB FORM FIELD CONTENT",364.7)

"BLD",6339,6)
^328
**END**
**END**
