KIDS Distribution saved on Dec 15, 1998@10:46
RESOURCE USAGE MONITOR 1.0
**KIDS**:RESOURCE USAGE MONITOR 1.0^

**INSTALL NAME**
RESOURCE USAGE MONITOR 1.0
"BLD",1680,0)
RESOURCE USAGE MONITOR 1.0^CAPACITY MANAGEMENT - RUM^0^2981209^y
"BLD",1680,1,0)
^^1^1^2981209^
"BLD",1680,1,1,0)
Resource Usage Monitor Version 1.0 install.
"BLD",1680,4,0)
^9.64PA^8971.1^1
"BLD",1680,4,8971.1,0)
8971.1
"BLD",1680,4,8971.1,222)
y^y^f^^^^n
"BLD",1680,4,"B",8971.1,8971.1)

"BLD",1680,"ABNS",0)
^9.66A^^
"BLD",1680,"ABPKG")
n^n
"BLD",1680,"INIT")
KMPRPOST
"BLD",1680,"KRN",0)
^9.67PA^19^18
"BLD",1680,"KRN",.4,0)
.4
"BLD",1680,"KRN",.401,0)
.401
"BLD",1680,"KRN",.402,0)
.402
"BLD",1680,"KRN",.403,0)
.403
"BLD",1680,"KRN",.5,0)
.5
"BLD",1680,"KRN",.84,0)
.84
"BLD",1680,"KRN",3.6,0)
3.6
"BLD",1680,"KRN",3.8,0)
3.8
"BLD",1680,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",1680,"KRN",3.8,"NM",1,0)
KMP-CAPMAN^^0
"BLD",1680,"KRN",3.8,"NM","B","KMP-CAPMAN",1)

"BLD",1680,"KRN",9.2,0)
9.2
"BLD",1680,"KRN",9.8,0)
9.8
"BLD",1680,"KRN",9.8,"NM",0)
^9.68A^53^49
"BLD",1680,"KRN",9.8,"NM",1,0)
KMPRBD01^^0^B7173415
"BLD",1680,"KRN",9.8,"NM",2,0)
KMPRBD02^^0^B40542032
"BLD",1680,"KRN",9.8,"NM",3,0)
KMPRBD03^^0^B6087423
"BLD",1680,"KRN",9.8,"NM",4)
^^^
"BLD",1680,"KRN",9.8,"NM",4,0)
KMPRC^^1^
"BLD",1680,"KRN",9.8,"NM",5,0)
KMPRENV^^0^B673052
"BLD",1680,"KRN",9.8,"NM",6)
^^^
"BLD",1680,"KRN",9.8,"NM",6,0)
KMPRJCK1^^1^
"BLD",1680,"KRN",9.8,"NM",7)
^^^
"BLD",1680,"KRN",9.8,"NM",7,0)
KMPRJK17^^1^
"BLD",1680,"KRN",9.8,"NM",8)
^^^
"BLD",1680,"KRN",9.8,"NM",8,0)
KMPRKAK^^1^
"BLD",1680,"KRN",9.8,"NM",9)
^^^
"BLD",1680,"KRN",9.8,"NM",9,0)
KMPRMGL1^^1^
"BLD",1680,"KRN",9.8,"NM",10)
^^^
"BLD",1680,"KRN",9.8,"NM",10,0)
KMPRMGL2^^1^
"BLD",1680,"KRN",9.8,"NM",11)
^^^
"BLD",1680,"KRN",9.8,"NM",11,0)
KMPRMGL5^^1^
"BLD",1680,"KRN",9.8,"NM",12)
^^^
"BLD",1680,"KRN",9.8,"NM",12,0)
KMPRMGL6^^1^
"BLD",1680,"KRN",9.8,"NM",13)
^^^
"BLD",1680,"KRN",9.8,"NM",13,0)
KMPRPA01^^1^
"BLD",1680,"KRN",9.8,"NM",14)
^^^
"BLD",1680,"KRN",9.8,"NM",14,0)
KMPRPA03^^1^
"BLD",1680,"KRN",9.8,"NM",15)
^^^
"BLD",1680,"KRN",9.8,"NM",15,0)
KMPRPA05^^1^
"BLD",1680,"KRN",9.8,"NM",16)
^^^
"BLD",1680,"KRN",9.8,"NM",16,0)
KMPRPA11^^1^
"BLD",1680,"KRN",9.8,"NM",17)
^^^
"BLD",1680,"KRN",9.8,"NM",17,0)
KMPRPA13^^1^
"BLD",1680,"KRN",9.8,"NM",18)
^^^
"BLD",1680,"KRN",9.8,"NM",18,0)
KMPRPA15^^1^
"BLD",1680,"KRN",9.8,"NM",19)
^^^
"BLD",1680,"KRN",9.8,"NM",19,0)
KMPRPA17^^1^
"BLD",1680,"KRN",9.8,"NM",20)
^^^
"BLD",1680,"KRN",9.8,"NM",20,0)
KMPRPA18^^1^
"BLD",1680,"KRN",9.8,"NM",21)
^^^
"BLD",1680,"KRN",9.8,"NM",21,0)
KMPRPA19^^1^
"BLD",1680,"KRN",9.8,"NM",22)
^^^
"BLD",1680,"KRN",9.8,"NM",22,0)
KMPRPA20^^1^
"BLD",1680,"KRN",9.8,"NM",23)
^^^
"BLD",1680,"KRN",9.8,"NM",23,0)
KMPRPAU1^^1^
"BLD",1680,"KRN",9.8,"NM",24,0)
KMPRPG01^^0^B5597122
"BLD",1680,"KRN",9.8,"NM",25,0)
KMPRPG02^^0^B5598139
"BLD",1680,"KRN",9.8,"NM",26)
^^^
"BLD",1680,"KRN",9.8,"NM",26,0)
KMPRPN01^^1^
"BLD",1680,"KRN",9.8,"NM",27)
^^^
"BLD",1680,"KRN",9.8,"NM",27,0)
KMPRPN02^^1^
"BLD",1680,"KRN",9.8,"NM",28,0)
KMPRPN03^^0^B13271909
"BLD",1680,"KRN",9.8,"NM",29)
^^^
"BLD",1680,"KRN",9.8,"NM",29,0)
KMPRPN04^^1^
"BLD",1680,"KRN",9.8,"NM",30)
^^^
"BLD",1680,"KRN",9.8,"NM",30,0)
KMPRPN05^^1^
"BLD",1680,"KRN",9.8,"NM",31,0)
KMPRPOST^^0^B13192712
"BLD",1680,"KRN",9.8,"NM",32)
^^^
"BLD",1680,"KRN",9.8,"NM",32,0)
KMPRPT01^^1^
"BLD",1680,"KRN",9.8,"NM",33,0)
KMPRSS^^0^B12255132
"BLD",1680,"KRN",9.8,"NM",34,0)
KMPRUTL^^0^B17903012
"BLD",1680,"KRN",9.8,"NM",35,0)
KMPRUTL1^^0^B12690966
"BLD",1680,"KRN",9.8,"NM",36)
^^^
"BLD",1680,"KRN",9.8,"NM",36,0)
KMPRUTL2^^0^B24733019
"BLD",1680,"KRN",9.8,"NM",37)
^^^
"BLD",1680,"KRN",9.8,"NM",37,0)
KMPRUTL3^^1^
"BLD",1680,"KRN",9.8,"NM",38)
^^^
"BLD",1680,"KRN",9.8,"NM",38,0)
KMPRUX01^^1^
"BLD",1680,"KRN",9.8,"NM",39,0)
KMPU11^^0^B15230900
"BLD",1680,"KRN",9.8,"NM",40,0)
KMPUG^^0^B10988451
"BLD",1680,"KRN",9.8,"NM",41,0)
KMPUG1^^0^B11831811
"BLD",1680,"KRN",9.8,"NM",42,0)
KMPUG2^^0^B22564003
"BLD",1680,"KRN",9.8,"NM",43)
^^^
"BLD",1680,"KRN",9.8,"NM",43,0)
KMPUGP^^1^
"BLD",1680,"KRN",9.8,"NM",44,0)
KMPUGV^^0^B6508235
"BLD",1680,"KRN",9.8,"NM",45,0)
KMPUTL1^^0^B3675081
"BLD",1680,"KRN",9.8,"NM",50,0)
KMPRP1^^0^B14517418
"BLD",1680,"KRN",9.8,"NM",51)
^^^
"BLD",1680,"KRN",9.8,"NM",51,0)
XUCPRAW^^1^
"BLD",1680,"KRN",9.8,"NM",52)
^^^
"BLD",1680,"KRN",9.8,"NM",52,0)
XUCPFRMT^^1^
"BLD",1680,"KRN",9.8,"NM",53)
^^^
"BLD",1680,"KRN",9.8,"NM",53,0)
XUCPCLCT^^1^
"BLD",1680,"KRN",9.8,"NM","B","KMPRBD01",1)

"BLD",1680,"KRN",9.8,"NM","B","KMPRBD02",2)

"BLD",1680,"KRN",9.8,"NM","B","KMPRBD03",3)

"BLD",1680,"KRN",9.8,"NM","B","KMPRC",4)

"BLD",1680,"KRN",9.8,"NM","B","KMPRENV",5)

"BLD",1680,"KRN",9.8,"NM","B","KMPRJCK1",6)

"BLD",1680,"KRN",9.8,"NM","B","KMPRJK17",7)

"BLD",1680,"KRN",9.8,"NM","B","KMPRKAK",8)

"BLD",1680,"KRN",9.8,"NM","B","KMPRMGL1",9)

"BLD",1680,"KRN",9.8,"NM","B","KMPRMGL2",10)

"BLD",1680,"KRN",9.8,"NM","B","KMPRMGL5",11)

"BLD",1680,"KRN",9.8,"NM","B","KMPRMGL6",12)

"BLD",1680,"KRN",9.8,"NM","B","KMPRP1",50)

"BLD",1680,"KRN",9.8,"NM","B","KMPRPA01",13)

"BLD",1680,"KRN",9.8,"NM","B","KMPRPA03",14)

"BLD",1680,"KRN",9.8,"NM","B","KMPRPA05",15)

"BLD",1680,"KRN",9.8,"NM","B","KMPRPA11",16)

"BLD",1680,"KRN",9.8,"NM","B","KMPRPA13",17)

"BLD",1680,"KRN",9.8,"NM","B","KMPRPA15",18)

"BLD",1680,"KRN",9.8,"NM","B","KMPRPA17",19)

"BLD",1680,"KRN",9.8,"NM","B","KMPRPA18",20)

"BLD",1680,"KRN",9.8,"NM","B","KMPRPA19",21)

"BLD",1680,"KRN",9.8,"NM","B","KMPRPA20",22)

"BLD",1680,"KRN",9.8,"NM","B","KMPRPAU1",23)

"BLD",1680,"KRN",9.8,"NM","B","KMPRPG01",24)

"BLD",1680,"KRN",9.8,"NM","B","KMPRPG02",25)

"BLD",1680,"KRN",9.8,"NM","B","KMPRPN01",26)

"BLD",1680,"KRN",9.8,"NM","B","KMPRPN02",27)

"BLD",1680,"KRN",9.8,"NM","B","KMPRPN03",28)

"BLD",1680,"KRN",9.8,"NM","B","KMPRPN04",29)

"BLD",1680,"KRN",9.8,"NM","B","KMPRPN05",30)

"BLD",1680,"KRN",9.8,"NM","B","KMPRPOST",31)

"BLD",1680,"KRN",9.8,"NM","B","KMPRPT01",32)

"BLD",1680,"KRN",9.8,"NM","B","KMPRSS",33)

"BLD",1680,"KRN",9.8,"NM","B","KMPRUTL",34)

"BLD",1680,"KRN",9.8,"NM","B","KMPRUTL1",35)

"BLD",1680,"KRN",9.8,"NM","B","KMPRUTL2",36)

"BLD",1680,"KRN",9.8,"NM","B","KMPRUTL3",37)

"BLD",1680,"KRN",9.8,"NM","B","KMPRUX01",38)

"BLD",1680,"KRN",9.8,"NM","B","KMPU11",39)

"BLD",1680,"KRN",9.8,"NM","B","KMPUG",40)

"BLD",1680,"KRN",9.8,"NM","B","KMPUG1",41)

"BLD",1680,"KRN",9.8,"NM","B","KMPUG2",42)

"BLD",1680,"KRN",9.8,"NM","B","KMPUGP",43)

"BLD",1680,"KRN",9.8,"NM","B","KMPUGV",44)

"BLD",1680,"KRN",9.8,"NM","B","KMPUTL1",45)

"BLD",1680,"KRN",9.8,"NM","B","XUCPCLCT",53)

"BLD",1680,"KRN",9.8,"NM","B","XUCPFRMT",52)

"BLD",1680,"KRN",9.8,"NM","B","XUCPRAW",51)

"BLD",1680,"KRN",19,0)
19
"BLD",1680,"KRN",19,"NM",0)
^9.68A^20^20
"BLD",1680,"KRN",19,"NM",1,0)
KMPR BACKGROUND DRIVER^^0
"BLD",1680,"KRN",19,"NM",2,0)
KMPR GRAPH ALL NODES^^0
"BLD",1680,"KRN",19,"NM",3,0)
KMPR GRAPH HOURLY SINGLE NODE^^0
"BLD",1680,"KRN",19,"NM",4)
^^^
"BLD",1680,"KRN",19,"NM",4,0)
KMPR PRINT NODE HOURLY^^1
"BLD",1680,"KRN",19,"NM",5,0)
KMPR PRINT NODE PERCENT^^0
"BLD",1680,"KRN",19,"NM",6)
^^^
"BLD",1680,"KRN",19,"NM",6,0)
KMPR PRINT NODE STATS^^1
"BLD",1680,"KRN",19,"NM",7,0)
KMPR RUM MANAGER MENU^^0
"BLD",1680,"KRN",19,"NM",8,0)
KMPR START COLLECTION^^0
"BLD",1680,"KRN",19,"NM",9,0)
KMPR STATUS COLLECTION^^0
"BLD",1680,"KRN",19,"NM",10,0)
KMPR STOP COLLECTION^^0
"BLD",1680,"KRN",19,"NM",11,0)
XTCM MAIN^^3
"BLD",1680,"KRN",19,"NM",12,0)
KMPR PRINT OPTION DATA^^0
"BLD",1680,"KRN",19,"NM",13)
^^^
"BLD",1680,"KRN",19,"NM",13,0)
XUCPRAWPRINT^^1
"BLD",1680,"KRN",19,"NM",14)
^^^
"BLD",1680,"KRN",19,"NM",14,0)
XUCPSORT^^1
"BLD",1680,"KRN",19,"NM",15)
^^^
"BLD",1680,"KRN",19,"NM",15,0)
XUCPKILL^^1
"BLD",1680,"KRN",19,"NM",16)
^^^
"BLD",1680,"KRN",19,"NM",16,0)
XUCPTOGGLE^^1
"BLD",1680,"KRN",19,"NM",17)
^^^
"BLD",1680,"KRN",19,"NM",17,0)
XUCPMENU^^1
"BLD",1680,"KRN",19,"NM",18,0)
KMPR REPORTS MENU^^0
"BLD",1680,"KRN",19,"NM",19)
^^^
"BLD",1680,"KRN",19,"NM",19,0)
XUCPFORMATTED^^1
"BLD",1680,"KRN",19,"NM",20,0)
KMP MAIL GROUP EDIT^^0
"BLD",1680,"KRN",19,"NM","B","KMP MAIL GROUP EDIT",20)

"BLD",1680,"KRN",19,"NM","B","KMPR BACKGROUND DRIVER",1)

"BLD",1680,"KRN",19,"NM","B","KMPR GRAPH ALL NODES",2)

"BLD",1680,"KRN",19,"NM","B","KMPR GRAPH HOURLY SINGLE NODE",3)

"BLD",1680,"KRN",19,"NM","B","KMPR PRINT NODE HOURLY",4)

"BLD",1680,"KRN",19,"NM","B","KMPR PRINT NODE PERCENT",5)

"BLD",1680,"KRN",19,"NM","B","KMPR PRINT NODE STATS",6)

"BLD",1680,"KRN",19,"NM","B","KMPR PRINT OPTION DATA",12)

"BLD",1680,"KRN",19,"NM","B","KMPR REPORTS MENU",18)

"BLD",1680,"KRN",19,"NM","B","KMPR RUM MANAGER MENU",7)

"BLD",1680,"KRN",19,"NM","B","KMPR START COLLECTION",8)

"BLD",1680,"KRN",19,"NM","B","KMPR STATUS COLLECTION",9)

"BLD",1680,"KRN",19,"NM","B","KMPR STOP COLLECTION",10)

"BLD",1680,"KRN",19,"NM","B","XTCM MAIN",11)

"BLD",1680,"KRN",19,"NM","B","XUCPFORMATTED",19)

"BLD",1680,"KRN",19,"NM","B","XUCPKILL",15)

"BLD",1680,"KRN",19,"NM","B","XUCPMENU",17)

"BLD",1680,"KRN",19,"NM","B","XUCPRAWPRINT",13)

"BLD",1680,"KRN",19,"NM","B","XUCPSORT",14)

"BLD",1680,"KRN",19,"NM","B","XUCPTOGGLE",16)

"BLD",1680,"KRN",19.1,0)
19.1
"BLD",1680,"KRN",101,0)
101
"BLD",1680,"KRN",409.61,0)
409.61
"BLD",1680,"KRN",771,0)
771
"BLD",1680,"KRN",869.2,0)
869.2
"BLD",1680,"KRN",870,0)
870
"BLD",1680,"KRN",8994,0)
8994
"BLD",1680,"KRN","B",.4,.4)

"BLD",1680,"KRN","B",.401,.401)

"BLD",1680,"KRN","B",.402,.402)

"BLD",1680,"KRN","B",.403,.403)

"BLD",1680,"KRN","B",.5,.5)

"BLD",1680,"KRN","B",.84,.84)

"BLD",1680,"KRN","B",3.6,3.6)

"BLD",1680,"KRN","B",3.8,3.8)

"BLD",1680,"KRN","B",9.2,9.2)

"BLD",1680,"KRN","B",9.8,9.8)

"BLD",1680,"KRN","B",19,19)

"BLD",1680,"KRN","B",19.1,19.1)

"BLD",1680,"KRN","B",101,101)

"BLD",1680,"KRN","B",409.61,409.61)

"BLD",1680,"KRN","B",771,771)

"BLD",1680,"KRN","B",869.2,869.2)

"BLD",1680,"KRN","B",870,870)

"BLD",1680,"KRN","B",8994,8994)

"BLD",1680,"PRE")
KMPRENV
"BLD",1680,"QUES",0)
^9.62^^
"BLD",1680,"REQB",0)
^9.611^^
"FIA",8971.1)
RESOURCE USAGE MONITOR
"FIA",8971.1,0)
^KMPR(8971.1,
"FIA",8971.1,0,0)
8971.1DIAO
"FIA",8971.1,0,1)
y^y^f^^^^n
"FIA",8971.1,0,10)

"FIA",8971.1,0,11)

"FIA",8971.1,0,"RLRO")

"FIA",8971.1,0,"VR")
1.0^RESOURCE USAGE MONITOR
"FIA",8971.1,8971.1)
0
"INIT")
KMPRPOST
"KRN",3.8,2058,-1)
0^1
"KRN",3.8,2058,0)
KMP-CAPMAN^PU^n^^^0^
"KRN",3.8,2058,2,0)
^^2^2^2981124^^^^
"KRN",3.8,2058,2,1,0)
This mail group will receive messages for all Capacity Management packages
"KRN",3.8,2058,2,2,0)
(SAGG, RUM).
"KRN",3.8,2058,3)

"KRN",19,10393,-1)
3^11
"KRN",19,10393,0)
XTCM MAIN^Capacity Management^^M^^^^^^^^TOOLKIT
"KRN",19,10393,1,0)
^^2^2^2981123^^^^
"KRN",19,10393,1,1,0)
This menu holds all the currently available capacity management
"KRN",19,10393,1,2,0)
functions.
"KRN",19,10393,10,0)
^19.01PI^10^10
"KRN",19,10393,10,9,0)
13934^RUM
"KRN",19,10393,10,9,"^")
KMPR RUM MANAGER MENU
"KRN",19,10393,10,10,0)
16592^CMG^
"KRN",19,10393,10,10,"^")
KMP MAIL GROUP EDIT
"KRN",19,10393,99)
57671,32011
"KRN",19,10393,99.1)
55707,82829
"KRN",19,10393,"U")
CAPACITY MANAGEMENT
"KRN",19,13934,-1)
0^7
"KRN",19,13934,0)
KMPR RUM MANAGER MENU^RUM Manager Menu^^M^^^^^^^^CAPACITY MANAGEMENT - RUM^^1
"KRN",19,13934,1,0)
^^2^2^2981124^^^^
"KRN",19,13934,1,1,0)
This menu will help the site to manage the Resource Usage Monitor (RUM)
"KRN",19,13934,1,2,0)
component of Capacity Management monitoring tools.
"KRN",19,13934,10,0)
^19.01IP^7^7
"KRN",19,13934,10,4,0)
13940^STR^2
"KRN",19,13934,10,4,"^")
KMPR START COLLECTION
"KRN",19,13934,10,5,0)
13939^STP^3
"KRN",19,13934,10,5,"^")
KMPR STOP COLLECTION
"KRN",19,13934,10,6,0)
13941^STA^1
"KRN",19,13934,10,6,"^")
KMPR STATUS COLLECTION
"KRN",19,13934,10,7,0)
16504^RPT^4
"KRN",19,13934,10,7,"^")
KMPR REPORTS MENU
"KRN",19,13934,20)
N IORVOFF,IORVON,Z D ZIS^KMPRUTL W @IOF,!,?25,IORVON,"* Resource Usage Monitor "_$$VERSION^KMPRUTL_" *",IORVOFF,!! D ENVCHECK^KMPRUTL1(.Z,1) W:+Z=100 !!?(80-$L(Z)\2),$C(7),IORVON," *** ",$P(Z,U,2)," *** ",IORVOFF
"KRN",19,13934,99)
57671,32010
"KRN",19,13934,99.1)
57691,66026
"KRN",19,13934,"U")
RUM MANAGER MENU
"KRN",19,13936,-1)
0^5
"KRN",19,13936,0)
KMPR PRINT NODE PERCENT^Package Resource Usage^^R^^^^^^^^CAPACITY MANAGEMENT - RUM
"KRN",19,13936,1,0)
^^3^3^2981119^^
"KRN",19,13936,1,1,0)
This option will display the package Resource Usage Monitor statistics.
"KRN",19,13936,1,2,0)
The printout summarizes the statistics of the options, protocols and
"KRN",19,13936,1,3,0)
tasks for a selected namespace as percentages.
"KRN",19,13936,25)
KMPRPN03
"KRN",19,13936,"U")
PACKAGE RESOURCE USAGE
"KRN",19,13938,-1)
0^1
"KRN",19,13938,0)
KMPR BACKGROUND DRIVER^RUM Background Driver^^R^^^^^^^^CAPACITY MANAGEMENT - RUM
"KRN",19,13938,1,0)
^^4^4^2981123^^
"KRN",19,13938,1,1,0)
This option will compress the Resource Usage Monitor statistics located in
"KRN",19,13938,1,2,0)
^XTMP("KMPR") into daily stats.  This option must be queued to run each
"KRN",19,13938,1,3,0)
day on off hours (recommended run time at 1 a.m.)
"KRN",19,13938,1,4,0)
.
"KRN",19,13938,25)
KMPRBD01
"KRN",19,13938,200.9)
y^y
"KRN",19,13938,"U")
RUM BACKGROUND DRIVER
"KRN",19,13939,-1)
0^10
"KRN",19,13939,0)
KMPR STOP COLLECTION^Stop RUM Collection^^R^^^^^^^^CAPACITY MANAGEMENT - RUM
"KRN",19,13939,1,0)
^^1^1^2970819^^^
"KRN",19,13939,1,1,0)
This option will stop Resource Usage Monitor (RUM) collection.
"KRN",19,13939,25)
STOP^KMPRSS
"KRN",19,13939,"U")
STOP RUM COLLECTION
"KRN",19,13940,-1)
0^8
"KRN",19,13940,0)
KMPR START COLLECTION^Start RUM Collection^^R^^^^^^^^CAPACITY MANAGEMENT - RUM
"KRN",19,13940,1,0)
^^1^1^2970815^
"KRN",19,13940,1,1,0)
This option will start Resource Usage Monitor (RUM) collection.
"KRN",19,13940,25)
START^KMPRSS
"KRN",19,13940,"U")
START RUM COLLECTION
"KRN",19,13941,-1)
0^9
"KRN",19,13941,0)
KMPR STATUS COLLECTION^Status of RUM Collection^^R^^^^^^^^CAPACITY MANAGEMENT - RUM
"KRN",19,13941,1,0)
^^2^2^2970819^
"KRN",19,13941,1,1,0)
This option will display the status of Resource Usage Monitor (RUM)
"KRN",19,13941,1,2,0)
collection.
"KRN",19,13941,25)
STAT^KMPRSS
"KRN",19,13941,"U")
STATUS OF RUM COLLECTION
"KRN",19,16499,-1)
0^2
"KRN",19,16499,0)
KMPR GRAPH ALL NODES^RUM Data for All Nodes (Graph)^^R^^^^^^^^CAPACITY MANAGEMENT - RUM
"KRN",19,16499,1,0)
^^2^2^2981119^
"KRN",19,16499,1,1,0)
This option will display a graph of the selected RUM Data Element for all
"KRN",19,16499,1,2,0)
nodes.
"KRN",19,16499,25)
EN^KMPRPG01
"KRN",19,16499,"U")
RUM DATA FOR ALL NODES (GRAPH)
"KRN",19,16500,-1)
0^3
"KRN",19,16500,0)
KMPR GRAPH HOURLY SINGLE NODE^RUM Data by Date for Single Node (Graph)^^R^^^^^^^^CAPACITY MANAGEMENT - RUM
"KRN",19,16500,1,0)
^^2^2^2981119^
"KRN",19,16500,1,1,0)
This option will display a graph of the selected RUM Data Element for a
"KRN",19,16500,1,2,0)
single node.
"KRN",19,16500,25)
EN^KMPRPG02
"KRN",19,16500,"U")
RUM DATA BY DATE FOR SINGLE NO
"KRN",19,16501,-1)
0^12
"KRN",19,16501,0)
KMPR PRINT OPTION DATA^RUM Data for an Option^^R^^^^^^^^CAPACITY MANAGEMENT - RUM
"KRN",19,16501,1,0)
^^3^3^2981119^
"KRN",19,16501,1,1,0)
This option will display all the RUM Data Elements for a selected option.
"KRN",19,16501,1,2,0)
The output shows each Element per Occurrence, as well as the totals of
"KRN",19,16501,1,3,0)
each Element.
"KRN",19,16501,25)
EN^KMPRP1
"KRN",19,16501,"U")
RUM DATA FOR AN OPTION
"KRN",19,16504,-1)
0^18
"KRN",19,16504,0)
KMPR REPORTS MENU^RUM Reports^^M^^^^^^^^CAPACITY MANAGEMENT - RUM
"KRN",19,16504,10,0)
^19.01IP^4^4
"KRN",19,16504,10,1,0)
16499^GAN
"KRN",19,16504,10,1,"^")
KMPR GRAPH ALL NODES
"KRN",19,16504,10,2,0)
16500^GSN
"KRN",19,16504,10,2,"^")
KMPR GRAPH HOURLY SINGLE NODE
"KRN",19,16504,10,3,0)
13936^PRU
"KRN",19,16504,10,3,"^")
KMPR PRINT NODE PERCENT
"KRN",19,16504,10,4,0)
16501^PDO
"KRN",19,16504,10,4,"^")
KMPR PRINT OPTION DATA
"KRN",19,16504,99)
57671,32010
"KRN",19,16504,"U")
RUM REPORTS
"KRN",19,16592,-1)
0^20
"KRN",19,16592,0)
KMP MAIL GROUP EDIT^Capacity Management Mail Group Edit^^A^^^^^^^^^^1^^^
"KRN",19,16592,1,0)
^^1^1^2981123^^^
"KRN",19,16592,1,1,0)
This option is used to edit mail group KMP-CAPMAN.
"KRN",19,16592,20)
W !!?21," Edit Capacity Management Mail Group " N DA,DIE,DR,X,Y S DIE=3.8,DR="1:7.9;10.1:99",DA=$O(^XMB(3.8,"B","KMP-CAPMAN",0)) W:'DA *7,!?3,"Mail group 'KMP-CAPMAN' is not defined!" Q:'DA  W !!,"NAME: ",$P($G(^XMB(3.8,DA,0)),U) D ^DIE
"KRN",19,16592,26)

"KRN",19,16592,30)

"KRN",19,16592,31)

"KRN",19,16592,33)

"KRN",19,16592,34)

"KRN",19,16592,50)

"KRN",19,16592,51)

"KRN",19,16592,99)
55595,47667
"KRN",19,16592,99.1)
57661,35273
"KRN",19,16592,"U")
CAPACITY MANAGEMENT MAIL GROUP
"KRN",19,16783,-1)
1^4
"KRN",19,16783,0)
KMPR PRINT NODE HOURLY
"KRN",19,16784,-1)
1^6
"KRN",19,16784,0)
KMPR PRINT NODE STATS
"KRN",19,16785,-1)
1^13
"KRN",19,16785,0)
XUCPRAWPRINT
"KRN",19,16786,-1)
1^14
"KRN",19,16786,0)
XUCPSORT
"KRN",19,16787,-1)
1^15
"KRN",19,16787,0)
XUCPKILL
"KRN",19,16788,-1)
1^16
"KRN",19,16788,0)
XUCPTOGGLE
"KRN",19,16789,-1)
1^17
"KRN",19,16789,0)
XUCPMENU
"KRN",19,16790,-1)
1^19
"KRN",19,16790,0)
XUCPFORMATTED
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1
"ORD",11,3.8,0)
MAIL GROUP
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",513,-1)
1^1
"PKG",513,0)
CAPACITY MANAGEMENT - RUM^KMPR^Capacity Management - Resource Usage Monitor
"PKG",513,1,0)
^^2^2^2970729^
"PKG",513,1,1,0)
The Resource Usage Monitor (RUM) is a component of Capacity Management's
"PKG",513,1,2,0)
suite of monitoring tools.
"PKG",513,5)
SF CIOFO
"PKG",513,7)
^^I
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
1.0^2981209^2971012^197
"PKG",513,22,1,1,0)
^^1^1^2981215
"PKG",513,22,1,1,1,0)
Resource Usage Monitor Version 1.0 install.
"PKG",513,"VERSION")
1.0
"PRE")
KMPRENV
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
49
"RTN","KMPRBD01")
0^1^B7173415
"RTN","KMPRBD01",1,0)
KMPRBD01 ;SFISC/RAK - RUM Daily/Weekly Compression ;3 Nov 1998
"RTN","KMPRBD01",2,0)
 ;;1.0;CAPACITY MANAGEMENT - RUM;;Dec 09, 1998
"RTN","KMPRBD01",3,0)
 ;
"RTN","KMPRBD01",4,0)
EN ;-- entry point for Background Driver.
"RTN","KMPRBD01",5,0)
 ;
"RTN","KMPRBD01",6,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPRBD01",7,0)
 ; Protect ^XTMP("KMPR") from the XQ82 background cleanup job
"RTN","KMPRBD01",8,0)
 S ^XTMP("KMPR",0)=DT+10000
"RTN","KMPRBD01",9,0)
 ;
"RTN","KMPRBD01",10,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPRBD01",11,0)
 ;
"RTN","KMPRBD01",12,0)
 ; store daily stats in file #8971.1 (RESOURCE USAGE MONITOR).
"RTN","KMPRBD01",13,0)
 S ^XTMP("KMPR","BACKGROUND","START")=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","KMPRBD01",14,0)
 S ^XTMP("KMPR","BACKGROUND","STOP")=""
"RTN","KMPRBD01",15,0)
 D DAILY^KMPRBD02(+$H)
"RTN","KMPRBD01",16,0)
 S ^XTMP("KMPR","BACKGROUND","STOP")=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","KMPRBD01",17,0)
 ;
"RTN","KMPRBD01",18,0)
 ; clean up old "job" nodes.
"RTN","KMPRBD01",19,0)
 D CLEAN
"RTN","KMPRBD01",20,0)
 ;
"RTN","KMPRBD01",21,0)
 ; if sunday do weekly compression
"RTN","KMPRBD01",22,0)
 D:'$$DOW^XLFDT(DT,1) WEEKLY^KMPRBD02(DT)
"RTN","KMPRBD01",23,0)
 ;
"RTN","KMPRBD01",24,0)
 ; check for errors.
"RTN","KMPRBD01",25,0)
 D ERRORS
"RTN","KMPRBD01",26,0)
 ;
"RTN","KMPRBD01",27,0)
 Q
"RTN","KMPRBD01",28,0)
 ;
"RTN","KMPRBD01",29,0)
CLEAN ;-- clean up old "JOB" nodes
"RTN","KMPRBD01",30,0)
 ;
"RTN","KMPRBD01",31,0)
 N JOB,NODE S NODE=""
"RTN","KMPRBD01",32,0)
 F  S NODE=$O(^XTMP("KMPR","JOB",NODE)) Q:NODE=""  D
"RTN","KMPRBD01",33,0)
 .S JOB=0 F  S JOB=$O(^XTMP("KMPR","JOB",NODE,JOB)) Q:'+JOB  D
"RTN","KMPRBD01",34,0)
 ..I '$D(^XUTL("XQ",JOB)) K ^XTMP("KMPR","JOB",NODE,JOB)
"RTN","KMPRBD01",35,0)
 ;
"RTN","KMPRBD01",36,0)
 ; Store the number of active user jobs into ^XTMP("KMPR","ACTIVE")
"RTN","KMPRBD01",37,0)
 ; D CLUSTER^%ZKMPRC1
"RTN","KMPRBD01",38,0)
 ;
"RTN","KMPRBD01",39,0)
 Q
"RTN","KMPRBD01",40,0)
 ;
"RTN","KMPRBD01",41,0)
ERRORS ; check and process errors.
"RTN","KMPRBD01",42,0)
 ;
"RTN","KMPRBD01",43,0)
 Q:'$D(^XTMP("KMPR","ERR"))
"RTN","KMPRBD01",44,0)
 ;
"RTN","KMPRBD01",45,0)
 N H,I,LN,N,O,SITE,TEXT,XMSUB,X,XMTEXT,XMY,XMZ,Y,Z
"RTN","KMPRBD01",46,0)
 ;
"RTN","KMPRBD01",47,0)
 S SITE=$$SITE^VASITE
"RTN","KMPRBD01",48,0)
 S XMSUB="RUM Error at site "_$P(SITE,U,3)_" on "_$$FMTE^XLFDT($$DT^XLFDT)
"RTN","KMPRBD01",49,0)
 S TEXT(1)="  The following error(s) have been logged at "_$P(SITE,U,2)_" ("_$P(SITE,U,3)_") "
"RTN","KMPRBD01",50,0)
 S TEXT(2)="  while moving data from ^XTMP(""KMPR"",""DLY"") to file 8971.1."
"RTN","KMPRBD01",51,0)
 S H="",LN=3
"RTN","KMPRBD01",52,0)
 ; H = date in $H format (+$H).
"RTN","KMPRBD01",53,0)
 ; N = node name.
"RTN","KMPRBD01",54,0)
 ; O = option.
"RTN","KMPRBD01",55,0)
 F  S H=$O(^XTMP("KMPR","ERR",H)) Q:H=""  S N="" D 
"RTN","KMPRBD01",56,0)
 .F  S N=$O(^XTMP("KMPR","ERR",H,N)) Q:N=""  S O="" D 
"RTN","KMPRBD01",57,0)
 ..F  S O=$O(^XTMP("KMPR","ERR",H,N,O)) Q:O=""  D 
"RTN","KMPRBD01",58,0)
 ...S TEXT(LN)="",LN=LN+1
"RTN","KMPRBD01",59,0)
 ...S TEXT(LN)="Date..: "_H_"    Node: "_N,LN=LN+1
"RTN","KMPRBD01",60,0)
 ...S TEXT(LN)="Option: "_O,LN=LN+1
"RTN","KMPRBD01",61,0)
 ...; prime time.
"RTN","KMPRBD01",62,0)
 ...S TEXT(LN)="Prime Time     = "_$G(^XTMP("KMPR","ERR",H,N,O,0)),LN=LN+1
"RTN","KMPRBD01",63,0)
 ...; non-prime time.
"RTN","KMPRBD01",64,0)
 ...S TEXT(LN)="Non-Prime Time = "_$G(^XTMP("KMPR","ERR",H,N,O,1)),LN=LN+1
"RTN","KMPRBD01",65,0)
 ...; message.
"RTN","KMPRBD01",66,0)
 ...F I=0:0 S I=$O(^XTMP("KMPR","ERR",H,N,O,"MSG",I)) Q:'I  D 
"RTN","KMPRBD01",67,0)
 ....S TEXT(LN)=^XTMP("KMPR","ERR",H,N,O,"MSG",I),LN=LN+1
"RTN","KMPRBD01",68,0)
 S XMTEXT="TEXT("
"RTN","KMPRBD01",69,0)
 S XMY("G.KMP2-RUM@ISC-ALBANY.VA.GOV")=""
"RTN","KMPRBD01",70,0)
 D ^XMD
"RTN","KMPRBD01",71,0)
 ;
"RTN","KMPRBD01",72,0)
 K ^XTMP("KMPR","ERR")
"RTN","KMPRBD01",73,0)
 ;
"RTN","KMPRBD01",74,0)
 Q
"RTN","KMPRBD02")
0^2^B40542032
"RTN","KMPRBD02",1,0)
KMPRBD02 ;SFISC/KAK/RAK - RUM Data Compression ;5/8/97  15:40
"RTN","KMPRBD02",2,0)
 ;;1.0;CAPACITY MANAGEMENT - RUM;;Dec 09, 1998
"RTN","KMPRBD02",3,0)
 ;
"RTN","KMPRBD02",4,0)
 ; Background Driver (cont.)
"RTN","KMPRBD02",5,0)
 ;
"RTN","KMPRBD02",6,0)
DAILY(KMPRTDAY) ;-- daily data compression and storage
"RTN","KMPRBD02",7,0)
 ;----------------------------------------------------------------------
"RTN","KMPRBD02",8,0)
 ; KMPRTDAY.. Day in $H format (+$H).  This represents the
"RTN","KMPRBD02",9,0)
 ;            ending point for compression.  Only dates LESS than
"RTN","KMPRBD02",10,0)
 ;            KMPRTDAY will be compressed.
"RTN","KMPRBD02",11,0)
 ;
"RTN","KMPRBD02",12,0)
 ; At midnight compress hourly info into daily stats. Daily stats are
"RTN","KMPRBD02",13,0)
 ; stored in file #8971.1.  Hourly data is killed.
"RTN","KMPRBD02",14,0)
 ;----------------------------------------------------------------------
"RTN","KMPRBD02",15,0)
 ;
"RTN","KMPRBD02",16,0)
 Q:'$G(KMPRTDAY)
"RTN","KMPRBD02",17,0)
 ;
"RTN","KMPRBD02",18,0)
 N ARRAY,COUNT,DATA,DOW,HDATE,HTIME,I,JOB,MESSAGE,NODE,OKAY,OPTION
"RTN","KMPRBD02",19,0)
 N NP,PT,PTM,X,VAR
"RTN","KMPRBD02",20,0)
 ;
"RTN","KMPRBD02",21,0)
 ; make sure DT is defined.
"RTN","KMPRBD02",22,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPRBD02",23,0)
 ; where daily data is located.
"RTN","KMPRBD02",24,0)
 S ARRAY=$NA(^XTMP("KMPR","DLY"))
"RTN","KMPRBD02",25,0)
 S NODE=""
"RTN","KMPRBD02",26,0)
 F  S NODE=$O(@ARRAY@(NODE)) Q:NODE=""  D
"RTN","KMPRBD02",27,0)
 .S HDATE=""
"RTN","KMPRBD02",28,0)
 .F  S HDATE=$O(@ARRAY@(NODE,HDATE)) Q:HDATE=""!(HDATE'<KMPRTDAY)  D 
"RTN","KMPRBD02",29,0)
 ..S OPTION=""
"RTN","KMPRBD02",30,0)
 ..F  S OPTION=$O(@ARRAY@(NODE,HDATE,OPTION)) Q:OPTION=""  D 
"RTN","KMPRBD02",31,0)
 ...S JOB=0,(COUNT,NP,PT)=""
"RTN","KMPRBD02",32,0)
 ...F  S JOB=$O(@ARRAY@(NODE,HDATE,OPTION,JOB)) Q:'JOB  D 
"RTN","KMPRBD02",33,0)
 ....S PTM=""
"RTN","KMPRBD02",34,0)
 ....F  S PTM=$O(@ARRAY@(NODE,HDATE,OPTION,JOB,PTM)) Q:PTM=""  D 
"RTN","KMPRBD02",35,0)
 .....; PTM:  non-prime time = 0   prime time = 1
"RTN","KMPRBD02",36,0)
 .....S DATA=@ARRAY@(NODE,HDATE,OPTION,JOB,PTM)
"RTN","KMPRBD02",37,0)
 .....; prime time or non-prime time.
"RTN","KMPRBD02",38,0)
 .....S VAR=$S(PTM:"PT",1:"NP") Q:VAR=""
"RTN","KMPRBD02",39,0)
 .....; accumulate totals.
"RTN","KMPRBD02",40,0)
 .....F I=1:1:8 S $P(@VAR,U,I)=$P(@VAR,U,I)+$P(DATA,U,I)
"RTN","KMPRBD02",41,0)
 .....; piece 1 non-prime time - piece 2 prime time
"RTN","KMPRBD02",42,0)
 .....S $P(COUNT,U,(PTM+1))=$P(COUNT,U,(PTM+1))+1
"RTN","KMPRBD02",43,0)
 .....; remove data from array.
"RTN","KMPRBD02",44,0)
 .....K @ARRAY@(NODE,HDATE,OPTION,JOB,PTM)
"RTN","KMPRBD02",45,0)
 ...;
"RTN","KMPRBD02",46,0)
 ...; back to OPTION level.
"RTN","KMPRBD02",47,0)
 ...; file data into file #8971.1
"RTN","KMPRBD02",48,0)
 ...D FILE^KMPRBD03(HDATE,NODE,OPTION,PT,NP,$P(COUNT,U,2),$P(COUNT,U),.OKAY,.MESSAGE)
"RTN","KMPRBD02",49,0)
 ...; if not filed successfully set into 'ERR' node.
"RTN","KMPRBD02",50,0)
 ...I 'OKAY D 
"RTN","KMPRBD02",51,0)
 ....S ^XTMP("KMPR","ERR",HDATE,NODE,OPTION,0)=NP_$P(COUNT,U)
"RTN","KMPRBD02",52,0)
 ....S ^XTMP("KMPR","ERR",HDATE,NODE,OPTION,1)=PT_$P(COUNT,U,2)
"RTN","KMPRBD02",53,0)
 ....F I=0:0 S I=$O(MESSAGE(I)) Q:'I  D 
"RTN","KMPRBD02",54,0)
 .....S ^XTMP("KMPR","ERR",HDATE,NODE,OPTION,"MSG",I)=MESSAGE(I)
"RTN","KMPRBD02",55,0)
 ;
"RTN","KMPRBD02",56,0)
 Q
"RTN","KMPRBD02",57,0)
 ;
"RTN","KMPRBD02",58,0)
WEEKLY(KMPRDT) ;-- compress daily stats to weekly
"RTN","KMPRBD02",59,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRBD02",60,0)
 ; KMPRDT... Compression date in internal fileman formt.  This date
"RTN","KMPRBD02",61,0)
 ;           must be a Sunday.  It represents the date from which the
"RTN","KMPRBD02",62,0)
 ;           previous weeks data should be compressed. 
"RTN","KMPRBD02",63,0)
 ;           Example: if KMPRDT = 2981011  then compression will begin
"RTN","KMPRBD02",64,0)
 ;                    on 2981010 (KMPRDT-1)
"RTN","KMPRBD02",65,0)
 ;
"RTN","KMPRBD02",66,0)
 ; Every Sunday compress the daily stats in file #8971.1 into weekly
"RTN","KMPRBD02",67,0)
 ; and upload the data to the CM RUM National Database
"RTN","KMPRBD02",68,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRBD02",69,0)
 ;
"RTN","KMPRBD02",70,0)
 Q:'$G(KMPRDT)
"RTN","KMPRBD02",71,0)
 ;
"RTN","KMPRBD02",72,0)
 N DA,DATA,DATE,DAYS,DELDATE,DIK,END,IEN,J,SITE,START,TMPARRY,TMPARRY1
"RTN","KMPRBD02",73,0)
 ;
"RTN","KMPRBD02",74,0)
 ; quit if not sunday.
"RTN","KMPRBD02",75,0)
 Q:$$DOW^XLFDT(KMPRDT,1)
"RTN","KMPRBD02",76,0)
 ; storage array.
"RTN","KMPRBD02",77,0)
 S TMPARRY=$NA(^TMP($J))
"RTN","KMPRBD02",78,0)
 ; processed entries.
"RTN","KMPRBD02",79,0)
 S TMPARRY1=$NA(^TMP("KMPR PROC",$J))
"RTN","KMPRBD02",80,0)
 K @TMPARRY,@TMPARRY1
"RTN","KMPRBD02",81,0)
 ; site info.
"RTN","KMPRBD02",82,0)
 S SITE=$$SITE^VASITE Q:SITE=""
"RTN","KMPRBD02",83,0)
 S DATE=KMPRDT
"RTN","KMPRBD02",84,0)
 S (START,END)=""
"RTN","KMPRBD02",85,0)
 ; Date to begin deletion.
"RTN","KMPRBD02",86,0)
 S DELDATE=$$FMADD^XLFDT(KMPRDT,-14)
"RTN","KMPRBD02",87,0)
 ; 'actual' number of days for current time frame.
"RTN","KMPRBD02",88,0)
 S DAYS=""
"RTN","KMPRBD02",89,0)
 ;
"RTN","KMPRBD02",90,0)
 W:'$D(ZTQUEUED) !,"Compressing data into weekly format..."
"RTN","KMPRBD02",91,0)
 ; Reverse $order to get previous dates.
"RTN","KMPRBD02",92,0)
 F  S DATE=$O(^KMPR(8971.1,"B",DATE),-1) Q:'DATE  D 
"RTN","KMPRBD02",93,0)
 .; If DATE is saturday set START and END dates and kill TMPARRY.
"RTN","KMPRBD02",94,0)
 .I $$DOW^XLFDT(DATE,1)=6 D 
"RTN","KMPRBD02",95,0)
 ..S END=DATE,START=$$FMADD^XLFDT(DATE,-6),DAYS=0
"RTN","KMPRBD02",96,0)
 ..K @TMPARRY
"RTN","KMPRBD02",97,0)
 .Q:'START
"RTN","KMPRBD02",98,0)
 .S IEN=0,DAYS=DAYS+1
"RTN","KMPRBD02",99,0)
 .F  S IEN=$O(^KMPR(8971.1,"B",DATE,IEN)) Q:'IEN  D 
"RTN","KMPRBD02",100,0)
 ..Q:'$D(^KMPR(8971.1,IEN,0))
"RTN","KMPRBD02",101,0)
 ..; data nodes into DATA() array.
"RTN","KMPRBD02",102,0)
 ..S DATA(0)=^KMPR(8971.1,IEN,0),DATA(1)=$G(^(1)),DATA(2)=$G(^(2))
"RTN","KMPRBD02",103,0)
 ..; Quit if data has already been sent to national database.
"RTN","KMPRBD02",104,0)
 ..Q:$P(DATA(0),U,2)
"RTN","KMPRBD02",105,0)
 ..; Cpu node.
"RTN","KMPRBD02",106,0)
 ..S NODE=$P(DATA(0),U,3) Q:NODE=""
"RTN","KMPRBD02",107,0)
 ..; OPTION = OptionName^ProtocolName.
"RTN","KMPRBD02",108,0)
 ..; option.
"RTN","KMPRBD02",109,0)
 ..S OPTION=$P(DATA(0),U,4)
"RTN","KMPRBD02",110,0)
 ..; rpc.
"RTN","KMPRBD02",111,0)
 ..S:OPTION="" OPTION=$P(DATA(0),U,7)
"RTN","KMPRBD02",112,0)
 ..; hl7.
"RTN","KMPRBD02",113,0)
 ..S:OPTION="" OPTION=$P(DATA(0),U,9)
"RTN","KMPRBD02",114,0)
 ..Q:OPTION=""
"RTN","KMPRBD02",115,0)
 ..S $P(OPTION,U,2)=$P(DATA(0),U,5)
"RTN","KMPRBD02",116,0)
 ..S @TMPARRY@(START,NODE,OPTION,0)=DATA(0)
"RTN","KMPRBD02",117,0)
 ..; change first piece to starting date (START)
"RTN","KMPRBD02",118,0)
 ..S $P(@TMPARRY@(START,NODE,OPTION,0),U)=START
"RTN","KMPRBD02",119,0)
 ..; second piece not applicable to national database
"RTN","KMPRBD02",120,0)
 ..S $P(@TMPARRY@(START,NODE,OPTION,0),U,2)=""
"RTN","KMPRBD02",121,0)
 ..; EndingDate^SiteName^SiteNumber.
"RTN","KMPRBD02",122,0)
 ..S @TMPARRY@(START,NODE,OPTION,99)=END_U_$P(SITE,U,2)_U_$P(SITE,U,3)
"RTN","KMPRBD02",123,0)
 ..; Nodes 1 and 2.
"RTN","KMPRBD02",124,0)
 ..F I=1,2 I DATA(I)]"" D 
"RTN","KMPRBD02",125,0)
 ...; Add data to get weekly totals.
"RTN","KMPRBD02",126,0)
 ...F J=1:1:8 S $P(@TMPARRY@(START,NODE,OPTION,I),U,J)=$P($G(@TMPARRY@(START,NODE,OPTION,I)),U,J)+$P(DATA(I),U,J)
"RTN","KMPRBD02",127,0)
 ..;
"RTN","KMPRBD02",128,0)
 ..; Back to IEN level.
"RTN","KMPRBD02",129,0)
 ..; Add to processed array.
"RTN","KMPRBD02",130,0)
 ..S @TMPARRY1@(IEN)=""
"RTN","KMPRBD02",131,0)
 .;
"RTN","KMPRBD02",132,0)
 .; Back to DATE level.
"RTN","KMPRBD02",133,0)
 .; If START then transmit data.
"RTN","KMPRBD02",134,0)
 .I DATE=START I $D(@TMPARRY) D TRANSMIT K @TMPARRY
"RTN","KMPRBD02",135,0)
 ;
"RTN","KMPRBD02",136,0)
 ; Transmit data to national database.
"RTN","KMPRBD02",137,0)
 W:'$D(ZTQUEUED) !,"Transmitting data to national database..."
"RTN","KMPRBD02",138,0)
 D TRANSMIT
"RTN","KMPRBD02",139,0)
 K @TMPARRY
"RTN","KMPRBD02",140,0)
 ;
"RTN","KMPRBD02",141,0)
 ; update field .02 (SENT TO CM NATIONAL DATABASE) to 'YES' for all
"RTN","KMPRBD02",142,0)
 ; processed entries.
"RTN","KMPRBD02",143,0)
 W:'$D(ZTQUEUED) !,"Updating records to reflect transmission..."
"RTN","KMPRBD02",144,0)
 S IEN=0
"RTN","KMPRBD02",145,0)
 F  S IEN=$O(@TMPARRY1@(IEN)) Q:'IEN  D 
"RTN","KMPRBD02",146,0)
 .;S $P(^KMPR(8971.1,IEN,0),U,2)=1
"RTN","KMPRBD02",147,0)
 .K FDA,ERROR
"RTN","KMPRBD02",148,0)
 .S FDA($J,8971.1,IEN_",",.02)=1
"RTN","KMPRBD02",149,0)
 .D FILE^DIE("","FDA($J)","ERROR")
"RTN","KMPRBD02",150,0)
 K @TMPARRY1
"RTN","KMPRBD02",151,0)
 ;
"RTN","KMPRBD02",152,0)
 ; Begin with DELDATE date and reverse $order deleting old entries.
"RTN","KMPRBD02",153,0)
 ; This process will leave two complete weeks of data on line.
"RTN","KMPRBD02",154,0)
 W:'$D(ZTQUEUED) !,"Deleting old records..."
"RTN","KMPRBD02",155,0)
 S DATE=DELDATE
"RTN","KMPRBD02",156,0)
 F  S DATE=$O(^KMPR(8971.1,"B",DATE),-1) Q:'DATE!(DATE>END)  D 
"RTN","KMPRBD02",157,0)
 .F IEN=0:0 S IEN=$O(^KMPR(8971.1,"B",DATE,IEN)) Q:'IEN  D 
"RTN","KMPRBD02",158,0)
 ..; quit if not 'sent to cm database'.
"RTN","KMPRBD02",159,0)
 ..Q:'$P($G(^KMPR(8971.1,IEN,0)),U,2)
"RTN","KMPRBD02",160,0)
 ..; Delete entry.
"RTN","KMPRBD02",161,0)
 ..S DA=IEN,DIK="^KMPR(8971.1," D ^DIK
"RTN","KMPRBD02",162,0)
 ;
"RTN","KMPRBD02",163,0)
 Q
"RTN","KMPRBD02",164,0)
 ;
"RTN","KMPRBD02",165,0)
TRANSMIT ;-- format TMPARRY data, put into e-mail and send to cm.
"RTN","KMPRBD02",166,0)
 ;
"RTN","KMPRBD02",167,0)
 Q:$G(TMPARRY)=""
"RTN","KMPRBD02",168,0)
 ;
"RTN","KMPRBD02",169,0)
 N I,IEN,LN,N,O,S,UPLDARRY,XMSUB,X,XMTEXT,XMY,XMZ,Y,Z
"RTN","KMPRBD02",170,0)
 ;
"RTN","KMPRBD02",171,0)
 S UPLDARRY=$NA(^TMP("KMPR UPLOAD",$J))
"RTN","KMPRBD02",172,0)
 K @UPLDARRY
"RTN","KMPRBD02",173,0)
 ; reformat so that data is in ^TMP("KMPR UPLOAD",$J,NUM)= format.
"RTN","KMPRBD02",174,0)
 S DAYS=+$G(DAYS),(IEN,LN)=0,S=""
"RTN","KMPRBD02",175,0)
 F  S S=$O(@TMPARRY@(S)) Q:S=""  S N="" D 
"RTN","KMPRBD02",176,0)
 .F  S N=$O(@TMPARRY@(S,N)) Q:N=""  S O="" D 
"RTN","KMPRBD02",177,0)
 ..F  S O=$O(@TMPARRY@(S,N,O)) Q:O=""  S I="",IEN=IEN+1 D 
"RTN","KMPRBD02",178,0)
 ...F  S I=$O(@TMPARRY@(S,N,O,I)) Q:I=""  D 
"RTN","KMPRBD02",179,0)
 ....; if zero node add DAYS to 10th piece.
"RTN","KMPRBD02",180,0)
 ....S:I=0 $P(@TMPARRY@(S,N,O,I),U,10)=DAYS
"RTN","KMPRBD02",181,0)
 ....S LN=LN+1
"RTN","KMPRBD02",182,0)
 ....S @UPLDARRY@(LN)=IEN_","_I_")="_@TMPARRY@(S,N,O,I)
"RTN","KMPRBD02",183,0)
 ;
"RTN","KMPRBD02",184,0)
 ; quit if no data to transmit.
"RTN","KMPRBD02",185,0)
 Q:'$D(@UPLDARRY)
"RTN","KMPRBD02",186,0)
 ; send packman message.
"RTN","KMPRBD02",187,0)
 S XMTEXT="^TMP(""KMPR UPLOAD"","_$J_","
"RTN","KMPRBD02",188,0)
 S XMSUB="RUM DATA - "_$P(SITE,U,2)_" ("_$P(SITE,U,3)_") - "_$$FMTE^XLFDT(START)
"RTN","KMPRBD02",189,0)
 S XMY("S.KMP2-RUM-SERVER@ISC-ALBANY.VA.GOV")=""
"RTN","KMPRBD02",190,0)
 S XMY("CAPACITY,MANAGEMENT@ISC-ALBANY.VA.GOV")=""
"RTN","KMPRBD02",191,0)
 D ^XMD
"RTN","KMPRBD02",192,0)
 W:'$D(ZTQUEUED) !,"Message #",$G(XMZ)," sent..."
"RTN","KMPRBD02",193,0)
 K @UPLDARRY
"RTN","KMPRBD02",194,0)
 ;
"RTN","KMPRBD02",195,0)
 Q
"RTN","KMPRBD03")
0^3^B6087423
"RTN","KMPRBD03",1,0)
KMPRBD03 ;SFISC/RAK - Resource Usage Monitor Data Compression ;10 Oct 98
"RTN","KMPRBD03",2,0)
 ;;1.0;CAPACITY MANAGEMENT - RUM;;Dec 09, 1998
"RTN","KMPRBD03",3,0)
 ;
"RTN","KMPRBD03",4,0)
 ; Background Driver (cont.)
"RTN","KMPRBD03",5,0)
 ;
"RTN","KMPRBD03",6,0)
FILE(KMPRDATE,KMPRNODE,KMPROPT,KMPRPT,KMPRNP,KMPRPTHR,KMPRNPHR,KMPROK,KMPRMSG) ;
"RTN","KMPRBD03",7,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRBD03",8,0)
 ; KMPRDATE.... Date in $H Format
"RTN","KMPRBD03",9,0)
 ; KMPRNODE.... Node Name
"RTN","KMPRBD03",10,0)
 ; KMPROPT..... Option (in 2 pieces with "***" as delimiter)
"RTN","KMPRBD03",11,0)
 ;                piece 1 - option name
"RTN","KMPRBD03",12,0)
 ;                piece 2 - protocol (optional)
"RTN","KMPRBD03",13,0)
 ; KMPRPT...... Prime Time Data (8 elements)
"RTN","KMPRBD03",14,0)
 ; KMPRNP...... Non Prime Data (8 elements)
"RTN","KMPRBD03",15,0)
 ; KMPRPTHR.... Number of Prime Time Hours
"RTN","KMPRBD03",16,0)
 ; KMPRNPHR.... Number of Non Prime Hours
"RTN","KMPRBD03",17,0)
 ; KMPROK...... Returns: 0 - update not successful
"RTN","KMPRBD03",18,0)
 ;                       1 - update successful
"RTN","KMPRBD03",19,0)
 ; KMPRMSG..... If KMPROK = 0 then message text will be returned in this
"RTN","KMPRBD03",20,0)
 ;              array (passed by reference).
"RTN","KMPRBD03",21,0)
 ;
"RTN","KMPRBD03",22,0)
 ; File data in file #8971.1 (RESOUCE USAGE MONITOR).
"RTN","KMPRBD03",23,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRBD03",24,0)
 ;
"RTN","KMPRBD03",25,0)
 S KMPROK=0
"RTN","KMPRBD03",26,0)
 Q:'$G(KMPRDATE)
"RTN","KMPRBD03",27,0)
 Q:$G(KMPRNODE)=""
"RTN","KMPRBD03",28,0)
 Q:$G(KMPROPT)=""
"RTN","KMPRBD03",29,0)
 S KMPRPT=$G(KMPRPT),KMPRNP=$G(KMPRNP)
"RTN","KMPRBD03",30,0)
 S KMPRPTHR=+$G(KMPRPTHR),KMPRNPHR=+$G(KMPRNPHR)
"RTN","KMPRBD03",31,0)
 S KMPROK=1
"RTN","KMPRBD03",32,0)
 K KMPRMSG
"RTN","KMPRBD03",33,0)
 ;
"RTN","KMPRBD03",34,0)
 N FDA,I,J,MESSAGE,OPT,ZIEN
"RTN","KMPRBD03",35,0)
 ;
"RTN","KMPRBD03",36,0)
 ; date.
"RTN","KMPRBD03",37,0)
 S FDA($J,8971.1,"+1,",.01)=$$HTFM^XLFDT(KMPRDATE)
"RTN","KMPRBD03",38,0)
 ; sent to cm national database.
"RTN","KMPRBD03",39,0)
 S FDA($J,8971.1,"+1,",.02)=0
"RTN","KMPRBD03",40,0)
 ; node.
"RTN","KMPRBD03",41,0)
 S FDA($J,8971.1,"+1,",.03)=KMPRNODE
"RTN","KMPRBD03",42,0)
 ; option.
"RTN","KMPRBD03",43,0)
 S OPT=$P(KMPROPT,"***")
"RTN","KMPRBD03",44,0)
 ; rum designation.
"RTN","KMPRBD03",45,0)
 S FDA($J,8971.1,"+1,",.08)=$$RUMDESIG(OPT)
"RTN","KMPRBD03",46,0)
 ; if the first character of OPT is '`' then this is an RPC.
"RTN","KMPRBD03",47,0)
 I $E(OPT)="`" S FDA($J,8971.1,"+1,",.07)=$E(OPT,2,999)
"RTN","KMPRBD03",48,0)
 ; if the first character of OPT is '&' then this is an HL7.
"RTN","KMPRBD03",49,0)
 E  I $E(OPT)="&" S FDA($J,8971.1,"+1,",.09)=$E(OPT,2,999)
"RTN","KMPRBD03",50,0)
 ; option.
"RTN","KMPRBD03",51,0)
 E  S FDA($J,8971.1,"+1,",.04)=$$OPTION(OPT)
"RTN","KMPRBD03",52,0)
 ; protocol.
"RTN","KMPRBD03",53,0)
 S:$P(KMPROPT,"***",2)'="" FDA($J,8971.1,"+1,",.05)=$P(KMPROPT,"***",2)
"RTN","KMPRBD03",54,0)
 ;
"RTN","KMPRBD03",55,0)
 ; populate prime time and non-prime time fields.
"RTN","KMPRBD03",56,0)
 F I=1:1:8 S J=I*.01 D
"RTN","KMPRBD03",57,0)
 .; prime time - node 1.
"RTN","KMPRBD03",58,0)
 .I $P(KMPRPT,U,I)'=""&(KMPRPTHR) D 
"RTN","KMPRBD03",59,0)
 ..S FDA($J,8971.1,"+1,",1+J)=$FN($P(KMPRPT,U,I),"",2)
"RTN","KMPRBD03",60,0)
 .; non-prime time - node 2
"RTN","KMPRBD03",61,0)
 .I $P(KMPRNP,U,I)'=""&(KMPRNPHR) D 
"RTN","KMPRBD03",62,0)
 ..S FDA($J,8971.1,"+1,",2+J)=$FN($P(KMPRNP,U,I),"",2)
"RTN","KMPRBD03",63,0)
 ;
"RTN","KMPRBD03",64,0)
 ; update file 8971.1.
"RTN","KMPRBD03",65,0)
 D UPDATE^DIE("","FDA($J)","ZIEN","MESSAGE")
"RTN","KMPRBD03",66,0)
 ; if error message.
"RTN","KMPRBD03",67,0)
 I $D(MESSAGE) S KMPROK=0 D MSG^DIALOG("A",.KMPRMSG,60,10,"MESSAGE")
"RTN","KMPRBD03",68,0)
 ;
"RTN","KMPRBD03",69,0)
 Q
"RTN","KMPRBD03",70,0)
 ;
"RTN","KMPRBD03",71,0)
RUMDESIG(KMPROPT) ;-- extrinsic function - determine rum designation.
"RTN","KMPRBD03",72,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRBD03",73,0)
 ; KMPROPT... Option name.
"RTN","KMPRBD03",74,0)
 ;
"RTN","KMPRBD03",75,0)
 ; Return: RUM Designation (see field #.08 RUM DESIGNATION in file
"RTN","KMPRBD03",76,0)
 ;         #8971.1).
"RTN","KMPRBD03",77,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRBD03",78,0)
 ;
"RTN","KMPRBD03",79,0)
 ; 5 = other.
"RTN","KMPRBD03",80,0)
 Q:$G(KMPROPT)="" 5
"RTN","KMPRBD03",81,0)
 ; 1 = taskman
"RTN","KMPRBD03",82,0)
 Q:KMPROPT="$AFTR ZTMS$"!(KMPROPT="$STRT ZTMS$")!($E(KMPROPT)="!") 1
"RTN","KMPRBD03",83,0)
 ; 3 = broker.
"RTN","KMPRBD03",84,0)
 Q:$E(KMPROPT)="`" 3
"RTN","KMPRBD03",85,0)
 ; 4 = hl7
"RTN","KMPRBD03",86,0)
 Q:$E(KMPROPT)="&" 4
"RTN","KMPRBD03",87,0)
 ; 2 - user.
"RTN","KMPRBD03",88,0)
 Q 2
"RTN","KMPRBD03",89,0)
 ;
"RTN","KMPRBD03",90,0)
OPTION(KMPROPT) ;-- extrinsic function - option name.
"RTN","KMPRBD03",91,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRBD03",92,0)
 ; KMPROPT... Option name (as it appears from ^XTMP("KMPR","HR").
"RTN","KMPRBD03",93,0)
 ;
"RTN","KMPRBD03",94,0)
 ; Return: Option name with extraneous characters removed.
"RTN","KMPRBD03",95,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRBD03",96,0)
 ;
"RTN","KMPRBD03",97,0)
 Q:$G(KMPROPT)="" ""
"RTN","KMPRBD03",98,0)
 Q:$E(KMPROPT)="!" $E(KMPROPT,2,999)
"RTN","KMPRBD03",99,0)
 ; rpc.
"RTN","KMPRBD03",100,0)
 Q:$E(KMPROPT)="`" ""
"RTN","KMPRBD03",101,0)
 ; hl7.
"RTN","KMPRBD03",102,0)
 Q:$E(KMPROPT)="&" ""
"RTN","KMPRBD03",103,0)
 Q KMPROPT
"RTN","KMPRC")
1^4
"RTN","KMPRENV")
0^5^B673052
"RTN","KMPRENV",1,0)
KMPRENV ;SF/RAK - RUM Environment Check ;16 Oct 98
"RTN","KMPRENV",2,0)
 ;;1.0;CAPACITY MANAGEMENT - RUM;;Dec 09, 1998
"RTN","KMPRENV",3,0)
 ;
"RTN","KMPRENV",4,0)
EN ;-- entry point.
"RTN","KMPRENV",5,0)
 ; quit if not KIDS install.
"RTN","KMPRENV",6,0)
 Q:$G(XPDENV)'=1
"RTN","KMPRENV",7,0)
 ; set default answer to 'no' for disabling options/protocols etc.
"RTN","KMPRENV",8,0)
 S:+$G(XPDENV) XPDDIQ("XPZ1","B")="NO"
"RTN","KMPRENV",9,0)
 N IEN
"RTN","KMPRENV",10,0)
 S IEN=$O(^XPD(9.7,"B","XU*8.0*107",0))
"RTN","KMPRENV",11,0)
 ; if kernel patch XU*8.0*107 does not exist then do not install.
"RTN","KMPRENV",12,0)
 I 'IEN S XPDQUIT=2
"RTN","KMPRENV",13,0)
 ; if kernel patch XU*8.0*107 has not been installed.
"RTN","KMPRENV",14,0)
 I $P($G(^XPD(9.7,+IEN,0)),U,9)'=3 S XPDQUIT=2
"RTN","KMPRENV",15,0)
 I $G(XPDQUIT)=2 D 
"RTN","KMPRENV",16,0)
 .D MES^XPDUTL("Kernel patch XU*8.0*107 must be installed before proceeding!")
"RTN","KMPRENV",17,0)
 Q
"RTN","KMPRJCK1")
1^6
"RTN","KMPRJK17")
1^7
"RTN","KMPRKAK")
1^8
"RTN","KMPRMGL1")
1^9
"RTN","KMPRMGL2")
1^10
"RTN","KMPRMGL5")
1^11
"RTN","KMPRMGL6")
1^12
"RTN","KMPRP1")
0^50^B14517418
"RTN","KMPRP1",1,0)
KMPRP1 ;SFISC/RAK - RUM Data by Option ;4 Nov 1998
"RTN","KMPRP1",2,0)
 ;;1.0;CAPACITY MANAGEMENT - RUM;;Dec 09, 1998
"RTN","KMPRP1",3,0)
EN ;-- entry point.
"RTN","KMPRP1",4,0)
 ;
"RTN","KMPRP1",5,0)
 N %ZIS,CONT,DIC,IORVOFF,IORVON,KMPRDATE,KMPROPT,OUT,POP
"RTN","KMPRP1",6,0)
 N X,Y,ZTDESC,ZTRTN,ZTSAVE,ZTSK
"RTN","KMPRP1",7,0)
 ;
"RTN","KMPRP1",8,0)
 D ZIS^KMPRUTL
"RTN","KMPRP1",9,0)
 S OUT=0
"RTN","KMPRP1",10,0)
 F  D  Q:OUT
"RTN","KMPRP1",11,0)
 .W @IOF,!,?30,IORVON," RUM Data by Option ",IORVOFF,!
"RTN","KMPRP1",12,0)
 .K DIC S DIC=19,DIC(0)="AEMQZ",DIC("A")="Select Option: "
"RTN","KMPRP1",13,0)
 .W ! D ^DIC I Y<0 S OUT=1 Q
"RTN","KMPRP1",14,0)
 .S KMPROPT=+Y_"^"_Y(0,0)
"RTN","KMPRP1",15,0)
 .; determine start date from file 8971.1
"RTN","KMPRP1",16,0)
 .D RUMDATES^KMPRUTL(.KMPRDATE)
"RTN","KMPRP1",17,0)
 .Q:'KMPRDATE
"RTN","KMPRP1",18,0)
 .; select output device.
"RTN","KMPRP1",19,0)
 .S %ZIS="Q",%ZIS("A")="Device: ",%ZIS("B")="HOME"
"RTN","KMPRP1",20,0)
 .W ! D ^%ZIS I POP W !,"No action taken." Q
"RTN","KMPRP1",21,0)
 .; if queued.
"RTN","KMPRP1",22,0)
 .I $D(IO("Q")) K IO("Q") D  Q
"RTN","KMPRP1",23,0)
 ..S ZTDESC="RUM Data by Option for '"_$P(KMPROPT,U,2)_"'."
"RTN","KMPRP1",24,0)
 ..S ZTRTN="EN1^KMPRP1"
"RTN","KMPRP1",25,0)
 ..S ZTSAVE("KMPRDATE")="",ZTSAVE("KMPROPT")=""
"RTN","KMPRP1",26,0)
 ..D ^%ZTLOAD W:$G(ZTSK) !,"Task #",ZTSK
"RTN","KMPRP1",27,0)
 ..D EXIT
"RTN","KMPRP1",28,0)
 .;
"RTN","KMPRP1",29,0)
 .; if output to terminal display message.
"RTN","KMPRP1",30,0)
 .W:$E(IOST,1,2)="C-" !?3,"...compiling data..."
"RTN","KMPRP1",31,0)
 .D EN1
"RTN","KMPRP1",32,0)
 Q
"RTN","KMPRP1",33,0)
 ;
"RTN","KMPRP1",34,0)
EN1 ;-- entry point from taskman.
"RTN","KMPRP1",35,0)
 ;
"RTN","KMPRP1",36,0)
 Q:'$G(KMPRDATE)
"RTN","KMPRP1",37,0)
 Q:$G(KMPROPT)=""
"RTN","KMPRP1",38,0)
 ;
"RTN","KMPRP1",39,0)
 N ELEMENT,KMPRARRY,KMPRDAYS
"RTN","KMPRP1",40,0)
 ;
"RTN","KMPRP1",41,0)
 ; set elements data into ELEMENT() array.
"RTN","KMPRP1",42,0)
 D ELEARRY^KMPRUTL("ELEMENT") Q:'$D(ELEMENT)
"RTN","KMPRP1",43,0)
 S KMPRARRY=$NA(^TMP("KMPR OPT DATA",$J))
"RTN","KMPRP1",44,0)
 K @KMPRARRY
"RTN","KMPRP1",45,0)
 D DATA,PRINT,EXIT
"RTN","KMPRP1",46,0)
 K @KMPRARRY
"RTN","KMPRP1",47,0)
 ;
"RTN","KMPRP1",48,0)
 Q
"RTN","KMPRP1",49,0)
 ;
"RTN","KMPRP1",50,0)
DATA ;-- set data into KMPRARRY
"RTN","KMPRP1",51,0)
 Q:'$D(ELEMENT)
"RTN","KMPRP1",52,0)
 Q:$G(KMPRARRY)=""
"RTN","KMPRP1",53,0)
 Q:'$G(KMPRDATE)
"RTN","KMPRP1",54,0)
 Q:$G(KMPROPT)=""
"RTN","KMPRP1",55,0)
 ;
"RTN","KMPRP1",56,0)
 N DATE,END,I,IEN,OPTION,START
"RTN","KMPRP1",57,0)
 ;
"RTN","KMPRP1",58,0)
 ; start and end dates.
"RTN","KMPRP1",59,0)
 S START=$P(KMPRDATE,U),END=$P(KMPRDATE,U,2)
"RTN","KMPRP1",60,0)
 S DATE=START-.1,KMPRDAYS=0
"RTN","KMPRP1",61,0)
 F  S DATE=$O(^KMPR(8971.1,"B",DATE)) Q:'DATE!(DATE>END)  D 
"RTN","KMPRP1",62,0)
 .S IEN=0,KMPRDAYS=KMPRDAYS+1
"RTN","KMPRP1",63,0)
 .F  S IEN=$O(^KMPR(8971.1,"B",DATE,IEN)) Q:'IEN  D 
"RTN","KMPRP1",64,0)
 ..Q:'$D(^KMPR(8971.1,IEN,0))  S DATA(0)=^(0),DATA(1)=$G(^(1)),DATA(2)=$G(^(2))
"RTN","KMPRP1",65,0)
 ..S OPTION=$P(DATA(0),U,4)
"RTN","KMPRP1",66,0)
 ..Q:OPTION'=$P(KMPROPT,U,2)
"RTN","KMPRP1",67,0)
 ..F I=1:1:8 D 
"RTN","KMPRP1",68,0)
 ...S $P(@KMPRARRY@(OPTION),U,I)=$P($G(@KMPRARRY@(OPTION)),U,I)+$P(DATA(1),U,I)
"RTN","KMPRP1",69,0)
 ...S $P(@KMPRARRY@(OPTION),U,I)=$P($G(@KMPRARRY@(OPTION)),U,I)+$P(DATA(2),U,I)
"RTN","KMPRP1",70,0)
 ;
"RTN","KMPRP1",71,0)
 Q
"RTN","KMPRP1",72,0)
 ;
"RTN","KMPRP1",73,0)
EXIT ;
"RTN","KMPRP1",74,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","KMPRP1",75,0)
 D ^%ZISC
"RTN","KMPRP1",76,0)
 K KMPUDATE,KMPUNAM
"RTN","KMPRP1",77,0)
 ;
"RTN","KMPRP1",78,0)
 Q
"RTN","KMPRP1",79,0)
 ;
"RTN","KMPRP1",80,0)
PRINT ;-- print data from KMPRARRY.
"RTN","KMPRP1",81,0)
 Q:'$D(ELEMENT)
"RTN","KMPRP1",82,0)
 Q:$G(KMPRARRY)=""
"RTN","KMPRP1",83,0)
 ;
"RTN","KMPRP1",84,0)
 U IO
"RTN","KMPRP1",85,0)
 ;
"RTN","KMPRP1",86,0)
 N DATA,OCCUR,I,NUMBER,PIECE,SITE
"RTN","KMPRP1",87,0)
 ;
"RTN","KMPRP1",88,0)
 ; facility name.
"RTN","KMPRP1",89,0)
 S SITE=$$SITE^VASITE
"RTN","KMPRP1",90,0)
 S SITE=$P(SITE,U,2)_" ("_$P(SITE,U,3)_")"
"RTN","KMPRP1",91,0)
 ;
"RTN","KMPRP1",92,0)
 I '$D(@KMPRARRY) D  Q
"RTN","KMPRP1",93,0)
 .D HDR
"RTN","KMPRP1",94,0)
 .W !!!?28,"<<<No Data to Report>>>"
"RTN","KMPRP1",95,0)
 .W !! D CONTINUE^KMPRUTL("Press RETURN to continue",.CONT)
"RTN","KMPRP1",96,0)
 ;
"RTN","KMPRP1",97,0)
 S OPTION=""
"RTN","KMPRP1",98,0)
 F  S OPTION=$O(@KMPRARRY@(OPTION)) Q:OPTION=""  D 
"RTN","KMPRP1",99,0)
 .D HDR S DATA=@KMPRARRY@(OPTION),I=0,OCCUR=$P(DATA,U,8)
"RTN","KMPRP1",100,0)
 .F  S I=$O(ELEMENT(I)) Q:'I  D 
"RTN","KMPRP1",101,0)
 ..W !,$P(ELEMENT(I),U) S PIECE=$P(ELEMENT(I),U,2)
"RTN","KMPRP1",102,0)
 ..W $$REPEAT^XLFSTR(".",25-$X)
"RTN","KMPRP1",103,0)
 ..S NUMBER=$P(DATA,U,PIECE)
"RTN","KMPRP1",104,0)
 ..; per occurrence.
"RTN","KMPRP1",105,0)
 ..W:PIECE'=8 ?28,$J($FN(NUMBER/OCCUR,",",$S(I<3:2,1:0)),$S(I<3:14,1:11))
"RTN","KMPRP1",106,0)
 ..W ?50,$J($FN(NUMBER,",",$S(I<3:2,1:0)),$S(I<3:18,1:15))
"RTN","KMPRP1",107,0)
 ;
"RTN","KMPRP1",108,0)
 W !! D CONTINUE^KMPRUTL("Press RETURN to continue",.CONT)
"RTN","KMPRP1",109,0)
 ;
"RTN","KMPRP1",110,0)
 Q
"RTN","KMPRP1",111,0)
 ;
"RTN","KMPRP1",112,0)
HDR ;
"RTN","KMPRP1",113,0)
 N TITLE
"RTN","KMPRP1",114,0)
 W:$Y @IOF
"RTN","KMPRP1",115,0)
 S TITLE="RUM Data for Option: "_$P(KMPROPT,U,2)
"RTN","KMPRP1",116,0)
 W !?(80-$L(TITLE)\2),TITLE
"RTN","KMPRP1",117,0)
 W !?(80-$L($G(SITE))\2),$G(SITE)
"RTN","KMPRP1",118,0)
 W !?23,"For "_$P($G(KMPRDATE),U,3)_" to "_$P($G(KMPRDATE),U,4)
"RTN","KMPRP1",119,0)
 W !
"RTN","KMPRP1",120,0)
 W !?28,"per Occurrence",?50,"         Totals"
"RTN","KMPRP1",121,0)
 W !
"RTN","KMPRP1",122,0)
 ;
"RTN","KMPRP1",123,0)
 Q
"RTN","KMPRPA01")
1^13
"RTN","KMPRPA03")
1^14
"RTN","KMPRPA05")
1^15
"RTN","KMPRPA11")
1^16
"RTN","KMPRPA13")
1^17
"RTN","KMPRPA15")
1^18
"RTN","KMPRPA17")
1^19
"RTN","KMPRPA18")
1^20
"RTN","KMPRPA19")
1^21
"RTN","KMPRPA20")
1^22
"RTN","KMPRPAU1")
1^23
"RTN","KMPRPG01")
0^24^B5597122
"RTN","KMPRPG01",1,0)
KMPRPG01 ;SFISC/RAK - RUM Data for All Nodes (Graph) ;22 Oct 1998
"RTN","KMPRPG01",2,0)
 ;;1.0;CAPACITY MANAGEMENT - RUM;;Dec 09, 1998
"RTN","KMPRPG01",3,0)
 ;
"RTN","KMPRPG01",4,0)
EN ;-- entry point.
"RTN","KMPRPG01",5,0)
 ;
"RTN","KMPRPG01",6,0)
 N DATES,DIR,ELEMENT,I,IORVOFF,IORVON,LHTIME,OPTIONS,OUT,TMP,X,Y
"RTN","KMPRPG01",7,0)
 ;
"RTN","KMPRPG01",8,0)
 D ZIS^KMPRUTL
"RTN","KMPRPG01",9,0)
 ; temporary global storage for stats.
"RTN","KMPRPG01",10,0)
 S TMP=$NA(^TMP("KMPR HR STATS",$J))
"RTN","KMPRPG01",11,0)
 S OUT=0
"RTN","KMPRPG01",12,0)
 F  D  Q:OUT
"RTN","KMPRPG01",13,0)
 .W @IOF,!?30,IORVON," Data for All Nodes (Graph) ",IORVOFF,!!
"RTN","KMPRPG01",14,0)
 .D GRPHMSG^KMPRUTL
"RTN","KMPRPG01",15,0)
 .; select element for display.
"RTN","KMPRPG01",16,0)
 .D ELEMENT^KMPRUTL(.Y) I 'Y S OUT=1 Q
"RTN","KMPRPG01",17,0)
 .S ELEMENT=Y_"^"_Y(0)
"RTN","KMPRPG01",18,0)
 .; get date range.
"RTN","KMPRPG01",19,0)
 .D RUMDATES^KMPRUTL(.DATES) Q:'DATES
"RTN","KMPRPG01",20,0)
 .; determine number of nodes.
"RTN","KMPRPG01",21,0)
 .S I=0,X=""
"RTN","KMPRPG01",22,0)
 .F  S X=$O(^KMPR(8971.1,"ANODE",X)) Q:X=""  S I=I+1
"RTN","KMPRPG01",23,0)
 .S OPTIONS="G" S:I<8 OPTIONS=OPTIONS_"D"
"RTN","KMPRPG01",24,0)
 .K @TMP
"RTN","KMPRPG01",25,0)
 .W !!?3,"compiling data for: "
"RTN","KMPRPG01",26,0)
 .; get data - display graph - cleanup.
"RTN","KMPRPG01",27,0)
 .D DATA,GRAPH,EXIT
"RTN","KMPRPG01",28,0)
 .K @TMP
"RTN","KMPRPG01",29,0)
 ;
"RTN","KMPRPG01",30,0)
 Q
"RTN","KMPRPG01",31,0)
 ;
"RTN","KMPRPG01",32,0)
DATA ;-- compile rum stats per node for selected element.
"RTN","KMPRPG01",33,0)
 Q:$G(TMP)=""
"RTN","KMPRPG01",34,0)
 Q:'$G(ELEMENT)
"RTN","KMPRPG01",35,0)
 Q:'$G(DATES)
"RTN","KMPRPG01",36,0)
 ;
"RTN","KMPRPG01",37,0)
 N DAYS,DOTS,I,J,KMPRAR,NODES
"RTN","KMPRPG01",38,0)
 ;
"RTN","KMPRPG01",39,0)
 ; determine if dots should be printed to screen while gathering data.
"RTN","KMPRPG01",40,0)
 S DOTS=$S($E(IOST,1,2)="C-":0,1:1)
"RTN","KMPRPG01",41,0)
 ; set nodes into NODES() array.
"RTN","KMPRPG01",42,0)
 D NODEARRY^KMPRUTL("NODES") Q:'$D(NODES)
"RTN","KMPRPG01",43,0)
 ; get RUM data.
"RTN","KMPRPG01",44,0)
 D ELEMDATA^KMPRUTL2(+ELEMENT,$P(DATES,U),$P(DATES,U,2),.NODES,"KMPRAR",DOTS)
"RTN","KMPRPG01",45,0)
 Q:'$D(KMPRAR)
"RTN","KMPRPG01",46,0)
 ;
"RTN","KMPRPG01",47,0)
 ; format data into TMP array.
"RTN","KMPRPG01",48,0)
 S I="",DAYS=$$FMDIFF^XLFDT($P(DATES,U,2),$P(DATES,U))+1
"RTN","KMPRPG01",49,0)
 F  S I=$O(KMPRAR(I)) Q:I=""  S J=0 D 
"RTN","KMPRPG01",50,0)
 .F  S J=$O(KMPRAR(I,J)) Q:J=""  D 
"RTN","KMPRPG01",51,0)
 ..S $P(@TMP@(I,0),U)=I
"RTN","KMPRPG01",52,0)
 ..S $P(@TMP@(I,0),U,2)=$P(@TMP@(I,0),U,2)+KMPRAR(I,J)
"RTN","KMPRPG01",53,0)
 .S $P(@TMP@(I,0),U,2)=$FN($P(@TMP@(I,0),U,2)/DAYS,"",2)
"RTN","KMPRPG01",54,0)
 ;
"RTN","KMPRPG01",55,0)
 Q
"RTN","KMPRPG01",56,0)
 ;
"RTN","KMPRPG01",57,0)
GRAPH ;-- display data in graph.
"RTN","KMPRPG01",58,0)
 Q:$G(TMP)=""
"RTN","KMPRPG01",59,0)
 Q:'$G(ELEMENT)
"RTN","KMPRPG01",60,0)
 ;
"RTN","KMPRPG01",61,0)
 N TITLES
"RTN","KMPRPG01",62,0)
 ; graph titles.
"RTN","KMPRPG01",63,0)
 S $P(TITLES,U)="RUM Data for All Nodes"
"RTN","KMPRPG01",64,0)
 S $P(TITLES,U,2)="From "_$P($G(DATES),U,3)_" to "_$P($G(DATES),U,4)
"RTN","KMPRPG01",65,0)
 S $P(TITLES,U,3)=$P(ELEMENT,U,2)_"/per "_$S(+ELEMENT=1!(+ELEMENT=7):"occurrence",1:"sec")
"RTN","KMPRPG01",66,0)
 S $P(TITLES,U,4)="Node"
"RTN","KMPRPG01",67,0)
 ; call graphics routine.
"RTN","KMPRPG01",68,0)
 D EN^KMPUG(TMP,TITLES,$G(OPTIONS))
"RTN","KMPRPG01",69,0)
 Q
"RTN","KMPRPG01",70,0)
 ;
"RTN","KMPRPG01",71,0)
EXIT ;
"RTN","KMPRPG01",72,0)
 D ^%ZISC
"RTN","KMPRPG01",73,0)
 Q
"RTN","KMPRPG02")
0^25^B5598139
"RTN","KMPRPG02",1,0)
KMPRPG02 ;SFISC/RAK - RUM Data by Date for Single Node ;27 Oct 1998
"RTN","KMPRPG02",2,0)
 ;;1.0;CAPACITY MANAGEMENT - RUM;;Dec 09, 1998
"RTN","KMPRPG02",3,0)
 ;
"RTN","KMPRPG02",4,0)
EN ;-- entry point.
"RTN","KMPRPG02",5,0)
 ;
"RTN","KMPRPG02",6,0)
 N DATES,DIR,ELEMENT,I,IORVOFF,IORVON,LHTIME,NODE,OPTIONS,OUT,TMP,X,Y
"RTN","KMPRPG02",7,0)
 ;
"RTN","KMPRPG02",8,0)
 D ZIS^KMPRUTL
"RTN","KMPRPG02",9,0)
 ; temporary global storage for stats.
"RTN","KMPRPG02",10,0)
 S TMP=$NA(^TMP("KMPR HR STATS",$J))
"RTN","KMPRPG02",11,0)
 S OUT=0
"RTN","KMPRPG02",12,0)
 F  D  Q:OUT
"RTN","KMPRPG02",13,0)
 .W @IOF,!?23,IORVON," RUM Data by Date for Single Node ",IORVOFF,!!
"RTN","KMPRPG02",14,0)
 .D GRPHMSG^KMPRUTL
"RTN","KMPRPG02",15,0)
 .; select element for display.
"RTN","KMPRPG02",16,0)
 .D ELEMENT^KMPRUTL(.Y) I 'Y S OUT=1 Q
"RTN","KMPRPG02",17,0)
 .S ELEMENT=Y_"^"_Y(0)
"RTN","KMPRPG02",18,0)
 .; get date range.
"RTN","KMPRPG02",19,0)
 .D RUMDATES^KMPRUTL(.DATES) Q:'DATES
"RTN","KMPRPG02",20,0)
 .; set up set-of-codes with nodes.
"RTN","KMPRPG02",21,0)
 .K DIR S DIR(0)="SO^",DIR("A")="Select Node"
"RTN","KMPRPG02",22,0)
 .S I=0,X=""
"RTN","KMPRPG02",23,0)
 .F  S X=$O(^KMPR(8971.1,"ANODE",X)) Q:X=""  D 
"RTN","KMPRPG02",24,0)
 ..S I=I+1,DIR(0)=DIR(0)_I_":"_X_";"
"RTN","KMPRPG02",25,0)
 .D ^DIR I 'Y S OUT=1 Q
"RTN","KMPRPG02",26,0)
 .K NODE S NODE(Y(0))=""
"RTN","KMPRPG02",27,0)
 .S OPTIONS="DGV"
"RTN","KMPRPG02",28,0)
 .K @TMP
"RTN","KMPRPG02",29,0)
 .W !!?3,"compiling data for: "
"RTN","KMPRPG02",30,0)
 .; get data - display graph - cleanup.
"RTN","KMPRPG02",31,0)
 .D DATA,GRAPH,EXIT
"RTN","KMPRPG02",32,0)
 .K @TMP
"RTN","KMPRPG02",33,0)
 ;
"RTN","KMPRPG02",34,0)
 Q
"RTN","KMPRPG02",35,0)
 ;
"RTN","KMPRPG02",36,0)
DATA ;-- compile rum stats per node for selected element.
"RTN","KMPRPG02",37,0)
 Q:$G(TMP)=""
"RTN","KMPRPG02",38,0)
 Q:'$G(ELEMENT)
"RTN","KMPRPG02",39,0)
 Q:'$G(DATES)
"RTN","KMPRPG02",40,0)
 Q:'$D(NODE)=""
"RTN","KMPRPG02",41,0)
 ;
"RTN","KMPRPG02",42,0)
 N DOTS,I,J,KMPRAR
"RTN","KMPRPG02",43,0)
 ;
"RTN","KMPRPG02",44,0)
 ; determine if dots should be printed to screen while gathering data.
"RTN","KMPRPG02",45,0)
 S DOTS=$S($E(IOST,1,2)="C-":0,1:1)
"RTN","KMPRPG02",46,0)
 ; get RUM data.
"RTN","KMPRPG02",47,0)
 D ELEMDATA^KMPRUTL2(+ELEMENT,$P(DATES,U),$P(DATES,U,2),.NODE,"KMPRAR",DOTS)
"RTN","KMPRPG02",48,0)
 Q:'$D(KMPRAR)
"RTN","KMPRPG02",49,0)
 ;
"RTN","KMPRPG02",50,0)
 ; format data into TMP array.
"RTN","KMPRPG02",51,0)
 S I=""
"RTN","KMPRPG02",52,0)
 F  S I=$O(KMPRAR(I)) Q:I=""  S J=0 D 
"RTN","KMPRPG02",53,0)
 .F  S J=$O(KMPRAR(I,J)) Q:J=""  D 
"RTN","KMPRPG02",54,0)
 ..S $P(@TMP@(J,0),U)=$$FMTE^DILIBF(J,2)
"RTN","KMPRPG02",55,0)
 ..S $P(@TMP@(J,0),U,2)=KMPRAR(I,J)
"RTN","KMPRPG02",56,0)
 ;
"RTN","KMPRPG02",57,0)
 Q
"RTN","KMPRPG02",58,0)
 ;
"RTN","KMPRPG02",59,0)
GRAPH ;-- display data in graph.
"RTN","KMPRPG02",60,0)
 Q:$G(TMP)=""
"RTN","KMPRPG02",61,0)
 Q:'$G(ELEMENT)
"RTN","KMPRPG02",62,0)
 ;
"RTN","KMPRPG02",63,0)
 N NODE1,TITLES
"RTN","KMPRPG02",64,0)
 S NODE1=$O(NODE(""))
"RTN","KMPRPG02",65,0)
 ; graph titles.
"RTN","KMPRPG02",66,0)
 S $P(TITLES,U)="RUM Data by Date for Node '"_NODE1_"'"
"RTN","KMPRPG02",67,0)
 S $P(TITLES,U,2)="From "_$P($G(DATES),U,3)_" to "_$P($G(DATES),U,4)
"RTN","KMPRPG02",68,0)
 S $P(TITLES,U,3)=$P(ELEMENT,U,2)_"/per "_$S(+ELEMENT=1!(+ELEMENT=7):"occurrence",1:"sec")
"RTN","KMPRPG02",69,0)
 S $P(TITLES,U,4)="Date"
"RTN","KMPRPG02",70,0)
 ; call graphics routine.
"RTN","KMPRPG02",71,0)
 D EN^KMPUG(TMP,TITLES,$G(OPTIONS))
"RTN","KMPRPG02",72,0)
 Q
"RTN","KMPRPG02",73,0)
 ;
"RTN","KMPRPG02",74,0)
EXIT ;
"RTN","KMPRPG02",75,0)
 D ^%ZISC
"RTN","KMPRPG02",76,0)
 Q
"RTN","KMPRPN01")
1^26
"RTN","KMPRPN02")
1^27
"RTN","KMPRPN03")
0^28^B13271909
"RTN","KMPRPN03",1,0)
KMPRPN03 ;SFISC/RAK - Print Package RUM Stats ;29 Oct 1998
"RTN","KMPRPN03",2,0)
 ;;1.0;CAPACITY MANAGEMENT - RUM;;Dec 09, 1998
"RTN","KMPRPN03",3,0)
EN ;-- entry point.
"RTN","KMPRPN03",4,0)
 ;
"RTN","KMPRPN03",5,0)
 N %ZIS,CONT,DIR,IORVOFF,IORVON,KMPRDATE,KMPRNAM,MESSAGE,POP
"RTN","KMPRPN03",6,0)
 N X,Y,ZTDESC,ZTRTN,ZTSAVE,ZTSK
"RTN","KMPRPN03",7,0)
 ;
"RTN","KMPRPN03",8,0)
 D ZIS^KMPRUTL
"RTN","KMPRPN03",9,0)
 W @IOF,!?28,IORVON," Package Resource Usage ",IORVOFF,!
"RTN","KMPRPN03",10,0)
 W !,?2,"This option will display the package Resource Usage Monitor statistics.",!
"RTN","KMPRPN03",11,0)
 W ?2,"The printout summarizes the statistics of the options, protocols and",!
"RTN","KMPRPN03",12,0)
 W ?2,"tasks for a selected namespace as percentages.",!!
"RTN","KMPRPN03",13,0)
 ;
"RTN","KMPRPN03",14,0)
 K DIR S DIR(0)="FO^1:999:0^K:X="" "" X"
"RTN","KMPRPN03",15,0)
 S DIR("A")="Select Package Namespace (case sensitive)"
"RTN","KMPRPN03",16,0)
 D ^DIR Q:Y=""!(Y="^")
"RTN","KMPRPN03",17,0)
 S KMPRNAM=Y
"RTN","KMPRPN03",18,0)
 ;
"RTN","KMPRPN03",19,0)
 ; determine start date from file 8970.1
"RTN","KMPRPN03",20,0)
 D RUMDATES^KMPRUTL(.KMPRDATE)
"RTN","KMPRPN03",21,0)
 Q:'KMPRDATE
"RTN","KMPRPN03",22,0)
 ;
"RTN","KMPRPN03",23,0)
 ; select output device.
"RTN","KMPRPN03",24,0)
 S %ZIS="Q",%ZIS("A")="Device: ",%ZIS("B")="HOME"
"RTN","KMPRPN03",25,0)
 W ! D ^%ZIS I POP W !,"No action taken." Q
"RTN","KMPRPN03",26,0)
 ; if queued.
"RTN","KMPRPN03",27,0)
 I $D(IO("Q")) K IO("Q") D  Q
"RTN","KMPRPN03",28,0)
 .S ZTDESC="RUM Package Resource Usage for '"_KMPRNAM_"'."
"RTN","KMPRPN03",29,0)
 .S ZTRTN="EN1^KMPRPN03"
"RTN","KMPRPN03",30,0)
 .S ZTSAVE("KMPRDATE")="",ZTSAVE("KMPRNAM")=""
"RTN","KMPRPN03",31,0)
 .D ^%ZTLOAD W:$G(ZTSK) !,"Task #",ZTSK
"RTN","KMPRPN03",32,0)
 .D EXIT
"RTN","KMPRPN03",33,0)
 ;
"RTN","KMPRPN03",34,0)
 ; if output to terminal display message.
"RTN","KMPRPN03",35,0)
 W:$E(IOST,1,2)="C-" !?3,"compiling data for: "
"RTN","KMPRPN03",36,0)
 ;
"RTN","KMPRPN03",37,0)
EN1 ;-- entry point from taskman.
"RTN","KMPRPN03",38,0)
 ;
"RTN","KMPRPN03",39,0)
 Q:'$G(KMPRDATE)
"RTN","KMPRPN03",40,0)
 Q:$G(KMPRNAM)=""
"RTN","KMPRPN03",41,0)
 ;
"RTN","KMPRPN03",42,0)
 N DOTS,ELEMENT,KMPRARRY
"RTN","KMPRPN03",43,0)
 ;
"RTN","KMPRPN03",44,0)
 S DOTS=$S($E(IOST,1,2)="C-":0,1:1)
"RTN","KMPRPN03",45,0)
 D ELEARRY^KMPRUTL("ELEMENT") Q:'$D(ELEMENT)
"RTN","KMPRPN03",46,0)
 S KMPRARRY=$NA(^TMP("KMPR PKG %",$J))
"RTN","KMPRPN03",47,0)
 K @KMPRARRY
"RTN","KMPRPN03",48,0)
 D PKGDATA^KMPRUTL2(KMPRNAM,$P(KMPRDATE,U),$P(KMPRDATE,U,2),KMPRARRY,DOTS)
"RTN","KMPRPN03",49,0)
 D PRINT,EXIT
"RTN","KMPRPN03",50,0)
 K @KMPRARRY
"RTN","KMPRPN03",51,0)
 ;
"RTN","KMPRPN03",52,0)
 Q
"RTN","KMPRPN03",53,0)
 ;
"RTN","KMPRPN03",54,0)
EXIT ;
"RTN","KMPRPN03",55,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","KMPRPN03",56,0)
 D ^%ZISC
"RTN","KMPRPN03",57,0)
 K KMPUDATE,KMPUNAM
"RTN","KMPRPN03",58,0)
 ;
"RTN","KMPRPN03",59,0)
 Q
"RTN","KMPRPN03",60,0)
 ;
"RTN","KMPRPN03",61,0)
PRINT ;-- print data from KMPRARRY.
"RTN","KMPRPN03",62,0)
 ;
"RTN","KMPRPN03",63,0)
 Q:'$D(ELEMENT)
"RTN","KMPRPN03",64,0)
 Q:$G(KMPRARRY)=""
"RTN","KMPRPN03",65,0)
 ;
"RTN","KMPRPN03",66,0)
 U IO
"RTN","KMPRPN03",67,0)
 ;
"RTN","KMPRPN03",68,0)
 I '$D(@KMPRARRY) D HDR W !,"<<<No Data to Report>>>" Q
"RTN","KMPRPN03",69,0)
 ;
"RTN","KMPRPN03",70,0)
 N DATA,I,NODE,PIECE,SITE,TOTALS,TYP
"RTN","KMPRPN03",71,0)
 ;
"RTN","KMPRPN03",72,0)
 ; facility name.
"RTN","KMPRPN03",73,0)
 S SITE=$P($$SITE^VASITE,U,2)
"RTN","KMPRPN03",74,0)
 S NODE="",CONT=1
"RTN","KMPRPN03",75,0)
 F  S NODE=$O(@KMPRARRY@(NODE)) Q:NODE=""  D  Q:'CONT
"RTN","KMPRPN03",76,0)
 .D HDR S I=0
"RTN","KMPRPN03",77,0)
 .F  S I=$O(ELEMENT(I)) Q:'I  D  Q:'CONT
"RTN","KMPRPN03",78,0)
 ..W !,$P(ELEMENT(I),U) S PIECE=$P(ELEMENT(I),U,2)
"RTN","KMPRPN03",79,0)
 ..S TOTALS=$P($G(@KMPRARRY@(NODE,"TOTALS")),U,PIECE)
"RTN","KMPRPN03",80,0)
 ..F TYP=KMPRNAM,"PRTCL","RPC","HL7","TASK","OTH" D 
"RTN","KMPRPN03",81,0)
 ...S DATA=$P($G(@KMPRARRY@(NODE,TYP)),U,PIECE)
"RTN","KMPRPN03",82,0)
 ...W ?($S(TYP=KMPRNAM:20,TYP="PRTCL":30,TYP="RPC":40,TYP="HL7":50,TYP="TASK":60,1:70))
"RTN","KMPRPN03",83,0)
 ...W $J($S('TOTALS:"n/a",1:$FN(DATA/TOTALS*100,"",1)),6)
"RTN","KMPRPN03",84,0)
 .;
"RTN","KMPRPN03",85,0)
 .; back to NODE level.
"RTN","KMPRPN03",86,0)
 .; if no more entries send message  else use default.
"RTN","KMPRPN03",87,0)
 .S MESSAGE=""
"RTN","KMPRPN03",88,0)
 .S:$O(@KMPRARRY@(NODE))="" MESSAGE="Press RETURN to continue"
"RTN","KMPRPN03",89,0)
 .W !! D CONTINUE^KMPRUTL(MESSAGE,.CONT)
"RTN","KMPRPN03",90,0)
 ;
"RTN","KMPRPN03",91,0)
 Q
"RTN","KMPRPN03",92,0)
 ;
"RTN","KMPRPN03",93,0)
HDR ;
"RTN","KMPRPN03",94,0)
 W:$Y @IOF
"RTN","KMPRPN03",95,0)
 W !?29,"Package Resource Usage"
"RTN","KMPRPN03",96,0)
 W !?(80-$L($G(SITE))\2),$G(SITE)
"RTN","KMPRPN03",97,0)
 W !?17,"Node ",$G(NODE)," from ",$P(KMPRDATE,U,3)," to ",$P(KMPRDATE,U,4)
"RTN","KMPRPN03",98,0)
 W !?(80-($L(KMPRNAM)+12)\2),"'",KMPRNAM,"' Namespace"
"RTN","KMPRPN03",99,0)
 W !
"RTN","KMPRPN03",100,0)
 W !?20,"   %   ",?30,"    %    ",?40,"    %    ",?50,"    %    ",?60,"   %  ",?70,"All Other"
"RTN","KMPRPN03",101,0)
 W !?20,"Options",?30,"Protocols",?40,"   RPC",?50,"   HL7",?60," Tasks",?70,"Packages"
"RTN","KMPRPN03",102,0)
 W !
"RTN","KMPRPN03",103,0)
 ;
"RTN","KMPRPN03",104,0)
 Q
"RTN","KMPRPN04")
1^29
"RTN","KMPRPN05")
1^30
"RTN","KMPRPOST")
0^31^B13192712
"RTN","KMPRPOST",1,0)
KMPRPOST ;SF/RAK - RUM Post Install Routine ;15 Oct 98
"RTN","KMPRPOST",2,0)
 ;;1.0;CAPACITY MANAGEMENT - RUM;;Dec 09, 1998
"RTN","KMPRPOST",3,0)
 ;;
"RTN","KMPRPOST",4,0)
 ;
"RTN","KMPRPOST",5,0)
 ; This post install routine if for Version 1.0 of RUM.
"RTN","KMPRPOST",6,0)
 ;
"RTN","KMPRPOST",7,0)
EN ;-- entry point.
"RTN","KMPRPOST",8,0)
 ;
"RTN","KMPRPOST",9,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPRPOST",10,0)
 D MES^XPDUTL($C(13))
"RTN","KMPRPOST",11,0)
 ; delete ^XTMP("KMPR","HR") and ^XTMP("XUCP") nodes no longer in use.
"RTN","KMPRPOST",12,0)
 D MES^XPDUTL("     Deleting obsolete Resource Usage Monitor data from ^XTMP global...")
"RTN","KMPRPOST",13,0)
 K ^XTMP("KMPR","HR")
"RTN","KMPRPOST",14,0)
 K ^XTMP("XUCP")
"RTN","KMPRPOST",15,0)
 D MES^XPDUTL("     Deletion complete!")
"RTN","KMPRPOST",16,0)
 ;
"RTN","KMPRPOST",17,0)
 D MES^XPDUTL($C(13))
"RTN","KMPRPOST",18,0)
 D BKGDRVR
"RTN","KMPRPOST",19,0)
 D MES^XPDUTL($C(13))
"RTN","KMPRPOST",20,0)
 D MAILGRP
"RTN","KMPRPOST",21,0)
 D MES^XPDUTL($C(13))
"RTN","KMPRPOST",22,0)
 ;
"RTN","KMPRPOST",23,0)
 D MES^XPDUTL("     Post Install complete!")
"RTN","KMPRPOST",24,0)
 ;
"RTN","KMPRPOST",25,0)
 Q
"RTN","KMPRPOST",26,0)
 ;
"RTN","KMPRPOST",27,0)
BKGDRVR ;-- background driver option.
"RTN","KMPRPOST",28,0)
 ; Check to see if option 'KMPR BACKGROUND DRIVER' has been scheduled
"RTN","KMPRPOST",29,0)
 ; to run.  If so, change to run at 1am, once a day (previously was
"RTN","KMPRPOST",30,0)
 ; scheduled to run hourly at 5 minutes after the hour).
"RTN","KMPRPOST",31,0)
 ;
"RTN","KMPRPOST",32,0)
 N IEN,IEN1,ZTSK
"RTN","KMPRPOST",33,0)
 ;
"RTN","KMPRPOST",34,0)
 D MES^XPDUTL("     Checking for scheduled option 'KMPR BACKGROUND DRIVER'...")
"RTN","KMPRPOST",35,0)
 ; get ien from option file.
"RTN","KMPRPOST",36,0)
 S IEN=$O(^DIC(19,"B","KMPR BACKGROUND DRIVER",0)) Q:'IEN
"RTN","KMPRPOST",37,0)
 ; get ien from option scheduling file.
"RTN","KMPRPOST",38,0)
 S IEN1=$O(^DIC(19.2,"B",IEN,0))
"RTN","KMPRPOST",39,0)
 ; if rescheduling frequency is '1D' then exit.
"RTN","KMPRPOST",40,0)
 I $P($G(^DIC(19.2,+IEN1,0)),U,6)="1D" D  Q
"RTN","KMPRPOST",41,0)
 .D MES^XPDUTL("     'KMPR BACKGROUND DRIVER' check complete!")
"RTN","KMPRPOST",42,0)
 S ZTSK=+$G(^DIC(19.2,+IEN1,1))
"RTN","KMPRPOST",43,0)
 I ZTSK D KILL^%ZTLOAD
"RTN","KMPRPOST",44,0)
 D MES^XPDUTL("     Updating scheduled option 'KMPR BACKGROUND DRIVER'...")
"RTN","KMPRPOST",45,0)
 ;
"RTN","KMPRPOST",46,0)
 D:$P($G(^%ZOSF("OS")),U)["DSM" QUEBKG^KMPRUTL1
"RTN","KMPRPOST",47,0)
 ;
"RTN","KMPRPOST",48,0)
 D MES^XPDUTL("     'KMPR BACKGROUND DRIVER' check complete!")
"RTN","KMPRPOST",49,0)
 ;
"RTN","KMPRPOST",50,0)
 Q
"RTN","KMPRPOST",51,0)
 ;
"RTN","KMPRPOST",52,0)
MAILGRP ;-- move members to new mail group.
"RTN","KMPRPOST",53,0)
 ;
"RTN","KMPRPOST",54,0)
 ; Move MEMBERS of mail group KMPS-SAGG (or A1BS-SAGG) to new mail 
"RTN","KMPRPOST",55,0)
 ; group KMP-CAPMAN.
"RTN","KMPRPOST",56,0)
 ;
"RTN","KMPRPOST",57,0)
 N ERROR,FDA,I,IEN,IEN1,IENZ,MEMBER,X,Y,ZTSK
"RTN","KMPRPOST",58,0)
 ;
"RTN","KMPRPOST",59,0)
 D MES^XPDUTL("     Checking mail group 'KMP-CAPMAN'...")
"RTN","KMPRPOST",60,0)
 ;
"RTN","KMPRPOST",61,0)
 S IEN=$O(^XMB(3.8,"B","KMPS-SAGG",0))
"RTN","KMPRPOST",62,0)
 S:'IEN IEN=$O(^XMB(3.8,"B","A1B5-SAGG",0))
"RTN","KMPRPOST",63,0)
 I 'IEN D  Q
"RTN","KMPRPOST",64,0)
 .D MES^XPDUTL("     Unable to find mail group KMPS-SAGG or mail group A1B5-SAGG!")
"RTN","KMPRPOST",65,0)
 .D MES^XPDUTL("     MEMBERS of mail group KMP-CAPMAN will need to be entered.")
"RTN","KMPRPOST",66,0)
 .D MES^XPDUTL("     Mail group 'KMP-CAPMAN' check complete!")
"RTN","KMPRPOST",67,0)
 ;
"RTN","KMPRPOST",68,0)
 ;
"RTN","KMPRPOST",69,0)
 I '$O(^XMB(3.8,IEN,1,0)) D  Q
"RTN","KMPRPOST",70,0)
 .D MES^XPDUTL("     There are no MEMBERS currently entered for mail group "_$P($G(^XMB(3.8,IEN,0)),U)_".")
"RTN","KMPRPOST",71,0)
 .D MES^XPDUTL("     MEMBERS of mail group KMP-CAPMAN will need to be entered.")
"RTN","KMPRPOST",72,0)
 .D MES^XPDUTL("     Mail group 'KMP-CAPMAN' check complete!")
"RTN","KMPRPOST",73,0)
 ;
"RTN","KMPRPOST",74,0)
 S IEN1=$O(^XMB(3.8,"B","KMP-CAPMAN",0))
"RTN","KMPRPOST",75,0)
 I 'IEN D  Q
"RTN","KMPRPOST",76,0)
 .D MES^XPDUTL("     Unable to find mail group KMP-CAPMAN.  Please contact Capacity Management!")
"RTN","KMPRPOST",77,0)
 ;
"RTN","KMPRPOST",78,0)
 D MES^XPDUTL("     Moving MEMBERS from mail group '"_$P($G(^XMB(3.8,IEN,0)),U)_"' to 'KMP-CAPMAN'...")
"RTN","KMPRPOST",79,0)
 S I=0
"RTN","KMPRPOST",80,0)
 F  S I=$O(^XMB(3.8,IEN,1,I)) Q:'I  I $D(^(I,0)) S MEMBER=+^(0) D 
"RTN","KMPRPOST",81,0)
 .K ERROR,FDA,IENZ
"RTN","KMPRPOST",82,0)
 .S FDA($J,3.81,"?+1,"_IEN1_",",.01)=MEMBER
"RTN","KMPRPOST",83,0)
 .D UPDATE^DIE("","FDA($J)",.IENZ,"ERROR")
"RTN","KMPRPOST",84,0)
 .I $D(ERROR) D MSG^DIALOG("W","",60,10,"ERROR") Q
"RTN","KMPRPOST",85,0)
 .D MES^XPDUTL("          member "_$P($G(^VA(200,MEMBER,0)),U)_" added.")
"RTN","KMPRPOST",86,0)
 D MES^XPDUTL("     Mail group 'KMP-CAPMAN' check complete!")
"RTN","KMPRPOST",87,0)
 ;
"RTN","KMPRPOST",88,0)
 Q
"RTN","KMPRPT01")
1^32
"RTN","KMPRSS")
0^33^B12255132
"RTN","KMPRSS",1,0)
KMPRSS ;SFISC/KAK/RAK - Resource Usage Monitor Status ;8/19/97  10:52
"RTN","KMPRSS",2,0)
 ;;1.0;CAPACITY MANAGEMENT - RUM;;Dec 09, 1998
"RTN","KMPRSS",3,0)
 ;
"RTN","KMPRSS",4,0)
STAT ; Status of Resource Usage Monitor collection
"RTN","KMPRSS",5,0)
 N CHECK,KMPRX,X,Y
"RTN","KMPRSS",6,0)
 ; check environment
"RTN","KMPRSS",7,0)
 D ENVCHECK^KMPRUTL1(.CHECK,1)
"RTN","KMPRSS",8,0)
 ; if RUM turned on but background job not queued ask user if they want
"RTN","KMPRSS",9,0)
 ; to queue it at this time.
"RTN","KMPRSS",10,0)
 D:(+CHECK)=200 ENVCHECK^KMPRUTL1(.CHECK)
"RTN","KMPRSS",11,0)
 W @IOF,!!,?25,"Resource Usage Monitor Status"
"RTN","KMPRSS",12,0)
 S X="Version "_$$VERSION^KMPRUTL
"RTN","KMPRSS",13,0)
 W !,?(80-$L(X)\2),X,!
"RTN","KMPRSS",14,0)
 W !,?5,"The Resource Usage Monitor is currently "
"RTN","KMPRSS",15,0)
 I +$G(^%ZTSCH("LOGRSRC")) W "running."
"RTN","KMPRSS",16,0)
 E  W "stopped."
"RTN","KMPRSS",17,0)
 W !
"RTN","KMPRSS",18,0)
 I '$D(^DIC(19,"B","KMPR BACKGROUND DRIVER")) D 
"RTN","KMPRSS",19,0)
 .W !," The 'RUM Background Driver' option [KMPR BACKGROUND DRIVER] is missing !",*7,!
"RTN","KMPRSS",20,0)
 E  D
"RTN","KMPRSS",21,0)
 .S KMPRX=$O(^DIC(19,"B","KMPR BACKGROUND DRIVER",0))
"RTN","KMPRSS",22,0)
 .S KMPRX=+$O(^DIC(19.2,"B",KMPRX,0))
"RTN","KMPRSS",23,0)
 .I 'KMPRX W !?5,"The 'RUM Background Driver' [KMPR BACKGROUND DRIVER] is not scheduled",!?5,"to run!",! Q
"RTN","KMPRSS",24,0)
 .S KMPRX=$G(^DIC(19.2,KMPRX,0))
"RTN","KMPRSS",25,0)
 .S $P(KMPRX,U,2)=$$FMTE^XLFDT($P(KMPRX,U,2))
"RTN","KMPRSS",26,0)
 .W !,?5,"The 'RUM Background Driver' [KMPR BACKGROUND DRIVER] is scheduled"
"RTN","KMPRSS",27,0)
 .W !,?5,"to run on ",$S($P(KMPRX,U,2)="":"NO DATE",1:$P(KMPRX,U,2))
"RTN","KMPRSS",28,0)
 .S KMPRX=$P(KMPRX,U,6) W " every ",$S(KMPRX="":"UNKNOWN",1:+KMPRX)," ",$S(KMPRX["S":"second",KMPRX["M":"minute",KMPRX["H":"hour",KMPRX["D":"day",1:KMPRX) W:KMPRX>1 "s" W ".",!
"RTN","KMPRSS",29,0)
 W !,?5,"The temporary collection global (i.e., 'XTMP(""KMPR"")') is",$S('$D(^XTMP("KMPR")):" not",1:"")," present",!,?5,"on your system.",!
"RTN","KMPRSS",30,0)
 W !!,"Press <RETURN> to continue: " R X:DTIME
"RTN","KMPRSS",31,0)
 ;
"RTN","KMPRSS",32,0)
 Q
"RTN","KMPRSS",33,0)
 ;
"RTN","KMPRSS",34,0)
START ; Start Resource Usage Monitor collection
"RTN","KMPRSS",35,0)
 N CHECK
"RTN","KMPRSS",36,0)
 ; check environment
"RTN","KMPRSS",37,0)
 D ENVCHECK^KMPRUTL1(.CHECK,1)
"RTN","KMPRSS",38,0)
 ; if RUM does not support this operating system then quit.
"RTN","KMPRSS",39,0)
 I (+CHECK)=100 W !! D ENVOUTPT^KMPRUTL1(CHECK,1,1) H 1 Q
"RTN","KMPRSS",40,0)
 I +$G(^%ZTSCH("LOGRSRC")) W !!,?10,"The Resource Usage Monitor is already running.",! H 1 Q
"RTN","KMPRSS",41,0)
 W ! K DIR S DIR(0)="Y",DIR("B")="YES"
"RTN","KMPRSS",42,0)
 S DIR("?")="Answer YES to start collecting Resource Usage Monitor data"
"RTN","KMPRSS",43,0)
 S DIR("A")="Do you want to start Resource Usage Monitor collection"
"RTN","KMPRSS",44,0)
 D ^DIR G:$D(DTOUT)!$D(DUOUT) END
"RTN","KMPRSS",45,0)
 I Y D
"RTN","KMPRSS",46,0)
 .S DIE=8989.3,DA=1,DR="300///YES" D ^DIE
"RTN","KMPRSS",47,0)
 .W !!,?10,"Resource Usage Monitor collection is started.",!
"RTN","KMPRSS",48,0)
 E  W !!,?10,"Resource Usage Monitor collection is NOT started.",!
"RTN","KMPRSS",49,0)
 H 1 G END
"RTN","KMPRSS",50,0)
 ;
"RTN","KMPRSS",51,0)
STOP ; Stop Resource Usage Monitor collection
"RTN","KMPRSS",52,0)
 I '+$G(^%ZTSCH("LOGRSRC")) W !!,?10,"The Resource Usage Monitor is already stopped.",! H 1 Q
"RTN","KMPRSS",53,0)
 W ! K DIR S DIR(0)="Y",DIR("B")="YES"
"RTN","KMPRSS",54,0)
 S DIR("?")="Answer YES to stop collecting Resource Usage Monitor data"
"RTN","KMPRSS",55,0)
 S DIR("A")="Do you want to stop Resource Usage Monitor collection"
"RTN","KMPRSS",56,0)
 D ^DIR G:$D(DTOUT)!$D(DUOUT) END
"RTN","KMPRSS",57,0)
 I Y D
"RTN","KMPRSS",58,0)
 .S DIE=8989.3,DA=1,DR="300///NO" D ^DIE
"RTN","KMPRSS",59,0)
 .W !!,?10,"Resource Usage Monitor collection is stopped.",!
"RTN","KMPRSS",60,0)
 E  W !!,?10,"Resource Usage Monitor collection is NOT stopped.",!
"RTN","KMPRSS",61,0)
 H 1
"RTN","KMPRSS",62,0)
 ;
"RTN","KMPRSS",63,0)
END ;
"RTN","KMPRSS",64,0)
 K DA,DIE,DIR,DR,DTOUT,DUOUT,X,Y
"RTN","KMPRSS",65,0)
 Q
"RTN","KMPRUTL")
0^34^B17903012
"RTN","KMPRUTL",1,0)
KMPRUTL ;SFISC/KAK/RAK - Resource Usage Monitor Utilities ;17 Nov 1998
"RTN","KMPRUTL",2,0)
 ;;1.0;CAPACITY MANAGEMENT - RUM;;Dec 09, 1998
"RTN","KMPRUTL",3,0)
 ;
"RTN","KMPRUTL",4,0)
CONTINUE(KMPRMSSG,KMPRY) ;-- press return to continue
"RTN","KMPRUTL",5,0)
 ;---------------------------------------------------------------------
"RTN","KMPRUTL",6,0)
 ; KMPRMSSG. (optional) Message to display to user (if not defined then
"RTN","KMPRUTL",7,0)
 ;           default message by ^DIR is used).
"RTN","KMPRUTL",8,0)
 ; KMPRY.... Return value: 0 - do not continue.
"RTN","KMPRUTL",9,0)
 ;                         1 - continue.
"RTN","KMPRUTL",10,0)
 ;           Access by reference.
"RTN","KMPRUTL",11,0)
 ;---------------------------------------------------------------------
"RTN","KMPRUTL",12,0)
 ;
"RTN","KMPRUTL",13,0)
 S KMPRMSSG=$G(KMPRMSSG),KMPRY=0
"RTN","KMPRUTL",14,0)
 ;
"RTN","KMPRUTL",15,0)
 ; if not terminal continue without displaying message.
"RTN","KMPRUTL",16,0)
 I $E(IOST,1,2)'="C-" S KMPRY=1 Q
"RTN","KMPRUTL",17,0)
 ;
"RTN","KMPRUTL",18,0)
 N DIR,X,Y
"RTN","KMPRUTL",19,0)
 S DIR(0)="EO"
"RTN","KMPRUTL",20,0)
 S:KMPRMSSG]"" DIR("A")=KMPRMSSG
"RTN","KMPRUTL",21,0)
 D ^DIR
"RTN","KMPRUTL",22,0)
 S KMPRY=+$G(Y)
"RTN","KMPRUTL",23,0)
 ;
"RTN","KMPRUTL",24,0)
 Q
"RTN","KMPRUTL",25,0)
 ;
"RTN","KMPRUTL",26,0)
GRPHMSG ;-- graph message.
"RTN","KMPRUTL",27,0)
 N TXT
"RTN","KMPRUTL",28,0)
 S TXT(1)="This option displays data in a graphical format.  Please make"
"RTN","KMPRUTL",29,0)
 S TXT(2)="note that this output is intended for comparison/trends only,"
"RTN","KMPRUTL",30,0)
 S TXT(3)="and should not be used for detailed analysis."
"RTN","KMPRUTL",31,0)
 S TXT(1,"F")="!?9",TXT(2,"F")="!?9",TXT(3,"F")="!?9"
"RTN","KMPRUTL",32,0)
 D EN^DDIOL(.TXT)
"RTN","KMPRUTL",33,0)
 Q
"RTN","KMPRUTL",34,0)
 ;
"RTN","KMPRUTL",35,0)
HDR ; entry point to print header
"RTN","KMPRUTL",36,0)
 ; Input variables:
"RTN","KMPRUTL",37,0)
 ;   KMPRPG = page number
"RTN","KMPRUTL",38,0)
 ;   KMPRTL = title to print on header
"RTN","KMPRUTL",39,0)
 ;   KMPRRP = reporting period date
"RTN","KMPRUTL",40,0)
 ;          = print today's date (if NOT defined)
"RTN","KMPRUTL",41,0)
 D PRESS Q:KMPROUT
"RTN","KMPRUTL",42,0)
 W:'($E(IOST,1,2)'="C-"&'KMPRPG) @IOF I ($E(IOST,1,2)="P-"&$D(IO("S"))&'KMPRPG) S (DX,DY)=0 X ^%ZOSF("XY")
"RTN","KMPRUTL",43,0)
 I IOT="HFS"!($E(IOST,1,2)="P-") S (IORVOFF,IORVON)=""
"RTN","KMPRUTL",44,0)
 S KMPRPG=KMPRPG+1 W !,?((IOM/2)-(($L(KMPRTL)+4)/2)),IORVON,"* ",KMPRTL," *",IORVOFF
"RTN","KMPRUTL",45,0)
 I $D(KMPRRP) W !,?((IOM/2)-(($L(A1RP)+18)/2)),"Reporting Period: ",KMPRRP
"RTN","KMPRUTL",46,0)
 E  S Y=DT D DD^%DT W !,?((IOM/2)-(($L(Y)+12)/2)),"Printed on: ",Y
"RTN","KMPRUTL",47,0)
 W:$E(IOST,1,2)'="C-" ?(IOM-9),"Page ",$J(KMPRPG,3) W !!
"RTN","KMPRUTL",48,0)
 Q
"RTN","KMPRUTL",49,0)
 ;
"RTN","KMPRUTL",50,0)
ID(KMPRIEN) ;-- display - called from ^DD(8971.1,0,"ID","W")
"RTN","KMPRUTL",51,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",52,0)
 ; KMPRIEN... Ien for file #8971.1 (RESOURCE USAGE MONITOR).
"RTN","KMPRUTL",53,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",54,0)
 Q:'$G(KMPRIEN)
"RTN","KMPRUTL",55,0)
 Q:'$D(^KMPR(8971.1,+KMPRIEN,0))
"RTN","KMPRUTL",56,0)
 N DATA,TXT
"RTN","KMPRUTL",57,0)
 S DATA=$G(^KMPR(8971.1,+KMPRIEN,0))
"RTN","KMPRUTL",58,0)
 ; sent to cm national database.
"RTN","KMPRUTL",59,0)
 S TXT(1)=$S($P(DATA,U,2):"sent",1:"not sent")
"RTN","KMPRUTL",60,0)
 S TXT(1)=TXT(1)_$J(" ",10-$L(TXT(1)))
"RTN","KMPRUTL",61,0)
 ; node.
"RTN","KMPRUTL",62,0)
 S TXT(1)=TXT(1)_$P(DATA,U,3)
"RTN","KMPRUTL",63,0)
 S TXT(1)=TXT(1)_$J(" ",22-$L(TXT(1)))
"RTN","KMPRUTL",64,0)
 ; option.
"RTN","KMPRUTL",65,0)
 I $P(DATA,U,4)]"" S TXT(1)=TXT(1)_"option: "_$P(DATA,U,4)
"RTN","KMPRUTL",66,0)
 ; rpc.
"RTN","KMPRUTL",67,0)
 E  I $P(DATA,U,7)]"" S TXT(1)=TXT(1)_"   rpc: "_$P(DATA,U,7)
"RTN","KMPRUTL",68,0)
 S TXT(1,"F")="?16"
"RTN","KMPRUTL",69,0)
 ; if protocol
"RTN","KMPRUTL",70,0)
 I $P(DATA,U,5)'="" D 
"RTN","KMPRUTL",71,0)
 .S TXT(2)="protocol: "_$E($P(DATA,U,5),1,40) ;_" (protocol)"
"RTN","KMPRUTL",72,0)
 .S TXT(2,"F")="!?"_$S($G(DDSDIW):36,1:45)
"RTN","KMPRUTL",73,0)
 ; display TXT() array.
"RTN","KMPRUTL",74,0)
 D EN^DDIOL(.TXT)
"RTN","KMPRUTL",75,0)
 Q
"RTN","KMPRUTL",76,0)
 ;
"RTN","KMPRUTL",77,0)
PRESS ;
"RTN","KMPRUTL",78,0)
 I KMPRPG,$E(IOST,1,2)="C-" W !,"Press RETURN to continue or '^' to exit: " R X:DTIME S:X="^"!('$T) KMPROUT=1
"RTN","KMPRUTL",79,0)
 Q
"RTN","KMPRUTL",80,0)
 ;
"RTN","KMPRUTL",81,0)
NODEARRY(KMPRARRY) ;-- put nodes into array.
"RTN","KMPRUTL",82,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",83,0)
 ; KMPRARRY.. Array to contain nodes in format:
"RTN","KMPRUTL",84,0)
 ;            KMPRARRY(NODENAME)=""
"RTN","KMPRUTL",85,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",86,0)
 ;
"RTN","KMPRUTL",87,0)
 K @KMPRARRY
"RTN","KMPRUTL",88,0)
 ;
"RTN","KMPRUTL",89,0)
 N NODE S NODE=""
"RTN","KMPRUTL",90,0)
 F  S NODE=$O(^KMPR(8971.1,"ANODE",NODE)) Q:NODE=""  S @KMPRARRY@(NODE)=""
"RTN","KMPRUTL",91,0)
 Q
"RTN","KMPRUTL",92,0)
 ;
"RTN","KMPRUTL",93,0)
RUMDATES(KMPRDATE) ;-- get RUM date ranges from file 8971.1
"RTN","KMPRUTL",94,0)
 ;---------------------------------------------------------------------
"RTN","KMPRUTL",95,0)
 ; KMPRDATE... Return value (access by reference) in format:
"RTN","KMPRUTL",96,0)
 ;             StartDate^EndDate^ExtStartDate^ExtEndDate
"RTN","KMPRUTL",97,0)
 ;             2981101^2981104^Nov 1, 1998^Nov 4, 1998
"RTN","KMPRUTL",98,0)
 ;---------------------------------------------------------------------
"RTN","KMPRUTL",99,0)
 ;
"RTN","KMPRUTL",100,0)
 S KMPRDATE=""
"RTN","KMPRUTL",101,0)
 N END,START
"RTN","KMPRUTL",102,0)
 ; determine start date from file 8971.1
"RTN","KMPRUTL",103,0)
 S START=$O(^KMPR(8971.1,"B",0))
"RTN","KMPRUTL",104,0)
 ; determine end date from file 8971.1
"RTN","KMPRUTL",105,0)
 S END=$O(^KMPR(8971.1,"B","A"),-1)
"RTN","KMPRUTL",106,0)
 D DATERNG^KMPUTL1(.KMPRDATE,START,END)
"RTN","KMPRUTL",107,0)
 ;
"RTN","KMPRUTL",108,0)
 Q
"RTN","KMPRUTL",109,0)
 ;
"RTN","KMPRUTL",110,0)
VERSION() ;-- extrinsic - return current version.
"RTN","KMPRUTL",111,0)
 Q $P($T(+2),";",3)
"RTN","KMPRUTL",112,0)
 ;
"RTN","KMPRUTL",113,0)
ZIS ; entry point to define IORVOFF and IORVON variables
"RTN","KMPRUTL",114,0)
 D HOME^%ZIS S X="IORVOFF;IORVON" D ENDR^%ZISS
"RTN","KMPRUTL",115,0)
 S:IOT="HFS" (IORVOFF,IORVON)=""
"RTN","KMPRUTL",116,0)
 Q
"RTN","KMPRUTL",117,0)
 ;
"RTN","KMPRUTL",118,0)
 ;
"RTN","KMPRUTL",119,0)
ELEARRY(KMPRARRY) ;-- set elements data into KMPRARRY.
"RTN","KMPRUTL",120,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",121,0)
 ; KMPRARRY... Array to contain elements data.
"RTN","KMPRUTL",122,0)
 ;             Format: ElementName^DataPiece
"RTN","KMPRUTL",123,0)
 ;                     KMPRARRY(1)=CPU Time^1
"RTN","KMPRUTL",124,0)
 ;                     KMPRARRY(2)=Elapsed Time^7
"RTN","KMPRUTL",125,0)
 ;                     KMPRARRY(...)=...
"RTN","KMPRUTL",126,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",127,0)
 ;
"RTN","KMPRUTL",128,0)
 Q:$G(KMPRARRY)=""
"RTN","KMPRUTL",129,0)
 ;
"RTN","KMPRUTL",130,0)
 N DATA,I
"RTN","KMPRUTL",131,0)
 F I=1:1 Q:$P($T(ELEMENTS+I),";",3)=""  D 
"RTN","KMPRUTL",132,0)
 .S DATA=$T(ELEMENTS+I)
"RTN","KMPRUTL",133,0)
 .S @KMPRARRY@(I)=$P(DATA,";",3)_"^"_$P(DATA,";",4)
"RTN","KMPRUTL",134,0)
 Q
"RTN","KMPRUTL",135,0)
 ;
"RTN","KMPRUTL",136,0)
ELEMENT(KMPUVAR) ;-- select RUM data element.
"RTN","KMPRUTL",137,0)
 ; Output Variable:
"RTN","KMPRUTL",138,0)
 ;   KMPUVAR    = Number of Data Piece
"RTN","KMPRUTL",139,0)
 ;              = '^' if DTOUT or DUOUT
"RTN","KMPRUTL",140,0)
 ;   KMPUVAR(0) = Set of Code's Verbiage
"RTN","KMPRUTL",141,0)
 ;
"RTN","KMPRUTL",142,0)
 N DIR,DTOUT,DUOUT,I,X,Y
"RTN","KMPRUTL",143,0)
 S KMPUVAR=""
"RTN","KMPRUTL",144,0)
 S DIR(0)="SXO^"
"RTN","KMPRUTL",145,0)
 F I=1:1 Q:$P($T(ELEMENTS+I),";",3)=""  D 
"RTN","KMPRUTL",146,0)
 .S DIR(0)=DIR(0)_I_":"_$P($T(ELEMENTS+I),";",3)_";"
"RTN","KMPRUTL",147,0)
 S DIR("A")="Enter Key Data Element for Searching RUM Data"
"RTN","KMPRUTL",148,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT)!(Y="") S KMPUVAR="^",KMPUVAR(0)="" Q
"RTN","KMPRUTL",149,0)
 S KMPUVAR=$TR(Y,"12345678^","17562348^"),KMPUVAR(0)=Y(0)
"RTN","KMPRUTL",150,0)
 Q
"RTN","KMPRUTL",151,0)
 ;
"RTN","KMPRUTL",152,0)
ELEMENTS ;-- ;;Element Name;data piece in file 8971.1
"RTN","KMPRUTL",153,0)
 ;;CPU Time;1
"RTN","KMPRUTL",154,0)
 ;;Elapsed Time;7
"RTN","KMPRUTL",155,0)
 ;;M Commands;5
"RTN","KMPRUTL",156,0)
 ;;GLO References;6
"RTN","KMPRUTL",157,0)
 ;;DIO References;2
"RTN","KMPRUTL",158,0)
 ;;BIO References;3
"RTN","KMPRUTL",159,0)
 ;;Page Faults;4
"RTN","KMPRUTL",160,0)
 ;;Occurrences;8
"RTN","KMPRUTL1")
0^35^B12690966
"RTN","KMPRUTL1",1,0)
KMPRUTL1 ;SFISC/KAK/RAK - Resource Usage Monitor Utility ;10/16/97  16:29
"RTN","KMPRUTL1",2,0)
 ;;1.0;CAPACITY MANAGEMENT - RUM;;Dec 09, 1998
"RTN","KMPRUTL1",3,0)
 ;
"RTN","KMPRUTL1",4,0)
ENVCHECK(KMPRENV,KMPRQIET) ;-- environment check.
"RTN","KMPRUTL1",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL1",6,0)
 ; KMPRENV... Result of environment check in format:
"RTN","KMPRUTL1",7,0)
 ;            KMPRENV=Number^Text
"RTN","KMPRUTL1",8,0)
 ;            1-99: system status (not an error condition).
"RTN","KMPRUTL1",9,0)
 ;                 0 - RUM turned on and background job queued
"RTN","KMPRUTL1",10,0)
 ;                 1 - RUM is not turned on
"RTN","KMPRUTL1",11,0)
 ;                 2 - 'KMPR BACKGROUND' job has been queued to run
"RTN","KMPRUTL1",12,0)
 ;
"RTN","KMPRUTL1",13,0)
 ;            100>: error condition.
"RTN","KMPRUTL1",14,0)
 ;               100 - RUM not available for 'OS' at this time
"RTN","KMPRUTL1",15,0)
 ;               200 - RUM is on but the option 'KMPR BACKGROUND DRIVER'
"RTN","KMPRUTL1",16,0)
 ;                     is not scheduled to run."
"RTN","KMPRUTL1",17,0)
 ;               201 - The RUM background driver option [KMPR BACKGROUND
"RTN","KMPRUTL1",18,0)
 ;                     DRIVER] is missing
"RTN","KMPRUTL1",19,0)
 ;
"RTN","KMPRUTL1",20,0)
 ; KMPRQIET.. Output message: 0 - output message (not quiet).
"RTN","KMPRUTL1",21,0)
 ;                            1 - do not output message (quiet).
"RTN","KMPRUTL1",22,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL1",23,0)
 ;
"RTN","KMPRUTL1",24,0)
 K KMPRENV
"RTN","KMPRUTL1",25,0)
 S KMPRENV="0^RUM turned on and background job queued"
"RTN","KMPRUTL1",26,0)
 S KMPRQIET=+$G(KMPRQIET)
"RTN","KMPRUTL1",27,0)
 ;
"RTN","KMPRUTL1",28,0)
 N IEN,IEN1,TEXT
"RTN","KMPRUTL1",29,0)
 ;
"RTN","KMPRUTL1",30,0)
 ; check for operating system availability.
"RTN","KMPRUTL1",31,0)
 S TEXT=$P($G(^%ZOSF("OS")),U)
"RTN","KMPRUTL1",32,0)
 I TEXT'["DSM" D  Q
"RTN","KMPRUTL1",33,0)
 .S KMPRENV="100^RUM not available for '"_TEXT_"' at this time"
"RTN","KMPRUTL1",34,0)
 .D:'KMPRQIET ENVOUTPT(KMPRENV,1,1)
"RTN","KMPRUTL1",35,0)
 ;
"RTN","KMPRUTL1",36,0)
 ; if rum not started quit.
"RTN","KMPRUTL1",37,0)
 I '$G(^%ZTSCH("LOGRSRC")) D  Q
"RTN","KMPRUTL1",38,0)
 .S KMPRENV="1^RUM is not turned on"
"RTN","KMPRUTL1",39,0)
 .D:'KMPRQIET ENVOUTPT(KMPRENV,1,1)
"RTN","KMPRUTL1",40,0)
 ;
"RTN","KMPRUTL1",41,0)
 S TEXT="KMPR BACKGROUND DRIVER"
"RTN","KMPRUTL1",42,0)
 S IEN=$O(^DIC(19,"B",TEXT,0))
"RTN","KMPRUTL1",43,0)
 I 'IEN D  Q
"RTN","KMPRUTL1",44,0)
 .S KMPRENV="201^The RUM background driver option [KMPR BACKGROUND DRIVER] is missing"
"RTN","KMPRUTL1",45,0)
 .D:'KMPRQIET ENVOUTPT(KMPRENV,1,1)
"RTN","KMPRUTL1",46,0)
 ;
"RTN","KMPRUTL1",47,0)
 S IEN1=$O(^DIC(19.2,"B",IEN,0))
"RTN","KMPRUTL1",48,0)
 I 'IEN1!($P($G(^DIC(19.2,+IEN1,1)),U)']"") D 
"RTN","KMPRUTL1",49,0)
 .S KMPRENV="200^RUM is on but the option '"_TEXT_"' is not scheduled to run"
"RTN","KMPRUTL1",50,0)
 ;
"RTN","KMPRUTL1",51,0)
 Q:KMPRQIET
"RTN","KMPRUTL1",52,0)
 D ENVOUTPT(KMPRENV,1,1) I +KMPRENV<100 Q
"RTN","KMPRUTL1",53,0)
 ;
"RTN","KMPRUTL1",54,0)
 K DIR S DIR(0)="YO",DIR("B")="YES"
"RTN","KMPRUTL1",55,0)
 S DIR("A")="Do you want me to queue this option to run every night at 1 a.m."
"RTN","KMPRUTL1",56,0)
 W ! D ^DIR Q:'Y
"RTN","KMPRUTL1",57,0)
 ;
"RTN","KMPRUTL1",58,0)
 D QUEBKG
"RTN","KMPRUTL1",59,0)
 ;
"RTN","KMPRUTL1",60,0)
 W !
"RTN","KMPRUTL1",61,0)
 S KMPRENV="0^RUM turned on and background job queued"
"RTN","KMPRUTL1",62,0)
 ;
"RTN","KMPRUTL1",63,0)
 Q
"RTN","KMPRUTL1",64,0)
 ;
"RTN","KMPRUTL1",65,0)
ENVOUTPT(KMPRENV,KMPRHILT,KMPRCNTR) ;-- environment check output.
"RTN","KMPRUTL1",66,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL1",67,0)
 ; KMPRENV... Environment output (see ENVCHECK).
"RTN","KMPRUTL1",68,0)
 ; KMPRHILT.. Highlight text: 0 - do not highlight.
"RTN","KMPRUTL1",69,0)
 ;                            1 - highlight text.
"RTN","KMPRUTL1",70,0)
 ; KMPRCNTR.. Center text:    0 - do not center text.
"RTN","KMPRUTL1",71,0)
 ;                            1 - center text.
"RTN","KMPRUTL1",72,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL1",73,0)
 ;
"RTN","KMPRUTL1",74,0)
 S KMPRENV=$G(KMPRENV),KMPRHILT=+$G(KMPRHILT),KMPRCNTR=+$G(KMPRCNTR)
"RTN","KMPRUTL1",75,0)
 Q:KMPRENV=""
"RTN","KMPRUTL1",76,0)
 ;
"RTN","KMPRUTL1",77,0)
 N INDENT,IORVOFF,IORVON,TEXT
"RTN","KMPRUTL1",78,0)
 S X="IORVOFF;IORVON" D ENDR^%ZISS
"RTN","KMPRUTL1",79,0)
 S KMPRENV=$P(KMPRENV,U,2)
"RTN","KMPRUTL1",80,0)
 S:KMPRHILT KMPRENV=IORVON_" "_KMPRENV_" "_IORVOFF
"RTN","KMPRUTL1",81,0)
 S TEXT(1)=KMPRENV
"RTN","KMPRUTL1",82,0)
 I KMPRCNTR S INDENT=80-$L(TEXT(1))\2,TEXT(1,"F")="!?"_INDENT
"RTN","KMPRUTL1",83,0)
 D EN^DDIOL(.TEXT)
"RTN","KMPRUTL1",84,0)
 ;
"RTN","KMPRUTL1",85,0)
 Q
"RTN","KMPRUTL1",86,0)
 ;
"RTN","KMPRUTL1",87,0)
PKG(PACKAGE) ; Select Package(s)
"RTN","KMPRUTL1",88,0)
 ; Output Variable:
"RTN","KMPRUTL1",89,0)
 ;   PACKAGE = Contains array of package names
"RTN","KMPRUTL1",90,0)
 ;           = PACKAGE("^") if DTOUT or DUOUT
"RTN","KMPRUTL1",91,0)
 ;
"RTN","KMPRUTL1",92,0)
 N DIR,DTOUT,DUOUT,Y
"RTN","KMPRUTL1",93,0)
 S DIR(0)="FO^1:999:0"
"RTN","KMPRUTL1",94,0)
 F  D  Q:$D(DTOUT)!$D(DUOUT)!(Y="")
"RTN","KMPRUTL1",95,0)
 .S DIR("A")="Select Package Namespace" D ^DIR I Y'="" S PACKAGE(Y)=""
"RTN","KMPRUTL1",96,0)
 .I Y=" " W !,*7,"Please enter a valid package namespace.",!
"RTN","KMPRUTL1",97,0)
 S:$D(DTOUT)!$D(DUOUT)!('$D(PACKAGE)) PACKAGE("^")=""
"RTN","KMPRUTL1",98,0)
 W !
"RTN","KMPRUTL1",99,0)
 Q
"RTN","KMPRUTL1",100,0)
 ;
"RTN","KMPRUTL1",101,0)
QUEBKG ;-- queue background job KMPR BACKGROUND DRIVER
"RTN","KMPRUTL1",102,0)
 N DA,DIK,FDA,ERROR,IEN,IEN1,IENZ,TEXT,X,Y,Z
"RTN","KMPRUTL1",103,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPRUTL1",104,0)
 S TEXT="KMPR BACKGROUND DRIVER"
"RTN","KMPRUTL1",105,0)
 S IEN=$O(^DIC(19,"B",TEXT,0)) Q:'IEN
"RTN","KMPRUTL1",106,0)
 S IEN1=$O(^DIC(19.2,"B",IEN,0))
"RTN","KMPRUTL1",107,0)
 ; if already in file 19.2 then kill.
"RTN","KMPRUTL1",108,0)
 I IEN1 S DIK="^DIC(19.2,",DA=IEN1 D ^DIK
"RTN","KMPRUTL1",109,0)
 ; schedule for tomorrow@1am.
"RTN","KMPRUTL1",110,0)
 S FDA($J,19.2,"+1,",.01)=IEN
"RTN","KMPRUTL1",111,0)
 ; queued to run at what time - set to tomorrow@1am
"RTN","KMPRUTL1",112,0)
 S FDA($J,19.2,"+1,",2)=$$FMADD^XLFDT(DT,1)_".01"
"RTN","KMPRUTL1",113,0)
 ; rescheduling frequency.
"RTN","KMPRUTL1",114,0)
 S FDA($J,19.2,"+1,",6)="1D"
"RTN","KMPRUTL1",115,0)
 ; special queueing (persistent).
"RTN","KMPRUTL1",116,0)
 S FDA($J,19.2,"+1,",9)="P"
"RTN","KMPRUTL1",117,0)
 D UPDATE^DIE("","FDA($J)",.IENZ,"ERROR")
"RTN","KMPRUTL1",118,0)
 I $D(ERROR) D MSG^DIALOG("W","",60,10,"ERROR")
"RTN","KMPRUTL1",119,0)
 Q
"RTN","KMPRUTL2")
0^36^B24733019
"RTN","KMPRUTL2",1,0)
KMPRUTL2 ;SFISC/RAK - RUM Data for All Nodes (Graph) ;22 Oct 1998
"RTN","KMPRUTL2",2,0)
 ;;1.0;CAPACITY MANAGEMENT - RUM;;Dec 09, 1998
"RTN","KMPRUTL2",3,0)
 ;
"RTN","KMPRUTL2",4,0)
ELEMDATA(KMPRELMT,KMPRST,KMPREN,KMPRNODE,KMPRARRY,KMPRQIET) ;-- elements
"RTN","KMPRUTL2",5,0)
 ; compile rum element stats.
"RTN","KMPRUTL2",6,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL2",7,0)
 ; KMPRELMT... Element.  This represents the ^piece of where the 
"RTN","KMPRUTL2",8,0)
 ;             element data is located in file 8971.1.
"RTN","KMPRUTL2",9,0)
 ;             Example: 5 would be piece 5 of node 1 - M COMMANDS (PT)
"RTN","KMPRUTL2",10,0)
 ;                              or piece 5 of node 2 - M COMMANDS (NP)
"RTN","KMPRUTL2",11,0)
 ; KMPRST..... Start date in internal fileman format.
"RTN","KMPRUTL2",12,0)
 ; KMPREN..... End date in internal fileman format.
"RTN","KMPRUTL2",13,0)
 ; KMPRNODE... Array (passed by reference) containing name of nodes to
"RTN","KMPRUTL2",14,0)
 ;             process in format:  KMPRNODE("NODENAME")="" 
"RTN","KMPRUTL2",15,0)
 ; KMPRARRY... Array (passed by value) that will contain results of 
"RTN","KMPRUTL2",16,0)
 ;             search in format:
"RTN","KMPRUTL2",17,0)
 ;             KMPRARRY(KMPRNODE,DATE)=element/per second
"RTN","KMPRUTL2",18,0)
 ;             where DATE will be in internal filemat format.
"RTN","KMPRUTL2",19,0)
 ; KMPRQIET... Output date/dots during search.
"RTN","KMPRUTL2",20,0)
 ;             0 - not quiet.
"RTN","KMPRUTL2",21,0)
 ;             1 - quiet.
"RTN","KMPRUTL2",22,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL2",23,0)
 ;
"RTN","KMPRUTL2",24,0)
 Q:'$G(KMPRELMT)
"RTN","KMPRUTL2",25,0)
 Q:'$G(KMPRST)
"RTN","KMPRUTL2",26,0)
 Q:'$G(KMPREN)
"RTN","KMPRUTL2",27,0)
 Q:'$D(KMPRNODE)
"RTN","KMPRUTL2",28,0)
 Q:$G(KMPRARRY)=""
"RTN","KMPRUTL2",29,0)
 S KMPRQIET=+$G(KMPRQIET)
"RTN","KMPRUTL2",30,0)
 ;
"RTN","KMPRUTL2",31,0)
 K @KMPRARRY
"RTN","KMPRUTL2",32,0)
 ;
"RTN","KMPRUTL2",33,0)
 N DATE,DATA,DCOUNT,END,IEN,NODE,OCCURR,OPTION,START
"RTN","KMPRUTL2",34,0)
 ;
"RTN","KMPRUTL2",35,0)
 ; DATE.... Current date being processed.
"RTN","KMPRUTL2",36,0)
 ; END..... Ending date.
"RTN","KMPRUTL2",37,0)
 ; NODE.... Computer node.
"RTN","KMPRUTL2",38,0)
 ; OCCURR.. # of Occurrences
"RTN","KMPRUTL2",39,0)
 ; OPTION.. Option name.
"RTN","KMPRUTL2",40,0)
 ; START... Starting date.
"RTN","KMPRUTL2",41,0)
 ;
"RTN","KMPRUTL2",42,0)
 S END=KMPREN,START=KMPRST
"RTN","KMPRUTL2",43,0)
 S DATE=START-.1,OCCURR=0
"RTN","KMPRUTL2",44,0)
 F  S DATE=$O(^KMPR(8971.1,"B",DATE)) Q:'DATE!(DATE>END)  D 
"RTN","KMPRUTL2",45,0)
 .I 'KMPRQIET W:$X>68 !?23 W $$FMTE^XLFDT(DATE,5),"."
"RTN","KMPRUTL2",46,0)
 .S IEN=0
"RTN","KMPRUTL2",47,0)
 .F  S IEN=$O(^KMPR(8971.1,"B",DATE,IEN)) Q:'IEN  D 
"RTN","KMPRUTL2",48,0)
 ..I 'KMPRQIET&('(IEN#1000)) W:$X>78 !?23 W "."
"RTN","KMPRUTL2",49,0)
 ..Q:'$D(^KMPR(8971.1,IEN,0))  S DATA(0)=^(0),DATA(1)=$G(^(1)),DATA(2)=$G(^(2))
"RTN","KMPRUTL2",50,0)
 ..S NODE=$P(DATA(0),U,3) Q:NODE=""
"RTN","KMPRUTL2",51,0)
 ..Q:'$D(KMPRNODE(NODE))
"RTN","KMPRUTL2",52,0)
 ..S @KMPRARRY@(NODE,DATE)=$G(@KMPRARRY@(NODE,DATE))+$P(DATA(1),U,+KMPRELMT)
"RTN","KMPRUTL2",53,0)
 ..S @KMPRARRY@(NODE,DATE)=$G(@KMPRARRY@(NODE,DATE))+$P(DATA(2),U,+KMPRELMT)
"RTN","KMPRUTL2",54,0)
 ..; count occurrences.
"RTN","KMPRUTL2",55,0)
 ..S OCCURR=OCCURR+$P(DATA(1),U,8)+$P(DATA(2),U,8)
"RTN","KMPRUTL2",56,0)
 ;
"RTN","KMPRUTL2",57,0)
 ; calculate element per second or per occurrence.
"RTN","KMPRUTL2",58,0)
 S NODE=""
"RTN","KMPRUTL2",59,0)
 F  S NODE=$O(@KMPRARRY@(NODE)) Q:NODE=""  S DATE="" D 
"RTN","KMPRUTL2",60,0)
 .F  S DATE=$O(@KMPRARRY@(NODE,DATE)) Q:'DATE  D 
"RTN","KMPRUTL2",61,0)
 ..; elements 1 and 7 are per Occurrence.
"RTN","KMPRUTL2",62,0)
 ..I KMPRELMT=1!(KMPRELMT=7) D 
"RTN","KMPRUTL2",63,0)
 ...S @KMPRARRY@(NODE,DATE)=$FN(@KMPRARRY@(NODE,DATE)/(OCCURR),"",2)
"RTN","KMPRUTL2",64,0)
 ..; all other elements are per second.
"RTN","KMPRUTL2",65,0)
 ..E  S @KMPRARRY@(NODE,DATE)=$FN(@KMPRARRY@(NODE,DATE)/(24*3600),"",2)
"RTN","KMPRUTL2",66,0)
 ;
"RTN","KMPRUTL2",67,0)
 Q
"RTN","KMPRUTL2",68,0)
 ;
"RTN","KMPRUTL2",69,0)
PKGDATA(KMPRPKG,KMPRSTR,KMPREND,KMPRARRY,KMPRQIET) ;-- package data.
"RTN","KMPRUTL2",70,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL2",71,0)
 ; KMPRPKG... Package name (case sensitive, free text).
"RTN","KMPRUTL2",72,0)
 ; KMPRSTR... Start date in internal fileman format.
"RTN","KMPRUTL2",73,0)
 ; KMPREND... End date in internal fileman format.
"RTN","KMPRUTL2",74,0)
 ; KMPRARRY.. Array to hold data (by value).
"RTN","KMPRUTL2",75,0)
 ; KMPRQIET.. Output date/dots during search.
"RTN","KMPRUTL2",76,0)
 ;            0 - not quiet.
"RTN","KMPRUTL2",77,0)
 ;            1 - quiet.
"RTN","KMPRUTL2",78,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL2",79,0)
 ;
"RTN","KMPRUTL2",80,0)
 Q:$G(KMPRPKG)=""!($G(KMPRPKG)="^")
"RTN","KMPRUTL2",81,0)
 Q:'$G(KMPRSTR)
"RTN","KMPRUTL2",82,0)
 Q:'$G(KMPREND)
"RTN","KMPRUTL2",83,0)
 Q:$G(KMPRARRY)=""
"RTN","KMPRUTL2",84,0)
 S KMPRQIET=+$G(KMPRQIET)
"RTN","KMPRUTL2",85,0)
 ;
"RTN","KMPRUTL2",86,0)
 N DATE,DESIG,HL7,I,IEN,NODE,OPTION,PROTOCOL,RPC,TOTALS,TYP
"RTN","KMPRUTL2",87,0)
 ;
"RTN","KMPRUTL2",88,0)
 S DATE=KMPRSTR-.1
"RTN","KMPRUTL2",89,0)
 F  S DATE=$O(^KMPR(8971.1,"B",DATE)) Q:'DATE!(DATE>KMPREND)  S IEN=0 D 
"RTN","KMPRUTL2",90,0)
 .I 'KMPRQIET W:$X>68 !?23 W $$FMTE^XLFDT(DATE,5),"."
"RTN","KMPRUTL2",91,0)
 .F  S IEN=$O(^KMPR(8971.1,"B",DATE,IEN)) Q:'IEN  D 
"RTN","KMPRUTL2",92,0)
 ..I 'KMPRQIET&('(IEN#1000)) W:$X>78 !?23 W "."
"RTN","KMPRUTL2",93,0)
 ..Q:'$D(^KMPR(8971.1,IEN,0))  S DATA(0)=^(0),DATA(1)=$G(^(1)),DATA(2)=$G(^(2))
"RTN","KMPRUTL2",94,0)
 ..S NODE=$P(DATA(0),U,3) S:NODE="" NODE="N/A"
"RTN","KMPRUTL2",95,0)
 ..S OPTION=$P(DATA(0),U,4) S:OPTION="" OPTION="N/A"
"RTN","KMPRUTL2",96,0)
 ..S PROTOCOL=$P(DATA(0),U,5)
"RTN","KMPRUTL2",97,0)
 ..S RPC=$P(DATA(0),U,7)
"RTN","KMPRUTL2",98,0)
 ..S HL7=$P(DATA(0),U,9)
"RTN","KMPRUTL2",99,0)
 ..; rum designation: 1 - TASKMAN
"RTN","KMPRUTL2",100,0)
 ..;                  2 - USER
"RTN","KMPRUTL2",101,0)
 ..;                  3 - BROKER
"RTN","KMPRUTL2",102,0)
 ..;                  4 - HL7
"RTN","KMPRUTL2",103,0)
 ..;                  5 OTHER
"RTN","KMPRUTL2",104,0)
 ..S DESIG=$P(DATA(0),U,8)
"RTN","KMPRUTL2",105,0)
 ..;
"RTN","KMPRUTL2",106,0)
 ..; TYP: KMPRPKG. options within namespace
"RTN","KMPRUTL2",107,0)
 ..;      HL7..... hl7 within namespace.
"RTN","KMPRUTL2",108,0)
 ..;      RPC..... rpc within namespace
"RTN","KMPRUTL2",109,0)
 ..;      PRTCL... protocol within namespace
"RTN","KMPRUTL2",110,0)
 ..;      TASK.... tasked option within namespace
"RTN","KMPRUTL2",111,0)
 ..;      OTH..... all other options/protocols
"RTN","KMPRUTL2",112,0)
 ..;
"RTN","KMPRUTL2",113,0)
 ..S TYP="OTH"
"RTN","KMPRUTL2",114,0)
 ..; if option is in namespace.
"RTN","KMPRUTL2",115,0)
 ..I $E(OPTION,1,$L(KMPRPKG))=KMPRPKG S TYP=KMPRPKG
"RTN","KMPRUTL2",116,0)
 ..; if option in namespace and protocol was called.
"RTN","KMPRUTL2",117,0)
 ..I TYP=KMPRPKG I PROTOCOL]"" S TYP="PRTCL"
"RTN","KMPRUTL2",118,0)
 ..; if option in namespace and tasked.
"RTN","KMPRUTL2",119,0)
 ..I TYP=KMPRPKG&(DESIG=1)&($E(OPTION,1,$L(KMPRPKG))=KMPRPKG) S TYP="TASK"
"RTN","KMPRUTL2",120,0)
 ..; if broker and in namespace.
"RTN","KMPRUTL2",121,0)
 ..I DESIG=3&($E(RPC,1,$L(KMPRPKG))=KMPRPKG) S TYP="RPC"
"RTN","KMPRUTL2",122,0)
 ..; if hl7 and in namespace.
"RTN","KMPRUTL2",123,0)
 ..I DESIG=4&($E(HL7,1,$L(KMPRPKG))=KMPRPKG) S TYP="HL7"
"RTN","KMPRUTL2",124,0)
 ..; get current totals (if any).
"RTN","KMPRUTL2",125,0)
 ..S TOTALS=$G(@KMPRARRY@(NODE,TYP))
"RTN","KMPRUTL2",126,0)
 ..; add prime time and non-prime time totals
"RTN","KMPRUTL2",127,0)
 ..F I=1:1:8 D 
"RTN","KMPRUTL2",128,0)
 ...S $P(@KMPRARRY@(NODE,TYP),U,I)=$P($G(@KMPRARRY@(NODE,TYP)),U,I)+$P(DATA(1),U,I)
"RTN","KMPRUTL2",129,0)
 ...S $P(@KMPRARRY@(NODE,TYP),U,I)=$P($G(@KMPRARRY@(NODE,TYP)),U,I)+$P(DATA(2),U,I)
"RTN","KMPRUTL2",130,0)
 ...S $P(@KMPRARRY@(NODE,"TOTALS"),U,I)=$P($G(@KMPRARRY@(NODE,"TOTALS")),U,I)+$P(DATA(1),U,I)
"RTN","KMPRUTL2",131,0)
 ...S $P(@KMPRARRY@(NODE,"TOTALS"),U,I)=$P($G(@KMPRARRY@(NODE,"TOTALS")),U,I)+$P(DATA(2),U,I)
"RTN","KMPRUTL2",132,0)
 ;
"RTN","KMPRUTL2",133,0)
 Q
"RTN","KMPRUTL3")
1^37
"RTN","KMPRUX01")
1^38
"RTN","KMPU11")
0^39^B15230900
"RTN","KMPU11",1,0)
KMPU11 ;SFISC/RAK - Capacity Management Text Display ;23 Oct 1998
"RTN","KMPU11",2,0)
 ;;1.0;CAPACITY MANAGEMENT;;Oct 27, 1998
"RTN","KMPU11",3,0)
 ;
"RTN","KMPU11",4,0)
WP(KMPUAR,KMPUTM,KMPUBM,KMPULM,KMPURM,KMPUNW) ;-- word processing display.
"RTN","KMPU11",5,0)
 ;--------------------------------------------------------------------
"RTN","KMPU11",6,0)
 ; KMPUAR...  Array containing word processing text.
"RTN","KMPU11",7,0)
 ;            Example: ^KMPUTMP(1001,1,0)="This is the"
"RTN","KMPU11",8,0)
 ;                     ^KMPUTMP(1001,2,0)="text to display."
"RTN","KMPU11",9,0)
 ;
"RTN","KMPU11",10,0)
 ;  Optional parameters:
"RTN","KMPU11",11,0)
 ;
"RTN","KMPU11",12,0)
 ;    KMPUTM - Top margin of screen area.
"RTN","KMPU11",13,0)
 ;    KMPUBM - Bottom margin of screen area.
"RTN","KMPU11",14,0)
 ;    KMPULM - Left margin.
"RTN","KMPU11",15,0)
 ;    KMPURM - Right margin.
"RTN","KMPU11",16,0)
 ;    KMPUNW - Nowrap:   0 - nowrap (print as entered)
"RTN","KMPU11",17,0)
 ;                       1 - wrap
"RTN","KMPU11",18,0)
 ;
"RTN","KMPU11",19,0)
 ; If more than one page this routine allows the user to scroll back
"RTN","KMPU11",20,0)
 ; and forth between pages. If KMPUTM and KMPUBM are not passed will
"RTN","KMPU11",21,0)
 ; default to full screen (0 to 22).
"RTN","KMPU11",22,0)
 ;--------------------------------------------------------------------
"RTN","KMPU11",23,0)
 ;
"RTN","KMPU11",24,0)
 Q:'$D(KMPUAR)
"RTN","KMPU11",25,0)
 ;
"RTN","KMPU11",26,0)
 N CLRSCR,I,KMPUI,KMPUOUT,LEN,LINES,PAGE,PAGES
"RTN","KMPU11",27,0)
 N DIR,DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,X,Y,Z
"RTN","KMPU11",28,0)
 N IOBM,IOECH,IOELALL,IOELEOL,IORVON,IORVOFF,IOTM,IOSTBM
"RTN","KMPU11",29,0)
 ;
"RTN","KMPU11",30,0)
 S KMPUTM=+$G(KMPUTM),KMPUBM=$S(+$G(KMPUBM):KMPUBM,1:22)
"RTN","KMPU11",31,0)
 S KMPULM=+$G(KMPULM),KMPURM=+$G(KMPURM),KMPUNW=+$G(KMPUNW)
"RTN","KMPU11",32,0)
 S:KMPUBM>22 KMPUBM=22 S DIWL=KMPULM,DIWR=$S(KMPURM:KMPURM,1:IOM)
"RTN","KMPU11",33,0)
 S KMPUNW=$S(KMPUNW=1:"",1:"N")
"RTN","KMPU11",34,0)
 S X="IOECH;IOELALL;IOELEOL;IORVON;IORVOFF;IOSTKMPUBM" D ENDR^%ZISS
"RTN","KMPU11",35,0)
 ; set CLRSCR (clear screen) 
"RTN","KMPU11",36,0)
 ; clear full screen
"RTN","KMPU11",37,0)
 I DIWL=0,(DIWR=IOM) D 
"RTN","KMPU11",38,0)
 .S CLRSCR="F DY=(KMPUBM-1):-1:KMPUTM X IOXY W IOELALL,!"
"RTN","KMPU11",39,0)
 ; clear left margin to end of screen
"RTN","KMPU11",40,0)
 E  I DIWR=IOM D 
"RTN","KMPU11",41,0)
 .S CLRSCR="S DX=DIWL F DY=(KMPUBM-1):-1:KMPUTM X IOXY W IOELEOL,!"
"RTN","KMPU11",42,0)
 ; clear left margin to right margin
"RTN","KMPU11",43,0)
 E  S CLRSCR="F DY=(KMPUBM-1):-1:KMPUTM F DX=DIWL:1:DIWR X IOXY W IOECH"
"RTN","KMPU11",44,0)
 K ^UTILITY($J,"W") S DIWF=KMPUNW,X=""
"RTN","KMPU11",45,0)
 ; use fileman to format text
"RTN","KMPU11",46,0)
 F KMPUI=0:0 S KMPUI=$O(@KMPUAR@(KMPUI)) Q:'KMPUI  D 
"RTN","KMPU11",47,0)
 .Q:'$D(@KMPUAR@(KMPUI,0))  S X=@KMPUAR@(KMPUI,0) D ^DIWP
"RTN","KMPU11",48,0)
 Q:'$D(^UTILITY($J,"W",DIWL))  S LINES=$G(^(DIWL))
"RTN","KMPU11",49,0)
 ; check for last line equal to null
"RTN","KMPU11",50,0)
 I $G(^UTILITY($J,"W",DIWL,LINES,0))="" S LINES=LINES-1
"RTN","KMPU11",51,0)
 S LEN=KMPUBM-KMPUTM,PAGES=LINES\LEN I LINES#LEN S PAGES=PAGES+1
"RTN","KMPU11",52,0)
 ;
"RTN","KMPU11",53,0)
 ; set up the pages() array -  first piece = starting line
"RTN","KMPU11",54,0)
 ;                            second piece = ending line
"RTN","KMPU11",55,0)
 F I=1:1:PAGES D 
"RTN","KMPU11",56,0)
 .S PAGES(I)=$S(I=1:1,1:(I*LEN-LEN+1))
"RTN","KMPU11",57,0)
 .I I=1 S $P(PAGES(I),U,2)=$S(LINES<LEN:LINES,1:LEN) Q
"RTN","KMPU11",58,0)
 .S $P(PAGES(I),U,2)=(I*LEN)
"RTN","KMPU11",59,0)
 S DY=(KMPUTM-1),PAGE=1,KMPUOUT=0
"RTN","KMPU11",60,0)
 ; main loop
"RTN","KMPU11",61,0)
 F  D  Q:KMPUOUT
"RTN","KMPU11",62,0)
 .F KMPUI=$P(PAGES(PAGE),U):1:$P(PAGES(PAGE),U,2) D 
"RTN","KMPU11",63,0)
 ..Q:'$D(^UTILITY($J,"W",DIWL,KMPUI,0))
"RTN","KMPU11",64,0)
 ..S DX=DIWL,DY=DY+1 X IOXY W ^UTILITY($J,"W",DIWL,KMPUI,0),!
"RTN","KMPU11",65,0)
 .D FTR X CLRSCR Q:KMPUOUT  S DY=DY-1
"RTN","KMPU11",66,0)
 F DY=22,23 X IOXY W IOELALL
"RTN","KMPU11",67,0)
 K ^UTILITY($J,"W")
"RTN","KMPU11",68,0)
 Q
"RTN","KMPU11",69,0)
 ;
"RTN","KMPU11",70,0)
FTR ;-- footer designed for wp subroutine above.
"RTN","KMPU11",71,0)
 N READ,READX S READ=""
"RTN","KMPU11",72,0)
 S DX=0,DY=22 X IOXY W $$REPEAT^XLFSTR("_",IOM)
"RTN","KMPU11",73,0)
 I PAGES=1 S READ="X",READ("A")=$J(" ",28)_"Press <RET> to continue"
"RTN","KMPU11",74,0)
 I PAGES>1 S READ="X",READ("A")="E[x]it" D 
"RTN","KMPU11",75,0)
 .I PAGE<PAGES S READ=READ_"N",READ("A")=READ("A")_", [N]ext Screen"
"RTN","KMPU11",76,0)
 .I PAGE>1 S READ=READ_"P",READ("A")=READ("A")_", [P]revious Screen"
"RTN","KMPU11",77,0)
 S READ("A")=READ("A")_": "
"RTN","KMPU11",78,0)
FTR1 ;-- read
"RTN","KMPU11",79,0)
 S DX=0,DY=23 X IOXY W IOELALL
"RTN","KMPU11",80,0)
 S DX=62 X IOXY W " Page ",PAGE," of ",PAGES," "
"RTN","KMPU11",81,0)
 S DX=0 X IOXY W READ("A")
"RTN","KMPU11",82,0)
 R READX:DTIME S READX=$$UP^XLFSTR(READX)
"RTN","KMPU11",83,0)
 I READX="X"!(READX="^")!(READ="X") S KMPUOUT=1 Q
"RTN","KMPU11",84,0)
 I READX="N",(READ["N") S PAGE=PAGE+1 Q
"RTN","KMPU11",85,0)
 I READX="P",(READ["P") S PAGE=PAGE-1 Q
"RTN","KMPU11",86,0)
 I READX["?" D HELP G FTR1
"RTN","KMPU11",87,0)
 W *7
"RTN","KMPU11",88,0)
 G FTR1
"RTN","KMPU11",89,0)
 ;
"RTN","KMPU11",90,0)
HELP ;-- clear screen, print help text, repaint screen.
"RTN","KMPU11",91,0)
 N I,READX X CLRSCR S DY=KMPUTM,DX=$S(DIWL>7:DIWL,1:7) X IOXY
"RTN","KMPU11",92,0)
 F I=1:1:$L(READ) S DY=DY+1 X IOXY D 
"RTN","KMPU11",93,0)
 .I $E(READ,I)="X" W "Enter 'X' (or '^') to exit.",!
"RTN","KMPU11",94,0)
 .I $E(READ,I)="N" W "Enter 'N' to advance to the next screen.",!
"RTN","KMPU11",95,0)
 .I $E(READ,I)="P" W "Enter 'P' to backup to the previous screen.",!
"RTN","KMPU11",96,0)
 S DY=(KMPUBM-1) X IOXY R "Press <RET> to continue: ",READX:DTIME
"RTN","KMPU11",97,0)
 ; repaint screen.
"RTN","KMPU11",98,0)
 X CLRSCR S DY=(KMPUTM-1)
"RTN","KMPU11",99,0)
 F I=$P(PAGES(PAGE),U):1:$P(PAGES(PAGE),U,2) D 
"RTN","KMPU11",100,0)
 .Q:'$D(^UTILITY($J,"W",DIWL,I,0))
"RTN","KMPU11",101,0)
 .S DX=DIWL,DY=DY+1 X IOXY W ^UTILITY($J,"W",DIWL,I,0),!
"RTN","KMPU11",102,0)
 Q
"RTN","KMPUG")
0^40^B10988451
"RTN","KMPUG",1,0)
KMPUG ;SFISC/RAK - Capacity Management Graphics ; 22 Oct 1998
"RTN","KMPUG",2,0)
 ;;1.0;CAPACITY MANAGEMENT;;Oct 27, 1998
"RTN","KMPUG",3,0)
EN(KMPUAR,KMPUTI,KMPUOPT,KMPUSTRT,KMPUTAR) ;entry point
"RTN","KMPUG",4,0)
 ;-----------------------------------------------------------------------
"RTN","KMPUG",5,0)
 ; KMPUAR.. Local or global array (passed by value) that contains graph
"RTN","KMPUG",6,0)
 ;          information in the format:
"RTN","KMPUG",7,0)
 ;
"RTN","KMPUG",8,0)
 ;          KMPUAR(...,0)=DataTitle^DataValue
"RTN","KMPUG",9,0)
 ;                        piece 1 - the title of the data
"RTN","KMPUG",10,0)
 ;                        piece 2 - the actual value of the data
"RTN","KMPUG",11,0)
 ;
"RTN","KMPUG",12,0)
 ; KMPUTI.. graph titles in 4 up-arrow pieces
"RTN","KMPUG",13,0)
 ;          piece 1 - title of the graph 
"RTN","KMPUG",14,0)
 ;          piece 2 - second title of graph (if any)
"RTN","KMPUG",15,0)
 ;          piece 3 - x axis title
"RTN","KMPUG",16,0)
 ;          piece 4 - y axis title
"RTN","KMPUG",17,0)
 ;   
"RTN","KMPUG",18,0)
 ; KMPUOPT. (optional) A string of one or more letters representing
"RTN","KMPUG",19,0)
 ;          desired options.
"RTN","KMPUG",20,0)
 ;          "A" - angle titles (only for vertical graph)
"RTN","KMPUG",21,0)
 ;          "D" - double space
"RTN","KMPUG",22,0)
 ;          "G" - print grid across graph
"RTN","KMPUG",23,0)
 ;          "S" - display entries with MAX>9999 in scientific notation
"RTN","KMPUG",24,0)
 ;          "V" - display 'vertical' graph
"RTN","KMPUG",25,0)
 ;
"RTN","KMPUG",26,0)
 ;           the extrinsic function $$KMPUOPTS^ASKGRUTL() is
"RTN","KMPUG",27,0)
 ;           provided as a way of prompting for the above
"RTN","KMPUG",28,0)
 ;           options in interactive mode
"RTN","KMPUG",29,0)
 ;
"RTN","KMPUG",30,0)
 ; KMPUSTRT (optional). Number to start graph.
"RTN","KMPUG",31,0)
 ;          if KMPUSTRT=0 first hash mark of graph will equal 0
"RTN","KMPUG",32,0)
 ;
"RTN","KMPUG",33,0)
 ; KMPUTAR. (optional) Text array. Local or global array that 
"RTN","KMPUG",34,0)
 ;          contains text to be displayed with the graph.
"RTN","KMPUG",35,0)
 ;
"RTN","KMPUG",36,0)
 ;          Example:  KMPUTAR="UTIL($J,"
"RTN","KMPUG",37,0)
 ;                    KMPUTAR="^ASK(999999,23,10,"
"RTN","KMPUG",38,0)
 ;                    KMPUTAR="^TMP($J,""TEXT"","
"RTN","KMPUG",39,0)
 ;
"RTN","KMPUG",40,0)
 ;-----------------------------------------------------------------------
"RTN","KMPUG",41,0)
 ;
"RTN","KMPUG",42,0)
 I '$D(KMPUAR) W !!?7,"...no array data...",!! D CONT Q
"RTN","KMPUG",43,0)
 S KMPUSTRT=+$G(KMPUSTRT),KMPUOPT=$$UP^XLFSTR($G(KMPUOPT))
"RTN","KMPUG",44,0)
 K:$G(KMPUTAR)="" KMPUTAR
"RTN","KMPUG",45,0)
 I '$D(@KMPUAR) D  Q
"RTN","KMPUG",46,0)
 .W *7,!!?7,"...no information to graph...",!!
"RTN","KMPUG",47,0)
 .D CONT
"RTN","KMPUG",48,0)
 S DTIME=$S($D(DTIME):DTIME,1:600)
"RTN","KMPUG",49,0)
 ;
"RTN","KMPUG",50,0)
 N BAR,BOTTOM,DATA,DEC,DEC1,DIV,DIVT,DNUM,DX,DY,END,GWIDTH,I,I1,LABEL,MAX
"RTN","KMPUG",51,0)
 N MIN,NUM,OFFSET,SCALE,STEP,TEXT,TITLE,X,XCOORD,XTITLE,YNUM,YTITLE,Z
"RTN","KMPUG",52,0)
 N IOBLC,IOBRC,IOBT,IOG1,IOG0,IOHL,IOLT,IOMT,IORT,IOTLC,IOTRC,IOTT,IOVL
"RTN","KMPUG",53,0)
 N IOINHI,IOINLOW,IORVOFF,IORVON,IOUOFF,IOUON
"RTN","KMPUG",54,0)
 ;
"RTN","KMPUG",55,0)
 D INIT^KMPUG1 I KMPUOPT["D",(KMPUOPT'["V"),(YNUM>8) D  Q
"RTN","KMPUG",56,0)
 .W *7,!!?7,"...too many data elements to double space on a terminal"
"RTN","KMPUG",57,0)
 .W !?7,"   for a Horizontal Graph..."
"RTN","KMPUG",58,0)
 .W !!! D CONT
"RTN","KMPUG",59,0)
 I KMPUOPT["D",(KMPUOPT["V"),(YNUM>34) D  Q
"RTN","KMPUG",60,0)
 .W *7,!!?7,"...too many data elements to double space on a terminal"
"RTN","KMPUG",61,0)
 .W !?7,"   for a Vertical Graph..."
"RTN","KMPUG",62,0)
 .W !!! D CONT
"RTN","KMPUG",63,0)
 ; if not a terminal do printer routine
"RTN","KMPUG",64,0)
 I $E(IOST)'="C" Q  ;D EN^KMPUGP Q
"RTN","KMPUG",65,0)
 I $G(IOG1)']""!($G(IOG0)']"") D  Q
"RTN","KMPUG",66,0)
 .W *7,!!?7,"...unable to place terminal in graphics mode...",!!
"RTN","KMPUG",67,0)
 .D CONT
"RTN","KMPUG",68,0)
 I 'MAX D  Q
"RTN","KMPUG",69,0)
 .W *7,!!?7,"...unable to determine any data to graph or data all zeros...",!!
"RTN","KMPUG",70,0)
 .D CONT
"RTN","KMPUG",71,0)
 ; if 'vertical' graph
"RTN","KMPUG",72,0)
 I KMPUOPT["V" D EN^KMPUGV Q
"RTN","KMPUG",73,0)
 ; draw graph - display titles - display data
"RTN","KMPUG",74,0)
 D DRAW^KMPUG1,TITLES^KMPUG1,DATA
"RTN","KMPUG",75,0)
 ; if text to display.
"RTN","KMPUG",76,0)
 I $D(KMPUTAR) D WP^KMPU11(KMPUTAR,(BOTTOM+5),24) Q
"RTN","KMPUG",77,0)
 D CONT
"RTN","KMPUG",78,0)
 Q
"RTN","KMPUG",79,0)
 ;
"RTN","KMPUG",80,0)
CONT ;-- hold screen
"RTN","KMPUG",81,0)
 S DX=(IOM-23\2),DY=(IOSL-1) X IOXY
"RTN","KMPUG",82,0)
 R "Press <RET> to continue",X:DTIME
"RTN","KMPUG",83,0)
 Q
"RTN","KMPUG",84,0)
 ;
"RTN","KMPUG",85,0)
DATA ;-- display data in graph.
"RTN","KMPUG",86,0)
 W IOG0 S DY=$S(KMPUOPT["D":1,1:2),BAR=0,I=""
"RTN","KMPUG",87,0)
 F  S I=$O(@KMPUAR@(I)) Q:I=""  I $D(@KMPUAR@(I,0)) S DATA=@KMPUAR@(I,0) D 
"RTN","KMPUG",88,0)
 .S XCOORD=$P(DATA,U,2),END=(XCOORD-KMPUSTRT-STEP)
"RTN","KMPUG",89,0)
 .S DX=16,DY=DY+$S(KMPUOPT["D":2,1:1)
"RTN","KMPUG",90,0)
 .;  if no data quit
"RTN","KMPUG",91,0)
 .Q:$P(@KMPUAR@(I,0),U,2)']""
"RTN","KMPUG",92,0)
 .F I1=0:STEP:END X IOXY W @BAR(BAR),! S DX=DX+1 Q:DX=68
"RTN","KMPUG",93,0)
 .;  print value in parenthesis
"RTN","KMPUG",94,0)
 .S DX=69 X IOXY W "<",$J((XCOORD/DIV),$L($FN((MAX/DIV),"",DEC)),DEC),">"
"RTN","KMPUG",95,0)
 .S BAR=$S(BAR=1:0,1:1)
"RTN","KMPUG",96,0)
 Q
"RTN","KMPUG1")
0^41^B11831811
"RTN","KMPUG1",1,0)
KMPUG1 ;SFISC/RAK - Capacity Management Graphics ;23 Oct 1998
"RTN","KMPUG1",2,0)
 ;;1.0;CAPACITY MANAGEMENT;;Oct 27, 1998
"RTN","KMPUG1",3,0)
DRAW ;draw graph
"RTN","KMPUG1",4,0)
 W @IOF,!,IOG1 S DY=2
"RTN","KMPUG1",5,0)
 ;  draw top line
"RTN","KMPUG1",6,0)
 F I=1:1:27 S DX=41+I X IOXY W IOHL S DX=43-I X IOXY W IOHL
"RTN","KMPUG1",7,0)
 ;  draw top left and right corners
"RTN","KMPUG1",8,0)
 S DX=15 X IOXY W IOTLC S DX=68 X IOXY W IOTRC,!
"RTN","KMPUG1",9,0)
 ;  draw sides
"RTN","KMPUG1",10,0)
 F DY=(DY+1):1:BOTTOM F DX=15,68 X IOXY W IOVL,!
"RTN","KMPUG1",11,0)
 ;  draw bottom left and right corners
"RTN","KMPUG1",12,0)
 S DY=BOTTOM,DX=15 X IOXY W IOBLC S DX=68 X IOXY W IOBRC,!
"RTN","KMPUG1",13,0)
 ;  draw bottom line
"RTN","KMPUG1",14,0)
 F I=1:1:27 S DX=15+I X IOXY W IOHL S DX=68-I X IOXY W IOHL
"RTN","KMPUG1",15,0)
 ;  draw 'hash marks' on bottom line for relative values
"RTN","KMPUG1",16,0)
 S DX=15 X IOXY W IOLT,!
"RTN","KMPUG1",17,0)
 F DX=20:5:65 X IOXY W IOMT,!
"RTN","KMPUG1",18,0)
 ;  print grid
"RTN","KMPUG1",19,0)
 I KMPUOPT["G" D 
"RTN","KMPUG1",20,0)
 .S DY=2 F DX=20:5:65 X IOXY W IOTT,!
"RTN","KMPUG1",21,0)
 . F DX=20:5:65 F DY=3:1:(BOTTOM-1) X IOXY W IOVL,!
"RTN","KMPUG1",22,0)
 W IOG0
"RTN","KMPUG1",23,0)
 Q
"RTN","KMPUG1",24,0)
INIT ;-- initialize required variables.
"RTN","KMPUG1",25,0)
 D GSET^%ZISS S X="IOECH;IORVOFF;IORVON;IOUOFF;IOUON" D ENDR^%ZISS
"RTN","KMPUG1",26,0)
 ; actual bars representing data
"RTN","KMPUG1",27,0)
 S BAR(0)="IORVON,"" "",IORVOFF"
"RTN","KMPUG1",28,0)
 S BAR(1)="IOG1,""a"",IOG0"
"RTN","KMPUG1",29,0)
 S (DEC,DNUM,MAX,MIN,SCALE,YNUM)=0,GWIDTH=$S(KMPUOPT["V":10,1:50)
"RTN","KMPUG1",30,0)
 S TITLE=$P($G(KMPUTI),U,1,2)
"RTN","KMPUG1",31,0)
 S XTITLE=$P($G(KMPUTI),U,3)
"RTN","KMPUG1",32,0)
 S YTITLE=$P($G(KMPUTI),U,4)
"RTN","KMPUG1",33,0)
 ; determine maximum and minimum number and decimals (if any).
"RTN","KMPUG1",34,0)
 S (I,MAX,MIN)=""
"RTN","KMPUG1",35,0)
 F  S I=$O(@KMPUAR@(I)) Q:I=""  I $D(@KMPUAR@(I,0)) S YNUM=YNUM+1 D 
"RTN","KMPUG1",36,0)
 .I $P(@KMPUAR@(I,0),U,2)>MAX S MAX=$P(@KMPUAR@(I,0),U,2)
"RTN","KMPUG1",37,0)
 .I $P(@KMPUAR@(I,0),U,2)<MIN S MIN=$P(@KMPUAR@(I,0),U,2)
"RTN","KMPUG1",38,0)
 .; determine number of decimal places (if any).
"RTN","KMPUG1",39,0)
 .S DNUM=$P($P(@KMPUAR@(I,0),U,2),".",2) Q:'DNUM
"RTN","KMPUG1",40,0)
 .I $L(DNUM)>DEC S DEC=$L(DNUM)
"RTN","KMPUG1",41,0)
 Q:MAX'>0
"RTN","KMPUG1",42,0)
 ; get maximum number for graph.
"RTN","KMPUG1",43,0)
 D MAX
"RTN","KMPUG1",44,0)
 ; determine if there are decimal places when printed at end of graph
"RTN","KMPUG1",45,0)
 S I="" F  S I=$O(@KMPUAR@(I)) Q:I=""  I $D(@KMPUAR@(I,0)) D 
"RTN","KMPUG1",46,0)
 .S Z=$L($P($P(@KMPUAR@(I,0),U,2)/DIV,".",2)) Q:'Z
"RTN","KMPUG1",47,0)
 .I Z>DEC S DEC=$S(Z>2:2,1:1)
"RTN","KMPUG1",48,0)
 S BOTTOM=$S(KMPUOPT["D":(YNUM*2+2),1:(YNUM+3))
"RTN","KMPUG1",49,0)
 S SCALE=((MAX-KMPUSTRT)/10),STEP=((MAX-KMPUSTRT)/GWIDTH)
"RTN","KMPUG1",50,0)
 S NUM=(SCALE+KMPUSTRT)
"RTN","KMPUG1",51,0)
 ; determine if relative values have decimal
"RTN","KMPUG1",52,0)
 S DEC1=0 F I=20:5:65 I $L($P((NUM/DIV),".",2)) D 
"RTN","KMPUG1",53,0)
 .S DEC1=$S($L($P((NUM/DIV),".",2))>2:2,1:1)
"RTN","KMPUG1",54,0)
 Q
"RTN","KMPUG1",55,0)
 ;
"RTN","KMPUG1",56,0)
MAX ;-- determine 'max' or largest number for graph.
"RTN","KMPUG1",57,0)
 ;
"RTN","KMPUG1",58,0)
 S DIV=1,MAX=$FN(MAX,"",0)
"RTN","KMPUG1",59,0)
 I MAX<2 S MAX=1 Q
"RTN","KMPUG1",60,0)
 S X=1 F I=1:1:$L(MAX)-1 S X=X*10 I MAX=X S X=X/10
"RTN","KMPUG1",61,0)
 S MAX=$E(MAX-1)+1*X
"RTN","KMPUG1",62,0)
 I $L(MAX)>4 D 
"RTN","KMPUG1",63,0)
 .F I=1:1:($L(MAX)-1) S DIV=DIV_"0"
"RTN","KMPUG1",64,0)
 .I $L(DIV)<7 S DIVT=$S(KMPUOPT["S":"10^"_I,1:(DIV/1000)_"k") Q
"RTN","KMPUG1",65,0)
 .S DIVT=$S(KMPUOPT["S":"10^"_I,1:(DIV/1000000)_"m")
"RTN","KMPUG1",66,0)
 Q
"RTN","KMPUG1",67,0)
 ;
"RTN","KMPUG1",68,0)
TITLES ;-- print graph titles.
"RTN","KMPUG1",69,0)
 W IOG0
"RTN","KMPUG1",70,0)
 ; print first and second line of title
"RTN","KMPUG1",71,0)
 S DX=(IOM-$L($P(TITLE,U))\2+1),DY=0 X IOXY W $P(TITLE,U),!
"RTN","KMPUG1",72,0)
 S DX=(IOM-$L($P(TITLE,U,2))\2+1),DY=1 X IOXY W $P(TITLE,U,2),!
"RTN","KMPUG1",73,0)
 ; print y title
"RTN","KMPUG1",74,0)
 S DX=(14-$L(YTITLE)) X IOXY W IOUON,YTITLE,IOUOFF,!
"RTN","KMPUG1",75,0)
 ; print relative values under hash marks
"RTN","KMPUG1",76,0)
 S NUM=(SCALE+KMPUSTRT)
"RTN","KMPUG1",77,0)
 S DY=BOTTOM+1,DX=15-$S($L($FN((KMPUSTRT/DIV),"",DEC1))=1:0,1:$L($FN((KMPUSTRT/DIV),"",DEC1))-2) X IOXY W $FN((KMPUSTRT/DIV),"",DEC1),!
"RTN","KMPUG1",78,0)
 F I=20:5:65 D 
"RTN","KMPUG1",79,0)
 .I $L($FN((NUM/DIV),"",DEC1))=1 S DX=(I-$L($FN((NUM/DIV),"",DEC1))+1)
"RTN","KMPUG1",80,0)
 .E  S DX=(I-($L($FN((NUM/DIV),"",DEC1))-2))
"RTN","KMPUG1",81,0)
 .X IOXY W $FN((NUM/DIV),"",DEC1),! S NUM=NUM+SCALE
"RTN","KMPUG1",82,0)
 ; if div>1 write (x div)
"RTN","KMPUG1",83,0)
 I DIV>1 S DX=69 X IOXY W "<x",DIVT,">",!
"RTN","KMPUG1",84,0)
 ; print x title at bottom
"RTN","KMPUG1",85,0)
 S DX=(IOM-$L(XTITLE)\2+1),DY=BOTTOM+2 X IOXY W IOUON,XTITLE,IOUOFF,!
"RTN","KMPUG1",86,0)
 ; print data titles
"RTN","KMPUG1",87,0)
 S DY=3,I=0 F  S I=$O(@KMPUAR@(I)) Q:'I  I $D(@KMPUAR@(I,0)) D 
"RTN","KMPUG1",88,0)
 .S YTITLE=$E($P(@KMPUAR@(I,0),U),1,14)
"RTN","KMPUG1",89,0)
 .S DX=(14-$L(YTITLE)) X IOXY W YTITLE,!
"RTN","KMPUG1",90,0)
 .S DY=DY+$S(KMPUOPT["D":2,1:1)
"RTN","KMPUG1",91,0)
 Q
"RTN","KMPUG2")
0^42^B22564003
"RTN","KMPUG2",1,0)
KMPUG2 ;SFISC/RAK - Capacity Management Graphics ;23 Oct 1998
"RTN","KMPUG2",2,0)
 ;;1.0;CAPACITY MANAGEMENT;;Oct 27, 1998
"RTN","KMPUG2",3,0)
OPTIONS(KMPUOPTS) ;-- select options.
"RTN","KMPUG2",4,0)
 ;-----------------------------------------------------------------------
"RTN","KMPUG2",5,0)
 ; KMPUOPTS.. Result of selection.
"RTN","KMPUG2",6,0)
 ;            Exceptions: "" - No options selected.
"RTN","KMPUG2",7,0)
 ;                        ^  - User up-arrowed out.
"RTN","KMPUG2",8,0)
 ;-----------------------------------------------------------------------
"RTN","KMPUG2",9,0)
 N I,X,OUT
"RTN","KMPUG2",10,0)
 S KMPUOPTS="",OUT=0
"RTN","KMPUG2",11,0)
 S DTIME=$S($G(DTIME):DTIME,1:300)
"RTN","KMPUG2",12,0)
 F  D  Q:OUT
"RTN","KMPUG2",13,0)
 .W !?5,"The following graph selections are 'optional':"
"RTN","KMPUG2",14,0)
 .D DISPLAY(.KMPUOPTS) I KMPUOPTS="" S OUT=1 Q
"RTN","KMPUG2",15,0)
 .R !!,"Enter one or more option letter(s): ",X:DTIME
"RTN","KMPUG2",16,0)
 .I X="" S OUT=1,KMPUOPTS="" Q
"RTN","KMPUG2",17,0)
 .I X="^" S OUT=1,KMPUOPTS="^" Q
"RTN","KMPUG2",18,0)
 .I X["?" D HELP W @IOF Q
"RTN","KMPUG2",19,0)
 .;
"RTN","KMPUG2",20,0)
 .; remove any commas, dashes or spaces.
"RTN","KMPUG2",21,0)
 .S X=$TR(X,",- ",""),X=$$UP^XLFSTR(X)
"RTN","KMPUG2",22,0)
 .;
"RTN","KMPUG2",23,0)
 .; check for invalid answer.
"RTN","KMPUG2",24,0)
 .D CHECK Q:KMPUOPTS=""
"RTN","KMPUG2",25,0)
 .;
"RTN","KMPUG2",26,0)
 .I X["A",(X'["V") D  Q
"RTN","KMPUG2",27,0)
 ..W *7,!!?10,"Angle Data Titles only available with a Vertical Graph..."
"RTN","KMPUG2",28,0)
 .;
"RTN","KMPUG2",29,0)
 .; if vertical display warning message.
"RTN","KMPUG2",30,0)
 .I X["V" D 
"RTN","KMPUG2",31,0)
 ..W !!?7,"...please be aware that because of screen limitations Vertical"
"RTN","KMPUG2",32,0)
 ..W !?7,"   Graphs are not as accurate as Horizontal Graphs and should be"
"RTN","KMPUG2",33,0)
 ..W !?7,"   used for visual comparison rather than detailed analysis..."
"RTN","KMPUG2",34,0)
 .;
"RTN","KMPUG2",35,0)
 .S KMPUOPTS=X,OUT=1
"RTN","KMPUG2",36,0)
 ;
"RTN","KMPUG2",37,0)
 Q
"RTN","KMPUG2",38,0)
 ;
"RTN","KMPUG2",39,0)
CHECK ;-- check for valid answer.
"RTN","KMPUG2",40,0)
 N I
"RTN","KMPUG2",41,0)
 F I=1:1:$L(X) I KMPUOPTS'[$E(X,I) D  Q
"RTN","KMPUG2",42,0)
 .W *7,!!?10,"'",$E(X,I),"' is not an available option."
"RTN","KMPUG2",43,0)
 .S KMPUOPTS=""
"RTN","KMPUG2",44,0)
 Q
"RTN","KMPUG2",45,0)
 ;
"RTN","KMPUG2",46,0)
DISPLAY(KMPUOPT) ;-- display available options.
"RTN","KMPUG2",47,0)
 ;-----------------------------------------------------------------------
"RTN","KMPUG2",48,0)
 ; KMPUOPT... Will be set to available options.
"RTN","KMPUG2",49,0)
 ;-----------------------------------------------------------------------
"RTN","KMPUG2",50,0)
 N I S KMPUOPT="" W !
"RTN","KMPUG2",51,0)
 F I=1:1 Q:$T(OPT+I)']""  D 
"RTN","KMPUG2",52,0)
 .W !?7,$P($T(OPT+I),";",3)," - ",$P($T(OPT+I),";",4)
"RTN","KMPUG2",53,0)
 .S KMPUOPT=KMPUOPT_$P($T(OPT+I),";",3)
"RTN","KMPUG2",54,0)
 Q
"RTN","KMPUG2",55,0)
 ;
"RTN","KMPUG2",56,0)
FTR(FOOTER,VALUE) ;print footer
"RTN","KMPUG2",57,0)
 ;--------------------------------------------------------------------
"RTN","KMPUG2",58,0)
 ;  line feed to IOSL-3 and place message on screen
"RTN","KMPUG2",59,0)
 ;  if IOSL or IOM are not defined routine will quit
"RTN","KMPUG2",60,0)
 ;
"RTN","KMPUG2",61,0)
 ;  FOOTER - text to appear at the bottom of the screen
"RTN","KMPUG2",62,0)
 ;           if footer is not defined then the message
"RTN","KMPUG2",63,0)
 ;           'Press RETURN to continue, '^' to exit'   will appear
"RTN","KMPUG2",64,0)
 ;
"RTN","KMPUG2",65,0)
 ;  footer appears in the middle of the screen
"RTN","KMPUG2",66,0)
 ;
"RTN","KMPUG2",67,0)
 ;  VALUE - value returned:
"RTN","KMPUG2",68,0)
 ;          "" - if IOSL or IOM are not defined
"RTN","KMPUG2",69,0)
 ;           0 - if an uparrow '^' is entered
"RTN","KMPUG2",70,0)
 ;           1 - if return is entered
"RTN","KMPUG2",71,0)
 ;
"RTN","KMPUG2",72,0)
 S VALUE=""
"RTN","KMPUG2",73,0)
 I '$G(IOSL)!('$G(IOM)) Q
"RTN","KMPUG2",74,0)
 N DIR,I,X,Y
"RTN","KMPUG2",75,0)
 I $G(FOOTER)']""  S FOOTER="Press RETURN to continue, '^' to exit"
"RTN","KMPUG2",76,0)
 I $G(IORVON)']""!($G(IORVOFF)']"") N IORVON,IORVOFF,X D 
"RTN","KMPUG2",77,0)
 .S X="IORVON;IORVOFF" D ENDR^%ZISS
"RTN","KMPUG2",78,0)
 S FOOTER=IORVON_" "_FOOTER_" "_IORVOFF
"RTN","KMPUG2",79,0)
 S DIR(0)="EA",DIR("A")=$J(" ",(IOM-$L(FOOTER)/2))_FOOTER
"RTN","KMPUG2",80,0)
 F I=$Y:1:(IOSL-3) W !
"RTN","KMPUG2",81,0)
 D ^DIR S VALUE=Y
"RTN","KMPUG2",82,0)
 Q
"RTN","KMPUG2",83,0)
 ;
"RTN","KMPUG2",84,0)
HELP ;--help display for options.
"RTN","KMPUG2",85,0)
 N KMPUOUT
"RTN","KMPUG2",86,0)
 W @IOF
"RTN","KMPUG2",87,0)
 W !,"A: Angle data titles..:  Angle the titles (for Vertical Graphs only)."
"RTN","KMPUG2",88,0)
 W !,"               Example:    __________"
"RTN","KMPUG2",89,0)
 W !,"                           |        |"
"RTN","KMPUG2",90,0)
 W !,"                           |        |"
"RTN","KMPUG2",91,0)
 W !,"                           |        |"
"RTN","KMPUG2",92,0)
 W !,"                           __________"
"RTN","KMPUG2",93,0)
 W !,"                           J  F  M  A"
"RTN","KMPUG2",94,0)
 W !,"                            a  e  a  p"
"RTN","KMPUG2",95,0)
 W !,"                             n  b  r  r"
"RTN","KMPUG2",96,0)
 W !
"RTN","KMPUG2",97,0)
 W !,"D: Double space data..: Will place an empty column/row between graph bars"
"RTN","KMPUG2",98,0)
 W !,"                        (it is highly recommended that double spacing be used"
"RTN","KMPUG2",99,0)
 W !,"                        with Vertical graphs)."
"RTN","KMPUG2",100,0)
 W !
"RTN","KMPUG2",101,0)
 W !,"G: Grid...............: Print grid lines on graph."
"RTN","KMPUG2",102,0)
 W !,"               example:   ______________________________"
"RTN","KMPUG2",103,0)
 W !,"                     Jan  |    |    |    |    |    |    |"
"RTN","KMPUG2",104,0)
 W !,"                     Feb  |    |    |    |    |    |    |"
"RTN","KMPUG2",105,0)
 W !,"                     Mar  |    |    |    |    |    |    |"
"RTN","KMPUG2",106,0)
 W !,"                     Apr  |    |    |    |    |    |    |"
"RTN","KMPUG2",107,0)
 W !,"                          ______________________________"
"RTN","KMPUG2",108,0)
 D FTR("",.KMPUOUT) Q:'KMPUOUT  W @IOF
"RTN","KMPUG2",109,0)
 W !,"S: Scientific Notation: If values are 1000 or greater the graph will normally"
"RTN","KMPUG2",110,0)
 W !,"                        display a description as...: (x10k),  (x100k), etc."
"RTN","KMPUG2",111,0)
 W !,"                      - Scientific notation will be: (x10^2), (x10^3), etc."
"RTN","KMPUG2",112,0)
 W !
"RTN","KMPUG2",113,0)
 W !,"V: Vertical graph.....: The default is horizontal display."
"RTN","KMPUG2",114,0)
 W !,"                      - Selecting this option will display data vertically"
"RTN","KMPUG2",115,0)
 W !,"                        (graph bars running top to bottom)."
"RTN","KMPUG2",116,0)
 D FTR("Press <RET> to continue: ") W @IOF,!!!
"RTN","KMPUG2",117,0)
 Q
"RTN","KMPUG2",118,0)
 ;
"RTN","KMPUG2",119,0)
OPT ;list of options
"RTN","KMPUG2",120,0)
 ;;A;Angle data titles (vertical graph only).
"RTN","KMPUG2",121,0)
 ;;D;Double space data.
"RTN","KMPUG2",122,0)
 ;;G;Grid.
"RTN","KMPUG2",123,0)
 ;;S;Scientific Notation.
"RTN","KMPUG2",124,0)
 ;;V;Vertical graph.
"RTN","KMPUGP")
1^43
"RTN","KMPUGV")
0^44^B6508235
"RTN","KMPUGV",1,0)
KMPUGV ;SFISC/RAK - Capacity Management Graphics (Vertical Graphs);23 Oct 1998
"RTN","KMPUGV",2,0)
 ;;1.0;CAPACITY MANAGEMENT;;Oct 27, 1998
"RTN","KMPUGV",3,0)
EN ;-- entry point.
"RTN","KMPUGV",4,0)
 D DRAW,TITLES,DATA W IOG0
"RTN","KMPUGV",5,0)
 I $D(KMPUTAR) D  Q
"RTN","KMPUGV",6,0)
 .D WP^KMPU11(KMPUTAR,5,24,(RIGHT+5),IOM,1)
"RTN","KMPUGV",7,0)
 D CONT^KMPUG
"RTN","KMPUGV",8,0)
 Q
"RTN","KMPUGV",9,0)
 ;
"RTN","KMPUGV",10,0)
DATA ;-- display data in graph.
"RTN","KMPUGV",11,0)
 W IOG0 S DX=$S(KMPUOPT["D":9,1:10),BAR=0,I=0
"RTN","KMPUGV",12,0)
 F  S I=$O(@KMPUAR@(I)) Q:I=""  I $D(@KMPUAR@(I,0)) S DATA=@KMPUAR@(I,0) D 
"RTN","KMPUGV",13,0)
 .S XCOORD=$P(DATA,U,2),END=(XCOORD-KMPUSTRT) ;-STEP)
"RTN","KMPUGV",14,0)
 .S DY=14,DX=DX+$S(KMPUOPT["D":2,1:1)
"RTN","KMPUGV",15,0)
 .; if no data quit
"RTN","KMPUGV",16,0)
 .Q:$P(@KMPUAR@(I,0),U,2)']""
"RTN","KMPUGV",17,0)
 .F I1=0:STEP:END X IOXY W @BAR(BAR),! S DY=DY-1 Q:DY=5
"RTN","KMPUGV",18,0)
 .S BAR=$S(BAR=1:0,1:1)
"RTN","KMPUGV",19,0)
 Q
"RTN","KMPUGV",20,0)
 ;
"RTN","KMPUGV",21,0)
DRAW ;-- draw graph.
"RTN","KMPUGV",22,0)
 S RIGHT=$S(KMPUOPT["D":(YNUM*2),1:(YNUM+1))+10
"RTN","KMPUGV",23,0)
 W @IOF,!,IOG1 S DX=10
"RTN","KMPUGV",24,0)
 ; draw left line
"RTN","KMPUGV",25,0)
 F I=1:1:6 S DY=4+I X IOXY W IOVL S DY=15-I X IOXY W IOVL
"RTN","KMPUGV",26,0)
 ; draw left top corner ;and bottom corners
"RTN","KMPUGV",27,0)
 ;S DY=4 X IOXY W IOTLC ;S DY=15 X IOXY W IOBLC,!
"RTN","KMPUGV",28,0)
 ; draw top and bottom lines
"RTN","KMPUGV",29,0)
 ;F DX=(DX+1):1:(RIGHT-1) S DY=5 X IOXY W IOHL,! S DY=15 X IOXY W "s",!
"RTN","KMPUGV",30,0)
 F DX=(DX+1):1:(RIGHT-1) S DY=14 X IOXY W "s",!
"RTN","KMPUGV",31,0)
 ; draw right top corner ;and bottom corners
"RTN","KMPUGV",32,0)
 ;S DX=RIGHT,DY=5 X IOXY W IOTRC ;S DY=15 X IOXY W IOBRC,!
"RTN","KMPUGV",33,0)
 ; draw right line
"RTN","KMPUGV",34,0)
 S DX=RIGHT F I=1:1:6 S DY=4+I X IOXY W IOVL S DY=16-I X IOXY W IOVL
"RTN","KMPUGV",35,0)
 ; draw 'hash marks' on left line for relative values
"RTN","KMPUGV",36,0)
 S DX=9,DY=14 X IOXY W "s",! ;W IOLT,!
"RTN","KMPUGV",37,0)
 F DY=13:-1:4 X IOXY W "s",! ;W IOMT,!
"RTN","KMPUGV",38,0)
 ; print grid
"RTN","KMPUGV",39,0)
 I KMPUOPT["G" F DY=14:-1:4 F DX=11:1:(RIGHT-1) X IOXY W "s",!
"RTN","KMPUGV",40,0)
 W IOG0
"RTN","KMPUGV",41,0)
 Q
"RTN","KMPUGV",42,0)
 ;
"RTN","KMPUGV",43,0)
TITLES ;-- print graph titles.
"RTN","KMPUGV",44,0)
 W IOG0
"RTN","KMPUGV",45,0)
 ; print first and second line of title
"RTN","KMPUGV",46,0)
 S DX=(IOM-$L($P(TITLE,U))\2+1),DY=0 X IOXY W $P(TITLE,U),!
"RTN","KMPUGV",47,0)
 S DX=(IOM-$L($P(TITLE,U,2))\2+1),DY=1 X IOXY W $P(TITLE,U,2),!
"RTN","KMPUGV",48,0)
 ; print x title at bottom
"RTN","KMPUGV",49,0)
 S DX=(10-$L(XTITLE)),DY=3 X IOXY W IOUON,XTITLE,IOUOFF
"RTN","KMPUGV",50,0)
 ; if div>1 write (x div)
"RTN","KMPUGV",51,0)
 W:DIV>1 " <x",DIVT,">"
"RTN","KMPUGV",52,0)
 W !
"RTN","KMPUGV",53,0)
 ; print y title
"RTN","KMPUGV",54,0)
 S DY=15,DX=$S(KMPUOPT["A":1,1:2)
"RTN","KMPUGV",55,0)
 F I=1:1:8 D 
"RTN","KMPUGV",56,0)
 .X IOXY W IOUON,$E(YTITLE,I),IOUOFF,! S DY=DY+1
"RTN","KMPUGV",57,0)
 .I KMPUOPT["A" S DX=DX+1
"RTN","KMPUGV",58,0)
 ; print relative values next to hash marks
"RTN","KMPUGV",59,0)
 S NUM=(SCALE+KMPUSTRT)
"RTN","KMPUGV",60,0)
 S DY=14,DX=9-$L($FN((KMPUSTRT/DIV),"",DEC1))
"RTN","KMPUGV",61,0)
 X IOXY W $FN((KMPUSTRT/DIV),"",DEC1),!
"RTN","KMPUGV",62,0)
 F DY=13:-1:4 D 
"RTN","KMPUGV",63,0)
 .S DX=(9-$L($FN((NUM/DIV),"",DEC1)))
"RTN","KMPUGV",64,0)
 .X IOXY W $FN((NUM/DIV),"",DEC1),! S NUM=NUM+SCALE
"RTN","KMPUGV",65,0)
 ; print data titles
"RTN","KMPUGV",66,0)
 S ZDX=11,I=0
"RTN","KMPUGV",67,0)
 F  S I=$O(@KMPUAR@(I)) Q:'I  I $D(@KMPUAR@(I,0)) D 
"RTN","KMPUGV",68,0)
 .S YTITLE=$E($P(@KMPUAR@(I,0),U),1,14),DX=ZDX
"RTN","KMPUGV",69,0)
 .I KMPUOPT["A" F I1=1:1:8 S DY=14+I1 X IOXY W $E(YTITLE,I1),! S DX=DX+1
"RTN","KMPUGV",70,0)
 .I KMPUOPT'["A" F I1=1:1:8 S DY=14+I1 X IOXY W $E(YTITLE,I1),!
"RTN","KMPUGV",71,0)
 .S ZDX=ZDX+$S(KMPUOPT["D":2,1:1)
"RTN","KMPUGV",72,0)
 Q
"RTN","KMPUTL1")
0^45^B3675081
"RTN","KMPUTL1",1,0)
KMPUTL1 ;SF/RAK - Capacity Management Date Range Utility ; 11/19/98
"RTN","KMPUTL1",2,0)
 ;;1.0
"RTN","KMPUTL1",3,0)
DATERNG(KMPUY,KMPUSTR,KMPUEND) ;-- date range
"RTN","KMPUTL1",4,0)
 ;---------------------------------------------------------------------
"RTN","KMPUTL1",5,0)
 ; KMPUY..... Value returned in four pieces:
"RTN","KMPUTL1",6,0)
 ;            fmstartdate^fmenddate^ouputstartdate^outputenddate
"RTN","KMPUTL1",7,0)
 ;
"RTN","KMPUTL1",8,0)
 ;            Piece one and two are the date ranges in fileman format.
"RTN","KMPUTL1",9,0)
 ;            Piece three and four are the same dates in output format:
"RTN","KMPUTL1",10,0)
 ;                             dy-Mon-yr
"RTN","KMPUTL1",11,0)
 ;
"RTN","KMPUTL1",12,0)
 ;                               ********
"RTN","KMPUTL1",13,0)
 ;                               * NOTE *
"RTN","KMPUTL1",14,0)
 ;                               ********
"RTN","KMPUTL1",15,0)
 ;          - The first piece will always be the earliest date entered.
"RTN","KMPUTL1",16,0)
 ;
"RTN","KMPUTL1",17,0)
 ;  Optional Parameters:
"RTN","KMPUTL1",18,0)
 ;
"RTN","KMPUTL1",19,0)
 ; KMPUSTR... If defined, the earliest date that may be selected.
"RTN","KMPUTL1",20,0)
 ;            (must be in fileman format)
"RTN","KMPUTL1",21,0)
 ;
"RTN","KMPUTL1",22,0)
 ; KMPUEND... If defined, the latest date that may be selected.
"RTN","KMPUTL1",23,0)
 ;            (must be in fileman format)
"RTN","KMPUTL1",24,0)
 ;-----------------------------------------------------------------------
"RTN","KMPUTL1",25,0)
 ;
"RTN","KMPUTL1",26,0)
 N DATE1,DATE2,DIR,DIRUT,LINE,X,Y
"RTN","KMPUTL1",27,0)
 ;
"RTN","KMPUTL1",28,0)
 S KMPUY="",KMPUSTR=$G(KMPUSTR),KMPUEND=$G(KMPUEND)
"RTN","KMPUTL1",29,0)
 ;
"RTN","KMPUTL1",30,0)
RANGE ;-- Ask date ranges
"RTN","KMPUTL1",31,0)
 S DIR(0)="DOA^"_$S(KMPUSTR:KMPUSTR,1:"")_":"_$S(KMPUEND:KMPUEND,1:"")_":E)"
"RTN","KMPUTL1",32,0)
 S DIR("A")="Start with Date: "
"RTN","KMPUTL1",33,0)
 S:KMPUSTR DIR("B")=$$FMTE^XLFDT(KMPUSTR,2)
"RTN","KMPUTL1",34,0)
 S DIR("?")=" "
"RTN","KMPUTL1",35,0)
 S DIR("?",1)="Enter the starting date.",LINE=2
"RTN","KMPUTL1",36,0)
 ; if starting date.
"RTN","KMPUTL1",37,0)
 I KMPUSTR D 
"RTN","KMPUTL1",38,0)
 .S DIR("?",LINE)="Date must not precede "_$$FMTE^XLFDT(KMPUSTR)
"RTN","KMPUTL1",39,0)
 .S LINE=LINE+1
"RTN","KMPUTL1",40,0)
 ; if ending date.
"RTN","KMPUTL1",41,0)
 I KMPUEND S DIR("?",LINE)="Date must not follow "_$$FMTE^XLFDT(KMPUEND)
"RTN","KMPUTL1",42,0)
 W ! D ^DIR I $D(DIRUT) S KMPUY="" Q
"RTN","KMPUTL1",43,0)
 S DATE1=Y
"RTN","KMPUTL1",44,0)
 S DIR("A")="  End with Date: "
"RTN","KMPUTL1",45,0)
 S:KMPUEND DIR("B")=$$FMTE^XLFDT(KMPUEND,2)
"RTN","KMPUTL1",46,0)
 S DIR("?",1)="Enter the ending date."
"RTN","KMPUTL1",47,0)
 D ^DIR G:Y="" RANGE I Y="^" S KMPUY="" Q
"RTN","KMPUTL1",48,0)
 S DATE2=Y
"RTN","KMPUTL1",49,0)
 ; Set earliest date into first piece.
"RTN","KMPUTL1",50,0)
 S KMPUY=$S(DATE2<DATE1:DATE2,1:DATE1)_U_$S(DATE2>DATE1:DATE2,1:DATE1)
"RTN","KMPUTL1",51,0)
 S $P(KMPUY,U,3)=$$FMTE^XLFDT($P(KMPUY,U))
"RTN","KMPUTL1",52,0)
 S $P(KMPUY,U,4)=$$FMTE^XLFDT($P(KMPUY,U,2))
"RTN","KMPUTL1",53,0)
 Q
"RTN","XUCPCLCT")
1^53
"RTN","XUCPFRMT")
1^52
"RTN","XUCPRAW")
1^51
"SEC","^DIC",8971.1,8971.1,0,"AUDIT")
@
"SEC","^DIC",8971.1,8971.1,0,"DD")
@
"SEC","^DIC",8971.1,8971.1,0,"DEL")
@
"SEC","^DIC",8971.1,8971.1,0,"LAYGO")
@
"SEC","^DIC",8971.1,8971.1,0,"RD")
@
"SEC","^DIC",8971.1,8971.1,0,"WR")
@
"VER")
8.0^21.0
"^DD",8971.1,8971.1,0)
FIELD^^2.08^25
"^DD",8971.1,8971.1,0,"DDA")
N
"^DD",8971.1,8971.1,0,"DT")
2981105
"^DD",8971.1,8971.1,0,"ID","W")
D:$G(Y) ID^KMPRUTL(Y)
"^DD",8971.1,8971.1,0,"IX","ANODE",8971.1,.03)

"^DD",8971.1,8971.1,0,"IX","B",8971.1,.01)

"^DD",8971.1,8971.1,0,"NM","RESOURCE USAGE MONITOR")

"^DD",8971.1,8971.1,0,"VRPK")
KMPR
"^DD",8971.1,8971.1,.01,0)
DATE^RD^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",8971.1,8971.1,.01,1,0)
^.1
"^DD",8971.1,8971.1,.01,1,1,0)
8971.1^B
"^DD",8971.1,8971.1,.01,1,1,1)
S ^KMPR(8971.1,"B",$E(X,1,30),DA)=""
"^DD",8971.1,8971.1,.01,1,1,2)
K ^KMPR(8971.1,"B",$E(X,1,30),DA)
"^DD",8971.1,8971.1,.01,3)
Enter the DATE on which the data was gathered.
"^DD",8971.1,8971.1,.01,21,0)
^^1^1^2980706^
"^DD",8971.1,8971.1,.01,21,1,0)
The DATE on which the data was gathered.
"^DD",8971.1,8971.1,.01,"DT")
2980706
"^DD",8971.1,8971.1,.02,0)
SENT TO CM NATIONAL DATABASE^S^0:NO;1:YES;^0;2^Q
"^DD",8971.1,8971.1,.02,1,0)
^.1^^0
"^DD",8971.1,8971.1,.02,"DT")
2981013
"^DD",8971.1,8971.1,.03,0)
NODE^F^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",8971.1,8971.1,.03,1,0)
^.1
"^DD",8971.1,8971.1,.03,1,1,0)
8971.1^ANODE
"^DD",8971.1,8971.1,.03,1,1,1)
S ^KMPR(8971.1,"ANODE",$E(X,1,30),DA)=""
"^DD",8971.1,8971.1,.03,1,1,2)
K ^KMPR(8971.1,"ANODE",$E(X,1,30),DA)
"^DD",8971.1,8971.1,.03,1,1,"DT")
2981104
"^DD",8971.1,8971.1,.03,3)
Answer must be 1-30 characters in length.
"^DD",8971.1,8971.1,.03,"DT")
2981104
"^DD",8971.1,8971.1,.04,0)
OPTION^F^^0;4^K:$L(X)>32!($L(X)<3) X
"^DD",8971.1,8971.1,.04,1,0)
^.1^^0
"^DD",8971.1,8971.1,.04,3)
Answer must be 3-32 characters in length.
"^DD",8971.1,8971.1,.04,"DT")
2981027
"^DD",8971.1,8971.1,.05,0)
PROTOCOL^F^^0;5^K:$L(X)>63!($L(X)<3) X
"^DD",8971.1,8971.1,.05,3)
Answer must be 3-63 characters in length.
"^DD",8971.1,8971.1,.05,"DT")
2981005
"^DD",8971.1,8971.1,.06,0)
NODE TYPE^S^DS:DISK SERVER;TM:TASKMAN;US:USER;UT:USER + TASKMAN;^0;6^Q
"^DD",8971.1,8971.1,.06,"DT")
2981005
"^DD",8971.1,8971.1,.07,0)
RPC^F^^0;7^K:$L(X)>30!($L(X)<3) X
"^DD",8971.1,8971.1,.07,3)
Answer must be 3-30 characters in length.
"^DD",8971.1,8971.1,.07,"DT")
2981014
"^DD",8971.1,8971.1,.08,0)
RUM DESIGNATION^S^1:TASKMAN;2:USER;3:BROKER;4:HL7;5:OTHER;^0;8^Q
"^DD",8971.1,8971.1,.08,"DT")
2981030
"^DD",8971.1,8971.1,.09,0)
HL7^F^^0;9^K:$L(X)>30!($L(X)<1) X
"^DD",8971.1,8971.1,.09,3)
Answer must be 1-30 characters in length.
"^DD",8971.1,8971.1,.09,"DT")
2981105
"^DD",8971.1,8971.1,1.01,0)
CPU TIME (PT)^F^^1;1^K:$L(X)>25!($L(X)<1) X
"^DD",8971.1,8971.1,1.01,3)
Answer must be 1-25 characters in length.
"^DD",8971.1,8971.1,1.01,"DT")
2981103
"^DD",8971.1,8971.1,1.02,0)
DIO (PT)^F^^1;2^K:$L(X)>25!($L(X)<1) X
"^DD",8971.1,8971.1,1.02,3)
Answer must be 1-25 characters in length.
"^DD",8971.1,8971.1,1.02,"DT")
2981103
"^DD",8971.1,8971.1,1.03,0)
BIO (PT)^F^^1;3^K:$L(X)>25!($L(X)<1) X
"^DD",8971.1,8971.1,1.03,3)
Answer must be 1-25 characters in length.
"^DD",8971.1,8971.1,1.03,"DT")
2981103
"^DD",8971.1,8971.1,1.04,0)
PAGE FAULT (PT)^F^^1;4^K:$L(X)>25!($L(X)<1) X
"^DD",8971.1,8971.1,1.04,3)
Answer must be 1-25 characters in length.
"^DD",8971.1,8971.1,1.04,"DT")
2981103
"^DD",8971.1,8971.1,1.05,0)
M COMMAND (PT)^F^^1;5^K:$L(X)>25!($L(X)<1) X
"^DD",8971.1,8971.1,1.05,3)
Answer must be 1-25 characters in length.
"^DD",8971.1,8971.1,1.05,"DT")
2981103
"^DD",8971.1,8971.1,1.06,0)
GLO (PT)^F^^1;6^K:$L(X)>25!($L(X)<1) X
"^DD",8971.1,8971.1,1.06,3)
Answer must be 1-25 characters in length.
"^DD",8971.1,8971.1,1.06,"DT")
2981103
"^DD",8971.1,8971.1,1.07,0)
ELAPSED TIME (PT)^F^^1;7^K:$L(X)>25!($L(X)<1) X
"^DD",8971.1,8971.1,1.07,3)
Answer must be 1-25 characters in length.
"^DD",8971.1,8971.1,1.07,"DT")
2981103
"^DD",8971.1,8971.1,1.08,0)
OCCURRENCES (PT)^F^^1;8^K:$L(X)>25!($L(X)<1) X
"^DD",8971.1,8971.1,1.08,3)
Answer must be 1-25 characters in length.
"^DD",8971.1,8971.1,1.08,"DT")
2981110
"^DD",8971.1,8971.1,2.01,0)
CPU TIME (NP)^F^^2;1^K:$L(X)>25!($L(X)<1) X
"^DD",8971.1,8971.1,2.01,3)
Answer must be 1-25 characters in length.
"^DD",8971.1,8971.1,2.01,"DT")
2981103
"^DD",8971.1,8971.1,2.02,0)
DIO (NP)^F^^2;2^K:$L(X)>25!($L(X)<1) X
"^DD",8971.1,8971.1,2.02,3)
Answer must be 1-25 characters in length.
"^DD",8971.1,8971.1,2.02,"DT")
2981103
"^DD",8971.1,8971.1,2.03,0)
BIO (NP)^F^^2;3^K:$L(X)>25!($L(X)<1) X
"^DD",8971.1,8971.1,2.03,3)
Answer must be 1-25 characters in length.
"^DD",8971.1,8971.1,2.03,"DT")
2981103
"^DD",8971.1,8971.1,2.04,0)
PAGE FAULT (NP)^F^^2;4^K:$L(X)>25!($L(X)<1) X
"^DD",8971.1,8971.1,2.04,3)
Answer must be 1-25 characters in length.
"^DD",8971.1,8971.1,2.04,"DT")
2981103
"^DD",8971.1,8971.1,2.05,0)
M COMMAND (NP)^F^^2;5^K:$L(X)>25!($L(X)<1) X
"^DD",8971.1,8971.1,2.05,3)
Answer must be 1-25 characters in length.
"^DD",8971.1,8971.1,2.05,"DT")
2981103
"^DD",8971.1,8971.1,2.06,0)
GLO (NP)^F^^2;6^K:$L(X)>25!($L(X)<1) X
"^DD",8971.1,8971.1,2.06,3)
Answer must be 1-25 characters in length.
"^DD",8971.1,8971.1,2.06,"DT")
2981103
"^DD",8971.1,8971.1,2.07,0)
ELAPSED TIME (NP)^F^^2;7^K:$L(X)>25!($L(X)<1) X
"^DD",8971.1,8971.1,2.07,3)
Answer must be 1-25 characters in length.
"^DD",8971.1,8971.1,2.07,"DT")
2981103
"^DD",8971.1,8971.1,2.08,0)
OCCURRENCES (NP)^F^^2;8^K:$L(X)>25!($L(X)<1) X
"^DD",8971.1,8971.1,2.08,3)
Answer must be 1-25 characters in length.
"^DD",8971.1,8971.1,2.08,"DT")
2981103
"^DIC",8971.1,8971.1,0)
RESOURCE USAGE MONITOR^8971.1
"^DIC",8971.1,8971.1,0,"GL")
^KMPR(8971.1,
"^DIC",8971.1,8971.1,"%D",0)
^^2^2^2981103^^^^
"^DIC",8971.1,8971.1,"%D",1,0)
The Resource Usage Monitor (RUM) file will store statistics gathered from
"^DIC",8971.1,8971.1,"%D",2,0)
the working system.
"^DIC",8971.1,"B","RESOURCE USAGE MONITOR",8971.1)

**END**
**END**
