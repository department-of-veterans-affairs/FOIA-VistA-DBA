Released IB*2*349 SEQ #334
Extracted from mail message
**KIDS**:IB*2.0*349^

**INSTALL NAME**
IB*2.0*349
"BLD",6575,0)
IB*2.0*349^INTEGRATED BILLING^0^3070702^y
"BLD",6575,1,0)
^^1^1^3070212^
"BLD",6575,1,1,0)
UB-04 claim form.
"BLD",6575,4,0)
^9.64PA^399.1^17
"BLD",6575,4,2,0)
2
"BLD",6575,4,2,2,0)
^9.641^2.312^1
"BLD",6575,4,2,2,2.312,0)
INSURANCE TYPE  (sub-file)
"BLD",6575,4,2,2,2.312,1,0)
^9.6411^2.015^1
"BLD",6575,4,2,2,2.312,1,2.015,0)
SUBSCRIBER'S EMPLOYER NAME
"BLD",6575,4,2,222)
y^y^p^^^^n^^n
"BLD",6575,4,2,224)

"BLD",6575,4,36,0)
36
"BLD",6575,4,36,2,0)
^9.641^36^1
"BLD",6575,4,36,2,36,0)
INSURANCE COMPANY  (File-top level)
"BLD",6575,4,36,2,36,1,0)
^9.6411^.14^4
"BLD",6575,4,36,2,36,1,.11,0)
*HOSPITAL PROVIDER NUMBER
"BLD",6575,4,36,2,36,1,.14,0)
*FORM TYPE
"BLD",6575,4,36,2,36,1,4.02,0)
PERF PROV SECOND ID TYPE UB
"BLD",6575,4,36,2,36,1,4.03,0)
SECONDARY ID REQUIREMENTS
"BLD",6575,4,36,222)
y^y^p^^^^n^^n
"BLD",6575,4,36,224)

"BLD",6575,4,350.8,0)
350.8
"BLD",6575,4,350.8,222)
n^n^f^^n^^y^o^n
"BLD",6575,4,350.8,224)
I $F(".IB086.IB087.IB310.IB120.IB327.","."_$P($G(^IBE(350.8,+Y,0)),U,1)_".")
"BLD",6575,4,350.9,0)
350.9
"BLD",6575,4,350.9,2,0)
^9.641^350.9^1
"BLD",6575,4,350.9,2,350.9,0)
IB SITE PARAMETERS  (File-top level)
"BLD",6575,4,350.9,2,350.9,1,0)
^9.6411^2.1^5
"BLD",6575,4,350.9,2,350.9,1,1.04,0)
REMARKS TO APPEAR ON EACH FORM
"BLD",6575,4,350.9,2,350.9,1,1.05,0)
FEDERAL TAX NUMBER
"BLD",6575,4,350.9,2,350.9,1,1.31,0)
UB-04 ADDRESS COLUMN
"BLD",6575,4,350.9,2,350.9,1,1.33,0)
UB-04 PRINT LEGACY ID
"BLD",6575,4,350.9,2,350.9,1,2.1,0)
FACILITY NAME FOR BILLING
"BLD",6575,4,350.9,222)
y^y^p^^^^n^^n
"BLD",6575,4,350.9,224)

"BLD",6575,4,353,0)
353
"BLD",6575,4,353,2,0)
^9.641^353^1
"BLD",6575,4,353,2,353,0)
BILL FORM TYPE  (File-top level)
"BLD",6575,4,353,2,353,1,0)
^9.6411^.03^1
"BLD",6575,4,353,2,353,1,.03,0)
FOLLOW-UP PRINTER (A/R)
"BLD",6575,4,353,222)
y^n^p^^^^n^^n
"BLD",6575,4,353,224)

"BLD",6575,4,355.9,0)
355.9
"BLD",6575,4,355.9,2,0)
^9.641^355.9^1
"BLD",6575,4,355.9,2,355.9,0)
IB BILLING PRACTITIONER ID  (File-top level)
"BLD",6575,4,355.9,2,355.9,1,0)
^9.6411^.04^1
"BLD",6575,4,355.9,2,355.9,1,.04,0)
FORM TYPE APPLIED TO
"BLD",6575,4,355.9,222)
y^y^p^^^^n^^n
"BLD",6575,4,355.9,224)

"BLD",6575,4,355.91,0)
355.91
"BLD",6575,4,355.91,2,0)
^9.641^355.91^1
"BLD",6575,4,355.91,2,355.91,0)
IB INSURANCE CO LEVEL BILLING PROV ID  (File-top level)
"BLD",6575,4,355.91,2,355.91,1,0)
^9.6411^.04^1
"BLD",6575,4,355.91,2,355.91,1,.04,0)
FORM TYPE APPLIED TO
"BLD",6575,4,355.91,222)
y^y^p^^^^n^^n
"BLD",6575,4,355.91,224)

"BLD",6575,4,355.92,0)
355.92
"BLD",6575,4,355.92,2,0)
^9.641^355.92^1
"BLD",6575,4,355.92,2,355.92,0)
FACILITY BILLING ID  (File-top level)
"BLD",6575,4,355.92,2,355.92,1,0)
^9.6411^.04^1
"BLD",6575,4,355.92,2,355.92,1,.04,0)
FORM TYPE APPLIED TO
"BLD",6575,4,355.92,222)
y^y^p^^^^n^^n
"BLD",6575,4,355.92,224)

"BLD",6575,4,355.96,0)
355.96
"BLD",6575,4,355.96,2,0)
^9.641^355.96^1
"BLD",6575,4,355.96,2,355.96,0)
IB INS CO PROVIDER ID CARE UNIT  (File-top level)
"BLD",6575,4,355.96,2,355.96,1,0)
^9.6411^.04^1
"BLD",6575,4,355.96,2,355.96,1,.04,0)
FORM TYPE APPLIED TO
"BLD",6575,4,355.96,222)
y^y^p^^^^n^^n
"BLD",6575,4,355.96,224)

"BLD",6575,4,364.1,0)
364.1
"BLD",6575,4,364.1,2,0)
^9.641^364.1^1
"BLD",6575,4,364.1,2,364.1,0)
EDI TRANSMISSION BATCH  (File-top level)
"BLD",6575,4,364.1,2,364.1,1,0)
^9.6411^.06^1
"BLD",6575,4,364.1,2,364.1,1,.06,0)
BILL TYPE
"BLD",6575,4,364.1,222)
y^y^p^^^^n^^n
"BLD",6575,4,364.1,224)

"BLD",6575,4,364.4,0)
364.4
"BLD",6575,4,364.4,2,0)
^9.641^364.41^2
"BLD",6575,4,364.4,2,364.4,0)
IB EDI TRANSMISSION RULE  (File-top level)
"BLD",6575,4,364.4,2,364.4,1,0)
^9.6411^.11^2
"BLD",6575,4,364.4,2,364.4,1,.05,0)
FORM TYPE
"BLD",6575,4,364.4,2,364.4,1,.11,0)
TYPE OF RULE
"BLD",6575,4,364.4,2,364.41,0)
BILL TYPE RESTRICTIONS  (sub-file)
"BLD",6575,4,364.4,2,364.41,1,0)
^9.6411^.01^1
"BLD",6575,4,364.4,2,364.41,1,.01,0)
BILL TYPE
"BLD",6575,4,364.4,222)
y^y^p^^^^n^^n
"BLD",6575,4,364.4,224)

"BLD",6575,4,364.5,0)
364.5
"BLD",6575,4,364.5,222)
n^n^f^^y^^y^o^n
"BLD",6575,4,364.5,224)
I $$INCLUDE^IBY349PR(5,Y)
"BLD",6575,4,364.6,0)
364.6
"BLD",6575,4,364.6,222)
n^n^f^^y^^y^o^n
"BLD",6575,4,364.6,224)
I $$INCLUDE^IBY349PR(6,Y)
"BLD",6575,4,364.7,0)
364.7
"BLD",6575,4,364.7,222)
n^n^f^^y^^y^o^n
"BLD",6575,4,364.7,224)
I $$INCLUDE^IBY349PR(7,Y)
"BLD",6575,4,399,0)
399
"BLD",6575,4,399,2,0)
^9.641^399.042^3
"BLD",6575,4,399,2,399,0)
BILL/CLAIMS  (File-top level)
"BLD",6575,4,399,2,399,1,0)
^9.6411^208^34
"BLD",6575,4,399,2,399,1,.04,0)
LOCATION OF CARE
"BLD",6575,4,399,2,399,1,.05,0)
BILL CLASSIFICATION
"BLD",6575,4,399,2,399,1,.06,0)
TIMEFRAME OF BILL
"BLD",6575,4,399,2,399,1,.24,0)
UB-04 LOCATION OF CARE
"BLD",6575,4,399,2,399,1,.25,0)
UB-04 BILL CLASSIFICATION
"BLD",6575,4,399,2,399,1,.26,0)
UB-04 TIMEFRAME OF BILL
"BLD",6575,4,399,2,399,1,110,0)
*PATIENT SHORT MAILING ADDRESS
"BLD",6575,4,399,2,399,1,122,0)
PRIMARY PROVIDER #
"BLD",6575,4,399,2,399,1,123,0)
SECONDARY PROVIDER #
"BLD",6575,4,399,2,399,1,124,0)
TERTIARY PROVIDER #
"BLD",6575,4,399,2,399,1,163,0)
TREATMENT AUTHORIZATION CODE
"BLD",6575,4,399,2,399,1,204,0)
*UB82 FORM LOCATOR 2
"BLD",6575,4,399,2,399,1,205,0)
*FORM LOCATOR 9
"BLD",6575,4,399,2,399,1,206,0)
*FORM LOCATOR 27
"BLD",6575,4,399,2,399,1,207,0)
*FORM LOCATOR 45
"BLD",6575,4,399,2,399,1,208,0)
*BILL COMMENT
"BLD",6575,4,399,2,399,1,213,0)
*FORM LOCATOR 92
"BLD",6575,4,399,2,399,1,215,0)
ADMITTING DIAGNOSIS
"BLD",6575,4,399,2,399,1,216,0)
*COVERED DAYS
"BLD",6575,4,399,2,399,1,217,0)
NON-COVERED DAYS
"BLD",6575,4,399,2,399,1,221,0)
CO-INSURANCE DAYS
"BLD",6575,4,399,2,399,1,230,0)
SECONDARY AUTHORIZATION CODE
"BLD",6575,4,399,2,399,1,231,0)
TERTIARY AUTHORIZATION CODE
"BLD",6575,4,399,2,399,1,401,0)
PRINT FACILITY DATA IN BOX 32
"BLD",6575,4,399,2,399,1,402,0)
BILL REMARKS
"BLD",6575,4,399,2,399,1,450,0)
*UB92 FORM LOCATOR 2
"BLD",6575,4,399,2,399,1,451,0)
*FORM LOCATOR 11
"BLD",6575,4,399,2,399,1,452,0)
*FORM LOCATOR 31
"BLD",6575,4,399,2,399,1,453,0)
FORM LOCATOR 64A
"BLD",6575,4,399,2,399,1,454,0)
FORM LOCATOR 64B
"BLD",6575,4,399,2,399,1,455,0)
FORM LOCATOR 64C
"BLD",6575,4,399,2,399,1,456,0)
*FORM LOCATOR 56
"BLD",6575,4,399,2,399,1,457,0)
*FORM LOCATOR 57
"BLD",6575,4,399,2,399,1,458,0)
*FORM LOCATOR 78
"BLD",6575,4,399,2,399.0304,0)
PROCEDURES  (sub-file)
"BLD",6575,4,399,2,399.0304,1,0)
^9.6411^13^6
"BLD",6575,4,399,2,399.0304,1,3,0)
PRINT ORDER
"BLD",6575,4,399,2,399.0304,1,9,0)
TYPE OF SERVICE
"BLD",6575,4,399,2,399.0304,1,10,0)
ASSOCIATED DIAGNOSIS (1)
"BLD",6575,4,399,2,399.0304,1,11,0)
ASSOCIATED DIAGNOSIS (2)
"BLD",6575,4,399,2,399.0304,1,12,0)
ASSOCIATED DIAGNOSIS (3)
"BLD",6575,4,399,2,399.0304,1,13,0)
ASSOCIATED DIAGNOSIS (4)
"BLD",6575,4,399,2,399.042,0)
REVENUE CODE  (sub-file)
"BLD",6575,4,399,2,399.042,1,0)
^9.6411^.13^1
"BLD",6575,4,399,2,399.042,1,.13,0)
*UB92 FORM LOCATOR 49
"BLD",6575,4,399,222)
y^y^p^^^^n^^n
"BLD",6575,4,399,224)

"BLD",6575,4,399.1,0)
399.1
"BLD",6575,4,399.1,2,0)
^9.641^399.1^1
"BLD",6575,4,399.1,2,399.1,0)
MCCR UTILITY  (File-top level)
"BLD",6575,4,399.1,2,399.1,1,0)
^9.6411^.16^1
"BLD",6575,4,399.1,2,399.1,1,.16,0)
OCC RELATED TO
"BLD",6575,4,399.1,222)
y^y^p^^^^n^^n
"BLD",6575,4,399.1,224)

"BLD",6575,4,399.4,0)
399.4
"BLD",6575,4,399.4,222)
y^n^f^^^^n
"BLD",6575,4,"APDD",2,2.312)

"BLD",6575,4,"APDD",2,2.312,2.015)

"BLD",6575,4,"APDD",36,36)

"BLD",6575,4,"APDD",36,36,.11)

"BLD",6575,4,"APDD",36,36,.14)

"BLD",6575,4,"APDD",36,36,4.02)

"BLD",6575,4,"APDD",36,36,4.03)

"BLD",6575,4,"APDD",350.9,350.9)

"BLD",6575,4,"APDD",350.9,350.9,1.04)

"BLD",6575,4,"APDD",350.9,350.9,1.05)

"BLD",6575,4,"APDD",350.9,350.9,1.31)

"BLD",6575,4,"APDD",350.9,350.9,1.33)

"BLD",6575,4,"APDD",350.9,350.9,2.1)

"BLD",6575,4,"APDD",353,353)

"BLD",6575,4,"APDD",353,353,.03)

"BLD",6575,4,"APDD",355.9,355.9)

"BLD",6575,4,"APDD",355.9,355.9,.04)

"BLD",6575,4,"APDD",355.91,355.91)

"BLD",6575,4,"APDD",355.91,355.91,.04)

"BLD",6575,4,"APDD",355.92,355.92)

"BLD",6575,4,"APDD",355.92,355.92,.04)

"BLD",6575,4,"APDD",355.96,355.96)

"BLD",6575,4,"APDD",355.96,355.96,.04)

"BLD",6575,4,"APDD",364.1,364.1)

"BLD",6575,4,"APDD",364.1,364.1,.06)

"BLD",6575,4,"APDD",364.4,364.4)

"BLD",6575,4,"APDD",364.4,364.4,.05)

"BLD",6575,4,"APDD",364.4,364.4,.11)

"BLD",6575,4,"APDD",364.4,364.41)

"BLD",6575,4,"APDD",364.4,364.41,.01)

"BLD",6575,4,"APDD",399,399)

"BLD",6575,4,"APDD",399,399,.04)

"BLD",6575,4,"APDD",399,399,.05)

"BLD",6575,4,"APDD",399,399,.06)

"BLD",6575,4,"APDD",399,399,.24)

"BLD",6575,4,"APDD",399,399,.25)

"BLD",6575,4,"APDD",399,399,.26)

"BLD",6575,4,"APDD",399,399,110)

"BLD",6575,4,"APDD",399,399,122)

"BLD",6575,4,"APDD",399,399,123)

"BLD",6575,4,"APDD",399,399,124)

"BLD",6575,4,"APDD",399,399,163)

"BLD",6575,4,"APDD",399,399,204)

"BLD",6575,4,"APDD",399,399,205)

"BLD",6575,4,"APDD",399,399,206)

"BLD",6575,4,"APDD",399,399,207)

"BLD",6575,4,"APDD",399,399,208)

"BLD",6575,4,"APDD",399,399,213)

"BLD",6575,4,"APDD",399,399,215)

"BLD",6575,4,"APDD",399,399,216)

"BLD",6575,4,"APDD",399,399,217)

"BLD",6575,4,"APDD",399,399,221)

"BLD",6575,4,"APDD",399,399,230)

"BLD",6575,4,"APDD",399,399,231)

"BLD",6575,4,"APDD",399,399,401)

"BLD",6575,4,"APDD",399,399,402)

"BLD",6575,4,"APDD",399,399,450)

"BLD",6575,4,"APDD",399,399,451)

"BLD",6575,4,"APDD",399,399,452)

"BLD",6575,4,"APDD",399,399,453)

"BLD",6575,4,"APDD",399,399,454)

"BLD",6575,4,"APDD",399,399,455)

"BLD",6575,4,"APDD",399,399,456)

"BLD",6575,4,"APDD",399,399,457)

"BLD",6575,4,"APDD",399,399,458)

"BLD",6575,4,"APDD",399,399.0304)

"BLD",6575,4,"APDD",399,399.0304,3)

"BLD",6575,4,"APDD",399,399.0304,9)

"BLD",6575,4,"APDD",399,399.0304,10)

"BLD",6575,4,"APDD",399,399.0304,11)

"BLD",6575,4,"APDD",399,399.0304,12)

"BLD",6575,4,"APDD",399,399.0304,13)

"BLD",6575,4,"APDD",399,399.042)

"BLD",6575,4,"APDD",399,399.042,.13)

"BLD",6575,4,"APDD",399.1,399.1)

"BLD",6575,4,"APDD",399.1,399.1,.16)

"BLD",6575,4,"B",2,2)

"BLD",6575,4,"B",36,36)

"BLD",6575,4,"B",350.8,350.8)

"BLD",6575,4,"B",350.9,350.9)

"BLD",6575,4,"B",353,353)

"BLD",6575,4,"B",355.9,355.9)

"BLD",6575,4,"B",355.91,355.91)

"BLD",6575,4,"B",355.92,355.92)

"BLD",6575,4,"B",355.96,355.96)

"BLD",6575,4,"B",364.1,364.1)

"BLD",6575,4,"B",364.4,364.4)

"BLD",6575,4,"B",364.5,364.5)

"BLD",6575,4,"B",364.6,364.6)

"BLD",6575,4,"B",364.7,364.7)

"BLD",6575,4,"B",399,399)

"BLD",6575,4,"B",399.1,399.1)

"BLD",6575,4,"B",399.4,399.4)

"BLD",6575,6.3)
46
"BLD",6575,"ABPKG")

"BLD",6575,"INI")
IBY349PR
"BLD",6575,"INID")
^y^y
"BLD",6575,"INIT")
IBY349PO
"BLD",6575,"KRN",0)
^9.67PA^8989.52^19
"BLD",6575,"KRN",.4,0)
.4
"BLD",6575,"KRN",.401,0)
.401
"BLD",6575,"KRN",.402,0)
.402
"BLD",6575,"KRN",.402,"NM",0)
^9.68A^8^8
"BLD",6575,"KRN",.402,"NM",1,0)
IB SCREEN8H    FILE #399^399^0
"BLD",6575,"KRN",.402,"NM",2,0)
IB SCREEN82    FILE #399^399^0
"BLD",6575,"KRN",.402,"NM",3,0)
IBEDIT INS CO1    FILE #36^36^0
"BLD",6575,"KRN",.402,"NM",4,0)
IB SCREEN6    FILE #399^399^0
"BLD",6575,"KRN",.402,"NM",5,0)
IB SCREEN7    FILE #399^399^0
"BLD",6575,"KRN",.402,"NM",6,0)
IB SCREEN1    FILE #399^399^0
"BLD",6575,"KRN",.402,"NM",7,0)
IB SCREEN8    FILE #399^399^0
"BLD",6575,"KRN",.402,"NM",8,0)
IB SCREEN4    FILE #399^399^0
"BLD",6575,"KRN",.402,"NM","B","IB SCREEN1    FILE #399",6)

"BLD",6575,"KRN",.402,"NM","B","IB SCREEN4    FILE #399",8)

"BLD",6575,"KRN",.402,"NM","B","IB SCREEN6    FILE #399",4)

"BLD",6575,"KRN",.402,"NM","B","IB SCREEN7    FILE #399",5)

"BLD",6575,"KRN",.402,"NM","B","IB SCREEN8    FILE #399",7)

"BLD",6575,"KRN",.402,"NM","B","IB SCREEN82    FILE #399",2)

"BLD",6575,"KRN",.402,"NM","B","IB SCREEN8H    FILE #399",1)

"BLD",6575,"KRN",.402,"NM","B","IBEDIT INS CO1    FILE #36",3)

"BLD",6575,"KRN",.403,0)
.403
"BLD",6575,"KRN",.5,0)
.5
"BLD",6575,"KRN",.84,0)
.84
"BLD",6575,"KRN",3.6,0)
3.6
"BLD",6575,"KRN",3.8,0)
3.8
"BLD",6575,"KRN",9.2,0)
9.2
"BLD",6575,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",6575,"KRN",9.8,0)
9.8
"BLD",6575,"KRN",9.8,"NM",0)
^9.68A^89^84
"BLD",6575,"KRN",9.8,"NM",1,0)
IBCEF1^^0^B53245090
"BLD",6575,"KRN",9.8,"NM",2,0)
IBCEF3^^0^B46268284
"BLD",6575,"KRN",9.8,"NM",3,0)
IBCSC8H^^0^B33583237
"BLD",6575,"KRN",9.8,"NM",4,0)
IBCSCE^^0^B14217145
"BLD",6575,"KRN",9.8,"NM",5,0)
IBCSC82^^0^B20854750
"BLD",6575,"KRN",9.8,"NM",6,0)
IBCSCH^^0^B74472704
"BLD",6575,"KRN",9.8,"NM",7,0)
IBJPS^^0^B5288376
"BLD",6575,"KRN",9.8,"NM",8,0)
IBJPS2^^0^B48618964
"BLD",6575,"KRN",9.8,"NM",9,0)
IBCEF77^^0^B24927059
"BLD",6575,"KRN",9.8,"NM",10,0)
IBCEF11^^0^B48127699
"BLD",6575,"KRN",9.8,"NM",11,0)
IBCEU5^^0^B87835412
"BLD",6575,"KRN",9.8,"NM",12,0)
IBCEQ1^^0^B30648682
"BLD",6575,"KRN",9.8,"NM",13,0)
IBCEQ1A^^0^B62926268
"BLD",6575,"KRN",9.8,"NM",14,0)
IBCERP6^^0^B24261779
"BLD",6575,"KRN",9.8,"NM",15,0)
IBCEU^^0^B57127468
"BLD",6575,"KRN",9.8,"NM",16,0)
IBCEU0^^0^B62153346
"BLD",6575,"KRN",9.8,"NM",17,0)
IBCEU2^^0^B56928626
"BLD",6575,"KRN",9.8,"NM",18,0)
IBCEXTRP^^0^B22039999
"BLD",6575,"KRN",9.8,"NM",19,0)
IBCF^^0^B24102162
"BLD",6575,"KRN",9.8,"NM",20,0)
IBCFP1^^0^B34736940
"BLD",6575,"KRN",9.8,"NM",21,0)
IBCNSC01^^0^B48419928
"BLD",6575,"KRN",9.8,"NM",22,0)
IBCNSC1^^0^B65094362
"BLD",6575,"KRN",9.8,"NM",23,0)
IBCSC4^^0^B22332423
"BLD",6575,"KRN",9.8,"NM",24,0)
IBCU4^^0^B17693963
"BLD",6575,"KRN",9.8,"NM",25,0)
IBJTBA^^0^B47553598
"BLD",6575,"KRN",9.8,"NM",26,0)
IBJTBA1^^0^B26877071
"BLD",6575,"KRN",9.8,"NM",27,0)
IBJTBC^^0^B13013403
"BLD",6575,"KRN",9.8,"NM",28,0)
IBCF33^^0^B31973795
"BLD",6575,"KRN",9.8,"NM",32,0)
IBCBB1^^0^B70135753
"BLD",6575,"KRN",9.8,"NM",33,0)
IBCBB21^^0^B10829240
"BLD",6575,"KRN",9.8,"NM",34,0)
IBCBB3^^0^B37225304
"BLD",6575,"KRN",9.8,"NM",35,0)
IBCEOB1^^0^B69169596
"BLD",6575,"KRN",9.8,"NM",36,0)
IBCEMRAA^^0^B61798719
"BLD",6575,"KRN",9.8,"NM",37,0)
IBCBB8^^0^B4642279
"BLD",6575,"KRN",9.8,"NM",38,0)
IBCE837^^0^B82438812
"BLD",6575,"KRN",9.8,"NM",39,0)
IBCECOB4^^0^B34090702
"BLD",6575,"KRN",9.8,"NM",40,0)
IBCECOB5^^0^B13398553
"BLD",6575,"KRN",9.8,"NM",41,0)
IBCECSA5^^0^B62746487
"BLD",6575,"KRN",9.8,"NM",42,0)
IBCEF2^^0^B53903581
"BLD",6575,"KRN",9.8,"NM",43,0)
IBCEF22^^0^B52106321
"BLD",6575,"KRN",9.8,"NM",44,0)
IBCEF31^^0^B7985183
"BLD",6575,"KRN",9.8,"NM",45,0)
IBCEF4^^0^B29271038
"BLD",6575,"KRN",9.8,"NM",46,0)
IBCEFG1^^0^B26630861
"BLD",6575,"KRN",9.8,"NM",47,0)
IBCEM03^^0^B45643062
"BLD",6575,"KRN",9.8,"NM",48,0)
IBCEMSR^^0^B49071063
"BLD",6575,"KRN",9.8,"NM",49,0)
IBCEMSR1^^0^B59770244
"BLD",6575,"KRN",9.8,"NM",50,0)
IBCEMU2^^0^B35260966
"BLD",6575,"KRN",9.8,"NM",51,0)
IBCEOB00^^0^B60829108
"BLD",6575,"KRN",9.8,"NM",52,0)
IBCEP^^0^B21937532
"BLD",6575,"KRN",9.8,"NM",53,0)
IBCEP0^^0^B68376329
"BLD",6575,"KRN",9.8,"NM",54,0)
IBCEP2^^0^B43750443
"BLD",6575,"KRN",9.8,"NM",55,0)
IBCEP2A^^0^B43323915
"BLD",6575,"KRN",9.8,"NM",56,0)
IBCEP3^^0^B36442740
"BLD",6575,"KRN",9.8,"NM",57,0)
IBCEP4^^0^B23664048
"BLD",6575,"KRN",9.8,"NM",58,0)
IBCEP4A^^0^B49631156
"BLD",6575,"KRN",9.8,"NM",59,0)
IBCEP5^^0^B48846448
"BLD",6575,"KRN",9.8,"NM",60,0)
IBCEP5B^^0^B41204243
"BLD",6575,"KRN",9.8,"NM",61,0)
IBCEP5C^^0^B44199946
"BLD",6575,"KRN",9.8,"NM",62,0)
IBCEP5D^^0^B62438221
"BLD",6575,"KRN",9.8,"NM",63,0)
IBCEP7^^0^B49016405
"BLD",6575,"KRN",9.8,"NM",64,0)
IBCEP7C^^0^B59638074
"BLD",6575,"KRN",9.8,"NM",65,0)
IBCEP9^^0^B73704936
"BLD",6575,"KRN",9.8,"NM",66,0)
IBCEPB^^0^B7676163
"BLD",6575,"KRN",9.8,"NM",67,0)
IBCEPTC^^0^B73846372
"BLD",6575,"KRN",9.8,"NM",68,0)
IBCEPTC2^^0^B48277704
"BLD",6575,"KRN",9.8,"NM",69,0)
IBCEPTR^^0^B102679616
"BLD",6575,"KRN",9.8,"NM",70,0)
IBCEF73^^0^B54498448
"BLD",6575,"KRN",9.8,"NM",71,0)
IBCEF7^^0^B49975711
"BLD",6575,"KRN",9.8,"NM",72,0)
IBCEF71^^0^B63782219
"BLD",6575,"KRN",9.8,"NM",73,0)
IBCEF72^^0^B53742177
"BLD",6575,"KRN",9.8,"NM",74,0)
IBCEF76^^0^B34168446
"BLD",6575,"KRN",9.8,"NM",75,0)
IBCSC1^^0^B6857570
"BLD",6575,"KRN",9.8,"NM",76,0)
IBCCC2^^0^B66228987
"BLD",6575,"KRN",9.8,"NM",77,0)
IBCBB2^^0^B42055097
"BLD",6575,"KRN",9.8,"NM",78,0)
IBCBB9^^0^B10249958
"BLD",6575,"KRN",9.8,"NM",80,0)
IBCEF74A^^0^B19511866
"BLD",6575,"KRN",9.8,"NM",81,0)
IBCEMCA3^^0^B52111950
"BLD",6575,"KRN",9.8,"NM",82,0)
IBCEMRAB^^0^B52118593
"BLD",6575,"KRN",9.8,"NM",83,0)
IBCEP7B^^0^B7401780
"BLD",6575,"KRN",9.8,"NM",84,0)
IBCEP8A^^0^B25658990
"BLD",6575,"KRN",9.8,"NM",85,0)
IBCEU1^^0^B41905172
"BLD",6575,"KRN",9.8,"NM",87,0)
IBCU63^^0^B16132764
"BLD",6575,"KRN",9.8,"NM",88,0)
IBCU71^^0^B21952006
"BLD",6575,"KRN",9.8,"NM",89,0)
IBCVA1^^0^B20900613
"BLD",6575,"KRN",9.8,"NM","B","IBCBB1",32)

"BLD",6575,"KRN",9.8,"NM","B","IBCBB2",77)

"BLD",6575,"KRN",9.8,"NM","B","IBCBB21",33)

"BLD",6575,"KRN",9.8,"NM","B","IBCBB3",34)

"BLD",6575,"KRN",9.8,"NM","B","IBCBB8",37)

"BLD",6575,"KRN",9.8,"NM","B","IBCBB9",78)

"BLD",6575,"KRN",9.8,"NM","B","IBCCC2",76)

"BLD",6575,"KRN",9.8,"NM","B","IBCE837",38)

"BLD",6575,"KRN",9.8,"NM","B","IBCECOB4",39)

"BLD",6575,"KRN",9.8,"NM","B","IBCECOB5",40)

"BLD",6575,"KRN",9.8,"NM","B","IBCECSA5",41)

"BLD",6575,"KRN",9.8,"NM","B","IBCEF1",1)

"BLD",6575,"KRN",9.8,"NM","B","IBCEF11",10)

"BLD",6575,"KRN",9.8,"NM","B","IBCEF2",42)

"BLD",6575,"KRN",9.8,"NM","B","IBCEF22",43)

"BLD",6575,"KRN",9.8,"NM","B","IBCEF3",2)

"BLD",6575,"KRN",9.8,"NM","B","IBCEF31",44)

"BLD",6575,"KRN",9.8,"NM","B","IBCEF4",45)

"BLD",6575,"KRN",9.8,"NM","B","IBCEF7",71)

"BLD",6575,"KRN",9.8,"NM","B","IBCEF71",72)

"BLD",6575,"KRN",9.8,"NM","B","IBCEF72",73)

"BLD",6575,"KRN",9.8,"NM","B","IBCEF73",70)

"BLD",6575,"KRN",9.8,"NM","B","IBCEF74A",80)

"BLD",6575,"KRN",9.8,"NM","B","IBCEF76",74)

"BLD",6575,"KRN",9.8,"NM","B","IBCEF77",9)

"BLD",6575,"KRN",9.8,"NM","B","IBCEFG1",46)

"BLD",6575,"KRN",9.8,"NM","B","IBCEM03",47)

"BLD",6575,"KRN",9.8,"NM","B","IBCEMCA3",81)

"BLD",6575,"KRN",9.8,"NM","B","IBCEMRAA",36)

"BLD",6575,"KRN",9.8,"NM","B","IBCEMRAB",82)

"BLD",6575,"KRN",9.8,"NM","B","IBCEMSR",48)

"BLD",6575,"KRN",9.8,"NM","B","IBCEMSR1",49)

"BLD",6575,"KRN",9.8,"NM","B","IBCEMU2",50)

"BLD",6575,"KRN",9.8,"NM","B","IBCEOB00",51)

"BLD",6575,"KRN",9.8,"NM","B","IBCEOB1",35)

"BLD",6575,"KRN",9.8,"NM","B","IBCEP",52)

"BLD",6575,"KRN",9.8,"NM","B","IBCEP0",53)

"BLD",6575,"KRN",9.8,"NM","B","IBCEP2",54)

"BLD",6575,"KRN",9.8,"NM","B","IBCEP2A",55)

"BLD",6575,"KRN",9.8,"NM","B","IBCEP3",56)

"BLD",6575,"KRN",9.8,"NM","B","IBCEP4",57)

"BLD",6575,"KRN",9.8,"NM","B","IBCEP4A",58)

"BLD",6575,"KRN",9.8,"NM","B","IBCEP5",59)

"BLD",6575,"KRN",9.8,"NM","B","IBCEP5B",60)

"BLD",6575,"KRN",9.8,"NM","B","IBCEP5C",61)

"BLD",6575,"KRN",9.8,"NM","B","IBCEP5D",62)

"BLD",6575,"KRN",9.8,"NM","B","IBCEP7",63)

"BLD",6575,"KRN",9.8,"NM","B","IBCEP7B",83)

"BLD",6575,"KRN",9.8,"NM","B","IBCEP7C",64)

"BLD",6575,"KRN",9.8,"NM","B","IBCEP8A",84)

"BLD",6575,"KRN",9.8,"NM","B","IBCEP9",65)

"BLD",6575,"KRN",9.8,"NM","B","IBCEPB",66)

"BLD",6575,"KRN",9.8,"NM","B","IBCEPTC",67)

"BLD",6575,"KRN",9.8,"NM","B","IBCEPTC2",68)

"BLD",6575,"KRN",9.8,"NM","B","IBCEPTR",69)

"BLD",6575,"KRN",9.8,"NM","B","IBCEQ1",12)

"BLD",6575,"KRN",9.8,"NM","B","IBCEQ1A",13)

"BLD",6575,"KRN",9.8,"NM","B","IBCERP6",14)

"BLD",6575,"KRN",9.8,"NM","B","IBCEU",15)

"BLD",6575,"KRN",9.8,"NM","B","IBCEU0",16)

"BLD",6575,"KRN",9.8,"NM","B","IBCEU1",85)

"BLD",6575,"KRN",9.8,"NM","B","IBCEU2",17)

"BLD",6575,"KRN",9.8,"NM","B","IBCEU5",11)

"BLD",6575,"KRN",9.8,"NM","B","IBCEXTRP",18)

"BLD",6575,"KRN",9.8,"NM","B","IBCF",19)

"BLD",6575,"KRN",9.8,"NM","B","IBCF33",28)

"BLD",6575,"KRN",9.8,"NM","B","IBCFP1",20)

"BLD",6575,"KRN",9.8,"NM","B","IBCNSC01",21)

"BLD",6575,"KRN",9.8,"NM","B","IBCNSC1",22)

"BLD",6575,"KRN",9.8,"NM","B","IBCSC1",75)

"BLD",6575,"KRN",9.8,"NM","B","IBCSC4",23)

"BLD",6575,"KRN",9.8,"NM","B","IBCSC82",5)

"BLD",6575,"KRN",9.8,"NM","B","IBCSC8H",3)

"BLD",6575,"KRN",9.8,"NM","B","IBCSCE",4)

"BLD",6575,"KRN",9.8,"NM","B","IBCSCH",6)

"BLD",6575,"KRN",9.8,"NM","B","IBCU4",24)

"BLD",6575,"KRN",9.8,"NM","B","IBCU63",87)

"BLD",6575,"KRN",9.8,"NM","B","IBCU71",88)

"BLD",6575,"KRN",9.8,"NM","B","IBCVA1",89)

"BLD",6575,"KRN",9.8,"NM","B","IBJPS",7)

"BLD",6575,"KRN",9.8,"NM","B","IBJPS2",8)

"BLD",6575,"KRN",9.8,"NM","B","IBJTBA",25)

"BLD",6575,"KRN",9.8,"NM","B","IBJTBA1",26)

"BLD",6575,"KRN",9.8,"NM","B","IBJTBC",27)

"BLD",6575,"KRN",19,0)
19
"BLD",6575,"KRN",19,"NM",0)
^9.68A^^
"BLD",6575,"KRN",19.1,0)
19.1
"BLD",6575,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",6575,"KRN",101,0)
101
"BLD",6575,"KRN",409.61,0)
409.61
"BLD",6575,"KRN",771,0)
771
"BLD",6575,"KRN",870,0)
870
"BLD",6575,"KRN",8989.51,0)
8989.51
"BLD",6575,"KRN",8989.52,0)
8989.52
"BLD",6575,"KRN",8994,0)
8994
"BLD",6575,"KRN","B",.4,.4)

"BLD",6575,"KRN","B",.401,.401)

"BLD",6575,"KRN","B",.402,.402)

"BLD",6575,"KRN","B",.403,.403)

"BLD",6575,"KRN","B",.5,.5)

"BLD",6575,"KRN","B",.84,.84)

"BLD",6575,"KRN","B",3.6,3.6)

"BLD",6575,"KRN","B",3.8,3.8)

"BLD",6575,"KRN","B",9.2,9.2)

"BLD",6575,"KRN","B",9.8,9.8)

"BLD",6575,"KRN","B",19,19)

"BLD",6575,"KRN","B",19.1,19.1)

"BLD",6575,"KRN","B",101,101)

"BLD",6575,"KRN","B",409.61,409.61)

"BLD",6575,"KRN","B",771,771)

"BLD",6575,"KRN","B",870,870)

"BLD",6575,"KRN","B",8989.51,8989.51)

"BLD",6575,"KRN","B",8989.52,8989.52)

"BLD",6575,"KRN","B",8994,8994)

"BLD",6575,"QUES",0)
^9.62^^
"BLD",6575,"REQB",0)
^9.611^9^9
"BLD",6575,"REQB",1,0)
IB*2.0*348^2
"BLD",6575,"REQB",2,0)
IB*2.0*343^2
"BLD",6575,"REQB",3,0)
IB*2.0*358^2
"BLD",6575,"REQB",4,0)
IB*2.0*327^2
"BLD",6575,"REQB",5,0)
IB*2.0*323^2
"BLD",6575,"REQB",6,0)
IB*2.0*294^2
"BLD",6575,"REQB",7,0)
IB*2.0*230^2
"BLD",6575,"REQB",8,0)
IB*2.0*122^2
"BLD",6575,"REQB",9,0)
IB*2.0*356^2
"BLD",6575,"REQB","B","IB*2.0*122",8)

"BLD",6575,"REQB","B","IB*2.0*230",7)

"BLD",6575,"REQB","B","IB*2.0*294",6)

"BLD",6575,"REQB","B","IB*2.0*323",5)

"BLD",6575,"REQB","B","IB*2.0*327",4)

"BLD",6575,"REQB","B","IB*2.0*343",2)

"BLD",6575,"REQB","B","IB*2.0*348",1)

"BLD",6575,"REQB","B","IB*2.0*356",9)

"BLD",6575,"REQB","B","IB*2.0*358",3)

"DATA",350.8,86,0)
IB086^MEDICARE policy assigned to this UB-04 is not a PART A policy.^IB086^1^3
"DATA",350.8,87,0)
IB087^MEDICARE policy assigned to this CMS-1500 bill is not a PART B policy.^IB087^1^3
"DATA",350.8,276,0)
IB310^For CMS-1500 claims, each revenue code must reference a procedure^IB310^1^3
"DATA",350.8,297,0)
IB120^Missing Diagnosis:  Medicare requires diagnosis for UB-04 forms^IB120^1^1
"DATA",350.8,308,0)
IB327^SSN is required on UB-04 provider ID print - must be forced to print locally^IB327
"DATA",364.5,8,0)
N-UB-04 SERVICE LINE (EDI)^N^E^G^399^^^
"DATA",364.5,8,1)
S IBXDATA="" I $$FT^IBCEF(IBXIEN)=3 K:$$INSPRF^IBCEF(IBXIEN)=1 IBXSAVE("DATE") S:'$$INPAT^IBCEF(IBXIEN,1) IBXSAVE("DATE")=$$SERVDT^IBCEF(IBXIEN,8,1) D HOS^IBCEF2(IBXIEN)
"DATA",364.5,8,3,0)
^364.53^6^6^3010501^^^^
"DATA",364.5,8,3,1,0)
The data to be included in the institutional service claim segment for
"DATA",364.5,8,3,2,0)
bill entry IBXIEN.  Format is revenue code pointer^procedure code pointer^
"DATA",364.5,8,3,3,0)
unit charge^units^total charge^total uncovered charge^form locator 49^
"DATA",364.5,8,3,4,0)
ien of revenue code multiple^iens of modifiers for the CPT code
"DATA",364.5,8,3,5,0)
Data is returned in an array IBXDATA(n) and IBXSAVE("DATE")=service date
"DATA",364.5,8,3,6,0)
for outpatient institution charges
"DATA",364.5,14,0)
N-UB92 FORM LOCATOR 57^N^F^I^399^*FORM LOCATOR 57^^
"DATA",364.5,14,1)

"DATA",364.5,14,3,0)
^^1^1^2991115^^^^
"DATA",364.5,14,3,1,0)
The UB92 data for FORM LOCATOR 57 for bill IBXIEN.
"DATA",364.5,15,0)
N-UB92 FORM LOCATOR 31^N^F^I^399^*FORM LOCATOR 31^^
"DATA",364.5,15,1)

"DATA",364.5,15,3,0)
^^1^1^2991115^^^^
"DATA",364.5,15,3,1,0)
The UB92 data for FORM LOCATOR 31 for bill IBXIEN.
"DATA",364.5,16,0)
N-UB-04 PROCEDURES^N^E^G^399^^^
"DATA",364.5,16,1)
N IB,IBPROC,Z D PROCX^IBCVA1 S (IB,Z)=0 F  S IB=$O(IBPROC(IB)) Q:'IB  S Z=Z+1,IBXDATA(Z)=IBPROC(IB) D SETMODS^IBCVA1($P(IBPROC(IB),U,15),Z,.IBXSAVE)
"DATA",364.5,16,3,0)
^364.53^4^4^3061219^^^^
"DATA",364.5,16,3,1,0)
The procedures associated with bill IBXIEN.  Format is:
"DATA",364.5,16,3,2,0)
procedure code;ICPT( or ICD0(^procedure date in fileman format.
"DATA",364.5,16,3,3,0)
Data is returned in an array IBXDATA(1-n) and modifiers on the procedures
"DATA",364.5,16,3,4,0)
are returned in IBXSAVE("PROCMODS",1-n)=modifiers separated by comma.
"DATA",364.5,53,0)
N-UB92 FORM LOCATOR 78^N^F^I^399^*FORM LOCATOR 78^^
"DATA",364.5,53,1)

"DATA",364.5,53,3,0)
^^1^1^2991115^^^^
"DATA",364.5,53,3,1,0)
The UB92 data for FORM LOCATOR 78 for bill IBXIEN.
"DATA",364.5,55,0)
N-CURR INS FORM LOC 64^N^E^I^399^^^
"DATA",364.5,55,1)
N Z S Z=$$COBN^IBCEF(IBXIEN) D F^IBCEF("N-UB-04 FORM LOCATOR 64"_$P("^B^C",U,Z)) S:$$WNRBILL^IBEFUNC(IBXIEN) IBXDATA=""
"DATA",364.5,55,3,0)
^364.53^2^2^3070122^^
"DATA",364.5,55,3,1,0)
The form locator 64 data for the current insurance company for bill entry
"DATA",364.5,55,3,2,0)
IBXIEN.
"DATA",364.5,56,0)
N-OTH INS FORM LOC 64^N^E^G^399^^^
"DATA",364.5,56,1)
N Z,Z0,Z1,IBZ I $D(^DGCR(399,IBXIEN,"I2")) S Z=$$COBN^IBCEF(IBXIEN) S Z1=$S(Z>1:"^"_$E(" CB",Z),1:"B^C") F Z0=1,2 D F^IBCEF("N-UB-04 FORM LOCATOR 64"_$P(Z1,U,Z0),"IBZ",,IBXIEN) S IBXDATA(Z0)=$G(IBZ)
"DATA",364.5,56,3,0)
^^8^8^3070605^
"DATA",364.5,56,3,1,0)
The form locator 64 data for all other insurance companies for bill entry
"DATA",364.5,56,3,2,0)
IBXIEN.  Data is returned in array IBXDATA(n).  This is a group element and
"DATA",364.5,56,3,3,0)
up to 2 data elements are returned in the IBXDATA(n) array.  If the primary
"DATA",364.5,56,3,4,0)
insurance is the current responsible, the secondary and tertiary insurance
"DATA",364.5,56,3,5,0)
form locator 64 data are returned.  If the secondary insurance is the
"DATA",364.5,56,3,6,0)
current responsible, the primary and tertiary insurance form locator 64 data
"DATA",364.5,56,3,7,0)
are returned. If the tertiary insurance is the current responsible, the
"DATA",364.5,56,3,8,0)
primary and secondary insurance form locator 64 data are returned.
"DATA",364.5,85,0)
N-ADMITTING DIAGNOSIS^N^E^I^399^^^
"DATA",364.5,85,1)
S IBXDATA=+$G(^DGCR(399,IBXIEN,"U2")),IBXDATA=$S(IBXDATA:$P($G(^ICD9(+IBXDATA,0)),U),1:"")
"DATA",364.5,85,3,0)
^^1^1^3070220^
"DATA",364.5,85,3,1,0)
The admitting diagnosis for bill entry IBXIEN.
"DATA",364.5,142,0)
N-PRINT BILL SUBMIT STATUS^N^E^I^399^^^
"DATA",364.5,142,1)
S:'$D(IBPNT) IBPNT=0 S IBXDATA=$S($$NEEDMRA^IBEFUNC(IBXIEN):"*** NOT A BILL-MRA NEEDED ***",IBPNT=0:"*** COPY OF ORIGINAL BILL ***",IBPNT=2:"*** SECOND NOTICE ***",IBPNT=3:"*** THIRD NOTICE ***",1:"")
"DATA",364.5,142,3,0)
^^3^3^3061103^
"DATA",364.5,142,3,1,0)
The bill type to print at the top of either the CMS-1500 or the UB-04.  
"DATA",364.5,142,3,2,0)
This element assumes that the variable IBPNT has been previously set by a
"DATA",364.5,142,3,3,0)
pre-processor routine or by some other method.
"DATA",364.5,186,0)
N-UB92 FORM LOCATOR 11^N^F^I^399^*FORM LOCATOR 11^^
"DATA",364.5,186,1)

"DATA",364.5,186,3,0)
^^2^2^2991115^^^^
"DATA",364.5,186,3,1,0)
This returns the value of the Fileman field FORM LOCATOR 11 for bill entry
"DATA",364.5,186,3,2,0)
IBXIEN.
"DATA",364.5,187,0)
N-PATIENT SHORT ADDRESS^N^F^I^399^*PATIENT SHORT MAILING ADDRESS^^
"DATA",364.5,187,1)

"DATA",364.5,187,3,0)
^^1^1^2991115
"DATA",364.5,187,3,1,0)
The Fileman extracted value of the short mailing address for the patient.
"DATA",364.5,191,0)
N-UB-04 FORM LOCATOR 64^N^F^I^399^FORM LOCATOR 64A^^
"DATA",364.5,191,1)

"DATA",364.5,191,3,0)
^^2^2^3070119^
"DATA",364.5,191,3,1,0)
This returns the value for UB-04 FORM LOCATOR 64A in IBXDATA for bill
"DATA",364.5,191,3,2,0)
entry IBXIEN.
"DATA",364.5,193,0)
N-UB-04 SERVICE LINE (PRINT)^N^E^G^399^^^
"DATA",364.5,193,1)
K ^TMP($J,"IBC-RC"),IBXSAVE("DATE") N IBIFN,IBFL,IBZ S IBIFN=IBXIEN X "N A,B S A="""",B=6 F  S A=$O(^TMP($J,""PROC"",A)) Q:'A  S B=B+1,IBFL(80,B)=^(A),IBFL(80)=B" S:'$$INPAT^IBCEF(IBXIEN,1) IBXSAVE("DATE")=$$SERVDT^IBCEF(IBXIEN,6,0) D ^IBCF33
"DATA",364.5,193,3,0)
^364.53^11^11^3001114^^^^
"DATA",364.5,193,3,1,0)
The data to be included in form locators 42-49 for bill entry IBXIEN.
"DATA",364.5,193,3,2,0)
Two formats of data are returned in ^TMP($J,"IBC-RC"):
"DATA",364.5,193,3,3,0)
 ^TMP($J,"IBC-RC",line #) = column flag=1^revenue code^revenue code std
"DATA",364.5,193,3,4,0)
                         abbreviation^CPT code^unit charge^units^total
"DATA",364.5,193,3,5,0)
                         charges^non-covered charges^form locator 49
"DATA",364.5,193,3,6,0)
                         ^ien of revenue code multiple^modifiers
"DATA",364.5,193,3,7,0)
    OR
"DATA",364.5,193,3,8,0)
 ^TMP($J,"IBC-RC",line #) = column flag=2 or 3^free text (2 prints text in
"DATA",364.5,193,3,9,0)
                         column 1, 3 in column 6)
"DATA",364.5,193,3,10,0)
Also, for outpatient UB-04 claims, it saves the statement from date in
"DATA",364.5,193,3,11,0)
IBXSAVE("DATE")
"DATA",364.5,221,0)
N-UB-04 TIMEFRAME OF BILL^N^F^I^399^UB-04 TIMEFRAME OF BILL^I^
"DATA",364.5,221,1)

"DATA",364.5,221,3,0)
^^4^4^2991115^^^^
"DATA",364.5,221,3,1,0)
This data element will be the third digit in the 3 digit code required for
"DATA",364.5,221,3,2,0)
form locator 4 on the UB-04 bill form for bill entry IBXIEN.
"DATA",364.5,221,3,3,0)
This was expanded from the original field (TIMEFRAME OF BILL - #.06) to
"DATA",364.5,221,3,4,0)
enable a broader range of bill types to be generated.
"DATA",364.5,222,0)
N-UB-04 LOCATION OF CARE^N^F^I^399^UB-04 LOCATION OF CARE^I^
"DATA",364.5,222,1)

"DATA",364.5,222,3,0)
^^4^4^2991115^^^^
"DATA",364.5,222,3,1,0)
This data element will be the first digit in the 3 digit code required for
"DATA",364.5,222,3,2,0)
form locator 4 on the UB-04 bill form for bill entry IBXIEN.
"DATA",364.5,222,3,3,0)
This was expanded from the original field (LOCATION OF CARE - #.04) to
"DATA",364.5,222,3,4,0)
enable a broader range of bill types to be generated.
"DATA",364.5,223,0)
N-UB-04 BILL CLASSIFICATION^N^F^I^399^UB-04 BILL CLASSIFICATION:CODE^E^
"DATA",364.5,223,1)

"DATA",364.5,223,3,0)
^^4^4^2991115^^^^
"DATA",364.5,223,3,1,0)
This data element will be the second digit in the 3 digit code required for
"DATA",364.5,223,3,2,0)
form locator 4 on the UB-04 bill form for bill entry IBXIEN.
"DATA",364.5,223,3,3,0)
This was expanded from the original field (BILL CLASSIFICATION - #.05) to
"DATA",364.5,223,3,4,0)
enable a broader range of bill types to be generated.
"DATA",364.5,246,0)
N-UB-04 FORM LOCATOR 64B^N^F^I^399^FORM LOCATOR 64B^^
"DATA",364.5,246,1)

"DATA",364.5,246,3,0)
^^2^2^3070119^
"DATA",364.5,246,3,1,0)
This returns the value for UB-04 FORM LOCATOR 64B in IBXDATA for bill
"DATA",364.5,246,3,2,0)
entry IBXIEN.
"DATA",364.5,247,0)
N-UB-04 FORM LOCATOR 64C^N^F^I^399^FORM LOCATOR 64C^^
"DATA",364.5,247,1)

"DATA",364.5,247,3,0)
^^2^2^3070119^
"DATA",364.5,247,3,1,0)
This returns the value for UB-04 FORM LOCATOR 64C in IBXDATA for bill
"DATA",364.5,247,3,2,0)
entry IBXIEN.
"DATA",364.5,253,0)
N-DIAGNOSIS E-CODE^N^E^I^399^^^
"DATA",364.5,253,1)
S IBXDATA=$G(IBXSAVE("DX-E")) I '$D(IBXSAVE("DX-E")) N IBZ,Z,Z0,Z1 D F^IBCEF("N-DIAGNOSES","IBZ",,IBXIEN) S Z=0 F  S Z=$O(IBZ(Z)) Q:'Z  S Z0=$$ECODE^IBCEU4(+IBZ(Z),.Z1) I Z0,$G(Z1)'="" S (IBXSAVE("DX-E"),IBXDATA)=Z1 Q
"DATA",364.5,253,3,0)
^364.53^2^2^3070523^^^^
"DATA",364.5,253,3,1,0)
This data element finds the first 'E' code diagnosis for bill IBXIEN, if
"DATA",364.5,253,3,2,0)
any.  An 'E' code is a diagnosis that starts with the letter 'E'.
"DATA",364.6,111,0)
8^N^^105^1^^0^10^23^OTHER INSURED FORM LOCATOR 64^^1
"DATA",364.6,1550,0)
3^N^^1^1^^1^.9^^UB-04 PRE-FORM HOUSEKEEPING^1
"DATA",364.6,1551,0)
3^N^^1^1^^1^35^35^PRINT STAT (UB-04 TOP LINE)
"DATA",364.6,1552,0)
3^N^^1^2^^1^2^24^BILLING PROVIDER NAME (FL-1/1)
"DATA",364.6,1553,0)
3^N^^1^3^^1^1^25^BILLING PROVIDER ADDR (FL-1/2)
"DATA",364.6,1554,0)
3^N^^1^4^^1^1^12^BILL PROVIDER CITY (FL-1/3/1)
"DATA",364.6,1555,0)
3^N^^1^4^^1^14^2^BILL PROVIDER STATE (FL-1/3/2)
"DATA",364.6,1556,0)
3^N^^1^4^^1^17^9^BILL PROVIDER ZIP (FL-1/3/3)
"DATA",364.6,1557,0)
3^N^^1^5^^1^1^10^BILL PROVIDER PHONE (FL-1/4/1)
"DATA",364.6,1558,0)
3^N^^1^5^^1^13^10^BILL PROVIDER FAX (FL-1/4/2)
"DATA",364.6,1559,0)
3^N^^1^5^^1^24^2^BILL PROV COUNTRY (FL-1/4/3)
"DATA",364.6,1560,0)
3^N^^1^2^^1^27^24^PAY-TO FACILITY NAME (FL-2/1)
"DATA",364.6,1561,0)
3^N^^1^3^^1^26^25^AGENT CASHIER ADDRESS (FL-2/2)
"DATA",364.6,1562,0)
3^N^^1^4^^1^26^16^AGENT CASHIER CITY (FL-2/3/1)
"DATA",364.6,1563,0)
3^N^^1^4^^1^43^2^AGENT CASHIER STATE (FL-2/3/2)
"DATA",364.6,1564,0)
3^N^^1^4^^1^46^5^AGENT CASHIER ZIP (FL-2/3/3)
"DATA",364.6,1565,0)
3^N^^1^58^^1^1^7^PRIN PROCEDURE CODE (FL-74/1)
"DATA",364.6,1566,0)
3^N^^1^5^^1^26^25^NOT USED (FL-2/4)
"DATA",364.6,1567,0)
3^N^^1^2^^1^54^20^PATIENT CONTROL NUMBER (FL-3A)
"DATA",364.6,1568,0)
3^N^^1^3^^1^54^24^MEDICAL RECORD NUMBER (FL-3B)
"DATA",364.6,1569,0)
3^N^^1^3^^1^78^4^TYPE OF BILL (FL-4)
"DATA",364.6,1570,0)
3^N^^1^4^^1^57^4^UPPER FORM LOCATOR 5
"DATA",364.6,1571,0)
3^N^^1^5^^1^51^10^FED TAX ID # (FL-5/2)
"DATA",364.6,1572,0)
3^N^^1^5^^1^62^6^STATEMENT FROM DATE (FL-6A)
"DATA",364.6,1573,0)
3^N^^1^5^^1^69^6^STATEMENT THRU DATE (FL-6B)
"DATA",364.6,1574,0)
3^N^^1^4^^1^76^7^NOT USED (FL-7/1)
"DATA",364.6,1575,0)
3^N^^1^5^^1^75^8^NOT USED (FL-7/2)
"DATA",364.6,1576,0)
3^N^^1^6^^1^12^19^PATIENT ID (FL-8A)^0
"DATA",364.6,1577,0)
3^N^^1^7^^1^2^29^PATIENT NAME (FL-8B)^0
"DATA",364.6,1578,0)
3^N^^1^6^^1^42^40^PATIENT ADDR. - STREET (FL-9A)^0
"DATA",364.6,1579,0)
3^N^^1^7^^1^32^30^PATIENT ADDR. - CITY (FL-9B)^0
"DATA",364.6,1580,0)
3^N^^1^7^^1^65^2^PATIENT ADDR. - STATE (FL-9C)^0
"DATA",364.6,1581,0)
3^N^^1^7^^1^69^10^PATIENT ADDR. - ZIP (FL-9D)^0
"DATA",364.6,1582,0)
3^N^^1^11^^1^1^3^OCCURRENCE CODE (FL-31/1)
"DATA",364.6,1583,0)
3^N^^1^11^^1^5^6^OCCURRENCE DATE (FL-31/2)
"DATA",364.6,1584,0)
3^N^^1^11^^1^11^3^OCCURRENCE CODE (FL-32/1)
"DATA",364.6,1585,0)
3^N^^1^11^^1^15^6^OCCURRENCE DATE (FL-32/2)
"DATA",364.6,1586,0)
3^N^^1^11^^1^21^3^OCCURRENCE CODE (FL-33/1)
"DATA",364.6,1587,0)
3^N^^1^11^^1^25^6^OCCURRENCE DATE (FL-33/2)
"DATA",364.6,1588,0)
3^N^^1^11^^1^31^3^OCCURRENCE CODE (FL-34/1)
"DATA",364.6,1589,0)
3^N^^1^11^^1^35^6^OCCURRENCE DATE (FL-34/2)
"DATA",364.6,1590,0)
3^N^^1^11^^1^41^3^OCCURRENCE SPAN CODE (FL-35/1)
"DATA",364.6,1591,0)
3^N^^1^11^^1^45^6^OCC SPAN DATE FROM (FL-35/2)
"DATA",364.6,1592,0)
3^N^^1^11^^1^52^6^OCC SPAN DATE TO (FL-35/3)
"DATA",364.6,1593,0)
3^N^^1^7^^1^80^3^PATIENT ADDR. - CNTRY (FL-9E)^0
"DATA",364.6,1594,0)
3^N^^1^11^^1^58^3^OCCURRENCE SPAN CODE (FL-36/1)
"DATA",364.6,1595,0)
3^N^^1^11^^1^62^6^OCC SPAN DATE FROM (FL-36/2)
"DATA",364.6,1596,0)
3^N^^1^11^^1^69^6^OCC SPAN DATE TO (FL-36/3)
"DATA",364.6,1597,0)
3^N^^1^55^^1^1^1^ICD VERSION INDICATOR (FL-66)
"DATA",364.6,1598,0)
3^N^^1^54^^1^2^7^PRIN DIAG CODE (FL-67/1/1)
"DATA",364.6,1599,0)
3^N^^1^65^^1^1^^CHECK FOR MULTIPLE PAGES^1
"DATA",364.6,1600,0)
3^N^^1^11^^1^75^8^NOT USED (FL-37/1)
"DATA",364.6,1601,0)
3^N^^1^12^^1^75^8^NOT USED (FL-37/2)
"DATA",364.6,1602,0)
3^N^^1^55^^1^10^7^OTHER DIAG CODE 10(FL-67J/1/1)
"DATA",364.6,1603,0)
3^N^^1^9^^1^1^8^PATIENT DOB (FL-10)^0
"DATA",364.6,1604,0)
3^N^^1^9^^1^10^1^PATIENT SEX (FL-11)^0
"DATA",364.6,1605,0)
3^N^^1^9^^1^13^6^ADMISSION DATE (FL-12)^0
"DATA",364.6,1606,0)
3^N^^1^9^^1^19^2^ADMISSION HR (FL-13)^0
"DATA",364.6,1607,0)
3^N^^1^9^^1^22^1^ADMISSION TYPE (FL-14)
"DATA",364.6,1608,0)
3^N^^1^9^^1^25^1^ADMISSION SOURCE (FL-15)^0
"DATA",364.6,1609,0)
3^N^^1^9^^1^28^2^DISCHARGE HR (FL-16)^0
"DATA",364.6,1610,0)
3^N^^1^9^^1^31^3^PATIENT STATUS (FL-17)
"DATA",364.6,1611,0)
3^N^^1^13^^1^.5^^CURRENT PAYER NAME EXTRACT^1
"DATA",364.6,1612,0)
3^N^^1^13^^1^.7^^CURRENT PAYER ADDRESS EXTRACT^1
"DATA",364.6,1613,0)
3^N^^1^13^5^1^1^42^CURR PAYER NAME/ADDR (FL-38)
"DATA",364.6,1614,0)
3^N^^1^55^^1^18^7^OTHER DIAG CODE 11(FL-67K/1/1)
"DATA",364.6,1615,0)
3^N^^1^55^^1^26^7^OTHER DIAG CODE 12(FL-67L/1/1)
"DATA",364.6,1616,0)
3^N^^1^14^^1^40^^VALUE CODE EXTRACT (FL-39:41)^1
"DATA",364.6,1617,0)
3^N^^1^14^^1^41^^VALUE CODE SORT (FL-39:41)^1
"DATA",364.6,1618,0)
3^N^^1^14^^1^42^^VALUE CODE REBUILD (FL-39:41)^1
"DATA",364.6,1619,0)
3^N^^1^14^^1^44^3^VALUE CODES CD 1 (FL-39a:d/1)
"DATA",364.6,1620,0)
3^N^^1^14^^1^47^10^VALUE CODES AMT 1 (FL-39a:d/2)
"DATA",364.6,1621,0)
3^N^^1^14^^1^57^3^VALUE CODES CD 2 (FL-40a:d/1)
"DATA",364.6,1622,0)
3^N^^1^14^^1^60^10^VALUE CODES AMT 2 (FL-40a:d/2)
"DATA",364.6,1623,0)
3^N^^1^14^^1^70^3^VALUE CODES CD 3 (FL-41a:d/1)
"DATA",364.6,1624,0)
3^N^^1^14^^1^73^10^VALUE CODES AMT 3 (FL-41a:d/2)
"DATA",364.6,1625,0)
3^N^^1^9^^1^34^3^CONDITION CODE 1 (FL-18)^0
"DATA",364.6,1626,0)
3^N^^1^9^^1^33.8^^EXTRACT CONDITION CODES^1
"DATA",364.6,1627,0)
3^N^^1^9^^1^37^3^CONDITION CODE 2 (FL-19)^0
"DATA",364.6,1628,0)
3^N^^1^9^^1^40^3^CONDITION CODE 3 (FL-20)^0
"DATA",364.6,1629,0)
3^N^^1^9^^1^43^3^CONDITION CODE 4 (FL-21)^0
"DATA",364.6,1630,0)
3^N^^1^9^^1^46^3^CONDITION CODE 5 (FL-22)^0
"DATA",364.6,1631,0)
3^N^^1^9^^1^49^3^CONDITION CODE 6 (FL-23)^0
"DATA",364.6,1632,0)
3^N^^1^9^^1^52^3^CONDITION CODE 7 (FL-24)^0
"DATA",364.6,1633,0)
3^N^^1^9^^1^55^3^CONDITION CODE 8 (FL-25)^0
"DATA",364.6,1634,0)
3^N^^1^9^^1^58^3^CONDITION CODE 9 (FL-26)^0
"DATA",364.6,1635,0)
3^N^^1^9^^1^61^3^CONDITION CODE 10 (FL-27)^0
"DATA",364.6,1636,0)
3^N^^1^9^^1^64^3^CONDITION CODE 11 (FL-28)^0
"DATA",364.6,1637,0)
3^N^^1^9^^1^67^3^ACCIDENT STATE (FL-29)^0
"DATA",364.6,1638,0)
3^N^^1^9^^1^70^13^RESERVED (FL-30/2)^0
"DATA",364.6,1639,0)
3^N^^1^42^^1^68^15^BILLING PROVIDER NPI (FL-56)^0
"DATA",364.6,1640,0)
3^N^^1^43^^1^1^23^PAYER NAME (FL-50A:C)^0
"DATA",364.6,1641,0)
3^N^^1^43^^1^24^15^HEALTH PLAN ID (FL-51A:C)^0
"DATA",364.6,1642,0)
3^N^^1^43^^1^39^2^RELEASE OF INFO (FL-52A:C)^0
"DATA",364.6,1643,0)
3^N^^1^43^^1^42^2^ASSIGN OF BENEFITS (FL-53A:C)^0
"DATA",364.6,1644,0)
3^N^^1^43^^1^44^10^PRIOR PAYMENTS (FL-54A:C)^0
"DATA",364.6,1645,0)
3^N^^1^43^^1^54^11^EST AMOUNT DUE (FL-55A:C)^0
"DATA",364.6,1646,0)
3^N^^1^54^^1^10^7^OTHER DIAG CODE 1 (FL-67A/1/1)
"DATA",364.6,1647,0)
3^N^^1^54^^1^18^7^OTHER DIAG CODE 2 (FL-67B/1/1)
"DATA",364.6,1648,0)
3^N^^1^54^^1^26^7^OTHER DIAG CODE 3 (FL-67C/1/1)
"DATA",364.6,1649,0)
3^N^^1^54^^1^34^7^OTHER DIAG CODE 4 (FL-67D/1/1)
"DATA",364.6,1650,0)
3^N^^1^54^^1^42^7^OTHER DIAG CODE 5 (FL-67E/1/1)
"DATA",364.6,1651,0)
3^N^^1^54^^1^50^7^OTHER DIAG CODE 6 (FL-67F/1/1)
"DATA",364.6,1652,0)
3^N^^1^54^^1^58^7^OTHER DIAG CODE 7 (FL-67G/1/1)
"DATA",364.6,1653,0)
3^N^^1^54^^1^66^7^OTHER DIAG CODE 8 (FL-67H/1/1)
"DATA",364.6,1654,0)
3^N^^1^55^^1^2^7^OTHER DIAG CODE 9 (FL-67I/1/1)
"DATA",364.6,1655,0)
3^N^^1^55^^1^34^7^OTHER DIAG CODE 13(FL-67M/1/1)
"DATA",364.6,1656,0)
3^N^^1^55^^1^42^7^OTHER DIAG CODE 14(FL-67N/1/1)
"DATA",364.6,1657,0)
3^N^^1^55^^1^50^7^OTHER DIAG CODE 15(FL-67O/1/1)
"DATA",364.6,1658,0)
3^N^^1^55^^1^58^7^OTHER DIAG CODE 16(FL-67P/1/1)
"DATA",364.6,1659,0)
3^N^^1^55^^1^66^7^OTHER DIAG CODE 17(FL-67Q/1/1)
"DATA",364.6,1660,0)
3^N^^1^43^^1^68^15^OTHER PRV ID (FL-57A:C)^0
"DATA",364.6,1661,0)
3^N^^1^47^^1^1^26^INSUREDS NAME (FL-58A:C)^0
"DATA",364.6,1662,0)
3^N^^1^47^^1^27^3^PATIENT RELATION (FL-59A:C)
"DATA",364.6,1663,0)
3^N^^1^47^^1^30^20^INSUREDS UNIQUE ID (FL-60A:C)^0
"DATA",364.6,1664,0)
3^N^^1^47^^1^50^15^GROUP NAME (FL-61A:C)^0
"DATA",364.6,1665,0)
3^N^^1^47^^1^65^18^INSURANCE GROUP NO (FL-62A:C)^0
"DATA",364.6,1666,0)
3^N^^1^51^^1^1^31^TREATMNT AUTH CODES (FL-63A:C)^0
"DATA",364.6,1667,0)
3^N^^1^51^^1^32^26^DOCUMENT CNTRL NUM (FL-64A:C)^0
"DATA",364.6,1668,0)
3^N^^1^51^^1^58^25^EMPLOYER NAME (FL-65A:C)^0
"DATA",364.6,1669,0)
3^N^^1^8^^1^72^11^NOT USED (FL-30/1)
"DATA",364.6,1670,0)
3^N^^1^56^^1^5^7^ADM DIAG CODE (FL-69)
"DATA",364.6,1671,0)
3^N^^1^56^^1^49^7^ECI (FL-72A/1/1)
"DATA",364.6,1672,0)
3^N^^1^58^^1^10^6^PRIN PROCEDURE DATE (FL-74/2)
"DATA",364.6,1673,0)
3^N^^1^58^^1^16^7^OTHER PROC CODE 1 (FL-74A/1)
"DATA",364.6,1674,0)
3^N^^1^58^^1^25^6^OTHER PROC DATE 1 (FL-74A/1)
"DATA",364.6,1675,0)
3^N^^1^58^^1^31^7^OTHER PROC CODE 2 (FL-74B/1)
"DATA",364.6,1676,0)
3^N^^1^58^^1^40^6^OTHER PROC DATE 2 (FL-74B/2)
"DATA",364.6,1677,0)
3^N^^1^60^^1^1^7^OTHER PROC CODE 3 (FL-74C/1)
"DATA",364.6,1678,0)
3^N^^1^60^^1^10^6^OTHER PROC DATE 3 (FL-74C/2)
"DATA",364.6,1679,0)
3^N^^1^60^^1^16^7^OTHER PROC CODE 4 (FL-74D/1)
"DATA",364.6,1680,0)
3^N^^1^60^^1^25^6^OTHER PROC DATE 4 (FL-74D/2)
"DATA",364.6,1681,0)
3^N^^1^60^^1^31^7^OTHER PROC CODE 5 (FL-74E/1)
"DATA",364.6,1682,0)
3^N^^1^60^^1^40^6^OTHER PROC DATE 5 (FL-74E/2)
"DATA",364.6,1683,0)
3^N^^1^54^^1^9^1^PRIN DIAG POA (FL-67/1/2)
"DATA",364.6,1684,0)
3^N^^1^54^^1^17^1^OTHER DIAG 1 POA (FL-67A/1/2)
"DATA",364.6,1685,0)
3^N^^1^54^^1^25^1^OTHER DIAG 2 POA (FL-67B/1/2)
"DATA",364.6,1686,0)
3^N^^1^54^^1^33^1^OTHER DIAG 3 POA (FL-67C/1/2)
"DATA",364.6,1687,0)
3^N^^1^54^^1^41^1^OTHER DIAG 4 POA (FL-67D/1/2)
"DATA",364.6,1688,0)
3^N^^1^54^^1^49^1^OTHER DIAG 5 POA (FL-67E/1/2)
"DATA",364.6,1689,0)
3^N^^1^54^^1^57^1^OTHER DIAG 6 POA (FL-67F/1/2)
"DATA",364.6,1690,0)
3^N^^1^54^^1^65^1^OTHER DIAG 7 POA (FL-67G/1/2)
"DATA",364.6,1691,0)
3^N^^1^54^^1^73^1^OTHER DIAG 8 POA (FL-67H/1/2)
"DATA",364.6,1692,0)
3^N^^1^55^^1^9^1^OTHER DIAG 9 POA (FL-67I/1/2)
"DATA",364.6,1693,0)
3^N^^1^55^^1^17^1^OTHER DIAG 10 POA (FL-67J/1/2)
"DATA",364.6,1694,0)
3^N^^1^55^^1^25^1^OTHER DIAG 11 POA (FL-67K/1/2)
"DATA",364.6,1695,0)
3^N^^1^55^^1^33^1^OTHER DIAG 12 POA (FL-67L/1/2)
"DATA",364.6,1696,0)
3^N^^1^55^^1^41^1^OTHER DIAG 13 POA (FL-67M/1/2)
"DATA",364.6,1697,0)
3^N^^1^55^^1^49^1^OTHER DIAG 14 POA (FL-67N/1/2)
"DATA",364.6,1698,0)
3^N^^1^55^^1^57^1^OTHER DIAG 15 POA (FL-67O/1/2)
"DATA",364.6,1699,0)
3^N^^1^55^^1^65^1^OTHER DIAG 16 POA (FL-67P/1/2)
"DATA",364.6,1700,0)
3^N^^1^55^^1^73^1^OTHER DIAG 17 POA (FL-67Q/1/2)
"DATA",364.6,1701,0)
3^N^^1^54^^1^75^8^RESERVED BY NUBC (FL-68/1)
"DATA",364.6,1702,0)
3^N^^1^55^^1^74^9^RESERVED BY NUBC (FL-68/2)
"DATA",364.6,1703,0)
3^N^^1^19^^1^.8^^PROCEDURE EXTRACT^1
"DATA",364.6,1704,0)
3^N^^1^19^^1^.9^^REV CODE EXTRACT (FL-42:49)^1
"DATA",364.6,1705,0)
3^N^^1^19^^1^1^5^REVENUE CODE (FL-42)
"DATA",364.6,1706,0)
3^N^^1^19^^1^6^25^REV CODE DESCRIPTION (FL-43)
"DATA",364.6,1707,0)
3^N^^1^56^^1^17^7^PATIENT REASON DX (FL-70/1/1)
"DATA",364.6,1708,0)
3^N^^1^56^^1^24^7^PATIENT REASON DX (FL-70/1/2)
"DATA",364.6,1709,0)
3^N^^1^56^^1^31^7^PATIENT REASON DX (FL-70/1/3)
"DATA",364.6,1710,0)
3^N^^1^56^^1^42^5^PPS CODE (FL-71)
"DATA",364.6,1711,0)
3^N^^1^56^^1^56^1^ECI POA (FL-72A/1/2)
"DATA",364.6,1712,0)
3^N^^1^56^^1^57^7^ECI (FL-72B/1/1)
"DATA",364.6,1713,0)
3^N^^1^56^^1^64^1^ECI POA (FL-72B/1/2)
"DATA",364.6,1714,0)
3^N^^1^56^^1^65^7^ECI (FL-72C/1/1)
"DATA",364.6,1715,0)
3^N^^1^56^^1^72^1^ECI POA (FL-72C/1/2)
"DATA",364.6,1716,0)
3^N^^1^56^^1^74^9^RESERVED BY NUBC (FL-73)
"DATA",364.6,1717,0)
3^N^^1^19^^1^31^15^HCPCS/RATES (FL-44)
"DATA",364.6,1718,0)
3^N^^1^19^^1^46^7^SERVICE DATE (FL-45)
"DATA",364.6,1719,0)
3^N^^1^57^^1^46^4^RESERVED BY NUBC (FL-75/1)
"DATA",364.6,1720,0)
3^N^^1^58^^1^46^4^RESERVED BY NUBC (FL-75/2)
"DATA",364.6,1721,0)
3^N^^1^59^^1^46^4^RESERVED BY NUBC (FL-75/3)
"DATA",364.6,1722,0)
3^N^^1^60^^1^46^4^RESERVED BY NUBC (FL-75/4)
"DATA",364.6,1723,0)
3^N^^1^61^4^1^1^24^REMARKS (FL-80)
"DATA",364.6,1727,0)
3^N^^1^61^^1^27^2^CODE CODE LEFT (FL-81/1/1)
"DATA",364.6,1728,0)
3^N^^1^61^^1^29^10^CODE CODE MIDDLE (FL-81/1/2)
"DATA",364.6,1729,0)
3^N^^1^61^^1^39^12^CODE CODE RIGHT (FL-81/1/3)
"DATA",364.6,1730,0)
3^N^^1^58^^1^53^16^ATTENDING NAME (FL-76/2/1)
"DATA",364.6,1731,0)
3^N^^1^58^^1^71^12^ATTENDING NAME (FL-76/2/2)
"DATA",364.6,1732,0)
3^N^^1^60^^1^53^16^OPERATING NAME (FL-77/2/1)
"DATA",364.6,1733,0)
3^N^^1^60^^1^71^12^OPERATING NAME (FL-77/2/2)
"DATA",364.6,1734,0)
3^N^^1^19^^1^53^7^SERVICE UNITS (FL-46)
"DATA",364.6,1735,0)
3^N^^1^19^^1^60^10^TOTAL CHARGES (FL-47)
"DATA",364.6,1736,0)
3^N^^1^62^^1^53^16^OTHER NAME (FL-78/2/1)
"DATA",364.6,1737,0)
3^N^^1^62^^1^71^12^OTHER NAME (FL-78/2/2)
"DATA",364.6,1738,0)
3^N^^1^64^^1^53^16^OTHER NAME (FL-79/2/1)
"DATA",364.6,1739,0)
3^N^^1^64^^1^71^12^OTHER NAME (FL-79/2/2)
"DATA",364.6,1740,0)
3^N^^1^57^^1^59^11^ATTENDING NPI (FL-76/1/1)
"DATA",364.6,1741,0)
3^N^^1^57^^1^72^2^ATTENDING ID QUAL (FL-76/1/2)
"DATA",364.6,1742,0)
3^N^^1^57^^1^74^9^ATTENDING OTHER ID (FL-76/1/3)
"DATA",364.6,1743,0)
3^N^^1^59^^1^59^11^OPERATING NPI (FL-77/1/1)
"DATA",364.6,1744,0)
3^N^^1^59^^1^72^2^OPERATING ID QUAL (FL-77/1/2)
"DATA",364.6,1745,0)
3^N^^1^59^^1^74^9^OPERATING OTHER ID (FL-77/1/3)
"DATA",364.6,1746,0)
3^N^^1^61^^1^59^11^OTHER PROVIDER NPI (FL-78/1/2)
"DATA",364.6,1747,0)
3^N^^1^61^^1^72^2^OTHER PROV ID QUAL (FL-78/1/3)
"DATA",364.6,1748,0)
3^N^^1^61^^1^74^9^OTHER PROV ID (FL-78/1/4)
"DATA",364.6,1749,0)
3^N^^1^19^^1^70^10^NON-COVERED CHARGES (FL-48)
"DATA",364.6,1750,0)
3^N^^1^19^^1^80^3^RESERVED (FL-49)
"DATA",364.6,1751,0)
3^N^^1^63^^1^59^11^OTHER NPI (FL-79/1/2)
"DATA",364.6,1752,0)
3^N^^1^63^^1^72^2^OTHER PROV ID QUAL (FL-79/1/3)
"DATA",364.6,1753,0)
3^N^^1^63^^1^74^9^OTHER PROV ID (FL-79/1/4)
"DATA",364.6,1754,0)
3^N^^1^63^^1^56^2^PROV TYPE QUAL (FL-79/1/1)
"DATA",364.6,1755,0)
3^N^^1^61^^1^56^2^PROV TYPE QUAL (FL-78/1/1)
"DATA",364.6,1756,0)
3^N^^1^41^^1^1^4^RESERVED (FL-41/23)^0
"DATA",364.6,1757,0)
3^N^^1^41^^1^46^6^CREATION DATE (FL-45/23)
"DATA",364.6,1758,0)
3^N^^1^11^^1^74.9^^CLEAN UP IBXSAVE OCCS^1
"DATA",364.6,1759,0)
3^N^^1^9^^1^33.9^^SORT CONDITION CODES^1
"DATA",364.7,130,0)
111^N^56^^^^N
"DATA",364.7,130,1)
N Z,Z1,IBZ M IBZ=IBXDATA K IBXDATA F Z=1,2 I $D(^DGCR(399,IBXIEN,"I"_(Z+1))),$G(IBZ(Z))'="" S IBXDATA(Z)=IBZ(Z)
"DATA",364.7,130,3,0)
^^3^3^3070123^
"DATA",364.7,130,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,130,3,2,0)
possible for the data element in the IBXDATA array.  If any other insurance
"DATA",364.7,130,3,3,0)
form locator 64 data is found, the data is output.
"DATA",364.7,787,0)
774^N^5^^^^N
"DATA",364.7,787,1)
D CKPGUB^IBCEF3
"DATA",364.7,787,3,0)
^^1^1^2991118^^^
"DATA",364.7,787,3,1,0)
Checks for multi-page output, adds the static fields to subsequent pages.
"DATA",364.7,1250,0)
1550^N^5^^^^N
"DATA",364.7,1250,1)
K ^UTILITY("VADM",$J),^UTILITY("VAPA",$J),^TMP("IBXSAVE",$J),IBXSAVE
"DATA",364.7,1250,3,0)
^364.73^1^1^3061103^^^^
"DATA",364.7,1250,3,1,0)
Kills off globals,other variables to be used, sets right margin variable.
"DATA",364.7,1251,0)
1551^N^142^^^^N
"DATA",364.7,1252,0)
1552^N^5^^^^N
"DATA",364.7,1252,1)
S IBXDATA=$$GETFAC^IBCEP8(+$$SITE^VASITE,0,0)
"DATA",364.7,1252,3,0)
^^1^1^3061106^
"DATA",364.7,1252,3,1,0)
Facility name from file 4.
"DATA",364.7,1253,0)
1553^N^5^^^^N
"DATA",364.7,1253,1)
S IBXDATA=$$GETFAC^IBCEP8(+$$SITE^VASITE,0,12)
"DATA",364.7,1253,3,0)
^^2^2^3061106^
"DATA",364.7,1253,3,1,0)
Retrieve the billing provider address from the Institution file 
"DATA",364.7,1253,3,2,0)
(file#4).  Grab both address line 1 and address line 2.
"DATA",364.7,1254,0)
1554^N^5^^^^N
"DATA",364.7,1254,1)
S IBXDATA=$$GETFAC^IBCEP8(+$$SITE^VASITE,0,"3C")
"DATA",364.7,1254,3,0)
^364.73^1^1^3061120^^
"DATA",364.7,1254,3,1,0)
Get the billing provider city from file 4.
"DATA",364.7,1255,0)
1555^N^5^^^^N
"DATA",364.7,1255,1)
S IBXDATA=$$GETFAC^IBCEP8(+$$SITE^VASITE,0,"3S")
"DATA",364.7,1255,3,0)
^364.73^1^1^3061120^^
"DATA",364.7,1255,3,1,0)
Get the billing provider state from file 4.
"DATA",364.7,1256,0)
1556^N^5^^^^N
"DATA",364.7,1256,1)
S IBXDATA=$TR($$GETFAC^IBCEP8(+$$SITE^VASITE,0,"3Z"),"-")
"DATA",364.7,1256,3,0)
^^2^2^3061120^
"DATA",364.7,1256,3,1,0)
Get the billing provider zip code from file 4.  Form Locator 1
"DATA",364.7,1256,3,2,0)
accommodates a 9-digit zip code so strip out the hyphen.
"DATA",364.7,1257,0)
1557^N^255^^^^N
"DATA",364.7,1257,1)
D:IBXDATA="" F^IBCEF("N-AGENT CASHIER PHONE","","",IBXIEN) S IBXDATA=$$NOPUNCT^IBCEF(IBXDATA,1)
"DATA",364.7,1257,3,0)
^364.73^2^2^3061103^^^^
"DATA",364.7,1257,3,1,0)
Print the site contact phone or if no site contact phone #, use agent
"DATA",364.7,1257,3,2,0)
cashier's phone #.
"DATA",364.7,1258,0)
1558^N^5^^^^N
"DATA",364.7,1259,0)
1559^N^5^^^^N
"DATA",364.7,1260,0)
1560^N^296^^^^N
"DATA",364.7,1260,3,0)
^^2^2^3061106^
"DATA",364.7,1260,3,1,0)
Pay-to facility name is retrieved from the IB site parameter field 2.1 - 
"DATA",364.7,1260,3,2,0)
facility name for billing.
"DATA",364.7,1261,0)
1561^N^104^^^^N
"DATA",364.7,1261,1)
N IBZ D F^IBCEF("N-AGENT CASHIER MAIL SYMBOL","IBZ",,IBXIEN) I $G(IBZ)'="" S IBXDATA=IBXDATA_" "_IBZ
"DATA",364.7,1261,3,0)
^364.73^2^2^3061106^^^
"DATA",364.7,1261,3,1,0)
Concatenate Agent Cashier Mail Symbol to the end of Agent Cashier Street 
"DATA",364.7,1261,3,2,0)
Address.
"DATA",364.7,1262,0)
1562^N^105^^^^N
"DATA",364.7,1263,0)
1563^N^106^^^^N
"DATA",364.7,1263,1)
I IBXDATA'="" S IBXDATA=$$STATE^IBCEFG1(IBXDATA)
"DATA",364.7,1264,0)
1564^N^107^^^^N
"DATA",364.7,1264,1)
I IBXDATA'="" S IBXDATA=$E(IBXDATA,1,5)
"DATA",364.7,1264,3,0)
^^2^2^3061106^
"DATA",364.7,1264,3,1,0)
Pay-to facility address zip code field only allows for 5 character zip 
"DATA",364.7,1264,3,2,0)
codes.
"DATA",364.7,1265,0)
1565^N^5^^^^N
"DATA",364.7,1265,1)
K IBXDATA I $D(IBXSAVE("PROC",1)) S IBXDATA=$P(IBXSAVE("PROC",1),U),IBXDATA=$S(IBXDATA["ICPT"!(IBXDATA["ICD0"):$P($$PRCD^IBCEF1(IBXDATA),U),1:IBXDATA)
"DATA",364.7,1265,3,0)
^364.73^3^3^3061120^^^^
"DATA",364.7,1265,3,1,0)
This data element relies on the existence of the IBXSAVE("PROC") array
"DATA",364.7,1265,3,2,0)
previously extracted.  If the first occurrence exists, output the code
"DATA",364.7,1265,3,3,0)
referenced by its first '^' piece.
"DATA",364.7,1266,0)
1566^N^5^^^^N
"DATA",364.7,1266,1)
K IBXDATA
"DATA",364.7,1266,3,0)
^364.73^1^1^3061120^^
"DATA",364.7,1266,3,1,0)
NOT USED.  Reserved for Assignment by the NUBC.
"DATA",364.7,1267,0)
1567^N^210^^^^N
"DATA",364.7,1268,0)
1568^N^10^^^^N
"DATA",364.7,1268,1)
S IBXDATA=$$NOPUNCT^IBCEF(IBXDATA,1)
"DATA",364.7,1269,0)
1569^N^5^^^^N
"DATA",364.7,1269,1)
K IBXDATA S IBXDATA=0_$$TOB^IBCEF1(IBXIEN)
"DATA",364.7,1269,3,0)
^^2^2^3061106^
"DATA",364.7,1269,3,1,0)
Type of bill is 4 characters long with the first digit being a leading 
"DATA",364.7,1269,3,2,0)
zero.
"DATA",364.7,1270,0)
1570^N^230^^^^ZL
"DATA",364.7,1270,1)
S IBXDATA=$E($P(IBXDATA,U,3),4,7) I $TR(IBXDATA,0)="" K IBXDATA
"DATA",364.7,1270,3,0)
^364.73^2^2^3061106^^^^
"DATA",364.7,1270,3,1,0)
Always 0-fill data to the left.  If primary site, don't output.  If not
"DATA",364.7,1270,3,2,0)
primary site, this is the site suffix (up to 4 digits)
"DATA",364.7,1271,0)
1571^N^109^^^^N
"DATA",364.7,1272,0)
1572^N^71^^^^N
"DATA",364.7,1272,1)
S IBXDATA=$$DATE^IBCF2(IBXDATA,,1)
"DATA",364.7,1272,3,0)
^364.73^1^1^3061106^^^^
"DATA",364.7,1272,3,1,0)
Format date in MMDDYY format.
"DATA",364.7,1273,0)
1573^N^133^^^^N
"DATA",364.7,1273,1)
S IBXDATA=$$DATE^IBCF2(IBXDATA,,1)
"DATA",364.7,1273,3,0)
^364.73^1^1^3061106^^^^
"DATA",364.7,1273,3,1,0)
Format date in MMDDYY format.
"DATA",364.7,1274,0)
1574^N^5^^^^N
"DATA",364.7,1274,1)
K IBXDATA
"DATA",364.7,1274,3,0)
^^1^1^3061106^
"DATA",364.7,1274,3,1,0)
Reserved for Assignment by the NUBC.
"DATA",364.7,1275,0)
1575^N^5^^^^N
"DATA",364.7,1275,1)
K IBXDATA
"DATA",364.7,1275,3,0)
^^1^1^3061106^
"DATA",364.7,1275,3,1,0)
Reserved for Assignment by the NUBC.
"DATA",364.7,1276,0)
1576^N^5^^^^N
"DATA",364.7,1276,1)
K IBXDATA
"DATA",364.7,1276,3,0)
^^5^5^3070215^
"DATA",364.7,1276,3,1,0)
This is the patient identification number as assigned by the current 
"DATA",364.7,1276,3,2,0)
payer for this patient.
"DATA",364.7,1276,3,3,0)
 
"DATA",364.7,1276,3,4,0)
As of the release of IB patch 349 (April 2007), there is no corresponding 
"DATA",364.7,1276,3,5,0)
field in the VistA patient insurance file (2.312) for this data.
"DATA",364.7,1277,0)
1577^N^65^^^^N
"DATA",364.7,1278,0)
1578^N^157^^^^N
"DATA",364.7,1278,1)
S IBXDATA=$G(^UTILITY("VAPA",$J,1))_" "_$G(^UTILITY("VAPA",$J,2))_" "_$G(^UTILITY("VAPA",$J,3))
"DATA",364.7,1278,3,0)
^^1^1^3061107^
"DATA",364.7,1278,3,1,0)
Patient address - street address
"DATA",364.7,1279,0)
1579^N^61^^^^N
"DATA",364.7,1279,3,0)
^^1^1^3061107^
"DATA",364.7,1279,3,1,0)
Patient address - city
"DATA",364.7,1280,0)
1580^N^62^^^^N
"DATA",364.7,1280,1)
S IBXDATA=$$GET1^DIQ(5,$S(+$$PTADDR^IBCEF(IBXIEN,25)>1:+$$PTADDR^IBCEF(IBXIEN,23),1:+IBXDATA),1)
"DATA",364.7,1280,3,0)
^^1^1^3061107^
"DATA",364.7,1280,3,1,0)
Patient address - state/province (2-char code)
"DATA",364.7,1281,0)
1581^N^63^^^^N
"DATA",364.7,1281,1)
S:+$$PTADDR^IBCEF(IBXIEN,25)>1 IBXDATA=$$PTADDR^IBCEF(IBXIEN,24)
"DATA",364.7,1281,3,0)
^^1^1^3061107^
"DATA",364.7,1281,3,1,0)
Patient address - zip code/postal code
"DATA",364.7,1282,0)
1582^N^190^^^^N
"DATA",364.7,1282,1)
N Z,Z0 K IBXDATA S Z0=0 F Z=1,5 S Z0=Z0+1 S:$G(IBXSAVE("OCC",Z))'="" IBXDATA(Z0)=$P(IBXSAVE("OCC",Z),U)
"DATA",364.7,1282,3,0)
^364.73^3^3^3061108^^^^
"DATA",364.7,1282,3,1,0)
The data element extracts multiply-occurring data for the occurrence codes
"DATA",364.7,1282,3,2,0)
and occurrence span codes and outputs the first occurrence code here.
"DATA",364.7,1282,3,3,0)
Overflow codes are printed on a separate page.
"DATA",364.7,1283,0)
1583^N^5^^^^N
"DATA",364.7,1283,1)
N Z,Z0,Z1 K IBXDATA S Z0=0 F Z=1:4 Q:$G(IBXSAVE("OCC",Z))=""  S Z0=Z0+1,Z1=$$DATE^IBCF2($P(IBXSAVE("OCC",Z),U,2),,1) S:Z'>5 IBXDATA(Z0)=Z1 D:Z>5 XOCC^IBCEF3($P(IBXSAVE("OCC",Z),U)_U_Z1,Z0,31) K IBXSAVE("OCC",Z)
"DATA",364.7,1283,3,0)
^364.73^6^6^3061108^^^^
"DATA",364.7,1283,3,1,0)
This data element is a group data element where more than one occurrence
"DATA",364.7,1283,3,2,0)
might be expected.  It relies on the presence of data in array
"DATA",364.7,1283,3,3,0)
IBXSAVE("OCC") extracted previously.  This field outputs the 1st and 5th
"DATA",364.7,1283,3,4,0)
occurrences of occurrence code 'from date' formatted as MMDDYY found in the
"DATA",364.7,1283,3,5,0)
second '^' piece of the IBXSAVE("OCC",n) array data element.
"DATA",364.7,1283,3,6,0)
Overflow codes (9,13,...) are printed on a separate page.
"DATA",364.7,1284,0)
1584^N^5^^^^N
"DATA",364.7,1284,1)
N Z,Z0 K IBXDATA S Z0=0 F Z=2,6 S Z0=Z0+1 S:$G(IBXSAVE("OCC",Z))'="" IBXDATA(Z0)=$P(IBXSAVE("OCC",Z),U)
"DATA",364.7,1284,3,0)
^364.73^5^5^3061108^^^^
"DATA",364.7,1284,3,1,0)
This data element is a group data element where more than one occurrence
"DATA",364.7,1284,3,2,0)
might be expected.  It relies on the presence of data in array
"DATA",364.7,1284,3,3,0)
IBXSAVE("OCC") extracted previously.  This field outputs the 2nd and 6th
"DATA",364.7,1284,3,4,0)
occurrences of occurrence codes found in the IBXSAVE("OCC",n) array data
"DATA",364.7,1284,3,5,0)
element.  Overflow codes are printed on a separate page.
"DATA",364.7,1285,0)
1585^N^5^^^^N
"DATA",364.7,1285,1)
N Z,Z0,Z1 K IBXDATA S Z0=0 F Z=2:4 Q:$G(IBXSAVE("OCC",Z))=""  S Z0=Z0+1,Z1=$$DATE^IBCF2($P(IBXSAVE("OCC",Z),U,2),,1) S:Z'>6 IBXDATA(Z0)=Z1 D:Z>6 XOCC^IBCEF3($P(IBXSAVE("OCC",Z),U)_U_Z1,Z0,32) K IBXSAVE("OCC",Z)
"DATA",364.7,1285,3,0)
^364.73^6^6^3061108^^^^
"DATA",364.7,1285,3,1,0)
This data element is a group data element where more than one occurrence
"DATA",364.7,1285,3,2,0)
might be expected.  It relies on the presence of data in array
"DATA",364.7,1285,3,3,0)
IBXSAVE("OCC") extracted previously.  This field outputs the 2nd and 6th
"DATA",364.7,1285,3,4,0)
occurrences of occurrence code 'from date' formatted as MMDDYY found in the
"DATA",364.7,1285,3,5,0)
second '^' piece of the IBXSAVE("OCC",n) array data element.
"DATA",364.7,1285,3,6,0)
Overflow codes (10,14,...) are printed on a separate page.
"DATA",364.7,1286,0)
1586^N^5^^^^N
"DATA",364.7,1286,1)
N Z,Z0 K IBXDATA S Z0=0 F Z=3,7 S Z0=Z0+1 S:$G(IBXSAVE("OCC",Z))'="" IBXDATA(Z0)=$P(IBXSAVE("OCC",Z),U)
"DATA",364.7,1286,3,0)
^364.73^5^5^3061108^^^^
"DATA",364.7,1286,3,1,0)
This data element is a group data element where more than one occurrence
"DATA",364.7,1286,3,2,0)
might be expected.  It relies on the presence of data in array
"DATA",364.7,1286,3,3,0)
IBXSAVE("OCC") extracted previously.  This field outputs the 3rd and 7th
"DATA",364.7,1286,3,4,0)
occurrences of occurrence codes found in the IBXSAVE("OCC",n) array data
"DATA",364.7,1286,3,5,0)
element.  Overflow codes are printed on a separate page.
"DATA",364.7,1287,0)
1587^N^5^^^^N
"DATA",364.7,1287,1)
N Z,Z0,Z1 K IBXDATA S Z0=0 F Z=3:4 Q:$G(IBXSAVE("OCC",Z))=""  S Z0=Z0+1,Z1=$$DATE^IBCF2($P(IBXSAVE("OCC",Z),U,2),,1) S:Z'>7 IBXDATA(Z0)=Z1 D:Z>7 XOCC^IBCEF3($P(IBXSAVE("OCC",Z),U)_U_Z1,Z0,33) K IBXSAVE("OCC",Z)
"DATA",364.7,1287,3,0)
^364.73^6^6^3061108^^^^
"DATA",364.7,1287,3,1,0)
This data element is a group data element where more than one occurrence
"DATA",364.7,1287,3,2,0)
might be expected.  It relies on the presence of data in array
"DATA",364.7,1287,3,3,0)
IBXSAVE("OCC") extracted previously.  This field outputs the 3rd and 7th
"DATA",364.7,1287,3,4,0)
occurrences of occurrence code 'from date' formatted as MMDDYY found in the
"DATA",364.7,1287,3,5,0)
second '^' piece of the IBXSAVE("OCC",n) array data element.
"DATA",364.7,1287,3,6,0)
Any overflow codes (11,15,...) are output on a separate page.
"DATA",364.7,1288,0)
1588^N^5^^^^N
"DATA",364.7,1288,1)
N Z,Z0 K IBXDATA S Z0=0 F Z=4,8 S Z0=Z0+1 S:$G(IBXSAVE("OCC",Z))'="" IBXDATA(Z0)=$P(IBXSAVE("OCC",Z),U)
"DATA",364.7,1288,3,0)
^364.73^5^5^3061108^^^^
"DATA",364.7,1288,3,1,0)
This data element is a group data element where more than one occurrence
"DATA",364.7,1288,3,2,0)
might be expected.  It relies on the presence of data in array
"DATA",364.7,1288,3,3,0)
IBXSAVE("OCC") extracted previously.  This field outputs the 4th and 8th
"DATA",364.7,1288,3,4,0)
occurrences of occurrence codes found in the IBXSAVE("OCC",n) array data
"DATA",364.7,1288,3,5,0)
element.  Overflow codes are printed on a separate page.
"DATA",364.7,1289,0)
1589^N^5^^^^N
"DATA",364.7,1289,1)
N Z,Z0,Z1 K IBXDATA S Z0=0 F Z=4:4 Q:$G(IBXSAVE("OCC",Z))=""  S Z0=Z0+1,Z1=$$DATE^IBCF2($P(IBXSAVE("OCC",Z),U,2),,1) S:Z'>8 IBXDATA(Z0)=Z1 D:Z>8 XOCC^IBCEF3($P(IBXSAVE("OCC",Z),U)_U_Z1,Z0,34) K IBXSAVE("OCC",Z)
"DATA",364.7,1289,3,0)
^364.73^6^6^3061108^^^^
"DATA",364.7,1289,3,1,0)
This data element is a group data element where more than one occurrence
"DATA",364.7,1289,3,2,0)
might be expected.  It relies on the presence of data in array
"DATA",364.7,1289,3,3,0)
IBXSAVE("OCC") extracted previously.  This field outputs the 4th and 8th
"DATA",364.7,1289,3,4,0)
occurrences of occurrence code 'from date' formatted as MMDDYY found in the
"DATA",364.7,1289,3,5,0)
second '^' piece of the IBXSAVE("OCC",n) array data element.
"DATA",364.7,1289,3,6,0)
Any overflow codes (12,16,...) are output on a separate page.
"DATA",364.7,1290,0)
1590^N^5^^^^N
"DATA",364.7,1290,1)
N Z,Z0 K IBXDATA S Z0=0 F Z=1,3 S Z0=Z0+1 S:$G(IBXSAVE("OCCS",Z))'="" IBXDATA(Z0)=$P(IBXSAVE("OCCS",Z),U)
"DATA",364.7,1290,3,0)
^^5^5^3061108^
"DATA",364.7,1290,3,1,0)
This data element is a group data element where more than one occurrence
"DATA",364.7,1290,3,2,0)
might be expected.  It relies on the presence of data in array
"DATA",364.7,1290,3,3,0)
IBXSAVE("OCCS") extracted previously.  This field outputs the 1st and 3rd
"DATA",364.7,1290,3,4,0)
occurrences of occurrence span codes found in the IBXSAVE("OCCS",n) array
"DATA",364.7,1290,3,5,0)
data element.  Overflow codes are printed on a separate page.
"DATA",364.7,1291,0)
1591^N^5^^^^N
"DATA",364.7,1291,1)
N Z,Z0 K IBXDATA S Z0=0 F Z=1,3 S Z0=Z0+1 S:$G(IBXSAVE("OCCS",Z))'="" IBXDATA(Z0)=$$DATE^IBCF2($P(IBXSAVE("OCCS",Z),U,2),,1)
"DATA",364.7,1291,3,0)
^^5^5^3061108^
"DATA",364.7,1291,3,1,0)
This data element is a group data element where more than one occurrence
"DATA",364.7,1291,3,2,0)
might be expected.  It relies on the presence of data in array
"DATA",364.7,1291,3,3,0)
IBXSAVE("OCCS") extracted previously.  This field outputs the 1st and 3rd
"DATA",364.7,1291,3,4,0)
occurrences of occurrence span code 'from date' formatted as MMDDYY found
"DATA",364.7,1291,3,5,0)
in the second '^' piece of the IBXSAVE("OCCS",n) array data element.
"DATA",364.7,1292,0)
1592^N^5^^^^N
"DATA",364.7,1292,1)
N Z,Q,Z0 K IBXDATA S Z0=0 F Z=1:2 Q:$G(IBXSAVE("OCCS",Z))=""  S Z0=Z0+1,Q=$$DATE^IBCF2($P(IBXSAVE("OCCS",Z),U,3),,1) S:Z'>3 IBXDATA(Z0)=Q D:Z>3 XOCCS^IBCEF3($P(IBXSAVE("OCCS",Z),U)_U_$$DATE^IBCF2($P(IBXSAVE("OCCS",Z),U,2),,1)_U_Q,Z0,35)
"DATA",364.7,1292,3,0)
^364.73^5^5^3061208^^^^
"DATA",364.7,1292,3,1,0)
This data element is a group data element where more than one occurrence
"DATA",364.7,1292,3,2,0)
might be expected.  It relies on the presence of data in array
"DATA",364.7,1292,3,3,0)
IBXSAVE("OCCS") extracted previously.  This field outputs the 1st and 3rd
"DATA",364.7,1292,3,4,0)
occurrences of occurrence span code 'to date' formatted as MMDDYY found
"DATA",364.7,1292,3,5,0)
in the third '^' piece of the IBXSAVE("OCCS",n) array data element.
"DATA",364.7,1293,0)
1593^N^5^^^^N
"DATA",364.7,1293,1)
N CIEN S CIEN=+$$PTADDR^IBCEF(IBXIEN,25),IBXDATA=$S(CIEN>1:$$GET1^DIQ(779.004,CIEN,1.2),1:"")
"DATA",364.7,1293,3,0)
^^2^2^3061108^
"DATA",364.7,1293,3,1,0)
Patient address - country code.
"DATA",364.7,1293,3,2,0)
Printed if country is not USA, blank otherwise.
"DATA",364.7,1294,0)
1594^N^5^^^^N
"DATA",364.7,1294,1)
N Z,Z0 K IBXDATA S Z0=0 F Z=2,4 S Z0=Z0+1 S:$G(IBXSAVE("OCCS",Z))'="" IBXDATA(Z0)=$P(IBXSAVE("OCCS",Z),U)
"DATA",364.7,1294,3,0)
^^5^5^3061108^
"DATA",364.7,1294,3,1,0)
This data element is a group data element where more than one occurrence
"DATA",364.7,1294,3,2,0)
might be expected.  It relies on the presence of data in array
"DATA",364.7,1294,3,3,0)
IBXSAVE("OCCS") extracted previously.  This field outputs the 2nd and 4th
"DATA",364.7,1294,3,4,0)
occurrences of occurrence span codes found in the IBXSAVE("OCCS",n) array
"DATA",364.7,1294,3,5,0)
data element.  Overflow codes are printed on a separate page.
"DATA",364.7,1295,0)
1595^N^5^^^^N
"DATA",364.7,1295,1)
N Z,Z0 K IBXDATA S Z0=0 F Z=2,4 S Z0=Z0+1 S:$G(IBXSAVE("OCCS",Z))'="" IBXDATA(Z0)=$$DATE^IBCF2($P(IBXSAVE("OCCS",Z),U,2),,1)
"DATA",364.7,1295,3,0)
^^5^5^3061108^
"DATA",364.7,1295,3,1,0)
This data element is a group data element where more than one occurrence
"DATA",364.7,1295,3,2,0)
might be expected.  It relies on the presence of data in array
"DATA",364.7,1295,3,3,0)
IBXSAVE("OCCS") extracted previously.  This field outputs the 2nd and 4th
"DATA",364.7,1295,3,4,0)
occurrences of occurrence span code 'from date' formatted as MMDDYY found
"DATA",364.7,1295,3,5,0)
in the second '^' piece of the IBXSAVE("OCCS",n) array data element.
"DATA",364.7,1296,0)
1596^N^5^^^^N
"DATA",364.7,1296,1)
N Z,Q,Z0 K IBXDATA S Z0=0 F Z=2:2 Q:$G(IBXSAVE("OCCS",Z))=""  S Z0=Z0+1,Q=$$DATE^IBCF2($P(IBXSAVE("OCCS",Z),U,3),,1) S:Z'>4 IBXDATA(Z0)=Q D:Z>4 XOCCS^IBCEF3($P(IBXSAVE("OCCS",Z),U)_U_$$DATE^IBCF2($P(IBXSAVE("OCCS",Z),U,2),,1)_U_Q,Z0,36)
"DATA",364.7,1296,3,0)
^364.73^5^5^3061208^^
"DATA",364.7,1296,3,1,0)
This data element is a group data element where more than one occurrence
"DATA",364.7,1296,3,2,0)
might be expected.  It relies on the presence of data in array
"DATA",364.7,1296,3,3,0)
IBXSAVE("OCCS") extracted previously.  This field outputs the 2nd and 4th
"DATA",364.7,1296,3,4,0)
occurrences of occurrence span code 'to date' formatted as MMDDYY found
"DATA",364.7,1296,3,5,0)
in the third '^' piece of the IBXSAVE("OCCS",n) array data element.
"DATA",364.7,1297,0)
1597^N^5
"DATA",364.7,1297,1)
S IBXDATA="9"
"DATA",364.7,1297,3,0)
^364.73^1^1^3061113^^
"DATA",364.7,1297,3,1,0)
Hardcoded to 9 for ICD 9 codes
"DATA",364.7,1298,0)
1598^N^86^^^^N
"DATA",364.7,1298,1)
N C,Z,Z0,IBZ M IBZ=IBXDATA K IBXDATA S (C,Z)=0 F  S Z=$O(IBZ(Z)) Q:'Z  I '$$ECODE^IBCEU4(+IBZ(Z)) S C=C+1 S:C=1 IBXDATA=$P($G(^ICD9(+IBZ(Z),0)),U) S IBXSAVE("DX",C)=+IBZ(Z)
"DATA",364.7,1298,3,0)
^^3^3^3061121^
"DATA",364.7,1298,3,1,0)
The principal dx is found in the first occurrence of the data element's
"DATA",364.7,1298,3,2,0)
values.  The diagnoses are saved off in the IBXSAVE("DX") array for later
"DATA",364.7,1298,3,3,0)
use.  Only allow 1 E-code.
"DATA",364.7,1299,0)
1599^N^5^^^^N
"DATA",364.7,1299,1)
D CKPGUB^IBCEF3
"DATA",364.7,1299,3,0)
^364.73^1^1^3061109^^^^
"DATA",364.7,1299,3,1,0)
Checks for multi-page output, adds the static fields to subsequent pages.
"DATA",364.7,1300,0)
1600^N^5^^^^N
"DATA",364.7,1300,1)
K IBXDATA
"DATA",364.7,1300,3,0)
^^1^1^3061109^
"DATA",364.7,1300,3,1,0)
Reserved for Assignment by the NUBC.  Not used.
"DATA",364.7,1301,0)
1601^N^5^^^^N
"DATA",364.7,1301,1)
K IBXDATA
"DATA",364.7,1301,3,0)
^^1^1^3061109^
"DATA",364.7,1301,3,1,0)
Reserved for Assignment by the NUBC.  Box 37 line 2.  Not used.
"DATA",364.7,1302,0)
1602^N^5^^^^N
"DATA",364.7,1302,1)
I $D(IBXSAVE("DX",11)) S IBXDATA=$P($G(^ICD9(+IBXSAVE("DX",11),0)),U)
"DATA",364.7,1302,3,0)
^^1^1^3061117^
"DATA",364.7,1302,3,1,0)
If there is a eleventh diagnosis, print its name.
"DATA",364.7,1303,0)
1603^N^66^^^^N
"DATA",364.7,1303,1)
S IBXDATA=$$DATE^IBCF2(IBXDATA,1,1) S:IBXDATA="" IBXDATA="00000000"
"DATA",364.7,1303,3,0)
^364.73^2^2^3061109^^^^
"DATA",364.7,1303,3,1,0)
If BIRTHDATE exists, format it MMDDYYYY.  If it doesn't exist, output
"DATA",364.7,1303,3,2,0)
00000000.
"DATA",364.7,1304,0)
1604^N^67^^^^N
"DATA",364.7,1304,1)
S:IBXDATA="" IBXDATA="U"
"DATA",364.7,1304,3,0)
^364.73^1^1^3061109^^^^
"DATA",364.7,1304,3,1,0)
If the data element's value is null, set it equal to 'U'.
"DATA",364.7,1305,0)
1605^N^78^^^^N
"DATA",364.7,1305,1)
S IBXSAVE("ADTM")=$$TIME^IBCF3(IBXDATA),IBXDATA=$$DATE^IBCF2($P(IBXDATA,"."),,1)
"DATA",364.7,1305,3,0)
^364.73^2^2^3061109^^^^
"DATA",364.7,1305,3,1,0)
Save the admission time in IBXSAVE array for later use.  Format date
"DATA",364.7,1305,3,2,0)
without the time as MMDDYY.
"DATA",364.7,1306,0)
1606^N^5^^^^N
"DATA",364.7,1306,1)
S IBXDATA=$S('$$INPAT^IBCEF(IBXIEN,1):"",$G(IBXSAVE("ADTM"))'="":$E(IBXSAVE("ADTM"),1,2),1:"00")
"DATA",364.7,1306,3,0)
^364.73^1^1^3070328^^
"DATA",364.7,1306,3,1,0)
Admission time
"DATA",364.7,1307,0)
1607^N^79^^^^N
"DATA",364.7,1307,3,0)
^^8^8^3061109^
"DATA",364.7,1307,3,1,0)
Admission type:
"DATA",364.7,1307,3,2,0)
1 - Emergency
"DATA",364.7,1307,3,3,0)
2 - Urgent
"DATA",364.7,1307,3,4,0)
3 - Elective
"DATA",364.7,1307,3,5,0)
4 - Newborn
"DATA",364.7,1307,3,6,0)
5 - Trauma
"DATA",364.7,1307,3,7,0)
6-8 - Reserved
"DATA",364.7,1307,3,8,0)
9 - Information not available
"DATA",364.7,1308,0)
1608^N^80^^^^N
"DATA",364.7,1308,3,0)
^^21^21^3061109^
"DATA",364.7,1308,3,1,0)
Source of admission:
"DATA",364.7,1308,3,2,0)
1 - Physician referral
"DATA",364.7,1308,3,3,0)
2 - Clinic referral
"DATA",364.7,1308,3,4,0)
3 - HMO referral
"DATA",364.7,1308,3,5,0)
4 - Transfer from a hospital
"DATA",364.7,1308,3,6,0)
5 - Transfer from a skilled nursing facility
"DATA",364.7,1308,3,7,0)
6 - Transfer from another health care facility
"DATA",364.7,1308,3,8,0)
7 - Emergency room
"DATA",364.7,1308,3,9,0)
8 - Court / Law enforcement
"DATA",364.7,1308,3,10,0)
9 - Information not available
"DATA",364.7,1308,3,11,0)
A - Transfer from a critical access hospital
"DATA",364.7,1308,3,12,0)
B - Transfer from another home health agency
"DATA",364.7,1308,3,13,0)
C - Readmission to same home health agency
"DATA",364.7,1308,3,14,0)
D - Transfer from hospital inpatient in the same facility,
"DATA",364.7,1308,3,15,0)
    resulting in a separate claim to the payer
"DATA",364.7,1308,3,16,0)
Codes for Newborn admission type:
"DATA",364.7,1308,3,17,0)
1 - Normal delivery
"DATA",364.7,1308,3,18,0)
2 - Premature delivery
"DATA",364.7,1308,3,19,0)
3 - Sick baby
"DATA",364.7,1308,3,20,0)
4 - Extramural birth
"DATA",364.7,1308,3,21,0)
5-9 - Reserved
"DATA",364.7,1309,0)
1609^N^81^^^^N
"DATA",364.7,1309,1)
K:'$$INPAT^IBCEF(IBXIEN,1) IBXDATA I $D(IBXDATA) S IBXDATA=$S($P(IBXDATA,".",2)'="":$$TIME^IBCF3(IBXDATA),1:"")
"DATA",364.7,1309,3,0)
^364.73^2^2^3061109^^^^
"DATA",364.7,1309,3,1,0)
If this is an outpatient bill, no output.  For inpatient bills, output the
"DATA",364.7,1309,3,2,0)
time portion of the discharge date/time or 99 if no time found.
"DATA",364.7,1310,0)
1610^N^9^^^^N
"DATA",364.7,1311,0)
1611^N^280^^^^N
"DATA",364.7,1311,1)
S:$$WNRBILL^IBEFUNC(IBXIEN) IBXDATA="MEDICARE" S IBXSAVE("CADR_NAME")=$G(IBXDATA)
"DATA",364.7,1311,3,0)
^^1^1^3061117^
"DATA",364.7,1311,3,1,0)
Extract the current payer name and save it in IBXSAVE.
"DATA",364.7,1312,0)
1612^N^192^^^^N
"DATA",364.7,1312,1)
N Y,Z K IBXSAVE("CADR") I $O(IBXDATA(0)) S Y=$G(IBXDATA(6)) D ZIPOUT^VAFADDR S:Y'="" $P(IBXSAVE("CADR"),U,6)=Y F Z=1:1:5,7 S:$D(IBXDATA(Z)) $P(IBXSAVE("CADR"),U,Z)=IBXDATA(Z)
"DATA",364.7,1312,3,0)
^^10^10^3061117^
"DATA",364.7,1312,3,1,0)
Extract the current payer address and store the address components in the 
"DATA",364.7,1312,3,2,0)
IBXSAVE("CADR") pieced string variable with the following pieces:
"DATA",364.7,1312,3,3,0)
 
"DATA",364.7,1312,3,4,0)
[1] address line 1
"DATA",364.7,1312,3,5,0)
[2] address line 2
"DATA",364.7,1312,3,6,0)
[3] address line 3
"DATA",364.7,1312,3,7,0)
[4] city
"DATA",364.7,1312,3,8,0)
[5] pointer to the state file
"DATA",364.7,1312,3,9,0)
[6] external zip code with dashes
"DATA",364.7,1312,3,10,0)
[7] claim office ID (not used)
"DATA",364.7,1313,0)
1613^N^5^^^^N
"DATA",364.7,1313,1)
D CIADDR^IBCEF1(.IBXDATA,.IBXSAVE,,2)
"DATA",364.7,1313,3,0)
^^2^2^3061117^
"DATA",364.7,1313,3,1,0)
Calls CIADDR^IBCEF1 where the IBXDATA formatted array is returned.  The 
"DATA",364.7,1313,3,2,0)
IBXSAVE array elements for the current payer name and address are killed.
"DATA",364.7,1314,0)
1614^N^5^^^^N
"DATA",364.7,1314,1)
I $D(IBXSAVE("DX",12)) S IBXDATA=$P($G(^ICD9(+IBXSAVE("DX",12),0)),U)
"DATA",364.7,1314,3,0)
^^1^1^3061117^
"DATA",364.7,1314,3,1,0)
If there is a twelth diagnosis, print its name.
"DATA",364.7,1315,0)
1615^N^5^^^^N
"DATA",364.7,1315,1)
I $D(IBXSAVE("DX",13)) S IBXDATA=$P($G(^ICD9(+IBXSAVE("DX",13),0)),U)
"DATA",364.7,1315,3,0)
^^1^1^3061117^
"DATA",364.7,1315,3,1,0)
If there is a thirteenth diagnosis, print its name.
"DATA",364.7,1316,0)
1616^N^12^^^^N
"DATA",364.7,1316,1)
N Z,Z0,Z1 S Z=0 F  S Z=$O(IBFL(39,Z)) K:'Z IBFL(39) Q:'Z  S Z0=$P(IBFL(39,Z),U,2),Z1=$P(IBFL(39,Z),U,3),IBXSAVE("VC",Z)=$P(IBFL(39,Z),U,1)_U_$S(Z1:$$DOL^IBCEF77(Z0,10),1:$J(Z0,8))
"DATA",364.7,1316,3,0)
^^11^11^3061110^
"DATA",364.7,1316,3,1,0)
Save all value codes extracted into IBXSAVE("VC") array for later use.  
"DATA",364.7,1316,3,2,0)
Format the value as we loop through them.
"DATA",364.7,1316,3,3,0)
 
"DATA",364.7,1316,3,4,0)
IBXSAVE("VC",z) = [1] VALUE CODE
"DATA",364.7,1316,3,5,0)
                  [2] FORMATTED VALUE AMOUNT
"DATA",364.7,1316,3,6,0)
 
"DATA",364.7,1316,3,7,0)
Dollar amounts are formatted using all 10 characters with the decimal 
"DATA",364.7,1316,3,8,0)
point implied by the dollars/cents delimiter on the pre-printed UB form.
"DATA",364.7,1316,3,9,0)
 
"DATA",364.7,1316,3,10,0)
Non-dollar amounts are formatted right-justified to the left of the 
"DATA",364.7,1316,3,11,0)
dollars/cents delimiter on the pre-printed UB form (thus 8 characters).
"DATA",364.7,1317,0)
1617^N^5^^^^N
"DATA",364.7,1317,1)
N Z,DATA,CODE I $D(IBXSAVE("VC")) K IBXSAVE("VCS") S Z=0 F  S Z=$O(IBXSAVE("VC",Z)) Q:'Z  S DATA=$G(IBXSAVE("VC",Z)),CODE=$P(DATA,U,1) I CODE'="" S IBXSAVE("VCS"," "_CODE,Z)=DATA
"DATA",364.7,1317,3,0)
^^2^2^3061110^
"DATA",364.7,1317,3,1,0)
If the "VC" value code array exists, then sort it by value code in the 
"DATA",364.7,1317,3,2,0)
IBXSAVE("VCS") array.
"DATA",364.7,1318,0)
1618^N^5^^^^N
"DATA",364.7,1318,1)
N CODE,CT,Z I $D(IBXSAVE("VCS")) K IBXSAVE("VC") S CODE="",CT=0 F  S CODE=$O(IBXSAVE("VCS",CODE)) Q:CODE=""  S Z=0 F  S Z=$O(IBXSAVE("VCS",CODE,Z)) Q:'Z  S CT=CT+1,IBXSAVE("VC",CT)=IBXSAVE("VCS",CODE,Z) K IBXSAVE("VCS",CODE,Z)
"DATA",364.7,1318,3,0)
^^2^2^3061110^
"DATA",364.7,1318,3,1,0)
If the value codes exist and have been sorted into the IBXSAVE("VCS") 
"DATA",364.7,1318,3,2,0)
array, then loop thru that array and re-build the IBXSAVE("VC") array.
"DATA",364.7,1319,0)
1619^N^5^^^^N
"DATA",364.7,1319,1)
N Z,Z0 S Z0=0 F Z=1:3:10 Q:'$D(IBXSAVE("VC",Z))  S Z0=Z0+1,IBXDATA(Z0)=$P(IBXSAVE("VC",Z),U)
"DATA",364.7,1319,3,0)
^364.73^3^3^3061110^^^^
"DATA",364.7,1319,3,1,0)
This data element relies on the array IBXSAVE("VC") previously extracted.
"DATA",364.7,1319,3,2,0)
This is a group data element and can have multiple occurrences.  Output is
"DATA",364.7,1319,3,3,0)
the first piece of each occurrence found.
"DATA",364.7,1320,0)
1620^N^5^^^^N
"DATA",364.7,1320,1)
N Z,Z0,Z1 K IBXDATA S Z0=0 F Z=1:3 Q:$G(IBXSAVE("VC",Z))=""  S Z0=Z0+1,Z1=$P(IBXSAVE("VC",Z),U,2) S:Z'>10 IBXDATA(Z0)=Z1 D:Z>10 XVAL^IBCEF3(IBXSAVE("VC",Z),Z) K IBXSAVE("VC",Z)
"DATA",364.7,1320,3,0)
^364.73^3^3^3061110^^^^
"DATA",364.7,1320,3,1,0)
This data element relies on the array IBXSAVE("VC") previously extracted.
"DATA",364.7,1320,3,2,0)
This is a group data element and can have multiple occurrences.  Output is
"DATA",364.7,1320,3,3,0)
the second piece of each occurrence found.
"DATA",364.7,1321,0)
1621^N^5^^^^N
"DATA",364.7,1321,1)
N Z,Z0 S Z0=0 F Z=2:3:11 Q:'$D(IBXSAVE("VC",Z))  S Z0=Z0+1,IBXDATA(Z0)=$P(IBXSAVE("VC",Z),U)
"DATA",364.7,1321,3,0)
^364.73^3^3^3061110^^^^
"DATA",364.7,1321,3,1,0)
This data element relies on the array IBXSAVE("VC") previously extracted.
"DATA",364.7,1321,3,2,0)
This is a group data element and can have multiple occurrences.  Output is
"DATA",364.7,1321,3,3,0)
the first piece of each occurrence found.
"DATA",364.7,1322,0)
1622^N^5^^^^N
"DATA",364.7,1322,1)
N Z,Z0,Z1 K IBXDATA S Z0=0 F Z=2:3 Q:$G(IBXSAVE("VC",Z))=""  S Z0=Z0+1,Z1=$P(IBXSAVE("VC",Z),U,2) S:Z'>11 IBXDATA(Z0)=Z1 D:Z>11 XVAL^IBCEF3(IBXSAVE("VC",Z),Z) K IBXSAVE("VC",Z)
"DATA",364.7,1322,3,0)
^364.73^3^3^3061110^^^^
"DATA",364.7,1322,3,1,0)
This data element relies on the array IBXSAVE("VC") previously extracted.
"DATA",364.7,1322,3,2,0)
This is a group data element and can have multiple occurrences.  Output is
"DATA",364.7,1322,3,3,0)
the second piece of each occurrence found.
"DATA",364.7,1323,0)
1623^N^5^^^^N
"DATA",364.7,1323,1)
N Z,Z0 S Z0=0 F Z=3:3:12 Q:'$D(IBXSAVE("VC",Z))  S Z0=Z0+1,IBXDATA(Z0)=$P(IBXSAVE("VC",Z),U)
"DATA",364.7,1323,3,0)
^364.73^4^4^3061110^^^^
"DATA",364.7,1323,3,1,0)
This data element relies on the array IBXSAVE("VC") previously extracted.
"DATA",364.7,1323,3,2,0)
This is a group data element and can have multiple occurrences.  Output is
"DATA",364.7,1323,3,3,0)
the first piece of each occurrence found.  If there are more than 12
"DATA",364.7,1323,3,4,0)
value codes, they are stored in the overflow array.
"DATA",364.7,1324,0)
1624^N^5^^^^N
"DATA",364.7,1324,1)
N Z,Z0,Z1 K IBXDATA S Z0=0 F Z=3:3 Q:$G(IBXSAVE("VC",Z))=""  S Z0=Z0+1,Z1=$P(IBXSAVE("VC",Z),U,2) S:Z'>12 IBXDATA(Z0)=Z1 D:Z>12 XVAL^IBCEF3(IBXSAVE("VC",Z),Z) K IBXSAVE("VC",Z)
"DATA",364.7,1324,3,0)
^364.73^3^3^3061110^^^^
"DATA",364.7,1324,3,1,0)
This data element relies on the array IBXSAVE("VC") previously extracted.
"DATA",364.7,1324,3,2,0)
This is a group data element and can have multiple occurrences.  Output is
"DATA",364.7,1324,3,3,0)
the second piece of each occurrence found.
"DATA",364.7,1325,0)
1625^N^5^^^^N
"DATA",364.7,1325,1)
K IBXDATA I $G(IBXSAVE("CC",1))'="" S IBXDATA=IBXSAVE("CC",1) K IBXSAVE("CC",1)
"DATA",364.7,1325,3,0)
^364.73^7^7^3061113^^^^
"DATA",364.7,1325,3,1,0)
Data element's array reference is IBFL(24), not default of IBXDATA.  This is
"DATA",364.7,1325,3,2,0)
a group data element so more than 1 occurrence of a value is possible for
"DATA",364.7,1325,3,3,0)
the data element in the IBFL(24) array.  All occurrences of the data element
"DATA",364.7,1325,3,4,0)
are saved in the IBXSAVE("CC",n) array and only IBXSAVE("CC",1) is output
"DATA",364.7,1325,3,5,0)
in this field. Note: hard code is used to output the
"DATA",364.7,1325,3,6,0)
codes that exceed the # that will fit on one page if multiple pages of bill
"DATA",364.7,1325,3,7,0)
are printed.
"DATA",364.7,1326,0)
1626^N^11^^^^N
"DATA",364.7,1326,1)
N Z S Z=0 F  S Z=$O(IBFL(24,Z)) Q:Z=""  S IBXSAVE("CCU"," "_$G(IBFL(24,Z)))=""
"DATA",364.7,1327,0)
1627^N^5^^^^N
"DATA",364.7,1327,1)
K IBXDATA I $G(IBXSAVE("CC",2))'="" S IBXDATA=IBXSAVE("CC",2) K IBXSAVE("CC",2)
"DATA",364.7,1327,3,0)
^364.73^2^2^3061113^^^^
"DATA",364.7,1327,3,1,0)
Data element relies on the data in array IBXSAVE("CC") extracted previously.
"DATA",364.7,1327,3,2,0)
This field reports the data in the second occurrence of the array.
"DATA",364.7,1328,0)
1628^N^5^^^^N
"DATA",364.7,1328,1)
K IBXDATA I $G(IBXSAVE("CC",3))'="" S IBXDATA=IBXSAVE("CC",3) K IBXSAVE("CC",3)
"DATA",364.7,1328,3,0)
^364.73^2^2^3061113^^^^
"DATA",364.7,1328,3,1,0)
Data element relies on the data in array IBXSAVE("CC") extracted previously.
"DATA",364.7,1328,3,2,0)
This field reports the data in the third occurrence of the array.
"DATA",364.7,1329,0)
1629^N^5^^^^N
"DATA",364.7,1329,1)
K IBXDATA I $G(IBXSAVE("CC",4))'="" S IBXDATA=IBXSAVE("CC",4) K IBXSAVE("CC",4)
"DATA",364.7,1329,3,0)
^364.73^2^2^3061113^^^^
"DATA",364.7,1329,3,1,0)
Data element relies on the data in array IBXSAVE("CC") extracted previously.
"DATA",364.7,1329,3,2,0)
This field reports the data in the fourth occurrence of the array.
"DATA",364.7,1330,0)
1630^N^5^^^^N
"DATA",364.7,1330,1)
K IBXDATA I $G(IBXSAVE("CC",5))'="" S IBXDATA=IBXSAVE("CC",5) K IBXSAVE("CC",5)
"DATA",364.7,1330,3,0)
^364.73^2^2^3061113^^^^
"DATA",364.7,1330,3,1,0)
Data element relies on the data in array IBXSAVE("CC") extracted previously.
"DATA",364.7,1330,3,2,0)
This field reports the data in the fifth occurrence of the array.
"DATA",364.7,1331,0)
1631^N^5^^^^N
"DATA",364.7,1331,1)
K IBXDATA I $G(IBXSAVE("CC",6))'="" S IBXDATA=IBXSAVE("CC",6) K IBXSAVE("CC",6)
"DATA",364.7,1331,3,0)
^364.73^2^2^3061113^^^^
"DATA",364.7,1331,3,1,0)
Data element relies on the data in array IBXSAVE("CC") extracted previously.
"DATA",364.7,1331,3,2,0)
This field reports the data in the sixth occurrence of the array.
"DATA",364.7,1332,0)
1632^N^5^^^^N
"DATA",364.7,1332,1)
K IBXDATA I $G(IBXSAVE("CC",7))'="" S IBXDATA=IBXSAVE("CC",7) K IBXSAVE("CC",7)
"DATA",364.7,1332,3,0)
^^2^2^3061113^
"DATA",364.7,1332,3,1,0)
Data element relies on the data in array IBXSAVE("CC") extracted previously.
"DATA",364.7,1332,3,2,0)
This field reports the data in the seventh occurrence of the array.
"DATA",364.7,1333,0)
1633^N^5^^^^N
"DATA",364.7,1333,1)
K IBXDATA I $G(IBXSAVE("CC",8))'="" S IBXDATA=IBXSAVE("CC",8) K IBXSAVE("CC",8)
"DATA",364.7,1333,3,0)
^^2^2^3061113^
"DATA",364.7,1333,3,1,0)
Data element relies on the data in array IBXSAVE("CC") extracted previously.
"DATA",364.7,1333,3,2,0)
This field reports the data in the eighth occurrence of the array.
"DATA",364.7,1334,0)
1634^N^5^^^^N
"DATA",364.7,1334,1)
K IBXDATA I $G(IBXSAVE("CC",9))'="" S IBXDATA=IBXSAVE("CC",9) K IBXSAVE("CC",9)
"DATA",364.7,1334,3,0)
^^2^2^3061113^
"DATA",364.7,1334,3,1,0)
Data element relies on the data in array IBXSAVE("CC") extracted previously.
"DATA",364.7,1334,3,2,0)
This field reports the data in the ninth occurance of the array.
"DATA",364.7,1335,0)
1635^N^5^^^^N
"DATA",364.7,1335,1)
K IBXDATA I $G(IBXSAVE("CC",10))'="" S IBXDATA=IBXSAVE("CC",10) K IBXSAVE("CC",10)
"DATA",364.7,1335,3,0)
^^2^2^3061113^
"DATA",364.7,1335,3,1,0)
Data element relies on the data in array IBXSAVE("CC") extracted previously.
"DATA",364.7,1335,3,2,0)
This field reports the data in the tenth occurance of the array.
"DATA",364.7,1336,0)
1636^N^5^^^^N
"DATA",364.7,1336,1)
S:$G(IBXSAVE("CC",11))'="" IBXDATA=IBXSAVE("CC",11) K IBXSAVE("CC",11) S Z=0 F  S Z=$O(IBXSAVE("CC",Z)) Q:'Z  D XCC^IBCEF3(IBXSAVE("CC",Z),Z)
"DATA",364.7,1336,3,0)
^364.73^4^4^3061113^^^^
"DATA",364.7,1336,3,1,0)
Data element relies on the data in array IBXSAVE("CC") extracted previously.
"DATA",364.7,1336,3,2,0)
This field reports the data in the eleventh occurrence of the array.
"DATA",364.7,1336,3,3,0)
If there are more than 11 condition codes present, save them in the global
"DATA",364.7,1336,3,4,0)
overflow array.
"DATA",364.7,1337,0)
1637^N^88^^^^N
"DATA",364.7,1337,1)
S:$G(IBXDATA)'="" IBXDATA=$$STATE^IBCEFG1($P(IBXDATA,U,2))
"DATA",364.7,1337,3,0)
^^1^1^3061113^
"DATA",364.7,1337,3,1,0)
2 char state abbreviation where the accident occured.
"DATA",364.7,1338,0)
1638^N^5^^^^N
"DATA",364.7,1338,1)
K IBXDATA
"DATA",364.7,1338,3,0)
^^3^3^3061120^
"DATA",364.7,1338,3,1,0)
FL-30
"DATA",364.7,1338,3,2,0)
Reserved for assignment by the NUBC.  Not used.  11 positions upper 
"DATA",364.7,1338,3,3,0)
line.  13 positions lower line.
"DATA",364.7,1339,0)
1639^N^5^^^^N
"DATA",364.7,1339,1)
N IBZ S (IBZ,IBXDATA)="" D F^IBCEF("N-ORGANIZATION NPI CODES","IBZ",,IBXIEN) S IBXDATA=$P(IBZ,U,3),IBXSAVE("NPIBILL")=IBXDATA
"DATA",364.7,1339,3,0)
^^1^1^3061116^
"DATA",364.7,1339,3,1,0)
NPI - Billing Provider.
"DATA",364.7,1340,0)
1640^N^194^^^^N
"DATA",364.7,1340,1)
N Z,Z0 M Z0=IBXDATA K IBXDATA S Z="" F  S Z=$O(Z0(Z)) Q:'Z  I $D(^DGCR(399,IBXIEN,"I"_Z)) S IBXDATA(Z)=$S(Z<3&$$WNRBILL^IBEFUNC(IBXIEN,Z):"MEDICARE",1:$P(Z0(Z),U))
"DATA",364.7,1340,3,0)
^364.73^4^4^3061116^^^^
"DATA",364.7,1340,3,1,0)
The first 15 characters of the name of the primary, secondary, and tertiary
"DATA",364.7,1340,3,2,0)
insurance companies along with the claim office number and payer id, if
"DATA",364.7,1340,3,3,0)
known.  If the primary or secondary insurance is MEDICARE WNR, output
"DATA",364.7,1340,3,4,0)
'MEDICARE'.
"DATA",364.7,1341,0)
1641^N^5^^^^N
"DATA",364.7,1341,1)
K IBXDATA
"DATA",364.7,1341,3,0)
^364.73^1^1^3061128^^^^
"DATA",364.7,1341,3,1,0)
Field reserved to contain National Plan ID. Currently blank.
"DATA",364.7,1342,0)
1642^N^23^^^^N
"DATA",364.7,1342,1)
N Z,Z0 S Z0=$S(IBXDATA&'$P($G(^DGCR(399,IBXIEN,"U")),U,7):"I",1:"Y") F Z=1:1:3 I $S(Z=1:1,1:$D(^DGCR(399,IBXIEN,"I"_Z))) S IBXDATA(Z)=Z0
"DATA",364.7,1342,3,0)
^364.73^2^2^3061116^^^^
"DATA",364.7,1342,3,1,0)
For each insurance on file in the bill, print the ROI indicator = 'I' if
"DATA",364.7,1342,3,2,0)
the record is sensitive and there's no ROI on file, or 'Y' otherwise.
"DATA",364.7,1343,0)
1643^N^24^^^^N
"DATA",364.7,1343,1)
N Z,Z0 S Z0=$S(IBXDATA=""!("Nn0"'[IBXDATA):"Y",1:"N") F Z=1:1:3 I $S(Z=1:1,1:$D(^DGCR(399,IBXIEN,"I"_Z))) S IBXDATA(Z)=Z0
"DATA",364.7,1343,3,0)
^364.73^3^3^3061116^^^^
"DATA",364.7,1343,3,1,0)
For each insurance on file in the bill, print the ASSIGNMENT OF BENEFITS
"DATA",364.7,1343,3,2,0)
indicator = 'Y' if the data element value returned is null or is not 0,'n'
"DATA",364.7,1343,3,3,0)
or 'N', otherwise print 'N'.
"DATA",364.7,1344,0)
1644^N^156^^^^N
"DATA",364.7,1344,1)
N Z F Z=1:1:3 K:'$D(^DGCR(399,IBXIEN,"I"_Z)) IBXDATA(Z) I $D(IBXDATA(Z)) S IBXDATA(Z)=$$DOL^IBCEF77(IBXDATA(Z),10)
"DATA",364.7,1344,3,0)
^364.73^2^2^3061116^^^^
"DATA",364.7,1344,3,1,0)
If the insurance company for the prior payment does not exist for the bill,
"DATA",364.7,1344,3,2,0)
don't output the prior payment information.
"DATA",364.7,1345,0)
1645^N^152^^^^N
"DATA",364.7,1345,1)
N Z,Z0,IBZ S IBZ=$G(IBXDATA) K IBXDATA S Z0=$$COBN^IBCEF(IBXIEN),IBXDATA(Z0)=$$DOL^IBCEF77(+IBZ,11) F Z=1:1:3 I Z'=Z0,$D(^DGCR(399,IBXIEN,"I"_Z)) S IBXDATA(Z)=$$DOL^IBCEF77(0,11)
"DATA",364.7,1345,3,0)
^364.73^2^2^3061116^^^^
"DATA",364.7,1345,3,1,0)
Set the estimated amt for the current insurance equal to the balance on the
"DATA",364.7,1345,3,2,0)
bill.
"DATA",364.7,1346,0)
1646^N^5^^^^N
"DATA",364.7,1346,1)
I $D(IBXSAVE("DX",2)) S IBXDATA=$P($G(^ICD9(+IBXSAVE("DX",2),0)),U)
"DATA",364.7,1346,3,0)
^364.73^1^1^3061121^^^^
"DATA",364.7,1346,3,1,0)
If there is a second diagnosis, print its name.
"DATA",364.7,1347,0)
1647^N^5^^^^N
"DATA",364.7,1347,1)
I $D(IBXSAVE("DX",3)) S IBXDATA=$P($G(^ICD9(+IBXSAVE("DX",3),0)),U)
"DATA",364.7,1347,3,0)
^364.73^1^1^3061121^^^^
"DATA",364.7,1347,3,1,0)
If there is a third diagnosis, print its name.
"DATA",364.7,1348,0)
1648^N^5^^^^N
"DATA",364.7,1348,1)
I $D(IBXSAVE("DX",4)) S IBXDATA=$P($G(^ICD9(+IBXSAVE("DX",4),0)),U)
"DATA",364.7,1348,3,0)
^364.73^1^1^3061121^^^^
"DATA",364.7,1348,3,1,0)
If there is a fourth diagnosis, print its name.
"DATA",364.7,1349,0)
1649^N^5^^^^N
"DATA",364.7,1349,1)
I $D(IBXSAVE("DX",5)) S IBXDATA=$P($G(^ICD9(+IBXSAVE("DX",5),0)),U)
"DATA",364.7,1349,3,0)
^364.73^1^1^3061121^^^^
"DATA",364.7,1349,3,1,0)
If there is a fifth diagnosis, print its name.
"DATA",364.7,1350,0)
1650^N^5^^^^N
"DATA",364.7,1350,1)
I $D(IBXSAVE("DX",6)) S IBXDATA=$P($G(^ICD9(+IBXSAVE("DX",6),0)),U)
"DATA",364.7,1350,3,0)
^364.73^1^1^3061121^^^^
"DATA",364.7,1350,3,1,0)
If there is a sixth diagnosis, print its name.
"DATA",364.7,1351,0)
1651^N^5^^^^N
"DATA",364.7,1351,1)
I $D(IBXSAVE("DX",7)) S IBXDATA=$P($G(^ICD9(+IBXSAVE("DX",7),0)),U)
"DATA",364.7,1351,3,0)
^364.73^1^1^3061121^^^^
"DATA",364.7,1351,3,1,0)
If there is a seventh diagnosis, print its name.
"DATA",364.7,1352,0)
1652^N^5^^^^N
"DATA",364.7,1352,1)
I $D(IBXSAVE("DX",8)) S IBXDATA=$P($G(^ICD9(+IBXSAVE("DX",8),0)),U)
"DATA",364.7,1352,3,0)
^364.73^1^1^3061121^^^^
"DATA",364.7,1352,3,1,0)
If there is an eighth diagnosis, print its name.
"DATA",364.7,1353,0)
1653^N^5^^^^N
"DATA",364.7,1353,1)
I $D(IBXSAVE("DX",9)) S IBXDATA=$P($G(^ICD9(+IBXSAVE("DX",9),0)),U)
"DATA",364.7,1353,3,0)
^364.73^1^1^3061121^^
"DATA",364.7,1353,3,1,0)
If there is a ninth diagnosis, print its name.
"DATA",364.7,1354,0)
1654^N^5^^^^N
"DATA",364.7,1354,1)
I $D(IBXSAVE("DX",10)) S IBXDATA=$P($G(^ICD9(+IBXSAVE("DX",10),0)),U)
"DATA",364.7,1354,3,0)
^364.73^1^1^3061121^^
"DATA",364.7,1354,3,1,0)
If there is a tenth diagnosis, print its name.
"DATA",364.7,1355,0)
1655^N^5^^^^N
"DATA",364.7,1355,1)
I $D(IBXSAVE("DX",14)) S IBXDATA=$P($G(^ICD9(+IBXSAVE("DX",14),0)),U)
"DATA",364.7,1355,3,0)
^^1^1^3061117^
"DATA",364.7,1355,3,1,0)
If there is a fourteenth diagnosis, print its name.
"DATA",364.7,1356,0)
1656^N^5^^^^N
"DATA",364.7,1356,1)
I $D(IBXSAVE("DX",15)) S IBXDATA=$P($G(^ICD9(+IBXSAVE("DX",15),0)),U)
"DATA",364.7,1356,3,0)
^^1^1^3061117^
"DATA",364.7,1356,3,1,0)
If there is a fifteenth diagnosis, print its name.
"DATA",364.7,1357,0)
1657^N^5^^^^N
"DATA",364.7,1357,1)
I $D(IBXSAVE("DX",16)) S IBXDATA=$P($G(^ICD9(+IBXSAVE("DX",16),0)),U)
"DATA",364.7,1357,3,0)
^364.73^1^1^3061126^^
"DATA",364.7,1357,3,1,0)
If there is a sixteenth diagnosis, print its name.
"DATA",364.7,1358,0)
1658^N^5^^^^N
"DATA",364.7,1358,1)
I $D(IBXSAVE("DX",17)) S IBXDATA=$P($G(^ICD9(+IBXSAVE("DX",17),0)),U)
"DATA",364.7,1358,3,0)
^^1^1^3061117^
"DATA",364.7,1358,3,1,0)
If there is a seventeenth diagnosis, print its name.
"DATA",364.7,1359,0)
1659^N^5^^^^N
"DATA",364.7,1359,1)
I $D(IBXSAVE("DX",18)) S IBXDATA=$P($G(^ICD9(+IBXSAVE("DX",18),0)),U)
"DATA",364.7,1359,3,0)
^364.73^2^2^3061117^^^
"DATA",364.7,1359,3,1,0)
If there is a eighteenth diagnosis, print its name.  Check for more than 
"DATA",364.7,1359,3,2,0)
17 other diagnoses on file. If there is, output on new pg.
"DATA",364.7,1360,0)
1660^N^195^^^^N
"DATA",364.7,1360,1)
K:'$$PRTLID^IBCEF77(IBXIEN,$G(IBXSAVE("NPIBILL"))) IBXDATA K IBXSAVE("NPIBILL")
"DATA",364.7,1361,0)
1661^N^196^^^^N
"DATA",364.7,1361,1)
N Z F Z=1:1:3 I $G(IBXDATA(Z))'="",IBXDATA(Z)'["," S Q=$$NAME^IBCEFG1(IBXDATA(Z),1),IBXDATA(Z)=$P(Q,U)_$S($P(Q,U,2)'="":","_$P(Q,U,2),1:"")
"DATA",364.7,1362,0)
1662^N^197^^^^N
"DATA",364.7,1363,0)
1663^N^198^^^^N
"DATA",364.7,1364,0)
1664^N^199^^^^N
"DATA",364.7,1364,1)
N Z,Z0 S Z0=$$COBN^IBCEF(IBXIEN) F Z=1:1:3 S IBXDATA(Z)=$G(IBXDATA(Z))_" " I $D(^DGCR(399,IBXIEN,"I"_Z)),$$WNRBILL^IBEFUNC(IBXIEN,Z) S IBXDATA(Z)=""
"DATA",364.7,1364,3,0)
^364.73^3^3^3061117^^^^
"DATA",364.7,1364,3,1,0)
If the insurance is MEDICARE WNR, do not output the group name.
"DATA",364.7,1364,3,2,0)
Add a space to the end of the Group Name to separate it from
"DATA",364.7,1364,3,3,0)
the next field , Group Number.
"DATA",364.7,1365,0)
1665^N^200^^^^N
"DATA",364.7,1365,1)
N Z,Z0 S Z0=$$COBN^IBCEF(IBXIEN) F Z=1:1:3 I $D(^DGCR(399,IBXIEN,"I"_Z)),Z0=Z,$$WNRBILL^IBEFUNC(IBXIEN,Z) S IBXDATA(Z)=""
"DATA",364.7,1365,3,0)
^364.73^1^1^3061117^^^^
"DATA",364.7,1365,3,1,0)
If the insurance is MEDICARE WNR, do not output the group number.
"DATA",364.7,1366,0)
1666^N^265^^^^N
"DATA",364.7,1367,0)
1667^N^5^^^^N
"DATA",364.7,1367,1)
N Z,Z0 S Z0=$P($G(^DGCR(399,IBXIEN,"UF3")),U,4,6) K IBXDATA F Z=1,2,3 S IBXDATA(Z)=$P(Z0,U,Z)
"DATA",364.7,1367,3,0)
^^1^1^3061117^
"DATA",364.7,1367,3,1,0)
Document control numbers from file 399/fields 453-455.
"DATA",364.7,1368,0)
1668^N^5^^^^N
"DATA",364.7,1368,1)
N Z,IBZ D:'$D(IBXSAVE("OIEMP")) F^IBCEF("N-ALL INSURED EMPLOYER INFO","IBZ",,IBXIEN) K IBXDATA M:$O(IBZ("")) IBXSAVE("OIEMP")=IBZ F Z=1:1:3 I $D(IBXSAVE("OIEMP",Z)) S IBXDATA(Z)=$P(IBXSAVE("OIEMP",Z),U)
"DATA",364.7,1368,3,0)
^364.73^3^3^3061117^^^^
"DATA",364.7,1368,3,1,0)
If the array IBXSAVE("OIEMP") doesn't already exist, extract it.  For each
"DATA",364.7,1368,3,2,0)
insured on the bill, extract the first piece of the data element for output
"DATA",364.7,1368,3,3,0)
in this field.
"DATA",364.7,1369,0)
1669^N^5^^^^N
"DATA",364.7,1369,1)
K IBXDATA
"DATA",364.7,1369,3,0)
^^3^3^3061120^
"DATA",364.7,1369,3,1,0)
FL-30
"DATA",364.7,1369,3,2,0)
Reserved for assignment by the NUBC.  Not used.  11 positions upper 
"DATA",364.7,1369,3,3,0)
line.  13 positions lower line.
"DATA",364.7,1370,0)
1670^N^85^^^^N
"DATA",364.7,1371,0)
1671^N^253^^^^N
"DATA",364.7,1371,3,0)
^364.73^3^3^3061125^^^^
"DATA",364.7,1371,3,1,0)
This data element relies on the existence of the array containing the
"DATA",364.7,1371,3,2,0)
diagnoses for the bill, previously extracted.  This data will be output if
"DATA",364.7,1371,3,3,0)
it is the first 'E-code' dx found.
"DATA",364.7,1372,0)
1672^N^5^^^^N
"DATA",364.7,1372,1)
K IBXDATA I $D(IBXSAVE("PROC",1)) S IBXDATA=$P(IBXSAVE("PROC",1),U,2) K IBXSAVE("PROC",1)
"DATA",364.7,1372,3,0)
^364.73^3^3^3061120^^^^
"DATA",364.7,1372,3,1,0)
This data element relies on the existence of the IBXSAVE("PROC") array
"DATA",364.7,1372,3,2,0)
previously extracted.  If the first occurrence exists, output the date
"DATA",364.7,1372,3,3,0)
found in its second '^' piece.
"DATA",364.7,1373,0)
1673^N^5^^^^N
"DATA",364.7,1373,1)
K IBXDATA I $D(IBXSAVE("PROC",2)) S IBXDATA=$P(IBXSAVE("PROC",2),U),IBXDATA=$S(IBXDATA["ICD0"!(IBXDATA["ICPT"):$P($$PRCD^IBCEF1(IBXDATA),U),1:IBXDATA)
"DATA",364.7,1373,3,0)
^364.73^3^3^3061120^^^^
"DATA",364.7,1373,3,1,0)
This data element relies on the existence of the IBXSAVE("PROC") array
"DATA",364.7,1373,3,2,0)
previously extracted.  If the second occurrence exists, output the code
"DATA",364.7,1373,3,3,0)
referenced by its first '^' piece.
"DATA",364.7,1374,0)
1674^N^5^^^^N
"DATA",364.7,1374,1)
K IBXDATA I $D(IBXSAVE("PROC",2)) S IBXDATA=$P(IBXSAVE("PROC",2),U,2) K IBXSAVE("PROC",2)
"DATA",364.7,1374,3,0)
^364.73^3^3^3061120^^^^
"DATA",364.7,1374,3,1,0)
This data element relies on the existence of the IBXSAVE("PROC") array
"DATA",364.7,1374,3,2,0)
previously extracted.  If the second occurrence exists, output the date
"DATA",364.7,1374,3,3,0)
found in its second '^' piece.
"DATA",364.7,1375,0)
1675^N^5^^^^N
"DATA",364.7,1375,1)
K IBXDATA I $D(IBXSAVE("PROC",3)) S IBXDATA=$P(IBXSAVE("PROC",3),U),IBXDATA=$S(IBXDATA["ICD0"!(IBXDATA["ICPT"):$P($$PRCD^IBCEF1(IBXDATA),U),1:IBXDATA)
"DATA",364.7,1375,3,0)
^364.73^3^3^3061120^^^^
"DATA",364.7,1375,3,1,0)
This data element relies on the existence of the IBXSAVE("PROC") array
"DATA",364.7,1375,3,2,0)
previously extracted.  If the third occurrence exists, output the code
"DATA",364.7,1375,3,3,0)
referenced by its first '^' piece.
"DATA",364.7,1376,0)
1676^N^5^^^^N
"DATA",364.7,1376,1)
K IBXDATA I $D(IBXSAVE("PROC",3)) S IBXDATA=$P(IBXSAVE("PROC",3),U,2) K IBXSAVE("PROC",3)
"DATA",364.7,1376,3,0)
^364.73^3^3^3061120^^^^
"DATA",364.7,1376,3,1,0)
This data element relies on the existence of the IBXSAVE("PROC") array
"DATA",364.7,1376,3,2,0)
previously extracted.  If the third occurrence exists, output the date
"DATA",364.7,1376,3,3,0)
found in its second '^' piece.
"DATA",364.7,1377,0)
1677^N^5^^^^N
"DATA",364.7,1377,1)
K IBXDATA I $D(IBXSAVE("PROC",4)) S IBXDATA=$P(IBXSAVE("PROC",4),U),IBXDATA=$S(IBXDATA["ICD0"!(IBXDATA["ICPT"):$P($$PRCD^IBCEF1(IBXDATA),U),1:IBXDATA)
"DATA",364.7,1377,3,0)
^364.73^3^3^3061120^^^^
"DATA",364.7,1377,3,1,0)
This data element relies on the existence of the IBXSAVE("PROC") array
"DATA",364.7,1377,3,2,0)
previously extracted.  If the fourth occurrence exists, output the code
"DATA",364.7,1377,3,3,0)
referenced by its first '^' piece.
"DATA",364.7,1378,0)
1678^N^5^^^^N
"DATA",364.7,1378,1)
K IBXDATA I $D(IBXSAVE("PROC",4)) S IBXDATA=$P(IBXSAVE("PROC",4),U,2) K IBXSAVE("PROC",4)
"DATA",364.7,1378,3,0)
^364.73^3^3^3061120^^^^
"DATA",364.7,1378,3,1,0)
This data element relies on the existence of the IBXSAVE("PROC") array
"DATA",364.7,1378,3,2,0)
previously extracted.  If the fourth occurrence exists, output the date
"DATA",364.7,1378,3,3,0)
found in its second '^' piece.
"DATA",364.7,1379,0)
1679^N^5^^^^N
"DATA",364.7,1379,1)
K IBXDATA I $D(IBXSAVE("PROC",5)) S IBXDATA=$P(IBXSAVE("PROC",5),U),IBXDATA=$S(IBXDATA["ICD0"!(IBXDATA["ICPT"):$P($$PRCD^IBCEF1(IBXDATA),U),1:IBXDATA)
"DATA",364.7,1379,3,0)
^364.73^3^3^3061120^^^^
"DATA",364.7,1379,3,1,0)
This data element relies on the existence of the IBXSAVE("PROC") array
"DATA",364.7,1379,3,2,0)
previously extracted.  If the fifth occurrence exists, output the code
"DATA",364.7,1379,3,3,0)
referenced by its first '^' piece.
"DATA",364.7,1380,0)
1680^N^5^^^^N
"DATA",364.7,1380,1)
K IBXDATA I $D(IBXSAVE("PROC",5)) S IBXDATA=$P(IBXSAVE("PROC",5),U,2) K IBXSAVE("PROC",5)
"DATA",364.7,1380,3,0)
^364.73^3^3^3061120^^^^
"DATA",364.7,1380,3,1,0)
This data element relies on the existence of the IBXSAVE("PROC") array
"DATA",364.7,1380,3,2,0)
previously extracted.  If the fifth occurrence exists, output the date
"DATA",364.7,1380,3,3,0)
found in its second '^' piece.
"DATA",364.7,1381,0)
1681^N^5^^^^N
"DATA",364.7,1381,1)
K IBXDATA I $D(IBXSAVE("PROC",6)) S IBXDATA=$P(IBXSAVE("PROC",6),U),IBXDATA=$S(IBXDATA["ICD0"!(IBXDATA["ICPT"):$P($$PRCD^IBCEF1(IBXDATA),U),1:IBXDATA)
"DATA",364.7,1381,3,0)
^364.73^3^3^3061120^^^^
"DATA",364.7,1381,3,1,0)
This data element relies on the existence of the IBXSAVE("PROC") array
"DATA",364.7,1381,3,2,0)
previously extracted.  If the sixth occurrence exists, output the code
"DATA",364.7,1381,3,3,0)
referenced by its first '^' piece.
"DATA",364.7,1382,0)
1682^N^5^^^^N
"DATA",364.7,1382,1)
N Z,Q,R S:$D(IBXSAVE("PROC",6)) IBXDATA=$P(IBXSAVE("PROC",6),U,2) S Z=6 F  S Z=$O(IBXSAVE("PROC",Z)) Q:'Z  S R=IBXSAVE("PROC",Z),Q=$P(R,U,2) D XPROC^IBCEF3($S(R["ICPT"!(R["ICD0"):$P($$PRCD^IBCEF1(R),U),1:$P(R,U))_U_Q,Z)
"DATA",364.7,1382,3,0)
^364.73^3^3^3061120^^^^
"DATA",364.7,1382,3,1,0)
This data element relies on the existence of the IBXSAVE("PROC") array
"DATA",364.7,1382,3,2,0)
previously extracted.  If the sixth occurrence exists, output the date
"DATA",364.7,1382,3,3,0)
found in its second '^' piece.
"DATA",364.7,1383,0)
1683^N^5^^^^N
"DATA",364.7,1383,1)
I $D(IBXSAVE("DX",1)) K IBXSAVE("DX",1) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):"U",1:" ")
"DATA",364.7,1383,3,0)
^^3^3^3061121^
"DATA",364.7,1383,3,1,0)
This is the present on admissions indicator.  Since this information is 
"DATA",364.7,1383,3,2,0)
not currently captured, the value "U" (No Information in the Record) is 
"DATA",364.7,1383,3,3,0)
sent for INPATIENT claims.
"DATA",364.7,1384,0)
1684^N^5^^^^N
"DATA",364.7,1384,1)
I $D(IBXSAVE("DX",2)) K IBXSAVE("DX",2) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):"U",1:" ")
"DATA",364.7,1384,3,0)
^^3^3^3061121^
"DATA",364.7,1384,3,1,0)
This is the present on admissions indicator.  Since this information is
"DATA",364.7,1384,3,2,0)
not currently captured, the value "U" (No Information in the Record) is
"DATA",364.7,1384,3,3,0)
sent for INPATIENT claims.
"DATA",364.7,1385,0)
1685^N^5^^^^N
"DATA",364.7,1385,1)
I $D(IBXSAVE("DX",3)) K IBXSAVE("DX",3) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):"U",1:" ")
"DATA",364.7,1385,3,0)
^^3^3^3061121^
"DATA",364.7,1385,3,1,0)
This is the present on admissions indicator.  Since this information is
"DATA",364.7,1385,3,2,0)
not currently captured, the value "U" (No Information in the Record) is
"DATA",364.7,1385,3,3,0)
sent for INPATIENT claims.
"DATA",364.7,1386,0)
1686^N^5^^^^N
"DATA",364.7,1386,1)
I $D(IBXSAVE("DX",4)) K IBXSAVE("DX",4) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):"U",1:" ")
"DATA",364.7,1386,3,0)
^^3^3^3061121^
"DATA",364.7,1386,3,1,0)
This is the present on admissions indicator.  Since this information is
"DATA",364.7,1386,3,2,0)
not currently captured, the value "U" (No Information in the Record) is
"DATA",364.7,1386,3,3,0)
sent for INPATIENT claims.
"DATA",364.7,1387,0)
1687^N^5^^^^N
"DATA",364.7,1387,1)
I $D(IBXSAVE("DX",5)) K IBXSAVE("DX",5) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):"U",1:" ")
"DATA",364.7,1387,3,0)
^^3^3^3061121^
"DATA",364.7,1387,3,1,0)
This is the present on admissions indicator.  Since this information is
"DATA",364.7,1387,3,2,0)
not currently captured, the value "U" (No Information in the Record) is
"DATA",364.7,1387,3,3,0)
sent for INPATIENT claims.
"DATA",364.7,1388,0)
1688^N^5^^^^N
"DATA",364.7,1388,1)
I $D(IBXSAVE("DX",6)) K IBXSAVE("DX",6) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):"U",1:" ")
"DATA",364.7,1388,3,0)
^^3^3^3061121^
"DATA",364.7,1388,3,1,0)
This is the present on admissions indicator.  Since this information is
"DATA",364.7,1388,3,2,0)
not currently captured, the value "U" (No Information in the Record) is
"DATA",364.7,1388,3,3,0)
sent for INPATIENT claims.
"DATA",364.7,1389,0)
1689^N^5^^^^N
"DATA",364.7,1389,1)
I $D(IBXSAVE("DX",7)) K IBXSAVE("DX",7) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):"U",1:" ")
"DATA",364.7,1389,3,0)
^^3^3^3061121^
"DATA",364.7,1389,3,1,0)
This is the present on admissions indicator.  Since this information is
"DATA",364.7,1389,3,2,0)
not currently captured, the value "U" (No Information in the Record) is
"DATA",364.7,1389,3,3,0)
sent for INPATIENT claims.
"DATA",364.7,1390,0)
1690^N^5^^^^N
"DATA",364.7,1390,1)
I $D(IBXSAVE("DX",8)) K IBXSAVE("DX",8) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):"U",1:" ")
"DATA",364.7,1390,3,0)
^^3^3^3061121^
"DATA",364.7,1390,3,1,0)
This is the present on admissions indicator.  Since this information is
"DATA",364.7,1390,3,2,0)
not currently captured, the value "U" (No Information in the Record) is
"DATA",364.7,1390,3,3,0)
sent for INPATIENT claims.
"DATA",364.7,1391,0)
1691^N^5^^^^N
"DATA",364.7,1391,1)
I $D(IBXSAVE("DX",9)) K IBXSAVE("DX",9) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):"U",1:" ")
"DATA",364.7,1391,3,0)
^^3^3^3061121^
"DATA",364.7,1391,3,1,0)
This is the present on admissions indicator.  Since this information is
"DATA",364.7,1391,3,2,0)
not currently captured, the value "U" (No Information in the Record) is
"DATA",364.7,1391,3,3,0)
sent for INPATIENT claims.
"DATA",364.7,1392,0)
1692^N^5^^^^N
"DATA",364.7,1392,1)
I $D(IBXSAVE("DX",10)) K IBXSAVE("DX",10) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):"U",1:" ")
"DATA",364.7,1392,3,0)
^^3^3^3061121^
"DATA",364.7,1392,3,1,0)
This is the present on admissions indicator.  Since this information is
"DATA",364.7,1392,3,2,0)
not currently captured, the value "U" (No Information in the Record) is
"DATA",364.7,1392,3,3,0)
sent for INPATIENT claims.
"DATA",364.7,1393,0)
1693^N^5^^^^N
"DATA",364.7,1393,1)
I $D(IBXSAVE("DX",11)) K IBXSAVE("DX",11) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):"U",1:" ")
"DATA",364.7,1393,3,0)
^^3^3^3061121^
"DATA",364.7,1393,3,1,0)
This is the present on admissions indicator.  Since this information is
"DATA",364.7,1393,3,2,0)
not currently captured, the value "U" (No Information in the Record) is
"DATA",364.7,1393,3,3,0)
sent for INPATIENT claims.
"DATA",364.7,1394,0)
1694^N^5^^^^N
"DATA",364.7,1394,1)
I $D(IBXSAVE("DX",12)) K IBXSAVE("DX",12) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):"U",1:" ")
"DATA",364.7,1394,3,0)
^^3^3^3061121^
"DATA",364.7,1394,3,1,0)
This is the present on admissions indicator.  Since this information is
"DATA",364.7,1394,3,2,0)
not currently captured, the value "U" (No Information in the Record) is
"DATA",364.7,1394,3,3,0)
sent for INPATIENT claims.
"DATA",364.7,1395,0)
1695^N^5^^^^N
"DATA",364.7,1395,1)
I $D(IBXSAVE("DX",13)) K IBXSAVE("DX",13) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):"U",1:" ")
"DATA",364.7,1395,3,0)
^^3^3^3061121^
"DATA",364.7,1395,3,1,0)
This is the present on admissions indicator.  Since this information is
"DATA",364.7,1395,3,2,0)
not currently captured, the value "U" (No Information in the Record) is
"DATA",364.7,1395,3,3,0)
sent for INPATIENT claims.
"DATA",364.7,1396,0)
1696^N^5^^^^N
"DATA",364.7,1396,1)
I $D(IBXSAVE("DX",14)) K IBXSAVE("DX",14) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):"U",1:" ")
"DATA",364.7,1396,3,0)
^^3^3^3061121^
"DATA",364.7,1396,3,1,0)
This is the present on admissions indicator.  Since this information is
"DATA",364.7,1396,3,2,0)
not currently captured, the value "U" (No Information in the Record) is
"DATA",364.7,1396,3,3,0)
sent for INPATIENT claims.
"DATA",364.7,1397,0)
1697^N^5^^^^N
"DATA",364.7,1397,1)
I $D(IBXSAVE("DX",15)) K IBXSAVE("DX",15) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):"U",1:" ")
"DATA",364.7,1397,3,0)
^^3^3^3061121^
"DATA",364.7,1397,3,1,0)
This is the present on admissions indicator.  Since this information is
"DATA",364.7,1397,3,2,0)
not currently captured, the value "U" (No Information in the Record) is
"DATA",364.7,1397,3,3,0)
sent for INPATIENT claims.
"DATA",364.7,1398,0)
1698^N^5^^^^N
"DATA",364.7,1398,1)
I $D(IBXSAVE("DX",16)) K IBXSAVE("DX",16) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):"U",1:" ")
"DATA",364.7,1398,3,0)
^^3^3^3061121^
"DATA",364.7,1398,3,1,0)
This is the present on admissions indicator.  Since this information is
"DATA",364.7,1398,3,2,0)
not currently captured, the value "U" (No Information in the Record) is
"DATA",364.7,1398,3,3,0)
sent for INPATIENT claims.
"DATA",364.7,1399,0)
1699^N^5^^^^N
"DATA",364.7,1399,1)
I $D(IBXSAVE("DX",17)) K IBXSAVE("DX",17) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):"U",1:" ")
"DATA",364.7,1399,3,0)
^^3^3^3061121^
"DATA",364.7,1399,3,1,0)
This is the present on admissions indicator.  Since this information is
"DATA",364.7,1399,3,2,0)
not currently captured, the value "U" (No Information in the Record) is
"DATA",364.7,1399,3,3,0)
sent for INPATIENT claims.
"DATA",364.7,1400,0)
1700^N^5^^^^N
"DATA",364.7,1400,1)
I $D(IBXSAVE("DX",18)) K IBXSAVE("DX",18) S IBXDATA=$S($$INPAT^IBCEF(IBXIEN):"U",1:" ")
"DATA",364.7,1400,3,0)
^^3^3^3061121^
"DATA",364.7,1400,3,1,0)
This is the present on admissions indicator.  Since this information is
"DATA",364.7,1400,3,2,0)
not currently captured, the value "U" (No Information in the Record) is
"DATA",364.7,1400,3,3,0)
sent for INPATIENT claims.
"DATA",364.7,1401,0)
1701^N^5^^^^N
"DATA",364.7,1401,1)
K IBXDATA
"DATA",364.7,1402,0)
1702^N^5^^^^N
"DATA",364.7,1402,1)
K IBXDATA
"DATA",364.7,1403,0)
1703^N^16^^^^N
"DATA",364.7,1403,1)
N Z S Z="" F  S Z=$O(IBXDATA(Z)) Q:'Z  S $P(IBXDATA(Z),U,2)=$$DATE^IBCF3($P(IBXDATA(Z),U,2)),IBXSAVE("PROC",Z)=IBXDATA(Z) K IBXDATA(Z)
"DATA",364.7,1403,3,0)
^364.73^5^5^3061124^^^^
"DATA",364.7,1403,3,1,0)
This is a group data element so more than one occurrence of IBXDATA(n) is
"DATA",364.7,1403,3,2,0)
possible.  Save off the procedures in the IBXSAVE array.  Six procedures
"DATA",364.7,1403,3,3,0)
will fit on a single page of a bill.  If more than 6 procedure codes are
"DATA",364.7,1403,3,4,0)
on the bill, multiple pages are used.  The format of the IBXSAVE array is:
"DATA",364.7,1403,3,5,0)
   the actual code for the ICD9 or ICD0 code^proc date formatted as MMDDYY
"DATA",364.7,1404,0)
1704^N^193^^^^N
"DATA",364.7,1405,0)
1705^N^5^^^^N
"DATA",364.7,1405,1)
N Z,Q,R F Z=1:1 Q:'$D(^TMP($J,"IBC-RC",Z))  S R=^(Z),Q=$S(+R=1:$$FO^IBCNEUT1($P(R,U,2),4,"R",0),+R=2:$E($P(R,U,2),1,5),1:"") S:Z'>22 IBXDATA(Z)=Q D:Z>22 CKREV^IBCEF3(Z,Q)
"DATA",364.7,1405,3,0)
^^11^11^3070125^
"DATA",364.7,1405,3,1,0)
This data element is a group data element where more than one occurrence
"DATA",364.7,1405,3,2,0)
might be expected.  It relies on the presence of data in array
"DATA",364.7,1405,3,3,0)
IBXSAVE("REV",n) extracted previously.  The first '^' piece of the array
"DATA",364.7,1405,3,4,0)
indicates whether this is a 'normal' service data line (=1) or a text line
"DATA",364.7,1405,3,5,0)
(=2 or =3).  For a normal service line, the data is found in the second '^'
"DATA",364.7,1405,3,6,0)
piece of the array.  For text line where the first piece = 2, the text is
"DATA",364.7,1405,3,7,0)
assumed to start in column 1, so the data is extracted from positions 1-5.
"DATA",364.7,1405,3,8,0)
For text line where the first piece = 3, the text is assumed to start in
"DATA",364.7,1405,3,9,0)
column 6, so there is no data extracted for this field. Since only 22
"DATA",364.7,1405,3,10,0)
lines of service line can appear on one form, if there are more than 22
"DATA",364.7,1405,3,11,0)
lines, subsequent pages are forced for the remaining data lines after 22.
"DATA",364.7,1406,0)
1706^N^5^^^^N
"DATA",364.7,1406,1)
N Z,Z0,Z1 F Z=1:1 Q:'$D(^TMP($J,"IBC-RC",Z))  S Z1=^(Z),Z0=$S(+Z1=1:$E($P(Z1,U,3),1,24),+Z1=2:$E($P(Z1,U,2),6,30),1:$E($P(Z1,U,2),1,25)) S:Z'>22 IBXDATA(Z)=Z0 D:Z>22 CKREV^IBCEF3(Z,Z0)
"DATA",364.7,1406,3,0)
^^12^12^3070125^
"DATA",364.7,1406,3,1,0)
This data element is a group data element where more than one occurrence
"DATA",364.7,1406,3,2,0)
might be expected.  It relies on the presence of data in array
"DATA",364.7,1406,3,3,0)
IBXSAVE("REV",n) extracted previously.  The first '^' piece of the array
"DATA",364.7,1406,3,4,0)
indicates whether this is a 'normal' service data line (=1) or a text line
"DATA",364.7,1406,3,5,0)
(=2 or =3).  For a normal service line, the data is found in the third '^'
"DATA",364.7,1406,3,6,0)
piece of the array.  For text line where the first piece = 2, the text is
"DATA",364.7,1406,3,7,0)
assumed TO start in column 1, so the data is extracted from positions 
"DATA",364.7,1406,3,8,0)
6-30. For text line where the first piece = 3, the text is assumed to
"DATA",364.7,1406,3,9,0)
start in column 6, so the data for this field is extracted from positions
"DATA",364.7,1406,3,10,0)
1-25. Since only 22 lines of service line can appear on one form, if there
"DATA",364.7,1406,3,11,0)
are more than 22 lines, subsequent pages are forced for the remaining data
"DATA",364.7,1406,3,12,0)
lines after 22.
"DATA",364.7,1407,0)
1707^N^5^^^^N
"DATA",364.7,1407,1)
K IBXDATA
"DATA",364.7,1407,3,0)
^^1^1^3061124^
"DATA",364.7,1407,3,1,0)
This information is not captured
"DATA",364.7,1408,0)
1708^N^5^^^^N
"DATA",364.7,1408,1)
K IBXDATA
"DATA",364.7,1408,3,0)
^^1^1^3061124^
"DATA",364.7,1408,3,1,0)
This information is not captured
"DATA",364.7,1409,0)
1709^N^5^^^^N
"DATA",364.7,1409,1)
K IBXDATA
"DATA",364.7,1409,3,0)
^^1^1^3061124^
"DATA",364.7,1409,3,1,0)
This information is not captured
"DATA",364.7,1410,0)
1710^N^5^^^^N
"DATA",364.7,1410,1)
K IBXDATA
"DATA",364.7,1410,3,0)
^^1^1^3061124^
"DATA",364.7,1410,3,1,0)
VistA will not retrieve or print the PPS code at this time
"DATA",364.7,1411,0)
1711^N^5^^^^N
"DATA",364.7,1411,1)
S IBXDATA=$S('$$INPAT^IBCEF(IBXIEN):" ",$D(IBXSAVE("DX-E")):"U",1:"") K IBXSAVE("DX-E")
"DATA",364.7,1411,3,0)
^364.73^3^3^3070523^^^^
"DATA",364.7,1411,3,1,0)
This is the present on admissions indicator.  Since this information is
"DATA",364.7,1411,3,2,0)
not currently captured, the value "U" (No Information in the Record) is
"DATA",364.7,1411,3,3,0)
sent for INPATIENT claims.
"DATA",364.7,1412,0)
1712^N^5^^^^N
"DATA",364.7,1412,1)
K IBXDATA
"DATA",364.7,1412,3,0)
^364.73^1^1^3061213^^^^
"DATA",364.7,1412,3,1,0)
Only one per claim
"DATA",364.7,1413,0)
1713^N^5^^^^N
"DATA",364.7,1413,1)
K IBXDATA
"DATA",364.7,1413,3,0)
^^1^1^3061125^
"DATA",364.7,1413,3,1,0)
Only one per claim
"DATA",364.7,1414,0)
1714^N^5^^^^N
"DATA",364.7,1414,1)
K IBXDATA
"DATA",364.7,1414,3,0)
^^1^1^3061125^
"DATA",364.7,1414,3,1,0)
Only one per claim
"DATA",364.7,1415,0)
1715^N^5^^^^N
"DATA",364.7,1415,1)
K IBXDATA
"DATA",364.7,1415,3,0)
^^1^1^3061125^
"DATA",364.7,1415,3,1,0)
Only one per claim
"DATA",364.7,1416,0)
1716^N^5^^^^N
"DATA",364.7,1416,1)
K IBXDATA
"DATA",364.7,1417,0)
1717^N^5^^^^N
"DATA",364.7,1417,1)
N Z,Z0,D,T,T4,T5 F Z=1:1 Q:'$G(^TMP($J,"IBC-RC",Z))  S D=^(Z),T=$P(D,U,2),T5=$P(D,U,5),T4=$P(D,U,4),Z0=$S(+D=2:$E(T,31,45),+D=3:$E(T,26,40),T4'=""&(T>219):T4,T5'=""&(T<220)&(T>1):$J(T5,7,2),1:"") S:Z'>22 IBXDATA(Z)=Z0 D:Z>22 CKREV^IBCEF3(Z,Z0)
"DATA",364.7,1417,3,0)
^364.73^12^12^3070125^^^
"DATA",364.7,1417,3,1,0)
This data element is a group data element where more than one occurrence
"DATA",364.7,1417,3,2,0)
might be expected.  It relies on the presence of data in global
"DATA",364.7,1417,3,3,0)
^TMP($J,"IBC-RC",n) extracted previously.  The first '^' piece of the array
"DATA",364.7,1417,3,4,0)
indicates whether this is a 'normal' service data line (=1) or a text line
"DATA",364.7,1417,3,5,0)
(=2 or =3).  For a normal service line, the data is found in the fourth
"DATA",364.7,1417,3,6,0)
(procedure code and modifiers) or fifth (unit charge) '^' pieces of the
"DATA",364.7,1417,3,7,0)
array. If there is a procedure and a unit charge, only the procedure code
"DATA",364.7,1417,3,8,0)
and its modifiers will print. If there is a unit charge and this is an
"DATA",364.7,1417,3,9,0)
inpatient bill and the revenue code is 100-219, it is printed and
"DATA",364.7,1417,3,10,0)
formatted with 2 decimal places. Since only 22 lines of service can appear
"DATA",364.7,1417,3,11,0)
on one form, if there are more than 22 lines, subsequent pages are forced
"DATA",364.7,1417,3,12,0)
for the remaining data lines after 22.
"DATA",364.7,1418,0)
1718^N^5^^^^N
"DATA",364.7,1418,1)
K IBXDATA D DATE45^IBCF33(IBXIEN,.IBXDATA,$G(IBXSAVE("DATE")))
"DATA",364.7,1418,3,0)
^^12^12^3070125^
"DATA",364.7,1418,3,1,0)
This data element is a group data element where more than one occurrence
"DATA",364.7,1418,3,2,0)
might be expected.  It relies on the presence of data in array
"DATA",364.7,1418,3,3,0)
IBXSAVE("REV",n) extracted previously.  The first '^' piece of the array
"DATA",364.7,1418,3,4,0)
indicates whether this is a 'normal' service data line (=1) or a text line
"DATA",364.7,1418,3,5,0)
(=2 or =3).   For a normal service line, output the OUTPATIENT from date 
"DATA",364.7,1418,3,6,0)
that was previously extracted into IBXSAVE("DATE"). For text line where
"DATA",364.7,1418,3,7,0)
the first piece = 2, the text is assumed to start in column 1, so the data
"DATA",364.7,1418,3,8,0)
is extracted from positions 46-52. For text line where the first piece =
"DATA",364.7,1418,3,9,0)
3, the text is assumed to start in column 6, so the data for this field is
"DATA",364.7,1418,3,10,0)
extracted from positions 41-47. Since only 22 lines of service line can
"DATA",364.7,1418,3,11,0)
appear on one form, if there are more than 22 lines, subsequent pages are
"DATA",364.7,1418,3,12,0)
forced for the remaining data lines after 22.
"DATA",364.7,1419,0)
1719^N^5^^^^N
"DATA",364.7,1419,1)
K IBXDATA
"DATA",364.7,1420,0)
1720^N^5^^^^N
"DATA",364.7,1420,1)
K IBXDATA
"DATA",364.7,1421,0)
1721^N^5^^^^N
"DATA",364.7,1421,1)
K IBXDATA
"DATA",364.7,1422,0)
1722^N^5^^^^N
"DATA",364.7,1422,1)
K IBXDATA
"DATA",364.7,1423,0)
1723^N^5^^^^N
"DATA",364.7,1423,1)
D REMARK^IBCEF77(IBXIEN,.IBXDATA,1)
"DATA",364.7,1423,3,0)
^^4^4^3070209^
"DATA",364.7,1423,3,1,0)
Remarks in FL-80 on the UB-04.  All data is retrieved and formatted by 
"DATA",364.7,1423,3,2,0)
REMARK^IBCEF77.  Line 1 of this box has a mandatory 5 leading spaces and 
"DATA",364.7,1423,3,3,0)
therefore only 19 printed characters can be in line 1.  Lines 2-4 have a 
"DATA",364.7,1423,3,4,0)
max length of 24 characters.
"DATA",364.7,1427,0)
1727^N^5^^^^N
"DATA",364.7,1427,1)
S IBXDATA(1)="",IBXDATA(2)="",IBXDATA(3)="",IBXDATA(4)=""
"DATA",364.7,1427,3,0)
^364.73^2^2^3061127^^
"DATA",364.7,1427,3,1,0)
Not currently used.  This field is for overflow codes or externally 
"DATA",364.7,1427,3,2,0)
maintained codes.
"DATA",364.7,1428,0)
1728^N^5^^^^N
"DATA",364.7,1428,1)
S IBXDATA(1)="",IBXDATA(2)="",IBXDATA(3)="",IBXDATA(4)=""
"DATA",364.7,1428,3,0)
^^2^2^3061127^
"DATA",364.7,1428,3,1,0)
Not currently used.  This field is for overflow codes or externally
"DATA",364.7,1428,3,2,0)
maintained codes.
"DATA",364.7,1429,0)
1729^N^5^^^^N
"DATA",364.7,1429,1)
S IBXDATA(1)="",IBXDATA(2)="",IBXDATA(3)="",IBXDATA(4)=""
"DATA",364.7,1429,3,0)
^^2^2^3061127^
"DATA",364.7,1429,3,1,0)
Not currently used.  This field is for overflow codes or externally
"DATA",364.7,1429,3,2,0)
maintained codes.
"DATA",364.7,1430,0)
1730^N^5^^^^N
"DATA",364.7,1430,1)
N IBZ D GETPRV^IBCEU(IBXIEN,4,.IBZ) S IBXSAVE("NAME")=$P($G(IBZ(4,1)),U),IBXDATA=$P(IBXSAVE("NAME"),",")
"DATA",364.7,1430,3,0)
^^1^1^3061128^
"DATA",364.7,1430,3,1,0)
Attending Providers last name
"DATA",364.7,1431,0)
1731^N^5^^^^N
"DATA",364.7,1431,1)
S IBXDATA=$P($G(IBXSAVE("NAME")),",",2) K IBXSAVE("NAME")
"DATA",364.7,1431,3,0)
^^1^1^3061128^
"DATA",364.7,1431,3,1,0)
Attending Providers first name
"DATA",364.7,1432,0)
1732^N^5^^^^N
"DATA",364.7,1432,1)
N IBZ D GETPRV^IBCEU(IBXIEN,2,.IBZ) S IBXSAVE("NAME")=$P($G(IBZ(2,1)),U),IBXDATA=$P(IBXSAVE("NAME"),",")
"DATA",364.7,1432,3,0)
^^1^1^3061128^
"DATA",364.7,1432,3,1,0)
Operating Provider last name
"DATA",364.7,1433,0)
1733^N^5^^^^N
"DATA",364.7,1433,1)
S IBXDATA=$P($G(IBXSAVE("NAME")),",",2) K IBXSAVE("NAME")
"DATA",364.7,1433,3,0)
^^1^1^3061128^
"DATA",364.7,1433,3,1,0)
Operating Provider first name
"DATA",364.7,1434,0)
1734^N^5^^^^N
"DATA",364.7,1434,1)
N Z,Z0,Z1 F Z=1:1 Q:'$D(^TMP($J,"IBC-RC",Z))  S Z1=^(Z),Z0=$S(+Z1=1:$J($P(Z1,U,6),7),+Z1=2:$E($P(Z1,U,2),53,59),1:$E($P(Z1,U,2),48,54)) S:Z'>22 IBXDATA(Z)=Z0 D:Z>22 CKREV^IBCEF3(Z,Z0)
"DATA",364.7,1434,3,0)
^^13^13^3070125^
"DATA",364.7,1434,3,1,0)
This data element is a group data element where more than one occurrence
"DATA",364.7,1434,3,2,0)
might be expected.  It relies on the presence of data in array
"DATA",364.7,1434,3,3,0)
IBXSAVE("REV",n) extracted previously.  The first '^' piece of the array
"DATA",364.7,1434,3,4,0)
indicates whether this is a 'normal' service data line (=1) or a text line
"DATA",364.7,1434,3,5,0)
(=2 or =3).  For a normal service line, the data is found in the sixth '^'
"DATA",364.7,1434,3,6,0)
piece of the array.  For text line
"DATA",364.7,1434,3,7,0)
where the first piece = 2, the text is assumed to start in column 1, so the
"DATA",364.7,1434,3,8,0)
data is extracted from positions 53-59.  For text line where the first
"DATA",364.7,1434,3,9,0)
piece = 3, the text is assumed to start in column 6, so the data for this
"DATA",364.7,1434,3,10,0)
field is extracted from positions 48-54.
"DATA",364.7,1434,3,11,0)
Since only 22 lines of service line can appear on one form, if there
"DATA",364.7,1434,3,12,0)
are more than 22 lines, subsequent pages are forced for the remaining data
"DATA",364.7,1434,3,13,0)
lines after 22.
"DATA",364.7,1435,0)
1735^N^5^^^^N
"DATA",364.7,1435,1)
N Z,Z0,Z1 F Z=1:1 Q:'$D(^TMP($J,"IBC-RC",Z))  S Z1=^(Z),Z0=$S(+Z1=1:$$DOL^IBCEF77($P(Z1,U,7),10),+Z1=2:$E($P(Z1,U,2),60,69),1:$E($P(Z1,U,2),55,64)) S:Z'>22 IBXDATA(Z)=Z0 D:Z>22 CKREV^IBCEF3(Z,Z0)
"DATA",364.7,1435,3,0)
^^12^12^3070125^
"DATA",364.7,1435,3,1,0)
This data element is a group data element where more than one occurrence
"DATA",364.7,1435,3,2,0)
might be expected.  It relies on the presence of data in array
"DATA",364.7,1435,3,3,0)
IBXSAVE("REV",n) extracted previously.  The first '^' piece of the array
"DATA",364.7,1435,3,4,0)
indicates whether this is a 'normal' service data line (=1) or a text line
"DATA",364.7,1435,3,5,0)
(=2 or =3).  For a normal service line, the data is found in the seventh 
"DATA",364.7,1435,3,6,0)
'^' piece of the array.  For text line where the first piece = 2, the text
"DATA",364.7,1435,3,7,0)
is assumed to start in column 1, so the data is extracted from positions
"DATA",364.7,1435,3,8,0)
60-69.  For text line where the first piece = 3, the text is assumed to
"DATA",364.7,1435,3,9,0)
start in column 6, so the data for this field is extracted from positions
"DATA",364.7,1435,3,10,0)
55-64. Since only 22 lines of service line can appear on one form, if
"DATA",364.7,1435,3,11,0)
there are more than 22 lines, subsequent pages are forced for the
"DATA",364.7,1435,3,12,0)
remaining data lines after 22.
"DATA",364.7,1436,0)
1736^N^5^^^^N
"DATA",364.7,1436,1)
N IBZ D GETPRV^IBCEU(IBXIEN,9,.IBZ) S IBXSAVE("NAME")=$P($G(IBZ(9,1)),U),IBXDATA=$P(IBXSAVE("NAME"),",")
"DATA",364.7,1436,3,0)
^^1^1^3061128^
"DATA",364.7,1436,3,1,0)
Other Provider last name
"DATA",364.7,1437,0)
1737^N^5^^^^N
"DATA",364.7,1437,1)
S IBXDATA=$P($G(IBXSAVE("NAME")),",",2) K IBXSAVE("NAME")
"DATA",364.7,1437,3,0)
^^1^1^3061128^
"DATA",364.7,1437,3,1,0)
Other Provider first name
"DATA",364.7,1438,0)
1738^N^5^^^^N
"DATA",364.7,1438,1)
K IBXDATA
"DATA",364.7,1438,3,0)
^^1^1^3061128^
"DATA",364.7,1438,3,1,0)
This is the second other provider and it is not currently used.
"DATA",364.7,1439,0)
1739^N^5^^^^N
"DATA",364.7,1439,1)
K IBXDATA
"DATA",364.7,1439,3,0)
^^1^1^3061128^
"DATA",364.7,1439,3,1,0)
This is the second other provider and it is not currently used.
"DATA",364.7,1440,0)
1740^N^5^^^^N
"DATA",364.7,1440,1)
S IBXSAVE("BOX 76")=$$CFIDS^IBCEF77(IBXIEN,4,"^1A^1B^1C^1H^G2^LU^N5^"),IBXDATA=$P(IBXSAVE("BOX 76"),U,3)
"DATA",364.7,1440,3,0)
^^1^1^3061129^
"DATA",364.7,1440,3,1,0)
Attending Provider NPI if available
"DATA",364.7,1441,0)
1741^N^5^^^^N
"DATA",364.7,1441,1)
S IBXDATA=$P($G(IBXSAVE("BOX 76")),U,1)
"DATA",364.7,1441,3,0)
^364.73^1^1^3061129^^
"DATA",364.7,1441,3,1,0)
Legacy ID quailifer
"DATA",364.7,1442,0)
1742^N^5^^^^N
"DATA",364.7,1442,1)
S IBXDATA=$P($G(IBXSAVE("BOX 76")),U,2) K IBXSAVE("BOX 76")
"DATA",364.7,1442,3,0)
^^1^1^3061129^
"DATA",364.7,1442,3,1,0)
Attending legacy ID
"DATA",364.7,1443,0)
1743^N^5^^^^N
"DATA",364.7,1443,1)
S IBXSAVE("BOX 77")=$$CFIDS^IBCEF77(IBXIEN,2,"^1A^1B^1C^1H^G2^LU^N5^"),IBXDATA=$P(IBXSAVE("BOX 77"),U,3)
"DATA",364.7,1443,3,0)
^^1^1^3061129^
"DATA",364.7,1443,3,1,0)
Operating Provider NPI if available
"DATA",364.7,1444,0)
1744^N^5^^^^N
"DATA",364.7,1444,1)
S IBXDATA=$P($G(IBXSAVE("BOX 77")),U,1)
"DATA",364.7,1444,3,0)
^^1^1^3061129^
"DATA",364.7,1444,3,1,0)
Operating provider legacy ID if needed
"DATA",364.7,1445,0)
1745^N^5^^^^N
"DATA",364.7,1445,1)
S IBXDATA=$P($G(IBXSAVE("BOX 77")),U,2) K IBXSAVE("BOX 77")
"DATA",364.7,1445,3,0)
^^1^1^3061129^
"DATA",364.7,1445,3,1,0)
Operating legacy ID if needed
"DATA",364.7,1446,0)
1746^N^5^^^^N
"DATA",364.7,1446,1)
S IBXSAVE("BOX 78")=$$CFIDS^IBCEF77(IBXIEN,9,"^1A^1B^1C^1H^G2^LU^N5^"),IBXDATA=$P(IBXSAVE("BOX 78"),U,3)
"DATA",364.7,1446,3,0)
^^1^1^3061129^
"DATA",364.7,1446,3,1,0)
Other provider NPI if available
"DATA",364.7,1447,0)
1747^N^5^^^^N
"DATA",364.7,1447,1)
S IBXDATA=$P($G(IBXSAVE("BOX 78")),U,1)
"DATA",364.7,1447,3,0)
^^1^1^3061129^
"DATA",364.7,1447,3,1,0)
Other provider legacy ID qualifier if needed
"DATA",364.7,1448,0)
1748^N^5^^^^N
"DATA",364.7,1448,1)
S IBXDATA=$P($G(IBXSAVE("BOX 78")),U,2) K IBXSAVE("BOX 78")
"DATA",364.7,1448,3,0)
^^1^1^3061129^
"DATA",364.7,1448,3,1,0)
Other provider legacy ID if needed
"DATA",364.7,1449,0)
1749^N^5^^^^N
"DATA",364.7,1449,1)
N Z,Z0,Z1 F Z=1:1 Q:'$D(^TMP($J,"IBC-RC",Z))  S Z1=^(Z),Z0=$S(+Z1=1:$$DOL^IBCEF77($P(Z1,U,8),10),+Z1=2:$E($P(Z1,U,2),70,79),1:$E($P(Z1,U,2),65,74)) S:Z'>22 IBXDATA(Z)=Z0 D:Z>22 CKREV^IBCEF3(Z,Z0)
"DATA",364.7,1449,3,0)
^^12^12^3070125^
"DATA",364.7,1449,3,1,0)
This data element is a group data element where more than one occurrence
"DATA",364.7,1449,3,2,0)
might be expected.  It relies on the presence of data in array
"DATA",364.7,1449,3,3,0)
IBXSAVE("REV",n) extracted previously.  The first '^' piece of the array
"DATA",364.7,1449,3,4,0)
indicates whether this is a 'normal' service data line (=1) or a text line
"DATA",364.7,1449,3,5,0)
(=2 or =3).  For a normal service line, the data is found in the eighth 
"DATA",364.7,1449,3,6,0)
'^' piece of the array.  For text line where the first piece = 2, the text
"DATA",364.7,1449,3,7,0)
is assumed to start in column 1, so the data is extracted from positions
"DATA",364.7,1449,3,8,0)
70-79.  For text line where the first piece = 3, the text is assumed to
"DATA",364.7,1449,3,9,0)
start in column 6, so the data for this field is extracted from positions
"DATA",364.7,1449,3,10,0)
65-74. Since only 22 lines of service line can appear on one form, if
"DATA",364.7,1449,3,11,0)
there are more than 22 lines, subsequent pages are forced for the
"DATA",364.7,1449,3,12,0)
remaining data lines after 22.
"DATA",364.7,1450,0)
1750^N^5^^^^N
"DATA",364.7,1450,1)
K IBXDATA
"DATA",364.7,1450,3,0)
^364.73^1^1^3070125^^
"DATA",364.7,1450,3,1,0)
Reserved by the NUBC. This field is always blank.
"DATA",364.7,1451,0)
1751^N^5^^^^N
"DATA",364.7,1451,1)
K IBXDATA
"DATA",364.7,1451,3,0)
^^1^1^3061129^
"DATA",364.7,1451,3,1,0)
Not currently used
"DATA",364.7,1452,0)
1752^N^5^^^^N
"DATA",364.7,1452,1)
K IBXDATA
"DATA",364.7,1452,3,0)
^^1^1^3061129^
"DATA",364.7,1452,3,1,0)
Not currently used
"DATA",364.7,1453,0)
1753^N^5^^^^N
"DATA",364.7,1453,1)
K IBXDATA
"DATA",364.7,1453,3,0)
^^1^1^3061129^
"DATA",364.7,1453,3,1,0)
Not currently used
"DATA",364.7,1454,0)
1754^N^5^^^^N
"DATA",364.7,1454,1)
K IBXDATA
"DATA",364.7,1454,3,0)
^^1^1^3061129^
"DATA",364.7,1454,3,1,0)
Not currently used
"DATA",364.7,1455,0)
1755^N^5^^^^N
"DATA",364.7,1455,1)
K IBXDATA
"DATA",364.7,1455,3,0)
^^1^1^3061129^
"DATA",364.7,1455,3,1,0)
Not currently used
"DATA",364.7,1456,0)
1756^N^5^^^^N
"DATA",364.7,1456,1)
K IBXDATA
"DATA",364.7,1456,3,0)
^^1^1^3061130^
"DATA",364.7,1456,3,1,0)
This field is always blank.
"DATA",364.7,1457,0)
1757^N^121^^^^N
"DATA",364.7,1457,1)
N Z S Z=$$DT^IBCEFG1(IBXDATA,"","D6"),IBXDATA=$E(Z,3,6)_$E(Z,1,2)
"DATA",364.7,1457,3,0)
^^1^1^3061204^
"DATA",364.7,1457,3,1,0)
Bill creation date in MMDDYY format.
"DATA",364.7,1458,0)
1758^N^5^^^^N
"DATA",364.7,1458,1)
K IBXSAVE("OCCS")
"DATA",364.7,1458,3,0)
^^2^2^3061208^
"DATA",364.7,1458,3,1,0)
Format code for FL-35/3 and FL-36/3 grew too big.  So cleanup of the 
"DATA",364.7,1458,3,2,0)
array used is being done here.
"DATA",364.7,1459,0)
1759^N^5^^^^N
"DATA",364.7,1459,1)
N CCU,IBI,Z S (IBI,Z)=0 M CCU=IBXSAVE("CCU") K IBXDATA,IBXSAVE("CCU") F  S Z=$O(CCU(Z)) Q:Z=""  S IBI=IBI+1,IBXSAVE("CC",IBI)=$E(Z,2,99)
"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^y^p^^^^n^^n
"FIA",2,0,10)

"FIA",2,0,11)

"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
2.0^IB
"FIA",2,2)
1
"FIA",2,2.312)
1
"FIA",2,2.312,2.015)

"FIA",36)
INSURANCE COMPANY
"FIA",36,0)
^DIC(36,
"FIA",36,0,0)
36I
"FIA",36,0,1)
y^y^p^^^^n^^n
"FIA",36,0,10)

"FIA",36,0,11)

"FIA",36,0,"RLRO")

"FIA",36,0,"VR")
2.0^IB
"FIA",36,36)
1
"FIA",36,36,.11)

"FIA",36,36,.14)

"FIA",36,36,4.02)

"FIA",36,36,4.03)

"FIA",350.8)
IB ERROR
"FIA",350.8,0)
^IBE(350.8,
"FIA",350.8,0,0)
350.8I
"FIA",350.8,0,1)
n^n^f^^n^^y^o^n
"FIA",350.8,0,10)

"FIA",350.8,0,11)
I $F(".IB086.IB087.IB310.IB120.IB327.","."_$P($G(^IBE(350.8,+Y,0)),U,1)_".")
"FIA",350.8,0,"RLRO")

"FIA",350.8,0,"VR")
2.0^IB
"FIA",350.8,350.8)
0
"FIA",350.9)
IB SITE PARAMETERS
"FIA",350.9,0)
^IBE(350.9,
"FIA",350.9,0,0)
350.9I
"FIA",350.9,0,1)
y^y^p^^^^n^^n
"FIA",350.9,0,10)

"FIA",350.9,0,11)

"FIA",350.9,0,"RLRO")

"FIA",350.9,0,"VR")
2.0^IB
"FIA",350.9,350.9)
1
"FIA",350.9,350.9,1.04)

"FIA",350.9,350.9,1.05)

"FIA",350.9,350.9,1.31)

"FIA",350.9,350.9,1.33)

"FIA",350.9,350.9,2.1)

"FIA",353)
BILL FORM TYPE
"FIA",353,0)
^IBE(353,
"FIA",353,0,0)
353
"FIA",353,0,1)
y^n^p^^^^n^^n
"FIA",353,0,10)

"FIA",353,0,11)

"FIA",353,0,"RLRO")

"FIA",353,0,"VR")
2.0^IB
"FIA",353,353)
1
"FIA",353,353,.03)

"FIA",355.9)
IB BILLING PRACTITIONER ID
"FIA",355.9,0)
^IBA(355.9,
"FIA",355.9,0,0)
355.9IV
"FIA",355.9,0,1)
y^y^p^^^^n^^n
"FIA",355.9,0,10)

"FIA",355.9,0,11)

"FIA",355.9,0,"RLRO")

"FIA",355.9,0,"VR")
2.0^IB
"FIA",355.9,355.9)
1
"FIA",355.9,355.9,.04)

"FIA",355.91)
IB INSURANCE CO LEVEL BILLING PROV ID
"FIA",355.91,0)
^IBA(355.91,
"FIA",355.91,0,0)
355.91IP
"FIA",355.91,0,1)
y^y^p^^^^n^^n
"FIA",355.91,0,10)

"FIA",355.91,0,11)

"FIA",355.91,0,"RLRO")

"FIA",355.91,0,"VR")
2.0^IB
"FIA",355.91,355.91)
1
"FIA",355.91,355.91,.04)

"FIA",355.92)
FACILITY BILLING ID
"FIA",355.92,0)
^IBA(355.92,
"FIA",355.92,0,0)
355.92P
"FIA",355.92,0,1)
y^y^p^^^^n^^n
"FIA",355.92,0,10)

"FIA",355.92,0,11)

"FIA",355.92,0,"RLRO")

"FIA",355.92,0,"VR")
2.0^IB
"FIA",355.92,355.92)
1
"FIA",355.92,355.92,.04)

"FIA",355.96)
IB INS CO PROVIDER ID CARE UNIT
"FIA",355.96,0)
^IBA(355.96,
"FIA",355.96,0,0)
355.96IP
"FIA",355.96,0,1)
y^y^p^^^^n^^n
"FIA",355.96,0,10)

"FIA",355.96,0,11)

"FIA",355.96,0,"RLRO")

"FIA",355.96,0,"VR")
2.0^IB
"FIA",355.96,355.96)
1
"FIA",355.96,355.96,.04)

"FIA",364.1)
EDI TRANSMISSION BATCH
"FIA",364.1,0)
^IBA(364.1,
"FIA",364.1,0,0)
364.1I
"FIA",364.1,0,1)
y^y^p^^^^n^^n
"FIA",364.1,0,10)

"FIA",364.1,0,11)

"FIA",364.1,0,"RLRO")

"FIA",364.1,0,"VR")
2.0^IB
"FIA",364.1,364.1)
1
"FIA",364.1,364.1,.06)

"FIA",364.4)
IB EDI TRANSMISSION RULE
"FIA",364.4,0)
^IBE(364.4,
"FIA",364.4,0,0)
364.4I
"FIA",364.4,0,1)
y^y^p^^^^n^^n
"FIA",364.4,0,10)

"FIA",364.4,0,11)

"FIA",364.4,0,"RLRO")

"FIA",364.4,0,"VR")
2.0^IB
"FIA",364.4,364.4)
1
"FIA",364.4,364.4,.05)

"FIA",364.4,364.4,.1)

"FIA",364.4,364.4,.11)

"FIA",364.4,364.41)
1
"FIA",364.4,364.41,.01)

"FIA",364.5)
IB DATA ELEMENT DEFINITION
"FIA",364.5,0)
^IBA(364.5,
"FIA",364.5,0,0)
364.5I
"FIA",364.5,0,1)
n^n^f^^y^^y^o^n
"FIA",364.5,0,10)

"FIA",364.5,0,11)
I $$INCLUDE^IBY349PR(5,Y)
"FIA",364.5,0,"RLRO")

"FIA",364.5,0,"VR")
2.0^IB
"FIA",364.5,364.5)
0
"FIA",364.5,364.53)
0
"FIA",364.6)
IB FORM SKELETON DEFINITION
"FIA",364.6,0)
^IBA(364.6,
"FIA",364.6,0,0)
364.6IP
"FIA",364.6,0,1)
n^n^f^^y^^y^o^n
"FIA",364.6,0,10)

"FIA",364.6,0,11)
I $$INCLUDE^IBY349PR(6,Y)
"FIA",364.6,0,"RLRO")

"FIA",364.6,0,"VR")
2.0^IB
"FIA",364.6,364.6)
0
"FIA",364.7)
IB FORM FIELD CONTENT
"FIA",364.7,0)
^IBA(364.7,
"FIA",364.7,0,0)
364.7IP
"FIA",364.7,0,1)
n^n^f^^y^^y^o^n
"FIA",364.7,0,10)

"FIA",364.7,0,11)
I $$INCLUDE^IBY349PR(7,Y)
"FIA",364.7,0,"RLRO")

"FIA",364.7,0,"VR")
2.0^IB
"FIA",364.7,364.7)
0
"FIA",364.7,364.73)
0
"FIA",399)
BILL/CLAIMS
"FIA",399,0)
^DGCR(399,
"FIA",399,0,0)
399I
"FIA",399,0,1)
y^y^p^^^^n^^n
"FIA",399,0,10)

"FIA",399,0,11)

"FIA",399,0,"RLRO")

"FIA",399,0,"VR")
2.0^IB
"FIA",399,399)
1
"FIA",399,399,.04)

"FIA",399,399,.05)

"FIA",399,399,.06)

"FIA",399,399,.24)

"FIA",399,399,.25)

"FIA",399,399,.26)

"FIA",399,399,110)

"FIA",399,399,122)

"FIA",399,399,123)

"FIA",399,399,124)

"FIA",399,399,163)

"FIA",399,399,204)

"FIA",399,399,205)

"FIA",399,399,206)

"FIA",399,399,207)

"FIA",399,399,208)

"FIA",399,399,213)

"FIA",399,399,215)

"FIA",399,399,216)

"FIA",399,399,217)

"FIA",399,399,221)

"FIA",399,399,230)

"FIA",399,399,231)

"FIA",399,399,401)

"FIA",399,399,402)

"FIA",399,399,450)

"FIA",399,399,451)

"FIA",399,399,452)

"FIA",399,399,453)

"FIA",399,399,454)

"FIA",399,399,455)

"FIA",399,399,456)

"FIA",399,399,457)

"FIA",399,399,458)

"FIA",399,399.0304)
1
"FIA",399,399.0304,3)

"FIA",399,399.0304,9)

"FIA",399,399.0304,10)

"FIA",399,399.0304,11)

"FIA",399,399.0304,12)

"FIA",399,399.0304,13)

"FIA",399,399.042)
1
"FIA",399,399.042,.13)

"FIA",399.1)
MCCR UTILITY
"FIA",399.1,0)
^DGCR(399.1,
"FIA",399.1,0,0)
399.1I
"FIA",399.1,0,1)
y^y^p^^^^n^^n
"FIA",399.1,0,10)

"FIA",399.1,0,11)

"FIA",399.1,0,"RLRO")

"FIA",399.1,0,"VR")
2.0^IB
"FIA",399.1,399.1)
1
"FIA",399.1,399.1,.16)

"FIA",399.4)
MCCR INCONSISTENT DATA ELEMENTS
"FIA",399.4,0)
^DGCR(399.4,
"FIA",399.4,0,0)
399.4
"FIA",399.4,0,1)
y^n^f^^^^n
"FIA",399.4,0,10)

"FIA",399.4,0,11)

"FIA",399.4,0,"RLRO")

"FIA",399.4,0,"VR")
2.0^IB
"FIA",399.4,399.4)
0
"INI")
IBY349PR
"INIT")
IBY349PO
"IX",355.9,355.9,"AUNIQ",0)
355.9^AUNIQ^Xref by provider,ins co(or ALL),care unit,form type,pt stat,prov type^MU^^R^IR^I^355.9^^^^^S
"IX",355.9,355.9,"AUNIQ",.1,0)
^^3^3^3000906^^
"IX",355.9,355.9,"AUNIQ",.1,1,0)
This cross reference provides an index to insure that each record in this
"IX",355.9,355.9,"AUNIQ",.1,2,0)
file has a unique combination of provider,insurance company, form type,
"IX",355.9,355.9,"AUNIQ",.1,3,0)
patient status and provider id type.
"IX",355.9,355.9,"AUNIQ",1)
S ^IBA(355.9,"AUNIQ",X(1),$E(X(2),1,30),$E(X(3),1,30),X(4),X(5),X(6),DA)=""
"IX",355.9,355.9,"AUNIQ",2)
K ^IBA(355.9,"AUNIQ",X(1),$E(X(2),1,30),$E(X(3),1,30),X(4),X(5),X(6),DA)
"IX",355.9,355.9,"AUNIQ",2.5)
K ^IBA(355.9,"AUNIQ")
"IX",355.9,355.9,"AUNIQ",11.1,0)
^.114IA^11^6
"IX",355.9,355.9,"AUNIQ",11.1,1,0)
1^F^355.9^.01^^1^F
"IX",355.9,355.9,"AUNIQ",11.1,6,0)
5^F^355.9^.05^^5^F
"IX",355.9,355.9,"AUNIQ",11.1,8,0)
2^F^355.9^.15^30^2^F
"IX",355.9,355.9,"AUNIQ",11.1,9,0)
3^F^355.9^.16^30^3^F
"IX",355.9,355.9,"AUNIQ",11.1,10,0)
6^F^355.9^.06^^6^F
"IX",355.9,355.9,"AUNIQ",11.1,11,0)
4^F^355.9^.04^^4^F
"IX",355.91,355.91,"AUNIQ",0)
355.91^AUNIQ^Xref by ins co,care unit,form type,pt stat,prov type^MU^^R^IR^I^355.91^^^^^S
"IX",355.91,355.91,"AUNIQ",.1,0)
^^3^3^3000906^
"IX",355.91,355.91,"AUNIQ",.1,1,0)
This cross reference provides an index to insure that each record in this
"IX",355.91,355.91,"AUNIQ",.1,2,0)
file has a unique combination of insurance company, form type, patient
"IX",355.91,355.91,"AUNIQ",.1,3,0)
status and provider id type.
"IX",355.91,355.91,"AUNIQ",1)
S ^IBA(355.91,"AUNIQ",X(1),$S(X(2):$E(X(2),1,30),1:"*N/A*"),X(3),X(4),X(5),DA)=""
"IX",355.91,355.91,"AUNIQ",2)
K ^IBA(355.91,"AUNIQ",X(1),$S(X(2):$E(X(2),1,30),1:"*N/A*"),X(3),X(4),X(5),DA)
"IX",355.91,355.91,"AUNIQ",2.5)
K ^IBA(355.91,"AUNIQ")
"IX",355.91,355.91,"AUNIQ",11.1,0)
^.114IA^5^5
"IX",355.91,355.91,"AUNIQ",11.1,1,0)
1^F^355.91^.01^^1^F
"IX",355.91,355.91,"AUNIQ",11.1,2,0)
2^F^355.91^.1^30^2^F
"IX",355.91,355.91,"AUNIQ",11.1,3,0)
3^F^355.91^.04^^3^F
"IX",355.91,355.91,"AUNIQ",11.1,4,0)
4^F^355.91^.05^^4^F
"IX",355.91,355.91,"AUNIQ",11.1,5,0)
5^F^355.91^.06^^5^F
"IX",355.92,355.92,"AUNIQ",0)
355.92^AUNIQ^Xref by ins co,care unit,form type,division,prov id type^MU^^R^IR^I^355.92^^^^^S
"IX",355.92,355.92,"AUNIQ",.1,0)
^^2^2^3060920
"IX",355.92,355.92,"AUNIQ",.1,1,0)
This cross reference allows edits to the additonal provider id's to be 
"IX",355.92,355.92,"AUNIQ",.1,2,0)
replicated to linked insurance companies.
"IX",355.92,355.92,"AUNIQ",1)
S ^IBA(355.92,"AUNIQ",X(1),$E(X(2),1,30),X(3),X(4),X(5),DA)=""
"IX",355.92,355.92,"AUNIQ",1.4)
S X=0 I X(1)]"",X(2)]"",X(3)]"",X(4)]"",X(5)]"",$P($G(^IBA(355.92,DA,0)),U,8)="A" S X=1
"IX",355.92,355.92,"AUNIQ",2)
K ^IBA(355.92,"AUNIQ",X(1),$E(X(2),1,30),X(3),X(4),X(5),DA)
"IX",355.92,355.92,"AUNIQ",2.4)
S X=0 I X(1)]"",X(2)]"",X(3)]"",X(4)]"",X(5)]"" S X=1
"IX",355.92,355.92,"AUNIQ",2.5)
K ^IBA(355.92,"AUNIQ")
"IX",355.92,355.92,"AUNIQ",11.1,0)
^.114IA^5^5
"IX",355.92,355.92,"AUNIQ",11.1,1,0)
1^F^355.92^.01^^^F
"IX",355.92,355.92,"AUNIQ",11.1,2,0)
2^F^355.92^.1^30^^F
"IX",355.92,355.92,"AUNIQ",11.1,3,0)
3^F^355.92^.04^^^F
"IX",355.92,355.92,"AUNIQ",11.1,4,0)
4^F^355.92^.11^^^F
"IX",355.92,355.92,"AUNIQ",11.1,5,0)
5^F^355.92^.06^^^F
"IX",355.96,355.96,"AD",0)
355.96^AD^Xref by insurance co, form type, bill care type, provider type^R^^R^IR^I^355.96^^^^^S
"IX",355.96,355.96,"AD",1)
S ^IBA(355.96,"AD",X(1),X(2),X(3),X(4),DA)=""
"IX",355.96,355.96,"AD",2)
K ^IBA(355.96,"AD",X(1),X(2),X(3),X(4),DA)
"IX",355.96,355.96,"AD",2.5)
K ^IBA(355.96,"AD")
"IX",355.96,355.96,"AD",11.1,0)
^.114IA^4^4
"IX",355.96,355.96,"AD",11.1,1,0)
1^F^355.96^.03^^1^F
"IX",355.96,355.96,"AD",11.1,1,3)

"IX",355.96,355.96,"AD",11.1,2,0)
2^F^355.96^.04^^2^F
"IX",355.96,355.96,"AD",11.1,2,3)

"IX",355.96,355.96,"AD",11.1,3,0)
3^F^355.96^.05^^3^F
"IX",355.96,355.96,"AD",11.1,3,3)

"IX",355.96,355.96,"AD",11.1,4,0)
4^F^355.96^.06^^4^F
"IX",355.96,355.96,"AD",11.1,4,3)

"IX",355.96,355.96,"AUNIQ",0)
355.96^AUNIQ^Xref by ins co,care unit,form type,pt stat,prov type^R^^R^IR^I^355.96^^^^^S
"IX",355.96,355.96,"AUNIQ",.1,0)
^^3^3^3010801^
"IX",355.96,355.96,"AUNIQ",.1,1,0)
This cross reference provides an index to insure that each record in this
"IX",355.96,355.96,"AUNIQ",.1,2,0)
file has a unique combination of insurance company, form type, bill type
"IX",355.96,355.96,"AUNIQ",.1,3,0)
and provider id type.
"IX",355.96,355.96,"AUNIQ",1)
S ^IBA(355.96,"AUNIQ",X(1),X(2),X(3),X(4),X(5),DA)=""
"IX",355.96,355.96,"AUNIQ",2)
K ^IBA(355.96,"AUNIQ",X(1),X(2),X(3),X(4),X(5),DA)
"IX",355.96,355.96,"AUNIQ",2.5)
K ^IBA(355.96,"AUNIQ")
"IX",355.96,355.96,"AUNIQ",11.1,0)
^.114IA^5^5
"IX",355.96,355.96,"AUNIQ",11.1,1,0)
1^F^355.96^.03^^1^F
"IX",355.96,355.96,"AUNIQ",11.1,2,0)
2^F^355.96^.01^^2^F
"IX",355.96,355.96,"AUNIQ",11.1,3,0)
3^F^355.96^.04^^3^F
"IX",355.96,355.96,"AUNIQ",11.1,4,0)
4^F^355.96^.05^^4^F
"IX",355.96,355.96,"AUNIQ",11.1,5,0)
5^F^355.96^.06^^5^F
"IX",364.4,364.4,"AD",0)
364.4^AD^Sets the first level of xref to determine which edits are most general.^MU^^R^IR^I^364.4^^^^^S
"IX",364.4,364.4,"AD",1)
S ^IBE(364.4,"AD",X2(1),X2(2),$S(X2(3)=3:X2(3),X2(6)=0:X2(3)#2+1,1:X2(3)),X2(4),DA)=+X2(5)
"IX",364.4,364.4,"AD",1.4)
I X2(1)=""!(X2(2)="")!(X2(3)="")!(X2(4)="") S X=0
"IX",364.4,364.4,"AD",2)
K ^IBE(364.4,"AD",X1(1),X1(2),$S(X1(3)=3:X1(3),X1(6)=0:X1(3)#2+1,1:X1(3)),X1(4),DA)
"IX",364.4,364.4,"AD",2.4)
I X1(1)=""!(X1(2)="")!(X1(3)="")!(X1(4)="") S X=0
"IX",364.4,364.4,"AD",2.5)
K ^IBE(364.4,"AD")
"IX",364.4,364.4,"AD",11.1,0)
^.114IA^6^6
"IX",364.4,364.4,"AD",11.1,1,0)
1^F^364.4^.03^^1^F
"IX",364.4,364.4,"AD",11.1,2,0)
2^F^364.4^.04^^2^F
"IX",364.4,364.4,"AD",11.1,3,0)
3^F^364.4^.05^^3^F
"IX",364.4,364.4,"AD",11.1,4,0)
4^F^364.4^.07^^4^F
"IX",364.4,364.4,"AD",11.1,5,0)
5^F^364.4^.06^^^F
"IX",364.4,364.4,"AD",11.1,6,0)
6^F^364.4^.11^^^F
"IX",364.6,364.6,"ALL",0)
364.6^ALL^Allows for identification of local override fields that apply to ALL^MU^^F^IR^I^364.6^^^^^S
"IX",364.6,364.6,"ALL",1)
S ^IBA(364.7,"ALL",DA,X2(5))=""
"IX",364.6,364.6,"ALL",1.4)
I X2(4)'="L"!'X2(5)!(X2(2)'="")!(X2(3)'="")!'X2(1) S X=0
"IX",364.6,364.6,"ALL",2)
K ^IBA(364.7,"ALL",DA,X1(5))
"IX",364.6,364.6,"ALL",2.4)
I X1(4)'="L"!'X1(5)!(X1(2)'="")!(X1(3)'="")!'X1(1) S X=0
"IX",364.6,364.6,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.6,364.6,"ALL",11.1,0)
^.114IA^5^5
"IX",364.6,364.6,"ALL",11.1,1,0)
1^F^364.6^.03^^1^F
"IX",364.6,364.6,"ALL",11.1,1,1)
 
"IX",364.6,364.6,"ALL",11.1,2,0)
2^C
"IX",364.6,364.6,"ALL",11.1,2,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,5)
"IX",364.6,364.6,"ALL",11.1,3,0)
3^C
"IX",364.6,364.6,"ALL",11.1,3,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,6)
"IX",364.6,364.6,"ALL",11.1,4,0)
4^C
"IX",364.6,364.6,"ALL",11.1,4,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,2)
"IX",364.6,364.6,"ALL",11.1,5,0)
5^C
"IX",364.6,364.6,"ALL",11.1,5,1.5)
S X=+$O(^IBA(364.7,"B",DA,0))
"IX",364.6,364.6,"D",0)
364.6^D^XREF BY FORM,PAGE,LINE,COL TO SIMPLIFY DEVELOPMENT^MU^^R^IR^I^364.6^^^^^LS
"IX",364.6,364.6,"D",1)
S ^IBA(364.6,"D",X2(1)_","_X2(2)_","_X2(3)_","_X2(4),DA)=""
"IX",364.6,364.6,"D",1.4)
I X2(1)=""!(X2(2)="")!(X2(3)="")!(X2(4)="") S X=0
"IX",364.6,364.6,"D",2)
K ^IBA(364.6,"D",X1(1)_","_X1(2)_","_X1(3)_","_X1(4),DA)
"IX",364.6,364.6,"D",2.4)
I X1(1)=""!(X1(2)="")!(X1(3)="")!(X1(4)="") S X=0
"IX",364.6,364.6,"D",2.5)
K ^IBA(364.6,"D")
"IX",364.6,364.6,"D",11.1,0)
^.114IA^4^4
"IX",364.6,364.6,"D",11.1,1,0)
1^F^364.6^.01^^1^F
"IX",364.6,364.6,"D",11.1,2,0)
2^F^364.6^.04^^^F
"IX",364.6,364.6,"D",11.1,3,0)
3^F^364.6^.05^^^F
"IX",364.6,364.6,"D",11.1,4,0)
4^F^364.6^.08^^^F
"IX",364.7,364.7,"ALL",0)
364.7^ALL^Xref contains all local overrides defined for all insurance and type^MU^^F^IR^I^364.7^^^^^S
"IX",364.7,364.7,"ALL",1)
S ^IBA(364.7,"ALL",X2(2),DA)=""
"IX",364.7,364.7,"ALL",1.4)
I 'X2(2)!(X2(4)'="")!(X2(5)'="")!(X2(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2)
K ^IBA(364.7,"ALL",X1(2),DA)
"IX",364.7,364.7,"ALL",2.4)
I 'X1(2)!(X1(4)'="")!(X1(5)'="")!(X1(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.7,364.7,"ALL",11.1,0)
^.114IA^5^5
"IX",364.7,364.7,"ALL",11.1,1,0)
1^F^364.7^.01^15^^F
"IX",364.7,364.7,"ALL",11.1,1,3)
 
"IX",364.7,364.7,"ALL",11.1,2,0)
2^C^^^10^1
"IX",364.7,364.7,"ALL",11.1,2,1.5)
S X=$P($G(^IBA(364.6,+X(1),0)),U,3)
"IX",364.7,364.7,"ALL",11.1,3,0)
3^F^364.7^.02^10^^F
"IX",364.7,364.7,"ALL",11.1,3,3)
 
"IX",364.7,364.7,"ALL",11.1,4,0)
4^F^364.7^.05^20^^F
"IX",364.7,364.7,"ALL",11.1,4,3)
 
"IX",364.7,364.7,"ALL",11.1,5,0)
5^F^364.7^.06^20^^F
"IX",364.7,364.7,"ALL",11.1,5,3)
 
"KRN",.402,1071,-1)
0^6
"KRN",.402,1071,0)
IB SCREEN1^3070207.1847^@^399^^@^3070215
"KRN",.402,1071,"%D",0)
^^1^1^2920708^^
"KRN",.402,1071,"%D",1,0)
Enter/Edit billing screen 1, demographic information.
"KRN",.402,1071,"AR",2,534)
1^IBXSC118
"KRN",.402,1071,"DIAB",1,0,399,0)
PATIENT NAME:
"KRN",.402,1071,"DIAB",1,2,2.01,0)
ALL
"KRN",.402,1071,"DR",1,399)
^2^DPT(^^S I(0,0)=D0 S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");S:IBDR20'["16" Y="@18";I $D(DFN) D DIS^DGRPDB W !!;.18;@18;D:IBDR20[11 DEM^VADPT;
"KRN",.402,1071,"DR",2,2)
S:IBDR20'["11" Y="@12";.03;@12;S:IBDR20'["12" Y="@13";1;@13;S:IBDR20'["13" Y="@14";.02;.05;@14;S:IBDR20'["14" Y="@15";1901;.361;@15;S:IBDR20'["15" Y="@16";S:$$EDADDR^IBCSCE(+$G(DFN)) Y="@155";.111;S:X="" Y=.114;.112;S:X="" Y=.114;
"KRN",.402,1071,"DR",2,2,1)
.113;.114;.115;.1112;.117;.131;@155;.12105;S:X="N" Y="@915" S:X="Y" DIE("NO^")="";.1217;I X']"" W !?4,*7,"But I need a Start Date for this Temporary Address." S Y=.12105;.1218;.1211;
"KRN",.402,1071,"DR",2,2,2)
I X']"" W !?4,*7,"But I need at least one line of a Temporary address." S Y=.12105;.1212;S:X']"" Y=.1214;.1213;.1214;.1215;.12112;.1219;@915;K DIE("NO^");@16;
"KRN",.402,1071,"DR",3,2.01)
.01:1
"KRN",.402,1071,"ROU")
^IBXSC1
"KRN",.402,1071,"ROUOLD")
IBXSC1
"KRN",.402,1074,-1)
0^8
"KRN",.402,1074,0)
IB SCREEN4^3070328.152^@^399^^@^3070330
"KRN",.402,1074,"%D",0)
^^1^1^3070328^
"KRN",.402,1074,"%D",1,0)
IB billing screen 4 is for Inpatient information.
"KRN",.402,1074,"DIAB",1,1,399.04,0)
ALL
"KRN",.402,1074,"DIAB",1,1,399.048,0)
OTHER CARE;"SNF/SA CARE"
"KRN",.402,1074,"DIAB",8,0,399,0)
OTHER CARE;"SNF/SA CARE"
"KRN",.402,1074,"DR",1,399)
S:IBDR20'["41" Y="@42";I $P($G(^DGCR(399,DA,0)),U,8) S Y="@411";159.5//^S X="12AM";@411;160;159;158;48SNF/SA CARE~;@42;S:IBDR20'["42" Y="@43";162;@43;@45;@46;S:IBDR20'["46" Y="@47";41;@47;S:IBDR20'["47" Y="@44";40;@44;
"KRN",.402,1074,"DR",1,399,1)
S:IBDR20'["44" Y="@48";S IBZ20=$P(^DGCR(399,DA,0),U,9);.09;S IBPROT=X;D PRO^IBCSC4B;S IBASKCOD=1;@48;S:IBDR20'["48" Y="@49";I $P(^DGCR(399,DA,0),U,19)=2 S Y="@49";47;@49;
"KRN",.402,1074,"DR",2,399.04)
.01
"KRN",.402,1074,"DR",2,399.041)
.01;.02;I $P($G(^DGCR(399.1,+^DGCR(399,DA(1),"OC",DA,0),0)),U,9)'=2 S Y="@454";.03;S Y="@455";@454;I '$P(^DGCR(399.1,+^DGCR(399,DA(1),"OC",DA,0),0),U,10) S Y="@455";.04;@455;
"KRN",.402,1074,"DR",2,399.047)
.01;.02;
"KRN",.402,1074,"DR",2,399.048)
.01SNF/SA CARE~;.02;.03;S DGRVRCAL=1;
"KRN",.402,1074,"ROU")
^IBXSC4
"KRN",.402,1074,"ROUOLD")
IBXSC4
"KRN",.402,1076,-1)
0^4
"KRN",.402,1076,0)
IB SCREEN6^3070213.145^@^399^^@^3070213
"KRN",.402,1076,"DIAB",4,0,399,1)
UB-04 TIMEFRAME OF BILL;TIMEFRAME OF BILL~
"KRN",.402,1076,"DIAB",5,0,399,0)
UB-04 LOCATION OF CARE;LOCATION OF CARE~
"KRN",.402,1076,"DIAB",7,0,399,0)
UB-04 BILL CLASSIFICATION;BILL CLASSIFICATION~
"KRN",.402,1076,"DR",1,399)
S:IBDR20'["61" Y="@62";S:$P($G(^DGCR(399,DA,0)),U,19)'=3 Y="@612";@611;S DIE("NO^")="";.24LOCATION OF CARE~~;S:'$D(DIE("NO^")) DIE("NO^")="";.25BILL CLASSIFICATION~~;
"KRN",.402,1076,"DR",1,399,1)
I '$$TOBIN^IBCU4($P(^DGCR(399,DA,0),U,25),DA) W !!,*7,"  **  The 'BILL CLASSIFICATION' must be consistent with the 'LOCATION OF CARE.'",! S Y="@611";@612;K DIE("NO^");.26TIMEFRAME OF BILL~~;216;217;
"KRN",.402,1076,"DR",1,399,2)
I '$$INPAT^IBCEF(DA)!($$FT^IBCEF(DA)'=3) S Y="@6121";221;@6121;.22;243;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,2),"Default Division");.27;S DGRVRCAL=1;S DIPA("FT1")=$P($G(^DGCR(399,DA,0)),U,19);D CKFT^IBCIUT1(IBIFN);@614;.19;
"KRN",.402,1076,"DR",1,399,3)
S DIPA("FT")=$P($G(^DGCR(399,DA,0)),U,19);I $P($G(^IBE(353,+DIPA("FT"),2)),U,2)="P",$P($G(^(2)),U,4) S DIPA("FT1")=DIPA("FT") D CKFT^IBCIUT1(IBIFN) S Y="@615";W !,*7,"Must be a printable national form type";
"KRN",.402,1076,"DR",1,399,4)
.19///^S X=$G(DIPA("FT1"));S Y="@614";@615;D FTPRV^IBCEU5(DA);@62;S:IBDR20'["62" Y="@63";155;S:X=0 Y=156;157;156;S:'$D(IBOX) Y="@63";153;@63;S:IBDR20'["63" Y="@64";151;152;@64;S:IBDR20'["64" Y="@65";161;165;@65;
"KRN",.402,1076,"DR",1,399,5)
S:IBDR20'["65" Y="@66";D RCD^IBCU1;42;202;S:'X Y="@657";203;@657;I $P(^DGCR(399,DA,"U1"),"^",11)']"" S Y="@66";210;@66;@67;S:IBDR20'["67" Y="@68";S:'$D(^DGCR(399,DA,"I1")) Y="@672";218;@672;S:'$D(^DGCR(399,DA,"I2")) Y="@673";219;
"KRN",.402,1076,"DR",1,399,6)
@673;S:'$D(^DGCR(399,DA,"I3")) Y="@68";220;@68;K DIE("NO^");
"KRN",.402,1076,"DR",2,399.042)
.01;.02;.03;.04;.05;.09;.06;I '$P(^DGCR(399,DA(1),"RC",DA,0),U,6) S Y="@658";.07;@658;I +$P(^DGCR(399,DA(1),"RC",DA,0),U,8) S Y="@659";.1;.12;
"KRN",.402,1076,"DR",2,399.042,1)
I $P($G(^DGCR(399,DA(1),"RC",DA,0)),U,10)'=4!'$P(^DGCR(399,DA(1),"RC",DA,0),U,6) S Y="@659";D LINKCPT^IBCEU5(DA(1),DA);@659;
"KRN",.402,1076,"ROU")
^IBXSC6
"KRN",.402,1076,"ROUOLD")
IBXSC6
"KRN",.402,1077,-1)
0^5
"KRN",.402,1077,0)
IB SCREEN7^3070110.1158^@^399^^@^3070215
"KRN",.402,1077,"DIAB",1,1,399.043,0)
ALL
"KRN",.402,1077,"DIAB",4,0,399,1)
UB-04 TIMEFRAME OF BILL;TIMEFRAME OF BILL~
"KRN",.402,1077,"DIAB",11,0,399,0)
UB-04 LOCATION OF CARE;LOCATION OF CARE~
"KRN",.402,1077,"DIAB",13,0,399,0)
UB-04 BILL CLASSIFICATION;BILL CLASSIFICATION~
"KRN",.402,1077,"DR",1,399)
S:IBDR20'["74" Y="@71";S:$D(IBOUT) Y="@999";43;@999;K IBOUT;@71;S:IBDR20'["71" Y="@72";S:$P($G(^DGCR(399,DA,0)),U,19)'=3 Y="@712";@711;S DIE("NO^")="";.24LOCATION OF CARE~~;S:'$D(DIE("NO^")) DIE("NO^")="";.25BILL CLASSIFICATION~~;
"KRN",.402,1077,"DR",1,399,1)
I '$$TOBIN^IBCU4($P(^DGCR(399,DA,0),U,25),DA) W !!,*7,"  **  The 'BILL CLASSIFICATION' must be consistent with the 'LOCATION OF CARE.'",! S Y="@711";@712;K DIE("NO^");.26TIMEFRAME OF BILL~~;216;217;162;.22;243;
"KRN",.402,1077,"DR",1,399,2)
D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,2),"Default Division");.27;S DGRVRCAL=1;S DIPA("FT1")=$P($G(^DGCR(399,DA,0)),U,19);D CKFT^IBCIUT1(IBIFN);@714;.19;S DIPA("FT")=$P($G(^DGCR(399,DA,0)),U,19);
"KRN",.402,1077,"DR",1,399,3)
I $P($G(^IBE(353,+DIPA("FT"),2)),U,2)="P",$P($G(^(2)),U,4) S DIPA("FT1")=DIPA("FT") D CKFT^IBCIUT1(IBIFN) S Y="@715";W !,*7,"Must be a printable national form type";.19///^S X=$G(DIPA("FT1"));S Y="@714";@715;D FTPRV^IBCEU5(DA);@72;
"KRN",.402,1077,"DR",1,399,4)
S:IBDR20'["72" Y="@73";155;S:X=0 Y=156;157;156;S:'$D(IBOX) Y="@73";153;@73;S:IBDR20'["73" Y="@75";151;152;@75;S:IBDR20'["75" Y="@76";D RCD^IBCU1;42;202;S:'X Y="@757";203;@757;I $P(^DGCR(399,DA,"U1"),"^",11)']"" S Y="@76";210;@76;
"KRN",.402,1077,"DR",1,399,5)
@77;S:IBDR20'["77" Y="@78";S:'$D(^DGCR(399,DA,"I1")) Y="@772";218;@772;S:'$D(^DGCR(399,DA,"I2")) Y="@773";219;@773;S:'$D(^DGCR(399,DA,"I3")) Y="@78";220;@78;K DIE("NO^");
"KRN",.402,1077,"DR",2,399.042)
.01;.02;.03;.04;.05;.06;I '$P(^DGCR(399,DA(1),"RC",DA,0),U,6) S Y="@758";.07//^S X=$$DEFDIV^IBCU7(DA(1));@758;I +$P(^DGCR(399,DA(1),"RC",DA,0),U,8) W !," AUTO ADDED CHARGE - NO CHANGE TO TYPE/COMPONENT" S Y="@759";.1;.12;
"KRN",.402,1077,"DR",2,399.042,1)
I $S($P($G(^DGCR(399,DA(1),"RC",DA,0)),U,10)=3:0,1:$P($G(^(0)),U,10)'=4)!$P($G(^(0)),U,8) S Y="@759";I $P($G(^DGCR(399,DA(1),"RC",DA,0)),U,10)=4 S Y="@7581";S DGRVRCAL=1;D LINKRX^IBCEU5(DA(1),DA);.15;S Y="@759";@7581;
"KRN",.402,1077,"DR",2,399.042,2)
D LINKCPT^IBCEU5(DA(1),DA);@759;
"KRN",.402,1077,"DR",2,399.043)
.01
"KRN",.402,1077,"ROU")
^IBXSC7
"KRN",.402,1077,"ROUOLD")
IBXSC7
"KRN",.402,1079,-1)
0^7
"KRN",.402,1079,0)
IB SCREEN8^3070116.1847^@^399^^@^3000801
"KRN",.402,1079,"DR",1,399)
S:IBDR20'["81" Y="@82";208;@82;S:IBDR20'["82" Y="@83";@83;S:IBDR20'["83" Y="@84";@84;S:IBDR20'["84" Y="@85";@85;S:IBDR20'["85" Y="@86";207;@86;S:IBDR20'["86" Y="@87";213;@87;S:IBDR20'["87" Y="@88";@88;S:IBDR20'["88" Y="@89";163;
"KRN",.402,1079,"DR",1,399,1)
@89;
"KRN",.402,1079,"ROU")
^IBXSC8
"KRN",.402,1079,"ROUOLD")
IBXSC8
"KRN",.402,1080,-1)
0^1
"KRN",.402,1080,0)
IB SCREEN8H^3070302.1632^@^399^^@^3070330
"KRN",.402,1080,"%D",0)
^^1^1^3070110^
"KRN",.402,1080,"%D",1,0)
Billing screen 8 input template for form type CMS-1500.
"KRN",.402,1080,"DIAB",1,0,399,1)
TREATMENT AUTHORIZATION CODE;"PRIMARY AUTHORIZATION CODE"
"KRN",.402,1080,"DIAB",1,0,399,3)
NON-VA FACILITY:
"KRN",.402,1080,"DIAB",4,1,399.0222,5)
PRIM INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1080,"DIAB",5,1,399.0222,5)
PRIMARY INS CO ID NUMBER;T
"KRN",.402,1080,"DIAB",8,0,399,0)
453;T
"KRN",.402,1080,"DIAB",8,1,399.0222,5)
SEC INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1080,"DIAB",9,1,399.0222,5)
SECONDARY INS CO ID NUMBER;T
"KRN",.402,1080,"DIAB",10,0,399,0)
454;T
"KRN",.402,1080,"DIAB",12,0,399,4)
D ASK19^IBCEU3(DA);X
"KRN",.402,1080,"DIAB",12,1,399.0222,5)
TERT INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1080,"DIAB",13,1,399.0222,5)
TERTIARY INS CO ID NUMBER;T
"KRN",.402,1080,"DR",1,399)
K DIPA S DIPA("I1")=$D(^DGCR(399,DA,"I1")),DIPA("I2")=$D(^("I2")),DIPA("I3")=$D(^("I3"));S:IBDR20'["81" Y="@82";166;167;@82;S:IBDR20'["82" Y="@83";215;453T~;S:'DIPA("I2") Y="@825";454T~;S:'DIPA("I3") Y="@825";455;@825;
"KRN",.402,1080,"DR",1,399,1)
163PRIMARY AUTHORIZATION CODE~;S:'DIPA("I2") Y="@83";230;S:'DIPA("I3") Y="@83";231;@83;S:IBDR20'["83" Y="@84";222;@84;S:IBDR20'["84" Y="@85";232;S DIPA("NVA_FC")=X S:X="" Y="@842";
"KRN",.402,1080,"DR",1,399,2)
S DIPA("NVA_FC-0")=$G(^IBA(355.93,+DIPA("NVA_FC"),0)) S:$P(DIPA("NVA_FC-0"),U,5)'=""&($P(DIPA("NVA_FC-0"),U,6)'="")&($P(DIPA("NVA_FC-0"),U,7)'="") Y="@841";
"KRN",.402,1080,"DR",1,399,3)
^355.93^IBA(355.93,^^S I(0,0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,10),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");@841;244;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,3),"Non-VA Facility");233;@842;
"KRN",.402,1080,"DR",1,399,4)
S DIPA("OLDCLIA")=$P($G(^DGCR(399,DA,"U2")),U,13);235;I X="",$G(DIPA("OLDCLIA"))'="" S IBMDOTCN=1;@843;I '$$XRAY^IBCEP8A(DA) S Y="@844";D MAMMODP^IBCEP8A(DA);242;@844;@85;S:IBDR20'["85" Y="@86";459;D ASK19^IBCEU3(DA);236;237;
"KRN",.402,1080,"DR",1,399,5)
238//^S X=$S($$WNRBILL^IBEFUNC(DA):"31",1:"");@86;S:IBDR20'["86" Y="@99";I '$P($G(^DGCR(399,DA,"TX")),U,8),'$$TXMT^IBCEF4(DA) S Y="@862";I $$REQMRA^IBEFUNC(DA) S Y="@8611";27//NO FORCED PRINT;S Y="@862";@8611;28//NO FORCED PRINT;
"KRN",.402,1080,"DR",1,399,6)
@862;@99;
"KRN",.402,1080,"DR",2,355.93)
.05;.1;.06;.07;.08;
"KRN",.402,1080,"DR",2,399.0222)
.01;S DIPA("RF")=X S:$D(^XUSEC("IB PROVIDER EDIT",DUZ)) DLAYGO=355.93;.02;K DLAYGO S DIPA("PRF")=X S:X="" Y="@98";.15;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,15),"");
"KRN",.402,1080,"DR",2,399.0222,1)
N Z S Z=$$EXPAND^IBTRE(399.0222,.08,$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,8)),DIPA("SPC")=$S(Z'="":Z,1:"UNSPECIFIED") W !,"    Prov Specialty On File: ",DIPA("SPC");S DIPA("CRD")=$$CRED^IBCEU($P(^DGCR(399,DA(1),"PRV",DA,0),U,2));
"KRN",.402,1080,"DR",2,399.0222,2)
.03;K DIPA("W1") S:$G(DIPA("CRD"))'=$P(^DGCR(399,DA(1),"PRV",DA,0),U,3) DIPA("W1")=1;I $G(DIPA("W1")) D WRT1^IBCSC8H($G(DIPA("CRD")));K DIPA("W1");I '$G(DIPA("I1")) S Y="@8305";
"KRN",.402,1080,"DR",2,399.0222,3)
D PROVID^IBCEP2B(DA(1),DA,1,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8382",DIPA("EDIT")=1:"@8391",DIPA("EDIT")=2:"@8371",1:"");@8382;I '$G(DIPA("I2")) S Y="@8305";
"KRN",.402,1080,"DR",2,399.0222,4)
D PROVID^IBCEP2B(DA(1),DA,2,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8383",DIPA("EDIT")=1:"@8392",DIPA("EDIT")=2:"@8372",1:"");@8383;I '$G(DIPA("I3")) S Y="@8305";
"KRN",.402,1080,"DR",2,399.0222,5)
D PROVID^IBCEP2B(DA(1),DA,3,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8305",DIPA("EDIT")=1:"@8393",DIPA("EDIT")=2:"@8373",1:"");S Y="@8305";@8391;.12R~T~;.05T~;S Y="@8382";@8392;.13R~T~;.06T~;S Y="@8383";@8393;.14R~T~;.07T~;S Y="@8305";@8371;
"KRN",.402,1080,"DR",2,399.0222,6)
.12////^S X=DIPA("PRIDT");.05////^S X=DIPA("PRID");S Y="@8382";@8372;.13////^S X=DIPA("PRIDT");.06////^S X=DIPA("PRID");S Y="@8383";@8373;.14////^S X=DIPA("PRIDT");.07////^S X=DIPA("PRID");S Y="@8305";@8305;@98;W @IOF;
"KRN",.402,1080,"ROUOLD")
IBXSC8H
"KRN",.402,1276)
 
"KRN",.402,1276,-1)
0^3
"KRN",.402,1276,0)
IBEDIT INS CO1^3070116.1023^^36^^^3070223
"KRN",.402,1276,"DIAB",1,0,36,1)
TRANSMIT ELECTRONICALLY;"EDI - Transmit?"
"KRN",.402,1276,"DIAB",1,0,36,5)
SECONDARY ID REQUIREMENTS;"Require ID on Claim"
"KRN",.402,1276,"DIAB",1,0,36,6)
ATT/REND ID BILL SEC ID INST//NO;"Use Att/Rend ID as Billing Provider Sec. ID (UB)?"
"KRN",.402,1276,"DIAB",1,1,36.03,0)
ALL
"KRN",.402,1276,"DIAB",3,0,36,4)
BIN NUMBER;"EDI - Bin Number"
"KRN",.402,1276,"DIAB",3,0,36,5)
REF PROV SEC ID DEF CMS-1500//UPIN;"Default ID (1500)"
"KRN",.402,1276,"DIAB",3,0,36,6)
SEND LAB OR FAC IDS FOR VAMC//YES;"Send VA Lab/Facility IDs or Facility Data for VAMC?"
"KRN",.402,1276,"DIAB",3,0,36,11)
INS COMPANY LINK TYPE;T
"KRN",.402,1276,"DIAB",4,0,36,5)
REF PROV SEC ID REQ ON CLAIMS;"Require ID on Claim"
"KRN",.402,1276,"DIAB",4,0,36,8)
ANOTHER CO. PROCESS OP CLAIMS?;T
"KRN",.402,1276,"DIAB",5,0,36,4)
MAX NUMBER TEST BILLS PER DAY;"MAX # TEST BILLS TO TRANSMIT PER DAY"
"KRN",.402,1276,"DIAB",6,0,36,2)
EDI ID NUMBER - PROF;"EDI - Prof Payer ID"
"KRN",.402,1276,"DIAB",6,0,36,3)
ELECTRONIC INSURANCE TYPE;"EDI - Insurance Type"
"KRN",.402,1276,"DIAB",6,0,36,5)
ATT/REND ID BILL SEC ID PROF//NO;"Use Att/Rend ID as Billing Provider Sec. ID (1500)?"
"KRN",.402,1276,"DIAB",6,0,36,12)
INS COMPANY LINK PARENT;T
"KRN",.402,1276,"DIAB",9,0,36,1)
EDI ID NUMBER - INST;"EDI - Inst Payer ID"
"KRN",.402,1276,"DIAB",9,0,36,4)
PERF PROV SECOND ID TYPE 1500;"Default ID (1500)"
"KRN",.402,1276,"DIAB",9,0,36,10)
ANOTHER CO. PROCESS INQUIRIES?;T
"KRN",.402,1276,"DIAB",10,0,36,4)
PERF PROV SECOND ID TYPE UB;"Default ID (UB)"
"KRN",.402,1276,"DIAB",13,0,36,7)
ANOTHER CO. PROCESS IP CLAIMS?;T
"KRN",.402,1276,"DIAB",17,0,36,0)
ANOTHER CO. PROCESS PRECERTS?;T
"KRN",.402,1276,"DIAB",19,0,36,9)
ANOTHER CO. PROCESS APPEALS?;T
"KRN",.402,1276,"DIAB",24,0,36,8)
ANOTHER CO. PROCESS RX CLAIMS?;T
"KRN",.402,1276,"DR",1,36)
S:",6,"'[IBY Y="@0";.01;@0;S:",0,1,6,12,"'[IBY Y="@10";S:",12,"[IBY Y="@18";2;1;.06;.07;.08;.09;.15;.12;.13;.132;.134;.178T~;S:'X Y="@11";.139;S Y="@16";@11;.133;@16;I '$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@171";
"KRN",.402,1276,"DR",1,36,1)
3.01EDI - Transmit?~;S DIPA("IBTX")=X;I X=$G(IBEDIKEY(1))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1721";3.01////^S X=$G(IBEDIKEY(1));I $$EDIKEY^IBCNSC();S Y="@171";@1721;I '$G(DIPA("IBTX")) S Y="@17";3.04EDI - Inst Payer ID~;
"KRN",.402,1276,"DR",1,36,2)
I X=$G(IBEDIKEY(4))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1722";3.04////^S X=$G(IBEDIKEY(4));I $$EDIKEY^IBCNSC();S Y="@171";@1722;3.02EDI - Prof Payer ID~;I X=$G(IBEDIKEY(2))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1723";
"KRN",.402,1276,"DR",1,36,3)
3.02////^S X=$G(IBEDIKEY(2));I $$EDIKEY^IBCNSC();S Y="@171";@1723;@17;3.09EDI - Insurance Type~;I X=$G(IBEDIKEY(9))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1724";3.09////^S X=$G(IBEDIKEY(9));I $$EDIKEY^IBCNSC();S Y="@171";
"KRN",.402,1276,"DR",1,36,4)
@1724;@171;3.03EDI - Bin Number~;I $G(DIPA("IBTX"))'=2 S Y="@18";3.06MAX # TEST BILLS TO TRANSMIT PER DAY~;@18;S:",6,12,"'[IBY Y="@181";W !!,"Attending/Rendering Provider Secondary ID";4.01Default ID (1500)~;4.02Default ID (UB)~;
"KRN",.402,1276,"DR",1,36,5)
4.03Require ID on Claim~;W !!,"Referring Provider Secondary ID";4.04Default ID (1500)~//UPIN;4.05Require ID on Claim~;W !!,"Billing Provider Secondary IDs";4.06Use Att/Rend ID as Billing Provider Sec. ID (1500)?~//NO;
"KRN",.402,1276,"DR",1,36,6)
4.08Use Att/Rend ID as Billing Provider Sec. ID (UB)?~//NO;W !!,"VA-Laboratory or Facility IDs";4.07Send VA Lab/Facility IDs or Facility Data for VAMC?~//YES;@181;S:IBY["1" Y="@99";@10;S:",0,2,6,"'[IBY Y="@20";.111;S:X="" Y="@1";
"KRN",.402,1276,"DR",1,36,7)
.112;S:X="" Y="@1";.113;@1;.114;.115;.116;.131;.119;S:(IBY["0")!(IBY["2") Y="@99";@20;S:",3,6,"'[IBY Y="@30";.128T~;S:'X Y="@21";.127;S Y="@26";@21;.121;S:X="" Y="@2";.122;S:X="" Y="@2";.123;@2;.124;.125;.126;.135;.129;@26;
"KRN",.402,1276,"DR",1,36,8)
S:IBY["3" Y="@99";@30;S:",10,6,"'[IBY Y="@80";.168T~;S:'X Y="@31";.167;S Y="@36";@31;.161;S:X="" Y="@5";.162;S:X="" Y="@5";.163;@5;.164;.165;.166;.136;.169;@36;S:IBY["10" Y="@99";@80;S:",11,6,"'[IBY Y="@90";.188T~;S:'X Y="@81";
"KRN",.402,1276,"DR",1,36,9)
.187;S Y="@86";@81;.181;S:X="" Y="@6";.182;S:X="" Y="@6";.183;@6;.184;.185;.186;.1311;.189;@86;S:IBY["11" Y="@99";@90;S:",4,6,"'[IBY Y="@40";.148T~;S:'X Y="@41";.147;S Y="@46";@41;.141;S:X="" Y="@3";.142;S:X="" Y="@3";.143;@3;.144;
"KRN",.402,1276,"DR",1,36,10)
.145;.146;.137;.149;@46;S:IBY["4" Y="@99";@40;S:",5,6,"'[IBY Y="@55";.158T~;S:'X Y="@51";.157;S Y="@56";@51;.151;S:X="" Y="@4";.152;S:X="" Y="@4";.153;@4;.154;.155;.156;.138;.159;@56;S:IBY["5" Y="@99";@55;S:",13,6,"'[IBY Y="@60";
"KRN",.402,1276,"DR",1,36,11)
I '$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@551";I $D(^DIC(36,"APC",+$G(DA))),$P($G(^DIC(36,+$G(DA),3)),U,13)="P" S Y="@551";3.13T~;S DIPA("IBLNK")=X;I X=$G(IBEDIKEY(13))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@552";
"KRN",.402,1276,"DR",1,36,12)
3.13////^S X=$G(IBEDIKEY(13));I $$EDIKEY^IBCNSC();S Y="@551";@552;I $G(DIPA("IBLNK"))'="C" S Y="@551";3.14T~;I X=$G(IBEDIKEY(14))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@553";3.14////^S X=$G(IBEDIKEY(14));I $$EDIKEY^IBCNSC();
"KRN",.402,1276,"DR",1,36,13)
S Y="@551";@553;D COPY^IBCEPCID(+$G(DA));@551;S:IBY=",13," Y="@99";@60;S:",7,6,"'[IBY Y="@50";3.1;@50;S:",8,6,"'[IBY Y="@70";11;S:IBY["8" Y="@99";@70;S:",9,6,"'[IBY Y="@99";10;@99;
"KRN",.402,1276,"DR",2,36.03)
.01
"KRN",.402,1316,-1)
0^2
"KRN",.402,1316,0)
IB SCREEN82^3070328.1138^@^399^^@^3070301
"KRN",.402,1316,"%D",0)
^^1^1^3070328^
"KRN",.402,1316,"%D",1,0)
Billing screen 8 for UB claims.
"KRN",.402,1316,"DIAB",1,0,399,4)
NON-VA FACILITY:
"KRN",.402,1316,"DIAB",4,0,399,0)
FORM LOCATOR 64A;T
"KRN",.402,1316,"DIAB",4,1,399.0222,5)
PRIM INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1316,"DIAB",5,1,399.0222,5)
PRIMARY INS CO ID NUMBER;T
"KRN",.402,1316,"DIAB",6,0,399,0)
FORM LOCATOR 64B;T
"KRN",.402,1316,"DIAB",8,0,399,0)
FORM LOCATOR 64C;T
"KRN",.402,1316,"DIAB",8,1,399.0222,5)
SEC INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1316,"DIAB",9,1,399.0222,5)
SECONDARY INS CO ID NUMBER;T
"KRN",.402,1316,"DIAB",10,0,399,0)
TREATMENT AUTHORIZATION CODE;"PRIMARY AUTHORIZATION CODE"
"KRN",.402,1316,"DIAB",12,1,399.0222,5)
TERT INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1316,"DIAB",13,1,399.0222,5)
TERTIARY INS CO ID NUMBER;T
"KRN",.402,1316,"DR",1,399)
K DIPA S DIPA("I1")=$D(^DGCR(399,DA,"I1")),DIPA("I2")=$D(^("I2")),DIPA("I3")=$D(^("I3"));S:IBDR20'["81" Y="@82";402;453T~;S:'DIPA("I2") Y="@8111";454T~;S:'DIPA("I3") Y="@8111";455T~;@8111;163PRIMARY AUTHORIZATION CODE~;
"KRN",.402,1316,"DR",1,399,1)
S:'DIPA("I2") Y="@811";230;S:'DIPA("I3") Y="@811";231;@811;215;159;@82;S:IBDR20'["82" Y="@83";222;@83;S:IBDR20'["83" Y="@84";I '$P($G(^DGCR(399,DA,"TX")),U,8),'$$TXMT^IBCEF4(DA) S Y="@831";I $$REQMRA^IBEFUNC(DA) S Y="@8311";
"KRN",.402,1316,"DR",1,399,2)
27//NO FORCED PRINT;S Y="@84";@8311;28//NO FORCED PRINT;S Y="@84";@831;N X,Y,DIR S DIR(0)="EA",DIR("A",1)="NO FIELDS AVAILABLE TO EDIT",DIR("A")="PRESS RETURN TO CONTINUE: " W ! D ^DIR K DIR;@84;S:IBDR20'["84" Y="@85";@85;
"KRN",.402,1316,"DR",1,399,3)
S:IBDR20'["85" Y="@89";232;S DIPA("NVA_FC")=X S:DIPA("NVA_FC")="" Y="@852";S DIPA("NVA_FC-0")=$G(^IBA(355.93,+DIPA("NVA_FC"),0)) S:$P(DIPA("NVA_FC-0"),U,5)'=""&($P(DIPA("NVA_FC-0"),U,6)'="")&($P(DIPA("NVA_FC-0"),U,7)'="") Y="@851";
"KRN",.402,1316,"DR",1,399,4)
^355.93^IBA(355.93,^^S I(0,0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,10),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");@851;244;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,3),"Non-VA Facility");233;@852;@89;
"KRN",.402,1316,"DR",2,355.93)
.05;.1;.06;.07;.08;
"KRN",.402,1316,"DR",2,399.0222)
.01;S DIPA("RF")=X S:$D(^XUSEC("IB PROVIDER EDIT",DUZ)) DLAYGO=355.93;.02;K DLAYGO S DIPA("PRF")=X S:DIPA("PRF")="" Y="@98";.15;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,15),"");
"KRN",.402,1316,"DR",2,399.0222,1)
N Z S Z=$$EXPAND^IBTRE(399.0222,.08,$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,8)),DIPA("SPC")=$S(Z'="":Z,1:"UNSPECIFIED") W !,"    Prov Specialty On File: ",DIPA("SPC");
"KRN",.402,1316,"DR",2,399.0222,2)
S DIPA("CRD")=$$CRED^IBCEU($P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,2));.03;K DIPA("W1") S:$G(DIPA("CRD"))'=$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,3) DIPA("W1")=1;I $G(DIPA("W1")) D WRT1^IBCSC8H($G(DIPA("CRD")));K DIPA("W1");
"KRN",.402,1316,"DR",2,399.0222,3)
I '$G(DIPA("I1")) S Y="@8205";D PROVID^IBCEP2B(DA(1),DA,1,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8282",DIPA("EDIT")=1:"@8291",DIPA("EDIT")=2:"@8271",1:"");@8282;I '$G(DIPA("I2")) S Y="@8205";
"KRN",.402,1316,"DR",2,399.0222,4)
D PROVID^IBCEP2B(DA(1),DA,2,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8283",DIPA("EDIT")=1:"@8292",DIPA("EDIT")=2:"@8272",1:"");@8283;I '$G(DIPA("I3")) S Y="@8205";
"KRN",.402,1316,"DR",2,399.0222,5)
D PROVID^IBCEP2B(DA(1),DA,3,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8205",DIPA("EDIT")=1:"@8293",DIPA("EDIT")=2:"@8273",1:"");S Y="@8205";@8291;.12R~T~;.05T~;S Y="@8282";@8292;.13R~T~;.06T~;S Y="@8283";@8293;.14R~T~;.07T~;S Y="@8205";@8271;
"KRN",.402,1316,"DR",2,399.0222,6)
.12////^S X=DIPA("PRIDT");.05////^S X=DIPA("PRID");S Y="@8282";@8272;.13////^S X=DIPA("PRIDT");.06////^S X=DIPA("PRID");S Y="@8283";@8273;.14////^S X=DIPA("PRIDT");.07////^S X=DIPA("PRID");S Y="@8205";@8205;@98;W @IOF;
"KRN",.402,1316,"ROU")
^IBXSC82
"KRN",.402,1316,"ROUOLD")
IBXSC82
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"PGL",364.6,0,3,.03)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"PGL",364.6,0,20,.2)
NEW FORM DATA ELEMENT^P364.6'^IBA(364.6,^0;20^Q
"PGL",364.7,0,5,.05)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
349^3070702^123456852
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3070702
"PKG",200,22,1,"PAH",1,1,1,0)
UB-04 claim form.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
86
"RTN","IBCBB1")
0^32^B70135753^B71423794
"RTN","IBCBB1",1,0)
IBCBB1 ;ALB/AAS - CONTINUATION OF EDIT CHECK ROUTINE ;2-NOV-89
"RTN","IBCBB1",2,0)
 ;;2.0;INTEGRATED BILLING;**27,52,80,93,106,51,151,148,153,137,232,280,155,320,343,349**;21-MAR-94;Build 46
"RTN","IBCBB1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCBB1",4,0)
 ;
"RTN","IBCBB1",5,0)
 ;MAP TO DGCRBB1
"RTN","IBCBB1",6,0)
 ;
"RTN","IBCBB1",7,0)
% ;Bill Status
"RTN","IBCBB1",8,0)
 N Z,Z0,Z1
"RTN","IBCBB1",9,0)
 I $S(+IBST=0:1,1:"^1^2^3^4^7^"'[(U_IBST_U)) S IBER=IBER_"IB045;"
"RTN","IBCBB1",10,0)
 ;
"RTN","IBCBB1",11,0)
 ;Statement Covers From
"RTN","IBCBB1",12,0)
 I IBFDT="" S IBER=IBER_"IB061;"
"RTN","IBCBB1",13,0)
 I IBFDT]"",IBFDT'?7N&(IBFDT'?7N1".".N) S IBER=IBER_"IB061;"
"RTN","IBCBB1",14,0)
 I IBFDT>IBTDT S IBER=IBER_"IB061;" ; from must be on or before the to date 
"RTN","IBCBB1",15,0)
 S IBFFY=$$FY^IBOUTL(IBFDT)
"RTN","IBCBB1",16,0)
 ; if inpat - from date must not be prior to admit date.
"RTN","IBCBB1",17,0)
 I $$INPAT^IBCEF(IBIFN,1),(IBFDT<($P($G(^DGPT(+$P(IBND0,U,8),0)),U,2)\1))  S IBER=IBER_"IB061;"
"RTN","IBCBB1",18,0)
 ;
"RTN","IBCBB1",19,0)
 ;Statement Covers To
"RTN","IBCBB1",20,0)
 I IBTDT="" S IBER=IBER_"IB062;"
"RTN","IBCBB1",21,0)
 I IBTDT]"",IBTDT'?7N&(IBTDT'?7N1".".N) S IBER=IBER_"IB062;"
"RTN","IBCBB1",22,0)
 I IBTDT>DT!(IBTDT<IBFDT) S IBER=IBER_"IB062;"  ; to date must not be >than today's date
"RTN","IBCBB1",23,0)
 S IBTFY=$$FY^IBOUTL(IBTDT)
"RTN","IBCBB1",24,0)
 ;
"RTN","IBCBB1",25,0)
 ;Statement crosses fiscal years
"RTN","IBCBB1",26,0)
 ;I IBTFY'=IBFFY S IBER=IBER_"IB047;"
"RTN","IBCBB1",27,0)
 ;
"RTN","IBCBB1",28,0)
 ;Statement crosses calendar years
"RTN","IBCBB1",29,0)
 ;I $E(IBTDT,1,3)'=$E(IBFDT,1,3) S IBER=IBER_"IB046;"
"RTN","IBCBB1",30,0)
 ;
"RTN","IBCBB1",31,0)
 ;Total Charges
"RTN","IBCBB1",32,0)
 I +IBTC'>0!(+IBTC'=IBTC) S IBER=IBER_"IB064;"
"RTN","IBCBB1",33,0)
 ;
"RTN","IBCBB1",34,0)
 ;Billable charges for secondary claim
"RTN","IBCBB1",35,0)
 I $$MCRONBIL^IBEFUNC(IBIFN)&(($P(IBNDU1,U,1)-$P(IBNDU1,U,2))'>0) S IBER=IBER_"IB094;"
"RTN","IBCBB1",36,0)
 ;Fiscal Year 1
"RTN","IBCBB1",37,0)
 S IBFFY=$$FY^IBOUTL(IBFDT)
"RTN","IBCBB1",38,0)
 ;
"RTN","IBCBB1",39,0)
 ;Check provider link for current user, enterer, reviewer and Authorizor
"RTN","IBCBB1",40,0)
 I '$D(^VA(200,DUZ,0)) S IBER=IBER_"IB048;"
"RTN","IBCBB1",41,0)
 I IBEU]"",'$D(^VA(200,IBEU,0)) S IBER=IBER_"IB048;"
"RTN","IBCBB1",42,0)
 I IBRU]"",'$D(^VA(200,IBRU,0)) S IBER=IBER_"IB060;"
"RTN","IBCBB1",43,0)
 I IBAU]"",'$D(^VA(200,IBAU,0)) S IBER=IBER_"IB041;"
"RTN","IBCBB1",44,0)
 ;
"RTN","IBCBB1",45,0)
 ;Bill exists and not already new bill
"RTN","IBCBB1",46,0)
 ;I $S('$D(^PRCA(430,IBIFN,0)):1,$P($P(^PRCA(430,IBIFN,0),"^"),"-",2)'=IBBNO:1,1:0) S IBER=IBER_"IB056;"
"RTN","IBCBB1",47,0)
 ;I $P($$BN^PRCAFN(IBIFN),"-",2)'=IBBNO S IBER=IBER_"IB056;"
"RTN","IBCBB1",48,0)
 ;I IBER="",$P(^PRCA(430,IBIFN,0),"^",8)=$O(^PRCA(430.3,"AC",104,"")) S IBER=IBER_"IB040;"
"RTN","IBCBB1",49,0)
 I IBER="",+$$STA^PRCAFN(IBIFN)=104 S IBER=IBER_"IB040;"
"RTN","IBCBB1",50,0)
 ; If ins bill, must have valid COB sequence
"RTN","IBCBB1",51,0)
 I $P(IBND0,U,11)="i",$S($P(IBND0,U,21)="":1,1:"PST"'[$P(IBND0,U,21)) S IBER=IBER_"IB324;"
"RTN","IBCBB1",52,0)
 ;
"RTN","IBCBB1",53,0)
 ; Check for valid sec provider id for current ins
"RTN","IBCBB1",54,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"PRV",Z)) Q:'Z  S Z0=$G(^(Z,0)),Z1=+$$COBN^IBCEF(IBIFN) I $P(Z0,U,4+Z1)'="",$P(Z0,U,11+Z1)'="" D
"RTN","IBCBB1",55,0)
 . I '$$SECIDCK^IBCEF74(IBIFN,Z1,$P(Z0,U,11+Z1),Z) D WARN^IBCBB11("Prov secondary id type for the "_$P("PRIMARY^SECONDARY^TERTIARY",U,Z1)_" "_$$EXTERNAL^DILFD(399.0222,.01,,+Z0)_" is invalid/won't transmit")
"RTN","IBCBB1",56,0)
 ; Check NPIs
"RTN","IBCBB1",57,0)
 D NPICHK^IBCBB11
"RTN","IBCBB1",58,0)
 ;
"RTN","IBCBB1",59,0)
 ; Check taxonomies
"RTN","IBCBB1",60,0)
 D TAXCHK^IBCBB11
"RTN","IBCBB1",61,0)
 ;
"RTN","IBCBB1",62,0)
 ; Check for Physician Name
"RTN","IBCBB1",63,0)
 K IBXDATA D F^IBCEF("N-ATT/REND PHYSICIAN NAME",,,IBIFN)
"RTN","IBCBB1",64,0)
 I $P($G(IBXDATA),U)="" S IBER=IBER_"IB303;"
"RTN","IBCBB1",65,0)
 ;
"RTN","IBCBB1",66,0)
 N FUNCTION,IBINS
"RTN","IBCBB1",67,0)
 S FUNCTION=$S($$FT^IBCEF(IBIFN)=3:4,1:3)
"RTN","IBCBB1",68,0)
 I IBER'["IB303;" D
"RTN","IBCBB1",69,0)
 . F IBINS=1:1:3 D
"RTN","IBCBB1",70,0)
 .. S Z=$$GETTYP^IBCEP2A(IBIFN,IBINS)
"RTN","IBCBB1",71,0)
 .. I Z,$P(Z,U,2) D  ; Rendering/attending prov secondary id required
"RTN","IBCBB1",72,0)
 ... N IBID,IBOK,Q0
"RTN","IBCBB1",73,0)
 ... D PROVINF^IBCEF74(IBIFN,IBINS,.IBID,1,"C")  ; check all as though they were current
"RTN","IBCBB1",74,0)
 ... S IBOK=0
"RTN","IBCBB1",75,0)
 ... S Q0=0 F  S Q0=$O(IBID(1,FUNCTION,Q0)) Q:'Q0  I $P(IBID(1,FUNCTION,Q0),U,9)=+Z S IBOK=1 Q
"RTN","IBCBB1",76,0)
 ... I 'IBOK S IBER=IBER_$S(IBINS=1:"IB236;",IBINS=2:"IB237;",IBINS=3:"IB238;",1:"")
"RTN","IBCBB1",77,0)
 . I $$TXMT^IBCEF4(IBIFN) D
"RTN","IBCBB1",78,0)
 .. D F^IBCEF("N-ALL ATT/REND PROV SSN/EI","IBZ",,IBIFN)
"RTN","IBCBB1",79,0)
 .. I $P(IBZ,U,3)=""&($P(IBZ,U,4)="") S IBER=IBER_"IB321;" ; SSN/IEN required for rend/att
"RTN","IBCBB1",80,0)
 ;
"RTN","IBCBB1",81,0)
 N IBM,IBM1
"RTN","IBCBB1",82,0)
 S IBM=$G(^DGCR(399,IBIFN,"M"))
"RTN","IBCBB1",83,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1"))
"RTN","IBCBB1",84,0)
 I $P(IBM,U),$P($G(^DIC(36,$P(IBM,U),4)),U,6),$P(IBM1,U,2)="" S IBER=IBER_"IB244;"
"RTN","IBCBB1",85,0)
 I $P(IBM,U,2),$P($G(^DIC(36,$P(IBM,U,2),4)),U,6),$P(IBM1,U,3)="" S IBER=IBER_"IB245;"
"RTN","IBCBB1",86,0)
 I $P(IBM,U,3),$P($G(^DIC(36,$P(IBM,U,3),4)),U,6),$P(IBM1,U,4)="" S IBER=IBER_"IB246;"
"RTN","IBCBB1",87,0)
 ;
"RTN","IBCBB1",88,0)
 ; If outside facility, check for ID and qualifier in 355.93
"RTN","IBCBB1",89,0)
 ; 5/15/06 - esg - hard error IB243 turned into warning message instead
"RTN","IBCBB1",90,0)
 S Z=$P($G(^DGCR(399,IBIFN,"U2")),U,10)
"RTN","IBCBB1",91,0)
 I Z D
"RTN","IBCBB1",92,0)
 . I $P($G(^IBA(355.93,Z,0)),U,9)=""!($P($G(^IBA(355.93,Z,0)),U,13)="") D
"RTN","IBCBB1",93,0)
 .. N Z1,Z2
"RTN","IBCBB1",94,0)
 .. S Z1="Missing Lab or Facility Primary ID for non-VA facility, "
"RTN","IBCBB1",95,0)
 .. S Z2=$$EXTERNAL^DILFD(399,232,,Z)
"RTN","IBCBB1",96,0)
 .. I $L(Z2)'>19 D WARN^IBCBB11(Z1_Z2) Q
"RTN","IBCBB1",97,0)
 .. D WARN^IBCBB11(Z1),WARN^IBCBB11("     "_Z2)
"RTN","IBCBB1",98,0)
 .. Q
"RTN","IBCBB1",99,0)
 . Q
"RTN","IBCBB1",100,0)
 ;
"RTN","IBCBB1",101,0)
 ; Must be one and only one division on bill
"RTN","IBCBB1",102,0)
 S IBZ=$$MULTDIV^IBCBB11(IBIFN,IBND0)
"RTN","IBCBB1",103,0)
 I IBZ S IBER=IBER_$S(IBZ=1:"IB095;",IBZ=2:"IB104;",1:"IB105;")
"RTN","IBCBB1",104,0)
 ; Division address must be defined in institution file
"RTN","IBCBB1",105,0)
 I $P(IBND0,U,22) D
"RTN","IBCBB1",106,0)
 . N Z,Z0,Z1
"RTN","IBCBB1",107,0)
 . S Z0=$G(^DIC(4,+$P($G(^DG(40.8,+$P(IBND0,U,22),0)),U,7),0))
"RTN","IBCBB1",108,0)
 . S Z1=$G(^DIC(4,+$P($G(^DG(40.8,+$P(IBND0,U,22),0)),U,7),1))
"RTN","IBCBB1",109,0)
 . I $P(Z0,U,2)="" S IBER=IBER_"IB097;" Q
"RTN","IBCBB1",110,0)
 . F Z=1,3,4 I $P(Z1,U,Z)="" S IBER=IBER_"IB097;" Q
"RTN","IBCBB1",111,0)
 ;
"RTN","IBCBB1",112,0)
 ;CHAMPVA Rate Type and Primary Insurance Carriers Type of Coverage must match
"RTN","IBCBB1",113,0)
 S (IBRTCHV,IBPICHV)=0
"RTN","IBCBB1",114,0)
 I $P($G(^DGCR(399.3,+IBAT,0)),U,1)="CHAMPVA" S IBRTCHV=1
"RTN","IBCBB1",115,0)
 I $P($G(^IBE(355.2,+$P($G(^DIC(36,+IBNDMP,0)),U,13),0)),U,1)="CHAMPVA" S IBPICHV=1
"RTN","IBCBB1",116,0)
 I (+IBRTCHV!+IBPICHV)&('IBRTCHV!'IBPICHV) S IBER=IBER_"IB085;"
"RTN","IBCBB1",117,0)
 ;
"RTN","IBCBB1",118,0)
 N IBZPRC,IBZPRCUB
"RTN","IBCBB1",119,0)
 D F^IBCEF("N-ALL PROCEDURES","IBZPRC",,IBIFN)
"RTN","IBCBB1",120,0)
 ; Procedure Clinic is required for Surgical Procedures Outpt Facility Charges
"RTN","IBCBB1",121,0)
 I +$P(IBND0,U,27)'=2,$$BILLRATE^IBCRU3(IBAT,IBCL,IBEVDT,"RC OUTPATIENT") D
"RTN","IBCBB1",122,0)
 . N Z,Z0,Z1,ZE S (ZE,Z)=0 F  S Z=$O(^DGCR(399,IBIFN,"CP",Z)) Q:'Z  D  I +ZE S IBER=IBER_"IB320;" Q
"RTN","IBCBB1",123,0)
 .. S Z0=$G(^DGCR(399,IBIFN,"CP",Z,0)),Z1=+Z0 I Z0'[";ICPT(" Q
"RTN","IBCBB1",124,0)
 .. I '((Z1'<10000)&(Z1'>69999))&'((Z1'<93501)&(Z1'>93533)) Q
"RTN","IBCBB1",125,0)
 .. I '$P(Z0,U,7) S ZE=1
"RTN","IBCBB1",126,0)
 ;
"RTN","IBCBB1",127,0)
 ; Extract procedures for UB-04
"RTN","IBCBB1",128,0)
 D F^IBCEF("N-UB-04 PROCEDURES","IBZPRCUB",,IBIFN)
"RTN","IBCBB1",129,0)
 ; Does this bill have ANY prescriptions associated with it?
"RTN","IBCBB1",130,0)
 ; Must bill prescriptions separately from other charges
"RTN","IBCBB1",131,0)
 ;
"RTN","IBCBB1",132,0)
 I $$ISRX^IBCEF1(IBIFN) D
"RTN","IBCBB1",133,0)
 . N IBZ,IBRXDEF
"RTN","IBCBB1",134,0)
 . S IBRXDEF=$P($G(^IBE(350.9,1,1)),U,30),IBZ=0
"RTN","IBCBB1",135,0)
 . F  S IBZ=$O(IBZPRCUB(IBZ)) Q:'IBZ  I IBZPRCUB(IBZ),+$P(IBZPRCUB(IBZ),U)'=IBRXDEF S IBER=IBER_"IB102;" Q
"RTN","IBCBB1",136,0)
 . K IBZ
"RTN","IBCBB1",137,0)
 ;
"RTN","IBCBB1",138,0)
 ; Check that COB sequences are not skipped
"RTN","IBCBB1",139,0)
 K Z
"RTN","IBCBB1",140,0)
 F Z=1:1:3 S:+$G(^DGCR(399,IBIFN,"I"_Z)) Z(Z)=""
"RTN","IBCBB1",141,0)
 F Z=0:1:2 S Z0=$O(Z(Z)) Q:'Z0  I Z0'=(Z+1) S IBER=IBER_"IB322;" Q
"RTN","IBCBB1",142,0)
 K Z
"RTN","IBCBB1",143,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,21)="" S IBER=IBER_"IB323;"
"RTN","IBCBB1",144,0)
 K IBXDATA D F^IBCEF("N-PROCEDURE CODING METHD",,,IBIFN)
"RTN","IBCBB1",145,0)
 ; Coding method should agree with types of procedure codes
"RTN","IBCBB1",146,0)
 S IBOK=$S('$O(IBZPRC(0))!(IBXDATA=""):1,1:0)
"RTN","IBCBB1",147,0)
 I 'IBOK S IBOK=1,IBZ=0 F  S IBZ=$O(IBZPRC(IBZ)) Q:'IBZ  I IBZPRC(IBZ),$P(IBZPRC(IBZ),U)'[$S(IBXDATA=9:"ICD",1:"ICP") S IBOK=0 Q
"RTN","IBCBB1",148,0)
 I 'IBOK D WARN^IBCBB11("Coding Method does not agree with all procedure codes found on bill")
"RTN","IBCBB1",149,0)
 D EDITMRA^IBCBB3(.IBQUIT,.IBER,IBIFN,IBFT)
"RTN","IBCBB1",150,0)
 Q:$G(IBQUIT)
"RTN","IBCBB1",151,0)
 ;
"RTN","IBCBB1",152,0)
 ;Other things that could be added:  Rev Code - calculating charges
"RTN","IBCBB1",153,0)
 ;        Diagnosis Coding, if MT copay - check for other co-payments
"RTN","IBCBB1",154,0)
 ;
"RTN","IBCBB1",155,0)
 I $P(IBNDTX,U,8),$$REQMRA^IBEFUNC(IBIFN) S IBER=IBER_"IB121;"   ; can't force MRAs to print
"RTN","IBCBB1",156,0)
 I $P(IBNDTX,U,8)!$P(IBNDTX,U,9) D WARN^IBCBB11($S($$REQMRA^IBEFUNC(IBIFN)&($P(IBNDTX,U,9)):"MRA Secondary ",1:"")_"Bill has been forced to print "_$S($P(IBNDTX,U,8)=1!($P(IBNDTX,U,9)=1):"locally",1:"at clearinghouse"))
"RTN","IBCBB1",157,0)
 N IBXZ,IBIZ F IBIZ=12,13,14 S IBXZ=$P(IBNDM,U,IBIZ) I +IBXZ S IBXZ=$P($G(^DPT(DFN,.312,IBXZ,0)),U,18) I +IBXZ S IBXZ=$G(^IBA(355.3,+IBXZ,0)) I +$P(IBXZ,U,12) D
"RTN","IBCBB1",158,0)
 . D WARN^IBCBB11($P($G(^DIC(36,+IBXZ,0)),U,1)_" requires Amb Care Certification")
"RTN","IBCBB1",159,0)
 ;
"RTN","IBCBB1",160,0)
 ;Build AR array if no errors and MRA not needed or already rec'd
"RTN","IBCBB1",161,0)
 I IBER="",$S($$NEEDMRA^IBEFUNC(IBIFN)!($$REQMRA^IBEFUNC(IBIFN)):0,1:1) D ARRAY
"RTN","IBCBB1",162,0)
 ;
"RTN","IBCBB1",163,0)
END ;Don't kill IBIFN, IBER, DFN
"RTN","IBCBB1",164,0)
 I $O(^TMP($J,"BILL-WARN",0)),$G(IBER)="" S IBER="WARN" ;Warnings only
"RTN","IBCBB1",165,0)
 K IBBNO,IBEVDT,IBLOC,IBCL,IBTF,IBAT,IBWHO,IBST,IBFDT,IBTDT,IBTC,IBFY,IBFY1,IBAU,IBRU,IBEU,IBARTP,IBFYC,IBMRA,IBTOB,IBTOB12,IBNDU2,IBNDUF3,IBNDUF31,IBNDTX
"RTN","IBCBB1",166,0)
 K IBNDS,IBND0,IBNDU,IBNDM,IBNDMP,IBNDU1,IBFFY,IBTFY,IBFT,IBRTCHV,IBPICHV,IBXDATA,IBOK
"RTN","IBCBB1",167,0)
 I $D(IBER),IBER="" W !,"No Errors found for National edits"
"RTN","IBCBB1",168,0)
 Q
"RTN","IBCBB1",169,0)
 ;
"RTN","IBCBB1",170,0)
ARRAY ;Build PRCASV(array)
"RTN","IBCBB1",171,0)
 N IBCOBN,X
"RTN","IBCBB1",172,0)
 K PRCASV
"RTN","IBCBB1",173,0)
 Q:$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN))
"RTN","IBCBB1",174,0)
 S IBCOBN=$$COBN^IBCEF(IBIFN)
"RTN","IBCBB1",175,0)
 S X=IBIFN
"RTN","IBCBB1",176,0)
 S PRCASV("BDT")=DT,PRCASV("ARREC")=IBIFN
"RTN","IBCBB1",177,0)
 S PRCASV("APR")=DUZ
"RTN","IBCBB1",178,0)
 S PRCASV("PAT")=DFN,PRCASV("CAT")=$P(^DGCR(399.3,IBAT,0),"^",6)
"RTN","IBCBB1",179,0)
 I IBWHO="i" S PRCASV("DEBTOR")=+IBNDMP_";DIC(36,"
"RTN","IBCBB1",180,0)
 S PRCASV("DEBTOR")=$S(IBWHO="p":DFN_";DPT(",IBWHO="o":$P(IBNDM,"^",11)_";DIC(4,",IBWHO="i":PRCASV("DEBTOR"),1:"")
"RTN","IBCBB1",181,0)
 S PRCASV("CARE")=$E($$TOB^IBCEF1(IBIFN),1,2)
"RTN","IBCBB1",182,0)
 S PRCASV("FY")=$$FY^IBOUTL(DT)_U_($P(IBNDU1,U)-$P(IBNDU1,U,2))
"RTN","IBCBB1",183,0)
 ;S PRCASV("FY")=$P(IBNDU1,U,9)_U_$S($P(IBNDU1,U,2)]"":($P(IBNDU1,U,10)-$P(IBNDU1,U,2)),1:$P(IBNDU1,U,10))_$S($P(IBNDU1,U,11)]"":U_$P(IBNDU1,U,11)_U_$P(IBNDU1,U,12),1:"")
"RTN","IBCBB1",184,0)
PLUS I IBWHO="i",$P(IBNDM,"^",2),$D(^DIC(36,$P(IBNDM,"^",2),0)) S PRCASV("2NDINS")=$P(IBNDM,"^",2)
"RTN","IBCBB1",185,0)
 I IBWHO="i",$P(IBNDM,"^",3),$D(^DIC(36,$P(IBNDM,"^",3),0)) S PRCASV("3RDINS")=$P(IBNDM,"^",3)
"RTN","IBCBB1",186,0)
 ;
"RTN","IBCBB1",187,0)
 N IBX S IBX=$P(IBND0,U,21),IBX=$S(IBX="P":"I1",IBX="S":"I2",IBX="T":"I3",1:"") Q:IBX=""
"RTN","IBCBB1",188,0)
 N IBNDI1
"RTN","IBCBB1",189,0)
 Q:'$D(^DGCR(399,IBIFN,IBX))  S IBNDI1=^(IBX)
"RTN","IBCBB1",190,0)
 S:$P(IBNDI1,"^",3)]"" PRCASV("GPNO")=$P(IBNDI1,"^",3)
"RTN","IBCBB1",191,0)
 S:$P(IBNDI1,"^",15)]"" PRCASV("GPNM")=$P(IBNDI1,"^",15)
"RTN","IBCBB1",192,0)
 S:$P(IBNDI1,"^",17)]"" PRCASV("INPA")=$P(IBNDI1,"^",17)
"RTN","IBCBB1",193,0)
 S:$P(IBNDI1,"^",2)]"" PRCASV("IDNO")=$P(IBNDI1,"^",2),PRCASV("INID")=PRCASV("IDNO")
"RTN","IBCBB1",194,0)
 ; Check that this is a secondary or tertiary bill and insurance for previous
"RTN","IBCBB1",195,0)
 ; COB sequence is Medicare WNR and MRA is active --> send data elements to AR
"RTN","IBCBB1",196,0)
 I IBCOBN>1,$$WNRBILL^IBEFUNC(IBIFN,IBCOBN-1),$$EDIACTV^IBCEF4(2) D MRA
"RTN","IBCBB1",197,0)
 Q
"RTN","IBCBB1",198,0)
 ;
"RTN","IBCBB1",199,0)
MRA N IBEOB S IBEOB=0
"RTN","IBCBB1",200,0)
 ;
"RTN","IBCBB1",201,0)
 K PRCASV("MEDURE"),PRCASV("MEDCA")
"RTN","IBCBB1",202,0)
 ; Get EOB data
"RTN","IBCBB1",203,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D
"RTN","IBCBB1",204,0)
 . D MRACALC^IBCEMU2(IBEOB,IBIFN,1,.PRCASV)
"RTN","IBCBB1",205,0)
 Q  ;MRA
"RTN","IBCBB1",206,0)
 ;
"RTN","IBCBB1",207,0)
 ;; PREGNANCY DX CODES: V22**-V24**, V27**-V28**, 630**-677**
"RTN","IBCBB1",208,0)
 ;; FLU SHOTS PROCEDURE CODES: 90724, G0008, 90732, G0009
"RTN","IBCBB2")
0^77^B42055097^B42060195
"RTN","IBCBB2",1,0)
IBCBB2 ;ALB/ARH - CONTINUATION OF EDIT CHECKS ROUTINE (CMS-1500) ;04/14/92
"RTN","IBCBB2",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210,245,232,296,320,349**;21-MAR-94;Build 46
"RTN","IBCBB2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCBB2",4,0)
 ;
"RTN","IBCBB2",5,0)
 ;MAP TO DGCRBB2
"RTN","IBCBB2",6,0)
 ;
"RTN","IBCBB2",7,0)
EN ;
"RTN","IBCBB2",8,0)
 N IBI,IBJ,IBN,IBY,IBDX,IBDXO,IBDXL,IBCPT,IBCPTL,IBOLAB,Z,IBXSAVE,IBLOC,IBTX,IBPS,IBSP,IBLCT
"RTN","IBCBB2",9,0)
 I '$D(IBER) S IBER=""
"RTN","IBCBB2",10,0)
 S IBTX=$$TXMT^IBCEF4(IBIFN)
"RTN","IBCBB2",11,0)
 ;
"RTN","IBCBB2",12,0)
 ; Warn if no group provider id (MCRWNR is a default)
"RTN","IBCBB2",13,0)
 ; I '$$WNRBILL^IBEFUNC(IBIFN) D
"RTN","IBCBB2",14,0)
 ; . S Z=$P($G(^DGCR(399,IBIFN,"M1")),U,$$COBN^IBCEF(IBIFN)+1)
"RTN","IBCBB2",15,0)
 ; . I Z="" D WARN^IBCBB11("No group prov # for the current ins co - site tax id will be used")
"RTN","IBCBB2",16,0)
 ; Max 4 modifiers per CPT code allowed before warning
"RTN","IBCBB2",17,0)
 K IBXDATA
"RTN","IBCBB2",18,0)
 D F^IBCEF("N-HCFA 1500 MODIFIERS",,,IBIFN) ;Get modifiers
"RTN","IBCBB2",19,0)
 ;
"RTN","IBCBB2",20,0)
 S Z=0 F  S Z=$O(IBZPRC92(Z)) Q:'Z  I $P(IBZPRC92(Z),U)["ICPT(",$L($P(IBZPRC92(Z),U,15),",")>4 S IBI="Proc "_$$PRCD^IBCEF1($P(IBZPRC92(Z),U))_" has > 4 modifiers - only first 4 will be used" D WARN^IBCBB11(IBI)
"RTN","IBCBB2",21,0)
 ; ICD-9 diagnosis, at least 1 required
"RTN","IBCBB2",22,0)
 D SET^IBCSC4D(IBIFN,.IBDX,.IBDXO) I '$P(IBDX,U,2) S IBER=IBER_"IB071;"
"RTN","IBCBB2",23,0)
 S IBI=$O(IBDXO(0))
"RTN","IBCBB2",24,0)
 I IBI,$$INPAT^IBCEF(IBIFN,1),$E($$ICD9^IBACSV(+$P(IBDXO(IBI),U)))="V" S Z="Principal Dx V-code may not be valid" D WARN^IBCBB11(Z)
"RTN","IBCBB2",25,0)
 ;
"RTN","IBCBB2",26,0)
 ; CPT procs must be associated with a dx, must have a defined provider
"RTN","IBCBB2",27,0)
 S (IBLOC,IBN,IBI,IBY)=0 F  S IBI=$O(^DGCR(399,IBIFN,"CP",IBI)) Q:IBI'?1N.N  S IBCPT=^(IBI,0) D  I +IBY S IBN=1
"RTN","IBCBB2",28,0)
 . ;I IBER'["IB089",$P(IBCPT,U,10)=7,$S('$P(IBCPT,U,16):1,1:$P(IBCPT,U,16)#15) S IBER=IBER_"IB089;" ;anesthesia needs minutes in multiple of 15
"RTN","IBCBB2",29,0)
 . I 'IBLOC,$P(IBCPT,U,15)'="",IBTX S Z="At least 1 charge has local box 24K data that will not be transmitted - " S IBLOC=1 D WARN^IBCBB11(Z) S Z="  This data will only print locally" D WARN^IBCBB11(Z)
"RTN","IBCBB2",30,0)
 . I $P(IBCPT,U)'["ICPT(" S:IBER'["IB092" IBER=IBER_"IB092;" Q
"RTN","IBCBB2",31,0)
 . S IBY=1 F IBJ=11:1:14 I +$P(IBCPT,"^",IBJ) S IBCPTL(+$P(IBCPT,"^",IBJ))="",IBY=0
"RTN","IBCBB2",32,0)
 . ;I '$P(IBCPT,U,18) S:IBER'["IB094;" IBER=IBER_"IB094;" Q
"RTN","IBCBB2",33,0)
 I +IBN S IBER=IBER_"IB072;"
"RTN","IBCBB2",34,0)
 ;
"RTN","IBCBB2",35,0)
 I '$$OCC10(IBIFN,.IBDX,2) S IBER=IBER_"IB093;"
"RTN","IBCBB2",36,0)
 ; CMS-1500: dxs associated with procs must be defined dxs for the bill
"RTN","IBCBB2",37,0)
 S IBI=0 F  S IBI=$O(IBDX(IBI))  Q:'IBI  S IBDXL(IBDX(IBI))=""
"RTN","IBCBB2",38,0)
 S (IBN,IBI)=0 F  S IBI=$O(IBCPTL(IBI)) Q:'IBI  I '$D(IBDXL(IBI)) S IBN=1 Q
"RTN","IBCBB2",39,0)
 I +IBN S IBER=IBER_"IB073;"
"RTN","IBCBB2",40,0)
 ; ejk *296* Change # of diagnoses codes from 4 to 8 on CMS-1500 Claims. 
"RTN","IBCBB2",41,0)
 I IBTX S IBI=8 F  S IBI=$O(IBDXO(IBI)) Q:'IBI  S Z=+$G(IBDX(+$G(IBDXO(IBI)))) I Z,$D(IBCPTL(Z)) D WARN^IBCBB11("Too many diagnoses for claim & will be rejected - consider printing locally")
"RTN","IBCBB2",42,0)
 ;
"RTN","IBCBB2",43,0)
 I $$WNRBILL^IBEFUNC(IBIFN),$$MRATYPE^IBEFUNC(IBIFN)'="B" S IBER=IBER_"IB087;"
"RTN","IBCBB2",44,0)
 ;
"RTN","IBCBB2",45,0)
 ; IB*320 - CLIA# error/warning - error msg for MRA claims, else warning
"RTN","IBCBB2",46,0)
 I $P(IBNDU2,U,13)="",$$CLIAREQ^IBCEP8A(IBIFN) D
"RTN","IBCBB2",47,0)
 . I $$REQMRA^IBEFUNC(IBIFN) S IBER=IBER_"IB235;" Q
"RTN","IBCBB2",48,0)
 . D WARN^IBCBB11("Claim contains laboratory services. The payer may require a CLIA #.")
"RTN","IBCBB2",49,0)
 . Q
"RTN","IBCBB2",50,0)
 ;
"RTN","IBCBB2",51,0)
 ; Only one occurrence code can be present for event date for box 14
"RTN","IBCBB2",52,0)
 S Z=$$EVENT^IBCF22(IBIFN,.IBXSAVE,.IBI)
"RTN","IBCBB2",53,0)
 I IBI S IBER=IBER_"IB099;"
"RTN","IBCBB2",54,0)
 ; unit/charge limits
"RTN","IBCBB2",55,0)
 K IBXDATA
"RTN","IBCBB2",56,0)
 D F^IBCEF("N-HCFA 1500 SERVICES (PRINT)",,,IBIFN) ;Get charge lines
"RTN","IBCBB2",57,0)
 S (IBLCT,IBOLAB)=0,IBPS="",IBSP=$$BILLSPEC^IBCEU3(IBIFN)
"RTN","IBCBB2",58,0)
 S IBI=0 F  S IBI=$O(IBXDATA(IBI)) Q:'IBI  D  Q:IBER["IB310"!(IBER["IB311")
"RTN","IBCBB2",59,0)
 . S IBLCT=IBLCT+1
"RTN","IBCBB2",60,0)
 . I $P(IBNDU2,U,11) D
"RTN","IBCBB2",61,0)
 .. I '$P(IBXDATA(IBI),U,11) S IBPS=IBPS_$S(IBPS'="":",",1:"")_IBI Q
"RTN","IBCBB2",62,0)
 .. I $P(IBXDATA(IBI),U,14),"24"'[$P(IBNDU2,U,11) D WARN^IBCBB11("Outside lab charges exist on a non-lab NON-VA bill")
"RTN","IBCBB2",63,0)
 . I '$P(IBNDU2,U,11),$P(IBXDATA(IBI),U,11) D WARN^IBCBB11("Purchased service amounts are invalid unless this is a NON-VA bill")
"RTN","IBCBB2",64,0)
 . I $D(IBXDATA(IBI,"A")) S IBER=IBER_"IB310;" Q
"RTN","IBCBB2",65,0)
 . I $D(IBXDATA(IBI,"ARX")),IBER'["311;" S IBER=IBER_"IB311;" Q
"RTN","IBCBB2",66,0)
 . I $P(IBXDATA(IBI),U,14) S IBOLAB=IBOLAB+1
"RTN","IBCBB2",67,0)
 . ; Place of service required
"RTN","IBCBB2",68,0)
 . I $G(IBER)'["IB314;",$P(IBXDATA(IBI),U,3)="" S IBER=IBER_"IB314;"
"RTN","IBCBB2",69,0)
 . ; Type of service required
"RTN","IBCBB2",70,0)
 . I $G(IBER)'["IB313;",$P(IBXDATA(IBI),U,4)="" S IBER=IBER_"IB313;"
"RTN","IBCBB2",71,0)
 . ; 43 and 53 are invalid types of service
"RTN","IBCBB2",72,0)
 . I $G(IBER)'["IB110;",($P(IBXDATA(IBI),U,4)=43!($P(IBXDATA(IBI),U,4)=53)) S IBER=IBER_"IB110;"
"RTN","IBCBB2",73,0)
 . ; Units for the line item must be less than 100/1000
"RTN","IBCBB2",74,0)
 . I IBER'["IB088",$P(IBXDATA(IBI),U,9)'<100 D
"RTN","IBCBB2",75,0)
 .. I $P(IBXDATA(IBI),U,4)'=7 S IBER=IBER_"IB088;" Q
"RTN","IBCBB2",76,0)
 .. I $P(IBXDATA(IBI),U,9)'<1000 S IBER=IBER_"IB088;"
"RTN","IBCBB2",77,0)
 . ; Line item total charge must be less than $10,000.00, greater than 0
"RTN","IBCBB2",78,0)
 . I IBER'["IB090",$P(IBXDATA(IBI),U,9)'<10000 S IBER=IBER_"IB090;"
"RTN","IBCBB2",79,0)
 . I '($P(IBXDATA(IBI),U,9)*$P(IBXDATA(IBI),U,8)),$$COBN^IBCEF(IBIFN)'>1 S Z="Procedure "_$P(IBXDATA(IBI),U,5)_" has a 0-charge and will not be transmitted" D WARN^IBCBB11(Z)
"RTN","IBCBB2",80,0)
 . I $G(IBXDATA(IBI,"AUX"))'="",'$G(IBSP(1)),+IBSP'=35,$TR($P(IBXDATA(IBI,"AUX"),U,4,6)_$P(IBXDATA(IBI,"AUX"),U,2),U)'="" S IBSP(1)=1
"RTN","IBCBB2",81,0)
 I IBTX,IBLCT>50 D
"RTN","IBCBB2",82,0)
 . I '$$REQMRA^IBEFUNC(IBIFN) S IBER=IBER_"IB308;" Q
"RTN","IBCBB2",83,0)
 . I '$P(IBNDTX,U,9) S IBER=IBER_"IB325;"
"RTN","IBCBB2",84,0)
 I $G(IBSP(1)) D WARN^IBCBB11("Chiropractic service details only valid if provider specialty is '35'")
"RTN","IBCBB2",85,0)
 I IBPS'="" D WARN^IBCBB11("NON-VA facility indicated, but no purchased service charge on line item"_$S(IBPS[",":"s",1:"")_" #"_IBPS)
"RTN","IBCBB2",86,0)
 I $P(IBNDU2,U,11),$P(IBNDU2,U,11)=4,IBOLAB>1 D WARN^IBCBB11("For proper payment, you must bill each outside lab on a separate claim form")
"RTN","IBCBB2",87,0)
 K IBXDATA
"RTN","IBCBB2",88,0)
 ;
"RTN","IBCBB2",89,0)
 ;       ; Check for Physician Name
"RTN","IBCBB2",90,0)
 D F^IBCEF("N-REFERRING PROVIDER NAME",,,IBIFN)
"RTN","IBCBB2",91,0)
 I $P($G(IBXDATA),U)]"" D
"RTN","IBCBB2",92,0)
 .N IBZ,FUNCTION,IBINS
"RTN","IBCBB2",93,0)
 .S FUNCTION=1
"RTN","IBCBB2",94,0)
 .F IBINS=1:1:3 D
"RTN","IBCBB2",95,0)
 .. S Z=$$GETTYP^IBCEP2A(IBIFN,IBINS,FUNCTION)
"RTN","IBCBB2",96,0)
 .. I Z,$P(Z,U,2) D  ; Rendering/attending prov secondary id required
"RTN","IBCBB2",97,0)
 ... N IBID,IBOK,Q0
"RTN","IBCBB2",98,0)
 ... D PROVINF^IBCEF74(IBIFN,IBINS,.IBID,1,"C")  ; check all as though they were current
"RTN","IBCBB2",99,0)
 ... S IBOK=0
"RTN","IBCBB2",100,0)
 ... S Q0=0 F  S Q0=$O(IBID(1,FUNCTION,Q0)) Q:'Q0  I $P(IBID(1,FUNCTION,Q0),U,9)=+Z S IBOK=1 Q
"RTN","IBCBB2",101,0)
 ... I 'IBOK S IBER=IBER_$S(IBINS=1:"IB239;",IBINS=2:"IB240;",IBINS=3:"IB241;",1:"")
"RTN","IBCBB2",102,0)
 ;
"RTN","IBCBB2",103,0)
 Q
"RTN","IBCBB2",104,0)
 ;
"RTN","IBCBB2",105,0)
OCC10(IBIFN,IBARR,IBFT) ; Determine if occurrence code 10 exists for pregnancy dx
"RTN","IBCBB2",106,0)
 ; IBARR=array subscripted by ien of DX code if IBFT=2 (CMS-1500 form)
"RTN","IBCBB2",107,0)
 ;                         by seq # and = ien of DX code if IBFT'=2
"RTN","IBCBB2",108,0)
 ;
"RTN","IBCBB2",109,0)
 N IBN,IBI,IBXDATA,IBXSAVE,IBDX,Z
"RTN","IBCBB2",110,0)
 S IBN=1
"RTN","IBCBB2",111,0)
 ;
"RTN","IBCBB2",112,0)
 I '$D(^TMP($J,"LMD")) D
"RTN","IBCBB2",113,0)
 . D F^IBCEF("N-OCCURRENCE CODES",,,IBIFN)
"RTN","IBCBB2",114,0)
 . S ^TMP($J,"LMD")=""
"RTN","IBCBB2",115,0)
 . S Z=0 F  S Z=$O(IBXSAVE("OCC",Z)) Q:'Z  I +IBXSAVE("OCC",Z)=10 S ^TMP($J,"LMD")=1 Q
"RTN","IBCBB2",116,0)
 ;
"RTN","IBCBB2",117,0)
 I '^TMP($J,"LMD") S IBI=0 F  S IBI=$O(IBARR(IBI))  Q:'IBI  D  Q:'IBN
"RTN","IBCBB2",118,0)
 . N Z,Z1
"RTN","IBCBB2",119,0)
 . ; If a pregnancy DX exists, must be an occurrence code 10 for LMP date
"RTN","IBCBB2",120,0)
 . ; dx ranges are: V22*-V24*, V27*-V28*, 630*-677*
"RTN","IBCBB2",121,0)
 . S IBDX=$S($G(IBFT)'=2:+IBARR(IBI),1:IBI)
"RTN","IBCBB2",122,0)
 . S Z=$E($P($$ICD9^IBACSV(IBDX),U),1,3),Z1=$E(Z,2,3)
"RTN","IBCBB2",123,0)
 . I $S(Z'<630&(Z<678):1,$E(Z)="V":$S(Z1'<22&(Z1<25):1,1:Z1'<27&(Z1<28)),1:0) S IBN=0 ;Pregnancy Dx exists
"RTN","IBCBB2",124,0)
 ;
"RTN","IBCBB2",125,0)
OCC10Q K ^TMP($J,"LMD")
"RTN","IBCBB2",126,0)
 Q IBN
"RTN","IBCBB2",127,0)
 ;
"RTN","IBCBB21")
0^33^B10829240^B10727629
"RTN","IBCBB21",1,0)
IBCBB21 ;ALB/AAS - CONTINUATION OF EDIT CHECK ROUTINE FOR UB-04 ;2-NOV-89
"RTN","IBCBB21",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210,232,155,291,348,349**;21-MAR-94;Build 46
"RTN","IBCBB21",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCBB21",4,0)
 ;
"RTN","IBCBB21",5,0)
EN(IBZPRC92) ;
"RTN","IBCBB21",6,0)
 ;
"RTN","IBCBB21",7,0)
 N ECODE,IBTXMT,IBXDATA,IBLPRT,IBI,Z,Z0,Z1,IBREQMRA
"RTN","IBCBB21",8,0)
 I '$D(IBZPRC92) D ALLPROC^IBCVA1(IBIFN,.IBZPRC92)
"RTN","IBCBB21",9,0)
 S IBREQMRA=$$REQMRA^IBEFUNC(IBIFN)    ; MRA?
"RTN","IBCBB21",10,0)
 K IBQUIT S IBQUIT=0
"RTN","IBCBB21",11,0)
 S (Z,Z0,Z1)=0
"RTN","IBCBB21",12,0)
 F  S Z=$O(IBZPRC92(Z)) Q:'Z  S:IBZPRC92(Z)["CPT" Z0=Z0+1 S:IBZPRC92(Z)["ICD" Z1=Z1+1
"RTN","IBCBB21",13,0)
 S IBTXMT=$$TXMT^IBCEF4(IBIFN)
"RTN","IBCBB21",14,0)
 S IBZPRC92=Z0_U_Z1 ;Save # of CPT's and ICD9's
"RTN","IBCBB21",15,0)
 ; More than 50 procedures on a bill - must print locally
"RTN","IBCBB21",16,0)
 I IBTXMT,(+IBZPRC92>50!(+$P(IBZPRC92,U,2)>50)) D  Q:IBQUIT
"RTN","IBCBB21",17,0)
 . I 'IBREQMRA S IBQUIT=$$IBER^IBCBB3(.IBER,308) Q
"RTN","IBCBB21",18,0)
 . I '$P(IBNDTX,U,9) S IBQUIT=$$IBER^IBCBB3(.IBER,325)
"RTN","IBCBB21",19,0)
 ; If ICD9 procedures with dates and charges, bill 11x or 83x needs operating physician
"RTN","IBCBB21",20,0)
 I IBTOB12="11",$P(IBZPRC92,U,2),'$$CKPROV^IBCEU(IBIFN,2) S IBER=IBER_"IB304;"
"RTN","IBCBB21",21,0)
 I IBTOB12="83",$P(IBZPRC92,U,2),'$$CKPROV^IBCEU(IBIFN,2) S IBER=IBER_"IB312;"
"RTN","IBCBB21",22,0)
 ;
"RTN","IBCBB21",23,0)
 ; If any CPT procedures have more than 2 modifiers, warn
"RTN","IBCBB21",24,0)
 S Z=0 F  S Z=$O(IBZPRC92(Z)) Q:'Z  I $P(IBZPRC92(Z),U)["ICPT(",$L($P(IBZPRC92(Z),U,15),",")>2 S Z0="Proc "_$$PRCD^IBCEF1($P(IBZPRC92(Z),U))_" has > 2 modifiers - only first 2 will be used" D WARN^IBCBB11(Z0)
"RTN","IBCBB21",25,0)
 ;
"RTN","IBCBB21",26,0)
 I $$WNRBILL^IBEFUNC(IBIFN),$$MRATYPE^IBEFUNC(IBIFN)'="A" S IBER=IBER_"IB086;"
"RTN","IBCBB21",27,0)
 ;
"RTN","IBCBB21",28,0)
 ; UB-04 Diagnosis Codes
"RTN","IBCBB21",29,0)
 K IBXDATA D F^IBCEF("N-DIAGNOSES",,,IBIFN)
"RTN","IBCBB21",30,0)
 ;
"RTN","IBCBB21",31,0)
 ; Only 9 dx's allowed per claim plus 1 E-code
"RTN","IBCBB21",32,0)
 S (Z,ECODE,IBI)=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  D  Q:IBER["309;"
"RTN","IBCBB21",33,0)
 . S IBI=IBI+1
"RTN","IBCBB21",34,0)
 . I $E($$ICD9^IBACSV(+$P(IBXDATA(Z),U)))="E" S:ECODE IBQUIT=$$IBER^IBCBB3(.IBER,301) S:'ECODE IBI=IBI-1,ECODE=1
"RTN","IBCBB21",35,0)
 . ; max DX check does not apply to MRAs
"RTN","IBCBB21",36,0)
 . I IBTXMT,IBI>9 D
"RTN","IBCBB21",37,0)
 .. I 'IBREQMRA Q:$P(IBNDTX,U,8)  S IBER=IBER_"IB309;" Q
"RTN","IBCBB21",38,0)
 .. I '$P(IBNDTX,U,9) S IBER=IBER_"IB326;"
"RTN","IBCBB21",39,0)
 ;
"RTN","IBCBB21",40,0)
 I 'IBI S IBER=IBER_"IB071;"   ;Require Diag code NOIS:OKL-0304-72495
"RTN","IBCBB21",41,0)
 I IBI,$$INPAT^IBCEF(IBIFN,1),$E($$ICD9^IBACSV(+$P(IBXDATA(1),U)))="V" S Z="Principal Dx V-code may not be valid" D WARN^IBCBB11(Z)
"RTN","IBCBB21",42,0)
 I '$$OCC10^IBCBB2(IBIFN,.IBXDATA,3) S IBER=IBER_"IB093;"
"RTN","IBCBB21",43,0)
 ;
"RTN","IBCBB21",44,0)
 K ^TMP($J,"IBC-RC")
"RTN","IBCBB21",45,0)
 D F^IBCEF("N-UB-04 SERVICE LINE (PRINT)",,,IBIFN)
"RTN","IBCBB21",46,0)
 S (Z0,IBI)=0 F  S IBI=$O(^TMP($J,"IBC-RC",IBI)) Q:'IBI  S Z=$G(^(IBI))  Q:+$P(Z,U,2)=1  I $P(Z,U,2),$P(Z,U,1)=1 D
"RTN","IBCBB21",47,0)
 . I IBER'["IB090;",$P(Z,U,2)>1,($P(Z,U,7)>99999.99!($P(Z,U,8)>99999.99)) S IBER=IBER_"IB090;"
"RTN","IBCBB21",48,0)
 . Q:$P(Z,U,2)'<180&($P(Z,U,2)'>189)  ;Pass days (LOA) don't matter
"RTN","IBCBB21",49,0)
 . I '$P(Z,U,7),'$P(Z,U,8),'Z0,$$COBN^IBCEF(IBIFN)'>1  S Z0="Rev Code(s) having a 0-charge will not be transmitted for the bill" D WARN^IBCBB11(Z0) S Z0=1
"RTN","IBCBB21",50,0)
 K ^TMP($J,"IBC-RC")
"RTN","IBCBB21",51,0)
 Q
"RTN","IBCBB21",52,0)
 ;
"RTN","IBCBB3")
0^34^B37225304^B37223191
"RTN","IBCBB3",1,0)
IBCBB3 ;ALB/TMP - CONTINUATION OF EDIT CHECKS ROUTINE (MEDICARE) ;06/23/98
"RTN","IBCBB3",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,155,349**;21-MAR-94;Build 46
"RTN","IBCBB3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCBB3",4,0)
 ;
"RTN","IBCBB3",5,0)
EDITMRA(IBQUIT,IBER,IBIFN,IBFT) ;
"RTN","IBCBB3",6,0)
 ; Requires execution of GVAR^IBCBB, IBIFN defined
"RTN","IBCBB3",7,0)
 ; File IB ERROR (350.8) contains error codes/text
"RTN","IBCBB3",8,0)
 ;
"RTN","IBCBB3",9,0)
 N IBMRATYP,Z,IBZP,IBZP1,IBOK
"RTN","IBCBB3",10,0)
 S IBQUIT=0 ;Flag to say we have too many errors - quit edits
"RTN","IBCBB3",11,0)
 ;
"RTN","IBCBB3",12,0)
 S IBMRATYP=$$MRATYPE^IBEFUNC(IBIFN,"C")
"RTN","IBCBB3",13,0)
 ;
"RTN","IBCBB3",14,0)
 I IBFT=3 D
"RTN","IBCBB3",15,0)
 . D PARTA
"RTN","IBCBB3",16,0)
 ;
"RTN","IBCBB3",17,0)
 I IBFT=2 D PARTB^IBCBB9
"RTN","IBCBB3",18,0)
 ;
"RTN","IBCBB3",19,0)
 K IBXDATA D F^IBCEF("N-ADMITTING DIAGNOSIS",,,IBIFN)
"RTN","IBCBB3",20,0)
 ; Req. for UB-04 type of bills 11x!18x
"RTN","IBCBB3",21,0)
 I $G(IBXDATA)="",IBFT=3 D  Q:IBQUIT
"RTN","IBCBB3",22,0)
 . N Z
"RTN","IBCBB3",23,0)
 . I "^11^18^"[(U_IBTOB12_U) S IBQUIT=$$IBER^IBCBB3(.IBER,231) Q
"RTN","IBCBB3",24,0)
 . I $$INPAT^IBCEF(IBIFN,1) S Z="Admitting Diagnosis may be required by payer, please verify" D WARN^IBCBB11(Z)
"RTN","IBCBB3",25,0)
 ;
"RTN","IBCBB3",26,0)
 D GETPRV^IBCEU(IBIFN,"2,3,4",.Z)
"RTN","IBCBB3",27,0)
 S IBOK=1,Z=0,IBZP=U F  S Z=$O(Z(Z)) Q:'Z  S:$S($P($G(Z(Z,1)),U,3)["VA(200":1,1:0) IBZP=IBZP_+$P(Z(Z,1),U,3)_U
"RTN","IBCBB3",28,0)
 D ALLPROC^IBCVA1(IBIFN,.IBZP1)
"RTN","IBCBB3",29,0)
 S Z=0 F  S Z=$O(IBZP1(Z)) Q:'Z  I $P(IBZP1(Z),U,18),(U_$P(IBZP1(Z),U,18)_U)'[IBZP S IBOK=0 Q
"RTN","IBCBB3",30,0)
 I 'IBOK D WARN^IBCBB11("At least one provider on a procedure does not match your "_$S(IBFT=2:"render",1:"attend")_"ing or operating provider")
"RTN","IBCBB3",31,0)
 I IBFT=2 D EN^IBCBB2
"RTN","IBCBB3",32,0)
 ; edit checks for UB-04 (institutional) forms
"RTN","IBCBB3",33,0)
 I IBFT=3 D EN^IBCBB21(.IBZPRC92)
"RTN","IBCBB3",34,0)
 ;
"RTN","IBCBB3",35,0)
 Q
"RTN","IBCBB3",36,0)
 ;
"RTN","IBCBB3",37,0)
PARTA ; MEDICARE specific edit checks for PART A claims (UB-04 formats)
"RTN","IBCBB3",38,0)
 ;
"RTN","IBCBB3",39,0)
 N IBI,IBJ,IBX,IBCTYP,VADM,VAPA,IBSTOP,IBDXC,IBDXARY,IBPR,IBLABS
"RTN","IBCBB3",40,0)
 N IBS,IBTUNIT,IBCAGE,IBREV1,IBOCCS,IBOCSDT,IBVALCD,IBOCCD,IBNOPR
"RTN","IBCBB3",41,0)
 N IBCCARY1,IBPATST,IBZADMIT,IBZDISCH,IBXIEN,IBXERR,IBXDATA,IBOCSP
"RTN","IBCBB3",42,0)
 N IBCOV,IBNCOV,IBREVC,IBREVDUP,IBBCPT,IBREVC12,IBREVTOT,IBECAT,IBINC
"RTN","IBCBB3",43,0)
 ;
"RTN","IBCBB3",44,0)
 ; Medicare is the current payer, but no diagnosis codes
"RTN","IBCBB3",45,0)
 I $$WNRBILL^IBEFUNC(IBIFN) D SET^IBCSC4D(IBIFN,.IBDX,.IBDXO) I '$P(IBDX,U,2) S IBQUIT=$$IBER(.IBER,120) Q:IBQUIT
"RTN","IBCBB3",46,0)
 ;
"RTN","IBCBB3",47,0)
 ; Type of Bill must be three digits
"RTN","IBCBB3",48,0)
 I IBTOB'?3N S X=$$IBER(.IBER,103) Q
"RTN","IBCBB3",49,0)
 ;
"RTN","IBCBB3",50,0)
 ; Covered Days
"RTN","IBCBB3",51,0)
 S IBCTYP=0
"RTN","IBCBB3",52,0)
 S IBCOV=$P(IBNDU2,U,2),IBNCOV=$P(IBNDU2,U,3)
"RTN","IBCBB3",53,0)
 ;
"RTN","IBCBB3",54,0)
 ; If interim bill, covered days must not be greater than 60
"RTN","IBCBB3",55,0)
 I "23"[$E(IBTOB,3),IBCOV>60 S IBQUIT=$$IBER(.IBER,"096") Q:IBQUIT
"RTN","IBCBB3",56,0)
 ;
"RTN","IBCBB3",57,0)
 ; I bill type is 11x or 18x or 21x then we need covered days
"RTN","IBCBB3",58,0)
 I "^11^18^21^"[(U_IBTOB12_U) S IBCTYP=1 I IBCOV="" S IBQUIT=$$IBER(.IBER,106) Q:IBQUIT
"RTN","IBCBB3",59,0)
 ;
"RTN","IBCBB3",60,0)
 S (IBI,IBJ)=0
"RTN","IBCBB3",61,0)
 K IBXDATA D F^IBCEF("N-CONDITION CODES",,,IBIFN)
"RTN","IBCBB3",62,0)
 ; Re-sort the condition codes by code
"RTN","IBCBB3",63,0)
 S IBI=0 F  S IBI=$O(IBXDATA(IBI)) Q:'IBI  S IBCCARY1($P(IBXDATA(IBI),U))=""
"RTN","IBCBB3",64,0)
 ;
"RTN","IBCBB3",65,0)
 ; for condition code 40, covered days must be 0
"RTN","IBCBB3",66,0)
 I $D(IBCCARY1(40)),IBCOV'=0 S IBQUIT=$$IBER(.IBER,107) Q:IBQUIT
"RTN","IBCBB3",67,0)
 ;
"RTN","IBCBB3",68,0)
 ; cov days+non=to date -from date unless the patient status = 30 (still
"RTN","IBCBB3",69,0)
 ;  pt) or outpatient or if the to date and from date are same then add 1
"RTN","IBCBB3",70,0)
 S IBPATST="",IBX=$P(IBNDU,U,12),IBPATST=$P($G(^DGCR(399.1,+IBX,0)),U,2)
"RTN","IBCBB3",71,0)
 S IBINC=$S(IBPATST=30!(IBFDT=IBTDT):1,1:0)
"RTN","IBCBB3",72,0)
 I $$INPAT^IBCEF(IBIFN,1),(IBCOV+IBNCOV)'=($$FMDIFF^XLFDT(IBTDT,IBFDT)+IBINC) S IBQUIT=$$IBER(.IBER,108) Q:IBQUIT
"RTN","IBCBB3",73,0)
 ;
"RTN","IBCBB3",74,0)
 ; if covered days >100 and type of bill is 21x or 18x error
"RTN","IBCBB3",75,0)
 I IBCOV>100,(IBTOB12=18!(IBTOB12=21)) S IBQUIT=$$IBER(.IBER,109) Q:IBQUIT
"RTN","IBCBB3",76,0)
 ;
"RTN","IBCBB3",77,0)
 S (IBJ,IBTUNIT,IBS,IBREVTOT("AC"),IBREVTOT("AI"),IBREVTOT("AO"),IBREVTOT)=0
"RTN","IBCBB3",78,0)
 ;
"RTN","IBCBB3",79,0)
 K IBXDATA D F^IBCEF("N-UB-04 SERVICE LINE (EDI)",,,IBIFN) ;Get rev codes
"RTN","IBCBB3",80,0)
 ;
"RTN","IBCBB3",81,0)
 ; Re-sort the revenue codes by code
"RTN","IBCBB3",82,0)
 ;>> IBREV1(rev code,x)=Rev code^ptr cpt^unit chg^units^total^tot unc
"RTN","IBCBB3",83,0)
 ;   IBREV1(rev code) = revenue code edit category
"RTN","IBCBB3",84,0)
 ;
"RTN","IBCBB3",85,0)
 ; IBNOPR = flag that determines if there are revenue codes with
"RTN","IBCBB3",86,0)
 ;          charges that do not have a procedure - no need to check
"RTN","IBCBB3",87,0)
 ;          for billable MCR procedures if at least one RC is billable
"RTN","IBCBB3",88,0)
 ;          1 = there is at least one billable revenue code without a
"RTN","IBCBB3",89,0)
 ;              procedure
"RTN","IBCBB3",90,0)
 ;
"RTN","IBCBB3",91,0)
 S (IBNOPR,IBI)=0
"RTN","IBCBB3",92,0)
 F  S IBI=$O(IBXDATA(IBI)) Q:'IBI  D
"RTN","IBCBB3",93,0)
 . S IBJ=$P(IBXDATA(IBI),U),IBECAT=""
"RTN","IBCBB3",94,0)
 . I 'IBNOPR D
"RTN","IBCBB3",95,0)
 .. I $P(IBXDATA(IBI),U,2)'="" S IBPR($P(IBXDATA(IBI),U,2))=IBI Q
"RTN","IBCBB3",96,0)
 .. S IBNOPR=1 K IBPR
"RTN","IBCBB3",97,0)
 . S:$D(IBREV1(IBJ)) IBECAT=$G(IBREV1(IBJ))
"RTN","IBCBB3",98,0)
 . I '$D(IBREV1(IBJ))!(IBECAT="") D  S IBREV1(IBJ)=IBECAT
"RTN","IBCBB3",99,0)
 . . ;
"RTN","IBCBB3",100,0)
 . . ; Accomodations (AC)
"RTN","IBCBB3",101,0)
 . . I (IBJ'<100&(IBJ'>219))!(IBJ=224) S IBECAT="AC" Q
"RTN","IBCBB3",102,0)
 . . ;
"RTN","IBCBB3",103,0)
 . . ; Ancillary Outpatient (AO)
"RTN","IBCBB3",104,0)
 . . I '$$INPAT^IBCEF(IBIFN,1) S IBECAT="AO" Q
"RTN","IBCBB3",105,0)
 . . ;
"RTN","IBCBB3",106,0)
 . . ; Ancillary Inpatient (AI)
"RTN","IBCBB3",107,0)
 . . S IBECAT="AI"
"RTN","IBCBB3",108,0)
 . ;
"RTN","IBCBB3",109,0)
 . S IBREV1(IBJ,+$O(IBREV1(IBJ,""),-1)+1)=IBXDATA(IBI)
"RTN","IBCBB3",110,0)
 . S IBREVTOT(IBECAT)=IBREVTOT(IBECAT)+$P(IBXDATA(IBI),U,6)
"RTN","IBCBB3",111,0)
 . I IBECAT="AC" S IBTUNIT=IBTUNIT+$P(IBXDATA(IBI),U,4)
"RTN","IBCBB3",112,0)
 ;
"RTN","IBCBB3",113,0)
 I $$NEEDMRA^IBEFUNC(IBIFN),$O(IBPR(""))'="" D  Q:IBQUIT
"RTN","IBCBB3",114,0)
 . ; Don't allow a bill containing only billable procedures for:
"RTN","IBCBB3",115,0)
 . ;    Oxygen, labs, or influenza shots
"RTN","IBCBB3",116,0)
 . ;  OR a bill with prosthetics on it
"RTN","IBCBB3",117,0)
 . ;    to be sent to MEDICARE for an MRA
"RTN","IBCBB3",118,0)
 . D NONMCR(.IBPR,.IBLABS) ; Remove Oxygen, labs, influenza shots
"RTN","IBCBB3",119,0)
 . ;I $O(IBPR(""))="" D
"RTN","IBCBB3",120,0)
 . I $G(IBLABS) D WARN^IBCBB11("The only possible billable procedures on this bill are labs -"),WARN^IBCBB11(" Please verify that MEDICARE does not reimburse these labs at 100%") Q
"RTN","IBCBB3",121,0)
 . I $O(IBPR(""))="" D
"RTN","IBCBB3",122,0)
 .. S IBQUIT=$$IBER(.IBER,"098")
"RTN","IBCBB3",123,0)
 ;
"RTN","IBCBB3",124,0)
 ; covered days+non covered = units of accom rev codes
"RTN","IBCBB3",125,0)
 ; Check room and board
"RTN","IBCBB3",126,0)
 I IBTUNIT,IBTUNIT'=(IBCOV+IBNCOV) S IBQUIT=$$IBER(.IBER,114) Q:IBQUIT
"RTN","IBCBB3",127,0)
 ;
"RTN","IBCBB3",128,0)
 ; Non Covered Days
"RTN","IBCBB3",129,0)
 ;   required when the type of bill is 11x,18x,21x or covered days=0
"RTN","IBCBB3",130,0)
 I IBNCOV="",(IBCTYP!(IBCOV=0)) S IBQUIT=$$IBER(.IBER,115) Q:IBQUIT
"RTN","IBCBB3",131,0)
 ;
"RTN","IBCBB3",132,0)
 ; if cc code=40 then non-covered days must be 1
"RTN","IBCBB3",133,0)
 I $D(IBCCARY1(40)),IBNCOV'=1 S IBQUIT=$$IBER(.IBER,116) Q:IBQUIT
"RTN","IBCBB3",134,0)
 ;
"RTN","IBCBB3",135,0)
 ; Patient Sex
"RTN","IBCBB3",136,0)
 ; must be "M" or "F"
"RTN","IBCBB3",137,0)
 D DEM^VADPT
"RTN","IBCBB3",138,0)
 I $P(VADM(5),U)'="M",$P(VADM(5),U)'="F" S IBQUIT=$$IBER(.IBER,124) Q:IBQUIT
"RTN","IBCBB3",139,0)
 ;
"RTN","IBCBB3",140,0)
 D ^IBCBB4
"RTN","IBCBB3",141,0)
 Q
"RTN","IBCBB3",142,0)
 ;
"RTN","IBCBB3",143,0)
IBER(IBER,ERRNO) ; Sets error list
"RTN","IBCBB3",144,0)
 ; NOTE: add code to check error list > 20 ... If so, display message and
"RTN","IBCBB3",145,0)
 ;   quit so we don't get too many errors at once to handle
"RTN","IBCBB3",146,0)
 ;   Print all if printing list
"RTN","IBCBB3",147,0)
 ;
"RTN","IBCBB3",148,0)
 I '$G(IBQUIT) D
"RTN","IBCBB3",149,0)
 . I ERRNO?1N.N S:$L(ERRNO)<3 ERRNO=$E("00",1,3-$L(ERRNO))_ERRNO
"RTN","IBCBB3",150,0)
 . I $L(IBER,";")>19,'$G(IBPRT("PRT")) S IBER=IBER_"IB999;",IBQUIT=1
"RTN","IBCBB3",151,0)
 . I $G(IBER)'[("IB"_ERRNO_";") S IBER=IBER_"IB"_ERRNO_";"
"RTN","IBCBB3",152,0)
 Q IBQUIT
"RTN","IBCBB3",153,0)
 ;
"RTN","IBCBB3",154,0)
NONMCR(IBPR,IBLABS) ;  Delete all oxygen and lab, flu shot CPT entries from IBPR
"RTN","IBCBB3",155,0)
 ; IBPR = array subscripted by CPT codes from bill
"RTN","IBCBB3",156,0)
 ; IBLABS = flag returned =1 if labs found on bill
"RTN","IBCBB3",157,0)
 N Z S IBLABS=0
"RTN","IBCBB3",158,0)
 ; Oxygen
"RTN","IBCBB3",159,0)
 F Z="A0422","A4575","A4616","A4619","A4620","A4621","E0455","E1353","E1355" K IBPR(Z)
"RTN","IBCBB3",160,0)
 F Z=77:1:85 S Z0="E13"_Z K IBPR(Z0)
"RTN","IBCBB3",161,0)
 ; Labs
"RTN","IBCBB3",162,0)
 ;S Z="80000" F  S Z=$O(IBPR(Z)) Q:Z'?1"8"4N  K IBPR(Z) S IBLABS=1
"RTN","IBCBB3",163,0)
 S Z="80000" F  S Z=$O(IBPR(Z)) Q:Z'?1"8"4N  S IBLABS=1
"RTN","IBCBB3",164,0)
 ; Flu shots
"RTN","IBCBB3",165,0)
 F Z="90724","G0008","90732","G0009","90657","90658","90659","90660" K IBPR(Z)
"RTN","IBCBB3",166,0)
 Q
"RTN","IBCBB3",167,0)
 ;
"RTN","IBCBB3",168,0)
MCRANUM(IBIFN) ; Determine MEDICARE A provider ID # from bedsection for
"RTN","IBCBB3",169,0)
 ; bill ien IBIFN
"RTN","IBCBB3",170,0)
 N IBX
"RTN","IBCBB3",171,0)
 ; PART A MRA (only) needed - determine if psych/non-psych claim
"RTN","IBCBB3",172,0)
 N IBX,IBI
"RTN","IBCBB3",173,0)
 S IBI=$P($G(^DGCR(399,IBIFN,"U")),U,11)
"RTN","IBCBB3",174,0)
 S IBX=$S($TR($P($G(^DGCR(399.1,+IBI,0)),U),"psych","PSYCH")'["PSYCH":670899,1:674499)
"RTN","IBCBB3",175,0)
 Q IBX
"RTN","IBCBB3",176,0)
 ;
"RTN","IBCBB3",177,0)
MCRACK(IBIFN,X,IBFLD) ; Check for MEDICARE A for bill IBIFN
"RTN","IBCBB3",178,0)
 ; Called from CLAIM STATUS MRA field (#24) xrefs in file 399
"RTN","IBCBB3",179,0)
 ; X = current value of field 399;24
"RTN","IBCBB3",180,0)
 ; IBFLD = 1 for primary ins co, 2 for secondary, 3 for tertiary
"RTN","IBCBB3",181,0)
 N IB
"RTN","IBCBB3",182,0)
 S IB=0
"RTN","IBCBB3",183,0)
 I +X,$$COBN^IBCEF(IBIFN)=IBFLD,$$WNRBILL^IBEFUNC(IBIFN,IBFLD),$$MRATYPE^IBEFUNC(IBIFN,"C")="A" S IB=1
"RTN","IBCBB3",184,0)
 Q IB
"RTN","IBCBB3",185,0)
 ;
"RTN","IBCBB8")
0^37^B4642279^B4647377
"RTN","IBCBB8",1,0)
IBCBB8 ;ALB/BGA - CON'T MEDICARE EDIT CHECKS ;08/12/98
"RTN","IBCBB8",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210,349**;21-MAR-94;Build 46
"RTN","IBCBB8",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCBB8",4,0)
 ;
"RTN","IBCBB8",5,0)
 ; UB-04 CLAIM CERTIFICATE ID NUMBER
"RTN","IBCBB8",6,0)
 I '$$VALID(IBIFN) S IBQUIT=$$IBER^IBCBB3(.IBER,215) Q:IBQUIT
"RTN","IBCBB8",7,0)
 ;
"RTN","IBCBB8",8,0)
 ; Req. on Primary Payor when Medicare is secondary and value 12-15,43
"RTN","IBCBB8",9,0)
 I $$COBN^IBCEF(IBIFN)=2 D  Q:IBQUIT
"RTN","IBCBB8",10,0)
 . I $O(IBVALCD(16),-1)'<12!$D(IBVALCD(43)) D 
"RTN","IBCBB8",11,0)
 . . K IBXDATA D F^IBCEF("N-ALL INSURED EMPLOYER INFO",,,IBIFN)
"RTN","IBCBB8",12,0)
 . . ; employer name^city^state abbreviation^state ien
"RTN","IBCBB8",13,0)
 . . ;I '$O(IBXDATA(0)) S IBQUIT=$$IBER^IBCBB3(.IBER,222) Q
"RTN","IBCBB8",14,0)
 . . ; Employer name missing
"RTN","IBCBB8",15,0)
 . . ;I $P($G(IBXDATA(1)),U)="" S IBQUIT=$$IBER^IBCBB3(.IBER,222)
"RTN","IBCBB8",16,0)
 . . ; Employer address missing
"RTN","IBCBB8",17,0)
 . . ;I $TR($P($G(IBXDATA(1)),U,2,4),U)="" S IBQUIT=$$IBER^IBCBB3(.IBER,223)
"RTN","IBCBB8",18,0)
 . ;
"RTN","IBCBB8",19,0)
 . ; Insured's Group Number 
"RTN","IBCBB8",20,0)
 . ;  if Medicare is secondary, need insurance group number for primary
"RTN","IBCBB8",21,0)
 . K IBXDATA D F^IBCEF("N-ALL INSURANCE GROUP NUMBER",,,IBIFN)
"RTN","IBCBB8",22,0)
 . I $P($G(IBXDATA(1)),U)="" S IBQUIT=$$IBER^IBCBB3(.IBER,225)
"RTN","IBCBB8",23,0)
 ;
"RTN","IBCBB8",24,0)
 ; UB-04 Diagnosis Codes
"RTN","IBCBB8",25,0)
 K IBXDATA D F^IBCEF("N-DIAGNOSES",,,IBIFN)
"RTN","IBCBB8",26,0)
 ;
"RTN","IBCBB8",27,0)
 S IBI=0
"RTN","IBCBB8",28,0)
 F  S IBI=$O(IBXDATA(IBI)) Q:'IBI  D  Q:IBQUIT
"RTN","IBCBB8",29,0)
 . S IBDXC=$P($$ICD9^IBACSV(+$P(IBXDATA(IBI),U)),U)
"RTN","IBCBB8",30,0)
 . ; no duplicate dx
"RTN","IBCBB8",31,0)
 . I IBDXC'="",$D(IBDXARY(IBDXC)) S IBQUIT=$$IBER^IBCBB3(.IBER,227)
"RTN","IBCBB8",32,0)
 . I IBDXC'="",'$D(IBDXARY(IBDXC)) S IBDXARY(IBDXC)=IBXDATA(IBI)
"RTN","IBCBB8",33,0)
 Q:IBQUIT
"RTN","IBCBB8",34,0)
 ;
"RTN","IBCBB8",35,0)
 Q
"RTN","IBCBB8",36,0)
 ;
"RTN","IBCBB8",37,0)
VALID(IBIFN) ; Verify HIC # is valid
"RTN","IBCBB8",38,0)
 N VAL,IBXDATA
"RTN","IBCBB8",39,0)
 S VAL=1
"RTN","IBCBB8",40,0)
 G:'$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN)) VALQ
"RTN","IBCBB8",41,0)
 ;
"RTN","IBCBB8",42,0)
 K IBXDATA D F^IBCEF("N-CURR INSURED ID",,,IBIFN)
"RTN","IBCBB8",43,0)
 ;
"RTN","IBCBB8",44,0)
 I $G(IBXDATA)="" S VAL=0 G VALQ
"RTN","IBCBB8",45,0)
 ;
"RTN","IBCBB8",46,0)
 S IBXDATA=$TR(IBXDATA,"-")
"RTN","IBCBB8",47,0)
 I $L(IBXDATA)<9 S VAL=0 G VALQ
"RTN","IBCBB8",48,0)
 ; HIC # must pass standard MEDICARE edits
"RTN","IBCBB8",49,0)
 I '$$VALHIC^IBCNSMM(IBXDATA) S VAL=0
"RTN","IBCBB8",50,0)
 ;
"RTN","IBCBB8",51,0)
VALQ Q VAL
"RTN","IBCBB8",52,0)
 ;
"RTN","IBCBB9")
0^78^B10249958^B10255056
"RTN","IBCBB9",1,0)
IBCBB9 ;ALB/BGA MEDICARE PART B EDIT CHECKS ;10/15/98
"RTN","IBCBB9",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,155,349**;21-MAR-94;Build 46
"RTN","IBCBB9",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCBB9",4,0)
 ;
"RTN","IBCBB9",5,0)
PARTB ; MEDICARE specific edit checks for PART B claims (CMS-1500)
"RTN","IBCBB9",6,0)
 ;
"RTN","IBCBB9",7,0)
 N IBXDATA,IBXERR,IBXIEN,IBXSAVE,IBPR,IBDTFLG
"RTN","IBCBB9",8,0)
 ;
"RTN","IBCBB9",9,0)
 I $$NEEDMRA^IBEFUNC(IBIFN) D
"RTN","IBCBB9",10,0)
 . K IBXDATA
"RTN","IBCBB9",11,0)
 . D F^IBCEF("N-HCFA 1500 SERVICE LINE (EDI)",,,IBIFN)
"RTN","IBCBB9",12,0)
 . S IBI=0
"RTN","IBCBB9",13,0)
 . F  S IBI=$O(IBXDATA(IBI)) Q:'IBI  D
"RTN","IBCBB9",14,0)
 .. S IBJ=$P(IBXDATA(IBI),U,5)
"RTN","IBCBB9",15,0)
 .. I IBJ'="","^CJ^HC^"[(U_$P(IBXDATA(IBI),U,6)_U) S IBPR(IBJ)=""
"RTN","IBCBB9",16,0)
 . I $$REQMRA^IBEFUNC(IBIFN),$O(IBXDATA(""),-1)>12 D WARN^IBCBB11("This claim will be split into multiple EOB'S since there are more than 12"),WARN^IBCBB11("service lines being submitted on the claim.")
"RTN","IBCBB9",17,0)
 . I $$REQMRA^IBEFUNC(IBIFN),$E(IBFDT,1,3)'=$E(IBTDT,1,3) D WARN^IBCBB11("This claim will be split into multiple EOB'S due to the service dates"),WARN^IBCBB11("spanning different calendar years.")
"RTN","IBCBB9",18,0)
 . D NONMCR^IBCBB3(.IBPR,.IBLABS) ; Oxygen, labs, influenza shots
"RTN","IBCBB9",19,0)
 . S Z="80000" F  S Z=$O(IBPR(Z)) Q:Z'?1"8"4N  S IBLABS=1
"RTN","IBCBB9",20,0)
 . I $G(IBLABS) D WARN^IBCBB11("The only possible billable procedures on this bill are labs -"),WARN^IBCBB11(" Please verify that MEDICARE does not reimburse these labs at 100%") Q
"RTN","IBCBB9",21,0)
 . I $O(IBPR(""))="" S IBQUIT=$$IBER^IBCBB3(.IBER,"098")
"RTN","IBCBB9",22,0)
 ;
"RTN","IBCBB9",23,0)
 ; First char of the pat's first and last name must be present and
"RTN","IBCBB9",24,0)
 ; must be an alpha
"RTN","IBCBB9",25,0)
 K IBXDATA D F^IBCEF("N-PATIENT NAME",,,IBIFN)
"RTN","IBCBB9",26,0)
 S IBXDATA=$$NAME^IBCEFG1(IBXDATA)
"RTN","IBCBB9",27,0)
 I $S($G(IBXDATA)="":1,$E($P(IBXDATA,U))=" "!($E($P(IBXDATA,U))'?1A):1,$E($P(IBXDATA,U,2))=" "!($E($P(IBXDATA,U,2))'?1A):1,1:0) S IBQUIT=$$IBER^IBCBB3(.IBER,300) Q:IBQUIT
"RTN","IBCBB9",28,0)
 ;
"RTN","IBCBB9",29,0)
 ; First char of the pat's address and city must not be a space
"RTN","IBCBB9",30,0)
 K IBXDATA D F^IBCEF("N-PATIENT STREET ADDRESS LN 1",,,IBIFN)
"RTN","IBCBB9",31,0)
 I $G(IBXDATA)=""!($E($G(IBXDATA))=" ") S IBQUIT=$$IBER^IBCBB3(.IBER,302) Q:IBQUIT
"RTN","IBCBB9",32,0)
 ;
"RTN","IBCBB9",33,0)
 K IBXDATA D F^IBCEF("N-PATIENT CITY",,,IBIFN)
"RTN","IBCBB9",34,0)
 I $G(IBXDATA)=""!($E($G(IBXDATA))=" ") S IBQUIT=$$IBER^IBCBB3(.IBER,302) Q:IBQUIT
"RTN","IBCBB9",35,0)
 ;
"RTN","IBCBB9",36,0)
 ; Must be a valid HIC #
"RTN","IBCBB9",37,0)
 I '$$VALID^IBCBB8(IBIFN) S IBQUIT=$$IBER^IBCBB3(.IBER,215) Q:IBQUIT
"RTN","IBCBB9",38,0)
 ;
"RTN","IBCBB9",39,0)
 ; Specialty code 99 is not valid for Medicare MRA request claims
"RTN","IBCBB9",40,0)
 I $$REQMRA^IBEFUNC(IBIFN),$$BILLSPEC^IBCEU3(IBIFN)=99 S IBQUIT=$$IBER^IBCBB3(.IBER,122) Q:IBQUIT
"RTN","IBCBB9",41,0)
 ;
"RTN","IBCBB9",42,0)
 Q
"RTN","IBCBB9",43,0)
 ;
"RTN","IBCCC2")
0^76^B66228987^B57341017
"RTN","IBCCC2",1,0)
IBCCC2 ;ALB/AAS - CANCEL AND CLONE A BILL - CONTINUED ;6/6/03 9:56am
"RTN","IBCCC2",2,0)
 ;;2.0;INTEGRATED BILLING;**80,106,124,138,51,151,137,161,182,211,245,155,296,320,348,349**;21-MAR-94;Build 46
"RTN","IBCCC2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCCC2",4,0)
 ;
"RTN","IBCCC2",5,0)
 ;MAP TO DGCRCC2
"RTN","IBCCC2",6,0)
 ;
"RTN","IBCCC2",7,0)
 ;STEP 5 - get remainder of data to move and store in MCCR then x-ref
"RTN","IBCCC2",8,0)
 ;STEP 6 - go to screens, come out to IBB1 or something like that
"RTN","IBCCC2",9,0)
 ;
"RTN","IBCCC2",10,0)
STEP5 S IBIFN1=$P(^DGCR(399,IBIFN,0),"^",15) G END:$S(IBIFN1="":1,'$D(^DGCR(399,IBIFN1,0)):1,1:0)
"RTN","IBCCC2",11,0)
 ;
"RTN","IBCCC2",12,0)
 ;move pure data nodes
"RTN","IBCCC2",13,0)
 F I="I1","I2","I3","M1" I $D(^DGCR(399,IBIFN1,I)) S ^DGCR(399,IBIFN,I)=^DGCR(399,IBIFN1,I)
"RTN","IBCCC2",14,0)
 ;
"RTN","IBCCC2",15,0)
 ;move top level data node. ;Do not move 'TX' node
"RTN","IBCCC2",16,0)
 F I="U","U1","U2","U3","UF2","UF3","UF31","C","M" I $D(^DGCR(399,IBIFN1,I)) S IBND(I)=^(I) D @I
"RTN","IBCCC2",17,0)
 ;
"RTN","IBCCC2",18,0)
 ;move multiple level data
"RTN","IBCCC2",19,0)
 F I="CC","OC","OP","OT","RC","CP","CV","PRV" I $D(^DGCR(399,IBIFN1,I,0)) D @I
"RTN","IBCCC2",20,0)
 ;
"RTN","IBCCC2",21,0)
 D FTPRV^IBCEU5(IBIFN) ; Ask change prov type if form type not the same
"RTN","IBCCC2",22,0)
 D COBCHG(IBIFN,,.IBCOB)
"RTN","IBCCC2",23,0)
 ;
"RTN","IBCCC2",24,0)
 D ^IBCCC3 ; copy table files (362.3)
"RTN","IBCCC2",25,0)
 ;
"RTN","IBCCC2",26,0)
 S I=$G(^DGCR(399,IBIFN1,0)) I $P(I,U,13)=7,$P(I,U,20)=1 D COPYB^IBCDC(IBIFN1,IBIFN) ; update auto bill files
"RTN","IBCCC2",27,0)
 D PRIOR(IBIFN) ; add new bill to previous bills in series, primary/secondary
"RTN","IBCCC2",28,0)
 I +$G(IBCTCOPY) N IBAUTO S IBAUTO=1 D PROC^IBCU7A(IBIFN),BILL^IBCRBC(IBIFN),CPTMOD26^IBCU73(IBIFN) D RECALL^DILFD(399,IBIFN_",",DUZ) G END
"RTN","IBCCC2",29,0)
 ;
"RTN","IBCCC2",30,0)
STEP6 N IBGOEND
"RTN","IBCCC2",31,0)
 I '$G(IBCE("EDI"))!$G(IBCE("EDI","NEW")),'$G(IBCEAUTO) D IBSCEDT G END:$G(IBGOEND)
"RTN","IBCCC2",32,0)
 ;
"RTN","IBCCC2",33,0)
 ;
"RTN","IBCCC2",34,0)
END K DFN,IB,IBA,IBA2,IBAD,IBADD1,IBBNO,IBCAN,IBCCC,IBDA,IBDPT,IBDR,IBDT,IBI,IBI1,IBIDS,IBIFN,IBIFN1,IBND,IBQUIT,IBU,IBUN,IBARST,IBCOB,IBCNCOPY,IBCBCOPY
"RTN","IBCCC2",35,0)
 K IBV,IBV1,IBW,IBWW,IBYN,IBZZ,PRCASV,PRCAERCD,PRCAERR,PRCASVC,PRCAT,IBBT,IBCH,IBNDS,IBOA,IBREV,IBX,DGXRF1,VAEL,VAERR,IBAC,IBCCC,IBDD1,IBIN,DGREV,DGREV00,DGREVHDR,IBCHK
"RTN","IBCCC2",36,0)
 K IBBS,IBLS,DGPCM,IBIP,IBND0,IBNDU,IBO,IBPTF,IBST,IBUC,IBDD,D,%,%DT,DIC,VA,VADM,X,X1,X2,X3,X4,Y,I,J,K,DGRVRCAL,DDH,DGACTDT,DGAMNT,DGBR,DGBRN,DGBSI,DGBSLOS,IBA1,IBOD,IBINS,IBN,IBPROC,DGFUNC,DGIFN
"RTN","IBCCC2",37,0)
 Q
"RTN","IBCCC2",38,0)
 ;
"RTN","IBCCC2",39,0)
 ;
"RTN","IBCCC2",40,0)
IBSCEDT ; call the IB bill edit screens and validate the data
"RTN","IBCCC2",41,0)
 N IBV,IBPAR,IBAC,IBHV,IBH,IBCIREDT
"RTN","IBCCC2",42,0)
 D RECALL^DILFD(399,IBIFN_",",DUZ)
"RTN","IBCCC2",43,0)
ST1 S IBV=0 D ^IBCSCU,^IBCSC1 I $G(IBPOPOUT) S IBGOEND=1 G IBSCX
"RTN","IBCCC2",44,0)
 S IBAC=1
"RTN","IBCCC2",45,0)
 D ^IBCB1
"RTN","IBCCC2",46,0)
 I $G(IBCIREDT) G ST1
"RTN","IBCCC2",47,0)
IBSCX ;
"RTN","IBCCC2",48,0)
 Q
"RTN","IBCCC2",49,0)
 ;
"RTN","IBCCC2",50,0)
 ;
"RTN","IBCCC2",51,0)
U F J=3,4,6:1:17,20 I $P(IBND("U"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U"),"^",J)=$P(IBND("U"),"^",J)
"RTN","IBCCC2",52,0)
 Q
"RTN","IBCCC2",53,0)
U1 F J=1:1:9,13,14 I $P(IBND("U1"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U1"),"^",J)=$P(IBND("U1"),"^",J)
"RTN","IBCCC2",54,0)
 Q
"RTN","IBCCC2",55,0)
U2 F J=1:1:19 I $P(IBND("U2"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U2"),"^",J)=$P(IBND("U2"),"^",J)
"RTN","IBCCC2",56,0)
 Q
"RTN","IBCCC2",57,0)
U3 F J=1:1:3 I $P(IBND("U3"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U3"),"^",J)=$P(IBND("U3"),"^",J)
"RTN","IBCCC2",58,0)
 Q
"RTN","IBCCC2",59,0)
UF2 F J=1,3 I $P(IBND("UF2"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF2"),"^",J)=$P(IBND("UF2"),"^",J)
"RTN","IBCCC2",60,0)
 Q
"RTN","IBCCC2",61,0)
UF3 F J=1:1:7 I $P(IBND("UF3"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF3"),"^",J)=$P(IBND("UF3"),"^",J)
"RTN","IBCCC2",62,0)
 Q
"RTN","IBCCC2",63,0)
UF31 F J=1:1:3 I $P(IBND("UF31"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF31"),"^",J)=$P(IBND("UF31"),"^",J)
"RTN","IBCCC2",64,0)
 Q
"RTN","IBCCC2",65,0)
C F J=10 I $P(IBND("C"),"^",J)]"" S $P(^DGCR(399,IBIFN,"C"),"^",J)=$P(IBND("C"),"^",J)
"RTN","IBCCC2",66,0)
 I '$D(^DGCR(399,IBIFN1,"CP")) D CP1
"RTN","IBCCC2",67,0)
 Q
"RTN","IBCCC2",68,0)
M F J=1:1:14 I $P(IBND("M"),"^",J)]"" S $P(^DGCR(399,IBIFN,"M"),"^",J)=$P(IBND("M"),"^",J)
"RTN","IBCCC2",69,0)
 Q
"RTN","IBCCC2",70,0)
CC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",71,0)
 S IBDD=399.04 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",72,0)
OP S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",73,0)
 S IBDD=399.043 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",74,0)
 Q
"RTN","IBCCC2",75,0)
OC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",76,0)
 S IBDD=399.041 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",77,0)
 Q
"RTN","IBCCC2",78,0)
OT S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",79,0)
 S IBDD=399.048 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",80,0)
 Q
"RTN","IBCCC2",81,0)
CV ; Don't copy value codes from inpatient inst to inpatient prof bills
"RTN","IBCCC2",82,0)
 I $$FT^IBCEF(IBIFN1)'=2,$$FT^IBCEF(IBIFN)=2 Q
"RTN","IBCCC2",83,0)
 S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",84,0)
 S IBDD=399.047 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",85,0)
 Q
"RTN","IBCCC2",86,0)
RC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",87,0)
 S IBDD=399.042 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S IBND("RC")=^(0) F K=1:1:15 S $P(^DGCR(399,IBIFN,I,J,0),"^",K)=$P(IBND("RC"),"^",K),X=$P(IBND("RC"),"^",K)
"RTN","IBCCC2",88,0)
 Q
"RTN","IBCCC2",89,0)
CP S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",90,0)
 I +$G(IBNOCPT) Q
"RTN","IBCCC2",91,0)
 S IBDD=399.0304 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S IBND("CP")=^(0),IBND("CP-AUX")=$G(^("AUX")) D
"RTN","IBCCC2",92,0)
 . F K=1:1:7,9:1:14,16:1:22 S $P(^DGCR(399,IBIFN,I,J,0),"^",K)=$P(IBND("CP"),"^",K)
"RTN","IBCCC2",93,0)
 . ; esg - 11/2/06 - IB*2*348 - 50.09 field was added - AUX piece [9]
"RTN","IBCCC2",94,0)
 . I IBND("CP-AUX")'="" F K=1:1:9 S $P(^DGCR(399,IBIFN,I,J,"AUX"),"^",K)=$P(IBND("CP-AUX"),"^",K)
"RTN","IBCCC2",95,0)
 . I $D(^DGCR(399,IBIFN1,I,J,"MOD",0)) S ^DGCR(399,IBIFN,I,J,"MOD",0)=^DGCR(399,IBIFN1,I,J,"MOD",0) D
"RTN","IBCCC2",96,0)
 .. S K=0 F  S K=$O(^DGCR(399,IBIFN1,I,J,"MOD",K)) Q:'K  D
"RTN","IBCCC2",97,0)
 ... I $G(IBNOTC),$P($$MOD^ICPTMOD(+$P($G(^DGCR(399,IBIFN1,I,J,"MOD",K,0)),U,2),"I"),U,2)="TC" Q  ; Don't copy TC modifier from inst to prof bill
"RTN","IBCCC2",98,0)
 ... S ^DGCR(399,IBIFN,I,J,"MOD",K,0)=^DGCR(399,IBIFN1,I,J,"MOD",K,0)
"RTN","IBCCC2",99,0)
CP1 S IBCOD=$P($G(^DGCR(399,IBIFN,0)),"^",9) Q:IBCOD=""!('$D(^DGCR(399,IBIFN1,"C")))
"RTN","IBCCC2",100,0)
 I IBCOD=9 F DGI=4,5,6 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICD0(",DGPROCDT=$P(^("C"),"^",DGI+7) D FILE
"RTN","IBCCC2",101,0)
 I IBCOD=4 F DGI=1,2,3 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICPT(",DGPROCDT=$P(^("C"),"^",DGI+10) D FILE
"RTN","IBCCC2",102,0)
 I IBCOD=5 F DGI=7,8,9 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICPT(",DGPROCDT=$P(^("C"),"^",DGI+4) D FILE
"RTN","IBCCC2",103,0)
 Q
"RTN","IBCCC2",104,0)
 ;
"RTN","IBCCC2",105,0)
PRV S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",106,0)
 N Z,Z0
"RTN","IBCCC2",107,0)
 S Z=$P($G(^DGCR(399,IBIFN,0)),U,19),Z0=$P($G(^DGCR(399,IBIFN1,0)),U,19)
"RTN","IBCCC2",108,0)
 S IBDD=399.0222 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) D
"RTN","IBCCC2",109,0)
 . S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",110,0)
 . I Z'=Z0,$S(X=3:Z0=3,X=4:Z0=2,1:0) S $P(^DGCR(399,IBIFN,I,J,0),U)=(Z0+1)
"RTN","IBCCC2",111,0)
 Q
"RTN","IBCCC2",112,0)
 ;
"RTN","IBCCC2",113,0)
COB S J=0 F  S J=$O(IBCOB(I,J)) Q:'J  S $P(^DGCR(399,IBIFN,I),U,J)=IBCOB(I,J)
"RTN","IBCCC2",114,0)
 Q
"RTN","IBCCC2",115,0)
 ;
"RTN","IBCCC2",116,0)
FILE N DIC,DIE,DR,DA,X,Y,DLAYGO,DD,DO
"RTN","IBCCC2",117,0)
 I '$D(^DGCR(399,IBIFN,"CP",0)) S DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCCC2",118,0)
 S DIC(0)="L",DLAYGO=399,DA(1)=IBIFN,DIC="^DGCR(399,"_DA(1)_",""CP""," Q:X=""  D FILE^DICN K DO,DD Q:+Y<1  S DA=+Y
"RTN","IBCCC2",119,0)
 S DIE="^DGCR(399,"_DA(1)_",""CP"",",DR="1///"_DGPROCDT D ^DIE
"RTN","IBCCC2",120,0)
 K DGPROCDT
"RTN","IBCCC2",121,0)
 Q
"RTN","IBCCC2",122,0)
 ;
"RTN","IBCCC2",123,0)
INDEX ;index entire file (set logic)
"RTN","IBCCC2",124,0)
 S DIK="^DGCR(399,",DA=IBIFN D IX1^DIK K DA,DIK
"RTN","IBCCC2",125,0)
 Q
"RTN","IBCCC2",126,0)
 ;
"RTN","IBCCC2",127,0)
PRIOR(IBIFN) ; set Secondary/Tertiary Bill #s on prior bills, if the bill is cancelled remove it from prior bills
"RTN","IBCCC2",128,0)
 N IBSEQ,IBSEQN,IBM1,I,IBIFN1
"RTN","IBCCC2",129,0)
 S IBSEQ=$$COB^IBCEF(IBIFN)
"RTN","IBCCC2",130,0)
 S IBSEQN=$S(IBSEQ="S":6,IBSEQ="T":7,1:"") Q:'IBSEQN
"RTN","IBCCC2",131,0)
 ;
"RTN","IBCCC2",132,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1")) I +$P(^DGCR(399,IBIFN,0),U,13)=7 S IBIFN=""
"RTN","IBCCC2",133,0)
 F I=5,6 I I<IBSEQN  S IBIFN1=+$P(IBM1,U,I) I +IBIFN1,$D(^DGCR(399,+IBIFN1,0)) S $P(^DGCR(399,IBIFN1,"M1"),U,IBSEQN)=IBIFN
"RTN","IBCCC2",134,0)
 Q
"RTN","IBCCC2",135,0)
 ;
"RTN","IBCCC2",136,0)
COBCHG(IBIFN,IBINS,IBCOB) ; Make changes for a new COB payer for bill
"RTN","IBCCC2",137,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCCC2",138,0)
 ; IBINS = ien of bill's current insurance (optional)
"RTN","IBCCC2",139,0)
 ; IBCOB = array subscripted by node,piece of COB data field change
"RTN","IBCCC2",140,0)
 ;
"RTN","IBCCC2",141,0)
 N I,IBFRMTYP,IBTAXLST
"RTN","IBCCC2",142,0)
 ; Subtract the Prior Payments from the bill's Offset (these are re-added by triggers)
"RTN","IBCCC2",143,0)
 F I=4,5,6  S $P(^DGCR(399,IBIFN,"U1"),U,2)=$P($G(^DGCR(399,IBIFN,"U1")),U,2)-$P($G(^DGCR(399,IBIFN,"U2")),U,I)
"RTN","IBCCC2",144,0)
 ;
"RTN","IBCCC2",145,0)
 I $G(IBINS),$$MCRWNR^IBEFUNC(IBINS) D
"RTN","IBCCC2",146,0)
 . ;MCRWNR is current insurance ... move payer only
"RTN","IBCCC2",147,0)
 . N IBCOBN,IBX
"RTN","IBCCC2",148,0)
 . S IBCOBN=$$COBN^IBCEF(IBIFN)
"RTN","IBCCC2",149,0)
 . S IBCOB(0,21)=$P("S^T^",U,IBCOBN)
"RTN","IBCCC2",150,0)
 . S IBCOB("M1",IBCOBN+4)=IBIFN
"RTN","IBCCC2",151,0)
 . S IBCOB("TX",1)="",IBCOB("TX",2)=""
"RTN","IBCCC2",152,0)
 . S IBX=$$REQMRA^IBEFUNC(IBIFN)
"RTN","IBCCC2",153,0)
 . I IBX=0 S IBCOB("TX",5)=0                         ; MRA not needed
"RTN","IBCCC2",154,0)
 . I IBX["R" S IBCOB("TX",5)="A"                     ; MRA skipped
"RTN","IBCCC2",155,0)
 . I IBX=1,$$CHK^IBCEMU1(IBIFN) S IBCOB("TX",5)="C"  ; MRA on file
"RTN","IBCCC2",156,0)
 . I $G(IBPRCOB) S IBCOB("TX",5)="C"                 ; MRA being proc'd
"RTN","IBCCC2",157,0)
 . D PRIOR(IBIFN)
"RTN","IBCCC2",158,0)
 . Q
"RTN","IBCCC2",159,0)
 ;
"RTN","IBCCC2",160,0)
 ;reset fields for next Sequence Payer
"RTN","IBCCC2",161,0)
 F I=0,"M1","U2","TX" I $D(IBCOB(I)) D COB
"RTN","IBCCC2",162,0)
 ;
"RTN","IBCCC2",163,0)
 ; IB*2.0*211
"RTN","IBCCC2",164,0)
 ; save off Form Type
"RTN","IBCCC2",165,0)
 S IBFRMTYP=$P($G(^DGCR(399,IBIFN,0)),U,19)
"RTN","IBCCC2",166,0)
 ; Save off Taxonomies for providers.
"RTN","IBCCC2",167,0)
 S I=0 F  S I=$O(^DGCR(399,IBIFN,"PRV",I)) Q:'I  S IBTAXLST(I)=$P($G(^DGCR(399,IBIFN,"PRV",I,0)),U,15)
"RTN","IBCCC2",168,0)
 ;
"RTN","IBCCC2",169,0)
 ; fire xrefs set logic
"RTN","IBCCC2",170,0)
 D INDEX
"RTN","IBCCC2",171,0)
 ;
"RTN","IBCCC2",172,0)
 ; Restore Form Type if changed, but don't restore Form Type if
"RTN","IBCCC2",173,0)
 ;   creating CMS-1500 claim from CTCOPY1^IBCCCB
"RTN","IBCCC2",174,0)
 I $G(IBCTCOPY)'=1,IBFRMTYP'=$P($G(^DGCR(399,IBIFN,0)),U,19) N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR=".19////"_IBFRMTYP D ^DIE
"RTN","IBCCC2",175,0)
 ;
"RTN","IBCCC2",176,0)
 ; Restore Claim MRA Status field since triggers in fields 101 & 102
"RTN","IBCCC2",177,0)
 ;   will overwrite the correct value when processing the MRA/EOB.
"RTN","IBCCC2",178,0)
 ; If we're processing the MRA/EOB, then a valid MRA has been received.
"RTN","IBCCC2",179,0)
 I $G(IBPRCOB) N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="24////C" D ^DIE
"RTN","IBCCC2",180,0)
 ;
"RTN","IBCCC2",181,0)
 ; Restore Taxonomies in fields 243 and 244.
"RTN","IBCCC2",182,0)
 S I=$P($G(IBND("U3")),U,2)
"RTN","IBCCC2",183,0)
 I I'=$P($G(^DGCR(399,IBIFN,"U3")),U,2) D
"RTN","IBCCC2",184,0)
 . N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="243////"_$S(I'="":I,1:"@") D ^DIE
"RTN","IBCCC2",185,0)
 S I=$P($G(IBND("U3")),U,3)
"RTN","IBCCC2",186,0)
 I I'=$P($G(^DGCR(399,IBIFN,"U3")),U,3) D
"RTN","IBCCC2",187,0)
 . N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="244////"_$S(I'="":I,1:"@") D ^DIE
"RTN","IBCCC2",188,0)
 ; Restore Taxonomies in field .15 in sub-file 399.0222.
"RTN","IBCCC2",189,0)
 S IBTAXLST=0 F  S IBTAXLST=$O(IBTAXLST(IBTAXLST)) Q:'IBTAXLST  D
"RTN","IBCCC2",190,0)
 . S I=IBTAXLST(IBTAXLST)
"RTN","IBCCC2",191,0)
 . I I=$P($G(^DGCR(399,IBIFN,"PRV",IBTAXLST,0)),U,15) Q  ; No change
"RTN","IBCCC2",192,0)
 . N DA,DIE,DR
"RTN","IBCCC2",193,0)
 . S DA(1)=IBIFN,DA=IBTAXLST
"RTN","IBCCC2",194,0)
 . S DIE="^DGCR(399,"_DA(1)_",""PRV"",",DR=".15////"_$S(I'="":I,1:"@")
"RTN","IBCCC2",195,0)
 . D ^DIE
"RTN","IBCCC2",196,0)
 . Q
"RTN","IBCCC2",197,0)
 ;
"RTN","IBCCC2",198,0)
 K IBCOB("TX")
"RTN","IBCCC2",199,0)
 Q
"RTN","IBCCC2",200,0)
 ;
"RTN","IBCE837")
0^38^B82438812^B81681758
"RTN","IBCE837",1,0)
IBCE837 ;ALB/TMP - OUTPUT FOR 837 TRANSMISSION ;8/6/03 10:48am
"RTN","IBCE837",2,0)
 ;;2.0;INTEGRATED BILLING;**137,191,197,232,296,349**;21-MAR-94;Build 46
"RTN","IBCE837",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCE837",4,0)
 ;
"RTN","IBCE837",5,0)
EN ; Auto-txmt
"RTN","IBCE837",6,0)
 N IBSITE8,IBRUN,X,X1,X2,DA,DIE,DR
"RTN","IBCE837",7,0)
 K ^TMP("IBRESUBMIT",$J),^TMP("IBONE",$J)
"RTN","IBCE837",8,0)
 S IBSITE8=$G(^IBE(350.9,1,8)),IBRUN=1
"RTN","IBCE837",9,0)
 Q:'$P(IBSITE8,U,3)!'$P(IBSITE8,U,10)
"RTN","IBCE837",10,0)
 I '$$MGCHK^IBCE(0) Q
"RTN","IBCE837",11,0)
 I $P(IBSITE8,U,5) D  Q:'IBRUN
"RTN","IBCE837",12,0)
 . S X2=+$P(IBSITE8,U,3),X1=$P(IBSITE8,U,5) D C^%DTC
"RTN","IBCE837",13,0)
 . I X>DT S IBRUN=0 Q
"RTN","IBCE837",14,0)
 D QTXMT^IBCE837B(IBSITE8)
"RTN","IBCE837",15,0)
 I $P(IBSITE8,U,5)'=DT S DIE="^IBE(350.9,",DR="8.05////"_DT,DA=1 D ^DIE
"RTN","IBCE837",16,0)
 Q
"RTN","IBCE837",17,0)
 ;
"RTN","IBCE837",18,0)
SETUP(IBEXTRP) ; Txmn set up
"RTN","IBCE837",19,0)
 ; IBEXTRP=1 prnt 837 data
"RTN","IBCE837",20,0)
 N IB
"RTN","IBCE837",21,0)
 K ^TMP("IBXMSG",$J),^TMP("IBTXMT",$J),^TMP("IBHDR",$J),^TMP("IBHDR1",$J),^TMP("IBXERR",$J),IBXERR,^TMP("IBXINS",$J),^TMP("IBTX",$J),^TMP("IBEDI_TEST_BATCH",$J)
"RTN","IBCE837",22,0)
 ; Chk extract running
"RTN","IBCE837",23,0)
 Q:$G(IBEXTRP)
"RTN","IBCE837",24,0)
 ; Chk resubmit tst
"RTN","IBCE837",25,0)
 I $P($G(^TMP("IBRESUBMIT",$J)),U,4) S ^TMP("IBEDI_TEST_BATCH",$J)=1 Q
"RTN","IBCE837",26,0)
 I '$D(^TMP("IBRESUBMIT",$J)),'$D(^TMP("IBONE",$J)) D  Q:$D(IBXERR)
"RTN","IBCE837",27,0)
 . L +^IBA(364,0):5
"RTN","IBCE837",28,0)
 . I '$T D  Q
"RTN","IBCE837",29,0)
 .. S IBXERR=1,^TMP("IBXERR",$J,1)="A PREVIOUS EDI EXTRACT IS RUNNING - ANOTHER CANNOT BE STARTED "_$$FMTE^XLFDT($$NOW^XLFDT(),2)
"RTN","IBCE837",30,0)
 ;
"RTN","IBCE837",31,0)
 I $D(^TMP("IBRESUBMIT",$J)) D  Q:$D(IBXERR)
"RTN","IBCE837",32,0)
 .N Z,Z0
"RTN","IBCE837",33,0)
 .S Z0=$P($G(^TMP("IBRESUBMIT",$J)),U,2),Z=$$LOCK^IBCEM02(364.1,Z0)
"RTN","IBCE837",34,0)
 .I 'Z D
"RTN","IBCE837",35,0)
 ..S IBXERR=1
"RTN","IBCE837",36,0)
 ..S ^TMP("IBRESUBMIT",$J,"IBXERR",1)="Another user is currently processing batch "_Z0_".  Batch NOT resubmitted."
"RTN","IBCE837",37,0)
 .I 'Z D
"RTN","IBCE837",38,0)
 ..S IBXERR=1
"RTN","IBCE837",39,0)
 ..S ^TMP("IBRESUBMIT",$J,"IBXERR",1)="Another user is currently processing batch "_Z0_".  Batch NOT resubmitted."
"RTN","IBCE837",40,0)
 ..S ^TMP("IBRESUBMIT",$J,"IBXERR",2)="Resubmit was attempted by: "_$P($G(^VA(200,DUZ,0)),U)_" ("_DUZ_")"
"RTN","IBCE837",41,0)
 I $D(^TMP("IBONE",$J)) S IB=$G(^($J))+1 D  Q:$D(IBXERR)
"RTN","IBCE837",42,0)
 .N Z,Z0
"RTN","IBCE837",43,0)
 .S Z0=$O(^TMP("IBONE",$J,"")),Z=$$LOCK^IBCEM02(364,Z0)
"RTN","IBCE837",44,0)
 .I 'Z D
"RTN","IBCE837",45,0)
 ..S IBXERR=1
"RTN","IBCE837",46,0)
 ..S ^TMP("IBONE",$J,"IBXERR",1)="Another user is currently processing bill "_$P($G(^DGCR(399,+$G(^IBA(364,Z0,0)),0)),U)_".  Bill NOT "_$P("^re",U,IB)_"submitted."
"RTN","IBCE837",47,0)
 ..S ^TMP("IBONE",$J,"IBXERR",2)=$P("S^Res",U,IB)_"ubmit was attempted by: "_$P($G(^VA(200,DUZ,0)),U)_" ("_DUZ_")"
"RTN","IBCE837",48,0)
 Q
"RTN","IBCE837",49,0)
 ;
"RTN","IBCE837",50,0)
FIND ; Find/sort by CMS-1500/UB-04, test/live, ins ID # & div
"RTN","IBCE837",51,0)
 ;
"RTN","IBCE837",52,0)
 N IBX,IB0,IBCBH,IBINS,IBXIEN,IBNID,IBGBL,IBTXTEST,IBBTYP,IB837R,IBDIV,IBNOTX,IBTXST,IBTEST,IBSEC
"RTN","IBCE837",53,0)
 K ^TMP($J,"BILL"),^TMP("IBICT",$J)
"RTN","IBCE837",54,0)
 ;
"RTN","IBCE837",55,0)
 S IBGBL=$S($D(^TMP("IBONE",$J)):"^TMP(""IBONE"","_$J_")",$D(^TMP("IBSELX",$J)):"^TMP(""IBSELX"","_$J_")",'$D(^TMP("IBRESUBMIT",$J)):"^IBA(364,""ASTAT"",""X"")",1:"^TMP(""IBRESUBMIT"","_$J_")")
"RTN","IBCE837",56,0)
 S IBTEST=+$G(^TMP("IBEDI_TEST_BATCH",$J))
"RTN","IBCE837",57,0)
 ;
"RTN","IBCE837",58,0)
 S IBX="" F  S IBX=$O(@IBGBL@(IBX)) Q:'IBX  D
"RTN","IBCE837",59,0)
 .S IBXIEN=+$G(^IBA(364,IBX,0)),IB0=$G(^DGCR(399,IBXIEN,0))
"RTN","IBCE837",60,0)
 .S IBTXST=$$TXMT^IBCEF4(IBXIEN,.IBNOTX)
"RTN","IBCE837",61,0)
 .Q:IBTXST=""  ; no txmt
"RTN","IBCE837",62,0)
 .Q:$S(IB0="":1,$P(IB0,U,13)>4&'IBTEST:1,1:$D(^TMP($J,"BILL",$P(IB0,U))))
"RTN","IBCE837",63,0)
 .S IBCBH=$P(IB0,U,21) S:"PST"'[IBCBH!(IBCBH="") IBCBH="P"
"RTN","IBCE837",64,0)
 .S IBINS=$P($G(^DGCR(399,IBXIEN,"I"_($F("PST",IBCBH)-1))),U)
"RTN","IBCE837",65,0)
 .S IBTXTEST=$S(IBTEST:2,1:+$$TEST^IBCEF4(IBXIEN))
"RTN","IBCE837",66,0)
 .S IBBTYP=$P("P^I",U,($$FT^IBCEF(IBXIEN)=3)+1)_"-"_IBTXTEST
"RTN","IBCE837",67,0)
 .Q:$$TESTPT^IBCEU($P(IB0,U,2))&'IBTXTEST  ;Test pt
"RTN","IBCE837",68,0)
 .;
"RTN","IBCE837",69,0)
 .I IBTXTEST=1 D TESTLIM^IBCE837A(.IBINS)
"RTN","IBCE837",70,0)
 .;
"RTN","IBCE837",71,0)
 .I IBINS,$P(IB0,U,2) D
"RTN","IBCE837",72,0)
 .. D SETVAR^IBCE837A(IBXIEN,IBINS,IB0,.IBSEC,.IBNID,.IB837R,.IBDIV)
"RTN","IBCE837",73,0)
 ..S:'$D(^TMP("IBXINS",$J,IBDIV_U_IBBTYP,IBNID)) ^(IBNID)=IBINS S ^TMP("IBTXMT",$J,IBDIV_U_IBBTYP,IB837R_U_IBSEC,IBNID,$P(IB0,U,2),IBXIEN_U_IBX)=IBX
"RTN","IBCE837",74,0)
 .;
"RTN","IBCE837",75,0)
 .S ^TMP($J,"BILL",$P(IB0,U))=""
"RTN","IBCE837",76,0)
 ;
"RTN","IBCE837",77,0)
 I $D(^TMP("IBTXMT",$J)) S ^TMP("IBXDATA",$J)=IBNID
"RTN","IBCE837",78,0)
 K ^TMP($J,"BILL")
"RTN","IBCE837",79,0)
 Q
"RTN","IBCE837",80,0)
 ;
"RTN","IBCE837",81,0)
OUTPUT ; 837
"RTN","IBCE837",82,0)
 ;
"RTN","IBCE837",83,0)
 N IB837,IBSITE,IBMAX,IBQUEUE,IBTQUEUE,IBNID,IBCT,IBCTM,IBSIZE,IBBILL,IBLCNT,IBDFN,IBREF,IBSIZEM,IBPARMS,IBD,IBDESC,IBINS,IBQ,IB3,IBBTYP,IBTXTEST,IBDEFPRT,IB837R,IBBTYPX
"RTN","IBCE837",84,0)
 ;
"RTN","IBCE837",85,0)
 K ^TMP("IBCE-BATCH",$J)
"RTN","IBCE837",86,0)
 S IBSITE=$G(^IBE(350.9,1,8)),IBMAX=$P(IBSITE,U,4),IB837=+$O(^IBE(353,"B","IB 837 TRANSMISSION",0)),IB837=$S($P($G(^IBE(353,+IB837,2)),U,8):$P(^(2),U,8),1:IB837) S:'IBMAX IBMAX=999
"RTN","IBCE837",87,0)
 ;
"RTN","IBCE837",88,0)
 I 'IB837 D  Q
"RTN","IBCE837",89,0)
 . N IBZ,XMBODY
"RTN","IBCE837",90,0)
 . S XMBODY="IBZ"
"RTN","IBCE837",91,0)
 . S IBZ(1)="The transmission form for sending electronic claims is not in your form file",IBZ(2)="NO CLAIMS WERE OUTPUT - FORM = IB 837 TRANSMISSION"
"RTN","IBCE837",92,0)
 . D ERRMSG^IBCE837A(XMBODY)
"RTN","IBCE837",93,0)
 ;
"RTN","IBCE837",94,0)
 S (IBCT,IBCTM,IBSIZE)=0,IBQUEUE=$P(IBSITE,U),IBTQUEUE=$P(IBSITE,U,9),IBDESC=""
"RTN","IBCE837",95,0)
 ;
"RTN","IBCE837",96,0)
 Q:IBQUEUE=""&(IBTQUEUE="")
"RTN","IBCE837",97,0)
 ;
"RTN","IBCE837",98,0)
 S IBQ="",IBBTYPX=""
"RTN","IBCE837",99,0)
 ; Sort: div_^_bill type_-_test stat,ins co transmission destination^sec status,dfn,claim #
"RTN","IBCE837",100,0)
 F  S IBBTYPX=$O(^TMP("IBTXMT",$J,IBBTYPX)),IBBTYP=$P(IBBTYPX,U,2) D:IBCTM CHKNEW^IBCE837A(IBQ,.IBBILL,.IBCTM,IBDESC,IBBTYP,"",IBSITE,.IBSIZE) Q:IBBTYPX=""  D
"RTN","IBCE837",101,0)
 . S IBDEFPRT=$S($E(IBBTYP)="P":"SPRINT",1:"SPRINT")
"RTN","IBCE837",102,0)
 . S IBTXTEST=+$P(IBBTYP,"-",2),IBQ=$S('IBTXTEST:IBQUEUE,IBTXTEST=2:"MCT",1:IBTQUEUE)
"RTN","IBCE837",103,0)
 . Q:IBQ=""  ; Queue
"RTN","IBCE837",104,0)
 . ;
"RTN","IBCE837",105,0)
 . S IBD=$S($E(IBBTYP)="P":"PROF",1:"INST")_" CLAIMS-"_$$HTE^XLFDT($H,2)_"  "
"RTN","IBCE837",106,0)
 . S IBDESC=$S('$P(IBSITE,U,7):$S('IBTXTEST:"",1:"TEST ")_IBD,1:"")
"RTN","IBCE837",107,0)
 . ;
"RTN","IBCE837",108,0)
 . S IB837R=""
"RTN","IBCE837",109,0)
 . F  S IB837R=$O(^TMP("IBTXMT",$J,IBBTYPX,IB837R)) D:IBCTM CHKNEW^IBCE837A(IBQ,.IBBILL,.IBCTM,IBDESC,IBBTYP,"",IBSITE,.IBSIZE) Q:IB837R=""  D
"RTN","IBCE837",110,0)
 .. S (IBINS,IBNID)="",IBLCNT=0
"RTN","IBCE837",111,0)
 .. F  S IBNID=$O(^TMP("IBTXMT",$J,IBBTYPX,IB837R,IBNID)) K ^TMP("IBHDR1",$J) D:IBCTM CHKNEW^IBCE837A(IBQ,.IBBILL,.IBCTM,IBDESC,IBBTYP,IBINS,IBSITE,.IBSIZE) Q:IBNID=""  D
"RTN","IBCE837",112,0)
 ...;
"RTN","IBCE837",113,0)
 ...S IBDFN=0,IBINS=+$G(^TMP("IBXINS",$J,IBBTYPX,IBNID))
"RTN","IBCE837",114,0)
 ... ;
"RTN","IBCE837",115,0)
 ...I $P(IBSITE,U,7) D  ; 1 ins/batch
"RTN","IBCE837",116,0)
 .... S IBLCNT=0
"RTN","IBCE837",117,0)
 .... S IBDESC=$E($S('IBTXTEST:"",1:"TEST ")_IBD_$P($G(^DIC(36,IBINS,0)),U),1,80)
"RTN","IBCE837",118,0)
 ... ;
"RTN","IBCE837",119,0)
 ...F  S IBDFN=$O(^TMP("IBTXMT",$J,IBBTYPX,IB837R,IBNID,IBDFN)) Q:'IBDFN  S IBREF="" F  S IBREF=$O(^TMP("IBTXMT",$J,IBBTYPX,IB837R,IBNID,IBDFN,IBREF)) Q:'IBREF  D
"RTN","IBCE837",120,0)
 ....I '(IBCTM#IBMAX),IBCTM D MAILIT^IBCE837A(IBQ,.IBBILL,.IBCTM,"",IBDESC,IBBTYP,IBINS) S IBSIZE=0 ;exceeds max #
"RTN","IBCE837",121,0)
 ....D BILLPARM^IBCEFG0(+IBREF,.IBPARMS)
"RTN","IBCE837",122,0)
 ....S IBSIZEM=$$EXTRACT^IBCEFG(IB837,+IBREF,1,.IBPARMS)
"RTN","IBCE837",123,0)
 ....I (IBSIZEM+IBSIZE)>30000,IBSIZE D  ; exceeds max size
"RTN","IBCE837",124,0)
 .....D MAILIT^IBCE837A(IBQ,.IBBILL,.IBCTM,"",IBDESC,IBBTYP,IBINS) S IBSIZE=0 K ^TMP("IBXDATA",$J) S IBSIZEM=$$EXTRACT^IBCEFG(IB837,+IBREF,1,.IBPARMS)
"RTN","IBCE837",125,0)
 ....I 'IBSIZEM D:'IBCTM  Q
"RTN","IBCE837",126,0)
 ..... D CHKBTCH^IBCE837A(+$G(^TMP("IBHDR",$J))) K ^TMP("IBHDR",$J)
"RTN","IBCE837",127,0)
 ....S IBCT=IBCT+1,IBCTM=IBCTM+1
"RTN","IBCE837",128,0)
 ....D:$D(^TMP("IBXDATA",$J)) MESSAGE(.IBLCNT,$P(IBREF,U,2),.IBBILL,.IBCTM,.IBSIZE,IBSIZEM,"",IBBTYP,IBINS)
"RTN","IBCE837",129,0)
 ..;
"RTN","IBCE837",130,0)
 ..I $G(IBTXTEST)=1 S IBINS=0 F  S IBINS=$O(^TMP("IBICT",$J,IBINS)) Q:'IBINS  S IB3=$G(^DIC(36,IBINS,3)) D
"RTN","IBCE837",131,0)
 ... N DIE,DA,DR
"RTN","IBCE837",132,0)
 ...S DIE="^DIC(36,",DA=IBINS,DR="3.05////"_DT_";3.07////"_($S($P(IB3,U,5)'=DT:0,1:$P(IB3,U,7))+^TMP("IBICT",$J,IBINS)) D ^DIE
"RTN","IBCE837",133,0)
 ;
"RTN","IBCE837",134,0)
 I $O(^TMP("IBXERR",$J,"")) D  ;Error to mail grp
"RTN","IBCE837",135,0)
 .N XMTO,XMBODY,XMDUZ,XMSUBJ,IBCT,IBERR
"RTN","IBCE837",136,0)
 .K ^TMP("IBXMSG",$J)
"RTN","IBCE837",137,0)
 .S ^TMP("IBXMSG",$J,1)="The following authorized bill(s) were not transmitted due to errors indicated.",^(2)="Once the errors are corrected, the bill(s) will be included in the next run.",^(3)=" "
"RTN","IBCE837",138,0)
 .;
"RTN","IBCE837",139,0)
 .S IBERR=0,IBCT=3
"RTN","IBCE837",140,0)
 .F  S IBERR=$O(^TMP("IBXERR",$J,IBERR)) Q:'IBERR  S IBCT=IBCT+1,^TMP("IBXMSG",$J,IBCT)="Bill #: "_$P($G(^DGCR(399,IBERR,0)),U),IBCT=IBCT+1,^TMP("IBXMSG",$J,IBCT)=$J("",5)_^TMP("IBXERR",$J,IBERR)
"RTN","IBCE837",141,0)
 .S XMBODY="^TMP(""IBXMSG"","_$J_")" D ERRMSG^IBCE837A(XMBODY)
"RTN","IBCE837",142,0)
 .;
"RTN","IBCE837",143,0)
 .K ^TMP("IBXMSG",$J),^TMP("IBICT",$J)
"RTN","IBCE837",144,0)
 ;
"RTN","IBCE837",145,0)
 I $O(^TMP("IBCE-BATCH",$J,"")) D
"RTN","IBCE837",146,0)
 .N IB,IB0,IBL,IBT,IBX,XMTO,XMDUZ,XMSUBJ,IBRESUB,IBTESTB,XMZ
"RTN","IBCE837",147,0)
 .S IBRESUB=$D(^TMP("IBRESUBMIT",$J))
"RTN","IBCE837",148,0)
 .;
"RTN","IBCE837",149,0)
 .S IBT(1)="The following batches were "_$S('IBRESUB:"",1:"re-")_"submitted to Austin "_$S(IBTXTEST'=2:"",1:"as TEST ")_$$HTE^XLFDT($H,"2D")_":"
"RTN","IBCE837",150,0)
 .S IBT(2)=$S('IBRESUB:" ",1:"   [Resubmitted by: "_$P($G(^VA(200,+DUZ,0)),U)_" (#"_DUZ_")]") S:IBRESUB IBT(3)=" "
"RTN","IBCE837",151,0)
 .;
"RTN","IBCE837",152,0)
 .S IBL=$S('IBRESUB:2,1:3),IB=""
"RTN","IBCE837",153,0)
 .F  S IB=$O(^TMP("IBCE-BATCH",$J,IB)) Q:IB=""  S IBL=IBL+1,IB0=$G(^(IB)) D
"RTN","IBCE837",154,0)
 .. S IBX=IB
"RTN","IBCE837",155,0)
 .. I $P(IB0,U,3)'="",IBTXTEST=2 S IBX=$P(IB0,U,3)_" (AS BATCH "_IB_")"
"RTN","IBCE837",156,0)
 ..S IBT(IBL)=" "_IBX_" "_$P($G(^IBA(364.1,+IB0,0)),U,8),IBL=IBL+1,IBT(IBL)="    ("_+$P(IB0,U,2)_" bills)"
"RTN","IBCE837",157,0)
 .;
"RTN","IBCE837",158,0)
 .S XMTO("I:G.IB EDI")="",XMDUZ="",XMBODY="IBT",XMSUBJ="EDI 837 "_$S('IBRESUB:"",1:"RE-")_"SUBMISSION BATCH LIST"_$S(IBTXTEST'=2:"",1:" FOR TEST")
"RTN","IBCE837",159,0)
 .D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","IBCE837",160,0)
 .;
"RTN","IBCE837",161,0)
 .S:IBRESUB ^TMP("IBRESUBMIT",$J,0)=1
"RTN","IBCE837",162,0)
 Q
"RTN","IBCE837",163,0)
 ;
"RTN","IBCE837",164,0)
CLEANUP ; moved
"RTN","IBCE837",165,0)
 D CLEANUP^IBCE837A
"RTN","IBCE837",166,0)
 Q
"RTN","IBCE837",167,0)
 ;
"RTN","IBCE837",168,0)
MESSAGE(IBLCNT,IBIEN,IBBILL,IBCTM,IBSIZE,IBSIZEM,IBDUZ,IBBTYP,IBINS) ; Create msg in ^TMP("IBXMSG",$J)
"RTN","IBCE837",169,0)
 ;IBLCNT = last msg line extracted
"RTN","IBCE837",170,0)
 ;IBIEN = ien file 364 bill entry
"RTN","IBCE837",171,0)
 ;IBBILL = array file 364 ien's of bills being sent
"RTN","IBCE837",172,0)
 ; IBBILL(IEN)=""
"RTN","IBCE837",173,0)
 ;IBSIZE = # bytes in msg
"RTN","IBCE837",174,0)
 ;IBSIZEM = # bytes in record to be added to msg
"RTN","IBCE837",175,0)
 ;IBCTM = # bills in batch
"RTN","IBCE837",176,0)
 ;IBDUZ = user ien running extract (Postmaster if auto)
"RTN","IBCE837",177,0)
 ;IBBTYP = x-y where x = P for prof, I for inst
"RTN","IBCE837",178,0)
 ;         y = 1 for test, 0 for live txmt
"RTN","IBCE837",179,0)
 ;IBINS = ien of 1 ins co for batch
"RTN","IBCE837",180,0)
 ;
"RTN","IBCE837",181,0)
 N IB,IBL,IB1,IB2,IB3,IBQ,IBREC,IBDEL
"RTN","IBCE837",182,0)
 S IBDEL=$O(^IBA(364.5,"B","N-SEGMENT DELIMITER","")),IBDEL=$P($G(^IBA(364.5,+IBDEL,0)),U,8) S:IBDEL="" IBDEL="~"
"RTN","IBCE837",183,0)
 S IBSIZE=IBSIZE+IBSIZEM,IB1="",IBREC=""
"RTN","IBCE837",184,0)
 F  S IB1=$O(^TMP("IBXDATA",$J,1,IB1)) Q:IB1=""  D
"RTN","IBCE837",185,0)
 .S (IBREC,IB2)=""
"RTN","IBCE837",186,0)
 .F  S IB2=$O(^TMP("IBXDATA",$J,1,IB1,IB2)) Q:$S(IB2="":1,IB1=1:"",1:'$O(^(IB2,1)))  D
"RTN","IBCE837",187,0)
 ..S IB3="",IBREC=""
"RTN","IBCE837",188,0)
 ..F  S IB3=$O(^TMP("IBXDATA",$J,1,IB1,IB2,IB3)) D:IB3=""&($L(IBREC)) SETG Q:IB3=""  S:$S(IB3=1:1,1:$P(IBREC,U)'="") $P(IBREC,U,IB3)=$$UP^XLFSTR(^TMP("IBXDATA",$J,1,IB1,IB2,IB3))
"RTN","IBCE837",189,0)
 S IBBILL(IBIEN)=""
"RTN","IBCE837",190,0)
 K ^TMP("IBXDATA",$J)
"RTN","IBCE837",191,0)
 Q
"RTN","IBCE837",192,0)
 ;
"RTN","IBCE837",193,0)
SETHDR ; hdr for curr batch
"RTN","IBCE837",194,0)
 S ^TMP("IBHDR",$J)=$G(^TMP("IBXDATA",$J,1,5,1,2))
"RTN","IBCE837",195,0)
 Q
"RTN","IBCE837",196,0)
 ;
"RTN","IBCE837",197,0)
SETHDR1 ; hdr node for curr ins
"RTN","IBCE837",198,0)
 S ^TMP("IBHDR1",$J)=$G(^TMP("IBXDATA",$J,1,20,1,8))
"RTN","IBCE837",199,0)
 Q
"RTN","IBCE837",200,0)
 ;
"RTN","IBCE837",201,0)
SETG ; msg global for each segment
"RTN","IBCE837",202,0)
 S IBREC=$TR(IBREC,IBDEL)
"RTN","IBCE837",203,0)
 S IBREC=IBREC_IBDEL,IBSIZE=IBSIZE+$L(IBDEL)
"RTN","IBCE837",204,0)
 S IBLCNT=IBLCNT+1,^TMP("IBXMSG",$J,IBLCNT)=IBREC
"RTN","IBCE837",205,0)
 Q
"RTN","IBCE837",206,0)
 ;
"RTN","IBCE837",207,0)
ONE ; Txmt 1 or more bills for test or in 'X' status for live
"RTN","IBCE837",208,0)
 Q:'$$MGCHK^IBCE(0)
"RTN","IBCE837",209,0)
 D SETUP(0)
"RTN","IBCE837",210,0)
 I '$D(IBXERR) D FIND,OUTPUT
"RTN","IBCE837",211,0)
 D CLEANUP^IBCE837A
"RTN","IBCE837",212,0)
 Q
"RTN","IBCE837",213,0)
 ;
"RTN","IBCECOB4")
0^39^B34090702^B34131844
"RTN","IBCECOB4",1,0)
IBCECOB4 ;ALB/CXW - IB EM MANAGEMENT - REVIEW STATUS SCREEN ;16-MAY-2000
"RTN","IBCECOB4",2,0)
 ;;2.0;INTEGRATED BILLING;**137,181,348,349**;21-MAR-1994;Build 46
"RTN","IBCECOB4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCECOB4",4,0)
 ;
"RTN","IBCECOB4",5,0)
EN ; -- main entry point for claims status awaiting resolution detail
"RTN","IBCECOB4",6,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBCECOB4",7,0)
 D EN^VALM("IBCEM EOB REVIEW")
"RTN","IBCECOB4",8,0)
 Q
"RTN","IBCECOB4",9,0)
 ;
"RTN","IBCECOB4",10,0)
HDR ; -- header code
"RTN","IBCECOB4",11,0)
 ;IBDA - ien EOB selection screen
"RTN","IBCECOB4",12,0)
 N IBST
"RTN","IBCECOB4",13,0)
 S IBST=$P($G(^IBM(361.1,IBDA,0)),U,16)
"RTN","IBCECOB4",14,0)
 S VALMHDR(2)="Review Status= "_$S(IBST=1:"REVIEW IN PROCESS",IBST=2:"ACCEPTED-INTERIM EOB",IBST=3:"ACCEPTED-COMPLETE EOB",IBST=4:"REJECTED",IBST=9:"CLAIM CANCELLED",1:"NOT REVIEWED")
"RTN","IBCECOB4",15,0)
 Q
"RTN","IBCECOB4",16,0)
 ;
"RTN","IBCECOB4",17,0)
INIT ; -- init variables and list array
"RTN","IBCECOB4",18,0)
 N I,X,Y,Z,IBZ,IBFST,IBPAT
"RTN","IBCECOB4",19,0)
 K ^TMP("IBCECOC",$J)
"RTN","IBCECOB4",20,0)
SCR S VALMCNT=0
"RTN","IBCECOB4",21,0)
 ; IBCMT = the data extracted into ^TMP("IBCECOB1",$J)
"RTN","IBCECOB4",22,0)
 ; IBIFN = the ien of the bill
"RTN","IBCECOB4",23,0)
 ; IBDA = the ien of the entry in 361.1
"RTN","IBCECOB4",24,0)
 S Z=$G(^DPT(+$P($G(^DGCR(399,IBIFN,0)),U,2),0))
"RTN","IBCECOB4",25,0)
 S IBPAT=$E($P(Z,U),1,25)_"/"_$E($P(Z,U,9),6,9)
"RTN","IBCECOB4",26,0)
 S X=""
"RTN","IBCECOB4",27,0)
 S X=$$SETFLD^VALM1($$BN1^PRCAFN(IBIFN),X,"BILL")
"RTN","IBCECOB4",28,0)
 S X=$$SETFLD^VALM1($$DAT1^IBOUTL($P(IBCMT,U)),X,"SERVICE")
"RTN","IBCECOB4",29,0)
 S X=$$SETFLD^VALM1(IBPAT,X,"PATNM")
"RTN","IBCECOB4",30,0)
 S X=$$SETFLD^VALM1("  "_$P("PRI^SEC^TER",U,+$P(IBCMT,U,16)),X,"SEQ")
"RTN","IBCECOB4",31,0)
 S X=$$SETFLD^VALM1("  "_$$TYPE^IBJTLA1($P(IBCMT,U,5))_"/"_$S(+$P(IBCMT,U,6)=2:"CMS-1500",1:"UB-04"),X,"BTYPE")
"RTN","IBCECOB4",32,0)
 D SET(X)
"RTN","IBCECOB4",33,0)
 S Z=0 F  S Z=$O(^IBM(361.1,IBDA,21,Z)) Q:'Z  S I=$G(^(Z,0)) D
"RTN","IBCECOB4",34,0)
 . S X=$$SETSTR^VALM1("Review Date/Time: "_$$EXPAND^IBTRE(361.121,.01,+I),"",2,40)
"RTN","IBCECOB4",35,0)
 . D SET(X)
"RTN","IBCECOB4",36,0)
 . I $P($G(^VA(200,+$P(I,U,2),0)),U)'="" S X=$$SETSTR^VALM1("Reviewed By: "_$P($G(^VA(200,+$P(I,U,2),0)),U),"",2,50) D SET(X)
"RTN","IBCECOB4",37,0)
 . S (IBFST,Y)=0 F  S Y=$O(^IBM(361.1,IBDA,21,Z,1,Y)) Q:'Y  D
"RTN","IBCECOB4",38,0)
 .. S X=$$SETSTR^VALM1($S('IBFST:"Comments: ",1:"")_$G(^IBM(361.1,IBDA,21,Z,1,Y,0)),"",2,$S('IBFST:140,1:150))
"RTN","IBCECOB4",39,0)
 .. D SET(X)
"RTN","IBCECOB4",40,0)
 .. S IBFST=1
"RTN","IBCECOB4",41,0)
 . D SET("")
"RTN","IBCECOB4",42,0)
INITQ Q
"RTN","IBCECOB4",43,0)
 ;
"RTN","IBCECOB4",44,0)
HELP ; -- help code
"RTN","IBCECOB4",45,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCECOB4",46,0)
 Q
"RTN","IBCECOB4",47,0)
 ;
"RTN","IBCECOB4",48,0)
EXIT ; -- exit code
"RTN","IBCECOB4",49,0)
 K ^TMP("IBCECOC",$J)
"RTN","IBCECOB4",50,0)
 D CLEAN^VALM10
"RTN","IBCECOB4",51,0)
 Q
"RTN","IBCECOB4",52,0)
 ;
"RTN","IBCECOB4",53,0)
SET(X) ;
"RTN","IBCECOB4",54,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCECOB4",55,0)
 S ^TMP("IBCECOC",$J,VALMCNT,0)=X
"RTN","IBCECOB4",56,0)
 S ^TMP("IBCECOC",$J,"IDX",VALMCNT,1)=""
"RTN","IBCECOB4",57,0)
 S ^TMP("IBCECOC",$J,1)=VALMCNT
"RTN","IBCECOB4",58,0)
 Q
"RTN","IBCECOB4",59,0)
 ;
"RTN","IBCECOB4",60,0)
STATUS ; Edit review status
"RTN","IBCECOB4",61,0)
 ;IBDA - EOB ien
"RTN","IBCECOB4",62,0)
 N DA,DIE,DR,IBOLD,DIC,DO,DD,DLAYGO,IBFINAL,IBO,IBNEW,IBFACT
"RTN","IBCECOB4",63,0)
 D FULL^VALM1
"RTN","IBCECOB4",64,0)
 S DIE="^IBM(361.1,"
"RTN","IBCECOB4",65,0)
 S DA=IBDA
"RTN","IBCECOB4",66,0)
 G:'DA STATUSQ
"RTN","IBCECOB4",67,0)
 S IBOLD=$P($G(^IBM(361.1,DA,0)),U,16),IBFINAL=0,IBO=$S(IBOLD'="":"/"_IBOLD,1:"@")
"RTN","IBCECOB4",68,0)
 S DR="@1;.16;I +X<3 S IBFINAL=0,Y=""@99"";S IBFINAL=1;.2;I X="""" W !,""For a final status, this field is required"" S Y=""@98"";S Y=""@99"";@98;.16///"_IBO_";S Y=""@1"";@99"
"RTN","IBCECOB4",69,0)
 L +^IBM(361.1,IBDA):3 I '$T D  G STATUSQ
"RTN","IBCECOB4",70,0)
 . W !,"Sorry, another user currently editing this entry (#"_IBDA_")."
"RTN","IBCECOB4",71,0)
 D ^DIE
"RTN","IBCECOB4",72,0)
 ;
"RTN","IBCECOB4",73,0)
 I $G(IBFINAL) D  ;Final status selected - let remarks be entered
"RTN","IBCECOB4",74,0)
 . N Z
"RTN","IBCECOB4",75,0)
 . S Z=IBDA
"RTN","IBCECOB4",76,0)
 . N IBDA,Q,DIE,DR,DA,X,Y
"RTN","IBCECOB4",77,0)
 . S IBDA(1)=Z,IBDA=""
"RTN","IBCECOB4",78,0)
 . D ADDCOM(.IBDA,.DUZ,.IBCOM)
"RTN","IBCECOB4",79,0)
 . I $P($G(^IBM(361.1,IBDA(1),0)),U,20)="F",'$O(^IBM(361.1,IBDA(1),21,+IBDA,0)) D   ; Require remarks for 'OTHER ACTION' final status
"RTN","IBCECOB4",80,0)
 .. W !,"Since FILED - NO ACTION final status was selected, you must enter a",!,"   comment explaining the FILED - NO ACTION" D ADDCOM(.IBDA,.DUZ,.IBCOM,1)
"RTN","IBCECOB4",81,0)
 .. I IBDA D
"RTN","IBCECOB4",82,0)
 ... ; Delete entry if just entered without a comment
"RTN","IBCECOB4",83,0)
 ... D KILLREV(.IBDA)
"RTN","IBCECOB4",84,0)
 .. I '$O(^IBM(361.1,IBDA(1),21,+IBDA,0)) S DIE="^IBM(361.1,",DA=IBDA(1),DR=".20///@;.16///"_IBO D ^DIE W !,"The review status was not changed because no comment was entered",! Q
"RTN","IBCECOB4",85,0)
 S IBNEW=$P($G(^IBM(361.1,DA,0)),U,16)
"RTN","IBCECOB4",86,0)
 ;if time out-no change in review status
"RTN","IBCECOB4",87,0)
 S IBFACT=$P($G(^IBM(361.1,DA,0)),U,20)
"RTN","IBCECOB4",88,0)
 I $G(IBFINAL),IBFACT="",IBNEW>1 D  G STATUSQ
"RTN","IBCECOB4",89,0)
 . W !,"The review status was not changed because no final status was selected"
"RTN","IBCECOB4",90,0)
 . S DR=".16////"_IBOLD,DIE="^IBM(361.1," D ^DIE
"RTN","IBCECOB4",91,0)
 I IBNEW>1,$P(^IBM(361.1,DA,0),U,19) D
"RTN","IBCECOB4",92,0)
 . I "CR"'[IBFACT D
"RTN","IBCECOB4",93,0)
 .. N DIR,X,Y
"RTN","IBCECOB4",94,0)
 .. S DIR("?",1)="IF THIS BILL HAS RECEIVED ITS FINAL ELECTRONIC MESSAGE AND NO FURTHER ACTION",DIR("?",2)="WILL BE TAKEN ON IT, ANSWER YES"
"RTN","IBCECOB4",95,0)
 .. S DIR("A")="DO YOU WANT TO CLOSE THE TRANSMISSION RECORD FOR THIS CLAIM?: ",DIR("B")="NO",DIR(0)="YA" D ^DIR
"RTN","IBCECOB4",96,0)
 .. I Y>0 S IBFACT="N"
"RTN","IBCECOB4",97,0)
 . I "NCR"[IBFACT D UPDEDI^IBCEM(+$P(^IBM(361.1,DA,0),U,19),IBFACT) Q
"RTN","IBCECOB4",98,0)
 I IBOLD'=IBNEW D  ;Note the change and who made it
"RTN","IBCECOB4",99,0)
 . N IBIEN,IBTEXT,DA
"RTN","IBCECOB4",100,0)
 . S DA(1)=IBDA,DIC="^IBM(361.1,"_DA(1)_",21,",DIC(0)="L",DLAYGO=361.121
"RTN","IBCECOB4",101,0)
 . S X=$$NOW^XLFDT
"RTN","IBCECOB4",102,0)
 . S DIC("P")=$$GETSPEC^IBEFUNC(361.1,21)
"RTN","IBCECOB4",103,0)
 . D FILE^DICN K DIC,DD,DO,DLAYGO
"RTN","IBCECOB4",104,0)
 . Q:Y'>0
"RTN","IBCECOB4",105,0)
 . S DA(2)=DA(1),DA(1)=+Y,IBIEN=DA(1)_","_DA(2)_",",IBTEXT(1)="REVIEW STATUS CHANGED TO '"_$$EXPAND^IBTRE(361.1,.16,$P(^IBM(361.1,DA(2),0),U,16))_"'  BY: "_$$EXPAND^IBTRE(361.121,.02,+$G(DUZ))
"RTN","IBCECOB4",106,0)
 . D WP^DIE(361.121,IBIEN,1,,"IBTEXT") K ^TMP("DIERR",$J)
"RTN","IBCECOB4",107,0)
 . D HDR,INIT
"RTN","IBCECOB4",108,0)
 L -^IBM(361.1,DA)
"RTN","IBCECOB4",109,0)
STATUSQ ;
"RTN","IBCECOB4",110,0)
 D PAUSE^VALM1
"RTN","IBCECOB4",111,0)
 S VALMBCK="R"
"RTN","IBCECOB4",112,0)
 Q
"RTN","IBCECOB4",113,0)
 ;
"RTN","IBCECOB4",114,0)
ADDCOM(IBDA,DUZ,IBCOM,ADD) ; Add review comment to file 361.1
"RTN","IBCECOB4",115,0)
 ; IBDA = array containing the DA references for the file add -
"RTN","IBCECOB4",116,0)
 ;        pass by reference
"RTN","IBCECOB4",117,0)
 ; DUZ = ien of the user
"RTN","IBCECOB4",118,0)
 ; ADD = flag when set to 1 says the review date exists,
"RTN","IBCECOB4",119,0)
 ;       just allow comment entry
"RTN","IBCECOB4",120,0)
 ; Returns IBDA = the entry # of the comment
"RTN","IBCECOB4",121,0)
 ;          and IBCOM array referencing any comments added by the user
"RTN","IBCECOB4",122,0)
 ;
"RTN","IBCECOB4",123,0)
 N DA,DIC,DD,DO,DLAYGO,X,Y
"RTN","IBCECOB4",124,0)
 S DR=$S($G(DUZ):".02////"_DUZ_";",1:"")_"1"
"RTN","IBCECOB4",125,0)
 I '$G(ADD) D
"RTN","IBCECOB4",126,0)
 . K DO,DD
"RTN","IBCECOB4",127,0)
 . S DIC="^IBM(361.1,"_IBDA(1)_",21,",DA(1)=IBDA(1),X=$$NOW^XLFDT
"RTN","IBCECOB4",128,0)
 . W !,"New Review Date: "_$$FMTE^XLFDT(X,2)
"RTN","IBCECOB4",129,0)
 . S DIC("DR")=DR,DLAYGO=361.121
"RTN","IBCECOB4",130,0)
 . S DIC(0)="L",DIC("P")=$$GETSPEC^IBEFUNC(361.1,21)
"RTN","IBCECOB4",131,0)
 . D FILE^DICN K DIC,DD,DO,DLAYGO
"RTN","IBCECOB4",132,0)
 . S IBDA=+Y
"RTN","IBCECOB4",133,0)
 I IBDA>0 D
"RTN","IBCECOB4",134,0)
 . I $G(ADD) S DIE="^IBM(361.1,"_IBDA(1)_",21,",DA(1)=IBDA(1),DA=IBDA D ^DIE
"RTN","IBCECOB4",135,0)
 . I '$O(^IBM(361.1,IBDA(1),21,IBDA,0)) D KILLREV(.IBDA) Q
"RTN","IBCECOB4",136,0)
 . S IBCOM(DUZ,IBDA)=""
"RTN","IBCECOB4",137,0)
 Q
"RTN","IBCECOB4",138,0)
 ;
"RTN","IBCECOB4",139,0)
KILLREV(IBDA) ; Deletes a review date if no comments entered
"RTN","IBCECOB4",140,0)
 N DA,DIK
"RTN","IBCECOB4",141,0)
 S DA=IBDA,DA(1)=IBDA(1),DIK="^IBM(361.1,"_IBDA(1)_",21,"
"RTN","IBCECOB4",142,0)
 K IBCOM(DUZ,IBDA)
"RTN","IBCECOB4",143,0)
 D ^DIK
"RTN","IBCECOB4",144,0)
 Q
"RTN","IBCECOB4",145,0)
 ;
"RTN","IBCECOB5")
0^40^B13398553^B13018400
"RTN","IBCECOB5",1,0)
IBCECOB5 ;ALB/TMP - IB COB MANAGEMENT SCREEN ;31-JAN-01
"RTN","IBCECOB5",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155,349**;21-MAR-94;Build 46
"RTN","IBCECOB5",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCECOB5",4,0)
 ;
"RTN","IBCECOB5",5,0)
INIT ;
"RTN","IBCECOB5",6,0)
 S IBDA=+$O(IBDA(0))
"RTN","IBCECOB5",7,0)
 Q:'IBDA
"RTN","IBCECOB5",8,0)
 D BLD(IBDA)
"RTN","IBCECOB5",9,0)
 S VALMBG=1
"RTN","IBCECOB5",10,0)
 Q
"RTN","IBCECOB5",11,0)
 ;
"RTN","IBCECOB5",12,0)
BLD(IBDA) ; Build list entrypoint
"RTN","IBCECOB5",13,0)
 N IB,IBIFN,IBVCNT,X,Z,IBCNT,CNT,IBREC,IBIFN1,IBPTRESP
"RTN","IBCECOB5",14,0)
 K ^TMP("IBCECOB-X",$J)
"RTN","IBCECOB5",15,0)
 S VALMCNT=0
"RTN","IBCECOB5",16,0)
 S IB=$G(^TMP("IBCECOB1",$J,IBDA)),IBCNT=$P(IB,"^",10)
"RTN","IBCECOB5",17,0)
 S IBVCNT=$G(^TMP("IBCECOB",$J,IBDA)),IBIFN=$P(IBVCNT,U,2),IBVCNT=+IBVCNT
"RTN","IBCECOB5",18,0)
 Q:'IBVCNT
"RTN","IBCECOB5",19,0)
 S Z=IBVCNT-1
"RTN","IBCECOB5",20,0)
 F  S Z=$O(^TMP("IBCECOB",$J,"IDX",Z)) Q:'Z!('$D(^TMP("IBCECOB",$J,"IDX",+Z,IBDA)))  D SET($G(^TMP("IBCECOB",$J,Z,0)))
"RTN","IBCECOB5",21,0)
 D SET("")
"RTN","IBCECOB5",22,0)
 S X=$E(" Original Billed Amt: $"_$$A10^IBCECSA5(+$P(IB,U,2))_$J("",40),1,40)
"RTN","IBCECOB5",23,0)
 S X=X_$S($G(IBSRC):"   Total A/R Payments: $"_$$A10^IBCECSA5($P(IB,U,3)),1:"Unreimburse Medicare Exp: $"_$$A10^IBCECSA5(+$G(^IBM(361.1,IBCNT,1))))
"RTN","IBCECOB5",24,0)
 D SET(X)
"RTN","IBCECOB5",25,0)
 ;
"RTN","IBCECOB5",26,0)
 S IBIFN1=$P($G(^IBM(361.1,IBCNT,0)),U,1)      ; bill#
"RTN","IBCECOB5",27,0)
 S IBPTRESP=$P($G(^IBM(361.1,IBCNT,1)),U,2)    ; Pt Resp Amt 1.02 field
"RTN","IBCECOB5",28,0)
 ; Override Pt Resp Amt for bills with Form Type UB-04
"RTN","IBCECOB5",29,0)
 I $$FT^IBCEF(IBIFN1)=3 S IBPTRESP=$$PTRESPI^IBCECOB1(IBCNT)
"RTN","IBCECOB5",30,0)
 ;
"RTN","IBCECOB5",31,0)
 S X=$E($S($G(IBSRC):"        Bill Balance: $"_$$A10^IBCECSA5(+$P(IB,U,4)),1:" Pt Resp Amt:         $"_$$A10^IBCECSA5(IBPTRESP))_$J("",40),1,40)
"RTN","IBCECOB5",32,0)
 I '$G(IBSRC) N IBCALC,IBIFN S IBIFN=+$G(^IBM(361.1,IBCNT,0)) D MRACALC^IBCEMU2(IBCNT,IBIFN,0,.IBCALC)
"RTN","IBCECOB5",33,0)
 S X=X_$S($G(IBSRC):"       Total Amt This EOB: $"_$$A10^IBCECSA5($P(IB,U,17)),1:"   Medicare Contract Adj: $"_$$A10^IBCECSA5($G(IBCALC("MEDCA"))))
"RTN","IBCECOB5",34,0)
 D SET(X)
"RTN","IBCECOB5",35,0)
 D SET("")
"RTN","IBCECOB5",36,0)
 I $G(IBSRC) D
"RTN","IBCECOB5",37,0)
 . S X=" Days Since Last Transmit: "_+$P(IB,U,12)
"RTN","IBCECOB5",38,0)
 . D SET(X)
"RTN","IBCECOB5",39,0)
 . S X="       Authorizing Biller: "_$P(IB,U,8)
"RTN","IBCECOB5",40,0)
 . D SET(X)
"RTN","IBCECOB5",41,0)
 . S X="              COB History: "
"RTN","IBCECOB5",42,0)
 . I $P(IB,U,11)'="" D
"RTN","IBCECOB5",43,0)
 .. F Z=1:1:$L($P(IB,U,11),";") S X=X_$P($P(IB,U,11),";",Z) D SET(X) S X=$J("",27)
"RTN","IBCECOB5",44,0)
 . E  D
"RTN","IBCECOB5",45,0)
 .. S X=X_"NONE FOUND" D SET(X)
"RTN","IBCECOB5",46,0)
 I '$G(IBSRC) S CNT=20,IBREC=$G(^IBM(361.1,IBCNT,0)) K ^TMP("IBCECSD",$J) D MRALLA^IBCECSA5 M ^TMP("IBCECOB-X",$J)=^TMP("IBCECSD",$J) K ^TMP("IBCECSD",$J)
"RTN","IBCECOB5",47,0)
 ;
"RTN","IBCECOB5",48,0)
 Q
"RTN","IBCECOB5",49,0)
 ;
"RTN","IBCECOB5",50,0)
EXIT ; -- exit code --
"RTN","IBCECOB5",51,0)
 K ^TMP("IBCECOB-X",$J),IBDA
"RTN","IBCECOB5",52,0)
 D CLEAN^VALM10
"RTN","IBCECOB5",53,0)
 Q
"RTN","IBCECOB5",54,0)
 ;
"RTN","IBCECOB5",55,0)
HDR1 ; -- header code
"RTN","IBCECOB5",56,0)
 ; Assume IBIFN and IBZIEN are defined
"RTN","IBCECOB5",57,0)
 N IBCOB,IBINS
"RTN","IBCECOB5",58,0)
 K VALMHDR
"RTN","IBCECOB5",59,0)
 S IBINS=$$FINDINS^IBCEF1(IBIFN)
"RTN","IBCECOB5",60,0)
 S VALMHDR(1)=IORVON_" BILL #:"_$$BN^PRCAFN(IBIFN)_IORVOFF
"RTN","IBCECOB5",61,0)
 S VALMHDR(1)=$J("",80-$L(VALMHDR(1))\2)_VALMHDR(1)
"RTN","IBCECOB5",62,0)
 S VALMHDR(2)="  INSURANCE COMPANY: "_$P($G(^DIC(36,+IBINS,0)),U)
"RTN","IBCECOB5",63,0)
 S VALMHDR(3)="  "_IOUON_"Svc Date  Patient Name/Last 4           Care Type/Form  COB/SEQ"_IOUOFF
"RTN","IBCECOB5",64,0)
 S Z=$G(^TMP("IBCECOB",$J,IBZIEN,0))
"RTN","IBCECOB5",65,0)
 S VALMHDR(4)="  "_$E(Z,17,$L(Z))
"RTN","IBCECOB5",66,0)
 Q
"RTN","IBCECOB5",67,0)
 ;
"RTN","IBCECOB5",68,0)
EXIT1 ; -- exit code --
"RTN","IBCECOB5",69,0)
 K ^TMP("IBCECSD",$J)
"RTN","IBCECOB5",70,0)
 D CLEAN^VALM10
"RTN","IBCECOB5",71,0)
 Q
"RTN","IBCECOB5",72,0)
 ;
"RTN","IBCECOB5",73,0)
VEOB ;View an EOB from EOB Management
"RTN","IBCECOB5",74,0)
 N IBDA,IBCNT,IBIFN,Z,VALMCNT,IBZIEN,IBONE
"RTN","IBCECOB5",75,0)
 ;
"RTN","IBCECOB5",76,0)
 D FULL^VALM1
"RTN","IBCECOB5",77,0)
 D SEL^IBCECOB2(.IBDA,1)
"RTN","IBCECOB5",78,0)
 S IBDA=+$O(IBDA(0))
"RTN","IBCECOB5",79,0)
 I IBDA D EN^VALM("IBCEM EOB VIEW EOB")
"RTN","IBCECOB5",80,0)
 S VALMBCK="R"
"RTN","IBCECOB5",81,0)
 Q
"RTN","IBCECOB5",82,0)
 ;
"RTN","IBCECOB5",83,0)
INIT1 ;
"RTN","IBCECOB5",84,0)
 S IBCNT=+$P($G(IBDA(IBDA)),U,3)
"RTN","IBCECOB5",85,0)
 S IBIFN=+$G(IBDA(IBDA)),IBZIEN=+$G(^TMP("IBCECOB",$J,IBDA)),IBONE=1
"RTN","IBCECOB5",86,0)
 Q:'IBCNT!'IBIFN!'IBZIEN
"RTN","IBCECOB5",87,0)
 D HDR1
"RTN","IBCECOB5",88,0)
 D BLD^IBCECSA6
"RTN","IBCECOB5",89,0)
 Q
"RTN","IBCECOB5",90,0)
 ;
"RTN","IBCECOB5",91,0)
SET(X) ;set up list manager screen array
"RTN","IBCECOB5",92,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCECOB5",93,0)
 S ^TMP("IBCECOB-X",$J,VALMCNT,0)=X
"RTN","IBCECOB5",94,0)
 Q
"RTN","IBCECOB5",95,0)
 ;
"RTN","IBCECSA5")
0^41^B62746487^B62760679
"RTN","IBCECSA5",1,0)
IBCECSA5 ;ALB/CXW - VIEW EOB SCREEN ;01-OCT-1999
"RTN","IBCECSA5",2,0)
 ;;2.0;INTEGRATED BILLING;**137,135,263,280,155,349**;21-MAR-1994;Build 46
"RTN","IBCECSA5",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCECSA5",4,0)
 ;
"RTN","IBCECSA5",5,0)
EN ; -- main entry point for VIEW EOB
"RTN","IBCECSA5",6,0)
 N VALMCNT,VALMBG,VALMHDR
"RTN","IBCECSA5",7,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBCECSA5",8,0)
 D EN^VALM("IBCEM VIEW EOB")
"RTN","IBCECSA5",9,0)
 Q
"RTN","IBCECSA5",10,0)
 ;
"RTN","IBCECSA5",11,0)
INIT ; -- init variables and list array
"RTN","IBCECSA5",12,0)
 I '$G(IBIFN) S VALMQUIT="" G INITQ    ; bill# is required
"RTN","IBCECSA5",13,0)
 D HDR^IBCEOB2                         ; build the VALMHDR array
"RTN","IBCECSA5",14,0)
 K IBCNT,IBONE,^TMP("IBCECSD",$J)      ; kill vars and scratch global
"RTN","IBCECSA5",15,0)
 ;
"RTN","IBCECSA5",16,0)
 ; 8/13/03 - If variable IBEOBIFN is set, then this is the 361.1 ien
"RTN","IBCECSA5",17,0)
 ;           that the user selected from a list.  Build the detail.
"RTN","IBCECSA5",18,0)
 I $G(IBEOBIFN) S IBCNT=IBEOBIFN,IBONE=1 D BLD^IBCECSA6 G INITQ
"RTN","IBCECSA5",19,0)
 ;
"RTN","IBCECSA5",20,0)
 D BLD^IBCEOB2   ; build ^TMP("IBCEOB",$J) containing MRA/EOB lister
"RTN","IBCECSA5",21,0)
 S IBONE=0
"RTN","IBCECSA5",22,0)
 M ^TMP("IBCECSD",$J)=^TMP("IBCEOB",$J)
"RTN","IBCECSA5",23,0)
 ;
"RTN","IBCECSA5",24,0)
 ; 4/7/03 - If only 1 EOB record found for this bill, then set the
"RTN","IBCECSA5",25,0)
 ;          IBCNT variable, the IBONE one-time flag, and build the
"RTN","IBCECSA5",26,0)
 ;          detail sections of this list.
"RTN","IBCECSA5",27,0)
 I $G(VALMCNT)=1 S IBCNT=$P($G(^TMP("IBCECSD",$J,1)),U,2),IBONE=1 I IBCNT D BLD^IBCECSA6
"RTN","IBCECSA5",28,0)
 ;
"RTN","IBCECSA5",29,0)
INITQ Q
"RTN","IBCECSA5",30,0)
 ;
"RTN","IBCECSA5",31,0)
HELP ; -- help code
"RTN","IBCECSA5",32,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCECSA5",33,0)
 Q
"RTN","IBCECSA5",34,0)
 ;
"RTN","IBCECSA5",35,0)
EXIT ; -- exit code
"RTN","IBCECSA5",36,0)
 K ^TMP("IBCECSD",$J)
"RTN","IBCECSA5",37,0)
 D CLEAR^VALM1,CLEAN^VALM10
"RTN","IBCECSA5",38,0)
 Q
"RTN","IBCECSA5",39,0)
MIN ;
"RTN","IBCECSA5",40,0)
 N IBREC1,IBRM1,IBRM2,IBRM3,IBRM4,IBRM5,IBRL,IBTYPE,IBT,IBTX,IBD
"RTN","IBCECSA5",41,0)
 ; flag for inpatient mra
"RTN","IBCECSA5",42,0)
 S IBTYPE=$S($G(IBSRC):1,$$INPAT^IBCEF(+IBREC):1,1:0)
"RTN","IBCECSA5",43,0)
 ;
"RTN","IBCECSA5",44,0)
 S IB=$$SETSTR^VALM1("MEDICARE INFORMATION:","",1,50)
"RTN","IBCECSA5",45,0)
 D SET(IB)
"RTN","IBCECSA5",46,0)
 I '$G(IBSRC) D
"RTN","IBCECSA5",47,0)
 . D CNTRL^VALM10(VALMCNT,1,21,IORVON,IORVOFF)
"RTN","IBCECSA5",48,0)
 . S ^TMP("IBCECSD",$J,"X",5)=VALMCNT
"RTN","IBCECSA5",49,0)
 I $G(IBSRC),'$D(^IBM(361.1,IBCNT,4)) Q
"RTN","IBCECSA5",50,0)
 I '$G(IBSRC),'$$INPAT^IBCEF(+IBREC) Q
"RTN","IBCECSA5",51,0)
 D SET(" INPATIENT:")
"RTN","IBCECSA5",52,0)
 S IBREC1=$G(^IBM(361.1,IBCNT,4)),(IB,IBRL)=""
"RTN","IBCECSA5",53,0)
 ;
"RTN","IBCECSA5",54,0)
 F IBT=2:1 S IBTX=$P($T(MINDAT+IBT),";",3) Q:IBTX=""  D
"RTN","IBCECSA5",55,0)
 . S IBD=$P(IBREC1,"^",+IBTX)
"RTN","IBCECSA5",56,0)
 . I $L($P(IBTX,"^",4)) X $P(IBTX,"^",4) E  N IBFULL S IBFULL=1
"RTN","IBCECSA5",57,0)
 . I $S(IBFULL:1,1:IBD) D
"RTN","IBCECSA5",58,0)
 .. I $L($P(IBTX,"^",4)) X $P(IBTX,"^",4) I  Q
"RTN","IBCECSA5",59,0)
 .. X "S IBD="_$S($L($P(IBTX,"^",3)):$P(IBTX,"^",3),1:"$$A10(IBD)")
"RTN","IBCECSA5",60,0)
 .. S IB=$$SETSTR^VALM1($P(IBTX,"^",2)_IBD,IB,$S('IBRL:4,1:37),$S('IBRL:41,1:38))
"RTN","IBCECSA5",61,0)
 .. S IBRL=$S(IBRL:0,1:1)
"RTN","IBCECSA5",62,0)
 .. I 'IBRL D SET(IB,IBRL) S IB=""
"RTN","IBCECSA5",63,0)
 ;
"RTN","IBCECSA5",64,0)
 D:IBRL'="" SET(IB)
"RTN","IBCECSA5",65,0)
 D REMARK
"RTN","IBCECSA5",66,0)
 Q
"RTN","IBCECSA5",67,0)
 ;
"RTN","IBCECSA5",68,0)
MINDAT ; data for MIN tag
"RTN","IBCECSA5",69,0)
 ; format:  piece^lable^special format code^special decision for disp
"RTN","IBCECSA5",70,0)
 ;;1^Cov Days/Visit Ct  : ^$$RJ(+IBD)^I $G(IBSRC)
"RTN","IBCECSA5",71,0)
 ;;3^Claim DRG Amt      : 
"RTN","IBCECSA5",72,0)
 ;;2^Lifetm Psych Dy Ct : ^$$RJ(IBD)
"RTN","IBCECSA5",73,0)
 ;;5^Disprop Share Amt  : ^^I IBTYPE
"RTN","IBCECSA5",74,0)
 ;;4^Cap Exception Amt  : 
"RTN","IBCECSA5",75,0)
 ;;7^PPS Capital Amt    : ^^I IBTYPE
"RTN","IBCECSA5",76,0)
 ;;6^MSP Pass Thru Amt  : 
"RTN","IBCECSA5",77,0)
 ;;9^PPS Cap HSP-DRG Amt: ^^I IBTYPE
"RTN","IBCECSA5",78,0)
 ;;8^PPS Cap FSP-DRG Amt: ^^I IBTYPE
"RTN","IBCECSA5",79,0)
 ;;11^Old Capital Amt    : ^^I IBTYPE
"RTN","IBCECSA5",80,0)
 ;;10^PPS Cap DSH-DRG Amt: ^^I IBTYPE
"RTN","IBCECSA5",81,0)
 ;;13^PPS Op Hos DRG Amt : 
"RTN","IBCECSA5",82,0)
 ;;12^PPS Capital IME Amt: ^^I IBTYPE
"RTN","IBCECSA5",83,0)
 ;;15^PPS Op Fed DRG Amt : ^^I IBTYPE
"RTN","IBCECSA5",84,0)
 ;;14^Cost Report Day Ct : ^$$RJ(IBD)^I IBTYPE
"RTN","IBCECSA5",85,0)
 ;;17^Indirect Teach Amt : ^^I IBTYPE
"RTN","IBCECSA5",86,0)
 ;;16^PPS Cap Outlier Amt: ^^I IBTYPE
"RTN","IBCECSA5",87,0)
 ;;18^Non-Pay Prof Comp  : ^$$RJ(IBD)
"RTN","IBCECSA5",88,0)
 ;;19^Non-Covered Days Ct: ^$$RJ(+IBD)^I IBTYPE
"RTN","IBCECSA5",89,0)
 ;;
"RTN","IBCECSA5",90,0)
 ;
"RTN","IBCECSA5",91,0)
REMARK ; set up remarks and line level details
"RTN","IBCECSA5",92,0)
 N IBREC1,IBP,IBT,IBX,RCODE,RDESC,REXIST
"RTN","IBCECSA5",93,0)
 Q:$G(IBREM)  S IBREM=1
"RTN","IBCECSA5",94,0)
 D SET(" ")
"RTN","IBCECSA5",95,0)
 D SET(" Claim Level Remark Information")
"RTN","IBCECSA5",96,0)
 D SET("   Code     Description")
"RTN","IBCECSA5",97,0)
 I '$G(IBSRC) D
"RTN","IBCECSA5",98,0)
 . D CNTRL^VALM10(VALMCNT,4,4,IOUON,IOUOFF)
"RTN","IBCECSA5",99,0)
 . D CNTRL^VALM10(VALMCNT,13,11,IOUON,IOUOFF)
"RTN","IBCECSA5",100,0)
 . Q
"RTN","IBCECSA5",101,0)
 ;
"RTN","IBCECSA5",102,0)
 S IBREC1=$P($G(^IBM(361.1,IBCNT,3)),U,3,7)
"RTN","IBCECSA5",103,0)
 I $P(IBREC1,U,1)="" S IBREC1=$P($G(^IBM(361.1,IBCNT,5)),U,1,5)
"RTN","IBCECSA5",104,0)
 S REXIST=0
"RTN","IBCECSA5",105,0)
 ;
"RTN","IBCECSA5",106,0)
 F IBP=1:1:5 D
"RTN","IBCECSA5",107,0)
 . S RCODE=$P(IBREC1,U,IBP)
"RTN","IBCECSA5",108,0)
 . S RDESC=$G(^IBM(361.1,IBCNT,"RM"_IBP))
"RTN","IBCECSA5",109,0)
 . I RCODE="",RDESC="" Q
"RTN","IBCECSA5",110,0)
 . S REXIST=1
"RTN","IBCECSA5",111,0)
 . K IBT
"RTN","IBCECSA5",112,0)
 . S IBT(IBP)=RDESC
"RTN","IBCECSA5",113,0)
 . D TXT1(.IBT,0,60)
"RTN","IBCECSA5",114,0)
 . D SET("   "_$$LJ^XLFSTR(RCODE,6)_"-  "_$G(IBT(1)))
"RTN","IBCECSA5",115,0)
 . S IBX=1
"RTN","IBCECSA5",116,0)
 . F  S IBX=$O(IBT(IBX)) Q:'IBX  D SET($J("",12)_IBT(IBX))
"RTN","IBCECSA5",117,0)
 . Q
"RTN","IBCECSA5",118,0)
 ;
"RTN","IBCECSA5",119,0)
 I 'REXIST D SET("   No claim level remarks on file")
"RTN","IBCECSA5",120,0)
 D SET(" ")
"RTN","IBCECSA5",121,0)
 Q:$G(IBSRC)  ; MRA Only
"RTN","IBCECSA5",122,0)
 ;
"RTN","IBCECSA5",123,0)
MRALLA S IB=$$SETSTR^VALM1("LINE LEVEL ADJUSTMENTS:","",1,50)
"RTN","IBCECSA5",124,0)
 D SET(IB)
"RTN","IBCECSA5",125,0)
 I '$G(IBSRC) D
"RTN","IBCECSA5",126,0)
 . D CNTRL^VALM10(VALMCNT,1,23,IORVON,IORVOFF)
"RTN","IBCECSA5",127,0)
 . S ^TMP("IBCECSD",$J,"X",7)=VALMCNT
"RTN","IBCECSA5",128,0)
 I '$D(^IBM(361.1,IBCNT,15,0)) D SET("NONE") Q  ; only if there is info
"RTN","IBCECSA5",129,0)
 ;
"RTN","IBCECSA5",130,0)
 ; look up all billed data
"RTN","IBCECSA5",131,0)
 N IBZDATA,IBFORM,IBX2,IBX3,IBREC2,IBREC3,IBTX,IBT,IBRC,IBZ,IBTXL
"RTN","IBCECSA5",132,0)
 S IBFORM=0                             ; cms-1500
"RTN","IBCECSA5",133,0)
 I $$FT^IBCEF(+IBREC)=3 S IBFORM=1      ; UB-04
"RTN","IBCECSA5",134,0)
 D F^IBCEF("N-"_$S(IBFORM:"UB-04",1:"HCFA 1500")_" SERVICE LINE (EDI)","IBZDATA",,+IBREC)
"RTN","IBCECSA5",135,0)
 ;
"RTN","IBCECSA5",136,0)
 S IBX=0 F  S IBX=$O(^IBM(361.1,IBCNT,15,IBX)) Q:IBX<1  S IBREC1=^IBM(361.1,IBCNT,15,IBX,0) D
"RTN","IBCECSA5",137,0)
 . NEW RVL
"RTN","IBCECSA5",138,0)
 . D SET("  #   SV DT   REVCD  PROC  MOD  UNITS  BILLED  DEDUCT  COINS    ALLOW     PYMT")
"RTN","IBCECSA5",139,0)
 . S RVL=+$P(IBREC1,U,12)       ; referenced Vista line#
"RTN","IBCECSA5",140,0)
 . I 'RVL S RVL=IBX             ; use the EOB line# if not there
"RTN","IBCECSA5",141,0)
 . S IBT=$$RJ($P(IBREC1,"^"),3) ;             line number
"RTN","IBCECSA5",142,0)
 . S IBT=IBT_" "_$$DAT1^IBOUTL($P($P(IBREC1,"^",16),".")) ; service date
"RTN","IBCECSA5",143,0)
 . S IBT=IBT_" "_$$RJ($$EXTERNAL^DILFD(361.115,.1,"",$P(IBREC1,"^",10)),6) ;                                                revcd
"RTN","IBCECSA5",144,0)
 . S IBT=IBT_" "_$$RJ($P(IBREC1,"^",4),5) ;   procedure
"RTN","IBCECSA5",145,0)
 . S IBT=IBT_" "_$$RJ($P($G(^IBM(361.1,IBCNT,15,IBX,2,1,0)),"^"),3)_$S($D(^IBM(361.1,IBCNT,15,IBX,2,2,0)):"+",1:" ") ;      modifiers
"RTN","IBCECSA5",146,0)
 . S IBT=IBT_" "_$$RJ($FN($P(IBREC1,"^",11),"",0),5) ; units
"RTN","IBCECSA5",147,0)
 . S IBT=IBT_" "_$$RJ($FN($S(IBFORM:$P($G(IBZDATA(RVL)),"^",5),1:$P($G(IBZDATA(RVL)),"^",8)*$P($G(IBZDATA(RVL)),"^",9)),"",2),8) ;    billed
"RTN","IBCECSA5",148,0)
 . S IBT=IBT_" "_$$RJ($FN($P($G(^IBM(361.1,IBCNT,15,IBX,1,+$O(^IBM(361.1,IBCNT,15,IBX,1,"B","PR",0)),1,+$O(^IBM(361.1,IBCNT,15,IBX,1,+$O(^IBM(361.1,IBCNT,15,IBX,1,"B","PR",0)),1,"B",1,0)),0)),"^",2),"",2),7) ;  deduct
"RTN","IBCECSA5",149,0)
 . S IBT=IBT_" "_$$RJ($FN($P($G(^IBM(361.1,IBCNT,15,IBX,1,+$O(^IBM(361.1,IBCNT,15,IBX,1,"B","PR",0)),1,+$O(^IBM(361.1,IBCNT,15,IBX,1,+$O(^IBM(361.1,IBCNT,15,IBX,1,"B","PR",0)),1,"B",2,0)),0)),"^",2),"",2),6) ;   coins
"RTN","IBCECSA5",150,0)
 . S IBT=IBT_" "_$$RJ($FN($P(IBREC1,"^",13),"",2),8) ; allow
"RTN","IBCECSA5",151,0)
 . S IBT=IBT_" "_$$RJ($FN($P(IBREC1,"^",3),"",2),8) ;  payment
"RTN","IBCECSA5",152,0)
 . D SET(IBT)
"RTN","IBCECSA5",153,0)
 . S IBX2=0 F  S IBX2=$O(^IBM(361.1,IBCNT,15,IBX,1,IBX2)) Q:IBX2<1  D
"RTN","IBCECSA5",154,0)
 .. S IBREC2=^IBM(361.1,IBCNT,15,IBX,1,IBX2,0),IBX3=0
"RTN","IBCECSA5",155,0)
 .. F  S IBX3=$O(^IBM(361.1,IBCNT,15,IBX,1,IBX2,1,IBX3)) Q:IBX3<1  D
"RTN","IBCECSA5",156,0)
 ... S IBREC3=^IBM(361.1,IBCNT,15,IBX,1,IBX2,1,IBX3,0)
"RTN","IBCECSA5",157,0)
 ... ; line level adjustments; don't display kludges (esg 10/23/03)
"RTN","IBCECSA5",158,0)
 ... I $P(IBREC2,U,1)="PR",$P(IBREC3,U,1)="AAA" Q
"RTN","IBCECSA5",159,0)
 ... I $P(IBREC2,U,1)="OA",$P(IBREC3,U,1)="AB3" Q
"RTN","IBCECSA5",160,0)
 ... I $P(IBREC2,U,1)="LQ" Q
"RTN","IBCECSA5",161,0)
 ... S IBTX(1)="ADJ: "_$P(IBREC2,"^")_"  "_$P(IBREC3,"^")_"  "_$P(IBREC3,"^",4) D TXT1(.IBTX,0,79) S IBT=0 F  S IBT=$O(IBTX(IBT)) Q:IBT<1  D SET(IBTX(IBT))
"RTN","IBCECSA5",162,0)
 ... K IBTX
"RTN","IBCECSA5",163,0)
 ... D SET("ADJ AMT: "_$FN($P(IBREC3,"^",2),"",2))
"RTN","IBCECSA5",164,0)
 . S IBRC=0
"RTN","IBCECSA5",165,0)
 . F  S IBRC=$O(^IBM(361.1,IBCNT,15,IBX,4,IBRC)) Q:'IBRC  S IBREC2=$G(^(IBRC,0)) I IBREC2 K IBTX,IBZ S IBTX(1)="  -REMARK CODE("_+IBREC2_"): ",IBTXL=$L(IBTX(1)) D
"RTN","IBCECSA5",166,0)
 .. S IBTX(1)=IBTX(1)_$P(IBREC2,U,2)_"  "_$P(IBREC2,U,3)
"RTN","IBCECSA5",167,0)
 .. I $L(IBTX(1))>79 D
"RTN","IBCECSA5",168,0)
 ... D TXT1(.IBTX,0,79) D SET(IBTX(1)) M IBZ=IBTX K IBTX S IBTX(1)="",IBT=1 F  S IBT=$O(IBZ(IBT)) Q:'IBT  S IBTX(1)=IBTX(1)_IBZ(IBT)_" "
"RTN","IBCECSA5",169,0)
 .. E  D
"RTN","IBCECSA5",170,0)
 ... S IBTXL=0
"RTN","IBCECSA5",171,0)
 .. D TXT1(.IBTX,IBTXL,79) S IBT=0 F  S IBT=$O(IBTX(IBT)) Q:IBT<1  D SET(IBTX(IBT))
"RTN","IBCECSA5",172,0)
 . D SET(" ")
"RTN","IBCECSA5",173,0)
 D SET(" ")
"RTN","IBCECSA5",174,0)
 Q
"RTN","IBCECSA5",175,0)
 ;
"RTN","IBCECSA5",176,0)
TXT(IBRM,IBLN,IBXY) ;display text over 79 chars
"RTN","IBCECSA5",177,0)
 ;IBRM - text, IBLN - length, IBXY - position
"RTN","IBCECSA5",178,0)
 S IBRM=$E(IBRM,IBLN+1,999)
"RTN","IBCECSA5",179,0)
REP I $E(IBRM,1,IBLN)'="" S IB=$$SETSTR^VALM1($E(IBRM,1,IBLN),"",IBXY,IBLN) D SET(IB) S IBRM=$E(IBRM,IBLN+1,999) G REP
"RTN","IBCECSA5",180,0)
 Q
"RTN","IBCECSA5",181,0)
 ;
"RTN","IBCECSA5",182,0)
SET(IB,IBSAV) ;
"RTN","IBCECSA5",183,0)
 I '$G(IBSAV) D SET^IBCECSA6($G(IBSRC),IB,CNT,IBCNT)
"RTN","IBCECSA5",184,0)
 Q
"RTN","IBCECSA5",185,0)
 ;
"RTN","IBCECSA5",186,0)
A10(X) ;
"RTN","IBCECSA5",187,0)
 Q $$A10^IBCECSA6(X)
"RTN","IBCECSA5",188,0)
 ;
"RTN","IBCECSA5",189,0)
A7(X) ; returns a dollar amount right justified to 7 characters
"RTN","IBCECSA5",190,0)
 Q $$RJ($FN(X,"",2),7)
"RTN","IBCECSA5",191,0)
 ;
"RTN","IBCECSA5",192,0)
TXT1(IBT,DIWL,DIWR) ; sets up text for over 79 chars
"RTN","IBCECSA5",193,0)
 ; IBT - pass by ref, array of text to be formatted back in array
"RTN","IBCECSA5",194,0)
 ; DIWL - left margin, DIWR = right margin
"RTN","IBCECSA5",195,0)
 N IBX,X,DIWF,IBS K ^UTILITY($J,"W")
"RTN","IBCECSA5",196,0)
 S DIWF="|I"_DIWL
"RTN","IBCECSA5",197,0)
 S IBX=0 F  S IBX=$O(IBT(IBX)) Q:IBX<1  S X=IBT(IBX) D ^DIWP
"RTN","IBCECSA5",198,0)
 K IBT F  S IBX=$O(^UTILITY($J,"W",DIWL,IBX)) Q:IBX<1  S IBT(IBX)=^UTILITY($J,"W",DIWL,IBX,0)
"RTN","IBCECSA5",199,0)
 K ^UTILITY($J,"W")
"RTN","IBCECSA5",200,0)
 Q
"RTN","IBCECSA5",201,0)
 ;
"RTN","IBCECSA5",202,0)
RJ(X,Y) ; right just, default is 10
"RTN","IBCECSA5",203,0)
 Q $$RJ^XLFSTR(X,$G(Y,10)," ")
"RTN","IBCECSA5",204,0)
 ;
"RTN","IBCEF1")
0^1^B53245090^B44690565
"RTN","IBCEF1",1,0)
IBCEF1 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS - CONT ;30-JAN-96
"RTN","IBCEF1",2,0)
 ;;2.0;INTEGRATED BILLING;**52,124,51,137,210,155,349**;21-MAR-94;Build 46
"RTN","IBCEF1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF1",4,0)
 ;
"RTN","IBCEF1",5,0)
OCC(IBIFN,REL,TEXT) ;Sets up an arrays of occurrence codes for various cks
"RTN","IBCEF1",6,0)
 ;RETURNS 1^additional data for entry IBXSAVE("OCC",n) if REL or TEXT
"RTN","IBCEF1",7,0)
 ;   parameters have been met or null if conditions not met
"RTN","IBCEF1",8,0)
 ;If no REL or TEXT parameters sent, just extract codes array
"RTN","IBCEF1",9,0)
 ; IBIFN = bill ien
"RTN","IBCEF1",10,0)
 ; REL = 'OCC RELATED TO' value to check for
"RTN","IBCEF1",11,0)
 ; TEXT = text to check for the .01 field of 399.1 entry pointed to
"RTN","IBCEF1",12,0)
 ;         by the occurrence code
"RTN","IBCEF1",13,0)
 N OCC,SORT,ARR,N,DATA,CODE,CT
"RTN","IBCEF1",14,0)
 I '$D(IBXSAVE("OCC")),'$D(IBXSAVE("OCCS")) D
"RTN","IBCEF1",15,0)
 .N IBI,Z,CT1,CT2,Z0 S (IBI,CT1,CT2)=0
"RTN","IBCEF1",16,0)
 .F  S IBI=$O(^DGCR(399,IBIFN,"OC",IBI)) Q:'IBI  S Z=$G(^(IBI,0)) D
"RTN","IBCEF1",17,0)
 ..S Z0=$G(^DGCR(399.1,+Z,0))
"RTN","IBCEF1",18,0)
 ..Q:'$P(Z0,U,10)&'$P(Z0,U,4)  ;Not an occurrence code
"RTN","IBCEF1",19,0)
 ..I $P(Z0,U,10) S CT2=CT2+1,IBXSAVE("OCCS",CT2)=$S($P(Z0,U,4):$P(Z0,U,2)_U_$P(Z,U,2),1:U)_U_$P(Z,U,4)_U_$P(Z0,U)_U_$P(Z0,U,9)_U_$P(Z,U,3)_U_$P(Z,U,2)
"RTN","IBCEF1",20,0)
 ..I '$P(Z0,U,10) S CT1=CT1+1,IBXSAVE("OCC",CT1)=$S($P(Z0,U,4):$P(Z0,U,2)_U_$P(Z,U,2),1:U)_U_U_$P(Z0,U)_U_$P(Z0,U,9)_U_$P(Z,U,3)_U_$P(Z,U,2)
"RTN","IBCEF1",21,0)
 I '$D(IBXSAVE("OCC"))&'$D(IBXSAVE("OCCS")) S IBXSAVE("OCC")="" G OCCQ
"RTN","IBCEF1",22,0)
 ;
"RTN","IBCEF1",23,0)
 ; esg - IB*2*349 - order the occurrence codes
"RTN","IBCEF1",24,0)
 ;       Build the SORT array sorted by the occ code
"RTN","IBCEF1",25,0)
 F ARR="OCC","OCCS" S N=0 F  S N=$O(IBXSAVE(ARR,N)) Q:'N  S DATA=$G(IBXSAVE(ARR,N)) I $P(DATA,U,1)'="" S CODE=" "_$P(DATA,U,1),SORT(ARR,CODE,N)=DATA
"RTN","IBCEF1",26,0)
 ;       Loop thru the SORT array and re-build the IBXSAVE array
"RTN","IBCEF1",27,0)
 F ARR="OCC","OCCS" K IBXSAVE(ARR) S CODE="",CT=0 F  S CODE=$O(SORT(ARR,CODE)) Q:CODE=""  S N=0 F  S N=$O(SORT(ARR,CODE,N)) Q:'N  S CT=CT+1,IBXSAVE(ARR,CT)=SORT(ARR,CODE,N)
"RTN","IBCEF1",28,0)
 ;
"RTN","IBCEF1",29,0)
 I $G(REL)'=""!($G(TEXT)'="") D OCC1("",.OCC,$G(REL),$G(TEXT)) D:'$D(OCC) OCC1("S",.OCC,$G(REL),$G(TEXT))
"RTN","IBCEF1",30,0)
OCCQ Q $G(OCC)
"RTN","IBCEF1",31,0)
 ;
"RTN","IBCEF1",32,0)
OCC1(ARR,OCC,REL,TEXT) ; Search thru local array for parameters met
"RTN","IBCEF1",33,0)
 ; ARR = null to search OCC subscript, "S" to search OCCS subscript
"RTN","IBCEF1",34,0)
 N Z
"RTN","IBCEF1",35,0)
 S ARR="OCC"_ARR,Z=0
"RTN","IBCEF1",36,0)
 F  S Z=$O(IBXSAVE(ARR,Z)) Q:'Z  D
"RTN","IBCEF1",37,0)
 .I $G(REL)'="",$P(IBXSAVE(ARR,Z),U,5)=REL S OCC="1"_$S(REL=2:U_$P(IBXSAVE(ARR,Z),U,6),1:"") Q
"RTN","IBCEF1",38,0)
 .I $G(TEXT)'="",$P(IBXSAVE(ARR,Z),U,4)=TEXT S OCC="1^"_$P(IBXSAVE(ARR,Z),U,7)
"RTN","IBCEF1",39,0)
 Q
"RTN","IBCEF1",40,0)
 ;
"RTN","IBCEF1",41,0)
RX(IBIFN) ; Format billable prescription data for refills for 837
"RTN","IBCEF1",42,0)
 N Z,IBXDATA,CT
"RTN","IBCEF1",43,0)
 I '$D(IBXSAVE("BOX24")) D B24^IBCEF3(.IBXSAVE,IBIFN,1)
"RTN","IBCEF1",44,0)
 S Z="",CT=0
"RTN","IBCEF1",45,0)
 F  S Z=$O(IBXSAVE("BOX24",Z)) Q:Z=""  I $D(IBXSAVE("BOX24",Z,"RX")) S CT=CT+1,IBXDATA(Z)=IBXSAVE("BOX24",Z,"RX")
"RTN","IBCEF1",46,0)
RXQ Q CT
"RTN","IBCEF1",47,0)
 ;
"RTN","IBCEF1",48,0)
OTHPAY(IBIFN,SEQ) ; Return the other insurance payment amount for bill
"RTN","IBCEF1",49,0)
 ;  IBIFN and payer sequence SEQ (1-3)
"RTN","IBCEF1",50,0)
 N AMT,IBIFN1
"RTN","IBCEF1",51,0)
 S IBIFN1=$P($G(^DGCR(399,IBIFN,"M1")),U,SEQ+4)
"RTN","IBCEF1",52,0)
 I IBIFN1 D
"RTN","IBCEF1",53,0)
 . I $$MCRWNR^IBEFUNC(+$G(^DGCR(399,IBIFN,"I"_SEQ))) S AMT=$$MCRPAY^IBCEU0(IBIFN) Q
"RTN","IBCEF1",54,0)
 . S AMT=+$$TPR^PRCAFN(IBIFN1) Q:AMT  ; A/R amount
"RTN","IBCEF1",55,0)
 . S AMT=+$P($G(^DGCR(399,IBIFN,"U2")),U,SEQ+3) ; amount on bill
"RTN","IBCEF1",56,0)
 Q $G(AMT)
"RTN","IBCEF1",57,0)
 ;
"RTN","IBCEF1",58,0)
OUTPT(IBIFN,IBPRINT) ; Moved for space
"RTN","IBCEF1",59,0)
 D OUTPT^IBCEF11(IBIFN,$G(IBPRINT))
"RTN","IBCEF1",60,0)
 Q
"RTN","IBCEF1",61,0)
 ;
"RTN","IBCEF1",62,0)
OCC92 ;Reformats IBXSAVE("OCC") and IBXSAVE("OCCS") to fit blocks on UB-04
"RTN","IBCEF1",63,0)
 ; Set up IBXSAVE(32-36) arrays
"RTN","IBCEF1",64,0)
 N IBPG,IB32,IB33,IB34,IB35,IB36,IBFL,Z,Z0,PG
"RTN","IBCEF1",65,0)
 S IBPG=0
"RTN","IBCEF1",66,0)
 F Z=32:1:36 K IBFL(Z) S IBFL(Z)=0
"RTN","IBCEF1",67,0)
 M IB32=IBXSAVE("OCC"),IB36=IBXSAVE("OCCS")
"RTN","IBCEF1",68,0)
 S IB32=$O(IB32(""),-1),IB36=$O(IB36(""),-1),PG=1
"RTN","IBCEF1",69,0)
 D OCC^IBCF32
"RTN","IBCEF1",70,0)
 F Z=32:1:36 S Z0="" F  S Z0=$O(IBFL(Z,Z0)) Q:'Z0  S IBXSAVE("OC92",Z,Z0)=$P(IBFL(Z,Z0),U,1,3)
"RTN","IBCEF1",71,0)
 Q
"RTN","IBCEF1",72,0)
 ;
"RTN","IBCEF1",73,0)
BATCH() ; Moved for space IB*2*349
"RTN","IBCEF1",74,0)
 Q $$BATCH^IBCEF11()
"RTN","IBCEF1",75,0)
 ;
"RTN","IBCEF1",76,0)
PROC(T,TYPE) ; Find procedure code, strip '.' Function returns result
"RTN","IBCEF1",77,0)
 ; T = Procedure internal entry #;file reference
"RTN","IBCEF1",78,0)
 ; TYPE = "CPT" for only CPT/HCPCS valid
"RTN","IBCEF1",79,0)
 ;        "ICD" for only ICD9 valid or null for either
"RTN","IBCEF1",80,0)
 N Q,S
"RTN","IBCEF1",81,0)
 S Q="",S="^"_$P($P(T,";",2),"(")
"RTN","IBCEF1",82,0)
 I $G(TYPE)="" D
"RTN","IBCEF1",83,0)
 . I $E(S,2,3)="IC" S Q=$P($$PRCD(T),U) Q
"RTN","IBCEF1",84,0)
 . I T["DIC(81.3" S Q=$$MOD^ICPTMOD(+T,"I") S Q=$S(Q>0:$P(Q,U,4),1:"")
"RTN","IBCEF1",85,0)
 I $G(TYPE)="CPT",$E(S,2,3)="IC" S Q=$$PRCD(T) Q
"RTN","IBCEF1",86,0)
 I $G(TYPE)="ICD",T["ICD0" S Q=$P($$ICD0^IBACSV(+T),U)
"RTN","IBCEF1",87,0)
 Q $TR(Q,".")
"RTN","IBCEF1",88,0)
 ;
"RTN","IBCEF1",89,0)
FACILITY(IBIFN) ;return the Facility (Institution pointer-#4) for a bill
"RTN","IBCEF1",90,0)
 ; the institution of the Bill Division (399,.22) if defined, otherwise the Facility Name (350.9,.02)
"RTN","IBCEF1",91,0)
 ;
"RTN","IBCEF1",92,0)
 N IB0,IBIN S IBIN=0
"RTN","IBCEF1",93,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)) I +$P(IB0,U,22) S IBIN=$$SITE^VASITE(+$P(IB0,U,3),+$P(IB0,U,22))
"RTN","IBCEF1",94,0)
 I IBIN'>0 S IBIN=+$P($G(^IBE(350.9,1,0)),U,2)
"RTN","IBCEF1",95,0)
 Q +IBIN
"RTN","IBCEF1",96,0)
 ;
"RTN","IBCEF1",97,0)
ISRX(IBIFN) ; Function to determine if bill is a prescription refill bill
"RTN","IBCEF1",98,0)
 ; Returns 0 if no Rx on bill or 1 if there is.
"RTN","IBCEF1",99,0)
 ;
"RTN","IBCEF1",100,0)
 N IBRX
"RTN","IBCEF1",101,0)
 I $D(^IBA(362.4,"AIFN"_IBIFN)) S IBRX=1
"RTN","IBCEF1",102,0)
 Q +$G(IBRX)
"RTN","IBCEF1",103,0)
 ;
"RTN","IBCEF1",104,0)
ISPROS(IBIFN) ; Function to determine if bill is a prosthetics bill
"RTN","IBCEF1",105,0)
 ; Returns 0 if no Prosthetics on bill or 1 if there is.
"RTN","IBCEF1",106,0)
 ;
"RTN","IBCEF1",107,0)
 N IBPROS
"RTN","IBCEF1",108,0)
 I $D(^IBA(362.5,"AIFN"_IBIFN)) S IBPROS=1
"RTN","IBCEF1",109,0)
 Q +$G(IBPROS)
"RTN","IBCEF1",110,0)
 ;
"RTN","IBCEF1",111,0)
FINDINS(IBIFN,IBSEQ) ; Returns the internal entry number of the insurance
"RTN","IBCEF1",112,0)
 ;  company for bill ien IBIFN for payer sequence IBSEQ (or current if
"RTN","IBCEF1",113,0)
 ;  IBSEQ is null)
"RTN","IBCEF1",114,0)
 Q $P($G(^DGCR(399,IBIFN,"I"_$$COBN^IBCEF(IBIFN,$G(IBSEQ)))),U)
"RTN","IBCEF1",115,0)
 ;
"RTN","IBCEF1",116,0)
TOB(IBIFN) ; Returns UB-04 type of bill from data in the output formatter
"RTN","IBCEF1",117,0)
 N IBTOB,IBZ1,IBZ2,IBZ3
"RTN","IBCEF1",118,0)
 D F^IBCEF("N-UB-04 LOCATION OF CARE","IBZ1",,IBIFN)
"RTN","IBCEF1",119,0)
 D F^IBCEF("N-UB-04 BILL CLASSIFICATION","IBZ2",,IBIFN)
"RTN","IBCEF1",120,0)
 D F^IBCEF("N-UB-04 TIMEFRAME OF BILL","IBZ3",,IBIFN)
"RTN","IBCEF1",121,0)
 S IBTOB=IBZ1_IBZ2_IBZ3
"RTN","IBCEF1",122,0)
 Q IBTOB
"RTN","IBCEF1",123,0)
 ;
"RTN","IBCEF1",124,0)
PRCD(PRIEN,ALL,EDT) ; Function returns the code that corresponds to the variable
"RTN","IBCEF1",125,0)
 ; pointer data in PRIEN (ien;file)
"RTN","IBCEF1",126,0)
 ; ALL = if ALL=1, returns the entire $$CPT^ICPTCOD for CPT or
"RTN","IBCEF1",127,0)
 ;       ^code^name format for ICD result
"RTN","IBCEF1",128,0)
 ;       or null if lookup fails
"RTN","IBCEF1",129,0)
 ; EDT = Effective date to check (not used if +$G(ALL)=0)
"RTN","IBCEF1",130,0)
 N CODE,IBX
"RTN","IBCEF1",131,0)
 S CODE=""
"RTN","IBCEF1",132,0)
 ;Modified for Code Set Versioning
"RTN","IBCEF1",133,0)
 I PRIEN["ICPT" S IBX=$$CPT^ICPTCOD(+PRIEN,$G(EDT)) G:IBX'>0 PRCDQ S CODE=$S($G(ALL):IBX,1:$P(IBX,U,2))
"RTN","IBCEF1",134,0)
 I PRIEN["ICD0" S IBX=$$ICD0^IBACSV(+PRIEN,$G(EDT)) G:IBX="" PRCDQ S CODE=$S($G(ALL):U_$P(IBX,U)_U_$P(IBX,U,4),1:$P(IBX,U))
"RTN","IBCEF1",135,0)
PRCDQ Q CODE
"RTN","IBCEF1",136,0)
 ;
"RTN","IBCEF1",137,0)
NFT(FT,IBIFN) ; Returns 1 if bill IBIFN is not of form type FT (internal)
"RTN","IBCEF1",138,0)
 ; so the data element should not be required
"RTN","IBCEF1",139,0)
 S FT=$S($$FT^IBCEF(IBIFN)=FT:0,1:1)
"RTN","IBCEF1",140,0)
 Q FT
"RTN","IBCEF1",141,0)
 ;
"RTN","IBCEF1",142,0)
REQ(FT,INP,IBIFN) ; Determine if bill IBIFN is of form type FT and
"RTN","IBCEF1",143,0)
 ; Inpatient (I) or Outpatient (O) status INP [or either if (null)] 
"RTN","IBCEF1",144,0)
 ;
"RTN","IBCEF1",145,0)
 ;Returns 1 if both conditions FT and INP match for the bill
"RTN","IBCEF1",146,0)
 ; or 0 if either of these conditions are not true
"RTN","IBCEF1",147,0)
 ; I $$REQ^IBCEF1(2,"I",1) would mean if bill entry #1 is
"RTN","IBCEF1",148,0)
 ;                         CMS-1500/inpatient the data would be required
"RTN","IBCEF1",149,0)
 ; I '$$REQ^IBCEF1(2,"I",1) would mean if bill entry #1 is anything but
"RTN","IBCEF1",150,0)
 ;                          CMS-1500/inpatient, the data would not be
"RTN","IBCEF1",151,0)
 ;                          required
"RTN","IBCEF1",152,0)
 N Z
"RTN","IBCEF1",153,0)
 S Z=1
"RTN","IBCEF1",154,0)
 S:$$NFT(FT,IBIFN) Z=0 ; Not the form type for requirement
"RTN","IBCEF1",155,0)
 I Z,$G(INP)'="" D
"RTN","IBCEF1",156,0)
 . S Z0=$$INPAT^IBCEF(IBIFN,1),INP=$G(INP)
"RTN","IBCEF1",157,0)
 . S Z=$S(Z0:INP="I",1:INP="O") ;Check if I/O matches required state
"RTN","IBCEF1",158,0)
 Q Z
"RTN","IBCEF1",159,0)
 ;
"RTN","IBCEF1",160,0)
SET1(IBIFN,A,IBZ,IBXDATA,IBXNOREQ) ; Utility to set variables for output
"RTN","IBCEF1",161,0)
 ; formatter for professional EDI 
"RTN","IBCEF1",162,0)
 ; Returns values of A, IBXDATA, IBZ, IBXNOREQ
"RTN","IBCEF1",163,0)
 N Z,CT
"RTN","IBCEF1",164,0)
 S A="^TMP($J,""IBLCT"")"
"RTN","IBCEF1",165,0)
 S (Z,CT)=0
"RTN","IBCEF1",166,0)
 F  S Z=$O(IBXDATA(Z)) Q:'Z  D  ; Don't transmit 0-charges
"RTN","IBCEF1",167,0)
 . I $P(IBXDATA(Z),U,9),$P(IBXDATA(Z),U,8) S CT=CT+1 M IBZ(CT)=IBXDATA(Z)
"RTN","IBCEF1",168,0)
 K IBXDATA
"RTN","IBCEF1",169,0)
 S IBXNOREQ='$$REQ(2,"O",IBIFN)
"RTN","IBCEF1",170,0)
 Q
"RTN","IBCEF1",171,0)
 ;
"RTN","IBCEF1",172,0)
CIADDR(IBXDATA,IBXSAVE,LINE,FORM) ; Format current ins co address line LINE for FORM
"RTN","IBCEF1",173,0)
 ; FORM = 1 for CMS-1500, 2 for UB-04
"RTN","IBCEF1",174,0)
 ; Called from output formatter - both IBXDATA, IBXSAVE parameters are
"RTN","IBCEF1",175,0)
 ;  passed by reference
"RTN","IBCEF1",176,0)
 ;
"RTN","IBCEF1",177,0)
 K IBXDATA
"RTN","IBCEF1",178,0)
 I $G(FORM)'=1 D
"RTN","IBCEF1",179,0)
 . ;
"RTN","IBCEF1",180,0)
 . ; esg - 11/17/06 - IB*2*349 - UB-04 FL-38 contains the payer name
"RTN","IBCEF1",181,0)
 . ;       and address on 4 lines within this 5 line box.  All 5 lines
"RTN","IBCEF1",182,0)
 . ;       are formatted here into the IBXDATA array.  This is the
"RTN","IBCEF1",183,0)
 . ;       address that shows through the envelope window.
"RTN","IBCEF1",184,0)
 . ;
"RTN","IBCEF1",185,0)
 . N Z,LM,Q,ADDR,X
"RTN","IBCEF1",186,0)
 . S LM=$P($G(^IBE(350.9,1,1)),U,31)   ; UB address column parameter
"RTN","IBCEF1",187,0)
 . S Z=""
"RTN","IBCEF1",188,0)
 . I LM S $P(Z," ",LM)=""              ; beginning spaces indent
"RTN","IBCEF1",189,0)
 . S ADDR=$G(IBXSAVE("CADR"))          ; address data string
"RTN","IBCEF1",190,0)
 . S IBXDATA(1)="",Q=1                 ; line 1 is blank
"RTN","IBCEF1",191,0)
 . S Q=Q+1
"RTN","IBCEF1",192,0)
 . S IBXDATA(Q)=Z_$G(IBXSAVE("CADR_NAME"))     ; line 2 payer name
"RTN","IBCEF1",193,0)
 . S X=$P(ADDR,U,1)
"RTN","IBCEF1",194,0)
 . I X'="" S Q=Q+1,IBXDATA(Q)=Z_X              ; address line 1
"RTN","IBCEF1",195,0)
 . S X=$P(ADDR,U,2)
"RTN","IBCEF1",196,0)
 . I X'="" S Q=Q+1,IBXDATA(Q)=Z_X D            ; address line 2
"RTN","IBCEF1",197,0)
 .. S X=$P(ADDR,U,3)
"RTN","IBCEF1",198,0)
 .. I X'="" S IBXDATA(Q)=IBXDATA(Q)_" "_X      ; address line 3
"RTN","IBCEF1",199,0)
 .. Q
"RTN","IBCEF1",200,0)
 . S Q=Q+1                                     ; city,st,zip on last line
"RTN","IBCEF1",201,0)
 . S IBXDATA(Q)=Z_$P(ADDR,U,4)_", "_$$STATE^IBCEFG1($P(ADDR,U,5))_" "_$P(ADDR,U,6)
"RTN","IBCEF1",202,0)
 . KILL IBXSAVE("CADR_NAME"),IBXSAVE("CADR")   ; cleanup
"RTN","IBCEF1",203,0)
 . Q
"RTN","IBCEF1",204,0)
 ;
"RTN","IBCEF1",205,0)
 I $G(FORM)=1 D           ; CMS-1500
"RTN","IBCEF1",206,0)
 . N CT,X,Z
"RTN","IBCEF1",207,0)
 . S:'$D(IBXSAVE("INDENT")) Z="",$P(Z," ",+$P($G(^IBE(350.9,1,1)),U,27)+1)="",IBXSAVE("INDENT")=Z
"RTN","IBCEF1",208,0)
 . S CT=0
"RTN","IBCEF1",209,0)
 . S X=$P(IBXSAVE("CADR"),U) S:X'="" CT=CT+1,IBXDATA(CT)=IBXSAVE("INDENT")_X
"RTN","IBCEF1",210,0)
 . S X=$S($P(IBXSAVE("CADR"),U,2)'="":$P(IBXSAVE("CADR"),U,2),1:"")_$S($P(IBXSAVE("CADR"),U,2)'="":" ",1:"")_$P(IBXSAVE("CADR"),U,3) S:X'="" CT=CT+1,IBXDATA(CT)=IBXSAVE("INDENT")_X
"RTN","IBCEF1",211,0)
 . S CT=CT+1,IBXDATA(CT)=IBXSAVE("INDENT")_$P(IBXSAVE("CADR"),U,4)_", "_$$STATE^IBCEFG1($P(IBXSAVE("CADR"),U,5))_" "_$P(IBXSAVE("CADR"),U,6)
"RTN","IBCEF1",212,0)
 . Q
"RTN","IBCEF1",213,0)
 ;
"RTN","IBCEF1",214,0)
 Q
"RTN","IBCEF1",215,0)
 ;
"RTN","IBCEF11")
0^10^B48127699^B40186930
"RTN","IBCEF11",1,0)
IBCEF11 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS - CONT ;30-JAN-96
"RTN","IBCEF11",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,155,309,335,348,349**;21-MAR-94;Build 46
"RTN","IBCEF11",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF11",4,0)
 ;
"RTN","IBCEF11",5,0)
BOX24D(A,IB) ; Returns the lines for boxes 19-24 of the CMS-1500 display
"RTN","IBCEF11",6,0)
 ; IB = flag is 1 if only box 24 is needed
"RTN","IBCEF11",7,0)
 Q $S('$G(IB):"36",1:"44")_"^55"
"RTN","IBCEF11",8,0)
 ;
"RTN","IBCEF11",9,0)
RCBOX() ; Returns the lines for revenue code boxes of the UB-04 display
"RTN","IBCEF11",10,0)
 Q "19^41"
"RTN","IBCEF11",11,0)
 ;
"RTN","IBCEF11",12,0)
OUTPT(IBIFN,IBPRINT) ; Returns an array of service line data from
"RTN","IBCEF11",13,0)
 ;                 CMS-1500 box 24.  Output is in IBXDATA(n)
"RTN","IBCEF11",14,0)
 ; IBPRINT = print flag  1: return print fields
"RTN","IBCEF11",15,0)
 ;                       0: return EDI fields
"RTN","IBCEF11",16,0)
 ; Uses diagnosis array ^TMP("IBXSAVE",$J,"DX",IBIFN,DIAG CODE)=SEQ #
"RTN","IBCEF11",17,0)
 ;   if it already exists. If not, it builds it from N-DIAGNOSES element
"RTN","IBCEF11",18,0)
 ;
"RTN","IBCEF11",19,0)
 ; For EDI call: Returns IBXDATA(n)=
"RTN","IBCEF11",20,0)
 ;   begin date(YYYYMMDD)^end date(YYYYMMDD)^pos^tos^
"RTN","IBCEF11",21,0)
 ;   proc code/revenue code - if no procedure (not the pointers)^
"RTN","IBCEF11",22,0)
 ;   type of code^dx pointer(s)^unit charge^units^modifiers separated by;
"RTN","IBCEF11",23,0)
 ;   ^purchased charge amount ^anesthesia minutes^emergency indicator^
"RTN","IBCEF11",24,0)
 ;   lab-type service flag.
"RTN","IBCEF11",25,0)
 ;
"RTN","IBCEF11",26,0)
 ;   Also Returns IBXDATA(IBI,"COB",COB,m) with COB data for each line
"RTN","IBCEF11",27,0)
 ;      item found in an accepted EOB for the bill and = the reference
"RTN","IBCEF11",28,0)
 ;      line in the first '^' piece followed by the '0' node data of file
"RTN","IBCEF11",29,0)
 ;      361.115 (LINE LEVEL ADJUSTMENTS)
"RTN","IBCEF11",30,0)
 ;       COB = COB sequence # of adjustment's ins co, m = seq #
"RTN","IBCEF11",31,0)
 ;         -- AND --
"RTN","IBCEF11",32,0)
 ;    IBXDATA(IBI,"COB",COB,m,z,p)=
"RTN","IBCEF11",33,0)
 ;           the data on the '0' node for each subordinate entry of file
"RTN","IBCEF11",34,0)
 ;           361.11511 (REASONS) (Only first 3 pieces for 837 output)
"RTN","IBCEF11",35,0)
 ;       z = group code, sometimes preceeded by a space   p = seq #
"RTN","IBCEF11",36,0)
 ;
"RTN","IBCEF11",37,0)
 ; For Print call: Returns begin date(DDMMYYYY)^end date(DDMMYYYY) or
"RTN","IBCEF11",38,0)
 ;   null if equal to begin date^pos^tos^bedsection name(if no procedure)
"RTN","IBCEF11",39,0)
 ;   or procedure code(not the pointer)^ ... refer to EDI call results
"RTN","IBCEF11",40,0)
 ;   Also, IBXDATA(n,"TEXT")=the text to print on first line of box 24,
"RTN","IBCEF11",41,0)
 ;   If no procedure code, returns IBXDATA(n,"A")=rev code abbrev
"RTN","IBCEF11",42,0)
 ;
"RTN","IBCEF11",43,0)
 ;  For both calls, returns IBXDATA(n,item type,item ptr)=""
"RTN","IBCEF11",44,0)
 ;      -- AND --
"RTN","IBCEF11",45,0)
 ;   IBXDATA(n,"RX")=RX#^drug name^NDC^refill #^(re)fill date^qty^days
"RTN","IBCEF11",46,0)
 ;                   ^chrge^ien of file 362.4^NDC format
"RTN","IBCEF11",47,0)
 ;           If line references a prescription
"RTN","IBCEF11",48,0)
 ;      -- AND --
"RTN","IBCEF11",49,0)
 ;   If no revenue code for a prescription, returns IBXDATA(n,"ARX")=""
"RTN","IBCEF11",50,0)
 ;      -- AND --
"RTN","IBCEF11",51,0)
 ;   IBXDATA(n,"AUX")='AUX' node of the procedure entry
"RTN","IBCEF11",52,0)
 ;
"RTN","IBCEF11",53,0)
 N IB,IBI,IBJ,IBFLD,IBDXI,IBXIEN,Z,IBXTRA,IBRX,IBRX0,IBRX1,Z0,Z1
"RTN","IBCEF11",54,0)
 ;
"RTN","IBCEF11",55,0)
 K ^TMP($J,"IBITEM")
"RTN","IBCEF11",56,0)
 S ^TMP($J,"IBITEM")=""
"RTN","IBCEF11",57,0)
 ; Build diagnosis array if not already built
"RTN","IBCEF11",58,0)
 I $O(^TMP("IBXSAVE",$J,"DX",IBIFN,""))="",$O(^IBA(362.3,"AIFN"_IBIFN,"")) D
"RTN","IBCEF11",59,0)
 .N Z,IBXDATA D F^IBCEF("N-DIAGNOSES",,,IBIFN)
"RTN","IBCEF11",60,0)
 .S Z="" F  S Z=$O(IBXDATA(Z)) K:$O(IBXDATA(0))=""&(Z="") IBXDATA Q:Z=""  S:$P(IBXDATA(Z),U,2) ^TMP("IBXSAVE",$J,"DX",IBIFN,$P(IBXDATA(Z),U,2))=Z
"RTN","IBCEF11",61,0)
 ;
"RTN","IBCEF11",62,0)
 S IB(0)=$G(^DGCR(399,IBIFN,0)),IB("U")=$G(^("U")),IB("U1")=$G(^("U1"))
"RTN","IBCEF11",63,0)
 S IBI="" F  S IBI=$O(^TMP("IBXSAVE",$J,"DX",IBIFN,IBI)) Q:IBI=""  S IBDXI(IBI)=^(IBI)
"RTN","IBCEF11",64,0)
 I '$G(IBPRINT) D RVCE^IBCF23(IBIFN,IBIFN)
"RTN","IBCEF11",65,0)
 I $G(IBPRINT) D RVCE^IBCF23(,IBIFN)
"RTN","IBCEF11",66,0)
 ; Returns IBFLD(24) = begin date^end date^pos^tos^
"RTN","IBCEF11",67,0)
 ;     proc/bedsection/revenue code^dx pointer^unit charge^
"RTN","IBCEF11",68,0)
 ;     units^modifiers^ purchased charge amount ^anesthesia minutes^
"RTN","IBCEF11",69,0)
 ;     emergency indicator ^ AND
"RTN","IBCEF11",70,0)
 ;         IBFLD(24,n,type,item)=""
"RTN","IBCEF11",71,0)
 ;         IBFLD(24,n_"A") = revenue code abbreviation if no procedure
"RTN","IBCEF11",72,0)
 ;         IBFLD(24,n,"AUX") = 'AUX' node of line item 
"RTN","IBCEF11",73,0)
 ;         IBFLD(24,n,"RX") = soft pointer to file 362.4 from 'item' fld
"RTN","IBCEF11",74,0)
 ;                            (can be null)
"RTN","IBCEF11",75,0)
 ;
"RTN","IBCEF11",76,0)
 D SET^IBCSC5A(IBIFN,.IBRX) ;prescriptions
"RTN","IBCEF11",77,0)
 ; IBRX1(ien 362.4)=RX#^drug ien^NDC^refil #^(re)fil date^qty^days^chrge
"RTN","IBCEF11",78,0)
 I IBRX S IBRX="" F  S IBRX=$O(IBRX(IBRX)) Q:IBRX=""  S IBRX0=0 F  S IBRX0=$O(IBRX(IBRX,IBRX0)) Q:'IBRX0  D
"RTN","IBCEF11",79,0)
 . N IBRXH
"RTN","IBCEF11",80,0)
 . S IBRXH=IBRX(IBRX,IBRX0)
"RTN","IBCEF11",81,0)
 . S IBRX1(+IBRXH)=IBRX_U_$P(IBRXH,U,2)_U_$P(IBRXH,U,5)_U_$P(IBRXH,U,7)_U_IBRX0_U_$P(IBRXH,U,4)_U_$P(IBRXH,U,3)_U_$P(IBRXH,U,6)_U_+IBRXH_U_$P(IBRXH,U,8)
"RTN","IBCEF11",82,0)
 K IBRX
"RTN","IBCEF11",83,0)
 ;
"RTN","IBCEF11",84,0)
 S IBI=0
"RTN","IBCEF11",85,0)
 F  S IBI=$O(IBFLD(24,IBI)) Q:IBI'=+IBI  D
"RTN","IBCEF11",86,0)
 . S IBRX1=0
"RTN","IBCEF11",87,0)
 . I '$G(IBPRINT) Q:$P(IBFLD(24,IBI),U,7)*$P(IBFLD(24,IBI),U,8)'>0  ; For EDI, ignore 0-charge line items
"RTN","IBCEF11",88,0)
 . S IBXDATA(IBI)=$P(IBFLD(24,IBI),U)_U_$P(IBFLD(24,IBI),U,$S($P(IBFLD(24,IBI),U,2)=""&'$G(IBPRINT):1,1:2))
"RTN","IBCEF11",89,0)
 . S $P(IBXDATA(IBI),U,3,5)=$P(IBFLD(24,IBI),U,3,5)
"RTN","IBCEF11",90,0)
 . S $P(IBXDATA(IBI),U,6)=$S($D(IBFLD(24,IBI_"X")):"CJ",1:"HC")
"RTN","IBCEF11",91,0)
 . S $P(IBXDATA(IBI),U,7,13)=$P(IBFLD(24,IBI),U,6,12)
"RTN","IBCEF11",92,0)
 . S $P(IBXDATA(IBI),U,14)=+$$ISLAB(IBXDATA(IBI))
"RTN","IBCEF11",93,0)
 . ;
"RTN","IBCEF11",94,0)
 . I $D(IBFLD(24,IBI,"RX")) D  ;Rx
"RTN","IBCEF11",95,0)
 .. S IBRX1=1
"RTN","IBCEF11",96,0)
 .. I $P($G(IBFLD(24,IBI,"AUX")),U,8)'="" S $P(IBFLD(24,IBI,"AUX"),U,8)="",$P(IBFLD(24,IBI,"AUX"),U,9)=""  ;No free text allowed for rx's
"RTN","IBCEF11",97,0)
 .. I $D(IBRX1(+IBFLD(24,IBI,"RX"))) D  Q  ;Soft link exists
"RTN","IBCEF11",98,0)
 ...D ZERO^IBRXUTL(+$P(IBRX1(+IBFLD(24,IBI,"RX")),U,2))
"RTN","IBCEF11",99,0)
 ... S IBXDATA(IBI,"RX")=IBRX1(+IBFLD(24,IBI,"RX")),$P(IBXDATA(IBI,"RX"),U,2)=$E($G(^TMP($J,"IBDRUG",+$P(IBRX1(+IBFLD(24,IBI,"RX")),U,2),.01)),1,30)
"RTN","IBCEF11",100,0)
 ... K IBRX1(+IBFLD(24,IBI,"RX"))
"RTN","IBCEF11",101,0)
 ... ; No soft link - must find the first Rx with the same charge
"RTN","IBCEF11",102,0)
 .. S IBRX="" F  S IBRX=$O(IBRX1(IBRX)) Q:'IBRX  I +$P(IBRX1(IBRX),U,8)=+$P(IBXDATA(IBI),U,8) D  Q
"RTN","IBCEF11",103,0)
 ... D ZERO^IBRXUTL(+$P(IBRX1(IBRX),U,2))
"RTN","IBCEF11",104,0)
 ... S IBXDATA(IBI,"RX")=IBRX1(IBRX),$P(IBXDATA(IBI,"RX"),U,2)=$E($G(^TMP($J,"IBDRUG",+$P(IBRX1(IBRX),U,2),.01)),1,30) K IBRX1(IBRX) Q
"RTN","IBCEF11",105,0)
 ... Q
"RTN","IBCEF11",106,0)
 .. Q
"RTN","IBCEF11",107,0)
 . ;
"RTN","IBCEF11",108,0)
 . I $G(IBFLD(24,IBI,"AUX"))'="" D
"RTN","IBCEF11",109,0)
 .. I $G(IBPRINT),$P(IBFLD(24,IBI,"AUX"),U,8)'="" S IBXDATA(IBI,"TEXT")=$P(IBFLD(24,IBI,"AUX"),U,8),$P(IBFLD(24,IBI,"AUX"),U,8)=""
"RTN","IBCEF11",110,0)
 .. S IBXDATA(IBI,"AUX")=IBFLD(24,IBI,"AUX")
"RTN","IBCEF11",111,0)
 .. Q
"RTN","IBCEF11",112,0)
 . ;
"RTN","IBCEF11",113,0)
 . I $G(IBPRINT) D
"RTN","IBCEF11",114,0)
 .. I '$P(IBXDATA(IBI),U,8),'$G(IBXDATA(IBI,"RX")) D  Q
"RTN","IBCEF11",115,0)
 ... I $G(IBNOSHOW) Q    ; don't show errors/warnings
"RTN","IBCEF11",116,0)
 ... S IBXDATA(IBI,"TEXT")="Warning:** REV CODE UNITS < #PROCEDURES, THEY MUST BE ="
"RTN","IBCEF11",117,0)
 ... I $D(IBXDATA(IBI,"AUX")) S $P(IBXDATA(IBI,"AUX"),U,9)=""
"RTN","IBCEF11",118,0)
 ... Q
"RTN","IBCEF11",119,0)
 .. ;
"RTN","IBCEF11",120,0)
 .. I $G(IBFLD(24,IBI_"A"))'="" D  Q
"RTN","IBCEF11",121,0)
 ... S IBXDATA(IBI,"A")=IBFLD(24,IBI_"A")
"RTN","IBCEF11",122,0)
 ... I $G(IBNOSHOW) Q    ; don't show errors/warnings
"RTN","IBCEF11",123,0)
 ... S IBXDATA(IBI,"TEXT")="Warning:** REV CODE UNITS > #PROCEDURES, THEY MUST BE=: "_IBFLD(24,IBI_"A")
"RTN","IBCEF11",124,0)
 ... I $D(IBXDATA(IBI,"AUX")) S $P(IBXDATA(IBI,"AUX"),U,9)=""
"RTN","IBCEF11",125,0)
 ... Q
"RTN","IBCEF11",126,0)
 .. ;
"RTN","IBCEF11",127,0)
 .. S IBRX=$G(IBXDATA(IBI,"RX"))
"RTN","IBCEF11",128,0)
 .. I IBRX'="" D  ;Format Rx detail
"RTN","IBCEF11",129,0)
 ... N Z
"RTN","IBCEF11",130,0)
 ... S Z=$P(IBRX,U)
"RTN","IBCEF11",131,0)
 ... S Z=$S(Z'="":"Rx#"_Z_" ",1:"RX: ")
"RTN","IBCEF11",132,0)
 ... S IBXDATA(IBI,"TEXT")=Z_$S($P(IBRX,U,3)'="":"NDC: "_$P(IBRX,U,3),1:"NOC: "_$P(IBRX,U,2))_" Qty: "_$P(IBRX,U,6)_" Days: "_$P(IBRX,U,7)
"RTN","IBCEF11",133,0)
 ... S $P(IBXDATA(IBI,"AUX"),U,9)="N4"   ; service line comment qualifier for RX's
"RTN","IBCEF11",134,0)
 ... Q
"RTN","IBCEF11",135,0)
 .. Q
"RTN","IBCEF11",136,0)
 . ;
"RTN","IBCEF11",137,0)
 . I '$G(IBPRINT) D COBLINE^IBCEU6(IBIFN,IBI,.IBXDATA,,.IBXTRA)
"RTN","IBCEF11",138,0)
 . Q
"RTN","IBCEF11",139,0)
 ;
"RTN","IBCEF11",140,0)
 I $G(IBPRINT) D
"RTN","IBCEF11",141,0)
 . S IBRX=0 F  S IBRX=$O(IBRX1(IBRX)) Q:'IBRX  D
"RTN","IBCEF11",142,0)
 .. S IBI=+$O(IBXDATA(""),-1)+1
"RTN","IBCEF11",143,0)
 .. S IBXDATA(IBI)=$$DATE($P(IBRX1(IBRX),U,5))
"RTN","IBCEF11",144,0)
 .. S IBXDATA(IBI,"TEXT")="**** ERROR - NO PROC LINK TO REV CODE FOR DRUG: RX#: "_$P(IBRX1(IBRX),U)_"  NDC #: "_$P(IBRX1(IBRX),U,3)
"RTN","IBCEF11",145,0)
 .. I $D(IBXDATA(IBI,"AUX")) S $P(IBXDATA(IBI,"AUX"),U,9)=""
"RTN","IBCEF11",146,0)
 .. S IBXDATA(IBI,"ARX")=""
"RTN","IBCEF11",147,0)
 .. D ZERO^IBRXUTL(+$P(IBRX1(IBRX),U,2))
"RTN","IBCEF11",148,0)
 .. S IBXDATA(IBI,"RX")=IBRX1(IBRX),$P(IBXDATA(IBI,"RX"),U,2)=$E($G(^TMP($J,"IBDRUG",+$P(IBRX1(IBRX),U,2),.01)),1,30) K IBRX1(IBRX)
"RTN","IBCEF11",149,0)
 .. Q
"RTN","IBCEF11",150,0)
 . Q
"RTN","IBCEF11",151,0)
 ;
"RTN","IBCEF11",152,0)
 I '$G(IBPRINT),$D(IBXTRA) D COMBO^IBCEU2(.IBXDATA,.IBXTRA,0) ;Handle bundled/unbundled lines
"RTN","IBCEF11",153,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBCEF11",154,0)
 Q
"RTN","IBCEF11",155,0)
 ;
"RTN","IBCEF11",156,0)
ISLAB(LDATA) ; Returns 0/1 if line item data indicates the item is a lab (1)
"RTN","IBCEF11",157,0)
 ; 'LAB' is defined here as type of service = 5
"RTN","IBCEF11",158,0)
 Q $E($P(LDATA,U,4))="5"
"RTN","IBCEF11",159,0)
 ;
"RTN","IBCEF11",160,0)
FMT(DATA,DLEN,FLEN) ; Returns a string in DATA with a max length of DLEN
"RTN","IBCEF11",161,0)
 ;  and a field length of FLEN
"RTN","IBCEF11",162,0)
 Q $E($E(DATA,1,DLEN)_$J("",FLEN),1,FLEN)
"RTN","IBCEF11",163,0)
 ;
"RTN","IBCEF11",164,0)
DATE(X,DEL) ;  Returns FM date in X as MMxDDxYYYY  where x=DEL
"RTN","IBCEF11",165,0)
 S DEL=$G(DEL)
"RTN","IBCEF11",166,0)
 S X=$$DATE^IBCF2(X,1,1)
"RTN","IBCEF11",167,0)
 I X'="" S X=$E(X,1,2)_DEL_$E(X,3,4)_DEL_$E(X,5,8)
"RTN","IBCEF11",168,0)
 Q X
"RTN","IBCEF11",169,0)
 ;
"RTN","IBCEF11",170,0)
BATCH() ; Sets up record for and stores/returns the next batch number
"RTN","IBCEF11",171,0)
 N NUM,FAC,DO,DD,DLAYGO,DIC,X,Y
"RTN","IBCEF11",172,0)
 ;Keep latest batch number for view/print edi bill extract data option
"RTN","IBCEF11",173,0)
 I $D(IBVNUM) S NUM=IBVNUM G BATCHQ
"RTN","IBCEF11",174,0)
 ;Check for batch resubmit - if yes, use same number as original batch
"RTN","IBCEF11",175,0)
 I $P($G(^TMP("IBRESUBMIT",$J)),U,3)=1 S NUM=$P(^($J),U) G BATCHQ
"RTN","IBCEF11",176,0)
 L +^IBA(364.1,0):5 I '$T Q 0
"RTN","IBCEF11",177,0)
 S FAC=+$P($$SITE^VASITE(),U,3),NUM=$O(^IBA(364.1,"B",""),-1)
"RTN","IBCEF11",178,0)
 I $D(^IBA(364.1,+NUM,0)),$P(^(0),U,2)="" F  D  Q:'NUM!($P($G(^IBA(364.1,+NUM,0)),U,2)'="")
"RTN","IBCEF11",179,0)
 . I $D(^IBA(364.1,NUM,0)) S DA=NUM,DIK="^IBA(364.1," D ^DIK
"RTN","IBCEF11",180,0)
 . S NUM=$O(^IBA(364.1,"B",""),-1)
"RTN","IBCEF11",181,0)
 F  S NUM=$S($P(NUM,FAC,2)'="":NUM+1,1:FAC_"0000001") Q:'$D(^IBA(364.1,"B",NUM))
"RTN","IBCEF11",182,0)
 K DO,DD S DIC="^IBA(364.1,",DLAYGO=364.1,DIC(0)="L",X=NUM D FILE^DICN K DD,DO I Y'>0 S NUM=0
"RTN","IBCEF11",183,0)
 L -^IBA(364.1,0)
"RTN","IBCEF11",184,0)
BATCHQ Q NUM
"RTN","IBCEF11",185,0)
 ;
"RTN","IBCEF2")
0^42^B53903581^B53700884
"RTN","IBCEF2",1,0)
IBCEF2 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS ;8/6/03 10:54am
"RTN","IBCEF2",2,0)
 ;;2.0;INTEGRATED BILLING;**52,85,51,137,232,155,296,349**;21-MAR-94;Build 46
"RTN","IBCEF2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF2",4,0)
 ;
"RTN","IBCEF2",5,0)
HOS(IBIFN) ; Extract rev codes for inst. episode into IBXDATA
"RTN","IBCEF2",6,0)
 ; Moved for space
"RTN","IBCEF2",7,0)
 D HOS^IBCEF22(IBIFN)
"RTN","IBCEF2",8,0)
 Q
"RTN","IBCEF2",9,0)
 ;
"RTN","IBCEF2",10,0)
OTHINS(IBIFN) ;Determine 'other insurance' node (I1,I2)
"RTN","IBCEF2",11,0)
 ; If primary bill, other ins is secondary
"RTN","IBCEF2",12,0)
 ; If sec or tert bill, other ins is primary
"RTN","IBCEF2",13,0)
 ;IBIFN = bill ien
"RTN","IBCEF2",14,0)
 N Z
"RTN","IBCEF2",15,0)
 S Z=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF2",16,0)
 Q "I"_$S(Z=1:2,1:1)
"RTN","IBCEF2",17,0)
 ;
"RTN","IBCEF2",18,0)
OTHINS1(IBIFN) ; Returns the COB #'s of all 'other insurance' as a string
"RTN","IBCEF2",19,0)
 ;IBIFN = bill ien
"RTN","IBCEF2",20,0)
 N IBC,Z
"RTN","IBCEF2",21,0)
 S Z=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF2",22,0)
 I Z=1 S IBC=$S($D(^DGCR(399,IBIFN,"I2")):$S($D(^DGCR(399,IBIFN,"I3")):23,1:2),1:"") ;Primary=>2 or 23
"RTN","IBCEF2",23,0)
 I Z=2 S IBC="1"_$S($D(^DGCR(399,IBIFN,"I3")):3,1:"") ;Secondary=>1 or 13
"RTN","IBCEF2",24,0)
 I Z=3 S IBC="12" ;Tertiary =>12
"RTN","IBCEF2",25,0)
OTHQ Q IBC
"RTN","IBCEF2",26,0)
 ;
"RTN","IBCEF2",27,0)
RECVR(IBIFN) ; Returns the V.A. internal routing id of the current ins
"RTN","IBCEF2",28,0)
 ; co for 837
"RTN","IBCEF2",29,0)
 ;IBIFN = bill ien
"RTN","IBCEF2",30,0)
 N MCR,NUM,IBPH
"RTN","IBCEF2",31,0)
 S IBPH=$P("P^H",U,$$FT^IBCEF(IBIFN)-1)
"RTN","IBCEF2",32,0)
 S NUM="ENVOY"_IBPH
"RTN","IBCEF2",33,0)
 ; If rate type is CHAMPVA, send 'CHAMVA'
"RTN","IBCEF2",34,0)
 I $P($G(^DGCR(399.3,+$P($G(^DGCR(399,IBIFN,0)),U,7),0)),U)="CHAMPVA" S NUM="CHAMV"_IBPH
"RTN","IBCEF2",35,0)
 I NUM["ENVOY",$$MCRWNR^IBEFUNC(+$$CURR(IBIFN)) D
"RTN","IBCEF2",36,0)
 . S MCR=$P("B^A",U,$$FT^IBCEF(IBIFN)-1)    ; PART A/B for MEDICARE
"RTN","IBCEF2",37,0)
 . S NUM="PART"_MCR
"RTN","IBCEF2",38,0)
 Q NUM
"RTN","IBCEF2",39,0)
 ;
"RTN","IBCEF2",40,0)
ALLPAYID(IBIFN,IBXDATA,SEQ) ; Returns clearinghouse id for all (SEQ="")
"RTN","IBCEF2",41,0)
 ;  or a specific (SEQ=1,2,3) ins co's for 837 in IBXDATA(n) for bill ien
"RTN","IBCEF2",42,0)
 ;  IBIFN
"RTN","IBCEF2",43,0)
 ; EJK *296* Add IBMRA - MRA Claim type. 
"RTN","IBCEF2",44,0)
 ; EJK *296* Add IBEBI - Electronic Billing ID
"RTN","IBCEF2",45,0)
 N Z,Z0,Z1,A,IBM,IBINST,IBMCR,IBX,IBMRA,IBEBI
"RTN","IBCEF2",46,0)
 S IBXDATA="",IBM=$G(^DGCR(399,IBIFN,"M"))
"RTN","IBCEF2",47,0)
 F Z=1:1:3 I $S('$G(SEQ):1,1:Z=SEQ) S Z0=$P(IBM,U,Z) I Z0 D  S:A'="" IBXDATA(Z)=A
"RTN","IBCEF2",48,0)
 . S A=""
"RTN","IBCEF2",49,0)
 . S IBINST=($$FT^IBCEF(IBIFN)=3) ;Is bill UB-04?
"RTN","IBCEF2",50,0)
 . ; EJK *296* Get IBEBI based on Prof. or Inst. claim
"RTN","IBCEF2",51,0)
 . I IBINST S IBEBI=$P($G(^DIC(36,Z0,3)),U,4)
"RTN","IBCEF2",52,0)
 . I 'IBINST S IBEBI=$P($G(^DIC(36,Z0,3)),U,2)
"RTN","IBCEF2",53,0)
 . S IBEBI=$$UP^XLFSTR(IBEBI)
"RTN","IBCEF2",54,0)
 . ; EJK *296* If this is a Medicare claim, it may be printed or transmitted. 
"RTN","IBCEF2",55,0)
 . S IBMRA=$$MRASEC^IBCEF4(IBIFN)   ;Is claim 2ndary to an MRA? 
"RTN","IBCEF2",56,0)
 . S IBMCR=$$MCRONBIL^IBEFUNC(IBIFN),Z1=$G(^DGCR(399,IBIFN,"TX"))
"RTN","IBCEF2",57,0)
 . Q:$P(Z1,U,8)=1!$S('$P(Z1,U,9):0,1:$$MRASEC^IBCEF4(IBIFN))  ;Force local prnt
"RTN","IBCEF2",58,0)
 . S A=$S($P(Z1,U,8)'=2:$P($G(^DIC(36,Z0,3)),U,$S(IBINST:4,1:2)),1:"")
"RTN","IBCEF2",59,0)
 . S A=$$UP^XLFSTR(A)
"RTN","IBCEF2",60,0)
 . ;
"RTN","IBCEF2",61,0)
 . ; RPRNT = CMS-1500 Rx bills
"RTN","IBCEF2",62,0)
 . ; IPRNT = Inst MRA secondary claims
"RTN","IBCEF2",63,0)
 . ; PPRNT = Prof MRA secondary claims
"RTN","IBCEF2",64,0)
 . ; HPRNT = inst printed bills (non-MRA, force print at clearinghouse)
"RTN","IBCEF2",65,0)
 . ; SPRNT = prof printed bills (non-MRA, force print at clearinghouse)
"RTN","IBCEF2",66,0)
 . ;
"RTN","IBCEF2",67,0)
 . ; Default to appropriate 'xPRNT' if Rx bill or COB bill or forced to
"RTN","IBCEF2",68,0)
 . ;    print - claims must print at clearinghouse
"RTN","IBCEF2",69,0)
 . ;
"RTN","IBCEF2",70,0)
 . ; Rx bills on CMS-1500
"RTN","IBCEF2",71,0)
 . I 'IBINST,$$ISRX^IBCEF1(IBIFN) S A="RPRNT" Q
"RTN","IBCEF2",72,0)
 . ;
"RTN","IBCEF2",73,0)
 . ; Claim forced to print at clearinghouse
"RTN","IBCEF2",74,0)
 . I $P(Z1,U,8)=2 S A=$S(IBINST:"H",1:"S")_"PRNT" Q
"RTN","IBCEF2",75,0)
 . ;
"RTN","IBCEF2",76,0)
 . ; EJK *296* Send IBEBI for MRA secondary claims if it exists
"RTN","IBCEF2",77,0)
 . I Z>1,IBMRA,IBEBI'="" S A=IBEBI Q
"RTN","IBCEF2",78,0)
 . ;
"RTN","IBCEF2",79,0)
 . ; MRA secondary claim
"RTN","IBCEF2",80,0)
 . I Z>1,IBMCR=1,$P(Z1,U,5)="C" S A=$S(IBINST:"I",1:"P")_"PRNT" Q
"RTN","IBCEF2",81,0)
 . ;
"RTN","IBCEF2",82,0)
 . ; Medicare is current payer (MRA request claim)
"RTN","IBCEF2",83,0)
 . I $$WNRBILL^IBEFUNC(IBIFN,Z) S A=$S(IBINST:"12M61",1:"SMTX1") Q
"RTN","IBCEF2",84,0)
 . ;
"RTN","IBCEF2",85,0)
 . ; IB*296 - Do not modify the payer ID for CHAMPVA (HAC)
"RTN","IBCEF2",86,0)
 . I A=84146 Q
"RTN","IBCEF2",87,0)
 . I A=84147 Q
"RTN","IBCEF2",88,0)
 . ;
"RTN","IBCEF2",89,0)
 . ; If not a primary bill force to print
"RTN","IBCEF2",90,0)
 . I Z>1,Z=$$COBN^IBCEF(IBIFN) S A=$S(IBINST:"H",1:"S")_"PRNT" Q
"RTN","IBCEF2",91,0)
 . Q
"RTN","IBCEF2",92,0)
 ;
"RTN","IBCEF2",93,0)
 Q
"RTN","IBCEF2",94,0)
 ;
"RTN","IBCEF2",95,0)
PAYERID(IBIFN) ; Returns clearinghouse id for current ins co
"RTN","IBCEF2",96,0)
 ; IBIFN = bill ien
"RTN","IBCEF2",97,0)
 N NUM,IBSEQ
"RTN","IBCEF2",98,0)
 ; Determine the current ins co's # to identify at WEBMD
"RTN","IBCEF2",99,0)
 ; Envoy changed to WEBMD in patch 232
"RTN","IBCEF2",100,0)
 S IBSEQ=+$$COBN^IBCEF(IBIFN)
"RTN","IBCEF2",101,0)
 D ALLPAYID(IBIFN,.NUM,IBSEQ) S NUM=$G(NUM(IBSEQ))
"RTN","IBCEF2",102,0)
 Q $G(NUM)
"RTN","IBCEF2",103,0)
 ;
"RTN","IBCEF2",104,0)
CURR(IBIFN) ; Returns ien of the current insurance
"RTN","IBCEF2",105,0)
 ; company for bill ien IBIFN
"RTN","IBCEF2",106,0)
 Q $$FINDINS^IBCEF1(IBIFN)
"RTN","IBCEF2",107,0)
 ;
"RTN","IBCEF2",108,0)
ADMDT(IBIFN,NOOUTCK) ; Calculate admission/start of care date/time
"RTN","IBCEF2",109,0)
 D ADMDT^IBCEF21(IBIFN,$G(NOOUTCK))      ; Moved for space
"RTN","IBCEF2",110,0)
 Q
"RTN","IBCEF2",111,0)
 ;
"RTN","IBCEF2",112,0)
DISDT(IBIFN) ; Calculate discharge date
"RTN","IBCEF2",113,0)
 D DISDT^IBCEF21(IBIFN)                  ; Moved for space
"RTN","IBCEF2",114,0)
 Q
"RTN","IBCEF2",115,0)
 ;
"RTN","IBCEF2",116,0)
INDTS(IBIFN) ; Function returns the admit ^ discharge date/time of admission if patient is an inpatient on bill's event date
"RTN","IBCEF2",117,0)
 N Z,Z0,DFN,VAINDT,VAIN S Z0=""
"RTN","IBCEF2",118,0)
 S Z=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(Z,U,2),VAINDT=$P(Z,U,3)
"RTN","IBCEF2",119,0)
 I +DFN,+VAINDT D INP^VADPT I +VAIN(1) S Z0=+VAIN(7)_U_+$G(^DGPM(+$P($G(^DGPM(+VAIN(1),0)),U,17),0))
"RTN","IBCEF2",120,0)
 Q Z0
"RTN","IBCEF2",121,0)
 ;
"RTN","IBCEF2",122,0)
TXMT(IBIFN) ; Function moved - use new call in IBCEF4
"RTN","IBCEF2",123,0)
 Q $$TXMT^IBCEF4(IBIFN)
"RTN","IBCEF2",124,0)
 ;
"RTN","IBCEF2",125,0)
 ;
"RTN","IBCEF2",126,0)
ID(LN,VAL) ; Set EXTRACT GLOBAL for multi-valued record
"RTN","IBCEF2",127,0)
 ; ids for Austin
"RTN","IBCEF2",128,0)
 ; LN = the line # being extracted
"RTN","IBCEF2",129,0)
 ; VAL = the value of the element being extracted
"RTN","IBCEF2",130,0)
 ;
"RTN","IBCEF2",131,0)
 ; Assumes IBXPG exists
"RTN","IBCEF2",132,0)
 ;
"RTN","IBCEF2",133,0)
 Q:LN<2
"RTN","IBCEF2",134,0)
 D SETGBL^IBCEFG(IBXPG,LN,1,VAL,.IBXSIZE)
"RTN","IBCEF2",135,0)
 Q
"RTN","IBCEF2",136,0)
 ;
"RTN","IBCEF2",137,0)
ID1(LN,DX,CT) ;Special entrypoint for diagnoses to 'save' the fact
"RTN","IBCEF2",138,0)
 ;   a dx code is an e-code.
"RTN","IBCEF2",139,0)
 ; LN is last entry # output, returned as the entry # (IBXLINE) to assign to this entry
"RTN","IBCEF2",140,0)
 ; DX = the actual Dx code array(RECORD ID). Pass by reference, DX returned null if
"RTN","IBCEF2",141,0)
 ;      dx was not output
"RTN","IBCEF2",142,0)
 ; CT = the ct on the 'DC' entry.  pass by reference, returned null if
"RTN","IBCEF2",143,0)
 ;      the end of the valid dx codes has been reached
"RTN","IBCEF2",144,0)
 N IBINS,VAL
"RTN","IBCEF2",145,0)
 S IBINS=($$FT^IBCEF(IBXIEN)=3)
"RTN","IBCEF2",146,0)
 S VAL="DC"_CT                     ; **232**
"RTN","IBCEF2",147,0)
 S VAL=$E(VAL_" ",1,4)
"RTN","IBCEF2",148,0)
 I IBINS D
"RTN","IBCEF2",149,0)
 . I CT>8 S CT="" Q  ;Only 8 codes for institutional/UB  **232**
"RTN","IBCEF2",150,0)
 . ; Check for 'E-code'.  If there, don't extract the first one as a dx,
"RTN","IBCEF2",151,0)
 . ;     but as a special E-code
"RTN","IBCEF2",152,0)
 . I $G(IBXSAVE("DX-E"))="",$E($G(DX))="E" S IBXSAVE("DX-E")=DX,DX=""
"RTN","IBCEF2",153,0)
 I 'IBINS,CT>8 S ^TMP("IBXSAVE",$J,"DX",IBXIEN)=$G(^TMP("IBXSAVE",$J,"DX",IBXIEN))+1,^TMP("IBXSAVE",$J,"DX",IBXIEN,$P(DX(+^TMP("IBXSAVE",$J,"DX",IBXIEN)),U,2))=$G(^TMP("IBXSAVE",$J,"DX",IBXIEN)) S DX="" Q
"RTN","IBCEF2",154,0)
 I CT'="",DX'="" S LN=LN+1 D ID(LN,VAL) S ^TMP("IBXSAVE",$J,"DX",IBXIEN,$P(DX(LN),U,2))=LN,^TMP("IBXSAVE",$J,"DX",IBXIEN)=CT,CT=CT+1 Q
"RTN","IBCEF2",155,0)
 Q
"RTN","IBCEF2",156,0)
 ;
"RTN","IBCEF2",157,0)
M(CT) ; Calculate multi-valued field for 837 extract
"RTN","IBCEF2",158,0)
 ; CT = passed by reference/the record ID counter
"RTN","IBCEF2",159,0)
 S CT=CT+1
"RTN","IBCEF2",160,0)
 Q $E(CT#12+$S(CT#12:0,1:12)_" ",1,2)
"RTN","IBCEF2",161,0)
 ;
"RTN","IBCEF2",162,0)
SVITM(IBA,LINE) ; Saves the linked items from the bill data extract into
"RTN","IBCEF2",163,0)
 ; an array the formatter will use to link Rxs and prosthetics
"RTN","IBCEF2",164,0)
 ; to an SV1 or SV2 line item, if possible.  Kills off IBA array entries
"RTN","IBCEF2",165,0)
 ; after they are 'moved'
"RTN","IBCEF2",166,0)
 ; IBA = array that contains the data to be saved
"RTN","IBCEF2",167,0)
 ;   subscripts are (line #,item type,item pointer)=ct
"RTN","IBCEF2",168,0)
 N Z0,Z1
"RTN","IBCEF2",169,0)
 S Z0="" F  S Z0=$O(IBA("OUTPT",LINE,Z0)) Q:Z0=""  I Z0?1N.N  S Z1="" F  S Z1=$O(IBA("OUTPT",LINE,Z0,Z1)) Q:Z1=""  S ^TMP($J,"IBITEM",Z0,Z1,LINE)=IBA("OUTPT",LINE,Z0,Z1) K IBA("OUTPT",LINE,Z0,Z1)
"RTN","IBCEF2",170,0)
 Q
"RTN","IBCEF2",171,0)
 ;
"RTN","IBCEF2",172,0)
LINK(IBTYP,IBDATA) ; Link the item with a service line, if possible
"RTN","IBCEF2",173,0)
 ; IBTYP = the code for the type of item
"RTN","IBCEF2",174,0)
 ;         returned incremented if no link is made
"RTN","IBCEF2",175,0)
 ; IBDATA = the extracted data string that identifies the item. 
"RTN","IBCEF2",176,0)
 ; Returns the line to link to or null if no link
"RTN","IBCEF2",177,0)
 N IBLN,IBKEY,Z
"RTN","IBCEF2",178,0)
 S IBLN=""
"RTN","IBCEF2",179,0)
 S IBKEY=$S(IBTYP=3:$P(IBDATA,U,9),IBTYP=5:$P(IBDATA,U,4),1:"") Q:IBKEY=""
"RTN","IBCEF2",180,0)
 I $D(^TMP($J,"IBITEM",IBTYP,IBKEY)) D  G:IBLN LINKQ
"RTN","IBCEF2",181,0)
 .S Z=0 F  S Z=$O(^TMP($J,"IBITEM",IBTYP,IBKEY,Z)) Q:'Z  I ^TMP($J,"IBITEM",IBTYP,IBKEY,Z) S IBLN=Z,^TMP($J,"IBITEM",IBTYP,IBKEY,Z)=^TMP($J,"IBITEM",IBTYP,IBKEY,Z)-1 Q
"RTN","IBCEF2",182,0)
 I $D(^TMP($J,"IBITEM",IBTYP,0)) S IBKEY=0 D
"RTN","IBCEF2",183,0)
 .S Z=0 F  S Z=$O(^TMP($J,"IBITEM",IBTYP,IBKEY,Z)) Q:'Z  I ^TMP($J,"IBITEM",IBTYP,IBKEY,Z) S IBLN=Z,^TMP($J,"IBITEM",IBTYP,IBKEY,Z)=^TMP($J,"IBITEM",IBTYP,IBKEY,Z)-1 Q
"RTN","IBCEF2",184,0)
LINKQ Q IBLN
"RTN","IBCEF2",185,0)
 ;
"RTN","IBCEF2",186,0)
COID(IBIFN) ; Claim office ID - moved for space
"RTN","IBCEF2",187,0)
 Q $$COID^IBCEF21(IBIFN)
"RTN","IBCEF2",188,0)
 ;
"RTN","IBCEF2",189,0)
PPOL(IBIFN,COB) ; return IFN of patient policy on a bill defined by COB (fields 399,112-114)
"RTN","IBCEF2",190,0)
 N X,Y,PPOL S PPOL=""
"RTN","IBCEF2",191,0)
 I +$G(IBIFN) S X=$G(^DGCR(399,+IBIFN,"M")) I +$G(COB),COB<4 S Y=COB+11,PPOL=$P(X,U,Y)
"RTN","IBCEF2",192,0)
 Q PPOL
"RTN","IBCEF2",193,0)
 ;
"RTN","IBCEF2",194,0)
LADJ(SUB,LINE,SEQ1,GRP,IBXSAVE,PIECE) ; Extract line level adjustments
"RTN","IBCEF2",195,0)
 ; SUB     = 1st subscript in IBXSAVE array to use
"RTN","IBCEF2",196,0)
 ; LINE    = 2nd subscript
"RTN","IBCEF2",197,0)
 ; SEQ1    = 4th subscript
"RTN","IBCEF2",198,0)
 ; GRP     = 5th subscript
"RTN","IBCEF2",199,0)
 ; IBXSAVE = array that has the data for COB line level adjustments
"RTN","IBCEF2",200,0)
 ; PIECE   = # of the piece on the 0-node of the line level
"RTN","IBCEF2",201,0)
 ;           adjustment reason to be extracted
"RTN","IBCEF2",202,0)
 ;
"RTN","IBCEF2",203,0)
 N A,B
"RTN","IBCEF2",204,0)
 S (A,B)=0
"RTN","IBCEF2",205,0)
 F  S A=$O(IBXSAVE(SUB,LINE,"COB",SEQ1,GRP,A)) Q:'A  D
"RTN","IBCEF2",206,0)
 . S B=B+1,IBXDATA(B)=$P(IBXSAVE(SUB,LINE,"COB",SEQ1,GRP,A),U,PIECE)
"RTN","IBCEF2",207,0)
 Q
"RTN","IBCEF2",208,0)
 ;
"RTN","IBCEF2",209,0)
ESGHPST(IBIFN,COB) ; return insureds employ status if bill policy defined by COB is an Employer Sponsored Group Health Plan
"RTN","IBCEF2",210,0)
 Q $$ESGHPST^IBCEF21(IBIFN,COB) ;Tag moved
"RTN","IBCEF2",211,0)
 ;
"RTN","IBCEF2",212,0)
ESGHPNL(IBIFN,COB) ; return employer name and location if bill policy defined by COB is an Employer Sponsored Group Health Plan
"RTN","IBCEF2",213,0)
 Q $$ESGHPNL^IBCEF21(IBIFN,COB) ;Tag moved
"RTN","IBCEF2",214,0)
 ;
"RTN","IBCEF2",215,0)
AMTOUT(A,B,C,IBXSAVE) ; format output amount
"RTN","IBCEF2",216,0)
 ;
"RTN","IBCEF2",217,0)
 N Z,K,IBZ,IBARR K IBXDATA S (IBZ,K)=0,IBARR="IBXSAVE("""_A_""")" F  S IBZ=$O(@IBARR@(IBZ)) Q:'IBZ  S K=K+1,Z=0 F  S Z=$O(@IBARR@(IBZ,Z)) Q:'Z  I $P($G(@IBARR@(IBZ,Z,B)),U,C) S IBXDATA(K)=$$DOLLAR^IBCEFG1($G(IBXDATA(K))+$P(@IBARR@(IBZ,Z,B),U,C))
"RTN","IBCEF2",218,0)
 Q
"RTN","IBCEF22")
0^43^B52106321^B51405532
"RTN","IBCEF22",1,0)
IBCEF22 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS ;06-FEB-96
"RTN","IBCEF22",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,135,155,309,349**;21-MAR-94;Build 46
"RTN","IBCEF22",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF22",4,0)
 ;
"RTN","IBCEF22",5,0)
 ;  OVERFLOW FROM ROUTINE IBCEF2
"RTN","IBCEF22",6,0)
HOS(IBIFN) ; Extract rev codes for episode billed on a UB-04 into IBXDATA
"RTN","IBCEF22",7,0)
 ; IBIFN = bill ien
"RTN","IBCEF22",8,0)
 ; Format: IBXDATA(n) =
"RTN","IBCEF22",9,0)
 ;  rev cd ptr ^ CPT CODE ptr ^ unit chg ^ units ^ tot charge
"RTN","IBCEF22",10,0)
 ;    ^ tot uncov^ FL49 value ^ ien of rev code multiple entry(s)
"RTN","IBCEF22",11,0)
 ;      (separated by ";")
"RTN","IBCEF22",12,0)
 ;    ^ modifiers specific to rev code/proc (separated by ",")
"RTN","IBCEF22",13,0)
 ;    ^ rev code date, if it can be determined by a corresponding proc
"RTN","IBCEF22",14,0)
 ;
"RTN","IBCEF22",15,0)
 ;   Also Returns IBXDATA(IBI,"COB",COB,m) with COB data for each line
"RTN","IBCEF22",16,0)
 ;      item found in an accepted EOB for the bill and = the reference
"RTN","IBCEF22",17,0)
 ;      line in the first '^' piece followed by the '0' node of file
"RTN","IBCEF22",18,0)
 ;      361.115 (LINE LEVEL ADJUSTMENTS)
"RTN","IBCEF22",19,0)
 ;       COB = COB seq # of adjustment's ins co, m = seq #
"RTN","IBCEF22",20,0)
 ;         -- AND --
"RTN","IBCEF22",21,0)
 ;    IBXDATA(IBI,"COB",COB,m,z,p)=
"RTN","IBCEF22",22,0)
 ;           the '0' node for each subordinate entry of file
"RTN","IBCEF22",23,0)
 ;           361.11511 (REASONS) (Only first 3 pieces for 837)
"RTN","IBCEF22",24,0)
 ;       z = group code, sometimes preceeded by a space   p = seq #
"RTN","IBCEF22",25,0)
 ;
"RTN","IBCEF22",26,0)
 N IBDA,IBCOMB,IBINPAT,IBLN,IBX,IBY,IBZ,IBS,IBSS,IBXTRA,IBX1,IBXS,IBP,IBPO,IBP1,IBDEF,Z,Z0,Z1,ZX,QQ,IBMOD
"RTN","IBCEF22",27,0)
 S IBINPAT=$$INPAT^IBCEF(IBIFN,1)
"RTN","IBCEF22",28,0)
 I 'IBINPAT D F^IBCEF("N-STATEMENT COVERS FROM DATE","IBZ",,IBIFN)
"RTN","IBCEF22",29,0)
 S IBDEF=$G(IBZ)
"RTN","IBCEF22",30,0)
 ; loop through all proc codes - sort by procedure, modifiers and print order
"RTN","IBCEF22",31,0)
 S IBDA=0 F  S IBDA=$O(^DGCR(399,IBIFN,"CP",IBDA)) Q:'IBDA  S IBZ=$G(^(IBDA,0)) I IBZ D
"RTN","IBCEF22",32,0)
 . S IBP(+$P(IBZ,U)_U_$$GETMOD^IBEFUNC(IBIFN,IBDA,1),$S($P(IBZ,U,4):$P(IBZ,U,4),1:999),IBDA)=$P(IBZ,U,2)
"RTN","IBCEF22",33,0)
 ; loop through all rev codes - sort by rev code
"RTN","IBCEF22",34,0)
 S IBDA=0 F  S IBDA=$O(^DGCR(399,IBIFN,"RC",IBDA)) Q:'IBDA  S IBZ=$G(^(IBDA,0)) I IBZ S IBMOD="" D
"RTN","IBCEF22",35,0)
 . S IBX=$G(^DGCR(399.2,+IBZ,0)),IBX1="",IBPO=0
"RTN","IBCEF22",36,0)
 . ; Auto-added procedure charge
"RTN","IBCEF22",37,0)
 . I $P(IBZ,U,10)=4,$P(IBZ,U,11) D  ; Soft link to proc
"RTN","IBCEF22",38,0)
 .. S Z=$G(^DGCR(399,IBIFN,"CP",$P(IBZ,U,11),0))
"RTN","IBCEF22",39,0)
 .. Q:Z=""
"RTN","IBCEF22",40,0)
 .. S ZX=+Z_U_$$GETMOD^IBEFUNC(IBIFN,$P(IBZ,U,11),1)
"RTN","IBCEF22",41,0)
 .. Q:'$O(IBP(ZX,0))&'$O(IBP1(ZX,0))
"RTN","IBCEF22",42,0)
 .. I $P(IBZ,U,6) Q:$S($P(Z,U)'["ICPT":1,1:+$P(Z,U)'=$P(IBZ,U,6))
"RTN","IBCEF22",43,0)
 .. S Z0=$S($D(IBP(ZX)):$O(IBP(ZX,0)),1:$O(IBP1(ZX,0)))
"RTN","IBCEF22",44,0)
 .. S:'Z0 Z0=999
"RTN","IBCEF22",45,0)
 .. Q:'$D(IBP(ZX,+Z0,$P(IBZ,U,11)))&'$D(IBP1(ZX,+Z0,$P(IBZ,U,11)))
"RTN","IBCEF22",46,0)
 .. I '$D(IBP1(ZX,+Z0,$P(IBZ,U,11))) S IBP1(ZX,+Z0,$P(IBZ,U,11))=IBP(ZX,+Z0,$P(IBZ,U,11)) K IBP(ZX,+Z0,$P(IBZ,U,11))
"RTN","IBCEF22",47,0)
 .. S IBX1=$P(Z,U,2),IBPO=+Z0,IBMOD=$P(ZX,U,2)
"RTN","IBCEF22",48,0)
 . ; Manually added charge with a procedure
"RTN","IBCEF22",49,0)
 . I $P(IBZ,U,6),$S($P(IBZ,U,10)=4:'$P(IBZ,U,11),1:1),+$O(IBP($P(IBZ,U,6)))=$P(IBZ,U,6) D
"RTN","IBCEF22",50,0)
 .. ; No direct link, but a proc exists on rev code and in procedure mult without and then with modifiers
"RTN","IBCEF22",51,0)
 .. S ZX=$O(IBP($P(IBZ,U,6)))
"RTN","IBCEF22",52,0)
 .. F QQ=1,2 Q:IBPO  S Z="" F  S Z=$O(IBP(ZX,Z),-1) Q:'Z!(IBPO)  S Z0=0 F  S Z0=$O(IBP(ZX,Z,Z0)) Q:'Z0  S Z1=$G(^DGCR(399,IBIFN,"CP",Z0,0)) D  Q:IBPO
"RTN","IBCEF22",53,0)
 ... ; Ignore if not a CPT or a modifier exists and this is first pass
"RTN","IBCEF22",54,0)
 ... S IBMOD=$$GETMOD^IBEFUNC(IBIFN,Z0,1)
"RTN","IBCEF22",55,0)
 ... Q:$S($P(Z1,U)'["ICPT":1,QQ=1:IBMOD'="",1:0)
"RTN","IBCEF22",56,0)
 ... S IBPO=+$P(Z1,U,4),IBX1=$P(Z1,U,2)
"RTN","IBCEF22",57,0)
 ... K IBP(+Z1_U_IBMOD,Z,Z0)
"RTN","IBCEF22",58,0)
 . ;
"RTN","IBCEF22",59,0)
 . I IBX'="" D  ; revenue code is valid
"RTN","IBCEF22",60,0)
 .. F Z=900:1 S Z0=$S(IBPO:IBPO,$D(IBX(" "_$P(IBX,U),Z)):0,1:Z) I Z0 S IBPO=Z0 Q
"RTN","IBCEF22",61,0)
 .. S IBX(" "_$P(IBX,U),IBPO,IBDA)=IBX,IBX(" "_$P(IBX,U),IBPO,IBDA,"DT")=$S(IBX1:IBX1,1:IBDEF),IBX(" "_$P(IBX,U),IBPO,IBDA,"MOD")=IBMOD
"RTN","IBCEF22",62,0)
 ;
"RTN","IBCEF22",63,0)
 S IBS="" F  S IBS=$O(IBX(IBS)) Q:IBS=""  S IBPO=0 F  S IBPO=$O(IBX(IBS,IBPO)) Q:'IBPO  D
"RTN","IBCEF22",64,0)
 . S IBDA=0 F  S IBDA=$O(IBX(IBS,IBPO,IBDA)) Q:'IBDA  S IBX=$G(IBX(IBS,IBPO,IBDA)),IBZ=$G(^DGCR(399,IBIFN,"RC",IBDA,0)) I IBX'="" D
"RTN","IBCEF22",65,0)
 .. ;S IBXS=$P(IBZ,U,2)_U_$P(IBZ,U,6)_U_$G(IBX(IBS,IBPO,IBDA,"MOD"))
"RTN","IBCEF22",66,0)
 .. S IBXS=U_$P(IBZ,U,6)_U_$G(IBX(IBS,IBPO,IBDA,"MOD")) ;combine same proc and modifiers regardless of rate
"RTN","IBCEF22",67,0)
 .. S:IBPO'<900&'$$ACCRV($P(IBS," ",2))&$S(IBINPAT:$P(IBZ,U,6),1:1) IBCOMB(IBS,IBXS,IBPO)=IBDA
"RTN","IBCEF22",68,0)
 .. S:'$D(IBX1(IBS,IBPO,IBXS,1)) IBX1(IBS,IBPO,IBXS,1)=IBX,IBX1(IBS,IBPO,IBXS,2)=IBZ
"RTN","IBCEF22",69,0)
 .. S $P(IBX1(IBS,IBPO,IBXS),U)=$P($G(IBX1(IBS,IBPO,IBXS)),U)+$P(IBZ,U,3)
"RTN","IBCEF22",70,0)
 .. S $P(IBX1(IBS,IBPO,IBXS),U,2)=$P($G(IBX1(IBS,IBPO,IBXS)),U,2)+$P(IBZ,U,4)
"RTN","IBCEF22",71,0)
 .. S IBX1(IBS,IBPO,IBXS,"DT")=$G(IBX(IBS,IBPO,IBDA,"DT")),IBX1(IBS,IBPO,IBXS,"IEN")=$G(IBX1(IBS,IBPO,IBXS,"IEN"))_$S($G(IBX1(IBS,IBPO,IBXS,"IEN")):";",1:"")_IBDA
"RTN","IBCEF22",72,0)
 ;
"RTN","IBCEF22",73,0)
 S IBS="" F  S IBS=$O(IBX1(IBS)) Q:IBS=""  S IBPO=899 F  S IBPO=$O(IBX1(IBS,IBPO)) Q:'IBPO  D  ; Check to combine like rev codes without print order
"RTN","IBCEF22",74,0)
 . N Q,Q0,Q1,Z,Z0,Z1,Z2,IBZ1,IBZ2
"RTN","IBCEF22",75,0)
 . S Z=""
"RTN","IBCEF22",76,0)
 . N IBACC
"RTN","IBCEF22",77,0)
 . F  S Z=$O(IBX1(IBS,IBPO,Z)) Q:Z=""  S Q=IBPO F  S Q=$O(IBCOMB(IBS,Z,Q)) Q:'Q  I Q'=IBPO S IBZ1=$G(IBX1(IBS,IBPO,Z,1)),IBZ2=$G(IBX1(IBS,IBPO,Z,2)) D
"RTN","IBCEF22",78,0)
 .. Q:$G(IBX1(IBS,IBPO,Z,1))'=$G(IBX1(IBS,Q,Z,1))
"RTN","IBCEF22",79,0)
 .. S Q1=1,IBACC=$$ACCRV(+$P(IBS," ",2))
"RTN","IBCEF22",80,0)
 .. F Q0=1,5:1:7,10:1:13,15 D  Q:'Q1
"RTN","IBCEF22",81,0)
 ... I IBACC Q:Q0=5!(Q0>6)
"RTN","IBCEF22",82,0)
 ... I (Q0=11!(Q0=15))&($P($G(IBX1(IBS,Q,Z,2)),U,10)=3) Q
"RTN","IBCEF22",83,0)
 ... I Q0=5,'IBINPAT Q
"RTN","IBCEF22",84,0)
 ... I $P($G(IBX1(IBS,IBPO,Z,2)),U,Q0)'=$P($G(IBX1(IBS,Q,Z,2)),U,Q0) S Q1=0
"RTN","IBCEF22",85,0)
 .. Q:'Q1
"RTN","IBCEF22",86,0)
 .. S $P(IBX1(IBS,IBPO,Z,2),U,3)=$P(IBX1(IBS,IBPO,Z,2),U,3)+$P(IBX1(IBS,Q,Z,2),U,3)
"RTN","IBCEF22",87,0)
 .. S $P(IBX1(IBS,IBPO,Z,2),U,4)=$P(IBX1(IBS,IBPO,Z,2),U,4)+$P(IBX1(IBS,Q,Z,2),U,4)
"RTN","IBCEF22",88,0)
 .. S $P(IBX1(IBS,IBPO,Z,2),U,9)=$P(IBX1(IBS,IBPO,Z,2),U,9)+$P(IBX1(IBS,Q,Z,2),U,9)
"RTN","IBCEF22",89,0)
 .. S IBX1(IBS,IBPO,Z)=$P(IBX1(IBS,IBPO,Z,2),U,3)_U_$P(IBX1(IBS,IBPO,Z,2),U,4)
"RTN","IBCEF22",90,0)
 .. S IBX1(IBS,IBPO,Z,"IEN")=IBX1(IBS,IBPO,Z,"IEN")_";"_IBX1(IBS,Q,Z,"IEN")
"RTN","IBCEF22",91,0)
 .. K IBX1(IBS,Q,Z)
"RTN","IBCEF22",92,0)
 ;
"RTN","IBCEF22",93,0)
 S IBS="",IBLN=0
"RTN","IBCEF22",94,0)
 F  S IBS=$O(IBX1(IBS)) Q:IBS=""  S IBPO=0 F  S IBPO=$O(IBX1(IBS,IBPO)) Q:'IBPO  S IBSS="" F  S IBSS=$O(IBX1(IBS,IBPO,IBSS)) Q:IBSS=""  D
"RTN","IBCEF22",95,0)
 . S IBX=$G(IBX1(IBS,IBPO,IBSS,1)),IBZ=$G(IBX1(IBS,IBPO,IBSS,2))
"RTN","IBCEF22",96,0)
 . S IBLN=$G(IBLN)+1,IBXDATA(IBLN)=$P(IBX,U)_U_$P(IBZ,U,6)_U_$P(IBZ,U,2)_U_+IBX1(IBS,IBPO,IBSS)_U_+$P(IBX1(IBS,IBPO,IBSS),U,2),$P(IBXDATA(IBLN),U,10)=$G(IBX1(IBS,IBPO,IBSS,"DT"))
"RTN","IBCEF22",97,0)
 . S $P(IBXDATA(IBLN),U,6)=$P(IBZ,U,9),$P(IBXDATA(IBLN),U,7)=$P(IBZ,U,13),$P(IBXDATA(IBLN),U,8)=$G(IBX1(IBS,IBPO,IBSS,"IEN")),$P(IBXDATA(IBLN),U,9)=$P($P(IBSS,U,3),",",1,2)
"RTN","IBCEF22",98,0)
 . ; Extract line lev COB data for sec or tert bill
"RTN","IBCEF22",99,0)
 . I $$COBN^IBCEF(IBIFN)>1 D COBLINE^IBCEU6(IBIFN,IBLN,.IBXDATA,,.IBXTRA) I $D(IBXTRA) D COMBO^IBCEU2(.IBXDATA,.IBXTRA,1) ;Handle bundled/unbundled
"RTN","IBCEF22",100,0)
 I $D(^IBA(362.4,"AIFN"_IBIFN))!$D(^IBA(362.5,"AIFN"_IBIFN)) D
"RTN","IBCEF22",101,0)
 . N IBARRAY,IBX,IBZ,IBRX,IBLCNT
"RTN","IBCEF22",102,0)
 . S IBLCNT=0
"RTN","IBCEF22",103,0)
 . ; Print prescriptions, prosthetics on front of UB-04
"RTN","IBCEF22",104,0)
 . D SET^IBCSC5A(IBIFN,.IBARRAY)
"RTN","IBCEF22",105,0)
 . I $P(IBARRAY,U,2) D
"RTN","IBCEF22",106,0)
 .. S IBX=+$P(IBARRAY,U,2)+2
"RTN","IBCEF22",107,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)=""
"RTN","IBCEF22",108,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)="PRESCRIPTION REFILLS:",IBLCNT=2
"RTN","IBCEF22",109,0)
 .. S IBX=0 F  S IBX=$O(IBARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(IBARRAY(IBX,IBY)) Q:'IBY  S IBRX=IBARRAY(IBX,IBY) D
"RTN","IBCEF22",110,0)
 ... D ZERO^IBRXUTL(+$P(IBRX,U,2))
"RTN","IBCEF22",111,0)
 ... S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)=IBX_$J(" ",(11-$L(IBX)))_" "_$J($S($P(IBRX,U,6):"$"_$FN($P(IBRX,U,6),",",2),1:""),10)_"  "_$J($$FMTE^XLFDT(IBY,2),8)_"  "_$G(^TMP($J,"IBDRUG",+$P(IBRX,U,2),.01))
"RTN","IBCEF22",112,0)
 ... S IBZ=$S(+$P(IBRX,U,4):"QTY: "_$P(IBRX,U,4)_" ",1:"")_$S(+$P(IBRX,U,3):"for "_$P(IBRX,U,3)_" days supply ",1:"") I IBZ'="" S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)=$J(" ",35)_IBZ
"RTN","IBCEF22",113,0)
 ... S IBZ=$S($P(IBRX,U,5)'="":"NDC #: "_$P(IBRX,U,5),1:"") I IBZ'="" S IBLCNT=IBLCNT+1,IBXSAVE("RX-UB-04",IBLCNT)=$J(" ",35)_IBZ
"RTN","IBCEF22",114,0)
 ... K ^TMP($J,"IBDRUG")
"RTN","IBCEF22",115,0)
 ... Q
"RTN","IBCEF22",116,0)
 . ;
"RTN","IBCEF22",117,0)
 . D SET^IBCSC5B(IBIFN,.IBARRAY)
"RTN","IBCEF22",118,0)
 . I $P(IBARRAY,U,2) D
"RTN","IBCEF22",119,0)
 .. S IBLCNT=0
"RTN","IBCEF22",120,0)
 .. S IBX=+$P(IBARRAY,U,2)+2
"RTN","IBCEF22",121,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("PROS-UB-04",IBLCNT)=""
"RTN","IBCEF22",122,0)
 .. S IBLCNT=IBLCNT+1,IBXSAVE("PROS-UB-04",IBLCNT)="PROSTHETIC REFILLS:",IBLCNT=2
"RTN","IBCEF22",123,0)
 .. S IBX=0 F  S IBX=$O(IBARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(IBARRAY(IBX,IBY)) Q:'IBY  D
"RTN","IBCEF22",124,0)
 ... S IBLCNT=IBLCNT+1,IBXSAVE("PROS-UB-04",IBLCNT)=$$FMTE^XLFDT(IBX,2)_" "_$J($S($P(IBARRAY(IBX,IBY),U,2):"$"_$FN($P(IBARRAY(IBX,IBY),U,2),",",2),1:""),10)_"  "_$E($P($$PIN^IBCSC5B(IBY),U,2),1,54)
"RTN","IBCEF22",125,0)
 Q
"RTN","IBCEF22",126,0)
 ;
"RTN","IBCEF22",127,0)
ACCRV(X) ; Returns 1 if X is an accomodation RC, 0 if not
"RTN","IBCEF22",128,0)
 Q ((X'<100&(X'>219))!(X=224))
"RTN","IBCEF22",129,0)
 ;
"RTN","IBCEF3")
0^2^B46268284^B41293059
"RTN","IBCEF3",1,0)
IBCEF3 ;ALB/TMP - FORMATTER SPECIFIC BILL FLD FUNCTIONS ;17-JUNE-96
"RTN","IBCEF3",2,0)
 ;;2.0;INTEGRATED BILLING;**52,84,121,51,152,210,155,348,349**;21-MAR-94;Build 46
"RTN","IBCEF3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF3",4,0)
 ;
"RTN","IBCEF3",5,0)
MPG(PG,FLDS,FORM) ; Set static flds on pages after page 1
"RTN","IBCEF3",6,0)
 ;        for either 1500 or UB
"RTN","IBCEF3",7,0)
 ;  PG = page #
"RTN","IBCEF3",8,0)
 ; FORM= 1 for UB, otherwise for 1500
"RTN","IBCEF3",9,0)
 ;  FLDS: array passed by reference and containing lines OR
"RTN","IBCEF3",10,0)
 ;        line/column from pg 1 to repeat on subsequent pages
"RTN","IBCEF3",11,0)
 ;        Format: FLDS(LINE,COL)  or  FLDS(LINE) for whole line
"RTN","IBCEF3",12,0)
 ;   CMS-1500:        LINES 1-5,7-43,57 from col 1 to 50, 58-63
"RTN","IBCEF3",13,0)
 ;         UB:        see CKPGUB for lines and columns
"RTN","IBCEF3",14,0)
 ;
"RTN","IBCEF3",15,0)
 N Z,Z0,Z1,LPG
"RTN","IBCEF3",16,0)
 S FORM=$S($G(FORM)=1:3,1:2)
"RTN","IBCEF3",17,0)
 I FORM=2 D  ; print page # on each pg, totals on last page of 1500
"RTN","IBCEF3",18,0)
 . S LPG=+$O(^TMP("IBXDATA",$J,IBXREC,""),-1)
"RTN","IBCEF3",19,0)
 . S Z="[Page "_PG_" of "_LPG_"]"
"RTN","IBCEF3",20,0)
 . S Z=$$FO^IBCNEUT1(Z,17,"R")
"RTN","IBCEF3",21,0)
 . D SETGBL^IBCEFG(PG,6,61,Z,.IBXSIZE)
"RTN","IBCEF3",22,0)
 . I PG=2 S Z=$P(Z,"[",1)_"[Page 1 of "_LPG_"]" D SETGBL^IBCEFG(1,6,61,Z,.IBXSIZE)
"RTN","IBCEF3",23,0)
 . I LPG=PG D
"RTN","IBCEF3",24,0)
 .. ;
"RTN","IBCEF3",25,0)
 .. ; esg - IB*2*348 - update dollar format for last page of 1500
"RTN","IBCEF3",26,0)
 .. ;
"RTN","IBCEF3",27,0)
 .. D SETGBL^IBCEFG(PG,57,51,$$DOL^IBCEF77($G(IBXSAVE("TOT")),9),.IBXSIZE)
"RTN","IBCEF3",28,0)
 .. D SETGBL^IBCEFG(PG,57,62,$$DOL^IBCEF77($G(IBXSAVE("PAID")),8),.IBXSIZE)
"RTN","IBCEF3",29,0)
 .. D SETGBL^IBCEFG(PG,57,71,$$DOL^IBCEF77($G(IBXSAVE("BDUE")),8),.IBXSIZE)
"RTN","IBCEF3",30,0)
 .. K IBXSAVE("PTOT"),IBXSAVE("TOT"),IBXSAVE("BDUE"),IBXSAVE("PAID")
"RTN","IBCEF3",31,0)
 ;
"RTN","IBCEF3",32,0)
 S Z=0 F  S Z=$O(FLDS(Z)) Q:'Z  D
"RTN","IBCEF3",33,0)
 . I $O(FLDS(Z,""))="" D  Q  ;repeats line
"RTN","IBCEF3",34,0)
 .. S Z0=0 F  S Z0=$O(^TMP("IBXDATA",$J,IBXREC,1,Z,Z0)) Q:'Z0  S Z1=$G(^(Z0)) I Z1'="" D SETGBL^IBCEFG(PG,Z,Z0,Z1,.IBXSIZE)
"RTN","IBCEF3",35,0)
 . S Z0=0 F  S Z0=$O(FLDS(Z,Z0)) Q:'Z0  S Z1=$G(^TMP("IBXDATA",$J,IBXREC,1,Z,Z0)) I Z1'="" D SETGBL^IBCEFG(PG,Z,Z0,Z1,.IBXSIZE)
"RTN","IBCEF3",36,0)
 . I FORM=2,LPG'=PG D
"RTN","IBCEF3",37,0)
 .. D SETGBL^IBCEFG(PG,57,51,"",.IBXSIZE)
"RTN","IBCEF3",38,0)
 .. D SETGBL^IBCEFG(PG,57,71,"",.IBXSIZE)
"RTN","IBCEF3",39,0)
 Q
"RTN","IBCEF3",40,0)
 ;
"RTN","IBCEF3",41,0)
NONSERV(Z,Z0) ; Set variable if non-service/non-text data is present for box
"RTN","IBCEF3",42,0)
 ;  24 of CMS-1500
"RTN","IBCEF3",43,0)
 ; Z = sequence of IBXSAVE being processed
"RTN","IBCEF3",44,0)
 ; Z0 = sequnce within IBXDATA to indicate actual line #
"RTN","IBCEF3",45,0)
 I $P(IBXSAVE("BOX24",Z),U)="" S IBXSAVE("NON-SERV",Z0)=""
"RTN","IBCEF3",46,0)
 Q
"RTN","IBCEF3",47,0)
 ;
"RTN","IBCEF3",48,0)
PG(VAL,LNCT) ;Set next pg for CMS-1500 lines
"RTN","IBCEF3",49,0)
 ;VAL = value of fld
"RTN","IBCEF3",50,0)
 ;LNCT = line # from IBXSAVE("BOX24") array
"RTN","IBCEF3",51,0)
 N IBP,IBL
"RTN","IBCEF3",52,0)
 S IBP=LNCT\12+(LNCT#12>0),IBL=LNCT-(12*(IBP-1))-1
"RTN","IBCEF3",53,0)
 I IBL'<0 S VAL=$$FORMAT(VAL,$G(IBXLOOP("IBX0")),$G(IBXDA)) D SETGBL^IBCEFG(IBP,IBXLN+IBL,IBXCOL,VAL,.IBXSIZE)
"RTN","IBCEF3",54,0)
 K IBXDATA(LNCT)
"RTN","IBCEF3",55,0)
 Q
"RTN","IBCEF3",56,0)
 ;
"RTN","IBCEF3",57,0)
MPGUB(PG,OFFSET,VAL,IBLN,IBCOL,NOFORM) ; Set up pages > 1 for UB overflows
"RTN","IBCEF3",58,0)
 ; PG = Page # to set (REQUIRED)
"RTN","IBCEF3",59,0)
 ; OFFSET = offset from first line this should be extracted into
"RTN","IBCEF3",60,0)
 ;          0 = first line (REQUIRED)
"RTN","IBCEF3",61,0)
 ; VAL = value to set (REQUIRED)
"RTN","IBCEF3",62,0)
 ; IBLN = line to set data at (if null, uses IBXLN)
"RTN","IBCEF3",63,0)
 ; IBCOL = column to set data at (if null, uses IBXCOL)
"RTN","IBCEF3",64,0)
 ; NOFORM = don't format, just output data as passed
"RTN","IBCEF3",65,0)
 ; Assumes formatter IBXLN,IBXCOL variables exist
"RTN","IBCEF3",66,0)
 ;
"RTN","IBCEF3",67,0)
 I $G(IBLN)="" S IBLN=IBXLN
"RTN","IBCEF3",68,0)
 I $G(IBCOL)="" S IBCOL=IBXCOL
"RTN","IBCEF3",69,0)
 S:'$G(NOFORM) VAL=$$FORMAT(VAL,$G(IBXLOOP("IBX0")),$G(IBXDA))
"RTN","IBCEF3",70,0)
 D SETGBL^IBCEFG(PG,IBLN+OFFSET,IBCOL,VAL,.IBXSIZE)
"RTN","IBCEF3",71,0)
 Q
"RTN","IBCEF3",72,0)
 ;
"RTN","IBCEF3",73,0)
CKREV(CT,VAL) ; Check too many rev code lines to fit on page
"RTN","IBCEF3",74,0)
 ; This procedure is only called when CT>22 (i.e. 23 or more)
"RTN","IBCEF3",75,0)
 ;
"RTN","IBCEF3",76,0)
 D MPGUB((CT-1)\22+1,CT-1#22,VAL) ; 22 codes on a single page
"RTN","IBCEF3",77,0)
 Q
"RTN","IBCEF3",78,0)
 ;
"RTN","IBCEF3",79,0)
CKPGUB ; Check to see if multiple UB pages are needed then populate
"RTN","IBCEF3",80,0)
 ; static flds from page 1, add page numbers
"RTN","IBCEF3",81,0)
 ;
"RTN","IBCEF3",82,0)
 N FLDS,LPG,IBPG,IBP,Z,Z0,TOT1,TOT2
"RTN","IBCEF3",83,0)
 ;
"RTN","IBCEF3",84,0)
 S LPG=$O(^TMP("IBXDATA",$J,IBXREC,""),-1),IBP=0
"RTN","IBCEF3",85,0)
 S Z="" F  S Z=$O(^TMP("IBXDATA",$J,IBXREC,LPG,Z),-1) Q:'Z  S Z0=0 F  S Z0=$O(^TMP("IBXDATA",$J,IBXREC,LPG,Z,Z0)) Q:'Z0  I $G(^(Z0))'="" S IBP=1 Q
"RTN","IBCEF3",86,0)
 I 'IBP K ^TMP("IBXDATA",$J,IBXREC,LPG) S LPG=$O(^TMP("IBXDATA",$J,IBXREC,""),-1) Q:LPG=1
"RTN","IBCEF3",87,0)
 ;
"RTN","IBCEF3",88,0)
 ; Static flds
"RTN","IBCEF3",89,0)
 F Z=2:1:7 S FLDS(Z)=""    ; FL-1 thru FL-9
"RTN","IBCEF3",90,0)
 F Z=1,10,13,19,22,25,28,31 S FLDS(9,Z)=""    ; FL-10 thru FL-17
"RTN","IBCEF3",91,0)
 F Z=13:1:17 S FLDS(Z,1)=""   ; payer address in FL-38
"RTN","IBCEF3",92,0)
 S FLDS(41,46)=""     ; creation date
"RTN","IBCEF3",93,0)
 F Z=42,43,44,45,47,48,49,51,52,53 S FLDS(Z)=""   ; FL-50 thru FL-65
"RTN","IBCEF3",94,0)
 F Z=57,59,61,63 S (FLDS(Z,59),FLDS(Z,72),FLDS(Z,74))=""   ; FL-76-79 ID's
"RTN","IBCEF3",95,0)
 F Z=58,60,62,64 S (FLDS(Z,53),FLDS(Z,71))=""    ; FL-76-79 Names
"RTN","IBCEF3",96,0)
 ;
"RTN","IBCEF3",97,0)
 F IBPG=1:1:LPG D
"RTN","IBCEF3",98,0)
 . ; Add pg # to last line of rev codes if multiple pages
"RTN","IBCEF3",99,0)
 . N IB,IBP
"RTN","IBCEF3",100,0)
 . S IB=$G(^TMP("IBXDATA",$J,IBXREC,IBPG,41,6))
"RTN","IBCEF3",101,0)
 . D MPGUB(IBPG,0,IBPG,41,10,1)
"RTN","IBCEF3",102,0)
 . D MPGUB(IBPG,0,LPG,41,16,1)
"RTN","IBCEF3",103,0)
 . D:IBPG>1 MPG(IBPG,.FLDS,1)
"RTN","IBCEF3",104,0)
 . Q
"RTN","IBCEF3",105,0)
 ; print totals on line 41 of the last page
"RTN","IBCEF3",106,0)
 S (TOT1,TOT2)=0
"RTN","IBCEF3",107,0)
 F Z=1:1 Q:'$D(^TMP($J,"IBC-RC",Z))  S Z0=^(Z) I +Z0=1 S TOT1=TOT1+$P(Z0,U,7),TOT2=TOT2+$P(Z0,U,8)
"RTN","IBCEF3",108,0)
 D MPGUB(IBPG,0,"0001",41,1,1)
"RTN","IBCEF3",109,0)
 D MPGUB(IBPG,0,$$DOL^IBCEF77(TOT1,9),41,61,1)
"RTN","IBCEF3",110,0)
 D MPGUB(IBPG,0,$$DOL^IBCEF77(TOT2,9),41,71,1)
"RTN","IBCEF3",111,0)
 ;
"RTN","IBCEF3",112,0)
 Q
"RTN","IBCEF3",113,0)
 ;
"RTN","IBCEF3",114,0)
HCPC(R) ;FORMAT HCPC fld FOR UB (returns formatted value)
"RTN","IBCEF3",115,0)
 ; R = flag for type of fld (1/2/3) being printed in rev code block
"RTN","IBCEF3",116,0)
 Q R  ;No longer used as of patch IB*2.0*51
"RTN","IBCEF3",117,0)
 ;
"RTN","IBCEF3",118,0)
PROS(IBIFN) ; Extract billable prosthetics for 837
"RTN","IBCEF3",119,0)
 N IBARRAY,Z,Z0,CT,PROS
"RTN","IBCEF3",120,0)
 D SET^IBCSC5B(IBIFN,.IBARRAY)
"RTN","IBCEF3",121,0)
 I '$P(IBARRAY,U,2) S CT="" G PROSQ
"RTN","IBCEF3",122,0)
 S Z="",CT=0
"RTN","IBCEF3",123,0)
 F  S Z=$O(IBARRAY(Z)) Q:Z=""  S Z0="" F  S Z0=$O(IBARRAY(Z,Z0)) Q:Z0=""  S CT=CT+1 D
"RTN","IBCEF3",124,0)
 .S PROS=$P($$PIN^IBCSC5B(+$P($G(^IBA(362.5,+IBARRAY(Z,Z0),0)),U,3)),U,2)
"RTN","IBCEF3",125,0)
 .;date^item ptr file 661^short descr from file 441^entry # in file 362.5
"RTN","IBCEF3",126,0)
 .S IBXDATA(CT)=Z_U_Z0_U_PROS_U_+IBARRAY(Z,Z0)
"RTN","IBCEF3",127,0)
PROSQ Q CT
"RTN","IBCEF3",128,0)
 ;
"RTN","IBCEF3",129,0)
B24(IBXSV,IBIFN,IBNOSHOW) ; Code to execute to set up IBXSV("BOX24") for
"RTN","IBCEF3",130,0)
 ;   print or IBXSAVE("OUTPT") for transmit - called by output formatter
"RTN","IBCEF3",131,0)
 ; IBNOSHOW = 1 if not to show error/warning text lines
"RTN","IBCEF3",132,0)
 ; Pass IBXSV by reference
"RTN","IBCEF3",133,0)
 N IBSUB
"RTN","IBCEF3",134,0)
 S IBSUB=$S('$G(^TMP("IBTX",$J,IBIFN)):"BOX24",1:"OUTPT")
"RTN","IBCEF3",135,0)
 K IBXSV(IBSUB)
"RTN","IBCEF3",136,0)
 I '$D(IBIFN) S IBIFN=$G(IBXIEN)
"RTN","IBCEF3",137,0)
 I IBIFN D F^IBCEF("N-HCFA 1500 SERVICE"_$S(IBSUB["24":"S (PRINT",1:" LINE (EDI")_")",,,IBIFN)
"RTN","IBCEF3",138,0)
 I $S(IBSUB'["24":1,1:'$G(IBNOSHOW)) D
"RTN","IBCEF3",139,0)
 . M IBXSV(IBSUB)=IBXDATA
"RTN","IBCEF3",140,0)
 E  D
"RTN","IBCEF3",141,0)
 . N Z,CT
"RTN","IBCEF3",142,0)
 . S (Z,CT)=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  I '$D(IBXDATA(Z,"ARX")) S CT=CT+1 M IBXSV(IBSUB,CT)=IBXDATA(Z)
"RTN","IBCEF3",143,0)
 Q
"RTN","IBCEF3",144,0)
 ;
"RTN","IBCEF3",145,0)
 ; esg - 11/14/03 - Moved the below functions due to space constraints
"RTN","IBCEF3",146,0)
 ;
"RTN","IBCEF3",147,0)
ALLTYP(IBIFN) Q $$ALLTYP^IBCEF31(IBIFN)
"RTN","IBCEF3",148,0)
INSTYP(IBIFN,SEQ) Q $$INSTYP^IBCEF31(IBIFN,$G(SEQ))
"RTN","IBCEF3",149,0)
POLTYP(IBIFN,IBSEQ) Q $$POLTYP^IBCEF31(IBIFN,$G(IBSEQ))
"RTN","IBCEF3",150,0)
ALLPTYP(IBIFN) Q $$ALLPTYP^IBCEF31(IBIFN)
"RTN","IBCEF3",151,0)
 ;
"RTN","IBCEF3",152,0)
FILL(Z) ;
"RTN","IBCEF3",153,0)
 Q
"RTN","IBCEF3",154,0)
 ;
"RTN","IBCEF3",155,0)
 ;  ***** 
"RTN","IBCEF3",156,0)
 ;  The following code performs the multi-page set up for
"RTN","IBCEF3",157,0)
 ;  printing overflow data on the UB
"RTN","IBCEF3",158,0)
 ;  *****
"RTN","IBCEF3",159,0)
 ;
"RTN","IBCEF3",160,0)
XPROC(DATA,CT) ; Output any UB procedures after 6 on new page(s)
"RTN","IBCEF3",161,0)
 ; DATA = output data from IBXSAVE("PROC",CT)
"RTN","IBCEF3",162,0)
 ; CT = array sequence # of the procedure being output
"RTN","IBCEF3",163,0)
 ; Only used for local prints
"RTN","IBCEF3",164,0)
 N OFFSET,PG,COL,PRCODE,Q
"RTN","IBCEF3",165,0)
 S Q=(CT-1)\3#2,OFFSET=$S('Q:0,1:2)
"RTN","IBCEF3",166,0)
 S PG=(CT-1)\6+1,COL=1+(CT-1#3*15)
"RTN","IBCEF3",167,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,1),58,COL)
"RTN","IBCEF3",168,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,2),58,COL+9)
"RTN","IBCEF3",169,0)
 Q
"RTN","IBCEF3",170,0)
 ;
"RTN","IBCEF3",171,0)
XDIAG(DATA,CT) ; Output any UB other diagnoses after 8 on new page(s)
"RTN","IBCEF3",172,0)
 ; DATA = output data from IBXSAVE("DX",CT)
"RTN","IBCEF3",173,0)
 ; CT = array sequence # of the diagnosis being output
"RTN","IBCEF3",174,0)
 ; Only used for local prints
"RTN","IBCEF3",175,0)
 N COL,PG
"RTN","IBCEF3",176,0)
 S PG=(CT-1)\8+1,COL=8+(CT-1#9*7)
"RTN","IBCEF3",177,0)
 S DATA=$P($$ICD9^IBACSV(+DATA),U,1)
"RTN","IBCEF3",178,0)
 D MPGUB(PG,0,DATA,56,COL)
"RTN","IBCEF3",179,0)
 Q
"RTN","IBCEF3",180,0)
 ;
"RTN","IBCEF3",181,0)
XVAL(DATA,CT) ; Output any UB value codes after 12 on new page(s)
"RTN","IBCEF3",182,0)
 ; DATA = output data from IBXSAVE("VC",CT)
"RTN","IBCEF3",183,0)
 ; CT = array sequence # of the value code being output
"RTN","IBCEF3",184,0)
 ;
"RTN","IBCEF3",185,0)
 N COL,PG,OFFSET
"RTN","IBCEF3",186,0)
 S PG=(CT-1)\12+1,COL=44+(CT-1#3*13),OFFSET=(CT-(12*(PG-1))-1)\3
"RTN","IBCEF3",187,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,1),14,COL)
"RTN","IBCEF3",188,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,2),14,COL+3)
"RTN","IBCEF3",189,0)
 Q
"RTN","IBCEF3",190,0)
 ;
"RTN","IBCEF3",191,0)
XCC(DATA,CT) ; Output any UB condition codes after 11 on new page(s)
"RTN","IBCEF3",192,0)
 ; 11 condition codes per page, starting columns 34 thru 64
"RTN","IBCEF3",193,0)
 ; DATA = output data from IBXSAVE("CC",CT)
"RTN","IBCEF3",194,0)
 ; CT = array sequence # of the condition code being output
"RTN","IBCEF3",195,0)
 ;
"RTN","IBCEF3",196,0)
 N COL,PG
"RTN","IBCEF3",197,0)
 S PG=(CT-1)\11+1,COL=34+(CT-1#11*3)
"RTN","IBCEF3",198,0)
 D MPGUB(PG,0,DATA,9,COL)
"RTN","IBCEF3",199,0)
 Q
"RTN","IBCEF3",200,0)
 ;
"RTN","IBCEF3",201,0)
XOCC(DATA,CT,FL) ; Output any UB occurrence codes after 8 (2 per form
"RTN","IBCEF3",202,0)
 ;  locators 31-34) on new page(s)
"RTN","IBCEF3",203,0)
 ; DATA = data from IBXSAVE("OCC",z) to be output
"RTN","IBCEF3",204,0)
 ; CT = array sequence # of occurrence code being output
"RTN","IBCEF3",205,0)
 ; FL = # of form locator being populated with the occ code
"RTN","IBCEF3",206,0)
 ;
"RTN","IBCEF3",207,0)
 N COL,PG,OFFSET
"RTN","IBCEF3",208,0)
 S PG=(CT-1)\2+1,COL=1+((FL-31)*10),OFFSET=$S(CT#2:0,1:1)
"RTN","IBCEF3",209,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,1),11,COL)
"RTN","IBCEF3",210,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,2),11,COL+4)
"RTN","IBCEF3",211,0)
 Q
"RTN","IBCEF3",212,0)
 ;
"RTN","IBCEF3",213,0)
XOCCS(DATA,CT,FL) ; Output any UB occurrence span codes after 4 on new page(s)
"RTN","IBCEF3",214,0)
 ; DATA = data from IBXSAVE("OCCS",z) to be output
"RTN","IBCEF3",215,0)
 ; CT = array sequence # of occurrence span code being output
"RTN","IBCEF3",216,0)
 ; FL = # of form locator being populated (either FL 35 or 36)
"RTN","IBCEF3",217,0)
 ;
"RTN","IBCEF3",218,0)
 N COL,PG,OFFSET
"RTN","IBCEF3",219,0)
 S PG=(CT-1)\2+1,OFFSET=$S(CT#2:0,1:1)
"RTN","IBCEF3",220,0)
 S COL=41+((FL-35)*17)
"RTN","IBCEF3",221,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,1),11,COL)
"RTN","IBCEF3",222,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,2),11,COL+4)
"RTN","IBCEF3",223,0)
 D MPGUB(PG,OFFSET,$P(DATA,U,3),11,COL+11)
"RTN","IBCEF3",224,0)
 Q
"RTN","IBCEF3",225,0)
 ;
"RTN","IBCEF3",226,0)
FORMAT(VAL,IBX0,IBXDA) ;
"RTN","IBCEF3",227,0)
 I IBX0'="",IBXDA S VAL=$$FORMAT^IBCEFG(VAL,$P($G(^IBA(364.6,+IBXDA,0)),U,9),$P(IBX0,U,7),IBX0)
"RTN","IBCEF3",228,0)
 Q VAL
"RTN","IBCEF3",229,0)
 ;
"RTN","IBCEF3",230,0)
OUTPDT(IBIFN,IBXSAVE,IBXDATA) ; Returns outpatient service to date
"RTN","IBCEF3",231,0)
 ;  formatted CCYYMMDD for UB 837
"RTN","IBCEF3",232,0)
 ; IBIFN = ien of bill (file 399)
"RTN","IBCEF3",233,0)
 ; IBXSAVE = pass by reference for IBXSAVE("INPT") and IBXSAVE("DATE")
"RTN","IBCEF3",234,0)
 ; IBXDATA = array with formatted date or each line item - CCYYMMDD
"RTN","IBCEF3",235,0)
 N Z
"RTN","IBCEF3",236,0)
 S Z=0 F  S Z=$O(IBXSAVE("INPT",Z)) Q:'Z  S IBXDATA(Z)=$S($P(IBXSAVE("INPT",Z),U,10):$$DT^IBCEFG1($P(IBXSAVE("INPT",Z),U,10),,"D8"),1:IBXSAVE("DATE"))
"RTN","IBCEF3",237,0)
 K IBXSAVE("DATE")
"RTN","IBCEF3",238,0)
 Q
"RTN","IBCEF3",239,0)
 ;
"RTN","IBCEF31")
0^44^B7985183^B7680151
"RTN","IBCEF31",1,0)
IBCEF31 ;ALB/ESG - FORMATTER SPECIFIC BILL FLD FUNCTIONS - CONT ;14-NOV-03
"RTN","IBCEF31",2,0)
 ;;2.0;INTEGRATED BILLING;**155,296,349**;21-MAR-94;Build 46
"RTN","IBCEF31",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF31",4,0)
 ;
"RTN","IBCEF31",5,0)
 Q
"RTN","IBCEF31",6,0)
 ;
"RTN","IBCEF31",7,0)
ALLTYP(IBIFN) ; returns codes to translate to ALL ins types on a bill
"RTN","IBCEF31",8,0)
 ; IBIFN = ien of bill
"RTN","IBCEF31",9,0)
 N IBX,Z
"RTN","IBCEF31",10,0)
 F Z=1:1:3 S $P(IBX,U,Z)=$$INSTYP(IBIFN,Z)
"RTN","IBCEF31",11,0)
 ; IBX = primary code^secondary code^tertiary code
"RTN","IBCEF31",12,0)
 Q IBX
"RTN","IBCEF31",13,0)
 ;
"RTN","IBCEF31",14,0)
INSTYP(IBIFN,SEQ) ; Returns insurance type code for an ins on a bill
"RTN","IBCEF31",15,0)
 ; IBIFN = ien of bill
"RTN","IBCEF31",16,0)
 ; SEQ = sequence (1,2,3) of insurance wanted - prim, second, tert
"RTN","IBCEF31",17,0)
 ;       Default is current insurance co
"RTN","IBCEF31",18,0)
 ;
"RTN","IBCEF31",19,0)
 N IBA,Z
"RTN","IBCEF31",20,0)
 ;
"RTN","IBCEF31",21,0)
 I '$G(SEQ) S SEQ=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF31",22,0)
 S Z=+$G(^DGCR(399,IBIFN,"I"_SEQ))
"RTN","IBCEF31",23,0)
 ;Codes 1:HMO;2:COMMERCIAL;3:MEDICARE;4:MEDICAID;5:GROUP POLICY;9:OTHER
"RTN","IBCEF31",24,0)
 I Z D
"RTN","IBCEF31",25,0)
 . S IBA=$P($G(^DIC(36,Z,3)),U,9)
"RTN","IBCEF31",26,0)
 . I $$MCRWNR^IBEFUNC(Z) S IBA=3   ; force Medicare (WNR) definition to be correct
"RTN","IBCEF31",27,0)
 . I IBA="" S IBA=5 ;Default is group policy - 5 if blank
"RTN","IBCEF31",28,0)
 ;
"RTN","IBCEF31",29,0)
 Q $G(IBA)
"RTN","IBCEF31",30,0)
 ;
"RTN","IBCEF31",31,0)
POLTYP(IBIFN,IBSEQ) ; Returns ins electronic policy type code for one
"RTN","IBCEF31",32,0)
 ;   ins policy on a bill
"RTN","IBCEF31",33,0)
 ; IBIFN = ien of bill
"RTN","IBCEF31",34,0)
 ; IBSEQ = sequence (1,2,3) of ins policy wanted - prim, second, tert
"RTN","IBCEF31",35,0)
 ;       Default is current insurance co
"RTN","IBCEF31",36,0)
 ;
"RTN","IBCEF31",37,0)
 N IBPLAN,IBPLTYP
"RTN","IBCEF31",38,0)
 ;
"RTN","IBCEF31",39,0)
 I '$G(IBSEQ) S IBSEQ=+$$COBN^IBCEF(IBIFN)
"RTN","IBCEF31",40,0)
 S IBPLAN=$G(^IBA(355.3,+$P($G(^DGCR(399,IBIFN,"I"_IBSEQ)),U,18),0))
"RTN","IBCEF31",41,0)
 S IBPLTYP=$P(IBPLAN,U,15)
"RTN","IBCEF31",42,0)
 ;
"RTN","IBCEF31",43,0)
 ; esg - 06/30/05 - IB*2.0*296 - Force Medicare (WNR) to be correct
"RTN","IBCEF31",44,0)
 I $$WNRBILL^IBEFUNC(IBIFN,IBSEQ),$$FT^IBCEF(IBIFN)=2 S IBPLTYP="MB"   ; CMS-1500 ----> Medicare Part B
"RTN","IBCEF31",45,0)
 I $$WNRBILL^IBEFUNC(IBIFN,IBSEQ),$$FT^IBCEF(IBIFN)=3 S IBPLTYP="MA"   ; UB-04 -------> Medicare Part A
"RTN","IBCEF31",46,0)
 ;
"RTN","IBCEF31",47,0)
 I IBPLTYP="" S IBPLTYP="CI" ;Default is commercial - 'CI'
"RTN","IBCEF31",48,0)
 I IBPLTYP="MX" D
"RTN","IBCEF31",49,0)
 . I $P(IBPLAN,U,14)'="","AB"[$P(IBPLAN,U,14) S IBPLTYP="M"_$P(IBPLAN,U,14) Q
"RTN","IBCEF31",50,0)
 . S IBPLTYP="CI"
"RTN","IBCEF31",51,0)
 Q $G(IBPLTYP)
"RTN","IBCEF31",52,0)
 ;
"RTN","IBCEF31",53,0)
ALLPTYP(IBIFN) ; returns insurance policy type codes for ALL ins on a bill
"RTN","IBCEF31",54,0)
 ; IBIFN = ien of bill
"RTN","IBCEF31",55,0)
 N IBX,Z S IBX=""
"RTN","IBCEF31",56,0)
 F Z=1:1:3 I $D(^DGCR(399,IBIFN,"I"_Z)) S $P(IBX,U,Z)=$$POLTYP(IBIFN,Z)
"RTN","IBCEF31",57,0)
 ; IBX = primary code^secondary code^tertiary code
"RTN","IBCEF31",58,0)
 Q IBX
"RTN","IBCEF31",59,0)
 ;
"RTN","IBCEF31",60,0)
PGDX(DXCNT,IBX0,IBXDA,IBXLN,IBXCOL,IBXSIZE,IBXSAVE) ; Subroutine - Checks for Diagnosis Codes (Dx) beyond 
"RTN","IBCEF31",61,0)
 ; the first four, that relate to the current Dx position passed in DXCNT.
"RTN","IBCEF31",62,0)
 ; This subroutine stores the Diagnosis Codes in output global using display parameters (IBXLN,IBXCOL)
"RTN","IBCEF31",63,0)
 ; If DXCNT is 1, check for Dx's 5,9,...etc & display on pages 2,3,...etc
"RTN","IBCEF31",64,0)
 ; If DXCNT is 2, check for Dx's 6,10,...etc & display on pages 2,3,...etc
"RTN","IBCEF31",65,0)
 ; If DXCNT is 3, check for Dx's 7,11,...etc & display on pages 2,3,...etc
"RTN","IBCEF31",66,0)
 ; If DXCNT is 4, check for Dx's 8,12,...etc & display on pages 2,3,...etc
"RTN","IBCEF31",67,0)
 ;
"RTN","IBCEF31",68,0)
 ; Input: DXCNT= position of current Dx (from 1 to 4)
"RTN","IBCEF31",69,0)
 ;        IBX0= zero-level of file 364.7 of current Dx
"RTN","IBCEF31",70,0)
 ;        IBXDA= ien# of file 364.6 of current Dx
"RTN","IBCEF31",71,0)
 ;        IBXLN IBXCOL= line# & Column# of current Dx
"RTN","IBCEF31",72,0)
 ;        IBXSIZE= size counter
"RTN","IBCEF31",73,0)
 ;        IBXSAVE("DX")= local array with all Dx's on current bill
"RTN","IBCEF31",74,0)
 ;
"RTN","IBCEF31",75,0)
 N JUMP,IBPG,VAL
"RTN","IBCEF31",76,0)
 F JUMP=DXCNT+4:4 Q:'$D(IBXSAVE("DX",JUMP))  D  ;
"RTN","IBCEF31",77,0)
 . ;calculate page number where Dx number JUMP will print
"RTN","IBCEF31",78,0)
 . S IBPG=JUMP\4+(JUMP#4>0)
"RTN","IBCEF31",79,0)
 . S VAL=$P($G(^ICD9(+IBXSAVE("DX",JUMP),0)),U)   ; resolve Dx pointer
"RTN","IBCEF31",80,0)
 . S VAL=$$FORMAT^IBCEF3(VAL,$G(IBX0),$G(IBXDA))  ;format Dx value
"RTN","IBCEF31",81,0)
 . D SETGBL^IBCEFG(IBPG,IBXLN,IBXCOL,VAL,.IBXSIZE) ;store in output global
"RTN","IBCEF31",82,0)
 Q  ;PGDX
"RTN","IBCEF31",83,0)
 ;
"RTN","IBCEF4")
0^45^B29271038^B28792521
"RTN","IBCEF4",1,0)
IBCEF4 ;ALB/TMP - MRA/EDI ACTIVATED UTILITIES ;06-FEB-96
"RTN","IBCEF4",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,232,155,296,327,349**;21-MAR-94;Build 46
"RTN","IBCEF4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF4",4,0)
 ;
"RTN","IBCEF4",5,0)
EDIACTV(IBEDIMRA) ; Returns 0 if EDI or MRA is not active, 
"RTN","IBCEF4",6,0)
 ; otherwise, returns 1
"RTN","IBCEF4",7,0)
 ; IBEDIMRA : 1= checking if EDI is active, 2= checking if MRA is active
"RTN","IBCEF4",8,0)
 N IBEDI
"RTN","IBCEF4",9,0)
 S IBEDI=$P($G(^IBE(350.9,1,8)),U,10)
"RTN","IBCEF4",10,0)
 Q $S('IBEDI:0,IBEDI=3:1,1:IBEDI=IBEDIMRA)
"RTN","IBCEF4",11,0)
 ;
"RTN","IBCEF4",12,0)
RATEOK(IBIFN) ; Returns 1 if rate type of bill IBIFN is transmittable
"RTN","IBCEF4",13,0)
 Q +$P($G(^DGCR(399.3,+$P($G(^DGCR(399,IBIFN,0)),U,7),0)),U,10)
"RTN","IBCEF4",14,0)
 ;
"RTN","IBCEF4",15,0)
INSOK(INS) ; Determine EDI activation status of insurance co
"RTN","IBCEF4",16,0)
 Q +$G(^DIC(36,INS,3))  ;1 = TEST, 2 = LIVE, 0 = NOT ACTIVE FOR EDI
"RTN","IBCEF4",17,0)
 ;
"RTN","IBCEF4",18,0)
BSTATX(IBIFN) ; Returns internal value of bill's latest transmission status
"RTN","IBCEF4",19,0)
 N IBDA
"RTN","IBCEF4",20,0)
 Q $P($G(^IBA(364,+$$LAST364(IBIFN),0)),U,3)
"RTN","IBCEF4",21,0)
 ;
"RTN","IBCEF4",22,0)
LAST364(IBIFN) ; Determine ien of latest transmit bill record for a bill
"RTN","IBCEF4",23,0)
 Q +$O(^IBA(364,"ABDT",IBIFN,+$O(^IBA(364,"ABDT",IBIFN,""),-1),""),-1)
"RTN","IBCEF4",24,0)
 ;
"RTN","IBCEF4",25,0)
TXMT(IBIFN,IBWHY,IBNEW) ; Determine if bill # IBIFN is 'transmittable'
"RTN","IBCEF4",26,0)
 ; IBNEW = flag is 1 if new entry - don't check for entry in file 364
"RTN","IBCEF4",27,0)
 ; Function returns:
"RTN","IBCEF4",28,0)
 ;        0 if not transmittable
"RTN","IBCEF4",29,0)
 ;        if transmittable, the entire node 3 of the insurance company
"RTN","IBCEF4",30,0)
 ;  and, if passed by reference IBWHY = reason not transmittable
"RTN","IBCEF4",31,0)
 ;                    1 if local print
"RTN","IBCEF4",32,0)
 ;                    2 if EDI/MRA not active
"RTN","IBCEF4",33,0)
 ;                    3 if rate type not transmittable
"RTN","IBCEF4",34,0)
 ;                    4 if no transmit for insurance co
"RTN","IBCEF4",35,0)
 ;                    5 if failed txmn rules
"RTN","IBCEF4",36,0)
 ;                      and IBWHY(0) = ien of rule failed
"RTN","IBCEF4",37,0)
 ;                    6 if Rx with missing/invalid NDC format
"RTN","IBCEF4",38,0)
 ;
"RTN","IBCEF4",39,0)
 N IB,IB0,IBOK,IBCOB,IBMCR,X1
"RTN","IBCEF4",40,0)
 S IBOK=1,IB=IBIFN,IBWHY=""
"RTN","IBCEF4",41,0)
 ;
"RTN","IBCEF4",42,0)
 S IBCOB=$$COBN^IBCEF(IB),IB(.07)=+$G(^DGCR(399,IB,"I"_IBCOB))
"RTN","IBCEF4",43,0)
 S IBMCR=$$MCRWNR^IBEFUNC(IB(.07))
"RTN","IBCEF4",44,0)
 ; Does bill have force local print flag set?
"RTN","IBCEF4",45,0)
 I 'IBMCR D  G:IBWHY TXMTQ  ; MCR WNR not curr ins
"RTN","IBCEF4",46,0)
 . I $S($$MRASEC(IBIFN):$P($G(^DGCR(399,IBIFN,"TX")),U,9)=1,1:$P($G(^DGCR(399,IBIFN,"TX")),U,8)=1) S IBOK=0,IBWHY=1
"RTN","IBCEF4",47,0)
 I '$G(IBNEW),'$O(^IBA(364,"B",IBIFN,0)),$P($G(^DGCR(399,IBIFN,0)),U,13)>2,'$$RETN^PRCAFN(IBIFN) S IBOK=0 G TXMTQ ; Not recognized as transmittable when it was authorized
"RTN","IBCEF4",48,0)
 I $O(^IBA(364,"B",IBIFN,0)),$$INSOK(IB(.07)),$$BSTATX(IBIFN)'="X" G TXMTQ ;Already determined to be transmittable - entry exists for bill in transmit bill file
"RTN","IBCEF4",49,0)
 S IB(.03)=$S('IBMCR:1,1:2) ; EDI(1) or MRA(2)
"RTN","IBCEF4",50,0)
 S IB(.04)=$S('$$INPAT^IBCEF(IB,1):1,1:2) ;Outpt(1) or Inpt(2)
"RTN","IBCEF4",51,0)
 S IB(.05)=$S($$FT^IBCEF(IB)=3:1,1:2) ;Inst(1) or Prof(2)
"RTN","IBCEF4",52,0)
 ; Execute unmodifiable, general edits
"RTN","IBCEF4",53,0)
 S X1=$$EDIACTV(IB(.03))
"RTN","IBCEF4",54,0)
 I 'X1 S IBWHY=2
"RTN","IBCEF4",55,0)
 I 'IBWHY S X1=$$RATEOK(IBIFN) S:'X1 IBWHY=3
"RTN","IBCEF4",56,0)
 I 'IBWHY S X1=$$INSOK(+IB(.07)) S:'X1 IBWHY=4
"RTN","IBCEF4",57,0)
 I 'IBWHY,$$ISRX^IBCEF1(IBIFN) D  ;S:'X1 IBWHY=6
"RTN","IBCEF4",58,0)
 . ; Check for Rxs and NDC # format valid (5-4-2)
"RTN","IBCEF4",59,0)
 . ;IF THIS IS A UB FORM DO NOT SEND ELECTRONIC
"RTN","IBCEF4",60,0)
 . I $$FT^IBCEF(IBIFN)=3 S IBWHY=1
"RTN","IBCEF4",61,0)
 . ;
"RTN","IBCEF4",62,0)
 . Q  ;;CHECK REMOVAL SO NON NDC FORMAT NUMBERS WILL GO
"RTN","IBCEF4",63,0)
 . N Z,Z0,Z00
"RTN","IBCEF4",64,0)
 . S Z="" F  S Z=$O(^IBA(362.4,"AIFN"_IBIFN,Z)) Q:Z=""!'X1  D  Q:'X1
"RTN","IBCEF4",65,0)
 .. S Z0=0 F  S Z0=$O(^IBA(362.4,"AIFN"_IBIFN,Z,Z0)) Q:'Z0  D  Q:'X1
"RTN","IBCEF4",66,0)
 ... S Z00=$G(^IBA(362.4,Z0,0))
"RTN","IBCEF4",67,0)
 ... Q:$S($P(Z00,U,8)="":1,1:$L($P(Z00,U,8))=11)
"RTN","IBCEF4",68,0)
 ... I $P(Z00,U,9)'=4 S X1=0
"RTN","IBCEF4",69,0)
 ; Only continue if general edits are passed
"RTN","IBCEF4",70,0)
 I $$COB^IBCEF(IB)="S" D
"RTN","IBCEF4",71,0)
 . S COBINS=$P($G(^DGCR(399,IB,"M")),U,IBCOB+1)
"RTN","IBCEF4",72,0)
 . I 'COBINS Q
"RTN","IBCEF4",73,0)
 . I IBMCR S IBWHY=1,$P(^DGCR(399,IBIFN,"TX"),U,8)=1
"RTN","IBCEF4",74,0)
 I IBWHY S IBOK=0 G TXMTQ
"RTN","IBCEF4",75,0)
 S IBOK=$$EDIT(IBIFN,.IB,.IBWHY)
"RTN","IBCEF4",76,0)
 G:'IBOK TXMTQ
"RTN","IBCEF4",77,0)
 ;
"RTN","IBCEF4",78,0)
TXMTQ ;
"RTN","IBCEF4",79,0)
 I IBOK S IBOK=$G(^DIC(36,+IB(.07),3))
"RTN","IBCEF4",80,0)
 Q IBOK
"RTN","IBCEF4",81,0)
 ;
"RTN","IBCEF4",82,0)
MRASEC(IBIFN) ; Returns 1 if current bill is secondary to MCR WNR
"RTN","IBCEF4",83,0)
 N IBSEQ,IB,Z
"RTN","IBCEF4",84,0)
 S IB=0
"RTN","IBCEF4",85,0)
 ; Chk if MCR WNR is prev insurer with MRA on file
"RTN","IBCEF4",86,0)
 S IBSEQ=$$COBN^IBCEF(IBIFN)-1
"RTN","IBCEF4",87,0)
 S Z=$$MCRONBIL^IBEFUNC(IBIFN,IBSEQ) I +Z=1,$P(Z,U,2)=1,$$CHK^IBCEMU1(IBIFN) S IB=1
"RTN","IBCEF4",88,0)
 Q IB
"RTN","IBCEF4",89,0)
 ;
"RTN","IBCEF4",90,0)
EDIT(IBIFN,IB,IBWHY) ; Find, execute edits applying to bill to see if transmittable
"RTN","IBCEF4",91,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEF4",92,0)
 ; IB = array containing necessary data for xref search from bill
"RTN","IBCEF4",93,0)
 ;      subscripted by field # in file 364.4
"RTN","IBCEF4",94,0)
 ;
"RTN","IBCEF4",95,0)
 ;  Matrix entries:
"RTN","IBCEF4",96,0)
 ;    IB(.03): 1=EDI specific, 2=MRA specific
"RTN","IBCEF4",97,0)
 ;    IB(.04): 1=Outpatient or 2=inpatient only (currently defaults to 3)
"RTN","IBCEF4",98,0)
 ;    IB(.05): 1=Only institutional or 2=only professional
"RTN","IBCEF4",99,0)
 ;          X: Anything valid
"RTN","IBCEF4",100,0)
 ;
"RTN","IBCEF4",101,0)
 ;                 MRA-EDI    IN-OUT     INST-PROF
"RTN","IBCEF4",102,0)
 ;  Level          -------    ------     ---------
"RTN","IBCEF4",103,0)
 ;    1               X          X           X
"RTN","IBCEF4",104,0)
 ;    2               X          X        IB(.05)
"RTN","IBCEF4",105,0)
 ;    3               X       IB(.04)        X
"RTN","IBCEF4",106,0)
 ;    4               X       IB(.04)     IB(.05)
"RTN","IBCEF4",107,0)
 ;    5            IB(.03)       X           X
"RTN","IBCEF4",108,0)
 ;    6            IB(.03)       X        IB(.05) 
"RTN","IBCEF4",109,0)
 ;    7            IB(.03)    IB(.04)        X
"RTN","IBCEF4",110,0)
 ;    8            IB(.03)    IB(.04)     IB(.05)
"RTN","IBCEF4",111,0)
 ;
"RTN","IBCEF4",112,0)
 N IB0,IB1,IB2,IB3,IB4,IBDA,IBFT,IBPASS,IBSEQ,IBT,IBNOCK
"RTN","IBCEF4",113,0)
 I '$G(IB(.03)) S IBPASS=0 G EDITQ
"RTN","IBCEF4",114,0)
 S IBFT=$$FT^IBCEF(IBIFN)
"RTN","IBCEF4",115,0)
 ;
"RTN","IBCEF4",116,0)
 S IBPASS=1
"RTN","IBCEF4",117,0)
 F IBSEQ=1:1:8 D  Q:'IBPASS  ; Loop thru levels in matrix
"RTN","IBCEF4",118,0)
 . F IB1=1:1:3 Q:'IBPASS  F IB2=1:1:3 Q:'IBPASS  F IB3=1:1:3 Q:'IBPASS  D
"RTN","IBCEF4",119,0)
 .. S IB4=0 F  S IB4=$O(^IBE(364.4,"AD",IB1,IB2,IB3,IB4)) Q:'IB4  I $O(^(IB4,0)) D  Q:'IBPASS
"RTN","IBCEF4",120,0)
 ... S IBDA=0
"RTN","IBCEF4",121,0)
 ... F   S IBDA=$O(^IBE(364.4,"AD",IB1,IB2,IB3,IB4,IBDA)) Q:'IBDA  S IB0=$G(^IBE(364.4,IBDA,0)) I IB0'="",'$D(IBNOCK(IBDA)) D  Q:'IBPASS
"RTN","IBCEF4",122,0)
 .... I $P(IB0,U,2)>DT S IBNOCK(IBDA)="" Q  ; Not activated yet
"RTN","IBCEF4",123,0)
 .... I $P(IB0,U,6),$P(IB0,U,6)'>DT  S IBNOCK(IBDA)="" Q  ; Inactive
"RTN","IBCEF4",124,0)
 .... I $P(IB0,U,11),IB3'=3,$S(IBFT=3:IB3'=1,IBFT=2:IB3'=2,1:0) S IBNOCK(IBDA)="" Q  ; Form type not included - not used for form type rule (0)
"RTN","IBCEF4",125,0)
 .... I IB4=1,'$D(^IBE(364.4,IBDA,3,"B",+IB(.07))) S IBNOCK(IBDA)="" Q  ; Ins not included for rule
"RTN","IBCEF4",126,0)
 .... I IB4=2,$D(^IBE(364.4,IBDA,2,"B",+IB(.07))) S IBNOCK(IBDA)="" Q  ; Ins is excluded from rule
"RTN","IBCEF4",127,0)
 .... S IBT=$G(^IBE(364.4,IBDA,1))
"RTN","IBCEF4",128,0)
 .... ; Code can assume IBIFN, IBDA and IB(.03 thru .05 and .07) exist
"RTN","IBCEF4",129,0)
 .... I IBT'="" X IBT I '$T S IBPASS=0,IBWHY(0)=IBDA,IBWHY=5
"RTN","IBCEF4",130,0)
EDITQ Q IBPASS
"RTN","IBCEF4",131,0)
 ;
"RTN","IBCEF4",132,0)
STATUS(IBIFN) ; Function returns whether or not bill currently has a status
"RTN","IBCEF4",133,0)
 ;  message or EOB message not yet fully reviewed -
"RTN","IBCEF4",134,0)
 ; (only for transmittable bills)
"RTN","IBCEF4",135,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEF4",136,0)
 ; Returns:
"RTN","IBCEF4",137,0)
 ; 0 = None found
"RTN","IBCEF4",138,0)
 ; If found, returns a pieced string as follows:
"RTN","IBCEF4",139,0)
 ;
"RTN","IBCEF4",140,0)
 ;   [1] ien of transmit bill entry (file 364) associated with an
"RTN","IBCEF4",141,0)
 ;       entry in file 361 with an unreviewed status message
"RTN","IBCEF4",142,0)
 ;   [2] ien of transmit bill entry (file 364) associated with an
"RTN","IBCEF4",143,0)
 ;       entry in file 361.1 with an unreviewed EOB
"RTN","IBCEF4",144,0)
 ;
"RTN","IBCEF4",145,0)
 N IB,Z,Z0
"RTN","IBCEF4",146,0)
 S IB=""
"RTN","IBCEF4",147,0)
 S Z="" F  S Z=$O(^IBM(361,"B",IBIFN,Z),-1) Q:'Z  I $P($G(^IBM(361,Z,0)),U,9)<2,$P(^(0),U,11) S $P(IB,U)=$P(^(0),U,11) Q
"RTN","IBCEF4",148,0)
 ;
"RTN","IBCEF4",149,0)
 S Z="" F  S Z=$O(^IBM(361.1,"B",IBIFN,Z),-1) Q:'Z  I $P($G(^IBM(361.1,Z,0)),U,16)<2,$P(^(0),U,19) S $P(IB,U,2)=$P(^(0),U,19) Q
"RTN","IBCEF4",150,0)
 ;
"RTN","IBCEF4",151,0)
 Q IB
"RTN","IBCEF4",152,0)
 ;
"RTN","IBCEF4",153,0)
TEST(IBIFN) ; Returns 1 if bill IBIFN is a transmission test bill, 0 if not
"RTN","IBCEF4",154,0)
 Q +$S($G(^TMP("IBEDI_TEST_BATCH",$J)):1,1:+$P($G(^IBA(364,+$$LAST364(IBIFN),0)),U,7))
"RTN","IBCEF4",155,0)
 ;
"RTN","IBCEF7")
0^71^B49975711^B50002209
"RTN","IBCEF7",1,0)
IBCEF7 ;WOIFO/SS - FORMATTER AND EXTRACTOR SPECIFIC BILL FUNCTIONS ;8/6/03 10:56am
"RTN","IBCEF7",2,0)
 ;;2.0;INTEGRATED BILLING;**232,349**;21-MAR-94;Build 46
"RTN","IBCEF7",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF7",4,0)
 ;
"RTN","IBCEF7",5,0)
ALLPROV ;called from #364.5 entry "N-ALL CUR/OTH PROVIDER INFO"
"RTN","IBCEF7",6,0)
 I +$G(IBXSAVE("PROVINF",IBXIEN))=0 N IBZ D PROVIDER(IBXIEN,"C",.IBZ),PROVIDER(IBXIEN,"O",.IBZ) S IBXSAVE("PROVINF",IBXIEN)=IBXIEN M IBXSAVE("PROVINF",IBXIEN)=IBZ
"RTN","IBCEF7",7,0)
 Q
"RTN","IBCEF7",8,0)
 ;for PRV1
"RTN","IBCEF7",9,0)
 ;Input:
"RTN","IBCEF7",10,0)
 ; IB399 ien of #399
"RTN","IBCEF7",11,0)
PRV1(IB399) ;
"RTN","IBCEF7",12,0)
 N IBN,IBZ,IBZ1,IBZN,IBZD,IBRES,IBIND,IBDEF,IBDEFTYP,IBQ,IBFRMTYP,IBZNAME
"RTN","IBCEF7",13,0)
 S IBFRMTYP=+$$FT^IBCEF(IB399)
"RTN","IBCEF7",14,0)
 S IBN=0,IBIND=0,IBRES="",IBQ=0
"RTN","IBCEF7",15,0)
 S IBDEF=$P($G(^DGCR(399,IB399,"M1")),U,$$COBN^IBCEF(IB399)+1),IBDEFTYP=""
"RTN","IBCEF7",16,0)
 I IBDEF'="" S IBDEFTYP=$$SOP^IBCEP2B(IB399,"")
"RTN","IBCEF7",17,0)
 I IBDEFTYP'="",$$CHCKPRV1^IBCEF73($S(IBFRMTYP=2:2,IBFRMTYP=3:1,1:0),IBDEFTYP)=0 S (IBDEF,IBDEFTYP)=""
"RTN","IBCEF7",18,0)
 I IBDEF'="",IBDEFTYP'="" S IBIND=IBIND+2,$P(IBRES,U,IBIND)=(IBDEFTYP_U_IBDEF)
"RTN","IBCEF7",19,0)
 F  S IBN=$O(^IBE(355.97,IBN)) Q:+IBN=0!(IBQ=1)  D
"RTN","IBCEF7",20,0)
 . S IBZ=$G(^IBE(355.97,IBN,0)),IBZ1=$G(^(1))
"RTN","IBCEF7",21,0)
 . Q:$P(IBZ,"^",4)=""!$P(IBZ1,U,9)  ;if no FACILITY'S DEFAULT ID #
"RTN","IBCEF7",22,0)
 . Q:$P(IBZ1,"^",4)!(IBDEFTYP=$P(IBZ,U,3))
"RTN","IBCEF7",23,0)
 . S IBZN=$P(IBZ,"^",3),IBZNAME=$P(IBZ,"^",1)
"RTN","IBCEF7",24,0)
 . I IBFRMTYP=2 Q:IBZN="1A"!(IBZNAME="MEDICARE PART A")  ;1500
"RTN","IBCEF7",25,0)
 . I IBFRMTYP=3 Q:IBZN="1B"!(IBZNAME="MEDICARE PART B")  ;UB
"RTN","IBCEF7",26,0)
 . Q:$$CHCKPRV1^IBCEF73($S(IBFRMTYP=2:2,IBFRMTYP=3:1,1:0),IBZN)=0
"RTN","IBCEF7",27,0)
 . I $P(IBZ,"^",2)=0!($P(IBZ,"^",2)=2) D
"RTN","IBCEF7",28,0)
 . . S IBIND=IBIND+2
"RTN","IBCEF7",29,0)
 . . I IBIND>14 S IBQ=1 Q
"RTN","IBCEF7",30,0)
 . . S $P(IBRES,"^",IBIND)=IBZN_"^"_$P(IBZ,"^",4)
"RTN","IBCEF7",31,0)
 ;Remove any duplicate entries
"RTN","IBCEF7",32,0)
 N I,Q,QUAL,QUALC,IBRESTMP,SEQ
"RTN","IBCEF7",33,0)
 F I=2:2:($L(IBRES,"^")-1) D
"RTN","IBCEF7",34,0)
 . S QUAL=$P(IBRES,"^",I)
"RTN","IBCEF7",35,0)
 . I $G(IBRESTMP(QUAL))="" S IBRESTMP(QUAL)=$P(IBRES,"^",(I+1))
"RTN","IBCEF7",36,0)
 S Q=2
"RTN","IBCEF7",37,0)
 S I="",QUAL=""
"RTN","IBCEF7",38,0)
 K IBRES
"RTN","IBCEF7",39,0)
 S IBRES=""
"RTN","IBCEF7",40,0)
 S SEQ=0
"RTN","IBCEF7",41,0)
 F  S QUAL=$O(IBRESTMP(QUAL)) Q:QUAL=""  D
"RTN","IBCEF7",42,0)
 . S SEQ=SEQ+2
"RTN","IBCEF7",43,0)
 . S $P(IBRES,"^",SEQ)=QUAL,$P(IBRES,"^",(SEQ+1))=IBRESTMP(QUAL)
"RTN","IBCEF7",44,0)
 Q IBRES
"RTN","IBCEF7",45,0)
 ;
"RTN","IBCEF7",46,0)
 ; creates array of SUBSCR IDs for all "other insurances"
"RTN","IBCEF7",47,0)
 ;Input :
"RTN","IBCEF7",48,0)
 ; IBXIEN - ien in #399
"RTN","IBCEF7",49,0)
 ;Output:
"RTN","IBCEF7",50,0)
 ; IBZOUT(Z) - array with ien of #36 
"RTN","IBCEF7",51,0)
OTHSBID(IBXIEN,IBZOUT) ;
"RTN","IBCEF7",52,0)
 N Z,Z0,Z1,IBZ,C
"RTN","IBCEF7",53,0)
 D F^IBCEF("N-ALL INSURANCE CO 837 ID","IBZ")
"RTN","IBCEF7",54,0)
 F Z=1,2,3 S IBZ(Z)=$$POLICY^IBCEF(IBXIEN,2,$E("PST",Z))
"RTN","IBCEF7",55,0)
 K IBXDATA
"RTN","IBCEF7",56,0)
 S C=$$OTHINS1^IBCEF2(IBXIEN)
"RTN","IBCEF7",57,0)
 F Z=1,2 I $G(IBZ(Z))'="",$E(C,Z) D
"RTN","IBCEF7",58,0)
 . S IBZOUT(Z)=IBZ(+$E(C,Z))
"RTN","IBCEF7",59,0)
 Q
"RTN","IBCEF7",60,0)
 ;Input :
"RTN","IBCEF7",61,0)
 ; IBXIEN - ien in #399
"RTN","IBCEF7",62,0)
 ; IBP - # piece in address string : STR LINE1|STR LINE2|CITY|STATE|ZIP
"RTN","IBCEF7",63,0)
 ;Output:
"RTN","IBCEF7",64,0)
 ; IBARR - output array m by reference
"RTN","IBCEF7",65,0)
ELMADD2(IBXIEN,IBP,IBARR) ;
"RTN","IBCEF7",66,0)
 N IBZZZ,A,CHECK,IB1
"RTN","IBCEF7",67,0)
 I '$D(IBXSAVE("OTH_INSURED_ADDR")) D OTHADD2(IBXIEN,.IBZZZ) M IBXSAVE("OTH_INSURED_ADDR")=IBZZZ
"RTN","IBCEF7",68,0)
 S IB1=0
"RTN","IBCEF7",69,0)
 F  S IB1=$O(IBXSAVE("OTH_INSURED_ADDR",IB1)) Q:'IB1  D
"RTN","IBCEF7",70,0)
 . ;IF ANY PORTION OF ADDRESS IS NULL SET CHECK VALUE, ERASE ENTRY
"RTN","IBCEF7",71,0)
 . S CHECK=0
"RTN","IBCEF7",72,0)
 . F A=1,3,4,5 I $P(IBXSAVE("OTH_INSURED_ADDR",IB1),"|",A)="" S CHECK=1 K IBXSAVE("OTH_INSURED_ADDR",IB1) Q
"RTN","IBCEF7",73,0)
 . I 'CHECK D
"RTN","IBCEF7",74,0)
 . . I IBP=0 S IBARR(IB1)=$G(IBXSAVE("OTH_INSURED_ADDR",IB1)) Q
"RTN","IBCEF7",75,0)
 . . S IBARR(IB1)=$P($G(IBXSAVE("OTH_INSURED_ADDR",IB1)),"|",IBP)
"RTN","IBCEF7",76,0)
 Q
"RTN","IBCEF7",77,0)
 ;creates an array with address info for all other insured persons
"RTN","IBCEF7",78,0)
 ;Input :
"RTN","IBCEF7",79,0)
 ; IBXIEN - ien in #399
"RTN","IBCEF7",80,0)
 ;Output:
"RTN","IBCEF7",81,0)
 ; IBZOUT(Z) - array with STR LINE1|STR LINE2|CITY|STATE|ZIP 
"RTN","IBCEF7",82,0)
OTHADD2(IBXIEN,IBZOUT) ;
"RTN","IBCEF7",83,0)
 N C,Z,Z0,Z1,IBZ,IBZIP,IB1,IBDFN1
"RTN","IBCEF7",84,0)
 S IBZOUT=""
"RTN","IBCEF7",85,0)
 D OTHP36^IBCEF72(IBXIEN,.IBZ) ;array with iens of file #36
"RTN","IBCEF7",86,0)
 K IBXDATA
"RTN","IBCEF7",87,0)
 S C=$$OTHINS1^IBCEF2(IBXIEN)
"RTN","IBCEF7",88,0)
 F Z=1,2 I $G(IBZ(Z))'="",$E(C,Z) D
"RTN","IBCEF7",89,0)
 . S IBINS=+IBZ(+$E(C,Z))
"RTN","IBCEF7",90,0)
 . S IBDFN1=$P($G(^DGCR(399,IBXIEN,0)),"^",2)
"RTN","IBCEF7",91,0)
 . S IBZOUT(Z)=$$FR2PAT(IBDFN1,IBINS)
"RTN","IBCEF7",92,0)
 Q
"RTN","IBCEF7",93,0)
 ;Input:
"RTN","IBCEF7",94,0)
 ; IBDFN-patient ien
"RTN","IBCEF7",95,0)
 ; IBINS - input array with insurance pointers to 36
"RTN","IBCEF7",96,0)
 ;Output 
"RTN","IBCEF7",97,0)
 ; STR LINE1|STR LINE2|CITY|STATE|ZIP
"RTN","IBCEF7",98,0)
FR2PAT(IBDFN,IBINS) ;information about "other insured" address
"RTN","IBCEF7",99,0)
 N Z3,Z4,Z5,IBZIP
"RTN","IBCEF7",100,0)
 S Z3=$O(^DPT(IBDFN,.312,"B",$G(IBINS),0))
"RTN","IBCEF7",101,0)
 Q:+Z3=0 "||||"
"RTN","IBCEF7",102,0)
 S Z4=$G(^DPT(IBDFN,.312,Z3,3))
"RTN","IBCEF7",103,0)
 S IBZIP=$P($G(^DIC(5,+$P(Z4,"^",9),0)),"^",2)
"RTN","IBCEF7",104,0)
 S Z5=$P(Z4,"^",6,8)_"^"_IBZIP_"^"_$P(Z4,"^",10)
"RTN","IBCEF7",105,0)
 Q $TR(Z5,"^","|")
"RTN","IBCEF7",106,0)
 ;
"RTN","IBCEF7",107,0)
 ;Input :
"RTN","IBCEF7",108,0)
 ; IBXIEN - ien in #399
"RTN","IBCEF7",109,0)
 ; IBP - # piece in address string : STR LINE1|STR LINE2|CITY|STATE|ZIP
"RTN","IBCEF7",110,0)
 ; if IBP=0 then returns whole string
"RTN","IBCEF7",111,0)
 ;Output:
"RTN","IBCEF7",112,0)
 ; IBARR - output array m by reference
"RTN","IBCEF7",113,0)
ELMADDR(IBXIEN,IBP,IBARR) ;
"RTN","IBCEF7",114,0)
 N IB1,A,CHECK
"RTN","IBCEF7",115,0)
 D:'$D(IBXSAVE("OTH_PROV_ADDR")) OTHADDR(IBXIEN)
"RTN","IBCEF7",116,0)
 S IB1=0
"RTN","IBCEF7",117,0)
 F  S IB1=$O(IBXSAVE("OTH_PROV_ADDR",IB1)) Q:'IB1  D
"RTN","IBCEF7",118,0)
 . S CHECK=0
"RTN","IBCEF7",119,0)
 . ;EXCLUDE ADD LINE 2 SECOND PC SINCE IT'S OK FOR THAT TO BE EMPTY
"RTN","IBCEF7",120,0)
 . F A=1,3,4,5 I $P(IBXSAVE("OTH_PROV_ADDR",IB1),"|",A)="" D  Q
"RTN","IBCEF7",121,0)
 . . ;IF ANY PORTION OF ADDRESS IS NULL SET CHECK VALUE, ERASE ENTRY
"RTN","IBCEF7",122,0)
 . . S CHECK=1 K IBXSAVE("OTH_PROV_ADDR",IB1)
"RTN","IBCEF7",123,0)
 . I 'CHECK D
"RTN","IBCEF7",124,0)
 . . I IBP=0 S IBARR(IB1)=$G(IBXSAVE("OTH_PROV_ADDR",IB1)) Q
"RTN","IBCEF7",125,0)
 . . S IBARR(IB1)=$P($G(IBXSAVE("OTH_PROV_ADDR",IB1)),"|",IBP)
"RTN","IBCEF7",126,0)
 Q
"RTN","IBCEF7",127,0)
 ;
"RTN","IBCEF7",128,0)
 ;creates an array with address info for all insurances
"RTN","IBCEF7",129,0)
 ;Input :
"RTN","IBCEF7",130,0)
 ; IBXIEN - ien in #399
"RTN","IBCEF7",131,0)
 ;Output:
"RTN","IBCEF7",132,0)
 ; IBXSAVE("OTH_PROV_ADDR",Z) 
"RTN","IBCEF7",133,0)
OTHADDR(IBXIEN) ;
"RTN","IBCEF7",134,0)
 N C,Z,Z0,Z1,IBZ,IBZIP,IB1,IBINS
"RTN","IBCEF7",135,0)
 D F^IBCEF("N-OTH INSURANCE CO IEN 36") ;array with iens of file #36
"RTN","IBCEF7",136,0)
 M IBZ=IBXDATA
"RTN","IBCEF7",137,0)
 K IBXDATA
"RTN","IBCEF7",138,0)
 S C=$$OTHINS1^IBCEF2(IBXIEN)
"RTN","IBCEF7",139,0)
 F Z=1,2 I $G(IBZ(Z))'="",$E(C,Z) D
"RTN","IBCEF7",140,0)
 . S IBINS=+IBZ(+$E(C,Z))
"RTN","IBCEF7",141,0)
 . S IBZIP=$P($G(^DIC(5,+$P($G(^DIC(36,IBINS,.11)),"^",5),0)),"^",2)
"RTN","IBCEF7",142,0)
 . S IB1=$P($G(^DIC(36,IBINS,.11)),"^",1,2)_"^"_$P($G(^DIC(36,IBINS,.11)),"^",4)_"^"_IBZIP_"^"_$P($G(^DIC(36,IBINS,.11)),"^",6)
"RTN","IBCEF7",143,0)
 . S IBXSAVE("OTH_PROV_ADDR",Z)=$TR(IB1,"^","|")
"RTN","IBCEF7",144,0)
 Q
"RTN","IBCEF7",145,0)
 ;
"RTN","IBCEF7",146,0)
 ;Retrieves pointer to get info about the service provider
"RTN","IBCEF7",147,0)
 ;IBIEN399 - ien in #399
"RTN","IBCEF7",148,0)
 ;IBFUNC -function (3-RENDERING,etc)
"RTN","IBCEF7",149,0)
 ;Output: VARIABLE POINTER (PTR;file_root)
"RTN","IBCEF7",150,0)
PROVPTR(IBIEN399,IBFUNC) ;
"RTN","IBCEF7",151,0)
 N IBN
"RTN","IBCEF7",152,0)
 S IBN=$O(^DGCR(399,IBIEN399,"PRV","B",IBFUNC,0))
"RTN","IBCEF7",153,0)
 I +IBN=0 Q 0
"RTN","IBCEF7",154,0)
 Q $P($G(^DGCR(399,IBIEN399,"PRV",+IBN,0)),"^",2)
"RTN","IBCEF7",155,0)
 ;
"RTN","IBCEF7",156,0)
 ;Retrieves SSN from #200
"RTN","IBCEF7",157,0)
 ;IBPTR-  VARIABLE POINTER to #200
"RTN","IBCEF7",158,0)
PROVSSN(IBIEN399) ;
"RTN","IBCEF7",159,0)
 N IBRETVAL S IBRETVAL=""
"RTN","IBCEF7",160,0)
 N IBPTR,IBFT
"RTN","IBCEF7",161,0)
 F IBFT=1:1:9 D
"RTN","IBCEF7",162,0)
 . S IBPTR=$$PROVPTR(IBIEN399,IBFT)
"RTN","IBCEF7",163,0)
 . S $P(IBRETVAL,"^",IBFT)=$$GETSSN^IBCEF72(IBPTR)
"RTN","IBCEF7",164,0)
 Q IBRETVAL
"RTN","IBCEF7",165,0)
 ;
"RTN","IBCEF7",166,0)
 ;Input:
"RTN","IBCEF7",167,0)
 ; IBPTR- ptr to ^VA(200 or ^IBA(355.93
"RTN","IBCEF7",168,0)
 ;Output:
"RTN","IBCEF7",169,0)
 ; SSN or null
"RTN","IBCEF7",170,0)
GETNMEL(IBFULL,IBEL) ;Get name element
"RTN","IBCEF7",171,0)
 D NAMECOMP^XLFNAME(.IBFULL)
"RTN","IBCEF7",172,0)
 Q $G(IBFULL(IBEL))
"RTN","IBCEF7",173,0)
 ;-
"RTN","IBCEF7",174,0)
 ;PROVIDER
"RTN","IBCEF7",175,0)
 ;Input:
"RTN","IBCEF7",176,0)
 ; IB399 - ien of #399
"RTN","IBCEF7",177,0)
 ; IBPROV:
"RTN","IBCEF7",178,0)
 ;   "C"- to get info for CURRENT provider
"RTN","IBCEF7",179,0)
 ;   "O"- to get info for all others (in this case the array will contain info fot two providers
"RTN","IBCEF7",180,0)
 ; IBRES - array for results (by reference)
"RTN","IBCEF7",181,0)
 ;
"RTN","IBCEF7",182,0)
 ;Output:
"RTN","IBCEF7",183,0)
 ; IBRES - array to get back info (by reference)
"RTN","IBCEF7",184,0)
 ; IBRES(IBPROV,PRNUM,PRTYPE,SEQ#)=PROV^INSUR^IDTYPE^ID^FORMTYP^CARETYP
"RTN","IBCEF7",185,0)
 ; where:
"RTN","IBCEF7",186,0)
 ; IBPROV - see input parameter
"RTN","IBCEF7",187,0)
 ; PRNUM: 1=primary insurance provider, 2= secondary, 3 -tretiary
"RTN","IBCEF7",188,0)
 ; PRTYPE: Provider type(FUNCTION) 
"RTN","IBCEF7",189,0)
 ; SEQ# : sequence number (1st is used for ID1, 2nd - for ID2, etc)
"RTN","IBCEF7",190,0)
 ; PROV : provider/VARIABLEPTR
"RTN","IBCEF7",191,0)
 ; INSUR: Insurance PTR #36 or NONE
"RTN","IBCEF7",192,0)
 ; IDTYPE: ID type
"RTN","IBCEF7",193,0)
 ; ID: ID 
"RTN","IBCEF7",194,0)
 ; FORMTYP: Form type 1=UB,2=1500
"RTN","IBCEF7",195,0)
 ; CARETYP: Care type 0=both inp/outp,1=inpatient, 2=outpatient
"RTN","IBCEF7",196,0)
PROVIDER(IB399,IBPROV,IBRES) ;
"RTN","IBCEF7",197,0)
 N IBCURR,IBZ,IBRESARR
"RTN","IBCEF7",198,0)
 S IBRESARR=""
"RTN","IBCEF7",199,0)
 S IBCURR=$$COB^IBCEF(IB399) ;current bill payer sequence
"RTN","IBCEF7",200,0)
 Q:IBPROV="A"  ;PATIENT's bill
"RTN","IBCEF7",201,0)
 I IBPROV="C" D
"RTN","IBCEF7",202,0)
 . D:$$ISINSUR^IBCEF71(IBCURR,IB399) PROVINF(IB399,$S(IBCURR="T":3,IBCURR="S":2,IBCURR="P":1,1:1),.IBRESARR,1,IBPROV)
"RTN","IBCEF7",203,0)
 I IBPROV="O" D
"RTN","IBCEF7",204,0)
 . I IBCURR="P" D:$$ISINSUR^IBCEF71("S",IB399) PROVINF(IB399,2,.IBRESARR,1,IBPROV) D:$$ISINSUR^IBCEF71("T",IB399) PROVINF(IB399,3,.IBRESARR,2,IBPROV)
"RTN","IBCEF7",205,0)
 . I IBCURR="S" D:$$ISINSUR^IBCEF71("P",IB399) PROVINF(IB399,1,.IBRESARR,1,IBPROV) D:$$ISINSUR^IBCEF71("T",IB399) PROVINF(IB399,3,.IBRESARR,2,IBPROV)
"RTN","IBCEF7",206,0)
 . I IBCURR="T" D:$$ISINSUR^IBCEF71("P",IB399) PROVINF(IB399,1,.IBRESARR,1,IBPROV) D:$$ISINSUR^IBCEF71("S",IB399) PROVINF(IB399,2,.IBRESARR,2,IBPROV)
"RTN","IBCEF7",207,0)
 M IBRES(IBPROV)=IBRESARR
"RTN","IBCEF7",208,0)
 Q
"RTN","IBCEF7",209,0)
 ;
"RTN","IBCEF7",210,0)
PROVINF(IB399,IBPRNUM,IBRES,IBSORT,IBINSTP) ;
"RTN","IBCEF7",211,0)
 D PROVINF^IBCEF74(IB399,IBPRNUM,.IBRES,IBSORT,IBINSTP)
"RTN","IBCEF7",212,0)
 Q
"RTN","IBCEF7",213,0)
 ;
"RTN","IBCEF7",214,0)
PSPRV(IBIFN) ; Returns information for bill ien IBIFN for purchased svc 
"RTN","IBCEF7",215,0)
 ; Returns 4 digit data in following format:
"RTN","IBCEF7",216,0)
 ;  1st digit: 0 if not outside facility
"RTN","IBCEF7",217,0)
 ;             1 if outside facility
"RTN","IBCEF7",218,0)
 ;  2nd digit: 0 if not non-VA provider for rendering/attending
"RTN","IBCEF7",219,0)
 ;             1 if non-VA provider for rendering/attending
"RTN","IBCEF7",220,0)
 ;  3rd digit: 0 if not purchased svc
"RTN","IBCEF7",221,0)
 ;             1 if purchased svc
"RTN","IBCEF7",222,0)
 ;  4th digit: 0 if 1500 bill
"RTN","IBCEF7",223,0)
 ;             1 if UB bill
"RTN","IBCEF7",224,0)
 N IBSVC,Z,Z0,IBU2
"RTN","IBCEF7",225,0)
 S IBSVC="000"_+$$INSFT^IBCEU5(IBIFN),IBU2=$G(^DGCR(399,IBIFN,"U2"))
"RTN","IBCEF7",226,0)
 I $P(IBU2,U,10) S $E(IBSVC,1)=1 ; NON-VA FACILITY
"RTN","IBCEF7",227,0)
 S Z=($$FT^IBCEF(IBIFN)=3)+3,Z0=+$O(^DGCR(399,IBIFN,"PRV","B",Z,0))
"RTN","IBCEF7",228,0)
 I $P($G(^DGCR(399,IBIFN,"PRV",Z0,0)),U,2)["IBA(355.93" S $E(IBSVC,2)=1
"RTN","IBCEF7",229,0)
 I $P(IBU2,U,11)>0,$P(IBU2,U,11)'>2 S $E(IBSVC,3)=1
"RTN","IBCEF7",230,0)
PSPRVQ Q IBSVC
"RTN","IBCEF7",231,0)
 ;
"RTN","IBCEF7",232,0)
CHKADD ;CHECK ALL ADDRESS ELEMENTS PRESENT IF NOT KILL ALL ADDRESS ELEMENTS
"RTN","IBCEF7",233,0)
 ;EXPECT IBXSAVE("CADR") AS SOURCE ARRAY
"RTN","IBCEF7",234,0)
 N Z,CHECK
"RTN","IBCEF7",235,0)
 S Z="",CHECK=0
"RTN","IBCEF7",236,0)
 F Z=1,4,5,6 D
"RTN","IBCEF7",237,0)
 . I $P($G(IBXSAVE("CADR")),"^",Z)="" S CHECK=1
"RTN","IBCEF7",238,0)
 I CHECK=1 S IBXSAVE("CADR")=""
"RTN","IBCEF7",239,0)
 Q
"RTN","IBCEF7",240,0)
 ;
"RTN","IBCEF71")
0^72^B63782219^B63861982
"RTN","IBCEF71",1,0)
IBCEF71 ;WOIFO/SS - FORMATTER AND EXTRACTOR SPECIFIC BILL FUNCTIONS ;31-JUL-03
"RTN","IBCEF71",2,0)
 ;;2.0;INTEGRATED BILLING;**232,155,288,320,349**;21-MAR-94;Build 46
"RTN","IBCEF71",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF71",4,0)
 ;
"RTN","IBCEF71",5,0)
 ;---------
"RTN","IBCEF71",6,0)
 ;OTHPAYC - from FORMAT code for OP1,OP2 ...
"RTN","IBCEF71",7,0)
 ;Input:
"RTN","IBCEF71",8,0)
 ;IBXIEN - ien #399
"RTN","IBCEF71",9,0)
 ;IBSAVE - "in" array (i.e. IBXSAVE)
"RTN","IBCEF71",10,0)
 ;IBDATA - "out" array (i.e. IBXDATA)
"RTN","IBCEF71",11,0)
 ;IBFUNC - FUNCTION from #399 (1-refering,2-operating,etc)
"RTN","IBCEF71",12,0)
 ;IBVAL - output value
"RTN","IBCEF71",13,0)
 ;Output:
"RTN","IBCEF71",14,0)
 ; IBDATA with formatted output
"RTN","IBCEF71",15,0)
OTHPAYC(IBXIEN,IBSAVE,IBDATA,IBFUNC,IBVAL) ;
"RTN","IBCEF71",16,0)
 N IB1,IB2,IBINS,IBFL
"RTN","IBCEF71",17,0)
 S IBFL=$S(IBFUNC=3!(IBFUNC=4):1,1:0)
"RTN","IBCEF71",18,0)
 F IB1=1,2 D
"RTN","IBCEF71",19,0)
 . Q:'$$ISINSUR($G(IBSAVE("PROVINF",IBXIEN,"O",IB1)),IBXIEN)  ;don't create anything if no such insurance
"RTN","IBCEF71",20,0)
 . I IBFL S IBFUNC=$S($O(IBSAVE("PROVINF",IBXIEN,"O",IB1,3,0)):3,1:4)
"RTN","IBCEF71",21,0)
 . S:$O(IBSAVE("PROVINF",IBXIEN,"O",IB1,IBFUNC,0)) IBDATA(IB1)=IBVAL
"RTN","IBCEF71",22,0)
 Q
"RTN","IBCEF71",23,0)
 ;----
"RTN","IBCEF71",24,0)
 ;OTHPAYV - called from FORMAT code for OP1,OP2 ...
"RTN","IBCEF71",25,0)
 ;Input:
"RTN","IBCEF71",26,0)
 ;IBXIEN - ien #399
"RTN","IBCEF71",27,0)
 ;IBSAVE - "in" array (i.e. IBXSAVE)
"RTN","IBCEF71",28,0)
 ;IBDATA - "out" array (i.e. IBXDATA)
"RTN","IBCEF71",29,0)
 ;IBFUNC - FUNCTION from #399 (1-refering, 2-operating, etc)
"RTN","IBCEF71",30,0)
 ;IBSEQN - seq # of ID/QUAL
"RTN","IBCEF71",31,0)
 ;IBFLDTYP
"RTN","IBCEF71",32,0)
 ; "I" - ID  "Q" - ID QUAL
"RTN","IBCEF71",33,0)
 ;Output:
"RTN","IBCEF71",34,0)
 ; IBDATA with formatted output
"RTN","IBCEF71",35,0)
OTHPAYV(IBXIEN,IBSAVE,IBDATA,IBFUNC,IBFLDTYP,IBSEQN) ;
"RTN","IBCEF71",36,0)
 N IB1,IB2,IBPIECE,IBINS,IBFL
"RTN","IBCEF71",37,0)
 S IBFL=$S(IBFUNC=3!(IBFUNC=4):1,1:0)
"RTN","IBCEF71",38,0)
 S IBPIECE=$S(IBFLDTYP="I":4,IBFLDTYP="Q":3,1:3)
"RTN","IBCEF71",39,0)
 F IB1=1,2 D
"RTN","IBCEF71",40,0)
 . Q:'$$ISINSUR($G(IBSAVE("PROVINF",IBXIEN,"O",IB1)),IBXIEN)  ;don't create anything if there is no such insurance
"RTN","IBCEF71",41,0)
 . I IBFL S IBFUNC=$S($O(IBSAVE("PROVINF",IBXIEN,"O",IB1,3,0)):3,1:4),IBFL=0
"RTN","IBCEF71",42,0)
 . S IBDATA(IB1)=$P($G(IBSAVE("PROVINF",IBXIEN,"O",IB1,IBFUNC,IBSEQN)),"^",IBPIECE)
"RTN","IBCEF71",43,0)
 Q
"RTN","IBCEF71",44,0)
 ;
"RTN","IBCEF71",45,0)
 ;chk for ins
"RTN","IBCEF71",46,0)
 ;Input:
"RTN","IBCEF71",47,0)
 ; IBINS = "P","S","T"
"RTN","IBCEF71",48,0)
 ; IBXIEN - ien file #399
"RTN","IBCEF71",49,0)
 ;Output:
"RTN","IBCEF71",50,0)
 ; returns 1-exists , 0-doesn't
"RTN","IBCEF71",51,0)
ISINSUR(IBINS,IBXIEN) ;
"RTN","IBCEF71",52,0)
 N IBINSNOD
"RTN","IBCEF71",53,0)
 S IBINSNOD=$S(IBINS="P":"I1",IBINS="S":"I2",IBINS="T":"I3",1:"")
"RTN","IBCEF71",54,0)
 I IBINSNOD="" Q 0
"RTN","IBCEF71",55,0)
 Q $D(^DGCR(399,IBXIEN,IBINSNOD))
"RTN","IBCEF71",56,0)
 ;
"RTN","IBCEF71",57,0)
 ;---PRACT----
"RTN","IBCEF71",58,0)
 ;Get list of all 355.9 or 355.93 records for prov
"RTN","IBCEF71",59,0)
 ;Input: 
"RTN","IBCEF71",60,0)
 ;IB399INS - ins co for bill to match PRACTIONER from 355.9
"RTN","IBCEF71",61,0)
 ;IB399FRM - form type (0=unknwn/both,1=UB,2=1500) to 
"RTN","IBCEF71",62,0)
 ;   match PRACTIONER from 355.9
"RTN","IBCEF71",63,0)
 ;IB399CAR - BILL CARE (0=unknwn or both inp/outp,1=inpatient,
"RTN","IBCEF71",64,0)
 ;   2=outpatient/3=Rx) to match PROV from 355.9
"RTN","IBCEF71",65,0)
 ;    OR   - DIVISION PTR to file 40.8 for entries in file 355.92
"RTN","IBCEF71",66,0)
 ;IBPROV - VARIABLE PTR VA prov
"RTN","IBCEF71",67,0)
 ;IBARR - array by reference for result
"RTN","IBCEF71",68,0)
 ;IBPROVTP- function (2-operating, 3-RENDERING,etc 0-facility)
"RTN","IBCEF71",69,0)
 ;IBINSTP - "C" -current ins , "O"-other
"RTN","IBCEF71",70,0)
 ;IBFILE - 355.92 for facility ids or 355.9 (default) for provider ids
"RTN","IBCEF71",71,0)
 ;IBINS - 1 if to include ids for the ins co for all provs
"RTN","IBCEF71",72,0)
 ;Ouput:
"RTN","IBCEF71",73,0)
 ;IBARR - array by ref for result
"RTN","IBCEF71",74,0)
 ; prov var ptr^ins ptr^X12 id cd^ID^form typ^care typ or division ptr^st ptr^id rec ptr^id type ptr
"RTN","IBCEF71",75,0)
PRACT(IB399INS,IB399FRM,IB399CAR,IBPROV,IBARR,IBPROVTP,IBINSTP,IBFILE,IBINS) ;
"RTN","IBCEF71",76,0)
 N IB1,IB2,IBDAT,IBF,IBFX,IB3559,IBINSCO,IBFRMTYP,IBIDTYP,IBID,IBIDT,IBDIV,IBQ,IBS1,IBS2,IBARRX,Z,Z1,Z2,IBCARE
"RTN","IBCEF71",77,0)
 I $G(IBFILE)="" S IBFILE=355.9
"RTN","IBCEF71",78,0)
 S IBINS=$G(IBINS)
"RTN","IBCEF71",79,0)
 S (IBARR,IB3559,IB1)=0
"RTN","IBCEF71",80,0)
 F IBF="",1 Q:IBF=1&$S(IBFILE'=355.9:1,1:'IBINS)  S IBFX=IBFILE_IBF F IB2=1:1 S IB3559=$O(^IBA(IBFX,"B",$S(IBFILE=355.9&(IBF=""):IBPROV,1:IB399INS),IB3559)) Q:IB3559=""  D
"RTN","IBCEF71",81,0)
 . S IBINSCO=$P($G(^IBA(IBFX,IB3559,0)),"^",$S(IBFILE=355.9&(IBF=""):2,1:1)) ;ins co. ptr
"RTN","IBCEF71",82,0)
 . I IBINSCO'="" I IBINSCO'=IB399INS Q  ;exclude if different ins
"RTN","IBCEF71",83,0)
 . S:IBINSCO="" IBINSCO="NONE" ;NONE will be included in the array
"RTN","IBCEF71",84,0)
 . S IBFRMTYP=+$P($G(^IBA(IBFX,IB3559,0)),"^",4) ;form type (0=both,1=UB,2=1500)
"RTN","IBCEF71",85,0)
 . I '(IBFRMTYP=0!(IB399FRM=0)) Q:IBFRMTYP'=IB399FRM  ;exclude if not "both" and different
"RTN","IBCEF71",86,0)
 . S IBCARE=+$P($G(^IBA(IBFX,IB3559,0)),"^",5) ;0=both(inp and outp),1=inp,2=outp,3=prescr  -- OR -- division ptr
"RTN","IBCEF71",87,0)
 . I $S(IBFILE=355.92:0,1:IBCARE=3) I IB399CAR'=3 Q  ; Id is only for Rx
"RTN","IBCEF71",88,0)
 . I $S(IBFILE=355.92:0,1:IBCARE=1!(IBCARE=2)) I IB399CAR=1!(IB399CAR=2) Q:IBCARE'=IB399CAR  ;both is OK
"RTN","IBCEF71",89,0)
 . I IBFILE=355.92,IBCARE Q:IB399CAR'=IBCARE  ; Division doesn't match
"RTN","IBCEF71",90,0)
 . S IBIDTYP=+$P($G(^IBA(IBFX,IB3559,0)),"^",6) ;prov ID type
"RTN","IBCEF71",91,0)
 . I IBFILE=355.9,IBIDTYP=$$TAXID^IBCEP8(),$S(IBPROV["VA(200":1,1:$P($G(^IBA(355.93,+IBPROV,0)),U,2)=2) Q  ; Don't extract tax id # id for indiv prov
"RTN","IBCEF71",92,0)
 . S IBIDT=IBIDTYP
"RTN","IBCEF71",93,0)
 . S IBIDTYP=$P($G(^IBE(355.97,IBIDTYP,0)),"^",3)
"RTN","IBCEF71",94,0)
 . Q:$P($G(^IBE(355.97,+IBIDT,1)),U,9)
"RTN","IBCEF71",95,0)
 . Q:IBFILE=355.9&(IBIDTYP="X4")  ;exclude CLIA #
"RTN","IBCEF71",96,0)
 . S IBID=$P($G(^IBA(IBFX,IB3559,0)),"^",7) ;prov ID value
"RTN","IBCEF71",97,0)
 . I $G(IBPROVTP)'="",$G(IBINSTP)'="",IBPROVTP'=0 I '$$CHCKSEC^IBCEF73(IB399FRM,IBPROVTP,IBINSTP,IBIDTYP) Q  ; No qualifier chk for fac
"RTN","IBCEF71",98,0)
 . I IBID'="" S IBDAT=IBPROV_"^"_IBINSCO_"^"_IBIDTYP_"^"_IBID_"^"_IBFRMTYP_"^"_IBCARE_"^"_"^"_IB3559_U_IBIDT,IBS2=$S(IBFX'=355.91:"",1:"INS DEF^")_IB3559
"RTN","IBCEF71",99,0)
 . I IBFILE'=355.92,IBID'="",IB399CAR=3 S IBQ=0 D  Q:IBQ
"RTN","IBCEF71",100,0)
 .. I $G(IBARRX(IBIDT))!(IBCARE=1) S IBQ=1 Q
"RTN","IBCEF71",101,0)
 .. I IBCARE=3&(IB399CAR=3) S IBARRX(IBIDT)=1 Q  ; Rx match
"RTN","IBCEF71",102,0)
 .. I IBCARE=0!(IBCARE=2) S IBARRX(IBIDT,IBINSCO,IBS2)=IBDAT,IBQ=1 Q
"RTN","IBCEF71",103,0)
 . I IBID'="" S IBARR(IBINSCO,IBS2)=IBDAT
"RTN","IBCEF71",104,0)
 ;
"RTN","IBCEF71",105,0)
 I IB399CAR=3 S Z=0 F  S Z=$O(IBARRX(Z)) Q:'Z  I '$G(IBARRX(Z)) D
"RTN","IBCEF71",106,0)
 . S Z1="" F  S Z1=$O(IBARRX(Z,Z1)) Q:Z1=""  S Z2="" F  S Z2=$O(IBARRX(Z,Z1,Z2)) Q:Z2=""  S IBARR(Z1,Z2)=IBARRX(Z,Z1,Z2)
"RTN","IBCEF71",107,0)
 ;
"RTN","IBCEF71",108,0)
 I IBPROV["VA(200," D  ; Get lic #s from file 2 for VA providers
"RTN","IBCEF71",109,0)
 . N Z,IBLIC
"RTN","IBCEF71",110,0)
 . S IBLIC=+IBPROV,IBLIC=$$GETLIC^IBCEP5D(.IBLIC)
"RTN","IBCEF71",111,0)
 . S IBIDTYP=$P($G(^IBE(355.97,+$$STLIC^IBCEP8(),0)),U,3)
"RTN","IBCEF71",112,0)
 . S Z=0 F  S Z=$O(IBLIC(Z)) Q:'Z  S:$$CHCKSEC^IBCEF73(IB399FRM,IBPROVTP,IBINSTP,IBIDTYP) IBARR("NONE","LIC"_Z_"^"_IBPROV)=IBPROV_U_"NONE"_U_IBIDTYP_U_IBLIC(Z)_U_"0"_U_"0"_U_Z_U_U_+$$STLIC^IBCEP8()
"RTN","IBCEF71",113,0)
 I IBPROV["IBA(355.93" D
"RTN","IBCEF71",114,0)
 . Q:$P($G(^IBA(355.93,+IBPROV,0)),U,12)=""
"RTN","IBCEF71",115,0)
 . S IBIDTYP=$P($G(^IBE(355.97,+$$STLIC^IBCEP8(),0)),U,3)
"RTN","IBCEF71",116,0)
 . I $$CHCKSEC^IBCEF73(IB399FRM,IBPROVTP,IBINSTP,IBIDTYP) D
"RTN","IBCEF71",117,0)
 . . S IBARR("NONE","LIC"_$P($G(^DIC(5,+$P(^IBA(355.93,+IBPROV,0),U,7),0)),U,2)_"^"_IBPROV)=IBPROV_U_"NONE"_U_IBIDTYP_U_$P(^IBA(355.93,+IBPROV,0),U,12)_U_"0"_U_"0"_U_$P(^IBA(355.93,+IBPROV,0),U,7)_U_U_+IBPROV
"RTN","IBCEF71",118,0)
 Q
"RTN","IBCEF71",119,0)
 ;
"RTN","IBCEF71",120,0)
ALLPRFAC(IBXIEN,IBXSAVE) ; Return all non-VA/outside facility prov ids
"RTN","IBCEF71",121,0)
 ; and all VA alternate prov ids
"RTN","IBCEF71",122,0)
 ; IBXIEN = ien file 399
"RTN","IBCEF71",123,0)
 ; IBXSAVE = subscripted array returned
"RTN","IBCEF71",124,0)
 N IBPROV,IBFRMTYP,IBCARE,IBRETARR,IBRET1,IBCOBN,Z,Z0,Z1,ZZ
"RTN","IBCEF71",125,0)
 K IBXSAVE("PROVINF_FAC",IBXIEN) ; Always rebuild this
"RTN","IBCEF71",126,0)
 S IBCOBN=+$$COBN^IBCEF(IBXIEN)
"RTN","IBCEF71",127,0)
 S IBFRMTYP=$$FT^IBCEF(IBXIEN),IBFRMTYP=$S(IBFRMTYP=2:2,IBFRMTYP=3:1,1:0)
"RTN","IBCEF71",128,0)
 S IBPROV=$P($G(^DGCR(399,IBXIEN,"U2")),U,10)
"RTN","IBCEF71",129,0)
 ; IB patch 320 - Build IBPROV variable better when a non-VA facility exists
"RTN","IBCEF71",130,0)
 I IBPROV S IBPROV=IBPROV_";IBA(355.93,"
"RTN","IBCEF71",131,0)
 I 'IBPROV S IBCARE=$P($G(^DGCR(399,IBXIEN,0)),U,22)
"RTN","IBCEF71",132,0)
 I IBPROV D
"RTN","IBCEF71",133,0)
 . S IBCARE=$S($$ISRX^IBCEF1(IBXIEN):3,1:0) ;if Rx refill bill
"RTN","IBCEF71",134,0)
 . S:IBCARE=0 IBCARE=$$INPAT^IBCEF(IBXIEN,1) S:'IBCARE IBCARE=2 ;1-inp, 2-out
"RTN","IBCEF71",135,0)
 F Z=1:1:3 K IBRETARR I $G(^DGCR(399,IBXIEN,"I"_Z)) D
"RTN","IBCEF71",136,0)
 . D PRACT(+^DGCR(399,IBXIEN,"I"_Z),IBFRMTYP,IBCARE,IBPROV,.IBRETARR,0,$S(Z=IBCOBN:"C",1:"O"),$S('IBPROV:355.92,1:355.9))
"RTN","IBCEF71",137,0)
 . K IBRET1
"RTN","IBCEF71",138,0)
 . S Z0="" F  S Z0=$O(IBRETARR(Z0)) Q:Z0=""  S Z1="" F  S Z1=$O(IBRETARR(Z0,Z1)) Q:Z1=""  D
"RTN","IBCEF71",139,0)
 .. ; Sort by div/id type
"RTN","IBCEF71",140,0)
 .. S IBRET1($S(IBPROV:0,1:+$P(IBRETARR(Z0,Z1),U,6)),+$P(IBRETARR(Z0,Z1),U,9))=IBRETARR(Z0,Z1)
"RTN","IBCEF71",141,0)
 .. Q
"RTN","IBCEF71",142,0)
 . ;
"RTN","IBCEF71",143,0)
 . S Z0=$O(IBRET1(""),-1) Q:Z0=""  D
"RTN","IBCEF71",144,0)
 .. ; IB patch 320 - loop thru all ID's
"RTN","IBCEF71",145,0)
 .. S Z1="" F  S Z1=$O(IBRET1(Z0,Z1)) Q:Z1=""  D
"RTN","IBCEF71",146,0)
 ... I Z=IBCOBN S IBXSAVE("PROVINF_FAC",IBXIEN,"C",1,0,$O(IBXSAVE("PROVINF_FAC",IBXIEN,"C",1,0," "),-1)+1)=IBRET1(Z0,Z1) Q
"RTN","IBCEF71",147,0)
 ... S ZZ=$S(Z=1:1,Z=2:(IBCOBN=3)+1,1:2)
"RTN","IBCEF71",148,0)
 ... S IBXSAVE("PROVINF_FAC",IBXIEN,"O",ZZ,0,$O(IBXSAVE("PROVINF_FAC",IBXIEN,"O",ZZ,0," "),-1)+1)=IBRET1(Z0,Z1),IBXSAVE("PROVINF_FAC",IBXIEN,"O",ZZ)=$E("PST",Z)
"RTN","IBCEF71",149,0)
 ... Q
"RTN","IBCEF71",150,0)
 .. Q
"RTN","IBCEF71",151,0)
 . Q
"RTN","IBCEF71",152,0)
 ;
"RTN","IBCEF71",153,0)
 S IBXSAVE("PROVINF_FAC",IBXIEN)=IBXIEN,IBXSAVE("PROVINF_FAC",IBXIEN,"C",1)=$E("PST",IBCOBN)
"RTN","IBCEF71",154,0)
 Q
"RTN","IBCEF71",155,0)
 ;
"RTN","IBCEF71",156,0)
OTHID(IBXSAVE,IBXDATA,IBXIEN,PRIDSEQ,PRTYP,IBQ,IBFAC) ; From data in IBXSAVE,
"RTN","IBCEF71",157,0)
 ;  determine id or qualifier to output in the 837 records OP*
"RTN","IBCEF71",158,0)
 ; Returns IBXDATA array IBXDATA(n)=data
"RTN","IBCEF71",159,0)
 ; IBXIEN = ien of the bill-file 399
"RTN","IBCEF71",160,0)
 ; PRIDSEQ = sequence of the payer id needed
"RTN","IBCEF71",161,0)
 ; PRTYP = provider type to check for data
"RTN","IBCEF71",162,0)
 ; IBQ = 1 if qualifier needed, 0/null if id needed
"RTN","IBCEF71",163,0)
 ; IBFAC = 1 if facility id, 0 for individual provider id
"RTN","IBCEF71",164,0)
 ; 
"RTN","IBCEF71",165,0)
 N Z,Z0,Z1
"RTN","IBCEF71",166,0)
 S Z0="PROVINF"_$S('$G(IBFAC):"",1:"_FAC"),Z1=$S($G(IBQ):3,1:4)
"RTN","IBCEF71",167,0)
 S Z=0 F  S Z=$O(IBXSAVE("OSQ",Z)) Q:'Z  D
"RTN","IBCEF71",168,0)
 . I $P($G(IBXSAVE(Z0,IBXIEN,"O",Z,+$G(PRTYP),+$G(PRIDSEQ))),U,4)'="" S IBXDATA(IBXSAVE("OSQ",Z))=$P(IBXSAVE(Z0,IBXIEN,"O",Z,+$G(PRTYP),+$G(PRIDSEQ)),U,Z1)
"RTN","IBCEF71",169,0)
 Q
"RTN","IBCEF71",170,0)
 ;
"RTN","IBCEF71",171,0)
SETSEQ(IBXIEN,IBXSAVE,IBXDATA,PRTYP,IBFAC,IBOP) ; Sets up IBXSAVE("OSQ")
"RTN","IBCEF71",172,0)
 ;  array for other id seq in 837 records OP*
"RTN","IBCEF71",173,0)
 ; Returns IBXDATA(n)=cob seq indicator for ids
"RTN","IBCEF71",174,0)
 ; IBXIEN = ien of bill-399
"RTN","IBCEF71",175,0)
 ; PRTYP = the provider type to check for data for indiv provider
"RTN","IBCEF71",176,0)
 ; IBFAC = 1 if facility id, 0 for individual provider id
"RTN","IBCEF71",177,0)
 ; IBOP = segement # in OP being output
"RTN","IBCEF71",178,0)
 N C,Z,Z0,Z1,OK
"RTN","IBCEF71",179,0)
 S C=0,Z0="PROVINF"_$S('$G(IBFAC):"",1:"_FAC")
"RTN","IBCEF71",180,0)
 S:$G(IBFAC) PRTYP=0
"RTN","IBCEF71",181,0)
 S Z=0 F  S Z=$O(IBXSAVE(Z0,IBXIEN,"O",Z)) Q:'Z  S OK=0 D
"RTN","IBCEF71",182,0)
 . N Z1 F Z1=1:1 Q:'$D(IBXSAVE(Z0,IBXIEN,"O",Z,+$G(PRTYP),Z1))  I $P(IBXSAVE(Z0,IBXIEN,"O",Z,+$G(PRTYP),Z1),U,4)'="""" S OK=1 Q
"RTN","IBCEF71",183,0)
 . I OK S C=C+1,IBXSAVE("OSQ",Z)=C
"RTN","IBCEF71",184,0)
 S Z=0 F  S Z=$O(IBXSAVE("OSQ",Z)) Q:'Z  S IBXDATA(IBXSAVE("OSQ",Z))=$G(IBXSAVE(Z0,IBXIEN,"O",Z)) D:IBXSAVE("OSQ",Z)>1 ID^IBCEF2(IBXSAVE("OSQ",Z),"OP"_$G(IBOP)_" ")
"RTN","IBCEF71",185,0)
 Q
"RTN","IBCEF71",186,0)
 ;
"RTN","IBCEF71",187,0)
PSPRV(IBIFN) ;
"RTN","IBCEF71",188,0)
 Q $$PSPRV^IBCEF7(IBIFN) ; Moved
"RTN","IBCEF71",189,0)
 ;
"RTN","IBCEF72")
0^73^B53742177^B53776551
"RTN","IBCEF72",1,0)
IBCEF72 ;WOIFO/SS - FORMATTER AND EXTRACTOR SPECIFIC BILL FUNCTIONS ;8/6/03 10:56am
"RTN","IBCEF72",2,0)
 ;;2.0;INTEGRATED BILLING;**232,320,349**;21-MAR-94;Build 46
"RTN","IBCEF72",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF72",4,0)
 ;
"RTN","IBCEF72",5,0)
 ;
"RTN","IBCEF72",6,0)
 ;Input:
"RTN","IBCEF72",7,0)
 ;IBINSCO - ptr to #36
"RTN","IBCEF72",8,0)
 ;IBFRMTYP 0=unknwn/both,1=UB,2=1500
"RTN","IBCEF72",9,0)
 ;IBCARE - 0=unknwn or both inp/outp,1=inpatient, 2=outpatient, 3 -RX
"RTN","IBCEF72",10,0)
 ;Output: X12 IDtype^ID^ID TYPE ptr to file 355.97
"RTN","IBCEF72",11,0)
CH35591(IBINSCO,IBFRMTYP,IBCARE) ;
"RTN","IBCEF72",12,0)
 N IB35591,IBRET,IB1
"RTN","IBCEF72",13,0)
 S IB35591=0,IBRET=""
"RTN","IBCEF72",14,0)
 F  S IB35591=$O(^IBA(355.91,"B",IBINSCO,IB35591)) Q:+IB35591=0  Q:IBRET'=""  D
"RTN","IBCEF72",15,0)
 . S IB1=$G(^IBA(355.91,IB35591,0))
"RTN","IBCEF72",16,0)
 . I '($P(IB1,"^",4)=0!(IBFRMTYP=0)) Q:$P(IB1,"^",4)'=IBFRMTYP  ;if wrong form type
"RTN","IBCEF72",17,0)
 . I ($P(IB1,"^",5)=3)!(IBCARE=3) Q:IBCARE'=$P(IB1,"^",5)  ;if not RX
"RTN","IBCEF72",18,0)
 . I ($P(IB1,"^",5)=1)!($P(IB1,"^",5)=2) I (IBCARE=1)!(IBCARE=2) Q:$P(IB1,"^",5)'=IBCARE  ;if wrong care type
"RTN","IBCEF72",19,0)
 . S IBRET=$P($G(^IBE(355.97,+$P(IB1,"^",6),0)),"^",3)_"^"_$P(IB1,"^",7)_U_+$P(IB1,U,6)
"RTN","IBCEF72",20,0)
 Q IBRET
"RTN","IBCEF72",21,0)
 ;
"RTN","IBCEF72",22,0)
FINDEIN(IBXIEN,IBPROV,IBFAC,IBS) ; find EIN for facility/ SSN for person
"RTN","IBCEF72",23,0)
 ; IBXIEN = ien of bill entry file 399
"RTN","IBCEF72",24,0)
 ; IBFAC = 1 if facility, 0 if individual provider
"RTN","IBCEF72",25,0)
 ; IBPROV = ien of provider (vp format)
"RTN","IBCEF72",26,0)
 ; IBS = 1 if person's EIN should be returned if there, otherwise SSN
"RTN","IBCEF72",27,0)
 ; FUNCTION RETURNS 
"RTN","IBCEF72",28,0)
 ;    EIN or SSN ^ 24 for EIN, 34 for SSN or null if none found
"RTN","IBCEF72",29,0)
 N Z,Z0,IBARR,IBEIN,IBSSN
"RTN","IBCEF72",30,0)
 S (IBEIN,IBSSN)=""
"RTN","IBCEF72",31,0)
 D ALLID^IBCEP8(IBPROV,"",.IBARR)
"RTN","IBCEF72",32,0)
 S Z=0 F  S Z=$O(IBARR(Z)) Q:'Z  D  Q:IBEIN'=""
"RTN","IBCEF72",33,0)
 . I $G(IBFAC) Q:$P(IBARR(Z),U,7)'="EI"  S IBEIN=$P(IBARR(Z),U,2)_U_24 Q
"RTN","IBCEF72",34,0)
 . I $P(IBARR(Z),U,7)="SY" D  Q
"RTN","IBCEF72",35,0)
 .. I $G(IBS) S IBSSN=$P(IBARR(Z),U,2)_U_34 Q
"RTN","IBCEF72",36,0)
 . S IBEIN=$P(IBARR(Z),U,2)_U_24
"RTN","IBCEF72",37,0)
 . I $G(IBS),$P(IBARR(Z),U,7)="EI" S IBEIN=$P(IBARR(Z),U,2)_U_24
"RTN","IBCEF72",38,0)
 I $G(IBS),IBEIN="" S IBEIN=IBSSN
"RTN","IBCEF72",39,0)
 Q IBEIN
"RTN","IBCEF72",40,0)
 ;
"RTN","IBCEF72",41,0)
 ;
"RTN","IBCEF72",42,0)
NONVAID(IBXIEN,IBX,IBFAC,IBS) ; Find the non-VA provider default id
"RTN","IBCEF72",43,0)
 ; IBXIEN = the ien of the bill (file 399)
"RTN","IBCEF72",44,0)
 ; IBX = id data returned if passed by reference
"RTN","IBCEF72",45,0)
 ; IBFAC = 1 if getting the id for the facility or 0 for rendering prov
"RTN","IBCEF72",46,0)
 ; IBS = 1 if getting id for person, but need the EIN if there
"RTN","IBCEF72",47,0)
 ; Function returns the id^type of id^person/facility flag:
"RTN","IBCEF72",48,0)
 ;   Type of id: 1 = SSN    2 = EIN   0 = not found
"RTN","IBCEF72",49,0)
 ;   person/facility: 1 = person   2 = facility
"RTN","IBCEF72",50,0)
 N Z,IBXSAVE,IBU2,IBTYPE,IBZ,IBF,IBPROV,Q,Q0
"RTN","IBCEF72",51,0)
 S IBTYPE=2,IBU2=$G(^DGCR(399,IBXIEN,"U2")),IBF=2,IBPROV=""
"RTN","IBCEF72",52,0)
 ;
"RTN","IBCEF72",53,0)
 S Z=$P(IBU2,U,10)
"RTN","IBCEF72",54,0)
 I 'Z S IBX="",IBTYPE=0 G NONVAQ ; Not a non-VA facility
"RTN","IBCEF72",55,0)
 S IBPROV=Z_";IBA(355.93,"
"RTN","IBCEF72",56,0)
 ;
"RTN","IBCEF72",57,0)
 ; Get EIN
"RTN","IBCEF72",58,0)
 I $G(IBFAC) D  G NONVAQ
"RTN","IBCEF72",59,0)
 . S IBX=$P($$FINDEIN(IBXIEN,IBPROV,IBFAC),U),IBTYPE=2
"RTN","IBCEF72",60,0)
 ;
"RTN","IBCEF72",61,0)
 ; Get EIN/SSN
"RTN","IBCEF72",62,0)
 I '$G(IBFAC) D  G NONVAQ
"RTN","IBCEF72",63,0)
 . S IBX="",IBF=1
"RTN","IBCEF72",64,0)
 . S Q0=($$FT^IBCEF(IBXIEN)=3)+3 ; 3 for rendering/4 for attending
"RTN","IBCEF72",65,0)
 . S Q=+$O(^DGCR(399,IBXIEN,"PRV","B",Q0,0))
"RTN","IBCEF72",66,0)
 . S IBPROV=$P($G(^DGCR(399,IBXIEN,"PRV",Q,0)),U,2)
"RTN","IBCEF72",67,0)
 . I IBPROV S IBX=$$FINDEIN(IBXIEN,IBPROV,IBFAC,$G(IBS)),IBTYPE=$S($P(IBX,U,2)=24:2,$P(IBX,U,2)=34:1,1:0),IBX=$P(IBX,U)
"RTN","IBCEF72",68,0)
 ;
"RTN","IBCEF72",69,0)
NONVAQ I IBTYPE,IBX="",$P(IBU2,U,12)'="" S IBX=$P(IBU2,U,12) ; pull from 399
"RTN","IBCEF72",70,0)
 S IBX=$G(IBX)
"RTN","IBCEF72",71,0)
 Q IBX_U_IBTYPE_U_IBF
"RTN","IBCEF72",72,0)
 ;----
"RTN","IBCEF72",73,0)
 ;checks if there is data for OP* segments and 
"RTN","IBCEF72",74,0)
 ;then populates PROV COB SEQ
"RTN","IBCEF72",75,0)
 ;Input:
"RTN","IBCEF72",76,0)
 ;IBXIEN - ien in #399
"RTN","IBCEF72",77,0)
 ;IBSAVE - "in" array (i.e. IBXSAVE)
"RTN","IBCEF72",78,0)
 ;IBDATA - "out" array (i.e. IBXDATA)
"RTN","IBCEF72",79,0)
 ;IBFUNC - FUNCTION from #399 (1-refering, 2 -operating, etc)
"RTN","IBCEF72",80,0)
 ;IBSEGM - segment record ID, optional
"RTN","IBCEF72",81,0)
 ;Output:
"RTN","IBCEF72",82,0)
 ; IBDATA with formatted output
"RTN","IBCEF72",83,0)
PROVSEQ(IBXIEN,IBSAVE,IBDATA,IBFUNC,IBSEGM) ;
"RTN","IBCEF72",84,0)
 N IB1,IB2,IBINS,IBFL
"RTN","IBCEF72",85,0)
 S IBFL=$S(IBFUNC=3!(IBFUNC=4):1,1:0)
"RTN","IBCEF72",86,0)
 F IB1=1,2 D
"RTN","IBCEF72",87,0)
 . Q:'$$ISINSUR^IBCEF71($G(IBSAVE("PROVINF",IBXIEN,"O",IB1)),IBXIEN)  ;don't create anything if there is no such insurance
"RTN","IBCEF72",88,0)
 . I IBFL S IBFUNC=$S($O(IBSAVE("PROVINF",IBXIEN,"O",IB1,3,0)):3,1:4)
"RTN","IBCEF72",89,0)
 . S:$O(IBSAVE("PROVINF",IBXIEN,"O",IB1,IBFUNC,0)) IBDATA(IB1)=$G(IBSAVE("PROVINF",IBXIEN,"O",IB1))
"RTN","IBCEF72",90,0)
 . I $G(IBSEGM)'="" D:$O(IBSAVE("PROVINF",IBXIEN,"O",IB1,IBFUNC,0)) ID^IBCEF2(IB1,IBSEGM)
"RTN","IBCEF72",91,0)
 Q
"RTN","IBCEF72",92,0)
 ;
"RTN","IBCEF72",93,0)
OUTPRVID(IBXIEN,IBXSAVE) ; Extract the outside provider or facility ids
"RTN","IBCEF72",94,0)
 ; into IBXSAVE array
"RTN","IBCEF72",95,0)
 ; Function returns 1 if person or 2 if facility ids or "" if neither
"RTN","IBCEF72",96,0)
 N Z,IBXDATA,IBPERSON,TAG
"RTN","IBCEF72",97,0)
 ;WCJ;11/1/2005 Extract the first 3 chars of Z instead.
"RTN","IBCEF72",98,0)
 S Z=$E($$PSPRV^IBCEF7(IBXIEN),1,3),IBPERSON=""
"RTN","IBCEF72",99,0)
 ;EJK 8/23/05 IB*320 - CHANGED Z=101 TO Z=1010. Z WILL ALWAYS BE A 4 DIGIT #. 
"RTN","IBCEF72",100,0)
 ; WCJ 11/1/2005 ; Removed EJK's change and added above change
"RTN","IBCEF72",101,0)
 I Z=111!(Z=101) S TAG=$S(Z=101:"OUTSIDE FAC PROVIDER INF",1:"CUR/OTH PROVIDER INFO") D F^IBCEF("N-ALL "_TAG) S IBPERSON=$S('$E(Z,2):2,1:1)
"RTN","IBCEF72",102,0)
 Q IBPERSON
"RTN","IBCEF72",103,0)
 ;
"RTN","IBCEF72",104,0)
OUTPRV(IBREC,IBXIEN,IBXSAVE) ; Extract the outside provider or facility ids
"RTN","IBCEF72",105,0)
 ; into IBXSAVE array
"RTN","IBCEF72",106,0)
 ; Function returns 1 if person or 2 if facility ids or "" if neither
"RTN","IBCEF72",107,0)
 ; IBREC = the record whose ids should be returned
"RTN","IBCEF72",108,0)
 N IBPERSON,IBFRM,IBTYPE,IBFAC
"RTN","IBCEF72",109,0)
 I IBREC="SUB1"!(IBREC="OP6") D
"RTN","IBCEF72",110,0)
 . K IBXSAVE("PROVINF",IBXIEN),IBXSAVE("PROVINF_FAC",IBXIEN)
"RTN","IBCEF72",111,0)
 . S IBPERSON=$$OUTPRVID(IBXIEN,.IBXSAVE),IBFAC=$S(IBPERSON=1:0,1:1)
"RTN","IBCEF72",112,0)
 E  D
"RTN","IBCEF72",113,0)
 . K IBXSAVE("PROVINF_FAC",IBXIEN)
"RTN","IBCEF72",114,0)
 . D F^IBCEF("N-ALL OUTSIDE FAC PROVIDER INF")
"RTN","IBCEF72",115,0)
 . S IBPERSON=2,IBFAC=1
"RTN","IBCEF72",116,0)
 S IBFRM=$$FT^IBCEF(IBXIEN),IBFRM=$S(IBFRM=2:2,1:1)
"RTN","IBCEF72",117,0)
 S IBTYPE=$S(IBREC["SUB":"C",1:"O")
"RTN","IBCEF72",118,0)
 D CHCKSUB^IBCEF73(IBFRM,IBREC,IBFAC,IBTYPE,.IBXSAVE)
"RTN","IBCEF72",119,0)
 Q IBPERSON
"RTN","IBCEF72",120,0)
 ;
"RTN","IBCEF72",121,0)
 ;get IENs in file #36 for other insurances
"RTN","IBCEF72",122,0)
OTHINS(IB399,IBRES) ;
"RTN","IBCEF72",123,0)
 N IBFRMTYP,Z,Z1,Z2,Z4
"RTN","IBCEF72",124,0)
 S Z=$$COBN^IBCEF(IB399),Z0=0
"RTN","IBCEF72",125,0)
 F Z1=1:1:3 I Z1'=Z,$D(^DGCR(399,IB399,"I"_Z1)) S Z0=Z0+1,IBRES(Z0)=+$G(^DGCR(399,IB399,"I"_Z1))
"RTN","IBCEF72",126,0)
 Q
"RTN","IBCEF72",127,0)
 ;get other insurance EDI ID NUMBERs
"RTN","IBCEF72",128,0)
OTHINSID(IB399,IBRES) ;insurance EDI 
"RTN","IBCEF72",129,0)
 N IBFRMTYP,IBZ,Z0,Z1,Z4
"RTN","IBCEF72",130,0)
 S IBFRMTYP=$$FT^IBCEF(IB399),IBFRMTYP=$S(IBFRMTYP=2:2,IBFRMTYP=3:1,1:0)
"RTN","IBCEF72",131,0)
 S Z4=$S(IBFRMTYP=1:4,1:2) ;UB - piece4,1500 or BOTH -piece 2
"RTN","IBCEF72",132,0)
 D OTHINS(IB399,.IBZ)
"RTN","IBCEF72",133,0)
 S Z1=0
"RTN","IBCEF72",134,0)
 F Z0=1:1:2 I $G(IBZ(Z0)) S IBRES(Z0)=$S($$MCRWNR^IBEFUNC(+IBZ(Z0)):$S(IBFRMTYP=1:"12M61",1:"SMTX1"),1:$P($G(^DIC(36,+IBZ(Z0),3)),U,Z4))
"RTN","IBCEF72",135,0)
 Q
"RTN","IBCEF72",136,0)
 ;
"RTN","IBCEF72",137,0)
 ;get other insurance addresses
"RTN","IBCEF72",138,0)
OTHINADR(IB399,IBRES,IBADDFLD) ;insurance EDI
"RTN","IBCEF72",139,0)
 N IBZ,Z0,Z1,Z4
"RTN","IBCEF72",140,0)
 D OTHINS(IB399,.IBZ)
"RTN","IBCEF72",141,0)
 S Z1=0
"RTN","IBCEF72",142,0)
 I IBADDFLD=18 D  Q
"RTN","IBCEF72",143,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",144,0)
 . . S IBRES(Z0)=$P($G(^DIC(36,+IBZ(Z0),.11)),U,1)
"RTN","IBCEF72",145,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,55)
"RTN","IBCEF72",146,0)
 I IBADDFLD=18.9 D  Q
"RTN","IBCEF72",147,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",148,0)
 . . S IBRES(Z0)=$P($G(^DIC(36,+IBZ(Z0),.11)),U,1)
"RTN","IBCEF72",149,0)
 . . S Z4=$P($G(^DIC(36,+IBZ(Z0),.11)),U,2) S:Z4'="" IBRES(Z0)=IBRES(Z0)_", "_Z4
"RTN","IBCEF72",150,0)
 . . S Z4=$P($G(^DIC(36,+IBZ(Z0),.11)),U,3) S:Z4'="" IBRES(Z0)=IBRES(Z0)_", "_Z4
"RTN","IBCEF72",151,0)
 . . S Z4=$P($G(^DIC(36,+IBZ(Z0),.11)),U,4) S:Z4'="" IBRES(Z0)=IBRES(Z0)_", "_Z4
"RTN","IBCEF72",152,0)
 . . S Z4=$P($G(^DIC(5,+$P($G(^DIC(36,+IBZ(Z0),.11)),U,5),0)),U,2) S:Z4'="" IBRES(Z0)=IBRES(Z0)_", "_Z4
"RTN","IBCEF72",153,0)
 . . S Z4=$P($G(^DIC(36,+IBZ(Z0),.11)),U,6) S:Z4'="" IBRES(Z0)=IBRES(Z0)_", "_Z4
"RTN","IBCEF72",154,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,157)
"RTN","IBCEF72",155,0)
 I IBADDFLD=19 D  Q
"RTN","IBCEF72",156,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",157,0)
 . . S IBRES(Z0)=$P($G(^DIC(36,+IBZ(Z0),.11)),U,2)
"RTN","IBCEF72",158,0)
 . . S IBRES(Z0)=IBRES(Z0)_" "_$P($G(^DIC(36,+IBZ(Z0),.11)),U,3)
"RTN","IBCEF72",159,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,55)
"RTN","IBCEF72",160,0)
 I IBADDFLD=20 D  Q
"RTN","IBCEF72",161,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",162,0)
 . . S IBRES(Z0)=$P($G(^DIC(36,+IBZ(Z0),.11)),U,4)
"RTN","IBCEF72",163,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,30)
"RTN","IBCEF72",164,0)
 I IBADDFLD=21 D  Q
"RTN","IBCEF72",165,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",166,0)
 . . S IBRES(Z0)=$P($G(^DIC(5,+$P($G(^DIC(36,+IBZ(Z0),.11)),U,5),0)),U,2)
"RTN","IBCEF72",167,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,2)
"RTN","IBCEF72",168,0)
 I IBADDFLD=22 D  Q
"RTN","IBCEF72",169,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",170,0)
 . . S IBRES(Z0)=$P($G(^DIC(36,+IBZ(Z0),.11)),U,6)
"RTN","IBCEF72",171,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,15)
"RTN","IBCEF72",172,0)
 Q
"RTN","IBCEF72",173,0)
 ;
"RTN","IBCEF72",174,0)
SFIDQ(IBXIEN,IBXSAVE,IBXDATA) ; Find the service facility id qualifier for
"RTN","IBCEF72",175,0)
 ; 837 record SUB2-5
"RTN","IBCEF72",176,0)
 ;IBXIEN = ien of 399
"RTN","IBCEF72",177,0)
 ;Pass by reference: IBXSAVE (input/output)  IBXDATA (output)
"RTN","IBCEF72",178,0)
 N B,Z
"RTN","IBCEF72",179,0)
 K IBXSAVE("NVID")
"RTN","IBCEF72",180,0)
 D  ; protect IBXDATA
"RTN","IBCEF72",181,0)
 . N IBXDATA
"RTN","IBCEF72",182,0)
 . D F^IBCEF("N-RENDERING INSTITUTION")
"RTN","IBCEF72",183,0)
 . S:IBXDATA'="" IBXSAVE("IBFAC")=IBXDATA
"RTN","IBCEF72",184,0)
 I $P($G(IBXSAVE("IBFAC")),U,2)'=1 K IBXDATA Q
"RTN","IBCEF72",185,0)
 S Z=$$PSPRV^IBCEF7(IBXIEN)
"RTN","IBCEF72",186,0)
 ;WCJ 11/04/2005 If a Non-VA facility 
"RTN","IBCEF72",187,0)
 I $E(Z) D
"RTN","IBCEF72",188,0)
 . S IBXSAVE("NVID")=$$NONVAID^IBCEF72(IBXIEN,.B,$E(Z),1)
"RTN","IBCEF72",189,0)
 .; S IBXSAVE("NVID")=$$NONVAID^IBCEF72(IBXIEN,.B,'$E(Z,2),1)
"RTN","IBCEF72",190,0)
 . S IBXDATA=$P("^34^24",U,$P(IBXSAVE("NVID"),U,2)+1)
"RTN","IBCEF72",191,0)
 ;S Z=$$PSPRV^IBCEF7(IBXIEN),IBXSAVE("NVID")=$$NONVAID^IBCEF72(IBXIEN,.B,'$E(Z,2),1),IBXDATA=24
"RTN","IBCEF72",192,0)
 Q
"RTN","IBCEF72",193,0)
 ;
"RTN","IBCEF72",194,0)
OTHP36(IBXIEN,IBZOUT)   ;
"RTN","IBCEF72",195,0)
 N Z,Z0,Z1,IBZ
"RTN","IBCEF72",196,0)
 D F^IBCEF("N-ALL INSURANCE CO 837 ID","IBZ")
"RTN","IBCEF72",197,0)
 F Z=1,2,3 S IBZOUT(Z)=+$$POLICY^IBCEF(IBXIEN,1,$E("PST",Z))
"RTN","IBCEF72",198,0)
 Q
"RTN","IBCEF72",199,0)
 ;
"RTN","IBCEF72",200,0)
 ;---------SORT-----------
"RTN","IBCEF72",201,0)
 ;IBPRNUM - seq #
"RTN","IBCEF72",202,0)
 ;IBPRTYP - type of provider (use FUNCTION value from file 399, fld 222)
"RTN","IBCEF72",203,0)
 ;IB399 = ien file 399
"RTN","IBCEF72",204,0)
 ;IBSRC,IBDST - source,destination arrays
"RTN","IBCEF72",205,0)
 ;IBN - starting #
"RTN","IBCEF72",206,0)
 ;Output:
"RTN","IBCEF72",207,0)
 ; IBDST(1-primary/2-secondary provider,Provider type(FUNCTION),N)=
"RTN","IBCEF72",208,0)
 ; =provider/VARIABLEPTR^Insurance PTR #36 or NONE^ID type^ID^Form type^Care type^state ptr #5 for state license #
"RTN","IBCEF72",209,0)
 ; where N is numeration (1 for ID1, 2 for ID2, etc)
"RTN","IBCEF72",210,0)
GETSSN(IBPTR)   ;look for SSN in #200 first and if not found then look at #355.9
"RTN","IBCEF72",211,0)
 ;if in file #200
"RTN","IBCEF72",212,0)
 I $P(IBPTR,";",2)="VA(200," Q $$SSN200^IBCEF73(IBPTR)
"RTN","IBCEF72",213,0)
 ;if in 355.93 then use 355.9
"RTN","IBCEF72",214,0)
 Q $$SSN3559^IBCEF73(IBPTR)
"RTN","IBCEF72",215,0)
 ;--
"RTN","IBCEF72",216,0)
 ;SSN3559
"RTN","IBCEF72",217,0)
 ;Find SSN from 355.9
"RTN","IBCEF72",218,0)
 ;Input:
"RTN","IBCEF72",219,0)
 ; Variable pointer to ^VA(200 or ^IBA(355.93
"RTN","IBCEF72",220,0)
 ;Output:
"RTN","IBCEF72",221,0)
 ; SSN or null
"RTN","IBCEF72",222,0)
 ;
"RTN","IBCEF72",223,0)
PADNDC(Z) ;PAD LEADING ZERO'S INTO A NON 5-4-2 FORMAT NDC NUMBER
"RTN","IBCEF72",224,0)
 ;Z IS ITERATION, ONLY PAD CURRENT NDC NUMBER
"RTN","IBCEF72",225,0)
 N NDC
"RTN","IBCEF72",226,0)
 S NDC=$P(IBXSAVE("OUTPT",Z,"RX"),"^",3)
"RTN","IBCEF72",227,0)
 Q:$L(NDC)=13
"RTN","IBCEF72",228,0)
 I $L(NDC)=14 D  Q
"RTN","IBCEF72",229,0)
 . S $P(NDC,"-",1)=$E($P(NDC,"-",1),2,$L($P(NDC,"-",1)))
"RTN","IBCEF72",230,0)
 . S $P(IBXSAVE("OUTPT",Z,"RX"),"^",3)=NDC
"RTN","IBCEF72",231,0)
 I $L($P(NDC,"-",1))'=5 S $P(NDC,"-",1)="0"_$P(NDC,"-",1)
"RTN","IBCEF72",232,0)
 I $L($P(NDC,"-",2))'=4 S $P(NDC,"-",2)="0"_$P(NDC,"-",2)
"RTN","IBCEF72",233,0)
 I $L($P(NDC,"-",3))'=2 S $P(NDC,"-",3)="0"_$P(NDC,"-",3)
"RTN","IBCEF72",234,0)
 S $P(IBXSAVE("OUTPT",Z,"RX"),"^",3)=NDC
"RTN","IBCEF72",235,0)
 Q
"RTN","IBCEF72",236,0)
 ;
"RTN","IBCEF73")
0^70^B54498448^B54509277
"RTN","IBCEF73",1,0)
IBCEF73 ;WOIFO/SS - FORMATTER AND EXTRACTOR SPECIFIC BILL FUNCTIONS ;8/6/03 10:56am
"RTN","IBCEF73",2,0)
 ;;2.0;INTEGRATED BILLING;**232,320,358,349**;21-MAR-94;Build 46
"RTN","IBCEF73",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF73",4,0)
 ;
"RTN","IBCEF73",5,0)
 ;check qualifier
"RTN","IBCEF73",6,0)
 ;IBFRM 0-both, 1=UB,2=1500
"RTN","IBCEF73",7,0)
 ;IBPROV - function in #399 (1-referring, 2-operating,etc)
"RTN","IBCEF73",8,0)
 ;IBTYPE - "C"-current insurance, "O"-other insurance
"RTN","IBCEF73",9,0)
 ;IBVAL - value to check
"RTN","IBCEF73",10,0)
CHCKSEC(IBFRM,IBPROV,IBTYPE,IBVAL) ;
"RTN","IBCEF73",11,0)
 I IBFRM=0 Q:$$CHSEC(1,IBPROV,IBTYPE,IBVAL) 1  Q $$CHSEC(2,IBPROV,IBTYPE,IBVAL)
"RTN","IBCEF73",12,0)
 Q $$CHSEC(IBFRM,IBPROV,IBTYPE,IBVAL)
"RTN","IBCEF73",13,0)
 ;
"RTN","IBCEF73",14,0)
CHSEC(IBFRM,IBPROV,IBTYPE,IBVAL) ;
"RTN","IBCEF73",15,0)
 N IBSTR S IBSTR=""
"RTN","IBCEF73",16,0)
 ;referring
"RTN","IBCEF73",17,0)
 I IBPROV=1 S IBSTR=$S(IBTYPE="C":$$OPR5(IBFRM),IBTYPE="O":$$OP4(IBFRM),1:"")
"RTN","IBCEF73",18,0)
 ;operating
"RTN","IBCEF73",19,0)
 I IBPROV=2 S IBSTR=$S(IBTYPE="C":$$OPR3(IBFRM),IBTYPE="O":$$OP2(IBFRM),1:"")
"RTN","IBCEF73",20,0)
 ;rendering
"RTN","IBCEF73",21,0)
 I IBPROV=3 S IBSTR=$S(IBTYPE="C":$$OPR2(IBFRM),IBTYPE="O":$$OP1(IBFRM),1:"")
"RTN","IBCEF73",22,0)
 ;attending
"RTN","IBCEF73",23,0)
 I IBPROV=4 S IBSTR=$S(IBTYPE="C":$$OPR2(IBFRM),IBTYPE="O":$$OP1(IBFRM),1:"")
"RTN","IBCEF73",24,0)
 ;supervising
"RTN","IBCEF73",25,0)
 I IBPROV=5 S IBSTR=$S(IBTYPE="C":$$OPR8(IBFRM),IBTYPE="O":$$OP8(IBFRM),1:"")
"RTN","IBCEF73",26,0)
 ;other
"RTN","IBCEF73",27,0)
 I IBPROV=9 S IBSTR=$S(IBTYPE="C":$$OPR4(IBFRM),IBTYPE="O":$$OP9(IBFRM),1:"")
"RTN","IBCEF73",28,0)
 Q:IBPROV=0!(IBSTR="") 1  ;if "" or facility id always return 1
"RTN","IBCEF73",29,0)
 Q IBSTR[("^"_IBVAL_"^")
"RTN","IBCEF73",30,0)
 ;
"RTN","IBCEF73",31,0)
 ;Filter invalid qualifier entries for records SUB1,SUB2,OP6,OP7,OP3
"RTN","IBCEF73",32,0)
 ; Rebuild the IBXSAVE("PROVINF" or IBXSAVE("PROVINF_FAC" array with
"RTN","IBCEF73",33,0)
 ;  only ids that have valid qualifiers
"RTN","IBCEF73",34,0)
 ;IBFRM 0-both, 1=UB,2=1500
"RTN","IBCEF73",35,0)
 ;IBREC record ID whose ids are being filtered (SUB1,SUB2,etc)
"RTN","IBCEF73",36,0)
 ;IBFAC - 1 if facility check, 0 if attending/rendering check
"RTN","IBCEF73",37,0)
 ;IBTYPE - "C"-current insurance, "O"-other insurance
"RTN","IBCEF73",38,0)
 ;IBXSAVE - the array of provider ids extracted, returned filtered -
"RTN","IBCEF73",39,0)
 ;   passed by reference
"RTN","IBCEF73",40,0)
CHCKSUB(IBFRM,IBREC,IBFAC,IBTYPE,IBXSAVE) ;
"RTN","IBCEF73",41,0)
 N Z,Z0,Z1,Z2,CT,IBSAVE
"RTN","IBCEF73",42,0)
 S Z="PROVINF"_$P("^_FAC",U,$G(IBFAC)+1)
"RTN","IBCEF73",43,0)
 I '$G(IBXSAVE(Z,IBXIEN)) D
"RTN","IBCEF73",44,0)
 . D F^IBCEF("N-ALL "_$S($G(IBFAC):"OUTSIDE FAC PROVIDER INF",1:"CUR/OTH PROVIDER INFO"))
"RTN","IBCEF73",45,0)
 M IBSAVE(Z,IBXIEN,IBTYPE)=IBXSAVE(Z,IBXIEN,IBTYPE) K IBXSAVE(Z,IBXIEN,IBTYPE)
"RTN","IBCEF73",46,0)
 S Z0=0 F  S Z0=$O(IBSAVE(Z,IBXIEN,IBTYPE,Z0)) Q:'Z0  S Z1="" F  S Z1=$O(IBSAVE(Z,IBXIEN,IBTYPE,Z0,Z1)) Q:Z1=""  S (Z2,CT)=0 F  S Z2=$O(IBSAVE(Z,IBXIEN,IBTYPE,Z0,Z1,Z2)) Q:'Z2  D
"RTN","IBCEF73",47,0)
 . N IBVAL
"RTN","IBCEF73",48,0)
 . S IBVAL=$P(IBSAVE(Z,IBXIEN,IBTYPE,Z0,Z1,Z2),U,3)
"RTN","IBCEF73",49,0)
 . I IBFRM=0 D  Q
"RTN","IBCEF73",50,0)
 .. I $S($$CHSUB(1,IBREC,IBVAL):1,1:$$CHSUB(2,IBPROV,IBTYPE,IBVAL)) D
"RTN","IBCEF73",51,0)
 ... S CT=CT+1,IBXSAVE(Z,IBXIEN,IBTYPE,Z0,Z1,CT)=IBSAVE(Z,IBXIEN,IBTYPE,Z0,Z1,Z2)
"RTN","IBCEF73",52,0)
 ... I $G(IBXSAVE(Z,IBXIEN,IBTYPE,Z0))="",$G(IBSAVE(Z,IBXIEN,IBTYPE,Z0))'="" S IBXSAVE(Z,IBXIEN,IBTYPE,Z0)=IBSAVE(Z,IBXIEN,IBTYPE,Z0)
"RTN","IBCEF73",53,0)
 . I $$CHSUB(IBFRM,IBREC,IBVAL) D
"RTN","IBCEF73",54,0)
 .. S CT=CT+1,IBXSAVE(Z,IBXIEN,IBTYPE,Z0,Z1,CT)=IBSAVE(Z,IBXIEN,IBTYPE,Z0,Z1,Z2)
"RTN","IBCEF73",55,0)
 .. I $G(IBXSAVE(Z,IBXIEN,IBTYPE,Z0))="",$G(IBSAVE(Z,IBXIEN,IBTYPE,Z0))'="" S IBXSAVE(Z,IBXIEN,IBTYPE,Z0)=IBSAVE(Z,IBXIEN,IBTYPE,Z0)
"RTN","IBCEF73",56,0)
 Q
"RTN","IBCEF73",57,0)
 ;
"RTN","IBCEF73",58,0)
 ; Check if valid qualifier
"RTN","IBCEF73",59,0)
 ;IBFRM 0-both, 1=UB,2=1500
"RTN","IBCEF73",60,0)
 ;IBREC record ID whose ids are being filtered (SUB1,SUB2,etc)
"RTN","IBCEF73",61,0)
 ;IBVAL - value to check
"RTN","IBCEF73",62,0)
CHSUB(IBFRM,IBREC,IBVAL) ;
"RTN","IBCEF73",63,0)
 N IBSTR
"RTN","IBCEF73",64,0)
 I IBREC="SUB1" S IBSTR=$$SUB1(IBFRM)
"RTN","IBCEF73",65,0)
 I IBREC="SUB2" S IBSTR=$$SUB2(IBFRM)
"RTN","IBCEF73",66,0)
 I IBREC="OP7" S IBSTR=$$OP7(IBFRM)
"RTN","IBCEF73",67,0)
 I IBREC="OP3" S IBSTR=$$OP3(IBFRM)
"RTN","IBCEF73",68,0)
 I IBREC="OP6" S IBSTR=$$OP6(IBFRM)
"RTN","IBCEF73",69,0)
 Q:$G(IBSTR)="" 1  ;if "" always return 1
"RTN","IBCEF73",70,0)
 Q IBSTR[("^"_IBVAL_"^")
"RTN","IBCEF73",71,0)
 ;
"RTN","IBCEF73",72,0)
 ;IBFRM 0-both, 1=UB,2=1500
"RTN","IBCEF73",73,0)
OPR2(IBFRM) ;
"RTN","IBCEF73",74,0)
 Q:IBFRM=1 "^0B^1A^1B^1C^1D^1G^1H^EI^G2^LU^N5^SY^X5^"
"RTN","IBCEF73",75,0)
 Q:IBFRM=2 "^0B^1B^1C^1D^1G^1H^EI^G2^LU^N5^SY^X5^"
"RTN","IBCEF73",76,0)
 Q ""
"RTN","IBCEF73",77,0)
 ;
"RTN","IBCEF73",78,0)
 ;IBFRM 0-both, 1=UB,2=1500
"RTN","IBCEF73",79,0)
OP1(IBFRM) ;
"RTN","IBCEF73",80,0)
 Q:IBFRM=1 "^1A^1B^1C^1D^1G^1H^EI^G2^LU^N5^"
"RTN","IBCEF73",81,0)
 Q:IBFRM=2 "^1B^1C^1D^EI^G2^LU^N5^"
"RTN","IBCEF73",82,0)
 Q ""
"RTN","IBCEF73",83,0)
 ;
"RTN","IBCEF73",84,0)
 ;IBFRM 0-both, 1=UB,2=1500
"RTN","IBCEF73",85,0)
OPR3(IBFRM) ;
"RTN","IBCEF73",86,0)
 Q:IBFRM=1 "^0B^1A^1B^1C^1D^1G^1H^EI^G2^LU^N5^SY^X5^"
"RTN","IBCEF73",87,0)
 Q ""
"RTN","IBCEF73",88,0)
 ;
"RTN","IBCEF73",89,0)
 ;IBFRM 0-both, 1=UB,2=1500
"RTN","IBCEF73",90,0)
OP2(IBFRM) ;
"RTN","IBCEF73",91,0)
 Q:IBFRM=1 "^1A^1B^1C^1D^1G^1H^EI^G2^LU^N5^"
"RTN","IBCEF73",92,0)
 Q ""
"RTN","IBCEF73",93,0)
 ;
"RTN","IBCEF73",94,0)
 ;IBFRM 0-both, 1=UB,2=1500
"RTN","IBCEF73",95,0)
SUB1(IBFRM) ;
"RTN","IBCEF73",96,0)
 Q:IBFRM=1 "^0B^1A^1B^1C^1D^1G^1H^EI^G2^LU^N5^SY^X5^"
"RTN","IBCEF73",97,0)
 Q:IBFRM=2 "^0B^1A^1B^1C^1D^1G^1H^EI^G2^LU^N5^U3^SY^X5^"
"RTN","IBCEF73",98,0)
 Q ""
"RTN","IBCEF73",99,0)
 ;
"RTN","IBCEF73",100,0)
 ;IBFRM 0-both, 1=UB,2=1500
"RTN","IBCEF73",101,0)
OPR4(IBFRM) ;
"RTN","IBCEF73",102,0)
 Q:IBFRM=1 "^0B^1A^1B^1C^1D^1G^1H^EI^G2^LU^N5^SY^X5^"
"RTN","IBCEF73",103,0)
 Q ""
"RTN","IBCEF73",104,0)
 ;
"RTN","IBCEF73",105,0)
 ;IBFRM 0-both, 1=UB,2=1500
"RTN","IBCEF73",106,0)
OP9(IBFRM) ;
"RTN","IBCEF73",107,0)
 Q:IBFRM=1 "^1A^1B^1C^1D^1G^1H^EI^G2^LU^N5^"
"RTN","IBCEF73",108,0)
 Q ""
"RTN","IBCEF73",109,0)
 ;
"RTN","IBCEF73",110,0)
 ;IBFRM 0-both, 1=UB,2=1500
"RTN","IBCEF73",111,0)
SUB2(IBFRM) ;
"RTN","IBCEF73",112,0)
 Q:IBFRM=1 "^0B^1A^1B^1C^1G^1H^1J^EI^FH^G2^G5^LU^N5^X5^TJ^B3^BQ^SY^U3^"
"RTN","IBCEF73",113,0)
 Q:IBFRM=2 "^0B^X4^1A^1B^1C^1G^1H^G2^LU^X5^TJ^B3^BQ^SY^U3^"
"RTN","IBCEF73",114,0)
 Q ""
"RTN","IBCEF73",115,0)
 ;
"RTN","IBCEF73",116,0)
 ;IBFRM 0-both, 1=UB,2=1500
"RTN","IBCEF73",117,0)
OP3(IBFRM) ;
"RTN","IBCEF73",118,0)
 Q:IBFRM=1 "^1B^1C^EI^G2^LU^N5^"
"RTN","IBCEF73",119,0)
 Q ""
"RTN","IBCEF73",120,0)
 ;
"RTN","IBCEF73",121,0)
 ;IBFRM 0-both, 1=UB,2=1500
"RTN","IBCEF73",122,0)
OPR5(IBFRM) ;
"RTN","IBCEF73",123,0)
 Q:IBFRM=2 "^0B^1B^1C^1D^1G^1H^EI^G2^LU^N5^SY^X5^"
"RTN","IBCEF73",124,0)
 Q ""
"RTN","IBCEF73",125,0)
 ;
"RTN","IBCEF73",126,0)
 ;IBFRM 0-both, 1=UB,2=1500
"RTN","IBCEF73",127,0)
OPR8(IBFRM) ;
"RTN","IBCEF73",128,0)
 Q:IBFRM=2 "^0B^1B^1C^1D^1G^1H^EI^G2^LU^N5^SY^X5^"
"RTN","IBCEF73",129,0)
 Q ""
"RTN","IBCEF73",130,0)
 ;
"RTN","IBCEF73",131,0)
 ;IBFRM 0-both, 1=UB,2=1500
"RTN","IBCEF73",132,0)
OP4(IBFRM) ;
"RTN","IBCEF73",133,0)
 Q:IBFRM=2 "^1B^1C^1D^EI^G2^LU^N5^"
"RTN","IBCEF73",134,0)
 Q ""
"RTN","IBCEF73",135,0)
 ;
"RTN","IBCEF73",136,0)
 ;IBFRM 0-both, 1=UB,2=1500
"RTN","IBCEF73",137,0)
OP8(IBFRM) ;
"RTN","IBCEF73",138,0)
 Q:IBFRM=2 "^1B^1C^1D^EI^G2^N5^"
"RTN","IBCEF73",139,0)
 Q ""
"RTN","IBCEF73",140,0)
 ;
"RTN","IBCEF73",141,0)
 ;IBFRM 0-both, 1=UB,2=1500
"RTN","IBCEF73",142,0)
OP6(IBFRM) ;
"RTN","IBCEF73",143,0)
 Q:IBFRM=2 "^1A^1B^1C^G2^LU^N5^"
"RTN","IBCEF73",144,0)
 Q ""
"RTN","IBCEF73",145,0)
 ;
"RTN","IBCEF73",146,0)
 ;IBFRM 0-both, 1=UB,2=1500
"RTN","IBCEF73",147,0)
OP7(IBFRM) ;
"RTN","IBCEF73",148,0)
 Q:IBFRM=2 "^1A^1B^1C^G2^LU^N5^"
"RTN","IBCEF73",149,0)
 Q ""
"RTN","IBCEF73",150,0)
 ;
"RTN","IBCEF73",151,0)
 ;check qualifier for PRV1
"RTN","IBCEF73",152,0)
 ;IBFRM 0-both, 1=UB,2=1500
"RTN","IBCEF73",153,0)
 ;IBVAL - value to check
"RTN","IBCEF73",154,0)
CHCKPRV1(IBFRM,IBVAL) ;
"RTN","IBCEF73",155,0)
 I IBFRM=0 Q:$$CHPRV1(1,IBVAL) 1  Q $$CHPRV1(2,IBVAL)
"RTN","IBCEF73",156,0)
 Q $$CHPRV1(IBFRM,IBVAL)
"RTN","IBCEF73",157,0)
 ;IBFRM 0-both, 1=UB,2=1500
"RTN","IBCEF73",158,0)
CHPRV1(IBFRM,IBVAL) ;
"RTN","IBCEF73",159,0)
 N IBSTR S IBSTR=""
"RTN","IBCEF73",160,0)
 S IBSTR=$$PRV1(IBFRM)
"RTN","IBCEF73",161,0)
 Q:IBSTR="" 1
"RTN","IBCEF73",162,0)
 Q IBSTR[("^"_IBVAL_"^")
"RTN","IBCEF73",163,0)
 ;
"RTN","IBCEF73",164,0)
PRV1(IBFRM) ;
"RTN","IBCEF73",165,0)
 Q:IBFRM=1 "^1A^1C^1D^1G^1H^1J^B3^BQ^EI^FH^G2^G5^LU^SY^X5^"
"RTN","IBCEF73",166,0)
 Q:IBFRM=2 "^1B^1C^1D^1G^1H^1J^B3^BQ^EI^FH^G2^G5^LU^U3^SY^X5^"
"RTN","IBCEF73",167,0)
 Q ""
"RTN","IBCEF73",168,0)
 ;
"RTN","IBCEF73",169,0)
PTSELF ;This tag is for the CI2 segment. If the IBXSAVE("IADR") is empty
"RTN","IBCEF73",170,0)
 ;check to see if the relationship to pt is 18 (self) if so pull info
"RTN","IBCEF73",171,0)
 ;from PT1 calls
"RTN","IBCEF73",172,0)
 ;See if relationship to insured is 18 if not or if "" quit
"RTN","IBCEF73",173,0)
 N IBZ
"RTN","IBCEF73",174,0)
 D F^IBCEF("N-ALL INSURED PT RELATION","IBZ",,IBXIEN)
"RTN","IBCEF73",175,0)
 S IBZ=$G(IBZ(+$$COBN^IBCEF(IBXIEN)))
"RTN","IBCEF73",176,0)
 S IBZ=$$RELATION^IBCEFG1(IBZ)
"RTN","IBCEF73",177,0)
 I IBZ'="18" S IBXDATA="" Q
"RTN","IBCEF73",178,0)
 N IBZ D F^IBCEF("N-PATIENT STREET ADDRESS 1-3","IBZ",,IBXIEN)
"RTN","IBCEF73",179,0)
 S IBXDATA="18"
"RTN","IBCEF73",180,0)
 Q
"RTN","IBCEF73",181,0)
 ;
"RTN","IBCEF73",182,0)
NOPUNCT(X,SPACE,EXC) ; Strip punctuation from data in X
"RTN","IBCEF73",183,0)
 ; SPACE = flag if 1 strip SPACES
"RTN","IBCEF73",184,0)
 ; EXC = list of punct not to strip
"RTN","IBCEF73",185,0)
 ;
"RTN","IBCEF73",186,0)
 N PUNCT,Z
"RTN","IBCEF73",187,0)
 S PUNCT=".,-+(){}[]\/><:;?|=_*&%$#@!~`^'"""
"RTN","IBCEF73",188,0)
 I $G(SPACE) S PUNCT=PUNCT_" "
"RTN","IBCEF73",189,0)
 I $G(EXC)'="" S PUNCT=$TR(PUNCT,EXC)
"RTN","IBCEF73",190,0)
 N L S L=""
"RTN","IBCEF73",191,0)
 F  S L=$O(X(L)) Q:L=""  D
"RTN","IBCEF73",192,0)
 . S X(L)=$TR(X(L),PUNCT)
"RTN","IBCEF73",193,0)
 I $G(X)'="" D
"RTN","IBCEF73",194,0)
 . S X=$TR(X,PUNCT)
"RTN","IBCEF73",195,0)
 Q
"RTN","IBCEF73",196,0)
 ;
"RTN","IBCEF73",197,0)
PROVID(IBXIEN) ;This modified version of prov id call is to acquire the SSN
"RTN","IBCEF73",198,0)
 ;first, if the ssn is not available then we need to get the tax id.
"RTN","IBCEF73",199,0)
 ;we also need to provide the modifier for which value it is
"RTN","IBCEF73",200,0)
 Q:+$G(IBXIEN)=0 ""
"RTN","IBCEF73",201,0)
 S IBXSAVE("ID")=""
"RTN","IBCEF73",202,0)
 S IBXSAVE=""
"RTN","IBCEF73",203,0)
 S IBXSAVE=$$PROVSSN^IBCEF7(IBXIEN)
"RTN","IBCEF73",204,0)
 N I
"RTN","IBCEF73",205,0)
 F I=1:1:9 D
"RTN","IBCEF73",206,0)
 . I $P(IBXSAVE,"^",I)]"" S $P(IBXSAVE("ID"),U,I)="34"
"RTN","IBCEF73",207,0)
 ;If no ibxdata go look in 355.97 for 24 
"RTN","IBCEF73",208,0)
 N IBRETVAL S IBRETVAL=""
"RTN","IBCEF73",209,0)
 N IBPTR,IBFT
"RTN","IBCEF73",210,0)
 F IBFT=1:1:9 D
"RTN","IBCEF73",211,0)
 . Q:$P(IBXSAVE,U,IBFT)]""
"RTN","IBCEF73",212,0)
 . S IBPTR=$$PROVPTR^IBCEF7(IBXIEN,IBFT)
"RTN","IBCEF73",213,0)
 . S $P(IBRETVAL,"^",IBFT)=$$TAX3559(IBPTR)
"RTN","IBCEF73",214,0)
 . I $P(IBRETVAL,U,IBFT)]"" D
"RTN","IBCEF73",215,0)
 . . S $P(IBXSAVE,U,IBFT)=$P(IBRETVAL,U,IBFT)
"RTN","IBCEF73",216,0)
 . . S $P(IBXSAVE("ID"),U,IBFT)="24"
"RTN","IBCEF73",217,0)
 Q IBXSAVE
"RTN","IBCEF73",218,0)
 ;
"RTN","IBCEF73",219,0)
TAX3559(IBPROV) ;
"RTN","IBCEF73",220,0)
 I $P(IBPROV,";",2)'["IBA(355.9" Q ""
"RTN","IBCEF73",221,0)
 N IB2,IB3559,IBIDTYP,IBID,IBQFL
"RTN","IBCEF73",222,0)
 S (IB3559,IBQFL)=0
"RTN","IBCEF73",223,0)
 S IBID=""
"RTN","IBCEF73",224,0)
 Q:+$G(IBPROV)=0 ""
"RTN","IBCEF73",225,0)
 F IB2=1:1 S IB3559=$O(^IBA(355.9,"B",IBPROV,IB3559)) Q:IB3559=""!IBQFL  D
"RTN","IBCEF73",226,0)
 . S IBIDTYP=+$P($G(^IBA(355.9,IB3559,0)),"^",6) ;provider ID type, ptr to #355.97
"RTN","IBCEF73",227,0)
 . S IBIDTYP=$P($G(^IBE(355.97,IBIDTYP,0)),"^",3)
"RTN","IBCEF73",228,0)
 . S:IBIDTYP="EI" IBID=$P($G(^IBA(355.9,IB3559,0)),"^",7),IBQFL=1
"RTN","IBCEF73",229,0)
 Q $$NOPUNCT^IBCEF(IBID)
"RTN","IBCEF73",230,0)
 ;
"RTN","IBCEF73",231,0)
 ;IBFULL-full name
"RTN","IBCEF73",232,0)
 ;IBEL - Name element : "FAMILY","GIVEN","MIDDLE","SUFFIX"
"RTN","IBCEF73",233,0)
 ;
"RTN","IBCEF73",234,0)
SSN200(IBPTR)   ;
"RTN","IBCEF73",235,0)
 I $P(IBPTR,";",2)'="VA(200," Q ""
"RTN","IBCEF73",236,0)
 Q $$NOPUNCT^IBCEF($$GET1^DIQ(200,+$P(IBPTR,";")_",",9))
"RTN","IBCEF73",237,0)
 ;
"RTN","IBCEF73",238,0)
 ;Input:
"RTN","IBCEF73",239,0)
 ; IBIEN399 - ien in #399
"RTN","IBCEF73",240,0)
 ;Output:
"RTN","IBCEF73",241,0)
 ; returns a string with "^" delimiters that contains SSNs (if any)
"RTN","IBCEF73",242,0)
 ; in the position that equal to FUNCTION number
"RTN","IBCEF73",243,0)
 ; i.e. if RENDERING function # is 3 then SSN will be
"RTN","IBCEF73",244,0)
 ; in $P(return value,"^",3), etc.
"RTN","IBCEF73",245,0)
 ;
"RTN","IBCEF73",246,0)
SSN3559(IBPROV) ;
"RTN","IBCEF73",247,0)
 N IB2,IB3559,IBIDTYP,IBID,IBQFL
"RTN","IBCEF73",248,0)
 S (IB3559,IBQFL)=0
"RTN","IBCEF73",249,0)
 S IBID=""
"RTN","IBCEF73",250,0)
 Q:+$G(IBPROV)=0 ""
"RTN","IBCEF73",251,0)
 F IB2=1:1 S IB3559=$O(^IBA(355.9,"B",IBPROV,IB3559)) Q:IB3559=""!IBQFL  D
"RTN","IBCEF73",252,0)
 . S IBIDTYP=+$P($G(^IBA(355.9,IB3559,0)),"^",6)
"RTN","IBCEF73",253,0)
 . S IBIDTYP=$P($G(^IBE(355.97,IBIDTYP,0)),"^",3)
"RTN","IBCEF73",254,0)
 . S:IBIDTYP="SY" IBID=$P($G(^IBA(355.9,IB3559,0)),"^",7),IBQFL=1
"RTN","IBCEF73",255,0)
 Q $$NOPUNCT^IBCEF(IBID)
"RTN","IBCEF73",256,0)
 ;
"RTN","IBCEF73",257,0)
 ;IBIDTYP-provider ID type, ptr to #355.97
"RTN","IBCEF73",258,0)
 ;IBFULL-full name
"RTN","IBCEF73",259,0)
 ;IBEL - Name element : "FAMILY","GIVEN","MIDDLE","SUFFIX"
"RTN","IBCEF73",260,0)
 ;
"RTN","IBCEF73",261,0)
PRV1FMT(P) ;FORMAT CODE FOR PRV1 SEGMENT THAT WON'T FIT ON LINE
"RTN","IBCEF73",262,0)
 K IBXDATA
"RTN","IBCEF73",263,0)
 S:'$D(IBXSAVE("BIL-PROV-SEC")) IBXSAVE("BIL-PROV-SEC")=$$PRV1^IBCEF7(IBXIEN)
"RTN","IBCEF73",264,0)
 S IBXDATA=$P($G(IBXSAVE("BIL-PROV-SEC")),"^",P)
"RTN","IBCEF73",265,0)
 I $G(IBXDATA)'="" S IBXDATA=$$NOPUNCT^IBCEF(IBXDATA,1)
"RTN","IBCEF73",266,0)
 Q
"RTN","IBCEF73",267,0)
 ;
"RTN","IBCEF74A")
0^80^B19511866^B19549924
"RTN","IBCEF74A",1,0)
IBCEF74A ;ALB/ESG - Provider ID maint ?ID continuation ;7 Mar 2006
"RTN","IBCEF74A",2,0)
 ;;2.0;INTEGRATED BILLING;**320,343,349**;21-MAR-94;Build 46
"RTN","IBCEF74A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF74A",4,0)
 ;
"RTN","IBCEF74A",5,0)
 Q
"RTN","IBCEF74A",6,0)
 ;
"RTN","IBCEF74A",7,0)
EN(IBIFN,IBQUIT) ; Display billing provider and service provider IDs as part
"RTN","IBCEF74A",8,0)
 ; of the ?ID display/help in the billing screens.
"RTN","IBCEF74A",9,0)
 ; Called from DISPID^IBCEF74.
"RTN","IBCEF74A",10,0)
 NEW IBID,IBX,Z,ZI,ZN,SEQ,PSIN,DATA,QUALNM,IDNUM,FACNAME,IBZ,IBXIEN,IBSSFI,ORGNPI
"RTN","IBCEF74A",11,0)
 ;
"RTN","IBCEF74A",12,0)
 D ALLIDS^IBCEF75(IBIFN,.IBID)
"RTN","IBCEF74A",13,0)
 ;
"RTN","IBCEF74A",14,0)
 ; Re-sort array by insurance sequence (P/S/T)
"RTN","IBCEF74A",15,0)
 K IBX
"RTN","IBCEF74A",16,0)
 F Z="BILLING PRV","LAB/FAC" F ZI="C","O" S ZN=0 F  S ZN=$O(IBID(Z,IBIFN,ZI,ZN)) Q:'ZN  D
"RTN","IBCEF74A",17,0)
 . S SEQ=$P($G(IBID(Z,IBIFN,ZI,ZN)),U,1) Q:SEQ=""
"RTN","IBCEF74A",18,0)
 . S IBX(Z,SEQ,ZI,ZN)=""
"RTN","IBCEF74A",19,0)
 . Q
"RTN","IBCEF74A",20,0)
 ;
"RTN","IBCEF74A",21,0)
 ; Display billing provider secondary ID's (current ins only)
"RTN","IBCEF74A",22,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",23,0)
 S Z="BILLING PRV"
"RTN","IBCEF74A",24,0)
 ; PRXM/KJH - Removed "I $D(IBX(Z))" from next line. Caused header to not display even though there would be a "None Found' message.
"RTN","IBCEF74A",25,0)
 W !!,"Billing Provider Secondary IDs (VistA Record CI1A):"
"RTN","IBCEF74A",26,0)
 D SECID(Z,.IBQUIT)
"RTN","IBCEF74A",27,0)
 I IBQUIT G EX
"RTN","IBCEF74A",28,0)
 ;
"RTN","IBCEF74A",29,0)
 ; Now display the lab or facility primary and secondary IDs
"RTN","IBCEF74A",30,0)
 ; This is the service facility information
"RTN","IBCEF74A",31,0)
 ;
"RTN","IBCEF74A",32,0)
 ; Facility name, same code as found in SUB-2
"RTN","IBCEF74A",33,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",34,0)
 W !!,"Service Facility Name and ID Information"
"RTN","IBCEF74A",35,0)
 S IBXIEN=IBIFN
"RTN","IBCEF74A",36,0)
 D F^IBCEF("N-RENDERING INSTITUTION","IBZ",,IBIFN)
"RTN","IBCEF74A",37,0)
 S FACNAME=$$GETFAC^IBCEP8(+IBZ,+$P(IBZ,U,2),0,"SUB")
"RTN","IBCEF74A",38,0)
 S Z="LAB/FAC"
"RTN","IBCEF74A",39,0)
 ;
"RTN","IBCEF74A",40,0)
 ; determine if flag to suppress lab/fac data is set
"RTN","IBCEF74A",41,0)
 D VAMCFD^IBCEF75(IBIFN,.IBSSFI)
"RTN","IBCEF74A",42,0)
 I $D(IBSSFI),'$G(IBSSFI("C",1)) D  I IBQUIT G EX
"RTN","IBCEF74A",43,0)
 . I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() Q:IBQUIT
"RTN","IBCEF74A",44,0)
 . W !!,"Note:  Service Facility Data not sent for Current Insurance"
"RTN","IBCEF74A",45,0)
 . W !,"       'Send VA Lab/Facility IDs or Facility Data for VAMC?' is set to NO",!
"RTN","IBCEF74A",46,0)
 . Q
"RTN","IBCEF74A",47,0)
 ;
"RTN","IBCEF74A",48,0)
 ; facility name
"RTN","IBCEF74A",49,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",50,0)
 I FACNAME="" S FACNAME="n/a"
"RTN","IBCEF74A",51,0)
 W !,"Facility:  ",FACNAME
"RTN","IBCEF74A",52,0)
 ;
"RTN","IBCEF74A",53,0)
 ; PRXM/KJH - Add NPI to display for patch 343.
"RTN","IBCEF74A",54,0)
 S ORGNPI=$$ORGNPI^IBCEF73A(IBIFN)
"RTN","IBCEF74A",55,0)
 S DATA=$S($P($G(IBZ),U,2)=1:$P(ORGNPI,U,2),$P($G(IBZ),U,2)=0:$P(ORGNPI,U,1),1:$P(ORGNPI,U,3))
"RTN","IBCEF74A",56,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",57,0)
 W !?5,"Lab or Facility NPI:"
"RTN","IBCEF74A",58,0)
 W !?12,$S(DATA'="":DATA,1:"***MISSING***")
"RTN","IBCEF74A",59,0)
 ; primary ID
"RTN","IBCEF74A",60,0)
 S DATA=$G(IBID(Z,IBIFN,"C",1,0))   ; lab/facility current ins primary
"RTN","IBCEF74A",61,0)
 S QUALNM=$$QUAL($P(DATA,U,1),$$FT^IBCEF(IBIFN))
"RTN","IBCEF74A",62,0)
 S IDNUM=$P(DATA,U,2)
"RTN","IBCEF74A",63,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",64,0)
 W !?5,"Lab or Facility Primary ID (VistA Record SUB):"
"RTN","IBCEF74A",65,0)
 I DATA'="" W !?8,"(",$P($G(IBID(Z,IBIFN,"C",1)),U,1),") ",QUALNM,?40,IDNUM
"RTN","IBCEF74A",66,0)
 I DATA="" W !?8,"(-) None Found"
"RTN","IBCEF74A",67,0)
 ;
"RTN","IBCEF74A",68,0)
 ; secondary IDs
"RTN","IBCEF74A",69,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",70,0)
 W !?5,"Lab or Facility Secondary IDs (VistA Records SUB1,SUB2,OP3,OP6,OP7):"
"RTN","IBCEF74A",71,0)
 D SECID(Z,.IBQUIT)
"RTN","IBCEF74A",72,0)
 I IBQUIT G EX
"RTN","IBCEF74A",73,0)
 ;
"RTN","IBCEF74A",74,0)
EX ;
"RTN","IBCEF74A",75,0)
 Q
"RTN","IBCEF74A",76,0)
 ;
"RTN","IBCEF74A",77,0)
QUAL(Z,FORMTYPE) ; turn the qualifier code into a qualifier description
"RTN","IBCEF74A",78,0)
 NEW QUAL,IEN
"RTN","IBCEF74A",79,0)
 S QUAL=""
"RTN","IBCEF74A",80,0)
 I $G(Z)="" G QUALX
"RTN","IBCEF74A",81,0)
 I Z="1C" D  G QUALX   ; qualifier for Medicare Part ?
"RTN","IBCEF74A",82,0)
 . I $G(FORMTYPE)=2 S QUAL="MEDICARE PART B"   ; 1500
"RTN","IBCEF74A",83,0)
 . I $G(FORMTYPE)=3 S QUAL="MEDICARE PART A"   ; ub
"RTN","IBCEF74A",84,0)
 . Q
"RTN","IBCEF74A",85,0)
 I Z=34 S Z="SY"       ; qualifier for SSN
"RTN","IBCEF74A",86,0)
 S IEN=+$O(^IBE(355.97,"C",Z,"")) I 'IEN G QUALX
"RTN","IBCEF74A",87,0)
 S QUAL=$P($G(^IBE(355.97,IEN,0)),U,1)
"RTN","IBCEF74A",88,0)
QUALX ;
"RTN","IBCEF74A",89,0)
 Q QUAL
"RTN","IBCEF74A",90,0)
 ;
"RTN","IBCEF74A",91,0)
SECID(Z,IBQUIT) ; Display secondary ID and qualifier information
"RTN","IBCEF74A",92,0)
 ; Z is the type of IDs passed in; either BILLING PRV or LAB/FAC
"RTN","IBCEF74A",93,0)
 ; IBQUIT is returned if passed by reference
"RTN","IBCEF74A",94,0)
 NEW SEQ,ZI,ZN,PSIN,DATA,QUALNM,IDNUM,NODATA
"RTN","IBCEF74A",95,0)
 S IBQUIT=0,NODATA=1
"RTN","IBCEF74A",96,0)
 F SEQ="P","S","T" D  Q:IBQUIT
"RTN","IBCEF74A",97,0)
 . ;
"RTN","IBCEF74A",98,0)
 . ; current ins only for billing provider secondary IDs
"RTN","IBCEF74A",99,0)
 . I Z="BILLING PRV",SEQ'=$$COB^IBCEF(IBIFN) Q
"RTN","IBCEF74A",100,0)
 . S ZI=""
"RTN","IBCEF74A",101,0)
 . F  S ZI=$O(IBX(Z,SEQ,ZI)) Q:ZI=""  D  Q:IBQUIT
"RTN","IBCEF74A",102,0)
 .. S ZN=0
"RTN","IBCEF74A",103,0)
 .. F  S ZN=$O(IBX(Z,SEQ,ZI,ZN)) Q:'ZN  D  Q:IBQUIT
"RTN","IBCEF74A",104,0)
 ... S PSIN=0   ; start at 0 to skip primary IDs
"RTN","IBCEF74A",105,0)
 ... F  S PSIN=$O(IBID(Z,IBIFN,ZI,ZN,PSIN)) Q:PSIN=""  D  Q:IBQUIT
"RTN","IBCEF74A",106,0)
 .... S DATA=$G(IBID(Z,IBIFN,ZI,ZN,PSIN))
"RTN","IBCEF74A",107,0)
 .... S QUALNM=$$QUAL($P(DATA,U,1),$$FT^IBCEF(IBIFN))
"RTN","IBCEF74A",108,0)
 .... S IDNUM=$P(DATA,U,2)
"RTN","IBCEF74A",109,0)
 .... I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() Q:IBQUIT
"RTN","IBCEF74A",110,0)
 .... S NODATA=0
"RTN","IBCEF74A",111,0)
 .... W !?8,"(",SEQ,") ",QUALNM,?40,IDNUM
"RTN","IBCEF74A",112,0)
 .... I Z="LAB/FAC",$D(^DGCR(399,IBIFN,"I2")),SEQ=$$COB^IBCEF(IBIFN) W ?54,"<<<Current Ins"
"RTN","IBCEF74A",113,0)
 .... I Z="BILLING PRV",PSIN=1 W ?54,"<<<System Generated ID"
"RTN","IBCEF74A",114,0)
 .... Q
"RTN","IBCEF74A",115,0)
 ... Q
"RTN","IBCEF74A",116,0)
 .. Q
"RTN","IBCEF74A",117,0)
 . Q
"RTN","IBCEF74A",118,0)
 I NODATA,'IBQUIT W !?8,"(-) None Found"
"RTN","IBCEF74A",119,0)
SECIDX ;
"RTN","IBCEF74A",120,0)
 Q
"RTN","IBCEF74A",121,0)
 ;
"RTN","IBCEF76")
0^74^B34168446^B34194204
"RTN","IBCEF76",1,0)
IBCEF76 ;ALB/WCJ - Provider ID functions ;13 Feb 2006
"RTN","IBCEF76",2,0)
 ;;2.0;INTEGRATED BILLING;**320,349**;21-MAR-94;Build 46
"RTN","IBCEF76",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF76",4,0)
 ;
"RTN","IBCEF76",5,0)
 G AWAY
"RTN","IBCEF76",6,0)
AWAY Q
"RTN","IBCEF76",7,0)
 ; 
"RTN","IBCEF76",8,0)
LFIDS(IBIFN,IDS,IBSTRIP,SEG) ;
"RTN","IBCEF76",9,0)
 ;  Pass in the the internal claim number and return the array of IDS.
"RTN","IBCEF76",10,0)
 ;  IDS("C"urrent or "O"ther, Order of Insurance within subscript 1, order of ID within subscript 2)
"RTN","IBCEF76",11,0)
 ;  IDS("C",1)="P"
"RTN","IBCEF76",12,0)
 ;  IDS("C",1,0)=Qualifier^Primary ID
"RTN","IBCEF76",13,0)
 ;  IDS("C",1,1)=Qualifier^Sec ID #1
"RTN","IBCEF76",14,0)
 ;  IDS("C",1,2)=Qualifier^Sec ID #2
"RTN","IBCEF76",15,0)
 ;
"RTN","IBCEF76",16,0)
 N DAT,IBFRMTYP,IBCARE,IBDIV,IBINS,OUTFAC,MAIN,IBCCOB,TMPIDS,COB,IBSORT1,IBSORT2,IBLIMIT
"RTN","IBCEF76",17,0)
 ;
"RTN","IBCEF76",18,0)
 S DAT=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEF76",19,0)
 S IBFRMTYP=$$FT^IBCEF(IBIFN),IBFRMTYP=$S(IBFRMTYP=2:2,IBFRMTYP=3:1,1:0)
"RTN","IBCEF76",20,0)
 S IBCARE=$S($$ISRX^IBCEF1(IBIFN):3,1:0) ;if an Rx refill bill
"RTN","IBCEF76",21,0)
 S:IBCARE=0 IBCARE=$$INPAT^IBCEF(IBIFN,1) S:'IBCARE IBCARE=2 ;1-inp,2-out
"RTN","IBCEF76",22,0)
 S IBDIV=+$P(DAT,U,22)
"RTN","IBCEF76",23,0)
 S OUTFAC=$P($G(^DGCR(399,IBIFN,"U2")),U,10)
"RTN","IBCEF76",24,0)
 S MAIN=$$MAIN^IBCEP2B()  ; get the IEN for main Division
"RTN","IBCEF76",25,0)
 ;
"RTN","IBCEF76",26,0)
 S IBCCOB=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF76",27,0)
 F COB=1:1:3 D
"RTN","IBCEF76",28,0)
 . S IBSORT1=$S(COB=IBCCOB:"C",1:"O")
"RTN","IBCEF76",29,0)
 . S IBSORT2=$S(IBSORT1="C":1,COB=1:1,COB=2&(IBCCOB=1):1,1:2)
"RTN","IBCEF76",30,0)
 . S IBLIMIT=$S(IBSORT1="C":5,1:3)  ; Limit secondary IDs
"RTN","IBCEF76",31,0)
 . S DAT=$G(^DGCR(399,IBIFN,"I"_COB))
"RTN","IBCEF76",32,0)
 .;
"RTN","IBCEF76",33,0)
 . S IBINS=$P(DAT,U)  ; insurance PTR 36
"RTN","IBCEF76",34,0)
 . Q:IBINS=""
"RTN","IBCEF76",35,0)
 .;
"RTN","IBCEF76",36,0)
 . I OUTFAC]"" D  Q
"RTN","IBCEF76",37,0)
 .. D NONVALF(IBIFN,OUTFAC_";IBA(355.93,",IBINS,IBFRMTYP,IBCARE,.IDS,IBSORT1,IBSORT2,COB,IBLIMIT,IBSTRIP,SEG)
"RTN","IBCEF76",38,0)
 . ;
"RTN","IBCEF76",39,0)
 . I OUTFAC="" D
"RTN","IBCEF76",40,0)
 .. ; [7] Send VA Lab/Facility IDs or Facility Data for VAMC?(0 - NO, 1 - YES)
"RTN","IBCEF76",41,0)
 .. S DAT(3647)=$P($G(^DIC(36,IBINS,4)),U,7)
"RTN","IBCEF76",42,0)
 .. I 'DAT(3647),IBDIV=MAIN Q
"RTN","IBCEF76",43,0)
 .. S IDS("LAB/FAC",IBIFN,IBSORT1,IBSORT2,0)=$$STRIP($$TAXID^IBCEF75(),1,U,IBSTRIP)
"RTN","IBCEF76",44,0)
 .. D VALF(IBIFN,IBINS,IBFRMTYP,IBDIV,.IDS,IBSORT1,IBSORT2,COB,IBLIMIT,IBSTRIP,SEG)
"RTN","IBCEF76",45,0)
 Q
"RTN","IBCEF76",46,0)
 ;
"RTN","IBCEF76",47,0)
VALF(IBIFN,INS,FT,DIV,IDS,SORT1,SORT2,COB,IBLIMIT,IBSTRIP,SEG) ; Get VA Lab/Fac Secondary IDs
"RTN","IBCEF76",48,0)
 ; Pass in INS - IEN to file 36
"RTN","IBCEF76",49,0)
 ; FT - 1 = UB 2 = 1500
"RTN","IBCEF76",50,0)
 ; DIV - PTR to 40.8
"RTN","IBCEF76",51,0)
 ;
"RTN","IBCEF76",52,0)
 N Z,Z0,ID,QUAL,MAIN,IDTBL,CNT,Z
"RTN","IBCEF76",53,0)
 S MAIN=$$MAIN^IBCEP2B()  ; get the IEN for main Division
"RTN","IBCEF76",54,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",INS,Z)) Q:'Z  D
"RTN","IBCEF76",55,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCEF76",56,0)
 . Q:$P(Z0,U,8)'="LF"   ; Screen out anything other than Lab or Facility
"RTN","IBCEF76",57,0)
 . I +$P(Z0,U,4) Q:$P(Z0,U,4)'=FT   ; Form type must match that passed in or be a 0 which allows both
"RTN","IBCEF76",58,0)
 . S ID=$$STRIP($P(Z0,U,7),1,,IBSTRIP)
"RTN","IBCEF76",59,0)
 . S QUAL=$$STRIP($P(Z0,U,6),1,,IBSTRIP)
"RTN","IBCEF76",60,0)
 . Q:QUAL=""   ; Needs a qualifier
"RTN","IBCEF76",61,0)
 . S QUAL=$P($G(^IBE(355.97,QUAL,0)),U,3)
"RTN","IBCEF76",62,0)
 . I FT=1,SORT1="O" Q:$$OP3^IBCEF73(FT)'[(U_QUAL_U)   ; Institutional
"RTN","IBCEF76",63,0)
 . I FT=2,SORT1="O" Q:$$OP7^IBCEF73(FT)'[(U_QUAL_U)   ; Professional
"RTN","IBCEF76",64,0)
 . I $P(Z0,U,5)=""!($P(Z0,U,5)=0)!($P(Z0,U,5)=MAIN) S IDTBL("DEF",QUAL)=ID  ; set up default for main division
"RTN","IBCEF76",65,0)
 . I $P(Z0,U,5)=DIV S IDTBL("DIV",QUAL)=ID  ; set up default for division
"RTN","IBCEF76",66,0)
 S CNT=0
"RTN","IBCEF76",67,0)
 S IDS("LAB/FAC",IBIFN,SORT1,SORT2)=$E("PST",COB)
"RTN","IBCEF76",68,0)
 I $D(IDTBL("DIV")) D  Q
"RTN","IBCEF76",69,0)
 . S Z="" F  S Z=$O(IDTBL("DIV",Z)) Q:Z=""  S CNT=CNT+1,IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)=Z_U_IDTBL("DIV",Z) Q:CNT=IBLIMIT
"RTN","IBCEF76",70,0)
 I $D(IDTBL("DEF")) D  Q
"RTN","IBCEF76",71,0)
 . S Z="" F  S Z=$O(IDTBL("DEF",Z)) Q:Z=""  S CNT=CNT+1,IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)=Z_U_IDTBL("DEF",Z) Q:CNT=IBLIMIT
"RTN","IBCEF76",72,0)
 Q
"RTN","IBCEF76",73,0)
 ;
"RTN","IBCEF76",74,0)
NONVALF(IBIFN,PRV,INS,FT,PT,IDS,SORT1,SORT2,COB,IBLIMIT,IBSTRIP,SEG) ; Get Non VA Lab/Fac Secondary IDs
"RTN","IBCEF76",75,0)
 ; Pass in PRV - VPTR - PTR to 355.93 (in format of variabel pointer IEN;IBA(355.93,
"RTN","IBCEF76",76,0)
 ; Pass in INS - PTR to 36 of null (not provide by insurance company)
"RTN","IBCEF76",77,0)
 ; FT - 1 = UB 2 = 1500
"RTN","IBCEF76",78,0)
 ; PT - Patient Type - 1 inpatient 2 outpatient
"RTN","IBCEF76",79,0)
 ; IDS array being returned
"RTN","IBCEF76",80,0)
 ; SORT1 - "C"urrent or "O"ther
"RTN","IBCEF76",81,0)
 ; SORT2 - 1 if current or (1 or 2 if other)
"RTN","IBCEF76",82,0)
 N Z,Z0,ID,QUAL,IDTBL,CNT
"RTN","IBCEF76",83,0)
 S Z=0 F  S Z=$O(^IBA(355.9,"B",PRV,Z)) Q:'Z  D
"RTN","IBCEF76",84,0)
 . S Z0=$G(^IBA(355.9,Z,0))
"RTN","IBCEF76",85,0)
 . I +$P(Z0,U,4) Q:$P(Z0,U,4)'=FT   ; Form type must match that passed in or be a 0 which allows both UB and 1500
"RTN","IBCEF76",86,0)
 . I +$P(Z0,U,5) Q:$P(Z0,U,5)'=PT   ; Patient type must match that passed in or be a 0 which allows both in patient and outpatient
"RTN","IBCEF76",87,0)
 . I INS]"",$P(Z0,U,2)]"",INS'=$P(Z0,U,2) Q
"RTN","IBCEF76",88,0)
 . S ID=$$STRIP($P(Z0,U,7),1,,IBSTRIP)
"RTN","IBCEF76",89,0)
 . Q:ID=""
"RTN","IBCEF76",90,0)
 . S QUAL=$$STRIP($P(Z0,U,6),1,,IBSTRIP)
"RTN","IBCEF76",91,0)
 . Q:QUAL=""   ; Needs a qualifier
"RTN","IBCEF76",92,0)
 . S QUAL=$P($G(^IBE(355.97,QUAL,0)),U,3)
"RTN","IBCEF76",93,0)
 . Q:QUAL=""
"RTN","IBCEF76",94,0)
 . I FT=1,SORT1="O" Q:$$OP3^IBCEF73(FT)'[(U_QUAL_U)   ; Institutional
"RTN","IBCEF76",95,0)
 . I FT=2,SORT1="O" Q:$$OP7^IBCEF73(FT)'[(U_QUAL_U)   ; Professional
"RTN","IBCEF76",96,0)
 . I $G(SEG)="SUB1" Q:$$SUB1^IBCEF73(FT)'[(U_QUAL_U)
"RTN","IBCEF76",97,0)
 . I $P(Z0,U,2)="" S IDTBL("OWN",QUAL)=ID  ; set up default of lab or facilities own ids
"RTN","IBCEF76",98,0)
 . I $P(Z0,U,2)=INS S IDTBL("INS",QUAL)=ID  ; set up default for division
"RTN","IBCEF76",99,0)
 ;
"RTN","IBCEF76",100,0)
 S CNT=0
"RTN","IBCEF76",101,0)
 S IDS("LAB/FAC",IBIFN,SORT1,SORT2)=$E("PST",COB)_U_PRV
"RTN","IBCEF76",102,0)
 ; get primary
"RTN","IBCEF76",103,0)
 S Z0=$G(^IBA(355.93,+PRV,0))
"RTN","IBCEF76",104,0)
 I $P(Z0,U,9)]"",$P(Z0,U,13)]"" S IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)=$$STRIP($P($G(^IBE(355.97,$P(Z0,U,13),0)),U,3)_U_$P(Z0,U,9),1,U,IBSTRIP)
"RTN","IBCEF76",105,0)
 ; get secondarys in order
"RTN","IBCEF76",106,0)
 I $D(IDTBL("INS")) D
"RTN","IBCEF76",107,0)
 . N Z S Z="" F  S Z=$O(IDTBL("INS",Z)) Q:Z=""  S CNT=CNT+1,IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)=Z_U_IDTBL("INS",Z) Q:CNT=IBLIMIT
"RTN","IBCEF76",108,0)
 I $D(IDTBL("OWN")),CNT'=IBLIMIT D
"RTN","IBCEF76",109,0)
 . N Z S Z="" F  S Z=$O(IDTBL("OWN",Z)) Q:Z=""  I '$D(IDTBL("INS",Z)) S CNT=CNT+1,IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)=Z_U_IDTBL("OWN",Z) Q:CNT=IBLIMIT
"RTN","IBCEF76",110,0)
 Q
"RTN","IBCEF76",111,0)
 ;
"RTN","IBCEF76",112,0)
STRIP(X,SPACE,EXC,IBSTRIP) ;
"RTN","IBCEF76",113,0)
 ; Strip punctuation from data in X
"RTN","IBCEF76",114,0)
 ; SPACE = flag if 1 strip SPACES
"RTN","IBCEF76",115,0)
 ; EXC = list of punct not to strip
"RTN","IBCEF76",116,0)
 ; 
"RTN","IBCEF76",117,0)
 Q:'$G(IBSTRIP) X
"RTN","IBCEF76",118,0)
 Q $$NOPUNCT^IBCEF(X,$G(SPACE),$G(EXC))
"RTN","IBCEF76",119,0)
 ;
"RTN","IBCEF76",120,0)
OTH(IBIFN,IBXSAVE,IBXDATA,COND,SEG) ; Procedure used in piece 2 of some output
"RTN","IBCEF76",121,0)
 ; formatter segments for other insurance
"RTN","IBCEF76",122,0)
 ; COND = 0/1 value passed in that determines whether or not to call the
"RTN","IBCEF76",123,0)
 ;        provider ID function
"RTN","IBCEF76",124,0)
 ;  SEG = name of segment for use in calling ID^IBCEF2 (4 characters)
"RTN","IBCEF76",125,0)
 ;
"RTN","IBCEF76",126,0)
 N Z
"RTN","IBCEF76",127,0)
 D CLEANUP^IBCEF75(.IBXSAVE)
"RTN","IBCEF76",128,0)
 I COND D ALLIDS^IBCEF75(IBIFN,.IBXSAVE,1)
"RTN","IBCEF76",129,0)
 ;
"RTN","IBCEF76",130,0)
 ; Special Check:  if Other Insurance #2 has secondary ID's while Other
"RTN","IBCEF76",131,0)
 ; Insurance #1 does not, then move up #2 to be #1 here.  This is to
"RTN","IBCEF76",132,0)
 ; ensure the output formatter IBXDATA array is built properly.
"RTN","IBCEF76",133,0)
 ;
"RTN","IBCEF76",134,0)
 I $O(IBXSAVE("LAB/FAC",IBIFN,"O",2,0)),'$O(IBXSAVE("LAB/FAC",IBIFN,"O",1,0)) D
"RTN","IBCEF76",135,0)
 . K IBXSAVE("LAB/FAC",IBIFN,"O",1)
"RTN","IBCEF76",136,0)
 . M IBXSAVE("LAB/FAC",IBIFN,"O",1)=IBXSAVE("LAB/FAC",IBIFN,"O",2)
"RTN","IBCEF76",137,0)
 . K IBXSAVE("LAB/FAC",IBIFN,"O",2)
"RTN","IBCEF76",138,0)
 . Q
"RTN","IBCEF76",139,0)
 ;
"RTN","IBCEF76",140,0)
 K IBXDATA
"RTN","IBCEF76",141,0)
 S Z=0
"RTN","IBCEF76",142,0)
 F  S Z=$O(IBXSAVE("LAB/FAC",IBIFN,"O",Z)) Q:'Z  D
"RTN","IBCEF76",143,0)
 . I '$O(IBXSAVE("LAB/FAC",IBIFN,"O",Z,0)) Q
"RTN","IBCEF76",144,0)
 . S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBIFN,"O",Z)),U,1)
"RTN","IBCEF76",145,0)
 . I Z>1 D ID^IBCEF2(Z,SEG)
"RTN","IBCEF76",146,0)
 . Q
"RTN","IBCEF76",147,0)
OTHX ;
"RTN","IBCEF76",148,0)
 Q
"RTN","IBCEF76",149,0)
 ;
"RTN","IBCEF77")
0^9^B24927059^B12716914
"RTN","IBCEF77",1,0)
IBCEF77 ;WOIFO/SS - FORMATTER/EXTRACT BILL FUNCTIONS ;31-JUL-03
"RTN","IBCEF77",2,0)
 ;;2.0;INTEGRATED BILLING;**232,280,155,290,291,320,348,349**;21-MAR-94;Build 46
"RTN","IBCEF77",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF77",4,0)
 ;
"RTN","IBCEF77",5,0)
SORT(IBPRNUM,IBPRTYP,IB399,IBSRC,IBDST,IBN,IBEXC,IBSEQ,IBLIMIT) ;
"RTN","IBCEF77",6,0)
 N IBXIEN,IBXDATA,IBNET,IBTRI,IB1,IB2,IBID,Z,IBZ,IBZ1,IBSVP
"RTN","IBCEF77",7,0)
 S (IB1,IB2,IBZ,IBZ1,IBTRI)=""
"RTN","IBCEF77",8,0)
 D F^IBCEF("N-ALL ATT/RENDERING PROV SSN","IBZ",,IB399)
"RTN","IBCEF77",9,0)
 S IBZ1=$$ALLPTYP^IBCEF3(IB399)
"RTN","IBCEF77",10,0)
 F Z=1:1:3 S $P(IBZ1,U,Z)=$S($P(IBZ1,U,Z)="CH":1,1:"") S:$P(IBZ1,U,Z) IBTRI=1
"RTN","IBCEF77",11,0)
 S IBNET=$$NETID^IBCEP() ; netwrk id type
"RTN","IBCEF77",12,0)
 I $G(IBN) D
"RTN","IBCEF77",13,0)
 . S Z=0 F  S Z=$O(IBDST(IBPRNUM,IBPRTYP,Z)) Q:'Z  S IBID(+$P(IBDST(IBPRNUM,IBPRTYP,Z),U,9))=""
"RTN","IBCEF77",14,0)
 F  S IB1=$O(IBSRC(IB1)) Q:IB1=""  D  Q:IBN=IBLIMIT
"RTN","IBCEF77",15,0)
 . N OK,IBSTLIC
"RTN","IBCEF77",16,0)
 . S IBSTLIC=""
"RTN","IBCEF77",17,0)
 . F  S IB2=$O(IBSRC(IB1,IB2)) Q:IB2=""  D  Q:IBN=IBLIMIT
"RTN","IBCEF77",18,0)
 . . S IBSVP=$P(IBSRC(IB1,IB2),U)
"RTN","IBCEF77",19,0)
 . . ; If ID overridden, output no others of this type
"RTN","IBCEF77",20,0)
 . . I $G(IBEXC),$P($G(IBSRC(IB1,IB2)),U,9)=IBEXC Q
"RTN","IBCEF77",21,0)
 . . ; Ck state of care/lic match if st lic#
"RTN","IBCEF77",22,0)
 . . I $P($G(IBSRC(IB1,IB2)),U,3)="0B" S OK=1 D  Q:'OK
"RTN","IBCEF77",23,0)
 . . . I +$$CAREST^IBCEP2A(IB399)'=$P(IBSRC(IB1,IB2),U,7) S IBSTLIC=1 Q
"RTN","IBCEF77",24,0)
 . . . I $G(IBSTLIC(0))'="" S OK=0 Q
"RTN","IBCEF77",25,0)
 . . . S IBSTLIC(0)=$G(IBSRC(IB1,IB2)),OK=0
"RTN","IBCEF77",26,0)
 . . ; Exclude SSN from sec ids unless required
"RTN","IBCEF77",27,0)
 . . I $P($G(IBSRC(IB1,IB2)),U,3)="SY" Q
"RTN","IBCEF77",28,0)
 . . ; Only 1 of each prov id type
"RTN","IBCEF77",29,0)
 . . Q:$D(IBID(+$P($G(IBSRC(IB1,IB2)),U,9)))
"RTN","IBCEF77",30,0)
 . . S IBN=IBN+1,IBID(+$P($G(IBSRC(IB1,IB2)),U,9))=""
"RTN","IBCEF77",31,0)
 . . S IBDST(IBPRNUM,IBPRTYP,IBN)=$G(IBSRC(IB1,IB2))
"RTN","IBCEF77",32,0)
 . I IBN'=IBLIMIT,'$G(IBSTLIC),$G(IBSTLIC(0))'="" S IBN=IBN+1,IBDST(IBPRNUM,IBPRTYP,IBN)=IBSTLIC(0)
"RTN","IBCEF77",33,0)
 I $$FT^IBCEF(IB399)=2,$G(IBID(IBNET))="",IBTRI,$P(IBZ1,U,IBSEQ) D    ; WCJ 02/13/2006
"RTN","IBCEF77",34,0)
 . Q:$P(IBZ,U,IBPRTYP)=""
"RTN","IBCEF77",35,0)
 . ; here, no network id & TRICARE ins co.
"RTN","IBCEF77",36,0)
 . N Z
"RTN","IBCEF77",37,0)
 . S Z=+$O(^DGCR(399,IB399,"PRV","B",IBPRTYP,0)),Z=$P($G(^DGCR(399,IB399,"PRV",Z,0)),U,2)
"RTN","IBCEF77",38,0)
 . S IBN=IBN+1,IBDST(IBPRNUM,IBPRTYP,IBN)=Z_U_+$$POLICY^IBCEF(IB399,1,IBSEQ)_U_$P($G(^IBE(355.97,IBNET,0)),U,3)_U_$P(IBZ,U,IBPRTYP)_U_"0^0^^^"_IBNET
"RTN","IBCEF77",39,0)
 Q
"RTN","IBCEF77",40,0)
 ;
"RTN","IBCEF77",41,0)
 ; esg - 8/25/06 - IB*2*348 - CFIDS function
"RTN","IBCEF77",42,0)
 ;
"RTN","IBCEF77",43,0)
CFIDS(IBIFN,PRVTYP,ALLOWIDS) ; Claim Form IDs for human providers
"RTN","IBCEF77",44,0)
 ; Function returns a 3 piece string:  [1] default secondary ID qual
"RTN","IBCEF77",45,0)
 ;                                     [2] default secondary ID
"RTN","IBCEF77",46,0)
 ;                                     [3] NPI
"RTN","IBCEF77",47,0)
 ; Input:   IBIFN - internal claim#
"RTN","IBCEF77",48,0)
 ;         PRVTYP - internal provider type ID number
"RTN","IBCEF77",49,0)
 ;                - 1:REFER;2:OPER;3:REND;4:ATT;5:SUPER;9:OTHER
"RTN","IBCEF77",50,0)
 ;                - if blank, then default Att/Rend based on form type
"RTN","IBCEF77",51,0)
 ;         ALLOWIDS - List of allowable Secondary IDS ^ delimited. 
"RTN","IBCEF77",52,0)
 ;                  ex "^1A^1B^1C^1H^G2^LU^N5^"
"RTN","IBCEF77",53,0)
 ;                  UB-04 only wants IDs provided by the payer, not the providers own IDS
"RTN","IBCEF77",54,0)
 ;                  Also, they want the qualifier to be G2 (Commercial)
"RTN","IBCEF77",55,0)
 ;                  if it is a payer provided ID
"RTN","IBCEF77",56,0)
 NEW ID,FT,IBZ,IBQ,IBSID,IBNPI,I,OK
"RTN","IBCEF77",57,0)
 S ID=""
"RTN","IBCEF77",58,0)
 I '$G(IBIFN) G CFIDSX
"RTN","IBCEF77",59,0)
 S FT=$$FT^IBCEF(IBIFN)
"RTN","IBCEF77",60,0)
 I '$G(PRVTYP) S PRVTYP=3 I FT=3 S PRVTYP=4
"RTN","IBCEF77",61,0)
 D ALLIDS^IBCEF75(IBIFN,.IBZ,1)
"RTN","IBCEF77",62,0)
 S OK=0 I $G(ALLOWIDS)="" S OK=1
"RTN","IBCEF77",63,0)
 F I=1:1 D  Q:OK
"RTN","IBCEF77",64,0)
 . S IBQ=$P($G(IBZ("PROVINF",IBIFN,"C",1,PRVTYP,I)),U,3)    ; qualifier
"RTN","IBCEF77",65,0)
 . S IBSID=$P($G(IBZ("PROVINF",IBIFN,"C",1,PRVTYP,I)),U,4)  ; ID#
"RTN","IBCEF77",66,0)
 . I IBQ="",IBSID="" S OK=1 Q
"RTN","IBCEF77",67,0)
 . Q:OK
"RTN","IBCEF77",68,0)
 . I $G(ALLOWIDS)[(U_IBQ_U) S OK=1,IBQ="G2" Q
"RTN","IBCEF77",69,0)
 . S (IBQ,IBSID)=""
"RTN","IBCEF77",70,0)
 S IBNPI=""
"RTN","IBCEF77",71,0)
 D F^IBCEF("N-PROVIDER NPI CODES","IBNPI",,IBIFN)
"RTN","IBCEF77",72,0)
 S IBNPI=$P(IBNPI,U,PRVTYP)                               ; NPI
"RTN","IBCEF77",73,0)
 ;
"RTN","IBCEF77",74,0)
 ; special check for the referring doc
"RTN","IBCEF77",75,0)
 I PRVTYP=1,$D(IBZ("PROVINF",IBIFN,"C",1,PRVTYP)),IBQ="",IBSID="" S IBQ="1G",IBSID="VAD000"
"RTN","IBCEF77",76,0)
 ;
"RTN","IBCEF77",77,0)
 ; If UB-04 and no IDs, use VA UPIN as deafult
"RTN","IBCEF77",78,0)
 I $D(IBZ("PROVINF",IBIFN,"C",1,PRVTYP)),FT=3,IBQ="",IBSID="" S IBQ="1G",IBSID="VAD000"
"RTN","IBCEF77",79,0)
 ;
"RTN","IBCEF77",80,0)
 ; determine if legacy ID's should be displayed
"RTN","IBCEF77",81,0)
 I '$$PRTLID(IBIFN,IBNPI) S (IBQ,IBSID)=""
"RTN","IBCEF77",82,0)
 ;
"RTN","IBCEF77",83,0)
 S ID=IBQ_U_IBSID_U_IBNPI
"RTN","IBCEF77",84,0)
CFIDSX ;
"RTN","IBCEF77",85,0)
 Q ID
"RTN","IBCEF77",86,0)
 ;
"RTN","IBCEF77",87,0)
DOL(AMT,LEN,DEC) ; format dollar amounts for printed claim forms
"RTN","IBCEF77",88,0)
 ; AMT = amount to be formatted
"RTN","IBCEF77",89,0)
 ; LEN = length of field - right justified to this length
"RTN","IBCEF77",90,0)
 ; DEC = flag to include the decimal point or not
"RTN","IBCEF77",91,0)
 ;       DEFAULT value is to not include the decimal point
"RTN","IBCEF77",92,0)
 ;       if DEC is not defined or 0, assume no decimal point
"RTN","IBCEF77",93,0)
 ;       so 15 will be returned as 1500, 6.77 will be returned as 677
"RTN","IBCEF77",94,0)
 ;       if DEC is 1, then the decimal point will be included
"RTN","IBCEF77",95,0)
 ;
"RTN","IBCEF77",96,0)
 S LEN=$G(LEN,10),DEC=$G(DEC,0)     ; defaults
"RTN","IBCEF77",97,0)
 S AMT=$FN(+$G(AMT),"",2)           ; format # with 2 decimals
"RTN","IBCEF77",98,0)
 I 'DEC S AMT=$TR(AMT,".")          ; strip or leave decimal
"RTN","IBCEF77",99,0)
 S AMT=$J(AMT,LEN)                  ; right justify
"RTN","IBCEF77",100,0)
 Q AMT
"RTN","IBCEF77",101,0)
 ;
"RTN","IBCEF77",102,0)
PRTLID(IBIFN,NPI) ; YMG; Print Legacy IDs on the CMS-1500 or UB-04 form
"RTN","IBCEF77",103,0)
 ; Function fetches form type associated with given claim number
"RTN","IBCEF77",104,0)
 ; (values: 2 - CMS-1500 form, 3 - UB-04 form), then looks at
"RTN","IBCEF77",105,0)
 ; "Print Legacy ID" site parameter for this particular form type.
"RTN","IBCEF77",106,0)
 ; 
"RTN","IBCEF77",107,0)
 ; Possible site parameter values are:
"RTN","IBCEF77",108,0)
 ;   "Y" - always print Legacy ID
"RTN","IBCEF77",109,0)
 ;   "N" - never print Legacy ID
"RTN","IBCEF77",110,0)
 ;   "C" - only print Legacy ID if NPI is not available.
"RTN","IBCEF77",111,0)
 ;   
"RTN","IBCEF77",112,0)
 ; This information is used to determine if Legacy ID should be printed
"RTN","IBCEF77",113,0)
 ; for claim number in question.
"RTN","IBCEF77",114,0)
 ; 
"RTN","IBCEF77",115,0)
 ; Note: Situation when "Print Legacy ID" site parameter is not set is treated
"RTN","IBCEF77",116,0)
 ;       as if this parameter was set to "Y" - always print Legacy ID.
"RTN","IBCEF77",117,0)
 ; 
"RTN","IBCEF77",118,0)
 ; Input:
"RTN","IBCEF77",119,0)
 ;             IBIFN - internal claim number
"RTN","IBCEF77",120,0)
 ;       NPI   - NPI number (or "" if no NPI is available)
"RTN","IBCEF77",121,0)
 ; 
"RTN","IBCEF77",122,0)
 ; Returns:
"RTN","IBCEF77",123,0)
 ;       0  - Legacy ID should not be printed
"RTN","IBCEF77",124,0)
 ;       1  - Legacy ID should be printed
"RTN","IBCEF77",125,0)
 ;
"RTN","IBCEF77",126,0)
 Q $S(NPI="":"YC",1:"Y")[$P($G(^IBE(350.9,1,1)),U,$S($$FT^IBCEF(IBIFN)=2:32,1:33))
"RTN","IBCEF77",127,0)
 ;
"RTN","IBCEF77",128,0)
REMARK(IBIFN,IBXDATA,OFLG) ; procedure to return array of UB-04 remark text
"RTN","IBCEF77",129,0)
 ; for claim IBIFN.  Data pulled from field# 402 of file 399 and
"RTN","IBCEF77",130,0)
 ; formatted into an array IBXDATA(n) where each line is not greater
"RTN","IBCEF77",131,0)
 ; than 24 characters long.  This will fit into UB-04 FL-80.
"RTN","IBCEF77",132,0)
 ;
"RTN","IBCEF77",133,0)
 ; OFLG=1 only when called in the output formatter.  In this case, only
"RTN","IBCEF77",134,0)
 ; 4 lines in IBXDATA will be returned.
"RTN","IBCEF77",135,0)
 ;
"RTN","IBCEF77",136,0)
 NEW TEXT,LEN,IBZ,J,PCE,CHS,NEWCHS,IBK,J,TX
"RTN","IBCEF77",137,0)
 K IBXDATA
"RTN","IBCEF77",138,0)
 S TEXT=$P($G(^DGCR(399,+$G(IBIFN),"UF2")),U,3) I TEXT="" Q
"RTN","IBCEF77",139,0)
 ;
"RTN","IBCEF77",140,0)
 ; need to break up large words for word wrapping purposes to get
"RTN","IBCEF77",141,0)
 ; as many characters as possible in the box.
"RTN","IBCEF77",142,0)
 S LEN=17
"RTN","IBCEF77",143,0)
 F PCE=1:1 Q:PCE>$L(TEXT," ")  S CHS=$P(TEXT," ",PCE) I $L(CHS)>LEN D
"RTN","IBCEF77",144,0)
 . S NEWCHS=$E(CHS,1,LEN)_" "_$E(CHS,LEN+1,999)
"RTN","IBCEF77",145,0)
 . S $P(TEXT," ",PCE)=NEWCHS
"RTN","IBCEF77",146,0)
 . Q
"RTN","IBCEF77",147,0)
 ;
"RTN","IBCEF77",148,0)
 ; When calling FSTRNG^IBJU1 which calls ^DIWP, FileMan builds the
"RTN","IBCEF77",149,0)
 ; array with strings of max length=1 less than what you tell it.
"RTN","IBCEF77",150,0)
 ;
"RTN","IBCEF77",151,0)
 S LEN=20                             ; line 1 is 19 chars
"RTN","IBCEF77",152,0)
 D FSTRNG^IBJU1(TEXT,LEN,.IBZ)        ; build IBZ array
"RTN","IBCEF77",153,0)
 S IBK=$$TRIM^XLFSTR($G(IBZ(1)))      ; save off the first line
"RTN","IBCEF77",154,0)
 S TEXT=$P(TEXT,IBK,2,99)             ; restore the rest of the text
"RTN","IBCEF77",155,0)
 S TEXT=$$TRIM^XLFSTR(TEXT)           ; trim spaces
"RTN","IBCEF77",156,0)
 ;
"RTN","IBCEF77",157,0)
 S LEN=25                             ; the rest is 24 chars
"RTN","IBCEF77",158,0)
 D FSTRNG^IBJU1(TEXT,LEN,.IBZ)        ; build IBZ array
"RTN","IBCEF77",159,0)
 S IBXDATA(1)="     "_IBK             ; line 1
"RTN","IBCEF77",160,0)
 S J=0 F  S J=$O(IBZ(J)) Q:'J  D      ; lines 2-n
"RTN","IBCEF77",161,0)
 . I J>3,$G(OFLG) Q                   ; only 4 lines for output formatter
"RTN","IBCEF77",162,0)
 . S TX=$$TRIM^XLFSTR($G(IBZ(J)))
"RTN","IBCEF77",163,0)
 . I TX'="" S IBXDATA(J+1)=TX
"RTN","IBCEF77",164,0)
 . Q
"RTN","IBCEF77",165,0)
 Q
"RTN","IBCEF77",166,0)
 ;
"RTN","IBCEFG1")
0^46^B26630861^B26164833
"RTN","IBCEFG1",1,0)
IBCEFG1 ;ALB/TMP - OUTPUT FORMATTER DATA DEFINITION UTILITIES ;18-JAN-96
"RTN","IBCEFG1",2,0)
 ;;2.0;INTEGRATED BILLING;**52,51,137,181,197,232,288,349**;21-MAR-94;Build 46
"RTN","IBCEFG1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEFG1",4,0)
 ;
"RTN","IBCEFG1",5,0)
EDIBILL(IBXFORM,IBXDA,IBINS,IBTYP) ; Find element associated with form fld
"RTN","IBCEFG1",6,0)
 ; IBXFORM = (REQUIRED) actual form being extracted (in file 353)
"RTN","IBCEFG1",7,0)
 ; IBXDA = (REQUIRED) form definition file (364.6) entry to use to find
"RTN","IBCEFG1",8,0)
 ;         extract data element definition entry (in file 364.7)
"RTN","IBCEFG1",9,0)
 ; IBINS = (REQUIRED) insurance co. ien for the current insurance on bill
"RTN","IBCEFG1",10,0)
 ; IBTYP = (REQUIRED) bill type (I/O)
"RTN","IBCEFG1",11,0)
 ;
"RTN","IBCEFG1",12,0)
 ; Returns ien of the entry in file 364.7 if a match on override criteria
"RTN","IBCEFG1",13,0)
 ;  was found.  Returns -1 if a screen form and the criteria fails for a
"RTN","IBCEFG1",14,0)
 ;  field without an override
"RTN","IBCEFG1",15,0)
 ;
"RTN","IBCEFG1",16,0)
 N IBX,IBPARFM,IBSCREEN,IBNMATCH,EDIQ,IB1
"RTN","IBCEFG1",17,0)
 I $G(IBXDA)=""!($G(IBXFORM)="") G EDIQ
"RTN","IBCEFG1",18,0)
 S EDIQ=0
"RTN","IBCEFG1",19,0)
 S IBPARFM=$P($G(^IBE(353,IBXFORM,2)),U,5) S:'IBPARFM IBPARFM=IBXFORM
"RTN","IBCEFG1",20,0)
 S IBSCREEN=($P($G(^IBE(353,+IBXFORM,2)),U,2)="S")
"RTN","IBCEFG1",21,0)
 S IB1=(IBPARFM=IBXFORM) ; Not a local field that is not a parent
"RTN","IBCEFG1",22,0)
 ;
"RTN","IBCEFG1",23,0)
 I $G(IBINS)'="",$G(IBTYP)'="" D:$O(^IBA(364.7,"AINTYP",IBXDA,""))'=""  G:EDIQ EDIQ
"RTN","IBCEFG1",24,0)
 . I '$D(^IBA(364.7,"AINTYP",IBXDA,IBINS,IBTYP)) S IBNMATCH=1 Q
"RTN","IBCEFG1",25,0)
 . S IBX=+$O(^IBA(364.7,"AINTYP",IBXDA,IBINS,IBTYP,"")),EDIQ=1 S:IBX IBNMATCH=0 ;by ins co and type of bill
"RTN","IBCEFG1",26,0)
 ;
"RTN","IBCEFG1",27,0)
 I $G(IBINS)'="" D:$O(^IBA(364.7,"AINS",IBXDA,""))'=""  G:EDIQ EDIQ
"RTN","IBCEFG1",28,0)
 . I '$D(^IBA(364.7,"AINS",IBXDA,IBINS)) S IBNMATCH=1 Q
"RTN","IBCEFG1",29,0)
 . S IBX=+$O(^IBA(364.7,"AINS",IBXDA,IBINS,"")),EDIQ=1 S:IBX IBNMATCH=0 ;ins co only
"RTN","IBCEFG1",30,0)
 ;
"RTN","IBCEFG1",31,0)
 I $G(IBTYP)'="" D:$O(^IBA(364.7,"ATYPE",IBXDA,""))'=""  G:EDIQ EDIQ
"RTN","IBCEFG1",32,0)
 . I '$D(^IBA(364.7,"ATYPE",IBXDA,IBTYP)) S IBNMATCH=1 Q
"RTN","IBCEFG1",33,0)
 . S IBX=+$O(^IBA(364.7,"ATYPE",IBXDA,IBTYP,"")),EDIQ=1 S:IBX IBNMATCH=0 ;type of bill only
"RTN","IBCEFG1",34,0)
 ;
"RTN","IBCEFG1",35,0)
 I IBXFORM,$S(IBXFORM'=IBPARFM:1,1:IBSCREEN) D  G EDIQ
"RTN","IBCEFG1",36,0)
 . S IBX=+$O(^IBA(364.7,"ALL",IBXDA,"")) ; Check for all ins co and types
"RTN","IBCEFG1",37,0)
 . I IBX,+$O(^IBA(364.7,"ALL",IBXDA,IBX)) D  ; Find override for 'ALL'
"RTN","IBCEFG1",38,0)
 .. N Z
"RTN","IBCEFG1",39,0)
 .. S Z=0 F  S Z=$O(^IBA(364.7,"ALL",IBXDA,Z)) Q:'Z  I $P($G(^IBA(364.7,Z,0)),U)'=IBXDA S IBX=Z Q
"RTN","IBCEFG1",40,0)
 . I 'IBX,+$O(^IBA(364.7,"B",IBXDA,"")) S IBX=$O(^(""))
"RTN","IBCEFG1",41,0)
 . S:IBX IBNMATCH=0
"RTN","IBCEFG1",42,0)
 ;
"RTN","IBCEFG1",43,0)
 I IBXFORM,$O(^IBA(364.6,"APAR",IBXFORM,IBXDA,"")) S IBX=+$O(^("")),IBX=+$O(^IBA(364.7,"B",IBX,0)) I IBX G EDIQ
"RTN","IBCEFG1",44,0)
 S IBX=+$O(^IBA(364.7,"B",IBXDA,""))
"RTN","IBCEFG1",45,0)
EDIQ I IBSCREEN,$G(IBNMATCH) S IBX=-1
"RTN","IBCEFG1",46,0)
 Q $G(IBX)
"RTN","IBCEFG1",47,0)
 ;
"RTN","IBCEFG1",48,0)
DT(DATE1,DATE2,FORMAT) ; Return date in DATE1 (and optionally DATE2)
"RTN","IBCEFG1",49,0)
 ;   (input in Fileman format) converted to X12 format
"RTN","IBCEFG1",50,0)
 ; FORMAT (required)
"RTN","IBCEFG1",51,0)
 ; DATE1,DATE2 in FILEMAN date format
"RTN","IBCEFG1",52,0)
 N DATE S DATE=""
"RTN","IBCEFG1",53,0)
 I DATE1=0 S DATE1=""
"RTN","IBCEFG1",54,0)
 I $E(FORMAT)="D" D  G DTQ
"RTN","IBCEFG1",55,0)
 .S DATE=$E(DATE1,2,7) Q:$P(FORMAT,"D",2)=6  ;YYMMDD
"RTN","IBCEFG1",56,0)
 .S:DATE1 DATE=($E(DATE1)+17)_DATE ;CCYYMMDD
"RTN","IBCEFG1",57,0)
 I $E(FORMAT)="R" D
"RTN","IBCEFG1",58,0)
 .S:DATE1 DATE=$E(DATE1,2,7)_"-"_$E($S($G(DATE2):DATE2,1:DATE1),2,7) ;YYMMDD-YYMMDD
"RTN","IBCEFG1",59,0)
 .Q:FORMAT["6"
"RTN","IBCEFG1",60,0)
 .S DATE=($E(DATE1)+17)_DATE,$P(DATE,"-",2)=($E($S($G(DATE2):DATE2,1:DATE1))+17)_$P(DATE,"-",2) ;CCYYMMDD-CCYYMMDD
"RTN","IBCEFG1",61,0)
DTQ Q DATE
"RTN","IBCEFG1",62,0)
 ;
"RTN","IBCEFG1",63,0)
NAME(IBNM1,COMB) ; Parse person's nm into 5 pieces LAST^FIRST^MIDDLE^CRED^SUFFIX
"RTN","IBCEFG1",64,0)
 ; IBNM1 = NAME in LAST,FIRST MIDDLE^vp file ien (200 or 355.93)^bill ien^prv type
"RTN","IBCEFG1",65,0)
 ;      OR         FIRST MIDDLE LAST^vp file ien (200 or 355.93)^bill ien^prv type
"RTN","IBCEFG1",66,0)
 ; COMB = if set to 1, then combine the first and middle name
"RTN","IBCEFG1",67,0)
 ;        if set to 2, combine the last and middle names
"RTN","IBCEFG1",68,0)
 N PC,IBIEN,IBCRED,IBNM,IBNMC,IBPIEN
"RTN","IBCEFG1",69,0)
 S IBIEN=$P(IBNM1,U,2),IBNMC=$P(IBNM1,U)
"RTN","IBCEFG1",70,0)
 S IBPIEN=+$O(^DGCR(399,+$P(IBNM1,U,3),"PRV","B",+$P(IBNM1,U,4),0))
"RTN","IBCEFG1",71,0)
 S IBCRED=$$CRED^IBCEU(IBIEN,+$P(IBNM1,U,3),IBPIEN) ;Degree
"RTN","IBCEFG1",72,0)
 I IBNMC="DEPT VETERANS AFFAIRS" S IBNMC="VETERANS AFFAIRS,DEPT"
"RTN","IBCEFG1",73,0)
 I IBNMC["," D  G NAMEQ
"RTN","IBCEFG1",74,0)
 . S IBNMC=$TR(IBNMC,".") D NAMECOMP^XLFNAME(.IBNMC)
"RTN","IBCEFG1",75,0)
 . S IBNM=$G(IBNMC("FAMILY"))_U_$G(IBNMC("GIVEN"))_U_$G(IBNMC("MIDDLE"))_U_IBCRED_U_$G(IBNMC("SUFFIX"))
"RTN","IBCEFG1",76,0)
 D STDNAME^XLFNAME(.IBNMC,"C")
"RTN","IBCEFG1",77,0)
 S IBNM=$G(IBNMC("FAMILY"))_U_$G(IBNMC("GIVEN"))_U_$G(IBNMC("MIDDLE"))_U_IBCRED_U_$G(IBNMC("SUFFIX"))
"RTN","IBCEFG1",78,0)
 I $P(IBNM1,U,2)["355.93",$P($G(^IBA(355.93,+$P(IBNM1,U,2),0)),U,2)=1 D  G NAMEQ  ; group performing provider
"RTN","IBCEFG1",79,0)
 . S IBNM=$P(IBNM1,U)_U_U_U_IBCRED_U
"RTN","IBCEFG1",80,0)
 I $G(COMB)=1,$G(IBNMC("MIDDLE"))'="" S IBNM=$P(IBNM,U)_U_$P(IBNM,U,2)_" "_$P(IBNM,U,3)_U_IBCRED_U_$P(IBNM,U,5)
"RTN","IBCEFG1",81,0)
 I $G(COMB)=2,$G(IBNMC("MIDDLE"))'="" S IBNM=$P(IBNM,U)_" "_$P(IBNM,U,3)_U_$P(IBNM,U,2)_U_IBCRED_U_$P(IBNM,U,5)
"RTN","IBCEFG1",82,0)
 ;
"RTN","IBCEFG1",83,0)
NAMEQ Q IBNM
"RTN","IBCEFG1",84,0)
 ;
"RTN","IBCEFG1",85,0)
DOLLAR(AMT) ; Format amount in AMT so it is numeric including cents, without
"RTN","IBCEFG1",86,0)
 ; the decimal and commas.
"RTN","IBCEFG1",87,0)
 N DOLR,CENT
"RTN","IBCEFG1",88,0)
 I AMT'="" S DOLR=$P(AMT,"."),CENT=$E($P(AMT,".",2)_"00",1,2),AMT=DOLR_CENT
"RTN","IBCEFG1",89,0)
 Q $TR(AMT,",")
"RTN","IBCEFG1",90,0)
 ;
"RTN","IBCEFG1",91,0)
STATE(CODE) ;Return state code from state pointer
"RTN","IBCEFG1",92,0)
 Q $P($G(^DIC(5,+CODE,0)),U,2)
"RTN","IBCEFG1",93,0)
 ;
"RTN","IBCEFG1",94,0)
SEX(CODE) ;Return the X12 code for sex
"RTN","IBCEFG1",95,0)
 ; CODE = DHCP code for sex
"RTN","IBCEFG1",96,0)
 Q $S(CODE="":"U","MF"[$E(CODE):$E(CODE),1:"U")
"RTN","IBCEFG1",97,0)
 ;
"RTN","IBCEFG1",98,0)
RELATION(CODE) ;Return the X12 code for relationship
"RTN","IBCEFG1",99,0)
 ; CODE = DHCP code for relationship
"RTN","IBCEFG1",100,0)
 N X12
"RTN","IBCEFG1",101,0)
 S X12=""
"RTN","IBCEFG1",102,0)
 S:CODE'="" X12=$P($S(CODE="01":"18^SELF",CODE="02":"01^SPOUSE",CODE="03":"19^NATURAL CHILD",CODE="08":"20^EMPLOYEE",CODE="32":"32^MOTHER",CODE="33":"33^FATHER",CODE="11":"39^ORGAN DONOR",CODE="15":"41^INJURED PLAINTIFF",1:""),U)
"RTN","IBCEFG1",103,0)
 Q X12
"RTN","IBCEFG1",104,0)
 ;
"RTN","IBCEFG1",105,0)
EMPLST(CODE) ;Return the X12 code for employment status
"RTN","IBCEFG1",106,0)
 ; CODE = DHCP code for employment status
"RTN","IBCEFG1",107,0)
 N X12
"RTN","IBCEFG1",108,0)
 S X12=""
"RTN","IBCEFG1",109,0)
 S:CODE'="" X12=$P($P("1;FT^2;PT^3;NE^4;SE^5;RT^6;AU^9;UK",CODE_";",2),U)
"RTN","IBCEFG1",110,0)
 S:X12="" X12="UK"
"RTN","IBCEFG1",111,0)
 Q X12
"RTN","IBCEFG1",112,0)
 ;
"RTN","IBCEFG1",113,0)
MARITAL(CODE) ;Return the X12 code for marital status
"RTN","IBCEFG1",114,0)
 ; CODE = ien of code for marital status
"RTN","IBCEFG1",115,0)
 N X12
"RTN","IBCEFG1",116,0)
 S X12=$P($G(^DIC(11,+CODE,0)),U,3)
"RTN","IBCEFG1",117,0)
 I X12'="" S X12=$P($P("D;D^M;M^N;I^S;X^W;W^U;K",X12_";",2),U)
"RTN","IBCEFG1",118,0)
 Q X12
"RTN","IBCEFG1",119,0)
 ;
"RTN","IBCEFG1",120,0)
TOS(CODE) ;Return the X12 code for type of service
"RTN","IBCEFG1",121,0)
 ; CODE = DHCP code for type of service
"RTN","IBCEFG1",122,0)
 N X12
"RTN","IBCEFG1",123,0)
 S X12=$S(CODE>0&(CODE<10):CODE,1:$P($P("0;10^A;11^B;13^H;45^L;18^M;15^N;63^V;19^Y;20^Z;21^43;96^53;96",CODE_";",2),U)) S:X12="" X12=CODE
"RTN","IBCEFG1",124,0)
 Q X12
"RTN","IBCEFG1",125,0)
 ;
"RTN","IBCEFG1",126,0)
FIXLEN(DATA,LEN) ; Create a fixed length field from data DATA length LEN
"RTN","IBCEFG1",127,0)
 Q $E(DATA_$J("",LEN),1,LEN)
"RTN","IBCEFG1",128,0)
 ;
"RTN","IBCEFG1",129,0)
RCDT(IBXSAVE,IBXDATA,IBDT) ; Format date for multiple revenue code transmission)
"RTN","IBCEFG1",130,0)
 ;IBXSAVE = array containing the extracted service line data for the UB format bill
"RTN","IBCEFG1",131,0)
 ;IBXDATA = array returned with service line dates formatted in YYYYMMDD format
"RTN","IBCEFG1",132,0)
 ;IBDT = the default date for the revenue codes on the bill
"RTN","IBCEFG1",133,0)
 N Q,W
"RTN","IBCEFG1",134,0)
 S Q=0 F  S Q=$O(IBXSAVE("INPT",Q)) Q:'Q  S W=$$DT($P(IBXSAVE("INPT",1),U,10),,"D8"),IBXDATA(Q)=$S(W:W,1:IBDT)
"RTN","IBCEFG1",135,0)
 Q
"RTN","IBCEM03")
0^47^B45643062^B45045042
"RTN","IBCEM03",1,0)
IBCEM03 ;ALB/TMP - 837 EDI RESUBMIT INDIVIDUAL BILL PROCESSING ;17-SEP-96
"RTN","IBCEM03",2,0)
 ;;2.0;INTEGRATED BILLING;**137,199,296,348,349**;21-MAR-94;Build 46
"RTN","IBCEM03",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEM03",4,0)
 Q
"RTN","IBCEM03",5,0)
 ;
"RTN","IBCEM03",6,0)
BILL2 ; Resubmit a transmitted bill with a new batch #
"RTN","IBCEM03",7,0)
 N DIC,DIR,DIE,DA,DR,IB,IB0,IBDA,IBDA1,IBE,IBSTAT,IBBDA,IBOK,IBNEW,Y,ZTSK,IBTEST
"RTN","IBCEM03",8,0)
 K ^TMP("IBEDI_TEST_BATCH",$J)
"RTN","IBCEM03",9,0)
 ;
"RTN","IBCEM03",10,0)
 S DIR("A")="ARE YOU RESUBMITTING CLAIMS FOR TESTING?: ",DIR("B")="NO",DIR(0)="YA" D ^DIR K DIR
"RTN","IBCEM03",11,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","IBCEM03",12,0)
 I +Y S ^TMP("IBEDI_TEST_BATCH",$J)=1
"RTN","IBCEM03",13,0)
ASK N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBCEM03",14,0)
 S IBTEST=+$G(^TMP("IBEDI_TEST_BATCH",$J))
"RTN","IBCEM03",15,0)
 ; Only auth or printed transmittable bill valid for non-test
"RTN","IBCEM03",16,0)
 ; All previously transmitted valid for test
"RTN","IBCEM03",17,0)
 S DIC="^DGCR(399,",DIC(0)="AEMQ",DIC("S")=$S('IBTEST:"I $P($G(^(""TX"")),U,2),$P($G(^(0)),U,13)'="""",""234""[$P($G(^(0)),U,13)",1:"I $O(^IBA(364,""B"",+Y,0))")
"RTN","IBCEM03",18,0)
 I IBTEST S DIC("A")="Select BILL/CLAIMS BILL NUMBER (FOR RESUBMIT AS TEST): "
"RTN","IBCEM03",19,0)
 D ^DIC K DIC
"RTN","IBCEM03",20,0)
 I Y<0 D  Q
"RTN","IBCEM03",21,0)
 . Q:'IBTEST
"RTN","IBCEM03",22,0)
 . I $O(^TMP("IBEDI_TEST_BATCH",$J,0)) D
"RTN","IBCEM03",23,0)
 .. M ^TMP("IBRESUBMIT",$J)=^TMP("IBEDI_TEST_BATCH",$J)
"RTN","IBCEM03",24,0)
 .. D ONE^IBCE837
"RTN","IBCEM03",25,0)
 . ;
"RTN","IBCEM03",26,0)
 . K ^TMP("IBEDI_TEST_BATCH",$J),^TMP("IBRESUBMIT",$J)
"RTN","IBCEM03",27,0)
 ;
"RTN","IBCEM03",28,0)
 S IBIFN=+Y,IBDA=+$$LAST364^IBCEF4(IBIFN),IB0=$G(^IBA(364,IBDA,0)),IBSTAT=$P(IB0,U,3)
"RTN","IBCEM03",29,0)
 ;
"RTN","IBCEM03",30,0)
 I IB0="" W !,"Bill does not exist in BILL TRANSMISSION file" G ASK
"RTN","IBCEM03",31,0)
 I IBTEST,$D(^TMP("IBEDI_TEST_BATCH",$J,IBDA)) W !,"Bill already selected for test transmission" G ASK
"RTN","IBCEM03",32,0)
 I $$COBN^IBCEF(IBIFN)=1,IBTEST S IBOK=1 D  G:'IBOK ASK
"RTN","IBCEM03",33,0)
 . S DIR("A")="BILL IS A PRIMARY BILL, ARE YOU SURE YOU WANT TO SEND IT AS A TEST CLAIM?: "
"RTN","IBCEM03",34,0)
 . S DIR("B")="NO",DIR(0)="YA" W ! D ^DIR K DIR
"RTN","IBCEM03",35,0)
 . I Y'=1 S IBOK=0
"RTN","IBCEM03",36,0)
 ;
"RTN","IBCEM03",37,0)
 I 'IBTEST,IBSTAT="X" W !,"Bill is currently awaiting extract - will be submitted with next batch run" G ASK
"RTN","IBCEM03",38,0)
 S IBBDA=+$P(IB0,U,2),IB=$P($G(^IBA(364.1,IBBDA,0)),U,9)
"RTN","IBCEM03",39,0)
 ;
"RTN","IBCEM03",40,0)
 I IB,'IBTEST D  G:'IBOK ASK
"RTN","IBCEM03",41,0)
 . S IBOK=1,ZTSK=IB D STAT^%ZTLOAD
"RTN","IBCEM03",42,0)
 . I ZTSK(0)=0 S DIE="^IBA(364.1,",DA=IBBDA,DR=".09///@" D ^DIE Q  ;Task not scheduled - delete task #
"RTN","IBCEM03",43,0)
 . I "125"[ZTSK(1) W *7,!,"Cannot resubmit this bill.",!,"This bill's current batch is already ",$S("2"[ZTSK(1):"being resubmitted",1:"scheduled for resubmission")," - Task # is: ",IB,! S IBOK=0
"RTN","IBCEM03",44,0)
 ;
"RTN","IBCEM03",45,0)
 W !
"RTN","IBCEM03",46,0)
 S DIR("A",1)="   Previously In Batch #: "_$$EXPAND^IBTRE(364,.02,$P(IB0,U,2))
"RTN","IBCEM03",47,0)
 S DIR("A",2)="Bill Transmission Status: "_$$EXPAND^IBTRE(364,.03,IBSTAT)
"RTN","IBCEM03",48,0)
 S DIR("A",3)="             Status Date: "_$$FMTE^XLFDT($P(IB0,U,4),2)
"RTN","IBCEM03",49,0)
 S DIR("A",5)=" "
"RTN","IBCEM03",50,0)
 S DIR("A",4)="     Current Bill Status: "_$$EXPAND^IBTRE(399,.13,$P($G(^DGCR(399,+IBIFN,0)),U,13))
"RTN","IBCEM03",51,0)
 I 'IBTEST,IBSTAT'="P" S DIR("A",11)="WARNING - BILL TRANSMITTED PREVIOUSLY" S:IBSTAT?1"A".E DIR("A",11)=DIR("A",11)_" & CONFIRMED AS RECEIVED BY "_$P("AUSTIN^GENTRAN^INTERMEDIARY^CARRIER",U,$TR(IBSTAT,"A")+1)
"RTN","IBCEM03",52,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO RESUBMIT THIS BILL"_$S('IBTEST:"",1:" AS A TEST CLAIM")_"?: "
"RTN","IBCEM03",53,0)
 S DIR(0)="YA",DIR("B")="NO"
"RTN","IBCEM03",54,0)
 D ^DIR K DIR
"RTN","IBCEM03",55,0)
 ;
"RTN","IBCEM03",56,0)
 W ! G:'Y ASK
"RTN","IBCEM03",57,0)
 ;
"RTN","IBCEM03",58,0)
 I IBTEST S ^TMP("IBEDI_TEST_BATCH",$J,IBDA)="" G ASK
"RTN","IBCEM03",59,0)
 ;
"RTN","IBCEM03",60,0)
 S IBDA1=+$$ADDTBILL^IBCB1(IBIFN) ;Add a new transmit bill record
"RTN","IBCEM03",61,0)
 ;
"RTN","IBCEM03",62,0)
 S Y=$$TX1^IBCB1(IBDA1,1)
"RTN","IBCEM03",63,0)
 ;
"RTN","IBCEM03",64,0)
 I 'Y D  G ASK
"RTN","IBCEM03",65,0)
 . W !,*7,"An error has occurred ... bill NOT re-submitted!!"
"RTN","IBCEM03",66,0)
 . S DIK="^IBA(364,",DA=IBDA1 D:DA ^DIK
"RTN","IBCEM03",67,0)
 . L -^IBA(364,IBDA)
"RTN","IBCEM03",68,0)
 ;
"RTN","IBCEM03",69,0)
 S IBNEW=$P($G(^IBA(364,+IBDA1,0)),U,2)
"RTN","IBCEM03",70,0)
 ;
"RTN","IBCEM03",71,0)
 ;Update the old transmit bill record
"RTN","IBCEM03",72,0)
 D UPDEDI^IBCEM(IBDA,"R")
"RTN","IBCEM03",73,0)
 ;
"RTN","IBCEM03",74,0)
 W !,"Bill # ",$P($G(^DGCR(399,+IB0,0)),U)," was re-submitted in batch # ",$P($G(^IBA(364.1,+IBNEW,0)),U)
"RTN","IBCEM03",75,0)
 ;
"RTN","IBCEM03",76,0)
 L -^IBA(364,IBDA)
"RTN","IBCEM03",77,0)
 G ASK
"RTN","IBCEM03",78,0)
 ;
"RTN","IBCEM03",79,0)
PRINT1(IBIFN,IBDA,IB364,IBRESUB) ; Print bill, submit manually as resolution
"RTN","IBCEM03",80,0)
 ; for a returned message
"RTN","IBCEM03",81,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEM03",82,0)
 ; IBDA = array returned from selection of message
"RTN","IBCEM03",83,0)
 ; IB364 = ien of transmit bill entry in file 364
"RTN","IBCEM03",84,0)
 ; IBRESUB = flag to indicate if bill is being resubmitted via print
"RTN","IBCEM03",85,0)
 ;
"RTN","IBCEM03",86,0)
 N IBAC,IBV,IB399,DFN,ZTSK,PRCASV,IBHOLD,IBTXPRT
"RTN","IBCEM03",87,0)
 W !
"RTN","IBCEM03",88,0)
 I IBIFN="" S IBDA="" G PRINT1Q
"RTN","IBCEM03",89,0)
 S IB399=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEM03",90,0)
 I "34"'[$P(IB399,U,13) W !,*7,"Bill status must be AUTHORIZED or PRNT/TX to print the bill" S IBDA="" G PRINT1Q
"RTN","IBCEM03",91,0)
 ;
"RTN","IBCEM03",92,0)
 I $P($G(^DGCR(399,IBIFN,"S")),U,14)=DT W !,*7,"This bill was last printed today.  You must wait at least 1 day from the last",!,"print date to print this bill using this function." S IBDA="" D PAUSE^VALM1 G PRINT1Q
"RTN","IBCEM03",93,0)
 ;
"RTN","IBCEM03",94,0)
 S IBV=1,IBAC=4,DFN=$P(IB399,U,2),IBTXPRT=0
"RTN","IBCEM03",95,0)
 M IBHOLD("IBDA")=IBDA
"RTN","IBCEM03",96,0)
 D 4^IBCB1,ENS^%ZISS
"RTN","IBCEM03",97,0)
 M IBDA=IBHOLD("IBDA")
"RTN","IBCEM03",98,0)
 ;
"RTN","IBCEM03",99,0)
 I 'IBTXPRT W !,"Bill was not printed" S IBDA="" G PRINT1Q
"RTN","IBCEM03",100,0)
 ;
"RTN","IBCEM03",101,0)
 D UPDEDI^IBCEM(IB364,"P")
"RTN","IBCEM03",102,0)
 ;
"RTN","IBCEM03",103,0)
PRINT1Q Q
"RTN","IBCEM03",104,0)
 ;
"RTN","IBCEM03",105,0)
SUB1 ; Select bills in ready for extract status to transmit individually
"RTN","IBCEM03",106,0)
 N IB0,IB399,IBDA,IBIFN,IBSEL,IBU,X,Y,DA,DIC,Z,DIR
"RTN","IBCEM03",107,0)
 K ^TMP("IBSELX",$J)
"RTN","IBCEM03",108,0)
 ;
"RTN","IBCEM03",109,0)
 S IBSEL=""
"RTN","IBCEM03",110,0)
 F  D  Q:'IBSEL
"RTN","IBCEM03",111,0)
 . S DIR("S")="I $P(^(0),U,3)=""X"""
"RTN","IBCEM03",112,0)
 . S DIR(0)="PAO^364:AEMQ",DIR("A")="SELECT "_$S($D(^TMP("IBSELX",$J)):"NEXT ",1:"")_"BILL TO TRANSMIT: "
"RTN","IBCEM03",113,0)
 . S DIR("?")="ONLY BILLS IN 'READY FOR EXTRACT' STATUS CAN BE TRANSMITTED WITH THIS OPTION"
"RTN","IBCEM03",114,0)
 . D ^DIR K DIR
"RTN","IBCEM03",115,0)
 . I Y'>0 K:Y=U ^TMP("IBSELX",$J) S IBSEL="" Q
"RTN","IBCEM03",116,0)
 . S IBSEL=+Y
"RTN","IBCEM03",117,0)
 . S IBDA=+Y,IB0=$G(^IBA(364,IBDA,0)),IBIFN=+IB0,IBU=$G(^DGCR(399,IBIFN,"U")),IB399=$G(^(0))
"RTN","IBCEM03",118,0)
 . S Z=+$$NEEDMRA^IBEFUNC(IBIFN)
"RTN","IBCEM03",119,0)
 . I '$$TXMT^IBCEF4(IBIFN,.IBNOTX),IBNOTX=2 D  Q
"RTN","IBCEM03",120,0)
 .. W !,$S(Z:"MRA",1:"EDI")_" TRANSMISSION PARAMETER HAS BEEN TURNED OFF",!!,"BILL CANNOT BE SELECTED"
"RTN","IBCEM03",121,0)
 . ;
"RTN","IBCEM03",122,0)
 . W !
"RTN","IBCEM03",123,0)
 . S DIR("A",1)="      YOU HAVE SELECTED BILL #: "_$P(IB399,U)_"  ("_$S($$INPAT^IBCEF(IBIFN):"INPATIENT",1:"OUTPATIENT")_"/"_$S($$FT^IBCEF(IBIFN)=3:"UB-04",1:"CMS-1500")_" FORMAT)"
"RTN","IBCEM03",124,0)
 . S DIR("A",2)="                  PATIENT NAME: "_$E($P($G(^DPT(+$P(IB399,U,2),0)),U)_$J("",28),1,28)_"  SSN: "_$P($G(^DPT(+$P(IB399,U,2),0)),U,9)
"RTN","IBCEM03",125,0)
 . S DIR("A",3)="                  CARE DATE(S): "_$$EXPAND^IBTRE(399,151,$P(IBU,U))_" - "_$$EXPAND^IBTRE(399,152,$P(IBU,U,2))
"RTN","IBCEM03",126,0)
 . S DIR("A",4)="'READY TO EXTRACT' STATUS DATE: "_$$EXPAND^IBTRE(364,.04,$P(IB0,U,4))
"RTN","IBCEM03",127,0)
 . S DIR("?",1)=" "
"RTN","IBCEM03",128,0)
 . S DIR("A",5)=" ",DIR("?")="IF THIS IS THE BILL YOU WANT TO TRANSMIT, RESPOND YES, OTHERWISE, RESPOND NO"
"RTN","IBCEM03",129,0)
 . S DIR("A")="ARE YOU SURE THIS IS THE CORRECT BILL TO TRANSMIT?: "
"RTN","IBCEM03",130,0)
 . S DIR(0)="YAO",DIR("B")="NO" D ^DIR K DIR W !
"RTN","IBCEM03",131,0)
 . I Y'=1 W !,"BILL NOT SELECTED" Q
"RTN","IBCEM03",132,0)
 . ;
"RTN","IBCEM03",133,0)
 . S ^TMP("IBSELX",$J,IBDA)=""
"RTN","IBCEM03",134,0)
 ;
"RTN","IBCEM03",135,0)
 I '$O(^TMP("IBSELX",$J,0)) G SUB1Q
"RTN","IBCEM03",136,0)
 ;
"RTN","IBCEM03",137,0)
 W !,"Bills to be transmitted: "
"RTN","IBCEM03",138,0)
 S Z=0 F  S Z=$O(^TMP("IBSELX",$J,Z)) Q:'Z  W !,?8,$P($G(^DGCR(399,+$G(^IBA(364,Z,0)),0)),U)
"RTN","IBCEM03",139,0)
 W !
"RTN","IBCEM03",140,0)
 S DIR("A")="OK TO TRANSMIT NOW?: ",DIR(0)="YA0",DIR("B")="NO" D ^DIR K DIR
"RTN","IBCEM03",141,0)
 G:Y'=1 SUB1Q
"RTN","IBCEM03",142,0)
 W !
"RTN","IBCEM03",143,0)
 S ^TMP("IBSELX",$J)=0
"RTN","IBCEM03",144,0)
 D ONE^IBCE837
"RTN","IBCEM03",145,0)
 W !,"BILL(s) TRANSMITTED ... BATCH #(s): "
"RTN","IBCEM03",146,0)
 S Z=0 F  S Z=$O(^TMP("IBCE-BATCH",$J,Z)) Q:'Z  W Z,$S($O(^(Z)):", ",1:"")
"RTN","IBCEM03",147,0)
 I '$O(^TMP("IBCE-BATCH",$J,0)) W !,"NO BILL(S) TRANSMITTED - CHECK ALERTS/MAIL FOR DETAILS"
"RTN","IBCEM03",148,0)
 ;
"RTN","IBCEM03",149,0)
SUB1Q D PAUSE^VALM1
"RTN","IBCEM03",150,0)
 K ^TMP("IBSELX",$J),^TMP("IBCE-BATCH",$J)
"RTN","IBCEM03",151,0)
 Q
"RTN","IBCEM03",152,0)
 ;
"RTN","IBCEMCA3")
0^81^B52111950^B52127720
"RTN","IBCEMCA3",1,0)
IBCEMCA3 ;ALB/ESG - Multiple CSA Message Management - Actions ;20-SEP-2005
"RTN","IBCEMCA3",2,0)
 ;;2.0;INTEGRATED BILLING;**320,349**;21-MAR-1994;Build 46
"RTN","IBCEMCA3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEMCA3",4,0)
 ;
"RTN","IBCEMCA3",5,0)
 Q
"RTN","IBCEMCA3",6,0)
 ;
"RTN","IBCEMCA3",7,0)
PRINT ; resubmit by print
"RTN","IBCEMCA3",8,0)
 NEW DFN,DIR,DIROUT,DIRUT,DTOUT,DUOUT,FC,FORM,IB0,IB364,IBDA,IBFT,IBFTP
"RTN","IBCEMCA3",9,0)
 NEW IBH,IBIFN,IBJ,IBMCSPNT,IBQUIT,IBS,IBS1,IBS2,IBS3,IBTASK,IBX,IBXP,IBY,IBZ
"RTN","IBCEMCA3",10,0)
 NEW INS,NS,NSC,PATNAME,PAYER,X,Y,ZIP,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","IBCEMCA3",11,0)
 D FULL^VALM1
"RTN","IBCEMCA3",12,0)
 ;
"RTN","IBCEMCA3",13,0)
 S NS=+$G(^TMP($J,"IBCEMCL",4))
"RTN","IBCEMCA3",14,0)
 I 'NS D  G PRINTX
"RTN","IBCEMCA3",15,0)
 . W !!?5,"There are no selected messages." D PAUSE^VALM1
"RTN","IBCEMCA3",16,0)
 . Q
"RTN","IBCEMCA3",17,0)
 ;
"RTN","IBCEMCA3",18,0)
 ; count number of claims too
"RTN","IBCEMCA3",19,0)
 S IBIFN=0 F NSC=0:1 S IBIFN=$O(^TMP($J,"IBCEMCL",4,2,IBIFN)) Q:'IBIFN
"RTN","IBCEMCA3",20,0)
 ;
"RTN","IBCEMCA3",21,0)
 W !!?5,"Number of messages selected:  ",NS
"RTN","IBCEMCA3",22,0)
 W !?7,"Number of claims selected:  ",NSC
"RTN","IBCEMCA3",23,0)
 ;
"RTN","IBCEMCA3",24,0)
 ; check certain form types for a default printer
"RTN","IBCEMCA3",25,0)
 K FC S FC=0
"RTN","IBCEMCA3",26,0)
 F FORM=2,3,6 D
"RTN","IBCEMCA3",27,0)
 . N X S X=$G(^IBE(353,FORM,0))
"RTN","IBCEMCA3",28,0)
 . I $P(X,U,2)'="" Q   ; billing printer defined
"RTN","IBCEMCA3",29,0)
 . S FC=FC+1,FC($P(X,U,1)_" ")=""
"RTN","IBCEMCA3",30,0)
 . Q
"RTN","IBCEMCA3",31,0)
 I FC D  I IBQUIT G PRINTX
"RTN","IBCEMCA3",32,0)
 . N NM
"RTN","IBCEMCA3",33,0)
 . S IBQUIT=0
"RTN","IBCEMCA3",34,0)
 . W !!,*7,"Warning!  The default billing printer is missing for the following form type",$S(FC>1:"s",1:""),":",!
"RTN","IBCEMCA3",35,0)
 . S NM="" F  S NM=$O(FC(NM)) Q:NM=""  W !?4,NM
"RTN","IBCEMCA3",36,0)
 . W !!,"Nothing will print for ",$S(FC>1:"these form types",1:"this form type"),".  Printers are maintained in the option"
"RTN","IBCEMCA3",37,0)
 . W !,"'Select Default Device for Forms' on the System Manager's IB Menu."
"RTN","IBCEMCA3",38,0)
 . W ! S DIR(0)="Y",DIR("A")="Do you want to continue",DIR("B")="No"
"RTN","IBCEMCA3",39,0)
 . D ^DIR K DIR
"RTN","IBCEMCA3",40,0)
 . I 'Y S IBQUIT=1   ; No, don't continue quit out
"RTN","IBCEMCA3",41,0)
 . Q
"RTN","IBCEMCA3",42,0)
 ;
"RTN","IBCEMCA3",43,0)
 ; Ask the user for the 3 sort levels
"RTN","IBCEMCA3",44,0)
 W !
"RTN","IBCEMCA3",45,0)
 S IBS=""
"RTN","IBCEMCA3",46,0)
 S IBZ="Z:ZIP;I:INSURANCE COMPANY NAME;P:PATIENT NAME;"
"RTN","IBCEMCA3",47,0)
 S IBH="This Resubmit by Print action attempts to print all selected claims in the order requested.  The printed claims may be sorted by: Zip Code, Insurance Company Name, and Patient name."
"RTN","IBCEMCA3",48,0)
 S DIR("?")=IBH
"RTN","IBCEMCA3",49,0)
 S DIR("A")="First Sort Claims By"
"RTN","IBCEMCA3",50,0)
 S DIR(0)="SB^"_IBZ
"RTN","IBCEMCA3",51,0)
 D ^DIR K DIR I $D(DIRUT) G PRINTX                   ; primary sort
"RTN","IBCEMCA3",52,0)
 S IBS=IBS_$S(Y="Z":1,Y="I":2,Y="P":3,1:0)
"RTN","IBCEMCA3",53,0)
 S IBX=$P($P(IBZ,Y_":",2),";",1)
"RTN","IBCEMCA3",54,0)
 ;
"RTN","IBCEMCA3",55,0)
 S DIR("?")=IBH
"RTN","IBCEMCA3",56,0)
 S DIR("?",1)="Enter the field that the claims should be sorted on within "_IBX_"."
"RTN","IBCEMCA3",57,0)
 S DIR("?",2)="Press return if the order already entered is sufficient."
"RTN","IBCEMCA3",58,0)
 S DIR("?",3)=""
"RTN","IBCEMCA3",59,0)
 S DIR("A")="Then Sort Claims By"
"RTN","IBCEMCA3",60,0)
 S DIR(0)="SOB^"_IBZ
"RTN","IBCEMCA3",61,0)
 D ^DIR K DIR I Y'="",$D(DIRUT) G PRINTX             ; secondary sort
"RTN","IBCEMCA3",62,0)
 S IBS=IBS_$S(Y="Z":1,Y="I":2,Y="P":3,1:0)
"RTN","IBCEMCA3",63,0)
 I Y="" G P1
"RTN","IBCEMCA3",64,0)
 S IBY=$P($P(IBZ,Y_":",2),";",1)
"RTN","IBCEMCA3",65,0)
 ;
"RTN","IBCEMCA3",66,0)
 S DIR("?")=IBH
"RTN","IBCEMCA3",67,0)
 S DIR("?",1)="Enter the field that the claims should be sorted on within "_IBX_" and "_IBY_"."
"RTN","IBCEMCA3",68,0)
 S DIR("?",2)="Press return if the order already entered is sufficient."
"RTN","IBCEMCA3",69,0)
 S DIR("?",3)=""
"RTN","IBCEMCA3",70,0)
 S DIR("A")="Then Sort Claims By"
"RTN","IBCEMCA3",71,0)
 S DIR(0)="SOB^"_IBZ
"RTN","IBCEMCA3",72,0)
 D ^DIR K DIR I Y'="",$D(DIRUT) G PRINTX             ; tertiary sort
"RTN","IBCEMCA3",73,0)
 S IBS=IBS_$S(Y="Z":1,Y="I":2,Y="P":3,1:0)
"RTN","IBCEMCA3",74,0)
 ;
"RTN","IBCEMCA3",75,0)
P1 ;
"RTN","IBCEMCA3",76,0)
 ;
"RTN","IBCEMCA3",77,0)
 W !
"RTN","IBCEMCA3",78,0)
 S DIR(0)="S^2:2nd Notice;3:3rd Notice;C:Copy;O:Original"
"RTN","IBCEMCA3",79,0)
 S DIR("A")="(2)nd Notice, (3)rd Notice, (C)opy or (O)riginal"
"RTN","IBCEMCA3",80,0)
 S DIR("B")="C"
"RTN","IBCEMCA3",81,0)
 D ^DIR K DIR
"RTN","IBCEMCA3",82,0)
 I $D(DIRUT) G PRINTX
"RTN","IBCEMCA3",83,0)
 I Y="C" S Y=0   ; copy
"RTN","IBCEMCA3",84,0)
 I Y="O" S Y=1   ; original
"RTN","IBCEMCA3",85,0)
 S IBMCSPNT=Y
"RTN","IBCEMCA3",86,0)
 ;
"RTN","IBCEMCA3",87,0)
 W !!,"Note:  Any selected claims in a REQUEST MRA status will not be printed."
"RTN","IBCEMCA3",88,0)
 W !
"RTN","IBCEMCA3",89,0)
 S DIR(0)="Y"
"RTN","IBCEMCA3",90,0)
 S DIR("A")="OK to begin printing claims"
"RTN","IBCEMCA3",91,0)
 S DIR("B")="No"
"RTN","IBCEMCA3",92,0)
 S DIR("?",1)="   Enter YES to immediately begin printing the selected claims."
"RTN","IBCEMCA3",93,0)
 S DIR("?")="   Enter NO to quit this option."
"RTN","IBCEMCA3",94,0)
 D ^DIR K DIR
"RTN","IBCEMCA3",95,0)
 I 'Y G PRINTX
"RTN","IBCEMCA3",96,0)
 ;
"RTN","IBCEMCA3",97,0)
 ; kill ^XTMP scratch global
"RTN","IBCEMCA3",98,0)
 S IBX="IBCFP" F  S IBX=$O(^XTMP(IBX)) Q:IBX'?1"IBCFP"1.N  K ^XTMP(IBX,$J)
"RTN","IBCEMCA3",99,0)
 S IBXP=$$FMADD^XLFDT(DT,1)_U_DT_U_"MCS BATCH PRINT BILLS "_$$HTE^XLFDT($H)_" by "_$S($D(^VA(200,+$G(DUZ),0)):$P(^(0),"^"),1:"Unknown User")
"RTN","IBCEMCA3",100,0)
 ;
"RTN","IBCEMCA3",101,0)
 ; Loop thru selected claims, queue them and print them
"RTN","IBCEMCA3",102,0)
 S IBIFN=0
"RTN","IBCEMCA3",103,0)
 F  S IBIFN=$O(^TMP($J,"IBCEMCL",4,2,IBIFN)) Q:'IBIFN  D
"RTN","IBCEMCA3",104,0)
 . S IBFT=$$FT^IBCEF(IBIFN)   ; form type of claim
"RTN","IBCEMCA3",105,0)
 . I $P($G(^IBE(353,IBFT,0)),U,2)="" Q    ; no printer defined
"RTN","IBCEMCA3",106,0)
 . S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEMCA3",107,0)
 . I $P(IB0,U,13)=2 Q    ; don't include MRA requests here
"RTN","IBCEMCA3",108,0)
 . S DFN=+$P(IB0,U,2)
"RTN","IBCEMCA3",109,0)
 . S PATNAME=$P($G(^DPT(DFN,0)),U,1)
"RTN","IBCEMCA3",110,0)
 . S ZIP=$P($G(^DGCR(399,IBIFN,"M")),U,9)   ; field 109 - curr ins zip
"RTN","IBCEMCA3",111,0)
 . ; payer
"RTN","IBCEMCA3",112,0)
 . S INS=+$P($G(^DGCR(399,IBIFN,"MP")),U,1)
"RTN","IBCEMCA3",113,0)
 . I 'INS S INS=+$$CURR^IBCEF2(IBIFN)
"RTN","IBCEMCA3",114,0)
 . S PAYER=$P($G(^DIC(36,INS,0)),U,1)
"RTN","IBCEMCA3",115,0)
 . ;
"RTN","IBCEMCA3",116,0)
 . S IBX=ZIP_U_PAYER_U_PATNAME
"RTN","IBCEMCA3",117,0)
 . S IBS1=$P(IBX,U,$E(IBS,1))_" "     ; primary sort data
"RTN","IBCEMCA3",118,0)
 . S IBS2=$P(IBX,U,$E(IBS,2))_" "     ; secondary sort data
"RTN","IBCEMCA3",119,0)
 . S IBS3=$P(IBX,U,$E(IBS,3))_" "     ; tertiary sort data
"RTN","IBCEMCA3",120,0)
 . ;
"RTN","IBCEMCA3",121,0)
 . S ^XTMP("IBCFP"_IBFT,$J,IBS1,IBS2,IBS3,IBIFN)=""
"RTN","IBCEMCA3",122,0)
 . S ^XTMP("IBCFP"_IBFT,0)=IBXP
"RTN","IBCEMCA3",123,0)
 . S IBDA=0
"RTN","IBCEMCA3",124,0)
 . F  S IBDA=$O(^TMP($J,"IBCEMCL",4,2,IBIFN,IBDA)) Q:'IBDA  D
"RTN","IBCEMCA3",125,0)
 .. N DIE,DA,DR,TXT
"RTN","IBCEMCA3",126,0)
 .. S DIE=361,DA=IBDA,DR=".16////"_DT D ^DIE
"RTN","IBCEMCA3",127,0)
 .. S TXT(1)="Claim queued for printing by the MCS - 'Resubmit by Print' action",TXT=1
"RTN","IBCEMCA3",128,0)
 .. D NOTECHG^IBCECSA2(IBDA,0,.TXT,1)
"RTN","IBCEMCA3",129,0)
 .. Q
"RTN","IBCEMCA3",130,0)
 . ;
"RTN","IBCEMCA3",131,0)
 . ; if this is an MRA secondary claim and MRA's are on file and
"RTN","IBCEMCA3",132,0)
 . ; there is a printer defined for MRAs, then include them too
"RTN","IBCEMCA3",133,0)
 . I $$MRAEXIST^IBCEMU1(IBIFN),$P($G(^IBE(353,6,0)),U,2)'="" D
"RTN","IBCEMCA3",134,0)
 .. S ^XTMP("IBCFP6",$J,IBS1,IBS2,IBS3,IBIFN)=""
"RTN","IBCEMCA3",135,0)
 .. S ^XTMP("IBCFP6",0)=IBXP
"RTN","IBCEMCA3",136,0)
 .. Q
"RTN","IBCEMCA3",137,0)
 . ;
"RTN","IBCEMCA3",138,0)
 . ; if the claim's form type is a CMS-1500 and there is a printer
"RTN","IBCEMCA3",139,0)
 . ; defined for Bill Addendums, then include them too
"RTN","IBCEMCA3",140,0)
 . I IBFT=2,$P($G(^IBE(353,4,0)),U,2)'="" D
"RTN","IBCEMCA3",141,0)
 .. S ^XTMP("IBCFP4",$J,IBS1,IBS2,IBS3,IBIFN)=""
"RTN","IBCEMCA3",142,0)
 .. S ^XTMP("IBCFP4",0)=IBXP
"RTN","IBCEMCA3",143,0)
 .. Q
"RTN","IBCEMCA3",144,0)
 . ;
"RTN","IBCEMCA3",145,0)
 . Q
"RTN","IBCEMCA3",146,0)
 ;
"RTN","IBCEMCA3",147,0)
 ; loop thru the ^XTMP scatch global and queue off form type job
"RTN","IBCEMCA3",148,0)
 S IBX="IBCFP" K IBTASK
"RTN","IBCEMCA3",149,0)
 F  S IBX=$O(^XTMP(IBX)) Q:IBX'?1"IBCFP"1.N  D
"RTN","IBCEMCA3",150,0)
 . I '$D(^XTMP(IBX,$J)) Q
"RTN","IBCEMCA3",151,0)
 . S IBFT=+$E(IBX,6,99)
"RTN","IBCEMCA3",152,0)
 . S ZTIO=$P($G(^IBE(353,IBFT,0)),U,2)  ; printer
"RTN","IBCEMCA3",153,0)
 . S IBFTP=IBX                          ; 1st subscript
"RTN","IBCEMCA3",154,0)
 . S IBJ=$J                             ; 2nd subscript
"RTN","IBCEMCA3",155,0)
 . S ZTDTH=$H
"RTN","IBCEMCA3",156,0)
 . S ZTSAVE("IBFTP")=""
"RTN","IBCEMCA3",157,0)
 . S ZTSAVE("IBFT")=""
"RTN","IBCEMCA3",158,0)
 . S ZTSAVE("IBJ")=""
"RTN","IBCEMCA3",159,0)
 . S ZTSAVE("IBMCSPNT")=""
"RTN","IBCEMCA3",160,0)
 . S ZTDESC="MCS BATCH PRINTING "_$$FTN^IBCU3(IBFT)
"RTN","IBCEMCA3",161,0)
 . S ZTRTN="QBILL^IBCFP1"
"RTN","IBCEMCA3",162,0)
 . I IBFT=6 S ZTRTN="QMRA^IBCEMU2"      ; MRA print rtn
"RTN","IBCEMCA3",163,0)
 . D ^%ZTLOAD
"RTN","IBCEMCA3",164,0)
 . S IBTASK(IBFT)=+$G(ZTSK)
"RTN","IBCEMCA3",165,0)
 . Q
"RTN","IBCEMCA3",166,0)
 ;
"RTN","IBCEMCA3",167,0)
 ; Display the queued task#'s
"RTN","IBCEMCA3",168,0)
 I '$D(IBTASK) W !!?5,"Nothing was printed"
"RTN","IBCEMCA3",169,0)
 I $D(IBTASK) D
"RTN","IBCEMCA3",170,0)
 . W !
"RTN","IBCEMCA3",171,0)
 . S IBFT=0 F  S IBFT=$O(IBTASK(IBFT)) Q:'IBFT  D
"RTN","IBCEMCA3",172,0)
 .. W !,$J($$FTN^IBCU3(IBFT),15)," form type printing started with TaskMan task# ",IBTASK(IBFT),"."
"RTN","IBCEMCA3",173,0)
 .. Q
"RTN","IBCEMCA3",174,0)
 . ;
"RTN","IBCEMCA3",175,0)
 . W !!?1,"Please Note:  These EDI status messages will be removed from the CSA screen"
"RTN","IBCEMCA3",176,0)
 . W !?15,"and the MCS screen once it has been confirmed that these claims"
"RTN","IBCEMCA3",177,0)
 . W !?15,"have been successfully printed."
"RTN","IBCEMCA3",178,0)
 . Q
"RTN","IBCEMCA3",179,0)
 ;
"RTN","IBCEMCA3",180,0)
 D PAUSE^VALM1
"RTN","IBCEMCA3",181,0)
 ;
"RTN","IBCEMCA3",182,0)
 ; rebuild the list
"RTN","IBCEMCA3",183,0)
 KILL ^TMP($J,"IBCEMCA"),VALMHDR
"RTN","IBCEMCA3",184,0)
 S VALMBG=1
"RTN","IBCEMCA3",185,0)
 D UNLOCK^IBCEMCL
"RTN","IBCEMCA3",186,0)
 D INIT^IBCEMCL
"RTN","IBCEMCA3",187,0)
 I $G(IBCSAMCS)=1 S IBCSAMCS=2   ; flag to rebuild CSA
"RTN","IBCEMCA3",188,0)
 ;
"RTN","IBCEMCA3",189,0)
PRINTX ;
"RTN","IBCEMCA3",190,0)
 S VALMBCK="R"
"RTN","IBCEMCA3",191,0)
 Q
"RTN","IBCEMCA3",192,0)
 ;
"RTN","IBCEMRAA")
0^36^B61798719^B61799153
"RTN","IBCEMRAA",1,0)
IBCEMRAA ;ALB/DSM - MEDICARE REMITTANCE ADVICE DETAIL-PART A ; 12/29/05 9:57am
"RTN","IBCEMRAA",2,0)
 ;;2.0;INTEGRATED BILLING;**155,323,349**;21-MAR-94;Build 46
"RTN","IBCEMRAA",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEMRAA",4,0)
 ;
"RTN","IBCEMRAA",5,0)
 Q  ; must call an entry point
"RTN","IBCEMRAA",6,0)
 ;
"RTN","IBCEMRAA",7,0)
 ;  This routine prints MRA Report for UB-04 (Part A) Form Type
"RTN","IBCEMRAA",8,0)
 ;
"RTN","IBCEMRAA",9,0)
MRA(IBIFN) ;;Module - Entry point to print ALL MRA reports, for a given IBIFN.
"RTN","IBCEMRAA",10,0)
 ; This entry point doesn't ask for a Bill Number, it must pass IBIFN as Input.
"RTN","IBCEMRAA",11,0)
 ; It will prompt the user for a device.
"RTN","IBCEMRAA",12,0)
 ;
"RTN","IBCEMRAA",13,0)
 ; Input   IBIFN  = ien of Bill Number (required)
"RTN","IBCEMRAA",14,0)
 ;
"RTN","IBCEMRAA",15,0)
 N IBQUIT,IBPGN S IBQUIT=0
"RTN","IBCEMRAA",16,0)
 D ENT1
"RTN","IBCEMRAA",17,0)
 Q  ;MRA
"RTN","IBCEMRAA",18,0)
 ;
"RTN","IBCEMRAA",19,0)
ENT ; Menu Option Entry Point
"RTN","IBCEMRAA",20,0)
 N IBQUIT,IBEOB,IBIFN,FRMTYP,IBPGN
"RTN","IBCEMRAA",21,0)
 S IBQUIT=0
"RTN","IBCEMRAA",22,0)
 D GETBIL I IBQUIT Q   ;ENT
"RTN","IBCEMRAA",23,0)
 ;
"RTN","IBCEMRAA",24,0)
ENT1 ; Prompt for a print device and print MRA Reports
"RTN","IBCEMRAA",25,0)
 D DEV^IBCEMRAX(IBIFN) I IBQUIT Q    ; device handling  ENT1
"RTN","IBCEMRAA",26,0)
 ;
"RTN","IBCEMRAA",27,0)
PROC ; This section must have IBIFN defined
"RTN","IBCEMRAA",28,0)
 ; This section is called as both a foreground and a background process,
"RTN","IBCEMRAA",29,0)
 ; so all write stmts need to consider printing in both cases.
"RTN","IBCEMRAA",30,0)
 N FRMTYP,IEN,IBZDATA,INPAT
"RTN","IBCEMRAA",31,0)
 S IBQUIT=$G(IBQUIT)
"RTN","IBCEMRAA",32,0)
 S FRMTYP=$$FT^IBCEF(IBIFN)    ;Form Type
"RTN","IBCEMRAA",33,0)
 S INPAT=$$INPAT^IBCEF(IBIFN)  ;Inpatient Flag
"RTN","IBCEMRAA",34,0)
 ;
"RTN","IBCEMRAA",35,0)
 ; Get Service Line Level Data from 837 Extract - Make the appropriate call
"RTN","IBCEMRAA",36,0)
 ; based on the Bill's Form Type 3=UB-04  ; 2=CMS-1500
"RTN","IBCEMRAA",37,0)
 D  ;
"RTN","IBCEMRAA",38,0)
 . I FRMTYP=2 D F^IBCEF("N-HCFA 1500 SERVICE LINE (EDI)","IBZDATA",,IBIFN) Q
"RTN","IBCEMRAA",39,0)
 . D F^IBCEF("N-UB-04 SERVICE LINE (EDI)","IBZDATA",,IBIFN)
"RTN","IBCEMRAA",40,0)
 ;
"RTN","IBCEMRAA",41,0)
 ; For a given IBIFN, print all MRA's on file for that Bill
"RTN","IBCEMRAA",42,0)
 S IEN=0
"RTN","IBCEMRAA",43,0)
 F  S IEN=$O(^IBM(361.1,"B",IBIFN,IEN)) Q:'IEN  D  I IBQUIT Q
"RTN","IBCEMRAA",44,0)
 . I $P($G(^IBM(361.1,IEN,0)),U,4)'=1 Q  ;not an MRA
"RTN","IBCEMRAA",45,0)
 . D PRNTMRA  ; print an MRA
"RTN","IBCEMRAA",46,0)
 ;
"RTN","IBCEMRAA",47,0)
 ; Force a form feed at end of a printer report
"RTN","IBCEMRAA",48,0)
 I $E(IOST,1,2)'["C-" W @IOF
"RTN","IBCEMRAA",49,0)
 ; Pause on screen before exiting
"RTN","IBCEMRAA",50,0)
 I 'IBQUIT,$E(IOST,1,2)["C-" W ! S DIR("A")="Press RETURN to continue: ",DIR(0)="EA" D ^DIR K DIR
"RTN","IBCEMRAA",51,0)
 ;
"RTN","IBCEMRAA",52,0)
 ; Quit if called from a background process (ZTQUEUED defined)
"RTN","IBCEMRAA",53,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q  ;PROC
"RTN","IBCEMRAA",54,0)
 D ^%ZISC     ; handle device closing before exiting
"RTN","IBCEMRAA",55,0)
 Q   ;PROC
"RTN","IBCEMRAA",56,0)
 ;
"RTN","IBCEMRAA",57,0)
PRNTMRA ; Print a single MRA
"RTN","IBCEMRAA",58,0)
 ; Input IEN - the ien# of EOB file (361.1); Required
"RTN","IBCEMRAA",59,0)
 S IBPGN=0
"RTN","IBCEMRAA",60,0)
 ; Print Part B - CMS-1500
"RTN","IBCEMRAA",61,0)
 I FRMTYP=2 D PRNT^IBCEMRAB Q  ;PRNTMRA
"RTN","IBCEMRAA",62,0)
 ;
"RTN","IBCEMRAA",63,0)
 ; Print Part A - Institutional next
"RTN","IBCEMRAA",64,0)
 ; Claim Level
"RTN","IBCEMRAA",65,0)
 N RSNCD,NCVRCHRG,IBILL,IBILLU,IBCOINS,IBCTADJ,IBEOB,RMKS,IBFD,IBTD,IBDED,CLMADJ
"RTN","IBCEMRAA",66,0)
 I IBPGN>1 D PAUSE^IBCEMRAX I IBQUIT Q  ;pause between EOB reports
"RTN","IBCEMRAA",67,0)
 D CLMDATA,CLMHDR I IBQUIT Q
"RTN","IBCEMRAA",68,0)
 D CLMPRNT
"RTN","IBCEMRAA",69,0)
 ;
"RTN","IBCEMRAA",70,0)
 ; Print Service Line Level Adjustments - check if exist
"RTN","IBCEMRAA",71,0)
 I $D(^IBM(361.1,IEN,15)) D  I IBQUIT Q
"RTN","IBCEMRAA",72,0)
 . I ($Y+4)>IOSL D PAUSE^IBCEMRAX Q:IBQUIT  W @IOF D CLMHDR
"RTN","IBCEMRAA",73,0)
 . D SRVHDR^IBCEMRAX,SRVDATA^IBCEMRAX
"RTN","IBCEMRAA",74,0)
 ;
"RTN","IBCEMRAA",75,0)
 ; Print Disclaimer
"RTN","IBCEMRAA",76,0)
 D DSCLMR^IBCEMRAX
"RTN","IBCEMRAA",77,0)
 Q  ;PRTMRA
"RTN","IBCEMRAA",78,0)
 ;
"RTN","IBCEMRAA",79,0)
GETBIL ; Prompt the user for a Bill#. Get INIFN and IBEOB.
"RTN","IBCEMRAA",80,0)
 ;
"RTN","IBCEMRAA",81,0)
 N DIC,Y W !
"RTN","IBCEMRAA",82,0)
 ; Access Explanation Of Benefits File #361.1
"RTN","IBCEMRAA",83,0)
 ; Screen: only allow access to EOB's of Type = 1 (Medicare MRA)
"RTN","IBCEMRAA",84,0)
 S DIC="^IBM(361.1,",DIC(0)="AEMQ",DIC("S")="I $P(^(0),U,4)=1"
"RTN","IBCEMRAA",85,0)
 S DIC("W")="D EOBLST^IBCEMU1(Y)"   ; modify generic lister
"RTN","IBCEMRAA",86,0)
 D ^DIC
"RTN","IBCEMRAA",87,0)
 I Y<1!$D(DTOUT)!$D(DUOUT) S IBQUIT=1 Q  ; GETBIL
"RTN","IBCEMRAA",88,0)
 S IBIFN=+$P(Y,U,2)   ; get index to Bill file (#399)
"RTN","IBCEMRAA",89,0)
 Q  ;GETBIL
"RTN","IBCEMRAA",90,0)
 ;
"RTN","IBCEMRAA",91,0)
CLMDATA ; Get MRA Claim Level data of EOB file (#361.1)
"RTN","IBCEMRAA",92,0)
 N I,RCNT,GRPCD,GLVL,GLVLD,RLVL,RLVLD,RCDED,RCOINS,RCTADJ,RCNCVR,RCLMADJ,CLMLVL
"RTN","IBCEMRAA",93,0)
 F I=1:1:5 S @($P($T(TABLE+I),";",3))=$P($T(TABLE+I),";",4)
"RTN","IBCEMRAA",94,0)
 ;
"RTN","IBCEMRAA",95,0)
 ; Get Top Levels of EOB file (#361.1)
"RTN","IBCEMRAA",96,0)
 F I=0,1,3:1:6 S IBEOB(I)=$G(^IBM(361.1,IEN,I))
"RTN","IBCEMRAA",97,0)
 ;
"RTN","IBCEMRAA",98,0)
 ; Get Claim Level Remarks Code from appropriate levels of 361.1 based on
"RTN","IBCEMRAA",99,0)
 ; whether Bill is Outpatient or Inpatient.
"RTN","IBCEMRAA",100,0)
 D  ;
"RTN","IBCEMRAA",101,0)
 . I INPAT S RMKS=IBEOB(5) Q   ; Inpatient remarks code
"RTN","IBCEMRAA",102,0)
 . S RMKS=$P(IBEOB(3),U,3,7)   ; Outpatient remarks code
"RTN","IBCEMRAA",103,0)
 ;
"RTN","IBCEMRAA",104,0)
 ; Get Group Level Data
"RTN","IBCEMRAA",105,0)
 ; RLVLD=reason_code^amount^quantity^reason text
"RTN","IBCEMRAA",106,0)
 ; CLMLVL=Claim Level Flag indicating where the displayed data is coming from
"RTN","IBCEMRAA",107,0)
 ; 1=Claim Level; 0=Line Level
"RTN","IBCEMRAA",108,0)
 ;
"RTN","IBCEMRAA",109,0)
 S (GLVL,RLVL,RCNT,NCVRCHRG,IBDED,IBCOINS,IBCTADJ,CLMADJ,CLMLVL)=0
"RTN","IBCEMRAA",110,0)
 F  S GLVL=$O(^IBM(361.1,IEN,10,GLVL)) Q:'GLVL  S GLVLD=^(GLVL,0) D  ;
"RTN","IBCEMRAA",111,0)
 . S GRPCD=$P(GLVLD,U),RLVL=0
"RTN","IBCEMRAA",112,0)
 . F  S RLVL=$O(^IBM(361.1,IEN,10,GLVL,1,RLVL)) Q:'RLVL  S RLVLD=^(RLVL,0) D  ;
"RTN","IBCEMRAA",113,0)
 . . S RSNCD=$P(RLVLD,U)
"RTN","IBCEMRAA",114,0)
 . . I GRPCD="PR",RSNCD="AAA" Q   ;exception
"RTN","IBCEMRAA",115,0)
 . . I GRPCD="OA",RSNCD="AB3" Q   ;exception
"RTN","IBCEMRAA",116,0)
 . . I GRPCD="LQ" Q               ;exception
"RTN","IBCEMRAA",117,0)
 . . S RCNT=RCNT+1,RSNCD(RCNT)=RSNCD ;display
"RTN","IBCEMRAA",118,0)
 . . I RCLMADJ[(","_RSNCD_",") S CLMADJ=CLMADJ+$P(RLVLD,U,2),CLMLVL=1 ;Claim Adjustment
"RTN","IBCEMRAA",119,0)
 . . ; Get data from Claim Level: calculate Coinsurance, Contractual Adjustment,
"RTN","IBCEMRAA",120,0)
 . . ; Noncovered Charges and Deductible amounts
"RTN","IBCEMRAA",121,0)
 . . I GRPCD="PR",RCOINS[(","_RSNCD_",") S IBCOINS=$P(RLVLD,U,2),CLMLVL=1 Q
"RTN","IBCEMRAA",122,0)
 . . I GRPCD="PR",RCDED[(","_RSNCD_",") S IBDED=IBDED+$P(RLVLD,U,2),CLMLVL=1 Q
"RTN","IBCEMRAA",123,0)
 . . I GRPCD="CO" D  ;
"RTN","IBCEMRAA",124,0)
 . . . I RCTADJ[(","_RSNCD_",") S IBCTADJ=IBCTADJ+$P(RLVLD,U,2),CLMLVL=1
"RTN","IBCEMRAA",125,0)
 . . . I RCNCVR'[(","_RSNCD_",") S NCVRCHRG=NCVRCHRG+$P(RLVLD,U,2),CLMLVL=1
"RTN","IBCEMRAA",126,0)
 ;
"RTN","IBCEMRAA",127,0)
 ; If no data was found at Claim Level, get data from Line Level
"RTN","IBCEMRAA",128,0)
 I 'CLMLVL D LINELVL^IBCEMRAX
"RTN","IBCEMRAA",129,0)
 S IBILL=$G(^DGCR(399,$P(IBEOB(0),U),0)),IBILLU=$G(^DGCR(399,$P(IBEOB(0),U),"U"))
"RTN","IBCEMRAA",130,0)
 S IBFD=$$FMTE^XLFDT($P(IBILLU,U),5),IBTD=$$FMTE^XLFDT($P(IBILLU,U,2),5)
"RTN","IBCEMRAA",131,0)
 ;
"RTN","IBCEMRAA",132,0)
 Q  ;CLMDATA
"RTN","IBCEMRAA",133,0)
 ;
"RTN","IBCEMRAA",134,0)
CLMHDR ; Print Claim Level Header
"RTN","IBCEMRAA",135,0)
 S IBPGN=IBPGN+1
"RTN","IBCEMRAA",136,0)
 I IBPGN=1,$E(IOST,1,2)["C-" W @IOF  ; refresh terminal screen on 1st hdr
"RTN","IBCEMRAA",137,0)
 ;
"RTN","IBCEMRAA",138,0)
 ; Rows 1 to 3
"RTN","IBCEMRAA",139,0)
 W !,?108,"Medicare-equivalent",!?110,"Remittance Advice",!
"RTN","IBCEMRAA",140,0)
 N PRVDR,LVL,STATE
"RTN","IBCEMRAA",141,0)
 ; Retrieve the Provider data from IB Site Parameters file - ^IBE(350.9)
"RTN","IBCEMRAA",142,0)
 S PRVDR=$G(^IBE(350.9,1,2))
"RTN","IBCEMRAA",143,0)
 ; ProviderName^AgentCashierAddress^City^State^Zip
"RTN","IBCEMRAA",144,0)
 ;
"RTN","IBCEMRAA",145,0)
 F LVL=1:1:5 S PRVDR(LVL)=$P(PRVDR,U,LVL)
"RTN","IBCEMRAA",146,0)
 ; PRVDR(1)  Provider Name (Agent Cashier Mail Symbol)
"RTN","IBCEMRAA",147,0)
 ; PRVDR(2)  Agent Cashier Street Address
"RTN","IBCEMRAA",148,0)
 ; PRVDR(3)  Agent Cashier City
"RTN","IBCEMRAA",149,0)
 ; PRVDR(4)  Agent Cashier State
"RTN","IBCEMRAA",150,0)
 ; PRVDR(5)  Agent Cashier Zip
"RTN","IBCEMRAA",151,0)
 ;
"RTN","IBCEMRAA",152,0)
 ; resolve the State File Pointer in PRVDR(4) & get State Abbreviation
"RTN","IBCEMRAA",153,0)
 S STATE=$S(PRVDR(4)'="":$P($G(^DIC(5,PRVDR(4),0)),U,2),1:"")
"RTN","IBCEMRAA",154,0)
 ; Row 4 to 15
"RTN","IBCEMRAA",155,0)
 W !!!,"DEPT OF VETERANS AFFAIRS"
"RTN","IBCEMRAA",156,0)
 W !,PRVDR(2),?103,"PROVIDER #:",?117,$P($G(^IBE(350.9,1,1)),U,5) ;Tax ID
"RTN","IBCEMRAA",157,0)
 W !,PRVDR(1),?103,"PAGE #:",?117,$J(IBPGN,3)
"RTN","IBCEMRAA",158,0)
 W !,PRVDR(3),", ",STATE," ",PRVDR(5),?103,"DATE: ",?117,$$FMTE^XLFDT($P(IBEOB(0),U,6),5)
"RTN","IBCEMRAA",159,0)
 W !!,"PATIENT NAME",?24,"PATIENT CNTRL NUMBER",?48,"RC",?52,"REM",?58,"DRG#",?72,"DRG OUT AMT"
"RTN","IBCEMRAA",160,0)
 W ?86,"COINSURANCE",?100,"PAT REFUND",?115,"CONTRACT ADJ"
"RTN","IBCEMRAA",161,0)
 W !,"HIC NUMBER",?24,"ICN NUMBER",?48,"RC",?52,"REM",?58,"OUTCD CAPCD",?72,"DRG CAP AMT"
"RTN","IBCEMRAA",162,0)
 W ?86,"COVD CHGS",?100,"ESRD NET ADJ",?115,"PER DIEM RTE"
"RTN","IBCEMRAA",163,0)
 W !,"FROM DT    THRU DT",?24,"NACHG  HICHG  TOB",?48,"RC",?52,"REM",?58,"PROF COMP",?72,"MSP PAYMT"
"RTN","IBCEMRAA",164,0)
 W ?86,"NCOVD CHGS",?100,"INTEREST",?115,"PROC CD AMT"
"RTN","IBCEMRAA",165,0)
 W !,"CLM STATUS",?24,"COST  COVDY  NCOVDY",?48,"RC",?52,"REM",?58,"DRG AMT",?72,"DEDUCTIBLES"
"RTN","IBCEMRAA",166,0)
 W ?86,"DENIED CHGS",?100,"CLAIM ADJ",?115,"NET REIMB",!
"RTN","IBCEMRAA",167,0)
 Q  ;CLMHDR
"RTN","IBCEMRAA",168,0)
 ;
"RTN","IBCEMRAA",169,0)
CLMPRNT ; - Print Claim Level part of the Report
"RTN","IBCEMRAA",170,0)
 N PTNM,PTLEN,HIC
"RTN","IBCEMRAA",171,0)
 ; ROW 16
"RTN","IBCEMRAA",172,0)
 ; format and standardize patient name for display
"RTN","IBCEMRAA",173,0)
 S PTNM("FILE")=2,PTNM("IENS")=$P(IBILL,U,2),PTNM("FIELD")=.01,PTLEN=23
"RTN","IBCEMRAA",174,0)
 S PTNM=$$BLDNAME^XLFNAME(.PTNM,PTLEN)
"RTN","IBCEMRAA",175,0)
 I $P(IBEOB(6),U,1)'="" S PTNM=$E($P(IBEOB(6),U,1),1,PTLEN)
"RTN","IBCEMRAA",176,0)
 W !,PTNM
"RTN","IBCEMRAA",177,0)
 ; Account # (Bill #)
"RTN","IBCEMRAA",178,0)
 W ?24,$P($$SITE^VASITE,U,3),"-",$P(IBILL,U)
"RTN","IBCEMRAA",179,0)
 ; Reason Code,Remarks Code 1
"RTN","IBCEMRAA",180,0)
 W ?48,$G(RSNCD(1)),?52,$P(RMKS,U,1)
"RTN","IBCEMRAA",181,0)
 ; DRG Code Used
"RTN","IBCEMRAA",182,0)
 W ?58,$P(IBEOB(0),U,10)
"RTN","IBCEMRAA",183,0)
 ; Coinsurance, Contract Adjustment
"RTN","IBCEMRAA",184,0)
 W ?86,$J($G(IBCOINS),11,2),?115,$J($G(IBCTADJ),11,2)
"RTN","IBCEMRAA",185,0)
 ; ROW 17
"RTN","IBCEMRAA",186,0)
 ; HIC & ICN
"RTN","IBCEMRAA",187,0)
 S HIC=$S($P(IBEOB(6),U,2)'="":$P(IBEOB(6),U,2),$$WNRBILL^IBEFUNC(IBIFN,1):$P($G(^DGCR(399,$P(IBEOB(0),U),"I1")),U,2),1:$P($G(^DGCR(399,$P(IBEOB(0),U),"I2")),U,2))
"RTN","IBCEMRAA",188,0)
 W !,HIC,?24,$P(IBEOB(0),U,14)
"RTN","IBCEMRAA",189,0)
 ; Reason Code, Remarks Code 2
"RTN","IBCEMRAA",190,0)
 W ?48,$G(RSNCD(2)),?52,$P(RMKS,U,2)
"RTN","IBCEMRAA",191,0)
 ; covered charges
"RTN","IBCEMRAA",192,0)
 W ?86,$J($P(IBEOB(1),U,3),11,2)
"RTN","IBCEMRAA",193,0)
 ; Outpatient Reimbursement Rate
"RTN","IBCEMRAA",194,0)
 I 'INPAT W ?115,$J($P(IBEOB(3),U,1),11,2)
"RTN","IBCEMRAA",195,0)
 ; ROW 18
"RTN","IBCEMRAA",196,0)
 W !,IBFD,?12,IBTD
"RTN","IBCEMRAA",197,0)
 ; Type of Bill (=Location of Care_Bill Clasification_Frequency)
"RTN","IBCEMRAA",198,0)
 W ?38,$P(IBILL,U,24)_$P($G(^DGCR(399.1,$P(IBILL,U,25),0)),U,2)_$P(IBILL,U,26)
"RTN","IBCEMRAA",199,0)
 ; Reason Code,Remarks Code 3
"RTN","IBCEMRAA",200,0)
 W ?48,$G(RSNCD(3)),?52,$P(RMKS,U,3)
"RTN","IBCEMRAA",201,0)
 ; non-covered amount (Pt Responsibility)
"RTN","IBCEMRAA",202,0)
 W ?86,$J(NCVRCHRG,11,2)
"RTN","IBCEMRAA",203,0)
 ; Interest Amount
"RTN","IBCEMRAA",204,0)
 I $P(IBEOB(1),U,7) W ?100,$J($P(IBEOB(1),U,7),11,2)
"RTN","IBCEMRAA",205,0)
 ; Procedure code amount
"RTN","IBCEMRAA",206,0)
 W ?115,$J($P(IBEOB(3),U,2),11,2)
"RTN","IBCEMRAA",207,0)
 ; ROW 19
"RTN","IBCEMRAA",208,0)
 ; claim status
"RTN","IBCEMRAA",209,0)
 W !?6,$E($P(IBEOB(0),U,21),1,2)
"RTN","IBCEMRAA",210,0)
 ; M-Care Inp Cost Report Day Ct
"RTN","IBCEMRAA",211,0)
 W ?24,$P(IBEOB(4),U,14)
"RTN","IBCEMRAA",212,0)
 ; M-Care Inp Cov. Days/Visit Ct
"RTN","IBCEMRAA",213,0)
 W ?30,$P(IBEOB(4),U,1)
"RTN","IBCEMRAA",214,0)
 ; Medicare Non-Covered Days
"RTN","IBCEMRAA",215,0)
 W ?38,$P(IBEOB(4),U,19)
"RTN","IBCEMRAA",216,0)
 ; Reason Code,Remarks Code 4
"RTN","IBCEMRAA",217,0)
 W ?48,$G(RSNCD(4)),?52,$P(RMKS,U,4)
"RTN","IBCEMRAA",218,0)
 ; M-Care Inp Claim Drg Amt
"RTN","IBCEMRAA",219,0)
 W ?58,$J($P(IBEOB(4),U,3),11,2)
"RTN","IBCEMRAA",220,0)
 ; if Group Code is PR, print the sum of Reason Codes 1 and 66
"RTN","IBCEMRAA",221,0)
 W ?72,$J($G(IBDED),11,2)
"RTN","IBCEMRAA",222,0)
 ; Claim Adjustments
"RTN","IBCEMRAA",223,0)
 W ?100,$J($G(CLMADJ),10,2)
"RTN","IBCEMRAA",224,0)
 ; net reimburse
"RTN","IBCEMRAA",225,0)
 W ?115,$J($P(IBEOB(1),U,1),11,2)
"RTN","IBCEMRAA",226,0)
 ; Row 20
"RTN","IBCEMRAA",227,0)
 ; Reason Code,Remarks Code 5
"RTN","IBCEMRAA",228,0)
 W !?48,$G(RSNCD(5)),?52,$P(RMKS,U,5)
"RTN","IBCEMRAA",229,0)
 ;
"RTN","IBCEMRAA",230,0)
 Q  ; CLMPRNT
"RTN","IBCEMRAA",231,0)
TABLE ;;variable;list of Reason Codes w/leading & trailing commas; description;
"RTN","IBCEMRAA",232,0)
 ;;RCDED;,1,66,;reason code to calc deductible amount;
"RTN","IBCEMRAA",233,0)
 ;;RCOINS;,2,;reason code to calc coinsurance amount;
"RTN","IBCEMRAA",234,0)
 ;;RCTADJ;,A2,;reason codes to calc contract adjustment amount;
"RTN","IBCEMRAA",235,0)
 ;;RCNCVR;,1,2,23,42,45,66,70,71,89,94,97,118,A1,A2,B3,B6,;reason codes excluded from calc of noncovered charges amount;
"RTN","IBCEMRAA",236,0)
 ;;RCLMADJ;,42,45,70,94,97,122,A1,;reason codes to calc claim adj
"RTN","IBCEMRAA",237,0)
 ;
"RTN","IBCEMRAB")
0^82^B52118593^B52079518
"RTN","IBCEMRAB",1,0)
IBCEMRAB ;ALB/DSM - MEDICARE REMITTANCE ADVICE DETAIL-PART B ; 12/29/05 9:58am
"RTN","IBCEMRAB",2,0)
 ;;2.0;INTEGRATED BILLING;**155,323,349**;21-MAR-94;Build 46
"RTN","IBCEMRAB",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEMRAB",4,0)
 ;
"RTN","IBCEMRAB",5,0)
 Q  ; this routine must be called at an entry point
"RTN","IBCEMRAB",6,0)
 ;
"RTN","IBCEMRAB",7,0)
 ;  This routine prints MRA Report for CMS-1500 (Part B) Form Type
"RTN","IBCEMRAB",8,0)
PRNT ;
"RTN","IBCEMRAB",9,0)
 ; Claim Level Adjustments
"RTN","IBCEMRAB",10,0)
 N DIC,Y,IBEOB,IBILL,IBILLU,IBTD,IBFD,TOT,PRFRMID
"RTN","IBCEMRAB",11,0)
 D GDATA,HDR
"RTN","IBCEMRAB",12,0)
 ;
"RTN","IBCEMRAB",13,0)
 ; Initialize Totals
"RTN","IBCEMRAB",14,0)
 S (TOT("ALWD"),TOT("SRVDED"),TOT("SRVCOIN"),TOT("SRVADJ"),TOT("PAID"))=0
"RTN","IBCEMRAB",15,0)
 ;
"RTN","IBCEMRAB",16,0)
 ; Service Line Level Adjustments
"RTN","IBCEMRAB",17,0)
 I $D(^IBM(361.1,IEN,15)) D SRVPRNT I IBQUIT Q
"RTN","IBCEMRAB",18,0)
 ;
"RTN","IBCEMRAB",19,0)
 ; Print Totals Line
"RTN","IBCEMRAB",20,0)
 D TOTAL
"RTN","IBCEMRAB",21,0)
 ;
"RTN","IBCEMRAB",22,0)
 ; Print Disclaimer
"RTN","IBCEMRAB",23,0)
 D DSCLMR^IBCEMRAX
"RTN","IBCEMRAB",24,0)
 ;
"RTN","IBCEMRAB",25,0)
 Q  ;PRNT
"RTN","IBCEMRAB",26,0)
 ;
"RTN","IBCEMRAB",27,0)
GDATA ; Get MRA data
"RTN","IBCEMRAB",28,0)
 ;
"RTN","IBCEMRAB",29,0)
 N I
"RTN","IBCEMRAB",30,0)
 F I=0,1,2,3,6 S IBEOB(I)=$G(^IBM(361.1,IEN,I))
"RTN","IBCEMRAB",31,0)
 S IBILL=$G(^DGCR(399,$P(IBEOB(0),U),0)),IBILLU=$G(^DGCR(399,$P(IBEOB(0),U),"U"))
"RTN","IBCEMRAB",32,0)
 S IBTD=$$FMTE^XLFDT($P(IBILLU,U),5),IBFD=$$FMTE^XLFDT($P(IBILLU,U,2),5)
"RTN","IBCEMRAB",33,0)
 Q  ;GDATA
"RTN","IBCEMRAB",34,0)
 ;
"RTN","IBCEMRAB",35,0)
HDR ; Print Header
"RTN","IBCEMRAB",36,0)
 I $E(IOST,1,2)["C-" W @IOF
"RTN","IBCEMRAB",37,0)
 S IBPGN=IBPGN+1
"RTN","IBCEMRAB",38,0)
 ;
"RTN","IBCEMRAB",39,0)
 ; Row 1,2,3
"RTN","IBCEMRAB",40,0)
 W !,?102,"Medicare-equivalent",!?104,"Remittance Advice",!
"RTN","IBCEMRAB",41,0)
 ; Row 7
"RTN","IBCEMRAB",42,0)
 W !!!!,"DEPT OF VETERANS AFFAIRS"
"RTN","IBCEMRAB",43,0)
 ;
"RTN","IBCEMRAB",44,0)
 N PRVDR,LVL,STATE,LINE,PTNM,PTLEN,RMKS,HIC
"RTN","IBCEMRAB",45,0)
 ; Retrieve the Provider data from IB Site Parameters file - ^IBE(350.9)
"RTN","IBCEMRAB",46,0)
 S PRVDR=$G(^IBE(350.9,1,2))
"RTN","IBCEMRAB",47,0)
 ; ProviderName^AgentCashierAddress^City^State^Zip
"RTN","IBCEMRAB",48,0)
 ;
"RTN","IBCEMRAB",49,0)
 F LVL=1:1:5 S PRVDR(LVL)=$P(PRVDR,U,LVL)
"RTN","IBCEMRAB",50,0)
 ; PRVDR(1)  Provider Name (Agent Cashier Mail Symbol)
"RTN","IBCEMRAB",51,0)
 ; PRVDR(2)  Agent Cashier Street Address
"RTN","IBCEMRAB",52,0)
 ; PRVDR(3)  Agent Cashier City
"RTN","IBCEMRAB",53,0)
 ; PRVDR(4)  Agent Cashier State
"RTN","IBCEMRAB",54,0)
 ; PRVDR(5)  Agent Cashier Zip
"RTN","IBCEMRAB",55,0)
 ;
"RTN","IBCEMRAB",56,0)
 ; resolve the State File Pointer in PRVDR(4) & get State Abbreviation
"RTN","IBCEMRAB",57,0)
 S STATE=$S(PRVDR(4)'="":$P($G(^DIC(5,PRVDR(4),0)),U,2),1:"")
"RTN","IBCEMRAB",58,0)
 ;
"RTN","IBCEMRAB",59,0)
 ; Row 8
"RTN","IBCEMRAB",60,0)
 W !,PRVDR(2),?97,"PROVIDER #:",?111,"VA0"_$P($$SITE^VASITE,U,3)
"RTN","IBCEMRAB",61,0)
 ; Row 9
"RTN","IBCEMRAB",62,0)
 W !,PRVDR(1),?97,"PAGE #:",?111,$J(IBPGN,3)
"RTN","IBCEMRAB",63,0)
 ; Row 10
"RTN","IBCEMRAB",64,0)
 W !,PRVDR(3),", ",STATE," ",PRVDR(5),?97,"DATE:",?111,$$FMTE^XLFDT($P(IBEOB(0),U,6),5)
"RTN","IBCEMRAB",65,0)
 ; Row 14
"RTN","IBCEMRAB",66,0)
 W !!!!,"PERF PROV",?12,"SERV DATE",?25,"POS",?29,"NOS",?34,"PROC",?40,"MODS",?53,"BILLED",?63,"ALLOWED",?75,"DEDUCT"
"RTN","IBCEMRAB",67,0)
 W ?87,"COINS",?93,"GRP-RC",?107,"AMT",?114,"PROV PD"
"RTN","IBCEMRAB",68,0)
 ; Row 15
"RTN","IBCEMRAB",69,0)
 S $P(LINE,"-",122)="" W !,LINE
"RTN","IBCEMRAB",70,0)
 ;
"RTN","IBCEMRAB",71,0)
 ; format and standardize patient name for display
"RTN","IBCEMRAB",72,0)
 S PTNM("FILE")=2,PTNM("IENS")=$P(IBILL,U,2),PTNM("FIELD")=.01,PTLEN=23
"RTN","IBCEMRAB",73,0)
 S PTNM=$$BLDNAME^XLFNAME(.PTNM,PTLEN)
"RTN","IBCEMRAB",74,0)
 I $P(IBEOB(6),U,1)'="" S PTNM=$E($P(IBEOB(6),U,1),1,PTLEN)
"RTN","IBCEMRAB",75,0)
 ;
"RTN","IBCEMRAB",76,0)
 S HIC=$S($P(IBEOB(6),U,2)'="":$P(IBEOB(6),U,2),$$WNRBILL^IBEFUNC(IBIFN,1):$P($G(^DGCR(399,$P(IBEOB(0),U),"I1")),U,2),1:$P($G(^DGCR(399,$P(IBEOB(0),U),"I2")),U,2))
"RTN","IBCEMRAB",77,0)
 ; Row 17
"RTN","IBCEMRAB",78,0)
 ; Patient Name, HIC, ACNT, ICN, ASG
"RTN","IBCEMRAB",79,0)
 W !!,"NAME",?7,PTNM,?31,"HIC",?35,HIC
"RTN","IBCEMRAB",80,0)
 W ?49,"ACNT",?54,$P($$SITE^VASITE,U,3),"-",$P(IBILL,U),?76,"ICN",?80,$P(IBEOB(0),U,14)
"RTN","IBCEMRAB",81,0)
 W ?97,"ASG",?101,$S($P(IBILLU,U,6):"Y",1:"N")
"RTN","IBCEMRAB",82,0)
 ;
"RTN","IBCEMRAB",83,0)
 ; MOA: Medicare Outpatient Remarks Code
"RTN","IBCEMRAB",84,0)
 S RMKS=$P(IBEOB(3),U,3,7) I RMKS="" S RMKS="^^^^"
"RTN","IBCEMRAB",85,0)
 W ?104,"MOA   " I RMKS'?1."^" W $P(RMKS,U,1)," ",$P(RMKS,U,2)
"RTN","IBCEMRAB",86,0)
 I $P(RMKS,U,3,5)'?1."^" S RMKS=$TR(RMKS,U," ") W !,RMKS
"RTN","IBCEMRAB",87,0)
 ; Secondary Performing Provider ID
"RTN","IBCEMRAB",88,0)
 ; On CMS-1500 Form Type reports, If Medicare WNR is Primary or Secondary, then set Performing Provider ID
"RTN","IBCEMRAB",89,0)
 I $$WNRBILL^IBEFUNC(IBIFN,1)!$$WNRBILL^IBEFUNC(IBIFN,2) S PRFRMID="V"_$$MCRSPEC^IBCEU4(IBIFN,1)_$P($$SITE^VASITE,U,3)
"RTN","IBCEMRAB",90,0)
 Q  ;HDR
"RTN","IBCEMRAB",91,0)
 ;
"RTN","IBCEMRAB",92,0)
SRVPRNT ; Print Service Level Data of EOB file (#361.1 Level 15)
"RTN","IBCEMRAB",93,0)
 ;
"RTN","IBCEMRAB",94,0)
 N LNLVL,RLVL,RLVLD,LNLVLD,SRVFDT,SRVTDT,UNIT,PRCD,MOD,I
"RTN","IBCEMRAB",95,0)
 N ALWD,GLVL,GLVLD,GRPCD,OPRCD,PAID,RCNT,SRMKS,SRVCOIN
"RTN","IBCEMRAB",96,0)
 N SRVDED,SRVADJ,SRVCHRG,SRVDT,CLMLN,Z
"RTN","IBCEMRAB",97,0)
 ;
"RTN","IBCEMRAB",98,0)
 ; RLVLD=reason_code^amount^quantity^reason text
"RTN","IBCEMRAB",99,0)
 S LNLVL=0
"RTN","IBCEMRAB",100,0)
 F  S LNLVL=$O(^IBM(361.1,IEN,15,LNLVL)) Q:'LNLVL  S LNLVLD=^(LNLVL,0) D  I IBQUIT Q
"RTN","IBCEMRAB",101,0)
 . I ($Y+4)>IOSL D  I IBQUIT Q
"RTN","IBCEMRAB",102,0)
 . . D PAUSE^IBCEMRAX I IBQUIT Q
"RTN","IBCEMRAB",103,0)
 . . W @IOF D HDR
"RTN","IBCEMRAB",104,0)
 . ; From Service Date, To Service Date
"RTN","IBCEMRAB",105,0)
 . S SRVFDT=$P(LNLVLD,U,16),SRVTDT=$P(LNLVLD,U,17)
"RTN","IBCEMRAB",106,0)
 . S SRVFDT=$$FMTE^XLFDT(SRVFDT,5),SRVTDT=$$FMTE^XLFDT(SRVTDT,5)
"RTN","IBCEMRAB",107,0)
 . ; Get Units, Procedure Code, Original Procedure Code
"RTN","IBCEMRAB",108,0)
 . S UNIT=$P(LNLVLD,U,11),PRCD=$P(LNLVLD,U,4),OPRCD=$P(LNLVLD,U,15)
"RTN","IBCEMRAB",109,0)
 . S PAID=$P(LNLVLD,U,3),TOT("PAID")=TOT("PAID")+PAID    ; Provider Paid Amount
"RTN","IBCEMRAB",110,0)
 . S ALWD=$P(LNLVLD,U,13),TOT("ALWD")=TOT("ALWD")+ALWD   ; Allowed Amount
"RTN","IBCEMRAB",111,0)
 . ; Handle Multiple Paid Modifiers from the Service Line Level - string together
"RTN","IBCEMRAB",112,0)
 . K MOD M MOD=^IBM(361.1,IEN,15,LNLVL,2) S MOD="" F I=1:1:4 Q:'$D(MOD(I))  S MOD=MOD_MOD(I,0)
"RTN","IBCEMRAB",113,0)
 . ; Calculate Submitted Service Line Charge
"RTN","IBCEMRAB",114,0)
 . S CLMLN=$P(LNLVLD,U,12)   ; use to match EOB line # to VistA Bill line#
"RTN","IBCEMRAB",115,0)
 . S SRVCHRG=$P($G(IBZDATA(CLMLN)),U,8)*$P($G(IBZDATA(CLMLN)),U,9)
"RTN","IBCEMRAB",116,0)
 . ; Service Line Level Remarks Codes
"RTN","IBCEMRAB",117,0)
 . S Z=0 F  S Z=$O(^IBM(361.1,IEN,15,LNLVL,4,Z)) Q:'Z  I $G(^(Z,0))'="" S SRMKS(Z)=$P(^(0),U,2)
"RTN","IBCEMRAB",118,0)
 . ; Get Service Level Group Code/Reason Code Data
"RTN","IBCEMRAB",119,0)
 . S (SRVDED,GLVL,RCNT,SRVCOIN)=0 K RSNCD
"RTN","IBCEMRAB",120,0)
 . F  S GLVL=$O(^IBM(361.1,IEN,15,LNLVL,1,GLVL)) Q:'GLVL  S GLVLD=^(GLVL,0) D  ;
"RTN","IBCEMRAB",121,0)
 . . S GRPCD=$P(GLVLD,U),RLVL=0
"RTN","IBCEMRAB",122,0)
 . . F  S RLVL=$O(^IBM(361.1,IEN,15,LNLVL,1,GLVL,1,RLVL)) Q:'RLVL  S RLVLD=^(RLVL,0),RSNCD=$P(RLVLD,U) D  ;
"RTN","IBCEMRAB",123,0)
 . . . I GRPCD="PR",RSNCD="AAA" Q  ;exception
"RTN","IBCEMRAB",124,0)
 . . . I GRPCD="OA",RSNCD="AB3" Q  ;exception
"RTN","IBCEMRAB",125,0)
 . . . I GRPCD="LQ" Q              ;exception
"RTN","IBCEMRAB",126,0)
 . . . I GRPCD="PR",RSNCD=1 S SRVDED=SRVDED+$P(RLVLD,U,2),TOT("SRVDED")=TOT("SRVDED")+SRVDED Q  ;deductible
"RTN","IBCEMRAB",127,0)
 . . . I GRPCD="PR",RSNCD=2 S SRVCOIN=$P(RLVLD,U,2),TOT("SRVCOIN")=TOT("SRVCOIN")+SRVCOIN Q  ;coinsurance
"RTN","IBCEMRAB",128,0)
 . . . S SRVADJ=$P(RLVLD,U,2),TOT("SRVADJ")=TOT("SRVADJ")+SRVADJ  ;adjustment
"RTN","IBCEMRAB",129,0)
 . . . S RCNT=RCNT+1,RSNCD(RCNT)=GRPCD_"-"_RSNCD_U_SRVADJ
"RTN","IBCEMRAB",130,0)
 . ; Performing Provider ID
"RTN","IBCEMRAB",131,0)
 . W !,$G(PRFRMID)
"RTN","IBCEMRAB",132,0)
 . ; From Date in MMDD (w/leading zero) format
"RTN","IBCEMRAB",133,0)
 . I SRVFDT'="" S SRVDT=$E("00",1,2-$L(+SRVFDT))_+SRVFDT_$E("00",1,2-$L($P(SRVFDT,"/",2)))_$P(SRVFDT,"/",2) W ?12,SRVDT
"RTN","IBCEMRAB",134,0)
 . ; To Date in MMDDYY (w/leading zero) format
"RTN","IBCEMRAB",135,0)
 . I SRVTDT'="" W ?17,$E("00",1,2-$L(+SRVTDT)),+SRVTDT,$E("00",1,2-$L($P(SRVTDT,"/",2))),$P(SRVTDT,"/",2),$E($P(SRVTDT,"/",3),3,4)
"RTN","IBCEMRAB",136,0)
 . ; If To Date is Null, Print From Date with year (if not Null)
"RTN","IBCEMRAB",137,0)
 . I SRVTDT="",SRVFDT'="" W ?17,SRVDT,$E($P(SRVFDT,"/",3),3,4)
"RTN","IBCEMRAB",138,0)
 . ; Place of Service - from 837 Extract from CMS-1500 Service Line Level
"RTN","IBCEMRAB",139,0)
 . W ?25,$P($G(IBZDATA(CLMLN)),U,3)
"RTN","IBCEMRAB",140,0)
 . ; Print Units, Procedure Code Paid, Modifiers, Submitted Line Charge, Allowed Amt, Deductable, Coinsurance
"RTN","IBCEMRAB",141,0)
 . W ?28,UNIT,?34,PRCD,?40,MOD,?49,$J(SRVCHRG,10,2),?60,$J(ALWD,10,2),?71,$J(SRVDED,10,2),?82,$J(SRVCOIN,10,2)
"RTN","IBCEMRAB",142,0)
 . ; Print 1st Line of Group Code-Reason Code, Adjustment Amount, Paid Amount
"RTN","IBCEMRAB",143,0)
 . W ?93,$P($G(RSNCD(1)),U),?100,$J($P($G(RSNCD(1)),U,2),10,2),?111,$J(PAID,10,2)
"RTN","IBCEMRAB",144,0)
 . ; print PRCD Submitted, Remarks if any
"RTN","IBCEMRAB",145,0)
 . I OPRCD'=""!$O(SRMKS(0)) W ! D  ;
"RTN","IBCEMRAB",146,0)
 . . I OPRCD'="" W ?33,"(",OPRCD,")"
"RTN","IBCEMRAB",147,0)
 . . I $O(SRMKS(0)) W ?44,"REM: " S Z=0 F  S Z=$O(SRMKS(Z)) Q:'Z  W SRMKS(Z),$S($O(SRMKS(Z)):",",1:"")
"RTN","IBCEMRAB",148,0)
 . ; Print the rest of Group Code-Reason Code, Reason Code Amount
"RTN","IBCEMRAB",149,0)
 . F I=2:1:RCNT W !?93,$P(RSNCD(I),U),?100,$J($P(RSNCD(I),U,2),10,2)
"RTN","IBCEMRAB",150,0)
 Q  ;SRVPRNT
"RTN","IBCEMRAB",151,0)
 ;
"RTN","IBCEMRAB",152,0)
TOTAL ; Print Totals
"RTN","IBCEMRAB",153,0)
 W !!,"PT RESP ",$J($P($G(IBEOB(1)),U,2),10,2)  ;Patient Responsibility
"RTN","IBCEMRAB",154,0)
 ; Billed Amount, Allowed Amount, Deductable Amount
"RTN","IBCEMRAB",155,0)
 W ?35,"CLAIM TOTAL",?49,$J($P($G(IBEOB(2)),U,4),10,2),?60,$J(TOT("ALWD"),10,2),?71,$J(TOT("SRVDED"),10,2)
"RTN","IBCEMRAB",156,0)
 ; Coinsurance Amount, Adjustment Amount, Paid Amount
"RTN","IBCEMRAB",157,0)
 W ?82,$J(TOT("SRVCOIN"),10,2),?100,$J(TOT("SRVADJ"),10,2),?111,$J(TOT("PAID"),10,2)
"RTN","IBCEMRAB",158,0)
 Q  ;TOTAL
"RTN","IBCEMRAB",159,0)
 ;
"RTN","IBCEMSR")
0^48^B49071063^B49135908
"RTN","IBCEMSR",1,0)
IBCEMSR ;WOIFO/AAT - MRA STATISTICS REPORT ;09/03/04
"RTN","IBCEMSR",2,0)
 ;;2.0;INTEGRATED BILLING;**155,288,294,349**;21-MAR-94;Build 46
"RTN","IBCEMSR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEMSR",4,0)
 ;
"RTN","IBCEMSR",5,0)
EN ;
"RTN","IBCEMSR",6,0)
 N IBQ,IBDIV,IBBDT,IBEDT,IBSUM,IBSCR
"RTN","IBCEMSR",7,0)
 W !!,"Report requires 132 Columns"
"RTN","IBCEMSR",8,0)
 S IBQ=0 ; quit flag
"RTN","IBCEMSR",9,0)
 ; Prompts to the user:
"RTN","IBCEMSR",10,0)
 D DIV Q:IBQ  ; Division(s)
"RTN","IBCEMSR",11,0)
 D SUM Q:IBQ  ; Summary only?
"RTN","IBCEMSR",12,0)
 W !!,"Normal processing time for a MRA is 10-12 days.  If you select a date range of"
"RTN","IBCEMSR",13,0)
 W !,"less than 2 weeks, do not expect to have received many MRAs."
"RTN","IBCEMSR",14,0)
 D DTR Q:IBQ  ; From-To date range
"RTN","IBCEMSR",15,0)
 D DEVICE Q:IBQ
"RTN","IBCEMSR",16,0)
 D RUN
"RTN","IBCEMSR",17,0)
 Q
"RTN","IBCEMSR",18,0)
 ;
"RTN","IBCEMSR",19,0)
DIV N DIC,DIR,DIRUT,Y
"RTN","IBCEMSR",20,0)
 W ! S DIR("B")="ALL",DIR("A")="Run this report for All divisions or Selected Divisions: "
"RTN","IBCEMSR",21,0)
 S DIR(0)="SA^ALL:All divisions;S:Selected divisions" D ^DIR
"RTN","IBCEMSR",22,0)
 I $D(DIRUT) S IBQ=1 Q
"RTN","IBCEMSR",23,0)
 S IBDIV=Y Q:Y="ALL"
"RTN","IBCEMSR",24,0)
 ; Collect divisions
"RTN","IBCEMSR",25,0)
 F  D  Q:Y'>0
"RTN","IBCEMSR",26,0)
 . W ! S DIC("A")="Division: ",DIC=40.8,DIC(0)="AEQM" D ^DIC
"RTN","IBCEMSR",27,0)
 . I $D(DIRUT) S IBQ=1 Q
"RTN","IBCEMSR",28,0)
 . I Y'>0 Q
"RTN","IBCEMSR",29,0)
 . S IBDIV(+Y)=""
"RTN","IBCEMSR",30,0)
 I $O(IBDIV(""))=""  S IBQ=1 Q  ; None selected
"RTN","IBCEMSR",31,0)
 Q
"RTN","IBCEMSR",32,0)
 ;
"RTN","IBCEMSR",33,0)
DTR ;date range
"RTN","IBCEMSR",34,0)
 N %DT,Y
"RTN","IBCEMSR",35,0)
 S (IBBDT,IBEDT)=DT
"RTN","IBCEMSR",36,0)
 S %DT="AEX"
"RTN","IBCEMSR",37,0)
 S %DT("A")="Start with MRA Request Transmission Date: " ; No default,%DT("B")="TODAY"
"RTN","IBCEMSR",38,0)
 W ! D ^%DT K %DT
"RTN","IBCEMSR",39,0)
 I Y<0 S IBQ=1 Q
"RTN","IBCEMSR",40,0)
 S IBBDT=+Y
"RTN","IBCEMSR",41,0)
 S %DT="AEX"
"RTN","IBCEMSR",42,0)
 S %DT("A")="Go to MRA Request Transmission Date: ",%DT("B")="TODAY"
"RTN","IBCEMSR",43,0)
 D ^%DT K %DT
"RTN","IBCEMSR",44,0)
 I Y<0 S IBQ=1 Q
"RTN","IBCEMSR",45,0)
 S IBEDT=+Y
"RTN","IBCEMSR",46,0)
 Q
"RTN","IBCEMSR",47,0)
 ;
"RTN","IBCEMSR",48,0)
SUM N DIR,DIRUT,Y
"RTN","IBCEMSR",49,0)
 W ! S DIR("B")="YES",DIR("A")="Do you want to print a summary only? "
"RTN","IBCEMSR",50,0)
 S DIR(0)="YA" D ^DIR
"RTN","IBCEMSR",51,0)
 I $D(DIRUT) S IBQ=1 Q
"RTN","IBCEMSR",52,0)
 S IBSUM=+Y
"RTN","IBCEMSR",53,0)
 Q
"RTN","IBCEMSR",54,0)
 ;
"RTN","IBCEMSR",55,0)
DEVICE N %ZIS,IOP,ZTSK,ZTRTN,ZTIO,ZTDESC,ZTSAVE,POP
"RTN","IBCEMSR",56,0)
 K IO("Q")
"RTN","IBCEMSR",57,0)
 S %ZIS="QM"
"RTN","IBCEMSR",58,0)
 W ! D ^%ZIS
"RTN","IBCEMSR",59,0)
 I POP S IBQ=1 Q
"RTN","IBCEMSR",60,0)
 S IBSCR=$S($E($G(IOST),1,2)="C-":1,1:0)
"RTN","IBCEMSR",61,0)
 ;
"RTN","IBCEMSR",62,0)
 I $D(IO("Q")) D  S IBQ=1
"RTN","IBCEMSR",63,0)
 . S ZTRTN="RUN^IBCEMSR"
"RTN","IBCEMSR",64,0)
 . S ZTIO=ION
"RTN","IBCEMSR",65,0)
 . S ZTSAVE("IB*")=""
"RTN","IBCEMSR",66,0)
 . S ZTDESC="IB MRA STATISTICS REPORT"
"RTN","IBCEMSR",67,0)
 . D ^%ZTLOAD
"RTN","IBCEMSR",68,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","IBCEMSR",69,0)
 . D HOME^%ZIS
"RTN","IBCEMSR",70,0)
 U IO
"RTN","IBCEMSR",71,0)
 Q
"RTN","IBCEMSR",72,0)
 ;
"RTN","IBCEMSR",73,0)
 ;
"RTN","IBCEMSR",74,0)
RUN N REF
"RTN","IBCEMSR",75,0)
 S REF=$NA(^TMP($J,"IBCEMSR"))
"RTN","IBCEMSR",76,0)
 K @REF
"RTN","IBCEMSR",77,0)
 D COLLECT  ; Collect the data in ^TMP
"RTN","IBCEMSR",78,0)
 U IO
"RTN","IBCEMSR",79,0)
 D REPORT^IBCEMSR1
"RTN","IBCEMSR",80,0)
 I 'IBSCR W !,@IOF
"RTN","IBCEMSR",81,0)
 D ^%ZISC
"RTN","IBCEMSR",82,0)
 K @REF
"RTN","IBCEMSR",83,0)
 Q
"RTN","IBCEMSR",84,0)
 ;
"RTN","IBCEMSR",85,0)
COLLECT ; Collect Information
"RTN","IBCEMSR",86,0)
 ; Input: IBDIV, IBBDT,IBEDT
"RTN","IBCEMSR",87,0)
 N IBDT,IBBAT,IBTRAN,IBZ,MRAUSR,NUMDIV,IBDV,ALLDIV
"RTN","IBCEMSR",88,0)
 S IBDV=0 F NUMDIV=0:1 S IBDV=$O(IBDIV(IBDV)) Q:'IBDV
"RTN","IBCEMSR",89,0)
 S ALLDIV=" "
"RTN","IBCEMSR",90,0)
 I IBDIV="ALL" S ALLDIV="  *** ALL DIVISIONS ***"
"RTN","IBCEMSR",91,0)
 I NUMDIV>1 S ALLDIV="  *** ALL SELECTED DIVISIONS ***"
"RTN","IBCEMSR",92,0)
 ;
"RTN","IBCEMSR",93,0)
 S MRAUSR=$$MRAUSR^IBCEMU1() ;Auto-authorizer
"RTN","IBCEMSR",94,0)
 S IBDT=IBBDT-.000001
"RTN","IBCEMSR",95,0)
 F  S IBDT=$O(^IBA(364.1,"ALT",IBDT)) Q:'IBDT  Q:IBDT\1>IBEDT  D
"RTN","IBCEMSR",96,0)
 . S IBBAT=0 F  S IBBAT=$O(^IBA(364.1,"ALT",IBDT,IBBAT)) Q:'IBBAT  D
"RTN","IBCEMSR",97,0)
 .. S IBTRAN=0 F  S IBTRAN=$O(^IBA(364,"C",IBBAT,IBTRAN)) Q:'IBTRAN  D
"RTN","IBCEMSR",98,0)
 ... S IBZ=$G(^IBA(364,IBTRAN,0)) Q:IBZ=""
"RTN","IBCEMSR",99,0)
 ... N IBIFN,IBSTAT,IBSEQ,IBBILZ,IBBILST,IBFORM,IBCLERK,IBDV,IBDVN,REFX,REFS,REFT,REFTX,MRACNT,IBREJECT
"RTN","IBCEMSR",100,0)
 ... S IBIFN=+IBZ
"RTN","IBCEMSR",101,0)
 ... I '$P($G(^DGCR(399,IBIFN,"S")),U,7) Q  ; no MRA request
"RTN","IBCEMSR",102,0)
 ... S IBSTAT=$P(IBZ,U,3)
"RTN","IBCEMSR",103,0)
 ... S IBSEQ=$P(IBZ,U,8) Q:"T"[IBSEQ
"RTN","IBCEMSR",104,0)
 ... I '$$WNRBILL^IBEFUNC(IBIFN,IBSEQ) Q   ; payer sequence must be Medicare for this transmission
"RTN","IBCEMSR",105,0)
 ... S IBBILZ=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEMSR",106,0)
 ... S IBBILST=$P(IBBILZ,U,13)
"RTN","IBCEMSR",107,0)
 ... S IBFORM=+$P(IBBILZ,U,19)
"RTN","IBCEMSR",108,0)
 ... I IBFORM'=2,IBFORM'=3 Q  ; not 1500 or UB
"RTN","IBCEMSR",109,0)
 ... S IBCLERK=+$P($G(^DGCR(399,IBIFN,"S")),U,8) ; Who requested MRA?
"RTN","IBCEMSR",110,0)
 ... S IBCLERK=$P($G(^VA(200,IBCLERK,0)),U)
"RTN","IBCEMSR",111,0)
 ... S:IBCLERK="" IBCLERK="UNKNOWN"
"RTN","IBCEMSR",112,0)
 ... S IBDV=+$P(IBBILZ,U,22) ; Default division
"RTN","IBCEMSR",113,0)
 ... S IBDVN=$P($G(^DG(40.8,IBDV,0)),U) ; Div name
"RTN","IBCEMSR",114,0)
 ... S:IBDVN="" IBDVN="UNKNOWN"
"RTN","IBCEMSR",115,0)
 ... I IBDIV'="ALL",'$D(IBDIV(IBDV)) Q  ;Division filter
"RTN","IBCEMSR",116,0)
 ... I 'IBSUM S REFX=$NA(@REF@(IBDVN,IBCLERK,IBFORM)) I NUMDIV'=1 S REFTX=$NA(@REF@(ALLDIV,IBCLERK,IBFORM))  ; all divisions detail
"RTN","IBCEMSR",117,0)
 ... S REFS=$NA(@REF@(IBDVN,0,IBFORM)) ; Summary by division
"RTN","IBCEMSR",118,0)
 ... I NUMDIV'=1 S REFT=$NA(@REF@(ALLDIV,0,IBFORM))  ; all divisions
"RTN","IBCEMSR",119,0)
 ... D TXSTS^IBCEMU2(IBIFN,IBTRAN,.IBREJECT) ; rejected?
"RTN","IBCEMSR",120,0)
 ... S MRACNT=$$MRACNT^IBCEMU1(IBIFN) ; how many MRAs?
"RTN","IBCEMSR",121,0)
 ... D INC("ALL") ; total no of requests
"RTN","IBCEMSR",122,0)
 ... I IBSTAT="C" D INC("ALLC") ;cancelled
"RTN","IBCEMSR",123,0)
 ... I IBSTAT="R" D INC("ALLR") ;resubmitted
"RTN","IBCEMSR",124,0)
 ... I '$D(@REFS@("TOT",IBIFN)) S ^(IBIFN)="" D INC("TOT") ;unique requests
"RTN","IBCEMSR",125,0)
 ... ;no response?
"RTN","IBCEMSR",126,0)
 ... I 'IBREJECT,'MRACNT,'$D(@REFS@("NON",IBIFN)) S ^(IBIFN)="" D INC("NON")
"RTN","IBCEMSR",127,0)
 ... ;final reject?
"RTN","IBCEMSR",128,0)
 ... I 'MRACNT,IBREJECT,'$D(@REFS@("REJF",IBIFN)),IBTRAN=$$LAST364^IBCEF4(IBIFN) D
"RTN","IBCEMSR",129,0)
 .... S @REFS@("REJF",IBIFN)="" D INC("REJF")
"RTN","IBCEMSR",130,0)
 .... ; MRA?
"RTN","IBCEMSR",131,0)
 ... I MRACNT,'$D(@REFS@("MRA",IBIFN)) S ^(IBIFN)="" D
"RTN","IBCEMSR",132,0)
 .... D INC("MRA")
"RTN","IBCEMSR",133,0)
 .... I $$DENIED(IBIFN) D INC("MRAD")
"RTN","IBCEMSR",134,0)
 ... ;any secondary claims?
"RTN","IBCEMSR",135,0)
 ... D SECOND
"RTN","IBCEMSR",136,0)
 Q
"RTN","IBCEMSR",137,0)
 ;
"RTN","IBCEMSR",138,0)
INC(NODE,VALUE) ;Increase the respective value in ^TMP
"RTN","IBCEMSR",139,0)
 I 'IBSUM D
"RTN","IBCEMSR",140,0)
 . S @REFX@(NODE)=$G(@REFX@(NODE))+$G(VALUE,1)
"RTN","IBCEMSR",141,0)
 . I $D(REFTX) S @REFTX@(NODE)=$G(@REFTX@(NODE))+$G(VALUE,1)
"RTN","IBCEMSR",142,0)
 . Q
"RTN","IBCEMSR",143,0)
 S @REFS@(NODE)=$G(@REFS@(NODE))+$G(VALUE,1)
"RTN","IBCEMSR",144,0)
 I $D(REFT) S @REFT@(NODE)=$G(@REFT@(NODE))+$G(VALUE,1)
"RTN","IBCEMSR",145,0)
 Q
"RTN","IBCEMSR",146,0)
 ;
"RTN","IBCEMSR",147,0)
DENIED(IBIFN) ;MRA requests denied?
"RTN","IBCEMSR",148,0)
 ; 361.1 for this bill#
"RTN","IBCEMSR",149,0)
 ; if at least one request is 'processed' - MRA is NOT DENIED
"RTN","IBCEMSR",150,0)
 N IBDEN,IEN,IBZ
"RTN","IBCEMSR",151,0)
 S IBDEN=1
"RTN","IBCEMSR",152,0)
 S IEN=0 F  S IEN=$O(^IBM(361.1,"B",+$G(IBIFN),IEN)) Q:'IEN  D  Q:'IBDEN
"RTN","IBCEMSR",153,0)
 . S IBZ=$G(^IBM(361.1,IEN,0))
"RTN","IBCEMSR",154,0)
 . I $P(IBZ,U,4)'=1 Q  ; only MEDICARE
"RTN","IBCEMSR",155,0)
 . I $P(IBZ,U,13)=1 S IBDEN=0
"RTN","IBCEMSR",156,0)
 Q IBDEN
"RTN","IBCEMSR",157,0)
 ;
"RTN","IBCEMSR",158,0)
SECOND ;Secondary claims
"RTN","IBCEMSR",159,0)
 N IBAUT,IBTX,IBCBPS,IBNEXT,IBBILS,IBTOT,IBUNR,IB2ND,IBNODE
"RTN","IBCEMSR",160,0)
 I $D(@REFS@("SEC",IBIFN)) Q  ; Already included
"RTN","IBCEMSR",161,0)
 S IBCBPS=$P(IBBILZ,U,21) ; current bill sequence
"RTN","IBCEMSR",162,0)
 S IBNEXT=$S(IBSEQ="S":"T",1:"S") ;Next (after MRA) sequence
"RTN","IBCEMSR",163,0)
 I IBCBPS'=IBNEXT Q
"RTN","IBCEMSR",164,0)
 ; Number of unique sec claims
"RTN","IBCEMSR",165,0)
 S @REFS@("SEC",IBIFN)=""
"RTN","IBCEMSR",166,0)
 D INC("SEC")
"RTN","IBCEMSR",167,0)
 S IBBILS=$G(^DGCR(399,IBIFN,"S")) Q:'$P(IBBILS,U,10)  ; Not even authorized
"RTN","IBCEMSR",168,0)
 ; Authorized but not yet printed?
"RTN","IBCEMSR",169,0)
 I $P(IBBILS,U,10),'$P(IBBILS,U,13) D  Q
"RTN","IBCEMSR",170,0)
 . I +$$TXMT^IBCEF4(IBIFN)'=1 D INC("AUT") ; Exclude transmittable
"RTN","IBCEMSR",171,0)
 ; Check the field 'AUTHORIZER'
"RTN","IBCEMSR",172,0)
 S IBAUT=($P(IBBILS,U,11)=MRAUSR) ; Auto-authorized?
"RTN","IBCEMSR",173,0)
 S IBTX=$$TRANSM(IBIFN,IBNEXT) ; Transmitted? (present in 364?)
"RTN","IBCEMSR",174,0)
 I IBAUT,IBTX S IBNODE="AT"   ; Auto-gen Tx
"RTN","IBCEMSR",175,0)
 I 'IBAUT,IBTX S IBNODE="MT"  ; Manually Tx
"RTN","IBCEMSR",176,0)
 I IBAUT,'IBTX S IBNODE="AP"  ; Auto-gen Prn
"RTN","IBCEMSR",177,0)
 I 'IBAUT,'IBTX S IBNODE="MP" ; Manually Prn
"RTN","IBCEMSR",178,0)
 ;
"RTN","IBCEMSR",179,0)
 ;Calculate amounts
"RTN","IBCEMSR",180,0)
 S IBTOT=+$G(^DGCR(399,IBIFN,"U1"))
"RTN","IBCEMSR",181,0)
 S IBUNR=$P($G(^PRCA(430,IBIFN,13)),U,2) ; Medicare Unreimbursable
"RTN","IBCEMSR",182,0)
 S IB2ND=$$PREOBTOT^IBCEU0(IBIFN)
"RTN","IBCEMSR",183,0)
 D INC(IBNODE)
"RTN","IBCEMSR",184,0)
 D INC(IBNODE_"1",IBTOT)
"RTN","IBCEMSR",185,0)
 D INC(IBNODE_"2",IBUNR)
"RTN","IBCEMSR",186,0)
 D INC(IBNODE_"3",IB2ND)
"RTN","IBCEMSR",187,0)
 Q
"RTN","IBCEMSR",188,0)
 ;
"RTN","IBCEMSR",189,0)
TRANSM(IBIFN,IBSEQ) ;was the claim ever transmitted?
"RTN","IBCEMSR",190,0)
 ; Does the claim present in 364?
"RTN","IBCEMSR",191,0)
 N RES,IBI
"RTN","IBCEMSR",192,0)
 S RES=0
"RTN","IBCEMSR",193,0)
 S IBI="" F  S IBI=$O(^IBA(364,"B",IBIFN,IBI),-1) Q:IBI=""  D  Q:RES
"RTN","IBCEMSR",194,0)
 . I $P($G(^IBA(364,IBI,0)),U,8)=IBSEQ S RES=1
"RTN","IBCEMSR",195,0)
 Q RES
"RTN","IBCEMSR",196,0)
 ;
"RTN","IBCEMSR1")
0^49^B59770244^B59731831
"RTN","IBCEMSR1",1,0)
IBCEMSR1 ;WOIFO/AAT - MRA STATISTICS REPORT CONT. ;09/03/04
"RTN","IBCEMSR1",2,0)
 ;;2.0;INTEGRATED BILLING;**155,348,349**;21-MAR-94;Build 46
"RTN","IBCEMSR1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEMSR1",4,0)
 ;
"RTN","IBCEMSR1",5,0)
 Q
"RTN","IBCEMSR1",6,0)
 ;
"RTN","IBCEMSR1",7,0)
 ; Report header
"RTN","IBCEMSR1",8,0)
HDR N IBI
"RTN","IBCEMSR1",9,0)
 S IBPAGE=IBPAGE+1
"RTN","IBCEMSR1",10,0)
 W @IOF,"MRA Statistics Report for period covering "_$$DAT(IBBDT)_" thru "_$$DAT(IBEDT),"   ",?100,$$DAT(DT),"   Page ",IBPAGE
"RTN","IBCEMSR1",11,0)
 W ! F IBI=1:1:$S($G(IOM):IOM,1:130) W "-"
"RTN","IBCEMSR1",12,0)
 Q
"RTN","IBCEMSR1",13,0)
 ;
"RTN","IBCEMSR1",14,0)
REPORT N IBDVN,IBCLERK,IBPAGE,IBTU,IBTH
"RTN","IBCEMSR1",15,0)
 S IBPAGE=0
"RTN","IBCEMSR1",16,0)
 D HDR
"RTN","IBCEMSR1",17,0)
 I '$D(@REF) W !,"No data meet the criteria." Q
"RTN","IBCEMSR1",18,0)
 I 'IBSUM S IBDVN="" F  S IBDVN=$O(@REF@(IBDVN)) Q:IBDVN=""  D  Q:IBQ
"RTN","IBCEMSR1",19,0)
 . D CHKP Q:IBQ  W !,"DIVISION: ",IBDVN
"RTN","IBCEMSR1",20,0)
 . S IBCLERK="A" F  S IBCLERK=$O(@REF@(IBDVN,IBCLERK)) Q:IBCLERK=""  D  Q:IBQ
"RTN","IBCEMSR1",21,0)
 . . D DETAILS
"RTN","IBCEMSR1",22,0)
 Q:IBQ
"RTN","IBCEMSR1",23,0)
 ; Summary section
"RTN","IBCEMSR1",24,0)
 D:'IBSUM HDR W !,"SUMMARY"
"RTN","IBCEMSR1",25,0)
 S IBDVN="" F  S IBDVN=$O(@REF@(IBDVN)) Q:IBDVN=""  D  Q:IBQ
"RTN","IBCEMSR1",26,0)
 . D CHKP Q:IBQ  W !,"DIVISION: ",IBDVN
"RTN","IBCEMSR1",27,0)
 . D SUMMARY
"RTN","IBCEMSR1",28,0)
 Q
"RTN","IBCEMSR1",29,0)
 ;
"RTN","IBCEMSR1",30,0)
DETAILS ; Print Details
"RTN","IBCEMSR1",31,0)
 N REFU,REFU,IBTXT,IBNU,IBNH,IBTU,IBTH
"RTN","IBCEMSR1",32,0)
 ;
"RTN","IBCEMSR1",33,0)
 S REFU=$NA(@REF@(IBDVN,IBCLERK,3))
"RTN","IBCEMSR1",34,0)
 S REFH=$NA(@REF@(IBDVN,IBCLERK,2))
"RTN","IBCEMSR1",35,0)
 ;
"RTN","IBCEMSR1",36,0)
 D CHKP Q:IBQ  W !,"CLERK: ",IBCLERK
"RTN","IBCEMSR1",37,0)
 D CHKP Q:IBQ  W !?7,"Primary UB-04 MRA Requests",?67,"Primary CMS-1500 MRA Requests"
"RTN","IBCEMSR1",38,0)
 D CHKP Q:IBQ  W !?7,"--------------------------",?67,"-----------------------------"
"RTN","IBCEMSR1",39,0)
 S IBTXT="Total number of MRA Requests:"
"RTN","IBCEMSR1",40,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(+$G(@REFU@("ALL")),5),?67,IBTXT,?110,$J(+$G(@REFH@("ALL")),5)
"RTN","IBCEMSR1",41,0)
 S IBTXT="Number of unique MRA Requests:",IBTU=+$G(@REFU@("TOT")),IBTH=+$G(@REFH@("TOT"))
"RTN","IBCEMSR1",42,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBTU,5),?67,IBTXT,?110,$J(IBTH,5)
"RTN","IBCEMSR1",43,0)
 S IBTXT="Requests with no response:",IBNU=+$G(@REFU@("NON")),IBNH=+$G(@REFH@("NON"))
"RTN","IBCEMSR1",44,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBNU,5),?67,IBTXT,?110,$J(IBNH,5)
"RTN","IBCEMSR1",45,0)
 S IBTXT="Requests with final rejection:",IBNU=+$G(@REFU@("REJF")),IBNH=+$G(@REFH@("REJF"))
"RTN","IBCEMSR1",46,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBNU,5),?67,IBTXT,?110,$J(IBNH,5)
"RTN","IBCEMSR1",47,0)
 ;
"RTN","IBCEMSR1",48,0)
 S IBTXT="Requests with returned MRA:",IBNU=+$G(@REFU@("MRA")),IBNH=+$G(@REFH@("MRA"))
"RTN","IBCEMSR1",49,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBNU,5),?67,IBTXT,?110,$J(IBNH,5)
"RTN","IBCEMSR1",50,0)
 S IBTXT="Processed MRA:"
"RTN","IBCEMSR1",51,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?35,$J($G(@REFU@("MRA"))-$G(@REFU@("MRAD")),5),?74,IBTXT,?90,$J($G(@REFH@("MRA"))-$G(@REFH@("MRAD")),5)
"RTN","IBCEMSR1",52,0)
 S IBTXT="Denied MRA:"
"RTN","IBCEMSR1",53,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?35,$J(+$G(@REFU@("MRAD")),5),?74,IBTXT,?90,$J(+$G(@REFH@("MRAD")),5)
"RTN","IBCEMSR1",54,0)
 D CHKP Q:IBQ  W !
"RTN","IBCEMSR1",55,0)
 ;
"RTN","IBCEMSR1",56,0)
 D SECONDRY Q:IBQ
"RTN","IBCEMSR1",57,0)
 D CHKP Q:IBQ  W !
"RTN","IBCEMSR1",58,0)
 Q
"RTN","IBCEMSR1",59,0)
 ;
"RTN","IBCEMSR1",60,0)
SUMMARY ;Print summary
"RTN","IBCEMSR1",61,0)
 N REFU,REFH,IBTXT,IBNU,IBNH,IBTU,IBTH
"RTN","IBCEMSR1",62,0)
 ;
"RTN","IBCEMSR1",63,0)
 S REFU=$NA(@REF@(IBDVN,0,3))
"RTN","IBCEMSR1",64,0)
 S REFH=$NA(@REF@(IBDVN,0,2))
"RTN","IBCEMSR1",65,0)
 ;
"RTN","IBCEMSR1",66,0)
 D CHKP Q:IBQ  W !?7,"Primary UB-04 MRA Requests",?67,"Primary CMS-1500 MRA Requests"
"RTN","IBCEMSR1",67,0)
 D CHKP Q:IBQ  W !?7,"--------------------------",?67,"-----------------------------"
"RTN","IBCEMSR1",68,0)
 S IBTXT="Total number of MRA Requests:",IBTU=+$G(@REFU@("ALL")),IBTH=+$G(@REFH@("ALL"))
"RTN","IBCEMSR1",69,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBTU,5),?67,IBTXT,?110,$J(IBTH,5)
"RTN","IBCEMSR1",70,0)
 S IBTXT="Percent Resubmitted:",IBNU=+$G(@REFU@("ALLR")),IBNH=+$G(@REFH@("ALLR"))
"RTN","IBCEMSR1",71,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?50,$$%(IBNU,IBTU),?74,IBTXT,?110,$$%(IBNH,IBTH)
"RTN","IBCEMSR1",72,0)
 S IBTXT="Percent Cancelled/Copied:",IBNU=+$G(@REFU@("ALLC")),IBNH=+$G(@REFH@("ALLC"))
"RTN","IBCEMSR1",73,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?50,$$%(IBNU,IBTU),?74,IBTXT,?110,$$%(IBNH,IBTH)
"RTN","IBCEMSR1",74,0)
 S IBTXT="Number of unique MRA Requests:",IBTU=+$G(@REFU@("TOT")),IBTH=+$G(@REFH@("TOT"))
"RTN","IBCEMSR1",75,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBTU,5),?67,IBTXT,?110,$J(IBTH,5)
"RTN","IBCEMSR1",76,0)
 S IBTXT="Requests with no response:",IBNU=+$G(@REFU@("NON")),IBNH=+$G(@REFH@("NON"))
"RTN","IBCEMSR1",77,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBNU,5),?67,IBTXT,?110,$J(IBNH,5)
"RTN","IBCEMSR1",78,0)
 S IBTXT="Requests with final rejection:",IBNU=+$G(@REFU@("REJF")),IBNH=+$G(@REFH@("REJF"))
"RTN","IBCEMSR1",79,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBNU,5),?67,IBTXT,?110,$J(IBNH,5)
"RTN","IBCEMSR1",80,0)
 S IBTXT="Percent with final rejection:"
"RTN","IBCEMSR1",81,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?50,$$%(IBNU,IBTU),?74,IBTXT,?110,$$%(IBNH,IBTH)
"RTN","IBCEMSR1",82,0)
 S IBTXT="Requests with returned MRA:",IBTU=+$G(@REFU@("MRA")),IBTH=+$G(@REFH@("MRA"))
"RTN","IBCEMSR1",83,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBTU,5),?67,IBTXT,?110,$J(IBTH,5)
"RTN","IBCEMSR1",84,0)
 S IBTXT="Processed MRA:",IBNU=IBTU-$G(@REFU@("MRAD")),IBNH=IBTH-$G(@REFH@("MRAD"))
"RTN","IBCEMSR1",85,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(IBNU,5),?67,IBTXT,?110,$J(IBNH,5)
"RTN","IBCEMSR1",86,0)
 S IBTXT="Denied MRA:"
"RTN","IBCEMSR1",87,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(+$G(@REFU@("MRAD")),5),?67,IBTXT,?110,$J(+$G(@REFH@("MRAD")),5)
"RTN","IBCEMSR1",88,0)
 S IBTXT="Percent Processed MRA:"
"RTN","IBCEMSR1",89,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?50,$$%(IBNU,IBTU),?74,IBTXT,?110,$$%(IBNH,IBTH)
"RTN","IBCEMSR1",90,0)
 D CHKP Q:IBQ  W !
"RTN","IBCEMSR1",91,0)
 ;
"RTN","IBCEMSR1",92,0)
 D SECONDRY Q:IBQ
"RTN","IBCEMSR1",93,0)
 S IBTXT="Percent Unique Req to Secondary:"
"RTN","IBCEMSR1",94,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J($$%(+$G(@REFU@("SEC")),+$G(@REFU@("TOT"))),5),?67,IBTXT,?110,$J($$%(+$G(@REFH@("SEC")),+$G(@REFH@("TOT"))),5)
"RTN","IBCEMSR1",95,0)
 S IBTXT="Percent Auto-Generated:"
"RTN","IBCEMSR1",96,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?50,$J($$%($G(@REFU@("AT"))+$G(@REFU@("AP")),+$G(@REFU@("TOT"))),5),?67,IBTXT,?110,$J($$%($G(@REFH@("AT"))+$G(@REFH@("AP")),+$G(@REFH@("TOT"))),5)
"RTN","IBCEMSR1",97,0)
 S IBTXT="Percent Manually-Processed:"
"RTN","IBCEMSR1",98,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?50,$J($$%($G(@REFU@("MT"))+$G(@REFU@("MP")),+$G(@REFU@("TOT"))),5),?67,IBTXT,?110,$J($$%($G(@REFH@("MT"))+$G(@REFH@("MP")),+$G(@REFH@("TOT"))),5)
"RTN","IBCEMSR1",99,0)
 ;
"RTN","IBCEMSR1",100,0)
 D CHKP Q:IBQ  W !
"RTN","IBCEMSR1",101,0)
 Q
"RTN","IBCEMSR1",102,0)
 ;
"RTN","IBCEMSR1",103,0)
SECONDRY ; Print 2ndary claims info
"RTN","IBCEMSR1",104,0)
 D CHKP Q:IBQ  W !?7,"Secondary UB-04 claims",?67,"Secondary CMS-1500 claims"
"RTN","IBCEMSR1",105,0)
 D CHKP Q:IBQ  W !?7,"----------------------",?67,"-------------------------"
"RTN","IBCEMSR1",106,0)
 S IBTXT="Authorized (not yet printed):"
"RTN","IBCEMSR1",107,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(+$G(@REFU@("AUT")),5),?67,IBTXT,?110,$J(+$G(@REFH@("AUT")),5)
"RTN","IBCEMSR1",108,0)
 ;
"RTN","IBCEMSR1",109,0)
 S IBTXT="Auto-generated to print:"
"RTN","IBCEMSR1",110,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(+$G(@REFU@("AP")),5),?67,IBTXT,?110,$J(+$G(@REFH@("AP")),5)
"RTN","IBCEMSR1",111,0)
 S IBTXT="Total Primary Charges:"
"RTN","IBCEMSR1",112,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("AP1")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("AP1")),10,2)
"RTN","IBCEMSR1",113,0)
 S IBTXT="Unreimb'd Medicare Exp:"
"RTN","IBCEMSR1",114,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("AP2")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("AP2")),10,2)
"RTN","IBCEMSR1",115,0)
 S IBTXT="Total Secondary Charges:"
"RTN","IBCEMSR1",116,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("AP3")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("AP3")),10,2)
"RTN","IBCEMSR1",117,0)
 ;
"RTN","IBCEMSR1",118,0)
 S IBTXT="Auto-generated to transmit:"
"RTN","IBCEMSR1",119,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(+$G(@REFU@("AT")),5),?67,IBTXT,?110,$J(+$G(@REFH@("AT")),5)
"RTN","IBCEMSR1",120,0)
 S IBTXT="Total Primary Charges:"
"RTN","IBCEMSR1",121,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("AT1")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("AT1")),10,2)
"RTN","IBCEMSR1",122,0)
 S IBTXT="Unreimb'd Medicare Exp:"
"RTN","IBCEMSR1",123,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("AT2")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("AT2")),10,2)
"RTN","IBCEMSR1",124,0)
 S IBTXT="Total Secondary Charges:"
"RTN","IBCEMSR1",125,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("AT3")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("AT3")),10,2)
"RTN","IBCEMSR1",126,0)
 ;
"RTN","IBCEMSR1",127,0)
 S IBTXT="Manually processed to print:"
"RTN","IBCEMSR1",128,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(+$G(@REFU@("MP")),5),?67,IBTXT,?110,$J(+$G(@REFH@("MP")),5)
"RTN","IBCEMSR1",129,0)
 S IBTXT="Total Primary Charges:"
"RTN","IBCEMSR1",130,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("MP1")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("MP1")),10,2)
"RTN","IBCEMSR1",131,0)
 S IBTXT="Unreimb'd Medicare Exp:"
"RTN","IBCEMSR1",132,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("MP2")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("MP2")),10,2)
"RTN","IBCEMSR1",133,0)
 S IBTXT="Total Secondary Charges:"
"RTN","IBCEMSR1",134,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("MP3")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("MP3")),10,2)
"RTN","IBCEMSR1",135,0)
 ;
"RTN","IBCEMSR1",136,0)
 S IBTXT="Manually processed to transmit:"
"RTN","IBCEMSR1",137,0)
 D CHKP Q:IBQ  W !?7,IBTXT,?50,$J(+$G(@REFU@("MT")),5),?67,IBTXT,?110,$J(+$G(@REFH@("MT")),5)
"RTN","IBCEMSR1",138,0)
 S IBTXT="Total Primary Charges:"
"RTN","IBCEMSR1",139,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("MT1")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("MT1")),10,2)
"RTN","IBCEMSR1",140,0)
 S IBTXT="Unreimb'd Medicare Exp:"
"RTN","IBCEMSR1",141,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("MT2")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("MT2")),10,2)
"RTN","IBCEMSR1",142,0)
 S IBTXT="Total Secondary Charges:"
"RTN","IBCEMSR1",143,0)
 D CHKP Q:IBQ  W !?14,IBTXT,?45,$J(+$G(@REFU@("MT3")),10,2),?74,IBTXT,?105,$J(+$G(@REFH@("MT3")),10,2)
"RTN","IBCEMSR1",144,0)
 Q
"RTN","IBCEMSR1",145,0)
 ;
"RTN","IBCEMSR1",146,0)
 ;
"RTN","IBCEMSR1",147,0)
%(VALUE,TOTAL) ;Percentage
"RTN","IBCEMSR1",148,0)
 I 'TOTAL Q $J("0%",6)
"RTN","IBCEMSR1",149,0)
 Q $J($J(VALUE*100/TOTAL,3,0)_"%",6)
"RTN","IBCEMSR1",150,0)
 ;
"RTN","IBCEMSR1",151,0)
CHKP ;Check for EOP
"RTN","IBCEMSR1",152,0)
 I $Y>(IOSL-4) D:IBSCR PAUSE Q:IBQ  D HDR
"RTN","IBCEMSR1",153,0)
 Q
"RTN","IBCEMSR1",154,0)
 ;
"RTN","IBCEMSR1",155,0)
PAUSE ;
"RTN","IBCEMSR1",156,0)
 N X U IO(0) W !!,"Press RETURN to continue, '^' to exit:" R X:DTIME S:'$T X="^" S:X["^" IBQ=2
"RTN","IBCEMSR1",157,0)
 U IO
"RTN","IBCEMSR1",158,0)
 Q
"RTN","IBCEMSR1",159,0)
 ;
"RTN","IBCEMSR1",160,0)
PAUSE2 ;
"RTN","IBCEMSR1",161,0)
 N X U IO(0) W !!,"Press RETURN to continue:" R X:DTIME S:'$T X="^" S:X["^" IBQ=2
"RTN","IBCEMSR1",162,0)
 U IO
"RTN","IBCEMSR1",163,0)
 Q
"RTN","IBCEMSR1",164,0)
 ;
"RTN","IBCEMSR1",165,0)
DAT(X) ;Convert FM date to displayable (mm/dd/yy) format.
"RTN","IBCEMSR1",166,0)
 N DATE,YR
"RTN","IBCEMSR1",167,0)
 I $G(X) S YR=$E(X,2,3)
"RTN","IBCEMSR1",168,0)
 I $G(X) S DATE=$S(X:$E(X,4,5)_"/"_$E(X,6,7)_"/"_YR,1:"")
"RTN","IBCEMSR1",169,0)
 Q $G(DATE)
"RTN","IBCEMSR1",170,0)
 ;
"RTN","IBCEMU2")
0^50^B35260966^B34857625
"RTN","IBCEMU2",1,0)
IBCEMU2 ;ALB/DSM - IB MRA Utility ;01-MAY-2003
"RTN","IBCEMU2",2,0)
 ;;2.0;INTEGRATED BILLING;**155,320,349**;21-MAR-94;Build 46
"RTN","IBCEMU2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEMU2",4,0)
 ;
"RTN","IBCEMU2",5,0)
 Q
"RTN","IBCEMU2",6,0)
 ;
"RTN","IBCEMU2",7,0)
QMRA ; This is a background procedure that is spun off of the IB BATCH
"RTN","IBCEMU2",8,0)
 ; Print option. This process scans a queue in ^XTMP("IBMRA"_#,$J) and checks
"RTN","IBCEMU2",9,0)
 ; each Bill to see if a printable MRA exist, if so, prints them. MRA's print
"RTN","IBCEMU2",10,0)
 ; on the device associated with the 'Bill Addendum' Form Type.
"RTN","IBCEMU2",11,0)
 ; This process doesn't interact with users.
"RTN","IBCEMU2",12,0)
 ;
"RTN","IBCEMU2",13,0)
 ; IB*2*320:  MCS - Resubmit by Print produces a scratch global also
"RTN","IBCEMU2",14,0)
 ;            ^XTMP("IBCFP6",$J,.... for MRA's to print here
"RTN","IBCEMU2",15,0)
 ;
"RTN","IBCEMU2",16,0)
 ; Input:
"RTN","IBCEMU2",17,0)
 ;      IBJ   = $J of starting job
"RTN","IBCEMU2",18,0)
 ;      IBFTP = "IBMRA"_# (ien of form type) or "IBCFP6"
"RTN","IBCEMU2",19,0)
 ;
"RTN","IBCEMU2",20,0)
 N IBS1,IBS2,IBS3,IBIFN,IBQ,IBPGN
"RTN","IBCEMU2",21,0)
 S (IBS1,IBIFN,IBQ)=0
"RTN","IBCEMU2",22,0)
 F  S IBS1=$O(^XTMP(IBFTP,IBJ,IBS1)) Q:IBS1=""  D  I IBQ Q
"RTN","IBCEMU2",23,0)
 . S IBS2=0 F  S IBS2=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2)) Q:IBS2=""  D  I IBQ Q
"RTN","IBCEMU2",24,0)
 . . S IBS3=0 F  S IBS3=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2,IBS3)) Q:IBS3=""  D  I IBQ Q
"RTN","IBCEMU2",25,0)
 . . . S IBIFN=0 F  S IBIFN=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2,IBS3,IBIFN)) Q:IBIFN=""  D  I $$STOP S IBQ=1 Q
"RTN","IBCEMU2",26,0)
 . . . . I $$MRAEXIST^IBCEMU1(IBIFN) D PROC^IBCEMRAA W @IOF ;must have IBIFN set
"RTN","IBCEMU2",27,0)
 K ^XTMP(IBFTP,IBJ) S ZTREQ="@"
"RTN","IBCEMU2",28,0)
 Q  ;QMRA
"RTN","IBCEMU2",29,0)
 ;
"RTN","IBCEMU2",30,0)
STOP() ;determine if user has requested the queued report to stop
"RTN","IBCEMU2",31,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !,"***TASK STOPPED BY USER***"
"RTN","IBCEMU2",32,0)
 Q +$G(ZTSTOP)
"RTN","IBCEMU2",33,0)
 ;
"RTN","IBCEMU2",34,0)
 ;
"RTN","IBCEMU2",35,0)
STAT(IBIFN,STATUS,MRAONLY) ; Update the review status in the EOB file
"RTN","IBCEMU2",36,0)
 ; This procedure updates field .16 in file 361.1 for all EOB's for
"RTN","IBCEMU2",37,0)
 ; the given bill#
"RTN","IBCEMU2",38,0)
 ; 
"RTN","IBCEMU2",39,0)
 ;   IBIFN   - Internal Bill# (required)
"RTN","IBCEMU2",40,0)
 ;   STATUS  - Internal Value of the Review Status field (required)
"RTN","IBCEMU2",41,0)
 ;   MRAONLY - Optional Flag with a default of 0 if not passed in
"RTN","IBCEMU2",42,0)
 ;             1:only update MRA EOB's for this bill
"RTN","IBCEMU2",43,0)
 ;             0:update all EOB's for this bill
"RTN","IBCEMU2",44,0)
 ;
"RTN","IBCEMU2",45,0)
 NEW RESULT,IBEOB,IBM
"RTN","IBCEMU2",46,0)
 NEW DIE,DA,DR,D,D0,DI,DIC,DICR,DIG,DIH,DISYS,DIU,DIV,DIW,DQ,DIERR,X,Y
"RTN","IBCEMU2",47,0)
 S IBIFN=+$G(IBIFN),STATUS=$G(STATUS)
"RTN","IBCEMU2",48,0)
 S MRAONLY=$G(MRAONLY,0)
"RTN","IBCEMU2",49,0)
 ;
"RTN","IBCEMU2",50,0)
 I '$D(^IBM(361.1,"B",IBIFN)) G STATX    ; no EOB's for this bill
"RTN","IBCEMU2",51,0)
 D CHK^DIE(361.1,.16,,STATUS,.RESULT)
"RTN","IBCEMU2",52,0)
 I RESULT="^" G STATX                    ; invalid status passed in
"RTN","IBCEMU2",53,0)
 ;
"RTN","IBCEMU2",54,0)
 S IBEOB=0        ; loop thru all EOB's for the bill
"RTN","IBCEMU2",55,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D
"RTN","IBCEMU2",56,0)
 . S IBM=$G(^IBM(361.1,IBEOB,0))
"RTN","IBCEMU2",57,0)
 . I $P(IBM,U,16)=STATUS Q           ; no change
"RTN","IBCEMU2",58,0)
 . I MRAONLY,'$P(IBM,U,4) Q          ; skip because of parameter
"RTN","IBCEMU2",59,0)
 . S DIE=361.1,DA=IBEOB,DR=".16////"_STATUS D ^DIE
"RTN","IBCEMU2",60,0)
 . Q
"RTN","IBCEMU2",61,0)
 ;
"RTN","IBCEMU2",62,0)
STATX ;
"RTN","IBCEMU2",63,0)
 Q
"RTN","IBCEMU2",64,0)
 ;
"RTN","IBCEMU2",65,0)
MRAWL(IBIFN) ; Do any MRA EOB's for this bill appear on the worklist?
"RTN","IBCEMU2",66,0)
 ;
"RTN","IBCEMU2",67,0)
 ; This function returns 1 if at least one MRA EOB for the given bill
"RTN","IBCEMU2",68,0)
 ; appears on the MRA management worklist.  Otherwise, this function
"RTN","IBCEMU2",69,0)
 ; returns 0.
"RTN","IBCEMU2",70,0)
 ;
"RTN","IBCEMU2",71,0)
 NEW OK,IBEOB
"RTN","IBCEMU2",72,0)
 S OK=0,IBIFN=+$G(IBIFN)
"RTN","IBCEMU2",73,0)
 I '$D(^IBM(361.1,"B",IBIFN)) G MRAWLX     ; no EOB's for this bill
"RTN","IBCEMU2",74,0)
 S IBEOB=0        ; loop thru all EOB's for the bill
"RTN","IBCEMU2",75,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D  Q:OK
"RTN","IBCEMU2",76,0)
 . I $$ELIG^IBCECOB1(IBEOB) S OK=1
"RTN","IBCEMU2",77,0)
 . Q
"RTN","IBCEMU2",78,0)
MRAWLX ;
"RTN","IBCEMU2",79,0)
 Q OK
"RTN","IBCEMU2",80,0)
 ;
"RTN","IBCEMU2",81,0)
TXSTS(IBIFN,IB364,REJFLG,IBZ) ; Claim transmission status information
"RTN","IBCEMU2",82,0)
 ; Input   IBIFN - required
"RTN","IBCEMU2",83,0)
 ;         IB364 - optional (defaults to most recent transmission#)
"RTN","IBCEMU2",84,0)
 ; Output  REJFLG (pass by reference) - 1/0 flag if any rejection status
"RTN","IBCEMU2",85,0)
 ;                                      messages on file
"RTN","IBCEMU2",86,0)
 ;         IBZ (pass by reference) - array of information
"RTN","IBCEMU2",87,0)
 ;
"RTN","IBCEMU2",88,0)
 NEW IEN,SMCNT,SEV,BCH,BCHD0,BCHD1
"RTN","IBCEMU2",89,0)
 S REJFLG=0 K IBZ
"RTN","IBCEMU2",90,0)
 S IBIFN=+$G(IBIFN) I 'IBIFN G TXSTSX
"RTN","IBCEMU2",91,0)
 S IB364=+$G(IB364)
"RTN","IBCEMU2",92,0)
 I 'IB364 S IB364=$$LAST364^IBCEF4(IBIFN) I 'IB364 G TXSTSX
"RTN","IBCEMU2",93,0)
 I $P($G(^IBA(364,IB364,0)),U,1)'=IBIFN G TXSTSX
"RTN","IBCEMU2",94,0)
 S IEN=0,SMCNT=0
"RTN","IBCEMU2",95,0)
 F  S IEN=$O(^IBM(361,"AERR",IB364,IEN)) Q:'IEN  D
"RTN","IBCEMU2",96,0)
 . S SMCNT=SMCNT+1
"RTN","IBCEMU2",97,0)
 . S SEV=$P($G(^IBM(361,IEN,0)),U,3)   ; status message severity
"RTN","IBCEMU2",98,0)
 . I SEV="R" S REJFLG=1
"RTN","IBCEMU2",99,0)
 . Q
"RTN","IBCEMU2",100,0)
 S BCH=+$P($G(^IBA(364,IB364,0)),U,2)  ; batch ien
"RTN","IBCEMU2",101,0)
 S BCHD0=$G(^IBA(364.1,BCH,0))
"RTN","IBCEMU2",102,0)
 S BCHD1=$G(^IBA(364.1,BCH,1))
"RTN","IBCEMU2",103,0)
 S IBZ("DATE LAST SENT")=$P(BCHD1,U,3)
"RTN","IBCEMU2",104,0)
 S IBZ("NUMBER OF STATUS MESSAGES")=SMCNT
"RTN","IBCEMU2",105,0)
 S IBZ("BATCH NUMBER")=$P(BCHD0,U,1)
"RTN","IBCEMU2",106,0)
 S IBZ("TRANSMISSION STATUS")=$P($G(^IBA(364,IB364,0)),U,3)
"RTN","IBCEMU2",107,0)
TXSTSX ;
"RTN","IBCEMU2",108,0)
 Q
"RTN","IBCEMU2",109,0)
 ;
"RTN","IBCEMU2",110,0)
MRACALC(IBEOB,IBIFN,AR,PRCASV) ; Calculates Two Amounts:
"RTN","IBCEMU2",111,0)
 ;  Unreimbursable Medicare Expense and Medicare Contract Adjustment
"RTN","IBCEMU2",112,0)
 ;  Amount for a given EOB.
"RTN","IBCEMU2",113,0)
 ;
"RTN","IBCEMU2",114,0)
 ; Input   IBIFN= ien of Claim file 399 - Required
"RTN","IBCEMU2",115,0)
 ;         IBEOB= ien of EOB file 361.1 - Required
"RTN","IBCEMU2",116,0)
 ;         AR=    Flag indicating this was called from AR function
"RTN","IBCEMU2",117,0)
 ; Input/Output  PRCASV= array with the two calculated values
"RTN","IBCEMU2",118,0)
 ;         PRCASV("MEDURE")=Unreimbursable Medicare Expense
"RTN","IBCEMU2",119,0)
 ;         PRCASV("MEDCA")=Medicare Contract Adjustment Amount
"RTN","IBCEMU2",120,0)
 ;
"RTN","IBCEMU2",121,0)
 ; For multiple EOB's, add up the calculated values across EOB's
"RTN","IBCEMU2",122,0)
 ;
"RTN","IBCEMU2",123,0)
 N I,LNLVL,EOBADJ,IBCOBN,INPAT,FRMTYP
"RTN","IBCEMU2",124,0)
 ;
"RTN","IBCEMU2",125,0)
 S FRMTYP=$$FT^IBCEF(IBIFN)       ;Form Type 2=1500; 3=UB
"RTN","IBCEMU2",126,0)
 S INPAT=$$INPAT^IBCEF(IBIFN)     ;Inpat/Outpat Flag
"RTN","IBCEMU2",127,0)
 S AR=$G(AR,0)    ;initialize AR flag
"RTN","IBCEMU2",128,0)
 F I=0,1,2 S IBEOB(I)=$G(^IBM(361.1,IBEOB,I))
"RTN","IBCEMU2",129,0)
 I $P(IBEOB(0),U,4)'=1 Q  ;make sure it's an MRA
"RTN","IBCEMU2",130,0)
 S IBCOBN=$$COBN^IBCEF(IBIFN) ;get current bill sequence
"RTN","IBCEMU2",131,0)
 ; Make sure we're on the right insurance sequence when AR flag is on
"RTN","IBCEMU2",132,0)
 I AR I $P(IBEOB(0),U,15)'=(IBCOBN-1) Q
"RTN","IBCEMU2",133,0)
 ;
"RTN","IBCEMU2",134,0)
 ; Unreimburseable Medicare Expense (same calc regardless of form type)
"RTN","IBCEMU2",135,0)
 ; For multiple EOB's, add up the amounts across EOB's
"RTN","IBCEMU2",136,0)
 S PRCASV("MEDURE")=$G(PRCASV("MEDURE"))+IBEOB(1)
"RTN","IBCEMU2",137,0)
 ;
"RTN","IBCEMU2",138,0)
 ; Handle CMS-1500 Form Type Next:
"RTN","IBCEMU2",139,0)
 I FRMTYP=2 D MEDCARE(IBEOB,.PRCASV) Q
"RTN","IBCEMU2",140,0)
 ;
"RTN","IBCEMU2",141,0)
 ; Handle UB Form Type Next:
"RTN","IBCEMU2",142,0)
 ; If Inpatient Calculate from Claim level data
"RTN","IBCEMU2",143,0)
 I INPAT D  Q  ;
"RTN","IBCEMU2",144,0)
 . K EOBADJ M EOBADJ=^IBM(361.1,IBEOB,10)
"RTN","IBCEMU2",145,0)
 . S PRCASV("MEDCA")=$G(PRCASV("MEDCA"))+$$CALCMCA(.EOBADJ)
"RTN","IBCEMU2",146,0)
 ;
"RTN","IBCEMU2",147,0)
 ; If Outpatient Calculate from Service Line level data
"RTN","IBCEMU2",148,0)
 D MEDCARE(IBEOB,.PRCASV)
"RTN","IBCEMU2",149,0)
 Q  ;MRACALC
"RTN","IBCEMU2",150,0)
 ;
"RTN","IBCEMU2",151,0)
MEDCARE(IBEOB,PRCASV) ; If Outpatient Calculate from Service Line level data
"RTN","IBCEMU2",152,0)
 N LNLVL,EOBADJ
"RTN","IBCEMU2",153,0)
 S LNLVL=0
"RTN","IBCEMU2",154,0)
 F  S LNLVL=$O(^IBM(361.1,IBEOB,15,LNLVL)) Q:'LNLVL  D  ;
"RTN","IBCEMU2",155,0)
 . K EOBADJ
"RTN","IBCEMU2",156,0)
 . M EOBADJ=^IBM(361.1,IBEOB,15,LNLVL,1)
"RTN","IBCEMU2",157,0)
 . ; Total up the Medicare Contract Adjustment across ALL Service Lines
"RTN","IBCEMU2",158,0)
 . S PRCASV("MEDCA")=$G(PRCASV("MEDCA"))+$$CALCMCA(.EOBADJ)
"RTN","IBCEMU2",159,0)
 Q  ;MEDCARE
"RTN","IBCEMU2",160,0)
 ;
"RTN","IBCEMU2",161,0)
CALCMCA(EOBADJ) ; FUNCTION - Calculate Medicare Contract Adjustment
"RTN","IBCEMU2",162,0)
 ; Sums up Amounts on ALL Reason Codes under ALL Group Codes = 'CO' and
"RTN","IBCEMU2",163,0)
 ; returns that value (which is Medicare Contract Adjustment).
"RTN","IBCEMU2",164,0)
 ;
"RTN","IBCEMU2",165,0)
 ; Input  EOBADJ = Array of Group Codes & Reason Codes from either the Claim 
"RTN","IBCEMU2",166,0)
 ;                 Level (10) or Service Line Level (15) of EOB file (#361.1)
"RTN","IBCEMU2",167,0)
 ; Output  returns Medicare Contract Adjustment
"RTN","IBCEMU2",168,0)
 ;
"RTN","IBCEMU2",169,0)
 N GRPLVL,RSNLVL,RSNAMT,MCA
"RTN","IBCEMU2",170,0)
 S (GRPLVL,MCA)=0
"RTN","IBCEMU2",171,0)
 F  S GRPLVL=$O(EOBADJ(GRPLVL)) Q:'GRPLVL  D  ;
"RTN","IBCEMU2",172,0)
 . I $P($G(EOBADJ(GRPLVL,0)),U)'="CO" Q
"RTN","IBCEMU2",173,0)
 . S RSNLVL=0
"RTN","IBCEMU2",174,0)
 . F  S RSNLVL=$O(EOBADJ(GRPLVL,1,RSNLVL)) Q:'RSNLVL  D  ;
"RTN","IBCEMU2",175,0)
 . . S RSNAMT=$P($G(EOBADJ(GRPLVL,1,RSNLVL,0)),U,2)
"RTN","IBCEMU2",176,0)
 . . S MCA=MCA+RSNAMT
"RTN","IBCEMU2",177,0)
 Q MCA  ;CALCMCA
"RTN","IBCEMU2",178,0)
 ;
"RTN","IBCEMU2",179,0)
ALLOWED(IBEOB) ; Returns Total Allowed Amount by summing up all Allowed Amounts 
"RTN","IBCEMU2",180,0)
 ; from Line Level Adjustment
"RTN","IBCEMU2",181,0)
 ; Input: IBEOB = ien of EOB file (361.1)
"RTN","IBCEMU2",182,0)
 ; 
"RTN","IBCEMU2",183,0)
 N LNLVL,LNLVLD,ALWD,TOTALWD
"RTN","IBCEMU2",184,0)
 S (LNLVL,TOTALWD)=0
"RTN","IBCEMU2",185,0)
 F  S LNLVL=$O(^IBM(361.1,IBEOB,15,LNLVL)) Q:'LNLVL  S LNLVLD=^(LNLVL,0) D
"RTN","IBCEMU2",186,0)
 . S ALWD=$P(LNLVLD,U,13),TOTALWD=TOTALWD+ALWD   ; Allowed Amount
"RTN","IBCEMU2",187,0)
 Q TOTALWD  ;ALLOWED
"RTN","IBCEMU2",188,0)
 ;
"RTN","IBCEMU2",189,0)
MRATYPE(BILL,ARDATE) ; Function - determines the MRA Receivable Type for a Third
"RTN","IBCEMU2",190,0)
 ; Party Receivable. This is accomplished by comparing DATE MRA FIRST ACTIVATED
"RTN","IBCEMU2",191,0)
 ; with AR Activation Date for the Bill.
"RTN","IBCEMU2",192,0)
 ; 
"RTN","IBCEMU2",193,0)
 ; Input     BILL= ien of a given Bill Number (Required)
"RTN","IBCEMU2",194,0)
 ;         ARDATE= Date Account Receivable was Activated - date only  (Required)
"RTN","IBCEMU2",195,0)
 ;
"RTN","IBCEMU2",196,0)
 ; Output - Possible Types:
"RTN","IBCEMU2",197,0)
 ;          1 = Pre-MRA implementation
"RTN","IBCEMU2",198,0)
 ;          2 = Post MRA Medicare Receivable
"RTN","IBCEMU2",199,0)
 ;          3 = Post MRA non-Medicare Receivable
"RTN","IBCEMU2",200,0)
 ;
"RTN","IBCEMU2",201,0)
 N MRADTACT,MRAMT
"RTN","IBCEMU2",202,0)
 I '$G(ARDATE)!'$G(BILL) Q 1
"RTN","IBCEMU2",203,0)
 ;
"RTN","IBCEMU2",204,0)
 ; get DATE MRA FIRST ACTIVATED at site
"RTN","IBCEMU2",205,0)
 S MRADTACT=$$MRADTACT()
"RTN","IBCEMU2",206,0)
 ;
"RTN","IBCEMU2",207,0)
 ; MRA not Activated at site
"RTN","IBCEMU2",208,0)
 I MRADTACT="" Q 1 ;MRATYPE
"RTN","IBCEMU2",209,0)
 ; 
"RTN","IBCEMU2",210,0)
 ; Bill from pre-MRA implementation era
"RTN","IBCEMU2",211,0)
 I ARDATE<MRADTACT Q 1 ;MRATYPE
"RTN","IBCEMU2",212,0)
 ;
"RTN","IBCEMU2",213,0)
 ; Post-MRA Medicare bill; get Medicare amounts
"RTN","IBCEMU2",214,0)
 S MRAMT=$G(^PRCA(430,BILL,13))
"RTN","IBCEMU2",215,0)
 ; check Medicare Contractual Adjustment Amount
"RTN","IBCEMU2",216,0)
 I $P(MRAMT,U,1) Q 2 ;MRATYPE
"RTN","IBCEMU2",217,0)
 ; check Medicare Unreimburseable Amout
"RTN","IBCEMU2",218,0)
 I $P(MRAMT,U,2) Q 2 ;MRATYPE
"RTN","IBCEMU2",219,0)
 ; check if bill is a Medicare one
"RTN","IBCEMU2",220,0)
 I $$MRAEXIST^IBCEMU1(BILL) Q 2 ;MRATYPE
"RTN","IBCEMU2",221,0)
 ; check if bill is a Medicare Supplemental one
"RTN","IBCEMU2",222,0)
 I $P($$CRIT^IBRFN2(BILL),U)=2 Q 2 ;MRATYPE
"RTN","IBCEMU2",223,0)
 ;
"RTN","IBCEMU2",224,0)
 ; all others are Post-MRA non-Medicare bills
"RTN","IBCEMU2",225,0)
 Q 3 ;MRATYPE
"RTN","IBCEMU2",226,0)
 ;
"RTN","IBCEMU2",227,0)
MRADTACT() ; Function - returns DATE MRA FIRST ACTIVATED at site
"RTN","IBCEMU2",228,0)
 Q $P($G(^IBE(350.9,1,8)),U,13)
"RTN","IBCEMU2",229,0)
 ;
"RTN","IBCEOB00")
0^51^B60829108^B60220072
"RTN","IBCEOB00",1,0)
IBCEOB00 ;ALB/ESG - 835 EDI EOB MSG PROCESSING CONT ;30-JUN-2003
"RTN","IBCEOB00",2,0)
 ;;2.0;INTEGRATED BILLING;**155,349**;21-MAR-94;Build 46
"RTN","IBCEOB00",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEOB00",4,0)
 Q
"RTN","IBCEOB00",5,0)
 ;
"RTN","IBCEOB00",6,0)
RCRU(IBZDATA,IB0,IBLN) ; Revenue Code Roll-up procedure check -
"RTN","IBCEOB00",7,0)
 ; Total up outbound line items by revenue code and compare with
"RTN","IBCEOB00",8,0)
 ; incoming EOB 40 record to see if it has been rolled up
"RTN","IBCEOB00",9,0)
 ;
"RTN","IBCEOB00",10,0)
 ; IBZDATA - UB output formatter array, passed by reference
"RTN","IBCEOB00",11,0)
 ; IB0     - 40 record data
"RTN","IBCEOB00",12,0)
 ; IBLN    - output parameter, passed by reference
"RTN","IBCEOB00",13,0)
 ;
"RTN","IBCEOB00",14,0)
 NEW Z,LN,REV,UN,CH,RUD,RUD2,UCH,MRAUCH
"RTN","IBCEOB00",15,0)
 I $P(IB0,U,4)="" G RCRUX
"RTN","IBCEOB00",16,0)
 S IBLN="",Z=0
"RTN","IBCEOB00",17,0)
 F  S Z=$O(IBZDATA(Z)) Q:'Z  S LN=IBZDATA(Z) D
"RTN","IBCEOB00",18,0)
 . S REV=$P(LN,U,1),UN=$P(LN,U,4),CH=$P(LN,U,5),UCH=+$P(LN,U,3)
"RTN","IBCEOB00",19,0)
 . I REV="" Q
"RTN","IBCEOB00",20,0)
 . ;
"RTN","IBCEOB00",21,0)
 . S RUD=$G(RUD(REV))                 ; roll up data array for rev code
"RTN","IBCEOB00",22,0)
 . S $P(RUD,U,1)=$P(RUD,U,1)+CH       ; total charges
"RTN","IBCEOB00",23,0)
 . S $P(RUD,U,2)=$P(RUD,U,2)+UN       ; total units
"RTN","IBCEOB00",24,0)
 . S $P(RUD,U,3)=$P(RUD,U,3)+1        ; total line items
"RTN","IBCEOB00",25,0)
 . S RUD(REV)=RUD
"RTN","IBCEOB00",26,0)
 . S RUD(REV,Z)=""
"RTN","IBCEOB00",27,0)
 . ;
"RTN","IBCEOB00",28,0)
 . S RUD2=$G(RUD2(REV,UCH))           ; roll up data array for rev code
"RTN","IBCEOB00",29,0)
 . S $P(RUD2,U,1)=$P(RUD2,U,1)+CH     ; total charges
"RTN","IBCEOB00",30,0)
 . S $P(RUD2,U,2)=$P(RUD2,U,2)+UN     ; total units
"RTN","IBCEOB00",31,0)
 . S $P(RUD2,U,3)=$P(RUD2,U,3)+1      ; total line items
"RTN","IBCEOB00",32,0)
 . S RUD2(REV,UCH)=RUD2
"RTN","IBCEOB00",33,0)
 . S RUD2(REV,UCH,Z)=""
"RTN","IBCEOB00",34,0)
 . ;
"RTN","IBCEOB00",35,0)
 . Q
"RTN","IBCEOB00",36,0)
 ;
"RTN","IBCEOB00",37,0)
 I '$D(RUD),'$D(RUD2) G RCRUX
"RTN","IBCEOB00",38,0)
 ;
"RTN","IBCEOB00",39,0)
 ; delete the revenue code roll-up, if only 1 line item.
"RTN","IBCEOB00",40,0)
 S REV=""     ; this is not a roll up situation
"RTN","IBCEOB00",41,0)
 F  S REV=$O(RUD(REV)) Q:REV=""  I $P(RUD(REV),U,3)=1 KILL RUD(REV)
"RTN","IBCEOB00",42,0)
 ;
"RTN","IBCEOB00",43,0)
 S (REV,UCH)=""
"RTN","IBCEOB00",44,0)
 F  S REV=$O(RUD2(REV)) Q:REV=""  F  S UCH=$O(RUD2(REV,UCH)) Q:UCH=""  I $P(RUD2(REV,UCH),U,3)=1 KILL RUD2(REV,UCH)
"RTN","IBCEOB00",45,0)
 ;
"RTN","IBCEOB00",46,0)
 I '$D(RUD),'$D(RUD2) G RCRUX
"RTN","IBCEOB00",47,0)
 ;
"RTN","IBCEOB00",48,0)
 S RUD=$G(RUD($P(IB0,U,4)))      ; compare with 40 record data
"RTN","IBCEOB00",49,0)
 I RUD="" G RCRU2                ; make sure it exists
"RTN","IBCEOB00",50,0)
 I $P(RUD,U,1)'=+$$DOLLAR^IBCEOB($P(IB0,U,15)) G RCRU2    ; charges
"RTN","IBCEOB00",51,0)
 I $P(RUD,U,2)'=$P(IB0,U,16) G RCRU2                      ; units
"RTN","IBCEOB00",52,0)
 S IBLN=$O(RUD($P(IB0,U,4),""))  ; use the first line# found
"RTN","IBCEOB00",53,0)
 G RCRUX
"RTN","IBCEOB00",54,0)
 ;
"RTN","IBCEOB00",55,0)
RCRU2 ; check roll-up data by rev code and unit charge
"RTN","IBCEOB00",56,0)
 S MRAUCH=0
"RTN","IBCEOB00",57,0)
 I $P(IB0,U,16) S MRAUCH=+$$DOLLAR^IBCEOB($P(IB0,U,15))/$P(IB0,U,16)
"RTN","IBCEOB00",58,0)
 S RUD2=$G(RUD2($P(IB0,U,4),MRAUCH))     ; compare with 40 record data
"RTN","IBCEOB00",59,0)
 I RUD2="" G RCRUX                       ; make sure it exists
"RTN","IBCEOB00",60,0)
 I $P(RUD2,U,1)'=+$$DOLLAR^IBCEOB($P(IB0,U,15)) G RCRUX   ; charges
"RTN","IBCEOB00",61,0)
 I $P(RUD2,U,2)'=$P(IB0,U,16) G RCRUX                     ; units
"RTN","IBCEOB00",62,0)
 S IBLN=$O(RUD2($P(IB0,U,4),MRAUCH,""))  ; use the first line# found
"RTN","IBCEOB00",63,0)
 ;
"RTN","IBCEOB00",64,0)
RCRUX ;
"RTN","IBCEOB00",65,0)
 Q
"RTN","IBCEOB00",66,0)
 ;
"RTN","IBCEOB00",67,0)
ICN(IBEOB,ICN,COBN,IBOK) ; File the 835 ICN into the Bill
"RTN","IBCEOB00",68,0)
 ;
"RTN","IBCEOB00",69,0)
 ; Input parameters
"RTN","IBCEOB00",70,0)
 ;   IBEOB - ien to file 361.1
"RTN","IBCEOB00",71,0)
 ;   ICN   - the ICN# from the 835 transmission
"RTN","IBCEOB00",72,0)
 ;   COBN  - the insurance sequence#
"RTN","IBCEOB00",73,0)
 ;
"RTN","IBCEOB00",74,0)
 ; Output parameter
"RTN","IBCEOB00",75,0)
 ;   IBOK  - returns as 0 if we get a filing error here
"RTN","IBCEOB00",76,0)
 ;
"RTN","IBCEOB00",77,0)
 ; The field in file 399 depends on the current payer sequence
"RTN","IBCEOB00",78,0)
 ;     399,453 - primary ICN
"RTN","IBCEOB00",79,0)
 ;     399,454 - secondary ICN
"RTN","IBCEOB00",80,0)
 ;     399,455 - tertiary ICN
"RTN","IBCEOB00",81,0)
 ;
"RTN","IBCEOB00",82,0)
 NEW IBIFN,FIELD,D,D0,DA,DI,DIC,DIE,DQ,DR,X,Y
"RTN","IBCEOB00",83,0)
 S IBEOB=+$G(IBEOB),COBN=+$G(COBN)
"RTN","IBCEOB00",84,0)
 I 'IBEOB!'COBN G ICNX
"RTN","IBCEOB00",85,0)
 S IBIFN=+$P($G(^IBM(361.1,IBEOB,0)),U,1)
"RTN","IBCEOB00",86,0)
 I '$D(^DGCR(399,IBIFN)) G ICNX
"RTN","IBCEOB00",87,0)
 I $G(ICN)="" G ICNX
"RTN","IBCEOB00",88,0)
 I '$F(".1.2.3.","."_COBN_".") G ICNX
"RTN","IBCEOB00",89,0)
 ;
"RTN","IBCEOB00",90,0)
 S FIELD=452+COBN
"RTN","IBCEOB00",91,0)
 S DIE=399,DA=IBIFN,DR=FIELD_"////"_ICN D ^DIE
"RTN","IBCEOB00",92,0)
 S IBOK=($D(Y)=0)
"RTN","IBCEOB00",93,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Error in filing the ICN into the Bill/Claims file"
"RTN","IBCEOB00",94,0)
ICNX ;
"RTN","IBCEOB00",95,0)
 Q
"RTN","IBCEOB00",96,0)
 ;
"RTN","IBCEOB00",97,0)
35(IB0,IBEGBL,IBEOB) ; Record '35'
"RTN","IBCEOB00",98,0)
 ;
"RTN","IBCEOB00",99,0)
 N A,IBOK
"RTN","IBCEOB00",100,0)
 ;
"RTN","IBCEOB00",101,0)
 S A="3;4.12;1;0;0^4;4.13;1;0;0^5;4.14;0;1;1^6;4.15;1;0;0^7;4.16;1;0;0^8;4.17;1;0;0^9;4.18;1;0;0^10;4.04;1;0;0^11;3.01;0;1;1^12;3.02;1;0;0^13;3.08;1;0;0^14;3.09;1;0;0"
"RTN","IBCEOB00",102,0)
 ;
"RTN","IBCEOB00",103,0)
 S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB)
"RTN","IBCEOB00",104,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad MEDICARE Inpt Adjudication data"
"RTN","IBCEOB00",105,0)
Q35 Q $G(IBOK)
"RTN","IBCEOB00",106,0)
 ;
"RTN","IBCEOB00",107,0)
37(IB0,IBEGBL,IBEOB) ; Record '37'
"RTN","IBCEOB00",108,0)
 ;
"RTN","IBCEOB00",109,0)
 N IBOK,IBCT
"RTN","IBCEOB00",110,0)
 S IBCT=$G(^TMP($J,37))+1
"RTN","IBCEOB00",111,0)
 I IBCT>5 S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Too many Medicare Claim Level Adjudication Remarks" G Q37    ; Max 5 allowed
"RTN","IBCEOB00",112,0)
 S A="4;"_$S($P(IB0,U,3)="O":"3.0"_(IBCT+2),1:"5.0"_IBCT)_";0;0;0^5;5.0"_IBCT_"1;0;0;0"
"RTN","IBCEOB00",113,0)
 S IBOK=$$STORE^IBCEOB1(A,IB0,IBEOB)
"RTN","IBCEOB00",114,0)
 I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad Medicare Claim Level Adjudication Remarks data"
"RTN","IBCEOB00",115,0)
 ;
"RTN","IBCEOB00",116,0)
 ; 4/22/03 - esg - If claim level remark code MA15 is reported, then
"RTN","IBCEOB00",117,0)
 ;         this is a split EOB and we need to change the REVIEW STATUS
"RTN","IBCEOB00",118,0)
 ;         of this EOB to be ACCEPTED-INTERIM EOB.
"RTN","IBCEOB00",119,0)
 ;
"RTN","IBCEOB00",120,0)
 I $P(IB0,U,4)["MA15" D
"RTN","IBCEOB00",121,0)
 . N DA,DIE,DR,DIC
"RTN","IBCEOB00",122,0)
 . S DA=IBEOB,DIE=361.1,DR=".16////2" D ^DIE S IBOK=($D(Y)=0)
"RTN","IBCEOB00",123,0)
 . I 'IBOK S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Split EOB, but review status was not updated correctly"
"RTN","IBCEOB00",124,0)
 . Q
"RTN","IBCEOB00",125,0)
 ;
"RTN","IBCEOB00",126,0)
Q37 S ^TMP($J,37)=$G(^TMP($J,37))+1 ; Saves the # of entries for 37 records
"RTN","IBCEOB00",127,0)
 Q $G(IBOK)
"RTN","IBCEOB00",128,0)
 ;
"RTN","IBCEOB00",129,0)
 ;
"RTN","IBCEOB00",130,0)
DET40(IB0,ARRAY) ; Format important details of record 40 for error
"RTN","IBCEOB00",131,0)
 ; IB0 = data on 40 record (some pieces pre-formatted)
"RTN","IBCEOB00",132,0)
 ;  ARRAY(n)=formatted line is returned if passed by ref
"RTN","IBCEOB00",133,0)
 N Q
"RTN","IBCEOB00",134,0)
 S ARRAY(1)="Payer reported the following was billed to them:"
"RTN","IBCEOB00",135,0)
 S ARRAY(2)=" "_$S($P(IB0,U,21)="NU":"Rev Cd",1:"Proc")_": "_$S($P(IB0,U,10)'="":$P(IB0,U,10),1:"Same as adjudicated")_"  Chg: "_$J($P(IB0,U,15)/100,"",2)_"  Units: "_$S($P(IB0,U,16):$P(IB0,U,16),1:1)
"RTN","IBCEOB00",136,0)
 S ARRAY(3)="  Svc Date(s): "_$S($P(IB0,U,19)'="":$$FDT($P(IB0,U,19)),1:"??")_$S($P(IB0,U,20)'="":"-"_$$FDT($P(IB0,U,20)),1:"")
"RTN","IBCEOB00",137,0)
 I $P(IB0,U,11)'="" S ARRAY(3)=ARRAY(3)_"  Mods: " F Q=11:1:14 I $P(IB0,U,Q)'="" S ARRAY(3)=ARRAY(3)_$P(IB0,U,Q)_$S(Q=14:"",$P(IB0,U,Q+1)'="":",",1:"")
"RTN","IBCEOB00",138,0)
 S ARRAY(4)="Payer reported adjudication on:"
"RTN","IBCEOB00",139,0)
 S ARRAY(5)=" "_$S($P(IB0,U,21)="NU":"Rev Cd",1:"Proc")_": "_$S($P(IB0,U,3)'="":$P(IB0,U,3),1:$P(IB0,U,4))
"RTN","IBCEOB00",140,0)
 S ARRAY(5)=ARRAY(5)_"  Type: "_$P(IB0,U,21)_$S($P(IB0,U,21)'="NU":"  Rev Cd: "_$P(IB0,U,4),1:"")_"  Units: "_$S($P(IB0,U,18):$P(IB0,U,18)/100,1:1)_"  Amt: "_$J($P(IB0,U,17)/100,"",2)
"RTN","IBCEOB00",141,0)
 I $P(IB0,U,5)'="" S ARRAY(5)=ARRAY(5)_"  Mods: " F Q=5:1:8 I $P(IB0,U,Q)'="" S ARRAY(5)=ARRAY(5)_$P(IB0,U,Q)_$S(Q=8:"",$P(IB0,U,Q+1)'="":",",1:"")
"RTN","IBCEOB00",142,0)
 Q
"RTN","IBCEOB00",143,0)
 ;
"RTN","IBCEOB00",144,0)
DET4X(RECID,IB0,ARRAY) ; Format important details of record 41-45 for error
"RTN","IBCEOB00",145,0)
 ; RECID = 41,42,45
"RTN","IBCEOB00",146,0)
 ; IB0 = data on RECID record
"RTN","IBCEOB00",147,0)
 ;  ARRAY(n)=formatted line is returned if passed by ref
"RTN","IBCEOB00",148,0)
 N CT,Q
"RTN","IBCEOB00",149,0)
 I RECID=41 D  Q
"RTN","IBCEOB00",150,0)
 . S ARRAY(1)="Allowed Amt: "_$J($P(IB0,U,3)/100,"",2)_"  Per Diem Amt: "_$J($P(IB0,U,4)/100,"",2)
"RTN","IBCEOB00",151,0)
 ;
"RTN","IBCEOB00",152,0)
 I RECID=42 D  Q
"RTN","IBCEOB00",153,0)
 . S ARRAY(1)="Line Item Remark Code: "_$P(IB0,U,3)
"RTN","IBCEOB00",154,0)
 . I $P(IB0,U,4)'="" S CT=1 F Q=0:80:190 I $E($P(IB0,U,4),Q+1,Q+80)'="" S CT=CT+1,ARRAY(CT)=$E($P(IB0,U,4),Q+1,Q+80)
"RTN","IBCEOB00",155,0)
 ;
"RTN","IBCEOB00",156,0)
 I RECID=45 D
"RTN","IBCEOB00",157,0)
 . S ARRAY(1)="Adj Group Cd: "_$P(IB0,U,3)_"  Reason Cd: "_$P(IB0,U,4)_"  Amt: "_$J($P(IB0,U,5)/100,"",2)_"  Quantity: "_+$P(IB0,U,6)
"RTN","IBCEOB00",158,0)
 . I $P(IB0,U,7)'="" S CT=1 F Q=0:80:190 I $E($P(IB0,U,7),Q+1,Q+80)'="" S CT=CT+1,ARRAY(CT)=$E($P(IB0,U,7),Q+1,Q+80)
"RTN","IBCEOB00",159,0)
 Q
"RTN","IBCEOB00",160,0)
 ; 
"RTN","IBCEOB00",161,0)
FDT(X) ; Format date in X (YYYYMMDD) to MM/DD/YYYY
"RTN","IBCEOB00",162,0)
 S:X'="" X=$E(X,5,6)_"/"_$E(X,7,8)_"/"_$E(X,1,4)
"RTN","IBCEOB00",163,0)
 Q X
"RTN","IBCEOB00",164,0)
 ;
"RTN","IBCEOB00",165,0)
UPDNM(IBEOB,IB0,IBBULL,IBDR) ; Update name on claim if it comes back changed
"RTN","IBCEOB00",166,0)
 ; IBEOB = the internal entry # of the entry in file 361.1
"RTN","IBCEOB00",167,0)
 ; IB0 = the raw data returned from the 835 flat file
"RTN","IBCEOB00",168,0)
 ; IBBULL = holds result of name change check in piece 1 - if name
"RTN","IBCEOB00",169,0)
 ;          changed, first '^' piece is 1, 3rd '^' piece is the old
"RTN","IBCEOB00",170,0)
 ;          insured's name
"RTN","IBCEOB00",171,0)
 ; IBDR = returned as the updated 'DR' string with the name changed
"RTN","IBCEOB00",172,0)
 ;       fields to use to update the EOB file (361.1) - pass by reference
"RTN","IBCEOB00",173,0)
 ;
"RTN","IBCEOB00",174,0)
 N IBCHGED,IBIFN,IBNEW,IBCOB,DIE,DR,X,Y
"RTN","IBCEOB00",175,0)
 I $P(IB0,U,7) D
"RTN","IBCEOB00",176,0)
 . S IBNEW=$P(IB0,U,3)_","_$P(IB0,U,4)_$S($P(IB0,U,5)'="":" "_$P(IB0,U,5),1:""),$P(IBBULL,U)=1
"RTN","IBCEOB00",177,0)
 . S IBCOB=+$P($G(^IBM(361.1,IBEOB,0)),U,15)
"RTN","IBCEOB00",178,0)
 . S IBIFN=+$G(^IBM(361.1,+IBEOB,0))
"RTN","IBCEOB00",179,0)
 . S IB=$G(^DGCR(399,IBIFN,"I"_IBCOB))
"RTN","IBCEOB00",180,0)
 . ;
"RTN","IBCEOB00",181,0)
 . I IB'="",$P(IB,U,17)'=IBNEW D
"RTN","IBCEOB00",182,0)
 .. ; Update the claim data only
"RTN","IBCEOB00",183,0)
 .. S $P(IBBULL,U,3)=$P(IB,U,17) ; save old value
"RTN","IBCEOB00",184,0)
 .. S $P(IB,U,17)=IBNEW
"RTN","IBCEOB00",185,0)
 .. S DIE="^DGCR(399,",DA=IBIFN,DR="30"_IBCOB_"////"_IB
"RTN","IBCEOB00",186,0)
 .. D:DA ^DIE
"RTN","IBCEOB00",187,0)
 .. S IBCHGED=1
"RTN","IBCEOB00",188,0)
 . S IBDR=$G(IBDR)_"6.01////"_$P(IB0,U,3)_","_$P(IB0,U,4)_" "_$P(IB0,U,5)_";"
"RTN","IBCEOB00",189,0)
 ;
"RTN","IBCEOB00",190,0)
 Q $G(IBCHGED)
"RTN","IBCEOB00",191,0)
 ;
"RTN","IBCEOB00",192,0)
UPDID(IBEOB,IB0,IBBULL,IBDR) ; Update id # on claim and policy if it comes back
"RTN","IBCEOB00",193,0)
 ;   changed
"RTN","IBCEOB00",194,0)
 ; IBEOB = the internal entry # of the entry in file 361.1
"RTN","IBCEOB00",195,0)
 ; IB0 = the raw data returned from the 835 flat file
"RTN","IBCEOB00",196,0)
 ; IBBULL = holds result of id change check in piece 2 - if id changed,
"RTN","IBCEOB00",197,0)
 ;          second '^' piece = 1,4th '^' piece is the old insured's id
"RTN","IBCEOB00",198,0)
 ; IBDR = returned as the updated 'DR' string with the id changed fields
"RTN","IBCEOB00",199,0)
 ;        to use to update the EOB file (361.1) - pass by reference
"RTN","IBCEOB00",200,0)
 ;
"RTN","IBCEOB00",201,0)
 N IBCHGED,IBNEW,IBCOB,IB,DIE,DR,DA,X,Y
"RTN","IBCEOB00",202,0)
 I $P(IB0,U,8) D
"RTN","IBCEOB00",203,0)
 . S IBNEW=$P(IB0,U,6),$P(IBBULL,U,2)=1
"RTN","IBCEOB00",204,0)
 . S IBIFN=+$G(^IBM(361.1,+IBEOB,0))
"RTN","IBCEOB00",205,0)
 . S IBCOB=+$P($G(^IBM(361.1,IBEOB,0)),U,15)
"RTN","IBCEOB00",206,0)
 . S IB=$G(^DGCR(399,IBIFN,"I"_IBCOB))
"RTN","IBCEOB00",207,0)
 . ;
"RTN","IBCEOB00",208,0)
 . I IB'="",$P(IB,U,2)'=IBNEW D
"RTN","IBCEOB00",209,0)
 .. ; Update the claim
"RTN","IBCEOB00",210,0)
 .. S $P(IBBULL,U,4)=$P(IB,U,2) ; save old value
"RTN","IBCEOB00",211,0)
 .. S $P(IB,U,2)=IBNEW
"RTN","IBCEOB00",212,0)
 .. S DIE="^DGCR(399,",DA=IBIFN,DR="30"_IBCOB_"////"_IB D ^DIE
"RTN","IBCEOB00",213,0)
 .. ;
"RTN","IBCEOB00",214,0)
 .. ; Update the policy
"RTN","IBCEOB00",215,0)
 .. S DA(1)=$P($G(^DGCR(399,IBIFN,0)),U,2),DA=$P($G(^("M")),U,(11+IBCOB)),DR="1////"_IBNEW,DIE="^DPT("_DA(1)_",.312,"
"RTN","IBCEOB00",216,0)
 .. I DA(1),DA D ^DIE
"RTN","IBCEOB00",217,0)
 .. S IBCHGED=1
"RTN","IBCEOB00",218,0)
 . S IBDR=$G(IBDR)_"6.02////"_$P(IB0,U,6)_";"
"RTN","IBCEOB00",219,0)
 ;
"RTN","IBCEOB00",220,0)
 Q $G(IBCHGED)
"RTN","IBCEOB00",221,0)
 ;
"RTN","IBCEOB1")
0^35^B69169596^B69145687
"RTN","IBCEOB1",1,0)
IBCEOB1 ;ALB/TMP - 835 EDI EOB MSG PROCESSING ;18-FEB-99
"RTN","IBCEOB1",2,0)
 ;;2.0;INTEGRATED BILLING;**137,135,155,296,356,349**;21-MAR-94;Build 46
"RTN","IBCEOB1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEOB1",4,0)
 Q
"RTN","IBCEOB1",5,0)
 ;
"RTN","IBCEOB1",6,0)
STORE(A,IB0,IBEOB,LEVEL) ;
"RTN","IBCEOB1",7,0)
 ; A = the string of data to extract and try to store
"RTN","IBCEOB1",8,0)
 ;       each ^ piece is a field to store
"RTN","IBCEOB1",9,0)
 ;         within each ^ piece, there are 5 ';' pieces:
"RTN","IBCEOB1",10,0)
 ;            1 = piece to extract from the data string;
"RTN","IBCEOB1",11,0)
 ;            2 = field to update;
"RTN","IBCEOB1",12,0)
 ;            3 = flag for dollar amt (1=YES);
"RTN","IBCEOB1",13,0)
 ;            4 = flag for 4-slash stuff without transform (1=YES);
"RTN","IBCEOB1",14,0)
 ;            5 = flag for numeric/non-dollar amt (1=Yes, 0=No,
"RTN","IBCEOB1",15,0)
 ;                 Dn = the field is numeric with 'n' decimal places
"RTN","IBCEOB1",16,0)
 ; IB0 = the record being processed
"RTN","IBCEOB1",17,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB1",18,0)
 ; LEVEL = the array that contains the DIE and DA values if stuffing at a
"RTN","IBCEOB1",19,0)
 ;         level other than the top level
"RTN","IBCEOB1",20,0)
 ;
"RTN","IBCEOB1",21,0)
 N B,IBPC,IBFLD,DA,DR,DIE,X,Y
"RTN","IBCEOB1",22,0)
 S DR=";"
"RTN","IBCEOB1",23,0)
 ;
"RTN","IBCEOB1",24,0)
 I '$G(LEVEL) S DIE="^IBM(361.1,",DA=IBEOB
"RTN","IBCEOB1",25,0)
 ;
"RTN","IBCEOB1",26,0)
 I $G(LEVEL) D
"RTN","IBCEOB1",27,0)
 . N Q
"RTN","IBCEOB1",28,0)
 . S DIE=$G(LEVEL("DIE"))
"RTN","IBCEOB1",29,0)
 . S Q=0 F  S Q=$O(LEVEL(Q)) Q:'Q  S DA(Q)=LEVEL(Q)
"RTN","IBCEOB1",30,0)
 . S DA=LEVEL(0)
"RTN","IBCEOB1",31,0)
 ;
"RTN","IBCEOB1",32,0)
 I $G(DA) F B=1:1:$L(A,U) D
"RTN","IBCEOB1",33,0)
 . S IBPC=$P(A,U,B),IBFLD=$P(IBPC,";",2)
"RTN","IBCEOB1",34,0)
 . I $P(IB0,U,+IBPC)'="",IBFLD D
"RTN","IBCEOB1",35,0)
 .. N VAL
"RTN","IBCEOB1",36,0)
 .. ; For dollar amts, add full cents; For numerics, strip leading
"RTN","IBCEOB1",37,0)
 .. ;   0's; For non-numeric/non-dollar amts, make any ; in data into |
"RTN","IBCEOB1",38,0)
 .. S VAL=$S($P(IBPC,";",3):$$DOLLAR^IBCEOB($P(IB0,U,+IBPC)),$P(IBPC,";",5):+$P(IB0,U,+IBPC),$P($P(IBPC,";",5),"D",2):$P(IB0,U,+IBPC)/(10**$P($P(IBPC,";",5),"D",2)),1:$TR($P(IB0,U,+IBPC),";","|"))
"RTN","IBCEOB1",39,0)
 .. I $P(IBPC,";",3),VAL S VAL=$P(VAL,".")_"."_$E($P(VAL,".",2)_"00",1,2)
"RTN","IBCEOB1",40,0)
 .. S DR=DR_IBFLD_"///"_$S($P(IBPC,";",4):"/",1:"")_VAL_";"
"RTN","IBCEOB1",41,0)
 ;
"RTN","IBCEOB1",42,0)
 S DR=$P(DR,";",2,$L(DR,";")-1)
"RTN","IBCEOB1",43,0)
 I DR'="" D ^DIE
"RTN","IBCEOB1",44,0)
 Q ($D(Y)=0) ;Successfully stored all the data it was sent if $D(Y)=0
"RTN","IBCEOB1",45,0)
 ;
"RTN","IBCEOB1",46,0)
HDR(IB0,IBEGBL,IBEOB) ; Store header data for EOB
"RTN","IBCEOB1",47,0)
 ; IB0 = the record being processed from the msg
"RTN","IBCEOB1",48,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB1",49,0)
 ;
"RTN","IBCEOB1",50,0)
 N IBDT,IBDTP,DA,DR,DIE,X,Y
"RTN","IBCEOB1",51,0)
 K IBXSAVE("XTRA"),IBZSAVE
"RTN","IBCEOB1",52,0)
 ;
"RTN","IBCEOB1",53,0)
 S IBDT=$P(IB0,U,3),IBDT=$E(IBDT,1,4)-1700_$E(IBDT,5,8)_"."_$P(IB0,U,4)
"RTN","IBCEOB1",54,0)
 S IBDTP=$P(IB0,U,9)
"RTN","IBCEOB1",55,0)
 I IBDTP S IBDTP=$E(IBDTP,1,4)-1700_$E(IBDTP,5,8)
"RTN","IBCEOB1",56,0)
 S DR=$S($P(IB0,U,7)'="":".03////"_$P(IB0,U,7)_";",1:"")_".05////"_IBDT_";.04////"_($P(IB0,U,5)="Y")_";.15///"_$$COBN^IBCEF(+$G(^IBM(361.1,IBEOB,0)))_";.07///"_$P(IB0,U,8)_$S(IBDTP:";.06////"_IBDTP,1:"")
"RTN","IBCEOB1",57,0)
 S DIE="^IBM(361.1,",DA=IBEOB
"RTN","IBCEOB1",58,0)
 D ^DIE
"RTN","IBCEOB1",59,0)
 I $D(Y)'=0 D
"RTN","IBCEOB1",60,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad header data"
"RTN","IBCEOB1",61,0)
 Q ($D(Y)=0)
"RTN","IBCEOB1",62,0)
 ;
"RTN","IBCEOB1",63,0)
FINDLN(IB0,IBEOB,IBZDATA) ; Find the corresponding billed line for the adj
"RTN","IBCEOB1",64,0)
 ; IB0 = the record being processed
"RTN","IBCEOB1",65,0)
 ;       NOTE: pieces 3,4,16 are already reformatted
"RTN","IBCEOB1",66,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB1",67,0)
 ; IBZDATA = the array from the output formatter containing line
"RTN","IBCEOB1",68,0)
 ;           items for the bill.  This is passed in so this data only has
"RTN","IBCEOB1",69,0)
 ;           to be extracted once for each bill (the first time in, it
"RTN","IBCEOB1",70,0)
 ;           will be undefined)
"RTN","IBCEOB1",71,0)
 ; OUTPUT = Line # in the original bill that this adjustment relates to
"RTN","IBCEOB1",72,0)
 ;          ^ paid procedure code if different from original procedure OR
"RTN","IBCEOB1",73,0)
 ;            paid rev code if different from original and no proc code
"RTN","IBCEOB1",74,0)
 ;
"RTN","IBCEOB1",75,0)
 N IBLN,IBLN1,IBBNDL,OCHG,OCHG2,OPROC,OREVCD,IBIFN,IBXARRAY,IBXARRY
"RTN","IBCEOB1",76,0)
 N IBXERR,UNITS,UNITS2,UNITS3,IBMOD,Z,Z0,CPT,EOBCHG,IBZVLA,IBAMIN
"RTN","IBCEOB1",77,0)
 ;
"RTN","IBCEOB1",78,0)
 S (IBLN,IBLN1)="",IBIFN=+$G(^IBM(361.1,IBEOB,0))
"RTN","IBCEOB1",79,0)
 S EOBCHG=+$$DOLLAR^IBCEOB($P(IB0,U,15))   ; charges on EOB 40 record
"RTN","IBCEOB1",80,0)
 ;
"RTN","IBCEOB1",81,0)
 ; if original procedure exists and is different than the 835 procedure,
"RTN","IBCEOB1",82,0)
 ; the procedure or revenue code originally billed will be in piece 10
"RTN","IBCEOB1",83,0)
 ; of the '40' record of the 835 flat file.  Otherwise, pc 10 is null.
"RTN","IBCEOB1",84,0)
 S IBBNDL=$S($P(IB0,U,10)'="":1,1:0)
"RTN","IBCEOB1",85,0)
 ;
"RTN","IBCEOB1",86,0)
 ; If this is a split MRA, build array of Vista line#'s from other split MRA's
"RTN","IBCEOB1",87,0)
 I $P($G(^IBM(361.1,IBEOB,0)),U,4)=1,$$SPLIT^IBCEMU1(IBEOB) D
"RTN","IBCEOB1",88,0)
 . N IEN S IEN=0
"RTN","IBCEOB1",89,0)
 . F  S IEN=$O(^IBM(361.1,"B",IBIFN,IEN)) Q:'IEN  I IEN'=IBEOB D
"RTN","IBCEOB1",90,0)
 .. I $P($G(^IBM(361.1,IEN,0)),U,4)'=1 Q    ; not an MRA
"RTN","IBCEOB1",91,0)
 .. I '$$SPLIT^IBCEMU1(IEN) Q               ; not a split EOB
"RTN","IBCEOB1",92,0)
 .. M IBZVLA=^IBM(361.1,IEN,15,"AC")
"RTN","IBCEOB1",93,0)
 .. Q
"RTN","IBCEOB1",94,0)
 . Q
"RTN","IBCEOB1",95,0)
 ;
"RTN","IBCEOB1",96,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,19)=3 D  G FINDLNX     ; UB-04 format
"RTN","IBCEOB1",97,0)
 . I '$D(IBZDATA) D F^IBCEF("N-UB-04 SERVICE LINE (EDI)","IBZDATA",,IBIFN)
"RTN","IBCEOB1",98,0)
 . I $P(IB0,U,22),$D(IBZDATA(+$P(IB0,U,22))) S IBLN=+$P(IB0,U,22)_U_$P(IB0,U,10) Q
"RTN","IBCEOB1",99,0)
 . ;
"RTN","IBCEOB1",100,0)
 . S Z=0 F  S Z=$O(IBZDATA(Z)) Q:'Z  D  Q:IBLN
"RTN","IBCEOB1",101,0)
 .. ; Quit if processing an MRA and this VistA line# has already been filed
"RTN","IBCEOB1",102,0)
 .. I $P($G(^IBM(361.1,IBEOB,0)),U,4)=1,$D(^IBM(361.1,IBEOB,15,"AC",Z)) Q
"RTN","IBCEOB1",103,0)
 .. ; Quit if split MRA and this VistA line# has already been filed
"RTN","IBCEOB1",104,0)
 .. I $D(IBZVLA(Z)) Q
"RTN","IBCEOB1",105,0)
 .. I $G(IBZDATA(Z))="" Q
"RTN","IBCEOB1",106,0)
 .. S OCHG=$P(IBZDATA(Z),U,3)*$P(IBZDATA(Z),U,4) ; Total charge from bill
"RTN","IBCEOB1",107,0)
 .. S OCHG2=+$P(IBZDATA(Z),U,5)
"RTN","IBCEOB1",108,0)
 .. I OCHG'=EOBCHG,OCHG2=EOBCHG S OCHG=OCHG2     ; update OCHG
"RTN","IBCEOB1",109,0)
 .. ;
"RTN","IBCEOB1",110,0)
 .. S CPT=$P(IBZDATA(Z),U,2)                        ; proc from bill
"RTN","IBCEOB1",111,0)
 .. I CPT'?.N,CPT'="" S CPT=$O(^ICPT("B",CPT,""))   ; non-numeric proc
"RTN","IBCEOB1",112,0)
 .. S OPROC=$$PRCD^IBCEF1(+CPT_";ICPT(")            ; ext proc code
"RTN","IBCEOB1",113,0)
 .. S OREVCD=+$P($G(^DGCR(399.2,+IBZDATA(Z),0)),U)  ; Rev cd from bill
"RTN","IBCEOB1",114,0)
 .. ;
"RTN","IBCEOB1",115,0)
 .. ; if not bundled/unbundled
"RTN","IBCEOB1",116,0)
 .. I 'IBBNDL D  Q
"RTN","IBCEOB1",117,0)
 ... I OPROC="",OREVCD,OREVCD'=$P(IB0,U,4) Q      ; revenue code
"RTN","IBCEOB1",118,0)
 ... I OPROC'="",OPROC'=$P(IB0,U,3) Q             ; procedure code
"RTN","IBCEOB1",119,0)
 ... I +$P(IBZDATA(Z),U,4)'=$P(IB0,U,16) Q        ; original units
"RTN","IBCEOB1",120,0)
 ... I +OCHG'=EOBCHG Q                            ; original charges
"RTN","IBCEOB1",121,0)
 ... I '$$MODMATCH($P(IBZDATA(Z),U,9),$P(IB0,U,5,8)),'$$MODMATCH($P($P(IBZDATA(Z),U,9),",",1),$P(IB0,U,5)) Q                    ; modifiers
"RTN","IBCEOB1",122,0)
 ... S IBLN=Z
"RTN","IBCEOB1",123,0)
 ... Q
"RTN","IBCEOB1",124,0)
 .. ;
"RTN","IBCEOB1",125,0)
 .. ; if bundled/unbundled
"RTN","IBCEOB1",126,0)
 .. I IBBNDL D  Q
"RTN","IBCEOB1",127,0)
 ... I OPROC="",OREVCD,OREVCD'=+$P(IB0,U,10) Q    ; revenue code
"RTN","IBCEOB1",128,0)
 ... I OPROC'="",OPROC'=$P(IB0,U,10) Q            ; procedure code
"RTN","IBCEOB1",129,0)
 ... I +$P(IBZDATA(Z),U,4)'=$P(IB0,U,16) Q        ; original units
"RTN","IBCEOB1",130,0)
 ... I +OCHG'=EOBCHG Q                            ; original charges
"RTN","IBCEOB1",131,0)
 ... I '$$MODMATCH($P(IBZDATA(Z),U,9),$P(IB0,U,11,14)),'$$MODMATCH($P($P(IBZDATA(Z),U,9),",",1),$P(IB0,U,11)) Q                 ; modifiers
"RTN","IBCEOB1",132,0)
 ... S IBLN=Z_U_$S(OPROC'="":OPROC,1:OREVCD)
"RTN","IBCEOB1",133,0)
 ... Q
"RTN","IBCEOB1",134,0)
 .. Q
"RTN","IBCEOB1",135,0)
 . ; When dealing with Inpatient UB-04's, check for revenue code roll-ups
"RTN","IBCEOB1",136,0)
 . I 'IBLN,$$INPAT^IBCEF(IBIFN,1) D RCRU^IBCEOB00(.IBZDATA,IB0,.IBLN)
"RTN","IBCEOB1",137,0)
 . ; If only 1 rev code and charges are the same, assume a match
"RTN","IBCEOB1",138,0)
 . I 'IBLN,'$P($G(^IBM(361.1,IBEOB,0)),U,4),$O(IBZDATA(""),-1)=$O(IBZDATA("")),+OCHG=EOBCHG S IBLN=+$O(IBZDATA(""))_U_OREVCD
"RTN","IBCEOB1",139,0)
 ;
"RTN","IBCEOB1",140,0)
 ; At this point, we can assume the claim is CMS-1500 format
"RTN","IBCEOB1",141,0)
 I '$D(IBZDATA) D F^IBCEF("N-HCFA 1500 SERVICE LINE (EDI)","IBZDATA",,IBIFN)
"RTN","IBCEOB1",142,0)
 I $P(IB0,U,22),$D(IBZDATA(+$P(IB0,U,22))) S IBLN=+$P(IB0,U,22)_U_$P(IB0,U,10) G FINDLNX
"RTN","IBCEOB1",143,0)
 S Z=0 F  S Z=$O(IBZDATA(Z)) Q:'Z  D  Q:IBLN
"RTN","IBCEOB1",144,0)
 . ; Quit if processing an MRA and this VistA line# has already been filed
"RTN","IBCEOB1",145,0)
 . I $P($G(^IBM(361.1,IBEOB,0)),U,4)=1,$D(^IBM(361.1,IBEOB,15,"AC",Z)) Q
"RTN","IBCEOB1",146,0)
 . ; Quit if split MRA and this VistA line# has already been filed
"RTN","IBCEOB1",147,0)
 . I $D(IBZVLA(Z)) Q
"RTN","IBCEOB1",148,0)
 . S OCHG=$P(IBZDATA(Z),U,8)*$P(IBZDATA(Z),U,9) ; charge from bill
"RTN","IBCEOB1",149,0)
 . S IBAMIN=""
"RTN","IBCEOB1",150,0)
 . I $P(IBZDATA(Z),U,12)'="" S IBAMIN=$P(IBZDATA(Z),U,12)  ;anesthesia minutes
"RTN","IBCEOB1",151,0)
 . S UNITS=$S('IBAMIN:$P(IBZDATA(Z),U,9),1:IBAMIN/15)
"RTN","IBCEOB1",152,0)
 . ; original units from bill or anesthesia minutes calculation
"RTN","IBCEOB1",153,0)
 . I $P(UNITS,".",2) S UNITS=$FN(UNITS,"",1)    ; round to a single decimal place for fractional units
"RTN","IBCEOB1",154,0)
 . I $P($P(IB0,U,16),".",2) S $P(IB0,U,16)=$FN($P(IB0,U,16),"",1)
"RTN","IBCEOB1",155,0)
 . S UNITS2=$P(IBZDATA(Z),U,9)     ; just the units
"RTN","IBCEOB1",156,0)
 . ; UNITS3 is the number of anesthesia minutes divided by 10, or nil.
"RTN","IBCEOB1",157,0)
 . ; Solution to get around the Trailblazers bug for MRAs
"RTN","IBCEOB1",158,0)
 . S UNITS3=""
"RTN","IBCEOB1",159,0)
 . I IBAMIN'=0 S UNITS3=IBAMIN/10
"RTN","IBCEOB1",160,0)
 . ;
"RTN","IBCEOB1",161,0)
 . S CPT=$P(IBZDATA(Z),U,5)        ; proc from bill
"RTN","IBCEOB1",162,0)
 . I CPT'?.N,CPT'="" S CPT=$O(^ICPT("B",CPT,""))   ; non-numeric proc
"RTN","IBCEOB1",163,0)
 . S OPROC=$$PRCD^IBCEF1(+CPT_";ICPT(")            ; ext proc code
"RTN","IBCEOB1",164,0)
 . Q:OPROC'=$S('IBBNDL:$P(IB0,U,3),1:$P(IB0,U,10))
"RTN","IBCEOB1",165,0)
 . ;
"RTN","IBCEOB1",166,0)
 . S MODOK=0
"RTN","IBCEOB1",167,0)
 . I $$DOLLAR^IBCEFG1(OCHG)=+$P(IB0,U,15),UNITS=$P(IB0,U,16)!(UNITS2=$P(IB0,U,16))!(UNITS3=$P(IB0,U,16))!(IBAMIN=$P(IB0,U,16)),$S($P(IB0,U,19):$P(IB0,U,19)=$P(IBZDATA(Z),U),1:1) D
"RTN","IBCEOB1",168,0)
 .. ;Original procedure/chg/units/date match to get here
"RTN","IBCEOB1",169,0)
 .. ;Check matching original modifiers
"RTN","IBCEOB1",170,0)
 .. S MODOK=$$MODMATCH($$MODLST^IBEFUNC2($P(IBZDATA(Z),U,10)),$S('IBBNDL:$P(IB0,U,5,8),1:$P(IB0,U,11,14)))
"RTN","IBCEOB1",171,0)
 .. I 'MODOK,'IBLN1 S IBLN1=Z_$S(IBBNDL:U_OPROC,1:"")
"RTN","IBCEOB1",172,0)
 .. Q:'MODOK
"RTN","IBCEOB1",173,0)
 .. S IBLN=Z_$S(IBBNDL:U_OPROC,1:"")
"RTN","IBCEOB1",174,0)
 I 'IBLN,IBLN1 S IBLN=IBLN1
"RTN","IBCEOB1",175,0)
 ;
"RTN","IBCEOB1",176,0)
FINDLNX ;
"RTN","IBCEOB1",177,0)
 Q IBLN
"RTN","IBCEOB1",178,0)
 ;
"RTN","IBCEOB1",179,0)
MODMATCH(IB,MODLST) ; Match modifiers
"RTN","IBCEOB1",180,0)
 ; IB = the list of modifiers iens from the bill, comma delimited
"RTN","IBCEOB1",181,0)
 ; MODLST = the 4 '^' pieces of the reported modifiers
"RTN","IBCEOB1",182,0)
 ;
"RTN","IBCEOB1",183,0)
 N MODOK,Q,Z0,IBMOD,MMOD
"RTN","IBCEOB1",184,0)
 S MODOK=1
"RTN","IBCEOB1",185,0)
 I $TR(IB,",")'="" F Q=1:1:$L(IB,",") S Z0=$P(IB,",",Q) I Z0'="" S IBMOD(Z0)=$G(IBMOD(Z0))+1
"RTN","IBCEOB1",186,0)
 I $TR(MODLST,U)="",$O(IBMOD(""))="" G MODQ ; No modifiers used
"RTN","IBCEOB1",187,0)
 ;
"RTN","IBCEOB1",188,0)
 ; No match if no VistA modifiers, but there are MRA modifiers
"RTN","IBCEOB1",189,0)
 I $TR(MODLST,U)'="",$O(IBMOD(""))="" S MODOK=0 G MODQ
"RTN","IBCEOB1",190,0)
 ;
"RTN","IBCEOB1",191,0)
 ; Evaluate each MRA modifier
"RTN","IBCEOB1",192,0)
 F Z0=1:1:4 D
"RTN","IBCEOB1",193,0)
 . S MMOD=$P(MODLST,U,Z0) Q:MMOD=""     ; individual MRA modifier
"RTN","IBCEOB1",194,0)
 . I '$D(IBMOD(MMOD)) Q                 ; not in array so just quit
"RTN","IBCEOB1",195,0)
 . S IBMOD(MMOD)=IBMOD(MMOD)-1          ; decrement array counter
"RTN","IBCEOB1",196,0)
 . I 'IBMOD(MMOD) KILL IBMOD(MMOD)      ; if 0, then kill array entry
"RTN","IBCEOB1",197,0)
 . Q
"RTN","IBCEOB1",198,0)
 ;
"RTN","IBCEOB1",199,0)
 I $O(IBMOD(""))'="" S MODOK=0 ; All submitted mods not matched
"RTN","IBCEOB1",200,0)
MODQ Q MODOK
"RTN","IBCEOB1",201,0)
 ;
"RTN","IBCEP")
0^52^B21937532^B21502471
"RTN","IBCEP",1,0)
IBCEP ;ALB/TMP - Functions for PROVIDER ID MAINT - INS CO PARAMS ;11-02-00
"RTN","IBCEP",2,0)
 ;;2.0;INTEGRATED BILLING;**137,232,320,348,349**;21-MAR-94;Build 46
"RTN","IBCEP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP",4,0)
 ;
"RTN","IBCEP",5,0)
EN ; -- main entry point for IBCE PRV INS PARAMS
"RTN","IBCEP",6,0)
 N IBINS,IBCUINC ; Variable should be available throughout actions
"RTN","IBCEP",7,0)
 D FULL^VALM1
"RTN","IBCEP",8,0)
 D EN^VALM("IBCE PRV INS PARAMS")
"RTN","IBCEP",9,0)
 Q
"RTN","IBCEP",10,0)
 ;
"RTN","IBCEP",11,0)
HDR ; -- header code
"RTN","IBCEP",12,0)
 K VALMHDR
"RTN","IBCEP",13,0)
 I $G(IBINS) S VALMHDR(1)="INSURANCE CO: "_$P($G(^DIC(36,+IBINS,0)),U)
"RTN","IBCEP",14,0)
 Q
"RTN","IBCEP",15,0)
 ;
"RTN","IBCEP",16,0)
INIT ; Initialization
"RTN","IBCEP",17,0)
 N DIR,DIC,DA,X,Y,DTOUT,DUOUT
"RTN","IBCEP",18,0)
 S DIC(0)="AEMQ",DIC="^DIC(36," D ^DIC
"RTN","IBCEP",19,0)
 I Y'>0 D
"RTN","IBCEP",20,0)
 . S VALMQUIT=1
"RTN","IBCEP",21,0)
 E  D
"RTN","IBCEP",22,0)
 . S DIR="YA",DIR("A")="DO YOU WANT TO INCLUDE ANY CARE UNIT DETAIL?: ",DIR("?",1)="If you want to see the specific care unit defined for the insurance co",DIR("?")="you should respond yes here"
"RTN","IBCEP",23,0)
 . W ! D ^DIR K DIR W !
"RTN","IBCEP",24,0)
 . I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 Q
"RTN","IBCEP",25,0)
 . S IBCUINC=(Y=1)
"RTN","IBCEP",26,0)
 . S IBINS=+Y D BLD(IBINS,IBCUINC)
"RTN","IBCEP",27,0)
 Q
"RTN","IBCEP",28,0)
 ;
"RTN","IBCEP",29,0)
BLD(IBINS,IBCUINC) ; Build display for ins co level provider ID parameters
"RTN","IBCEP",30,0)
 ; IBINS = ien of ins co (file 36)
"RTN","IBCEP",31,0)
 ; IBCUINC = flag:
"RTN","IBCEP",32,0)
 ;    = 1 if care unit list should be included  or 0 if not
"RTN","IBCEP",33,0)
 N A,A0,A1,A2,A3,Z0,IB1,IB12,IB4,IBLCT,IBPTYP
"RTN","IBCEP",34,0)
 S IBLCT=0
"RTN","IBCEP",35,0)
 S IB4=$G(^DIC(36,IBINS,4))
"RTN","IBCEP",36,0)
 K ^TMP("IBPRV_INS_ID_PARAMS",$J)
"RTN","IBCEP",37,0)
 ;
"RTN","IBCEP",38,0)
 S Z0="Perf Prov Secondary ID Type (1500): "_$E($$EXPAND^IBTRE(36,4.01,+$P(IB4,U))_$J("",20),1,20) D SET1(.IBLCT,Z0)
"RTN","IBCEP",39,0)
 S Z0="Perf Prov Secondary ID Type (UB04): "_$E($$EXPAND^IBTRE(36,4.02,+$P(IB4,U,2))_$J("",20),1,20) D SET1(.IBLCT,Z0)
"RTN","IBCEP",40,0)
 S Z0=$J("",20)_"Required: "_$$EXPAND^IBTRE(36,4.03,$P(IB4,U,3)) D SET1(.IBLCT,Z0)
"RTN","IBCEP",41,0)
 S Z0=$J("",10)_"Care Unit Name: "_$$EXPAND^IBTRE(36,4.09,$P(IB4,U,9)) D SET1(.IBLCT,Z0)
"RTN","IBCEP",42,0)
 S Z0=""  D SET1(.IBLCT,Z0)
"RTN","IBCEP",43,0)
 ;
"RTN","IBCEP",44,0)
 I '$D(^IBA(355.96,"D",IBINS)) D  G BLDQ ;No care unit needed
"RTN","IBCEP",45,0)
 . S Z0=$J("",7)_"*** NO CARE UNITS DEFINED FOR THIS INS CO PROVIDER SECONDARY ID ***" D SET1(.IBLCT,Z0)
"RTN","IBCEP",46,0)
 ;
"RTN","IBCEP",47,0)
 S Z0=$J("",17)_"VALID CARE UNITS FOR THIS INSURANCE COMPANY" D SET1(.IBLCT,Z0),CNTRL^VALM10(IBLCT,18,46,IORVON,IORVOFF)
"RTN","IBCEP",48,0)
 S A=0
"RTN","IBCEP",49,0)
 F  S A=$O(^IBA(355.96,"AC",IBINS,A)) Q:'A  S IBPTYP=$P($G(^IBE(355.97,A,0)),U) I IBPTYP'="" D
"RTN","IBCEP",50,0)
 . S A2=IBPTYP_U_A,^TMP("IBPRV_INS_ID_PARAMS_SORT",$J,A2)=""
"RTN","IBCEP",51,0)
 . S A0=0 F  S A0=$O(^IBA(355.96,"AC",IBINS,A,A0)) Q:'A0  S A1=$G(^IBA(355.96,A0,0)) D
"RTN","IBCEP",52,0)
 .. I '$G(IBCUINC) S:'$D(^TMP("IBPRV_INS_ID_PARAMS_SORT",$J,A2,$P(A1,U,4)_U_$P(A1,U,5))) ^($P(A1,U,4)_U_$P(A1,U,5))="" Q
"RTN","IBCEP",53,0)
 .. I $P(A1,U,4)'="",$P(A1,U,5)'="" D
"RTN","IBCEP",54,0)
 ... S A3=$E($P($G(^IBE(355.95,+A1,0)),U)_$J("",1,30),1,30)_U_$S($P($G(^(0)),U,2)'="":$P(^(0),U,2),1:"<No description available>")
"RTN","IBCEP",55,0)
 ... I '$D(^TMP("IBPRV_INS_ID_PARAMS_SORT",$J,A2,$P(A1,U,4)_U_$P(A1,U,5),$P(A3,U))) S ^($P(A3,U))=$P(A3,U,2)
"RTN","IBCEP",56,0)
 . ; records are fully sorted
"RTN","IBCEP",57,0)
 S A=""
"RTN","IBCEP",58,0)
 F  S A=$O(^TMP("IBPRV_INS_ID_PARAMS_SORT",$J,A)) Q:'A  S A2="PROVIDER ID TYPE: "_$P(A,U),IB1=1 D:'IB1 SET1(.IBLCT,"") D SET1(.IBLCT,A2) S IB12=1 S:$G(IBCUINC) IB1=0 D
"RTN","IBCEP",59,0)
 . S A0="" F  S A0=$O(^TMP("IBPRV_INS_ID_PARAMS_SORT",$J,A,A0)) Q:A0=""  D
"RTN","IBCEP",60,0)
 .. S Z0=$J("",5)_"FORM TYPE: "_$E($$EXPAND^IBTRE(355.96,.04,$P(A0,U))_$J("",25),1,25)_"  CARE TYPE: "_$E($$EXPAND^IBTRE(355.96,.05,$P(A0,U,2))_$J("",25),1,25)
"RTN","IBCEP",61,0)
 .. D:'IB12 SET1(.IBLCT,"") D SET1(.IBLCT,Z0)
"RTN","IBCEP",62,0)
 .. Q:'$G(IBCUINC)
"RTN","IBCEP",63,0)
 .. S IB12=0
"RTN","IBCEP",64,0)
 .. S A1="" F  S A1=$O(^TMP("IBPRV_INS_ID_PARAMS_SORT",$J,A,A0,A1)) Q:A1=""  S Z0=$J("",10)_A1_$G(^(A1)) D SET1(.IBLCT,Z0)
"RTN","IBCEP",65,0)
 ;
"RTN","IBCEP",66,0)
BLDQ K ^TMP("IBPRV_INS_ID_PARAMS_SORT",$J)
"RTN","IBCEP",67,0)
 S VALMCNT=IBLCT,VALMBG=1
"RTN","IBCEP",68,0)
 Q
"RTN","IBCEP",69,0)
 ;
"RTN","IBCEP",70,0)
SET1(IBLCT,Z0) ;
"RTN","IBCEP",71,0)
 S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,Z0)
"RTN","IBCEP",72,0)
 Q
"RTN","IBCEP",73,0)
 ;
"RTN","IBCEP",74,0)
EXPND ;
"RTN","IBCEP",75,0)
 Q
"RTN","IBCEP",76,0)
 ;
"RTN","IBCEP",77,0)
HELP ;
"RTN","IBCEP",78,0)
 Q
"RTN","IBCEP",79,0)
 ;
"RTN","IBCEP",80,0)
EXIT ;
"RTN","IBCEP",81,0)
 K ^TMP("IBPRV_INS_ID_PARAMS",$J)
"RTN","IBCEP",82,0)
 D CLEAN^VALM10
"RTN","IBCEP",83,0)
 Q
"RTN","IBCEP",84,0)
 ;
"RTN","IBCEP",85,0)
EDIT ; Entrypoint called from IBCSCE to invoke provider id edit functions
"RTN","IBCEP",86,0)
 Q
"RTN","IBCEP",87,0)
 ;
"RTN","IBCEP",88,0)
EDIT1 ; Edit parameters
"RTN","IBCEP",89,0)
 N IB,IBY,IBCNS,DIE,DR,X,Y
"RTN","IBCEP",90,0)
 D FULL^VALM1
"RTN","IBCEP",91,0)
 S IBCNS=IBINS,IBY=12
"RTN","IBCEP",92,0)
 D MAIN^IBCNSC1
"RTN","IBCEP",93,0)
 S VALMBCK="R"
"RTN","IBCEP",94,0)
 Q
"RTN","IBCEP",95,0)
 ;
"RTN","IBCEP",96,0)
NETID() ; Returns the ien of the entry in file 355.97 that is designated as the
"RTN","IBCEP",97,0)
 ; NETWORK ID
"RTN","IBCEP",98,0)
 N Z S Z=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  Q:$P($G(^(Z,1)),U,6)
"RTN","IBCEP",99,0)
 Q Z
"RTN","IBCEP",100,0)
 ;
"RTN","IBCEP",101,0)
EMCID() ; Returns the ien of the entry in file 355.97 that is designated as the
"RTN","IBCEP",102,0)
 ; EMC ID
"RTN","IBCEP",103,0)
 N Z S Z=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  Q:$P($G(^(Z,1)),U,5)
"RTN","IBCEP",104,0)
 Q Z
"RTN","IBCEP",105,0)
 ;
"RTN","IBCEP",106,0)
UPIN() ; Returns the ien of the entry in file 355.97 that is designated as the
"RTN","IBCEP",107,0)
 ; UPIN ID
"RTN","IBCEP",108,0)
 Q +$O(^IBE(355.97,"B","UPIN",0))
"RTN","IBCEP",109,0)
 ;
"RTN","IBCEP",110,0)
EDITID(IBCNS) ; Edit provider id's from insurance co enter/edit
"RTN","IBCEP",111,0)
 ; IBCNS = ien of file 36
"RTN","IBCEP",112,0)
 Q   ; WCJ 12/30/2005
"RTN","IBCEP",113,0)
 N X,Y,Z4,DIR
"RTN","IBCEP",114,0)
 S Z4=$G(^DIC(36,IBCNS,4))
"RTN","IBCEP",115,0)
 I 'Z4,'$P(Z4,U,2) Q
"RTN","IBCEP",116,0)
 S DIR("A",1)="USE PROVIDER ID MAINTENANCE TO ENTER/EDIT PROV SECONDARY ID'S FOR THIS CO.",DIR("A")="PRESS RETURN TO CONTINUE: ",DIR(0)="EA" W ! D ^DIR K DIR
"RTN","IBCEP",117,0)
 Q
"RTN","IBCEP",118,0)
 ;
"RTN","IBCEP0")
0^53^B68376329^B67684201
"RTN","IBCEP0",1,0)
IBCEP0 ;ALB/TMP - Functions for PROVIDER ID MAINTENANCE ;13-DEC-99
"RTN","IBCEP0",2,0)
 ;;2.0;INTEGRATED BILLING;**137,191,239,232,320,348,349**;21-MAR-94;Build 46
"RTN","IBCEP0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP0",4,0)
 ;
"RTN","IBCEP0",5,0)
EN ; -- main entry point for IBCE PRV INS ID
"RTN","IBCEP0",6,0)
 N IBINS,IBDSP,IBSORT,IBPRV ; Variables should be available throughout actions
"RTN","IBCEP0",7,0)
 K IBFASTXT
"RTN","IBCEP0",8,0)
 D FULL^VALM1
"RTN","IBCEP0",9,0)
 D EN^VALM("IBCE PRVINS ID")
"RTN","IBCEP0",10,0)
 Q
"RTN","IBCEP0",11,0)
 ;
"RTN","IBCEP0",12,0)
EN1(IBINS) ; Entrypoint from insurance co maintenance
"RTN","IBCEP0",13,0)
 N IBDSP,IBSORT ; Variables should be available throughout actions
"RTN","IBCEP0",14,0)
 D FULL^VALM1
"RTN","IBCEP0",15,0)
 D EN^VALM("IBCE PRVINS ID FROM INS MAINT")
"RTN","IBCEP0",16,0)
 Q
"RTN","IBCEP0",17,0)
 ;
"RTN","IBCEP0",18,0)
HDR ; -- header code
"RTN","IBCEP0",19,0)
 N Z,Z0,Z1,IBCT,IBPPTYP,IBEMCTYP
"RTN","IBCEP0",20,0)
 S IBCT=1
"RTN","IBCEP0",21,0)
 K VALMHDR
"RTN","IBCEP0",22,0)
 I $G(IBINS) D
"RTN","IBCEP0",23,0)
 . N PCF,PCDISP
"RTN","IBCEP0",24,0)
 . S PCF=$P($G(^DIC(36,+IBINS,3)),U,13)
"RTN","IBCEP0",25,0)
 . S PCDISP=$S(PCF="C":"(Child)",PCF="P":"(Parent)",1:"")
"RTN","IBCEP0",26,0)
 . S VALMHDR(1)="Insurance Co: "_$P($G(^DIC(36,+IBINS,0)),U)_" "_PCDISP
"RTN","IBCEP0",27,0)
 . ; Get performing provider id type for insurance co
"RTN","IBCEP0",28,0)
 . S IBPPTYP=$$PPTYP(IBINS)
"RTN","IBCEP0",29,0)
 . ; Get ien of EMC ID from file 355.97
"RTN","IBCEP0",30,0)
 . S IBEMCTYP=+$$EMCID^IBCEP()
"RTN","IBCEP0",31,0)
 . I $G(IBSORT)="ALL"!($G(IBDSP)="I")!($G(IBSORT)=IBPPTYP)!($G(IBSORT)=IBEMCTYP) D
"RTN","IBCEP0",32,0)
 .. ; Look for care unit in either of these id types - if there, report on line 2 of header
"RTN","IBCEP0",33,0)
 .. I $G(IBSORT)=IBPPTYP S IBEMCTYP=0
"RTN","IBCEP0",34,0)
 .. I $G(IBSORT)=IBEMCTYP S IBPPTYP=0
"RTN","IBCEP0",35,0)
 .. F Z0=IBPPTYP_"P",IBEMCTYP_"E" S Z1="" F  S Z1=$O(^IBA(355.96,"D",+IBINS,+Z0,Z1)) Q:Z1=""  I Z1'="*N/A*" S Z($E(Z0,$L(Z0)))=1 Q
"RTN","IBCEP0",36,0)
 .. I $D(Z("P"))!$D(Z("E")) D
"RTN","IBCEP0",37,0)
 ... S IBCT=IBCT+1
"RTN","IBCEP0",38,0)
 ... S VALMHDR(IBCT)="  "_$S($D(Z("P")):"PERFORMING PROV ID"_$S($D(Z("E")):" AND ",1:""),1:"")_$S($D(Z("E")):"EMC PROV ID",1:"")_" MAY REQUIRE CARE UNIT"
"RTN","IBCEP0",39,0)
 . I $D(Z("P"))!$D(Z("E")) S IBCT=IBCT+1,VALMHDR(IBCT)=" "
"RTN","IBCEP0",40,0)
 . S IBCT=IBCT+1,VALMHDR(IBCT)="     PROVIDER "_$S($G(IBDSP)="I":"ID TYPE",1:"NAME   ")_$J("",6)_"FORM   CARE TYPE    CARE UNIT       ID#"
"RTN","IBCEP0",41,0)
 Q
"RTN","IBCEP0",42,0)
 ;
"RTN","IBCEP0",43,0)
INIT ; Initialization
"RTN","IBCEP0",44,0)
 K ^TMP("IB_EDITED_IDS",$J)  ; This will be to keep track of ID's edited during this session
"RTN","IBCEP0",45,0)
 D INSID(.IBINS,.IBDSP,.IBSORT)
"RTN","IBCEP0",46,0)
 I $G(IBDSP)="I",$G(IBSORT) S IBPRV=IBSORT
"RTN","IBCEP0",47,0)
 I '$G(IBINS) S VALMQUIT=1
"RTN","IBCEP0",48,0)
 Q
"RTN","IBCEP0",49,0)
 ;
"RTN","IBCEP0",50,0)
INSID(IBINS,IBDSP,IBSORT) ;
"RTN","IBCEP0",51,0)
 N DIC,DIR,DA,X,Y,IBOK,DTOUT,DUOUT
"RTN","IBCEP0",52,0)
 S IBOK=1
"RTN","IBCEP0",53,0)
 I '$G(IBINS) D
"RTN","IBCEP0",54,0)
 . S DIC(0)="AEMQ",DIC="^DIC(36," D ^DIC
"RTN","IBCEP0",55,0)
 . I Y'>0 S IBOK=0 Q
"RTN","IBCEP0",56,0)
 . S IBINS=+Y
"RTN","IBCEP0",57,0)
 I '$G(IBINS) S IBOK=0
"RTN","IBCEP0",58,0)
 I 'IBOK G INSIDQ
"RTN","IBCEP0",59,0)
 ;
"RTN","IBCEP0",60,0)
 S DIR(0)="SA^D:INSURANCE CO DEFAULT IDS;I:INDIVIDUAL PROVIDER IDS FURNISHED BY THE INS CO;A:ALL IDS FURNISHED BY THE INS CO BY PROVIDER TYPE"
"RTN","IBCEP0",61,0)
 S DIR("A")="SELECT DISPLAY CONTENT: ",DIR("B")="A"
"RTN","IBCEP0",62,0)
 S DIR("?",1)="(D) DISPLAY CONTAINS ONLY THOSE IDS ASSIGNED AS DEFAULTS TO THE FACILITY BY",DIR("?",2)="    THE INSURANCE COMPANY"
"RTN","IBCEP0",63,0)
 S DIR("?",3)="(I) DISPLAY CONTAINS ONLY THOSE IDS ASSIGNED TO INDIVIDUAL PROVIDERS BY THE",DIR("?",4)="    INSURANCE COMPANY"
"RTN","IBCEP0",64,0)
 S DIR("?",5)="(A) DISPLAY CONTAINS ALL IDS ASSIGNED BY THE INSURANCE COMPANY FOR ONE OR ALL",DIR("?")="    PROVIDER ID TYPES"
"RTN","IBCEP0",65,0)
 W ! D ^DIR K DIR W !
"RTN","IBCEP0",66,0)
 I $D(DTOUT)!$D(DUOUT)!("DIA"'[Y) S IBOK=0 G INSIDQ
"RTN","IBCEP0",67,0)
 S IBDSP=Y,IBSORT=""
"RTN","IBCEP0",68,0)
 I IBDSP="A"!(IBDSP="I") F  D  Q:'IBOK!(IBSORT'="")
"RTN","IBCEP0",69,0)
 . N Z
"RTN","IBCEP0",70,0)
 . S Z=$S(IBDSP="I":"",1:" ID TYPE")
"RTN","IBCEP0",71,0)
 . S DIR("A")="DO YOU WANT TO DISPLAY IDS FOR A SPECIFIC PROVIDER"_Z_"?: ",DIR("B")="NO",DIR(0)="YA"
"RTN","IBCEP0",72,0)
 . S DIR("?",1)="IF YOU ANSWER YES TO THIS QUESTION, YOU MAY SELECT A SPECIFIC PROVIDER"_Z,DIR("?")="  TO DISPLAY, OTHERWISE, ALL PROVIDER"_Z_"S FOUND WILL BE DISPLAYED"
"RTN","IBCEP0",73,0)
 . W ! D ^DIR K DIR W !
"RTN","IBCEP0",74,0)
 . I $D(DTOUT)!$D(DUOUT) S IBOK=0 Q
"RTN","IBCEP0",75,0)
 . I Y'=1 S IBSORT="ALL" Q
"RTN","IBCEP0",76,0)
 . ;
"RTN","IBCEP0",77,0)
 . I IBDSP="A" D  Q
"RTN","IBCEP0",78,0)
 .. S DIC(0)="AEMQ",DIC="^IBE(355.97,",DIC("S")="I $S('$P(^(0),U,2):1,1:$P(^(0),U,2)=3)" D ^DIC K DIC
"RTN","IBCEP0",79,0)
 .. I Y>0 S IBSORT=+Y Q
"RTN","IBCEP0",80,0)
 .. I $D(DTOUT)!$D(DUOUT) S IBOK=0
"RTN","IBCEP0",81,0)
 . ;
"RTN","IBCEP0",82,0)
 . I IBDSP="I" D  Q
"RTN","IBCEP0",83,0)
 .. N DA
"RTN","IBCEP0",84,0)
 .. S DIR(0)="399.0222,.02A",DIR("A")="SELECT PROVIDER: "
"RTN","IBCEP0",85,0)
 .. W ! D ^DIR K DIR W !
"RTN","IBCEP0",86,0)
 .. I Y>0 S IBSORT=Y Q
"RTN","IBCEP0",87,0)
 .. I $D(DTOUT)!$D(DUOUT) S IBOK=0 Q
"RTN","IBCEP0",88,0)
 . S IBOK=0 Q
"RTN","IBCEP0",89,0)
 ;
"RTN","IBCEP0",90,0)
 G:'IBOK INSIDQ
"RTN","IBCEP0",91,0)
 D BLD(IBINS,IBDSP,IBSORT)
"RTN","IBCEP0",92,0)
INSIDQ I 'IBOK S VALMQUIT=1
"RTN","IBCEP0",93,0)
 Q
"RTN","IBCEP0",94,0)
 ;
"RTN","IBCEP0",95,0)
BLD(IBINS,IBDSP,IBSORT) ; Build display for Insurance co level provider ID's
"RTN","IBCEP0",96,0)
 N IB,IBENT,IBLCT,IBCT,IBPRV,IBSRT1,IBSRT2,IBOSRT1,IBOSRT2,CU,FT,PT,CT,Z,Z0
"RTN","IBCEP0",97,0)
 K ^TMP("IBPRV_INS_ID",$J),^TMP("IBPRV_INS_SORT",$J)
"RTN","IBCEP0",98,0)
 ;
"RTN","IBCEP0",99,0)
 S (IBENT,IBCT,IBLCT)=0
"RTN","IBCEP0",100,0)
 ;
"RTN","IBCEP0",101,0)
 I "DA"[$G(IBDSP) D
"RTN","IBCEP0",102,0)
 . S CU="" F  S CU=$O(^IBA(355.91,"AUNIQ",IBINS,CU)) Q:CU=""  S FT="" F  S FT=$O(^IBA(355.91,"AUNIQ",IBINS,CU,FT)) Q:FT=""  D
"RTN","IBCEP0",103,0)
 .. S CT="" F  S CT=$O(^IBA(355.91,"AUNIQ",IBINS,CU,FT,CT)) Q:CT=""  S PT=0 F  S PT=$S(IBDSP="A"&IBSORT:IBSORT,1:$O(^IBA(355.91,"AUNIQ",IBINS,CU,FT,CT,PT))) Q:'PT  D  Q:IBDSP="A"&IBSORT
"RTN","IBCEP0",104,0)
 ... S Z=0 F  S Z=$O(^IBA(355.91,"AUNIQ",IBINS,CU,FT,CT,PT,Z)) Q:'Z  S IB=$G(^IBA(355.91,Z,0)) S ^TMP("IBPRV_INS_SORT",$J,PT,"^<<INS CO DEFAULT>>",FT,CT,CU,Z)=$P(IB,U,7)_U
"RTN","IBCEP0",105,0)
 ;
"RTN","IBCEP0",106,0)
 I "IA"[$G(IBDSP) D
"RTN","IBCEP0",107,0)
 . S IBPRV=""
"RTN","IBCEP0",108,0)
 . N IB1,IB2
"RTN","IBCEP0",109,0)
 . F  S IBPRV=$O(^IBA(355.9,"AE",IBINS,IBPRV)) Q:'IBPRV  S Z=0 F  S Z=$O(^IBA(355.9,"AE",IBINS,IBPRV,Z)) Q:'Z  S IB=$G(^IBA(355.9,Z,0)) D
"RTN","IBCEP0",110,0)
 .. Q:$P(IB,U,4)=""!($P(IB,U,5)="")!($P(IB,U,6)="")!($P(IB,U,16)="")
"RTN","IBCEP0",111,0)
 .. I IBSORT,$S(IBDSP="I":IBPRV'=IBSORT,1:$P(IB,U,6)'=IBSORT) Q
"RTN","IBCEP0",112,0)
 .. S IB1=$S(IBDSP="A":$P(IB,U,6),1:U_$$EXPAND^IBTRE(355.9,.01,IBPRV)_U_IBPRV)
"RTN","IBCEP0",113,0)
 .. S IB2=$S(IBDSP="I":$P(IB,U,6),1:U_$$EXPAND^IBTRE(355.9,.01,IBPRV)_U_IBPRV)
"RTN","IBCEP0",114,0)
 .. S ^TMP("IBPRV_INS_SORT",$J,IB1,IB2,$P(IB,U,4),$P(IB,U,5),$P(IB,U,16),Z)=$P(IB,U,7)_U_IBPRV
"RTN","IBCEP0",115,0)
 ;
"RTN","IBCEP0",116,0)
 S IBOSRT1=""
"RTN","IBCEP0",117,0)
 S IBSRT1="" F  S IBSRT1=$O(^TMP("IBPRV_INS_SORT",$J,IBSRT1)) Q:IBSRT1=""  D
"RTN","IBCEP0",118,0)
 . S IBSRT2="",IBOSRT2=""
"RTN","IBCEP0",119,0)
 . F  S IBSRT2=$O(^TMP("IBPRV_INS_SORT",$J,IBSRT1,IBSRT2)) Q:IBSRT2=""  D
"RTN","IBCEP0",120,0)
 .. I IBOSRT1'=IBSRT1 D
"RTN","IBCEP0",121,0)
 ... I IBOSRT1'="" S IBLCT=IBLCT+1 D SET^VALM10(IBLCT," ",IBCT+1)
"RTN","IBCEP0",122,0)
 ... S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,$S(IBDSP'="I":"ID Qualifier",1:"Provider")_": "_$S(IBDSP'="I":$$EXPAND^IBTRE(355.91,.06,IBSRT1),1:$P(IBSRT1,U,2_$S($P(IBSRT2,U,3)["VA(200":" (VA)",1:"(NON-VA)"))),IBCT+1)
"RTN","IBCEP0",123,0)
 ... S IBOSRT1=IBSRT1
"RTN","IBCEP0",124,0)
 .. ;
"RTN","IBCEP0",125,0)
 .. S FT="" F  S FT=$O(^TMP("IBPRV_INS_SORT",$J,IBSRT1,IBSRT2,FT)) Q:FT=""  S CT="" F  S CT=$O(^TMP("IBPRV_INS_SORT",$J,IBSRT1,IBSRT2,FT,CT)) Q:CT=""  D
"RTN","IBCEP0",126,0)
 ... S CU="" F  S CU=$O(^TMP("IBPRV_INS_SORT",$J,IBSRT1,IBSRT2,FT,CT,CU)) Q:CU=""  S Z=0 F  S Z=$O(^TMP("IBPRV_INS_SORT",$J,IBSRT1,IBSRT2,FT,CT,CU,Z)) Q:'Z  S IB=$G(^(Z)) D
"RTN","IBCEP0",127,0)
 .... S IBLCT=IBLCT+1,IBCT=IBCT+1
"RTN","IBCEP0",128,0)
 .... S Z0=$E(IBCT_$J("",4),1,4)_" "
"RTN","IBCEP0",129,0)
 .... I IBDSP'="I" S Z0=Z0_$E($S(IBOSRT2'=IBSRT2:$P(IBSRT2,U,2),1:"")_$J("",20),1,20)
"RTN","IBCEP0",130,0)
 .... I IBDSP="I" S Z0=Z0_$E($S(IBOSRT2'=IBSRT2:$$EXPAND^IBTRE(355.9,.06,IBSRT2),1:"")_$J("",20),1,20)
"RTN","IBCEP0",131,0)
 .... S IBOSRT2=IBSRT2
"RTN","IBCEP0",132,0)
 .... S Z0=Z0_"  "_$S(FT=1:"UB-04",FT=2:"1500 ",1:"BOTH ")_"  "_$E($S(CT=3:"RX",CT=1:"INPT",CT=2:"OUTPT",1:"INPT/OUTPT")_$J("",11),1,11)_"  "_$E($S(CU'="*N/A*":$P($G(^IBA(355.95,+$P($G(^IBA(355.96,+CU,0)),U),0)),U),1:"")_$J("",15),1,15)
"RTN","IBCEP0",133,0)
 .... D SET^VALM10(IBLCT,Z0_" "_$P(IB,U),IBCT)
"RTN","IBCEP0",134,0)
 .... S ^TMP("IBPRV_INS_ID",$J,"ZIDX",IBCT)=Z,^(IBCT,"PRV")=$P(IB,U,2)
"RTN","IBCEP0",135,0)
 .... I '$D(^TMP("IBPRV_INS_ID",$J,$S(IBDSP="I":"ZXPRV",1:"ZXPTYP"),IBSRT1)) S ^(IBSRT1)=IBLCT-1
"RTN","IBCEP0",136,0)
 K ^TMP("IBPRV_INS_SORT",$J)
"RTN","IBCEP0",137,0)
 ;
"RTN","IBCEP0",138,0)
 I IBLCT=0 D  G BLDQ ; No entries found
"RTN","IBCEP0",139,0)
 . D SET^VALM10(1," ")
"RTN","IBCEP0",140,0)
 . S Z="  No "_$S(IBDSP="D":"default ",1:"")
"RTN","IBCEP0",141,0)
 . S Z=Z_"ID's found for "_$S(IBDSP="I":"provider "_$S(IBSORT:"("_$$EXPAND^IBTRE(355.9,.01,IBSORT)_") ",1:"")_"and ",IBDSP="A":"provider type "_$S(IBSORT:"("_$$EXPAND^IBTRE(355.9,.06,IBSORT)_") ",1:"")_"and ",1:"")_"insurance co"
"RTN","IBCEP0",142,0)
 . D SET^VALM10(2,Z)
"RTN","IBCEP0",143,0)
 . S IBLCT=2
"RTN","IBCEP0",144,0)
 ;
"RTN","IBCEP0",145,0)
BLDQ S VALMCNT=IBLCT,VALMBG=1
"RTN","IBCEP0",146,0)
 Q
"RTN","IBCEP0",147,0)
 ;
"RTN","IBCEP0",148,0)
EXPND ;
"RTN","IBCEP0",149,0)
 Q
"RTN","IBCEP0",150,0)
 ;
"RTN","IBCEP0",151,0)
HELP ;
"RTN","IBCEP0",152,0)
 Q
"RTN","IBCEP0",153,0)
 ;
"RTN","IBCEP0",154,0)
EXIT ;
"RTN","IBCEP0",155,0)
 K IBFASTXT
"RTN","IBCEP0",156,0)
 D COPYPROV^IBCEP5A(IBINS)
"RTN","IBCEP0",157,0)
 K ^TMP("IBPRV_INS_ID",$J)
"RTN","IBCEP0",158,0)
 D CLEAN^VALM10
"RTN","IBCEP0",159,0)
 Q
"RTN","IBCEP0",160,0)
 ;
"RTN","IBCEP0",161,0)
SEL(IBDA,MANY) ; Select from provider id list
"RTN","IBCEP0",162,0)
 ; IBDA is passed by reference and IBDA(1) returned containing
"RTN","IBCEP0",163,0)
 ;  ien's of the provider id records selected (file 355.9).
"RTN","IBCEP0",164,0)
 ; If > 1 entry can be selected, MANY is set to 1
"RTN","IBCEP0",165,0)
 N Z
"RTN","IBCEP0",166,0)
 S IBDA=0
"RTN","IBCEP0",167,0)
 D EN^VALM2($G(XQORNOD(0)),$S($G(MANY):"",1:"S"))
"RTN","IBCEP0",168,0)
 S Z=0 F  S Z=$O(VALMY(Z)) Q:'Z  S IBDA=IBDA+1,IBDA(IBDA)=+$G(^TMP("IBPRV_INS_ID",$J,"ZIDX",Z))_U_$G(^(Z,"PRV"))
"RTN","IBCEP0",169,0)
 Q
"RTN","IBCEP0",170,0)
 ;
"RTN","IBCEP0",171,0)
ENX(IBINS1) ; Insurance co level defaults for all providers or
"RTN","IBCEP0",172,0)
 ; for all providers by care unit
"RTN","IBCEP0",173,0)
 N DIC,DIE,DR,DA,X,Y,DLAYGO
"RTN","IBCEP0",174,0)
 I '$G(IBINS1) D  G:'$G(IBINS1) ENQ
"RTN","IBCEP0",175,0)
 . S DIC="^IBA(355.91,",DIC(0)="AELMQ",DLAYGO=355.91 D ^DIC
"RTN","IBCEP0",176,0)
 . I Y>0 S IBINS1=+Y
"RTN","IBCEP0",177,0)
 S DIE="^IBA(355.91,",DA=IBINS1,DR=".01;.06;.04;.05;.03;.07" D ^DIE
"RTN","IBCEP0",178,0)
 ;
"RTN","IBCEP0",179,0)
ENQ Q
"RTN","IBCEP0",180,0)
 ;
"RTN","IBCEP0",181,0)
PPTYP(IBINS) ; Returns the ien of the default performing provider type for 
"RTN","IBCEP0",182,0)
 ;  insurance company IBINS (ien file 36)
"RTN","IBCEP0",183,0)
 Q +$G(^DIC(36,+IBINS,4))
"RTN","IBCEP0",184,0)
 ;
"RTN","IBCEP0",185,0)
SCREEN(WHICH) ; This screen is used the menu protocol to screen out the ID functions if it is a child ins co
"RTN","IBCEP0",186,0)
 Q:'$G(DA) 0
"RTN","IBCEP0",187,0)
 Q:'$G(DA(1)) 0
"RTN","IBCEP0",188,0)
 N FILE,IENS,FIELD,FLAG,TARGET
"RTN","IBCEP0",189,0)
 S FILE=101.01,IENS=DA_","_DA(1),FIELD=".01",FLAG="I"
"RTN","IBCEP0",190,0)
 D GETS^DIQ(FILE,IENS,FIELD,FLAG,"TARGET")
"RTN","IBCEP0",191,0)
 Q:'$D(TARGET) 0
"RTN","IBCEP0",192,0)
 N IEN
"RTN","IBCEP0",193,0)
 S IEN=$G(TARGET(FILE,IENS_",",FIELD,FLAG))
"RTN","IBCEP0",194,0)
 Q:'+IEN 0
"RTN","IBCEP0",195,0)
 S FILE=101,FIELD=1,FLAG="E"
"RTN","IBCEP0",196,0)
 K TARGET
"RTN","IBCEP0",197,0)
 D GETS^DIQ(FILE,IEN,FIELD,FLAG,"TARGET")
"RTN","IBCEP0",198,0)
 Q:'$D(TARGET) 0
"RTN","IBCEP0",199,0)
 I $G(TARGET(FILE,IEN_",",FIELD,FLAG))'[WHICH Q 1
"RTN","IBCEP0",200,0)
 Q:'$G(IBINS) 0
"RTN","IBCEP0",201,0)
 N PCF
"RTN","IBCEP0",202,0)
 S PCF=$P($G(^DIC(36,+IBINS,3)),U,13)
"RTN","IBCEP0",203,0)
 I PCF="C" Q 0
"RTN","IBCEP0",204,0)
 Q 1
"RTN","IBCEP2")
0^54^B43750443^B43180010
"RTN","IBCEP2",1,0)
IBCEP2 ;ALB/TMP - EDI UTILITIES for provider ID ;13-DEC-99
"RTN","IBCEP2",2,0)
 ;;2.0;INTEGRATED BILLING;**137,181,232,280,320,349**;21-MAR-94;Build 46
"RTN","IBCEP2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP2",4,0)
 ; DBIA for access to fields 53.2,54.1,54.2 in file 200: 224
"RTN","IBCEP2",5,0)
 ;
"RTN","IBCEP2",6,0)
GETID(IBIFN,IBTYPE,IBPROV,IBSEQ,IBT,IBT1,IBFUNC) ; Extract IBTYPE id for the bill
"RTN","IBCEP2",7,0)
 ; IBIFN = bill ien (file 399)
"RTN","IBCEP2",8,0)
 ; IBTYPE = 2:PERFORMING PROVIDER ID (1 and 3 deleted)
"RTN","IBCEP2",9,0)
 ; IBSEQ = numeric COB sequence of the insurance on bill
"RTN","IBCEP2",10,0)
 ; IBFUNC = 1:REFERRING;2:OPERATING;3:RENDERING;4:ATTENDING;5:SUPERVISING;9:OTHER;
"RTN","IBCEP2",11,0)
 ; Returns IBT = ien of the provider id type^ien of entry^file # for id
"RTN","IBCEP2",12,0)
 ;
"RTN","IBCEP2",13,0)
 S IBT=0
"RTN","IBCEP2",14,0)
 Q:IBTYPE'=2 ""
"RTN","IBCEP2",15,0)
 N IBID,IBPTYP
"RTN","IBCEP2",16,0)
 S IBID=$$IDFIND(IBIFN,"",IBPROV,IBSEQ,1,.IBT,$G(IBFUNC))
"RTN","IBCEP2",17,0)
 I IBID="" S IBT=""
"RTN","IBCEP2",18,0)
 ;
"RTN","IBCEP2",19,0)
 Q IBID
"RTN","IBCEP2",20,0)
 ;
"RTN","IBCEP2",21,0)
IDFIND(IBIFN,IBPTYP,IBPROV,IBSEQ,IBPERF,IBT,IBFUNC) ;Loop thru source levels
"RTN","IBCEP2",22,0)
 ;   (if id definition allows) to find correct ID
"RTN","IBCEP2",23,0)
 ; IBIFN = bill ien (file 399)
"RTN","IBCEP2",24,0)
 ; IBPTYP = ien of the provider id type in file 355.97 or if null,
"RTN","IBCEP2",25,0)
 ;          the default performing provider ID type for the ins co. in
"RTN","IBCEP2",26,0)
 ;          COB sequence IBSEQ will be calculated
"RTN","IBCEP2",27,0)
 ; IBPROV = (variable pointer syntax) provider on bill IBIFN
"RTN","IBCEP2",28,0)
 ; IBSEQ = numeric COB sequence of the bill
"RTN","IBCEP2",29,0)
 ; IBPERF = 1 if the performing provider id is needed
"RTN","IBCEP2",30,0)
 ; IBFUNC = 1:REFERRING;2:OPERATING;3:RENDERING;4:ATTENDING;5:SUPERVISING;9:OTHER;
"RTN","IBCEP2",31,0)
 ; Returns IBT = ptr to file 355.97^entry #^file #
"RTN","IBCEP2",32,0)
 ;
"RTN","IBCEP2",33,0)
 S IBT=+$G(IBPTYP)
"RTN","IBCEP2",34,0)
 Q:'$G(IBPERF)!'$G(IBPROV) ""
"RTN","IBCEP2",35,0)
 N IBSPEC,IBINS,IBINS4,IBSRC,IBUP,IBID,IBALT,IBPROF,Z
"RTN","IBCEP2",36,0)
 I $G(IBSEQ)="" S IBSEQ=+$$COBN^IBCEF(IBIFN) ; Default to current COB seq
"RTN","IBCEP2",37,0)
 S IBINS=+$P($G(^DGCR(399,IBIFN,"I"_IBSEQ)),U),IBINS4=$G(^DIC(36,+IBINS,4))
"RTN","IBCEP2",38,0)
 S IBPROF=($$FT^IBCEF(IBIFN)=2) S:'IBPROF IBPROF=2
"RTN","IBCEP2",39,0)
 ; form type is CMS-1500 (prof)=1, UB-04 (inst)=2
"RTN","IBCEP2",40,0)
 I $G(IBPTYP)="",$G(IBFUNC)=1,IBPROF=1 S (IBT,IBPTYP)=+$P(IBINS4,U,4) ; Referring Default ID on CMS-1500
"RTN","IBCEP2",41,0)
 I $G(IBPTYP)="" S (IBT,IBPTYP)=+$P(IBINS4,U,IBPROF) ; Def to perf prv typ for form
"RTN","IBCEP2",42,0)
 I 'IBPTYP Q ""  ; No default id type
"RTN","IBCEP2",43,0)
 S IBSPEC=$G(^IBE(355.97,IBPTYP,1)),IBSRC=$P($G(^IBE(355.97,+IBPTYP,0)),U,2),IBSRC=$S('IBSRC:5,1:IBSRC),IBUP=1
"RTN","IBCEP2",44,0)
 S IBALT=0
"RTN","IBCEP2",45,0)
 ;
"RTN","IBCEP2",46,0)
 F  D  Q:'IBUP!($G(IBID)'="")  S IBSRC=IBSRC-1 Q:'IBSRC
"RTN","IBCEP2",47,0)
 . ;
"RTN","IBCEP2",48,0)
 . I IBSRC=1,$TR($P(IBSPEC,U,1,3),"^0")'="" D  Q  ; Indiv prov default
"RTN","IBCEP2",49,0)
 .. N IBSTATE
"RTN","IBCEP2",50,0)
 .. I $P(IBSPEC,U,2) D  Q  ; Federal DEA # from field 53.2 file 200
"RTN","IBCEP2",51,0)
 ... S IBID=$P($G(^VA(200,+IBPROV,"PS")),U,2) ; DBIA224
"RTN","IBCEP2",52,0)
 ... S $P(IBT,U,2,3)=(IBPROV_U_200)
"RTN","IBCEP2",53,0)
 .. S IBSTATE=+$$CAREST^IBCEP2A(IBIFN)
"RTN","IBCEP2",54,0)
 .. I $P(IBSPEC,U) D  Q  ; State issued DEA # needed
"RTN","IBCEP2",55,0)
 ... Q:'IBSTATE
"RTN","IBCEP2",56,0)
 ... ; Extract the state issuing DEA # from field 54.2 file 200
"RTN","IBCEP2",57,0)
 ... S Z=+$O(^VA(200,+IBPROV,"PS2","B",IBSTATE,0)),IBID=$P($G(^VA(200,+IBPROV,"PS2",Z,0)),U,2) ; DBIA224
"RTN","IBCEP2",58,0)
 ... S $P(IBT,U,2,3)=(+IBPROV_";"_Z_U_200)
"RTN","IBCEP2",59,0)
 .. I $P(IBSPEC,U,3) D  Q  ; State license # needed
"RTN","IBCEP2",60,0)
 ... Q:'IBSTATE
"RTN","IBCEP2",61,0)
 ... ; Extract the state license # from field 54.1 file 200
"RTN","IBCEP2",62,0)
 ... I IBPROV["VA(200" S Z=+$O(^VA(200,+IBPROV,"PS1","B",IBSTATE,0)),IBID=$P($G(^VA(200,+IBPROV,"PS1",Z,0)),U,2),$P(IBT,U,2,3)=(+IBPROV_";"_IBSTATE_U_200) ; DBIA224
"RTN","IBCEP2",63,0)
 ... I IBPROV["IBA(355.93" S IBID=$P($G(^IBA(355.93,+IBPROV,0)),U,12),$P(IBT,U,2,3)=(+IBPROV_U_355.93)
"RTN","IBCEP2",64,0)
 . ;
"RTN","IBCEP2",65,0)
 . I IBSRC=2,$P(IBSPEC,U,4) D  Q  ; FACILITY FED TAX ID #
"RTN","IBCEP2",66,0)
 .. N IBXDATA
"RTN","IBCEP2",67,0)
 .. D F^IBCEF("N-FEDERAL TAX ID",,,IBIFN)
"RTN","IBCEP2",68,0)
 .. S IBID=IBXDATA,$P(IBT,U,2,3)=(U_350.9)
"RTN","IBCEP2",69,0)
 . ;
"RTN","IBCEP2",70,0)
 . I IBSRC=1 S IBID=$$SRC1(IBIFN,"*ALL*",IBPTYP,IBPROV,.IBT) Q
"RTN","IBCEP2",71,0)
 . ;
"RTN","IBCEP2",72,0)
 . I IBSRC=2 S IBID=$$SRC2(IBPTYP,.IBT) Q
"RTN","IBCEP2",73,0)
 . ;
"RTN","IBCEP2",74,0)
 . I IBSRC=3 S IBID=$$SRC3(IBIFN,IBINS,IBPTYP,.IBT) Q
"RTN","IBCEP2",75,0)
 . ; 
"RTN","IBCEP2",76,0)
 . I IBSRC=4 S IBID=$$SRC4(IBIFN,IBINS,IBPTYP,IBPROV,.IBT) Q
"RTN","IBCEP2",77,0)
 . ;
"RTN","IBCEP2",78,0)
 . I IBSRC=5 S IBID=$$SRC5(IBIFN,IBINS,IBPTYP,IBSEQ,.IBT,$G(IBFUNC)) Q
"RTN","IBCEP2",79,0)
 . ;
"RTN","IBCEP2",80,0)
 . I IBSRC=6 S IBID=$$SRC6(IBIFN,IBINS,IBPTYP,IBPROV,IBSEQ,.IBT) Q
"RTN","IBCEP2",81,0)
 ;
"RTN","IBCEP2",82,0)
 Q $G(IBID)
"RTN","IBCEP2",83,0)
 ;
"RTN","IBCEP2",84,0)
GETALL(IBTYPE,IBIFN,IBPROV,IBPID) ; Extract all performing prov id's for a
"RTN","IBCEP2",85,0)
 ; provider (IBPROV - vp format) on bill IBIFN
"RTN","IBCEP2",86,0)
 ; IBTYPE = type of ID to return (see GETID above)
"RTN","IBCEP2",87,0)
 ;
"RTN","IBCEP2",88,0)
 ; Returns array IBPID(COB SEQ #)=id (pass by reference) AND
"RTN","IBCEP2",89,0)
 ;   IBPID(COB SEQ #,1)=ien of id type (ptr to 355.97)
"RTN","IBCEP2",90,0)
 ;   IBPID = current insurance co's id
"RTN","IBCEP2",91,0)
 ;
"RTN","IBCEP2",92,0)
 N Z,COB,Z1,IBT
"RTN","IBCEP2",93,0)
 S COB=$$COBN^IBCEF(IBIFN)
"RTN","IBCEP2",94,0)
 F Z=1:1:3 Q:'$D(^DGCR(399,IBIFN,"I"_Z))  S IBPID(Z)=$$GETID(IBTYPE,IBIFN,IBPROV,Z,.IBT),IBPID(Z,1)=IBT I Z=COB S Z1=IBPID(Z)
"RTN","IBCEP2",95,0)
 Q $G(Z1)
"RTN","IBCEP2",96,0)
 ;
"RTN","IBCEP2",97,0)
SRC1(IBIFN,IBINS,IBPTYP,IBPROV,IBT) ; Licensing/gov't issued # - provider specific
"RTN","IBCEP2",98,0)
 ; Parameter definitions for SRC1, SRC3, SRC4, SRC5, SRC6:
"RTN","IBCEP2",99,0)
 ;   IBIFN = ien of bill (file 399)
"RTN","IBCEP2",100,0)
 ;   IBINS = ien of insurance co (file 36) or *ALL* for all insurance
"RTN","IBCEP2",101,0)
 ;           (always *ALL* for SRC1)
"RTN","IBCEP2",102,0)
 ;   IBPTYP = ien of the provider id type in file 355.97
"RTN","IBCEP2",103,0)
 ;   IBPROV = (variable pointer syntax) provider on bill IBIFN
"RTN","IBCEP2",104,0)
 ;   IBT = returned as type ien^file ien^file #
"RTN","IBCEP2",105,0)
 ;
"RTN","IBCEP2",106,0)
 N IBID,IB,IBRX,IBIDSV
"RTN","IBCEP2",107,0)
 S IBID="",IB=0,IBRX=$$ISRX^IBCEF1(IBIFN),IBIDSV=""
"RTN","IBCEP2",108,0)
 I $G(IBPROV) F  S IB=$O(^IBA(355.9,"AD",IBPTYP,IBPROV,IBINS,IB)) Q:'IB  D  Q:IBID'=""
"RTN","IBCEP2",109,0)
 . S IBID=$$UNIQ1(IBIFN,IBINS,IBPTYP,IBPROV,"",IB)
"RTN","IBCEP2",110,0)
 . I IBRX,$P($G(^IBA(355.9,IB,0)),U,5)'=3 S:IBIDSV="" IBIDSV=IBID S IBID="" ; Save 1st 'match' if no rx specific id
"RTN","IBCEP2",111,0)
 I IBID="",IBIDSV'="" S IBID=IBIDSV
"RTN","IBCEP2",112,0)
 Q IBID
"RTN","IBCEP2",113,0)
 ;
"RTN","IBCEP2",114,0)
SRC2(IB35597,IBT) ; Facility default - all providers
"RTN","IBCEP2",115,0)
 ; IB35597 = ien of the provider id type entry in file 355.97
"RTN","IBCEP2",116,0)
 ; IBT = returned as type ien^file ien^file #
"RTN","IBCEP2",117,0)
 ;
"RTN","IBCEP2",118,0)
 S $P(IBT,U,2,3)=(+IB35597_U_355.97)
"RTN","IBCEP2",119,0)
 Q $P($G(^IBE(355.97,+IB35597,0)),U,4)
"RTN","IBCEP2",120,0)
 ;
"RTN","IBCEP2",121,0)
SRC3(IBIFN,IBINS,IBPTYP,IBT) ; Ins co/all providers
"RTN","IBCEP2",122,0)
 ; See SRC1 for parameter definitions
"RTN","IBCEP2",123,0)
 N IB,IBID,IBRX,IBIDSV
"RTN","IBCEP2",124,0)
 S IBID="",IB=0,IBRX=$$ISRX^IBCEF1(IBIFN),IBIDSV=""
"RTN","IBCEP2",125,0)
 F  S IB=$O(^IBA(355.91,"AC",IBINS,IBPTYP,"*N/A*",IB)) Q:'IB  D  Q:IBID'=""
"RTN","IBCEP2",126,0)
 . S IBID=$$UNIQ2(IBIFN,IBINS,IBPTYP,"",IB,.IBT)
"RTN","IBCEP2",127,0)
 . I IBRX,$P($G(^IBA(355.91,IB,0)),U,5)'=3 S:IBIDSV="" IBIDSV=IBID S IBID="" ; Save 1st 'match' if no rx specific id
"RTN","IBCEP2",128,0)
 I IBID="",IBIDSV'="" S IBID=IBIDSV
"RTN","IBCEP2",129,0)
 Q IBID
"RTN","IBCEP2",130,0)
 ;
"RTN","IBCEP2",131,0)
SRC4(IBIFN,IBINS,IBPTYP,IBPROV,IBT) ;  Insurance co/individual provider
"RTN","IBCEP2",132,0)
 ; See SRC1 for parameter definitions
"RTN","IBCEP2",133,0)
 ;
"RTN","IBCEP2",134,0)
 N IBID,IB,IBRX,IBIDSV
"RTN","IBCEP2",135,0)
 S IBID="",IB=0,IBRX=$$ISRX^IBCEF1(IBIFN),IBIDSV=""
"RTN","IBCEP2",136,0)
 I $G(IBPROV) F  S IB=$O(^IBA(355.9,"AD",IBPTYP,IBPROV,IBINS,IB)) Q:'IB  D  Q:IBID'=""
"RTN","IBCEP2",137,0)
 . S IBID=$$UNIQ1(IBIFN,IBINS,IBPTYP,IBPROV,"",IB,.IBT)
"RTN","IBCEP2",138,0)
 . I IBRX,$P($G(^IBA(355.9,IB,0)),U,5)'=3 S:IBIDSV="" IBIDSV=IBID S IBID="" ; Save 1st 'match' if no rx specific id
"RTN","IBCEP2",139,0)
 I IBID="",IBIDSV'="" S IBID=IBIDSV
"RTN","IBCEP2",140,0)
 Q IBID
"RTN","IBCEP2",141,0)
 ;
"RTN","IBCEP2",142,0)
SRC5(IBIFN,IBINS,IBPTYP,IBSEQ,IBT,IBFUNC) ; Ins co/all providers/care unit
"RTN","IBCEP2",143,0)
 ; See SRC1 for missing parameter definitions
"RTN","IBCEP2",144,0)
 ; IBSEQ = the numeric COB sequence of the insurance on the bill
"RTN","IBCEP2",145,0)
 ;
"RTN","IBCEP2",146,0)
 N IBP,IBUNIT,IBID,IB,Z,IBIDSV,IBRX
"RTN","IBCEP2",147,0)
 S IBID="",Z=0,IBRX=$$ISRX^IBCEF1(IBIFN),IBIDSV=""
"RTN","IBCEP2",148,0)
 S IBP=+$O(^DGCR(399,IBIFN,"PRV","B",$S($G(IBFUNC)=1:1,$$FT^IBCEF(IBIFN)=3:4,1:3),0)),IBUNIT=$P($G(^DGCR(399,IBIFN,"PRV",IBP,0)),U,8+IBSEQ)
"RTN","IBCEP2",149,0)
 I IBUNIT'="" F  S Z=$O(^IBA(355.96,"AC",IBINS,IBPTYP,Z)) Q:'Z  D  Q:IBID'=""
"RTN","IBCEP2",150,0)
 . S IB=0 F  S IB=$O(^IBA(355.91,"ACARE",Z,IB)) Q:'IB  D  Q:IBID'=""
"RTN","IBCEP2",151,0)
 .. S IBID=$$UNIQ2(IBIFN,IBINS,IBPTYP,IBUNIT,IB,.IBT)
"RTN","IBCEP2",152,0)
 .. I IBRX,$P($G(^IBA(355.91,IB,0)),U,5)'=3 S:IBIDSV="" IBIDSV=IBID S IBID="" ; Save 1st 'match' if no rx specific id
"RTN","IBCEP2",153,0)
 I IBID="",IBIDSV'="" S IBID=IBIDSV
"RTN","IBCEP2",154,0)
 Q IBID
"RTN","IBCEP2",155,0)
 ;
"RTN","IBCEP2",156,0)
SRC6(IBIFN,IBINS,IBPTYP,IBPROV,IBSEQ,IBT) ; Ins co/ind provider/care unit
"RTN","IBCEP2",157,0)
 ; See SRC1 for missing parameter definitions
"RTN","IBCEP2",158,0)
 ; IBSEQ = the numeric COB sequence of the insurance on the bill
"RTN","IBCEP2",159,0)
 ;
"RTN","IBCEP2",160,0)
 N IBUNIT,IBP,IBID,IB
"RTN","IBCEP2",161,0)
 S IBID="",IB=0
"RTN","IBCEP2",162,0)
 S IBP=+$O(^DGCR(399,"PRV","B",$S($$FT^IBCEF(IBIFN)=3:3,1:4),0)),IBUNIT=$P($G(^DGCR(399,IBIFN,"PRV",IBP,0)),U,8+IBSEQ)
"RTN","IBCEP2",163,0)
 I $G(IBPROV),IBUNIT'="" F  S IB=$O(^IBA(355.9,"AD",IBPTYP,IBPROV,IBINS,IB)) Q:'IB  D  Q:IBID'=""
"RTN","IBCEP2",164,0)
 . S IBID=$$UNIQ1(IBIFN,IBINS,IBPTYP,IBPROV,IBUNIT,IB,.IBT)
"RTN","IBCEP2",165,0)
 Q IBID
"RTN","IBCEP2",166,0)
 ;
"RTN","IBCEP2",167,0)
UNIQ1(IBIFN,IBINS,IBPTYP,IBPROV,IBUNIT,IBCU,IBT) ; Match most-least specific
"RTN","IBCEP2",168,0)
 ; *** SEE PARAMETER DEFINITIONS IN IBCEP3 ***
"RTN","IBCEP2",169,0)
 ;
"RTN","IBCEP2",170,0)
 ; Start in file 355.9 (Specific Provider)
"RTN","IBCEP2",171,0)
 ;   IBPROV = (variable pointer syntax) provider on bill IBIFN
"RTN","IBCEP2",172,0)
 ;
"RTN","IBCEP2",173,0)
 Q $$UNIQ1^IBCEP2A($G(IBIFN),$G(IBINS),$G(IBPTYP),$G(IBPROV),$G(IBUNIT),$G(IBCU),$G(IBT))
"RTN","IBCEP2",174,0)
 ;
"RTN","IBCEP2",175,0)
UNIQ2(IBIFN,IBINS,IBPTYP,IBUNIT,IBCU,IBT) ; Match on most-least specific
"RTN","IBCEP2",176,0)
 ; *** SEE PARAMETER DEFINITIONS IN IBCEP3 ***
"RTN","IBCEP2",177,0)
 ;
"RTN","IBCEP2",178,0)
 ; Start in file 355.91 (Specific Insurance)
"RTN","IBCEP2",179,0)
 ;
"RTN","IBCEP2",180,0)
 Q $$UNIQ2^IBCEP2A($G(IBIFN),$G(IBINS),$G(IBPTYP),$G(IBUNIT),$G(IBCU),$G(IBT))
"RTN","IBCEP2A")
0^55^B43323915^B42797265
"RTN","IBCEP2A",1,0)
IBCEP2A ;ALB/TMP - EDI UTILITIES for provider ID ;25-APR-01
"RTN","IBCEP2A",2,0)
 ;;2.0;INTEGRATED BILLING;**137,232,320,348,349**;21-MAR-94;Build 46
"RTN","IBCEP2A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP2A",4,0)
 ;
"RTN","IBCEP2A",5,0)
ALT(IBPERF,IBSRC,IBALT,IBINS4,IBPTYP) ; set source level to next higher level 
"RTN","IBCEP2A",6,0)
 ; or set the alternate type and source if performing provider id
"RTN","IBCEP2A",7,0)
 ; alternate type and source exist
"RTN","IBCEP2A",8,0)
 ; IBPERF = 1 if performing provider id is requested
"RTN","IBCEP2A",9,0)
 ; IBINS4 = '4' node of insurance co (file 36)
"RTN","IBCEP2A",10,0)
 ; Pass IBPTYP by reference to get alternate provider id type
"RTN","IBCEP2A",11,0)
 ; Pass IBALT by reference.  Set to 1 if alternate id is to be used next
"RTN","IBCEP2A",12,0)
 ;
"RTN","IBCEP2A",13,0)
 I '$G(IBPERF)!($P(IBINS4,U,3)=1) S IBSRC=IBSRC-1 G ALTQ
"RTN","IBCEP2A",14,0)
 S IBSRC=""
"RTN","IBCEP2A",15,0)
 I '$G(IBALT),$P(IBINS4,U,3)=2,$P(IBINS4,U,10),$P(IBINS4,U,11) S IBALT=1,IBSRC=$P(IBINS4,U,11),IBPTYP=$P(IBINS4,U,10) S:IBPTYP="" IBPTYP=$P(IBINS4,U)
"RTN","IBCEP2A",16,0)
 ;
"RTN","IBCEP2A",17,0)
ALTQ Q IBSRC
"RTN","IBCEP2A",18,0)
 ;
"RTN","IBCEP2A",19,0)
IDSET(IBPTYP,IBINS4,IBPERF,IBSPEC,IBSRC,IBUP) ; set variables for provider id type search
"RTN","IBCEP2A",20,0)
 N Z
"RTN","IBCEP2A",21,0)
 S IBSPEC=$G(^IBE(355.97,+IBPTYP,1))
"RTN","IBCEP2A",22,0)
 S Z=$S($G(IBPERF):2,$P(IBSPEC,U,5):6,$P(IBSPEC,U,6):4,1:2)
"RTN","IBCEP2A",23,0)
 S IBSRC=$P(IBINS4,U,Z),IBUP=$P(IBINS4,U,$S(IBSRC:Z+1,1:0))
"RTN","IBCEP2A",24,0)
 Q
"RTN","IBCEP2A",25,0)
 ;
"RTN","IBCEP2A",26,0)
CAREST(IBIFN) ; Return state file ien of state where care was performed
"RTN","IBCEP2A",27,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEP2A",28,0)
 ; Get it from rendering facility or if none, the billing facility
"RTN","IBCEP2A",29,0)
 N Z,IBXDATA,STATE
"RTN","IBCEP2A",30,0)
 S STATE=""
"RTN","IBCEP2A",31,0)
 D F^IBCEF("N-RENDERING INSTITUTION",,,IBIFN)
"RTN","IBCEP2A",32,0)
 I IBXDATA D
"RTN","IBCEP2A",33,0)
 . I '$P(IBXDATA,U,2) S STATE=+$P($G(^DIC(4,+IBXDATA,0)),U,2) Q
"RTN","IBCEP2A",34,0)
 . S STATE=+$P($G(^IBA(355.93,+IBXDATA,0)),U,7)
"RTN","IBCEP2A",35,0)
 E  D
"RTN","IBCEP2A",36,0)
 . D F^IBCEF("N-AGENT CASHIER STATE",,,IBIFN)
"RTN","IBCEP2A",37,0)
 . S STATE=IBXDATA
"RTN","IBCEP2A",38,0)
 Q STATE
"RTN","IBCEP2A",39,0)
 ;
"RTN","IBCEP2A",40,0)
RECALCA(IBIFN) ; Recalculate all performing provider id's on bill IBIFN
"RTN","IBCEP2A",41,0)
 ; IBIFN = ien of bill entry (file 399)
"RTN","IBCEP2A",42,0)
 N IBZ,IBZ0,IBX,IBP,IBSEQ,DA,DIE,DR,DIR,X,Y
"RTN","IBCEP2A",43,0)
 ;
"RTN","IBCEP2A",44,0)
 D EN^DDIOL("THIS FUNCTION HAS BEEN DISABLED",,"!") Q
"RTN","IBCEP2A",45,0)
 ;
"RTN","IBCEP2A",46,0)
 S DA(1)=IBIFN
"RTN","IBCEP2A",47,0)
 I '$D(^XUSEC("IB SUPERVISOR",DUZ)) D EN^DDIOL("YOU ARE NOT AUTHORIZED TO PERFORM THIS FUNCTION",,"!")
"RTN","IBCEP2A",48,0)
 S IBZ=0 F  S IBZ=$O(^DGCR(399,IBIFN,"PRV",IBZ)) Q:'IBZ  S IBP=$G(^(IBZ,0)) I $P(IBP,U,2)'="" D
"RTN","IBCEP2A",49,0)
 . S DA=IBZ
"RTN","IBCEP2A",50,0)
 . F IBZ0=5:1:7 Q:'$G(^DGCR(399,IBIFN,"I"_(IBZ0-4)))  D
"RTN","IBCEP2A",51,0)
 .. S IBSEQ=$$EXPAND^IBTRE(399.0222,.01,+IBP)_" "_$P("PRIMARY^SECONDARY^TERTIARY",U,IBZ0-4)_" PROVIDER ID "
"RTN","IBCEP2A",52,0)
 .. S IBX=$$RECALC(.DA,IBZ0-4,$P(IBP,U,IBZ0),1)
"RTN","IBCEP2A",53,0)
 .. I IBX'="",IBX=$P(IBP,U,IBZ0) D EN^DDIOL(IBSEQ_"NO CHANGE NEEDED",,"!") Q
"RTN","IBCEP2A",54,0)
 .. I IBX'="",IBX'=$P(IBP,U,IBZ0) D  Q
"RTN","IBCEP2A",55,0)
 ... S DR=(IBZ0/100)_"////"_IBX,DIE="^DGCR(399,"_DA(1)_",""PRV""," D ^DIE
"RTN","IBCEP2A",56,0)
 ... D EN^DDIOL(IBSEQ_"CHANGED TO "_IBX,,"!")
"RTN","IBCEP2A",57,0)
 .. D EN^DDIOL(IBSEQ_"NOT FOUND",,"!")
"RTN","IBCEP2A",58,0)
 Q
"RTN","IBCEP2A",59,0)
 ;
"RTN","IBCEP2A",60,0)
RECALC(IBDA,IBSEQ,IBX,IBD) ; Recalculate id #, if possible - called
"RTN","IBCEP2A",61,0)
 ;   from input transforms in subfile 399.0222, fields .05-.07
"RTN","IBCEP2A",62,0)
 ; IBDA = DA array of the provider entry (file 399.0222)
"RTN","IBCEP2A",63,0)
 ; IBSEQ = the numeric COB sequence of the provider id (1-3)
"RTN","IBCEP2A",64,0)
 ; IBX = the current value of the id in the subfile
"RTN","IBCEP2A",65,0)
 ; IBD = flag that if set to 1 will suppress the display text
"RTN","IBCEP2A",66,0)
 ;
"RTN","IBCEP2A",67,0)
 N IBPN,IBZ
"RTN","IBCEP2A",68,0)
 S IBPN=$P($G(^DGCR(399,IBDA(1),"PRV",IBDA,0)),U,2)
"RTN","IBCEP2A",69,0)
 I IBPN="" D:'$G(IBD) EN^DDIOL("   CAN'T CALCULATE WITHOUT A PROVIDER NAME","","?0") G RECALCQ
"RTN","IBCEP2A",70,0)
 S IBZ=$$GETID^IBCEP2(IBDA(1),2,IBPN,IBSEQ)
"RTN","IBCEP2A",71,0)
 I IBZ="" D:'$G(IBD) EN^DDIOL("   ID COULD NOT BE DETERMINED","","?0") G RECALCQ
"RTN","IBCEP2A",72,0)
 D:'$G(IBD) EN^DDIOL("  "_IBZ_$S(IBZ'=IBX:"",1:" (no change)"),"","?0")
"RTN","IBCEP2A",73,0)
 S IBX=IBZ
"RTN","IBCEP2A",74,0)
 ;
"RTN","IBCEP2A",75,0)
RECALCQ Q IBX
"RTN","IBCEP2A",76,0)
 ;
"RTN","IBCEP2A",77,0)
PERFPRV(IBIFN) ; Returns the variable pointer of the 'performing provider'
"RTN","IBCEP2A",78,0)
 ; (attending or rendering) for a bill IBIFN
"RTN","IBCEP2A",79,0)
 N IBP,IBPT,IBQ,Z
"RTN","IBCEP2A",80,0)
 S Z=$$FT^IBCEF(IBIFN),IBPT=$S(Z=2:3,Z=3:4,1:0)
"RTN","IBCEP2A",81,0)
 D GETPRV^IBCEU(IBIFN,IBPT,.IBP)
"RTN","IBCEP2A",82,0)
 Q $P($G(IBP(IBPT,1)),U,3)
"RTN","IBCEP2A",83,0)
 ;
"RTN","IBCEP2A",84,0)
INSPAR(IBIFN,SEQ) ;
"RTN","IBCEP2A",85,0)
 N Z,Z4,Z0
"RTN","IBCEP2A",86,0)
 Q:$G(X)'="??"
"RTN","IBCEP2A",87,0)
 S:'$G(SEQ) SEQ=$$COBN^IBCEF(IBIFN)
"RTN","IBCEP2A",88,0)
 S Z=+$G(^DGCR(399,IBIFN,"I"_SEQ)),Z4=$G(^DIC(36,Z,4))
"RTN","IBCEP2A",89,0)
 I Z D
"RTN","IBCEP2A",90,0)
 . D EN^DDIOL(">"_$J("",20)_"-- PERFORMING PROVIDER ID PARAMETERS --",,"!")
"RTN","IBCEP2A",91,0)
 . S Z0=$P("  PRIMARY^SECONDARY^ TERTIARY",U,SEQ)_" INSURANCE: "_$P($G(^DIC(36,Z,0)),U)
"RTN","IBCEP2A",92,0)
 . D EN^DDIOL(">"_$J("",(80-$L(Z0))\2)_Z0,,"!")
"RTN","IBCEP2A",93,0)
 . D EN^DDIOL(">  Secondary Perf Prov ID Type (1500): "_$$EXPAND^IBTRE(36,4.01,+Z4),,"!")
"RTN","IBCEP2A",94,0)
 . D EN^DDIOL(">  Secondary Perf Prov ID Type (UB04): "_$$EXPAND^IBTRE(36,4.02,$P(Z4,U,2)),,"!")
"RTN","IBCEP2A",95,0)
 . D EN^DDIOL(">    Secondary Perf Prov IDs Required: "_$$EXPAND^IBTRE(36,4.03,$P(Z4,U,3)),,"!")
"RTN","IBCEP2A",96,0)
 . D EN^DDIOL(" ",,"!")
"RTN","IBCEP2A",97,0)
 Q
"RTN","IBCEP2A",98,0)
 ;
"RTN","IBCEP2A",99,0)
GETTYP(IBXIEN,IBCOBN,IBFUNC) ; Function returns provider id type for insurance co
"RTN","IBCEP2A",100,0)
 ; with COB of IBCOBN on claim ien IBXIEN in first ^ pc and 1 in second
"RTN","IBCEP2A",101,0)
 ; ^ piece if the id is required
"RTN","IBCEP2A",102,0)
 ; 
"RTN","IBCEP2A",103,0)
 ; IBFUNC=1:REFERRING;2:OPERATING;3:RENDERING;4:ATTENDING;5:SUPERVISING;9:OTHER
"RTN","IBCEP2A",104,0)
 ; 
"RTN","IBCEP2A",105,0)
 N A,R,Z,Z0
"RTN","IBCEP2A",106,0)
 S A="",R=0
"RTN","IBCEP2A",107,0)
 S:'$G(IBCOBN)!(IBCOBN>3) IBCOBN=$$COBN^IBCEF(IBXIEN)
"RTN","IBCEP2A",108,0)
 S Z=+$G(^DGCR(399,IBXIEN,"I"_+IBCOBN))
"RTN","IBCEP2A",109,0)
 I Z D
"RTN","IBCEP2A",110,0)
 . S Z0=$$FT^IBCEF(IBXIEN)
"RTN","IBCEP2A",111,0)
 . S A=+$P($G(^DIC(36,Z,4)),U,$S(Z0=2&($G(IBFUNC)=1):4,Z0=2:1,1:2))
"RTN","IBCEP2A",112,0)
 . I A,$G(IBFUNC)'=1 S R=$P($G(^DIC(36,Z,4)),U,3),R=$S('R:0,R=3:1,R=1:Z0=2,R=2:Z0=3,1:0)
"RTN","IBCEP2A",113,0)
 . I A,$G(IBFUNC)=1 S R=+$P($G(^DIC(36,Z,4)),U,5),R=$S('R:0,Z0'=2:0,1:1)
"RTN","IBCEP2A",114,0)
 Q A_U_R
"RTN","IBCEP2A",115,0)
 ;
"RTN","IBCEP2A",116,0)
UNIQ1(IBIFN,IBINS,IBPTYP,IBPROV,IBUNIT,IBCU,IBT) ; Match most-least specific
"RTN","IBCEP2A",117,0)
 ; *** SEE PARAMETER DEFINITIONS IN IBCEP3 ***
"RTN","IBCEP2A",118,0)
 ;
"RTN","IBCEP2A",119,0)
 ; Start in file 355.9 (Specific Provider)
"RTN","IBCEP2A",120,0)
 ;   IBPROV = (variable pointer syntax) provider on bill IBIFN
"RTN","IBCEP2A",121,0)
 ;
"RTN","IBCEP2A",122,0)
 N Q,Z0,Z1,Z2,IBID,IBX
"RTN","IBCEP2A",123,0)
 S IBID=""
"RTN","IBCEP2A",124,0)
 S IBX=$P($G(^IBA(355.9,+IBCU,0)),U,3) S:"0"[IBX IBX="*N/A*"
"RTN","IBCEP2A",125,0)
 S Z0=$$FT^IBCEF(IBIFN),Z0=$S(Z0=2:2,Z0=3:1,1:0),Z1=$$INPAT^IBCEF(IBIFN,1) S:'Z1 Z1=2 S Z2=$$ISRX^IBCEF1(IBIFN)
"RTN","IBCEP2A",126,0)
 ;
"RTN","IBCEP2A",127,0)
 ; Match all elements
"RTN","IBCEP2A",128,0)
 F Q=$S(Z2:3,1:Z1),$S(Z2:Z1,1:"") I Q'="",$D(^IBA(355.9,"AUNIQ",IBPROV,IBINS,IBX,Z0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.9,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.9) Q
"RTN","IBCEP2A",129,0)
 G:IBID'="" UNIQ1Q
"RTN","IBCEP2A",130,0)
 ;
"RTN","IBCEP2A",131,0)
 ; Match both form types,specific I/O element
"RTN","IBCEP2A",132,0)
 F Q=$S(Z2:3,1:Z1),$S(Z2:Z1,1:"") I Q'="",$D(^IBA(355.9,"AUNIQ",IBPROV,IBINS,IBX,0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.9,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.9) Q
"RTN","IBCEP2A",133,0)
 G:IBID'="" UNIQ1Q
"RTN","IBCEP2A",134,0)
 ;
"RTN","IBCEP2A",135,0)
 ; Match specific form type, both I/O element or Rx
"RTN","IBCEP2A",136,0)
 F Q=$S(Z2:3,1:0),$S(Z2:0,1:"") I Q'="",$D(^IBA(355.9,"AUNIQ",IBPROV,IBINS,IBX,Z0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.9,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.9) Q
"RTN","IBCEP2A",137,0)
 G:IBID'="" UNIQ1Q
"RTN","IBCEP2A",138,0)
 ;
"RTN","IBCEP2A",139,0)
 ; Match both form types, both I/O element or Rx
"RTN","IBCEP2A",140,0)
 F Q=$S(Z2:3,1:0),$S(Z2:0,1:"") I Q'="",$D(^IBA(355.9,"AUNIQ",IBPROV,IBINS,IBX,0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.9,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.9) Q
"RTN","IBCEP2A",141,0)
 ;
"RTN","IBCEP2A",142,0)
UNIQ1Q Q IBID
"RTN","IBCEP2A",143,0)
 ;
"RTN","IBCEP2A",144,0)
UNIQ2(IBIFN,IBINS,IBPTYP,IBUNIT,IBCU,IBT) ; Match on most-least specific
"RTN","IBCEP2A",145,0)
 ; *** SEE PARAMETER DEFINITIONS IN IBCEP3 ***
"RTN","IBCEP2A",146,0)
 ;
"RTN","IBCEP2A",147,0)
 ; Start in file 355.91 (Specific Insurance)
"RTN","IBCEP2A",148,0)
 ;
"RTN","IBCEP2A",149,0)
 N Q,Z0,Z1,Z2,IBID,IBX
"RTN","IBCEP2A",150,0)
 S IBID="" S:"0"[$G(IBUNIT) IBUNIT="*N/A*"
"RTN","IBCEP2A",151,0)
 S Z0=$$FT^IBCEF(IBIFN),Z0=$S(Z0=2:2,Z0=3:1,1:0),Z1=$$INPAT^IBCEF(IBIFN,1) S:'Z1 Z1=2 S Z2=$$ISRX^IBCEF1(IBIFN)
"RTN","IBCEP2A",152,0)
 ;
"RTN","IBCEP2A",153,0)
 ; Match all elements
"RTN","IBCEP2A",154,0)
 F Q=$S(Z2:3,1:Z1),$S(Z2:Z1,1:"") I Q'="",$D(^IBA(355.91,"AUNIQ",IBINS,IBUNIT,Z0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.91,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.91) Q
"RTN","IBCEP2A",155,0)
 G:IBID'="" UNIQ2Q
"RTN","IBCEP2A",156,0)
 ;
"RTN","IBCEP2A",157,0)
 ; Match both form types,specific I/O element
"RTN","IBCEP2A",158,0)
 F Q=$S(Z2:3,1:Z1),$S(Z2:Z1,1:"") I Q'="",$D(^IBA(355.91,"AUNIQ",IBINS,IBUNIT,0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.91,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.91) Q
"RTN","IBCEP2A",159,0)
 G:IBID'="" UNIQ2Q
"RTN","IBCEP2A",160,0)
 ;
"RTN","IBCEP2A",161,0)
 ; Match specific form type, both I/O element or Rx
"RTN","IBCEP2A",162,0)
 F Q=$S(Z2:3,1:0),$S(Z2:0,1:"") I Q'="",$D(^IBA(355.91,"AUNIQ",IBINS,IBUNIT,Z0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.91,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.91) Q
"RTN","IBCEP2A",163,0)
 G:IBID'="" UNIQ2Q
"RTN","IBCEP2A",164,0)
 ;
"RTN","IBCEP2A",165,0)
 ; Match both form types, both I/O elements or Rx
"RTN","IBCEP2A",166,0)
 F Q=$S(Z2:3,1:0),$S(Z2:0,1:"") I Q'="",$D(^IBA(355.91,"AUNIQ",IBINS,IBUNIT,0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.91,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.91) Q
"RTN","IBCEP2A",167,0)
 ;
"RTN","IBCEP2A",168,0)
UNIQ2Q Q IBID
"RTN","IBCEP2A",169,0)
 ;
"RTN","IBCEP3")
0^56^B36442740^B35967297
"RTN","IBCEP3",1,0)
IBCEP3 ;ALB/TMP - EDI UTILITIES for provider ID ;25-SEP-00
"RTN","IBCEP3",2,0)
 ;;2.0;INTEGRATED BILLING;**137,207,232,280,349**;21-MAR-94;Build 46
"RTN","IBCEP3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP3",4,0)
 ;
"RTN","IBCEP3",5,0)
CUNEED(IBIFN,IBSEQ,IBPTYP,IBRET,IBEMC) ; Determine if care unit needed for
"RTN","IBCEP3",6,0)
 ; provider type and insurance company(s) on bill
"RTN","IBCEP3",7,0)
 ; IBIFN = ien of bill (file 399)
"RTN","IBCEP3",8,0)
 ; IBSEQ = specific COB sequence to check or null for check all
"RTN","IBCEP3",9,0)
 ; IBPTYP = the ien of the provider id type in file 355.97 or if null,
"RTN","IBCEP3",10,0)
 ;          the default performing provider ID type for the ins co's.
"RTN","IBCEP3",11,0)
 ; IBRET = flag to return insurance ien (0) or file 355.97 ien (1)
"RTN","IBCEP3",12,0)
 ; IBEMC = no longer used
"RTN","IBCEP3",13,0)
 ;
"RTN","IBCEP3",14,0)
 ; Function returns care unit needed flag (0=not needed, 1=needed) ^
"RTN","IBCEP3",15,0)
 ; AND   if IBSEQ="": primary ins or 355.97 ien if care unit needed ^
"RTN","IBCEP3",16,0)
 ;                    secondary ins or 355.97 ien if care unit needed ^
"RTN","IBCEP3",17,0)
 ;                    tertiary ins or 355.97 ien if care unit needed
"RTN","IBCEP3",18,0)
 ;                    (these would be '^' pieces 2,3,4)
"RTN","IBCEP3",19,0)
 ;       if IBSEQ   : IBSEQ seq ins or 355.97 ien if care unit needed
"RTN","IBCEP3",20,0)
 ;                    (this would be '^' piece 2)
"RTN","IBCEP3",21,0)
 ;
"RTN","IBCEP3",22,0)
 Q:$G(IBEMC) 0
"RTN","IBCEP3",23,0)
 N Q,Z,Z0,Z4,IB,IBCTYP,IBFTYP,IBQ,IBRX,IBPT
"RTN","IBCEP3",24,0)
 S (IBRX,IB)=0
"RTN","IBCEP3",25,0)
 S IBFTYP=$$FT^IBCEF(IBIFN),IBCTYP=$$INPAT^IBCEF(IBIFN,1)
"RTN","IBCEP3",26,0)
 S IBFTYP=$S(IBFTYP=3:1,1:2) S:IBCTYP'=1 IBCTYP=2
"RTN","IBCEP3",27,0)
 I IBCTYP=2 S IBRX=$$ISRX^IBCEF1(IBIFN) ; Outpatient pharmacy
"RTN","IBCEP3",28,0)
 S IBPT=$G(IBPTYP)
"RTN","IBCEP3",29,0)
 ;
"RTN","IBCEP3",30,0)
 S (Z,IBQ)=0
"RTN","IBCEP3",31,0)
 F  D  Q:IBQ
"RTN","IBCEP3",32,0)
 . I $G(IBSEQ) S Z=IBSEQ,IBQ=1 ; Only once for specific COB sequence
"RTN","IBCEP3",33,0)
 . I '$G(IBSEQ) S Z=Z+1,IBPTYP=IBPT I Z>3 S IBQ=1 Q  ; Up to 3 times - all ins
"RTN","IBCEP3",34,0)
 . S Z0=$$INSSEQ^IBCEP1(IBIFN,Z),Z4=$G(^DIC(36,+Z0,4))
"RTN","IBCEP3",35,0)
 . I '$G(IBPTYP) S IBPTYP=+Z4
"RTN","IBCEP3",36,0)
 . I 'Z0!'IBPTYP S:'Z0 IBQ=1 Q
"RTN","IBCEP3",37,0)
 . S Q=+$$CAREUN(Z0,IBPTYP,IBFTYP,IBCTYP,IBRX)
"RTN","IBCEP3",38,0)
 . I Q S $P(IB,U,$S($G(IBSEQ):Z+1,1:2))=$S($G(IBRET):Q,1:Z0)
"RTN","IBCEP3",39,0)
 ;
"RTN","IBCEP3",40,0)
 I $TR(IB,"^0") S $P(IB,U)=1
"RTN","IBCEP3",41,0)
 Q IB
"RTN","IBCEP3",42,0)
 ;
"RTN","IBCEP3",43,0)
CAREUN(IBINS,IBPTYP,IBFTYP,IBCTYP,IBRX) ; Find ien (file 355.96) for care
"RTN","IBCEP3",44,0)
 ; unit for the combination of ins co, prov type, form type and
"RTN","IBCEP3",45,0)
 ; care type
"RTN","IBCEP3",46,0)
 ; IBINS = ien of ins co (file 36)
"RTN","IBCEP3",47,0)
 ; IBPTYP = ien of provider id type (file 355.97)
"RTN","IBCEP3",48,0)
 ; IBFTYP = form type (1=UB,2=1500)
"RTN","IBCEP3",49,0)
 ; IBCTYP = care type (1=inpat,2=outpat)
"RTN","IBCEP3",50,0)
 ; IBRX = 1 if outpat/Rx bill
"RTN","IBCEP3",51,0)
 ;
"RTN","IBCEP3",52,0)
 N IB
"RTN","IBCEP3",53,0)
 S IB=""
"RTN","IBCEP3",54,0)
 ;
"RTN","IBCEP3",55,0)
 I $G(IBRX) D
"RTN","IBCEP3",56,0)
 . N T
"RTN","IBCEP3",57,0)
 . S T=$O(^IBA(355.96,"AD",IBINS,IBFTYP,3,IBPTYP,0))
"RTN","IBCEP3",58,0)
 . I 'T S T=$O(^IBA(355.96,"AD",IBINS,0,3,IBPTYP,0))
"RTN","IBCEP3",59,0)
 . I T S IB=T
"RTN","IBCEP3",60,0)
 ;
"RTN","IBCEP3",61,0)
 I 'IB D  ; Find from most specific to least specific
"RTN","IBCEP3",62,0)
 . I $O(^IBA(355.96,"AD",IBINS,IBFTYP,IBCTYP,IBPTYP,0)) S IB=+$O(^(0)) Q
"RTN","IBCEP3",63,0)
 . I $O(^IBA(355.96,"AD",IBINS,IBFTYP,0,IBPTYP,0)) S IB=+$O(^(0)) Q
"RTN","IBCEP3",64,0)
 . I $O(^IBA(355.96,"AD",IBINS,0,IBCTYP,IBPTYP,0)) S IB=+$O(^(0)) Q
"RTN","IBCEP3",65,0)
 . I $O(^IBA(355.96,"AD",IBINS,0,0,IBPTYP,0)) S IB=+$O(^(0)) Q
"RTN","IBCEP3",66,0)
 ;
"RTN","IBCEP3",67,0)
 Q IB
"RTN","IBCEP3",68,0)
 ;
"RTN","IBCEP3",69,0)
DISP(IBINS,IBTYPE) ; Return the name of the type of care unit needed
"RTN","IBCEP3",70,0)
 ; IBINS = ien of ins co (file 36)
"RTN","IBCEP3",71,0)
 ; IBTYPE = 2:PERFORMING PROVIDER ID
"RTN","IBCEP3",72,0)
 I $G(IBTYPE)'=2 Q ""
"RTN","IBCEP3",73,0)
 Q $P($G(^DIC(36,+IBINS,4)),U,9)
"RTN","IBCEP3",74,0)
 ;
"RTN","IBCEP3",75,0)
DELID(IBIFN,IBSEQ,IBX) ; Delete all provider data specific to an ins co
"RTN","IBCEP3",76,0)
 ; represented by the COB sequence IBSEQ for bill IBIFN
"RTN","IBCEP3",77,0)
 ; IBX = 1 if called from care unit prompt - don't delete value
"RTN","IBCEP3",78,0)
 N IBZ,IBDR,X,Y,Z0,Z1
"RTN","IBCEP3",79,0)
 S IBZ=0
"RTN","IBCEP3",80,0)
 Q:'$G(IBSEQ)!($G(IBSEQ)>3)
"RTN","IBCEP3",81,0)
 F  S IBZ=$O(^DGCR(399,IBIFN,"PRV",IBZ)) Q:'IBZ  S Z0=$G(^(IBZ,0)),Z1=$G(^(1)) D
"RTN","IBCEP3",82,0)
 . ; Delete provider id's
"RTN","IBCEP3",83,0)
 . I $P(Z0,U,4+IBSEQ)'="" S IBDR(399.0222,IBZ_","_IBIFN_",",(4+IBSEQ/100))="@"
"RTN","IBCEP3",84,0)
 . ; Delete provider id types
"RTN","IBCEP3",85,0)
 . I $P(Z0,U,11+IBSEQ)'="" S IBDR(399.0222,IBZ_","_IBIFN_",",(11+IBSEQ/100))="@"
"RTN","IBCEP3",86,0)
 . I $D(IBDR) D FILE^DIE(,"IBDR")
"RTN","IBCEP3",87,0)
 Q
"RTN","IBCEP3",88,0)
 ;
"RTN","IBCEP3",89,0)
SETID(IBIFN,IBSEQ) ; Default provider id for bill IBIFN and ins co for COB
"RTN","IBCEP3",90,0)
 ; sequence IBSEQ
"RTN","IBCEP3",91,0)
 N IBZ,X,Y,IBDR,IBT
"RTN","IBCEP3",92,0)
 S IBZ=0
"RTN","IBCEP3",93,0)
 Q  ; No longer used as of patch 232
"RTN","IBCEP3",94,0)
 ;Q:'$G(IBSEQ)!($G(IBSEQ)>3)
"RTN","IBCEP3",95,0)
 ;F  S IBZ=$O(^DGCR(399,IBIFN,"PRV",IBZ)) Q:'IBZ  S Z0=$G(^(IBZ,0)),Z1=$G(^(1)) D
"RTN","IBCEP3",96,0)
 ;. ; Update provider id's if no care unit is needed
"RTN","IBCEP3",97,0)
 ;. I $P(Z0,U,2)'="" D
"RTN","IBCEP3",98,0)
 ;.. S Z=$$GETID^IBCEP2(IBIFN,2,$P(Z0,U,2),IBSEQ,.IBT)
"RTN","IBCEP3",99,0)
 ;.. I Z'="",IBT S IBDR(399.0222,IBZ_","_IBIFN_",",(4+IBSEQ/100))=Z,IBDR(399.0222,IBZ_","_IBIFN_",",(11+IBSEQ/100))=+IBT
"RTN","IBCEP3",100,0)
 ;. I $D(IBDR) D FILE^DIE(,"IBDR")
"RTN","IBCEP3",101,0)
 Q
"RTN","IBCEP3",102,0)
 ;
"RTN","IBCEP3",103,0)
ALLID(IBIFN,IBFLD,IBFUNC) ; If form type or care type (I/O/RX) changes,
"RTN","IBCEP3",104,0)
 ; determine new provider id values if possible and update them
"RTN","IBCEP3",105,0)
 ; this includes primary, secondary, tertiary id's
"RTN","IBCEP3",106,0)
 ; IBIFN = ien of claim (file 399)
"RTN","IBCEP3",107,0)
 ; IBFLD = ien of the field being changed when this call is made
"RTN","IBCEP3",108,0)
 ;         (.19 = form type   .25 = care type)
"RTN","IBCEP3",109,0)
 ; IBFUNC = 1 to add,  2 to delete
"RTN","IBCEP3",110,0)
 N Z,Z0,IBC,IBDR,IBT
"RTN","IBCEP3",111,0)
 S Z=0
"RTN","IBCEP3",112,0)
 F  S Z=$O(^DGCR(399,IBIFN,"PRV",Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","IBCEP3",113,0)
 . F IBC=5:1:7 I $S(IBFUNC=2:$P(Z0,U,IBC)'="",1:1) S IBDR(399.0222,IBC_","_IBIFN_",",(IBC/100))=$S(IBFUNC=2:"@",1:$$GETID^IBCEP2(IBIFN,2,$P(Z0,U,2),IBC-4,.IBT))
"RTN","IBCEP3",114,0)
 I $D(IBDR) D FILE^DIE(,"IBDR")
"RTN","IBCEP3",115,0)
 Q
"RTN","IBCEP3",116,0)
 ;
"RTN","IBCEP3",117,0)
CUMNT ; Add/edit care unit
"RTN","IBCEP3",118,0)
 N D,DIE,DIC,DIK,DIR,DA,X,Y,IB,IBINS,IBF,IBCT,IBOK,IBPTYP,IBOLD,IBY,IBINS1,IBPTYP1,DUOUT,DTOUT
"RTN","IBCEP3",119,0)
INS F  D  Q:Y'>0
"RTN","IBCEP3",120,0)
 . S DIC="^DIC(36,",DIC(0)="AEMQ" D ^DIC K DIC
"RTN","IBCEP3",121,0)
 . I $D(DUOUT)!$D(DTOUT) S Y=-1 Q
"RTN","IBCEP3",122,0)
 . I Y'>0 S DIR(0)="EA",DIR("A")="Insurance Co is required - press enter to continue: " D ^DIR K DIR Q
"RTN","IBCEP3",123,0)
 . S IBINS=+Y,IBF="A",IBINS1=$P(Y,U,2)
"RTN","IBCEP3",124,0)
 I $O(^IBA(355.96,"D",IBINS,""))'="" D
"RTN","IBCEP3",125,0)
 . W ! S DIR("A")="(A)dd or (E)dit entries?: ",DIR("B")="Add",DIR(0)="SA^A:Add;E:Edit" D ^DIR W ! K DIR
"RTN","IBCEP3",126,0)
 . S IBF=Y
"RTN","IBCEP3",127,0)
 Q:$G(IBF)=""!("AE"'[$G(IBF))
"RTN","IBCEP3",128,0)
 ;
"RTN","IBCEP3",129,0)
 I IBINS>0 D
"RTN","IBCEP3",130,0)
 . I IBF="A" D NEW^IBCEP4A(1)
"RTN","IBCEP3",131,0)
 . I IBF="E" D CHANGE^IBCEP4A(1)
"RTN","IBCEP3",132,0)
 ;
"RTN","IBCEP3",133,0)
 Q
"RTN","IBCEP3",134,0)
 ;
"RTN","IBCEP3",135,0)
DUP(IBDA,IBOLD,IBFUNC) ; Check if the combination of ins co, prov type, care
"RTN","IBCEP3",136,0)
 ; type and form already exists in file 355.96
"RTN","IBCEP3",137,0)
 ; IBDA = ien of entry in file 355.96
"RTN","IBCEP3",138,0)
 ; IBOLD = the 0-node before changes were made - used to reset the fields
"RTN","IBCEP3",139,0)
 N DUP,IB0,DR,X,Y,DIK,DIE,DA
"RTN","IBCEP3",140,0)
 S IB0=$G(^IBA(355.96,IBDA,0)),DUP=0
"RTN","IBCEP3",141,0)
 ;
"RTN","IBCEP3",142,0)
 I $O(^IBA(355.96,"AUNIQ",+$P(IB0,U,3),+IB0,+$P(IB0,U,4),+$P(IB0,U,5),+$P(IB0,U,6),0))'=IBDA!($O(^IBA(355.96,"AUNIQ",+$P(IB0,U,3),+IB0,+$P(IB0,U,4),+$P(IB0,U,5),+$P(IB0,U,6),""),-1)'=IBDA) D
"RTN","IBCEP3",143,0)
 . S DUP=1
"RTN","IBCEP3",144,0)
 . I IBFUNC="E" D
"RTN","IBCEP3",145,0)
 .. S DR=";.01///"_$P(IBOLD,U)_";.03///"_$S($P(IBOLD,U,3)'="":"/"_$P(IBOLD,U,3),1:"@")_";.04///"_$S($P(IBOLD,U,4)'="":"/"_$P(IBOLD,U,4),1:"@")
"RTN","IBCEP3",146,0)
 .. S DR=DR_";05///"_$S($P(IBOLD,U,5)'="":"/"_$P(IBOLD,U,5),1:"@")_";.06///"_$S($P(IBOLD,U,6)'="":"/"_$P(IBOLD,U,6),1:"@")
"RTN","IBCEP3",147,0)
 .. S DA=IBDA,DIE="^IBA(355.96," D ^DIE
"RTN","IBCEP3",148,0)
 . I IBFUNC="A" D
"RTN","IBCEP3",149,0)
 .. S DA=IBDA,DIK="^IBA(355.96," D ^DIK
"RTN","IBCEP3",150,0)
 Q DUP
"RTN","IBCEP3",151,0)
 ;
"RTN","IBCEP3",152,0)
PROFID(IBIFN,IBSEQ,IBID) ; Return id and type of rendering provider id
"RTN","IBCEP3",153,0)
 ; used for insurance co at COB seq IBSEQ for bill ien IBIFN
"RTN","IBCEP3",154,0)
 ; RETURN VALUES:
"RTN","IBCEP3",155,0)
 ; piece 1:
"RTN","IBCEP3",156,0)
 ;  1 = FEDERAL TAX ID
"RTN","IBCEP3",157,0)
 ;  2 = INSURANCE CO SPECIFIC ID
"RTN","IBCEP3",158,0)
 ;  3 = NETWORK ID
"RTN","IBCEP3",159,0)
 ; "" = not a CMS-1500 bill or no id found
"RTN","IBCEP3",160,0)
 ; piece 2:
"RTN","IBCEP3",161,0)
 ;  the id #
"RTN","IBCEP3",162,0)
 N IBTYP,IBXDATA,IBZ
"RTN","IBCEP3",163,0)
 S:'$G(IBSEQ) IBSEQ=+$$COBN^IBCEF(IBXIEN)
"RTN","IBCEP3",164,0)
 S IBTYP=""_U_$G(IBID)
"RTN","IBCEP3",165,0)
 G:$$FT^IBCEF(IBIFN)'=2 PROFIDQ
"RTN","IBCEP3",166,0)
 I '$D(IBID) D F^IBCEF("N-ALL ATT/RENDERING PROV ID","IBZ",,IBIFN) S IBID=$$NOPUNCT^IBCEF($P(IBZ,U,IBSEQ+1))
"RTN","IBCEP3",167,0)
 G:IBID="" PROFIDQ
"RTN","IBCEP3",168,0)
 S IBTYP=$S($$NOPUNCT^IBCEF(IBID)=$$NOPUNCT^IBCEF($P($G(^IBE(350.9,1,1)),U,5)):1,$$NETWRK(IBIFN,IBID,IBSEQ):3,1:2)
"RTN","IBCEP3",169,0)
 S IBTYP=IBTYP_U_IBID
"RTN","IBCEP3",170,0)
 ;
"RTN","IBCEP3",171,0)
PROFIDQ Q IBTYP
"RTN","IBCEP3",172,0)
 ;
"RTN","IBCEP3",173,0)
NETWRK(IBIFN,IBID,IBSEQ) ; Determine if ID number IBID is the same as the
"RTN","IBCEP3",174,0)
 ; network id for the insurance co
"RTN","IBCEP3",175,0)
 ;  IBIFN = bill ien (file 399)
"RTN","IBCEP3",176,0)
 ;  IBSEQ = COB seq # of bill
"RTN","IBCEP3",177,0)
 ;   Returns 1 if network ID match is found for bill IBIFN, COB seq IBSEQ
"RTN","IBCEP3",178,0)
 N IBINS,IBNET
"RTN","IBCEP3",179,0)
 S IBNET=0
"RTN","IBCEP3",180,0)
 Q IBNET
"RTN","IBCEP3",181,0)
 ; This section needs work *********
"RTN","IBCEP3",182,0)
 I '$G(IBSEQ) S IBSEQ=+$$COBN^IBCEF(IBXIEN)
"RTN","IBCEP3",183,0)
 S IBINS=+$G(^DGCR(399,IBIFN,"I"_IBSEQ))
"RTN","IBCEP3",184,0)
 I $P($G(^IBE(355.97,+$$PPTYP^IBCEP0(IBINS),1)),U,6) D
"RTN","IBCEP3",185,0)
 . ; performing provider id type is a network id type
"RTN","IBCEP3",186,0)
 . I $$NOPUNCT^IBCEF($G(IBID))=$$NOPUNCT^IBCEF($$GETID^IBCEP2(IBIFN,3,$$PERFPRV^IBCEP2A(IBIFN),IBSEQ)) S IBNET=1
"RTN","IBCEP3",187,0)
 Q IBNET
"RTN","IBCEP3",188,0)
 ;
"RTN","IBCEP3",189,0)
 ;
"RTN","IBCEP3",190,0)
 ; Parameter definitions for UNIQ1 and UNIQ2 in IBCEP2
"RTN","IBCEP3",191,0)
 ;   IBIFN = ien of bill (file 399)
"RTN","IBCEP3",192,0)
 ;   IBINS = ien of insurance co (file 36) or *ALL* for all insurance
"RTN","IBCEP3",193,0)
 ;   IBPTYP = the ien of the provider id type in file 355.97
"RTN","IBCEP3",194,0)
 ;   IBUNIT = the value of the specific care unit to use for a match
"RTN","IBCEP3",195,0)
 ;            or *N/A* if none needed
"RTN","IBCEP3",196,0)
 ;   IBCU = the ien of the entry being matched in start file
"RTN","IBCEP3",197,0)
 ;   IBT = the second and third pieces are set to the entry ien^file #
"RTN","IBCEP4")
0^57^B23664048^B23219297
"RTN","IBCEP4",1,0)
IBCEP4 ;ALB/TMP - EDI UTILITIES for provider ID ;29-SEP-00
"RTN","IBCEP4",2,0)
 ;;2.0;INTEGRATED BILLING;**137,320,348,349**;21-MAR-94;Build 46
"RTN","IBCEP4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP4",4,0)
 ;
"RTN","IBCEP4",5,0)
EN ; -- main entry point
"RTN","IBCEP4",6,0)
 N IBINS,IBALL,IB95
"RTN","IBCEP4",7,0)
 D ENX
"RTN","IBCEP4",8,0)
 Q
"RTN","IBCEP4",9,0)
 ;
"RTN","IBCEP4",10,0)
EN1(IBINS) ; -- Entry point from provider number maintenence
"RTN","IBCEP4",11,0)
 N IBPRV,IBALL,IB95
"RTN","IBCEP4",12,0)
 D ENX
"RTN","IBCEP4",13,0)
 Q
"RTN","IBCEP4",14,0)
 ;
"RTN","IBCEP4",15,0)
ENX ; Common call to list template for dual entry points
"RTN","IBCEP4",16,0)
 N IBSLEV,DIR,Y
"RTN","IBCEP4",17,0)
 K IBFASTXT
"RTN","IBCEP4",18,0)
 D FULL^VALM1
"RTN","IBCEP4",19,0)
 S DIR(0)="SA^1:Care Units for Performing Provider IDs;2:Care Units for Billing Provider Secondary IDs"
"RTN","IBCEP4",20,0)
 S DIR("A")="Enter Type of Care Unit: ",DIR("B")=$P($P(DIR(0),":",2),";")
"RTN","IBCEP4",21,0)
 W ! D ^DIR K DIR W !
"RTN","IBCEP4",22,0)
 I Y'>0 Q
"RTN","IBCEP4",23,0)
 S IBSLEV=+Y
"RTN","IBCEP4",24,0)
 I IBSLEV=2 D EN^VALM("IBCE 2ND PRVID CARE UNIT MAINT") Q
"RTN","IBCEP4",25,0)
 D EN^VALM("IBCE PRVCARE UNIT MAINT")
"RTN","IBCEP4",26,0)
 Q
"RTN","IBCEP4",27,0)
 ;
"RTN","IBCEP4",28,0)
HDR ; -- header
"RTN","IBCEP4",29,0)
 K VALMHDR
"RTN","IBCEP4",30,0)
 S VALMHDR(1)=" "
"RTN","IBCEP4",31,0)
 S VALMHDR(2)="Insurance Co: "_$S('$G(IBALL)&$G(IBINS):$P($G(^DIC(36,+IBINS,0)),U),1:"ALL")
"RTN","IBCEP4",32,0)
 Q
"RTN","IBCEP4",33,0)
 ;
"RTN","IBCEP4",34,0)
INIT ; -- init variables, list array
"RTN","IBCEP4",35,0)
 N Z,IB,IBLCT,IBENT,IBNM,IB0,Z0,Z1,IBQ,DIR,Y,X
"RTN","IBCEP4",36,0)
 I $G(IBINS) S Y=IBINS ; For entrypoint from provider number maintenance
"RTN","IBCEP4",37,0)
 ;
"RTN","IBCEP4",38,0)
 I '$G(IBINS) D
"RTN","IBCEP4",39,0)
 . S DIR(0)="PA^DIC(36,:AEMQ",DIR("A")="Select INSURANCE CO: ",DIR("?")="Select an INSURANCE CO to display its care units"
"RTN","IBCEP4",40,0)
 . D ^DIR K DIR
"RTN","IBCEP4",41,0)
 . I $D(DTOUT)!$D(DUOUT) S Y=-2 Q
"RTN","IBCEP4",42,0)
 . I Y>0 S IBINS=+Y Q
"RTN","IBCEP4",43,0)
 ;
"RTN","IBCEP4",44,0)
 I Y'=-2 D
"RTN","IBCEP4",45,0)
 . D BLD
"RTN","IBCEP4",46,0)
 E  D
"RTN","IBCEP4",47,0)
 . S VALMQUIT=1
"RTN","IBCEP4",48,0)
 Q
"RTN","IBCEP4",49,0)
 ;
"RTN","IBCEP4",50,0)
BLD ;  Bld display  - IBINS must = ien of file 36
"RTN","IBCEP4",51,0)
 K ^TMP("IBPRV_CU",$J)
"RTN","IBCEP4",52,0)
 ;
"RTN","IBCEP4",53,0)
 I $G(IBSLEV)=2 Q
"RTN","IBCEP4",54,0)
 ;
"RTN","IBCEP4",55,0)
 S (IBENT,IBLCT)=0,IBNM=""
"RTN","IBCEP4",56,0)
 F  S IBNM=$O(^IBA(355.95,"C",IBINS,IBNM)) Q:IBNM=""  S Z=0 F  S Z=$O(^IBA(355.95,"C",IBINS,IBNM,Z)) Q:'Z  S IB=$G(^IBA(355.95,Z,0)) I IB'="",$P(IB,U,4)="" D
"RTN","IBCEP4",57,0)
 . S IBLCT=IBLCT+1,IBENT=IBENT+1
"RTN","IBCEP4",58,0)
 . I '$D(^IBA(355.96,"AUNIQ",IBINS,Z)) D SET^VALM10(IBLCT,$E(IBENT_"    ",1,4)_$E($P(IB,U)_$J("",30),1,30)_"  "_$E($P(IB,U,2)_$J("",20),1,20)_" (NO COMBINATIONS FOUND)",IBENT) Q
"RTN","IBCEP4",59,0)
 . D SET^VALM10(IBLCT,$E(IBENT_"    ",1,4)_$E($P(IB,U)_$J("",30),1,30)_"  "_$E($P(IB,U,2)_$J("",20),1,20),IBENT)
"RTN","IBCEP4",60,0)
 . S ^TMP("IBPRV_CU",$J,"ZIDX",IBENT)=Z
"RTN","IBCEP4",61,0)
 . S Z0=0 F  S Z0=$O(^IBA(355.96,"AE",Z,Z0)) Q:'Z0  S Z1=0 F  S Z1=$O(^IBA(355.96,"AE",Z,Z0,Z1)) Q:'Z1  S IB0=$G(^IBA(355.96,Z1,0)) I IB0'="" D
"RTN","IBCEP4",62,0)
 .. S IBLCT=IBLCT+1
"RTN","IBCEP4",63,0)
 .. S IBQ=$J("",28)_"o "_$E($$EXPAND^IBTRE(355.96,.06,+$P(IB0,U,6))_$J("",20),1,20)
"RTN","IBCEP4",64,0)
 .. S IBQ=IBQ_"  "_$E($P("Both form types^UB-04 Only^CMS-1500 Only",U,$P(IB0,U,4)+1)_$J("",15),1,15)_"  "_$E($P("Inpt/Outpt^Inpt Only^Outpt Only^RX Only",U,+$P(IB0,U,5)+1)_$J("",10),1,10)
"RTN","IBCEP4",65,0)
 .. D SET^VALM10(IBLCT,IBQ,IBENT)
"RTN","IBCEP4",66,0)
 ;
"RTN","IBCEP4",67,0)
 I 'IBLCT D SET^VALM10(1,"No CARE UNITs Found"_$S('$G(IBINS):"",1:" for Insurance Co"))
"RTN","IBCEP4",68,0)
 S VALMCNT=IBLCT,VALMBG=1
"RTN","IBCEP4",69,0)
 Q
"RTN","IBCEP4",70,0)
 ;
"RTN","IBCEP4",71,0)
HELP ; -- help
"RTN","IBCEP4",72,0)
 ;
"RTN","IBCEP4",73,0)
 I $G(IBSLEV)=2 Q
"RTN","IBCEP4",74,0)
 ;
"RTN","IBCEP4",75,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCEP4",76,0)
 Q
"RTN","IBCEP4",77,0)
 ;
"RTN","IBCEP4",78,0)
EXIT ; -- exit
"RTN","IBCEP4",79,0)
 K IBFASTXT
"RTN","IBCEP4",80,0)
 D CLEAN^VALM10
"RTN","IBCEP4",81,0)
 K ^TMP("IBPRV_CU",$J),IBINS,IBALL
"RTN","IBCEP4",82,0)
 Q
"RTN","IBCEP4",83,0)
 ;
"RTN","IBCEP4",84,0)
EXPND ;
"RTN","IBCEP4",85,0)
 Q
"RTN","IBCEP4",86,0)
 ;
"RTN","IBCEP4",87,0)
SEL(IBDA,MANY) ; Select from care unit list
"RTN","IBCEP4",88,0)
 ; IBDA is passed by reference and IBDA(1) returned containing
"RTN","IBCEP4",89,0)
 ;  ien's of the care unit selected (file 355.95).
"RTN","IBCEP4",90,0)
 ; If > 1 entry can be selected, MANY is set to 1
"RTN","IBCEP4",91,0)
 N Z
"RTN","IBCEP4",92,0)
 S IBDA=0
"RTN","IBCEP4",93,0)
 D EN^VALM2($G(XQORNOD(0)),$S($G(MANY):"",1:"S"))
"RTN","IBCEP4",94,0)
 S Z=0 F  S Z=$O(VALMY(Z)) Q:'Z  S IBDA=IBDA+1,IBDA(IBDA)=+$G(^TMP("IBPRV_CU",$J,"ZIDX",Z))
"RTN","IBCEP4",95,0)
 Q
"RTN","IBCEP4",96,0)
 ;
"RTN","IBCEP4",97,0)
DISP(IBVAR,IBINS,IBPTYP,IBFT,IBCT,START,END) ; Set up display array for
"RTN","IBCEP4",98,0)
 ; provider id
"RTN","IBCEP4",99,0)
 N Z
"RTN","IBCEP4",100,0)
 S START=$S($G(START):START,1:1)
"RTN","IBCEP4",101,0)
 S (Z,END)=$G(START)
"RTN","IBCEP4",102,0)
 S @IBVAR@(START)="INSURANCE: "_$S(IBINS:$P($G(^DIC(36,+IBINS,0)),U),1:"ALL INSURANCE")
"RTN","IBCEP4",103,0)
 S @IBVAR@(START+1)="PROV TYPE: "_$$EXPAND^IBTRE(355.96,.06,IBPTYP)
"RTN","IBCEP4",104,0)
 S @IBVAR@(START+2)="FORM TYPE: "_$$EXPAND^IBTRE(355.96,.04,IBFT)
"RTN","IBCEP4",105,0)
 S @IBVAR@(START+3)="CARE TYPE: "_$$EXPAND^IBTRE(355.96,.05,IBCT)
"RTN","IBCEP4",106,0)
 S END=$G(START)+3
"RTN","IBCEP4",107,0)
 Q
"RTN","IBCEP4",108,0)
 ;
"RTN","IBCEP4",109,0)
CAREUOK(IBIFN,IBCU,IBTYPE,IBSEQ) ; Returns 1 if care unit is appropriate 
"RTN","IBCEP4",110,0)
 ; for bill based on provider type, care type, bill type and insurance co
"RTN","IBCEP4",111,0)
 ; IBIFN = ien of bill (file 399)
"RTN","IBCEP4",112,0)
 ; IBCU = the ien of the care unit (file 355.96)
"RTN","IBCEP4",113,0)
 ; IBTYPE = type of ID being checked (1=performing, 2=EMC)
"RTN","IBCEP4",114,0)
 ; IBSEQ = the COB seq being checked (1-3)
"RTN","IBCEP4",115,0)
 N Z,IBOK,IBINS,IBCT,IBFT,IBPTYP,IBRX
"RTN","IBCEP4",116,0)
 S IBOK=0
"RTN","IBCEP4",117,0)
 S IBINS=+$$FINDINS^IBCEF1(IBIFN,+IBSEQ),IBFT=$S($$FT^IBCEF(IBIFN)=2:2,1:1)
"RTN","IBCEP4",118,0)
 S IBPTYP=+$S(IBTYPE=1:$$PPTYP^IBCEP0(IBINS),1:$$EMCID^IBCEP())
"RTN","IBCEP4",119,0)
 S IBRX=$$ISRX^IBCEF1(IBIFN)
"RTN","IBCEP4",120,0)
 S IBCT=$S('IBRX:$S($$INPAT^IBCEF(IBIFN,1):1,1:2),1:3)
"RTN","IBCEP4",121,0)
 ;Check from most general to most specific
"RTN","IBCEP4",122,0)
 I $D(^IBA(355.96,"AD",IBINS,0,0,IBPTYP,IBCU)) S IBOK=1 G CAREOKQ
"RTN","IBCEP4",123,0)
 I 'IBRX,$D(^IBA(355.96,"AD",IBINS,IBFT,0,IBPTYP,IBCU)) S IBOK=1 G CAREOKQ
"RTN","IBCEP4",124,0)
 I $D(^IBA(355.96,"AD",IBINS,0,IBCT,IBPTYP,IBCU)) S IBOK=1 G CAREOKQ
"RTN","IBCEP4",125,0)
 I $D(^IBA(355.96,"AD",IBINS,IBFT,IBCT,IBPTYP,IBCU)) S IBOK=1 G CAREOKQ
"RTN","IBCEP4",126,0)
 ;
"RTN","IBCEP4",127,0)
CAREOKQ Q IBOK
"RTN","IBCEP4",128,0)
 ;
"RTN","IBCEP4A")
0^58^B49631156^B49012479
"RTN","IBCEP4A",1,0)
IBCEP4A ;ALB/TMP - EDI UTILITIES for provider ID ;29-SEP-00
"RTN","IBCEP4A",2,0)
 ;;2.0;INTEGRATED BILLING;**137,232,280,349**;21-MAR-94;Build 46
"RTN","IBCEP4A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP4A",4,0)
 ;
"RTN","IBCEP4A",5,0)
NEW(IB) ; Add care unit
"RTN","IBCEP4A",6,0)
 ; Assumes IBINS is defined as ins co ien (file 36)
"RTN","IBCEP4A",7,0)
 ; IB = 0 or null if called from list manager, 1 if not
"RTN","IBCEP4A",8,0)
 N DIC,DIR,X,Y,Z,DA,DR,DIE,DO,DD,DLAYGO,IB95,IBADD,IBOK
"RTN","IBCEP4A",9,0)
 I '$G(IB) D FULL^VALM1
"RTN","IBCEP4A",10,0)
 ;
"RTN","IBCEP4A",11,0)
 ; Add an entry - either new care unit/ins co or a combination for
"RTN","IBCEP4A",12,0)
 ;  existing care unit/ins co
"RTN","IBCEP4A",13,0)
 S DIC("A")="SELECT CARE UNIT FOR THE INSURANCE CO: ",DIC="^IBA(355.95,",DIC("S")="I $P(^(0),U,3)=+$G(IBINS)",DIC(0)="AELMQ",DIC("DR")=".03////"_+$G(IBINS)_";.02",DLAYGO=355.95 D ^DIC K DIC,DLAYGO
"RTN","IBCEP4A",14,0)
 G:Y'>0 NEWQ
"RTN","IBCEP4A",15,0)
 S IB95=3,IB95("IBCU")=+Y
"RTN","IBCEP4A",16,0)
 D INSASS(IBINS,.IB95)
"RTN","IBCEP4A",17,0)
 I '$G(IB) D BLD^IBCEP4
"RTN","IBCEP4A",18,0)
NEWQ I '$G(IB) S VALMBCK="R"
"RTN","IBCEP4A",19,0)
 Q
"RTN","IBCEP4A",20,0)
 ;
"RTN","IBCEP4A",21,0)
CHANGE(IB) ; Edit a care unit name or combination for ins co IBINS
"RTN","IBCEP4A",22,0)
 ; Assumes IBINS is defined as ins co ien (file 36)
"RTN","IBCEP4A",23,0)
 ; IB = 0 or null if called from list manager, 1 if not
"RTN","IBCEP4A",24,0)
 N DIC,DIK,DIR,X,Y,Z,DA,DR,DIE,DO,DD,DLAYGO,IB95,IBOK,IBZ,IB0,IBEDIT,IBCK,IBDA,IBCHG,IBDELETE,Z100,DTOUT,DUOUT
"RTN","IBCEP4A",25,0)
 I '$G(IB) D FULL^VALM1
"RTN","IBCEP4A",26,0)
 S DIC("A")="CARE UNIT NAME: ",DIC(0)="AEMQ",DIC("S")="I $P(^(0),U,3)=+$G(IBINS)",DIC="^IBA(355.95," W ! D ^DIC K DIC
"RTN","IBCEP4A",27,0)
 I Y'>0 G CHGQ
"RTN","IBCEP4A",28,0)
 S IB95("IBCU")=+Y,IBDELETE=0,IBDELETE(0)=$G(^IBA(355.95,0)),IBDELETE(1)=$G(^(1))
"RTN","IBCEP4A",29,0)
 ; Edit fields outside of FM to assure uniqueness of combos is maintained
"RTN","IBCEP4A",30,0)
 W ! S DIR("A")="CARE UNIT NAME: ",DIR("B")=$P($G(^IBA(355.95,+IB95("IBCU"),0)),U),DIR(0)="355.95,.01AO",DIR("S")="I $P(^(0),U,3)=IBINS" D ^DIR K DIR
"RTN","IBCEP4A",31,0)
 I $D(DTOUT)!$D(DUOUT) G CHGQ
"RTN","IBCEP4A",32,0)
 ;
"RTN","IBCEP4A",33,0)
 ; Care unit name was deleted
"RTN","IBCEP4A",34,0)
 I X="@" D  G CHGQ
"RTN","IBCEP4A",35,0)
 . S DIR("A",1)="THIS WILL DELETE THE CARE UNIT NAME AND ALL ITS COMBINATIONS",DIR("A")="ARE YOU SURE THIS IS WHAT YOU WANT TO DO?: ",DIR(0)="YA",DIR("B")="NO" D ^DIR K DIR
"RTN","IBCEP4A",36,0)
 . I Y'=1 S IB95("IBCU")="" Q  ; Changed their mind - don't delete
"RTN","IBCEP4A",37,0)
 . S Z=0 F  S Z=$O(^IBA(355.96,"B",IB95("IBCU"),Z)) Q:'Z  S DIK="^IBA(355.96,",DA=Z D ^DIK
"RTN","IBCEP4A",38,0)
 . S DA=IB95("IBCU"),DIK="^IBA(355.95," D ^DIK
"RTN","IBCEP4A",39,0)
 . W ! S DIR(0)="EA",DIR("A",1)="CARE UNIT AND ALL ITS COMBINATIONS WERE DELETED",DIR("A")="PRESS ENTER TO CONTINUE " D ^DIR K DIR D BLD^IBCEP4
"RTN","IBCEP4A",40,0)
 ;
"RTN","IBCEP4A",41,0)
 I $P($G(^IBA(355.95,IB95("IBCU"),0)),U)'=Y S DIE="^IBA(355.95,",DR=".01///"_Y,DA=IB95("IBCU") D ^DIE ; File the name change
"RTN","IBCEP4A",42,0)
 S DR=".02",DIE="^IBA(355.95,",DA=IB95("IBCU") D ^DIE
"RTN","IBCEP4A",43,0)
 I $D(Y) G CHGQ
"RTN","IBCEP4A",44,0)
 ;
"RTN","IBCEP4A",45,0)
 I $O(^IBA(355.96,"ACARE",IB95("IBCU"),""))="" S IB95=3 D INSASS(IBINS,.IB95) G CHGQ
"RTN","IBCEP4A",46,0)
 ; only 1 combination found for ins/care unit
"RTN","IBCEP4A",47,0)
 I $O(^IBA(355.96,"ACARE",IB95("IBCU"),""),-1)=$O(^IBA(355.96,"ACARE",IB95("IBCU"),0)) D
"RTN","IBCEP4A",48,0)
 . S IBDA=$O(^IBA(355.96,"ACARE",IB95("IBCU"),0))
"RTN","IBCEP4A",49,0)
 ;
"RTN","IBCEP4A",50,0)
 ; Choose the combination to edit - more than 1 exists
"RTN","IBCEP4A",51,0)
 E  D
"RTN","IBCEP4A",52,0)
 . W !,"SELECT ONE OF THE FOLLOWING CARE UNIT COMBINATIONS:"
"RTN","IBCEP4A",53,0)
 . S DIC="^IBA(355.96,",DIC(0)="EMQ",DIC("S")="I $D(^IBA(355.96,""ACARE"","_IB95("IBCU")_",Y))",X=IBINS D ^DIC K DIC S IBDA=+Y
"RTN","IBCEP4A",54,0)
 ;
"RTN","IBCEP4A",55,0)
 I IBDA>0 D
"RTN","IBCEP4A",56,0)
 . N IBDA0,Q,Q0
"RTN","IBCEP4A",57,0)
 . S IBDA0=$G(^IBA(355.96,IBDA,0))
"RTN","IBCEP4A",58,0)
 . Q:IBDA0=""
"RTN","IBCEP4A",59,0)
 . W !!,"*** CARE UNIT COMBINATION FOR: ",$P($G(^IBA(355.95,+IB95("IBCU"),0)),U)," ***"
"RTN","IBCEP4A",60,0)
 . D DISP^IBCEP4("Q",IBINS,$P(IBDA0,U,6),$P(IBDA0,U,4),$P(IBDA0,U,5),1,.Q0)
"RTN","IBCEP4A",61,0)
 . S Z=0 F  S Z=$O(Q(Z)) Q:'Z  W !,Q(Z)
"RTN","IBCEP4A",62,0)
 . I $P(IBDA0,U,7) W !,"EXP DATE: ",$$FMTE^XLFDT($P(IBDA0,U,7),"2D")
"RTN","IBCEP4A",63,0)
 . W !,"CARE UNIT: ",$P($G(^IBA(355.95,+IBDA0,0)),U),!
"RTN","IBCEP4A",64,0)
 . W ! S DIR(0)="SA^E:EDIT;D:DELETE",DIR("B")="EDIT",DIR("A")="EDIT OR DELETE THIS CARE UNIT COMBINATION?: " D ^DIR K DIR
"RTN","IBCEP4A",65,0)
 . I $D(DTOUT)!$D(DUOUT) Q
"RTN","IBCEP4A",66,0)
 . I Y="D" D  Q
"RTN","IBCEP4A",67,0)
 .. S DIR(0)="YA",DIR("A")="ARE YOU SURE YOU WANT TO DELETE THIS CARE UNIT COMBINATION?: ",DIR("B")="NO" D ^DIR K DIR
"RTN","IBCEP4A",68,0)
 .. I Y=1 S DIK="^IBA(355.96,",DA=IBDA,IBCHG=1 D ^DIK
"RTN","IBCEP4A",69,0)
 . S (IBCK,IBCHG)=0,(IBEDIT,IBOK)=1
"RTN","IBCEP4A",70,0)
 . F  Q:'IBEDIT  S IBEDIT=0,IB0=$G(^IBA(355.96,+IBDA,0)) K IBZ F Z=.01,.03,.06,.04,.05 D  Q:'IBOK!IBEDIT
"RTN","IBCEP4A",71,0)
 .. S Z100=Z*100
"RTN","IBCEP4A",72,0)
 .. I Z100=1 W !,"CARE UNIT: ",$P($G(^IBA(355.95,IB95("IBCU"),0)),U) S IBZ(.01)=$P(IB0,U) Q
"RTN","IBCEP4A",73,0)
 .. I Z100=3 W !,"INSURANCE COMPANY: ",$$EXPAND^IBTRE(355.96,.03,$P(IB0,U,3)) S IBZ(.03)=$P(IB0,U) Q
"RTN","IBCEP4A",74,0)
 .. I Z100=5 S IBCK=1
"RTN","IBCEP4A",75,0)
 .. S IBZ(Z)=$$EDIT(Z,IB0,+IBDA,IBCK),IBCK=0
"RTN","IBCEP4A",76,0)
 .. I '$P(IBZ(Z),U,2) D  Q
"RTN","IBCEP4A",77,0)
 ... I $P(IB0,U,Z100)'=IBZ(Z) S IBCHG=1
"RTN","IBCEP4A",78,0)
 ... S $P(IB0,U,Z100)=IBZ(Z)
"RTN","IBCEP4A",79,0)
 .. S (IBOK,IBCHG)=0
"RTN","IBCEP4A",80,0)
 .. I $P(IBZ(Z),U,2)=2 D
"RTN","IBCEP4A",81,0)
 ... S DIR(0)="YA",DIR("A",1)="This entry already exists",DIR("A")="Do you want to re-edit?: " W ! D ^DIR K DIR W !
"RTN","IBCEP4A",82,0)
 ... I Y=1 S (IBOK,IBEDIT)=1
"RTN","IBCEP4A",83,0)
 . I IBOK Q:'IBCHG  S DIE="^IBA(355.96,",DR=".03////"_IBZ(.03)_";.04////"_IBZ(.04)_";.05////"_IBZ(.05)_";.06////"_IBZ(.06)_";.07",DA=+IBDA D ^DIE,BLD^IBCEP4 Q
"RTN","IBCEP4A",84,0)
 ;
"RTN","IBCEP4A",85,0)
 I '$G(IB) D BLD^IBCEP4
"RTN","IBCEP4A",86,0)
CHGQ I '$G(IB) S VALMBCK="R"
"RTN","IBCEP4A",87,0)
 Q
"RTN","IBCEP4A",88,0)
 ;
"RTN","IBCEP4A",89,0)
INSASS(IBINSZ,IB95) ; Assign care unit to or delete from an ins co
"RTN","IBCEP4A",90,0)
 ; IBINSZ = ien of ins co (file 36)
"RTN","IBCEP4A",91,0)
 ; IB95 = flag  ("IBCU")=care unit
"RTN","IBCEP4A",92,0)
 ;     can have subscripts to send in pre-entered data
"RTN","IBCEP4A",93,0)
 N DIR,DIC,DA,DR,X,Y,Z,IBFT,IBCT,IBPTYP,IBCU,IBCHG,IBINS,IBDA,IBPXDT,IBDICS
"RTN","IBCEP4A",94,0)
 S IBINS=IBINSZ
"RTN","IBCEP4A",95,0)
 S IBCHG=0,IBCU=$G(IB95("IBCU"))
"RTN","IBCEP4A",96,0)
 D FULL^VALM1
"RTN","IBCEP4A",97,0)
 I '$G(IBINSZ) K IB95 G INSQ
"RTN","IBCEP4A",98,0)
 W !
"RTN","IBCEP4A",99,0)
 F Z=.06,.04,.05,.07,.03 D  G:Z="" INSQ
"RTN","IBCEP4A",100,0)
 . ;
"RTN","IBCEP4A",101,0)
 . I $S(Z=.04:'$D(IB95("IBFT")),Z=.05:'$D(IB95("IBCT")),Z=.06:'$D(IB95("IBPTYP")),Z=.03:'$D(IB95("IBCU")),1:1) D
"RTN","IBCEP4A",102,0)
 .. N DA
"RTN","IBCEP4A",103,0)
 .. K IBDICS
"RTN","IBCEP4A",104,0)
 .. I Z=.04 D
"RTN","IBCEP4A",105,0)
 ... I $P($G(^IBE(355.97,+$G(IB95("IBPTYP")),0)),U,3)="1A" S IBDICS="I Y'=1 K X",DIR("B")="UB-04",DIR("?")="ONLY UB-04 IS VALID FOR A BLUE CROSS ID"
"RTN","IBCEP4A",106,0)
 .. S DIR(0)="355.96,"_Z_$S($G(IBDICS)="":"",1:"^^"_IBDICS) D ^DIR K DIR
"RTN","IBCEP4A",107,0)
 . I $D(DTOUT)!$D(DUOUT) S VALMBCK="R",Z="" K:$G(IB95)=2 IB95 Q
"RTN","IBCEP4A",108,0)
 . ;
"RTN","IBCEP4A",109,0)
 . I Z=.04 S IBFT=$S($G(IB95("IBFT"))="":+Y,1:IB95("IBFT")) S IB95("IBFT")=IBFT Q
"RTN","IBCEP4A",110,0)
 . ;
"RTN","IBCEP4A",111,0)
 . I Z=.05 S IBCT=$S($G(IB95("IBCT"))="":+Y,1:IB95("IBCT")) S IB95("IBCT")=IBCT Q
"RTN","IBCEP4A",112,0)
 . ;
"RTN","IBCEP4A",113,0)
 . I Z=.06 S IBPTYP=$S($G(IB95("IBPTYP"))="":+Y,1:IB95("IBPTYP")) S IB95("IBPTYP")=IBPTYP Q
"RTN","IBCEP4A",114,0)
 . ;
"RTN","IBCEP4A",115,0)
 . I Z=.07 S IBPXDT=$S('$G(IB95("IBEXPDT")):+Y,1:IB95("IBEXPDT")) S IB95("IBEXPDT")=IBPXDT Q
"RTN","IBCEP4A",116,0)
 . ;
"RTN","IBCEP4A",117,0)
 . I Z=.03,$G(IB95)=3,$G(IB95("IBCU"))'="" D  Q:Z=""
"RTN","IBCEP4A",118,0)
 .. N Q  ; Assign from add care type
"RTN","IBCEP4A",119,0)
 .. S IBCT=0
"RTN","IBCEP4A",120,0)
 .. W !,"CARE UNIT: "_$$EXPAND^IBTRE(355.96,.01,IB95("IBCU"))
"RTN","IBCEP4A",121,0)
 .. S IB95("IBINS")=+IBINSZ
"RTN","IBCEP4A",122,0)
 .. I $D(^IBA(355.96,"AUNIQ",IBINSZ,IB95("IBCU"),IB95("IBFT"),IB95("IBCT"),IB95("IBPTYP"))) D  Q
"RTN","IBCEP4A",123,0)
 ... S DIR(0)="EA",DIR("A",1)="This combination already exists - NOT ADDED",DIR("A")="Press ENTER to continue" W ! D ^DIR K DIR W !
"RTN","IBCEP4A",124,0)
 .. S IBCT=1 S Y=$$ADDCU(IBINSZ,IB95("IBCU"),IB95("IBFT"),IB95("IBCT"),IB95("IBPTYP"))
"RTN","IBCEP4A",125,0)
 .. I Y<0 W ! S DIR("A",1)="  >> Care Unit NOT completely filed",DIR("A")="PRESS ENTER TO CONTINUE ",DIR(0)="EA" D ^DIR K DIR Q
"RTN","IBCEP4A",126,0)
 .. W ! S DIR(0)="EA",DIR("A",1)="  >> CARE UNIT COMBINATION FILED FOR THE INSURANCE CO",IBCT=1,IBCHG=1,DIR("A")="PRESS ENTER TO CONTINUE ",DIR(0)="EA" D ^DIR K DIR
"RTN","IBCEP4A",127,0)
 I $G(IBCHG) D BLD^IBCEP4
"RTN","IBCEP4A",128,0)
INSQ S VALMBCK="R"
"RTN","IBCEP4A",129,0)
 Q
"RTN","IBCEP4A",130,0)
 ;
"RTN","IBCEP4A",131,0)
EDIT(IBFLD,IB0,IBIEN,IBCK1) ; Allow addition/edit of fields in file 355.96
"RTN","IBCEP4A",132,0)
 ; without direct Fileman call so uniqueness can be checked
"RTN","IBCEP4A",133,0)
 ; IBFLD = field # in file 355.96
"RTN","IBCEP4A",134,0)
 ; IB0 = current 0-node of data in the entry in file 355.96
"RTN","IBCEP4A",135,0)
 ; IBIEN = ien of entry being edited in file 355.96
"RTN","IBCEP4A",136,0)
 ; IBCK1 = flag ... if 1, checks for uniqueness after field changed
"RTN","IBCEP4A",137,0)
 ;
"RTN","IBCEP4A",138,0)
 ; FUNCTION RETURNS: value of field if field is OK, second piece is null
"RTN","IBCEP4A",139,0)
 ;                   If not good, 2nd piece = 1 : no data or ^ entered
"RTN","IBCEP4A",140,0)
 ;                                          = 2 : record not unique
"RTN","IBCEP4A",141,0)
 N DIR,DA,Y,X,IBNEW,IBINS,IBVAL
"RTN","IBCEP4A",142,0)
 S IBINS=+IB0,IBNEW="",IBVAL=$$EXPAND^IBTRE(355.96,IBFLD,$P(IB0,U,(IBFLD*100)))
"RTN","IBCEP4A",143,0)
 S DIR(0)="355.96,"_IBFLD
"RTN","IBCEP4A",144,0)
 S:IBVAL'="" DIR("B")=IBVAL
"RTN","IBCEP4A",145,0)
 D ^DIR K DIR
"RTN","IBCEP4A",146,0)
 I Y=""!$D(DTOUT)!$D(DUOUT) S IBNEW="^1" G EDITQ
"RTN","IBCEP4A",147,0)
 S IBNEW=$P(Y,U)
"RTN","IBCEP4A",148,0)
 I $G(IBCK1) D
"RTN","IBCEP4A",149,0)
 . N X1,X2,X3,X4,X5
"RTN","IBCEP4A",150,0)
 . S X1=$S(IBFLD'=.03:IBINS,1:IBNEW),X2=$S(IBFLD'=.01:$P(IB0,U),1:IBNEW),X3=$S(IBFLD'=.04:$P(IB0,U,4),1:IBNEW),X4=$S(IBFLD'=.05:$P(IB0,U,5),1:IBNEW),X5=$S(IBFLD'=.06:$P(IB0,U,6),1:IBNEW)
"RTN","IBCEP4A",151,0)
 . I $S(X1=""!(X2="")!(X3="")!(X4="")!(X5=""):1,$O(^IBA(355.96,"AUNIQ",X1,X2,X3,X4,X5,0)):$O(^(0))'=IBIEN,1:0) S IBNEW=IBNEW_"^2"
"RTN","IBCEP4A",152,0)
 ;
"RTN","IBCEP4A",153,0)
EDITQ Q IBNEW
"RTN","IBCEP4A",154,0)
 ;
"RTN","IBCEP4A",155,0)
ADDCU(IBINSZ,IBCU,IBFT,IBCT,IBPTYP) ;  Add a new care unit record to file 355.96
"RTN","IBCEP4A",156,0)
 ; Same parameter definitions as EDIT
"RTN","IBCEP4A",157,0)
 N DIC,DA,X,Y,DLAYGO
"RTN","IBCEP4A",158,0)
 S DIC(0)="L",DLAYGO=355.96,DIC="^IBA(355.96,",DIC("DR")=".03////"_IBINSZ_";.04////"_IBFT_";.05////"_IBCT_";.06////"_IBPTYP,X=IBCU
"RTN","IBCEP4A",159,0)
 D FILE^DICN
"RTN","IBCEP4A",160,0)
 Q Y
"RTN","IBCEP4A",161,0)
 ;
"RTN","IBCEP5")
0^59^B48846448^B48252078
"RTN","IBCEP5",1,0)
IBCEP5 ;ALB/TMP - EDI UTILITIES for provider ID ;29-SEP-00
"RTN","IBCEP5",2,0)
 ;;2.0;INTEGRATED BILLING;**137,232,320,348,349**;21-MAR-94;Build 46
"RTN","IBCEP5",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP5",4,0)
 ;
"RTN","IBCEP5",5,0)
EN ; -- main entry point for IBCE PRV MAINT
"RTN","IBCEP5",6,0)
 N IBPRV,IBINS
"RTN","IBCEP5",7,0)
EN1 ; Entrypoint for non-VA provider ID maintenance hook
"RTN","IBCEP5",8,0)
 N IBSLEV,DIR,Y,X,IBPRMPT,IBNVAFL,IBIF
"RTN","IBCEP5",9,0)
 K IBFASTXT
"RTN","IBCEP5",10,0)
 S IBIF="" I $G(IBPRV) S IBIF=$$GET1^DIQ(355.93,IBPRV,.02,"I")
"RTN","IBCEP5",11,0)
 D FULL^VALM1
"RTN","IBCEP5",12,0)
 S IBPRMPT=$S(IBIF=1:"LAB OR FACILITY",1:"PROVIDER")
"RTN","IBCEP5",13,0)
 S DIR(0)="SA^1:"_IBPRMPT_"'S OWN IDS;2:"_IBPRMPT_" IDS FURNISHED BY AN INSURANCE COMPANY"
"RTN","IBCEP5",14,0)
 S DIR("A")="SELECT SOURCE OF ID: ",DIR("B")=$P($P(DIR(0),":",2),";")
"RTN","IBCEP5",15,0)
 W ! D ^DIR K DIR W !
"RTN","IBCEP5",16,0)
 I Y'>0 Q
"RTN","IBCEP5",17,0)
 S IBSLEV=+Y
"RTN","IBCEP5",18,0)
 D EN^VALM("IBCE PRVPRV MAINT")
"RTN","IBCEP5",19,0)
 Q
"RTN","IBCEP5",20,0)
 ;
"RTN","IBCEP5",21,0)
HDR ; -- header code
"RTN","IBCEP5",22,0)
 N IBC,Z,IBIF
"RTN","IBCEP5",23,0)
 S IBIF="" I $G(IBNPRV) S IBIF=$$GET1^DIQ(355.93,IBNPRV,.02,"I")
"RTN","IBCEP5",24,0)
 K VALMHDR
"RTN","IBCEP5",25,0)
 S IBC=1
"RTN","IBCEP5",26,0)
 S IBPRMPT=$S(IBIF=1:"Lab or Facility",1:"Performing Provider")
"RTN","IBCEP5",27,0)
 S Z="** "_$S($G(IBSLEV)=1:IBPRMPT_"'s Own IDs (No Specific Insurance Co)",1:IBPRMPT_" IDs from Insurance Co")_" **"
"RTN","IBCEP5",28,0)
 S VALMHDR(IBC)=$J("",80-$L(Z)\2)_Z,IBC=IBC+1
"RTN","IBCEP5",29,0)
 I $G(IBPRV),'+IBIF S VALMHDR(IBC)="PROVIDER   : "_$$EXPAND^IBTRE(355.9,.01,IBPRV)_$S(IBPRV["VA(200":" (VA PROVIDER)",1:" (NON-VA PROVIDER)"),IBC=IBC+1
"RTN","IBCEP5",30,0)
 I $G(IBPRV),+IBIF S VALMHDR(IBC)="Provider: "_$$EXPAND^IBTRE(355.9,.01,IBPRV)_$S(IBIF=1:"(Non-VA Lab or Facility)",1:""),IBC=IBC+1
"RTN","IBCEP5",31,0)
 I $G(IBINS) D
"RTN","IBCEP5",32,0)
 . N PCF,PCDISP
"RTN","IBCEP5",33,0)
 . S PCF=$P($G(^DIC(36,+IBINS,3)),"^",13)
"RTN","IBCEP5",34,0)
 . S PCDISP=$S($G(IBSLEV)'=2!($G(IBPRV)'["VA(200,"):"",PCF="C":"(Child)",PCF="P":"(Parent)",1:"")
"RTN","IBCEP5",35,0)
 . S VALMHDR(IBC)=$S(IBIF:"Insurance Co: ",1:"INSURANCE CO: ")_$P($G(^DIC(36,+IBINS,0)),U)_" "_PCDISP
"RTN","IBCEP5",36,0)
 Q
"RTN","IBCEP5",37,0)
 ;
"RTN","IBCEP5",38,0)
INIT ; -- init variables and list array
"RTN","IBCEP5",39,0)
 N IBFILE,DIR,DIC,Y,X,DTOUT,DUOUT,IBIF,AGAIN
"RTN","IBCEP5",40,0)
 ;
"RTN","IBCEP5",41,0)
 K ^TMP("IB_EDITED_IDS",$J)  ; This will be to keep track of ID's edited during this session
"RTN","IBCEP5",42,0)
 S IBIF="" I $G(IBNPRV) S IBIF=$$GET1^DIQ(355.93,IBNPRV,.02,"I")
"RTN","IBCEP5",43,0)
 ;
"RTN","IBCEP5",44,0)
 ; Removing Care Unit under certain conditions
"RTN","IBCEP5",45,0)
 ; This list is used for multiple purposes and not all have Care Units Associated with them
"RTN","IBCEP5",46,0)
 ; Also, a different protocol menu is used with these
"RTN","IBCEP5",47,0)
 ; IBNPRV is a non VA provider
"RTN","IBCEP5",48,0)
 ; IBIF = 1 means this is a group or facility, not an individual.
"RTN","IBCEP5",49,0)
 ; 
"RTN","IBCEP5",50,0)
 I $G(IBNPRV),$G(IBIF)=1 D
"RTN","IBCEP5",51,0)
 . S VALM("TITLE")="Secondary Provider ID"
"RTN","IBCEP5",52,0)
 . K VALMDDF("CAREUNIT")
"RTN","IBCEP5",53,0)
 . I VALMCAP["Care Unit" S VALMCAP=$P(VALMCAP,"Care Unit")_"         "_$P(VALMCAP,"Care Unit",2)
"RTN","IBCEP5",54,0)
 . K VALM("PROTOCOL")
"RTN","IBCEP5",55,0)
 . S Y=$$FIND1^DIC(101,,,"IBCE PRVNVA LOF MAINT")
"RTN","IBCEP5",56,0)
 . I Y S VALM("PROTOCOL")=+Y_";ORD(101,"
"RTN","IBCEP5",57,0)
 ;
"RTN","IBCEP5",58,0)
 I $G(IBPRV) S IBFILE="IBA(355.93,",IBPRV=+IBPRV_";"_IBFILE
"RTN","IBCEP5",59,0)
 I '$G(IBPRV) D  G:$G(VALMQUIT) INITQ
"RTN","IBCEP5",60,0)
 . S DIR(0)="SAO^V:VA PROVIDER;N:NON-VA PROVIDER",DIR("A")="(V)A or (N)on-VA provider: ",DIR("B")="V"
"RTN","IBCEP5",61,0)
 . D ^DIR K DIR
"RTN","IBCEP5",62,0)
 . I "NV"'[Y!(Y="") S VALMQUIT=1 Q
"RTN","IBCEP5",63,0)
 . S IBFILE=$S(Y="V":"VA(200,",1:"IBA(355.93,")
"RTN","IBCEP5",64,0)
 . S DIC=U_IBFILE,DIC(0)="AEMQ"_$S(IBFILE["355.93":"L",1:"")
"RTN","IBCEP5",65,0)
 . S DIC("A")="Select "_$S(IBFILE["355.93":"NON-",1:"")_"V.A. PROVIDER NAME: "
"RTN","IBCEP5",66,0)
 . S:IBFILE["355.93" DIC("DR")=".02////2;.03;.04"
"RTN","IBCEP5",67,0)
 . F  D  I $G(IBPRV)!$G(VALMQUIT) K DIC Q
"RTN","IBCEP5",68,0)
 .. D ^DIC
"RTN","IBCEP5",69,0)
 .. I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 Q
"RTN","IBCEP5",70,0)
 .. I Y'>0 W !,*7,"This is a required response. Enter '^' to exit" Q
"RTN","IBCEP5",71,0)
 .. S IBPRV=+Y_";"_IBFILE
"RTN","IBCEP5",72,0)
 ;
"RTN","IBCEP5",73,0)
AGAIN I $G(IBSLEV)=2 D  G:$G(AGAIN) AGAIN G:$G(VALMQUIT) INITQ
"RTN","IBCEP5",74,0)
 . S AGAIN=0
"RTN","IBCEP5",75,0)
 . S DIR(0)="PA^DIC(36,:AEMQ",DIR("A")="Select INSURANCE CO: ",DIR("?",1)="Select an INSURANCE CO to display its provider ID's"
"RTN","IBCEP5",76,0)
 . D ^DIR K DIR
"RTN","IBCEP5",77,0)
 . I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 Q
"RTN","IBCEP5",78,0)
 . S IBINS=$S(Y>0:+Y,1:"NO")
"RTN","IBCEP5",79,0)
 . I $G(IBPRV)'["VA(200," Q    ; Only VA providers
"RTN","IBCEP5",80,0)
 . I $P($G(^DIC(36,+IBINS,3)),"^",13)="C" D  S AGAIN=1 Q
"RTN","IBCEP5",81,0)
 .. W !,*7,"This is a Child Insurance Company.  Editing IDs is not permitted."
"RTN","IBCEP5",82,0)
 ;
"RTN","IBCEP5",83,0)
 E  D
"RTN","IBCEP5",84,0)
 . S IBINS="NO"
"RTN","IBCEP5",85,0)
 D BLD
"RTN","IBCEP5",86,0)
INITQ Q
"RTN","IBCEP5",87,0)
 ;
"RTN","IBCEP5",88,0)
BLD ;  Build initial display
"RTN","IBCEP5",89,0)
 ; Assumes IBPRV = the variable ptr for prov id file (355.9)
"RTN","IBCEP5",90,0)
 ;         IBINS = the ien of the ins co or if null, ALL is assumed
"RTN","IBCEP5",91,0)
 ;         IBSLEV = 1 to display only provider default ids
"RTN","IBCEP5",92,0)
 ;                = 2 to display all provider/insurance co ids
"RTN","IBCEP5",93,0)
 N IB,IBLCT,IBCT,CT,PT,CU,INS,FT,Z,IBENT,IB1,IBIF
"RTN","IBCEP5",94,0)
 ;
"RTN","IBCEP5",95,0)
 S IBIF="" I $G(IBPRV)[355.93 S IBIF=$$GET1^DIQ(355.93,+IBPRV,.02,"I")
"RTN","IBCEP5",96,0)
 ;
"RTN","IBCEP5",97,0)
 K ^TMP("IBPRV_",$J),^TMP("IBPRV_SORT",$J)
"RTN","IBCEP5",98,0)
 K Z0
"RTN","IBCEP5",99,0)
 S (IBENT,IBCT,IBLCT)=0,INS="",IB1=1
"RTN","IBCEP5",100,0)
 F  S INS=$S($G(IBINS):IBINS,IBSLEV=1:"*ALL*",1:$O(^IBA(355.9,"AUNIQ",IBPRV,INS))) Q:$S(INS="":1,$G(IBINS)!(IBSLEV=1):$D(CU),1:0)  S CU="",IB1=0 F  S CU=$O(^IBA(355.9,"AUNIQ",IBPRV,INS,CU)) Q:CU=""  D
"RTN","IBCEP5",101,0)
 . S FT="" F  S FT=$O(^IBA(355.9,"AUNIQ",IBPRV,INS,CU,FT)) Q:FT=""  S CT="" F  S CT=$O(^IBA(355.9,"AUNIQ",IBPRV,INS,CU,FT,CT)) Q:CT=""  S PT=0 F  S PT=$O(^IBA(355.9,"AUNIQ",IBPRV,INS,CU,FT,CT,PT)) Q:'PT  D
"RTN","IBCEP5",102,0)
 .. S Z=0 F  S Z=$O(^IBA(355.9,"AUNIQ",IBPRV,INS,CU,FT,CT,PT,Z)) Q:'Z  S IB=$G(^IBA(355.9,Z,0)) D
"RTN","IBCEP5",103,0)
 ... S ^TMP("IBPRV_SORT",$J,$S(INS:$P($G(^DIC(36,+INS,0)),U)_" ",1:" ALL"),PT,FT,CT,CU,Z)=$P(IB,U,7)
"RTN","IBCEP5",104,0)
 ;
"RTN","IBCEP5",105,0)
 I IBSLEV=1,IBPRV["IBA(355.93",$P($G(^IBA(355.93,+IBPRV,0)),U,12)'="" S ^TMP("IBPRV_SORT",$J," ALL",+$$STLIC^IBCEP8(),0,0,"*N/A*",0)=$P(^IBA(355.93,+IBPRV,0),U,12)
"RTN","IBCEP5",106,0)
 S INS="" F  S INS=$O(^TMP("IBPRV_SORT",$J,INS)) Q:INS=""  D
"RTN","IBCEP5",107,0)
 . I '$G(IBINS),'IBIF D:IBLCT SET^VALM10(IBLCT+1," ",IBCT) S IBLCT=$S(IBLCT:IBLCT+2,1:1) D SET^VALM10(IBLCT,"INSURANCE CO: "_$S($E(INS)=" ":"ALL INSURANCE",1:INS),$S(IBCT:IBCT,1:1))
"RTN","IBCEP5",108,0)
 . S PT=""
"RTN","IBCEP5",109,0)
 . F  S PT=$O(^TMP("IBPRV_SORT",$J,INS,PT)) Q:PT=""  S FT="" F  S FT=$O(^TMP("IBPRV_SORT",$J,INS,PT,FT)) Q:FT=""  S CT="" F  S CT=$O(^TMP("IBPRV_SORT",$J,INS,PT,FT,CT)) Q:CT=""  D
"RTN","IBCEP5",110,0)
 .. S CU="" F  S CU=$O(^TMP("IBPRV_SORT",$J,INS,PT,FT,CT,CU)) Q:CU=""  S Z="" F  S Z=$O(^TMP("IBPRV_SORT",$J,INS,PT,FT,CT,CU,Z)) Q:Z=""  S IB=$G(^(Z)) D
"RTN","IBCEP5",111,0)
 ... S IBLCT=IBLCT+1,IBCT=IBCT+1
"RTN","IBCEP5",112,0)
 ... S Z0=$E(IBCT_"     ",1,4)_" "_$E($$EXPAND^IBTRE(355.9,.06,PT)_$S(PT=$$STLIC^IBCEP8():"("_$P($G(^DIC(5,+$P($G(^IBA(355.93,+IBPRV,0)),U,7),0)),U,2)_")",1:"")_$J("",20),1,20)_"  "_$S(FT=1:"UB-04",FT=2:"1500 ",1:"BOTH ")
"RTN","IBCEP5",113,0)
 ... S Z0=Z0_"  "_$E($S(CT=3:"RX",CT=1:"INPT",CT=2:"OUTPT",1:"INPT/OUTPT")_$J("",11),1,11)
"RTN","IBCEP5",114,0)
 ... S Z0=Z0_"  "_$E($S(CU'="*N/A*":$P($G(^IBA(355.95,+$G(^IBA(355.96,CU,0)),0)),U),1:"")_$J("",15),1,15) I Z0["MEDICINE" X "*"
"RTN","IBCEP5",115,0)
 ... D SET^VALM10(IBLCT,Z0_" "_IB,IBCT)
"RTN","IBCEP5",116,0)
 ... S ^TMP("IBPRV_",$J,"ZIDX",IBCT)=$S(Z'=0:Z,1:"LIC^"_IBPRV)
"RTN","IBCEP5",117,0)
 I IBSLEV=1,IBPRV["VA(200" D
"RTN","IBCEP5",118,0)
 . N IBP
"RTN","IBCEP5",119,0)
 . S IBP=+IBPRV
"RTN","IBCEP5",120,0)
 . Q:'$$GETLIC^IBCEP5D(.IBP)
"RTN","IBCEP5",121,0)
 . I IBCT S IBLCT=IBLCT+1 D SET^VALM10(IBLCT," ",IBCT)
"RTN","IBCEP5",122,0)
 . S Z=0 F  S Z=$O(IBP(Z)) Q:'Z  D
"RTN","IBCEP5",123,0)
 .. S IBLCT=IBLCT+1,IBCT=IBCT+1
"RTN","IBCEP5",124,0)
 .. D SET^VALM10(IBLCT,$E(IBCT_"     ",1,4)_$E($P($G(^DIC(5,+Z,0)),U,2)_" STATE LICENSE #"_$J("",20),1,20)_$J("",39)_IBP(Z),IBCT)
"RTN","IBCEP5",125,0)
 .. S ^TMP("IBPRV_",$J,"ZIDX",IBCT)="LIC^"_+IBPRV
"RTN","IBCEP5",126,0)
 K ^TMP("IBPRV_SORT",$J)
"RTN","IBCEP5",127,0)
 ;
"RTN","IBCEP5",128,0)
 I IBLCT=0 D  G BLDQ ; No entries for ins co selected
"RTN","IBCEP5",129,0)
 . D SET^VALM10(1," ")
"RTN","IBCEP5",130,0)
 . D SET^VALM10(2,"  No ID's found for provider "_$S('$G(IBINS):"",1:"and selected insurance co"))
"RTN","IBCEP5",131,0)
 . S IBLCT=2
"RTN","IBCEP5",132,0)
 ;
"RTN","IBCEP5",133,0)
BLDQ K VALMCNT,VALMBG
"RTN","IBCEP5",134,0)
 S VALMCNT=IBLCT,VALMBG=1
"RTN","IBCEP5",135,0)
 Q
"RTN","IBCEP5",136,0)
 ;
"RTN","IBCEP5",137,0)
HELP ; -- help code
"RTN","IBCEP5",138,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCEP5",139,0)
 Q
"RTN","IBCEP5",140,0)
 ;
"RTN","IBCEP5",141,0)
EXIT ; -- exit code
"RTN","IBCEP5",142,0)
 K IBFASTXT
"RTN","IBCEP5",143,0)
 D COPYPROV^IBCEP5A(IBINS)
"RTN","IBCEP5",144,0)
 K IBPRV
"RTN","IBCEP5",145,0)
 D CLEAN^VALM10
"RTN","IBCEP5",146,0)
 K ^TMP("IBPRV_",$J),^TMP("IBPRV_SORT",$J),IBINS,IBALL
"RTN","IBCEP5",147,0)
 Q
"RTN","IBCEP5",148,0)
 ;
"RTN","IBCEP5",149,0)
EXPND ; -- expand code
"RTN","IBCEP5",150,0)
 Q
"RTN","IBCEP5",151,0)
 ;
"RTN","IBCEP5",152,0)
SEL(IBDA,MANY) ; Select from provider id list
"RTN","IBCEP5",153,0)
 ; IBDA is passed by reference and IBDA(1) returned containing
"RTN","IBCEP5",154,0)
 ;  ien's of the provider id records selected (file 355.9).
"RTN","IBCEP5",155,0)
 ; If > 1 entry can be selected, MANY is set to 1
"RTN","IBCEP5",156,0)
 N Z
"RTN","IBCEP5",157,0)
 S IBDA=0
"RTN","IBCEP5",158,0)
 D EN^VALM2($G(XQORNOD(0)),$S($G(MANY):"",1:"S"))
"RTN","IBCEP5",159,0)
 S Z=0 F  S Z=$O(VALMY(Z)) Q:'Z  S IBDA=IBDA+1,IBDA(IBDA)=$G(^TMP("IBPRV_",$J,"ZIDX",Z))
"RTN","IBCEP5",160,0)
 Q
"RTN","IBCEP5",161,0)
 ;
"RTN","IBCEP5B")
0^60^B41204243^B40601751
"RTN","IBCEP5B",1,0)
IBCEP5B ;ALB/TMP - EDI UTILITIES for prov ID ;29-SEP-00
"RTN","IBCEP5B",2,0)
 ;;2.0;INTEGRATED BILLING;**137,239,232,320,348,349**;21-MAR-94;Build 46
"RTN","IBCEP5B",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP5B",4,0)
 ;
"RTN","IBCEP5B",5,0)
NEWID(IBFILE,IBINS,IBPRV,IBPTYP,IBIEN,IBF) ; Generic add prov id
"RTN","IBCEP5B",6,0)
 ; at both prov (file 355.9) and ins co levels (355.91)
"RTN","IBCEP5B",7,0)
 ; IBFILE = 355.9 or 355.91 - the file being edited
"RTN","IBCEP5B",8,0)
 ; IBINS = ien of ins co (36) or *ALL* for all ins co
"RTN","IBCEP5B",9,0)
 ; IBPRV = vp ien of billing prov
"RTN","IBCEP5B",10,0)
 ; IBPTYP = ien of prov type (file 355.97)
"RTN","IBCEP5B",11,0)
 ; IBIEN = ien of entry being added (req'd)
"RTN","IBCEP5B",12,0)
 ; IBF = 1 if deleting from ins-related options, "" from prov-related
"RTN","IBCEP5B",13,0)
 N DIC,DIR,X,Y,Z,DA,DR,DIE,DO,DD,DLAYGO,DTOUT,DUOUT,IBQ,IBCUND,IB3559,IB35591,Q,IBDR,IBID,AFT
"RTN","IBCEP5B",14,0)
 S IB35591(.03)="",IBPTYP=$G(IBPTYP)
"RTN","IBCEP5B",15,0)
 F Z=.04,.05,.03 D  G:Z="" NEWQ
"RTN","IBCEP5B",16,0)
 . I $S(Z'=.03:1,1:$S('$G(IBINS):0,1:$G(IBCUND))) D  Q:Z=""
"RTN","IBCEP5B",17,0)
 .. N DA
"RTN","IBCEP5B",18,0)
 .. I Z'=.03 S DIR(0)=IBFILE_","_Z
"RTN","IBCEP5B",19,0)
 .. I Z=.03 D
"RTN","IBCEP5B",20,0)
 ... S DIR(0)="PAO^355.95:AEMQ"
"RTN","IBCEP5B",21,0)
 ... S DIR("S")="I $O(^IBA(355.96,""AUNIQ"","_IBINS_",Y,"_$G(IB3559(.04))_","_$G(IB3559(.05))_","_IBPTYP_",0))!($O(^IBA(355.96,""AUNIQ"","_IBINS_",Y,"_$G(IB3559(.04))_",0,"_IBPTYP_",0)))"
"RTN","IBCEP5B",22,0)
 ... S DIR("S")=DIR("S")_"!($O(^IBA(355.96,""AUNIQ"","_IBINS_",Y,0,"_$G(IB3559(.05))_","_IBPTYP_",0)))!($O(^IBA(355.96,""AUNIQ"","_IBINS_",Y,0,0,"_IBPTYP_",0)))"
"RTN","IBCEP5B",23,0)
 ... S DIR("?",1)="Care unit describes areas of service and is assigned by the payer, if",DIR("?")="  applicable.  Use Care Unit Maintenance to add or modify care units."
"RTN","IBCEP5B",24,0)
 .. ;
"RTN","IBCEP5B",25,0)
 .. I Z=.04,IBPRV["355.93",$$GET1^DIQ(355.93,+IBPRV,.02,"I")=1 D
"RTN","IBCEP5B",26,0)
 ... I $$GET1^DIQ(355.97,IBPTYP,.03,"I")="EI" S $P(DIR(0),U,3)="K:Y'=1 X",DIR("?")="Provider ID Qualifier selected only allows institutional (UB type) forms" Q
"RTN","IBCEP5B",27,0)
 ... I $$GET1^DIQ(355.97,IBPTYP,.03,"I")="TJ" S $P(DIR(0),U,3)="K:Y'=2 X",DIR("?")="Provider ID Qualifier selected only allows professional (CMS-1500) forms" Q
"RTN","IBCEP5B",28,0)
 ... N AFT
"RTN","IBCEP5B",29,0)
 ... S AFT=$$GET1^DIQ(355.97,IBPTYP,.07,"I")  ; get allowable form type for this Provider ID Type
"RTN","IBCEP5B",30,0)
 ... I AFT="B" S $P(DIR(0),U,3)="K:"".0.1.2.""'[("".""_Y_""."") X",DIR("?")="Provider ID Qualifier selected allows institutional, professional or both" Q
"RTN","IBCEP5B",31,0)
 ... I AFT="P" S $P(DIR(0),U,3)="K:Y'=2 X",DIR("?")="Provider ID Qualifier selected only allows professional (CMS-1500) forms" Q
"RTN","IBCEP5B",32,0)
 ... I AFT="I" S $P(DIR(0),U,3)="K:Y'=1 X",DIR("?")="Provider ID Qualifier selected only allows institutional (UB type) forms" Q
"RTN","IBCEP5B",33,0)
 .. ;
"RTN","IBCEP5B",34,0)
 .. S DA=0
"RTN","IBCEP5B",35,0)
 .. I Z=.04,$P($G(^IBE(355.97,+IBPTYP,0)),U,3)="1A" D SETDIR(.DIR)
"RTN","IBCEP5B",36,0)
 .. D ^DIR K DIR
"RTN","IBCEP5B",37,0)
 .. I $D(DTOUT)!$D(DUOUT) S Z="" K IB3559,IB35591 Q
"RTN","IBCEP5B",38,0)
 .. S IB3559(Z)=$S(Z'=.03:$P(Y,U),1:$S($P(Y,U)>0:$P(Y,U),1:"*N/A*"))
"RTN","IBCEP5B",39,0)
 . I Z=.05 D
"RTN","IBCEP5B",40,0)
 .. S IBCUND=$$CAREUN^IBCEP3(IBINS,IBPTYP,IB3559(.04),IB3559(.05),IB3559(.05)=3)
"RTN","IBCEP5B",41,0)
 .. S:'IBCUND!($G(IB3559(.03))=0) IB3559(.03)="*N/A*"
"RTN","IBCEP5B",42,0)
 .. I '$G(IBINS) S IBINS="*ALL*"
"RTN","IBCEP5B",43,0)
 . I Z=.03 D CAREUN^IBCEP5C
"RTN","IBCEP5B",44,0)
 ;
"RTN","IBCEP5B",45,0)
 I $D(IB3559) D
"RTN","IBCEP5B",46,0)
 . N Q,Z2,Z3,Z4,Z5,Z6,IBLAST,IBOK,DIR,Y,X
"RTN","IBCEP5B",47,0)
 . S IBLAST=0
"RTN","IBCEP5B",48,0)
 . D DISP^IBCEP4("Q",IBINS,IBPTYP,IB3559(.04),IB3559(.05),1)
"RTN","IBCEP5B",49,0)
 . W !!,"THE FOLLOWING WAS CHOSEN:"
"RTN","IBCEP5B",50,0)
 . S Q=0 F  S Q=$O(Q(Q)) Q:'Q  W !,?3,Q(Q)
"RTN","IBCEP5B",51,0)
 . I IBCUND W !,?3,"CARE UNIT: "_$$EXPAND^IBTRE(355.96,.01,IB3559(.03))
"RTN","IBCEP5B",52,0)
 . S Z2=IBINS,Z3=IB35591(.03),Z4=IB3559(.04),Z5=IB3559(.05),Z6=IBPTYP
"RTN","IBCEP5B",53,0)
 . S IBOK=1
"RTN","IBCEP5B",54,0)
 . ; If both forms, chk for specific
"RTN","IBCEP5B",55,0)
 . I 'Z4 S IBOK=$$COMBOK^IBCEP5C(IBFILE,IBPRV_U_4_U_Z2_U_Z3_U_Z4_U_Z5_U_Z6,1,$G(IBFILE)=355.91)
"RTN","IBCEP5B",56,0)
 . ; If specific form, chk for all
"RTN","IBCEP5B",57,0)
 . I IBOK,Z4 S IBOK=$$COMBOK^IBCEP5C(IBFILE,IBPRV_U_4_U_Z2_U_Z3_U_Z4_U_Z5_U_Z6,0,$G(IBFILE)=355.91)
"RTN","IBCEP5B",58,0)
 . ; If both care types, chk for specific
"RTN","IBCEP5B",59,0)
 . I IBOK,'Z5 S IBOK=$$COMBOK^IBCEP5C(IBFILE,IBPRV_U_5_U_Z2_U_Z3_U_Z4_U_Z5_U_Z6,1,$G(IBFILE)=355.91)
"RTN","IBCEP5B",60,0)
 . ; If specific care type, chk for all
"RTN","IBCEP5B",61,0)
 . I IBOK,Z5 S IBOK=$$COMBOK^IBCEP5C(IBFILE,IBPRV_U_5_U_Z2_U_Z3_U_Z4_U_Z5_U_Z6,0,$G(IBFILE)=355.91)
"RTN","IBCEP5B",62,0)
 . I 'IBOK K IB3559,IB35591
"RTN","IBCEP5B",63,0)
 . I IBOK D
"RTN","IBCEP5B",64,0)
 .. S DIR(0)=IBFILE_",.07"
"RTN","IBCEP5B",65,0)
 .. W ! D ^DIR K DIR
"RTN","IBCEP5B",66,0)
 .. S IBID=Y
"RTN","IBCEP5B",67,0)
 .. I $D(DTOUT)!$D(DUOUT) K IB3559,IB35591 S IBOK=0 Q
"RTN","IBCEP5B",68,0)
 .. S IBDR=$S(IBFILE=355.9:$S($G(IBINS):".02////"_IBINS_";",1:""),1:"")_$S($G(IBCUND):".03////"_$S(IB35591(.03):IB35591(.03),1:"*N/A*")_";",1:"")_".04////"_IB3559(.04)_";.05////"_IB3559(.05)_";.06////"_IBPTYP_$S(IBID'="":";.07////"_IBID,1:"")
"RTN","IBCEP5B",69,0)
 .. ;
"RTN","IBCEP5B",70,0)
 .. I $G(IBIEN) D
"RTN","IBCEP5B",71,0)
 ... S DR=IBDR,DA=IBIEN,DIE="^IBA("_IBFILE_","
"RTN","IBCEP5B",72,0)
 ... D ^DIE
"RTN","IBCEP5B",73,0)
 ... I $D(Y) K IB3559,IB35591 S IBOK=0
"RTN","IBCEP5B",74,0)
 ;
"RTN","IBCEP5B",75,0)
NEWQ ;
"RTN","IBCEP5B",76,0)
 I '$D(IB3559),$G(IBIEN) D  Q
"RTN","IBCEP5B",77,0)
 . N DIR,DIK,DA,X,Y
"RTN","IBCEP5B",78,0)
 . S DA=IBIEN,DIK="^IBA("_IBFILE_"," D ^DIK
"RTN","IBCEP5B",79,0)
 . S DIR(0)="EA",DIR("A",1)=$S('$G(IBOK):"",1:"PROBLEM ENCOUNTERED FILING THE RECORD - ")_"RECORD NOT ADDED",DIR("A")="PRESS ENTER to continue " W ! D ^DIR K DIR
"RTN","IBCEP5B",80,0)
 ;
"RTN","IBCEP5B",81,0)
 ; Save this for Copy ID actions
"RTN","IBCEP5B",82,0)
 I $G(IBIEN) D
"RTN","IBCEP5B",83,0)
 . I IBFILE=355.91!(IBFILE=355.9&($P($G(^IBA(IBFILE,IBIEN,0)),U)["VA(200,")) D
"RTN","IBCEP5B",84,0)
 .. N NEXTONE S NEXTONE=$$NEXTONE^IBCEP5A()
"RTN","IBCEP5B",85,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE)=IBIEN_U_"ADD"_U_IBFILE
"RTN","IBCEP5B",86,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE,0)=$G(^IBA(IBFILE,IBIEN,0))
"RTN","IBCEP5B",87,0)
 Q
"RTN","IBCEP5B",88,0)
 ;
"RTN","IBCEP5B",89,0)
CHG(IBFILE,IBDA) ; Generic call - edit prov id
"RTN","IBCEP5B",90,0)
 ; IBFILE = 355.9 or 355.91 (file being edited)
"RTN","IBCEP5B",91,0)
 ; IBDA = ien in file
"RTN","IBCEP5B",92,0)
 ;
"RTN","IBCEP5B",93,0)
 N DIR,DIE,DA,DR,IBCUCHK,IBOK,IB0,IBOLD,X,Y,Z
"RTN","IBCEP5B",94,0)
 F Z=1:1:3 L +^IBA(IBFILE,IBDA):5 Q:$T  W !,"Attempting to lock record"
"RTN","IBCEP5B",95,0)
 I '$T D  G CHGQ
"RTN","IBCEP5B",96,0)
 . W !,"RECORD LOCKED BY ANOTHER USER - TRY AGAIN LATER"
"RTN","IBCEP5B",97,0)
 . D ENTER(.DIR)
"RTN","IBCEP5B",98,0)
 . W ! D ^DIR K DIR W !
"RTN","IBCEP5B",99,0)
 S (IB0,IBOLD)=$G(^IBA(IBFILE,IBDA,0))
"RTN","IBCEP5B",100,0)
 G:IB0="" CHGQ
"RTN","IBCEP5B",101,0)
 F Z=.04,.05,.06,.03 S IBOK=$$EDIT(IBFILE,Z,IB0,IBOLD,IBDA,0) S:IBOK="*ALL*" IBOK="" Q:$P(IBOK,U,2)  S $P(IB0,U,Z*100)=$P(IBOK,U)
"RTN","IBCEP5B",102,0)
 I $P(IBOK,U,2) S DIR(0)="EA",DIR("A")="NO CHANGES MADE, PRESS ENTER TO CONTINUE: " W ! D ^DIR K DIR W ! G CHGQ
"RTN","IBCEP5B",103,0)
 S IBOK=$$EDIT(IBFILE,.07,IB0,IBOLD,IBDA,1)
"RTN","IBCEP5B",104,0)
 I '$P(IBOK,U,2) S $P(IB0,U,7)=$P(IBOK,U)
"RTN","IBCEP5B",105,0)
 I $P(IBOK,U,2)!(IB0=IBOLD) S DIR(0)="EA",DIR("A")="NO CHANGES MADE, PRESS ENTER TO CONTINUE: " W ! D ^DIR K DIR W ! G CHGQ
"RTN","IBCEP5B",106,0)
 S IBCUCHK=$$CUCHK^IBCEP5C(IBDA,IB0) G:IBCUCHK CHGQ
"RTN","IBCEP5B",107,0)
 S DR=""
"RTN","IBCEP5B",108,0)
 F Z=2,4:1:7,3 I $P(IB0,U,Z)'=$P(IBOLD,U,Z) S DR=DR_$S(DR'="":";",1:"")_(Z/100)_"///"_$S($P(IB0,U,Z)'="@":"/",1:"")_$P(IB0,U,Z)
"RTN","IBCEP5B",109,0)
 I DR'="" D
"RTN","IBCEP5B",110,0)
 . I IBFILE=355.91!(IBFILE=355.9&($P(IB0,U)["VA(200,")) D
"RTN","IBCEP5B",111,0)
 .. N NEXTONE
"RTN","IBCEP5B",112,0)
 .. S NEXTONE=$$NEXTONE^IBCEP5A()
"RTN","IBCEP5B",113,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE)=IBDA_U_"MOD"_U_IBFILE_U_IBDA
"RTN","IBCEP5B",114,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE,"OLD0")=IBOLD
"RTN","IBCEP5B",115,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE,0)=IB0
"RTN","IBCEP5B",116,0)
 . S DIE="^IBA("_IBFILE_",",DA=IBDA D ^DIE
"RTN","IBCEP5B",117,0)
CHGQ L -^IBA(IBFILE,IBDA)
"RTN","IBCEP5B",118,0)
 Q
"RTN","IBCEP5B",119,0)
 ;
"RTN","IBCEP5B",120,0)
DEL(IBFILE,IBDA,IBF) ; Delete prov specific ID's
"RTN","IBCEP5B",121,0)
 ; IBFILE = 355.9 or 355.91 for the file
"RTN","IBCEP5B",122,0)
 ; IBDA = ien of entry in file IBFILE
"RTN","IBCEP5B",123,0)
 ; IBF = 1 if deleting from ins co-related options, ""
"RTN","IBCEP5B",124,0)
 ;       from prov-related options
"RTN","IBCEP5B",125,0)
 D DEL^IBCEP5C(IBFILE,IBDA,$G(IBF))
"RTN","IBCEP5B",126,0)
 Q
"RTN","IBCEP5B",127,0)
 ;
"RTN","IBCEP5B",128,0)
EDIT(IBFILE,IBFLD,IB0,IBOLD,IBIEN,IBCK1) ; Generic edit flds
"RTN","IBCEP5B",129,0)
 Q $$EDIT^IBCEP5D($G(IBFILE),$G(IBFLD),$G(IB0),$G(IBOLD),$G(IBIEN),$G(IBCK1))
"RTN","IBCEP5B",130,0)
 ;
"RTN","IBCEP5B",131,0)
SETDIR(DIR) ; Sets dir for BLUE CROSS only UB-04 form type
"RTN","IBCEP5B",132,0)
 S DIR("B")="UB-04",$P(DIR(0),U,3)="K:Y'=1 X",DIR("?")="ONLY UB-04 FORM TYPE IS VALID FOR BLUE CROSS ID"
"RTN","IBCEP5B",133,0)
 Q
"RTN","IBCEP5B",134,0)
 ;
"RTN","IBCEP5B",135,0)
ENTER(DIR) ;
"RTN","IBCEP5B",136,0)
 S DIR(0)="EA",DIR("A")="PRESS ENTER TO CONTINUE: "
"RTN","IBCEP5B",137,0)
 Q
"RTN","IBCEP5C")
0^61^B44199946^B43594569
"RTN","IBCEP5C",1,0)
IBCEP5C ;ALB/TMP - EDI UTILITIES for provider ID ;02-NOV-00
"RTN","IBCEP5C",2,0)
 ;;2.0;INTEGRATED BILLING;**137,239,232,320,348,349**;21-MAR-94;Build 46
"RTN","IBCEP5C",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP5C",4,0)
 ;
"RTN","IBCEP5C",5,0)
COMBOK(IBFILE,IBDAT,IBALL,IBF) ; Generic ask if conflict, should id rec still
"RTN","IBCEP5C",6,0)
 ;  be added?
"RTN","IBCEP5C",7,0)
 ; IBFILE = 355.9 or 355.91 for the file being edited
"RTN","IBCEP5C",8,0)
 ; IBDAT = var ptr prov ien (355.9) ^ pc to check ^
"RTN","IBCEP5C",9,0)
 ;           ins co ien or *ALL* ^ care unit or *N/A* ^
"RTN","IBCEP5C",10,0)
 ;           form type code ^ care type code ^ prov id type ptr
"RTN","IBCEP5C",11,0)
 ; IBALL = flag:
"RTN","IBCEP5C",12,0)
 ;   0 = Individual entry selected - check for existing ALL entry
"RTN","IBCEP5C",13,0)
 ;   1 = 'ALL' selected - check for existing individual ones
"RTN","IBCEP5C",14,0)
 ; IBF = 1 if deleting from ins co-related options, ""
"RTN","IBCEP5C",15,0)
 ;       from provider-related options
"RTN","IBCEP5C",16,0)
 ; Returns 1 if ok to continue, 0 if not
"RTN","IBCEP5C",17,0)
 ;
"RTN","IBCEP5C",18,0)
 N X,Y,Q,DIR,Z,IBD,IBDD,IBOK,IBSPEC
"RTN","IBCEP5C",19,0)
 S IBALL=$G(IBALL),IBOK=1
"RTN","IBCEP5C",20,0)
 S IBD=+$P(IBDAT,U,2),IBDD=$S(IBD=4:5,1:4)
"RTN","IBCEP5C",21,0)
 F Z=2:1:6 D
"RTN","IBCEP5C",22,0)
 . I IBD'=Z,$P(IBDAT,U,Z+1)'="" S Z(Z)=$P(IBDAT,U,Z+1) Q
"RTN","IBCEP5C",23,0)
 . I IBD=Z S IBD(Z)=$P(IBDAT,U,Z+1)
"RTN","IBCEP5C",24,0)
 K IBSPEC
"RTN","IBCEP5C",25,0)
 I IBALL D  ; Check for specific
"RTN","IBCEP5C",26,0)
 . N X0,X1
"RTN","IBCEP5C",27,0)
 . S X1=0
"RTN","IBCEP5C",28,0)
 . F  S X1=$O(^IBA(IBFILE,"AC",$S(IBFILE=355.9:Z(6),1:Z(2)),$S(IBFILE=355.9:Z(2),1:Z(6)),$S(IBFILE=355.9:$P(IBDAT,U),1:Z(3)),X1)) Q:'X1  S X0=$G(^IBA(IBFILE,X1,0)) I $S(IBFILE=355.9:$P(X0,U,3)=Z(3),1:1) D
"RTN","IBCEP5C",29,0)
 .. I $P(X0,U,IBD)'=IBD(IBD),"12"[$P(X0,U,IBD),($P(X0,U,IBDD)=Z(IBDD)!($P(X0,U,IBDD)=0)!(Z(IBDD)=0&(IBD(IBD)=0))) S X1($P(X0,U,IBD))=X1 Q
"RTN","IBCEP5C",30,0)
 .. I IBD(IBD)=0,Z(IBDD)=0 S X1(0)=X1
"RTN","IBCEP5C",31,0)
 . S X0=0 F  S X0=$O(X1(X0)) Q:X0=""  D
"RTN","IBCEP5C",32,0)
 .. S IBSPEC=$S($G(IBSPEC)'="":IBSPEC_"  ",1:"")_$P($S(IBD=4:"UB-04^CMS-1500",1:"INPT^OUTPT"),U,X0)_" ONLY"
"RTN","IBCEP5C",33,0)
 . I $D(X1(0)) S IBSPEC=$S($G(IBSPEC)'="":IBSPEC_"  ",1:"")_$S(IBD=4:"BOTH UB-04 and CMS-1500 form type  AND  BOTH INPT and OUTPT care type",1:"BOTH INPT and OUTPT care type  AND  BOTH UB-04 and CMS-1500 form type")
"RTN","IBCEP5C",34,0)
 . ;
"RTN","IBCEP5C",35,0)
 I 'IBALL D
"RTN","IBCEP5C",36,0)
 . N X0,X1
"RTN","IBCEP5C",37,0)
 . S X1=0
"RTN","IBCEP5C",38,0)
 . F  S X1=$O(^IBA(IBFILE,"AC",$S(IBFILE=355.9:Z(6),1:Z(2)),$S(IBFILE=355.9:Z(2),1:Z(6)),$S(IBFILE=355.9:$P(IBDAT,U),1:Z(3)),X1)) Q:'X1  D
"RTN","IBCEP5C",39,0)
 .. S X0=$G(^IBA(IBFILE,X1,0))
"RTN","IBCEP5C",40,0)
 .. I $S(IBFILE=355.9:$P(X0,U,16)=Z(3),1:1),$P(X0,U,IBD)=0,$S($P(X0,U,IBDD)=Z(IBDD):1,1:$P(X0,U,IBDD)=0) S IBSPEC=""
"RTN","IBCEP5C",41,0)
 ;
"RTN","IBCEP5C",42,0)
 I $D(IBSPEC) D
"RTN","IBCEP5C",43,0)
 . N X0,X1,TEXT,IBWHAT
"RTN","IBCEP5C",44,0)
 . S IBWHAT=$S(IBFILE=355.9:$S($G(IBF):"INS CO AND PROVIDER",1:"PROVIDER"),1:"INSURANCE CO")
"RTN","IBCEP5C",45,0)
 . S X0=$S($D(IBD(4)):"UB-04^CMS-1500",1:"INPT^OUTPT")
"RTN","IBCEP5C",46,0)
 . S X1=$S($D(IBD(4)):"FORM TYPE",1:"CARE TYPE")
"RTN","IBCEP5C",47,0)
 . S DIR(0)="YA"
"RTN","IBCEP5C",48,0)
 . S TEXT(1)="WARNING ... POTENTIAL CONFLICT DETECTED!!"
"RTN","IBCEP5C",49,0)
 . S TEXT(2)=" YOUR NEW COMBINATION APPLIES TO "_$S(IBALL:"BOTH "_$S(IBD=4:"FORM ",1:"INPT AND OUTPT CARE ")_"TYPES",1:"ONLY "_$P(X0,U,IBD(IBD))_" "_X1)
"RTN","IBCEP5C",50,0)
 . S TEXT(3)=" THIS SAME COMBINATION ALREADY EXISTS FOR THE "_IBWHAT_" & "_$S('IBALL:"ALL "_X1_"S",1:"SPECIFIC "_X1_"(S):")
"RTN","IBCEP5C",51,0)
 . S:IBSPEC'="" TEXT(4)=$J("",4)_IBSPEC
"RTN","IBCEP5C",52,0)
 . S TEXT($S($D(TEXT(4)):5,1:4))=" "
"RTN","IBCEP5C",53,0)
 . S DIR("A")="ARE YOU SURE YOU STILL WANT TO ADD THIS RECORD?: "
"RTN","IBCEP5C",54,0)
 . S DIR("?",1)=" "
"RTN","IBCEP5C",55,0)
 . S DIR("?",2)="This combination appears to be conflicting with one(s) already on file."
"RTN","IBCEP5C",56,0)
 . S DIR("?",3)="It has already been defined for the "_$$LOW^XLFSTR(IBWHAT)_" for "_$S(IBALL:"at least 1 specific ",1:"ALL ")_$S(IBD=4:"form",1:"care")_" type"_$S(IBALL:".",1:"s.")
"RTN","IBCEP5C",57,0)
 . S DIR("?")="Respond NO to reject this conflicting record or YES to continue on to add it in spite of the apparent conflict.",DIR("B")="NO"
"RTN","IBCEP5C",58,0)
 . W !! F Q=1:1 Q:'$D(TEXT(Q))  W TEXT(Q),!
"RTN","IBCEP5C",59,0)
 . D ^DIR K DIR W !
"RTN","IBCEP5C",60,0)
 . S IBOK=(Y=1)
"RTN","IBCEP5C",61,0)
 Q IBOK
"RTN","IBCEP5C",62,0)
 ;
"RTN","IBCEP5C",63,0)
CAREUN ;Called from NEWID^IBCEP5B to check for existing record combination
"RTN","IBCEP5C",64,0)
 N DIR
"RTN","IBCEP5C",65,0)
 I IBFILE'=355.9 D
"RTN","IBCEP5C",66,0)
 . S IB35591(.03)=IB3559(.03)
"RTN","IBCEP5C",67,0)
 . I "0"[IB35591(.03) S IB35591(.03)="*N/A*"
"RTN","IBCEP5C",68,0)
 . I IB35591(.03)'="*N/A*" S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),IB3559(.04),IB3559(.05),IBPTYP,"")) I 'IB35591(.03) D
"RTN","IBCEP5C",69,0)
 .. S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),IB3559(.04),0,IBPTYP,"")) I 'IB35591(.03) D
"RTN","IBCEP5C",70,0)
 ... S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),0,IB3559(.05),IBPTYP,"")) I 'IB35591(.03) D
"RTN","IBCEP5C",71,0)
 .... S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),0,0,IBPTYP,""))
"RTN","IBCEP5C",72,0)
 . I $D(^IBA(355.91,"AUNIQ",IBINS,IB35591(.03),IB3559(.04),IB3559(.05),IBPTYP)) D  Q
"RTN","IBCEP5C",73,0)
 .. S DIR(0)="EA",DIR("A",1)="This record already exists - NOT ADDED",DIR("A")="PRESS the ENTER key to continue" W ! D ^DIR K DIR,IB3559,IB35591 W !
"RTN","IBCEP5C",74,0)
 I IBFILE=355.9 D
"RTN","IBCEP5C",75,0)
 . S IB35591(.03)=IB3559(.03)
"RTN","IBCEP5C",76,0)
 . I "0"[IB35591(.03) S IB35591(.03)="*N/A*"
"RTN","IBCEP5C",77,0)
 . I IB35591(.03)'="*N/A*" S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),IB3559(.04),IB3559(.05),IBPTYP,"")) I 'IB35591(.03) D
"RTN","IBCEP5C",78,0)
 .. S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),IB3559(.04),0,IBPTYP,"")) I 'IB35591(.03) D
"RTN","IBCEP5C",79,0)
 ... S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),0,IB3559(.05),IBPTYP,"")) I 'IB35591(.03) D
"RTN","IBCEP5C",80,0)
 .... S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),0,0,IBPTYP,""))
"RTN","IBCEP5C",81,0)
 . I $D(^IBA(355.9,"AUNIQ",IBPRV,IBINS,IB35591(.03),IB3559(.04),IB3559(.05),IBPTYP)) D  Q
"RTN","IBCEP5C",82,0)
 .. S DIR(0)="EA",DIR("A",1)="This record already exists - NOT ADDED",DIR("A")="PRESS the ENTER key to continue" W ! D ^DIR K DIR,IB3559,IB35591 W !
"RTN","IBCEP5C",83,0)
 Q
"RTN","IBCEP5C",84,0)
 ;
"RTN","IBCEP5C",85,0)
DEL(IBFILE,IBDA,IBF) ; Delete prov specific ID's
"RTN","IBCEP5C",86,0)
 ; IBFILE = 355.9 or 355.91 for the file
"RTN","IBCEP5C",87,0)
 ; IBDA = ien of entry in file IBFILE
"RTN","IBCEP5C",88,0)
 ; IBF = 1 if deleting from ins co-related options, ""
"RTN","IBCEP5C",89,0)
 ;       from prov-related options
"RTN","IBCEP5C",90,0)
 N IB0,IBLAST,IBX,DIK,DA,DIR,X,Y,Z
"RTN","IBCEP5C",91,0)
 F Z=1:1:3 L +^IBA(IBFILE,IBDA):5 Q:$T
"RTN","IBCEP5C",92,0)
 I '$T D  G DELQ
"RTN","IBCEP5C",93,0)
 . W !,"RECORD IS LOCKED BY ANOTHER USER - TRY AGAIN LATER"
"RTN","IBCEP5C",94,0)
 . D ENTER^IBCEP5B(.DIR)
"RTN","IBCEP5C",95,0)
 . W ! D ^DIR K DIR W !
"RTN","IBCEP5C",96,0)
 S IB0=$G(^IBA(IBFILE,IBDA,0))
"RTN","IBCEP5C",97,0)
 S IBX=0
"RTN","IBCEP5C",98,0)
 S IBX=IBX+1,DIR("A",IBX)=" PROVIDER: "_$S(IBFILE=355.9:$$EXPAND^IBTRE(355.9,.01,$P(IB0,U)),1:"*ALL*")
"RTN","IBCEP5C",99,0)
 D DISP^IBCEP4("DIR(""A"")",$P(IB0,U,$S(IBFILE=355.9:2,1:1)),$P(IB0,U,6),$P(IB0,U,4),$P(IB0,U,5),IBX+1,.IBLAST)
"RTN","IBCEP5C",100,0)
 I $P(IB0,U,3)'="" S DIR("A",IBLAST+1)="CARE UNIT: "_$$EXPAND^IBTRE(355.91,.03,$P(IB0,U,3))
"RTN","IBCEP5C",101,0)
 S DIR("A",IBLAST+2)="  PROV ID: "_$P(IB0,U,7),DIR("A",IBLAST+3)=" "
"RTN","IBCEP5C",102,0)
 S DIR("A")="OK TO DELETE THIS "_$S($G(IBF):"INSURANCE COMPANY ",1:"")_"PROVIDER ID RECORD?: ",DIR("B")="NO"
"RTN","IBCEP5C",103,0)
 S DIR(0)="YA"
"RTN","IBCEP5C",104,0)
 W ! D ^DIR K DIR W !
"RTN","IBCEP5C",105,0)
 I Y'=1 G DELQ
"RTN","IBCEP5C",106,0)
 I IBDA>0 D
"RTN","IBCEP5C",107,0)
 . I IBFILE=355.91!(IBFILE=355.9&($P($G(^IBA(IBFILE,IBDA,0)),U)["VA(200,")) D
"RTN","IBCEP5C",108,0)
 .. N NEXTONE S NEXTONE=$$NEXTONE^IBCEP5A()
"RTN","IBCEP5C",109,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE)=IBDA_U_"DEL"_U_IBFILE_U_IBDA
"RTN","IBCEP5C",110,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE,0)=$G(^IBA(IBFILE,IBDA,0))
"RTN","IBCEP5C",111,0)
 . S DA=IBDA,DIK="^IBA("_IBFILE_"," D ^DIK
"RTN","IBCEP5C",112,0)
DELQ L -^IBA(IBFILE,IBDA)
"RTN","IBCEP5C",113,0)
 Q
"RTN","IBCEP5C",114,0)
 ;
"RTN","IBCEP5C",115,0)
CUCHK(IBDA,IB0) ;Called from CHG^IBCEP5B to check for existing combination
"RTN","IBCEP5C",116,0)
 ; during edit 
"RTN","IBCEP5C",117,0)
 ; IBDA = the ien of the record being edited
"RTN","IBCEP5C",118,0)
 ; IB0 = Proposed changed 0 node of the entry in the file
"RTN","IBCEP5C",119,0)
 ; FUNCTION RETURNS 0 if no duplicate found, 1 if record already exists
"RTN","IBCEP5C",120,0)
 N Z,IBCUCHK,DIR,X,Y
"RTN","IBCEP5C",121,0)
 S IBCUCHK=0
"RTN","IBCEP5C",122,0)
 I IBFILE=355.91 S Z=+$O(^IBA(355.91,"AUNIQ",$P(IB0,U,1),$S($P(IB0,U,3)="@":"*N/A*",$P(IB0,U,3):$P(IB0,U,3),1:$P(IB0,U,10)),$P(IB0,U,4),$P(IB0,U,5),$P(IB0,U,6),0)) I Z,Z'=IBDA S IBCUCHK=1
"RTN","IBCEP5C",123,0)
 I IBFILE=355.9 D
"RTN","IBCEP5C",124,0)
 . N X,X1
"RTN","IBCEP5C",125,0)
 . S X=$S($P(IB0,U,2):$P(IB0,U,2),1:$P(IB0,U,15)) S:X="" X="*ALL*"
"RTN","IBCEP5C",126,0)
 . S X1=$S($P(IB0,U,3):$P(IB0,U,3),$P(IB0,U,3)="@":"",1:$P(IB0,U,16)) S:X1="" X1="*N/A*"
"RTN","IBCEP5C",127,0)
 . S Z=+$O(^IBA(355.9,"AUNIQ",$P(IB0,U,1),X,X1,$P(IB0,U,4),$P(IB0,U,5),$P(IB0,U,6),0)) I Z,Z'=IBDA S IBCUCHK=1
"RTN","IBCEP5C",128,0)
 I IBCUCHK D
"RTN","IBCEP5C",129,0)
 . S DIR(0)="EA",DIR("A",1)="This combination already exists - RECORD NOT CHANGED",DIR("A")="PRESS the ENTER key to continue" W ! D ^DIR K DIR W !
"RTN","IBCEP5C",130,0)
 Q IBCUCHK
"RTN","IBCEP5C",131,0)
 ;
"RTN","IBCEP5D")
0^62^B62438221^B62434014
"RTN","IBCEP5D",1,0)
IBCEP5D ;ALB/JEH - EDI UTILITIES - for State License ;29-MAR-01
"RTN","IBCEP5D",2,0)
 ;;2.0;INTEGRATED BILLING;**137,320,348,349**;21-MAR-94;Build 46
"RTN","IBCEP5D",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP5D",4,0)
 ;
"RTN","IBCEP5D",5,0)
 ; STATE LICENSE # ADD/EDIT DBIA ==> DBIA 224
"RTN","IBCEP5D",6,0)
EN ;Add/edit state and license number
"RTN","IBCEP5D",7,0)
 N IBDA,DIR,DIC,DD,DA,DR,IBSTAT,IBLIC,IBQ,Y
"RTN","IBCEP5D",8,0)
 D FULL^VALM1
"RTN","IBCEP5D",9,0)
 I '$G(IBPRV) D  G:IBQ STATQ
"RTN","IBCEP5D",10,0)
 . S IBQ=0
"RTN","IBCEP5D",11,0)
 . S DIC="^VA(200,",DIC(0)="AEMQ",DIC("A")="Select VA Provider: " D ^DIC K DIC
"RTN","IBCEP5D",12,0)
 . I $D(DTOUT)!$D(DUOUT)!(Y<0) S IBQ=1 Q
"RTN","IBCEP5D",13,0)
 . S IBDA=+Y
"RTN","IBCEP5D",14,0)
 I $G(IBPRV)["VA" S IBDA=+IBPRV
"RTN","IBCEP5D",15,0)
 I $G(IBPRV),$G(IBPRV)'["VA" D  G STATQ
"RTN","IBCEP5D",16,0)
 . S DIR("A",1)="You have selected a Non-VA provider"
"RTN","IBCEP5D",17,0)
 . S DIR("A",2)="State license # can only be entered for VA providers"
"RTN","IBCEP5D",18,0)
 . S DIR("A",3)=""
"RTN","IBCEP5D",19,0)
 . S DIR("A")="Press enter to continue"
"RTN","IBCEP5D",20,0)
 . S DIR(0)="EA" W ! D ^DIR K DIR W !
"RTN","IBCEP5D",21,0)
STALIC ;Add/edit file 200 field 54.1 multiple,state(.01) and license#(1) - DBIA 224
"RTN","IBCEP5D",22,0)
 ;
"RTN","IBCEP5D",23,0)
 S DA(1)=IBDA,DIC="^VA(200,"_DA(1)_",""PS1"",",DIC(0)="QEAL"
"RTN","IBCEP5D",24,0)
 D ^DIC I Y=-1 K DIC,DA G STATQ
"RTN","IBCEP5D",25,0)
 F Z=1:1:3 L +^VA(200,IBDA):5 Q:$T
"RTN","IBCEP5D",26,0)
 I '$T D  G STATQ
"RTN","IBCEP5D",27,0)
 . W !,"Another user is editing this entry.  Try again later"
"RTN","IBCEP5D",28,0)
 . S DIR(0)="EA",DIR("A")="Press enter to continue"
"RTN","IBCEP5D",29,0)
 . W ! D ^DIR K DIR W !
"RTN","IBCEP5D",30,0)
 S DIE=DIC K DIC S DA=+Y,DR=".01;1"
"RTN","IBCEP5D",31,0)
 D ^DIE K DIE,DR,DA,Y
"RTN","IBCEP5D",32,0)
 L -^VA(200,IBDA)
"RTN","IBCEP5D",33,0)
STATQ ;
"RTN","IBCEP5D",34,0)
 S VALMBCK="R"
"RTN","IBCEP5D",35,0)
 Q
"RTN","IBCEP5D",36,0)
 ;
"RTN","IBCEP5D",37,0)
GETLIC(IBPRV) ; Get license # for provider in file 200 IBPRV
"RTN","IBCEP5D",38,0)
 ; Pass IBPRV by reference to retrieve #'s by state
"RTN","IBCEP5D",39,0)
 ; IBPRV(state ien)=id
"RTN","IBCEP5D",40,0)
 ; Returns 0 if no license # found
"RTN","IBCEP5D",41,0)
 N Z
"RTN","IBCEP5D",42,0)
 S Z=0 F  S Z=$O(^VA(200,IBPRV,"PS1",Z)) Q:'Z  S Z0=$G(^(Z,0)) I $P(Z0,U,2)'="" S IBPRV(+Z0)=$P(Z0,U,2)
"RTN","IBCEP5D",43,0)
 Q +$O(IBPRV(0))
"RTN","IBCEP5D",44,0)
 ;
"RTN","IBCEP5D",45,0)
EDIT(IBFILE,IBFLD,IB0,IBOLD,IBIEN,IBCK1) ; Generic edit flds
"RTN","IBCEP5D",46,0)
 N DIR,Y,X,IB,IB1,IBCUVAL,IBCUY,IBFLD0,IBNEW,IBPRV,IBVAL,IBIVAL,IBINS,IBCUCHK,IBOK,DUOUT,DTOUT
"RTN","IBCEP5D",47,0)
 I IBFILE=355.91,IBFLD=.02 S IBNEW="" G EDITQ ; No .02 in file 355.91
"RTN","IBCEP5D",48,0)
 S IBCUCHK=1,IBCUVAL=""
"RTN","IBCEP5D",49,0)
 S IBFLD0=IBFLD*100,IBPRV=$S(IBFILE=355.9:$P(IB0,U),1:""),IBNEW=""
"RTN","IBCEP5D",50,0)
 S IBPRV0=$S(IBPRV'["355.93":"",1:$G(^IBA(355.93,+IBPRV,0)))
"RTN","IBCEP5D",51,0)
 S IBINS=$P(IB0,U,$S(IBFILE=355.9:2,1:1))
"RTN","IBCEP5D",52,0)
 I IBFLD'=.03 S IBVAL=$$EXPAND^IBTRE(IBFILE,IBFLD,$P(IB0,U,IBFLD0)),IBIVAL=$P(IB0,U,IBFLD0)
"RTN","IBCEP5D",53,0)
 I IBFLD=.03,$S('IBINS:1,1:'$$CAREUN^IBCEP3(IBINS,$P(IB0,U,6),$P(IB0,U,4),$P(IB0,U,5),$P(IB0,U,5)=3)) S:$P(IB0,U,3) IBNEW="@" G EDITQ
"RTN","IBCEP5D",54,0)
 I IBFLD=.03 S IBVAL=$P($G(^IBA(355.95,+$G(^IBA(355.96,+$P(IB0,U,3),0)),0)),U),IBIVAL=$P(IB0,U,3) D
"RTN","IBCEP5D",55,0)
 . S IBCUCHK=0,IBCUVAL=$P($G(^IBA(355.96,+IBIVAL,0)),U,1) I IBCUVAL="" Q
"RTN","IBCEP5D",56,0)
 . I $O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,$P(IB0,U,4),$P(IB0,U,5),$P(IB0,U,6),"")) S IBCUCHK=1 Q
"RTN","IBCEP5D",57,0)
 . I $O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,$P(IB0,U,4),0,$P(IB0,U,6),""))  S IBCUCHK=1 Q
"RTN","IBCEP5D",58,0)
 . I $O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,0,$P(IB0,U,5),$P(IB0,U,6),"")) S IBCUCHK=1 Q
"RTN","IBCEP5D",59,0)
 . I $O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,0,0,$P(IB0,U,6),"")) S IBCUCHK=1 Q
"RTN","IBCEP5D",60,0)
 . S IBIVAL="@"
"RTN","IBCEP5D",61,0)
 ;
"RTN","IBCEP5D",62,0)
 I IBFLD'=.02 D
"RTN","IBCEP5D",63,0)
 . N DA
"RTN","IBCEP5D",64,0)
 . S DIR(0)=$S(IBFLD'=.03:IBFILE_","_IBFLD_"AO",1:"PAO^355.95:AEMQ")
"RTN","IBCEP5D",65,0)
 . I IBFLD=.03 D  Q:$P(IB0,U,4)=""!($P(IB0,U,5)="")!($P(IB0,U,6)="")
"RTN","IBCEP5D",66,0)
 .. S DIR("A")="CARE UNIT: "
"RTN","IBCEP5D",67,0)
 .. S DIR("S")="I $D(^IBA(355.96,""AUNIQ"",IBINS,Y,$P(IB0,U,4),$P(IB0,U,5),$P(IB0,U,6)))!($D(^IBA(355.96,""AUNIQ"",IBINS,Y,$P(IB0,U,4),0,$P(IB0,U,6))))"
"RTN","IBCEP5D",68,0)
 .. S DIR("S")=DIR("S")_"!($D(^IBA(355.96,""AUNIQ"",IBINS,Y,0,$P(IB0,U,5),$P(IB0,U,6))))!($D(^IBA(355.96,""AUNIQ"",IBINS,Y,0,0,$P(IB0,U,6))))"
"RTN","IBCEP5D",69,0)
 . I IBFLD'=.03 S DIR("A")=$$GET1^DID(IBFILE,IBFLD,,"LABEL")_": "
"RTN","IBCEP5D",70,0)
 . S:IBVAL'=""&(IBCUCHK) DIR("A")=DIR("A")_IBVAL_"// "
"RTN","IBCEP5D",71,0)
 .; If field .04, Set DIR(0)[3] up to make sure the form type selected is allowed for this ID type.
"RTN","IBCEP5D",72,0)
 . I Z=.04,IBPRV["355.93",$$GET1^DIQ(355.93,+IBPRV,.02,"I")=1 D
"RTN","IBCEP5D",73,0)
 .. I $$GET1^DIQ(355.97,$P(IB0,U,6),.03,"I")="EI" S $P(DIR(0),U,3)="K:Y'=1 X",DIR("?")="Provider ID Qualifier selected only allows institutional (UB type) forms" Q
"RTN","IBCEP5D",74,0)
 .. I $$GET1^DIQ(355.97,$P(IB0,U,6),.03,"I")="TJ" S $P(DIR(0),U,3)="K:Y'=2 X",DIR("?")="Provider ID Qualifier selected only allows professional (CMS-1500) forms" Q
"RTN","IBCEP5D",75,0)
 .. N AFT
"RTN","IBCEP5D",76,0)
 .. S AFT=$$GET1^DIQ(355.97,$P(IB0,U,6),.07,"I")  ; get allowable form type for this Provider ID Type
"RTN","IBCEP5D",77,0)
 .. I AFT="B" S $P(DIR(0),U,3)="K:"".0.1.2.""'[("".""_X_""."") X",DIR("?")="Provider ID Qualifier selected allows institutional, professional or both" Q   ; allow proff, inst, or both
"RTN","IBCEP5D",78,0)
 .. I AFT="I" S $P(DIR(0),U,3)="K:X'=1 X",DIR("?")="Provider ID Qualifier selected only allows institutional (UB type) forms" Q  ; allow institutional
"RTN","IBCEP5D",79,0)
 .. I AFT="P" S $P(DIR(0),U,3)="K:X'=2 X",DIR("?")="Provider ID Qualifier selected only allows professional (CMS-1500) forms" Q  ; allow professional
"RTN","IBCEP5D",80,0)
 . ;
"RTN","IBCEP5D",81,0)
 . ; field .06 (ID qualifier)
"RTN","IBCEP5D",82,0)
 . I Z=.06 D   ;,IBPRV["355.93" D
"RTN","IBCEP5D",83,0)
 .. S DIR(0)="PAOr^355.97:AEMQ"
"RTN","IBCEP5D",84,0)
 .. S DIR("?")="Enter a Qualifier to indentify the type of ID number you are entering."
"RTN","IBCEP5D",85,0)
 .. N TAG
"RTN","IBCEP5D",86,0)
 .. S TAG=$S($G(IBSLEV)=1&($$GET1^DIQ(355.93,+IBPRV,.02,"I")=1):"NVALFOWN",$G(IBSLEV)=1:"RAOWN",$$GET1^DIQ(355.93,+IBPRV,.02,"I")=1:"LFINS",1:"RAINS")
"RTN","IBCEP5D",87,0)
 .. N AFT
"RTN","IBCEP5D",88,0)
 .. S AFT=$S($P(IB0,U,4)]"":$P(IB0,U,4),1:$P(IBOLD,U,4))
"RTN","IBCEP5D",89,0)
 .. D
"RTN","IBCEP5D",90,0)
 ... I AFT=1 S DIR("S")="I $$"_TAG_"^IBCEPU(Y),$$GET1^DIQ(355.97,+Y,.07,""I"")'=""P""",DIR("?")="Provider ID Qualifier selected only allows institutional (UB type) forms" Q
"RTN","IBCEP5D",91,0)
 ... I AFT=2 S DIR("S")="I $$"_TAG_"^IBCEPU(Y),$$GET1^DIQ(355.97,+Y,.07,""I"")'=""I""",DIR("?")="Provider ID Qualifier selected only allows professional (CMS-1500) forms" Q
"RTN","IBCEP5D",92,0)
 ... S DIR("S")="I $$"_TAG_"^IBCEPU(Y)"
"RTN","IBCEP5D",93,0)
 .. I $$GET1^DIQ(355.93,+IBPRV,.02,"I")=1 D
"RTN","IBCEP5D",94,0)
 ... I AFT=1 S DIR("S")=DIR("S")_",$$GET1^DIQ(355.97,+Y,.03)'=""TJ""" Q
"RTN","IBCEP5D",95,0)
 ... I AFT=2 S DIR("S")=DIR("S")_",$$GET1^DIQ(355.97,+Y,.03)'=""EI""" Q
"RTN","IBCEP5D",96,0)
 ... I 'AFT S DIR("S")=DIR("S")_","".EI.TJ.""'[("".""_$$GET1^DIQ(355.97,+Y,.03)_""."")" Q
"RTN","IBCEP5D",97,0)
 . ;
"RTN","IBCEP5D",98,0)
 . S DA=0
"RTN","IBCEP5D",99,0)
 . F  D ^DIR S IBOK=0 D  Q:IBOK
"RTN","IBCEP5D",100,0)
 .. I $D(DUOUT)!$D(DTOUT) S IBOK=1 Q
"RTN","IBCEP5D",101,0)
 .. I X="",$P(IB0,U,(IBFLD*100))'="" S (X,Y)=$P(IB0,U,(IBFLD*100))
"RTN","IBCEP5D",102,0)
 .. I IBFLD=.06,$P(IB0,U,4)'=1,$P($G(^IBE(355.97,$S(+Y:+Y,1:+$P(IB0,U,6)),0)),U,3)="1A" W !,"BLUE CROSS IS ONLY ALLOWED FOR UB-04 ONLY" Q
"RTN","IBCEP5D",103,0)
 .. S IBOK=1
"RTN","IBCEP5D",104,0)
 . K DIR
"RTN","IBCEP5D",105,0)
 . I IBFLD=.03,'$D(DTOUT),'$D(DUOUT) D  S Y=IBCUY
"RTN","IBCEP5D",106,0)
 .. S IBCUVAL=+$G(^IBA(355.96,+Y,0))
"RTN","IBCEP5D",107,0)
 .. S IBCUY=+$O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,$P(IB0,U,4),$P(IB0,U,5),$P(IB0,U,6),0))
"RTN","IBCEP5D",108,0)
 .. I 'IBCUY S IBCUY=+$O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,$P(IB0,U,4),0,$P(IB0,U,6),0))
"RTN","IBCEP5D",109,0)
 .. I 'IBCUY S IBCUY=+$O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,0,$P(IB0,U,5),$P(IB0,U,6),0))
"RTN","IBCEP5D",110,0)
 .. I 'IBCUY S IBCUY=+$O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,0,0,$P(IB0,U,6),0))
"RTN","IBCEP5D",111,0)
 .. I 'IBCUY S IBCUY="@"
"RTN","IBCEP5D",112,0)
 . I IBIVAL'="",IBCUCHK,($P(Y,U)=IBIVAL!(X="")) S IBNEW=IBIVAL Q
"RTN","IBCEP5D",113,0)
 . I 'IBCUCHK,X="" S IBNEW=IBIVAL Q
"RTN","IBCEP5D",114,0)
 . I X'="@",($S(X="":IBIVAL'="",1:0)!$D(DTOUT)!$D(DUOUT)) S IBNEW="^1" Q
"RTN","IBCEP5D",115,0)
 . S IBNEW=$S(X'="@":$P(Y,U),1:X)
"RTN","IBCEP5D",116,0)
 . I IBFLD=.03,X="" S IBNEW="" ; No care unit selected
"RTN","IBCEP5D",117,0)
 I IBFLD=.02 D  ; Only file 355.9
"RTN","IBCEP5D",118,0)
 . N DIR,X,Y,DIC,DA,IBIT
"RTN","IBCEP5D",119,0)
 . S IBIT=$$GET1^DID(355.9,.02,,"INPUT TRANSFORM")
"RTN","IBCEP5D",120,0)
 . S DIR(0)="FAO^1:30"
"RTN","IBCEP5D",121,0)
 . S DIR("A")="INSURANCE CO: "_$S(IBVAL'="":IBVAL_"// ",1:" "),DIR("?")="^N IBHELP,Z D HELP^DIE(355.9,,.02,""A"",""IBHELP"") S Z=0 F  S Z=$O(IBHELP(""DIHELP"",Z)) Q:'Z  W !,IBHELP(""DIHELP"",Z)"
"RTN","IBCEP5D",122,0)
 . F  W ! D ^DIR D  I IBNEW'="" K DIR Q
"RTN","IBCEP5D",123,0)
 .. I $D(DTOUT)!$D(DUOUT) S IBNEW="^1" Q
"RTN","IBCEP5D",124,0)
 .. I IBIVAL'="",($P(Y,U)=IBIVAL!(X="")) S IBNEW=IBIVAL Q
"RTN","IBCEP5D",125,0)
 .. I X="@" S IBNEW="@" Q
"RTN","IBCEP5D",126,0)
 .. I X="",IBIVAL="" S IBNEW="*ALL*" Q
"RTN","IBCEP5D",127,0)
 .. S DIC="^DIC(36,",DIC(0)="EMQ",DIC("S")="X IBIT I $D(X)" D ^DIC
"RTN","IBCEP5D",128,0)
 .. I Y>0 S IBNEW=$P(Y,U) Q
"RTN","IBCEP5D",129,0)
 .. S Y="",IBNEW="^1"
"RTN","IBCEP5D",130,0)
 G:IBNEW="^1"!(IBNEW=IBIVAL)!(IBFLD=.07) EDITQ
"RTN","IBCEP5D",131,0)
 I $G(IBCK1) D
"RTN","IBCEP5D",132,0)
 . N X1,X2,X3,X4,X5,X6
"RTN","IBCEP5D",133,0)
 . S X1=$S(IBFILE=355.9:$S(IBFLD'=.01:IBPRV,1:IBNEW),1:"")
"RTN","IBCEP5D",134,0)
 . S X2=$S(IBFILE=355.9:$S(IBFLD'=.02:$P(IB0,U,2),1:IBNEW),1:$S(IBFLD'=.01:$P(IB0,U),1:IBNEW))
"RTN","IBCEP5D",135,0)
 . S X3=$S(IBFLD'=.03:$P(IB0,U,3),1:IBNEW),X4=$S(IBFLD'=.04:$P(IB0,U,4),1:IBNEW),X5=$S(IBFLD'=.05:$P(IB0,U,5),1:IBNEW),X6=$S(IBFLD'=.06:$P(IB0,U,6),1:IBNEW)
"RTN","IBCEP5D",136,0)
 . I X2="" S X2="*ALL*"
"RTN","IBCEP5D",137,0)
 . I X3="" S X3="*N/A*"
"RTN","IBCEP5D",138,0)
 . I IBFILE=355.9,$S(X4=""!(X5="")!(X6=""):1,$O(^IBA(355.9,"AUNIQ",X1,X2,X3,X4,X5,X6,0)):$O(^(0))'=IBIEN,1:0) S IBNEW=IBNEW_"^2" Q
"RTN","IBCEP5D",139,0)
 . I IBFILE=355.91,$S(X4=""!(X5="")!(X6=""):1,$O(^IBA(355.91,"AUNIQ",X2,X3,X4,X5,X6,0)):$O(^(0))'=IBIEN,1:0) S IBNEW=IBNEW_"^2" Q
"RTN","IBCEP5D",140,0)
 . F IB=2,3 D  Q:$P(IBNEW,U,3)=3
"RTN","IBCEP5D",141,0)
 .. S IB1=(X2="*ALL*"!(X3="*N/A*"))
"RTN","IBCEP5D",142,0)
 .. I IBFILE=355.9,IB=2,$S($P(IBOLD,U,2)="":X2'="*ALL*",1:$P(IBOLD,U,2)'=X2) S X2=""
"RTN","IBCEP5D",143,0)
 .. I IB=3,$S($P(IBOLD,U,3)="":X3'="*N/A*",1:$P(IBOLD,U,3)'=X3) S X3=""
"RTN","IBCEP5D",144,0)
 .. I '$$COMBOK^IBCEP5C(IBFILE,IBPRV_U_(IBFLD*100)_U_X2_U_X3_U_X4_U_X5_U_X6,IB1) S IBNEW="^3"
"RTN","IBCEP5D",145,0)
 ;
"RTN","IBCEP5D",146,0)
EDITQ Q IBNEW
"RTN","IBCEP7")
0^63^B49016405^B48408157
"RTN","IBCEP7",1,0)
IBCEP7 ;ALB/TMP - Functions for fac level PROVIDER ID MAINT ;11-07-00
"RTN","IBCEP7",2,0)
 ;;2.0;INTEGRATED BILLING;**137,232,320,348,349**;21-MAR-94;Build 46
"RTN","IBCEP7",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP7",4,0)
 ;
"RTN","IBCEP7",5,0)
HDR ; -- hdr code
"RTN","IBCEP7",6,0)
 I '$D(^TMP("IBCE_PRVFAC_MAINT",$J)) D INIT
"RTN","IBCEP7",7,0)
 N IBINS,PCF,PCDISP,IBPARAM,IBEFTFL
"RTN","IBCEP7",8,0)
 K VALMHDR
"RTN","IBCEP7",9,0)
 S IBPARAM=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7",10,0)
 S IBEFTFL=$P(IBPARAM,U)  ; Electronic Form type flag
"RTN","IBCEP7",11,0)
 S IBINS=+$P(IBPARAM,U,2)  ; Insurance co
"RTN","IBCEP7",12,0)
 S PCF=$P($G(^DIC(36,+IBINS,3)),U,13),PCDISP=$S(PCF="P":"(Parent)",1:"")
"RTN","IBCEP7",13,0)
 S VALMHDR(1)="Insurance Co: "_$P($G(^DIC(36,+IBINS,0)),U)_PCDISP
"RTN","IBCEP7",14,0)
 S VALMHDR(1)=VALMHDR(1)_$S(IBEFTFL="E":"   Billing Provider Secondary IDs",IBEFTFL="A":"   Additional Billing Provider Sec. IDs",IBEFTFL="LF":"   VA-Lab/Facility Secondary IDs",1:"")
"RTN","IBCEP7",15,0)
 I IBEFTFL="LF" S VALMHDR(2)="VA-Lab/Facility Primary ID: Federal Tax ID"
"RTN","IBCEP7",16,0)
 Q
"RTN","IBCEP7",17,0)
 ;
"RTN","IBCEP7",18,0)
INIT ; Initialize
"RTN","IBCEP7",19,0)
 N IBCT,IBD,Z,Z0,Z00,Z1,IBS,IBX,IBDIV,IBEFTFL,IBINS,IBPARAM,IBLCT,IBCU
"RTN","IBCEP7",20,0)
 K ^TMP("IBCE_PRVFAC_MAINT",$J)
"RTN","IBCEP7",21,0)
 S (IBLCT,IBCT)=0
"RTN","IBCEP7",22,0)
 S IBPARAM=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7",23,0)
 S IBEFTFL=$P(IBPARAM,U)  ; Electronic Form type flag
"RTN","IBCEP7",24,0)
 S IBINS=+$P(IBPARAM,U,2)  ; Insurance co
"RTN","IBCEP7",25,0)
 ;
"RTN","IBCEP7",26,0)
 I IBEFTFL="A" D
"RTN","IBCEP7",27,0)
 . K VALM("PROTOCOL")
"RTN","IBCEP7",28,0)
 . S Y=$$FIND1^DIC(101,,,"IBCE PRVFAC ADDIDS MAINT")
"RTN","IBCEP7",29,0)
 . I Y S VALM("PROTOCOL")=+Y_";ORD(101,"
"RTN","IBCEP7",30,0)
 ;
"RTN","IBCEP7",31,0)
 I IBEFTFL="LF" D
"RTN","IBCEP7",32,0)
 . S VALM("TITLE")="VA-Lab/Facility IDs"
"RTN","IBCEP7",33,0)
 . K VALM("PROTOCOL")
"RTN","IBCEP7",34,0)
 . S Y=$$FIND1^DIC(101,,,"IBCE PRVFAC VALF MAINT")
"RTN","IBCEP7",35,0)
 . I Y S VALM("PROTOCOL")=+Y_";ORD(101,"
"RTN","IBCEP7",36,0)
 ;
"RTN","IBCEP7",37,0)
 ; Compile the appropriate list of IDs
"RTN","IBCEP7",38,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",IBINS,Z)) Q:'Z  D
"RTN","IBCEP7",39,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCEP7",40,0)
 . Q:'$P(Z0,U,6)!($P(Z0,U,7)="")  ; Quit if no provider id or id type
"RTN","IBCEP7",41,0)
 . Q:'($P(Z0,U,8)=IBEFTFL)
"RTN","IBCEP7",42,0)
 . ;Q:$S($P(IBPARAM,U,3)=1:'$P($G(^IBE(355.97,+$P(Z0,U,6),1)),U,9),1:$P($G(^IBE(355.97,+$P(Z0,U,6),1)),U,9))
"RTN","IBCEP7",43,0)
 . S Z1=$G(^IBE(355.97,+$P(Z0,U,6),0))
"RTN","IBCEP7",44,0)
 . S IBS(+$P(Z0,U,5),+$P(Z0,U,3),+$P(Z1,U,2)_";"_Z,$P(Z1,U))=+$P(Z0,U,6)_U_$P(Z0,U,7)_U_Z
"RTN","IBCEP7",45,0)
 ;
"RTN","IBCEP7",46,0)
 S IBD="" F  S IBD=$O(IBS(IBD)) Q:IBD=""  D
"RTN","IBCEP7",47,0)
 . D:IBCT SET1(.IBLCT," ",IBCT+1)
"RTN","IBCEP7",48,0)
 . D SET1(.IBLCT,"Division: "_$$DIV(IBD),IBCT+1)
"RTN","IBCEP7",49,0)
 . S IBCU="" F  S IBCU=$O(IBS(IBD,IBCU)) Q:IBCU=""  D
"RTN","IBCEP7",50,0)
 .. I IBCU D SET1(.IBLCT,"  Care Unit: "_$$EXTERNAL^DILFD(355.92,.03,"",IBCU),IBCT+1)
"RTN","IBCEP7",51,0)
 .. S Z="" F  S Z=$O(IBS(IBD,IBCU,Z),-1) Q:Z=""  D
"RTN","IBCEP7",52,0)
 ... S Z0="" F  S Z0=$O(IBS(IBD,IBCU,Z,Z0)) Q:Z0=""  S IBX=IBS(IBD,IBCU,Z,Z0) D
"RTN","IBCEP7",53,0)
 .... S IBCT=IBCT+1
"RTN","IBCEP7",54,0)
 .... I $P(Z,";",2) D  Q
"RTN","IBCEP7",55,0)
 ..... S Z00=$G(^IBA(355.92,+$P(Z,";",2),0))
"RTN","IBCEP7",56,0)
 ..... S Z1=$E(IBCT_$J("",3),1,3)_"  "_$E(Z0_$J("",25),1,25)_"   "_$E($S($P(IBX,U,2)'="":$P(IBX,U,2),1:$$IDNUM^IBCEP7A(+IBX))_$J("",15),1,15)_"  "_$P("BOTH^UB04^1500^RX",U,$P(Z00,U,4)+1)
"RTN","IBCEP7",57,0)
 ..... D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP7",58,0)
 ..... S ^TMP("IBCE_PRVFAC_MAINT",$J,"ZIDX",IBCT)=+$P(Z,";",2)
"RTN","IBCEP7",59,0)
 ;
"RTN","IBCEP7",60,0)
 I 'IBLCT D
"RTN","IBCEP7",61,0)
 . D SET1(1," ")
"RTN","IBCEP7",62,0)
 . N TEXT
"RTN","IBCEP7",63,0)
 . I IBEFTFL="E" S TEXT="No Billing Provider Secondary IDs found"
"RTN","IBCEP7",64,0)
 . I IBEFTFL="A" S TEXT="No Billing Provider Additional IDs found"
"RTN","IBCEP7",65,0)
 . I IBEFTFL="LF" S TEXT="No VA Lab/Facility IDs found"
"RTN","IBCEP7",66,0)
 . D SET1(2,TEXT)
"RTN","IBCEP7",67,0)
 . S IBLCT=2
"RTN","IBCEP7",68,0)
 S VALMBG=1,VALMCNT=IBLCT
"RTN","IBCEP7",69,0)
 Q
"RTN","IBCEP7",70,0)
 ;
"RTN","IBCEP7",71,0)
SET1(IBLCT,TEXT,IBCT) ;
"RTN","IBCEP7",72,0)
 S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,TEXT,$G(IBCT))
"RTN","IBCEP7",73,0)
 Q
"RTN","IBCEP7",74,0)
 ;
"RTN","IBCEP7",75,0)
DIV(IBD) ; Returns 'ALL/DEFAULT' or div NAME whose ien=IBD
"RTN","IBCEP7",76,0)
 N MAIN
"RTN","IBCEP7",77,0)
 I IBD Q $$EXTERNAL^DILFD(355.92,.05,"",IBD)
"RTN","IBCEP7",78,0)
 S MAIN=$$MAIN^IBCEP2B()
"RTN","IBCEP7",79,0)
 S MAIN=$$EXTERNAL^DILFD(355.92,.05,"",MAIN)
"RTN","IBCEP7",80,0)
 S MAIN=MAIN_"/Default for All Divisions"
"RTN","IBCEP7",81,0)
 Q MAIN
"RTN","IBCEP7",82,0)
 ;
"RTN","IBCEP7",83,0)
EDIT1 ;
"RTN","IBCEP7",84,0)
 N IBFUNC,IBINS,IBDA,Z,DIR,X,Y,DTOUT,DUOUT,DP,IBPARAM,IBEFTFL
"RTN","IBCEP7",85,0)
 D FULL^VALM1
"RTN","IBCEP7",86,0)
 S IBPARAM=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7",87,0)
 S IBEFTFL=$P(IBPARAM,U)  ; Electronic Form type flag
"RTN","IBCEP7",88,0)
 S IBINS=+$P(IBPARAM,U,2)  ; Insurance co
"RTN","IBCEP7",89,0)
 S IBFUNC="E"
"RTN","IBCEP7",90,0)
 D SEL
"RTN","IBCEP7",91,0)
 I $G(IBDA) S Z=$$EDITFAC(IBDA,IBFUNC,IBEFTFL) I Z D INIT
"RTN","IBCEP7",92,0)
 ;
"RTN","IBCEP7",93,0)
EDIT1Q S VALMBCK="R"
"RTN","IBCEP7",94,0)
 Q
"RTN","IBCEP7",95,0)
EXPND ;
"RTN","IBCEP7",96,0)
 Q
"RTN","IBCEP7",97,0)
HELP ;
"RTN","IBCEP7",98,0)
 Q
"RTN","IBCEP7",99,0)
EXIT ;
"RTN","IBCEP7",100,0)
 N IBPARAM,IBEFTFL
"RTN","IBCEP7",101,0)
 S IBPARAM=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7",102,0)
 S IBEFTFL=$P(IBPARAM,U)  ; Electronic Form type flag
"RTN","IBCEP7",103,0)
 I IBEFTFL="A" D COPYPROV^IBCEP5A(0)
"RTN","IBCEP7",104,0)
 ;
"RTN","IBCEP7",105,0)
 S (IBLCT,IBCT)=0
"RTN","IBCEP7",106,0)
 K ^TMP("IBCE_PRVFAC_MAINT",$J),^TMP("IBCE_PRVFAC_MAINT_INS",$J)
"RTN","IBCEP7",107,0)
 D CLEAN^VALM10
"RTN","IBCEP7",108,0)
 Q
"RTN","IBCEP7",109,0)
SEL ;
"RTN","IBCEP7",110,0)
 N Z
"RTN","IBCEP7",111,0)
 K IBDA
"RTN","IBCEP7",112,0)
 D FULL^VALM1,EN^VALM2($G(XQORNOD(0)),"OS")
"RTN","IBCEP7",113,0)
 S Z=+$O(VALMY(0)) Q:'Z
"RTN","IBCEP7",114,0)
 ; fac/ins co default
"RTN","IBCEP7",115,0)
 S IBDA=$G(^TMP("IBCE_PRVFAC_MAINT",$J,"ZIDX",Z))
"RTN","IBCEP7",116,0)
 Q
"RTN","IBCEP7",117,0)
 ;
"RTN","IBCEP7",118,0)
EDITFAC(IBDA,IBFUNC,IBEFTFL) ; edits ins co facility id (355.92), entry IBDA
"RTN","IBCEP7",119,0)
 N IBRBLD,Z,Z0,DIK,DIE,DP,DA,DR,DIR,X,Y,IBDA0,IBDIV,IBITYP,IBFORM,IBCAREUN,NEXTONE
"RTN","IBCEP7",120,0)
 S IBRBLD=0 S:$G(IBDA) IBDA0=$G(^IBA(355.92,+IBDA,0))
"RTN","IBCEP7",121,0)
 ; "E"diting 355.92 entry
"RTN","IBCEP7",122,0)
 I IBFUNC="E" D
"RTN","IBCEP7",123,0)
 . S Z0=$TR(IBDA0,U)
"RTN","IBCEP7",124,0)
 . Q:'$$FACFLDS^IBCEP7C(IBDA,IBINS,.IBITYP,.IBFORM,.IBDIV,"E",.IBCAREUN,IBEFTFL)
"RTN","IBCEP7",125,0)
 . S DIE="^IBA(355.92,",DA=IBDA
"RTN","IBCEP7",126,0)
 . S DR=".03////"_$S($G(IBCAREUN)]""&($G(IBCAREUN)'="*N/A*"):IBCAREUN,1:"")_";.04////"_IBFORM_$S(IBDIV:";.05////"_IBDIV,1:"")_";.06////"_IBITYP_";"
"RTN","IBCEP7",127,0)
 . S DR=DR_".07"_$S(IBEFTFL="E"!(IBEFTFL="A"):"Billing Provider Secondary ID",1:"VA Lab or Facility Secondary ID")
"RTN","IBCEP7",128,0)
 . I IBEFTFL="A" D
"RTN","IBCEP7",129,0)
 .. S NEXTONE=$$NEXTONE()
"RTN","IBCEP7",130,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE)=IBDA_U_"MOD"_U_355.92
"RTN","IBCEP7",131,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE,"OLD0")=^IBA(355.92,IBDA,0)
"RTN","IBCEP7",132,0)
 . D ^DIE
"RTN","IBCEP7",133,0)
 . I IBEFTFL="A" S ^TMP("IB_EDITED_IDS",$J,NEXTONE,0)=^IBA(355.92,IBDA,0)
"RTN","IBCEP7",134,0)
 . I $TR($G(^IBA(355.92,IBDA,0)),U)'=Z0 S IBRBLD=1
"RTN","IBCEP7",135,0)
 ;
"RTN","IBCEP7",136,0)
 ; "D"eleting 355.92 entry
"RTN","IBCEP7",137,0)
 I IBFUNC="D" D
"RTN","IBCEP7",138,0)
 . W !!," Insurance Co: ",$P($G(^DIC(36,+IBDA0,0)),U)
"RTN","IBCEP7",139,0)
 . W !,"     Division: ",$$DIV($P(IBDA0,U,5))
"RTN","IBCEP7",140,0)
 . W:$P(IBDA0,U,3)]"" !,"    Care Unit: ",$$EXTERNAL^DILFD(355.92,.03,"",$P(IBDA0,U,3))
"RTN","IBCEP7",141,0)
 . W !," ID Qualifier: ",$$EXTERNAL^DILFD(355.92,.06,"",$P(IBDA0,U,6))
"RTN","IBCEP7",142,0)
 . W !,"    Form Type: ",$$EXTERNAL^DILFD(355.92,.04,"",$P(IBDA0,U,4))
"RTN","IBCEP7",143,0)
 . W !,"           ID: ",$P(IBDA0,U,7),!
"RTN","IBCEP7",144,0)
 . S DIR(0)="YA",DIR("A")="ARE YOU SURE YOU WANT TO DELETE THIS ID RECORD?: ",DIR("B")="NO" D ^DIR K DIR
"RTN","IBCEP7",145,0)
 . S DIR("A")="NOTHING DELETED - PRESS RETURN TO CONTINUE: "
"RTN","IBCEP7",146,0)
 . I Y=1 D
"RTN","IBCEP7",147,0)
 .. S DIK="^IBA(355.92,",DA=IBDA
"RTN","IBCEP7",148,0)
 .. D ^DIK
"RTN","IBCEP7",149,0)
 .. I IBEFTFL="A" D
"RTN","IBCEP7",150,0)
 ... N NEXTONE
"RTN","IBCEP7",151,0)
 ... S NEXTONE=$$NEXTONE()
"RTN","IBCEP7",152,0)
 ... S ^TMP("IB_EDITED_IDS",$J,NEXTONE)=IBDA_U_"DEL"_U_355.92
"RTN","IBCEP7",153,0)
 ... S ^TMP("IB_EDITED_IDS",$J,NEXTONE,0)=IBDA0
"RTN","IBCEP7",154,0)
 .. S DIR("A")="ID DELETED - PRESS RETURN TO CONTINUE: ",IBRBLD=1
"RTN","IBCEP7",155,0)
 .. S DIR(0)="EA" W ! D ^DIR K DIR
"RTN","IBCEP7",156,0)
 ;
"RTN","IBCEP7",157,0)
 Q IBRBLD
"RTN","IBCEP7",158,0)
 ;
"RTN","IBCEP7",159,0)
FACID(Y) ;
"RTN","IBCEP7",160,0)
 N Z,Z1,Z2
"RTN","IBCEP7",161,0)
 S Z=U_$P($G(^IBE(355.97,+Y,0)),U,3)_U,Z1=$$SUB2^IBCEF73(1),Z2=$$SUB2^IBCEF73(2)
"RTN","IBCEP7",162,0)
 I Z1[Z!(Z2[Z) Q 1
"RTN","IBCEP7",163,0)
 Q 0
"RTN","IBCEP7",164,0)
 ;
"RTN","IBCEP7",165,0)
ADD1 ;
"RTN","IBCEP7",166,0)
 N IBFUNC,IBINS,IBDA,Z,DIR,X,Y,DTOUT,DUOUT,DP,IBPARAM,IBEFTFL,IBINS
"RTN","IBCEP7",167,0)
 D FULL^VALM1
"RTN","IBCEP7",168,0)
 ;
"RTN","IBCEP7",169,0)
 S IBPARAM=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7",170,0)
 S IBEFTFL=$P(IBPARAM,U)  ; Electronic Form type flag
"RTN","IBCEP7",171,0)
 S IBINS=+$P(IBPARAM,U,2)  ; Insurance co        ;
"RTN","IBCEP7",172,0)
 ;
"RTN","IBCEP7",173,0)
 S Z=$$ADDFAC^IBCEP7A(IBINS,IBEFTFL) I Z D INIT
"RTN","IBCEP7",174,0)
 ;
"RTN","IBCEP7",175,0)
ADD1Q S VALMBCK="R"
"RTN","IBCEP7",176,0)
 Q
"RTN","IBCEP7",177,0)
 ;
"RTN","IBCEP7",178,0)
DEL1 ;
"RTN","IBCEP7",179,0)
 N IBFUNC,IBINS,IBDA,Z,DIR,X,Y,DTOUT,DUOUT,DP,IBPARAM,IBEFTDL,IBINS
"RTN","IBCEP7",180,0)
 D FULL^VALM1
"RTN","IBCEP7",181,0)
 ;       
"RTN","IBCEP7",182,0)
 S IBPARAM=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7",183,0)
 S IBEFTFL=$P(IBPARAM,U)  ; Electronic Form type flag
"RTN","IBCEP7",184,0)
 S IBINS=+$P(IBPARAM,U,2)  ; Insurance co
"RTN","IBCEP7",185,0)
 ;
"RTN","IBCEP7",186,0)
 S IBFUNC="D"
"RTN","IBCEP7",187,0)
 D SEL
"RTN","IBCEP7",188,0)
 I $G(IBDA) S Z=$$EDITFAC(IBDA,IBFUNC,IBEFTFL) I Z D INIT
"RTN","IBCEP7",189,0)
 ;
"RTN","IBCEP7",190,0)
DEL1Q S VALMBCK="R"
"RTN","IBCEP7",191,0)
 Q
"RTN","IBCEP7",192,0)
 ;
"RTN","IBCEP7",193,0)
 ; Get the next number so that the edits can be replicated in order for other providers/insurance companies
"RTN","IBCEP7",194,0)
NEXTONE() ;
"RTN","IBCEP7",195,0)
 Q $O(^TMP("IB_EDITED_IDS",$J,""),-1)+1
"RTN","IBCEP7B")
0^83^B7401780^B7101591
"RTN","IBCEP7B",1,0)
IBCEP7B ;ALB/TMP - Functions for PROVIDER ID ;1-16-05
"RTN","IBCEP7B",2,0)
 ;;2.0;INTEGRATED BILLING;**320,348,349**;16-JAN-2005;Build 46
"RTN","IBCEP7B",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP7B",4,0)
 Q
"RTN","IBCEP7B",5,0)
 ;
"RTN","IBCEP7B",6,0)
GETID(CLAIM,COB) ;
"RTN","IBCEP7B",7,0)
 N DIR,X,Y,DTOUT,DUOUT,WHICH,ID,IBMAIN,IBDIV,DIC,IBINS,DA,DIC,Z,Z0,IBCU,OK,IBCU
"RTN","IBCEP7B",8,0)
 ;
"RTN","IBCEP7B",9,0)
 S ID=""
"RTN","IBCEP7B",10,0)
 S IBINS=$P($G(^DGCR(399,CLAIM,"I"_COB)),U)
"RTN","IBCEP7B",11,0)
 I IBINS="" Q ID
"RTN","IBCEP7B",12,0)
 ;
"RTN","IBCEP7B",13,0)
 ; Make sure they have careunits IDS defined for this insurance company before we bother asking
"RTN","IBCEP7B",14,0)
 S OK=0
"RTN","IBCEP7B",15,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",IBINS,Z)) Q:'Z  D  Q:OK
"RTN","IBCEP7B",16,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCEP7B",17,0)
 . Q:$P(Z0,U,8)'="E"
"RTN","IBCEP7B",18,0)
 . Q:$P(Z0,U,3)=""
"RTN","IBCEP7B",19,0)
 . S OK=1
"RTN","IBCEP7B",20,0)
 I 'OK Q ID
"RTN","IBCEP7B",21,0)
 ;
"RTN","IBCEP7B",22,0)
 S WHICH=$S(COB=1:"Primary",COB=2:"Secondary",1:"Tertiary")
"RTN","IBCEP7B",23,0)
 S DIR("A")="Define "_WHICH_" Payer ID by Care Unit? "
"RTN","IBCEP7B",24,0)
 S DIR("B")="No"
"RTN","IBCEP7B",25,0)
 S DIR(0)="YA"
"RTN","IBCEP7B",26,0)
 S DIR("?",1)="Enter No to select "_WHICH_" Provider # by Division."
"RTN","IBCEP7B",27,0)
 S DIR("?")="Enter Yes to select "_WHICH_" Provider # for a specific Care Unit."
"RTN","IBCEP7B",28,0)
 D ^DIR
"RTN","IBCEP7B",29,0)
 I Y'=1 Q ID
"RTN","IBCEP7B",30,0)
 ;
"RTN","IBCEP7B",31,0)
 ; Get the Division
"RTN","IBCEP7B",32,0)
 S IBMAIN=$$MAIN^IBCEP2B()
"RTN","IBCEP7B",33,0)
 S IBDIV=$$EXTERNAL^DILFD(399,.22,"",$P($G(^DGCR(399,CLAIM,0)),U,22))
"RTN","IBCEP7B",34,0)
 S DIR("A")="Division: ",DIR(0)="355.92,.05AOr"
"RTN","IBCEP7B",35,0)
 ; Default Division
"RTN","IBCEP7B",36,0)
 S DIR("B")=$S(IBDIV]"":IBDIV,1:IBMAIN)
"RTN","IBCEP7B",37,0)
 D ^DIR K DIR
"RTN","IBCEP7B",38,0)
 S IBDIV=+$S(Y>0:+Y,1:0)
"RTN","IBCEP7B",39,0)
 I Y<0 Q ID
"RTN","IBCEP7B",40,0)
 ;
"RTN","IBCEP7B",41,0)
 ; Get the Care Unit
"RTN","IBCEP7B",42,0)
 S DIC("A")="Care Unit: "
"RTN","IBCEP7B",43,0)
 S DIC("W")="W ""   "",$P(^(0),U,2)"
"RTN","IBCEP7B",44,0)
 S DIC=355.95,DIC("S")="I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)=+$G(IBDIV)",DIC(0)="AEMQ"
"RTN","IBCEP7B",45,0)
 D ^DIC
"RTN","IBCEP7B",46,0)
 I Y<0 Q ID
"RTN","IBCEP7B",47,0)
 S IBCU=+Y
"RTN","IBCEP7B",48,0)
 ;
"RTN","IBCEP7B",49,0)
 ; Compile the appropriate list of IDs
"RTN","IBCEP7B",50,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",IBINS,Z)) Q:'Z  D  Q:ID]""
"RTN","IBCEP7B",51,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCEP7B",52,0)
 . Q:$P(Z0,U,8)'="E"
"RTN","IBCEP7B",53,0)
 . Q:$P(Z0,U,3)'=IBCU
"RTN","IBCEP7B",54,0)
 . S ID=$P(Z0,U,7)_U_$P(Z0,U,6)
"RTN","IBCEP7B",55,0)
 Q ID
"RTN","IBCEP7B",56,0)
 ;
"RTN","IBCEP7B",57,0)
 ; See if the insurance company flag is set to send the ATT/REND ID as the Billing Provider
"RTN","IBCEP7B",58,0)
ATTREND(CLAIM,COB) ;
"RTN","IBCEP7B",59,0)
 N ID,IBINS
"RTN","IBCEP7B",60,0)
 S ID=""
"RTN","IBCEP7B",61,0)
 S IBINS=$P($G(^DGCR(399,CLAIM,"I"_COB)),U)
"RTN","IBCEP7B",62,0)
 I IBINS="" Q 0
"RTN","IBCEP7B",63,0)
 ;
"RTN","IBCEP7B",64,0)
 I $$FT^IBCEF(CLAIM)=2,$$GET1^DIQ(36,IBINS,4.06,"I") Q 1   ; 1500
"RTN","IBCEP7B",65,0)
 I $$FT^IBCEF(CLAIM)=3,$$GET1^DIQ(36,IBINS,4.08,"I") Q 1   ; ub
"RTN","IBCEP7B",66,0)
 Q 0
"RTN","IBCEP7B",67,0)
 ;
"RTN","IBCEP7B",68,0)
 ; Get a list of the plan types that supress Billing Provider Secondary IDs for this  Insurance Co
"RTN","IBCEP7B",69,0)
 ; and see if the current plan type is one of them.
"RTN","IBCEP7B",70,0)
SUPPPT(CLAIM,COB) ;
"RTN","IBCEP7B",71,0)
 N IBINS,SUPPFL
"RTN","IBCEP7B",72,0)
 S SUPPFL=0
"RTN","IBCEP7B",73,0)
 S IBINS=$P($G(^DGCR(399,CLAIM,"I"_COB)),U)
"RTN","IBCEP7B",74,0)
 I IBINS="" Q SUPPFL
"RTN","IBCEP7B",75,0)
 ;
"RTN","IBCEP7B",76,0)
 I $D(^DIC(36,IBINS,13)) D
"RTN","IBCEP7B",77,0)
 . N PLAN,PLANTYPE
"RTN","IBCEP7B",78,0)
 . S PLAN=$P($G(^DGCR(399,CLAIM,"I"_COB)),U,18) Q:'PLAN
"RTN","IBCEP7B",79,0)
 . S PLANTYPE=$P($G(^IBA(355.3,PLAN,0)),U,15) Q:PLANTYPE=""
"RTN","IBCEP7B",80,0)
 . Q:'$D(^DIC(36,IBINS,13,"B",PLANTYPE))
"RTN","IBCEP7B",81,0)
 . S SUPPFL=1
"RTN","IBCEP7B",82,0)
 Q SUPPFL
"RTN","IBCEP7C")
0^64^B59638074^B58965316
"RTN","IBCEP7C",1,0)
IBCEP7C ;ALB/TMP - Functions for fac level PROVIDER ID MAINT ;11-07-00
"RTN","IBCEP7C",2,0)
 ;;2.0;INTEGRATED BILLING;**137,232,320,348,349**;21-MAR-94;Build 46
"RTN","IBCEP7C",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP7C",4,0)
 ;
"RTN","IBCEP7C",5,0)
 G AWAY
"RTN","IBCEP7C",6,0)
AWAY Q
"RTN","IBCEP7C",7,0)
 ;
"RTN","IBCEP7C",8,0)
 ; IBDA - IEN for file 355.92
"RTN","IBCEP7C",9,0)
 ; IBFUNC = "A"dd or "E"dit
"RTN","IBCEP7C",10,0)
FACFLDS(IBDA,IBINS,IBITYP,IBFORM,IBDIV,IBFUNC,IBCAREUN,IBEFTFL) ; Chk for dups on fac id fld combos
"RTN","IBCEP7C",11,0)
 ;
"RTN","IBCEP7C",12,0)
 N IB,IBOK,DIC,DIR,X,Y,DTOUT,DUOUT,Z,Z0,DIE,DA,IBMAIN,IBQUIT,IBPARAM,IBCUF,IBDA0,IBCNTADD,I,IBLIMIT
"RTN","IBCEP7C",13,0)
 ;
"RTN","IBCEP7C",14,0)
 S IBOK=0,IBDA0=""
"RTN","IBCEP7C",15,0)
 I $G(IBDA) S IBDA0=$G(^IBA(355.92,IBDA,0))
"RTN","IBCEP7C",16,0)
 S IBPARAM=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7C",17,0)
 S IBCUF=$S($P(IBDA0,U,3)]"":1,1:0)  ; Care Unit Flag
"RTN","IBCEP7C",18,0)
 ;
"RTN","IBCEP7C",19,0)
 I IBEFTFL="E",IBFUNC="A" D  G:$D(DTOUT)!$D(DUOUT) FLDSQ
"RTN","IBCEP7C",20,0)
 . K DIR
"RTN","IBCEP7C",21,0)
 . S DIR("A")="Define Billing Provider Secondary IDs by Care Units? "
"RTN","IBCEP7C",22,0)
 . S DIR("B")="No"
"RTN","IBCEP7C",23,0)
 . S DIR(0)="YAO"
"RTN","IBCEP7C",24,0)
 . S DIR("?",1)="Enter No to define a Billing Provider Secondary ID for the Division."
"RTN","IBCEP7C",25,0)
 . S DIR("?",2)="Enter Yes to define a Billing Provider Secondary ID for a specific Care Unit."
"RTN","IBCEP7C",26,0)
 . S DIR("?",3)="If no Care Unit is entered on Billing Screen 3, the Billing Provider"
"RTN","IBCEP7C",27,0)
 . S DIR("?")="Secondary ID defined for the Division will be transmitted in the claim."
"RTN","IBCEP7C",28,0)
 . D ^DIR
"RTN","IBCEP7C",29,0)
 . S IBCUF=$G(Y)  ; Care Unit Flag
"RTN","IBCEP7C",30,0)
 ;
"RTN","IBCEP7C",31,0)
 ; Get the Division
"RTN","IBCEP7C",32,0)
 S IBMAIN=$$MAIN^IBCEP2B()
"RTN","IBCEP7C",33,0)
 S IBDIV=0
"RTN","IBCEP7C",34,0)
 I IBEFTFL="E"!(IBEFTFL="LF") D  G:$D(DTOUT)!$D(DUOUT) FLDSQ
"RTN","IBCEP7C",35,0)
 . K DIR
"RTN","IBCEP7C",36,0)
 . S (IBQUIT,IBOK)=0,DA=$G(IBDA)
"RTN","IBCEP7C",37,0)
 . S DIR("A")="Division: ",DIR(0)="355.92,.05AOr"
"RTN","IBCEP7C",38,0)
 . ; Default Division - Main if adding or Existing if editing
"RTN","IBCEP7C",39,0)
 . I IBFUNC="E" S DIR("B")=$P($$DIV^IBCEP7($P(IBDA0,U,5)),"/")
"RTN","IBCEP7C",40,0)
 . I IBFUNC="A" S DIR("B")=$P($$EXTERNAL^DILFD(355.92,.05,"",IBMAIN),"/")
"RTN","IBCEP7C",41,0)
 . D ^DIR K DIR
"RTN","IBCEP7C",42,0)
 . Q:$D(DTOUT)!$D(DUOUT)
"RTN","IBCEP7C",43,0)
 . S IBDIV=+$S(Y>0:+Y,1:0)
"RTN","IBCEP7C",44,0)
 ;
"RTN","IBCEP7C",45,0)
 ; See if there are any Care Units
"RTN","IBCEP7C",46,0)
 S IBCAREUN="*N/A*"
"RTN","IBCEP7C",47,0)
 I IBEFTFL="E",IBCUF D
"RTN","IBCEP7C",48,0)
 . N TAR
"RTN","IBCEP7C",49,0)
 . D LIST^DIC(355.95,,.01,,,,,,"I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)=+$G(IBDIV)",,"TAR")
"RTN","IBCEP7C",50,0)
 . Q:+$G(TAR("DILIST",0))
"RTN","IBCEP7C",51,0)
 . S IBCUF=0
"RTN","IBCEP7C",52,0)
 . W !!,"There are no Care Units defined for this Division.",!
"RTN","IBCEP7C",53,0)
 ;
"RTN","IBCEP7C",54,0)
 ; Get the Care Unit
"RTN","IBCEP7C",55,0)
 I IBEFTFL="E",IBCUF D  I Y<1 G FLDSQ
"RTN","IBCEP7C",56,0)
 . K DIC
"RTN","IBCEP7C",57,0)
 . S DIC("A")="Care Unit: "
"RTN","IBCEP7C",58,0)
 . I IBFUNC="E" D  ; default only if editing
"RTN","IBCEP7C",59,0)
 .. Q:IBDIV'=$P(IBDA0,U,5)  ; don't default if division has changed
"RTN","IBCEP7C",60,0)
 .. S DIC("B")=$$EXTERNAL^DILFD(355.92,.03,"",$P(IBDA0,U,3))
"RTN","IBCEP7C",61,0)
 . S DIC=355.95,DIC("S")="I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)=+$G(IBDIV)",DIC(0)="AEMQ"
"RTN","IBCEP7C",62,0)
 . D ^DIC
"RTN","IBCEP7C",63,0)
 . I Y>0 S IBCAREUN=+Y
"RTN","IBCEP7C",64,0)
 ;
"RTN","IBCEP7C",65,0)
 ; Think this is done for sorting purposes.  Makes the main division first
"RTN","IBCEP7C",66,0)
 I IBDIV=IBMAIN S IBDIV=0
"RTN","IBCEP7C",67,0)
 ;
"RTN","IBCEP7C",68,0)
 ; Get the Provider ID Type
"RTN","IBCEP7C",69,0)
 K DIR
"RTN","IBCEP7C",70,0)
 S IBQUIT=0
"RTN","IBCEP7C",71,0)
 I $P(IBPARAM,U,3)'=1 D
"RTN","IBCEP7C",72,0)
 . S DIR("?")="Can NOT be State LIC # or Billing Facility Primary"
"RTN","IBCEP7C",73,0)
 . S DIR("A")="ID Qualifier: "
"RTN","IBCEP7C",74,0)
 . S DIR(0)="355.92,.06A^^K:'$$FACID^IBCEP7(+Y)!$P($G(^IBE(355.97,+Y,1)),U,9)!($P($G(^(0)),U,3)=""0B"") X"
"RTN","IBCEP7C",75,0)
 . W ! D ^DIR K DIR
"RTN","IBCEP7C",76,0)
 . I $D(DTOUT)!$D(DUOUT) S IBQUIT=1
"RTN","IBCEP7C",77,0)
 E  D  G:$D(DTOUT)!$D(DUOUT) FLDSQ
"RTN","IBCEP7C",78,0)
 . S DIR("A")="ID Qualifier: "    ;,DIR(0)="355.92,.06Ar"
"RTN","IBCEP7C",79,0)
 . S DIR(0)="PAr^355.97:AEMQ"
"RTN","IBCEP7C",80,0)
 . S DIR("?")="Enter a Qualifier to indentify the type of ID number you are entering."
"RTN","IBCEP7C",81,0)
 . ; Default Type of ID - Electronic Plan Type if adding or Existing if editing
"RTN","IBCEP7C",82,0)
 . N PITIEN S PITIEN=$S(IBFUNC="A"&(IBEFTFL="E"):$$BF^IBCU(),IBFUNC="E":$P(IBDA0,U,6),1:"")
"RTN","IBCEP7C",83,0)
 . I PITIEN]"" S DIR("B")=$P($G(^IBE(355.97,PITIEN,0)),U)
"RTN","IBCEP7C",84,0)
 . I IBEFTFL="E" D
"RTN","IBCEP7C",85,0)
 .. S DIR("?",1)=" The current default ID Qualifier is based upon the Electronic Plan Type."
"RTN","IBCEP7C",86,0)
 .. S DIR("?",2)=" You may change the ID Qualifier and the change will apply to all Plan"
"RTN","IBCEP7C",87,0)
 .. S DIR("?")=" Types."
"RTN","IBCEP7C",88,0)
 .. S DIR("S")="I ($P($G(^(0)),U,3)=$P($G(^IBE(355.97,PITIEN,0)),U,3))!$$BPS^IBCEPU(Y)"
"RTN","IBCEP7C",89,0)
 . I IBEFTFL="A" S DIR("S")="I $$BPS^IBCEPU(Y)"
"RTN","IBCEP7C",90,0)
 . I IBEFTFL="LF" S DIR("S")="I $$LFINS^IBCEPU(Y)"
"RTN","IBCEP7C",91,0)
 . D ^DIR K DIR
"RTN","IBCEP7C",92,0)
 G:IBQUIT FLDSQ
"RTN","IBCEP7C",93,0)
 S IBITYP=$P(Y,U)
"RTN","IBCEP7C",94,0)
 ;
"RTN","IBCEP7C",95,0)
 ; Get Form Type
"RTN","IBCEP7C",96,0)
 K DIR
"RTN","IBCEP7C",97,0)
 S DIR("A")="Form Type: "
"RTN","IBCEP7C",98,0)
 S DIR(0)=$S(IBEFTFL="LF":"SA^0:BOTH;1:UB-04;2:CMS-1500",1:"SA^1:UB-04;2:CMS-1500")
"RTN","IBCEP7C",99,0)
 ;
"RTN","IBCEP7C",100,0)
 I $G(IBDA) S DIR("B")=$S(+$P($G(^IBA(355.92,IBDA,0)),U,4)=0:"BOTH",1:$P("UB-04^CMS-1500",U,+$P($G(^IBA(355.92,IBDA,0)),U,4)))
"RTN","IBCEP7C",101,0)
 ;
"RTN","IBCEP7C",102,0)
 D ^DIR K DIR
"RTN","IBCEP7C",103,0)
 G:$D(DTOUT)!$D(DUOUT) FLDSQ
"RTN","IBCEP7C",104,0)
 S IBFORM=$P(Y,U)
"RTN","IBCEP7C",105,0)
 ;
"RTN","IBCEP7C",106,0)
 ; Set up array of exisiting IDs by form type, divison, and care units to avoid duplications
"RTN","IBCEP7C",107,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",IBINS,Z)) Q:'Z  D
"RTN","IBCEP7C",108,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCEP7C",109,0)
 . I '(IBFUNC="E"&(Z=IBDA)) D
"RTN","IBCEP7C",110,0)
 .. I IBEFTFL="LF",$P(Z0,U,8)'="LF" Q   ; If lab/facility ID, it only needs to be unique among lab/facility IDs
"RTN","IBCEP7C",111,0)
 .. I IBEFTFL'="LF",$P(Z0,U,8)="LF" Q   ; If not lab/facility ID, it must be unigue for the others (secondary and additional)
"RTN","IBCEP7C",112,0)
 .. I IBEFTFL="A",$P(Z0,U,8)="E" Q
"RTN","IBCEP7C",113,0)
 .. I $P(Z0,U,8)="E",IBEFTFL'="A" S IB("*N/A*",$P(Z0,U,4),+$P(Z0,U,5),$S($P(Z0,U,3)]"":$P(Z0,U,3),1:"*N/A*"))=Z
"RTN","IBCEP7C",114,0)
 .. S IB($P(Z0,U,6),$P(Z0,U,4),+$P(Z0,U,5),$S($P(Z0,U,3)]"":$P(Z0,U,3),1:"*N/A*"))=Z
"RTN","IBCEP7C",115,0)
 . ;
"RTN","IBCEP7C",116,0)
 . ; count them
"RTN","IBCEP7C",117,0)
 . I IBFUNC="A",$P(Z0,U,8)=IBEFTFL,IBDIV=$P(Z0,U,5)!(IBDIV=0&($P(Z0,U,5)="")) D
"RTN","IBCEP7C",118,0)
 .. I ".1.2."[("."_$P(Z0,U,4)_".") S IBCNTADD($P(Z0,U,4))=$G(IBCNTADD($P(Z0,U,4)))+1 Q
"RTN","IBCEP7C",119,0)
 .. N I
"RTN","IBCEP7C",120,0)
 .. F I=1,2 S IBCNTADD(I)=$G(IBCNTADD(I))+1
"RTN","IBCEP7C",121,0)
 ; Check for duplications
"RTN","IBCEP7C",122,0)
 S IBOK=1
"RTN","IBCEP7C",123,0)
 ; Don't check if nothing is being changed.  The ID itself can be changed after return to calling program.
"RTN","IBCEP7C",124,0)
 I IBFUNC="E" S Z0=$G(^IBA(355.92,IBDA,0)) I $P(Z0,U,3)=IBCAREUN!($P(Z0,U,3)=""&(IBCAREUN="*N/A*")),IBFORM=$P(Z0,U,4),IBDIV=$P(Z0,U,5),IBITYP=$P(Z0,U,6) G FLDSQ
"RTN","IBCEP7C",125,0)
 I $G(IB($S(IBEFTFL="E":"*N/A*",1:IBITYP),IBFORM,IBDIV,IBCAREUN)) D
"RTN","IBCEP7C",126,0)
 . N Z,ZPC8 S Z=$G(IB($S(IBEFTFL="E":"*N/A*",1:IBITYP),IBFORM,IBDIV,IBCAREUN))
"RTN","IBCEP7C",127,0)
 . S ZPC8=""
"RTN","IBCEP7C",128,0)
 . I +Z S ZPC8=$P($G(^IBA(355.92,Z,0)),U,8)
"RTN","IBCEP7C",129,0)
 . S IBOK="0^DUPLICATE"_U_ZPC8
"RTN","IBCEP7C",130,0)
 I IBOK,IBFORM=0,$S($D(IB($S(IBEFTFL="E":"*N/A*",1:IBITYP),1,IBDIV,IBCAREUN))!$D(IB($S(IBEFTFL="E":"*N/A*",1:IBITYP),2,IBDIV,IBCAREUN)):1,1:0) S IBOK="0^FORM^SPECIFIC"
"RTN","IBCEP7C",131,0)
 I IBOK,IBFORM'=0,IBFORM'=3,$S($D(IB($S(IBEFTFL="E":"*N/A*",1:IBITYP),0,IBDIV,IBCAREUN)):1,1:0) S IBOK="0^FORM^BOTH"
"RTN","IBCEP7C",132,0)
 ;
"RTN","IBCEP7C",133,0)
 S IBLIMIT=$S(IBEFTFL="A":6,IBEFTFL="LF":5,1:"")
"RTN","IBCEP7C",134,0)
 I IBOK,IBFUNC="A",IBEFTFL'="E" D
"RTN","IBCEP7C",135,0)
 . I ".1.2."[("."_IBFORM_".") D  Q
"RTN","IBCEP7C",136,0)
 .. I $G(IBCNTADD(IBFORM))>(IBLIMIT-1) S IBOK="0^LIMIT"
"RTN","IBCEP7C",137,0)
 . N I
"RTN","IBCEP7C",138,0)
 . I IBFORM=0 F I=1,2 I $G(IBCNTADD(I))>IBLIMIT S IBOK="0^LIMIT" Q
"RTN","IBCEP7C",139,0)
 ;
"RTN","IBCEP7C",140,0)
 I 'IBOK D
"RTN","IBCEP7C",141,0)
 . I $P(IBOK,U,2)="DUPLICATE" D  Q
"RTN","IBCEP7C",142,0)
 .. S DIR("A",1)="This ID combination is already defined",DIR("A",2)=""
"RTN","IBCEP7C",143,0)
 .. ; under "_$S($P(IBOK,U,3)="A":" Additonal IDs",$P(IBOK,U,3)="E":"Billing Provider Secondary ID",1:"VA Lab/Facility IDs")_$S(IBFUNC="A":" - try editing it instead",1:""),DIR("A",2)=" "
"RTN","IBCEP7C",144,0)
 . ;
"RTN","IBCEP7C",145,0)
 . I $P(IBOK,U,2)="BOTH" D  Q
"RTN","IBCEP7C",146,0)
 .. S DIR("A",1)="An ID combination for both form types already exists.  Delete this one",DIR("A",2)="before defining and form specific IDs"_$S(IBDIV:" for this division"),DIR("A",4)=" "
"RTN","IBCEP7C",147,0)
 . ;
"RTN","IBCEP7C",148,0)
 . I $P(IBOK,U,2)="FORM" D  Q
"RTN","IBCEP7C",149,0)
 .. I $P(IBOK,U,3)="BOTH" S DIR("A",1)="This ID already exists for both form types - Delete it to enter this ID for",DIR("A",2)=" a specific form type",DIR("A",3)=" " Q
"RTN","IBCEP7C",150,0)
 .. S DIR("A",1)="This ID already exists for a specific form type - Delete specific form type",DIR("A",2)=" ID(s) before entering one for both form types",DIR("A",3)=" "
"RTN","IBCEP7C",151,0)
 . ;     
"RTN","IBCEP7C",152,0)
 . I $P(IBOK,U,2)="LIMIT" D  Q
"RTN","IBCEP7C",153,0)
 .. S DIR("A",1)="Limit is "_IBLIMIT_" IDs for each form type",DIR("A",2)=" "
"RTN","IBCEP7C",154,0)
 .. I IBEFTFL="A" D
"RTN","IBCEP7C",155,0)
 ... S DIR("A",1)="A maximum of 6 Additional Billing Provider Sec IDs can be entered for each Form"
"RTN","IBCEP7C",156,0)
 ... S DIR("A",2)="Type.  Before you can add another ID, you must delete an existing ID."
"RTN","IBCEP7C",157,0)
 ... S DIR("A",3)=" "
"RTN","IBCEP7C",158,0)
 ;
"RTN","IBCEP7C",159,0)
 I 'IBOK S DIR(0)="EA",DIR("A")="PRESS RETURN TO CONTINUE: " W ! D ^DIR K DIR
"RTN","IBCEP7C",160,0)
 ;
"RTN","IBCEP7C",161,0)
FLDSQ Q +IBOK
"RTN","IBCEP8A")
0^84^B25658990^B25216435
"RTN","IBCEP8A",1,0)
IBCEP8A ;ALB/ESG - Functions for provider ID maint ;12/27/2005
"RTN","IBCEP8A",2,0)
 ;;2.0;INTEGRATED BILLING;**320,349**;21-MAR-94;Build 46
"RTN","IBCEP8A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP8A",4,0)
 ;
"RTN","IBCEP8A",5,0)
 Q
"RTN","IBCEP8A",6,0)
 ;
"RTN","IBCEP8A",7,0)
CLIA(IBIFN) ; Default CLIA# for claim
"RTN","IBCEP8A",8,0)
 NEW CLIA,NONVA,DIV,INST
"RTN","IBCEP8A",9,0)
 S CLIA="",IBIFN=+$G(IBIFN)
"RTN","IBCEP8A",10,0)
 S NONVA=+$P($G(^DGCR(399,IBIFN,"U2")),U,10)    ; non-VA facility ptr
"RTN","IBCEP8A",11,0)
 I NONVA S CLIA=$$CLIANVA^IBCEP8(IBIFN) G CLIAX
"RTN","IBCEP8A",12,0)
 ;
"RTN","IBCEP8A",13,0)
 ; retrieve the default VA clia# based on claim data
"RTN","IBCEP8A",14,0)
 S DIV=+$P($G(^DGCR(399,IBIFN,0)),U,22)         ; claim's division
"RTN","IBCEP8A",15,0)
 I 'DIV G CLIAX
"RTN","IBCEP8A",16,0)
 S INST=+$P($G(^DG(40.8,DIV,0)),U,7)            ; inst file pointer
"RTN","IBCEP8A",17,0)
 I 'INST G CLIAX
"RTN","IBCEP8A",18,0)
 S CLIA=$$ID^XUAF4("CLIA",INST)                 ; API for clia#
"RTN","IBCEP8A",19,0)
CLIAX ;
"RTN","IBCEP8A",20,0)
 Q CLIA
"RTN","IBCEP8A",21,0)
 ;
"RTN","IBCEP8A",22,0)
LAB(IBIFN) ; Function determines if LAB type of service is on claim
"RTN","IBCEP8A",23,0)
 ; Claim must be a CMS-1500 claim form type
"RTN","IBCEP8A",24,0)
 NEW LAB,LN,IBXDATA
"RTN","IBCEP8A",25,0)
 S LAB=0
"RTN","IBCEP8A",26,0)
 I $$FT^IBCEF(IBIFN)'=2 G LABX    ;cms-1500 form types only
"RTN","IBCEP8A",27,0)
 D F^IBCEF("N-HCFA 1500 SERVICES (PRINT)",,,IBIFN)
"RTN","IBCEP8A",28,0)
 S LN=0
"RTN","IBCEP8A",29,0)
 F  S LN=$O(IBXDATA(LN)) Q:'LN  I $P(IBXDATA(LN),U,4)=5 S LAB=1 Q
"RTN","IBCEP8A",30,0)
LABX ;
"RTN","IBCEP8A",31,0)
 Q LAB
"RTN","IBCEP8A",32,0)
 ;
"RTN","IBCEP8A",33,0)
CLIAREQ(IBIFN) ; Function determines if the CLIA# is required for claim
"RTN","IBCEP8A",34,0)
 ; Return value=1 Yes, the CLIA# is required; otherwise 0.
"RTN","IBCEP8A",35,0)
 NEW REQ S REQ=0
"RTN","IBCEP8A",36,0)
 I $$FT^IBCEF(IBIFN)'=2 G CLIAREQX        ; cms-1500 claim
"RTN","IBCEP8A",37,0)
 I '$$LAB(IBIFN) G CLIAREQX               ; lab type of service
"RTN","IBCEP8A",38,0)
 ;
"RTN","IBCEP8A",39,0)
 ; this is required for VA facility
"RTN","IBCEP8A",40,0)
 I '$P($G(^DGCR(399,IBIFN,"U2")),U,10) S REQ=1 G CLIAREQX
"RTN","IBCEP8A",41,0)
 ;
"RTN","IBCEP8A",42,0)
 ; for non-VA facility, further check non-VA care type
"RTN","IBCEP8A",43,0)
 ;     Codes 1 and 3 are specifically Non-Lab
"RTN","IBCEP8A",44,0)
 I '$F(".1.3.","."_$P($G(^DGCR(399,IBIFN,"U2")),U,11)_".") S REQ=1
"RTN","IBCEP8A",45,0)
CLIAREQX ;
"RTN","IBCEP8A",46,0)
 Q REQ
"RTN","IBCEP8A",47,0)
 ;
"RTN","IBCEP8A",48,0)
MAMMO(IBIFN,IBMC) ; Function to determine the default mammography certification
"RTN","IBCEP8A",49,0)
 ; number for the claim
"RTN","IBCEP8A",50,0)
 ; Array IBMC is returned if passed by reference
"RTN","IBCEP8A",51,0)
 ;   IBMC = # of associated mammo#'s
"RTN","IBCEP8A",52,0)
 ;   IBMC(n) = [1] coding system or "" for Non-VA Facilities
"RTN","IBCEP8A",53,0)
 ;             [2] mammo cert#
"RTN","IBCEP8A",54,0)
 NEW MAMMO,NONVA,INST,CODSYS,IBMCID,CDSYS
"RTN","IBCEP8A",55,0)
 S MAMMO="",IBIFN=+$G(IBIFN),IBMC=0
"RTN","IBCEP8A",56,0)
 S NONVA=+$P($G(^DGCR(399,IBIFN,"U2")),U,10)    ; non-VA facility ptr
"RTN","IBCEP8A",57,0)
 I NONVA D  G MAMMOX
"RTN","IBCEP8A",58,0)
 . S MAMMO=$P($G(^IBA(355.93,NONVA,0)),U,15) Q:MAMMO=""
"RTN","IBCEP8A",59,0)
 . S IBMC=1,IBMC(1)=""_U_MAMMO
"RTN","IBCEP8A",60,0)
 . Q
"RTN","IBCEP8A",61,0)
 ;
"RTN","IBCEP8A",62,0)
 ; retrieve the default VA mammo# based on claim data
"RTN","IBCEP8A",63,0)
 S INST=+$$SITE^VASITE()                            ; inst file pointer
"RTN","IBCEP8A",64,0)
 I 'INST G MAMMOX
"RTN","IBCEP8A",65,0)
 ;
"RTN","IBCEP8A",66,0)
 ; Kernel API from XU*8*394 to get a list of coding systems
"RTN","IBCEP8A",67,0)
 D LCDSYS^XUAF4(.CDSYS)
"RTN","IBCEP8A",68,0)
 S CODSYS="MAMMO"
"RTN","IBCEP8A",69,0)
 F  S CODSYS=$O(CDSYS(CODSYS)) Q:$E(CODSYS,1,5)'="MAMMO"  D
"RTN","IBCEP8A",70,0)
 . S IBMCID=$$ID^XUAF4(CODSYS,INST) Q:IBMCID=""
"RTN","IBCEP8A",71,0)
 . S IBMC=IBMC+1
"RTN","IBCEP8A",72,0)
 . S IBMC(IBMC)=$P(CODSYS,"-",2)_U_IBMCID
"RTN","IBCEP8A",73,0)
 . I $P(CODSYS,"-",2)="FDA" S MAMMO=IBMCID    ; FDA is default ID#
"RTN","IBCEP8A",74,0)
 . Q
"RTN","IBCEP8A",75,0)
 I IBMC,MAMMO="" S MAMMO=$P(IBMC(1),U,2)
"RTN","IBCEP8A",76,0)
MAMMOX ;
"RTN","IBCEP8A",77,0)
 Q MAMMO
"RTN","IBCEP8A",78,0)
 ;
"RTN","IBCEP8A",79,0)
MAMMODP(IBIFN) ; Procedure to display a listing of default mammo cert#'s
"RTN","IBCEP8A",80,0)
 ; Used during input template on screen 8 for CMS-1500 claims
"RTN","IBCEP8A",81,0)
 NEW IBMC,IBZ
"RTN","IBCEP8A",82,0)
 I $$MAMMO(IBIFN,.IBMC)
"RTN","IBCEP8A",83,0)
 I 'IBMC W !!?3,"No default mammography certification numbers on file.",! G MAMMODPX
"RTN","IBCEP8A",84,0)
 W !!?3,"The Mammography Certification #" W:IBMC>1 "'s"
"RTN","IBCEP8A",85,0)
 W " defined for this " W:$P($G(^DGCR(399,IBIFN,"U2")),U,10) "non-"
"RTN","IBCEP8A",86,0)
 W "VA facility " W:IBMC>1 "are:" W:IBMC'>1 "is:"
"RTN","IBCEP8A",87,0)
 S IBZ=0
"RTN","IBCEP8A",88,0)
 F  S IBZ=$O(IBMC(IBZ)) Q:'IBZ  W !?7,$P(IBMC(IBZ),U,2),?21,$P(IBMC(IBZ),U,1)
"RTN","IBCEP8A",89,0)
 W !?3,"If you enter a different number it will be sent with this claim only."
"RTN","IBCEP8A",90,0)
 I $P($G(^DGCR(399,IBIFN,"U2")),U,10) W !?3,"To change the defined Mammography Certification #, use Prov ID Maint."
"RTN","IBCEP8A",91,0)
 W !
"RTN","IBCEP8A",92,0)
MAMMODPX ;
"RTN","IBCEP8A",93,0)
 Q
"RTN","IBCEP8A",94,0)
 ;
"RTN","IBCEP8A",95,0)
XRAY(IBIFN) ; Function determines if X-RAY type of service is on claim
"RTN","IBCEP8A",96,0)
 ; Claim must be a CMS-1500 claim form type
"RTN","IBCEP8A",97,0)
 NEW XRAY,LN,IBXDATA
"RTN","IBCEP8A",98,0)
 S XRAY=0
"RTN","IBCEP8A",99,0)
 I $$FT^IBCEF(IBIFN)'=2 G XRAYX    ;cms-1500 form types only
"RTN","IBCEP8A",100,0)
 D F^IBCEF("N-HCFA 1500 SERVICES (PRINT)",,,IBIFN)
"RTN","IBCEP8A",101,0)
 S LN=0
"RTN","IBCEP8A",102,0)
 F  S LN=$O(IBXDATA(LN)) Q:'LN  I $P(IBXDATA(LN),U,4)=4 S XRAY=1 Q
"RTN","IBCEP8A",103,0)
XRAYX ;
"RTN","IBCEP8A",104,0)
 Q XRAY
"RTN","IBCEP8A",105,0)
 ;
"RTN","IBCEP8A",106,0)
EIN(IBIFN) ; Function to return the EIN/tax ID for either the VA facility
"RTN","IBCEP8A",107,0)
 ; or the non-VA facility.  Used for SUB-9.
"RTN","IBCEP8A",108,0)
 NEW ID,IBU2,NONVA
"RTN","IBCEP8A",109,0)
 S ID="",IBU2=$G(^DGCR(399,IBIFN,"U2"))
"RTN","IBCEP8A",110,0)
 S NONVA=+$P(IBU2,U,10)                         ; non-VA facility ptr
"RTN","IBCEP8A",111,0)
 I NONVA D  G EINX
"RTN","IBCEP8A",112,0)
 . S ID=$P($G(^IBA(355.93,NONVA,0)),U,9)        ; ID# from file 355.93
"RTN","IBCEP8A",113,0)
 . ;
"RTN","IBCEP8A",114,0)
 . ; if not defined in file 355.93, then use legacy field# 234 in file
"RTN","IBCEP8A",115,0)
 . ; 399 - non-va care id#.  See NONVAID^IBCEF72.
"RTN","IBCEP8A",116,0)
 . I ID="",$P(IBU2,U,12)'="" S ID=$P(IBU2,U,12)
"RTN","IBCEP8A",117,0)
 . Q
"RTN","IBCEP8A",118,0)
 ;
"RTN","IBCEP8A",119,0)
 ; VA facility
"RTN","IBCEP8A",120,0)
 S ID=$P($G(^IBE(350.9,1,1)),U,5)    ; Federal tax id from site params
"RTN","IBCEP8A",121,0)
EINX ;
"RTN","IBCEP8A",122,0)
 Q ID
"RTN","IBCEP8A",123,0)
 ;
"RTN","IBCEP8A",124,0)
BOX324(IBIFN,IBXSAVE,IBXDATA) ; Procedure which further defines and formats
"RTN","IBCEP8A",125,0)
 ; form 1500, box 32, line 4.
"RTN","IBCEP8A",126,0)
 ; *** THIS IS NOT USED FOR THE NEW CMS-1500 CLAIM FORM ***
"RTN","IBCEP8A",127,0)
 ; This is either the facility Tax ID or it is the mammography
"RTN","IBCEP8A",128,0)
 ; certification number.
"RTN","IBCEP8A",129,0)
 ;  Input:  IBIFN, IBXSAVE array (pass by ref), IBXDATA (pass by ref)
"RTN","IBCEP8A",130,0)
 ; Output:  IBXDATA (pass by ref)
"RTN","IBCEP8A",131,0)
 ;
"RTN","IBCEP8A",132,0)
 NEW IBZ
"RTN","IBCEP8A",133,0)
 ;
"RTN","IBCEP8A",134,0)
 ; retrieve the mammo# if it exists into variable IBZ
"RTN","IBCEP8A",135,0)
 D F^IBCEF("N-MAMMOGRAPHY CERT#","IBZ",,IBIFN)
"RTN","IBCEP8A",136,0)
 ;
"RTN","IBCEP8A",137,0)
 ; If the claim is for the main VAMC and there is no mammo# then print
"RTN","IBCEP8A",138,0)
 ; nothing here.  See 364.7 iens# 348, 319, 327 for similar
"RTN","IBCEP8A",139,0)
 I '$G(IBXSAVE("REMOTE")),IBZ="" KILL IBXDATA G BOX32X
"RTN","IBCEP8A",140,0)
 ;
"RTN","IBCEP8A",141,0)
 ; If the mammo# exists, then display that
"RTN","IBCEP8A",142,0)
 I IBZ'="" S IBXDATA="Mammography Cert# "_IBZ G BOX32X
"RTN","IBCEP8A",143,0)
 ;
"RTN","IBCEP8A",144,0)
 ; Otherwise, display the facility tax id
"RTN","IBCEP8A",145,0)
 S IBXDATA="FAC. ID:"_$G(IBXDATA)
"RTN","IBCEP8A",146,0)
BOX32X ;
"RTN","IBCEP8A",147,0)
 KILL IBXSAVE("OFAC"),IBXSAVE("REMOTE")   ; cleanup
"RTN","IBCEP8A",148,0)
 Q
"RTN","IBCEP8A",149,0)
 ;
"RTN","IBCEP8A",150,0)
SUB1OK(IBIFN) ; This function determines if the claim meets the criteria
"RTN","IBCEP8A",151,0)
 ; for being eligible to output a SUB1 segment which is for professional
"RTN","IBCEP8A",152,0)
 ; purchased services.  Must be CMS-1500, non-VA facility, and Fee Basis.
"RTN","IBCEP8A",153,0)
 ;
"RTN","IBCEP8A",154,0)
 NEW OK,IBU2
"RTN","IBCEP8A",155,0)
 S OK=0,IBU2=$G(^DGCR(399,IBIFN,"U2"))
"RTN","IBCEP8A",156,0)
 ;
"RTN","IBCEP8A",157,0)
 I $$FT^IBCEF(IBIFN)'=2 G SX                      ; must be cms-1500
"RTN","IBCEP8A",158,0)
 I '$P(IBU2,U,10) G SX                            ; must be non-VA fac
"RTN","IBCEP8A",159,0)
 I '$F(".1.2.","."_$P(IBU2,U,11)_".") G SX        ; must be FEE services
"RTN","IBCEP8A",160,0)
 ;
"RTN","IBCEP8A",161,0)
 S OK=1    ; all checks passed, OK for SUB1 output
"RTN","IBCEP8A",162,0)
SX ;
"RTN","IBCEP8A",163,0)
 Q OK
"RTN","IBCEP8A",164,0)
 ;
"RTN","IBCEP9")
0^65^B73704936^B73005418
"RTN","IBCEP9",1,0)
IBCEP9 ;ALB/TMP - MASS UPDATE OF PROVIDER ID FROM FILE OR MANUAL ;08-NOV-00
"RTN","IBCEP9",2,0)
 ;;2.0;INTEGRATED BILLING;**137,200,320,348,349**;21-MAR-94;Build 46
"RTN","IBCEP9",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEP9",4,0)
 ;
"RTN","IBCEP9",5,0)
EN ; Get parameters and mass input provider id by ins co
"RTN","IBCEP9",6,0)
 N A,DA,DIC,DIE,DIK,DIR,DR,POP,Q,Q0,X,Y,Y3,Z,Z0
"RTN","IBCEP9",7,0)
 N IBCND,IBCU,IBCT,IBDELIM,IBFILE,IBFILEN,IBFILEP,IBFORMAT
"RTN","IBCEP9",8,0)
 N IBFT,IBINFILE,IBINS,IBL,IBN,IBOK,IBOPEN,IBPOS,IBPT,IBQUIT
"RTN","IBCEP9",9,0)
 N IBQUIT1,IBQUOTES,IBRA,IBS,IBSA,IBSTART,IBSRC,IBVERIFY,IBVNAME
"RTN","IBCEP9",10,0)
 K ^TMP("IBPID_IN",$J),^TMP("IBPID-ERR",$J),^TMP("IBPID",$J)
"RTN","IBCEP9",11,0)
 S IBQUIT=0
"RTN","IBCEP9",12,0)
1 ; Select INSURANCE COMPANY NAME:
"RTN","IBCEP9",13,0)
 G:IBQUIT ENQ
"RTN","IBCEP9",14,0)
 S IBQUIT1=0
"RTN","IBCEP9",15,0)
 S DIC("S")="I $P($G(^DIC(36,+Y,3)),U,13)'=""C"""
"RTN","IBCEP9",16,0)
 S DIC(0)="AEMQ",DIC="^DIC(36," D ^DIC
"RTN","IBCEP9",17,0)
 I Y'>0 G ENQ
"RTN","IBCEP9",18,0)
 S IBINS=+Y
"RTN","IBCEP9",19,0)
 S IBQUIT=$$LOCK^IBCEP9B(IBINS)
"RTN","IBCEP9",20,0)
 I IBQUIT,$G(IBINS) D  G 1
"RTN","IBCEP9",21,0)
 . D UNLOCK^IBCEP9B(IBINS)
"RTN","IBCEP9",22,0)
 . S IBINS="",IBQUIT=0
"RTN","IBCEP9",23,0)
 . W !!,"Unable to lock all associated insurance companies.",!,"Please try again later.",!!
"RTN","IBCEP9",24,0)
 ;
"RTN","IBCEP9",25,0)
2 ; get data source
"RTN","IBCEP9",26,0)
 S IBQUIT1=0
"RTN","IBCEP9",27,0)
 S DIR(0)="SA^M:Manual Entry;F:Entry from file"
"RTN","IBCEP9",28,0)
 S DIR("A")="PROVIDER ID DATA SOURCE: ",DIR("B")="Manual Entry"
"RTN","IBCEP9",29,0)
 S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",30,0)
 I Y=""!("FM"'[Y)!IBQUIT1 D UNLOCK^IBCEP9B(IBINS) G 1
"RTN","IBCEP9",31,0)
 S IBSRC=Y,IBVERIFY=0
"RTN","IBCEP9",32,0)
 S IBVERIFY=(Y="M")
"RTN","IBCEP9",33,0)
 I 'IBVERIFY D  G:IBQUIT ENQ G:IBQUIT 2
"RTN","IBCEP9",34,0)
 . S DIR(0)="YA",DIR("A")="DO YOU WANT TO VIEW/VERIFY EACH ENTRY BEFORE IT GETS UPDATED?: "
"RTN","IBCEP9",35,0)
 . S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",36,0)
 . I Y=1 S IBVERIFY=1
"RTN","IBCEP9",37,0)
 ;
"RTN","IBCEP9",38,0)
 G:IBSRC="M" 4
"RTN","IBCEP9",39,0)
21 ; get parameters for file type
"RTN","IBCEP9",40,0)
 G:IBQUIT ENQ
"RTN","IBCEP9",41,0)
 S IBQUIT1=0
"RTN","IBCEP9",42,0)
 S DIR(0)="SA^D:DELIMITED;F:FIXED LENGTH",DIR("B")="D",DIR("A")="SELECT FILE FORMAT: "
"RTN","IBCEP9",43,0)
 S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",44,0)
 I IBQUIT1 G 2
"RTN","IBCEP9",45,0)
 S IBPOS=Y
"RTN","IBCEP9",46,0)
 I IBPOS="D" D  G:IBQUIT1 21
"RTN","IBCEP9",47,0)
 . S DIR(0)="FA^1:1",DIR("B")=",",DIR("A")="DELIMITER CHARACTER: "
"RTN","IBCEP9",48,0)
 . S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",49,0)
 . Q:IBQUIT1
"RTN","IBCEP9",50,0)
 . S $P(IBPOS,U,2)=Y
"RTN","IBCEP9",51,0)
 . S DIR(0)="YA",DIR("B")="NO",DIR("A")="ARE QUOTES WITHIN A FIELD DOUBLE QUOTED?: "
"RTN","IBCEP9",52,0)
 . S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1,,,1)
"RTN","IBCEP9",53,0)
 . Q:IBQUIT1
"RTN","IBCEP9",54,0)
 . S $P(IBPOS,U,3)=Y
"RTN","IBCEP9",55,0)
3 ; select external file name
"RTN","IBCEP9",56,0)
 G:IBQUIT ENQ
"RTN","IBCEP9",57,0)
 S IBQUIT1=0
"RTN","IBCEP9",58,0)
 G:IBSRC="M" 2
"RTN","IBCEP9",59,0)
 S DIR(0)="FA^1:60"
"RTN","IBCEP9",60,0)
 S DIR("A")="FILE NAME PATH: ",DIR("B")=$$PWD^%ZISH
"RTN","IBCEP9",61,0)
 S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",62,0)
 G:IBQUIT1 2
"RTN","IBCEP9",63,0)
 S IBFILEP=$P(Y,U)
"RTN","IBCEP9",64,0)
 S DIR(0)="FA^1:60"
"RTN","IBCEP9",65,0)
 S DIR("A")="FILE NAME: "
"RTN","IBCEP9",66,0)
 S IBSA("*")=""
"RTN","IBCEP9",67,0)
 S DIR("?")="^S Y3=$$LIST^%ZISH(IBFILEP,""IBSA"",""IBRA"") I Y3=1 S Y3="""" F  S Y3=$O(IBRA(Y3)) Q:Y3=""""  W !,Y3"
"RTN","IBCEP9",68,0)
 S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1,,,1)
"RTN","IBCEP9",69,0)
 G:IBQUIT1 2
"RTN","IBCEP9",70,0)
 S IBFILEN=$P(Y,U)
"RTN","IBCEP9",71,0)
 K ^TMP($J),IBRA,Y3
"RTN","IBCEP9",72,0)
 N Y S Y=$$FTG^%ZISH(IBFILEP,IBFILEN,$NA(^TMP($J,1)),2)
"RTN","IBCEP9",73,0)
 I Y=0 W !,"FILE ",IBFILEP,IBFILEN," COULD NOT BE FOUND OR COULD NOT BE OPENED",! G 3
"RTN","IBCEP9",74,0)
 S IBFILE=IO
"RTN","IBCEP9",75,0)
4 ; select Provider ID Type
"RTN","IBCEP9",76,0)
 G:IBQUIT ENQ
"RTN","IBCEP9",77,0)
 S IBQUIT1=0
"RTN","IBCEP9",78,0)
 S DIR(0)="355.9,.06"
"RTN","IBCEP9",79,0)
 I IBSRC="M" S Z=$P($G(^IBE(355.97,+$$PPTYP^IBCEP0(IBINS),0)),U) S:Z'="" DIR("B")=Z
"RTN","IBCEP9",80,0)
 S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",81,0)
 G:Y=""!IBQUIT1 3
"RTN","IBCEP9",82,0)
 S IBPTYP=$P(Y,U)
"RTN","IBCEP9",83,0)
5 ; select Forms Type
"RTN","IBCEP9",84,0)
 G:IBQUIT ENQ
"RTN","IBCEP9",85,0)
 S IBQUIT1=0
"RTN","IBCEP9",86,0)
 S DIR(0)="355.9,.04r",DIR("B")="BOTH UB-04 AND CMS-1500 FORMS"
"RTN","IBCEP9",87,0)
 S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",88,0)
 G:IBQUIT1 4
"RTN","IBCEP9",89,0)
 I Y=""!("012"'[Y) G 5
"RTN","IBCEP9",90,0)
 S IBFT=$P(Y,U)
"RTN","IBCEP9",91,0)
6 ; select Bill Care Type
"RTN","IBCEP9",92,0)
 G:IBQUIT ENQ
"RTN","IBCEP9",93,0)
 S IBQUIT1=0
"RTN","IBCEP9",94,0)
 S DIR(0)="355.9,.05r",DIR("B")="BOTH INPATIENT AND OUTPATIENT"
"RTN","IBCEP9",95,0)
 S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",96,0)
 G:IBQUIT1 5
"RTN","IBCEP9",97,0)
 I Y=""!("0123"'[$P(Y,U)) G 6
"RTN","IBCEP9",98,0)
 S IBCT=$P(Y,U)
"RTN","IBCEP9",99,0)
 ;
"RTN","IBCEP9",100,0)
 S IBCND=$$CAREUN^IBCEP3(IBINS,IBPTYP,IBFT,IBCT,IBCT=3)
"RTN","IBCEP9",101,0)
7 ; get Care Unit
"RTN","IBCEP9",102,0)
 G:IBQUIT ENQ
"RTN","IBCEP9",103,0)
 S IBQUIT1=0
"RTN","IBCEP9",104,0)
 I IBCND D  G:IBQUIT1 6
"RTN","IBCEP9",105,0)
 . S DIR(0)="355.9,.03O"
"RTN","IBCEP9",106,0)
 . S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",107,0)
 . Q:IBQUIT1
"RTN","IBCEP9",108,0)
 . S IBCU=$P(Y,U)
"RTN","IBCEP9",109,0)
 . I IBCU="" W !!,$J("",22),"***** WARNING *****",!," YOU WILL NEED TO MANUALLY ENTER THE CARE UNIT FOR EACH PROVIDER",!!
"RTN","IBCEP9",110,0)
 ;
"RTN","IBCEP9",111,0)
 ; Manual entry to get providers from VistA
"RTN","IBCEP9",112,0)
 I IBSRC="M" D MANUAL^IBCEP9B G:IBQUIT1 6
"RTN","IBCEP9",113,0)
 ; For 'OTHER' files ask position/length or delimiter/piece for data
"RTN","IBCEP9",114,0)
 I IBSRC="F" D  I IBQUIT1 G:'IBCND 6 G 7
"RTN","IBCEP9",115,0)
 . F Z="PROV. SSN^SSN^15^1","PROV. NAME^NAM^30","PROV. 1500 ID^PROF_ID^15","PROV. UB-04 ID^INST_ID^15" D  Q:IBQUIT1
"RTN","IBCEP9",116,0)
 .. I $P(IBPOS,U)'="D" D
"RTN","IBCEP9",117,0)
 ... N X
"RTN","IBCEP9",118,0)
 ... I IBFT=0!(IBFT=1) Q:Z["PROF_ID"  I Z["INST_ID" S $P(Z,U)="PROV. ID"
"RTN","IBCEP9",119,0)
 ... I IBFT=2 Q:Z["INST_ID"
"RTN","IBCEP9",120,0)
 ... S DIR("A")="START POSITION OF "_$P(Z,U)_" FIELD: "
"RTN","IBCEP9",121,0)
 ... S DIR(0)="NA"_$S($P(Z,U,4)!($P(Z,U)["PROV. ID")!($P(Z,U)["_ID"):"",1:"O")_"^1:250"
"RTN","IBCEP9",122,0)
 ... W ! S X=$$DIR1^IBCEP9B(.DIR,Z,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",123,0)
 ... Q:IBQUIT1
"RTN","IBCEP9",124,0)
 ... I X>0 D
"RTN","IBCEP9",125,0)
 .... S IBPOS($P(Z,U,2))=X
"RTN","IBCEP9",126,0)
 .... S DIR("A")="LENGTH OF "_$P(Z,U)_" FIELD: "
"RTN","IBCEP9",127,0)
 .... S DIR(0)="NA"_$S($P(Z,U,3):"^1:"_$P(Z,U,3),1:"")
"RTN","IBCEP9",128,0)
 .... S X=$$DIR1^IBCEP9B(.DIR,Z,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",129,0)
 .... Q:IBQUIT1
"RTN","IBCEP9",130,0)
 .... S $P(IBPOS($P(Z,U,2)),U,2)=IBPOS($P(Z,U,2))+X-1
"RTN","IBCEP9",131,0)
 .. ;
"RTN","IBCEP9",132,0)
 .. I $P(IBPOS,U)="D" D
"RTN","IBCEP9",133,0)
 ... I IBFT=0!(IBFT=1) Q:Z["PROF_ID"  I Z["INST_ID" S $P(Z,U)="PROV. ID"
"RTN","IBCEP9",134,0)
 ... I IBFT=2 Q:Z["INST_ID"
"RTN","IBCEP9",135,0)
 ... W ! S DIR("A")="STARTING '"_$P(IBPOS,U,2)_"' PIECE # OF "_$P(Z,U)_" FIELD: "
"RTN","IBCEP9",136,0)
 ... S DIR(0)="NA"_$S($P(Z,U,4)!($P(Z,U)["PROV. ID")!($P(Z,U)["_ID"):"",1:"O")
"RTN","IBCEP9",137,0)
 ... S X=$$DIR1^IBCEP9B(.DIR,Z,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",138,0)
 ... Q:IBQUIT1
"RTN","IBCEP9",139,0)
 ... I X>0 D
"RTN","IBCEP9",140,0)
 .... S (DIR("B"),IBPOS($P(Z,U,2)))=X
"RTN","IBCEP9",141,0)
 .... S DIR("A")="ENDING '"_$P(IBPOS,U,2)_"' PIECE # OF "_$P(Z,U)_" FIELD: "
"RTN","IBCEP9",142,0)
 .... S DIR(0)="NA"_$S($P(Z,U,4):"",1:"O")_U_(IBPOS($P(Z,U,2)))_":99"
"RTN","IBCEP9",143,0)
 .... S DIR("?")="JUST PRESS THE ENTER KEY IF THIS FIELD IS CONTAINED IN ONLY 1 PIECE"
"RTN","IBCEP9",144,0)
 .... S Y=$$DIR1^IBCEP9B(.DIR,Z,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",145,0)
 .... Q:IBQUIT1
"RTN","IBCEP9",146,0)
 .... W ! I Y>0,Y'=IBPOS($P(Z,U,2)) S $P(IBPOS($P(Z,U,2)),U,2)=Y
"RTN","IBCEP9",147,0)
 .. ;
"RTN","IBCEP9",148,0)
 . Q:IBQUIT1
"RTN","IBCEP9",149,0)
 . D READFILE^IBCEP9B
"RTN","IBCEP9",150,0)
 . ;
"RTN","IBCEP9",151,0)
P1 ;
"RTN","IBCEP9",152,0)
 S Z="" F  S Z=$O(^TMP("IBPID_IN",$J,Z)) Q:Z=""  S Z0=0 F  S Z0=$O(^TMP("IBPID_IN",$J,Z,Z0)) Q:'Z0  S Q=$G(^(Z0)) D  G:IBQUIT ENQ
"RTN","IBCEP9",153,0)
 . ;
"RTN","IBCEP9",154,0)
 . I IBSRC="M" D  Q
"RTN","IBCEP9",155,0)
 .. D DISP^IBCEP9B(Q,0,IBINS,IBPTYP,IBFT,IBCT,$G(IBCU),,IBSRC)
"RTN","IBCEP9",156,0)
 .. ; Manually add IDs
"RTN","IBCEP9",157,0)
 .. S IBN=$$DUP(+Z0_";VA(200,",IBINS,$S($G(IBCU)'="":IBCU,1:"*N/A*"),IBFT,IBCT,IBPTYP)
"RTN","IBCEP9",158,0)
 .. I 'IBN D  Q:IBQUIT!(IBN'>0)
"RTN","IBCEP9",159,0)
 ... S IBN=$$ADDID^IBCEP9B(Z0,IBINS,$G(IBCU),IBFT,IBCT,IBPTYP,,.IBQUIT)
"RTN","IBCEP9",160,0)
 .. S DIE="^IBA(355.9,",DR=".07",DA=+IBN D ^DIE
"RTN","IBCEP9",161,0)
 .. I $D(Y)!($P($G(^IBA(355.9,+IBN,0)),U,7)="") D
"RTN","IBCEP9",162,0)
 ... I $P(IBN,U,3) S DA=+IBN,DIK="^IBA(355.9," D ^DIK
"RTN","IBCEP9",163,0)
 ... S DIR(0)="YA",DIR("B")="NO",DIR("A")="DO YOU WANT TO STOP ENTERING PROVIDER IDs?: "
"RTN","IBCEP9",164,0)
 ... S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1,,1,1)
"RTN","IBCEP9",165,0)
 ... I Y=1 S IBQUIT=1
"RTN","IBCEP9",166,0)
 .. S IBID=$P($G(^IBA(355.9,+IBN,0)),U,7)
"RTN","IBCEP9",167,0)
 .. S:$L(IBID) ^TMP("IBPID_IN",$J,U,Z0,"INST_ID")=IBID
"RTN","IBCEP9",168,0)
 .. I IBID="" K ^TMP("IBPID_IN",$J,U,Z0)
"RTN","IBCEP9",169,0)
 .. I IBQUIT=1 F  S Z0=$O(^TMP("IBPID_IN",$J,U,Z0)) Q:Z0=""  K ^TMP("IBPID_IN",$J,U,Z0) ; user wants to stop, remove all remaining names from list
"RTN","IBCEP9",170,0)
 . ;
"RTN","IBCEP9",171,0)
 . S IBOK=1
"RTN","IBCEP9",172,0)
 . N IBX,IBID
"RTN","IBCEP9",173,0)
 . M IBX=^TMP("IBPID_IN",$J,Z,Z0)
"RTN","IBCEP9",174,0)
 . I IBSRC="F" S IBID=$S(IBFT=0!(IBFT=1):$G(IBX("INST_ID")),1:$G(IBX("PROF_ID")))
"RTN","IBCEP9",175,0)
 . I $G(IBVERIFY) D  ; Display record, ask OK to file id's
"RTN","IBCEP9",176,0)
 .. D DISP^IBCEP9B(Q,0,IBINS,IBPTYP,IBFT,IBCT,$G(IBCU),,IBSRC)
"RTN","IBCEP9",177,0)
 .. W !,"PROVIDER ID: ",IBID
"RTN","IBCEP9",178,0)
 .. S DIR("A")="OK TO FILE THIS ID FOR THIS PROVIDER?: ",DIR(0)="YA",DIR("B")="NO"
"RTN","IBCEP9",179,0)
 .. S Y=$$DIR(.DIR,,,,1,1)
"RTN","IBCEP9",180,0)
 .. I Y'=1 D  Q  ; Send to error array
"RTN","IBCEP9",181,0)
 ... S IBOK=0
"RTN","IBCEP9",182,0)
 ... S ^TMP("IBPID-ERR",$J,2,$P(IBX,U),$P(IBX,U,2)_" ","PROV ID")=IBID
"RTN","IBCEP9",183,0)
 ... S ^TMP("IBPID_IN",$J,U,Z0,0)="NO PRINT"
"RTN","IBCEP9",184,0)
 ... N Z1
"RTN","IBCEP9",185,0)
 ... S Z1="" F  S Z1=$O(IBX(Z1)) Q:Z1=""  I $G(IBX(Z1))'="",Z1'["_ID" S ^TMP("IBPID-ERR",$J,2,$P(IBX,U),$P(IBX,U,2)_" ",Z1)=IBX(Z1)
"RTN","IBCEP9",186,0)
 . I IBOK D  ; Add/update the record
"RTN","IBCEP9",187,0)
 .. I IBSRC="F" D
"RTN","IBCEP9",188,0)
 ... I IBID'="" D
"RTN","IBCEP9",189,0)
 .... S IBN=$$ADDID^IBCEP9B(+Z0,IBINS,$G(IBCU),IBFT,IBCT,IBPTYP,,.IBQUIT)
"RTN","IBCEP9",190,0)
 .... I IBQUIT D:IBN>0  Q
"RTN","IBCEP9",191,0)
 ..... S DA=+IBN,DIK="^IBA(355.9," D ^DIK
"RTN","IBCEP9",192,0)
 .... I IBN>0 S DIE="^IBA(355.9,",DA=+IBN,DR=".07////"_IBID D ^DIE
"RTN","IBCEP9",193,0)
 .. ;
"RTN","IBCEP9",194,0)
 ;
"RTN","IBCEP9",195,0)
ENQ ; Print report, exit
"RTN","IBCEP9",196,0)
 I $G(IBINS) D
"RTN","IBCEP9",197,0)
 . D COPY^IBCEPCID(IBINS)
"RTN","IBCEP9",198,0)
 . D UNLOCK^IBCEP9B(IBINS)
"RTN","IBCEP9",199,0)
 ;
"RTN","IBCEP9",200,0)
 I ($D(^TMP("IBPID-ERR",$J)))!($D(^TMP("IBPID_IN",$J))) D
"RTN","IBCEP9",201,0)
 . N %ZIS,ZTSAVE,ZTRTN,ZTDESC,IBDUZ
"RTN","IBCEP9",202,0)
 . S IBDUZ=$G(DUZ)
"RTN","IBCEP9",203,0)
 . S %ZIS="QM" D ^%ZIS Q:POP
"RTN","IBCEP9",204,0)
 . I $D(IO("Q")) K IO("Q") D  D ^%ZTLOAD K ZTSK D HOME^%ZIS Q
"RTN","IBCEP9",205,0)
 .. S ZTRTN="PRTERR^IBCEP9B",ZTSAVE("^TMP(""IBPID-ERR"",$J,")=""
"RTN","IBCEP9",206,0)
 .. S ZTSAVE("^TMP(""IBPID_IN"",$J,")="",ZTSAVE("IB*")=""
"RTN","IBCEP9",207,0)
 .. S ZTDESC="IB - PROVIDER ID BATCH UPDATE ERROR LOG"
"RTN","IBCEP9",208,0)
 . U IO
"RTN","IBCEP9",209,0)
 . D PRTERR^IBCEP9B
"RTN","IBCEP9",210,0)
 K ^TMP("IBPID_IN",$J),^TMP("IBPID-ERR",$J),^TMP("IBPID",$J)
"RTN","IBCEP9",211,0)
 U IO(0)
"RTN","IBCEP9",212,0)
 Q
"RTN","IBCEP9",213,0)
 ;
"RTN","IBCEP9",214,0)
DUP(IBPRV,IBINS,IBCU,IBFT,IBCT,IBPTYP) ; Check if provider id record already exists in file 355.9
"RTN","IBCEP9",215,0)
 Q +$O(^IBA(355.9,"AUNIQ",IBPRV,IBINS,IBCU,IBFT,IBCT,IBPTYP,0))
"RTN","IBCEP9",216,0)
 ;
"RTN","IBCEP9",217,0)
ERREOF ; Traps EOF error on file read for non-DSM systems
"RTN","IBCEP9",218,0)
 N IBERROR S IBERROR=$$EC^%ZOSV
"RTN","IBCEP9",219,0)
 I IBERROR["ENDOFFILE" D CLOSE(.IBOPEN) G ENQ
"RTN","IBCEP9",220,0)
 D ^%ZTER
"RTN","IBCEP9",221,0)
 Q
"RTN","IBCEP9",222,0)
 ;
"RTN","IBCEP9",223,0)
CLOSE(IBOPEN) ; Close file
"RTN","IBCEP9",224,0)
 D CLOSE^%ZISH("IBINFILE") S IBOPEN=0
"RTN","IBCEP9",225,0)
 Q
"RTN","IBCEP9",226,0)
 ;
"RTN","IBCEP9",227,0)
DIR(DIR,IBQUIT,IBQUIT1,X,IBW1,IBW2) ; Standard call to ^DIR
"RTN","IBCEP9",228,0)
 ;  Inputs DIR array
"RTN","IBCEP9",229,0)
 ;  Returns IBQUIT,IBQUIT1,X if passed by reference
"RTN","IBCEP9",230,0)
 ;    AND
"RTN","IBCEP9",231,0)
 ;      FUNCTION returns the value of Y
"RTN","IBCEP9",232,0)
 ;  IBW1 = 1 if initial write ! should be done
"RTN","IBCEP9",233,0)
 ;  IBW2 = 1 if last write ! should be done
"RTN","IBCEP9",234,0)
 N DIROUT,DTOUT,DUOUT,DA
"RTN","IBCEP9",235,0)
 W:$G(IBW1) ! D ^DIR K DIR W:$G(IBW2) !
"RTN","IBCEP9",236,0)
 S (IBQUIT,IBQUIT1)=0
"RTN","IBCEP9",237,0)
 S DIR("?")="Enter '^' to back up one prompt or '^^' to exit the option"
"RTN","IBCEP9",238,0)
 I $D(DIROUT) S (IBQUIT,IBQUIT1)=1
"RTN","IBCEP9",239,0)
 I $D(DTOUT)!$D(DUOUT) S IBQUIT1=1
"RTN","IBCEP9",240,0)
 Q Y
"RTN","IBCEP9",241,0)
 ;
"RTN","IBCEP9",242,0)
ERR ; Error list
"RTN","IBCEP9",243,0)
 ;; INVALID OR MISSING SSN - NO PROVIDER MATCH FOUND
"RTN","IBCEP9",244,0)
 ;; NO UPDATE PER USER REQUEST
"RTN","IBCEP9",245,0)
 ;;
"RTN","IBCEPB")
0^66^B7676163^B7318616
"RTN","IBCEPB",1,0)
IBCEPB ;ALB/WCJ - Insurance company ID parameters ;22-DEC-2005
"RTN","IBCEPB",2,0)
 ;;2.0;INTEGRATED BILLING;**320,348,349**;21-MAR-94;Build 46
"RTN","IBCEPB",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEPB",4,0)
EN ; -- main entry point for IBCE INSCO ID MAINT
"RTN","IBCEPB",5,0)
 D EN^VALM("IBCE INSCO ID MAINT")
"RTN","IBCEPB",6,0)
 Q
"RTN","IBCEPB",7,0)
 ;
"RTN","IBCEPB",8,0)
HDR ; -- header code
"RTN","IBCEPB",9,0)
 N PCF,PCDISP
"RTN","IBCEPB",10,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPB",11,0)
 S PCF=$P($G(^DIC(36,+IBCNS,3)),U,13),PCDISP=$S(PCF="P":"(Parent)",1:"")
"RTN","IBCEPB",12,0)
 S VALMHDR(1)="Insurance Co: "_$P($G(^DIC(36,+IBCNS,0)),U)_PCDISP
"RTN","IBCEPB",13,0)
 Q
"RTN","IBCEPB",14,0)
 ;
"RTN","IBCEPB",15,0)
INIT ; Initialize
"RTN","IBCEPB",16,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPB",17,0)
 N IBLCT
"RTN","IBCEPB",18,0)
 S IBLCT=0
"RTN","IBCEPB",19,0)
 ; Display the list
"RTN","IBCEPB",20,0)
 D SET1(.IBLCT,"Attending/Rendering Provider Secondary ID")
"RTN","IBCEPB",21,0)
 D SET1(.IBLCT,"Default ID (1500) : "_$$GET1^DIQ(36,IBCNS,4.01))
"RTN","IBCEPB",22,0)
 D SET1(.IBLCT,"Default ID (UB-04): "_$$GET1^DIQ(36,IBCNS,4.02))
"RTN","IBCEPB",23,0)
 D SET1(.IBLCT,"Require ID on Claim: "_$$GET1^DIQ(36,IBCNS,4.03))
"RTN","IBCEPB",24,0)
 D SET1(.IBLCT," ")
"RTN","IBCEPB",25,0)
 D SET1(.IBLCT,"Referring Provider Secondary ID")
"RTN","IBCEPB",26,0)
 D SET1(.IBLCT,"Default ID (1500): "_$$GET1^DIQ(36,IBCNS,4.04))
"RTN","IBCEPB",27,0)
 D SET1(.IBLCT,"Require ID on Claim: "_$$GET1^DIQ(36,IBCNS,4.05))
"RTN","IBCEPB",28,0)
 D SET1(.IBLCT," ")
"RTN","IBCEPB",29,0)
 D SET1(.IBLCT,"Billing Provider Secondary IDs")
"RTN","IBCEPB",30,0)
 D SET1(.IBLCT,"Use Att/Rend ID as Billing Provider Sec. ID (1500)? : "_$$GET1^DIQ(36,IBCNS,4.06))
"RTN","IBCEPB",31,0)
 D SET1(.IBLCT,"Use Att/Rend ID as Billing Provider Sec. ID (UB-04)?: "_$$GET1^DIQ(36,IBCNS,4.08))
"RTN","IBCEPB",32,0)
 D SET1(.IBLCT,"Transmit no Billing Provider Sec ID for the following Electronic Plan Types:")
"RTN","IBCEPB",33,0)
 D LIST^DIC(36.013,","_IBCNS_",",".01",,10,,,,,,"TAR","ERR")
"RTN","IBCEPB",34,0)
 F I=1:1:+$G(TAR("DILIST",0)) D
"RTN","IBCEPB",35,0)
 . D SET1(.IBLCT,TAR("DILIST",1,I))
"RTN","IBCEPB",36,0)
 D SET1(.IBLCT," ")
"RTN","IBCEPB",37,0)
 D SET1(.IBLCT,"VA-Laboratory or Facility IDs")
"RTN","IBCEPB",38,0)
 D SET1(.IBLCT,"Send VA Lab/Facility IDs or Facility Data for VAMC?: "_$$GET1^DIQ(36,IBCNS,4.07))
"RTN","IBCEPB",39,0)
 S VALMBG=1,VALMCNT=IBLCT
"RTN","IBCEPB",40,0)
 Q
"RTN","IBCEPB",41,0)
 ;
"RTN","IBCEPB",42,0)
SET1(IBLCT,TEXT,IBCT) ;
"RTN","IBCEPB",43,0)
 S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,TEXT)
"RTN","IBCEPB",44,0)
 Q
"RTN","IBCEPB",45,0)
 ;
"RTN","IBCEPB",46,0)
EXPND ;
"RTN","IBCEPB",47,0)
 Q
"RTN","IBCEPB",48,0)
HELP ;
"RTN","IBCEPB",49,0)
 Q
"RTN","IBCEPB",50,0)
EXIT ;
"RTN","IBCEPB",51,0)
 D CLEAN^VALM10
"RTN","IBCEPB",52,0)
 Q
"RTN","IBCEPB",53,0)
 ;
"RTN","IBCEPB",54,0)
IDPARAM ;
"RTN","IBCEPB",55,0)
 D FULL^VALM1
"RTN","IBCEPB",56,0)
 N DIE,DA,DR
"RTN","IBCEPB",57,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPB",58,0)
 S DIE="^DIC(36,",(DA,Y)=IBCNS,DR="[IBEDIT INS CO1]"
"RTN","IBCEPB",59,0)
 I '$D(IBY) N IBY S IBY=",12,"
"RTN","IBCEPB",60,0)
 D ^DIE K DIE
"RTN","IBCEPB",61,0)
 K ^TMP("IBCE_PRVFAC_MAINT",$J)
"RTN","IBCEPB",62,0)
 D INIT
"RTN","IBCEPB",63,0)
 S VALMBCK="R"
"RTN","IBCEPB",64,0)
 Q
"RTN","IBCEPB",65,0)
 ;
"RTN","IBCEPB",66,0)
BILLPRVP ;
"RTN","IBCEPB",67,0)
 D FULL^VALM1
"RTN","IBCEPB",68,0)
 D EN^IBCEPC
"RTN","IBCEPB",69,0)
 D INIT
"RTN","IBCEPB",70,0)
 K ^TMP("IBCE_PRVFAC_MAINT",$J)
"RTN","IBCEPB",71,0)
 S VALMBCK="R"
"RTN","IBCEPB",72,0)
 Q
"RTN","IBCEPTC")
0^67^B73846372^B73141787
"RTN","IBCEPTC",1,0)
IBCEPTC ;ALB/TMK - EDI PREVIOUSLY TRANSMITTED CLAIMS ; 4/12/05 11:15am
"RTN","IBCEPTC",2,0)
 ;;2.0;INTEGRATED BILLING;**296,320,348,349**;21-MAR-94;Build 46
"RTN","IBCEPTC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEPTC",4,0)
 ;
"RTN","IBCEPTC",5,0)
EN ; Main entrypoint
"RTN","IBCEPTC",6,0)
 ; IBDT1,IBDT2 = last transmit date range to use
"RTN","IBCEPTC",7,0)
 ; IBSORT = primary sort criteria to use B=BATCH #,I=INS CO NAME
"RTN","IBCEPTC",8,0)
 ; IBFORM = form type to limit selection to U=UB-04,C=CMS-1500,B=BOTH
"RTN","IBCEPTC",9,0)
 ; IBCRIT = the additional sort criteria needed
"RTN","IBCEPTC",10,0)
 ; IBPTCCAN = whether or not to include cancelled claims
"RTN","IBCEPTC",11,0)
 ; IBRCBFPC = whether or not to include force print @ clearinghouse
"RTN","IBCEPTC",12,0)
 ; ^TMP("IB_PREV_CLAIM_INS",$J) = 1 for specific ins co/null for all
"RTN","IBCEPTC",13,0)
 ;                        ^($J,1,ien)="" for ien of each ins co selected
"RTN","IBCEPTC",14,0)
 ;                        ^($J,2,payer ID,ien)="" if selected
"RTN","IBCEPTC",15,0)
 ; IBREP = format output should be put in R=report,S=Listman
"RTN","IBCEPTC",16,0)
 ;
"RTN","IBCEPTC",17,0)
 N DIR,DIC,X,Y,Z,Z0,Z1,IBHOW,IBACT,IBCT,IBREP,IBCRIT,IBDT1,IBDT2
"RTN","IBCEPTC",18,0)
 N IBFORM,IBOK,IBQUIT,IBSORT,IBY,DTOUT,DUOUT,%ZIS,ZTSAVE,ZTRTN,ZTDESC
"RTN","IBCEPTC",19,0)
 N POP,IBPAYER,EDI,INST,PROF,IBPTCCAN,DIROUT,DIRUT,DTOUT,DUOUT,IBRCBFPC
"RTN","IBCEPTC",20,0)
 ;
"RTN","IBCEPTC",21,0)
Q1 ;
"RTN","IBCEPTC",22,0)
 W !!,"*** Please Note ***"
"RTN","IBCEPTC",23,0)
 W ?20,"2 '^' are needed to abort this option (^^)"
"RTN","IBCEPTC",24,0)
 W !?20,"1 '^' brings you back to the previous prompt (^)"
"RTN","IBCEPTC",25,0)
 W !
"RTN","IBCEPTC",26,0)
 ;
"RTN","IBCEPTC",27,0)
 S DIR(0)="SA^C:Claim;B:Batch;L:List",DIR("A")="Select By: (C)laim, (B)atch or see a (L)ist to pick from?: ",DIR("B")="List"
"RTN","IBCEPTC",28,0)
 D ^DIR K DIR
"RTN","IBCEPTC",29,0)
 I $D(DTOUT)!$D(DUOUT) G ENQ
"RTN","IBCEPTC",30,0)
 S IBHOW=Y
"RTN","IBCEPTC",31,0)
 I IBHOW="L" G Q1A
"RTN","IBCEPTC",32,0)
 ;
"RTN","IBCEPTC",33,0)
 S IBQUIT=0,IBCT=0
"RTN","IBCEPTC",34,0)
 K ^TMP($J,IBHOW)
"RTN","IBCEPTC",35,0)
 F  D  Q:IBQUIT
"RTN","IBCEPTC",36,0)
 . I IBHOW="C" S DIR("A")="Select a"_$S(IBCT:"nother",1:"")_" Claim: ",DIR(0)="PA^364:AEMQZ",DIR("S")="I '$P(^(0),U,7),'$O(^IBA(364,""B"",+^(0),Y))"
"RTN","IBCEPTC",37,0)
 . I IBHOW="B" S DIR("A")="Select a"_$S(IBCT:"nother",1:"")_" Batch: ",DIR(0)="PA^IBA(364.1,:AEMQ^W ""  "",$P(^(0),U,3),"" Claims""",DIR("S")="I '$P(^(0),U,14)"
"RTN","IBCEPTC",38,0)
 . S DIR("?")="^D SELDSP^IBCEPTC(IBHOW)"
"RTN","IBCEPTC",39,0)
 . S:IBCT $P(DIR(0),U)=$P(DIR(0),U)_"O" ; Optional prompt after one is selected
"RTN","IBCEPTC",40,0)
 . D ^DIR K DIR
"RTN","IBCEPTC",41,0)
 . I Y'>0 S IBQUIT=$S(X="^":2,X="^^":3,1:1) Q
"RTN","IBCEPTC",42,0)
 . S IBY=$S(IBHOW="C":+Y,1:""),Y=$S(IBHOW="C":+Y(0),1:Y)
"RTN","IBCEPTC",43,0)
 . I '$D(^TMP($J,IBHOW,+Y)) S IBCT=IBCT+1,^TMP($J,IBHOW,+Y)=IBY
"RTN","IBCEPTC",44,0)
 ;
"RTN","IBCEPTC",45,0)
 G:IBQUIT=3 ENQ
"RTN","IBCEPTC",46,0)
 G:IBQUIT=2!'$O(^TMP($J,IBHOW,0)) Q1
"RTN","IBCEPTC",47,0)
 S Z=0
"RTN","IBCEPTC",48,0)
 I IBHOW="C" F  S Z=$O(^TMP($J,"C",Z)) Q:'Z  S ^TMP("IB_PREV_CLAIM_SELECT",$J,Z,0)=^TMP($J,"C",Z)
"RTN","IBCEPTC",49,0)
 I IBHOW="B" S (Z,IBCT)=0 F  S Z=$O(^TMP($J,"B",Z)) Q:'Z  D
"RTN","IBCEPTC",50,0)
 . S Z0=0 F  S Z0=$O(^IBA(364,"C",Z,Z0)) Q:'Z0  S Z1=+$G(^IBA(364,Z0,0)) I Z1,'$D(^TMP("IB_PREV_CLAIM_SELECT",$J,Z1,0)) S ^(0)=Z0,IBCT=IBCT+1
"RTN","IBCEPTC",51,0)
 S ^TMP("IB_PREV_CLAIM_SELECT",$J)=IBCT
"RTN","IBCEPTC",52,0)
 D RESUB^IBCEPTC3
"RTN","IBCEPTC",53,0)
 G ENQ
"RTN","IBCEPTC",54,0)
 ;
"RTN","IBCEPTC",55,0)
Q1A K ^TMP("IB_PREV_CLAIM_INS",$J)
"RTN","IBCEPTC",56,0)
 S DIR(0)="SA^A:All Payers;S:Selected Payers"
"RTN","IBCEPTC",57,0)
 S DIR("A")="Run for (A)ll Payers or (S)elected Payers?: " S DIR("B")="Selected Payers"
"RTN","IBCEPTC",58,0)
 W !!,"PAYER SELECTION:" D ^DIR K DIR
"RTN","IBCEPTC",59,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",60,0)
 I $D(DTOUT)!$D(DUOUT) G Q1
"RTN","IBCEPTC",61,0)
 ;
"RTN","IBCEPTC",62,0)
 I Y="A" S ^TMP("IB_PREV_CLAIM_INS",$J)="" G Q2
"RTN","IBCEPTC",63,0)
 ;
"RTN","IBCEPTC",64,0)
 ; esg - 11/21/05 - patch 320 question
"RTN","IBCEPTC",65,0)
 W !
"RTN","IBCEPTC",66,0)
 S DIR(0)="Y",DIR("A")="   Include all payers with the same electronic Payer ID",DIR("B")="Yes" D ^DIR K DIR
"RTN","IBCEPTC",67,0)
 I $D(DIROUT) G ENQ
"RTN","IBCEPTC",68,0)
 I $D(DIRUT) G Q1A
"RTN","IBCEPTC",69,0)
 S IBPAYER=Y
"RTN","IBCEPTC",70,0)
 W !
"RTN","IBCEPTC",71,0)
 ;
"RTN","IBCEPTC",72,0)
 S ^TMP("IB_PREV_CLAIM_INS",$J)=1
"RTN","IBCEPTC",73,0)
 S IBQUIT=0
"RTN","IBCEPTC",74,0)
 F  D  Q:IBQUIT
"RTN","IBCEPTC",75,0)
 . S DIC(0)="AEMQ",DIC=36,DIC("A")="   Select Insurance Company: "
"RTN","IBCEPTC",76,0)
 . I $O(^TMP("IB_PREV_CLAIM_INS",$J,1,"")) S DIC("A")="   Select Another Insurance Company: "
"RTN","IBCEPTC",77,0)
 . S DIC("W")="D INSLIST^IBCEMCA(Y)"
"RTN","IBCEPTC",78,0)
 . D ^DIC K DIC                   ; lookup
"RTN","IBCEPTC",79,0)
 . I X="^^" S IBQUIT=2 Q          ; user entered "^^"
"RTN","IBCEPTC",80,0)
 . I +Y'>0 S IBQUIT=1 Q           ; user is done
"RTN","IBCEPTC",81,0)
 . W !
"RTN","IBCEPTC",82,0)
 . S ^TMP("IB_PREV_CLAIM_INS",$J,1,+Y)=""
"RTN","IBCEPTC",83,0)
 . I 'IBPAYER Q
"RTN","IBCEPTC",84,0)
 . S EDI=$$UP^XLFSTR($G(^DIC(36,+Y,3)))
"RTN","IBCEPTC",85,0)
 . S PROF=$P(EDI,U,2),INST=$P(EDI,U,4)
"RTN","IBCEPTC",86,0)
 . I PROF'="",PROF'["PRNT" S ^TMP("IB_PREV_CLAIM_INS",$J,2,PROF,+Y)=""
"RTN","IBCEPTC",87,0)
 . I INST'="",INST'["PRNT" S ^TMP("IB_PREV_CLAIM_INS",$J,2,INST,+Y)=""
"RTN","IBCEPTC",88,0)
 . Q
"RTN","IBCEPTC",89,0)
 ;
"RTN","IBCEPTC",90,0)
 I IBQUIT=2 G ENQ
"RTN","IBCEPTC",91,0)
 ;
"RTN","IBCEPTC",92,0)
 I '$O(^TMP("IB_PREV_CLAIM_INS",$J,1,0)) D  G Q1A
"RTN","IBCEPTC",93,0)
 . W *7,!!?3,"No payers have been selected.  Please try again."
"RTN","IBCEPTC",94,0)
 . Q
"RTN","IBCEPTC",95,0)
 ;
"RTN","IBCEPTC",96,0)
Q2 S DIR(0)="SA^C:CMS-1500;U:UB-04;B:Both",DIR("B")="Both"
"RTN","IBCEPTC",97,0)
 S DIR("A")="Run for (U)B-04, (C)MS-1500 or (B)oth: "
"RTN","IBCEPTC",98,0)
 W !!,"BILL FORM TYPE SELECTION:" D ^DIR K DIR
"RTN","IBCEPTC",99,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",100,0)
 I $D(DTOUT)!$D(DUOUT) G Q1A
"RTN","IBCEPTC",101,0)
 S IBFORM=Y
"RTN","IBCEPTC",102,0)
 ;
"RTN","IBCEPTC",103,0)
Q3 S DIR(0)="DA^0:9999999:EPX",DIR("A")="Start with Date Last Transmitted: "
"RTN","IBCEPTC",104,0)
 S DIR("?",1)="This is the earliest date on which a batch that you want to include on this",DIR("?",2)=" report was last transmitted. You may choose a maximum date range of 90 days.",DIR("?")=" "
"RTN","IBCEPTC",105,0)
 W !!,"LAST BATCH TRANSMIT DATE RANGE SELECTION:" D ^DIR K DIR
"RTN","IBCEPTC",106,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",107,0)
 I $D(DTOUT)!$D(DUOUT) G Q2
"RTN","IBCEPTC",108,0)
 S IBDT1=Y
"RTN","IBCEPTC",109,0)
 S IBDT2=$$FMADD^XLFDT(IBDT1,90) I IBDT2>DT S IBDT2=DT
"RTN","IBCEPTC",110,0)
 S DIR("?",1)="This is the latest date on which a batch that you want to include on this",DIR("?",2)=" report was last transmitted. You may choose a maximum date range of 90 days.",DIR("?")=" "
"RTN","IBCEPTC",111,0)
 S DIR("B")=$$FMTE^XLFDT(IBDT2,2),DIR(0)="DA^"_IBDT1_":"_IBDT2_":EPX"
"RTN","IBCEPTC",112,0)
 S DIR("A")="Go to Date Last Transmitted:("_$$FMTE^XLFDT(IBDT1,2)_"-"_$$FMTE^XLFDT(IBDT2,2)_"): " D ^DIR K DIR
"RTN","IBCEPTC",113,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",114,0)
 I $D(DTOUT)!$D(DUOUT) G Q3
"RTN","IBCEPTC",115,0)
 S IBDT2=Y
"RTN","IBCEPTC",116,0)
 ;
"RTN","IBCEPTC",117,0)
Q4 ; Additional selection criteria
"RTN","IBCEPTC",118,0)
 S DIR(0)="SAO^1:MRA Secondary Only;2:Primary Claims Only;3:Secondary Claims Only;4:Claims Previously Printed at Clearinghouse"
"RTN","IBCEPTC",119,0)
 S DIR("A",1)="ADDITIONAL SELECTION CRITERIA:",DIR("A",2)=" ",DIR("A",3)="1 - MRA Secondary Only",DIR("A",4)="2 - Primary Claims Only",DIR("A",5)="3 - Secondary Claims Only"
"RTN","IBCEPTC",120,0)
 S DIR("A",6)="4 - Claims Sent to Print at Clearinghouse Only",DIR("A",7)=" ",DIR("A")="Select Additional Limiting Criteria (optional): "
"RTN","IBCEPTC",121,0)
 S DIR("?")="Select one of the listed criteria to further limit the claims to include"
"RTN","IBCEPTC",122,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",123,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",124,0)
 I $D(DTOUT)!$D(DUOUT) G Q3
"RTN","IBCEPTC",125,0)
 S IBCRIT=Y
"RTN","IBCEPTC",126,0)
 ;
"RTN","IBCEPTC",127,0)
Q41 ; Ask user if they want to include cancelled claims
"RTN","IBCEPTC",128,0)
 S DIR(0)="Y",DIR("B")="No",DIR("A")="Would you like to include cancelled claims"
"RTN","IBCEPTC",129,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",130,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",131,0)
 I $D(DIRUT) G Q4
"RTN","IBCEPTC",132,0)
 S IBPTCCAN=Y
"RTN","IBCEPTC",133,0)
 ;
"RTN","IBCEPTC",134,0)
Q42 ; Include claims that are forced to print at clearinghouse?
"RTN","IBCEPTC",135,0)
 S DIR(0)="Y",DIR("B")="No",DIR("A")="Would you like to include claims Forced to Print at the Clearinghouse"
"RTN","IBCEPTC",136,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",137,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",138,0)
 I $D(DIRUT) G Q41
"RTN","IBCEPTC",139,0)
 S IBRCBFPC=Y
"RTN","IBCEPTC",140,0)
 ;
"RTN","IBCEPTC",141,0)
Q5 S DIR("L",1)="Select one of the following: ",DIR("L",2)=" ",DIR("L",3)=$J("",10)_"1         Batch By Last Transmitted Date (Claims within a Batch)",DIR("L",4)=$J("",10)_"2         Current Payer (Insurance Company)"
"RTN","IBCEPTC",142,0)
 S DIR("L",5)=" "
"RTN","IBCEPTC",143,0)
 S DIR(0)="SA^1:Batch By Last Transmitted Date (Claims within a Batch);2:Current Payer (Insurance Company)",DIR("B")="Current Payer"
"RTN","IBCEPTC",144,0)
 S DIR("A")="Sort By: "
"RTN","IBCEPTC",145,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",146,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",147,0)
 I $D(DTOUT)!$D(DUOUT) G Q42
"RTN","IBCEPTC",148,0)
 S IBSORT=Y
"RTN","IBCEPTC",149,0)
 ;
"RTN","IBCEPTC",150,0)
Q6 S DIR(0)="SA^R:Report;S:Screen List"
"RTN","IBCEPTC",151,0)
 S DIR("A")="Do you want a (R)eport or a (S)creen List format?: "
"RTN","IBCEPTC",152,0)
 S DIR("B")="Screen List"
"RTN","IBCEPTC",153,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",154,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",155,0)
 I $D(DTOUT)!$D(DUOUT) G Q5
"RTN","IBCEPTC",156,0)
 S IBREP=Y
"RTN","IBCEPTC",157,0)
 ;
"RTN","IBCEPTC",158,0)
 I IBREP="S" D LIST^IBCEPTC0 G ENQ
"RTN","IBCEPTC",159,0)
 ;
"RTN","IBCEPTC",160,0)
Q7 ; Select device
"RTN","IBCEPTC",161,0)
 F  S IBACT=0 D DEVSEL(.IBACT) Q:IBACT
"RTN","IBCEPTC",162,0)
 I IBACT=99 G ENQ
"RTN","IBCEPTC",163,0)
 U IO
"RTN","IBCEPTC",164,0)
 D LIST^IBCEPTC0
"RTN","IBCEPTC",165,0)
 ;
"RTN","IBCEPTC",166,0)
ENQ K ^TMP("IB_PREV_CLAIM_INS",$J),^TMP("IB_PREV_CLAIM_SELECT",$J)
"RTN","IBCEPTC",167,0)
 Q
"RTN","IBCEPTC",168,0)
 ;
"RTN","IBCEPTC",169,0)
DEVSEL(IBACT) ;
"RTN","IBCEPTC",170,0)
 N DIR,POP,X,Y,ZTRTN,ZTSAVE
"RTN","IBCEPTC",171,0)
 W !!,"You will need a 132 column printer for this report!"
"RTN","IBCEPTC",172,0)
 S %ZIS="QM" D ^%ZIS I POP S IBACT=99 G DEVSELQ
"RTN","IBCEPTC",173,0)
 I $G(IOM),IOM<132 S IBOK=1 D  I 'IBOK S IBACT=0 G DEVSELQ
"RTN","IBCEPTC",174,0)
 . S DIR(0)="YA",DIR("A",1)="This report requires output to a 132 column device.",DIR("A",2)="The device you have chosen is only set for "_IOM_".",DIR("A")="Are you sure you want to continue?: ",DIR("B")="No"
"RTN","IBCEPTC",175,0)
 . W ! D ^DIR K DIR
"RTN","IBCEPTC",176,0)
 . I Y'=1 S IBOK=0 W !
"RTN","IBCEPTC",177,0)
 I $D(IO("Q")) D  S IBACT=99 G DEVSELQ
"RTN","IBCEPTC",178,0)
 . K IO("Q")
"RTN","IBCEPTC",179,0)
 . S ZTRTN="LIST^IBCEPTC0",ZTSAVE("IBCRIT(")="",ZTSAVE("IB*")="",ZTSAVE("^TMP(""IB_PREV_CLAIM_INS"",$J)")="",ZTSAVE("^TMP(""IB_PREV_CLAIM_INS"",$J,")="",ZTDESC="IB - Previously Transmitted Claims Report"
"RTN","IBCEPTC",180,0)
 . D ^%ZTLOAD K ZTSK D HOME^%ZIS
"RTN","IBCEPTC",181,0)
 S IBACT=1
"RTN","IBCEPTC",182,0)
DEVSELQ Q
"RTN","IBCEPTC",183,0)
 ;
"RTN","IBCEPTC",184,0)
SELDSP(IBHOW) ; Display list of selected claims/batches
"RTN","IBCEPTC",185,0)
 ; IBHOW = "C" for claims   "B" for batches
"RTN","IBCEPTC",186,0)
 N Z,DIR,CT,QUIT
"RTN","IBCEPTC",187,0)
 I '$O(^TMP($J,IBHOW,0)) Q
"RTN","IBCEPTC",188,0)
 S (CT,QUIT)=0
"RTN","IBCEPTC",189,0)
 W !!,$S(IBHOW="C":"Claims",1:"Batches")," Already Selected:"
"RTN","IBCEPTC",190,0)
 S Z=0 F  S Z=$O(^TMP($J,IBHOW,Z)) Q:'Z!QUIT  S Z0=$G(^(Z)) D  Q:QUIT
"RTN","IBCEPTC",191,0)
 . I IBHOW="C" W !,?3,$P($G(^DGCR(399,Z,0)),U) Q
"RTN","IBCEPTC",192,0)
 . W !,?3,$P($G(^IBA(364.1,Z,0)),U),"  ",$P(^(0),U,3)," Claims"
"RTN","IBCEPTC",193,0)
 . S CT=CT+1
"RTN","IBCEPTC",194,0)
 . I '(CT#10),$O(^TMP($J,IBHOW,Z)) S DIR("A")="Press return for more or '^' to exit ",DIR(0)="EA" W ! D ^DIR K DIR I $D(DTOUT)!$D(DUOUT) S QUIT=1
"RTN","IBCEPTC",195,0)
 W !
"RTN","IBCEPTC",196,0)
 Q
"RTN","IBCEPTC",197,0)
 ;
"RTN","IBCEPTC2")
0^68^B48277704^B47676987
"RTN","IBCEPTC2",1,0)
IBCEPTC2 ;ALB/TMK - EDI PREVIOUSLY TRANSMITTED CLAIMS LIST MGR ;01/20/05
"RTN","IBCEPTC2",2,0)
 ;;2.0;INTEGRATED BILLING;**296,320,348,349**;21-MAR-94;Build 46
"RTN","IBCEPTC2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEPTC2",4,0)
 ; IA 3337 for file 430.3
"RTN","IBCEPTC2",5,0)
 ;
"RTN","IBCEPTC2",6,0)
HDR ;
"RTN","IBCEPTC2",7,0)
 K VALMHDR
"RTN","IBCEPTC2",8,0)
 S VALMHDR(1)="** A claim may appear multiple times if transmitted more than once. **"
"RTN","IBCEPTC2",9,0)
 ;
"RTN","IBCEPTC2",10,0)
 I $G(IBSORT)=1 D
"RTN","IBCEPTC2",11,0)
 . S VALMHDR(2)="Claims Selected: "_+$G(^TMP("IB_PREV_CLAIM_SELECT",$J))_" (marked with *)"
"RTN","IBCEPTC2",12,0)
 . Q
"RTN","IBCEPTC2",13,0)
 ;
"RTN","IBCEPTC2",14,0)
 I $G(IBSORT)=2 D
"RTN","IBCEPTC2",15,0)
 . S VALMHDR(2)="** T = Test Claim   ** R = Batch Rejected"
"RTN","IBCEPTC2",16,0)
 . S VALMHDR(3)="Claims Selected: "_+$G(^TMP("IB_PREV_CLAIM_SELECT",$J))_" (marked with *)"
"RTN","IBCEPTC2",17,0)
 . Q
"RTN","IBCEPTC2",18,0)
 ;
"RTN","IBCEPTC2",19,0)
 Q
"RTN","IBCEPTC2",20,0)
 ;
"RTN","IBCEPTC2",21,0)
INIT ;
"RTN","IBCEPTC2",22,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBCEPTC2",23,0)
 D BLD
"RTN","IBCEPTC2",24,0)
 Q
"RTN","IBCEPTC2",25,0)
 ;
"RTN","IBCEPTC2",26,0)
BLD ; Build display lines
"RTN","IBCEPTC2",27,0)
 N IBDA,IBS1,IBS2,IBIFN,IB0,IBX,IBCNT,IBLEV1,IBBDA
"RTN","IBCEPTC2",28,0)
 K ^TMP("IB_PREV_CLAIM_LIST",$J),^TMP("IB_PREV_CLAIM_SELECT",$J),^TMP("IB_PREV_CLAIM_BATCH",$J)
"RTN","IBCEPTC2",29,0)
 S IBCNT=0
"RTN","IBCEPTC2",30,0)
 I $O(^TMP("IB_PREV_CLAIM",$J,""))="" D  G BLDQ
"RTN","IBCEPTC2",31,0)
 . S IBX=" ** NO PREVIOUSLY TRANSMITTED CLAIMS EXIST FOR SEARCH CRITERIA SELECTED **"
"RTN","IBCEPTC2",32,0)
 . D WRT(IBX,"",0,0,"","S","",.IBCNT,0)
"RTN","IBCEPTC2",33,0)
 ;
"RTN","IBCEPTC2",34,0)
 S IBS1="" F  S IBS1=$O(^TMP("IB_PREV_CLAIM",$J,IBS1)) Q:IBS1=""  D
"RTN","IBCEPTC2",35,0)
 . ; First level sort
"RTN","IBCEPTC2",36,0)
 . ; for sort by batch, display batch ID and transmit date
"RTN","IBCEPTC2",37,0)
 . I IBSORT=1 D
"RTN","IBCEPTC2",38,0)
 .. S IBLEV1="  Batch: "_$P(IBS1,U,2)_"  Last Transmitted: "_$G(^TMP("IB_PREV_CLAIM",$J,IBS1))
"RTN","IBCEPTC2",39,0)
 .. S IBBDA=+$O(^IBA(364.1,"B",$P(IBS1,U,2),0))
"RTN","IBCEPTC2",40,0)
 .. I $P(IBS1,U,3) S IBLEV1=IBLEV1_" ** Test"
"RTN","IBCEPTC2",41,0)
 .. I $P(IBS1,U,4) S IBLEV1=IBLEV1_" ** Rejected"
"RTN","IBCEPTC2",42,0)
 .. Q
"RTN","IBCEPTC2",43,0)
 . ;
"RTN","IBCEPTC2",44,0)
 . ; for sort by payer, display ins co name and payer address
"RTN","IBCEPTC2",45,0)
 . I IBSORT=2 D
"RTN","IBCEPTC2",46,0)
 .. S IBLEV1="  "_$P(IBS1,U)_"  "_$$CURRINS(+$G(^TMP("IB_PREV_CLAIM",$J,IBS1)),0)
"RTN","IBCEPTC2",47,0)
 .. Q
"RTN","IBCEPTC2",48,0)
 . ;
"RTN","IBCEPTC2",49,0)
 . ; output sort header line
"RTN","IBCEPTC2",50,0)
 . D WRT(IBLEV1,"",0,0,IBSORT,"S","",IBCNT,0) ; Add header line
"RTN","IBCEPTC2",51,0)
 . ;
"RTN","IBCEPTC2",52,0)
 . I IBSORT=1,IBBDA S ^TMP("IB_PREV_CLAIM_BATCH",$J,IBBDA)=VALMCNT
"RTN","IBCEPTC2",53,0)
 . S IBS2="" F  S IBS2=$O(^TMP("IB_PREV_CLAIM",$J,IBS1,IBS2)) Q:IBS2=""  S IBDA=0 F  S IBDA=$O(^TMP("IB_PREV_CLAIM",$J,IBS1,IBS2,IBDA)) Q:'IBDA  D
"RTN","IBCEPTC2",54,0)
 .. N IBX,IBTEST
"RTN","IBCEPTC2",55,0)
 .. S IBIFN=+$G(^IBA(364,+IBDA,0)),IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEPTC2",56,0)
 .. S IBX=$P(^TMP("IB_PREV_CLAIM",$J,IBS1,IBS2,IBDA),U,1)
"RTN","IBCEPTC2",57,0)
 .. I IBX=1 S IBTEST=0    ; live 364 transmission
"RTN","IBCEPTC2",58,0)
 .. I IBX=2 S IBTEST=1    ; test 364 transmission
"RTN","IBCEPTC2",59,0)
 .. I IBX=3 S IBTEST=1    ; test 361.4 transmission
"RTN","IBCEPTC2",60,0)
 .. D WRT(IBS1,IBS2,IBDA,IBIFN,IBSORT,"S","",.IBCNT,0,IBTEST)
"RTN","IBCEPTC2",61,0)
 .. I IBSORT=1,IBBDA S ^TMP("IB_PREV_CLAIM_BATCH",$J,IBBDA,VALMCNT)=IBIFN_U_IBCNT
"RTN","IBCEPTC2",62,0)
 .. Q
"RTN","IBCEPTC2",63,0)
 . Q
"RTN","IBCEPTC2",64,0)
 ;
"RTN","IBCEPTC2",65,0)
BLDQ Q
"RTN","IBCEPTC2",66,0)
 ;
"RTN","IBCEPTC2",67,0)
EXIT ; Clean up code
"RTN","IBCEPTC2",68,0)
 ;
"RTN","IBCEPTC2",69,0)
 K ^TMP("IB_PREV_CLAIM_LIST",$J)
"RTN","IBCEPTC2",70,0)
 K ^TMP("IB_PREV_CLAIM_SELECT",$J)
"RTN","IBCEPTC2",71,0)
 K ^TMP("IB_PREV_CLAIM_LIST_DX",$J)
"RTN","IBCEPTC2",72,0)
 K ^TMP("IB_PREV_CLAIM_BATCH",$J)
"RTN","IBCEPTC2",73,0)
 D CLEAR^VALM1
"RTN","IBCEPTC2",74,0)
 Q
"RTN","IBCEPTC2",75,0)
 ;
"RTN","IBCEPTC2",76,0)
WRT(IBS1,IBS2,IBDA,IBIFN,IBSORT,IBREP,IBHDR,IBPAGE,IBSTOP,IBTEST) ; Wrt/output
"RTN","IBCEPTC2",77,0)
 ;
"RTN","IBCEPTC2",78,0)
 N IBX,IB0,Z,IBCNT,ARSTAT
"RTN","IBCEPTC2",79,0)
 S IBCNT=IBPAGE
"RTN","IBCEPTC2",80,0)
 ;
"RTN","IBCEPTC2",81,0)
 I 'IBIFN D  G WRTQ
"RTN","IBCEPTC2",82,0)
 . ;
"RTN","IBCEPTC2",83,0)
 . ; for report output
"RTN","IBCEPTC2",84,0)
 . I IBREP="R" D  Q
"RTN","IBCEPTC2",85,0)
 .. S Z="",$P(Z,"=",133)=""
"RTN","IBCEPTC2",86,0)
 .. D SET(Z,1,IBDA,IBREP,IBHDR,1,0,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",87,0)
 .. D SET(IBS1,2,IBDA,IBREP,IBHDR,1,0,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",88,0)
 .. Q
"RTN","IBCEPTC2",89,0)
 . ;
"RTN","IBCEPTC2",90,0)
 . ; for ListMan screen output
"RTN","IBCEPTC2",91,0)
 . D SET(IBS1,0,IBDA,IBREP,IBHDR,IBCNT+1,.VALMCNT,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",92,0)
 . Q
"RTN","IBCEPTC2",93,0)
 ;
"RTN","IBCEPTC2",94,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEPTC2",95,0)
 S IBX=$$FO^IBCNEUT1($P(IB0,U,1),8)        ; claim#
"RTN","IBCEPTC2",96,0)
 S IBX=IBX_$S(IBSORT=2&$G(IBTEST):"T",1:" ")_" "
"RTN","IBCEPTC2",97,0)
 S IBX=IBX_$S($P(IB0,U,19)=2:"1500",1:"UB04")_" "
"RTN","IBCEPTC2",98,0)
 S Z=$$INPAT^IBCEF(IBIFN) S IBX=IBX_$S(Z:"INPT ",1:"OUTPT")
"RTN","IBCEPTC2",99,0)
 S IBX=IBX_$J($P(IB0,U,21),3)_"  "
"RTN","IBCEPTC2",100,0)
 S Z=$$EXTERNAL^DILFD(399,.13,"",$P(IB0,U,13))
"RTN","IBCEPTC2",101,0)
 S IBX=IBX_$$FO^IBCNEUT1(Z,11)_"  "             ; claim status
"RTN","IBCEPTC2",102,0)
 S ARSTAT=+$P($$BILL^RCJIBFN2(IBIFN),U,2)       ; ien
"RTN","IBCEPTC2",103,0)
 S ARSTAT=$P($G(^PRCA(430.3,ARSTAT,0)),U,2)     ; abbreviation
"RTN","IBCEPTC2",104,0)
 S IBX=IBX_$$FO^IBCNEUT1(ARSTAT,4)              ; a/r status display
"RTN","IBCEPTC2",105,0)
 ;
"RTN","IBCEPTC2",106,0)
 I IBSORT=1 D                    ; sort by batch
"RTN","IBCEPTC2",107,0)
 . N Z,IBZ,IBXDATA
"RTN","IBCEPTC2",108,0)
 . ; Print current payer, payer address, other payers, pat name
"RTN","IBCEPTC2",109,0)
 . D F^IBCEF("N-CURR INSURANCE COMPANY NAME","IBZ",,IBIFN)
"RTN","IBCEPTC2",110,0)
 . S IBX=IBX_$$FO^IBCNEUT1(IBZ,25)_" "                     ; ins co name
"RTN","IBCEPTC2",111,0)
 . S IBX=IBX_$$FO^IBCNEUT1($$CURRINS(IBIFN,1),29)_" "      ; address
"RTN","IBCEPTC2",112,0)
 . K IBZ D F^IBCEF("N-OTH INSURANCE CO. NAME","IBZ",,IBIFN)
"RTN","IBCEPTC2",113,0)
 . S IBX=IBX_$$FO^IBCNEUT1($P($G(IBZ(1)),U,1),15)_" "      ; other payer
"RTN","IBCEPTC2",114,0)
 . S Z=$P($G(^DPT(+$P(IB0,U,2),0)),U,1)
"RTN","IBCEPTC2",115,0)
 . S IBX=IBX_$E(Z,1,18)                       ; patient name
"RTN","IBCEPTC2",116,0)
 . ;
"RTN","IBCEPTC2",117,0)
 . ; set line into list
"RTN","IBCEPTC2",118,0)
 . S IBCNT=IBCNT+1
"RTN","IBCEPTC2",119,0)
 . D SET(.IBX,1,IBDA,IBREP,IBHDR,IBCNT,.VALMCNT,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",120,0)
 . S IBX=""
"RTN","IBCEPTC2",121,0)
 . ;
"RTN","IBCEPTC2",122,0)
 . I $G(IBZ(2))'="" D    ; other payer #2 if it exists
"RTN","IBCEPTC2",123,0)
 .. S IBX=$J("",98)_$E($P(IBZ(2),U,1),1,15)
"RTN","IBCEPTC2",124,0)
 .. D SET(.IBX,1,IBDA,IBREP,IBHDR,IBCNT,.VALMCNT,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",125,0)
 .. Q
"RTN","IBCEPTC2",126,0)
 . Q
"RTN","IBCEPTC2",127,0)
 ;
"RTN","IBCEPTC2",128,0)
 I IBSORT=2 D                    ; sort by payer
"RTN","IBCEPTC2",129,0)
 . N Z,IBZ
"RTN","IBCEPTC2",130,0)
 . S IBX=IBX_"  "
"RTN","IBCEPTC2",131,0)
 . ; Print other payers, patient name, date last trans, batch #, reject flag
"RTN","IBCEPTC2",132,0)
 . D F^IBCEF("N-OTH INSURANCE CO. NAME","IBZ",,IBIFN)
"RTN","IBCEPTC2",133,0)
 . S IBX=IBX_$$FO^IBCNEUT1($P($G(IBZ(1)),U,1),18)_"  "   ; oth payer#1
"RTN","IBCEPTC2",134,0)
 . S Z=$P($G(^DPT(+$P(IB0,U,2),0)),U,1)
"RTN","IBCEPTC2",135,0)
 . S IBX=IBX_$$FO^IBCNEUT1(Z,18)_"    "                  ; patient name
"RTN","IBCEPTC2",136,0)
 . ;
"RTN","IBCEPTC2",137,0)
 . S Z=+$P($G(^IBA(364,+IBDA,0)),U,2) ; Batch ptr
"RTN","IBCEPTC2",138,0)
 . S IBX=IBX_$$FO^IBCNEUT1($$FMTE^XLFDT($P($G(^IBA(364.1,+Z,1)),U,3)\1,"1"),17)     ; date last transmitted
"RTN","IBCEPTC2",139,0)
 . S IBX=IBX_$$FO^IBCNEUT1($P($G(^IBA(364.1,Z,0)),U,1),10)   ; batch#
"RTN","IBCEPTC2",140,0)
 . S IBX=IBX_$S($P($G(^IBA(364.1,Z,0)),U,5):" R",1:"")  ; batch rejected flag
"RTN","IBCEPTC2",141,0)
 . ;
"RTN","IBCEPTC2",142,0)
 . ; set line into list
"RTN","IBCEPTC2",143,0)
 . S IBCNT=IBCNT+1
"RTN","IBCEPTC2",144,0)
 . D SET(.IBX,1,IBDA,IBREP,IBHDR,IBCNT,.VALMCNT,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",145,0)
 . S IBX=""
"RTN","IBCEPTC2",146,0)
 . ;
"RTN","IBCEPTC2",147,0)
 . I $G(IBZ(2))'="" D       ; other payer#2 if it exists
"RTN","IBCEPTC2",148,0)
 .. S IBX=$J("",44)_$E($P(IBZ(2),U),1,18)
"RTN","IBCEPTC2",149,0)
 .. D SET(.IBX,1,IBDA,IBREP,IBHDR,IBCNT,.VALMCNT,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",150,0)
 .. Q
"RTN","IBCEPTC2",151,0)
 . Q
"RTN","IBCEPTC2",152,0)
 ;
"RTN","IBCEPTC2",153,0)
WRTQ I IBREP="S" S IBPAGE=IBCNT
"RTN","IBCEPTC2",154,0)
 Q
"RTN","IBCEPTC2",155,0)
 ;
"RTN","IBCEPTC2",156,0)
SET(IBX,IBLINE,IBDA,IBREP,IBHDR,IBCNT,VALMCNT,IBPAGE,IBSTOP) ;
"RTN","IBCEPTC2",157,0)
 N Q,Z,IBZ
"RTN","IBCEPTC2",158,0)
 S IBZ=IBX,IBX=""
"RTN","IBCEPTC2",159,0)
 I IBREP="R" D  Q
"RTN","IBCEPTC2",160,0)
 . D:($Y+5)>IOSL!'IBPAGE HDR^IBCEPTC1(IBHDR,IBSORT,.IBPAGE,.IBSTOP) D
"RTN","IBCEPTC2",161,0)
 . I IBLINE F Z=1:1:IBLINE W !
"RTN","IBCEPTC2",162,0)
 . W:'IBSTOP IBZ
"RTN","IBCEPTC2",163,0)
 . Q
"RTN","IBCEPTC2",164,0)
 ;
"RTN","IBCEPTC2",165,0)
 ; only display the counter if we have a line with the claim#
"RTN","IBCEPTC2",166,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCEPTC2",167,0)
 I IBDA,$TR($E(IBZ,1,8)," ")'="" S IBZ=$$FO^IBCNEUT1($J(IBCNT,3),6)_IBZ
"RTN","IBCEPTC2",168,0)
 I IBDA,$TR($E(IBZ,1,8)," ")="" S IBZ="      "_IBZ
"RTN","IBCEPTC2",169,0)
 ;
"RTN","IBCEPTC2",170,0)
 S ^TMP("IB_PREV_CLAIM_LIST",$J,VALMCNT,0)=IBZ
"RTN","IBCEPTC2",171,0)
 S ^TMP("IB_PREV_CLAIM_LIST",$J,"IDX",VALMCNT,IBCNT)=""
"RTN","IBCEPTC2",172,0)
 I IBDA,$TR($E(IBZ,1,8)," ")'="" S ^TMP("IB_PREV_CLAIM_LIST_DX",$J,IBCNT)=VALMCNT_U_IBDA
"RTN","IBCEPTC2",173,0)
 Q
"RTN","IBCEPTC2",174,0)
 ;
"RTN","IBCEPTC2",175,0)
CURRINS(IBIFN,TRUNC) ; Returns Current insurance address for given claim
"RTN","IBCEPTC2",176,0)
 ; TRUNC = truncate flag; 1 to truncate the address and city
"RTN","IBCEPTC2",177,0)
 N IBX,IBZ,L1,CITY,ST
"RTN","IBCEPTC2",178,0)
 D F^IBCEF("N-CURR INS CO FULL ADDRESS","IBZ",,IBIFN)
"RTN","IBCEPTC2",179,0)
 S L1=$G(IBZ(1)) I +$G(TRUNC) S L1=$E(L1,1,15)
"RTN","IBCEPTC2",180,0)
 S CITY=$G(IBZ(4)) I +$G(TRUNC) S CITY=$E(CITY,1,10)
"RTN","IBCEPTC2",181,0)
 S ST=$G(IBZ(5))
"RTN","IBCEPTC2",182,0)
 I ST S ST=$P($G(^DIC(5,ST,0)),U,2)
"RTN","IBCEPTC2",183,0)
 S IBX=L1_" "_CITY
"RTN","IBCEPTC2",184,0)
 I CITY'="",ST'="" S IBX=IBX_","_ST
"RTN","IBCEPTC2",185,0)
 E  S IBX=IBX_" "_ST
"RTN","IBCEPTC2",186,0)
 Q IBX
"RTN","IBCEPTC2",187,0)
 ;
"RTN","IBCEPTR")
0^69^B102679616^B101915596
"RTN","IBCEPTR",1,0)
IBCEPTR ;ALB/ESG - Test Claim Messages Report ;28-JAN-2005
"RTN","IBCEPTR",2,0)
 ;;2.0;INTEGRATED BILLING;**296,320,348,349**;21-MAR-94;Build 46
"RTN","IBCEPTR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEPTR",4,0)
 ;
"RTN","IBCEPTR",5,0)
 ; eClaims Plus
"RTN","IBCEPTR",6,0)
 ; Report on Test Claim Transmissions and Status Messages
"RTN","IBCEPTR",7,0)
 ;
"RTN","IBCEPTR",8,0)
EN ; Entry Point
"RTN","IBCEPTR",9,0)
 NEW STOP,IBRMETH,IBRDATA
"RTN","IBCEPTR",10,0)
 D SELECT I STOP G EXIT
"RTN","IBCEPTR",11,0)
 D DEVICE
"RTN","IBCEPTR",12,0)
EXIT ; Exit Point
"RTN","IBCEPTR",13,0)
 Q
"RTN","IBCEPTR",14,0)
 ;
"RTN","IBCEPTR",15,0)
SELECT ; Determine which claim#'s or batch#'s to report on
"RTN","IBCEPTR",16,0)
 NEW DIC,DIR,X,Y,DIRUT,DTOUT,DUOUT,DIROUT,D
"RTN","IBCEPTR",17,0)
 S STOP=0
"RTN","IBCEPTR",18,0)
 W @IOF
"RTN","IBCEPTR",19,0)
 W !!?23,"Test Claim EDI Transmission Report"
"RTN","IBCEPTR",20,0)
 W !!?7,"This report will display EDI transmission data and returned status"
"RTN","IBCEPTR",21,0)
 W !?7,"message data for selected test claims.  You may select test claims"
"RTN","IBCEPTR",22,0)
 W !?7,"by claim number or by batch number or you may search for claims that"
"RTN","IBCEPTR",23,0)
 W !?7,"were transmitted within a date range.",!
"RTN","IBCEPTR",24,0)
 S DIR(0)="SO^C:Claim;B:Batch;D:Date Range (Date Transmitted)"
"RTN","IBCEPTR",25,0)
 S DIR("A")="Selection Method",DIR("B")="D"
"RTN","IBCEPTR",26,0)
 D ^DIR K DIR
"RTN","IBCEPTR",27,0)
 I $D(DIRUT) S STOP=1 G SELECTX
"RTN","IBCEPTR",28,0)
 S IBRMETH=Y
"RTN","IBCEPTR",29,0)
 I IBRMETH'="C",IBRMETH'="B",IBRMETH'="D" S STOP=1 G SELECTX
"RTN","IBCEPTR",30,0)
 ;
"RTN","IBCEPTR",31,0)
 K IBRDATA
"RTN","IBCEPTR",32,0)
 I IBRMETH="C" D
"RTN","IBCEPTR",33,0)
 . F  D  Q:Y'>0
"RTN","IBCEPTR",34,0)
 .. W !
"RTN","IBCEPTR",35,0)
 .. S DIC("A")="Test Claim: "
"RTN","IBCEPTR",36,0)
 .. I $O(IBRDATA("")) S DIC("A")="Another Test Claim: "
"RTN","IBCEPTR",37,0)
 .. S DIC("W")="D CLMLST^IBCEPTR(Y)"
"RTN","IBCEPTR",38,0)
 .. S DIC=361.4,DIC(0)="AEMQ",D="B" D MIX^DIC1
"RTN","IBCEPTR",39,0)
 .. Q:Y'>0
"RTN","IBCEPTR",40,0)
 .. S IBRDATA(+Y)=""
"RTN","IBCEPTR",41,0)
 .. Q
"RTN","IBCEPTR",42,0)
 . Q
"RTN","IBCEPTR",43,0)
 ;
"RTN","IBCEPTR",44,0)
 I IBRMETH="B" D
"RTN","IBCEPTR",45,0)
 . F  D  Q:Y'>0
"RTN","IBCEPTR",46,0)
 .. W !
"RTN","IBCEPTR",47,0)
 .. S DIC("A")="Test Batch: "
"RTN","IBCEPTR",48,0)
 .. I $O(IBRDATA("")) S DIC("A")="Another Test Batch: "
"RTN","IBCEPTR",49,0)
 .. S DIC("S")="I $P(^(0),U,14),$O(^IBM(361.4,""C"",+Y,0))"
"RTN","IBCEPTR",50,0)
 .. S DIC=364.1,DIC(0)="AEMQ",D="B^C" D MIX^DIC1
"RTN","IBCEPTR",51,0)
 .. Q:Y'>0
"RTN","IBCEPTR",52,0)
 .. S IBRDATA(+Y)=""
"RTN","IBCEPTR",53,0)
 .. Q
"RTN","IBCEPTR",54,0)
 . Q
"RTN","IBCEPTR",55,0)
 ;
"RTN","IBCEPTR",56,0)
 I IBRMETH="D" D
"RTN","IBCEPTR",57,0)
 . W !
"RTN","IBCEPTR",58,0)
 . S DIR(0)="DAO^:"_DT_":AEX",DIR("A")="  Earliest Date Claims Transmitted: "
"RTN","IBCEPTR",59,0)
 . D ^DIR K DIR
"RTN","IBCEPTR",60,0)
 . I $D(DIRUT)!'Y Q
"RTN","IBCEPTR",61,0)
 . S IBRDATA(1)=Y
"RTN","IBCEPTR",62,0)
 . W !
"RTN","IBCEPTR",63,0)
 . S DIR(0)="DAO^"_Y_":"_DT_":AEX",DIR("A")="    Latest Date Claims Transmitted: ",DIR("B")="Today"
"RTN","IBCEPTR",64,0)
 . D ^DIR K DIR
"RTN","IBCEPTR",65,0)
 . I $D(DIRUT)!'Y Q
"RTN","IBCEPTR",66,0)
 . S IBRDATA(2)=Y
"RTN","IBCEPTR",67,0)
 . Q
"RTN","IBCEPTR",68,0)
 ;
"RTN","IBCEPTR",69,0)
 I '$O(IBRDATA("")) S STOP=1 G SELECTX
"RTN","IBCEPTR",70,0)
 I IBRMETH="D",'$G(IBRDATA(1)) S STOP=1 G SELECTX
"RTN","IBCEPTR",71,0)
 I IBRMETH="D",'$G(IBRDATA(2)) S STOP=1 G SELECTX
"RTN","IBCEPTR",72,0)
 ;
"RTN","IBCEPTR",73,0)
SELECTX ;
"RTN","IBCEPTR",74,0)
 Q
"RTN","IBCEPTR",75,0)
 ;
"RTN","IBCEPTR",76,0)
DEVICE ; standard device selection
"RTN","IBCEPTR",77,0)
 NEW ZTRTN,ZTDESC,ZTSAVE,POP
"RTN","IBCEPTR",78,0)
 W !!!,"This report is 80 characters wide.",!
"RTN","IBCEPTR",79,0)
 S ZTRTN="COMPILE^IBCEPTR"
"RTN","IBCEPTR",80,0)
 S ZTDESC="Test Claim EDI Transmission Report"
"RTN","IBCEPTR",81,0)
 S ZTSAVE("IBRMETH")=""
"RTN","IBCEPTR",82,0)
 S ZTSAVE("IBRDATA")=""
"RTN","IBCEPTR",83,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE,"QM")
"RTN","IBCEPTR",84,0)
DEVX ;
"RTN","IBCEPTR",85,0)
 Q
"RTN","IBCEPTR",86,0)
 ;
"RTN","IBCEPTR",87,0)
COMPILE ; compile the data into a scratch global
"RTN","IBCEPTR",88,0)
 NEW RTN,EXTBCH,IBIFN,BCHIEN,TXDATM
"RTN","IBCEPTR",89,0)
 S RTN="IBCEPTR"
"RTN","IBCEPTR",90,0)
 KILL ^TMP($J,RTN)  ; init scratch global
"RTN","IBCEPTR",91,0)
 ;
"RTN","IBCEPTR",92,0)
 I IBRMETH="C" D    ; claim search
"RTN","IBCEPTR",93,0)
 . S EXTBCH=0
"RTN","IBCEPTR",94,0)
 . S IBIFN=0
"RTN","IBCEPTR",95,0)
 . F  S IBIFN=$O(IBRDATA(IBIFN)) Q:'IBIFN  D STORE(IBIFN)
"RTN","IBCEPTR",96,0)
 . Q
"RTN","IBCEPTR",97,0)
 ;
"RTN","IBCEPTR",98,0)
 I IBRMETH="B" D    ; batch search
"RTN","IBCEPTR",99,0)
 . S BCHIEN=0
"RTN","IBCEPTR",100,0)
 . F  S BCHIEN=$O(IBRDATA(BCHIEN)) Q:'BCHIEN  D
"RTN","IBCEPTR",101,0)
 .. S EXTBCH=$P($G(^IBA(364.1,BCHIEN,0)),U,1)
"RTN","IBCEPTR",102,0)
 .. I EXTBCH="" S EXTBCH="~unknown"
"RTN","IBCEPTR",103,0)
 .. S IBIFN=0
"RTN","IBCEPTR",104,0)
 .. F  S IBIFN=$O(^IBM(361.4,"C",BCHIEN,IBIFN)) Q:'IBIFN  D STORE(IBIFN)
"RTN","IBCEPTR",105,0)
 .. Q
"RTN","IBCEPTR",106,0)
 . Q
"RTN","IBCEPTR",107,0)
 ;
"RTN","IBCEPTR",108,0)
 I IBRMETH="D" D    ; date range search
"RTN","IBCEPTR",109,0)
 . S EXTBCH=0
"RTN","IBCEPTR",110,0)
 . S TXDATM=$O(^IBM(361.4,"ATD",IBRDATA(1)),-1)
"RTN","IBCEPTR",111,0)
 . F  S TXDATM=$O(^IBM(361.4,"ATD",TXDATM)) Q:'TXDATM  Q:(TXDATM\1)>IBRDATA(2)  D
"RTN","IBCEPTR",112,0)
 .. S IBIFN=0
"RTN","IBCEPTR",113,0)
 .. F  S IBIFN=$O(^IBM(361.4,"ATD",TXDATM,IBIFN)) Q:'IBIFN  D STORE(IBIFN)
"RTN","IBCEPTR",114,0)
 .. Q
"RTN","IBCEPTR",115,0)
 . Q
"RTN","IBCEPTR",116,0)
 ;
"RTN","IBCEPTR",117,0)
 D PRINT                           ; print the report
"RTN","IBCEPTR",118,0)
 D ^%ZISC                          ; close the device
"RTN","IBCEPTR",119,0)
 KILL ^TMP($J,RTN)                 ; clean up scratch global
"RTN","IBCEPTR",120,0)
 I $D(ZTQUEUED) S ZTREQ="@"        ; purge the task record
"RTN","IBCEPTR",121,0)
COMPX ;
"RTN","IBCEPTR",122,0)
 Q
"RTN","IBCEPTR",123,0)
 ;
"RTN","IBCEPTR",124,0)
STORE(IBIFN) ; Input = internal bill#; continue compilation
"RTN","IBCEPTR",125,0)
 NEW IB0,CLAIM,IBRTXD0,TXIEN,SMIEN,DATA,TXDTM
"RTN","IBCEPTR",126,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEPTR",127,0)
 S CLAIM=$P(IB0,U,1)  ; external claim#
"RTN","IBCEPTR",128,0)
 I CLAIM="" S CLAIM="~unknown"
"RTN","IBCEPTR",129,0)
 S IBRTXD0=99999999   ; initial value for earliest transmission date
"RTN","IBCEPTR",130,0)
 ;
"RTN","IBCEPTR",131,0)
 I IBRMETH="C" D   ; claim search for transmission data (all)
"RTN","IBCEPTR",132,0)
 . S TXIEN=0
"RTN","IBCEPTR",133,0)
 . F  S TXIEN=$O(^IBM(361.4,IBIFN,1,TXIEN)) Q:'TXIEN  D STORETX(IBIFN,TXIEN)
"RTN","IBCEPTR",134,0)
 . Q
"RTN","IBCEPTR",135,0)
 ;
"RTN","IBCEPTR",136,0)
 I IBRMETH="B" D   ; batch search for transmission data ("C" x-ref)
"RTN","IBCEPTR",137,0)
 . S TXIEN=0
"RTN","IBCEPTR",138,0)
 . F  S TXIEN=$O(^IBM(361.4,"C",BCHIEN,IBIFN,TXIEN)) Q:'TXIEN  D STORETX(IBIFN,TXIEN)
"RTN","IBCEPTR",139,0)
 . Q
"RTN","IBCEPTR",140,0)
 ;
"RTN","IBCEPTR",141,0)
 I IBRMETH="D" D   ; date range search for transmission data ("ATD" xref)
"RTN","IBCEPTR",142,0)
 . S TXIEN=0
"RTN","IBCEPTR",143,0)
 . F  S TXIEN=$O(^IBM(361.4,"ATD",TXDATM,IBIFN,TXIEN)) Q:'TXIEN  D STORETX(IBIFN,TXIEN)
"RTN","IBCEPTR",144,0)
 . Q
"RTN","IBCEPTR",145,0)
 ;
"RTN","IBCEPTR",146,0)
 ; loop thru all returned messages for claim
"RTN","IBCEPTR",147,0)
 S SMIEN=0
"RTN","IBCEPTR",148,0)
 F  S SMIEN=$O(^IBM(361.4,IBIFN,2,SMIEN)) Q:'SMIEN  D
"RTN","IBCEPTR",149,0)
 . S DATA=$G(^IBM(361.4,IBIFN,2,SMIEN,0)) Q:DATA=""   ; received msg data
"RTN","IBCEPTR",150,0)
 . S TXDTM=$P(DATA,U,1) Q:'TXDTM    ; msg rec'd date/time
"RTN","IBCEPTR",151,0)
 . ;
"RTN","IBCEPTR",152,0)
 . ; Batch only: if this status message was received before the
"RTN","IBCEPTR",153,0)
 . ; earliest transmission for this batch, then don't include it
"RTN","IBCEPTR",154,0)
 . I IBRMETH="B",TXDTM'>IBRTXD0 Q
"RTN","IBCEPTR",155,0)
 . ;
"RTN","IBCEPTR",156,0)
 . ; Date range search only:  make sure the date/time the status message
"RTN","IBCEPTR",157,0)
 . ; was received is inside the user specified date range for this report
"RTN","IBCEPTR",158,0)
 . I IBRMETH="D",(TXDTM\1)<IBRDATA(1) Q    ; rec'd too early
"RTN","IBCEPTR",159,0)
 . I IBRMETH="D",(TXDTM\1)>IBRDATA(2) Q    ; rec'd too late
"RTN","IBCEPTR",160,0)
 . ;
"RTN","IBCEPTR",161,0)
 . ; store it
"RTN","IBCEPTR",162,0)
 . M ^TMP($J,RTN,EXTBCH,CLAIM,TXDTM,2,SMIEN)=^IBM(361.4,IBIFN,2,SMIEN)
"RTN","IBCEPTR",163,0)
 . Q
"RTN","IBCEPTR",164,0)
STOREX ;
"RTN","IBCEPTR",165,0)
 Q
"RTN","IBCEPTR",166,0)
 ;
"RTN","IBCEPTR",167,0)
STORETX(IBIFN,TXIEN) ; store transmission info
"RTN","IBCEPTR",168,0)
 NEW DATA,TXDTM
"RTN","IBCEPTR",169,0)
 S DATA=$G(^IBM(361.4,IBIFN,1,TXIEN,0))
"RTN","IBCEPTR",170,0)
 I DATA="" G STTXXX
"RTN","IBCEPTR",171,0)
 S TXDTM=$P(DATA,U,1)   ; transmit date/time
"RTN","IBCEPTR",172,0)
 I 'TXDTM G STTXXX
"RTN","IBCEPTR",173,0)
 I TXDTM<IBRTXD0 S IBRTXD0=TXDTM
"RTN","IBCEPTR",174,0)
 ;
"RTN","IBCEPTR",175,0)
 ; store it
"RTN","IBCEPTR",176,0)
 M ^TMP($J,RTN,EXTBCH,CLAIM,TXDTM,1,TXIEN)=^IBM(361.4,IBIFN,1,TXIEN)
"RTN","IBCEPTR",177,0)
STTXXX ;
"RTN","IBCEPTR",178,0)
 Q
"RTN","IBCEPTR",179,0)
 ;
"RTN","IBCEPTR",180,0)
PRINT ; print the report to the specified device
"RTN","IBCEPTR",181,0)
 NEW MAXCNT,CRT,PAGECNT,STOP,DIR,X,Y,DIRUT,DUOUT,DTOUT,DIROUT
"RTN","IBCEPTR",182,0)
 NEW BATCH,CLAIM,IBIFN,CLMD,TXD,TYPE,IEN
"RTN","IBCEPTR",183,0)
 I IOST["C-" S MAXCNT=IOSL-3,CRT=1
"RTN","IBCEPTR",184,0)
 E  S MAXCNT=IOSL-6,CRT=0
"RTN","IBCEPTR",185,0)
 S PAGECNT=0,STOP=0
"RTN","IBCEPTR",186,0)
 ;
"RTN","IBCEPTR",187,0)
 I '$D(^TMP($J,RTN)) D HEADER W !!!?5,"No Data Found"
"RTN","IBCEPTR",188,0)
 ;
"RTN","IBCEPTR",189,0)
 S BATCH=""
"RTN","IBCEPTR",190,0)
 F  S BATCH=$O(^TMP($J,RTN,BATCH)) Q:BATCH=""  D  Q:STOP
"RTN","IBCEPTR",191,0)
 . D HEADER Q:STOP
"RTN","IBCEPTR",192,0)
 . I BATCH'=0 W !!,"Batch#:  ",BATCH
"RTN","IBCEPTR",193,0)
 . S CLAIM=""
"RTN","IBCEPTR",194,0)
 . F  S CLAIM=$O(^TMP($J,RTN,BATCH,CLAIM)) Q:CLAIM=""  D  Q:STOP
"RTN","IBCEPTR",195,0)
 .. I $Y+2>MAXCNT!'PAGECNT D HEADER Q:STOP
"RTN","IBCEPTR",196,0)
 .. I BATCH=0 W !
"RTN","IBCEPTR",197,0)
 .. W !,"Claim#:  ",CLAIM
"RTN","IBCEPTR",198,0)
 .. S IBIFN=+$O(^DGCR(399,"B",CLAIM,""))
"RTN","IBCEPTR",199,0)
 .. I IBIFN S CLMD=$$BT(IBIFN) W ?18,$E($P(CLMD,U,3),1,20),?40,"(",$P(CLMD,U,1),")"
"RTN","IBCEPTR",200,0)
 .. W !,$$RJ^XLFSTR("",80,"-")
"RTN","IBCEPTR",201,0)
 .. ;
"RTN","IBCEPTR",202,0)
 .. S TXD=0
"RTN","IBCEPTR",203,0)
 .. F  S TXD=$O(^TMP($J,RTN,BATCH,CLAIM,TXD)) Q:'TXD!STOP  S TYPE=0 F  S TYPE=$O(^TMP($J,RTN,BATCH,CLAIM,TXD,TYPE)) Q:'TYPE!STOP  S IEN=0 F  S IEN=$O(^TMP($J,RTN,BATCH,CLAIM,TXD,TYPE,IEN)) Q:'IEN!STOP  D  Q:STOP
"RTN","IBCEPTR",204,0)
 ... I TYPE=1 D TXPRT
"RTN","IBCEPTR",205,0)
 ... I TYPE=2 D SMPRT
"RTN","IBCEPTR",206,0)
 ... Q
"RTN","IBCEPTR",207,0)
 .. Q
"RTN","IBCEPTR",208,0)
 . Q
"RTN","IBCEPTR",209,0)
 ;
"RTN","IBCEPTR",210,0)
 I STOP G PRINTX
"RTN","IBCEPTR",211,0)
 I $Y+2>MAXCNT!'PAGECNT D HEADER I STOP G PRINTX
"RTN","IBCEPTR",212,0)
 W !!?5,"*** End of Report ***"
"RTN","IBCEPTR",213,0)
 I CRT,'$D(ZTQUEUED) S DIR(0)="E" D ^DIR K DIR
"RTN","IBCEPTR",214,0)
PRINTX ;
"RTN","IBCEPTR",215,0)
 Q
"RTN","IBCEPTR",216,0)
 ;
"RTN","IBCEPTR",217,0)
TXPRT ; print transmission information
"RTN","IBCEPTR",218,0)
 NEW DATA,TXDTM,EXTBCH,TXBY,INSIEN,PAYER,PSEQ,INZ
"RTN","IBCEPTR",219,0)
 S DATA=$G(^TMP($J,RTN,BATCH,CLAIM,TXD,TYPE,IEN,0)) I DATA="" G TXPRTX
"RTN","IBCEPTR",220,0)
 S TXDTM=$$FMTE^XLFDT($P(DATA,U,1),"5Z")
"RTN","IBCEPTR",221,0)
 S EXTBCH=$$EXTERNAL^DILFD(361.41,.02,,$P(DATA,U,2))  ; batch
"RTN","IBCEPTR",222,0)
 S TXBY=$$EXTERNAL^DILFD(361.41,.03,,$P(DATA,U,3))    ; who tx
"RTN","IBCEPTR",223,0)
 S INSIEN=+$$FINDINS^IBCEF1(IBIFN,$P(DATA,U,4))       ; insurance
"RTN","IBCEPTR",224,0)
 S INZ=$$INSADD^IBCNSC02(INSIEN)                      ; ins name/addr
"RTN","IBCEPTR",225,0)
 S PAYER=$P(INZ,U,1)                                  ; ins name
"RTN","IBCEPTR",226,0)
 S PSEQ=$TR($P(DATA,U,4),"123","PST")                 ; payer seq
"RTN","IBCEPTR",227,0)
 ;
"RTN","IBCEPTR",228,0)
 I $Y+2>MAXCNT!'PAGECNT D HEADER I STOP G TXPRTX
"RTN","IBCEPTR",229,0)
 W !,"Transmission Information"
"RTN","IBCEPTR",230,0)
 W !?1,TXDTM,?22,"Bch#",+$E(EXTBCH,4,99),?33,$E(TXBY,1,15),?50,$E(PAYER,1,20),"  (",PSEQ,")"
"RTN","IBCEPTR",231,0)
 ; display address info if not Medicare
"RTN","IBCEPTR",232,0)
 I '$$MCRWNR^IBEFUNC(INSIEN) W !?50,$E($P(INZ,U,2),1,15),",",$E($P(INZ,U,3),1,11),",",$E($P(INZ,U,4),1,2)
"RTN","IBCEPTR",233,0)
 W !
"RTN","IBCEPTR",234,0)
TXPRTX ;
"RTN","IBCEPTR",235,0)
 Q
"RTN","IBCEPTR",236,0)
 ;
"RTN","IBCEPTR",237,0)
SMPRT ; print returned status message information
"RTN","IBCEPTR",238,0)
 NEW DATA,TXDTM,SEVERITY,Z
"RTN","IBCEPTR",239,0)
 S DATA=$G(^TMP($J,RTN,BATCH,CLAIM,TXD,TYPE,IEN,0)) I DATA="" G SMPRTX
"RTN","IBCEPTR",240,0)
 S TXDTM=$$FMTE^XLFDT($P(DATA,U,1),"5Z")
"RTN","IBCEPTR",241,0)
 S SEVERITY=$$EXTERNAL^DILFD(361.42,.02,,$P(DATA,U,2))  ; msg severity
"RTN","IBCEPTR",242,0)
 ;
"RTN","IBCEPTR",243,0)
 I $Y+2>MAXCNT!'PAGECNT D HEADER I STOP G SMPRTX
"RTN","IBCEPTR",244,0)
 W !,"Status Message Information"
"RTN","IBCEPTR",245,0)
 W !?1,TXDTM,?22,SEVERITY,?65,"Msg#",$P(DATA,U,3)
"RTN","IBCEPTR",246,0)
 S Z=0
"RTN","IBCEPTR",247,0)
 F  S Z=$O(^TMP($J,RTN,BATCH,CLAIM,TXD,TYPE,IEN,1,Z)) Q:'Z  D  Q:STOP
"RTN","IBCEPTR",248,0)
 . I $Y+1>MAXCNT!'PAGECNT D HEADER Q:STOP
"RTN","IBCEPTR",249,0)
 . W !?2,$G(^TMP($J,RTN,BATCH,CLAIM,TXD,TYPE,IEN,1,Z,0))
"RTN","IBCEPTR",250,0)
 . Q
"RTN","IBCEPTR",251,0)
 W !
"RTN","IBCEPTR",252,0)
SMPRTX ;
"RTN","IBCEPTR",253,0)
 Q
"RTN","IBCEPTR",254,0)
 ;
"RTN","IBCEPTR",255,0)
HEADER ; page break and header
"RTN","IBCEPTR",256,0)
 NEW LIN,HDR,TAB
"RTN","IBCEPTR",257,0)
 S STOP=0
"RTN","IBCEPTR",258,0)
 I CRT,PAGECNT>0,'$D(ZTQUEUED) D  I STOP G HEADX
"RTN","IBCEPTR",259,0)
 . I MAXCNT<51 F LIN=1:1:(MAXCNT-$Y) W !
"RTN","IBCEPTR",260,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","IBCEPTR",261,0)
 . I 'Y S STOP=1 Q
"RTN","IBCEPTR",262,0)
 . Q
"RTN","IBCEPTR",263,0)
 ;
"RTN","IBCEPTR",264,0)
 S PAGECNT=PAGECNT+1
"RTN","IBCEPTR",265,0)
 W @IOF,!
"RTN","IBCEPTR",266,0)
 ;
"RTN","IBCEPTR",267,0)
 W "Test Claim EDI Transmission Report"
"RTN","IBCEPTR",268,0)
 S HDR="Page: "_PAGECNT,TAB=80-$L(HDR)-1
"RTN","IBCEPTR",269,0)
 W ?TAB,HDR
"RTN","IBCEPTR",270,0)
 W !,"Selected ",$S(IBRMETH="B":"Batches",IBRMETH="C":"Claims",1:"Date Range")
"RTN","IBCEPTR",271,0)
 S HDR=$$FMTE^XLFDT($$NOW^XLFDT,"1Z"),TAB=80-$L(HDR)-1
"RTN","IBCEPTR",272,0)
 W ?TAB,HDR
"RTN","IBCEPTR",273,0)
 W !,$$RJ^XLFSTR("",80,"=")
"RTN","IBCEPTR",274,0)
 ;
"RTN","IBCEPTR",275,0)
 ; check for a stop request
"RTN","IBCEPTR",276,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD() D  G HEADX
"RTN","IBCEPTR",277,0)
 . S (ZTSTOP,STOP)=1
"RTN","IBCEPTR",278,0)
 . W !!!?5,"*** Report Halted by TaskManager Request ***"
"RTN","IBCEPTR",279,0)
 . Q
"RTN","IBCEPTR",280,0)
 ;
"RTN","IBCEPTR",281,0)
HEADX ;
"RTN","IBCEPTR",282,0)
 Q
"RTN","IBCEPTR",283,0)
 ;
"RTN","IBCEPTR",284,0)
BT(IBIFN) ; bill type and info
"RTN","IBCEPTR",285,0)
 ; [1] TYPE (form type, charge type, inp/outp)
"RTN","IBCEPTR",286,0)
 ; [2] claim#
"RTN","IBCEPTR",287,0)
 ; [3] patient name
"RTN","IBCEPTR",288,0)
 NEW TYPE,IB0,F,C,S S TYPE=""
"RTN","IBCEPTR",289,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)) I IB0="" Q ""
"RTN","IBCEPTR",290,0)
 S F=$P(IB0,U,19),F=$S(F=2:"1500",1:"UB04")
"RTN","IBCEPTR",291,0)
 S C=$P(IB0,U,27),C=$S(C=1:"Inst",1:"Prof")
"RTN","IBCEPTR",292,0)
 S S=$$INPAT^IBCEF(IBIFN),S=$S(S=1:"Inpat",1:"Outpat")
"RTN","IBCEPTR",293,0)
 S TYPE=F_", "_C_", "_S
"RTN","IBCEPTR",294,0)
 Q TYPE_U_$P(IB0,U,1)_U_$P($G(^DPT(+$P(IB0,U,2),0)),U,1)
"RTN","IBCEPTR",295,0)
 ;
"RTN","IBCEPTR",296,0)
CLMLST(IBIFN) ; DIC lister
"RTN","IBCEPTR",297,0)
 NEW TYPE,LTD,N1,N2
"RTN","IBCEPTR",298,0)
 S TYPE=$P($$BT(IBIFN),U,1)
"RTN","IBCEPTR",299,0)
 S LTD=$$FMTE^XLFDT($P($G(^IBM(361.4,IBIFN,0)),U,2),"2Z")
"RTN","IBCEPTR",300,0)
 S N1=+$P($G(^IBM(361.4,IBIFN,1,0)),U,4)  ; # transmissions
"RTN","IBCEPTR",301,0)
 S N2=+$P($G(^IBM(361.4,IBIFN,2,0)),U,4)  ; # return messages
"RTN","IBCEPTR",302,0)
 W " ",TYPE,?34," ",LTD,?45," ",N1," Transmission",$S(N1'=1:"s",1:"")
"RTN","IBCEPTR",303,0)
 W ?63," ",N2," Message",$S(N2'=1:"s",1:"")
"RTN","IBCEPTR",304,0)
CLMLSTX ;
"RTN","IBCEPTR",305,0)
 Q
"RTN","IBCEPTR",306,0)
 ;
"RTN","IBCEQ1")
0^12^B30648682^B30688756
"RTN","IBCEQ1",1,0)
IBCEQ1 ;BSL,ALB/TMK - PROVIDER ID QUERY ;25-AUG-03
"RTN","IBCEQ1",2,0)
 ;;2.0;INTEGRATED BILLING;**232,356,349**;21-MAR-94;Build 46
"RTN","IBCEQ1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEQ1",4,0)
 ;
"RTN","IBCEQ1",5,0)
 ;QUERY TOOL HELPS IDENTIFY PLANS THAT ARE LACKING PROVIDER ID
"RTN","IBCEQ1",6,0)
 ;INFO OR HAVE BAD PROVIDER ID DATA FOR E-BILLING
"RTN","IBCEQ1",7,0)
 ;
"RTN","IBCEQ1",8,0)
 ;CONDITIONS TO IDENTIFY:
"RTN","IBCEQ1",9,0)
 ;1-BLUE CROSS LINKED TO 1500 ONLY (1) HARD ERROR
"RTN","IBCEQ1",10,0)
 ;2-BLUE SHIELD LINKED TO UB-04 ONLY (2) WARNING
"RTN","IBCEQ1",11,0)
 ;3-BLUE CROSS ID APPLIED TO BOTH FORMS (0) WARNING
"RTN","IBCEQ1",12,0)
 ;4-BLUE CROSS OR BLUE SHIELD IDs EXIST FOR AN INS CO, BUT ONE OR
"RTN","IBCEQ1",13,0)
 ;  MORE OF THE INSURANCE COMPANY'S PLANS DOES NOT HAVE AN
"RTN","IBCEQ1",14,0)
 ;  ELECTRONIC PLAN TYPE OF 'BL'
"RTN","IBCEQ1",15,0)
 ;5-NON BLUE CROSS/SHIELD ID FOR AN INS COMPANY WITH BLUE PLAN(S)
"RTN","IBCEQ1",16,0)
 ;6-VAD000 as an ID but not flagged as a UPIN
"RTN","IBCEQ1",17,0)
 ;
"RTN","IBCEQ1",18,0)
EN ;
"RTN","IBCEQ1",19,0)
 N POP,%ZIS,ZTSK,ZTRTN,ZTDESC,IBREBLD,IBSENDM,IBTO,DIR,X,Y,DUOUT,DTOUT,Z
"RTN","IBCEQ1",20,0)
 S IBREBLD=$S('$D(^XTMP("IB_PLAN232")):1,1:0)
"RTN","IBCEQ1",21,0)
 I $D(^XTMP("IB_PLAN232")) D
"RTN","IBCEQ1",22,0)
 . S DIR("?")="IF YOU ANSWER NO, REPORT WILL BE RUN FROM THE EXISTING QUERY DATA",DIR("?",1)="IF YOU ANSWER YES, A NEW QUERY WILL BE RUN"
"RTN","IBCEQ1",23,0)
 . S DIR(0)="YA",DIR("A",1)="THE EXTRACT GLOBAL FOR THIS QUERY ALREADY EXISTS",DIR("A")="DO YOU WANT TO DELETE IT AND RERUN THE QUERY?: ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","IBCEQ1",24,0)
 . Q:$D(DUOUT)!$D(DTOUT)!'Y
"RTN","IBCEQ1",25,0)
 . S IBREBLD=1
"RTN","IBCEQ1",26,0)
 ;
"RTN","IBCEQ1",27,0)
 N XMINSTR,Z,ZTSAVE
"RTN","IBCEQ1",28,0)
 K ^TMP("XMY",$J),^TMP("XMY0",$J)
"RTN","IBCEQ1",29,0)
 S XMINSTR("ADDR FLAGS")="R"
"RTN","IBCEQ1",30,0)
 D TOWHOM^XMXAPIU(DUZ,"","S",.XMINSTR)
"RTN","IBCEQ1",31,0)
 S Z="" F  S Z=$O(^TMP("XMY",$J,Z)) Q:Z=""  S IBTO(Z)=""
"RTN","IBCEQ1",32,0)
 K ^TMP("XMY",$J),^TMP("XMY0",$J)
"RTN","IBCEQ1",33,0)
 ;
"RTN","IBCEQ1",34,0)
 S %ZIS="QM" D ^%ZIS G:POP EN1Q
"RTN","IBCEQ1",35,0)
 I $D(IO("Q")) D  G EN1Q
"RTN","IBCEQ1",36,0)
 . S ZTRTN="ENT^IBCEQ1("_IBREBLD_",.IBTO)",ZTDESC="IB - HIPAA ENHANCEMENTS PROV ID QUERY",ZTSAVE("IBTO(")=""
"RTN","IBCEQ1",37,0)
 . D ^%ZTLOAD
"RTN","IBCEQ1",38,0)
 . W !!,$S($D(ZTSK):"Task # "_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","IBCEQ1",39,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBCEQ1",40,0)
 U IO
"RTN","IBCEQ1",41,0)
 D ENT(IBREBLD,.IBTO)
"RTN","IBCEQ1",42,0)
EN1Q Q
"RTN","IBCEQ1",43,0)
 ;
"RTN","IBCEQ1",44,0)
ENT(IBREBLD,IBTO) ; Queued job enter here
"RTN","IBCEQ1",45,0)
 ;
"RTN","IBCEQ1",46,0)
 N LOOP,Z
"RTN","IBCEQ1",47,0)
 K ^TMP($J,"SENDMSG")
"RTN","IBCEQ1",48,0)
 S ^TMP($J,"SENDMSG")=$S(IBREBLD:1,1:0)
"RTN","IBCEQ1",49,0)
 S Z="" F  S Z=$O(IBTO(Z)) Q:Z=""  S ^TMP($J,"SENDMSG",0,Z)=""
"RTN","IBCEQ1",50,0)
 I $G(IBREBLD) D
"RTN","IBCEQ1",51,0)
 . ; Rebld query
"RTN","IBCEQ1",52,0)
 . K ^XTMP("IB_PLAN232")
"RTN","IBCEQ1",53,0)
 . S ^XTMP("IB_PLAN232")="",^XTMP("IB_PLAN232",0)=$$FMADD^XLFDT(DT,45)_U_DT_"^IB PATCH 232 PROV ID QUERY"
"RTN","IBCEQ1",54,0)
 . ;
"RTN","IBCEQ1",55,0)
 . ; loop thru 355.91 (IB INSURANCE CO LEVEL BILLING PROV ID)
"RTN","IBCEQ1",56,0)
 . ;   then 355.9 (IB BILLING PRACTITIONER ID)
"RTN","IBCEQ1",57,0)
 . F LOOP=355.91,355.9 D LP
"RTN","IBCEQ1",58,0)
 . ;
"RTN","IBCEQ1",59,0)
 ;
"RTN","IBCEQ1",60,0)
 D RPTOUT^IBCEQ1A
"RTN","IBCEQ1",61,0)
 K ^TMP($J,"SENDMSG")
"RTN","IBCEQ1",62,0)
 Q
"RTN","IBCEQ1",63,0)
 ;
"RTN","IBCEQ1",64,0)
LP ; Loop through ids
"RTN","IBCEQ1",65,0)
 N IB,PTYP,PAYER,PLANIEN,FTA,IEPLAN,IPROV,PPROV,EDII,EDIP,PAYERP,TYPCOV,IBPMBPID,PTYPNM,IBI3,IBI0,SEQ,BLUE,TOT,NBLUE,DIR,DTOUT,DUOUT,X,Z,Z0,Z1,BL,UPIN,BCR,BSH
"RTN","IBCEQ1",66,0)
 S (SEQ,X,TOT,NBLUE,BLUE)=0,(BCR,BSH,UPIN)=""
"RTN","IBCEQ1",67,0)
 S Z="" F  S Z=$O(^IBE(355.97,Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","IBCEQ1",68,0)
 . I $P(Z,U)["BLUE CROSS" S BCR=Z Q
"RTN","IBCEQ1",69,0)
 . I $P(Z,U)["BLUE SHIELD" S BSH=Z Q
"RTN","IBCEQ1",70,0)
 . I $P(Z,U)["UPIN" S UPIN=Z Q
"RTN","IBCEQ1",71,0)
 S:UPIN="" UPIN=22 S:BCR="" BCR=1 S:BSH="" BSH=2
"RTN","IBCEQ1",72,0)
 F  S X=$O(^IBA(LOOP,X)) Q:+X=0  D
"RTN","IBCEQ1",73,0)
 . S (PAYER,FTA,PLANIEN,IEPLAN,IPROV,PPROV,EDII,EDIP,PAYERP,TYPCOV,IBPMBPID,PTYPNM)=""
"RTN","IBCEQ1",74,0)
 . S SEQ=SEQ+1
"RTN","IBCEQ1",75,0)
 . S IB=$G(^IBA(LOOP,X,0))
"RTN","IBCEQ1",76,0)
 . S PTYP=$P(IB,U,6) ; prov id type ien
"RTN","IBCEQ1",77,0)
 . Q:PTYP=""  ; no prov type
"RTN","IBCEQ1",78,0)
 . S PTYPNM=$P($G(^IBE(355.97,PTYP,0)),U) ; prov id type desc
"RTN","IBCEQ1",79,0)
 . S PAYERP=$S(LOOP[".91":+IB,1:+$P(IB,U,2)) ;ins co ien
"RTN","IBCEQ1",80,0)
 . S IBI0=$G(^DIC(36,PAYERP,0)),IBI3=$G(^(3)),PAYER=$P(IBI0,U)
"RTN","IBCEQ1",81,0)
 . Q:$P(IBI0,U,5)!(IBI0="")  ; ins co inactive/deleted
"RTN","IBCEQ1",82,0)
 . S EDIP=$P(IBI3,U,2) ; edi id# prof
"RTN","IBCEQ1",83,0)
 . S EDII=$P(IBI3,U,4) ; edi id# inst
"RTN","IBCEQ1",84,0)
 . S IEPLAN=$P(IBI3,U,9) ; elec ins type ?1N
"RTN","IBCEQ1",85,0)
 . S PPROV=$P(IBI0,U,17) ; prof. prov#
"RTN","IBCEQ1",86,0)
 . S IPROV=$P(IBI0,U,11) ; hosp. prov#
"RTN","IBCEQ1",87,0)
 . S TYPCOV=$P(IBI0,U,13) ; type of cov ien;file 355.2
"RTN","IBCEQ1",88,0)
 . S FTA=$P(IB,U,4) ; form type applied; 0:both, 1:ub, 2:1500
"RTN","IBCEQ1",89,0)
 . S IBPMBPID=X_";"_LOOP
"RTN","IBCEQ1",90,0)
 . I $P(IB,U,7)="VAD000",PTYP'=UPIN D SET(6)
"RTN","IBCEQ1",91,0)
 . ;
"RTN","IBCEQ1",92,0)
 . I PTYP'=BCR&(PTYP'=BSH) D  Q    ; not BC/BS
"RTN","IBCEQ1",93,0)
 .. ; Only do following check once per insurance co
"RTN","IBCEQ1",94,0)
 .. Q:$D(^XTMP("IB_PLAN232",3,PAYERP))
"RTN","IBCEQ1",95,0)
 .. S ^XTMP("IB_PLAN232",3,PAYERP)=""
"RTN","IBCEQ1",96,0)
 .. ; Check if BC/BS ids exist at all for ins co
"RTN","IBCEQ1",97,0)
 .. Q:$O(^IBA(355.9,"AC",1,PAYERP,0))!$O(^IBA(355.9,"AC",2,PAYERP,0))!$O(^IBA(355.91,"AC",PAYERP,1,0))!$O(^IBA(355.91,"AC",PAYERP,2,0))
"RTN","IBCEQ1",98,0)
 .. S BL=0
"RTN","IBCEQ1",99,0)
 .. S Z1=0 F  S Z1=$O(^IBA(355.3,"B",PAYERP,Z1)) Q:'Z1  D
"RTN","IBCEQ1",100,0)
 ... I '$P($G(^IBA(355.3,Z1,0)),U,11),$P($G(^(0)),U,15)="BL" S PLANIEN=Z1,BL=1 D SET(5)
"RTN","IBCEQ1",101,0)
 .. S:BL NBLUE=NBLUE+1
"RTN","IBCEQ1",102,0)
 . ;
"RTN","IBCEQ1",103,0)
 . S BLUE=BLUE+1
"RTN","IBCEQ1",104,0)
 . ; ERROR - FORM TYPE=2:1500 AND PTYP=1:BC
"RTN","IBCEQ1",105,0)
 . I PTYP=1&(FTA=2) D SET(1) Q
"RTN","IBCEQ1",106,0)
 . ;
"RTN","IBCEQ1",107,0)
 . I PTYP=2&(FTA=1) D SET(2) Q  ; BS applied to just UB
"RTN","IBCEQ1",108,0)
 . I FTA=0&(PTYP=1) D SET(3) Q  ; BC applied to both forms
"RTN","IBCEQ1",109,0)
 . ;
"RTN","IBCEQ1",110,0)
 . ; Only do following check once per insurance co
"RTN","IBCEQ1",111,0)
 . I '$D(^XTMP("IB_PLAN232",2,PAYERP)) D  ; Checks plans not BL
"RTN","IBCEQ1",112,0)
 .. S Z1=0,^XTMP("IB_PLAN232",2,PAYERP)=""
"RTN","IBCEQ1",113,0)
 .. F  S Z1=$O(^IBA(355.3,"B",PAYERP,Z1)) Q:'Z1  D
"RTN","IBCEQ1",114,0)
 ... I $P($G(^IBA(355.3,Z1,0)),U,15)'="BL",'$P(^(0),U,11) S PLANIEN=Z1 D SET(4) Q
"RTN","IBCEQ1",115,0)
 ;
"RTN","IBCEQ1",116,0)
 ; 3RD PC XTMP(IB_PLAN232)=TOTAL BLUES WITH NO BLUE IDS
"RTN","IBCEQ1",117,0)
 S $P(^XTMP("IB_PLAN232"),U,3)=$P($G(^XTMP("IB_PLAN232")),U,3)+NBLUE
"RTN","IBCEQ1",118,0)
 ;
"RTN","IBCEQ1",119,0)
 ; 4TH PC XTMP(IB_PLAN232)=TOT NUMBER SCANNED
"RTN","IBCEQ1",120,0)
 S $P(^XTMP("IB_PLAN232"),U,4)=$P($G(^XTMP("IB_PLAN232")),U,4)+SEQ
"RTN","IBCEQ1",121,0)
 ;
"RTN","IBCEQ1",122,0)
 ; 5TH PC XTMP(IB_PLAN232)=TOT BLUES IDS FOUND
"RTN","IBCEQ1",123,0)
 S $P(^XTMP("IB_PLAN232"),U,5)=$P($G(^XTMP("IB_PLAN232")),U,5)+BLUE
"RTN","IBCEQ1",124,0)
 ;
"RTN","IBCEQ1",125,0)
 ; 6TH PC XTMP(IB_PLAN232)=TOTAL ERRORS FOUND
"RTN","IBCEQ1",126,0)
 S $P(^XTMP("IB_PLAN232"),U,6)=$P($G(^XTMP("IB_PLAN232")),U,6)+TOT
"RTN","IBCEQ1",127,0)
 Q
"RTN","IBCEQ1",128,0)
 ;
"RTN","IBCEQ1",129,0)
SET(Z) ;SET VALUES INTO SAVE GLOBAL
"RTN","IBCEQ1",130,0)
 ; Z=REASON WHY WE'RE SETTING IT
"RTN","IBCEQ1",131,0)
 ; 1. PAYER-ins co name (36)
"RTN","IBCEQ1",132,0)
 ; 2. PLAN-grp name (355.3)
"RTN","IBCEQ1",133,0)
 ; 3. GROUP-grp # (355.3)
"RTN","IBCEQ1",134,0)
 ; 4. FTA-form typ (355.9)
"RTN","IBCEQ1",135,0)
 ; 5. EPLAN-"BL" (355.3)
"RTN","IBCEQ1",136,0)
 ; 6. IEPLAN-elec ins typ (36)
"RTN","IBCEQ1",137,0)
 ; 7. IPROV-hosp prov# (36)
"RTN","IBCEQ1",138,0)
 ; 8. PPROV-prof prov# (36)
"RTN","IBCEQ1",139,0)
 ; 9. EDII-inst edi id# (36)
"RTN","IBCEQ1",140,0)
 ;10. EDIP-prof edi id# (36)
"RTN","IBCEQ1",141,0)
 ;11. PAYERP-ins co ien (36)
"RTN","IBCEQ1",142,0)
 ;12. TYPCOV-type of cov ien (36)
"RTN","IBCEQ1",143,0)
 ;13. PLANIEN-ien of file (355.3)
"RTN","IBCEQ1",144,0)
 ;14. IBPMBPID-355.9 or 355.91;ien of file
"RTN","IBCEQ1",145,0)
 ;15. PTYPNM-prov id type desc (355.9)
"RTN","IBCEQ1",146,0)
 ;16. Z-reason
"RTN","IBCEQ1",147,0)
 ;
"RTN","IBCEQ1",148,0)
 N A,DUP
"RTN","IBCEQ1",149,0)
 ;
"RTN","IBCEQ1",150,0)
 S A=$O(^XTMP("IB_PLAN232",1," "),-1)+1,TOT=TOT+1
"RTN","IBCEQ1",151,0)
 S ^XTMP("IB_PLAN232",1,A,0)=PAYER_U_""_U_""_U_FTA_U_""_U_IEPLAN_U_""_U_""_U_""_U_""_U_PAYERP_U_TYPCOV_U_PLANIEN_U_IBPMBPID_U_PTYPNM_U_Z
"RTN","IBCEQ1",152,0)
 Q
"RTN","IBCEQ1",153,0)
 ;
"RTN","IBCEQ1A")
0^13^B62926268^B62193570
"RTN","IBCEQ1A",1,0)
IBCEQ1A ;ALB/BSL,TMK - PROVIDER ID QUERY REPORT ;25-AUG-03
"RTN","IBCEQ1A",2,0)
 ;;2.0;INTEGRATED BILLING;**232,348,349**;21-MAR-94;Build 46
"RTN","IBCEQ1A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEQ1A",4,0)
 ;
"RTN","IBCEQ1A",5,0)
RPTOUT ; Print from data in ^XTMP
"RTN","IBCEQ1A",6,0)
 N IBP,IBA,IBI,IBIN,IBPNM,IBPNUM,IBSTOP,IBX,IBZ,IBPG,IBICONT,Z
"RTN","IBCEQ1A",7,0)
 K ^TMP($J,"IBZ232")
"RTN","IBCEQ1A",8,0)
 F Z=1:1:6 S ^TMP($J,"IBZ232",Z)=""
"RTN","IBCEQ1A",9,0)
 S (IBPG,IBSTOP)=0
"RTN","IBCEQ1A",10,0)
 S IBA=0 F  S IBA=$O(^XTMP("IB_PLAN232",1,IBA)) Q:'IBA  D
"RTN","IBCEQ1A",11,0)
 . S IBX=$G(^XTMP("IB_PLAN232",1,IBA,0))
"RTN","IBCEQ1A",12,0)
 . ; Sort by err type, ins co ien
"RTN","IBCEQ1A",13,0)
 . S ^TMP($J,"IBZ232",+$P(IBX,U,16),+$P(IBX,U,11),IBA)=IBX
"RTN","IBCEQ1A",14,0)
 ;
"RTN","IBCEQ1A",15,0)
 S IBZ=0 F  S IBZ=$O(^TMP($J,"IBZ232",IBZ)) Q:'IBZ!IBSTOP!(IBZ>6)  D HDR1(.IBPG,.IBSTOP,IBZ,0) S IBI=0 F  S IBI=$O(^TMP($J,"IBZ232",IBZ,IBI)) Q:'IBI!IBSTOP  D
"RTN","IBCEQ1A",16,0)
 . S IBIN=$P($G(^DIC(36,+IBI,0)),U)_" ("_$S(+$G(^(3))=1:"",1:"NOT ")_"SET TO TRANSMIT LIVE)"
"RTN","IBCEQ1A",17,0)
 . D INSHDR(.IBPG,.IBSTOP,IBIN,IBZ,0) S IBICONT=0
"RTN","IBCEQ1A",18,0)
 . S IBA=0 F  S IBA=$O(^TMP($J,"IBZ232",IBZ,IBI,IBA)) Q:'IBA!IBSTOP  S IBX=$G(^(IBA)) D
"RTN","IBCEQ1A",19,0)
 .. I ($Y+5)>IOSL D INSHDR(.IBPG,.IBSTOP,IBIN,IBZ,IBICONT) Q:IBSTOP
"RTN","IBCEQ1A",20,0)
 .. ;
"RTN","IBCEQ1A",21,0)
 .. I IBZ'=4,IBZ'=5 D
"RTN","IBCEQ1A",22,0)
 ... S IBP=+$P(IBX,U,14)
"RTN","IBCEQ1A",23,0)
 ... I $P(IBX,U,14)[".91" S IBPNM="ALL PROVIDERS"
"RTN","IBCEQ1A",24,0)
 ... I $P(IBX,U,14)'[".91" D
"RTN","IBCEQ1A",25,0)
 .... N Z
"RTN","IBCEQ1A",26,0)
 .... S Z=$P($G(^IBA(355.9,IBP,0)),U)
"RTN","IBCEQ1A",27,0)
 .... S IBPNM=$S(Z["VA(200":"",1:"#")_$$EXTERNAL^DILFD(355.9,.01,"",Z)
"RTN","IBCEQ1A",28,0)
 ... S IBPNUM=$P($G(^IBA(+$P($P(IBX,U,14),";",2),IBP,0)),U,7)
"RTN","IBCEQ1A",29,0)
 ... D WRT(1,"   "_$E($P("BOTH^UB-04^CMS-1500",U,$P(IBX,U,4)+1)_$J("",9),1,9)_"  "_$E($P(IBX,U,15)_$J("",23),1,23)_" "_$E(IBPNM_$J("",28),1,28)_"  "_$E(IBPNUM,1,11))
"RTN","IBCEQ1A",30,0)
 .. ;
"RTN","IBCEQ1A",31,0)
 .. I IBZ=4!(IBZ=5) D
"RTN","IBCEQ1A",32,0)
 ... N Z
"RTN","IBCEQ1A",33,0)
 ... S Z=$G(^IBA(355.3,+$P(IBX,U,13),0))
"RTN","IBCEQ1A",34,0)
 ... D WRT(1,"   "_$E($P(Z,U,3)_$J("",20),1,20)_"  "_$E($P(Z,U,4)_$J("",17),1,17)_"  "_$$EXTERNAL^DILFD(355.3,.15,"",$P(Z,U,15)))
"RTN","IBCEQ1A",35,0)
 .. S:'IBICONT IBICONT=1
"RTN","IBCEQ1A",36,0)
 ;
"RTN","IBCEQ1A",37,0)
 I 'IBSTOP D  ;Totals
"RTN","IBCEQ1A",38,0)
 . N Z
"RTN","IBCEQ1A",39,0)
 . S Z=$G(^XTMP("IB_PLAN232"))
"RTN","IBCEQ1A",40,0)
 . I ($Y+10)>IOSL!'IBPG D HDR(.IBPG,.IBSTOP,"") Q:IBSTOP
"RTN","IBCEQ1A",41,0)
 . D WRT(2,$J("",25)_"TOTAL # OF IDs CHECKED: "_+$P(Z,U,4))
"RTN","IBCEQ1A",42,0)
 . D WRT(1,$J("",14)_"TOT # BLUE CROSS/SHIELD IDS FOUND: "_+$P(Z,U,5))
"RTN","IBCEQ1A",43,0)
 . D WRT(1,"TOTAL # OF INS CO. W/BLUE PLANS AND NO BLUE IDS: "_+$P(Z,U,3))
"RTN","IBCEQ1A",44,0)
 . D WRT(1,$J("",21)_"TOTAL # OF ERRORS/WARNINGS: "_+$P(Z,U,6))
"RTN","IBCEQ1A",45,0)
 ;
"RTN","IBCEQ1A",46,0)
 I '$D(ZTQUEUED) D ^%ZISC I 'IBSTOP,IBPG D ASK()
"RTN","IBCEQ1A",47,0)
 I $D(ZTQUEUED),'IBSTOP S ZTREQ="@"
"RTN","IBCEQ1A",48,0)
 I $G(^TMP($J,"SENDMSG")),'IBSTOP D
"RTN","IBCEQ1A",49,0)
 . N XMDUZ,XMSUBJ,XMBODY,XMTO,XMZ
"RTN","IBCEQ1A",50,0)
 . S XMDUZ=DUZ,XMSUBJ=$E("PROVIDER ID QUERY FROM "_$P($G(^DIC(4,+$P($G(^IBE(350.9,1,0)),U,2),0)),U),1,65),XMBODY="^TMP($J,""SENDMSG"",1)"
"RTN","IBCEQ1A",51,0)
 . M XMTO=^TMP($J,"SENDMSG",0)
"RTN","IBCEQ1A",52,0)
 . S Z="" F  S Z=$O(^TMP($J,"SENDMSG",0,Z)) Q:Z=""  S XMZ(Z)=""
"RTN","IBCEQ1A",53,0)
 . D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,"",.XMZ)
"RTN","IBCEQ1A",54,0)
 K ^TMP($J,"IBZ232"),^TMP($J,"SENDMSG")
"RTN","IBCEQ1A",55,0)
 Q
"RTN","IBCEQ1A",56,0)
 ;
"RTN","IBCEQ1A",57,0)
HDR(IBPG,IBSTOP,IBZ,FF) ; Main hdr
"RTN","IBCEQ1A",58,0)
 ; FF = 0 if continuation pg so it writes it to report, but not mail msg
"RTN","IBCEQ1A",59,0)
 N Z,IBT
"RTN","IBCEQ1A",60,0)
 Q:$G(IBSTOP)
"RTN","IBCEQ1A",61,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S (IBSTOP,ZTSTOP)=1 K ZTREQ I +$G(IBPG) D WRT(2,"***TASK STOPPED BY USER***") Q
"RTN","IBCEQ1A",62,0)
 I IBPG&($E(IOST,1,2)="C-") D ASK(.IBSTOP) Q:IBSTOP
"RTN","IBCEQ1A",63,0)
 S IBT=$S(IBPG:1,1:0)
"RTN","IBCEQ1A",64,0)
 S IBPG=IBPG+1
"RTN","IBCEQ1A",65,0)
 S Z="PROVIDER ID VERIFICATION QUERY REPORT"
"RTN","IBCEQ1A",66,0)
 S Z=$$SETSTR^VALM1($J("",80-$L(Z)\2)_Z,"",1,79)
"RTN","IBCEQ1A",67,0)
 S Z=$$SETSTR^VALM1("Page: "_IBPG,Z,70,10)
"RTN","IBCEQ1A",68,0)
 D WRT(0,"@IOF",$G(FF))
"RTN","IBCEQ1A",69,0)
 D WRT(1,Z,$G(FF))
"RTN","IBCEQ1A",70,0)
 S Z="RUN DATE: "_$$FMTE^XLFDT(DT,2),Z=$J("",80-$L(Z)\2)_Z
"RTN","IBCEQ1A",71,0)
 D WRT(1,Z,$G(FF))
"RTN","IBCEQ1A",72,0)
 I IBZ'="",IBZ'=4,IBZ'=5 D
"RTN","IBCEQ1A",73,0)
 . D WRT(2,"   FORM TYPE  PROV ID TYPE"_$J("",12)_"PROVIDER NAME (#=Non-VA)"_$J("",6)_"PROV ID",$G(FF))
"RTN","IBCEQ1A",74,0)
 I IBZ=4!(IBZ=5) D
"RTN","IBCEQ1A",75,0)
 . D WRT(2,"   GROUP NAME"_$J("",12)_"GROUP NUMBER"_$J("",7)_"ELECTRONIC PLAN TYPE",$G(FF))
"RTN","IBCEQ1A",76,0)
 D WRT(1,$TR($J("",IOM-1)," ","-"),$G(FF))
"RTN","IBCEQ1A",77,0)
 Q
"RTN","IBCEQ1A",78,0)
 ;
"RTN","IBCEQ1A",79,0)
HDR1(IBPG,IBSTOP,IBZ,IBCONT) ; Hdr err typ
"RTN","IBCEQ1A",80,0)
 N Z,Z0,Z1
"RTN","IBCEQ1A",81,0)
 D HDR(.IBPG,.IBSTOP,IBZ,IBCONT) Q:IBSTOP
"RTN","IBCEQ1A",82,0)
 S Z="",$P(Z,"*",80)="" D WRT(1,Z,IBCONT)
"RTN","IBCEQ1A",83,0)
 S Z0="* "_$S(IBZ>1:"WARNING: ",1:"ERROR: ")
"RTN","IBCEQ1A",84,0)
 ;
"RTN","IBCEQ1A",85,0)
 I IBZ'=4,IBZ'=5 D
"RTN","IBCEQ1A",86,0)
 . N X
"RTN","IBCEQ1A",87,0)
 . S X="BLUE CROSS ID FOUND FOR A 1500 FORM TYPE ONLY^BLUE SHIELD ID FOUND FOR A UB-04 FORM TYPE ONLY^BLUE CROSS ID FOUND FOR BOTH FORM TYPES^BL CROSS/BL SHIELD IDs FOUND FOR PLANS NOT HAVING 'BL' ELECTRONIC PLAN TYPE"
"RTN","IBCEQ1A",88,0)
 . S Z0=Z0_$S(IBZ<6:$P(X,U,IBZ),IBZ=6:"""VAD000"" PROVIDER ID FOUND NOT SET UP AS A UPIN PROVIDER ID TYPE",1:"")
"RTN","IBCEQ1A",89,0)
 I IBZ=4 D
"RTN","IBCEQ1A",90,0)
 . S Z0=Z0_"BL CROSS/BL SHIELD IDs FOUND FOR PLANS NOT HAVING 'BL' ELECTRONIC" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",91,0)
 . S Z0="*"_$J("",10)_"PLAN TYPE"
"RTN","IBCEQ1A",92,0)
 ;
"RTN","IBCEQ1A",93,0)
 I IBZ=5 D
"RTN","IBCEQ1A",94,0)
 . S Z0=Z0_"INSURANCE CO HAS BL CROSS/SHIELD PLANS, BUT NO BL CROSS/SHIELD IDs"
"RTN","IBCEQ1A",95,0)
 ;
"RTN","IBCEQ1A",96,0)
 S Z0=Z0_$S(IBCONT:" (CONT)",1:"")
"RTN","IBCEQ1A",97,0)
 D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",98,0)
 ;
"RTN","IBCEQ1A",99,0)
 I 'IBCONT D
"RTN","IBCEQ1A",100,0)
 . I IBZ=1 D
"RTN","IBCEQ1A",101,0)
 .. D WRT(1,"*"_$J("",77)_"*",IBCONT)
"RTN","IBCEQ1A",102,0)
 .. S Z0="* SOLUTION: THIS ID WILL NEVER BE USED ELECTRONICALLY." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",103,0)
 .. S Z0="*"_$J("",11)_"CHANGE PROVIDER ID TYPE TO BLUE SHIELD IF THIS ID SHOULD BE" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",104,0)
 .. S Z0="*"_$J("",11)_"TRANSMITTED ON A 1500." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",105,0)
 . ;
"RTN","IBCEQ1A",106,0)
 . I IBZ=2 D
"RTN","IBCEQ1A",107,0)
 .. D WRT(1,"*"_$J("",77)_"*",IBCONT)
"RTN","IBCEQ1A",108,0)
 .. S Z0="* SUGGESTION: VISTA WILL TRANSMIT THIS ID ELECTRONICALLY, BUT IT IS OPTIMAL"  D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",109,0)
 .. S Z0="*"_$J("",13)_"TO HAVE THIS ID SET UP AS BLUE CROSS." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",110,0)
 . ;
"RTN","IBCEQ1A",111,0)
 . I IBZ=3 D
"RTN","IBCEQ1A",112,0)
 .. D WRT(1,"*"_$J("",77)_"*",IBCONT)
"RTN","IBCEQ1A",113,0)
 .. S Z0="* SUGGESTION: A BLUE CROSS ID CAN ONLY BE APPLIED TO A UB-04 FORM TYPE." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",114,0)
 .. S Z0="*"_$J("",13)_"EDIT THE 'APPLIED TO FORM TYPE' FOR THE ID TO BE UB-04 ONLY." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",115,0)
 .. S Z0="*"_$J("",13)_"IF YOU NEED THIS ID ON A 1500, SET IT UP AS A BLUE SHIELD ID" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",116,0)
 .. S Z0="*"_$J("",13)_"APPLIED TO A CMS-1500 FORM TYPE." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",117,0)
 . ;
"RTN","IBCEQ1A",118,0)
 . I IBZ=4 D
"RTN","IBCEQ1A",119,0)
 .. D WRT(1,"*"_$J("",77)_"*",IBCONT)
"RTN","IBCEQ1A",120,0)
 .. S Z0="* SUGGESTION: A BLUE CROSS OR BLUE SHIELD ID IS DEFINED FOR THE INSURANCE" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",121,0)
 .. S Z0="*"_$J("",13)_"COMPANY, BUT THE ELECTRONIC PLAN TYPE FOR ONE OR MORE OF THE" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",122,0)
 .. S Z0="*"_$J("",13)_"COMPANY'S PLANS IS NOT SET TO 'BL' (BLUE CROSS/BLUE SHIELD)." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",123,0)
 .. S Z0="*"_$J("",13)_"IF BLUE CROSS/BLUE SHIELD IDs ARE NEEDED TO PRINT FOR ANY" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",124,0)
 .. S Z0="*"_$J("",13)_"OF THESE PLANS, ITS ELECTRONIC PLAN TYPE MUST BE CHANGED TO BL." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",125,0)
 . ;
"RTN","IBCEQ1A",126,0)
 . I IBZ=5 D
"RTN","IBCEQ1A",127,0)
 .. D WRT(1,"*"_$J("",77)_"*",IBCONT)
"RTN","IBCEQ1A",128,0)
 .. S Z0="* SUGGESTION: A BLUE CROSS OR BLUE SHIELD PLAN IS DEFINED FOR THE INSURANCE" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",129,0)
 .. S Z0="*"_$J("",13)_"COMPANY, BUT YOU HAVE ONLY NON-BLUE CROSS/SHIELD IDS SET UP." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",130,0)
 .. S Z0="*"_$J("",13)_"YOU MUST SET UP THE APPROPRIATE BLUE CROSS/BLUE SHIELD IDs" D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",131,0)
 .. S Z0="*"_$J("",13)_"FOR THE INSURANCE COMPANY." D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",132,0)
 . ;
"RTN","IBCEQ1A",133,0)
 . I IBZ=6 D
"RTN","IBCEQ1A",134,0)
 .. D WRT(1,"*"_$J("",77)_"*",IBCONT)
"RTN","IBCEQ1A",135,0)
 .. S Z0="* SUGGESTION: CHANGE PROVIDER ID TYPE TO UPIN."
"RTN","IBCEQ1A",136,0)
 .. D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",137,0)
 .. S Z0="*"_$J("",13)_"ONCE ALL PAYERS FULLY IMPLEMENT HIPAA EDITS, YOU"
"RTN","IBCEQ1A",138,0)
 .. D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",139,0)
 .. S Z0="*"_$J("",13)_"MUST USE THE CORRECT ID TYPE FOR THE ID ENTERED."
"RTN","IBCEQ1A",140,0)
 .. D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",141,0)
 . ;
"RTN","IBCEQ1A",142,0)
 . D WRT(1,"*"_$J("",77)_"*",IBCONT)
"RTN","IBCEQ1A",143,0)
 . S Z1="*"_$J("",$S(IBZ'=1:13,1:11))_"VISTA OPTION TO USE: "
"RTN","IBCEQ1A",144,0)
 . I IBZ'=4 D
"RTN","IBCEQ1A",145,0)
 .. S Z0=Z1_"PROVIDER ID MAINTENANCE"
"RTN","IBCEQ1A",146,0)
 . I IBZ=4 D
"RTN","IBCEQ1A",147,0)
 .. S Z0=Z1_"INSURANCE COMPANY ENTRY/EDIT"
"RTN","IBCEQ1A",148,0)
 . D WRT(1,Z0_$J("",78-$L(Z0))_"*",IBCONT)
"RTN","IBCEQ1A",149,0)
 ;
"RTN","IBCEQ1A",150,0)
 D WRT(1,Z,IBCONT)
"RTN","IBCEQ1A",151,0)
 ;
"RTN","IBCEQ1A",152,0)
 I '$O(^TMP($J,"IBZ232",IBZ,0)) D WRT(2,"***** NOTHING FOUND FOR THIS ERROR/WARNING *****",IBCONT)
"RTN","IBCEQ1A",153,0)
 Q
"RTN","IBCEQ1A",154,0)
 ;
"RTN","IBCEQ1A",155,0)
INSHDR(IBPG,IBSTOP,IBINM,IBZ,IBICONT) ; Ins Co info
"RTN","IBCEQ1A",156,0)
 I ($Y+7)>IOSL D HDR1(.IBPG,.IBSTOP,IBZ,1)
"RTN","IBCEQ1A",157,0)
 Q:IBSTOP
"RTN","IBCEQ1A",158,0)
 D WRT(2,"INSURANCE CO NAME: "_IBINM_$S($G(IBICONT):" (Continued)",1:""),IBICONT)
"RTN","IBCEQ1A",159,0)
 Q
"RTN","IBCEQ1A",160,0)
 ;
"RTN","IBCEQ1A",161,0)
ASK(IBSTOP) ; Ask continue
"RTN","IBCEQ1A",162,0)
 ; If passed by ref, IBSTOP returned = 1 if print aborted
"RTN","IBCEQ1A",163,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","IBCEQ1A",164,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","IBCEQ1A",165,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","IBCEQ1A",166,0)
 I ($D(DIRUT))!($D(DUOUT)) S IBSTOP=1 Q
"RTN","IBCEQ1A",167,0)
 Q
"RTN","IBCEQ1A",168,0)
 ;
"RTN","IBCEQ1A",169,0)
WRT(FF,TEXT,NOT) ; Wrt/store line
"RTN","IBCEQ1A",170,0)
 N Z,A
"RTN","IBCEQ1A",171,0)
 S A=+$O(^TMP($J,"SENDMSG",1,""),-1),NOT=$G(NOT)
"RTN","IBCEQ1A",172,0)
 I FF F Z=1:1:FF W ! I $G(^TMP($J,"SENDMSG")),'NOT,Z>1 S A=A+1,^TMP($J,"SENDMSG",1,A)=" "
"RTN","IBCEQ1A",173,0)
 ;
"RTN","IBCEQ1A",174,0)
 I TEXT="@IOF" D  Q
"RTN","IBCEQ1A",175,0)
 . W @IOF
"RTN","IBCEQ1A",176,0)
 . I $G(^TMP($J,"SENDMSG")),'NOT,IBPG>1 D
"RTN","IBCEQ1A",177,0)
 .. S A=A+1,^TMP($J,"SENDMSG",1,A)=" "
"RTN","IBCEQ1A",178,0)
 .. F Z=1:1:2 S A=A+1,^TMP($J,"SENDMSG",1,A)="*** TOP OF NEW PAGE ***"
"RTN","IBCEQ1A",179,0)
 .. S A=A+1,^TMP($J,"SENDMSG",1,A)=" "
"RTN","IBCEQ1A",180,0)
 ;
"RTN","IBCEQ1A",181,0)
 W TEXT
"RTN","IBCEQ1A",182,0)
 I $G(^TMP($J,"SENDMSG")),'NOT S A=A+1,^TMP($J,"SENDMSG",1,A)=TEXT
"RTN","IBCEQ1A",183,0)
 Q
"RTN","IBCEQ1A",184,0)
 ;
"RTN","IBCERP6")
0^14^B24261779^B24267407
"RTN","IBCERP6",1,0)
IBCERP6 ;ALB/JEH - MRA/EDI CLAIMS READY FOR EXTRACT ;12/10/99
"RTN","IBCERP6",2,0)
 ;;2.0;INTEGRATED BILLING;**137,211,155,348,349**;21-MAR-94;Build 46
"RTN","IBCERP6",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCERP6",4,0)
 ;
"RTN","IBCERP6",5,0)
EN ;Entry point from option
"RTN","IBCERP6",6,0)
 W !!,"This report provides a list of claims held in a"
"RTN","IBCERP6",7,0)
 W !,"Ready for Extract status.  Users can select all bills"
"RTN","IBCERP6",8,0)
 W !,"in a Ready for extract status or only those trapped due to"
"RTN","IBCERP6",9,0)
 W !,"the EDI/MRA Parameters being turned off."
"RTN","IBCERP6",10,0)
 ;
"RTN","IBCERP6",11,0)
 S IBQUIT=0 D SELECT I IBQUIT G ENQ1
"RTN","IBCERP6",12,0)
 S IBQUIT=0 D PARAM I IBQUIT G ENQ1
"RTN","IBCERP6",13,0)
 ;
"RTN","IBCERP6",14,0)
 W !!,"This report requires a 132 column printer.",!!
"RTN","IBCERP6",15,0)
 ; - Ask device
"RTN","IBCERP6",16,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC
"RTN","IBCERP6",17,0)
 S %ZIS="QM" D ^%ZIS G:POP ENQ1
"RTN","IBCERP6",18,0)
 I $D(IO("Q")) D  G ENQ1
"RTN","IBCERP6",19,0)
 .S ZTRTN="BLD^IBCERP6",ZTDESC="IB - EDI/MRA Claims in Waiting Transmission Status"
"RTN","IBCERP6",20,0)
 .S ZTSAVE("IB*")=""
"RTN","IBCERP6",21,0)
 .D ^%ZTLOAD
"RTN","IBCERP6",22,0)
 .W !!,$S($D(ZTSK):"Your task number"_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","IBCERP6",23,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBCERP6",24,0)
 U IO
"RTN","IBCERP6",25,0)
 ;
"RTN","IBCERP6",26,0)
BLD ; - Tasked entry point
"RTN","IBCERP6",27,0)
 ;
"RTN","IBCERP6",28,0)
 N IBSTAT,IBILL,IBREC,IBIFN,IBSTAT,IBVSIT,IBCAT,IBI,IBINS,IBPREC,IBEVDT,IBTYP,IBPG,IBCHK
"RTN","IBCERP6",29,0)
 K ^TMP("IBCERP6",$J)
"RTN","IBCERP6",30,0)
 S (IBI,IBIFN)=0 F  S IBI=$O(^IBA(364,"ASTAT","X",IBI)) Q:'IBI  S IBIFN=+$G(^IBA(364,IBI,0)) D
"RTN","IBCERP6",31,0)
 .S IBQUIT=0
"RTN","IBCERP6",32,0)
 .S IBSTAT=$$WNRBILL^IBEFUNC(IBIFN)
"RTN","IBCERP6",33,0)
 .I IBSEL=2 D  I IBQUIT Q
"RTN","IBCERP6",34,0)
 ..I 'IBSTAT,13[IBPARAM S IBQUIT=1 Q
"RTN","IBCERP6",35,0)
 ..I IBSTAT,23[IBPARAM S IBQUIT=1 Q
"RTN","IBCERP6",36,0)
 .S IBSTAT=$S(IBSTAT:"MRA",1:"EDI")
"RTN","IBCERP6",37,0)
 .S IBREC=$G(^DGCR(399,+IBIFN,0))
"RTN","IBCERP6",38,0)
 .S IBVSIT=$S($$INPAT^IBCEF(IBIFN,1)=1:"INP",1:"OPT")
"RTN","IBCERP6",39,0)
 .S IBCAT=$S($$FT^IBCEF(IBIFN)=3:"UB04",1:"1500")
"RTN","IBCERP6",40,0)
 .S IBILL=$$BN1^PRCAFN(IBIFN)
"RTN","IBCERP6",41,0)
 .S IBINS=$P($G(^DIC(36,+$$CURR^IBCEF2(IBIFN),0)),U)
"RTN","IBCERP6",42,0)
 .S IBPREC=$$PT^IBEFUNC(+$P(IBREC,U,2))
"RTN","IBCERP6",43,0)
 .S IBEVDT=$P($G(^DGCR(399,IBIFN,"U")),U) ;Statement from date
"RTN","IBCERP6",44,0)
 .;S IBTYP=$P(IBREC,U,24)_U_$P($G(^DGCR(399.1,+$P(IBREC,U,25),0)),U)_U_$P(IBREC,U,26)
"RTN","IBCERP6",45,0)
 .S IBTYP=$$GET1^DIQ(399,IBIFN,.24)_U_$$GET1^DIQ(399,IBIFN,.25)_U_$$GET1^DIQ(399,IBIFN,.26)
"RTN","IBCERP6",46,0)
 .S ^TMP("IBCERP6",$J,IBSTAT,IBILL)=IBILL_U_IBVSIT_U_IBCAT_U_$P(IBPREC,U)_U_$E($P(IBPREC,U,2),8,11)_U_IBEVDT_U_IBTYP_U_IBINS
"RTN","IBCERP6",47,0)
 ;
"RTN","IBCERP6",48,0)
PRINT ;Prints report
"RTN","IBCERP6",49,0)
 S (IBQUIT,IBPG,IBEDI,IBMRA,IBTOT)=0 D HDR
"RTN","IBCERP6",50,0)
 I '$D(^TMP("IBCERP6",$J)) W !!,"There are no "_$S(IBPARAM=1:"EDI",IBPARAM=2:"MRA",1:"EDI/MRA")_" records"_$S(IBSEL=2:" trapped",1:"")_" in a ready for extract status" G ENQ1
"RTN","IBCERP6",51,0)
 S IBSTAT="" F  S IBSTAT=$O(^TMP("IBCERP6",$J,IBSTAT)) Q:IBSTAT=""!(IBQUIT=1)  D
"RTN","IBCERP6",52,0)
 .S IBILL="" F  S IBILL=$O(^TMP("IBCERP6",$J,IBSTAT,IBILL)) Q:IBILL=""!(IBQUIT=1)  S IBREC=^(IBILL)  D
"RTN","IBCERP6",53,0)
 ..I ($Y+5)>IOSL D  I IBQUIT Q
"RTN","IBCERP6",54,0)
 ...D ASK I IBQUIT Q
"RTN","IBCERP6",55,0)
 ...D HDR
"RTN","IBCERP6",56,0)
 ..;
"RTN","IBCERP6",57,0)
 ..W !,?2,$P(IBREC,U),?15,$P(IBREC,U,2),?22,$P(IBREC,U,3)
"RTN","IBCERP6",58,0)
 ..W ?28,$E($P(IBREC,U,4),1,20),?50,$P(IBREC,U,5)
"RTN","IBCERP6",59,0)
 ..W ?57,$$FMTE^XLFDT($P(IBREC,U,6)),?73,$E($P(IBREC,U,7),1,8)_", "_$E($P(IBREC,U,8),1,3)_", "_$E($P(IBREC,U,9),1,16),?110,$E($P(IBREC,U,10),1,20)
"RTN","IBCERP6",60,0)
 ..I IBSTAT="EDI" S IBEDI=IBEDI+1
"RTN","IBCERP6",61,0)
 ..E  S IBMRA=IBMRA+1
"RTN","IBCERP6",62,0)
 ..S IBTOT=IBTOT+1
"RTN","IBCERP6",63,0)
 W !!
"RTN","IBCERP6",64,0)
 I IBEDI>0 W !,?3,"Total EDI Bills ",IBEDI
"RTN","IBCERP6",65,0)
 I IBMRA>0 W !,?3,"Total MRA Bills ",IBMRA
"RTN","IBCERP6",66,0)
 W !!,?3,"Total bills ",IBTOT
"RTN","IBCERP6",67,0)
 K ^TMP("IBCERP6",$J)
"RTN","IBCERP6",68,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBCERP6",69,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","IBCERP6",70,0)
ENQ1 K IBPARAM,IBQUIT,IBSEL,Y,IBEDI,IBMRA,IBTOT Q
"RTN","IBCERP6",71,0)
 ;
"RTN","IBCERP6",72,0)
PARAM ;
"RTN","IBCERP6",73,0)
 S IBPARAM=$P($G(^IBE(350.9,1,8)),U,10) ;Get MRA/EDI site parameter setting
"RTN","IBCERP6",74,0)
 I IBPARAM="" D
"RTN","IBCERP6",75,0)
 .W !!,"Your EDI/MRA site parameter setting is incomplete."
"RTN","IBCERP6",76,0)
 .W !,"Please contact your coordinator.",!
"RTN","IBCERP6",77,0)
 .S IBQUIT=1
"RTN","IBCERP6",78,0)
 ;
"RTN","IBCERP6",79,0)
 I IBSEL=2,IBPARAM=3 D
"RTN","IBCERP6",80,0)
 .W !!,"Your site parameters are set to allow both EDI and MRA"
"RTN","IBCERP6",81,0)
 .W !,"transmissions.  There is no need to run this report.",!
"RTN","IBCERP6",82,0)
 .S IBQUIT=1
"RTN","IBCERP6",83,0)
 Q
"RTN","IBCERP6",84,0)
 ;
"RTN","IBCERP6",85,0)
HDR ;Prints report heading
"RTN","IBCERP6",86,0)
 ; IB*2.0*211
"RTN","IBCERP6",87,0)
 ;I $E(IOST,1,2)="C-" W @IOF,*13
"RTN","IBCERP6",88,0)
 I $S(IBPG:1,1:$E(IOST,1,2)="C-") W @IOF,*13
"RTN","IBCERP6",89,0)
 S IBPG=IBPG+1
"RTN","IBCERP6",90,0)
 W !!,?45,$S(IBSEL=2:"Trapped ",1:"")_" Claims Ready for Extract",?90,$$FMTE^XLFDT(DT),?110,"Page: ",IBPG
"RTN","IBCERP6",91,0)
 W !!,?15,"Inpt/",?23,"Inst/",!,?4,"Bill #",?15,"Opt",?23,"Prof",?32,"Name"
"RTN","IBCERP6",92,0)
 W ?51,"SSN",?57,"Statement Date",?89,"Type",?110,"Insurance Co."
"RTN","IBCERP6",93,0)
 W !,$TR($J("",IOM)," ","=")
"RTN","IBCERP6",94,0)
 Q
"RTN","IBCERP6",95,0)
 ;
"RTN","IBCERP6",96,0)
ASK ;
"RTN","IBCERP6",97,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","IBCERP6",98,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","IBCERP6",99,0)
 S DIR(0)="E" D ^DIR
"RTN","IBCERP6",100,0)
 I ($D(DIRUT))!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCERP6",101,0)
 Q
"RTN","IBCERP6",102,0)
 ;
"RTN","IBCERP6",103,0)
SELECT ;Report selection
"RTN","IBCERP6",104,0)
 N DIR,DIROUT,DTOUT,DUOUT,DTOUT
"RTN","IBCERP6",105,0)
 S IBSEL=0
"RTN","IBCERP6",106,0)
 W !!  S DIR("A",1)="Do you want to print a list of:"
"RTN","IBCERP6",107,0)
 S DIR("A",2)=""
"RTN","IBCERP6",108,0)
 S DIR("A",3)="     1 - All bills in Ready for Extract status"
"RTN","IBCERP6",109,0)
 S DIR("A",4)="     2 - Bills trapped due to EDI/MRA parameter being turned off"
"RTN","IBCERP6",110,0)
 S DIR("A",5)=""
"RTN","IBCERP6",111,0)
 S DIR(0)="SAXB^1:All bills;2:Trapped bills"
"RTN","IBCERP6",112,0)
 W !
"RTN","IBCERP6",113,0)
 S DIR("A")="Select Number: ",DIR("B")=1
"RTN","IBCERP6",114,0)
 D ^DIR
"RTN","IBCERP6",115,0)
 I +Y'>0 S IBQUIT=1 Q
"RTN","IBCERP6",116,0)
 S IBSEL=+Y
"RTN","IBCERP6",117,0)
 Q
"RTN","IBCEU")
0^15^B57127468^B56578533
"RTN","IBCEU",1,0)
IBCEU ;ALB/TMP - EDI UTILITIES ;02-OCT-96
"RTN","IBCEU",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,207,232,349**;21-MAR-94;Build 46
"RTN","IBCEU",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEU",4,0)
 ; DBIA SUPPORTED REF: GET^XUA4A72 = 1625
"RTN","IBCEU",5,0)
 ; DBIA SUPPORTED REF: $$ESBLOCK^XUSESIG1 = 1557
"RTN","IBCEU",6,0)
 ;
"RTN","IBCEU",7,0)
TESTPT(DFN) ; Determine if pt is test pt
"RTN","IBCEU",8,0)
 ; Returns 1 if a test pt, 0 if not
"RTN","IBCEU",9,0)
 Q $E($P($G(^DPT(+DFN,0)),U,9),1,5)="00000"
"RTN","IBCEU",10,0)
 ;
"RTN","IBCEU",11,0)
MAINPRV(IBIFN) ; Returns name^id^ien^type code of 'main' prov on bill IBIFN
"RTN","IBCEU",12,0)
 N IBPRV,IBCOB,IBQ,Z
"RTN","IBCEU",13,0)
 D GETPRV(IBIFN,"3,4",.IBPRV)
"RTN","IBCEU",14,0)
 S IBQ="",IBCOB=$$COBN^IBCEF(IBIFN)
"RTN","IBCEU",15,0)
 F Z=3,4 I $G(IBPRV(Z,1))'="" D  Q
"RTN","IBCEU",16,0)
 . S IBQ=IBPRV(Z,1),$P(IBQ,U,4)=Z
"RTN","IBCEU",17,0)
 . I $G(IBPRV(Z,1,IBCOB))'="" S $P(IBQ,U,2)=IBPRV(Z,1,IBCOB)
"RTN","IBCEU",18,0)
 Q IBQ
"RTN","IBCEU",19,0)
 ;
"RTN","IBCEU",20,0)
PRVOK(VAL,IBIFN) ; Check bill form & prov function agree
"RTN","IBCEU",21,0)
 ; VAL = internal value of prov function
"RTN","IBCEU",22,0)
 ;
"RTN","IBCEU",23,0)
 ; OTHER(9) valid on institutional (UB-04) bills
"RTN","IBCEU",24,0)
 ; REFERRING(1) valid only on professional (1500) claims
"RTN","IBCEU",25,0)
 ; Valid functions by bill types
"RTN","IBCEU",26,0)
 ;  OUTPATIENT/UB-04: ATTENDING(4), OPERATING(2)-BILL TYPE 83X
"RTN","IBCEU",27,0)
 ;                     AND A PRIN. PROC EXISTS
"RTN","IBCEU",28,0)
 ;  INPATIENT/UB-04 : ATTENDING(4), OPERATING(2)-BILL TYPE 11X
"RTN","IBCEU",29,0)
 ;                     AND A PRIN. PROC EXISTS
"RTN","IBCEU",30,0)
 ;  OUTPATIENT/CMS-1500 : RENDERING(3), SUPERVISING(5)
"RTN","IBCEU",31,0)
 ;  INPATIENT/CMS-1500  : RENDERING(3), SUPERVISING(5)
"RTN","IBCEU",32,0)
 ;
"RTN","IBCEU",33,0)
 N OK,IBUB
"RTN","IBCEU",34,0)
 S VAL=$$UP^XLFSTR(VAL)
"RTN","IBCEU",35,0)
 S OK=$S(VAL'="":1,1:0)
"RTN","IBCEU",36,0)
 G:'OK!'$G(IBIFN) PRVQ
"RTN","IBCEU",37,0)
 ;
"RTN","IBCEU",38,0)
 S IBUB=($$FT^IBCEF(IBIFN)=3) ; 1 if UB-04 ; 0 if CMS-1500
"RTN","IBCEU",39,0)
 ;
"RTN","IBCEU",40,0)
 I VAL=1 S:IBUB OK=0 G PRVQ
"RTN","IBCEU",41,0)
 ;
"RTN","IBCEU",42,0)
 I "249"[VAL,'IBUB S OK=0 G PRVQ
"RTN","IBCEU",43,0)
 I $S(VAL=3:1,1:VAL=5),IBUB S OK=0 G PRVQ
"RTN","IBCEU",44,0)
 ;
"RTN","IBCEU",45,0)
PRVQ Q OK
"RTN","IBCEU",46,0)
 ;
"RTN","IBCEU",47,0)
PRVOK1(VAL,IBIFN) ; Check for both attending and rendering on bill
"RTN","IBCEU",48,0)
 N OK
"RTN","IBCEU",49,0)
 S OK=1
"RTN","IBCEU",50,0)
 I $S("34"'[VAL:0,1:$D(^DGCR(399,IBIFN,"PRV","B",$S(VAL=3:4,1:3)))) D EN^DDIOL($S(VAL=3:"ATTENDING",1:"RENDERING")_" ALREADY EXISTS - CAN'T HAVE BOTH ON ONE BILL") S OK=0
"RTN","IBCEU",51,0)
 Q OK
"RTN","IBCEU",52,0)
 ;
"RTN","IBCEU",53,0)
SPEC(IBPRV,IBDT) ; Returns spec code for vp ien IBPRV from file 355.9
"RTN","IBCEU",54,0)
 ;  (for new person entries, as of date in IBDT)
"RTN","IBCEU",55,0)
 ; DBIA 1625
"RTN","IBCEU",56,0)
 N IBSPEC
"RTN","IBCEU",57,0)
 S:'$G(IBDT) IBDT=DT
"RTN","IBCEU",58,0)
 I IBPRV'["IBA(355.93" S IBSPEC=$S(IBPRV:$P($$GET^XUA4A72(+IBPRV,IBDT),U,8),1:"") ; VA
"RTN","IBCEU",59,0)
 I IBPRV["IBA(355.93" S IBSPEC=$P($G(^IBA(355.93,+IBPRV,0)),U,4) ; Non-VA
"RTN","IBCEU",60,0)
 Q IBSPEC
"RTN","IBCEU",61,0)
 ;
"RTN","IBCEU",62,0)
CRED(IBPRV,IBIFN,IBPIEN,IBTYP) ; Returns prov credentials
"RTN","IBCEU",63,0)
 ; IBPRV = vp of provider for file 200 or 355.93
"RTN","IBCEU",64,0)
 ; IBIFN = bill ien in file 399 (optional)
"RTN","IBCEU",65,0)
 ; IBPIEN = prov ien - file 399.0222 (optional)
"RTN","IBCEU",66,0)
 ; IBTYP = the prov type
"RTN","IBCEU",67,0)
 ;
"RTN","IBCEU",68,0)
 N IBCRED
"RTN","IBCEU",69,0)
 S IBCRED=""
"RTN","IBCEU",70,0)
 I $G(IBIFN),'$D(^DGCR(399,IBIFN,"PRV",0)) G CREDQ
"RTN","IBCEU",71,0)
 I $G(IBIFN),($G(IBPIEN)!$G(IBTYP)) D
"RTN","IBCEU",72,0)
 . I '$G(IBPIEN) S IBPIEN=+$O(^DGCR(399,IBIFN,"PRV","B",IBTYP,0))
"RTN","IBCEU",73,0)
 . S IBCRED=$P($G(^DGCR(399,IBIFN,"PRV",IBPIEN,0)),U,3)
"RTN","IBCEU",74,0)
 I $G(IBPRV),IBCRED="" D
"RTN","IBCEU",75,0)
 . I IBPRV'["IBA(355.93" S IBCRED=$P($$ESBLOCK^XUSESIG1(+IBPRV),U,2)
"RTN","IBCEU",76,0)
 . I IBPRV["IBA(355.93" S IBCRED=$P($G(^IBA(355.93,+IBPRV,0)),U,3)
"RTN","IBCEU",77,0)
CREDQ Q IBCRED
"RTN","IBCEU",78,0)
 ;
"RTN","IBCEU",79,0)
GETPRV(IBIFN,IBTYP,IBPRV) ; Returns prov(s) of type(s) IBTYP for
"RTN","IBCEU",80,0)
 ;  bill ien IBIFN.
"RTN","IBCEU",81,0)
 ;  IBTYP = prov types needed, separated by ',' or ALL
"RTN","IBCEU",82,0)
 ; 
"RTN","IBCEU",83,0)
 ; OUTPUT:
"RTN","IBCEU",84,0)
 ;  IBPRV array: IBPRV(type)= 1 if prov is from old prov flds
"RTN","IBCEU",85,0)
 ;               IBPRV(type,ct)=name^current COB id^vp provider ien^cred
"RTN","IBCEU",86,0)
 ;               IBPRV(type,ct,seq)=COB seq specific id
"RTN","IBCEU",87,0)
 ;               IBPRV(type)=default nm^def id
"RTN","IBCEU",88,0)
 ;               IBPRV(type,"NOTOPT")= defined if a required prov type
"RTN","IBCEU",89,0)
 ;
"RTN","IBCEU",90,0)
 N IB,IBCT,IBD,IBY,IBZ,IBMRAND,IBID,IBWNR,IBPNM,Z ;,IBZFID
"RTN","IBCEU",91,0)
 ;S IBZFID=""
"RTN","IBCEU",92,0)
 D F^IBCEF("N-CURRENT INS POLICY TYPE","IBZ",,IBIFN)
"RTN","IBCEU",93,0)
 ;I IBZ="CI" D F^IBCEF("N-FEDERAL TAX ID","IBZFID",,IBIFN) S IBZFID=$TR(IBZFID,"-")
"RTN","IBCEU",94,0)
 S IBPRV=U_$G(IBZ),IBY=0
"RTN","IBCEU",95,0)
 S IBMRAND=$$MCRONBIL^IBEFUNC(IBIFN)
"RTN","IBCEU",96,0)
 I IBMRAND D
"RTN","IBCEU",97,0)
 . F Z=1:1:3,5,6,7,8,9 S:Z=3&($$FT^IBCEF(IBIFN)=3) Z=4 S IBPRV(Z)=$S(Z=3!(Z=4):"DEPT VETERANS AFFAIRS",1:"")_"^VAD000"
"RTN","IBCEU",98,0)
 . I '$$INPAT^IBCEF(IBIFN,1),$$FT^IBCEF(IBIFN)=3 S IBPRV(4,1)="^SLF000"
"RTN","IBCEU",99,0)
 ;
"RTN","IBCEU",100,0)
 I '$D(^DGCR(399,+IBIFN,"PRV",0)) D  G GETQ
"RTN","IBCEU",101,0)
 . N IBALL
"RTN","IBCEU",102,0)
 . S IBALL=(IBTYP="ALL")
"RTN","IBCEU",103,0)
 . I IBTYP[4!IBALL S:$P($G(^DGCR(399,+IBIFN,"U1")),U,13)'="" IBPRV(4,1)=$P(^("U1"),U,13),IBPRV(4)=1 Q:IBTYP=4
"RTN","IBCEU",104,0)
 . I IBTYP[3!IBALL S:$P($G(^DGCR(399,+IBIFN,"UF2")),U)'="" IBPRV(3,1)=$P(^("UF2"),U),IBPRV(3)=1 Q:IBTYP=3
"RTN","IBCEU",105,0)
 . I IBTYP[9!IBALL S:$P($G(^DGCR(399,+IBIFN,"U1")),U,14)'="" IBPRV(9,1)=$P(^("U1"),U,14),IBPRV(9)=1
"RTN","IBCEU",106,0)
 ;
"RTN","IBCEU",107,0)
 S IBID=4+$$COBN^IBCEF(IBIFN),IBWNR=$$WNRBILL^IBEFUNC(IBIFN)
"RTN","IBCEU",108,0)
 F IBZ=1:1:$S(IBTYP="ALL":99,1:$L(IBTYP,",")) S (IBCT,IB)=0,IBY=$S(IBTYP'="ALL":$P(IBTYP,",",IBZ),1:$O(^DGCR(399,+IBIFN,"PRV","B",IBY))) Q:IBY=""  F  S IB=$O(^DGCR(399,+IBIFN,"PRV","B",IBY,IB)) Q:'IB  D
"RTN","IBCEU",109,0)
 . S IBCT=IBCT+1
"RTN","IBCEU",110,0)
 . S IBD=$G(^DGCR(399,+IBIFN,"PRV",IB,0))
"RTN","IBCEU",111,0)
 . Q:'$P(IBD,U,2)
"RTN","IBCEU",112,0)
 . S IBPNM=$$EXPAND^IBTRE(399.0222,.02,$P(IBD,U,2))
"RTN","IBCEU",113,0)
 . I IBWNR Q:'$D(IBPRV(IBY))  S $P(IBD,U,IBID)=$P(IBPRV(IBY),U,2)
"RTN","IBCEU",114,0)
 . S IBPRV(IBY,IBCT)=IBPNM_U_$S($P(IBD,U,IBID)'="":$P(IBD,U,IBID),$P($G(IBPRV(IBY)),U,2)'="":$P(IBPRV(IBY),U,2),1:$P($$DEFID^IBCEF74(IBIFN,IB),U,IBID-4))_U_$P(IBD,U,2)
"RTN","IBCEU",115,0)
 . S $P(IBPRV(IBY,IBCT),U,4)=$$CRED($P(IBPRV(IBY,IBCT),U,3),IBIFN,$S($P(IBD,U,3)'=""!'$P(IBPRV(IBY,IBCT),U,3):IB,1:""))
"RTN","IBCEU",116,0)
 . F Z=1:1:3 D
"RTN","IBCEU",117,0)
 .. ;I IBZFID'="",'$$INPAT^IBCEF(IBIFN,1),$P(IBPRV(IBY,IBCT),U,2)="SLF000" S IBZFID=""
"RTN","IBCEU",118,0)
 .. ;I $S(Z=1:1,1:$D(^DGCR(399,IBIFN,"I"_Z))) S IBPRV(IBY,IBCT,Z)=$S($G(IBZFID)'="":IBZFID,$P(IBD,U,Z+4)'="":$P(IBD,U,Z+4),1:"")
"RTN","IBCEU",119,0)
 .. I $S(Z=1:1,1:$D(^DGCR(399,IBIFN,"I"_Z))) S IBPRV(IBY,IBCT,Z)=$S($P(IBD,U,Z+4)'="":$P(IBD,U,Z+4),1:$P($$DEFID^IBCEF74(IBIFN,IB),U,Z))
"RTN","IBCEU",120,0)
GETQ D NEEDPRV(IBIFN,IBTYP,.IBPRV)
"RTN","IBCEU",121,0)
 Q
"RTN","IBCEU",122,0)
 ;
"RTN","IBCEU",123,0)
NEEDPRV(IBIFN,IBTYP,IBPRV) ; Check for needed prov
"RTN","IBCEU",124,0)
 ; If needed, not entered, insert defaults for MCR only
"RTN","IBCEU",125,0)
 N IB0,IBINP,IBFT,IBMRAND,IBTOB
"RTN","IBCEU",126,0)
 S IB0=$G(^DGCR(399,+IBIFN,0))
"RTN","IBCEU",127,0)
 S IBFT=($$FT^IBCEF(IBIFN)=3),IBINP=$$INPAT^IBCEF(IBIFN,1),IBTOB=$$TOB^IBCBB(IB0)
"RTN","IBCEU",128,0)
 ; Only allow defaults for MCR
"RTN","IBCEU",129,0)
 S IBMRAND=$$WNRBILL^IBEFUNC(IBIFN) ;$$MCRONBIL^IBEFUNC(IBIFN)
"RTN","IBCEU",130,0)
 ;
"RTN","IBCEU",131,0)
 I IBTYP="ALL"!((IBTYP_",")["2,") D:IBFT
"RTN","IBCEU",132,0)
 . ; only for bill type inpt - 11X, outpt - 83X
"RTN","IBCEU",133,0)
 . Q:$S(IBINP:$E(IBTOB,1,2)'="11",1:$E(IBTOB,1,2)'="83")
"RTN","IBCEU",134,0)
 . ; UB-04 bill includes HCPCS procs - operating phys required
"RTN","IBCEU",135,0)
 . N Z
"RTN","IBCEU",136,0)
 . S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"CP",Z)) Q:'Z  I $P($G(^(Z,0)),U)["ICP" D  Q
"RTN","IBCEU",137,0)
 .. S IBPRV(2,"NOTOPT")=1
"RTN","IBCEU",138,0)
 .. Q:'IBMRAND
"RTN","IBCEU",139,0)
 .. I '$O(IBPRV(2,0)) S IBPRV(2,"REQ")=1,IBPRV(2,1)=$G(IBPRV(2))
"RTN","IBCEU",140,0)
 ;
"RTN","IBCEU",141,0)
 I IBTYP="ALL"!((IBTYP_",")["3,") D:'IBFT
"RTN","IBCEU",142,0)
 . ; if a CMS-1500 bill, rendering is required
"RTN","IBCEU",143,0)
 . S IBPRV(3,"NOTOPT")=1
"RTN","IBCEU",144,0)
 . Q:'IBMRAND
"RTN","IBCEU",145,0)
 . I '$O(IBPRV(3,0)) S IBPRV(3,1)=$G(IBPRV(3)),IBPRV(3,"REQ")=1
"RTN","IBCEU",146,0)
 ;
"RTN","IBCEU",147,0)
 I IBTYP="ALL"!((IBTYP_",")["4,") D:IBFT
"RTN","IBCEU",148,0)
 . ; if a UB-04, attending required
"RTN","IBCEU",149,0)
 . S IBPRV(4,"NOTOPT")=1
"RTN","IBCEU",150,0)
 . Q:'IBMRAND
"RTN","IBCEU",151,0)
 . I '$O(IBPRV(4,0)) S IBPRV(4,1)=$G(IBPRV(4)),IBPRV(4,"REQ")=1
"RTN","IBCEU",152,0)
 Q
"RTN","IBCEU",153,0)
 ;
"RTN","IBCEU",154,0)
CKPROV(IBIFN,IBTYP,IBVAL) ; Checks if prov of type IBTYP in 'PRV' node
"RTN","IBCEU",155,0)
 ; of bill IBIFN
"RTN","IBCEU",156,0)
 ; If IBVAL = 1, skips the check for an existing provider, just looks
"RTN","IBCEU",157,0)
 ;               for existence of the function itself
"RTN","IBCEU",158,0)
 N OK,IBFT,Z,R
"RTN","IBCEU",159,0)
 S OK=0,IBFT=$$FT^IBCEF(IBIFN)
"RTN","IBCEU",160,0)
 S Z=+$O(^DGCR(399,IBIFN,"PRV","B",+IBTYP,0))
"RTN","IBCEU",161,0)
 I $G(^DGCR(399,IBIFN,"PRV",Z,0))'="" D
"RTN","IBCEU",162,0)
 . ; Only outpt UB-04 can have SLF000 as prov ID with no name
"RTN","IBCEU",163,0)
 . I IBFT=3,'$$INPAT^IBCEF(IBIFN,1),$P(^DGCR(399,IBIFN,"PRV",Z,0),U,2)="",$P(^(0),U,5)="SLF000" S OK=1 Q
"RTN","IBCEU",164,0)
 . I '$G(IBVAL) Q:$P(^DGCR(399,IBIFN,"PRV",Z,0),U,2)=""
"RTN","IBCEU",165,0)
 . S OK=1
"RTN","IBCEU",166,0)
 Q OK
"RTN","IBCEU",167,0)
 ;
"RTN","IBCEU",168,0)
XFER(IBQ) ; Transfer DILIST
"RTN","IBCEU",169,0)
 ; IBQ = # of entries already found
"RTN","IBCEU",170,0)
 N Z,IBZ
"RTN","IBCEU",171,0)
 S (Z,IBZ)=0
"RTN","IBCEU",172,0)
 F  S Z=$O(^TMP("DILIST",$J,1,Z)) Q:'Z  S IBZ=IBZ+1,^TMP("IBLIST",$J,1,IBZ+IBQ)=^TMP("DILIST",$J,1,Z),^TMP("IBLIST",$J,2,IBZ+IBQ)=^TMP("DILIST",$J,2,Z) M ^TMP("IBLIST",$J,"ID",IBZ+IBQ)=^TMP("DILIST",$J,"ID",Z)
"RTN","IBCEU",173,0)
 ;
"RTN","IBCEU",174,0)
 I $D(^TMP("DILIST",$J,0)) S ^TMP("IBLIST",$J,0)=^TMP("DILIST",$J,0)
"RTN","IBCEU",175,0)
 S $P(^TMP("IBLIST",$J,0),U)=IBQ+IBZ
"RTN","IBCEU",176,0)
 Q
"RTN","IBCEU",177,0)
 ;
"RTN","IBCEU",178,0)
DATE(X) ; Convert date X in YYYYMMDD or YYMMDD to FM format
"RTN","IBCEU",179,0)
 ; FP = flag to indicate if past or future dates are expected
"RTN","IBCEU",180,0)
 N %DT,Y
"RTN","IBCEU",181,0)
 I $L(X)=8,$E(X,1,4)<2100,$E(X,5,6)<13,$E(X,7,8)<32 S X=$E(X,1,4)-1700_$E(X,5,8) G DTQ
"RTN","IBCEU",182,0)
 I $L(X)=6,$E(X,3,4)<13,$E(X,5,6)<32 S X=$E(X,3,4)_"/"_$E(X,5,6)_"/"_$E(X,1,2),%DT="N" D ^%DT I Y>0 S X=Y
"RTN","IBCEU",183,0)
DTQ Q X
"RTN","IBCEU",184,0)
 ;
"RTN","IBCEU",185,0)
BCLASS(IBIFN) ; Returns actual bill classif. code from ptr fld
"RTN","IBCEU",186,0)
 ;  .25 in file 399 for bill ien IBIFN
"RTN","IBCEU",187,0)
 Q $P($G(^DGCR(399.1,+$P($G(^DGCR(399,IBIFN,0)),U,25),0)),U,2)
"RTN","IBCEU",188,0)
 ;
"RTN","IBCEU",189,0)
ADMHR(IBIFN,IBDTTM) ; Extract admit hr from admit dt/tm
"RTN","IBCEU",190,0)
 ;  Default 00 if no time and bill is 11X or 18X
"RTN","IBCEU",191,0)
 N TM
"RTN","IBCEU",192,0)
 S TM=$P(IBDTTM,".",2)
"RTN","IBCEU",193,0)
 I TM="","18"[$$BCLASS(IBIFN),$P($G(^DGCR(399,IBIFN,0)),U,24)=1 S TM="00"
"RTN","IBCEU",194,0)
 I TM'="",TM'="00" S TM=$E(TM_"0000",1,4)
"RTN","IBCEU",195,0)
 Q TM
"RTN","IBCEU",196,0)
 ;
"RTN","IBCEU",197,0)
OLAB(IBIFN) ; Returns 1 if bill IBIFN is outside lab
"RTN","IBCEU",198,0)
 N IBL,IBLAB
"RTN","IBCEU",199,0)
 S IBL=0
"RTN","IBCEU",200,0)
 S IBLAB=$P($G(^DGCR(399,IBIFN,"U2")),U,11)
"RTN","IBCEU",201,0)
 I IBLAB,"24"[IBLAB S IBL=1
"RTN","IBCEU",202,0)
 Q IBL
"RTN","IBCEU",203,0)
 ;
"RTN","IBCEU",204,0)
PSRV(IBIFN) ; Returns 1 if bill IBIFN has any purch services
"RTN","IBCEU",205,0)
 N IBZ,IBXDATA,IBXSAVE,Z
"RTN","IBCEU",206,0)
 S IBZ=0
"RTN","IBCEU",207,0)
 D F^IBCEF("N-HCFA 1500 PROCEDURES",,,IBIFN)
"RTN","IBCEU",208,0)
 S Z=0 F  S Z=$O(IBXSAVE("BOX24",Z)) Q:'Z  I $P(IBXSAVE("BOX24",Z),U,11) S IBZ=1 Q
"RTN","IBCEU",209,0)
 Q IBZ
"RTN","IBCEU",210,0)
 ;
"RTN","IBCEU",211,0)
SEQBILL(IBIFN) ; Returns the ien's of all bills in COB sequence for bill IBIFN
"RTN","IBCEU",212,0)
 ; Return value is "^" delimited: primary ien^secondary ien^tertiary ien
"RTN","IBCEU",213,0)
 N IBSEQ,Z
"RTN","IBCEU",214,0)
 S IBSEQ=$P($G(^DGCR(399,IBIFN,"M1")),U,5,7)
"RTN","IBCEU",215,0)
 S Z=$$COBN^IBCEF(IBIFN)
"RTN","IBCEU",216,0)
 I $P(IBSEQ,U,Z)="" S $P(IBSEQ,U,Z)=IBIFN
"RTN","IBCEU",217,0)
 Q IBSEQ
"RTN","IBCEU",218,0)
 ;
"RTN","IBCEU0")
0^16^B62153346^B61487243
"RTN","IBCEU0",1,0)
IBCEU0 ;ALB/TMP - EDI UTILITIES ;02-OCT-96
"RTN","IBCEU0",2,0)
 ;;2.0;INTEGRATED BILLING;**137,197,155,296,349**;21-MAR-94;Build 46
"RTN","IBCEU0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEU0",4,0)
 ;
"RTN","IBCEU0",5,0)
NOTECHG(IBDA,IBNTEXT) ; Enter who/when review stat change was entered
"RTN","IBCEU0",6,0)
 ; IBDA = ien of entry in file 361.1
"RTN","IBCEU0",7,0)
 ; IBNTEXT = array containing the lines of text to store if not using the
"RTN","IBCEU0",8,0)
 ;           default text  IBNTEXT = # of lines  IBNTEXT(#)=line text
"RTN","IBCEU0",9,0)
 N IBIEN,IBTEXT,DA,X,Y,DIC,DO,DLAYGO,DD
"RTN","IBCEU0",10,0)
 S DA(1)=IBDA,DIC="^IBM(361.1,"_DA(1)_",2,",DIC(0)="L",DLAYGO=361.121
"RTN","IBCEU0",11,0)
 S X=$$NOW^XLFDT
"RTN","IBCEU0",12,0)
 D FILE^DICN K DIC,DD,DO,DLAYGO
"RTN","IBCEU0",13,0)
 Q:Y'>0
"RTN","IBCEU0",14,0)
 S DA(2)=DA(1),DA(1)=+Y,IBIEN=DA(1)_","_DA(2)_","
"RTN","IBCEU0",15,0)
 I $G(IBNTEXT) D
"RTN","IBCEU0",16,0)
 . M IBTEXT=IBNTEXT
"RTN","IBCEU0",17,0)
 E  D
"RTN","IBCEU0",18,0)
 . S IBTEXT(1)="REVIEW STATUS CHANGED TO '"_$$EXTERNAL^DILFD(361.1,.2,,$P(^IBM(361.1,DA(2),0),U,20))_"'  BY: "_$$EXTERNAL^DILFD(361.121,.02,,+$G(DUZ))
"RTN","IBCEU0",19,0)
 D WP^DIE(361.121,IBIEN,.03,,"IBTEXT") K ^TMP("DIERR",$J)
"RTN","IBCEU0",20,0)
 Q
"RTN","IBCEU0",21,0)
 ;
"RTN","IBCEU0",22,0)
LOCK(IBFILE,IBREC) ; Lock record # IBREC in file #IBFILE (361 or 361.1)
"RTN","IBCEU0",23,0)
 N OK
"RTN","IBCEU0",24,0)
 S OK=0
"RTN","IBCEU0",25,0)
 L +^IBM(IBFILE,IBREC):3 I $T S OK=1
"RTN","IBCEU0",26,0)
 I 'OK D
"RTN","IBCEU0",27,0)
 . W !,"Another user has locked this record - try again later"
"RTN","IBCEU0",28,0)
 . D PAUSE^VALM1
"RTN","IBCEU0",29,0)
 Q OK
"RTN","IBCEU0",30,0)
 ;
"RTN","IBCEU0",31,0)
UNLOCK(IBFILE,IBREC) ; Unlock record # IBREC in file #IBFILE
"RTN","IBCEU0",32,0)
 I $G(IBREC) L -^IBM(IBFILE,IBREC)
"RTN","IBCEU0",33,0)
 Q
"RTN","IBCEU0",34,0)
 ;
"RTN","IBCEU0",35,0)
MSTAT ; Enter reviewed by selected range
"RTN","IBCEU0",36,0)
 N IBDAX,IBA,IBCLOSE,IBLOOK,IBOK,IBSTOP,IBREBLD,IBCLOK,DA,DIR,X,Y,DIE,DR
"RTN","IBCEU0",37,0)
 D FULL^VALM1
"RTN","IBCEU0",38,0)
 D SEL^IBCECSA4(.IBDAX)
"RTN","IBCEU0",39,0)
 S IBREBLD=0
"RTN","IBCEU0",40,0)
 I $O(IBDAX(""))="" G MSTATQ
"RTN","IBCEU0",41,0)
 S DIR("?,1")="ONLY SELECT TO CLOSE THE TRANSMIT RECORDS IF YOU KNOW THESE ARE THE FINAL",DIR("?",2)="  ELECTRONIC MESSAGES YOU WILL RECEIVE FOR ALL THE BILLS REFERENCED BY",DIR("?")="  THESE MESSAGES"
"RTN","IBCEU0",42,0)
 S DIR(0)="YA",DIR("A",1)="DO YOU WANT TO AUTOMATICALLY CLOSE THE TRANSMIT RECORDS FOR ANY MESSAGES",DIR("A")=" THAT AREN'T REJECTS?: ",DIR("B")="NO" W ! D ^DIR K DIR W !
"RTN","IBCEU0",43,0)
 G:$D(DIRUT) MSTATQ
"RTN","IBCEU0",44,0)
 S IBCLOSE=(Y=1)
"RTN","IBCEU0",45,0)
 S DIR(0)="YA",DIR("A")="DO YOU WANT TO SEE EACH MESSAGE BEFORE MARKING IT REVIEWED?: ",DIR("B")="NO"
"RTN","IBCEU0",46,0)
 S DIR("?",1)="IF YOU OPT TO SEE EACH MESSAGE, YOU CAN CONTROL WHETHER OR NOT THE MESSAGE",DIR("?",2)="  IS MARKED AS REVIEWED"
"RTN","IBCEU0",47,0)
 I 'IBCLOSE S DIR("?")=DIR("?",2) K DIR("?",2)
"RTN","IBCEU0",48,0)
 I IBCLOSE S DIR("?",2)=DIR("?",2)_" AND, FOR NON-REJECTS, WHETHER OR NOT TO CLOSE THE",DIR("?")="  TRANSMIT RECORD FOR THE BILL"
"RTN","IBCEU0",49,0)
 W ! D ^DIR K DIR W !
"RTN","IBCEU0",50,0)
 G:$D(DIRUT) MSTATQ
"RTN","IBCEU0",51,0)
 S IBLOOK=(Y=1)
"RTN","IBCEU0",52,0)
 S IBDAX=0,IBSTOP=0
"RTN","IBCEU0",53,0)
 F  S IBDAX=+$O(IBDAX(IBDAX)) Q:'IBDAX  D  Q:IBSTOP
"RTN","IBCEU0",54,0)
 . S IBA=$G(IBDAX(IBDAX))
"RTN","IBCEU0",55,0)
 . S DIE="^IBM(361,",DA=$P(IBA,U,2),DR=""
"RTN","IBCEU0",56,0)
 . I DA D
"RTN","IBCEU0",57,0)
 .. S IBOK=1
"RTN","IBCEU0",58,0)
 .. S IBCLOK=$S(IBCLOSE:1,1:0)
"RTN","IBCEU0",59,0)
 .. I IBLOOK D  Q:'IBOK
"RTN","IBCEU0",60,0)
 ... S DIC="^IBM(361," D EN^DIQ
"RTN","IBCEU0",61,0)
 ... I '$$LOCK(361,DA) W ! S IBOK=0 Q
"RTN","IBCEU0",62,0)
 ... S DIR(0)="YA",DIR("A")="OK TO MARK REVIEWED?: ",DIR("B")="YES",DIR("?",1)="IF YOU ENTER YES, THIS MESSAGE WILL BE MARKED REVIEWED"
"RTN","IBCEU0",63,0)
 ... S DIR("?",2)="IF YOU ENTER NO, THIS MESSAGE WILL NOT BE ALTERED",DIR("?",3)="IF YOU ENTER AN ^, THIS MESSAGE WILL NOT BE ALTERED & NONE OF THE",DIR("?")="   REMAINING MESSAGES WILL BE PROCESSED" D ^DIR K DIR
"RTN","IBCEU0",64,0)
 ... I Y'>0 S IBOK=0 S:$D(DIRUT) IBSTOP=1 Q
"RTN","IBCEU0",65,0)
 ... I 'IBCLOSE D
"RTN","IBCEU0",66,0)
 .... S DIR(0)="YA",DIR("A")="OK TO CLOSE THIS BILL'S TRANSMIT RECORD?: ",DIR("B")="NO"
"RTN","IBCEU0",67,0)
 .... S DIR("?",1)="If you respond YES to this prompt, the transmit status of this bill will",DIR("?",2)="  be set to CLOSED.  No further electronic processing of this bill will be"
"RTN","IBCEU0",68,0)
 .... S DIR("?",3)="  allowed.  If you respond NO to this prompt, this electronic message will",DIR("?",4)="  be filed as reviewed, but the bill's transmit status will not be changed."
"RTN","IBCEU0",69,0)
 .... S DIR("?",5)="  You may wish to periodically print a list of bills with a non-final",DIR("?",6)="  (closed/cancelled/etc) status to ensure the electronic processing of all"
"RTN","IBCEU0",70,0)
 .... S DIR("?",7)="  bills has been completed.  Closing the transmit bill record here will",DIR("?")="  eliminate the bill from this list."
"RTN","IBCEU0",71,0)
 .... W ! D ^DIR K DIR W !
"RTN","IBCEU0",72,0)
 .... I Y'=1 S IBCLOK=0
"RTN","IBCEU0",73,0)
 .. I 'IBLOOK,$P($G(^IBM(361,DA,0)),U,3)="R" D  Q:'IBOK
"RTN","IBCEU0",74,0)
 ... S DR="1",DIC="^IBM(361," D EN^DIQ W !,"Bill Number: ",$$EXPAND^IBTRE(361,.01,+^IBM(361,DA,0))
"RTN","IBCEU0",75,0)
 ... S DIR(0)="YA",DIR("A")="THIS IS A REJECTION ... ARE YOU SURE YOU WANT TO MARK IT REVIEWED?: ",DIR("B")="NO"
"RTN","IBCEU0",76,0)
 ... S DIR("?",1)="IF YOU ENTER YES, THIS MESSAGE WILL BE MARKED REVIEWED"
"RTN","IBCEU0",77,0)
 ... S DIR("?",2)="IF YOU ENTER NO, THIS MESSAGE WILL NOT BE ALTERED",DIR("?",3)="IF YOU ENTER AN ^, THIS MESSAGE WILL NOT BE ALTERED & NONE OF THE",DIR("?")="   MESSAGES FOLLOWING THIS ONE WILL BE PROCESSED" D ^DIR K DIR
"RTN","IBCEU0",78,0)
 ... I Y'=1 S IBOK=0 S:$D(DIRUT) IBSTOP=1
"RTN","IBCEU0",79,0)
 .. S:'IBREBLD IBREBLD=1
"RTN","IBCEU0",80,0)
 .. S DR=".09////2;.1////F" D ^DIE
"RTN","IBCEU0",81,0)
 .. N IBUPD
"RTN","IBCEU0",82,0)
 .. S IBUPD=0
"RTN","IBCEU0",83,0)
 .. I $$PRINTUPD($G(^IBM(361,DA,1,1,0)),+$P(^IBM(361,DA,0),U,11)) S IBUPD=1
"RTN","IBCEU0",84,0)
 .. I $G(^IBM(361,DA,1,1,0))["CLAIM SENT TO PAYER" D UPDTX^IBCECSA2(+$P(^IBM(361,DA,0),U,11),$S(IBCLOK:"Z",1:"A2")) S IBUPD=1
"RTN","IBCEU0",85,0)
 .. I $G(^IBM(361,DA,1,1,0))["CLAIM REJECTED" D UPDTX^IBCECSA2(+$P(^IBM(361,DA,0),U,11),"E") S IBUPD=1
"RTN","IBCEU0",86,0)
 .. I IBCLOK,'IBUPD D UPDTX^IBCECSA2(+$P(^IBM(361,DA,0),U,11),"Z")
"RTN","IBCEU0",87,0)
 .. I 'IBLOOK D
"RTN","IBCEU0",88,0)
 ... W !,"Seq #: ",IBDAX,"  Bill number: ",$$EXPAND^IBTRE(361,.01,+^IBM(361,DA,0)),?45,"REVIEWED"
"RTN","IBCEU0",89,0)
 .. D NOTECHG^IBCECSA2(DA,1)
"RTN","IBCEU0",90,0)
 .. D UNLOCK(361,DA)
"RTN","IBCEU0",91,0)
 W !!,"LAST SELECTION PROCESSED",!
"RTN","IBCEU0",92,0)
 D PAUSE^VALM1
"RTN","IBCEU0",93,0)
MSTATQ S VALMBCK="R"
"RTN","IBCEU0",94,0)
 I IBREBLD D BLD^IBCECSA1
"RTN","IBCEU0",95,0)
 Q
"RTN","IBCEU0",96,0)
 ;
"RTN","IBCEU0",97,0)
PRPAY(IBIFN,IBMCR) ; Returns total amount of prior payments applied to
"RTN","IBCEU0",98,0)
 ; bill ien IBIFN
"RTN","IBCEU0",99,0)
 ; IBMCR = flag passed in as 1 if MRA total should be included
"RTN","IBCEU0",100,0)
 ;
"RTN","IBCEU0",101,0)
 N IBTOT,IBZ,IBSEQ
"RTN","IBCEU0",102,0)
 S IBSEQ=$$COBN^IBCEF(IBIFN)
"RTN","IBCEU0",103,0)
 I IBSEQ'>1 S IBTOT=0 G PRPAYQ
"RTN","IBCEU0",104,0)
 D F^IBCEF("N-PRIOR PAYMENTS","IBZ",,IBIFN)
"RTN","IBCEU0",105,0)
 S IBTOT=IBZ
"RTN","IBCEU0",106,0)
 I $G(IBMCR),$$MCRONBIL^IBEFUNC(IBIFN)=1 D  ; MCR on bill before curr ins
"RTN","IBCEU0",107,0)
 . N Z,Z0,Z2,Q
"RTN","IBCEU0",108,0)
 . F Z=1:1:IBSEQ-1 I $$WNRBILL^IBEFUNC(IBIFN,Z) D
"RTN","IBCEU0",109,0)
 .. S IBTOT=+$$MCRPAY(IBIFN)
"RTN","IBCEU0",110,0)
PRPAYQ Q IBTOT
"RTN","IBCEU0",111,0)
 ;
"RTN","IBCEU0",112,0)
PRINTUPD(IBTEXT,IBDA) ; If the status message indicates claim was printed
"RTN","IBCEU0",113,0)
 ;    or the claim record in file 399 says it was, update the transmit
"RTN","IBCEU0",114,0)
 ;    message status to closed
"RTN","IBCEU0",115,0)
 ; IBTEXT = the first line text of the status message (optional)
"RTN","IBCEU0",116,0)
 ; IBDA = the ien of the transmission record in file 364
"RTN","IBCEU0",117,0)
 ;
"RTN","IBCEU0",118,0)
 ; FUNCTION returns 1 if message status changed
"RTN","IBCEU0",119,0)
 ;
"RTN","IBCEU0",120,0)
 N IBP,IBP1
"RTN","IBCEU0",121,0)
 S IBP=0,IBP1=$P($G(^DGCR(399,+$G(^IBA(364,+$G(IBDA),0)),"TX")),U,7)
"RTN","IBCEU0",122,0)
 I $G(IBTEXT)["CLAIM RECEIVED, PRINTED AND MAILED BY PRINT CENTER"!IBP1 D
"RTN","IBCEU0",123,0)
 . N Z
"RTN","IBCEU0",124,0)
 . S Z=$E($P($G(^IBA(364,IBDA,0)),U,3),1)
"RTN","IBCEU0",125,0)
 . I "AP"'[Z Q  ; Only change if status is pending or received/accepted
"RTN","IBCEU0",126,0)
 . D UPDTX^IBCECSA2(IBDA,"Z") S IBP=1
"RTN","IBCEU0",127,0)
 Q IBP
"RTN","IBCEU0",128,0)
 ;
"RTN","IBCEU0",129,0)
MCRPAY(IBIFN) ; Calculate MRA total for the bill IBIFN
"RTN","IBCEU0",130,0)
 N IBPAY,Q,Z0
"RTN","IBCEU0",131,0)
 S IBPAY=0
"RTN","IBCEU0",132,0)
 S Q=0 F  S Q=$O(^IBM(361.1,"B",IBIFN,Q)) Q:'Q  S Z0=$G(^IBM(361.1,Q,0)) I $P(Z0,U,4)=1 S IBPAY=IBPAY+$G(^(1))
"RTN","IBCEU0",133,0)
 Q IBPAY
"RTN","IBCEU0",134,0)
 ;
"RTN","IBCEU0",135,0)
PREOBTOT(IBIFN) ; Function - Calculates Patient Responsibility Amount
"RTN","IBCEU0",136,0)
 ; Input:  IBIFN - ien of Bill Number (ien of file 399)
"RTN","IBCEU0",137,0)
 ; Output Function returns: Patient Responsibility Amount for all EOB's for bill
"RTN","IBCEU0",138,0)
 ;
"RTN","IBCEU0",139,0)
 N FRMTYP,IBPTRES
"RTN","IBCEU0",140,0)
 S IBPTRES=0
"RTN","IBCEU0",141,0)
 ; Form Type 2=CMS-1500; 3=UB-04
"RTN","IBCEU0",142,0)
 S FRMTYP=$$FT^IBCEF(IBIFN)
"RTN","IBCEU0",143,0)
 ;
"RTN","IBCEU0",144,0)
 ; For bills w/CMS-1500 Form Type, total up Pt Resp amount from top
"RTN","IBCEU0",145,0)
 ; level of EOB (field 1.02) for All MRA type EOB's on file for that
"RTN","IBCEU0",146,0)
 ; bill (IBIFN)
"RTN","IBCEU0",147,0)
 ;  
"RTN","IBCEU0",148,0)
 I FRMTYP=2 D  Q IBPTRES
"RTN","IBCEU0",149,0)
 . N IBEOB,EOBREC,EOBREC1,IBPRTOT
"RTN","IBCEU0",150,0)
 . S (IBEOB,IBPRTOT,IBPTRES)=0
"RTN","IBCEU0",151,0)
 . F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D  ;
"RTN","IBCEU0",152,0)
 . . S EOBREC=$G(^IBM(361.1,IBEOB,0)),EOBREC1=$G(^(1))
"RTN","IBCEU0",153,0)
 . . I $P(EOBREC,U,4)'=1 Q  ;make sure it's an MRA
"RTN","IBCEU0",154,0)
 . . ; Total up Pt Resp Amounts on all valid MRA's
"RTN","IBCEU0",155,0)
 . . S IBPTRES=IBPTRES+$P(EOBREC1,U,2)
"RTN","IBCEU0",156,0)
 ;
"RTN","IBCEU0",157,0)
 ; For bills w/UB-04 Form Type, loop through all EOB's and sum up amounts
"RTN","IBCEU0",158,0)
 ; on both Line level and on Claim level
"RTN","IBCEU0",159,0)
 N EOBADJ,IBEOB,LNLVL
"RTN","IBCEU0",160,0)
 S IBEOB=0
"RTN","IBCEU0",161,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D  ;
"RTN","IBCEU0",162,0)
 . I $P($G(^IBM(361.1,IBEOB,0)),U,4)'=1 Q    ; must be an MRA
"RTN","IBCEU0",163,0)
 . ;
"RTN","IBCEU0",164,0)
 . ; get claim level adjustments
"RTN","IBCEU0",165,0)
 . K EOBADJ M EOBADJ=^IBM(361.1,IBEOB,10)
"RTN","IBCEU0",166,0)
 . S IBPTRES=IBPTRES+$$CALCPR(.EOBADJ)
"RTN","IBCEU0",167,0)
 . ;
"RTN","IBCEU0",168,0)
 . ; get line level adjustments
"RTN","IBCEU0",169,0)
 . S LNLVL=0
"RTN","IBCEU0",170,0)
 . F  S LNLVL=$O(^IBM(361.1,IBEOB,15,LNLVL)) Q:'LNLVL  D  ;
"RTN","IBCEU0",171,0)
 . . K EOBADJ M EOBADJ=^IBM(361.1,IBEOB,15,LNLVL,1)
"RTN","IBCEU0",172,0)
 . . S IBPTRES=IBPTRES+$$CALCPR(.EOBADJ)
"RTN","IBCEU0",173,0)
 Q IBPTRES
"RTN","IBCEU0",174,0)
 ;
"RTN","IBCEU0",175,0)
CALCPR(EOBADJ) ; Function - Calculate Patient Responsibilty Amount
"RTN","IBCEU0",176,0)
 ; For Group Code PR; Ignore the PR-AAA kludge
"RTN","IBCEU0",177,0)
 ; Input - EOBADJ = Array of Group Codes & Reason Codes from either the Claim
"RTN","IBCEU0",178,0)
 ;                 Level (10) or Service Line Level (15) of EOB file (#361.1)
"RTN","IBCEU0",179,0)
 ; Output - Function returns Patient Responsibility Amount
"RTN","IBCEU0",180,0)
 ;
"RTN","IBCEU0",181,0)
 N GRPLVL,RSNCD,RSNAMT,PTRESP
"RTN","IBCEU0",182,0)
 S (GRPLVL,PTRESP)=0
"RTN","IBCEU0",183,0)
 F  S GRPLVL=$O(EOBADJ(GRPLVL)) Q:'GRPLVL  D
"RTN","IBCEU0",184,0)
 . I $P($G(EOBADJ(GRPLVL,0)),U)'="PR" Q  ;grp code must be PR
"RTN","IBCEU0",185,0)
 . S RSNCD=0
"RTN","IBCEU0",186,0)
 . F  S RSNCD=$O(EOBADJ(GRPLVL,1,RSNCD)) Q:'RSNCD  D
"RTN","IBCEU0",187,0)
 . . I $P($G(EOBADJ(GRPLVL,1,RSNCD,0)),U,1)="AAA" Q   ; ignore PR-AAA
"RTN","IBCEU0",188,0)
 . . S RSNAMT=$P($G(EOBADJ(GRPLVL,1,RSNCD,0)),U,2)
"RTN","IBCEU0",189,0)
 . . S PTRESP=PTRESP+RSNAMT
"RTN","IBCEU0",190,0)
 Q PTRESP
"RTN","IBCEU0",191,0)
 ;
"RTN","IBCEU0",192,0)
COBMOD(IBXSAVE,IBXDATA,SEQ) ; output the modifiers from the COB
"RTN","IBCEU0",193,0)
 ; SEQ is which modifier we're extracting (1-4)
"RTN","IBCEU0",194,0)
 ; Build IBXDATA(line#)=Modifier# SEQ
"RTN","IBCEU0",195,0)
 NEW LN,N,Z,MOD,LNSEQ
"RTN","IBCEU0",196,0)
 KILL IBXDATA
"RTN","IBCEU0",197,0)
 I '$G(SEQ) Q
"RTN","IBCEU0",198,0)
 S (LN,LNSEQ)=0
"RTN","IBCEU0",199,0)
 F  S LN=$O(IBXSAVE("LCOB",LN)) Q:'LN  D
"RTN","IBCEU0",200,0)
 . S LNSEQ=LNSEQ+1
"RTN","IBCEU0",201,0)
 . S (N,Z)=0
"RTN","IBCEU0",202,0)
 . F  S Z=$O(IBXSAVE("LCOB",LN,"COBMOD",Z)) Q:'Z  D
"RTN","IBCEU0",203,0)
 .. S N=N+1
"RTN","IBCEU0",204,0)
 .. S MOD(LNSEQ,N)=$P($G(IBXSAVE("LCOB",LN,"COBMOD",Z,0)),U,1)
"RTN","IBCEU0",205,0)
 .. Q
"RTN","IBCEU0",206,0)
 . S MOD=$G(MOD(LNSEQ,SEQ))
"RTN","IBCEU0",207,0)
 . I MOD'="" S IBXDATA(LNSEQ)=MOD
"RTN","IBCEU0",208,0)
 . Q
"RTN","IBCEU0",209,0)
 Q
"RTN","IBCEU0",210,0)
 ;
"RTN","IBCEU1")
0^85^B41905172^B41405183
"RTN","IBCEU1",1,0)
IBCEU1 ;ALB/TMP - EDI UTILITIES FOR EOB PROCESSING ;10-FEB-99
"RTN","IBCEU1",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155,296,349**;21-MAR-94;Build 46
"RTN","IBCEU1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEU1",4,0)
 ;
"RTN","IBCEU1",5,0)
CCOB1(IBIFN,NODE,SEQ) ; Extract Claim level COB data
"RTN","IBCEU1",6,0)
 ; for a bill IBIFN
"RTN","IBCEU1",7,0)
 ; NODE = the file 361.1 node(s) to be returned, separated by commas
"RTN","IBCEU1",8,0)
 ; SEQ = the specific insurance sequence you want returned.  If not =
"RTN","IBCEU1",9,0)
 ;       1, 2, or 3, all are returned
"RTN","IBCEU1",10,0)
 ; Returns IBXDATA(COB,n,node)  where COB = COB insurance sequence,
"RTN","IBCEU1",11,0)
 ;  n is the entry number in file 361.1 and node is the node requested
"RTN","IBCEU1",12,0)
 ;   = the requested node's data
"RTN","IBCEU1",13,0)
 ;
"RTN","IBCEU1",14,0)
 N IB,IBN,IBBILL,IBS,A,B,C
"RTN","IBCEU1",15,0)
 ;
"RTN","IBCEU1",16,0)
 K IBXDATA
"RTN","IBCEU1",17,0)
 ;
"RTN","IBCEU1",18,0)
 S:$G(NODE)="" NODE=1
"RTN","IBCEU1",19,0)
 S IB=$P($G(^DGCR(399,IBIFN,"M1")),U,5,7)
"RTN","IBCEU1",20,0)
 S:"123"'[$G(SEQ) SEQ=""
"RTN","IBCEU1",21,0)
 ;
"RTN","IBCEU1",22,0)
 F B=1:1:3 S IBBILL=$P(IB,U,B) I IBBILL S C=0 F  S C=$O(^IBM(361.1,"B",IBBILL,C)) Q:'C  D
"RTN","IBCEU1",23,0)
 . I '$$EOBELIG(C) Q      ; eob not eligible for secondary claim
"RTN","IBCEU1",24,0)
 . S IBS=$P($G(^IBM(361.1,C,0)),U,15)   ; insurance sequence
"RTN","IBCEU1",25,0)
 . I $S('$G(SEQ):1,1:SEQ=IBS) D
"RTN","IBCEU1",26,0)
 .. F Z=1:1:$L(NODE,",") D
"RTN","IBCEU1",27,0)
 ... S A=$P(NODE,",",Z)
"RTN","IBCEU1",28,0)
 ... Q:A=""
"RTN","IBCEU1",29,0)
 ... S IBN=$G(^IBM(361.1,C,A))
"RTN","IBCEU1",30,0)
 ... I $TR(IBN,U)'="" S IBXDATA(IBS,C,A)=IBN
"RTN","IBCEU1",31,0)
 ;
"RTN","IBCEU1",32,0)
 Q
"RTN","IBCEU1",33,0)
 ;
"RTN","IBCEU1",34,0)
CCAS1(IBIFN,SEQ) ; Extract all MEDICARE COB claim level adjustment data
"RTN","IBCEU1",35,0)
 ; for a bill IBIFN (subfile 361.11 in file 361.1)
"RTN","IBCEU1",36,0)
 ; SEQ = the specific insurance sequence you want returned.  If not =
"RTN","IBCEU1",37,0)
 ;       1, 2, or 3, all are returned
"RTN","IBCEU1",38,0)
 ; Returns IBXDATA(COB,n)  where COB = COB insurance sequence,
"RTN","IBCEU1",39,0)
 ;       n is the entry number in file 361.1 and
"RTN","IBCEU1",40,0)
 ;       = the 0-node of the subfile entry (361.11)
"RTN","IBCEU1",41,0)
 ;    and IBXDATA(COB,n,m) where m is a sequential # and
"RTN","IBCEU1",42,0)
 ;                         = this level's 0-node
"RTN","IBCEU1",43,0)
 N IB,IBA,IBS,IB0,IB00,IBBILL,B,C,D,E
"RTN","IBCEU1",44,0)
 ;
"RTN","IBCEU1",45,0)
 S IB=$P($G(^DGCR(399,IBIFN,"M1")),U,5,7)
"RTN","IBCEU1",46,0)
 S:"123"'[$G(SEQ) SEQ=""
"RTN","IBCEU1",47,0)
 ;
"RTN","IBCEU1",48,0)
 F B=1:1:3 S IBBILL=$P(IB,U,B) I IBBILL S C=0 F  S C=$O(^IBM(361.1,"B",IBBILL,C)) Q:'C  D
"RTN","IBCEU1",49,0)
 . I '$$EOBELIG(C) Q      ; eob not eligible for secondary claim
"RTN","IBCEU1",50,0)
 . S IBS=$P($G(^IBM(361.1,C,0)),U,15)   ; insurance sequence
"RTN","IBCEU1",51,0)
 . I $S('$G(SEQ):1,1:SEQ=IBS) D
"RTN","IBCEU1",52,0)
 .. S (IBA,D)=0 F  S D=$O(^IBM(361.1,C,10,D)) Q:'D  S IB0=$G(^(D,0)) D
"RTN","IBCEU1",53,0)
 ... S IBXDATA(IBS,D)=IB0
"RTN","IBCEU1",54,0)
 ... S (IBA,E)=0
"RTN","IBCEU1",55,0)
 ... F  S E=$O(^IBM(361.1,C,10,D,1,E)) Q:'E  S IB00=$G(^(E,0)) D
"RTN","IBCEU1",56,0)
 .... S IBA=IBA+1
"RTN","IBCEU1",57,0)
 .... I $TR(IB00,U)'="" S IBXDATA(IBS,D,IBA)=IB00
"RTN","IBCEU1",58,0)
 ;
"RTN","IBCEU1",59,0)
 Q
"RTN","IBCEU1",60,0)
 ;
"RTN","IBCEU1",61,0)
SEQ(A) ; Translate sequence # A into corresponding letter representation
"RTN","IBCEU1",62,0)
 S A=$E("PST",A)
"RTN","IBCEU1",63,0)
 I $S(A'="":"PST"'[A,1:1) S A="P"
"RTN","IBCEU1",64,0)
 Q A
"RTN","IBCEU1",65,0)
 ;
"RTN","IBCEU1",66,0)
EOBTOT(IBIFN,IBCOBN) ; Total all EOB's for a bill's COB sequence
"RTN","IBCEU1",67,0)
 ; Function returns the total of all EOB's for a specific COB seq
"RTN","IBCEU1",68,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEU1",69,0)
 ; IBCOBN = the # of the COB sequence you want EOB/MRA total for (1-3)
"RTN","IBCEU1",70,0)
 ;
"RTN","IBCEU1",71,0)
 N Z,Z0,IBTOT
"RTN","IBCEU1",72,0)
 S IBTOT=0
"RTN","IBCEU1",73,0)
 I $O(^IBM(361.1,"ABS",IBIFN,IBCOBN,0)) D
"RTN","IBCEU1",74,0)
 . ; Set up prior payment field here from MRA/EOB(s)
"RTN","IBCEU1",75,0)
 . S (IBTOT,Z)=0
"RTN","IBCEU1",76,0)
 . F  S Z=$O(^IBM(361.1,"ABS",IBIFN,IBCOBN,Z)) Q:'Z  D
"RTN","IBCEU1",77,0)
 .. S IBTOT=IBTOT+$P($G(^IBM(361.1,Z,1)),U,2)
"RTN","IBCEU1",78,0)
 Q IBTOT
"RTN","IBCEU1",79,0)
 ;
"RTN","IBCEU1",80,0)
 ;
"RTN","IBCEU1",81,0)
LCOBOUT(IBXSAVE,IBXDATA,COL) ; Output the line adjustment reasons COB
"RTN","IBCEU1",82,0)
 ;  line # data for an electronic claim
"RTN","IBCEU1",83,0)
 ; IBXSAVE,IBXDATA = arrays holding formatter information for claim -
"RTN","IBCEU1",84,0)
 ;                   pass by reference
"RTN","IBCEU1",85,0)
 ; COL = the column in the 837 flat file being output for LCAS record
"RTN","IBCEU1",86,0)
 N LINE,COBSEQ,RECCT,GRPCD,SEQ,RCCT,RCPC,DATA,RCREC,SEQLINE K IBXDATA
"RTN","IBCEU1",87,0)
 S (LINE,RECCT)=0
"RTN","IBCEU1",88,0)
 S RCPC=(COL#3) S:'RCPC RCPC=3
"RTN","IBCEU1",89,0)
 S RCREC=$S(COL'<4:COL-1\3,1:0)
"RTN","IBCEU1",90,0)
 ;S RCREC=$S(COL'<4:COL+5\6-1,1:0)
"RTN","IBCEU1",91,0)
 F  S LINE=$O(IBXSAVE("LCOB",LINE)) Q:'LINE  D
"RTN","IBCEU1",92,0)
 . S COBSEQ=0
"RTN","IBCEU1",93,0)
 . F  S COBSEQ=$O(IBXSAVE("LCOB",LINE,"COB",COBSEQ)) Q:'COBSEQ  S SEQLINE=0 F  S SEQLINE=$O(IBXSAVE("LCOB",LINE,"COB",COBSEQ,SEQLINE)) Q:'SEQLINE  S GRPCD="" F  S GRPCD=$O(IBXSAVE("LCOB",LINE,"COB",COBSEQ,SEQLINE,GRPCD)) Q:GRPCD=""  D
"RTN","IBCEU1",94,0)
 .. S RECCT=RECCT+1
"RTN","IBCEU1",95,0)
 .. I COL=2 S IBXDATA(RECCT)=LINE,DATA=LINE D:RECCT>1 ID^IBCEF2(RECCT,"LCAS")
"RTN","IBCEU1",96,0)
 .. I COL=3 S IBXDATA(RECCT)=$TR(GRPCD," ")
"RTN","IBCEU1",97,0)
 .. S (SEQ,RCCT)=0
"RTN","IBCEU1",98,0)
 .. F  S SEQ=$O(IBXSAVE("LCOB",LINE,"COB",COBSEQ,SEQLINE,GRPCD,SEQ)) Q:'SEQ  I $TR($G(IBXSAVE("LCOB",LINE,"COB",COBSEQ,SEQLINE,GRPCD,SEQ)),U)'="" D
"RTN","IBCEU1",99,0)
 ... S RCCT=RCCT+1
"RTN","IBCEU1",100,0)
 ... Q:COL'<4&(RCCT'=RCREC)&(RCCT'>6)
"RTN","IBCEU1",101,0)
 ... S DATA=$S(COL=2:LINE,COL=3:$TR(GRPCD," "),1:$P($G(IBXSAVE("LCOB",LINE,"COB",COBSEQ,SEQLINE,GRPCD,SEQ)),U,RCPC))
"RTN","IBCEU1",102,0)
 ... I COL'<4,RCCT=RCREC S:DATA'="" IBXDATA(RECCT)=DATA Q
"RTN","IBCEU1",103,0)
 ... I RCCT>6 S RCCT=1,RECCT=RECCT+1 D:COL=2 ID^IBCEF2(RECCT,"LCAS") I DATA'="",$S(COL'>3:1,1:RCCT=RCREC) S IBXDATA(RECCT)=DATA
"RTN","IBCEU1",104,0)
 Q
"RTN","IBCEU1",105,0)
 ;
"RTN","IBCEU1",106,0)
CCOBOUT(IBXSAVE,IBXDATA,COL) ; Output the claim adjustment reasons COB
"RTN","IBCEU1",107,0)
 ;  data for an electronic claim
"RTN","IBCEU1",108,0)
 ; IBXSAVE,IBXDATA = arrays holding formatter information for claim -
"RTN","IBCEU1",109,0)
 ;                   pass by reference
"RTN","IBCEU1",110,0)
 ; COL = the column in the 837 flat file being output for CCAS record
"RTN","IBCEU1",111,0)
 N COBSEQ,RECCT,GRPSEQ,SEQ,RCPC,RCCT,RCREC,DATA K IBXDATA
"RTN","IBCEU1",112,0)
 S RECCT=0
"RTN","IBCEU1",113,0)
 S RCPC=(COL#3) S:'RCPC RCPC=3
"RTN","IBCEU1",114,0)
 S RCREC=$S(COL'<4:COL+5\6-1,1:0)
"RTN","IBCEU1",115,0)
 S COBSEQ=0
"RTN","IBCEU1",116,0)
 F  S COBSEQ=$O(IBXSAVE("CCAS",COBSEQ)) Q:'COBSEQ  S GRPSEQ="" F  S GRPSEQ=$O(IBXSAVE("CCAS",COBSEQ,GRPSEQ)) Q:GRPSEQ=""  D
"RTN","IBCEU1",117,0)
 . S RECCT=RECCT+1
"RTN","IBCEU1",118,0)
 . I COL=2 S IBXDATA(RECCT)=COBSEQ D:RECCT>1 ID^IBCEF2(RECCT,"CCAS")
"RTN","IBCEU1",119,0)
 . I COL=3 S IBXDATA(RECCT)=$P($G(IBXSAVE("CCAS",COBSEQ,GRPSEQ)),U)
"RTN","IBCEU1",120,0)
 . S (SEQ,RCCT)=0
"RTN","IBCEU1",121,0)
 . F  S SEQ=$O(IBXSAVE("CCAS",COBSEQ,GRPSEQ,SEQ)) Q:'SEQ  I $TR($G(IBXSAVE("CCAS",COBSEQ,GRPSEQ,SEQ)),U)'="" D
"RTN","IBCEU1",122,0)
 .. S RCCT=RCCT+1
"RTN","IBCEU1",123,0)
 .. Q:COL'<4&(RCCT'=RCREC)&(RCCT'>6)
"RTN","IBCEU1",124,0)
 .. S DATA=$S(COL=2:COBSEQ,COL=3:$P($G(IBXSAVE("CCAS",COBSEQ,GRPSEQ)),U),1:$P($G(IBXSAVE("CCAS",COBSEQ,GRPSEQ,SEQ)),U,RCPC))
"RTN","IBCEU1",125,0)
 .. I COL'<4,RCCT=RCREC S:DATA'="" IBXDATA(RECCT)=DATA Q
"RTN","IBCEU1",126,0)
 .. I RCCT>6 S RCCT=1,RECCT=RECCT+1 D:COL=2 ID^IBCEF2(RECCT,"CCAS") I DATA'="",$S(COL'>3:1,1:RCCT=RCREC) S IBXDATA(RECCT)=DATA
"RTN","IBCEU1",127,0)
 Q
"RTN","IBCEU1",128,0)
 ;
"RTN","IBCEU1",129,0)
COBOUT(IBXSAVE,IBXDATA,CL) ;
"RTN","IBCEU1",130,0)
 N Z,M,N,P,PCCL
"RTN","IBCEU1",131,0)
 S (N,Z,P)=0 F  S Z=$O(IBXSAVE("LCOB",Z)) Q:'Z  D
"RTN","IBCEU1",132,0)
 . S N=N+1
"RTN","IBCEU1",133,0)
 . S M=$O(IBXSAVE("LCOB",Z,"COB",""),-1) Q:'M
"RTN","IBCEU1",134,0)
 . S P=$O(IBXSAVE("LCOB",Z,"COB",M,""),-1) Q:'P
"RTN","IBCEU1",135,0)
 . S PCCL=$P($G(IBXSAVE("LCOB",Z,"COB",M,P)),U,CL)
"RTN","IBCEU1",136,0)
 . S:PCCL'="" IBXDATA(N)=PCCL
"RTN","IBCEU1",137,0)
 . Q
"RTN","IBCEU1",138,0)
 Q
"RTN","IBCEU1",139,0)
 ;
"RTN","IBCEU1",140,0)
COBPYRID(IBXIEN,IBXSAVE,IBXDATA) ; cob insurance company payer id
"RTN","IBCEU1",141,0)
 N CT,Z,N,NUM
"RTN","IBCEU1",142,0)
 K IBXDATA
"RTN","IBCEU1",143,0)
 I '$D(IBXSAVE("LCOB")) G COBPYRX
"RTN","IBCEU1",144,0)
 D ALLPAYID^IBCEF2(IBXIEN,.NUM,1)
"RTN","IBCEU1",145,0)
 S Z=$$COID^IBCEF2(IBXIEN),NUM=$G(NUM(1))
"RTN","IBCEU1",146,0)
 S:Z="" Z="0000"
"RTN","IBCEU1",147,0)
 S NUM=$E(NUM_$J("",5),1,5)_$E(Z_$J("",4),1,4)
"RTN","IBCEU1",148,0)
 S (CT,N)=0
"RTN","IBCEU1",149,0)
 F  S N=$O(IBXSAVE("LCOB",N)) Q:'N  S CT=CT+1,IBXDATA(CT)=NUM
"RTN","IBCEU1",150,0)
COBPYRX ;
"RTN","IBCEU1",151,0)
 Q
"RTN","IBCEU1",152,0)
 ;
"RTN","IBCEU1",153,0)
EOBELIG(IBEOB) ; EOB eligibility for secondary claim
"RTN","IBCEU1",154,0)
 ; Function to decide if EOB entry in file 361.1 (ien=IBEOB) is
"RTN","IBCEU1",155,0)
 ; eligible to be included for secondary claim creation process
"RTN","IBCEU1",156,0)
 ; The EOB is not eligible if the review status is not 3, or if there
"RTN","IBCEU1",157,0)
 ; is no insurance sequence indicator, or if the EOB has been DENIED
"RTN","IBCEU1",158,0)
 ; and the patient responsibility for that EOB is $0.
"RTN","IBCEU1",159,0)
 ;
"RTN","IBCEU1",160,0)
 NEW ELIG,IBDATA,PTRESP
"RTN","IBCEU1",161,0)
 S ELIG=0
"RTN","IBCEU1",162,0)
 I '$G(IBEOB) G EOBELIGX
"RTN","IBCEU1",163,0)
 S IBDATA=$G(^IBM(361.1,IBEOB,0))
"RTN","IBCEU1",164,0)
 I $P(IBDATA,U,4)'=1 G EOBELIGX      ; Only MRA EOB's for now
"RTN","IBCEU1",165,0)
 I $P(IBDATA,U,16)'=3 G EOBELIGX     ; review status - accepted-complete
"RTN","IBCEU1",166,0)
 I '$P(IBDATA,U,15) G EOBELIGX       ; insurance sequence must exist
"RTN","IBCEU1",167,0)
 S PTRESP=$P($G(^IBM(361.1,IBEOB,1)),U,2)     ; Pt Resp Amount for 1500s
"RTN","IBCEU1",168,0)
 I $$FT^IBCEF(+IBDATA)=3 S PTRESP=$$PTRESPI^IBCECOB1(IBEOB)  ; for UBs
"RTN","IBCEU1",169,0)
 I PTRESP'>0,$P(IBDATA,U,13)=2 G EOBELIGX     ; Denied & No Pt. Resp.
"RTN","IBCEU1",170,0)
 I $D(^IBM(361.1,IBEOB,"ERR")) G EOBELIGX     ; filing error
"RTN","IBCEU1",171,0)
 ;
"RTN","IBCEU1",172,0)
 S ELIG=1
"RTN","IBCEU1",173,0)
EOBELIGX ;
"RTN","IBCEU1",174,0)
 Q ELIG
"RTN","IBCEU1",175,0)
 ;
"RTN","IBCEU1",176,0)
EOBCNT(IBIFN) ; This function counts up the number of EOBs that are eligible
"RTN","IBCEU1",177,0)
 ; for the secondary claim creation process for a given bill#.
"RTN","IBCEU1",178,0)
 NEW CNT,IEN
"RTN","IBCEU1",179,0)
 S (CNT,IEN)=0
"RTN","IBCEU1",180,0)
 F  S IEN=$O(^IBM(361.1,"B",+$G(IBIFN),IEN)) Q:'IEN  D
"RTN","IBCEU1",181,0)
 . I $$EOBELIG(IEN) S CNT=CNT+1
"RTN","IBCEU1",182,0)
 . Q
"RTN","IBCEU1",183,0)
EOBCNTX ;
"RTN","IBCEU1",184,0)
 Q CNT
"RTN","IBCEU1",185,0)
 ;
"RTN","IBCEU2")
0^17^B56928626^B56299934
"RTN","IBCEU2",1,0)
IBCEU2 ;ALB/TMP - EDI UTILITIES FOR AUTO ADD OF CODES ON BILL ;20-OCT-99
"RTN","IBCEU2",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,155,349**;21-MAR-94;Build 46
"RTN","IBCEU2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEU2",4,0)
 ;
"RTN","IBCEU2",5,0)
AUTOCK(IBIFN,IBQUIET) ; Auto add any codes necessary based on data
"RTN","IBCEU2",6,0)
 ; existing on bill, if needed.
"RTN","IBCEU2",7,0)
 ; IBQUIET - optional parameter - equals 1 to suppress screen display
"RTN","IBCEU2",8,0)
 ;
"RTN","IBCEU2",9,0)
 N IBCOBN,IBFL,DIE,DA,DR
"RTN","IBCEU2",10,0)
 S DR="",IBCOBN=$$COBN^IBCEF(IBIFN)
"RTN","IBCEU2",11,0)
 ;
"RTN","IBCEU2",12,0)
 ;Look for prior payments value codes A1, A2 and occur code 24, if needed
"RTN","IBCEU2",13,0)
 ;I IBCOBN>1 D PRPAY(IBIFN,IBCOBN,$G(IBQUIET))
"RTN","IBCEU2",14,0)
 ;
"RTN","IBCEU2",15,0)
 ;Look for occur codes A1,B1,C1 for subscriber date of birth, if needed
"RTN","IBCEU2",16,0)
 D SUBDOB(IBIFN,IBCOBN,$G(IBQUIET))
"RTN","IBCEU2",17,0)
 ;
"RTN","IBCEU2",18,0)
 ; If outpatient bill and no discharge status, add code 01 as default
"RTN","IBCEU2",19,0)
 I '$$INPAT^IBCEF(IBIFN,1),$$FT^IBCEF(IBIFN)=3 D
"RTN","IBCEU2",20,0)
 . ;Default discharge status for outpt UB to '01'
"RTN","IBCEU2",21,0)
 . D F^IBCEF("N-PATIENT STATUS","IBZ",,IBIFN)
"RTN","IBCEU2",22,0)
 . I IBZ="" D
"RTN","IBCEU2",23,0)
 .. N Z S Z=0 F  S Z=$O(^DGCR(399.1,"C","01",Z)) Q:'Z  I $P($G(^DGCR(399.1,Z,0)),U,6) Q
"RTN","IBCEU2",24,0)
 .. I Z S DR=DR_$S(DR'="":";",1:"")_"162////"_Z
"RTN","IBCEU2",25,0)
 . ; Default admit source to 2
"RTN","IBCEU2",26,0)
 . D F^IBCEF("N-SOURCE OF ADMISSION","IBZ",,IBIFN)
"RTN","IBCEU2",27,0)
 . I IBZ="" S DR=DR_$S(DR'="":";",1:"")_"159///2"
"RTN","IBCEU2",28,0)
 ;
"RTN","IBCEU2",29,0)
 ; If inpatient bill and no 01 or 02 value code, add 01 value code with
"RTN","IBCEU2",30,0)
 ; the highest value of all 101 entries
"RTN","IBCEU2",31,0)
 I $$INPAT^IBCEF(IBIFN,1) D
"RTN","IBCEU2",32,0)
 . N IBTOB,IBND0,IBFL,IBOK,Z,Z0,IBAMT,DIC,DR,DIE,DA,DO,DD,DLAYGO,X,Y
"RTN","IBCEU2",33,0)
 . S IBND0=$G(^DGCR(399,IBIFN,0)),IBTOB=$P(IBND0,U,24)_$P($G(^DGCR(399.1,+$P(IBND0,U,25),0)),U,2)
"RTN","IBCEU2",34,0)
 . I IBTOB'="11",IBTOB'="18",IBTOB'="21" Q
"RTN","IBCEU2",35,0)
 . S IBOK=0
"RTN","IBCEU2",36,0)
 . D F^IBCEF("N-VALUE CODES",,,IBIFN)
"RTN","IBCEU2",37,0)
 . S Z=0 F  S Z=$O(IBFL(39,Z)) Q:'Z  I $P(IBFL(39,Z),U)="01"!($P(IBFL(39,Z),U)="02") S IBOK=1 Q
"RTN","IBCEU2",38,0)
 . Q:IBOK
"RTN","IBCEU2",39,0)
 . S Z=0,IBAMT=0
"RTN","IBCEU2",40,0)
 . F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$P($G(^DGCR(399.2,+$G(^DGCR(399,IBIFN,"RC",Z,0)),0)),U) I Z0=101,IBAMT<$P($G(^DGCR(399,IBIFN,"RC",Z,0)),U,2) S IBAMT=$P(^(0),U,2)
"RTN","IBCEU2",41,0)
 . I IBAMT D
"RTN","IBCEU2",42,0)
 .. S DA(1)=IBIFN,DLAYGO=399.047,DIC(0)="L",DIC="^DGCR(399,"_DA(1)_",""CV"",",DIC("DR")=".02////"_IBAMT
"RTN","IBCEU2",43,0)
 .. S X=0 F  S X=$O(^DGCR(399.1,"C","01",X)) Q:'X  I $P($G(^DGCR(399.1,X,0)),U,11) Q
"RTN","IBCEU2",44,0)
 .. I X D FILE^DICN
"RTN","IBCEU2",45,0)
 .. K DIC,DO,DD,DLAYGO
"RTN","IBCEU2",46,0)
 I DR'="" S DA=IBIFN,DIE="^DGCR(399," D ^DIE
"RTN","IBCEU2",47,0)
 Q
"RTN","IBCEU2",48,0)
 ;
"RTN","IBCEU2",49,0)
PRPAY(IBIFN,IBCOBN,IBQUIET) ; Output value cd A1 or A2 for prior payments, if needed
"RTN","IBCEU2",50,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEU2",51,0)
 ; IBCOBN = the COB sequence number for bill (2=secondary, 3=tertiary)
"RTN","IBCEU2",52,0)
 ; IBQUIET = 1 to suppress screen display
"RTN","IBCEU2",53,0)
 ;
"RTN","IBCEU2",54,0)
 N IBNEED,IBNEED24,IB24,IBV,IBVN,DIC,DA,DLAYGO,DD,DO,Z,Z0
"RTN","IBCEU2",55,0)
 S (IBCT,IBNEED)=0,IBNEED24=1,(IB24(24),IB24("A1"),IB24("A2"))=0
"RTN","IBCEU2",56,0)
 S Z=0 F  S Z=$O(^DGCR(399.1,"C1",24,Z)) Q:'Z  I $P($G(^DGCR(399.1,Z,0)),U,4) S IB24(24)=Z Q  ;Occurrence code 24
"RTN","IBCEU2",57,0)
 F Z0="A1","A2" S Z=0 F  S Z=$O(^DGCR(399.1,"C1",Z0,Z)) Q:'Z  I $P($G(^DGCR(399.1,Z,0)),U,11) S IB24(Z0)=Z Q  ;Value codes A1 and A2
"RTN","IBCEU2",58,0)
 F Z="A1","A2" I $D(^DGCR(399,IBIFN,"I"_$P(Z,"A",2)+1)),IB24(Z) D
"RTN","IBCEU2",59,0)
 . I '$D(^DGCR(399,IBIFN,"CV","B",+IB24(Z))) S IBNEED(Z)="",IBNEED=IBNEED+1 Q
"RTN","IBCEU2",60,0)
 . S Z0=0 F  S Z0=$O(^DGCR(399,IBIFN,"CV","B",+IB24(Z),Z0)) Q:'Z0  S IBV(Z)=$G(^DGCR(399,IBIFN,"CV",Z0,0)) I Z="A1" S IBNEED24=$S($P(IBV(Z),U,2):0,1:1)
"RTN","IBCEU2",61,0)
 ;
"RTN","IBCEU2",62,0)
 I $D(^DGCR(399,IBIFN,"OC","B",+IB24(24))) S IBNEED24=0
"RTN","IBCEU2",63,0)
 I 'IBNEED24,'IBNEED Q
"RTN","IBCEU2",64,0)
 I IBNEED D
"RTN","IBCEU2",65,0)
 . N IBZ,IBXDATA
"RTN","IBCEU2",66,0)
 . D F^IBCEF("N-OTH INSURANCE PRIOR PAYMENT","IBZ",,IBIFN) Q:'$O(IBZ(0))  ;No prior payment data found
"RTN","IBCEU2",67,0)
 . F Z="A1","A2" I $D(IBNEED(Z)) S Z0=$TR(Z,"A"),IBNEED(Z)=$G(IBZ(Z0)) S:IBNEED(Z) IBCT=IBCT+1,IBVN(Z)="" I Z="A1",$P(IBNEED(Z),U,2) S IBNEED24=0
"RTN","IBCEU2",68,0)
 ;
"RTN","IBCEU2",69,0)
 I IBNEED24 D
"RTN","IBCEU2",70,0)
 . N Z1,IBZ,IBXDATA
"RTN","IBCEU2",71,0)
 . ; Get primary's EOB data if possible - find EOB reject date
"RTN","IBCEU2",72,0)
 . D F^IBCEF("N-EOB ENTRIES","IBZ",,IBIFN)
"RTN","IBCEU2",73,0)
 . Q:'$O(IBZ(1,0))  ;EOB entry not found for primary insurance
"RTN","IBCEU2",74,0)
 . S (IB24,Z)=""
"RTN","IBCEU2",75,0)
 . F  S Z=$O(IBZ(1,Z),-1) Q:'Z  S Z0=$G(^IBM(361.1,+IBZ(1,Z),0)),Z1=+$G(^(1)) I 'Z1 S IB24=$P(Z0,U,6)\1 Q:IB24
"RTN","IBCEU2",76,0)
 . Q:'IB24
"RTN","IBCEU2",77,0)
 . W:'$G(IBQUIET) !,"Adding occurrence code 24 and primary insurance rejection date to bill"
"RTN","IBCEU2",78,0)
 . S DA(1)=IBIFN,DIC="^DGCR(399,"_IBIFN_",""OC"",",X=IB24(24),DLAYGO=399.041
"RTN","IBCEU2",79,0)
 . S DIC("P")=$$GETSPEC^IBEFUNC(399,41),DIC(0)="L",DIC("DR")=".02////"_IB24
"RTN","IBCEU2",80,0)
 . D FILE^DICN K DO,DD,DIC,DLAYGO
"RTN","IBCEU2",81,0)
 ;
"RTN","IBCEU2",82,0)
 I IBNEED D
"RTN","IBCEU2",83,0)
 . W:'$G(IBQUIET) !!,"Adding value code",$S(IBCT=2:"s A1 and A2",1:$O(IBVN("")))," for reporting of bill's prior payments"
"RTN","IBCEU2",84,0)
 . ; Adding codes to bill
"RTN","IBCEU2",85,0)
 . F Z="A1","A2" I $D(IBVN(Z)) D
"RTN","IBCEU2",86,0)
 .. S DA(1)=IBIFN,DIC="^DGCR(399,"_IBIFN_",""VC"",",X=IB24(Z),DLAYGO=399.047
"RTN","IBCEU2",87,0)
 .. S DIC("P")=$$GETSPEC^IBEFUNC(399,47),DIC(0)="L",DIC("DR")=".02////"_+$P(IBNEED(Z),U,2)
"RTN","IBCEU2",88,0)
 .. D FILE^DICN K DO,DD,DIC,DLAYGO
"RTN","IBCEU2",89,0)
 ;
"RTN","IBCEU2",90,0)
 Q
"RTN","IBCEU2",91,0)
 ;
"RTN","IBCEU2",92,0)
SUBDOB(IBIFN,IBCOBN,IBQUIET) ; Add occurrence codes A1,B1,C1 as needed for subscriber DOB
"RTN","IBCEU2",93,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEU2",94,0)
 ; IBQUIET = 1 to suppress screen display
"RTN","IBCEU2",95,0)
 ;
"RTN","IBCEU2",96,0)
 N IBZ,Z,Z0,IBVOC,DR
"RTN","IBCEU2",97,0)
 S (IBVOC("A1"),IBVOC("B1"),IBVOC("C1"))=0
"RTN","IBCEU2",98,0)
 F Z0="A1","B1","C1" S Z=0 F  S Z=$O(^DGCR(399.1,"C1",Z0,Z)) Q:'Z  I $P($G(^DGCR(399.1,Z,0)),U,4) S IBVOC(Z0)=Z Q  ;Occurrence codes A1, B1, C1
"RTN","IBCEU2",99,0)
 F Z=1,2,3 I $D(^DGCR(399,IBIFN,"I"_Z)) D
"RTN","IBCEU2",100,0)
 . N IBZ1,IBZ2,IBOC,DIC,DA,DLAYGO,DO,DD,X,Y
"RTN","IBCEU2",101,0)
 . S IBOC=$E("ABC",Z)_"1"
"RTN","IBCEU2",102,0)
 . Q:'IBVOC(IBOC)
"RTN","IBCEU2",103,0)
 . Q:$D(^DGCR(399,IBIFN,"OC","B",IBVOC(IBOC)))  ;Already there
"RTN","IBCEU2",104,0)
 . I '$D(IBZ) D
"RTN","IBCEU2",105,0)
 .. D F^IBCEF("N-CURR INSURED DEMOGRAPHICS","IBZ1",,IBIFN)
"RTN","IBCEU2",106,0)
 .. D F^IBCEF("N-OTH INSURED DEMOGRAPHICS","IBZ2",,IBIFN)
"RTN","IBCEU2",107,0)
 .. I IBCOBN=1 S IBZ(1)=+$G(IBZ1),IBZ(2)=+$G(IBZ2(1)),IBZ(3)=+$G(IBZ2(2)) Q
"RTN","IBCEU2",108,0)
 .. I IBCOBN=2 S IBZ(1)=+$G(IBZ2(1)),IBZ(2)=+$G(IBZ1),IBZ(3)=+$G(IBZ2(2)) Q
"RTN","IBCEU2",109,0)
 .. I IBCOBN=3 S IBZ(1)=+$G(IBZ2(1)),IBZ(2)=+$G(IBZ2(2)),IBZ(3)=+$G(IBZ1)
"RTN","IBCEU2",110,0)
 . Q:'$G(IBZ(Z))!$D(^DGCR(399,IBIFN,"OC","B",IBOC(IBOC)))
"RTN","IBCEU2",111,0)
 . W:'$G(IBQUIET) !,"Adding occurrence code '"_IBOC_"' for "_$P("primary^secondary^tertiary",U,Z)_" insurance subscriber's date of birth"
"RTN","IBCEU2",112,0)
 . S DIC="^DGCR(399,"_IBIFN_",""OC"",",DA(1)=IBIFN,DLAYGO=399.041,DIC(0)="L",DIC("P")=$$GETSPEC^IBEFUNC(399,41),X=IBVOC(IBOC),DIC("DR")=".02////"_IBZ(Z)
"RTN","IBCEU2",113,0)
 . D FILE^DICN K DO,DD
"RTN","IBCEU2",114,0)
 Q
"RTN","IBCEU2",115,0)
 ;
"RTN","IBCEU2",116,0)
COMBO(IBXDATA,IBXTRA,IBINST) ; Determine the bundled/unbundled codes - add
"RTN","IBCEU2",117,0)
 ; line items where needed to line item array IBXDATA(line #)
"RTN","IBCEU2",118,0)
 ; Update referenced line in COB entries returned in IBXDATA
"RTN","IBCEU2",119,0)
 ; IBXTR = array input with bundled/unbundled procedures
"RTN","IBCEU2",120,0)
 ;      ("ALL",original line~original procedure~service date,
"RTN","IBCEU2",121,0)
 ;          new procedure)=COB seq #^sequence # of adjustment in
"RTN","IBCEU2",122,0)
 ;          IBXDATA(n,"COB",COB seq #,adj#)
"RTN","IBCEU2",123,0)
 ; IBINST = 1 if institutional claim, 0 if professional
"RTN","IBCEU2",124,0)
 N Z,Z0,Z1
"RTN","IBCEU2",125,0)
 S Z="" F  S Z=$O(IBXTRA("ALL",Z)) Q:Z=""  S Z0=$O(IBXTRA("ALL",Z,"")) D
"RTN","IBCEU2",126,0)
 . ; Unbundled procs will have multiple entries for the combination of
"RTN","IBCEU2",127,0)
 . ; line~original procedure~service date - one for every new procedure
"RTN","IBCEU2",128,0)
 . ; Bundled ones will have multiple entries for the same original
"RTN","IBCEU2",129,0)
 . ; procedure~service date combination
"RTN","IBCEU2",130,0)
 . ;
"RTN","IBCEU2",131,0)
 . I $O(IBXTRA("ALL",Z,Z0))'="" S Z0="" F  S Z0=$O(IBXTRA("ALL",Z,Z0)) Q:Z0=""  S IBXTRA("U",Z,Z0)=IBXTRA("ALL",Z,Z0) Q
"RTN","IBCEU2",132,0)
 . ; Must be bundled
"RTN","IBCEU2",133,0)
 . S IBXTRA("B",Z0_"~"_$P(Z,"~",3),$P(Z,"~",1,2))=IBXTRA("ALL",Z,Z0)
"RTN","IBCEU2",134,0)
 K IBXTRA("ALL")
"RTN","IBCEU2",135,0)
 ;
"RTN","IBCEU2",136,0)
 ; UNBUNDLED
"RTN","IBCEU2",137,0)
 I $D(IBXTRA("U")) D  ; Add a new entry to IBXDATA for each new proc
"RTN","IBCEU2",138,0)
 . S Z="" F  S Z=$O(IBXTRA("U",Z)) Q:Z=""  S Z0="" F  S Z0=$O(IBXTRA("U",Z,Z0)) Q:Z0=""  D
"RTN","IBCEU2",139,0)
 .. ; Z0 = the new procedure, +Z = the original line to reference
"RTN","IBCEU2",140,0)
 .. S Z1=+$O(IBXDATA(""),-1)+1,IBXDATA(Z1)=IBXDATA(+Z)
"RTN","IBCEU2",141,0)
 .. I '$G(IBINST) S $P(IBXDATA(Z1),U,8)=0,$P(IBXDATA(Z1),U,5)=Z0,$P(IBXDATA(+Z,"COB",+IBXTRA("U",Z,Z0),$P(IBXTRA("U",Z,Z0),U,2)),U)=Z1
"RTN","IBCEU2",142,0)
 .. I $G(IBINST) S $P(IBXDATA(Z1),U,3)=0,$P(IBXDATA(Z1),U,5,6)="0^0",$P(IBXDATA(Z1),U,2)=Z0
"RTN","IBCEU2",143,0)
 ;
"RTN","IBCEU2",144,0)
 ; BUNDLED
"RTN","IBCEU2",145,0)
 I $D(IBXTRA("B")) D  ; Add a new entry to IBXDATA for the new proc
"RTN","IBCEU2",146,0)
 . N PROC1
"RTN","IBCEU2",147,0)
 . S Z0="" F  S Z0=$O(IBXTRA("B",Z0)) Q:Z0=""  S PROC1="",Z=$O(IBXTRA("B",Z0,"")) Q:Z=""  D
"RTN","IBCEU2",148,0)
 .. ; $P(Z0,"~",1) = the new procedure, +Z = the original line to reference
"RTN","IBCEU2",149,0)
 .. I 'PROC1 N ZP S PROC1=1,Z1=+$O(IBXDATA(""),-1)+1,IBXDATA(Z1)=IBXDATA(+Z),ZP=$P(Z0,"~") D
"RTN","IBCEU2",150,0)
 ... I '$G(IBINST) S $P(IBXDATA(Z1),U,8)=0,$P(IBXDATA(Z1),U,5)=ZP,$P(IBXDATA(+Z,"COB",+IBXTRA("U",Z,Z0),$P(IBXTRA("U",Z,Z0),U,2)),U)=Z1
"RTN","IBCEU2",151,0)
 .. I $G(IBINST) S $P(IBXDATA(Z1),U,3)=0,$P(IBXDATA(Z1),U,5,6)="0^0",$P(IBXDATA(Z1),U,2)=ZP
"RTN","IBCEU2",152,0)
 .. S $P(IBXDATA(+Z,"COB",+IBXTRA("U",Z,Z0),$P(IBXTRA("U",Z,Z0),U,2)),U)=Z1 ;Update original line with reference to the new procedure line
"RTN","IBCEU2",153,0)
 ;
"RTN","IBCEU2",154,0)
 Q
"RTN","IBCEU2",155,0)
 ;
"RTN","IBCEU2",156,0)
MCRPT(DFN,IBDT) ; Determine if patient has MCRWNR insurance or if they
"RTN","IBCEU2",157,0)
 ; are at least 65 yrs old, so should be MCR eligible as of IBDT (or DT)
"RTN","IBCEU2",158,0)
 ; DFN = ien of patient
"RTN","IBCEU2",159,0)
 N MCR,DOB,Z
"RTN","IBCEU2",160,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBCEU2",161,0)
 S (MCR,Z)=0
"RTN","IBCEU2",162,0)
 F  S Z=$O(^DPT(2,DFN,2.312,Z)) Q:'Z  I $$MCRWNR^IBEFUNC(+$P($G(^(Z,0)),U)) S MCR=1 Q
"RTN","IBCEU2",163,0)
 I 'MCR S DOB=+$P($G(^DPT(DFN,0)),U,3) I DOB,$E(DT,1,3)-$E(DOB,1,3)-($E(DT,4,7)<$E(DOB,4,7)) S MCR=1
"RTN","IBCEU2",164,0)
 Q MCR
"RTN","IBCEU2",165,0)
 ;
"RTN","IBCEU5")
0^11^B87835412^B87188709
"RTN","IBCEU5",1,0)
IBCEU5 ;ALB/TMP - EDI UTILITIES (continued) FOR CMS-1500 ;13-DEC-99
"RTN","IBCEU5",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,232,348,349**;21-MAR-94;Build 46
"RTN","IBCEU5",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEU5",4,0)
 ;
"RTN","IBCEU5",5,0)
EXTCR(IBPRV) ; Called by trigger on field .02 of file 399.0222
"RTN","IBCEU5",6,0)
 ; Function returns the first 3 digits of the provider's degree if
"RTN","IBCEU5",7,0)
 ; a VA provider or the credentials in file 355.9 if non-VA provider
"RTN","IBCEU5",8,0)
 ; IBPRV = vp to file 200 or 355.93
"RTN","IBCEU5",9,0)
 Q $E($$CRED^IBCEU(IBPRV),1,3)
"RTN","IBCEU5",10,0)
 ; 
"RTN","IBCEU5",11,0)
FTPRV(IBIFN,NOASK) ; If form type changes from UB-04 to CMS-1500 or vice
"RTN","IBCEU5",12,0)
 ; versa, ask to change provider function to appropriate function for
"RTN","IBCEU5",13,0)
 ; form type (ATTENDING = UB-04, RENDERING = CMS-1500)
"RTN","IBCEU5",14,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEU5",15,0)
 ; NOASK (flag) = 1 if change should happen without asking first
"RTN","IBCEU5",16,0)
 N ATT,REN,FT
"RTN","IBCEU5",17,0)
 S FT=$$FT^IBCEF(IBIFN)
"RTN","IBCEU5",18,0)
 S REN=$$CKPROV^IBCEU(IBIFN,3,1)
"RTN","IBCEU5",19,0)
 S ATT=$$CKPROV^IBCEU(IBIFN,4,1)
"RTN","IBCEU5",20,0)
 I $S(FT=2:'REN&ATT,FT=3:'ATT&REN,1:0) D
"RTN","IBCEU5",21,0)
 . I '$G(NOASK) D TXFERPRV(IBIFN,FT) Q
"RTN","IBCEU5",22,0)
 . D PRVCHG(IBIFN,FT)
"RTN","IBCEU5",23,0)
 Q
"RTN","IBCEU5",24,0)
 ;
"RTN","IBCEU5",25,0)
TXFERPRV(IBIFN,FT) ; Ask to change the function of the main provider on
"RTN","IBCEU5",26,0)
 ;  bill IBIFN to the function appropriate to the form type FT
"RTN","IBCEU5",27,0)
 ;  
"RTN","IBCEU5",28,0)
 N DIR,X,Y,Z,DIE,DA,DR,HAVE,NEED,IBZ
"RTN","IBCEU5",29,0)
 W ! S DIR("A")="  WANT TO CHANGE THE "_$S(FT=3:"RENDERING",1:"ATTENDING")_" PROVIDER'S FUNCTION TO "_$S(FT=3:"ATTENDING",1:"RENDERING")_"?: "
"RTN","IBCEU5",30,0)
 S DIR(0)="YA",DIR("B")="YES",DIR("?",1)="IF YOU ANSWER YES HERE, YOU WILL MAKE THE PROVIDER FUNCTIONS CONSISTENT",DIR("?")="  WITH THE FORM TYPE OF THE BILL"
"RTN","IBCEU5",31,0)
 D ^DIR K DIR
"RTN","IBCEU5",32,0)
 Q:Y'=1
"RTN","IBCEU5",33,0)
 D PRVCHG(IBIFN,FT)
"RTN","IBCEU5",34,0)
 Q
"RTN","IBCEU5",35,0)
 ;
"RTN","IBCEU5",36,0)
PRVCHG(IBIFN,IBFT) ; Change provider type to type consistent with current
"RTN","IBCEU5",37,0)
 ; data on bill
"RTN","IBCEU5",38,0)
 N Z,IBZ,HAVE,NEED,DIE,DA,X,Y
"RTN","IBCEU5",39,0)
 S HAVE=$S(IBFT=3:3,1:4)
"RTN","IBCEU5",40,0)
 S NEED=$S(IBFT=3:4,1:3)
"RTN","IBCEU5",41,0)
 S Z=$O(^DGCR(399,IBIFN,"PRV","B",HAVE,0))
"RTN","IBCEU5",42,0)
 I Z D
"RTN","IBCEU5",43,0)
 . S DA(1)=IBIFN,DA=+Z
"RTN","IBCEU5",44,0)
 . D FDA^DILF(399.0222,.DA,.01,,NEED,"IBZ")
"RTN","IBCEU5",45,0)
 . D FILE^DIE(,"IBZ")
"RTN","IBCEU5",46,0)
 ;I Z S DA(1)=IBIFN,DIE="^DGCR(399,"_DA(1)_",""PRV"",",DA=+Z,DR=".01////"_NEED D FILE^DIE(,DIE
"RTN","IBCEU5",47,0)
 Q
"RTN","IBCEU5",48,0)
 ;
"RTN","IBCEU5",49,0)
PRVHELP ; Text for the provider function help
"RTN","IBCEU5",50,0)
 Q:$G(X)'="??"
"RTN","IBCEU5",51,0)
 N IBZ,IBQUIT,IB,IB1,DIR
"RTN","IBCEU5",52,0)
 S IBQUIT=0
"RTN","IBCEU5",53,0)
 I '$D(IOSL)!'$D(IOST) D HOME^%ZIS
"RTN","IBCEU5",54,0)
 Q:IOST'["C-"
"RTN","IBCEU5",55,0)
 W @IOF
"RTN","IBCEU5",56,0)
 I $G(D0) D
"RTN","IBCEU5",57,0)
 . N Z
"RTN","IBCEU5",58,0)
 . D SPECIFIC(D0)
"RTN","IBCEU5",59,0)
 . S Z=$$FT^IBCEF(D0)
"RTN","IBCEU5",60,0)
 . I $S(Z=2:$D(^DGCR(399,D0,"PRV","B",4)),Z=3:$D(^DGCR(399,D0,"PRV","B",3)),1:0) D
"RTN","IBCEU5",61,0)
 .. W !,"**** ",$S(Z=2:"ATTENDING",1:"RENDERING")," FUNCTION DOES NOT BELONG ON THIS BILL TYPE & MUST BE DELETED"
"RTN","IBCEU5",62,0)
 S IB=IOSL,IB1=1
"RTN","IBCEU5",63,0)
 F IBZ=1:1 S:$P($T(HLPTXT+IBZ),";;",2)="" IBQUIT=1 Q:IBQUIT  S IB1=1 D
"RTN","IBCEU5",64,0)
 . I $Y>(IB-3) N DIR,X,Y S IB1=0,DIR(0)="E" D ^DIR K DIR S IB=IB+IOSL I Y'=1 S IBQUIT=1 Q
"RTN","IBCEU5",65,0)
 . W !,$P($T(HLPTXT+IBZ),";;",2)
"RTN","IBCEU5",66,0)
 I IB1 D
"RTN","IBCEU5",67,0)
 . N DIR,X,Y S DIR(0)="E" D ^DIR K DIR
"RTN","IBCEU5",68,0)
 W @IOF
"RTN","IBCEU5",69,0)
 Q
"RTN","IBCEU5",70,0)
 ;
"RTN","IBCEU5",71,0)
SPECIFIC(IBIFN) ; Display specific provider requirements for the bill IBIFN
"RTN","IBCEU5",72,0)
 N IBFT,IBPRV,IBR,ONBILL,Z,IBZ
"RTN","IBCEU5",73,0)
 S IBFT=$$FT^IBCEF(IBIFN)
"RTN","IBCEU5",74,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV) ;Returns needed providers
"RTN","IBCEU5",75,0)
 W !,"This bill is ",$S(IBFT=3:"UB-04",1:"CMS-1500"),"/",$S($$INPAT^IBCEF(IBIFN):"Inpatient",1:"Outpatient")
"RTN","IBCEU5",76,0)
 W !!,"The valid provider functions for this bill are:"
"RTN","IBCEU5",77,0)
 F IBZ=1:1:5,9 I $$PRVOK^IBCEU(IBZ,IBIFN) D
"RTN","IBCEU5",78,0)
 . S ONBILL=$$CKPROV^IBCEU(IBIFN,IBZ)
"RTN","IBCEU5",79,0)
 . S IBR=$S($G(IBPRV(IBZ,"NOTOPT")):1,1:0)
"RTN","IBCEU5",80,0)
 . W !,IBZ,"  ",$$EXPAND^IBTRE(399.0222,.01,IBZ),?13,$S(IBR&'ONBILL:"**",1:""),?15,$S(IBR:"REQUIRED",1:"OPTIONAL"),$S(ONBILL:" - ALREADY ON BILL",1:" - NOT ON BILL")
"RTN","IBCEU5",81,0)
 W !
"RTN","IBCEU5",82,0)
 Q
"RTN","IBCEU5",83,0)
 ;
"RTN","IBCEU5",84,0)
HLPTXT ; Helptext for provider function
"RTN","IBCEU5",85,0)
 ;; 
"RTN","IBCEU5",86,0)
 ;;PROVIDER FUNCTION requirements:
"RTN","IBCEU5",87,0)
 ;; 
"RTN","IBCEU5",88,0)
 ;;RENDERING: CMS-1500 (both inpatient and outpatient): REQUIRED
"RTN","IBCEU5",89,0)
 ;;           This is the provider who performed the services.
"RTN","IBCEU5",90,0)
 ;;           Data will appear in Form Locator 24 of the CMS-1500.
"RTN","IBCEU5",91,0)
 ;; 
"RTN","IBCEU5",92,0)
 ;;    NOTE: There can be only one rendering provider per CMS-1500
"RTN","IBCEU5",93,0)
 ;;          claim form, so there may be multiple CMS-1500's for a
"RTN","IBCEU5",94,0)
 ;;          single episode of care if services were performed by more
"RTN","IBCEU5",95,0)
 ;;          than one provider.  For example, there will be 2 CMS-1500's
"RTN","IBCEU5",96,0)
 ;;          created for an episode of care that involved a surgical
"RTN","IBCEU5",97,0)
 ;;          procedure and a radiology exam.  The operating physician
"RTN","IBCEU5",98,0)
 ;;          would be the rendering provider on the CMS-1500 that
"RTN","IBCEU5",99,0)
 ;;          included the surgical procedure(s) and the radiologist
"RTN","IBCEU5",100,0)
 ;;          would be the rendering provider on the CMS-1500 that
"RTN","IBCEU5",101,0)
 ;;          included the radiology procedure(s).
"RTN","IBCEU5",102,0)
 ;; 
"RTN","IBCEU5",103,0)
 ;; 
"RTN","IBCEU5",104,0)
 ;;ATTENDING: UB-04 (inpatient and outpatient): REQUIRED
"RTN","IBCEU5",105,0)
 ;;           The physician who normally would be expected to
"RTN","IBCEU5",106,0)
 ;;           certify and recertify the medical necessity of the
"RTN","IBCEU5",107,0)
 ;;           services rendered and/or who has primary responsibility
"RTN","IBCEU5",108,0)
 ;;           for the patient's medical care and treatment.  Data is
"RTN","IBCEU5",109,0)
 ;;           printed in Form Locator 76 on the UB-04.
"RTN","IBCEU5",110,0)
 ;; 
"RTN","IBCEU5",111,0)
 ;;    NOTE: If there are multiple attending providers for the bill,
"RTN","IBCEU5",112,0)
 ;;          report the attending provider for the procedure having the
"RTN","IBCEU5",113,0)
 ;;          highest charge.  For outpatient, if the patient is
"RTN","IBCEU5",114,0)
 ;;          self-referred (e.g.: an ER or clinic visit), you may use
"RTN","IBCEU5",115,0)
 ;;          SLF000 as the attending provider id, with no provider
"RTN","IBCEU5",116,0)
 ;;          name.  SLF000 may NOT be used for services which require a
"RTN","IBCEU5",117,0)
 ;;          physician referral/order.
"RTN","IBCEU5",118,0)
 ;; 
"RTN","IBCEU5",119,0)
 ;; 
"RTN","IBCEU5",120,0)
 ;;OPERATING: UB-04 (inpatient and outpatient): SOMETIMES REQUIRED
"RTN","IBCEU5",121,0)
 ;;           The provider who performed the principal procedure(s)
"RTN","IBCEU5",122,0)
 ;;           being billed.  Data will be printed in Form Locator 77
"RTN","IBCEU5",123,0)
 ;;           on the UB-04.
"RTN","IBCEU5",124,0)
 ;; 
"RTN","IBCEU5",125,0)
 ;;    NOTE: Not applicable for CMS-1500 form type as this would be
"RTN","IBCEU5",126,0)
 ;;                             reported as the rendering provider on
"RTN","IBCEU5",127,0)
 ;;                             the CMS-1500.
"RTN","IBCEU5",128,0)
 ;;          UB-04 (inpatient): REQUIRED IF type of bill has first 2
"RTN","IBCEU5",129,0)
 ;;                             digits of 11, and there is a principal
"RTN","IBCEU5",130,0)
 ;;                             procedure that will print in Form
"RTN","IBCEU5",131,0)
 ;;                             Locator 74 of the claim.
"RTN","IBCEU5",132,0)
 ;;          UB-04 (outpatient): REQUIRED IF type of bill has first 2
"RTN","IBCEU5",133,0)
 ;;                             digits of 83, and there is a principal
"RTN","IBCEU5",134,0)
 ;;                             procedure that will print in Form
"RTN","IBCEU5",135,0)
 ;;                             Locator 74 of the claim.
"RTN","IBCEU5",136,0)
 ;; 
"RTN","IBCEU5",137,0)
 ;; 
"RTN","IBCEU5",138,0)
 ;;REFERRING: CMS-1500 (both inpatient and outpatient): OPTIONAL
"RTN","IBCEU5",139,0)
 ;;           The provider who requested that the services being billed
"RTN","IBCEU5",140,0)
 ;;           be performed.  Data will be printed in boxes 17 and 17a of
"RTN","IBCEU5",141,0)
 ;;           the CMS-1500.
"RTN","IBCEU5",142,0)
 ;; 
"RTN","IBCEU5",143,0)
 ;; 
"RTN","IBCEU5",144,0)
 ;;SUPERVISING: CMS-1500 (both inpatient and outpatient): OPTIONAL
"RTN","IBCEU5",145,0)
 ;;           Required only when the rendering provider is supervised
"RTN","IBCEU5",146,0)
 ;;           by a physician.  Data will not be printed.
"RTN","IBCEU5",147,0)
 ;; 
"RTN","IBCEU5",148,0)
 ;; 
"RTN","IBCEU5",149,0)
 ;;OTHER: UB-04 (both inpatient and outpatient): OPTIONAL
"RTN","IBCEU5",150,0)
 ;;           Used to report providers with functions not specifically
"RTN","IBCEU5",151,0)
 ;;           designated here.
"RTN","IBCEU5",152,0)
 ;;
"RTN","IBCEU5",153,0)
 ;
"RTN","IBCEU5",154,0)
LINKRX(IBIFN,IBREV) ; Ask for revenue code's RX if not already there
"RTN","IBCEU5",155,0)
 N DIR,X,Y,IBZ,IBRX,Z,Z0,DA
"RTN","IBCEU5",156,0)
 Q:$P($G(^DGCR(399,IBIFN,"RC",IBREV,0)),U,11)!($P($G(^(0)),U,10)'=3)
"RTN","IBCEU5",157,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  I Z'=IBREV S Z0=$G(^(Z,0)) I $P(Z0,U,10)=3,$P(Z0,U,11) S IBRX(+$P(Z0,U,11))=""
"RTN","IBCEU5",158,0)
 S DIR(0)="PAO^IBA(362.4,:AEMQ",DIR("S")="I $P(^(0),U,2)=IBIFN,'$D(IBRX(+Y))"
"RTN","IBCEU5",159,0)
 S DIR("A")="Select Rx for this charge: "
"RTN","IBCEU5",160,0)
 S DIR("?",1)="Enter an Rx# for this revenue code"
"RTN","IBCEU5",161,0)
 S DIR("?")=" The Rx must not already have an associated revenue code"
"RTN","IBCEU5",162,0)
 D ^DIR K DIR
"RTN","IBCEU5",163,0)
 I Y>0 D
"RTN","IBCEU5",164,0)
 . S DA(1)=IBIFN,DA=IBREV,IBZ=""
"RTN","IBCEU5",165,0)
 . D FDA^DILF(399.042,.DA,.11,"R",+Y,"IBZ")
"RTN","IBCEU5",166,0)
 . D FILE^DIE(,"IBZ")
"RTN","IBCEU5",167,0)
 Q
"RTN","IBCEU5",168,0)
 ;
"RTN","IBCEU5",169,0)
LINKCPT(IBIFN,IBREV) ; Ask for revenue code's CPT
"RTN","IBCEU5",170,0)
 N DIR,X,Y,IBZ,IBCP,Z,Z0,Z1,DA,IBRC,IBP
"RTN","IBCEU5",171,0)
 S IBRC=$G(^DGCR(399,IBIFN,"RC",IBREV,0))
"RTN","IBCEU5",172,0)
 Q:$P(IBRC,U,8)!($P(IBRC,U,10)'=4)
"RTN","IBCEU5",173,0)
 S IBP=+$P(IBRC,U,6)
"RTN","IBCEU5",174,0)
 I $P(IBRC,U,11) W !,"PROCEDURE #"_$P(IBRC,U,11)_" HAS BEEN ASSOCIATED WITH THIS MANUAL CHARGE"
"RTN","IBCEU5",175,0)
 I '$P(IBRC,U,11) D  Q:IBRC=""
"RTN","IBCEU5",176,0)
 . S DIR("?",1)="Respond YES if this revenue code charge specifically references the data for"
"RTN","IBCEU5",177,0)
 . S DIR("?",2)="  a particular procedure that was manually entered on the previous screen."
"RTN","IBCEU5",178,0)
 . S DIR("?",3)="  For outpatient UB-04 bills, associating a manual revenue code charge with",DIR("?")="  a procedure is the only way to print a modifier in box 44"
"RTN","IBCEU5",179,0)
 . S DIR(0)="YA",DIR("A")="SHOULD A PROCEDURE ENTRY BE ASSOCIATED WITH THIS CHARGE?: ",DIR("B")=$S(IBP:"YES",1:"NO") W ! D ^DIR K DIR W !
"RTN","IBCEU5",180,0)
 . I Y'=1 S IBRC="" Q
"RTN","IBCEU5",181,0)
 I $P(IBRC,U,11) D
"RTN","IBCEU5",182,0)
 . S DIR("?",1)="Respond YES if you no longer want this revenue code charge to reference a",DIR("?")="  specific manually entered procedure"
"RTN","IBCEU5",183,0)
 . S DIR(0)="YA",DIR("A")="DELETE THE EXISTING PROCEDURE ASSOCIATION?: ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","IBCEU5",184,0)
 . I Y=1 D UPDPTR(IBIFN,IBREV,"") S $P(IBRC,U,11)=""
"RTN","IBCEU5",185,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$G(^(Z,0)) I IBREV'=Z,$P(Z0,U,11) D
"RTN","IBCEU5",186,0)
 . ; Don't allow to link to 'used' proc
"RTN","IBCEU5",187,0)
 . I $P(Z0,U,10)=4 S IBCP($P(Z0,U,11))="" Q
"RTN","IBCEU5",188,0)
 . I $P(Z0,U,10)=3,$P(Z0,U,15) S IBCP($P(Z0,U,15))=""
"RTN","IBCEU5",189,0)
 S DIR(0)="PAO^DGCR(399,"_IBIFN_",""CP"",:AEMQ",DIR("S")="I '$D(IBCP(+Y)),$P(^(0),U)[""CPT"",+^(0)="_+$P($G(^DGCR(399,IBIFN,"RC",IBREV,0)),U,6)
"RTN","IBCEU5",190,0)
 S DIR("A")="SELECT A PROCEDURE ENTRY: "_$S($P(IBRC,U,11):"#"_$P(IBRC,U,11)_" - "_$$EXPAND^IBTRE(399.0304,.01,$P($G(^DGCR(399,IBIFN,"CP",$P(IBRC,U,11),0)),U))_"// ",1:"")
"RTN","IBCEU5",191,0)
 S DIR("?")="Enter a manually-added CPT procedure to associate with this charge"
"RTN","IBCEU5",192,0)
 S DA(1)=IBIFN
"RTN","IBCEU5",193,0)
 D ^DIR K DIR W !
"RTN","IBCEU5",194,0)
 I Y>0 D UPDPTR(IBIFN,IBREV,+Y)
"RTN","IBCEU5",195,0)
 Q
"RTN","IBCEU5",196,0)
 ;
"RTN","IBCEU5",197,0)
UPDPTR(IBIFN,IBREV,Y) ;
"RTN","IBCEU5",198,0)
 N IBZ,DA
"RTN","IBCEU5",199,0)
 S DA(1)=IBIFN,DA=IBREV,IBZ=""
"RTN","IBCEU5",200,0)
 D FDA^DILF(399.042,.DA,.11,"R",$S(Y:+Y,1:""),"IBZ")
"RTN","IBCEU5",201,0)
 D FILE^DIE(,"IBZ")
"RTN","IBCEU5",202,0)
 Q
"RTN","IBCEU5",203,0)
 ;
"RTN","IBCEU5",204,0)
INSFT(IBIFN) ; Returns 1 if form type is UB-04, 0 if CMS-1500
"RTN","IBCEU5",205,0)
 Q ($$FT^IBCEF(IBIFN)=3)
"RTN","IBCEU5",206,0)
 ;
"RTN","IBCEXTRP")
0^18^B22039999^B21578512
"RTN","IBCEXTRP",1,0)
IBCEXTRP ;ALB/JEH - VIEW/PRINT EDI EXTRACT DATA ; 4/22/03 9:59am
"RTN","IBCEXTRP",2,0)
 ;;2.0;INTEGRATED BILLING;**137,197,211,348,349**;21-MAR-94;Build 46
"RTN","IBCEXTRP",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEXTRP",4,0)
 ;
"RTN","IBCEXTRP",5,0)
EN ;
"RTN","IBCEXTRP",6,0)
INIT ;
"RTN","IBCEXTRP",7,0)
 W !!,"This option will display the EDI extract data for a bill.",!
"RTN","IBCEXTRP",8,0)
 N IBREC1,IBIEN,IBINC,DIC,X,Y,DIR,IB364IEN,IBVNUM
"RTN","IBCEXTRP",9,0)
 ;
"RTN","IBCEXTRP",10,0)
 N DPTNOFZY S DPTNOFZY=1 ; Suppress PATIENT file fuzzy lookups
"RTN","IBCEXTRP",11,0)
 S DIC="^DGCR(399,",DIC(0)="AEMQ",DIC("S")="I 234[$P(^(0),U,13)" D ^DIC
"RTN","IBCEXTRP",12,0)
 I Y<1 G EXITQ
"RTN","IBCEXTRP",13,0)
 S IBIEN=+Y,IBREC1=$G(^DGCR(399,IBIEN,0))
"RTN","IBCEXTRP",14,0)
 S IB364IEN=$$LAST364^IBCEF4(IBIEN) I +$G(IB364IEN)=0 D  G EXITQ
"RTN","IBCEXTRP",15,0)
 . W !,"There is no entry in the EDI Transmit Bill file for this bill number."
"RTN","IBCEXTRP",16,0)
 S IBVNUM=$P($G(^IBA(364,IB364IEN,0)),U,2) I +$G(IBVNUM)=0 D  G EXITQ
"RTN","IBCEXTRP",17,0)
 . W !!,"There is no batch # for this bill.  It has not been transmitted."
"RTN","IBCEXTRP",18,0)
 S IBVNUM=$P($G(^IBA(364.1,IBVNUM,0)),U)
"RTN","IBCEXTRP",19,0)
 S DIR("A")="INCLUDE FIELDS WITH NO DATA?: ",DIR("B")="NO",DIR(0)="YA" D ^DIR K DIR
"RTN","IBCEXTRP",20,0)
 I $D(DTOUT)!$D(DUOUT) G EXITQ
"RTN","IBCEXTRP",21,0)
 S IBINC=+Y
"RTN","IBCEXTRP",22,0)
DEV ; - Select device
"RTN","IBCEXTRP",23,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC
"RTN","IBCEXTRP",24,0)
 S %ZIS="QM" D ^%ZIS G:POP EXITQ
"RTN","IBCEXTRP",25,0)
 I $D(IO("Q")) D  G EXITQ
"RTN","IBCEXTRP",26,0)
 . S ZTRTN="LIST^IBCEXTRP",ZTDESC="Transmitted Bill Extract Data"
"RTN","IBCEXTRP",27,0)
 . S ZTSAVE("IB*")=""
"RTN","IBCEXTRP",28,0)
 . D ^%ZTLOAD
"RTN","IBCEXTRP",29,0)
 . W !!,$S($D(ZTSK):"Your task number "_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","IBCEXTRP",30,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBCEXTRP",31,0)
 U IO
"RTN","IBCEXTRP",32,0)
 ;
"RTN","IBCEXTRP",33,0)
LIST ; - set up array and print data
"RTN","IBCEXTRP",34,0)
 N IBPG,IBSEQ,IBPC,IBDA,IBREC,IBQUIT,IBILL,IBLINE,IBXDATA,IBERR,IBXERR,Z,Z0,Z1
"RTN","IBCEXTRP",35,0)
 D EXTRACT(IBIEN,IBVNUM,8,1)
"RTN","IBCEXTRP",36,0)
 S (IBPG,IBQUIT,IBSEQ,IBPC,IBDA,IBLINE)=0
"RTN","IBCEXTRP",37,0)
 K ^TMP($J,"IBLINES")
"RTN","IBCEXTRP",38,0)
 ;IB*2.0*211 - rely on form type instead of bill charge type
"RTN","IBCEXTRP",39,0)
 N IBFMTYP S IBFMTYP=$$FT^IBCEF(IBIEN)
"RTN","IBCEXTRP",40,0)
 S IBFMTYP=$S(IBFMTYP=2:"CMS-1500",IBFMTYP=3:"UB-04",1:"OTHER"_"("_IBFMTYP_")")
"RTN","IBCEXTRP",41,0)
 S IBILL=$S($$INPAT^IBCEF(IBIEN,1):"Inpt",1:"Oupt")_"/"_IBFMTYP
"RTN","IBCEXTRP",42,0)
 I $D(^TMP("IBXERR",$J)) D  G EXITQ
"RTN","IBCEXTRP",43,0)
 . S IBERR=0 F  S IBERR=$O(^TMP("IBXERR",$J,IBERR)) Q:'IBERR  W !,$G(^TMP("IBXERR",$J,IBERR))
"RTN","IBCEXTRP",44,0)
 F  S IBSEQ=$O(^IBA(364.6,"ASEQ",8,IBSEQ)) Q:'IBSEQ!(IBQUIT)  F  S IBPC=$O(^IBA(364.6,"ASEQ",8,IBSEQ,1,IBPC)) Q:'IBPC!(IBQUIT)  F  S IBDA=$O(^IBA(364.6,"ASEQ",8,IBSEQ,1,IBPC,IBDA)) Q:'IBDA!(IBQUIT)  S IBREC=$G(^IBA(364.6,IBDA,0)) D  Q:IBQUIT
"RTN","IBCEXTRP",45,0)
 . N IBOK,Z,IBMULT
"RTN","IBCEXTRP",46,0)
 . I $P(IBREC,U,11)=1 Q
"RTN","IBCEXTRP",47,0)
 . I IBPC=1 S IBOK=0 D
"RTN","IBCEXTRP",48,0)
 .. S Z=1 F  S Z=$O(^TMP("IBXDATA",$J,1,IBSEQ,1,Z)) Q:'Z  I $G(^(Z))'="" S IBOK=1 Q
"RTN","IBCEXTRP",49,0)
 .. I 'IBOK S $P(^TMP("IBXDATA",$J,1,IBSEQ,1,1),U)=$P($G(^TMP("IBXDATA",$J,1,IBSEQ,1,1)),U)_"  (NO DATA - RECORD NOT SENT)"
"RTN","IBCEXTRP",50,0)
 . S IBMULT=0 F  S IBMULT=$O(^TMP("IBXDATA",$J,1,IBSEQ,IBMULT)) Q:'IBMULT   D
"RTN","IBCEXTRP",51,0)
 .. I '$G(IBINC),$P($G(^TMP("IBXDATA",$J,1,IBSEQ,IBMULT,IBPC)),U)="" Q
"RTN","IBCEXTRP",52,0)
 .. S ^TMP($J,"IBLINES",IBSEQ,IBMULT,IBPC)=$E($P(IBREC,U,10)_$J("",30),1,30)_": "_$P($G(^TMP("IBXDATA",$J,1,IBSEQ,IBMULT,IBPC)),U)
"RTN","IBCEXTRP",53,0)
 .
"RTN","IBCEXTRP",54,0)
 W:$E(IOST,1,2)["C-" @IOF ; initial form feed for screen print
"RTN","IBCEXTRP",55,0)
 N IBFMTYP S IBFMTYP=$$FT^IBCEF(IBIEN)
"RTN","IBCEXTRP",56,0)
 S IBFMTYP=$S(IBFMTYP=2:"CMS-1500",IBFMTYP=3:"UB-04",1:"OTHER"_"("_IBFMTYP_")")
"RTN","IBCEXTRP",57,0)
 S IBILL=$S($$INPAT^IBCEF(IBIEN,1):"Inpt",1:"Oupt")_"/"_IBFMTYP
"RTN","IBCEXTRP",58,0)
 D HDR
"RTN","IBCEXTRP",59,0)
 S Z=0 F  S Z=$O(^TMP($J,"IBLINES",Z)) Q:'Z  S Z0=0 F  S Z0=$O(^TMP($J,"IBLINES",Z,Z0)) Q:'Z0  S Z1=0 F  S Z1=$O(^TMP($J,"IBLINES",Z,Z0,Z1)) Q:'Z1  D  G:IBQUIT Q1
"RTN","IBCEXTRP",60,0)
 . D:IBLINE>(IOSL-5) HDR Q:IBQUIT
"RTN","IBCEXTRP",61,0)
 . W !,^TMP($J,"IBLINES",Z,Z0,Z1)
"RTN","IBCEXTRP",62,0)
 . S IBLINE=IBLINE+1
"RTN","IBCEXTRP",63,0)
Q1 K ^TMP($J,"IBLINES")
"RTN","IBCEXTRP",64,0)
 Q
"RTN","IBCEXTRP",65,0)
 ;
"RTN","IBCEXTRP",66,0)
HDR ; - Report header
"RTN","IBCEXTRP",67,0)
 N DIR,Y
"RTN","IBCEXTRP",68,0)
 I IBPG D  Q:IBQUIT
"RTN","IBCEXTRP",69,0)
 . I $E(IOST,1,2)["C-" K DIR S DIR(0)="E" D ^DIR K DIR S IBQUIT=('Y) Q:IBQUIT
"RTN","IBCEXTRP",70,0)
 . W @IOF
"RTN","IBCEXTRP",71,0)
 ;
"RTN","IBCEXTRP",72,0)
 S IBPG=IBPG+1
"RTN","IBCEXTRP",73,0)
 W !!,?25,"EDI Transmitted Bill Extract Data",!,"Bill #",?11,"Type",?27,"Patient Name",?52,"SSN",?57,$$FMTE^XLFDT(DT),?71,"Page: "_IBPG
"RTN","IBCEXTRP",74,0)
 W !,$TR($J("",IOM)," ","=")
"RTN","IBCEXTRP",75,0)
 W !,$P(IBREC1,U)_" "_"("_IBILL_")",?27,$P($G(^DPT(+$P(IBREC1,U,2),0)),U),?52,$P($G(^DPT($P(IBREC1,U,2),0)),U,9),!
"RTN","IBCEXTRP",76,0)
 S IBLINE=5
"RTN","IBCEXTRP",77,0)
 Q
"RTN","IBCEXTRP",78,0)
 ;
"RTN","IBCEXTRP",79,0)
ASK ;
"RTN","IBCEXTRP",80,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","IBCEXTRP",81,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","IBCEXTRP",82,0)
 S DIR(0)="E" D ^DIR
"RTN","IBCEXTRP",83,0)
 I ($D(DIRUT))!($D(DUOUT)) S IBQUIT=1
"RTN","IBCEXTRP",84,0)
 Q
"RTN","IBCEXTRP",85,0)
 ;
"RTN","IBCEXTRP",86,0)
EXITQ ; - clean up and exit
"RTN","IBCEXTRP",87,0)
 I $E(IOST,1,2)["C-" K DIR S DIR(0)="E" W ! D ^DIR K DIR
"RTN","IBCEXTRP",88,0)
 K ^TMP("IBXERR",$J),^TMP("IBXDATA",$J),IBXERR
"RTN","IBCEXTRP",89,0)
 D CLEAN^DILF
"RTN","IBCEXTRP",90,0)
 Q
"RTN","IBCEXTRP",91,0)
 ;
"RTN","IBCEXTRP",92,0)
EXTRACT(IBIFN,IBBATCH,IBFORM,IBLOCAL) ; Extracts transmitted form data into global
"RTN","IBCEXTRP",93,0)
 ; ^TMP("IBXDATA",$J).  Errors are in ^TMP("IBXERR",$J,err_num)=text.
"RTN","IBCEXTRP",94,0)
 ; IBBATCH = Batch # of bill (if known), otherwise, set to 1.  This
"RTN","IBCEXTRP",95,0)
 ;          variable must be > 0 to prevent a new batch from being added
"RTN","IBCEXTRP",96,0)
 ; IBFORM = the ien of the form in file 353
"RTN","IBCEXTRP",97,0)
 ; IBLOCAL = 1 if OK to use local form, 0 if not
"RTN","IBCEXTRP",98,0)
 N IBVNUM,IBL
"RTN","IBCEXTRP",99,0)
 D FORMPRE^IBCFP1
"RTN","IBCEXTRP",100,0)
 S IBVNUM=$G(IBBATCH)
"RTN","IBCEXTRP",101,0)
 S IBL=$S('$G(IBLOCAL):IBFORM,1:"") ; No local form ... set = main form
"RTN","IBCEXTRP",102,0)
 ; Get local form associated with parent, if any
"RTN","IBCEXTRP",103,0)
 I IBL="" S IBL=$S($P($G(^IBE(353,+IBFORM,2)),U,8):$P(^(2),U,8),1:IBFORM)
"RTN","IBCEXTRP",104,0)
 D SETUP^IBCE837(1)
"RTN","IBCEXTRP",105,0)
 D ROUT^IBCFP1(IBFORM,1,IBIFN,0,IBL)
"RTN","IBCEXTRP",106,0)
 Q
"RTN","IBCEXTRP",107,0)
 ;
"RTN","IBCF")
0^19^B24102162^B24662128
"RTN","IBCF",1,0)
IBCF ;ALB/RLW - task 1500/UB printing ;12-JUN-92
"RTN","IBCF",2,0)
 ;;2.0;INTEGRATED BILLING;**33,63,52,121,51,137,349**;21-MAR-94;Build 46
"RTN","IBCF",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCF",4,0)
 ;
"RTN","IBCF",5,0)
EN1 ; call appropriate print routine for the claim form type to be printed
"RTN","IBCF",6,0)
 K IBRESUB
"RTN","IBCF",7,0)
 ;
"RTN","IBCF",8,0)
EN1X ; Entrypoint for reprint (IBRESUB will be defined)
"RTN","IBCF",9,0)
 N IBF,IB,IBFORM,IBJ
"RTN","IBCF",10,0)
 S IB=$$FT^IBCU3(IBIFN)    ; form type ien (2 or 3)
"RTN","IBCF",11,0)
 S IBFT=$$FTN^IBCU3(IB)    ; form type name
"RTN","IBCF",12,0)
 S IBF=$P($G(^IBE(353,+IB,2)),U,8)
"RTN","IBCF",13,0)
 S:IBF="" IBF=IB ;Forces the use of the output formatter to print bills
"RTN","IBCF",14,0)
 D ENFMT(IBIFN,IB,IBF,,$G(IBRESUB))
"RTN","IBCF",15,0)
END K IBFT,IBRESUB
"RTN","IBCF",16,0)
 Q
"RTN","IBCF",17,0)
 ;
"RTN","IBCF",18,0)
EN2 ; send to default A/R device
"RTN","IBCF",19,0)
 S ZTDTH=$H,IBIFN=PRCASV("ARREC"),IBPNT=PRCASV("NOTICE")
"RTN","IBCF",20,0)
 D FORM S (IBFORM1,ZTDESC)="FOLLOW-UP AR FORM "_$P($G(^IBE(353,+IBFT,0)),"^")
"RTN","IBCF",21,0)
 D QUEUE
"RTN","IBCF",22,0)
 Q
"RTN","IBCF",23,0)
 ;
"RTN","IBCF",24,0)
EN3 ;queue an Rx Addendum for a bill, IBIFN must be defined
"RTN","IBCF",25,0)
 Q:'$D(^DGCR(399,+$G(IBIFN),0))  I '$D(^IBA(362.4,"AIFN"_+IBIFN)),'$D(^IBA(362.5,"AIFN"_+IBIFN)) Q
"RTN","IBCF",26,0)
 N IBFT S IBFT=$$FNT^IBCU3("BILL ADDENDUM") Q:'IBFT  S (IBFORM1,ZTDESC)="BILL ADDENDUM FOR "_$P(^DGCR(399,+IBIFN,0),U,1)
"RTN","IBCF",27,0)
 S ZTSAVE("IB*")="",ZTDTH=$H
"RTN","IBCF",28,0)
 S ZTIO=$P($G(^IBE(353,IBFT,0)),"^",2),ZTRTN=$G(^IBE(353,IBFT,1)) I (ZTIO="")!(ZTRTN="") K ZTDESC,ZTSAVE,ZTDTH,ZTIO,ZTRTN Q
"RTN","IBCF",29,0)
 D ^%ZTLOAD
"RTN","IBCF",30,0)
 Q
"RTN","IBCF",31,0)
 ;
"RTN","IBCF",32,0)
EN4 ;queue bills, IBIFN must be defined
"RTN","IBCF",33,0)
 S ZTDTH=$H,IBPNT=1 Q:'$D(^DGCR(399,+$G(IBIFN),0))
"RTN","IBCF",34,0)
 D FORM
"RTN","IBCF",35,0)
 S IBF=$P($G(^IBE(353,+IBFT,2)),U,8)
"RTN","IBCF",36,0)
 I $P($G(^IBE(353,+IBFT,0)),U,2)="",IBF="" Q
"RTN","IBCF",37,0)
 S (IBFORM1,ZTDESC)=$P($G(^IBE(353,+IBFT,0)),"^")_" BILL "_$P(^DGCR(399,+IBIFN,0),U,1)
"RTN","IBCF",38,0)
 S ZTSAVE("IB*")=""
"RTN","IBCF",39,0)
 S ZTIO=$P($G(^IBE(353,IBFT,0)),"^",2),ZTRTN=$S(IBF="":$G(^IBE(353,IBFT,1)),1:"ENFMT^IBCF(IBIFN,IBFT,IBF,ZTIO,$G(IBRESUB))")
"RTN","IBCF",40,0)
 I (ZTIO="")!(ZTRTN="") S IBAR("ERR")="BILL FORM TYPE NOT COMPLETE FOR"_IBFORM1 Q
"RTN","IBCF",41,0)
 D ^%ZTLOAD I '$D(ZTSK) S IBAR("ERR")="QUEUEING OF "_IBFORM1_" FAILED",IBAR("OKAY")=0 W IBAR("ERR") Q
"RTN","IBCF",42,0)
 S IBAR("OKAY")=1
"RTN","IBCF",43,0)
 Q
"RTN","IBCF",44,0)
 ;
"RTN","IBCF",45,0)
EN5 ;queue 1500 Rx Addendum to Follow-up (AR) printer, IBIFN must be defined - no longer used
"RTN","IBCF",46,0)
 Q:'$D(^DGCR(399,+$G(IBIFN),0))  I '$D(^IBA(362.4,"AIFN"_+IBIFN)),'$D(^IBA(362.5,"AIFN"_+IBIFN)) Q
"RTN","IBCF",47,0)
 Q:$$FT^IBCU3(IBIFN)'=2
"RTN","IBCF",48,0)
 N IBFT S IBFT=$$FNT^IBCU3("BILL ADDENDUM") Q:'IBFT  S (IBFORM1,ZTDESC)="BILL ADDENDUM FOR "_$P(^DGCR(399,+IBIFN,0),U,1)
"RTN","IBCF",49,0)
 S ZTSAVE("IB*")="",ZTDTH=$H
"RTN","IBCF",50,0)
 S ZTIO=$P($G(^IBE(353,IBFT,0)),"^",3),ZTRTN=$G(^IBE(353,IBFT,1)) I (ZTIO="")!(ZTRTN="") K ZTDESC,ZTSAVE,ZTDTH,ZTIO,ZTRTN Q
"RTN","IBCF",51,0)
 D ^%ZTLOAD
"RTN","IBCF",52,0)
 Q
"RTN","IBCF",53,0)
 ;
"RTN","IBCF",54,0)
ENFMT(IBIFN,IB,IBF,ZTIO,IBRESUB) ; Use formatter to print bill IBIFN
"RTN","IBCF",55,0)
 N IBFT,IBFTP,IBFORM,IBJ
"RTN","IBCF",56,0)
 S (IBFT,IBFORM)=IB,IBFTP="IBCFP"_IB,IBJ=$J
"RTN","IBCF",57,0)
 K ^XTMP(IBFTP,$J),^TMP("IBQONE",$J)
"RTN","IBCF",58,0)
 S ^XTMP(IBFTP,$J,1,1,1,IBIFN)="",^TMP("IBQONE",$J)=""
"RTN","IBCF",59,0)
 D FORM^IBCEFG7(IBF,$G(ZTIO))
"RTN","IBCF",60,0)
 I $G(IBRESUB) D
"RTN","IBCF",61,0)
 . N IBDA
"RTN","IBCF",62,0)
 . S IBDA=$$LAST364^IBCEF4(IBIFN)
"RTN","IBCF",63,0)
 . I IBDA D UPDEDI^IBCEM(IBDA,"P")
"RTN","IBCF",64,0)
 K ^TMP("IBQONE",$J)
"RTN","IBCF",65,0)
 I IBFT'=3 D EN3
"RTN","IBCF",66,0)
 Q
"RTN","IBCF",67,0)
 ;
"RTN","IBCF",68,0)
FORM ;
"RTN","IBCF",69,0)
 S IBFT=$$FT^IBCU3(IBIFN)
"RTN","IBCF",70,0)
 Q
"RTN","IBCF",71,0)
QUEUE ;
"RTN","IBCF",72,0)
 S IBF=$P($G(^IBE(353,+IBFT,2)),U,8)
"RTN","IBCF",73,0)
 S ZTSAVE("IB*")=""
"RTN","IBCF",74,0)
 S ZTIO=$P($G(^IBE(353,IBFT,0)),"^",3),ZTRTN=$S(IBF="":$G(^IBE(353,IBFT,1)),1:"ENFMT^IBCF(IBIFN,IBFT,IBF,ZTIO,$G(IBRESUB))")
"RTN","IBCF",75,0)
 I ((ZTIO="")&(IBF=""))!(ZTRTN="") S IBAR("ERR")="BILL FORM TYPE NOT COMPLETE FOR"_IBFORM1 Q
"RTN","IBCF",76,0)
 D ^%ZTLOAD I '$D(ZTSK) S IBAR("ERR")="QUEUEING OF "_IBFORM1_" FAILED",IBAR("OKAY")=0 W IBAR("ERR") Q
"RTN","IBCF",77,0)
 S IBAR("OKAY")=1
"RTN","IBCF",78,0)
 Q
"RTN","IBCF",79,0)
 ;
"RTN","IBCF",80,0)
DISPX ; call to exclude transmittable bills
"RTN","IBCF",81,0)
 D DISP1(1)
"RTN","IBCF",82,0)
 Q
"RTN","IBCF",83,0)
 ;
"RTN","IBCF",84,0)
DISP ; call to include all bills
"RTN","IBCF",85,0)
 D DISP1(0)
"RTN","IBCF",86,0)
 Q
"RTN","IBCF",87,0)
 ;
"RTN","IBCF",88,0)
DISP1(IBTX) ;print list of authorized bills - exclude transmittables if
"RTN","IBCF",89,0)
 ; IBTX=1
"RTN","IBCF",90,0)
 N IBIFN,IBC,Y
"RTN","IBCF",91,0)
 S IBIFN=0,IBC=0,Y="" W !
"RTN","IBCF",92,0)
 F  S IBIFN=$O(^DGCR(399,"AST",3,IBIFN)) Q:'IBIFN  S IBX=$G(^DGCR(399,IBIFN,0)) I IBX'="" D  Q:Y="^"
"RTN","IBCF",93,0)
 . I $G(IBTX) D  Q:IBX=""
"RTN","IBCF",94,0)
 .. N Z
"RTN","IBCF",95,0)
 .. S Z=0 F  S Z=$O(^IBA(364,"B",IBIFN,Z)) Q:'Z  I $D(^IBA(364,"ASTAT","X",Z)) S IBX="" Q
"RTN","IBCF",96,0)
 . W !,$P(IBX,U,1),?10,$E($P($G(^DPT(+$P(IBX,U,2),0)),U,1),1,20),?32,$$DATE^IBCFP(+$P(IBX,U,3)),?42,$S(+$P(IBX,U,5)<3:"INPT",1:"OUTPT")
"RTN","IBCF",97,0)
 . W ?49,$P($G(^DGCR(399.3,+$P(IBX,U,7),0)),U,4),?59,$E($$EXSET^IBEFUNC(+$P(IBX,U,13),399,.13),1,7),?68,$E($$FTN^IBCU3($$FT^IBCU3(IBIFN)),1,11)
"RTN","IBCF",98,0)
 . S IBC=IBC+1 I '(IBC#10) R !,"Press RETURN to continue or '^' to exit: ",Y:DTIME
"RTN","IBCF",99,0)
 Q
"RTN","IBCF",100,0)
 ;
"RTN","IBCF",101,0)
DISPT ;print list of all bills awaiting transmission
"RTN","IBCF",102,0)
 N IBI,IBIFN,IBC,Y S (IBC,IBI)=0,Y="" W !
"RTN","IBCF",103,0)
 F  S IBI=$O(^IBA(364,"ASTAT","X",IBI)) Q:'IBI  S IBIFN=+$G(^IBA(364,+IBI,0)),IBX=$G(^DGCR(399,IBIFN,0)) I IBX'="" D  Q:Y="^"
"RTN","IBCF",104,0)
 . W !,$P(IBX,U,1),?10,$E($P($G(^DPT(+$P(IBX,U,2),0)),U,1),1,20),?32,$$DATE^IBCFP(+$P(IBX,U,3)),?42,$S(+$P(IBX,U,5)<3:"INPT",1:"OUTPT")
"RTN","IBCF",105,0)
 . W ?49,$P($G(^DGCR(399.3,+$P(IBX,U,7),0)),U,4),?59,$E($$EXSET^IBEFUNC(+$P(IBX,U,13),399,.13),1,7),?68,$E($$FTN^IBCU3($$FT^IBCU3(IBIFN)),1,11)
"RTN","IBCF",106,0)
 . S IBC=IBC+1 I '(IBC#10) R !,"Press RETURN to continue or '^' to exit: ",Y:DTIME
"RTN","IBCF",107,0)
 Q
"RTN","IBCF",108,0)
 ;
"RTN","IBCF33")
0^28^B31973795^B32407192
"RTN","IBCF33",1,0)
IBCF33 ;ALB/ARH - UB-04 CMS-1450 (GATHER CODES) ;25-AUG-1993
"RTN","IBCF33",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,109,51,230,349**;21-MAR-94;Build 46
"RTN","IBCF33",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCF33",4,0)
 ;
"RTN","IBCF33",5,0)
 ;IBIFN required
"RTN","IBCF33",6,0)
 ;
"RTN","IBCF33",7,0)
 ; Not all free text prints in these blocks as of MRA/EDI - only print
"RTN","IBCF33",8,0)
 ;   REVENUE CODES and associated data, Rx's and prosthetics
"RTN","IBCF33",9,0)
 ;   and last line to indicate multiple pages
"RTN","IBCF33",10,0)
 N IBI,IBJ,IBCU2,IBCOL,IBSTATE,IBCBILL,IBINPAT,IBX,IBY,Z,IBZ,IBLPG
"RTN","IBCF33",11,0)
 S IBLINES=22,IBCU2=$G(^DGCR(399,IBIFN,"U2")),IBCOL=1,IBNOCOM=0
"RTN","IBCF33",12,0)
 K IBXSAVE("RX-UB-04"),IBXSAVE("PROS-UB-04")
"RTN","IBCF33",13,0)
 D HOS^IBCEF22(IBIFN)
"RTN","IBCF33",14,0)
 ;
"RTN","IBCF33",15,0)
 I $$TXMT^IBCEF4(IBIFN) S IBNOCOM=1
"RTN","IBCF33",16,0)
 S Z="",IBNOCHG=0
"RTN","IBCF33",17,0)
 ; Add total line as last entry, if not already there
"RTN","IBCF33",18,0)
 ;S IBLCT=$O(IBXDATA(""),-1)
"RTN","IBCF33",19,0)
 ;I IBLCT,$P(IBXDATA(IBLCT),U)'="001" S IBXDATA(IBLCT+1)="001"
"RTN","IBCF33",20,0)
 ;S IBLCT=0
"RTN","IBCF33",21,0)
 S IBLPG=($O(IBXDATA(""),-1)+$O(IBXSAVE("RX-UB-04",""),-1)+$O(IBXSAVE("PROS-UB-04",""),-1))/22,IBLPG=IBLPG\1+$S($P(IBLPG,".",2):1,1:0)
"RTN","IBCF33",22,0)
 F  S Z=$O(IBXDATA(Z)) Q:'Z  D
"RTN","IBCF33",23,0)
 . N IBZ1
"RTN","IBCF33",24,0)
 . ;I $P(IBXDATA(Z),U)="001",'$O(IBXDATA(Z)) S IBZ="001",$P(IBZ,U,4)=$P(IBCBCOMM,U,1),IBDA=0 S:IBNOCHG $P(IBZ,U,9)=$G(IBNOCHG) S IBXDATA(Z)=IBZ D SET1 Q
"RTN","IBCF33",25,0)
 . ;Get modifiers
"RTN","IBCF33",26,0)
 . S IBZ1=$G(^DGCR(399,IBIFN,"RC",+$P(IBXDATA(Z),U,8),0)),IBMOD=""
"RTN","IBCF33",27,0)
 . I $P(IBZ1,U,6),$S($P(IBZ1,U,10)=4:$P(IBZ1,U,11),1:'$P(IBZ1,U,10)) S $P(IBXDATA(Z),U,9)=$$MOD(IBZ1,IBIFN)
"RTN","IBCF33",28,0)
 . S IBZ=$P(IBXDATA(Z),U)_U_$P(IBXDATA(Z),U,3,5)_"^^"_$P(IBXDATA(Z),U,2),$P(IBZ,U,9)=$P(IBXDATA(Z),U,6),$P(IBZ,U,13)=$P(IBXDATA(Z),U,7),$P(IBZ,U,10)=$P(IBXDATA(Z),U,9),$P(IBZ,U,14)=$P(IBXDATA(Z),U,10)
"RTN","IBCF33",29,0)
 . I IBZ S IBNOCHG=IBNOCHG+$P(IBXDATA(Z),U,6),IBDA=$P(IBXDATA(Z),U,8) D SET1
"RTN","IBCF33",30,0)
 . ;S IBLCT=IBLCT+1
"RTN","IBCF33",31,0)
 I $D(IBXSAVE("RX-UB-04"))!$D(IBXSAVE("PROS-UB-04")) D
"RTN","IBCF33",32,0)
 . N Z
"RTN","IBCF33",33,0)
 . S Z=0 F  S Z=$O(IBXSAVE("RX-UB-04",Z)) Q:'Z  S IBZ=IBXSAVE("RX-UB-04",Z) D SET2
"RTN","IBCF33",34,0)
 . S Z=0 F  S Z=$O(IBXSAVE("PROS-UB-04",Z)) Q:'Z  S IBZ=IBXSAVE("PROS-UB-04",Z) D SET2
"RTN","IBCF33",35,0)
 D END
"RTN","IBCF33",36,0)
 Q
"RTN","IBCF33",37,0)
 ;
"RTN","IBCF33",38,0)
RV ;rev codes sorted by bedsection - no longer used as of patch IB*2*51
"RTN","IBCF33",39,0)
 S (IBBSN,IBBS,IBNOCHG)=0 F  S IBBS=$O(^DGCR(399,IBIFN,"RC","ABS",IBBS)) Q:'IBBS  D
"RTN","IBCF33",40,0)
 . S IBRV=0 F  S IBRV=$O(^DGCR(399,IBIFN,"RC","ABS",IBBS,IBRV)) Q:'IBRV  D
"RTN","IBCF33",41,0)
 .. S IBDA=0 F  S IBDA=$O(^DGCR(399,IBIFN,"RC","ABS",IBBS,IBRV,IBDA)) Q:'IBDA  D
"RTN","IBCF33",42,0)
 ... S IBX=$G(^DGCR(399,IBIFN,"RC",IBDA,0))
"RTN","IBCF33",43,0)
 ... S IBZ=$P($G(^DGCR(399.1,+$P(IBX,U,5),0)),U,1) S IBBSN=IBZ,IBZ=IBX,IBNOCHG=IBNOCHG+$P(IBZ,U,9) D SET1
"RTN","IBCF33",44,0)
 ;
"RTN","IBCF33",45,0)
 ;loop through all rev codes, print those with no bedsection
"RTN","IBCF33",46,0)
 S IBDA=0 F  S IBDA=$O(^DGCR(399,IBIFN,"RC",IBDA)) Q:'IBDA  S IBZ=$G(^(IBDA,0)) I +IBZ,$P(IBZ,U,5)="" S IBNOCHG=IBNOCHG+$P(IBZ,U,9) D SET1
"RTN","IBCF33",47,0)
 ;
"RTN","IBCF33",48,0)
TOTAL ;add total
"RTN","IBCF33",49,0)
 ;I +$P(IBCBCOMM,U,2) S IBZ="",$P(IBZ,U,2)="SUBTOTAL",$P(IBZ,U,4)=+$P(IBCBCOMM,U,1) D SET1
"RTN","IBCF33",50,0)
 ;
"RTN","IBCF33",51,0)
 ;S IBX=$S(+$P(IBCBCOMM,U,2):4,1:2) D SPACE
"RTN","IBCF33",52,0)
 S IBX=2 D SPACE
"RTN","IBCF33",53,0)
 ;S IBZ="" D SET2
"RTN","IBCF33",54,0)
 ;S IBJ=0 F IBI=4,5,6 S IBJ=IBJ+$P(IBCU2,U,IBI)
"RTN","IBCF33",55,0)
 ;I +$P(IBCBCOMM,U,2),+$P(IBCBCOMM,U,2)'=IBJ S (IBI,IBZ)="",$P(IBZ,U,2)="LESS "_$P(IBCBCOMM,U,3),$P(IBZ,U,4)=+$P(IBCBCOMM,U,2) D SET1 S IBZ="" D SET2
"RTN","IBCF33",56,0)
 ;
"RTN","IBCF33",57,0)
 ;S IBZ="001",$P(IBZ,U,2)="TOTAL",$P(IBZ,U,4)=IBCBCOMM-$S(IBI="":$P(IBCBCOMM,U,2),1:0) S:IBNOCHG $P(IBZ,U,9)=$G(IBNOCHG) D SET1
"RTN","IBCF33",58,0)
 ;
"RTN","IBCF33",59,0)
 ;
"RTN","IBCF33",60,0)
CPT ;add additional procedures
"RTN","IBCF33",61,0)
 ;G:$G(IBFL(80))'>6 OPV S IBX=+IBFL(80)-4 D SPACE
"RTN","IBCF33",62,0)
 ;S IBZ="" D SET2
"RTN","IBCF33",63,0)
 ;S IBZ="ADDITIONAL PROCEDURE CODES:" D SET2
"RTN","IBCF33",64,0)
 ;S IBI=6 F  S IBI=$O(IBFL(80,IBI)) Q:'IBI  D
"RTN","IBCF33",65,0)
 ;. S IBX=$P(IBFL(80,IBI),U,2),IBZ=$E(IBX,1,2)_"/"_$E(IBX,3,4)_"/"_$E(IBX,5,6)_$J(" ",5)_$P(IBFL(80,IBI),U,1) D SET2
"RTN","IBCF33",66,0)
 ;
"RTN","IBCF33",67,0)
OPV ;add outpatient visit dates
"RTN","IBCF33",68,0)
 ;G:'$O(^DGCR(399,IBIFN,"OP",0)) CONT S (IBX,IBY)=0 F  S IBX=$O(^DGCR(399,IBIFN,"OP",IBX)) Q:'IBX  S IBY=IBY+1
"RTN","IBCF33",69,0)
 ;S IBX=IBY/3,IBX=IBX\1+$S(+$P(IBX,".",2):1,1:0)+1 D SPACE
"RTN","IBCF33",70,0)
 ;S IBZ="" D SET2 S IBZ="OP VISIT DATE(S) BILLED:"_$J(" ",34-24)
"RTN","IBCF33",71,0)
 ;S (IBI,IBJ)=0 F  S IBI=$O(^DGCR(399,IBIFN,"OP",IBI)) Q:'IBI  D
"RTN","IBCF33",72,0)
 ;. S Y=$G(^DGCR(399,IBIFN,"OP",IBI,0)),IBZ=IBZ_$$FMTE^XLFDT(Y,2)_$S($O(^DGCR(399,IBIFN,"OP",IBI)):", ",1:"")
"RTN","IBCF33",73,0)
 ;. S IBJ=IBJ+1 I IBJ>2 D SET2 S IBZ=$J(" ",34),IBJ=0
"RTN","IBCF33",74,0)
 ;I $L(IBZ)>34 D SET2
"RTN","IBCF33",75,0)
 ;
"RTN","IBCF33",76,0)
CONT ;D ^IBCF331 ;More free text - can no longer print on UB-04
"RTN","IBCF33",77,0)
 ;
"RTN","IBCF33",78,0)
 ; fill in rest of page
"RTN","IBCF33",79,0)
END D:'$G(IBNOCOM) FILLPG S $P(^TMP($J,"IBC-RC"),U,2)=0 S IBPG=+$G(^TMP($J,"IBC-RC")),IBX=IBPG/22,IBPG=IBX\1+$S(+$P(IBX,".",2):1,1:0)
"RTN","IBCF33",80,0)
 K IBZ,IBBSN,IBBS,IBRV,IBDA,IBLN,IBCOL,IBLINES,IBARRAY,IBNOCHG,IBNOCOM,IBXSAVE("RX-UB-04"),IBXSAVE("PROS-UB-04")
"RTN","IBCF33",81,0)
 Q
"RTN","IBCF33",82,0)
 ;
"RTN","IBCF33",83,0)
SPACE ;checks to see if IBX can fit on page, if not starts new page
"RTN","IBCF33",84,0)
 Q:'IBX  N IBLN,IBY S IBLN=+$G(^TMP($J,"IBC-RC")),IBY=IBLN#22 S:IBY=0&(IBLN'=0) IBY=22 I IBX>(IBLINES-IBY) D FILLPG
"RTN","IBCF33",85,0)
 Q
"RTN","IBCF33",86,0)
 ;
"RTN","IBCF33",87,0)
FILLPG ;fill rest of page with blank lines
"RTN","IBCF33",88,0)
 N IBI,IBLN,IBZ S IBFILL=1 F IBI=1:1:22 S IBLN=+$G(^TMP($J,"IBC-RC")) Q:'(IBLN#22)  S IBZ="" D FILLUP Q:IBFILL=2
"RTN","IBCF33",89,0)
 K IBFILL Q
"RTN","IBCF33",90,0)
 ;
"RTN","IBCF33",91,0)
SET1 ; add rev codes to array: rev cd ^ rev cd st abbrev. ^ CPT CODE ^ unit charge ^ units ^ total ^ non-cov charge ^ form locator 49 ^ rev code mult ien ^ cpt modifiers attached to revenue code/procedure (unlinked)^ outpt serv date
"RTN","IBCF33",92,0)
 ;formats for output into specific column blocks 42-48
"RTN","IBCF33",93,0)
 N IBX,IBY,IBLN,IBN,IBMOD
"RTN","IBCF33",94,0)
 D NEXTLN S IBY=""
"RTN","IBCF33",95,0)
 ;set up rev cd item with appropriate output values, non-rev cd entries for old bills should already be in external form
"RTN","IBCF33",96,0)
 S IBN=$P(IBZ,U,9) ;non-covered charges
"RTN","IBCF33",97,0)
 S IBMOD=$P(IBZ,U,10) I IBMOD'="" S IBMOD=$E($TR(IBMOD,",;"),1,4) ; cpt modifiers
"RTN","IBCF33",98,0)
 I +IBZ S IBX=$G(^DGCR(399.2,+IBZ,0)) Q:IBX=""  D
"RTN","IBCF33",99,0)
 . S IBY=$P(IBX,U,1)_U_$P(IBX,U,2)_U_$$PRCD^IBCEF1($P(IBZ,U,6)_";ICPT(")_IBMOD
"RTN","IBCF33",100,0)
 . S IBY=IBY_U_$P(IBZ,U,2)_U_$P(IBZ,U,3)_U_$P(IBZ,U,4)_U_IBN_U_$P(IBZ,U,13)_U_$G(IBDA)_U_U_$$DATE^IBCF2($P(IBZ,U,14),"",1)
"RTN","IBCF33",101,0)
 I IBY="" S IBY=$P(IBZ,U,1)_U_$P(IBZ,U,2)_U_U_U_$P(IBZ,U,3)_U_$P(IBZ,U,4)_U_IBN_U_$P(IBZ,U,13)_U_$G(IBDA)_U_U_$$DATE^IBCF2($P(IBZ,U,14),"",1)
"RTN","IBCF33",102,0)
 S IBLN=+$G(^TMP($J,"IBC-RC"))+1,^TMP($J,"IBC-RC",IBLN)=1_U_IBY,^TMP($J,"IBC-RC")=IBLN I '(IBLN#22) S IBLINES=22
"RTN","IBCF33",103,0)
 Q
"RTN","IBCF33",104,0)
 ;
"RTN","IBCF33",105,0)
SET2 ;set free text into block 42 array
"RTN","IBCF33",106,0)
 Q:$G(IBNOCOM)  ;No comments wanted
"RTN","IBCF33",107,0)
 N IBLN D NEXTLN S IBCOL=$S('IBCOL:2,1:3)
"RTN","IBCF33",108,0)
 S IBLN=+$G(^TMP($J,"IBC-RC"))+1 I IBLN#22=1,$G(IBFILL) S IBFILL=2 Q
"RTN","IBCF33",109,0)
 S ^TMP($J,"IBC-RC",IBLN)=IBCOL_U_IBZ,^TMP($J,"IBC-RC")=IBLN I '(IBLN#22) S IBLINES=22
"RTN","IBCF33",110,0)
 Q
"RTN","IBCF33",111,0)
 ;
"RTN","IBCF33",112,0)
FILLUP ; Fill block 42 with blank lines
"RTN","IBCF33",113,0)
 N IBLN D NEXTLN S IBCOL=$S('IBCOL:2,1:3)
"RTN","IBCF33",114,0)
 S IBLN=+$G(^TMP($J,"IBC-RC"))+1 I IBLN#22=1,$G(IBFILL) S IBFILL=2 Q
"RTN","IBCF33",115,0)
 S ^TMP($J,"IBC-RC",IBLN)=IBCOL_U_IBZ,^TMP($J,"IBC-RC")=IBLN I '(IBLN#22) S IBLINES=22
"RTN","IBCF33",116,0)
 Q
"RTN","IBCF33",117,0)
 ;
"RTN","IBCF33",118,0)
NEXTLN ;checks counter for next line, resets if necessary,
"RTN","IBCF33",119,0)
 ;ie. if the line # indicated by the next line # var. has already been used then this increments the next line # var.
"RTN","IBCF33",120,0)
 S IBLN=+$G(^TMP($J,"IBC-RC"))+1 I $D(^TMP($J,"IBC-RC",IBLN)) S ^TMP($J,"IBC-RC")=IBLN S:'(IBLN#22) IBLINES=22 G NEXTLN
"RTN","IBCF33",121,0)
 Q
"RTN","IBCF33",122,0)
 ;
"RTN","IBCF33",123,0)
MOD(RCLN,IBIFN) ; return modifier(s) for a directly linked CPT charge or for an indirectly linked one
"RTN","IBCF33",124,0)
 N IBCPTN,IBMOD
"RTN","IBCF33",125,0)
 S IBMOD=""
"RTN","IBCF33",126,0)
 I $P($G(RCLN),U,10)=4 S IBCPTN=+$P(RCLN,U,11) I +IBCPTN S IBMOD=$$GETMOD^IBEFUNC(IBIFN,IBCPTN,1) ;Linked
"RTN","IBCF33",127,0)
 I IBMOD="",$P(RCLN,U,14)'="" S IBMOD=$TR($P(RCLN,U,14),";",",") ; Not linked or linked, but manually entered modifiers only
"RTN","IBCF33",128,0)
MODQ Q IBMOD
"RTN","IBCF33",129,0)
 ;
"RTN","IBCF33",130,0)
DATE45(IBIFN,IBXDATA,IBDATE) ; What prints in the service date box of UB-04
"RTN","IBCF33",131,0)
 ; INPUT:
"RTN","IBCF33",132,0)
 ;   IBIFN = ien of bill
"RTN","IBCF33",133,0)
 ;   IBDATE = the default outpt service date
"RTN","IBCF33",134,0)
 ; OUTPUT:
"RTN","IBCF33",135,0)
 ;   IBXDATA = the output formatter array with the service dates
"RTN","IBCF33",136,0)
 ;             (pass by reference)
"RTN","IBCF33",137,0)
 N Z,Z0,IBR,IBIN
"RTN","IBCF33",138,0)
 S IBIN=$$INPAT^IBCEF(IBXIEN,1)
"RTN","IBCF33",139,0)
 F Z=1:1 Q:'$D(^TMP($J,"IBC-RC",Z))  S IBR=^(Z) D
"RTN","IBCF33",140,0)
 . S Z0=$S(+IBR=1&'IBIN&(+$P(IBR,U,2)'=1):$S($P(IBR,U,12):$P(IBR,U,12),1:$G(IBDATE)),+IBR=2:$E($P(IBR,U,2),46,52),1:$E($P(IBR,U,2),41,47))
"RTN","IBCF33",141,0)
 . S:Z'>22 IBXDATA(Z)=Z0 D:Z>22 CKREV^IBCEF3(Z,Z0)
"RTN","IBCF33",142,0)
 Q
"RTN","IBCF33",143,0)
 ;
"RTN","IBCFP1")
0^20^B34736940^B33608926
"RTN","IBCFP1",1,0)
IBCFP1 ;ALB/ARH - PRINT AUTHORIZED BILLS IN ORDER ;6-DEC-94
"RTN","IBCFP1",2,0)
 ;;2.0;INTEGRATED BILLING;**54,52,80,121,51,137,155,320,348,349**;21-MAR-94;Build 46
"RTN","IBCFP1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCFP1",4,0)
 ;
"RTN","IBCFP1",5,0)
 ;
"RTN","IBCFP1",6,0)
QTASK ; 1st part sorts authorized bills into order requested by bill form type then queues off 1 job for each type to print bills
"RTN","IBCFP1",7,0)
 ;
"RTN","IBCFP1",8,0)
 D GCLEAN S IBXP=$$FMADD^XLFDT(DT,1)_"^"_DT_"^BATCH PRINT BILLS "_$$HTE^XLFDT($H)_" by "_$S($D(^VA(200,+$G(DUZ),0)):$P(^(0),"^"),1:"Unknown User")
"RTN","IBCFP1",9,0)
SORT ;sort authorized bills by form type and requested sort order (notice bill addendums only print for 1500's)
"RTN","IBCFP1",10,0)
 S (IBQ,IBIFN)=0 F  S IBIFN=$O(^DGCR(399,"AST",3,IBIFN)) Q:'IBIFN!IBQ  D  I $$STOP S IBQ=1 Q
"RTN","IBCFP1",11,0)
 . Q:+$$TXMT^IBCEF4(IBIFN)=1  ;Exclude transmittable bills
"RTN","IBCFP1",12,0)
 . S IBFT=$$FT^IBCU3(IBIFN) Q:$P($G(^IBE(353,+IBFT,0)),U,2)=""  I IBFT'?1N Q  ;No device for form type
"RTN","IBCFP1",13,0)
 . S IBX=$G(^DGCR(399,IBIFN,0)),IBPAT=$P($G(^DPT(+$P(IBX,U,2),0)),U,1) Q:$P(IBX,U,13)'=3
"RTN","IBCFP1",14,0)
 . S IBZIP=$P($G(^DGCR(399,IBIFN,"M")),U,9),IBINS=$P($G(^DIC(36,+$G(^DGCR(399,IBIFN,"MP")),0)),U,1)
"RTN","IBCFP1",15,0)
 . S IBX=IBZIP_U_IBINS_U_IBPAT,IBS1=$P(IBX,U,$E(IBS,1))_" ",IBS2=$P(IBX,U,$E(IBS,2))_" ",IBS3=$P(IBX,U,$E(IBS,3))_" "
"RTN","IBCFP1",16,0)
 . S ^XTMP("IBCFP"_IBFT,0)=IBXP,^XTMP("IBCFP"_IBFT,$J,IBS1,IBS2,IBS3,IBIFN)=""
"RTN","IBCFP1",17,0)
 . S XIBFT=IBFT  ;save off curent value of IBFT
"RTN","IBCFP1",18,0)
 . ;
"RTN","IBCFP1",19,0)
 . ; set MRA queue to print
"RTN","IBCFP1",20,0)
 . S IBFT=$$FNT^IBCU3("MRA")
"RTN","IBCFP1",21,0)
 . ; Merge the data from ^XTMP("IBCFP" queue, into "IBMRA" queue
"RTN","IBCFP1",22,0)
 . I +IBFT,$P($G(^IBE(353,+IBFT,0)),U,2)'="" S ^XTMP("IBMRA"_IBFT,0)=IBXP M ^XTMP("IBMRA"_IBFT,$J)=^XTMP("IBCFP"_XIBFT,$J)
"RTN","IBCFP1",23,0)
 . ;
"RTN","IBCFP1",24,0)
 . ; Print Bill Addendums only for 1500's
"RTN","IBCFP1",25,0)
 . I $$FTN^IBCU3(XIBFT)'["CMS-1500" Q
"RTN","IBCFP1",26,0)
 . S IBFT=$$FNT^IBCU3("BILL ADDENDUM")
"RTN","IBCFP1",27,0)
 . I +IBFT,$P($G(^IBE(353,+IBFT,0)),U,2)'="" S ^XTMP("IBCFP"_IBFT,0)=IBXP,^XTMP("IBCFP"_IBFT,$J,IBS1,IBS2,IBS3,IBIFN)=""
"RTN","IBCFP1",28,0)
 . Q
"RTN","IBCFP1",29,0)
 K IBIFN,IBFT,XIBFT,IBX,IBY,IBPAT,IBZIP,IBINS,IBS1,IBS2,IBS3,IBS,IBXP
"RTN","IBCFP1",30,0)
 ;
"RTN","IBCFP1",31,0)
QUEUE ; starts a queued job for each form type that an authorized bill was found for
"RTN","IBCFP1",32,0)
 ; no form types without defined device
"RTN","IBCFP1",33,0)
 I IBQ D GCLEAN ;queued job stopped
"RTN","IBCFP1",34,0)
 I 'IBQ D
"RTN","IBCFP1",35,0)
 . ; queue a job for each form type
"RTN","IBCFP1",36,0)
 . S IBIX="IBCFP" F  S IBIX=$O(^XTMP(IBIX)) Q:(IBIX'?1"IBCFP"1N)  I $D(^XTMP(IBIX,$J)) S IBFT=$E(IBIX,6) D
"RTN","IBCFP1",37,0)
 . . S ZTIO=$P($G(^IBE(353,+IBFT,0)),U,2),IBFTP=IBIX,IBJ=$J
"RTN","IBCFP1",38,0)
 . . S ZTDTH=$H,ZTSAVE("IBFTP")="",ZTSAVE("IBFT")="",ZTSAVE("IBJ")=""
"RTN","IBCFP1",39,0)
 . . S ZTDESC="BATCH PRINTING "_$$FTN^IBCU3(+IBFT),ZTRTN="QBILL^IBCFP1" D ^%ZTLOAD
"RTN","IBCFP1",40,0)
 . ; Also queue a job to print MRA's, if any, for each bill
"RTN","IBCFP1",41,0)
 . S IBIX="IBMRA" F  S IBIX=$O(^XTMP(IBIX)) Q:(IBIX'?1"IBMRA"1N)  I $D(^XTMP(IBIX,$J)) S IBFT=$E(IBIX,6) D
"RTN","IBCFP1",42,0)
 . . S ZTIO=$P($G(^IBE(353,+IBFT,0)),U,2),IBFTP=IBIX,IBJ=$J
"RTN","IBCFP1",43,0)
 . . S ZTDTH=$H,ZTSAVE("IBFTP")="",ZTSAVE("IBFT")="",ZTSAVE("IBJ")=""
"RTN","IBCFP1",44,0)
 . . S ZTDESC="BATCH PRINTING MRA'S",ZTRTN="QMRA^IBCEMU2" D ^%ZTLOAD
"RTN","IBCFP1",45,0)
 K IBIX,IBY,IBFTP,IBJ ; end of first queued part
"RTN","IBCFP1",46,0)
 Q
"RTN","IBCFP1",47,0)
 ;
"RTN","IBCFP1",48,0)
GCLEAN ; Clean up XTMP global for $J of IBCFP and IBMRA entries
"RTN","IBCFP1",49,0)
 N I
"RTN","IBCFP1",50,0)
 S I="IBCFP" F  S I=$O(^XTMP(I)) Q:I'?1"IBCFP"1N.N  K ^XTMP(I)
"RTN","IBCFP1",51,0)
 S I="IBMRA" F  S I=$O(^XTMP(I)) Q:I'?1"IBMRA"1N.N  K ^XTMP(I)
"RTN","IBCFP1",52,0)
 Q
"RTN","IBCFP1",53,0)
 ;
"RTN","IBCFP1",54,0)
QBILL ; 2nd queued part will print all authorized bills for a specific form type
"RTN","IBCFP1",55,0)
 N IBF,IBFORM,IBPNT
"RTN","IBCFP1",56,0)
 S IBF=$P($G(^IBE(353,+IBFT,2)),U,8),IBPNT=1
"RTN","IBCFP1",57,0)
 I $D(IBMCSPNT) S IBPNT=IBMCSPNT    ; IB*320 - MCS resubmit by print
"RTN","IBCFP1",58,0)
 I IBF'="" S IBFORM=IBF D FORMOUT^IBCEFG7 Q  ;call formatter
"RTN","IBCFP1",59,0)
 ;
"RTN","IBCFP1",60,0)
QB1 ; Entrypoint for output logic of formatter
"RTN","IBCFP1",61,0)
 ; pass in "^XTMP(IBFTP,IBJ)" sorted array of bills to print
"RTN","IBCFP1",62,0)
 ;         IBFTP = "IBCFP"_(form type) subscript indicating which part of array to print
"RTN","IBCFP1",63,0)
 ;         IBPNT = reprint status of bill (1-original, 0-copy, etc)
"RTN","IBCFP1",64,0)
 ;         IBFT  = IFN of bill form type to be printed
"RTN","IBCFP1",65,0)
 ;         IBJ   = $J of starting job (for when multiple print jobs might be queued)
"RTN","IBCFP1",66,0)
 ;                 if a single bill printed and queued, IBJ will be null
"RTN","IBCFP1",67,0)
 S:$G(IBJ)="" IBJ=$J
"RTN","IBCFP1",68,0)
 S:'$D(IBPNT) IBPNT=1
"RTN","IBCFP1",69,0)
 N IBCT,IBBN,IBS1,IBS2,IBS3,IBQ,IBIFN
"RTN","IBCFP1",70,0)
 S (IBCT,IBQ,IBS1)=0
"RTN","IBCFP1",71,0)
 S ZTREQ="@"
"RTN","IBCFP1",72,0)
 F  S IBS1=$O(^XTMP(IBFTP,IBJ,IBS1)) Q:IBS1=""!IBQ  D
"RTN","IBCFP1",73,0)
 . S IBS2=0 F  S IBS2=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2)) Q:IBS2=""!IBQ  D
"RTN","IBCFP1",74,0)
 .. S IBS3=0 F  S IBS3=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2,IBS3)) Q:IBS3=""!IBQ  D
"RTN","IBCFP1",75,0)
 ... S IBBN=0 F  S IBBN=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2,IBS3,IBBN)) Q:IBBN=""  D  I $$STOP S IBQ=1 Q
"RTN","IBCFP1",76,0)
 .... D ROUT(IBFT,IBPNT,IBBN,.IBCT)
"RTN","IBCFP1",77,0)
 K ^XTMP(IBFTP,IBJ) ; end of last queued part
"RTN","IBCFP1",78,0)
 Q
"RTN","IBCFP1",79,0)
 ;
"RTN","IBCFP1",80,0)
ROUT(IBFT,IBPNT,IBIFN,IBCT,IBF) ; sub procedure to protect variables with new
"RTN","IBCFP1",81,0)
 N IBBN,IBS1,IBS2,IBS3,IBQ,IBFTP,IBJ,IBXPARM,Z
"RTN","IBCFP1",82,0)
 D BILLPARM^IBCEFG0(IBIFN,.IBXPARM)
"RTN","IBCFP1",83,0)
 S IBF=$S($G(IBF)'="":IBF,1:$P($G(^IBE(353,+IBFT,2)),U,8))
"RTN","IBCFP1",84,0)
 S IBCT=$G(IBCT)+1
"RTN","IBCFP1",85,0)
 ;
"RTN","IBCFP1",86,0)
 ; IBF exists - use the Output Formatter for printing
"RTN","IBCFP1",87,0)
 ;     2.08 field in file 353 - PRINT FORM NAME
"RTN","IBCFP1",88,0)
 I IBF'="" S Z=$$EXTRACT^IBCEFG(IBF,IBIFN,.IBCT,.IBXPARM) G REX
"RTN","IBCFP1",89,0)
 ;
"RTN","IBCFP1",90,0)
 ; IBF does not exist - Obsolete VistA extract/print routines
"RTN","IBCFP1",91,0)
 I IBFT=1 S DFN=$P($G(^DGCR(399,+IBIFN,0)),U,2) D ENP^IBCF1 W @IOF G REX
"RTN","IBCFP1",92,0)
 I $$FTN^IBCU3(+IBFT)="HCFA 1500" D EN^IBCF2 W @IOF G REX
"RTN","IBCFP1",93,0)
 I $$FTN^IBCU3(+IBFT)="UB-92" D EN^IBCF3 W @IOF G REX
"RTN","IBCFP1",94,0)
 ;
"RTN","IBCFP1",95,0)
 ; print bill addendums
"RTN","IBCFP1",96,0)
 I $$FTN^IBCU3(+IBFT)="BILL ADDENDUM" I +$$BILLAD^IBCF4(IBIFN) D EN^IBCF4 W @IOF G REX
"RTN","IBCFP1",97,0)
 ;
"RTN","IBCFP1",98,0)
REX Q
"RTN","IBCFP1",99,0)
 ;
"RTN","IBCFP1",100,0)
DATE(X) Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCFP1",101,0)
 ;
"RTN","IBCFP1",102,0)
STOP() ;determine if user has requested the queued report to stop
"RTN","IBCFP1",103,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !,"***TASK STOPPED BY USER***"
"RTN","IBCFP1",104,0)
 Q +$G(ZTSTOP)
"RTN","IBCFP1",105,0)
 ;
"RTN","IBCFP1",106,0)
FORMPRE ; Set up environment for bill message
"RTN","IBCFP1",107,0)
 K ^TMP("IBXMSG",$J),^TMP("IBXERR",$J),IBXERR,^TMP("IBXDATA",$J)
"RTN","IBCFP1",108,0)
 Q
"RTN","IBCFP1",109,0)
 ;
"RTN","IBCFP1",110,0)
FORMPOST ; Clean up
"RTN","IBCFP1",111,0)
 I $O(^TMP("IBXERR",$J,"")) D  ;Error messages to mail group
"RTN","IBCFP1",112,0)
 .N XMTO,XMBODY,XMDUZ,XMSUBJ,IBCT,IBERR
"RTN","IBCFP1",113,0)
 .K ^TMP("IBXMSG",$J)
"RTN","IBCFP1",114,0)
 .S ^TMP("IBXMSG",$J,1)="The following bill(s) were not printed due to errors indicated.",^(2)="Once the errors are corrected, the bill(s) can be printed again.",^(3)=" "
"RTN","IBCFP1",115,0)
 .;
"RTN","IBCFP1",116,0)
 .S IBERR=0,IBCT=3
"RTN","IBCFP1",117,0)
 .F  S IBERR=$O(^TMP("IBXERR",$J,IBERR)) Q:'IBERR  S IBCT=IBCT+1,^TMP("IBXMSG",$J,IBCT)="Bill #: "_$P($G(^DGCR(399,IBERR,0)),U),IBCT=IBCT+1,^TMP("IBXMSG",$J,IBCT)=$J("",5)_^TMP("IBXERR",$J,IBERR)
"RTN","IBCFP1",118,0)
 .S XMBODY="^TMP(""IBXMSG"","_$J_")" D ERRMSG(XMBODY)
"RTN","IBCFP1",119,0)
 .K ^TMP("IBXMSG",$J),^TMP($J,"IBICT")
"RTN","IBCFP1",120,0)
 ;
"RTN","IBCFP1",121,0)
 K ^TMP("IBXERR",$J),IBXERR
"RTN","IBCFP1",122,0)
 D CLEAN^DILF
"RTN","IBCFP1",123,0)
 Q
"RTN","IBCFP1",124,0)
 ;
"RTN","IBCFP1",125,0)
ENTPRE ; Run before processing a bill entry
"RTN","IBCFP1",126,0)
 K IBXSAVE,IBXERR,^UTILITY("VAPA",$J),^TMP("IBXSAVE",$J),^TMP($J),^TMP("DIERR",$J)
"RTN","IBCFP1",127,0)
 Q
"RTN","IBCFP1",128,0)
 ;
"RTN","IBCFP1",129,0)
ENTPOST ; Run after processing a bill entry
"RTN","IBCFP1",130,0)
 N IBIFN
"RTN","IBCFP1",131,0)
 I $G(IBXERR)'="" S ^TMP("IBXERR",$J,IBXIEN)=IBXERR K ^TMP("IBXDATA",$J)
"RTN","IBCFP1",132,0)
 S IBIFN=IBXIEN D END^IBCF2
"RTN","IBCFP1",133,0)
 K IBXSAVE,^UTILITY("VAPA",$J),^TMP($J),^TMP("IBXSAVE",$J)
"RTN","IBCFP1",134,0)
 D CLEAN^DILF
"RTN","IBCFP1",135,0)
 Q
"RTN","IBCFP1",136,0)
 ;
"RTN","IBCFP1",137,0)
ERRMSG(XMBODY) ; Send bulletin for error message
"RTN","IBCFP1",138,0)
 N XMTO,XMSUBJ
"RTN","IBCFP1",139,0)
 S XMTO($G(DUZ))="",XMSUBJ="PRINT BILL ERRORS"
"RTN","IBCFP1",140,0)
 ;
"RTN","IBCFP1",141,0)
 D SENDMSG^XMXAPI(,XMSUBJ,XMBODY,.XMTO)
"RTN","IBCFP1",142,0)
 D ALERT("One or more bills were not printed.  Check your mail for details",$G(DUZ))
"RTN","IBCFP1",143,0)
 Q
"RTN","IBCFP1",144,0)
 ;
"RTN","IBCFP1",145,0)
ALERT(XQAMSG,IBGRP) ; Send alert message
"RTN","IBCFP1",146,0)
 N XQA
"RTN","IBCFP1",147,0)
 S XQA(IBGRP)=""
"RTN","IBCFP1",148,0)
 D SETUP^XQALERT
"RTN","IBCFP1",149,0)
 Q
"RTN","IBCNSC01")
0^21^B48419928^B50893102
"RTN","IBCNSC01",1,0)
IBCNSC01 ;ALB/NLR - INSURANCE COMPANY EDIT ; 6/1/05 10:06am
"RTN","IBCNSC01",2,0)
 ;;2.0;INTEGRATED BILLING;**52,137,191,184,232,320,349**;21-MAR-94;Build 46
"RTN","IBCNSC01",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNSC01",4,0)
 ;
"RTN","IBCNSC01",5,0)
PARAM ; -- Insurance company parameters region
"RTN","IBCNSC01",6,0)
 N OFFSET,START,IBCNS0,IBCNS03,IBCNS06,IBCNS08,IBCNS13,IBCNS3
"RTN","IBCNSC01",7,0)
 S IBCNS0=$G(^DIC(36,+IBCNS,0)),IBCNS3=$G(^(3))
"RTN","IBCNSC01",8,0)
 S IBCNS03=$P(IBCNS0,"^",3),IBCNS06=$P(IBCNS0,"^",6),IBCNS08=$P(IBCNS0,"^",8)
"RTN","IBCNSC01",9,0)
 S IBCNS13=$G(^DIC(36,+IBCNS,.13))
"RTN","IBCNSC01",10,0)
 S START=1,OFFSET=2
"RTN","IBCNSC01",11,0)
 D SET^IBCNSP(START,OFFSET+25," Billing Parameters ",IORVON,IORVOFF)
"RTN","IBCNSC01",12,0)
 ;
"RTN","IBCNSC01",13,0)
 D SET^IBCNSP(START+1,OFFSET+1,"Signature Required?: "_$S(+IBCNS03:"YES",1:"NO"))
"RTN","IBCNSC01",14,0)
 D SET^IBCNSP(START+2,OFFSET+10,"Reimburse?: "_$E($$EXPAND^IBTRE(36,1,$P(IBCNS0,"^",2)),1,21))
"RTN","IBCNSC01",15,0)
 D SET^IBCNSP(START+3,OFFSET+3,"Mult. Bedsections: "_$S(+IBCNS06:"YES",IBCNS06=0:"NO",1:""))
"RTN","IBCNSC01",16,0)
 D SET^IBCNSP(START+4,OFFSET+4,"Diff. Rev. Codes: "_$P(IBCNS0,"^",7))
"RTN","IBCNSC01",17,0)
 D SET^IBCNSP(START+5,OFFSET+6,"One Opt. Visit: "_$S(+IBCNS08:"YES",1:"NO"))
"RTN","IBCNSC01",18,0)
 D SET^IBCNSP(START+6,OFFSET+1,"Amb. Sur. Rev. Code: "_$P(IBCNS0,"^",9))
"RTN","IBCNSC01",19,0)
 D SET^IBCNSP(START+7,OFFSET+1,"Rx Refill Rev. Code: "_$P(IBCNS0,"^",15))
"RTN","IBCNSC01",20,0)
 D SET^IBCNSP(START+8,OFFSET+3,"Filing Time Frame: "_$P(IBCNS0,"^",12))
"RTN","IBCNSC01",21,0)
 D SET^IBCNSP(START+9,OFFSET+4,"Type Of Coverage: "_$$EXPAND^IBTRE(36,.13,+$P(IBCNS0,U,13)))
"RTN","IBCNSC01",22,0)
 D SET^IBCNSP(START+10,OFFSET+3,"Primary Form Type: "_$$EXPAND^IBTRE(36,.14,$P(IBCNS0,"^",14)))
"RTN","IBCNSC01",23,0)
 ;
"RTN","IBCNSC01",24,0)
 N START,OFFSET
"RTN","IBCNSC01",25,0)
 S START=1,OFFSET=45
"RTN","IBCNSC01",26,0)
 D SET^IBCNSP(START+1,OFFSET+7,"Billing Phone: "_$P(IBCNS13,"^",2))
"RTN","IBCNSC01",27,0)
 D SET^IBCNSP(START+2,OFFSET+2,"Verification Phone: "_$P(IBCNS13,"^",4))
"RTN","IBCNSC01",28,0)
 D SET^IBCNSP(START+3,OFFSET+2,"Precert Comp. Name: "_$P($G(^DIC(36,+$P(IBCNS13,"^",9),0)),"^",1))
"RTN","IBCNSC01",29,0)
 D SET^IBCNSP(START+4,OFFSET+7,"Precert Phone: "_$$PHONE(IBCNS13))
"RTN","IBCNSC01",30,0)
 D SET^IBCNSP(START+5,OFFSET+6,"   *** EDI Parameters ***   ",IOINHI,IOINORM)
"RTN","IBCNSC01",31,0)
 D SET^IBCNSP(START+6,OFFSET+11,"Transmit?: "_$S(+IBCNS3=1:"YES-LIVE",+IBCNS3=2:"TEST ONLY",1:"NO"))
"RTN","IBCNSC01",32,0)
 D SET^IBCNSP(START+7,OFFSET+7,"Inst Payer ID: "_$P(IBCNS3,U,4))
"RTN","IBCNSC01",33,0)
 D SET^IBCNSP(START+8,OFFSET+7,"Prof Payer ID: "_$P(IBCNS3,U,2))
"RTN","IBCNSC01",34,0)
 D SET^IBCNSP(START+9,OFFSET+6,"Insurance Type: "_$$EXPAND^IBTRE(36,3.09,+$P(IBCNS3,U,9)))
"RTN","IBCNSC01",35,0)
 D SET^IBCNSP(START+10,OFFSET+10,"Bin Number: "_$P($G(^DIC(36,+IBCNS,3)),"^",3))
"RTN","IBCNSC01",36,0)
 I +IBCNS3=2 D SET^IBCNSP(START+11,OFFSET,"Max # Test Bills/Day: "_$P(IBCNS3,U,6))
"RTN","IBCNSC01",37,0)
 Q
"RTN","IBCNSC01",38,0)
 ;
"RTN","IBCNSC01",39,0)
PHONE(IBCNS13) ; -- Compute precert company phone
"RTN","IBCNSC01",40,0)
 N IBX,IBSAVE,IBCNT S IBX=""
"RTN","IBCNSC01",41,0)
 I '$P(IBCNS13,"^",9) S IBX=$P(IBCNS13,"^",3) G PHONEQ
"RTN","IBCNSC01",42,0)
REDOX S IBSAVE=+$P(IBCNS13,"^",9)
"RTN","IBCNSC01",43,0)
 S IBCNT=$G(IBCNT)+1
"RTN","IBCNSC01",44,0)
 ; -- if you process the same co. more than once you are in an infinite loop
"RTN","IBCNSC01",45,0)
 I $D(IBCNT(IBCNS)) G PHONEQ
"RTN","IBCNSC01",46,0)
 S IBCNT(IBCNS)=""
"RTN","IBCNSC01",47,0)
 S IBCNS13=$G(^DIC(36,+$P(IBCNS13,"^",9),.13))
"RTN","IBCNSC01",48,0)
 S IBX=$P(IBCNS13,"^") S:$L($P(IBCNS13,"^",3)) IBX=$P(IBCNS13,"^",3)
"RTN","IBCNSC01",49,0)
 ; -- if process the same co. more than once you are in an infinite loop
"RTN","IBCNSC01",50,0)
 I $P(IBCNS13,"^",9),$P(IBCNS13,"^",9)'=IBSAVE G REDOX
"RTN","IBCNSC01",51,0)
PHONEQ Q IBX
"RTN","IBCNSC01",52,0)
 ;
"RTN","IBCNSC01",53,0)
MAIN ; -- Insurance company main address
"RTN","IBCNSC01",54,0)
 N OFFSET,START,IBCNS11,IBCNS13,IBADD
"RTN","IBCNSC01",55,0)
 S IBCNS11=$G(^DIC(36,+IBCNS,.11))
"RTN","IBCNSC01",56,0)
 S IBCNS13=$G(^DIC(36,+IBCNS,.13))
"RTN","IBCNSC01",57,0)
 S START=15,OFFSET=25
"RTN","IBCNSC01",58,0)
 D SET^IBCNSP(START,OFFSET," Main Mailing Address ",IORVON,IORVOFF)
"RTN","IBCNSC01",59,0)
 N OFFSET S OFFSET=2
"RTN","IBCNSC01",60,0)
 D SET^IBCNSP(START+1,OFFSET,"       Street: "_$P(IBCNS11,"^",1)) S IBADD=1
"RTN","IBCNSC01",61,0)
 D SET^IBCNSP(START+2,OFFSET,"     Street 2: "_$P(IBCNS11,"^",2)) S IBADD=2
"RTN","IBCNSC01",62,0)
 D SET^IBCNSP(START+3,OFFSET,"     Street 3: "_$P(IBCNS11,"^",3)) S IBADD=3
"RTN","IBCNSC01",63,0)
 ; D SET^IBCNSP(START+4,OFFSET,"Claim Off. ID: "_$P(IBCNS11,U,11))
"RTN","IBCNSC01",64,0)
 N OFFSET S OFFSET=45
"RTN","IBCNSC01",65,0)
 D SET^IBCNSP(START+1,OFFSET,"   City/State: "_$E($P(IBCNS11,"^",4),1,15)_$S($P(IBCNS11,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS11,"^",5),0)),"^",2)_" "_$E($P(IBCNS11,"^",6),1,5))
"RTN","IBCNSC01",66,0)
 D SET^IBCNSP(START+2,OFFSET,"        Phone: "_$P(IBCNS13,"^",1))
"RTN","IBCNSC01",67,0)
 D SET^IBCNSP(START+3,OFFSET,"          Fax: "_$P(IBCNS11,"^",9))
"RTN","IBCNSC01",68,0)
 Q
"RTN","IBCNSC01",69,0)
 ;
"RTN","IBCNSC01",70,0)
 ;
"RTN","IBCNSC01",71,0)
PAYER ; This procedure builds the display for the payer associated with
"RTN","IBCNSC01",72,0)
 ; this insurance company.
"RTN","IBCNSC01",73,0)
 ; ESG - 7/29/02 - IIV project
"RTN","IBCNSC01",74,0)
 ;
"RTN","IBCNSC01",75,0)
 NEW PAYERIEN,PAYR,APPDATA,APP,DATA,APPNAME,A1,A2,A3,A4,A5,A6,A7,A8
"RTN","IBCNSC01",76,0)
 NEW START,TITLE,OFFSET,IBLINE
"RTN","IBCNSC01",77,0)
 S PAYERIEN=$P($G(^DIC(36,+IBCNS,3)),U,10),PAYR="",APPDATA=0
"RTN","IBCNSC01",78,0)
 I PAYERIEN D
"RTN","IBCNSC01",79,0)
 . S PAYR=$G(^IBE(365.12,PAYERIEN,0))
"RTN","IBCNSC01",80,0)
 . S APP=0
"RTN","IBCNSC01",81,0)
 . F  S APP=$O(^IBE(365.12,PAYERIEN,1,APP)) Q:'APP  D
"RTN","IBCNSC01",82,0)
 .. S DATA=$G(^IBE(365.12,PAYERIEN,1,APP,0))
"RTN","IBCNSC01",83,0)
 .. S APPNAME=$$EXTERNAL^DILFD(365.121,.01,"",$P(DATA,U,1))
"RTN","IBCNSC01",84,0)
 .. I APPNAME="" Q
"RTN","IBCNSC01",85,0)
 .. I $D(APPDATA(APPNAME)) Q
"RTN","IBCNSC01",86,0)
 .. S (A1,A2,A3,A4,A5,A6,A7)="NO",A8=""
"RTN","IBCNSC01",87,0)
 .. I $P(DATA,U,2) S A1="YES"      ; national active
"RTN","IBCNSC01",88,0)
 .. I $P(DATA,U,3) S A2="YES"      ; local active
"RTN","IBCNSC01",89,0)
 .. I $P(DATA,U,7) S A3="YES"      ; auto-accept
"RTN","IBCNSC01",90,0)
 .. I $P(DATA,U,8) S A4="YES"      ; ident inquiries require subscr ID
"RTN","IBCNSC01",91,0)
 .. I $P(DATA,U,9) S A5="YES"      ; use SSN for subscriber ID
"RTN","IBCNSC01",92,0)
 .. I $P(DATA,U,10) S A6="YES"     ; transmit SSN
"RTN","IBCNSC01",93,0)
 .. I $P(DATA,U,11) S A7="YES"     ; deactivated?
"RTN","IBCNSC01",94,0)
 .. ; A8 = deactivation date
"RTN","IBCNSC01",95,0)
 .. I $P(DATA,U,12) S A8=$P($$FMTE^XLFDT($P(DATA,U,12),"5Z"),"@",1)
"RTN","IBCNSC01",96,0)
 .. S APPDATA(APPNAME)=A1_U_A2_U_A3_U_A4_U_A5_U_A6_U_A7_U_A8
"RTN","IBCNSC01",97,0)
 .. S APPDATA=APPDATA+1
"RTN","IBCNSC01",98,0)
 .. Q
"RTN","IBCNSC01",99,0)
 . Q
"RTN","IBCNSC01",100,0)
 ;
"RTN","IBCNSC01",101,0)
 S START=$O(^TMP("IBCNSC",$J,""),-1)+1
"RTN","IBCNSC01",102,0)
 S IB1ST("PAYER")=START
"RTN","IBCNSC01",103,0)
 S TITLE=" Payer Information/Electronic Insurance Verification "
"RTN","IBCNSC01",104,0)
 S OFFSET=(40-($L(TITLE)/2))\1+1
"RTN","IBCNSC01",105,0)
 D SET^IBCNSP(START,OFFSET,TITLE,IORVON,IORVOFF)
"RTN","IBCNSC01",106,0)
 D SET^IBCNSP(START+1,9,"Payer Name: "_$P(PAYR,U,1))
"RTN","IBCNSC01",107,0)
 D SET^IBCNSP(START+2,5,"VA National ID: "_$P(PAYR,U,2))
"RTN","IBCNSC01",108,0)
 D SET^IBCNSP(START+2,51,"CMS National ID: "_$P(PAYR,U,3))
"RTN","IBCNSC01",109,0)
 S IBLINE=START+2
"RTN","IBCNSC01",110,0)
 ;
"RTN","IBCNSC01",111,0)
 ; Handle the case where no application data is defined
"RTN","IBCNSC01",112,0)
 I 'APPDATA D  G PAYERX
"RTN","IBCNSC01",113,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",114,0)
 . D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC01",115,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",116,0)
 . D SET^IBCNSP(IBLINE,16,"Payer Application data is not defined!")
"RTN","IBCNSC01",117,0)
 . Q
"RTN","IBCNSC01",118,0)
 ;
"RTN","IBCNSC01",119,0)
 ; Display all the applications
"RTN","IBCNSC01",120,0)
 S APPNAME=""
"RTN","IBCNSC01",121,0)
 F  S APPNAME=$O(APPDATA(APPNAME)) Q:APPNAME=""  D
"RTN","IBCNSC01",122,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",123,0)
 . D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC01",124,0)
 . ;
"RTN","IBCNSC01",125,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",126,0)
 . D SET^IBCNSP(IBLINE,2,"Payer Application: "_APPNAME)
"RTN","IBCNSC01",127,0)
 . D SET^IBCNSP(IBLINE,50,"Auto-Accept Info: "_$P(APPDATA(APPNAME),U,3))
"RTN","IBCNSC01",128,0)
 . ;
"RTN","IBCNSC01",129,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",130,0)
 . D SET^IBCNSP(IBLINE,4,"National Active: "_$P(APPDATA(APPNAME),U,1))
"RTN","IBCNSC01",131,0)
 . D SET^IBCNSP(IBLINE,47,"Ident Req Subscr ID: "_$P(APPDATA(APPNAME),U,4))
"RTN","IBCNSC01",132,0)
 . ;
"RTN","IBCNSC01",133,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",134,0)
 . D SET^IBCNSP(IBLINE,7,"Local Active: "_$P(APPDATA(APPNAME),U,2))
"RTN","IBCNSC01",135,0)
 . D SET^IBCNSP(IBLINE,51,"SSN = Subscr ID: "_$P(APPDATA(APPNAME),U,5))
"RTN","IBCNSC01",136,0)
 . ;
"RTN","IBCNSC01",137,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",138,0)
 . D SET^IBCNSP(IBLINE,8,"Deactivated: "_$P(APPDATA(APPNAME),U,7))
"RTN","IBCNSC01",139,0)
 . D SET^IBCNSP(IBLINE,54,"Transmit SSN: "_$P(APPDATA(APPNAME),U,6))
"RTN","IBCNSC01",140,0)
 . ;
"RTN","IBCNSC01",141,0)
 . ; If no deactivated date, then exit
"RTN","IBCNSC01",142,0)
 . I $P(APPDATA(APPNAME),U,8)="" Q
"RTN","IBCNSC01",143,0)
 . ;
"RTN","IBCNSC01",144,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",145,0)
 . D SET^IBCNSP(IBLINE,13,"D-Date: "_$P(APPDATA(APPNAME),U,8))
"RTN","IBCNSC01",146,0)
 . ;
"RTN","IBCNSC01",147,0)
 . Q
"RTN","IBCNSC01",148,0)
PAYERX ;
"RTN","IBCNSC01",149,0)
 ; Two trailing blank lines after payer information display
"RTN","IBCNSC01",150,0)
 S IBLINE=IBLINE+1
"RTN","IBCNSC01",151,0)
 D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC01",152,0)
 S IBLINE=IBLINE+1
"RTN","IBCNSC01",153,0)
 D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC01",154,0)
 Q
"RTN","IBCNSC01",155,0)
 ;
"RTN","IBCNSC01",156,0)
 ;
"RTN","IBCNSC01",157,0)
REMARKS ;
"RTN","IBCNSC01",158,0)
 ;
"RTN","IBCNSC01",159,0)
 N OFFSET,START,IBLCNT,IBI
"RTN","IBCNSC01",160,0)
 S START=$O(^TMP("IBCNSC",$J,""),-1)+1,OFFSET=2
"RTN","IBCNSC01",161,0)
 S IB1ST("REM")=START
"RTN","IBCNSC01",162,0)
 ;
"RTN","IBCNSC01",163,0)
 D SET^IBCNSP(START,OFFSET," Remarks ",IORVON,IORVOFF)
"RTN","IBCNSC01",164,0)
 S (IBLCNT,IBI)=0 F  S IBI=$O(^DIC(36,+IBCNS,11,IBI)) Q:IBI<1  D
"RTN","IBCNSC01",165,0)
 . S IBLCNT=IBLCNT+1
"RTN","IBCNSC01",166,0)
 . D SET^IBCNSP(START+IBLCNT,OFFSET,"  "_$E($G(^DIC(36,+IBCNS,11,IBI,0)),1,80))
"RTN","IBCNSC01",167,0)
 . Q
"RTN","IBCNSC01",168,0)
 D SET^IBCNSP(START+IBLCNT+1,OFFSET," ")   ; blank line after remarks
"RTN","IBCNSC01",169,0)
 Q
"RTN","IBCNSC01",170,0)
 ;
"RTN","IBCNSC01",171,0)
SYN ;
"RTN","IBCNSC01",172,0)
 N OFFSET,START,SYN,SYNOI
"RTN","IBCNSC01",173,0)
 S START=$O(^TMP("IBCNSC",$J,""),-1)+1,OFFSET=2
"RTN","IBCNSC01",174,0)
 S IB1ST("SYN")=START
"RTN","IBCNSC01",175,0)
 D SET^IBCNSP(START,OFFSET," Synonyms ",IORVON,IORVOFF)
"RTN","IBCNSC01",176,0)
 S SYN="" F SYNOI=1:1:8 S SYN=$O(^DIC(36,+IBCNS,10,"B",SYN)) Q:SYN=""  D SET^IBCNSP(START+SYNOI,OFFSET,$S(SYNOI>7:"  ...edit to see more...",1:"  "_SYN))
"RTN","IBCNSC01",177,0)
 Q
"RTN","IBCNSC01",178,0)
 ;
"RTN","IBCNSC1")
0^22^B65094362^B65055609
"RTN","IBCNSC1",1,0)
IBCNSC1 ;ALB/NLR - IBCNS INSURANCE COMPANY ;23-MAR-93
"RTN","IBCNSC1",2,0)
 ;;2.0;INTEGRATED BILLING;**62,137,232,291,320,348,349**;21-MAR-94;Build 46
"RTN","IBCNSC1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNSC1",4,0)
 ;
"RTN","IBCNSC1",5,0)
% G EN^IBCNSC
"RTN","IBCNSC1",6,0)
 ;
"RTN","IBCNSC1",7,0)
AI ; -- (In)Activate Company
"RTN","IBCNSC1",8,0)
 D FULL^VALM1 W !!
"RTN","IBCNSC1",9,0)
 I '$D(^XUSEC("IB INSURANCE SUPERVISOR",DUZ)) D SORRY G EXIT
"RTN","IBCNSC1",10,0)
 D ^IBCNSC2
"RTN","IBCNSC1",11,0)
 G EXIT
"RTN","IBCNSC1",12,0)
CC ; -- Change Insurance Company
"RTN","IBCNSC1",13,0)
 D FULL^VALM1 W !!
"RTN","IBCNSC1",14,0)
 S IBCNS1=IBCNS K IBCNS D INSCO^IBCNSC
"RTN","IBCNSC1",15,0)
 I '$D(IBCNS) S IBCNS=IBCNS1
"RTN","IBCNSC1",16,0)
 K IBCNS1,VALMQUIT
"RTN","IBCNSC1",17,0)
 G EXIT
"RTN","IBCNSC1",18,0)
EA ; -- Billing,Claims,Appeals,Inquiry,Telephone,Main,Remarks,Synonyms
"RTN","IBCNSC1",19,0)
 D FULL^VALM1
"RTN","IBCNSC1",20,0)
 ;
"RTN","IBCNSC1",21,0)
 ; IB*2*320 - check key for associate company action
"RTN","IBCNSC1",22,0)
 I $G(IBY)=",13,",'$$KCHK^XUSRB("IB EDI INSURANCE EDIT") D  G EXIT
"RTN","IBCNSC1",23,0)
 . W !!?5,"You must hold the IB EDI INSURANCE EDIT key to access this option."
"RTN","IBCNSC1",24,0)
 . D PAUSE^VALM1
"RTN","IBCNSC1",25,0)
 . Q
"RTN","IBCNSC1",26,0)
 ;
"RTN","IBCNSC1",27,0)
 W !!
"RTN","IBCNSC1",28,0)
 D MAIN
"RTN","IBCNSC1",29,0)
 ;
"RTN","IBCNSC1",30,0)
 ; -- was company deleted
"RTN","IBCNSC1",31,0)
 I '$D(^DIC(36,IBCNS)) W !!,"<DELETED>",!! S VALMQUIT="" Q
"RTN","IBCNSC1",32,0)
 ;
"RTN","IBCNSC1",33,0)
EXIT ;
"RTN","IBCNSC1",34,0)
 D HDR^IBCNSC,BLD^IBCNSC
"RTN","IBCNSC1",35,0)
 S VALMBCK="R"
"RTN","IBCNSC1",36,0)
 Q
"RTN","IBCNSC1",37,0)
MAIN ; -- Call edit template
"RTN","IBCNSC1",38,0)
 N IBEDIKEY,Z
"RTN","IBCNSC1",39,0)
 L +^DIC(36,+IBCNS):5 I '$T D LOCKED^IBTRCD1 G MAINQ
"RTN","IBCNSC1",40,0)
 I $G(IBY)=",12," D FACID
"RTN","IBCNSC1",41,0)
 F Z=1,2,4,9,13,14 S IBEDIKEY(Z)=$P($G(^DIC(36,+IBCNS,3)),U,Z)   ; save EDI data fields
"RTN","IBCNSC1",42,0)
 I $G(IBY)'=",12," N DIE,DA,DR S DIE="^DIC(36,",(DA,Y)=IBCNS,DR="[IBEDIT INS CO1]" D ^DIE K DIE I $D(Y) S IB("^")=1
"RTN","IBCNSC1",43,0)
 I $G(IBY)=",12," D EDITID^IBCEP(+IBCNS)
"RTN","IBCNSC1",44,0)
 I $F(",6,13,",$G(IBY)) D PARENT^IBCNSC02(+IBCNS)   ; parent/child management
"RTN","IBCNSC1",45,0)
 L -^DIC(36,+IBCNS)
"RTN","IBCNSC1",46,0)
MAINQ Q
"RTN","IBCNSC1",47,0)
 ;
"RTN","IBCNSC1",48,0)
FACID ; -- Edit facility ids
"RTN","IBCNSC1",49,0)
 D FACID^IBCEP2B(+IBCNS,"E")
"RTN","IBCNSC1",50,0)
 Q
"RTN","IBCNSC1",51,0)
 ;
"RTN","IBCNSC1",52,0)
SORRY ; -- can't inactivate, don't have key
"RTN","IBCNSC1",53,0)
 W !!,"You do not have access to Inactivate entries.  See your application coordinator.",! D PAUSE^VALM1
"RTN","IBCNSC1",54,0)
 Q
"RTN","IBCNSC1",55,0)
PRESCR ;
"RTN","IBCNSC1",56,0)
 N OFFSET,START,IBCNS18,IBADD
"RTN","IBCNSC1",57,0)
 S IBCNS18=$$ADDRESS^IBCNSC0(IBCNS,.18,11)
"RTN","IBCNSC1",58,0)
 S START=34,OFFSET=2
"RTN","IBCNSC1",59,0)
 D SET^IBCNSP(START,OFFSET+19," Prescription Claims Office Information ",IORVON,IORVOFF)
"RTN","IBCNSC1",60,0)
 D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS18,"^",7),0)),"^",1))
"RTN","IBCNSC1",61,0)
 D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS18,"^",1))
"RTN","IBCNSC1",62,0)
 D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS18,"^",2))
"RTN","IBCNSC1",63,0)
 ; D SET^IBCNSP(START+4,OFFSET,"Claim Off. ID: "_$P(IBCNS18,"^",11))
"RTN","IBCNSC1",64,0)
 N OFFSET S OFFSET=45
"RTN","IBCNSC1",65,0)
 D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS18,"^",3)) S IBADD=1
"RTN","IBCNSC1",66,0)
 D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS18,"^",4),1,15)_$S($P(IBCNS18,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS18,"^",5),0)),"^",2)_" "_$E($P(IBCNS18,"^",6),1,5))
"RTN","IBCNSC1",67,0)
 D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS18,"^",8))
"RTN","IBCNSC1",68,0)
 D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS18,"^",9))
"RTN","IBCNSC1",69,0)
 Q
"RTN","IBCNSC1",70,0)
 ;
"RTN","IBCNSC1",71,0)
PROVID N OFFSET,START,IBCNS4,IBCNS3,IBDISP,Z,LINE
"RTN","IBCNSC1",72,0)
 S START=$O(^TMP("IBCNSC",$J,""),-1)+1
"RTN","IBCNSC1",73,0)
 S (IB1ST("PROVID"),LINE)=START
"RTN","IBCNSC1",74,0)
 S OFFSET=2,IBCNS4=$G(^DIC(36,IBCNS,4)),IBCNS3=$G(^(3))
"RTN","IBCNSC1",75,0)
 ;       
"RTN","IBCNSC1",76,0)
 D SET^IBCNSP(LINE,OFFSET+25,"Provider IDs",IORVON,IORVOFF)
"RTN","IBCNSC1",77,0)
 N OFFSET
"RTN","IBCNSC1",78,0)
 S LINE=LINE+1,OFFSET=1
"RTN","IBCNSC1",79,0)
 D SET^IBCNSP(LINE,OFFSET,"Billing Provider Secondary ID")
"RTN","IBCNSC1",80,0)
 ;
"RTN","IBCNSC1",81,0)
 N Z,Z0,Z1,IBS,I,DIV,FT,CU,CUF,DIVISION,FORMTYPE,PIDT
"RTN","IBCNSC1",82,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",+IBCNS,Z)) Q:'Z  D
"RTN","IBCNSC1",83,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCNSC1",84,0)
 . Q:'$P(Z0,U,6)!($P(Z0,U,7)="")  ; Quit if no provider id or id type
"RTN","IBCNSC1",85,0)
 . Q:'($P(Z0,U,8)="E")
"RTN","IBCNSC1",86,0)
 . S IBS(+$P(Z0,U,5),+$P(Z0,U,3),+$P(Z0,U,4))=$P(Z0,U,6)_U_$P(Z0,U,7)
"RTN","IBCNSC1",87,0)
 ;
"RTN","IBCNSC1",88,0)
 S DIV="" F  S DIV=$O(IBS(DIV)) Q:DIV=""  D
"RTN","IBCNSC1",89,0)
 . S DIVISION=$$DIV^IBCEP7(DIV)
"RTN","IBCNSC1",90,0)
 . S CU="",CUF=0 F  S CU=$O(IBS(DIV,CU)) Q:CU=""  D
"RTN","IBCNSC1",91,0)
 .. S FT="" F  S FT=$O(IBS(DIV,CU,FT)) Q:FT=""  D
"RTN","IBCNSC1",92,0)
 ... S FORMTYPE=$S(FT=1:"UB-04",FT=2:"1500",1:"UNKNOWN")
"RTN","IBCNSC1",93,0)
 ... S LINE=LINE+1
"RTN","IBCNSC1",94,0)
 ... I 'CUF,+CU S CUF=1 S TEXT=$P(DIVISION,"/")_" Care Units :",OFFSET=5 D SET^IBCNSP(LINE,OFFSET,TEXT) S LINE=LINE+1
"RTN","IBCNSC1",95,0)
 ... I CU=0 S TEXT=DIVISION_"/"_FORMTYPE_": "_$$GET1^DIQ(355.97,$P(IBS(DIV,CU,FT),U),.03,"E")_" "_$P(IBS(DIV,CU,FT),U,2),OFFSET=2
"RTN","IBCNSC1",96,0)
 ... I +CU S TEXT=$$EXPAND^IBTRE(355.92,.03,CU)_"/"_FORMTYPE_": "_$$GET1^DIQ(355.97,$P(IBS(DIV,CU,FT),U),.03,"E")_" "_$P(IBS(DIV,CU,FT),U,2),OFFSET=5
"RTN","IBCNSC1",97,0)
 ... D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",98,0)
 ;
"RTN","IBCNSC1",99,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",100,0)
 ;
"RTN","IBCNSC1",101,0)
 K IBS
"RTN","IBCNSC1",102,0)
 S OFFSET=1,LINE=LINE+1
"RTN","IBCNSC1",103,0)
 D SET^IBCNSP(LINE,OFFSET,"Additional Billing Provider Secondary IDs")
"RTN","IBCNSC1",104,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",+IBCNS,Z)) Q:'Z  D
"RTN","IBCNSC1",105,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCNSC1",106,0)
 . Q:'$P(Z0,U,6)!($P(Z0,U,7)="")  ; Quit if no provider id or id type
"RTN","IBCNSC1",107,0)
 . Q:'($P(Z0,U,8)="A")
"RTN","IBCNSC1",108,0)
 . ; IBS(DIVISION,FORMTYPE,IDTYPE)=ID
"RTN","IBCNSC1",109,0)
 . S IBS(+$P(Z0,U,5),+$P(Z0,U,4),+$P(Z0,U,6))=$P(Z0,U,7)
"RTN","IBCNSC1",110,0)
 ;
"RTN","IBCNSC1",111,0)
 S DIVISION=$$DIV^IBCEP7(0)
"RTN","IBCNSC1",112,0)
 S DIV="" F  S DIV=$O(IBS(DIV)) Q:DIV=""  D
"RTN","IBCNSC1",113,0)
 . S FT="" F  S FT=$O(IBS(DIV,FT)) Q:FT=""  D
"RTN","IBCNSC1",114,0)
 .. S FORMTYPE=$S(FT=1:"UB-04",FT=2:"1500",1:"UNKNOWN")
"RTN","IBCNSC1",115,0)
 .. S TEXT=DIVISION_"/"_FORMTYPE_": "
"RTN","IBCNSC1",116,0)
 .. S LINE=LINE+1,OFFSET=2
"RTN","IBCNSC1",117,0)
 .. D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",118,0)
 .. S PIDT="" F  S PIDT=$O(IBS(DIV,FT,PIDT)) Q:PIDT=""  D
"RTN","IBCNSC1",119,0)
 ... S LINE=LINE+1
"RTN","IBCNSC1",120,0)
 ... S TEXT=$$GET1^DIQ(355.97,PIDT,.03,"E")_" "_IBS(DIV,FT,PIDT),OFFSET=5
"RTN","IBCNSC1",121,0)
 ... D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",122,0)
 ;
"RTN","IBCNSC1",123,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",124,0)
 ;
"RTN","IBCNSC1",125,0)
 K IBS
"RTN","IBCNSC1",126,0)
 S OFFSET=1,LINE=LINE+1
"RTN","IBCNSC1",127,0)
 D SET^IBCNSP(LINE,OFFSET,"VA-Laboratory or Facility Secondary IDs")
"RTN","IBCNSC1",128,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",+IBCNS,Z)) Q:'Z  D
"RTN","IBCNSC1",129,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCNSC1",130,0)
 . Q:'$P(Z0,U,6)!($P(Z0,U,7)="")  ; Quit if no provider id or id type
"RTN","IBCNSC1",131,0)
 . Q:'($P(Z0,U,8)="LF")
"RTN","IBCNSC1",132,0)
 . ; IBS(DIVISION,FORMTYPE,IDTYPE)=ID
"RTN","IBCNSC1",133,0)
 . S IBS(+$P(Z0,U,5),+$P(Z0,U,4),+$P(Z0,U,6))=$P(Z0,U,7)
"RTN","IBCNSC1",134,0)
 ;
"RTN","IBCNSC1",135,0)
 S DIVISION=$$DIV^IBCEP7(0)
"RTN","IBCNSC1",136,0)
 S DIV="" F  S DIV=$O(IBS(DIV)) Q:DIV=""  D
"RTN","IBCNSC1",137,0)
 . S FT="" F  S FT=$O(IBS(DIV,FT)) Q:FT=""  D
"RTN","IBCNSC1",138,0)
 .. S FORMTYPE=$S(FT=1:"UB-04",FT=2:"1500",1:"UNKNOWN")
"RTN","IBCNSC1",139,0)
 .. S TEXT=DIVISION_"/"_FORMTYPE_": "
"RTN","IBCNSC1",140,0)
 .. S LINE=LINE+1,OFFSET=2
"RTN","IBCNSC1",141,0)
 .. D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",142,0)
 .. S PIDT="" F  S PIDT=$O(IBS(DIV,FT,PIDT)) Q:PIDT=""  D
"RTN","IBCNSC1",143,0)
 ... S LINE=LINE+1
"RTN","IBCNSC1",144,0)
 ... ;S TEXT=$$EXPAND^IBTRE(355.92,.06,PIDT)_" "_IBS(DIV,FT,PIDT),OFFSET=5
"RTN","IBCNSC1",145,0)
 ... S TEXT=$$GET1^DIQ(355.97,PIDT,.03,"E")_" "_IBS(DIV,FT,PIDT),OFFSET=5
"RTN","IBCNSC1",146,0)
 ... D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",147,0)
 ;
"RTN","IBCNSC1",148,0)
 ;
"RTN","IBCNSC1",149,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",150,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",151,0)
 S OFFSET=2
"RTN","IBCNSC1",152,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,OFFSET+25,"ID Parameters",IORVON,IORVOFF)
"RTN","IBCNSC1",153,0)
 ;
"RTN","IBCNSC1",154,0)
 S IBCNS4=$G(^DIC(36,IBCNS,4)),IBCNS3=$G(^(3)),OFFSET=1
"RTN","IBCNSC1",155,0)
 S TEXT="Attending/Rendering Provider Secondary ID Qualifier (1500): "_$$EXPAND^IBTRE(36,4.01,+$P(IBCNS4,U))
"RTN","IBCNSC1",156,0)
 S LINE=LINE+1
"RTN","IBCNSC1",157,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",158,0)
 ;
"RTN","IBCNSC1",159,0)
 S TEXT="Attending/Rendering Provider Secondary ID Qualifier (UB-04): "_$$EXPAND^IBTRE(36,4.02,+$P(IBCNS4,U,2))
"RTN","IBCNSC1",160,0)
 S LINE=LINE+1
"RTN","IBCNSC1",161,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",162,0)
 ;
"RTN","IBCNSC1",163,0)
 S TEXT="Attending/Rendering Secondary ID Requirement: "_$$EXPAND^IBTRE(36,4.03,+$P(IBCNS4,U,3))
"RTN","IBCNSC1",164,0)
 S LINE=LINE+1
"RTN","IBCNSC1",165,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",166,0)
 ;
"RTN","IBCNSC1",167,0)
 S TEXT="Referring Provider Secondary ID Qualifier (1500): "_$$EXPAND^IBTRE(36,4.04,+$P(IBCNS4,U,4))
"RTN","IBCNSC1",168,0)
 S LINE=LINE+1
"RTN","IBCNSC1",169,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",170,0)
 ;
"RTN","IBCNSC1",171,0)
 S TEXT="Referring Provider Secondary ID Requirement: "_$$EXPAND^IBTRE(36,4.05,+$P(IBCNS4,U,5))
"RTN","IBCNSC1",172,0)
 S LINE=LINE+1
"RTN","IBCNSC1",173,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",174,0)
 ;
"RTN","IBCNSC1",175,0)
 S TEXT="Use Att/Rend ID as Billing Provider Sec. ID (1500): "_$$EXPAND^IBTRE(36,4.06,+$P(IBCNS4,U,6))
"RTN","IBCNSC1",176,0)
 S LINE=LINE+1
"RTN","IBCNSC1",177,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",178,0)
 ;
"RTN","IBCNSC1",179,0)
 S TEXT="Use Att/Rend ID as Billing Provider Sec. ID (UB-04): "_$$EXPAND^IBTRE(36,4.08,+$P(IBCNS4,U,8))
"RTN","IBCNSC1",180,0)
 S LINE=LINE+1
"RTN","IBCNSC1",181,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",182,0)
 ;
"RTN","IBCNSC1",183,0)
 S TEXT="Send VA Lab/Facility IDs or Facility Data for VAMC?: "_$$EXPAND^IBTRE(36,4.07,+$P(IBCNS4,U,7))
"RTN","IBCNSC1",184,0)
 S LINE=LINE+1
"RTN","IBCNSC1",185,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",186,0)
 ;
"RTN","IBCNSC1",187,0)
 S TEXT="Transmit no Billing Provider Sec. ID for the Electronic Plan Types: "
"RTN","IBCNSC1",188,0)
 S LINE=LINE+1
"RTN","IBCNSC1",189,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",190,0)
 ;
"RTN","IBCNSC1",191,0)
 N TAR,ERR,IBCT
"RTN","IBCNSC1",192,0)
 D LIST^DIC(36.013,","_IBCNS_",",".01",,10,,,,,,"TAR","ERR")
"RTN","IBCNSC1",193,0)
 F IBCT=1:1:+$G(TAR("DILIST",0)) D
"RTN","IBCNSC1",194,0)
 . S TEXT=TAR("DILIST",1,IBCT)
"RTN","IBCNSC1",195,0)
 . S LINE=LINE+1
"RTN","IBCNSC1",196,0)
 . D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",197,0)
 ;
"RTN","IBCNSC1",198,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",199,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",200,0)
 Q
"RTN","IBCNSC1",201,0)
 ;       
"RTN","IBCNSC1",202,0)
INSDEF(IBINS,IBPTYP) ; Returns the default id # for an ins co, if possible
"RTN","IBCNSC1",203,0)
 N X
"RTN","IBCNSC1",204,0)
 S X=""
"RTN","IBCNSC1",205,0)
 I IBINS,IBPTYP S X=$P($G(^IBA(355.91,+$O(^IBA(355.91,"AC",IBINS,IBPTYP,"*N/A*","")),0)),U,7)
"RTN","IBCNSC1",206,0)
 Q X
"RTN","IBCSC1")
0^75^B6857570^B7629949
"RTN","IBCSC1",1,0)
IBCSC1 ;ALB/MJB - MCCR SCREEN 1 (DEMOGRAPHICS) ;27 MAY 88 10:13
"RTN","IBCSC1",2,0)
 ;;2.0;INTEGRATED BILLING;**51,161,349**;21-MAR-94;Build 46
"RTN","IBCSC1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC1",4,0)
 ; DBIA for reference to DG ELIGIBILITY key: DBIA3109
"RTN","IBCSC1",5,0)
 ;
"RTN","IBCSC1",6,0)
 ;MAP TO DGCRSC1
"RTN","IBCSC1",7,0)
 ;
"RTN","IBCSC1",8,0)
BEN S IBSR=1,IBSR1="",IBV1=$S($D(^XUSEC("DG ELIGIBILITY",DUZ)):"000000",1:101100)
"RTN","IBCSC1",9,0)
 S:IBV IBV1="111111"
"RTN","IBCSC1",10,0)
 S IB(0)=$S($D(^DGCR(399,IBIFN,0)):^(0),1:"")
"RTN","IBCSC1",11,0)
 D:'$D(IBWW) ^IBCSCU D ALL^IBCVA0,H^IBCSCU
"RTN","IBCSC1",12,0)
 ;
"RTN","IBCSC1",13,0)
 ; Add/Update to ClaimsManager file (#351.9) if running ClaimsManager
"RTN","IBCSC1",14,0)
 I $$CM^IBCIUT1(IBIFN) D ST1^IBCIST
"RTN","IBCSC1",15,0)
 ;
"RTN","IBCSC1",16,0)
1 S Z=1,IBW=1 X IBWW W " DOB    : ",$P(VADM(3),"^",2) I $G(VADM(6)) W ?42,"Date of Death: ",$P(VADM(6),U,2)," (uneditable)"
"RTN","IBCSC1",17,0)
 ;
"RTN","IBCSC1",18,0)
2 S (I1,Z1)="",Z=2,IBW=1 X IBWW W " Alias  : " F I=0:0 S I=$O(^DPT(DFN,.01,I)) Q:I=""  S I1=1 W:$X>40 !?13 S Z1=36,Z=$E($P(^(I,0),"^",1),1,29) W Z,"/"
"RTN","IBCSC1",19,0)
 W:'I1 "NO ALIAS ON FILE"
"RTN","IBCSC1",20,0)
 ;
"RTN","IBCSC1",21,0)
3 S Z=3,IBW=1 X IBWW W " Sex    : ",$S($P(VADM(5),U,2)]"":$P(VADM(5),U,2),1:IBU),?48,"Marital: ",$S($D(^DIC(11,+$P(^DPT(DFN,0),U,5),0)):$E($P(^(0),U,1),1,28),1:IBU)
"RTN","IBCSC1",22,0)
 ;
"RTN","IBCSC1",23,0)
4 S Z=4,IBW=1 X IBWW W " Veteran: ",$S('$D(VAEL(4)):IBU,+VAEL(4):"YES",1:"NO"),?44,"Eligibility: ",$S((VAEL(1)]""):$E($P(^DIC(8,(+VAEL(1)),0),"^",6),1,22),1:IBU)
"RTN","IBCSC1",24,0)
 F I=.11,.121 S IB(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","IBCSC1",25,0)
 K IBA S IBAD=.11,(IBA1,IBA2)=1 D A^IBCSCU I $P(IB(.121),"^",9)="Y" S IBAD=.121,IBA1=1,IBA2=2 D A^IBCSCU
"RTN","IBCSC1",26,0)
 ;
"RTN","IBCSC1",27,0)
5 W ! S Z=5,IBW=1 X IBWW W " Address: ",$S($D(IBA(1)):IBA(1),1:"NONE ON FILE"),?46,"Temporary: ",$S($D(IBA(2)):IBA(2),1:"NO TEMPORARY ADDRESS")
"RTN","IBCSC1",28,0)
 S I=2 F I1=0:0 S I=$O(IBA(I)) Q:I=""  W:I#2!($X>50) !?13 W:'(I#2) ?57 W IBA(I)
"RTN","IBCSC1",29,0)
 ;
"RTN","IBCSC1",30,0)
6 W ! S Z=6,IBW=1 X IBWW W " SC Care: " S X=$P(IB(0),"^",18) W $S(X="":"UNSPECIFIED",X:"YES",1:"NO") I X W "  (Enter '6' to list disabilites)"
"RTN","IBCSC1",31,0)
 G ^IBCSCP
"RTN","IBCSC1",32,0)
 Q
"RTN","IBCSC1",33,0)
 ;IBCSC1
"RTN","IBCSC4")
0^23^B22332423^B23401431
"RTN","IBCSC4",1,0)
IBCSC4 ;ALB/MJB - MCCR SCREEN 4 (INPT. EOC) ;27 MAY 88 10:17
"RTN","IBCSC4",2,0)
 ;;2.0;INTEGRATED BILLING;**52,51,210,245,155,287,349**;21-MAR-94;Build 46
"RTN","IBCSC4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC4",4,0)
 ;
"RTN","IBCSC4",5,0)
 ;MAP TO DGCRSC4
"RTN","IBCSC4",6,0)
 ;
"RTN","IBCSC4",7,0)
EN I $P(^DGCR(399,IBIFN,0),"^",5)>2 G EN^IBCSC5
"RTN","IBCSC4",8,0)
 I $D(IBASKCOD) K IBASKCOD D CODMUL^IBCU7 I $$BILLCPT^IBCRU4(IBIFN) D ASK^IBCU7A(IBIFN) S DGRVRCAL=1
"RTN","IBCSC4",9,0)
 I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
"RTN","IBCSC4",10,0)
 L ^DGCR(399,IBIFN):1
"RTN","IBCSC4",11,0)
 D ^IBCSCU S IBSR=4,IBSR1="",IBV1="0000000"_$S($$FT^IBCEF(IBIFN)'=2:0,1:1),IBUC="UNSPECIFIED CODE"
"RTN","IBCSC4",12,0)
 S:IBV IBV1="11111111"
"RTN","IBCSC4",13,0)
 D H^IBCSCU F I=1:1:4 S Y="Q"_I_"^IBCVA" D @Y
"RTN","IBCSC4",14,0)
 D INP
"RTN","IBCSC4",15,0)
 S IBBT=$P(IB(0),"^",4)_$P(IB(0),"^",5)_$P(IB(0),"^",6)
"RTN","IBCSC4",16,0)
 D:DGPT(0)]"" DX^IBCSC4A D OCC^IBCVA1
"RTN","IBCSC4",17,0)
 I '$P(DGPT(0),U,6) W !?26,$S('DGPT(0):"No PTF record for this ADMISSION",1:"PTF record status: OPEN")
"RTN","IBCSC4",18,0)
 S J=$P(IB("U"),U,20),J=$S(J=99:"",J="":"",J=0:"",$L(J)=1:".0"_J,1:"."_J)
"RTN","IBCSC4",19,0)
 S Z=1 X IBWW W " Admission  : " S I=$S($P(DGPT(0),U,2)]"":$P(DGPT(0),U,2),1:$P(IBIP,U,2)_J) S:$P(I,".",2)=""&I $P(I,".",2)="2400"
"RTN","IBCSC4",20,0)
 S Y=$$FMTE^XLFDT(I,"1P")
"RTN","IBCSC4",21,0)
 W Y,?49,"Accident Hour: ",$S($P(IB("U"),U,10)=99:IBU,$P(IB("U"),U,10)'="":$P(IB("U"),U,10),1:IBU)
"RTN","IBCSC4",22,0)
 W !?4,"Source     : " S I=$P(^DD(399,159,0),U,3),I=$P($P(I,";",($P(IB("U"),U,9))),":",2) W I
"RTN","IBCSC4",23,0)
 W ?58,"Type: ",$S($P(IB("U"),U,8)=3:"ELECTIVE",$P(IB("U"),U,8)=1:"EMERGENCY",$P(IB("U"),U,8)=2:"URGENT",1:IBU)
"RTN","IBCSC4",24,0)
 D OT
"RTN","IBCSC4",25,0)
 S Z=2 X IBWW
"RTN","IBCSC4",26,0)
 W " Discharge  : " S Y=$S($P(IBIP,U,6)>0:$P(IBIP,U,6),1:"") X ^DD("DD") W $S(Y]"":Y,1:IBU)
"RTN","IBCSC4",27,0)
 W !?4,"Status     : ",$S($P(IB("U"),U,12)]""&($D(^DGCR(399.1,(+$P(IB("U"),"^",12)),0))):$P(^(0),"^",1),1:IBU)
"RTN","IBCSC4",28,0)
 N IBPOARR,IBDATE
"RTN","IBCSC4",29,0)
 D SET^IBCSC4D(IBIFN,"",.IBPOARR)
"RTN","IBCSC4",30,0)
 S IBDATE=$$BDATE^IBACSV(+$G(IBIFN)) ; The EVENT DATE of the bill
"RTN","IBCSC4",31,0)
 S Z=3,IBW=1 X IBWW W " Prin. Diag.: " S Y=$$DX(0,IBDATE) W $S(Y'="":$P(Y,U,4)_" - "_$P(Y,U,2),$$DXREQ(IBIFN):IBU,1:IBUN)
"RTN","IBCSC4",32,0)
 F I=1:1:4 S Y=$$DX(+Y,IBDATE) Q:Y=""  W !?4,"Other Diag.: ",$P(Y,U,4)_" - "_$P(Y,U,2)
"RTN","IBCSC4",33,0)
 I +Y S Y=$$DX(+Y,IBDATE) I +Y W !?4,"***There are more diagnoses associated with this bill.***"
"RTN","IBCSC4",34,0)
 S Z=4,IBW=1,DGPCM=$P(IB(0),U,9) X IBWW W " Cod. Method: ",$S(DGPCM="":IBUN,DGPCM=9:"ICD-9-CM",DGPCM=4:"CPT-4",1:"HCPCS")
"RTN","IBCSC4",35,0)
 D:$D(IBPROC) WRT^IBCSC5
"RTN","IBCSC4",36,0)
OCC ;
"RTN","IBCSC4",37,0)
 S Z=$S($P(IB(0),U,5)<3:5,1:6)
"RTN","IBCSC4",38,0)
 S IBW=1 X IBWW W " Pros. Items: " S Y=$$PD^IBCSC5 I 'Y W IBUN
"RTN","IBCSC4",39,0)
 S Z=$S($P(IB(0),U,5)<3:6,1:7) X IBWW
"RTN","IBCSC4",40,0)
 W " Occ. Code  : " F I=1:1:5 I $D(IBO(I)) W:I>1 !?4,"Occ. Code  : ",$E(IBOCN(I),1,27) W:I=1 $E(IBOCN(I),1,27) S Y=IBOCD(I) X ^DD("DD") W ?55,Y S Y=IBOCD2(I) I +Y X ^DD("DD") W " - ",Y
"RTN","IBCSC4",41,0)
 I '$D(IBO) W IBUN
"RTN","IBCSC4",42,0)
 I $D(IBO)=1,IBO="" W IBUN
"RTN","IBCSC4",43,0)
 S Z=$S($P(IB(0),U,5)<3:7,1:8) X IBWW
"RTN","IBCSC4",44,0)
 W " Cond. Code : " F I=1:1:5 I $D(IBCC(I)) W:I>1 !?4,"Cond. Code : ",IBCCN(I) W:I=1 IBCCN(I)
"RTN","IBCSC4",45,0)
 I '$D(IBCC) W IBUN
"RTN","IBCSC4",46,0)
 I $D(IBCC)=1,IBCC="" W IBUN
"RTN","IBCSC4",47,0)
 S Z=$S($P(IB(0),U,5)<3:8,1:9)
"RTN","IBCSC4",48,0)
 X IBWW W " Value Code : " S IBVC=0
"RTN","IBCSC4",49,0)
 I $$FT^IBCEF(IBIFN)'=2 D
"RTN","IBCSC4",50,0)
 . D VC^IBCVA1 I +IBVC S J=1,I=0 F  S I=$O(IBVC(I)) Q:'I  W:J>1 !,?3," Value Code : " W ?17,$E($P(IBVC(I),U,2),1,40),?58,$P(IBVC(I),U,3) S J=J+1
"RTN","IBCSC4",51,0)
 W:'IBVC IBUN K IBVC
"RTN","IBCSC4",52,0)
 D Q^IBCSC4B G ^IBCSCP
"RTN","IBCSC4",53,0)
 Q
"RTN","IBCSC4",54,0)
OCC1 W $P(^DGCR(399,IBIFN,"CP",I,0),"^",3)_" - "_$P($$PRCD^IBCEF1($P(^DGCR(399,IBIFN,"CP",I,0),U)),U),?55,"Date: ",Y
"RTN","IBCSC4",55,0)
 Q
"RTN","IBCSC4",56,0)
 ;IBIP= PTF ptr (399,.08) ^ PTF admiss dt (45,2) or Event dt (399,.03)^ accident hour (399,160) 
"RTN","IBCSC4",57,0)
 ; ^ source of addmis (399,159) ^ typ of addmiss (399,158)
"RTN","IBCSC4",58,0)
 ; ^ PTF disch dt (45,70) or Non-VA disch dt (399,.16) ^ disch status (399,162)
"RTN","IBCSC4",59,0)
 ; ^ dxls (45,79) ^ disch bedsection (399,161)
"RTN","IBCSC4",60,0)
INP F I="C","U",0 S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCSC4",61,0)
 S IBPTF=$P(IB(0),U,8) F I=0,70 S DGPT(I)=$S(IBPTF="":"",$D(^DGPT(IBPTF,I)):^(I),1:"")
"RTN","IBCSC4",62,0)
 F I="C","U",0 S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCSC4",63,0)
 S IBIP=IBPTF_"^"_$S($P(DGPT(0),"^",2)]"":$P(DGPT(0),"^",2),1:$P(IB(0),"^",3))_"^"_$P(IB("U"),"^",10)_"^"_$P(IB("U"),"^",9)_"^"_$P(IB("U"),"^",8)_"^"_$S(+DGPT(70)>0:+DGPT(70),1:$P(IB(0),"^",16))_"^"
"RTN","IBCSC4",64,0)
 S IBIP=IBIP_$P(IB("U"),"^",12)_"^"_$S($D(DGPT(70)):$P(DGPT(70),"^",10),1:"")_"^"_$P(IB("U"),"^",11)
"RTN","IBCSC4",65,0)
 Q
"RTN","IBCSC4",66,0)
SET ;S ^DD(399.0304,0,"ID","WRITE")="N X S X=^(0) W ""   "",$E($P($G(@(U_$P($P(X,U),"";"",2)_+X_"",0)"")),U,$S($P(X,U,1)[""CPT"":2,1:4)),1,30)"
"RTN","IBCSC4",67,0)
 Q
"RTN","IBCSC4",68,0)
 ;
"RTN","IBCSC4",69,0)
DX(ORDER,IBDATE) ; Get next diagnosis data
"RTN","IBCSC4",70,0)
 N IBX
"RTN","IBCSC4",71,0)
 S IBX=""
"RTN","IBCSC4",72,0)
 S ORDER=$O(IBPOARR(ORDER))
"RTN","IBCSC4",73,0)
 I ORDER S IBX=ORDER_U_$$ICD9^IBACSV(+IBPOARR(ORDER),$G(IBDATE))
"RTN","IBCSC4",74,0)
 Q IBX
"RTN","IBCSC4",75,0)
 ;
"RTN","IBCSC4",76,0)
OT ; print Other Care (SNF) multiple
"RTN","IBCSC4",77,0)
 N IBX,IBY,IBN I '$O(^DGCR(399,IBIFN,"OT",0)) W !,?4,"SNF Care   : UNSPECIFIED [NOT REQUIRED]"
"RTN","IBCSC4",78,0)
 S IBX=0 F  S IBX=$O(^DGCR(399,IBIFN,"OT",IBX)) Q:'IBX  D
"RTN","IBCSC4",79,0)
 . S IBY=$G(^DGCR(399,IBIFN,"OT",IBX,0)) Q:'IBY
"RTN","IBCSC4",80,0)
 . S IBN=$P($G(^DGCR(399.1,+IBY,0)),U,1),IBN=$S(IBN["SKILLED":"SNF Care ",IBN["SUB-ACUTE":"Sub-Acute",1:"Unknown  ")
"RTN","IBCSC4",81,0)
 . W !,?4,IBN,"  : ",$$FMTE^XLFDT(+$P(IBY,U,2))," - ",$$FMTE^XLFDT(+$P(IBY,U,3))
"RTN","IBCSC4",82,0)
 Q
"RTN","IBCSC4",83,0)
 ;
"RTN","IBCSC4",84,0)
DXREQ(IBIFN) ; Is the principle diagnosis code required or not?
"RTN","IBCSC4",85,0)
 ; Function returns true (1) if DX is required for this bill, otherwise 0
"RTN","IBCSC4",86,0)
 NEW REQ,IBFT
"RTN","IBCSC4",87,0)
 S REQ=0,IBFT=$$FT^IBCEF(IBIFN)
"RTN","IBCSC4",88,0)
 I IBFT=2 S REQ=1 G DXREQX                            ; required for CMS-1500
"RTN","IBCSC4",89,0)
 I IBFT=3,$$WNRBILL^IBEFUNC(IBIFN) S REQ=1 G DXREQX   ; UB with Medicare (WNR) current payer
"RTN","IBCSC4",90,0)
DXREQX ;
"RTN","IBCSC4",91,0)
 Q REQ
"RTN","IBCSC4",92,0)
 ;
"RTN","IBCSC4",93,0)
 ;IBCSC4
"RTN","IBCSC82")
0^5^B20854750^B20168513
"RTN","IBCSC82",1,0)
IBCSC82 ;ALB/MJB - MCCR SCREEN 8 (UB-04 BILL SPECIFIC INFO) ;27 MAY 88 10:20
"RTN","IBCSC82",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210,232,155,343,349**;21-MAR-94;Build 46
"RTN","IBCSC82",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC82",4,0)
 ;
"RTN","IBCSC82",5,0)
EN S IBCUBFT=$$FT^IBCU3(IBIFN) I IBCUBFT=2 K IBCUBFT G ^IBCSC8H ;CMS-1500
"RTN","IBCSC82",6,0)
 ;
"RTN","IBCSC82",7,0)
 N I,IB,IBX,Z
"RTN","IBCSC82",8,0)
 D ^IBCSCU S IBSR=8,IBSR1=2,IBV1="00000" S:IBV IBV1="11111" F I="U","U1",0,"UF3","UF31","U2","TX","U3" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCSC82",9,0)
 N IBZ,IBPRV,IBREQ,IBMRASEC,TEXT
"RTN","IBCSC82",10,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV)
"RTN","IBCSC82",11,0)
 K IB("PRV")
"RTN","IBCSC82",12,0)
 S IBZ=0 F  S IBZ=$O(IBPRV(IBZ)) Q:'IBZ  I $O(IBPRV(IBZ,0))!$D(IBPRV(IBZ,"NOTOPT")) M IB("PRV",IBZ)=IBPRV(IBZ)
"RTN","IBCSC82",13,0)
 ;
"RTN","IBCSC82",14,0)
 D H^IBCSCU
"RTN","IBCSC82",15,0)
 S Z=1,IBW=1 X IBWW W " Bill Remarks",!?5,"- FL-80",?22,": "
"RTN","IBCSC82",16,0)
 S TEXT=$P($G(^DGCR(399,IBIFN,"UF2")),U,3)  ; field# 402
"RTN","IBCSC82",17,0)
 I TEXT="" W IBUN                           ; unspecified [not required]
"RTN","IBCSC82",18,0)
 I TEXT'="" D
"RTN","IBCSC82",19,0)
 . N IBZ,Z
"RTN","IBCSC82",20,0)
 . D REMARK^IBCEF77(IBIFN,.IBZ)
"RTN","IBCSC82",21,0)
 . S Z=0 F  S Z=$O(IBZ(Z)) Q:'Z  D
"RTN","IBCSC82",22,0)
 .. W ?24,$G(IBZ(Z))
"RTN","IBCSC82",23,0)
 .. I Z>4 W ?48,$G(IBVI)," <--- This Line Will Not Print ",$G(IBVO)
"RTN","IBCSC82",24,0)
 .. I $O(IBZ(Z)) W !
"RTN","IBCSC82",25,0)
 .. Q
"RTN","IBCSC82",26,0)
 . Q
"RTN","IBCSC82",27,0)
 ;
"RTN","IBCSC82",28,0)
 S IBZ="",IBZ=$S($P(IB("UF3"),U,4)]"":"Pri: "_$P(IB("UF3"),U,4),1:"")_$S($P(IB("UF3"),U,5)'="":"  Sec: "_$P(IB("UF3"),U,5),1:"")_$S($P(IB("UF3"),U,6)'="":" Ter: "_$P(IB("UF3"),U,6),1:"")
"RTN","IBCSC82",29,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC82",30,0)
 W !,?3," ICN/DCN(s)        : ",IBZ
"RTN","IBCSC82",31,0)
 S IBZ="",IBZ=$S($P(IB("U"),U,13)]"":"Pri: "_$P(IB("U"),U,13),1:"")_$S($P(IB("U2"),U,8)'="":"  Sec: "_$P(IB("U2"),U,8),1:"")_$S($P(IB("U2"),U,9)'="":"  Ter: "_$P(IB("U2"),U,9),1:"")
"RTN","IBCSC82",32,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC82",33,0)
 W !,?3," Tx Auth. Code(s)  : ",IBZ
"RTN","IBCSC82",34,0)
 W !,?3," Admitting Dx      : " S IBX=$$ICD9^IBACSV(+IB("U2"),$$BDATE^IBACSV(IBIFN)) W $S(IBX'="":$P(IBX,U)_" - "_$P(IBX,U,3),'$$INPAT^IBCEF(IBIFN):IBUN,1:IBU)
"RTN","IBCSC82",35,0)
 I $P(IB(0),U,5)>2 W !,?3," Admission Source  : " S IBX=$$EXTERNAL^DILFD(399,159,,$P(IB("U"),U,9)) W $S(IBX'="":IBX,1:IBU) ;Outpatient only
"RTN","IBCSC82",36,0)
 S Z=2,IBW=1 X IBWW
"RTN","IBCSC82",37,0)
 W " Providers         : ",$S('$O(IB("PRV",0)):IBU,1:"")
"RTN","IBCSC82",38,0)
 I $D(IB("PRV")) D
"RTN","IBCSC82",39,0)
 . N Z,IBT,IBQ,IBARR,IBTAX,IBNOTAX,IBSPEC,IBNOSPEC
"RTN","IBCSC82",40,0)
 . S IBZ=0
"RTN","IBCSC82",41,0)
 . D DEFSEC^IBCEF74(IBIFN,.IBARR)
"RTN","IBCSC82",42,0)
 . ; PRXM/KJH - Add Taxonomy code to display for patch 343. Moved secondary IDs slightly (below).
"RTN","IBCSC82",43,0)
 . S IBTAX=$$PROVTAX^IBCEF73A(IBIFN,.IBNOTAX)
"RTN","IBCSC82",44,0)
 . S IBSPEC=$$SPECTAX^IBCEF73A(IBIFN,.IBNOSPEC)
"RTN","IBCSC82",45,0)
 . F  S IBZ=$O(IB("PRV",IBZ)) Q:'IBZ  D
"RTN","IBCSC82",46,0)
 .. N A,A1
"RTN","IBCSC82",47,0)
 .. S IBQ=""
"RTN","IBCSC82",48,0)
 .. W !,?5,"- "
"RTN","IBCSC82",49,0)
 .. S A=$$EXPAND^IBTRE(399.0222,.01,IBZ)
"RTN","IBCSC82",50,0)
 .. I $P($G(IB("PRV",IBZ,1)),U,4)'="" S A1=" ("_$E($P(IB("PRV",IBZ,1),U,4),1,3)_")",A=$E(A,1,15-$L(A1))_A1
"RTN","IBCSC82",51,0)
 .. W $E(A_$J("",15),1,15),": "
"RTN","IBCSC82",52,0)
 .. I '$P($G(IB("PRV",IBZ,1)),U,3),$P($G(IB("PRV",IBZ,1)),U)="" W IBU Q
"RTN","IBCSC82",53,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)'="" W:'$G(IB("PRV",IBZ)) $E($P(IB("PRV",IBZ,1),U)_$J("",20),1,20) W:$G(IB("PRV",IBZ)) "(OLD PROV DATA) "_$P(IB("PRV",IBZ,1),U)
"RTN","IBCSC82",54,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)="",$P($G(IB("PRV",IBZ)),U)'="" W $E($P(IB("PRV",IBZ),U)_$J("",20),1,20)
"RTN","IBCSC82",55,0)
 .. W "    Taxonomy: ",$S($P(IBTAX,U,IBZ)'="":$P(IBTAX,U,IBZ),1:IBU),$S($P(IBSPEC,U,IBZ)'="":" ("_$P(IBSPEC,U,IBZ)_")",1:"")
"RTN","IBCSC82",56,0)
 .. F A=1:1:3 I $G(IBARR(IBZ,A))'="" S IBQ=IBQ_"["_$E("PST",A)_"]"_IBARR(IBZ,A)_" "
"RTN","IBCSC82",57,0)
 .. I $L(IBQ) W !,?30,$E(IBQ,1,49)
"RTN","IBCSC82",58,0)
 K IB("PRV")
"RTN","IBCSC82",59,0)
 ;
"RTN","IBCSC82",60,0)
 S IBREQ=+$$REQMRA^IBEFUNC(IBIFN) S:IBREQ IBREQ=1
"RTN","IBCSC82",61,0)
 S IBMRASEC=$$MRASEC^IBCEF4(IBIFN)
"RTN","IBCSC82",62,0)
 S Z=3,IBW=1 X IBWW W " ",$S('IBREQ:"Force To Print?    : ",1:"Force MRA Sec Prt?: ")
"RTN","IBCSC82",63,0)
 S IBZ=$$EXTERNAL^DILFD(399,27+IBREQ,,+$P(IB("TX"),U,8+IBREQ))
"RTN","IBCSC82",64,0)
 I IBMRASEC,'$P(IB("TX"),U,8),$P(IB("TX"),U,9) S IBZ="FORCED TO PRINT BY MRA PRIMARY",$P(IB("TX"),U,8)=0
"RTN","IBCSC82",65,0)
 W $S(IBZ'=""&($P(IB("TX"),U,8+IBREQ)'=""):IBZ,'$$TXMT^IBCEF4(IBIFN):"[NOT APPLICABLE - NOT TRANSMITTABLE]",IBREQ:"NO FORCED PRINT",1:IBZ)
"RTN","IBCSC82",66,0)
 S Z=4,IBW=1 X IBWW
"RTN","IBCSC82",67,0)
 W " Provider ID Maint  : (Edit Provider ID information)"
"RTN","IBCSC82",68,0)
 S Z=5,IBW=1 X IBWW
"RTN","IBCSC82",69,0)
 W " Other Facility (VA/non): " S IBZ=$$EXPAND^IBTRE(399,232,+$P(IB("U2"),U,10))
"RTN","IBCSC82",70,0)
 W $S(IBZ'="":$E(IBZ,1,23),$$PSRV^IBCEU(IBIFN):IBU,1:IBUN)
"RTN","IBCSC82",71,0)
 I IBZ'="" D
"RTN","IBCSC82",72,0)
 . ; PRXM/KJH - Add Taxonomy code to display for patch 343.
"RTN","IBCSC82",73,0)
 . W ?53,"Taxonomy: "
"RTN","IBCSC82",74,0)
 . S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,3),"X12 CODE") W $S(IBZ'="":IBZ,1:IBU)
"RTN","IBCSC82",75,0)
 . S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,3),"SPECIALTY CODE") W $S(IBZ'="":" ("_IBZ_")",1:"")
"RTN","IBCSC82",76,0)
 . Q
"RTN","IBCSC82",77,0)
 ;
"RTN","IBCSC82",78,0)
 G ^IBCSCP
"RTN","IBCSC82",79,0)
Q Q
"RTN","IBCSC82",80,0)
 ;IBCSC82
"RTN","IBCSC8H")
0^3^B33583237^B34960375
"RTN","IBCSC8H",1,0)
IBCSC8H ;ALB/ARH - MCCR SCREEN 8 (BILL SPECIFIC INFO) CMS-1500 ;4/21/92
"RTN","IBCSC8H",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,207,210,232,155,320,343,349**;21-MAR-94;Build 46
"RTN","IBCSC8H",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC8H",4,0)
 ; CMS-1500 screen 8
"RTN","IBCSC8H",5,0)
 ;
"RTN","IBCSC8H",6,0)
 ; MAP TO DGCRSC8H
"RTN","IBCSC8H",7,0)
 ;
"RTN","IBCSC8H",8,0)
EN N I,IB,Y,Z
"RTN","IBCSC8H",9,0)
 D ^IBCSCU S IBSR=8,IBSR1="H",IBV1="0000000" S:IBV IBV1="1111111" F I="U","U1","UF2","UF3","U2","M","TX",0,"U3" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCSC8H",10,0)
 N IBZ,IBPRV,IBDATE,IBREQ,IBMRASEC,IBZ1
"RTN","IBCSC8H",11,0)
 ;
"RTN","IBCSC8H",12,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN) ; Date of service for the bill
"RTN","IBCSC8H",13,0)
 S IBPRV=""
"RTN","IBCSC8H",14,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV)
"RTN","IBCSC8H",15,0)
 K IB("PRV")
"RTN","IBCSC8H",16,0)
 S IBZ=0 F  S IBZ=$O(IBPRV(IBZ)) Q:'IBZ  I $O(IBPRV(IBZ,0))!$D(IBPRV(IBZ,"NOTOPT")) M IB("PRV",IBZ)=IBPRV(IBZ)
"RTN","IBCSC8H",17,0)
 ;
"RTN","IBCSC8H",18,0)
 D H^IBCSCU
"RTN","IBCSC8H",19,0)
 S Z=1,IBW=1 X IBWW W " Unable To Work From: " S Y=$P(IB("U"),U,16) X ^DD("DD") W $S(Y'="":Y,1:IBUN)
"RTN","IBCSC8H",20,0)
 W !?4,"Unable To Work To  : " S Y=$P(IB("U"),U,17) X ^DD("DD") W $S(Y'="":Y,1:IBUN)
"RTN","IBCSC8H",21,0)
 S Z=2,IBW=1 X IBWW W " Admitting Dx       : " S IBZ=$$ICD9^IBACSV(+IB("U2"),IBDATE) W $S(IBZ'="":$P(IBZ,U)_" - "_$P(IBZ,U,3),1:IBUN)
"RTN","IBCSC8H",22,0)
 S IBZ="",IBZ=$S($P(IB("UF3"),U,4)]"":"Pri: "_$P(IB("UF3"),U,4),1:"")_$S($P(IB("UF3"),U,5)'="":"  Sec: "_$P(IB("UF3"),U,5),1:"")_$S($P(IB("UF3"),U,6)'="":" Ter: "_$P(IB("UF3"),U,6),1:"")
"RTN","IBCSC8H",23,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC8H",24,0)
 W !,?4,"ICN/DCN(s)         : ",IBZ
"RTN","IBCSC8H",25,0)
 S IBZ=$$CKPROV^IBCEU(IBIFN,3)
"RTN","IBCSC8H",26,0)
 S IBZ="",IBZ=$S($P(IB("U"),U,13)]"":"Pri: "_$P(IB("U"),U,13),1:"")_$S($P(IB("U2"),U,8)'="":"  Sec: "_$P(IB("U2"),U,8),1:"")_$S($P(IB("U2"),U,9)'="":"  Ter: "_$P(IB("U2"),U,9),1:"")
"RTN","IBCSC8H",27,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC8H",28,0)
 W !?4,"Tx Auth. Code(s)   : ",IBZ
"RTN","IBCSC8H",29,0)
 S Z=3,IBW=1 X IBWW
"RTN","IBCSC8H",30,0)
 W " Providers          : ",$S('$O(IB("PRV",0)):IBU,1:"")
"RTN","IBCSC8H",31,0)
 I $D(IB("PRV")) D  ; at least 1 provider found
"RTN","IBCSC8H",32,0)
 . N IBQ,A,A1,IBARR,IBTAX,IBNOTAX,IBSPEC,IBNOSPEC
"RTN","IBCSC8H",33,0)
 . S IBZ=0
"RTN","IBCSC8H",34,0)
 . D DEFSEC^IBCEF74(IBIFN,.IBARR)
"RTN","IBCSC8H",35,0)
 . ; PRXM/KJH - Add Taxonomy code to display for patch 343. Moved secondary IDs slightly (below).
"RTN","IBCSC8H",36,0)
 . S IBTAX=$$PROVTAX^IBCEF73A(IBIFN,.IBNOTAX)
"RTN","IBCSC8H",37,0)
 . S IBSPEC=$$SPECTAX^IBCEF73A(IBIFN,.IBNOSPEC)
"RTN","IBCSC8H",38,0)
 . F  S IBZ=$O(IB("PRV",IBZ)) Q:'IBZ  D
"RTN","IBCSC8H",39,0)
 .. S IBQ=""
"RTN","IBCSC8H",40,0)
 .. W !,?5,"- "
"RTN","IBCSC8H",41,0)
 .. S A=$$EXPAND^IBTRE(399.0222,.01,IBZ)
"RTN","IBCSC8H",42,0)
 .. I $P($G(IB("PRV",IBZ,1)),U,4)'="" S A1=" ("_$E($P(IB("PRV",IBZ,1),U,4),1,3)_")",A=$E(A,1,16-$L(A1))_A1
"RTN","IBCSC8H",43,0)
 .. W $E(A_$J("",16),1,16),": "
"RTN","IBCSC8H",44,0)
 .. I '$P($G(IB("PRV",IBZ,1)),U,3),$P($G(IB("PRV",IBZ,1)),U)="" W IBU Q
"RTN","IBCSC8H",45,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)'="" W:'$G(IB("PRV",IBZ)) $E($P(IB("PRV",IBZ,1),U)_$J("",16),1,16) W:$G(IB("PRV",IBZ)) "(OLD BOX 31 DATA) "_$P(IB("PRV",IBZ,1),U)
"RTN","IBCSC8H",46,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)="",$P($G(IB("PRV",IBZ)),U)'="" W $E($P(IB("PRV",IBZ),U)_$J("",16),1,16)
"RTN","IBCSC8H",47,0)
 .. W "    Taxonomy: ",$S($P(IBTAX,U,IBZ)'="":$P(IBTAX,U,IBZ),1:IBU),$S($P(IBSPEC,U,IBZ)'="":" ("_$P(IBSPEC,U,IBZ)_")",1:"")
"RTN","IBCSC8H",48,0)
 .. F A=1:1:3 I $G(IBARR(IBZ,A))'="" S IBQ=IBQ_"["_$E("PST",A)_"]"_IBARR(IBZ,A)_" "
"RTN","IBCSC8H",49,0)
 .. I $L(IBQ) W !,?30,$E(IBQ,1,49)
"RTN","IBCSC8H",50,0)
 ;
"RTN","IBCSC8H",51,0)
 K IB("PRV")
"RTN","IBCSC8H",52,0)
 ;
"RTN","IBCSC8H",53,0)
 S Z=4,IBW=1 X IBWW
"RTN","IBCSC8H",54,0)
 W " Other Facility (VA/non): " S IBZ=$$EXPAND^IBTRE(399,232,+$P(IB("U2"),U,10))
"RTN","IBCSC8H",55,0)
 W $S(IBZ'="":$E(IBZ,1,23),$$PSRV^IBCEU(IBIFN):IBU,1:IBUN)
"RTN","IBCSC8H",56,0)
 I IBZ'="" D
"RTN","IBCSC8H",57,0)
 . ; PRXM/KJH - Add Taxonomy code to display for patch 343.
"RTN","IBCSC8H",58,0)
 . W ?53,"Taxonomy: "
"RTN","IBCSC8H",59,0)
 . S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,3),"X12 CODE") W $S(IBZ'="":IBZ,1:IBU)
"RTN","IBCSC8H",60,0)
 . S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,3),"SPECIALTY CODE") W $S(IBZ'="":" ("_IBZ_")",1:"")
"RTN","IBCSC8H",61,0)
 . Q
"RTN","IBCSC8H",62,0)
 ;
"RTN","IBCSC8H",63,0)
 ; clia# display - IB patch 320
"RTN","IBCSC8H",64,0)
 S (IBZ,IBZ1)=$P(IB("U2"),U,13)     ; retrieve CLIA# from database
"RTN","IBCSC8H",65,0)
 ;
"RTN","IBCSC8H",66,0)
 I IBZ="" D
"RTN","IBCSC8H",67,0)
 . NEW CLIAREQ,DEFCLIA,DIE,DA,DR
"RTN","IBCSC8H",68,0)
 . S CLIAREQ=$$CLIAREQ^IBCEP8A(IBIFN)
"RTN","IBCSC8H",69,0)
 . I 'CLIAREQ S IBZ1=IBUN Q          ; clia# not needed
"RTN","IBCSC8H",70,0)
 . S DEFCLIA=$$CLIA^IBCEP8A(IBIFN)   ; default clia# for claim
"RTN","IBCSC8H",71,0)
 . I DEFCLIA="" S IBZ1=IBU Q         ; no default found
"RTN","IBCSC8H",72,0)
 . I $G(IBMDOTCN) K IBMDOTCN S IBZ1=IBU Q     ; user @-deleted clia#
"RTN","IBCSC8H",73,0)
 . S IBZ1=DEFCLIA                    ; display and stuff default clia#
"RTN","IBCSC8H",74,0)
 . S DIE=399,DA=IBIFN,DR="235///"_DEFCLIA D ^DIE    ; stuff in default
"RTN","IBCSC8H",75,0)
 . Q
"RTN","IBCSC8H",76,0)
 ;
"RTN","IBCSC8H",77,0)
 W !,?4,"Lab CLIA #         : ",IBZ1
"RTN","IBCSC8H",78,0)
 ;
"RTN","IBCSC8H",79,0)
 ; Mammo# display IB patch 320
"RTN","IBCSC8H",80,0)
 S (IBZ,IBZ1)=$P(IB("U3"),U,1)    ; retrieve mammo# from database
"RTN","IBCSC8H",81,0)
 ;
"RTN","IBCSC8H",82,0)
 ; If mammo# is there, but should not be, then blank it out
"RTN","IBCSC8H",83,0)
 I IBZ'="",'$$XRAY^IBCEP8A(IBIFN) D
"RTN","IBCSC8H",84,0)
 . NEW DIE,DA,DR
"RTN","IBCSC8H",85,0)
 . S IBZ1=IBUN        ; mammo# not needed
"RTN","IBCSC8H",86,0)
 . S DIE=399,DA=IBIFN,DR="242////@" D ^DIE
"RTN","IBCSC8H",87,0)
 . Q
"RTN","IBCSC8H",88,0)
 ;
"RTN","IBCSC8H",89,0)
 I IBZ="" S IBZ1=IBUN
"RTN","IBCSC8H",90,0)
 W !?4,"Mammography Cert # : ",IBZ1
"RTN","IBCSC8H",91,0)
 ;
"RTN","IBCSC8H",92,0)
 S Z=5,IBW=1 X IBWW
"RTN","IBCSC8H",93,0)
 W " Form Locator 19    : " S IBZ=$P($G(^DGCR(399,IBIFN,"UF31")),U,3) W $S(IBZ'="":IBZ,1:IBUN)
"RTN","IBCSC8H",94,0)
 I $P(IB("U2"),U,14)'="" W !,?4,"Homebound          : ",$$EXPAND^IBTRE(399,236,$P(IB("U2"),U,14))
"RTN","IBCSC8H",95,0)
 I $P(IB("U2"),U,15)'="" W !,?4,"Date Last Seen     : ",$$EXPAND^IBTRE(399,237,$P(IB("U2"),U,15))
"RTN","IBCSC8H",96,0)
 I $P(IB("U2"),U,16)'="" W !,?4,"Spec Prog Indicator: " S IBZ=$$EXPAND^IBTRE(399,238,$P(IB("U2"),U,16)) W $S(IBZ'="":IBZ,$$WNRBILL^IBEFUNC(IBIFN):"31",1:"")
"RTN","IBCSC8H",97,0)
 ;
"RTN","IBCSC8H",98,0)
 S Z=6,IBW=1 X IBWW
"RTN","IBCSC8H",99,0)
 S IBREQ=+$$REQMRA^IBEFUNC(IBIFN) S:IBREQ IBREQ=1
"RTN","IBCSC8H",100,0)
 S IBMRASEC=$$MRASEC^IBCEF4(IBIFN)
"RTN","IBCSC8H",101,0)
 W " ",$S('IBREQ:"Force To Print?    : ",1:"Force MRA Sec Prt? : ")
"RTN","IBCSC8H",102,0)
 S IBZ=$$EXTERNAL^DILFD(399,27+IBREQ,,+$P(IB("TX"),U,8+IBREQ))
"RTN","IBCSC8H",103,0)
 I IBMRASEC,'$P(IB("TX"),U,8),$P(IB("TX"),U,9) S IBZ="FORCED TO PRINT BY MRA PRIMARY",$P(IB("TX"),U,8)=0
"RTN","IBCSC8H",104,0)
 W $S(IBZ'=""&($P(IB("TX"),U,8+IBREQ)'=""):IBZ,'$$TXMT^IBCEF4(IBIFN):"[NOT APPLICABLE - NOT TRANSMITTABLE]",IBREQ:"NO FORCED PRINT",1:IBZ)
"RTN","IBCSC8H",105,0)
 ;
"RTN","IBCSC8H",106,0)
 S Z=7,IBW=1 X IBWW
"RTN","IBCSC8H",107,0)
 W " Provider ID Maint  : (Edit Provider ID information)",!
"RTN","IBCSC8H",108,0)
 G ^IBCSCP
"RTN","IBCSC8H",109,0)
Q Q
"RTN","IBCSC8H",110,0)
 ;
"RTN","IBCSC8H",111,0)
WRT1(IBCRED) ; Write credentials mismatch
"RTN","IBCSC8H",112,0)
 W !,*7,"  **Warning** Credentials differ from those found in NEW PERSON or IB NON VA",!,$J("",14),"BILLING PROVIDER file (",$S(IBCRED="":"none",1:IBCRED),")"
"RTN","IBCSC8H",113,0)
 W !,$J("",14),"Changes will print local, but only credentials on file transmit"
"RTN","IBCSC8H",114,0)
 Q
"RTN","IBCSC8H",115,0)
 ;
"RTN","IBCSC8H",116,0)
NSAME(DA) ; Returns 1 if div on bill is not the default billing facility
"RTN","IBCSC8H",117,0)
 Q ($P($G(^IBE(350.9,1,0)),U,2)'=$P($G(^DG(40.8,+$P(^DGCR(399,DA,0),U,22),0)),U,7))
"RTN","IBCSC8H",118,0)
 ;
"RTN","IBCSC8H",119,0)
 ;IBCSC8H
"RTN","IBCSCE")
0^4^B14217145^B14652895
"RTN","IBCSCE",1,0)
IBCSCE ;ALB/MRL,MJB - MCCR SCREEN EDITS ;07 JUN 88 14:35
"RTN","IBCSCE",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,91,106,51,137,236,245,287,349**;21-MAR-94;Build 46
"RTN","IBCSCE",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSCE",4,0)
 ;
"RTN","IBCSCE",5,0)
 ;MAP TO DGCRSCE
"RTN","IBCSCE",6,0)
 ; always do procedures last because they are edited upon return to screen routine
"RTN","IBCSCE",7,0)
 I IBDR20["54," S IBDR20=$P(IBDR20,"54,",1)_$P(IBDR20,"54,",2)_"54,"
"RTN","IBCSCE",8,0)
 I IBDR20["44," S IBDR20=$P(IBDR20,"44,",1)_$P(IBDR20,"44,",2)_"44,"
"RTN","IBCSCE",9,0)
LOOP N IBDRLP,IBDRL S IBDRLP=IBDR20 F IBDRL=1:1 S IBDR20=$P(IBDRLP,",",IBDRL) Q:IBDR20=""  D EDIT
"RTN","IBCSCE",10,0)
 Q
"RTN","IBCSCE",11,0)
EDIT N IBQUERY
"RTN","IBCSCE",12,0)
 I (IBDR20["31") D MCCR^IBCNSP2 G ENQ
"RTN","IBCSCE",13,0)
 I (IBDR20["43")!(IBDR20["52") D ^IBCSC4D G ENQ
"RTN","IBCSCE",14,0)
 I (IBDR20["74")!(IBDR20["53") K DR N I D ^IBCOPV S (DA,Y)=IBIFN G TMPL
"RTN","IBCSCE",15,0)
 I (IBDR20["54"),$P($G(^IBE(350.9,1,1)),"^",17) K DR N I D EN1^IBCCPT(.IBQUERY) D CLOSE^IBSDU(.IBQUERY) G TMPL ;
"RTN","IBCSCE",16,0)
 I (IBDR20["55") D ^IBCSC5A G ENQ
"RTN","IBCSCE",17,0)
 I (IBDR20["45")!(IBDR20["56") D ^IBCSC5B G ENQ
"RTN","IBCSCE",18,0)
 I (IBDR20["66")!(IBDR20["76") D EDIT^IBCRBE(IBIFN) D ASKCMB^IBCU65(IBIFN) G ENQ
"RTN","IBCSCE",19,0)
 I IBDR20["84",$$FT^IBCEF(IBIFN)=3 D EN1^IBCEP6 G ENQ   ;UB-04
"RTN","IBCSCE",20,0)
 I IBDR20["87",$$FT^IBCEF(IBIFN)=2 D EN1^IBCEP6 G ENQ   ;CMS-1500
"RTN","IBCSCE",21,0)
 F Q=1:1:9 I IBDR20[("9"_Q) D EDIT^IBCSC9 G ENQ
"RTN","IBCSCE",22,0)
TMPL N IBFLIAE S IBFLIAE=1 ;to invoke EN^DGREGAED from [IB SCREEN1]
"RTN","IBCSCE",23,0)
 S DR="[IB SCREEN"_IBSR_IBSR1_"]",(DA,Y)=IBIFN,DIE="^DGCR(399,"
"RTN","IBCSCE",24,0)
 D ^DIE K DIE,DR,DLAYGO
"RTN","IBCSCE",25,0)
 I (IBDR20["61")!(IBDR20["71") I +$G(DGRVRCAL) D PROC^IBCU7A(IBIFN,1)
"RTN","IBCSCE",26,0)
ENQ K DIE,DR,IBDR1,IBDR20,DGDRD,DGDRS,DGDRS1,DA Q
"RTN","IBCSCE",27,0)
 ;
"RTN","IBCSCE",28,0)
 ; W I "^11^12^13^15^14^21^22^23^"[("^"_J_"^") G W1
"RTN","IBCSCE",29,0)
 ; I "^44^"[("^"_J_"^") S DR(2,399.0304)=".01;1;I $D(IBIP),X<$P(IBIP,""^"",2)!($P(IBIP,""^"",6)&(X>$P(IBIP,""^"",6))) K X"
"RTN","IBCSCE",30,0)
 ; I "^64^"[("^"_J_"^") S DR(2,399.042)=".01:.03;"
"RTN","IBCSCE",31,0)
 ; I $T(@J) S DGDRD=$P($T(@J),";;",2) D S S K=(J*10) I $T(@K) S DGDRD=$P($T(@K),";;",2) D S
"RTN","IBCSCE",32,0)
 ; D ^IBCSCE1:("^31^")[("^"_J_"^") Q
"RTN","IBCSCE",33,0)
 ; W1 I @DGDRS["^2^DPT(^^D SET^IBCSCE;" D ^IBCSCE1 Q
"RTN","IBCSCE",34,0)
 ; S DGDRD="^2^DPT(^^D SET^IBCSCE;" D S,^IBCSCE1 Q
"RTN","IBCSCE",35,0)
 ; S I $L(@DGDRS)+$L(DGDRD)<241 S @DGDRS=@DGDRS_DGDRD Q
"RTN","IBCSCE",36,0)
 ; S DGCT=DGCT+1,DGDRS="DR(1,399,"_DGCT_")",@DGDRS=DGDRD Q
"RTN","IBCSCE",37,0)
 ; Q
"RTN","IBCSCE",38,0)
16 ;;.18;
"RTN","IBCSCE",39,0)
31 ;;.07;S X=$P(^DGCR(399,DA,0),U,11);S Y="@"_$S(X']"":31,X="p":31,X="o":311,1:310);@310;D 1^IBCSCH1 S Y="@"_$S(IBADI=-1:31,'IBADI:312,1:313);@313;^2^DPT(^^D SET^IBCSCE;D UPDT^IBCSCE;@312;
"RTN","IBCSCE",40,0)
310 ;;101;102;103;S Y="@31";@311;D INST^IBCU;111;K DIC("DR"),DLAYGO;@31;
"RTN","IBCSCE",41,0)
32 ;;104;105;106;121;107;108;109
"RTN","IBCSCE",42,0)
41 ;;S:IBPTF Y="@411";159.5;@411;160;159;158;
"RTN","IBCSCE",43,0)
42 ;;162;
"RTN","IBCSCE",44,0)
43 ;;I IBPTF S Y="@943";64;65;66;67;68;S Y="@43";@943;D DX^IBCSC4B;@43;
"RTN","IBCSCE",45,0)
44 ;;S IBZ20=$P(^DGCR(399,DA,0),U,9);.09;D PRO^IBCSC4B;S IBASKCOD=1
"RTN","IBCSCE",46,0)
45 ;;41;
"RTN","IBCSCE",47,0)
46 ;;40;
"RTN","IBCSCE",48,0)
51 ;;.03;
"RTN","IBCSCE",49,0)
999 ;;64;65;66;67;68;
"RTN","IBCSCE",50,0)
52 ;;64;S:X="" Y="@99";65;S:X="" Y="@99";66;S:X="" Y="@99";67;S:X="" Y="@99";68;@99;
"RTN","IBCSCE",51,0)
53 ;;;;same as 74
"RTN","IBCSCE",52,0)
54 ;;S IBZ20=$P(^DGCR(399,DA,0),U,9);.09;S IBASKCOD=1
"RTN","IBCSCE",53,0)
55 ;;41;
"RTN","IBCSCE",54,0)
56 ;;40;
"RTN","IBCSCE",55,0)
61 ;;.06;164;
"RTN","IBCSCE",56,0)
62 ;;155;S:X=0 Y=156;157;156;S:'$D(IBOX) Y="@62";153;@62;
"RTN","IBCSCE",57,0)
63 ;;151;152;
"RTN","IBCSCE",58,0)
64 ;;161;165;
"RTN","IBCSCE",59,0)
65 ;;D RCD^IBCU1;42;202;S:'X Y=201;203;201;I $P(^DGCR(399,DA,"U1"),"^",11)']"" S Y="@65";210;@65;
"RTN","IBCSCE",60,0)
71 ;;.06;164;
"RTN","IBCSCE",61,0)
72 ;;155;S:X=0 Y=156;157;156;S:'$D(IBOX) Y="@72";153;@72;
"RTN","IBCSCE",62,0)
73 ;;151;152;
"RTN","IBCSCE",63,0)
74 ;;S:$D(IBOUT) Y="@999";43;@999;K IBOUT;
"RTN","IBCSCE",64,0)
75 ;;D RCD^IBCU1;42;202;S:'X Y=201;203;201;I $P(^DGCR(399,DA,"U1"),"^",11)']"" S Y="@75";210;@75;
"RTN","IBCSCE",65,0)
81 ;;208;
"RTN","IBCSCE",66,0)
82 ;;204;
"RTN","IBCSCE",67,0)
83 ;;205;
"RTN","IBCSCE",68,0)
84 ;;206;
"RTN","IBCSCE",69,0)
85 ;;207;
"RTN","IBCSCE",70,0)
86 ;;163;
"RTN","IBCSCE",71,0)
 ; AD S X=$S($D(^DPT(DA,.11)):^(.11),1:""),IBPHO=$S($D(^(.13)):$P(^(.13),U,1),1:""),Y=$S($D(^(IBADD)):^(IBADD),1:""),^(IBADD)=$P(Y,U,1)_U_$P(Y,U,2)_U_$P(X,U,1,6)_U_IBPHO_U_$P(Y,U,10) K IBADD,IBPHO Q
"RTN","IBCSCE",72,0)
 ; SET S I(0,0)=D0,Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:""),X=$P(Y(1),"^",2),D(0)=X,X=$S(D(0)>0:D(0),1:"") Q
"RTN","IBCSCE",73,0)
 ;called by screen 3 (input template)
"RTN","IBCSCE",74,0)
UPDT F IBDD=0:0 S IBDD=$O(^DPT(DFN,.312,IBDD)) Q:IBDD'>0  S IBI1=^DPT(DFN,.312,IBDD,0) I $D(^DIC(36,+IBI1,0)),$P(^(0),"^",2)'="N" S IBDD(+IBI1)=IBI1
"RTN","IBCSCE",75,0)
 F IBAIC=0:0 S IBAIC=$O(^DGCR(399,IBIFN,"AIC",IBAIC)) Q:IBAIC'>0  I $D(IBDD(IBAIC)) F IBI1="I1","I2","I3" I $D(^DGCR(399,IBIFN,IBI1)),+^(IBI1)=IBAIC,^(IBI1)'=IBDD(IBAIC) S ^DGCR(399,IBIFN,IBI1)=IBDD(IBAIC)
"RTN","IBCSCE",76,0)
 K IBAIC,IBDD,IBI1 Q
"RTN","IBCSCE",77,0)
 ;
"RTN","IBCSCE",78,0)
 ;Edit patient's address using DGREGAED API
"RTN","IBCSCE",79,0)
EDADDR(IBDFN) ;
"RTN","IBCSCE",80,0)
 I $G(IBFLIAE)'=1!(IBDFN=0) Q 0
"RTN","IBCSCE",81,0)
 N IBFL S IBFL(1)=1
"RTN","IBCSCE",82,0)
 N X,Y,DIE,DA,DR,DIDEL,DIW,DIEDA,DG,DICR
"RTN","IBCSCE",83,0)
 D EN^DGREGAED(IBDFN,.IBFL)
"RTN","IBCSCE",84,0)
 Q 1
"RTN","IBCSCE",85,0)
 ;IBCSCE
"RTN","IBCSCH")
0^6^B74472704^B75190513
"RTN","IBCSCH",1,0)
IBCSCH ;ALB/MJB - MCCR HELP ROUTINE ;03 JUN 88 15:25
"RTN","IBCSCH",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,124,138,51,148,137,161,245,232,287,348,349**;21-MAR-94;Build 46
"RTN","IBCSCH",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSCH",4,0)
 ;
"RTN","IBCSCH",5,0)
 ;MAP TO DGCRSCH
"RTN","IBCSCH",6,0)
 ;
"RTN","IBCSCH",7,0)
 N I,C,IBSCNNZ,IBQ,IBPRNT,Z S IBSCNNZ=$$UP^XLFSTR($G(IBSCNN)),IBQ=0
"RTN","IBCSCH",8,0)
 I '$D(IBPAR) D  Q:IBQ
"RTN","IBCSCH",9,0)
 . I $F(".?1500.?HCFA.","."_$G(IBSCNNZ)_"."),$$FT^IBCEF(IBIFN)=2 S IBQ=1,IBPRNT=2 D BL24(IBIFN,0) Q
"RTN","IBCSCH",10,0)
 . I $G(IBSCNNZ)="?SC" S IBQ=1 D DISPSC(IBIFN) Q
"RTN","IBCSCH",11,0)
 . I $G(IBSCNNZ)="?INS" S IBQ=1 D INSDSPL(IBIFN) Q
"RTN","IBCSCH",12,0)
 . I $G(IBSCNNZ)="?INX" S IBQ=1 D INSDSPLX(IBIFN) Q
"RTN","IBCSCH",13,0)
 . I $G(IBSCNNZ)="?PRV" S IBQ=1 D DISPPRV(IBIFN) Q
"RTN","IBCSCH",14,0)
 . I $G(IBSCNNZ)="?CHG" S IBQ=1 D DISPCHG^IBCRBH1(IBIFN) Q
"RTN","IBCSCH",15,0)
 . I $G(IBSCNNZ)="?PRC" S IBQ=1 D DISPPRC^IBCSCH1(IBIFN) Q
"RTN","IBCSCH",16,0)
 . I $G(IBSCNNZ)="?CPT" S IBQ=1 D BCPTCHG^IBCRBH2(IBIFN) Q
"RTN","IBCSCH",17,0)
 . I $G(IBSCNNZ)="?INC" S IBQ=1 D EDIT^IBCBB(IBIFN) Q
"RTN","IBCSCH",18,0)
 . I $G(IBSCNNZ)="?CLA",$$CK0^IBCIUT1() S IBQ=1 D CLA^IBCISC(IBIFN) Q
"RTN","IBCSCH",19,0)
 . I $G(IBSCNNZ)="?MRA",$$MCRONBIL^IBEFUNC(IBIFN),$T(SCR^IBCEMVU)'="" S IBQ=1 D SCR^IBCEMVU(IBIFN) Q
"RTN","IBCSCH",20,0)
 . I $G(IBSCNNZ)="?ID" S IBQ=1 D DISPID^IBCEF74(IBIFN) Q
"RTN","IBCSCH",21,0)
 . Q
"RTN","IBCSCH",22,0)
 ;
"RTN","IBCSCH",23,0)
 S IBH("HELP")="" D ^IBCSCU,H^IBCSCU K IBH("HELP") W !,"Enter '^' to stop the display ",$S(IBV:"",1:"and edit "),"of data,"
"RTN","IBCSCH",24,0)
 W:'$D(IBPAR) " '^N' to jump to screen #N (see",!,"listing below), <RET> to continue on to the next available screen" I IBV W "." G M
"RTN","IBCSCH",25,0)
 W " or enter",!,"the field group number(s) you wish to edit using commas and dashes as",!,"delimiters.  Those groups enclosed in brackets ""[]"" are editable while those"
"RTN","IBCSCH",26,0)
 W !,"enclosed in arrows ""<>"" are not."
"RTN","IBCSCH",27,0)
 G:$D(IBPAR) M1
"RTN","IBCSCH",28,0)
M W "  Special help screens:"
"RTN","IBCSCH",29,0)
 W !,?5,"Enter '?SC' to view SC Status and Rated Disabilities."
"RTN","IBCSCH",30,0)
 W !,?5,"Enter '?INS' to view the patients insurance policies."
"RTN","IBCSCH",31,0)
 W !,?5,"Enter '?INX' to view the patients insurance policies with comments."
"RTN","IBCSCH",32,0)
 W !,?5,"Enter '?PRV' to view provider specific information."
"RTN","IBCSCH",33,0)
 W !,?5,"Enter '?PRC' to view all procedures on the bill and related data."
"RTN","IBCSCH",34,0)
 W !,?5,"Enter '?CHG' to view all items on the bill with potential charges."
"RTN","IBCSCH",35,0)
 W !,?5,"Enter '?CPT' to view all charges for selected CPT codes and bill type."
"RTN","IBCSCH",36,0)
 I $$FT^IBCEF(IBIFN)=2 W !,?5,"Enter '?1500' to view how block 24 will print on a CMS-1500."
"RTN","IBCSCH",37,0)
 W !,?5,"Enter '?INC' to execute the edits & view the bill inconsistencies."
"RTN","IBCSCH",38,0)
 I $$CK0^IBCIUT1() W !?5,"Enter '?CLA' to view the ClaimsManager options."
"RTN","IBCSCH",39,0)
 I $$MCRONBIL^IBEFUNC(IBIFN) W !?5,"Enter '?MRA' to view Medicare Remittance Advice EOB's on file."
"RTN","IBCSCH",40,0)
 W !,?5,"Enter '?ID' to view all IDs to be electronically transmitted on this claim."
"RTN","IBCSCH",41,0)
 ;
"RTN","IBCSCH",42,0)
 I +IBSR'=9 S Z="DATA GROUPS ON SCREEN "_+IBSR W ! X IBWW D @(IBSR1_IBSR) D W
"RTN","IBCSCH",43,0)
 D S W ! F I=$Y:1:20 W !
"RTN","IBCSCH",44,0)
 S Z="PRESS <RETURN> KEY" X IBWW W " to RETURN to SCREEN ",+IBSR R X:DTIME Q
"RTN","IBCSCH",45,0)
M1 N I,Z S Z="DATA GROUPS ON PARAMETER SCREEN" W !! X IBWW D @(IBSR1_IBSR) D W W ! F I=$Y:1:20 W !
"RTN","IBCSCH",46,0)
 S Z="PRESS <RETURN> KEY" X IBWW W " to RETURN to PARAMETER SCREEN" R X:DTIME Q
"RTN","IBCSCH",47,0)
1 S X="DOB^Alias Name^Sex, Marital Status^Veteran Status, Eligibility^Address, Temporary Address^SC at Time of Care" Q
"RTN","IBCSCH",48,0)
2 S X="Patient Employer Name, Address^Spouse Employer Name, Address" Q
"RTN","IBCSCH",49,0)
3 S X="Payer Information^Provider Numbers^Mailing Address" Q
"RTN","IBCSCH",50,0)
4 S X="Admission Information^Discharge Information^Diagnosis Code(s)^Coding Method, Inpt Proc Code(s)^Occurrence Code(s)^Condition Code(s)^Value Code(s)" Q
"RTN","IBCSCH",51,0)
5 S X="Event Date^Outpatient Diagnosis^Outpatient Visits^Coding Method, Opt. Pro. Code(s)^Occurrence Code(s)^Condition Code(s)" Q
"RTN","IBCSCH",52,0)
6 S X="Bill Type, Covered/Non-Covered Days^R.O.I., Assignment of Benefits^Statement Covers Period^Bedsection, Length of Stay^Revenue Code(s), Offset, Total^Rate Schedule(s)^Prior Payments/Claims" Q
"RTN","IBCSCH",53,0)
7 S X="Bill Type, Covered/Non-Covered Days^R.O.I., Assignment of Benefits^Statement Covers Period^Outpatient Visits^Revenue Code(s), Offset, Total^Rate Schedule(s)^Prior Payments/Claims" Q
"RTN","IBCSCH",54,0)
8 S X="Bill Remark^Form Locator 2^Form Locator 9^Form Locator 27^Form Locator 45^Form Locator 92^Form Locator 93^Tx Auth. Code" Q
"RTN","IBCSCH",55,0)
9 S X="Locally defined fields" Q
"RTN","IBCSCH",56,0)
28 S X="Bill Remark, ICN/DCN's, Tx Auth. Code, Admit Diagnosis/Source ^Providers^Force to Print^Provider ID Maintenance^Other Facility (VA/non)" Q
"RTN","IBCSCH",57,0)
H8 S X="Period Unable to Work^Admit Dx, ICN/DCN, Tx/Prior Auth. Code^Providers^Non-VA Facility^Form Locator 19^Force to Print" Q
"RTN","IBCSCH",58,0)
PAR S X="Fed Tax #, BC/BS #, MAS Svc Pointer^Bill Signer, Billing Supervisor^Security Parameters, Outpatient CPT parameters ^Remarks, Mailgroups^Agent Cashier Address/Phone" Q
"RTN","IBCSCH",59,0)
S N C,I,Z,J W !! S Z="AVAILABLE SCREENS" X IBWW
"RTN","IBCSCH",60,0)
 S X="Demographic^Employment^Payer^Inpatient Event^Outpatient Event^Inpatient Billing - General^Outpatient Billing - General^Billing - Specific^Locally Defined"
"RTN","IBCSCH",61,0)
 S C=0 F I=1:1 S J=$P(X,"^",I) Q:J=""  I '$E(IBVV,I) S C=C+1,Z="^"_I,IBW=(C#2) W:'(C#2) ?41 X IBWW S Z=$S(I?1N:" ",1:" ")_J_" Data" W Z
"RTN","IBCSCH",62,0)
 Q
"RTN","IBCSCH",63,0)
W N I,J,Z
"RTN","IBCSCH",64,0)
 F I=1:1 S J=$P(X,"^",I) Q:J=""  S Z=I,IBW=(I#2) W:'(I#2) ?42 X IBWW W " "_J
"RTN","IBCSCH",65,0)
 W:'(I-1)#2 ! Q
"RTN","IBCSCH",66,0)
 Q
"RTN","IBCSCH",67,0)
 ;IBCSCH
"RTN","IBCSCH",68,0)
 ;
"RTN","IBCSCH",69,0)
 ;
"RTN","IBCSCH",70,0)
BL24(IBIFN,IBNOSHOW) ; display block 24 of CMS-1500
"RTN","IBCSCH",71,0)
 ; IBNOSHOW = 1 for not to show error/warning text line
"RTN","IBCSCH",72,0)
 N X,Y,DIR,IBPG,IBLN,IBCOL,IBX,IBQ,IBLC,IBLIN,IBPFORM,IBD,IBC1,Z,Z0,IBXDATA,IBXSAVE,IBNXPG
"RTN","IBCSCH",73,0)
 K ^TMP("IBXSAVE",$J)
"RTN","IBCSCH",74,0)
 S IBQ=0,IBLC=9 Q:'$G(IBIFN)  K ^TMP("IBXDISP",$J)
"RTN","IBCSCH",75,0)
 ;
"RTN","IBCSCH",76,0)
 S IBLIN=$$BOX24D^IBCEF11()
"RTN","IBCSCH",77,0)
 S IBPFORM=$S($P($G(^IBE(353,2,2)),U,8):$P(^(2),U,8),1:2)
"RTN","IBCSCH",78,0)
 S IBX=$$BILLN^IBCEFG0(0,"1^99",IBLIN,+IBIFN,IBPFORM)
"RTN","IBCSCH",79,0)
 ;
"RTN","IBCSCH",80,0)
 W @IOF,!,"Example of diagnoses, procedures and charges printing on the CMS-1500"
"RTN","IBCSCH",81,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",82,0)
 ;
"RTN","IBCSCH",83,0)
 ; box 19 - lines 36-37
"RTN","IBCSCH",84,0)
 F Z=+IBLIN,IBLIN+1 I $D(^TMP("IBXDISP",$J,1,Z)) S Z0=$G(^TMP("IBXDISP",$J,1,Z,+$O(^TMP("IBXDISP",$J,1,Z,20),-1))) I Z0'="" S:Z=+IBLIN Z0="BOX 19 DATA: "_Z0 W !,Z0
"RTN","IBCSCH",85,0)
 ;
"RTN","IBCSCH",86,0)
 ; box 21 - lines 39-41
"RTN","IBCSCH",87,0)
 W !,"21. diagnosis"
"RTN","IBCSCH",88,0)
 I $D(^TMP("IBXDISP",$J,2,IBLIN+3)) W ?16,"(1st 4 only)"
"RTN","IBCSCH",89,0)
 W !,?5,"1. ",$G(^TMP("IBXDISP",$J,1,IBLIN+3,3)),?25,"3. ",$G(^TMP("IBXDISP",$J,1,IBLIN+3,30))
"RTN","IBCSCH",90,0)
 W !,?5,"2. ",$G(^TMP("IBXDISP",$J,1,IBLIN+5,3)),?25,"4. ",$G(^TMP("IBXDISP",$J,1,IBLIN+5,30))
"RTN","IBCSCH",91,0)
 ;
"RTN","IBCSCH",92,0)
 ; box 24 - lines 44-55
"RTN","IBCSCH",93,0)
 D PG
"RTN","IBCSCH",94,0)
 S IBPG=0 F  S IBPG=$O(^TMP("IBXDISP",$J,IBPG)) Q:'IBPG  D  Q:IBQ
"RTN","IBCSCH",95,0)
 . I '$D(^TMP("IBXDISP",$J,IBPG,IBLIN+9)) Q   ; no line's on this page
"RTN","IBCSCH",96,0)
 . F IBLN=IBLIN+8:1:+$P(IBLIN,U,2) S IBCOL=$O(^TMP("IBXDISP",$J,IBPG,IBLN,0)) Q:'IBCOL&'$O(^TMP("IBXDISP",$J,IBPG,IBLN))  S IBLC=IBLC+1 I IBCOL D  Q:IBQ
"RTN","IBCSCH",97,0)
 .. S IBCOL=0,IBC1=1 F  S IBCOL=$O(^TMP("IBXDISP",$J,IBPG,IBLN,IBCOL)) Q:'IBCOL  I $TR($G(^(IBCOL))," ")'="" D
"RTN","IBCSCH",98,0)
 ... W:IBC1 ! S IBC1=0 W ?(IBCOL-1),$G(^TMP("IBXDISP",$J,IBPG,IBLN,IBCOL))
"RTN","IBCSCH",99,0)
 . S IBNXPG=$O(^TMP("IBXDISP",$J,IBPG))   ; next page
"RTN","IBCSCH",100,0)
 . I 'IBQ,IBNXPG,$D(^TMP("IBXDISP",$J,IBNXPG,IBLIN+9)) S IBLIN=$$BOX24D^IBCEF11(),IBQ=$$PAUSE^IBCSCH1(IBLC) Q:IBQ  S IBLC=9 W @IOF D PG
"RTN","IBCSCH",101,0)
 . Q
"RTN","IBCSCH",102,0)
 ;
"RTN","IBCSCH",103,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",104,0)
 I 'IBPG,'IBQ S IBQ=$$PAUSE^IBCSCH1(IBLC)
"RTN","IBCSCH",105,0)
 K ^TMP("IBXDISP",$J),^TMP("IBXSAVE",$J)
"RTN","IBCSCH",106,0)
 Q
"RTN","IBCSCH",107,0)
 ;
"RTN","IBCSCH",108,0)
PG ; Display box 24 letters at top of charge list
"RTN","IBCSCH",109,0)
 W !,"24. A             B  C    D                 E         F     G H I    J"
"RTN","IBCSCH",110,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",111,0)
 Q
"RTN","IBCSCH",112,0)
 ;
"RTN","IBCSCH",113,0)
INSDSPL(IBIFN) ; Display patient's policies
"RTN","IBCSCH",114,0)
 N DIR,X,Y,IBX,DFN,IBDTIN,IBCOVEXT W @IOF
"RTN","IBCSCH",115,0)
 S IBX=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IBX,U,2),IBDTIN=$P(IBX,U,3),IBCOVEXT=1
"RTN","IBCSCH",116,0)
 I +DFN D DISPDT^IBCNS W ! S DIR("A")="Press RETURN to continue",DIR(0)="E" D ^DIR K DIR
"RTN","IBCSCH",117,0)
 Q
"RTN","IBCSCH",118,0)
 ;
"RTN","IBCSCH",119,0)
INSDSPLX(IBIFN) ; Display patient's policies extended (?INX)
"RTN","IBCSCH",120,0)
 N IBX,DFN,IBDATE S IBX=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IBX,U,2),IBDATE=$P(IBX,U,3) D DISP^IBCNS3(DFN,IBDATE,123)
"RTN","IBCSCH",121,0)
 Q
"RTN","IBCSCH",122,0)
 ;
"RTN","IBCSCH",123,0)
DISPPRV(IBIFN) ; display provider information: interactive - user selects provider
"RTN","IBCSCH",124,0)
 N DIC,DA,X,Y,IBI,IBJ,IBPRV,IBPX,IBDT,IBARR
"RTN","IBCSCH",125,0)
 W !!,"This is a display of provider specific information."
"RTN","IBCSCH",126,0)
 D SPECIFIC^IBCEU5(IBIFN)
"RTN","IBCSCH",127,0)
 S IBDT=+$G(^DGCR(399,+$G(IBIFN),"U")) I 'IBDT S IBDT=DT
"RTN","IBCSCH",128,0)
 ;
"RTN","IBCSCH",129,0)
 F IBI=1:1 W ! S DIC("A")="Select PROVIDER NAME: ",DIC="^VA(200,",DIC(0)="AEQM" D ^DIC Q:Y'>0  D
"RTN","IBCSCH",130,0)
 . S IBPRV=Y W !!,$TR($J(" ",IOM)," ","-")
"RTN","IBCSCH",131,0)
 . ;
"RTN","IBCSCH",132,0)
 . S IBPX=$$ESBLOCK^XUSESIG1(+IBPRV)
"RTN","IBCSCH",133,0)
 . W !," Signature Name: ",$P(IBPX,U,1),!,"Signature Title: ",$P(IBPX,U,3),!,"         Degree: ",$P(IBPX,U,2)
"RTN","IBCSCH",134,0)
 . ;
"RTN","IBCSCH",135,0)
 . S IBPX=$$PRVLIC^IBCU1(+IBPRV,IBDT,.IBARR) W !!,"     License(s): " D
"RTN","IBCSCH",136,0)
 .. I IBPX'>0 W "None Active on ",$$FMTE^XLFDT(IBDT,2) Q
"RTN","IBCSCH",137,0)
 .. S IBJ=0,IBW=0 F  S IBJ=$O(IBARR(IBJ)) Q:'IBJ  D
"RTN","IBCSCH",138,0)
 ... S IBPX=IBARR(IBJ),IBPX=$P($G(^DIC(5,+IBPX,0)),U,2)_": "_$P(IBPX,U,2)
"RTN","IBCSCH",139,0)
 ... I (IBW+$L(IBPX))>61 W !,?17 S IBW=0
"RTN","IBCSCH",140,0)
 ... W IBPX,"  " S IBW=IBW+$L(IBPX)+2
"RTN","IBCSCH",141,0)
 . ;
"RTN","IBCSCH",142,0)
 . S IBPX=$$GET^XUA4A72(+IBPRV,IBDT) W !!,"   Person Class: " D
"RTN","IBCSCH",143,0)
 .. I IBPX'>0 W "None Active on ",$$FMTE^XLFDT(IBDT,2) Q
"RTN","IBCSCH",144,0)
 .. W $P(IBPX,U,7)
"RTN","IBCSCH",145,0)
 .. W !,"  PROVIDER TYPE: ",$P(IBPX,U,2),!," CLASSIFICATION: ",$P(IBPX,U,3),!," SPECIALIZATION: ",$P(IBPX,U,4)
"RTN","IBCSCH",146,0)
 .. I +$P(IBPX,U,5) W !,"      EFFECTIVE: ",$$FMTE^XLFDT(+$P(IBPX,U,5),2) I +$P(IBPX,U,6) W " - ",$$FMTE^XLFDT(+$P(IBPX,U,6),2)
"RTN","IBCSCH",147,0)
 . ;
"RTN","IBCSCH",148,0)
 . S IBPX=$$PRVTYP^IBCRU6(+IBPRV,+IBDT)
"RTN","IBCSCH",149,0)
 . W !!,"RC Provider Group: ",$S(+IBPX:$P(IBPX,U,3)_", "_$P(IBPX,U,5)_"%",1:"None")
"RTN","IBCSCH",150,0)
 . W !,$TR($J(" ",IOM)," ","-")
"RTN","IBCSCH",151,0)
 ;
"RTN","IBCSCH",152,0)
 Q
"RTN","IBCSCH",153,0)
 ;
"RTN","IBCSCH",154,0)
DISPSC(IBIFN) ; display patients SC Status and Rated Disabilities
"RTN","IBCSCH",155,0)
 N IB0,DFN,IBSC,IBX,VAEL,VAERR
"RTN","IBCSCH",156,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IB0,U,2),IBSC=$P(IB0,U,18)
"RTN","IBCSCH",157,0)
 W !,@IOF,!,"SC Status and Rated Disabilities for ",$P($G(^DPT(+$G(DFN),0)),U,1)
"RTN","IBCSCH",158,0)
 W !,"--------------------------------------------------------------------------------",!
"RTN","IBCSCH",159,0)
 I +$G(IBIFN) W !," SC At Time Of Care: ",$S(IBSC=1:"Yes",IBSC=0:"No",1:"")
"RTN","IBCSCH",160,0)
 I +$G(DFN) D ELIG^VADPT D DIS^DGRPDB
"RTN","IBCSCH",161,0)
 W !!,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",162,0)
 S IBX=$$PAUSE^IBCSCH1(19)
"RTN","IBCSCH",163,0)
 Q
"RTN","IBCU4")
0^24^B17693963^B17691975
"RTN","IBCU4",1,0)
IBCU4 ;ALB/AAS - BILLING UTILITY ROUTINE (CONTINUED) ; 12-FEB-90
"RTN","IBCU4",2,0)
 ;;2.0;INTEGRATED BILLING;**109,122,137,245,349**;21-MAR-94;Build 46
"RTN","IBCU4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCU4",4,0)
 ;
"RTN","IBCU4",5,0)
 ;MAP TO DGCRU4
"RTN","IBCU4",6,0)
 ;
"RTN","IBCU4",7,0)
DDAT ;Input transform for Statement Covers From field
"RTN","IBCU4",8,0)
 I '$D(DA) G TO
"RTN","IBCU4",9,0)
 S IB00=+$P(^DGCR(399,+DA,0),"^",3) I +X<$P(IB00,".",1) W !?4,"Cannot precede the 'EVENT DATE'!",*7 K X G DDAT4
"RTN","IBCU4",10,0)
 I +X>(DT_".2359") W !?4,"Cannot bill for future treatment!",*7 K X G DDAT4
"RTN","IBCU4",11,0)
 D PROCDT
"RTN","IBCU4",12,0)
 I DGPRDTB,X>DGPRDTB K X W !?4,"Can't be greater than date of specified Procedures!",*7 G DDAT4
"RTN","IBCU4",13,0)
 G DDAT4
"RTN","IBCU4",14,0)
DDAT1 ;Input transform for Statement covers to
"RTN","IBCU4",15,0)
 I '$D(DA) G FROM
"RTN","IBCU4",16,0)
 S IB00=$S($D(^DGCR(399,+DA,"U")):$P(^("U"),"^",1),1:"") I 'IB00 W !?4,"'Start Date' must be specified first!",*7 K X G DDAT4
"RTN","IBCU4",17,0)
 I +X>DT W !?4,"Cannot bill for future treatment!",*7 K X G DDAT4
"RTN","IBCU4",18,0)
 I +X<IB00 W !?4,"Cannot preceed the 'Start Date'!",*7 K X G DDAT4
"RTN","IBCU4",19,0)
 ;I $S($E(IB00,4,5)<10:$E(IB00,2,3),1:$E(IB00,2,3)+1)'=$S($E(X,4,5)<10:$E(X,2,3),1:$E(X,2,3)+1) K X W !?4,"Must be in same fiscal year!",*7 G DDAT4
"RTN","IBCU4",20,0)
 ;I $$FY(+IB00)'=$$FY(X) K X W !?4,"Must be in same fiscal year!",*7 G DDAT4
"RTN","IBCU4",21,0)
 ;I $E(IB00,1,3)'=$E(X,1,3) K X W !?4,"Must be in same calendar year!",*7 G DDAT4
"RTN","IBCU4",22,0)
 D PROCDT
"RTN","IBCU4",23,0)
 I DGPRDTE,X<DGPRDTE K X W !?4,"Can't be less than date of specified Procedures!",*7 G DDAT4
"RTN","IBCU4",24,0)
 G DDAT4
"RTN","IBCU4",25,0)
 ;
"RTN","IBCU4",26,0)
 ;DDAT2   ;Input transform for OP VISITS DATE(S) field  REPLACED WITH IBCU41 6/15/93
"RTN","IBCU4",27,0)
 ;S IB00=$G(^DGCR(399,IBIFN,"U")) I $P(IB00,"^",1)']"" W !?4,*7,"No 'Start Date' on file...can't enter OP visit dates..." K X G DDAT4
"RTN","IBCU4",28,0)
 ;I $P(IB00,"^",2)']"" W !?4,*7,"No 'End Date' on file...can't enter OP visit dates..." K X G DDAT4
"RTN","IBCU4",29,0)
 ;I X<$P(IB00,"^",1) W !?4,*7,"Can't enter a visit date prior to 'Start Date'..." K X G DDAT4
"RTN","IBCU4",30,0)
 ;I X>$P(IB00,"^",2) W !?4,*7,"Can't enter a visit date later than 'End Date'..." K X G DDAT4
"RTN","IBCU4",31,0)
 ;I $P(^DGCR(399,IBIFN,0),"^",19)'=2,$D(^DGCR(399,"ASC2",IBIFN)),$O(^DGCR(399,IBIFN,"OP",0)) W !?4,*7,"Only 1 visit date allowed on bills with Amb. Surg. Codes!" K X G DDAT4
"RTN","IBCU4",32,0)
 ;D APPT^IBCU3,DUPCHK^IBCU3
"RTN","IBCU4",33,0)
 G DDAT4
"RTN","IBCU4",34,0)
 ;
"RTN","IBCU4",35,0)
DDAT3 ; - x-ref call for to and from dates, REPLACED BY TRIGGERS ON .08, 151, 152 ON 10/18/93
"RTN","IBCU4",36,0)
 ;if inpatient bill return DGNEWLOS to cause recalc of los in IBSC6
"RTN","IBCU4",37,0)
 G DDAT4:'$D(X)
"RTN","IBCU4",38,0)
 I $D(^DGCR(399,DA,0)),$P(^(0),"^",5)<3 S DGNEWLOS=1
"RTN","IBCU4",39,0)
 S IB00=$S($D(^DGCR(399,+DA,"U")):^("U"),1:"") I IB00']"" K X G DDAT4
"RTN","IBCU4",40,0)
 S IB02=$S(+$E(IB00,4,5)<10:$E(IB00,2,3),1:$E(IB00,2,3)+1),IB01=$E(IB00,1)_IB02_"0930",$P(^DGCR(399,DA,"U1"),"^",9)=IB02 ;,$P(^DGCR(399,DA,"U1"),"^",11)=$S($P(IB00,"^",2)>IB01:IB02+1,1:"")
"RTN","IBCU4",41,0)
 ;I $P(^DGCR(399,DA,"U1"),"^",11)="" S $P(^("U1"),"^",12)=""
"RTN","IBCU4",42,0)
 ;
"RTN","IBCU4",43,0)
DDAT4 K IB00,IB01,IB02,IB03,DGX,DGNOAP,DGJ,DGPROC,DGPRDT,DGPRDTE,DGPRDTB Q
"RTN","IBCU4",44,0)
 ;
"RTN","IBCU4",45,0)
OTDAT ; Input transform for Other Care Start Date (399,48,.02)
"RTN","IBCU4",46,0)
 I ('$G(DA(1)))!('$G(X)) Q
"RTN","IBCU4",47,0)
 N IBX S IBX=$G(^DGCR(399,DA(1),"U"))
"RTN","IBCU4",48,0)
 I +X<+IBX W !,?4,"Can Not Precede Bill Start Date!",!,*7 K X Q
"RTN","IBCU4",49,0)
 I +X>+$P(IBX,U,2) W !,?4,"Can not be after Bill End Date!",!,*7 K X Q
"RTN","IBCU4",50,0)
 Q
"RTN","IBCU4",51,0)
 ;
"RTN","IBCU4",52,0)
 ;
"RTN","IBCU4",53,0)
 ;
"RTN","IBCU4",54,0)
TO ;151 pseudo input x-form
"RTN","IBCU4",55,0)
 I +X_.9<IBIDS(.03) W !?4,"Cannot precede the 'EVENT DATE'!",*7 K X Q
"RTN","IBCU4",56,0)
 I +X>(DT_".2359") W !?4,"Cannot bill for future treatment!",*7 K X
"RTN","IBCU4",57,0)
 Q
"RTN","IBCU4",58,0)
FROM ;152 pseudo input x-form
"RTN","IBCU4",59,0)
 I '$D(IBIDS(151)) W !?4,"'Start Date' must be specified first!",*7 K X Q
"RTN","IBCU4",60,0)
 I +X<IBIDS(151) W !?4,"Cannot preceed the 'Start Date'!",*7 K X Q
"RTN","IBCU4",61,0)
 ;I $S($E(IBIDS(151),4,5)<10:$E(IBIDS(151),2,3),1:$E(IBIDS(151),2,3)+1)'=$S($E(X,4,5)<10:$E(X,2,3),1:$E(X,2,3)+1) K X W !?4,"Must be in same fiscal year!",*7 Q
"RTN","IBCU4",62,0)
 ;I $$FY(IBIDS(151))'=$$FY(X) K X W !?4,"Must be in same fiscal year!",*7 Q
"RTN","IBCU4",63,0)
 ;I $E(IBIDS(151),1,3)'=$E(X,1,3) K X W !?4,"Must be in same calendar year!",*7 Q
"RTN","IBCU4",64,0)
 Q
"RTN","IBCU4",65,0)
 ;
"RTN","IBCU4",66,0)
FY(DATE) ; return a dates Fiscal Year
"RTN","IBCU4",67,0)
 N IBYR,IBFY S IBFY=""
"RTN","IBCU4",68,0)
 I $G(DATE)?7N.E S IBYR=$S($E(DATE,4,5)<10:$E(DATE,1,3),1:$E(DATE,1,3)+1),IBFY=$E(IBYR,2,3)
"RTN","IBCU4",69,0)
 Q IBFY
"RTN","IBCU4",70,0)
 ;
"RTN","IBCU4",71,0)
SPEC ;  - calculate discharge specialty
"RTN","IBCU4",72,0)
 ;  - input  IBids(.08) = ptf record number
"RTN","IBCU4",73,0)
 ;  - output IBids(161) = pointer to billing specialty in 399.1
"RTN","IBCU4",74,0)
 K IBIDS(161)
"RTN","IBCU4",75,0)
 Q:$S('$D(IBIDS(.08)):1,'$D(^DGPT(+IBIDS(.08),70)):1,'$P(^(70),"^",2):1,'$D(^DIC(42.4,+$P(^(70),"^",2),0)):1,1:0)  S IBIDS(161)=$P(^DGPT(IBIDS(.08),70),"^",2)
"RTN","IBCU4",76,0)
 S IBIDS(161)=$P($G(^DIC(42.4,+IBIDS(161),0)),"^",5) I IBIDS(161)="" K IBIDS(161) Q
"RTN","IBCU4",77,0)
 S IBIDS(161)=$O(^DGCR(399.1,"B",IBIDS(161),0))
"RTN","IBCU4",78,0)
 I '$D(^DGCR(399.1,+IBIDS(161),0)) K IBIDS(161)
"RTN","IBCU4",79,0)
 Q
"RTN","IBCU4",80,0)
 ;
"RTN","IBCU4",81,0)
PROCDT ;  - find first and last dates of procedures
"RTN","IBCU4",82,0)
 ;    can't set from and to date inside of this range
"RTN","IBCU4",83,0)
 S (DGPRDT,DGPROC,DGPRDTE,DGPRDTB)=0
"RTN","IBCU4",84,0)
 F  S DGPROC=$O(^DGCR(399,+DA,"CP",DGPROC)) Q:'DGPROC  S DGPRDT=$P($G(^DGCR(399,+DA,"CP",DGPROC,0)),"^",2) D
"RTN","IBCU4",85,0)
 . I DGPRDTB=0!(DGPRDTB>DGPRDT) S DGPRDTB=DGPRDT
"RTN","IBCU4",86,0)
 . I DGPRDTE=0!(DGPRDTE<DGPRDT) S DGPRDTE=DGPRDT
"RTN","IBCU4",87,0)
 . Q
"RTN","IBCU4",88,0)
 Q
"RTN","IBCU4",89,0)
 ;
"RTN","IBCU4",90,0)
TOBIN(Y,DA) ; Screen for UB-04 bill classification based on UB-04 location of care
"RTN","IBCU4",91,0)
 ; Y = internal value of code for field .25 (UB-04 BILL CLASSIFICATION)
"RTN","IBCU4",92,0)
 ; DA = bill ien in file 399
"RTN","IBCU4",93,0)
 N IB0
"RTN","IBCU4",94,0)
 S IB0=$P($G(^DGCR(399,DA,0)),U,24) ; Get UB-04 LOCATION OF CARE value
"RTN","IBCU4",95,0)
 Q $S('IB0:0,(","_$P($G(^DGCR(399.1,+Y,0)),U,24)_",")'[(","_IB0_","):0,1:1)
"RTN","IBCU4",96,0)
 ;
"RTN","IBCU4",97,0)
TRIG05(X,D0) ; Trigger executed on field .05 of file 399 to set field .25
"RTN","IBCU4",98,0)
 ; Find the correct entry in file 399.1 that corresponds to the value in .05
"RTN","IBCU4",99,0)
 ; X = value of field .05, location of care
"RTN","IBCU4",100,0)
 ; D0 = IEN of bill entry in file 399
"RTN","IBCU4",101,0)
 N Z,Z0,IEN,LOC
"RTN","IBCU4",102,0)
 S LOC=$P($G(^DGCR(399,D0,0)),U,4)
"RTN","IBCU4",103,0)
 S IEN="",Z=0
"RTN","IBCU4",104,0)
 I LOC'="" F  S Z=$O(^DGCR(399.1,"C",X,Z)) Q:'Z  S Z0=$P($G(^DGCR(399.1,Z,0)),U,23,24) I +Z0,(","_$P(Z0,U,2)_",")[(","_LOC_",") S IEN=Z Q
"RTN","IBCU4",105,0)
 Q IEN
"RTN","IBCU4",106,0)
 ;
"RTN","IBCU4",107,0)
TOB(IBIFN,POS) ;Function returns the 3 digit type of bill from UB-04
"RTN","IBCU4",108,0)
 ;  fields or the position (1-3) as determined by POS (optional)
"RTN","IBCU4",109,0)
 N Z
"RTN","IBCU4",110,0)
 S Z=$P($G(^DGCR(399,IBIFN,0)),U,24,26),Z=$P(Z,U)_$P($G(^DGCR(399.1,+$P(Z,U,2),0)),U,2)_$P(Z,U,3)
"RTN","IBCU4",111,0)
 Q $S('$G(POS):Z,1:$E(Z,+POS))
"RTN","IBCU4",112,0)
 ;
"RTN","IBCU63")
0^87^B16132764^B16137862
"RTN","IBCU63",1,0)
IBCU63 ;ALB/AAS - BILLING UTILITY TO SET AMB SURG REV CODES ; 20-NOV-91
"RTN","IBCU63",2,0)
 ;;2.0;INTEGRATED BILLING;**21,133,349**;21-MAR-94;Build 46
"RTN","IBCU63",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCU63",4,0)
 ;
"RTN","IBCU63",5,0)
 ;MAP TO DGCRU63
"RTN","IBCU63",6,0)
% ; BASC
"RTN","IBCU63",7,0)
 Q:IBIDS(.11)'="i"
"RTN","IBCU63",8,0)
 K ^UTILITY($J,"IB-ASC")
"RTN","IBCU63",9,0)
 S DGRVCOD=$S($P($G(DGINPAR),"^",4):$P(DGINPAR,"^",4),$P($G(^IBE(350.9,1,1)),"^",18):$P(^(1),"^",18),1:"") Q:DGRVCOD=""
"RTN","IBCU63",10,0)
 ;
"RTN","IBCU63",11,0)
BLD S DGASC=0 F  S DGASC=$O(^DGCR(399,IBIFN,"CP","ASC",1,DGASC)) Q:'DGASC  S DGPROC=$G(^DGCR(399,IBIFN,"CP",DGASC,0)) I DGPROC D
"RTN","IBCU63",12,0)
 .S DGDIV=$P(DGPROC,"^",6),DGDAT=$P(DGPROC,"^",2)
"RTN","IBCU63",13,0)
 .Q:'DGDIV
"RTN","IBCU63",14,0)
 .Q:DGDAT+.9<$$STDATE
"RTN","IBCU63",15,0)
 .S:'$D(^UTILITY($J,"IB-ASC",+DGPROC,+DGDAT,+DGDIV)) ^(+DGDIV)=0
"RTN","IBCU63",16,0)
 .S ^(+DGDIV)=^UTILITY($J,"IB-ASC",+DGPROC,+DGDAT,+DGDIV)+1
"RTN","IBCU63",17,0)
 ;
"RTN","IBCU63",18,0)
STORREV ;build revenue codes in bill
"RTN","IBCU63",19,0)
 I '$D(^DGCR(399,IBIFN,"RC",0)) S ^DGCR(399,IBIFN,"RC",0)="^399.042PA"
"RTN","IBCU63",20,0)
 S DGPROC=0 F  S DGPROC=$O(^UTILITY($J,"IB-ASC",DGPROC)) Q:'DGPROC  S DGDAT=0 F  S DGDAT=$O(^UTILITY($J,"IB-ASC",DGPROC,DGDAT)) Q:'DGDAT  S DGDIV=0 F  S DGDIV=$O(^UTILITY($J,"IB-ASC",DGPROC,DGDAT,DGDIV)) Q:'DGDIV  S DGBSLOS=^(DGDIV) D
"RTN","IBCU63",21,0)
 .S X=DGDAT_"^"_DGDIV_"^"_DGPROC D ^IBAUTL1 S DGAMNT=Y Q:Y<1
"RTN","IBCU63",22,0)
 .S X=DGRVCOD,DGBSI=$O(^DGCR(399.1,"B",DGBILLBS,0))
"RTN","IBCU63",23,0)
 .D FILE
"RTN","IBCU63",24,0)
 .Q
"RTN","IBCU63",25,0)
 K DGDAT,DGPROC,DGDIV,DGRVCOD,DGASC
"RTN","IBCU63",26,0)
 Q
"RTN","IBCU63",27,0)
 ;
"RTN","IBCU63",28,0)
FILE ;
"RTN","IBCU63",29,0)
 S DA(1)=IBIFN
"RTN","IBCU63",30,0)
 D FILE^IBCU62
"RTN","IBCU63",31,0)
 W:'$G(IBAUTO) !,"Adding",?12,$E(00_DGRVCOD,($L(DGRVCOD)-1),($L(DGRVCOD)+1)),?24,DGBSLOS,?31,"$",$J(DGAMNT,8,2),?44,DGBILLBS I +$G(DGPROC) W ?65,$P($$CPT^ICPTCOD(+DGPROC),"^",2)
"RTN","IBCU63",32,0)
 Q
"RTN","IBCU63",33,0)
 ;
"RTN","IBCU63",34,0)
STDATE() ;  -start date for basc billing
"RTN","IBCU63",35,0)
 Q $S($P($G(^IBE(350.9,1,1)),"^",24):$P(^(1),"^",24),1:9999999)
"RTN","IBCU63",36,0)
 ;
"RTN","IBCU63",37,0)
RX ;add rx refill charges (adds default rx cpt for cms-1500)
"RTN","IBCU63",38,0)
 ;tries to use ins rx rev code, then site rx rev code finally standard revcode all with $20
"RTN","IBCU63",39,0)
 I '$D(^DGCR(399,IBIFN,"RC",0)) S ^DGCR(399,IBIFN,"RC",0)="^399.042PA"
"RTN","IBCU63",40,0)
 S DGBSLOS=IBCNT
"RTN","IBCU63",41,0)
 S DGBS="PRESCRIPTION",DGBSI=$O(^DGCR(399.1,"B",DGBS,0)) Q:'DGBSI
"RTN","IBCU63",42,0)
 I $$FT^IBCU3(IBIFN)=2 S DGPROC=$P($G(^IBE(350.9,1,1)),"^",30),DGDIV=""
"RTN","IBCU63",43,0)
 S DGRVCOD=$P($G(DGINPAR),"^",10) ; ins rev cd
"RTN","IBCU63",44,0)
 I DGRVCOD="" S DGRVCOD=$P($G(^IBE(350.9,1,1)),"^",28) ; site rev cd
"RTN","IBCU63",45,0)
 I DGRVCOD="" D SETREV^IBCU62 G END ; standard rev cd
"RTN","IBCU63",46,0)
 S DGAMNT=$$CHG(DGBSI,IBIDS(151),DGRVCOD) Q:'DGAMNT  S X=DGRVCOD
"RTN","IBCU63",47,0)
 D FILE
"RTN","IBCU63",48,0)
END K DGPROC,DGDIV,DGRVCOD
"RTN","IBCU63",49,0)
 Q
"RTN","IBCU63",50,0)
 ;MAP TO DGCRU61
"RTN","IBCU63",51,0)
 ;
"RTN","IBCU63",52,0)
ALL ;delete all revenue codes that may have been set up automatically
"RTN","IBCU63",53,0)
 ;ie = $d(^IB(399.5,"d",code ifn))
"RTN","IBCU63",54,0)
 K DA S DA(1)=IBIFN,DA=0 I '$G(IBAUTO) W !,"Removing old Revenue Codes."
"RTN","IBCU63",55,0)
 F DGII=0:0 S DA=$O(^DGCR(399,IBIFN,"RC",DA)) Q:DA<1  S X=$G(^DGCR(399,IBIFN,"RC",DA,0)) D
"RTN","IBCU63",56,0)
 . ;remove revenue codes pre-defined for automatic use AND revenue codes for BASC charges (are automatically created)
"RTN","IBCU63",57,0)
 . W:'$G(IBAUTO) "." D DEL
"RTN","IBCU63",58,0)
 Q
"RTN","IBCU63",59,0)
DEL S DIK="^DGCR(399,"_DA(1)_",""RC""," D ^DIK L ^DGCR(399,IBIFN):1
"RTN","IBCU63",60,0)
 Q
"RTN","IBCU63",61,0)
 ;
"RTN","IBCU63",62,0)
 ;
"RTN","IBCU63",63,0)
CHG(IBSI,IBDT,IBRVCD) ; returns charge for bedsection and date, rev cd optional
"RTN","IBCU63",64,0)
 N IBAMNT,IBACTDT,IBRC,IBDA,IBRT,IBQUIT,X S IBAMNT=0
"RTN","IBCU63",65,0)
 ;
"RTN","IBCU63",66,0)
 S IBACTDT=-(IBDT+.01) F  S IBACTDT=$O(^DGCR(399.5,"AIVDT",+IBSI,IBACTDT)) Q:'IBACTDT!+IBAMNT  D
"RTN","IBCU63",67,0)
 . S IBRC=+IBRVCD,IBDA=0 F  S IBDA=$O(^DGCR(399.5,"AIVDT",+IBSI,IBACTDT,IBRC,IBDA)) Q:'IBDA!+IBAMNT  D
"RTN","IBCU63",68,0)
 .. S IBRT=$G(^DGCR(399.5,+IBDA,0))
"RTN","IBCU63",69,0)
 .. I $P(IBRT,U,6)["i",+$P(IBRT,U,5) S IBAMNT=$P(IBRT,U,4)
"RTN","IBCU63",70,0)
 ;
"RTN","IBCU63",71,0)
 I 'IBAMNT S IBACTDT=-(IBDT+.01) F  S IBACTDT=$O(^DGCR(399.5,"AIVDT",+IBSI,IBACTDT)) Q:'IBACTDT!+IBAMNT  D
"RTN","IBCU63",72,0)
 . S IBRC="" F  S IBRC=$O(^DGCR(399.5,"AIVDT",+IBSI,IBACTDT,IBRC)) Q:'IBRC!+IBAMNT  D
"RTN","IBCU63",73,0)
 .. S IBDA=0 F  S IBDA=$O(^DGCR(399.5,"AIVDT",+IBSI,IBACTDT,IBRC,IBDA)) Q:'IBDA!+IBAMNT  D
"RTN","IBCU63",74,0)
 ... S IBRT=$G(^DGCR(399.5,+IBDA,0))
"RTN","IBCU63",75,0)
 ... I $P(IBRT,U,6)["i",+$P(IBRT,U,5) S IBAMNT=$P(IBRT,U,4)
"RTN","IBCU63",76,0)
 Q IBAMNT
"RTN","IBCU71")
0^88^B21952006^B21957104
"RTN","IBCU71",1,0)
IBCU71 ;ALB/AAS - INTERCEPT SCREEN INPUT OF PROCEDURE CODES ; 29-OCT-91
"RTN","IBCU71",2,0)
 ;;2.0;INTEGRATED BILLING;**41,60,91,106,125,138,210,245,349**;21-MAR-94;Build 46
"RTN","IBCU71",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCU71",4,0)
 ;
"RTN","IBCU71",5,0)
 ;MAP TO DGCRU71
"RTN","IBCU71",6,0)
 ;
"RTN","IBCU71",7,0)
ADDCPT ;  - store cpt codes in visits file
"RTN","IBCU71",8,0)
 Q:$D(DGCPT)'>9
"RTN","IBCU71",9,0)
 N DA,DIC,DR,DIE,DIRUT,DUOUT,DTOUT,DIROUT,VADM
"RTN","IBCU71",10,0)
 S DIR(0)="Y",DIR("A")="OK to add CPT codes to Visits file",DIR("B")="Y" D ^DIR K DIR Q:'Y!$D(DIRUT)
"RTN","IBCU71",11,0)
 N IBPKG,IBCLIN,IBVDATE,IBPROC,IBK,IBCOUNT,IBRESULT,IBOTH
"RTN","IBCU71",12,0)
 S IBPKG=$O(^DIC(9.4,"C","IB",0)) Q:'IBPKG
"RTN","IBCU71",13,0)
 W !!,"Adding Procedures to PCE..."
"RTN","IBCU71",14,0)
 S IBCLIN=0 F  S IBCLIN=$O(DGCPT(IBCLIN)) Q:'IBCLIN  D
"RTN","IBCU71",15,0)
 .;
"RTN","IBCU71",16,0)
 .K ^TMP("IBPXAPI",$J)
"RTN","IBCU71",17,0)
 .;
"RTN","IBCU71",18,0)
 .; - set up encounter data
"RTN","IBCU71",19,0)
 .S IBVDATE=DGPROCDT D VISDT
"RTN","IBCU71",20,0)
 .S ^TMP("IBPXAPI",$J,"ENCOUNTER",1,"ENC D/T")=IBVDATE,^("PATIENT")=DFN,^("HOS LOC")=IBCLIN,^("SERVICE CATEGORY")="X",^("ENCOUNTER TYPE")="A"
"RTN","IBCU71",21,0)
 .;
"RTN","IBCU71",22,0)
 .; - set up procedure and diagnosis data
"RTN","IBCU71",23,0)
 .S IBK=0,IBPROC=0 F  S IBPROC=$O(DGCPT(IBCLIN,IBPROC)) Q:'IBPROC  D
"RTN","IBCU71",24,0)
 ..S IBOTH="" F  S IBOTH=$O(DGCPT(IBCLIN,IBPROC,IBOTH)) Q:IBOTH=""  D
"RTN","IBCU71",25,0)
 ...S IBK=IBK+1
"RTN","IBCU71",26,0)
 ...;
"RTN","IBCU71",27,0)
 ...; - load first procedure diagnosis as visit diagnosis
"RTN","IBCU71",28,0)
 ...I +$P(IBOTH,U,2) S ^TMP("IBPXAPI",$J,"DX/PL",IBK,"DIAGNOSIS")=+$P(IBOTH,U,2)
"RTN","IBCU71",29,0)
 ...;
"RTN","IBCU71",30,0)
 ...; - count number of times procedure performed
"RTN","IBCU71",31,0)
 ...S (X,IBCOUNT)=0 F  S X=$O(DGCPT(IBCLIN,IBPROC,IBOTH,X)) Q:'X  S IBCOUNT=IBCOUNT+1
"RTN","IBCU71",32,0)
 ...;
"RTN","IBCU71",33,0)
 ...; - load procedure information
"RTN","IBCU71",34,0)
 ...S ^TMP("IBPXAPI",$J,"PROCEDURE",IBK,"PROCEDURE")=IBPROC,^("QTY")=IBCOUNT,^("EVENT D/T")=IBVDATE
"RTN","IBCU71",35,0)
 ...I +$P(IBOTH,U,1) S ^TMP("IBPXAPI",$J,"PROCEDURE",IBK,"ENC PROVIDER")=+$P(IBOTH,U,1)
"RTN","IBCU71",36,0)
 ...I +$P(IBOTH,U,3) S ^TMP("IBPXAPI",$J,"PROCEDURE",IBK,"MODIFIERS",$P($$MOD^ICPTMOD(+$P(IBOTH,U,3),"I"),U,2))=""
"RTN","IBCU71",37,0)
 .;
"RTN","IBCU71",38,0)
 .; - call the PCE interface
"RTN","IBCU71",39,0)
 .Q:'$D(^TMP("IBPXAPI",$J,"PROCEDURE"))
"RTN","IBCU71",40,0)
 .;
"RTN","IBCU71",41,0)
 .S IBRESULT=$$DATA2PCE^PXAPI("^TMP(""IBPXAPI"",$J)",IBPKG,"IB DATA",,DUZ,0)
"RTN","IBCU71",42,0)
 .W !,"  Procedures in ",$P(^SC(IBCLIN,0),"^")," "
"RTN","IBCU71",43,0)
 .I IBRESULT>0 W "were added okay." Q
"RTN","IBCU71",44,0)
 .W "were not added - error code is ",IBRESULT
"RTN","IBCU71",45,0)
 ;
"RTN","IBCU71",46,0)
 K ^TMP("IBPXAPI",$J)
"RTN","IBCU71",47,0)
 Q
"RTN","IBCU71",48,0)
 ;
"RTN","IBCU71",49,0)
 ;
"RTN","IBCU71",50,0)
DISPDX ;  - display diagnosis codes available for associated dx (CMS-1500)  NO LONGER USED?
"RTN","IBCU71",51,0)
 N I,J,X,IBDX,IBDXL,IBDATE
"RTN","IBCU71",52,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBCU71",53,0)
 F I=1:1:4 S IBDX=$P($G(^DGCR(399,IBIFN,"C")),"^",(I+13)),X=$$ICD9^IBACSV(+IBDX,IBDATE) I X'="" S IBDXL(I)=IBDX_"^"_X
"RTN","IBCU71",54,0)
 I '$D(IBDXL) W !!,"Bill has no ICD DIAGNOSIS." Q
"RTN","IBCU71",55,0)
 W !!,?24,"<<<ASSOCIATED ICD-9 DIAGNOSIS>>>",!!
"RTN","IBCU71",56,0)
 F I=1,2 W ! S X=0 F J=0,2 I $D(IBDXL(I+J)) S IBDX=IBDXL(I+J) D  S X=40
"RTN","IBCU71",57,0)
 . W ?X,"    ",$P(IBDX,"^",2),?(X+13),$E($P(IBDX,"^",4),1,28)
"RTN","IBCU71",58,0)
 W !
"RTN","IBCU71",59,0)
 Q
"RTN","IBCU71",60,0)
 ;
"RTN","IBCU71",61,0)
SCREEN(X,Y) ; -- screen logic for active procs or surgeries - OBSOLETE
"RTN","IBCU71",62,0)
 ; -- input x = date to check,  y = procedure
"RTN","IBCU71",63,0)
 ; -- output 0 if not active for billing or amb proc on date,  1 if either active
"RTN","IBCU71",64,0)
 ;
"RTN","IBCU71",65,0)
 Q 0
"RTN","IBCU71",66,0)
 ;
"RTN","IBCU71",67,0)
VISDT ; Find the actual encounter for the visit; update visit date/time
"RTN","IBCU71",68,0)
 ; input DGPROCDT, DFN, IBCLIN
"RTN","IBCU71",69,0)
 N IBD,IBF,IBOEN,IBEVT,IBVAL,IBCBK,IBFILTER
"RTN","IBCU71",70,0)
 S IBF=0,IBD=DGPROCDT-.1
"RTN","IBCU71",71,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=DGPROCDT-.1,IBVAL("EDT")=DGPROCDT\1_".99"
"RTN","IBCU71",72,0)
 S IBFILTER=""
"RTN","IBCU71",73,0)
 S IBCBK="I IBCLIN=$P(Y0,U,4) S IBVDATE=+Y0,SDSTOP=1"
"RTN","IBCU71",74,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,IBFILTER,IBCBK,1)
"RTN","IBCU71",75,0)
 Q
"RTN","IBCU71",76,0)
 ;
"RTN","IBCU71",77,0)
PRCDT(IBIFN,ARR) ; return array of bill's procedures in date then code order
"RTN","IBCU71",78,0)
 ; returns    ARR(DATE, NAME, CPIFN) = 399.0304 node
"RTN","IBCU71",79,0)
 N IBI,IBX,IBNAME K ARR
"RTN","IBCU71",80,0)
 S IBI=0 F  S IBI=$O(^DGCR(399,+$G(IBIFN),"CP",IBI)) Q:'IBI  D
"RTN","IBCU71",81,0)
 . S IBX=$G(^DGCR(399,IBIFN,"CP",IBI,0))
"RTN","IBCU71",82,0)
 . S IBNAME=$P($$PRCNM^IBCSCH1($P(IBX,U,1)),U,1)_" "
"RTN","IBCU71",83,0)
 . S ARR($P(IBX,U,2),IBNAME,IBI)=IBX
"RTN","IBCU71",84,0)
 Q
"RTN","IBCU71",85,0)
 ;
"RTN","IBCU71",86,0)
PRCDIV(IBIFN) ; change Bills Default Division (399,.22) to reflect care provided
"RTN","IBCU71",87,0)
 ; - set Bill Division to the first Procedures Division (399,304,5), if defined
"RTN","IBCU71",88,0)
 ; - or else if bill is an inpatient bill then get the Division of the Ward the patient was Admitted to
"RTN","IBCU71",89,0)
 ; return null if no change or 'new division ifn^message'
"RTN","IBCU71",90,0)
 ;
"RTN","IBCU71",91,0)
 N IB0,IBCPT,IBPDIV,IBWRD,IBX,DIC,DIE,DA,DR,X,Y S IBX="",IBPDIV=0
"RTN","IBCU71",92,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0))
"RTN","IBCU71",93,0)
 ;
"RTN","IBCU71",94,0)
 I +$G(IBIFN) S IBCPT=$O(^DGCR(399,IBIFN,"CP",0)) I +IBCPT D  ; if CPT division defined, use it
"RTN","IBCU71",95,0)
 . S IBCPT=$G(^DGCR(399,IBIFN,"CP",IBCPT,0)) S IBPDIV=+$P(IBCPT,U,6)
"RTN","IBCU71",96,0)
 ;
"RTN","IBCU71",97,0)
 I 'IBPDIV,+$P(IB0,U,8) D  ; for inpatient, get Ward Division
"RTN","IBCU71",98,0)
 . S IBWRD=$G(^DGPT(+$P(IB0,U,8),535,1,0)) S IBPDIV=+$P($G(^DIC(42,+$P(IBWRD,U,6),0)),U,11)
"RTN","IBCU71",99,0)
 ;
"RTN","IBCU71",100,0)
 I +IBPDIV,+$P(IB0,U,22)'=+IBPDIV D
"RTN","IBCU71",101,0)
 . S DIE="^DGCR(399,",DA=IBIFN,DR=".22////"_+IBPDIV D ^DIE K DIE,DR,DA,X,Y
"RTN","IBCU71",102,0)
 . S IBX=+IBPDIV_"^Bill Division Changed to "_$P($G(^DG(40.8,+IBPDIV,0)),U,1)
"RTN","IBCU71",103,0)
 Q IBX
"RTN","IBCU71",104,0)
 ;
"RTN","IBCU71",105,0)
DVTYP(IBIFN) ; reset Bill Charge Type (399, .27) based on Bill Division (399, .22)
"RTN","IBCU71",106,0)
 ; if bill division is type 3 - Freestanding then reset Charge Type to 2 - Professional
"RTN","IBCU71",107,0)
 ; with RC 2.0+ Type 3 sites have only professional charges, start date of bill must be on/after beginning of RC 2.0
"RTN","IBCU71",108,0)
 N IB0,IBDV,IBCHGTYP,IBDVTYP,DIC,DIE,DA,DR,X,Y
"RTN","IBCU71",109,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),IBDV=$P(IB0,U,22),IBCHGTYP=$P(IB0,U,27)
"RTN","IBCU71",110,0)
 I +$G(^DGCR(399,+$G(IBIFN),"U"))<$$VERSDT^IBCRU8(2) G DVTYPQ
"RTN","IBCU71",111,0)
 I +IBDV,+IBCHGTYP S IBDVTYP=$$RCDV^IBCRU8(+IBDV) I +$P(IBDVTYP,U,3)=3,IBCHGTYP'=2 D
"RTN","IBCU71",112,0)
 . S DIE="^DGCR(399,",DA=IBIFN,DR=".27////"_2 D ^DIE K DIE,DR,DA,X,Y
"RTN","IBCU71",113,0)
 . S IBCHGTYP="2^Bill Charge Type Changed to Professional"
"RTN","IBCU71",114,0)
DVTYPQ Q IBCHGTYP
"RTN","IBCVA1")
0^89^B20900613^B20905711
"RTN","IBCVA1",1,0)
IBCVA1 ;ALB/MJB - SET MCCR VARIABLES CONT. ;09 JUN 88 14:49
"RTN","IBCVA1",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,109,51,137,210,349**;21-MAR-94;Build 46
"RTN","IBCVA1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCVA1",4,0)
 ;
"RTN","IBCVA1",5,0)
 ;MAP TO DGCRVA1
"RTN","IBCVA1",6,0)
 ;
"RTN","IBCVA1",7,0)
 Q
"RTN","IBCVA1",8,0)
4 ;Event variables set
"RTN","IBCVA1",9,0)
 D 1234^IBCVA
"RTN","IBCVA1",10,0)
 Q:'$D(IBBT)
"RTN","IBCVA1",11,0)
EN4 I $E(IBBT,2)>2 G OCC
"RTN","IBCVA1",12,0)
INP D INP^IBCSC4
"RTN","IBCVA1",13,0)
 ;NOTE (12/1/93): IBDI AND IBDIN ARRAYS WERE NOT UPDATED WITH NEW DX LOCATIONS BECAUSE THEY DO NOT SEEM TO BE USED ANYWHERE
"RTN","IBCVA1",14,0)
OCC I $D(^DGCR(399,IBIFN,"C")) D
"RTN","IBCVA1",15,0)
 . N IBDATE,IBC
"RTN","IBCVA1",16,0)
 . S IBDATE=$$BDATE^IBACSV(IBIFN) ; The date of service
"RTN","IBCVA1",17,0)
 . S IBC=^DGCR(399,IBIFN,"C")
"RTN","IBCVA1",18,0)
 . F I=14:1:18 S IBDI(I)=$P(IBC,U,I) Q:IBDI(I)=""  D
"RTN","IBCVA1",19,0)
 .. S IBDIN(I)=IBDI(I)
"RTN","IBCVA1",20,0)
 .. S IBDI(I)=$P($$ICD9^IBACSV(IBDI(I),IBDATE),U,3)
"RTN","IBCVA1",21,0)
 K IBO S:'$D(^DGCR(399,IBIFN,"OC")) IBO="" G:$D(IBO) COND S IBNO=$P(^DGCR(399,IBIFN,"OC",0),U,3),IBOC=0
"RTN","IBCVA1",22,0)
 S C=0 F I=0:1 S IBOC=$O(^DGCR(399,IBIFN,"OC",I)) Q:IBOC'?1N.N!(C=5)  I $D(^DGCR(399,IBIFN,"OC",I)) S C=C+1 D SOCC
"RTN","IBCVA1",23,0)
 ;
"RTN","IBCVA1",24,0)
COND S IBCC=0,D=0 F I=0:0 S IBCC=$O(^DGCR(399,IBIFN,"CC",IBCC)) Q:IBCC=""!(D=5)  I $D(^DGCR(399,IBIFN,"CC",IBCC,0)) S D=D+1,IBCC(D)=$P(^DGCR(399,IBIFN,"CC",IBCC,0),"^",1) D CONDN
"RTN","IBCVA1",25,0)
 ;
"RTN","IBCVA1",26,0)
 D PROC
"RTN","IBCVA1",27,0)
 ;
"RTN","IBCVA1",28,0)
 ;Q:'$D(^DGCR(399,IBIFN,"C"))  F I=0,"C" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCVA1",29,0)
 ;I $P(IB(0),"^",9)=4 F I=1:1:3 S:$P(IB("C"),"^",I)'="" IBCPT(I)=$P(IB("C"),"^",I)
"RTN","IBCVA1",30,0)
 ;I $P(IB(0),"^",9)=9 F I=4:1:6 S:$P(IB("C"),"^",I)'="" IBICD(I)=$P(IB("C"),"^",I)
"RTN","IBCVA1",31,0)
 ;I $P(IB(0),"^",9)=5 F I=7:1:9 S:$P(IB("C"),"^",I)]"" IBHC(I)=$P(IB("C"),"^",I),IBHCN(I)=$S($D(^ICPT(IBHC(I),0)):$P(^(0),"^",1),1:"")
"RTN","IBCVA1",32,0)
 Q
"RTN","IBCVA1",33,0)
 ;
"RTN","IBCVA1",34,0)
5 ;Billing variables set
"RTN","IBCVA1",35,0)
 D 123^IBCVA
"RTN","IBCVA1",36,0)
EN5 I '$D(IBIP) G REVC
"RTN","IBCVA1",37,0)
 S IBLS=$S($P(IB("U"),U,15)]"":$P(IB("U"),U,15),1:0),IBBS=$S($P(IB("U"),U,11)]"":$P(IB("U"),U,11),1:IBU) I IBBS'=IBU S IBBS=$P(^DGCR(399.1,IBBS,0),"^",1)
"RTN","IBCVA1",38,0)
REVC S IBREV=0 F I=1:1 S IBREV=$O(^DGCR(399,IBIFN,"RC",IBREV)) Q:IBREV'?1.N  S IBREVC(I)=^DGCR(399,IBIFN,"RC",IBREV,0)
"RTN","IBCVA1",39,0)
 S IBTF=$P(IB(0),U,26),IBTF=$S(IBTF=1:"ADMIT THRU DISCHARGE",IBTF=2:"FIRST CLAIM",IBTF=3:"CONTINUING CLAIM",IBTF=4:"LAST CLAIM",IBTF=5:"LATE CHARGE(S)",IBTF=6:"ADJUSTMENT",IBTF=7:"REPLACEMENT",IBTF=8:"CANCEL",IBTF=0:"ZERO CLAIM",1:"")
"RTN","IBCVA1",40,0)
 S IBBTP1=$E($$EXPAND^IBTRE(399,.24,$P(IB(0),U,24)),1,29)
"RTN","IBCVA1",41,0)
 S IBBTP2=$E($$EXPAND^IBTRE(399,.25,+$P(IB(0),U,25)),1,26)
"RTN","IBCVA1",42,0)
 S IBBTP3=IBTF
"RTN","IBCVA1",43,0)
 Q
"RTN","IBCVA1",44,0)
SOCC S IBO(C)=$P(^DGCR(399,IBIFN,"OC",IBOC,0),"^",1),IBO(C)=$P(^DGCR(399.1,IBO(C),0),"^",2),IBOCN(C)=$P(^(0),"^",1)
"RTN","IBCVA1",45,0)
 S IBOCD(C)=$P(^DGCR(399,IBIFN,"OC",IBOC,0),"^",2),IBOCD2(C)=$P(^DGCR(399,IBIFN,"OC",IBOC,0),"^",4) Q
"RTN","IBCVA1",46,0)
 Q
"RTN","IBCVA1",47,0)
 ;
"RTN","IBCVA1",48,0)
CONDN S IBCC(D)=$P($G(^DGCR(399.1,+IBCC(D),0)),U,2),IBCCN(D)=$P($G(^(0)),U,1)
"RTN","IBCVA1",49,0)
 Q
"RTN","IBCVA1",50,0)
 ;
"RTN","IBCVA1",51,0)
PROCX ; Entrypoint from output formatter
"RTN","IBCVA1",52,0)
 N IBIFN,IBZ
"RTN","IBCVA1",53,0)
 S IBIFN=$G(IBXIEN)
"RTN","IBCVA1",54,0)
 D PROC
"RTN","IBCVA1",55,0)
 D F^IBCEF("N-PROCEDURE CODING METHD","IBZ",,IBIFN)
"RTN","IBCVA1",56,0)
 I IBZ="" K IBPROC S IBPROC=0 Q
"RTN","IBCVA1",57,0)
 S Z=0 F  S Z=$O(IBPROC(Z)) Q:'Z  I $P(IBPROC(Z),U)'[$S(IBZ=9:";ICD",1:";ICP") K IBPROC(Z) S IBPROC=IBPROC-1
"RTN","IBCVA1",58,0)
 Q
"RTN","IBCVA1",59,0)
 ;
"RTN","IBCVA1",60,0)
PROC ;  -build array of procedures in IBPROC
"RTN","IBCVA1",61,0)
 N IBHCFA,IBMOD,I,J,X,X1
"RTN","IBCVA1",62,0)
 S IBHCFA=($$FT^IBCEF(IBIFN)=2)
"RTN","IBCVA1",63,0)
 K IBPROC S IBPROC=0
"RTN","IBCVA1",64,0)
 I '$D(IB("C")) S IB("C")=$G(^DGCR(399,IBIFN,"C"))
"RTN","IBCVA1",65,0)
 S:'$D(IB(0)) IB(0)=$G(^DGCR(399,IBIFN,0)) S J=$P($G(IB(0)),"^",9)
"RTN","IBCVA1",66,0)
 I IB("C")'="" F I=1:1:9 I $P(IB("C"),"^",I)'="" S IBPROC(I)=$P(IB("C"),"^",I)_";"_$S(I<4:"ICPT(",I<7:"ICD0(",1:"ICPT(")_"^"_$P(IB("C"),"^",$S(I#3:10+(I#3),1:13)),IBPROC=IBPROC+1
"RTN","IBCVA1",67,0)
 I $D(^DGCR(399,IBIFN,"CP")) S X=0 F I=100:1 S X=$O(^DGCR(399,IBIFN,"CP",X)) Q:'X  S X1=$G(^(X,0)) Q:'X1  D
"RTN","IBCVA1",68,0)
 . S IBMOD=$$GETMOD^IBEFUNC(IBIFN,X)
"RTN","IBCVA1",69,0)
 . I $TR(IBMOD,",")'="" S $P(X1,U,15)=IBMOD
"RTN","IBCVA1",70,0)
 . S IBPROC($S($P(X1,"^",4):$P(X1,"^",4),1:I))=X1
"RTN","IBCVA1",71,0)
 . I IBHCFA S IBPROC($S($P(X1,"^",4):$P(X1,"^",4),1:I),"AUX")=$G(^DGCR(399,IBIFN,"CP",X,"AUX"))
"RTN","IBCVA1",72,0)
 . S IBPROC=IBPROC+1
"RTN","IBCVA1",73,0)
PROCQ Q
"RTN","IBCVA1",74,0)
 ;
"RTN","IBCVA1",75,0)
ALLPROC(IBIFN,IBPROC) ; Returns all procedures for bill IBIFN in array IBPROC
"RTN","IBCVA1",76,0)
 ;  IBPROC = # of procedures found
"RTN","IBCVA1",77,0)
 ;  IBPROC(prnt order)=0-node of 'CP' entry with piece 15 = the
"RTN","IBCVA1",78,0)
 ;                      modifiers separated by commas
"RTN","IBCVA1",79,0)
 ;  IBPROC(prnt order,"AUX")="AUX" node of 'CP' entry for CMS-1500 forms
"RTN","IBCVA1",80,0)
 ; Pass IBPROC by reference
"RTN","IBCVA1",81,0)
 ;
"RTN","IBCVA1",82,0)
 N IB
"RTN","IBCVA1",83,0)
 K IBPROC
"RTN","IBCVA1",84,0)
 D PROC
"RTN","IBCVA1",85,0)
 Q
"RTN","IBCVA1",86,0)
 ;
"RTN","IBCVA1",87,0)
VC ;returns a bills value codes, IBIFN must be defined: IBVC=count,IBVC(VIFN)=CODE ^ NAME ^ VALUE ^ $$?
"RTN","IBCVA1",88,0)
 N IBY,IBX,IBZ S IBVC=0 Q:'$D(^DGCR(399,IBIFN,"CV"))
"RTN","IBCVA1",89,0)
 S IBX=0 F  S IBX=$O(^DGCR(399,IBIFN,"CV",IBX)) Q:'IBX  S IBY=$G(^DGCR(399,IBIFN,"CV",IBX,0)) I +IBY D
"RTN","IBCVA1",90,0)
 . S IBVC=IBVC+1,IBZ=$G(^DGCR(399.1,+IBY,0)) Q:IBZ=""
"RTN","IBCVA1",91,0)
 . S IBVC(+IBY)=$P(IBZ,U,2)_U_$P(IBZ,U,1)_U_$S(+$P(IBZ,U,12):$J($P(IBY,U,2),0,2),1:$P(IBY,U,2))_U_$P(IBZ,U,12)
"RTN","IBCVA1",92,0)
 Q
"RTN","IBCVA1",93,0)
 ;
"RTN","IBCVA1",94,0)
SETMODS(IBMOD,IBZ,IBXSAVE) ; Set modifiers into IBXSAVE
"RTN","IBCVA1",95,0)
 ; IBMOD = the list of modifier iens for the proc, separated by commas
"RTN","IBCVA1",96,0)
 ; IBZ = the line counter to return the data in
"RTN","IBCVA1",97,0)
 ;
"RTN","IBCVA1",98,0)
 ; Output Formatter utility
"RTN","IBCVA1",99,0)
 ;
"RTN","IBCVA1",100,0)
 ; Variables passed by reference, returned
"RTN","IBCVA1",101,0)
 ; IBXSAVE("PROCMODS",IBZ) = Formatter 'save' array for modifiers
"RTN","IBCVA1",102,0)
 ;
"RTN","IBCVA1",103,0)
 N Q,IBQ
"RTN","IBCVA1",104,0)
 I $L(IBMOD) F Q=1:1:$L(IBMOD,",") I $P(IBMOD,",",Q)'="" D
"RTN","IBCVA1",105,0)
 . S IBQ=$$MOD^ICPTMOD(+$P(IBMOD,",",Q),"I")
"RTN","IBCVA1",106,0)
 . S IBXSAVE("PROCMODS",IBZ)=$G(IBXSAVE("PROCMODS",IBZ))_$P(IBQ,U,2)_","
"RTN","IBCVA1",107,0)
 S Q=$L($G(IBXSAVE("PROCMODS",IBZ)))
"RTN","IBCVA1",108,0)
 I 'Q S IBXSAVE("PROCMODS",IBZ)=""
"RTN","IBCVA1",109,0)
 I Q S IBXSAVE("PROCMODS",IBZ)=$E(IBXSAVE("PROCMODS",IBZ),1,Q-1)
"RTN","IBCVA1",110,0)
 Q
"RTN","IBCVA1",111,0)
 ;
"RTN","IBJPS")
0^7^B5288376^B5289687
"RTN","IBJPS",1,0)
IBJPS ;ALB/MAF,ARH - IBSP IB SITE PARAMETER SCREEN ;22-DEC-1995
"RTN","IBJPS",2,0)
 ;;2.0;INTEGRATED BILLING;**39,52,70,115,143,51,137,161,155,320,348,349**;21-MAR-94;Build 46
"RTN","IBJPS",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJPS",4,0)
 ;
"RTN","IBJPS",5,0)
EN ; -- main entry point for IBJP IB SITE PARAMETERS, display IB site parameters
"RTN","IBJPS",6,0)
 D EN^VALM("IBJP IB SITE PARAMETERS")
"RTN","IBJPS",7,0)
 Q
"RTN","IBJPS",8,0)
 ;
"RTN","IBJPS",9,0)
HDR ; -- header code
"RTN","IBJPS",10,0)
 S VALMHDR(1)="Only authorized persons may edit this data."
"RTN","IBJPS",11,0)
 Q
"RTN","IBJPS",12,0)
 ;
"RTN","IBJPS",13,0)
INIT ; -- init variables and list array
"RTN","IBJPS",14,0)
 K ^TMP("IBJPS",$J),^TMP("IBJPSAX",$J)
"RTN","IBJPS",15,0)
 D BLD^IBJPS1
"RTN","IBJPS",16,0)
 Q
"RTN","IBJPS",17,0)
 ;
"RTN","IBJPS",18,0)
HELP ; -- help code
"RTN","IBJPS",19,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJPS",20,0)
 Q
"RTN","IBJPS",21,0)
 ;
"RTN","IBJPS",22,0)
EXIT ; -- exit code
"RTN","IBJPS",23,0)
 K ^TMP("IBJPS",$J),^TMP("IBJPSAX",$J)
"RTN","IBJPS",24,0)
 D CLEAR^VALM1
"RTN","IBJPS",25,0)
 Q
"RTN","IBJPS",26,0)
 ;
"RTN","IBJPS",27,0)
NXEDIT ; -- IBJP IB SITE PARAMETER EDIT ACTION (EP): Select data set to edit, do edit
"RTN","IBJPS",28,0)
 N VALMY,IBSELN,IBSET
"RTN","IBJPS",29,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBJPS",30,0)
 I $D(VALMY) S IBSELN=0 F  S IBSELN=$O(VALMY(IBSELN)) Q:'IBSELN  D
"RTN","IBJPS",31,0)
 . S IBSET=$P($G(^TMP("IBJPSAX",$J,IBSELN)),U,1) Q:'IBSET
"RTN","IBJPS",32,0)
 . D EDIT(IBSET)
"RTN","IBJPS",33,0)
 S VALMBCK="R"
"RTN","IBJPS",34,0)
 Q
"RTN","IBJPS",35,0)
 ;
"RTN","IBJPS",36,0)
EDIT(IBSET) ; edit IB Site Parameters
"RTN","IBJPS",37,0)
 D FULL^VALM1
"RTN","IBJPS",38,0)
 I IBSET'="" S DR=$P($T(@IBSET),";;",2,999)
"RTN","IBJPS",39,0)
 I DR'="" S DIE="^IBE(350.9,",DA=1 D ^DIE K DA,DR,DIE,DIC,X,Y
"RTN","IBJPS",40,0)
 D INIT^IBJPS S VALMBCK="R"
"RTN","IBJPS",41,0)
 Q
"RTN","IBJPS",42,0)
 ;
"RTN","IBJPS",43,0)
1 ;;.09;.13;.14
"RTN","IBJPS",44,0)
2 ;;1.2;.15;.11;.12;7.04
"RTN","IBJPS",45,0)
3 ;;1.09;1.07;2.07
"RTN","IBJPS",46,0)
4 ;;4.04;6.25;6.24
"RTN","IBJPS",47,0)
5 ;;.02;1.14;1.25;1.08
"RTN","IBJPS",48,0)
6 ;;1.23;1.16;1.22;1.19;1.15;1.17
"RTN","IBJPS",49,0)
7 ;;1.33;1.32;1.31;1.27
"RTN","IBJPS",50,0)
8 ;;1.29;1.3;1.18;1.28
"RTN","IBJPS",51,0)
9 ;;1.01;1.02;1.05;1.04
"RTN","IBJPS",52,0)
10 ;;2.12;2.1;2.02;2.03;2.04;2.05;2.06;2.01
"RTN","IBJPS",53,0)
11 ;;2.08;2.09
"RTN","IBJPS",54,0)
12 ;;9.01;9.02;9.03;9.11;9.12;9.13;9.14;9.15
"RTN","IBJPS",55,0)
13 ;;10.02;10.03;10.04;10.05;D INIT^IBATFILE
"RTN","IBJPS",56,0)
14 ;;2.11;8.01;8.09;8.03;8.06;8.04;8.07;8.02;8.12T;8.11T
"RTN","IBJPS",57,0)
15 ;;50.01;50.02;50.05;50.06;50.03;50.04;50.07
"RTN","IBJPS",58,0)
 ;
"RTN","IBJPS",59,0)
 ;
"RTN","IBJPS",60,0)
ADD(IBLN,LNG,ARR) ; output array of address in X, line length=LNG
"RTN","IBJPS",61,0)
 N IBCNT,IBI,IBY,IBX,IBZ K ARR S IBCNT=1
"RTN","IBJPS",62,0)
 F IBI=2:1:4 S IBY=$P(IBLN,U,IBI) I IBY'="" D  S ARR(IBCNT)=IBY
"RTN","IBJPS",63,0)
 . S IBX=$G(ARR(IBCNT)) I IBI=4 S IBY=$P($G(^DIC(5,+IBY,0)),U,2)_" "_$P(IBLN,U,5)
"RTN","IBJPS",64,0)
 . S IBZ=$S(IBX'="":IBX_", ",1:"")_IBY I $L(IBZ)'>LNG S IBY=IBZ Q
"RTN","IBJPS",65,0)
 . S IBCNT=IBCNT+1
"RTN","IBJPS",66,0)
 Q
"RTN","IBJPS2")
0^8^B48618964^B48130321
"RTN","IBJPS2",1,0)
IBJPS2 ;ALB/MAF,ARH - IBSP IB SITE PARAMETER BUILD (cont) ;22-DEC-1995
"RTN","IBJPS2",2,0)
 ;;2.0;INTEGRATED BILLING;**39,52,115,143,51,137,161,155,320,348,349**;21-MAR-94;Build 46
"RTN","IBJPS2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJPS2",4,0)
 ;
"RTN","IBJPS2",5,0)
BLD2 ; - continue build screen array for IB parameters
"RTN","IBJPS2",6,0)
 ;
"RTN","IBJPS2",7,0)
 N Z,Z0
"RTN","IBJPS2",8,0)
 D RIGHT(1,1,1) ; - facility/med center  (new line for each)
"RTN","IBJPS2",9,0)
 S IBLN=$$SET("Medical Center",$$EXSET^IBJU1($P(IBPD0,U,2),350.9,.02),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",10,0)
 S IBLN=$$SET("MAS Service",$$EXSET^IBJU1($P(IBPD1,U,14),350.9,1.14),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",11,0)
 ;
"RTN","IBJPS2",12,0)
 D LEFT(2)
"RTN","IBJPS2",13,0)
 S IBLN=$$SET("Default Division",$$EXSET^IBJU1($P(IBPD1,U,25),350.9,1.25),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",14,0)
 S IBLN=$$SET("Billing Supervisor",$$EXSET^IBJU1($P(IBPD1,U,8),350.9,1.08),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",15,0)
 ;
"RTN","IBJPS2",16,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",17,0)
 S IBLN=$$SET("Initiator Authorize",$$YN(+$P(IBPD1,U,23)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",18,0)
 S IBLN=$$SET("Ask HINQ in MCCR",$$YN(+$P(IBPD1,U,16)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",19,0)
 S IBLN=$$SET("Multiple Form Types",$$YN(+$P(IBPD1,U,22)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",20,0)
 ;
"RTN","IBJPS2",21,0)
 D LEFT(2)
"RTN","IBJPS2",22,0)
 S IBLN=$$SET("Xfer Proc to Sched",$$YN(+$P(IBPD1,U,19)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",23,0)
 S IBLN=$$SET("Use Non-PTF Codes",$$YN(+$P(IBPD1,U,15)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",24,0)
 S IBLN=$$SET("Use OP CPT screen",$$YN(+$P(IBPD1,U,17)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",25,0)
 ;
"RTN","IBJPS2",26,0)
 ; IB patch 349 for UB-04 claim form and parameters
"RTN","IBJPS2",27,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",28,0)
 S IBLN=$$SET("UB-04 Print IDs",$$EXSET^IBJU1($P(IBPD1,U,33),350.9,1.33),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",29,0)
 S IBLN=$$SET("CMS-1500 Print IDs",$$EXSET^IBJU1($P(IBPD1,U,32),350.9,1.32),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",30,0)
 ;
"RTN","IBJPS2",31,0)
 D LEFT(2)
"RTN","IBJPS2",32,0)
 S IBLN=$$SET("UB-04 Address Col",$P(IBPD1,U,31),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",33,0)
 S IBLN=$$SET("CMS-1500 Addr Col",$P(IBPD1,U,27),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",34,0)
 ;
"RTN","IBJPS2",35,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",36,0)
 S IBLN=$$SET("Default RX DX Cd",$$EXSET^IBJU1($P(IBPD1,U,29),350.9,1.29),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",37,0)
 S IBLN=$$SET("Default RX CPT Cd",$$EXSET^IBJU1($P(IBPD1,U,30),350.9,1.30),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",38,0)
 ;
"RTN","IBJPS2",39,0)
 D LEFT(2)
"RTN","IBJPS2",40,0)
 S IBLN=$$SET("Default ASC Rev Cd",$$EXSET^IBJU1($P(IBPD1,U,18),350.9,1.18),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",41,0)
 S IBLN=$$SET("Default RX Rev Cd",$$EXSET^IBJU1($P(IBPD1,U,28),350.9,1.28),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",42,0)
 ;
"RTN","IBJPS2",43,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",44,0)
 S IBLN=$$SET("Bill Signer Name","<No longer used>",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",45,0)
 S IBLN=$$SET("Bill Signer Title","<No longer used>",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",46,0)
 ;
"RTN","IBJPS2",47,0)
 D LEFT(2)
"RTN","IBJPS2",48,0)
 S IBLN=$$SET("Federal Tax #",$P(IBPD1,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",49,0)
 ;
"RTN","IBJPS2",50,0)
 D RIGHT(3,"","")
"RTN","IBJPS2",51,0)
 S IBLN=$$SET("Remark on Each Bill",$P(IBPD1,U,4),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",52,0)
 ;
"RTN","IBJPS2",53,0)
 D RIGHT(3,1,1) ; - Remittance/Agent Cashier Address
"RTN","IBJPS2",54,0)
 S IBLN=$$SET("Billing Facility is Another Facility",$$EXPAND^IBTRE(350.9,2.12,+$P(IBPD2,U,12)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",55,0)
 S IBLN=$$SET("Billing Facility Name",$P(IBPD2,U,10),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",56,0)
 D ADD^IBJPS(IBPD2,IBSW(3),.IBX) D  K IBX
"RTN","IBJPS2",57,0)
 . S IBT="Remittance Address",IBX=0 F  S IBX=$O(IBX(IBX)) Q:'IBX  D
"RTN","IBJPS2",58,0)
 .. S IBLN=$$SET(IBT,IBX(IBX),IBLN,IBLR,IBSEL),IBT=""
"RTN","IBJPS2",59,0)
 S IBLN=$$SET("Phone",$P(IBPD2,U,6),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",60,0)
 ;
"RTN","IBJPS2",61,0)
 D RIGHT(3,1,1)
"RTN","IBJPS2",62,0)
 S IBLN=$$SET("Inpt Health Summary",$$EXSET^IBJU1($P(IBPD2,U,8),350.9,2.08),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",63,0)
 S IBLN=$$SET("Opt Health Summary",$$EXSET^IBJU1($P(IBPD2,U,9),350.9,2.09),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",64,0)
 ;
"RTN","IBJPS2",65,0)
 D RIGHT(5,1,1)
"RTN","IBJPS2",66,0)
 S IBLN=$$SET("Rx Billing Port",$P(IBPD9,U),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",67,0)
 S IBLN=$$SET("AWP Update Port",$P(IBPD9,U,2),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",68,0)
 S IBLN=$$SET("TCP/IP Address",$P(IBPD9,U,3),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",69,0)
 S IBLN=$$SET("Task UCI/VOL",$P(IBPD9,U,11),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",70,0)
 S IBLN=$$SET("AWP Charge Set",$$EXSET^IBJU1($P(IBPD9,U,12),350.9,9.12),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",71,0)
 S IBLN=$$SET("Prescriber ID",$P(IBPD9,U,13),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",72,0)
 S IBLN=$$SET("DEA vs Presc.ID",$$YN($P(IBPD9,U,14)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",73,0)
 S IBLN=$$SET("Calc comp code",$$YN($P(IBPD9,U,15)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",74,0)
 ;
"RTN","IBJPS2",75,0)
 D LEFT(6)
"RTN","IBJPS2",76,0)
 S IBLN=$$SET("Prim Billing Task",$P(IBPD9,U,4),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",77,0)
 S IBLN=$$SET("Sec Billing Task",$P(IBPD9,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",78,0)
 S IBLN=$$SET("Prim AWP Upd Task",$P(IBPD9,U,6),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",79,0)
 S IBLN=$$SET("Sec AWP Upd Task",$P(IBPD9,U,7),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",80,0)
 S IBLN=$$SET("Task Started",$$DAT1^IBOUTL($P(IBPD9,U,8),1),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",81,0)
 S IBLN=$$SET("Task Last Ran",$$DAT1^IBOUTL($P(IBPD9,U,9),1),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",82,0)
 S IBLN=$$SET("Shutdown Tasks?",$$YN($P(IBPD9,U,10)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",83,0)
 ;
"RTN","IBJPS2",84,0)
 ; transfer pricing
"RTN","IBJPS2",85,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",86,0)
 S IBLN=$$SET("Inpatient TP Active ",$$YN(+$P(IBPD10,U,2)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",87,0)
 S IBLN=$$SET("Outpatient TP Active",$$YN(+$P(IBPD10,U,3)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",88,0)
 S IBLN=$$SET("Pharmacy TP Active  ",$$YN(+$P(IBPD10,U,4)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",89,0)
 S IBLN=$$SET("Prosthetic TP Active",$$YN(+$P(IBPD10,U,5)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",90,0)
 ;
"RTN","IBJPS2",91,0)
 ; EDI/MRA parameters
"RTN","IBJPS2",92,0)
 D RIGHT(7,1,1)
"RTN","IBJPS2",93,0)
 N IBZ S IBZ=$P(IBPD8,U,3)
"RTN","IBJPS2",94,0)
 S IBLN=$$SET(" EDI/MRA Activated",$$EXSET^IBJU1(+$P(IBPD8,U,10),350.9,8.1),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",95,0)
 S IBLN=$$SET(" EDI Contact Phone",$P(IBPD2,U,11),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",96,0)
 S IBLN=$$SET(" EDI 837 Live Transmit Queue",$P(IBPD8,U),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",97,0)
 S IBLN=$$SET(" EDI 837 Test Transmit Queue",$P(IBPD8,U,9),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",98,0)
 S IBLN=$$SET(" Auto-Txmt Bill Frequency",$S(IBZ:"Every"_$S(IBZ>1:" "_$P(IBPD8,U,3),1:""),1:"")_$S(IBZ:" Day"_$S(IBZ=1:"",1:"s"),1:"Never Run"),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",99,0)
 S IBLN=$$SET(" Hours To Auto-Transmit",$P(IBPD8,U,6),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",100,0)
 S IBLN=$$SET(" Max # Bills Per Batch",$P(IBPD8,U,4),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",101,0)
 S IBLN=$$SET(" Only Allow 1 Ins Co/Claim Batch?",$$EXPAND^IBTRE(350.9,8.07,+$P(IBPD8,U,7)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",102,0)
 S IBLN=$$SET(" Last Auto-Txmt Run Date",$$DATE^IBJU1($P(IBPD8,U,5)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",103,0)
 S IBLN=$$SET(" Days To Wait To Purge Msgs",$P(IBPD8,U,2),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",104,0)
 S IBLN=$$SET(" Allow MRA Processing?",$$YN(+$P(IBPD8,U,12)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",105,0)
 S IBLN=$$SET(" Enable Automatic MRA Processing?",$$YN(+$P(IBPD8,U,11)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",106,0)
 ;
"RTN","IBJPS2",107,0)
 ; Ingenix ClaimsManager Information
"RTN","IBJPS2",108,0)
 D RIGHT(9,1,1)
"RTN","IBJPS2",109,0)
 S IBLN=$$SET("Are we using ClaimsManager?",$$YN(+$P(IBPD50,U,1)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",110,0)
 S IBLN=$$SET("Is ClaimsManager working OK?",$$YN(+$P(IBPD50,U,2)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",111,0)
 S IBLN=$$SET("ClaimsManager TCP/IP Address",$P(IBPD50,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",112,0)
 S IBCISOCK=$O(^IBE(350.9,1,50.06,"B",""))
"RTN","IBJPS2",113,0)
 S IBLN=$$SET("ClaimsManager TCP/IP Ports",IBCISOCK,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",114,0)
 F  S IBCISOCK=$O(^IBE(350.9,1,50.06,"B",IBCISOCK)) Q:IBCISOCK=""  D
"RTN","IBJPS2",115,0)
 . S IBLN=$$SET("",IBCISOCK,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",116,0)
 . Q
"RTN","IBJPS2",117,0)
 S IBLN=$$SET("General Error MailGroup",$$EXSET^IBJU1($P(IBPD50,U,3),350.9,50.03),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",118,0)
 S IBLN=$$SET("Communication Error MailGroup",$$EXSET^IBJU1($P(IBPD50,U,4),350.9,50.04),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",119,0)
 S IBCIMFLG=$$EXTERNAL^DILFD(350.9,50.07,"",$P(IBPD50,U,7))
"RTN","IBJPS2",120,0)
 I IBCIMFLG="" S IBCIMFLG="PRIORITY"
"RTN","IBJPS2",121,0)
 S IBLN=$$SET("MailMan Messages",IBCIMFLG,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",122,0)
 ;
"RTN","IBJPS2",123,0)
 Q
"RTN","IBJPS2",124,0)
 ;
"RTN","IBJPS2",125,0)
SET(TTL,DATA,LN,LR,SEL,HDR) ;
"RTN","IBJPS2",126,0)
 N IBY,IBX,IBC S IBC=": " I TTL="" S IBC="  "
"RTN","IBJPS2",127,0)
 S IBY=TTL_$J("",(IBTW(LR)-$L(TTL)-2))_$S('$G(HDR):IBC_DATA,1:""),IBX=$G(^TMP("IBJPS",$J,LN,0))
"RTN","IBJPS2",128,0)
 S IBX=$$SETSTR^VALM1(IBY,IBX,IBTC(LR),(IBTW(LR)+IBSW(LR)))
"RTN","IBJPS2",129,0)
 D SET1(IBX,LN,SEL)
"RTN","IBJPS2",130,0)
 S LN=LN+1
"RTN","IBJPS2",131,0)
 Q LN
"RTN","IBJPS2",132,0)
 ;
"RTN","IBJPS2",133,0)
SET1(STR,LN,SEL,HI) ; set up TMP array with screen data
"RTN","IBJPS2",134,0)
 S ^TMP("IBJPS",$J,LN,0)=STR
"RTN","IBJPS2",135,0)
 S ^TMP("IBJPS",$J,"IDX",LN,SEL)=""
"RTN","IBJPS2",136,0)
 S ^TMP("IBJPSAX",$J,SEL)=SEL
"RTN","IBJPS2",137,0)
 I $G(HI)'="" D CNTRL^VALM10(LN,1,4,IOINHI,IOINORM)
"RTN","IBJPS2",138,0)
 ;I $G(RV) D CNTRL^VALM10(LN,6,19,IOUON,IOUOFF)
"RTN","IBJPS2",139,0)
 Q
"RTN","IBJPS2",140,0)
 ;
"RTN","IBJPS2",141,0)
YN(X) Q $S(+X:"YES",1:"NO")
"RTN","IBJPS2",142,0)
 ;
"RTN","IBJPS2",143,0)
RIGHT(LR,SEL,BL) ; - reset control variables for right side of screen
"RTN","IBJPS2",144,0)
 S IBLN=$S(IBLN>IBGRPE:IBLN,1:IBGRPE) I $G(BL) S IBLN=$$SET("","",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",145,0)
 S IBLR=$G(LR),IBGRPB=IBLN I +$G(SEL) S IBSEL=IBSEL+1 D SET1("["_IBSEL_"]",IBLN,IBSEL,1)
"RTN","IBJPS2",146,0)
 Q
"RTN","IBJPS2",147,0)
 ;
"RTN","IBJPS2",148,0)
LEFT(LR) ; - reset control variables for left side of screen
"RTN","IBJPS2",149,0)
 S IBLR=$G(LR),IBGRPE=IBLN,IBLN=IBGRPB
"RTN","IBJPS2",150,0)
 Q
"RTN","IBJTBA")
0^25^B47553598^B47561481
"RTN","IBJTBA",1,0)
IBJTBA ;ALB/ARH - TPI BILL CHARGE INFO SCREEN ;01-MAR-1995
"RTN","IBJTBA",2,0)
 ;;2.0;INTEGRATED BILLING;**39,80,51,137,135,309,349**;21-MAR-94;Build 46
"RTN","IBJTBA",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJTBA",4,0)
 ;
"RTN","IBJTBA",5,0)
EN ; -- main entry point for IBJ TP BILL CHARGES
"RTN","IBJTBA",6,0)
 D EN^VALM("IBJT BILL CHARGES")
"RTN","IBJTBA",7,0)
 Q
"RTN","IBJTBA",8,0)
 ;
"RTN","IBJTBA",9,0)
HDR ; -- header code
"RTN","IBJTBA",10,0)
 D HDR^IBJTU1(+IBIFN,+DFN,12)
"RTN","IBJTBA",11,0)
 Q
"RTN","IBJTBA",12,0)
 ;
"RTN","IBJTBA",13,0)
INIT ; -- init variables and list array
"RTN","IBJTBA",14,0)
 N IBOK,IBEOBDET
"RTN","IBJTBA",15,0)
 K ^TMP("IBJTBA",$J) N IBFT
"RTN","IBJTBA",16,0)
 I '$G(DFN)!'$G(IBIFN) S VALMQUIT="" G INITQ
"RTN","IBJTBA",17,0)
 S IBFT=+$P($G(^DGCR(399,+IBIFN,0)),U,19),IBOK=1
"RTN","IBJTBA",18,0)
 I $D(^IBM(361.1,"B",IBIFN))!$D(^IBM(361.1,"C",IBIFN)) D  G:'IBOK INITQ
"RTN","IBJTBA",19,0)
 . S DIR("A")="DO YOU WANT ALL EEOB DETAILS?: ",DIR("B")="NO",DIR(0)="YA"
"RTN","IBJTBA",20,0)
 . D FULL^VALM1 W ! D ^DIR K DIR
"RTN","IBJTBA",21,0)
 . I $D(DTOUT)!$D(DUOUT) S IBOK=0 Q
"RTN","IBJTBA",22,0)
 . S IBEOBDET=+Y
"RTN","IBJTBA",23,0)
 D BLD
"RTN","IBJTBA",24,0)
INITQ Q
"RTN","IBJTBA",25,0)
 ;
"RTN","IBJTBA",26,0)
MRA ; -- mra/eob
"RTN","IBJTBA",27,0)
 N IBI,Z,IBSTR,IBSHEOB,IBCT
"RTN","IBJTBA",28,0)
 S IBCT=0
"RTN","IBJTBA",29,0)
 S IBI=0 F  S IBI=$O(^IBM(361.1,"B",IBIFN,IBI)) Q:'IBI  S Z=+$O(^IBM(361.1,IBI,8,0)) I '$O(^(Z)) S IBCT=IBCT+1,IBSHEOB(IBI)=0  ; Entire EOB belongs to the bill
"RTN","IBJTBA",30,0)
 S IBI=0 F  S IBI=$O(^IBM(361.1,"C",IBIFN,IBI)) Q:'IBI  S IBCT=IBCT+1,IBSHEOB(IBI)=1 ; EOB has been reapportioned at the site
"RTN","IBJTBA",31,0)
 I 'IBCT D
"RTN","IBJTBA",32,0)
 . S IBSTR=$$SETLN("No EEOB/MRA Information","",1,79)
"RTN","IBJTBA",33,0)
 . S IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",34,0)
 I IBCT D
"RTN","IBJTBA",35,0)
 . S Z=0
"RTN","IBJTBA",36,0)
 . S IBI=0 F  S IBI=$O(IBSHEOB(IBI)) Q:'IBI  S Z=Z+1 D SHEOB^IBJTBA1(IBI,+IBSHEOB(IBI),Z,IBCT)
"RTN","IBJTBA",37,0)
 ;
"RTN","IBJTBA",38,0)
 Q
"RTN","IBJTBA",39,0)
 ;
"RTN","IBJTBA",40,0)
HELP ; -- help code
"RTN","IBJTBA",41,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJTBA",42,0)
 Q
"RTN","IBJTBA",43,0)
 ;
"RTN","IBJTBA",44,0)
EXIT ; -- exit code
"RTN","IBJTBA",45,0)
 K ^TMP("IBJTBA",$J)
"RTN","IBJTBA",46,0)
 D CLEAR^VALM1
"RTN","IBJTBA",47,0)
 Q
"RTN","IBJTBA",48,0)
 ;
"RTN","IBJTBA",49,0)
BLD ; charges, as they would display on the bill
"RTN","IBJTBA",50,0)
 N IBXDATA,IBXSAVE
"RTN","IBJTBA",51,0)
 I $P($G(^DGCR(399,+IBIFN,0)),U,19)=2 D H1500 Q
"RTN","IBJTBA",52,0)
 D UB04
"RTN","IBJTBA",53,0)
 K ^TMP("IBXSAVE",$J)
"RTN","IBJTBA",54,0)
 Q
"RTN","IBJTBA",55,0)
 ;
"RTN","IBJTBA",56,0)
H1500 ; block 24
"RTN","IBJTBA",57,0)
 N X,IBI,IBJ,IBLN,IBX,IBSTR,IBLKLN,IBPFORM,IBLIN
"RTN","IBJTBA",58,0)
 K ^TMP("IBXSAVE",$J)
"RTN","IBJTBA",59,0)
 S IBLIN=$$BOX24D^IBCEF11("",1),IBLKLN=0,IBLN=1
"RTN","IBJTBA",60,0)
 Q:'$G(IBIFN)  K ^TMP("IBXDISP",$J)
"RTN","IBJTBA",61,0)
 S IBPFORM=$S($P($G(^IBE(353,2,2)),U,8):$P(^(2),U,8),1:2),IBLN=1
"RTN","IBJTBA",62,0)
 S IBX=$$BILLN^IBCEFG0(1,"1^99",IBLIN,+IBIFN,IBPFORM)
"RTN","IBJTBA",63,0)
 S IBI=$O(^TMP("IBXDISP",$J,""),-1)
"RTN","IBJTBA",64,0)
 S IBJ="" F  S IBJ=$O(^TMP("IBXDISP",$J,IBI,IBJ),-1) Q:$S('IBJ:1,1:$TR($G(^(IBJ))," ")'="")  K ^TMP("IBXDISP",$J,IBI,IBJ)
"RTN","IBJTBA",65,0)
 I '$O(^TMP("IBXDISP",$J,IBI,0)) S VALMSG="No charges or procedures defined.",VALMQUIT="" G H1500Q
"RTN","IBJTBA",66,0)
 S IBI="" F  S IBI=$O(^TMP("IBXDISP",$J,IBI)) Q:'IBI  S IBJ=0 F  S IBJ=$O(^TMP("IBXDISP",$J,IBI,IBJ)) Q:'IBJ  D
"RTN","IBJTBA",67,0)
 . S IBX=$G(^TMP("IBXDISP",$J,IBI,IBJ)),IBLN=$$SET(IBX,IBLN)
"RTN","IBJTBA",68,0)
 K ^TMP("IBXDISP",$J)
"RTN","IBJTBA",69,0)
 D COB,MRA
"RTN","IBJTBA",70,0)
 I $$ISRX^IBCEF1(IBIFN) D RX
"RTN","IBJTBA",71,0)
 I $$ISPROS^IBCEF1(IBIFN) D PROS
"RTN","IBJTBA",72,0)
 S VALMCNT=IBLN-1
"RTN","IBJTBA",73,0)
H1500Q Q
"RTN","IBJTBA",74,0)
 ;
"RTN","IBJTBA",75,0)
UB04 ;form locator 42-49,   IBIFN required
"RTN","IBJTBA",76,0)
 N X,Y,DIR,IBI,IBJ,IBX,IBLN,IBLC,IBLIN,IBPFORM,IBSTATE,IBCBILL,IBINPAT,IBQ,Z,Z0
"RTN","IBJTBA",77,0)
 K ^TMP("IBXSAVE",$J)
"RTN","IBJTBA",78,0)
 S IBLIN=$$RCBOX^IBCEF11()
"RTN","IBJTBA",79,0)
 S IBQ=0,IBLC=9 Q:'$G(IBIFN)  K ^TMP("IBXDISP",$J)
"RTN","IBJTBA",80,0)
 S IBPFORM=$S($P($G(^IBE(353,3,2)),U,8):$P(^(2),U,8),1:3)
"RTN","IBJTBA",81,0)
 S IBX=$$BILLN^IBCEFG0(1,"1^99",IBLIN,+IBIFN,IBPFORM)
"RTN","IBJTBA",82,0)
 I '$O(^TMP("IBXDISP",$J,0)) S VALMSG="No charges defined.",VALMQUIT="" G UB04Q
"RTN","IBJTBA",83,0)
 S Z="" F  S Z=$O(^TMP("IBXDISP",$J,1,Z),-1) Q:Z=""  S Z0=$G(^(Z)) Q:$TR(Z0," ")'=""  K ^(Z)
"RTN","IBJTBA",84,0)
 S:Z ^TMP("IBXDISP",$J,1,Z+1)=" "
"RTN","IBJTBA",85,0)
 S IBINPAT=$$INPAT^IBCEF(IBIFN,1)
"RTN","IBJTBA",86,0)
 S IBSTATE=$G(^DGCR(399,IBIFN,"U")),IBCBILL=$G(^DGCR(399,IBIFN,0))
"RTN","IBJTBA",87,0)
 ;
"RTN","IBJTBA",88,0)
 S (VALMCNT,IBLN)=1,IBLKLN=0
"RTN","IBJTBA",89,0)
 I +IBINPAT D  S IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",90,0)
 . S IBX=$P(IBSTATE,U,15),IBSTR=+IBX_" DAY"_$S(IBX'=1:"S",1:"")_" INPATIENT CARE"
"RTN","IBJTBA",91,0)
 . S IBX=$$LOS^IBCU64(+IBSTATE,+$P(IBSTATE,U,2),+$P(IBCBILL,U,6)),IBX=IBX-$$LOS1^IBCU64(IBIFN) I IBX>0 S IBSTR=IBSTR_$J("Pass Days: "_IBX,55)
"RTN","IBJTBA",92,0)
 ;
"RTN","IBJTBA",93,0)
 S IBI="" F  S IBI=$O(^TMP("IBXDISP",$J,IBI)) Q:'IBI  S IBJ=0 F  S IBJ=$O(^TMP("IBXDISP",$J,IBI,IBJ)) Q:'IBJ  D
"RTN","IBJTBA",94,0)
 . S IBX=$G(^TMP("IBXDISP",$J,IBI,IBJ)),IBLN=$$SET(IBX,IBLN)
"RTN","IBJTBA",95,0)
 . I $E(IBX,1,3)="001" D COB
"RTN","IBJTBA",96,0)
 ;
"RTN","IBJTBA",97,0)
 K ^TMP("IBXDISP",$J)
"RTN","IBJTBA",98,0)
 ;
"RTN","IBJTBA",99,0)
 D MRA
"RTN","IBJTBA",100,0)
 S VALMCNT=IBLN-1
"RTN","IBJTBA",101,0)
UB04Q Q
"RTN","IBJTBA",102,0)
 ;
"RTN","IBJTBA",103,0)
SETLN(STR,IBX,COL,WD) ;
"RTN","IBJTBA",104,0)
 S IBX=$$SETSTR^VALM1(STR,IBX,COL,WD)
"RTN","IBJTBA",105,0)
 Q IBX
"RTN","IBJTBA",106,0)
 ;
"RTN","IBJTBA",107,0)
SET(STR,LN) ; set up TMP array with screen data (allows 2 blank lines, if not at end of array)
"RTN","IBJTBA",108,0)
 N IBX,IBI I STR?80" " S IBLKLN=IBLKLN+1 G SETQ
"RTN","IBJTBA",109,0)
 F IBI=1:1:IBLKLN D SET^VALM10(LN," ") S LN=LN+1 Q:IBI>1
"RTN","IBJTBA",110,0)
 D SET^VALM10(LN,STR)
"RTN","IBJTBA",111,0)
 S LN=LN+1,IBLKLN=0
"RTN","IBJTBA",112,0)
SETQ Q LN
"RTN","IBJTBA",113,0)
 ;
"RTN","IBJTBA",114,0)
COB ; if there is an offset or a secondary/tertiary payer add it to the display, with ins co, and prior bill #
"RTN","IBJTBA",115,0)
 ; IBIFN and IBLN must exist upon entry, IBLN is updated with new line count
"RTN","IBJTBA",116,0)
 N IBM,IBM1,IBI,IBJ,IBD,IBSTR,IBCU2,IBCU1 Q:'$G(IBIFN)
"RTN","IBJTBA",117,0)
 S IBM=$G(^DGCR(399,IBIFN,"M")),IBM1=$G(^DGCR(399,IBIFN,"M1"))
"RTN","IBJTBA",118,0)
 S IBCU2=$G(^DGCR(399,IBIFN,"U2")),IBCU1=$G(^DGCR(399,IBIFN,"U1"))
"RTN","IBJTBA",119,0)
 S IBJ=$P($G(^DGCR(399,IBIFN,0)),U,21),IBJ=$S(IBJ="P":3,IBJ="S":3,IBJ="T":3,1:0),IBSTR=""
"RTN","IBJTBA",120,0)
 I +$P(IBM,U,2)!(+$P(IBM,U,3)) F IBI=1:1:IBJ I +$P(IBM,U,IBI) D  S IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",121,0)
 . I IBSTR="" S IBLN=$$SET("",IBLN)
"RTN","IBJTBA",122,0)
 . S IBD=$S(IBI=1:"Primary",IBI=2:"Secondary",1:"Tertiary")_": " S IBSTR=$$SETLN(IBD,"",5,11)
"RTN","IBJTBA",123,0)
 . S IBD=$P($G(^DIC(36,+$P(IBM,U,IBI),0)),U,1) S IBSTR=$$SETLN(IBD,IBSTR,17,25)
"RTN","IBJTBA",124,0)
 . I $P(IBCU2,U,(IBI+3))'="" S IBD=$J(+$P(IBCU2,U,(IBI+3)),9,2) S IBSTR=$$SETLN(IBD,IBSTR,44,11)
"RTN","IBJTBA",125,0)
 . I $P(IBM1,U,(IBI+4))'="" S IBD=$$BN1^PRCAFN(+$P(IBM1,U,(IBI+4))) S IBSTR=$$SETLN(IBD,IBSTR,60,11)
"RTN","IBJTBA",126,0)
 I +$P(IBCU1,U,2) D  S IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",127,0)
 . I IBSTR="" S IBLN=$$SET("",IBLN)
"RTN","IBJTBA",128,0)
 . S IBD="Offset: " S IBSTR=$$SETLN(IBD,"",5,11)
"RTN","IBJTBA",129,0)
 . S IBD=$P(IBCU1,U,3) S IBSTR=$$SETLN(IBD,IBSTR,17,25)
"RTN","IBJTBA",130,0)
 . S IBD=$J($P(IBCU1,U,2),9,2) S IBSTR=$$SETLN(IBD,IBSTR,44,11)
"RTN","IBJTBA",131,0)
 . S IBD=$P(IBCU1,U,1)-$P(IBCU1,U,2),IBD="Billed: "_$J(IBD,0,2) S IBSTR=$$SETLN(IBD,IBSTR,60,17)
"RTN","IBJTBA",132,0)
 Q
"RTN","IBJTBA",133,0)
 ;
"RTN","IBJTBA",134,0)
RX ;RX refill info for CMS-1500 TPJI display
"RTN","IBJTBA",135,0)
 N Z,Z0,Z1,IBSPC,IBD,IBI,IBSTR,IBARRAY,IBRXX
"RTN","IBJTBA",136,0)
 S IBLN=IBLN+1
"RTN","IBJTBA",137,0)
 S IBSPC=$J("",5)
"RTN","IBJTBA",138,0)
 D SET^IBCSC5A(IBIFN,.IBARRAY)
"RTN","IBJTBA",139,0)
 I $D(IBARRAY) D
"RTN","IBJTBA",140,0)
 . S (Z,Z0)=0 F  S Z0=$O(IBARRAY(Z0)) Q:Z0=""  S Z1=0 F  S Z1=$O(IBARRAY(Z0,Z1)) Q:'Z1  S Z=Z+1 S IBXDATA(Z)=$$DAT1^IBOUTL(Z1)_U_$G(IBARRAY(Z0,Z1))
"RTN","IBJTBA",141,0)
 S IBD=$$SET("",IBLN)
"RTN","IBJTBA",142,0)
 S IBD="PRESCRIPTION REFILLS: (For TPJI display only)"
"RTN","IBJTBA",143,0)
 S IBSTR=$$SETLN(IBD,"",1,79),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",144,0)
 S IBI=0 F  S IBI=$O(IBXDATA(IBI)) Q:IBI=""  D
"RTN","IBJTBA",145,0)
 . S IBRXX=$G(IBXDATA(IBI))
"RTN","IBJTBA",146,0)
 . D ZERO^IBRXUTL($P(IBRXX,U,3))
"RTN","IBJTBA",147,0)
 . S IBD=$J($P(IBRXX,U,7),9,2)_IBSPC_$P(IBRXX,U)_IBSPC_$G(^TMP($J,"IBDRUG",+$P(IBRXX,U,3),.01))
"RTN","IBJTBA",148,0)
 . K ^TMP($J,"IBDRUG")
"RTN","IBJTBA",149,0)
 . S IBSTR=$$SETLN(IBD,"",1,79),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",150,0)
 . S IBD="QTY: "_$P(IBRXX,U,5)_" for "_$P(IBRXX,U,4)_" days supply "_"NDC# "_$P(IBRXX,U,6)
"RTN","IBJTBA",151,0)
 . S IBSTR=$$SETLN(IBD,"",23,79),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",152,0)
 Q
"RTN","IBJTBA",153,0)
 ;
"RTN","IBJTBA",154,0)
PROS ;prosthetic info for CMS-1500 TPJI display
"RTN","IBJTBA",155,0)
 N Z,Z0,Z1,IBARRAY,IBSPC,IBD,IBI,IBSTR
"RTN","IBJTBA",156,0)
 S IBSPC=$J("",10),IBLN=IBLN+1
"RTN","IBJTBA",157,0)
 D SET^IBCSC5B(IBIFN,.IBARRAY)
"RTN","IBJTBA",158,0)
 I $D(IBARRAY) D
"RTN","IBJTBA",159,0)
 . S (Z,Z0)=0 F  S Z0=$O(IBARRAY(Z0)) Q:Z0=""  S Z1=0 F  S Z1=$O(IBARRAY(Z0,Z1)) Q:'Z1  S Z=Z+1,IBXDATA(Z)=$$DAT1^IBOUTL(Z0)_U_$E($P($$PIN^IBCSC5B(Z1),U,2),1,39)
"RTN","IBJTBA",160,0)
 S IBD=$$SET("",IBLN)
"RTN","IBJTBA",161,0)
 S IBD="PROSTHETIC REFILLS: (For TPJI display only)"
"RTN","IBJTBA",162,0)
 S IBSTR=$$SETLN(IBD,"",1,79),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",163,0)
 S IBI=0 F  S IBI=$O(IBXDATA(IBI)) Q:IBI=""  D
"RTN","IBJTBA",164,0)
 . S IBD=$P(IBXDATA(IBI),U)_IBSPC_$P(IBXDATA(IBI),U,2)
"RTN","IBJTBA",165,0)
 . S IBSTR=$$SETLN(IBD,"",1,79),IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBA",166,0)
 Q
"RTN","IBJTBA",167,0)
 ;
"RTN","IBJTBA1")
0^26^B26877071^B26882169
"RTN","IBJTBA1",1,0)
IBJTBA1 ;ALB/TMK - TPJI BILL CHARGE INFO SCREEN ;01-MAR-1995
"RTN","IBJTBA1",2,0)
 ;;2.0;INTEGRATED BILLING;**135,265,155,349**;21-MAR-94;Build 46
"RTN","IBJTBA1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJTBA1",4,0)
 ;
"RTN","IBJTBA1",5,0)
SHEOB(IBI,IBSPL,IBEOBCT,IBCTOF) ; Format EOB called from IBJTBA
"RTN","IBJTBA1",6,0)
 ; IBSPL = 0 if EOB represents one bill's payment
"RTN","IBJTBA1",7,0)
 ;       =  1 if AR had to split the EOB between multiple bills
"RTN","IBJTBA1",8,0)
 ; Assumes IBLN is defined and returns it with line count
"RTN","IBJTBA1",9,0)
 ; Assumes IBEOBDET may be defined as a flag to control detail level of print
"RTN","IBJTBA1",10,0)
 N X,IBPT,IBCN,IBM,IBM1,IBM2,IBTY,IBPY,IBPR,IBST,IBSTR,IBCA,IBTS,IBTA,Z,Z0
"RTN","IBJTBA1",11,0)
 S X="0.00"
"RTN","IBJTBA1",12,0)
 S IBM=$G(^IBM(361.1,IBI,0))
"RTN","IBJTBA1",13,0)
 S IBTY=$P(IBM,U,4),IBTY=$S(IBTY:"MEDICARE MRA",1:"NORMAL EOB")
"RTN","IBJTBA1",14,0)
 I IBTY'["MRA",IBSPL S IBTY="A/R SPLIT/COVERS MORE THAN 1 BILL"
"RTN","IBJTBA1",15,0)
 I $P(IBM,U,13)>1,$P(IBM,U,13)<5 S IBTY=IBTY_" ("_$$EXTERNAL^DILFD(361.1,.13,,$P(IBM,U,13))_")"
"RTN","IBJTBA1",16,0)
 S IBCN=$P(IBM,U,14),IBPY=$P(IBM,U,2)
"RTN","IBJTBA1",17,0)
 S:IBPY IBPY=$P($G(^DIC(36,IBPY,0)),U)
"RTN","IBJTBA1",18,0)
 S IBPR=$$FMTE^XLFDT($P(IBM,U,6)),IBST=$P(IBM,U,16)
"RTN","IBJTBA1",19,0)
 S IBST=$$EXPAND^IBTRE(361.1,.16,+IBST)
"RTN","IBJTBA1",20,0)
 S IBM1=$G(^IBM(361.1,IBI,1))
"RTN","IBJTBA1",21,0)
 ;
"RTN","IBJTBA1",22,0)
 S IBPT=$P(IBM1,U,2)   ; patient responsibility 1.02 field
"RTN","IBJTBA1",23,0)
 ; If MRA & UB, then calculate patient responsiblity value
"RTN","IBJTBA1",24,0)
 I $P(IBM,U,4),$$FT^IBCEF(+$P(IBM,U,1))=3 S IBPT=$$PTRESPI^IBCECOB1(IBI)
"RTN","IBJTBA1",25,0)
 ;
"RTN","IBJTBA1",26,0)
 S IBCA=$P(IBM1,U)
"RTN","IBJTBA1",27,0)
 S IBM2=$G(^IBM(361.1,IBI,2)),IBTA=$P(IBM2,U,3)
"RTN","IBJTBA1",28,0)
 ; if no Total Allowed Amount, sum up amounts on Line Level Adjustment
"RTN","IBJTBA1",29,0)
 I IBTA="" S IBTA=$$ALLOWED^IBCEMU2(IBI)
"RTN","IBJTBA1",30,0)
 S IBTS=$P(IBM2,U,4)
"RTN","IBJTBA1",31,0)
 D MRA2
"RTN","IBJTBA1",32,0)
 S IBLN=$$SET^IBJTBA("",IBLN)
"RTN","IBJTBA1",33,0)
 I '$G(IBEOBDET),IBSPL D
"RTN","IBJTBA1",34,0)
 . S IBSTR=$$SETLN^IBJTBA("    **A/R CORRECTED PAYMENT DATA:","",1,50),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",35,0)
 . S IBSTR=$$SETLN^IBJTBA("     TOTAL AMT PD: "_$J(+$P($G(^IBM(361.1,IBI,1)),U,1),"",2),"",1,75),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",36,0)
 . S Z=0 F  S Z=$O(^IBM(361.1,IBI,8,Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","IBJTBA1",37,0)
 .. S IBSTR=$$SETLN^IBJTBA($E($J("",8)_$S($P(Z0,U,3):$$BN1^PRCAFN(+$P(Z0,U,3)),1:"[suspense]"_$P(Z0,U))_$J("",25),1,25)_"  "_$J(+$P(Z0,U,2),"",2),"",1,75),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",38,0)
 ;
"RTN","IBJTBA1",39,0)
 I $G(IBEOBDET) D
"RTN","IBJTBA1",40,0)
 . I $P($G(^IBM(361.1,IBI,0)),U,4) D  Q     ; Medicare MRA processing
"RTN","IBJTBA1",41,0)
 .. N VALMCNT
"RTN","IBJTBA1",42,0)
 .. K ^TMP("IBCECSD",$J)
"RTN","IBJTBA1",43,0)
 .. D GETEOB^IBCECSA6(IBI,0,,+$G(IBLN)-1)
"RTN","IBJTBA1",44,0)
 .. S Z=0 F  S Z=$O(^TMP("IBCECSD",$J,Z)) Q:'Z  S IBSTR=$$SETLN^IBJTBA($G(^TMP("IBCECSD",$J,Z,0)),"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",45,0)
 .. K ^TMP("IBCECSD",$J)
"RTN","IBJTBA1",46,0)
 .. D EOBERR
"RTN","IBJTBA1",47,0)
 .. Q
"RTN","IBJTBA1",48,0)
 . ;
"RTN","IBJTBA1",49,0)
 . ; Normal EOB processing
"RTN","IBJTBA1",50,0)
 . N VALMCNT
"RTN","IBJTBA1",51,0)
 . K ^TMP("PRCA_EOB",$J)
"RTN","IBJTBA1",52,0)
 . D GETEOB^IBCECSA6(IBI,1)
"RTN","IBJTBA1",53,0)
 . S Z=0 F  S Z=$O(^TMP("PRCA_EOB",$J,IBI,Z)) Q:'Z  S IBSTR=$$SETLN^IBJTBA($G(^TMP("PRCA_EOB",$J,IBI,Z)),"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",54,0)
 . K ^TMP("PRCA_EOB",$J)
"RTN","IBJTBA1",55,0)
 . D EOBERR
"RTN","IBJTBA1",56,0)
 . Q
"RTN","IBJTBA1",57,0)
 ;
"RTN","IBJTBA1",58,0)
 Q
"RTN","IBJTBA1",59,0)
 ;
"RTN","IBJTBA1",60,0)
MRA2 ;
"RTN","IBJTBA1",61,0)
 N IBD
"RTN","IBJTBA1",62,0)
 S IBLN=$$SET^IBJTBA("",IBLN)
"RTN","IBJTBA1",63,0)
 S IBD="EOB/MRA Information"_$S($D(IBCTOF):" ("_$G(IBEOBCT)_" OF "_IBCTOF_")",1:"")
"RTN","IBJTBA1",64,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,"",30,45),$E(IBSTR,1,2)=">>",IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",65,0)
 S IBD="EOB Type: "_IBTY,IBSTR=$$SETLN^IBJTBA(IBD,"",5,59)
"RTN","IBJTBA1",66,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",67,0)
 S IBD="ICN: "_IBCN,IBSTR=$$SETLN^IBJTBA(IBD,"",10,30)
"RTN","IBJTBA1",68,0)
 S IBD="Patient Resp Amount: "_$S('IBPT:X,1:IBPT)
"RTN","IBJTBA1",69,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,44,35)
"RTN","IBJTBA1",70,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",71,0)
 S IBD="Payer Name: "_IBPY,IBSTR=$$SETLN^IBJTBA(IBD,"",3,40)
"RTN","IBJTBA1",72,0)
 S IBD="Total Allowed Amount: "_$S('IBTA:X,1:IBTA)
"RTN","IBJTBA1",73,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,43,36)
"RTN","IBJTBA1",74,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",75,0)
 S IBD="EOB Date: "_IBPR,IBSTR=$$SETLN^IBJTBA(IBD,"",5,35)
"RTN","IBJTBA1",76,0)
 S IBD="Total Submitted Charges: "_$S('IBTS:X,1:IBTS)
"RTN","IBJTBA1",77,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,40,39)
"RTN","IBJTBA1",78,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",79,0)
 S IBD="Svc From Dt: "_$$DAT1^IBOUTL($P(IBM1,U,10))
"RTN","IBJTBA1",80,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,"",2,38)
"RTN","IBJTBA1",81,0)
 S IBD="Svc To Dt: "_$$DAT1^IBOUTL($P(IBM1,U,11))
"RTN","IBJTBA1",82,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,54,25)
"RTN","IBJTBA1",83,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",84,0)
 S IBSTR=""
"RTN","IBJTBA1",85,0)
 I IBTY["MRA" S IBD="MRA Review Status: "_IBST,IBSTR=$$SETLN^IBJTBA(IBD,"",2,38)
"RTN","IBJTBA1",86,0)
 S IBD=$S('$G(IBSPL):"  ",1:"**")_"Reported Payment Amt: "_$S('IBCA:$J(X,"",2),1:$J(+IBCA,"",2))
"RTN","IBJTBA1",87,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,41,37)
"RTN","IBJTBA1",88,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",89,0)
 ;
"RTN","IBJTBA1",90,0)
 I IBTY["MRA",$D(^IBM(361.1,IBI,21)) D
"RTN","IBJTBA1",91,0)
 . S IBD=$TR($J("",35)," ","-")_"Review"_$TR($J("",38)," ","-")
"RTN","IBJTBA1",92,0)
 . S IBSTR=$$SETLN^IBJTBA(IBD,"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",93,0)
 . S (IBST,IBCN)=0 F  S IBCN=$O(^IBM(361.1,IBI,21,IBCN)) Q:'IBCN  S X=$G(^(IBCN,0)) D
"RTN","IBJTBA1",94,0)
 .. S IBST=0
"RTN","IBJTBA1",95,0)
 .. S IBD="Review Date: "_$$DAT1^IBOUTL($P(X,U))
"RTN","IBJTBA1",96,0)
 .. S IBSTR=$$SETLN^IBJTBA(IBD,"",1,30)
"RTN","IBJTBA1",97,0)
 .. S IBD="Reviewed By: "_$P($G(^VA(200,+$P(X,U,2),0)),U)
"RTN","IBJTBA1",98,0)
 .. S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,40,39)
"RTN","IBJTBA1",99,0)
 .. S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",100,0)
 .. S IBD=0 F  S IBD=$O(^IBM(361.1,IBI,21,IBCN,1,IBD)) Q:'IBD  S IBSTR=$$SETLN^IBJTBA($S('IBST:"Comments: ",1:"")_$G(^(IBD,0)),"",1,$S('IBST:69,1:79)),IBST=1,IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",101,0)
 . I 'IBST D
"RTN","IBJTBA1",102,0)
 .. S IBSTR=$$SETLN^IBJTBA("None","",1,10)
"RTN","IBJTBA1",103,0)
 .. S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",104,0)
 Q
"RTN","IBJTBA1",105,0)
 ;
"RTN","IBJTBA1",106,0)
EOBERR ; Display information about any 361.1 message storage or filing errors
"RTN","IBJTBA1",107,0)
 I '$O(^IBM(361.1,IBI,"ERR",0)) Q
"RTN","IBJTBA1",108,0)
 S IBSTR=$$SETLN^IBJTBA(" ** MESSAGE STORAGE ERRORS  **","",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",109,0)
 S Z=0 F  S Z=$O(^IBM(361.1,IBI,"ERR",Z)) Q:'Z  S IBSTR=$$SETLN^IBJTBA($G(^(Z,0)),"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",110,0)
 Q
"RTN","IBJTBA1",111,0)
 ;
"RTN","IBJTBC")
0^27^B13013403^B13014724
"RTN","IBJTBC",1,0)
IBJTBC ;ALB/ARH - TPI BILL PROCEDURES SCREEN ;02-MAR-1995
"RTN","IBJTBC",2,0)
 ;;2.0;INTEGRATED BILLING;**39,80,51,137,210,349**;21-MAR-94;Build 46
"RTN","IBJTBC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJTBC",4,0)
 ;
"RTN","IBJTBC",5,0)
EN ; -- main entry point for IBJ TP BILL PROCEDURES
"RTN","IBJTBC",6,0)
 D EN^VALM("IBJT BILL PROCEDURES")
"RTN","IBJTBC",7,0)
 Q
"RTN","IBJTBC",8,0)
 ;
"RTN","IBJTBC",9,0)
HDR ; -- header code
"RTN","IBJTBC",10,0)
 D HDR^IBJTU1(+IBIFN,+DFN,12)
"RTN","IBJTBC",11,0)
 Q
"RTN","IBJTBC",12,0)
 ;
"RTN","IBJTBC",13,0)
INIT ; -- init variables and list array
"RTN","IBJTBC",14,0)
 K ^TMP("IBJTBC",$J) N IBFT
"RTN","IBJTBC",15,0)
 I '$G(DFN)!'$G(IBIFN) S VALMQUIT="" G INITQ
"RTN","IBJTBC",16,0)
 D BLD
"RTN","IBJTBC",17,0)
INITQ Q
"RTN","IBJTBC",18,0)
 ;
"RTN","IBJTBC",19,0)
HELP ; -- help code
"RTN","IBJTBC",20,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJTBC",21,0)
 Q
"RTN","IBJTBC",22,0)
 ;
"RTN","IBJTBC",23,0)
EXIT ; -- exit code
"RTN","IBJTBC",24,0)
 K ^TMP("IBJTBC",$J)
"RTN","IBJTBC",25,0)
 D CLEAR^VALM1
"RTN","IBJTBC",26,0)
 Q
"RTN","IBJTBC",27,0)
 ;
"RTN","IBJTBC",28,0)
BLD ;
"RTN","IBJTBC",29,0)
 N IB,IBI,IBJ,IBX,IBY,IBDXI,IBLN,IBSTR,IBD,IBT,IBPRC,IBXDATA,IBZPRC,IBZDX
"RTN","IBJTBC",30,0)
 D F^IBCEF("N-UB-04 PROCEDURES","IBZPRC",,IBIFN)
"RTN","IBJTBC",31,0)
 S IBSTR=""
"RTN","IBJTBC",32,0)
 I +$O(IBZPRC(0))=0 S IBLN=1 F IBSTR="","Bill contains no procedures." S IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBC",33,0)
 ;
"RTN","IBJTBC",34,0)
 D F^IBCEF("N-DIAGNOSES","IBZDX",,IBIFN)
"RTN","IBJTBC",35,0)
 S IBX=0,IBI="" F  S IBI=$O(IBZDX(IBI)) Q:'IBI  S IBDXI($P(IBZDX(IBI),U,2))=IBI
"RTN","IBJTBC",36,0)
 S IBLN=1,IBI="" F  S IBI=$O(IBZPRC(IBI)) Q:'IBI  D  S IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBC",37,0)
 . N IBDATE ; Date of procedure
"RTN","IBJTBC",38,0)
 . S IBX=IBZPRC(IBI)
"RTN","IBJTBC",39,0)
 . S IBDATE=$P(IBX,U,2) I 'IBDATE S IBDATE=$$BDATE^IBACSV(IBIFN) ; The bills date
"RTN","IBJTBC",40,0)
 . S IBPRC=$$PRCD^IBCEF1($P(IBX,U),1,IBDATE) Q:IBPRC=""
"RTN","IBJTBC",41,0)
 . S IBT=0,IBSTR=" "_$P(IBPRC,U,2)
"RTN","IBJTBC",42,0)
 . I +$P(IBZPRC(IBI),U,15) S IBSTR=IBSTR_" "_$$MODLST^IBEFUNC2($P(IBZPRC(IBI),U,15))
"RTN","IBJTBC",43,0)
 . S IBT=20,IBD=$P(IBPRC,U,3) S IBSTR=$$SETLN(IBD,IBSTR,IBT,20)
"RTN","IBJTBC",44,0)
 . S IBT=41,IBD=$$DATE^IBJU1(+$P(IBX,U,2)) S IBSTR=$$SETLN(IBD,IBSTR,IBT,8)
"RTN","IBJTBC",45,0)
 . S IBT=51,IBY=$P(IBX,U,5) I IBY'="" S IBD="BASC:   Yes" D
"RTN","IBJTBC",46,0)
 .. S IBSTR=$$SETLN(IBD,IBSTR,IBT,29),IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTBC",47,0)
 . S IBY=$P(IBX,U,6) I IBY'="" S IBD="DIV:    "_$P($G(^DG(40.8,+IBY,0)),U,1) D
"RTN","IBJTBC",48,0)
 .. S IBSTR=$$SETLN(IBD,IBSTR,IBT,29),IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTBC",49,0)
 . S IBY=$P(IBX,U,7) I IBY'="" S IBD="CLINIC: "_$P($G(^SC(+IBY,0)),U,1) D
"RTN","IBJTBC",50,0)
 .. S IBSTR=$$SETLN(IBD,IBSTR,IBT,29),IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTBC",51,0)
 . S IBY=$P(IBX,U,9) I IBY'="" D
"RTN","IBJTBC",52,0)
 .. S IBT=51,IBY=$G(^IBE(353.1,+IBY,0)),IBD="POS:    "_$P(IBY,U,1) S IBSTR=$$SETLN(IBD,IBSTR,IBT,11)
"RTN","IBJTBC",53,0)
 .. S IBT=63,IBD=$P(IBY,U,2) S IBSTR=$$SETLN(IBD,IBSTR,IBT,12),IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTBC",54,0)
 . S IBY=$P(IBX,U,10) I IBY'="" D
"RTN","IBJTBC",55,0)
 .. S IBT=51,IBY=$G(^IBE(353.2,+IBY,0)),IBD="TOS:    "_$P(IBY,U,1) S IBSTR=$$SETLN(IBD,IBSTR,IBT,11)
"RTN","IBJTBC",56,0)
 .. S IBT=63,IBD=$P(IBY,U,2) S IBSTR=$$SETLN(IBD,IBSTR,IBT,17),IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTBC",57,0)
 . S IBT=51,IBD=$P(IBX,U,16) I IBD,$P(IBX,U,10)=7 S IBSTR=$$SETLN("MINUTES: "_$P(IBX,U,16),IBSTR,IBT,15)
"RTN","IBJTBC",58,0)
 . ;
"RTN","IBJTBC",59,0)
 . S IBT=51 F IBJ=11:1:14 S IBY=$P(IBX,U,IBJ) I IBY'="" D  S IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTBC",60,0)
 .. S IBY=$G(IBDXI(+IBY)) Q:'IBY  S IBD="DX ("_IBY_"): "
"RTN","IBJTBC",61,0)
 .. S IBY=+$G(IBZDX(+IBY)) Q:'IBY  S IBY=$$ICD9^IBACSV(+IBY,IBDATE)
"RTN","IBJTBC",62,0)
 .. S IBT=51,IBD=IBD_$P(IBY,U,1) S IBSTR=$$SETLN(IBD,IBSTR,IBT,15)
"RTN","IBJTBC",63,0)
 .. S IBT=67,IBD=$P(IBY,U,3) S IBSTR=$$SETLN(IBD,IBSTR,IBT,13)
"RTN","IBJTBC",64,0)
 ;
"RTN","IBJTBC",65,0)
 S VALMCNT=IBLN-1
"RTN","IBJTBC",66,0)
 Q
"RTN","IBJTBC",67,0)
 ;
"RTN","IBJTBC",68,0)
SETLN(STR,IBX,COL,WD) ;
"RTN","IBJTBC",69,0)
 S IBX=$$SETSTR^VALM1(STR,IBX,COL,WD)
"RTN","IBJTBC",70,0)
 Q IBX
"RTN","IBJTBC",71,0)
 ;
"RTN","IBJTBC",72,0)
SET(STR,LN) ; set up TMP array with screen data
"RTN","IBJTBC",73,0)
 N IBX,IBI
"RTN","IBJTBC",74,0)
 D SET^VALM10(LN,STR)
"RTN","IBJTBC",75,0)
 S LN=LN+1
"RTN","IBJTBC",76,0)
SETQ Q LN
"RTN","IBY349PO")
0^^B7532466^n/a
"RTN","IBY349PO",1,0)
IBY349PO ;ALB/ESG - Post-Installation for IB patch 349 ;27-Nov-2006
"RTN","IBY349PO",2,0)
 ;;2.0;INTEGRATED BILLING;**349**;21-MAR-94;Build 46
"RTN","IBY349PO",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBY349PO",4,0)
 ;
"RTN","IBY349PO",5,0)
EN ;
"RTN","IBY349PO",6,0)
 N XPDIDTOT S XPDIDTOT=4
"RTN","IBY349PO",7,0)
 D LID          ; 1. set default value for UB PRINT LEGACY ID parameter
"RTN","IBY349PO",8,0)
 D PARA         ; 2. remove the PRINT '001' FOR TOTAL CHARGES? field
"RTN","IBY349PO",9,0)
 D RIT          ; 3. recompile some billing screen input templates
"RTN","IBY349PO",10,0)
 D DIC          ; 4. update some file descriptions
"RTN","IBY349PO",11,0)
EX ;
"RTN","IBY349PO",12,0)
 Q
"RTN","IBY349PO",13,0)
 ;
"RTN","IBY349PO",14,0)
LID ; set default value for UB PRINT LEGACY ID site parameter
"RTN","IBY349PO",15,0)
 ; This site parameter should default to "YES" (always print legacy id)
"RTN","IBY349PO",16,0)
 NEW DIE,DA,DR
"RTN","IBY349PO",17,0)
 D BMES^XPDUTL(" STEP 1 of "_XPDIDTOT)
"RTN","IBY349PO",18,0)
 D MES^XPDUTL("-------------")
"RTN","IBY349PO",19,0)
 D MES^XPDUTL("Setting default value for UB PRINT LEGACY ID site parameter...")
"RTN","IBY349PO",20,0)
 I $P($G(^IBE(350.9,1,1)),U,33)="" S DIE=350.9,DA=1,DR="1.33///YES" D ^DIE
"RTN","IBY349PO",21,0)
LIDX ;
"RTN","IBY349PO",22,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY349PO",23,0)
 D UPDATE^XPDID(1)
"RTN","IBY349PO",24,0)
 Q
"RTN","IBY349PO",25,0)
 ;
"RTN","IBY349PO",26,0)
PARA ; remove the PRINT '001' FOR TOTAL CHARGES? field from the IB site
"RTN","IBY349PO",27,0)
 ; parameters file.  This field is obsolete.
"RTN","IBY349PO",28,0)
 NEW DIK,DA
"RTN","IBY349PO",29,0)
 D BMES^XPDUTL(" STEP 2 of "_XPDIDTOT)
"RTN","IBY349PO",30,0)
 D MES^XPDUTL("-------------")
"RTN","IBY349PO",31,0)
 D MES^XPDUTL("Removing '001' for Total field from file 350.9 ....")
"RTN","IBY349PO",32,0)
 ;
"RTN","IBY349PO",33,0)
 ; remove the field from the data dictionary
"RTN","IBY349PO",34,0)
 S DIK="^DD(350.9,",DA=1.1,DA(1)=350.9 D ^DIK
"RTN","IBY349PO",35,0)
 ;
"RTN","IBY349PO",36,0)
 ; remove the data from the file
"RTN","IBY349PO",37,0)
 S $P(^IBE(350.9,1,1),U,10)=""
"RTN","IBY349PO",38,0)
 ;
"RTN","IBY349PO",39,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY349PO",40,0)
 D UPDATE^XPDID(2)
"RTN","IBY349PO",41,0)
PARAX ;
"RTN","IBY349PO",42,0)
 Q
"RTN","IBY349PO",43,0)
 ;
"RTN","IBY349PO",44,0)
RIT ; Recompile input templates for billing screens
"RTN","IBY349PO",45,0)
 NEW X,Y,DMAX
"RTN","IBY349PO",46,0)
 D BMES^XPDUTL(" STEP 3 of "_XPDIDTOT)
"RTN","IBY349PO",47,0)
 D MES^XPDUTL("-------------")
"RTN","IBY349PO",48,0)
 D MES^XPDUTL("Recompiling Input Templates for Billing Screens 6, 7 & 8....")
"RTN","IBY349PO",49,0)
 S X="IBXSC6",Y=$$FIND1^DIC(.402,,"X","IB SCREEN6","B"),DMAX=8000
"RTN","IBY349PO",50,0)
 I Y D EN^DIEZ
"RTN","IBY349PO",51,0)
 S X="IBXSC7",Y=$$FIND1^DIC(.402,,"X","IB SCREEN7","B"),DMAX=8000
"RTN","IBY349PO",52,0)
 I Y D EN^DIEZ
"RTN","IBY349PO",53,0)
 S X="IBXSC82",Y=$$FIND1^DIC(.402,,"X","IB SCREEN82","B"),DMAX=8000
"RTN","IBY349PO",54,0)
 I Y D EN^DIEZ
"RTN","IBY349PO",55,0)
RITX ;
"RTN","IBY349PO",56,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY349PO",57,0)
 D UPDATE^XPDID(3)
"RTN","IBY349PO",58,0)
 Q
"RTN","IBY349PO",59,0)
 ;
"RTN","IBY349PO",60,0)
DIC ; update some file descriptions with UB-04
"RTN","IBY349PO",61,0)
 NEW UB82,UB04,FILE,Z,TEXT,NEWTEXT
"RTN","IBY349PO",62,0)
 D BMES^XPDUTL(" STEP 4 of "_XPDIDTOT)
"RTN","IBY349PO",63,0)
 D MES^XPDUTL("-------------")
"RTN","IBY349PO",64,0)
 D MES^XPDUTL("Updating file descriptions for the UB-04 ....")
"RTN","IBY349PO",65,0)
 ;
"RTN","IBY349PO",66,0)
 S UB82="UB-82",UB04="UB-04"
"RTN","IBY349PO",67,0)
 F FILE=353 S Z=0 F  S Z=$O(^DIC(FILE,"%D",Z)) Q:'Z  D
"RTN","IBY349PO",68,0)
 . S TEXT=$G(^DIC(FILE,"%D",Z,0)) Q:TEXT'[UB82
"RTN","IBY349PO",69,0)
 . S NEWTEXT=$P(TEXT,UB82,1)_UB04_$P(TEXT,UB82,2)
"RTN","IBY349PO",70,0)
 . S ^DIC(FILE,"%D",Z,0)=NEWTEXT
"RTN","IBY349PO",71,0)
 . Q
"RTN","IBY349PO",72,0)
 ;
"RTN","IBY349PO",73,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY349PO",74,0)
 D UPDATE^XPDID(4)
"RTN","IBY349PO",75,0)
DICX ;
"RTN","IBY349PO",76,0)
 Q
"RTN","IBY349PR")
0^^B47905799^n/a
"RTN","IBY349PR",1,0)
IBY349PR ;ALB/ESG - Pre-Installation for IB patch 349 ;3-Nov-2006
"RTN","IBY349PR",2,0)
 ;;2.0;INTEGRATED BILLING;**349**;21-MAR-94;Build 46
"RTN","IBY349PR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBY349PR",4,0)
 ;
"RTN","IBY349PR",5,0)
 D FILE353     ; changes to file 353 for the UB-04
"RTN","IBY349PR",6,0)
 D MOVE        ; archive existing UB-92 data elements
"RTN","IBY349PR",7,0)
 D DELTRIG     ; delete some DD triggers (will be re-added)
"RTN","IBY349PR",8,0)
 D DELOF       ; delete all data elements included in build
"RTN","IBY349PR",9,0)
 ;
"RTN","IBY349PR",10,0)
 Q
"RTN","IBY349PR",11,0)
 ;
"RTN","IBY349PR",12,0)
FILE353 ; Make the needed changes to the BILL FORM TYPE file (#353)
"RTN","IBY349PR",13,0)
 ;  -Create an entry for #13 to archive the old UB-92 and edit
"RTN","IBY349PR",14,0)
 ;  -Repoint any local forms that used to point to #3 to #13 instead
"RTN","IBY349PR",15,0)
 ;  -Edit some data in the new #3 for UB-04
"RTN","IBY349PR",16,0)
 ;
"RTN","IBY349PR",17,0)
 NEW DIK,DA,DIE,DR,FORM,FORMCNT
"RTN","IBY349PR",18,0)
 ;
"RTN","IBY349PR",19,0)
 D BMES^XPDUTL("Updating information in the BILL FORM TYPE file (#353)")
"RTN","IBY349PR",20,0)
 ;
"RTN","IBY349PR",21,0)
 ; If #13 is already there, then just quit
"RTN","IBY349PR",22,0)
 I $D(^IBE(353,13)),$P($G(^IBE(353,13,0)),U,1)="LEGACY UB-92" D BMES^XPDUTL("   Entry# 13 is already defined") G F353X
"RTN","IBY349PR",23,0)
 ;
"RTN","IBY349PR",24,0)
 K ^IBE(353,13)
"RTN","IBY349PR",25,0)
 M ^IBE(353,13)=^IBE(353,3)             ; create entry# 13
"RTN","IBY349PR",26,0)
 S DIK="^IBE(353,",DA=13 D IX1^DIK      ; reindex #13
"RTN","IBY349PR",27,0)
 S DIE=353,DA=13                        ; edit #13
"RTN","IBY349PR",28,0)
 S DR=".01///LEGACY UB-92;2.04///@;2.06///*LEGACY NATIONAL UB-92;2.05///@;2.08///@;2.09///@;.02///@;.03///@;1.01///@"
"RTN","IBY349PR",29,0)
 D ^DIE
"RTN","IBY349PR",30,0)
 D BMES^XPDUTL("   Entry# 13 has been created and edited")
"RTN","IBY349PR",31,0)
 ;
"RTN","IBY349PR",32,0)
 ; repoint any local forms to the new 13 instead of the old 3
"RTN","IBY349PR",33,0)
 ; count total number of forms too
"RTN","IBY349PR",34,0)
 S FORM=0,FORMCNT=0
"RTN","IBY349PR",35,0)
 F  S FORM=$O(^IBE(353,FORM)) Q:'FORM  D
"RTN","IBY349PR",36,0)
 . N B S B=$G(^IBE(353,FORM,2))
"RTN","IBY349PR",37,0)
 . S FORMCNT=FORMCNT+1
"RTN","IBY349PR",38,0)
 . I $P(B,U,4) Q    ; quit if national form type
"RTN","IBY349PR",39,0)
 . I $P(B,U,5)=3 S DIE=353,DA=FORM,DR="2.05////13" D ^DIE   ; parent form
"RTN","IBY349PR",40,0)
 . I $P(B,U,8)=3 S DIE=353,DA=FORM,DR="2.08////13" D ^DIE   ; print form name
"RTN","IBY349PR",41,0)
 . Q
"RTN","IBY349PR",42,0)
 D BMES^XPDUTL("   Local forms/overrides for the old UB-92 have been removed and repointed")
"RTN","IBY349PR",43,0)
 ;
"RTN","IBY349PR",44,0)
 S $P(^IBE(353,0),U,4)=FORMCNT     ; re-set 0 node
"RTN","IBY349PR",45,0)
 ;
"RTN","IBY349PR",46,0)
 ; edit the data for entry# 3 so it becomes the new UB-04
"RTN","IBY349PR",47,0)
 S DIE=353,DA=3
"RTN","IBY349PR",48,0)
 S DR=".01///UB-04;2.04////1;2.06///NATIONAL UB-04;2.05///@;2.08////3;2.09///@"   ; note screen 9 is being deleted also
"RTN","IBY349PR",49,0)
 D ^DIE
"RTN","IBY349PR",50,0)
 D BMES^XPDUTL("   Entry# 3 has become the new UB-04")
"RTN","IBY349PR",51,0)
 ;
"RTN","IBY349PR",52,0)
F353X ;
"RTN","IBY349PR",53,0)
 Q
"RTN","IBY349PR",54,0)
 ;
"RTN","IBY349PR",55,0)
MOVE ; move existing output formatter entries for form type 3 to form type 13
"RTN","IBY349PR",56,0)
 NEW IEN,DIE,DA,DR
"RTN","IBY349PR",57,0)
 D BMES^XPDUTL("Archiving output formatter entries for the old UB-92 form")
"RTN","IBY349PR",58,0)
 I $O(^IBA(364.6,"B",3,0))=1550 D BMES^XPDUTL("   Already archived") G MOVEX
"RTN","IBY349PR",59,0)
 ;
"RTN","IBY349PR",60,0)
 I '$D(^IBE(353,13)) D BMES^XPDUTL("   Error - entry# 13 not defined...call EVS") G MOVEX
"RTN","IBY349PR",61,0)
 ;
"RTN","IBY349PR",62,0)
 S IEN=0
"RTN","IBY349PR",63,0)
 F  S IEN=$O(^IBA(364.6,"B",3,IEN)) Q:'IEN  D
"RTN","IBY349PR",64,0)
 . I IEN'<1550 Q    ; do not move the new data elements
"RTN","IBY349PR",65,0)
 . S DIE=364.6,DA=IEN,DR=".01////13"
"RTN","IBY349PR",66,0)
 . D ^DIE
"RTN","IBY349PR",67,0)
 . Q
"RTN","IBY349PR",68,0)
 D BMES^XPDUTL("   Completed")
"RTN","IBY349PR",69,0)
MOVEX ;
"RTN","IBY349PR",70,0)
 Q
"RTN","IBY349PR",71,0)
  ;
"RTN","IBY349PR",72,0)
DELTRIG ; remove some triggers from ^DD(FILE,FIELD,1)
"RTN","IBY349PR",73,0)
 ; these will be re-added when the build is installed
"RTN","IBY349PR",74,0)
 D BMES^XPDUTL("Removing DD triggers....")
"RTN","IBY349PR",75,0)
 D DELIX^DDMOD(399,.04,1)
"RTN","IBY349PR",76,0)
 D DELIX^DDMOD(399,.05,2)
"RTN","IBY349PR",77,0)
 D DELIX^DDMOD(399,.06,1)
"RTN","IBY349PR",78,0)
 D DELIX^DDMOD(399,.26,1)
"RTN","IBY349PR",79,0)
 D DELIX^DDMOD(399,.02,2)
"RTN","IBY349PR",80,0)
 D BMES^XPDUTL("   Completed")
"RTN","IBY349PR",81,0)
DELTRIGX ;
"RTN","IBY349PR",82,0)
 Q
"RTN","IBY349PR",83,0)
 ;
"RTN","IBY349PR",84,0)
 ;
"RTN","IBY349PR",85,0)
DELOF ; Delete included output formatter entries
"RTN","IBY349PR",86,0)
 NEW FILE,DIK,LN,TAG,DATA,PCE,DA,Y
"RTN","IBY349PR",87,0)
 F FILE=5,6,7 S DIK="^IBA(364."_FILE_"," F LN=2:1 S TAG="ENT"_FILE_"+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  D
"RTN","IBY349PR",88,0)
 . F PCE=2:1 S DA=$P(DATA,U,PCE) Q:'DA  I $D(^IBA("364."_FILE,DA,0)) D ^DIK
"RTN","IBY349PR",89,0)
 . Q
"RTN","IBY349PR",90,0)
 ;
"RTN","IBY349PR",91,0)
 ; Also delete output formatter entries which are not going to be
"RTN","IBY349PR",92,0)
 ; re-added later.  These are non-functioning entries in file 364.6.
"RTN","IBY349PR",93,0)
 S DIK="^IBA(364.6,",TAG="DEL6+2",DATA=$P($T(@TAG),";;",2)
"RTN","IBY349PR",94,0)
 I DATA'="" D
"RTN","IBY349PR",95,0)
 . F PCE=2:1 S DA=$P(DATA,U,PCE) Q:'DA  I $D(^IBA(364.6,DA,0)) D ^DIK
"RTN","IBY349PR",96,0)
 . Q
"RTN","IBY349PR",97,0)
 ;
"RTN","IBY349PR",98,0)
 ; Also delete output formatter entries which are not going to be
"RTN","IBY349PR",99,0)
 ; re-added later.  These are non-functioning entries in file 364.7.
"RTN","IBY349PR",100,0)
 S DIK="^IBA(364.7,",TAG="DEL7+2",DATA=$P($T(@TAG),";;",2)
"RTN","IBY349PR",101,0)
 I DATA'="" D
"RTN","IBY349PR",102,0)
 . F PCE=2:1 S DA=$P(DATA,U,PCE) Q:'DA  I $D(^IBA(364.7,DA,0)) D ^DIK
"RTN","IBY349PR",103,0)
 . Q
"RTN","IBY349PR",104,0)
 ;
"RTN","IBY349PR",105,0)
DELOFX ;
"RTN","IBY349PR",106,0)
 Q
"RTN","IBY349PR",107,0)
 ;
"RTN","IBY349PR",108,0)
INCLUDE(FILE,Y) ; function to determine if output formatter entry should be
"RTN","IBY349PR",109,0)
 ; included in the build
"RTN","IBY349PR",110,0)
 ; FILE=5,6,7 indicating file 364.x
"RTN","IBY349PR",111,0)
 ; Y=ien to file
"RTN","IBY349PR",112,0)
 ;
"RTN","IBY349PR",113,0)
 NEW OK,LN,TAG,DATA
"RTN","IBY349PR",114,0)
 S OK=0
"RTN","IBY349PR",115,0)
 F LN=2:1 S TAG="ENT"_FILE_"+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  I $F(DATA,U_Y_U) S OK=1 Q
"RTN","IBY349PR",116,0)
INCLUDEX ;
"RTN","IBY349PR",117,0)
 Q OK
"RTN","IBY349PR",118,0)
 ;
"RTN","IBY349PR",119,0)
 ;
"RTN","IBY349PR",120,0)
 ; 364.5 entries modified:
"RTN","IBY349PR",121,0)
 ;         8 - N-UB-04 SERVICE LINE (EDI)
"RTN","IBY349PR",122,0)
 ;        14 - N-UB92 FORM LOCATOR 57
"RTN","IBY349PR",123,0)
 ;        15 - N-UB92 FORM LOCATOR 31
"RTN","IBY349PR",124,0)
 ;        16 - N-UB-04 PROCEDURES
"RTN","IBY349PR",125,0)
 ;        53 - N-UB92 FORM LOCATOR 78
"RTN","IBY349PR",126,0)
 ;        55 - N-CURR INS FORM LOC 64
"RTN","IBY349PR",127,0)
 ;        56 - N-OTH INS FORM LOC 64
"RTN","IBY349PR",128,0)
 ;        85 - N-ADMITTING DIAGNOSIS
"RTN","IBY349PR",129,0)
 ;       142 - N-PRINT BILL SUBMIT STATUS - description edit
"RTN","IBY349PR",130,0)
 ;       186 - N-UB92 FORM LOCATOR 11
"RTN","IBY349PR",131,0)
 ;       187 - N-PATIENT SHORT ADDRESS
"RTN","IBY349PR",132,0)
 ;       191 - N-UB-04 FORM LOCATOR 64
"RTN","IBY349PR",133,0)
 ;       193 - N-UB-04 SERVICE LINE (PRINT)
"RTN","IBY349PR",134,0)
 ;       221 - N-UB-04 TIMEFRAME OF BILL
"RTN","IBY349PR",135,0)
 ;       222 - N-UB-04 LOCATION OF CARE
"RTN","IBY349PR",136,0)
 ;       223 - N-UB-04 BILL CLASSIFICATION
"RTN","IBY349PR",137,0)
 ;       246 - N-UB-04 FORM LOCATOR 64B
"RTN","IBY349PR",138,0)
 ;       247 - N-UB-04 FORM LOCATOR 64C
"RTN","IBY349PR",139,0)
 ;       253 - N-DIAGNOSIS E-CODE
"RTN","IBY349PR",140,0)
 ;
"RTN","IBY349PR",141,0)
ENT5 ; output formatter entries in file 364.5 to be included
"RTN","IBY349PR",142,0)
 ;
"RTN","IBY349PR",143,0)
 ;;^8^14^15^16^53^55^56^85^142^186^187^191^193^221^222^223^246^247^253^
"RTN","IBY349PR",144,0)
 ;;
"RTN","IBY349PR",145,0)
 ;
"RTN","IBY349PR",146,0)
 ; 364.6 entries modified:
"RTN","IBY349PR",147,0)
 ;     111  OI1-10
"RTN","IBY349PR",148,0)
 ;
"RTN","IBY349PR",149,0)
ENT6 ; output formatter entries in file 364.6 to be included
"RTN","IBY349PR",150,0)
 ;
"RTN","IBY349PR",151,0)
 ;;^111^
"RTN","IBY349PR",152,0)
 ;;^1550^1551^1552^1553^1554^1555^1556^1557^1558^1559^1560^1561^1562^1563^1564^1565^1566^1567^1568^1569^1570^1571^
"RTN","IBY349PR",153,0)
 ;;^1572^1573^1574^1575^1576^1577^1578^1579^1580^1581^1582^1583^1584^1585^1586^1587^1588^1589^1590^1591^1592^1593^
"RTN","IBY349PR",154,0)
 ;;^1594^1595^1596^1597^1598^1599^1600^1601^1602^1603^1604^1605^1606^1607^1608^1609^1610^1611^1612^1613^1614^1615^
"RTN","IBY349PR",155,0)
 ;;^1616^1617^1618^1619^1620^1621^1622^1623^1624^1625^1626^1627^1628^1629^1630^1631^1632^1633^1634^1635^1636^1637^
"RTN","IBY349PR",156,0)
 ;;^1638^1639^1640^1641^1642^1643^1644^1645^1646^1647^1648^1649^1650^1651^1652^1653^1654^1655^1656^1657^1658^1659^
"RTN","IBY349PR",157,0)
 ;;^1660^1661^1662^1663^1664^1665^1666^1667^1668^1669^1670^1671^1672^1673^1674^1675^1676^1677^1678^1679^1680^1681^
"RTN","IBY349PR",158,0)
 ;;^1682^1683^1684^1685^1686^1687^1688^1689^1690^1691^1692^1693^1694^1695^1696^1697^1698^1699^1700^1701^1702^1703^
"RTN","IBY349PR",159,0)
 ;;^1704^1705^1706^1707^1708^1709^1710^1711^1712^1713^1714^1715^1716^1717^1718^1719^1720^1721^1722^1723^
"RTN","IBY349PR",160,0)
 ;;^1727^1728^1729^1730^1731^1732^1733^1734^1735^1736^1737^1738^1739^1740^1741^1742^1743^1744^1745^1746^1747^
"RTN","IBY349PR",161,0)
 ;;^1748^1749^1750^1751^1752^1753^1754^1755^1756^1757^1758^1759^
"RTN","IBY349PR",162,0)
 ;;
"RTN","IBY349PR",163,0)
 ;
"RTN","IBY349PR",164,0)
 ;
"RTN","IBY349PR",165,0)
 ; 364.7 entries modified:
"RTN","IBY349PR",166,0)
 ;     130  OI1-10
"RTN","IBY349PR",167,0)
 ;     787  (old UB-92)  - multiple page check (just in case)
"RTN","IBY349PR",168,0)
 ;
"RTN","IBY349PR",169,0)
ENT7 ; output formatter entries in file 364.7 to be included
"RTN","IBY349PR",170,0)
 ;
"RTN","IBY349PR",171,0)
 ;;^130^787^
"RTN","IBY349PR",172,0)
 ;;^1250^1251^1252^1253^1254^1255^1256^1257^1258^1259^1260^1261^1262^1263^1264^1265^1266^1267^1268^1269^1270^1271^
"RTN","IBY349PR",173,0)
 ;;^1272^1273^1274^1275^1276^1277^1278^1279^1280^1281^1282^1283^1284^1285^1286^1287^1288^1289^1290^1291^1292^1293^
"RTN","IBY349PR",174,0)
 ;;^1294^1295^1296^1297^1298^1299^1300^1301^1302^1303^1304^1305^1306^1307^1308^1309^1310^1311^1312^1313^1314^1315^
"RTN","IBY349PR",175,0)
 ;;^1316^1317^1318^1319^1320^1321^1322^1323^1324^1325^1326^1327^1328^1329^1330^1331^1332^1333^1334^1335^1336^1337^
"RTN","IBY349PR",176,0)
 ;;^1338^1339^1340^1341^1342^1343^1344^1345^1346^1347^1348^1349^1350^1351^1352^1353^1354^1355^1356^1357^1358^1359^
"RTN","IBY349PR",177,0)
 ;;^1360^1361^1362^1363^1364^1365^1366^1367^1368^1369^1370^1371^1372^1373^1374^1375^1376^1377^1378^1379^1380^1381^
"RTN","IBY349PR",178,0)
 ;;^1382^1383^1384^1385^1386^1387^1388^1389^1390^1391^1392^1393^1394^1395^1396^1397^1398^1399^1400^1401^1402^1403^
"RTN","IBY349PR",179,0)
 ;;^1404^1405^1406^1407^1408^1409^1410^1411^1412^1413^1414^1415^1416^1417^1418^1419^1420^1421^1422^1423^
"RTN","IBY349PR",180,0)
 ;;^1427^1428^1429^1430^1431^1432^1433^1434^1435^1436^1437^1438^1439^1440^1441^1442^1443^1444^1445^1446^1447^
"RTN","IBY349PR",181,0)
 ;;^1448^1449^1450^1451^1452^1453^1454^1455^1456^1457^1458^1459^
"RTN","IBY349PR",182,0)
 ;;
"RTN","IBY349PR",183,0)
 ;
"RTN","IBY349PR",184,0)
 ;
"RTN","IBY349PR",185,0)
DEL6 ; remove output formatter entries in file 364.6 (not re-added)
"RTN","IBY349PR",186,0)
 ;
"RTN","IBY349PR",187,0)
 ;;^77^78^79^80^925^926^927^928^929^930^931^932^933^934^
"RTN","IBY349PR",188,0)
 ;;
"RTN","IBY349PR",189,0)
 ;
"RTN","IBY349PR",190,0)
DEL7 ; remove output formatter entries in file 364.7 (not re-added)
"RTN","IBY349PR",191,0)
 ;
"RTN","IBY349PR",192,0)
 ;;^32^33^34^35^904^905^906^907^908^909^910^911^912^913^
"RTN","IBY349PR",193,0)
 ;;
"RTN","IBY349PR",194,0)
 ;
"RTN","IBY349PR",195,0)
 Q
"RTN","IBY349PR",196,0)
 ;
"UP",2,2.312,-1)
2^.312
"UP",2,2.312,0)
2.312
"UP",364.4,364.41,-1)
364.4^BTYP
"UP",364.4,364.41,0)
364.41
"UP",399,399.0304,-1)
399^CP
"UP",399,399.0304,0)
399.0304
"UP",399,399.042,-1)
399^RC
"UP",399,399.042,0)
399.042
"VER")
8.0^22.0
"^DD",2,2.312,2.015,0)
SUBSCRIBER'S EMPLOYER NAME^F^^2;9^K:$L(X)>30!($L(X)<3) X
"^DD",2,2.312,2.015,3)
Answer must be 3-30 characters in length.  This is the name of the subsriber's employer that will appear on the UB-04 if this employer pre-processes insurance claims.
"^DD",2,2.312,2.015,21,0)
^^2^2^3070115^
"^DD",2,2.312,2.015,21,1,0)
This is the name of the employer that will appear on the UB-04 if the
"^DD",2,2.312,2.015,21,2,0)
bills should be sent to the employer for pre-processing.
"^DD",2,2.312,2.015,"DT")
3070115
"^DD",36,36,.11,0)
*HOSPITAL PROVIDER NUMBER^F^^0;11^K:$L(X)>15!($L(X)<1) X
"^DD",36,36,.11,3)
Answer must be 1-15 characters in length.
"^DD",36,36,.11,21,0)
^^5^5^3070116^
"^DD",36,36,.11,21,1,0)
An identifier assigned to the facility by the insurance company.
"^DD",36,36,.11,21,2,0)
It will be printed in form locator 51 of the UB-92 of bills for this
"^DD",36,36,.11,21,3,0)
insurance company.
"^DD",36,36,.11,21,4,0)
 
"^DD",36,36,.11,21,5,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",36,36,.11,23,0)
^^3^3^3070116^
"^DD",36,36,.11,23,1,0)
Printed in form locator 51 of the UB-92
"^DD",36,36,.11,23,2,0)
 
"^DD",36,36,.11,23,3,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",36,36,.11,"DT")
3070116
"^DD",36,36,.14,0)
*FORM TYPE^*P353'^IBE(353,^0;14^S DIC("S")="I $P($G(^(2)),U,4)'=0,$P($G(^(2)),U,2)=""P""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",36,36,.14,3)
Enter the primary Form Type desired by this Insurance Company.
"^DD",36,36,.14,12)
The form must be a national/print-type form
"^DD",36,36,.14,12.1)
S DIC("S")="I $P($G(^(2)),U,4)'=0,$P($G(^(2)),U,2)=""P"""
"^DD",36,36,.14,21,0)
^^9^9^3070116^
"^DD",36,36,.14,21,1,0)
This is the primary form type for the insurance company.  An entry is
"^DD",36,36,.14,21,2,0)
needed only if the primary form type for this insurance company is
"^DD",36,36,.14,21,3,0)
different than the Default Form Type site parameter.
"^DD",36,36,.14,21,4,0)
 
"^DD",36,36,.14,21,5,0)
Used for the conversion from the UB-82 to the UB-92.  If this is set to
"^DD",36,36,.14,21,6,0)
either of those form types then all UB bills for this insurance
"^DD",36,36,.14,21,7,0)
company will be printed on that form.
"^DD",36,36,.14,21,8,0)
 
"^DD",36,36,.14,21,9,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",36,36,.14,23,0)
^^4^4^3070116^
"^DD",36,36,.14,23,1,0)
Set up initially because companies are converting to the UB-92 at
"^DD",36,36,.14,23,2,0)
different times and once they do they will no longer accept the UB-82.
"^DD",36,36,.14,23,3,0)
 
"^DD",36,36,.14,23,4,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",36,36,.14,"DT")
3070116
"^DD",36,36,4.02,0)
PERF PROV SECOND ID TYPE UB^*P355.97'^IBE(355.97,^4;2^S DIC("S")="I $P(^(0),U,3)'=""TJ"",$$RAINS^IBCEPU(Y)!($$RAOWN^IBCEPU(Y))" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",36,36,4.02,3)
Enter the type of performing provider id # the insurance co requires on its UB-04 bills
"^DD",36,36,4.02,12)
Must be valid id type for performing provider id.
"^DD",36,36,4.02,12.1)
S DIC("S")="I $P(^(0),U,3)'=""TJ"",$$RAINS^IBCEPU(Y)!($$RAOWN^IBCEPU(Y))"
"^DD",36,36,4.02,21,0)
^^4^4^3070116^
"^DD",36,36,4.02,21,1,0)
This is the type of performing provider id # that the insurance
"^DD",36,36,4.02,21,2,0)
company expects on UB-04 bills received from the V.A.  When the
"^DD",36,36,4.02,21,3,0)
payer-specific provider id is extracted, this field is used to 
"^DD",36,36,4.02,21,4,0)
determine where to get the data from.
"^DD",36,36,4.02,"DT")
3070116
"^DD",36,36,4.03,0)
SECONDARY ID REQUIREMENTS^S^0:NONE REQUIRED;1:CMS-1500 REQUIRED;2:UB-04 REQUIRED;3:BOTH UB-04 AND CMS-1500 REQUIRED;^4;3^Q
"^DD",36,36,4.03,3)
Enter the code to specify the secondary performing provider id requirement for this ins co by form type
"^DD",36,36,4.03,21,0)
^^2^2^3070116^
"^DD",36,36,4.03,21,1,0)
This field is used to identify if the insurance company requires the
"^DD",36,36,4.03,21,2,0)
performing provider secondary id on the UB-04, the CMS-1500 or both.
"^DD",36,36,4.03,"DT")
3070116
"^DD",350.8,350.8,0)
FIELD^^10^7
"^DD",350.8,350.8,0,"DDA")
N
"^DD",350.8,350.8,0,"DT")
2930322
"^DD",350.8,350.8,0,"ID",.03)
W "   ",$P(^(0),U,3)
"^DD",350.8,350.8,0,"IX","AC",350.8,.03)

"^DD",350.8,350.8,0,"IX","B",350.8,.01)

"^DD",350.8,350.8,0,"IX","C",350.8,.03)

"^DD",350.8,350.8,0,"NM","IB ERROR")
 
"^DD",350.8,350.8,0,"VRPK")
IB
"^DD",350.8,350.8,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",350.8,350.8,.01,1,0)
^.1
"^DD",350.8,350.8,.01,1,1,0)
350.8^B
"^DD",350.8,350.8,.01,1,1,1)
S ^IBE(350.8,"B",$E(X,1,30),DA)=""
"^DD",350.8,350.8,.01,1,1,2)
K ^IBE(350.8,"B",$E(X,1,30),DA)
"^DD",350.8,350.8,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",350.8,350.8,.01,21,0)
^^2^2^2910305^^
"^DD",350.8,350.8,.01,21,1,0)
This is a free text name of the entry.  It should be namespaced with
"^DD",350.8,350.8,.01,21,2,0)
the namespace of the package reporting the error.
"^DD",350.8,350.8,.02,0)
ERROR MESSAGE^F^^0;2^K:$L(X)>80!($L(X)<3) X
"^DD",350.8,350.8,.02,3)
Answer must be 3-80 characters in length.
"^DD",350.8,350.8,.02,21,0)
^^3^3^2940209^^^^
"^DD",350.8,350.8,.02,21,1,0)
This is the text of the message as it will be displayed to a user or
"^DD",350.8,350.8,.02,21,2,0)
posted in a bulletin.  It should be as meaningful as possible to the
"^DD",350.8,350.8,.02,21,3,0)
person seeing the message.
"^DD",350.8,350.8,.03,0)
ERROR CODE^F^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>9!($L(X)<1) X
"^DD",350.8,350.8,.03,1,0)
^.1
"^DD",350.8,350.8,.03,1,1,0)
350.8^AC
"^DD",350.8,350.8,.03,1,1,1)
S ^IBE(350.8,"AC",$E(X,1,30),DA)=""
"^DD",350.8,350.8,.03,1,1,2)
K ^IBE(350.8,"AC",$E(X,1,30),DA)
"^DD",350.8,350.8,.03,1,2,0)
350.8^C
"^DD",350.8,350.8,.03,1,2,1)
S ^IBE(350.8,"C",$E(X,1,30),DA)=""
"^DD",350.8,350.8,.03,1,2,2)
K ^IBE(350.8,"C",$E(X,1,30),DA)
"^DD",350.8,350.8,.03,3)
Answer must be 1-9 characters in length.
"^DD",350.8,350.8,.03,21,0)
^^9^9^2920219^^^^
"^DD",350.8,350.8,.03,21,1,0)
This is the error code that will be passed to or determined by
"^DD",350.8,350.8,.03,21,2,0)
Integrated Billing.  The format for the Error Code should be
"^DD",350.8,350.8,.03,21,3,0)
nnxxx, where nn is the reporting package namespace and xxx are numeric
"^DD",350.8,350.8,.03,21,4,0)
values.
"^DD",350.8,350.8,.03,21,5,0)
 
"^DD",350.8,350.8,.03,21,6,0)
This is the error code that will be passed as the second piece of
"^DD",350.8,350.8,.03,21,7,0)
the variable Y to IB when +Y=-1.  More than one error code can be
"^DD",350.8,350.8,.03,21,8,0)
placed in the second ^ piece of Y delimited by semi-colons.  Applications
"^DD",350.8,350.8,.03,21,9,0)
may call ^IBAERR to display the error message(s).
"^DD",350.8,350.8,.03,"DT")
2920219
"^DD",350.8,350.8,.04,0)
PACKAGE REPORTING ERROR^S^1:INTEGRATED BILLING;2:ACCOUNTS RECEIVABLE;3:PHARMACY;^0;4^Q
"^DD",350.8,350.8,.04,21,0)
^^2^2^2920415^^^
"^DD",350.8,350.8,.04,21,1,0)
This is the package that requested this entry in this file and will
"^DD",350.8,350.8,.04,21,2,0)
report it to IB as an error if the conditions are detected.
"^DD",350.8,350.8,.05,0)
ERROR ACTION^S^1:DISPLAY MESSAGE;2:SEND BULLETIN;3:EDIT FILE;^0;5^Q
"^DD",350.8,350.8,.05,21,0)
^^6^6^2910227^
"^DD",350.8,350.8,.05,21,1,0)
This is the type of action that should be taken when this error is
"^DD",350.8,350.8,.05,21,2,0)
reported to IB.  If action other than displaying a message is indicated
"^DD",350.8,350.8,.05,21,3,0)
then the MUMPS code in the ERROR ACTION field will be executed.
"^DD",350.8,350.8,.05,21,4,0)
 
"^DD",350.8,350.8,.05,21,5,0)
Currently only display actions are implemented.  Please contact the 
"^DD",350.8,350.8,.05,21,6,0)
developing ISC if other action types are desired.
"^DD",350.8,350.8,.06,0)
CORRESPONDING ALERT^P354.5'^IBE(354.5,^0;6^Q
"^DD",350.8,350.8,.06,21,0)
^^1^1^2940209^
"^DD",350.8,350.8,.06,21,1,0)
This is the type of alert that should be sent when this error occurs.
"^DD",350.8,350.8,.06,"DT")
2930322
"^DD",350.8,350.8,10,0)
EXECUTABLE LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",350.8,350.8,10,3)
This is Standard MUMPS code.
"^DD",350.8,350.8,10,21,0)
^^2^2^2910227^
"^DD",350.8,350.8,10,21,1,0)
This is the MUMPS code that will be executed if an error is reported
"^DD",350.8,350.8,10,21,2,0)
with an ERROR ACTION of other than to display a message.
"^DD",350.9,350.9,1.04,0)
REMARKS TO APPEAR ON EACH FORM^F^^1;4^K:$L(X)>39!($L(X)<2) X
"^DD",350.9,350.9,1.04,3)
Enter any facility specific remarks to appear in the CCOM segment of the electronic transmission. Answer must be 2-39 characters in length.
"^DD",350.9,350.9,1.04,21,0)
^^2^2^3070209^
"^DD",350.9,350.9,1.04,21,1,0)
This remark will appear in the CCOM segment of the electronic 
"^DD",350.9,350.9,1.04,21,2,0)
transmission.
"^DD",350.9,350.9,1.04,"DT")
3070209
"^DD",350.9,350.9,1.05,0)
FEDERAL TAX NUMBER^RF^^1;5^K:$L(X)>10!($L(X)<10)!'(X?2N1"-"7N) X
"^DD",350.9,350.9,1.05,3)
Enter the federal tax number for your facility in NN-NNNNNNN format.  Answer must be 10 characters in length.
"^DD",350.9,350.9,1.05,21,0)
^^2^2^3061215^^^^
"^DD",350.9,350.9,1.05,21,1,0)
This is your facility federal tax number.  If unknown, this may be obtained
"^DD",350.9,350.9,1.05,21,2,0)
from your Fiscal Service.
"^DD",350.9,350.9,1.05,23,0)
^^2^2^3061215^
"^DD",350.9,350.9,1.05,23,1,0)
This is not editable from the billing screens.  Printed in Form Locator 5
"^DD",350.9,350.9,1.05,23,2,0)
of the UB-04.
"^DD",350.9,350.9,1.05,"DT")
3061215
"^DD",350.9,350.9,1.31,0)
UB-04 ADDRESS COLUMN^NJ2,0^^1;31^K:+X'=X!(X>30)!(X<1)!(X?.E1"."1.N) X
"^DD",350.9,350.9,1.31,3)
Type a number between 1 and 30, 0 Decimal Digits
"^DD",350.9,350.9,1.31,21,0)
^^7^7^3061127^
"^DD",350.9,350.9,1.31,21,1,0)
This is the column on which the Mailing Address should begin printing on
"^DD",350.9,350.9,1.31,21,2,0)
the UB-04.  The purpose of this field is to help in placing the mailing
"^DD",350.9,350.9,1.31,21,3,0)
address in the area required so that it is visible through the envelope
"^DD",350.9,350.9,1.31,21,4,0)
window.  Please note that the UB-04 Mailing Address block (FL 38) has a
"^DD",350.9,350.9,1.31,21,5,0)
maximum width of 42 characters.  The number entered here will cause the
"^DD",350.9,350.9,1.31,21,6,0)
address to be moved to the right and therefore the allowable width of
"^DD",350.9,350.9,1.31,21,7,0)
the mailing address will be reduced.
"^DD",350.9,350.9,1.31,"DT")
3061127
"^DD",350.9,350.9,1.33,0)
UB-04 PRINT LEGACY ID^S^Y:YES;N:NO;C:CONDITIONAL;^1;33^Q
"^DD",350.9,350.9,1.33,21,0)
^^8^8^3061127^
"^DD",350.9,350.9,1.33,21,1,0)
This parameter determines whether legacy (example: IDs furnished by
"^DD",350.9,350.9,1.33,21,2,0)
an Insurance Company) Provider IDs will appear on locally printed UB
"^DD",350.9,350.9,1.33,21,3,0)
claims.
"^DD",350.9,350.9,1.33,21,4,0)
         
"^DD",350.9,350.9,1.33,21,5,0)
YES         - Legacy IDs will always be printed.  
"^DD",350.9,350.9,1.33,21,6,0)
NO          - Legacy IDs will never be printed.
"^DD",350.9,350.9,1.33,21,7,0)
CONDITIONAL - Legacy IDs will be printed only when
"^DD",350.9,350.9,1.33,21,8,0)
              no NPIs are available.
"^DD",350.9,350.9,1.33,"DT")
3061127
"^DD",350.9,350.9,2.1,0)
FACILITY NAME FOR BILLING^RF^^2;10^K:$L(X)>18!($L(X)<1)!'($TR(X," ")?.A) X
"^DD",350.9,350.9,2.1,3)
Enter your Facility Name for Billing.  Answer must be 1-18 alpha characters in length.
"^DD",350.9,350.9,2.1,21,0)
^^2^2^3070116^
"^DD",350.9,350.9,2.1,21,1,0)
This is the Facility Name for Billing that will print on the first line of
"^DD",350.9,350.9,2.1,21,2,0)
the UB-04 form locator 2 and in box 33 of the CMS-1500.
"^DD",350.9,350.9,2.1,"DT")
3070116
"^DD",353,353,.03,0)
FOLLOW-UP PRINTER (A/R)^FX^^0;3^S IBL=X,X=$P(X,";"),DIC=3.5,DIC(0)="EQ" D ^DIC K:Y'>0!(X=" ") X S:$D(X) X=X_$S(IBL[";":";"_$P(IBL,";",2,99),1:"") K IBL S DIC=DIE
"^DD",353,353,.03,3)
Enter the device that is the default printer for follow-up bills for this form type.
"^DD",353,353,.03,4)
S DIC=3.5,DIC(0)="E",X="?" D ^DIC S DIC=DIE
"^DD",353,353,.03,21,0)
^^2^2^3070116^^
"^DD",353,353,.03,21,1,0)
For forms other than the UB-04, this is the default printer that has this
"^DD",353,353,.03,21,2,0)
form mounted for follow-up letter/forms for Accounts Receivable.
"^DD",353,353,.03,"DT")
3070116
"^DD",355.9,355.9,.04,0)
FORM TYPE APPLIED TO^RS^0:BOTH UB-04 AND CMS-1500 FORMS;1:UB-04 FORMS ONLY;2:CMS-1500 FORMS ONLY;^0;4^Q
"^DD",355.9,355.9,.04,3)
Enter the form types that this id # will apply to.
"^DD",355.9,355.9,.04,21,0)
^^2^2^3070116^
"^DD",355.9,355.9,.04,21,1,0)
This designates whether the id number is to be used for just
"^DD",355.9,355.9,.04,21,2,0)
UB-04 form types, just CMS-1500 form types or both form types.
"^DD",355.9,355.9,.04,"DT")
3070116
"^DD",355.91,355.91,.04,0)
FORM TYPE APPLIED TO^RS^0:BOTH UB-04 AND CMS-1500 FORMS;1:UB-04 FORMS ONLY;2:CMS-1500 FORMS ONLY;^0;4^Q
"^DD",355.91,355.91,.04,3)
Select one or both forms that the provider id will apply to.
"^DD",355.91,355.91,.04,21,0)
^^2^2^3070116^
"^DD",355.91,355.91,.04,21,1,0)
This designates whether the id number is to be used for just
"^DD",355.91,355.91,.04,21,2,0)
UB-04 form types, just CMS-1500 form types or both form types.
"^DD",355.91,355.91,.04,"DT")
3070116
"^DD",355.92,355.92,.04,0)
FORM TYPE APPLIED TO^RS^0:BOTH UB-04 AND CMS-1500 FORMS;1:UB-04 FORMS ONLY;2:CMS-1500 ONLY;3:PRESCRIPTION ONLY;^0;4^Q
"^DD",355.92,355.92,.04,3)
Select one or both forms that the facility id will apply to.
"^DD",355.92,355.92,.04,21,0)
^^2^2^3070116^
"^DD",355.92,355.92,.04,21,1,0)
This designates whether the id number is to be used for just
"^DD",355.92,355.92,.04,21,2,0)
UB-04 form types, just CMS-1500 form types or both form types.
"^DD",355.92,355.92,.04,"DT")
3070116
"^DD",355.96,355.96,.04,0)
FORM TYPE APPLIED TO^RS^0:BOTH UB-04 AND CMS-1500 FORMS;1:UB-04 FORM ONLY;2:CMS-1500 FORM ONLY;^0;4^Q
"^DD",355.96,355.96,.04,3)
Select one or both forms that the provider id will apply to.
"^DD",355.96,355.96,.04,5,1,0)
355.96^.01^2
"^DD",355.96,355.96,.04,21,0)
^^2^2^3070116^
"^DD",355.96,355.96,.04,21,1,0)
This designates whether the id number is to be used for just
"^DD",355.96,355.96,.04,21,2,0)
UB-04 form types, just CMS-1500 form types or both form types.
"^DD",355.96,355.96,.04,"DT")
3070116
"^DD",364.1,364.1,.06,0)
BILL TYPE^S^2:CMS-1500 (PROF);3:UB-04 (INST);^0;6^Q
"^DD",364.1,364.1,.06,3)
ENTER THE TYPE OF BILL CONTAINED IN THIS BATCH
"^DD",364.1,364.1,.06,21,0)
^^1^1^3070116^^
"^DD",364.1,364.1,.06,21,1,0)
THIS IS THE TYPE OF BILL THAT IS CONTAINED IN THIS BATCH
"^DD",364.1,364.1,.06,"DT")
3070116
"^DD",364.4,364.4,.05,0)
FORM TYPE^RS^1:INSTITUTIONAL (UB-04) only;2:PROFESSIONAL (CMS-1500) only;3:Both INST (UB-04) and PROF (CMS-1500);^0;5^Q
"^DD",364.4,364.4,.05,1,0)
^.1^^0
"^DD",364.4,364.4,.05,3)
Select the form type this rule will apply to
"^DD",364.4,364.4,.05,21,0)
^^1^1^3070116^^
"^DD",364.4,364.4,.05,21,1,0)
This is the form type that the rule will be executed for.
"^DD",364.4,364.4,.05,"DT")
3070116
"^DD",364.4,364.4,.1,0)
BILL TYPE RESTRICTIONS^364.41A^^BTYP;0
"^DD",364.4,364.4,.1,"DT")
2990429
"^DD",364.4,364.4,.11,0)
TYPE OF RULE^RS^0:LIMIT TO FORM TYPE;1:LIMIT TO SOME BILL TYPES;2:MRA REQUEST RESTRICTIONS;9:LOCALLY DEFINED;^0;11^Q
"^DD",364.4,364.4,.11,1,0)
^.1
"^DD",364.4,364.4,.11,1,1,0)
364.4^AC
"^DD",364.4,364.4,.11,1,1,1)
S ^IBE(364.4,"AC",$E(X,1,30),DA)=""
"^DD",364.4,364.4,.11,1,1,2)
K ^IBE(364.4,"AC",$E(X,1,30),DA)
"^DD",364.4,364.4,.11,1,1,3)
Please don't delete
"^DD",364.4,364.4,.11,1,1,"%D",0)
^^2^2^2990420^
"^DD",364.4,364.4,.11,1,1,"%D",1,0)
This xref allows a check on all rules of the same type for conflict checking
"^DD",364.4,364.4,.11,1,1,"%D",2,0)
purposes.
"^DD",364.4,364.4,.11,1,1,"DT")
2990420
"^DD",364.4,364.4,.11,3)
Select the 'type' of rule this is.
"^DD",364.4,364.4,.11,21,0)
^^31^31^3070116^
"^DD",364.4,364.4,.11,21,1,0)
This flag puts the rule into a 'type' category for conflict checking.  It
"^DD",364.4,364.4,.11,21,2,0)
is also a flag that can indicate this rule needs to be executed to
"^DD",364.4,364.4,.11,21,3,0)
determine if an MRA request is valid for the MEDIGAP insurance that is
"^DD",364.4,364.4,.11,21,4,0)
next in line for COB or if the claim should be directly shuttled to the
"^DD",364.4,364.4,.11,21,5,0)
MEDIGAP carrier.
"^DD",364.4,364.4,.11,21,6,0)
 
"^DD",364.4,364.4,.11,21,7,0)
TYPE OF RULE = 0 (LIMIT TO FORM TYPES) is used to further limit the
"^DD",364.4,364.4,.11,21,8,0)
transmission of PROFESSIONAL (CMS-1500) or INSTITUTIONAL (UB-04) form
"^DD",364.4,364.4,.11,21,9,0)
types. If you pick one form type, no bills of the other form type will be
"^DD",364.4,364.4,.11,21,10,0)
transmitted for:
"^DD",364.4,364.4,.11,21,11,0)
a) the insurance companies you selected to include   OR
"^DD",364.4,364.4,.11,21,12,0)
b) the insurance companies not entered on the excluded list  OR
"^DD",364.4,364.4,.11,21,13,0)
c) any insurance co if all insurance companies are selected.
"^DD",364.4,364.4,.11,21,14,0)
 
"^DD",364.4,364.4,.11,21,15,0)
TYPE OF RULE = 1 (LIMIT TO SOME BILL TYPES) is used to further limit the
"^DD",364.4,364.4,.11,21,16,0)
transmission of the UB-04 equivalent of bill type (111,131,etc).  These
"^DD",364.4,364.4,.11,21,17,0)
rules can be used to restrict transmissions to specific bill types or to
"^DD",364.4,364.4,.11,21,18,0)
allow all bill types except those specified (these are entered preceeded
"^DD",364.4,364.4,.11,21,19,0)
by a dash).  A 'wild card' character of X can be used to indicate that a
"^DD",364.4,364.4,.11,21,20,0)
character in that position is included (ie 11X will allow 111,112,113,etc)
"^DD",364.4,364.4,.11,21,21,0)
The rule will not allow transmission of bills matching the EDI/MRA and
"^DD",364.4,364.4,.11,21,22,0)
PROF/INST parameters and insurance co restrictions (see rule 0 above)
"^DD",364.4,364.4,.11,21,23,0)
unless they match the allowed bill types and do not match any of the
"^DD",364.4,364.4,.11,21,24,0)
excluded bill types.
"^DD",364.4,364.4,.11,21,25,0)
 
"^DD",364.4,364.4,.11,21,26,0)
TYPE OF RULE = 9 (LOCAL EDITS) are local edits.  If this type of rule is
"^DD",364.4,364.4,.11,21,27,0)
used, the code entered for the edit must return a truth value of 1 if the
"^DD",364.4,364.4,.11,21,28,0)
bill should be transmitted or 0 if the bill should not be transmitted.
"^DD",364.4,364.4,.11,21,29,0)
The variable IBIFN is the internal entry # of the bill (file 399), the
"^DD",364.4,364.4,.11,21,30,0)
IB(x) array contains the value of fields #.03,.04,.05,.07,.11 for the
"^DD",364.4,364.4,.11,21,31,0)
rule where 'x' is the field #. IBDA is the ien of the rule (file 364.4).
"^DD",364.4,364.4,.11,"DT")
3070116
"^DD",364.4,364.41,0)
BILL TYPE RESTRICTIONS SUB-FIELD^^.03^3
"^DD",364.4,364.41,0,"NM","BILL TYPE RESTRICTIONS")

"^DD",364.4,364.41,.01,0)
BILL TYPE^MRF^^0;1^K:$L(X)>4!($L(X)<3)!'(X?1"-"2N1"X"!(X?2N1"X")!(X?1"-"1N2"X")!(X?1N2"X")!(X?1"-"3N)!(X?3N)!(X?3"X")) X
"^DD",364.4,364.41,.01,1,0)
^.1
"^DD",364.4,364.41,.01,1,1,0)
364.41^B
"^DD",364.4,364.41,.01,1,1,1)
S ^IBE(364.4,DA(1),"BTYP","B",$E(X,1,30),DA)=""
"^DD",364.4,364.41,.01,1,1,2)
K ^IBE(364.4,DA(1),"BTYP","B",$E(X,1,30),DA)
"^DD",364.4,364.41,.01,3)
Answer must be 3-4 characters in length.
"^DD",364.4,364.41,.01,21,0)
^^4^4^3070116^
"^DD",364.4,364.41,.01,21,1,0)
This field contains the UB-04 type of bill that should only be transmitted
"^DD",364.4,364.41,.01,21,2,0)
electronically.  It needs to be entered in a 3-digit format.  The first
"^DD",364.4,364.41,.01,21,3,0)
digit must be numeric, but the second and third digits can be an X to
"^DD",364.4,364.41,.01,21,4,0)
indicate any number in that position applies (11X would include 111-119).
"^DD",364.4,364.41,.01,"DT")
3070116
"^DD",364.5,364.5,0)
FIELD^^3^11
"^DD",364.5,364.5,0,"DDA")
N
"^DD",364.5,364.5,0,"DT")
2960311
"^DD",364.5,364.5,0,"ID",.05)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DIC(+$P(^(0),U,5),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(1,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.5,364.5,0,"IX","B",364.5,.01)

"^DD",364.5,364.5,0,"NM","IB DATA ELEMENT DEFINITION")

"^DD",364.5,364.5,0,"PT",364.7,.03)

"^DD",364.5,364.5,0,"VRPK")
IB
"^DD",364.5,364.5,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",364.5,364.5,.01,1,0)
^.1
"^DD",364.5,364.5,.01,1,1,0)
364.5^B
"^DD",364.5,364.5,.01,1,1,1)
S ^IBA(364.5,"B",$E(X,1,30),DA)=""
"^DD",364.5,364.5,.01,1,1,2)
K ^IBA(364.5,"B",$E(X,1,30),DA)
"^DD",364.5,364.5,.01,3)
Answer must be 3-30 characters in length.
"^DD",364.5,364.5,.01,21,0)
^^1^1^2951205^
"^DD",364.5,364.5,.01,21,1,0)
The name to be used to uniquely identify this data element.
"^DD",364.5,364.5,.01,"DT")
2951219
"^DD",364.5,364.5,.02,0)
SECURITY LEVEL^RS^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.5,364.5,.02,21,0)
^^2^2^2960215^^^^
"^DD",364.5,364.5,.02,21,1,0)
If this field is set to N (NATIONAL,NO EDIT), this is a secured data
"^DD",364.5,364.5,.02,21,2,0)
element and will not be allowed to be edited or deleted.
"^DD",364.5,364.5,.02,"DT")
2960215
"^DD",364.5,364.5,.03,0)
TYPE OF ELEMENT^RS^F:NON-MULTIPLE FILEMAN FIELD;E:EXTRACTED VIA CODE;C:CONSTANT VALUE;^0;3^Q
"^DD",364.5,364.5,.03,1,0)
^.1
"^DD",364.5,364.5,.03,1,1,0)
^^TRIGGER^364.5^.04
"^DD",364.5,364.5,.03,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X="FC",Y(1)=X S X=Y(0),X=X S Y=X,X=Y(1),X=X S X=X[Y I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X="I" X ^DD(364.5,.03,1,1,1.4)
"^DD",364.5,364.5,.03,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=364.5,DIG=.04 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,1,2)
Q
"^DD",364.5,364.5,.03,1,1,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,1,"%D",0)
^^1^1^2960215^
"^DD",364.5,364.5,.03,1,1,"%D",1,0)
If TYPE OF ELEMENT is 'F' or 'C' then ELEMENT CATEGORY must be 'I'. 
"^DD",364.5,364.5,.03,1,1,"CREATE CONDITION")
"FC"[INTERNAL(TYPE OF ELEMENT)
"^DD",364.5,364.5,.03,1,1,"CREATE VALUE")
S X="I"
"^DD",364.5,364.5,.03,1,1,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,1,"DT")
2960215
"^DD",364.5,364.5,.03,1,1,"FIELD")
ELEMENT CATEGORY
"^DD",364.5,364.5,.03,1,2,0)
^^TRIGGER^364.5^.06
"^DD",364.5,364.5,.03,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="F" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,2,1.4)
"^DD",364.5,364.5,.03,1,2,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.5,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,2,2)
Q
"^DD",364.5,364.5,.03,1,2,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,2,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,2,"%D",1,0)
This triggers the FILEMAN FIELD REFERENCE field to null if the element type
"^DD",364.5,364.5,.03,1,2,"%D",2,0)
is not FILEMAN field type of element.
"^DD",364.5,364.5,.03,1,2,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="F"
"^DD",364.5,364.5,.03,1,2,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,2,"DT")
2960215
"^DD",364.5,364.5,.03,1,2,"FIELD")
FILEMAN FIELD REFERENCE
"^DD",364.5,364.5,.03,1,3,0)
^^TRIGGER^364.5^.08
"^DD",364.5,364.5,.03,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="C" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,3,1.4)
"^DD",364.5,364.5,.03,1,3,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=364.5,DIG=.08 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,3,2)
Q
"^DD",364.5,364.5,.03,1,3,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,3,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,3,"%D",1,0)
This triggers the CONSTANT VALUE field to null if the element type is not
"^DD",364.5,364.5,.03,1,3,"%D",2,0)
CONSTANT type of element.
"^DD",364.5,364.5,.03,1,3,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="C"
"^DD",364.5,364.5,.03,1,3,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,3,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,3,"DT")
2960215
"^DD",364.5,364.5,.03,1,3,"FIELD")
CONSTANT VALUE
"^DD",364.5,364.5,.03,1,4,0)
^^TRIGGER^364.5^1
"^DD",364.5,364.5,.03,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="E" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,1)):^(1),1:"") S X=$E(Y(1),1,245),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,4,1.4)
"^DD",364.5,364.5,.03,1,4,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),1)):^(1),1:""),DIV=X S DE=0-$L(DIH),DIU=$E(DIH,1,245),Y=$E(DIH,246,999),^(1)=$J("",$S(DE>0:DE,1:0))_DIV_$S(Y?." ":"",1:$J("",245-$L(DIV))_Y),DIH=364.5,DIG=1 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,4,2)
Q
"^DD",364.5,364.5,.03,1,4,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,4,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,4,"%D",1,0)
This triggers the EXTRACT CODE field to null if the element type is not an
"^DD",364.5,364.5,.03,1,4,"%D",2,0)
EXTRACTED VIA CODE type of element.
"^DD",364.5,364.5,.03,1,4,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="E"
"^DD",364.5,364.5,.03,1,4,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,4,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,4,"DT")
2960215
"^DD",364.5,364.5,.03,1,4,"FIELD")
EXTRACT CODE
"^DD",364.5,364.5,.03,21,0)
^^3^3^2951207^^
"^DD",364.5,364.5,.03,21,1,0)
The type of data element being defined as needed by one or more forms.  This
"^DD",364.5,364.5,.03,21,2,0)
field determines the type of retrieval needed to get the actual data element's
"^DD",364.5,364.5,.03,21,3,0)
value for a given bill.
"^DD",364.5,364.5,.03,"DT")
2960215
"^DD",364.5,364.5,.04,0)
ELEMENT CATEGORY^RSX^I:INDIVIDUAL ELEMENT;G:GROUP ELEMENT;^0;4^I $P($G(^IBA(364.5,DA,0)),U,3)="F",$G(X)="G" K X
"^DD",364.5,364.5,.04,1,0)
^.1
"^DD",364.5,364.5,.04,1,1,0)
^^TRIGGER^364.5^.06
"^DD",364.5,364.5,.04,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X="G" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.5,.04,1,1,1.4)
"^DD",364.5,364.5,.04,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.5,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.04,1,1,2)
Q
"^DD",364.5,364.5,.04,1,1,"CREATE CONDITION")
INTERNAL(ELEMENT CATEGORY)="G"
"^DD",364.5,364.5,.04,1,1,"CREATE VALUE")
""
"^DD",364.5,364.5,.04,1,1,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.04,1,1,"FIELD")
FILEMAN FIELD REFERENCE
"^DD",364.5,364.5,.04,3)
This indicates an INDIVIDUAL or GROUP of elements will be returned.  Group is not valid for Fileman type elements.
"^DD",364.5,364.5,.04,5,1,0)
364.5^.03^1
"^DD",364.5,364.5,.04,21,0)
^^3^3^2951205^
"^DD",364.5,364.5,.04,21,1,0)
This defines whether the data element to be extracted is a single piece of data
"^DD",364.5,364.5,.04,21,2,0)
or is a string of related data.  Fileman field references must be designated as
"^DD",364.5,364.5,.04,21,3,0)
individual elements.
"^DD",364.5,364.5,.04,"DT")
2960215
"^DD",364.5,364.5,.05,0)
BASE FILE^P1'^DIC(^0;5^Q
"^DD",364.5,364.5,.05,3)
Enter the Fileman file to be used as a 'base' to extract the data from.
"^DD",364.5,364.5,.05,21,0)
^^2^2^2960311^
"^DD",364.5,364.5,.05,21,1,0)
This is the number of the Fileman file to be used as a 'base' to extract
"^DD",364.5,364.5,.05,21,2,0)
data for this field.
"^DD",364.5,364.5,.05,"DT")
2960311
"^DD",364.5,364.5,.06,0)
FILEMAN FIELD REFERENCE^FX^^0;6^K:$L(X)>65!($L(X)<1) X I $D(X),$P($G(^IBA(364.5,DA,0)),U,4)="G" K X
"^DD",364.5,364.5,.06,1,0)
^.1
"^DD",364.5,364.5,.06,1,1,0)
^^TRIGGER^364.5^.07
"^DD",364.5,364.5,.06,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0)="" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(364.5,.06,1,1,1.4)
"^DD",364.5,364.5,.06,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=364.5,DIG=.07 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.06,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(364.5,.06,1,1,2.4)
"^DD",364.5,364.5,.06,1,1,2.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=364.5,DIG=.07 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.06,1,1,"CREATE CONDITION")
FILEMAN FIELD REFERENCE=""
"^DD",364.5,364.5,.06,1,1,"CREATE VALUE")
@
"^DD",364.5,364.5,.06,1,1,"DELETE VALUE")
@
"^DD",364.5,364.5,.06,1,1,"FIELD")
#.07
"^DD",364.5,364.5,.06,3)
Must be a valid Fileman reference and ELEMENT CATEGORY must not be GROUP.
"^DD",364.5,364.5,.06,5,1,0)
364.5^.04^1
"^DD",364.5,364.5,.06,5,2,0)
364.5^.03^2
"^DD",364.5,364.5,.06,21,0)
^^6^6^2951221^^^
"^DD",364.5,364.5,.06,21,1,0)
The valid Fileman field reference or simple Fileman navigation to be used
"^DD",364.5,364.5,.06,21,2,0)
to extract using the $$GET^DIQ utility. Note this will not return true
"^DD",364.5,364.5,.06,21,3,0)
multiple entries.  Word-processing type fields are able to be retrieved,
"^DD",364.5,364.5,.06,21,4,0)
however.  No syntax check is made on this field so the user must be careful
"^DD",364.5,364.5,.06,21,5,0)
to type a valid Fileman expression.  This must be designated as an
"^DD",364.5,364.5,.06,21,6,0)
INDIVIDUAL element, not a group element.
"^DD",364.5,364.5,.06,"DT")
2951221
"^DD",364.5,364.5,.07,0)
FILEMAN RETURN FORMAT^S^I:INTERNAL;E:EXTERNAL;^0;7^Q
"^DD",364.5,364.5,.07,5,1,0)
364.5^.06^1
"^DD",364.5,364.5,.07,21,0)
^^5^5^2951205^
"^DD",364.5,364.5,.07,21,1,0)
This is the format for the retrieved data for Fileman-type data elements.  It
"^DD",364.5,364.5,.07,21,2,0)
is recommended to use Internal format whenever possible to keep the data
"^DD",364.5,364.5,.07,21,3,0)
element definitions in this file as generic as possible to avoid duplication.  
"^DD",364.5,364.5,.07,21,4,0)
The format capabilities of the forms generator should be used to interpret and
"^DD",364.5,364.5,.07,21,5,0)
reformat the data element when needed.
"^DD",364.5,364.5,.07,"DT")
2951205
"^DD",364.5,364.5,.08,0)
CONSTANT VALUE^F^^0;8^K:$L(X)>80!($L(X)<1) X
"^DD",364.5,364.5,.08,3)
Answer must be 1-80 characters in length.
"^DD",364.5,364.5,.08,5,1,0)
364.5^.03^3
"^DD",364.5,364.5,.08,21,0)
^^1^1^2951205^
"^DD",364.5,364.5,.08,21,1,0)
The specific value that this data element should return for this data element.
"^DD",364.5,364.5,.08,"DT")
2951205
"^DD",364.5,364.5,1,0)
EXTRACT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.5,364.5,1,3)
This is Standard MUMPS code.
"^DD",364.5,364.5,1,5,1,0)
364.5^.03^4
"^DD",364.5,364.5,1,9)
@
"^DD",364.5,364.5,1,21,0)
^^7^7^2951207^^^
"^DD",364.5,364.5,1,21,1,0)
The code to be executed by the forms generator to return the value(s) of the
"^DD",364.5,364.5,1,21,2,0)
data element.  If no ARRAY ROOT field is completed for this data element, the
"^DD",364.5,364.5,1,21,3,0)
code should set the variable IBXDATA or the array IBXDATA(1) through IBXDATA(n)
"^DD",364.5,364.5,1,21,4,0)
where n=the total # of iterations of the data element retrieved.  If the ARRAY 
"^DD",364.5,364.5,1,21,5,0)
ROOT field has been completed for this data element, this code should set the
"^DD",364.5,364.5,1,21,6,0)
variable referenced there.  IBXIEN is assumed to be the internal entry number
"^DD",364.5,364.5,1,21,7,0)
of the  file (referenced by the variable IBXFILE) entry.
"^DD",364.5,364.5,1,"DT")
2951205
"^DD",364.5,364.5,2,0)
ARRAY ROOT^F^^2;E1,50^K:$L(X)>50!($L(X)<1) X
"^DD",364.5,364.5,2,3)
Answer must be a valid array root name.
"^DD",364.5,364.5,2,21,0)
^^3^3^2960117^^
"^DD",364.5,364.5,2,21,1,0)
 The local or global base root where multiple-valued output or word processing
"^DD",364.5,364.5,2,21,2,0)
data is to be stored for this data element.  IBXDATA is the default if there
"^DD",364.5,364.5,2,21,3,0)
is no data in this field.  Example of a global array: ^TMP($J)
"^DD",364.5,364.5,2,"DT")
2960117
"^DD",364.5,364.5,3,0)
DESCRIPTION^364.53^^3;0
"^DD",364.5,364.53,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.5,364.53,0,"DT")
2951205
"^DD",364.5,364.53,0,"NM","DESCRIPTION")

"^DD",364.5,364.53,0,"UP")
364.5
"^DD",364.5,364.53,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",364.5,364.53,.01,3)
Enter a description of the data element being defined.
"^DD",364.5,364.53,.01,21,0)
^^1^1^2951205^
"^DD",364.5,364.53,.01,21,1,0)
This is a free text description of the data that this data element represents.
"^DD",364.5,364.53,.01,"DT")
2951205
"^DD",364.6,364.6,0)
FIELD^^.2^14
"^DD",364.6,364.6,0,"DDA")
N
"^DD",364.6,364.6,0,"DT")
3061106
"^DD",364.6,364.6,0,"ID",.04)
W "   ",$P(^(0),U,4)
"^DD",364.6,364.6,0,"ID",.05)
W "   ",$P(^(0),U,5)
"^DD",364.6,364.6,0,"ID",.08)
W "   ",$P(^(0),U,8)
"^DD",364.6,364.6,0,"ID",.1)
W "   ",$P(^(0),U,10)
"^DD",364.6,364.6,0,"IX","APAR",364.6,.01)

"^DD",364.6,364.6,0,"IX","APAR1",364.6,.03)

"^DD",364.6,364.6,0,"IX","ASEQ",364.6,.01)

"^DD",364.6,364.6,0,"IX","ASEQ1",364.6,.04)

"^DD",364.6,364.6,0,"IX","ASEQ2",364.6,.05)

"^DD",364.6,364.6,0,"IX","ASEQ3",364.6,.08)

"^DD",364.6,364.6,0,"IX","B",364.6,.01)

"^DD",364.6,364.6,0,"IX","C",364.6,.1)

"^DD",364.6,364.6,0,"IX","GUS",364.6,.2)

"^DD",364.6,364.6,0,"NM","IB FORM SKELETON DEFINITION")
 
"^DD",364.6,364.6,0,"PT",364.6,.03)

"^DD",364.6,364.6,0,"PT",364.6,.2)

"^DD",364.6,364.6,0,"PT",364.7,.01)

"^DD",364.6,364.6,0,"VRPK")
IB
"^DD",364.6,364.6,.01,0)
BILL FORM^RP353'X^IBE(353,^0;1^I $$DUP^IBCEFG0($G(DA),X,1) K X
"^DD",364.6,364.6,.01,1,0)
^.1
"^DD",364.6,364.6,.01,1,1,0)
364.6^B
"^DD",364.6,364.6,.01,1,1,1)
S ^IBA(364.6,"B",$E(X,1,30),DA)=""
"^DD",364.6,364.6,.01,1,1,2)
K ^IBA(364.6,"B",$E(X,1,30),DA)
"^DD",364.6,364.6,.01,1,2,0)
364.6^ASEQ^MUMPS
"^DD",364.6,364.6,.01,1,2,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)=""
"^DD",364.6,364.6,.01,1,2,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)
"^DD",364.6,364.6,.01,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,2,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.01,1,2,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.01,1,2,"DT")
2960116
"^DD",364.6,364.6,.01,1,3,0)
364.6^APAR^MUMPS
"^DD",364.6,364.6,.01,1,3,1)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X S ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)=""
"^DD",364.6,364.6,.01,1,3,2)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X K ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)
"^DD",364.6,364.6,.01,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,3,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.01,1,3,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.01,1,3,"DT")
2960117
"^DD",364.6,364.6,.01,1,4,0)
^^TRIGGER^364.6^.03
"^DD",364.6,364.6,.01,1,4,1)
X ^DD(364.6,.01,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$S('$D(D0):"",D0<0:"",1:D0) X ^DD(364.6,.01,1,4,1.4)
"^DD",364.6,364.6,.01,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,69.2) S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,1.4)
S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2)
X ^DD(364.6,.01,1,4,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,79.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,4,69.2)
S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3),Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"")
"^DD",364.6,364.6,.01,1,4,79.2)
S I(0,0)=$G(D0),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3)
"^DD",364.6,364.6,.01,1,4,"%D",0)
^^1^1^3000613^
"^DD",364.6,364.6,.01,1,4,"%D",1,0)
This trigger is needed for the local screen 9 logic to work correctly.
"^DD",364.6,364.6,.01,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"CREATE VALUE")
NUMBER
"^DD",364.6,364.6,.01,1,4,"DELETE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"DELETE VALUE")
@
"^DD",364.6,364.6,.01,1,4,"DT")
3000613
"^DD",364.6,364.6,.01,1,4,"FIELD")
ASSOCIATED FORM DEFINITION
"^DD",364.6,364.6,.01,3)
Enter a BILLING FORM that the data element will appear on.
"^DD",364.6,364.6,.01,21,0)
^^2^2^2960318^^^^
"^DD",364.6,364.6,.01,21,1,0)
Identifies a billing 'form' or 'screen' where the data element is used.
"^DD",364.6,364.6,.01,21,2,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.01,"DT")
3000613
"^DD",364.6,364.6,.02,0)
SECURITY LEVEL^SX^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^I X="N",$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.02,3)
Enter an N if no editing is allowed, L if editing is OK because this entry is associated with a locally defined form.
"^DD",364.6,364.6,.02,5,1,0)
364.6^.03^7
"^DD",364.6,364.6,.02,21,0)
^.001^4^4^3001030^^
"^DD",364.6,364.6,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  If
"^DD",364.6,364.6,.02,21,2,0)
the security level of the entry is NATIONAL (N), no local editing is
"^DD",364.6,364.6,.02,21,3,0)
allowed.  If the security level of the entry is LOCAL (L), it may be
"^DD",364.6,364.6,.02,21,4,0)
edited.
"^DD",364.6,364.6,.02,"DT")
2960117
"^DD",364.6,364.6,.03,0)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"^DD",364.6,364.6,.03,1,0)
^.1
"^DD",364.6,364.6,.03,1,1,0)
364.6^APAR1^MUMPS
"^DD",364.6,364.6,.03,1,1,1)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X S ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.03,1,1,2)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X K ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)
"^DD",364.6,364.6,.03,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,1,1,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.03,1,1,"DT")
2960117
"^DD",364.6,364.6,.03,1,2,0)
^^TRIGGER^364.6^.04
"^DD",364.6,364.6,.03,1,2,1)
X ^DD(364.6,.03,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,2,1.4)
"^DD",364.6,364.6,.03,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,2,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=364.6,DIG=.04 D ^DICR
"^DD",364.6,364.6,.03,1,2,2)
Q
"^DD",364.6,364.6,.03,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,2,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,2,"%D",0)
^.101^2^2^3000424^^
"^DD",364.6,364.6,.03,1,2,"%D",1,0)
If an associated form that is not a screen form, page is taken from the
"^DD",364.6,364.6,.03,1,2,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,2,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,2,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,2,"DT")
3000405
"^DD",364.6,364.6,.03,1,2,"FIELD")
PAGE OR SEQUENCE
"^DD",364.6,364.6,.03,1,3,0)
^^TRIGGER^364.6^.05
"^DD",364.6,364.6,.03,1,3,1)
X ^DD(364.6,.03,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,3,1.4)
"^DD",364.6,364.6,.03,1,3,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,3,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,3,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=364.6,DIG=.05 D ^DICR
"^DD",364.6,364.6,.03,1,3,2)
Q
"^DD",364.6,364.6,.03,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,3,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,3,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,3,"%D",1,0)
If an associated form that is not a screen form, line is taken from the
"^DD",364.6,364.6,.03,1,3,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,3,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,3,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,3,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,3,"DT")
3000405
"^DD",364.6,364.6,.03,1,3,"FIELD")
FIRST LINE NUMBER
"^DD",364.6,364.6,.03,1,4,0)
^^TRIGGER^364.6^.08
"^DD",364.6,364.6,.03,1,4,1)
X ^DD(364.6,.03,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,4,1.4)
"^DD",364.6,364.6,.03,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,4,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,4,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=364.6,DIG=.08 D ^DICR
"^DD",364.6,364.6,.03,1,4,2)
Q
"^DD",364.6,364.6,.03,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,4,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,4,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,4,"%D",1,0)
If an associated form that is not a screen form, column is taken from the
"^DD",364.6,364.6,.03,1,4,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,4,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,4,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,4,"DT")
3000405
"^DD",364.6,364.6,.03,1,4,"FIELD")
STARTING COLUMN
"^DD",364.6,364.6,.03,1,5,0)
^^TRIGGER^364.6^.09
"^DD",364.6,364.6,.03,1,5,1)
X ^DD(364.6,.03,1,5,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,5,1.4)
"^DD",364.6,364.6,.03,1,5,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,5,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,5,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,9)=DIV,DIH=364.6,DIG=.09 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,5,2)
Q
"^DD",364.6,364.6,.03,1,5,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,5,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,5,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,5,"%D",1,0)
If an associated form that is not a screen form, length is taken from the
"^DD",364.6,364.6,.03,1,5,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,5,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,5,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,5,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,5,"DT")
3000405
"^DD",364.6,364.6,.03,1,5,"FIELD")
LENGTH
"^DD",364.6,364.6,.03,1,6,0)
^^TRIGGER^364.6^.06
"^DD",364.6,364.6,.03,1,6,1)
X ^DD(364.6,.03,1,6,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,6,1.4)
"^DD",364.6,364.6,.03,1,6,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,6,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,6,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.6,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,6,2)
Q
"^DD",364.6,364.6,.03,1,6,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,6,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,6,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,6,"%D",1,0)
If associated form that is not a screen form, the max number lines is taken
"^DD",364.6,364.6,.03,1,6,"%D",2,0)
from the associated with field definition.
"^DD",364.6,364.6,.03,1,6,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,6,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,6,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,6,"DT")
3000405
"^DD",364.6,364.6,.03,1,6,"FIELD")
MAX NUMBER LINES
"^DD",364.6,364.6,.03,1,7,0)
^^TRIGGER^364.6^.02
"^DD",364.6,364.6,.03,1,7,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X="L" X ^DD(364.6,.03,1,7,1.4)
"^DD",364.6,364.6,.03,1,7,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=364.6,DIG=.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,7,2)
Q
"^DD",364.6,364.6,.03,1,7,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,7,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.03,1,7,"%D",1,0)
Only local entries can be associated.
"^DD",364.6,364.6,.03,1,7,"CREATE VALUE")
"L"
"^DD",364.6,364.6,.03,1,7,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,7,"DT")
2960117
"^DD",364.6,364.6,.03,1,7,"FIELD")
SECURITY LEVEL
"^DD",364.6,364.6,.03,3)
Enter the form definition record this definition will override.
"^DD",364.6,364.6,.03,5,1,0)
364.6^.01^4
"^DD",364.6,364.6,.03,21,0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,21,1,0)
The form definition record this definition will override.
"^DD",364.6,364.6,.03,"DT")
3000414
"^DD",364.6,364.6,.04,0)
PAGE OR SEQUENCE^FX^^0;4^K:$L(X)>20!($L(X)<1) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,2) K X
"^DD",364.6,364.6,.04,1,0)
^.1^^-1
"^DD",364.6,364.6,.04,1,1,0)
364.6^ASEQ1^MUMPS
"^DD",364.6,364.6,.04,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)=""
"^DD",364.6,364.6,.04,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)
"^DD",364.6,364.6,.04,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.04,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.04,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.04,1,1,"DT")
2960117
"^DD",364.6,364.6,.04,3)
This data must be 1-20 char long, can't be an assoc form, and must be a unique form/page/line/column.
"^DD",364.6,364.6,.04,5,1,0)
364.6^.03^2
"^DD",364.6,364.6,.04,21,0)
^^4^4^2960318^^^^
"^DD",364.6,364.6,.04,21,1,0)
This field is used to specify the page, section, transaction segment, etc.
"^DD",364.6,364.6,.04,21,2,0)
that the data element is to be associated with.  This field will be used as
"^DD",364.6,364.6,.04,21,3,0)
the second-level sort field when extracting data fields for this form.
"^DD",364.6,364.6,.04,21,4,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.04,"DT")
3000428
"^DD",364.6,364.6,.05,0)
FIRST LINE NUMBER^NJ4,0X^^0;5^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,3) K X
"^DD",364.6,364.6,.05,.1)
LINE
"^DD",364.6,364.6,.05,1,0)
^.1
"^DD",364.6,364.6,.05,1,1,0)
364.6^ASEQ2^MUMPS
"^DD",364.6,364.6,.05,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)=""
"^DD",364.6,364.6,.05,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)
"^DD",364.6,364.6,.05,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.05,1,1,"%D",0)
^^1^1^2960117^^^^
"^DD",364.6,364.6,.05,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.05,1,1,"DT")
2960117
"^DD",364.6,364.6,.05,3)
Type a # 0-9999, 0 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.05,5,1,0)
364.6^.03^3
"^DD",364.6,364.6,.05,21,0)
^^5^5^2960318^^^
"^DD",364.6,364.6,.05,21,1,0)
If this is a printed form, this is the first line number that this data
"^DD",364.6,364.6,.05,21,2,0)
element will appear on.  For transmitted forms, this is assumed to always
"^DD",364.6,364.6,.05,21,3,0)
be a 1.  This will be used as the third-level sort field when extracting
"^DD",364.6,364.6,.05,21,4,0)
data fields for this form.  The combination of form/page/line/column must
"^DD",364.6,364.6,.05,21,5,0)
be unique.
"^DD",364.6,364.6,.05,"DT")
3000428
"^DD",364.6,364.6,.06,0)
MAX NUMBER LINES^NJ3,0X^^0;6^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.06,3)
Type a Number between 0 and 999, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.06,5,1,0)
364.6^.03^6
"^DD",364.6,364.6,.06,21,0)
^^2^2^2951205^
"^DD",364.6,364.6,.06,21,1,0)
If a printed form, this is the highest numbered line number that this data
"^DD",364.6,364.6,.06,21,2,0)
element is allowed to print on.
"^DD",364.6,364.6,.06,"DT")
2960117
"^DD",364.6,364.6,.07,0)
LOCAL OVERRIDE ALLOWED^S^0:NO;1:YES;^0;7^Q
"^DD",364.6,364.6,.07,3)
Enter 0 (NO) to prevent local override, 1 to allow local override.
"^DD",364.6,364.6,.07,21,0)
^.001^2^2^3020822^^
"^DD",364.6,364.6,.07,21,1,0)
This controls whether or not the output forms generator will allow for a
"^DD",364.6,364.6,.07,21,2,0)
redefinition of this record via a local override.
"^DD",364.6,364.6,.07,"DT")
2960311
"^DD",364.6,364.6,.08,0)
STARTING COLUMN OR PIECE^NJ3,1X^^0;8^K:+X'=X!(X>999)!(X<0)!($S(X[".":X'?.E1"."1.2N,1:0)) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,4) K X
"^DD",364.6,364.6,.08,.1)
COLUMN
"^DD",364.6,364.6,.08,1,0)
^.1
"^DD",364.6,364.6,.08,1,1,0)
364.6^ASEQ3^MUMPS
"^DD",364.6,364.6,.08,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.08,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)
"^DD",364.6,364.6,.08,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.08,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.08,1,1,"DT")
2960117
"^DD",364.6,364.6,.08,1,2,0)
^^TRIGGER^364.6^.11
"^DD",364.6,364.6,.08,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0)["." I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=1 X ^DD(364.6,.08,1,2,1.4)
"^DD",364.6,364.6,.08,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,11)=DIV,DIH=364.6,DIG=.11 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.08,1,2,2)
Q
"^DD",364.6,364.6,.08,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,2,"%D",0)
^^2^2^2960126^^^
"^DD",364.6,364.6,.08,1,2,"%D",1,0)
If the starting column or piece is not a whole number, this must be a
"^DD",364.6,364.6,.08,1,2,"%D",2,0)
calculate only field - no output.
"^DD",364.6,364.6,.08,1,2,"CREATE CONDITION")
STARTING COLUMN OR PIECE["."
"^DD",364.6,364.6,.08,1,2,"CREATE VALUE")
S X=1
"^DD",364.6,364.6,.08,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.08,1,2,"DT")
2960126
"^DD",364.6,364.6,.08,1,2,"FIELD")
#.11
"^DD",364.6,364.6,.08,3)
Type a # 0-9999, 1-2 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.08,5,1,0)
364.6^.03^4
"^DD",364.6,364.6,.08,21,0)
^^5^5^2960318^^^^
"^DD",364.6,364.6,.08,21,1,0)
This is the column on the form, position in the data string (for non-printed
"^DD",364.6,364.6,.08,21,2,0)
forms) -  starting at position 1, or delimited piece that this data element
"^DD",364.6,364.6,.08,21,3,0)
is to be printed or stored in.  This will be used as the fourth-level sort
"^DD",364.6,364.6,.08,21,4,0)
field when extracting data fields for this form.  The combination of
"^DD",364.6,364.6,.08,21,5,0)
form/page/line/column must be unique.
"^DD",364.6,364.6,.08,"DT")
3000428
"^DD",364.6,364.6,.09,0)
LENGTH^NJ3,0X^^0;9^K:+X'=X!(X>250)!(X<1)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3),$P($G(^IBE(353,+^IBA(364.6,DA,0),2)),U,2)'="S" K X
"^DD",364.6,364.6,.09,3)
Type a Number between 1 and 250, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.09,5,1,0)
364.6^.03^5
"^DD",364.6,364.6,.09,21,0)
^^3^3^2951205^
"^DD",364.6,364.6,.09,21,1,0)
The length desired for the data element.  If present, this field will be used
"^DD",364.6,364.6,.09,21,2,0)
to truncate or pad the data element to this length after the element has been
"^DD",364.6,364.6,.09,21,3,0)
passed through the routine identified in the FORMAT ROUTINE field.
"^DD",364.6,364.6,.09,"DT")
3000111
"^DD",364.6,364.6,.1,0)
SHORT DESCRIPTION^F^^0;10^K:$L(X)>30!($L(X)<1) X
"^DD",364.6,364.6,.1,1,0)
^.1
"^DD",364.6,364.6,.1,1,1,0)
364.6^C
"^DD",364.6,364.6,.1,1,1,1)
S ^IBA(364.6,"C",$E(X,1,30),DA)=""
"^DD",364.6,364.6,.1,1,1,2)
K ^IBA(364.6,"C",$E(X,1,30),DA)
"^DD",364.6,364.6,.1,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.1,1,1,"%D",0)
^^1^1^2960123^
"^DD",364.6,364.6,.1,1,1,"%D",1,0)
Field name lookup
"^DD",364.6,364.6,.1,1,1,"DT")
2960123
"^DD",364.6,364.6,.1,3)
Answer must be 1-30 characters in length.
"^DD",364.6,364.6,.1,21,0)
^^2^2^2951207^
"^DD",364.6,364.6,.1,21,1,0)
This is a short description of the field that is used as an identifier to
"^DD",364.6,364.6,.1,21,2,0)
make lookups on this file meaningful.
"^DD",364.6,364.6,.1,"DT")
2960123
"^DD",364.6,364.6,.11,0)
CALCULATE ONLY OR OUTPUT^S^1:CALCULATE ONLY;0:OUTPUT;^0;11^Q
"^DD",364.6,364.6,.11,3)
Enter 1 if this field is used for calculation purposes and is not meant to be output
"^DD",364.6,364.6,.11,5,1,0)
364.6^.08^2
"^DD",364.6,364.6,.11,21,0)
^^4^4^2960715^^^^
"^DD",364.6,364.6,.11,21,1,0)
This field is set to 1 if there is a need to do a special extract or
"^DD",364.6,364.6,.11,21,2,0)
calculation at some point in the processing, but no output is desired
"^DD",364.6,364.6,.11,21,3,0)
from the field's code execution.  Used to set up arrays for group elements
"^DD",364.6,364.6,.11,21,4,0)
then the individual elements are output separately.
"^DD",364.6,364.6,.11,"DT")
2960715
"^DD",364.6,364.6,.12,0)
TRANSMIT IGNORES IF NULL^S^0:FALSE;1:TRUE;^0;12^Q
"^DD",364.6,364.6,.12,3)
Enter 1 (TRUE) if there should be no entry made in the output global if the data value of the element is null.
"^DD",364.6,364.6,.12,21,0)
^.001^5^5^3001030^^^
"^DD",364.6,364.6,.12,21,1,0)
This field can be used to suppress output of a field if its value is null.
"^DD",364.6,364.6,.12,21,2,0)
If not suppressed, an entry is made in the output global used by the
"^DD",364.6,364.6,.12,21,3,0)
formatter, regardless of the contents of the data for this field.
"^DD",364.6,364.6,.12,21,4,0)
Supressing the value results in no output to the formatter's output
"^DD",364.6,364.6,.12,21,5,0)
global if the value of the data for this field is determined to be null.
"^DD",364.6,364.6,.12,"DT")
2991006
"^DD",364.6,364.6,.13,0)
DATA REQUIRED FOR FIELD^S^1:YES;0:NO;^0;13^Q
"^DD",364.6,364.6,.13,3)
Enter yes if there should always be data in this field.
"^DD",364.6,364.6,.13,21,0)
^^2^2^3000216^
"^DD",364.6,364.6,.13,21,1,0)
This field is a flag that will stop the output of a record if this field
"^DD",364.6,364.6,.13,21,2,0)
indicates data is required and the data extracted is null.
"^DD",364.6,364.6,.13,"DT")
3000216
"^DD",364.6,364.6,.2,0)
NEW FORM DATA ELEMENT^P364.6'^IBA(364.6,^0;20^Q
"^DD",364.6,364.6,.2,1,0)
^.1
"^DD",364.6,364.6,.2,1,1,0)
364.6^GUS
"^DD",364.6,364.6,.2,1,1,1)
S ^IBA(364.6,"GUS",$E(X,1,30),DA)=""
"^DD",364.6,364.6,.2,1,1,2)
K ^IBA(364.6,"GUS",$E(X,1,30),DA)
"^DD",364.6,364.6,.2,1,1,"%D",0)
^^2^2^3061106^
"^DD",364.6,364.6,.2,1,1,"%D",1,0)
Just a temporary x-ref used to create the new forms.  Only for the
"^DD",364.6,364.6,.2,1,1,"%D",2,0)
development account.
"^DD",364.6,364.6,.2,1,1,"DT")
3061106
"^DD",364.6,364.6,.2,21,0)
^^4^4^3061106^
"^DD",364.6,364.6,.2,21,1,0)
This is just a temporary field to help in the conversion from the
"^DD",364.6,364.6,.2,21,2,0)
HCFA-1500 and UB-92 forms to the new forms CMS-1500 and UB-04.  This is
"^DD",364.6,364.6,.2,21,3,0)
just a link from the old form data element to the new form data element
"^DD",364.6,364.6,.2,21,4,0)
if there is a link (old field copied into the new field).
"^DD",364.6,364.6,.2,"DT")
3061106
"^DD",364.7,364.7,0)
FIELD^^3^12
"^DD",364.7,364.7,0,"DDA")
N
"^DD",364.7,364.7,0,"DT")
2960710
"^DD",364.7,364.7,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBA(364.5,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(364.5,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.7,364.7,0,"IX","AINS",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINS1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINTYP1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP2",364.7,.06)

"^DD",364.7,364.7,0,"IX","ATYPE",364.7,.01)

"^DD",364.7,364.7,0,"IX","ATYPE1",364.7,.06)

"^DD",364.7,364.7,0,"IX","B",364.7,.01)

"^DD",364.7,364.7,0,"IX","C",364.7,.03)

"^DD",364.7,364.7,0,"NM","IB FORM FIELD CONTENT")
 
"^DD",364.7,364.7,0,"VRPK")
IB
"^DD",364.7,364.7,.01,0)
FORM FIELD REFERENCE^RP364.6'^IBA(364.6,^0;1^Q
"^DD",364.7,364.7,.01,1,0)
^.1
"^DD",364.7,364.7,.01,1,1,0)
364.7^B
"^DD",364.7,364.7,.01,1,1,1)
S ^IBA(364.7,"B",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.01,1,1,2)
K ^IBA(364.7,"B",$E(X,1,30),DA)
"^DD",364.7,364.7,.01,1,2,0)
364.7^ATYPE^MUMPS
"^DD",364.7,364.7,.01,1,2,1)
N Z1,Z0 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3),'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,2,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,2,"%D",0)
^^1^1^2980104^^^^
"^DD",364.7,364.7,.01,1,2,"%D",1,0)
Xref by form and bill type
"^DD",364.7,364.7,.01,1,2,"DT")
2960117
"^DD",364.7,364.7,.01,1,3,0)
364.7^AINTYP^MUMPS
"^DD",364.7,364.7,.01,1,3,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) S ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)=""
"^DD",364.7,364.7,.01,1,3,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)
"^DD",364.7,364.7,.01,1,3,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,3,"%D",0)
^^1^1^2971231^^^
"^DD",364.7,364.7,.01,1,3,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.01,1,3,"DT")
2960117
"^DD",364.7,364.7,.01,1,4,0)
364.7^AINS^MUMPS
"^DD",364.7,364.7,.01,1,4,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3),$P(Z0,U,6)="" S ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,4,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,4,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,4,"%D",0)
^^1^1^2971231^^
"^DD",364.7,364.7,.01,1,4,"%D",1,0)
Xref by form field and insurance company
"^DD",364.7,364.7,.01,1,4,"DT")
2960118
"^DD",364.7,364.7,.01,3)
Enter the billing form that this field is associated with
"^DD",364.7,364.7,.01,21,0)
^^2^2^2951207^^^^
"^DD",364.7,364.7,.01,21,1,0)
This is a pointer to the billing form field that this field is associated
"^DD",364.7,364.7,.01,21,2,0)
with.
"^DD",364.7,364.7,.01,"DT")
3000428
"^DD",364.7,364.7,.02,0)
SECURITY LEVEL^S^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.7,364.7,.02,3)
Enter N for nationally released fields (no edit) or L for locally added fields.
"^DD",364.7,364.7,.02,21,0)
^^3^3^2951219^^^
"^DD",364.7,364.7,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  For
"^DD",364.7,364.7,.02,21,2,0)
NATIONAL (N) field, no local editing is allowed.  If LOCAL (L) field is
"^DD",364.7,364.7,.02,21,3,0)
created, editing is allowed.
"^DD",364.7,364.7,.02,"DT")
3000428
"^DD",364.7,364.7,.03,0)
DATA ELEMENT^P364.5'^IBA(364.5,^0;3^Q
"^DD",364.7,364.7,.03,1,0)
^.1
"^DD",364.7,364.7,.03,1,1,0)
364.7^C
"^DD",364.7,364.7,.03,1,1,1)
S ^IBA(364.7,"C",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.03,1,1,2)
K ^IBA(364.7,"C",$E(X,1,30),DA)
"^DD",364.7,364.7,.03,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.03,1,1,"%D",0)
^^1^1^2960702^
"^DD",364.7,364.7,.03,1,1,"%D",1,0)
Xref by DATA ELEMENT NAME
"^DD",364.7,364.7,.03,1,1,"DT")
2960702
"^DD",364.7,364.7,.03,3)
Enter the data element that will define this form field.  If used on a screen, it must be a fileman type.
"^DD",364.7,364.7,.03,21,0)
^^1^1^2960627^^^^
"^DD",364.7,364.7,.03,21,1,0)
This identifies the data element that be extracted for this entry.
"^DD",364.7,364.7,.03,23,0)
^^4^4^2960627^^^^
"^DD",364.7,364.7,.03,23,1,0)
This is the data element that will be allowed to be displayed/edited on a
"^DD",364.7,364.7,.03,23,2,0)
screen, extracted for a transmit, or printed on a printed form.  If used on
"^DD",364.7,364.7,.03,23,3,0)
a screen, the data element must be a fileman type and a local field (>10000
"^DD",364.7,364.7,.03,23,4,0)
for ifn and on a node >10000) to be editable.
"^DD",364.7,364.7,.03,"DT")
2960702
"^DD",364.7,364.7,.04,0)
SCREEN PROMPT^FX^^0;4^K:$L(X)>70!($L(X)<1) X I $D(X),$P($G(^IBE(353,+$G(^IBA(364.6,+$G(^IBA(364.7,DA,0)),0)),2)),U,2)'="S" K X
"^DD",364.7,364.7,.04,.1)
 
"^DD",364.7,364.7,.04,1,0)
^.1^^0
"^DD",364.7,364.7,.04,3)
Answer must be 1-70 characters in length.
"^DD",364.7,364.7,.04,21,0)
3^^2^2^2960321^^^^
"^DD",364.7,364.7,.04,21,1,0)
This is used only by screen-type forms to place a prompt on the screen
"^DD",364.7,364.7,.04,21,2,0)
for a particular field.
"^DD",364.7,364.7,.04,23,0)
^^3^3^2960321^^^^
"^DD",364.7,364.7,.04,23,1,0)
This is the prompt that will preceed the data element defined for this
"^DD",364.7,364.7,.04,23,2,0)
entry.  If no data element, this prompt will display.  This field is only
"^DD",364.7,364.7,.04,23,3,0)
used for screen-type forms.
"^DD",364.7,364.7,.04,"DT")
2960321
"^DD",364.7,364.7,.05,0)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"^DD",364.7,364.7,.05,1,0)
^.1
"^DD",364.7,364.7,.05,1,1,0)
364.7^AINS1^MUMPS
"^DD",364.7,364.7,.05,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,$P(Z0,U,6)="" S ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.05,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA) I Z2'="",$D(^IBA(364.7,"AINTYP",Z1,X,Z2,DA)) S ^IBA(364.7,"ATYPE",Z1,Z2,DA)=""
"^DD",364.7,364.7,.05,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,1,"%D",0)
^^1^1^2960118^
"^DD",364.7,364.7,.05,1,1,"%D",1,0)
Xref by form field and insurance company.
"^DD",364.7,364.7,.05,1,1,"DT")
2960118
"^DD",364.7,364.7,.05,1,2,0)
364.7^AINTYP1^MUMPS
"^DD",364.7,364.7,.05,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) I Z1,Z2'="" S ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)="" K ^IBA(364.7,"ATYPE",Z1,Z2,DA),^IBA(364.7,"AINS",Z1,X,DA)
"^DD",364.7,364.7,.05,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K:Z1&(Z2'="") ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)
"^DD",364.7,364.7,.05,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.05,1,2,"%D",1,0)
Xref by insurance company and bill type
"^DD",364.7,364.7,.05,1,2,"DT")
2960117
"^DD",364.7,364.7,.05,3)
Enter the name of the insurance company that this field is associated with.
"^DD",364.7,364.7,.05,21,0)
^^2^2^2951207^
"^DD",364.7,364.7,.05,21,1,0)
This is the insurance company who has a need for other than the standard
"^DD",364.7,364.7,.05,21,2,0)
data in this field.
"^DD",364.7,364.7,.05,"DT")
3000428
"^DD",364.7,364.7,.06,0)
BILL TYPE^S^I:INPATIENT;O:OUTPATIENT;^0;6^Q
"^DD",364.7,364.7,.06,1,0)
^.1
"^DD",364.7,364.7,.06,1,1,0)
364.7^ATYPE1^MUMPS
"^DD",364.7,364.7,.06,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1 K ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA) I Z2,$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) S ^IBA(364.7,"AINS",Z1,Z2,DA)=""
"^DD",364.7,364.7,.06,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,1,1,"%D",1,0)
Xref by form and bill type.
"^DD",364.7,364.7,.06,1,1,"DT")
2960117
"^DD",364.7,364.7,.06,1,2,0)
364.7^AINTYP2^MUMPS
"^DD",364.7,364.7,.06,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1,Z2 K:'$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) ^IBA(364.7,"AINS",Z1,Z2,DA) S ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) K:Z1&Z2 ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)
"^DD",364.7,364.7,.06,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.06,1,2,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.06,1,2,"DT")
2960117
"^DD",364.7,364.7,.06,3)
Enter the type of the bill.
"^DD",364.7,364.7,.06,21,0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,21,1,0)
This is the type of bill that requires this field.
"^DD",364.7,364.7,.06,"DT")
3000428
"^DD",364.7,364.7,.07,0)
PAD CHARACTER^S^ZL:ZERO PAD ON LEFT;ZR:ZERO PAD ON RIGHT;SL:SPACE PAD ON LEFT;SR:SPACE PAD ON RIGHT;N:NO PAD REQUIRED;^0;7^Q
"^DD",364.7,364.7,.07,3)
Enter the code that corresponds to the format and pad character to use for the data output in this field.
"^DD",364.7,364.7,.07,21,0)
^^3^3^2960126^^
"^DD",364.7,364.7,.07,21,1,0)
If present, this defines the character to be used to pad the DATA
"^DD",364.7,364.7,.07,21,2,0)
ELEMENT to its desired length and the orientation of the padding characters
"^DD",364.7,364.7,.07,21,3,0)
to the left or right of the data.  The default is space pad to the right.
"^DD",364.7,364.7,.07,"DT")
2960126
"^DD",364.7,364.7,.08,0)
REQUIRED^S^0:NO;1:YES;^0;8^Q
"^DD",364.7,364.7,.08,3)
Enter 1 (YES) if this data element is on a local screen 9 form and the data is required for the bill to be authorized.
"^DD",364.7,364.7,.08,21,0)
^.001^4^4^3001030^^
"^DD",364.7,364.7,.08,21,1,0)
This field controls the required/not required status of a data element
"^DD",364.7,364.7,.08,21,2,0)
on a local screen 9 form.  If this field is 1 (YES), this data element
"^DD",364.7,364.7,.08,21,3,0)
is always required to have data (not null) in order for a bill to be
"^DD",364.7,364.7,.08,21,4,0)
authorized.
"^DD",364.7,364.7,.08,"DT")
2951207
"^DD",364.7,364.7,.09,0)
EDIT STATUS^S^E:EDITABLE;D:DISPLAY ONLY;^0;9^Q
"^DD",364.7,364.7,.09,3)
Enter 'E' to enable editing for this field, 'D' for a display only field.
"^DD",364.7,364.7,.09,21,0)
^^2^2^2960320^
"^DD",364.7,364.7,.09,21,1,0)
This field is used to control whether or not a data element on a screen is
"^DD",364.7,364.7,.09,21,2,0)
editable or for display-only purposes.
"^DD",364.7,364.7,.09,"DT")
2960320
"^DD",364.7,364.7,.1,0)
EDIT GROUP NUMBER^NJ2,0^^0;10^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",364.7,364.7,.1,3)
 Enter the edit group # that this field will be included in.  Valid #'s are 1-99.
"^DD",364.7,364.7,.1,21,0)
^^6^6^2960321^^
"^DD",364.7,364.7,.1,21,1,0)
This field contains the # of the edit group that the screen data element
"^DD",364.7,364.7,.1,21,2,0)
will be included with.  When this group # is selected on an edit screen,
"^DD",364.7,364.7,.1,21,3,0)
all data elements assigned to this group # on this screen will be presented
"^DD",364.7,364.7,.1,21,4,0)
for editing.  If no # is entered here, this field will not be available for
"^DD",364.7,364.7,.1,21,5,0)
editing.  This field will only apply to screen-type forms' editable data
"^DD",364.7,364.7,.1,21,6,0)
element descriptions.
"^DD",364.7,364.7,.1,"DT")
2960321
"^DD",364.7,364.7,1,0)
FORMAT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.7,364.7,1,3)
This is Standard MUMPS code.
"^DD",364.7,364.7,1,9)
@
"^DD",364.7,364.7,1,21,0)
^^8^8^2951207^
"^DD",364.7,364.7,1,21,1,0)
This is the code that will be xecuted to format the 'raw' data element
"^DD",364.7,364.7,1,21,2,0)
value that is returned from the execution of the DATA ELEMENT's definition.
"^DD",364.7,364.7,1,21,3,0)
This code can assume the variable/array IBXDATA is available as input and
"^DD",364.7,364.7,1,21,4,0)
should set this variable/array as its output.  Standard calls for data
"^DD",364.7,364.7,1,21,5,0)
formatting have been provided.  The variables IBXPG, IBXLN, IBXCOL are the
"^DD",364.7,364.7,1,21,6,0)
only IBX* variables that should be changed in this routine.  These represent
"^DD",364.7,364.7,1,21,7,0)
the page, line, column as the first 3 levels of subscript for the output
"^DD",364.7,364.7,1,21,8,0)
array.
"^DD",364.7,364.7,1,"DT")
2951207
"^DD",364.7,364.7,3,0)
FORMAT CODE DESCRIPTION^364.73^^3;0
"^DD",364.7,364.7,3,21,0)
^.001^1^1^3010102^^
"^DD",364.7,364.7,3,21,1,0)
This field describes the function of the format code entered.
"^DD",364.7,364.7,3,"DT")
2960710
"^DD",364.7,364.73,0)
FORMAT CODE DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.7,364.73,0,"DT")
2960710
"^DD",364.7,364.73,0,"NM","FORMAT CODE DESCRIPTION")
 
"^DD",364.7,364.73,0,"UP")
364.7
"^DD",364.7,364.73,.01,0)
FORMAT CODE DESCRIPTION^W^^0;1^Q
"^DD",364.7,364.73,.01,3)
Enter a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,21,0)
^.001^1^1^3010102^^^^
"^DD",364.7,364.73,.01,21,1,0)
This is a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,"DT")
2960710
"^DD",399,399,.04,0)
LOCATION OF CARE^RS^1:HOSPITAL (INCLUDES CLINIC) - INPT. OR OPT.;2:SKILLED NURSING (NHCU);7:CLINIC (WHEN INDEPENDENT OR SATELLITE);^0;4^Q
"^DD",399,399,.04,.1)
TYPE OF BILL (1ST DIGIT)
"^DD",399,399,.04,1,0)
^.1
"^DD",399,399,.04,1,1,0)
^^TRIGGER^399^.24
"^DD",399,399,.04,1,1,1)
X ^DD(399,.04,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,24),X=X S DIU=X K Y S X=DIV S X=DIV,X=X S DIH=$G(^DGCR(399,DIV(0),0)),DIV=X S $P(^(0),U,24)=DIV,DIH=399,DIG=.24 D ^DICR
"^DD",399,399,.04,1,1,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$P($G(^DD(399,.24,0)),U,3),Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,24)_":",2),$C(59))=""
"^DD",399,399,.04,1,1,2)
Q
"^DD",399,399,.04,1,1,3)
Do Not Delete
"^DD",399,399,.04,1,1,"%D",0)
^^2^2^3070116^
"^DD",399,399,.04,1,1,"%D",1,0)
This trigger forces the same initial value into the UB-04 LOCATION OF
"^DD",399,399,.04,1,1,"%D",2,0)
CARE field as the system-calculated LOCATION OF CARE field.
"^DD",399,399,.04,1,1,"CREATE CONDITION")
UB-04 LOCATION OF CARE=""
"^DD",399,399,.04,1,1,"CREATE VALUE")
INTERNAL(LOCATION OF CARE)
"^DD",399,399,.04,1,1,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.04,1,1,"DT")
3070116
"^DD",399,399,.04,1,1,"FIELD")
UB-04 LOCATION OF CARE
"^DD",399,399,.04,3)
Enter the code which identifies the type of facility at which care was administered.
"^DD",399,399,.04,21,0)
^^1^1^2931221^^^^
"^DD",399,399,.04,21,1,0)
This identifies the type of facility at which care was administered.
"^DD",399,399,.04,"DT")
3070116
"^DD",399,399,.05,0)
BILL CLASSIFICATION^RSX^1:INPATIENT (MEDICARE PART A);2:HUMANITARIAN EMERGENCY (INPT./MEDICARE PART B);3:OUTPATIENT;4:HUMANITARIAN EMERGENCY (OPT./ESRD);^0;5^Q
"^DD",399,399,.05,.1)
TYPE OF BILL (2ND DIGIT)
"^DD",399,399,.05,1,0)
^.1
"^DD",399,399,.05,1,1,0)
399^ABT
"^DD",399,399,.05,1,1,1)
S ^DGCR(399,"ABT",$E(X,1,30),DA)=""
"^DD",399,399,.05,1,1,2)
K ^DGCR(399,"ABT",$E(X,1,30),DA)
"^DD",399,399,.05,1,2,0)
^^TRIGGER^399^.25
"^DD",399,399,.05,1,2,1)
X ^DD(399,.05,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,25),X=X S DIU=X K Y S X=DIV S X=$$TRIG05^IBCU4(X,D0) S DIH=$G(^DGCR(399,DIV(0),0)),DIV=X S $P(^(0),U,25)=DIV,DIH=399,DIG=.25 D ^DICR
"^DD",399,399,.05,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P($G(^DGCR(399.1,+$P(Y(1),U,25),0)),U)=""
"^DD",399,399,.05,1,2,2)
Q
"^DD",399,399,.05,1,2,"CREATE CONDITION")
UB-04 BILL CLASSIFICATION=""
"^DD",399,399,.05,1,2,"CREATE VALUE")
S X=$$TRIG05^IBCU4(X,D0)
"^DD",399,399,.05,1,2,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.05,1,2,"DT")
3070116
"^DD",399,399,.05,1,2,"FIELD")
UB-04 BILL CLASSIFICATION
"^DD",399,399,.05,3)
Enter the code which designates inpatient or outpatient care.
"^DD",399,399,.05,21,0)
^^1^1^2931220^^^^
"^DD",399,399,.05,21,1,0)
This code identifies the care being billed for as inpatient or outpatient.
"^DD",399,399,.05,"DT")
3070116
"^DD",399,399,.06,0)
TIMEFRAME OF BILL^RS^1:ADMIT THRU DISCHARGE;2:INTERIM - FIRST CLAIM;3:INTERIM - CONTINUING CLAIM;4:INTERIM - LAST CLAIM;5:LATE CHARGES ONLY;6:ADJUSTMENT PRIOR CLAIM;7:REPLACEMENT PRIOR CLAIM;8:VOID/CANCEL PRIOR CLAIM;O:NON-PAY/ZERO CLAIM;^0;6^Q
"^DD",399,399,.06,.1)
TYPE OF BILL (3RD DIGIT)
"^DD",399,399,.06,1,0)
^.1
"^DD",399,399,.06,1,1,0)
^^TRIGGER^399^.26
"^DD",399,399,.06,1,1,1)
X ^DD(399,.06,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,26),X=X S DIU=X K Y S X=DIV S X=DIV,X=X S DIH=$G(^DGCR(399,DIV(0),0)),DIV=X S $P(^(0),U,26)=DIV,DIH=399,DIG=.26 D ^DICR
"^DD",399,399,.06,1,1,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$P($G(^DD(399,.26,0)),U,3),Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,26)_":",2),$C(59))=""
"^DD",399,399,.06,1,1,2)
Q
"^DD",399,399,.06,1,1,3)
Do not delete
"^DD",399,399,.06,1,1,"%D",0)
^^2^2^3070116^
"^DD",399,399,.06,1,1,"%D",1,0)
This trigger forces the same initial value into the UB-04 TIMEFRAME OF
"^DD",399,399,.06,1,1,"%D",2,0)
BILL field as the system-calculated TIMEFRAME OF BILL field.
"^DD",399,399,.06,1,1,"CREATE CONDITION")
UB-04 TIMEFRAME OF BILL=""
"^DD",399,399,.06,1,1,"CREATE VALUE")
INTERNAL(TIMEFRAME OF BILL)
"^DD",399,399,.06,1,1,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.06,1,1,"DT")
3070116
"^DD",399,399,.06,1,1,"FIELD")
UB-04 TIMEFRAME OF BILL
"^DD",399,399,.06,3)
Enter the code which defines the frequency of this bill.
"^DD",399,399,.06,5,1,0)
399^.26^1
"^DD",399,399,.06,21,0)
^^1^1^2931220^^^
"^DD",399,399,.06,21,1,0)
This code defines the frequency of this bill.
"^DD",399,399,.06,"DT")
3070116
"^DD",399,399,.24,0)
UB-04 LOCATION OF CARE^RS^1:HOSPITAL - INPT OR OPT (INCLUDES CLINICS);2:SKILLED NURSING (NHCU);3:HOME HEALTH AGENCY;7:CLINIC (ONLY INDEPENDENT/SATELITE);8:SPEC. FACILITY HOSP/AMB SURG CTR;^0;24^Q
"^DD",399,399,.24,1,0)
^.1^^0
"^DD",399,399,.24,3)
Enter the appropriate UB-04 location of care
"^DD",399,399,.24,5,1,0)
399^.04^1
"^DD",399,399,.24,21,0)
^^2^2^3070116^
"^DD",399,399,.24,21,1,0)
This field contains the code representing the location of care for a bill.
"^DD",399,399,.24,21,2,0)
This is the first digit of the 3-digit UB-04 type of bill.
"^DD",399,399,.24,"DT")
3070116
"^DD",399,399,.25,0)
UB-04 BILL CLASSIFICATION^R*P399.1'^DGCR(399.1,^0;25^S DIC("S")="I $P(^(0),U,23),$$TOBIN^IBCU4(Y,D0)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",399,399,.25,1,0)
^.1
"^DD",399,399,.25,1,1,0)
399^AI^MUMPS
"^DD",399,399,.25,1,1,1)
D ALLID^IBCEP3(DA,.25,1)
"^DD",399,399,.25,1,1,2)
D ALLID^IBCEP3(DA,.25,2)
"^DD",399,399,.25,1,1,3)
Do not delete
"^DD",399,399,.25,1,1,"%D",0)
^^3^3^3000926^
"^DD",399,399,.25,1,1,"%D",1,0)
This cross reference determines if the change of care type requires the
"^DD",399,399,.25,1,1,"%D",2,0)
provider id's to be updated or deleted.  If it does, the update/deletion
"^DD",399,399,.25,1,1,"%D",3,0)
is performed for the claim.
"^DD",399,399,.25,1,1,"DT")
3000926
"^DD",399,399,.25,3)
Enter the appropriate UB-04 bill classification
"^DD",399,399,.25,5,1,0)
399^.05^2
"^DD",399,399,.25,12)
CLASSIFICATION MUST BE CONSISTENT WITH LOC OF CARE VALUE
"^DD",399,399,.25,12.1)
S DIC("S")="I $P(^(0),U,23),$$TOBIN^IBCU4(Y,D0)"
"^DD",399,399,.25,21,0)
^^2^2^3070116^
"^DD",399,399,.25,21,1,0)
This field contains the code representing the bill classification for the
"^DD",399,399,.25,21,2,0)
bill.  It is the second digit in the 3-digit UB-04 type of bill.
"^DD",399,399,.25,"DT")
3070116
"^DD",399,399,.26,0)
UB-04 TIMEFRAME OF BILL^RS^1:ADMIT THRU DISCHARGE;2:INTERIM - 1ST CLAIM;3:INTERIM - CONTINUING CLAIM;4:INTERIM - LAST CLAIM;5:LATE CHARGES ONLY;6:ADJUSTMENT CLAIM;7:REPLACEMENT CLAIM;8:VOID/CANCEL PRIOR CLAIM;O:NON-PAY/ZERO CLAIM;^0;26^Q
"^DD",399,399,.26,1,0)
^.1
"^DD",399,399,.26,1,1,0)
^^TRIGGER^399^.06
"^DD",399,399,.26,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X=DIV S X=DIV,X=X S DIH=$G(^DGCR(399,DIV(0),0)),DIV=X S $P(^(0),U,6)=DIV,DIH=399,DIG=.06 D ^DICR
"^DD",399,399,.26,1,1,2)
Q
"^DD",399,399,.26,1,1,"CREATE VALUE")
INTERNAL(UB-04 TIMEFRAME OF BILL)
"^DD",399,399,.26,1,1,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.26,1,1,"DT")
3070212
"^DD",399,399,.26,1,1,"FIELD")
TIMEFRAME OF BILL
"^DD",399,399,.26,3)
Enter the appropriate UB-04 timeframe of bill
"^DD",399,399,.26,5,1,0)
399^.06^1
"^DD",399,399,.26,21,0)
^^3^3^3070116^
"^DD",399,399,.26,21,1,0)
This field contains the code representing the timeframe of the bill
"^DD",399,399,.26,21,2,0)
value for the bill.  This is the 3rd digit of the 3-digit UB-04 type
"^DD",399,399,.26,21,3,0)
of bill.
"^DD",399,399,.26,"DT")
3070212
"^DD",399,399,110,0)
*PATIENT SHORT MAILING ADDRESS^RF^^M;10^K:$L(X)>47!($L(X)<1) X
"^DD",399,399,110,3)
Answer with the 1-47 character short form of the patient mailing address.  This is all the information run together with a maximum of 47 characters.
"^DD",399,399,110,21,0)
^.001^7^7^3070207^^
"^DD",399,399,110,21,1,0)
This is the 1-47 character patient mailing address that will print in
"^DD",399,399,110,21,2,0)
block 11 on the UB-82 form and block 13 on the UB-92.  The computer will
"^DD",399,399,110,21,3,0)
try to calculate this.  If the length of all the patient address
"^DD",399,399,110,21,4,0)
fields is longer than 47 characters you will need to abbreviate this in
"^DD",399,399,110,21,5,0)
order to get it to print in this block.
"^DD",399,399,110,21,6,0)
 
"^DD",399,399,110,21,7,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",399,399,110,"DT")
3070207
"^DD",399,399,122,0)
PRIMARY PROVIDER #^F^^M1;2^K:$L(X)>13!($L(X)<3) X
"^DD",399,399,122,1,0)
^.1
"^DD",399,399,122,1,1,0)
^^TRIGGER^399^128
"^DD",399,399,122,1,1,1)
Q
"^DD",399,399,122,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,2)="" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X="" X ^DD(399,122,1,1,2.4)
"^DD",399,399,122,1,1,2.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,10)=DIV,DIH=399,DIG=128 D ^DICR
"^DD",399,399,122,1,1,"%D",0)
^^2^2^3060410^
"^DD",399,399,122,1,1,"%D",1,0)
This trigger will delete the PRIMARY ID QUALIFIER when the PRIMARY 
"^DD",399,399,122,1,1,"%D",2,0)
PROVIDER # is deleted
"^DD",399,399,122,1,1,"CREATE VALUE")
NO EFFECT
"^DD",399,399,122,1,1,"DELETE CONDITION")
PRIMARY PROVIDER #=""
"^DD",399,399,122,1,1,"DELETE VALUE")
@
"^DD",399,399,122,1,1,"FIELD")
PRIMARY ID QUALIFIER
"^DD",399,399,122,3)
Answer must be 3-13 characters in length.
"^DD",399,399,122,5,1,0)
399^101^1
"^DD",399,399,122,5,2,0)
399^.22^1
"^DD",399,399,122,21,0)
^^2^2^3070212^^
"^DD",399,399,122,21,1,0)
This is the number assigned to the provider by the primary payer.
"^DD",399,399,122,21,2,0)
Printed in Form Locator 57 for the Primary Insurance Carrier on the UB-04.
"^DD",399,399,122,"DT")
3070212
"^DD",399,399,123,0)
SECONDARY PROVIDER #^F^^M1;3^K:$L(X)>13!($L(X)<3) X
"^DD",399,399,123,1,0)
^.1
"^DD",399,399,123,1,1,0)
^^TRIGGER^399^129
"^DD",399,399,123,1,1,1)
Q
"^DD",399,399,123,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,3)="" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X="" X ^DD(399,123,1,1,2.4)
"^DD",399,399,123,1,1,2.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,11)=DIV,DIH=399,DIG=129 D ^DICR
"^DD",399,399,123,1,1,"%D",0)
^^2^2^3060410^
"^DD",399,399,123,1,1,"%D",1,0)
This trigger will delete the SECONDARY ID QUALIFIER when the SECONDARY
"^DD",399,399,123,1,1,"%D",2,0)
PROVIDER # is deleted
"^DD",399,399,123,1,1,"CREATE VALUE")
NO EFFECT
"^DD",399,399,123,1,1,"DELETE CONDITION")
SECONDARY PROVIDER #=""
"^DD",399,399,123,1,1,"DELETE VALUE")
@
"^DD",399,399,123,1,1,"FIELD")
SECONDARY ID QUALIFIER
"^DD",399,399,123,3)
Answer must be 3-13 characters in length.
"^DD",399,399,123,5,1,0)
399^102^2
"^DD",399,399,123,5,2,0)
399^.22^2
"^DD",399,399,123,21,0)
^^3^3^3070116^
"^DD",399,399,123,21,1,0)
This is the number assigned to the provider by the secondary payer.
"^DD",399,399,123,21,2,0)
Printed in Form Locator 57 for the Secondary Insurance Carrier on the
"^DD",399,399,123,21,3,0)
UB-04.
"^DD",399,399,123,"DT")
3070212
"^DD",399,399,124,0)
TERTIARY PROVIDER #^F^^M1;4^K:$L(X)>13!($L(X)<3) X
"^DD",399,399,124,1,0)
^.1
"^DD",399,399,124,1,1,0)
^^TRIGGER^399^130
"^DD",399,399,124,1,1,1)
Q
"^DD",399,399,124,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,4)="" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X="" X ^DD(399,124,1,1,2.4)
"^DD",399,399,124,1,1,2.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,12)=DIV,DIH=399,DIG=130 D ^DICR
"^DD",399,399,124,1,1,"%D",0)
^^2^2^3060410^
"^DD",399,399,124,1,1,"%D",1,0)
This trigger will delete the TERTIARY ID QUALIFIER when the TERTIARY
"^DD",399,399,124,1,1,"%D",2,0)
PROVIDER # is deleted
"^DD",399,399,124,1,1,"CREATE VALUE")
NO EFFECT
"^DD",399,399,124,1,1,"DELETE CONDITION")
TERTIARY PROVIDER #=""
"^DD",399,399,124,1,1,"DELETE VALUE")
@
"^DD",399,399,124,1,1,"FIELD")
TERTIARY ID QUALIFIER
"^DD",399,399,124,3)
Answer must be 3-13 characters in length.
"^DD",399,399,124,5,1,0)
399^103^2
"^DD",399,399,124,5,2,0)
399^.22^3
"^DD",399,399,124,21,0)
^^3^3^3070116^
"^DD",399,399,124,21,1,0)
This is the number assigned to the provider by the tertiary payer.
"^DD",399,399,124,21,2,0)
Printed in Form Locator 57 for the Tertiary Insurance Carrier on the
"^DD",399,399,124,21,3,0)
UB-04.
"^DD",399,399,124,"DT")
3070212
"^DD",399,399,163,0)
TREATMENT AUTHORIZATION CODE^F^^U;13^K:$L(X)>18!($L(X)<1) X
"^DD",399,399,163,3)
Answer must be 1-18 characters in length.
"^DD",399,399,163,21,0)
^^5^5^3070201^
"^DD",399,399,163,21,1,0)
This indicates that the treatment covered by this bill has been 
"^DD",399,399,163,21,2,0)
authorized by the primary payer.
"^DD",399,399,163,21,3,0)
 
"^DD",399,399,163,21,4,0)
On the CMS-1500 this is box 23, PRIOR AUTHORIZATION NUMBER.
"^DD",399,399,163,21,5,0)
On the UB-04, this is reported in FL63.
"^DD",399,399,163,"DT")
3070201
"^DD",399,399,204,0)
*UB82 FORM LOCATOR 2^F^^U1;4^K:$L(X)>30!($L(X)<2) X
"^DD",399,399,204,3)
Enter the information (2-30 characters) which is to appear in form locator 2 on the UB-82 form.
"^DD",399,399,204,21,0)
^^4^4^3070116^
"^DD",399,399,204,21,1,0)
This allows the user to enter information which will appear in form locator
"^DD",399,399,204,21,2,0)
2 on the UB-82 form.
"^DD",399,399,204,21,3,0)
 
"^DD",399,399,204,21,4,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",399,399,204,23,0)
^^4^4^3070116^
"^DD",399,399,204,23,1,0)
The name (LABEL) of this field has been changed from: FORM LOCATOR 2 
"^DD",399,399,204,23,2,0)
to: UB82 FORM LOCATOR 2 to distinguish it from field #450.
"^DD",399,399,204,23,3,0)
 
"^DD",399,399,204,23,4,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",399,399,204,"DT")
3070116
"^DD",399,399,205,0)
*FORM LOCATOR 9^F^^U1;5^K:$L(X)>7!($L(X)<2) X
"^DD",399,399,205,3)
Enter the information (2-7 characters) which will appear in form locator 9 on the UB-82 form.
"^DD",399,399,205,21,0)
^^4^4^3070116^
"^DD",399,399,205,21,1,0)
This allows the user to enter information which will appear in form locator
"^DD",399,399,205,21,2,0)
9 on the UB-82 form.  
"^DD",399,399,205,21,3,0)
 
"^DD",399,399,205,21,4,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",399,399,205,23,0)
^^4^4^3070116^
"^DD",399,399,205,23,1,0)
Was temporarily used to hold Admitting DX for the UB-92 (FL 76), but was 
"^DD",399,399,205,23,2,0)
replaced by FL 215.
"^DD",399,399,205,23,3,0)
 
"^DD",399,399,205,23,4,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",399,399,205,"DT")
3070116
"^DD",399,399,206,0)
*FORM LOCATOR 27^F^^U1;6^K:$L(X)>8!($L(X)<2) X
"^DD",399,399,206,3)
Enter the information (2-8 characters) which is to appear in form locator 27 on the UB-82 form.
"^DD",399,399,206,21,0)
^^4^4^3070116^
"^DD",399,399,206,21,1,0)
This allows the user to enter information will will appear in form locator
"^DD",399,399,206,21,2,0)
27 on the UB-82 form.
"^DD",399,399,206,21,3,0)
 
"^DD",399,399,206,21,4,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",399,399,206,"DT")
3070116
"^DD",399,399,207,0)
*FORM LOCATOR 45^F^^U1;7^K:$L(X)>17!($L(X)<2) X
"^DD",399,399,207,3)
Enter the information (2-17 characters) which will appear in form locator 45 on the UB-82 form.
"^DD",399,399,207,21,0)
^^4^4^3070116^
"^DD",399,399,207,21,1,0)
This allows the user to enter information which will appear in form locator
"^DD",399,399,207,21,2,0)
45 on the UB-82 form.
"^DD",399,399,207,21,3,0)
 
"^DD",399,399,207,21,4,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",399,399,207,"DT")
3070116
"^DD",399,399,208,0)
*BILL COMMENT^F^^U1;8^K:$L(X)>35!($L(X)<2) X
"^DD",399,399,208,.1)

"^DD",399,399,208,3)
Answer must be 2-35 characters in length
"^DD",399,399,208,21,0)
^^3^3^3070209^
"^DD",399,399,208,21,1,0)
This field is not used after IB patch 349.
"^DD",399,399,208,21,2,0)
The new remarks field for FL-80 on the UB-04 is
"^DD",399,399,208,21,3,0)
BILL REMARKS (field#402).
"^DD",399,399,208,"DT")
3070209
"^DD",399,399,213,0)
*FORM LOCATOR 92^F^^U1;13^K:$L(X)>32!($L(X)<3) X
"^DD",399,399,213,3)
Answer must be 3-32 characters in length.
"^DD",399,399,213,21,0)
^^6^6^3070116^
"^DD",399,399,213,21,1,0)
This is the Attending Physician ID (UPIN) and is printed on the UB-82 in
"^DD",399,399,213,21,2,0)
form locator 92 and form locator 82 on the UB-92.  This field will be
"^DD",399,399,213,21,3,0)
loaded with the ATTENDING PHYSICIAN ID code required by the primary
"^DD",399,399,213,21,4,0)
insurer, if that insurer has a code defined.
"^DD",399,399,213,21,5,0)
 
"^DD",399,399,213,21,6,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",399,399,213,23,0)
^^7^7^3070116^
"^DD",399,399,213,23,1,0)
This field may be null or a value the billing clerk inserted while editing
"^DD",399,399,213,23,2,0)
on screen 8 or a value that the primary insurer requires to print in form
"^DD",399,399,213,23,3,0)
locator 92 of the UB-82 or FL 82 of the UB-92.  If the field is null
"^DD",399,399,213,23,4,0)
then the print routines print the string 'Dept. of Veterans Affairs' in
"^DD",399,399,213,23,5,0)
form locator 82/92.
"^DD",399,399,213,23,6,0)
 
"^DD",399,399,213,23,7,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",399,399,213,"DT")
3070116
"^DD",399,399,215,0)
ADMITTING DIAGNOSIS^*P80'^ICD9(^U2;1^S ICDVDT=$$BDATE^IBACSV(+$G(DA)),DIC("S")="I $$ICD9ACT^IBACSV(+Y,ICDVDT)",DIC("W")="D EN^DDIOL(""   ""_$P($$ICD9^IBACSV(+Y,ICDVDT),U,3),,""?0"")" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",399,399,215,3)
Enter the code for the admitting diagnosis.
"^DD",399,399,215,5,1,0)
362.3^.03^2
"^DD",399,399,215,12)
Only codes active for the date of service may be selected.
"^DD",399,399,215,12.1)
S ICDVDT=$$BDATE^IBACSV(+$G(DA)),DIC("S")="I $$ICD9ACT^IBACSV(+Y,ICDVDT)",DIC("W")="D EN^DDIOL(""   ""_$P($$ICD9^IBACSV(+Y,ICDVDT),U,3),,""?0"")"
"^DD",399,399,215,21,0)
^^5^5^3070116^
"^DD",399,399,215,21,1,0)
The ICD-9 diagnosis code provided at the time of admission as stated
"^DD",399,399,215,21,2,0)
by the physician.
"^DD",399,399,215,21,3,0)
 
"^DD",399,399,215,21,4,0)
The admitting diagnosis code will be printed in Form Locator 69
"^DD",399,399,215,21,5,0)
on the UB-04.
"^DD",399,399,215,"DT")
3070116
"^DD",399,399,216,0)
COVERED DAYS^NJ3,0^^U2;2^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1.N) X
"^DD",399,399,216,3)
Type a number between 0 and 999, 0 Decimal Digits
"^DD",399,399,216,5,1,0)
399^165^1
"^DD",399,399,216,21,0)
^^2^2^3070117^^
"^DD",399,399,216,21,1,0)
The number of days covered by the primary payer, as qualified by the payer
"^DD",399,399,216,21,2,0)
organization.
"^DD",399,399,216,"DT")
3070117
"^DD",399,399,217,0)
NON-COVERED DAYS^NJ4,0^^U2;3^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
"^DD",399,399,217,3)
Type a Number between 0 and 9999, 0 Decimal Digits
"^DD",399,399,217,5,1,0)
399^165^2
"^DD",399,399,217,21,0)
^^1^1^3070117^
"^DD",399,399,217,21,1,0)
Days of care not covered by the primary payer.
"^DD",399,399,217,"DT")
3070117
"^DD",399,399,221,0)
CO-INSURANCE DAYS^NJ3,0^^U2;7^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1.N) X
"^DD",399,399,221,3)
Type a number between 0 and 999, 0 Decimal Digits
"^DD",399,399,221,21,0)
^^1^1^3070117^
"^DD",399,399,221,21,1,0)
This is the # of days.
"^DD",399,399,221,"DT")
3070117
"^DD",399,399,230,0)
SECONDARY AUTHORIZATION CODE^FX^^U2;8^K:$L(X)>18!($L(X)<1) X
"^DD",399,399,230,3)
Answer must be 1-18 characters in length.
"^DD",399,399,230,21,0)
^^5^5^3070201^
"^DD",399,399,230,21,1,0)
This indicates that the treatment covered by this bill has been
"^DD",399,399,230,21,2,0)
authorized by the secondary payer.
"^DD",399,399,230,21,3,0)
 
"^DD",399,399,230,21,4,0)
On the CMS-1500 this is box 23, PRIOR AUTHORIZATION NUMBER.
"^DD",399,399,230,21,5,0)
On the UB-04, this is reported in FL63.
"^DD",399,399,230,"DT")
3070201
"^DD",399,399,231,0)
TERTIARY AUTHORIZATION CODE^F^^U2;9^K:$L(X)>18!($L(X)<1) X
"^DD",399,399,231,3)
Answer must be 1-18 characters in length.
"^DD",399,399,231,21,0)
^^5^5^3070201^
"^DD",399,399,231,21,1,0)
This indicates that the treatment covered by this bill has been 
"^DD",399,399,231,21,2,0)
authorized by the tertiary payer.
"^DD",399,399,231,21,3,0)
 
"^DD",399,399,231,21,4,0)
On the CMS-1500 this is box 23, PRIOR AUTHORIZATION NUMBER.
"^DD",399,399,231,21,5,0)
On the UB-04, this is reported in FL63.
"^DD",399,399,231,"DT")
3070201
"^DD",399,399,401,0)
PRINT FACILITY DATA IN BOX 32^*S^1:YES;^UF2;2^Q
"^DD",399,399,401,3)
Respond YES if the facility name and address should print in box 32 of the CMS-1500 instead of 'SAME'
"^DD",399,399,401,12)
Must be a CMS-1500 form and the division must be the main division for the facility.
"^DD",399,399,401,12.1)
S DIC("S")="N Z S Z=$G(^DGCR(399,+$G(DA),0)) I $S('$G(DA):1,1:$P(Z,U,19)=2&($P($G(^IBE(350.9,1,0)),U,2)=$P($G(^DG(40.8,+$P(Z,U,22),0)),U,7)))"
"^DD",399,399,401,21,0)
^^3^3^3070131^
"^DD",399,399,401,21,1,0)
If this bill is for the facility's main division and it should always
"^DD",399,399,401,21,2,0)
print with the full name and address of the main facility in box 32
"^DD",399,399,401,21,3,0)
of the CMS-1500, this field should be set to YES (1).
"^DD",399,399,401,"DT")
3070131
"^DD",399,399,402,0)
BILL REMARKS^F^^UF2;3^K:$L(X)>80!($L(X)<1) X
"^DD",399,399,402,3)
Answer must be 1-80 characters in length
"^DD",399,399,402,21,0)
^^9^9^3070212^
"^DD",399,399,402,21,1,0)
Enter up to 80 characters of free text which will print in FL-80.
"^DD",399,399,402,21,2,0)
This information will only print on locally printed UB-04 claims.
"^DD",399,399,402,21,3,0)
 
"^DD",399,399,402,21,4,0)
FL-80 on the UB-04 claim form is a 4-line box.  Line 1 can hold a 
"^DD",399,399,402,21,5,0)
maximum of 19 characters after a mandatory 5 character indentation.  
"^DD",399,399,402,21,6,0)
Lines 2-4 can hold a maximum of 24 characters each.
"^DD",399,399,402,21,7,0)
 
"^DD",399,399,402,21,8,0)
The display of these remarks on billing screen 8 is exactly how
"^DD",399,399,402,21,9,0)
the remarks will appear on the printed claim form.
"^DD",399,399,402,"DT")
3070212
"^DD",399,399,450,0)
*UB92 FORM LOCATOR 2^F^^UF3;1^K:$L(X)>59!($L(X)<3) X
"^DD",399,399,450,3)
Answer must be 3-59 characters in length.
"^DD",399,399,450,21,0)
^^5^5^3070117^
"^DD",399,399,450,21,1,0)
FORM LOCATOR 2 ON THE UB-92.
"^DD",399,399,450,21,2,0)
Printed in Form Locator 2 on the UB-92.  If more than 30 characters are
"^DD",399,399,450,21,3,0)
entered this will be printed on two lines.
"^DD",399,399,450,21,4,0)
 
"^DD",399,399,450,21,5,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",399,399,450,23,0)
^^8^8^3070117^
"^DD",399,399,450,23,1,0)
Unlabled Form Locator 2 on the UB-92.  On the form the block is two lines
"^DD",399,399,450,23,2,0)
of 29 and 30 characters, with the upper line optional.  Therefore, if
"^DD",399,399,450,23,3,0)
string is longer than 30 characters it must be split and printed on both
"^DD",399,399,450,23,4,0)
lines.
"^DD",399,399,450,23,5,0)
Field name changed from FORM LOCATOR 2 to UB92 FORM LOCATOR 2
"^DD",399,399,450,23,6,0)
with patch IB*2.0*243.
"^DD",399,399,450,23,7,0)
 
"^DD",399,399,450,23,8,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",399,399,450,"DT")
3070117
"^DD",399,399,451,0)
*FORM LOCATOR 11^F^^UF3;2^K:$L(X)>25!($L(X)<3) X
"^DD",399,399,451,3)
Answer must be 3-25 characters in length.
"^DD",399,399,451,21,0)
^^4^4^3070117^
"^DD",399,399,451,21,1,0)
Printed in Form Locator 11 on the UB-92.  If more than 13 characters are
"^DD",399,399,451,21,2,0)
entered this will be printed on two lines.
"^DD",399,399,451,21,3,0)
 
"^DD",399,399,451,21,4,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",399,399,451,23,0)
^^6^6^3070117^
"^DD",399,399,451,23,1,0)
Unlabled Form Locator 11 on the UB-92.  On the form the block is two lines
"^DD",399,399,451,23,2,0)
of 12 and 13 characters, with the upper line optional.  Therefore, if
"^DD",399,399,451,23,3,0)
string is longer than 13 characters it must be split and printed on both
"^DD",399,399,451,23,4,0)
lines.
"^DD",399,399,451,23,5,0)
 
"^DD",399,399,451,23,6,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",399,399,451,"DT")
3070117
"^DD",399,399,452,0)
*FORM LOCATOR 31^F^^UF3;3^K:$L(X)>11!($L(X)<3) X
"^DD",399,399,452,3)
Answer must be 3-11 characters in length.
"^DD",399,399,452,21,0)
^^4^4^3070117^
"^DD",399,399,452,21,1,0)
Printed in Form Locator 31 on the UB-92.  If more than 6 characters are
"^DD",399,399,452,21,2,0)
entered this will be printed on two lines.
"^DD",399,399,452,21,3,0)
 
"^DD",399,399,452,21,4,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",399,399,452,23,0)
^^5^5^3070117^
"^DD",399,399,452,23,1,0)
Unlabled Form Locator 31 on the UB-92.  On the form the block is two lines
"^DD",399,399,452,23,2,0)
of 5 and 6 characters.  Therefore, if the string is longer than 6
"^DD",399,399,452,23,3,0)
characters it must be split and printed on both lines.
"^DD",399,399,452,23,4,0)
 
"^DD",399,399,452,23,5,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",399,399,452,"DT")
3070117
"^DD",399,399,453,0)
FORM LOCATOR 64A^F^^UF3;4^K:$L(X)>23!($L(X)<3) X
"^DD",399,399,453,.1)
PRIMARY INSURANCE ICN/DCN
"^DD",399,399,453,3)
Answer must be 3-23 characters in length.
"^DD",399,399,453,21,0)
^^4^4^3070119^
"^DD",399,399,453,21,1,0)
Form Locator 64A on the UB-04.  This field is nationally reserved on
"^DD",399,399,453,21,2,0)
adjustment/replacement type bills for the Internal Control Number
"^DD",399,399,453,21,3,0)
(ICN)/Document Control Number (DCN) assigned to the original bill
"^DD",399,399,453,21,4,0)
by the primary payer.
"^DD",399,399,453,"DT")
3070119
"^DD",399,399,454,0)
FORM LOCATOR 64B^F^^UF3;5^K:$L(X)>23!($L(X)<3) X
"^DD",399,399,454,.1)
SECONDARY INSURANCE ICN/DCN
"^DD",399,399,454,3)
Answer must be 3-23 characters in length.
"^DD",399,399,454,21,0)
^^4^4^3070119^
"^DD",399,399,454,21,1,0)
Form Locator 64B on the UB-04.  This field is nationally reserved on
"^DD",399,399,454,21,2,0)
adjustment/replacement type bills for the Internal Control Number
"^DD",399,399,454,21,3,0)
(ICN)/Document Control Number (DCN) assigned to the original bill by the
"^DD",399,399,454,21,4,0)
secondary payer.
"^DD",399,399,454,"DT")
3070119
"^DD",399,399,455,0)
FORM LOCATOR 64C^F^^UF3;6^K:$L(X)>23!($L(X)<3) X
"^DD",399,399,455,.1)
TERTIARY INSURANCE ICN/DCN
"^DD",399,399,455,3)
Answer must be 3-23 characters in length.
"^DD",399,399,455,21,0)
^^4^4^3070119^
"^DD",399,399,455,21,1,0)
Form Locator 64C on the UB-04.  This field is nationally reserved on
"^DD",399,399,455,21,2,0)
adjustment/replacement type bills for the Internal Control Number
"^DD",399,399,455,21,3,0)
(ICN)/Document Control Number (DCN) assigned to the original bill by the
"^DD",399,399,455,21,4,0)
tertiary payer.
"^DD",399,399,455,"DT")
3070119
"^DD",399,399,456,0)
*FORM LOCATOR 56^F^^UF3;7^K:$L(X)>69!($L(X)<3) X
"^DD",399,399,456,3)
Answer must be 3-69 characters in length.
"^DD",399,399,456,21,0)
^^4^4^3070117^
"^DD",399,399,456,21,1,0)
Printed in Form Locator 56 on the UB-92.  If more than 14 characters are
"^DD",399,399,456,21,2,0)
entered this will be printed on multiple lines.
"^DD",399,399,456,21,3,0)
 
"^DD",399,399,456,21,4,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",399,399,456,23,0)
^^6^6^3070117^
"^DD",399,399,456,23,1,0)
Unlabled Form Locator 56 on the UB-92.  On the form the block is five lines
"^DD",399,399,456,23,2,0)
of 13 and 14 characters.  Therefore, if the string is longer than 14
"^DD",399,399,456,23,3,0)
characters it must be split and printed on multiple lines.  The top line of
"^DD",399,399,456,23,4,0)
13 characters will be used last.
"^DD",399,399,456,23,5,0)
 
"^DD",399,399,456,23,6,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",399,399,456,"DT")
3070117
"^DD",399,399,457,0)
*FORM LOCATOR 57^F^^UF31;1^K:$L(X)>27!($L(X)<3) X
"^DD",399,399,457,3)
Answer must be 3-27 characters in length.
"^DD",399,399,457,21,0)
^^3^3^3070117^
"^DD",399,399,457,21,1,0)
Unlabled Form Locator 57 on the UB-92.
"^DD",399,399,457,21,2,0)
 
"^DD",399,399,457,21,3,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",399,399,457,"DT")
3070117
"^DD",399,399,458,0)
*FORM LOCATOR 78^F^^UF31;2^K:$L(X)>5!($L(X)<3) X
"^DD",399,399,458,3)
Answer must be 3-5 characters in length.
"^DD",399,399,458,21,0)
^^4^4^3070117^
"^DD",399,399,458,21,1,0)
Printed in Form Locator 78 on the UB-92.  If more than 3 characters are
"^DD",399,399,458,21,2,0)
entered this will be printed on two lines.
"^DD",399,399,458,21,3,0)
 
"^DD",399,399,458,21,4,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",399,399,458,23,0)
^^6^6^3070117^
"^DD",399,399,458,23,1,0)
Unlabled Form Locator 78 on the UB-92.  On the form the block is two lines
"^DD",399,399,458,23,2,0)
of 2 and 3 characters, with the upper line optional.  Therefore, if
"^DD",399,399,458,23,3,0)
string is longer than 3 characters it must be split and printed on both
"^DD",399,399,458,23,4,0)
lines.
"^DD",399,399,458,23,5,0)
 
"^DD",399,399,458,23,6,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",399,399,458,"DT")
3070117
"^DD",399,399.0304,3,0)
PRINT ORDER^NJ2,0X^^0;4^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X I $D(X),$D(^DGCR(399,DA(1),"CP","D",X)) W !!,*7,"This number already used!" K X
"^DD",399,399.0304,3,1,0)
^.1
"^DD",399,399.0304,3,1,1,0)
399.0304^D
"^DD",399,399.0304,3,1,1,1)
S ^DGCR(399,DA(1),"CP","D",$E(X,1,30),DA)=""
"^DD",399,399.0304,3,1,1,2)
K ^DGCR(399,DA(1),"CP","D",$E(X,1,30),DA)
"^DD",399,399.0304,3,1,1,"DT")
2911030
"^DD",399,399.0304,3,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",399,399.0304,3,21,0)
^^4^4^3070131^
"^DD",399,399.0304,3,21,1,0)
This is the relative order that this procedure will appear on the
"^DD",399,399.0304,3,21,2,0)
bill.  For the UB-04, the procedure with the lowest print order is the
"^DD",399,399.0304,3,21,3,0)
principal procedure and the rest print in FL74 in lowest to highest
"^DD",399,399.0304,3,21,4,0)
print order.
"^DD",399,399.0304,3,"DT")
3070131
"^DD",399,399.0304,9,0)
TYPE OF SERVICE^P353.2'^IBE(353.2,^0;10^Q
"^DD",399,399.0304,9,1,0)
^.1
"^DD",399,399.0304,9,1,1,0)
^^TRIGGER^399.0304^15
"^DD",399,399.0304,9,1,1,1)
X ^DD(399.0304,9,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"CP",D1,0)):^(0),1:"") S X=$P(Y(1),U,16),X=X S DIU=X K Y S X="" X ^DD(399.0304,9,1,1,1.4)
"^DD",399,399.0304,9,1,1,1.3)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(0)=X,I(1,0)=$S($D(D1):D1,1:""),I(0,0)=$S($D(D0):D0,1:""),D0=Y(0) S:'$D(^IBE(353.2,+D0,0)) D0=-1 S Y(101)=$S($D(^IBE(353.2,D0,0)):^(0),1:""),X=$P(Y(101),U,2)'="ANESTHESIA",D0=I(0,0),D1=I(1,0)
"^DD",399,399.0304,9,1,1,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"CP",DIV(1),0)):^(0),1:""),DIV=X S $P(^(0),U,16)=DIV,DIH=399.0304,DIG=15 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399.0304,9,1,1,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGCR(399,D0,"CP",D1,0)):^(0),1:"") S X=$P(Y(1),U,16),X=X S DIU=X K Y S X="" X ^DD(399.0304,9,1,1,2.4)
"^DD",399,399.0304,9,1,1,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"CP",DIV(1),0)):^(0),1:""),DIV=X S $P(^(0),U,16)=DIV,DIH=399.0304,DIG=15 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399.0304,9,1,1,"CREATE CONDITION")
TYPE OF SERVICE:NAME'="ANESTHESIA"
"^DD",399,399.0304,9,1,1,"CREATE VALUE")
@
"^DD",399,399.0304,9,1,1,"DELETE VALUE")
@
"^DD",399,399.0304,9,1,1,"FIELD")
MINUTES
"^DD",399,399.0304,9,3)
Enter the Type of Service appropriate for this procedure.
"^DD",399,399.0304,9,21,0)
^^1^1^3070131^
"^DD",399,399.0304,9,21,1,0)
This is the Type of Service to be associated with this procedure.
"^DD",399,399.0304,9,"DT")
3070131
"^DD",399,399.0304,10,0)
ASSOCIATED DIAGNOSIS (1)^*P362.3'^IBA(362.3,^0;11^S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399.0304,10,3)
Enter the diagnosis related to this procedure.
"^DD",399,399.0304,10,12)
Only Diagnosis for this bill may be chosen.
"^DD",399,399.0304,10,12.1)
S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))"
"^DD",399,399.0304,10,21,0)
^^2^2^3070131^
"^DD",399,399.0304,10,21,1,0)
The diagnosis most closely related to this procedure.  Used only for the
"^DD",399,399.0304,10,21,2,0)
CMS-1500, box 24e.
"^DD",399,399.0304,10,23,0)
^^1^1^3070131^^^^
"^DD",399,399.0304,10,23,1,0)
Converted from (399,304,7) with IB 2.0.
"^DD",399,399.0304,10,"DT")
3070131
"^DD",399,399.0304,11,0)
ASSOCIATED DIAGNOSIS (2)^*P362.3'^IBA(362.3,^0;12^S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399.0304,11,3)
Enter a diagnosis related to this procedure.
"^DD",399,399.0304,11,12)
Only Diagnosis for this bill may be chosen.
"^DD",399,399.0304,11,12.1)
S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))"
"^DD",399,399.0304,11,21,0)
^^2^2^3070131^
"^DD",399,399.0304,11,21,1,0)
The diagnosis most closely related to this procedure.  Used only for the
"^DD",399,399.0304,11,21,2,0)
CMS-1500, box 24e.
"^DD",399,399.0304,11,"DT")
3070131
"^DD",399,399.0304,12,0)
ASSOCIATED DIAGNOSIS (3)^*P362.3'^IBA(362.3,^0;13^S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399.0304,12,3)
Enter a diagnosis related to this procedure.
"^DD",399,399.0304,12,12)
Only Diagnosis for this bill may be chosen.
"^DD",399,399.0304,12,12.1)
S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))"
"^DD",399,399.0304,12,21,0)
^^2^2^3070131^
"^DD",399,399.0304,12,21,1,0)
The diagnosis most closely related to this procedure.  Used only for the
"^DD",399,399.0304,12,21,2,0)
CMS-1500, box 24e.
"^DD",399,399.0304,12,"DT")
3070131
"^DD",399,399.0304,13,0)
ASSOCIATED DIAGNOSIS (4)^*P362.3'^IBA(362.3,^0;14^S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399.0304,13,3)
Enter a diagnosis related to this procedure.
"^DD",399,399.0304,13,12)
Only Diagnosis for this bill may be chosen.
"^DD",399,399.0304,13,12.1)
S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))"
"^DD",399,399.0304,13,21,0)
^^2^2^3070131^
"^DD",399,399.0304,13,21,1,0)
The diagnosis most closely related to this procedure.  Used only for the
"^DD",399,399.0304,13,21,2,0)
CMS-1500, box 24e.
"^DD",399,399.0304,13,"DT")
3070131
"^DD",399,399.042,.13,0)
*UB92 FORM LOCATOR 49^F^^0;13^K:$L(X)>4!($L(X)<1) X
"^DD",399,399.042,.13,3)
Answer must be 1-4 characters in length.
"^DD",399,399.042,.13,21,0)
^^4^4^3070214^
"^DD",399,399.042,.13,21,1,0)
This is the data that should print for a revenue code line in the form
"^DD",399,399.042,.13,21,2,0)
locator 49.
"^DD",399,399.042,.13,21,3,0)
 
"^DD",399,399.042,.13,21,4,0)
This field is marked for deletion and can be deleted 11/23/2008.
"^DD",399,399.042,.13,"DT")
3070214
"^DD",399.1,399.1,.16,0)
OCC RELATED TO^*S^1:EMPLOYMENT;2:AUTO ACCIDENT;3:OTHER ACCIDENT;^0;9^Q
"^DD",399.1,399.1,.16,3)
Enter the code that most accurately relates to the Occurence Code.
"^DD",399.1,399.1,.16,12)
Valid MCCR Occurrence Codes only!
"^DD",399.1,399.1,.16,12.1)
S DIC("S")="I $P(^DGCR(399.1,+DA,0),U,4)=1"
"^DD",399.1,399.1,.16,21,0)
^^2^2^3070131^
"^DD",399.1,399.1,.16,21,1,0)
Relates the Occurrence Codes to the 'Condition Related To' question on the
"^DD",399.1,399.1,.16,21,2,0)
CMS-1500, box 10.
"^DD",399.1,399.1,.16,"DT")
3070131
"^DD",399.4,399.4,0)
FIELD^^.01^2
"^DD",399.4,399.4,0,"DDA")
N
"^DD",399.4,399.4,0,"IX","B",399.4,.01)

"^DD",399.4,399.4,0,"IX","C",399.4,.01)

"^DD",399.4,399.4,0,"NM","MCCR INCONSISTENT DATA ELEMENTS")

"^DD",399.4,399.4,0,"PT",399.044,.01)

"^DD",399.4,399.4,0,"PT",399.045,.01)

"^DD",399.4,399.4,0,"VRPK")
IB
"^DD",399.4,399.4,.001,0)
NUMBER^NJ3,0^^ ^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",399.4,399.4,.001,3)
Enter form locator number which corresponds to this entry on the UB-82 form.
"^DD",399.4,399.4,.001,21,0)
^^2^2^2880901^
"^DD",399.4,399.4,.001,21,1,0)
This number corresponds to the form locator number of this entry on the
"^DD",399.4,399.4,.001,21,2,0)
UB-82 form.
"^DD",399.4,399.4,.01,0)
NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>55!($L(X)<3)!'(X'?1P.E) X
"^DD",399.4,399.4,.01,1,0)
^.1
"^DD",399.4,399.4,.01,1,1,0)
399.4^B
"^DD",399.4,399.4,.01,1,1,1)
S ^DGCR(399.4,"B",$E(X,1,30),DA)=""
"^DD",399.4,399.4,.01,1,1,2)
K ^DGCR(399.4,"B",$E(X,1,30),DA)
"^DD",399.4,399.4,.01,1,2,0)
399.4^C^KWIC
"^DD",399.4,399.4,.01,1,2,1)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^DGCR(399.4,"C",I,DA)=""
"^DD",399.4,399.4,.01,1,2,2)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^DGCR(399.4,"C",I,DA)
"^DD",399.4,399.4,.01,3)
Enter the 3-55 character reason for disapproval.
"^DD",399.4,399.4,.01,21,0)
^^2^2^2880901^
"^DD",399.4,399.4,.01,21,1,0)
This defines a reason why a bill may be disapproved during the review phase
"^DD",399.4,399.4,.01,21,2,0)
of the billing process.
"^DIC",350.8,350.8,0)
IB ERROR
"^DIC",350.8,350.8,0,"GL")
^IBE(350.8,
"^DIC",350.8,350.8,"%D",0)
^^11^11^2940214^^^^
"^DIC",350.8,350.8,"%D",1,0)
This file contains errors for billing functions.  It may be used by
"^DIC",350.8,350.8,"%D",2,0)
applications, IB or AR.  The normal format for a routine to return
"^DIC",350.8,350.8,"%D",3,0)
an error is to return the variable:
"^DIC",350.8,350.8,"%D",4,0)
  Y=1^... a successful event occured
"^DIC",350.8,350.8,"%D",5,0)
  Y=-1^error code[;error code;error code...]^additional text
"^DIC",350.8,350.8,"%D",6,0)
The error messages can be displayed by calling routine ^IBAERR.  If
"^DIC",350.8,350.8,"%D",7,0)
the error occurs in a tasked job ($D(ZTQUEUED)'=0) the routine will
"^DIC",350.8,350.8,"%D",8,0)
put the error message in a bulletin and post it to the group defined
"^DIC",350.8,350.8,"%D",9,0)
in the IB SITE PARAMETER FILE.
"^DIC",350.8,350.8,"%D",10,0)
 
"^DIC",350.8,350.8,"%D",11,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",350.8,"B","IB ERROR",350.8)

"^DIC",364.5,364.5,0)
IB DATA ELEMENT DEFINITION^364.5
"^DIC",364.5,364.5,0,"GL")
^IBA(364.5,
"^DIC",364.5,364.5,"%D",0)
^^8^8^2970606^^^^
"^DIC",364.5,364.5,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.5,364.5,"%D",2,0)
 
"^DIC",364.5,364.5,"%D",3,0)
This file contains the definition of all data elements that are needed for
"^DIC",364.5,364.5,"%D",4,0)
various forms throughout the MCCR DHCP system.  It contains the 'blueprint'
"^DIC",364.5,364.5,"%D",5,0)
for how to extract the data for each data element entry.
"^DIC",364.5,364.5,"%D",6,0)
 
"^DIC",364.5,364.5,"%D",7,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.5,364.5,"%D",8,0)
NATIONAL should not be deleted or edited.
"^DIC",364.5,"B","IB DATA ELEMENT DEFINITION",364.5)

"^DIC",364.6,364.6,0)
IB FORM SKELETON DEFINITION^364.6P
"^DIC",364.6,364.6,0,"GL")
^IBA(364.6,
"^DIC",364.6,364.6,"%D",0)
^^10^10^2970606^^^^
"^DIC",364.6,364.6,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.6,364.6,"%D",2,0)
 
"^DIC",364.6,364.6,"%D",3,0)
This file contains records that define the skeleton makeup of forms for
"^DIC",364.6,364.6,"%D",4,0)
the IB system.  This definition includes the absolute position of every
"^DIC",364.6,364.6,"%D",5,0)
field that can be output on the form, the length each field must be limited
"^DIC",364.6,364.6,"%D",6,0)
to, and some descriptive information.   This includes printed forms,
"^DIC",364.6,364.6,"%D",7,0)
transmittable output files, and special local billing screens.
"^DIC",364.6,364.6,"%D",8,0)
 
"^DIC",364.6,364.6,"%D",9,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.6,364.6,"%D",10,0)
NATIONAL should not be deleted or edited.
"^DIC",364.6,"B","IB FORM SKELETON DEFINITION",364.6)

"^DIC",364.7,364.7,0)
IB FORM FIELD CONTENT^364.7P
"^DIC",364.7,364.7,0,"GL")
^IBA(364.7,
"^DIC",364.7,364.7,"%D",0)
^1.001^9^9^3030331^^^^
"^DIC",364.7,364.7,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.7,364.7,"%D",2,0)
 
"^DIC",364.7,364.7,"%D",3,0)
This is the file that contains the specific fields to be used to produce
"^DIC",364.7,364.7,"%D",4,0)
the associated form or screen.  If there is no insurance company or bill
"^DIC",364.7,364.7,"%D",5,0)
type specified for an entry, this is assumed to be the default definition
"^DIC",364.7,364.7,"%D",6,0)
of the field.
"^DIC",364.7,364.7,"%D",7,0)
 
"^DIC",364.7,364.7,"%D",8,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.7,364.7,"%D",9,0)
NATIONAL should not be deleted or edited.
"^DIC",364.7,"B","IB FORM FIELD CONTENT",364.7)

"^DIC",399.4,399.4,0)
MCCR INCONSISTENT DATA ELEMENTS^399.4
"^DIC",399.4,399.4,0,"GL")
^DGCR(399.4,
"^DIC",399.4,399.4,"%",0)
^1.005^^0
"^DIC",399.4,399.4,"%D",0)
^^6^6^3061215^
"^DIC",399.4,399.4,"%D",1,0)
This file contains a list of all possible reasons why a bill may be
"^DIC",399.4,399.4,"%D",2,0)
disapproved during the review phase of the billing process. Each
"^DIC",399.4,399.4,"%D",3,0)
element in this file corresponds directly to a form locator on the
"^DIC",399.4,399.4,"%D",4,0)
UB-04 form.
"^DIC",399.4,399.4,"%D",5,0)
 
"^DIC",399.4,399.4,"%D",6,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",399.4,"B","MCCR INCONSISTENT DATA ELEMENTS",399.4)

"BLD",6575,6)
^334
**END**
**END**
