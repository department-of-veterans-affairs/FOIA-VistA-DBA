Released XT*7.3*95 SEQ #74
Extracted from mail message
**KIDS**:XT*7.3*95^

**INSTALL NAME**
XT*7.3*95
"BLD",866,0)
XT*7.3*95^TOOLKIT^0^3050602^y
"BLD",866,4,0)
^9.64PA^15.1^1
"BLD",866,4,15.1,0)
15.1
"BLD",866,4,15.1,2,0)
^9.641^15.1^1
"BLD",866,4,15.1,2,15.1,0)
DUPLICATE RESOLUTION  (File-top level)
"BLD",866,4,15.1,2,15.1,1,0)
^9.6411^1.03^1
"BLD",866,4,15.1,2,15.1,1,1.03,0)
SECONDS TO WAIT FOR STOP CHECK
"BLD",866,4,15.1,222)
y^n^p^^^^n^^n
"BLD",866,4,15.1,224)

"BLD",866,4,"APDD",15.1,15.1)

"BLD",866,4,"APDD",15.1,15.1,1.03)

"BLD",866,4,"B",15.1,15.1)

"BLD",866,"INIT")
XT95POST
"BLD",866,"KRN",0)
^9.67PA^8989.52^19
"BLD",866,"KRN",.4,0)
.4
"BLD",866,"KRN",.401,0)
.401
"BLD",866,"KRN",.402,0)
.402
"BLD",866,"KRN",.403,0)
.403
"BLD",866,"KRN",.5,0)
.5
"BLD",866,"KRN",.84,0)
.84
"BLD",866,"KRN",3.6,0)
3.6
"BLD",866,"KRN",3.8,0)
3.8
"BLD",866,"KRN",9.2,0)
9.2
"BLD",866,"KRN",9.8,0)
9.8
"BLD",866,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",866,"KRN",9.8,"NM",1,0)
XDRMERG0^^0^65852664
"BLD",866,"KRN",9.8,"NM",2,0)
XDRMERG1^^0^27242633
"BLD",866,"KRN",9.8,"NM","B","XDRMERG0",1)

"BLD",866,"KRN",9.8,"NM","B","XDRMERG1",2)

"BLD",866,"KRN",19,0)
19
"BLD",866,"KRN",19.1,0)
19.1
"BLD",866,"KRN",101,0)
101
"BLD",866,"KRN",409.61,0)
409.61
"BLD",866,"KRN",771,0)
771
"BLD",866,"KRN",870,0)
870
"BLD",866,"KRN",8989.51,0)
8989.51
"BLD",866,"KRN",8989.52,0)
8989.52
"BLD",866,"KRN",8994,0)
8994
"BLD",866,"KRN","B",.4,.4)

"BLD",866,"KRN","B",.401,.401)

"BLD",866,"KRN","B",.402,.402)

"BLD",866,"KRN","B",.403,.403)

"BLD",866,"KRN","B",.5,.5)

"BLD",866,"KRN","B",.84,.84)

"BLD",866,"KRN","B",3.6,3.6)

"BLD",866,"KRN","B",3.8,3.8)

"BLD",866,"KRN","B",9.2,9.2)

"BLD",866,"KRN","B",9.8,9.8)

"BLD",866,"KRN","B",19,19)

"BLD",866,"KRN","B",19.1,19.1)

"BLD",866,"KRN","B",101,101)

"BLD",866,"KRN","B",409.61,409.61)

"BLD",866,"KRN","B",771,771)

"BLD",866,"KRN","B",870,870)

"BLD",866,"KRN","B",8989.51,8989.51)

"BLD",866,"KRN","B",8989.52,8989.52)

"BLD",866,"KRN","B",8994,8994)

"BLD",866,"QUES",0)
^9.62^^
"BLD",866,"REQB",0)
^9.611^2^2
"BLD",866,"REQB",1,0)
XT*7.3*47^1
"BLD",866,"REQB",2,0)
XT*7.3*83^1
"BLD",866,"REQB","B","XT*7.3*47",1)

"BLD",866,"REQB","B","XT*7.3*83",2)

"FIA",15.1)
DUPLICATE RESOLUTION
"FIA",15.1,0)
^VA(15.1,
"FIA",15.1,0,0)
15.1P
"FIA",15.1,0,1)
y^n^p^^^^n^^n
"FIA",15.1,0,10)

"FIA",15.1,0,11)

"FIA",15.1,0,"RLRO")

"FIA",15.1,0,"VR")
7.3^XT
"FIA",15.1,15.1)
1
"FIA",15.1,15.1,1.03)

"INIT")
XT95POST
"MBREQ")
0
"PKG",6,-1)
1^1
"PKG",6,0)
TOOLKIT^XT^PROGRAMMERS OPTIONS, MULTI. TERM LOOKUP^
"PKG",6,20,0)
^9.402P^^
"PKG",6,22,0)
^9.49I^1^1
"PKG",6,22,1,0)
7.3^3040428^2970513^2
"PKG",6,22,1,"PAH",1,0)
95^3050602
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","XDRMERG0")
0^1^B65852664
"RTN","XDRMERG0",1,0)
XDRMERG0 ;SF-IRMFO.SEA/JLI - START OF NON-INTERACTIVE BATCH MERGE ;04/28/2005  12:11
"RTN","XDRMERG0",2,0)
 ;;7.3;TOOLKIT;**23,36,43,49,83,95**;Apr 25, 1995
"RTN","XDRMERG0",3,0)
 ;;
"RTN","XDRMERG0",4,0)
 ; Covered Under DBIA's (#2710, #2796, #3765)
"RTN","XDRMERG0",5,0)
 ;
"RTN","XDRMERG0",6,0)
 Q
"RTN","XDRMERG0",7,0)
QUE ; This is the entry point for queueing a merge process
"RTN","XDRMERG0",8,0)
 ;
"RTN","XDRMERG0",9,0)
 D EN^XDRVCHEK ; update verified and/or ready to merge statuses if necessary
"RTN","XDRMERG0",10,0)
 ;
"RTN","XDRMERG0",11,0)
 G QUE^XDRMERGB ; CODE MOVED TO KEEP DOWN SIZE OF ROUTINE
"RTN","XDRMERG0",12,0)
 ;
"RTN","XDRMERG0",13,0)
DQ ; This is the entry point for actually processing the merge task
"RTN","XDRMERG0",14,0)
 ; Either as the initial entry or on restart.
"RTN","XDRMERG0",15,0)
 ;
"RTN","XDRMERG0",16,0)
 N XDRZZZ,XDRFILE,XDRPACK,XDRPACKN,XDRSFILE,XDRFDA1,XDRPACKN
"RTN","XDRMERG0",17,0)
 N XDRROU,XDRCODE,XDRGLOB,XDRDVALF,DIQUIET,RGRSICN,XDRTIME
"RTN","XDRMERG0",18,0)
 S XDRDVALF=1,XDRZZZ=$NA(^TMP("XDRFROM",$J)) K @XDRZZZ
"RTN","XDRMERG0",19,0)
 S DIQUIET=1,RGRSICN=1
"RTN","XDRMERG0",20,0)
 ;
"RTN","XDRMERG0",21,0)
 I $$NEWERR^%ZTER() N $ETRAP,$ESTACK S $ETRAP="D ERR^XDRMERG0"
"RTN","XDRMERG0",22,0)
 E  S X="ERR^XDRMERG0",@^%ZOSF("TRAP")
"RTN","XDRMERG0",23,0)
 S XDRGLOB=^DIC($P(^VA(15.2,XDRFDA,0),U,2),0,"GL"),XDRGLOB=";"_$E(XDRGLOB,2,$L(XDRGLOB)),XDRTIME=$P(^VA(15.1,$P(^VA(15.2,XDRFDA,0),U,2),1),U,3)
"RTN","XDRMERG0",24,0)
 F I=0:0 S I=$O(^VA(15.2,XDRFDA,2,I)) Q:I'>0  S X=^(I,0) D
"RTN","XDRMERG0",25,0)
 . S @XDRZZZ@(+X,$P(X,U,2),((+X)_XDRGLOB),$P(X,U,2)_XDRGLOB)=$P(X,U,3) ; REVISED WITH 4 SUBSCRIPTS TO SAVE MERGE IMAGE IN FM STRUCTURED FILE
"RTN","XDRMERG0",26,0)
 . ;
"RTN","XDRMERG0",27,0)
 . ; THE FOLLOWING LINES OF CODE ADDED TO TAKE CARE OF RESTARTS IN WHICH THE LABORATORY POINTERS ARE IN AN INTERMEDIATE STATE PRIOR TO COMPLETION - JLI 03-22-99
"RTN","XDRMERG0",28,0)
 . ; DURING THE MERGE PROCESS THE ^LR( ENTRY IS SET TO SIMPLY THE LRIEN VALUE AND A -9 NODE ADDED,
"RTN","XDRMERG0",29,0)
 . ; AT THE END OF LAB MERGE PROCESSING, THE FROM PATIENT ENTRY HAS ITS LR VALUE SET TO THE LRIEN FOR THE TO ENTRY
"RTN","XDRMERG0",30,0)
 . ; WHICH IS PRESENT UNTIL THE PATIENT ENTRIES ARE MERGED.  IF THE MERGE IS STOPPED PRIOR TO THE LABORATORY
"RTN","XDRMERG0",31,0)
 . ; PROCESSING BEING MARKED COMPLETE, ON RE-ENTRY INTO THE LAB PROCESSING PAIRS WITH THE FROM ENTRY LAB DATA LEFT
"RTN","XDRMERG0",32,0)
 . ; IN EITHER OF THE ABOVE STATES ARE EXCLUDED FROM THE MERGE.
"RTN","XDRMERG0",33,0)
 . ; THE FOLLOWING CODE RESTORES THE CORRECT LRIEN POINTER AND LR(LRIEN,0) NODE FOR THE FROM VALUES
"RTN","XDRMERG0",34,0)
 . ;
"RTN","XDRMERG0",35,0)
 . I XDRGLOB=";DPT(",$D(^DPT(+X,"LR")) D
"RTN","XDRMERG0",36,0)
 . . N TO,LR,FROMVAR S TO=$P(X,U,2),LR=^DPT(+X,"LR"),LR=$G(^LR(LR,0)) I $P(LR,U,2)=2,$P(LR,U,3)=+X Q
"RTN","XDRMERG0",37,0)
 . . I ($P(LR,U,2)=""&($P(LR,U,3)=""))!($P(LR,U,2)=2&($P(LR,U,3)=TO)) D
"RTN","XDRMERG0",38,0)
 . . . N DA F DA=0:0 S DA=$O(^XDRM("B",((+X)_XDRGLOB),DA)) Q:DA'>0  S LR=^XDRM(DA,1,1,0) I LR["LAB DATA" S LR=$P(LR,U,2) I LR>0 S ^DPT(+X,"LR")=LR,^LR(LR,0)=LR_U_"2"_U_(+X) K ^LR(LR,-9) Q
"RTN","XDRMERG0",39,0)
 . ; END OF CODE ADDITION FOR LAB POINTER PROBLEM
"RTN","XDRMERG0",40,0)
 ;
"RTN","XDRMERG0",41,0)
 ; DO DATA CHECKING BEFORE STARTING MERGE
"RTN","XDRMERG0",42,0)
 ;
"RTN","XDRMERG0",43,0)
 I $P(^VA(15.2,XDRFDA,0),U,4)="S" S $P(^(0),U,3,4)=$$NOW^XLFDT()_U_"A"
"RTN","XDRMERG0",44,0)
 S XDRPRE=1 D
"RTN","XDRMERG0",45,0)
 . S XDRFDA1=$$ADDSPECL("DATA CHECKING")
"RTN","XDRMERG0",46,0)
 . I $P(^VA(15.2,XDRFDA,3,XDRFDA1,0),U,3)="C" Q
"RTN","XDRMERG0",47,0)
 . S $P(^VA(15.2,XDRFDA,3,XDRFDA1,0),U,2,9)=$$NOW^XLFDT()_"^A^^^^"
"RTN","XDRMERG0",48,0)
 . D ENPAIR^XDRDVAL1($P(^VA(15.2,XDRFDA,0),U,2),XDRZZZ,XDRFDA) ; CHECK FOR DATA VALIDITY PROBLEMS, REMOVE ANY PAIRS THAT HAVE PROBLEMS
"RTN","XDRMERG0",49,0)
 . D CHKFROM^XDRMERG2(XDRZZZ,$P(^VA(15.2,XDRFDA,0),U,2))
"RTN","XDRMERG0",50,0)
 . I '$D(@XDRZZZ) D
"RTN","XDRMERG0",51,0)
 . . D SETCOMPL ; MARK DATA CHECKING COMPLETE
"RTN","XDRMERG0",52,0)
 . . S XDRFDA1=$$ADDSPECL("NO PAIRS LEFT") D SETCOMPL
"RTN","XDRMERG0",53,0)
 . . S XDRFDA1=$$ADDSPECL("**STOPPED**")
"RTN","XDRMERG0",54,0)
 . . K XDRPRE ; AND MAKE IT CLOSE WHOLE PROCESS
"RTN","XDRMERG0",55,0)
 . D SETCOMPL
"RTN","XDRMERG0",56,0)
 . Q
"RTN","XDRMERG0",57,0)
 ;
"RTN","XDRMERG0",58,0)
 I '$D(@XDRZZZ) Q
"RTN","XDRMERG0",59,0)
 S XDRFILE=$P(^VA(15.2,XDRFDA,0),U,2) Q:XDRFILE'>0
"RTN","XDRMERG0",60,0)
 I $P(^VA(15.2,XDRFDA,0),U,4)="S" S $P(^(0),U,3,4)=$$NOW^XLFDT()_U_"A"
"RTN","XDRMERG0",61,0)
 E  S I=$P(^VA(15.2,XDRFDA,0),U,7),$P(^(0),U,4,7)="A"_U_$$NOW^XLFDT()_U_U_(I+1)
"RTN","XDRMERG0",62,0)
 ;
"RTN","XDRMERG0",63,0)
 ; PROCESS ANY SPECIAL HANDLING INDICATED FOR PACKAGES
"RTN","XDRMERG0",64,0)
 ;
"RTN","XDRMERG0",65,0)
 F XDRPACK=0:0 S XDRPACK=$O(^DIC(9.4,XDRPACK)) Q:XDRPACK'>0  D  Q:'$D(@XDRZZZ)
"RTN","XDRMERG0",66,0)
 . F XDRSFILE=0:0 S XDRSFILE=$O(^DIC(9.4,XDRPACK,20,XDRSFILE)) Q:XDRSFILE'>0  D  Q:'$D(@XDRZZZ)
"RTN","XDRMERG0",67,0)
 . . I $P(^DIC(9.4,XDRPACK,20,XDRSFILE,0),U)=XDRFILE D
"RTN","XDRMERG0",68,0)
 . . . S X=^DIC(9.4,XDRPACK,20,XDRSFILE,0)
"RTN","XDRMERG0",69,0)
 . . . S XDRPACKN=$P(^DIC(9.4,XDRPACK,0),U)
"RTN","XDRMERG0",70,0)
 . . . S XDRROU=$P(X,U,2,3)
"RTN","XDRMERG0",71,0)
 . . . S XDRCODE=$G(^DIC(9.4,XDRPACK,20,XDRSFILE,1))
"RTN","XDRMERG0",72,0)
 . . . S XDRFDA1=$$ADDSPECL(XDRPACKN)
"RTN","XDRMERG0",73,0)
 . . . I $P(^VA(15.2,XDRFDA,3,XDRFDA1,0),U,3)="C" Q
"RTN","XDRMERG0",74,0)
 . . . S $P(^VA(15.2,XDRFDA,3,XDRFDA1,0),U,2,9)=$$NOW^XLFDT()_"^A^^^^"_ZTSK_U_XDRROU
"RTN","XDRMERG0",75,0)
 . . . D DQ1
"RTN","XDRMERG0",76,0)
 . . . I '$D(@XDRZZZ) D
"RTN","XDRMERG0",77,0)
 . . . . S XDRFDA1=$$ADDSPECL("NO PAIRS LEFT") D SETCOMPL
"RTN","XDRMERG0",78,0)
 . . . . S XDRFDA1=$$ADDSPECL("**STOPPED**")
"RTN","XDRMERG0",79,0)
 . . . . K XDRPRE ; AND MAKE IT CLOSE WHOLE PROCESS
"RTN","XDRMERG0",80,0)
 K XDRPRE
"RTN","XDRMERG0",81,0)
 ;
"RTN","XDRMERG0",82,0)
 ; Mark completed and quit if no pairs are left
"RTN","XDRMERG0",83,0)
 ;
"RTN","XDRMERG0",84,0)
 I '$D(@XDRZZZ) S $P(^VA(15.2,XDRFDA,0),U,4)="C",$P(^VA(15.2,XDRFDA,0),U,6)=$$NOW^XLFDT() Q
"RTN","XDRMERG0",85,0)
 ;
"RTN","XDRMERG0",86,0)
 ; NOW PROCESS THE MAIN FILE AND ITS DEPENDENCIES
"RTN","XDRMERG0",87,0)
 ;
"RTN","XDRMERG0",88,0)
 I '$D(ZTSTOP) D
"RTN","XDRMERG0",89,0)
 . S XDRFDA1=$$ADDSPECL($P(^DIC(XDRFILE,0),U)_" FILE")
"RTN","XDRMERG0",90,0)
 . I $P(^VA(15.2,XDRFDA,3,XDRFDA1,0),U,3)="C" Q
"RTN","XDRMERG0",91,0)
 . S $P(^VA(15.2,XDRFDA,3,XDRFDA1,0),U,2,7)=$$NOW^XLFDT()_U_"A^^^^"_$G(ZTSK)
"RTN","XDRMERG0",92,0)
 . S $P(^VA(15.2,XDRFDA,3,XDRFDA1,1),U)=$$NOW^XLFDT()
"RTN","XDRMERG0",93,0)
 . S X=^VA(15.2,XDRFDA,3,XDRFDA1,1)
"RTN","XDRMERG0",94,0)
 . S XDRCSTAT=$P(X,U,2),XDRCFIL=$P(X,U,3),XDRCENT=$P(X,U,4)
"RTN","XDRMERG0",95,0)
 . ;
"RTN","XDRMERG0",96,0)
 . I XDRCSTAT'="" Q
"RTN","XDRMERG0",97,0)
 . I $D(ZTSTOP) S $P(^VA(15.2,XDRFDA,3,XDRFDA1,0),U,3)="H"
"RTN","XDRMERG0",98,0)
 ;
"RTN","XDRMERG0",99,0)
 I '$D(ZTSTOP) D
"RTN","XDRMERG0",100,0)
 . S XDRFDA2=XDRFDA1
"RTN","XDRMERG0",101,0)
 . F  S XDRFDA1=$O(^VA(15.2,XDRFDA,3,XDRFDA1)) Q:XDRFDA1'>0  D
"RTN","XDRMERG0",102,0)
 . . S ZTRTN="RETHREAD^XDRMERG0",ZTIO="",ZTDESC="MERGE THREAD"
"RTN","XDRMERG0",103,0)
 . . S ZTSAVE("XDRFDA")="",ZTSAVE("XDRFDA1")="",ZTDTH=$$NOW^XLFDT()
"RTN","XDRMERG0",104,0)
 . . D ^%ZTLOAD
"RTN","XDRMERG0",105,0)
 . I $P(^VA(15.2,XDRFDA,3,XDRFDA2,0),U,3)="C" Q
"RTN","XDRMERG0",106,0)
 . S XDRFDA1=XDRFDA2 K XDRTHRED F I=0:0 S I=$O(^VA(15.2,XDRFDA,3,XDRFDA1,2,I)) Q:I'>0  S J=^(I,0) S XDRTHRED(J)=""
"RTN","XDRMERG0",107,0)
 . S ^VA(15.2,XDRFDA,1)=$$NOW^XLFDT()
"RTN","XDRMERG0",108,0)
 . D RESTART^XDRMERG(XDRFILE,$NA(^TMP("XDRFROM",$J)),XDRCSTAT,XDRCFIL,XDRCENT)
"RTN","XDRMERG0",109,0)
 ;
"RTN","XDRMERG0",110,0)
 I $D(ZTSTOP) S $P(^VA(15.2,XDRFDA,0),U,4)="H"
"RTN","XDRMERG0",111,0)
 E  D SETCOMPL
"RTN","XDRMERG0",112,0)
 Q
"RTN","XDRMERG0",113,0)
 ;
"RTN","XDRMERG0",114,0)
DQTHREAD ; START POINT FOR EXTRA THREADS
"RTN","XDRMERG0",115,0)
 N XDRNAME,XDRFDA1,I,X,XDRZZZ,XDRTIME
"RTN","XDRMERG0",116,0)
 S XDRZZZ=$NA(^TMP("XDRFROM",$J)) K @XDRZZZ
"RTN","XDRMERG0",117,0)
 ;
"RTN","XDRMERG0",118,0)
 S XDRFILE=$P($G(^VA(15.2,XDRFDA,0)),U,2) Q:XDRFILE'>0
"RTN","XDRMERG0",119,0)
 S XDRTIME=$P(^VA(15.1,$P(^VA(15.2,XDRFDA,0),U,2),1),U,3)
"RTN","XDRMERG0",120,0)
 S XDRNAME="  THREAD "_XDRTHRED
"RTN","XDRMERG0",121,0)
 S XDRFDA1=$$ADDSPECL(XDRNAME)
"RTN","XDRMERG0",122,0)
 I $P(^VA(15.2,XDRFDA,3,XDRFDA1,0),U,3)="C" Q
"RTN","XDRMERG0",123,0)
 S $P(^VA(15.2,XDRFDA,3,XDRFDA1,0),U,2,7)=$$NOW^XLFDT()_U_"A^^^^"_$G(ZTSK)
"RTN","XDRMERG0",124,0)
 S XDRGLOB=^DIC($P(^VA(15.2,XDRFDA,0),U,2),0,"GL"),XDRGLOB=";"_$E(XDRGLOB,2,$L(XDRGLOB))
"RTN","XDRMERG0",125,0)
 F I=0:0 S I=$O(^VA(15.2,XDRFDA,2,I)) Q:I'>0  S X=^(I,0) D
"RTN","XDRMERG0",126,0)
 . ; S @XDRZZZ@(+X,+$P(X,U,2))=$P(X,U,3) ; ORIGINAL VERSION WITH 2 SUBSCRIPTS
"RTN","XDRMERG0",127,0)
 . S @XDRZZZ@(+X,$P(X,U,2),((+X)_XDRGLOB),$P(X,U,2)_XDRGLOB)=$P(X,U,3) ; REVISED WITH 4 SUBSCRIPTS TO SAVE MERGE IMAGE IN FM STRUCTURED FILE
"RTN","XDRMERG0",128,0)
 F I=0:0 S I=$O(XDRTHRED(I)) Q:I'>0  D
"RTN","XDRMERG0",129,0)
 . S ^VA(15.2,XDRFDA,3,XDRFDA1,2,I,0)=I
"RTN","XDRMERG0",130,0)
 S X=$G(^VA(15.2,XDRFDA,3,XDRFDA1,1))
"RTN","XDRMERG0",131,0)
 S XDRCFIL=+$P(X,U,3),XDRCENT=+$P(X,U,4)
"RTN","XDRMERG0",132,0)
 D RESTART^XDRMERG(XDRFILE,$NA(^TMP("XDRFROM",$J)),3,XDRCFIL,XDRCENT)
"RTN","XDRMERG0",133,0)
 I $D(ZTSTOP) S $P(^VA(15.2,XDRFDA,3,XDRFDA1,0),U,3)="H"
"RTN","XDRMERG0",134,0)
 E  D SETCOMPL
"RTN","XDRMERG0",135,0)
 Q
"RTN","XDRMERG0",136,0)
 ;
"RTN","XDRMERG0",137,0)
RETHREAD ; RESTART THREADS
"RTN","XDRMERG0",138,0)
 N I
"RTN","XDRMERG0",139,0)
 K XDRTHRED
"RTN","XDRMERG0",140,0)
 F I=0:0 S I=$O(^VA(15.2,XDRFDA,3,XDRFDA1,2,I)) Q:I'>0  S J=^(I,0),XDRTHRED(J)=""
"RTN","XDRMERG0",141,0)
 S XDRTHRED=$P($P(^VA(15.2,XDRFDA,3,XDRFDA1,0),U)," THREAD ",2)
"RTN","XDRMERG0",142,0)
 D DQTHREAD
"RTN","XDRMERG0",143,0)
 Q
"RTN","XDRMERG0",144,0)
 ;
"RTN","XDRMERG0",145,0)
DQ1 ; HANDLE MERGE OF SPECIAL FILES
"RTN","XDRMERG0",146,0)
 N X,XDRROU
"RTN","XDRMERG0",147,0)
 S X=$G(^VA(15.2,XDRFDA,3,XDRFDA1,0))
"RTN","XDRMERG0",148,0)
 I $P(X,U,3)="C" Q
"RTN","XDRMERG0",149,0)
 S $P(^VA(15.2,XDRFDA,3,XDRFDA1,0),U,2,7)=$$NOW^XLFDT()_U_"A^^^^"_$G(ZTSK)
"RTN","XDRMERG0",150,0)
 S $P(^VA(15.2,XDRFDA,3,XDRFDA1,1),U)=$$NOW^XLFDT()
"RTN","XDRMERG0",151,0)
 S X=^VA(15.2,XDRFDA,3,XDRFDA1,1)
"RTN","XDRMERG0",152,0)
 S XDRCSTAT=$P(X,U,2),XDRCFIL=$P(X,U,3),XDRCENT=$P(X,U,4)
"RTN","XDRMERG0",153,0)
 S XDRROU=$P(^VA(15.2,XDRFDA,3,XDRFDA1,0),U,8,9) Q:XDRROU=""
"RTN","XDRMERG0",154,0)
 I $P(XDRROU,U)="" S XDRROU="EN"_XDRROU
"RTN","XDRMERG0",155,0)
 D @(XDRROU_"(XDRZZZ)")
"RTN","XDRMERG0",156,0)
 I $D(ZTSTOP) S $P(^VA(15.2,XDRFDA,3,XDRFDA1,0),U,3)="H"
"RTN","XDRMERG0",157,0)
 E  D SETCOMPL
"RTN","XDRMERG0",158,0)
 Q
"RTN","XDRMERG0",159,0)
 ;
"RTN","XDRMERG0",160,0)
SETCOMPL ; Indicate that a component of the process was completed
"RTN","XDRMERG0",161,0)
 ;
"RTN","XDRMERG0",162,0)
 S $P(^VA(15.2,XDRFDA,3,XDRFDA1,0),U,5)=$$NOW^XLFDT()
"RTN","XDRMERG0",163,0)
 S $P(^VA(15.2,XDRFDA,3,XDRFDA1,0),U,3)="C"
"RTN","XDRMERG0",164,0)
 K ^VA(15.2,XDRFDA,3,XDRFDA1,1)
"RTN","XDRMERG0",165,0)
 S J=1 F I=0:0 S I=$O(^VA(15.2,XDRFDA,3,I)) Q:I'>0  I $P(^(I,0),U,3)'="C" S J=0 Q
"RTN","XDRMERG0",166,0)
 I J=1,+$G(XDRPRE)=0 D  ; All threads have completed
"RTN","XDRMERG0",167,0)
 . S $P(^VA(15.2,XDRFDA,0),U,6)=$$NOW^XLFDT()
"RTN","XDRMERG0",168,0)
 . S $P(^VA(15.2,XDRFDA,0),U,4)="C"
"RTN","XDRMERG0",169,0)
 . F XDRXX=0:0 S XDRXX=$O(@XDRZZZ@(XDRXX)) Q:XDRXX'>0  D
"RTN","XDRMERG0",170,0)
 . . S XDRYY=$O(@XDRZZZ@(XDRXX,0)),XDRY1=$O(@XDRZZZ@(XDRXX,XDRYY,"")),XDRY2=$O(@XDRZZZ@(XDRXX,XDRYY,XDRY1,""))
"RTN","XDRMERG0",171,0)
 . . S XDRK=@XDRZZZ@(XDRXX,XDRYY,XDRY1,XDRY2)
"RTN","XDRMERG0",172,0)
 . . N XDRAA S XDRAA(15,(XDRK_","),.05)=2
"RTN","XDRMERG0",173,0)
 . . D UPDATE^DIE("","XDRAA")
"RTN","XDRMERG0",174,0)
 . . ;
"RTN","XDRMERG0",175,0)
 . . ;   recalc CMOR scores on newly merged TO record
"RTN","XDRMERG0",176,0)
 . . I XDRY2[";DPT(",$T(CALC^RGVCCMR2)]"" D
"RTN","XDRMERG0",177,0)
 . . . N RGDFN S RGDFN=XDRYY D CALC^RGVCCMR2
"RTN","XDRMERG0",178,0)
 . . . ;   create an A31 message for newly merged TO record
"RTN","XDRMERG0",179,0)
 . . . S ERR=$$A31^MPIFA31B(XDRYY)
"RTN","XDRMERG0",180,0)
 . . . I +ERR<0 D START^RGHLLOG(),EXC^RGHLLOG(208,"Error returned while building A31 after merge (DFN="_XDRYY_") ERROR="_$P(ERR,"^",2),XDRYY),STOP^RGHLLOG()
"RTN","XDRMERG0",181,0)
 . S (FILE,XDRFILE)=$P(^VA(15.2,XDRFDA,0),U,2)
"RTN","XDRMERG0",182,0)
 . S FROM=$NA(^TMP("XDRFROM",$J))
"RTN","XDRMERG0",183,0)
 . D CLOSEIT^XDRMERG
"RTN","XDRMERG0",184,0)
 . D SNDMSG^XDRMERGB(XDRFDA)
"RTN","XDRMERG0",185,0)
 Q
"RTN","XDRMERG0",186,0)
 ;
"RTN","XDRMERG0",187,0)
ADDSPECL(PACKAGE) ; Add a package identifier to merge process
"RTN","XDRMERG0",188,0)
 ;  if already present, simply return the internal entry number
"RTN","XDRMERG0",189,0)
 ;  (it would be present if re-starting)
"RTN","XDRMERG0",190,0)
 ;
"RTN","XDRMERG0",191,0)
 N Y,XDRZZ,XDRXX
"RTN","XDRMERG0",192,0)
 S Y=$$FIND1^DIC(15.23,","_XDRFDA_",","Q",PACKAGE)
"RTN","XDRMERG0",193,0)
 I Y'>0 D
"RTN","XDRMERG0",194,0)
 . S XDRZZ(15.23,"+1,"_XDRFDA_",",.01)=PACKAGE
"RTN","XDRMERG0",195,0)
 . D UPDATE^DIE("","XDRZZ","XDRXX")
"RTN","XDRMERG0",196,0)
 . S Y=XDRXX(1)
"RTN","XDRMERG0",197,0)
 Q +Y
"RTN","XDRMERG0",198,0)
 ;
"RTN","XDRMERG0",199,0)
 ;
"RTN","XDRMERG0",200,0)
ERR ; On an error mark status as error, and save the error message
"RTN","XDRMERG0",201,0)
 ;
"RTN","XDRMERG0",202,0)
 S XDRZE=$ZE
"RTN","XDRMERG0",203,0)
 D ^%ZTER
"RTN","XDRMERG0",204,0)
 I $D(XDRFDA),$D(XDRFDA1) D
"RTN","XDRMERG0",205,0)
 . S $P(^VA(15.2,XDRFDA,3,XDRFDA1,0),U,3)="E",^(2)=XDRZE
"RTN","XDRMERG0",206,0)
 G UNWIND^%ZTER
"RTN","XDRMERG0",207,0)
 ;
"RTN","XDRMERG1")
0^2^B27242633
"RTN","XDRMERG1",1,0)
XDRMERG1 ;SF-IRMFO.SEA/JLI - TENATIVE UPDATE POINTER NODES ;06/02/2005  09:01
"RTN","XDRMERG1",2,0)
 ;;7.3;TOOLKIT;**23,34,38,44,47,95**;Apr 25, 1995
"RTN","XDRMERG1",3,0)
 ;;
"RTN","XDRMERG1",4,0)
 ;;
"RTN","XDRMERG1",5,0)
CHASE(XVAL,RVAL,XDRIENS) ;
"RTN","XDRMERG1",6,0)
 N XDRYT,XDRYTT,NODE,X,PC,Y,XDRTO,XDRIEN,XV,XN,XXV,XTYPE,X
"RTN","XDRMERG1",7,0)
 N DA,XV,XXV,XDRFILE,OLDH
"RTN","XDRMERG1",8,0)
 S OLDH=$P($H,",",2)
"RTN","XDRMERG1",9,0)
 F DA=SENTRY:0 Q:$D(ZTSTOP)  S DA=$O(@(XVAL_DA_")")) Q:DA'>0  D
"RTN","XDRMERG1",10,0)
 . I (($P($H,",",2)-OLDH>XDRTIME)!($P($H,",",2)<OLDH)) S OLDH=$P($H,",",2) I $$S^%ZTLOAD S ZTSTOP=1 D  Q
"RTN","XDRMERG1",11,0)
 . . I '$D(XDRFDA) Q
"RTN","XDRMERG1",12,0)
 . . I $P(^VA(15.2,XDRFDA,0),U,9)="" S $P(^(0),U,9)=1
"RTN","XDRMERG1",13,0)
 . I $D(XDRFDA),$P(^VA(15.2,XDRFDA,0),U,9)=1 S ZTSTOP=1 Q
"RTN","XDRMERG1",14,0)
 . I XDRIENS="" D
"RTN","XDRMERG1",15,0)
 . . S XDRYT=$$NOW^XLFDT()
"RTN","XDRMERG1",16,0)
 . . I $$FMDIFF^XLFDT(XDRYT,XDRXT,2)>5 D  ;60 D
"RTN","XDRMERG1",17,0)
 . . . I $D(XDRFDA) D  I 1
"RTN","XDRMERG1",18,0)
 . . . . S ^VA(15.2,XDRFDA,3,XDRFDA1,1)=XDRYT_U_CURRTYPE_U_CURRFIL_U_DA
"RTN","XDRMERG1",19,0)
 . . . E  D
"RTN","XDRMERG1",20,0)
 . . . . S ^XTMP("XDRSTAT",XDRGID,"TIME",$J)=XDRYT_U_CURRTYPE_U_CURRFIL_U_DA
"RTN","XDRMERG1",21,0)
 . . . S XDRXT=XDRYT
"RTN","XDRMERG1",22,0)
 . I $D(^TMP($J,"XGLOB",RVAL)) D
"RTN","XDRMERG1",23,0)
 . . S NODE="" F  S NODE=$O(^TMP($J,"XGLOB",RVAL,NODE)) Q:NODE=""  D
"RTN","XDRMERG1",24,0)
 . . . S X=$G(@(XVAL_DA_","_NODE_")")) Q:X=""
"RTN","XDRMERG1",25,0)
 . . . F PC=0:0 S PC=$O(^TMP($J,"XGLOB",RVAL,NODE,PC)) Q:PC'>0  D
"RTN","XDRMERG1",26,0)
 . . . . S Y=$P(X,U,PC),XDRFR=Y
"RTN","XDRMERG1",27,0)
 . . . . I Y>0,$D(XDRXFLG),$D(@FROM@(+Y))=1 S @FROM@(+Y,"R",CURRFIL)=$G(@FROM@(+Y,"R",CURRFIL))+1 Q  ; USED TO DETERMINE WHICH ENTRIES AREN'T POINTED TO.
"RTN","XDRMERG1",28,0)
 . . . . I Y>0 S XDRTO=$O(@FROM@(+Y,"")) I XDRTO>0 D
"RTN","XDRMERG1",29,0)
 . . . . . I +Y'=Y D  Q:Y'>0
"RTN","XDRMERG1",30,0)
 . . . . . . I $P(Y,";",2)'=$E(XDRFGLOB,2,99) S Y=0 Q
"RTN","XDRMERG1",31,0)
 . . . . . . S XDRTO=XDRTO_";"_$E(XDRFGLOB,2,99)
"RTN","XDRMERG1",32,0)
 . . . . . I $P(^TMP($J,"XGLOB",RVAL,NODE,PC),U,3)="DINUM" D  Q
"RTN","XDRMERG1",33,0)
 . . . . . . D DINUM^XDRMERG2(XVAL,RVAL,XDRIENS)
"RTN","XDRMERG1",34,0)
 . . . . . I ^TMP($J,"XGLOB",RVAL,NODE,PC)>0 D  Q
"RTN","XDRMERG1",35,0)
 . . . . . . S XDRIEN=DA_","_XDRIENS
"RTN","XDRMERG1",36,0)
 . . . . . . N DA,XDRFILE,XDRFLD,XDR
"RTN","XDRMERG1",37,0)
 . . . . . . S XDRFILE=+^TMP($J,"XGLOB",RVAL,NODE,PC)
"RTN","XDRMERG1",38,0)
 . . . . . . S XDRFLD=+$P(^TMP($J,"XGLOB",RVAL,NODE,PC),U,2)
"RTN","XDRMERG1",39,0)
 . . . . . . S XDR(XDRFILE,XDRIEN,XDRFLD)=XDRTO
"RTN","XDRMERG1",40,0)
 . . . . . . ; S ^XDRM(+XDRFR,"P",XDRFILE,XDRIEN,XDRFLD)=XDRFR ; ORIGINAL VERSION SIMPLY STORE DATA ON POINTER CHANGE
"RTN","XDRMERG1",41,0)
 . . . . . . D SAVEPNTR^XDRMERGB(+XDRFR,+XDRTO,XDRFILE,XDRIEN,XDRFLD,XDRFR) ; REVISED TO STORE POINTER CHANGE IN FM COMPATIBLE STRUCTURE
"RTN","XDRMERG1",42,0)
 . . . . . . D FILE^DIE("","XDR")
"RTN","XDRMERG1",43,0)
 . . . . . S $P(@(XVAL_DA_","_NODE_")"),U,PC)=XDRTO
"RTN","XDRMERG1",44,0)
 . . . . . S XDRFILE=+$P(@(XVAL_"0)"),U,2)
"RTN","XDRMERG1",45,0)
 . . . . . S XDRFLD=$O(@("^DD("_XDRFILE_",""GL"","_NODE_","_PC_",0)"))
"RTN","XDRMERG1",46,0)
 . . . . . S XDRIEN=DA_","_XDRIENS
"RTN","XDRMERG1",47,0)
 . . . . . ; S ^XDRM(+XDRFR,"P",XDRFILE,XDRIEN,XDRFLD)=XDRFR ; ORIGINAL VERSION SIMPLY STORE DATA ON POINTER CHANGE
"RTN","XDRMERG1",48,0)
 . . . . . D SAVEPNTR^XDRMERGB(+XDRFR,+XDRTO,XDRFILE,XDRIEN,XDRFLD,XDRFR)
"RTN","XDRMERG1",49,0)
 . S XV=RVAL
"RTN","XDRMERG1",50,0)
 . F  S XV=$O(^TMP($J,"XGLO",XV)) Q:XV'[RVAL  D
"RTN","XDRMERG1",51,0)
 . . S XN=$P(XV,RVAL,2),XN=DA_","_$P(XN,"DA,",2)
"RTN","XDRMERG1",52,0)
 . . S XXV=XVAL_XN
"RTN","XDRMERG1",53,0)
 . . S XTYPE=$$TYPE(XV)
"RTN","XDRMERG1",54,0)
 . . I XTYPE="DINUM" D DINUM^XDRMERG2(XXV,XV,DA_","_XDRIENS) Q
"RTN","XDRMERG1",55,0)
 . . I XTYPE'="" D XREFS^XDRMERG2(XXV,XV,DA_","_XDRIENS) Q
"RTN","XDRMERG1",56,0)
 . . D CHASE(XXV,XV,DA_","_XDRIENS)
"RTN","XDRMERG1",57,0)
 S SENTRY=0
"RTN","XDRMERG1",58,0)
 Q
"RTN","XDRMERG1",59,0)
 ;
"RTN","XDRMERG1",60,0)
TYPE(GLOB) ;
"RTN","XDRMERG1",61,0)
 N I,J
"RTN","XDRMERG1",62,0)
 S I=$O(^TMP($J,"XGLOB",GLOB,"")) Q:I="" ""
"RTN","XDRMERG1",63,0)
 S J=$O(^TMP($J,"XGLOB",GLOB,I,"")) Q:J="" ""
"RTN","XDRMERG1",64,0)
 Q $P(^TMP($J,"XGLOB",GLOB,I,J),U,3)
"RTN","XDRMERG1",65,0)
 ;
"RTN","XDRMERG1",66,0)
XREFS ; CONTINUATION FROM XDRMERG2 DUE TO SPACE LIMITS
"RTN","XDRMERG1",67,0)
 N IENOLD,IENNEW,IENVAL,FILEI,FLDJ,XREF,XDRXX,VREF,NMAX,GLOBPCS
"RTN","XDRMERG1",68,0)
 N NODE,PIECE
"RTN","XDRMERG1",69,0)
 N XDRZZ,XDRAA ; DEBUG STATEMENT
"RTN","XDRMERG1",70,0)
 S XDRXX=$NA(^TMP($J,"XDRXX"))
"RTN","XDRMERG1",71,0)
 K @XDRXX
"RTN","XDRMERG1",72,0)
 S NMAX=$L(XR,"DA,") F J=1:1:NMAX S GLOBPCS(J)=$P(XR,"DA,",J)
"RTN","XDRMERG1",73,0)
 S NODE="" F  S NODE=$O(^TMP($J,"XGLOB",XR,NODE)) Q:NODE=""  F PIECE=0:0 S PIECE=$O(^TMP($J,"XGLOB",XR,NODE,PIECE)) Q:PIECE'>0  S FILEI=^(PIECE) D
"RTN","XDRMERG1",74,0)
 . S FLDJ=$P(FILEI,U,2),XREF=$P(FILEI,U,3),FILEI=+FILEI,VREF="" I $P(^DD(FILEI,FLDJ,0),U,2)["V" S VREF=";"_$E(XDRFGLOB,2,99)
"RTN","XDRMERG1",75,0)
 . I XREF="DINUM" Q
"RTN","XDRMERG1",76,0)
 . F IENOLD=0:0 S IENOLD=$O(@FROM@(IENOLD)) Q:IENOLD'>0  D
"RTN","XDRMERG1",77,0)
 . . N KVALUE,YGLOB,NCNT,DAIENS,ZGLOB
"RTN","XDRMERG1",78,0)
 . . S IENNEW=$O(@FROM@(IENOLD,"")) Q:IENNEW'>0&'$D(XDRXFLG)
"RTN","XDRMERG1",79,0)
 . . S KVALUE=$S(VREF'="":IENOLD_VREF,1:IENOLD),ZGLOB=GLOBPCS(1)_XREF_","_""""_KVALUE_""""_")" I $D(@ZGLOB) S DAIENS="",YGLOB=GLOBPCS(1),NCNT=0 D FINDXREF(NMAX,XDRXX,ZGLOB,NCNT,DAIENS,YGLOB)
"RTN","XDRMERG1",80,0)
 . . Q
"RTN","XDRMERG1",81,0)
 . Q
"RTN","XDRMERG1",82,0)
 K XDRAA,XDRZZ I $D(XDRTESTK) M XDRAA=@XDRXX ; DEBUG STATEMENT
"RTN","XDRMERG1",83,0)
 I $D(@XDRXX) D FILE^DIE("",XDRXX)
"RTN","XDRMERG1",84,0)
 I $D(XDRZZ),$D(XDRTESTK) S XDRTESTK=XDRTESTK+1 M ^XTMP("XDRTESTK",$$NOW^XLFDT(),XDRTESTK,"XX")=XDRAA,^("ZZ")=XDRZZ K XDRAA,XDRZZ ; DEBUG STATEMENT
"RTN","XDRMERG1",85,0)
 Q
"RTN","XDRMERG1",86,0)
 ;
"RTN","XDRMERG1",87,0)
FINDXREF(NMAX,XDRXX,ZGLOB,NCNT,DAIENS,YGLOB) ;
"RTN","XDRMERG1",88,0)
 N LVAL,NVAL
"RTN","XDRMERG1",89,0)
 S NVAL=NCNT+1
"RTN","XDRMERG1",90,0)
 I NVAL=NMAX D  Q
"RTN","XDRMERG1",91,0)
 . F LVAL=0:0 S LVAL=$O(@ZGLOB@(LVAL)) Q:LVAL'>0!(LVAL'=+LVAL)  D SETXREF((YGLOB_LVAL_","),(LVAL_","_DAIENS))
"RTN","XDRMERG1",92,0)
 . Q
"RTN","XDRMERG1",93,0)
 F LVAL=0:0 S LVAL=$O(@ZGLOB@(LVAL)) Q:LVAL'>0!(LVAL'=+LVAL)  D FINDXREF(NMAX,XDRXX,$NA(@ZGLOB@(LVAL)),NVAL,(LVAL_","_DAIENS),(YGLOB_LVAL_","_GLOBPCS(NVAL+1)))
"RTN","XDRMERG1",94,0)
 Q
"RTN","XDRMERG1",95,0)
 ;
"RTN","XDRMERG1",96,0)
SETXREF(YGLOB,DAIENS) ;
"RTN","XDRMERG1",97,0)
 I $E($P($G(@(YGLOB_NODE_")")),U,PIECE),1,30)'=KVALUE Q
"RTN","XDRMERG1",98,0)
 I $D(XDRXFLG) S @FROM@(IENOLD,"R",FILEI)=$G(@FROM@(IENOLD,"R",FILEI))+1 Q  ; POINTER WAS FOUND, MARK ENTRY FOR FILE
"RTN","XDRMERG1",99,0)
 S @XDRXX@(FILEI,DAIENS,FLDJ)=IENNEW_VREF
"RTN","XDRMERG1",100,0)
 D SAVEPNTR^XDRMERGB(+IENOLD,+IENNEW,FILEI,DAIENS,FLDJ,(IENOLD_VREF))
"RTN","XDRMERG1",101,0)
 Q
"RTN","XT95POST")
0^^B33701
"RTN","XT95POST",1,0)
XT95POST ;OAK-OIFO/JDS - POST INIT FOR XT*7.3*95 ;04/22/2005  11:00
"RTN","XT95POST",2,0)
 ;;7.3;TOOLKIT;**95**;Apr 25, 1995  POST INIT
"RTN","XT95POST",3,0)
 ;
"RTN","XT95POST",4,0)
EN ;
"RTN","XT95POST",5,0)
 S $P(^VA(15.1,2,1),U,3)=180
"RTN","XT95POST",6,0)
 Q
"VER")
8.0^22.0
"^DD",15.1,15.1,1.03,0)
SECONDS TO WAIT FOR STOP CHECK^RNJ3,0^^1;3^K:+X'=X!(X>300)!(X<60)!(X?.E1"."1N.N) X
"^DD",15.1,15.1,1.03,3)
Type a Number between 60 and 300, 0 Decimal Digits
"^DD",15.1,15.1,1.03,21,0)
^^4^4^3050422^
"^DD",15.1,15.1,1.03,21,1,0)
This field will define how many seconds a merge process should run before 
"^DD",15.1,15.1,1.03,21,2,0)
making a call to ZTLOAD to see if the user requested the background processes 
"^DD",15.1,15.1,1.03,21,3,0)
to stop.
"^DD",15.1,15.1,1.03,21,4,0)

"^DD",15.1,15.1,1.03,"DT")
3050422
**END**
**END**
