KIDS Distribution saved on Apr 29, 2003@10:39:01
IVM*2*78 AND EAS*1*33 - 04/29/2003
**KIDS**:IVM*2.0*78^EAS*1.0*33^

**INSTALL NAME**
IVM*2.0*78
"BLD",4253,0)
IVM*2.0*78^INCOME VERIFICATION MATCH^0^3030429^y
"BLD",4253,1,0)
^^6^6^3030418^
"BLD",4253,1,1,0)
THIS IS AN EMERGENCY FIX TO PATCH IVM*2*77
"BLD",4253,1,2,0)
 
"BLD",4253,1,3,0)
THE IP ADDRESS FOR THE Z09 SERVER PRTOTCOL WILL BE CHANGED
"BLD",4253,1,4,0)
 
"BLD",4253,1,5,0)
THE SENDING OF Z09 TO THE APPROPRIATE HEC (LEGACY VS. EDB) WILL BE
"BLD",4253,1,6,0)
CORRECTED.
"BLD",4253,4,0)
^9.64PA^^
"BLD",4253,"ABPKG")
n
"BLD",4253,"INID")
^n
"BLD",4253,"INIT")
IVM2078P
"BLD",4253,"KRN",0)
^9.67PA^8989.52^19
"BLD",4253,"KRN",.4,0)
.4
"BLD",4253,"KRN",.401,0)
.401
"BLD",4253,"KRN",.402,0)
.402
"BLD",4253,"KRN",.403,0)
.403
"BLD",4253,"KRN",.5,0)
.5
"BLD",4253,"KRN",.84,0)
.84
"BLD",4253,"KRN",3.6,0)
3.6
"BLD",4253,"KRN",3.8,0)
3.8
"BLD",4253,"KRN",9.2,0)
9.2
"BLD",4253,"KRN",9.8,0)
9.8
"BLD",4253,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",4253,"KRN",9.8,"NM",1,0)
IVMPTRN5^^0^B20072063
"BLD",4253,"KRN",9.8,"NM","B","IVMPTRN5",1)

"BLD",4253,"KRN",19,0)
19
"BLD",4253,"KRN",19.1,0)
19.1
"BLD",4253,"KRN",101,0)
101
"BLD",4253,"KRN",409.61,0)
409.61
"BLD",4253,"KRN",771,0)
771
"BLD",4253,"KRN",870,0)
870
"BLD",4253,"KRN",8989.51,0)
8989.51
"BLD",4253,"KRN",8989.52,0)
8989.52
"BLD",4253,"KRN",8994,0)
8994
"BLD",4253,"KRN","B",.4,.4)

"BLD",4253,"KRN","B",.401,.401)

"BLD",4253,"KRN","B",.402,.402)

"BLD",4253,"KRN","B",.403,.403)

"BLD",4253,"KRN","B",.5,.5)

"BLD",4253,"KRN","B",.84,.84)

"BLD",4253,"KRN","B",3.6,3.6)

"BLD",4253,"KRN","B",3.8,3.8)

"BLD",4253,"KRN","B",9.2,9.2)

"BLD",4253,"KRN","B",9.8,9.8)

"BLD",4253,"KRN","B",19,19)

"BLD",4253,"KRN","B",19.1,19.1)

"BLD",4253,"KRN","B",101,101)

"BLD",4253,"KRN","B",409.61,409.61)

"BLD",4253,"KRN","B",771,771)

"BLD",4253,"KRN","B",870,870)

"BLD",4253,"KRN","B",8989.51,8989.51)

"BLD",4253,"KRN","B",8989.52,8989.52)

"BLD",4253,"KRN","B",8994,8994)

"BLD",4253,"QUES",0)
^9.62^^
"BLD",4253,"REQB",0)
^9.611^1^1
"BLD",4253,"REQB",1,0)
IVM*2.0*77^2
"BLD",4253,"REQB","B","IVM*2.0*77",1)

"INIT")
IVM2078P
"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
78^3030429
"PKG",220,22,1,"PAH",1,1,0)
^^6^6^3030429
"PKG",220,22,1,"PAH",1,1,1,0)
THIS IS AN EMERGENCY FIX TO PATCH IVM*2*77
"PKG",220,22,1,"PAH",1,1,2,0)
 
"PKG",220,22,1,"PAH",1,1,3,0)
THE IP ADDRESS FOR THE Z09 SERVER PRTOTCOL WILL BE CHANGED
"PKG",220,22,1,"PAH",1,1,4,0)
 
"PKG",220,22,1,"PAH",1,1,5,0)
THE SENDING OF Z09 TO THE APPROPRIATE HEC (LEGACY VS. EDB) WILL BE
"PKG",220,22,1,"PAH",1,1,6,0)
CORRECTED.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","IVM2078P")
0^^B25822149
"RTN","IVM2078P",1,0)
IVM2078P ;ALB/EJG - Patch Post-Install functions IVM*2*78;04/07/2003
"RTN","IVM2078P",2,0)
 ;;2.0;INCOME VERIFICATION;**78**;21-OCT-94
"RTN","IVM2078P",3,0)
 ;
"RTN","IVM2078P",4,0)
EN ;ENTRY POINT
"RTN","IVM2078P",5,0)
 ;
"RTN","IVM2078P",6,0)
 N ADDR,PORT,STATION,TCPDATA,AN,RLLN,SLLN,STOP,VER,DA,FILE,RET,ERROR
"RTN","IVM2078P",7,0)
 ;
"RTN","IVM2078P",8,0)
 ; Get site's Station #
"RTN","IVM2078P",9,0)
 S STATION=$P($$SITE^VASITE,"^",3)
"RTN","IVM2078P",10,0)
 ;
"RTN","IVM2078P",11,0)
 S STOP=0
"RTN","IVM2078P",12,0)
 D CLEANUP                        ;Cleanup message placed with wrong LL
"RTN","IVM2078P",13,0)
 Q:$$SETLL16(STATION,.RLLN,.SLLN)
"RTN","IVM2078P",14,0)
 D PROTOCOL(STATION,RLLN,SLLN,.AN)
"RTN","IVM2078P",15,0)
 Q
"RTN","IVM2078P",16,0)
 ;
"RTN","IVM2078P",17,0)
SETLL16(STATION,RLLN,SLLN) ;
"RTN","IVM2078P",18,0)
 ;INPUT   STATION = Station #
"RTN","IVM2078P",19,0)
 ;        RLLN    = Receiving Logical Link Name
"RTN","IVM2078P",20,0)
 ;        SLLN    = Sending Logical Link Name
"RTN","IVM2078P",21,0)
 ;
"RTN","IVM2078P",22,0)
 ;OUTPUT   0 : Success, 1 : Error
"RTN","IVM2078P",23,0)
 ;
"RTN","IVM2078P",24,0)
 ;PURPOSE  Create the Receiving and Sending Logical Link.
"RTN","IVM2078P",25,0)
 ;
"RTN","IVM2078P",26,0)
 N ADDR,PORT,RECVLL,SENDLL,RET,VISN,M,IENS
"RTN","IVM2078P",27,0)
 ;
"RTN","IVM2078P",28,0)
 ; Sending Logical Link
"RTN","IVM2078P",29,0)
 S SLLN="LLEDBOUT"
"RTN","IVM2078P",30,0)
 S PORT=33001            ;e*Gate Port#
"RTN","IVM2078P",31,0)
 S ADDR="10.224.132.101"  ;e*Gate production
"RTN","IVM2078P",32,0)
 S RET=$$LL16(SLLN,ADDR,PORT,1)
"RTN","IVM2078P",33,0)
 I +RET<0 D ERROR(RET,"Edb Send Link:"_SLLN) Q 1
"RTN","IVM2078P",34,0)
 ;
"RTN","IVM2078P",35,0)
RLL ; Receiving Logical Link
"RTN","IVM2078P",36,0)
 S RLLN="LLEDBIN"
"RTN","IVM2078P",37,0)
 S ADDR=""
"RTN","IVM2078P",38,0)
 S PORT=""    ;all stations production
"RTN","IVM2078P",39,0)
 S RET=$$LL16(RLLN,ADDR,PORT,0)
"RTN","IVM2078P",40,0)
 I +RET<0 D ERROR(RET,"Edb Receive Link:"_RLLN) Q 1
"RTN","IVM2078P",41,0)
LL16EXIT Q STOP
"RTN","IVM2078P",42,0)
 ;
"RTN","IVM2078P",43,0)
 ;
"RTN","IVM2078P",44,0)
PROTOCOL(STATION,RLLN,SLLN,AN) ;
"RTN","IVM2078P",45,0)
 ;INPUT    STATION = Station #
"RTN","IVM2078P",46,0)
 ;         RLLN    = Receiving Logical Link Name
"RTN","IVM2078P",47,0)
 ;         SLLN    = Sending Logical Link Name
"RTN","IVM2078P",48,0)
 ;         AN      = Array containing the Application Names
"RTN","IVM2078P",49,0)
 ;
"RTN","IVM2078P",50,0)
 ;OUTPUT   None
"RTN","IVM2078P",51,0)
 ;
"RTN","IVM2078P",52,0)
 ;PURPOSE  Update the protocols (Subscriber and Event Driver) for the
"RTN","IVM2078P",53,0)
 ;         Edb/e*Gate TCP/IP interfaces
"RTN","IVM2078P",54,0)
 ;
"RTN","IVM2078P",55,0)
 N RESULT,SIEN,DUZ,V,N,N1,LNCNT,LINE,PROTRET,NAM,DISABTXT
"RTN","IVM2078P",56,0)
 S DISABTXT=""
"RTN","IVM2078P",57,0)
 F NAM="EAS EDB ORU-Z06 SERVER","EAS EDB ORU-Z09 SERVER" D
"RTN","IVM2078P",58,0)
 . S RESULT=$$EDP(NAM,DISABTXT)
"RTN","IVM2078P",59,0)
 . I +RESULT<0 D ERROR(RESULT,"Event Driver:"_NAM)
"RTN","IVM2078P",60,0)
 Q
"RTN","IVM2078P",61,0)
 ;
"RTN","IVM2078P",62,0)
ERROR(ERRMSG,SUBJ) ;
"RTN","IVM2078P",63,0)
 ;INPUT    ERRMSG = Error Message text
"RTN","IVM2078P",64,0)
 ;         SUBJ   = Subject of the Message
"RTN","IVM2078P",65,0)
 ;
"RTN","IVM2078P",66,0)
 ;OUTPUT   none
"RTN","IVM2078P",67,0)
 ;
"RTN","IVM2078P",68,0)
 ;PURPOSE  Display an error message to the user.  Set the
"RTN","IVM2078P",69,0)
 ;         variable STOP=1 which will stop the routine
"RTN","IVM2078P",70,0)
 ;         from continuing to run after an error is found.
"RTN","IVM2078P",71,0)
 ;
"RTN","IVM2078P",72,0)
 N TXT
"RTN","IVM2078P",73,0)
 S STOP=1
"RTN","IVM2078P",74,0)
 S TXT=$P(ERRMSG,"^",2)
"RTN","IVM2078P",75,0)
 W !,"===================================================="
"RTN","IVM2078P",76,0)
 W !,"=                   ERROR                          ="
"RTN","IVM2078P",77,0)
 W !,"===================================================="
"RTN","IVM2078P",78,0)
 W !,"When creating "_SUBJ
"RTN","IVM2078P",79,0)
 W !,"===================================================="
"RTN","IVM2078P",80,0)
 W !,"**ERROR MSG: ",TXT
"RTN","IVM2078P",81,0)
 Q
"RTN","IVM2078P",82,0)
 ;
"RTN","IVM2078P",83,0)
 ;Update Functions
"RTN","IVM2078P",84,0)
 ;
"RTN","IVM2078P",85,0)
LL16(LLNAME,TCPADDR,TCPPORT,AUTO) ;
"RTN","IVM2078P",86,0)
 ;INPUT   LLNAME  = Logical Link Name (ex. "LLEDBOUT")
"RTN","IVM2078P",87,0)
 ;        TCPADDR = TCP/IP Address
"RTN","IVM2078P",88,0)
 ;        TCPPORT = TCP/IP Port #
"RTN","IVM2078P",89,0)
 ;        AUTO    = AUTOSTART
"RTN","IVM2078P",90,0)
 ;                  0 - DISABLED
"RTN","IVM2078P",91,0)
 ;                  1 - ENABLED
"RTN","IVM2078P",92,0)
 ;
"RTN","IVM2078P",93,0)
 ;OUTPUT  IEN of entry (#870)  Success
"RTN","IVM2078P",94,0)
 ;        -1^Error Message     Error
"RTN","IVM2078P",95,0)
 ;
"RTN","IVM2078P",96,0)
 ;PURPOSE Update a Logical Link for TCP/IP transmissions.
"RTN","IVM2078P",97,0)
 ;
"RTN","IVM2078P",98,0)
 N FILE,DATA,RETURN,DEFINED,ERROR,DA,DGENDA
"RTN","IVM2078P",99,0)
 S FILE=870
"RTN","IVM2078P",100,0)
 ; If already exists then skip
"RTN","IVM2078P",101,0)
 ;  
"RTN","IVM2078P",102,0)
 S IEN870=$O(^HLCS(870,"B",LLNAME,0))      ;IEN TO UPDATE
"RTN","IVM2078P",103,0)
 I 'IEN870 D  Q RETURN                     ;IEN NOT FOUND - RETURN ERROR
"RTN","IVM2078P",104,0)
 . S ERROR="IEN OF RECORD TO BE UPDATED NOT SPECIFIED"
"RTN","IVM2078P",105,0)
 . S RETURN=-1_"^"_ERROR
"RTN","IVM2078P",106,0)
 ;
"RTN","IVM2078P",107,0)
 ; set v1.6 field values
"RTN","IVM2078P",108,0)
 S DATA(400.01)=TCPADDR                    ;TCP/IP ADDRESS
"RTN","IVM2078P",109,0)
 S DATA(400.02)=TCPPORT                    ;TCP/IP PORT
"RTN","IVM2078P",110,0)
 S DATA(4.5)=AUTO                          ;AUTOSTART
"RTN","IVM2078P",111,0)
 ;
"RTN","IVM2078P",112,0)
 S RETURN=$$UPD^DGENDBS(FILE,IEN870,.DATA,.ERROR)
"RTN","IVM2078P",113,0)
 S:ERROR'=""!(+RETURN=0) RETURN=-1_"^"_ERROR
"RTN","IVM2078P",114,0)
 ;
"RTN","IVM2078P",115,0)
 Q RETURN
"RTN","IVM2078P",116,0)
 ;
"RTN","IVM2078P",117,0)
EDP(PNAME,DTXT) ;
"RTN","IVM2078P",118,0)
 ;INPUT   PNAME   = Protocol Name
"RTN","IVM2078P",119,0)
 ;        DTXT    = Disable Text
"RTN","IVM2078P",120,0)
 ;
"RTN","IVM2078P",121,0)
 ;OUTPUT  IEN entry (#101) of Event Driver Protocol   Success
"RTN","IVM2078P",122,0)
 ;        -1^Error Message                            Error
"RTN","IVM2078P",123,0)
 ;
"RTN","IVM2078P",124,0)
 ;PURPOSE Activate the Event Driver Protocol
"RTN","IVM2078P",125,0)
 ;
"RTN","IVM2078P",126,0)
 N DATA,FILE,DGENDA,RETURN,ERROR,DA,IEN101
"RTN","IVM2078P",127,0)
 S FILE=101
"RTN","IVM2078P",128,0)
 ; If already exists then skip
"RTN","IVM2078P",129,0)
 ;  
"RTN","IVM2078P",130,0)
 S IEN101=$O(^ORD(101,"B",PNAME,0))
"RTN","IVM2078P",131,0)
 I 'IEN101 D  Q RETURN                     ;IEN NOT FOUND - RETURN ERROR
"RTN","IVM2078P",132,0)
 . S ERROR="IEN OF RECORD TO BE UPDATED NOT SPECIFIED"
"RTN","IVM2078P",133,0)
 . S RETURN=-1_"^"_ERROR
"RTN","IVM2078P",134,0)
 ;
"RTN","IVM2078P",135,0)
 S DATA(2)=DTXT                               ;DISABLE TEXT
"RTN","IVM2078P",136,0)
 S RETURN=$$UPD^DGENDBS(FILE,IEN101,.DATA,.ERROR)
"RTN","IVM2078P",137,0)
 I ERROR'=""!(+RETURN=0) S RETURN=-1_"^"_ERROR G EDPEXIT
"RTN","IVM2078P",138,0)
 ;
"RTN","IVM2078P",139,0)
EDPEXIT Q RETURN
"RTN","IVM2078P",140,0)
 ;
"RTN","IVM2078P",141,0)
 ;Clean up those message that have been placed into the EDB outbound
"RTN","IVM2078P",142,0)
 ; logical link - LLEDBOUT erroneously.  Delete them out of LLEDBOUT
"RTN","IVM2078P",143,0)
 ; queue and place into general outbound queue.
"RTN","IVM2078P",144,0)
 ;
"RTN","IVM2078P",145,0)
CLEANUP N IEN870,VISN,M,IEN,QIEN,SLLN
"RTN","IVM2078P",146,0)
 S IEN870=$O(^HLCS(870,"B","LLEDBOUT",0))
"RTN","IVM2078P",147,0)
 I 'IEN870 Q
"RTN","IVM2078P",148,0)
 I '$D(^HLMA("AC","O",IEN870)) Q              ;Nothing in queue
"RTN","IVM2078P",149,0)
 W !,"Requeue Z09 messages"
"RTN","IVM2078P",150,0)
 S IEN=0
"RTN","IVM2078P",151,0)
 F  S IEN=$O(^HLMA("AC","O",IEN870,IEN)) Q:'IEN  D
"RTN","IVM2078P",152,0)
 . W !?2,"Requeued Record# ",IEN
"RTN","IVM2078P",153,0)
 . L +^HLMA(IEN):0 Q:'$T
"RTN","IVM2078P",154,0)
 . D REQUEUE(IEN)
"RTN","IVM2078P",155,0)
 . L -^HLMA(IEN)
"RTN","IVM2078P",156,0)
 W !,"Requeue of records completed.",!
"RTN","IVM2078P",157,0)
 Q
"RTN","IVM2078P",158,0)
 ;
"RTN","IVM2078P",159,0)
 ;Requeue the transaction into the IVM Billing Transmission (#301.61)
"RTN","IVM2078P",160,0)
 ; file
"RTN","IVM2078P",161,0)
 ;
"RTN","IVM2078P",162,0)
REQUEUE(IEN773) N DFN,HLTCP,IEN30161,IEN772,PFLG,REC,SEG,SEQ,SID
"RTN","IVM2078P",163,0)
 S IEN772=+$P($G(^HLMA(IEN773,0)),"^")
"RTN","IVM2078P",164,0)
 S (PFLG,SEQ)=0
"RTN","IVM2078P",165,0)
 F  S SEQ=$O(^HL(772,IEN772,"IN",SEQ)) Q:'SEQ  D
"RTN","IVM2078P",166,0)
 .I $P(^HL(772,IEN772,"IN",SEQ,0),"^")="PID" D
"RTN","IVM2078P",167,0)
 ..S REC=$G(^HL(772,IEN772,"IN",SEQ,0))
"RTN","IVM2078P",168,0)
 ..S DFN=+$P($P(REC,"^",4),"~")
"RTN","IVM2078P",169,0)
 ..S PFLG=1
"RTN","IVM2078P",170,0)
 .I PFLG,$P(^HL(772,IEN772,"IN",SEQ,0),"^")="FT1" D
"RTN","IVM2078P",171,0)
 ..S REC=$G(^HL(772,IEN772,"IN",SEQ,0))
"RTN","IVM2078P",172,0)
 ..S SID=$P(REC,"^",8)
"RTN","IVM2078P",173,0)
 ..S IEN30161=$O(^IVM(301.61,"B",SID,0))
"RTN","IVM2078P",174,0)
 ..S ^IVM(301.61,"ATR",DFN,IEN30161)=""     ;Requeue for IVM Billing
"RTN","IVM2078P",175,0)
 I 'PFLG Q                                  ;PID Segment not found
"RTN","IVM2078P",176,0)
 S HLTCP=1
"RTN","IVM2078P",177,0)
 D STATUS^HLTF0(IEN773,3,,,1)           ;Set 773 transaction to COMPLETE
"RTN","IVM2078P",178,0)
 Q
"RTN","IVMPTRN5")
0^1^B20072063
"RTN","IVMPTRN5",1,0)
IVMPTRN5 ;ALB/CPM - NIGHTLY BILLING TRANSMISSION PROCESSING ; 1/15/01 11:21am
"RTN","IVMPTRN5",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**1,9,24,34,69,78**; 21-OCT-94
"RTN","IVMPTRN5",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMPTRN5",4,0)
 ;
"RTN","IVMPTRN5",5,0)
EN ; This routine performs the nightly compilation and transmission
"RTN","IVMPTRN5",6,0)
 ; of DHCP billing activity for IVM patients to the IVM Center.
"RTN","IVMPTRN5",7,0)
 ;
"RTN","IVMPTRN5",8,0)
 K ^TMP("IVMPTRN5",$J)
"RTN","IVMPTRN5",9,0)
 D IVMPT ;                                get data for IVM patients
"RTN","IVMPTRN5",10,0)
 D INS^IBAMTV4("^TMP(""IVMPTRN5"",$J)") ; get data for Insurance patients
"RTN","IVMPTRN5",11,0)
 D UPDATE^IVMPTRN6 ;                      update file #301.61
"RTN","IVMPTRN5",12,0)
 D TRNSMT ;                               post transmissions
"RTN","IVMPTRN5",13,0)
 D TRNSMT^EASPTRN5            ;If any EDB Z09's to transmit - then send
"RTN","IVMPTRN5",14,0)
 Q
"RTN","IVMPTRN5",15,0)
 ;
"RTN","IVMPTRN5",16,0)
 ;
"RTN","IVMPTRN5",17,0)
IVMPT ; Get claims and patient charges for IVM patients
"RTN","IVMPTRN5",18,0)
 N DFN,IVMSTART,IVMEND
"RTN","IVMPTRN5",19,0)
 S DFN=0 F  S DFN=$O(^IVM(301.61,"C",DFN)) Q:'DFN  D
"RTN","IVMPTRN5",20,0)
 .S IVMSTART=$$INIT(DFN) S:'IVMSTART IVMEND=0
"RTN","IVMPTRN5",21,0)
 .I IVMSTART S IVMEND=$$FMADD^XLFDT(IVMSTART,364) S:IVMEND>DT IVMEND=DT
"RTN","IVMPTRN5",22,0)
 .D ALL^IBAMTV4(DFN,"^TMP(""IVMPTRN5"",$J)",IVMSTART,IVMEND)
"RTN","IVMPTRN5",23,0)
 Q
"RTN","IVMPTRN5",24,0)
 ;
"RTN","IVMPTRN5",25,0)
 ;
"RTN","IVMPTRN5",26,0)
TRNSMT ; Transmit required billing activity.
"RTN","IVMPTRN5",27,0)
 Q:'$D(^IVM(301.61,"ATR"))
"RTN","IVMPTRN5",28,0)
 ;
"RTN","IVMPTRN5",29,0)
 N HL,HLDT,HLDT1,HLEID,HLMID,MID,MTIEN,RESULT
"RTN","IVMPTRN5",30,0)
 S HLEID="VAMC "_$P($$SITE^VASITE,"^",3)_" ORU-Z09 SERVER"
"RTN","IVMPTRN5",31,0)
 S HLEID=$O(^ORD(101,"B",HLEID,0))
"RTN","IVMPTRN5",32,0)
 D INIT^IVMUFNC(HLEID,.HL) S HLMTN="ORU"
"RTN","IVMPTRN5",33,0)
 ;
"RTN","IVMPTRN5",34,0)
 S DFN=0 F  S DFN=$O(^IVM(301.61,"ATR",DFN)) Q:'DFN  D
"RTN","IVMPTRN5",35,0)
 .I $$WHERETO^EASPTRN1(DFN) Q                  ;Do not send EDB Z09's
"RTN","IVMPTRN5",36,0)
 .I IVMCT=0,$G(IVMGTOT) D FILE^HLTF
"RTN","IVMPTRN5",37,0)
 .S HLEVN=HLEVN+1
"RTN","IVMPTRN5",38,0)
 .;
"RTN","IVMPTRN5",39,0)
 .; FIND A SLOT FOR EACH BATCH
"RTN","IVMPTRN5",40,0)
 .I HLEVN#100=1 D
"RTN","IVMPTRN5",41,0)
 ..K HLDT,HLDT1,HLMID,MTIEN
"RTN","IVMPTRN5",42,0)
 ..D CREATE^HLTF(.HLMID,.MTIEN,.HLDT,.HLDT1)
"RTN","IVMPTRN5",43,0)
 .;
"RTN","IVMPTRN5",44,0)
 .; SET UP MSH SEGMENT
"RTN","IVMPTRN5",45,0)
 .S MID=HLMID_"-"_HLEVN
"RTN","IVMPTRN5",46,0)
 .D MSH^HLFNC2(.HL,MID,.RESULT)
"RTN","IVMPTRN5",47,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=RESULT
"RTN","IVMPTRN5",48,0)
 .;
"RTN","IVMPTRN5",49,0)
 .; - re-set msg control id into MSH segment
"RTN","IVMPTRN5",50,0)
 .D MSGID^IVMUFNC4(.IVMCT)
"RTN","IVMPTRN5",51,0)
 .;
"RTN","IVMPTRN5",52,0)
 .; - create PID segment
"RTN","IVMPTRN5",53,0)
 .K IVMPID,VAFPID
"RTN","IVMPTRN5",54,0)
 .S IVMPID=$$EN^VAFHLPID(DFN,"1,3,5,7,8,19") I $D(VAFPID(1)) S IVMPID(1)=VAFPID(1)
"RTN","IVMPTRN5",55,0)
 .;I $P(IVMPID_$G(IVMPID(1)),HLFS,20)["P" D PSEUDO^IVMPTRN1
"RTN","IVMPTRN5",56,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMPID
"RTN","IVMPTRN5",57,0)
 .I $D(IVMPID(1)) S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMPID(1)
"RTN","IVMPTRN5",58,0)
 .;
"RTN","IVMPTRN5",59,0)
 .; - find the patient's Means Test date and create ZIC segment
"RTN","IVMPTRN5",60,0)
 .S IVMTDA=$O(^IVM(301.61,"ATR",DFN,0))
"RTN","IVMPTRN5",61,0)
 .S IVMMTDT=$S(IVMTDA:$P($G(^IVM(301.61,IVMTDA,0)),"^",5),1:DT)
"RTN","IVMPTRN5",62,0)
 .D ALL^DGMTU21(DFN,"V",IVMMTDT,"IPR",+$$LST^DGMTU(DFN,IVMMTDT))
"RTN","IVMPTRN5",63,0)
 .S IVMHZIC=$$EN^VAFHLZIC(+$G(DGINC("V")),"1,2")
"RTN","IVMPTRN5",64,0)
 .I '$P(IVMHZIC,"^",3) S $P(IVMHZIC,"^",3)=$$HLDATE^HLFNC($O(^IVM(301.5,"APT",DFN,0)))
"RTN","IVMPTRN5",65,0)
 .;
"RTN","IVMPTRN5",66,0)
 .; - find all transactions for the patient and create FT1 segments
"RTN","IVMPTRN5",67,0)
 .S IVMTDA=0 F  S IVMTDA=$O(^IVM(301.61,"ATR",DFN,IVMTDA)) Q:'IVMTDA  D
"RTN","IVMPTRN5",68,0)
 ..S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$FT1^IVMUFNC3(IVMTDA)
"RTN","IVMPTRN5",69,0)
 ..S IVMN=$G(^IVM(301.61,IVMTDA,0))
"RTN","IVMPTRN5",70,0)
 ..;
"RTN","IVMPTRN5",71,0)
 ..; - if a payment has been made (or if the bill is closed),
"RTN","IVMPTRN5",72,0)
 ..; - but the bill has never been transmitted, re-transmit.
"RTN","IVMPTRN5",73,0)
 ..I ($P(IVMN,"^",9)!($P(IVMN,"^",10))),'$P(IVMN,"^",13) D
"RTN","IVMPTRN5",74,0)
 ...D NOW^%DTC S DA=IVMTDA,DIE="^IVM(301.61,",DR=".13////"_% D ^DIE
"RTN","IVMPTRN5",75,0)
 ...S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$FT1^IVMUFNC3(IVMTDA)
"RTN","IVMPTRN5",76,0)
 ..;
"RTN","IVMPTRN5",77,0)
 ..; - update transmission record
"RTN","IVMPTRN5",78,0)
 ..S IVMSTOP=0
"RTN","IVMPTRN5",79,0)
 ..I $P(IVMN,"^",10)!$P(IVMN,"^",11) S IVMSTOP=1
"RTN","IVMPTRN5",80,0)
 ..I $P(IVMN,"^",4)>1 S IVMSTOP=1
"RTN","IVMPTRN5",81,0)
 ..D NOW^%DTC S DR=".12////0;.13////"_%
"RTN","IVMPTRN5",82,0)
 ..I IVMSTOP S DR=DR_";.14////1"
"RTN","IVMPTRN5",83,0)
 ..S DR=DR_";1.03////"_%_";1.04////"_DUZ
"RTN","IVMPTRN5",84,0)
 ..S DA=IVMTDA,DIE="^IVM(301.61," D ^DIE K DA,DR,DIE
"RTN","IVMPTRN5",85,0)
 .;
"RTN","IVMPTRN5",86,0)
 .; - set ZIC segment
"RTN","IVMPTRN5",87,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMHZIC
"RTN","IVMPTRN5",88,0)
 .;
"RTN","IVMPTRN5",89,0)
 .S IVMEVENT="Z09"
"RTN","IVMPTRN5",90,0)
 .I HLEVN'<100 D FILE^IVMPTRN3
"RTN","IVMPTRN5",91,0)
 ;
"RTN","IVMPTRN5",92,0)
 D FILE^IVMPTRN3
"RTN","IVMPTRN5",93,0)
 K DFN,IVMPID,IVMTDA,IVMMTDT,IVMN,IVMSTOP,IVMEVENT,IVMHZIC,VAFPID,DGREL,DGINC,DGINR,DGDEP
"RTN","IVMPTRN5",94,0)
 D CLEAN^IVMUFNC
"RTN","IVMPTRN5",95,0)
 Q
"RTN","IVMPTRN5",96,0)
 ;
"RTN","IVMPTRN5",97,0)
 ;
"RTN","IVMPTRN5",98,0)
INIT(DFN) ; Find the initial date for which to return patient charges.
"RTN","IVMPTRN5",99,0)
 ;  Input:   DFN  --  Pointer to the patient in file #2
"RTN","IVMPTRN5",100,0)
 ; Output:   Date patient became Cat C, or null (for ins. patients)
"RTN","IVMPTRN5",101,0)
 ;
"RTN","IVMPTRN5",102,0)
 N IVMDATE,X,Y S IVMDATE=0
"RTN","IVMPTRN5",103,0)
 I '$G(DFN) G INITQ
"RTN","IVMPTRN5",104,0)
 S X=0 F  S X=$O(^IVM(301.61,"C",DFN,X)) Q:'X  S Y=$G(^IVM(301.61,X,0)) I $P(Y,"^",4)>1,$P(Y,"^",5) S IVMDATE=$P(Y,"^",5) Q
"RTN","IVMPTRN5",105,0)
 I IVMDATE S IVMDATE=$P($$LST^DGMTU(DFN,IVMDATE),"^",2)
"RTN","IVMPTRN5",106,0)
INITQ Q IVMDATE
"RTN","IVMPTRN5",107,0)
 ;
"RTN","IVMPTRN5",108,0)
 ;Check DISABLE text in #101 to determine if communications with
"RTN","IVMPTRN5",109,0)
 ; Edb are active or not.  Text in this field indicates link is not
"RTN","IVMPTRN5",110,0)
 ; active
"RTN","IVMPTRN5",111,0)
 ;
"RTN","IVMPTRN5",112,0)
EDB(HLEID) S HLEID=$O(^ORD(101,"B",HLEID,0))
"RTN","IVMPTRN5",113,0)
 I 'HLEID Q 0                                 ;Protocol not defined
"RTN","IVMPTRN5",114,0)
 I $P(^ORD(101,HLEID,0),"^",3)="" Q 1         ;Edb protocol active
"RTN","IVMPTRN5",115,0)
 Q 0
"VER")
8.0^22
**INSTALL NAME**
EAS*1.0*33
"BLD",4254,0)
EAS*1.0*33^ENROLLMENT APPLICATION SYSTEM^0^3030429^y
"BLD",4254,1,0)
^^2^2^3030422^
"BLD",4254,1,1,0)
EMERGENCY FIX FOR Z09 MESSAGES.  DETERMINE WHICH Z09 MESSAGES GO TO HEC
"BLD",4254,1,2,0)
LEGACY AND WHICH ONES GO TO EDB.
"BLD",4254,4,0)
^9.64PA^^
"BLD",4254,"ABPKG")
n
"BLD",4254,"KRN",0)
^9.67PA^8989.52^19
"BLD",4254,"KRN",.4,0)
.4
"BLD",4254,"KRN",.401,0)
.401
"BLD",4254,"KRN",.402,0)
.402
"BLD",4254,"KRN",.403,0)
.403
"BLD",4254,"KRN",.5,0)
.5
"BLD",4254,"KRN",.84,0)
.84
"BLD",4254,"KRN",3.6,0)
3.6
"BLD",4254,"KRN",3.8,0)
3.8
"BLD",4254,"KRN",9.2,0)
9.2
"BLD",4254,"KRN",9.8,0)
9.8
"BLD",4254,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",4254,"KRN",9.8,"NM",1,0)
EASPTRN1^^0^B17146405
"BLD",4254,"KRN",9.8,"NM",2,0)
EASPTRN5^^0^B16282609
"BLD",4254,"KRN",9.8,"NM","B","EASPTRN1",1)

"BLD",4254,"KRN",9.8,"NM","B","EASPTRN5",2)

"BLD",4254,"KRN",19,0)
19
"BLD",4254,"KRN",19.1,0)
19.1
"BLD",4254,"KRN",101,0)
101
"BLD",4254,"KRN",409.61,0)
409.61
"BLD",4254,"KRN",771,0)
771
"BLD",4254,"KRN",870,0)
870
"BLD",4254,"KRN",8989.51,0)
8989.51
"BLD",4254,"KRN",8989.52,0)
8989.52
"BLD",4254,"KRN",8994,0)
8994
"BLD",4254,"KRN","B",.4,.4)

"BLD",4254,"KRN","B",.401,.401)

"BLD",4254,"KRN","B",.402,.402)

"BLD",4254,"KRN","B",.403,.403)

"BLD",4254,"KRN","B",.5,.5)

"BLD",4254,"KRN","B",.84,.84)

"BLD",4254,"KRN","B",3.6,3.6)

"BLD",4254,"KRN","B",3.8,3.8)

"BLD",4254,"KRN","B",9.2,9.2)

"BLD",4254,"KRN","B",9.8,9.8)

"BLD",4254,"KRN","B",19,19)

"BLD",4254,"KRN","B",19.1,19.1)

"BLD",4254,"KRN","B",101,101)

"BLD",4254,"KRN","B",409.61,409.61)

"BLD",4254,"KRN","B",771,771)

"BLD",4254,"KRN","B",870,870)

"BLD",4254,"KRN","B",8989.51,8989.51)

"BLD",4254,"KRN","B",8989.52,8989.52)

"BLD",4254,"KRN","B",8994,8994)

"BLD",4254,"QUES",0)
^9.62^^
"BLD",4254,"REQB",0)
^9.611^1^1
"BLD",4254,"REQB",1,0)
EAS*1.0*30^2
"BLD",4254,"REQB","B","EAS*1.0*30",1)

"MBREQ")
0
"PKG",552,-1)
1^1
"PKG",552,0)
ENROLLMENT APPLICATION SYSTEM^EAS^ENROLLMENT
"PKG",552,20,0)
^9.402P^1^1
"PKG",552,20,1,0)
2^^EASXDR
"PKG",552,20,1,1)
 
"PKG",552,20,"B",2,1)

"PKG",552,22,0)
^9.49I^1^1
"PKG",552,22,1,0)
1.0^3010315^3010410^66481
"PKG",552,22,1,"PAH",1,0)
33^3030429
"PKG",552,22,1,"PAH",1,1,0)
^^2^2^3030429
"PKG",552,22,1,"PAH",1,1,1,0)
EMERGENCY FIX FOR Z09 MESSAGES.  DETERMINE WHICH Z09 MESSAGES GO TO HEC
"PKG",552,22,1,"PAH",1,1,2,0)
LEGACY AND WHICH ONES GO TO EDB.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","EASPTRN1")
0^1^B17146405
"RTN","EASPTRN1",1,0)
EASPTRN1 ;ALB/EJG - GENERATE EAS SUBPROCESSES ;03/07/2003
"RTN","EASPTRN1",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**30,33**; 21-OCT-94
"RTN","EASPTRN1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","EASPTRN1",4,0)
 ;
"RTN","EASPTRN1",5,0)
 ; Cloned from IVMPTRN1
"RTN","EASPTRN1",6,0)
 ;
"RTN","EASPTRN1",7,0)
DELMT ; send delete mt transaction if pt no longer meets IVM criteria
"RTN","EASPTRN1",8,0)
 ;
"RTN","EASPTRN1",9,0)
 ; Input - DFN
"RTN","EASPTRN1",10,0)
 ;         IVMMTDT - date of means test
"RTN","EASPTRN1",11,0)
 ;
"RTN","EASPTRN1",12,0)
 N I,IVMIY,X
"RTN","EASPTRN1",13,0)
 S IVMIY=$$LYR^DGMTSCU1(IVMMTDT)
"RTN","EASPTRN1",14,0)
 F I=1:1:5,8:1:14 S $P(X,HLFS,I)=HLQ
"RTN","EASPTRN1",15,0)
 S ^TMP("HLS",$J,HLSDT,IVMCT)="ZMT"_HLFS_X
"RTN","EASPTRN1",16,0)
 D CLOSE(IVMIY,DFN,2,3) ; set flag to stop future transmissions
"RTN","EASPTRN1",17,0)
 Q
"RTN","EASPTRN1",18,0)
 ;
"RTN","EASPTRN1",19,0)
 ;
"RTN","EASPTRN1",20,0)
CLOSE(IVMIY,DFN,IVMCS,IVMCR) ; Close IVM case record for a patient
"RTN","EASPTRN1",21,0)
 ; Input:    DFN  --  Pointer to the patient in file #2
"RTN","EASPTRN1",22,0)
 ;         IVMIY  --  Income year of the closed case
"RTN","EASPTRN1",23,0)
 ;         IVMCS  --  Closure source [1=IVM | 2=DHCP]
"RTN","EASPTRN1",24,0)
 ;         IVMCR  --  Pointer to the closure reason in file #301.93
"RTN","EASPTRN1",25,0)
 ;
"RTN","EASPTRN1",26,0)
 N DA,DIE,DR,X,Y,EVENTS,STATUS,EAEVENT
"RTN","EASPTRN1",27,0)
 I '$G(IVMIY)!'$G(DFN)!'$G(IVMCS)!'$G(IVMCR) G CLOSEQ
"RTN","EASPTRN1",28,0)
 S IVMDELMT=1 ; flag indicates deletion
"RTN","EASPTRN1",29,0)
 S DA=$O(^IVM(301.5,"APT",+DFN,+IVMIY,0))
"RTN","EASPTRN1",30,0)
 I $G(^IVM(301.5,+DA,0))']"" G CLOSEQ
"RTN","EASPTRN1",31,0)
 ;
"RTN","EASPTRN1",32,0)
 ;don't want closing a case to stop transmission of an enrollment event
"RTN","EASPTRN1",33,0)
 S STATUS=1
"RTN","EASPTRN1",34,0)
 I ($$STATUS^IVMPLOG(+DA,.EVENTS)=0),EVENTS("ENROLL")=1 S STATUS=0
"RTN","EASPTRN1",35,0)
 ;
"RTN","EASPTRN1",36,0)
 ;If previous years event make sure enrollment event does not get 
"RTN","EASPTRN1",37,0)
 ;  updated
"RTN","EASPTRN1",38,0)
 ;
"RTN","EASPTRN1",39,0)
 S EAEVENT=1
"RTN","EASPTRN1",40,0)
 I $G(EXPIRED)=1 S EAEVENT=2,STATUS=1
"RTN","EASPTRN1",41,0)
 I $G(EXPIRED)=0 S EAEVENT=1,STATUS=0
"RTN","EASPTRN1",42,0)
 D NOW^%DTC S DR=".03////"_STATUS_";.04////1;1.01////"_IVMCR_";1.02////"_IVMCS_";1.03////"_%_";30.01////2;30.02////2;30.03////"_$G(EAEVENT)
"RTN","EASPTRN1",43,0)
 S DIE="^IVM(301.5," D ^DIE
"RTN","EASPTRN1",44,0)
CLOSEQ Q
"RTN","EASPTRN1",45,0)
 ;
"RTN","EASPTRN1",46,0)
 ;
"RTN","EASPTRN1",47,0)
PSEUDO ; strip P from pseudo SSNs before transmitting to IVM
"RTN","EASPTRN1",48,0)
 ;
"RTN","EASPTRN1",49,0)
 N X
"RTN","EASPTRN1",50,0)
 S X=IVMPID_$G(IVMPID(1))
"RTN","EASPTRN1",51,0)
 S $P(X,HLFS,20)=$E($P(X,HLFS,20),1,9) ; remove P
"RTN","EASPTRN1",52,0)
 K IVMPID S IVMPID=$E(X,1,245)
"RTN","EASPTRN1",53,0)
 I $L(X)>245 S IVMPID(1)=$E(X,246,999)
"RTN","EASPTRN1",54,0)
 Q
"RTN","EASPTRN1",55,0)
 ;
"RTN","EASPTRN1",56,0)
 ;Check if EDB Z06 in Annual Means Test file #408.31
"RTN","EASPTRN1",57,0)
 ; 'Z06 MT via Edb' will be stored in Comments if EDB Z06 Means Test
"RTN","EASPTRN1",58,0)
 ;
"RTN","EASPTRN1",59,0)
Z06MT(IVMMTIEN,Z06COM) N FLAG,LINE,COMMENT
"RTN","EASPTRN1",60,0)
 I '$G(IVMMTIEN) Q 0
"RTN","EASPTRN1",61,0)
 I $G(Z06COM)="" S Z06COM="Z06 MT via Edb"
"RTN","EASPTRN1",62,0)
 S (FLAG,LINE)=0
"RTN","EASPTRN1",63,0)
 F  S LINE=$O(^DGMT(408.31,IVMMTIEN,"C",LINE)) Q:'LINE!(FLAG)  D
"RTN","EASPTRN1",64,0)
 . S COMMENT=$G(^DGMT(408.31,IVMMTIEN,"C",LINE,0))
"RTN","EASPTRN1",65,0)
 . I COMMENT=Z06COM S FLAG=1 Q
"RTN","EASPTRN1",66,0)
 Q FLAG
"RTN","EASPTRN1",67,0)
 ;
"RTN","EASPTRN1",68,0)
 ;Retrieve Means Test information from incoming HL7 message.  
"RTN","EASPTRN1",69,0)
 ;
"RTN","EASPTRN1",70,0)
CHECKMT(DFN) N SOURCE,IVMLAST,IVMMTDT,IVMMTIEN
"RTN","EASPTRN1",71,0)
 I IVMTYPE'=1 Q    ;Only want MT = 1
"RTN","EASPTRN1",72,0)
 S SOURCE=$P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,22)
"RTN","EASPTRN1",73,0)
 S IVMMTDT=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,2))
"RTN","EASPTRN1",74,0)
 S IVMLAST=$$LST^DGMTU(DFN,$E(IVMMTDT,1,3)_1231,1)
"RTN","EASPTRN1",75,0)
 S IVMMTIEN=+IVMLAST
"RTN","EASPTRN1",76,0)
 Q $$Z06MT(IVMMTIEN)
"RTN","EASPTRN1",77,0)
 ;
"RTN","EASPTRN1",78,0)
 ;Based upon DFN and MT Date find primary MT
"RTN","EASPTRN1",79,0)
 ;
"RTN","EASPTRN1",80,0)
VERZ06(DFN) N CMT,CMTDATE,MTIEN,PRIM
"RTN","EASPTRN1",81,0)
 S CMT=$$LST^DGMTU(DFN)
"RTN","EASPTRN1",82,0)
 S MTIEN=+CMT,CMTDATE=$P(CMT,"^",2)
"RTN","EASPTRN1",83,0)
 I 'MTIEN Q 0                             ;No Means Test found
"RTN","EASPTRN1",84,0)
 S PRIM=$G(^DGMT(408.31,MTIEN,"PRIM"))
"RTN","EASPTRN1",85,0)
 I PRIM,$$Z06MT(MTIEN) Q 1
"RTN","EASPTRN1",86,0)
 Q 0
"RTN","EASPTRN1",87,0)
 ;
"RTN","EASPTRN1",88,0)
 ;Check for expired MT
"RTN","EASPTRN1",89,0)
 ;
"RTN","EASPTRN1",90,0)
EXPIRED(DFN,DGMTDT) N CMT,PMT
"RTN","EASPTRN1",91,0)
 S PMT=$$LST^DGMTU(DFN,DGMTDT)       ;Retrieve MT associated w/MT Test
"RTN","EASPTRN1",92,0)
 I PMT="" Q 0
"RTN","EASPTRN1",93,0)
 S CMT=$$LST^DGMTU(DFN)              ;Retrieve Current MT
"RTN","EASPTRN1",94,0)
 I $P(PMT,"^",2)<$P(CMT,"^",2) Q 1   ;Previous Year - Expired MT
"RTN","EASPTRN1",95,0)
 Q 0
"RTN","EASPTRN1",96,0)
 ;
"RTN","EASPTRN1",97,0)
 ;Determine if Z09 should be sent to EDB or HEC legacy
"RTN","EASPTRN1",98,0)
 ; Input:  DFN
"RTN","EASPTRN1",99,0)
 ; Output: Where to Send Z09
"RTN","EASPTRN1",100,0)
 ;          0 - HEC Legacy
"RTN","EASPTRN1",101,0)
 ;          1 - EDB
"RTN","EASPTRN1",102,0)
 ;
"RTN","EASPTRN1",103,0)
WHERETO(DFN) N COM,DATE,FOUND,FRMDATE,IEN,MIEN,ONODE,MTD,TYPE,Z06COM
"RTN","EASPTRN1",104,0)
 S FOUND=0
"RTN","EASPTRN1",105,0)
 S Z06COM="Z06 MT via Edb"
"RTN","EASPTRN1",106,0)
 S IEN=$O(^IVM(301.61,"ATR",DFN,0)) I IEN="" Q FOUND
"RTN","EASPTRN1",107,0)
 S FRMDATE=$P($G(^IVM(301.61,IEN,0)),"^",5) I FRMDATE="" Q FOUND
"RTN","EASPTRN1",108,0)
 S TYPE=""
"RTN","EASPTRN1",109,0)
 F  S TYPE=$O(^DGMT(408.31,"AID",TYPE)) Q:TYPE=""!(FOUND)  D
"RTN","EASPTRN1",110,0)
 .S MTD=""
"RTN","EASPTRN1",111,0)
 .F  S MTD=$O(^DGMT(408.31,"AID",TYPE,DFN,MTD)) Q:MTD=""!(FOUND)  D
"RTN","EASPTRN1",112,0)
 ..S MIEN=""
"RTN","EASPTRN1",113,0)
 ..F  S MIEN=$O(^DGMT(408.31,"AID",TYPE,DFN,MTD,MIEN)) Q:MIEN=""!(FOUND)  D
"RTN","EASPTRN1",114,0)
 ...S ONODE=$G(^DGMT(408.31,MIEN,0))
"RTN","EASPTRN1",115,0)
 ...S DATE=$P(ONODE,"^",25)                     ;Use IVM Verified Date
"RTN","EASPTRN1",116,0)
 ...I DATE="" S DATE=$P(ONODE,"^",7)            ;Use Completed Date
"RTN","EASPTRN1",117,0)
 ...S COM=$G(^DGMT(408.31,MIEN,"C",1,0))        ;Comment
"RTN","EASPTRN1",118,0)
 ...I DATE'="",COM[Z06COM,FRMDATE>(DATE-1),$G(^DGMT(408.31,MIEN,"PRIM")) S FOUND=1
"RTN","EASPTRN1",119,0)
 Q FOUND
"RTN","EASPTRN5")
0^2^B16282609
"RTN","EASPTRN5",1,0)
EASPTRN5 ;ALB/CPM - NIGHTLY BILLING TRANSMISSION PROCESSING ; 10/30/01 9:58am
"RTN","EASPTRN5",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**23,33**; 21-OCT-94
"RTN","EASPTRN5",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","EASPTRN5",4,0)
 ;
"RTN","EASPTRN5",5,0)
 ; For Edb Transmission Only - VAMC-to-Edb
"RTN","EASPTRN5",6,0)
 ;
"RTN","EASPTRN5",7,0)
EN ; This routine performs the nightly compilation and transmission
"RTN","EASPTRN5",8,0)
 ; of DHCP billing activity for IVM patients to the IVM Center.
"RTN","EASPTRN5",9,0)
 ;
"RTN","EASPTRN5",10,0)
TRNSMT ; Transmit required billing activity.
"RTN","EASPTRN5",11,0)
 Q:'$D(^IVM(301.61,"ATR"))
"RTN","EASPTRN5",12,0)
 ; =============
"RTN","EASPTRN5",13,0)
 N HL,HLDT,HLDT1,HLEID,HLMID,MID,MTIEN,RESULT
"RTN","EASPTRN5",14,0)
 S HLEID="EAS EDB ORU-Z09 SERVER"
"RTN","EASPTRN5",15,0)
 S HLEID=$O(^ORD(101,"B",HLEID,0))
"RTN","EASPTRN5",16,0)
 D INIT^IVMUFNC(HLEID,.HL) S HLMTN="ORU"
"RTN","EASPTRN5",17,0)
 S NUMS=""
"RTN","EASPTRN5",18,0)
 F I=1:1:30 S NUMS=NUMS_$S(NUMS'="":",",1:"")_I
"RTN","EASPTRN5",19,0)
 S DFN=0 F  S DFN=$O(^IVM(301.61,"ATR",DFN)) Q:'DFN  D
"RTN","EASPTRN5",20,0)
 .I '$$WHERETO^EASPTRN1(DFN) Q              ;Do not send legacy Z09's
"RTN","EASPTRN5",21,0)
 .I IVMCT=0,$G(IVMGTOT) D FILE^HLTF
"RTN","EASPTRN5",22,0)
 .S HLEVN=HLEVN+1
"RTN","EASPTRN5",23,0)
 .; ==========
"RTN","EASPTRN5",24,0)
 .; Find a slot for each batch
"RTN","EASPTRN5",25,0)
 .I HLEVN#100=1 D
"RTN","EASPTRN5",26,0)
 ..K HLDT,HLDT1,HLMID,MTIEN
"RTN","EASPTRN5",27,0)
 ..D CREATE^HLTF(.HLMID,.MTIEN,.HLDT,.HLDT1)
"RTN","EASPTRN5",28,0)
 .; ==========
"RTN","EASPTRN5",29,0)
 .;
"RTN","EASPTRN5",30,0)
 .; Setup MSH Segment
"RTN","EASPTRN5",31,0)
 .S MID=HLMID_"-"_HLEVN
"RTN","EASPTRN5",32,0)
 .D MSH^HLFNC2(.HL,MID,.RESULT)
"RTN","EASPTRN5",33,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=RESULT
"RTN","EASPTRN5",34,0)
 .;
"RTN","EASPTRN5",35,0)
 .; - re-set msg control id into MSH segment
"RTN","EASPTRN5",36,0)
 .D MSGID^IVMUFNC4(.IVMCT)
"RTN","EASPTRN5",37,0)
 .;
"RTN","EASPTRN5",38,0)
 .; - create PID segment
"RTN","EASPTRN5",39,0)
 .K IVMPID,VAFPID
"RTN","EASPTRN5",40,0)
 .S IVMPID=$$EN^VAFCPID(DFN,"1,2,3,4,5,7,8,19")
"RTN","EASPTRN5",41,0)
 .I $D(VAFPID(1)) S IVMPID(1)=VAFPID(1)
"RTN","EASPTRN5",42,0)
 .;I $P(IVMPID_$G(IVMPID(1)),HLFS,20)["P" D PSEUDO^IVMPTRN1
"RTN","EASPTRN5",43,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMPID
"RTN","EASPTRN5",44,0)
 .I $D(IVMPID(1)) S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMPID(1)
"RTN","EASPTRN5",45,0)
 .;
"RTN","EASPTRN5",46,0)
 .; - create PD1 segment - Patient CMOR segment <<<<<<<<<<<<<<<<<
"RTN","EASPTRN5",47,0)
 .;S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLPD1(DFN,"1,2,3,4")
"RTN","EASPTRN5",48,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLPD1(DFN,"1,3")
"RTN","EASPTRN5",49,0)
 .;
"RTN","EASPTRN5",50,0)
 .; - find the patient's Means Test date and create ZIC segment
"RTN","EASPTRN5",51,0)
 .S IVMTDA=$O(^IVM(301.61,"ATR",DFN,0))
"RTN","EASPTRN5",52,0)
 .S IVMMTDT=$S(IVMTDA:$P($G(^IVM(301.61,IVMTDA,0)),"^",5),1:DT)
"RTN","EASPTRN5",53,0)
 .D ALL^DGMTU21(DFN,"V",IVMMTDT,"IPR",+$$LST^DGMTU(DFN,IVMMTDT))
"RTN","EASPTRN5",54,0)
 .S IVMHZIC=$$EN^VAFHLZIC(+$G(DGINC("V")),"1,2")
"RTN","EASPTRN5",55,0)
 .;S IVMHZIC=$$EN^VAFHLZIC(+$G(DGINC("V")),$P(NUMS,",",1,23))
"RTN","EASPTRN5",56,0)
 .I '$P(IVMHZIC,"^",3) S $P(IVMHZIC,"^",3)=$$HLDATE^HLFNC($O(^IVM(301.5,"APT",DFN,0)))
"RTN","EASPTRN5",57,0)
 .;
"RTN","EASPTRN5",58,0)
 .; - find all transactions for the patient and create FT1 segments
"RTN","EASPTRN5",59,0)
 .S IVMTDA=0 F  S IVMTDA=$O(^IVM(301.61,"ATR",DFN,IVMTDA)) Q:'IVMTDA  D
"RTN","EASPTRN5",60,0)
 ..S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$FT1^EASUFNC3(IVMTDA)
"RTN","EASPTRN5",61,0)
 ..S IVMN=$G(^IVM(301.61,IVMTDA,0))
"RTN","EASPTRN5",62,0)
 ..;
"RTN","EASPTRN5",63,0)
 ..; - if a payment has been made (or if the bill is closed),
"RTN","EASPTRN5",64,0)
 ..; - but the bill has never been transmitted, re-transmit.
"RTN","EASPTRN5",65,0)
 ..I ($P(IVMN,"^",9)!($P(IVMN,"^",10))),'$P(IVMN,"^",13) D
"RTN","EASPTRN5",66,0)
 ...D NOW^%DTC S DA=IVMTDA,DIE="^IVM(301.61,",DR=".13////"_% D ^DIE
"RTN","EASPTRN5",67,0)
 ...S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$FT1^EASUFNC3(IVMTDA)
"RTN","EASPTRN5",68,0)
 ..;
"RTN","EASPTRN5",69,0)
 ..; - update transmission record
"RTN","EASPTRN5",70,0)
 ..;D:ISITESW'["H"
"RTN","EASPTRN5",71,0)
 ..S IVMSTOP=0
"RTN","EASPTRN5",72,0)
 ..I $P(IVMN,"^",10)!$P(IVMN,"^",11) S IVMSTOP=1
"RTN","EASPTRN5",73,0)
 ..I $P(IVMN,"^",4)>1 S IVMSTOP=1
"RTN","EASPTRN5",74,0)
 ..D NOW^%DTC S DR=".12////0;.13////"_%
"RTN","EASPTRN5",75,0)
 ..I IVMSTOP S DR=DR_";.14////1"
"RTN","EASPTRN5",76,0)
 ..S DR=DR_";1.03////"_%_";1.04////"_DUZ
"RTN","EASPTRN5",77,0)
 ..S DA=IVMTDA,DIE="^IVM(301.61," D ^DIE K DA,DR,DIE
"RTN","EASPTRN5",78,0)
 .;
"RTN","EASPTRN5",79,0)
 .; - set ZIC segment
"RTN","EASPTRN5",80,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMHZIC
"RTN","EASPTRN5",81,0)
 .;
"RTN","EASPTRN5",82,0)
 .S IVMEVENT="Z09"
"RTN","EASPTRN5",83,0)
 .I HLEVN'<100 D FILE^IVMPTRN3
"RTN","EASPTRN5",84,0)
 ;
"RTN","EASPTRN5",85,0)
 D FILE^IVMPTRN3
"RTN","EASPTRN5",86,0)
 K DFN,IVMPID,IVMTDA,IVMMTDT,IVMN,IVMSTOP,IVMEVENT,IVMHZIC,VAFPID,DGREL,DGINC,DGINR,DGDEP
"RTN","EASPTRN5",87,0)
 D CLEAN^IVMUFNC
"RTN","EASPTRN5",88,0)
 Q
"RTN","EASPTRN5",89,0)
 ;
"RTN","EASPTRN5",90,0)
 ;
"RTN","EASPTRN5",91,0)
INIT(DFN) ; Find the initial date for which to return patient charges.
"RTN","EASPTRN5",92,0)
 ;  Input:   DFN  --  Pointer to the patient in file #2
"RTN","EASPTRN5",93,0)
 ; Output:   Date patient became Cat C, or null (for ins. patients)
"RTN","EASPTRN5",94,0)
 ;
"RTN","EASPTRN5",95,0)
 N IVMDATE,X,Y S IVMDATE=0
"RTN","EASPTRN5",96,0)
 I '$G(DFN) G INITQ
"RTN","EASPTRN5",97,0)
 S X=0 F  S X=$O(^IVM(301.61,"C",DFN,X)) Q:'X  S Y=$G(^IVM(301.61,X,0)) I $P(Y,"^",4)>1,$P(Y,"^",5) S IVMDATE=$P(Y,"^",5) Q
"RTN","EASPTRN5",98,0)
 I IVMDATE S IVMDATE=$P($$LST^DGMTU(DFN,IVMDATE),"^",2)
"RTN","EASPTRN5",99,0)
INITQ Q IVMDATE
"VER")
8.0^22
**END**
**END**
