Released XU*8*337 SEQ #321
Extracted from mail message
**KIDS**:XU*8.0*337^

**INSTALL NAME**
XU*8.0*337
"BLD",815,0)
XU*8.0*337^KERNEL^0^3050817^y
"BLD",815,1,0)
^^2^2^3050419^
"BLD",815,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"BLD",815,1,2,0)
Patch XU*8.0*337  SSO/UC Kernel support.
"BLD",815,4,0)
^9.64PA^19.1^2
"BLD",815,4,19.1,0)
19.1
"BLD",815,4,19.1,2,0)
^9.641^19.1^1
"BLD",815,4,19.1,2,19.1,0)
SECURITY KEY  (File-top level)
"BLD",815,4,19.1,2,19.1,1,0)
^9.6411^.05^1
"BLD",815,4,19.1,2,19.1,1,.05,0)
SEND TO J2EE
"BLD",815,4,19.1,222)
y^n^p^^^^n^^n
"BLD",815,4,19.1,224)

"BLD",815,4,8989.3,0)
8989.3
"BLD",815,4,8989.3,2,0)
^9.641^8989.3^1
"BLD",815,4,8989.3,2,8989.3,0)
KERNEL SYSTEM PARAMETERS  (File-top level)
"BLD",815,4,8989.3,2,8989.3,1,0)
^9.6411^231^2
"BLD",815,4,8989.3,2,8989.3,1,30.1,0)
CCOW TOKEN TIMEOUT
"BLD",815,4,8989.3,2,8989.3,1,231,0)
GUI POST SIGN-ON
"BLD",815,4,8989.3,222)
y^y^p^^^^n^^n
"BLD",815,4,8989.3,224)

"BLD",815,4,"APDD",19.1,19.1)

"BLD",815,4,"APDD",19.1,19.1,.05)

"BLD",815,4,"APDD",8989.3,8989.3)

"BLD",815,4,"APDD",8989.3,8989.3,30.1)

"BLD",815,4,"APDD",8989.3,8989.3,231)

"BLD",815,4,"B",19.1,19.1)

"BLD",815,4,"B",8989.3,8989.3)

"BLD",815,"INID")
^n
"BLD",815,"INIT")
POST^XUINP337
"BLD",815,"KRN",0)
^9.67PA^8989.52^19
"BLD",815,"KRN",.4,0)
.4
"BLD",815,"KRN",.401,0)
.401
"BLD",815,"KRN",.402,0)
.402
"BLD",815,"KRN",.403,0)
.403
"BLD",815,"KRN",.5,0)
.5
"BLD",815,"KRN",.84,0)
.84
"BLD",815,"KRN",3.6,0)
3.6
"BLD",815,"KRN",3.8,0)
3.8
"BLD",815,"KRN",9.2,0)
9.2
"BLD",815,"KRN",9.8,0)
9.8
"BLD",815,"KRN",9.8,"NM",0)
^9.68A^6^6
"BLD",815,"KRN",9.8,"NM",1,0)
XUS^^0^29056184
"BLD",815,"KRN",9.8,"NM",2,0)
XUS1B^^0^4207439
"BLD",815,"KRN",9.8,"NM",3,0)
XUSRB^^0^37446325
"BLD",815,"KRN",9.8,"NM",4,0)
XUSRB2^^0^2910863
"BLD",815,"KRN",9.8,"NM",5,0)
XUSRB4^^0^8500621
"BLD",815,"KRN",9.8,"NM",6,0)
XUESSO1^^0^30184414
"BLD",815,"KRN",9.8,"NM","B","XUESSO1",6)

"BLD",815,"KRN",9.8,"NM","B","XUS",1)

"BLD",815,"KRN",9.8,"NM","B","XUS1B",2)

"BLD",815,"KRN",9.8,"NM","B","XUSRB",3)

"BLD",815,"KRN",9.8,"NM","B","XUSRB2",4)

"BLD",815,"KRN",9.8,"NM","B","XUSRB4",5)

"BLD",815,"KRN",19,0)
19
"BLD",815,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",815,"KRN",19,"NM",1,0)
XUCOMMAND^^2
"BLD",815,"KRN",19,"NM",2,0)
XUS SIGNON^^0
"BLD",815,"KRN",19,"NM",3,0)
XUSERAOLD^^0
"BLD",815,"KRN",19,"NM","B","XUCOMMAND",1)

"BLD",815,"KRN",19,"NM","B","XUS SIGNON",2)

"BLD",815,"KRN",19,"NM","B","XUSERAOLD",3)

"BLD",815,"KRN",19.1,0)
19.1
"BLD",815,"KRN",101,0)
101
"BLD",815,"KRN",409.61,0)
409.61
"BLD",815,"KRN",771,0)
771
"BLD",815,"KRN",870,0)
870
"BLD",815,"KRN",8989.51,0)
8989.51
"BLD",815,"KRN",8989.51,"NM",0)
^9.68A^1^1
"BLD",815,"KRN",8989.51,"NM",1,0)
XUS CCOW VAULT PARAM^^0
"BLD",815,"KRN",8989.51,"NM","B","XUS CCOW VAULT PARAM",1)

"BLD",815,"KRN",8989.52,0)
8989.52
"BLD",815,"KRN",8994,0)
8994
"BLD",815,"KRN",8994,"NM",0)
^9.68A^3^3
"BLD",815,"KRN",8994,"NM",1,0)
XUS CCOW VAULT PARAM^^0
"BLD",815,"KRN",8994,"NM",2,0)
XUS GET CCOW TOKEN^^0
"BLD",815,"KRN",8994,"NM",3,0)
XUS ALLKEYS^^0
"BLD",815,"KRN",8994,"NM","B","XUS ALLKEYS",3)

"BLD",815,"KRN",8994,"NM","B","XUS CCOW VAULT PARAM",1)

"BLD",815,"KRN",8994,"NM","B","XUS GET CCOW TOKEN",2)

"BLD",815,"KRN","B",.4,.4)

"BLD",815,"KRN","B",.401,.401)

"BLD",815,"KRN","B",.402,.402)

"BLD",815,"KRN","B",.403,.403)

"BLD",815,"KRN","B",.5,.5)

"BLD",815,"KRN","B",.84,.84)

"BLD",815,"KRN","B",3.6,3.6)

"BLD",815,"KRN","B",3.8,3.8)

"BLD",815,"KRN","B",9.2,9.2)

"BLD",815,"KRN","B",9.8,9.8)

"BLD",815,"KRN","B",19,19)

"BLD",815,"KRN","B",19.1,19.1)

"BLD",815,"KRN","B",101,101)

"BLD",815,"KRN","B",409.61,409.61)

"BLD",815,"KRN","B",771,771)

"BLD",815,"KRN","B",870,870)

"BLD",815,"KRN","B",8989.51,8989.51)

"BLD",815,"KRN","B",8989.52,8989.52)

"BLD",815,"KRN","B",8994,8994)

"BLD",815,"QUES",0)
^9.62^^
"BLD",815,"REQB",0)
^9.611^4^4
"BLD",815,"REQB",1,0)
XU*8.0*309^2
"BLD",815,"REQB",2,0)
XU*8.0*265^2
"BLD",815,"REQB",3,0)
XWB*1.1*35^2
"BLD",815,"REQB",4,0)
XU*8.0*284^2
"BLD",815,"REQB","B","XU*8.0*265",2)

"BLD",815,"REQB","B","XU*8.0*284",4)

"BLD",815,"REQB","B","XU*8.0*309",1)

"BLD",815,"REQB","B","XWB*1.1*35",3)

"FIA",19.1)
SECURITY KEY
"FIA",19.1,0)
^DIC(19.1,
"FIA",19.1,0,0)
19.1
"FIA",19.1,0,1)
y^n^p^^^^n^^n
"FIA",19.1,0,10)

"FIA",19.1,0,11)

"FIA",19.1,0,"RLRO")

"FIA",19.1,0,"VR")
8.0^XU
"FIA",19.1,19.1)
1
"FIA",19.1,19.1,.05)

"FIA",8989.3)
KERNEL SYSTEM PARAMETERS
"FIA",8989.3,0)
^XTV(8989.3,
"FIA",8989.3,0,0)
8989.3P
"FIA",8989.3,0,1)
y^y^p^^^^n^^n
"FIA",8989.3,0,10)

"FIA",8989.3,0,11)

"FIA",8989.3,0,"RLRO")

"FIA",8989.3,0,"VR")
8.0^XU
"FIA",8989.3,8989.3)
1
"FIA",8989.3,8989.3,30.1)

"FIA",8989.3,8989.3,231)

"INIT")
POST^XUINP337
"KRN",19,2,-1)
2^1
"KRN",19,2,0)
XUCOMMAND^SYSTEM COMMAND OPTIONS^^M^2^^^^^^^^y^
"KRN",19,2,10,0)
^19.01IP^16^16
"KRN",19,2,10,13,0)
604
"KRN",19,2,10,13,"^")
XUS SIGNON
"KRN",19,2,"U")
SYSTEM COMMAND OPTIONS
"KRN",19,62,-1)
0^3
"KRN",19,62,0)
XUSERAOLD^Purge Log of Old Access and Verify Codes^^R^^^XUAOLDPURGE^^^^^^n^^
"KRN",19,62,1,0)
^^3^3^3050425^
"KRN",19,62,1,1,0)
This option will purge all inactive access and verify codes which are 
"KRN",19,62,1,2,0)
more than 270 to 400 days old. This will allow for the recycling of 
"KRN",19,62,1,3,0)
codes after a minimun of 3 changes.
"KRN",19,62,25)
AOLD^XUSPURGE
"KRN",19,62,"U")
PURGE LOG OF OLD ACCESS AND VE
"KRN",19,604,-1)
0^2
"KRN",19,604,0)
XUS SIGNON^Kernel sign-on context^^B^^^^^^^^^y
"KRN",19,604,99.1)
57936,84609
"KRN",19,604,"RPC",0)
^19.05P^12^12
"KRN",19,604,"RPC",1,0)
XUS SIGNON SETUP
"KRN",19,604,"RPC",2,0)
XUS AV CODE
"KRN",19,604,"RPC",3,0)
XUS INTRO MSG
"KRN",19,604,"RPC",4,0)
XUS CVC
"KRN",19,604,"RPC",5,0)
XUS AV HELP
"KRN",19,604,"RPC",6,0)
XUS DIVISION SET
"KRN",19,604,"RPC",7,0)
XUS GET USER INFO
"KRN",19,604,"RPC",8,0)
XUS DIVISION GET
"KRN",19,604,"RPC",9,0)
XWB GET BROKER INFO
"KRN",19,604,"RPC",10,0)
XUS GET TOKEN
"KRN",19,604,"RPC",11,0)
XUS CCOW VAULT PARAM
"KRN",19,604,"RPC",12,0)
XUS GET CCOW TOKEN
"KRN",19,604,"U")
KERNEL SIGN-ON CONTEXT
"KRN",8989.51,234,-1)
0^1
"KRN",8989.51,234,0)
XUS CCOW VAULT PARAM^CCOW Vault Parameter^1
"KRN",8989.51,234,1)
F^3:128^Enter the first chunk of the CCOW passcode.
"KRN",8989.51,234,6)
N^0:1
"KRN",8989.51,234,20,0)
^^1^1^3040204^
"KRN",8989.51,234,20,1,0)
This parameter holds the application passcode for the CCOW vault.
"KRN",8989.51,234,30,0)
^8989.513I^1^1
"KRN",8989.51,234,30,1,0)
1^4.2
"KRN",8994,133,-1)
0^1
"KRN",8994,133,0)
XUS CCOW VAULT PARAM^CCOWPC^XUSRB4^2^R^3^^0
"KRN",8994,133,1,0)
^^1^1^3040504^
"KRN",8994,133,1,1,0)
This RPC returns a value for use with the CCOW vault.
"KRN",8994,134,-1)
0^2
"KRN",8994,134,0)
XUS GET CCOW TOKEN^CCOW^XUSRB4^2^R^^^0
"KRN",8994,134,1,0)
^^1^1^3040504^
"KRN",8994,134,1,1,0)
This RPC gets a token to save in the CCOW context to aid in sign-on.
"KRN",8994,144,-1)
0^3
"KRN",8994,144,0)
XUS ALLKEYS^ALLKEYS^XUSRB^4^^^^1^1
"KRN",8994,144,1,0)
^8994.01^5^5^3050131^^
"KRN",8994,144,1,1,0)
This RPC will return all the KEYS that a user holds.
"KRN",8994,144,1,2,0)
If the FLAG is set to some value the list of KEYS will be screened to 
"KRN",8994,144,1,3,0)
only be those for J2EE use.
"KRN",8994,144,1,4,0)
This may need refinement as we get some experience.
"KRN",8994,144,1,5,0)
For FATKAAT and KAAJEE.
"KRN",8994,144,2,0)
^8994.02A^2^2
"KRN",8994,144,2,1,0)
IEN^1^10^0^2
"KRN",8994,144,2,1,1,0)
^^2^2^3050105^
"KRN",8994,144,2,1,1,1,0)
This is the IEN or DUZ of the user in question.
"KRN",8994,144,2,1,1,2,0)
If not passed in the RPC will user the current DUZ.
"KRN",8994,144,2,2,0)
FLAG^1^3^0^3
"KRN",8994,144,2,2,1,0)
^8994.021^1^1^3050131^^
"KRN",8994,144,2,2,1,1,0)
Not in use at this time.
"KRN",8994,144,2,"B","FLAG",2)

"KRN",8994,144,2,"B","IEN",1)

"KRN",8994,144,2,"PARAMSEQ",2,1)

"KRN",8994,144,2,"PARAMSEQ",3,2)

"KRN",8994,144,3,0)
^^3^3^3050131^
"KRN",8994,144,3,1,0)
Returns -1 if failed for some reason.
"KRN",8994,144,3,2,0)
Otherwise it returns a list of the names of the Security KEYS the user
"KRN",8994,144,3,3,0)
holds.
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^2950703^2970507^.5
"PKG",3,22,1,"PAH",1,0)
337^3050817^2
"PKG",3,22,1,"PAH",1,1,0)
^^2^2^3050817
"PKG",3,22,1,"PAH",1,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"PKG",3,22,1,"PAH",1,1,2,0)
Patch XU*8.0*337  SSO/UC Kernel support.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","XUESSO1")
0^6^B30184414
"RTN","XUESSO1",1,0)
XUESSO1 ;LUKE/SEA Single Sign-on utilities; ;12/14/2004  16:32
"RTN","XUESSO1",2,0)
 ;;8.0;KERNEL;**165,183,196,245,254,269,337**;Jul 10, 1995
"RTN","XUESSO1",3,0)
 ;
"RTN","XUESSO1",4,0)
GET(INDUZ) ;Gather identifying data from user's home site.
"RTN","XUESSO1",5,0)
 ;Must have Name, Access&Verify codes, SSN (no pseudo), station name&number
"RTN","XUESSO1",6,0)
 N %,NAME,SITE,SSN,PHONE,X,N,VPID
"RTN","XUESSO1",7,0)
 I '$D(DUZ) G BOMB
"RTN","XUESSO1",8,0)
 I '$D(DUZ(2)) G BOMB
"RTN","XUESSO1",9,0)
 I '$D(INDUZ) S INDUZ=DUZ
"RTN","XUESSO1",10,0)
 S N=$G(^VA(200,DUZ,0))
"RTN","XUESSO1",11,0)
 I '$L(N) G BOMB
"RTN","XUESSO1",12,0)
 S %=$P(N,U,3) I $L(%)<1 G BOMB ;No Access Code
"RTN","XUESSO1",13,0)
 S %=$P($G(^VA(200,INDUZ,.1)),U,2) I $L(%)<1 G BOMB ;No Verify Code
"RTN","XUESSO1",14,0)
 S %=$P(N,U,11) I $L(%)>1,(DT>%) G BOMB ;Terminated
"RTN","XUESSO1",15,0)
 S NAME=$P(N,U)
"RTN","XUESSO1",16,0)
 I '$L(NAME) G BOMB
"RTN","XUESSO1",17,0)
 ;
"RTN","XUESSO1",18,0)
 S SITE=$$NS^XUAF4(DUZ(2)) ;Site is name^station#
"RTN","XUESSO1",19,0)
 I $P(SITE,U,2)="" G BOMB ;Need a station number
"RTN","XUESSO1",20,0)
 ;
"RTN","XUESSO1",21,0)
 S SSN=$P($G(^VA(200,DUZ,1)),U,9)
"RTN","XUESSO1",22,0)
 I $$SPECIAL($P(SITE,"^",2)) S SSN=999999999 G G4 ;Manila RO doesn't need SSN
"RTN","XUESSO1",23,0)
 I 'SSN G BOMB
"RTN","XUESSO1",24,0)
 ;Don't allow if the SSN is pseudo
"RTN","XUESSO1",25,0)
 I $E(SSN,10)="P" G BOMB
"RTN","XUESSO1",26,0)
 ;Don't allow if the SSN is not real, (e.g. 00000NNNN)
"RTN","XUESSO1",27,0)
 I $E(SSN,1,5)="00000" G BOMB
"RTN","XUESSO1",28,0)
 ;
"RTN","XUESSO1",29,0)
G4 S PHONE=$$PH
"RTN","XUESSO1",30,0)
 S VPID=$$VPID^XUPS(DUZ) ;(p337)
"RTN","XUESSO1",31,0)
 S X=SSN_U_NAME_U_SITE_U_DUZ
"RTN","XUESSO1",32,0)
 I $L(PHONE)>2&($L(PHONE<20)) S X=X_U_PHONE
"RTN","XUESSO1",33,0)
 S $P(X,U,7)=VPID ;(p337)
"RTN","XUESSO1",34,0)
 ;ssn^name^station name^station number^DUZ^phone^vpid 
"RTN","XUESSO1",35,0)
 Q X
"RTN","XUESSO1",36,0)
 ;
"RTN","XUESSO1",37,0)
 ;
"RTN","XUESSO1",38,0)
BOMB ;Insufficient information to allow visiting
"RTN","XUESSO1",39,0)
 S X="-1^Insufficient User Information On File.  ssn,name,station name,station number,DUZ"
"RTN","XUESSO1",40,0)
 Q X
"RTN","XUESSO1",41,0)
 ;
"RTN","XUESSO1",42,0)
 ;
"RTN","XUESSO1",43,0)
PH() ; Try for a phone number or pager
"RTN","XUESSO1",44,0)
 N %,X
"RTN","XUESSO1",45,0)
 S %=""
"RTN","XUESSO1",46,0)
 S X=$G(^VA(200,DUZ,.13))
"RTN","XUESSO1",47,0)
 I '$L(X) Q ""
"RTN","XUESSO1",48,0)
 ;
"RTN","XUESSO1",49,0)
 S %=$P(X,U,5) I $L(%)>6 Q %  ;Commercial #
"RTN","XUESSO1",50,0)
 S %=$P(X,U,2) I $L(%)>2 Q %  ;Office
"RTN","XUESSO1",51,0)
 S %=$P(X,U,8) I $L(%)>6 Q %  ;Digital Pager
"RTN","XUESSO1",52,0)
 S %=$P(X,U,7) I $L(%)>6 Q %  ;Pager
"RTN","XUESSO1",53,0)
 S %=$P(X,U,3) I $L(%)>2 Q %  ;Phone #3
"RTN","XUESSO1",54,0)
 S %=$P(X,U,4) I $L(%)>2 Q %  ;Phone #4
"RTN","XUESSO1",55,0)
 S %=$P(X,U,1) I $L(%)>2 Q %  ;Home Phone
"RTN","XUESSO1",56,0)
 Q "" ;Couldn't find one.
"RTN","XUESSO1",57,0)
 ;
"RTN","XUESSO1",58,0)
SPECIAL(SN) ;Special Manila RO site
"RTN","XUESSO1",59,0)
 Q 358=SN
"RTN","XUESSO1",60,0)
 ;
"RTN","XUESSO1",61,0)
 ;
"RTN","XUESSO1",62,0)
PUT(DATIN) ;;Setup data from authenticating site GET() at receiving site
"RTN","XUESSO1",63,0)
 ;Return: 0=fail, 1=OK
"RTN","XUESSO1",64,0)
 N NEWDUZ,FDR,TODAY,IEN,DIC,USER,X,%T
"RTN","XUESSO1",65,0)
 N SSN,NAME,SITE,SITENUM,RMTDUZ,PHONE,VPID
"RTN","XUESSO1",66,0)
 S TODAY=$$HTFM^XLFDT($H),DT=$P(TODAY,"."),U="^"
"RTN","XUESSO1",67,0)
 S NEWDUZ=0
"RTN","XUESSO1",68,0)
 K ^TMP("DIERR",$J)
"RTN","XUESSO1",69,0)
 ;
"RTN","XUESSO1",70,0)
 IF (U_DATIN)["^^" Q 0 ;There is some data missing
"RTN","XUESSO1",71,0)
 S SSN=$P(DATIN,U,1)
"RTN","XUESSO1",72,0)
 S NAME=$P(DATIN,U,2)
"RTN","XUESSO1",73,0)
 S SITE=$P(DATIN,U,3)
"RTN","XUESSO1",74,0)
 S SITENUM=$P(DATIN,U,4)
"RTN","XUESSO1",75,0)
 S RMTDUZ=$P(DATIN,U,5)
"RTN","XUESSO1",76,0)
 S PHONE=$P(DATIN,U,6)
"RTN","XUESSO1",77,0)
 S VPID=$P(DATIN,U,7) ;(p337)
"RTN","XUESSO1",78,0)
 ;Format checks
"RTN","XUESSO1",79,0)
 I NAME'?1U.E1","1U.E Q 0
"RTN","XUESSO1",80,0)
 I SSN'?9N Q 0
"RTN","XUESSO1",81,0)
 I '$L(SITE)!('$L(SITENUM)) Q 0
"RTN","XUESSO1",82,0)
 ;
"RTN","XUESSO1",83,0)
 ;Get a LOCK. Block if can't get.
"RTN","XUESSO1",84,0)
 L +^VA(200,"HL7"):10 Q:'$T 0
"RTN","XUESSO1",85,0)
 S %T=$$TALL() L -^VA(200,"HL7")
"RTN","XUESSO1",86,0)
 I %T Q $$SET(NEWDUZ) ;Return 1 if OK.
"RTN","XUESSO1",87,0)
 Q 0
"RTN","XUESSO1",88,0)
 ;
"RTN","XUESSO1",89,0)
TALL() ;Test for existing user or adds a new one
"RTN","XUESSO1",90,0)
 N DUZ,FLAG S FLAG=0,DUZ=0,DUZ(0)=""
"RTN","XUESSO1",91,0)
 ;See if the SSN is in the NPF cross reference
"RTN","XUESSO1",92,0)
 I '$$SPECIAL(SITENUM),$D(^VA(200,"SSN",SSN)) D
"RTN","XUESSO1",93,0)
 .S NEWDUZ=$O(^VA(200,"SSN",SSN,0))
"RTN","XUESSO1",94,0)
 .I '$D(^VA(200,NEWDUZ,8910,"B",SITENUM)) D VISM
"RTN","XUESSO1",95,0)
 .D ADDV ;Add VPID if don't have one (p337)
"RTN","XUESSO1",96,0)
 .D UPDT
"RTN","XUESSO1",97,0)
 .S FLAG=1
"RTN","XUESSO1",98,0)
 .Q
"RTN","XUESSO1",99,0)
 ;See if in the AVISIT cross reference
"RTN","XUESSO1",100,0)
 I 'FLAG,$$SPECIAL(SITENUM) D
"RTN","XUESSO1",101,0)
 . S NEWDUZ=$O(^VA(200,"AVISIT",SITENUM,RMTDUZ,0))
"RTN","XUESSO1",102,0)
 . Q:NEWDUZ'>0
"RTN","XUESSO1",103,0)
 . D UPDT S FLAG=1
"RTN","XUESSO1",104,0)
 . Q
"RTN","XUESSO1",105,0)
 I FLAG Q 1 ;Quit here if we found a match for SSN or AVISIT
"RTN","XUESSO1",106,0)
 ;
"RTN","XUESSO1",107,0)
 ;
"RTN","XUESSO1",108,0)
 ;There is no matching SSN, try for a NAME match in "B"
"RTN","XUESSO1",109,0)
 S FLAG=0,NAME=$$UP^XLFSTR(NAME)
"RTN","XUESSO1",110,0)
 I $D(^VA(200,"B",NAME)) D
"RTN","XUESSO1",111,0)
 .N %,USER,USER2
"RTN","XUESSO1",112,0)
 .S NEWDUZ=$O(^VA(200,"B",NAME,0))
"RTN","XUESSO1",113,0)
 .S USER2=$O(^VA(200,"B",NAME,NEWDUZ)) ;More then one?
"RTN","XUESSO1",114,0)
 .Q:$L(USER2)>0
"RTN","XUESSO1",115,0)
 .;
"RTN","XUESSO1",116,0)
 .S %=$P($G(^VA(200,NEWDUZ,1)),U,9)
"RTN","XUESSO1",117,0)
 .Q:%'=SSN  ;Don't use this name if it has a different SSN
"RTN","XUESSO1",118,0)
 .;
"RTN","XUESSO1",119,0)
 .I '$L($P(^VA(200,NEWDUZ,1),U,9)) D ADDS
"RTN","XUESSO1",120,0)
 .I '$D(^VA(200,NEWDUZ,8910,"B",SITENUM)) D VISM
"RTN","XUESSO1",121,0)
 .D UPDT S FLAG=1
"RTN","XUESSO1",122,0)
 .Q
"RTN","XUESSO1",123,0)
 I FLAG Q 1 ;Quit here if we found an exact match for NAME (w/o SSN)
"RTN","XUESSO1",124,0)
 ;
"RTN","XUESSO1",125,0)
NEWU ;We didn't find anybody under SSN or NAME so we add a new user
"RTN","XUESSO1",126,0)
 ;
"RTN","XUESSO1",127,0)
 S DIC(0)="" ;Turn off ^XUA4A7 (work around)
"RTN","XUESSO1",128,0)
 ;
"RTN","XUESSO1",129,0)
 ;Put the name in the .01 field first.
"RTN","XUESSO1",130,0)
 D ADDU ;ADDU will set NEWDUZ
"RTN","XUESSO1",131,0)
 ;If NEWDUZ is still 0, the User add didn't work so exit.
"RTN","XUESSO1",132,0)
 I NEWDUZ=0 Q 0
"RTN","XUESSO1",133,0)
 ; Add SSN and Alias and VPID
"RTN","XUESSO1",134,0)
 D ADDS,ADDA,ADDV ;(p337)
"RTN","XUESSO1",135,0)
 ; Fill in the  VISITED FROM multiple
"RTN","XUESSO1",136,0)
 D VISM,UPDT ;Do update for all data in UPDT
"RTN","XUESSO1",137,0)
 ;
"RTN","XUESSO1",138,0)
 I $D(^TMP("DIERR",$J)) Q 0  ;W !!,"=========> FileMan Error",!!
"RTN","XUESSO1",139,0)
 ;
"RTN","XUESSO1",140,0)
 I NEWDUZ D BULL Q 1  ;Every thing OK
"RTN","XUESSO1",141,0)
 Q 0  ;Couldn't add user
"RTN","XUESSO1",142,0)
 ;
"RTN","XUESSO1",143,0)
 ;
"RTN","XUESSO1",144,0)
 ;              *****Subroutines*****
"RTN","XUESSO1",145,0)
 ;
"RTN","XUESSO1",146,0)
 ;
"RTN","XUESSO1",147,0)
SET(NEWDUZ) ;Set the user up to go
"RTN","XUESSO1",148,0)
 Q:NEWDUZ'>0 0
"RTN","XUESSO1",149,0)
 N XUSER,XOPT
"RTN","XUESSO1",150,0)
 S DUZ=NEWDUZ,U="^"
"RTN","XUESSO1",151,0)
 D DUZ^XUS1A
"RTN","XUESSO1",152,0)
 Q 1
"RTN","XUESSO1",153,0)
 ;
"RTN","XUESSO1",154,0)
ADDU ;Add a new name to the New Person File
"RTN","XUESSO1",155,0)
 N DD,DO,DIC,DA,X,Y
"RTN","XUESSO1",156,0)
 S DIC="^VA(200,",DIC(0)="L",X=NAME
"RTN","XUESSO1",157,0)
 D FILE^DICN
"RTN","XUESSO1",158,0)
 S:Y>0 NEWDUZ=+Y
"RTN","XUESSO1",159,0)
 Q
"RTN","XUESSO1",160,0)
 ;
"RTN","XUESSO1",161,0)
ADDS ;Add a SSN to the file
"RTN","XUESSO1",162,0)
 Q:$$SPECIAL(SITENUM)
"RTN","XUESSO1",163,0)
 S IEN=NEWDUZ_","
"RTN","XUESSO1",164,0)
 S FDR(200,IEN,9)=SSN
"RTN","XUESSO1",165,0)
 ;Do update for all data in UPDT
"RTN","XUESSO1",166,0)
 Q
"RTN","XUESSO1",167,0)
 ;
"RTN","XUESSO1",168,0)
ADDA ;Add a new Alias to file 200.04
"RTN","XUESSO1",169,0)
 Q:$D(^VA(200,NEWDUZ,3,"B","VISITOR"))
"RTN","XUESSO1",170,0)
 S IEN="+2,"_NEWDUZ_","
"RTN","XUESSO1",171,0)
 S FDR("200.04",IEN,.01)="VISITOR"
"RTN","XUESSO1",172,0)
 ;Do update for all data in UPDT
"RTN","XUESSO1",173,0)
 Q
"RTN","XUESSO1",174,0)
 ;
"RTN","XUESSO1",175,0)
ADDV ;Add a VPID to the file (p337)
"RTN","XUESSO1",176,0)
 Q:'$L(VPID)
"RTN","XUESSO1",177,0)
 I $$IEN^XUPS(VPID)>0 Q
"RTN","XUESSO1",178,0)
 S FDR(200,NEWDUZ_",",9000)=VPID
"RTN","XUESSO1",179,0)
 Q
"RTN","XUESSO1",180,0)
 ;
"RTN","XUESSO1",181,0)
VISM ;Create a multiple for this site number in the VISTED FROM file
"RTN","XUESSO1",182,0)
 ;K IEN,FDR
"RTN","XUESSO1",183,0)
 S IEN="+3,"_NEWDUZ_","
"RTN","XUESSO1",184,0)
 S FDR("200.06",IEN,.01)=SITENUM
"RTN","XUESSO1",185,0)
 ;
"RTN","XUESSO1",186,0)
 S FDR("200.06",IEN,1)=SITE
"RTN","XUESSO1",187,0)
 S FDR("200.06",IEN,2)=RMTDUZ
"RTN","XUESSO1",188,0)
 S FDR("200.06",IEN,3)=TODAY
"RTN","XUESSO1",189,0)
 I $D(PHONE),($L(PHONE)>2) S FDR("200.06",IEN,5)=PHONE
"RTN","XUESSO1",190,0)
 ;Do update for all data in UPDT
"RTN","XUESSO1",191,0)
 Q
"RTN","XUESSO1",192,0)
 ;
"RTN","XUESSO1",193,0)
UPDT ;Update the LAST VISIT field
"RTN","XUESSO1",194,0)
 I $D(FDR(200.06)) S IEN=$O(FDR(200.06,""))
"RTN","XUESSO1",195,0)
 E  S IEN=$O(^VA(200,NEWDUZ,8910,"B",SITENUM,0))_","_NEWDUZ_","
"RTN","XUESSO1",196,0)
 S FDR(200.06,IEN,4)=TODAY
"RTN","XUESSO1",197,0)
 K IEN D UPDATE^DIE("E","FDR","IEN") ;File all the data
"RTN","XUESSO1",198,0)
 Q
"RTN","XUESSO1",199,0)
 ;
"RTN","XUESSO1",200,0)
BULL ;Set up the bulletin and fire it off, Let MM see if bulletin is there
"RTN","XUESSO1",201,0)
 N XMB
"RTN","XUESSO1",202,0)
 S XMB="XUVISIT"
"RTN","XUESSO1",203,0)
 S XMB(1)=$$FMTE^XLFDT(TODAY)
"RTN","XUESSO1",204,0)
 S XMB(2)=NAME
"RTN","XUESSO1",205,0)
 S XMB(3)=NEWDUZ
"RTN","XUESSO1",206,0)
 S XMB(4)=SITE
"RTN","XUESSO1",207,0)
 S XMB(5)=SITENUM
"RTN","XUESSO1",208,0)
 S XMB(6)=RMTDUZ
"RTN","XUESSO1",209,0)
 S XMB(7)=PHONE
"RTN","XUESSO1",210,0)
 D ^XMB
"RTN","XUESSO1",211,0)
 Q
"RTN","XUINP337")
0^^B4491379
"RTN","XUINP337",1,0)
XUINP337 ;ISF/RWF - PATCH XU*8*337 POST INIT. ;08/08/2005  09:04
"RTN","XUINP337",2,0)
 ;;8.0;KERNEL;**337**;Jul 10, 1995
"RTN","XUINP337",3,0)
POST ;Post Install
"RTN","XUINP337",4,0)
 D PST1,PST2
"RTN","XUINP337",5,0)
 Q
"RTN","XUINP337",6,0)
 ;
"RTN","XUINP337",7,0)
TEST ;Test the get part
"RTN","XUINP337",8,0)
 N T1,T2 S (APP1,APP2)=""
"RTN","XUINP337",9,0)
 D HOME^%ZIS S T1=$H
"RTN","XUINP337",10,0)
 D GET,CLOSE^%ZISTCP
"RTN","XUINP337",11,0)
 S T2=$H
"RTN","XUINP337",12,0)
 W !,"Return data was "_$S(($L(APP1)+$L(APP2))=256:"OK",1:"Missing")
"RTN","XUINP337",13,0)
 W !,"Call took ",$P(T2,",",2)-$P(T1,",",2)," seconds"
"RTN","XUINP337",14,0)
 Q
"RTN","XUINP337",15,0)
 ;
"RTN","XUINP337",16,0)
PST1 ;Get the app-code
"RTN","XUINP337",17,0)
 N APP1,APP2,CCOW,RET,X,XWBTIME
"RTN","XUINP337",18,0)
 D GETAPC
"RTN","XUINP337",19,0)
 I $L($G(RET(0))),$L($G(RET(1))) Q  ;Already have APC
"RTN","XUINP337",20,0)
 D BMES^XPDUTL("Get CCOW parameter.")
"RTN","XUINP337",21,0)
 S CCOW="XUS CCOW VAULT PARAM",(APP1,APP2)=""
"RTN","XUINP337",22,0)
 D GET,CLOSE^%ZISTCP
"RTN","XUINP337",23,0)
 D FILE
"RTN","XUINP337",24,0)
 D GETAPC
"RTN","XUINP337",25,0)
 I '$D(RET(0))!'$D(RET(1)) D FAIL
"RTN","XUINP337",26,0)
 E  D BMES^XPDUTL("Set CCOW parameter.")
"RTN","XUINP337",27,0)
 Q
"RTN","XUINP337",28,0)
 ;
"RTN","XUINP337",29,0)
GET ;Get the codes
"RTN","XUINP337",30,0)
 N SITE,XWBTDEV,XWBRBUF,XWBDEBUG,$ES,$ET
"RTN","XUINP337",31,0)
 S $ETRAP="D ERR^XUINP337"
"RTN","XUINP337",32,0)
 S XWBTIME=30,XWBTIME(1)=3
"RTN","XUINP337",33,0)
 S SITE=$$KSP^XUPARAM("WHERE")
"RTN","XUINP337",34,0)
 ;Get the data from the FO-oakland ISC account.
"RTN","XUINP337",35,0)
 D CALL^%ZISTCP("10.6.21.15",33865) G:POP FAIL
"RTN","XUINP337",36,0)
 U IO S XWBTDEV=IO,XWBRBUF="",XWBDEBUG=0
"RTN","XUINP337",37,0)
 W "[SSO]3-"_$E(1000+$L(SITE),2,4)_SITE,@IOF
"RTN","XUINP337",38,0)
 S X=+$$BREAD^XWBRW(3) I X'>0 Q
"RTN","XUINP337",39,0)
 S APP1=$$BREAD^XWBRW(X)
"RTN","XUINP337",40,0)
 S X=+$$BREAD^XWBRW(3) I X'>0 Q
"RTN","XUINP337",41,0)
 S APP2=$$BREAD^XWBRW(X)
"RTN","XUINP337",42,0)
 S X=$$BREAD^XWBRW(1)
"RTN","XUINP337",43,0)
 Q
"RTN","XUINP337",44,0)
 ;
"RTN","XUINP337",45,0)
FAIL ;Tell user APPCODE failed
"RTN","XUINP337",46,0)
 D BMES^XPDUTL("Failed to set CCOW parameter.")
"RTN","XUINP337",47,0)
 Q
"RTN","XUINP337",48,0)
 ;
"RTN","XUINP337",49,0)
ERR ;
"RTN","XUINP337",50,0)
 D ^%ZTER,UNWIND^%ZTER
"RTN","XUINP337",51,0)
 ;
"RTN","XUINP337",52,0)
FILE ;
"RTN","XUINP337",53,0)
 I '$L($G(APP1))!'$L($G(APP2)) D ^%ZTER Q
"RTN","XUINP337",54,0)
 D ADD^XPAR("SYS",CCOW,0,APP1,.ERR)
"RTN","XUINP337",55,0)
 D ADD^XPAR("SYS",CCOW,1,APP2,.ERR)
"RTN","XUINP337",56,0)
 Q
"RTN","XUINP337",57,0)
 ;
"RTN","XUINP337",58,0)
GETAPC ;Test the appcode
"RTN","XUINP337",59,0)
 K RET
"RTN","XUINP337",60,0)
 S RET(0)=$$GET^XPAR("SYS","XUS CCOW VAULT PARAM",0,"Q")
"RTN","XUINP337",61,0)
 S RET(1)=$$GET^XPAR("SYS","XUS CCOW VAULT PARAM",1,"Q")
"RTN","XUINP337",62,0)
 Q
"RTN","XUINP337",63,0)
PST2 ;Set default CCOW token timeout
"RTN","XUINP337",64,0)
 N DIE,DIC,DR,DA
"RTN","XUINP337",65,0)
 S DIE="^XTV(8989.3,",DA=1,DR="30.1////5400" D ^DIE
"RTN","XUINP337",66,0)
 Q
"RTN","XUS")
0^1^B29056184
"RTN","XUS",1,0)
XUS ;SFISC/STAFF - SIGNON ;11/23/2004  12:34
"RTN","XUS",2,0)
 ;;8.0;KERNEL;**16,26,49,59,149,180,265,337**;Jul 10, 1995
"RTN","XUS",3,0)
 ;Sign-on message numbers are 30810.51 to 30810.99
"RTN","XUS",4,0)
 S U="^" D INTRO^XUS1A()
"RTN","XUS",5,0)
 K  K ^XUTL("ZISPARAM",$I)
"RTN","XUS",6,0)
 S U="^",XQXFLG("GUI")="^"
"RTN","XUS",7,0)
 W ! S $Y=0 D SET1(1) I POP S XUM=3 G NO ;Sets DUZ("LANG")
"RTN","XUS",8,0)
 S XUSTMP(51)=$$EZBLD^DIALOG(30810.51),XUSTMP(52)=$$EZBLD^DIALOG(30810.52)
"RTN","XUS",9,0)
 W !!,"Volume set: ",$P(XUENV,U,4),"  UCI: ",XUCI,"  Device: ",$I W:$S('$D(IO("ZIO")):0,1:$I'=IO("ZIO")) " (",IO("ZIO"),")" W !
"RTN","XUS",10,0)
RESTART ;
"RTN","XUS",11,0)
 S XUM=$$SET2 G:XUM NO
"RTN","XUS",12,0)
 I $P(XU1,U,2)]"" S XUM=$$DEVPAS() I XUM G H:XUM<0,NO
"RTN","XUS",13,0)
 ;S PGM=$P(XOPT,U,8),XUA=$P(PGM,"[",1) I XUA]"" X XUEON G NEXT^XUS1
"RTN","XUS",14,0)
A S (XUSER(0),XUSER(1),XQUR)=""
"RTN","XUS",15,0)
 ;Check for locked IP/device.
"RTN","XUS",16,0)
 I $$LKCHECK^XUSTZIP() S XUM=7,XUFAC=$P(XOPT,U,2),XUHALT=1 G NO
"RTN","XUS",17,0)
 ;Auto Sign-on check
"RTN","XUS",18,0)
 S X=$$AUTOXUS^XUS1B() I X>0 S DUZ=X D USER(DUZ) W !!,">> Auto Sign-on: ",$P(XUSER(0),U)," <<<",! G B
"RTN","XUS",19,0)
 X XUEOFF S AV=$$ASKAV() X XUEON I AV="^;^" G H ;Get out
"RTN","XUS",20,0)
 I AV["MAIL-BOX",AV[";XMR" S (XUA,PGM)="XMR",XMCHAN=$P($P(AV,";")," ",2),DUZ=.5 G XMR^XUSCLEAN
"RTN","XUS",21,0)
 S XQUR=$P(AV,";",3)
"RTN","XUS",22,0)
 S DUZ=$$CHECKAV(AV) K AV
"RTN","XUS",23,0)
 S XUM=$$UVALID() G:XUM NO
"RTN","XUS",24,0)
B K XUF,%1 S XUF=0 X XUEON
"RTN","XUS",25,0)
 I DUZ D USER^XUS1 G:XUM NO
"RTN","XUS",26,0)
 I DUZ D SEC^XUS3:($D(^%ZIS(1,XUDEV,"TIME"))!$D(^(95))) G:XUM NO
"RTN","XUS",27,0)
 G NO:'DUZ
"RTN","XUS",28,0)
 S DTIME=$P(XOPT,U,10),X=$S(DUZ("BUF"):"",1:"NO-")_"TYPE-AHEAD" X:$D(^%ZOSF(X)) ^(X)
"RTN","XUS",29,0)
 D TT^XUS3:$G(XUTT)
"RTN","XUS",30,0)
 D CLRFAC^XUS3($G(IO("IP")))
"RTN","XUS",31,0)
PGM ;
"RTN","XUS",32,0)
 S Y=+$G(^%ZIS(1,XUDEV,201)) I Y>0,$$CHK S XQY=Y G OK
"RTN","XUS",33,0)
 S Y=+$G(^VA(200,DUZ,201)) I Y>0,$$CHK S XQY=Y G OK
"RTN","XUS",34,0)
 S XUM=16
"RTN","XUS",35,0)
 G NO
"RTN","XUS",36,0)
OK D CHEK^XQ83
"RTN","XUS",37,0)
 S (XUA,PGM)="XQ"
"RTN","XUS",38,0)
 G NEXT^XUS1
"RTN","XUS",39,0)
 ;
"RTN","XUS",40,0)
CHK() ;Check that option exeist and LOCK
"RTN","XUS",41,0)
 I $D(^DIC(19,Y,0)),$S($P(^(0),U,6)="":1,1:$D(^XUSEC($P(^(0),U,6),DUZ))) Q 1
"RTN","XUS",42,0)
 Q 0
"RTN","XUS",43,0)
 ;
"RTN","XUS",44,0)
LC S X=$$UP(X)
"RTN","XUS",45,0)
 Q
"RTN","XUS",46,0)
UP(%) Q $TR(%,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","XUS",47,0)
 ;
"RTN","XUS",48,0)
FAC ;Failed access
"RTN","XUS",49,0)
 S:'DUZ XUF(.1)=$E(%1)
"RTN","XUS",50,0)
 S:XUF=2 XUF(.2)=XUF(.2)+1,XUF(XUF(.2))=%1 S %1="" Q
"RTN","XUS",51,0)
 Q
"RTN","XUS",52,0)
NO ;Tell why didn't get on
"RTN","XUS",53,0)
 S X=$$NO^XUS3() G RESTART:'X ;fall into exit
"RTN","XUS",54,0)
H ;Exit point for all applications
"RTN","XUS",55,0)
C ;CLOSE
"RTN","XUS",56,0)
 G ^XUSCLEAN
"RTN","XUS",57,0)
 ;
"RTN","XUS",58,0)
ON X ^%ZOSF("EON") Q
"RTN","XUS",59,0)
 ;
"RTN","XUS",60,0)
ASKAV(PRE) ;Ask and return Access;Verify code, Turn off echo before calling
"RTN","XUS",61,0)
 N X,Y S PRE=$G(PRE)
"RTN","XUS",62,0)
 F  W !,PRE,XUSTMP(51) S X=$$ACCEPT S:X="^" X="^;^" Q:$L(X)
"RTN","XUS",63,0)
 S X=$TR(X,$C(9),";") ;Convert TAB to ; to match GUI.
"RTN","XUS",64,0)
 I $P(X," ")="MAIL-BOX" S X=X_";XMR"
"RTN","XUS",65,0)
 I $E(X,1,7)="~~TOK~~" Q X ;Use CCOW token
"RTN","XUS",66,0)
 I '$L($P(X,";",2)) W !,PRE,XUSTMP(52) S Y=$$ACCEPT S:Y="^" X="^;" S $P(X,";",2)=Y
"RTN","XUS",67,0)
 Q X
"RTN","XUS",68,0)
 ;
"RTN","XUS",69,0)
 ;Timeout used by XUSTZ call.
"RTN","XUS",70,0)
ACCEPT(TO) ;Read A/V and echo '*' char.
"RTN","XUS",71,0)
 ;Have the Read write to flush the buffer on some systems
"RTN","XUS",72,0)
 N C,A,E K DUOUT S A="",TO=$G(TO,60),E=0
"RTN","XUS",73,0)
 F  D  Q:E
"RTN","XUS",74,0)
 . R "",*C:TO S:('$T) DUOUT=1 S:('$T)!(C=94) A="^"
"RTN","XUS",75,0)
 . I (A="^")!(C=13)!($L(A)>60) S E=1 Q
"RTN","XUS",76,0)
 . I C=127 Q:'$L(A)  S A=$E(A,1,$L(A)-1) W $C(8,32,8) Q
"RTN","XUS",77,0)
 . S A=A_$C(C) W *42
"RTN","XUS",78,0)
 . Q
"RTN","XUS",79,0)
 Q A
"RTN","XUS",80,0)
 ; 
"RTN","XUS",81,0)
CHECKAV(X1) ;Check A/V code return DUZ or Zero. (Called from XUSRB)
"RTN","XUS",82,0)
 N %,%1,X,Y,IEN,DA,DIK
"RTN","XUS",83,0)
 S IEN=0
"RTN","XUS",84,0)
 ;Start CCOW
"RTN","XUS",85,0)
 I $E(X1,1,7)="~~TOK~~" D  Q:IEN>0 IEN
"RTN","XUS",86,0)
 . I $E(X1,8,9)="~1" S IEN=$$CHKASH^XUSRB4($E(X1,8,255))
"RTN","XUS",87,0)
 . I $E(X1,8,9)="~2" S IEN=$$CHKCCOW^XUSRB4($E(X1,8,255))
"RTN","XUS",88,0)
 . Q
"RTN","XUS",89,0)
 ;End CCOW
"RTN","XUS",90,0)
 S X1=$$UP(X1) S:X1[":" XUTT=1,X1=$TR(X1,":")
"RTN","XUS",91,0)
 S X=$P(X1,";") Q:X="^" -1 S:XUF %1="Access: "_X
"RTN","XUS",92,0)
 Q:X'?1.20ANP 0
"RTN","XUS",93,0)
 S X=$$EN^XUSHSH(X) I '$D(^VA(200,"A",X)) D LBAV Q 0
"RTN","XUS",94,0)
 S %1="",IEN=$O(^VA(200,"A",X,0)),XUF(.3)=IEN D USER(IEN)
"RTN","XUS",95,0)
 S X=$P(X1,";",2) S:XUF %1="Verify: "_X S X=$$EN^XUSHSH(X)
"RTN","XUS",96,0)
 I $P(XUSER(1),"^",2)'=X D LBAV Q 0
"RTN","XUS",97,0)
 I $G(XUFAC(1)) S DIK="^XUSEC(4,",DA=XUFAC(1) D ^DIK
"RTN","XUS",98,0)
 Q IEN
"RTN","XUS",99,0)
LBAV ;Log Bad AV
"RTN","XUS",100,0)
 D:XUF FAC
"RTN","XUS",101,0)
 I IEN S X=$P($G(^VA(200,IEN,1.1)),U,2)+1,$P(^(1.1),"^",2)=X
"RTN","XUS",102,0)
 Q
"RTN","XUS",103,0)
 ;
"RTN","XUS",104,0)
USER(IX) ;Build XUSER
"RTN","XUS",105,0)
 S XUSER(0)=$G(^VA(200,+IX,0)),XUSER(1)=$G(^(.1)),XUSER(1.1)=$G(^(1.1))
"RTN","XUS",106,0)
 Q
"RTN","XUS",107,0)
 ;
"RTN","XUS",108,0)
XUVOL ;Setup XUENV, XUCI,XQVOL,XUVOL
"RTN","XUS",109,0)
 S U="^" D GETENV^%ZOSV S XUENV=Y,XUCI=$P(Y,U,1),XQVOL=$P(Y,U,2)
"RTN","XUS",110,0)
 S X=$O(^XTV(8989.3,1,4,"B",XQVOL,0)),XUVOL=$S(X>0:^XTV(8989.3,1,4,X,0),1:XQVOL_"^y^1")
"RTN","XUS",111,0)
 Q
"RTN","XUS",112,0)
 ;
"RTN","XUS",113,0)
XOPT ;Setup initial XOPT
"RTN","XUS",114,0)
 S XOPT=$S($D(^XTV(8989.3,1,"XUS")):^("XUS"),1:"")
"RTN","XUS",115,0)
 F I=2:1:15 I $P(XOPT,U,I)="" S $P(XOPT,U,I)=$P("^5^900^1^1^^^^1^300^^^^N^90",U,I)
"RTN","XUS",116,0)
 Q
"RTN","XUS",117,0)
 ;
"RTN","XUS",118,0)
SET1(FLAG) ;Setup parameters (also called from XUSRB)
"RTN","XUS",119,0)
 N %
"RTN","XUS",120,0)
 S U="^",XUEON=^%ZOSF("EON"),XUEOFF=^("EOFF")
"RTN","XUS",121,0)
 D XUVOL,XOPT S DUZ("LANG")=$P(XOPT,U,7) S:$P(XUVOL,U,6)="y" XRTL=XUCI_","_XQVOL
"RTN","XUS",122,0)
 K ^XUTL("XQ",$J) S XUF=0,XUDEV=0,DUZ=0,DUZ(0)="@",IOS=0,ION=""
"RTN","XUS",123,0)
 I FLAG S %ZIS="L",IOP="HOME" D ^%ZIS Q:POP
"RTN","XUS",124,0)
 S XUDEV=IOS,XUIOP=ION D:$D(XRTL) T0^%ZOSV
"RTN","XUS",125,0)
 D GETFAC^XUS3($G(IO("IP")))
"RTN","XUS",126,0)
 S %=$P(XOPT,U,14)
"RTN","XUS",127,0)
 I "N"'[% D
"RTN","XUS",128,0)
 . S XUF=(%["R")+1,XUF(.1)="",XUF(.2)=0,XUF(.3)=0
"RTN","XUS",129,0)
 . I %["D" S:$D(^XTV(8989.3,1,4.33,"B",XUDEV))[0 XUF=0
"RTN","XUS",130,0)
 Q
"RTN","XUS",131,0)
SET2() ;EF. Return error code (also called from XUSRB)
"RTN","XUS",132,0)
 N %,X
"RTN","XUS",133,0)
 S XUNOW=$$HTFM^XLFDT($H),DT=$P(XUNOW,".")
"RTN","XUS",134,0)
 K DUZ,XUSER
"RTN","XUS",135,0)
 S (DUZ,DUZ(2))=0,(DUZ(0),DUZ("AG"),XUSER(0),XUSER(1),XUTT,%UCI)=""
"RTN","XUS",136,0)
 S %=$$INHIBIT^XUSRB() I %>0 Q %
"RTN","XUS",137,0)
 S X=$G(^%ZIS(1,XUDEV,"XUS")),XU1=$G(^(1))
"RTN","XUS",138,0)
 I $L(X) F I=1:1:15 I $L($P(X,U,I)) S $P(XOPT,U,I)=$P(X,U,I)
"RTN","XUS",139,0)
 S DTIME=600
"RTN","XUS",140,0)
 I '$P(XOPT,U,11),$D(^%ZIS(1,XUDEV,90)),^(90)>2800000,^(90)'>DT Q 8
"RTN","XUS",141,0)
 I $D(XRT0) S XRTN="XUS" D T1^%ZOSV
"RTN","XUS",142,0)
 Q 0
"RTN","XUS",143,0)
 ;
"RTN","XUS",144,0)
UVALID() ;EF. Is it valid for this user to sign on?
"RTN","XUS",145,0)
 I DUZ'>0 Q 4
"RTN","XUS",146,0)
 I $P(XUSER(1.1),U,5),$P(XUSER(1.1),U,5)>XUNOW S XUM(0)=$$FMTE^XLFDT($P(XUSER(1.1),U,5),"2PM") Q 18 ;User locked until
"RTN","XUS",147,0)
 I $P(XUSER(0),U,11),$P(XUSER(0),U,11)'>DT Q 11 ;Access Terminated
"RTN","XUS",148,0)
 I $P(XUSER(0),U,7) Q 5 ;Disuser flag set
"RTN","XUS",149,0)
 Q 0
"RTN","XUS",150,0)
 ;
"RTN","XUS",151,0)
DEVPAS() ;EF. Ask device password
"RTN","XUS",152,0)
 X XUEOFF W !,"DEVICE PASSWORD: " R X:60 X XUEON
"RTN","XUS",153,0)
 S X=$E(X,1,30) S:'$T X="^" D LC Q:X["^" -1 I $P(XU1,U,2)'=X S:XUF %1="Device: "_X D:XUF FAC Q 6
"RTN","XUS",154,0)
 Q 0
"RTN","XUS",155,0)
 ;
"RTN","XUS1B")
0^2^B4207439
"RTN","XUS1B",1,0)
XUS1B ;ISCSF/RWF - Auto sign-on ;04/28/2004  14:50
"RTN","XUS1B",2,0)
 ;;8.0;;**59,337**;Feb 14, 1997
"RTN","XUS1B",3,0)
 Q
"RTN","XUS1B",4,0)
 ;
"RTN","XUS1B",5,0)
AUTOXUS() ;Do the check for XUS and Auto Sign-on
"RTN","XUS1B",6,0)
 N %,Y
"RTN","XUS1B",7,0)
 I $G(XQXFLG("ASO")) Q 0 ;Already tried once.
"RTN","XUS1B",8,0)
 G AUTO
"RTN","XUS1B",9,0)
 ;
"RTN","XUS1B",10,0)
AUTOXWB() ;Do the check for XWB and Auto Sign-on
"RTN","XUS1B",11,0)
 N %,Y
"RTN","XUS1B",12,0)
 I $G(XQXFLG("ASO")) Q 0 ;Already tried so skip.
"RTN","XUS1B",13,0)
AUTO ;Common code
"RTN","XUS1B",14,0)
 I ($T(^XWBCAGNT)="")!($P(XOPT,U,18)="d") S XQXFLG("ZEBRA")=-1 Q 0 ;Disabled
"RTN","XUS1B",15,0)
 S Y=$$CHKVIP^XUS1B(),%=0 I Y>0 S XQXFLG("ASO")=1,%=$$PREF($P(XOPT,U,18),$P($G(^VA(200,Y,200)),U,18))
"RTN","XUS1B",16,0)
 I Y>0,'% S Y=0 ;No Auto signon
"RTN","XUS1B",17,0)
 Q Y
"RTN","XUS1B",18,0)
 ;
"RTN","XUS1B",19,0)
CHKVIP() ;Check for a Valid current IP
"RTN","XUS1B",20,0)
 N REF,XREF,IEN,R0,ENV,JOB,HNDL
"RTN","XUS1B",21,0)
 S IEN=0,ENV=$$ENV I $G(IO("IP"))]"" D GETHNDL(.HNDL)
"RTN","XUS1B",22,0)
 S REF=$G(IO("IP")) I REF]"" D LKUP("AS1",$P(REF,":")) Q:IEN>0 IEN
"RTN","XUS1B",23,0)
 ;Only use IP address for lookup
"RTN","XUS1B",24,0)
 ;S REF=$G(IO("CLNM")) Q:REF["@" 0
"RTN","XUS1B",25,0)
 ;S REF=$P(REF,":") I REF]"" D LKUP2 Q:IEN IEN I REF["." D LKUP("AS2",$P(REF,".")) Q:IEN IEN
"RTN","XUS1B",26,0)
 ;S REF=$$LOW^XLFSTR(REF) I REF]"" D LKUP2 Q:IEN IEN I REF["." D LKUP("AS2",$P(REF,".")) Q:IEN IEN
"RTN","XUS1B",27,0)
 Q 0
"RTN","XUS1B",28,0)
 ;
"RTN","XUS1B",29,0)
LKUP2 ;See if we can find a workstation name
"RTN","XUS1B",30,0)
 I $D(^XUSEC(0,"AS2",REF))>0 D LKUP("AS2",REF) Q:IEN
"RTN","XUS1B",31,0)
 S XREF=$O(^XUSEC(0,"AS2",REF)) I XREF]"",$E(XREF,1,$L(REF))=REF D LKUP("AS2",XREF) Q:IEN
"RTN","XUS1B",32,0)
 Q
"RTN","XUS1B",33,0)
LKUP(XREF,LK) ;Check one X-ref
"RTN","XUS1B",34,0)
 S IX=0
"RTN","XUS1B",35,0)
 F  S IX=$O(^XUSEC(0,XREF,LK,IX)) Q:'$L(IX)  D CHK Q:IEN>0
"RTN","XUS1B",36,0)
 Q
"RTN","XUS1B",37,0)
CHK ;Could this be a good one.
"RTN","XUS1B",38,0)
 N R0,R1,JOB
"RTN","XUS1B",39,0)
 S R0=$G(^XUSEC(0,IX,0))
"RTN","XUS1B",40,0)
 ;Check handle.
"RTN","XUS1B",41,0)
 S R1=$P(R0,U,13) I R1]"",$D(HNDL(R1)) D  Q:IEN>0
"RTN","XUS1B",42,0)
 . L +^XWB("SESSION",IX_"~"_R1):0 I $T L -^XWB("SESSION",IX_"~"_R1) Q
"RTN","XUS1B",43,0)
 . S IEN=+R0 Q  ;Found a match
"RTN","XUS1B",44,0)
 ;I $P(R0,U,5)'=$P(ENV,U,2) Q  ;Make sure on the same VOL.
"RTN","XUS1B",45,0)
 ;I $P(R0,U,10)'=$P(ENV,U,3) Q  ;Check that on same NODE.
"RTN","XUS1B",46,0)
 ;S JOB=$P(R0,U,3) I $D(^$JOB(JOB)),IX=+$G(^XUTL("XQ",JOB,0)) S IEN=+R0 Q  ;Found a match
"RTN","XUS1B",47,0)
 Q
"RTN","XUS1B",48,0)
 ;
"RTN","XUS1B",49,0)
ENV() N Y D GETENV^%ZOSV Q Y
"RTN","XUS1B",50,0)
PREF(%1,%2) ;
"RTN","XUS1B",51,0)
 Q $S(%2]"":%2,1:%1)
"RTN","XUS1B",52,0)
GETHNDL(RET) ;Get the Handles from the Client
"RTN","XUS1B",53,0)
 N %,%1,X,XXX
"RTN","XUS1B",54,0)
 ;I '$D(XWBUSRNM) Q  ;JLI
"RTN","XUS1B",55,0)
 S %=$$CMD^XWBCAGNT(.XXX,"XWB GET HANDLES") Q:'%
"RTN","XUS1B",56,0)
 Q:'$O(XXX(0))
"RTN","XUS1B",57,0)
 ;build array
"RTN","XUS1B",58,0)
 S RET=0,%1=1 F %=1:1:$L(XXX(%1),"^") S X=$P(XXX(%1),"^",%) S:X]"" RET(X)="",RET=RET+1
"RTN","XUS1B",59,0)
 Q
"RTN","XUSRB")
0^3^B37446325
"RTN","XUSRB",1,0)
XUSRB ;ISCSF/RWF - Request Broker ;04/19/2005  13:12
"RTN","XUSRB",2,0)
 ;;8.0;KERNEL;**11,16,28,32,59,70,82,109,115,165,150,180,213,234,238,265,337**;Jul 10, 1995
"RTN","XUSRB",3,0)
 Q  ;No entry from top
"RTN","XUSRB",4,0)
 ;
"RTN","XUSRB",5,0)
 ;RPC BROKER calls, First parameter is always call-by-reference
"RTN","XUSRB",6,0)
VALIDAV(RET,AVCODE) ;Check a users access
"RTN","XUSRB",7,0)
 ;Return R(0)=DUZ, R(1)=(0=OK, 1,2...=Can't sign-on for some reason)
"RTN","XUSRB",8,0)
 ; R(2)=verify needs changing, R(3)=Message, R(4)=0, R(5)=msg cnt, R(5+n)
"RTN","XUSRB",9,0)
 ; R(R(5)+6)=# div user must select from, R(R(5)+6+n)=div
"RTN","XUSRB",10,0)
 ;
"RTN","XUSRB",11,0)
 N X,XUSER,XUF,XUNOW,XUDEV,XUM,XUMSG,%1,VCCH K DUZ
"RTN","XUSRB",12,0)
 S U="^",RET(0)=0,RET(5)=0,XUF=$G(XUF,0),XUM=0,XUMSG=0,XUDEV=0
"RTN","XUSRB",13,0)
 S DUZ=0,DUZ(0)="",VCCH=0 D NOW
"RTN","XUSRB",14,0)
 S XOPT=$$STATE^XWBSEC("XUS XOPT")
"RTN","XUSRB",15,0)
 S XUMSG=$$INHIBIT() I XUMSG S XUM=1 G VAX ;Logon inhibited
"RTN","XUSRB",16,0)
 ;3 Strikes
"RTN","XUSRB",17,0)
 I $$LKCHECK^XUSTZIP($G(IO("IP"))) S XUMSG=7 G VAX ;IP locked
"RTN","XUSRB",18,0)
 ;Check type of sign-on code
"RTN","XUSRB",19,0)
 I $L(AVCODE) D
"RTN","XUSRB",20,0)
 . I $E(AVCODE,1,2)="~1" S DUZ=$$CHKASH^XUSRB4(AVCODE) Q
"RTN","XUSRB",21,0)
 . I $E(AVCODE,1,2)="~2" S DUZ=$$CHKCCOW^XUSRB4(AVCODE) Q
"RTN","XUSRB",22,0)
 . S DUZ=$$CHECKAV^XUS($$DECRYP^XUSRB1(AVCODE))
"RTN","XUSRB",23,0)
 . Q
"RTN","XUSRB",24,0)
 I DUZ'>0,$$FAIL^XUS3 D  G VAX
"RTN","XUSRB",25,0)
 . S XUM=1,XUMSG=7,X=$$RA^XUSTZ H 5 ;3 Strikes
"RTN","XUSRB",26,0)
 S XUMSG=$$UVALID^XUS() G:XUMSG VAX ;Check User
"RTN","XUSRB",27,0)
 S VCCH=$$VCVALID() ;Check VC
"RTN","XUSRB",28,0)
 I DUZ>0 S XUMSG=$$POST(1)
"RTN","XUSRB",29,0)
 I XUMSG>0 S DUZ=0,VCCH=0 ;If can't sign-on, don't tell need to change VC
"RTN","XUSRB",30,0)
 I 'XUMSG,VCCH S XUMSG=12 D SET^XWBSEC("XUS DUZ",DUZ) ;Need to change VC
"RTN","XUSRB",31,0)
VAX S:XUMSG>0 DUZ=0 ;Can't sign-on, Clear DUZ.
"RTN","XUSRB",32,0)
 D:DUZ>0 POST2
"RTN","XUSRB",33,0)
 S RET(0)=DUZ,RET(1)=XUM,RET(2)=VCCH,RET(3)=$S(XUMSG:$$TXT^XUS3(XUMSG),1:""),RET(4)=0
"RTN","XUSRB",34,0)
 Q
"RTN","XUSRB",35,0)
 ;
"RTN","XUSRB",36,0)
NOW S U="^",XUNOW=$$NOW^XLFDT(),DT=$P(XUNOW,".")
"RTN","XUSRB",37,0)
 Q
"RTN","XUSRB",38,0)
 ;
"RTN","XUSRB",39,0)
INTRO(RET) ;Return INTRO TEXT.
"RTN","XUSRB",40,0)
 D INTRO^XUS1A("RET")
"RTN","XUSRB",41,0)
 Q
"RTN","XUSRB",42,0)
 ;
"RTN","XUSRB",43,0)
VCVALID() ;Return 1 if the Verify code needs changing.
"RTN","XUSRB",44,0)
 Q:'$G(DUZ) 1
"RTN","XUSRB",45,0)
 Q:$P($G(^VA(200,DUZ,.1)),U,2)="" 1 ;VC is empty
"RTN","XUSRB",46,0)
 Q:$P(^VA(200,DUZ,0),U,8)=1 0 ;VC never expires
"RTN","XUSRB",47,0)
 N XUSER D USER^XUS(DUZ)
"RTN","XUSRB",48,0)
 Q $$VCHG^XUS1
"RTN","XUSRB",49,0)
 ;
"RTN","XUSRB",50,0)
CVC(RET,XU1) ;change VC, Return 0 = success
"RTN","XUSRB",51,0)
 N XU2,XU3,XU4 S DUZ=$G(DUZ),RET(0)=99,XU4=$$STATE^XWBSEC("XUS DUZ") S:(DUZ=0)&(XU4>0) DUZ=XU4 Q:DUZ'>0
"RTN","XUSRB",52,0)
 S U="^",XU2=$P(XU1,U,2),XU3=$P(XU1,U,3),XU1=$P(XU1,U)
"RTN","XUSRB",53,0)
 S XU1=$$DECRYP^XUSRB1(XU1),XU2=$$DECRYP^XUSRB1(XU2),XU3=$$DECRYP^XUSRB1(XU3)
"RTN","XUSRB",54,0)
 S XU3=$$BRCVC^XUS2(XU1,XU2),RET(0)=+XU3,RET(1)=$P(XU3,U,2,9)
"RTN","XUSRB",55,0)
 I XU3>0 S DUZ=0 ;Clean-up if not changed.
"RTN","XUSRB",56,0)
 I 'XU3,XU4 D KILL^XWBSEC("XUS DUZ"),POST2
"RTN","XUSRB",57,0)
 Q
"RTN","XUSRB",58,0)
 ;
"RTN","XUSRB",59,0)
SHOWPOST() ;EF. Check if should send the POST SIGN-ON msg.
"RTN","XUSRB",60,0)
 Q +$P($G(^XTV(8989.3,1,"XWB")),"^",2)
"RTN","XUSRB",61,0)
 ;
"RTN","XUSRB",62,0)
POST(CVC) ;Finish setup partition, I CVC don't log yet
"RTN","XUSRB",63,0)
 N X,XUM,XUDIV S:$D(IO)[0 IO=$I S IO(0)=IO
"RTN","XUSRB",64,0)
 K ^UTILITY($J),^TMP($J)
"RTN","XUSRB",65,0)
 I '$D(XUSER(0)),DUZ D USER^XUS(DUZ)
"RTN","XUSRB",66,0)
 S XUM=$$USER^XUS1A Q:XUM>0 XUM ;User can't sign on for some reason.
"RTN","XUSRB",67,0)
 S RET(5)=0 ;The next line sends the post sign-on msg
"RTN","XUSRB",68,0)
 F %=1:1 Q:'$D(XUTEXT(%))  S RET(5+%)=$E(XUTEXT(%),2,256),RET(5)=%
"RTN","XUSRB",69,0)
 I '$$SHOWPOST S RET(5)=0 ;This line stops the sending/display of the msg.
"RTN","XUSRB",70,0)
 D:'$G(CVC) POST2
"RTN","XUSRB",71,0)
 Q 0
"RTN","XUSRB",72,0)
 ;
"RTN","XUSRB",73,0)
POST2 D:'$D(XUNOW) NOW
"RTN","XUSRB",74,0)
 D DUZ^XUS1A,SAVE^XUS1,LOG^XUS1,ABT^XQ12
"RTN","XUSRB",75,0)
 D KILL^XWBSEC("XUS XOPT"),CLRFAC^XUS3($G(IO("IP"))) ;p265
"RTN","XUSRB",76,0)
 I $T(SETTIME^XWBTCPC)]"" D SETTIME^XWBTCPC() ;Clear sign-on time-out
"RTN","XUSRB",77,0)
 K:$G(XWBVER)<1.106 XQY,XQY0 ;Delete the sign-on context.
"RTN","XUSRB",78,0)
 K XUTEXT,XOPT,XUEON,XUEOFF,XUTT,XUDEV,XUSER
"RTN","XUSRB",79,0)
 Q
"RTN","XUSRB",80,0)
 ;
"RTN","XUSRB",81,0)
INHIBIT() ;Is Logon to this system Inhibited?
"RTN","XUSRB",82,0)
 I $$INHIB1() Q 1
"RTN","XUSRB",83,0)
 I $$INHIB2() Q 1
"RTN","XUSRB",84,0)
 Q 0
"RTN","XUSRB",85,0)
 ;
"RTN","XUSRB",86,0)
INHIB1() ;The LOGON check
"RTN","XUSRB",87,0)
 I $G(^%ZIS(14.5,"LOGON",XQVOL)) Q 1
"RTN","XUSRB",88,0)
 Q 0
"RTN","XUSRB",89,0)
 ;
"RTN","XUSRB",90,0)
INHIB2() ;The Max User Check
"RTN","XUSRB",91,0)
 I $D(^%ZOSF("ACTJ")) X ^("ACTJ") I $P(XUVOL,U,3),($P(XUVOL,U,3)'>Y) Q 2
"RTN","XUSRB",92,0)
 Q 0
"RTN","XUSRB",93,0)
 ;
"RTN","XUSRB",94,0)
LOGOUT ;Finish logout of user.
"RTN","XUSRB",95,0)
 N XU1
"RTN","XUSRB",96,0)
 D CLEARALL^XWBDRPC(.XU1)
"RTN","XUSRB",97,0)
 ;Remove CCOW sign-on data
"RTN","XUSRB",98,0)
 S HDL=$G(^XUTL("XQ",$J,"HDL")) I $L(HDL) D
"RTN","XUSRB",99,0)
 . K ^XTMP(HDL,"JOB",$J)
"RTN","XUSRB",100,0)
 . I $O(^XTMP(HDL,"JOB",0))="" K ^XTMP(HDL)
"RTN","XUSRB",101,0)
 ;
"RTN","XUSRB",102,0)
 D BYE^XUSCLEAN,XUTL^XUSCLEAN ;Mark the sign-on log, File cleanup.
"RTN","XUSRB",103,0)
 Q
"RTN","XUSRB",104,0)
 ;D1,D2 are place holders for now
"RTN","XUSRB",105,0)
SETUP(RET,XWBUSRNM,D1,D2) ;sets up environment for GUI signon
"RTN","XUSRB",106,0)
 K DUZ
"RTN","XUSRB",107,0)
 S XWBUSRNM=$G(XWBUSRNM)
"RTN","XUSRB",108,0)
 I $L($G(XWBTIP)) S IO("IP")=XWBTIP
"RTN","XUSRB",109,0)
 S IO("CLNM")=$$LOW^XLFSTR($G(XWBCLMAN)) D ZIO^%ZIS4
"RTN","XUSRB",110,0)
 ;Setup needed variables
"RTN","XUSRB",111,0)
 D SET1^XUS(0),SET^XWBSEC("XUS XOPT",XOPT) ;p265
"RTN","XUSRB",112,0)
 ;I '$D(IO("HOME")) S %ZIS="0H",IOP="NULL" D ^%ZIS ;Setup NULL as the home device
"RTN","XUSRB",113,0)
 D SAVE^XUS1 ;save the home device
"RTN","XUSRB",114,0)
 ;0=server name, 1=volume, 2=uci, 3=device, 4=# attempts, 5=skip signon-screen,6=Domain Name, 7=Production (0=no, 1=Yes)
"RTN","XUSRB",115,0)
 S RET(0)=$P(XUENV,U,3),RET(1)=$P(XUVOL,U),RET(2)=XUCI
"RTN","XUSRB",116,0)
 S RET(3)=$I,RET(4)=$P(XOPT,U,2),RET(5)=0
"RTN","XUSRB",117,0)
 S RET(6)=$G(^XMB("NETNAME")) ;DBIA #1131
"RTN","XUSRB",118,0)
 S RET(7)=$$PROD^XUPROD ;Tell if production.
"RTN","XUSRB",119,0)
 I $$INHIBIT() Q
"RTN","XUSRB",120,0)
 ; Code for DBA Capri Program
"RTN","XUSRB",121,0)
 I +XWBUSRNM=-31,XWBUSRNM["DVBA_" N XVAL D  I XVAL S RET(5)=1 Q
"RTN","XUSRB",122,0)
 . S XVAL=$$PUT^XUESSO1($P(XWBUSRNM,U,3,99)) Q:'XVAL  ; Sign in as Visitor
"RTN","XUSRB",123,0)
 . I $$FIND1^DIC(200.03,","_DUZ_",","X","DVBA CAPRI GUI")'>0 D
"RTN","XUSRB",124,0)
 . . ; Have to give the user a delegated option
"RTN","XUSRB",125,0)
 . . N YARR S YARR(200.19,"+1,"_DUZ_",",.01)="DVBA CAPRI GUI"
"RTN","XUSRB",126,0)
 . . D UPDATE^DIE("E","YARR")
"RTN","XUSRB",127,0)
 . . ; And now he can give himself the context option
"RTN","XUSRB",128,0)
 . . N XARR S XARR(200.03,"+1,"_DUZ_",",.01)="DVBA CAPRI GUI"
"RTN","XUSRB",129,0)
 . . D UPDATE^DIE("E","XARR") ; Give context option as a secondary menu item
"RTN","XUSRB",130,0)
 . . ; But now we have to remove the delegated option
"RTN","XUSRB",131,0)
 . . S OPT=$$FIND1^DIC(200.19,","_DUZ_",","X","DVBA CAPRI GUI")
"RTN","XUSRB",132,0)
 . . K XARR S XARR(200.19,(OPT_","_DUZ_","),.01)="@"
"RTN","XUSRB",133,0)
 . . D FILE^DIE("E","XARR")
"RTN","XUSRB",134,0)
 . . Q
"RTN","XUSRB",135,0)
 . Q
"RTN","XUSRB",136,0)
 ; End of Code for DBA Capri Program
"RTN","XUSRB",137,0)
 ;Auto sign-on check only for Broker v1.1
"RTN","XUSRB",138,0)
 I $G(XWBVER)<1.1 S XQXFLG("ZEBRA")=-1 ;Disable for v1.0
"RTN","XUSRB",139,0)
 I $L(IO("CLNM")) S DUZ=$$AUTOXWB^XUS1B() ;Only check when 1.1 CL.
"RTN","XUSRB",140,0)
 I DUZ>0 D NOW S XUMSG=$$POST(0) I XUMSG>0 S DUZ=0
"RTN","XUSRB",141,0)
 S:DUZ>0 RET(5)=1
"RTN","XUSRB",142,0)
 Q
"RTN","XUSRB",143,0)
 ;
"RTN","XUSRB",144,0)
OWNSKEY(RET,LIST,IEN) ;Does user have Key
"RTN","XUSRB",145,0)
 N I,K S I=""
"RTN","XUSRB",146,0)
 I $G(IEN)'>0 S IEN=$G(DUZ)
"RTN","XUSRB",147,0)
 I $G(IEN)'>0 S RET(0)=0 Q
"RTN","XUSRB",148,0)
 I $O(LIST(""))="" S RET(0)=$$KCHK(LIST,IEN) Q
"RTN","XUSRB",149,0)
 F  S I=$O(LIST(I)) Q:I=""  S RET(I)=$$KCHK(LIST(I),IEN)
"RTN","XUSRB",150,0)
 Q
"RTN","XUSRB",151,0)
 ;
"RTN","XUSRB",152,0)
KCHK(%,IEN) ;Key Check
"RTN","XUSRB",153,0)
 S:$G(IEN)'>0 IEN=$G(DUZ) Q $S($G(IEN)>0:$D(^XUSEC(%,IEN)),1:0)
"RTN","XUSRB",154,0)
 ;
"RTN","XUSRB",155,0)
ALLKEYS(RET,IEN,FLG) ;Return ALL or most KEYS that a user has.
"RTN","XUSRB",156,0)
 N I,J,K,L K ^TMP("XU",$J)
"RTN","XUSRB",157,0)
 S RET=$NA(^TMP("XU",$J))
"RTN","XUSRB",158,0)
 S:'$D(IEN) IEN=DUZ I IEN'>0 S @RET@(0)=-1 Q
"RTN","XUSRB",159,0)
 S I=0,L=0
"RTN","XUSRB",160,0)
 F  S I=$O(^VA(200,IEN,51,I)) Q:I'>0  S K=$G(^DIC(19.1,I,0)) D
"RTN","XUSRB",161,0)
 . Q:'$P(K,U,5)  ;Check 'Send to J2EE' field.
"RTN","XUSRB",162,0)
 . S L=L+1,@RET@(L,0)=$P(K,U,1)
"RTN","XUSRB",163,0)
 . Q
"RTN","XUSRB",164,0)
 Q
"RTN","XUSRB",165,0)
 ;
"RTN","XUSRB",166,0)
AVHELP(RET) ; send access/verify code instructions.
"RTN","XUSRB",167,0)
 S RET(0)=$$AVHLPTXT^XUS2()
"RTN","XUSRB",168,0)
 Q
"RTN","XUSRB",169,0)
 ;
"RTN","XUSRB",170,0)
OPTACCES(RET,USER,OPTIONS,MODE) ;Checks or sets user's access for passed in options
"RTN","XUSRB",171,0)
 S MODE="CHECK" ;only CHECK mode supported for now
"RTN","XUSRB",172,0)
 N I S I=""
"RTN","XUSRB",173,0)
 I $G(USER)'>0 S RET(0)=0 Q
"RTN","XUSRB",174,0)
 F  S I=$O(OPTIONS(I)) Q:I=""  S RET(I)=$$CHK^XQCS(USER,OPTIONS(I))=1
"RTN","XUSRB",175,0)
 Q
"RTN","XUSRB",176,0)
 ;
"RTN","XUSRB",177,0)
CHECKAV(AVC) ;SR. EF. to check an A/V code, Separate w/ ";", return IEN or 0
"RTN","XUSRB",178,0)
 N XUF,XUSER S XUF=0,U="^"
"RTN","XUSRB",179,0)
 Q $$CHECKAV^XUS(AVC)
"RTN","XUSRB2")
0^4^B2910863
"RTN","XUSRB2",1,0)
XUSRB2 ;SFISC/RWF - RPC Broker Kernel Utilities. ;05/04/2004  16:12
"RTN","XUSRB2",2,0)
 ;;8.0;KERNEL;**115,150,277,337**;Jul 10, 1995
"RTN","XUSRB2",3,0)
 Q
"RTN","XUSRB2",4,0)
 ;
"RTN","XUSRB2",5,0)
DIVGET(RET,IEN) ;Get Division data
"RTN","XUSRB2",6,0)
 ;IEN is userid (DUZ or username) for future use.
"RTN","XUSRB2",7,0)
 N %,XUDIV
"RTN","XUSRB2",8,0)
 S XUDIV=0,%=$$CHKDIV^XUS1(.XUDIV) ;Get users div.
"RTN","XUSRB2",9,0)
 S:(%>0)&($P(%,U,2)'>0) DUZ(2)=+% ;Set users default div.
"RTN","XUSRB2",10,0)
 S RET(0)=XUDIV ;RET(0) is number of divisions.
"RTN","XUSRB2",11,0)
 I XUDIV S %=0 D  S RET(0)=XUDIV
"RTN","XUSRB2",12,0)
 . ;RET(%) is divison array eg. ien;station name;station#
"RTN","XUSRB2",13,0)
 . F  S %=$O(XUDIV(%)) Q:(%'>0)  S RET(%)=XUDIV(%)
"RTN","XUSRB2",14,0)
 Q
"RTN","XUSRB2",15,0)
DIVSET(RET,DIV) ;Set users Division
"RTN","XUSRB2",16,0)
 S RET=0,DIV=$$FIND1^DIC(200.02,","_DUZ_",","MX",$G(DIV))
"RTN","XUSRB2",17,0)
 Q:DIV'>0
"RTN","XUSRB2",18,0)
 I '$D(^VA(200,DUZ,2,DIV,0)) Q
"RTN","XUSRB2",19,0)
 S DUZ(2)=DIV,RET=1 ;1=set, 0=not set
"RTN","XUSRB2",20,0)
 Q
"RTN","XUSRB2",21,0)
 ;
"RTN","XUSRB2",22,0)
USERINFO(RET) ;generic user information for seeding VistaUser object.
"RTN","XUSRB2",23,0)
 ;Entry point for 'XUS GET USER INFO' RPC
"RTN","XUSRB2",24,0)
 N %,XU1,XU5
"RTN","XUSRB2",25,0)
 S RET(0)=DUZ
"RTN","XUSRB2",26,0)
 F %=1:1:6 S RET(%)="unk"
"RTN","XUSRB2",27,0)
 I DUZ'>0 S XWBSEC="User not fully sign-on" Q
"RTN","XUSRB2",28,0)
 S XU1=^VA(200,DUZ,0),XU5=$G(^(5))
"RTN","XUSRB2",29,0)
 S RET(1)=$P(XU1,"^") ;.01 User name.
"RTN","XUSRB2",30,0)
 S RET(2)=$$NAME^XUSER(DUZ) ;Return standard name.
"RTN","XUSRB2",31,0)
 S RET(3)=DUZ(2)_"^"_$$NS^XUAF4(DUZ(2))
"RTN","XUSRB2",32,0)
 S %=+$P(XU1,U,9),RET(4)=$P($G(^DIC(3.1,%,0)),U) ;Title
"RTN","XUSRB2",33,0)
 S %=+XU5,RET(5)=$P($G(^DIC(49,%,0)),U) ;Service/Section
"RTN","XUSRB2",34,0)
 S RET(6)=$G(DUZ("LANG")) ;User language
"RTN","XUSRB2",35,0)
 S RET(7)=DTIME ;Users DTIME
"RTN","XUSRB2",36,0)
 S RET(8)=$$VPID^XUPS(DUZ) ;Return VPID
"RTN","XUSRB2",37,0)
 Q
"RTN","XUSRB4")
0^5^B8500621
"RTN","XUSRB4",1,0)
XUSRB4 ;ISF/RWF - Build a temporary sign-on token token ;07/12/2004  11:01
"RTN","XUSRB4",2,0)
 ;;8.0;KERNEL;**150,337**;Jul 10, 1995
"RTN","XUSRB4",3,0)
 Q
"RTN","XUSRB4",4,0)
 ;
"RTN","XUSRB4",5,0)
ASH(RET) ;rpc. Auto Signon Handle
"RTN","XUSRB4",6,0)
 N HDL
"RTN","XUSRB4",7,0)
 S HDL=$$HANDLE,RET="~1"_HDL
"RTN","XUSRB4",8,0)
 ;Now place user info in it.
"RTN","XUSRB4",9,0)
 S ^XTMP(HDL,"D",0)=$$TOK(HDL)
"RTN","XUSRB4",10,0)
 Q
"RTN","XUSRB4",11,0)
 ;
"RTN","XUSRB4",12,0)
CCOW(RET) ;rpc. CCOW Auto Signon Handle
"RTN","XUSRB4",13,0)
 N HDL,HDL2
"RTN","XUSRB4",14,0)
 S HDL=$$HANDLE,RET(0)="~2"_$$LOW^XLFSTR(HDL),RET(1)=$G(^XMB("NETNAME"))
"RTN","XUSRB4",15,0)
 ;S RET(1)=$G(^XMB("NETNAME"),"Unk")
"RTN","XUSRB4",16,0)
 ;Now place user info in it.
"RTN","XUSRB4",17,0)
 S ^XTMP(HDL,"D",0)=$$TOK(HDL)
"RTN","XUSRB4",18,0)
 S ^XUTL("XQ",$J,"HDL")=HDL ;Save handle with job
"RTN","XUSRB4",19,0)
 Q
"RTN","XUSRB4",20,0)
 ;
"RTN","XUSRB4",21,0)
HANDLE() ;Return a unique handle into ^XTMP
"RTN","XUSRB4",22,0)
 N %H,A,J,HL
"RTN","XUSRB4",23,0)
 S %H=$H,J="XWBHDL"_($J#2048)_"-"_(%H#7*86400+$P(%H,",",2))_"_",A=-1
"RTN","XUSRB4",24,0)
HAN2 S A=A+1,HL=J_A L +^XTMP(HL):0 I '$T G HAN2
"RTN","XUSRB4",25,0)
 I $D(^XTMP(HL)) L -^XTMP(HL) G HAN2
"RTN","XUSRB4",26,0)
 S ^XTMP(HL,0)=$$HTFM^XLFDT(%H+1)_"^"_$G(DT) L -^XTMP(HL)
"RTN","XUSRB4",27,0)
 S ^XTMP(HL,"STATUS")="0^New",^("CNT")=0
"RTN","XUSRB4",28,0)
 Q HL
"RTN","XUSRB4",29,0)
 ;
"RTN","XUSRB4",30,0)
TOK(H) ;Return a Token
"RTN","XUSRB4",31,0)
 N J,T,R
"RTN","XUSRB4",32,0)
 S T=$$H3^%ZTM($H)
"RTN","XUSRB4",33,0)
 S R=$J_"|"_T_"|"_$G(DUZ)_"|"_H
"RTN","XUSRB4",34,0)
 S ^XTMP(HDL,"D2")=$G(DUZ(2))
"RTN","XUSRB4",35,0)
 S ^XTMP(HDL,"D3")=$G(IO("IP"))
"RTN","XUSRB4",36,0)
 S ^XTMP(HDL,"JOB",$J)=$G(IO("IP"))
"RTN","XUSRB4",37,0)
 ;need to save token
"RTN","XUSRB4",38,0)
 Q "|"_$$ENCRYP^XUSRB1(R)_"|"
"RTN","XUSRB4",39,0)
 ;
"RTN","XUSRB4",40,0)
CHKASH(HL) ;rpc. Check a Auto Signon Handle
"RTN","XUSRB4",41,0)
 N HDL,RET S HDL=$E(HL,3,999)
"RTN","XUSRB4",42,0)
 S RET=$$CHECK(HDL)
"RTN","XUSRB4",43,0)
 K ^XTMP(HDL) ;Token only good for one try.
"RTN","XUSRB4",44,0)
 Q RET
"RTN","XUSRB4",45,0)
 ;
"RTN","XUSRB4",46,0)
CHKCCOW(HL) ;rpc. Check a CCOW Auto Signon Handle
"RTN","XUSRB4",47,0)
 N HDL,RET,T
"RTN","XUSRB4",48,0)
 S HDL=$$UP^XLFSTR($E(HL,3,999)),T=$P($G(^XTV(8989.3,1,30),5400),U)
"RTN","XUSRB4",49,0)
 S RET=$$CHECK(HDL,T)
"RTN","XUSRB4",50,0)
 I RET>0 D
"RTN","XUSRB4",51,0)
 . ;This CCOW Token good for more that one try.
"RTN","XUSRB4",52,0)
 . S ^XTMP(HDL,"JOB",$J)=$G(IO("IP"))
"RTN","XUSRB4",53,0)
 . S ^XTMP(HDL,"STATUS")=(^XTMP(HDL,"STATUS")+1)_"^Active"
"RTN","XUSRB4",54,0)
 . S ^XUTL("XQ",$J,"HDL")=HDL ;Save handle with job
"RTN","XUSRB4",55,0)
 Q RET
"RTN","XUSRB4",56,0)
 ;
"RTN","XUSRB4",57,0)
CHECK(HL,TOUT) ;Check a Token
"RTN","XUSRB4",58,0)
 N %,J,D,L,M,S
"RTN","XUSRB4",59,0)
 S S=$G(^XTMP(HL,0)) I '$L(S) Q "0^Bad Handle"
"RTN","XUSRB4",60,0)
 S S=$G(^XTMP(HL,"D",0)) I '$L(S) Q "0^Bad Handle" ;Now have real token
"RTN","XUSRB4",61,0)
 I $E(S)'="|" Q "0^Bad Token"
"RTN","XUSRB4",62,0)
 S S=$$DECRYP^XUSRB1($E(S,2,$L(S)-1)) I S="" Q "0^Bad Token"
"RTN","XUSRB4",63,0)
 S J=$P(S,"|"),T=$P(S,"|",2),D=$P(S,"|",3),M=$P(S,"|",4)
"RTN","XUSRB4",64,0)
 ;Check token time
"RTN","XUSRB4",65,0)
 S %=$$H3^%ZTM($H),TOUT=$G(TOUT,20)
"RTN","XUSRB4",66,0)
 I T+TOUT<% Q "0^Token Expired" ;Token good for TOUT or 20 seconds
"RTN","XUSRB4",67,0)
 ;Check job
"RTN","XUSRB4",68,0)
 ;Check that token has handle
"RTN","XUSRB4",69,0)
 I M'=HL Q "0^Bad Token"
"RTN","XUSRB4",70,0)
 ;Check User
"RTN","XUSRB4",71,0)
 I $G(^VA(200,D,0))="" Q "0^Bad User"
"RTN","XUSRB4",72,0)
 ;Do IP check
"RTN","XUSRB4",73,0)
 I $L($G(^XTMP(HL,"D3"))),^XTMP(HL,"D3")'=$G(IO("IP")) Q "0^Different IP"
"RTN","XUSRB4",74,0)
 I $D(^XTMP(HL,"D2")),D>0 S DUZ(2)=^XTMP(HL,"D2")
"RTN","XUSRB4",75,0)
 D USER^XUS(D)
"RTN","XUSRB4",76,0)
 Q D
"RTN","XUSRB4",77,0)
 ;
"RTN","XUSRB4",78,0)
 ;
"RTN","XUSRB4",79,0)
CCOWPC(RET) ;Return ap
"RTN","XUSRB4",80,0)
 N I,XU4
"RTN","XUSRB4",81,0)
 S RET(0)="" I '$$BROKER^XWBLIB Q
"RTN","XUSRB4",82,0)
 D GETLST^XPAR(.XU4,"SYS","XUS CCOW VAULT PARAM","Q")
"RTN","XUSRB4",83,0)
 F I=0,1 S RET(I)=$P($G(XU4(I+1)),"^",2,99)
"RTN","XUSRB4",84,0)
 Q
"VER")
8.0^22.0
"^DD",19.1,19.1,.05,0)
SEND TO J2EE^S^0:No;1:Yes;^0;5^Q
"^DD",19.1,19.1,.05,21,0)
^^5^5^3050222^
"^DD",19.1,19.1,.05,21,1,0)
This field controls if this is a Security Key that should be sent to the 
"^DD",19.1,19.1,.05,21,2,0)
J2EE application server for temporary role assignment.
"^DD",19.1,19.1,.05,21,3,0)
 
"^DD",19.1,19.1,.05,21,4,0)
If this field is set to 'Yes' then this Security Key can be sent to the 
"^DD",19.1,19.1,.05,21,5,0)
application server.
"^DD",19.1,19.1,.05,"DT")
3050222
"^DD",8989.3,8989.3,30.1,0)
CCOW TOKEN TIMEOUT^NJ5,0^^30;1^K:+X'=X!(X>28800)!(X<600)!(X?.E1"."1N.N) X
"^DD",8989.3,8989.3,30.1,3)
Type a Number between 600 and 28800, 0 Decimal Digits
"^DD",8989.3,8989.3,30.1,21,0)
^^7^7^3050222^
"^DD",8989.3,8989.3,30.1,21,1,0)
This field holds the value for how long a CCOW token is good for in
"^DD",8989.3,8989.3,30.1,21,2,0)
seconds. When the current time is greater that the CCOW token create time
"^DD",8989.3,8989.3,30.1,21,3,0)
plus the timeout seconds, the CCOW token will no longer be valid. If this
"^DD",8989.3,8989.3,30.1,21,4,0)
value is too small (short) users will be frustrated that the SSO part
"^DD",8989.3,8989.3,30.1,21,5,0)
doesn't work.  If the value is too large (Long) there is a chance that it
"^DD",8989.3,8989.3,30.1,21,6,0)
could be used to break into the system.  A default value of 5400 (1.5
"^DD",8989.3,8989.3,30.1,21,7,0)
hours) will be used.
"^DD",8989.3,8989.3,30.1,"DT")
3050222
"^DD",8989.3,8989.3,231,0)
GUI POST SIGN-ON^S^0:Don't Send/Show;1:Send/Show;^XWB;2^Q
"^DD",8989.3,8989.3,231,21,0)
^^3^3^3050419^
"^DD",8989.3,8989.3,231,21,1,0)
This field will control if the POST SIGN-ON message is sent to the GUI 
"^DD",8989.3,8989.3,231,21,2,0)
client.  If it is sent then the GUI client should display the message 
"^DD",8989.3,8989.3,231,21,3,0)
before allowing the user to continue.
"^DD",8989.3,8989.3,231,"DT")
3050419
"BLD",815,6)
^321
**END**
**END**
