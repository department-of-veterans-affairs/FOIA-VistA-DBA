Released IB*2*277 SEQ #284
Extracted from mail message
**KIDS**:IB*2.0*277^

**INSTALL NAME**
IB*2.0*277
"BLD",5595,0)
IB*2.0*277^INTEGRATED BILLING^0^3050727^y
"BLD",5595,1,0)
^^5^5^3050727^^^^
"BLD",5595,1,1,0)
This patch will address two issues;
"BLD",5595,1,2,0)
1. The Re-Generated Unbilled Amounts Report that is printing the CPT IEN 
"BLD",5595,1,3,0)
instead of the CPT Code.
"BLD",5595,1,4,0)
2. The Undefined error received while using Assign Reason Not Billable 
"BLD",5595,1,5,0)
[IBT EDIT REASON NOT BILLABLE] option.
"BLD",5595,4,0)
^9.64PA^^
"BLD",5595,"ABPKG")
n
"BLD",5595,"KRN",0)
^9.67PA^8989.52^19
"BLD",5595,"KRN",.4,0)
.4
"BLD",5595,"KRN",.4,"NM",0)
^9.68A^^
"BLD",5595,"KRN",.401,0)
.401
"BLD",5595,"KRN",.401,"NM",0)
^9.68A^^
"BLD",5595,"KRN",.402,0)
.402
"BLD",5595,"KRN",.402,"NM",0)
^9.68A^^
"BLD",5595,"KRN",.403,0)
.403
"BLD",5595,"KRN",.403,"NM",0)
^9.68A^^
"BLD",5595,"KRN",.5,0)
.5
"BLD",5595,"KRN",.5,"NM",0)
^9.68A^^
"BLD",5595,"KRN",.84,0)
.84
"BLD",5595,"KRN",3.6,0)
3.6
"BLD",5595,"KRN",3.8,0)
3.8
"BLD",5595,"KRN",9.2,0)
9.2
"BLD",5595,"KRN",9.8,0)
9.8
"BLD",5595,"KRN",9.8,"NM",0)
^9.68A^4^3
"BLD",5595,"KRN",9.8,"NM",2,0)
IBTUBO1^^0^B45653349
"BLD",5595,"KRN",9.8,"NM",3,0)
IBTRV^^0^B28763805
"BLD",5595,"KRN",9.8,"NM",4,0)
IBTUBO3^^0^B23289291
"BLD",5595,"KRN",9.8,"NM","B","IBTRV",3)

"BLD",5595,"KRN",9.8,"NM","B","IBTUBO1",2)

"BLD",5595,"KRN",9.8,"NM","B","IBTUBO3",4)

"BLD",5595,"KRN",19,0)
19
"BLD",5595,"KRN",19.1,0)
19.1
"BLD",5595,"KRN",101,0)
101
"BLD",5595,"KRN",409.61,0)
409.61
"BLD",5595,"KRN",771,0)
771
"BLD",5595,"KRN",870,0)
870
"BLD",5595,"KRN",8989.51,0)
8989.51
"BLD",5595,"KRN",8989.52,0)
8989.52
"BLD",5595,"KRN",8994,0)
8994
"BLD",5595,"KRN","B",.4,.4)

"BLD",5595,"KRN","B",.401,.401)

"BLD",5595,"KRN","B",.402,.402)

"BLD",5595,"KRN","B",.403,.403)

"BLD",5595,"KRN","B",.5,.5)

"BLD",5595,"KRN","B",.84,.84)

"BLD",5595,"KRN","B",3.6,3.6)

"BLD",5595,"KRN","B",3.8,3.8)

"BLD",5595,"KRN","B",9.2,9.2)

"BLD",5595,"KRN","B",9.8,9.8)

"BLD",5595,"KRN","B",19,19)

"BLD",5595,"KRN","B",19.1,19.1)

"BLD",5595,"KRN","B",101,101)

"BLD",5595,"KRN","B",409.61,409.61)

"BLD",5595,"KRN","B",771,771)

"BLD",5595,"KRN","B",870,870)

"BLD",5595,"KRN","B",8989.51,8989.51)

"BLD",5595,"KRN","B",8989.52,8989.52)

"BLD",5595,"KRN","B",8994,8994)

"BLD",5595,"QUES",0)
^9.62^^
"BLD",5595,"REQB",0)
^9.611^4^2
"BLD",5595,"REQB",3,0)
IB*2.0*250^2
"BLD",5595,"REQB",4,0)
IB*2.0*155^2
"BLD",5595,"REQB","B","IB*2.0*155",4)

"BLD",5595,"REQB","B","IB*2.0*250",3)

"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
277^3050727^101005
"PKG",200,22,1,"PAH",1,1,0)
^^5^5^3050727
"PKG",200,22,1,"PAH",1,1,1,0)
This patch will address two issues;
"PKG",200,22,1,"PAH",1,1,2,0)
1. The Re-Generated Unbilled Amounts Report that is printing the CPT IEN 
"PKG",200,22,1,"PAH",1,1,3,0)
instead of the CPT Code.
"PKG",200,22,1,"PAH",1,1,4,0)
2. The Undefined error received while using Assign Reason Not Billable 
"PKG",200,22,1,"PAH",1,1,5,0)
[IBT EDIT REASON NOT BILLABLE] option.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","IBTRV")
0^3^B28763805
"RTN","IBTRV",1,0)
IBTRV ;ALB/AAS - CLAIMS TRACKING REVIEWS (UR) ; 27-JUN-1993
"RTN","IBTRV",2,0)
 ;;2.0;INTEGRATED BILLING;**40,121,124,250,277**;21-MAR-94
"RTN","IBTRV",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTRV",4,0)
 ;
"RTN","IBTRV",5,0)
% ;
"RTN","IBTRV",6,0)
EN ; -- main entry point for IBT REVIEW EDITOR from menu's
"RTN","IBTRV",7,0)
 ;
"RTN","IBTRV",8,0)
 I '$D(DT) D DT^DICRW
"RTN","IBTRV",9,0)
 K XQORS,VALMEVL,IBTRV,IBTRN,DFN,IBTRC,IBTRD,IBFASTXT,VALMQUIT
"RTN","IBTRV",10,0)
 G:$D(VALMQUIT) ENQ
"RTN","IBTRV",11,0)
 D PAT^IBCNSM I $D(VALMQUIT) G ENQ
"RTN","IBTRV",12,0)
 D TRAC I $D(VALMQUIT) G ENQ
"RTN","IBTRV",13,0)
 I '$G(IBTRPRF) S IBTRPRF="12"
"RTN","IBTRV",14,0)
 D EN^VALM("IBT REVIEW EDITOR")
"RTN","IBTRV",15,0)
ENQ K XQORS,VALMEVL,IBTRV,IBTRN,DFN,IBTRC,IBTRD,IBFASTXT,VALMQUIT,IBI,IBICD,IBTRND,VA,VAERR,VA200,VAINDT,X,Y,IBTRPRF,IBCNT,VALMBCK,OFFSET,I1,I3,IBNEW,IBDENT,IBOE,Z1,T,SDCNT
"RTN","IBTRV",16,0)
 K IBAMT,IBAPR,IBADG,IBDA,IBDGCR,IBDGCRU1,IBDV,IBETYP,IBETYPD,IBI,IBICD,IBLCNT,IBSEL,IBT,IBTEXT,IBTNOD,IBTSAV,VAUTD
"RTN","IBTRV",17,0)
 K IBAPEAL,IBCDFN,IBCNT,IBDEN,IBDENIAL,IBDENIAL,IBPARNT,IBPEN,IBPENAL,IBTCOD,IBTRDD,IBTRSV,IBTYPE,VAINDT,VA
"RTN","IBTRV",18,0)
 D KVAR^VADPT
"RTN","IBTRV",19,0)
 Q
"RTN","IBTRV",20,0)
 ;
"RTN","IBTRV",21,0)
HDR ; -- header code
"RTN","IBTRV",22,0)
 D PID^VADPT
"RTN","IBTRV",23,0)
 S VALMHDR(1)=" Hospital Review Entries for: "_$$PT^IBTUTL1(DFN)_"   ROI: "_$$EXPAND^IBTRE(356,.31,$P(^IBT(356,IBTRN,0),"^",31))
"RTN","IBTRV",24,0)
 S VALMHDR(2)="                         for: "_$$EXPAND^IBTRE(356,.18,$P(IBTRND,"^",18))_" on "_$$DAT1^IBOUTL($P(IBTRND,"^",6),"2P")
"RTN","IBTRV",25,0)
 Q
"RTN","IBTRV",26,0)
 ;
"RTN","IBTRV",27,0)
INIT ; -- init variables and list array
"RTN","IBTRV",28,0)
 S U="^",VALMCNT=0,VALMBG=1
"RTN","IBTRV",29,0)
 K ^TMP("IBTRV",$J),^TMP("IBTRVDX",$J),I,X,XQORNOD,DA,DR,DIE,DNM,DQ
"RTN","IBTRV",30,0)
 S IBTRND=$G(^IBT(356,+IBTRN,0)) D BLD Q
"RTN","IBTRV",31,0)
 ;
"RTN","IBTRV",32,0)
BLD ; -- Build list of Reviews
"RTN","IBTRV",33,0)
 K ^TMP("IBTRV",$J),^TMP("IBTRVDX",$J)
"RTN","IBTRV",34,0)
 N IBI,J,IBTRV,IBTRVD,IBUR
"RTN","IBTRV",35,0)
 S IBUR=$$IBUR(IBTRN)
"RTN","IBTRV",36,0)
 I IBUR'="" S VALMSG=IBUR
"RTN","IBTRV",37,0)
 S (IBTRV,IBCNT,VALMCNT)=0,IBI=""
"RTN","IBTRV",38,0)
 F  S IBI=$O(^IBT(356.1,"ATIDT",+IBTRN,IBI)) Q:'IBI  S IBTRV=0 F  S IBTRV=$O(^IBT(356.1,"ATIDT",IBTRN,IBI,IBTRV)) Q:'IBTRV  D
"RTN","IBTRV",39,0)
 .W "."
"RTN","IBTRV",40,0)
 .S IBTRVD=$G(^IBT(356.1,+IBTRV,0))
"RTN","IBTRV",41,0)
 .Q:'+$P(IBTRVD,"^",21)  ;quit if inactive
"RTN","IBTRV",42,0)
 .N VAIN,VAINDT S VAINDT=$$VNDT(IBTRV) D INP^VADPT
"RTN","IBTRV",43,0)
 .I VAIN(4)="" S VAINDT=$P(IBTRND,"^",6) D INP^VADPT
"RTN","IBTRV",44,0)
 .S IBCNT=IBCNT+1
"RTN","IBTRV",45,0)
 .S X=""
"RTN","IBTRV",46,0)
 .S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
"RTN","IBTRV",47,0)
 .S X=$$SETFLD^VALM1($$DAT1^IBOUTL(+IBTRVD,2),X,"RV DATE")
"RTN","IBTRV",48,0)
 .;S X=$$SETFLD^VALM1($P($G(^IBE(356.11,+$P(IBTRVD,"^",22),0)),"^"),X,"TYPE")
"RTN","IBTRV",49,0)
 .S X=$$SETFLD^VALM1($P($G(^IBE(356.11,+$P(IBTRVD,"^",22),0)),"^",3),X,"TYPE")
"RTN","IBTRV",50,0)
 .S X=$$SETFLD^VALM1($E($$EXPAND^IBTRE(356.1,.21,$P(IBTRVD,"^",21)),1,8),X,"STATUS")
"RTN","IBTRV",51,0)
 .S X=$$SETFLD^VALM1($P($G(^DIC(45.7,+$P(IBTRVD,"^",7),0)),"^"),X,"SPEC")
"RTN","IBTRV",52,0)
 .S X=$$SETFLD^VALM1($J($P(IBTRVD,"^",3),2),X,"DAY")
"RTN","IBTRV",53,0)
 .S X=$$SETFLD^VALM1($$DAT1^IBOUTL($P(IBTRVD,"^",20),2),X,"NEXT")
"RTN","IBTRV",54,0)
 .S X=$$SETFLD^VALM1($P(VAIN(4),"^",2),X,"WARD")
"RTN","IBTRV",55,0)
 .S X=$$SETFLD^VALM1(VAIN(5),X,"BED")
"RTN","IBTRV",56,0)
 .S X=$$SETFLD^VALM1(IBUR,X,"RV REASON")
"RTN","IBTRV",57,0)
 .D SET(X)
"RTN","IBTRV",58,0)
 Q
"RTN","IBTRV",59,0)
 ;
"RTN","IBTRV",60,0)
SET(X) ; -- set arrays
"RTN","IBTRV",61,0)
 S VALMCNT=VALMCNT+1
"RTN","IBTRV",62,0)
 S ^TMP("IBTRV",$J,VALMCNT,0)=X
"RTN","IBTRV",63,0)
 S ^TMP("IBTRV",$J,"IDX",VALMCNT,IBCNT)=""
"RTN","IBTRV",64,0)
 S ^TMP("IBTRVDX",$J,IBCNT)=VALMCNT_"^"_IBTRV
"RTN","IBTRV",65,0)
 Q
"RTN","IBTRV",66,0)
HELP ; -- help code
"RTN","IBTRV",67,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBTRV",68,0)
 Q
"RTN","IBTRV",69,0)
 ;
"RTN","IBTRV",70,0)
EXIT ; -- exit code
"RTN","IBTRV",71,0)
 K ^TMP("IBTRV",$J),^TMP("IBTRVDX",$J)
"RTN","IBTRV",72,0)
 K IBTRV D CLEAN^VALM10 Q
"RTN","IBTRV",73,0)
 ;
"RTN","IBTRV",74,0)
TRAC ; -- Select tracking entry
"RTN","IBTRV",75,0)
 N X,Y,DIC,IBDFLT
"RTN","IBTRV",76,0)
 I '$D(DFN) S VALMQUIT="" G TRACQ
"RTN","IBTRV",77,0)
 ;S DIC("A")="Select VISIT: ",D="ADFN"_DFN
"RTN","IBTRV",78,0)
 ;S DIC("S")="I $P(^(0),U,20)"
"RTN","IBTRV",79,0)
 ;; Patch 40 custom look.
"RTN","IBTRV",80,0)
 ;S DIC("W")="S IBX=^(0) D PRINT^IBTRE20"
"RTN","IBTRV",81,0)
 ;S DIC="^IBT(356,",DIC(0)="EQS",X="???" D IX^DIC
"RTN","IBTRV",82,0)
 ;
"RTN","IBTRV",83,0)
 S IBDFLT=$$DEFV(DFN)
"RTN","IBTRV",84,0)
 D LIST(DFN,IBDFLT)
"RTN","IBTRV",85,0)
 ;
"RTN","IBTRV",86,0)
 S DIC("A")="Select VISIT: "
"RTN","IBTRV",87,0)
 S DIC("S")="I $P(^(0),U,2)=DFN,$P(^(0),U,20)"
"RTN","IBTRV",88,0)
 S DIC="^IBT(356,",DIC(0)="AEQNM"
"RTN","IBTRV",89,0)
 I IBDFLT S DIC("B")=IBDFLT
"RTN","IBTRV",90,0)
 ; -- return IBY = Y as returned by dic
"RTN","IBTRV",91,0)
 D ^DIC S IBY=Y I +Y<1 S VALMQUIT="" G TRACQ
"RTN","IBTRV",92,0)
 S IBTRN=+Y
"RTN","IBTRV",93,0)
TRACQ Q
"RTN","IBTRV",94,0)
 ;
"RTN","IBTRV",95,0)
DEFV(DFN) ; -- compute default visit for patient
"RTN","IBTRV",96,0)
 N X,IBA,IBJ,IBX,IBY S X=""
"RTN","IBTRV",97,0)
 I '+$G(DFN) G DEFVQ
"RTN","IBTRV",98,0)
 I '$O(^IBT(356,"C",DFN,0)) G DEFVQ
"RTN","IBTRV",99,0)
 ; -- default = current inpt
"RTN","IBTRV",100,0)
 S IBA=+$G(^DPT(DFN,.105)),X="" I IBA S X=$P($G(^IBT(356,+$O(^IBT(356,"AD",+IBA,0)),0)),"^") I X G DEFVQ
"RTN","IBTRV",101,0)
 ;
"RTN","IBTRV",102,0)
 S IBX=0 F  S IBX=$O(^IBT(356,"ADFN"_DFN,IBX)) Q:'IBX  S IBY=$O(^IBT(356,"ADFN"_DFN,IBX,0)) I $P($G(^IBT(356,+IBY,0)),"^",20) D
"RTN","IBTRV",103,0)
 .I $P(^IBT(356,+IBY,0),"^",32),'$P(^(0),"^",5) S X=IBX
"RTN","IBTRV",104,0)
 .S IBJ=IBX
"RTN","IBTRV",105,0)
 I X G DEFVQ
"RTN","IBTRV",106,0)
 ;
"RTN","IBTRV",107,0)
 S IBX=0 F  S IBX=$O(^IBT(356,"ADM",DFN,IBX)) Q:'IBX  S IBY=$O(^IBT(356,"ADM",DFN,IBX,0)) D
"RTN","IBTRV",108,0)
 .I $P($G(^IBT(356,+IBY,0)),"^",20) S X=$P(^(0),"^")
"RTN","IBTRV",109,0)
 G:$L(X) DEFVQ
"RTN","IBTRV",110,0)
 S X=$G(IBJ)
"RTN","IBTRV",111,0)
 ;
"RTN","IBTRV",112,0)
DEFVQ Q X
"RTN","IBTRV",113,0)
VNDT(X) ; -- compute vaindt for call to inp^vadtp
"RTN","IBTRV",114,0)
 ; -- Input  x = internal entry of review
"RTN","IBTRV",115,0)
 N Y S Y=""
"RTN","IBTRV",116,0)
 S Y=+$G(^IBT(356.1,+$G(X),0)) S:$$TRTP(+$G(X))'=40 Y=Y+.24
"RTN","IBTRV",117,0)
 Q Y
"RTN","IBTRV",118,0)
 ;
"RTN","IBTRV",119,0)
TRTP(X) ; -- Compute Review type code
"RTN","IBTRV",120,0)
 ;    Input x = internal entry of review
"RTN","IBTRV",121,0)
 ;    output  = code for review from 356.11
"RTN","IBTRV",122,0)
 Q $P($G(^IBE(356.11,+$P($G(^IBT(356.1,+$G(X),0)),"^",22),0)),"^",2)
"RTN","IBTRV",123,0)
 ;
"RTN","IBTRV",124,0)
IBUR(IBTRN) ; -- reason for review
"RTN","IBTRV",125,0)
 N IBUR,IBTRND
"RTN","IBTRV",126,0)
 S IBUR="",IBTRND=$G(^IBT(356,+$G(IBTRN),0))
"RTN","IBTRV",127,0)
 S:$P(IBTRND,"^",25) IBUR="Random Sample" S:$P(IBTRND,"^",26) IBUR=IBUR_$S(IBUR="":"",1:"/")_$$EXPAND^IBTRE(356,.26,$P(IBTRND,"^",26))
"RTN","IBTRV",128,0)
 S:$P(IBTRND,"^",27) IBUR=IBUR_$S(IBUR="":"",1:"/")_"Local Addition"
"RTN","IBTRV",129,0)
 Q IBUR
"RTN","IBTRV",130,0)
 ;
"RTN","IBTRV",131,0)
LIST(DFN,DFLT) ; list 1 screen of most recent CT entries
"RTN","IBTRV",132,0)
 Q:'$G(DFN)  N IBX,IBY,IBA,IBCNT S IBCNT=0
"RTN","IBTRV",133,0)
 ;
"RTN","IBTRV",134,0)
 W !!,"Choose from:"
"RTN","IBTRV",135,0)
 S IBY="" F  S IBY=$O(^IBT(356,"C",DFN,IBY),-1) Q:'IBY  D  Q:IBCNT>17
"RTN","IBTRV",136,0)
 . I +$P($G(^IBT(356,+IBY,0)),U,20) S IBCNT=IBCNT+1,IBA(IBY)=""
"RTN","IBTRV",137,0)
 I '$O(IBA("")) W !,"   There are no Claims Tracking entries for this patient."
"RTN","IBTRV",138,0)
 I +IBY,+$O(^IBT(356,"C",DFN,IBY),-1) W !,"   ..."
"RTN","IBTRV",139,0)
 ;
"RTN","IBTRV",140,0)
 S IBY="" F  S IBY=$O(IBA(IBY)) Q:'IBY  S IBX=$G(^IBT(356,IBY,0)) W !,?3,$P(IBX,U,1) D PRINT^IBTRE20
"RTN","IBTRV",141,0)
 ;
"RTN","IBTRV",142,0)
 I $G(DFLT)'="" S IBY=+$O(^IBT(356,"B",DFLT,0)) I +IBY S IBX=$G(^IBT(356,+IBY,0)) W !!,?3,$P(IBX,U,1) D PRINT^IBTRE20
"RTN","IBTRV",143,0)
 W !
"RTN","IBTRV",144,0)
 Q
"RTN","IBTUBO1")
0^2^B45653349
"RTN","IBTUBO1",1,0)
IBTUBO1 ;ALB/AAS - UNBILLED AMOUNTS - GENERATE UNBILLED REPORTS ;29-SEP-94
"RTN","IBTUBO1",2,0)
 ;;2.0;INTEGRATED BILLING;**19,31,32,91,123,159,247,155,277**;21-MAR-94
"RTN","IBTUBO1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTUBO1",4,0)
 ;
"RTN","IBTUBO1",5,0)
OPT(IBOE,IBQUERY) ; - Has the outpatient encounter been billed?
"RTN","IBTUBO1",6,0)
 ;   Input: IBOE=pointer to outpatient encounter in file #409.68
"RTN","IBTUBO1",7,0)
 ;               (NOTE: this value may be null)
"RTN","IBTUBO1",8,0)
 ;          IBQUERY (Passed by reference)=flag that is incremented when
"RTN","IBTUBO1",9,0)
 ;                  the Scheduling query API is invoked
"RTN","IBTUBO1",10,0)
 ;  *Pre-set variables: DFN=patient IEN, IBDT=event date, IBRT=bill rate,
"RTN","IBTUBO1",11,0)
 ;                      IBEDT=End of reporting period date.
"RTN","IBTUBO1",12,0)
 ;                      IBX=ien of CLAIMS TRACKING entry file 356
"RTN","IBTUBO1",13,0)
 ;
"RTN","IBTUBO1",14,0)
 I '$G(DFN)!('$G(IBDT))!('$G(IBRT))!'$G(IBX) G OPTQ
"RTN","IBTUBO1",15,0)
 N IBCN,IBCPT,IBCT,IBDATA,IBDAY,IBDIV,IBFL,IBNAME,IBQUIT,IBNCF,IBXX,IBYD,IBYY,IBZ,IBMRA
"RTN","IBTUBO1",16,0)
 ;
"RTN","IBTUBO1",17,0)
 ; - Check to be sure the encounter is billable.
"RTN","IBTUBO1",18,0)
 I $$INPT^IBAMTS1(DFN,IBDT\1_.2359) G OPTQ ;  Became inpatient same day.
"RTN","IBTUBO1",19,0)
 I $G(IBOE),$$ENCL^IBAMTS2(IBOE)["1" G OPTQ ; "ao^ir^sc^ec^mst^hnc^cv" encounter.
"RTN","IBTUBO1",20,0)
 S IBDAY=$E(IBDT,1,7),IBNAME=$P($G(^DPT(DFN,0)),U),IBQUIT="",IBNCF=0
"RTN","IBTUBO1",21,0)
 ;
"RTN","IBTUBO1",22,0)
 ; - If no encounter, see if add/edits or registrations are not billable.
"RTN","IBTUBO1",23,0)
 I '$G(IBOE) D NOOE G:IBQUIT OPTQ
"RTN","IBTUBO1",24,0)
 ;
"RTN","IBTUBO1",25,0)
 ; - If encounter was dated prior to Reasonable Charges (9/1/99) and
"RTN","IBTUBO1",26,0)
 ;   the claim was not authorized before end of reporting period, add
"RTN","IBTUBO1",27,0)
 ;   encounter Tort Rate to Unbilled Outpatient Amount
"RTN","IBTUBO1",28,0)
 I IBDAY<2990901 D PRERC,SETUB:'IBQUIT G OPTQ
"RTN","IBTUBO1",29,0)
 I '$G(IBOE) G OPTQ ; If still no encounter, quit.
"RTN","IBTUBO1",30,0)
 ;
"RTN","IBTUBO1",31,0)
 ; - If encounter was made after start of Reasonable Charges (9/1/99)
"RTN","IBTUBO1",32,0)
 ;   and any of the encounter's procedure codes have no corresponding
"RTN","IBTUBO1",33,0)
 ;   inst. or prof. claims that were not authorized before end of the
"RTN","IBTUBO1",34,0)
 ;   reporting period, add the charges for the procedures to the
"RTN","IBTUBO1",35,0)
 ;   Unbilled Outpatient Amount.
"RTN","IBTUBO1",36,0)
 ;
"RTN","IBTUBO1",37,0)
 ; - Gather all procedures associated with the encounter.
"RTN","IBTUBO1",38,0)
 D GETCPT^SDOE(IBOE,"IBYY") G:'$G(IBYY) OPTQ ; Check CPT qty.
"RTN","IBTUBO1",39,0)
 ;
"RTN","IBTUBO1",40,0)
 ; - Determine the encounter division.
"RTN","IBTUBO1",41,0)
 S IBDIV=+$P($$GETOE^SDOE(IBOE),U,11) S:'IBDIV IBDIV=+$$PRIM^VASITE()
"RTN","IBTUBO1",42,0)
 ;
"RTN","IBTUBO1",43,0)
 ; - Build array of all billable encounter procedures.
"RTN","IBTUBO1",44,0)
 S IBXX=0 F  S IBXX=$O(IBYY(IBXX)) Q:'IBXX  D
"RTN","IBTUBO1",45,0)
 . ;
"RTN","IBTUBO1",46,0)
 . ; - Get procedure pointer and code.
"RTN","IBTUBO1",47,0)
 . S IBZ=+IBYY(IBXX),IBCN=$P($$CPT^ICPTCOD(IBZ),"^",2)
"RTN","IBTUBO1",48,0)
 . ;
"RTN","IBTUBO1",49,0)
 . ; - Ignore LAB services for vets with Medicare Supplemental coverage.
"RTN","IBTUBO1",50,0)
 . I IBCN>79999,IBCN<90000 Q
"RTN","IBTUBO1",51,0)
 . ;
"RTN","IBTUBO1",52,0)
 . ; - Get the institutional/professional charge components.
"RTN","IBTUBO1",53,0)
 . S IBCPT(IBZ,1)=+$$BICOST^IBCRCI(IBRT,3,IBDAY,"PROCEDURE",IBZ,"",IBDIV,"",1)
"RTN","IBTUBO1",54,0)
 . S IBCPT(IBZ,2)=+$$BICOST^IBCRCI(IBRT,3,IBDAY,"PROCEDURE",IBZ,"",IBDIV,"",2)
"RTN","IBTUBO1",55,0)
 . ;
"RTN","IBTUBO1",56,0)
 . ; - Eliminate components without a charge.
"RTN","IBTUBO1",57,0)
 . I 'IBCPT(IBZ,1) K IBCPT(IBZ,1)
"RTN","IBTUBO1",58,0)
 . I 'IBCPT(IBZ,2) K IBCPT(IBZ,2)
"RTN","IBTUBO1",59,0)
 ;
"RTN","IBTUBO1",60,0)
 I '$D(IBCPT) G OPTQ ; Quit if no billable procedures remain.
"RTN","IBTUBO1",61,0)
 ;
"RTN","IBTUBO1",62,0)
 ; - Look at all of the vet's bills for the day and eliminate
"RTN","IBTUBO1",63,0)
 ;   from the array those procedures that have been billed.
"RTN","IBTUBO1",64,0)
 S IBXX=0
"RTN","IBTUBO1",65,0)
 F  S IBXX=$O(^DGCR(399,"AOPV",DFN,IBDAY,IBXX)) Q:'IBXX  D
"RTN","IBTUBO1",66,0)
 . ;
"RTN","IBTUBO1",67,0)
 . ; - Perform general checks on the claim.
"RTN","IBTUBO1",68,0)
 . S IBDATA=$$CKBIL^IBTUBOU(IBXX) Q:IBDATA=""
"RTN","IBTUBO1",69,0)
 . I $P(IBDATA,U,2)=2 S IBMRA(IBXX)=IBDATA ; MRA request
"RTN","IBTUBO1",70,0)
 . S IBNCF=IBNCF+1
"RTN","IBTUBO1",71,0)
 . ;
"RTN","IBTUBO1",72,0)
 . ; If Compile/Store & Not authorized/MRA requested before reporting period - Quit.
"RTN","IBTUBO1",73,0)
 . I $G(IBCOMP),$S('$G(IBMRA(IBXX)):$P(IBDATA,U,3),1:$P(IBDATA,U,6))>IBEDT Q
"RTN","IBTUBO1",74,0)
 . ;
"RTN","IBTUBO1",75,0)
 . ; - The episode has been billed. Check the revenue code multiple for
"RTN","IBTUBO1",76,0)
 . ;   all procedures billed on the claim.
"RTN","IBTUBO1",77,0)
 . S IBYY=0
"RTN","IBTUBO1",78,0)
 . F  S IBYY=$O(^DGCR(399,IBXX,"RC",IBYY)) Q:'IBYY  S IBYD=^(IBYY,0) D
"RTN","IBTUBO1",79,0)
 . . ;
"RTN","IBTUBO1",80,0)
 . . ; - Get the procedure code and charge type for the revenue code.
"RTN","IBTUBO1",81,0)
 . . S IBZ=$P(IBYD,U,6)
"RTN","IBTUBO1",82,0)
 . . S IBCT=$S($P(IBYD,U,12):$P(IBYD,U,12),1:$P(IBDATA,U,4))
"RTN","IBTUBO1",83,0)
 . . I 'IBZ!('IBCT) Q  ; Can't determine code/charge type for procedure.
"RTN","IBTUBO1",84,0)
 . . I $G(IBMRA(IBXX))'="" S:$D(IBCPT(IBZ)) IBCPT("MRA",IBZ,IBCT)=1 Q
"RTN","IBTUBO1",85,0)
 . . ; Delete procedure from unbilled procedures array.
"RTN","IBTUBO1",86,0)
 . . I $D(IBCPT(IBZ,IBCT)) K IBCPT(IBZ,IBCT) Q
"RTN","IBTUBO1",87,0)
 . . K IBCPT(IBZ)
"RTN","IBTUBO1",88,0)
 ;
"RTN","IBTUBO1",89,0)
 ; - Again, quit if no billable procedures remain.
"RTN","IBTUBO1",90,0)
 I '$D(IBCPT) G OPTQ
"RTN","IBTUBO1",91,0)
 ;
"RTN","IBTUBO1",92,0)
 ; - The encounter has unbilled procedure codes. Increment the counters
"RTN","IBTUBO1",93,0)
 ;   as per the extract specification.
"RTN","IBTUBO1",94,0)
 ;
"RTN","IBTUBO1",95,0)
 ; - Count the encounter (element 37N).
"RTN","IBTUBO1",96,0)
 S IBMRA=$S($D(IBCPT("MRA")):1,1:0)
"RTN","IBTUBO1",97,0)
 S:'IBMRA IBUNB("ENCNTRS")=IBUNB("ENCNTRS")+1
"RTN","IBTUBO1",98,0)
 S:$G(IBXTRACT) IB(14)=IB(14)+1
"RTN","IBTUBO1",99,0)
 ;
"RTN","IBTUBO1",100,0)
 ; - Look at all the unbilled procedures.
"RTN","IBTUBO1",101,0)
 S IBZ=0 F  S IBZ=$O(IBCPT(IBZ)) Q:'IBZ  D
"RTN","IBTUBO1",102,0)
 . ;
"RTN","IBTUBO1",103,0)
 . S IBMRA=$S($D(IBCPT("MRA",IBZ)):1,1:0)
"RTN","IBTUBO1",104,0)
 . ; - Count the procedure (element 37M).
"RTN","IBTUBO1",105,0)
 . I $G(IBXTRACT) S IB(13)=IB(13)+1
"RTN","IBTUBO1",106,0)
 . ;
"RTN","IBTUBO1",107,0)
 . ; - Count the institutional component (element 37I) and its
"RTN","IBTUBO1",108,0)
 . ;   corresponding charge amount (element 37J).
"RTN","IBTUBO1",109,0)
 . I $G(IBCPT(IBZ,1)) D
"RTN","IBTUBO1",110,0)
 . . S:'IBMRA IBUNB("CPTMS-I")=IBUNB("CPTMS-I")+1
"RTN","IBTUBO1",111,0)
 . . S:'IBMRA IBUNB("UNBILOP")=IBUNB("UNBILOP")+IBCPT(IBZ,1)
"RTN","IBTUBO1",112,0)
 . . S:IBMRA IBUNB("CPTMS-I-MRA")=IBUNB("CPTMS-I-MRA")+1
"RTN","IBTUBO1",113,0)
 . . S:IBMRA IBUNB("UNBILOP-MRA")=IBUNB("UNBILOP-MRA")+IBCPT(IBZ,1)
"RTN","IBTUBO1",114,0)
 . . I $G(IBXTRACT) S IB(9)=IB(9)+1,IB(10)=IB(10)+IBCPT(IBZ,1)
"RTN","IBTUBO1",115,0)
 . ;
"RTN","IBTUBO1",116,0)
 . ; - Count the professional component (element 37K) and its
"RTN","IBTUBO1",117,0)
 . ;   corresponding charge amount (element 37L).
"RTN","IBTUBO1",118,0)
 . I $G(IBCPT(IBZ,2)) D
"RTN","IBTUBO1",119,0)
 . . S:'IBMRA IBUNB("CPTMS-P")=IBUNB("CPTMS-P")+1
"RTN","IBTUBO1",120,0)
 . . S:'IBMRA IBUNB("UNBILOP")=IBUNB("UNBILOP")+IBCPT(IBZ,2)
"RTN","IBTUBO1",121,0)
 . . S:IBMRA IBUNB("CPTMS-P-MRA")=IBUNB("CPTMS-P-MRA")+1
"RTN","IBTUBO1",122,0)
 . . S:IBMRA IBUNB("UNBILOP-MRA")=IBUNB("UNBILOP-MRA")+IBCPT(IBZ,2)
"RTN","IBTUBO1",123,0)
 . . I $G(IBXTRACT) S IB(11)=IB(11)+1,IB(12)=IB(12)+IBCPT(IBZ,2)
"RTN","IBTUBO1",124,0)
 ;
"RTN","IBTUBO1",125,0)
 D SETUB
"RTN","IBTUBO1",126,0)
 ;
"RTN","IBTUBO1",127,0)
OPTQ Q
"RTN","IBTUBO1",128,0)
 ;
"RTN","IBTUBO1",129,0)
PRERC ; - Determine if a pre-9/1/99 visit has been billed.
"RTN","IBTUBO1",130,0)
 ;   Output: IBQUIT will be set to 1 if the visit has been billed.
"RTN","IBTUBO1",131,0)
 ;   *Pre-set variables DFN,IBDAY,IBDET,IBNAME,IBNCF,IBQUIT,IBRT,IBEDT
"RTN","IBTUBO1",132,0)
 ;    and IB/IBUNB arrays required.
"RTN","IBTUBO1",133,0)
 ; NO MRA Extract code needed for pre-RC processes
"RTN","IBTUBO1",134,0)
 I $D(^TMP($J,"IBTUB-OPT",IBNAME_"@@"_DFN,IBDAY)) S IBQUIT=1 G PRCQ
"RTN","IBTUBO1",135,0)
 ;
"RTN","IBTUBO1",136,0)
 ; - Check all outpatient claims on event date.
"RTN","IBTUBO1",137,0)
 N IBXX S IBXX=0
"RTN","IBTUBO1",138,0)
 F  S IBXX=$O(^DGCR(399,"AOPV",DFN,IBDAY,IBXX)) Q:'IBXX  D  Q:IBQUIT
"RTN","IBTUBO1",139,0)
 . ;
"RTN","IBTUBO1",140,0)
 . ; - Perform general checks on the claim.
"RTN","IBTUBO1",141,0)
 . S IBDATA=$$CKBIL^IBTUBOU(IBXX) Q:IBDATA=""  S IBNCF=IBNCF+1
"RTN","IBTUBO1",142,0)
 . ;
"RTN","IBTUBO1",143,0)
 . ; If Compile/Store & Not authorized before reporting period - Quit.
"RTN","IBTUBO1",144,0)
 . I $G(IBCOMP),$P(IBDATA,U,3)>IBEDT Q
"RTN","IBTUBO1",145,0)
 . ;
"RTN","IBTUBO1",146,0)
 . S IBQUIT=1 ; Episode has been billed-set flag.
"RTN","IBTUBO1",147,0)
 ;
"RTN","IBTUBO1",148,0)
 I IBQUIT G PRCQ ; Episode was billed.
"RTN","IBTUBO1",149,0)
 ;
"RTN","IBTUBO1",150,0)
 ; - The episode was not billed; determine the tort rate for a visit
"RTN","IBTUBO1",151,0)
 ;   and increment the number and amount of unbilled pre-9/1/99 visits.
"RTN","IBTUBO1",152,0)
 S IBXX=+$$BICOST^IBCRCI(IBRT,3,IBDAY,"OUTPATIENT VISIT DATE")
"RTN","IBTUBO1",153,0)
 S IBUNB("UNBILOP")=IBUNB("UNBILOP")+IBXX
"RTN","IBTUBO1",154,0)
 S IBUNB("ENCNTRS")=IBUNB("ENCNTRS")+1
"RTN","IBTUBO1",155,0)
 ;
"RTN","IBTUBO1",156,0)
 I $G(IBXTRACT) S IB(7)=IB(7)+1,IB(8)=IB(8)+IBXX ; For DM extract.
"RTN","IBTUBO1",157,0)
 ;
"RTN","IBTUBO1",158,0)
PRCQ Q
"RTN","IBTUBO1",159,0)
 ;
"RTN","IBTUBO1",160,0)
NOOE ; - If there is no encounter, look for add/edits or registrations.
"RTN","IBTUBO1",161,0)
 ;   Output: IBQUIT will be set to 1 if the visit is non-billable.
"RTN","IBTUBO1",162,0)
 ;   *Pre-set variable IBQUIT required.
"RTN","IBTUBO1",163,0)
 N IBDATA,IBSC,IBSDV,IBXX,IBZERR
"RTN","IBTUBO1",164,0)
 ;
"RTN","IBTUBO1",165,0)
 ; - Check if for a visit at the visit date/time.
"RTN","IBTUBO1",166,0)
 S IBXX=$$EXOE^SDOE(DFN,IBDT,IBDT,"","IBZERR")
"RTN","IBTUBO1",167,0)
 I IBXX D CKENC^IBTUBOU(IBXX,"",.IBQUIT) G NOOEQ
"RTN","IBTUBO1",168,0)
 ;
"RTN","IBTUBO1",169,0)
 ; - Find next add/edit stop code encounter after IBDT.
"RTN","IBTUBO1",170,0)
 D SCAN^IBTUBOU(DFN,IBDT,.IBQUERY)
"RTN","IBTUBO1",171,0)
 ;
"RTN","IBTUBO1",172,0)
NOOEQ Q
"RTN","IBTUBO1",173,0)
 ;
"RTN","IBTUBO1",174,0)
SETUB ; Set array elements for the detail report.
"RTN","IBTUBO1",175,0)
 ; Array element format:
"RTN","IBTUBO1",176,0)
 ; NON-MRA:
"RTN","IBTUBO1",177,0)
 ;  ^TMP($J,"IBTUB-OPT",NAME@@DFN,DATE,IBX)=bill status^claim type
"RTN","IBTUBO1",178,0)
 ;  ^TMP($J,"IBTUB-OPT",NAME@@DFN,DATE,IBX,CPT no)=inst rate^prof rate
"RTN","IBTUBO1",179,0)
 ; MRA:
"RTN","IBTUBO1",180,0)
 ;  ^TMP($J,"IBTUB-OPT_MRA",NAME@@DFN,DATE,IBX,CPT no)=1 if MRA req
"RTN","IBTUBO1",181,0)
 ;
"RTN","IBTUBO1",182,0)
 N IBCTF,IBCPTNM
"RTN","IBTUBO1",183,0)
 I $S($G(IBINMRA):1,1:'$O(IBCPT("MRA",""))) S ^TMP($J,"IBTUB-OPT",IBNAME_"@@"_DFN,IBDAY,IBX)=IBNCF
"RTN","IBTUBO1",184,0)
 I $G(IBINMRA),$O(IBCPT("MRA","")) S ^TMP($J,"IBTUB-OPT_MRA",IBNAME_"@@"_DFN,IBDAY,IBX)=1
"RTN","IBTUBO1",185,0)
 G:'IBDET SETUBQ
"RTN","IBTUBO1",186,0)
 I $D(IBCPT) S IBXX=0 F  S IBXX=$O(IBCPT(IBXX)) Q:'IBXX  D
"RTN","IBTUBO1",187,0)
 . S IBCPTNM=$$CODEC^ICPTCOD(IBXX) I IBCPTNM=-1 S IBCPTNM="UNK"
"RTN","IBTUBO1",188,0)
 . S IBCTF=$S($G(IBCPT(IBXX,1)):"I",1:"")
"RTN","IBTUBO1",189,0)
 . S IBCTF=$S($G(IBCPT(IBXX,2)):$S(IBCTF="I":"I,P",1:"P"),1:IBCTF)
"RTN","IBTUBO1",190,0)
 . I $S($G(IBINMRA):1,1:'$O(IBCPT("MRA",""))) S ^TMP($J,"IBTUB-OPT",IBNAME_"@@"_DFN,IBDAY,IBX,IBCPTNM)=+$G(IBCPT(IBXX,1))_U_+$G(IBCPT(IBXX,2))_U_IBCTF
"RTN","IBTUBO1",191,0)
 . I $G(IBINMRA) S:$G(IBCPT("MRA",IBXX)) ^TMP($J,"IBTUB-OPT_MRA",IBNAME_"@@"_DFN,IBDAY,IBX,IBCPTNM)=1
"RTN","IBTUBO1",192,0)
 ;
"RTN","IBTUBO1",193,0)
SETUBQ Q
"RTN","IBTUBO3")
0^4^B23289291
"RTN","IBTUBO3",1,0)
IBTUBO3 ;ALB/RB - UNBILLED AMOUNTS - GENERATE UNBILLED REPORTS ;03 Aug 2004  9:12 AM
"RTN","IBTUBO3",2,0)
 ;;2.0;INTEGRATED BILLING;**123,159,192,155,277**;21-MAR-94
"RTN","IBTUBO3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTUBO3",4,0)
 ;
"RTN","IBTUBO3",5,0)
REPORT ; - Prepare report if requested, send summary bulletin.
"RTN","IBTUBO3",6,0)
 N IBRUN,IBN,IBPAG,IBQ,DFN,DTE,FL,PT,X0,X1
"RTN","IBTUBO3",7,0)
 S IBRUN=$$HTE^XLFDT($H,1)
"RTN","IBTUBO3",8,0)
 D BULL^IBTUBUL G:'IBDET REPRTQ
"RTN","IBTUBO3",9,0)
 ;
"RTN","IBTUBO3",10,0)
REPRT1 S (IBPAG,IBQ,IBX)=0
"RTN","IBTUBO3",11,0)
 I '$D(^TMP($J)) S X0="" D HDR,NIM D:'IBQ PAUSE G REPRTQ
"RTN","IBTUBO3",12,0)
 F X0=1,2,3 I IBSEL[X0 D  Q:IBQ
"RTN","IBTUBO3",13,0)
 . S X1="IBTUB-"_$S(X0=2:"OPT",X0=3:"RX",1:"INPT")
"RTN","IBTUBO3",14,0)
 . D HDR Q:IBQ  I '$D(^TMP($J,X1)) D NIM Q
"RTN","IBTUBO3",15,0)
 . S PT="" F  S PT=$O(^TMP($J,X1,PT)) Q:PT=""  D  Q:IBQ
"RTN","IBTUBO3",16,0)
 . . S DFN=+$P(PT,"@@",2) Q:'DFN
"RTN","IBTUBO3",17,0)
 . . S (DTE,FL)="" F  S DTE=$O(^TMP($J,X1,PT,DTE)) Q:DTE=""  D  Q:IBQ
"RTN","IBTUBO3",18,0)
 . . . S IBX="" F  S IBX=$O(^TMP($J,X1,PT,DTE,IBX)) Q:IBX=""  D  Q:IBQ
"RTN","IBTUBO3",19,0)
 . . . . S IBN=^TMP($J,X1,PT,DTE,IBX) D LINE Q:IBQ  I X1["OPT" D CPTS Q:IBQ
"RTN","IBTUBO3",20,0)
 ;
"RTN","IBTUBO3",21,0)
 D:'IBQ PAUSE
"RTN","IBTUBO3",22,0)
 ;
"RTN","IBTUBO3",23,0)
REPRTQ Q
"RTN","IBTUBO3",24,0)
 ;
"RTN","IBTUBO3",25,0)
HDR ; - Output header.
"RTN","IBTUBO3",26,0)
 N I,X,XTP
"RTN","IBTUBO3",27,0)
 I $E(IOST,1,2)="C-",IBPAG D PAUSE G HDRQ:IBQ
"RTN","IBTUBO3",28,0)
 W:'$G(IBPAG) ! I $E(IOST,1,2)="C-"!$G(IBPAG) W @IOF,*13
"RTN","IBTUBO3",29,0)
 S IBPAG=$G(IBPAG)+1 W !,"Unbilled Amounts Report"
"RTN","IBTUBO3",30,0)
 W ?60,"Run Date: ",IBRUN,?124,"Page ",$J(IBPAG,3)
"RTN","IBTUBO3",31,0)
 S XTP=$S(X0=1:"INPATIENT",X0=2:"OUTPATIENT",X0=3:"PRESCRIPTIONS",1:"")
"RTN","IBTUBO3",32,0)
 S:X0'=3 XTP=XTP_" EPISODES" S X="ALL "_XTP_" FROM "
"RTN","IBTUBO3",33,0)
 S X=X_$$DTE(IBBDT)_" TO "_$$DTE(IBEDT\1)
"RTN","IBTUBO3",34,0)
 I $G(IBCOMP) D
"RTN","IBTUBO3",35,0)
 .S X=X_" / DATA RECOMPILED/STORED FOR "_$$DAT2^IBOUTL(IBTIMON)
"RTN","IBTUBO3",36,0)
 S X=X_" / '*' AFTER THE PATIENT NAME = USUALLY BILLED MEANS TEST COPAYMENT"
"RTN","IBTUBO3",37,0)
 I X0=1 S X=X_" / 'H' AFTER THE ADMISSION DATE = PATIENT CURRENTLY HOSPITALIZED"
"RTN","IBTUBO3",38,0)
 I X0=3 S X=X_" / '$' AFTER THE ORIGINAL FILL DATE = ORIGINAL FILL DATE HAS BEEN BILLED"
"RTN","IBTUBO3",39,0)
 S X=X_" / 'CF' COLUMN = NUMBER OF CLAIMS ON FILE FOR THE EPISODE"
"RTN","IBTUBO3",40,0)
 I X0'=3 D
"RTN","IBTUBO3",41,0)
 .S X=X_" / 'I/P' COLUMN = 'I' - INSTUTIONAL CLAIM MISSING,"
"RTN","IBTUBO3",42,0)
 .S X=X_" 'P' - PROFESSIONAL CLAIM MISSING"
"RTN","IBTUBO3",43,0)
 F I=1:1 W !,$E(X,1,132) S X=$E(X,133,999) Q:X=""
"RTN","IBTUBO3",44,0)
 ;
"RTN","IBTUBO3",45,0)
 I 'X0 W !,$TR($J(" ",IOM)," ","-"),! G HDRQ
"RTN","IBTUBO3",46,0)
 W !!?29,"Last Prim.  Claims" W:X0=3 ?52,"Fill",?123,"Original"
"RTN","IBTUBO3",47,0)
 W !,"Name",?29,"4SSN Elig.  Track.ID#"
"RTN","IBTUBO3",48,0)
 I X0=1 W ?52,"Admission CF Insurance Carrier(s)",?98,"I/P",?102,"MRA"
"RTN","IBTUBO3",49,0)
 I X0=2 W ?52,"Care Dt.  CF Insurance Carrier(s)",?98,"I/P",?102,"MRA",?106,"CPT     I. Rate   P. Rate"
"RTN","IBTUBO3",50,0)
 I X0=3 W ?52,"Date     CF Ins. Carrier(s)     MRA Drug Name        Physician",?123,"Fill Dt."
"RTN","IBTUBO3",51,0)
 W !,$TR($J(" ",IOM)," ","-"),!
"RTN","IBTUBO3",52,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D
"RTN","IBTUBO3",53,0)
 . W !!,"...Task stoped at user request" S (IBQ,ZTSTOP)=1
"RTN","IBTUBO3",54,0)
 ;
"RTN","IBTUBO3",55,0)
HDRQ Q
"RTN","IBTUBO3",56,0)
 ;
"RTN","IBTUBO3",57,0)
CPTS ; - Outpatient Only (CPTs and Rates)
"RTN","IBTUBO3",58,0)
 N CPT,IBN1
"RTN","IBTUBO3",59,0)
 I $O(^TMP($J,X1,PT,DTE,IBX,""))="" W ?98,"I",?103,$S('$G(IBINMRA):"",$G(^TMP($J,X1_"_MRA",PT,DTE,IBX)):"M",1:"") W ! Q
"RTN","IBTUBO3",60,0)
 S CPT="" F  S CPT=$O(^TMP($J,X1,PT,DTE,IBX,CPT)) Q:CPT=""  D  Q:IBQ
"RTN","IBTUBO3",61,0)
 . S IBN1=^TMP($J,X1,PT,DTE,IBX,CPT)
"RTN","IBTUBO3",62,0)
 . I $Y>(IOSL-5) D HDR Q:IBQ  S FL=0 D LINE
"RTN","IBTUBO3",63,0)
 . W ?98,$P(IBN1,U,3),?103,$S('$G(IBINMRA):"",$G(^TMP($J,X1_"_MRA",PT,DTE,IBX)):"M",1:""),?106,CPT,?113,$J(+IBN1,8,2)
"RTN","IBTUBO3",64,0)
 . W ?124,$J($P(IBN1,U,2),8,2),!
"RTN","IBTUBO3",65,0)
 Q
"RTN","IBTUBO3",66,0)
 ;
"RTN","IBTUBO3",67,0)
LINE ; - Print detail line.
"RTN","IBTUBO3",68,0)
 I $Y>(IOSL-6) D HDR G:IBQ LINQ S FL=0
"RTN","IBTUBO3",69,0)
 I 'FL D
"RTN","IBTUBO3",70,0)
 . W $E($P(PT,"@@"),1,26) I $$BIL^DGMTUB(DFN,+DTE) W " *"
"RTN","IBTUBO3",71,0)
 . W ?29,$$SSN(DFN),?34,$E($$ELIG(DFN),1,5) S FL=1
"RTN","IBTUBO3",72,0)
 ;
"RTN","IBTUBO3",73,0)
 W ?39,$J(IBX,11)
"RTN","IBTUBO3",74,0)
 ; - Inpatient and Outpatient Only
"RTN","IBTUBO3",75,0)
 I X1'["RX" D
"RTN","IBTUBO3",76,0)
 . W ?52,$$DTE(+DTE) W:X1["INPT" $S($P(IBN,U,5):"H",1:"")
"RTN","IBTUBO3",77,0)
 . W ?62,$J($P(IBN,U),2),?65,$$INS(DFN,+DTE,34)
"RTN","IBTUBO3",78,0)
 . I X1["INPT" D
"RTN","IBTUBO3",79,0)
 .. I $P(IBN,U,2)'="" W ?98,$E($P(IBN,U,2),1,3),!
"RTN","IBTUBO3",80,0)
 .. I '$G(^TMP($J,X1_"_MRA",PT,DTE,IBX))!'$G(IBINMRA) W:$P(IBN,U,2)="" ! Q
"RTN","IBTUBO3",81,0)
 .. W ?98,$E($P(^TMP($J,X1_"_MRA",PT,DTE,IBX),U,2),1,3),?103,"M",!
"RTN","IBTUBO3",82,0)
 ;
"RTN","IBTUBO3",83,0)
 ; - Pharmacy Only
"RTN","IBTUBO3",84,0)
 I X1["RX" D  G LINQ
"RTN","IBTUBO3",85,0)
 . W ?52,$$DTE(+DTE),?61,$J($P(IBN,U),2),?64,$$INS(DFN,+DTE,19),?85,$S('$G(IBINMRA):"",$G(^TMP($J,X1_"_MRA",PT,DTE,IBX)):"M",1:"")
"RTN","IBTUBO3",86,0)
 . W ?88,$E($P(IBN,U,6),1,15),?105,$E($P(IBN,U,2),1,14)
"RTN","IBTUBO3",87,0)
 . W ?123,$$DTE($P(IBN,U,3)) W:$P(IBN,"^",5) "$" W !
"RTN","IBTUBO3",88,0)
 ;
"RTN","IBTUBO3",89,0)
LINQ Q
"RTN","IBTUBO3",90,0)
 ;
"RTN","IBTUBO3",91,0)
SSN(DFN) ; - Return last 4 of patient's SSN.
"RTN","IBTUBO3",92,0)
 N SSN,VADM
"RTN","IBTUBO3",93,0)
 D DEM^VADPT S SSN=$P(VADM(2),"^"),SSN=$E(SSN,6,9) D KVA^VADPT
"RTN","IBTUBO3",94,0)
 Q SSN
"RTN","IBTUBO3",95,0)
 ;
"RTN","IBTUBO3",96,0)
ELIG(DFN) ; - Return patient's primary eligibility (1st 10 characters).
"RTN","IBTUBO3",97,0)
 N ELIG,VAEL
"RTN","IBTUBO3",98,0)
 D ELIG^VADPT S ELIG=$E($P(VAEL(1),"^",2),1,10) D KVAR^VADPT
"RTN","IBTUBO3",99,0)
 Q ELIG
"RTN","IBTUBO3",100,0)
 ;
"RTN","IBTUBO3",101,0)
DTE(D) ; - Format date (MM/DD/YY or MM/YY).
"RTN","IBTUBO3",102,0)
 Q $S('$G(D):"",1:$E(D,4,5)_"/"_$S($E(D,6,7)'="00":$E(D,6,7)_"/",1:"")_$E(D,2,3))
"RTN","IBTUBO3",103,0)
 ;
"RTN","IBTUBO3",104,0)
INS(P,D,C) ; - Return patient's insurance carrier(s).
"RTN","IBTUBO3",105,0)
 ;   Input: P=patient IEN, D=event date, C=Size of the Ins.Carrier column
"RTN","IBTUBO3",106,0)
 ;  Output: List of Providers
"RTN","IBTUBO3",107,0)
 ;
"RTN","IBTUBO3",108,0)
 I '$G(P)!('$G(D)) Q ""
"RTN","IBTUBO3",109,0)
 ;
"RTN","IBTUBO3",110,0)
 N INSC,INSL,INSN,LST,TMP,X
"RTN","IBTUBO3",111,0)
 ;
"RTN","IBTUBO3",112,0)
 S INSL="" D ALL^IBCNS1(P,"LST",1,D)
"RTN","IBTUBO3",113,0)
 S X=0 F  S X=$O(LST(X)) Q:'X  D
"RTN","IBTUBO3",114,0)
 . S INSC=+$G(LST(X,0)) Q:$D(TMP(INSC))!'INSC
"RTN","IBTUBO3",115,0)
 . S INSN=$P($G(^DIC(36,INSC,0)),U)
"RTN","IBTUBO3",116,0)
 . I $G(LST(0))>1 S INSN=$E(INSN,1,C\2)
"RTN","IBTUBO3",117,0)
 . S INSL=INSL_","_INSN
"RTN","IBTUBO3",118,0)
 . S TMP(INSC)=""
"RTN","IBTUBO3",119,0)
 ;
"RTN","IBTUBO3",120,0)
 S $E(INSL)=""
"RTN","IBTUBO3",121,0)
 I $L(INSL,",")>1,$L(INSL)>C D
"RTN","IBTUBO3",122,0)
 . S INSL=$E(INSL,1,C-3),$P(INSL,",",$L(INSL,","))="..."
"RTN","IBTUBO3",123,0)
 S INSL=$E(INSL,1,C)
"RTN","IBTUBO3",124,0)
 ;
"RTN","IBTUBO3",125,0)
 Q INSL
"RTN","IBTUBO3",126,0)
 ;
"RTN","IBTUBO3",127,0)
NIM ; - Print 'no info' message.
"RTN","IBTUBO3",128,0)
 W !?3,"No information available for the period specified."
"RTN","IBTUBO3",129,0)
 Q
"RTN","IBTUBO3",130,0)
 ;
"RTN","IBTUBO3",131,0)
PAUSE ; - Page break.
"RTN","IBTUBO3",132,0)
 I $E(IOST,1,2)'="C-" Q
"RTN","IBTUBO3",133,0)
 N IBI,DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","IBTUBO3",134,0)
 F IBI=$Y:1:(IOSL-3) W !
"RTN","IBTUBO3",135,0)
 S DIR(0)="E" D ^DIR S:$D(DIRUT)!($D(DUOUT)) IBQ=1
"RTN","IBTUBO3",136,0)
 Q
"VER")
8.0^22.0
"BLD",5595,6)
^SEQ #284
**END**
**END**
