Released ECX*3*104 SEQ #93
Extracted from mail message
**KIDS**:ECX*3.0*104^

**INSTALL NAME**
ECX*3.0*104
"BLD",7096,0)
ECX*3.0*104^DSS EXTRACTS^0^3070522^y
"BLD",7096,1,0)
^^1^1^3070424^^^
"BLD",7096,1,1,0)
FIX NUTR DIV/PHARM UNUSUAL VOL RPT FIX/LAB BBANK DIV FIX
"BLD",7096,4,0)
^9.64PA^^
"BLD",7096,6)
3^
"BLD",7096,6.3)
8
"BLD",7096,"KRN",0)
^9.67PA^8989.52^19
"BLD",7096,"KRN",.4,0)
.4
"BLD",7096,"KRN",.401,0)
.401
"BLD",7096,"KRN",.402,0)
.402
"BLD",7096,"KRN",.403,0)
.403
"BLD",7096,"KRN",.5,0)
.5
"BLD",7096,"KRN",.84,0)
.84
"BLD",7096,"KRN",3.6,0)
3.6
"BLD",7096,"KRN",3.8,0)
3.8
"BLD",7096,"KRN",9.2,0)
9.2
"BLD",7096,"KRN",9.8,0)
9.8
"BLD",7096,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",7096,"KRN",9.8,"NM",1,0)
ECXNUTDP^^0^B13072727
"BLD",7096,"KRN",9.8,"NM",2,0)
ECXAPHA^^0^B31302900
"BLD",7096,"KRN",9.8,"NM",3,0)
ECXAPHA2^^0^B21178232
"BLD",7096,"KRN",9.8,"NM",4,0)
ECXLBB^^0^B38630374
"BLD",7096,"KRN",9.8,"NM","B","ECXAPHA",2)

"BLD",7096,"KRN",9.8,"NM","B","ECXAPHA2",3)

"BLD",7096,"KRN",9.8,"NM","B","ECXLBB",4)

"BLD",7096,"KRN",9.8,"NM","B","ECXNUTDP",1)

"BLD",7096,"KRN",19,0)
19
"BLD",7096,"KRN",19.1,0)
19.1
"BLD",7096,"KRN",101,0)
101
"BLD",7096,"KRN",409.61,0)
409.61
"BLD",7096,"KRN",771,0)
771
"BLD",7096,"KRN",870,0)
870
"BLD",7096,"KRN",8989.51,0)
8989.51
"BLD",7096,"KRN",8989.52,0)
8989.52
"BLD",7096,"KRN",8994,0)
8994
"BLD",7096,"KRN","B",.4,.4)

"BLD",7096,"KRN","B",.401,.401)

"BLD",7096,"KRN","B",.402,.402)

"BLD",7096,"KRN","B",.403,.403)

"BLD",7096,"KRN","B",.5,.5)

"BLD",7096,"KRN","B",.84,.84)

"BLD",7096,"KRN","B",3.6,3.6)

"BLD",7096,"KRN","B",3.8,3.8)

"BLD",7096,"KRN","B",9.2,9.2)

"BLD",7096,"KRN","B",9.8,9.8)

"BLD",7096,"KRN","B",19,19)

"BLD",7096,"KRN","B",19.1,19.1)

"BLD",7096,"KRN","B",101,101)

"BLD",7096,"KRN","B",409.61,409.61)

"BLD",7096,"KRN","B",771,771)

"BLD",7096,"KRN","B",870,870)

"BLD",7096,"KRN","B",8989.51,8989.51)

"BLD",7096,"KRN","B",8989.52,8989.52)

"BLD",7096,"KRN","B",8994,8994)

"BLD",7096,"QUES",0)
^9.62^^
"BLD",7096,"REQB",0)
^9.611^3^3
"BLD",7096,"REQB",1,0)
ECX*3.0*92^2
"BLD",7096,"REQB",2,0)
ECX*3.0*84^2
"BLD",7096,"REQB",3,0)
ECX*3.0*66^2
"BLD",7096,"REQB","B","ECX*3.0*66",3)

"BLD",7096,"REQB","B","ECX*3.0*84",2)

"BLD",7096,"REQB","B","ECX*3.0*92",1)

"MBREQ")
0
"PKG",535,-1)
1^1
"PKG",535,0)
DSS EXTRACTS^ECX
"PKG",535,20,0)
^9.402P^^
"PKG",535,22,0)
^9.49I^1^1
"PKG",535,22,1,0)
3.0^2971222^3000224^66481
"PKG",535,22,1,"PAH",1,0)
104^3070522^123456804
"PKG",535,22,1,"PAH",1,1,0)
^^1^1^3070522
"PKG",535,22,1,"PAH",1,1,1,0)
FIX NUTR DIV/PHARM UNUSUAL VOL RPT FIX/LAB BBANK DIV FIX
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","ECXAPHA")
0^2^B31302900^B29109298
"RTN","ECXAPHA",1,0)
ECXAPHA ;ALB/TMD-Pharmacy Extracts Unusual Volumes Report ; 12/22/03 10:20am
"RTN","ECXAPHA",2,0)
 ;;3.0;DSS EXTRACTS;**40,49,66,104**;Dec 22, 1997;Build 8
"RTN","ECXAPHA",3,0)
 ;
"RTN","ECXAPHA",4,0)
EN ; entry point
"RTN","ECXAPHA",5,0)
 N X,Y,DATE,ECRUN,ECXOPT,ECXDESC,ECXSAVE,ECXTL,ECTHLD,ECSD
"RTN","ECXAPHA",6,0)
 N ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG
"RTN","ECXAPHA",7,0)
 S QFLG=0
"RTN","ECXAPHA",8,0)
 ; get today's date
"RTN","ECXAPHA",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXAPHA",10,0)
 D BEGIN Q:QFLG
"RTN","ECXAPHA",11,0)
 D SELECT Q:QFLG
"RTN","ECXAPHA",12,0)
 S ECXDESC=ECXTL_" Extract Unusual Volume Report"
"RTN","ECXAPHA",13,0)
 S ECXSAVE("EC*")=""
"RTN","ECXAPHA",14,0)
 W !!,"This report requires 132-column format."
"RTN","ECXAPHA",15,0)
 D EN^XUTMDEVQ("PROCESS^ECXAPHA",ECXDESC,.ECXSAVE)
"RTN","ECXAPHA",16,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXAPHA",17,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAPHA",18,0)
 D HOME^%ZIS
"RTN","ECXAPHA",19,0)
 D AUDIT^ECXKILL
"RTN","ECXAPHA",20,0)
 Q
"RTN","ECXAPHA",21,0)
 ;
"RTN","ECXAPHA",22,0)
BEGIN ; display report description
"RTN","ECXAPHA",23,0)
 W @IOF
"RTN","ECXAPHA",24,0)
 W !,"This report prints a listing of unusual volumes that would be"
"RTN","ECXAPHA",25,0)
 W !,"generated by the pharmacy extracts (PRE, IVP and UDP) as"
"RTN","ECXAPHA",26,0)
 W !,"determined by a user defined threshold value.  It shoud be run"
"RTN","ECXAPHA",27,0)
 W !,"prior to the generation of the actual extract(s) to identify and"
"RTN","ECXAPHA",28,0)
 W !,"fix as necessary any volumes determined to be erroneous."
"RTN","ECXAPHA",29,0)
 W !!,"Unusual volumes are defined as follows:"
"RTN","ECXAPHA",30,0)
 W !!,"PRE Extract:  Quantity field greater than the threshold value."
"RTN","ECXAPHA",31,0)
 W !,"IVP Extract:  Total Doses Per Day field greater than the threshold"
"RTN","ECXAPHA",32,0)
 W !,?14,"or less than the negative of the threshold value."
"RTN","ECXAPHA",33,0)
 W !,"UDP Extract:  Quantity field greater than threshold value."
"RTN","ECXAPHA",34,0)
 W !!,"Note: The threshold can be set after a report is selected."
"RTN","ECXAPHA",35,0)
 W !!,"Run times for this report will vary depending upon the size of"
"RTN","ECXAPHA",36,0)
 W !,"the extract and could take as long as 30 minutes or more to"
"RTN","ECXAPHA",37,0)
 W !,"complete.  This report has no effect on the actual extracts and"
"RTN","ECXAPHA",38,0)
 W !,"can be run as needed."
"RTN","ECXAPHA",39,0)
 W !!,"The report is sorted by Feeder Key, descending Volume, and SSN."
"RTN","ECXAPHA",40,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXAPHA",41,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXAPHA",42,0)
 Q
"RTN","ECXAPHA",43,0)
 ;
"RTN","ECXAPHA",44,0)
SELECT ; user inputs for report option, threshold volume and date range
"RTN","ECXAPHA",45,0)
 N DONE,OUT
"RTN","ECXAPHA",46,0)
 ; allow user to select report option (PRE,IVP or UDP)
"RTN","ECXAPHA",47,0)
 W "Choose the report you would like to run."
"RTN","ECXAPHA",48,0)
 S DIR(0)="S^1:PRE;2:IVP;3:UDP",DIR("A")="Selection",DIR("B")=1 D ^DIR K DIR S ECXOPT=Y I X["^" S QFLG=1 Q
"RTN","ECXAPHA",49,0)
 S ECXTL=$S(ECXOPT=1:"Prescription",ECXOPT=2:"IV Detail",ECXOPT=3:"Unit Dose Local",1:"")
"RTN","ECXAPHA",50,0)
 ; allow user to set threshold volume
"RTN","ECXAPHA",51,0)
 S ECTHLD=$S(ECXOPT=2:1000,1:500)
"RTN","ECXAPHA",52,0)
 W !!,"The default threshold volume for the ",ECXTL," extract is ",ECTHLD,"."
"RTN","ECXAPHA",53,0)
 S DIR(0)="Y",DIR("A")="Would you like to change the threshold",DIR("B")="NO" D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXAPHA",54,0)
 I Y D
"RTN","ECXAPHA",55,0)
 .W !!,$S(ECXOPT=2:"threshold > Total Doses Per Day < -threshold",1:"Quantity > threshold")
"RTN","ECXAPHA",56,0)
 .S DIR(0)="N^0:100000:0",DIR("A")="Enter the new threshold volume" D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1 Q
"RTN","ECXAPHA",57,0)
 ; get date range from user
"RTN","ECXAPHA",58,0)
 W !!,"Enter the date range for which you would like to scan the ",ECXTL,!,"Extract records."
"RTN","ECXAPHA",59,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXAPHA",60,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXAPHA",61,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXAPHA",62,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXAPHA",63,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXAPHA",64,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXAPHA",65,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXAPHA",66,0)
 .I Y<ECSD D  Q
"RTN","ECXAPHA",67,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXAPHA",68,0)
 ..W !,"Please try again.",!!
"RTN","ECXAPHA",69,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXAPHA",70,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXAPHA",71,0)
 ..W !,"Please try again.",!!
"RTN","ECXAPHA",72,0)
 .S ECED=Y
"RTN","ECXAPHA",73,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXAPHA",74,0)
 .S DONE=1
"RTN","ECXAPHA",75,0)
 Q
"RTN","ECXAPHA",76,0)
 ;
"RTN","ECXAPHA",77,0)
PROCESS ; entry point for queued report
"RTN","ECXAPHA",78,0)
 S ZTREQ="@"
"RTN","ECXAPHA",79,0)
 S ECXERR=0 D EN^ECXAPHA2 Q:ECXERR
"RTN","ECXAPHA",80,0)
 S QFLG=0 D PRINT
"RTN","ECXAPHA",81,0)
 Q
"RTN","ECXAPHA",82,0)
 ;
"RTN","ECXAPHA",83,0)
PRINT ; process temp file and print report
"RTN","ECXAPHA",84,0)
 N PG,QFLG,GTOT,LN,COUNT,FKEY,QTY,SSN,REC,EDAY
"RTN","ECXAPHA",85,0)
 U IO
"RTN","ECXAPHA",86,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAPHA",87,0)
 S (PG,QFLG,GTOT)=0,$P(LN,"-",132)=""
"RTN","ECXAPHA",88,0)
 D HEADER Q:QFLG
"RTN","ECXAPHA",89,0)
 S COUNT=0,FKEY="" F  S FKEY=$O(^TMP($J,FKEY)) Q:FKEY=""!QFLG  D
"RTN","ECXAPHA",90,0)
 .S QTY="" F  S QTY=$O(^TMP($J,FKEY,QTY)) Q:QTY=""!QFLG  D
"RTN","ECXAPHA",91,0)
 ..S EDAY="" F  S EDAY=$O(^TMP($J,FKEY,QTY,EDAY)) Q:EDAY=""!QFLG  D
"RTN","ECXAPHA",92,0)
 ...S SSN=""
"RTN","ECXAPHA",93,0)
 ...F  S SSN=$O(^TMP($J,FKEY,QTY,EDAY,SSN)) Q:SSN=""!QFLG  S REC=^(SSN)  D
"RTN","ECXAPHA",94,0)
 ....S COUNT=COUNT+1
"RTN","ECXAPHA",95,0)
 ....I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXAPHA",96,0)
 ....W !,$P(REC,U),?8,$P(REC,U,2),?20,$P(REC,U,3),?29,$E($P(REC,U,4),1,40)
"RTN","ECXAPHA",97,0)
 ....W ?71,$P(REC,U,5),?89,$$RJ^XLFSTR($P(REC,U,6),9)_" "_$E($P(REC,U,7),1,7)
"RTN","ECXAPHA",98,0)
 ....I ECXOPT=1 D
"RTN","ECXAPHA",99,0)
 .....W ?108,$$RJ^XLFSTR("$"_$FNUMBER($P(REC,U,8),",",2),12),?125,$$RJ^XLFSTR($P(REC,U,9),3)
"RTN","ECXAPHA",100,0)
 ....I ECXOPT=2 D
"RTN","ECXAPHA",101,0)
 .....W ?116,$$RJ^XLFSTR("$"_$FNUMBER($P(REC,U,8),",",6),14),?132,$P(REC,U,10)
"RTN","ECXAPHA",102,0)
 ....I ECXOPT=3 D
"RTN","ECXAPHA",103,0)
 .....W ?116,$$RJ^XLFSTR("$"_$FNUMBER($P(REC,U,8),",",2),14)
"RTN","ECXAPHA",104,0)
 Q:QFLG
"RTN","ECXAPHA",105,0)
 I COUNT=0 W !!,?8,"No unusual volumes to report for this extract"
"RTN","ECXAPHA",106,0)
CLOSE ;
"RTN","ECXAPHA",107,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAPHA",108,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPHA",109,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAPHA",110,0)
 Q
"RTN","ECXAPHA",111,0)
 ;
"RTN","ECXAPHA",112,0)
HEADER ;header and page control
"RTN","ECXAPHA",113,0)
 N SS,JJ
"RTN","ECXAPHA",114,0)
 I $E(IOST)="C" D
"RTN","ECXAPHA",115,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPHA",116,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAPHA",117,0)
 Q:QFLG
"RTN","ECXAPHA",118,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAPHA",119,0)
 W !,ECXTL_" Extract Unusual Volume Report",?124,"Page: "_PG
"RTN","ECXAPHA",120,0)
 W !,"Start Date: ",ECSTART,?97,"Report Run Date/Time:  "_ECRUN
"RTN","ECXAPHA",121,0)
 W !,"End Date:   ",ECEND,?97,"Threshold Value = ",ECTHLD
"RTN","ECXAPHA",122,0)
 W !!,"Name",?11,"SSN",?21,"Day",?29,"Generic Name",?71,"Feeder Key"
"RTN","ECXAPHA",123,0)
 I ECXOPT=1 D
"RTN","ECXAPHA",124,0)
 .W ?95,"Quantity",?109,"Total Cost",?120,"Days Supply"
"RTN","ECXAPHA",125,0)
 E  D
"RTN","ECXAPHA",126,0)
 .I ECXOPT=2 W ?93,"Total Doses",?121,"Unit Cost",?132,"Total Cost",!,?95,"Per Day"
"RTN","ECXAPHA",127,0)
 .I ECXOPT'=2 W ?96,"Quantity",?121,"Total Cost"
"RTN","ECXAPHA",128,0)
 W !,LN,!
"RTN","ECXAPHA",129,0)
 Q
"RTN","ECXAPHA",130,0)
 ;
"RTN","ECXAPHA2")
0^3^B21178232^B21081474
"RTN","ECXAPHA2",1,0)
ECXAPHA2 ;ALB/TMD-Pharmacy Extracts Unusual Volumes Report ; 2/06/07 10:36am
"RTN","ECXAPHA2",2,0)
 ;;3.0;DSS EXTRACTS;**40,49,84,104**;Dec 22, 1997;Build 8
"RTN","ECXAPHA2",3,0)
 ;
"RTN","ECXAPHA2",4,0)
EN ; entry point
"RTN","ECXAPHA2",5,0)
 N COUNT,ECUNIT,LINE,ECDFN,ECD,ECDRG,ECDAY,ECDFN,ECQTY,ECUNIT,ECCOST,ECDS
"RTN","ECXAPHA2",6,0)
 K ^TMP($J)
"RTN","ECXAPHA2",7,0)
 S (COUNT,ECDS)=0,ECUNIT=""
"RTN","ECXAPHA2",8,0)
 S ECD=ECSD1,ECED=ECED+.3
"RTN","ECXAPHA2",9,0)
 S LINE=$S(ECXOPT=1:"PRE",ECXOPT=2:"IVP",ECXOPT=3:"UDP",1:"EXIT")
"RTN","ECXAPHA2",10,0)
 D @LINE
"RTN","ECXAPHA2",11,0)
 Q
"RTN","ECXAPHA2",12,0)
 ;
"RTN","ECXAPHA2",13,0)
PRE ; entry point for PRE data
"RTN","ECXAPHA2",14,0)
 ; order through fills, refills and partial refills
"RTN","ECXAPHA2",15,0)
 N ECRFL,ECRX,ECREF,ECDATA,ECDATA1,ECPRC
"RTN","ECXAPHA2",16,0)
 S ECREF=1
"RTN","ECXAPHA2",17,0)
 F  S ECD=$O(^PSRX("AL",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S ECRX=$O(^PSRX("AL",ECD,ECRX)),ECRFL="" Q:'ECRX  Q:ECXERR  F  S ECRFL=$O(^PSRX("AL",ECD,ECRX,ECRFL)) Q:ECRFL=""  Q:ECXERR  D PRE2
"RTN","ECXAPHA2",18,0)
 S ECD=ECSD1,ECREF="P"
"RTN","ECXAPHA2",19,0)
 F  S ECD=$O(^PSRX("AM",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S ECRX=$O(^PSRX("AM",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AM",ECD,ECRX,ECRFL)) Q:ECRFL=""  Q:ECXERR  D PRE2
"RTN","ECXAPHA2",20,0)
 Q
"RTN","ECXAPHA2",21,0)
 ;
"RTN","ECXAPHA2",22,0)
PRE2 ; get Prescription data
"RTN","ECXAPHA2",23,0)
 S ECDATA=$G(^PSRX(ECRX,0))
"RTN","ECXAPHA2",24,0)
 I ECRFL D
"RTN","ECXAPHA2",25,0)
 .S ECDATA1=$G(^PSRX(ECRX,ECREF,ECRFL,0))
"RTN","ECXAPHA2",26,0)
 .S ECQTY=+$P(ECDATA1,U,4)
"RTN","ECXAPHA2",27,0)
 .S ECDS=+$P(ECDATA1,U,10)
"RTN","ECXAPHA2",28,0)
 .S ECPRC=+$P(ECDATA1,U,11)
"RTN","ECXAPHA2",29,0)
 I 'ECRFL D
"RTN","ECXAPHA2",30,0)
 .S ECQTY=+$P(ECDATA,U,7)
"RTN","ECXAPHA2",31,0)
 .S ECDS=+$P(ECDATA,U,8)
"RTN","ECXAPHA2",32,0)
 .S ECPRC=+$P(ECDATA,U,17)
"RTN","ECXAPHA2",33,0)
 ;check to see if quantity>threshold
"RTN","ECXAPHA2",34,0)
 I ECQTY>ECTHLD D
"RTN","ECXAPHA2",35,0)
 .S ECDAY=ECD
"RTN","ECXAPHA2",36,0)
 .S ECDFN=$P(ECDATA,U,2)
"RTN","ECXAPHA2",37,0)
 .S ECDRG=+$P(ECDATA,U,6)
"RTN","ECXAPHA2",38,0)
 .S ECCOST=ECQTY*ECPRC
"RTN","ECXAPHA2",39,0)
 .D FILE Q:ECXERR
"RTN","ECXAPHA2",40,0)
 Q
"RTN","ECXAPHA2",41,0)
 ;
"RTN","ECXAPHA2",42,0)
IVP ; entry point for IVP Data
"RTN","ECXAPHA2",43,0)
 N DFN,ON,DA,SA,ECCOUNT
"RTN","ECXAPHA2",44,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^("S") D  Q:ECXERR
"RTN","ECXAPHA2",45,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  Q:ECXERR  I $D(^ECX(728.113,DA,0)) S EC=^(0) Q:ECXERR  D
"RTN","ECXAPHA2",46,0)
 ..S ECDRG=$P(EC,U,4)
"RTN","ECXAPHA2",47,0)
 ..S SA=$S($P(EC,U,8)]"":"A",$P(EC,U,9):"S",1:"")
"RTN","ECXAPHA2",48,0)
 ..; set up new record for first DA for this drug
"RTN","ECXAPHA2",49,0)
 ..I '$D(^TMP($J,SA,ECDRG)) D
"RTN","ECXAPHA2",50,0)
 ...S ECQTY=+$S(SA="A":+$P(EC,U,7),SA="S":+$P(EC,U,9),1:0)
"RTN","ECXAPHA2",51,0)
 ...S ECUNIT=$S(SA="A":$P(EC,U,8),SA="S":"ML",1:"")
"RTN","ECXAPHA2",52,0)
 ...S ECCOST=$P(EC,U,12),ECDFN=DFN
"RTN","ECXAPHA2",53,0)
 ...S ^TMP($J,SA,ECDRG)=ECUNIT_U_ECD_U_ECDFN_U_ECCOST_U_ECQTY
"RTN","ECXAPHA2",54,0)
 ...S ^(ECDRG,1)=0
"RTN","ECXAPHA2",55,0)
 ..; add to qty (0,1, or -1) to total
"RTN","ECXAPHA2",56,0)
 ..S ^TMP($J,SA,ECDRG,1)=^TMP($J,SA,ECDRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXAPHA2",57,0)
 .; looped thru all DAs for this order - now check for unusual volumes
"RTN","ECXAPHA2",58,0)
 .F SA="S","A" S ECDRG="" F  S ECDRG=$O(^TMP($J,SA,ECDRG)) Q:ECDRG=""  Q:ECXERR  D
"RTN","ECXAPHA2",59,0)
 ..S ECQTY=$P(^TMP($J,SA,ECDRG),U,5),ECCOUNT=^(ECDRG,1)
"RTN","ECXAPHA2",60,0)
 ..S ECQTY=ECQTY*ECCOUNT
"RTN","ECXAPHA2",61,0)
 ..; check to see if quantity is outside of threshold range
"RTN","ECXAPHA2",62,0)
 ..I (ECQTY>ECTHLD)!(ECQTY<-ECTHLD) D
"RTN","ECXAPHA2",63,0)
 ...S ECUNIT=$P(^TMP($J,SA,ECDRG),U)
"RTN","ECXAPHA2",64,0)
 ...S ECDAY=$P(^(ECDRG),U,2)
"RTN","ECXAPHA2",65,0)
 ...S ECDFN=$P(^(ECDRG),U,3)
"RTN","ECXAPHA2",66,0)
 ...S ECCOST=$P(^(ECDRG),U,4)*ECCOUNT
"RTN","ECXAPHA2",67,0)
 ...D FILE Q:ECXERR
"RTN","ECXAPHA2",68,0)
 K ^TMP($J,"A"),^("S")
"RTN","ECXAPHA2",69,0)
 Q
"RTN","ECXAPHA2",70,0)
 ;
"RTN","ECXAPHA2",71,0)
UDP ; entry point for UDP data
"RTN","ECXAPHA2",72,0)
 N ECXJ,ECDATA
"RTN","ECXAPHA2",73,0)
 F  S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:ECXERR  D
"RTN","ECXAPHA2",74,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:ECXERR  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXAPHA2",75,0)
 ..S DATA=^ECX(728.904,ECXJ,0),ECQTY=$P(DATA,U,5)
"RTN","ECXAPHA2",76,0)
 ..;check to see if quantity>threshold
"RTN","ECXAPHA2",77,0)
 ..I ECQTY>ECTHLD D
"RTN","ECXAPHA2",78,0)
 ...S ECDFN=$P(DATA,U,2),ECDRG=$P(DATA,U,4),ECCOST=$P(DATA,U,8),ECDAY=ECD
"RTN","ECXAPHA2",79,0)
 ...D FILE Q:ECXERR
"RTN","ECXAPHA2",80,0)
 Q
"RTN","ECXAPHA2",81,0)
 ;
"RTN","ECXAPHA2",82,0)
FILE ; put records in temp file to print later
"RTN","ECXAPHA2",83,0)
 N OK,ECXPAT,ECNAME,ECSSN,ECGNAME,ECNDC,ECPROD,ECFKEY,ECXPHA
"RTN","ECXAPHA2",84,0)
 ; get demographics
"RTN","ECXAPHA2",85,0)
 S OK=$$PAT^ECXUTL3(ECDFN,$P(ECD,"."),"1;",.ECXPAT)
"RTN","ECXAPHA2",86,0)
 I 'OK Q
"RTN","ECXAPHA2",87,0)
 S ECNAME=ECXPAT("NAME")
"RTN","ECXAPHA2",88,0)
 S ECSSN=ECXPAT("SSN")
"RTN","ECXAPHA2",89,0)
 S ECDAY=$E(ECDAY,4,5)_"/"_$E(ECDAY,6,7)
"RTN","ECXAPHA2",90,0)
 ; get drug file data
"RTN","ECXAPHA2",91,0)
 S ECXPHA="",ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXAPHA2",92,0)
 S ECGNAME=$P(ECXPHA,U)
"RTN","ECXAPHA2",93,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXAPHA2",94,0)
 S ECNDC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0)
"RTN","ECXAPHA2",95,0)
 S ECNDC=$TR(ECNDC,"*",0)
"RTN","ECXAPHA2",96,0)
 S ECPROD=$P(ECXPHA,U,6)
"RTN","ECXAPHA2",97,0)
 S ECPROD=$$RJ^XLFSTR(ECPROD,5,0)
"RTN","ECXAPHA2",98,0)
 S ECFKEY=ECPROD_ECNDC
"RTN","ECXAPHA2",99,0)
 I ECXOPT'=2 S ECUNIT=$P(ECXPHA,U,8)
"RTN","ECXAPHA2",100,0)
 ; file 
"RTN","ECXAPHA2",101,0)
 S ^TMP($J,ECFKEY,-ECQTY,ECDAY,ECSSN)=ECNAME_U_ECSSN_U_ECDAY_U_ECGNAME_U_ECFKEY_U_ECQTY_U_ECUNIT_U_"$"_$FNUMBER(ECCOST,",",2)_U_ECDS
"RTN","ECXAPHA2",102,0)
 S COUNT=COUNT+1
"RTN","ECXAPHA2",103,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZSTOP,ECXERR)=1
"RTN","ECXAPHA2",104,0)
 Q
"RTN","ECXAPHA2",105,0)
 ;
"RTN","ECXAPHA2",106,0)
EXIT S ECXERR=1 Q
"RTN","ECXLBB")
0^4^B38630374^B31084346
"RTN","ECXLBB",1,0)
ECXLBB ;DALOI/KML - DSS BLOOD BANK EXTRACT ; 2/22/07 11:42am
"RTN","ECXLBB",2,0)
 ;;3.0;DSS EXTRACTS;**78,84,90,92,104**;Dec 22, 1997;Build 8
"RTN","ECXLBB",3,0)
 ;Per VHA Directive 97-033 this routine should not be modified.  Medical Device # BK970021
"RTN","ECXLBB",4,0)
 ; access to the LAB DATA file (#63) is supported by 
"RTN","ECXLBB",5,0)
 ; controlled subscription to IA 525  (global root ^LR)  
"RTN","ECXLBB",6,0)
 ; access to the BLOOD PRODUCT (#66) is supported by IA 4510
"RTN","ECXLBB",7,0)
BEG ;entry point from option
"RTN","ECXLBB",8,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLBB",9,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLBB",10,0)
 Q
"RTN","ECXLBB",11,0)
 ;
"RTN","ECXLBB",12,0)
START ; Entry point from tasked job
"RTN","ECXLBB",13,0)
 ; begin package specific extract
"RTN","ECXLBB",14,0)
 N ECTRSP,ECADMT,ECTODT,ECENCTR,ECPAT,ECLRDFN,ECXPHY,ECXPHYPC
"RTN","ECXLBB",15,0)
 N ECD,ECXDFN,ECARRY,EC66,ECERR,ECTRFDT,ECTRFTM,ECX,ECINOUT,ECXINST
"RTN","ECXLBB",16,0)
 ;variables ECFILE,EC23,ECXYM,ECINST,ECSD,ECSD1,ECED passed in 
"RTN","ECXLBB",17,0)
 ; by taskmanager 
"RTN","ECXLBB",18,0)
 ; ECED defined in ^ECXTRAC - it represents the end date of the extract
"RTN","ECXLBB",19,0)
 ; sort process.  TRANSFUSION DATE should be within start and end dates
"RTN","ECXLBB",20,0)
 ; ECED and ECSD were assigned with input provided by the user interface
"RTN","ECXLBB",21,0)
 ; and ECSD1 = ECSD-.1
"RTN","ECXLBB",22,0)
 ; Read through the TRANSFUSION RECORD sub-file (63.017) of 
"RTN","ECXLBB",23,0)
 ; the LAB DATA file (#63)
"RTN","ECXLBB",24,0)
 ;the global nodes containing transfusion record entries are constructed
"RTN","ECXLBB",25,0)
 ; by calculating the TRANSFUSION DATE/TIME (.01)
"RTN","ECXLBB",26,0)
 ; into its reverse date/time representation and then DINUM'd when 
"RTN","ECXLBB",27,0)
 ;filing the record entry 
"RTN","ECXLBB",28,0)
 ; ECD equals the reverse date/time of ECED+.3 and will need to be
"RTN","ECXLBB",29,0)
 ; reset for each DFN.
"RTN","ECXLBB",30,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1 Q  ;quit if tasked and user sends stop request  (QFLG assigned in ECXTRAC)
"RTN","ECXLBB",31,0)
AUDRPT ; entry point for pre-extract audit report
"RTN","ECXLBB",32,0)
 S ECTODT=9999999-ECSD1,ECLRDFN=0
"RTN","ECXLBB",33,0)
 F  S ECLRDFN=$O(^LR(ECLRDFN)) Q:'ECLRDFN  S ECXDFN=$$GETDFN(ECLRDFN),ECERR=$$PAT(ECXDFN) S ECD=9999999-(ECED+.3) F  S ECD=$O(^LR(ECLRDFN,1.6,ECD)) Q:ECERR  Q:'ECD!(ECD>ECTODT)  S EC0=^LR(ECLRDFN,1.6,ECD,0) D
"RTN","ECXLBB",34,0)
 .; ECARRY(1)=TRANSFUSION DATE AND TIME, 
"RTN","ECXLBB",35,0)
 .; ECARRY(3)=COMPONENT, ECARRY(4)=COMPONENT ABBREVIATION
"RTN","ECXLBB",36,0)
 .; ECARRY(5)=UNITS POOLED, ECARRY(6)=TRANSFUSION REACTION, 
"RTN","ECXLBB",37,0)
 .; ECARRY(7)=VOLUME TRANSFUSED, ECARRY(8)=TRANSFUSION REACTION TYPE
"RTN","ECXLBB",38,0)
 .; ECARRY(9)=REQUESTING PROVIDER, ECARRY(10)=REQUEST. PROV. PERSON CLASS
"RTN","ECXLBB",39,0)
 .; ECARRY(11)=UNIT MODIFIED, ECARRY(12)=UNIT MODIFICATION
"RTN","ECXLBB",40,0)
 .; ECARRY(13)=PRODUCTION DIVISION CODE
"RTN","ECXLBB",41,0)
 . S ECARRY(1)=$P(EC0,"^"),EC66=$G(^LAB(66,$P(EC0,"^",2),0))
"RTN","ECXLBB",42,0)
 . S ECARRY(3)=$E($P(EC66,"^"),1,15),ECARRY(4)=$P(EC66,"^",2)
"RTN","ECXLBB",43,0)
 . S ECARRY(5)=$S(+$P(EC0,"^",7)=0:1,1:+$P(EC0,"^",7))
"RTN","ECXLBB",44,0)
 . S ECARRY(6)=$S($P(EC0,"^",8)=1:"Y",1:"N"),ECARRY(7)=$P(EC0,"^",10)
"RTN","ECXLBB",45,0)
 . S ECARRY(8)=$E($P($G(^LAB(65.4,+$P(EC0,"^",11),0)),"^"),1,10)
"RTN","ECXLBB",46,0)
 . S (ECARRY(9),ECARRY(10),ECARRY(13))="" D GETRPRV
"RTN","ECXLBB",47,0)
 . S ECARRY(12)=$$UNITMOD(),ECARRY(11)=$S(ECARRY(12)'="":"Y",1:"N")
"RTN","ECXLBB",48,0)
 . S (ECXPHY,ECXPHYPC)=""
"RTN","ECXLBB",49,0)
 . D GETDATA
"RTN","ECXLBB",50,0)
 . K ECARRY
"RTN","ECXLBB",51,0)
 Q
"RTN","ECXLBB",52,0)
 ;
"RTN","ECXLBB",53,0)
UNITMOD() ; Get modification criteria from fields #.06 and #3 from file #66
"RTN","ECXLBB",54,0)
 N MODARY,MO,EC66A,MODSTR,STR3
"RTN","ECXLBB",55,0)
 S MODARY("DIVIDED")="D",MODARY("POOLED")="P",MODARY("WASHED")="W"
"RTN","ECXLBB",56,0)
 S MODARY("FROZEN")="F",MODARY("LEUKOCYTE POOR")="L"
"RTN","ECXLBB",57,0)
 S MODARY("REJUVENATED")="R",MODARY("DEGLYCEROLIZED")="G"
"RTN","ECXLBB",58,0)
 S MODARY("IRRADIATED")="I",MODARY("SEPARATED")="S"
"RTN","ECXLBB",59,0)
 ;if modification criteria is null determine value from description
"RTN","ECXLBB",60,0)
 S MODSTR=$S($P(EC66,U,6)'="":$P(EC66,U,6),1:$$CHKMOD($P(EC66,"^")))
"RTN","ECXLBB",61,0)
 ;get modification criteria for entries at field #3 in file #66
"RTN","ECXLBB",62,0)
 S MOD=0 F  S MOD=$O(^LAB(66,$P(EC0,"^",2),3,MOD)) Q:'MOD  D
"RTN","ECXLBB",63,0)
 .S EC66A=$G(^LAB(66,MOD,0)) I EC66A="" Q
"RTN","ECXLBB",64,0)
 .S STR3=$S($P(EC66A,U,6)'="":$P(EC66A,U,6),1:$$CHKMOD($P(EC66A,"^")))
"RTN","ECXLBB",65,0)
 .I STR3'="",MODSTR'[STR3 S MODSTR=MODSTR_STR3
"RTN","ECXLBB",66,0)
 Q MODSTR
"RTN","ECXLBB",67,0)
 ;
"RTN","ECXLBB",68,0)
CHKMOD(MD) ;check if modifier is contained in string
"RTN","ECXLBB",69,0)
 N RES,MODX
"RTN","ECXLBB",70,0)
 I MD="" Q ""
"RTN","ECXLBB",71,0)
 S (RES,MODX)="" F  S MODX=$O(MODARY(MODX)) Q:MODX=""  D  I RES'="" Q
"RTN","ECXLBB",72,0)
 .I MD[MODX S RES=MODARY(MODX)
"RTN","ECXLBB",73,0)
 Q RES
"RTN","ECXLBB",74,0)
GETRPRV ; get requesting provider, requesting provider person class and 
"RTN","ECXLBB",75,0)
 ; production division code
"RTN","ECXLBB",76,0)
 ; input: ECD      =INVERTED DATE SUBSCRIPT
"RTN","ECXLBB",77,0)
 ;        ECARRY(1)=TRANSFUSION DATE AND TIME
"RTN","ECXLBB",78,0)
 ; note: Accessioned data in file #68 is stored up to 90 days.
"RTN","ECXLBB",79,0)
 N ECXBNOD,ACC,ACCDT,ACCNODE,PERCLS
"RTN","ECXLBB",80,0)
 I ECARRY(1)="" Q  ;there is no transfusion date
"RTN","ECXLBB",81,0)
 ;get BLOOD BANK record, field #1, in file #63 located on "BB" node
"RTN","ECXLBB",82,0)
 ;since there is a slight time lapse, $O will find the BB record
"RTN","ECXLBB",83,0)
 S ECXBNOD=$O(^LR(ECLRDFN,"BB",ECD)) I ECXBNOD="" Q
"RTN","ECXLBB",84,0)
 S ECXBNOD=^LR(ECLRDFN,"BB",ECXBNOD,0) I ECXBNOD="" Q
"RTN","ECXLBB",85,0)
 ;Compose accession number,originating from field #.06 subfile #63.01
"RTN","ECXLBB",86,0)
 ; ex. ACC=BB 0528 27
"RTN","ECXLBB",87,0)
 S ACC=$P(ECXBNOD,U,6),ACC=$TR($P(ACC," ",2,99)," ")
"RTN","ECXLBB",88,0)
 S ACCDT=$E(ECARRY(1),1,3)_$E(ACC,1,4),NUM=$E(ACC,5,99)
"RTN","ECXLBB",89,0)
 ;Get field #2 from file #68, field #1 from subfile #68.01 which is
"RTN","ECXLBB",90,0)
 ;subfile #68.02. Look at 29=blood bank ien, from 0th node, get fields
"RTN","ECXLBB",91,0)
 ;#6.5 PROVIDER and #26 DIV
"RTN","ECXLBB",92,0)
 I (ACCDT)=""!(NUM="") Q
"RTN","ECXLBB",93,0)
 ; identify bb accession area the patient was in to get the right DIV
"RTN","ECXLBB",94,0)
 S AREA=$$AREA
"RTN","ECXLBB",95,0)
 S ACCNODE=$G(^LRO(68,+AREA,1,ACCDT,1,NUM,0))
"RTN","ECXLBB",96,0)
 S ECARRY(9)=$P(ACCNODE,U,8) I ECARRY(9)'="" D
"RTN","ECXLBB",97,0)
 . S PERCLS=$$GET^XUA4A72(ECARRY(9),ACCDT)
"RTN","ECXLBB",98,0)
 . I +PERCLS>0 S ECARRY(10)=$P(PERCLS,U,7)
"RTN","ECXLBB",99,0)
 . S ECARRY(9)=2_ECARRY(9)
"RTN","ECXLBB",100,0)
 S DIV=$P($G(^LRO(68,+AREA,1,ACCDT,1,NUM,.4)),U)
"RTN","ECXLBB",101,0)
 I DIV'="" S ECARRY(13)=$$RADDIV^ECXDEPT(DIV)
"RTN","ECXLBB",102,0)
 Q
"RTN","ECXLBB",103,0)
 ;
"RTN","ECXLBB",104,0)
AREA() ; resolve accession area's ien to use and validate
"RTN","ECXLBB",105,0)
 ;          Accession number
"RTN","ECXLBB",106,0)
 ;          Patient LRDFN
"RTN","ECXLBB",107,0)
 ; note: if there is only one accession area use '29'
"RTN","ECXLBB",108,0)
 N A,CNT,BBLIST,DFN,ACC,AREA,DATE,TDATE,ACCNODE
"RTN","ECXLBB",109,0)
 S (CNT,FLAG,A)=0,DFN=""
"RTN","ECXLBB",110,0)
 ; set the date from the "bb" node in file (#63)
"RTN","ECXLBB",111,0)
 S DATE=$P(ECXBNOD,U)
"RTN","ECXLBB",112,0)
 ; setup array for bb accession areas if more than one
"RTN","ECXLBB",113,0)
 F  S A=$O(^LRO(68,A)) Q:'A  I $P($G(^LRO(68,A,0)),"^",2)="BB" D
"RTN","ECXLBB",114,0)
 . S BBLIST(A)=""
"RTN","ECXLBB",115,0)
 . S CNT=CNT+1
"RTN","ECXLBB",116,0)
 I CNT'>1 Q 29
"RTN","ECXLBB",117,0)
 S AREA=0 F  S AREA=$O(BBLIST(AREA)) Q:'AREA  D  Q:FLAG
"RTN","ECXLBB",118,0)
 . ; get additional accession information for validation
"RTN","ECXLBB",119,0)
 . S ACCNODE=$G(^LRO(68,AREA,1,$P(DATE,"."),1,NUM,0))
"RTN","ECXLBB",120,0)
 . S ACC=$G(^LRO(68,AREA,1,$P(DATE,"."),1,NUM,.2))
"RTN","ECXLBB",121,0)
 . S DFN=$P($G(ACCNODE),U)
"RTN","ECXLBB",122,0)
 . S TDATE=$P($G(^LRO(68,AREA,1,$P(DATE,"."),1,NUM,3)),U)
"RTN","ECXLBB",123,0)
 . I (DFN=ECLRDFN)&(ACC=$P(ECXBNOD,U,6))&(DATE=TDATE) S FLAG=1
"RTN","ECXLBB",124,0)
 Q AREA
"RTN","ECXLBB",125,0)
 ;
"RTN","ECXLBB",126,0)
GETDATA ; gather rest of extract data that will be recorded in an 
"RTN","ECXLBB",127,0)
 ; entry in file 727.829
"RTN","ECXLBB",128,0)
 S ECTRFDT=$$ECXDOB^ECXUTL(ECARRY(1)),ECTRFTM=$$ECXTIME^ECXUTL(ECARRY(1))
"RTN","ECXLBB",129,0)
 S ECX=$$INP^ECXUTL2(ECXDFN,ECARRY(1)),ECINOUT=$P(ECX,U),ECTRSP=$P(ECX,U,3),ECADMT=$P(ECX,U,4) ; [FLD #5]
"RTN","ECXLBB",130,0)
 ;
"RTN","ECXLBB",131,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLBB",132,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECINOUT,ECTRSP)
"RTN","ECXLBB",133,0)
 ;- If no encounter number don't file record
"RTN","ECXLBB",134,0)
 S ECENCTR=$$ENCNUM^ECXUTL4(ECINOUT,ECPAT("SSN"),ECADMT,ECARRY(1),ECTRSP,ECXOBS,ECHEAD,,) ; [FLD #6]
"RTN","ECXLBB",135,0)
 Q:ECENCTR=""
"RTN","ECXLBB",136,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXLBB",137,0)
 S ECXERI=ECPAT("ERI")
"RTN","ECXLBB",138,0)
 ;
"RTN","ECXLBB",139,0)
 S ECXSTR=$G(EC23)_"^"_ECINST_"^"_ECXDFN_"^"_ECPAT("SSN")_"^"_ECPAT("NAME")_"^"_ECINOUT_"^"_ECENCTR_"^"_ECTRFDT_"^"_ECTRFTM_"^"_ECARRY(3)_"^"_ECARRY(4)_"^"_ECARRY(5)_"^"_ECARRY(7)_"^"_ECARRY(6)_"^"_ECARRY(8)_"^BB"_ECARRY(13)_"^^"
"RTN","ECXLBB",140,0)
 I $G(ECXLOGIC)>2005 S ECXSTR=ECXSTR_U_ECXPHY_U_ECXPHYPC
"RTN","ECXLBB",141,0)
 I $G(ECXLOGIC)>2006 D
"RTN","ECXLBB",142,0)
 .S ECXSTR=ECXSTR_U_ECXERI_U_ECARRY(11)_U_ECARRY(12)_U_ECARRY(9)_U_ECARRY(10)_U_ECARRY(13)
"RTN","ECXLBB",143,0)
 I '$D(ECXRPT) D FILE(ECXSTR) Q
"RTN","ECXLBB",144,0)
 S ^TMP("ECXLBB",$J,ECXDFN,ECD)=ECXSTR  ;temporary global array
"RTN","ECXLBB",145,0)
 ;   used in ECXPLBB (pre-extract audit report)
"RTN","ECXLBB",146,0)
 Q
"RTN","ECXLBB",147,0)
 ;
"RTN","ECXLBB",148,0)
GETDFN(ECXLRDFN) ;
"RTN","ECXLBB",149,0)
 ; INPUT - LRDFN
"RTN","ECXLBB",150,0)
 ; OUTPUT - DFN
"RTN","ECXLBB",151,0)
 ; Obtains DFN (Patient ID) from LRDFN (Lab Patient ID).
"RTN","ECXLBB",152,0)
 ; If no valid DFN exists, 0 is returned.
"RTN","ECXLBB",153,0)
 S ECXLRDFN=+$G(ECXLRDFN)
"RTN","ECXLBB",154,0)
 I $P($G(^LR(ECXLRDFN,0)),"^",2)'=2 Q 0
"RTN","ECXLBB",155,0)
 Q +$P(^LR(ECXLRDFN,0),"^",3)
"RTN","ECXLBB",156,0)
 ; 
"RTN","ECXLBB",157,0)
PAT(ECXDFN) ;get/set patient data
"RTN","ECXLBB",158,0)
 ; INPUT - ECXDFN = patient ien (DFN)
"RTN","ECXLBB",159,0)
 ; OUTPUT - ECPAT array:
"RTN","ECXLBB",160,0)
 ;          ECPAT("SSN")
"RTN","ECXLBB",161,0)
 ;          ECPAT("NAME")
"RTN","ECXLBB",162,0)
 ; returns 0 or 1 in ECXERR - 0=successful
"RTN","ECXLBB",163,0)
 ;                            1=error condition
"RTN","ECXLBB",164,0)
 N X,OK,ECXERR
"RTN","ECXLBB",165,0)
 ;get data
"RTN","ECXLBB",166,0)
 S ECXERR=0
"RTN","ECXLBB",167,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,"","1;3",.ECPAT)
"RTN","ECXLBB",168,0)
 I 'OK S ECXERR=1
"RTN","ECXLBB",169,0)
 Q ECXERR
"RTN","ECXLBB",170,0)
 ;
"RTN","ECXLBB",171,0)
FILE(ECODE) ;
"RTN","ECXLBB",172,0)
 ; Input - ECODE = extract record
"RTN","ECXLBB",173,0)
 ;
"RTN","ECXLBB",174,0)
 ; record the extract record at a global node in file 727.829
"RTN","ECXLBB",175,0)
 ; sequence #^year/month of extract^extract #^facility^patient dfn^SSN^
"RTN","ECXLBB",176,0)
 ; name^i/o pt indicator^encounter #^date of transfusion^time of 
"RTN","ECXLBB",177,0)
 ; transfusion^component^component abbrev^# of units^volume in mm^
"RTN","ECXLBB",178,0)
 ; reaction^reaction type^feeder location^DSS product dept^DSS IP #
"RTN","ECXLBB",179,0)
 ; ordering physician^ordering physician pc^emergency response indicator
"RTN","ECXLBB",180,0)
 ; (FEMA)^unit modified^unit modification^requesting provider^request. 
"RTN","ECXLBB",181,0)
 ; provider person class
"RTN","ECXLBB",182,0)
 ;note:  DSS product dept and DSS IP # are dependent on the release of
"RTN","ECXLBB",183,0)
 ; ECX*3*61
"RTN","ECXLBB",184,0)
 N DA,DIK,EC7
"RTN","ECXLBB",185,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLBB",186,0)
 S ECODE=EC7_"^"_ECODE
"RTN","ECXLBB",187,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,ECRN=ECRN+1
"RTN","ECXLBB",188,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLBB",189,0)
 Q
"RTN","ECXLBB",190,0)
 ;
"RTN","ECXLBB",191,0)
 ;
"RTN","ECXLBB",192,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXLBB",193,0)
 S ECHEAD="LBB"
"RTN","ECXLBB",194,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLBB",195,0)
 Q
"RTN","ECXLBB",196,0)
 ;
"RTN","ECXLBB",197,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXLBB",198,0)
 ; should be queued with a 1D frequency
"RTN","ECXLBB",199,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXLBB",200,0)
 ;
"RTN","ECXLBB",201,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLBB",202,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXLBB",203,0)
 Q
"RTN","ECXLBB",204,0)
 ;
"RTN","ECXLBB",205,0)
 ;ECXLBB
"RTN","ECXNUTDP")
0^1^B13072727^B12489432
"RTN","ECXNUTDP",1,0)
ECXNUTDP ;ALB/JRC - Nut Division Worksheet Print ; 11/2/06 8:41am
"RTN","ECXNUTDP",2,0)
 ;;3.0;DSS EXTRACTS;**92,104**;Dec 22, 1997;Build 8
"RTN","ECXNUTDP",3,0)
 ;
"RTN","ECXNUTDP",4,0)
EN ;entry point from option
"RTN","ECXNUTDP",5,0)
 ;Queue Report
"RTN","ECXNUTDP",6,0)
 N ZTDESC,ZTIO,ZTSAVE
"RTN","ECXNUTDP",7,0)
 S ZTIO=""
"RTN","ECXNUTDP",8,0)
 S ZTDESC="Nutrition Division Worksheet for DSS"
"RTN","ECXNUTDP",9,0)
 D EN^XUTMDEVQ("EN1^ECXNUTDP",ZTDESC,.ZTSAVE)
"RTN","ECXNUTDP",10,0)
 Q
"RTN","ECXNUTDP",11,0)
EN1 ;Tasked entry point
"RTN","ECXNUTDP",12,0)
 ;Declare variables
"RTN","ECXNUTDP",13,0)
 N STOP,PAGENUM,LN,LTYPE
"RTN","ECXNUTDP",14,0)
 S (STOP,PAGENUM,LTYPE)=0,LN=""
"RTN","ECXNUTDP",15,0)
 K ^TMP($J)
"RTN","ECXNUTDP",16,0)
 F LTYPE="119.71","119.72" D  I STOP D EXIT Q
"RTN","ECXNUTDP",17,0)
 .D HEADER I STOP D EXIT Q
"RTN","ECXNUTDP",18,0)
 .D GETDATA
"RTN","ECXNUTDP",19,0)
 .I '$D(^TMP($J,"ECX",LTYPE)) D  Q
"RTN","ECXNUTDP",20,0)
 ..W !
"RTN","ECXNUTDP",21,0)
 ..W !,"***********************************************"
"RTN","ECXNUTDP",22,0)
 ..W !,"*  NOTHING TO REPORT FOR "_$S(LTYPE=119.71:"PRODUCTION LOCATIONS",LTYPE=119.72:"DELIVERY LOCATIONS  ",1:"")_" *"
"RTN","ECXNUTDP",23,0)
 ..W !,"***********************************************"
"RTN","ECXNUTDP",24,0)
 ..D WAIT
"RTN","ECXNUTDP",25,0)
 .D DETAIL I STOP D EXIT Q
"RTN","ECXNUTDP",26,0)
 .D FOOTER I STOP D EXIT Q
"RTN","ECXNUTDP",27,0)
 .D WAIT Q:STOP
"RTN","ECXNUTDP",28,0)
 .K ^TMP($J)
"RTN","ECXNUTDP",29,0)
EXIT K ^TMP("ECXDSS",$J)
"RTN","ECXNUTDP",30,0)
 Q
"RTN","ECXNUTDP",31,0)
GETDATA ;Get data
"RTN","ECXNUTDP",32,0)
 ;Init variables
"RTN","ECXNUTDP",33,0)
 N DIV,IEN,PLIEN,IENS,LOCATION,CNT,PDIV,FILE
"RTN","ECXNUTDP",34,0)
 S (DIV,LOCATION,PDIV)="",(IEN,PLIEN,IENS,CNT)=0
"RTN","ECXNUTDP",35,0)
 S DIV="" F  S DIV=$O(^ECX(728.46,"B",DIV)) Q:DIV=""  D
"RTN","ECXNUTDP",36,0)
 . ;Q:LTYPE'=$E(DIV,6,11)
"RTN","ECXNUTDP",37,0)
 . Q:LTYPE'=$E($P(DIV,"(",2),1,6)
"RTN","ECXNUTDP",38,0)
 . S IEN=$O(^ECX(728.46,"B",DIV,0)) Q:'IEN  D
"RTN","ECXNUTDP",39,0)
 .. ;S PLIEN=$P(DIV,";",1),FILE=$E(DIV,6,11),CNT=$G(CNT)+1
"RTN","ECXNUTDP",40,0)
 .. S PLIEN=$P(DIV,";",1),FILE=$E($P(DIV,"(",2),1,6),CNT=$G(CNT)+1
"RTN","ECXNUTDP",41,0)
 .. I FILE'=LTYPE Q
"RTN","ECXNUTDP",42,0)
 .. S IENS=""_PLIEN_","_""
"RTN","ECXNUTDP",43,0)
 .. S LOCATION=$$GET1^DIQ(FILE,""_IENS_","_"",.01,"E")
"RTN","ECXNUTDP",44,0)
 .. S PDIV=$$GET1^DIQ(728.46,IEN,1,"I")
"RTN","ECXNUTDP",45,0)
 .. S PDIV=$$RADDIV^ECXDEPT(PDIV)
"RTN","ECXNUTDP",46,0)
 .. S ^TMP($J,"ECX",FILE)="1"
"RTN","ECXNUTDP",47,0)
 .. S ^TMP($J,"ECX",FILE,PLIEN)=PLIEN_U_LOCATION_U_PDIV
"RTN","ECXNUTDP",48,0)
 Q
"RTN","ECXNUTDP",49,0)
HEADER ;print header
"RTN","ECXNUTDP",50,0)
 N TYPE
"RTN","ECXNUTDP",51,0)
 S PAGENUM=$G(PAGENUM)+1
"RTN","ECXNUTDP",52,0)
 S $P(LN,"=",9)="",TYPE=$S(LTYPE=119.71:"PRODUCTION",LTYPE=119.72:"DELIVERY",1:"")
"RTN","ECXNUTDP",53,0)
 W @IOF
"RTN","ECXNUTDP",54,0)
 W ?1,"RUN DATE: ",$$FMTE^XLFDT(DT,"5H"),?70,"PAGE ",PAGENUM
"RTN","ECXNUTDP",55,0)
 W !,?23,"NUTRITION DIVISION WORKSHEET"
"RTN","ECXNUTDP",56,0)
 W !!,?27,TYPE_" LOCATIONS"
"RTN","ECXNUTDP",57,0)
 W:TYPE="DELIVERY" !!,?2,TYPE
"RTN","ECXNUTDP",58,0)
 W:TYPE="PRODUCTION" !!,?1,TYPE
"RTN","ECXNUTDP",59,0)
 W ?26,TYPE,?50,"ASSIGNED"
"RTN","ECXNUTDP",60,0)
 W !,?1,"LOCATION #",?26,"LOCATIONS",?50,"DIVISION"
"RTN","ECXNUTDP",61,0)
 W !,?1,LN_"===",?26,LN,LN,?47,LN,LN
"RTN","ECXNUTDP",62,0)
 Q
"RTN","ECXNUTDP",63,0)
 ;
"RTN","ECXNUTDP",64,0)
DETAIL ;Print detailed line
"RTN","ECXNUTDP",65,0)
 ;Input  :  ^TMP("ECXDSS",$J) full global reference
"RTN","ECXNUTDP",66,0)
 ;                    PLIEN    - File 119.71 or 119.72 IEN
"RTN","ECXNUTDP",67,0)
 ;                    LOCATION - File 119.71 or 119.72 NAME
"RTN","ECXNUTDP",68,0)
 ;                    DIVISION - Assigned production division
"RTN","ECXNUTDP",69,0)
 ;Output  : None
"RTN","ECXNUTDP",70,0)
 N FILE,NODE,PIEN
"RTN","ECXNUTDP",71,0)
 S FILE=0 F  S FILE=$O(^TMP($J,"ECX",FILE)) Q:'FILE!STOP  D
"RTN","ECXNUTDP",72,0)
 .S PIEN=0 F  S PIEN=$O(^TMP($J,"ECX",FILE,PIEN)) Q:'PIEN!STOP  D
"RTN","ECXNUTDP",73,0)
 ..S NODE=^TMP($J,"ECX",FILE,PIEN)
"RTN","ECXNUTDP",74,0)
 ..W !?3,$$RJ^XLFSTR($P(NODE,U),U,6),?26,$P(NODE,U,2),?50,$$RJ^XLFSTR($P(NODE,U,3),U,6)
"RTN","ECXNUTDP",75,0)
 ..I $Y>(IOSL-5) D WAIT Q:STOP  D HEADER
"RTN","ECXNUTDP",76,0)
 ..Q
"RTN","ECXNUTDP",77,0)
 Q
"RTN","ECXNUTDP",78,0)
 ;
"RTN","ECXNUTDP",79,0)
WAIT ;End of page logic
"RTN","ECXNUTDP",80,0)
 ;Input   ; None
"RTN","ECXNUTDP",81,0)
 ;Output  ; STOP - Flag indicating if printing should continue
"RTN","ECXNUTDP",82,0)
 ;                 1 = Stop     0 = Continue
"RTN","ECXNUTDP",83,0)
 ;
"RTN","ECXNUTDP",84,0)
 S STOP=0
"RTN","ECXNUTDP",85,0)
 ;CRT - Prompt for continue
"RTN","ECXNUTDP",86,0)
 I $E(IOST,1,2)="C-"&(IOSL'>24) D  Q
"RTN","ECXNUTDP",87,0)
 .F  Q:$Y>(IOSL-3)  W !
"RTN","ECXNUTDP",88,0)
 .N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ECXNUTDP",89,0)
 .S DIR(0)="E"
"RTN","ECXNUTDP",90,0)
 .D ^DIR
"RTN","ECXNUTDP",91,0)
 .S STOP=$S(Y'=1:1,1:0)
"RTN","ECXNUTDP",92,0)
 ;Background task - check taskman
"RTN","ECXNUTDP",93,0)
 S STOP=$$S^%ZTLOAD()
"RTN","ECXNUTDP",94,0)
 I STOP D
"RTN","ECXNUTDP",95,0)
 .W !,"*********************************************"
"RTN","ECXNUTDP",96,0)
 .W !,"*  PRINTING OF REPORT STOPPED AS REQUESTED  *"
"RTN","ECXNUTDP",97,0)
 .W !,"*********************************************"
"RTN","ECXNUTDP",98,0)
 Q
"RTN","ECXNUTDP",99,0)
FOOTER ;Print footer
"RTN","ECXNUTDP",100,0)
 N DIV,IEN
"RTN","ECXNUTDP",101,0)
 S DIV="",IEN=0
"RTN","ECXNUTDP",102,0)
 W !!!,?1,"INSTITUTION",!,"FILE/DIVISIONS",!,LN,LN
"RTN","ECXNUTDP",103,0)
 F  S DIV=$O(^DG(40.8,"B",DIV)) Q:DIV=""!STOP  D
"RTN","ECXNUTDP",104,0)
 .F  S IEN=$O(^DG(40.8,"B",DIV,IEN)) Q:'IEN!STOP  D  Q:STOP
"RTN","ECXNUTDP",105,0)
 ..W !,?3,$$RJ^XLFSTR($$GETDIV^ECXDEPT(IEN),U,8)
"RTN","ECXNUTDP",106,0)
 ..I $Y>(IOSL-5) D WAIT Q:STOP  D HEADER,FHEADER
"RTN","ECXNUTDP",107,0)
 Q
"RTN","ECXNUTDP",108,0)
FHEADER ;Footer header
"RTN","ECXNUTDP",109,0)
 W !!!,?1,"INSTITUTION",!,"FILE/DIVISIONS",!,LN,LN
"RTN","ECXNUTDP",110,0)
 Q
"VER")
8.0^22.0
"BLD",7096,6)
^93
**END**
**END**
