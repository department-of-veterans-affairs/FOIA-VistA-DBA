Released PSO*7*252 SEQ #229
Extracted from mail message
**KIDS**:PSO*7.0*252^

**INSTALL NAME**
PSO*7.0*252
"BLD",6285,0)
PSO*7.0*252^OUTPATIENT PHARMACY^0^3070119^y
"BLD",6285,1,0)
^^35^35^3070119^
"BLD",6285,1,1,0)
This patch includes two new routines, PSO52EX and PSO52B.  It also
"BLD",6285,1,2,0)
enhances functionality and resolves two problems in PSO52API.
"BLD",6285,1,3,0)
 
"BLD",6285,1,4,0)
PSO52EX is a new routine containing two Application Programmer Interfaces
"BLD",6285,1,5,0)
(APIs).  The first API is named EXTRACT.  EXTRACT retrieves data from the
"BLD",6285,1,6,0)
"AL" and "AM" cross references within the PRESCRIPTION file (#52).  
"BLD",6285,1,7,0)
EXTRACT requires three parameters: SDATE, EDATE, and LIST.  SDATE is the
"BLD",6285,1,8,0)
start date to retrieve data from.  EDATE is the end date to retrieve data
"BLD",6285,1,9,0)
from.  LIST is the name that is used to subscript the returned data into a
"BLD",6285,1,10,0)
^TMP global.  Once these values are set by the user, EXTRACT will then
"BLD",6285,1,11,0)
extract all original fill information.  If a selected patient also has
"BLD",6285,1,12,0)
refill or partial fill information on record, that information will also
"BLD",6285,1,13,0)
be returned and subscripted accordingly.  The output is stored on the ^TMP
"BLD",6285,1,14,0)
global.  The second API is named REF.  REF also requires the same three
"BLD",6285,1,15,0)
parameters: SDATE, EDATE, and LIST.  It will retrieve information stored
"BLD",6285,1,16,0)
on the "AD" cross reference in the PRESCRIPTION file (#52) and return it
"BLD",6285,1,17,0)
to the ^TMP global. Refer to Forum DBIA 4902 for complete information.
"BLD",6285,1,18,0)
 
"BLD",6285,1,19,0)
PSO52B is a new routine that contains a number of subroutines that have 
"BLD",6285,1,20,0)
been moved from PSO52API.  This was done to ensure that PSO52API will 
"BLD",6285,1,21,0)
continue to be within Programming Standards and Conventions (SAC) routine 
"BLD",6285,1,22,0)
size limits.  PSO52B also enhances the RX^PSO52API component by retrieving
"BLD",6285,1,23,0)
International Classification of Diseases (ICD) information from the
"BLD",6285,1,24,0)
PRESCRIPTION file (#52).  The user now has the option to pass in "ICD" in
"BLD",6285,1,25,0)
the NODE parameter of the RX^PSO52API call and retrieve information
"BLD",6285,1,26,0)
specific to the patient(s) concerning their ICD. Refer to the Application
"BLD",6285,1,27,0)
Programmer Interface (API) manual for further instruction on the use of
"BLD",6285,1,28,0)
this API.
"BLD",6285,1,29,0)
 
"BLD",6285,1,30,0)
This patch also corrects two other issues within PSO52API.  Currently   if
"BLD",6285,1,31,0)
the user passes in only an end date, the API will error.  This patch will
"BLD",6285,1,32,0)
correct this problem.  Also, when "O" is passed in the NODE parameter to
"BLD",6285,1,33,0)
retrieve the ORDERABLE ITEM field (#39.2) from the PRESCRIPTION file
"BLD",6285,1,34,0)
(#52), the code will now return data as stated in the API manual without
"BLD",6285,1,35,0)
representing the field number in its ^TMP global subscript.
"BLD",6285,4,0)
^9.64PA^^
"BLD",6285,6)
1^
"BLD",6285,6.3)
12
"BLD",6285,"ABPKG")
n
"BLD",6285,"KRN",0)
^9.67PA^8989.52^19
"BLD",6285,"KRN",.4,0)
.4
"BLD",6285,"KRN",.401,0)
.401
"BLD",6285,"KRN",.402,0)
.402
"BLD",6285,"KRN",.403,0)
.403
"BLD",6285,"KRN",.5,0)
.5
"BLD",6285,"KRN",.84,0)
.84
"BLD",6285,"KRN",3.6,0)
3.6
"BLD",6285,"KRN",3.8,0)
3.8
"BLD",6285,"KRN",9.2,0)
9.2
"BLD",6285,"KRN",9.8,0)
9.8
"BLD",6285,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",6285,"KRN",9.8,"NM",1,0)
PSO52API^^0^B64959703
"BLD",6285,"KRN",9.8,"NM",2,0)
PSO52B^^0^B9013769
"BLD",6285,"KRN",9.8,"NM",3,0)
PSO52EX^^0^B11974692
"BLD",6285,"KRN",9.8,"NM","B","PSO52API",1)

"BLD",6285,"KRN",9.8,"NM","B","PSO52B",2)

"BLD",6285,"KRN",9.8,"NM","B","PSO52EX",3)

"BLD",6285,"KRN",19,0)
19
"BLD",6285,"KRN",19.1,0)
19.1
"BLD",6285,"KRN",101,0)
101
"BLD",6285,"KRN",409.61,0)
409.61
"BLD",6285,"KRN",771,0)
771
"BLD",6285,"KRN",870,0)
870
"BLD",6285,"KRN",8989.51,0)
8989.51
"BLD",6285,"KRN",8989.52,0)
8989.52
"BLD",6285,"KRN",8994,0)
8994
"BLD",6285,"KRN","B",.4,.4)

"BLD",6285,"KRN","B",.401,.401)

"BLD",6285,"KRN","B",.402,.402)

"BLD",6285,"KRN","B",.403,.403)

"BLD",6285,"KRN","B",.5,.5)

"BLD",6285,"KRN","B",.84,.84)

"BLD",6285,"KRN","B",3.6,3.6)

"BLD",6285,"KRN","B",3.8,3.8)

"BLD",6285,"KRN","B",9.2,9.2)

"BLD",6285,"KRN","B",9.8,9.8)

"BLD",6285,"KRN","B",19,19)

"BLD",6285,"KRN","B",19.1,19.1)

"BLD",6285,"KRN","B",101,101)

"BLD",6285,"KRN","B",409.61,409.61)

"BLD",6285,"KRN","B",771,771)

"BLD",6285,"KRN","B",870,870)

"BLD",6285,"KRN","B",8989.51,8989.51)

"BLD",6285,"KRN","B",8989.52,8989.52)

"BLD",6285,"KRN","B",8994,8994)

"BLD",6285,"QUES",0)
^9.62^^
"BLD",6285,"REQB",0)
^9.611^2^2
"BLD",6285,"REQB",1,0)
PSO*7.0*213^2
"BLD",6285,"REQB",2,0)
PSO*7.0*229^2
"BLD",6285,"REQB","B","PSO*7.0*213",1)

"BLD",6285,"REQB","B","PSO*7.0*229",2)

"MBREQ")
0
"PKG",141,-1)
1^1
"PKG",141,0)
OUTPATIENT PHARMACY^PSO^OUTPATIENT LABELS, PROFILE, INVENTORY, PRESCRIPTIONS
"PKG",141,20,0)
^9.402P^^
"PKG",141,22,0)
^9.49I^1^1
"PKG",141,22,1,0)
7.0^2971216^2980917^11712
"PKG",141,22,1,"PAH",1,0)
252^3070119^10000000060
"PKG",141,22,1,"PAH",1,1,0)
^^35^35^3070119
"PKG",141,22,1,"PAH",1,1,1,0)
This patch includes two new routines, PSO52EX and PSO52B.  It also
"PKG",141,22,1,"PAH",1,1,2,0)
enhances functionality and resolves two problems in PSO52API.
"PKG",141,22,1,"PAH",1,1,3,0)
 
"PKG",141,22,1,"PAH",1,1,4,0)
PSO52EX is a new routine containing two Application Programmer Interfaces
"PKG",141,22,1,"PAH",1,1,5,0)
(APIs).  The first API is named EXTRACT.  EXTRACT retrieves data from the
"PKG",141,22,1,"PAH",1,1,6,0)
"AL" and "AM" cross references within the PRESCRIPTION file (#52).  
"PKG",141,22,1,"PAH",1,1,7,0)
EXTRACT requires three parameters: SDATE, EDATE, and LIST.  SDATE is the
"PKG",141,22,1,"PAH",1,1,8,0)
start date to retrieve data from.  EDATE is the end date to retrieve data
"PKG",141,22,1,"PAH",1,1,9,0)
from.  LIST is the name that is used to subscript the returned data into a
"PKG",141,22,1,"PAH",1,1,10,0)
^TMP global.  Once these values are set by the user, EXTRACT will then
"PKG",141,22,1,"PAH",1,1,11,0)
extract all original fill information.  If a selected patient also has
"PKG",141,22,1,"PAH",1,1,12,0)
refill or partial fill information on record, that information will also
"PKG",141,22,1,"PAH",1,1,13,0)
be returned and subscripted accordingly.  The output is stored on the ^TMP
"PKG",141,22,1,"PAH",1,1,14,0)
global.  The second API is named REF.  REF also requires the same three
"PKG",141,22,1,"PAH",1,1,15,0)
parameters: SDATE, EDATE, and LIST.  It will retrieve information stored
"PKG",141,22,1,"PAH",1,1,16,0)
on the "AD" cross reference in the PRESCRIPTION file (#52) and return it
"PKG",141,22,1,"PAH",1,1,17,0)
to the ^TMP global. Refer to Forum DBIA 4902 for complete information.
"PKG",141,22,1,"PAH",1,1,18,0)
 
"PKG",141,22,1,"PAH",1,1,19,0)
PSO52B is a new routine that contains a number of subroutines that have 
"PKG",141,22,1,"PAH",1,1,20,0)
been moved from PSO52API.  This was done to ensure that PSO52API will 
"PKG",141,22,1,"PAH",1,1,21,0)
continue to be within Programming Standards and Conventions (SAC) routine 
"PKG",141,22,1,"PAH",1,1,22,0)
size limits.  PSO52B also enhances the RX^PSO52API component by retrieving
"PKG",141,22,1,"PAH",1,1,23,0)
International Classification of Diseases (ICD) information from the
"PKG",141,22,1,"PAH",1,1,24,0)
PRESCRIPTION file (#52).  The user now has the option to pass in "ICD" in
"PKG",141,22,1,"PAH",1,1,25,0)
the NODE parameter of the RX^PSO52API call and retrieve information
"PKG",141,22,1,"PAH",1,1,26,0)
specific to the patient(s) concerning their ICD. Refer to the Application
"PKG",141,22,1,"PAH",1,1,27,0)
Programmer Interface (API) manual for further instruction on the use of
"PKG",141,22,1,"PAH",1,1,28,0)
this API.
"PKG",141,22,1,"PAH",1,1,29,0)
 
"PKG",141,22,1,"PAH",1,1,30,0)
This patch also corrects two other issues within PSO52API.  Currently   if
"PKG",141,22,1,"PAH",1,1,31,0)
the user passes in only an end date, the API will error.  This patch will
"PKG",141,22,1,"PAH",1,1,32,0)
correct this problem.  Also, when "O" is passed in the NODE parameter to
"PKG",141,22,1,"PAH",1,1,33,0)
retrieve the ORDERABLE ITEM field (#39.2) from the PRESCRIPTION file
"PKG",141,22,1,"PAH",1,1,34,0)
(#52), the code will now return data as stated in the API manual without
"PKG",141,22,1,"PAH",1,1,35,0)
representing the field number in its ^TMP global subscript.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","PSO52API")
0^1^B64959703^B83137859
"RTN","PSO52API",1,0)
PSO52API ;BHAM ISC/SAB- Encap II API to return Rx data ;04/07/05 10:30 am
"RTN","PSO52API",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**213,229,252**;DEC 1997;Build 12
"RTN","PSO52API",3,0)
 ;
"RTN","PSO52API",4,0)
 ;Reference to ^PS(55 supported by DBIA 2228
"RTN","PSO52API",5,0)
 ;
"RTN","PSO52API",6,0)
RX(DFN,LIST,IEN,RX,NODE,SDATE,EDATE) ;
"RTN","PSO52API",7,0)
 ;DFN: IEN from the PATIENT file (#2) [REQUIRED]
"RTN","PSO52API",8,0)
 ;LIST: Subscript name used in ^TMP global [REQUIRED]
"RTN","PSO52API",9,0)
 ;IEN: Internal prescription number [optional]
"RTN","PSO52API",10,0)
 ;RX#: RX # field (#.01) of the PRESCRIPTION file (#52) [optional]
"RTN","PSO52API",11,0)
 ;NODE: Determines data elements returned [optional]
"RTN","PSO52API",12,0)
 ;SDATE: Start Date [optional]
"RTN","PSO52API",13,0)
 ;EDATE: End Date [optional]
"RTN","PSO52API",14,0)
 ;
"RTN","PSO52API",15,0)
 Q:'$G(DFN)  Q:$G(LIST)=""
"RTN","PSO52API",16,0)
 N DA,DR,PST,DIC,DIQ,ND,LK,DTE,DAT,I,X,D0 K ^TMP($J,LIST) S ^TMP($J,LIST,DFN,0)=0
"RTN","PSO52API",17,0)
 I $G(IEN) D PROCESS G CLEAN
"RTN","PSO52API",18,0)
 I $G(RX)]"",'$G(IEN) S IEN=$O(^PSRX("B",RX,0)) D  G CLEAN
"RTN","PSO52API",19,0)
 .I 'IEN S ^TMP($J,LIST,DFN,0)="-1^NO DATA FOUND" Q
"RTN","PSO52API",20,0)
 .D PROCESS
"RTN","PSO52API",21,0)
 D DATE
"RTN","PSO52API",22,0)
CLEAN F I=0:0 S I=$O(^TMP($J,LIST,DFN,I)) Q:'I  S ^TMP($J,LIST,DFN,0)=^TMP($J,LIST,DFN,0)+1
"RTN","PSO52API",23,0)
 I ^TMP($J,LIST,DFN,0)=0 S ^TMP($J,LIST,DFN,0)="-1^NO DATA FOUND"
"RTN","PSO52API",24,0)
 K DA,DR,DIC,ND,DAT,PST,LK,DIQ,DTE,I,X
"RTN","PSO52API",25,0)
 Q
"RTN","PSO52API",26,0)
PROCESS ;
"RTN","PSO52API",27,0)
 I DFN'=$P($G(^PSRX(IEN,0)),"^",2) S ^TMP($J,LIST,IEN,0)="-1^NO DATA FOUND (MISMATCHED PATIENT)" Q
"RTN","PSO52API",28,0)
 I $G(^PSRX(IEN,0))']"" S ^TMP($J,LIST,IEN,0)="-1^NO RX DATA FOUND" Q
"RTN","PSO52API",29,0)
 I $G(NODE)']"" D ZE,TW,TH,MI,ST,RF,CM,AT,LB,PT^PSO52B,SD^PSO52B,TB^PSO52B,OI^PSO52B,MLT^PSO52B S DAT="I" D IB Q
"RTN","PSO52API",30,0)
 D ST F LK=1:1:$L(NODE,",") S DAT=$P(NODE,",",LK),ND=$P(DAT,"^") D
"RTN","PSO52API",31,0)
 .I ND=0 D ZE Q
"RTN","PSO52API",32,0)
 .I ND=2 D ZE,TW Q
"RTN","PSO52API",33,0)
 .I ND=3 D TW,TH Q
"RTN","PSO52API",34,0)
 .I ND="R" D RF Q
"RTN","PSO52API",35,0)
 .I ND="I" D IB Q
"RTN","PSO52API",36,0)
 .I ND="P" D PT^PSO52B Q
"RTN","PSO52API",37,0)
 .I ND="O" D OI^PSO52B Q
"RTN","PSO52API",38,0)
 .I ND="T" D TB^PSO52B Q
"RTN","PSO52API",39,0)
 .I ND="L" D LB Q
"RTN","PSO52API",40,0)
 .I ND="S" D SD^PSO52B Q
"RTN","PSO52API",41,0)
 .I ND="M" D MI Q
"RTN","PSO52API",42,0)
 .I ND="C" D CM Q
"RTN","PSO52API",43,0)
 .I ND="A" D AT Q
"RTN","PSO52API",44,0)
 .I ND="ST" D ST Q
"RTN","PSO52API",45,0)
 .I ND="ICD" D MLT^PSO52B Q
"RTN","PSO52API",46,0)
 .S ^TMP($J,LIST,DFN,IEN,"INVALID REQUEST",ND)="Invalid Data Requested"
"RTN","PSO52API",47,0)
 Q
"RTN","PSO52API",48,0)
ZE ;zero
"RTN","PSO52API",49,0)
 K PST S DIC=52,DA=IEN,DR=".01:9;10.3;10.6;11;16;17" D DIQ
"RTN","PSO52API",50,0)
 F DR=.01,1,2,3,4,5,6,6.5,7,8,9,10.3,10.6,11,16,17 D
"RTN","PSO52API",51,0)
 .I PST(52,DA,DR,"E")'=PST(52,DA,DR,"I") S ^TMP($J,LIST,DFN,IEN,DR)=PST(52,DA,DR,"I")_"^"_PST(52,DA,DR,"E") Q
"RTN","PSO52API",52,0)
 .S ^TMP($J,LIST,DFN,IEN,DR)=PST(52,DA,DR,"I")
"RTN","PSO52API",53,0)
 K DA,DR,PST,DIC,DIQ
"RTN","PSO52API",54,0)
 Q
"RTN","PSO52API",55,0)
TW ;two
"RTN","PSO52API",56,0)
 Q:'$D(^PSRX(IEN,2))
"RTN","PSO52API",57,0)
 K PST S DIC=52,DA=IEN,DR="20:31;32.1;32.2;32.3;104" D DIQ
"RTN","PSO52API",58,0)
 F DR=20,21,22,23,24,25,26,27,28,29,30,31,32.1,32.2,32.3,104 D
"RTN","PSO52API",59,0)
 .I PST(52,DA,DR,"E")'=PST(52,DA,DR,"I") S ^TMP($J,LIST,DFN,IEN,DR)=PST(52,DA,DR,"I")_"^"_PST(52,DA,DR,"E") Q
"RTN","PSO52API",60,0)
 .S ^TMP($J,LIST,DFN,IEN,DR)=PST(52,DA,DR,"I")
"RTN","PSO52API",61,0)
 K DA,DR,PST,DIC,DIQ
"RTN","PSO52API",62,0)
 Q
"RTN","PSO52API",63,0)
TH ;three
"RTN","PSO52API",64,0)
 Q:'$D(^PSRX(IEN,3))
"RTN","PSO52API",65,0)
 K PST S DIC=52,DA=IEN,DR="12;26.1;34.1;101;102;102.1;102.2;109;112" D DIQ
"RTN","PSO52API",66,0)
 F DR=12,26.1,34.1,101,102,102.1,102.2,109,112 D
"RTN","PSO52API",67,0)
 .I PST(52,DA,DR,"E")'=PST(52,DA,DR,"I") S ^TMP($J,LIST,DFN,IEN,DR)=PST(52,DA,DR,"I")_"^"_PST(52,DA,DR,"E") Q
"RTN","PSO52API",68,0)
 .S ^TMP($J,LIST,DFN,IEN,DR)=PST(52,DA,DR,"I")
"RTN","PSO52API",69,0)
 K DA,DR,PST,DIC,DIQ
"RTN","PSO52API",70,0)
 Q
"RTN","PSO52API",71,0)
MI ;sig
"RTN","PSO52API",72,0)
 I $P($G(^PSRX(IEN,"SIG")),"^",2) D  Q
"RTN","PSO52API",73,0)
 .I '$O(^PSRX(IEN,"SIG1",0)) S ^TMP($J,LIST,DFN,IEN,"M",0)="-1^NO DATA FOUND" Q
"RTN","PSO52API",74,0)
 .F I=0:0 S I=$O(^PSRX(IEN,"SIG1",I)) Q:'I  S ^TMP($J,LIST,DFN,IEN,"M",I,0)=^PSRX(IEN,"SIG1",I,0),^TMP($J,LIST,DFN,IEN,"M",0)=$G(^TMP($J,LIST,DFN,IEN,"M",0))+1
"RTN","PSO52API",75,0)
 I $P($G(^PSRX(IEN,"SIG")),"^")']"" S ^TMP($J,LIST,DFN,IEN,"M",0)="-1^NO DATA FOUND" Q
"RTN","PSO52API",76,0)
 S X=$P($G(^PSRX(IEN,"SIG")),"^") D SIG^PSOHELP S ^TMP($J,LIST,DFN,IEN,"M",1,0)=$E(INS1,2,9999999),^TMP($J,LIST,DFN,IEN,"M",0)=1
"RTN","PSO52API",77,0)
 K X,INS1
"RTN","PSO52API",78,0)
 Q
"RTN","PSO52API",79,0)
ST ;status
"RTN","PSO52API",80,0)
 I DT>$P(^PSRX(IEN,2),"^",6),$P(^PSRX(IEN,"STA"),"^")<11 D
"RTN","PSO52API",81,0)
 .N PSOEXRX,PSOEXSTA,ORN,PIFN,PSUSD,PRFDT,PDA,PSST
"RTN","PSO52API",82,0)
 .S PSOEXRX=IEN D EN2^PSOMAUEX K PSOEXRX,PSONM,PSONMX
"RTN","PSO52API",83,0)
 K PST S DIC=52,DA=IEN,DR=".01;100" D DIQ
"RTN","PSO52API",84,0)
 S ^TMP($J,LIST,DFN,IEN,100)=PST(52,DA,100,"I")_"^"_PST(52,DA,100,"E")
"RTN","PSO52API",85,0)
 S ^TMP($J,LIST,"B",PST(52,DA,.01,"E"),IEN)=""
"RTN","PSO52API",86,0)
 K DA,DR,PST,DIC,DIQ
"RTN","PSO52API",87,0)
 Q
"RTN","PSO52API",88,0)
RF ;refill
"RTN","PSO52API",89,0)
 I '$O(^PSRX(IEN,1,0)) S ^TMP($J,LIST,DFN,IEN,"RF",0)="-1^NO DATA FOUND" Q
"RTN","PSO52API",90,0)
 I $P($G(DAT),"^",3) S DA(52.1)=$P(DAT,"^",3) D RFD K DA,DR,PST,DIC,DIQ Q
"RTN","PSO52API",91,0)
 F RF=0:0 S RF=$O(^PSRX(IEN,1,RF)) Q:'RF  S DA(52.1)=RF D RFD
"RTN","PSO52API",92,0)
 K DA,DR,PST,DIC,DIQ,RF
"RTN","PSO52API",93,0)
 Q
"RTN","PSO52API",94,0)
RFD K PST S DR(52.1)=".01:8;10.1;12;13;14;15;17",DIC=52,DA=IEN,DR=52 D DIQ
"RTN","PSO52API",95,0)
 I $P($G(DAT),"^",3),'$G(PST(52.1,DA(52.1),.01,"I")) S ^TMP($J,LIST,DFN,IEN,"RF",0)="-1^NO DATA FOUND" Q
"RTN","PSO52API",96,0)
 S ^TMP($J,LIST,DFN,IEN,"RF",0)=$G(^TMP($J,LIST,DFN,IEN,"RF",0))+1
"RTN","PSO52API",97,0)
 F DR=.01,1,1.1,1.2,2,3,4,5,6,7,8,10.1,12,13,14,15,17 D
"RTN","PSO52API",98,0)
 .I PST(52.1,DA(52.1),DR,"E")'=PST(52.1,DA(52.1),DR,"I") S ^TMP($J,LIST,DFN,IEN,"RF",DA(52.1),DR)=PST(52.1,DA(52.1),DR,"I")_"^"_PST(52.1,DA(52.1),DR,"E") Q
"RTN","PSO52API",99,0)
 .S ^TMP($J,LIST,DFN,IEN,"RF",DA(52.1),DR)=PST(52.1,DA(52.1),DR,"I")
"RTN","PSO52API",100,0)
 Q
"RTN","PSO52API",101,0)
IB ;ib ori
"RTN","PSO52API",102,0)
 I $P($G(DAT),"^",2)="R" D IBR Q
"RTN","PSO52API",103,0)
 I $G(^PSRX(IEN,"IB"))']"" S ^TMP($J,LIST,DFN,IEN,"IB",0)="-1^NO DATA FOUND" Q
"RTN","PSO52API",104,0)
 K PST S DIC=52,DA=IEN,DR="105;106;106.5;106.6" D DIQ
"RTN","PSO52API",105,0)
 F DR=105,106,106.5,106.6 D
"RTN","PSO52API",106,0)
 .I PST(52,DA,DR,"E")'=PST(52,DA,DR,"I") S ^TMP($J,LIST,DFN,IEN,DR)=PST(52,DA,DR,"I")_"^"_PST(52,DA,DR,"E") Q
"RTN","PSO52API",107,0)
 .S ^TMP($J,LIST,DFN,IEN,DR)=PST(52,DA,DR,"E")
"RTN","PSO52API",108,0)
 K DA,DR,PST,DIC,DIQ
"RTN","PSO52API",109,0)
 I $P($G(DAT),"^",2)="" D IBR Q
"RTN","PSO52API",110,0)
 Q
"RTN","PSO52API",111,0)
IBR ;ib ref
"RTN","PSO52API",112,0)
 I '$O(^PSRX(IEN,1,0)) S ^TMP($J,LIST,DFN,IEN,"IB",0)="-1^NO DATA FOUND" Q
"RTN","PSO52API",113,0)
 I $P($G(DAT),"^",2)="R",$P($G(DAT),"^",3) S DA(52.1)=$P(DAT,"^",3) D IBS K DA,DR,PST,DIC,DIQ Q
"RTN","PSO52API",114,0)
 N IB F IB=0:0 S IB=$O(^PSRX(IEN,1,IB)) Q:'IB  S DA(52.1)=IB D IBS
"RTN","PSO52API",115,0)
 I '$G(^TMP($J,LIST,DFN,IEN,"IB",0)) K ^TMP($J,LIST,DFN,IEN,"IB") S ^TMP($J,LIST,DFN,IEN,"IB",0)="-1^NO DATA FOUND"
"RTN","PSO52API",116,0)
 K DA,DR,PST,DIC,DIQ,IB
"RTN","PSO52API",117,0)
 Q
"RTN","PSO52API",118,0)
IBS I $P($G(DAT),"^",3),'$G(^PSRX(IEN,1,DA(52.1),"IB")) S ^TMP($J,LIST,DFN,IEN,"IB",0)="-1^NO DATA FOUND" Q
"RTN","PSO52API",119,0)
 I '$D(^PSRX(IEN,1,DA(52.1),"IB")) S ^TMP($J,LIST,DFN,IEN,"IB",DA(52.1),0)="-1^NO DATA FOUND" Q
"RTN","PSO52API",120,0)
 K PST S DR(52.1)="9;9.1",DIC=52,DA=IEN,DR=52 D DIQ
"RTN","PSO52API",121,0)
 S ^TMP($J,LIST,DFN,IEN,"IB",0)=$G(^TMP($J,LIST,DFN,IEN,"IB",0))+1
"RTN","PSO52API",122,0)
 F DR=9,9.1 D
"RTN","PSO52API",123,0)
 .I PST(52.1,DA(52.1),DR,"E")'=PST(52.1,DA(52.1),DR,"I") S ^TMP($J,LIST,DFN,IEN,"IB",DA(52.1),DR)=PST(52.1,DA(52.1),DR,"I")_"^"_PST(52.1,DA(52.1),DR,"E") Q
"RTN","PSO52API",124,0)
 .S ^TMP($J,LIST,DFN,IEN,"IB",DA(52.1),DR)=PST(52.1,DA(52.1),DR,"I")
"RTN","PSO52API",125,0)
 Q
"RTN","PSO52API",126,0)
CM ;cmop
"RTN","PSO52API",127,0)
 I '$O(^PSRX(IEN,4,0)) S ^TMP($J,LIST,DFN,IEN,"C",0)="-1^NO DATA FOUND" Q
"RTN","PSO52API",128,0)
 N CM F CM=0:0 S CM=$O(^PSRX(IEN,4,CM)) Q:'CM  S DA(52.01)=CM D CMP
"RTN","PSO52API",129,0)
 K DA,DR,PST,DIC,DIQ,CM
"RTN","PSO52API",130,0)
 Q
"RTN","PSO52API",131,0)
CMP S ^TMP($J,LIST,DFN,IEN,"C",0)=$G(^TMP($J,LIST,DFN,IEN,"C",0))+1
"RTN","PSO52API",132,0)
 K PST S DR(52.01)="2;3;4",DIC=52,DA=IEN,DR=400 D DIQ
"RTN","PSO52API",133,0)
 F DR=2,3,4 D
"RTN","PSO52API",134,0)
 .I PST(52.01,DA(52.01),DR,"E")'=PST(52.01,DA(52.01),DR,"I") S ^TMP($J,LIST,DFN,IEN,"C",DA(52.01),DR)=PST(52.01,DA(52.01),DR,"I")_"^"_PST(52.01,DA(52.01),DR,"E") Q
"RTN","PSO52API",135,0)
 .S ^TMP($J,LIST,DFN,IEN,"C",DA(52.01),DR)=PST(52.01,DA(52.01),DR,"I")
"RTN","PSO52API",136,0)
 Q
"RTN","PSO52API",137,0)
AT ;activity log
"RTN","PSO52API",138,0)
 I '$O(^PSRX(IEN,"A",0)) S ^TMP($J,LIST,DFN,IEN,"A",0)="-1^NO DATA FOUND" Q
"RTN","PSO52API",139,0)
 N AT F AT=0:0 S AT=$O(^PSRX(IEN,"A",AT)) Q:'AT  S DA(52.3)=AT D ATP
"RTN","PSO52API",140,0)
 K DA,DR,PST,DIC,DIQ,AT
"RTN","PSO52API",141,0)
 Q
"RTN","PSO52API",142,0)
ATP K PST S DR(52.3)=".01;.02;.03;.04;.05" S DIC=52,DA=IEN,DR=40 D DIQ
"RTN","PSO52API",143,0)
 S ^TMP($J,LIST,DFN,IEN,"A",0)=$G(^TMP($J,LIST,DFN,IEN,"A",0))+1
"RTN","PSO52API",144,0)
 F DR=.01,.02,.03,.04,.05 D
"RTN","PSO52API",145,0)
 .I DR=.04 S ^TMP($J,LIST,DFN,IEN,"A",DA(52.3),DR)=PST(52.3,DA(52.3),DR,"E") Q
"RTN","PSO52API",146,0)
 .I PST(52.3,DA(52.3),DR,"E")'=PST(52.3,DA(52.3),DR,"I") S ^TMP($J,LIST,DFN,IEN,"A",DA(52.3),DR)=PST(52.3,DA(52.3),DR,"I")_"^"_PST(52.3,DA(52.3),DR,"E") Q
"RTN","PSO52API",147,0)
 .S ^TMP($J,LIST,DFN,IEN,"A",DA(52.3),DR)=PST(52.3,DA(52.3),DR,"I")
"RTN","PSO52API",148,0)
 Q
"RTN","PSO52API",149,0)
LB ;label log
"RTN","PSO52API",150,0)
 I '$O(^PSRX(IEN,"L",0)) S ^TMP($J,LIST,DFN,IEN,"L",0)="-1^NO DATA FOUND" Q
"RTN","PSO52API",151,0)
 N LB F LB=0:0 S LB=$O(^PSRX(IEN,"L",LB)) Q:'LB  S DA(52.032)=LB D LBP
"RTN","PSO52API",152,0)
 K DA,DR,PST,DIC,DIQ,LB
"RTN","PSO52API",153,0)
 Q
"RTN","PSO52API",154,0)
LBP S ^TMP($J,LIST,DFN,IEN,"L",0)=$G(^TMP($J,LIST,DFN,IEN,"L",0))+1
"RTN","PSO52API",155,0)
 K PST S DR(52.032)=".01;1;2;3;4" S DIC=52,DA=IEN,DR=32 D DIQ
"RTN","PSO52API",156,0)
 F DR=.01,1,2,3,4 D
"RTN","PSO52API",157,0)
 .I DR=1 S ^TMP($J,LIST,DFN,IEN,"L",DA(52.032),DR)=PST(52.032,DA(52.032),DR,"E") Q
"RTN","PSO52API",158,0)
 .I PST(52.032,DA(52.032),DR,"E")'=PST(52.032,DA(52.032),DR,"I") S ^TMP($J,LIST,DFN,IEN,"L",DA(52.032),DR)=PST(52.032,DA(52.032),DR,"I")_"^"_PST(52.032,DA(52.032),DR,"E") Q
"RTN","PSO52API",159,0)
 .S ^TMP($J,LIST,DFN,IEN,"L",DA(52.032),DR)=PST(52.032,DA(52.032),DR,"I")
"RTN","PSO52API",160,0)
 K DA,DR,PST,DIC,DIQ
"RTN","PSO52API",161,0)
 Q
"RTN","PSO52API",162,0)
DATE ;date range
"RTN","PSO52API",163,0)
 I $G(SDATE) S DTE=SDATE-1 D  Q
"RTN","PSO52API",164,0)
 .I $G(EDATE) D  Q
"RTN","PSO52API",165,0)
 ..F  S DTE=$O(^PS(55,DFN,"P","A",DTE)) Q:'DTE!(DTE>EDATE)  F IEN=0:0 S IEN=$O(^PS(55,DFN,"P","A",DTE,IEN)) Q:'IEN  D:$P($G(^PSRX(IEN,"STA")),"^")'=13 PROCESS
"RTN","PSO52API",166,0)
 .F  S DTE=$O(^PS(55,DFN,"P","A",DTE)) Q:'DTE  F IEN=0:0 S IEN=$O(^PS(55,DFN,"P","A",DTE,IEN)) Q:'IEN  D:$P($G(^PSRX(IEN,"STA")),"^")'=13 PROCESS
"RTN","PSO52API",167,0)
 I $G(EDATE),'$G(SDATE) S DTE=DT-1 D  Q
"RTN","PSO52API",168,0)
 .F  S DTE=$O(^PS(55,DFN,"P","A",DTE)) Q:'DTE!(DTE>EDATE)  F IEN=0:0 S IEN=$O(^PS(55,DFN,"P","A",DTE,IEN)) Q:'IEN  D:$P($G(^PSRX(IEN,"STA")),"^")'=13 PROCESS
"RTN","PSO52API",169,0)
 S DTE=DT-1 F  S DTE=$O(^PS(55,DFN,"P","A",DTE)) Q:'DTE  F IEN=0:0 S IEN=$O(^PS(55,DFN,"P","A",DTE,IEN)) Q:'IEN  D:$P($G(^PSRX(IEN,"STA")),"^")'=13 PROCESS
"RTN","PSO52API",170,0)
 Q
"RTN","PSO52API",171,0)
PROF(DFN,LIST,SDATE,EDATE) ;
"RTN","PSO52API",172,0)
 D ^PSO52AP1
"RTN","PSO52API",173,0)
 Q
"RTN","PSO52API",174,0)
DIQ ;process fields
"RTN","PSO52API",175,0)
 S DIQ="PST",DIQ(0)="IE" D EN^DIQ1
"RTN","PSO52API",176,0)
 Q
"RTN","PSO52B")
0^2^B9013769^n/a
"RTN","PSO52B",1,0)
PSO52B ;BHAM ISC/AGV - Encap II API to return Rx data ;07/18/06 10:30 am
"RTN","PSO52B",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**252**;DEC 1997;Build 12
"RTN","PSO52B",3,0)
 ;
"RTN","PSO52B",4,0)
 ;Reference to ^PS(50.7 supported by DBIA 2223
"RTN","PSO52B",5,0)
 ;
"RTN","PSO52B",6,0)
 ;Rx profile called from RX^PSO52API
"RTN","PSO52B",7,0)
 ;
"RTN","PSO52B",8,0)
PT ;par
"RTN","PSO52B",9,0)
 I '$O(^PSRX(IEN,"P",0)) S ^TMP($J,LIST,DFN,IEN,"P",0)="-1^NO DATA FOUND" Q
"RTN","PSO52B",10,0)
 N PT F PT=0:0 S PT=$O(^PSRX(IEN,"P",PT)) Q:'PT  S DA(52.2)=PT D PTP
"RTN","PSO52B",11,0)
 K DA,DR,PST,DIC,DIQ,PT
"RTN","PSO52B",12,0)
 Q
"RTN","PSO52B",13,0)
PTP ;
"RTN","PSO52B",14,0)
 S ^TMP($J,LIST,DFN,IEN,"P",0)=$G(^TMP($J,LIST,DFN,IEN,"P",0))+1
"RTN","PSO52B",15,0)
 K PST S DR(52.2)=".01:8",DIC=52,DA=IEN,DR=60 D DIQ^PSO52API
"RTN","PSO52B",16,0)
 F DR=.01,.02,.03,.04,.05,.06,.08,.09,.041,.042,1,5,6,8 D
"RTN","PSO52B",17,0)
 .I PST(52.2,DA(52.2),DR,"E")'=PST(52.2,DA(52.2),DR,"I") S ^TMP($J,LIST,DFN,IEN,"P",DA(52.2),DR)=PST(52.2,DA(52.2),DR,"I")_"^"_PST(52.2,DA(52.2),DR,"E") Q
"RTN","PSO52B",18,0)
 .S ^TMP($J,LIST,DFN,IEN,"P",DA(52.2),DR)=PST(52.2,DA(52.2),DR,"I")
"RTN","PSO52B",19,0)
 Q
"RTN","PSO52B",20,0)
SD ;sand
"RTN","PSO52B",21,0)
 K PST S DIC=52,DA=IEN,DR="301;302;303" D DIQ^PSO52API F DR=301,302,303 D
"RTN","PSO52B",22,0)
 .I PST(52,DA,DR,"E")'=PST(52,DA,DR,"I") S ^TMP($J,LIST,DFN,IEN,DR)=PST(52,DA,DR,"I")_"^"_PST(52,DA,DR,"E") Q
"RTN","PSO52B",23,0)
 .S ^TMP($J,LIST,DFN,IEN,DR)=PST(52,DA,DR,"I")
"RTN","PSO52B",24,0)
 K DA,DR,PST,DIC,DIQ
"RTN","PSO52B",25,0)
 Q
"RTN","PSO52B",26,0)
TB ;tpb
"RTN","PSO52B",27,0)
 K PST S DIC=52,DA=IEN,DR=201 D DIQ^PSO52API
"RTN","PSO52B",28,0)
 I $G(PST(52,DA,DR,"E"))']"" S ^TMP($J,LIST,DFN,DA,DR)="" Q
"RTN","PSO52B",29,0)
 S ^TMP($J,LIST,DFN,DA,DR)=PST(52,DA,DR,"I")_"^"_PST(52,DA,DR,"E")
"RTN","PSO52B",30,0)
 K DA,DR,PST,DIC,DIQ
"RTN","PSO52B",31,0)
 Q
"RTN","PSO52B",32,0)
OI ;orderable item
"RTN","PSO52B",33,0)
 K PST S DIC=52,DA=IEN,DR=39.2 D DIQ^PSO52API
"RTN","PSO52B",34,0)
 I $G(PST(52,DA,DR,"I"))']"" S ^TMP($J,LIST,DFN,DA,"OI")="-1^NO DATA FOUND" Q
"RTN","PSO52B",35,0)
 S ^TMP($J,LIST,DFN,DA,"OI")=PST(52,DA,DR,"I")_"^"_PST(52,DA,DR,"E")
"RTN","PSO52B",36,0)
 S DIC=50.7,DA=PST(52,DA,DR,"I"),DR=.02,DIQ(0)="IE"  D DIQ^PSO52API
"RTN","PSO52B",37,0)
 S ^TMP($J,LIST,DFN,IEN,"OI")=^TMP($J,LIST,DFN,IEN,"OI")_"^"_PST(50.7,DA,DR,"I")_"^"_PST(50.7,DA,DR,"E")
"RTN","PSO52B",38,0)
 K DA,DR,PST,DIC,DIQ
"RTN","PSO52B",39,0)
 Q
"RTN","PSO52B",40,0)
MLT ;ICD multiple
"RTN","PSO52B",41,0)
 I '$O(^PSRX(IEN,"ICD",0)) S ^TMP($J,LIST,DFN,IEN,"ICD",0)="-1^NO DATA FOUND"  Q
"RTN","PSO52B",42,0)
 N MT F MT=0:0 S MT=$O(^PSRX(IEN,"ICD",MT)) Q:'MT  S DA(52.052311)=MT D MULT
"RTN","PSO52B",43,0)
 K DA,DR,PST,DIC,DIQ,MT
"RTN","PSO52B",44,0)
 Q
"RTN","PSO52B",45,0)
 ;
"RTN","PSO52B",46,0)
MULT ;
"RTN","PSO52B",47,0)
 S ^TMP($J,LIST,DFN,IEN,"ICD",0)=$G(^TMP($J,LIST,DFN,IEN,"ICD",0))+1
"RTN","PSO52B",48,0)
 K PST S DR(52.052311)=".01:7" S DIC=52,DA=IEN,DR=52311 D DIQ^PSO52API
"RTN","PSO52B",49,0)
 F DR=.01,1,2,3,4,5,6,7 D
"RTN","PSO52B",50,0)
 .I PST(52.052311,DA(52.052311),DR,"E")'=PST(52.052311,DA(52.052311),DR,"I") S ^TMP($J,LIST,DFN,IEN,"ICD",DA(52.052311),DR)=PST(52.052311,DA(52.052311),DR,"I")_"^"_PST(52.052311,DA(52.052311),DR,"E") Q
"RTN","PSO52B",51,0)
 .S ^TMP($J,LIST,DFN,IEN,"ICD",DA(52.052311),DR)=PST(52.052311,DA(52.052311),DR,"I")
"RTN","PSO52B",52,0)
 K DA,DR,PST,DIC,DIQ
"RTN","PSO52B",53,0)
 Q
"RTN","PSO52EX")
0^3^B11974692^n/a
"RTN","PSO52EX",1,0)
PSO52EX ;BHAM ISC/AGV - API FOR ORIGINAL, REFILL, AND PARTIAL DATA ;07/13/06 10:30 am
"RTN","PSO52EX",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**252**;DEC 1997;Build 12
"RTN","PSO52EX",3,0)
 ;
"RTN","PSO52EX",4,0)
 ;REFERENCE TO ^DPT SUPPORTED BY DBIA 10035
"RTN","PSO52EX",5,0)
 ;REFERENCE TO ^PSDRUG SUPPORTED BY DBIA 221
"RTN","PSO52EX",6,0)
 ;
"RTN","PSO52EX",7,0)
EXTRACT(SDATE,EDATE,LIST) ;MAIN DRIVER
"RTN","PSO52EX",8,0)
 ;SDATE: START DATE OF RECORD RETRIEVAL [REQUIRED]
"RTN","PSO52EX",9,0)
 ;EDATE: END DATE OF RECORD RETRIEVAL [OPTIONAL]
"RTN","PSO52EX",10,0)
 ;LIST: SUBSCRIPT NAME USED IN ^TMP GLOBAL [REQUIRED]
"RTN","PSO52EX",11,0)
 ;
"RTN","PSO52EX",12,0)
 Q:$G(LIST)=""
"RTN","PSO52EX",13,0)
 K ^TMP($J,LIST)
"RTN","PSO52EX",14,0)
 I '$G(SDATE) S ^TMP($J,LIST,0)="-1^NO DATA FOUND" Q
"RTN","PSO52EX",15,0)
 I '$G(EDATE) S EDATE=DT
"RTN","PSO52EX",16,0)
 D SEND
"RTN","PSO52EX",17,0)
 Q
"RTN","PSO52EX",18,0)
 ;       
"RTN","PSO52EX",19,0)
SEND ;SENDS CONTROL TO $$CROSS.  RECEIVES AND TRACKS COUNTS.
"RTN","PSO52EX",20,0)
 N ALCOUNT S ALCOUNT=$$CROSS("AL")
"RTN","PSO52EX",21,0)
 N AMCOUNT S AMCOUNT=$$CROSS("AM")
"RTN","PSO52EX",22,0)
 N TCOUNT S TCOUNT=ALCOUNT+AMCOUNT
"RTN","PSO52EX",23,0)
 IF TCOUNT>0 S ^TMP($J,LIST,0)=TCOUNT
"RTN","PSO52EX",24,0)
 ELSE  S ^TMP($J,LIST,0)="-1^NO DATA FOUND"
"RTN","PSO52EX",25,0)
 Q
"RTN","PSO52EX",26,0)
 ;
"RTN","PSO52EX",27,0)
CROSS(REF) ;SETS UP ^TMP GLOBAL.  SENDS FOR ORIGINAL, REFILL AND/OR PARTIAL FILL DATA
"RTN","PSO52EX",28,0)
 N PSOIEN,PSOFILL,PSOCOUNT,DATE,END
"RTN","PSO52EX",29,0)
 S DATE=SDATE-.001,END=(EDATE+1),PSOIEN="",PSOFILL="",PSOCOUNT=0
"RTN","PSO52EX",30,0)
 F  S DATE=$O(^PSRX(REF,DATE)) Q:'DATE!(END'>DATE)  D
"RTN","PSO52EX",31,0)
 .F  S PSOIEN=$O(^PSRX(REF,DATE,PSOIEN)) Q:'PSOIEN  D
"RTN","PSO52EX",32,0)
 ..F  S PSOFILL=$O(^PSRX(REF,DATE,PSOIEN,PSOFILL)) Q:PSOFILL=""  D
"RTN","PSO52EX",33,0)
 ...S ^TMP($J,LIST,REF,DATE,PSOIEN,PSOFILL)=""
"RTN","PSO52EX",34,0)
 ...I REF="AL",PSOFILL=0 S PSOCOUNT=PSOCOUNT+1 D ORIG(PSOIEN) Q
"RTN","PSO52EX",35,0)
 ...I REF="AL",PSOFILL>0 S PSOCOUNT=PSOCOUNT+1 D REFILL(PSOIEN,PSOFILL) Q
"RTN","PSO52EX",36,0)
 ...I REF="AM" S PSOCOUNT=PSOCOUNT+1 D PART(PSOIEN,PSOFILL) Q
"RTN","PSO52EX",37,0)
 Q PSOCOUNT
"RTN","PSO52EX",38,0)
 ;
"RTN","PSO52EX",39,0)
REFILL(IEN,FILL) ;REFILL
"RTN","PSO52EX",40,0)
 D:'$D(^TMP($J,LIST,IEN,.01)) ORIG(IEN)
"RTN","PSO52EX",41,0)
 N PSORFL S PSORFL=$G(^PSRX(IEN,1,FILL,0))
"RTN","PSO52EX",42,0)
 S ^TMP($J,LIST,IEN,"RF",FILL,.01)=$P(PSORFL,U,1)_"^"_$$FMTE^XLFDT($P(PSORFL,U,1),1)
"RTN","PSO52EX",43,0)
 S ^TMP($J,LIST,IEN,"RF",FILL,1)=$P(PSORFL,U,4)
"RTN","PSO52EX",44,0)
 S ^TMP($J,LIST,IEN,"RF",FILL,1.1)=$P(PSORFL,U,10)
"RTN","PSO52EX",45,0)
 S ^TMP($J,LIST,IEN,"RF",FILL,1.2)=$P(PSORFL,U,11)
"RTN","PSO52EX",46,0)
 S ^TMP($J,LIST,IEN,"RF",0)=$G(^TMP($J,LIST,IEN,"RF",0))+1
"RTN","PSO52EX",47,0)
 Q
"RTN","PSO52EX",48,0)
 ;
"RTN","PSO52EX",49,0)
PART(IEN,FILL) ;PARTIAL FILL
"RTN","PSO52EX",50,0)
 D:'$D(^TMP($J,LIST,IEN,.01)) ORIG(IEN)
"RTN","PSO52EX",51,0)
 N PSOPART S PSOPART=$G(^PSRX(IEN,"P",FILL,0))
"RTN","PSO52EX",52,0)
 S ^TMP($J,LIST,IEN,"P",FILL,.01)=$P(PSOPART,U,1)_"^"_$$FMTE^XLFDT($P(PSOPART,U,1),1)
"RTN","PSO52EX",53,0)
 S ^TMP($J,LIST,IEN,"P",FILL,.04)=$P(PSOPART,U,4)
"RTN","PSO52EX",54,0)
 S ^TMP($J,LIST,IEN,"P",FILL,.041)=$P(PSOPART,U,10)
"RTN","PSO52EX",55,0)
 S ^TMP($J,LIST,IEN,"P",FILL,.042)=$P(PSOPART,U,11)
"RTN","PSO52EX",56,0)
 S ^TMP($J,LIST,IEN,"P",0)=$G(^TMP($J,LIST,IEN,"P",0))+1
"RTN","PSO52EX",57,0)
 Q
"RTN","PSO52EX",58,0)
 ;
"RTN","PSO52EX",59,0)
ORIG(IEN) ;ORIGINAL FILL
"RTN","PSO52EX",60,0)
 N PSOORIG S PSOORIG=$G(^PSRX(IEN,0))
"RTN","PSO52EX",61,0)
 S ^TMP($J,LIST,IEN,.01)=$P(PSOORIG,U,1)
"RTN","PSO52EX",62,0)
 S ^TMP($J,LIST,IEN,2)=$S($P(PSOORIG,U,2)>0:$P(PSOORIG,U,2)_"^"_$P($G(^DPT($P($G(PSOORIG),U,2),0)),U,1),1:"")
"RTN","PSO52EX",63,0)
 S ^TMP($J,LIST,IEN,6)=$S($P(PSOORIG,U,6)>0:$P(PSOORIG,U,6)_"^"_$P($G(^PSDRUG($P($G(PSOORIG),U,6),0)),U,1),1:"")
"RTN","PSO52EX",64,0)
 S ^TMP($J,LIST,IEN,7)=$P(PSOORIG,U,7)
"RTN","PSO52EX",65,0)
 S ^TMP($J,LIST,IEN,8)=$P(PSOORIG,U,8)
"RTN","PSO52EX",66,0)
 S ^TMP($J,LIST,IEN,17)=$P(PSOORIG,U,17)
"RTN","PSO52EX",67,0)
 Q
"RTN","PSO52EX",68,0)
 ;
"RTN","PSO52EX",69,0)
REF(SDATE,EDATE,LIST) ;
"RTN","PSO52EX",70,0)
 ;SDATE: START DATE OF "AD" XREF RETRIEVAL [REQUIRED]
"RTN","PSO52EX",71,0)
 ;EDATE: END DATE OF "AD" XREF RETRIEVAL [OPTIONAL]
"RTN","PSO52EX",72,0)
 ;LIST: SUBSCRIPT NAME USED IN ^TMP GLOBAL [REQUIRED]
"RTN","PSO52EX",73,0)
 ;
"RTN","PSO52EX",74,0)
 Q:$G(LIST)=""
"RTN","PSO52EX",75,0)
 K ^TMP($J,LIST)
"RTN","PSO52EX",76,0)
 I '$G(SDATE) S ^TMP($J,LIST,0)="-1^NO DATA FOUND" Q
"RTN","PSO52EX",77,0)
 I '$G(EDATE) S EDATE=SDATE
"RTN","PSO52EX",78,0)
 N PSORXN,PSOFILL
"RTN","PSO52EX",79,0)
 S DATE=SDATE-.001,END=EDATE+1,PSORXN="",PSOFILL=""
"RTN","PSO52EX",80,0)
 F  S DATE=$O(^PSRX("AD",DATE)) Q:'DATE!(END'>DATE)  D
"RTN","PSO52EX",81,0)
 .F  S PSORXN=$O(^PSRX("AD",DATE,PSORXN)) Q:'PSORXN  D
"RTN","PSO52EX",82,0)
 ..F  S PSOFILL=$O(^PSRX("AD",DATE,PSORXN,PSOFILL)) Q:PSOFILL=""  D
"RTN","PSO52EX",83,0)
 ...S ^TMP($J,LIST,"AD",DATE,PSORXN,PSOFILL)=""
"RTN","PSO52EX",84,0)
 Q
"VER")
8.0^22.0
"BLD",6285,6)
^229
**END**
**END**
