Released SD*5.3*266 SEQ #400
Extracted from mail message
**KIDS**:SD*5.3*266^

**INSTALL NAME**
SD*5.3*266
"BLD",5872,0)
SD*5.3*266^SCHEDULING^0^3060822^y
"BLD",5872,1,0)
^^4^4^3060822^^^^
"BLD",5872,1,1,0)
Option 'Appointment List' [SDLIST] has been modified to call a Scheduling 
"BLD",5872,1,2,0)
API to retrieve appointment data.  Patient phone number has been added to 
"BLD",5872,1,3,0)
the report.  Service Connected percent has been added to the 'Other
"BLD",5872,1,4,0)
Information' section.
"BLD",5872,4,0)
^9.64PA^^
"BLD",5872,"ABPKG")
n
"BLD",5872,"KRN",0)
^9.67PA^8989.52^19
"BLD",5872,"KRN",.4,0)
.4
"BLD",5872,"KRN",.401,0)
.401
"BLD",5872,"KRN",.402,0)
.402
"BLD",5872,"KRN",.403,0)
.403
"BLD",5872,"KRN",.5,0)
.5
"BLD",5872,"KRN",.84,0)
.84
"BLD",5872,"KRN",3.6,0)
3.6
"BLD",5872,"KRN",3.8,0)
3.8
"BLD",5872,"KRN",9.2,0)
9.2
"BLD",5872,"KRN",9.8,0)
9.8
"BLD",5872,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",5872,"KRN",9.8,"NM",1,0)
SDAL0^^0^B40643176
"BLD",5872,"KRN",9.8,"NM",2,0)
SDAL^^0^B25089836
"BLD",5872,"KRN",9.8,"NM",3,0)
SDAMUTDT^^0^B9921068
"BLD",5872,"KRN",9.8,"NM","B","SDAL",2)

"BLD",5872,"KRN",9.8,"NM","B","SDAL0",1)

"BLD",5872,"KRN",9.8,"NM","B","SDAMUTDT",3)

"BLD",5872,"KRN",19,0)
19
"BLD",5872,"KRN",19.1,0)
19.1
"BLD",5872,"KRN",101,0)
101
"BLD",5872,"KRN",409.61,0)
409.61
"BLD",5872,"KRN",771,0)
771
"BLD",5872,"KRN",870,0)
870
"BLD",5872,"KRN",8989.51,0)
8989.51
"BLD",5872,"KRN",8989.52,0)
8989.52
"BLD",5872,"KRN",8994,0)
8994
"BLD",5872,"KRN","B",.4,.4)

"BLD",5872,"KRN","B",.401,.401)

"BLD",5872,"KRN","B",.402,.402)

"BLD",5872,"KRN","B",.403,.403)

"BLD",5872,"KRN","B",.5,.5)

"BLD",5872,"KRN","B",.84,.84)

"BLD",5872,"KRN","B",3.6,3.6)

"BLD",5872,"KRN","B",3.8,3.8)

"BLD",5872,"KRN","B",9.2,9.2)

"BLD",5872,"KRN","B",9.8,9.8)

"BLD",5872,"KRN","B",19,19)

"BLD",5872,"KRN","B",19.1,19.1)

"BLD",5872,"KRN","B",101,101)

"BLD",5872,"KRN","B",409.61,409.61)

"BLD",5872,"KRN","B",771,771)

"BLD",5872,"KRN","B",870,870)

"BLD",5872,"KRN","B",8989.51,8989.51)

"BLD",5872,"KRN","B",8989.52,8989.52)

"BLD",5872,"KRN","B",8994,8994)

"BLD",5872,"QUES",0)
^9.62^^
"BLD",5872,"REQB",0)
^9.611^3^3
"BLD",5872,"REQB",1,0)
SD*5.3*301^2
"BLD",5872,"REQB",2,0)
SD*5.3*373^2
"BLD",5872,"REQB",3,0)
SD*5.3*80^2
"BLD",5872,"REQB","B","SD*5.3*301",1)

"BLD",5872,"REQB","B","SD*5.3*373",2)

"BLD",5872,"REQB","B","SD*5.3*80",3)

"MBREQ")
0
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813^2930925
"PKG",16,22,1,"PAH",1,0)
266^3060822
"PKG",16,22,1,"PAH",1,1,0)
^^4^4^3060822
"PKG",16,22,1,"PAH",1,1,1,0)
Option 'Appointment List' [SDLIST] has been modified to call a Scheduling 
"PKG",16,22,1,"PAH",1,1,2,0)
API to retrieve appointment data.  Patient phone number has been added to 
"PKG",16,22,1,"PAH",1,1,3,0)
the report.  Service Connected percent has been added to the 'Other
"PKG",16,22,1,"PAH",1,1,4,0)
Information' section.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","SDAL")
0^2^B25089836^B16741021
"RTN","SDAL",1,0)
SDAL ;ALB/GRR,MJK - APPOINTMENT LIST ; 29 Jun 99  04:11PM
"RTN","SDAL",2,0)
 ;;5.3;Scheduling;**37,46,106,171,177,80,266**;Aug 13, 1993
"RTN","SDAL",3,0)
EN W ! S SDEND=1 D ASK2^SDDIV G:Y<0 END
"RTN","SDAL",4,0)
 W ! S VAUTNI=1 D NCOUNT^SDAL0 I SDCONC=U G END
"RTN","SDAL",5,0)
 W ! D NCLINIC^SDAL0 G:Y<0 END
"RTN","SDAL",6,0)
RD1 W ! N %DT K DIC("S") S %DT("A")="For date: ",%DT="AEXF" D ^%DT
"RTN","SDAL",7,0)
 I (X["^")!(Y<0) K %,VAUTD,VAUTC,X,Y Q
"RTN","SDAL",8,0)
 S SDD=Y
"RTN","SDAL",9,0)
 N DIR S DIR(0)="Y",DIR("B")="NO"
"RTN","SDAL",10,0)
 S DIR("A")="Include Primary Care assignment information in the output"
"RTN","SDAL",11,0)
 W ! D ^DIR I $D(DTOUT)!$D(DUOUT) K SDD,VAUTC,VAUTD,X,Y Q
"RTN","SDAL",12,0)
 W ! S SDPCMM=Y
"RTN","SDAL",13,0)
N K SDX,SDX1 R !,"Number of copies: 1// ",M:DTIME S:M="" M=1
"RTN","SDAL",14,0)
 I M["^" K M,SDD,VAUTC,VAUTD,X,Y Q
"RTN","SDAL",15,0)
 I (M'?.N)!((M'>0)!($L(M)>3)) W !,"ENTER A WHOLE NUMBER TO SELECT THE # OF COPIES OF THE APPOINTMENT LIST THAT ARE NEEDED- (1-999)" G N
"RTN","SDAL",16,0)
 S SDCOPY=M
"RTN","SDAL",17,0)
 ; -- specify device
"RTN","SDAL",18,0)
 W ! N %ZIS K IO("Q") S %ZIS="QMP" D ^%ZIS G END:POP
"RTN","SDAL",19,0)
 S SDBC=$$BARQ(+IOST(0),IOM) I SDBC="^" G END
"RTN","SDAL",20,0)
 I $D(IO("Q")) D QUE W:$D(ZTSK) "   (Task#: ",ZTSK,")" G END
"RTN","SDAL",21,0)
 ;
"RTN","SDAL",22,0)
START U IO N CNT,SDCLAR,SDCOUNT S (SDCOUNT,CNT)=0
"RTN","SDAL",23,0)
 ;SET UP A TEMP ARRAY -SDCLAR- WITH CLASSIFICATION ABBREVIATIONS
"RTN","SDAL",24,0)
 F  S CNT=$O(^SD(409.41,CNT)) Q:CNT'>0  D
"RTN","SDAL",25,0)
 .S SDCLAR(CNT)=$P(^SD(409.41,CNT,0),U,7)
"RTN","SDAL",26,0)
 S:'$D(DTIME) DTIME=300 I '$D(DT) D DT^SDUTL
"RTN","SDAL",27,0)
 S SDASH="",$P(SDASH,"_",IOM+1)="" S SDBC=+$G(SDBC),SDCOPY=$S($D(SDCOPY):+SDCOPY,$D(M):+M,1:1)
"RTN","SDAL",28,0)
 D NOW^%DTC S Y=% X ^DD("DD") S SDPNOW=$P(Y,":",1,2)
"RTN","SDAL",29,0)
 I SDBC S SDBC=$S(IOM<120:0,1:$$BARC^SDAMU(+IOST(0),.SDBCON,.SDBCOFF))
"RTN","SDAL",30,0)
 S (SDEND,SD1,PCNT)=0,Y=DT D D^DIQ S SDNT=Y,Y=SDD,X=Y D D^DIQ S SDPD=Y D DW^%DTC S SDPD=X_" "_SDPD
"RTN","SDAL",31,0)
 ;if user has selected 'all' clinics, populate VAUTC with all uncancelled TYPE=C clinics from ^SC
"RTN","SDAL",32,0)
 I VAUTC=1 S SDIEN=0 F  S SDIEN=$O(^SC(SDIEN)) Q:+SDIEN=0  D
"RTN","SDAL",33,0)
 . I $P(^SC(SDIEN,0),"^",3)="C",$G(^SC(SDIEN,"ST",SDD,1))'["CANCELLED" D
"RTN","SDAL",34,0)
 .. S SDNAME=$P(^SC(SDIEN,0),"^",1) I $G(SDNAME)]"" S VAUTC(SDNAME)=SDIEN
"RTN","SDAL",35,0)
 ;-------------CALL TO SDAPI^SDAMA301 TO RETRIEVE APPT DATA------------------
"RTN","SDAL",36,0)
 K ^TMP($J,"SDAMA301") N SDARRAY,SDIEN,SDNAME,SDERR,SDCL,SDDFN,SDDT,SDRESULT
"RTN","SDAL",37,0)
 S SDARRAY(1)=SDD_";"_SDD,SDARRAY(3)="I;R;NT",SDARRAY("FLDS")="4;6;7;8;10;19;20;21"
"RTN","SDAL",38,0)
 ;if user has selected clinics, build clinic filter list
"RTN","SDAL",39,0)
 I VAUTC'=1 D  I $L(SDARRAY(2)) S SDARRAY(2)=$E(SDARRAY(2),1,$L(SDARRAY(2))-1) ;remove last ';' from end
"RTN","SDAL",40,0)
 . S SD="" F  S SD=$O(VAUTC(SD)) Q:SD']""  S SC=$G(VAUTC(SD)) I $G(SC)]"" S SDARRAY(2)=$G(SDARRAY(2))_SC_";"
"RTN","SDAL",41,0)
 ;call SDAPI to retrieve appointment data
"RTN","SDAL",42,0)
 S SDRESULT=$$SDAPI^SDAMA301(.SDARRAY)
"RTN","SDAL",43,0)
 ;I SDRESULT<0 S SDERR=$$SDAPIERR^SDAMUTDT() I $L(SDERR) S SC=0 D HED W !!,SDERR,! I $E(IOST,1,2)="C-" D OUT^SDUTL
"RTN","SDAL",44,0)
 ;if error returned from SDAPI, display on report and quit
"RTN","SDAL",45,0)
 I SDRESULT<0 S SDERR=$$SDAPIERR^SDAMUTDT() I $L(SDERR) S SC=0 S SDPAGE=1 D HED W !!,SDERR,! D:$E(IOST,1,2)="C-" OUT^SDUTL D EXIT Q
"RTN","SDAL",46,0)
 ;if appts returned from SDAPI, sort output by clinic, appt d/t, patient
"RTN","SDAL",47,0)
 I SDRESULT>0 D
"RTN","SDAL",48,0)
 . S SDCL=0 F  S SDCL=$O(^TMP($J,"SDAMA301",SDCL)) Q:'SDCL  D
"RTN","SDAL",49,0)
 .. S SDDFN=0 F  S SDDFN=$O(^TMP($J,"SDAMA301",SDCL,SDDFN)) Q:'SDDFN  D
"RTN","SDAL",50,0)
 ... S SDDT=0 F  S SDDT=$O(^TMP($J,"SDAMA301",SDCL,SDDFN,SDDT)) Q:'SDDT  D
"RTN","SDAL",51,0)
 .... M ^TMP($J,"SDAMA301","S",SDCL,SDDT,SDDFN)=^TMP($J,"SDAMA301",SDCL,SDDFN,SDDT)
"RTN","SDAL",52,0)
 ;---------------------------------------------------------------------------
"RTN","SDAL",53,0)
LOOPA ;S SD=0 F  S SD=$S(VAUTC:$O(^SC("B",SD)),1:$O(VAUTC(SD))) Q:SD']""!SDEND  D CLIN
"RTN","SDAL",54,0)
 ;if no error returned from SDAPI, start looping through clinics in VAUTC (sorted by name)
"RTN","SDAL",55,0)
 I SDRESULT'<0 S SD=0 F  S SD=$O(VAUTC(SD)) Q:SD']""!SDEND  D CLIN
"RTN","SDAL",56,0)
 G:SDEND END
"RTN","SDAL",57,0)
OVER ;S PCNT=PCNT+1 I PCNT<SDCOPY,SDCOUNT S VAUTC=0 G LOOPA
"RTN","SDAL",58,0)
 S PCNT=PCNT+1 I PCNT<SDCOPY,SDCOUNT G LOOPA
"RTN","SDAL",59,0)
END I $G(SDCOUNT)="" G EXIT
"RTN","SDAL",60,0)
 ;I SDCOUNT=0 S SDPCT="No activity found for this date!" D HED W !!?$L(SDPCT)\2,SDPCT,!
"RTN","SDAL",61,0)
 I SDCOUNT=0 S SDPCT="No activity found for this date!" S SDPAGE=1,SC=0 D HED W !!?$L(SDPCT)\2,SDPCT,!
"RTN","SDAL",62,0)
 I $E(IOST,1,2)="C-" D:'$G(SDEND)&$G(SDCOUNT) OUT^SDUTL W @IOF
"RTN","SDAL",63,0)
EXIT K %,%H,%H,A,ALL,DFN,DIC,I,INC,K,M,PCNT,POP,PT,SC,SD,SD1,SDCC,SDCONC,SDCP,SDD,SDEM1,SDDIF,SDDIF1,SDEA,SDEC,SDEDT,SDEM,SDEND,SDFL,SDFS,SDIN,SDNT
"RTN","SDAL",64,0)
 K DIRUT,SDCOPY,SDPAGE,SDPCT,SDPNOW,SDPT0,SDOI,SDPD,SDREV,SDT,SDX,SDXX,SDZ,VADAT,VADATE,VAUTC,VAUTNI,VAUTSTR,VAUTVB,VAUTD,VAQK,X,Y,Y1,Y2,Z
"RTN","SDAL",65,0)
 K SDBC,SDBCON,SDBCOFF,SDASH,SDPCMM,^TMP($J,"SDAMA301")
"RTN","SDAL",66,0)
 D CLOSE^DGUTQ Q
"RTN","SDAL",67,0)
 ;
"RTN","SDAL",68,0)
CLIN ;S (SDFL,SC)=0 F  S SC=$O(^SC("B",SD,SC)) Q:SC'>0!SDEND  I $D(^SC(SC,0)),$P(^(0),"^",3)="C" I $S(VAUTC:1,'$D(VAUTC(SD)):0,VAUTC(SD)=SC:1,1:0) D LOOP^SDAL0
"RTN","SDAL",69,0)
 ;process each clinic IEN from VAUTC array
"RTN","SDAL",70,0)
 S (SDFL,SC)=0 S SC=$G(VAUTC(SD)) I $G(SC)>0,$D(^SC(SC,0)) D LOOP^SDAL0
"RTN","SDAL",71,0)
 Q
"RTN","SDAL",72,0)
 ;
"RTN","SDAL",73,0)
BARQ(TTYPE,MARGIN) ;
"RTN","SDAL",74,0)
 N ON,OFF,Y
"RTN","SDAL",75,0)
 I MARGIN<120 S Y=0 G BARCQ
"RTN","SDAL",76,0)
 I '$$BARC^SDAMU(.TTYPE,.ON,.OFF) S Y=0 G BARCQ
"RTN","SDAL",77,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="SHOULD BARCODES BE PRINTED ON LIST(S)"
"RTN","SDAL",78,0)
 D ^DIR K DIR S:$D(DIRUT) Y="^"
"RTN","SDAL",79,0)
BARCQ Q Y
"RTN","SDAL",80,0)
 ;
"RTN","SDAL",81,0)
QUE ;Queue output
"RTN","SDAL",82,0)
 N ZTDESC,ZTSAVE,ZTRTN
"RTN","SDAL",83,0)
 K ZTSK,IO("Q")
"RTN","SDAL",84,0)
 S ZTDESC="Appointment Lists",ZTRTN="START^SDAL"
"RTN","SDAL",85,0)
 F X="VAUTD(","VAUTC(","SDCOPY","SDD","SDBC","VAUTD","VAUTC","SDCONC","SDPCMM" S ZTSAVE(X)=""
"RTN","SDAL",86,0)
 D ^%ZTLOAD
"RTN","SDAL",87,0)
 Q
"RTN","SDAL",88,0)
 ;
"RTN","SDAL",89,0)
STOP ;Check for stop task request
"RTN","SDAL",90,0)
 S:$D(ZTQUEUED) (SDEND,ZTSTOP)=$S($$S^%ZTLOAD:1,1:0) Q
"RTN","SDAL",91,0)
 ;
"RTN","SDAL",92,0)
HED ;Print report header
"RTN","SDAL",93,0)
 I SD1,$E(IOST)="C" D OUT^SDUTL Q:SDEND
"RTN","SDAL",94,0)
 D STOP Q:SDEND
"RTN","SDAL",95,0)
 S SDCOUNT=SDCOUNT+1,SD1=1
"RTN","SDAL",96,0)
 W:SDCOUNT>1!($E(IOST)="C") $$XY^SCRPW50(IOF,1,0) W:$X $$XY^SCRPW50("",0,0)
"RTN","SDAL",97,0)
 W:SC "Appointments for ",$P(^SC(SC,0),"^",1)," clinic on ",SDPD
"RTN","SDAL",98,0)
 W:'SC "Appointments for ",SDPD
"RTN","SDAL",99,0)
 W !,"Date printed: ",SDPNOW,?(IOM-6-$L(SDPAGE)),"Page: ",SDPAGE,!
"RTN","SDAL",100,0)
 W !," Appt.",?11,"Patient Name",?44,"SSN",?53,"Lab",?62,"X-Ray",?73,"EKG"
"RTN","SDAL",101,0)
 ;W !," Time",?53,"Time",?62,"Time",?73,"Time",!,?15,"Other Information",?40,"Ward Location",!,?41,"Room-Bed"
"RTN","SDAL",102,0)
 W !," Time",?53,"Time",?62,"Time",?73,"Time",!,?15,"Other Information",?40,"Ward Location",!,?41,"Room-Bed"
"RTN","SDAL",103,0)
 W !,SDASH S SDPAGE=SDPAGE+1
"RTN","SDAL",104,0)
 D:SDBC PAINT(SC,SDD)
"RTN","SDAL",105,0)
 Q
"RTN","SDAL",106,0)
 ;
"RTN","SDAL",107,0)
PAINT(CLINIC,DATE) ; -- paint header barcodes
"RTN","SDAL",108,0)
 ; input:  CLINIC := clinic ifn
"RTN","SDAL",109,0)
 ;           DATE := appt date only
"RTN","SDAL",110,0)
 ;
"RTN","SDAL",111,0)
 W !?10,"Date",?45,"Clinic#",?85,"No",?110,"Yes",!
"RTN","SDAL",112,0)
 D BARC(10,$E(DATE,4,7)_$E(DATE,2,3))
"RTN","SDAL",113,0)
 D BARC(45,"%"_CLINIC_"$")
"RTN","SDAL",114,0)
 D BARC(85,"N"),BARC(110,"Y")
"RTN","SDAL",115,0)
 W !!!!,SDASH
"RTN","SDAL",116,0)
 Q
"RTN","SDAL",117,0)
 ;
"RTN","SDAL",118,0)
BARC(TAB,X) ; --print barcode
"RTN","SDAL",119,0)
 ; input: TAB := tab position
"RTN","SDAL",120,0)
 ;          X := string to print
"RTN","SDAL",121,0)
 ;
"RTN","SDAL",122,0)
 W *13,?TAB W @SDBCON,X,@SDBCOFF
"RTN","SDAL",123,0)
 Q
"RTN","SDAL",124,0)
 ;
"RTN","SDAL0")
0^1^B40643176^B34357046
"RTN","SDAL0",1,0)
SDAL0 ;ALB/GRR,TMP,MJK - APPOINTMENT LIST (CONTINUED FROM SDAL) ; 29 Jun 99  04:11PM
"RTN","SDAL0",2,0)
 ;;5.3;Scheduling;**28,37,106,149,171,177,193,305,373,266**;Aug 13, 1993
"RTN","SDAL0",3,0)
LOOP I 'VAUTC,$G(^SC(SC,"ST",SDD,1))["CANCELLED"  D  Q
"RTN","SDAL0",4,0)
 .S SDPAGE=1 D HED^SDAL
"RTN","SDAL0",5,0)
 .S SDPCT="Clinic cancelled for this date!"
"RTN","SDAL0",6,0)
 .W !!?(IOM-$L(SDPCT)\2),SDPCT
"RTN","SDAL0",7,0)
 I $$CHECK(),$$NCHECK(),$$ACTIVE() D
"RTN","SDAL0",8,0)
 .;I VAUTC,SDCOPY>1 S VAUTC(SD)=SC
"RTN","SDAL0",9,0)
 .S SDPAGE=1 D HED^SDAL Q:SDEND  S SDPCT=0
"RTN","SDAL0",10,0)
 .;S SDT=SDD F  S SDT=$O(^SC(SC,"S",SDT)) Q:'SDT!(SDT\1-SDD)!SDEND  D MORE
"RTN","SDAL0",11,0)
 .;loop through sorted appointment data for the clinic
"RTN","SDAL0",12,0)
 .N SDT,SDDFN,SDDATA,SDDATAC S SDT="" F  S SDT=$O(^TMP($J,"SDAMA301","S",SC,SDT)) Q:'SDT  D
"RTN","SDAL0",13,0)
 ..S SDDFN="" F  S SDDFN=$O(^TMP($J,"SDAMA301","S",SC,SDT,SDDFN)) Q:'SDDFN!SDEND  D
"RTN","SDAL0",14,0)
 ...;store appt data and comments for later reference
"RTN","SDAL0",15,0)
 ...S SDDATA=$G(^TMP($J,"SDAMA301","S",SC,SDT,SDDFN)),SDDATAC=$G(^(SDDFN,"C"))
"RTN","SDAL0",16,0)
 ...D MORE
"RTN","SDAL0",17,0)
 .W ! D CCLK Q:SDEND
"RTN","SDAL0",18,0)
 .I 'SDPCT S SDPCT="No activity found for this clinic date!" W !!?(IOM-$L(SDPCT)\2),SDPCT
"RTN","SDAL0",19,0)
 S SDPAGE=1 Q
"RTN","SDAL0",20,0)
 ;
"RTN","SDAL0",21,0)
PTL N SDAPPT
"RTN","SDAL0",22,0)
 ;S DFN=+^SC(SC,"S",SDT,1,K,0),SDOI=$P(^(0),"^",4)
"RTN","SDAL0",23,0)
 S DFN=+$P(SDDATA,"^",4),SDOI=$G(SDDATAC)
"RTN","SDAL0",24,0)
 ;S (SDAPPT,X)=$G(^DPT(DFN,"S",SDT,0))
"RTN","SDAL0",25,0)
 ;Q:$S('X:1,$P(X,"^",2)="NT":0,$P(X,"^",2)["C"!($P(X,"^",2)["N"):1,1:0)
"RTN","SDAL0",26,0)
 S SDAPPT=""
"RTN","SDAL0",27,0)
 D ^VAUQWK,GETA
"RTN","SDAL0",28,0)
 I ($Y+7>IOSL) D HED^SDAL Q:SDEND
"RTN","SDAL0",29,0)
 I '$D(SDFS) S SDFS=1,X=PT D TM^SDROUT0 W !,$J(X,8)
"RTN","SDAL0",30,0)
 N SDCLY D CL^SDCO21(DFN,SDT,"",.SDCLY)
"RTN","SDAL0",31,0)
 N SDY S SDY=$Y
"RTN","SDAL0",32,0)
 W ! D:SDBC BARC^SDAL(85,$P(VAQK(2),"^"))
"RTN","SDAL0",33,0)
 ;check for Combat Vet
"RTN","SDAL0",34,0)
 N SDCV
"RTN","SDAL0",35,0)
 S SDCV=$$CVEDT^DGCV(DFN,$G(SDD))
"RTN","SDAL0",36,0)
 S SDCV=$P(SDCV,U,3)
"RTN","SDAL0",37,0)
 ;W !?3,$S($G(SDCV)=1:"(CV)",1:""),?9,$S($D(^SC(SC,"S",SDT,1,K,"OB")):"*",1:""),?10,$S(VAQK(1)]"":VAQK(1),1:"UNKNOWN PATIENT"),?41,$S(VAQK(2)]"":$E(VAQK(2),1,9),1:"")
"RTN","SDAL0",38,0)
 W !?3,$S($G(SDCV)=1:"(CV)",1:""),?9,$S($P(SDDATA,"^",7)="Y":"*",1:""),?10,$S(VAQK(1)]"":VAQK(1),1:"UNKNOWN PATIENT"),?41,$S(VAQK(2)]"":$E(VAQK(2),1,9),1:"")
"RTN","SDAL0",39,0)
 S INC=0 F SDZ=3,4,5 S X=SDZ(SDZ) D:X]"" TM^SDROUT0 S INC=SDZ#3*8+3 W ?48+INC,$J(X,8) W:INC<16 "  "
"RTN","SDAL0",40,0)
 I VAQK(12)]"" W !,?41,VAQK(12) W:VAQK(13)]"" !,?41,VAQK(13)
"RTN","SDAL0",41,0)
 W:SDOI]"" !,?15,SDOI W:SDEM]"" !,?15,SDEM,$S($D(SDCP):$P(^SC(SDCP,0),"^"),1:$P(^SC(SC,0),"^")),!,?15,SDEM1
"RTN","SDAL0",42,0)
 W !,?10,"Phone #: ",$P($G(^DPT(DFN,.13)),"^",1) ;Phone Number [Residence]
"RTN","SDAL0",43,0)
 S SDX="" F I=7:1:9 I VAQK(I) S SDX=1 Q
"RTN","SDAL0",44,0)
 ;Primary Care information
"RTN","SDAL0",45,0)
 I +$G(SDPCMM) D TDATA^SDPPTEM(DFN,"",SDD,"P",15)
"RTN","SDAL0",46,0)
 ;I SDPCMM D TDATA^SDPPTEM(DFN,"",SDD,"P",15)
"RTN","SDAL0",47,0)
 ;I SDX W !,?15,"** Requires Special Survey Disposition **"
"RTN","SDAL0",48,0)
 ;; GAF SCORE CHECK
"RTN","SDAL0",49,0)
 N SDGAF,SDGAFST
"RTN","SDAL0",50,0)
 ;I $$MHCLIN^SDUTL2(SC),'($$COLLAT^SDUTL2(+VAQK(6))!$P(SDAPPT,U,11)) D
"RTN","SDAL0",51,0)
 ;use Appt Type here since COLLATERAL VISIT field not supported by encapsulation API
"RTN","SDAL0",52,0)
 I $$MHCLIN^SDUTL2(SC),'($$COLLAT^SDUTL2(+VAQK(6))!$P($P(SDDATA,"^",10),";",2)["COLLATERAL OF VET") D
"RTN","SDAL0",53,0)
 . S SDGAF=$$NEWGAF^SDUTL2(DFN),SDGAFST=$P(SDGAF,"^")
"RTN","SDAL0",54,0)
 . W:SDGAFST !,?15,"** New GAF Score Required **"
"RTN","SDAL0",55,0)
 ;;
"RTN","SDAL0",56,0)
 I $O(SDCLY(0))  D
"RTN","SDAL0",57,0)
 .N PCL
"RTN","SDAL0",58,0)
 .S PCL=0
"RTN","SDAL0",59,0)
 .W !,?15,"** Required for facility workload credit => "
"RTN","SDAL0",60,0)
 .F  S PCL=$O(SDCLY(PCL)) Q:'PCL  D
"RTN","SDAL0",61,0)
 ..  W " ",SDCLAR(PCL)," "
"RTN","SDAL0",62,0)
 ..  I (SDCLAR(PCL)="SC")&($G(^DPT(DFN,0))]"") D
"RTN","SDAL0",63,0)
 ...  K SDELAR
"RTN","SDAL0",64,0)
 ...  S VAROOT="SDELAR"
"RTN","SDAL0",65,0)
 ...  D ELIG^VADPT
"RTN","SDAL0",66,0)
 ...  Q:'$P($G(SDELAR(3)),"^")
"RTN","SDAL0",67,0)
 ...  W $P(SDELAR(3),"^",2),"% "
"RTN","SDAL0",68,0)
 ...  K SDELAR,VAROOT
"RTN","SDAL0",69,0)
 .W "**"
"RTN","SDAL0",70,0)
 I $P(VAQK(11),"^",2)]"" W !,?15,"Means Test: ** ",$P(VAQK(11),"^",2)," **" W "   Last Test: ",$$FDATE^SDUL1($P($$LST^DGMTU(DFN),U,2))
"RTN","SDAL0",71,0)
 S SDCOPS=$$LST^DGMTU(DFN,DT,2) I +SDCOPS W !,?15,"Co-Pay Status: ","**"_$P(SDCOPS,U,3)_"**"," Last Test: ",$$FDATE^SDUL1($P(SDCOPS,U,2)) K SDCOPS
"RTN","SDAL0",72,0)
 I $D(^DIC(8,+VAQK(6),0)),$P(^(0),U,9)=13 W !,?15,"** COLLATERAL **" G Q
"RTN","SDAL0",73,0)
 ;I $P($G(^SC(SC,"S",SDT,1,K,0)),"^",10)]"" D  I V W !,?15,"** COLLATERAL **" G Q
"RTN","SDAL0",74,0)
 I +$P(SDDATA,"^",8)]"" D  I V W !,?15,"** COLLATERAL **" G Q
"RTN","SDAL0",75,0)
 .;S V=$P(^(0),"^",10),V=$S($D(^DIC(8,+V,0)):$P(^(0),"^",9)=13,1:0)
"RTN","SDAL0",76,0)
 .S V=+$P(SDDATA,"^",8),V=$S($D(^DIC(8,+V,0)):$P(^(0),"^",9)=13,1:0)
"RTN","SDAL0",77,0)
 ;I $P(SDAPPT,U,11) W !,?15,"** COLLATERAL VISIT **"
"RTN","SDAL0",78,0)
 ;use Appt Type here since COLLATERAL VISIT field not supported by encapsulation API
"RTN","SDAL0",79,0)
 I $P($P(SDDATA,"^",10),";",2)["COLLATERAL OF VET" W !,?15,"** COLLATERAL VISIT **"
"RTN","SDAL0",80,0)
 ;S:($P($G(^SC(SC,"S",SDT,1,K,0)),"^",10)=0) V=0
"RTN","SDAL0",81,0)
 I +$P($G(SDDATA),"^",8)=0 S V=0
"RTN","SDAL0",82,0)
Q I SDBC,(SDY+5)>$Y F I=1:1 Q:(SDY+5)'>$Y  W !
"RTN","SDAL0",83,0)
 I SDBC W !?9,$E(SDASH,9,255)
"RTN","SDAL0",84,0)
 S SDPCT=SDPCT+1 K V,SDX,SDMT,VAQK Q
"RTN","SDAL0",85,0)
 ;
"RTN","SDAL0",86,0)
GETA ;K SDCP S (SDZ(3),SDZ(4),SDZ(5))="" I $D(^DPT(DFN,"S",SDT,0)) F SDZ=3,4,5 S SDZ(SDZ)=$P(^(0),"^",SDZ)
"RTN","SDAL0",87,0)
 K SDCP S SDZ(3)=$P($G(SDDATA),"^",21),SDZ(4)=$P($G(SDDATA),"^",20),SDZ(5)=$P($G(SDDATA),"^",19)
"RTN","SDAL0",88,0)
 S SDEM="",SDEC=+VAQK(6) Q:'SDEC
"RTN","SDAL0",89,0)
 S SDXX=$S('$D(^DIC(8,SDEC,0)):1,$P(^(0),"^",5)'="Y":1,$P(^(0),"^",4)=4:0,$P(^(0),"^",4)=5:0,1:1) Q:SDXX
"RTN","SDAL0",90,0)
 I $D(^SC(SC,"SL")),$P(^("SL"),U,5)]"",$D(^SC($P(^("SL"),U,5),0)) S SDCP=$P(^SC(SC,"SL"),U,5)
"RTN","SDAL0",91,0)
 S SDCP=$S($D(SDCP):SDCP,1:SC) I $D(^DPT(DFN,"DE","B",SDCP)),VAQK(12)']"" S SDEA=$O(^DPT(DFN,"DE","B",SDCP,0)) I $D(^DPT(DFN,"DE",+SDEA,0)),$P(^(0),"^",2)']"",$O(^(1,0))'="" D CKCED
"RTN","SDAL0",92,0)
 Q
"RTN","SDAL0",93,0)
 ;
"RTN","SDAL0",94,0)
MORE ;K SDFS I $D(^SC(SC,"S",SDT,1)) S PT=SDT S K=0 F  S K=$O(^SC(SC,"S",SDT,1,K)) Q:'K!SDEND  I $P(^(K,0),"^",9)'["C" D PTL
"RTN","SDAL0",95,0)
 K SDFS S PT=SDT D PTL
"RTN","SDAL0",96,0)
 Q
"RTN","SDAL0",97,0)
 ;
"RTN","SDAL0",98,0)
CCLK S SDCC=0 F  S SDCC=$O(^SC(SC,"C",SDD,1,SDCC)) Q:'SDCC!SDEND  S SDPT0=$G(^DPT(+^(SDCC,0),0)) I $L(SDPT0) D
"RTN","SDAL0",99,0)
 .I ($Y+4>IOSL) D HED^SDAL Q:SDEND  W !
"RTN","SDAL0",100,0)
 .W !,"CHART REQUEST: ",$P(SDPT0,"^",1),?34,$P(SDPT0,"^",9)
"RTN","SDAL0",101,0)
 Q
"RTN","SDAL0",102,0)
 ;
"RTN","SDAL0",103,0)
CKCED S A=0 F  S A=$O(^DPT(DFN,"DE",SDEA,1,A)) Q:'A  I $P(^DPT(DFN,"DE",SDEA,1,A,0),"^",3)']"" D ENR Q
"RTN","SDAL0",104,0)
 Q
"RTN","SDAL0",105,0)
 ;
"RTN","SDAL0",106,0)
ENR S SDEDT=$P(^(0),"^",1)\1,SDDIF=DT-SDEDT,SDREV=$P(^(0),"^",5),SDDIF1=$S(SDREV:DT-SDREV,1:"") ;NAKED REFERENCE - ^DPT(DFN,"DE",SDEA,1,A,0)
"RTN","SDAL0",107,0)
 I $P(^DPT(DFN,"DE",SDEA,1,A,0),"^",2)="O",$S(SDDIF1']""&(SDDIF>10000):1,SDDIF1>10000:1,1:0) S SDEM="PATIENT HAS BEEN ENROLLED IN ",SDEM1="FOR MORE THAN 1 YEAR, PLEASE RE-EVALUATE"
"RTN","SDAL0",108,0)
 Q
"RTN","SDAL0",109,0)
 ;
"RTN","SDAL0",110,0)
CHECK() I $D(^SC(SC,0)),$P(^(0),"^",3)="C",$S(VAUTD:1,$D(VAUTD(+$P(^(0),"^",15))):1,'$P(^(0),"^",15)&$D(VAUTD(+$O(^DG(40.8,0)))):1,1:0)
"RTN","SDAL0",111,0)
 I $T,$D(^SC(SC,"ST",SDD,1)),^(1)'["**CANCELLED",$S('$D(^SC(SC,"I")):1,+^("I")'>0:1,+^("I")>SDD:1,+^("I")'>SDD&(+$P(^("I"),"^",2)>SDD!(+$P(^("I"),"^",2)=0)):0,1:1) Q 1
"RTN","SDAL0",112,0)
 Q 0
"RTN","SDAL0",113,0)
 ;
"RTN","SDAL0",114,0)
NCOUNT ;COUNT, NON-COUNT, or BOTH FOR CLINIC SELECTION
"RTN","SDAL0",115,0)
 W !,"Count, Non Count, or Both: C//" R SDCONC:DTIME
"RTN","SDAL0",116,0)
 I '$T!(SDCONC="") S SDCONC="C" Q
"RTN","SDAL0",117,0)
 Q:SDCONC=U
"RTN","SDAL0",118,0)
 I $L(SDCONC)=1,$E(SDCONC)="?" W !,"Type C, N or B" G NCOUNT
"RTN","SDAL0",119,0)
 I $E(SDCONC,1,2)="??" D  G NCOUNT
"RTN","SDAL0",120,0)
 . W !!,"Choosing ""C"" will limit the selection to COUNT clinics."
"RTN","SDAL0",121,0)
 . W !,"         ""N"" will limit the selection to NON COUNT clinics."
"RTN","SDAL0",122,0)
 . W !,"         ""B"" will give BOTH count and non count clinics.",!
"RTN","SDAL0",123,0)
 S SDCONC=$E(SDCONC),SDCONC=$TR(SDCONC,"bcn","BCN")
"RTN","SDAL0",124,0)
 I "BCN"'[SDCONC W !,"C, N or B" G NCOUNT
"RTN","SDAL0",125,0)
 Q
"RTN","SDAL0",126,0)
 ;
"RTN","SDAL0",127,0)
NCHECK() ;EXTEND $T LOGIC COUNT, NO COUNT,or BOTH  
"RTN","SDAL0",128,0)
 N NOC S NOC=$P($G(^SC(SC,0)),U,17)
"RTN","SDAL0",129,0)
 I SDCONC="B" Q 1
"RTN","SDAL0",130,0)
 I SDCONC="C"&(NOC="N") Q 1
"RTN","SDAL0",131,0)
 I SDCONC="N"&(NOC="Y") Q 1
"RTN","SDAL0",132,0)
 Q 0
"RTN","SDAL0",133,0)
 ;
"RTN","SDAL0",134,0)
NCLINIC ;SCREEN CLINICS
"RTN","SDAL0",135,0)
 N NOCC
"RTN","SDAL0",136,0)
 I SDCONC="B" S NOCC="&1"
"RTN","SDAL0",137,0)
 I SDCONC="N" S NOCC="&($P(^(0),U,17)=""Y"")"
"RTN","SDAL0",138,0)
 I SDCONC="C" S NOCC="&($P(^(0),U,17)=""N"")"
"RTN","SDAL0",139,0)
 S DIC="^SC(",DIC("S")="I $P(^(0),U,3)=""C""&'$G(^(""OOS""))"_NOCC_"&$S(VAUTD:1,$D(VAUTD(+$P(^(0),U,15))):1,'+$P(^(0),U,15)&$D(VAUTD(+$O(^DG(40.8,0)))):1,1:0)",VAUTSTR="clinic",VAUTVB="VAUTC" G FIRST^VAUTOMA
"RTN","SDAL0",140,0)
 ;
"RTN","SDAL0",141,0)
ACTIVE() ;Determine if clinic has activity to print
"RTN","SDAL0",142,0)
 ;Output: '1' if activity or selected clinic, '0' otherwise
"RTN","SDAL0",143,0)
 Q:'VAUTC 1  ;selected clinics
"RTN","SDAL0",144,0)
 Q:$O(^SC(SC,"C",SDD,1,0)) 1  ;chart request list
"RTN","SDAL0",145,0)
 ;N SDX S SDX=0 F SDT=SDD:0 S SDT=$O(^SC(SC,"S",SDT)) Q:'SDT!(SDT\1-SDD)!SDX  D
"RTN","SDAL0",146,0)
 ;.F K=0:0 S K=$O(^SC(SC,"S",SDT,1,K)) Q:'K!SDX  I $P(^(K,0),"^",9)'["C" S SDX=1
"RTN","SDAL0",147,0)
 ;.Q  ;patient appointment activity
"RTN","SDAL0",148,0)
 ;if clinic has no appts, return 0
"RTN","SDAL0",149,0)
 S SDX=1 I '$D(^TMP($J,"SDAMA301",SC)) S SDX=0
"RTN","SDAL0",150,0)
 Q SDX
"RTN","SDAMUTDT")
0^3^B9921068^n/a
"RTN","SDAMUTDT",1,0)
SDAMUTDT ;BPOIFO/JFW-Scheduling Encapsulation Utilities ; 5/17/04 1:00pm
"RTN","SDAMUTDT",2,0)
 ;;5.3;Scheduling;**266**;13 Aug 1993
"RTN","SDAMUTDT",3,0)
 ;
"RTN","SDAMUTDT",4,0)
 ;*****************************************************************
"RTN","SDAMUTDT",5,0)
 ;              CHANGE LOG
"RTN","SDAMUTDT",6,0)
 ;
"RTN","SDAMUTDT",7,0)
 ;  DATE      PATCH       DESCRIPTION
"RTN","SDAMUTDT",8,0)
 ;--------  ----------    -----------------------------------------
"RTN","SDAMUTDT",9,0)
 ;1/24/06   SD*5.3*413    ROUTINE COMPLETED
"RTN","SDAMUTDT",10,0)
 ;
"RTN","SDAMUTDT",11,0)
 ;*****************************************************************
"RTN","SDAMUTDT",12,0)
 ;
"RTN","SDAMUTDT",13,0)
FMTGMT(SDFMDT) ;convert internal fileman format to extended GMT
"RTN","SDAMUTDT",14,0)
 ;initialize variables
"RTN","SDAMUTDT",15,0)
 ;*****************************************************************
"RTN","SDAMUTDT",16,0)
 ;INPUT  SDFMDT - Fileman date/time
"RTN","SDAMUTDT",17,0)
 ;OUTPUT -1 error occurred in translation
"RTN","SDAMUTDT",18,0)
 ;       GMT date/time in ISO 8601 extended format (No Errors)
"RTN","SDAMUTDT",19,0)
 ;*****************************************************************
"RTN","SDAMUTDT",20,0)
 N SDDTM,SDGMT,SDTIME,SDOFFSET
"RTN","SDAMUTDT",21,0)
 S SDDTM=$$FMTHL7^XLFDT(SDFMDT)
"RTN","SDAMUTDT",22,0)
 Q:SDDTM<0 -1
"RTN","SDAMUTDT",23,0)
 ;extract out date and convert to ISO 8601 extended format
"RTN","SDAMUTDT",24,0)
 S SDGMT=$E(SDDTM,1,4)_"-"_$E(SDDTM,5,6)_"-"_$E(SDDTM,7,8)
"RTN","SDAMUTDT",25,0)
 ;if time is included, extract and convert to ISO 8601 external format
"RTN","SDAMUTDT",26,0)
 I $L(SDDTM)>8 D
"RTN","SDAMUTDT",27,0)
 .S SDTIME=$E(+SDDTM,9,99),SDOFFSET=$$TZ^XLFDT()
"RTN","SDAMUTDT",28,0)
 .;determine if seconds are included in time
"RTN","SDAMUTDT",29,0)
 .I $L(SDTIME)<5 D
"RTN","SDAMUTDT",30,0)
 ..;no seconds included in date/time
"RTN","SDAMUTDT",31,0)
 ..S SDGMT=SDGMT_"T"_$E(SDDTM,9,10)_":"_$E(SDDTM,11,99)
"RTN","SDAMUTDT",32,0)
 .;seconds included in date/time
"RTN","SDAMUTDT",33,0)
 .E  S SDGMT=SDGMT_"T"_$E(SDTIME,1,2)_":"_$E(SDTIME,3,4)_":"_$E(SDTIME,5,6)_SDOFFSET
"RTN","SDAMUTDT",34,0)
 Q SDGMT
"RTN","SDAMUTDT",35,0)
 ;
"RTN","SDAMUTDT",36,0)
GMTTFM(SDGMTDT) ;convert ISO 8601 extended GMT date/time to fileman format
"RTN","SDAMUTDT",37,0)
 ;initialize variables
"RTN","SDAMUTDT",38,0)
 ;*****************************************************************
"RTN","SDAMUTDT",39,0)
 ;INPUT  SDGMTDT - ISO 8601 extended GMT date/time
"RTN","SDAMUTDT",40,0)
 ;OUTPUT -1 error occurred in translation
"RTN","SDAMUTDT",41,0)
 ;       FM date/time (No Errors)
"RTN","SDAMUTDT",42,0)
 ;*****************************************************************
"RTN","SDAMUTDT",43,0)
 N SDFM,SDTIME,SDOFFSET,SDFMDTM,X,Y,%DT
"RTN","SDAMUTDT",44,0)
 ;get offset for VistA Instance
"RTN","SDAMUTDT",45,0)
 S SDOFFSET=$$TZ^XLFDT()
"RTN","SDAMUTDT",46,0)
 ;pattern match date(/time) for correctness
"RTN","SDAMUTDT",47,0)
 Q:((SDGMTDT["T")&'(SDGMTDT?4N1"-"2N1"-"2N1"T"2N1":"2N.E)) -1
"RTN","SDAMUTDT",48,0)
 Q:((SDGMTDT'["T")&'(SDGMTDT?4N1"-"2N1"-"2N)) -1
"RTN","SDAMUTDT",49,0)
 ;extract out date, removing punctuation
"RTN","SDAMUTDT",50,0)
 S SDFM=$E(SDGMTDT,1,4)_$E(SDGMTDT,6,7)_$E(SDGMTDT,9,10)
"RTN","SDAMUTDT",51,0)
 ;set parameters to validate date/time
"RTN","SDAMUTDT",52,0)
 S %DT="TXS"
"RTN","SDAMUTDT",53,0)
 ;extract out time if entered, removing all punctuation except for TZ offset
"RTN","SDAMUTDT",54,0)
 I SDGMTDT>10 D
"RTN","SDAMUTDT",55,0)
 .S SDTIME=$P($E(SDGMTDT,12,99),$E(SDOFFSET,1,1))
"RTN","SDAMUTDT",56,0)
 .;exclude time if 0's else FMTE returns previous date with .24
"RTN","SDAMUTDT",57,0)
 .Q:((SDTIME["00:00")!(SDTIME["00:00:00"))
"RTN","SDAMUTDT",58,0)
 .;determine if seconds are included in time
"RTN","SDAMUTDT",59,0)
 .I $L(SDTIME)<6 D
"RTN","SDAMUTDT",60,0)
 ..;no seconds include in date/time
"RTN","SDAMUTDT",61,0)
 ..S SDFM=SDFM_$E(SDGMTDT,12,13)_$E(SDGMTDT,15,99)
"RTN","SDAMUTDT",62,0)
 .;seconds included in date/time
"RTN","SDAMUTDT",63,0)
 .E  S SDFM=SDFM_$E(SDTIME,1,2)_$E(SDTIME,4,5)_$E(SDTIME,7,8)_"-"_SDOFFSET
"RTN","SDAMUTDT",64,0)
 ;convert date(/time) from HL7 format back to Fileman
"RTN","SDAMUTDT",65,0)
 S SDFMDTM=$$HL7TFM^XLFDT(SDFM)
"RTN","SDAMUTDT",66,0)
 Q:SDFMDTM<0 SDFMDTM ;error occurred in conversion
"RTN","SDAMUTDT",67,0)
 ;check validity of date (including leap year check)
"RTN","SDAMUTDT",68,0)
 S X=$$FMTE^XLFDT(SDFMDTM)
"RTN","SDAMUTDT",69,0)
 D ^%DT
"RTN","SDAMUTDT",70,0)
 Q:Y<0 -1 ;date(/time) not valid
"RTN","SDAMUTDT",71,0)
 Q SDFMDTM
"RTN","SDAMUTDT",72,0)
 ;
"RTN","SDAMUTDT",73,0)
SDAPIERR() ; SDAPI Error Messages.
"RTN","SDAMUTDT",74,0)
 ;*****************************************************************
"RTN","SDAMUTDT",75,0)
 ;INPUT  N/A
"RTN","SDAMUTDT",76,0)
 ;OUTPUT Extrinsic call returns error message
"RTN","SDAMUTDT",77,0)
 ;*****************************************************************
"RTN","SDAMUTDT",78,0)
 N SDERR S SDERR=$O(^TMP($J,"SDAMA301",""))
"RTN","SDAMUTDT",79,0)
 I SDERR="" Q ""
"RTN","SDAMUTDT",80,0)
 I +SDERR=101 Q "Error 101: The Appointment Database is not currently available.  Please try again later."
"RTN","SDAMUTDT",81,0)
 I +SDERR=115 Q "Error 115: Appointment request contains invalid values.  Please contact National Help Desk."
"RTN","SDAMUTDT",82,0)
 Q "Error 117: An error has occurred, check the RSA Error Log."
"RTN","SDAMUTDT",83,0)
 ;
"VER")
8.0^22.0
"BLD",5872,6)
^400
**END**
**END**
