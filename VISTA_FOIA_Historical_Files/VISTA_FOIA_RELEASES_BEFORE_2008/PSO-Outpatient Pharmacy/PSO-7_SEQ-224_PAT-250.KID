Released PSO*7*250 SEQ #224
Extracted from mail message
**KIDS**:PSO*7.0*250^

**INSTALL NAME**
PSO*7.0*250
"BLD",6153,0)
PSO*7.0*250^OUTPATIENT PHARMACY^0^3061116^y
"BLD",6153,1,0)
^^110^110^3061116^
"BLD",6153,1,1,0)
This patch will produce a tally report in the form of a Mailman message 
"BLD",6153,1,2,0)
for all prescriptions with missing expiration dates and prescriptions that
"BLD",6153,1,3,0)
are past their expiration dates but have an active status.  It also 
"BLD",6153,1,4,0)
contains corrections for two remedy tickets.
"BLD",6153,1,5,0)
 
"BLD",6153,1,6,0)
1.  The tally report will be sent to the person who installs the patch at 
"BLD",6153,1,7,0)
the site and to management on FORUM via the MailMan utility. It will be
"BLD",6153,1,8,0)
used to determine if a national patch needs to be created for correcting
"BLD",6153,1,9,0)
this issue.
"BLD",6153,1,10,0)
 
"BLD",6153,1,11,0)
During installation of this patch, the user may select to run the tally 
"BLD",6153,1,12,0)
immediately or queue it to run at a later date and time. Should it be 
"BLD",6153,1,13,0)
necessary to stop the job for emergency or to know the status of the job,
"BLD",6153,1,14,0)
a status and stop function is provided.
"BLD",6153,1,15,0)
 
"BLD",6153,1,16,0)
To stop the job, log into programmer's mode and type the D STOP^PSOTEXP1 
"BLD",6153,1,17,0)
at the command prompt.  The following is an example:
"BLD",6153,1,18,0)
 
"BLD",6153,1,19,0)
     >D STOP^PSOTEXP1                
"BLD",6153,1,20,0)
 
"BLD",6153,1,21,0)
     TALLY MISSING EXPIRATION DATES Job - set to STOP Soon
"BLD",6153,1,22,0)
 
"BLD",6153,1,23,0)
     Check Status to be sure it has stopped and is not running...
"BLD",6153,1,24,0)
          (D STATUS^PSOTEXP1)
"BLD",6153,1,25,0)
 
"BLD",6153,1,26,0)
To check the status of the TALLY MISSING EXPIRATION DATES job, log 
"BLD",6153,1,27,0)
into programmer's mode and type D STATUS^PSOTEXP1 at the command prompt.  
"BLD",6153,1,28,0)
The following is an example:
"BLD",6153,1,29,0)
 
"BLD",6153,1,30,0)
     >D STATUS^PSOTEXP1              
"BLD",6153,1,31,0)
 
"BLD",6153,1,32,0)
     Currently processing:
"BLD",6153,1,33,0)
     Date being processed > Dec 09, 2005
"BLD",6153,1,34,0)
                     RX # > 3011493
"BLD",6153,1,35,0)
 
"BLD",6153,1,36,0)
To restart the job, the patch must be re-installed.
"BLD",6153,1,37,0)
 
"BLD",6153,1,38,0)
The following is an example of the MailMan message that will be sent to
"BLD",6153,1,39,0)
management and the user who installs the patch:
"BLD",6153,1,40,0)
 
"BLD",6153,1,41,0)
Subj: Outpatient Pharmacy PSO*7*250 TALLY MISSING EXPIRATION DATES
"BLD",6153,1,42,0)
[#144218]
"BLD",6153,1,43,0)
10/25/06@09:55  12 lines
"BLD",6153,1,44,0)
From: PSO*7*250 TALLY MISSING EXPIRATION DATES  In 'IN' basket.   Page 1  
"BLD",6153,1,45,0)
*New*
"BLD",6153,1,46,0)
------------------------------------------------------------------------
"BLD",6153,1,47,0)
 
"BLD",6153,1,48,0)
The TALLY MISSING EXPIRATION DATES job for the Outpatient Pharmacy
"BLD",6153,1,49,0)
patch (PSO*7*250) started OCT 25, 2006@09:55:22
"BLD",6153,1,50,0)
and completed OCT 25, 2006@09:55:27.
"BLD",6153,1,51,0)
 
"BLD",6153,1,52,0)
Excel comma delimited data below, five headings, one data line
"BLD",6153,1,53,0)
Note that an institution of 999999999 denotes one was not found during 
"BLD",6153,1,54,0)
run.
"BLD",6153,1,55,0)
,,,,,,Total Active Rx's
"BLD",6153,1,56,0)
,Before v7 Install,Before v7 Install,After v7 Install,After v7 
"BLD",6153,1,57,0)
Install,,With
"BLD",6153,1,58,0)
,Tot Active Rx's,Tot Inactive,Tot Active,Tot Inactive,Total 
"BLD",6153,1,59,0)
Rx's,Expiration
"BLD",6153,1,60,0)
,Missing Expired,Rx's Missing,Rx's Missing,Rx's Missing,Missing,Date of 
"BLD",6153,1,61,0)
T-1
"BLD",6153,1,62,0)
Institution,Date,Expired Date,Expired Date,Expired Date,Expired Date,Day
"BLD",6153,1,63,0)
500,1,4,1,2,8,340                                                         
"BLD",6153,1,64,0)
    
"BLD",6153,1,65,0)
Enter message action (in IN basket): Ignore//
"BLD",6153,1,66,0)
 
"BLD",6153,1,67,0)
2.  Remedy tickets 166505 and 166485 related to patch PSO*7*239:
"BLD",6153,1,68,0)
 
"BLD",6153,1,69,0)
A.  It was reported that for two sites the CIDC Activity Log Clean-up
"BLD",6153,1,70,0)
process did not complete, no error was recorded, and no MailMan message
"BLD",6153,1,71,0)
was received stating the job completed.  It was found that the problem
"BLD",6153,1,72,0)
resulted from a prescription being locked by another process for an
"BLD",6153,1,73,0)
extended amount of time which resulted in the CIDC Clean-up process
"BLD",6153,1,74,0)
stopping.  For consistency in the routines at all sites, the modification
"BLD",6153,1,75,0)
to correct this issue is being included in this patch.  If your site 
"BLD",6153,1,76,0)
received the MailMan message stating that the CIDC ACTIVITY LOGS 
"BLD",6153,1,77,0)
CORRECTION job completed, no action should be taken.  Otherwise after 
"BLD",6153,1,78,0)
installation of this patch, run the CIDC Clean-up routine from
"BLD",6153,1,79,0)
programmer's mode to complete the process:
"BLD",6153,1,80,0)
 
"BLD",6153,1,81,0)
    >D ^PSOCIDC7
"BLD",6153,1,82,0)
 
"BLD",6153,1,83,0)
The clean-up routine will store any prescription that cannot be locked
"BLD",6153,1,84,0)
for correction.  The completion mailman message was modified to notate 
"BLD",6153,1,85,0)
whether such problems occurred.  If there is not a notation stating 
"BLD",6153,1,86,0)
prescriptions were locked, no further action is needed.  Otherwise 
"BLD",6153,1,87,0)
from the programmer's prompt type the following to print a report:
"BLD",6153,1,88,0)
 
"BLD",6153,1,89,0)
    >D LOCKED^PSOCIDC9
"BLD",6153,1,90,0)
 
"BLD",6153,1,91,0)
The prescriptions on the locked prescription report may be individually 
"BLD",6153,1,92,0)
corrected manually by typing the following at the programmer's prompt:
"BLD",6153,1,93,0)
 
"BLD",6153,1,94,0)
    >D FIXONE^PSOCIDC9
"BLD",6153,1,95,0)
 
"BLD",6153,1,96,0)
The prescription number will be prompted, and a message stating that the
"BLD",6153,1,97,0)
activity logs were corrected will be displayed.  If the manual clean-up
"BLD",6153,1,98,0)
process still cannot lock the prescription in order to correct the
"BLD",6153,1,99,0)
activity logs, a message stating such will be displayed.  Otherwise, a
"BLD",6153,1,100,0)
message will be displayed that no corrections are needed.  Each
"BLD",6153,1,101,0)
prescription completed is notated as such and reprinting the
"BLD",6153,1,102,0)
LOCKED^PSOCIDC9 report will show "completed" after each one.
"BLD",6153,1,103,0)
 
"BLD",6153,1,104,0)
 
"BLD",6153,1,105,0)
B.  It was reported that an error occurred when the RPT^PSOCIDC9 report
"BLD",6153,1,106,0)
was queued to a printer.  This patch corrects the queuing of the report to
"BLD",6153,1,107,0)
a printer.  To generate the report of all prescriptions affected by the
"BLD",6153,1,108,0)
clean-up process, enter the following at the programmer's prompt:
"BLD",6153,1,109,0)
 
"BLD",6153,1,110,0)
    >D RPT^PSOCIDC9
"BLD",6153,4,0)
^9.64PA^^
"BLD",6153,6)
5^
"BLD",6153,6.3)
19
"BLD",6153,"ABPKG")
n
"BLD",6153,"INID")
^
"BLD",6153,"INIT")
PSOTEXP1
"BLD",6153,"KRN",0)
^9.67PA^8989.52^19
"BLD",6153,"KRN",.4,0)
.4
"BLD",6153,"KRN",.401,0)
.401
"BLD",6153,"KRN",.402,0)
.402
"BLD",6153,"KRN",.403,0)
.403
"BLD",6153,"KRN",.5,0)
.5
"BLD",6153,"KRN",.84,0)
.84
"BLD",6153,"KRN",3.6,0)
3.6
"BLD",6153,"KRN",3.8,0)
3.8
"BLD",6153,"KRN",9.2,0)
9.2
"BLD",6153,"KRN",9.8,0)
9.8
"BLD",6153,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",6153,"KRN",9.8,"NM",1,0)
PSOTEXP1^^0^B64487464
"BLD",6153,"KRN",9.8,"NM",2,0)
PSOCIDC8^^0^B37708540
"BLD",6153,"KRN",9.8,"NM",3,0)
PSOCIDC9^^0^B60349233
"BLD",6153,"KRN",9.8,"NM","B","PSOCIDC8",2)

"BLD",6153,"KRN",9.8,"NM","B","PSOCIDC9",3)

"BLD",6153,"KRN",9.8,"NM","B","PSOTEXP1",1)

"BLD",6153,"KRN",19,0)
19
"BLD",6153,"KRN",19.1,0)
19.1
"BLD",6153,"KRN",101,0)
101
"BLD",6153,"KRN",409.61,0)
409.61
"BLD",6153,"KRN",771,0)
771
"BLD",6153,"KRN",870,0)
870
"BLD",6153,"KRN",8989.51,0)
8989.51
"BLD",6153,"KRN",8989.52,0)
8989.52
"BLD",6153,"KRN",8994,0)
8994
"BLD",6153,"KRN","B",.4,.4)

"BLD",6153,"KRN","B",.401,.401)

"BLD",6153,"KRN","B",.402,.402)

"BLD",6153,"KRN","B",.403,.403)

"BLD",6153,"KRN","B",.5,.5)

"BLD",6153,"KRN","B",.84,.84)

"BLD",6153,"KRN","B",3.6,3.6)

"BLD",6153,"KRN","B",3.8,3.8)

"BLD",6153,"KRN","B",9.2,9.2)

"BLD",6153,"KRN","B",9.8,9.8)

"BLD",6153,"KRN","B",19,19)

"BLD",6153,"KRN","B",19.1,19.1)

"BLD",6153,"KRN","B",101,101)

"BLD",6153,"KRN","B",409.61,409.61)

"BLD",6153,"KRN","B",771,771)

"BLD",6153,"KRN","B",870,870)

"BLD",6153,"KRN","B",8989.51,8989.51)

"BLD",6153,"KRN","B",8989.52,8989.52)

"BLD",6153,"KRN","B",8994,8994)

"BLD",6153,"QUES",0)
^9.62^2^1
"BLD",6153,"QUES",2,0)
POS2
"BLD",6153,"QUES",2,1)
D^::%DT
"BLD",6153,"QUES",2,"A")
Enter when to Queue the Job to run in date@time format.
"BLD",6153,"QUES",2,"B")
NOW
"BLD",6153,"QUES",2,"M")

"BLD",6153,"QUES",2,"Q")
Enter when to start the job. The default is Now. You can enter a date and time in the format like this: 030106@3:30p.
"BLD",6153,"QUES",2,"QQ")
Enter a date and time in the format like this: 030106@3:30p.
"BLD",6153,"QUES","B","POS2",2)

"BLD",6153,"REQB",0)
^9.611^^
"INIT")
PSOTEXP1
"MBREQ")
0
"PKG",206,-1)
1^1
"PKG",206,0)
OUTPATIENT PHARMACY^PSO^OUTPATIENT LABELS, PROFILE, INVENTORY, PRESCRIPTIONS
"PKG",206,20,0)
^9.402P^^
"PKG",206,22,0)
^9.49I^1^1
"PKG",206,22,1,0)
7.0^2971216^2990510^66476
"PKG",206,22,1,"PAH",1,0)
250^3061116^123457145
"PKG",206,22,1,"PAH",1,1,0)
^^110^110^3061116
"PKG",206,22,1,"PAH",1,1,1,0)
This patch will produce a tally report in the form of a Mailman message 
"PKG",206,22,1,"PAH",1,1,2,0)
for all prescriptions with missing expiration dates and prescriptions that
"PKG",206,22,1,"PAH",1,1,3,0)
are past their expiration dates but have an active status.  It also 
"PKG",206,22,1,"PAH",1,1,4,0)
contains corrections for two remedy tickets.
"PKG",206,22,1,"PAH",1,1,5,0)
 
"PKG",206,22,1,"PAH",1,1,6,0)
1.  The tally report will be sent to the person who installs the patch at 
"PKG",206,22,1,"PAH",1,1,7,0)
the site and to management on FORUM via the MailMan utility. It will be
"PKG",206,22,1,"PAH",1,1,8,0)
used to determine if a national patch needs to be created for correcting
"PKG",206,22,1,"PAH",1,1,9,0)
this issue.
"PKG",206,22,1,"PAH",1,1,10,0)
 
"PKG",206,22,1,"PAH",1,1,11,0)
During installation of this patch, the user may select to run the tally 
"PKG",206,22,1,"PAH",1,1,12,0)
immediately or queue it to run at a later date and time. Should it be 
"PKG",206,22,1,"PAH",1,1,13,0)
necessary to stop the job for emergency or to know the status of the job,
"PKG",206,22,1,"PAH",1,1,14,0)
a status and stop function is provided.
"PKG",206,22,1,"PAH",1,1,15,0)
 
"PKG",206,22,1,"PAH",1,1,16,0)
To stop the job, log into programmer's mode and type the D STOP^PSOTEXP1 
"PKG",206,22,1,"PAH",1,1,17,0)
at the command prompt.  The following is an example:
"PKG",206,22,1,"PAH",1,1,18,0)
 
"PKG",206,22,1,"PAH",1,1,19,0)
     >D STOP^PSOTEXP1                
"PKG",206,22,1,"PAH",1,1,20,0)
 
"PKG",206,22,1,"PAH",1,1,21,0)
     TALLY MISSING EXPIRATION DATES Job - set to STOP Soon
"PKG",206,22,1,"PAH",1,1,22,0)
 
"PKG",206,22,1,"PAH",1,1,23,0)
     Check Status to be sure it has stopped and is not running...
"PKG",206,22,1,"PAH",1,1,24,0)
          (D STATUS^PSOTEXP1)
"PKG",206,22,1,"PAH",1,1,25,0)
 
"PKG",206,22,1,"PAH",1,1,26,0)
To check the status of the TALLY MISSING EXPIRATION DATES job, log 
"PKG",206,22,1,"PAH",1,1,27,0)
into programmer's mode and type D STATUS^PSOTEXP1 at the command prompt.  
"PKG",206,22,1,"PAH",1,1,28,0)
The following is an example:
"PKG",206,22,1,"PAH",1,1,29,0)
 
"PKG",206,22,1,"PAH",1,1,30,0)
     >D STATUS^PSOTEXP1              
"PKG",206,22,1,"PAH",1,1,31,0)
 
"PKG",206,22,1,"PAH",1,1,32,0)
     Currently processing:
"PKG",206,22,1,"PAH",1,1,33,0)
     Date being processed > Dec 09, 2005
"PKG",206,22,1,"PAH",1,1,34,0)
                     RX # > 3011493
"PKG",206,22,1,"PAH",1,1,35,0)
 
"PKG",206,22,1,"PAH",1,1,36,0)
To restart the job, the patch must be re-installed.
"PKG",206,22,1,"PAH",1,1,37,0)
 
"PKG",206,22,1,"PAH",1,1,38,0)
The following is an example of the MailMan message that will be sent to
"PKG",206,22,1,"PAH",1,1,39,0)
management and the user who installs the patch:
"PKG",206,22,1,"PAH",1,1,40,0)
 
"PKG",206,22,1,"PAH",1,1,41,0)
Subj: Outpatient Pharmacy PSO*7*250 TALLY MISSING EXPIRATION DATES
"PKG",206,22,1,"PAH",1,1,42,0)
[#144218]
"PKG",206,22,1,"PAH",1,1,43,0)
10/25/06@09:55  12 lines
"PKG",206,22,1,"PAH",1,1,44,0)
From: PSO*7*250 TALLY MISSING EXPIRATION DATES  In 'IN' basket.   Page 1  
"PKG",206,22,1,"PAH",1,1,45,0)
*New*
"PKG",206,22,1,"PAH",1,1,46,0)
------------------------------------------------------------------------
"PKG",206,22,1,"PAH",1,1,47,0)
 
"PKG",206,22,1,"PAH",1,1,48,0)
The TALLY MISSING EXPIRATION DATES job for the Outpatient Pharmacy
"PKG",206,22,1,"PAH",1,1,49,0)
patch (PSO*7*250) started OCT 25, 2006@09:55:22
"PKG",206,22,1,"PAH",1,1,50,0)
and completed OCT 25, 2006@09:55:27.
"PKG",206,22,1,"PAH",1,1,51,0)
 
"PKG",206,22,1,"PAH",1,1,52,0)
Excel comma delimited data below, five headings, one data line
"PKG",206,22,1,"PAH",1,1,53,0)
Note that an institution of 999999999 denotes one was not found during 
"PKG",206,22,1,"PAH",1,1,54,0)
run.
"PKG",206,22,1,"PAH",1,1,55,0)
,,,,,,Total Active Rx's
"PKG",206,22,1,"PAH",1,1,56,0)
,Before v7 Install,Before v7 Install,After v7 Install,After v7 
"PKG",206,22,1,"PAH",1,1,57,0)
Install,,With
"PKG",206,22,1,"PAH",1,1,58,0)
,Tot Active Rx's,Tot Inactive,Tot Active,Tot Inactive,Total 
"PKG",206,22,1,"PAH",1,1,59,0)
Rx's,Expiration
"PKG",206,22,1,"PAH",1,1,60,0)
,Missing Expired,Rx's Missing,Rx's Missing,Rx's Missing,Missing,Date of 
"PKG",206,22,1,"PAH",1,1,61,0)
T-1
"PKG",206,22,1,"PAH",1,1,62,0)
Institution,Date,Expired Date,Expired Date,Expired Date,Expired Date,Day
"PKG",206,22,1,"PAH",1,1,63,0)
500,1,4,1,2,8,340                                                         
"PKG",206,22,1,"PAH",1,1,64,0)
    
"PKG",206,22,1,"PAH",1,1,65,0)
Enter message action (in IN basket): Ignore//
"PKG",206,22,1,"PAH",1,1,66,0)
 
"PKG",206,22,1,"PAH",1,1,67,0)
2.  Remedy tickets 166505 and 166485 related to patch PSO*7*239:
"PKG",206,22,1,"PAH",1,1,68,0)
 
"PKG",206,22,1,"PAH",1,1,69,0)
A.  It was reported that for two sites the CIDC Activity Log Clean-up
"PKG",206,22,1,"PAH",1,1,70,0)
process did not complete, no error was recorded, and no MailMan message
"PKG",206,22,1,"PAH",1,1,71,0)
was received stating the job completed.  It was found that the problem
"PKG",206,22,1,"PAH",1,1,72,0)
resulted from a prescription being locked by another process for an
"PKG",206,22,1,"PAH",1,1,73,0)
extended amount of time which resulted in the CIDC Clean-up process
"PKG",206,22,1,"PAH",1,1,74,0)
stopping.  For consistency in the routines at all sites, the modification
"PKG",206,22,1,"PAH",1,1,75,0)
to correct this issue is being included in this patch.  If your site 
"PKG",206,22,1,"PAH",1,1,76,0)
received the MailMan message stating that the CIDC ACTIVITY LOGS 
"PKG",206,22,1,"PAH",1,1,77,0)
CORRECTION job completed, no action should be taken.  Otherwise after 
"PKG",206,22,1,"PAH",1,1,78,0)
installation of this patch, run the CIDC Clean-up routine from
"PKG",206,22,1,"PAH",1,1,79,0)
programmer's mode to complete the process:
"PKG",206,22,1,"PAH",1,1,80,0)
 
"PKG",206,22,1,"PAH",1,1,81,0)
    >D ^PSOCIDC7
"PKG",206,22,1,"PAH",1,1,82,0)
 
"PKG",206,22,1,"PAH",1,1,83,0)
The clean-up routine will store any prescription that cannot be locked
"PKG",206,22,1,"PAH",1,1,84,0)
for correction.  The completion mailman message was modified to notate 
"PKG",206,22,1,"PAH",1,1,85,0)
whether such problems occurred.  If there is not a notation stating 
"PKG",206,22,1,"PAH",1,1,86,0)
prescriptions were locked, no further action is needed.  Otherwise 
"PKG",206,22,1,"PAH",1,1,87,0)
from the programmer's prompt type the following to print a report:
"PKG",206,22,1,"PAH",1,1,88,0)
 
"PKG",206,22,1,"PAH",1,1,89,0)
    >D LOCKED^PSOCIDC9
"PKG",206,22,1,"PAH",1,1,90,0)
 
"PKG",206,22,1,"PAH",1,1,91,0)
The prescriptions on the locked prescription report may be individually 
"PKG",206,22,1,"PAH",1,1,92,0)
corrected manually by typing the following at the programmer's prompt:
"PKG",206,22,1,"PAH",1,1,93,0)
 
"PKG",206,22,1,"PAH",1,1,94,0)
    >D FIXONE^PSOCIDC9
"PKG",206,22,1,"PAH",1,1,95,0)
 
"PKG",206,22,1,"PAH",1,1,96,0)
The prescription number will be prompted, and a message stating that the
"PKG",206,22,1,"PAH",1,1,97,0)
activity logs were corrected will be displayed.  If the manual clean-up
"PKG",206,22,1,"PAH",1,1,98,0)
process still cannot lock the prescription in order to correct the
"PKG",206,22,1,"PAH",1,1,99,0)
activity logs, a message stating such will be displayed.  Otherwise, a
"PKG",206,22,1,"PAH",1,1,100,0)
message will be displayed that no corrections are needed.  Each
"PKG",206,22,1,"PAH",1,1,101,0)
prescription completed is notated as such and reprinting the
"PKG",206,22,1,"PAH",1,1,102,0)
LOCKED^PSOCIDC9 report will show "completed" after each one.
"PKG",206,22,1,"PAH",1,1,103,0)
 
"PKG",206,22,1,"PAH",1,1,104,0)
 
"PKG",206,22,1,"PAH",1,1,105,0)
B.  It was reported that an error occurred when the RPT^PSOCIDC9 report
"PKG",206,22,1,"PAH",1,1,106,0)
was queued to a printer.  This patch corrects the queuing of the report to
"PKG",206,22,1,"PAH",1,1,107,0)
a printer.  To generate the report of all prescriptions affected by the
"PKG",206,22,1,"PAH",1,1,108,0)
clean-up process, enter the following at the programmer's prompt:
"PKG",206,22,1,"PAH",1,1,109,0)
 
"PKG",206,22,1,"PAH",1,1,110,0)
    >D RPT^PSOCIDC9
"QUES","POS2",0)
D^::%DT
"QUES","POS2","?")
Enter when to start the job. The default is Now. You can enter a date and time in the format like this: 030106@3:30p.
"QUES","POS2","??")
Enter a date and time in the format like this: 030106@3:30p.
"QUES","POS2","A")
Enter when to Queue the Job to run in date@time format.
"QUES","POS2","B")
NOW
"QUES","POS2","M")

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","PSOCIDC8")
0^2^B37708540^B28837769
"RTN","PSOCIDC8",1,0)
PSOCIDC8 ;BIR/LE - continuation of activity log corrections ;2/28/05 12:50pm
"RTN","PSOCIDC8",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**239,250**;DEC 1997
"RTN","PSOCIDC8",3,0)
 ;External reference to ^XUSEC supported by DBIA 10076
"RTN","PSOCIDC8",4,0)
 ;External reference to $$PROD^XUPROD(1) supported by DBIA 4440
"RTN","PSOCIDC8",5,0)
 ;External references L and UL^PSSLOCK supported by DBIA 2789
"RTN","PSOCIDC8",6,0)
 ;
"RTN","PSOCIDC8",7,0)
CHECK ;
"RTN","PSOCIDC8",8,0)
 Q:'$D(^PSRX(RXP,"A",0))&('$D(^PSRX(RXP,"COPAY",0)))
"RTN","PSOCIDC8",9,0)
 N PSOMSG,PSONTIM,PSOCHECK,SEQ,CSEQ,CSEQ2
"RTN","PSOCIDC8",10,0)
 S (PSOCHECK,SEQ,CSEQ)=0
"RTN","PSOCIDC8",11,0)
 I $D(^PSRX(RXP,"A",0)) F  S SEQ=$O(^PSRX(RXP,"A",SEQ)) Q:SEQ=""  I $G(^PSRX(RXP,"A",SEQ,0))["BKGD CIDC" S PSOCHECK=1
"RTN","PSOCIDC8",12,0)
 I $D(^PSRX(RXP,"COPAY",0)) F  S CSEQ=$O(^PSRX(RXP,"COPAY",CSEQ)) Q:CSEQ=""  I $G(^PSRX(RXP,"COPAY",CSEQ,0))["BKGD CIDC" S PSOCHECK=1
"RTN","PSOCIDC8",13,0)
 Q:'PSOCHECK
"RTN","PSOCIDC8",14,0)
CHECK1 ;
"RTN","PSOCIDC8",15,0)
 D PSOL^PSSLOCK(RXP) S PSONTIM=$G(PSONTIM)+1 G CHECK1:'$G(PSOMSG)&($G(PSONTIM)<10)
"RTN","PSOCIDC8",16,0)
 I '+$G(PSOMSG) S:'$G(FIXONE) ^XTMP(NAMSP,0,"LOCKED RX",RXP)="" S:('+$G(PSOMSG)&($G(FIXONE))) PSOFONE=1 W:$G(FIXONE) !,"Cannot lock Rx for correction.",!! Q
"RTN","PSOCIDC8",17,0)
 ;
"RTN","PSOCIDC8",18,0)
 I $D(^XTMP(NAMSP,0,"STOP")) S $P(^XTMP(NAMSP,0,"LAST"),"^",3)=$O(^PSRX("AD",PSODT),-1),$P(^XTMP(NAMSP,0,"LAST"),"^",4)=$O(^PSRX(RXP),-1) Q
"RTN","PSOCIDC8",19,0)
 N AFLG,CFLG,CDAT,CHSEQ,ADATA,CDATA,DATA,ENTRY,EDAT,EFILL,ESEQ,MDATA,NEXT
"RTN","PSOCIDC8",20,0)
 ;
"RTN","PSOCIDC8",21,0)
 I $D(^PSRX(RXP,"A",0)) D
"RTN","PSOCIDC8",22,0)
 . S SEQ=0 F  S SEQ=$O(^PSRX(RXP,"A",SEQ)) Q:SEQ=""  I $G(^PSRX(RXP,"A",SEQ,0))["BKGD CIDC" D  Q:AFLG
"RTN","PSOCIDC8",23,0)
 .. M ^XTMP(NAMSP,"A",PSODFN,RXP,"A")=^PSRX(RXP,"A") S AFLG=1
"RTN","PSOCIDC8",24,0)
 .. I $D(^PSRX(RXP,"COPAY")) M ^XTMP(NAMSP,"C",PSODFN,RXP,"COPAY")=^PSRX(RXP,"COPAY")
"RTN","PSOCIDC8",25,0)
 .. E  S ^XTMP(NAMSP,"C",PSODFN,RXP)="No previous copay activity log in file 52"
"RTN","PSOCIDC8",26,0)
 D:$G(AFLG) ACTLOG
"RTN","PSOCIDC8",27,0)
 ;
"RTN","PSOCIDC8",28,0)
 K CDATA S CFLG=0
"RTN","PSOCIDC8",29,0)
 I $D(^PSRX(RXP,"COPAY",0)) D
"RTN","PSOCIDC8",30,0)
 . S CSEQ=0 F  S CSEQ=$O(^PSRX(RXP,"COPAY",CSEQ)) Q:CSEQ=""  I $G(^PSRX(RXP,"COPAY",CSEQ,0))["BKGD CIDC" D  Q:CFLG
"RTN","PSOCIDC8",31,0)
 .. I '$D(^XTMP(NAMSP,"C",PSODFN,RXP))&(^PSRX(RXP,"COPAY",CSEQ,0)'["CIDC CLEANUP") M ^XTMP(NAMSP,"C",PSODFN,RXP,"COPAY")=^PSRX(RXP,"COPAY")
"RTN","PSOCIDC8",32,0)
 .. S CFLG=1
"RTN","PSOCIDC8",33,0)
 D:$G(CFLG)!$G(AFLG) CPLOG
"RTN","PSOCIDC8",34,0)
 D PSOUL^PSSLOCK(RXP)
"RTN","PSOCIDC8",35,0)
 Q
"RTN","PSOCIDC8",36,0)
 ;
"RTN","PSOCIDC8",37,0)
ACTLOG ;ACTIVITY LOG
"RTN","PSOCIDC8",38,0)
 S (CHSEQ,SEQ)=0
"RTN","PSOCIDC8",39,0)
 F  S SEQ=$O(^PSRX(RXP,"A",SEQ)) Q:SEQ=""  S ENTRY=$G(^PSRX(RXP,"A",SEQ,0)) I ENTRY'="" D
"RTN","PSOCIDC8",40,0)
 . I ENTRY'["BKGD CIDC" S CHSEQ=CHSEQ+1,CDATA(CHSEQ)=ENTRY Q
"RTN","PSOCIDC8",41,0)
 . S MDATA($P(ENTRY,"^"),$P(ENTRY,"^",4),SEQ)=""
"RTN","PSOCIDC8",42,0)
 ;
"RTN","PSOCIDC8",43,0)
 ;Q:'$D(CDATA)&('$D(MDATA))
"RTN","PSOCIDC8",44,0)
 ;
"RTN","PSOCIDC8",45,0)
 ;***************************** FOR LIVE RUN
"RTN","PSOCIDC8",46,0)
 I $D(CDATA)!($D(MDATA)) D
"RTN","PSOCIDC8",47,0)
 .I $D(^PSRX(RXP,"A")) K ^PSRX(RXP,"A")
"RTN","PSOCIDC8",48,0)
 .Q:'$D(CDATA)
"RTN","PSOCIDC8",49,0)
 .S (CHSEQ,SEQ)=0 F  S SEQ=$O(CDATA(SEQ)) Q:SEQ=""  S ^PSRX(RXP,"A",SEQ,0)=CDATA(SEQ),CHSEQ=SEQ
"RTN","PSOCIDC8",50,0)
 .S ^PSRX(RXP,"A",0)="^52.3DA^"_CHSEQ_"^"_CHSEQ
"RTN","PSOCIDC8",51,0)
 .S ^XTMP(NAMSP,"LOG",PSONAM,PSODFN,RXP)=""
"RTN","PSOCIDC8",52,0)
 ;*****************************
"RTN","PSOCIDC8",53,0)
 ;***---------------------------------------->>>>>>>>>>  UN-COMMENT NEXT 3 LINES FOR TESTING ONLY AND COMMENT LIVE RUN
"RTN","PSOCIDC8",54,0)
 ;S (CHSEQ,SEQ)=0 F  S SEQ=$O(CDATA(SEQ)) Q:SEQ=""  S ^XTMP("TST "_NAMSP,RXP,"A",SEQ,0)=CDATA(SEQ),CHSEQ=SEQ
"RTN","PSOCIDC8",55,0)
 ;S ^XTMP("TST "_NAMSP,RXP,"A",0)="^52.3DA^"_CHSEQ_"^"_CHSEQ
"RTN","PSOCIDC8",56,0)
 ;S ^XTMP("TST "_NAMSP,"LOG",PSONAM,PSODFN,RXP)=""
"RTN","PSOCIDC8",57,0)
 ;
"RTN","PSOCIDC8",58,0)
 Q
"RTN","PSOCIDC8",59,0)
 ;
"RTN","PSOCIDC8",60,0)
CPLOG ;COPAY ACTIVITY LOG
"RTN","PSOCIDC8",61,0)
 S (EDAT,EFILL,ESEQ)="",(CHSEQ,CSEQ2)=0
"RTN","PSOCIDC8",62,0)
 I '$D(^PSRX(RXP,"COPAY"))&($D(MDATA)) D  G SKP2
"RTN","PSOCIDC8",63,0)
 . F  S EDAT=$O(MDATA(EDAT)) Q:EDAT=""  F  S EFILL=$O(MDATA(EDAT,EFILL)) Q:EFILL=""  F  S ESEQ=$O(MDATA(EDAT,EFILL,ESEQ)) Q:ESEQ=""  D
"RTN","PSOCIDC8",64,0)
 .. S CHSEQ=CHSEQ+1,CDATA(CHSEQ)=EDAT_"^R^.5^"_EFILL_"^CIDC CLEANUP"
"RTN","PSOCIDC8",65,0)
 ;
"RTN","PSOCIDC8",66,0)
 F  S CSEQ2=$O(^PSRX(RXP,"COPAY",CSEQ2)) Q:CSEQ2=""  D
"RTN","PSOCIDC8",67,0)
 . S DATA=^PSRX(RXP,"COPAY",CSEQ2,0),CDAT=$P(DATA,"^")
"RTN","PSOCIDC8",68,0)
 . I DATA["-BKGD CIDC" S $P(DATA,"^",5)="CIDC CLEANUP"
"RTN","PSOCIDC8",69,0)
SKP .;
"RTN","PSOCIDC8",70,0)
 . I '$G(EDAT)&($D(MDATA)) S (EDAT,EFILL,ESEQ)="",EDAT=$O(MDATA(EDAT)),EFILL=$O(MDATA(EDAT,EFILL)),ESEQ=$O(MDATA(EDAT,EFILL,ESEQ))
"RTN","PSOCIDC8",71,0)
 . I EDAT<CDAT&(EDAT'="") S CHSEQ=CHSEQ+1,CDATA(CHSEQ)=EDAT_"^R^.5^"_EFILL_"^CIDC CLEANUP" K MDATA(EDAT,EFILL,ESEQ) S EDAT="" G SKP
"RTN","PSOCIDC8",72,0)
 . S CHSEQ=CHSEQ+1,CDATA(CHSEQ)=^PSRX(RXP,"COPAY",CSEQ2,0)
"RTN","PSOCIDC8",73,0)
 . I CDATA(CHSEQ)["BKGD CIDC" S $P(CDATA(CHSEQ),"^",5)="CIDC CLEANUP"
"RTN","PSOCIDC8",74,0)
 ;
"RTN","PSOCIDC8",75,0)
 I $D(MDATA) S (EDAT,EFILL,ESEQ)=""  F  S EDAT=$O(MDATA(EDAT)) Q:EDAT=""  F  S EFILL=$O(MDATA(EDAT,EFILL)) Q:EFILL=""  F  S ESEQ=$O(MDATA(EDAT,EFILL,ESEQ)) Q:ESEQ=""  D
"RTN","PSOCIDC8",76,0)
 . S CHSEQ=CHSEQ+1,CDATA(CHSEQ)=EDAT_"^R^.5^"_EFILL_"^CIDC CLEANUP"
"RTN","PSOCIDC8",77,0)
SKP2 ;
"RTN","PSOCIDC8",78,0)
 Q:'$D(CDATA)
"RTN","PSOCIDC8",79,0)
 ;
"RTN","PSOCIDC8",80,0)
 ;***************************** FOR LIVE RUN
"RTN","PSOCIDC8",81,0)
 I $D(^PSRX(RXP,"COPAY")) K ^PSRX(RXP,"COPAY")
"RTN","PSOCIDC8",82,0)
 S (CSEQ2,CHSEQ)=0 F  S CSEQ2=$O(CDATA(CSEQ2)) Q:CSEQ2=""  S ^PSRX(RXP,"COPAY",CSEQ2,0)=CDATA(CSEQ2),CHSEQ=CSEQ2
"RTN","PSOCIDC8",83,0)
 S ^PSRX(RXP,"COPAY",0)="^52.0107DA^"_CHSEQ_"^"_CHSEQ
"RTN","PSOCIDC8",84,0)
 S ^XTMP(NAMSP,"LOG",PSONAM,PSODFN,RXP)=""
"RTN","PSOCIDC8",85,0)
 ;*****************************
"RTN","PSOCIDC8",86,0)
 ;***---------------------------------------->>>>>>>>>>> UN-COMMENT NEXT 3 LINES FOR TESTING ONLY AND COMMENT LIVE RUN
"RTN","PSOCIDC8",87,0)
 ;S (CSEQ2,CHSEQ)=0 F  S CSEQ2=$O(CDATA(CSEQ2)) Q:CSEQ2=""  S ^XTMP("TST "_NAMSP,RXP,"COPAY",CSEQ2,0)=CDATA(CSEQ2),CHSEQ=CSEQ2
"RTN","PSOCIDC8",88,0)
 ;S ^XTMP("TST "_NAMSP,RXP,"COPAY",0)="^52.0107DA^"_CHSEQ_"^"_CHSEQ
"RTN","PSOCIDC8",89,0)
 ;S ^XTMP("TST "_NAMSP,"LOG",PSONAM,PSODFN,RXP)=""
"RTN","PSOCIDC8",90,0)
 Q
"RTN","PSOCIDC8",91,0)
 ;
"RTN","PSOCIDC8",92,0)
SITE ; SET UP VARIABLES NEEDED BY BILLING
"RTN","PSOCIDC8",93,0)
 S PSOSITE=$S(YY=0:$P(^PSRX(RXP,2),"^",9),1:$P($G(^PSRX(RXP,1,YY,0)),"^",9))
"RTN","PSOCIDC8",94,0)
 Q:PSOSITE=""
"RTN","PSOCIDC8",95,0)
 S PSOPAR=$G(^PS(59,PSOSITE,1))
"RTN","PSOCIDC8",96,0)
 S PSOPAR7=$G(^PS(59,PSOSITE,"IB"))
"RTN","PSOCIDC8",97,0)
 S PSOSITE7=$P($G(^PS(59,PSOSITE,"IB")),"^")
"RTN","PSOCIDC8",98,0)
 Q
"RTN","PSOCIDC8",99,0)
 ;
"RTN","PSOCIDC8",100,0)
MAIL3(MSG) ;management mail message
"RTN","PSOCIDC8",101,0)
 S PSOINST=$P($G(^DIC(4,+$P($G(^XMB(1,1,"XUS")),"^",17),99)),"^")
"RTN","PSOCIDC8",102,0)
 D NOW^%DTC S Y=% D DD^%DT S PSOEND=Y
"RTN","PSOCIDC8",103,0)
 K PSOTEXT
"RTN","PSOCIDC8",104,0)
 S:$G(DUZ) XMY(DUZ)=""
"RTN","PSOCIDC8",105,0)
 ;S XMY("ELLZEY.LINDA@FORUM.VA.GOV")=""
"RTN","PSOCIDC8",106,0)
 S:$$PROD^XUPROD(1) XMY("ELLZEY.LINDA@FORUM.VA.GOV")=""
"RTN","PSOCIDC8",107,0)
 S XMDUZ="PSO*7*239 "_JOBN
"RTN","PSOCIDC8",108,0)
 S XMSUB="STATION "_$G(PSOINST)
"RTN","PSOCIDC8",109,0)
 S XMSUB=XMSUB_$S($$PROD^XUPROD(1):" (Prod)",1:" (Test)")
"RTN","PSOCIDC8",110,0)
 S XMSUB=XMSUB_" Activity log and Copay Activity log correction "
"RTN","PSOCIDC8",111,0)
 S PSOTEXT(1)=""
"RTN","PSOCIDC8",112,0)
 S PSOTEXT(2)="Started "_PSOSTART
"RTN","PSOCIDC8",113,0)
 S PSOTEXT(3)=""
"RTN","PSOCIDC8",114,0)
 S PSOTEXT(4)="   "_MSG
"RTN","PSOCIDC8",115,0)
 S PSOTEXT(5)=""
"RTN","PSOCIDC8",116,0)
 S PSOTEXT(6)="NO FURTHER ACTION REQUIRED."
"RTN","PSOCIDC8",117,0)
 S XMTEXT="PSOTEXT(" N DIFROM D ^XMD K XMDUZ,XMTEXT,XMSUB,PSOEND
"RTN","PSOCIDC8",118,0)
 Q
"RTN","PSOCIDC8",119,0)
 ;
"RTN","PSOCIDC8",120,0)
MAIL ;
"RTN","PSOCIDC8",121,0)
 D NOW^%DTC S Y=% D DD^%DT N PSOCXPDA,PSOTEXT,XMY,XMTEXT,PSORXP,PSONCNT,PSOEND2,PSOEND
"RTN","PSOCIDC8",122,0)
 S PSOEND=Y,PSOEND2=$$FMTE^XLFDT(%,"1PS")
"RTN","PSOCIDC8",123,0)
 I $G(DUZ) S XMY(DUZ)=""
"RTN","PSOCIDC8",124,0)
 S XMDUZ="PSO*7*239 "_JOBN
"RTN","PSOCIDC8",125,0)
 S XMSUB="Outpatient Pharmacy PSO*7*239 "_JOBN
"RTN","PSOCIDC8",126,0)
 ;S XMY("ELLZEY.LINDA@FORUM.VA.GOV")=""
"RTN","PSOCIDC8",127,0)
 F PSOCXPDA=0:0 S PSOCXPDA=$O(^XUSEC("PSO COPAY",PSOCXPDA)) Q:'PSOCXPDA  S XMY(PSOCXPDA)=""
"RTN","PSOCIDC8",128,0)
 I $O(XMY(""))="" Q  ; no recipients for mail message
"RTN","PSOCIDC8",129,0)
 S PSOTEXT(1)="The "_JOBN_" job for the Outpatient Pharmacy"
"RTN","PSOCIDC8",130,0)
 S PSOTEXT(2)="patch (PSO*7*239) started "_PSOSTART
"RTN","PSOCIDC8",131,0)
 S PSOTEXT(3)="and completed "_PSOEND_"."
"RTN","PSOCIDC8",132,0)
 S PSOTEXT(4)=" ",(PSORXP,PSONCNT)=""
"RTN","PSOCIDC8",133,0)
 S PSOTEXT(5)=" "
"RTN","PSOCIDC8",134,0)
 S PSOTEXT(6)=" "
"RTN","PSOCIDC8",135,0)
 I $D(^XTMP("PSOCIDC7",0,"LOCKED RX")) D
"RTN","PSOCIDC8",136,0)
 . F  S PSORXP=$O(^XTMP("PSOCIDC7",0,"LOCKED RX",PSORXP)) Q:PSORXP=""  S PSONCNT=PSONCNT+1
"RTN","PSOCIDC8",137,0)
 . Q:'$G(PSONCNT)>0 
"RTN","PSOCIDC8",138,0)
 . S PSOTEXT(5)="There were "_PSONCNT_" locked Rx(s) that could not be processed."
"RTN","PSOCIDC8",139,0)
 . S PSOTEXT(6)="From programmer's mode, type D LOCKED^PSOCIDC9 for a report."
"RTN","PSOCIDC8",140,0)
 S PSOTEXT(7)=" "
"RTN","PSOCIDC8",141,0)
 ;
"RTN","PSOCIDC8",142,0)
 S XMTEXT="PSOTEXT(" N DIFROM D ^XMD K XMDUZ,XMTEXT,XMSUB
"RTN","PSOCIDC8",143,0)
 Q
"RTN","PSOCIDC8",144,0)
 ;
"RTN","PSOCIDC9")
0^3^B60349233^B14993294
"RTN","PSOCIDC9",1,0)
PSOCIDC9 ;BIR/LE - continuation of activity log corrections ;2/28/05 12:50pm
"RTN","PSOCIDC9",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**239,250**;DEC 1997
"RTN","PSOCIDC9",3,0)
 ;
"RTN","PSOCIDC9",4,0)
RPT ;
"RTN","PSOCIDC9",5,0)
 N JOBN,NAMSP,ZTDESC,ZTRTN,ZTQUEUED,ZTREQ
"RTN","PSOCIDC9",6,0)
 S NAMSP=$$NAMSP^PSOCIDC7
"RTN","PSOCIDC9",7,0)
 S JOBN="CIDC ACTIVITY LOG CORRECTION"
"RTN","PSOCIDC9",8,0)
 L +^XTMP(NAMSP):0 I '$T D  Q
"RTN","PSOCIDC9",9,0)
 .W !,JOBN_" job for PSO*7*239 is still running.  Halting..."
"RTN","PSOCIDC9",10,0)
 L -^XTMP(NAMSP)
"RTN","PSOCIDC9",11,0)
 W !!,"This report reflects all prescriptions where the activity and"
"RTN","PSOCIDC9",12,0)
 W !,"copay activity logs were corrected.  For detailed information,"
"RTN","PSOCIDC9",13,0)
 W !,"please view the activity and copay logs on the prescriptions."
"RTN","PSOCIDC9",14,0)
 ;
"RTN","PSOCIDC9",15,0)
 W !!,"You may queue the report to print, if you wish.",!
"RTN","PSOCIDC9",16,0)
 ;
"RTN","PSOCIDC9",17,0)
DVC ;
"RTN","PSOCIDC9",18,0)
 K %ZIS,POP,IOP S %ZIS="QM" D ^%ZIS I $G(POP) W !!,"Nothing queued to print.",! G DONE
"RTN","PSOCIDC9",19,0)
QUEUE ;
"RTN","PSOCIDC9",20,0)
 I $D(IO("Q")) S ZTRTN="START^PSOCIDC9",ZTDESC=JOBN_" CIDC Activity Logs Corrections" D ^%ZTLOAD K %ZSI W !,"Report queued to print.",! G DONE
"RTN","PSOCIDC9",21,0)
START ;
"RTN","PSOCIDC9",22,0)
 U IO
"RTN","PSOCIDC9",23,0)
 N BLDT,RXO,NAMSP,PSOFILL,PSODFN,PSONAM,PSOOUT,PSODV,RXP,SSN,PSODIV,PSODV
"RTN","PSOCIDC9",24,0)
 N CANCEL,JOBN,PSOPATID,PSOTOT
"RTN","PSOCIDC9",25,0)
 S NAMSP=$$NAMSP^PSOCIDC7
"RTN","PSOCIDC9",26,0)
 ;****************************************************** for testing only - next line
"RTN","PSOCIDC9",27,0)
 S JOBN="CIDC ACTIVITY LOGS CORRECTION"
"RTN","PSOCIDC9",28,0)
 S PSOOUT=0,PSODV=$S($E(IOST)="C":"C",1:"P")
"RTN","PSOCIDC9",29,0)
 S PSOPGCT=0,PSOPGLN=IOSL-7,PSOPGCT=1
"RTN","PSOCIDC9",30,0)
 S BLDT=$P($G(^XTMP(NAMSP,0,"LAST")),"^",2)
"RTN","PSOCIDC9",31,0)
 I '$D(DT) S DT=$$NOW^XLFDT
"RTN","PSOCIDC9",32,0)
 D TITLE
"RTN","PSOCIDC9",33,0)
 S (PSOTOT,PSONAM)=""
"RTN","PSOCIDC9",34,0)
 F  S PSONAM=$O(^XTMP(NAMSP,"LOG",PSONAM)) Q:PSONAM=""  D
"RTN","PSOCIDC9",35,0)
 .S PSODFN=""
"RTN","PSOCIDC9",36,0)
 .F  S PSODFN=$O(^XTMP(NAMSP,"LOG",PSONAM,PSODFN)) Q:PSODFN=""  D
"RTN","PSOCIDC9",37,0)
 ..S RXP=""
"RTN","PSOCIDC9",38,0)
 ..F  S RXP=$O(^XTMP(NAMSP,"LOG",PSONAM,PSODFN,RXP)) Q:RXP=""  D
"RTN","PSOCIDC9",39,0)
 ...D FULL Q:$G(PSOOUT)  S PSONAME=$P($G(^DPT(PSODFN,0)),"^"),PSOTOT=PSOTOT+1
"RTN","PSOCIDC9",40,0)
 ...W !,$E(PSONAME,1,14)
"RTN","PSOCIDC9",41,0)
 ...D PRTSSN
"RTN","PSOCIDC9",42,0)
 ...S RXO=$P($G(^PSRX(RXP,0)),"^")
"RTN","PSOCIDC9",43,0)
 ...W ?41," ",RXO  ;," (",PSOFILL,")"
"RTN","PSOCIDC9",44,0)
 W:PSOTOT'="" !,"Total number of prescriptions modified: ",PSOTOT
"RTN","PSOCIDC9",45,0)
 G END
"RTN","PSOCIDC9",46,0)
 ;
"RTN","PSOCIDC9",47,0)
FULL ;
"RTN","PSOCIDC9",48,0)
 I ($Y+7)>IOSL&('$G(PSOOUT)) D TITLE
"RTN","PSOCIDC9",49,0)
 Q
"RTN","PSOCIDC9",50,0)
 ;
"RTN","PSOCIDC9",51,0)
TITLE ;
"RTN","PSOCIDC9",52,0)
 I $G(PSODV)="C",$G(PSOPGCT)'=1 W ! K DIR S DIR(0)="E" D ^DIR K DIR I 'Y S PSOOUT=1 Q
"RTN","PSOCIDC9",53,0)
 ;
"RTN","PSOCIDC9",54,0)
 W @IOF D
"RTN","PSOCIDC9",55,0)
 . W !,"Patch PSO*7*239 - Corrected Activity and Copay Activity logs",!!
"RTN","PSOCIDC9",56,0)
 . W "Note that this report reflects all prescriptions where the activity and/or",!
"RTN","PSOCIDC9",57,0)
 . W "copay activity logs were corrected. For detailed information, please view",!
"RTN","PSOCIDC9",58,0)
 . W "the activity and copay activity log on the prescription.",!
"RTN","PSOCIDC9",59,0)
 ;
"RTN","PSOCIDC9",60,0)
 S Y=DT X ^DD("DD") W !,"Date printed: ",Y,?70,"Page: ",PSOPGCT,!
"RTN","PSOCIDC9",61,0)
 F MJT=1:1:79 W "="
"RTN","PSOCIDC9",62,0)
 ;W !?55,"Updated",?67,"Updated"
"RTN","PSOCIDC9",63,0)
 ;W !,?55,"Activity",?67,"COPAY"
"RTN","PSOCIDC9",64,0)
 W !,"PATIENT NAME     (SSN)       DIV",?42,"RX# " ;,?55,"Log",?67,"Activity Log"   ;,?55,"RELEASE DATE",?69,"REL   BILL"
"RTN","PSOCIDC9",65,0)
 W !,"---------------  -------  --------------",?42,"------------"
"RTN","PSOCIDC9",66,0)
 ;W ?55,"------------",?67,"-----------"
"RTN","PSOCIDC9",67,0)
 S PSOPGCT=PSOPGCT+1
"RTN","PSOCIDC9",68,0)
 Q
"RTN","PSOCIDC9",69,0)
 ;
"RTN","PSOCIDC9",70,0)
END ;
"RTN","PSOCIDC9",71,0)
 I '$G(PSOOUT),$G(PSODV)="C" W !!,"** End of Report **" K DIR S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR K DIR
"RTN","PSOCIDC9",72,0)
 I $G(PSODV)="C" W !
"RTN","PSOCIDC9",73,0)
 E  W @IOF
"RTN","PSOCIDC9",74,0)
DONE ;
"RTN","PSOCIDC9",75,0)
 K MJT,PSOPGCT,PSOPGLN,Y,DIR,X,IOP,POP,IO("Q"),DIRUT,DUOUT,DTOUT
"RTN","PSOCIDC9",76,0)
 D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","PSOCIDC9",77,0)
 Q
"RTN","PSOCIDC9",78,0)
 ;
"RTN","PSOCIDC9",79,0)
PRTSSN ;
"RTN","PSOCIDC9",80,0)
 S SSN=$P(^DPT(PSODFN,0),"^",9),SSN=$E(SSN,$L(SSN)-3,$L(SSN))
"RTN","PSOCIDC9",81,0)
 S PSOPATID=$E(PSONAM,1)_SSN
"RTN","PSOCIDC9",82,0)
 S PSODIV=$P($G(^PSRX(RXP,2)),"^",9)
"RTN","PSOCIDC9",83,0)
 S:PSODIV'="" PSODIV=$P($G(^PS(59,PSODIV,0)),"^",1)
"RTN","PSOCIDC9",84,0)
 W ?17,"("_PSOPATID_")"_"  "_$E(PSODIV,1,15)
"RTN","PSOCIDC9",85,0)
 Q
"RTN","PSOCIDC9",86,0)
 ;------
"RTN","PSOCIDC9",87,0)
LOCKED ;LIST OF LOCKED RX'S
"RTN","PSOCIDC9",88,0)
 N JOBN,NAMSP,ZTDESC,ZTRTN,ZTQUEUED,ZTREQ,PSODV
"RTN","PSOCIDC9",89,0)
 S NAMSP=$$NAMSP^PSOCIDC7
"RTN","PSOCIDC9",90,0)
 S JOBN="CIDC ACTIVITY LOG CORRECTION - LOCKED PRESCRIPTIONS"
"RTN","PSOCIDC9",91,0)
 L +^XTMP(NAMSP):0 I '$T D  Q
"RTN","PSOCIDC9",92,0)
 .W !,JOBN_" job for PSO*7*239 is still running.  Halting..."
"RTN","PSOCIDC9",93,0)
 L -^XTMP(NAMSP)
"RTN","PSOCIDC9",94,0)
 W !!,"This report reflects all prescriptions where the activity and",!
"RTN","PSOCIDC9",95,0)
 W "copay activity logs could not be corrected due to the Rx being locked."
"RTN","PSOCIDC9",96,0)
 ;
"RTN","PSOCIDC9",97,0)
 W !!,"You may queue the report to print, if you wish.",!
"RTN","PSOCIDC9",98,0)
 ;
"RTN","PSOCIDC9",99,0)
DVC2 ;
"RTN","PSOCIDC9",100,0)
 K %ZIS,POP,IOP S %ZIS="QM" D ^%ZIS I $G(POP) W !!,"Nothing queued to print.",! G DONE
"RTN","PSOCIDC9",101,0)
QUEUE2 ;
"RTN","PSOCIDC9",102,0)
 I $D(IO("Q")) S ZTRTN="START2^PSOCIDC9",ZTDESC=JOBN_" CIDC Activity Logs Corrections - Locked Rx's" D ^%ZTLOAD K %ZSI W !,"Report queued to print.",! G DONE
"RTN","PSOCIDC9",103,0)
START2 ;
"RTN","PSOCIDC9",104,0)
 U IO
"RTN","PSOCIDC9",105,0)
 N BLDT,NAMSP,PSODFN,PSONAM,PSONAME,PSOOUT,PSODV,RXP,SSN,PSODIV,PSOPGCT,PSOOUT
"RTN","PSOCIDC9",106,0)
 N CANCEL,JOBN,PSOPATID,PSOTOT,PSONCNT,PSORXN
"RTN","PSOCIDC9",107,0)
 S NAMSP=$$NAMSP^PSOCIDC7
"RTN","PSOCIDC9",108,0)
 S JOBN="CIDC ACTIVITY LOGS CORRECTION - Locked Rx report"
"RTN","PSOCIDC9",109,0)
 S (PSOPGCT,PSONCNT,PSOOUT)=0,PSODV=$S($E(IOST)="C":"C",1:"P")
"RTN","PSOCIDC9",110,0)
 S PSOPGLN=IOSL-7,PSOPGCT=1,RXP=""
"RTN","PSOCIDC9",111,0)
 S BLDT=$P($G(^XTMP(NAMSP,0,"LAST")),"^",2)
"RTN","PSOCIDC9",112,0)
 I '$D(DT) S DT=$$NOW^XLFDT
"RTN","PSOCIDC9",113,0)
 D TITLE2
"RTN","PSOCIDC9",114,0)
 F  S RXP=$O(^XTMP(NAMSP,0,"LOCKED RX",RXP)) Q:RXP=""  D
"RTN","PSOCIDC9",115,0)
 . D FULL2 Q:$G(PSOOUT)
"RTN","PSOCIDC9",116,0)
 . S PSONCNT=PSONCNT+1
"RTN","PSOCIDC9",117,0)
 . S (DFN,PSODFN)=$P($G(^PSRX(RXP,0)),"^",2),PSORXN=$P($G(^PSRX(RXP,0)),"^")
"RTN","PSOCIDC9",118,0)
 . S (PSONAME,PSONAM)=$P($G(^DPT(PSODFN,0)),"^") W !,$E(PSONAME,1,14)
"RTN","PSOCIDC9",119,0)
 . D PRTSSN
"RTN","PSOCIDC9",120,0)
 . W ?41," ",PSORXN
"RTN","PSOCIDC9",121,0)
 . W:^XTMP(NAMSP,0,"LOCKED RX",RXP)'="" ?60,"CORRECTED"
"RTN","PSOCIDC9",122,0)
 W !!,"Total number of prescriptions locked: ",PSONCNT,!
"RTN","PSOCIDC9",123,0)
 G END
"RTN","PSOCIDC9",124,0)
 Q
"RTN","PSOCIDC9",125,0)
 ;
"RTN","PSOCIDC9",126,0)
FULL2 ;
"RTN","PSOCIDC9",127,0)
 I ($Y+7)>IOSL&('$G(PSOOUT)) D TITLE2
"RTN","PSOCIDC9",128,0)
 Q
"RTN","PSOCIDC9",129,0)
 ;
"RTN","PSOCIDC9",130,0)
TITLE2 ;
"RTN","PSOCIDC9",131,0)
 I $G(PSODV)="C",$G(PSOPGCT)'=1 W ! K DIR S DIR(0)="E" D ^DIR K DIR I 'Y S PSOOUT=1 Q
"RTN","PSOCIDC9",132,0)
 ;
"RTN","PSOCIDC9",133,0)
 W @IOF D
"RTN","PSOCIDC9",134,0)
 . W !,"Patch PSO*7*239 - Locked Prescription Number Report",!!
"RTN","PSOCIDC9",135,0)
 . W "Note that this report reflects all prescriptions where the activity and/or",!
"RTN","PSOCIDC9",136,0)
 . W "copay activity logs could not be corrected. For detailed information,",!
"RTN","PSOCIDC9",137,0)
 . W "please view the activity and copay activity log on the prescription.",!
"RTN","PSOCIDC9",138,0)
 . W !!,"Note that FIXONE^PSOCIDC9 can be run from programmer's mode"
"RTN","PSOCIDC9",139,0)
 . W !,"to correct individual prescriptions.",!!
"RTN","PSOCIDC9",140,0)
 ;
"RTN","PSOCIDC9",141,0)
 S Y=DT X ^DD("DD") W !,"Date printed: ",Y,?70,"Page: ",PSOPGCT,!
"RTN","PSOCIDC9",142,0)
 F MJT=1:1:79 W "="
"RTN","PSOCIDC9",143,0)
 ;
"RTN","PSOCIDC9",144,0)
 W !,"PATIENT NAME     (SSN)       DIV",?42,"RX# "
"RTN","PSOCIDC9",145,0)
 W !,"---------------  -------  --------------",?42,"------------"
"RTN","PSOCIDC9",146,0)
 S PSOPGCT=PSOPGCT+1
"RTN","PSOCIDC9",147,0)
 Q
"RTN","PSOCIDC9",148,0)
 ;
"RTN","PSOCIDC9",149,0)
FIXONE ;FIX LOCKED RX'S
"RTN","PSOCIDC9",150,0)
 N RXP,SEQ,CSEQ,PSOMSG,PSONTIM,PSOCHECK,FIXONE,PSOFONE,NAMSP
"RTN","PSOCIDC9",151,0)
 W @IOF D
"RTN","PSOCIDC9",152,0)
 . W !,"This function is used to correct individual prescriptions that were locked"
"RTN","PSOCIDC9",153,0)
 . W !,"during the CIDC Activity Log clean-up process.  It verifies whether the"
"RTN","PSOCIDC9",154,0)
 . W !,"prescription needs to be corrected, and if so corrects it.  If the Rx still"
"RTN","PSOCIDC9",155,0)
 . W !,"cannot be locked for correction, a message stating such will be displayed."
"RTN","PSOCIDC9",156,0)
 . W !,"Otherwise, a message stating that no correction is needed will be displayed.",!
"RTN","PSOCIDC9",157,0)
 . W !,"For detailed information please view the activity and copay activity log on"
"RTN","PSOCIDC9",158,0)
 . W !,"the prescription.  For a listing of locked Rx's, type D LOCKED^PSOCIDC9 at"
"RTN","PSOCIDC9",159,0)
 . W !,"the programmer's prompt.",!
"RTN","PSOCIDC9",160,0)
 ;
"RTN","PSOCIDC9",161,0)
FIX2 ;
"RTN","PSOCIDC9",162,0)
 S (PSOMSG,PSONTIM,FIXONE,PSOFONE)=""
"RTN","PSOCIDC9",163,0)
 K DIC
"RTN","PSOCIDC9",164,0)
 W ! S DIC="^PSRX(",DIC(0)="QEA" D ^DIC Q:Y<0
"RTN","PSOCIDC9",165,0)
 S RXP=+Y,(DFN,PSODFN)=$P($G(^PSRX(RXP,0)),"^",2),PSONAM=$P($G(^DPT(PSODFN,0)),"^")
"RTN","PSOCIDC9",166,0)
 W !,"For Patient: ",PSONAM
"RTN","PSOCIDC9",167,0)
 S (PSOCHECK,SEQ,CSEQ)=0,NAMSP=$$NAMSP^PSOCIDC7
"RTN","PSOCIDC9",168,0)
 I $D(^PSRX(RXP,"A",0)) F  S SEQ=$O(^PSRX(RXP,"A",SEQ)) Q:SEQ=""  I $G(^PSRX(RXP,"A",SEQ,0))["BKGD CIDC" S PSOCHECK=1
"RTN","PSOCIDC9",169,0)
 I $D(^PSRX(RXP,"COPAY",0)) F  S CSEQ=$O(^PSRX(RXP,"COPAY",CSEQ)) Q:CSEQ=""  I $G(^PSRX(RXP,"COPAY",CSEQ,0))["BKGD CIDC" S PSOCHECK=1
"RTN","PSOCIDC9",170,0)
 I 'PSOCHECK W !!,"No changes are needed for this prescription.",! G FIX2
"RTN","PSOCIDC9",171,0)
 S FIXONE=1 D CHECK^PSOCIDC8
"RTN","PSOCIDC9",172,0)
 I '$G(PSOFONE) W !,"Activity logs corrected.",!! S ^XTMP("PSOCIDC7",0,"LOCKED RX",RXP)=DUZ_"^"_$H
"RTN","PSOCIDC9",173,0)
 G FIX2
"RTN","PSOCIDC9",174,0)
 Q
"RTN","PSOTEXP1")
0^1^B64487464^n/a
"RTN","PSOTEXP1",1,0)
PSOTEXP1 ;BIR/LE-Tally Missing Expiration Dates ;06/14/06
"RTN","PSOTEXP1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**250**;DEC 1997
"RTN","PSOTEXP1",3,0)
 ;External references ^DPT supported by DBIA 10035
"RTN","PSOTEXP1",4,0)
 N NAMSP,PATCH,JOBN,DTOUT,DUOUT,ZTSK,ZTRTN,ZTIO,ZTDTH,ZTDESC,QUIT,Y,ZTQUEUED,ZTREQ,ZTSAVE
"RTN","PSOTEXP1",5,0)
 S NAMSP=$$NAMSP
"RTN","PSOTEXP1",6,0)
 S JOBN="TALLY MISSING EXPIRATION DATES"
"RTN","PSOTEXP1",7,0)
 S PATCH="PSO*7*250"
"RTN","PSOTEXP1",8,0)
 ;
"RTN","PSOTEXP1",9,0)
 L +^XTMP(NAMSP):0 I '$T D  Q
"RTN","PSOTEXP1",10,0)
 . D BMES^XPDUTL(JOBN_" job is already running.  Halting...")
"RTN","PSOTEXP1",11,0)
 . D MES^XPDUTL("")
"RTN","PSOTEXP1",12,0)
 . D QUIT
"RTN","PSOTEXP1",13,0)
 ;
"RTN","PSOTEXP1",14,0)
 I '$D(^XTMP(NAMSP)) D INITXTMP(NAMSP,JOBN_", "_PATCH,90)        ;90 day life
"RTN","PSOTEXP1",15,0)
 S QUIT=0
"RTN","PSOTEXP1",16,0)
 ;
"RTN","PSOTEXP1",17,0)
 I $G(^XTMP(NAMSP,0,"LAST"))["COMPLETED" D  Q
"RTN","PSOTEXP1",18,0)
 . W !!,*7,"This job has been run before to completion on "
"RTN","PSOTEXP1",19,0)
 . W $$FMTE^XLFDT($P($G(^XTMP(NAMSP,0,"LAST")),"^",2)),!!
"RTN","PSOTEXP1",20,0)
 . W "If you want to run it again, the global subscript ^XTMP('PSOTEXP1') must be",!
"RTN","PSOTEXP1",21,0)
 . W "deleted prior to doing so.",!!
"RTN","PSOTEXP1",22,0)
 . D QUIT
"RTN","PSOTEXP1",23,0)
 ;
"RTN","PSOTEXP1",24,0)
 ;ques 2, if running from mumps prompt
"RTN","PSOTEXP1",25,0)
 I '$D(XPDQUES("POS2")) D  I 'ZTDTH D QUIT Q
"RTN","PSOTEXP1",26,0)
 . K DIR
"RTN","PSOTEXP1",27,0)
 . S DIR("A")="  Enter when to Queue the "_JOBN_" job to run in date@time   format "
"RTN","PSOTEXP1",28,0)
 . S DIR("B")="NOW"
"RTN","PSOTEXP1",29,0)
 . S DIR(0)="D^::%DT"
"RTN","PSOTEXP1",30,0)
 . S DIR("?")="Enter when to start the job. The default is Now. You can enter a date and time in the format like this: 021506@3:30p"
"RTN","PSOTEXP1",31,0)
 . D ^DIR I $D(DUOUT) W !,"Halting..." S ZTDTH="" Q
"RTN","PSOTEXP1",32,0)
 . S:$D(DTOUT) Y=$$NOW^XLFDT S ZTDTH=$$FMTH^XLFDT(Y)
"RTN","PSOTEXP1",33,0)
 ;
"RTN","PSOTEXP1",34,0)
 ;ques 2, if running from kids install
"RTN","PSOTEXP1",35,0)
 I $D(XPDQUES("POS2")) S ZTDTH=$$FMTH^XLFDT(XPDQUES("POS2"))
"RTN","PSOTEXP1",36,0)
 ;
"RTN","PSOTEXP1",37,0)
 D BMES^XPDUTL("=============================================================")
"RTN","PSOTEXP1",38,0)
 D MES^XPDUTL("Queuing background job for "_JOBN_"...")
"RTN","PSOTEXP1",39,0)
 D MES^XPDUTL("Start time: "_$$HTE^XLFDT(ZTDTH))
"RTN","PSOTEXP1",40,0)
 D MES^XPDUTL("==============================================================")
"RTN","PSOTEXP1",41,0)
 I ZTDTH="" D BMES^XPDUTL(JOBN_" NOT QUEUED") D QUIT Q
"RTN","PSOTEXP1",42,0)
 ;
"RTN","PSOTEXP1",43,0)
 S:$D(^XTMP(NAMSP,0,"LAST")) ^XTMP(NAMSP,0,"ZAUDIT",$H)="RE-STARTED ON"_"^"_$$NOW^XLFDT_"^"_$P(^XTMP(NAMSP,0,"LAST"),"^",2,5)
"RTN","PSOTEXP1",44,0)
 ;
"RTN","PSOTEXP1",45,0)
 I $P($G(^XTMP(NAMSP,0,"LAST")),"^")="STOP" D
"RTN","PSOTEXP1",46,0)
 . S $P(^XTMP(NAMSP,0,"LAST"),"^",1,2)="RUN^"_$$NOW^XLFDT
"RTN","PSOTEXP1",47,0)
 E  D
"RTN","PSOTEXP1",48,0)
 . S ^XTMP(NAMSP,0,"LAST")="RUN^"_$$NOW^XLFDT_"^^^"
"RTN","PSOTEXP1",49,0)
 ;
"RTN","PSOTEXP1",50,0)
 S ZTRTN="EN^PSOTEXP1",ZTIO=""
"RTN","PSOTEXP1",51,0)
 S ZTDESC="Background job for "_JOBN_" on prescriptions updated via "_PATCH
"RTN","PSOTEXP1",52,0)
 S ZTSAVE("JOBN")=""
"RTN","PSOTEXP1",53,0)
 L -^XTMP(NAMSP)
"RTN","PSOTEXP1",54,0)
 D ^%ZTLOAD
"RTN","PSOTEXP1",55,0)
 D:$D(ZTSK)
"RTN","PSOTEXP1",56,0)
 . D MES^XPDUTL("*** Task #"_ZTSK_" Queued! ***")
"RTN","PSOTEXP1",57,0)
 . D BMES^XPDUTL("")
"RTN","PSOTEXP1",58,0)
 D BMES^XPDUTL("")
"RTN","PSOTEXP1",59,0)
 K XPDQUES
"RTN","PSOTEXP1",60,0)
 Q
"RTN","PSOTEXP1",61,0)
QUIT ;
"RTN","PSOTEXP1",62,0)
 L -^XTMP(NAMSP)
"RTN","PSOTEXP1",63,0)
 Q
"RTN","PSOTEXP1",64,0)
EN ;
"RTN","PSOTEXP1",65,0)
 N PATCH,NAMSP S NAMSP=$$NAMSP,PATCH="PSO*7*250",JOBN="TALLY MISSING EXPIRATION DATES"
"RTN","PSOTEXP1",66,0)
 ;if can't get Lock, then already running.
"RTN","PSOTEXP1",67,0)
 L +^XTMP(NAMSP):3 I '$T D  Q
"RTN","PSOTEXP1",68,0)
 . S:$D(ZTQUEUED) ZTREQ="@"
"RTN","PSOTEXP1",69,0)
 . S $P(^XTMP(NAMSP,0,"LAST"),"^",1,2)="LOCKED^"_$$NOW^XLFDT
"RTN","PSOTEXP1",70,0)
 ;
"RTN","PSOTEXP1",71,0)
 N PSOSTART,Y,PSOS1,RXP,PSOV7,PSOARR,PSOISS,PSOEXP,PSOSTA,PSOACT,PSOINST,CC,RXE,DFN,PSODRUG,PSOINACT
"RTN","PSOTEXP1",72,0)
 ;
"RTN","PSOTEXP1",73,0)
 D NOW^%DTC S (Y,PSOS1)=% D DD^%DT S PSOSTART=Y
"RTN","PSOTEXP1",74,0)
 I '$G(DT) S DT=$$DT^XLFDT
"RTN","PSOTEXP1",75,0)
 S RXP=+$P($G(^XTMP(NAMSP,0,"LAST")),"^",4)
"RTN","PSOTEXP1",76,0)
 ;get date that PSO v7 was installed
"RTN","PSOTEXP1",77,0)
 S PSOV7=$S($P($G(^PS(59.7,1,49.99)),"^",7):$P(^PS(59.7,1,49.99),"^",7),1:$P($G(^PS(59.7,1,49.99)),"^",4))
"RTN","PSOTEXP1",78,0)
 S:PSOV7["." PSOV7=$P(PSOV7,".",1)
"RTN","PSOTEXP1",79,0)
 ;
"RTN","PSOTEXP1",80,0)
 ;^XTMP(NAMSP,INSTITUTION)=tot missing expiration dates on or before v7 install^tot missing expiration dates after v7 install^total missing expiration dates^tot past expiration date minus 1 day
"RTN","PSOTEXP1",81,0)
 ;
"RTN","PSOTEXP1",82,0)
 S PSOINST=$P($G(^DIC(4,+$P($G(^XMB(1,1,"XUS")),"^",17),99)),"^")
"RTN","PSOTEXP1",83,0)
 S:'$G(PSOINST) PSOINST="9999999999"
"RTN","PSOTEXP1",84,0)
 S PSOACT=",0,1,2,3,4,5,10,16,",PSOINACT=",11,12,13,14,15,"
"RTN","PSOTEXP1",85,0)
 N STOP K ^XTMP(NAMSP,0,"STOP") S STOP=0 S:RXP="" RXP=0
"RTN","PSOTEXP1",86,0)
 F CC=1:1 S RXP=$O(^PSRX(RXP)) Q:'RXP!(RXP'?1N.NN)  D  Q:STOP
"RTN","PSOTEXP1",87,0)
 . I $D(^XTMP(NAMSP,0,"STOP")) D  Q
"RTN","PSOTEXP1",88,0)
 . . S $P(^XTMP(NAMSP,0,"LAST"),"^",1,2)="STOP^"_$$NOW^XLFDT,STOP=1
"RTN","PSOTEXP1",89,0)
 . K PSOARR D GETS^DIQ(52,RXP_",",".01;2;6;1;20;26;100","I","PSOARR")
"RTN","PSOTEXP1",90,0)
 . S DFN=$G(PSOARR(52,RXP_",",2,"I")),PSODRUG=$G(PSOARR(52,RXP_",",6,"I")),PSOSTA=$G(PSOARR(52,RXP_",",100,"I"))
"RTN","PSOTEXP1",91,0)
 . S PSOISS=$G(PSOARR(52,RXP_",",1,"I"))
"RTN","PSOTEXP1",92,0)
 . ;--- eliminate bad Rx's
"RTN","PSOTEXP1",93,0)
 . Q:DFN=""!(PSODRUG="")
"RTN","PSOTEXP1",94,0)
 . Q:'$D(^DPT(DFN))!('$D(^PSDRUG(PSODRUG)))
"RTN","PSOTEXP1",95,0)
 . Q:$G(PSOISS)=""
"RTN","PSOTEXP1",96,0)
 . ;--- 
"RTN","PSOTEXP1",97,0)
 . S RXE=$G(PSOARR(52,RXP_",",".01","I")),PSOEXP=$G(PSOARR(52,RXP_",",26,"I"))
"RTN","PSOTEXP1",98,0)
 . ;save last date & fill info
"RTN","PSOTEXP1",99,0)
 . S $P(^XTMP(NAMSP,0,"LAST"),"^",3,5)=$G(PSOISS)_"^"_RXP
"RTN","PSOTEXP1",100,0)
 . D SET
"RTN","PSOTEXP1",101,0)
 G STP:STOP
"RTN","PSOTEXP1",102,0)
 S $P(^XTMP(NAMSP,0,"LAST"),"^",1,2)="COMPLETED^"_$$NOW^XLFDT
"RTN","PSOTEXP1",103,0)
 D MAIL
"RTN","PSOTEXP1",104,0)
STP ;
"RTN","PSOTEXP1",105,0)
 L -^XTMP(NAMSP)
"RTN","PSOTEXP1",106,0)
 I $D(^XTMP(NAMSP,0,"STOP")) S ^XTMP(NAMSP,0,"ZAUDIT",$H)="STOPPED ON"_"^"_$P(^XTMP(NAMSP,0,"LAST"),"^",2,5)
"RTN","PSOTEXP1",107,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","PSOTEXP1",108,0)
 K JOBN
"RTN","PSOTEXP1",109,0)
 ;I '$D(^XTMP(NAMSP,0,"STOP")) K ^XTMP(NAMSP)
"RTN","PSOTEXP1",110,0)
 Q
"RTN","PSOTEXP1",111,0)
 ;
"RTN","PSOTEXP1",112,0)
SET ;Data collected and stored:
"RTN","PSOTEXP1",113,0)
 ; Piece 1 - Pre-install v7 active Rx's with null expiration date
"RTN","PSOTEXP1",114,0)
 ; Piece 2 - Pre-install v7 inactive Rx's with null expiration date
"RTN","PSOTEXP1",115,0)
 ; Piece 3 - Post-install v7 active Rx's with null expiration
"RTN","PSOTEXP1",116,0)
 ; Piece 4 - Post-install v7 inactive Rx's with null expiration
"RTN","PSOTEXP1",117,0)
 ; Piece 5 - total Rx's with null expiration date
"RTN","PSOTEXP1",118,0)
 ; Piece 6 - total active Rx's with expire date of t-1 day
"RTN","PSOTEXP1",119,0)
 ;
"RTN","PSOTEXP1",120,0)
 I PSOEXP="" D  Q
"RTN","PSOTEXP1",121,0)
 . I PSOISS'>PSOV7 D
"RTN","PSOTEXP1",122,0)
 . . S:PSOACT[(","_PSOSTA_",") $P(^XTMP(NAMSP,PSOINST),"^",1)=$P($G(^XTMP(NAMSP,PSOINST)),"^",1)+1
"RTN","PSOTEXP1",123,0)
 . . S:PSOINACT[(","_PSOSTA_",") $P(^XTMP(NAMSP,PSOINST),"^",2)=$P($G(^XTMP(NAMSP,PSOINST)),"^",2)+1
"RTN","PSOTEXP1",124,0)
 . I PSOISS>PSOV7 D 
"RTN","PSOTEXP1",125,0)
 . . S:PSOACT[(","_PSOSTA_",") $P(^XTMP(NAMSP,PSOINST),"^",3)=$P($G(^XTMP(NAMSP,PSOINST)),"^",3)+1
"RTN","PSOTEXP1",126,0)
 . . S:PSOINACT[(","_PSOSTA_",") $P(^XTMP(NAMSP,PSOINST),"^",4)=$P($G(^XTMP(NAMSP,PSOINST)),"^",4)+1
"RTN","PSOTEXP1",127,0)
 . S $P(^XTMP(NAMSP,PSOINST),"^",5)=$P($G(^XTMP(NAMSP,PSOINST)),"^",5)+1
"RTN","PSOTEXP1",128,0)
 .;S ^XTMP("PSOTEXP1","MISS",RXP)=PSOINST_"^"_PSOISS_"^"_PSOV7_"^"_PSOEXP_"^"_$S($G(PSOSTA)'="":PSOSTA,1:"*")_"^"_$P($G(^PSRX(RXP,0)),"^")
"RTN","PSOTEXP1",129,0)
 ; normal daily job expires all rx's with yesterday's date, so looking for anything before yesterday.
"RTN","PSOTEXP1",130,0)
 I (PSOEXP<(DT-1))&(PSOACT[(","_PSOSTA_",")) S $P(^XTMP(NAMSP,PSOINST),"^",6)=$P($G(^XTMP(NAMSP,PSOINST)),"^",6)+1
"RTN","PSOTEXP1",131,0)
 ;.S ^XTMP("PSOTEXP1","PAST",$S($G(PSOSTA)'="":PSOSTA,1:"*"),PSOEXP,RXP)=PSOINST_"^"_PSOISS_"^"_PSOV7_"^"_PSOEXP_"^"_PSOSTA_"^"_$P($G(^PSRX(RXP,0)),"^")
"RTN","PSOTEXP1",132,0)
 Q
"RTN","PSOTEXP1",133,0)
 ;
"RTN","PSOTEXP1",134,0)
STATUS ;show status of job running
"RTN","PSOTEXP1",135,0)
 I $$ST D
"RTN","PSOTEXP1",136,0)
 . W !,"Currently processing:"
"RTN","PSOTEXP1",137,0)
 . I $G(^XTMP($$NAMSP,0,"LAST"))["COMPLETED" D
"RTN","PSOTEXP1",138,0)
 . . W !,"COMPLETED ON ",$$FMTE^XLFDT($P($G(^XTMP($$NAMSP,0,"LAST")),"^",2)),!
"RTN","PSOTEXP1",139,0)
 . W !?5,"Date being processed > ",$$FMTE^XLFDT($P(^XTMP($$NAMSP,0,"LAST"),"^",3))
"RTN","PSOTEXP1",140,0)
 . W !?5,"                RX # > ",$P(^XTMP($$NAMSP,0,"LAST"),"^",4)
"RTN","PSOTEXP1",141,0)
 . ;W !?5,"          TOTAL RX's > ",$P(^XTMP($$NAMSP,0,"LAST"),"^",5),!
"RTN","PSOTEXP1",142,0)
 E  D
"RTN","PSOTEXP1",143,0)
 .I $G(^XTMP($$NAMSP,0,"LAST"))["COMPLETED" D
"RTN","PSOTEXP1",144,0)
 .. W !,"COMPLETED ON ",$$FMTE^XLFDT($P($G(^XTMP($$NAMSP,0,"LAST")),"^",2)),!
"RTN","PSOTEXP1",145,0)
 Q
"RTN","PSOTEXP1",146,0)
 ;
"RTN","PSOTEXP1",147,0)
STOP ;stop job command
"RTN","PSOTEXP1",148,0)
 I $$ST S ^XTMP($$NAMSP,0,"STOP")="" D
"RTN","PSOTEXP1",149,0)
 . W !,"TALLY MISSING EXPIRATION DATES Job - set to STOP Soon"
"RTN","PSOTEXP1",150,0)
 . W !!,"Check Status to be sure it has stopped and is not running..."
"RTN","PSOTEXP1",151,0)
 . W !,"     (D STATUS^PSOTEXP1)"
"RTN","PSOTEXP1",152,0)
 Q
"RTN","PSOTEXP1",153,0)
ST() ;status
"RTN","PSOTEXP1",154,0)
 L +^XTMP($$NAMSP):3 I $T D  Q 0
"RTN","PSOTEXP1",155,0)
 . L -^XTMP($$NAMSP)
"RTN","PSOTEXP1",156,0)
 . W !,"*** NOT CURRENTLY RUNNING! ***",!
"RTN","PSOTEXP1",157,0)
 Q 1
"RTN","PSOTEXP1",158,0)
INITXTMP(NAMSP,TITLE,LIFE) ;create ^Xtmp according to SAC std
"RTN","PSOTEXP1",159,0)
 N BEGDT,PURGDT
"RTN","PSOTEXP1",160,0)
 S BEGDT=$$NOW^XLFDT()
"RTN","PSOTEXP1",161,0)
 S PURGDT=$$FMADD^XLFDT(BEGDT,LIFE)
"RTN","PSOTEXP1",162,0)
 S ^XTMP(NAMSP,0)=PURGDT_"^"_BEGDT_"^"_TITLE
"RTN","PSOTEXP1",163,0)
 Q
"RTN","PSOTEXP1",164,0)
NAMSP() ;
"RTN","PSOTEXP1",165,0)
 Q $T(+0)
"RTN","PSOTEXP1",166,0)
 ;
"RTN","PSOTEXP1",167,0)
MAIL ;
"RTN","PSOTEXP1",168,0)
 N PSOEND,PSOEND2,PSOTEXT,XMY,LIN,DATA,J,L,PSOINST,M,LEN
"RTN","PSOTEXP1",169,0)
 S LIN="",$P(LIN," ",80)="",LEN=80
"RTN","PSOTEXP1",170,0)
 D NOW^%DTC S Y=% D DD^%DT S PSOEND=Y
"RTN","PSOTEXP1",171,0)
 S PSOEND2=$$FMTE^XLFDT(%,"1PS")
"RTN","PSOTEXP1",172,0)
 I $G(DUZ) S XMY(DUZ)=""
"RTN","PSOTEXP1",173,0)
 S XMDUZ=PATCH_" "_JOBN
"RTN","PSOTEXP1",174,0)
 S XMSUB="Outpatient Pharmacy "_PATCH_" "_JOBN
"RTN","PSOTEXP1",175,0)
 S XMY("ELLZEY.LINDA@FORUM.VA.GOV")=""
"RTN","PSOTEXP1",176,0)
 S XMY("WHITE.ELAINE@FORUM.VA.GOV")=""
"RTN","PSOTEXP1",177,0)
 S XMY("WILLIAMSON.ERIC@FORUM.VA.GOV")=""
"RTN","PSOTEXP1",178,0)
 I $O(XMY(""))="" Q  ; no recipients for mail message
"RTN","PSOTEXP1",179,0)
 S PSOTEXT(1)="The "_JOBN_" job for the Outpatient Pharmacy"
"RTN","PSOTEXP1",180,0)
 S PSOTEXT(2)="patch ("_PATCH_") started "_PSOSTART
"RTN","PSOTEXP1",181,0)
 S PSOTEXT(3)="and completed "_PSOEND_"."
"RTN","PSOTEXP1",182,0)
 S PSOTEXT(4)=" "
"RTN","PSOTEXP1",183,0)
 S PSOTEXT(5)="Excel comma delimited data below, five headings, one data line"
"RTN","PSOTEXP1",184,0)
 S PSOTEXT(6)="Note that an institution of 999999999 denotes one was not found during run."
"RTN","PSOTEXP1",185,0)
 S PSOTEXT(7)=",,,,,,Total Active Rx's"
"RTN","PSOTEXP1",186,0)
 S PSOTEXT(8)=",Before v7 Install,Before v7 Install,After v7 Install,After v7 Install,,With"
"RTN","PSOTEXP1",187,0)
 S PSOTEXT(9)=",Tot Active Rx's,Tot Inactive,Tot Active,Tot Inactive,Total Rx's,Expiration"
"RTN","PSOTEXP1",188,0)
 S PSOTEXT(10)=",Missing Expired,Rx's Missing,Rx's Missing,Rx's Missing,Missing,Date of T-1"
"RTN","PSOTEXP1",189,0)
 S PSOTEXT(11)="Institution,Date,Expired Date,Expired Date,Expired Date,Expired Date,Day"
"RTN","PSOTEXP1",190,0)
 S PSOINST=0,L=12
"RTN","PSOTEXP1",191,0)
 F  S PSOINST=$O(^XTMP(NAMSP,PSOINST)) Q:PSOINST=""!(PSOINST'?1N.NN)  D
"RTN","PSOTEXP1",192,0)
 . S DATA=^XTMP(NAMSP,PSOINST),DATA=$TR(DATA,"^",",")
"RTN","PSOTEXP1",193,0)
 . S PSOTEXT(L)=$E((PSOINST_","_DATA_LIN),1,LEN),L=L+1
"RTN","PSOTEXP1",194,0)
 S L=L+1,PSOTEXT(L)=" "
"RTN","PSOTEXP1",195,0)
 ;
"RTN","PSOTEXP1",196,0)
 S XMTEXT="PSOTEXT(" N DIFROM D ^XMD K XMDUZ,XMTEXT,XMSUB
"RTN","PSOTEXP1",197,0)
 Q
"VER")
8.0^22.0
"BLD",6153,6)
^224
**END**
**END**
