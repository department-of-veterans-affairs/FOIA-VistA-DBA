Released XU*8*25 SEQ #17
Extracted from mail message
**KIDS**:XU*8.0*25^

**INSTALL NAME**
XU*8.0*25
"BLD",31,0)
XU*8.0*25^KERNEL^0^2960304^n
"BLD",31,1,0)
^^32^32^2960304^
"BLD",31,1,1,0)
NOIS BEC-0296-21503  Taskman getting error after install of patch XU*8*13.
"BLD",31,1,2,0)
This is only a issue for MSM sites, and then only for ones with
"BLD",31,1,3,0)
LOG SYSTEM RT turned on.  
"BLD",31,1,4,0)
 
"BLD",31,1,5,0)
routine         new checksum
"BLD",31,1,6,0)
ZOSVMSM          11540039
"BLD",31,1,7,0)
 
"BLD",31,1,8,0)
========================================================================= 
"BLD",31,1,9,0)
Installation:
"BLD",31,1,10,0)
 
"BLD",31,1,11,0)
 1. These routines is for MSM sites only. 
"BLD",31,1,12,0)
 2. Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"BLD",31,1,13,0)
    option will load the KIDS package in this message onto your system.
"BLD",31,1,14,0)
 3. Answer NO to the question:
"BLD",31,1,15,0)
    'Shall I preserve what is on disk in a separate back-up message ?'
"BLD",31,1,16,0)
 4. From the 'Installation Menu' of the KIDS menu, run the option
"BLD",31,1,17,0)
    'Verify Checksums in Transport Global' and verify that all routines
"BLD",31,1,18,0)
    have the correct checksum.
"BLD",31,1,19,0)
 5. Inhibit users from login into system. 
"BLD",31,1,20,0)
 6. From the 'Installation Menu' of the KIDS menu, run the option 'Install
"BLD",31,1,21,0)
    Package(s)' Select the package 'XU*8.0*25' and proceed with install.
"BLD",31,1,22,0)
 7. After installing this patch, you need to move the routine from 
"BLD",31,1,23,0)
    your productions account to the manager account:
"BLD",31,1,24,0)
    ZOSVMSM
"BLD",31,1,25,0)
    and in the manager account rename
"BLD",31,1,26,0)
    ZOSVMSM to %ZOSV
"BLD",31,1,27,0)
 
"BLD",31,1,28,0)
       Example: ZL ZOSVMSM ZS %ZOSV
"BLD",31,1,29,0)
       
"BLD",31,1,30,0)
 8.  On MSM move the routines to the other servers.    
"BLD",31,1,31,0)
 9. Enable user's login.
"BLD",31,1,32,0)
========================================================================= 
"BLD",31,4,0)
^9.64PA^^
"BLD",31,"KRN",0)
^9.67PA^8994^15
"BLD",31,"KRN",.4,0)
.4
"BLD",31,"KRN",.401,0)
.401
"BLD",31,"KRN",.402,0)
.402
"BLD",31,"KRN",.403,0)
.403
"BLD",31,"KRN",.5,0)
.5
"BLD",31,"KRN",.84,0)
.84
"BLD",31,"KRN",3.6,0)
3.6
"BLD",31,"KRN",9.2,0)
9.2
"BLD",31,"KRN",9.8,0)
9.8
"BLD",31,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",31,"KRN",9.8,"NM",1,0)
ZOSVMSM^^0^B34007107
"BLD",31,"KRN",9.8,"NM","B","ZOSVMSM",1)

"BLD",31,"KRN",19,0)
19
"BLD",31,"KRN",19.1,0)
19.1
"BLD",31,"KRN",101,0)
101
"BLD",31,"KRN",409.61,0)
409.61
"BLD",31,"KRN",8994,0)
8994
"BLD",31,"KRN",8995,0)
8995
"BLD",31,"KRN","B",.4,.4)

"BLD",31,"KRN","B",.401,.401)

"BLD",31,"KRN","B",.402,.402)

"BLD",31,"KRN","B",.403,.403)

"BLD",31,"KRN","B",.5,.5)

"BLD",31,"KRN","B",.84,.84)

"BLD",31,"KRN","B",3.6,3.6)

"BLD",31,"KRN","B",9.2,9.2)

"BLD",31,"KRN","B",9.8,9.8)

"BLD",31,"KRN","B",19,19)

"BLD",31,"KRN","B",19.1,19.1)

"BLD",31,"KRN","B",101,101)

"BLD",31,"KRN","B",409.61,409.61)

"BLD",31,"KRN","B",8994,8994)

"BLD",31,"KRN","B",8995,8995)

"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^XUDOCV7 NEW FEATURES
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^2950703^2951018^4
"PKG",3,22,1,"PAH",1,0)
25^2960304
"PKG",3,22,1,"PAH",1,1,0)
^^32^32^2960304
"PKG",3,22,1,"PAH",1,1,1,0)
NOIS BEC-0296-21503  Taskman getting error after install of patch XU*8*13.
"PKG",3,22,1,"PAH",1,1,2,0)
This is only a issue for MSM sites, and then only for ones with
"PKG",3,22,1,"PAH",1,1,3,0)
LOG SYSTEM RT turned on.  
"PKG",3,22,1,"PAH",1,1,4,0)
 
"PKG",3,22,1,"PAH",1,1,5,0)
routine         new checksum
"PKG",3,22,1,"PAH",1,1,6,0)
ZOSVMSM          11540039
"PKG",3,22,1,"PAH",1,1,7,0)
 
"PKG",3,22,1,"PAH",1,1,8,0)
========================================================================= 
"PKG",3,22,1,"PAH",1,1,9,0)
Installation:
"PKG",3,22,1,"PAH",1,1,10,0)
 
"PKG",3,22,1,"PAH",1,1,11,0)
 1. These routines is for MSM sites only. 
"PKG",3,22,1,"PAH",1,1,12,0)
 2. Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"PKG",3,22,1,"PAH",1,1,13,0)
    option will load the KIDS package in this message onto your system.
"PKG",3,22,1,"PAH",1,1,14,0)
 3. Answer NO to the question:
"PKG",3,22,1,"PAH",1,1,15,0)
    'Shall I preserve what is on disk in a separate back-up message ?'
"PKG",3,22,1,"PAH",1,1,16,0)
 4. From the 'Installation Menu' of the KIDS menu, run the option
"PKG",3,22,1,"PAH",1,1,17,0)
    'Verify Checksums in Transport Global' and verify that all routines
"PKG",3,22,1,"PAH",1,1,18,0)
    have the correct checksum.
"PKG",3,22,1,"PAH",1,1,19,0)
 5. Inhibit users from login into system. 
"PKG",3,22,1,"PAH",1,1,20,0)
 6. From the 'Installation Menu' of the KIDS menu, run the option 'Install
"PKG",3,22,1,"PAH",1,1,21,0)
    Package(s)' Select the package 'XU*8.0*25' and proceed with install.
"PKG",3,22,1,"PAH",1,1,22,0)
 7. After installing this patch, you need to move the routine from 
"PKG",3,22,1,"PAH",1,1,23,0)
    your productions account to the manager account:
"PKG",3,22,1,"PAH",1,1,24,0)
    ZOSVMSM
"PKG",3,22,1,"PAH",1,1,25,0)
    and in the manager account rename
"PKG",3,22,1,"PAH",1,1,26,0)
    ZOSVMSM to %ZOSV
"PKG",3,22,1,"PAH",1,1,27,0)
 
"PKG",3,22,1,"PAH",1,1,28,0)
       Example: ZL ZOSVMSM ZS %ZOSV
"PKG",3,22,1,"PAH",1,1,29,0)
       
"PKG",3,22,1,"PAH",1,1,30,0)
 8.  On MSM move the routines to the other servers.    
"PKG",3,22,1,"PAH",1,1,31,0)
 9. Enable user's login.
"PKG",3,22,1,"PAH",1,1,32,0)
========================================================================= 
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options and Menu Options
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","ZOSVMSM")
0^1^B34007107
"RTN","ZOSVMSM",1,0)
%ZOSV ;SFISC/AC - $View commands for MSM-PC/PLUS ;3/4/96  12:46
"RTN","ZOSVMSM",2,0)
 ;;8.0;KERNEL;**13,25**;Jul 10, 1995
"RTN","ZOSVMSM",3,0)
 ;
"RTN","ZOSVMSM",4,0)
ACTJ() ;
"RTN","ZOSVMSM",5,0)
 Q $S($$V3:$V($V(44)+168,-3,2),1:$V(168,-4,2))
"RTN","ZOSVMSM",6,0)
AVJ() ;
"RTN","ZOSVMSM",7,0)
 Q $S($$V3:$V($V(44)+94,-3,2)+1-$V($V(44)+168,-3,2),1:$V($V(3,-5),-3,0)-$V(168,-4,2))
"RTN","ZOSVMSM",8,0)
T0 ; start RT clock
"RTN","ZOSVMSM",9,0)
 I $$OSTYPE()'=1 S XRT0=$H Q
"RTN","ZOSVMSM",10,0)
 S XRT0=$P($H,",")_","_($V(#46C,-3,4)*5.4925\1/100) Q
"RTN","ZOSVMSM",11,0)
T1 ; store RT datum
"RTN","ZOSVMSM",12,0)
 I $$OSTYPE()'=1 S ^%ZRTL(3,XRTL,+$H,$P($H,",",2))=XTR0 K XTR0 Q
"RTN","ZOSVMSM",13,0)
 S ^%ZRTL(3,XRTL,+$H,XRTN,$V(#46C,-3,4)*5.4925\1/100)=XRT0 K XRT0 Q
"RTN","ZOSVMSM",14,0)
JOBPAR ;
"RTN","ZOSVMSM",15,0)
 S Y=$V(2,X,2) Q:'Y
"RTN","ZOSVMSM",16,0)
 S Y=$ZU(Y#32,Y\32) Q
"RTN","ZOSVMSM",17,0)
PROGMODE() ;
"RTN","ZOSVMSM",18,0)
 Q $V(0,$J,2)#2
"RTN","ZOSVMSM",19,0)
PRGMODE ;
"RTN","ZOSVMSM",20,0)
 W ! S ZTPAC=$S('$D(^VA(200,+DUZ,.1)):"",1:$P(^(.1),U,5)),XUVOL=^%ZOSF("VOL")
"RTN","ZOSVMSM",21,0)
 ;I ZTPAC="" W *7,"YOU HAVE NO PROGRAMMER ACCESS CODE!",! Q
"RTN","ZOSVMSM",22,0)
 I ZTPAC]"" X ^%ZOSF("EOFF") R !,"PAC: ",X:60 X ^%ZOSF("EON") I X'=ZTPAC W "??",*7 Q
"RTN","ZOSVMSM",23,0)
 S XMB="XUPROGMODE",XMB(1)=DUZ,XMB(2)=$I D ^XMB:$L($T(^XMB)) D BYE^XUSCLEAN K ZTPAC,X,XMB
"RTN","ZOSVMSM",24,0)
 S ZOSVER='$ZB($V(140,$J,2),512,1) ; 1 if V 2.1+ err trapping in effect
"RTN","ZOSVMSM",25,0)
 X ^%ZOSF("UCI") S XUCI=Y,XQZ="PRGM^ZUA[MGR]",XUSLNT=1 D DO^%XUCI B:ZOSVER 2 V 0:$J:$ZB($V(0,$J,2),1,7):2 S $ZE="PRGMODEX^%ZOSV" ABORT
"RTN","ZOSVMSM",26,0)
PRGMODEX W !,"YOU ARE NOW IN PROGRAMMING MODE!",! S $ZE="" B:ZOSVER -2 K ZOSVER Q
"RTN","ZOSVMSM",27,0)
 ;
"RTN","ZOSVMSM",28,0)
SIGNOFF ;
"RTN","ZOSVMSM",29,0)
 I 0
"RTN","ZOSVMSM",30,0)
 ;I $V($V(44)+4,-3,2)\32768#2 Q
"RTN","ZOSVMSM",31,0)
 Q
"RTN","ZOSVMSM",32,0)
UCI ;
"RTN","ZOSVMSM",33,0)
 S Y=$ZU(0) Q  ;X ^%ZOSF("UCI") Q
"RTN","ZOSVMSM",34,0)
 ;
"RTN","ZOSVMSM",35,0)
UCICHECK(X) ;
"RTN","ZOSVMSM",36,0)
 N Y,I S Y="",$ZT="BADUCI^%ZOSV"
"RTN","ZOSVMSM",37,0)
 I X["," S Y=$ZU($P(X,","),$P(X,",",2)),(X,Y)=$ZU($P(Y,","),$P(Y,",",2)) Q:Y]"" Y
"RTN","ZOSVMSM",38,0)
 F I=1:1:64 G:$ZU(I)="" BADUCI Q:$ZU(I)=X!($P($ZU(I),",")=X)!(I=X)
"RTN","ZOSVMSM",39,0)
 Q $ZU(I)
"RTN","ZOSVMSM",40,0)
 ;
"RTN","ZOSVMSM",41,0)
BADUCI Q ""
"RTN","ZOSVMSM",42,0)
 ;
"RTN","ZOSVMSM",43,0)
BAUD S Y=^%ZOSF("MGR"),X=$S($D(^%ZIS(1,D0,0)):$P(^(0),"^",2),1:"")
"RTN","ZOSVMSM",44,0)
 Q:X=""  I '$D(^[Y]SYS(0,"DDB",+X)) S X="" Q
"RTN","ZOSVMSM",45,0)
 S X=$P(^(+X),",",3)#100 Q:'X
"RTN","ZOSVMSM",46,0)
 S X=$P("50,75,110,134.5,150,300,600,1200,1800,2400,3600,4800,9600",",",X) Q
"RTN","ZOSVMSM",47,0)
 ;
"RTN","ZOSVMSM",48,0)
LGR() Q $ZR ;Last global ref.
"RTN","ZOSVMSM",49,0)
 ;
"RTN","ZOSVMSM",50,0)
EC() Q $ZE ;Error code
"RTN","ZOSVMSM",51,0)
 ;
"RTN","ZOSVMSM",52,0)
DOLRO ;SAVE ENTIRE SYMBOL TABLE IN LOCATION SPECIFIED BY X
"RTN","ZOSVMSM",53,0)
 S Y="%" F %=0:0 S Y=$O(@Y) Q:Y=""  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVMSM",54,0)
 Q
"RTN","ZOSVMSM",55,0)
 ;
"RTN","ZOSVMSM",56,0)
ORDER ;SAVE PART OF SYMBOL TABLE IN LOCATION SPECIFIED BY X
"RTN","ZOSVMSM",57,0)
 S (Y,Y1)=$P(Y,"*",1) I $D(@Y)=0 F %=0:0 S Y=$O(@Y) Q:Y=""!(Y[Y1)
"RTN","ZOSVMSM",58,0)
 Q:Y=""  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVMSM",59,0)
 F %=0:0 S Y=$O(@Y) Q:Y=""!(Y'[Y1)  S %=$D(@Y) S:%#2 @(X_"Y)="_Y) I %>9 S %X=Y_"(",%Y=X_"Y," D %XY^%RCR
"RTN","ZOSVMSM",60,0)
 K %,X,Y,Y1 Q
"RTN","ZOSVMSM",61,0)
 ;
"RTN","ZOSVMSM",62,0)
PRIORITY ;
"RTN","ZOSVMSM",63,0)
 N %D,%P S %P=(X>5) D INT^%HL Q
"RTN","ZOSVMSM",64,0)
 ;
"RTN","ZOSVMSM",65,0)
PRIINQ() ;
"RTN","ZOSVMSM",66,0)
 Q $S($V(20,$J,2):10,1:1)
"RTN","ZOSVMSM",67,0)
PARSIZ ;
"RTN","ZOSVMSM",68,0)
 S X=3 Q
"RTN","ZOSVMSM",69,0)
 ;
"RTN","ZOSVMSM",70,0)
NOLOG ;
"RTN","ZOSVMSM",71,0)
 S Y=$S($$V3:"$V($V(44)+4,-3,2)",1:"$V(4,-4,2)")_"\64#2" Q
"RTN","ZOSVMSM",72,0)
 ;
"RTN","ZOSVMSM",73,0)
DEVOPN ;
"RTN","ZOSVMSM",74,0)
 ;X=$J,Y=List of devices separated by a comma
"RTN","ZOSVMSM",75,0)
 N %,%1,%I,%X
"RTN","ZOSVMSM",76,0)
 S Y=""
"RTN","ZOSVMSM",77,0)
 I $$V3 S %=$V($V(44)+10,-3,2),%1=$V($V(44)+8,-3,2)+$V(44),%=$V(%*5+%1)
"RTN","ZOSVMSM",78,0)
 E  S %=$V(5,-5,0)
"RTN","ZOSVMSM",79,0)
 F %I=1:1:255 S %X=$V(%+%I+%I,-3,2) I %X,%X#4=0,%X/4=X S Y=Y_%I_","
"RTN","ZOSVMSM",80,0)
 Q
"RTN","ZOSVMSM",81,0)
DEVOK ;
"RTN","ZOSVMSM",82,0)
 ;X=Device $I, Y=0 if available, Y=Job # if owned,
"RTN","ZOSVMSM",83,0)
 ;Y=-1 if device is undefined.
"RTN","ZOSVMSM",84,0)
 G RES:$G(X1)="RES" I $E(X)="/"!($E(X)="\") S Y=0 Q
"RTN","ZOSVMSM",85,0)
 I X=2 S Y=0 Q
"RTN","ZOSVMSM",86,0)
 I X'?1.N!(X'>0!(X'<1024)) S Y=-1 Q
"RTN","ZOSVMSM",87,0)
 N %
"RTN","ZOSVMSM",88,0)
 I $$VERSION(1)["NT" D DVOPN Q
"RTN","ZOSVMSM",89,0)
 ;
"RTN","ZOSVMSM",90,0)
 I $$V3 S %=$V($V(44)+8,-3,2)+$V(44),%=$V($V($V(44)+10,-3,2)*5+%),Y=$V(%+X+X,-3,2),Y=$S(Y=0:0,Y#4=0:Y/4,1:-1)
"RTN","ZOSVMSM",91,0)
 E  S %=$V(5,-5,0),Y=$V(%+X+X,-3,2),Y=$S(Y=0:0,Y#4=0:Y/4+$V(272,-4),1:-1)
"RTN","ZOSVMSM",92,0)
 I 'Y D DVOPN Q
"RTN","ZOSVMSM",93,0)
 S:Y=$J Y=0 Q
"RTN","ZOSVMSM",94,0)
DVOPN S $ZT="DVERR",Y=0 Q:$D(%ZTIO)
"RTN","ZOSVMSM",95,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZOSVMSM",96,0)
 O X::$S($D(%ZISTO):%ZISTO,1:0) E  S Y=999 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZOSVMSM",97,0)
 L:$D(%ZISLOCK) -@%ZISLOCK
"RTN","ZOSVMSM",98,0)
 S Y=0 I '$D(%ZISCHK)!$S($D(%ZIS)#2:(%ZIS["T"),1:0) C X Q
"RTN","ZOSVMSM",99,0)
 S:X]"" IO(1,X)="" Q
"RTN","ZOSVMSM",100,0)
DVERR I $ZE["OPENERR" S Y=-1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZOSVMSM",101,0)
 I $ZE["<NODEV>" S Y=-1 L:$D(%ZISLOCK) -@%ZISLOCK Q
"RTN","ZOSVMSM",102,0)
 ZQ
"RTN","ZOSVMSM",103,0)
RES S Y=0,%ZISD0=$O(^%ZISL(3.54,"B",X,0))
"RTN","ZOSVMSM",104,0)
 I '%ZISD0 S Y=-1,%ZISD0=%O(^%ZIS(1,"C",X)) Q:'%ZISD0  Q:'$D(^%ZIS(1,+%ZISD0,0))  Q:$P(^(0),"^")'=X  Q:'$D(^("TYPE"))  Q:^("TYPE")'="RES"  S Y=0 Q
"RTN","ZOSVMSM",105,0)
 S X1=$S($D(^%ZISL(3.54,+%ZISD0,0)):^(0),1:"")
"RTN","ZOSVMSM",106,0)
 I $P(X1,"^",2)&(X=$P(X1,"^")) S Y=0 Q
"RTN","ZOSVMSM",107,0)
 S Y=999 F %ZISD1=0:0 S %ZISD1=$O(^%ZISL(3.54,%ZISD0,1,%ZISD1)) Q:%ZISD1'>0  I $D(^(%ZISD1,0)) S Y=$P(^(0),"^",3) Q
"RTN","ZOSVMSM",108,0)
 K %ZISD0,%ZISD1
"RTN","ZOSVMSM",109,0)
 Q
"RTN","ZOSVMSM",110,0)
V2CL1 F %=0:0 Q:$ZA<0  R %X:5 Q:%X']""  F %1=0:0 S %1=$L(%Y),%Y=%Y_$E(%X,1,255-%1),%X=$E(%X,256-%1,$L(%X)),%1=$F(%Y,%ZCR) Q:%1'>0  S %2=$E(%Y,$A(%Y)=10+1,%1-2),%Y=$E(%Y,%1,$L(%Y)) D V2CL2
"RTN","ZOSVMSM",111,0)
 I %Y]"" S %2=$E(%Y,$A(%Y)=10+1,$L(%Y)) D V2CL2
"RTN","ZOSVMSM",112,0)
 C 2:256 K IO(1,2) D CLOSE^ZISPL1 K %Y,%X,%1,ZOSFV
"RTN","ZOSVMSM",113,0)
 Q
"RTN","ZOSVMSM",114,0)
V2CL2 S %1=$F(%2,$C(12)) I %1>0 S %=%+1 D LIMIT:%Z1<% Q:%Z1<%  S ^XMBS(3.519,XS,2,%,0)="|TOP|",%2=$E(%2,1,%1-2)_$E(%2,%1,$L(%2))
"RTN","ZOSVMSM",115,0)
 S %=%+1,^XMBS(3.519,XS,2,%,0)=%2 Q
"RTN","ZOSVMSM",116,0)
 ;
"RTN","ZOSVMSM",117,0)
LIMIT S ^XMBS(3.519,XS,2,%,0)="*** INCOMPLETE REPORT  -- SPOOL DOCUMENT LINE LIMIT EXCEEDED ***",$P(^XMB(3.51,%ZDA,0),"^",11)=1 Q
"RTN","ZOSVMSM",118,0)
 ;
"RTN","ZOSVMSM",119,0)
SET ;SET SPECIAL VARIABLES
"RTN","ZOSVMSM",120,0)
 S X=$H X ^%ZOSF("ZD") S DT=$E(Y,7,8)+200_$E(Y,1,2)_$E(Y,4,5)
"RTN","ZOSVMSM",121,0)
 Q
"RTN","ZOSVMSM",122,0)
GETENV ;Get enviroment  (UCI^VOL^NODE)
"RTN","ZOSVMSM",123,0)
 S Y=$P($ZU(0),",",1)_"^"_$P($ZU(0),",",2)_"^^"_$P($ZU(0),",",2)
"RTN","ZOSVMSM",124,0)
 Q
"RTN","ZOSVMSM",125,0)
VERSION(X) ;return OS version, X=1 - return OS
"RTN","ZOSVMSM",126,0)
 Q $S($G(X):$P($ZV,"Version "),1:$P($ZV,"Version ",2))
"RTN","ZOSVMSM",127,0)
V3() ;returns 1=version 3, 0=version 4
"RTN","ZOSVMSM",128,0)
 Q $P($ZV,"Version ",2)<4
"RTN","ZOSVMSM",129,0)
OSTYPE() ;Return 1 = PC/PLUS, 2 = NT, 3 = UNIX
"RTN","ZOSVMSM",130,0)
 N % S %=$$VERSION(1)
"RTN","ZOSVMSM",131,0)
 Q $S(%["MSM-PC/PLUS":1,%["Windows NT":2,1:3)
"RTN","ZOSVMSM",132,0)
 ;
"RTN","ZOSVMSM",133,0)
SETNM(X) ;Set name, Fall into SETENV
"RTN","ZOSVMSM",134,0)
SETENV ;Set enviroment
"RTN","ZOSVMSM",135,0)
 Q
"RTN","ZOSVMSM",136,0)
ZHDIF ;Display dif of two $$ZH^%MSMOPS's
"RTN","ZOSVMSM",137,0)
 S U="^" W !?2,"CPU=",$J($P(%ZH1,U)-$P(%ZH0,U),6,2),?14,"ET=",$J($P(%ZH1,U,7)-$P(%ZH0,U,7),6,2),?25,"PRD=",$J($P(%ZH1,U,3)-$P(%ZH0,U,3),4),?35,"LRD=",$J($P(%ZH1,U,2)-$P(%ZH0,U,2),6),?47,"LWT=",$J($P(%ZH1,U,4)-$P(%ZH0,U,4),5)
"RTN","ZOSVMSM",138,0)
 W ?58,"TI=",$J($P(%ZH1,U,5)-$P(%ZH0,U,5),4),?67,"TO=",$J($P(%ZH1,U,6)-$P(%ZH0,U,6),5)
"RTN","ZOSVMSM",139,0)
 Q
"RTN","ZOSVMSM",140,0)
LOGRSRC(OPT) ;record resource usage in ^XUCP
"RTN","ZOSVMSM",141,0)
 Q:$$OSTYPE'=1
"RTN","ZOSVMSM",142,0)
 N C,H,I,J,U
"RTN","ZOSVMSM",143,0)
 S C=",",U="^",%=$$ZH^%MSMOPS,H=$P($H,C)_C_($V(#46C,-3,4)*5.4925\1/100)
"RTN","ZOSVMSM",144,0)
 I $P(H,",",2)\1#100=0 S J=$$HTFM^XLFDT($H,1),I=$$FMADD^XLFDT(J,365)_U_J,^XTMP("XUCP",0)=I
"RTN","ZOSVMSM",145,0)
 S ^XTMP("XUCP","NODNAM",$P(H,C),$J,$P(H,C,2))=$P(%,U)_U_$P(%,U,3)_U_$P(%,U,2)_U_$P(%,U,4,6)_U_OPT_U_($P(%,U,7)*100\1/100)
"RTN","ZOSVMSM",146,0)
 Q
"RTN","ZOSVMSM",147,0)
SETTRM(X) ;Set specified terminators.
"RTN","ZOSVMSM",148,0)
 U $I:(::::::::X)
"RTN","ZOSVMSM",149,0)
 Q 1
"VER")
8.0^21.0
**END**
**END**
