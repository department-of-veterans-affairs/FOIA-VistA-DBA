KIDS Distribution saved on Jun 03, 1996@17:00:02
SD_53_41 KIDS Distribution
**KIDS**:SD*5.3*41^DG*5.3*84^

**INSTALL NAME**
SD*5.3*41
"BLD",7,0)
SD*5.3*41^SCHEDULING^0^2960530^y
"BLD",7,1,0)
^^1^1^2960530^
"BLD",7,1,1,0)
Primary Care Management Module - SD*5.3*41
"BLD",7,4,0)
^9.64PA^44^20
"BLD",7,4,44,0)
44
"BLD",7,4,44,2,0)
^9.641^44.40457^2
"BLD",7,4,44,2,44,0)
HOSPITAL LOCATION  (File-top level)
"BLD",7,4,44,2,44,1,0)
^9.6411^^
"BLD",7,4,44,2,44.40457,0)
TEAM POSITIONS  (sub-file)
"BLD",7,4,44,2,44.40457,1,0)
^9.6411^^
"BLD",7,4,44,222)
y^y^p^^^^n
"BLD",7,4,403.35,0)
403.35
"BLD",7,4,403.35,222)
y^y^f^^^^n
"BLD",7,4,403.43,0)
403.43
"BLD",7,4,403.43,222)
y^y^f^^n^^y^o^n
"BLD",7,4,403.44,0)
403.44
"BLD",7,4,403.44,222)
y^y^f^^n^^y^o^n
"BLD",7,4,403.46,0)
403.46
"BLD",7,4,403.46,222)
y^y^f^^n^^y^o^n
"BLD",7,4,403.47,0)
403.47
"BLD",7,4,403.47,222)
y^y^f^^n^^y^o^n
"BLD",7,4,404.41,0)
404.41
"BLD",7,4,404.41,222)
y^y^f^^^^n
"BLD",7,4,404.42,0)
404.42
"BLD",7,4,404.42,222)
y^y^f^^^^n
"BLD",7,4,404.43,0)
404.43
"BLD",7,4,404.43,222)
y^y^f^^^^n
"BLD",7,4,404.51,0)
404.51
"BLD",7,4,404.51,222)
y^y^f^^^^n
"BLD",7,4,404.52,0)
404.52
"BLD",7,4,404.52,222)
y^y^f^^^^n
"BLD",7,4,404.56,0)
404.56
"BLD",7,4,404.56,222)
y^y^f^^^^n
"BLD",7,4,404.57,0)
404.57
"BLD",7,4,404.57,222)
y^y^f^^^^n
"BLD",7,4,404.58,0)
404.58
"BLD",7,4,404.58,222)
y^y^f^^^^n
"BLD",7,4,404.59,0)
404.59
"BLD",7,4,404.59,222)
y^y^f^^^^n
"BLD",7,4,404.91,0)
404.91
"BLD",7,4,404.91,222)
y^y^f^^^^n
"BLD",7,4,404.92,0)
404.92
"BLD",7,4,404.92,222)
y^y^f^^n^^y^o^n
"BLD",7,4,404.93,0)
404.93
"BLD",7,4,404.93,222)
y^y^f^^n^^y^o^n
"BLD",7,4,404.94,0)
404.94
"BLD",7,4,404.94,222)
y^y^f^^n^^y^o^n
"BLD",7,4,404.95,0)
404.95
"BLD",7,4,404.95,222)
y^y^f^^n^^y^o^n
"BLD",7,4,404.95,223)

"BLD",7,4,404.95,224)
IF $P($G(^(0)),U,1)="System Default",$P(^(0),U,2)=.5
"BLD",7,4,"APDD",44,44)

"BLD",7,4,"APDD",44,44.40457)

"BLD",7,4,"B",44,44)

"BLD",7,4,"B",403.35,403.35)

"BLD",7,4,"B",403.43,403.43)

"BLD",7,4,"B",403.44,403.44)

"BLD",7,4,"B",403.46,403.46)

"BLD",7,4,"B",403.47,403.47)

"BLD",7,4,"B",404.41,404.41)

"BLD",7,4,"B",404.42,404.42)

"BLD",7,4,"B",404.43,404.43)

"BLD",7,4,"B",404.51,404.51)

"BLD",7,4,"B",404.52,404.52)

"BLD",7,4,"B",404.56,404.56)

"BLD",7,4,"B",404.57,404.57)

"BLD",7,4,"B",404.58,404.58)

"BLD",7,4,"B",404.59,404.59)

"BLD",7,4,"B",404.91,404.91)

"BLD",7,4,"B",404.92,404.92)

"BLD",7,4,"B",404.93,404.93)

"BLD",7,4,"B",404.94,404.94)

"BLD",7,4,"B",404.95,404.95)

"BLD",7,"ABNS",0)
^9.66A^1^1
"BLD",7,"ABNS",1,0)
SC
"BLD",7,"ABNS",1,1,0)
^9.661A^1^1
"BLD",7,"ABNS",1,1,1,0)
SCD
"BLD",7,"ABNS",1,1,"B","SCD",1)

"BLD",7,"ABNS","B","SC",1)

"BLD",7,"ABPKG")
n^y^G.PCMM DEVELOPERS@ISC-ALBANY.VA.GOV
"BLD",7,"INI")
SCMCPRE
"BLD",7,"INIT")
SCMCPST
"BLD",7,"KRN",0)
^9.67PA^8994^15
"BLD",7,"KRN",.4,0)
.4
"BLD",7,"KRN",.401,0)
.401
"BLD",7,"KRN",.402,0)
.402
"BLD",7,"KRN",.402,"NM",0)
^9.68A^2^1
"BLD",7,"KRN",.402,"NM",2,0)
SDB    FILE #44^44^0
"BLD",7,"KRN",.402,"NM","B","SDB    FILE #44",2)

"BLD",7,"KRN",.403,0)
.403
"BLD",7,"KRN",.5,0)
.5
"BLD",7,"KRN",.84,0)
.84
"BLD",7,"KRN",.84,"NM",0)
^9.68A^11^11
"BLD",7,"KRN",.84,"NM",1,0)
4045100^^0
"BLD",7,"KRN",.84,"NM",2,0)
4045101^^0
"BLD",7,"KRN",.84,"NM",3,0)
4035001.001^^0
"BLD",7,"KRN",.84,"NM",4,0)
4035001.002^^0
"BLD",7,"KRN",.84,"NM",5,0)
4035002.001^^0
"BLD",7,"KRN",.84,"NM",6,0)
4030005.001^^0
"BLD",7,"KRN",.84,"NM",7,0)
4040000^^0
"BLD",7,"KRN",.84,"NM",8,0)
4045107^^0
"BLD",7,"KRN",.84,"NM",9,0)
4045200^^0
"BLD",7,"KRN",.84,"NM",10,0)
4045602^^0
"BLD",7,"KRN",.84,"NM",11,0)
4045700^^0
"BLD",7,"KRN",.84,"NM","B",4030005.001,6)

"BLD",7,"KRN",.84,"NM","B",4035001.001,3)

"BLD",7,"KRN",.84,"NM","B",4035001.002,4)

"BLD",7,"KRN",.84,"NM","B",4035002.001,5)

"BLD",7,"KRN",.84,"NM","B",4040000,7)

"BLD",7,"KRN",.84,"NM","B",4045100,1)

"BLD",7,"KRN",.84,"NM","B",4045101,2)

"BLD",7,"KRN",.84,"NM","B",4045107,8)

"BLD",7,"KRN",.84,"NM","B",4045200,9)

"BLD",7,"KRN",.84,"NM","B",4045602,10)

"BLD",7,"KRN",.84,"NM","B",4045700,11)

"BLD",7,"KRN",3.6,0)
3.6
"BLD",7,"KRN",9.2,0)
9.2
"BLD",7,"KRN",9.8,0)
9.8
"BLD",7,"KRN",9.8,"NM",0)
^9.68A^148^115
"BLD",7,"KRN",9.8,"NM",1,0)
SCAPMC^^0^B22564458
"BLD",7,"KRN",9.8,"NM",2,0)
SCAPMC1^^0^B4149506
"BLD",7,"KRN",9.8,"NM",3,0)
SCAPMC10^^0^B6743127
"BLD",7,"KRN",9.8,"NM",4,0)
SCAPMC11^^0^B8159096
"BLD",7,"KRN",9.8,"NM",5,0)
SCAPMC12^^0^B5372823
"BLD",7,"KRN",9.8,"NM",6,0)
SCAPMC13^^0^B4185308
"BLD",7,"KRN",9.8,"NM",7,0)
SCAPMC14^^0^B7296482
"BLD",7,"KRN",9.8,"NM",8,0)
SCAPMC15^^0^B15325758
"BLD",7,"KRN",9.8,"NM",10,0)
SCAPMC17^^0^B19777054
"BLD",7,"KRN",9.8,"NM",12,0)
SCAPMC19^^0^B11907427
"BLD",7,"KRN",9.8,"NM",13,0)
SCAPMC2^^0^B7312799
"BLD",7,"KRN",9.8,"NM",14,0)
SCAPMC23^^0^B15146023
"BLD",7,"KRN",9.8,"NM",15,0)
SCAPMC24^^0^B11874757
"BLD",7,"KRN",9.8,"NM",16,0)
SCAPMC25^^0^B15692310
"BLD",7,"KRN",9.8,"NM",17,0)
SCAPMC26^^0^B9995996
"BLD",7,"KRN",9.8,"NM",18,0)
SCAPMC29^^0^B8058157
"BLD",7,"KRN",9.8,"NM",19,0)
SCAPMC3^^0^B10330792
"BLD",7,"KRN",9.8,"NM",20,0)
SCAPMC30^^0^B6119891
"BLD",7,"KRN",9.8,"NM",21,0)
SCAPMC4^^0^B6901391
"BLD",7,"KRN",9.8,"NM",22,0)
SCAPMC5^^0^B4549737
"BLD",7,"KRN",9.8,"NM",23,0)
SCAPMC6^^0^B9265796
"BLD",7,"KRN",9.8,"NM",24,0)
SCAPMC7^^0^B7259229
"BLD",7,"KRN",9.8,"NM",25,0)
SCAPMC8^^0^B11536956
"BLD",7,"KRN",9.8,"NM",26,0)
SCAPMC9^^0^B5281874
"BLD",7,"KRN",9.8,"NM",27,0)
SCAPMCU1^^0^B31780292
"BLD",7,"KRN",9.8,"NM",28,0)
SCAPMCU2^^0^B36499490
"BLD",7,"KRN",9.8,"NM",29,0)
SCAPMCU3^^0^B12501665
"BLD",7,"KRN",9.8,"NM",30,0)
SCAPMSG^^0^B2285505
"BLD",7,"KRN",9.8,"NM",31,0)
SCAPU1^^0^B5694042
"BLD",7,"KRN",9.8,"NM",32,0)
SCDD^^0^B727290
"BLD",7,"KRN",9.8,"NM",34,0)
SCMCDD^^0^B41468865
"BLD",7,"KRN",9.8,"NM",35,0)
SCMCDD1^^0^B22772685
"BLD",7,"KRN",9.8,"NM",36,0)
SCMCENV^^0^B10621043
"BLD",7,"KRN",9.8,"NM",38,0)
SCMCPST^^0^B11926378
"BLD",7,"KRN",9.8,"NM",39,0)
SCMCRT0^^0^B7099379
"BLD",7,"KRN",9.8,"NM",40,0)
SCMCRT1^^0^B10764247
"BLD",7,"KRN",9.8,"NM",41,0)
SCMCRT1A^^0^B19869507
"BLD",7,"KRN",9.8,"NM",42,0)
SCMCTMU^^0^B24141022
"BLD",7,"KRN",9.8,"NM",43,0)
SCMCTPU^^0^B20859632
"BLD",7,"KRN",9.8,"NM",44,0)
SCRPEC2^^0^B26588462
"BLD",7,"KRN",9.8,"NM",45,0)
SCRPITP^^0^B18713783
"BLD",7,"KRN",9.8,"NM",46,0)
SCRPITP2^^0^B17427768
"BLD",7,"KRN",9.8,"NM",47,0)
SCRPPAT^^0^B30040138
"BLD",7,"KRN",9.8,"NM",48,0)
SCRPPAT2^^0^B26218710
"BLD",7,"KRN",9.8,"NM",49,0)
SCRPPAT3^^0^B24444181
"BLD",7,"KRN",9.8,"NM",51,0)
SCRPRAC^^0^B14736526
"BLD",7,"KRN",9.8,"NM",52,0)
SCRPRAC2^^0^B9456185
"BLD",7,"KRN",9.8,"NM",53,0)
SCRPSLT^^0^B22186028
"BLD",7,"KRN",9.8,"NM",54,0)
SCRPSLT2^^0^B16392996
"BLD",7,"KRN",9.8,"NM",55,0)
SCRPTA^^0^B27602719
"BLD",7,"KRN",9.8,"NM",56,0)
SCRPTA2^^0^B24706643
"BLD",7,"KRN",9.8,"NM",57,0)
SCRPTM^^0^B27643748
"BLD",7,"KRN",9.8,"NM",58,0)
SCRPTM2^^0^B15885009
"BLD",7,"KRN",9.8,"NM",59,0)
SCRPU1^^0^B24263876
"BLD",7,"KRN",9.8,"NM",60,0)
SCRPU2^^0^B21550252
"BLD",7,"KRN",9.8,"NM",61,0)
SCRPU3^^0^B16553295
"BLD",7,"KRN",9.8,"NM",62,0)
SCUTBK10^^0^B12620994
"BLD",7,"KRN",9.8,"NM",63,0)
SDPPALL^^0^B10851091
"BLD",7,"KRN",9.8,"NM",64,0)
SDPPRT^^0^B21741526
"BLD",7,"KRN",9.8,"NM",65,0)
SCRPTP^^0^B23745983
"BLD",7,"KRN",9.8,"NM",66,0)
SCRPTP2^^0^B25781636
"BLD",7,"KRN",9.8,"NM",67,0)
SCRPTP3^^0^B24293900
"BLD",7,"KRN",9.8,"NM",68,0)
SDPPTEM^^0^B33071744
"BLD",7,"KRN",9.8,"NM",69,0)
SDUTL3^^0^B7168021
"BLD",7,"KRN",9.8,"NM",70,0)
SCMCCV^^0^B79321918
"BLD",7,"KRN",9.8,"NM",72,0)
SCAPMC21^^0^B16844934
"BLD",7,"KRN",9.8,"NM",73,0)
SCAPMC22^^0^B4205408
"BLD",7,"KRN",9.8,"NM",74,0)
SCMCPM^^0^B4883597
"BLD",7,"KRN",9.8,"NM",75,0)
SCRPEC^^0^B15107592
"BLD",7,"KRN",9.8,"NM",76,0)
SCRPEC3^^0^B8395241
"BLD",7,"KRN",9.8,"NM",77,0)
SCUTBK^^0^B10771369
"BLD",7,"KRN",9.8,"NM",78,0)
SCUTBK1^^0^B6329555
"BLD",7,"KRN",9.8,"NM",79,0)
SCUTBK11^^0^B15282530
"BLD",7,"KRN",9.8,"NM",80,0)
SCUTBK2^^0^B4302782
"BLD",7,"KRN",9.8,"NM",83,0)
SCRPBK^^0^B8319188
"BLD",7,"KRN",9.8,"NM",84,0)
SCRPBK0^^0^B7851287
"BLD",7,"KRN",9.8,"NM",85,0)
SCRPBK1^^0^B16332067
"BLD",7,"KRN",9.8,"NM",86,0)
SCRPU4^^0^B2014588
"BLD",7,"KRN",9.8,"NM",87,0)
SCAPMC16^^0^B3001781
"BLD",7,"KRN",9.8,"NM",88,0)
SCMCEV1^^0^B11858888
"BLD",7,"KRN",9.8,"NM",89,0)
SCMCEV2^^0^B4380681
"BLD",7,"KRN",9.8,"NM",90,0)
SCMCEV3^^0^B19467281
"BLD",7,"KRN",9.8,"NM",91,0)
SCRPBK2^^0^B39175865
"BLD",7,"KRN",9.8,"NM",92,0)
SCRPBK3^^0^B28708545
"BLD",7,"KRN",9.8,"NM",93,0)
SCAPMC20^^0^B6905465
"BLD",7,"KRN",9.8,"NM",95,0)
SCMCPR1^^0^B4474920
"BLD",7,"KRN",9.8,"NM",96,0)
SCMCRU^^0^B2460904
"BLD",7,"KRN",9.8,"NM",97,0)
SCRPBK4^^0^B24363596
"BLD",7,"KRN",9.8,"NM",98,0)
SCUTBK12^^0^B1642857
"BLD",7,"KRN",9.8,"NM",99,0)
SDAPP^^0^B7896600
"BLD",7,"KRN",9.8,"NM",100,0)
SDCD^^0^B9139637
"BLD",7,"KRN",9.8,"NM",101,0)
SDM^^0^B29872862
"BLD",7,"KRN",9.8,"NM",119,0)
SDCO31^^0^B2068373
"BLD",7,"KRN",9.8,"NM",120,0)
SDNEXT^^0^B18138629
"BLD",7,"KRN",9.8,"NM",121,0)
SDMULT0^^0^B19888296
"BLD",7,"KRN",9.8,"NM",122,0)
SDMULT1^^0^B14395355
"BLD",7,"KRN",9.8,"NM",123,0)
SCAPMCU4^^0^B1815991
"BLD",7,"KRN",9.8,"NM",124,0)
SCMCCON^^0^B5385741
"BLD",7,"KRN",9.8,"NM",125,0)
SCMCDD2^^0^B3632182
"BLD",7,"KRN",9.8,"NM",126,0)
SCMCMM^^0^B2451307
"BLD",7,"KRN",9.8,"NM",127,0)
SCMCPM1^^0^B4008464
"BLD",7,"KRN",9.8,"NM",128,0)
SCMCTMM^^0^B37965615
"BLD",7,"KRN",9.8,"NM",129,0)
SCMCTMU2^^0^B3881733
"BLD",7,"KRN",9.8,"NM",131,0)
SCMCTPM^^0^B33804951
"BLD",7,"KRN",9.8,"NM",132,0)
SCMCU1^^0^B2004065
"BLD",7,"KRN",9.8,"NM",133,0)
SCRPBK5^^0^B5220163
"BLD",7,"KRN",9.8,"NM",134,0)
SCUTBK3^^0^B6340427
"BLD",7,"KRN",9.8,"NM",136,0)
SCAPMC18^^0^B6459539
"BLD",7,"KRN",9.8,"NM",137,0)
SCAPMC27^^0^B6354061
"BLD",7,"KRN",9.8,"NM",138,0)
SCAPMC28^^0^B8308419
"BLD",7,"KRN",9.8,"NM",139,0)
SCRPBK11^^0^B14197603
"BLD",7,"KRN",9.8,"NM",141,0)
SCMCBK^^0^B49055163
"BLD",7,"KRN",9.8,"NM",145,0)
SCMCTPU2^^0^B4141112
"BLD",7,"KRN",9.8,"NM",146,0)
SCMCBK1^^0^B69229251
"BLD",7,"KRN",9.8,"NM",148,0)
SCMCPRE^^0^B356944
"BLD",7,"KRN",9.8,"NM","B","SCAPMC",1)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC1",2)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC10",3)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC11",4)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC12",5)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC13",6)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC14",7)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC15",8)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC16",87)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC17",10)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC18",136)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC19",12)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC2",13)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC20",93)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC21",72)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC22",73)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC23",14)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC24",15)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC25",16)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC26",17)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC27",137)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC28",138)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC29",18)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC3",19)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC30",20)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC4",21)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC5",22)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC6",23)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC7",24)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC8",25)

"BLD",7,"KRN",9.8,"NM","B","SCAPMC9",26)

"BLD",7,"KRN",9.8,"NM","B","SCAPMCU1",27)

"BLD",7,"KRN",9.8,"NM","B","SCAPMCU2",28)

"BLD",7,"KRN",9.8,"NM","B","SCAPMCU3",29)

"BLD",7,"KRN",9.8,"NM","B","SCAPMCU4",123)

"BLD",7,"KRN",9.8,"NM","B","SCAPMSG",30)

"BLD",7,"KRN",9.8,"NM","B","SCAPU1",31)

"BLD",7,"KRN",9.8,"NM","B","SCDD",32)

"BLD",7,"KRN",9.8,"NM","B","SCMCBK",141)

"BLD",7,"KRN",9.8,"NM","B","SCMCBK1",146)

"BLD",7,"KRN",9.8,"NM","B","SCMCCON",124)

"BLD",7,"KRN",9.8,"NM","B","SCMCCV",70)

"BLD",7,"KRN",9.8,"NM","B","SCMCDD",34)

"BLD",7,"KRN",9.8,"NM","B","SCMCDD1",35)

"BLD",7,"KRN",9.8,"NM","B","SCMCDD2",125)

"BLD",7,"KRN",9.8,"NM","B","SCMCENV",36)

"BLD",7,"KRN",9.8,"NM","B","SCMCEV1",88)

"BLD",7,"KRN",9.8,"NM","B","SCMCEV2",89)

"BLD",7,"KRN",9.8,"NM","B","SCMCEV3",90)

"BLD",7,"KRN",9.8,"NM","B","SCMCMM",126)

"BLD",7,"KRN",9.8,"NM","B","SCMCPM",74)

"BLD",7,"KRN",9.8,"NM","B","SCMCPM1",127)

"BLD",7,"KRN",9.8,"NM","B","SCMCPR1",95)

"BLD",7,"KRN",9.8,"NM","B","SCMCPRE",148)

"BLD",7,"KRN",9.8,"NM","B","SCMCPST",38)

"BLD",7,"KRN",9.8,"NM","B","SCMCRT0",39)

"BLD",7,"KRN",9.8,"NM","B","SCMCRT1",40)

"BLD",7,"KRN",9.8,"NM","B","SCMCRT1A",41)

"BLD",7,"KRN",9.8,"NM","B","SCMCRU",96)

"BLD",7,"KRN",9.8,"NM","B","SCMCTMM",128)

"BLD",7,"KRN",9.8,"NM","B","SCMCTMU",42)

"BLD",7,"KRN",9.8,"NM","B","SCMCTMU2",129)

"BLD",7,"KRN",9.8,"NM","B","SCMCTPM",131)

"BLD",7,"KRN",9.8,"NM","B","SCMCTPU",43)

"BLD",7,"KRN",9.8,"NM","B","SCMCTPU2",145)

"BLD",7,"KRN",9.8,"NM","B","SCMCU1",132)

"BLD",7,"KRN",9.8,"NM","B","SCRPBK",83)

"BLD",7,"KRN",9.8,"NM","B","SCRPBK0",84)

"BLD",7,"KRN",9.8,"NM","B","SCRPBK1",85)

"BLD",7,"KRN",9.8,"NM","B","SCRPBK11",139)

"BLD",7,"KRN",9.8,"NM","B","SCRPBK2",91)

"BLD",7,"KRN",9.8,"NM","B","SCRPBK3",92)

"BLD",7,"KRN",9.8,"NM","B","SCRPBK4",97)

"BLD",7,"KRN",9.8,"NM","B","SCRPBK5",133)

"BLD",7,"KRN",9.8,"NM","B","SCRPEC",75)

"BLD",7,"KRN",9.8,"NM","B","SCRPEC2",44)

"BLD",7,"KRN",9.8,"NM","B","SCRPEC3",76)

"BLD",7,"KRN",9.8,"NM","B","SCRPITP",45)

"BLD",7,"KRN",9.8,"NM","B","SCRPITP2",46)

"BLD",7,"KRN",9.8,"NM","B","SCRPPAT",47)

"BLD",7,"KRN",9.8,"NM","B","SCRPPAT2",48)

"BLD",7,"KRN",9.8,"NM","B","SCRPPAT3",49)

"BLD",7,"KRN",9.8,"NM","B","SCRPRAC",51)

"BLD",7,"KRN",9.8,"NM","B","SCRPRAC2",52)

"BLD",7,"KRN",9.8,"NM","B","SCRPSLT",53)

"BLD",7,"KRN",9.8,"NM","B","SCRPSLT2",54)

"BLD",7,"KRN",9.8,"NM","B","SCRPTA",55)

"BLD",7,"KRN",9.8,"NM","B","SCRPTA2",56)

"BLD",7,"KRN",9.8,"NM","B","SCRPTM",57)

"BLD",7,"KRN",9.8,"NM","B","SCRPTM2",58)

"BLD",7,"KRN",9.8,"NM","B","SCRPTP",65)

"BLD",7,"KRN",9.8,"NM","B","SCRPTP2",66)

"BLD",7,"KRN",9.8,"NM","B","SCRPTP3",67)

"BLD",7,"KRN",9.8,"NM","B","SCRPU1",59)

"BLD",7,"KRN",9.8,"NM","B","SCRPU2",60)

"BLD",7,"KRN",9.8,"NM","B","SCRPU3",61)

"BLD",7,"KRN",9.8,"NM","B","SCRPU4",86)

"BLD",7,"KRN",9.8,"NM","B","SCUTBK",77)

"BLD",7,"KRN",9.8,"NM","B","SCUTBK1",78)

"BLD",7,"KRN",9.8,"NM","B","SCUTBK10",62)

"BLD",7,"KRN",9.8,"NM","B","SCUTBK11",79)

"BLD",7,"KRN",9.8,"NM","B","SCUTBK12",98)

"BLD",7,"KRN",9.8,"NM","B","SCUTBK2",80)

"BLD",7,"KRN",9.8,"NM","B","SCUTBK3",134)

"BLD",7,"KRN",9.8,"NM","B","SDAPP",99)

"BLD",7,"KRN",9.8,"NM","B","SDCD",100)

"BLD",7,"KRN",9.8,"NM","B","SDCO31",119)

"BLD",7,"KRN",9.8,"NM","B","SDM",101)

"BLD",7,"KRN",9.8,"NM","B","SDMULT0",121)

"BLD",7,"KRN",9.8,"NM","B","SDMULT1",122)

"BLD",7,"KRN",9.8,"NM","B","SDNEXT",120)

"BLD",7,"KRN",9.8,"NM","B","SDPPALL",63)

"BLD",7,"KRN",9.8,"NM","B","SDPPRT",64)

"BLD",7,"KRN",9.8,"NM","B","SDPPTEM",68)

"BLD",7,"KRN",9.8,"NM","B","SDUTL3",69)

"BLD",7,"KRN",19,0)
19
"BLD",7,"KRN",19,"NM",0)
^9.68A^19^17
"BLD",7,"KRN",19,"NM",1,0)
SC PCMM DETAIL LIST PTS^^0
"BLD",7,"KRN",19,"NM",2,0)
SC PCMM IND TEAM PROFILE^^0
"BLD",7,"KRN",19,"NM",3,0)
SC PCMM LIST TEAM'S MEMBERS^^0
"BLD",7,"KRN",19,"NM",4,0)
SC PCMM LIST TEAM'S PATIENTS^^0
"BLD",7,"KRN",19,"NM",5,0)
SC PCMM PRACT DEMO^^0
"BLD",7,"KRN",19,"NM",6,0)
SC PCMM PRACT PATIENTS^^0
"BLD",7,"KRN",19,"NM",7,0)
SC PCMM PT LIST W/TEAM ASSIGN^^0
"BLD",7,"KRN",19,"NM",8,0)
SC PCMM REPORTS MENU^^0
"BLD",7,"KRN",19,"NM",9,0)
SC PCMM SUM LIST OF TEAMS^^0
"BLD",7,"KRN",19,"NM",10,0)
SC PCMM CONVERT PATIENTS^^0
"BLD",7,"KRN",19,"NM",11,0)
SDOUTPUT^^2
"BLD",7,"KRN",19,"NM",12,0)
SDNEXT^^0
"BLD",7,"KRN",19,"NM",13,0)
SDSUP^^2
"BLD",7,"KRN",19,"NM",14,0)
SC MAKE CONSULT APPOINTMENT^^0
"BLD",7,"KRN",19,"NM",16,0)
SDMGR^^2
"BLD",7,"KRN",19,"NM",17,0)
SDAPP^^2
"BLD",7,"KRN",19,"NM",19,0)
SC PCMM GUI WORKSTATION^^0
"BLD",7,"KRN",19,"NM","B","SC MAKE CONSULT APPOINTMENT",14)

"BLD",7,"KRN",19,"NM","B","SC PCMM CONVERT PATIENTS",10)

"BLD",7,"KRN",19,"NM","B","SC PCMM DETAIL LIST PTS",1)

"BLD",7,"KRN",19,"NM","B","SC PCMM GUI WORKSTATION",19)

"BLD",7,"KRN",19,"NM","B","SC PCMM IND TEAM PROFILE",2)

"BLD",7,"KRN",19,"NM","B","SC PCMM LIST TEAM'S MEMBERS",3)

"BLD",7,"KRN",19,"NM","B","SC PCMM LIST TEAM'S PATIENTS",4)

"BLD",7,"KRN",19,"NM","B","SC PCMM PRACT DEMO",5)

"BLD",7,"KRN",19,"NM","B","SC PCMM PRACT PATIENTS",6)

"BLD",7,"KRN",19,"NM","B","SC PCMM PT LIST W/TEAM ASSIGN",7)

"BLD",7,"KRN",19,"NM","B","SC PCMM REPORTS MENU",8)

"BLD",7,"KRN",19,"NM","B","SC PCMM SUM LIST OF TEAMS",9)

"BLD",7,"KRN",19,"NM","B","SDAPP",17)

"BLD",7,"KRN",19,"NM","B","SDMGR",16)

"BLD",7,"KRN",19,"NM","B","SDNEXT",12)

"BLD",7,"KRN",19,"NM","B","SDOUTPUT",11)

"BLD",7,"KRN",19,"NM","B","SDSUP",13)

"BLD",7,"KRN",19.1,0)
19.1
"BLD",7,"KRN",19.1,"NM",0)
^9.68A^2^2
"BLD",7,"KRN",19.1,"NM",1,0)
SC PCMM DELETE^^0
"BLD",7,"KRN",19.1,"NM",2,0)
SC CONSULT^^0
"BLD",7,"KRN",19.1,"NM","B","SC CONSULT",2)

"BLD",7,"KRN",19.1,"NM","B","SC PCMM DELETE",1)

"BLD",7,"KRN",101,0)
101
"BLD",7,"KRN",101,"NM",0)
^9.68A^17^14
"BLD",7,"KRN",101,"NM",1,0)
SC PCMM INPATIENT ACTIVITY^^0
"BLD",7,"KRN",101,"NM",2,0)
DGPM MOVEMENT EVENTS^^2
"BLD",7,"KRN",101,"NM",3,0)
SC TEAM AUTO-ADD^^0
"BLD",7,"KRN",101,"NM",5,0)
SDPP PATIENT PROFILE DISPLAY INFO MENU^^2
"BLD",7,"KRN",101,"NM",6,0)
SC PATIENT PROFILE DISPLAY TEAM INFO^^0
"BLD",7,"KRN",101,"NM",9,0)
SC ASSIGN PC TEAM ON DISCHARGE^^0
"BLD",7,"KRN",101,"NM",10,0)
SC CLINIC ENROLL/DISCHARGE EVENT DRIVER^^0
"BLD",7,"KRN",101,"NM",11,0)
SC DISPLAY TEAM INFO^^0
"BLD",7,"KRN",101,"NM",12,0)
SCMC PATIENT TEAM CHANGES^^0
"BLD",7,"KRN",101,"NM",13,0)
SCMC PATIENT TEAM POSITION CHANGES^^0
"BLD",7,"KRN",101,"NM",14,0)
SCMC PT POSITION CHANGE MAIL MESSAGE^^0
"BLD",7,"KRN",101,"NM",15,0)
SCMC PT TEAM CHANGE MAIL MESSAGE^^0
"BLD",7,"KRN",101,"NM",16,0)
SDAM MENU^^2
"BLD",7,"KRN",101,"NM",17,0)
SDPP PATIENT PROFILE MENU^^2
"BLD",7,"KRN",101,"NM","B","DGPM MOVEMENT EVENTS",2)

"BLD",7,"KRN",101,"NM","B","SC ASSIGN PC TEAM ON DISCHARGE",9)

"BLD",7,"KRN",101,"NM","B","SC CLINIC ENROLL/DISCHARGE EVENT DRIVER",10)

"BLD",7,"KRN",101,"NM","B","SC DISPLAY TEAM INFO",11)

"BLD",7,"KRN",101,"NM","B","SC PATIENT PROFILE DISPLAY TEAM INFO",6)

"BLD",7,"KRN",101,"NM","B","SC PCMM INPATIENT ACTIVITY",1)

"BLD",7,"KRN",101,"NM","B","SC TEAM AUTO-ADD",3)

"BLD",7,"KRN",101,"NM","B","SCMC PATIENT TEAM CHANGES",12)

"BLD",7,"KRN",101,"NM","B","SCMC PATIENT TEAM POSITION CHANGES",13)

"BLD",7,"KRN",101,"NM","B","SCMC PT POSITION CHANGE MAIL MESSAGE",14)

"BLD",7,"KRN",101,"NM","B","SCMC PT TEAM CHANGE MAIL MESSAGE",15)

"BLD",7,"KRN",101,"NM","B","SDAM MENU",16)

"BLD",7,"KRN",101,"NM","B","SDPP PATIENT PROFILE DISPLAY INFO MENU",5)

"BLD",7,"KRN",101,"NM","B","SDPP PATIENT PROFILE MENU",17)

"BLD",7,"KRN",409.61,0)
409.61
"BLD",7,"KRN",409.61,"NM",0)
^9.68A^1^1
"BLD",7,"KRN",409.61,"NM",1,0)
SC TEAM INFORMATION^^0
"BLD",7,"KRN",409.61,"NM","B","SC TEAM INFORMATION",1)

"BLD",7,"KRN",8994,0)
8994
"BLD",7,"KRN",8994,"NM",0)
^9.68A^63^55
"BLD",7,"KRN",8994,"NM",1,0)
SC CHANGE HISTORY OK^^0
"BLD",7,"KRN",8994,"NM",2,0)
SC DELETE ENTRY^^0
"BLD",7,"KRN",8994,"NM",3,0)
SC DELETE HISTORY^^0
"BLD",7,"KRN",8994,"NM",4,0)
SC FILE NUMBER^^0
"BLD",7,"KRN",8994,"NM",5,0)
SC FILE SINGLE VALUE^^0
"BLD",7,"KRN",8994,"NM",6,0)
SC FILER^^0
"BLD",7,"KRN",8994,"NM",7,0)
SC FIND^^0
"BLD",7,"KRN",8994,"NM",8,0)
SC GETS ENTRY DATA^^0
"BLD",7,"KRN",8994,"NM",9,0)
SC GLOBAL NODE^^0
"BLD",7,"KRN",8994,"NM",10,0)
SC GLOBAL NODE COUNT^^0
"BLD",7,"KRN",8994,"NM",11,0)
SC HISTORY STATUS OK^^0
"BLD",7,"KRN",8994,"NM",12,0)
SC INACTIVATE ENTRY^^0
"BLD",7,"KRN",8994,"NM",13,0)
SC KEY CHECK^^0
"BLD",7,"KRN",8994,"NM",14,0)
SC LISTER^^0
"BLD",7,"KRN",8994,"NM",15,0)
SC LOCK/UNLOCK NODE^^0
"BLD",7,"KRN",8994,"NM",16,0)
SC MAILMAN^^0
"BLD",7,"KRN",8994,"NM",17,0)
SC MEAN TEST^^0
"BLD",7,"KRN",8994,"NM",18,0)
SC NEW HISTORY OK^^0
"BLD",7,"KRN",8994,"NM",19,0)
SC PATIENT LOOKUP^^0
"BLD",7,"KRN",8994,"NM",20,0)
SC POSITION MEMBERS^^0
"BLD",7,"KRN",8994,"NM",21,0)
SC PRTP^^0
"BLD",7,"KRN",8994,"NM",22,0)
SC TEAM LIST^^0
"BLD",7,"KRN",8994,"NM",23,0)
SC VALIDATOR^^0
"BLD",7,"KRN",8994,"NM",25,0)
SCTM AUTOLINK GETRECORD^^0
"BLD",7,"KRN",8994,"NM",26,0)
SCTM AUTOLINK SETRECORD^^0
"BLD",7,"KRN",8994,"NM",27,0)
SCTM AUTOLINK GETLINK^^0
"BLD",7,"KRN",8994,"NM",28,0)
SCRP DEFINITION GETRECORD^^0
"BLD",7,"KRN",8994,"NM",29,0)
SCRP QUERY GETRECORD^^0
"BLD",7,"KRN",8994,"NM",30,0)
SCUT GET USER RECORD^^0
"BLD",7,"KRN",8994,"NM",31,0)
SCRP FILE ENTRY GETSELECTION^^0
"BLD",7,"KRN",8994,"NM",32,0)
SCRP SELECTION SOURCE^^0
"BLD",7,"KRN",8994,"NM",33,0)
SCRP QUERY CHECK NAME^^0
"BLD",7,"KRN",8994,"NM",34,0)
SCRP QUERY DELETE^^0
"BLD",7,"KRN",8994,"NM",35,0)
SCRP QUERY SAVE^^0
"BLD",7,"KRN",8994,"NM",36,0)
SCRP QUERY VALIDATE^^0
"BLD",7,"KRN",8994,"NM",37,0)
SCRP REPORT PRINT^^0
"BLD",7,"KRN",8994,"NM",38,0)
SCUT SET USER QUERY DEFAULT^^0
"BLD",7,"KRN",8994,"NM",39,0)
SC STAFF LOOKUP^^0
"BLD",7,"KRN",8994,"NM",40,0)
SC USER CLASS STATUS^^0
"BLD",7,"KRN",8994,"NM",45,0)
SC PRIMARY CARE TEAM^^0
"BLD",7,"KRN",8994,"NM",49,0)
SC BLD PAT CLN LIST^^0
"BLD",7,"KRN",8994,"NM",50,0)
SC BLD PAT LIST^^0
"BLD",7,"KRN",8994,"NM",51,0)
SC FILE PAT TM ASGN^^0
"BLD",7,"KRN",8994,"NM",52,0)
SC GET PAT BLOCK^^0
"BLD",7,"KRN",8994,"NM",53,0)
SC BLD PAT SCDE LIST^^0
"BLD",7,"KRN",8994,"NM",54,0)
SC FILE PAT POS ASGN^^0
"BLD",7,"KRN",8994,"NM",55,0)
SC BLD PAT TM LIST^^0
"BLD",7,"KRN",8994,"NM",56,0)
SC BLD PAT POS LIST^^0
"BLD",7,"KRN",8994,"NM",57,0)
SC PAT ENROLL CLN^^0
"BLD",7,"KRN",8994,"NM",58,0)
SC CHECK FOR PC POS^^0
"BLD",7,"KRN",8994,"NM",59,0)
SC BLD PAT APT LIST^^0
"BLD",7,"KRN",8994,"NM",60,0)
SC FILE ALL PAT POS ASGN^^0
"BLD",7,"KRN",8994,"NM",61,0)
SC FILE ALL PAT TM ASGN^^0
"BLD",7,"KRN",8994,"NM",62,0)
SC BLD NOPC TM LIST^^0
"BLD",7,"KRN",8994,"NM",63,0)
SC PAT ASGN MAILMAN^^0
"BLD",7,"KRN",8994,"NM","B","SC BLD NOPC TM LIST",62)

"BLD",7,"KRN",8994,"NM","B","SC BLD PAT APT LIST",59)

"BLD",7,"KRN",8994,"NM","B","SC BLD PAT CLN LIST",49)

"BLD",7,"KRN",8994,"NM","B","SC BLD PAT LIST",50)

"BLD",7,"KRN",8994,"NM","B","SC BLD PAT POS LIST",56)

"BLD",7,"KRN",8994,"NM","B","SC BLD PAT SCDE LIST",53)

"BLD",7,"KRN",8994,"NM","B","SC BLD PAT TM LIST",55)

"BLD",7,"KRN",8994,"NM","B","SC CHANGE HISTORY OK",1)

"BLD",7,"KRN",8994,"NM","B","SC CHECK FOR PC POS",58)

"BLD",7,"KRN",8994,"NM","B","SC DELETE ENTRY",2)

"BLD",7,"KRN",8994,"NM","B","SC DELETE HISTORY",3)

"BLD",7,"KRN",8994,"NM","B","SC FILE ALL PAT POS ASGN",60)

"BLD",7,"KRN",8994,"NM","B","SC FILE ALL PAT TM ASGN",61)

"BLD",7,"KRN",8994,"NM","B","SC FILE NUMBER",4)

"BLD",7,"KRN",8994,"NM","B","SC FILE PAT POS ASGN",54)

"BLD",7,"KRN",8994,"NM","B","SC FILE PAT TM ASGN",51)

"BLD",7,"KRN",8994,"NM","B","SC FILE SINGLE VALUE",5)

"BLD",7,"KRN",8994,"NM","B","SC FILER",6)

"BLD",7,"KRN",8994,"NM","B","SC FIND",7)

"BLD",7,"KRN",8994,"NM","B","SC GET PAT BLOCK",52)

"BLD",7,"KRN",8994,"NM","B","SC GETS ENTRY DATA",8)

"BLD",7,"KRN",8994,"NM","B","SC GLOBAL NODE",9)

"BLD",7,"KRN",8994,"NM","B","SC GLOBAL NODE COUNT",10)

"BLD",7,"KRN",8994,"NM","B","SC HISTORY STATUS OK",11)

"BLD",7,"KRN",8994,"NM","B","SC INACTIVATE ENTRY",12)

"BLD",7,"KRN",8994,"NM","B","SC KEY CHECK",13)

"BLD",7,"KRN",8994,"NM","B","SC LISTER",14)

"BLD",7,"KRN",8994,"NM","B","SC LOCK/UNLOCK NODE",15)

"BLD",7,"KRN",8994,"NM","B","SC MAILMAN",16)

"BLD",7,"KRN",8994,"NM","B","SC MEAN TEST",17)

"BLD",7,"KRN",8994,"NM","B","SC NEW HISTORY OK",18)

"BLD",7,"KRN",8994,"NM","B","SC PAT ASGN MAILMAN",63)

"BLD",7,"KRN",8994,"NM","B","SC PAT ENROLL CLN",57)

"BLD",7,"KRN",8994,"NM","B","SC PATIENT LOOKUP",19)

"BLD",7,"KRN",8994,"NM","B","SC POSITION MEMBERS",20)

"BLD",7,"KRN",8994,"NM","B","SC PRIMARY CARE TEAM",45)

"BLD",7,"KRN",8994,"NM","B","SC PRTP",21)

"BLD",7,"KRN",8994,"NM","B","SC STAFF LOOKUP",39)

"BLD",7,"KRN",8994,"NM","B","SC TEAM LIST",22)

"BLD",7,"KRN",8994,"NM","B","SC USER CLASS STATUS",40)

"BLD",7,"KRN",8994,"NM","B","SC VALIDATOR",23)

"BLD",7,"KRN",8994,"NM","B","SCRP DEFINITION GETRECORD",28)

"BLD",7,"KRN",8994,"NM","B","SCRP FILE ENTRY GETSELECTION",31)

"BLD",7,"KRN",8994,"NM","B","SCRP QUERY CHECK NAME",33)

"BLD",7,"KRN",8994,"NM","B","SCRP QUERY DELETE",34)

"BLD",7,"KRN",8994,"NM","B","SCRP QUERY GETRECORD",29)

"BLD",7,"KRN",8994,"NM","B","SCRP QUERY SAVE",35)

"BLD",7,"KRN",8994,"NM","B","SCRP QUERY VALIDATE",36)

"BLD",7,"KRN",8994,"NM","B","SCRP REPORT PRINT",37)

"BLD",7,"KRN",8994,"NM","B","SCRP SELECTION SOURCE",32)

"BLD",7,"KRN",8994,"NM","B","SCTM AUTOLINK GETLINK",27)

"BLD",7,"KRN",8994,"NM","B","SCTM AUTOLINK GETRECORD",25)

"BLD",7,"KRN",8994,"NM","B","SCTM AUTOLINK SETRECORD",26)

"BLD",7,"KRN",8994,"NM","B","SCUT GET USER RECORD",30)

"BLD",7,"KRN",8994,"NM","B","SCUT SET USER QUERY DEFAULT",38)

"BLD",7,"KRN",8995,0)
8995
"BLD",7,"KRN","B",.4,.4)

"BLD",7,"KRN","B",.401,.401)

"BLD",7,"KRN","B",.402,.402)

"BLD",7,"KRN","B",.403,.403)

"BLD",7,"KRN","B",.5,.5)

"BLD",7,"KRN","B",.84,.84)

"BLD",7,"KRN","B",3.6,3.6)

"BLD",7,"KRN","B",9.2,9.2)

"BLD",7,"KRN","B",9.8,9.8)

"BLD",7,"KRN","B",19,19)

"BLD",7,"KRN","B",19.1,19.1)

"BLD",7,"KRN","B",101,101)

"BLD",7,"KRN","B",409.61,409.61)

"BLD",7,"KRN","B",8994,8994)

"BLD",7,"KRN","B",8995,8995)

"BLD",7,"PRE")
SCMCENV
"BLD",7,"QUES",0)
^9.62^^
"DATA",403.43,1,0)
HL-S01^REQUEST NEW APPOINTMENT BOOKING^1
"DATA",403.43,2,0)
HL-S02^REQUEST APPOINTMENT RESCHEDULING^1
"DATA",403.43,3,0)
HL-S03^REQUEST APPOINTMENT MODIFICATION^1
"DATA",403.43,4,0)
HL-S04^REQUEST APPOINTMENT CANCELLATION^1
"DATA",403.43,5,0)
HL-S05^REQUEST APPOINTMENT DISCONTINUATION^1
"DATA",403.43,6,0)
HL-S06^REQUEST APPOINTMENT DELETION^1
"DATA",403.43,7,0)
HL-S07^REQUEST ADDITION OF SERVICE/RESOURCE ON APPOINTMENT^1
"DATA",403.43,8,0)
HL-S08^REQUEST MODIFICATION OF SERVICE/RESOURCE ON APPOINTMENT^1
"DATA",403.43,9,0)
HL-S09^REQUEST CANCELLATION OF SERVICE/RESOURCE ON APPOINTMENT^1
"DATA",403.43,10,0)
HL-S10^REQUEST DISCONTINUATION OF SERVICE/RESOURCE ON APPOINTMENT^1
"DATA",403.43,11,0)
HL-S11^REQUEST DELETION OF SERVICE/RESOURCE ON APPOINTMENT^1
"DATA",403.43,12,0)
SC-MC001^NEW ENROLLMENT^2
"DATA",403.43,13,0)
SC-MC002^MODIFY ENROLLMENT^2
"DATA",403.43,14,0)
SC-MC003^DELETE ENROLLMENT^2
"DATA",403.43,15,0)
SC-MC004^DISCHARGE ENROLLMENT^2
"DATA",403.43,16,0)
HL-S12^NOTIFICATION OF NEW APPOINTMENT BOOKING^3
"DATA",403.43,17,0)
HL-S13^NOTIFICATION OF APPOINTMENT RESCHEDULING^3
"DATA",403.43,18,0)
HL-S14^NOTIFICATION OF APPOINTMENT MODIFICATION^3
"DATA",403.43,19,0)
HL-S15^NOTIFICATION OF APPOINTMENT CANCELLATION^3
"DATA",403.43,20,0)
HL-S16^NOTIFICATION OF APPOINTMENT DISCONTINUATION^3
"DATA",403.43,21,0)
HL-S17^NOTIFICATION OF APPOINTMENT DELETION^3
"DATA",403.43,22,0)
HL-S18^NOTIFICATION OF ADDITION OF SERVICE/RESOURCE ON APPOINTMENT^3
"DATA",403.43,23,0)
HL-S19^NOTIFICATION OF MODIFICATION OF SERVICE/RESOURCE ON APPT^3
"DATA",403.43,24,0)
HL-S20^NOTIFICATION OF CANCELLATION OF SERVICE/RESOURCE ON APPT^3
"DATA",403.43,25,0)
HL-S21^NOTIFICATION OF DISCONTINUATION OF SERVICE/RESOURCE ON APPT^3
"DATA",403.43,26,0)
HL-S22^NOTIFICATION OF DELETION OF SERVICE/RESOURCE ON APPOINTMENT^3
"DATA",403.43,27,0)
HL-S23^NOTIFICATION OF BLOCKED SCHEDULE TIME SLOT(S)^12
"DATA",403.43,28,0)
HL-S24^NOTIFICATION OF OPENED ("UN-BLOCKED") SCHEDULE TIME SLOT(S)^12
"DATA",403.43,31,0)
SC-RQ001^REQUEST APPOINTMENT CHECK IN^1
"DATA",403.43,32,0)
SC-RQ002^REQUEST OUTPATIENT ENCOUNTER CHECK OUT^1
"DATA",403.43,33,0)
SC-OE001^NOTIFICATION OF APPOINTMENT CHECK IN^3
"DATA",403.43,34,0)
SC-OE002^NOTIFICATION OF OUTPATIENT ENCOUNTER CHECK OUT^3
"DATA",403.43,35,0)
ZM1^TEAM ADD/MODIFY^4
"DATA",403.43,35,"D",0)
^^1^1^2960517^^^^
"DATA",403.43,35,"D",1,0)
New team add
"DATA",403.43,36,0)
ZM2^PATIENT TEAM ADD/MODIFY^7
"DATA",403.43,37,0)
ZM3^TEAM POSITION ADD/MODIFY^5
"DATA",403.43,38,0)
ZM4^PATIENT POSITION ADD/MODIFY^8
"DATA",403.43,39,0)
ZM5^PRACTITIONER POSITION ADD/MODIFY^6
"DATA",403.43,40,0)
SC-RS001^RESOURCE ACTIVATION^9
"DATA",403.43,40,"D",0)
^^1^1^2960516^^^
"DATA",403.43,40,"D",1,0)
Indicates when resource was activated.
"DATA",403.43,41,0)
HL-S25^QUERY - SCHEDULE INFORMATION^13
"DATA",403.44,1,0)
APPOINTMENT NO LONGER REQUIRED^19^^
"DATA",403.44,2,0)
CLINIC CANCELLED^19^^
"DATA",403.44,3,0)
CLINIC STAFFING^19^^
"DATA",403.44,4,0)
DEATH IN FAMILY^19^^
"DATA",403.44,5,0)
INPATIENT STATUS^19^^
"DATA",403.44,6,0)
OTHER^19^^
"DATA",403.44,7,0)
PATIENT DEATH^19^^
"DATA",403.44,8,0)
PATIENT NOT ELIGIBLE^19^^
"DATA",403.44,9,0)
SCHEDULING CONFLICT/ERROR^19^^
"DATA",403.44,10,0)
TRANSFER OPT CARE TO OTHER VA^19^^
"DATA",403.44,11,0)
TRAVEL DIFFICULT^19^^
"DATA",403.44,12,0)
UNABLE TO KEEP APPOINTMENT^19^^
"DATA",403.44,13,0)
WEATHER^19^^
"DATA",403.44,14,0)
TEAM INACTIVATION^35^^
"DATA",403.44,15,0)
LACK OF PERSONNEL^35^^
"DATA",403.44,16,0)
PATIENT REASSIGNMENT^36^^
"DATA",403.44,17,0)
NEW TEAM^35^^
"DATA",403.44,17,"D",0)
^^1^1^2950713^
"DATA",403.44,17,"D",1,0)
This is when the team is created.
"DATA",403.44,18,0)
NEW TEAM POSITION^37^^
"DATA",403.44,18,"D",0)
^^1^1^2950726^^
"DATA",403.44,18,"D",1,0)
This is when the team position is created.
"DATA",403.44,19,0)
INACTIVATE TEAM^37^^
"DATA",403.44,19,"D",0)
^^1^1^2950726^^
"DATA",403.44,19,"D",1,0)
This is when the team is inactivated.
"DATA",403.44,20,0)
TEAM REACTIVATED^35^^
"DATA",403.44,20,"D",0)
^^1^1^2950802^^^
"DATA",403.44,20,"D",1,0)
This is when a previously inactivated team is activated again.
"DATA",403.44,21,0)
EMPLOYEE ASSIGNED TO POSITION^39^^
"DATA",403.44,21,"D",0)
^^1^1^2950801^^
"DATA",403.44,21,"D",1,0)
Employee is assigned to position.
"DATA",403.44,22,0)
EMPLOYEE LEAVES POSITION^39^^
"DATA",403.44,22,"D",0)
^^1^1^2950801^
"DATA",403.44,22,"D",1,0)
Employee leaves position.
"DATA",403.44,23,0)
TEAM DEFINITION^35^^
"DATA",403.44,23,"D",0)
^^1^1^2950802^
"DATA",403.44,23,"D",1,0)
This is when the team is being defined and not ready for use.
"DATA",403.44,24,0)
POSITION DEFINITION^37^^
"DATA",403.44,24,"D",0)
^^1^1^2950802^
"DATA",403.44,24,"D",1,0)
This is when the position is being defined and not ready for use.
"DATA",403.44,25,0)
INACTIVATE POSITION^37^^
"DATA",403.44,25,"D",0)
^^1^1^2950802^
"DATA",403.44,25,"D",1,0)
The position is no longer available because it is being inactivated.
"DATA",403.44,26,0)
STAFF CHANGES^37^^
"DATA",403.44,26,"D",0)
^^1^1^2950905^
"DATA",403.44,26,"D",1,0)
Used to indicate position change due to rotation or other staff changes.
"DATA",403.44,27,0)
POSITION INACTIVATED^39^^
"DATA",403.44,27,"D",0)
^^2^2^2951016^
"DATA",403.44,27,"D",1,0)
Default reason for inactivating a staff assignment when the postion
"DATA",403.44,27,"D",2,0)
is inactivated
"DATA",403.46,1,0)
PHYSICIAN-ATTENDING^34
"DATA",403.46,1,1,0)
^^10^10^2960415^^^^
"DATA",403.46,1,1,1,0)
As a physician, incumbent's duties are to advise on, administer,
"DATA",403.46,1,1,2,0)
supervise or perform professional and scientific work in one or
"DATA",403.46,1,1,3,0)
more fields of medicine. The degree of Doctor of Medicine or Doctor
"DATA",403.46,1,1,4,0)
of Osteopathy is a fundamental requirement, along with a current
"DATA",403.46,1,1,5,0)
license to practice medicine and surgery in a US State, territory
"DATA",403.46,1,1,6,0)
or the District of Columbia.
"DATA",403.46,1,1,7,0)
 
"DATA",403.46,1,1,8,0)
As an attending physician, incumbent acts as team, ward or group
"DATA",403.46,1,1,9,0)
leader, and incurs the associated responsibilities as defined by
"DATA",403.46,1,1,10,0)
the governing Credentials committee.
"DATA",403.46,2,0)
PHYSICIAN-PRIMARY CARE^334
"DATA",403.46,2,1,0)
^^16^16^2960415^^^^
"DATA",403.46,2,1,1,0)
As a physician, incumbent's duties are to advise on, administer,
"DATA",403.46,2,1,2,0)
supervise or perform professional and scientific work in one or
"DATA",403.46,2,1,3,0)
more fields of medicine. The degree of Doctor of Medicine or Doctor
"DATA",403.46,2,1,4,0)
of Osteopathy is a fundamental requirement, along with a current
"DATA",403.46,2,1,5,0)
license to practice medicine and surgery in a US State, territory
"DATA",403.46,2,1,6,0)
or the District of Columbia.
"DATA",403.46,2,1,7,0)
 
"DATA",403.46,2,1,8,0)
As a Primary Care practitioner, the incumbent provides the first
"DATA",403.46,2,1,9,0)
point of assistance for a patient seeking care. Primary Care duties
"DATA",403.46,2,1,10,0)
include: (1) Intake and initial needs assessment, (2) Health 
"DATA",403.46,2,1,11,0)
promotion and disease prevention, (3) Management of
"DATA",403.46,2,1,12,0)
acute and chronic biopsychosocial conditions, 
"DATA",403.46,2,1,13,0)
(4) Access to other components of health care, 
"DATA",403.46,2,1,14,0)
(5) Continuity, and (6) Patient and non-professional
"DATA",403.46,2,1,15,0)
care giver education & training.
"DATA",403.46,2,1,16,0)
(from IL 10-93-031, Under Secretary for Health's Letter)
"DATA",403.46,3,0)
PHYSICIAN-SUBSPECIALTY^334
"DATA",403.46,3,1,0)
^^10^10^2960415^^^
"DATA",403.46,3,1,1,0)
As a physician, incumbent's duties are to advise on, administer,
"DATA",403.46,3,1,2,0)
supervise or perform professional and scientific work in one or
"DATA",403.46,3,1,3,0)
more fields of medicine. The degree of Doctor of Medicine or Doctor
"DATA",403.46,3,1,4,0)
of Osteopathy is a fundamental requirement, along with a current
"DATA",403.46,3,1,5,0)
license to practice medicine and surgery in a US State, territory
"DATA",403.46,3,1,6,0)
or the District of Columbia.
"DATA",403.46,3,1,7,0)
 
"DATA",403.46,3,1,8,0)
The incumbent is also granted clinical privileges (by the appropriate
"DATA",403.46,3,1,9,0)
governing Credentials committee) in regard to the practice of
"DATA",403.46,3,1,10,0)
Specialty or Subspecialty care in the areas of Medicine or Surgery.
"DATA",403.46,4,0)
NURSE PRACTITIONER^276
"DATA",403.46,4,1,0)
^^7^7^2960415^^
"DATA",403.46,4,1,1,0)
Performs appropriate assessments, orders diagnostic tests
"DATA",403.46,4,1,2,0)
and consultations as necessary, prescribes treatment 
"DATA",403.46,4,1,3,0)
interventions in accordance with established protocols,
"DATA",403.46,4,1,4,0)
provides or arranges follow-up care, and provides health
"DATA",403.46,4,1,5,0)
teaching and supportive counseling. Patient care is a joint
"DATA",403.46,4,1,6,0)
responsibility of the Nurse practitioner and the designated
"DATA",403.46,4,1,7,0)
Supervisory Physician or Physicians.
"DATA",403.46,5,0)
PHYSICIAN ASSISTANT^335
"DATA",403.46,5,1,0)
^^6^6^2960415^^^
"DATA",403.46,5,1,1,0)
Provides diagnostic and therapeutic medical care and services
"DATA",403.46,5,1,2,0)
under the guidance of a Physician. This includes taking case
"DATA",403.46,5,1,3,0)
histories, conducting physical examinations, and ordering lab
"DATA",403.46,5,1,4,0)
and other studies. Physician Assistants also may carry out
"DATA",403.46,5,1,5,0)
special procedures, such as giving injections or other medication,
"DATA",403.46,5,1,6,0)
apply or change dressings, or suturing minor lacerations.
"DATA",403.46,6,0)
NURSE (RN)^
"DATA",403.46,6,1,0)
^^7^7^2960415^^^
"DATA",403.46,6,1,1,0)
Provides care to patients in clinics and other settings,
"DATA",403.46,6,1,2,0)
administers anesthetic agents and supportive treatments
"DATA",403.46,6,1,3,0)
to patients undergoing outpatient surgery and other 
"DATA",403.46,6,1,4,0)
medical treatments, promotes better health practices, and
"DATA",403.46,6,1,5,0)
consults or advises nurses providing direct care to patients.
"DATA",403.46,6,1,6,0)
Persons in this position require a professional knowledge and
"DATA",403.46,6,1,7,0)
education in the field of nursing.
"DATA",403.46,7,0)
NURSE (LPN)^571
"DATA",403.46,7,1,0)
^^6^6^2960415^^
"DATA",403.46,7,1,1,0)
Provides a variety of nursing care and practices which do
"DATA",403.46,7,1,2,0)
not require full professional nurse education, but are
"DATA",403.46,7,1,3,0)
represented by the licensing of practical and vocational
"DATA",403.46,7,1,4,0)
nurses by a State, Territory or the District of Columbia.
"DATA",403.46,7,1,5,0)
Persons in these positions may also provide administrative
"DATA",403.46,7,1,6,0)
assistance, such as making appointments, etc.
"DATA",403.46,8,0)
CLINICAL PHARMACIST^58
"DATA",403.46,8,1,0)
^^11^11^2960415^^^^
"DATA",403.46,8,1,1,0)
This is a PharmD.  This is a pharmacist who:
"DATA",403.46,8,1,2,0)
Performs patient care duties related to patient medications as
"DATA",403.46,8,1,3,0)
assigned or granted by the appropriate governing committee at
"DATA",403.46,8,1,4,0)
the facility. These privileges may include and may or may not be
"DATA",403.46,8,1,5,0)
limited to:
"DATA",403.46,8,1,6,0)
(1) Initiation of renewal orders for chronic maintenance medications.
"DATA",403.46,8,1,7,0)
(2) Initiation of orders for laboratory tests necessary to monitor
"DATA",403.46,8,1,8,0)
existing drug therapy.
"DATA",403.46,8,1,9,0)
(3) Initiation of therapyupon referral by a clinician holding prescriptive
"DATA",403.46,8,1,10,0)
privileges and within the scope of practice and privileging of Clinical
"DATA",403.46,8,1,11,0)
Pharmacists.
"DATA",403.46,9,0)
SOCIAL WORKER^444
"DATA",403.46,9,1,0)
^^5^5^2960415^^
"DATA",403.46,9,1,1,0)
Performs patient care duties in accordance with Clinical Privileges
"DATA",403.46,9,1,2,0)
as assigned or granted by the appropriate governing committee in
"DATA",403.46,9,1,3,0)
the area of Social Work. Provides direct services to individuals,
"DATA",403.46,9,1,4,0)
groups and families with counseling, discharge planning, crisis
"DATA",403.46,9,1,5,0)
intervention, etc.
"DATA",403.46,10,0)
PHYSICIAN-PSYCHIATRIST^366
"DATA",403.46,10,1,0)
^^10^10^2960415^^
"DATA",403.46,10,1,1,0)
As a physician, incumbent's duties are to advise on, administer,
"DATA",403.46,10,1,2,0)
supervise or perform professional and scientific work in one or
"DATA",403.46,10,1,3,0)
more fields of medicine. The degree of Doctor of Medicine or Doctor
"DATA",403.46,10,1,4,0)
of Osteopathy is a fundamental requirement, along with a current
"DATA",403.46,10,1,5,0)
license to practice medicine and surgery in a US State, territory
"DATA",403.46,10,1,6,0)
or the District of Columbia.
"DATA",403.46,10,1,7,0)
 
"DATA",403.46,10,1,8,0)
The incumbent is also granted clinical privileges (by the appropriate
"DATA",403.46,10,1,9,0)
governing Credentials committee) in regard to the practice of
"DATA",403.46,10,1,10,0)
Psychiatry.
"DATA",403.46,11,0)
PSYCHOLOGIST
"DATA",403.46,11,1,0)
^^5^5^2960415^^
"DATA",403.46,11,1,1,0)
Performs patient care duties in accordance with Clinical Privileges
"DATA",403.46,11,1,2,0)
as assigned or granted by the appropriate governing committee in
"DATA",403.46,11,1,3,0)
the area of Psychology and Mental Health. This may include individual,
"DATA",403.46,11,1,4,0)
family and group counseling and psychotherapy, assertiveness and other
"DATA",403.46,11,1,5,0)
behavior training, etc.
"DATA",403.46,12,0)
REHAB/PSYCH TECHNICIAN^373
"DATA",403.46,12,1,0)
^^5^5^2960415^^
"DATA",403.46,12,1,1,0)
Provides patient care in accordance with Clinical Privileges
"DATA",403.46,12,1,2,0)
as assigned or granted by the appropriate governing committee in
"DATA",403.46,12,1,3,0)
the area of Psychology and Mental Health. This may include individual,
"DATA",403.46,12,1,4,0)
family or group counseling. The incumbent is typically supervised by
"DATA",403.46,12,1,5,0)
a degreed Psychologist or Mental health practitioner.
"DATA",403.46,13,0)
ADMIN COORDINATOR^78
"DATA",403.46,13,1,0)
^^4^4^2960415^^^^
"DATA",403.46,13,1,1,0)
The administrative coordinator for the team. This person is
"DATA",403.46,13,1,2,0)
involved with administrative (MAS requirements and/or Clinic
"DATA",403.46,13,1,3,0)
administration) duties as well as oversight of the Scheduling
"DATA",403.46,13,1,4,0)
process and Primary Care team definition.
"DATA",403.46,14,0)
PATIENT SERVICES ASSISTANT^314
"DATA",403.46,14,1,0)
^^5^5^2960415^^
"DATA",403.46,14,1,1,0)
Provides clerical and patient processing support to the clinic,
"DATA",403.46,14,1,2,0)
or other unit of a medical facility, in support of the care and
"DATA",403.46,14,1,3,0)
treatment given to patients. This include duties as receptionist,
"DATA",403.46,14,1,4,0)
record keeping duties, clerical duties related to patient care, 
"DATA",403.46,14,1,5,0)
and miscellaneous support to the medical staff of the unit.
"DATA",403.46,15,0)
OTHER
"DATA",403.46,15,1,0)
^^2^2^2960415^^
"DATA",403.46,15,1,1,0)
A general classification for those team members who do not
"DATA",403.46,15,1,2,0)
belong in any of the listed Standard Position entries.
"DATA",403.46,16,0)
RESIDENT (PHYSICIAN)^426
"DATA",403.46,16,1,0)
^^9^9^2960415^^^
"DATA",403.46,16,1,1,0)
Performs patient care duties in accordance with Clinical Privileges
"DATA",403.46,16,1,2,0)
as assigned or granted by the appropriate governing committee and
"DATA",403.46,16,1,3,0)
is supervised by an Attending or assigned physician. Duties include
"DATA",403.46,16,1,4,0)
but may not be limited to completing history & physical examinations,
"DATA",403.46,16,1,5,0)
obtaining blood and other specimens, and provision of patient medical
"DATA",403.46,16,1,6,0)
care as permitted.
"DATA",403.46,16,1,7,0)
 
"DATA",403.46,16,1,8,0)
As a Resident, the incumbent is responsible for providing patient
"DATA",403.46,16,1,9,0)
care as directed by the Attending or supervising physician.
"DATA",403.46,17,0)
INTERN (PHYSICIAN)^336
"DATA",403.46,17,1,0)
^^6^6^2960415^^^
"DATA",403.46,17,1,1,0)
Performs patient care duties in accordance with Clinical Privileges
"DATA",403.46,17,1,2,0)
as assigned or granted by the appropriate governing committee and
"DATA",403.46,17,1,3,0)
is supervised by an Attending or assigned physician. Duties include
"DATA",403.46,17,1,4,0)
but may not be limited to completing history & physical examinations,
"DATA",403.46,17,1,5,0)
obtaining blood and other specimens, and provision of patient medical
"DATA",403.46,17,1,6,0)
care as permitted.
"DATA",403.46,18,0)
MEDICAL STUDENT^255
"DATA",403.46,18,1,0)
^^3^3^2960415^^^
"DATA",403.46,18,1,1,0)
Performs patient care duties in accordance with Medical Center
"DATA",403.46,18,1,2,0)
Policy and Clinical Privileges as assigned or granted by the
"DATA",403.46,18,1,3,0)
appropriate governing committee at the facility.
"DATA",403.46,19,0)
MAS CLERK^222
"DATA",403.46,19,1,0)
^^2^2^2960415^^
"DATA",403.46,19,1,1,0)
This person is a Medical Administrative Service clerk.  Often a major
"DATA",403.46,19,1,2,0)
amount of data entry is done by this individual.
"DATA",403.46,20,0)
DIETITIAN^101
"DATA",403.46,20,1,0)
^^2^2^2960415^^^
"DATA",403.46,20,1,1,0)
An expert in dietetics.  This person is an expert in planning meals
"DATA",403.46,20,1,2,0)
and diets.
"DATA",403.46,21,0)
TEAM PHARMACIST^323
"DATA",403.46,21,1,0)
^^6^6^2960415^^
"DATA",403.46,21,1,1,0)
A pharmacists who:
"DATA",403.46,21,1,2,0)
(1) Is authorized to Fill/Dispense medications
"DATA",403.46,21,1,3,0)
(2) Enter/Verify medication orders
"DATA",403.46,21,1,4,0)
(3) Provide patient education relating to medications
"DATA",403.46,21,1,5,0)
(4) Renew established medications under the protocols defined by
"DATA",403.46,21,1,6,0)
the medical center
"DATA",403.47,1,0)
SUPER TEAM
"DATA",403.47,1,1,0)
^^5^5^2950516^^
"DATA",403.47,1,1,1,0)
A Super Team is defined as a team composed of two or more
"DATA",403.47,1,1,2,0)
component teams. It may be called a "Team of Teams." The
"DATA",403.47,1,1,3,0)
ability to "nest" teams within a super team allows the facility
"DATA",403.47,1,1,4,0)
to associate a number of specialty or other teams for
"DATA",403.47,1,1,5,0)
scheduling, availability and other purposes.
"DATA",403.47,2,0)
PRIMARY CARE
"DATA",403.47,2,1,0)
^^10^10^2950517^^^^
"DATA",403.47,2,1,1,0)
The coordinated interdisciplinary provision of health
"DATA",403.47,2,1,2,0)
care in regard to:
"DATA",403.47,2,1,3,0)
(1) Intake and initial needs assessment, (2) Health 
"DATA",403.47,2,1,4,0)
promotion and disease prevention, (3) Management of
"DATA",403.47,2,1,5,0)
acute and chronic biopsychosocial conditions, 
"DATA",403.47,2,1,6,0)
(4) Access to other components of health care, 
"DATA",403.47,2,1,7,0)
(5) Continuity, and (6) Patient and non-professional
"DATA",403.47,2,1,8,0)
care giver education & training.
"DATA",403.47,2,1,9,0)
 
"DATA",403.47,2,1,10,0)
(from IL 10-93-031, Under Secretary for Health's Letter)
"DATA",403.47,3,0)
INPATIENT
"DATA",403.47,3,1,0)
^^2^2^2960328^^
"DATA",403.47,3,1,1,0)
A Team (usually multi-disciplinary) whose main purpose is
"DATA",403.47,3,1,2,0)
to provide care for inpatients.
"DATA",403.47,4,0)
MENTAL HEALTH TREATMENT
"DATA",403.47,4,1,0)
^^3^3^2950516^
"DATA",403.47,4,1,1,0)
A Team consisting of Mental Health Clinicians and staff
"DATA",403.47,4,1,2,0)
whose purpose is to provide services associated with Mental
"DATA",403.47,4,1,3,0)
Health (Psychology/Psychiatry/Social Work, etc.)
"DATA",403.47,5,0)
CRISIS / RAPID RESPONSE
"DATA",403.47,5,1,0)
^^2^2^2950516^
"DATA",403.47,5,1,1,0)
A multi-disciplinary Team which is called in for immediate
"DATA",403.47,5,1,2,0)
response to a "Code" (emergency assistance) or Psych crisis.
"DATA",403.47,6,0)
COMMUNITY CARE
"DATA",403.47,6,1,0)
^^3^3^2950516^^
"DATA",403.47,6,1,1,0)
Team members for Community Care work outside the VA facility
"DATA",403.47,6,1,2,0)
and provide patient care via Community care centers set up
"DATA",403.47,6,1,3,0)
by VA Medical Centers.
"DATA",403.47,7,0)
SPECIAL TREATMENT PROGRAM
"DATA",403.47,7,1,0)
^^3^3^2950516^
"DATA",403.47,7,1,1,0)
Treatment programs of a confidential nature. Extra care
"DATA",403.47,7,1,2,0)
should be exercised in regard to release of information
"DATA",403.47,7,1,3,0)
and other facets of health care provision.
"DATA",403.47,8,0)
SUB SPECIALTY (MED/SURG)
"DATA",403.47,8,1,0)
^^5^5^2950516^
"DATA",403.47,8,1,1,0)
Treatment teams which are organized to provide Specialty
"DATA",403.47,8,1,2,0)
(Medicine & Surgery) and Subspecialty (Cardiology, Dermatology,
"DATA",403.47,8,1,3,0)
Podiatry, Peripheral Vascular, etc) care.  These teams follow
"DATA",403.47,8,1,4,0)
certain patients, but also receive referrals from the Primary Care
"DATA",403.47,8,1,5,0)
Practitioner.
"DATA",403.47,9,0)
PERSONAL LIST
"DATA",403.47,9,1,0)
^^4^4^2951006^^^
"DATA",403.47,9,1,1,0)
This is inteded to be used for a single practitioner; however, it is
"DATA",403.47,9,1,2,0)
possible to add additional members of the team who provide some kind
"DATA",403.47,9,1,3,0)
of support (e.g., clerks, supervisors, etc.).
"DATA",403.47,9,1,4,0)
This is intended to be used for a single practitioner.  It is possible
"DATA",404.92,1,0)
Patient w/Team Assignments^1
"DATA",404.92,1,1,0)
^^1^1^2960408^^
"DATA",404.92,1,1,1,0)
List patients on the report assigned to primary care or not.
"DATA",404.92,1,"FIELDS",0)
^404.9203P^1^1
"DATA",404.92,1,"FIELDS",1,0)
2^0^0
"DATA",404.92,1,"FILES",0)
^404.9204P^5^4
"DATA",404.92,1,"FILES",1,0)
404.51^2^4
"DATA",404.92,1,"FILES",3,0)
4^2
"DATA",404.92,1,"FILES",4,0)
200^0^404.51
"DATA",404.92,1,"FILES",5,0)
403.46^2^404.51
"DATA",404.92,1,"SORTS",0)
^404.9202^1^1
"DATA",404.92,1,"SORTS",1,0)
Division, Team, Practitioner
"DATA",404.92,2,0)
Detailed Patient Enrollments^3
"DATA",404.92,2,1,0)
^^3^3^2960510^^^^
"DATA",404.92,2,1,1,0)
Lists patients and the clinics in which they are enrolled. 
"DATA",404.92,2,1,2,0)
May be used prior to team/posiiton assignments in order to
"DATA",404.92,2,1,3,0)
help validate clinic enrollments.
"DATA",404.92,2,"FIELDS",0)
^404.9203P^2^2
"DATA",404.92,2,"FIELDS",1,0)
9^1^0^Assigned
"DATA",404.92,2,"FIELDS",2,0)
2^0^0
"DATA",404.92,2,"FILES",0)
^404.9204P^3^3
"DATA",404.92,2,"FILES",1,0)
4^2
"DATA",404.92,2,"FILES",2,0)
44^2^4
"DATA",404.92,2,"FILES",3,0)
404.51^2^4
"DATA",404.92,2,"SORTS",0)
^404.9202^1^1
"DATA",404.92,2,"SORTS",1,0)
Division, Team, Clinic
"DATA",404.92,3,0)
Practitioner Demographics^2
"DATA",404.92,3,1,0)
^^2^2^2960408^^
"DATA",404.92,3,1,1,0)
Displays administrative information for a chosen practitioner. 
"DATA",404.92,3,1,2,0)
Can only select one practitioner per report.
"DATA",404.92,3,"FIELDS",0)
^404.9203P^2^1
"DATA",404.92,3,"FIELDS",2,0)
2^0^0
"DATA",404.92,3,"FILES",0)
^404.9204PI^1^1
"DATA",404.92,3,"FILES",1,0)
200^1^404.51
"DATA",404.92,4,0)
Practitioner's Patients^2
"DATA",404.92,4,1,0)
^^4^4^2960408^^^
"DATA",404.92,4,1,1,0)
Identifies the size and constituents of a practitioner's patient panel.
"DATA",404.92,4,1,2,0)

"DATA",404.92,4,1,3,0)
'Summary Only' field indicates that only totals should be printed on
"DATA",404.92,4,1,4,0)
the report.
"DATA",404.92,4,"FIELDS",0)
^404.9203P^5^3
"DATA",404.92,4,"FIELDS",1,0)
2^0^0
"DATA",404.92,4,"FIELDS",4,0)
8^1^0^NO
"DATA",404.92,4,"FIELDS",5,0)
10^1^0^Division, Practitioner, Team
"DATA",404.92,4,"FILES",0)
^404.9204P^4^4
"DATA",404.92,4,"FILES",1,0)
4^2
"DATA",404.92,4,"FILES",2,0)
404.51^2^4
"DATA",404.92,4,"FILES",3,0)
403.46^2^404.51
"DATA",404.92,4,"FILES",4,0)
200^2^404.51
"DATA",404.92,4,"SORTS",0)
^404.9202^2^2
"DATA",404.92,4,"SORTS",1,0)
Division, Team, Practitioner
"DATA",404.92,4,"SORTS",2,0)
Division, Practitioner, Team
"DATA",404.92,5,0)
Individual Team Profile^1
"DATA",404.92,5,1,0)
^^1^1^2960408^^
"DATA",404.92,5,1,1,0)
Displays basic team definition information.
"DATA",404.92,5,"FIELDS",0)
^404.9203P^1^1
"DATA",404.92,5,"FIELDS",1,0)
2^0^0
"DATA",404.92,5,"FILES",0)
^404.9204P^2^2
"DATA",404.92,5,"FILES",1,0)
4^2
"DATA",404.92,5,"FILES",2,0)
404.51^2^4
"DATA",404.92,5,"SORTS",0)
^404.9202^1^1
"DATA",404.92,5,"SORTS",1,0)
Division, Team
"DATA",404.92,6,0)
Summary of Teams^1
"DATA",404.92,6,1,0)
^^2^2^2960408^^
"DATA",404.92,6,1,1,0)
Reports the number of patients assigned for each practitioner
"DATA",404.92,6,1,2,0)
currently assigned to the team.
"DATA",404.92,6,"FIELDS",0)
^404.9203P^1^1
"DATA",404.92,6,"FIELDS",1,0)
2^0^0
"DATA",404.92,6,"FILES",0)
^404.9204P^3^3
"DATA",404.92,6,"FILES",1,0)
4^2
"DATA",404.92,6,"FILES",2,0)
404.51^2^4
"DATA",404.92,6,"FILES",3,0)
403.46^2^404.51
"DATA",404.92,6,"SORTS",0)
^404.9202^1^1
"DATA",404.92,6,"SORTS",1,0)
Division, Team, Practitioner
"DATA",404.92,7,0)
Team's Patients^1
"DATA",404.92,7,1,0)
^^5^5^2960408^^
"DATA",404.92,7,1,1,0)
Lists a team's patients and the clinics in which they are enrolled.
"DATA",404.92,7,1,2,0)

"DATA",404.92,7,1,3,0)
'Include Patient Status' indicates which patient statuses
"DATA",404.92,7,1,4,0)
should print on report.(AC, OPT, or all)
"DATA",404.92,7,1,5,0)

"DATA",404.92,7,"FIELDS",0)
^404.9203P^5^3
"DATA",404.92,7,"FIELDS",1,0)
2^0^0
"DATA",404.92,7,"FIELDS",4,0)
1^1^0^ALL
"DATA",404.92,7,"FIELDS",5,0)
10^1^0^Division, Team, Practitioner, Patient Name
"DATA",404.92,7,"FILES",0)
^404.9204P^3^3
"DATA",404.92,7,"FILES",1,0)
4^2
"DATA",404.92,7,"FILES",2,0)
404.51^2^4
"DATA",404.92,7,"FILES",3,0)
403.46^2^404.51
"DATA",404.92,7,"SORTS",0)
^404.9202^4^4
"DATA",404.92,7,"SORTS",1,0)
Division, Team, Patient Name
"DATA",404.92,7,"SORTS",2,0)
Division, Team, Last 4 Pt ID
"DATA",404.92,7,"SORTS",3,0)
Division, Team, Practitioner, Patient Name
"DATA",404.92,7,"SORTS",4,0)
Division, Team, Practitioner, Last 4 Pt ID
"DATA",404.92,8,0)
Team's Members^1
"DATA",404.92,8,1,0)
^^5^5^2960408^^
"DATA",404.92,8,1,1,0)
Shows basic information on the team and member practitioners.
"DATA",404.92,8,1,2,0)
May be used to review which practitioners were assigned to a
"DATA",404.92,8,1,3,0)
team during a certain time period.
"DATA",404.92,8,1,4,0)

"DATA",404.92,8,1,5,0)
'Data Range' indicates dates to use in determining the members.
"DATA",404.92,8,"FIELDS",0)
^404.9203P^5^3
"DATA",404.92,8,"FIELDS",1,0)
2^0^0
"DATA",404.92,8,"FIELDS",4,0)
5^1^1^TODAY
"DATA",404.92,8,"FIELDS",5,0)
6^1^1^TODAY
"DATA",404.92,8,"FILES",0)
^404.9204P^5^4
"DATA",404.92,8,"FILES",1,0)
4^2
"DATA",404.92,8,"FILES",2,0)
404.51^2^4
"DATA",404.92,8,"FILES",3,0)
403.46^2^404.51
"DATA",404.92,8,"FILES",5,0)
8930^2^404.51
"DATA",404.92,8,"SORTS",0)
^404.9202^1^1
"DATA",404.92,8,"SORTS",1,0)
Division, Team, Practitioner
"DATA",404.93,1,0)
PRINT PATEINT STATUS^radPatStatus^^
"DATA",404.93,1,1,0)
^^2^2^2960417^
"DATA",404.93,1,1,1,0)
Indicates that the report should contain only entries
"DATA",404.93,1,1,2,0)
for patients with status of OPT or AC or both(all).
"DATA",404.93,2,0)
PRINTER^cboPrinter^^
"DATA",404.93,2,1,0)
^^1^1^2960417^
"DATA",404.93,2,1,1,0)
Name of printer where report should be printed.
"DATA",404.93,3,0)
RUN DATE^txtRunDate^^
"DATA",404.93,3,1,0)
^^1^1^2960417^
"DATA",404.93,3,1,1,0)
Date the report should be executed.
"DATA",404.93,4,0)
RUN TIME^txtRunTime^^
"DATA",404.93,4,1,0)
^^1^1^2960417^
"DATA",404.93,4,1,1,0)
Time the report should be executed.
"DATA",404.93,5,0)
BEGIN DATE^txtBeginDate^^
"DATA",404.93,5,1,0)
^^1^1^2960417^
"DATA",404.93,5,1,1,0)
Beginning date for reports that are searched by date range.
"DATA",404.93,6,0)
END DATE^txtEndDate^^
"DATA",404.93,6,1,0)
^^1^1^2960417^
"DATA",404.93,6,1,1,0)
Ending date for reports that are searched by date range.
"DATA",404.93,8,0)
SUMMARY ONLY^chkSummary^^
"DATA",404.93,8,1,0)
^^2^2^2960417^
"DATA",404.93,8,1,1,0)
Indicates whether or not only summary information should
"DATA",404.93,8,1,2,0)
printed on the report.
"DATA",404.93,9,0)
PATIENT ASSIGNED^radAssigned^^
"DATA",404.93,9,1,0)
^^3^3^2960417^
"DATA",404.93,9,1,1,0)
Indicates that the report should contain only entries
"DATA",404.93,9,1,2,0)
for patients enrolled in specified clinics or only
"DATA",404.93,9,1,3,0)
entries for patients not enrolled in specified clinics. 
"DATA",404.93,10,0)
REPORT SORT^cboSort^^
"DATA",404.93,10,1,0)
^^1^1^2960417^
"DATA",404.93,10,1,1,0)
Sort selection that the user desires for the report.
"DATA",404.94,1,0)
TEAM REPORTS^1
"DATA",404.94,1,1,0)
^^1^1^2960417^^
"DATA",404.94,1,1,1,0)
PCMM reports that are team centric in information printed.
"DATA",404.94,2,0)
PRACTITIONER REPORTS^1
"DATA",404.94,2,1,0)
^^1^1^2960417^^
"DATA",404.94,2,1,1,0)
PCMM reports that are practitioner centric in information printed.
"DATA",404.94,3,0)
CLINIC REPORTS^1
"DATA",404.94,3,1,0)
^^1^1^2960417^
"DATA",404.94,3,1,1,0)
PCMM reports that are clinic centric in information printed.
"DATA",404.95,1,0)
System Default^.5^2^1^^
"DATA",404.95,1,1,0)
^^2^2^2960507^^
"DATA",404.95,1,1,1,0)
This is the standard query template used when the user
"DATA",404.95,1,1,2,0)
has not specified a default query.
"DATA",404.95,1,"FIELDS",0)
^404.9502P^^0
"DATA",404.95,1,"FILES",0)
^404.9503V^^0
"FIA",44)
HOSPITAL LOCATION
"FIA",44,0)
^SC(
"FIA",44,0,0)
44I
"FIA",44,0,1)
y^y^f^^^^n
"FIA",44,0,10)

"FIA",44,0,11)

"FIA",44,0,"RLRO")

"FIA",44,0,"VR")
5.3^SD
"FIA",44,44)
0
"FIA",44,44.0001)
0
"FIA",44,44.0002)
0
"FIA",44,44.001)
0
"FIA",44,44.002)
0
"FIA",44,44.003)
0
"FIA",44,44.004)
0
"FIA",44,44.005)
0
"FIA",44,44.006)
0
"FIA",44,44.007)
0
"FIA",44,44.008)
0
"FIA",44,44.009)
0
"FIA",44,44.01)
0
"FIA",44,44.02)
0
"FIA",44,44.03)
0
"FIA",44,44.04)
0
"FIA",44,44.05)
0
"FIA",44,44.06)
0
"FIA",44,44.07)
0
"FIA",44,44.08)
0
"FIA",44,44.09)
0
"FIA",44,44.1)
0
"FIA",44,44.101)
0
"FIA",44,44.11)
0
"FIA",44,44.40457)
0
"FIA",403.35)
SCHEDULING USER PREFERENCE
"FIA",403.35,0)
^SCRS(403.35,
"FIA",403.35,0,0)
403.35P
"FIA",403.35,0,1)
y^y^f^^^^n
"FIA",403.35,0,10)

"FIA",403.35,0,11)

"FIA",403.35,0,"RLRO")

"FIA",403.35,0,"VR")
5.3^SD
"FIA",403.35,403.35)
0
"FIA",403.43)
SCHEDULING EVENT
"FIA",403.43,0)
^SD(403.43,
"FIA",403.43,0,0)
403.43I
"FIA",403.43,0,1)
y^y^f^^n^^y^o^n
"FIA",403.43,0,10)

"FIA",403.43,0,11)

"FIA",403.43,0,"RLRO")

"FIA",403.43,0,"VR")
5.3^SD
"FIA",403.43,403.43)
0
"FIA",403.43,403.435)
0
"FIA",403.44)
SCHEDULING REASON
"FIA",403.44,0)
^SD(403.44,
"FIA",403.44,0,0)
403.44I
"FIA",403.44,0,1)
y^y^f^^n^^y^o^n
"FIA",403.44,0,10)

"FIA",403.44,0,11)

"FIA",403.44,0,"RLRO")

"FIA",403.44,0,"VR")
5.3^SD
"FIA",403.44,403.44)
0
"FIA",403.44,403.445)
0
"FIA",403.46)
STANDARD POSITION
"FIA",403.46,0)
^SD(403.46,
"FIA",403.46,0,0)
403.46
"FIA",403.46,0,1)
y^y^f^^n^^y^o^n
"FIA",403.46,0,10)

"FIA",403.46,0,11)

"FIA",403.46,0,"RLRO")

"FIA",403.46,0,"VR")
5.3^SD
"FIA",403.46,403.46)
0
"FIA",403.46,403.46001)
0
"FIA",403.47)
TEAM PURPOSE
"FIA",403.47,0)
^SD(403.47,
"FIA",403.47,0,0)
403.47
"FIA",403.47,0,1)
y^y^f^^n^^y^o^n
"FIA",403.47,0,10)

"FIA",403.47,0,11)

"FIA",403.47,0,"RLRO")

"FIA",403.47,0,"VR")
5.3^SD
"FIA",403.47,403.47)
0
"FIA",403.47,403.47001)
0
"FIA",404.41)
OUTPATIENT PROFILE
"FIA",404.41,0)
^SCPT(404.41,
"FIA",404.41,0,0)
404.41P
"FIA",404.41,0,1)
y^y^f^^^^n
"FIA",404.41,0,10)

"FIA",404.41,0,11)

"FIA",404.41,0,"RLRO")

"FIA",404.41,0,"VR")
5.3^SD
"FIA",404.41,404.41)
0
"FIA",404.41,404.4125)
0
"FIA",404.42)
PATIENT TEAM ASSIGNMENT
"FIA",404.42,0)
^SCPT(404.42,
"FIA",404.42,0,0)
404.42IP
"FIA",404.42,0,1)
y^y^f^^^^n
"FIA",404.42,0,10)

"FIA",404.42,0,11)

"FIA",404.42,0,"RLRO")

"FIA",404.42,0,"VR")
5.3^SD
"FIA",404.42,404.42)
0
"FIA",404.42,404.421)
0
"FIA",404.43)
PATIENT TEAM POSITION ASSIGNMENT
"FIA",404.43,0)
^SCPT(404.43,
"FIA",404.43,0,0)
404.43PI
"FIA",404.43,0,1)
y^y^f^^^^n
"FIA",404.43,0,10)

"FIA",404.43,0,11)

"FIA",404.43,0,"RLRO")

"FIA",404.43,0,"VR")
5.3^SD
"FIA",404.43,404.43)
0
"FIA",404.51)
TEAM
"FIA",404.51,0)
^SCTM(404.51,
"FIA",404.51,0,0)
404.51
"FIA",404.51,0,1)
y^y^f^^^^n
"FIA",404.51,0,10)

"FIA",404.51,0,11)

"FIA",404.51,0,"RLRO")

"FIA",404.51,0,"VR")
5.3^SD
"FIA",404.51,404.51)
0
"FIA",404.51,404.525)
0
"FIA",404.52)
POSITION ASSIGNMENT HISTORY
"FIA",404.52,0)
^SCTM(404.52,
"FIA",404.52,0,0)
404.52IP
"FIA",404.52,0,1)
y^y^f^^^^n
"FIA",404.52,0,10)

"FIA",404.52,0,11)

"FIA",404.52,0,"RLRO")

"FIA",404.52,0,"VR")
5.3^SD
"FIA",404.52,404.52)
0
"FIA",404.56)
TEAM AUTOLINK
"FIA",404.56,0)
^SCTM(404.56,
"FIA",404.56,0,0)
404.56PI
"FIA",404.56,0,1)
y^y^f^^^^n
"FIA",404.56,0,10)

"FIA",404.56,0,11)

"FIA",404.56,0,"RLRO")

"FIA",404.56,0,"VR")
5.3^SD
"FIA",404.56,404.56)
0
"FIA",404.57)
TEAM POSITION
"FIA",404.57,0)
^SCTM(404.57,
"FIA",404.57,0,0)
404.57I
"FIA",404.57,0,1)
y^y^f^^^^n
"FIA",404.57,0,10)

"FIA",404.57,0,11)

"FIA",404.57,0,"RLRO")

"FIA",404.57,0,"VR")
5.3^SD
"FIA",404.57,404.57)
0
"FIA",404.57,404.571)
0
"FIA",404.58)
TEAM HISTORY
"FIA",404.58,0)
^SCTM(404.58,
"FIA",404.58,0,0)
404.58PI
"FIA",404.58,0,1)
y^y^f^^^^n
"FIA",404.58,0,10)

"FIA",404.58,0,11)

"FIA",404.58,0,"RLRO")

"FIA",404.58,0,"VR")
5.3^SD
"FIA",404.58,404.58)
0
"FIA",404.59)
TEAM POSITION HISTORY
"FIA",404.59,0)
^SCTM(404.59,
"FIA",404.59,0,0)
404.59PI
"FIA",404.59,0,1)
y^y^f^^^^n
"FIA",404.59,0,10)

"FIA",404.59,0,11)

"FIA",404.59,0,"RLRO")

"FIA",404.59,0,"VR")
5.3^SD
"FIA",404.59,404.59)
0
"FIA",404.91)
SCHEDULING PARAMETER
"FIA",404.91,0)
^SD(404.91,
"FIA",404.91,0,0)
404.91
"FIA",404.91,0,1)
y^y^f^^^^n
"FIA",404.91,0,10)

"FIA",404.91,0,11)

"FIA",404.91,0,"RLRO")

"FIA",404.91,0,"VR")
5.3^SD
"FIA",404.91,404.91)
0
"FIA",404.92)
SCHEDULING REPORT DEFINITION
"FIA",404.92,0)
^SD(404.92,
"FIA",404.92,0,0)
404.92
"FIA",404.92,0,1)
y^y^f^^n^^y^o^n
"FIA",404.92,0,10)

"FIA",404.92,0,11)

"FIA",404.92,0,"RLRO")

"FIA",404.92,0,"VR")
5.3^SD
"FIA",404.92,404.92)
0
"FIA",404.92,404.9201)
0
"FIA",404.92,404.9202)
0
"FIA",404.92,404.9203)
0
"FIA",404.92,404.9204)
0
"FIA",404.93)
SCHEDULING REPORT FIELDS DEFINITION
"FIA",404.93,0)
^SD(404.93,
"FIA",404.93,0,0)
404.93
"FIA",404.93,0,1)
y^y^f^^n^^y^o^n
"FIA",404.93,0,10)

"FIA",404.93,0,11)

"FIA",404.93,0,"RLRO")

"FIA",404.93,0,"VR")
5.3^SD
"FIA",404.93,404.93)
0
"FIA",404.93,404.9301)
0
"FIA",404.94)
SCHEDULING REPORT GROUP
"FIA",404.94,0)
^SD(404.94,
"FIA",404.94,0,0)
404.94
"FIA",404.94,0,1)
y^y^f^^n^^y^o^n
"FIA",404.94,0,10)

"FIA",404.94,0,11)

"FIA",404.94,0,"RLRO")

"FIA",404.94,0,"VR")
5.3^SD
"FIA",404.94,404.94)
0
"FIA",404.94,404.9401)
0
"FIA",404.95)
SCHEDULING REPORT QUERY TEMPLATE
"FIA",404.95,0)
^SD(404.95,
"FIA",404.95,0,0)
404.95
"FIA",404.95,0,1)
y^y^f^^n^^y^o^n
"FIA",404.95,0,10)

"FIA",404.95,0,11)
IF $P($G(^(0)),U,1)="System Default",$P(^(0),U,2)=.5
"FIA",404.95,0,"RLRO")

"FIA",404.95,0,"VR")
5.3^SD
"FIA",404.95,404.95)
0
"FIA",404.95,404.9501)
0
"FIA",404.95,404.9502)
0
"FIA",404.95,404.9503)
0
"INI")
SCMCPRE
"INIT")
SCMCPST
"KRN",.402,67,-1)
0^2
"KRN",.402,67,0)
SDB^2960402.1149^^44^^^2960508
"KRN",.402,67,"DIAB",1,1,44.03,0)
ALL
"KRN",.402,67,"DIAB",1,1,44.04,0)
ALL
"KRN",.402,67,"DR",1,44)
.01;1;2504//Y;9;2502;S:X'["Y" Y="@05";2502.5;@05;S:$S('$D(^DG(43,1,"GL")):1,$D(^DG(43,1,"GL"))&('$P(^DG(43,1,"GL"),"^",2)):1,1:0) Y="@10";3.5//^S X=+$O(^DG(40.8,0)),X=$S($D(^(X,0)):$P(^(0),"^"),1:"");@10;8;2507//REGULAR;99;2000;
"KRN",.402,67,"DR",1,44,1)
2000.5//YES;2508;2509;2510;2511;24;26;S:'X Y="@15";2600;2801;@15;27;S:'X Y="@20";2700;@20;28;2001;2002;S:$N(^SC(DA,"ST",0))>0 Y="@25";1914;Q;@25;2003;2005;1918.5;2503;2500;S:X'="Y" Y="@30";2501;Q;@30;10;1916;1918;1910;1912;Q;
"KRN",.402,67,"DR",1,44,2)
I '$D(SDLA) S SDLA=X;1913;S:$N(^SC(DA,"ST",0))>0 Y="@99";1917//4;@99;
"KRN",.402,67,"DR",2,44.03)
.01
"KRN",.402,67,"DR",2,44.04)
.01
"KRN",.402,67,"DR",2,44.1)
.01;.02;
"KRN",.402,67,"DR",2,44.11)
.01;.02;
"KRN",.402,67,"ROU")
^SDBT
"KRN",.402,67,"ROUOLD")
SDBT
"KRN",.84,4030005.001,-1)
0^6
"KRN",.84,4030005.001,0)
4030005.001^1^y^SCHEDULING
"KRN",.84,4030005.001,1,0)
^^1^1^2960407^^^^
"KRN",.84,4030005.001,1,1,0)
This error indicates there was a problem finding a user in system.
"KRN",.84,4030005.001,2,0)
^^4^4^2960411^^^^
"KRN",.84,4030005.001,2,1,0)
 Error Code: 4030005.001   Type: Missing User Record
"KRN",.84,4030005.001,2,2,0)
    User ID: |USER ID|
"KRN",.84,4030005.001,2,3,0)
Description: No user was found with this User ID.
"KRN",.84,4030005.001,2,4,0)
______________________________________________________
"KRN",.84,4030005.001,3,0)
^.845^1^1
"KRN",.84,4030005.001,3,1,0)
USER ID^Missing user's ID code(DUZ).
"KRN",.84,4035001.001,-1)
0^3
"KRN",.84,4035001.001,0)
4035001.001^1^y^SCHEDULING
"KRN",.84,4035001.001,1,0)
^^2^2^2960407^^^^
"KRN",.84,4035001.001,1,1,0)
This error is used to indicate that a required field for a PCMM
"KRN",.84,4035001.001,1,2,0)
report query was missing.
"KRN",.84,4035001.001,2,0)
^^6^6^2960411^^^^
"KRN",.84,4035001.001,2,1,0)
 Error Code: 4035001.001   Type: Missing Query Parameter
"KRN",.84,4035001.001,2,2,0)
  Parameter: |FIELD|
"KRN",.84,4035001.001,2,3,0)
Description: This field is required for execution
"KRN",.84,4035001.001,2,4,0)
             of report. It was not part of the query
"KRN",.84,4035001.001,2,5,0)
             definition.
"KRN",.84,4035001.001,2,6,0)
_________________________________________________________
"KRN",.84,4035001.001,3,0)
^.845^1^1
"KRN",.84,4035001.001,3,1,0)
FIELD^Name of missing parameter field.
"KRN",.84,4035001.002,-1)
0^4
"KRN",.84,4035001.002,0)
4035001.002^1^y^SCHEDULING
"KRN",.84,4035001.002,1,0)
^^2^2^2960407^^^^
"KRN",.84,4035001.002,1,1,0)
This error indicates that the query specification contained
"KRN",.84,4035001.002,1,2,0)
inconsistencies.
"KRN",.84,4035001.002,2,0)
^^8^8^2960411^^^^
"KRN",.84,4035001.002,2,1,0)
    Error Code: 4035001.002  Type: Inconsistent Selection
"KRN",.84,4035001.002,2,2,0)
Selection Type: |TYPE|
"KRN",.84,4035001.002,2,3,0)
     Selection: |SELECTION|
"KRN",.84,4035001.002,2,4,0)
Dependent Type: |DEPENDENT|
"KRN",.84,4035001.002,2,5,0)
   Description: The selection made is inconsistent
"KRN",.84,4035001.002,2,6,0)
                with the selections made for the
"KRN",.84,4035001.002,2,7,0)
                dependent type.
"KRN",.84,4035001.002,2,8,0)
________________________________________________________
"KRN",.84,4035001.002,3,0)
^.845^3^3
"KRN",.84,4035001.002,3,1,0)
TYPE^Type of selection made by user.
"KRN",.84,4035001.002,3,2,0)
SELECTION^Actual selection made by user.
"KRN",.84,4035001.002,3,3,0)
DEPENDENT^Dependent type for selection,
"KRN",.84,4035002.001,-1)
0^5
"KRN",.84,4035002.001,0)
4035002.001^1^y^SCHEDULING
"KRN",.84,4035002.001,1,0)
^^3^3^2960407^^^
"KRN",.84,4035002.001,1,1,0)
This error indicates a report query template cannot be deleted
"KRN",.84,4035002.001,1,2,0)
because at least one user has designated the template as
"KRN",.84,4035002.001,1,3,0)
their default template.
"KRN",.84,4035002.001,2,0)
^^5^5^2960411^^^^
"KRN",.84,4035002.001,2,1,0)
   Error Code: 4035002.001   Type: Template Deletion Error
"KRN",.84,4035002.001,2,2,0)
Template Name: |QUERY NAME|
"KRN",.84,4035002.001,2,3,0)
  Description: The query template is being accessed by at
"KRN",.84,4035002.001,2,4,0)
               least one user as their 'default' template.
"KRN",.84,4035002.001,2,5,0)
__________________________________________________________
"KRN",.84,4035002.001,3,0)
^.845^1^1
"KRN",.84,4035002.001,3,1,0)
QUERY NAME^Name of query template.
"KRN",.84,4040000,-1)
0^7
"KRN",.84,4040000,0)
4040000^2^^SCHEDULING
"KRN",.84,4040000,1,0)
^^2^2^2950717^^
"KRN",.84,4040000,1,1,0)
General PCMM Message - No good dialog entry number given during PCMM call
"KRN",.84,4040000,1,2,0)
to BLD^DIALOG.
"KRN",.84,4040000,2,0)
^^1^1^2950717^
"KRN",.84,4040000,2,1,0)
No Valid dialog entry number given prior to dialog call.
"KRN",.84,4045100,-1)
0^1
"KRN",.84,4045100,0)
4045100^1^y^SCHEDULING
"KRN",.84,4045100,1,0)
^^1^1^2960306^^^^
"KRN",.84,4045100,1,1,0)
General Error Message for Team File - #404.51
"KRN",.84,4045100,2,0)
^^3^3^2960306^^^^
"KRN",.84,4045100,2,1,0)
 Error with TEAM File data entry
"KRN",.84,4045100,2,2,0)
 Team =    |TEAM|
"KRN",.84,4045100,2,3,0)
 Message = |MESSAGE|
"KRN",.84,4045101,-1)
0^2
"KRN",.84,4045101,0)
4045101^1^y^SCHEDULING
"KRN",.84,4045101,1,0)
^^1^1^2960306^^^^
"KRN",.84,4045101,1,1,0)
Bad/Missing Team entry.
"KRN",.84,4045101,2,0)
^^13^13^2960306^^^^
"KRN",.84,4045101,2,1,0)
Bad or missing data
"KRN",.84,4045101,2,2,0)
  Team = |TEAM|
"KRN",.84,4045101,2,3,0)
  Dates= |DATES|
"KRN",.84,4045101,2,4,0)
  Position = |POSITION|
"KRN",.84,4045101,2,5,0)
  Output Array = |OUTPUT ARRAY|
"KRN",.84,4045101,2,6,0)
  Error Array = |ERROR ARRAY|
"KRN",.84,4045101,2,7,0)
  Patient     = |PATIENT|
"KRN",.84,4045101,2,8,0)
  Institution = |INSTITUTION|
"KRN",.84,4045101,2,9,0)
  Autolink    = |AUTOLINK|
"KRN",.84,4045101,2,10,0)
  Effective Dt= |EFFECTIVE DATE|
"KRN",.84,4045101,2,11,0)
  Inactive Dt = |INACTIVE DATE|
"KRN",.84,4045101,2,12,0)
  Clinic      = |CLINIC|
"KRN",.84,4045101,2,13,0)
  Message     = |MESSAGE|
"KRN",.84,4045107,-1)
0^8
"KRN",.84,4045107,0)
4045107^1^y^SCHEDULING
"KRN",.84,4045107,1,0)
^^1^1^2950717^
"KRN",.84,4045107,1,1,0)
Bad/Missing data for 404.51 field #.07.
"KRN",.84,4045107,2,0)
^^1^1^2950717^
"KRN",.84,4045107,2,1,0)
Bad or Missing data. Institution field entry of Team file=|SCINST|
"KRN",.84,4045200,-1)
0^9
"KRN",.84,4045200,0)
4045200^1^y^SCHEDULING
"KRN",.84,4045200,1,0)
^^1^1^2960306^
"KRN",.84,4045200,1,1,0)
Practitioner assignment Error
"KRN",.84,4045200,2,0)
^^3^3^2960306^
"KRN",.84,4045200,2,1,0)
Error with Practitioner-Position Assignment
"KRN",.84,4045200,2,2,0)
 Practitioner = |PRACTITIONER|
"KRN",.84,4045200,2,3,0)
 Message      = |MESSAGE|
"KRN",.84,4045602,-1)
0^10
"KRN",.84,4045602,0)
4045602^1^y^SCHEDULING
"KRN",.84,4045602,1,0)
^^1^1^2950717^
"KRN",.84,4045602,1,1,0)
Bad/Missing data for field #.02 of file #404.56.
"KRN",.84,4045602,2,0)
^^1^1^2950717^
"KRN",.84,4045602,2,1,0)
Bad/Missing data relating to TEAM AUTOLINKS file's AUTOLINK field = |SCAU|.
"KRN",.84,4045700,-1)
0^11
"KRN",.84,4045700,0)
4045700^1^y^SCHEDULING
"KRN",.84,4045700,1,0)
^^1^1^2960306^^^
"KRN",.84,4045700,1,1,0)
Team Position General Error
"KRN",.84,4045700,2,0)
^^4^4^2960306^^^
"KRN",.84,4045700,2,1,0)
Bad Data for Postion Data entry
"KRN",.84,4045700,2,2,0)
 Team =     |TEAM|
"KRN",.84,4045700,2,3,0)
 Position = |POSITION|
"KRN",.84,4045700,2,4,0)
 Message  = |MESSAGE|
"KRN",19,227,-1)
2^16
"KRN",19,227,0)
SDMGR^Scheduling Manager's Menu^^M^^^^^^^^SCHEDULING^^1
"KRN",19,227,1,0)
^^2^2^2960327^^^^
"KRN",19,227,1,1,0)
This is the primary menu option which allows the user access to all
"KRN",19,227,1,2,0)
options of the scheduling module.
"KRN",19,227,10,0)
^19.01PI^6^6
"KRN",19,227,10,1,0)
232^
"KRN",19,227,10,1,"^")
SDAPP
"KRN",19,227,10,2,0)
242^
"KRN",19,227,10,2,"^")
SDOUTPUT
"KRN",19,227,10,3,0)
247^
"KRN",19,227,10,3,"^")
SDSUP
"KRN",19,227,20)
D ^SDVER
"KRN",19,227,99)
56362,46544
"KRN",19,227,99.1)
53729,33583
"KRN",19,227,"U")
SCHEDULING MANAGER'S MENU
"KRN",19,232,-1)
2^17
"KRN",19,232,0)
SDAPP^Appointment Menu^^M^^^^^^^^SCHEDULING^^^1
"KRN",19,232,1,0)
^^2^2^2920207^^^^
"KRN",19,232,1,1,0)
This option allows the user to perform the functions of a scheduling
"KRN",19,232,1,2,0)
clerk.
"KRN",19,232,10,0)
^19.01PI^24^19
"KRN",19,232,10,15,0)
764^
"KRN",19,232,10,15,"^")
SDNEXT
"KRN",19,232,10,24,0)
5207
"KRN",19,232,10,24,"^")
SC MAKE CONSULT APPOINTMENT
"KRN",19,232,15)
K SDNEXT
"KRN",19,232,99)
56706,7617
"KRN",19,232,99.1)
54371,71286
"KRN",19,232,"U")
APPOINTMENT MENU
"KRN",19,242,-1)
2^11
"KRN",19,242,0)
SDOUTPUT^Outputs^^M^^^^^^^^SCHEDULING
"KRN",19,242,1,0)
^^2^2^2960329^^^^
"KRN",19,242,1,1,0)
This is the primary menu option which allows the user access to all
"KRN",19,242,1,2,0)
output options of the scheduling module.
"KRN",19,242,10,0)
^19.01PI^26^20
"KRN",19,242,10,26,0)
5191
"KRN",19,242,10,26,"^")
SC PCMM REPORTS MENU
"KRN",19,242,99)
56671,77552
"KRN",19,242,"U")
OUTPUTS
"KRN",19,247,-1)
2^13
"KRN",19,247,0)
SDSUP^Supervisor Menu^^M^^^^^^^^SCHEDULING
"KRN",19,247,1,0)
^^2^2^2960410^^^^
"KRN",19,247,1,1,0)
This is the primary menu option which allows the user access to all
"KRN",19,247,1,2,0)
supervisor functions of the scheduling module.
"KRN",19,247,10,0)
^19.01PI^18^16
"KRN",19,247,10,18,0)
5204
"KRN",19,247,10,18,"^")
SC PCMM CONVERT PATIENTS
"KRN",19,247,99)
56713,39033
"KRN",19,247,"U")
SUPERVISOR MENU
"KRN",19,764,-1)
0^12
"KRN",19,764,0)
SDNEXT^Find Next Available Appointment^^R^^^^^^^^SCHEDULING^^^1
"KRN",19,764,1,0)
^^6^6^2950425^^^^
"KRN",19,764,1,1,0)
This option finds the day having the next available clinic slot for a
"KRN",19,764,1,2,0)
selected clinic.  The search starts from a user-selected date and ends with
"KRN",19,764,1,3,0)
the date calculated by the maximum # of days for future booking parameter.
"KRN",19,764,1,4,0)
Variable length clinics allow you to choose the length of the appointment to
"KRN",19,764,1,5,0)
search for and there must be enough consecutive slots available to cover
"KRN",19,764,1,6,0)
this appt length before a day is selected.
"KRN",19,764,15)
K FND,J,POP,SDAPP,SDNEXT
"KRN",19,764,25)
NEW^SDNEXT
"KRN",19,764,"U")
FIND NEXT AVAILABLE APPOINTMEN
"KRN",19,5191,-1)
0^8
"KRN",19,5191,0)
SC PCMM REPORTS MENU^PCMM Reports^^M^^^^^^^^SCHEDULING
"KRN",19,5191,1,0)
^^2^2^2960329^^^^
"KRN",19,5191,1,1,0)
This is the primary menu option which allows the user access to all
"KRN",19,5191,1,2,0)
of the PCMM reports.  It hangs off of the [SDOUTPUT] Outputs menu.
"KRN",19,5191,10,0)
^19.01IP^8^8
"KRN",19,5191,10,1,0)
5193
"KRN",19,5191,10,1,"^")
SC PCMM DETAIL LIST PTS
"KRN",19,5191,10,2,0)
5196
"KRN",19,5191,10,2,"^")
SC PCMM IND TEAM PROFILE
"KRN",19,5191,10,3,0)
5199
"KRN",19,5191,10,3,"^")
SC PCMM LIST TEAM'S MEMBERS
"KRN",19,5191,10,4,0)
5198
"KRN",19,5191,10,4,"^")
SC PCMM LIST TEAM'S PATIENTS
"KRN",19,5191,10,5,0)
5194
"KRN",19,5191,10,5,"^")
SC PCMM PRACT DEMO
"KRN",19,5191,10,6,0)
5195
"KRN",19,5191,10,6,"^")
SC PCMM PRACT PATIENTS
"KRN",19,5191,10,7,0)
5192
"KRN",19,5191,10,7,"^")
SC PCMM PT LIST W/TEAM ASSIGN
"KRN",19,5191,10,8,0)
5197
"KRN",19,5191,10,8,"^")
SC PCMM SUM LIST OF TEAMS
"KRN",19,5191,99)
56713,52601
"KRN",19,5191,"U")
PCMM REPORTS
"KRN",19,5192,-1)
0^7
"KRN",19,5192,0)
SC PCMM PT LIST W/TEAM ASSIGN^Patient w/Team Assignments^^R^^^^^^^^SCHEDULING^^
"KRN",19,5192,1,0)
^^4^4^2960206^
"KRN",19,5192,1,1,0)
This report lists patients along with selected team information (Team name,
"KRN",19,5192,1,2,0)
practitioners in positions assigned to patients, etc.).  If 'NONE' is
"KRN",19,5192,1,3,0)
selected for the practitioner, the report will list patients without
"KRN",19,5192,1,4,0)
that kind of assignment (e.g., no Primary Care Practitioner).
"KRN",19,5192,20)

"KRN",19,5192,25)
PROMPTS^SCRPTA
"KRN",19,5192,99)
56649,58071
"KRN",19,5192,"U")
PATIENT W/TEAM ASSIGNMENTS
"KRN",19,5193,-1)
0^1
"KRN",19,5193,0)
SC PCMM DETAIL LIST PTS^Detailed Patient Enrollments^^R^^^^^^^^SCHEDULING^^
"KRN",19,5193,1,0)
^^6^6^2960524^
"KRN",19,5193,1,1,0)
This report lists patients and the clinics in which they are enrolled.  
"KRN",19,5193,1,2,0)
This report may be used prior to team/position assignments in order to
"KRN",19,5193,1,3,0)
help validate clinic enrollments.  The report can be printed for those 
"KRN",19,5193,1,4,0)
patients who are assigned to the team for primary care or for those
"KRN",19,5193,1,5,0)
patients who are assigned to the team for something other than primary
"KRN",19,5193,1,6,0)
care.
"KRN",19,5193,20)

"KRN",19,5193,25)
PROMPTS^SCRPEC
"KRN",19,5193,99)
56693,59580
"KRN",19,5193,"U")
DETAILED PATIENT ENROLLMENTS
"KRN",19,5194,-1)
0^5
"KRN",19,5194,0)
SC PCMM PRACT DEMO^Practitioner Demographics^^R^^^^^^^^SCHEDULING^^
"KRN",19,5194,1,0)
^^2^2^2960226^^^^
"KRN",19,5194,1,1,0)
This report displays administrative information for a chosen practitioner.
"KRN",19,5194,1,2,0)
This will be similar to or may replace the Clinic Profile option.
"KRN",19,5194,20)

"KRN",19,5194,25)
PROMPTS^SCRPRAC
"KRN",19,5194,99)
56649,58102
"KRN",19,5194,"U")
PRACTITIONER DEMOGRAPHICS
"KRN",19,5195,-1)
0^6
"KRN",19,5195,0)
SC PCMM PRACT PATIENTS^Practitioner's Patients^^R^^^^^^^^SCHEDULING^^
"KRN",19,5195,1,0)
^^2^2^2960228^^
"KRN",19,5195,1,1,0)
This report identifies the size and constituents of a practitioner's
"KRN",19,5195,1,2,0)
patient panel.
"KRN",19,5195,20)

"KRN",19,5195,25)
PROMPTS^SCRPPAT
"KRN",19,5195,"U")
PRACTITIONER'S PATIENTS
"KRN",19,5196,-1)
0^2
"KRN",19,5196,0)
SC PCMM IND TEAM PROFILE^Individual Team Profile^^R^^^^^^^^SCHEDULING
"KRN",19,5196,1,0)
^^1^1^2960206^
"KRN",19,5196,1,1,0)
This displays basic team definition information.
"KRN",19,5196,25)
PROMPTS^SCRPITP
"KRN",19,5196,"U")
INDIVIDUAL TEAM PROFILE
"KRN",19,5197,-1)
0^9
"KRN",19,5197,0)
SC PCMM SUM LIST OF TEAMS^Summary of Teams^^R^^^^^^^^SCHEDULING
"KRN",19,5197,1,0)
^^3^3^2960206^
"KRN",19,5197,1,1,0)
Often practitioners will be interested in knowing the size of their
"KRN",19,5197,1,2,0)
patient panel.  This report tallies the number of patients assigned
"KRN",19,5197,1,3,0)
for each practitioner currently assigned to the team.
"KRN",19,5197,25)
PROMPTS^SCRPSLT
"KRN",19,5197,"U")
SUMMARY OF TEAMS
"KRN",19,5198,-1)
0^4
"KRN",19,5198,0)
SC PCMM LIST TEAM'S PATIENTS^Team's Patients^^R^^^^^^^^SCHEDULING^^
"KRN",19,5198,1,0)
^^3^3^2960301^^
"KRN",19,5198,1,1,0)
This report lists a team's patients and the clinics to which they are
"KRN",19,5198,1,2,0)
enrolled.  It is useful for obtaining the names in the team's patient
"KRN",19,5198,1,3,0)
panel and for reviewing the clinics to which patients are assigned.
"KRN",19,5198,20)

"KRN",19,5198,25)
PROMPTS^SCRPTP
"KRN",19,5198,"U")
TEAM'S PATIENTS
"KRN",19,5199,-1)
0^3
"KRN",19,5199,0)
SC PCMM LIST TEAM'S MEMBERS^Team's Members^^R^^^^^^^^SCHEDULING
"KRN",19,5199,1,0)
^^3^3^2960206^^^^
"KRN",19,5199,1,1,0)
This report shows basic information on the Team and member practitioners.
"KRN",19,5199,1,2,0)
It will be used to review the names of the Practitioners assigned to the
"KRN",19,5199,1,3,0)
team during a certain time period.
"KRN",19,5199,25)
PROMPTS^SCRPTM
"KRN",19,5199,"U")
TEAM'S MEMBERS
"KRN",19,5204,-1)
0^10
"KRN",19,5204,0)
SC PCMM CONVERT PATIENTS^Convert Patient File Fields to PCMM^^A^^^^^^^^^^1^
"KRN",19,5204,1,0)
^^8^8^2960410^^
"KRN",19,5204,1,1,0)
This takes fields #404.01 (CURRENT PC PRACTITIONER) & #404.42
"KRN",19,5204,1,2,0)
(CURRENT PC TEAM) of the PATIENT file and if:
"KRN",19,5204,1,3,0)
   1) The Team is full defined in PCMM
"KRN",19,5204,1,4,0)
   2) There is only one position for the practitioner on the team
"KRN",19,5204,1,5,0)
It assigns patients to positions.
"KRN",19,5204,1,6,0)
 
"KRN",19,5204,1,7,0)
The user may choose to get output only - in this case, no data will
"KRN",19,5204,1,8,0)
be changed.
"KRN",19,5204,15)

"KRN",19,5204,20)
D EN^SCMCCV
"KRN",19,5204,99)
56697,10383
"KRN",19,5204,"U")
CONVERT PATIENT FILE FIELDS TO
"KRN",19,5207,-1)
0^14
"KRN",19,5207,0)
SC MAKE CONSULT APPOINTMENT^Make Consult Appointment^^R^^SC CONSULT^^^^^^SCHEDULING^^1^1
"KRN",19,5207,1,0)
^^5^5^2960430^^
"KRN",19,5207,1,1,0)
Allows user to make a consult appointment for a specific time for
"KRN",19,5207,1,2,0)
a patient in a clinic.  This is a clone of the 'Make Appointment'
"KRN",19,5207,1,3,0)
option except that it allows users to make appointments for patients
"KRN",19,5207,1,4,0)
who are not enrolled in a clinic and who are designated as 'Restricted
"KRN",19,5207,1,5,0)
Consults' through certain patient-team assignments.
"KRN",19,5207,15)
K SCOKCONS D SDM^SDKILL K ORACTION,ORVP,XQORQUIT D HDLKILL^SDAMEVT
"KRN",19,5207,20)
S SCOKCONS=1 K ORACTION,ORVP,XQORQUIT D HDLKILL^SDAMEVT
"KRN",19,5207,25)
SDM
"KRN",19,5207,"U")
MAKE CONSULT APPOINTMENT
"KRN",19,5211,-1)
0^19
"KRN",19,5211,0)
SC PCMM GUI WORKSTATION^PCMM GUI Workstation^^B^^^^^^^^SCHEDULING
"KRN",19,5211,1,0)
^^5^5^2960426^^^^
"KRN",19,5211,1,1,0)
This is a new 'B' type of option.  For users to be able to use the
"KRN",19,5211,1,2,0)
Primary Care Management Module's GUI front-end, this option must
"KRN",19,5211,1,3,0)
be on either their primary or secondary menu options.  Putting this
"KRN",19,5211,1,4,0)
option on a menu will give users who have access to that menu, access
"KRN",19,5211,1,5,0)
to PCMM.  Note: 'B' type options are not visible to roll & scroll users.
"KRN",19,5211,99.1)
56720,37422
"KRN",19,5211,"RPC",0)
^19.05P^61^55
"KRN",19,5211,"RPC",2,0)
SC BLD PAT CLN LIST
"KRN",19,5211,"RPC",3,0)
SC BLD PAT LIST
"KRN",19,5211,"RPC",6,0)
SC CHANGE HISTORY OK
"KRN",19,5211,"RPC",7,0)
SC DELETE ENTRY
"KRN",19,5211,"RPC",8,0)
SC DELETE HISTORY
"KRN",19,5211,"RPC",9,0)
SC FILE NUMBER
"KRN",19,5211,"RPC",10,0)
SC FILE PAT TM ASGN
"KRN",19,5211,"RPC",12,0)
SC FILE SINGLE VALUE
"KRN",19,5211,"RPC",13,0)
SC FILER
"KRN",19,5211,"RPC",14,0)
SC FIND
"KRN",19,5211,"RPC",15,0)
SC GET PAT BLOCK
"KRN",19,5211,"RPC",18,0)
SC GETS ENTRY DATA
"KRN",19,5211,"RPC",19,0)
SC GLOBAL NODE
"KRN",19,5211,"RPC",20,0)
SC GLOBAL NODE COUNT
"KRN",19,5211,"RPC",21,0)
SC HISTORY STATUS OK
"KRN",19,5211,"RPC",22,0)
SC INACTIVATE ENTRY
"KRN",19,5211,"RPC",23,0)
SC LISTER
"KRN",19,5211,"RPC",24,0)
SC LOCK/UNLOCK NODE
"KRN",19,5211,"RPC",25,0)
SC MAILMAN
"KRN",19,5211,"RPC",26,0)
SC MEAN TEST
"KRN",19,5211,"RPC",27,0)
SC NEW HISTORY OK
"KRN",19,5211,"RPC",28,0)
SC PATIENT LOOKUP
"KRN",19,5211,"RPC",29,0)
SC POSITION MEMBERS
"KRN",19,5211,"RPC",30,0)
SC PRIMARY CARE TEAM
"KRN",19,5211,"RPC",31,0)
SC PRTP
"KRN",19,5211,"RPC",32,0)
SC STAFF LOOKUP
"KRN",19,5211,"RPC",33,0)
SC TEAM LIST
"KRN",19,5211,"RPC",34,0)
SC USER CLASS STATUS
"KRN",19,5211,"RPC",35,0)
SC VALIDATOR
"KRN",19,5211,"RPC",36,0)
SCRP DEFINITION GETRECORD
"KRN",19,5211,"RPC",37,0)
SCRP FILE ENTRY GETSELECTION
"KRN",19,5211,"RPC",38,0)
SCRP QUERY CHECK NAME
"KRN",19,5211,"RPC",39,0)
SCRP QUERY DELETE
"KRN",19,5211,"RPC",40,0)
SCRP QUERY GETRECORD
"KRN",19,5211,"RPC",41,0)
SCRP QUERY SAVE
"KRN",19,5211,"RPC",42,0)
SCRP QUERY VALIDATE
"KRN",19,5211,"RPC",43,0)
SCRP REPORT PRINT
"KRN",19,5211,"RPC",44,0)
SCRP SELECTION SOURCE
"KRN",19,5211,"RPC",45,0)
SCTM AUTOLINK GETLINK
"KRN",19,5211,"RPC",46,0)
SCTM AUTOLINK GETRECORD
"KRN",19,5211,"RPC",47,0)
SCTM AUTOLINK SETRECORD
"KRN",19,5211,"RPC",48,0)
SCUT GET USER RECORD
"KRN",19,5211,"RPC",49,0)
SCUT SET USER QUERY DEFAULT
"KRN",19,5211,"RPC",50,0)
SC KEY CHECK
"KRN",19,5211,"RPC",51,0)
SC BLD PAT SCDE LIST
"KRN",19,5211,"RPC",52,0)
SC BLD PAT TM LIST
"KRN",19,5211,"RPC",53,0)
SC FILE PAT POS ASGN
"KRN",19,5211,"RPC",54,0)
SC BLD PAT POS LIST
"KRN",19,5211,"RPC",55,0)
SC PAT ENROLL CLN
"KRN",19,5211,"RPC",56,0)
SC CHECK FOR PC POS
"KRN",19,5211,"RPC",57,0)
SC FILE ALL PAT TM ASGN
"KRN",19,5211,"RPC",58,0)
SC BLD PAT APT LIST
"KRN",19,5211,"RPC",59,0)
SC FILE ALL PAT POS ASGN
"KRN",19,5211,"RPC",60,0)
SC BLD NOPC TM LIST
"KRN",19,5211,"RPC",61,0)
SC PAT ASGN MAILMAN
"KRN",19,5211,"U")
PCMM GUI WORKSTATION
"KRN",19.1,195,-1)
0^1
"KRN",19.1,195,0)
SC PCMM DELETE^DELETE KEY FOR PCM MNGT^^n
"KRN",19.1,195,1,0)
^^1^1^2960226^
"KRN",19.1,195,1,1,0)
DELETION KEY FOR THE PRIMARY CARE TEAM MANAGEMENT 
"KRN",19.1,196,-1)
0^2
"KRN",19.1,196,0)
SC CONSULT
"KRN",19.1,196,1,0)
^^3^3^2960402^
"KRN",19.1,196,1,1,0)
This key will permit the holder to enroll patients to clinics and to
"KRN",19.1,196,1,2,0)
make consult appointments -even if the patient has restricted consults
"KRN",19.1,196,1,3,0)
because his/her team assignment(s).
"KRN",101,101,-1)
2^2
"KRN",101,101,0)
DGPM MOVEMENT EVENTS^MOVEMENT EVENTS v 5.0^^X^^^^^^^^
"KRN",101,101,1,0)
32^^32^32^2960307^^^^
"KRN",101,101,1,1,0)
 At the completion of a patient movement the following events
"KRN",101,101,1,2,0)
 take place through this option:
"KRN",101,101,1,3,0)
 
"KRN",101,101,1,4,0)
 1. The PTF record is updated when a patient is admitted,
"KRN",101,101,1,5,0)
    discharged or transfered.
"KRN",101,101,1,6,0)
 
"KRN",101,101,1,7,0)
 2. The appointment status for a patient is updated to 'inpatient'
"KRN",101,101,1,8,0)
    for admissions and 'outpatient' for discharges.  Admissions
"KRN",101,101,1,9,0)
    to the domicilliary have an 'outpatient' appointment status.
"KRN",101,101,1,10,0)
 
"KRN",101,101,1,11,0)
 3. When a patient is admitted, dietetics creates a dietetic
"KRN",101,101,1,12,0)
    patient file entry and creates an admission diet order.
"KRN",101,101,1,13,0)
    When a patient is discharged, all active diet
"KRN",101,101,1,14,0)
    orders are discontinued.  If a patient is absent or on
"KRN",101,101,1,15,0)
    pass, the diet orders are suspended.
"KRN",101,101,1,16,0)
 
"KRN",101,101,1,17,0)
 4. Inpatient Pharmacy cancels all active orders when a
"KRN",101,101,1,18,0)
    patient is admitted, discharged or on unauthorized absence.
"KRN",101,101,1,19,0)
    A patient can not be given Unit Dose meds unless s/he is
"KRN",101,101,1,20,0)
    admitted to a ward.  The patient can receive IV meds; however.
"KRN",101,101,1,21,0)
    When a patient is transferred, an inpatient system parameter
"KRN",101,101,1,22,0)
    is used to determine whether or not the orders should be
"KRN",101,101,1,23,0)
    cancelled.  When a patient goes on authorized absence, the
"KRN",101,101,1,24,0)
    inpatient system parameter is used to determine whether the
"KRN",101,101,1,25,0)
    orders should be cancelled, placed on hold or no action taken.
"KRN",101,101,1,26,0)
    When a patient returns from authorized absence any orders
"KRN",101,101,1,27,0)
    placed on hold will no longer be on hold.
"KRN",101,101,1,28,0)
 
"KRN",101,101,1,29,0)
 5. With ORDER ENTRY/RESULTS REPORTING v2.2, 
"KRN",101,101,1,30,0)
    MAS OE/RR NOTIFICATIONS may be displayed to
"KRN",101,101,1,31,0)
    USERS defined in an OE/RR LIST for the patient. These notifications are
"KRN",101,101,1,32,0)
    displayed for admissions and death discharges.
"KRN",101,101,5)
DGPM MOVEMENT EVENTS;DIC(19,
"KRN",101,101,10,0)
^101.01PA^16^12
"KRN",101,101,10,15,0)
1563^^^
"KRN",101,101,10,15,"^")
SC PCMM INPATIENT ACTIVITY
"KRN",101,101,10,16,0)
1636^^^
"KRN",101,101,10,16,"^")
SC ASSIGN PC TEAM ON DISCHARGE
"KRN",101,101,99)
56732,40942
"KRN",101,121,-1)
2^16
"KRN",101,121,0)
SDAM MENU^Appointment Management^^M^^^^^^^^SCHEDULING
"KRN",101,121,1,0)
^^2^2^2960417^^^^
"KRN",101,121,1,1,0)
This menu contains all the activities for the appointment
"KRN",101,121,1,2,0)
management option.
"KRN",101,121,4)
26^4
"KRN",101,121,10,0)
^101.01PA^32^20
"KRN",101,121,10,32,0)
1632^TI^^
"KRN",101,121,10,32,"^")
SC DISPLAY TEAM INFO
"KRN",101,121,15)

"KRN",101,121,20)

"KRN",101,121,24)

"KRN",101,121,26)
D SHOW^VALM
"KRN",101,121,27)

"KRN",101,121,28)
Select Action: 
"KRN",101,121,29)

"KRN",101,121,99)
56697,55510
"KRN",101,477,-1)
2^5
"KRN",101,477,0)
SDPP PATIENT PROFILE DISPLAY INFO MENU^Display Info^^M^^^^^^^^SCHEDULING
"KRN",101,477,1,0)
^^3^3^2960206^^^^
"KRN",101,477,1,1,0)
This menu allows the user to display all time sensitive information.
"KRN",101,477,1,2,0)
It will include Add/Edits, Appointments, Enrollments, Dispositions, and
"KRN",101,477,1,3,0)
Mean Test Information.
"KRN",101,477,2,0)
^101.02A^1^1
"KRN",101,477,2,1,0)
DI
"KRN",101,477,2,"B","DI",1)

"KRN",101,477,4)
40^3
"KRN",101,477,10,0)
^101.01PA^17^7
"KRN",101,477,10,17,0)
1545^TI^^
"KRN",101,477,10,17,"^")
SC PATIENT PROFILE DISPLAY TEAM INFO
"KRN",101,477,15)
S VALMBCK="R"
"KRN",101,477,20)

"KRN",101,477,26)
W ""
"KRN",101,477,27)
S VAR="HLPTXT1" D HLP^SDPPHLP
"KRN",101,477,28)
Select Action: 
"KRN",101,477,99)
56649,65707
"KRN",101,478,-1)
2^17
"KRN",101,478,0)
SDPP PATIENT PROFILE MENU^Patient Profile^^M^^^^^^^^SCHEDULING
"KRN",101,478,1,0)
^^1^1^2960422^^^^
"KRN",101,478,1,1,0)
This is the main menu for the Patient Profile.
"KRN",101,478,4)
26^3
"KRN",101,478,10,0)
^101.01PA^16^5
"KRN",101,478,10,1,0)
477^DI^10^
"KRN",101,478,10,1,"^")
SDPP PATIENT PROFILE DISPLAY INFO MENU
"KRN",101,478,10,16,0)
1545^TI^^
"KRN",101,478,10,16,"^")
SC PATIENT PROFILE DISPLAY TEAM INFO
"KRN",101,478,26)
D SHOW^VALM
"KRN",101,478,28)
Select Action: 
"KRN",101,478,99)
56697,37799
"KRN",101,1545,-1)
0^6
"KRN",101,1545,0)
SC PATIENT PROFILE DISPLAY TEAM INFO^Team Information^^A^^^^^^^^SCHEDULING
"KRN",101,1545,1,0)
^^2^2^2960322^^^^
"KRN",101,1545,1,1,0)
This action allows the user to display team information during the specified
"KRN",101,1545,1,2,0)
date range.
"KRN",101,1545,2,0)
^101.02A^1^1
"KRN",101,1545,2,1,0)
TI
"KRN",101,1545,2,"B","TI",1)

"KRN",101,1545,20)
K SDY S SDALL=1,(SDTYP,SDFLG)=7,GBL="^TMP(""SDPPALL"","_$J_")" D ^SDPPALL
"KRN",101,1545,99)
56649,65318
"KRN",101,1563,-1)
0^1
"KRN",101,1563,0)
SC PCMM INPATIENT ACTIVITY^PCMM Inpatient Activity^^X^^^^^^^^
"KRN",101,1563,1,0)
^^11^11^2960307^
"KRN",101,1563,1,1,0)
This is used to send MailMan messages to practitioners who are currently
"KRN",101,1563,1,2,0)
assigned to positions that:
"KRN",101,1563,1,3,0)
  o  Have been assigned to this patient and the position is defined to
"KRN",101,1563,1,4,0)
     receive inpatient messages for the position's patient panel.
"KRN",101,1563,1,5,0)
  o  Are part of teams that have been assigned to this patient and
"KRN",101,1563,1,6,0)
     the position is defined to receive messages for all patients in
"KRN",101,1563,1,7,0)
     the team's patient panel.
"KRN",101,1563,1,8,0)
 
"KRN",101,1563,1,9,0)
The Messages are labeled 'INPATIENT' xxx 'for' yyy. Here xxx is 
"KRN",101,1563,1,10,0)
ADMISSION, TRANSFER, OR DISCHARGE (as appropriate) and yyy is
"KRN",101,1563,1,11,0)
the patient's name and PID.
"KRN",101,1563,20)
D MAIL^SCMCPM
"KRN",101,1563,99)
56679,63493
"KRN",101,1564,-1)
0^10
"KRN",101,1564,0)
SC CLINIC ENROLL/DISCHARGE EVENT DRIVER^CLINIC ENROLL/DISCHARGE EVENT DRIVER^^X^^^^^^^^SCHEDULING
"KRN",101,1564,1,0)
^^1^1^2960402^^^^
"KRN",101,1564,1,1,0)
Generic team event driver to handle the assignment of patients to teams
"KRN",101,1564,10,0)
^101.01PA^1^1
"KRN",101,1564,10,1,0)
1565^^^
"KRN",101,1564,10,1,"^")
SC TEAM AUTO-ADD
"KRN",101,1564,15)
D EXIT^SCMCEV3
"KRN",101,1564,99)
56706,6353
"KRN",101,1565,-1)
0^3
"KRN",101,1565,0)
SC TEAM AUTO-ADD^TEAM AUTO-ADD^^A^^^^^^^^
"KRN",101,1565,1,0)
^^1^1^2960321^^^^
"KRN",101,1565,1,1,0)
This is the action that adds a patient to a team via the SC TEAM EVENT DRIVER.
"KRN",101,1565,20)
D COMPARE^SCMCEV3(DFN)
"KRN",101,1565,99)
56691,42359
"KRN",101,1630,-1)
0^12
"KRN",101,1630,0)
SCMC PATIENT TEAM CHANGES^PCMM Patient Team Update Event Driver^^X^^^^^^^^SCHEDULING
"KRN",101,1630,1,0)
^^34^34^2960419^^^^
"KRN",101,1630,1,1,0)
This is fired off whenever the Patient Team Assignment File (#404.42) is
"KRN",101,1630,1,2,0)
updated.
"KRN",101,1630,1,3,0)
 
"KRN",101,1630,1,4,0)
Available Output Variables:
"KRN",101,1630,1,5,0)
===========================
"KRN",101,1630,1,6,0)
SCPCTM   = 1 if it this is a primary care team assignment, 0 otherwise
"KRN",101,1630,1,7,0)
SCPTTMB4 = 0 Node of Patient Team Assignment (#404.42) Before 
"KRN",101,1630,1,8,0)
SCPTTMAF = 0 Node of Patient Team Assignment (#404.42) After
"KRN",101,1630,1,9,0)
SCTMNDB4   = 0 Node of Team (#404.51) Before
"KRN",101,1630,1,10,0)
SCTMNDAF   = 0 Node of Team (#404.51) After
"KRN",101,1630,1,11,0)
SCPTTM     = Pointer to Patient Team Assignment (#404.42)
"KRN",101,1630,1,12,0)
SCTMB4     = Pointer to Team (404.51) Before
"KRN",101,1630,1,13,0)
SCTMAF     = Pointer to Team (404.51) After
"KRN",101,1630,1,14,0)
 
"KRN",101,1630,1,15,0)
Notes:
"KRN",101,1630,1,16,0)
 o  The 7th piece of the Team File (i.e. $P(SCTMND,U,7)) is a pointer 
"KRN",101,1630,1,17,0)
     to the institution file.
"KRN",101,1630,1,18,0)
 o  The 8th piece of the Patient Team Assignment File is the Assignment 
"KRN",101,1630,1,19,0)
    Type Field (#.08).  Its internal value is '1' if it is a primary 
"KRN",101,1630,1,20,0)
    care assignment.  Its value could be either null or '99'.  '99' is 
"KRN",101,1630,1,21,0)
    'Other'.  You can check the variable, SCPCTM (1 or 0) to see if 
"KRN",101,1630,1,22,0)
    this is a primary care team assignment.
"KRN",101,1630,1,23,0)
 
"KRN",101,1630,1,24,0)
Note: Utility: $$INSTPCTM^SCAPMC(DFN,DATE,SCERR)
"KRN",101,1630,1,25,0)
   Input:
"KRN",101,1630,1,26,0)
      DFN   - ien of PATIENT File (#2)
"KRN",101,1630,1,27,0)
      DATE  - date to check (default=DT)
"KRN",101,1630,1,28,0)
      SCERR - error array (default=^TMP("SCERR",$J)) - contains info 
"KRN",101,1630,1,29,0)
              about bad data.  It is only set if there is bad data.
"KRN",101,1630,1,30,0)
   Returned:
"KRN",101,1630,1,31,0)
      0 if no Primary Care Team on Date or
"KRN",101,1630,1,32,0)
      SC4^Institution Name^SCTM^Team Name
"KRN",101,1630,1,33,0)
          SC4  = ien of Institution File
"KRN",101,1630,1,34,0)
          SCTM = ien of Team File
"KRN",101,1630,10,0)
^101.01PA^1^1
"KRN",101,1630,10,1,0)
1633^^^
"KRN",101,1630,10,1,"^")
SCMC PT TEAM CHANGE MAIL MESSAGE
"KRN",101,1630,99)
56698,55924
"KRN",101,1631,-1)
0^13
"KRN",101,1631,0)
SCMC PATIENT TEAM POSITION CHANGES^PCMM Patient Team Position Update Event Driver^^X^^^^^^^^
"KRN",101,1631,1,0)
^^23^23^2960405^^^^
"KRN",101,1631,1,1,0)
This should be fired off whenever the PATIENT TEAM POSITION ASSIGNMENT 
"KRN",101,1631,1,2,0)
file (#404.43) is updated
"KRN",101,1631,1,3,0)
 
"KRN",101,1631,1,4,0)
Protocol Name: SCMC Patient Team Position Changes, hang an entry off of 
"KRN",101,1631,1,5,0)
this to use this protocol (I do not believe you will be using this one)
"KRN",101,1631,1,6,0)
 
"KRN",101,1631,1,7,0)
Description: This should be fired off whenever the PATIENT TEAM POSITION 
"KRN",101,1631,1,8,0)
ASSIGNMENT file (#404.43)is updated.
"KRN",101,1631,1,9,0)
 
"KRN",101,1631,1,10,0)
Available Variables:
"KRN",101,1631,1,11,0)
====================
"KRN",101,1631,1,12,0)
SCPCTP   = null or 0 if not a primary care assignment
"KRN",101,1631,1,13,0)
           1 if a primary care practitioner assignment
"KRN",101,1631,1,14,0)
           2 if a primary care attending assignment
"KRN",101,1631,1,15,0)
SCPTTPB4 = 0 Node of Patient Team Position Assignment (#404.43) Before 
"KRN",101,1631,1,16,0)
SCPTTPAF = 0 Node of Patient Team Position Assignment (#404.43) After
"KRN",101,1631,1,17,0)
SCTMNDB4 = 0 Node of Team (#404.51) Before
"KRN",101,1631,1,18,0)
SCTMNDAF = 0 Node of Team (#404.51) After
"KRN",101,1631,1,19,0)
SCTPNDB4 = 0 Node of Team Position (#404.57) Before
"KRN",101,1631,1,20,0)
SCTPNDAF = 0 Node of Team Position (#404.57) After
"KRN",101,1631,1,21,0)
SCPTTP   = Pointer to Patient Team Position Assignment (#404.43)
"KRN",101,1631,1,22,0)
SCTPB4   = Pointer to Team Position (404.57) Before
"KRN",101,1631,1,23,0)
SCTPAF   = Pointer to Team Position (404.57) After
"KRN",101,1631,10,0)
^101.01PA^1^1
"KRN",101,1631,10,1,0)
1634^^^
"KRN",101,1631,10,1,"^")
SCMC PT POSITION CHANGE MAIL MESSAGE
"KRN",101,1631,99)
56699,7451
"KRN",101,1631,101.0431,0)
^^5^5^2960327^
"KRN",101,1631,101.0431,1,0)
 
"KRN",101,1631,101.0431,2,0)
 
"KRN",101,1631,101.0431,3,0)
 
"KRN",101,1631,101.0431,4,0)
 
"KRN",101,1631,101.0431,5,0)
 
"KRN",101,1632,-1)
0^11
"KRN",101,1632,0)
SC DISPLAY TEAM INFO^Display Team Information^^A^^^^^^^^SCHEDULING
"KRN",101,1632,1,0)
^^1^1^2960402^^^^
"KRN",101,1632,1,1,0)
Display team information for a selected patient.
"KRN",101,1632,10,0)
^101.01PA
"KRN",101,1632,15)
K ^TMP("SCTI",$J),TDFN
"KRN",101,1632,20)
D SEL^SCMCU1 D EN^VALM("SC TEAM INFORMATION")
"KRN",101,1632,99)
56697,54917
"KRN",101,1633,-1)
0^15
"KRN",101,1633,0)
SCMC PT TEAM CHANGE MAIL MESSAGE^Patient-Team Changes Mail Message^^A^^^^^^^^SCHEDULING
"KRN",101,1633,1,0)
^^1^1^2960419^^^^
"KRN",101,1633,1,1,0)
This fires off the MailMan Message for changes to File #404.42.
"KRN",101,1633,2,0)
^101.02A^1^1
"KRN",101,1633,2,1,0)
Item
"KRN",101,1633,2,"B","Item",1)

"KRN",101,1633,20)
D MAIL^SCMCTMM
"KRN",101,1633,99)
56698,55924
"KRN",101,1634,-1)
0^14
"KRN",101,1634,0)
SCMC PT POSITION CHANGE MAIL MESSAGE^Patient-Position Changes Mail Message^^A^^^^^^^^SCHEDULING
"KRN",101,1634,1,0)
^^1^1^2960404^^^^
"KRN",101,1634,1,1,0)
This fires off the MailMan Message for changes to File #404.43.
"KRN",101,1634,15)

"KRN",101,1634,20)
D MAIL^SCMCTPM
"KRN",101,1634,99)
56699,608
"KRN",101,1636,-1)
0^9
"KRN",101,1636,0)
SC ASSIGN PC TEAM ON DISCHARGE^PCMM Patient PC Team Assignment on Inpatient Discharge^^A^^^^^^^^SCHEDULING
"KRN",101,1636,1,0)
^^4^4^2960402^
"KRN",101,1636,1,1,0)
This is called from the patient movement event driver.  If the movement
"KRN",101,1636,1,2,0)
is a discharge, and the patient does not have a current or future
"KRN",101,1636,1,3,0)
assignment to a primary care team - it will prompt the user to assign
"KRN",101,1636,1,4,0)
the patient to a primary care team.
"KRN",101,1636,20)
D PCMMDIS^SCMCPM1
"KRN",101,1636,99)
56705,73624
"KRN",409.61,552,-1)
0^1
"KRN",409.61,552,0)
SC TEAM INFORMATION^2^^^5^17^1^^^^Team Information^1
"KRN",409.61,552,"ARRAY")
 ^TMP("SCTI",$J)
"KRN",409.61,552,"COL",0)
^409.621
"KRN",409.61,552,"FNL")
K ^TMP("SCTI",$J)
"KRN",409.61,552,"HDR")
D HDR^SCMCU1
"KRN",409.61,552,"INIT")
D INIT^SCMCU1
"KRN",8994,2,-1)
0^14
"KRN",8994,2,0)
SC LISTER^LISTC^SCUTBK^2^P
"KRN",8994,2,1,0)
^^1^1^2951211^
"KRN",8994,2,1,1,0)
Per LIST^DIC(), returns the starting location, number of records to retrieve, file to retrieve them from, and index to use.
"KRN",8994,2,2,0)
^8994.02A^1^1
"KRN",8994,2,2,1,0)
LIST ATTRIBUTES^2^512^1
"KRN",8994,2,2,"B","LIST ATTRIBUTES",1)

"KRN",8994,3,-1)
0^6
"KRN",8994,3,0)
SC FILER^FILEC^SCUTBK^2^P
"KRN",8994,3,1,0)
^^1^1^2951211^^^
"KRN",8994,3,1,1,0)
Generic call to file edits into FM file.
"KRN",8994,3,2,0)
^8994.02A^2^2
"KRN",8994,3,2,1,0)
EDIT RESULTS^2^512^1
"KRN",8994,3,2,1,1,0)
^^1^1^2950124^
"KRN",8994,3,2,1,1,1,0)
Results of editing to be placed in FDA array by broker.
"KRN",8994,3,2,2,0)
EDIT MODE^1^3^1
"KRN",8994,3,2,2,1,0)
^^1^1^2950508^^
"KRN",8994,3,2,2,1,1,0)
Is processing in edit or add data mode.
"KRN",8994,3,2,"B","EDIT MODE",2)

"KRN",8994,3,2,"B","EDIT RESULTS",1)

"KRN",8994,3,3,0)
^^2^2^2950508^^
"KRN",8994,3,3,1,0)
If file update is successful, then a 1 is returned. A 0 is returned if
"KRN",8994,3,3,2,0)
unsuccessful.
"KRN",8994,5,-1)
0^2
"KRN",8994,5,0)
SC DELETE ENTRY^DIKC^SCUTBK1^1^P
"KRN",8994,5,1,0)
^^1^1^2950510^^^^
"KRN",8994,5,1,1,0)
Allows file entry deletion via FileMan ^DIK call.
"KRN",8994,5,2,0)
^8994.02A^1^1
"KRN",8994,5,2,1,0)
PARAMETERS^2^^1
"KRN",8994,5,2,1,1,0)
^^1^1^2950510^
"KRN",8994,5,2,1,1,1,0)
Contains subscripts that indicate global root and entry number.
"KRN",8994,5,2,"B","PARAMETERS",1)

"KRN",8994,5,3,0)
^^1^1^2950510^
"KRN",8994,5,3,1,0)
Indicates whether delete operation was successful.
"KRN",8994,6,-1)
0^7
"KRN",8994,6,0)
SC FIND^FINDC^SCUTBK2^2^P
"KRN",8994,6,1,0)
^^1^1^2951211^
"KRN",8994,6,1,1,0)
Per FIND^DIC, find records in a file.
"KRN",8994,6,2,0)
^8994.02A^1^1
"KRN",8994,6,2,1,0)
LIST OF ATTRIBUTES^2^512^1
"KRN",8994,6,2,"B","LIST OF ATTRIBUTES",1)

"KRN",8994,7,-1)
0^4
"KRN",8994,7,0)
SC FILE NUMBER^FILENOC^SCUTBK1^1^P
"KRN",8994,7,1,0)
^^1^1^2951211^
"KRN",8994,7,1,1,0)
Broker callback to get file number.
"KRN",8994,7,2,0)
^8994.02A^1^1
"KRN",8994,7,2,1,0)
FILE NAME^1^50^1
"KRN",8994,7,2,"B","FILE NAME",1)

"KRN",8994,8,-1)
0^9
"KRN",8994,8,0)
SC GLOBAL NODE^NODEC^SCUTBK1^1^P
"KRN",8994,8,1,0)
^^1^1^2950131^^^
"KRN",8994,8,1,1,0)
Call to pass back a global node.
"KRN",8994,8,2,0)
^8994.02A^1^1
"KRN",8994,8,2,1,0)
GLOBAL NODE^1^512^1
"KRN",8994,8,2,"B","GLOBAL NODE",1)

"KRN",8994,9,-1)
0^8
"KRN",8994,9,0)
SC GETS ENTRY DATA^GETSC^SCUTBK2^2^P
"KRN",8994,9,1,0)
^^1^1^2950515^^^^
"KRN",8994,9,1,1,0)
Calls database server at GETS^DIQ.
"KRN",8994,9,2,0)
^8994.02A^1^1
"KRN",8994,9,2,1,0)
GETS ATTRIBUTES^2^512^1
"KRN",8994,9,2,"B","GETS ATTRIBUTES",1)

"KRN",8994,60,-1)
0^15
"KRN",8994,60,0)
SC LOCK/UNLOCK NODE^LOCKC^SCUTBK1^1^P
"KRN",8994,60,1,0)
^^1^1^2950510^^^^
"KRN",8994,60,1,1,0)
Allow locking/unlocking of M global node.
"KRN",8994,60,2,0)
^8994.02A^1^1
"KRN",8994,60,2,1,0)
PARAMETERS^2^^1
"KRN",8994,60,2,1,1,0)
^^2^2^2950510^^
"KRN",8994,60,2,1,1,1,0)
Contains subscripts identify node, whether to lock or unlock and
"KRN",8994,60,2,1,1,2,0)
timeout(in seconds).
"KRN",8994,60,2,"B","PARAMETERS",1)

"KRN",8994,60,3,0)
^^1^1^2950510^^
"KRN",8994,60,3,1,0)
Indicates whether lock operation was successful.
"KRN",8994,61,-1)
0^23
"KRN",8994,61,0)
SC VALIDATOR^VALC^SCUTBK^2^P
"KRN",8994,61,1,0)
^^3^3^2950515^^
"KRN",8994,61,1,1,0)
This function allows the application to validate user input to
"KRN",8994,61,1,2,0)
a field before filing data. The call uses the database server VAL^DIE
"KRN",8994,61,1,3,0)
call.
"KRN",8994,61,2,0)
^8994.02A^2^1
"KRN",8994,61,2,2,0)
PARAMETERS^2^512^1
"KRN",8994,61,2,2,1,0)
^^5^5^2950515^^
"KRN",8994,61,2,2,1,1,0)
This array contains the following parameters necessary to call VAL^DIE:
"KRN",8994,61,2,2,1,2,0)
    - "FILE"  - file number
"KRN",8994,61,2,2,1,3,0)
    - "IENS"  - internal entry numbers
"KRN",8994,61,2,2,1,4,0)
    - "IENS"  - internal entry numbers
"KRN",8994,61,2,2,1,5,0)
    - "VALUE" - user input value
"KRN",8994,61,2,"B","PARAMETERS",2)

"KRN",8994,61,3,0)
^^2^2^2950515^^
"KRN",8994,61,3,1,0)
This call passes back information in the [data] section and
"KRN",8994,61,3,2,0)
the [errors] section.
"KRN",8994,84,-1)
0^10
"KRN",8994,84,0)
SC GLOBAL NODE COUNT^GLCNT^SCUTBK1^1^P
"KRN",8994,84,1,0)
^^3^3^2950712^^
"KRN",8994,84,1,1,0)
Returns the number of entries found in the global node at the ROOT,XREF,
"KRN",8994,84,1,2,0)
VALUE.  If 0 is returned, then there were no values at that node.
"KRN",8994,84,1,3,0)
Pass in ("ROOT"), ("XREF"), ("VALUE")
"KRN",8994,84,2,0)
^8994.02A^1^1
"KRN",8994,84,2,1,0)
PARAMETERS^2^^1
"KRN",8994,84,2,1,1,0)
^^2^2^2950712^
"KRN",8994,84,2,1,1,1,0)
Contains the subscript that indicates the global root, the cross reference, 
"KRN",8994,84,2,1,1,2,0)
and the value to order on in the global.
"KRN",8994,84,2,"B","PARAMETERS",1)

"KRN",8994,84,3,0)
^^1^1^2950712^
"KRN",8994,84,3,1,0)
The number of entries found in the global node at the xref and value.
"KRN",8994,159,-1)
0^21
"KRN",8994,159,0)
SC PRTP^PRTP^SCUTBK1^1^P
"KRN",8994,159,1,0)
^^6^6^2951016^^
"KRN",8994,159,1,1,0)
Returns the currently active staff member for a position.  Send in
"KRN",8994,159,1,2,0)
Position Ien and date range, returns name and ien from New Person
"KRN",8994,159,1,3,0)
file.
"KRN",8994,159,1,4,0)
  SC("IEN")=ien
"KRN",8994,159,1,5,0)
  SC("BEGIN")=begining date for check
"KRN",8994,159,1,6,0)
  SC("END")=ending date for check
"KRN",8994,159,2,0)
^8994.02A^1^1
"KRN",8994,159,2,1,0)
INPUT ARRAY^2^512^1
"KRN",8994,159,2,1,1,0)
^^1^1^2951016^
"KRN",8994,159,2,1,1,1,0)
See RPC Description for values
"KRN",8994,159,2,"B","INPUT ARRAY",1)

"KRN",8994,161,-1)
0^16
"KRN",8994,161,0)
SC MAILMAN^MAILC^SCUTBK10^1^P
"KRN",8994,161,1,0)
^^1^1^2951107^
"KRN",8994,161,1,1,0)
Sends Mailman message from information sent from client
"KRN",8994,161,2,0)
^8994.02A^1^1
"KRN",8994,161,2,1,0)
MESSAGE ARRAY^2^512^1
"KRN",8994,161,2,"B","MESSAGE ARRAY",1)

"KRN",8994,162,-1)
0^18
"KRN",8994,162,0)
SC NEW HISTORY OK^NEWHIST^SCUTBK10^1^P
"KRN",8994,162,1,0)
^^3^3^2960123^^
"KRN",8994,162,1,1,0)
This call passes back whether the date for a new history entry is valid
"KRN",8994,162,1,2,0)
or not.  Primarily for files 404.52, 404.58, 404.59.  Returns a
"KRN",8994,162,1,3,0)
1 if ok, or a 0 if not.
"KRN",8994,162,2,0)
^8994.02A^1^1
"KRN",8994,162,2,1,0)
LIST ATTRIBUTES^2^512^1
"KRN",8994,162,2,"B","LIST ATTRIBUTES",1)

"KRN",8994,163,-1)
0^1
"KRN",8994,163,0)
SC CHANGE HISTORY OK^CHGDTC^SCUTBK10^1^P
"KRN",8994,163,1,0)
^^3^3^2951107^
"KRN",8994,163,1,1,0)
This call returns a 1 if changing an exisiting date for a History
"KRN",8994,163,1,2,0)
entry is ok, or a 0 if the date cannot be changed.  Primary history
"KRN",8994,163,1,3,0)
files are 404.52, 404.58, 404.59
"KRN",8994,163,2,0)
^8994.02A^1^1
"KRN",8994,163,2,1,0)
LIST ATTRIBUTES^2^512^1
"KRN",8994,163,2,"B","LIST ATTRIBUTES",1)

"KRN",8994,164,-1)
0^12
"KRN",8994,164,0)
SC INACTIVATE ENTRY^INACTC^SCUTBK10^1^P
"KRN",8994,164,1,0)
^^2^2^2951107^
"KRN",8994,164,1,1,0)
This call returns a 1 if the entry can be inactivated, or a 0 if the
"KRN",8994,164,1,2,0)
entry cannot.  Used primarily for history files.
"KRN",8994,164,2,0)
^8994.02A^1^1
"KRN",8994,164,2,1,0)
LIST ATTRIBUTES^2^512
"KRN",8994,164,2,"B","LIST ATTRIBUTES",1)

"KRN",8994,165,-1)
0^3
"KRN",8994,165,0)
SC DELETE HISTORY^DELDTC^SCUTBK10^1^P
"KRN",8994,165,1,0)
^^3^3^2951107^
"KRN",8994,165,1,1,0)
This call returns a 1 if the entry can be deleted, a 0 if it cannot be
"KRN",8994,165,1,2,0)
deleted.  Restricted to files 404.52, 404.58, 404.59 history files
"KRN",8994,165,1,3,0)
at present.
"KRN",8994,165,2,0)
^8994.02A^1^1
"KRN",8994,165,2,1,0)
LIST ATTRIBUTES^2^512^1
"KRN",8994,165,2,"B","LIST ATTRIBUTES",1)

"KRN",8994,166,-1)
0^11
"KRN",8994,166,0)
SC HISTORY STATUS OK^NEWSTC^SCUTBK10^1^P
"KRN",8994,166,1,0)
^^2^2^2951107^
"KRN",8994,166,1,1,0)
This call returns a 1 if the status of a new history entry is ok, a 0
"KRN",8994,166,1,2,0)
if it is not.  Currently restricted to files, 404.52, 404.58, 404.59
"KRN",8994,166,2,0)
^8994.02A^1^1
"KRN",8994,166,2,1,0)
LIST ATTRIBUTES^2^512^1
"KRN",8994,166,2,"B","LIST ATTRIBUTES",1)

"KRN",8994,171,-1)
0^17
"KRN",8994,171,0)
SC MEAN TEST^MNTEST^SCUTBK10^1^P
"KRN",8994,171,1,0)
^^1^1^2960202^
"KRN",8994,171,1,1,0)
Returns mean test data for patient from API call LST^DGMTU
"KRN",8994,171,2,0)
^8994.02A^1^1
"KRN",8994,171,2,1,0)
DFN^1^512^1
"KRN",8994,171,2,1,1,0)
^^1^1^2960202^
"KRN",8994,171,2,1,1,1,0)
Patient DFN
"KRN",8994,171,2,"B","DFN",1)

"KRN",8994,171,3,0)
^^1^1^2960202^
"KRN",8994,171,3,1,0)
Mean test data in string format
"KRN",8994,172,-1)
0^22
"KRN",8994,172,0)
SC TEAM LIST^TMLST^SCUTBK11^2^P
"KRN",8994,172,1,0)
^^1^1^2960529^
"KRN",8994,172,1,1,0)
Returns a list of teams the patient is currently assigned to.
"KRN",8994,172,2,0)
^8994.02A^1^1
"KRN",8994,172,2,1,0)
LIST ATTRIBUTES^2^512^1
"KRN",8994,172,2,"B","LIST ATTRIBUTES",1)

"KRN",8994,173,-1)
0^19
"KRN",8994,173,0)
SC PATIENT LOOKUP^FINDP^SCUTBK11^2^P
"KRN",8994,173,1,0)
^^3^3^2960529^
"KRN",8994,173,1,1,0)
Patient lookup.  This is intended as a temporary RPC until a VA or
"KRN",8994,173,1,2,0)
Fileman component is available.  Pass in the partial name, last four,
"KRN",8994,173,1,3,0)
or lastname-first letter, last four.  Returns the Name, DOB, PID
"KRN",8994,173,2,0)
^8994.02A^1^1
"KRN",8994,173,2,1,0)
LIST ATTRIBUTES^2^512^1
"KRN",8994,173,2,"B","LIST ATTRIBUTES",1)

"KRN",8994,178,-1)
0^20
"KRN",8994,178,0)
SC POSITION MEMBERS^PSLST^SCUTBK11^2^P
"KRN",8994,178,1,0)
^^10^10^2960220^
"KRN",8994,178,1,1,0)
Returns an array of positions.  For each position, the standard role,
"KRN",8994,178,1,2,0)
team member currently filling, and the preceptor (if any) for the 
"KRN",8994,178,1,3,0)
team member.   Returns both Internal and external values.
"KRN",8994,178,1,4,0)
Piece 1:  Team Ien
"KRN",8994,178,1,5,0)
|TAB|  2:  Position Ien
"KRN",8994,178,1,6,0)
|TAB|  3:  Team member Ien (File #200)
"KRN",8994,178,1,7,0)
|TAB|  4:  Team member's name
"KRN",8994,178,1,8,0)
      5:  Precpetor's Ien (File #200)
"KRN",8994,178,1,9,0)
|TAB|  6:  Preceptor's Name
"KRN",8994,178,1,10,0)
|TAB|  7:  Primary Care role (if any) for position.
"KRN",8994,178,2,0)
^8994.02A^1^1
"KRN",8994,178,2,1,0)
LIST ATTRIBUTES^2^512^1
"KRN",8994,178,2,1,1,0)
^^3^3^2960220^
"KRN",8994,178,2,1,1,1,0)
   DFN  : Patient's dfn
"KRN",8994,178,2,1,1,2,0)
   BEGIN:   Beginning date range
"KRN",8994,178,2,1,1,3,0)
   END  :   Ending date range
"KRN",8994,178,2,"B","LIST ATTRIBUTES",1)

"KRN",8994,179,-1)
0^5
"KRN",8994,179,0)
SC FILE SINGLE VALUE^VFILE^SCUTBK11^1^P
"KRN",8994,179,1,0)
^^4^4^2960220^
"KRN",8994,179,1,1,0)
File a single value, similar to DIE stuff.  For those instances where
"KRN",8994,179,1,2,0)
a single value needs to be filed or changed, and that value is not
"KRN",8994,179,1,3,0)
associated with a specific component on the client side. ie changing
"KRN",8994,179,1,4,0)
a flag.
"KRN",8994,179,2,0)
^8994.02A^1^1
"KRN",8994,179,2,1,0)
LIST ARRAY^2^512^1
"KRN",8994,179,2,1,1,0)
^^1^1^2960220^
"KRN",8994,179,2,1,1,1,0)
File, Ien, Field number, and value to be filed.
"KRN",8994,179,2,"B","LIST ARRAY",1)

"KRN",8994,179,3,0)
^^1^1^2960220^
"KRN",8994,179,3,1,0)
1 if Update ok, 0 if the update was not completed.
"KRN",8994,182,-1)
0^25
"KRN",8994,182,0)
SCTM AUTOLINK GETRECORD^GETREC^SCAPMCU3^2^R
"KRN",8994,182,1,0)
^^2^2^2960306^^
"KRN",8994,182,1,1,0)
This API returns the 0th node of the Team file(#404.51) entry
"KRN",8994,182,1,2,0)
and the list of current autolinks.
"KRN",8994,182,2,0)
^8994.02A^1^1
"KRN",8994,182,2,1,0)
TEAM^1^50^1
"KRN",8994,182,2,1,1,0)
^^1^1^2960306^
"KRN",8994,182,2,1,1,1,0)
Pointer to entry in Team file.
"KRN",8994,182,2,"B","TEAM",1)

"KRN",8994,182,3,0)
^^15^15^2960306^
"KRN",8994,182,3,1,0)
Array contains the 0th node for the Team file(#404.51)
"KRN",8994,182,3,2,0)
entry and the list of entities autolinked to the team.
"KRN",8994,182,3,3,0)

"KRN",8994,182,3,4,0)
The 0th node is stored in the 0th subscript of the array.
"KRN",8994,182,3,5,0)

"KRN",8994,182,3,6,0)
Each subscript starting at 1 in the array will have the following structure:
"KRN",8994,182,3,7,0)

"KRN",8994,182,3,8,0)
Piece
"KRN",8994,182,3,9,0)
--------
"KRN",8994,182,3,10,0)
1- AutoLink Display Text
"KRN",8994,182,3,11,0)
2- Autolink Type
"KRN",8994,182,3,12,0)
3- AutoLink Entity IEN
"KRN",8994,182,3,13,0)

"KRN",8994,182,3,14,0)
Normally, the display text value is the .01 field but when more identifying
"KRN",8994,182,3,15,0)
information is needed, then this string could contain more.
"KRN",8994,183,-1)
0^13
"KRN",8994,183,0)
SC KEY CHECK^SECKEY^SCUTBK11^1^P
"KRN",8994,183,1,0)
^^2^2^2960529^^^
"KRN",8994,183,1,1,0)
Return 1 if the user is assigned the key passed in, else
"KRN",8994,183,1,2,0)
return 0
"KRN",8994,183,2,0)
^8994.02A^1^1
"KRN",8994,183,2,1,0)
INPUT VALUE^1^512^1
"KRN",8994,183,2,"B","INPUT VALUE",1)

"KRN",8994,184,-1)
0^26
"KRN",8994,184,0)
SCTM AUTOLINK SETRECORD^SETREC^SCAPMCU3^1^R
"KRN",8994,184,1,0)
^^1^1^2960306^
"KRN",8994,184,1,1,0)
This API sets the list of autolinks for a team.
"KRN",8994,184,2,0)
^8994.02A^2^2
"KRN",8994,184,2,1,0)
LIST OF AUTOLINKS^2^^1
"KRN",8994,184,2,1,1,0)
^^12^12^2960306^^
"KRN",8994,184,2,1,1,1,0)
List of entities autolinked to the team.
"KRN",8994,184,2,1,1,2,0)

"KRN",8994,184,2,1,1,3,0)
Each subscript in the array will have the following structure:
"KRN",8994,184,2,1,1,4,0)

"KRN",8994,184,2,1,1,5,0)
Piece
"KRN",8994,184,2,1,1,6,0)
--------
"KRN",8994,184,2,1,1,7,0)
1- AutoLink Display Text
"KRN",8994,184,2,1,1,8,0)
2- Autolink Type
"KRN",8994,184,2,1,1,9,0)
3- AutoLink Entity IEN
"KRN",8994,184,2,1,1,10,0)

"KRN",8994,184,2,1,1,11,0)
Normally, the display text value is the .01 field but when more identifying
"KRN",8994,184,2,1,1,12,0)
information is needed, then this string could contain more.
"KRN",8994,184,2,2,0)
TEAM^1^20^1
"KRN",8994,184,2,2,1,0)
^^1^1^2960306^^
"KRN",8994,184,2,2,1,1,0)
Pointer to entry in Team file.
"KRN",8994,184,2,"B","LIST OF AUTOLINKS",1)

"KRN",8994,184,2,"B","TEAM",2)

"KRN",8994,184,3,0)
^^2^2^2960306^
"KRN",8994,184,3,1,0)
Indicates that the autolink set process was successful(1)
"KRN",8994,184,3,2,0)
or unsuccessful(0).
"KRN",8994,185,-1)
0^27
"KRN",8994,185,0)
SCTM AUTOLINK GETLINK^GETLINK^SCAPMCU3^2^R
"KRN",8994,185,1,0)
^^1^1^2960315^^
"KRN",8994,185,1,1,0)
This rpc returns the list of Team names that are autolinked to an entity.
"KRN",8994,185,2,0)
^8994.02A^3^2
"KRN",8994,185,2,2,0)
AUOTLINK TYPE^1^20^1
"KRN",8994,185,2,2,1,0)
^^6^6^2960306^
"KRN",8994,185,2,2,1,1,0)
Possible types of autolinks are the following:
"KRN",8994,185,2,2,1,2,0)
 - Ward
"KRN",8994,185,2,2,1,3,0)
 - Specialty
"KRN",8994,185,2,2,1,4,0)
 - Room-Bed
"KRN",8994,185,2,2,1,5,0)
 - Practitioner
"KRN",8994,185,2,2,1,6,0)
 - Clinic
"KRN",8994,185,2,3,0)
AUTOLINK IEN^1^20^1
"KRN",8994,185,2,3,1,0)
^^4^4^2960306^^
"KRN",8994,185,2,3,1,1,0)
Internal entry number of autoLink entity.
"KRN",8994,185,2,3,1,2,0)

"KRN",8994,185,2,3,1,3,0)
For example, if the entity is a ward, this parameter contains
"KRN",8994,185,2,3,1,4,0)
the entry number in the Ward Loaction file for the entity.
"KRN",8994,185,2,"B","AUOTLINK TYPE",2)

"KRN",8994,185,2,"B","AUTOLINK IEN",3)

"KRN",8994,185,3,0)
^^3^3^2960315^^
"KRN",8994,185,3,1,0)
List of Teams for which  the entity is autolinked.
"KRN",8994,185,3,2,0)

"KRN",8994,185,3,3,0)
The value of each item in the array is the Team name.
"KRN",8994,186,-1)
0^28
"KRN",8994,186,0)
SCRP DEFINITION GETRECORD^GETREC^SCRPBK^2^R
"KRN",8994,186,1,0)
^^2^2^2960422^^^^
"KRN",8994,186,1,1,0)
This RPC returns a scheduling report definition as defined
"KRN",8994,186,1,2,0)
in file 404.92.
"KRN",8994,186,2,0)
^8994.02A^1^1
"KRN",8994,186,2,1,0)
REPORT ENTRY^1^20^1
"KRN",8994,186,2,1,1,0)
^^1^1^2960422^^^^
"KRN",8994,186,2,1,1,1,0)
Internal entry number of the report definition from file 404.92.
"KRN",8994,186,2,"B","REPORT ENTRY",1)

"KRN",8994,186,3,0)
^^32^32^2960422^^^
"KRN",8994,186,3,1,0)
Using SCDATA to represent the array, the following is returned:
"KRN",8994,186,3,2,0)
SCDATA(0) := 0th node of report defintion (404.92)
"KRN",8994,186,3,3,0)
   (1..n) := sections for
"KRN",8994,186,3,4,0)
             [Description], [Sorts], [Fields], [Files]
"KRN",8994,186,3,5,0)

"KRN",8994,186,3,6,0)
[Description]
"KRN",8994,186,3,7,0)
   - each node returned equals a text node in the description
"KRN",8994,186,3,8,0)
     word processing multiple
"KRN",8994,186,3,9,0)

"KRN",8994,186,3,10,0)
[Sorts]
"KRN",8994,186,3,11,0)
   - each node returned equals a text node in the SORTS multiple
"KRN",8994,186,3,12,0)

"KRN",8994,186,3,13,0)
[Fields]
"KRN",8994,186,3,14,0)
   - each node describes fields used by the report as defined in
"KRN",8994,186,3,15,0)
     the FIELDS multiple
"KRN",8994,186,3,16,0)
        Piece      Description
"KRN",8994,186,3,17,0)
        -----      -----------
"KRN",8994,186,3,18,0)
          1        Corresponding Delphi Component Name
"KRN",8994,186,3,19,0)
          2        Is field required?
"KRN",8994,186,3,20,0)
          3        <not used>
"KRN",8994,186,3,21,0)
          4        Default Value
"KRN",8994,186,3,22,0)

"KRN",8994,186,3,23,0)
[Files]
"KRN",8994,186,3,24,0)
  - each node describes files used by the report as defined in
"KRN",8994,186,3,25,0)
    the FILES multiple
"KRN",8994,186,3,26,0)
        Piece      Description
"KRN",8994,186,3,27,0)
        -----      -----------
"KRN",8994,186,3,28,0)
          1        File type (DIVISION, TEAM, etc.)
"KRN",8994,186,3,29,0)
          2        File number
"KRN",8994,186,3,30,0)
          3        Number of selections from file required
"KRN",8994,186,3,31,0)
                   (ONE/MANY/ALL/NONE)
"KRN",8994,186,3,32,0)
       
"KRN",8994,187,-1)
0^30
"KRN",8994,187,0)
SCUT GET USER RECORD^GETUSER^SCUTBK3^2^R
"KRN",8994,187,1,0)
^^3^3^2960423^^
"KRN",8994,187,1,1,0)
This RPC returns user related data often needed by scheduling
"KRN",8994,187,1,2,0)
modules. The data returned is used to set instance variables
"KRN",8994,187,1,3,0)
for the TScUser object type on the client.
"KRN",8994,187,2,0)
^8994.02A^1^1
"KRN",8994,187,2,1,0)
DUZ NUMBER^1^20^1
"KRN",8994,187,2,1,1,0)
^^1^1^2960422^
"KRN",8994,187,2,1,1,1,0)
Internal entry number of the user.
"KRN",8994,187,2,"B","DUZ NUMBER",1)

"KRN",8994,187,3,0)
^^9^9^2960422^
"KRN",8994,187,3,1,0)
Using SCDATA to represent the array, the following is returned:
"KRN",8994,187,3,2,0)
    SCDATA(0) -> <ien of user> ^ <name of user> ^ <default query id>
"KRN",8994,187,3,3,0)
                        
"KRN",8994,187,3,4,0)
                --- OR ---
"KRN",8994,187,3,5,0)

"KRN",8994,187,3,6,0)
    SCDATA(0) -> 0 - meaning errors found ^ <number of errors>
"KRN",8994,187,3,7,0)
SCDATA(1...n) -> error text
"KRN",8994,187,3,8,0)

"KRN",8994,187,3,9,0)

"KRN",8994,188,-1)
0^29
"KRN",8994,188,0)
SCRP QUERY GETRECORD^GETREC^SCRPBK0^2^R
"KRN",8994,188,1,0)
^^2^2^2960422^^^
"KRN",8994,188,1,1,0)
This RPC returns a scheduling report query template definition
"KRN",8994,188,1,2,0)
as definedin file 404.95.
"KRN",8994,188,2,0)
^8994.02A^1^1
"KRN",8994,188,2,1,0)
QUERY ID^1^20^1
"KRN",8994,188,2,1,1,0)
^^2^2^2960422^^^
"KRN",8994,188,2,1,1,1,0)
Internal entry number of the report query template definition
"KRN",8994,188,2,1,1,2,0)
from file 404.95
"KRN",8994,188,2,"B","QUERY ID",1)

"KRN",8994,188,3,0)
^^28^28^2960422^^^
"KRN",8994,188,3,1,0)
Using SCDATA to represent the array, the following is returned:
"KRN",8994,188,3,2,0)
SCDATA(0) := 0th node of report query template definition (404.95)
"KRN",8994,188,3,3,0)
      (1) := External values for 0th node pieces
"KRN",8994,188,3,4,0)
   (2..n) := sections for
"KRN",8994,188,3,5,0)
             [Description], [Fields], [Selections]
"KRN",8994,188,3,6,0)

"KRN",8994,188,3,7,0)
[Description]
"KRN",8994,188,3,8,0)
   - each node returned equals a text node in the description
"KRN",8994,188,3,9,0)
     word processing multiple
"KRN",8994,188,3,10,0)

"KRN",8994,188,3,11,0)
[Fields]
"KRN",8994,188,3,12,0)
   - each node describes fields used by the report as defined in
"KRN",8994,188,3,13,0)
     the FIELDS multiple
"KRN",8994,188,3,14,0)
        Piece      Description
"KRN",8994,188,3,15,0)
        -----      -----------
"KRN",8994,188,3,16,0)
          1        Corresponding Delphi Component Name
"KRN",8994,188,3,17,0)
          2        Value for field
"KRN",8994,188,3,18,0)

"KRN",8994,188,3,19,0)
[Selections]
"KRN",8994,188,3,20,0)
  - each node describes files used by the report as defined in
"KRN",8994,188,3,21,0)
    the FILES multiple
"KRN",8994,188,3,22,0)
        Piece      Description
"KRN",8994,188,3,23,0)
        -----      -----------
"KRN",8994,188,3,24,0)
          1        External file entry value
"KRN",8994,188,3,25,0)
          2        File type (DIVISION, TEAM, etc.)
"KRN",8994,188,3,26,0)
          3        Internal entry number for value
"KRN",8994,188,3,27,0)
       
"KRN",8994,188,3,28,0)

"KRN",8994,189,-1)
0^32
"KRN",8994,189,0)
SCRP SELECTION SOURCE^GETDATA^SCRPBK1^2^R
"KRN",8994,189,1,0)
^^6^6^2960422^^
"KRN",8994,189,1,1,0)
This RPC returns a list of entries that is displayed
"KRN",8994,189,1,2,0)
to the user as part of the entry selection process.
"KRN",8994,189,1,3,0)
This process occurs during query template setup. It
"KRN",8994,189,1,4,0)
involves the user indicating which divsions, teams,
"KRN",8994,189,1,5,0)
roles, clinics, practitioners and user classes s/he
"KRN",8994,189,1,6,0)
desires information about on a report.
"KRN",8994,189,2,0)
^8994.02A^5^5
"KRN",8994,189,2,1,0)
ENTITY TYPE^1^20^1
"KRN",8994,189,2,1,1,0)
^^10^10^2960422^
"KRN",8994,189,2,1,1,1,0)
This parameter indicates the entity type of the slecetion.
"KRN",8994,189,2,1,1,2,0)

"KRN",8994,189,2,1,1,3,0)
The following types are possible:
"KRN",8994,189,2,1,1,4,0)
       DIVISION
"KRN",8994,189,2,1,1,5,0)
       TEAM
"KRN",8994,189,2,1,1,6,0)
       PRACTITIONER
"KRN",8994,189,2,1,1,7,0)
       ROLE
"KRN",8994,189,2,1,1,8,0)
       CLINIC
"KRN",8994,189,2,1,1,9,0)
       USER CLASS
"KRN",8994,189,2,1,1,10,0)

"KRN",8994,189,2,2,0)
REPORT ID^1^20^1
"KRN",8994,189,2,2,1,0)
^^6^6^2960422^
"KRN",8994,189,2,2,1,1,0)
Internal entry number of the report definition.
"KRN",8994,189,2,2,1,2,0)

"KRN",8994,189,2,2,1,3,0)
Each report has a differenrt set of criteria that
"KRN",8994,189,2,2,1,4,0)
the query specification must meet. This affects
"KRN",8994,189,2,2,1,5,0)
which entity entries are allowed to be chosen by
"KRN",8994,189,2,2,1,6,0)
the user.
"KRN",8994,189,2,3,0)
REPORT NAME^1^50^1
"KRN",8994,189,2,3,1,0)
^^1^1^2960422^
"KRN",8994,189,2,3,1,1,0)
Name of the report.
"KRN",8994,189,2,4,0)
SEARCH TEXT^1^50^1
"KRN",8994,189,2,4,1,0)
^^4^4^2960422^
"KRN",8994,189,2,4,1,1,0)
This parameter contains the free-text entered by
"KRN",8994,189,2,4,1,2,0)
the user that is compared to the entity entry's name
"KRN",8994,189,2,4,1,3,0)
to filter out possible choices. If null, then
"KRN",8994,189,2,4,1,4,0)
all valid entries are presented to the user.
"KRN",8994,189,2,5,0)
SELECTIONS^2^^1
"KRN",8994,189,2,5,1,0)
^^11^11^2960422^
"KRN",8994,189,2,5,1,1,0)
This array contains all of the selections already made
"KRN",8994,189,2,5,1,2,0)
by the user for the current query template. This list
"KRN",8994,189,2,5,1,3,0)
of selections is then used to filter out possible selections
"KRN",8994,189,2,5,1,4,0)
for the current 'entity type' being requested.
"KRN",8994,189,2,5,1,5,0)

"KRN",8994,189,2,5,1,6,0)
For example, often the report criteria requires one or
"KRN",8994,189,2,5,1,7,0)
more teams must be selected. However, the team must be
"KRN",8994,189,2,5,1,8,0)
in one of the divisions already selected by the user.
"KRN",8994,189,2,5,1,9,0)
In this case, the user's division selections are
"KRN",8994,189,2,5,1,10,0)
used to filter out inapproiate teams during a team
"KRN",8994,189,2,5,1,11,0)
array build.
"KRN",8994,189,2,"B","ENTITY TYPE",1)

"KRN",8994,189,2,"B","REPORT ID",2)

"KRN",8994,189,2,"B","REPORT NAME",3)

"KRN",8994,189,2,"B","SEARCH TEXT",4)

"KRN",8994,189,2,"B","SELECTIONS",5)

"KRN",8994,189,3,0)
^^3^3^2960422^
"KRN",8994,189,3,1,0)
Using SCDATA to represent the array, the following is returned:
"KRN",8994,189,3,2,0)
    SCDATA(1...n) -> <name of entry> ^ <type of entity> ^ <internal entry number of entity>
"KRN",8994,189,3,3,0)

"KRN",8994,190,-1)
0^31
"KRN",8994,190,0)
SCRP FILE ENTRY GETSELECTION^GETSEL^SCRPBK11^2^R
"KRN",8994,190,1,0)
^^5^5^2960423^^^^
"KRN",8994,190,1,1,0)
This RPC returns information assoicated with an entry
"KRN",8994,190,1,2,0)
on the entity selection form of the Query Template Utility.
"KRN",8994,190,1,3,0)

"KRN",8994,190,1,4,0)
The RPC gets invoked as a result of the user clicking the
"KRN",8994,190,1,5,0)
right mouse button and selecting 'Details'.
"KRN",8994,190,2,0)
^8994.02A^2^2
"KRN",8994,190,2,1,0)
ENTITY TYPE^1^20^1
"KRN",8994,190,2,1,1,0)
^^9^9^2960422^^^
"KRN",8994,190,2,1,1,1,0)
This parameter indicates the entity type of the slecetion.
"KRN",8994,190,2,1,1,2,0)

"KRN",8994,190,2,1,1,3,0)
The following types are possible:
"KRN",8994,190,2,1,1,4,0)
       DIVISION
"KRN",8994,190,2,1,1,5,0)
       TEAM
"KRN",8994,190,2,1,1,6,0)
       PRACTITIONER
"KRN",8994,190,2,1,1,7,0)
       ROLE
"KRN",8994,190,2,1,1,8,0)
       CLINIC
"KRN",8994,190,2,1,1,9,0)
       USER CLASS
"KRN",8994,190,2,2,0)
INTERNAL ENTRY NUMBER^1^20^1
"KRN",8994,190,2,2,1,0)
^^2^2^2960422^^^
"KRN",8994,190,2,2,1,1,0)
This parameter contains the internal entry number for
"KRN",8994,190,2,2,1,2,0)
the entity.
"KRN",8994,190,2,"B","ENTITY TYPE",1)

"KRN",8994,190,2,"B","INTERNAL ENTRY NUMBER",2)

"KRN",8994,190,3,0)
^^8^8^2960422^^^^
"KRN",8994,190,3,1,0)
This RPC passes back an array of information for the
"KRN",8994,190,3,2,0)
entity. The information is enity type specific.
"KRN",8994,190,3,3,0)
For example, if the selection is a DIVISION entity
"KRN",8994,190,3,4,0)
then a least of Teams for that Division are returned.
"KRN",8994,190,3,5,0)

"KRN",8994,190,3,6,0)

"KRN",8994,190,3,7,0)
Using SCDATA to represent the array, the data is
"KRN",8994,190,3,8,0)
returned in nodes SCDATA(1..n).
"KRN",8994,191,-1)
0^35
"KRN",8994,191,0)
SCRP QUERY SAVE^SAVE^SCRPBK2^2^R
"KRN",8994,191,1,0)
^^6^6^2960423^^
"KRN",8994,191,1,1,0)
This RPC attempts to save the query template definition for
"KRN",8994,191,1,2,0)
the user. Before saving query, the RPC will validate the query
"KRN",8994,191,1,3,0)
criteria and report any errors without saving query.
"KRN",8994,191,1,4,0)

"KRN",8994,191,1,5,0)
The query template definition must pass the validation
"KRN",8994,191,1,6,0)
check before it can be saved.
"KRN",8994,191,2,0)
^8994.02A^1^1
"KRN",8994,191,2,1,0)
QUERY DEFINITION^2^^1
"KRN",8994,191,2,1,1,0)
^^3^3^2960423^^
"KRN",8994,191,2,1,1,1,0)
This parameter contains the complete definition of the query
"KRN",8994,191,2,1,1,2,0)
template. The format of the definition data is defined by
"KRN",8994,191,2,1,1,3,0)
the TScQryDef.BuildQuery method on the client.
"KRN",8994,191,2,"B","QUERY DEFINITION",1)

"KRN",8994,191,3,0)
^^9^9^2960423^^
"KRN",8994,191,3,1,0)
Using SCDATA to represent the return array, the following is
"KRN",8994,191,3,2,0)
the definition of the data being passed back via this RPC:
"KRN",8994,191,3,3,0)

"KRN",8994,191,3,4,0)
       SCDATA(0) -> 1 - meaning deletion was successful ^ <new query ien> ^ <1/0 reload client flag(some inappropriate data was stripped during save>
"KRN",8994,191,3,5,0)

"KRN",8994,191,3,6,0)
                           --- OR ---
"KRN",8994,191,3,7,0)
                 -> 0 - meaning errors found ^ <number of errors>
"KRN",8994,191,3,8,0)
   SCDATA(1...n) -> error text
"KRN",8994,191,3,9,0)

"KRN",8994,192,-1)
0^36
"KRN",8994,192,0)
SCRP QUERY VALIDATE^VALID^SCRPBK4^2^R
"KRN",8994,192,1,0)
^^8^8^2960423^^
"KRN",8994,192,1,1,0)
This RPC will validate the criteria specified in the
"KRN",8994,192,1,2,0)
query template definiton passed in as part of the call.
"KRN",8994,192,1,3,0)
The validation checks the criteria against what data
"KRN",8994,192,1,4,0)
is required the report assoicated with the template.
"KRN",8994,192,1,5,0)

"KRN",8994,192,1,6,0)
If the validation check fails, then the errors found
"KRN",8994,192,1,7,0)
are returned as part of the RPC, otherwise a success
"KRN",8994,192,1,8,0)
flag(1) is returned.
"KRN",8994,192,2,0)
^8994.02A^2^2
"KRN",8994,192,2,1,0)
QUERY DEFINITION^2^^1
"KRN",8994,192,2,1,1,0)
^^3^3^2960422^^
"KRN",8994,192,2,1,1,1,0)
This parameter contains the complete definition of the query
"KRN",8994,192,2,1,1,2,0)
template. The format of the definition data is defined by
"KRN",8994,192,2,1,1,3,0)
the TScQryDef.BuildQuery method on the client.
"KRN",8994,192,2,2,0)
VALIDATE MODE^1^50^1
"KRN",8994,192,2,2,1,0)
^^3^3^2960422^
"KRN",8994,192,2,2,1,1,0)
This parameter indicates whether all validation checks
"KRN",8994,192,2,2,1,2,0)
need to be made(FULL) or only those checks related to
"KRN",8994,192,2,2,1,3,0)
entity entry selection(SELECTIONS) should be made.
"KRN",8994,192,2,"B","QUERY DEFINITION",1)

"KRN",8994,192,2,"B","VALIDATE MODE",2)

"KRN",8994,192,3,0)
^^8^8^2960424^^
"KRN",8994,192,3,1,0)
Using SCDATA to represent the array, the following is returned:
"KRN",8994,192,3,2,0)
    SCDATA(0) -> 1 - meaning validation checks found no errors
"KRN",8994,192,3,3,0)
                        
"KRN",8994,192,3,4,0)
                --- OR ---
"KRN",8994,192,3,5,0)

"KRN",8994,192,3,6,0)
    SCDATA(0) -> 0 - meaning errors found ^ <number of errors>
"KRN",8994,192,3,7,0)
SCDATA(1...n) -> error text
"KRN",8994,192,3,8,0)

"KRN",8994,193,-1)
0^34
"KRN",8994,193,0)
SCRP QUERY DELETE^DELETE^SCRPBK2^2^R
"KRN",8994,193,1,0)
^^2^2^2960422^^^
"KRN",8994,193,1,1,0)
This RPC allows for the deletion of a query, usually
"KRN",8994,193,1,2,0)
at the request of the user.
"KRN",8994,193,2,0)
^8994.02A^1^1
"KRN",8994,193,2,1,0)
QUERY DEFINITION^2^^1
"KRN",8994,193,2,1,1,0)
^^3^3^2960422^^
"KRN",8994,193,2,1,1,1,0)
This parameter contains the complete definition of the query
"KRN",8994,193,2,1,1,2,0)
template. The format of the definition data is defined by
"KRN",8994,193,2,1,1,3,0)
the TScQryDef.BuildQuery method on the client.
"KRN",8994,193,2,"B","QUERY DEFINITION",1)

"KRN",8994,193,3,0)
^^8^8^2960422^
"KRN",8994,193,3,1,0)
Using SCDATA to represent the return array, the following is
"KRN",8994,193,3,2,0)
the definition of the data being passed back via this RPC:
"KRN",8994,193,3,3,0)

"KRN",8994,193,3,4,0)
       SCDATA(0) -> 1 - meaning deletion was successful
"KRN",8994,193,3,5,0)
                           --- OR ---
"KRN",8994,193,3,6,0)
                 -> 0 - meaning errors found ^ <number of errors>
"KRN",8994,193,3,7,0)

"KRN",8994,193,3,8,0)
   SCDATA(1...n) -> error text
"KRN",8994,194,-1)
0^33
"KRN",8994,194,0)
SCRP QUERY CHECK NAME^NAME^SCRPBK2^2^R
"KRN",8994,194,1,0)
^^6^6^2960423^^^
"KRN",8994,194,1,1,0)
This RPC checks to see if the user already has a query
"KRN",8994,194,1,2,0)
with the name being passed in as part of the RPC.
"KRN",8994,194,1,3,0)

"KRN",8994,194,1,4,0)
If there is already a query with the same name, the RPC
"KRN",8994,194,1,5,0)
passes back the internal entry number of the RPC, otherwise
"KRN",8994,194,1,6,0)
the RPC passes back a 0.
"KRN",8994,194,2,0)
^8994.02A^2^2
"KRN",8994,194,2,1,0)
QUERY NAME^1^30^1
"KRN",8994,194,2,1,1,0)
^^1^1^2960422^
"KRN",8994,194,2,1,1,1,0)
Name of the query that needs to be checked for existence.
"KRN",8994,194,2,2,0)
USER^1^30^1
"KRN",8994,194,2,2,1,0)
^^2^2^2960423^^^
"KRN",8994,194,2,2,1,1,0)
Internal entry number of user that the query name
"KRN",8994,194,2,2,1,2,0)
will be assoicated with, usually DUZ.
"KRN",8994,194,2,"B","QUERY NAME",1)

"KRN",8994,194,2,"B","USER",2)

"KRN",8994,194,3,0)
^^10^10^2960423^^^
"KRN",8994,194,3,1,0)
Using SCDATA to represent the return array, the following is
"KRN",8994,194,3,2,0)
the definition of the data being passed back via this RPC:
"KRN",8994,194,3,3,0)

"KRN",8994,194,3,4,0)
  SCDATA(1) -> 0 means no query with the passed in name was
"KRN",8994,194,3,5,0)
                 found for the user
"KRN",8994,194,3,6,0)

"KRN",8994,194,3,7,0)
                              --- OR ---
"KRN",8994,194,3,8,0)

"KRN",8994,194,3,9,0)
               <n> where n is the internal entry number of the RPC
"KRN",8994,194,3,10,0)
               found for the name passed in for the user.
"KRN",8994,195,-1)
0^38
"KRN",8994,195,0)
SCUT SET USER QUERY DEFAULT^SETDEF^SCUTBK3^2^R
"KRN",8994,195,1,0)
^^2^2^2960422^
"KRN",8994,195,1,1,0)
This RPC is used to set or change the user's defualt PCMM
"KRN",8994,195,1,2,0)
query template.
"KRN",8994,195,2,0)
^8994.02A^2^2
"KRN",8994,195,2,1,0)
USER NUMBER^1^20^1
"KRN",8994,195,2,1,1,0)
^^2^2^2960422^
"KRN",8994,195,2,1,1,1,0)
Internal entry number of the user (DUZ).
"KRN",8994,195,2,1,1,2,0)

"KRN",8994,195,2,2,0)
QUERY ID^1^20^1
"KRN",8994,195,2,2,1,0)
^^2^2^2960422^
"KRN",8994,195,2,2,1,1,0)
Internal entry number of query template(#404.95) that the user
"KRN",8994,195,2,2,1,2,0)
selected as his/her default.
"KRN",8994,195,2,"B","QUERY ID",2)

"KRN",8994,195,2,"B","USER NUMBER",1)

"KRN",8994,195,3,0)
^^8^8^2960422^
"KRN",8994,195,3,1,0)
Using SCDATA to represent the array, the following is returned:
"KRN",8994,195,3,2,0)
    SCDATA(0) -> 1 - meaning that deafult was successfully set/changed
"KRN",8994,195,3,3,0)
                        
"KRN",8994,195,3,4,0)
                --- OR ---
"KRN",8994,195,3,5,0)

"KRN",8994,195,3,6,0)
    SCDATA(0) -> 0 - meaning errors found ^ <number of errors>
"KRN",8994,195,3,7,0)
SCDATA(1...n) -> error text
"KRN",8994,195,3,8,0)

"KRN",8994,196,-1)
0^37
"KRN",8994,196,0)
SCRP REPORT PRINT^PRINT^SCRPBK3^2^R
"KRN",8994,196,1,0)
^^11^11^2960422^^
"KRN",8994,196,1,1,0)
This RPC queues a report to print based the
"KRN",8994,196,1,2,0)
the query template definition passed in as
"KRN",8994,196,1,3,0)
part ithe RPC call.
"KRN",8994,196,1,4,0)

"KRN",8994,196,1,5,0)
The RPC returns the TaskMan task number.
"KRN",8994,196,1,6,0)

"KRN",8994,196,1,7,0)
Before the report assoicated with the query template
"KRN",8994,196,1,8,0)
is queued to print, it must pass a validation check.
"KRN",8994,196,1,9,0)
This check makes sure the criteria in the template
"KRN",8994,196,1,10,0)
is appropriate for the report. If the validation fails,
"KRN",8994,196,1,11,0)
the errors are returned as part of the RPC.
"KRN",8994,196,2,0)
^8994.02A^4^4
"KRN",8994,196,2,1,0)
PRINTER^1^30^1
"KRN",8994,196,2,1,1,0)
^^1^1^2960422^
"KRN",8994,196,2,1,1,1,0)
Name of the printer where report should print.
"KRN",8994,196,2,2,0)
RUN DATE^1^20^1
"KRN",8994,196,2,2,1,0)
^^1^1^2960422^
"KRN",8994,196,2,2,1,1,0)
Date report should be printed.
"KRN",8994,196,2,3,0)
TIME^1^20^1
"KRN",8994,196,2,3,1,0)
^^1^1^2960422^
"KRN",8994,196,2,3,1,1,0)
Time of day report should be printed.
"KRN",8994,196,2,4,0)
QUERY DEFINITION^2^^1
"KRN",8994,196,2,4,1,0)
^^3^3^2960422^^
"KRN",8994,196,2,4,1,1,0)
This parameter contains the complete definition of the query
"KRN",8994,196,2,4,1,2,0)
template. The format of the definition data is defined by
"KRN",8994,196,2,4,1,3,0)
the TScQryDef.BuildQuery method on the client.
"KRN",8994,196,2,"B","PRINTER",1)

"KRN",8994,196,2,"B","QUERY DEFINITION",4)

"KRN",8994,196,2,"B","RUN DATE",2)

"KRN",8994,196,2,"B","TIME",3)

"KRN",8994,196,3,0)
^^9^9^2960424^^^
"KRN",8994,196,3,1,0)
Using SCDATA to represent the array, the following is returned:
"KRN",8994,196,3,2,0)
    SCDATA(0) -> TaskMan task number assicated with queued report
"KRN",8994,196,3,3,0)
                        
"KRN",8994,196,3,4,0)
                --- OR if errors were found during validation ---
"KRN",8994,196,3,5,0)

"KRN",8994,196,3,6,0)
    SCDATA(0) -> 0 - meaning errors found ^ <number of errors>
"KRN",8994,196,3,7,0)
SCDATA(1...n) -> error text
"KRN",8994,196,3,8,0)

"KRN",8994,196,3,9,0)

"KRN",8994,197,-1)
0^39
"KRN",8994,197,0)
SC STAFF LOOKUP^STAFFLK^SCUTBK12^2^P
"KRN",8994,197,1,0)
^^1^1^2960321^
"KRN",8994,197,1,1,0)
Returns a list of staff members.
"KRN",8994,197,2,0)
^8994.02A^1^1
"KRN",8994,197,2,1,0)
LIST ATTRIBUTES^2^512^1
"KRN",8994,197,2,"B","LIST ATTRIBUTES",1)

"KRN",8994,197,3,0)
^^1^1^2960321^
"KRN",8994,197,3,1,0)
Returns IEN^NAME^TITLE^USER CLASS
"KRN",8994,198,-1)
0^40
"KRN",8994,198,0)
SC USER CLASS STATUS^CHKUSR^SCUTBK12^1^P
"KRN",8994,198,1,0)
^^2^2^2960321^^
"KRN",8994,198,1,1,0)
Returns a 1 if the User class is installed and in use, a 0 if the User
"KRN",8994,198,1,2,0)
Class is not installed
"KRN",8994,198,2,0)
^8994.02A^3^2
"KRN",8994,198,2,2,0)
SCHEDULING PARAMETER ENTRY^1^512^1
"KRN",8994,198,2,3,0)
SIN
"KRN",8994,198,2,"B","SCHEDULING PARAMETER ENTRY",2)

"KRN",8994,198,2,"B","SIN",3)

"KRN",8994,199,-1)
0^45
"KRN",8994,199,0)
SC PRIMARY CARE TEAM^GETPC^SCUTBK12^1^P
"KRN",8994,199,1,0)
^^2^2^2960529^
"KRN",8994,199,1,1,0)
Returns the primary care team for a patient for the date specified.
"KRN",8994,199,1,2,0)
Pass in the DFN and Date.  Returns team information.
"KRN",8994,199,2,0)
^8994.02A^1^1
"KRN",8994,199,2,1,0)
LIST ARRAY^2^512^1
"KRN",8994,199,2,"B","LIST ARRAY",1)

"KRN",8994,206,-1)
0^52
"KRN",8994,206,0)
SC GET PAT BLOCK^PTGET^SCMCBK^2^P
"KRN",8994,206,1,0)
^^4^4^2960529^
"KRN",8994,206,1,1,0)
Retrieve a block of patients available to be assigned from the ^TMP
"KRN",8994,206,1,2,0)
holding global built by the SC BLD PAT.... remote procedure call.
"KRN",8994,206,1,3,0)
Input $J, the starting number in the block, the ending number in the
"KRN",8994,206,1,4,0)
block, and the last entry in the global.
"KRN",8994,206,2,0)
^8994.02A^1^1
"KRN",8994,206,2,1,0)
PARAMETER LIST^2^512^1
"KRN",8994,206,2,"B","PARAMETER LIST",1)

"KRN",8994,207,-1)
0^50
"KRN",8994,207,0)
SC BLD PAT LIST^PTLSTBLD^SCMCBK^1^P
"KRN",8994,207,1,0)
^^4^4^2960513^
"KRN",8994,207,1,1,0)
Builds a list of patients to be assigned to either a team or position
"KRN",8994,207,1,2,0)
through the multiple assignment form.  This list is called by the 
"KRN",8994,207,1,3,0)
actual "filer" for either the Team or the position.  The list's 
"KRN",8994,207,1,4,0)
format is ^TMP($J,"SC PATIENT LIST",DFN)
"KRN",8994,207,2,0)
^8994.02A^1^1
"KRN",8994,207,2,1,0)
SCVAL^1^512^1
"KRN",8994,207,2,"B","SCVAL",1)

"KRN",8994,208,-1)
0^51
"KRN",8994,208,0)
SC FILE PAT TM ASGN^PTFILE^SCMCBK^2^P
"KRN",8994,208,1,0)
^^2^2^2960523^
"KRN",8994,208,1,1,0)
File patient team assignments in ^TMP("SC PATIENT LIST",DFN) global
"KRN",8994,208,1,2,0)
for later processing
"KRN",8994,208,2,0)
^8994.02A^2^1
"KRN",8994,208,2,2,0)
LIST ATTRIBUTES^2^512^1
"KRN",8994,208,2,"B","LIST ATTRIBUTES",2)

"KRN",8994,209,-1)
0^49
"KRN",8994,209,0)
SC BLD PAT CLN LIST^PTCLBLD^SCMCBK^1^P
"KRN",8994,209,1,0)
^^4^4^2960513^
"KRN",8994,209,1,1,0)
This RPC build a list of patients by assignment to a selected clinic.
"KRN",8994,209,1,2,0)
Lookup is in the Hospital location file, screening of "C" in the 
"KRN",8994,209,1,3,0)
(0,3) node.  List is stored in ^TMP($J,"SCCLPT",N)=DFN.  List is 
"KRN",8994,209,1,4,0)
alphabetized by name.
"KRN",8994,209,2,0)
^8994.02A^1^1
"KRN",8994,209,2,1,0)
PARAMETER LIST^2^512^1
"KRN",8994,209,2,"B","PARAMETER LIST",1)

"KRN",8994,210,-1)
0^54
"KRN",8994,210,0)
SC FILE PAT POS ASGN^POSFILE^SCMCBK^2^P
"KRN",8994,210,1,0)
^^2^2^2960523^
"KRN",8994,210,1,1,0)
File patient position assignments in ^TMP("SC PATIENT LIST",DFN) global
"KRN",8994,210,1,2,0)
for later processing
"KRN",8994,210,2,0)
^8994.02A^2^1
"KRN",8994,210,2,2,0)
LIST ATTRIBUTES^2^512^1
"KRN",8994,210,2,"B","LIST ATTRIBUTES",2)

"KRN",8994,211,-1)
0^53
"KRN",8994,211,0)
SC BLD PAT SCDE LIST^PTSCBLD^SCMCBK^1^P
"KRN",8994,211,1,0)
^^3^3^2960513^
"KRN",8994,211,1,1,0)
Buils a list of patients who are associated with a particular stop code.
"KRN",8994,211,1,2,0)
Only those patients within the specified date range will appear in the list.
"KRN",8994,211,1,3,0)
Screens out inactive stop codes.  Format of the list is ^TMP($J,"SCSCDE",DFN)
"KRN",8994,211,2,0)
^8994.02A^1^1
"KRN",8994,211,2,1,0)
PARAMETER LIST^2^512^1
"KRN",8994,211,2,"B","PARAMETER LIST",1)

"KRN",8994,219,-1)
0^55
"KRN",8994,219,0)
SC BLD PAT TM LIST^PTTMBLD^SCMCBK^1^P
"KRN",8994,219,1,0)
^^2^2^2960513^^
"KRN",8994,219,1,1,0)
Builds a list of patients who are assigned to the selected team.  format
"KRN",8994,219,1,2,0)
of the list is ^TMP($J,"SCTEAM",n)=DFN.
"KRN",8994,219,2,0)
^8994.02A^1^1
"KRN",8994,219,2,1,0)
PARAMETER LIST^2^512^1
"KRN",8994,219,2,"B","PARAMETER LIST",1)

"KRN",8994,220,-1)
0^56
"KRN",8994,220,0)
SC BLD PAT POS LIST^PTPSBLD^SCMCBK^1^P
"KRN",8994,220,1,0)
^^3^3^2960513^
"KRN",8994,220,1,1,0)
Build a list of patients who are assigned to a selected position.
"KRN",8994,220,1,2,0)
The format of the list is ^TMP($J,"SCPOS",n)=DFN.  This list is called
"KRN",8994,220,1,3,0)
the actual filer through another RPC.
"KRN",8994,220,2,0)
^8994.02A^1^1
"KRN",8994,220,2,1,0)
LIST ATTRIBUTES^2^512^1
"KRN",8994,220,2,"B","LIST ATTRIBUTES",1)

"KRN",8994,221,-1)
0^57
"KRN",8994,221,0)
SC PAT ENROLL CLN^PTCLEN^SCMCBK1^1^P
"KRN",8994,221,1,0)
^^3^3^2960529^
"KRN",8994,221,1,1,0)
Enrolls patient in the clinic that is associated with the position the
"KRN",8994,221,1,2,0)
patient is being assigned to.  Pass in DFN, Clinic, 
"KRN",8994,221,1,3,0)
required fields, and the date assigned.
"KRN",8994,221,2,0)
^8994.02A^1^1
"KRN",8994,221,2,1,0)
LIST ATTRIBUTES^2^512^1
"KRN",8994,221,2,"B","LIST ATTRIBUTES",1)

"KRN",8994,222,-1)
0^58
"KRN",8994,222,0)
SC CHECK FOR PC POS^CHKPOS^SCMCBK1^1^P
"KRN",8994,222,2,0)
^8994.02A^1^1
"KRN",8994,222,2,1,0)
LIST ATTRIBUTES^2^512^1
"KRN",8994,222,2,"B","LIST ATTRIBUTES",1)

"KRN",8994,223,-1)
0^61
"KRN",8994,223,0)
SC FILE ALL PAT TM ASGN^ASGNALL^SCMCBK1^2^P
"KRN",8994,223,1,0)
^^1^1^2960529^
"KRN",8994,223,1,1,0)
File patient - team assignments in ^TMP("SC PATIENT LIST",DFN) global
"KRN",8994,223,2,0)
^8994.02A^1^1
"KRN",8994,223,2,1,0)
LIST ATTRIBUTES^2^512^1
"KRN",8994,223,2,"B","LIST ATTRIBUTES",1)

"KRN",8994,224,-1)
0^59
"KRN",8994,224,0)
SC BLD PAT APT LIST^PTAPBLD^SCMCBK^1^P
"KRN",8994,224,1,0)
^^3^3^2960513^
"KRN",8994,224,1,1,0)
Builds a list of patients for a selected clinic by appointment date range.
"KRN",8994,224,1,2,0)
This list is stored in ^TMP($J,"SCAPP",n)=DFN.  List is in alphabetical
"KRN",8994,224,1,3,0)
order.
"KRN",8994,224,2,0)
^8994.02A^1^1
"KRN",8994,224,2,1,0)
PARAMETER LIST^2^512^1
"KRN",8994,224,2,"B","PARAMETER LIST",1)

"KRN",8994,225,-1)
0^60
"KRN",8994,225,0)
SC FILE ALL PAT POS ASGN^ASGALLP^SCMCBK1^2^P
"KRN",8994,225,2,0)
^8994.02A^1^1
"KRN",8994,225,2,1,0)
LIST ATTRIBUTES^2^512^1
"KRN",8994,225,2,"B","LIST ATTRIBUTES",1)

"KRN",8994,226,-1)
0^62
"KRN",8994,226,0)
SC BLD NOPC TM LIST^NOPCTM^SCMCBK1^1^P
"KRN",8994,226,1,0)
^^2^2^2960517^
"KRN",8994,226,1,1,0)
Builds a list of patients that have a primary care assignment, but no
"KRN",8994,226,1,2,0)
current primary care team assignment.  Uses $$PTPCNTM^SCAPMC20
"KRN",8994,226,2,0)
^8994.02A^1^1
"KRN",8994,226,2,1,0)
PARAMETER LIST^2^512^1
"KRN",8994,226,2,1,1,0)
^^2^2^2960517^
"KRN",8994,226,2,1,1,1,0)
Pass in Team to be assigned to and effective date for search.
"KRN",8994,226,2,1,1,2,0)
Position to be assigned to is required for assign to position
"KRN",8994,226,2,"B","PARAMETER LIST",1)

"KRN",8994,227,-1)
0^63
"KRN",8994,227,0)
SC PAT ASGN MAILMAN^PTASGMM^SCUTBK10^1^P
"KRN",8994,227,1,0)
^^2^2^2960521^
"KRN",8994,227,1,1,0)
Builds the before and after status for a single patient assignment to
"KRN",8994,227,1,2,0)
either a team or a position, and fires off a mailman message.
"KRN",8994,227,2,0)
^8994.02A^1^1
"KRN",8994,227,2,1,0)
VALUE^1^512^1
"KRN",8994,227,2,"B","VALUE",1)

"OER",16,0)
16^SD^^M.A.S.^
"OER",16,1,0)
^100.9951PA^2^2
"OER",16,1,1,0)
103
"OER",16,1,1,1,0)
^100.99511PA^1^1
"OER",16,1,1,1,1,0)
101
"OER",16,1,2,0)
645
"OER",16,1,2,1,0)
^100.99511PA^1^1
"OER",16,1,2,1,1,0)
121
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",9,.84)
.84;9;;;EDEOUT^DIFROMSO(.84,DA,"",XPDA);FPRE^DIFROMSI(.84,"",XPDA);EPRE^DIFROMSI(.84,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.84,DA,"",XPDA);DEL^DIFROMSK(.84,"",%)
"ORD",9,.84,0)
DIALOG
"ORD",11,101)
101;11;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",11,101,0)
PROTOCOL
"ORD",12,8994)
8994;12;1;;;;;;;RPCDEL^XPDIA1
"ORD",12,8994,0)
REMOTE PROCEDURE
"ORD",13,409.61)
409.61;13;1;;;;;;;LMDEL^XPDIA1
"ORD",13,409.61,0)
LIST TEMPLATE
"ORD",14,19)
19;14;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",14,19,0)
OPTION
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,22,0)
^9.49^1^1
"PKG",16,22,1,0)
5.3^2941102
"PKG",16,22,1,"PAH",1,0)
41^2960530
"PKG",16,22,1,"PAH",1,1,0)
^^1^1^2960603
"PKG",16,22,1,"PAH",1,1,1,0)
Primary Care Management Module - SD*5.3*41
"PRE")
SCMCENV
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
115
"RTN","SCAPMC")
0^1^B22564458
"RTN","SCAPMC",1,0)
SCAPMC ;ALB/REW - Team API's ; JUN 26, 1995
"RTN","SCAPMC",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC",3,0)
 ;;1.0
"RTN","SCAPMC",4,0)
 ; ** This is the main calling routine for the PCMM (Managed Care) APIs
"RTN","SCAPMC",5,0)
 ; ** More detailed comments are included with the called routines
"RTN","SCAPMC",6,0)
 ;
"RTN","SCAPMC",7,0)
 ;  (1) Position Lists
"RTN","SCAPMC",8,0)
 ;  (2) Practitioner Lists
"RTN","SCAPMC",9,0)
 ;  (3) Patient Lists
"RTN","SCAPMC",10,0)
 ;  (4) Team Lists
"RTN","SCAPMC",11,0)
 ;  (5) MailMan Message Recipient Lists
"RTN","SCAPMC",12,0)
 ;  (6) Database Updates
"RTN","SCAPMC",13,0)
 ;  (7) Other
"RTN","SCAPMC",14,0)
 ;
"RTN","SCAPMC",15,0)
 ;  ** Note: Most of these calls are not supported.  Calls supported
"RTN","SCAPMC",16,0)
 ;           for all programmers are indicated as **SUPPORTED**
"RTN","SCAPMC",17,0)
 ;
"RTN","SCAPMC",18,0)
 ;  (1) ------------- Position Lists --------------------------------
"RTN","SCAPMC",19,0)
TPPR(SC200,SCDATES,SCPURPA,SCROLEA,SCLIST,SCERR) ; -- positions for a practitioner
"RTN","SCAPMC",20,0)
 Q $$TPPR^SCAPMC12(.SC200,.SCDATES,.SCPURPA,.SCROLEA,.SCLIST,.SCERR)
"RTN","SCAPMC",21,0)
 ;
"RTN","SCAPMC",22,0)
TPPT(DFN,SCDATES,SCPOSA,SCUSRA,SCPURPA,SCROLEA,SCYESCL,SCLIST,SCERR) ;  -- list of positions for a patient
"RTN","SCAPMC",23,0)
 Q $$TPPT^SCAPMC23(.DFN,.SCDATES,.SCPOSA,.SCUSRA,.SCPURPA,.SCROLEA,.SCYESCL,.SCLIST,.SCERR)
"RTN","SCAPMC",24,0)
TPCL(SC44,SCDATES,SCPOSA,SCUSRA,SCPURPA,SCROLEA,SCLIST,SCERR) ;  -- list of positions for a clinic
"RTN","SCAPMC",25,0)
 Q $$TPCL^SCAPMC30(.SC44,.SCDATES,.SCPOSA,.SCUSRA,.SCPURPA,.SCROLEA,.SCLIST,.SCERR)
"RTN","SCAPMC",26,0)
 ;
"RTN","SCAPMC",27,0)
TPTM(SCTEAM,SCDATES,SCUSRA,SCROLEA,SCLIST,SCERR) ; -- positions for a team
"RTN","SCAPMC",28,0)
 Q $$TPTM^SCAPMC24(.SCTEAM,.SCDATES,.SCUSRA,.SCROLEA,.SCLIST,.SCERR)
"RTN","SCAPMC",29,0)
 ;
"RTN","SCAPMC",30,0)
 ;  (2) ------------ Practitioner Lists ------------------------------
"RTN","SCAPMC",31,0)
PRTM(SCTEAM,SCDATES,SCUSRA,SCROLEA,SCLIST,SCERR) ; -- practitioners for team **SUPPORTED**
"RTN","SCAPMC",32,0)
 Q $$PRTM^SCAPMC1(.SCTEAM,.SCDATES,.SCUSRA,.SCROLEA,.SCLIST,.SCERR)
"RTN","SCAPMC",33,0)
 ;
"RTN","SCAPMC",34,0)
PRTP(SCTP,SCDATES,SCLIST,SCERR) ; -- list of practitioners for position
"RTN","SCAPMC",35,0)
 Q $$PRTP^SCAPMC8(.SCTP,.SCDATES,.SCLIST,.SCERR)
"RTN","SCAPMC",36,0)
 ;
"RTN","SCAPMC",37,0)
PRCL(SC44,SCDATES,SCPOSA,SCUSRA,SCROLEA,SCLIST,SCERR) ; -- list of practitioners for clinic  **SUPPORTED**
"RTN","SCAPMC",38,0)
 Q $$PRCL^SCAPMC9(.SC44,.SCDATES,.SCPOSA,.SCUSRA,.SCROLEA,.SCLIST,.SCERR)
"RTN","SCAPMC",39,0)
 ;
"RTN","SCAPMC",40,0)
PRPT(DFN,SCDATES,SCPOSA,SCUSRA,SCROLEA,SCPURPA,SCLIST,SCERR) ; -- practs for patient **SUPPORTED**
"RTN","SCAPMC",41,0)
 Q $$PRPT^SCAPMC10(.DFN,.SCDATES,.SCPOSA,.SCUSRA,.SCROLEA,.SCPURPA,.SCLIST,.SCERR)
"RTN","SCAPMC",42,0)
 ;
"RTN","SCAPMC",43,0)
 ;  (3) -------------Patient Lists -------------------------------
"RTN","SCAPMC",44,0)
PTTM(SCTEAM,SCDATES,SCLIST,SCERR) ; -- list of patients for team **SUPPORTED**
"RTN","SCAPMC",45,0)
 Q $$PTTM^SCAPMC2(.SCTEAM,.SCDATES,.SCLIST,.SCERR)
"RTN","SCAPMC",46,0)
 ;
"RTN","SCAPMC",47,0)
PTTP(SCTP,SCDATES,SCLIST,SCERR) ; -- list of patients for a position
"RTN","SCAPMC",48,0)
 Q $$PTTP^SCAPMC11(.SCTP,.SCDATES,.SCLIST,.SCERR)
"RTN","SCAPMC",49,0)
 ;
"RTN","SCAPMC",50,0)
PTPR(SC200,SCDATES,SCPURPA,SCROLEA,SCLIST,SCERR,SCYESCL) ; -- list patients for a pract
"RTN","SCAPMC",51,0)
 Q $$PTPR^SCAPMC14(.SC200,.SCDATES,.SCPURPA,.SCROLEA,.SCLIST,.SCERR,.SCYESCL)
"RTN","SCAPMC",52,0)
 ;
"RTN","SCAPMC",53,0)
PTCL(SC44,SCDATES,SCLIST,SCERR) ; -- list of patients for a clinic
"RTN","SCAPMC",54,0)
 Q $$PTCL^SCAPMC26(.SC44,.SCDATES,.SCLIST,.SCERR)
"RTN","SCAPMC",55,0)
 ;
"RTN","SCAPMC",56,0)
PTST(SCST,SCDATES,SCMAXCNT,SCLIST,SCERR,MORE) ; -- list of patients with a IEN of 40.7
"RTN","SCAPMC",57,0)
 Q $$PTST^SCAPMC27(.SCST,.SCDATES,.SCMAXCNT,.SCLIST,.SCERR,.MORE)
"RTN","SCAPMC",58,0)
 ;
"RTN","SCAPMC",59,0)
PTAP(SCCL,SCDATES,SCMAXCNT,SCLIST,SCERR,MORE) ; -- list of patients with an appointment in a given clinic
"RTN","SCAPMC",60,0)
 Q $$PTAP^SCAPMC28(.SCCL,.SCDATES,.SCMAXCNT,.SCLIST,.SCERR,.MORE)
"RTN","SCAPMC",61,0)
 ;
"RTN","SCAPMC",62,0)
 ;  (4) ------------Team Lists ----------------------------------
"RTN","SCAPMC",63,0)
TMPT(DFN,SCDATES,SCPURPA,SCLIST,SCERR) ; -- list of teams for a patient **SUPPORTED**
"RTN","SCAPMC",64,0)
 Q $$TMPT^SCAPMC3(.DFN,.SCDATES,.SCPURPA,.SCLIST,.SCERR)
"RTN","SCAPMC",65,0)
 ;
"RTN","SCAPMC",66,0)
TMINST(SCINST,SCDATES,SCPURPA,SCLIST,SCERR) ; -- teams for institution
"RTN","SCAPMC",67,0)
 Q $$TMINST^SCAPMC4(.SCINST,.SCDATES,.SCPURPA,.SCLIST,.SCERR)
"RTN","SCAPMC",68,0)
 ;
"RTN","SCAPMC",69,0)
TMAU(SCAU,SCDATES,SCPURPA,SCLIST,SCERR) ; -- list of teams for autolink
"RTN","SCAPMC",70,0)
 Q $$TMAU^SCAPMC5(.SCAU,.SCDATES,.SCPURPA,.SCLIST,.SCERR)
"RTN","SCAPMC",71,0)
 ;
"RTN","SCAPMC",72,0)
TMPR(SC200,SCDATES,SCPURPA,SCLIST,SCERR) ; -- teams for a practitioner
"RTN","SCAPMC",73,0)
 Q $$TMPR^SCAPMC13(.SC200,.SCDATES,.SCPURPA,.SCLIST,.SCERR)
"RTN","SCAPMC",74,0)
 ;
"RTN","SCAPMC",75,0)
 ; (5) ------------ MailMan Message Recipients ----------------
"RTN","SCAPMC",76,0)
MSGDTH(DFN,SCTEAMA,SCDATES,SCYESCL,SCLIST,SCERR) ; users getting death message
"RTN","SCAPMC",77,0)
 Q $$MSGPT^SCAPMC25(1,.DFN,.SCTEAMA,.SCDATES,.SCYESCL,.SCLIST,.SCERR)
"RTN","SCAPMC",78,0)
 ;
"RTN","SCAPMC",79,0)
MSGINPT(DFN,SCTEAMA,SCDATES,SCYESCL,SCLIST,SCERR) ; users getting inpatient msg
"RTN","SCAPMC",80,0)
 Q $$MSGPT^SCAPMC25(2,.DFN,.SCTEAMA,.SCDATES,.SCYESCL,.SCLIST,.SCERR)
"RTN","SCAPMC",81,0)
 ;
"RTN","SCAPMC",82,0)
MSGTEAM(DFN,SCTEAMA,SCDATES,SCYESCL,SCLIST,SCERR) ; users getting team update msg
"RTN","SCAPMC",83,0)
 Q $$MSGPT^SCAPMC25(3,.DFN,.SCTEAMA,.SCDATES,.SCYESCL,.SCLIST,.SCERR)
"RTN","SCAPMC",84,0)
 ;
"RTN","SCAPMC",85,0)
MSGCONS(DFN,SCTEAMA,SCDATES,SCYESCL,SCLIST,SCERR) ; users getting consult message
"RTN","SCAPMC",86,0)
 Q $$MSGPT^SCAPMC25(4,.DFN,.SCTEAMA,.SCDATES,.SCYESCL,.SCLIST,.SCERR)
"RTN","SCAPMC",87,0)
 ;
"RTN","SCAPMC",88,0)
 ; (6) ------------- Database Updates ---------------------------
"RTN","SCAPMC",89,0)
ACPTTM(DFN,SCTM,SCFIELDA,SCACT,SCERR) ;add a patient to a team (pt tm assgn - #404.42
"RTN","SCAPMC",90,0)
 Q $$ACPTTM^SCAPMC6(.DFN,.SCTM,.SCFIELDA,.SCACT,.SCERR)
"RTN","SCAPMC",91,0)
 ;
"RTN","SCAPMC",92,0)
INPTTM(DFN,SCPTTM,SCINACT,SCERR) ;inactivate patient from a team (pt tm assgn - #404.42
"RTN","SCAPMC",93,0)
 Q $$INPTTM^SCAPMC7(.DFN,.SCPTTM,.SCINACT,.SCERR)
"RTN","SCAPMC",94,0)
 ;
"RTN","SCAPMC",95,0)
ACTMNM(SCTMNM,SCFIELDA,SCMAINA,SCEFF,SCERR) ; -- change team status (add if need be) using name
"RTN","SCAPMC",96,0)
 Q $$ACTMNM^SCAPMC15(.SCTMNM,.SCFIELDA,.SCMAINA,.SCEFF,.SCERR)
"RTN","SCAPMC",97,0)
 ;
"RTN","SCAPMC",98,0)
ACTM(SCTM,SCFIELDA,SCEFF,SCERR) ; change team status using ien
"RTN","SCAPMC",99,0)
 Q $$ACTM^SCAPMC15(.SCTM,.SCFIELDA,.SCEFF,.SCERR)
"RTN","SCAPMC",100,0)
 ;
"RTN","SCAPMC",101,0)
ACTPNM(SCTPNM,SCTMNM,SCFIELDA,SCMAINA,SCEFF,SCERR) ; -- change position status (add if need be)
"RTN","SCAPMC",102,0)
 Q $$ACTPNM^SCAPMC17(.SCTPNM,.SCTMNM,.SCFIELDA,.SCMAINA,.SCEFF,.SCERR)
"RTN","SCAPMC",103,0)
 ;
"RTN","SCAPMC",104,0)
ACTP(SCTP,SCFIELDA,SCEFF,SCERR) ; change position status using ien
"RTN","SCAPMC",105,0)
 Q $$ACTP^SCAPMC17(.SCTP,.SCFIELDA,.SCEFF,.SCERR)
"RTN","SCAPMC",106,0)
 ;
"RTN","SCAPMC",107,0)
ACPRTP(SC200,SCTP,SCFIELDA,SCEFF,SCERR) ; change practitioner-position assignment
"RTN","SCAPMC",108,0)
 Q $$ACPRTP^SCAPMC19(.SC200,.SCTP,.SCFIELDA,.SCEFF,.SCERR)
"RTN","SCAPMC",109,0)
 ;
"RTN","SCAPMC",110,0)
ACPTTP(DFN,SCTP,SCFIELDA,SCACT,SCERR,SCYESTM,SCMAINA) ; -- assign patient to position
"RTN","SCAPMC",111,0)
 Q $$ACPTTP^SCAPMC21(.DFN,.SCTP,.SCFIELDA,.SCACT,.SCERR,.SCYESTM,.SCMAINA)
"RTN","SCAPMC",112,0)
 ;
"RTN","SCAPMC",113,0)
INPTTP(DFN,SCPTTPA,SCINACT,SCERR) ;inactivate patient from a position (pt tm pos assgn - #404.43
"RTN","SCAPMC",114,0)
 Q $$INPTTP^SCAPMC22(.DFN,.SCPTTPA,.SCINACT,.SCERR)
"RTN","SCAPMC",115,0)
 ;
"RTN","SCAPMC",116,0)
 ;  (7) -------------Other -------------------------------
"RTN","SCAPMC",117,0)
CLPT(DFN,SCDATES,SCTEAMA,SCLIST,SCERR) ;clinics for patient
"RTN","SCAPMC",118,0)
 ;
"RTN","SCAPMC",119,0)
 Q $$CLPT^SCAPMC29(.DFN,.SCDATES,.SCTEAMA,.SCLIST,.SCERR)
"RTN","SCAPMC",120,0)
 ;
"RTN","SCAPMC",121,0)
INSTPCTM(DFN,SCEFF) ;return institution & team for pt's pc team **SUPPORTED **
"RTN","SCAPMC",122,0)
 Q $$INSTPCTM^SCMCTMU(.DFN,.SCEFF)
"RTN","SCAPMC1")
0^2^B4149506
"RTN","SCAPMC1",1,0)
SCAPMC1 ;ALB/REW - Team API's: PRTM ; JUN 26, 1995
"RTN","SCAPMC1",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC1",3,0)
 ;;1.0
"RTN","SCAPMC1",4,0)
PRTM(SCTEAM,SCDATES,SCUSRA,SCROLEA,SCLIST,SCERR) ; -- practitioners for team
"RTN","SCAPMC1",5,0)
 ; input:
"RTN","SCAPMC1",6,0)
 ;  SCTEAM = ien of TEAM [required]
"RTN","SCAPMC1",7,0)
 ;  SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC1",8,0)
 ;                       [default: TODAY]
"RTN","SCAPMC1",9,0)
 ;         ("END")   = end date to search (inclusive)
"RTN","SCAPMC1",10,0)
 ;                       [default: TODAY]
"RTN","SCAPMC1",11,0)
 ;         ("INCL")  = 1: only use pracitioners who were on
"RTN","SCAPMC1",12,0)
 ;                       team for entire date range
"RTN","SCAPMC1",13,0)
 ;                     0: anytime in date range
"RTN","SCAPMC1",14,0)
 ;                      [default: 1] 
"RTN","SCAPMC1",15,0)
 ;  SCUSRA = array of usr classes to use/exclude
"RTN","SCAPMC1",16,0)
 ;           if $d(@scusra@('exclude')) -> list to exclude
"RTN","SCAPMC1",17,0)
 ;  SCROLEA = array of roles to use/exclude
"RTN","SCAPMC1",18,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC1",19,0)
 ;          [ex. ^TMP("ORXX",$J
"RTN","SCAPMC1",20,0)
 ; Output:
"RTN","SCAPMC1",21,0)
 ;  SCLIST() = array of practitioners
"RTN","SCAPMC1",22,0)
 ;             Format:
"RTN","SCAPMC1",23,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC1",24,0)
 ;               Piece     Description
"RTN","SCAPMC1",25,0)
 ;                 1       IEN of NEW PERSON file entry (#200)
"RTN","SCAPMC1",26,0)
 ;                 2       Name of person
"RTN","SCAPMC1",27,0)
 ;                 3       IEN of TEAM POSITION file (#404.57)
"RTN","SCAPMC1",28,0)
 ;                 4       Name of Position
"RTN","SCAPMC1",29,0)
 ;                 5       IEN OF USR CLASS(#8930) of POSITION (#404.57)
"RTN","SCAPMC1",30,0)
 ;                 6       USR Class Name
"RTN","SCAPMC1",31,0)
 ;                 7       IEN of STANDARD POSITION (#403.46)
"RTN","SCAPMC1",32,0)
 ;                 8       Standard Role (Position) Name
"RTN","SCAPMC1",33,0)
 ;                 9       Activation Date for 404.52 (not 404.59!)
"RTN","SCAPMC1",34,0)
 ;                10       Inactivation Date for 404.52
"RTN","SCAPMC1",35,0)
 ;                11       IEN of Position Ass History (404.52)
"RTN","SCAPMC1",36,0)
 ;                12       IEN of Preceptor Position
"RTN","SCAPMC1",37,0)
 ;                13       Name of Preceptor Position
"RTN","SCAPMC1",38,0)
 ;
"RTN","SCAPMC1",39,0)
 ;  SCERR()  = Array of DIALOG file messages(errors) .
"RTN","SCAPMC1",40,0)
 ;  @SCERR(0)= Number of error(s), UNDEFINED if no errors
"RTN","SCAPMC1",41,0)
 ;             Foramt:
"RTN","SCAPMC1",42,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC1",43,0)
 ;               Piece     Description
"RTN","SCAPMC1",44,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC1",45,0)
 ;   Returned: 1 if ok, 0 if error
"RTN","SCAPMC1",46,0)
 ;
"RTN","SCAPMC1",47,0)
 ; -- initialize control variables
"RTN","SCAPMC1",48,0)
 ;
"RTN","SCAPMC1",49,0)
ST N SCPOSNM,SCTP,SCPOS0,SCOK,SCND,SCU,SCR,SCPRTM
"RTN","SCAPMC1",50,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCP,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCAPMC1",51,0)
 G:'$$OKDATA PRACQ ; setup/check variables
"RTN","SCAPMC1",52,0)
 ; -- loop through team positions
"RTN","SCAPMC1",53,0)
 S SCTP=0
"RTN","SCAPMC1",54,0)
 F  S SCTP=$O(^SCTM(404.57,"C",SCTEAM,SCTP)) Q:'SCTP  D
"RTN","SCAPMC1",55,0)
 .S SCND=$G(^SCTM(404.57,SCTP,0))
"RTN","SCAPMC1",56,0)
 .S SCU=$P(SCND,U,13)
"RTN","SCAPMC1",57,0)
 .Q:'$$OKUSRCL^SCAPU1(.SCUSRA,.SCU)
"RTN","SCAPMC1",58,0)
 .S SCR=$P(SCND,U,3)
"RTN","SCAPMC1",59,0)
 .Q:'$$OKARRAY^SCAPU1(.SCROLEA,.SCR)
"RTN","SCAPMC1",60,0)
 .Q:'$$ACTHIST^SCAPMCU2(404.52,SCTP,SCDATES,.SCERR,"SCPRTM")
"RTN","SCAPMC1",61,0)
 .Q:'$$PRTP^SCAPMC8(SCTP,SCDATES,.SCLIST,.SCERR)
"RTN","SCAPMC1",62,0)
PRACQ Q $G(@SCERR@(0))<1
"RTN","SCAPMC1",63,0)
OKDATA() ; setup/check variables - return 1 if ok; 0 if error
"RTN","SCAPMC1",64,0)
 N SCOK
"RTN","SCAPMC1",65,0)
 S SCOK=1
"RTN","SCAPMC1",66,0)
 D INIT^SCAPMCU1(.SCOK) ; default dates & error array if undefined
"RTN","SCAPMC1",67,0)
 IF '$D(^SCTM(404.51,+$G(SCTEAM),0)) D  S SCOK=0
"RTN","SCAPMC1",68,0)
 . S SCPARM("TEAM")=$G(SCTEAM,"Undefined")
"RTN","SCAPMC1",69,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC1",70,0)
 Q SCOK
"RTN","SCAPMC10")
0^3^B6743127
"RTN","SCAPMC10",1,0)
SCAPMC10 ;ALB/REW - Team API's: PRPT ; JUN 26, 1995
"RTN","SCAPMC10",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC10",3,0)
 ;;1.0
"RTN","SCAPMC10",4,0)
PRPT(DFN,SCDATES,SCPOSA,SCUSRA,SCROLEA,SCPURPA,SCLIST,SCERR,SCYESCL) ; -- practs for patient (No support for scyescl)
"RTN","SCAPMC10",5,0)
 ; input:
"RTN","SCAPMC10",6,0)
 ;  DFN = ien of PATIENT <FILE#2> [required]
"RTN","SCAPMC10",7,0)
 ;  SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC10",8,0)
 ;                       [default: TODAY]
"RTN","SCAPMC10",9,0)
 ;         ("END")   = end date to search (inclusive)
"RTN","SCAPMC10",10,0)
 ;                       [default: TODAY]
"RTN","SCAPMC10",11,0)
 ;         ("INCL")  = 1: only use pracitioners who were on
"RTN","SCAPMC10",12,0)
 ;                       team for entire date range
"RTN","SCAPMC10",13,0)
 ;                     0: anytime in date range
"RTN","SCAPMC10",14,0)
 ;                      [default: 1] 
"RTN","SCAPMC10",15,0)
 ;  SCPOSA= array of positions to include reverse with scposa('exclude')
"RTN","SCAPMC10",16,0)
 ;  SCUSRA= array of usr classes included reverse with scusra('exclude')
"RTN","SCAPMC10",17,0)
 ;  SCROLEA= array of usr classes included reverse with scusra('exclude')
"RTN","SCAPMC10",18,0)
 ;SCPURPA - array of pointers to team purpose file 403.47
"RTN","SCAPMC10",19,0)
 ; if none definded - retruns all teams
"RTN","SCAPMC10",20,0)
 ; if @scpurpa@('exclude') is defined - exclude listed teams
"RTN","SCAPMC10",21,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC10",22,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC10",23,0)
 ;  SCYESCL=Boolean indicator to include patients' enrollments in
"RTN","SCAPMC10",24,0)
 ;          clinics - [0:strong recommendation/default=NO,1=YES] **NOT SUPPORTED **
"RTN","SCAPMC10",25,0)
 ;
"RTN","SCAPMC10",26,0)
 ; Output:
"RTN","SCAPMC10",27,0)
 ;  SCLIST() = array of practitioners
"RTN","SCAPMC10",28,0)
 ;             Format:
"RTN","SCAPMC10",29,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC10",30,0)
 ;               Piece     Description
"RTN","SCAPMC10",31,0)
 ;                 1       IEN of NEW PERSON file entry (#200)
"RTN","SCAPMC10",32,0)
 ;                 2       Name of person
"RTN","SCAPMC10",33,0)
 ;                 3       IEN of TEAM POSITION file (#404.57)
"RTN","SCAPMC10",34,0)
 ;                 4       Name of Position
"RTN","SCAPMC10",35,0)
 ;                 5       IEN OF USR CLASS(#8930) of POSITION (#404.57)
"RTN","SCAPMC10",36,0)
 ;                 6       USR Class Name
"RTN","SCAPMC10",37,0)
 ;                 7       IEN of STANDARD POSITION (#403.46)
"RTN","SCAPMC10",38,0)
 ;                 8       Standard Role (Position) Name
"RTN","SCAPMC10",39,0)
 ;                 9       Activation Date for 404.52 (not 404.59!)
"RTN","SCAPMC10",40,0)
 ;                 10      Inactivation Date for 404.52
"RTN","SCAPMC10",41,0)
 ;                 11      IEN of Position Ass History (404.52)
"RTN","SCAPMC10",42,0)
 ;                 12      IEN of Preceptor Position
"RTN","SCAPMC10",43,0)
 ;                 13      Name of Preceptor Position
"RTN","SCAPMC10",44,0)
 ;
"RTN","SCAPMC10",45,0)
 ;  SCERR()  = Array of DIALOG file messages(errors) .
"RTN","SCAPMC10",46,0)
 ;  @SCERR(0)= Number of error(s), UNDEFINED if no errors
"RTN","SCAPMC10",47,0)
 ;             Foramt:
"RTN","SCAPMC10",48,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC10",49,0)
 ;               Piece     Description
"RTN","SCAPMC10",50,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC10",51,0)
 ;   Returned: 1 if ok, 0 if error
"RTN","SCAPMC10",52,0)
 ;
"RTN","SCAPMC10",53,0)
 ; -- initialize control variables
"RTN","SCAPMC10",54,0)
 ;
"RTN","SCAPMC10",55,0)
ST N SCTP,SCPOS0,SCOK,SCTEAMS,INDX,SCPRACTS,SCND,SCU,SCR,SCPOSIT,SCX,SCTP,SC44
"RTN","SCAPMC10",56,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCP,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCAPMC10",57,0)
 N SCENROLL,SCPOSIT,PT,ENR
"RTN","SCAPMC10",58,0)
 G:'$$OKDATA PRPTQ ; check/setup variables
"RTN","SCAPMC10",59,0)
 ; put list of patient's positions in SCPOSIT()
"RTN","SCAPMC10",60,0)
 IF '$$TPPT^SCAPMC23(DFN,.SCDATES,.SCPOSA,.SCUSA,.SCPURPA,.SCROLEA,.SCYESCL,"SCPOSIT",.SCERR) G PRPTQ
"RTN","SCAPMC10",61,0)
 F INDX=1:1:$G(SCPOSIT(0)) S SCX=$G(SCPOSIT(INDX)) D
"RTN","SCAPMC10",62,0)
 .IF 'SCX D  Q
"RTN","SCAPMC10",63,0)
 ..S SCPARM("Position Xref")=$G(SCX)
"RTN","SCAPMC10",64,0)
 ..D ERR^SCAPMCU1(.SCESEQ,,SCPARM,"",.SCERR)
"RTN","SCAPMC10",65,0)
 .S SCTP=$P(SCX,U,1)
"RTN","SCAPMC10",66,0)
 .S PT("BEGIN")=$S(SCBEGIN>$P(SCX,U,5):SCBEGIN,1:$P(SCX,U,5))
"RTN","SCAPMC10",67,0)
 .S PT("END")=$S('$P(SCX,U,6):SCEND,(SCEND<$P(SCX,U,6)):SCEND,1:$P(SCX,U,6))
"RTN","SCAPMC10",68,0)
 .S PT("INCL")=SCINCL
"RTN","SCAPMC10",69,0)
 .;go thru each pt team position assignment
"RTN","SCAPMC10",70,0)
 .Q:'$$PRTP^SCAPMC8(SCTP,"PT",.SCLIST,.SCERR)
"RTN","SCAPMC10",71,0)
PRPTQ Q $G(@SCERR@(0))<1
"RTN","SCAPMC10",72,0)
 ;
"RTN","SCAPMC10",73,0)
OKDATA() ;check/setup variables - return 1 if ok; 0 if error
"RTN","SCAPMC10",74,0)
 N SCOK
"RTN","SCAPMC10",75,0)
 S SCOK=1
"RTN","SCAPMC10",76,0)
 D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)
"RTN","SCAPMC10",77,0)
 IF '$D(^DPT(+$G(DFN),0)) D  S SCOK=0
"RTN","SCAPMC10",78,0)
 . S SCPARM("PATIENT")=$G(DFN,"Undefined")
"RTN","SCAPMC10",79,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC10",80,0)
 S SCPOSA=$G(SCPOSA,"")
"RTN","SCAPMC10",81,0)
 S SCUSRA=$G(SCUSRA,"")
"RTN","SCAPMC10",82,0)
 Q SCOK
"RTN","SCAPMC11")
0^4^B8159096
"RTN","SCAPMC11",1,0)
SCAPMC11 ;ALB/REW - Team API's: PTTP ; JUN 30, 1995
"RTN","SCAPMC11",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC11",3,0)
 ;;1.0
"RTN","SCAPMC11",4,0)
PTTP(SCTP,SCDATES,SCLIST,SCERR) ; -- list of patient team position assignments
"RTN","SCAPMC11",5,0)
 ; input:
"RTN","SCAPMC11",6,0)
 ;  SCTP = ien of TEAM POSITION [required]
"RTN","SCAPMC11",7,0)
 ;  SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC11",8,0)
 ;                      [default: TODAY]
"RTN","SCAPMC11",9,0)
 ;        ("END")   = end date to search (inclusive)
"RTN","SCAPMC11",10,0)
 ;                      [default: TODAY]
"RTN","SCAPMC11",11,0)
 ;        ("INCL")  = 1: only use patients who were assigned to
"RTN","SCAPMC11",12,0)
 ;                       position for entire date range
"RTN","SCAPMC11",13,0)
 ;                    0: anytime in date range
"RTN","SCAPMC11",14,0)
 ;                      [default: 1] 
"RTN","SCAPMC11",15,0)
 ;  SCLIST -array name to store list
"RTN","SCAPMC11",16,0)
 ;          [ex. ^TMP("SCPT",$J)]
"RTN","SCAPMC11",17,0)
 ;        
"RTN","SCAPMC11",18,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC11",19,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC11",20,0)
 ;
"RTN","SCAPMC11",21,0)
 ; Output:
"RTN","SCAPMC11",22,0)
 ;  SCLIST() = array of patients
"RTN","SCAPMC11",23,0)
 ;             Format:
"RTN","SCAPMC11",24,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC11",25,0)
 ;               Piece     Description
"RTN","SCAPMC11",26,0)
 ;                 1       IEN of PATIENT file entry
"RTN","SCAPMC11",27,0)
 ;                 2       Name of patient
"RTN","SCAPMC11",28,0)
 ;                 3       IEN of Patient Team Position Assignment
"RTN","SCAPMC11",29,0)
 ;                 4       Activation Date
"RTN","SCAPMC11",30,0)
 ;                 5       Inactivation Date
"RTN","SCAPMC11",31,0)
 ;                 6       Patient's Long ID - (SSN)
"RTN","SCAPMC11",32,0)
 ;
"RTN","SCAPMC11",33,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC11",34,0)
 ;  @SCERR@(0)=number of errors, undefined if none
"RTN","SCAPMC11",35,0)
 ;             Foramt:
"RTN","SCAPMC11",36,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC11",37,0)
 ;               Piece     Description
"RTN","SCAPMC11",38,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC11",39,0)
 ;
"RTN","SCAPMC11",40,0)
 ;   Returned: 1 if ok, 0 if error
"RTN","SCAPMC11",41,0)
 ;
"RTN","SCAPMC11",42,0)
 ;
"RTN","SCAPMC11",43,0)
ST N SCTPA,SCPTA,SCPTA0,SCPTMA,SCPTPA,SCPTPA0
"RTN","SCAPMC11",44,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCP,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCAPMC11",45,0)
 G:'$$OKDATA PRACQ ;check/setup variables
"RTN","SCAPMC11",46,0)
 ; -- loop through patient team position assignments
"RTN","SCAPMC11",47,0)
LP S SCPTMA=0
"RTN","SCAPMC11",48,0)
 F  S SCPTMA=$O(^SCPT(404.43,"APTPA",SCTP,SCPTMA)) Q:'SCPTMA  D
"RTN","SCAPMC11",49,0)
 .S SCPTPA=0
"RTN","SCAPMC11",50,0)
 .F  S SCPTPA=$O(^SCPT(404.43,"APTPA",SCTP,SCPTMA,SCPTPA)) Q:'SCPTPA  D
"RTN","SCAPMC11",51,0)
 ..S SCPTPA0=$G(^SCPT(404.43,SCPTPA,0))
"RTN","SCAPMC11",52,0)
 ..Q:'SCPTPA0
"RTN","SCAPMC11",53,0)
 ..Q:'$$DTCHK^SCAPU1(SCBEGIN,SCEND,SCINCL,$P(SCPTPA0,U,3),$P(SCPTPA0,U,4))
"RTN","SCAPMC11",54,0)
 ..D BLD(.SCLIST,SCPTPA,SCPTPA0)
"RTN","SCAPMC11",55,0)
PRACQ Q $G(@SCERR@(0))<1
"RTN","SCAPMC11",56,0)
 ;
"RTN","SCAPMC11",57,0)
 ;
"RTN","SCAPMC11",58,0)
BLD(SCLIST,SCPTTPA,SCPTTPA0) ; build list
"RTN","SCAPMC11",59,0)
 ; SCPTTPA    - ien of patient team position assignment file #404.43
"RTN","SCAPMC11",60,0)
 ; SCEFFDT - negative of effective date
"RTN","SCAPMC11",61,0)
 ; SCN     - current subscript (counter) 1->n
"RTN","SCAPMC11",62,0)
 ; SCPTTPA0 - IS 0 node of Pt Team Pos Assnt(404.43) 1st piece:pt tm ass
"RTN","SCAPMC11",63,0)
 ; 
"RTN","SCAPMC11",64,0)
 ; this builds the array:
"RTN","SCAPMC11",65,0)
 ;   sclist(1->n)=sc2^ptname^effdt^inactdt
"RTN","SCAPMC11",66,0)
 ;    for each scpta zero node passed to it
"RTN","SCAPMC11",67,0)
 Q:'SCPTTPA!('SCPTTPA0)  ;add error trapping?
"RTN","SCAPMC11",68,0)
 Q:$D(@SCLIST@("SCPTTPA",+SCPTTPA0,SCPTTPA))
"RTN","SCAPMC11",69,0)
 N SCEFFDT,SCCNT,DFN
"RTN","SCAPMC11",70,0)
 S DFN=+$G(^SCPT(404.42,+SCPTTPA0,0))
"RTN","SCAPMC11",71,0)
 Q:$D(^TMP("SCMC",$J,"EXCLUDE PT","SCPTA",+DFN))
"RTN","SCAPMC11",72,0)
 S SCN=$G(@SCLIST@(0),0)+1
"RTN","SCAPMC11",73,0)
 S @SCLIST@(0)=SCN
"RTN","SCAPMC11",74,0)
 S @SCLIST@(SCN)=DFN_U_$P($G(^DPT(DFN,0)),U,1)_U_SCPTTPA_U_$P(SCPTTPA0,U,3)_U_$P(SCPTTPA0,U,4)_U_$P($G(^DPT(DFN,.36)),U,3)
"RTN","SCAPMC11",75,0)
 S @SCLIST@("SCPTTPA",+SCPTTPA0,SCPTTPA,SCN)=""
"RTN","SCAPMC11",76,0)
 S @SCLIST@("SCPTA",DFN,SCN)=""
"RTN","SCAPMC11",77,0)
 Q
"RTN","SCAPMC11",78,0)
OKDATA() ;check/setup variables
"RTN","SCAPMC11",79,0)
 N SCOK
"RTN","SCAPMC11",80,0)
 S SCOK=1
"RTN","SCAPMC11",81,0)
 D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)
"RTN","SCAPMC11",82,0)
 IF '$D(^SCTM(404.57,+$G(SCTP),0)) D  S SCOK=0
"RTN","SCAPMC11",83,0)
 . S SCPARM("POSITION")=$G(SCTP,"Undefined")
"RTN","SCAPMC11",84,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045701,.SCPARM,"",.SCERR)
"RTN","SCAPMC11",85,0)
 ; -- is it a valid TEAM ien passed (Error # 4045701 in DIALOG file)
"RTN","SCAPMC11",86,0)
 IF '$D(^SCTM(404.57,+SCTP,0)) D  S SCOK=0
"RTN","SCAPMC11",87,0)
 . S SCPARM("TEAM")=SCTP
"RTN","SCAPMC11",88,0)
 . D ERR^SCAPMCU1(SCESEQ,4045701,.SCPARM,"",.SCERR)
"RTN","SCAPMC11",89,0)
 Q SCOK
"RTN","SCAPMC12")
0^5^B5372823
"RTN","SCAPMC12",1,0)
SCAPMC12 ;ALB/REW - Team API's: TPPR ; JUN 30, 1995
"RTN","SCAPMC12",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC12",3,0)
 ;;1.0
"RTN","SCAPMC12",4,0)
TPPR(SC200,SCDATES,SCPURPA,SCROLEA,SCLIST,SCERR) ; -- positions for a pract
"RTN","SCAPMC12",5,0)
 ; input:
"RTN","SCAPMC12",6,0)
 ; SC200 = ien of NEW PERSON file(#200) [required]
"RTN","SCAPMC12",7,0)
 ; SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC12",8,0)
 ;                      [default: TODAY]
"RTN","SCAPMC12",9,0)
 ;        ("END")   = end date to search (inclusive)
"RTN","SCAPMC12",10,0)
 ;                      [default: TODAY]
"RTN","SCAPMC12",11,0)
 ;        ("INCL")  = 1: only use patients who were assigned to
"RTN","SCAPMC12",12,0)
 ;                       team for entire date range
"RTN","SCAPMC12",13,0)
 ;                    0: anytime in date range
"RTN","SCAPMC12",14,0)
 ;                      [default: 1] 
"RTN","SCAPMC12",15,0)
 ;  SCPURPA -array of pointers to team purpose file 403.47
"RTN","SCAPMC12",16,0)
 ;          if none are defined - returns all teams
"RTN","SCAPMC12",17,0)
 ;          if @SCPURPA@('exclude') is defined - exclude listed teams
"RTN","SCAPMC12",18,0)
 ;  SCROLEA - array of pointers to standard position file 403.46
"RTN","SCAPMC12",19,0)
 ;          if none are defined - returns all positions
"RTN","SCAPMC12",20,0)
 ;          if @SCROLEA@('exclude') is defined - exclude listed roles
"RTN","SCAPMC12",21,0)
 ;  SCLIST -array name to store list
"RTN","SCAPMC12",22,0)
 ;          [ex. ^TMP("SCPT",$J)]
"RTN","SCAPMC12",23,0)
 ;        
"RTN","SCAPMC12",24,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC12",25,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC12",26,0)
 ;
"RTN","SCAPMC12",27,0)
 ; Output:
"RTN","SCAPMC12",28,0)
 ;  SCLIST() = array of positions (includes SCTP xref)
"RTN","SCAPMC12",29,0)
 ;             Format:
"RTN","SCAPMC12",30,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC12",31,0)
 ;               Piece     Description
"RTN","SCAPMC12",32,0)
 ;                 1       IEN of TEAM POSITION File (#404.57)
"RTN","SCAPMC12",33,0)
 ;                 2       Name of Position
"RTN","SCAPMC12",34,0)
 ;                 3       IEN of Team #404.51
"RTN","SCAPMC12",35,0)
 ;                 4       IEN of file #404.59 (Tm Pos History)
"RTN","SCAPMC12",36,0)
 ;                 5       current effective date
"RTN","SCAPMC12",37,0)
 ;                 6       current inactivate date (if any)
"RTN","SCAPMC12",38,0)
 ;                 7       pointer to 403.46 (role)
"RTN","SCAPMC12",39,0)
 ;                 8       Name of Standard Role
"RTN","SCAPMC12",40,0)
 ;                 9       pointer to User Class (#8930)
"RTN","SCAPMC12",41,0)
 ;                10       Name of User Class
"RTN","SCAPMC12",42,0)
 ;                Subscript: "SCTP",SCTM,IEN =""
"RTN","SCAPMC12",43,0)
 ;
"RTN","SCAPMC12",44,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC12",45,0)
 ;  @SCERR@(0) = number of errors, undefined if none
"RTN","SCAPMC12",46,0)
 ;             Format:
"RTN","SCAPMC12",47,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC12",48,0)
 ;               Piece     Description
"RTN","SCAPMC12",49,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC12",50,0)
 ;  Returned: 1 if ok, 0 if error
"RTN","SCAPMC12",51,0)
 ;
"RTN","SCAPMC12",52,0)
 ;
"RTN","SCAPMC12",53,0)
ST N SCTPA,SCTPA,SCTPA0,SCTP,SCR,SCACTHIS,SCTM,SCTPPR,SCPTA
"RTN","SCAPMC12",54,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCAPMC12",55,0)
 ; -- initialize control variables
"RTN","SCAPMC12",56,0)
 G:'$$OKDATA PRACQ
"RTN","SCAPMC12",57,0)
 ; -- loop through position assignment history
"RTN","SCAPMC12",58,0)
 S SCTPA=0
"RTN","SCAPMC12",59,0)
 F  S SCTPA=$O(^SCTM(404.52,"C",SC200,SCTPA)) Q:'SCTPA  D
"RTN","SCAPMC12",60,0)
 .S SCTPA0=$G(^SCTM(404.52,SCTPA,0))
"RTN","SCAPMC12",61,0)
 .S SCTP=+$P(SCTPA0,U,1)
"RTN","SCAPMC12",62,0)
 .Q:'SCTP
"RTN","SCAPMC12",63,0)
 .S SCTM=+$P($G(^SCTM(404.57,SCTP,0)),U,2)
"RTN","SCAPMC12",64,0)
 .Q:'SCTM
"RTN","SCAPMC12",65,0)
 .S SCACTHIS=$$ACTHIST^SCAPMCU2(404.52,SCTP,SCDATES,SCERR,"SCTPPR")
"RTN","SCAPMC12",66,0)
 .Q:'SCACTHIS
"RTN","SCAPMC12",67,0)
 .S SCP=+$P($G(^SCTM(404.51,+SCTM,0)),U,3)
"RTN","SCAPMC12",68,0)
 .Q:'$$OKARRAY^SCAPU1(.SCPURPA,.SCP)
"RTN","SCAPMC12",69,0)
 .S SCPTA=0
"RTN","SCAPMC12",70,0)
 .S SCR=+$P($G(^SCTM(404.57,SCTP,0)),U,3)
"RTN","SCAPMC12",71,0)
 .Q:'$$OKARRAY^SCAPU1(.SCROLEA,.SCR)
"RTN","SCAPMC12",72,0)
 .D BLD^SCAPMC24(.SCLIST,SCTM,SCTP,SCACTHIS,SCR)
"RTN","SCAPMC12",73,0)
PRACQ Q $G(@SCERR@(0))<1
"RTN","SCAPMC12",74,0)
 ;
"RTN","SCAPMC12",75,0)
OKDATA() ;setup/check variables
"RTN","SCAPMC12",76,0)
 N SCOK
"RTN","SCAPMC12",77,0)
 S SCOK=1
"RTN","SCAPMC12",78,0)
 D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)
"RTN","SCAPMC12",79,0)
 IF '$D(^VA(200,+$G(SC200),0)) D  S SCOK=0
"RTN","SCAPMC12",80,0)
 . S SCPARM("Practitioner")=$G(SC200,"Undefined")
"RTN","SCAPMC12",81,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC12",82,0)
 ;
"RTN","SCAPMC12",83,0)
 Q SCOK
"RTN","SCAPMC12",84,0)
 ;
"RTN","SCAPMC13")
0^6^B4185308
"RTN","SCAPMC13",1,0)
SCAPMC13 ;ALB/REW - Team API's: TMPR ; JUN 30, 1995
"RTN","SCAPMC13",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC13",3,0)
TMPR(SC200,SCDATES,SCPURPA,SCLIST,SCERR) ; -- list of teams for a pract
"RTN","SCAPMC13",4,0)
 ; input:
"RTN","SCAPMC13",5,0)
 ; SC200 = ien of NEW PERSON file(#200) [required]
"RTN","SCAPMC13",6,0)
 ; SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC13",7,0)
 ;                      [default: TODAY]
"RTN","SCAPMC13",8,0)
 ;        ("END")   = end date to search (inclusive)
"RTN","SCAPMC13",9,0)
 ;                      [default: TODAY]
"RTN","SCAPMC13",10,0)
 ;        ("INCL")  = 1: only use patients who were assigned to
"RTN","SCAPMC13",11,0)
 ;                       team for entire date range
"RTN","SCAPMC13",12,0)
 ;                    0: anytime in date range
"RTN","SCAPMC13",13,0)
 ;                      [default: 1] 
"RTN","SCAPMC13",14,0)
 ;  SCPURPA -array of pointers to team purpose file 403.47
"RTN","SCAPMC13",15,0)
 ;          if none are defined - returns all teams
"RTN","SCAPMC13",16,0)
 ;          if @SCPURPA@('exclude') is defined - exclude listed teams
"RTN","SCAPMC13",17,0)
 ;  SCLIST -array name to store list
"RTN","SCAPMC13",18,0)
 ;          [ex. ^TMP("SCPT",$J)]
"RTN","SCAPMC13",19,0)
 ;        
"RTN","SCAPMC13",20,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC13",21,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC13",22,0)
 ;
"RTN","SCAPMC13",23,0)
 ; Output:
"RTN","SCAPMC13",24,0)
 ;  SCLIST() = array of teams (includes SCTM xref)
"RTN","SCAPMC13",25,0)
 ;             Format:
"RTN","SCAPMC13",26,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC13",27,0)
 ;               Piece     Description
"RTN","SCAPMC13",28,0)
 ;                 1       IEN of TEAM file entry
"RTN","SCAPMC13",29,0)
 ;                 2       Name of team
"RTN","SCAPMC13",30,0)
 ;                 3       IEN of file #404.52 (Pos Assign History)
"RTN","SCAPMC13",31,0)
 ;                 4       current effective date
"RTN","SCAPMC13",32,0)
 ;                 5       current inactivate date (if any)
"RTN","SCAPMC13",33,0)
 ;                 6       pointer to 403.47 (purpose)
"RTN","SCAPMC13",34,0)
 ;                 7       Name of Purpose
"RTN","SCAPMC13",35,0)
 ;                Subscript: "SCTM",SCTM,IEN =""
"RTN","SCAPMC13",36,0)
 ;
"RTN","SCAPMC13",37,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC13",38,0)
 ;  @SCERR@(0) = number of errors, undefined if none
"RTN","SCAPMC13",39,0)
 ;             Format:
"RTN","SCAPMC13",40,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC13",41,0)
 ;               Piece     Description
"RTN","SCAPMC13",42,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC13",43,0)
 ;  Returned: 1 if ok, 0 if error
"RTN","SCAPMC13",44,0)
 ;
"RTN","SCAPMC13",45,0)
 ;
"RTN","SCAPMC13",46,0)
ST N SCTM,SCPTA,SCPTA0,SCTP,SCTMPR
"RTN","SCAPMC13",47,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCP,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCAPMC13",48,0)
 ; -- initialize control variables
"RTN","SCAPMC13",49,0)
 G:'$$OKDATA PRACQ
"RTN","SCAPMC13",50,0)
 ; -- loop through position assignments (404.52) for pract
"RTN","SCAPMC13",51,0)
 S SCTPA=0
"RTN","SCAPMC13",52,0)
 F  S SCTPA=$O(^SCTM(404.52,"C",SC200,SCTPA)) Q:'SCTPA  D
"RTN","SCAPMC13",53,0)
 .S SCTP=$P($G(^SCTM(404.52,SCTPA,0)),U,1)
"RTN","SCAPMC13",54,0)
 .Q:'SCTP
"RTN","SCAPMC13",55,0)
 .S SCTM=$P($G(^SCTM(404.57,+$G(SCTP),0)),U,2)
"RTN","SCAPMC13",56,0)
 .Q:'SCTM
"RTN","SCAPMC13",57,0)
 .S SCP=$P(^SCTM(404.51,SCTM,0),U,3)
"RTN","SCAPMC13",58,0)
 .Q:'$$OKARRAY^SCAPU1(SCPURPA,SCP)
"RTN","SCAPMC13",59,0)
 .S ACTHIST=$$ACTHIST^SCAPMCU2(404.52,SCTP,SCDATES,.SCERR,"SCTMPR")
"RTN","SCAPMC13",60,0)
 .Q:'ACTHIST
"RTN","SCAPMC13",61,0)
 .D BLDTM^SCAPMC4(SCTM,SCDATES,ACTHIST,.SCLIST,.SCERR)
"RTN","SCAPMC13",62,0)
PRACQ Q $G(@SCERR@(0))<1
"RTN","SCAPMC13",63,0)
 ;
"RTN","SCAPMC13",64,0)
OKDATA() ;setup/check variables
"RTN","SCAPMC13",65,0)
 N SCOK
"RTN","SCAPMC13",66,0)
 S SCOK=1
"RTN","SCAPMC13",67,0)
 D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)
"RTN","SCAPMC13",68,0)
 IF '$D(^VA(200,+$G(SC200),0)) D  S SCOK=0
"RTN","SCAPMC13",69,0)
 . S SCPARM("PRACTITIONER")=$G(SC200,"Undefined")
"RTN","SCAPMC13",70,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC13",71,0)
 Q SCOK
"RTN","SCAPMC14")
0^7^B7296482
"RTN","SCAPMC14",1,0)
SCAPMC14 ;ALB/REW - Team API's: PTPR ; JUN 30, 1995
"RTN","SCAPMC14",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC14",3,0)
 ;;1.0
"RTN","SCAPMC14",4,0)
PTPR(SC200,SCDATES,SCPURPA,SCROLEA,SCLIST,SCERR,SCYESCL) ; -- list patients for a pract (scyescl NOT supported)
"RTN","SCAPMC14",5,0)
 ; input:
"RTN","SCAPMC14",6,0)
 ; SC200 = ien of NEW PERSON file(#200) [required]
"RTN","SCAPMC14",7,0)
 ;  SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC14",8,0)
 ;                       [default: TODAY]
"RTN","SCAPMC14",9,0)
 ;        ("END")   = end date to search (inclusive)
"RTN","SCAPMC14",10,0)
 ;                      [default: TODAY]
"RTN","SCAPMC14",11,0)
 ;        ("INCL")  = 1: only use patients who were assigned to
"RTN","SCAPMC14",12,0)
 ;                       team for entire date range
"RTN","SCAPMC14",13,0)
 ;                    0: anytime in date range
"RTN","SCAPMC14",14,0)
 ;                      [default: 1] 
"RTN","SCAPMC14",15,0)
 ;  SCPURPA -array of pointers to team purpose file 403.47
"RTN","SCAPMC14",16,0)
 ;          if none are defined - returns all teams
"RTN","SCAPMC14",17,0)
 ;          if @SCPURPA@('exclude') is defined - exclude listed teams
"RTN","SCAPMC14",18,0)
 ;  SCROLEA-array of pointer to 403.46 (per SCPURPA)
"RTN","SCAPMC14",19,0)
 ;  SCLIST -array name to store list
"RTN","SCAPMC14",20,0)
 ;          [ex. ^TMP("SCPT",$J)]
"RTN","SCAPMC14",21,0)
 ;        
"RTN","SCAPMC14",22,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC14",23,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC14",24,0)
 ;  SCYESCL = Boolean to indicate 1=use associated clinics 0=don't
"RTN","SCAPMC14",25,0)
 ;            default=0
"RTN","SCAPMC14",26,0)
 ;
"RTN","SCAPMC14",27,0)
 ;
"RTN","SCAPMC14",28,0)
 ; Output:
"RTN","SCAPMC14",29,0)
 ;  SCLIST() = array of patients
"RTN","SCAPMC14",30,0)
 ;             Format:
"RTN","SCAPMC14",31,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC14",32,0)
 ;               Piece     Description
"RTN","SCAPMC14",33,0)
 ;                 1       IEN of PATIENT file entry
"RTN","SCAPMC14",34,0)
 ;                 2       Name of patient
"RTN","SCAPMC14",35,0)
 ;                 3       IEN of Pt Team Posit Asment if position=source
"RTN","SCAPMC14",36,0)
 ;                 4       Activation Date
"RTN","SCAPMC14",37,0)
 ;                 5       Inactivation Date
"RTN","SCAPMC14",38,0)
 ;                 6       Source 1=Clinic, Null=Position
"RTN","SCAPMC14",39,0)
 ;                 7       IEN of Clinic if clinic=source
"RTN","SCAPMC14",40,0)
 ;
"RTN","SCAPMC14",41,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC14",42,0)
 ;  @SCERR@(0) = number of errors, undefined if none
"RTN","SCAPMC14",43,0)
 ;             Format:
"RTN","SCAPMC14",44,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC14",45,0)
 ;               Piece     Description
"RTN","SCAPMC14",46,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC14",47,0)
 ;  Returned: 1 if ok, 0 if error
"RTN","SCAPMC14",48,0)
 ;
"RTN","SCAPMC14",49,0)
 ;
"RTN","SCAPMC14",50,0)
ST N SCTM,SCPTA,SCPTA0,SCOK,SCX,NODE,TPACT,TPINACT,SCTEMP,SCTP,SCUSR
"RTN","SCAPMC14",51,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCP,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCAPMC14",52,0)
 ; -- initialize control variables
"RTN","SCAPMC14",53,0)
 G:'$$OKDATA PRACQ
"RTN","SCAPMC14",54,0)
 ; -- get list of positions for practitioner
"RTN","SCAPMC14",55,0)
 G:'$$TPPR^SCAPMC(SC200,SCDATES,.SCPURPA,.SCROLEA,"SCTEMP",.SCERR) PRACQ
"RTN","SCAPMC14",56,0)
 G:'$G(SCTEMP(0)) PRACQ
"RTN","SCAPMC14",57,0)
 S SCTP=0
"RTN","SCAPMC14",58,0)
 ;get list of patients for each position
"RTN","SCAPMC14",59,0)
 F SCX=1:1 S NODE=$G(SCTEMP(SCX)),SCTP=+NODE Q:'SCTP  D  Q:'SCOK
"RTN","SCAPMC14",60,0)
 .S TPACT=$P(SCTEMP(SCX),U,5)
"RTN","SCAPMC14",61,0)
 .S TPINACT=$P(SCTEMP(SCX),U,6)
"RTN","SCAPMC14",62,0)
 .N SCDTPR
"RTN","SCAPMC14",63,0)
 .S SCDTPR("BEGIN")=$S(TPACT>@SCDATES@("BEGIN"):TPACT,1:@SCDATES@("BEGIN"))
"RTN","SCAPMC14",64,0)
 .S SCDTPR("END")=$S('TPINACT:@SCDATES@("END"),(TPINACT<@SCDATES@("END")):TPINACT,1:@SCDATES@("END"))
"RTN","SCAPMC14",65,0)
 .S SCDTPR("INCL")=@SCDATES@("INCL")
"RTN","SCAPMC14",66,0)
 .S SCOK=$$PTTP^SCAPMC(SCTP,"SCDTPR",.SCLIST,.SCERR)
"RTN","SCAPMC14",67,0)
 .Q:'SCOK
"RTN","SCAPMC14",68,0)
 .Q:'SCYESCL
"RTN","SCAPMC14",69,0)
 .S SC44=$P($G(^SCTM(404.57,+SCTP,0)),U,9)
"RTN","SCAPMC14",70,0)
 .Q:'SC44
"RTN","SCAPMC14",71,0)
 .S SCOK=$$PTCL^SCAPMC(SC44,"SCDTPR",.SCLIST,.SCERR)
"RTN","SCAPMC14",72,0)
PRACQ Q $G(@SCERR@(0))<1
"RTN","SCAPMC14",73,0)
 ;
"RTN","SCAPMC14",74,0)
OKDATA() ;setup/check variables
"RTN","SCAPMC14",75,0)
 N SCOK
"RTN","SCAPMC14",76,0)
 S SCOK=1
"RTN","SCAPMC14",77,0)
 S SCYESCL=$G(SCYESCL,0)
"RTN","SCAPMC14",78,0)
 D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)
"RTN","SCAPMC14",79,0)
 IF '$D(^VA(200,+$G(SC200),0)) D  S SCOK=0
"RTN","SCAPMC14",80,0)
 . S SCPARM("PRACT")=$G(SC200,"Undefined")
"RTN","SCAPMC14",81,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC14",82,0)
 ; -- is it a valid DFN passed (Error # 20001 in DIALOG file)
"RTN","SCAPMC14",83,0)
 IF '$D(^VA(200,+SC200,0)) D   S SCOK=0
"RTN","SCAPMC14",84,0)
 . S SCPARM("PRACT")=SC200
"RTN","SCAPMC14",85,0)
 . D ERR^SCAPMCU1(SCESEQ,20001,.SCPARM,"",.SCERR)
"RTN","SCAPMC14",86,0)
 Q SCOK
"RTN","SCAPMC14",87,0)
 ;
"RTN","SCAPMC15")
0^8^B15325758
"RTN","SCAPMC15",1,0)
SCAPMC15 ;ALB/REW - Team API's ; December 1, 1995
"RTN","SCAPMC15",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC15",3,0)
 ;;1.0
"RTN","SCAPMC15",4,0)
ACTMNM(SCTMNM,SCFIELDA,SCMAINA,SCEFF,SCERR) ; -- activate a team (add if need be)
"RTN","SCAPMC15",5,0)
 ; input:
"RTN","SCAPMC15",6,0)
 ;  SCTMNM  = External Value of Team Name
"RTN","SCAPMC15",7,0)
 ;  SCFIELDA= similar to above -used for history entries (404.58)
"RTN","SCAPMC15",8,0)
 ;  SCMAINA = array of extra field entries - scfielda('fld#')=value
"RTN","SCAPMC15",9,0)
 ;     -Note: Only used if BRAND NEW TEAM - team fields (404.51)
"RTN","SCAPMC15",10,0)
 ;  SCEFF   = date to activate [default=DT]
"RTN","SCAPMC15",11,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC15",12,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC15",13,0)
 ;
"RTN","SCAPMC15",14,0)
 ; Output:
"RTN","SCAPMC15",15,0)
 ;  SCPTAIEN    = ien if entry made to file 404.43, 0 ow
"RTN","SCAPMC15",16,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC15",17,0)
 ;             Foramt:
"RTN","SCAPMC15",18,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC15",19,0)
 ;               Piece     Description
"RTN","SCAPMC15",20,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC15",21,0)
 ;
"RTN","SCAPMC15",22,0)
 ;            1      2      3      4      5      6
"RTN","SCAPMC15",23,0)
 ;  Returned: Ok?^status^histien^actdt^inactdt^sctm
"RTN","SCAPMC15",24,0)
 N SCTM,SC,SCFLD,SCACTM
"RTN","SCAPMC15",25,0)
 N SCPTAIEN,SCESEQ,SCPARM,SCIEN
"RTN","SCAPMC15",26,0)
 S SCACTM=-1
"RTN","SCAPMC15",27,0)
 ;does entry exist? if not create
"RTN","SCAPMC15",28,0)
 G:'$$OKNMDATA QTNM ;check/setup variables
"RTN","SCAPMC15",29,0)
 S SCTM=$O(^SCTM(404.51,"B",SCTMNM,""))
"RTN","SCAPMC15",30,0)
 IF 'SCTM D
"RTN","SCAPMC15",31,0)
 .S SC($J,404.51,"+1,",.01)=SCTMNM
"RTN","SCAPMC15",32,0)
 .IF $D(SCMAINA) D
"RTN","SCAPMC15",33,0)
 ..S SCFLD=0
"RTN","SCAPMC15",34,0)
 ..F  S SCFLD=$O(@SCMAINA@(SCFLD)) Q:'SCFLD  D
"RTN","SCAPMC15",35,0)
 ...S SC($J,404.51,"+1,",SCFLD)=@SCMAINA@(SCFLD)
"RTN","SCAPMC15",36,0)
 .D UPDATE^DIE("","SC($J)","SCIEN","SCERR")
"RTN","SCAPMC15",37,0)
 .I $D(@SCERR) K SCIEN
"RTN","SCAPMC15",38,0)
 .S SCTM=$G(SCIEN(1))
"RTN","SCAPMC15",39,0)
 S SCACTM=$$ACTM(SCTM,SCFIELDA,SCEFF,SCERR)
"RTN","SCAPMC15",40,0)
QTNM Q SCACTM_U_SCTM
"RTN","SCAPMC15",41,0)
 ;
"RTN","SCAPMC15",42,0)
ACTM(SCTM,SCFIELDA,SCEFF,SCERR) ; activate team from internal entry#
"RTN","SCAPMC15",43,0)
 ; input:
"RTN","SCAPMC15",44,0)
 ;  SCTM    = Pointer to Team File (#404.51)
"RTN","SCAPMC15",45,0)
 ;  SCFIELDA= array of extra field entries for history entries (404.58)
"RTN","SCAPMC15",46,0)
 ;  SCEFF   = date to activate [default=DT]
"RTN","SCAPMC15",47,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC15",48,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC15",49,0)
 ;
"RTN","SCAPMC15",50,0)
 ; Output:
"RTN","SCAPMC15",51,0)
 ;  SCPTAIEN    = ien if entry made to file 404.43, 0 ow
"RTN","SCAPMC15",52,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC15",53,0)
 ;             Foramt:
"RTN","SCAPMC15",54,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC15",55,0)
 ;               Piece     Description
"RTN","SCAPMC15",56,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC15",57,0)
 ;            1      2           3      4
"RTN","SCAPMC15",58,0)
 ; Returned: status^history ien^actdt^inactdt
"RTN","SCAPMC15",59,0)
 ;
"RTN","SCAPMC15",60,0)
 N SCTMDTS,SCXX,SCOK,SCHIST,SCACTM,SCSTATUS
"RTN","SCAPMC15",61,0)
 N SCPTAIEN,SCESEQ,SCPARM,SCIEN
"RTN","SCAPMC15",62,0)
 G:'$$OKDATA() QT
"RTN","SCAPMC15",63,0)
 S SCSTATUS=$G(@SCFIELDA@(.03))
"RTN","SCAPMC15",64,0)
 S SCTMDTS("BEGIN")=SCEFF
"RTN","SCAPMC15",65,0)
 S SCTMDTS("END")=3990101
"RTN","SCAPMC15",66,0)
 ;for inactive check for any activity in future
"RTN","SCAPMC15",67,0)
 ;for active check for continuous activity in future
"RTN","SCAPMC15",68,0)
 S SCTMDTS("INCL")='SCSTATUS
"RTN","SCAPMC15",69,0)
 S SCOK=0
"RTN","SCAPMC15",70,0)
 IF "^1^0^"'[(U_SCSTATUS_U) D  G QT
"RTN","SCAPMC15",71,0)
 .S SCOK=-1
"RTN","SCAPMC15",72,0)
 .S SCPARM("TEAM")=$G(SCTM,"Undefined")
"RTN","SCAPMC15",73,0)
 .S SCPARM("MESSAGE")="Required Field: #.03"_SCSTATUS
"RTN","SCAPMC15",74,0)
 .D ERR^SCAPMCU1(.SCESEQ,4045100,.SCPARM,"",.SCERR)
"RTN","SCAPMC15",75,0)
 ;is team already active or will be in future?
"RTN","SCAPMC15",76,0)
 S SCHIST=$P($$ACTHIST^SCAPMCU2(404.58,SCTM,"SCTMDTS",.SCERR,"SCXX"),U,1,4)
"RTN","SCAPMC15",77,0)
 IF ('SCSTATUS)&($P(SCHIST,U,3)'<SCEFF) D  G QT
"RTN","SCAPMC15",78,0)
 . S SCPARM("TEAM")=$G(SCTM,"Undefined")
"RTN","SCAPMC15",79,0)
 . S SCPARM("MESSAGE")="Inactivation Date must not be equal to Inactivation Date"
"RTN","SCAPMC15",80,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045100,.SCPARM,"",.SCERR)
"RTN","SCAPMC15",81,0)
 IF (+SCHIST+SCSTATUS)=1!('$D(^SCTM(404.58,"B",SCTM))) D  ;procede if not at state now
"RTN","SCAPMC15",82,0)
 .S SC($J,404.58,"+1,",.01)=SCTM
"RTN","SCAPMC15",83,0)
 .S SC($J,404.58,"+1,",.02)=SCEFF
"RTN","SCAPMC15",84,0)
 .IF $D(SCFIELDA) D
"RTN","SCAPMC15",85,0)
 ..S SCFLD=0
"RTN","SCAPMC15",86,0)
 ..F  S SCFLD=$O(@SCFIELDA@(SCFLD)) Q:'SCFLD  D
"RTN","SCAPMC15",87,0)
 ...S SC($J,404.58,"+1,",SCFLD)=@SCFIELDA@(SCFLD)
"RTN","SCAPMC15",88,0)
 .D UPDATE^DIE("","SC($J)","SCIEN","SCERR")
"RTN","SCAPMC15",89,0)
 .IF '$G(@SCERR@(0))<1 D
"RTN","SCAPMC15",90,0)
 .S:SCSTATUS SCHIST=SCSTATUS_U_SCIEN(1)_U_SCEFF_U
"RTN","SCAPMC15",91,0)
 .S:'SCSTATUS SCHIST=SCSTATUS_U_SCIEN(1)_U_$P(SCHIST,U,3)_U_SCEFF
"RTN","SCAPMC15",92,0)
 .S SCOK=1
"RTN","SCAPMC15",93,0)
QT Q SCOK_U_$G(SCHIST)
"RTN","SCAPMC15",94,0)
 ;
"RTN","SCAPMC15",95,0)
OKDATA() ;
"RTN","SCAPMC15",96,0)
 ;setup/check variables for actm call
"RTN","SCAPMC15",97,0)
 N SCOK,SCFLD
"RTN","SCAPMC15",98,0)
 S SCOK=1
"RTN","SCAPMC15",99,0)
 D INIT^SCAPMCU1(.SCOK)
"RTN","SCAPMC15",100,0)
 S:'$G(SCEFF) SCEFF=DT
"RTN","SCAPMC15",101,0)
 F SCFLD=.03,.04 IF '($D(@SCFIELDA@(SCFLD))#2) D
"RTN","SCAPMC15",102,0)
 . S SCPARM("TEAM")=$G(SCTM,"Undefined")
"RTN","SCAPMC15",103,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045100,.SCPARM,"",.SCERR)
"RTN","SCAPMC15",104,0)
 Q SCOK
"RTN","SCAPMC15",105,0)
OKNMDATA() ;
"RTN","SCAPMC15",106,0)
 ;setup/check variables for actmnm call
"RTN","SCAPMC15",107,0)
 N SCOK,SCFLD
"RTN","SCAPMC15",108,0)
 S SCOK=1
"RTN","SCAPMC15",109,0)
 D INIT^SCAPMCU1(.SCOK)
"RTN","SCAPMC15",110,0)
 S:'$G(SCEFF) SCEFF=DT
"RTN","SCAPMC15",111,0)
 ; only check 404.51 fields if no entry already
"RTN","SCAPMC15",112,0)
 IF '$D(^SCTM(404.51,"B",SCTMNM)) D
"RTN","SCAPMC15",113,0)
 .F SCFLD=.03,.06,.07 IF '($D(@SCMAINA@(SCFLD))#2) D
"RTN","SCAPMC15",114,0)
 ..S SCPARM("TEAM")=$G(SCTM,"Undefined")
"RTN","SCAPMC15",115,0)
 ..S SCPARM("MESSAGE")="Required Field: #"_SCFLD
"RTN","SCAPMC15",116,0)
 ..D ERR^SCAPMCU1(.SCESEQ,4045100,.SCPARM,"",.SCERR)
"RTN","SCAPMC15",117,0)
 F SCFLD=.03,.04 IF '($D(@SCFIELDA@(SCFLD))#2) D
"RTN","SCAPMC15",118,0)
 . S SCPARM("TEAM")=$G(SCTM,"Undefined")
"RTN","SCAPMC15",119,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045100,.SCPARM,"",.SCERR)
"RTN","SCAPMC15",120,0)
 Q SCOK
"RTN","SCAPMC16")
0^87^B3001781
"RTN","SCAPMC16",1,0)
SCAPMC16 ;ALB/CMM - TEAM/CLINIC APIs ;03/19/96
"RTN","SCAPMC16",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC16",3,0)
 ;
"RTN","SCAPMC16",4,0)
TMCL(SCCLN,SCDATES,SCLIST,SCERR) ;  -- list of teams for a clinic
"RTN","SCAPMC16",5,0)
 ; input:
"RTN","SCAPMC16",6,0)
 ; SCCLN = ien of HOSPITAL LOCATION <FILE#44> [required]
"RTN","SCAPMC16",7,0)
 ; SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC16",8,0)
 ;                      [default: TODAY]
"RTN","SCAPMC16",9,0)
 ;        ("END")   = end date to search (inclusive)
"RTN","SCAPMC16",10,0)
 ;                      [default: TODAY]
"RTN","SCAPMC16",11,0)
 ;        ("INCL")  = 1: only use patients who were assigned to
"RTN","SCAPMC16",12,0)
 ;                       team for entire date range
"RTN","SCAPMC16",13,0)
 ;                    0: anytime in date range
"RTN","SCAPMC16",14,0)
 ;                      [default: 1] 
"RTN","SCAPMC16",15,0)
 ;  SCLIST -array name to store list
"RTN","SCAPMC16",16,0)
 ;          [ex. ^TMP("SCPT",$J)]
"RTN","SCAPMC16",17,0)
 ;        
"RTN","SCAPMC16",18,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC16",19,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC16",20,0)
 ;
"RTN","SCAPMC16",21,0)
 ; Output:
"RTN","SCAPMC16",22,0)
 ;  SCLIST() = array of positions (includes SCTP xref)
"RTN","SCAPMC16",23,0)
 ;             Format:
"RTN","SCAPMC16",24,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC16",25,0)
 ;               Piece     Description
"RTN","SCAPMC16",26,0)
 ;                 1       IEN of Team #404.51
"RTN","SCAPMC16",27,0)
 ;                 2       Team Name
"RTN","SCAPMC16",28,0)
 ;                Subscript: "SCTP",SCTM,IEN =""
"RTN","SCAPMC16",29,0)
 ;
"RTN","SCAPMC16",30,0)
 ;  SCERR() = Array of errors
"RTN","SCAPMC16",31,0)
 ;  @SCERR@(0) = number of errors, undefined if none
"RTN","SCAPMC16",32,0)
 ;             Format:
"RTN","SCAPMC16",33,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC16",34,0)
 ;               Piece     Description
"RTN","SCAPMC16",35,0)
 ;                 1       error description
"RTN","SCAPMC16",36,0)
 ;  Returned: 1 if ok, 0 if error
"RTN","SCAPMC16",37,0)
 ;
"RTN","SCAPMC16",38,0)
ST ;
"RTN","SCAPMC16",39,0)
 N OKAY,NODE,ENT,PCLIST,ERR2,CNT,TIEN
"RTN","SCAPMC16",40,0)
 I '$D(SCCLN)!('$D(SCLIST)) S @SCERR@(0)="undefined variables" Q 0
"RTN","SCAPMC16",41,0)
 I '$D(SCERR) Q 0
"RTN","SCAPMC16",42,0)
 ;
"RTN","SCAPMC16",43,0)
 S PCLIST="PCLST",ERR2="ERROR2"
"RTN","SCAPMC16",44,0)
 S OKAY=$$TPCL^SCAPMC30(SCCLN,.SCDATES,"","","","",.PCLIST,.ERR2)
"RTN","SCAPMC16",45,0)
 ;  ^ positions for a clinic SCCLN
"RTN","SCAPMC16",46,0)
 I 'OKAY S @SCERR@(0)="error in TPCL^SCAPMC30 call"
"RTN","SCAPMC16",47,0)
 Q:'OKAY 0
"RTN","SCAPMC16",48,0)
 ;
"RTN","SCAPMC16",49,0)
 S (CNT,ENT)=0
"RTN","SCAPMC16",50,0)
 F  S ENT=$O(@PCLIST@(ENT)) Q:ENT=""!(ENT'?.N)  D
"RTN","SCAPMC16",51,0)
 .S NODE=$G(@PCLIST@(ENT))
"RTN","SCAPMC16",52,0)
 .S TIEN=+$P(NODE,"^",3) ;team ien
"RTN","SCAPMC16",53,0)
 .I $D(@SCLIST@("SCTP",TIEN)) Q
"RTN","SCAPMC16",54,0)
 .;unique entries only
"RTN","SCAPMC16",55,0)
 .S CNT=CNT+1
"RTN","SCAPMC16",56,0)
 .S @SCLIST@(CNT)=TIEN ;team ien
"RTN","SCAPMC16",57,0)
 .S @SCLIST@("SCTP",TIEN,CNT)=""
"RTN","SCAPMC16",58,0)
 .S $P(@SCLIST@(CNT),"^",2)=$P($G(^SCTM(404.51,TIEN,0)),"^") ;team name
"RTN","SCAPMC16",59,0)
 S @SCLIST@(0)=CNT
"RTN","SCAPMC16",60,0)
 Q 1
"RTN","SCAPMC17")
0^10^B19777054
"RTN","SCAPMC17",1,0)
SCAPMC17 ;ALB/REW - Team API's ; December 1, 1995
"RTN","SCAPMC17",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC17",3,0)
 ;;1.0
"RTN","SCAPMC17",4,0)
ACTPNM(SCTPNM,SCTMNM,SCFIELDA,SCMAINA,SCEFF,SCERR) ; -- change position status (add if need be)
"RTN","SCAPMC17",5,0)
 ; input:
"RTN","SCAPMC17",6,0)
 ;  SCTPNM  = External Value of Position Name
"RTN","SCAPMC17",7,0)
 ;  SCTMNM  = External Value of Team Name
"RTN","SCAPMC17",8,0)
 ;  SCFIELDA = similar to above -used for history entries (404.59)
"RTN","SCAPMC17",9,0)
 ;  SCMAINA = array of extra field entries - scfielda('fld#')=value
"RTN","SCAPMC17",10,0)
 ;     -Note: Only used if BRAND NEW POSITION - team fields (404.57)
"RTN","SCAPMC17",11,0)
 ;  SCEFF   = date to activate [default=DT]
"RTN","SCAPMC17",12,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC17",13,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC17",14,0)
 ;
"RTN","SCAPMC17",15,0)
 ; Output:
"RTN","SCAPMC17",16,0)
 ;  SCPTAIEN    = ien if entry made to file 404.43, 0 ow
"RTN","SCAPMC17",17,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC17",18,0)
 ;             Foramt:
"RTN","SCAPMC17",19,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC17",20,0)
 ;               Piece     Description
"RTN","SCAPMC17",21,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC17",22,0)
 ;
"RTN","SCAPMC17",23,0)
 ;            1      2      3      4      5      6
"RTN","SCAPMC17",24,0)
 ;  Returned: Ok?^status^histien^actdt^inactdt^sctp
"RTN","SCAPMC17",25,0)
 N SCTM,SC,SCFLD,SCACTM
"RTN","SCAPMC17",26,0)
 N SCPTAIEN,SCESEQ,SCPARM,SCIEN
"RTN","SCAPMC17",27,0)
 S SCACTM=-1
"RTN","SCAPMC17",28,0)
 ;does entry exist? if not create
"RTN","SCAPMC17",29,0)
 G:'$$OKNMDATA QTNM ;check/setup variables
"RTN","SCAPMC17",30,0)
 S SCTM=$O(^SCTM(404.51,"B",SCTMNM,""))
"RTN","SCAPMC17",31,0)
 IF 'SCTM D  G QTNM
"RTN","SCAPMC17",32,0)
 . S SCPARM("TEAM")=$G(SCTM,"Undefined")
"RTN","SCAPMC17",33,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045100,.SCPARM,"",.SCERR)
"RTN","SCAPMC17",34,0)
 S SCTP=$O(^SCTM(404.57,"APRIMARY",SCTPNM,SCTM,""))
"RTN","SCAPMC17",35,0)
 IF 'SCTP D
"RTN","SCAPMC17",36,0)
 .S SC($J,404.57,"+1,",.01)=SCTPNM
"RTN","SCAPMC17",37,0)
 .S SC($J,404.57,"+1,",.02)=SCTM
"RTN","SCAPMC17",38,0)
 .IF $D(SCMAINA) D
"RTN","SCAPMC17",39,0)
 ..S SCFLD=0
"RTN","SCAPMC17",40,0)
 ..F  S SCFLD=$O(@SCMAINA@(SCFLD)) Q:'SCFLD  D
"RTN","SCAPMC17",41,0)
 ...S SC($J,404.57,"+1,",SCFLD)=@SCMAINA@(SCFLD)
"RTN","SCAPMC17",42,0)
 .D UPDATE^DIE("","SC($J)","SCIEN",SCERR)
"RTN","SCAPMC17",43,0)
 .I $D(@SCERR) K SCIEN
"RTN","SCAPMC17",44,0)
 .S SCTP=$G(SCIEN(1))
"RTN","SCAPMC17",45,0)
 S SCACTP=$$ACTP(SCTP,SCFIELDA,SCEFF,SCERR)
"RTN","SCAPMC17",46,0)
QTNM Q SCACTP_U_SCTP
"RTN","SCAPMC17",47,0)
 ;
"RTN","SCAPMC17",48,0)
ACTP(SCTP,SCFIELDA,SCEFF,SCERR) ; change position status using ien
"RTN","SCAPMC17",49,0)
 ; input:
"RTN","SCAPMC17",50,0)
 ;  SCTP  = Pointer to TEAM POSTION File (#404.57)
"RTN","SCAPMC17",51,0)
 ;  SCFIELDA= array of extra field entries - for history entries (404.59)
"RTN","SCAPMC17",52,0)
 ;  SCEFF   = date to activate [default=DT]
"RTN","SCAPMC17",53,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC17",54,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC17",55,0)
 ;
"RTN","SCAPMC17",56,0)
 ; Output:
"RTN","SCAPMC17",57,0)
 ;  SCPTAIEN    = ien if entry made to file 404.43, 0 ow
"RTN","SCAPMC17",58,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC17",59,0)
 ;             Foramt:
"RTN","SCAPMC17",60,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC17",61,0)
 ;               Piece     Description
"RTN","SCAPMC17",62,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC17",63,0)
 ;
"RTN","SCAPMC17",64,0)
 ;            1      2      3      4      5
"RTN","SCAPMC17",65,0)
 ;  Returned:status^histien^actdt^inactdt^sctp
"RTN","SCAPMC17",66,0)
 ;
"RTN","SCAPMC17",67,0)
 N SCTPDTS,SCXX,SCOK,SCHIST,SCACTP,SCSTATUS,SCTM
"RTN","SCAPMC17",68,0)
 N SCPTAIEN,SCESEQ,SCPARM,SCIEN
"RTN","SCAPMC17",69,0)
 S SCTM=$P($G(^SCTM(404.57,+$G(SCTP),0)),U,2)
"RTN","SCAPMC17",70,0)
 G:'$$OKDATA() QT
"RTN","SCAPMC17",71,0)
 S SCSTATUS=$G(@SCFIELDA@(.03))
"RTN","SCAPMC17",72,0)
 S SCTPDTS("BEGIN")=SCEFF
"RTN","SCAPMC17",73,0)
 S SCTPDTS("END")=3990101
"RTN","SCAPMC17",74,0)
 ;for inactive check for any activity in future
"RTN","SCAPMC17",75,0)
 ;for active check for continuous activity in future
"RTN","SCAPMC17",76,0)
 S SCTPDTS("INCL")='SCSTATUS
"RTN","SCAPMC17",77,0)
 S SCOK=0
"RTN","SCAPMC17",78,0)
 IF "^1^0^"'[(U_SCSTATUS_U) D  G QT
"RTN","SCAPMC17",79,0)
 .S SCOK=-1
"RTN","SCAPMC17",80,0)
 .S SCPARM("TEAM")=$G(SCTM,"Undefined")
"RTN","SCAPMC17",81,0)
 .S SCPARM("MESSAGE")="Required Field: #.03"_SCSTATUS
"RTN","SCAPMC17",82,0)
 .D ERR^SCAPMCU1(.SCESEQ,4045100,.SCPARM,"",.SCERR)
"RTN","SCAPMC17",83,0)
 ;is position already active or will be in future?
"RTN","SCAPMC17",84,0)
 S SCHIST=$P($$ACTHIST^SCAPMCU2(404.59,SCTP,"SCTPDTS",.SCERR,"SCXX"),U,1,4)
"RTN","SCAPMC17",85,0)
 ;inactivation must be after activation date
"RTN","SCAPMC17",86,0)
 IF ('SCSTATUS)&($P(SCHIST,U,3)'<SCEFF) D  G QT
"RTN","SCAPMC17",87,0)
 . S SCPARM("POSITION")=$G(SCTP,"Undefined")
"RTN","SCAPMC17",88,0)
 . S SCPARM("MESSAGE")="Inactivation Date must not be equal to Inactivation Date"
"RTN","SCAPMC17",89,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045700,.SCPARM,"",.SCERR)
"RTN","SCAPMC17",90,0)
 IF (+SCHIST+SCSTATUS)=1!('$D(^SCTM(404.59,"B",SCTP))) D  ;procede if not at state now
"RTN","SCAPMC17",91,0)
 .S SC($J,404.59,"+1,",.01)=SCTP
"RTN","SCAPMC17",92,0)
 .S SC($J,404.59,"+1,",.02)=SCEFF
"RTN","SCAPMC17",93,0)
 .IF $D(SCFIELDA) D
"RTN","SCAPMC17",94,0)
 ..S SCFLD=0
"RTN","SCAPMC17",95,0)
 ..F  S SCFLD=$O(@SCFIELDA@(SCFLD)) Q:'SCFLD  D
"RTN","SCAPMC17",96,0)
 ...S SC($J,404.59,"+1,",SCFLD)=@SCFIELDA@(SCFLD)
"RTN","SCAPMC17",97,0)
 .D UPDATE^DIE("","SC($J)","SCIEN","SCERR")
"RTN","SCAPMC17",98,0)
 .IF '$G(@SCERR@(0))<1 D
"RTN","SCAPMC17",99,0)
 .S:SCSTATUS SCHIST=SCSTATUS_U_SCIEN(1)_U_SCEFF
"RTN","SCAPMC17",100,0)
 .S:'SCSTATUS SCHIST=SCSTATUS_U_SCIEN(1)_U_$P(SCHIST,U,3)_U_SCEFF
"RTN","SCAPMC17",101,0)
 .S SCOK=1
"RTN","SCAPMC17",102,0)
QT Q SCOK_U_$G(SCHIST)
"RTN","SCAPMC17",103,0)
 ;
"RTN","SCAPMC17",104,0)
OKDATA() ;
"RTN","SCAPMC17",105,0)
 ;setup/check variables for acTP call
"RTN","SCAPMC17",106,0)
 N SCOK,SCFLD
"RTN","SCAPMC17",107,0)
 S SCOK=1
"RTN","SCAPMC17",108,0)
 D INIT^SCAPMCU1(.SCOK)
"RTN","SCAPMC17",109,0)
 S:'$G(SCEFF) SCEFF=DT
"RTN","SCAPMC17",110,0)
 IF '$D(^SCTM(404.57,+$G(SCTP),0)) D
"RTN","SCAPMC17",111,0)
 . S SCPARM("POSITION")=$G(SCTP,"Undefined")
"RTN","SCAPMC17",112,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045701,.SCPARM,"",.SCERR)
"RTN","SCAPMC17",113,0)
 F SCFLD=.03,.04 IF '($D(@SCFIELDA@(SCFLD))#2) D
"RTN","SCAPMC17",114,0)
 . S SCPARM("TEAM")=$G(SCTM,"Undefined")
"RTN","SCAPMC17",115,0)
 . S SCPARM("MESSAGE")="Undefined history fields"
"RTN","SCAPMC17",116,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045100,.SCPARM,"",.SCERR)
"RTN","SCAPMC17",117,0)
 Q SCOK
"RTN","SCAPMC17",118,0)
OKNMDATA() ;
"RTN","SCAPMC17",119,0)
 ;setup/check variables for acTPnm call
"RTN","SCAPMC17",120,0)
 N SCOK,SCFLD
"RTN","SCAPMC17",121,0)
 S SCOK=1
"RTN","SCAPMC17",122,0)
 D INIT^SCAPMCU1(.SCOK)
"RTN","SCAPMC17",123,0)
 S:'$G(SCEFF) SCEFF=DT
"RTN","SCAPMC17",124,0)
 ; only check 404.57 fields if no entry already
"RTN","SCAPMC17",125,0)
 IF '$D(^SCTM(404.57,"B",SCTPNM)) D
"RTN","SCAPMC17",126,0)
 .F SCFLD=.03 IF '($D(@SCMAINA@(SCFLD))#2) D
"RTN","SCAPMC17",127,0)
 ..S SCPARM("TEAM")=$G(SCTM,"Undefined")
"RTN","SCAPMC17",128,0)
 ..S SCPARM("MESSAGE")="Required Field: #"_SCFLD
"RTN","SCAPMC17",129,0)
 ..D ERR^SCAPMCU1(.SCESEQ,4045100,.SCPARM,"",.SCERR)
"RTN","SCAPMC17",130,0)
 F SCFLD=.03,.04 IF '($D(@SCFIELDA@(SCFLD))#2) D
"RTN","SCAPMC17",131,0)
 . S SCPARM("TEAM")=$G(SCTM,"Undefined")
"RTN","SCAPMC17",132,0)
 . S SCPARM("MESSAGE")="Required Field: #"_SCFLD
"RTN","SCAPMC17",133,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045100,.SCPARM,"",.SCERR)
"RTN","SCAPMC17",134,0)
 Q SCOK
"RTN","SCAPMC18")
0^136^B6459539
"RTN","SCAPMC18",1,0)
SCAPMC18 ;ALB/REW - Team APIs:ACPTCL ; 5 Jul 1995
"RTN","SCAPMC18",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC18",3,0)
 ;;1.0
"RTN","SCAPMC18",4,0)
ACPTCL(DFN,SCCL,SCFIELDA,SCACT,SCERR) ;add a patient to a team (pt tm assgn - #404.42
"RTN","SCAPMC18",5,0)
 ; input:
"RTN","SCAPMC18",6,0)
 ;  DFN     = pointer to PATIENT file (#2)
"RTN","SCAPMC18",7,0)
 ;  SCCL    = pointer to HOSPITAL LOCATION file (#44)
"RTN","SCAPMC18",8,0)
 ;  SCFIELDA= array of additional fields to be added
"RTN","SCAPMC18",9,0)
 ;  SCACT   = date to activate [default=DT]
"RTN","SCAPMC18",10,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC18",11,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC18",12,0)
 ;
"RTN","SCAPMC18",13,0)
 ; Output:
"RTN","SCAPMC18",14,0)
 ;  Returned = ien of enrollment multiple - 0 if none after^new?
"RTN","SCAPMC18",15,0)
 ;  SCERR() = Array of DIALOG file messages(errors).
"RTN","SCAPMC18",16,0)
 ;             Foramt:
"RTN","SCAPMC18",17,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC18",18,0)
 ;               Piece     Description
"RTN","SCAPMC18",19,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC18",20,0)
 N SCPTCL,SCESEQ,SCPARM,SCIEN,SC,SCFLD,SCNEWCL,DIC,X,SCX
"RTN","SCAPMC18",21,0)
 G:'$$OKDATA APTCLQ ;check/setup variables
"RTN","SCAPMC18",22,0)
 S SCPTCL=$$PTCLACT(DFN,SCCL,SCACT,.SCERR)
"RTN","SCAPMC18",23,0)
 IF SCPTCL G APTCLQ
"RTN","SCAPMC18",24,0)
 ELSE  D
"RTN","SCAPMC18",25,0)
 .S DIC="^DPT("_DFN_",""DE"","
"RTN","SCAPMC18",26,0)
 .S SCX=DIC_"0)"
"RTN","SCAPMC18",27,0)
 .L +@(SCX):5
"RTN","SCAPMC18",28,0)
 .IF '$T D EN^DDIOL("Enrollment being edited") Q
"RTN","SCAPMC18",29,0)
 .S DIC(0)="L"
"RTN","SCAPMC18",30,0)
 .S DIC("P")="2.001P"
"RTN","SCAPMC18",31,0)
 .S DA(1)=DFN
"RTN","SCAPMC18",32,0)
 .S X=SCCL
"RTN","SCAPMC18",33,0)
 .D FILE^DICN
"RTN","SCAPMC18",34,0)
 .IF (Y'>0) L -@(SCX)
"RTN","SCAPMC18",35,0)
 .S DIC=DIC_+Y_",1,"
"RTN","SCAPMC18",36,0)
 .S DIC("P")="2.011D"
"RTN","SCAPMC18",37,0)
 .S DA(1)=+Y
"RTN","SCAPMC18",38,0)
 .S DA(2)=DFN
"RTN","SCAPMC18",39,0)
 .S X=SCACT
"RTN","SCAPMC18",40,0)
 .IF $D(SCFIELDA) D
"RTN","SCAPMC18",41,0)
 ..K DIC("DR")
"RTN","SCAPMC18",42,0)
 ..S SCFLD=0
"RTN","SCAPMC18",43,0)
 ..F  S SCFLD=$O(@SCFIELDA@(SCFLD)) Q:'SCFLD  D
"RTN","SCAPMC18",44,0)
 ...S:'$D(DIC("DR")) DIC("DR")=SCFLD_"////"_@SCFIELDA@(SCFLD)
"RTN","SCAPMC18",45,0)
 ...S:$D(DIC("DR")) DIC("DR")=DIC("DR")_";"_SCFLD_"////"_@SCFIELDA@(SCFLD)
"RTN","SCAPMC18",46,0)
 .D FILE^DICN
"RTN","SCAPMC18",47,0)
 .S SCPTCL=$P(Y,U,2)
"RTN","SCAPMC18",48,0)
 .S SCNEWCL=$P(Y,U,3)
"RTN","SCAPMC18",49,0)
 .S SCX=DIC_"0)"
"RTN","SCAPMC18",50,0)
 .L -@(SCX)
"RTN","SCAPMC18",51,0)
APTCLQ Q +$G(SCPTCL)_U_+$G(SCNEWCL)
"RTN","SCAPMC18",52,0)
 ;
"RTN","SCAPMC18",53,0)
PTCLACT(DFN,SCCL,SCDT,SCERR) ;what is patient/clinic enrollment date on a given date-time? Return date or 0
"RTN","SCAPMC18",54,0)
 N SCDATES,SCCLLST,SCOK,SCDATES
"RTN","SCAPMC18",55,0)
 S SCOK=0
"RTN","SCAPMC18",56,0)
 S (SCDATES("BEGIN"),SCDATES("END"))=SCDT
"RTN","SCAPMC18",57,0)
 IF $$CLPT^SCAPMC(DFN,"SCDATES","","SCCLLST",.SCERR) S:$D(SCCLLST("SCCL",SCCL)) SCOK=$O(SCCLLST("SCCL",SCCL,0))
"RTN","SCAPMC18",58,0)
 Q SCOK
"RTN","SCAPMC18",59,0)
 ;
"RTN","SCAPMC18",60,0)
OKDATA() ;setup/check variables
"RTN","SCAPMC18",61,0)
 N SCOK
"RTN","SCAPMC18",62,0)
 S SCOK=1
"RTN","SCAPMC18",63,0)
 D INIT^SCAPMCU1(.SCOK)
"RTN","SCAPMC18",64,0)
 IF +$G(SCCL)'=$G(SCCL) D  S SCOK=0
"RTN","SCAPMC18",65,0)
 . S SCPARM("CLINIC")=$G(SCCL,"Undefined")
"RTN","SCAPMC18",66,0)
 . D ERR^SCAPMCU1(SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC18",67,0)
 IF '$D(^SC(+$G(SCCL),0)) D  S SCOK=0
"RTN","SCAPMC18",68,0)
 . S SCPARM("CLINIC")=$G(SCCL,"Undefined")
"RTN","SCAPMC18",69,0)
 . D ERR^SCAPMCU1(SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC18",70,0)
 IF '$D(^DPT(DFN,0)) D  S SCOK=0
"RTN","SCAPMC18",71,0)
 . S SCPARM("PATIENT")=DFN
"RTN","SCAPMC18",72,0)
 . D ERR^SCAPMCU1(SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC18",73,0)
 S:'$G(SCACT) SCACT=DT
"RTN","SCAPMC18",74,0)
 Q SCOK
"RTN","SCAPMC19")
0^12^B11907427
"RTN","SCAPMC19",1,0)
SCAPMC19 ;ALB/REW - Team API's ; December 1, 1995
"RTN","SCAPMC19",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC19",3,0)
 ;;1.0
"RTN","SCAPMC19",4,0)
ACPRTP(SC200,SCTP,SCFIELDA,SCEFF,SCERR) ; assign practitioner to position
"RTN","SCAPMC19",5,0)
 ; input:
"RTN","SCAPMC19",6,0)
 ;  SC200   = New Person File (#200) Pointer
"RTN","SCAPMC19",7,0)
 ;  SCTP    = Pointer To Team Position File (#404.57)
"RTN","SCAPMC19",8,0)
 ;  SCFIELDA= array of extra field entries - scfielda('fld#')=value
"RTN","SCAPMC19",9,0)
 ;     -Note: Only used if BRAND NEW POSITION - team fields (404.57)
"RTN","SCAPMC19",10,0)
 ;  SCEFF   = date to activate/inactivate [default=DT]
"RTN","SCAPMC19",11,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC19",12,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC19",13,0)
 ;
"RTN","SCAPMC19",14,0)
 ; Output:
"RTN","SCAPMC19",15,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC19",16,0)
 ;             Foramt:
"RTN","SCAPMC19",17,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC19",18,0)
 ;               Piece     Description
"RTN","SCAPMC19",19,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC19",20,0)
 ;
"RTN","SCAPMC19",21,0)
 ;              1      2      3      4      5
"RTN","SCAPMC19",22,0)
 ;  Returned: status^histien^actdt^inactdt^sctm
"RTN","SCAPMC19",23,0)
 ;
"RTN","SCAPMC19",24,0)
 ;
"RTN","SCAPMC19",25,0)
 N SCTPDTS,SCXX,SCOK,SCHIST,SCACTP,SCSTATUS
"RTN","SCAPMC19",26,0)
 N SCPTAIEN,SCESEQ,SCPARM,SCIEN
"RTN","SCAPMC19",27,0)
 G:'$$OKDATA() QT
"RTN","SCAPMC19",28,0)
 S SCSTATUS=$G(@SCFIELDA@(.04))
"RTN","SCAPMC19",29,0)
 S SCTPDTS("BEGIN")=SCEFF
"RTN","SCAPMC19",30,0)
 S SCTPDTS("END")=3990101
"RTN","SCAPMC19",31,0)
 ;for inactive check for any activity in future
"RTN","SCAPMC19",32,0)
 ;for active check for continuous activity in future
"RTN","SCAPMC19",33,0)
 S SCTPDTS("INCL")='SCSTATUS
"RTN","SCAPMC19",34,0)
 S SCOK=0
"RTN","SCAPMC19",35,0)
 IF "^1^0^"'[(U_SCSTATUS_U) D  G QT
"RTN","SCAPMC19",36,0)
 .S SCOK=-1
"RTN","SCAPMC19",37,0)
 .S SCPARM("POSITION")=$G(SCTP,"Undefined")
"RTN","SCAPMC19",38,0)
 .S SCPARM("PRACTITIONER")=$G(SC200,"Undefined")
"RTN","SCAPMC19",39,0)
 .S SCPARM("MESSAGE")="Required Field: #.04 = "_SCSTATUS
"RTN","SCAPMC19",40,0)
 .D ERR^SCAPMCU1(.SCESEQ,4045200,.SCPARM,"",.SCERR)
"RTN","SCAPMC19",41,0)
 ;is position already active or will be in future?
"RTN","SCAPMC19",42,0)
 S SCHIST=$P($$ACTHIST^SCAPMCU2(404.52,SCTP,"SCTPDTS",.SCERR,"SCXX"),U,1,4)
"RTN","SCAPMC19",43,0)
 ;inactivation must be after activation date
"RTN","SCAPMC19",44,0)
 IF ('SCSTATUS)&($P(SCHIST,U,3)'<SCEFF) D  G QT
"RTN","SCAPMC19",45,0)
 . S SCPARM("PRACTITIONER")=$G(SC200,"Undefined")
"RTN","SCAPMC19",46,0)
 . S SCPARM("POSITION")=$G(SCTP,"Undefined")
"RTN","SCAPMC19",47,0)
 . S SCPARM("MESSAGE")="Inactivation Date must not be equal to Inactivation Date"
"RTN","SCAPMC19",48,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045200,.SCPARM,"",.SCERR)
"RTN","SCAPMC19",49,0)
 ;must inactivate same practitioner who was last activated
"RTN","SCAPMC19",50,0)
 S SCOLD200=$P($G(^SCTM(404.52,+$P(SCHIST,U,2),0)),U,3)
"RTN","SCAPMC19",51,0)
 IF ('SCSTATUS)&(SCOLD200&(SCOLD200'=SC200)) D  G QT
"RTN","SCAPMC19",52,0)
 . S SCOK=-1
"RTN","SCAPMC19",53,0)
 . S SCPARM("PRACTITIONER")=$G(SC200,"Undefined")
"RTN","SCAPMC19",54,0)
 . S SCPARM("MESSAGE")="Inactivation must be for same practitioner who was last activated"
"RTN","SCAPMC19",55,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045200,.SCPARM,"",.SCERR)
"RTN","SCAPMC19",56,0)
 IF (+SCHIST+SCSTATUS)=1!('$D(^SCTM(404.52,"B",SCTP))) D  ;procede if not at state now
"RTN","SCAPMC19",57,0)
 .S SC($J,404.52,"+1,",.01)=SCTP
"RTN","SCAPMC19",58,0)
 .S SC($J,404.52,"+1,",.02)=SCEFF
"RTN","SCAPMC19",59,0)
 .S SC($J,404.52,"+1,",.03)=SC200
"RTN","SCAPMC19",60,0)
 .IF $D(SCFIELDA) D
"RTN","SCAPMC19",61,0)
 ..S SCFLD=0
"RTN","SCAPMC19",62,0)
 ..F  S SCFLD=$O(@SCFIELDA@(SCFLD)) Q:'SCFLD  D
"RTN","SCAPMC19",63,0)
 ...S SC($J,404.52,"+1,",SCFLD)=@SCFIELDA@(SCFLD)
"RTN","SCAPMC19",64,0)
 .D UPDATE^DIE("","SC($J)","SCIEN",.SCERR)
"RTN","SCAPMC19",65,0)
 .IF '$G(@SCERR@(0))<1 D
"RTN","SCAPMC19",66,0)
 .S:SCSTATUS SCHIST=SCSTATUS_U_SCIEN(1)_U_SCEFF
"RTN","SCAPMC19",67,0)
 .S:'SCSTATUS SCHIST=SCSTATUS_U_SCIEN(1)_U_$P(SCHIST,U,3)_U_SCEFF
"RTN","SCAPMC19",68,0)
 .S SCOK=1
"RTN","SCAPMC19",69,0)
QT Q SCOK_U_$G(SCHIST)
"RTN","SCAPMC19",70,0)
 ;
"RTN","SCAPMC19",71,0)
OKDATA() ;
"RTN","SCAPMC19",72,0)
 ;setup/check variables for acTP call
"RTN","SCAPMC19",73,0)
 N SCOK,SCFLD
"RTN","SCAPMC19",74,0)
 S SCOK=1
"RTN","SCAPMC19",75,0)
 D INIT^SCAPMCU1(.SCOK)
"RTN","SCAPMC19",76,0)
 S:'$G(SCEFF) SCEFF=DT
"RTN","SCAPMC19",77,0)
 IF '$D(^VA(200,+$G(SC200),0)) D
"RTN","SCAPMC19",78,0)
 . S SCPARM("PRACTITIONER")=$G(SC200,"Undefined")
"RTN","SCAPMC19",79,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045201,.SCPARM,"",.SCERR)
"RTN","SCAPMC19",80,0)
 IF '$D(^SCTM(404.57,+$G(SCTP),0)) D
"RTN","SCAPMC19",81,0)
 . S SCPARM("POSITION")=$G(SCTP,"Undefined")
"RTN","SCAPMC19",82,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045701,.SCPARM,"",.SCERR)
"RTN","SCAPMC19",83,0)
 F SCFLD=.04,.05 IF '($D(@SCFIELDA@(SCFLD))#2) D
"RTN","SCAPMC19",84,0)
 . S SCPARM("PRACTITIONER")=$G(SC200,"Undefined")
"RTN","SCAPMC19",85,0)
 . S SCPARM("MESSAGE")="Undefined history fields"
"RTN","SCAPMC19",86,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045200,.SCPARM,"",.SCERR)
"RTN","SCAPMC19",87,0)
 Q SCOK
"RTN","SCAPMC2")
0^13^B7312799
"RTN","SCAPMC2",1,0)
SCAPMC2 ;ALB/REW - Team API's: PTTM ; JUN 30, 1995
"RTN","SCAPMC2",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC2",3,0)
 ;;1.0
"RTN","SCAPMC2",4,0)
PTTM(SCTEAM,SCDATES,SCLIST,SCERR) ; -- list of patient team assignments
"RTN","SCAPMC2",5,0)
 ; input:
"RTN","SCAPMC2",6,0)
 ;  SCTEAM = ien of TEAM [required]
"RTN","SCAPMC2",7,0)
 ;  SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC2",8,0)
 ;                      [default: TODAY]
"RTN","SCAPMC2",9,0)
 ;        ("END")   = end date to search (inclusive)
"RTN","SCAPMC2",10,0)
 ;                      [default: TODAY]
"RTN","SCAPMC2",11,0)
 ;        ("INCL")  = 1: only use patients who were assigned to
"RTN","SCAPMC2",12,0)
 ;                       team for entire date range
"RTN","SCAPMC2",13,0)
 ;                    0: anytime in date range
"RTN","SCAPMC2",14,0)
 ;                      [default: 1] 
"RTN","SCAPMC2",15,0)
 ;  SCLIST -array name to store list
"RTN","SCAPMC2",16,0)
 ;          [ex. ^TMP("SCPT",$J)]
"RTN","SCAPMC2",17,0)
 ;        
"RTN","SCAPMC2",18,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC2",19,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC2",20,0)
 ;
"RTN","SCAPMC2",21,0)
 ; Output:
"RTN","SCAPMC2",22,0)
 ;  SCLIST() = array of patients
"RTN","SCAPMC2",23,0)
 ;             Format:
"RTN","SCAPMC2",24,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC2",25,0)
 ;               Piece     Description
"RTN","SCAPMC2",26,0)
 ;                 1       IEN of PATIENT file entry
"RTN","SCAPMC2",27,0)
 ;                 2       Name of patient
"RTN","SCAPMC2",28,0)
 ;                 3       IEN of Patient Team Assignment
"RTN","SCAPMC2",29,0)
 ;                 4       Activation Date
"RTN","SCAPMC2",30,0)
 ;                 5       Inactivation Date
"RTN","SCAPMC2",31,0)
 ;                 6       Patient Long ID (SSN)
"RTN","SCAPMC2",32,0)
 ;
"RTN","SCAPMC2",33,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC2",34,0)
 ;  @SCERR@(0)=number of errors, undefined if none
"RTN","SCAPMC2",35,0)
 ;             Foramt:
"RTN","SCAPMC2",36,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC2",37,0)
 ;               Piece     Description
"RTN","SCAPMC2",38,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC2",39,0)
 ;
"RTN","SCAPMC2",40,0)
 ;   Returned: 1 if ok, 0 if error
"RTN","SCAPMC2",41,0)
 ;
"RTN","SCAPMC2",42,0)
 ;
"RTN","SCAPMC2",43,0)
ST N SCPT,SCPTA,SCPTA0
"RTN","SCAPMC2",44,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCP,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCAPMC2",45,0)
 G:'$$OKDATA PRACQ ;check/setup variables
"RTN","SCAPMC2",46,0)
 ; -- loop through patient team assignments
"RTN","SCAPMC2",47,0)
LP S SCPT=0
"RTN","SCAPMC2",48,0)
 F  S SCPT=$O(^SCPT(404.42,"ATMPT",SCTEAM,SCPT)) Q:'SCPT  D
"RTN","SCAPMC2",49,0)
 .S SCPTA=0
"RTN","SCAPMC2",50,0)
 .F  S SCPTA=$O(^SCPT(404.42,"ATMPT",SCTEAM,SCPT,SCPTA)) Q:'SCPTA  D
"RTN","SCAPMC2",51,0)
 ..S SCPTA0=$G(^SCPT(404.42,SCPTA,0))
"RTN","SCAPMC2",52,0)
 ..Q:'SCPTA0
"RTN","SCAPMC2",53,0)
 ..Q:'$$DTCHK^SCAPU1(SCBEGIN,SCEND,SCINCL,$P(SCPTA0,U,2),$P(SCPTA0,U,9))
"RTN","SCAPMC2",54,0)
 ..D BLD(.SCLIST,SCPTA,SCPTA0,.SCN)
"RTN","SCAPMC2",55,0)
PRACQ Q $G(@SCERR@(0))<1
"RTN","SCAPMC2",56,0)
 ;
"RTN","SCAPMC2",57,0)
 ;
"RTN","SCAPMC2",58,0)
BLD(SCLIST,SCPTA,SCPTA0,SCN) ; build list
"RTN","SCAPMC2",59,0)
 ;
"RTN","SCAPMC2",60,0)
 ; SCPA    - ien of patient team assignment file #404.42
"RTN","SCAPMC2",61,0)
 ; SCEFFDT - negative of effective date
"RTN","SCAPMC2",62,0)
 ; SCN     - current subscript (counter) 1->n
"RTN","SCAPMC2",63,0)
 ; SCPTA0   is 0 node of Patient Team Assignment file 1st piece is DFN
"RTN","SCAPMC2",64,0)
 ; 
"RTN","SCAPMC2",65,0)
 ; this builds the array:
"RTN","SCAPMC2",66,0)
 ;   sclist(1->n)=sc2^ptname^effdt^inactdt
"RTN","SCAPMC2",67,0)
 ;    for each scpta zero node passed to it
"RTN","SCAPMC2",68,0)
 Q:'SCPTA!('SCPTA0)  ;add error trapping?
"RTN","SCAPMC2",69,0)
 Q:$D(@SCLIST@("SCPTA",+SCPTA0,SCPTA))
"RTN","SCAPMC2",70,0)
 Q:$D(^TMP("SCMC",$J,"EXCLUDE PT","SCPTA",+SCPTA0))
"RTN","SCAPMC2",71,0)
 N SCEFFDT,SCCNT
"RTN","SCAPMC2",72,0)
 S SCN=SCN+1
"RTN","SCAPMC2",73,0)
 S @SCLIST@(SCN)=+SCPTA0_U_$P($G(^DPT(+SCPTA0,0)),U,1)_U_SCPTA_U_$P(SCPTA0,U,2)_U_$P(SCPTA0,U,9)_U_$P($G(^DPT(+SCPTA0,.36)),U,3)
"RTN","SCAPMC2",74,0)
 ;_U_$P(SCPTA0,U,3)_U_$P($G(^SCTM(404.51,+$P(SCPTA0,U,3),0)),U,1) - didn't include team data to make return array generic
"RTN","SCAPMC2",75,0)
 S @SCLIST@("SCPTA",+SCPTA0,SCPTA,SCN)=""
"RTN","SCAPMC2",76,0)
 Q
"RTN","SCAPMC2",77,0)
OKDATA() ;check/setup variables
"RTN","SCAPMC2",78,0)
 N SCOK
"RTN","SCAPMC2",79,0)
 S SCOK=1
"RTN","SCAPMC2",80,0)
 D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)
"RTN","SCAPMC2",81,0)
 IF '$D(^SCTM(404.51,+$G(SCTEAM),0)) D  S SCOK=0
"RTN","SCAPMC2",82,0)
 . S SCPARM("TEAM")=$G(SCTEAM,"Undefined")
"RTN","SCAPMC2",83,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC2",84,0)
 ; -- is it a valid TEAM ien passed (Error # 4045101 in DIALOG file)
"RTN","SCAPMC2",85,0)
 IF '$D(^SCTM(404.51,+SCTEAM,0)) D  S SCOK=0
"RTN","SCAPMC2",86,0)
 . S SCPARM("TEAM")=SCTEAM
"RTN","SCAPMC2",87,0)
 . D ERR^SCAPMCU1(SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC2",88,0)
 Q SCOK
"RTN","SCAPMC20")
0^93^B6905465
"RTN","SCAPMC20",1,0)
SCAPMC20 ;ALB/REW - Team APIs:APPTTM ; 20 Mar 1996
"RTN","SCAPMC20",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC20",3,0)
 ;;1.0
"RTN","SCAPMC20",4,0)
ACOUTPT(DFN,SCFIELDA,SCERR) ;add/edit a record in OUTPATIENT PROFILE #404.41
"RTN","SCAPMC20",5,0)
 ; input:
"RTN","SCAPMC20",6,0)
 ;  DFN     = pointer to PATIENT file (#2)
"RTN","SCAPMC20",7,0)
 ;  SCFIELDA= array of additional fields to be added
"RTN","SCAPMC20",8,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC20",9,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC20",10,0)
 ;
"RTN","SCAPMC20",11,0)
 ; Output:
"RTN","SCAPMC20",12,0)
 ;  Returned = ok?^404.41 ien^new?
"RTN","SCAPMC20",13,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC20",14,0)
 ;             Foramt:
"RTN","SCAPMC20",15,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC20",16,0)
 ;               Piece     Description
"RTN","SCAPMC20",17,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC20",18,0)
 N SCEXIST
"RTN","SCAPMC20",19,0)
 N SCESEQ,SCPARM,SCIEN,SC,SCFLD
"RTN","SCAPMC20",20,0)
 G:'$$OKDATA APTTMQ ;check/setup variables
"RTN","SCAPMC20",21,0)
 S SCEXIST=$D(^SCPT(404.41,DFN,0))#2
"RTN","SCAPMC20",22,0)
 IF SCEXIST D
"RTN","SCAPMC20",23,0)
 .IF $D(SCFIELDA) D
"RTN","SCAPMC20",24,0)
 ..S SCFLD=0
"RTN","SCAPMC20",25,0)
 ..F  S SCFLD=$O(@SCFIELDA@(SCFLD)) Q:'SCFLD  D
"RTN","SCAPMC20",26,0)
 ...S SC($J,404.41,(+DFN)_",",SCFLD)=@SCFIELDA@(SCFLD)
"RTN","SCAPMC20",27,0)
 .D FILE^DIE("E","SC($J)",SCERR)
"RTN","SCAPMC20",28,0)
 ELSE  D
"RTN","SCAPMC20",29,0)
 .S SCIEN(1)=DFN
"RTN","SCAPMC20",30,0)
 .S SC($J,404.41,"+1,",.01)="`"_DFN
"RTN","SCAPMC20",31,0)
 .IF $D(SCFIELDA) D
"RTN","SCAPMC20",32,0)
 ..S SCFLD=0
"RTN","SCAPMC20",33,0)
 ..F  S SCFLD=$O(@SCFIELDA@(SCFLD)) Q:'SCFLD  D
"RTN","SCAPMC20",34,0)
 ...S SC($J,404.41,"+1,",SCFLD)=@SCFIELDA@(SCFLD)
"RTN","SCAPMC20",35,0)
 .D UPDATE^DIE("E","SC($J)","SCIEN",SCERR)
"RTN","SCAPMC20",36,0)
 .IF $D(@SCERR)!($G(SCIEN(1))'=DFN) S @SCERR=1 K SCIEN
"RTN","SCAPMC20",37,0)
 .ELSE  D
"RTN","SCAPMC20",38,0)
 ..S SCEXIST=0
"RTN","SCAPMC20",39,0)
APTTMQ Q '$D(@SCERR@(0))_U_+$G(DFN)_U_'$G(SCEXIST)
"RTN","SCAPMC20",40,0)
 ;
"RTN","SCAPMC20",41,0)
OKDATA() ;setup/check variables
"RTN","SCAPMC20",42,0)
 N SCOK
"RTN","SCAPMC20",43,0)
 S SCOK=1
"RTN","SCAPMC20",44,0)
 D INIT^SCAPMCU1(.SCOK)
"RTN","SCAPMC20",45,0)
 IF '$D(^DPT(DFN,0)) D  S SCOK=0
"RTN","SCAPMC20",46,0)
 . S SCPARM("PATIENT")=DFN
"RTN","SCAPMC20",47,0)
 . D ERR^SCAPMCU1(SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC20",48,0)
 Q SCOK
"RTN","SCAPMC20",49,0)
 ;
"RTN","SCAPMC20",50,0)
MAKEMANY(DFNA,SCOLDASS,SCBADASS,SCNEWASS) ;Not supported for use by PCMM Only
"RTN","SCAPMC20",51,0)
 ;   DFNA    - DFN ARRAY
"RTN","SCAPMC20",52,0)
 ;   SCOLDASS - Subset of DFNA that were previously assigned
"RTN","SCAPMC20",53,0)
 ;   SCBADASS - Subset of DFNA that could not be assigned
"RTN","SCAPMC20",54,0)
 ;   SCNEWASS - Subset of DFNA that were newly assigned
"RTN","SCAPMC20",55,0)
 ; Return: total^new^old^bad
"RTN","SCAPMC20",56,0)
 ; Note: No input error checking!!
"RTN","SCAPMC20",57,0)
 N DFN,SCX,SCOUTFLD,SCBADOUT,SCBADCNT,SCNEWCND,SCOLDCNT
"RTN","SCAPMC20",58,0)
 S (SCBADCNT,SCNEWCNT,SCOLDCNT)=0
"RTN","SCAPMC20",59,0)
 S DFN=0
"RTN","SCAPMC20",60,0)
 F  S DFN=$O(@DFNA@(DFN)) Q:'DFN  D
"RTN","SCAPMC20",61,0)
 .S SCOUTFLD(.04)=1
"RTN","SCAPMC20",62,0)
 .S SCX=$$ACOUTPT(DFN,"SCOUTFLD","SCBADOUT")
"RTN","SCAPMC20",63,0)
 .IF 'SCX D
"RTN","SCAPMC20",64,0)
 ..S @SCBADASS@(DFN)=""
"RTN","SCAPMC20",65,0)
 ..S SCBADCNT=SCBADCNT+1
"RTN","SCAPMC20",66,0)
 .ELSE  D
"RTN","SCAPMC20",67,0)
 ..IF $P(SCX,U,3) D
"RTN","SCAPMC20",68,0)
 ...S @SCNEWASS@(DFN)=""
"RTN","SCAPMC20",69,0)
 ...S SCNEWCNT=SCNEWCNT+1
"RTN","SCAPMC20",70,0)
 ..ELSE  D
"RTN","SCAPMC20",71,0)
 ...S @SCOLDASS@(DFN)=""
"RTN","SCAPMC20",72,0)
 ...S SCOLDCNT=SCOLDCNT+1
"RTN","SCAPMC20",73,0)
 Q (SCOLDCNT+SCNEWCNT)_U_SCNEWCNT_U_SCOLDCNT_U_SCBADCNT
"RTN","SCAPMC20",74,0)
 ;
"RTN","SCAPMC20",75,0)
PTPCNOTM(SCOUTA,SCDATE) ;Not Supported For Use by PCMM Only
"RTN","SCAPMC20",76,0)
 ;   SCOUTA - Output array of DFNs that are PC but no Team Now
"RTN","SCAPMC20",77,0)
 N DFN,SCPC
"RTN","SCAPMC20",78,0)
 S DFN=0
"RTN","SCAPMC20",79,0)
 F  S DFN=$O(^SCPT(404.41,"APC",DFN)) Q:'DFN  S SCPC=$O(^(DFN)) Q:'SCPC  D
"RTN","SCAPMC20",80,0)
 .Q:$D(^TMP("SCMC",$J,"EXCLUDE PT","SCPTA",+DFN))
"RTN","SCAPMC20",81,0)
 .S:'$$GETPCTM^SCAPMCU2(DFN,SCDATE,1) @SCOUTA@(DFN)=DFN_U_$P($G(^DPT(DFN,0)),U,1)
"RTN","SCAPMC20",82,0)
 Q
"RTN","SCAPMC21")
0^72^B16844934
"RTN","SCAPMC21",1,0)
SCAPMC21 ;ALB/REW - Team APIs:ACPTTP ; 5 Jul 1995
"RTN","SCAPMC21",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC21",3,0)
 ;;1.0
"RTN","SCAPMC21",4,0)
ACPTTP(DFN,SCTP,SCFIELDA,SCACT,SCERR,SCYESTM,SCMAINA) ;add/edit a patient to a position (pt TP assgn - #404.43
"RTN","SCAPMC21",5,0)
 ; input:
"RTN","SCAPMC21",6,0)
 ;  DFN     = pointer to PATIENT file (#2)
"RTN","SCAPMC21",7,0)
 ;  SCTP    = pointer to TEAM POSTION file (#404.57)
"RTN","SCAPMC21",8,0)
 ;  SCFIELDA= array of extra field entries - scfielda('fld#')=value
"RTN","SCAPMC21",9,0)
 ;  SCACT   = date to activate [default=DT]
"RTN","SCAPMC21",10,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC21",11,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC21",12,0)
 ;  SCYESTM = Should team assignment be made, if none active now?[1=YES]
"RTN","SCAPMC21",13,0)
 ;  SCMAINA= array of extra field entries for 404.42 (only if scyestm=1)
"RTN","SCAPMC21",14,0)
 ;
"RTN","SCAPMC21",15,0)
 ; Output:
"RTN","SCAPMC21",16,0)
 ;  Returned = ien of 404.43^new?^404.42 ien (new entries only)^new?^Message
"RTN","SCAPMC21",17,0)
 ;  SCERR()  = Array of DIALOG file messages(errors) .
"RTN","SCAPMC21",18,0)
 ;             Foramt:
"RTN","SCAPMC21",19,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC21",20,0)
 ;               Piece     Description
"RTN","SCAPMC21",21,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC21",22,0)
 N SCESEQ,SCPARM,SCIEN,SC,HISTPTTP,SCFLD,SCTM,SCPTTMA,SCPTTPA,SCTMFLDA,SCNEWTP,SCNEWTM,SCAPTDT,SCAPTTPO,SCAPTTPE,SCMESS
"RTN","SCAPMC21",23,0)
 G:'$$OKDATA APTTPQ ;check/setup variables
"RTN","SCAPMC21",24,0)
 S SCTM=$P($G(^SCTM(404.57,SCTP,0)),U,2)
"RTN","SCAPMC21",25,0)
 ;S SCPTTPA=$$HISTPTTP^SCAPMCU2(DFN,SCTP,SCACT)
"RTN","SCAPMC21",26,0)
 S SCAPTDT("BEGIN")=SCACT
"RTN","SCAPMC21",27,0)
 S SCAPTDT("END")=3990101
"RTN","SCAPMC21",28,0)
 S SCAPTDT("INCL")=0
"RTN","SCAPMC21",29,0)
 IF $S('$D(SCFIELDA):0,'$D(@SCFIELDA@(.05)):0,($G(@SCFIELDA@(.05))=1):1,1:0) IF '$$CHKPC(DFN) D  G APTTPQ
"RTN","SCAPMC21",30,0)
 .S SCMESS=4044300.001
"RTN","SCAPMC21",31,0)
 G:'$$TPPT^SCAPMC(DFN,"SCAPTDT",,,,,0,"SCAPTTPO","SCAPTTPE") APTTPQ
"RTN","SCAPMC21",32,0)
 S SCPTTPA=$O(SCAPTTPO("SCTP",SCTM,SCTP,0))
"RTN","SCAPMC21",33,0)
 ;to edit existing entry
"RTN","SCAPMC21",34,0)
 IF SCPTTPA D  G APTTPQ
"RTN","SCAPMC21",35,0)
 .S SC($J,404.43,(+SCPTTPA)_",",.03)=SCACT
"RTN","SCAPMC21",36,0)
 .IF $D(SCFIELDA) D
"RTN","SCAPMC21",37,0)
 ..S SCFLD=0
"RTN","SCAPMC21",38,0)
 ..F  S SCFLD=$O(@SCFIELDA@(SCFLD)) Q:'SCFLD  D
"RTN","SCAPMC21",39,0)
 ...S SC($J,404.43,(+SCPTTPA)_",",SCFLD)=@SCFIELDA@(SCFLD)
"RTN","SCAPMC21",40,0)
 .D FILE^DIE("","SC($J)",SCERR)
"RTN","SCAPMC21",41,0)
 ;needed: patient team assignment for date
"RTN","SCAPMC21",42,0)
 S SCPTTMA=+$$HISTPTTM^SCAPMCU2(DFN,SCTM,SCACT)
"RTN","SCAPMC21",43,0)
 ; if flag is set to add patient to team & no pt tm assignment exists
"RTN","SCAPMC21",44,0)
 ;
"RTN","SCAPMC21",45,0)
 IF ('SCPTTMA)&($G(SCYESTM))&($D(SCFIELDA)) D
"RTN","SCAPMC21",46,0)
 .S:$D(@SCFIELDA@(.05)) @SCMAINA@(.08)=$G(@SCMAINA@(.08),$S(@SCFIELDA@(.05):1,1:99))
"RTN","SCAPMC21",47,0)
 .S:$D(@SCFIELDA@(.06)) @SCMAINA@(.11)=$G(@SCMAINA@(.11),@SCFIELDA@(.06))
"RTN","SCAPMC21",48,0)
 .S:$D(@SCFIELDA@(.07)) @SCMAINA@(.12)=$G(@SCMAINA@(.12),@SCFIELDA@(.07))
"RTN","SCAPMC21",49,0)
 .S:$D(@SCFIELDA@(.08)) @SCMAINA@(.13)=$G(@SCMAINA@(.13),@SCFIELDA@(.08))
"RTN","SCAPMC21",50,0)
 .S:$D(@SCFIELDA@(.09)) @SCMAINA@(.14)=$G(@SCMAINA@(.14),@SCFIELDA@(.09))
"RTN","SCAPMC21",51,0)
 .S SCPTTMA=+$$ACPTTM^SCAPMC(DFN,SCTM,.SCMAINA,SCACT,SCERR)
"RTN","SCAPMC21",52,0)
TM IF 'SCPTTMA G APTTPQ
"RTN","SCAPMC21",53,0)
 ELSE  D
"RTN","SCAPMC21",54,0)
 .IF $D(SCFIELDA) D
"RTN","SCAPMC21",55,0)
 ..S SCFLD=0
"RTN","SCAPMC21",56,0)
 ..F  S SCFLD=$O(@SCFIELDA@(SCFLD)) Q:'SCFLD  D
"RTN","SCAPMC21",57,0)
 ...S SC($J,404.43,"+1,",SCFLD)=@SCFIELDA@(SCFLD)
"RTN","SCAPMC21",58,0)
 .S SC($J,404.43,"+1,",.01)=SCPTTMA
"RTN","SCAPMC21",59,0)
 .S SC($J,404.43,"+1,",.02)=SCTP
"RTN","SCAPMC21",60,0)
 .S SC($J,404.43,"+1,",.03)=SCACT
"RTN","SCAPMC21",61,0)
 .D UPDATE^DIE("","SC($J)","SCIEN",SCERR)
"RTN","SCAPMC21",62,0)
 .IF $D(@SCERR) K SCIEN
"RTN","SCAPMC21",63,0)
 .ELSE  D
"RTN","SCAPMC21",64,0)
 ..S SCPTTPA=+$G(SCIEN(1))
"RTN","SCAPMC21",65,0)
 ..S SCNEWTP=1
"RTN","SCAPMC21",66,0)
 ..D AFTERTP^SCMCDD1(SCPTTPA)
"RTN","SCAPMC21",67,0)
APTTPQ Q +$G(SCPTTPA)_U_+$G(SCNEWTP)_U_+$G(SCPTTMA)_U_+$P($G(SCPTTMA),U,2)_U_$G(SCMESS)
"RTN","SCAPMC21",68,0)
 ;
"RTN","SCAPMC21",69,0)
ACPTATP(DFNA,SCTP,SCFIELDA,SCACT,SCERR,SCYESTM,SCMAINA,SCNEWTP,SCNEWTM,SCOLDTP,SCBADTP) ;list of patients to a position (pt TP assgn - #404.43 and possibly #404.42
"RTN","SCAPMC21",70,0)
 ; input: as per ACPTTP (above with the following change:)
"RTN","SCAPMC21",71,0)
 ;    DFNA    = is the literal value of a patient array (e.g. "scpt"
"RTN","SCAPMC21",72,0)
 ;              there is at least one scpt(dfn)="" defined
"RTN","SCAPMC21",73,0)
 ;    SCNEWTP = Subset of DFNA that was NEWLY assigned to a Position
"RTN","SCAPMC21",74,0)
 ;    SCNEWTM = Subset of DFNA that was NEWLY assigned to a Team
"RTN","SCAPMC21",75,0)
 ;    SCOLDTP = Subset of DFNA that was already assigned to Position
"RTN","SCAPMC21",76,0)
 ;    SCBADTP = Subset of DFNA that was NOT assigned to Position
"RTN","SCAPMC21",77,0)
 ; output: Count of Patients (New or Old) assigned to Position
"RTN","SCAPMC21",78,0)
 N DFN,SCCNT,SCX,SCNOMAIL
"RTN","SCAPMC21",79,0)
 S SCNOMAIL=1
"RTN","SCAPMC21",80,0)
 S SCCNT=0
"RTN","SCAPMC21",81,0)
 S DFN=0 F  S DFN=$O(@DFNA@(DFN)) Q:'DFN  D
"RTN","SCAPMC21",82,0)
 .S SCX=$$ACPTTP(.DFN,.SCTP,.SCFIELDA,.SCACT,.SCERR,.SCYESTM)
"RTN","SCAPMC21",83,0)
 .;  SCX = ien of 404.43^new?^404.42 ien (new entries only)^new?
"RTN","SCAPMC21",84,0)
 .IF $P(SCX,U,2) D  ;newly assigned
"RTN","SCAPMC21",85,0)
 ..S SCCNT=SCCNT+1
"RTN","SCAPMC21",86,0)
 ..S @SCNEWTP@(DFN)=+SCX   ;scnewtp
"RTN","SCAPMC21",87,0)
 ..S:$P(SCX,U,4) @SCNEWTM@(DFN)=$P(SCX,U,3)  ;scnewtm
"RTN","SCAPMC21",88,0)
 .IF $P(SCX,U,1)&('$P(SCX,U,2)) D  ;old
"RTN","SCAPMC21",89,0)
 ..S SCCNT=SCCNT+1
"RTN","SCAPMC21",90,0)
 ..S @SCOLDTP@(DFN)=+SCX
"RTN","SCAPMC21",91,0)
 .IF 'SCX D
"RTN","SCAPMC21",92,0)
 ..S @SCBADTP@(DFN)=$P(SCX,U,5)
"RTN","SCAPMC21",93,0)
 K SCNOMAIL
"RTN","SCAPMC21",94,0)
 D MAILLST^SCMCTPM(SCTP,.SCADDFLD,DT,.SCNEWTP,.SCOLDTP,.SCBADTP)
"RTN","SCAPMC21",95,0)
 Q SCCNT
"RTN","SCAPMC21",96,0)
 ;
"RTN","SCAPMC21",97,0)
OKDATA() ;setup/check variables
"RTN","SCAPMC21",98,0)
 N SCOK
"RTN","SCAPMC21",99,0)
 S SCOK=1
"RTN","SCAPMC21",100,0)
 D INIT^SCAPMCU1(.SCOK)
"RTN","SCAPMC21",101,0)
 IF '$D(^DPT(DFN,0))!('$D(^SCTM(404.57,SCTP,0))) D  S SCOK=0
"RTN","SCAPMC21",102,0)
 . S SCPARM("PATIENT")=DFN
"RTN","SCAPMC21",103,0)
 . S SCPARM("POSITION")=SCTP
"RTN","SCAPMC21",104,0)
 . D ERR^SCAPMCU1(SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC21",105,0)
 S:'$G(SCACT) SCACT=DT
"RTN","SCAPMC21",106,0)
 S:'$D(SCMAINA) SCMAINA="SC40443A"
"RTN","SCAPMC21",107,0)
 Q SCOK
"RTN","SCAPMC21",108,0)
CHKPC(DFN) ;not stand-alone
"RTN","SCAPMC21",109,0)
 N SCOK,SCX
"RTN","SCAPMC21",110,0)
 S SCOK=1
"RTN","SCAPMC21",111,0)
 G:@SCFIELDA@(.05)=0 QTCKPC  ;ignore if no pc role
"RTN","SCAPMC21",112,0)
 S SCX=$$PCRLPTTP^SCMCTPU2(DFN,SCTP,SCACT)
"RTN","SCAPMC21",113,0)
 IF @SCFIELDA@(.05)=1 D
"RTN","SCAPMC21",114,0)
 .S:'SCX SCOK=0
"RTN","SCAPMC21",115,0)
 IF @SCFIELDA@(.05)=2 D
"RTN","SCAPMC21",116,0)
 .S:'$P(SCX,U,2) SCOK=0
"RTN","SCAPMC21",117,0)
QTCKPC Q SCOK
"RTN","SCAPMC22")
0^73^B4205408
"RTN","SCAPMC22",1,0)
SCAPMC22 ;ALB/REW - Team API's ; December 1, 1995
"RTN","SCAPMC22",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC22",3,0)
 ;;1.0
"RTN","SCAPMC22",4,0)
INPTTP(DFN,SCPTTPA,SCINACT,SCERR) ;inactivate patient from a position (pt tm pos assgn - #404.43
"RTN","SCAPMC22",5,0)
 ; input:
"RTN","SCAPMC22",6,0)
 ;  DFN     = pointer to PATIENT file (#2)
"RTN","SCAPMC22",7,0)
 ;  SCPTTPA   = pointer to pt team assign file (#404.43)
"RTN","SCAPMC22",8,0)
 ;  SCINACT = date to inactivate [default=DT]
"RTN","SCAPMC22",9,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC22",10,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC22",11,0)
 ;
"RTN","SCAPMC22",12,0)
 ; Output:
"RTN","SCAPMC22",13,0)
 ;  SCOK    = 1 if inactivation entry made to file 404.43, 0 ow
"RTN","SCAPMC22",14,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC22",15,0)
 ;             Foramt:
"RTN","SCAPMC22",16,0)
 ;  @SCERR@(0)=Number of erros, undefined if none
"RTN","SCAPMC22",17,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC22",18,0)
 ;               Piece     Description
"RTN","SCAPMC22",19,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC22",20,0)
 N SCTP,SC,SCPARM,SCESEQ,SCLSEQ,SCOK
"RTN","SCAPMC22",21,0)
 S SCOK=0
"RTN","SCAPMC22",22,0)
 G:'$$OKDATA APTTPQ ;setup/check variables
"RTN","SCAPMC22",23,0)
 S SCTP=+$P($G(^SCPT(404.43,SCPTTPA,0)),U,2)
"RTN","SCAPMC22",24,0)
 IF '$$PTTPACT(DFN,SCTP,SCINACT,.SCERR) D  G APTTPQ
"RTN","SCAPMC22",25,0)
 .S SCOK=0
"RTN","SCAPMC22",26,0)
 .S SCPARM("INACTIVE DATE")=SCINACT
"RTN","SCAPMC22",27,0)
 .S SCPARM("MESSAGE")="Patient not assigned to position on date"
"RTN","SCAPMC22",28,0)
 .D ERR^SCAPMCU1(SCESEQ,4044201,.SCPARM,"",.SCERR)
"RTN","SCAPMC22",29,0)
 ELSE  D
"RTN","SCAPMC22",30,0)
 .S SCOK=1
"RTN","SCAPMC22",31,0)
 .S SC($J,404.43,SCPTTPA_",",.04)=SCINACT
"RTN","SCAPMC22",32,0)
 .D UPDATE^DIE("","SC($J)","SCIEN",.SCERR)
"RTN","SCAPMC22",33,0)
 .I $D(@SCERR@("DIERR")) S SCOK=0
"RTN","SCAPMC22",34,0)
APTTPQ Q SCOK
"RTN","SCAPMC22",35,0)
 ;
"RTN","SCAPMC22",36,0)
PTTPACT(DFN,SCTP,SCDT,SCERR) ;is patient assigned to a position on a given date-time?
"RTN","SCAPMC22",37,0)
 N SCPTDTS,SCTPLST,SCOK,SCTM
"RTN","SCAPMC22",38,0)
 S SCTM=$P($G(^SCTM(404.57,SCTP,0)),U,2)
"RTN","SCAPMC22",39,0)
 S SCOK=0
"RTN","SCAPMC22",40,0)
 S (SCPTDTS("BEGIN"),SCPTDTS("END"))=SCDT
"RTN","SCAPMC22",41,0)
 IF $$TPPT^SCAPMC23(DFN,"SCPTDTS",,,,,0,"SCTPLST",.SCERR) S:$D(SCTPLST("SCTP",SCTM,SCTP)) SCOK=1
"RTN","SCAPMC22",42,0)
 Q SCOK
"RTN","SCAPMC22",43,0)
 ;
"RTN","SCAPMC22",44,0)
OKDATA() ;check/setup variables - return 1 if ok/0 if error
"RTN","SCAPMC22",45,0)
 N SCOK
"RTN","SCAPMC22",46,0)
 S SCOK=1
"RTN","SCAPMC22",47,0)
 D INIT^SCAPMCU1(.SCOK)
"RTN","SCAPMC22",48,0)
 IF '$D(^DPT(DFN,0))!('$D(^SCPT(404.43,SCPTTPA,0))) D  S SCOK=0
"RTN","SCAPMC22",49,0)
 . S SCPARM("PATIENT")=$G(DFN,"Undefined")
"RTN","SCAPMC22",50,0)
 . S SCPARM("Pt POSITION Asnt")=$G(SCPTTPA,"Undefined")
"RTN","SCAPMC22",51,0)
 . D ERR^SCAPMCU1(SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC22",52,0)
 S:'$G(SCACT) SCACT=DT
"RTN","SCAPMC22",53,0)
 S:'$G(SCINACT) SCINACT=DT
"RTN","SCAPMC22",54,0)
 Q SCOK
"RTN","SCAPMC23")
0^14^B15146023
"RTN","SCAPMC23",1,0)
SCAPMC23 ;ALB/REW - Team API's:TPPT ; JUN 30, 1995
"RTN","SCAPMC23",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC23",3,0)
 ;;1.0
"RTN","SCAPMC23",4,0)
TPPT(DFN,SCDATES,SCPOSA,SCUSRA,SCPURPA,SCROLEA,SCYESCL,SCLIST,SCERR) ; -- positions for a patient 
"RTN","SCAPMC23",5,0)
 ; input:
"RTN","SCAPMC23",6,0)
 ; DFN = ien of PATIENT file(#2) [required]
"RTN","SCAPMC23",7,0)
 ; SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC23",8,0)
 ;                      [default: TODAY]
"RTN","SCAPMC23",9,0)
 ;        ("END")   = end date to search (inclusive)
"RTN","SCAPMC23",10,0)
 ;                      [default: TODAY]
"RTN","SCAPMC23",11,0)
 ;        ("INCL")  = 1: only use patients who were assigned to
"RTN","SCAPMC23",12,0)
 ;                       team for entire date range
"RTN","SCAPMC23",13,0)
 ;                    0: anytime in date range
"RTN","SCAPMC23",14,0)
 ;                      [default: 1] 
"RTN","SCAPMC23",15,0)
 ;  SCPOSA -array of pointers to team position - 404.57 (per SCPURPA)
"RTN","SCAPMC23",16,0)
 ;  SCUSRA -array of pointers to user file - 8930 (per SCPURPA array)
"RTN","SCAPMC23",17,0)
 ;  SCPURPA -array of pointers to team purpose file 403.47
"RTN","SCAPMC23",18,0)
 ;          if none are defined - returns all teams
"RTN","SCAPMC23",19,0)
 ;          if @SCPURPA@('exclude') is defined - exclude listed teams
"RTN","SCAPMC23",20,0)
 ;  SCROLEA - array of pointers to std position file 403.46 (per SCPURPA)
"RTN","SCAPMC23",21,0)
 ; SCYESCL -boolean[0-NO(default)/1-YES] Include pts asc. via enrollment?
"RTN","SCAPMC23",22,0)
 ;  SCLIST -array name to store list
"RTN","SCAPMC23",23,0)
 ;          [ex. ^TMP("SCPT",$J)]
"RTN","SCAPMC23",24,0)
 ;        
"RTN","SCAPMC23",25,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC23",26,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC23",27,0)
 ;
"RTN","SCAPMC23",28,0)
 ; Output:
"RTN","SCAPMC23",29,0)
 ;  SCLIST() = array of positions (includes SCTP xref)
"RTN","SCAPMC23",30,0)
 ;             Format:
"RTN","SCAPMC23",31,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC23",32,0)
 ;               Piece     Description
"RTN","SCAPMC23",33,0)
 ;                 1       IEN of TEAM POSITION File (#404.57)
"RTN","SCAPMC23",34,0)
 ;                 2       Name of Position
"RTN","SCAPMC23",35,0)
 ;                 3       IEN of Team #404.51
"RTN","SCAPMC23",36,0)
 ;                 4       IEN of file #404.43 (Pt Tm Pos Assign -404.43)
"RTN","SCAPMC23",37,0)
 ;                 5       current effective date
"RTN","SCAPMC23",38,0)
 ;                 6       current inactivate date (if any)
"RTN","SCAPMC23",39,0)
 ;                 7       pointer to 403.46 (role)
"RTN","SCAPMC23",40,0)
 ;                 8       Name of Standard Role
"RTN","SCAPMC23",41,0)
 ;                 9       pointer to User Class (#8930)
"RTN","SCAPMC23",42,0)
 ;                10       Name of User Class
"RTN","SCAPMC23",43,0)
 ;                Subscript: "SCTP",SCTM,IEN =""
"RTN","SCAPMC23",44,0)
 ;
"RTN","SCAPMC23",45,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC23",46,0)
 ;  @SCERR@(0) = number of errors, undefined if none
"RTN","SCAPMC23",47,0)
 ;             Format:
"RTN","SCAPMC23",48,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC23",49,0)
 ;               Piece     Description
"RTN","SCAPMC23",50,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC23",51,0)
 ;  Returned: 1 if ok, 0 if error
"RTN","SCAPMC23",52,0)
 ; Other:
"RTN","SCAPMC23",53,0)
 ;  SCACTHIS =  status (-1:err|0:inact|1:act)^404.59 ien ^actdt^inacdt
"RTN","SCAPMC23",54,0)
 ;
"RTN","SCAPMC23",55,0)
 ;
"RTN","SCAPMC23",56,0)
ST N SCPTTP,SCPTTP0,SCTP,SCR,SCACTHIS,SCTM,SCND,SCU,SCPTTPI,SCTPA,SCPTBEG,SCPTEND,SCTPPT,SCTEAMA,SCENROLL
"RTN","SCAPMC23",57,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCAPMC23",58,0)
 ; -- initialize control variables
"RTN","SCAPMC23",59,0)
 G:'$$OKDATA PRACQ
"RTN","SCAPMC23",60,0)
 ; -- loop through patient team position assignment history
"RTN","SCAPMC23",61,0)
 S (SCTP,SCTPA)=0
"RTN","SCAPMC23",62,0)
 F  S SCTP=$O(^SCPT(404.43,"ADFN",DFN,SCTP)) Q:'SCTP  D
"RTN","SCAPMC23",63,0)
 .F SCPTTP=0:0 S SCPTTP=$O(^SCPT(404.43,"ADFN",DFN,SCTP,SCPTTP)) Q:'SCPTTP  D
"RTN","SCAPMC23",64,0)
 ..S SCPTTPI=$O(^SCPT(404.43,"ADFN",DFN,SCTP,SCPTTP,0))
"RTN","SCAPMC23",65,0)
 ..S SCPTTP0=$G(^SCPT(404.43,SCPTTPI,0))
"RTN","SCAPMC23",66,0)
 ..S SCPTBEG=$P(SCPTTP0,U,3)
"RTN","SCAPMC23",67,0)
 ..S SCPTEND=$P(SCPTTP0,U,4)
"RTN","SCAPMC23",68,0)
 ..Q:1>$$DTCHK^SCAPU1(SCBEGIN,SCEND,SCINCL,SCPTBEG,SCPTEND)
"RTN","SCAPMC23",69,0)
 ..S SCACTHIS=$$ACTHIST^SCAPMCU2(404.59,SCTP,SCDATES,SCERR,"SCTPPT")
"RTN","SCAPMC23",70,0)
 ..; --- below changes scacthis to send 404.43 data
"RTN","SCAPMC23",71,0)
 ..S:SCPTBEG>$P(SCACTHIS,U,3) $P(SCACTHIS,U,3)=SCPTBEG
"RTN","SCAPMC23",72,0)
 ..S:SCPTEND&((SCPTEND<$P(SCACTHIS,U,4))!('$P(SCACTHIS,U,4))) $P(SCACTHIS,U,4)=SCPTEND
"RTN","SCAPMC23",73,0)
 ..S $P(SCACTHIS,U,2)=SCPTTPI
"RTN","SCAPMC23",74,0)
 ..Q:'SCACTHIS
"RTN","SCAPMC23",75,0)
 ..Q:'$$OKARRAY^SCAPU1(.SCPOSA,.SCTP)
"RTN","SCAPMC23",76,0)
 ..S SCND=$G(^SCTM(404.57,SCTP,0)) ;the team position 0 node
"RTN","SCAPMC23",77,0)
 ..S SCU=$P(SCND,U,13)
"RTN","SCAPMC23",78,0)
 ..Q:'$$OKUSRCL^SCAPU1(.SCUSRA,.SCU)
"RTN","SCAPMC23",79,0)
 ..S SCTM=$P(SCND,U,2)
"RTN","SCAPMC23",80,0)
 ..S SCP=$P(^SCTM(404.51,+SCTM,0),U,3)
"RTN","SCAPMC23",81,0)
 ..Q:'$$OKARRAY^SCAPU1(.SCPURPA,.SCP)
"RTN","SCAPMC23",82,0)
 ..S SCPTA=0
"RTN","SCAPMC23",83,0)
 ..S SCR=+$P(SCND,U,3)
"RTN","SCAPMC23",84,0)
 ..Q:'$$OKARRAY^SCAPU1(.SCROLEA,.SCR)
"RTN","SCAPMC23",85,0)
 ..D BLD^SCAPMC24(.SCLIST,SCTM,SCTP,SCACTHIS,SCR)
"RTN","SCAPMC23",86,0)
 ; - if scyescl=1 get enrolled clinics & find positions associated w clinc for teams that the pt is in
"RTN","SCAPMC23",87,0)
 G:'SCYESCL PRACQ
"RTN","SCAPMC23",88,0)
 IF '$$TMPT^SCAPMC(DFN,SCDATES,.SCPURPA,"SCTEAMA",.SCERR) G PRACQ
"RTN","SCAPMC23",89,0)
 IF '$$CLPT^SCAPMC29(DFN,SCDATES,"SCTEAMA","SCENROLL",.SCERR) G PRACQ
"RTN","SCAPMC23",90,0)
 IF '$G(SCENROLL(0)) G PRACQ
"RTN","SCAPMC23",91,0)
 S INDX=0
"RTN","SCAPMC23",92,0)
 F INDX=1:1:$G(SCENROLL(0)) S SCX=$G(SCENROLL(INDX)) D
"RTN","SCAPMC23",93,0)
 .IF 'SCX D  Q
"RTN","SCAPMC23",94,0)
 ..S SCPARM("Enroll Xref")=$G(SCX)
"RTN","SCAPMC23",95,0)
 ..D ERR^SCAPMCU1(.SCESEQ,,SCPARM,"",.SCERR)
"RTN","SCAPMC23",96,0)
 .S SC44=$P(SCX,U,1)
"RTN","SCAPMC23",97,0)
 .S ENR("BEGIN")=$S(SCBEGIN>$P(SCX,U,3):SCBEGIN,1:$P(SCX,U,3))
"RTN","SCAPMC23",98,0)
 .S ENR("END")=$S('$P(SCX,U,4):SCEND,(SCEND<$P(SCX,U,4)):SCEND,1:$P(SCX,U,4))
"RTN","SCAPMC23",99,0)
 .S ENR("INCL")=SCINCL
"RTN","SCAPMC23",100,0)
 .Q:'$$TPCL^SCAPMC(SC44,"ENR",.SCPOSA,.SCUSRA,.SCPURPA,.SCROLEA,.SCLIST,.SCERR)
"RTN","SCAPMC23",101,0)
PRACQ Q $G(@SCERR@(0))<1
"RTN","SCAPMC23",102,0)
 ;
"RTN","SCAPMC23",103,0)
OKDATA() ;setup/check variables
"RTN","SCAPMC23",104,0)
 N SCOK
"RTN","SCAPMC23",105,0)
 S SCOK=1
"RTN","SCAPMC23",106,0)
 D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)
"RTN","SCAPMC23",107,0)
 S SCYESCL=+$G(SCYESCL,0)
"RTN","SCAPMC23",108,0)
 IF '$D(^DPT(+$G(DFN),0)) D  S SCOK=0
"RTN","SCAPMC23",109,0)
 . S SCPARM("Patient")=$G(DFN,"Undefined")
"RTN","SCAPMC23",110,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC23",111,0)
 ;
"RTN","SCAPMC23",112,0)
 Q SCOK
"RTN","SCAPMC23",113,0)
 ;
"RTN","SCAPMC24")
0^15^B11874757
"RTN","SCAPMC24",1,0)
SCAPMC24 ;ALB/REW - Team API's:TPTM ; JUN 30, 1995
"RTN","SCAPMC24",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC24",3,0)
 ;;1.0
"RTN","SCAPMC24",4,0)
TPTM(SCTM,SCDATES,SCUSRA,SCROLEA,SCLIST,SCERR) ; -- positions for a pract
"RTN","SCAPMC24",5,0)
 ; input:
"RTN","SCAPMC24",6,0)
 ; SCTM = ien of TEAM File (#404.51) [required]
"RTN","SCAPMC24",7,0)
 ; SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC24",8,0)
 ;                      [default: TODAY]
"RTN","SCAPMC24",9,0)
 ;        ("END")   = end date to search (inclusive)
"RTN","SCAPMC24",10,0)
 ;                      [default: TODAY]
"RTN","SCAPMC24",11,0)
 ;        ("INCL")  = 1: only use patients who were assigned to
"RTN","SCAPMC24",12,0)
 ;                       team for entire date range
"RTN","SCAPMC24",13,0)
 ;                    0: anytime in date range
"RTN","SCAPMC24",14,0)
 ;                      [default: 1] 
"RTN","SCAPMC24",15,0)
 ;  SCUSRA -array of pointers to user file - 8930
"RTN","SCAPMC24",16,0)
 ;          if none are defined - returns all usr classes
"RTN","SCAPMC24",17,0)
 ;          if @SCPURPA@('exclude') is defined - exclude listed usr class
"RTN","SCAPMC24",18,0)
 ;  SCROLEA - array of pointers to std position file 403.46 (per scusra)
"RTN","SCAPMC24",19,0)
 ;  SCLIST -array name to store list
"RTN","SCAPMC24",20,0)
 ;          [ex. ^TMP("SCPT",$J)]
"RTN","SCAPMC24",21,0)
 ;        
"RTN","SCAPMC24",22,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC24",23,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC24",24,0)
 ;
"RTN","SCAPMC24",25,0)
 ; Output:
"RTN","SCAPMC24",26,0)
 ;  SCLIST() = array of positions (includes SCTP xref)
"RTN","SCAPMC24",27,0)
 ;             Format:
"RTN","SCAPMC24",28,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC24",29,0)
 ;               Piece     Description
"RTN","SCAPMC24",30,0)
 ;                 1       IEN of TEAM POSITION File (#404.57)
"RTN","SCAPMC24",31,0)
 ;                 2       Name of Position
"RTN","SCAPMC24",32,0)
 ;                 3       IEN of Team #404.51
"RTN","SCAPMC24",33,0)
 ;                 4       IEN of file #404.59 (Tm Pos History)
"RTN","SCAPMC24",34,0)
 ;                 5       current effective date
"RTN","SCAPMC24",35,0)
 ;                 6       current inactivate date (if any)
"RTN","SCAPMC24",36,0)
 ;                 7       pointer to 403.46 (role)
"RTN","SCAPMC24",37,0)
 ;                 8       Name of Standard Role
"RTN","SCAPMC24",38,0)
 ;                 9       pointer to User Class (#8930)
"RTN","SCAPMC24",39,0)
 ;                10       Name of User Class
"RTN","SCAPMC24",40,0)
 ;                Subscript: "SCTP",SCTM,IEN =""
"RTN","SCAPMC24",41,0)
 ;
"RTN","SCAPMC24",42,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC24",43,0)
 ;  @SCERR@(0) = number of errors, undefined if none
"RTN","SCAPMC24",44,0)
 ;             Format:
"RTN","SCAPMC24",45,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC24",46,0)
 ;               Piece     Description
"RTN","SCAPMC24",47,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC24",48,0)
 ;  Returned: 1 if ok, 0 if error
"RTN","SCAPMC24",49,0)
 ; Other:
"RTN","SCAPMC24",50,0)
 ;  SCACTHIS =  status (-1:err|0:inact|1:act)^404.59 ien ^actdt^inacdt
"RTN","SCAPMC24",51,0)
 ;
"RTN","SCAPMC24",52,0)
 ;
"RTN","SCAPMC24",53,0)
ST N SCPTTP,SCPTTP0,SCTP,SCR,SCACTHIS,SCND,SCTPTM,SCTPA
"RTN","SCAPMC24",54,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCAPMC24",55,0)
 ; -- initialize control variables
"RTN","SCAPMC24",56,0)
 G:'$$OKDATA PRACQ
"RTN","SCAPMC24",57,0)
 ; -- loop through team positionS
"RTN","SCAPMC24",58,0)
 S (SCTP,SCTPA)=0
"RTN","SCAPMC24",59,0)
 F  S SCTP=$O(^SCTM(404.57,"C",SCTM,SCTP)) Q:'SCTP  Q:'$$TPVALBLD(SCTP,.SCDATES,.SCPOSA,.SCUSA,.SCPURPA,.SCROLEA,.SCLIST,.SCERR)
"RTN","SCAPMC24",60,0)
PRACQ Q $G(@SCERR@(0))<1
"RTN","SCAPMC24",61,0)
 ;
"RTN","SCAPMC24",62,0)
TPVALBLD(SCTP,SCDATES,SCPOSA,SCUSA,SCPURPA,SCROLEA,SCLIST,SCERR) ;
"RTN","SCAPMC24",63,0)
 ; this validates a team position & builds sclist array
"RTN","SCAPMC24",64,0)
 ; returns 1 if ok, 0 if error
"RTN","SCAPMC24",65,0)
 N SCTPDT,SCDDDD,SCTP0,SCU,SCR,SCTM
"RTN","SCAPMC24",66,0)
 M SCDDDD=@SCDATES
"RTN","SCAPMC24",67,0)
 S SCTP0=$G(^SCTM(404.57,SCTP,0))
"RTN","SCAPMC24",68,0)
 S SCTPDT=-9999999 F  S SCTPDT=$O(^SCTM(404.59,"AIDT",SCTP,1,SCTPDT)) Q:'SCTPDT  D
"RTN","SCAPMC24",69,0)
 .S SCACTHIS=$$ACTHIST^SCAPMCU2(404.59,SCTP,"SCDDDD",.SCERR,"SCTPTM")
"RTN","SCAPMC24",70,0)
 .Q:'SCACTHIS
"RTN","SCAPMC24",71,0)
 .S SCND=$G(^SCTM(404.57,SCTP,0))
"RTN","SCAPMC24",72,0)
 .S SCU=$P(SCND,U,13)
"RTN","SCAPMC24",73,0)
 .Q:'$$OKUSRCL^SCAPU1(.SCUSRA,.SCU)
"RTN","SCAPMC24",74,0)
 .S SCR=+$P(SCND,U,3)
"RTN","SCAPMC24",75,0)
 .Q:'$$OKARRAY^SCAPU1(.SCROLEA,.SCR)
"RTN","SCAPMC24",76,0)
 .D BLD(.SCLIST,$P(SCTP0,U,2),SCTP,SCACTHIS,SCR)
"RTN","SCAPMC24",77,0)
 .S SCDDDD("END")=$P(SCACTHIS,U,3)-.00001
"RTN","SCAPMC24",78,0)
QTVALBLD Q $G(@SCERR@(0))<1
"RTN","SCAPMC24",79,0)
 ;
"RTN","SCAPMC24",80,0)
BLD(SCLIST,SCTM,SCTP,SCACTHIS,SCR) ; -- build list of positions
"RTN","SCAPMC24",81,0)
 ;
"RTN","SCAPMC24",82,0)
 ; SCLIST  - output array
"RTN","SCAPMC24",83,0)
 ; SCTM  - pointer to 404.51
"RTN","SCAPMC24",84,0)
 ; SCTP    - pointer to 404.57
"RTN","SCAPMC24",85,0)
 ; SCACTHIS- per $$acthis^scapmcu2(file,ien)
"RTN","SCAPMC24",86,0)
 ; SCPTA   - ien of pt team assignment
"RTN","SCAPMC24",87,0)
 ; SCR     - role
"RTN","SCAPMC24",88,0)
 ; 
"RTN","SCAPMC24",89,0)
 ; this builds the array:
"RTN","SCAPMC24",90,0)
 ;   sclist(1->n)=SCTP^positionname^sctm^histien^effdt^inactdt^scr^rolename^scusr^usrname
"RTN","SCAPMC24",91,0)
 ;  
"RTN","SCAPMC24",92,0)
 ;    for each scpta zero node passed to it
"RTN","SCAPMC24",93,0)
 ;    AND a xref  sclist('SCTP',SCTM,scpt,histien,scn)=""
"RTN","SCAPMC24",94,0)
 N SCEFFDT,SCCNT,SCN,SCUSR
"RTN","SCAPMC24",95,0)
 S:'$G(SCTM) SCTM=$P($G(^SCTM(404.57,+$G(SCTP),0)),U,2)
"RTN","SCAPMC24",96,0)
 Q:$D(@SCLIST@("SCTP",SCTM,SCTP,$P(SCACTHIS,U,2)))
"RTN","SCAPMC24",97,0)
 S SCN=$G(@SCLIST@(0),0)+1
"RTN","SCAPMC24",98,0)
 S @SCLIST@(0)=SCN
"RTN","SCAPMC24",99,0)
 S SCUSR=+$P(^SCTM(404.57,SCTP,0),U,13)
"RTN","SCAPMC24",100,0)
 ;               1    ^              2                   ^  3    ^  4
"RTN","SCAPMC24",101,0)
 S @SCLIST@(SCN)=SCTP_U_$P($G(^SCTM(404.57,SCTP,0)),U,1)_U_SCTM_U_$P(SCACTHIS,U,2,4)_U_SCR_U_$P($G(^SD(403.46,SCR,0)),U,1)_U_SCUSR_U_$P($G(^USR(8930,SCUSR,0)),U,1)
"RTN","SCAPMC24",102,0)
 S @SCLIST@("SCTP",SCTM,SCTP,$P(SCACTHIS,U,2),SCN)=""
"RTN","SCAPMC24",103,0)
 Q
"RTN","SCAPMC24",104,0)
OKDATA() ;setup/check variables
"RTN","SCAPMC24",105,0)
 N SCOK
"RTN","SCAPMC24",106,0)
 S SCOK=1
"RTN","SCAPMC24",107,0)
 D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)
"RTN","SCAPMC24",108,0)
 IF '$D(^SCTM(404.51,+$G(SCTM),0)) D  S SCOK=0
"RTN","SCAPMC24",109,0)
 . S SCPARM("Team")=$G(SCTM,"Undefined")
"RTN","SCAPMC24",110,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC24",111,0)
 Q SCOK
"RTN","SCAPMC24",112,0)
 ;
"RTN","SCAPMC25")
0^16^B15692310
"RTN","SCAPMC25",1,0)
SCAPMC25 ;ALB/REW - Team API's:MSGDTH ; December 1, 1995
"RTN","SCAPMC25",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC25",3,0)
 ;;1.0
"RTN","SCAPMC25",4,0)
MSGPT(MSGTYPE,DFN,SCTEAMA,SCDATES,SCYESCL,SCLIST,SCERR) ; users getting death message
"RTN","SCAPMC25",5,0)
 ; Input:
"RTN","SCAPMC25",6,0)
 ;  MSGTYPE:
"RTN","SCAPMC25",7,0)
 ;      1 = Death Message
"RTN","SCAPMC25",8,0)
 ;      2 = Inpatient Message
"RTN","SCAPMC25",9,0)
 ;      3 = Team Message
"RTN","SCAPMC25",10,0)
 ;      4 = Consult Message
"RTN","SCAPMC25",11,0)
 ;
"RTN","SCAPMC25",12,0)
 ;   DFN - Pointer to Patient File #2
"RTN","SCAPMC25",13,0)
 ;  SCTEAMA -array of pointers to team file 404.51
"RTN","SCAPMC25",14,0)
 ;          if none are defined - returns all teams
"RTN","SCAPMC25",15,0)
 ;          if @scteama@('exclude') is defined - exclude listed teams
"RTN","SCAPMC25",16,0)
 ;  SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC25",17,0)
 ;                       [default: TODAY]
"RTN","SCAPMC25",18,0)
 ;         ("END")   = end date to search (inclusive)
"RTN","SCAPMC25",19,0)
 ;                       [default: TODAY]
"RTN","SCAPMC25",20,0)
 ;         ("INCL")  = 1: only use pracitioners who were on
"RTN","SCAPMC25",21,0)
 ;                       team for entire date range
"RTN","SCAPMC25",22,0)
 ;                     0: anytime in date range
"RTN","SCAPMC25",23,0)
 ;                      [default: 1] 
"RTN","SCAPMC25",24,0)
 ; SCYESCL -boolean[1-yes(default)/0-no] Include pts asc. via enrollment?
"RTN","SCAPMC25",25,0)
 ;   SCLIST - Name of output array
"RTN","SCAPMC25",26,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC25",27,0)
 ;          [ex. ^TMP("ORXX",$J
"RTN","SCAPMC25",28,0)
 ; Output:
"RTN","SCAPMC25",29,0)
 ;  SCLIST() = array of practitioners (users) - pointers to file #200
"RTN","SCAPMC25",30,0)
 ;             Format:
"RTN","SCAPMC25",31,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC25",32,0)
 ;               Piece     Description
"RTN","SCAPMC25",33,0)
 ;                 1       IEN of NEW PERSON file entry (#200)
"RTN","SCAPMC25",34,0)
 ;                 2       .01 of file #200
"RTN","SCAPMC25",35,0)
 ;  SCERR()  = Array of DIALOG file messages(errors) .
"RTN","SCAPMC25",36,0)
 ;  @SCERR(0)= Number of error(s), UNDEFINED if no errors
"RTN","SCAPMC25",37,0)
 ;             Foramt:
"RTN","SCAPMC25",38,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC25",39,0)
 ;               Piece     Description
"RTN","SCAPMC25",40,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC25",41,0)
 ;   Returned: 1 if ok, 0 if error
"RTN","SCAPMC25",42,0)
 ;
"RTN","SCAPMC25",43,0)
ST N SCOK,SCTM,SCTP,SCX,SCY,NODE,SCZ,SCTPND
"RTN","SCAPMC25",44,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCP,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCAPMC25",45,0)
 S SCOK=1
"RTN","SCAPMC25",46,0)
 ; -- initialize control variables
"RTN","SCAPMC25",47,0)
 G:'$$OKDATA MSGQ
"RTN","SCAPMC25",48,0)
 ;given patient get list of their teams
"RTN","SCAPMC25",49,0)
 S SCOK=$$TMPT^SCAPMC(DFN,SCDATES,,"^TMP(""SCMSG1"",$J)",.SCERR)
"RTN","SCAPMC25",50,0)
 G:SCOK<1 MSGQ
"RTN","SCAPMC25",51,0)
 ;validate teams
"RTN","SCAPMC25",52,0)
 F SCX=1:1 S NODE=$G(^TMP("SCMSG1",$J,SCX)) Q:'NODE  S SCTM=+NODE D:$$OKARRAY^SCAPU1(.SCTEAMA,SCTM)  Q:SCOK<1
"RTN","SCAPMC25",53,0)
 .;given teams get list of their positions
"RTN","SCAPMC25",54,0)
 .S SCZ=$$TPTM^SCAPMC(SCTM,SCDATES,,,"^TMP(""SCMSG2"",$J)",.SCERR)
"RTN","SCAPMC25",55,0)
 .Q:'SCZ
"RTN","SCAPMC25",56,0)
 .IF SCZ<0 S SCOK=-1 Q
"RTN","SCAPMC25",57,0)
 .;given list of valid positions get list of practitioners
"RTN","SCAPMC25",58,0)
 ; should position get message?
"RTN","SCAPMC25",59,0)
 F SCY=1:1 S SCTPND=$G(^TMP("SCMSG2",$J,SCY)) Q:'SCTPND  S SCTP=$P(SCTPND,U,1) D:$$OKPOS(MSGTYPE,SCTP,DFN,SCYESCL,SCDATES,.SCERR)
"RTN","SCAPMC25",60,0)
 .;given list of valid positions get current practitioners
"RTN","SCAPMC25",61,0)
 .S SCOK=$$PRTP^SCAPMC(SCTP,SCDATES,.SCLIST,.SCERR)
"RTN","SCAPMC25",62,0)
MSGQ F SCZ="SCMSG1","SCMSG2","SCMSG3" K ^TMP(SCZ)
"RTN","SCAPMC25",63,0)
PRACQ Q $G(@SCERR@(0))<1
"RTN","SCAPMC25",64,0)
 ;
"RTN","SCAPMC25",65,0)
OKPOS(MSGTYPE,SCTP,DFN,SCYESCL,SCDATES,SCERR) ;check if message should go out to position for given pt
"RTN","SCAPMC25",66,0)
 ;needs pre-validated input
"RTN","SCAPMC25",67,0)
 ;return 1=ok,0=not ok
"RTN","SCAPMC25",68,0)
 N GETMESS,SCOK,SCX,SCTM
"RTN","SCAPMC25",69,0)
 K ^TMP("SCMSG3",$J)
"RTN","SCAPMC25",70,0)
 S SCTM=$P($G(^SCTM(404.57,SCTP,0)),U,2)
"RTN","SCAPMC25",71,0)
 S GETMESS=$P($G(^SCTM(404.57,SCTP,2)),U,MSGTYPE)
"RTN","SCAPMC25",72,0)
 S:"T"[GETMESS SCOK=1 ;if null give messages
"RTN","SCAPMC25",73,0)
 S:GETMESS="N" SCOK=0
"RTN","SCAPMC25",74,0)
 IF GETMESS="P" D
"RTN","SCAPMC25",75,0)
 .;check if pt is assigned to position
"RTN","SCAPMC25",76,0)
 .S SCX=$$TPPT^SCAPMC(DFN,SCDATES,,,,,SCYESCL,"^TMP(""SCMSG3"",$J)",.SCERR)
"RTN","SCAPMC25",77,0)
 .S SCOK=$D(^TMP("SCMSG3",$J,"SCTP",SCTM,SCTP))
"RTN","SCAPMC25",78,0)
 .S:SCX<0 SCOK="-1^Error in position-patient call"
"RTN","SCAPMC25",79,0)
 K ^TMP("SCMSG3",$J)
"RTN","SCAPMC25",80,0)
 Q SCOK
"RTN","SCAPMC25",81,0)
 ;
"RTN","SCAPMC25",82,0)
OKDATA() ;setup/check variables
"RTN","SCAPMC25",83,0)
 N SCOK
"RTN","SCAPMC25",84,0)
 S SCOK=1
"RTN","SCAPMC25",85,0)
 D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)
"RTN","SCAPMC25",86,0)
 S:'$L($G(SCYESCL)) SCYESCL=1
"RTN","SCAPMC25",87,0)
 IF '$D(^DPT(+$G(DFN),0)) D  S SCOK=0
"RTN","SCAPMC25",88,0)
 . S SCPARM("PATIENT")=$G(PATIENT,"Undefined")
"RTN","SCAPMC25",89,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC25",90,0)
 ;
"RTN","SCAPMC25",91,0)
 ; -- is it a valid DFN passed (Error # 20001 in DIALOG file)
"RTN","SCAPMC25",92,0)
 IF '$D(^DPT(+DFN,0)) D   S SCOK=0
"RTN","SCAPMC25",93,0)
 . S SCPARM("PATIENT")=DFN
"RTN","SCAPMC25",94,0)
 . D ERR^SCAPMCU1(SCESEQ,20001,.SCPARM,"",.SCERR)
"RTN","SCAPMC25",95,0)
 Q SCOK
"RTN","SCAPMC25",96,0)
 ;
"RTN","SCAPMC25",97,0)
PCMMXMY(MSGTYPE,DFN,SCTEAMA,SCDATES,SCYESCL) ;create xmy array for the appropriate type of pcmm mess
"RTN","SCAPMC25",98,0)
 ; return 1 if success,0 if error or no users receiving message
"RTN","SCAPMC25",99,0)
 N SCOK,SCGROUP,SC200,SCGROUP
"RTN","SCAPMC25",100,0)
 IF '$G(MSGTYPE) S SCOK=0 G QTXMY
"RTN","SCAPMC25",101,0)
 S SCOK=1
"RTN","SCAPMC25",102,0)
 S SCOK=$$MSGPT(MSGTYPE,.DFN,.SCTEAMA,.SCDATES,.SCYESCL,"^TMP(""SC PCMM MAIL"",$J)")
"RTN","SCAPMC25",103,0)
 S SC200=0
"RTN","SCAPMC25",104,0)
 F  S SC200=$O(^TMP("SC PCMM MAIL",$J,"SCPR",SC200)) Q:'SC200  S XMY(SC200)=""
"RTN","SCAPMC25",105,0)
 IF $D(XMY) D
"RTN","SCAPMC25",106,0)
 .S XMY(.5)=""
"RTN","SCAPMC25",107,0)
 ELSE  D
"RTN","SCAPMC25",108,0)
 .S SCOK=0
"RTN","SCAPMC25",109,0)
 .S XMY(.5)=""
"RTN","SCAPMC25",110,0)
 K ^TMP("SC PCMM MAIL",$J)
"RTN","SCAPMC25",111,0)
QTXMY Q SCOK
"RTN","SCAPMC25",112,0)
 ;
"RTN","SCAPMC25",113,0)
MSGTEXT(MSGTYPE) ;
"RTN","SCAPMC25",114,0)
 Q $S(MSGTYPE=1:"DEATH",(MSGTYPE=2):"INPATIENT",(MSGTYPE=3):"TEAM",(MSGTYPE=4):"CONSULT",1:"ERROR")
"RTN","SCAPMC26")
0^17^B9995996
"RTN","SCAPMC26",1,0)
SCAPMC26 ;ALB/REW - API: Patients in a Clinic ; December 1, 1995
"RTN","SCAPMC26",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC26",3,0)
 ;;1.0
"RTN","SCAPMC26",4,0)
 ;
"RTN","SCAPMC26",5,0)
PTCL(SC44,SCDATES,SCLIST,SCERR) ; patients in a clinic
"RTN","SCAPMC26",6,0)
 ; Input:
"RTN","SCAPMC26",7,0)
 ;   SC44 - Pointer to Hospital Location File #44
"RTN","SCAPMC26",8,0)
 ;   SCDATES- Date array (begin, end, incl)
"RTN","SCAPMC26",9,0)
 ;   SCLIST - Name of output array
"RTN","SCAPMC26",10,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC26",11,0)
 ;          [ex. ^TMP("ORXX",$J
"RTN","SCAPMC26",12,0)
 ; Output:
"RTN","SCAPMC26",13,0)
 ;  SCLIST() = array of practitioners (users) - pointers to file #200
"RTN","SCAPMC26",14,0)
 ;             Format:
"RTN","SCAPMC26",15,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC26",16,0)
 ;               Piece     Description
"RTN","SCAPMC26",17,0)
 ;                 1       DFN - Ptr to Patient File (#2)
"RTN","SCAPMC26",18,0)
 ;                 2       Patient Name (External)
"RTN","SCAPMC26",19,0)
 ;                 3       null
"RTN","SCAPMC26",20,0)
 ;                 4       Activation Date
"RTN","SCAPMC26",21,0)
 ;                 5       Discharge Date
"RTN","SCAPMC26",22,0)
 ;                 6       '1' - for merge reasons with other pt lists
"RTN","SCAPMC26",23,0)
 ;                 7       sc44
"RTN","SCAPMC26",24,0)
 ;
"RTN","SCAPMC26",25,0)
 ;  SCERR()  = Array of DIALOG file messages(errors) .
"RTN","SCAPMC26",26,0)
 ;  @SCERR(0)= Number of error(s), UNDEFINED if no errors
"RTN","SCAPMC26",27,0)
 ;             Foramt:
"RTN","SCAPMC26",28,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC26",29,0)
 ;               Piece     Description
"RTN","SCAPMC26",30,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC26",31,0)
 ;   Returned: 1 if ok, 0 if error
"RTN","SCAPMC26",32,0)
 ;
"RTN","SCAPMC26",33,0)
ST N DFN,SCOK,SCCL,SCCLDT
"RTN","SCAPMC26",34,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCAPMC26",35,0)
 ; -- initialize control variables
"RTN","SCAPMC26",36,0)
 S SCOK=1
"RTN","SCAPMC26",37,0)
 G:'$$OKDATA CLTPQ
"RTN","SCAPMC26",38,0)
 ;S DFN=0 F  S DFN=$O(^DPT(DFN)) Q:'DFN  IF $D(^DPT(DFN,"DE","B",SC44)) S SCCL=$O(^DPT(DFN,"DE","B",SC44,0)) D
"RTN","SCAPMC26",39,0)
 S SCCLDT=0
"RTN","SCAPMC26",40,0)
 F  S SCCLDT=$O(^DPT("AEB1",SC44,SCCLDT)) Q:'SCCLDT  D
"RTN","SCAPMC26",41,0)
 .S DFN=0 F  S DFN=$O(^DPT("AEB1",SC44,SCCLDT,DFN)) Q:'DFN  D
"RTN","SCAPMC26",42,0)
 ..Q:$D(^TMP("SCMC",$J,"EXCLUDE PT","SCPTA",DFN))
"RTN","SCAPMC26",43,0)
 ..Q:$D(@SCLIST@("SC PTCL",DFN))
"RTN","SCAPMC26",44,0)
 ..S SCCL=0
"RTN","SCAPMC26",45,0)
 ..F  S SCCL=$O(^DPT(DFN,"DE","B",SC44,SCCL)) Q:'SCCL  D
"RTN","SCAPMC26",46,0)
 ...S SCX=0 F  S SCX=$O(^DPT(DFN,"DE",SCCL,1,SCX)) Q:'SCX  S SCNODE=^(SCX,0) D
"RTN","SCAPMC26",47,0)
 ....IF $$DTCHK^SCAPU1(SCBEGIN,SCEND,SCINCL,$P(SCNODE,U,1),$P(SCNODE,U,3)) D
"RTN","SCAPMC26",48,0)
 .....Q:$D(@SCLIST@("SC PTCL",DFN))
"RTN","SCAPMC26",49,0)
 .....S SCN=$G(@SCLIST@(0),0)+1
"RTN","SCAPMC26",50,0)
 .....S @SCLIST@(0)=SCN
"RTN","SCAPMC26",51,0)
 .....S @SCLIST@(SCN)=DFN_U_$P($G(^DPT(DFN,0)),U,1)_U_U_$P(SCNODE,U,1)_U_$P(SCNODE,U,3)_U_"1"_U_SC44_U_$P($G(^DPT(DFN,.36)),U,3)
"RTN","SCAPMC26",52,0)
 ....S @SCLIST@("SC PTCL",DFN,SCX,SCN)=""
"RTN","SCAPMC26",53,0)
CLTPQ Q $G(@SCERR@(0))<1
"RTN","SCAPMC26",54,0)
 ;
"RTN","SCAPMC26",55,0)
OKDATA() ;check/setup variables - return 1 if ok; 0 if error
"RTN","SCAPMC26",56,0)
 N SCOK
"RTN","SCAPMC26",57,0)
 S SCOK=1
"RTN","SCAPMC26",58,0)
 S (SCN,SCESEQ,SCLSEQ)=0
"RTN","SCAPMC26",59,0)
 D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)
"RTN","SCAPMC26",60,0)
 IF '$D(^SC(+$G(SC44),0)) D  S SCOK=0
"RTN","SCAPMC26",61,0)
 . S SCPARM("CLINIC")=$G(SC44,"Undefined")
"RTN","SCAPMC26",62,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC26",63,0)
 IF '$L($G(SCLIST)) D  S SCOK=0
"RTN","SCAPMC26",64,0)
 . S SCPARM("OUTPUT ARRAY")=$G(SCLIST,"Undefined")
"RTN","SCAPMC26",65,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC26",66,0)
 Q SCOK
"RTN","SCAPMC26",67,0)
 ;
"RTN","SCAPMC26",68,0)
PTCLBR(SC44,SCTM,SCDATES) ;for PCMM use only!! returns list to ^tmp($j,'scclpt'
"RTN","SCAPMC26",69,0)
 ;   SC44 - Clinic we're adding to team
"RTN","SCAPMC26",70,0)
 ;   SCTM - EXCLUDES Patients assigned to SCTM Team during time period
"RTN","SCAPMC26",71,0)
 ;   SCDATES - Standard Date array
"RTN","SCAPMC26",72,0)
 ;   Returns: $j if successful & at least one entry, 0 if error or none
"RTN","SCAPMC26",73,0)
 ;  Warning: Kills ^tmp($j,'scclpt') before it runs & ^tmp('scmc',$j,'exclude pt') after it runs
"RTN","SCAPMC26",74,0)
 N SCCLERR,SCX,SCXX
"RTN","SCAPMC26",75,0)
 K ^TMP($J,"SCCLPT")
"RTN","SCAPMC26",76,0)
 S SCXX=$$PTTM^SCAPMC(SCTM,.SCDATES,"^TMP(""SCMC"",$J,""EXCLUDE PT"")","SCCLERR")
"RTN","SCAPMC26",77,0)
 S SCX=$$PTCL(.SC44,.SCDATES,"^TMP($J,""SCCLPT"")","SCCLERR")
"RTN","SCAPMC26",78,0)
 K ^TMP("SCMC",$J,"EXCLUDE PT")
"RTN","SCAPMC26",79,0)
 Q $S('SCX:0,('$G(^TMP($J,"SCCLPT",0))):0,1:$J)
"RTN","SCAPMC26",80,0)
 ;
"RTN","SCAPMC26",81,0)
PTCLBRTP(SC44,SCTP,SCDATES) ;for PCMM use only!! returns list to ^tmp($j,'scclpt'
"RTN","SCAPMC26",82,0)
 ;   SC44 - Clinic we're adding to team
"RTN","SCAPMC26",83,0)
 ;   SCTP - EXCLUDES Patients assigned to SCTP Position during scdates
"RTN","SCAPMC26",84,0)
 ;   SCDATES - Standard Date array
"RTN","SCAPMC26",85,0)
 ;   Returns: $j if successful & at least one entry, 0 if error or none
"RTN","SCAPMC26",86,0)
 ;  Warning: Kills ^tmp($j,'scclpt') before it runs
"RTN","SCAPMC26",87,0)
 N SCCLERR,SCX,SCXX
"RTN","SCAPMC26",88,0)
 K ^TMP($J,"SCCLPT")
"RTN","SCAPMC26",89,0)
 S SCXX=$$PTTP^SCAPMC(SCTP,.SCDATES,"^TMP(""SCMC"",$J,""EXCLUDE PT"")","SCCLERR")
"RTN","SCAPMC26",90,0)
 S SCX=$$PTCL(.SC44,.SCDATES,"^TMP($J,""SCCLPT"")","SCCLERR")
"RTN","SCAPMC26",91,0)
 K ^TMP("SCMC",$J,"EXCLUDE PT")
"RTN","SCAPMC26",92,0)
 Q $S('SCX:0,('$G(^TMP($J,"SCCLPT",0))):0,1:$J)
"RTN","SCAPMC27")
0^137^B6354061
"RTN","SCAPMC27",1,0)
SCAPMC27 ;ALB/REW - PTST Patients with a Stop Code ; JUN 30, 1995
"RTN","SCAPMC27",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC27",3,0)
 ;;1.0
"RTN","SCAPMC27",4,0)
PTST(SCST,SCDATES,SCMAXCNT,SCLIST,SCERR,MORE) ; -- list of patients with a IEN of 40.7
"RTN","SCAPMC27",5,0)
 ; USE $$PTSTEXT(below) if you have stop code (e.g. 301)
"RTN","SCAPMC27",6,0)
 ; input:
"RTN","SCAPMC27",7,0)
 ;  SCST = stop code
"RTN","SCAPMC27",8,0)
 ;  SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC27",9,0)
 ;                      [default: TODAY]
"RTN","SCAPMC27",10,0)
 ;        ("END")   = end date to search (inclusive)
"RTN","SCAPMC27",11,0)
 ;                      [default: TODAY]
"RTN","SCAPMC27",12,0)
 ;        ("INCL")  = 1: only use patients who were assigned to
"RTN","SCAPMC27",13,0)
 ;                       team for entire date range
"RTN","SCAPMC27",14,0)
 ;                    0: anytime in date range
"RTN","SCAPMC27",15,0)
 ;                      [default: 1] 
"RTN","SCAPMC27",16,0)
 ;  SCMAXCNT        = Maximum Number to Return - Default=99
"RTN","SCAPMC27",17,0)
 ;  SCLIST -array name to store list
"RTN","SCAPMC27",18,0)
 ;          [ex. ^TMP("SCPT",$J)]
"RTN","SCAPMC27",19,0)
 ;        
"RTN","SCAPMC27",20,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC27",21,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC27",22,0)
 ;  MORE  - For continuing lists (see scapmc28)
"RTN","SCAPMC27",23,0)
 ;Note: Don't Return DFNs where $D(^TMP("SCMC",$J,"EXCLUDE PT","SCPTA",+DFN)) is true
"RTN","SCAPMC27",24,0)
 ; Output:
"RTN","SCAPMC27",25,0)
 ;  SCLIST() = array of patients
"RTN","SCAPMC27",26,0)
 ;             Format:
"RTN","SCAPMC27",27,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC27",28,0)
 ;               Piece     Description
"RTN","SCAPMC27",29,0)
 ;                 1       IEN of PATIENT file entry
"RTN","SCAPMC27",30,0)
 ;                 2       Name of patient
"RTN","SCAPMC27",31,0)
 ;                 3       ien to 40.7 - Not Stop Code!! stp=$$intstp
"RTN","SCAPMC27",32,0)
 ;                 4       AMIS reporting stop code
"RTN","SCAPMC27",33,0)
 ;
"RTN","SCAPMC27",34,0)
 ; SCEFFDT - negative of effective date
"RTN","SCAPMC27",35,0)
 ; SCN     - current subscript (counter) 1->n
"RTN","SCAPMC27",36,0)
 ; SCPTA0   is 0 node of Patient Team Assignment file 1st piece is DFN
"RTN","SCAPMC27",37,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC27",38,0)
 ;  @SCERR@(0)=number of errors, undefined if none
"RTN","SCAPMC27",39,0)
 ;             Foramt:
"RTN","SCAPMC27",40,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC27",41,0)
 ;               Piece     Description
"RTN","SCAPMC27",42,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC27",43,0)
 ;
"RTN","SCAPMC27",44,0)
 ;   Returned: 1 if ok, 0 if error^More?
"RTN","SCAPMC27",45,0)
 ;
"RTN","SCAPMC27",46,0)
 ;
"RTN","SCAPMC27",47,0)
ST N SCDT,SCEND,SCCL,SCNODE,SCX
"RTN","SCAPMC27",48,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCP,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCAPMC27",49,0)
 S SCX=0
"RTN","SCAPMC27",50,0)
 G:'$$OKDATA STQ ;check/setup variables
"RTN","SCAPMC27",51,0)
 ; -- loop file#44
"RTN","SCAPMC27",52,0)
LP S SCDT=SCBEGIN
"RTN","SCAPMC27",53,0)
 S:'$P(SCEND,".",2) SCEND=SCEND+1 ;ending is end of day
"RTN","SCAPMC27",54,0)
 IF $G(MORE) D
"RTN","SCAPMC27",55,0)
 .S SCSTART=+$P($G(@SCLIST@(0)),U,2)
"RTN","SCAPMC27",56,0)
 .S SCBEGIN=+$P($G(@SCLIST@(0)),U,3)
"RTN","SCAPMC27",57,0)
 .S SCCL=+$P($G(@SCLIST@(0)),U,4)
"RTN","SCAPMC27",58,0)
 .K @SCLIST
"RTN","SCAPMC27",59,0)
 ELSE  D
"RTN","SCAPMC27",60,0)
 .S SCSTART=0
"RTN","SCAPMC27",61,0)
 .S SCCL=0
"RTN","SCAPMC27",62,0)
 ; go thru clinics with stop code=SCST
"RTN","SCAPMC27",63,0)
 F  S:'$G(MORE) SCCL=$O(^SC(SCCL)) Q:'SCCL  S:$P($G(^SC(SCCL,0)),U,7)=SCST SCX=$$PTAPX^SCAPMC28(.SCCL,.SCBEGIN,.SCEND,.SCMAXCNT,.SCLIST,.SCERR,.SCSTART) S MORE=0
"RTN","SCAPMC27",64,0)
STQ Q SCX
"RTN","SCAPMC27",65,0)
 ;
"RTN","SCAPMC27",66,0)
OKDATA() ;check/setup variables
"RTN","SCAPMC27",67,0)
 N SCOK
"RTN","SCAPMC27",68,0)
 S SCOK=1
"RTN","SCAPMC27",69,0)
 S SCMAXCNT=$G(SCMAXCNT,99)
"RTN","SCAPMC27",70,0)
 D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)
"RTN","SCAPMC27",71,0)
 IF '$D(^DIC(40.7,+$G(SCST),0)) D  S SCOK=0
"RTN","SCAPMC27",72,0)
 . S SCPARM("STOP")=$G(SCST,"Undefined")
"RTN","SCAPMC27",73,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC27",74,0)
 ; -- is it a valid TEAM ien passed (Error # 4045101 in DIALOG file)
"RTN","SCAPMC27",75,0)
 Q SCOK
"RTN","SCAPMC27",76,0)
 ;
"RTN","SCAPMC27",77,0)
INTST(STOP) ;given stop code return ient
"RTN","SCAPMC27",78,0)
 Q +$O(^DIC(40.7,"C",+$G(STOP),0))
"RTN","SCAPMC27",79,0)
 ;
"RTN","SCAPMC27",80,0)
PTSTEXT(SCSTOP,SCDATES,SCMAXCNT,SCLIST,SCERR) ; -- list of patients with AMIS REPORTING STOP CODE
"RTN","SCAPMC27",81,0)
 ;  For variables see: PTST (above)
"RTN","SCAPMC27",82,0)
 ;   Returned: 1 if ok, 0 if error^More?
"RTN","SCAPMC27",83,0)
 N SCST
"RTN","SCAPMC27",84,0)
 S SCST=$$INTST(.SCSTOP)
"RTN","SCAPMC27",85,0)
 Q $$PTST(.SCST,.SCDATES,.SCMAXCNT,.SCLIST,.SCERR,.MORE)
"RTN","SCAPMC28")
0^138^B8308419
"RTN","SCAPMC28",1,0)
SCAPMC28 ;ALB/REW - Patients with an Appointment ; Apr 3,1996
"RTN","SCAPMC28",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC28",3,0)
 ;;1.0
"RTN","SCAPMC28",4,0)
PTAP(SCCL,SCDATES,SCMAXCNT,SCLIST,SCERR,MORE) ; -- list of patients with an appointment in a given clinic
"RTN","SCAPMC28",5,0)
 ; 
"RTN","SCAPMC28",6,0)
 ; input:
"RTN","SCAPMC28",7,0)
 ;  SCCL = Pointer to File #44
"RTN","SCAPMC28",8,0)
 ;  SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC28",9,0)
 ;                      [default: TODAY]
"RTN","SCAPMC28",10,0)
 ;        ("END")   = end date to search (inclusive)
"RTN","SCAPMC28",11,0)
 ;                      [default: TODAY]
"RTN","SCAPMC28",12,0)
 ;        ("INCL")  = 1: only use patients who were assigned to
"RTN","SCAPMC28",13,0)
 ;                       team for entire date range
"RTN","SCAPMC28",14,0)
 ;                    0: anytime in date range
"RTN","SCAPMC28",15,0)
 ;                      [default: 1] 
"RTN","SCAPMC28",16,0)
 ;  SCMAXCNT        - Maximum # of patients to return, default=99
"RTN","SCAPMC28",17,0)
 ;  SCLIST -array name to store list
"RTN","SCAPMC28",18,0)
 ;          [ex. ^TMP("SCPT",$J)]
"RTN","SCAPMC28",19,0)
 ;        
"RTN","SCAPMC28",20,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC28",21,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC28",22,0)
 ;  MORE - This is a flag that says that this list exists and has been
"RTN","SCAPMC28",23,0)
 ;         aborted because it reached the maxcount.  If this =1 it means
"RTN","SCAPMC28",24,0)
 ;         'kill the old list & start where you finished'
"RTN","SCAPMC28",25,0)
 ;  Note: Don't Return DFNs where $D(^TMP("SCMC",$J,"EXCLUDE PT","SCPTA",+DFN)) is true
"RTN","SCAPMC28",26,0)
 ; Output:
"RTN","SCAPMC28",27,0)
 ;  SCLIST() = array of patients
"RTN","SCAPMC28",28,0)
 ;             Format:
"RTN","SCAPMC28",29,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC28",30,0)
 ;               Piece     Description
"RTN","SCAPMC28",31,0)
 ;                 1       IEN of PATIENT file entry
"RTN","SCAPMC28",32,0)
 ;                 2       Name of patient
"RTN","SCAPMC28",33,0)
 ;                 3       ien to 40.7 - Not Stop Code!! stp=$$intstp
"RTN","SCAPMC28",34,0)
 ;                 4       AMIS reporting stop code
"RTN","SCAPMC28",35,0)
 ;                 5       Patient's Long ID (SSN)
"RTN","SCAPMC28",36,0)
 ;
"RTN","SCAPMC28",37,0)
 ; SCEFFDT - negative of effective date
"RTN","SCAPMC28",38,0)
 ; SCN     - current subscript (counter) 1->n
"RTN","SCAPMC28",39,0)
 ; SCPTA0   is 0 node of Patient Team Assignment file 1st piece is DFN
"RTN","SCAPMC28",40,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC28",41,0)
 ;  @SCERR@(0)=number of errors, undefined if none
"RTN","SCAPMC28",42,0)
 ;             Foramt:
"RTN","SCAPMC28",43,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC28",44,0)
 ;               Piece     Description
"RTN","SCAPMC28",45,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC28",46,0)
 ;
"RTN","SCAPMC28",47,0)
 ;   Returned: 1 if ok, 0 if error^More?
"RTN","SCAPMC28",48,0)
 ;
"RTN","SCAPMC28",49,0)
 ;
"RTN","SCAPMC28",50,0)
ST N SCEND,SCVSDT,SCSTART
"RTN","SCAPMC28",51,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCP,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCAPMC28",52,0)
 G:'$$OKDATA APQ ;check/setup variables
"RTN","SCAPMC28",53,0)
 ; -- loop through visit file
"RTN","SCAPMC28",54,0)
LP S SCDT=SCBEGIN
"RTN","SCAPMC28",55,0)
 S:'$P(SCEND,".",2) SCEND=SCEND+1 ;ending is end of day
"RTN","SCAPMC28",56,0)
 IF $G(MORE) D
"RTN","SCAPMC28",57,0)
 .S SCSTART=$P($G(@SCLIST@(0)),U,2)
"RTN","SCAPMC28",58,0)
 .S SCBEGIN=$P($G(@SCLIST@(0)),U,3)
"RTN","SCAPMC28",59,0)
 .K @SCLIST
"RTN","SCAPMC28",60,0)
APQ Q $$PTAPX(.SCCL,.SCBEGIN,.SCEND,.SCMAXCNT,.SCLIST,.SCERR,.SCSTART)
"RTN","SCAPMC28",61,0)
 ;
"RTN","SCAPMC28",62,0)
PTAPX(SCCL,SCBEGIN,SCEND,MAXCNT,SCLIST,SCERR,SCSTART) ;return appointments in dt range
"RTN","SCAPMC28",63,0)
 ; Input: (As above plus:)
"RTN","SCAPMC28",64,0)
 ;    SCSTART - Continue with list at this point
"RTN","SCAPMC28",65,0)
 ; output: SCN - COUNT OF PTS
"RTN","SCAPMC28",66,0)
 ; returns:      dfn^ptname^clinic^apptdt^long id
"RTN","SCAPMC28",67,0)
 N SCDT,SCD2,DFN
"RTN","SCAPMC28",68,0)
 S SCDT=SCBEGIN
"RTN","SCAPMC28",69,0)
 F  S SCDT=$O(^SC(SCCL,"S",SCDT)) Q:'SCDT!(SCDT>SCEND)!(SCN'<SCMAXCNT)  D
"RTN","SCAPMC28",70,0)
 .S SCD2=+$G(SCSTART)
"RTN","SCAPMC28",71,0)
 .S SCSTART=0
"RTN","SCAPMC28",72,0)
 .F  S SCD2=$O(^SC(SCCL,"S",SCDT,1,SCD2)) Q:'SCD2!(SCN'<SCMAXCNT)  D
"RTN","SCAPMC28",73,0)
 ..S DFN=+$G(^SC(SCCL,"S",SCDT,1,SCD2,0))
"RTN","SCAPMC28",74,0)
 ..Q:$D(@SCLIST@("SCPTAP",+DFN))
"RTN","SCAPMC28",75,0)
 ..Q:$D(^TMP("SCMC",$J,"EXCLUDE PT","SCPTA",+DFN))
"RTN","SCAPMC28",76,0)
 ..S SCN=$G(@SCLIST@(0))+1
"RTN","SCAPMC28",77,0)
 ..S @SCLIST@(0)=SCN
"RTN","SCAPMC28",78,0)
 ..S @SCLIST@(SCN)=DFN_U_$P($G(^DPT(+DFN,0)),U,1)_U_SCCL_U_SCDT_U_$P($G(^DPT(+DFN,.36)),U,3)
"RTN","SCAPMC28",79,0)
 ..S @SCLIST@("SCPTAP",+DFN,+SCN)=""
"RTN","SCAPMC28",80,0)
 S:(SCN'<SCMAXCNT) @SCLIST@(0)=SCN_U_+$G(SCD2)_U_+$G(SCDT)_U_+$G(SCCL)
"RTN","SCAPMC28",81,0)
 Q ($G(@SCERR@(0))<1)_U_(SCN'<SCMAXCNT)
"RTN","SCAPMC28",82,0)
 ;
"RTN","SCAPMC28",83,0)
OKDATA() ;check/setup variables
"RTN","SCAPMC28",84,0)
 N SCOK
"RTN","SCAPMC28",85,0)
 S SCOK=1
"RTN","SCAPMC28",86,0)
 S SCMAXCNT=$G(SCMAXCNT,99)
"RTN","SCAPMC28",87,0)
 D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)
"RTN","SCAPMC28",88,0)
 IF '$D(^SC(+$G(SCCL),0)) D  S SCOK=0
"RTN","SCAPMC28",89,0)
 . S SCPARM("CLINIC")=$G(SCCL,"Undefined")
"RTN","SCAPMC28",90,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC28",91,0)
 ; -- is it a valid TEAM ien passed (Error # 4045101 in DIALOG file)
"RTN","SCAPMC28",92,0)
 Q SCOK
"RTN","SCAPMC29")
0^18^B8058157
"RTN","SCAPMC29",1,0)
SCAPMC29 ;ALB/REW - TEAM APIs:CLPT  ; 30 Jun 95
"RTN","SCAPMC29",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC29",3,0)
 ;;1.0
"RTN","SCAPMC29",4,0)
CLPT(DFN,SCDATES,SCTEAMA,SCLIST,SCERR) ;clinics for patient
"RTN","SCAPMC29",5,0)
 ; input:
"RTN","SCAPMC29",6,0)
 ;  DFN = ien of PATIENT <FILE#2> [required]
"RTN","SCAPMC29",7,0)
 ;  SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC29",8,0)
 ;                       [default: TODAY]
"RTN","SCAPMC29",9,0)
 ;         ("END")   = end date to search (inclusive)
"RTN","SCAPMC29",10,0)
 ;                       [default: TODAY]
"RTN","SCAPMC29",11,0)
 ;         ("INCL")  = 1: only use pracitioners who were on
"RTN","SCAPMC29",12,0)
 ;                       team for entire date range
"RTN","SCAPMC29",13,0)
 ;                     0: anytime in date range
"RTN","SCAPMC29",14,0)
 ;                      [default: 1] 
"RTN","SCAPMC29",15,0)
 ;  SCTEAMA= array of teams to include reverse with scposa('exclude')
"RTN","SCAPMC29",16,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC29",17,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC29",18,0)
 ;
"RTN","SCAPMC29",19,0)
 ; Output:
"RTN","SCAPMC29",20,0)
 ;  SCLIST() = array of clinics
"RTN","SCAPMC29",21,0)
 ;             Format:
"RTN","SCAPMC29",22,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC29",23,0)
 ;               Piece     Description
"RTN","SCAPMC29",24,0)
 ;                 1       IEN of HOSPITAL LOCATION file entry (#44)
"RTN","SCAPMC29",25,0)
 ;                 2       Name of CLINIC
"RTN","SCAPMC29",26,0)
 ;                 3       ENROLLMENT DATE
"RTN","SCAPMC29",27,0)
 ;                 4       DISCHARGE DATE
"RTN","SCAPMC29",28,0)
 ;                 5       OPT OR AC
"RTN","SCAPMC29",29,0)
 ;                 6       REVIEW DATE
"RTN","SCAPMC29",30,0)
 ;
"RTN","SCAPMC29",31,0)
 ;  SCERR()  = Array of DIALOG file messages(errors) .
"RTN","SCAPMC29",32,0)
 ;  @SCERR(0)= Number of error(s), UNDEFINED if no errors
"RTN","SCAPMC29",33,0)
 ;             Foramt:
"RTN","SCAPMC29",34,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC29",35,0)
 ;               Piece     Description
"RTN","SCAPMC29",36,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC29",37,0)
 ;   Returned: 1 if ok, 0 if error
"RTN","SCAPMC29",38,0)
 ;
"RTN","SCAPMC29",39,0)
 ; -- initialize control variables
"RTN","SCAPMC29",40,0)
 ;
"RTN","SCAPMC29",41,0)
ST N SCX,SCS,SC44,SCACOPT,SCTM,SCPOSA,SCTP
"RTN","SCAPMC29",42,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCP,SCBEGIN,SCEND,SCINCL,SCDTS,SCOK,SCS,SCND,SCACT,SCINACT,SCREVDT,SCCLNM
"RTN","SCAPMC29",43,0)
 G:'$$OKDATA PTCLQ ; check/setup variables
"RTN","SCAPMC29",44,0)
 IF $L($G(SCTEAMA)) D
"RTN","SCAPMC29",45,0)
 .S SCTM=0
"RTN","SCAPMC29",46,0)
 .F  S SCTM=$O(@SCTEAMA@(SCTM)) Q:'SCTM  D  Q:'SCX
"RTN","SCAPMC29",47,0)
 ..S SCX=$$TPTM^SCAPMC(SCTM,SCDATES,,,"SCPOSAX",.SCERR)
"RTN","SCAPMC29",48,0)
 .F SCX=1:1 S SCTP=+$G(SCPOSAX(SCX)) Q:'SCTP  S SCPOSA(SCTP)=""
"RTN","SCAPMC29",49,0)
 .S:$D(@SCTEAMA@("EXCLUDE")) SCPOSA("EXCLUDE")=""
"RTN","SCAPMC29",50,0)
 S SCX=0 F  S SCX=$O(^DPT(DFN,"DE",SCX)) Q:'SCX  D
"RTN","SCAPMC29",51,0)
 .S SC44=+$G(^DPT(DFN,"DE",SCX,0))
"RTN","SCAPMC29",52,0)
 .Q:'SC44
"RTN","SCAPMC29",53,0)
 .Q:'$$OKCLIN(SC44,.SCPOSA)
"RTN","SCAPMC29",54,0)
 .S SCCLNM=$P($G(^SC(SC44,0)),U,1)
"RTN","SCAPMC29",55,0)
 .S SCS=0 F  S SCS=$O(^DPT(DFN,"DE",SCX,1,SCS)) Q:'SCS  D
"RTN","SCAPMC29",56,0)
 ..S SCND=$G(^DPT(DFN,"DE",SCX,1,SCS,0))
"RTN","SCAPMC29",57,0)
 ..S SCACT=$P(SCND,U,1)
"RTN","SCAPMC29",58,0)
 ..S SCINACT=$P(SCND,U,3)
"RTN","SCAPMC29",59,0)
 ..Q:'$$DTCHK^SCAPU1(SCBEGIN,SCEND,SCINCL,SCACT,SCINACT)
"RTN","SCAPMC29",60,0)
 ..S SCACOPT=$P(SCND,U,2)
"RTN","SCAPMC29",61,0)
 ..S SCREVDT=$P(SCND,U,5)
"RTN","SCAPMC29",62,0)
 ..S SCN=$G(@SCLIST@(0),0)+1
"RTN","SCAPMC29",63,0)
 ..S @SCLIST@(0)=SCN
"RTN","SCAPMC29",64,0)
 ..S @SCLIST@(SCN)=SC44_U_SCCLNM_U_SCACT_U_SCINACT_U_SCACOPT_U_SCREVDT
"RTN","SCAPMC29",65,0)
 ..S @SCLIST@("SCCL",SC44,SCACT,SCN)=""
"RTN","SCAPMC29",66,0)
PTCLQ Q $G(@SCERR@(0))<1
"RTN","SCAPMC29",67,0)
 ;
"RTN","SCAPMC29",68,0)
OKCLIN(SC44,SCPOSA) ;is clinic ok, given position array
"RTN","SCAPMC29",69,0)
 N SCOK,SCTP
"RTN","SCAPMC29",70,0)
 IF '$D(SCPOSA) S SCOK=1 G QTOKC
"RTN","SCAPMC29",71,0)
 S (SCOK,SCTP)=0
"RTN","SCAPMC29",72,0)
 F  S SCTP=$O(^SCTM(404.57,"D",+SC44,SCTP)) Q:'SCTP  S:$$OKARRAY^SCAPU1(.SCPOSA,SCTP) SCOK=1
"RTN","SCAPMC29",73,0)
QTOKC Q SCOK
"RTN","SCAPMC29",74,0)
 ;
"RTN","SCAPMC29",75,0)
OKDATA() ;check/setup variables - return 1 if ok; 0 if error
"RTN","SCAPMC29",76,0)
 N SCOK
"RTN","SCAPMC29",77,0)
 S SCOK=1
"RTN","SCAPMC29",78,0)
 D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)
"RTN","SCAPMC29",79,0)
 IF '$D(^DPT(+$G(DFN),0)) D  S SCOK=0
"RTN","SCAPMC29",80,0)
 . S SCPARM("PATIENT")=$G(DFN,"Undefined")
"RTN","SCAPMC29",81,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC29",82,0)
 Q SCOK
"RTN","SCAPMC3")
0^19^B10330792
"RTN","SCAPMC3",1,0)
SCAPMC3 ;ALB/REW - Team API's:TMPT ; JUN 30, 1995
"RTN","SCAPMC3",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC3",3,0)
 ;;1.0
"RTN","SCAPMC3",4,0)
TMPT(DFN,SCDATES,SCPURPA,SCLIST,SCERR) ; -- list of teams for a patient
"RTN","SCAPMC3",5,0)
 ; input:
"RTN","SCAPMC3",6,0)
 ;  DFN = ien of PATIENT file [required]
"RTN","SCAPMC3",7,0)
 ;  SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC3",8,0)
 ;                      [default: TODAY]
"RTN","SCAPMC3",9,0)
 ;        ("END")   = end date to search (inclusive)
"RTN","SCAPMC3",10,0)
 ;                      [default: TODAY]
"RTN","SCAPMC3",11,0)
 ;        ("INCL")  = 1: only use patients who were assigned to
"RTN","SCAPMC3",12,0)
 ;                       team for entire date range
"RTN","SCAPMC3",13,0)
 ;                    0: anytime in date range
"RTN","SCAPMC3",14,0)
 ;                      [default: 1] 
"RTN","SCAPMC3",15,0)
 ;  SCPURPA -array of pointers to team purpose file 403.47
"RTN","SCAPMC3",16,0)
 ;          if none are defined - returns all teams
"RTN","SCAPMC3",17,0)
 ;          if @SCPURPA@('exclude') is defined - exclude listed teams
"RTN","SCAPMC3",18,0)
 ;  SCLIST -array name to store list
"RTN","SCAPMC3",19,0)
 ;          [ex. ^TMP("SCPT",$J)]
"RTN","SCAPMC3",20,0)
 ;        
"RTN","SCAPMC3",21,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC3",22,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC3",23,0)
 ;
"RTN","SCAPMC3",24,0)
 ; Output:
"RTN","SCAPMC3",25,0)
 ;  SCLIST() = array of teams (includes SCTM xref)
"RTN","SCAPMC3",26,0)
 ;             Format:
"RTN","SCAPMC3",27,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC3",28,0)
 ;               Piece     Description
"RTN","SCAPMC3",29,0)
 ;                 1       IEN of TEAM file entry
"RTN","SCAPMC3",30,0)
 ;                 2       Name of team
"RTN","SCAPMC3",31,0)
 ;                 3       IEN of file #404.42 (Pt Tm Assignment)
"RTN","SCAPMC3",32,0)
 ;                 4       current effective date
"RTN","SCAPMC3",33,0)
 ;                 5       current inactivate date (if any)
"RTN","SCAPMC3",34,0)
 ;                 6       pointer to 403.47 (purpose)
"RTN","SCAPMC3",35,0)
 ;                 7       Name of Purpose
"RTN","SCAPMC3",36,0)
 ;                 8       Is this the pt's PC Team?
"RTN","SCAPMC3",37,0)
 ;                Subscript: "SCTM",SCTM,IEN =""
"RTN","SCAPMC3",38,0)
 ;
"RTN","SCAPMC3",39,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC3",40,0)
 ;  @SCERR@(0) = number of errors, undefined if none
"RTN","SCAPMC3",41,0)
 ;             Format:
"RTN","SCAPMC3",42,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC3",43,0)
 ;               Piece     Description
"RTN","SCAPMC3",44,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC3",45,0)
 ;  Returned: 1 if ok, 0 if error
"RTN","SCAPMC3",46,0)
 ;
"RTN","SCAPMC3",47,0)
 ;
"RTN","SCAPMC3",48,0)
 ;
"RTN","SCAPMC3",49,0)
ST N SCTM,SCPTA,SCPTA0,SCP,SCTMPT
"RTN","SCAPMC3",50,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCP,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCAPMC3",51,0)
 ; -- initialize control variables
"RTN","SCAPMC3",52,0)
 G:'$$OKDATA PRACQ
"RTN","SCAPMC3",53,0)
 ; -- loop through patient team assignments
"RTN","SCAPMC3",54,0)
 S SCTM=0
"RTN","SCAPMC3",55,0)
 F  S SCTM=$O(^SCPT(404.42,"APTTM",DFN,SCTM)) Q:'SCTM  D
"RTN","SCAPMC3",56,0)
 .Q:1>$$ACTHIST^SCAPMCU2(404.58,SCTM,SCDATES,.SCERR,"SCTMPT")
"RTN","SCAPMC3",57,0)
 .S SCP=$P(^SCTM(404.51,SCTM,0),U,3)
"RTN","SCAPMC3",58,0)
 .Q:'$$OKARRAY^SCAPU1(SCPURPA,SCP)
"RTN","SCAPMC3",59,0)
 .S SCPTA=0
"RTN","SCAPMC3",60,0)
 .F  S SCPTA=$O(^SCPT(404.42,"APTTM",DFN,SCTM,SCPTA)) Q:'SCPTA  D
"RTN","SCAPMC3",61,0)
 ..S SCPTA0=$G(^SCPT(404.42,SCPTA,0))
"RTN","SCAPMC3",62,0)
 ..Q:'SCPTA0
"RTN","SCAPMC3",63,0)
 ..Q:'$$DTCHK^SCAPU1(SCBEGIN,SCEND,SCINCL,$P(SCPTA0,U,2),$P(SCPTA0,U,9))
"RTN","SCAPMC3",64,0)
 ..D BLD(.SCLIST,SCPTA,SCPTA0)
"RTN","SCAPMC3",65,0)
PRACQ Q $G(@SCERR@(0))<1
"RTN","SCAPMC3",66,0)
 ;
"RTN","SCAPMC3",67,0)
 ;
"RTN","SCAPMC3",68,0)
BLD(SCLIST,SCPTA,SCPTA0) ; -- build list of patient's teams
"RTN","SCAPMC3",69,0)
 ;
"RTN","SCAPMC3",70,0)
 ; SCLIST  - output array
"RTN","SCAPMC3",71,0)
 ; SCPTA   - ien of pt team assignment
"RTN","SCAPMC3",72,0)
 ; SCPTA0  - 0 node of pt team assignment file
"RTN","SCAPMC3",73,0)
 ; 
"RTN","SCAPMC3",74,0)
 ; this builds the array:
"RTN","SCAPMC3",75,0)
 ;                 1      2      3     4     5        6        7      8
"RTN","SCAPMC3",76,0)
 ;   sclist(1->n)=sctm^tmname^scpta^effdt^inactdt^p403.47^purpname^pctm?
"RTN","SCAPMC3",77,0)
 ;  
"RTN","SCAPMC3",78,0)
 ;    for each scpta zero node passed to it
"RTN","SCAPMC3",79,0)
 ;    AND a xref  sclist('sctm',sctm,scpta,scn)=""
"RTN","SCAPMC3",80,0)
 N SCEFFDT,SCCNT,SCTM,SCN,SCTMNODE,SCP,SCPC
"RTN","SCAPMC3",81,0)
 S SCTM=$P(SCPTA0,U,3)
"RTN","SCAPMC3",82,0)
 Q:$D(@SCLIST@("SCTM",SCTM,SCPTA))
"RTN","SCAPMC3",83,0)
 S SCN=$G(@SCLIST@(0),0)+1
"RTN","SCAPMC3",84,0)
 S @SCLIST@(0)=SCN
"RTN","SCAPMC3",85,0)
 S SCTMNODE=$G(^SCTM(404.51,SCTM,0)),SCP=$P(SCTMNODE,U,3)
"RTN","SCAPMC3",86,0)
 ;is assignment type=1?
"RTN","SCAPMC3",87,0)
 S SCPC=$P(SCPTA0,U,8)=1
"RTN","SCAPMC3",88,0)
 S @SCLIST@(SCN)=SCTM_U_$P(SCTMNODE,U,1)_U_SCPTA_U_$P(SCPTA0,U,2)_U_$P(SCPTA0,U,9)_U_SCP_U_$P($G(^SC(403.47,SCP,0)),U,1)_U_SCPC
"RTN","SCAPMC3",89,0)
 S @SCLIST@("SCTM",SCTM,SCPTA,SCN)=""
"RTN","SCAPMC3",90,0)
 Q
"RTN","SCAPMC3",91,0)
OKDATA() ;setup/check variables
"RTN","SCAPMC3",92,0)
 N SCOK
"RTN","SCAPMC3",93,0)
 S SCOK=1
"RTN","SCAPMC3",94,0)
 S SCPURPA=$G(SCPURPA,"")
"RTN","SCAPMC3",95,0)
 D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)
"RTN","SCAPMC3",96,0)
 IF $L($G(SCPURPA))&($G(SCPURPA)'?1A1.7AN) D  S SCOK=0
"RTN","SCAPMC3",97,0)
 . S SCPARM("PURPOSE")=$G(SCPURPA,"Undefined")
"RTN","SCAPMC3",98,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC3",99,0)
 IF '$D(^DPT(+$G(DFN),0)) D  S SCOK=0
"RTN","SCAPMC3",100,0)
 . S SCPARM("PATIENT")=$G(PATIENT,"Undefined")
"RTN","SCAPMC3",101,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC3",102,0)
 ; -- is it a valid DFN passed (Error # 20001 in DIALOG file)
"RTN","SCAPMC3",103,0)
 IF '$D(^DPT(+DFN,0)) D   S SCOK=0
"RTN","SCAPMC3",104,0)
 . S SCPARM("PATIENT")=DFN
"RTN","SCAPMC3",105,0)
 . D ERR^SCAPMCU1(SCESEQ,20001,.SCPARM,"",.SCERR)
"RTN","SCAPMC3",106,0)
 Q SCOK
"RTN","SCAPMC3",107,0)
 ;
"RTN","SCAPMC30")
0^20^B6119891
"RTN","SCAPMC30",1,0)
SCAPMC30 ;ALB/REW - TEAM APIs:TPCL  ; 30 Jun 95
"RTN","SCAPMC30",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC30",3,0)
 ;;1.0
"RTN","SCAPMC30",4,0)
TPCL(SC44,SCDATES,SCPOSA,SCUSRA,SCPURPA,SCROLEA,SCLIST,SCERR) ;  -- list of positions for a clinic
"RTN","SCAPMC30",5,0)
 ; input:
"RTN","SCAPMC30",6,0)
 ;  SC44 = ien of HOSPITAL LOCATION <FILE#44> [required]
"RTN","SCAPMC30",7,0)
 ; SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC30",8,0)
 ;                      [default: TODAY]
"RTN","SCAPMC30",9,0)
 ;        ("END")   = end date to search (inclusive)
"RTN","SCAPMC30",10,0)
 ;                      [default: TODAY]
"RTN","SCAPMC30",11,0)
 ;        ("INCL")  = 1: only use patients who were assigned to
"RTN","SCAPMC30",12,0)
 ;                       team for entire date range
"RTN","SCAPMC30",13,0)
 ;                    0: anytime in date range
"RTN","SCAPMC30",14,0)
 ;                      [default: 1] 
"RTN","SCAPMC30",15,0)
 ;  SCPOSA -array of pointers to team position - 404.57 (per SCPURPA)
"RTN","SCAPMC30",16,0)
 ;  SCUSRA -array of pointers to user file - 8930 (per SCPURPA array)
"RTN","SCAPMC30",17,0)
 ;  SCPURPA -array of pointers to team purpose file 403.47
"RTN","SCAPMC30",18,0)
 ;          if none are defined - returns all teams
"RTN","SCAPMC30",19,0)
 ;          if @SCPURPA@('exclude') is defined - exclude listed teams
"RTN","SCAPMC30",20,0)
 ;  SCROLEA - array of pointers to std position file 403.46 (per SCPURPA)
"RTN","SCAPMC30",21,0)
 ;  SCLIST -array name to store list
"RTN","SCAPMC30",22,0)
 ;          [ex. ^TMP("SCPT",$J)]
"RTN","SCAPMC30",23,0)
 ;        
"RTN","SCAPMC30",24,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC30",25,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC30",26,0)
 ;
"RTN","SCAPMC30",27,0)
 ; Output:
"RTN","SCAPMC30",28,0)
 ;  SCLIST() = array of positions (includes SCTP xref)
"RTN","SCAPMC30",29,0)
 ;             Format:
"RTN","SCAPMC30",30,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC30",31,0)
 ;               Piece     Description
"RTN","SCAPMC30",32,0)
 ;                 1       IEN of TEAM POSITION File (#404.57)
"RTN","SCAPMC30",33,0)
 ;                 2       Name of Position
"RTN","SCAPMC30",34,0)
 ;                 3       IEN of Team #404.51
"RTN","SCAPMC30",35,0)
 ;                 4       IEN of file #404.59 (Tm Pos History)
"RTN","SCAPMC30",36,0)
 ;                 5       current effective date
"RTN","SCAPMC30",37,0)
 ;                 6       current inactivate date (if any)
"RTN","SCAPMC30",38,0)
 ;                 7       pointer to 403.46 (role)
"RTN","SCAPMC30",39,0)
 ;                 8       Name of Standard Role
"RTN","SCAPMC30",40,0)
 ;                 9       pointer to User Class (#8930)
"RTN","SCAPMC30",41,0)
 ;                10       Name of User Class
"RTN","SCAPMC30",42,0)
 ;                Subscript: "SCTP",SCTM,IEN =""
"RTN","SCAPMC30",43,0)
 ;
"RTN","SCAPMC30",44,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC30",45,0)
 ;  @SCERR@(0) = number of errors, undefined if none
"RTN","SCAPMC30",46,0)
 ;             Format:
"RTN","SCAPMC30",47,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC30",48,0)
 ;               Piece     Description
"RTN","SCAPMC30",49,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC30",50,0)
 ;  Returned: 1 if ok, 0 if error
"RTN","SCAPMC30",51,0)
 ; Other:
"RTN","SCAPMC30",52,0)
 ;  SCACTHIS =  status (-1:err|0:inact|1:act)^404.52 ien ^actdt^inacdt
"RTN","SCAPMC30",53,0)
 ;
"RTN","SCAPMC30",54,0)
 ;
"RTN","SCAPMC30",55,0)
ST N SCPTTP,SCPTTP0,SCTP,SCR,SCACTHIS,SCTM,SCND,SCU,SCOK,SCP,SCTPCL
"RTN","SCAPMC30",56,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCAPMC30",57,0)
 ; -- initialize control variables
"RTN","SCAPMC30",58,0)
 S SCOK=1
"RTN","SCAPMC30",59,0)
 G:'$$OKDATA CLTPQ
"RTN","SCAPMC30",60,0)
 S SCTP=0 F  S SCTP=$O(^SCTM(404.57,"D",SC44,SCTP)) Q:'SCTP  D  Q:'SCOK
"RTN","SCAPMC30",61,0)
 .S SCTP0=$G(^SCTM(404.57,SCTP,0))
"RTN","SCAPMC30",62,0)
 .IF '$L(SCTP0) D
"RTN","SCAPMC30",63,0)
 ..S SCPARM("POSITION")=$G(SCTP,"Undefined")
"RTN","SCAPMC30",64,0)
 ..S SCPARM("CLINIC")=$G(SC44,"Undefined")
"RTN","SCAPMC30",65,0)
 ..D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC30",66,0)
 .S SCTM=$P($G(^SCTM(404.57,SCTP,0)),U,2)
"RTN","SCAPMC30",67,0)
 .S SCP=$P(^SCTM(404.51,+SCTM,0),U,3)
"RTN","SCAPMC30",68,0)
 .Q:'$$OKARRAY^SCAPU1(.SCPURPA,.SCP)
"RTN","SCAPMC30",69,0)
 .S SCR=+$P(^SCTM(404.57,SCTP,0),U,3)
"RTN","SCAPMC30",70,0)
 .Q:'$$OKARRAY^SCAPU1(.SCROLEA,.SCR)
"RTN","SCAPMC30",71,0)
 .S SCACTHIS=$$ACTHIST^SCAPMCU2(404.59,SCTP,SCDATES,SCERR,"SCTPCL")
"RTN","SCAPMC30",72,0)
 .Q:'SCACTHIS
"RTN","SCAPMC30",73,0)
 .D BLD^SCAPMC24(.SCLIST,SCTM,SCTP,SCACTHIS,SCR)
"RTN","SCAPMC30",74,0)
CLTPQ Q $G(@SCERR@(0))<1
"RTN","SCAPMC30",75,0)
 ;
"RTN","SCAPMC30",76,0)
OKDATA() ;check/setup variables - return 1 if ok; 0 if error
"RTN","SCAPMC30",77,0)
 N SCOK
"RTN","SCAPMC30",78,0)
 S SCOK=1
"RTN","SCAPMC30",79,0)
 D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)
"RTN","SCAPMC30",80,0)
 IF '$D(^SC(+$G(SC44),0)) D  S SCOK=0
"RTN","SCAPMC30",81,0)
 . S SCPARM("CLINIC")=$G(SC44,"Undefined")
"RTN","SCAPMC30",82,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC30",83,0)
 Q SCOK
"RTN","SCAPMC4")
0^21^B6901391
"RTN","SCAPMC4",1,0)
SCAPMC4 ;ALB/REW - Team API's:TMINST ; JUN 30, 1995
"RTN","SCAPMC4",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC4",3,0)
 ;;1.0
"RTN","SCAPMC4",4,0)
TMINST(SCINST,SCDATES,SCPURPA,SCLIST,SCERR) ; -- list of teams for institution
"RTN","SCAPMC4",5,0)
 ; input:
"RTN","SCAPMC4",6,0)
 ;  SCINST = ien of INSTITUTION file (#4)
"RTN","SCAPMC4",7,0)
 ;  SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC4",8,0)
 ;                      [default: TODAY]
"RTN","SCAPMC4",9,0)
 ;        ("END")   = end date to search (inclusive)
"RTN","SCAPMC4",10,0)
 ;                      [default: TODAY]
"RTN","SCAPMC4",11,0)
 ;        ("INCL")  = 1: only use patients who were assigned to
"RTN","SCAPMC4",12,0)
 ;                       team for entire date range
"RTN","SCAPMC4",13,0)
 ;                    0: anytime in date range
"RTN","SCAPMC4",14,0)
 ;                      [default: 1] 
"RTN","SCAPMC4",15,0)
 ;  SCPURPA -array of pointers to team purpose file 403.47
"RTN","SCAPMC4",16,0)
 ;          if none are defined - returns all teams
"RTN","SCAPMC4",17,0)
 ;          if @SCPURPA@('exclude') is defined - exclude listed teams
"RTN","SCAPMC4",18,0)
 ;  SCLIST -array name to store list
"RTN","SCAPMC4",19,0)
 ;          [ex. ^TMP("SCTM",$J)]
"RTN","SCAPMC4",20,0)
 ;        
"RTN","SCAPMC4",21,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC4",22,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC4",23,0)
 ;
"RTN","SCAPMC4",24,0)
 ; Output:
"RTN","SCAPMC4",25,0)
 ;  SCLIST() = array of teams
"RTN","SCAPMC4",26,0)
 ;             Format:
"RTN","SCAPMC4",27,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC4",28,0)
 ;               Piece     Description
"RTN","SCAPMC4",29,0)
 ;                 1       IEN of TEAM file entry
"RTN","SCAPMC4",30,0)
 ;                 2       Name of team
"RTN","SCAPMC4",31,0)
 ;                 3       current effective date
"RTN","SCAPMC4",32,0)
 ;                 4       current inactivate date (if any)
"RTN","SCAPMC4",33,0)
 ;
"RTN","SCAPMC4",34,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC4",35,0)
 ;             Foramt:
"RTN","SCAPMC4",36,0)
 ;  @SCERR@(0) = Number of errors, undefined if none
"RTN","SCAPMC4",37,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC4",38,0)
 ;               Piece     Description
"RTN","SCAPMC4",39,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC4",40,0)
 ;
"RTN","SCAPMC4",41,0)
 ;
"RTN","SCAPMC4",42,0)
 ;    Returned: 1 if ok, 0 if error
"RTN","SCAPMC4",43,0)
 ;
"RTN","SCAPMC4",44,0)
 ; -- initialize control variables
"RTN","SCAPMC4",45,0)
ST N SCTM,SCTM0,SCX,SCPRP,SCTMINST
"RTN","SCAPMC4",46,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCP,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCAPMC4",47,0)
 G:'$$OKDATA PRACQ ;check/setup variables
"RTN","SCAPMC4",48,0)
 ;
"RTN","SCAPMC4",49,0)
 ; -- loop through teams for institution
"RTN","SCAPMC4",50,0)
 S SCTM=0
"RTN","SCAPMC4",51,0)
 F  S SCTM=$O(^SCTM(404.51,"AINST",SCINST,SCTM)) Q:'SCTM  D
"RTN","SCAPMC4",52,0)
 .S SCTM0=$G(^SCTM(404.51,SCTM,0))
"RTN","SCAPMC4",53,0)
 .Q:SCTM0=""
"RTN","SCAPMC4",54,0)
 .S SCPRP=$P(SCTM0,U,3)
"RTN","SCAPMC4",55,0)
 .Q:'$$OKARRAY^SCAPU1(.SCPURPA,SCPRP)
"RTN","SCAPMC4",56,0)
 .S ACTHIST=$$ACTHIST^SCAPMCU2(404.58,SCTM,SCDATES,.SCERR,"SCTMINST")
"RTN","SCAPMC4",57,0)
 .Q:ACTHIST'>0
"RTN","SCAPMC4",58,0)
 .D BLDTM(SCTM,SCDATES,ACTHIST,.SCLIST,.SCERR)
"RTN","SCAPMC4",59,0)
PRACQ Q $G(@SCERR@(0))<1
"RTN","SCAPMC4",60,0)
 ;
"RTN","SCAPMC4",61,0)
BLDTM(SCTM,SCDATES,ACTHIST,SCLIST,SCERR) ;build team list
"RTN","SCAPMC4",62,0)
 ; ACTHIST is per $$acthist - dates may be tighter than team activation
"RTN","SCAPMC4",63,0)
 ;      e.g. practitioners' dates will be dates they not team is active
"RTN","SCAPMC4",64,0)
 N SCACT,SCINACT
"RTN","SCAPMC4",65,0)
 S SCACT=+$P(ACTHIST,U,3)
"RTN","SCAPMC4",66,0)
 Q:'SCACT
"RTN","SCAPMC4",67,0)
 S SCINACT=@SCDATES@("END")
"RTN","SCAPMC4",68,0)
 S SCINACT=$S('SCINACT:$P(ACTHIST,U,4),'$P(ACTHIST,U,4):SCINACT,(SCINACT<$P(ACTHIST,U,4)):SCINACT,1:$P(ACTHIST,U,4))
"RTN","SCAPMC4",69,0)
 Q:$D(@SCLIST@("SCTM",SCTM,SCACT))
"RTN","SCAPMC4",70,0)
 S SCN=$G(@SCLIST@(0),0)+1
"RTN","SCAPMC4",71,0)
 S @SCLIST@(0)=SCN
"RTN","SCAPMC4",72,0)
 S @SCLIST@(SCN)=SCTM_U_$P(^SCTM(404.51,SCTM,0),U,1)_U_SCACT_U_SCINACT
"RTN","SCAPMC4",73,0)
 S @SCLIST@("SCTM",SCTM,SCACT,SCN)=""
"RTN","SCAPMC4",74,0)
 Q
"RTN","SCAPMC4",75,0)
OKDATA() ;check/setup variables - return 1 if ok; 0 if error
"RTN","SCAPMC4",76,0)
 N SCOK
"RTN","SCAPMC4",77,0)
 S SCOK=1
"RTN","SCAPMC4",78,0)
 D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)
"RTN","SCAPMC4",79,0)
 IF '$D(^DIC(4,+$G(SCINST),0)) D  S SCOK=0
"RTN","SCAPMC4",80,0)
 . S SCPARM("INSTITUTION")=$G(SCINST,"Undefined")
"RTN","SCAPMC4",81,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC4",82,0)
 Q SCOK
"RTN","SCAPMC5")
0^22^B4549737
"RTN","SCAPMC5",1,0)
SCAPMC5 ;ALB/REW - Team API's:TMAU ; JUL 3, 1995
"RTN","SCAPMC5",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC5",3,0)
 ;;1.0
"RTN","SCAPMC5",4,0)
TMAU(SCAU,SCDATES,SCPURPA,SCLIST,SCERR) ; -- list of teams for autolink
"RTN","SCAPMC5",5,0)
 ; input:
"RTN","SCAPMC5",6,0)
 ;  SCAU = variable pointer to TEAM AUTOLINK file (#404.56)
"RTN","SCAPMC5",7,0)
 ;         e.g. 10866;VA(200 for the practitioner with duz=10866
"RTN","SCAPMC5",8,0)
 ;  SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC5",9,0)
 ;                      [default: TODAY]
"RTN","SCAPMC5",10,0)
 ;        ("END")   = end date to search (inclusive)
"RTN","SCAPMC5",11,0)
 ;                      [default: TODAY]
"RTN","SCAPMC5",12,0)
 ;        ("INCL")  = 1: only use teams who were active
"RTN","SCAPMC5",13,0)
 ;                       for entire date range
"RTN","SCAPMC5",14,0)
 ;                    0: anytime in date range
"RTN","SCAPMC5",15,0)
 ;                      [default: 1] 
"RTN","SCAPMC5",16,0)
 ;  SCPURPA -array of pointers to team purpose file 403.47
"RTN","SCAPMC5",17,0)
 ;          if none are defined - returns all teams
"RTN","SCAPMC5",18,0)
 ;          if @SCPURPA@('exclude') is defined - exclude listed teams
"RTN","SCAPMC5",19,0)
 ;  SCLIST -array name to store list
"RTN","SCAPMC5",20,0)
 ;          [ex. ^TMP("SCTM",$J)]
"RTN","SCAPMC5",21,0)
 ;        
"RTN","SCAPMC5",22,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC5",23,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC5",24,0)
 ;
"RTN","SCAPMC5",25,0)
 ; Output:
"RTN","SCAPMC5",26,0)
 ;  SCLIST() = array of teams
"RTN","SCAPMC5",27,0)
 ;             Format:
"RTN","SCAPMC5",28,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC5",29,0)
 ;               Piece     Description
"RTN","SCAPMC5",30,0)
 ;                 1       IEN of TEAM file entry
"RTN","SCAPMC5",31,0)
 ;                 2       Name of team
"RTN","SCAPMC5",32,0)
 ;                 3       current effective date
"RTN","SCAPMC5",33,0)
 ;                 4       current inactivate date (if any)
"RTN","SCAPMC5",34,0)
 ;
"RTN","SCAPMC5",35,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC5",36,0)
 ;             Foramt:
"RTN","SCAPMC5",37,0)
 ;  @SCERR@(0)= Number of errors, undefined if none
"RTN","SCAPMC5",38,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC5",39,0)
 ;               Piece     Description
"RTN","SCAPMC5",40,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC5",41,0)
 ;  Returned: 1 if ok, 0 if error
"RTN","SCAPMC5",42,0)
 ;
"RTN","SCAPMC5",43,0)
ST N SCTM,SCTM0,SCPRP,SCTMAU
"RTN","SCAPMC5",44,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCP,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCAPMC5",45,0)
 G:'$$OKDATA PRACQ ;check/setup variables
"RTN","SCAPMC5",46,0)
 ;
"RTN","SCAPMC5",47,0)
 ; -- loop through autolink assignments
"RTN","SCAPMC5",48,0)
 S SCTM=0
"RTN","SCAPMC5",49,0)
 F  S SCTM=$O(^SCTM(404.56,"AC",SCAU,SCTM)) Q:'SCTM  D
"RTN","SCAPMC5",50,0)
 .S SCTM0=$G(^SCTM(404.51,SCTM,0))
"RTN","SCAPMC5",51,0)
 .Q:SCTM0=""
"RTN","SCAPMC5",52,0)
 .S SCPRP=$P(SCTM0,U,3)
"RTN","SCAPMC5",53,0)
 .Q:'$$OKARRAY^SCAPU1(.SCPURPA,SCPRP)
"RTN","SCAPMC5",54,0)
 .S ACTHIST=$$ACTHIST^SCAPMCU2(404.58,SCTM,SCDATES,.SCERR,"SCTMAU")
"RTN","SCAPMC5",55,0)
 .IF ACTHIST>0 D
"RTN","SCAPMC5",56,0)
 ..Q:$D(@SCLIST@("SCTM",SCTM,$P(ACTHIST,U,3)))
"RTN","SCAPMC5",57,0)
 ..S SCN=$G(@SCLIST@(0),0)+1
"RTN","SCAPMC5",58,0)
 ..S @SCLIST@(0)=SCN
"RTN","SCAPMC5",59,0)
 ..S @SCLIST@(SCN)=SCTM_U_$P(^SCTM(404.51,SCTM,0),U,1)_U_$P(ACTHIST,U,3,4)
"RTN","SCAPMC5",60,0)
 ..S @SCLIST@("SCTM",SCTM,$P(ACTHIST,U,3),SCN)=""
"RTN","SCAPMC5",61,0)
PRACQ Q $G(@SCERR@(0))<1
"RTN","SCAPMC5",62,0)
OKDATA() ;check/setup variables
"RTN","SCAPMC5",63,0)
 N SCOK
"RTN","SCAPMC5",64,0)
 S SCOK=1
"RTN","SCAPMC5",65,0)
 D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)
"RTN","SCAPMC5",66,0)
 IF '$D(^SCTM(404.56,"AC",SCAU)) D  S SCOK=0
"RTN","SCAPMC5",67,0)
 . S SCPARM("AUTOLINK")=SCAU
"RTN","SCAPMC5",68,0)
 . D ERR^SCAPMCU1(SCESEQ,4045601,.SCPARM,"",.SCERR)
"RTN","SCAPMC5",69,0)
 ; -- is it a valid SCAU passed (Error # 4045601 in DIALOG file)
"RTN","SCAPMC5",70,0)
 Q SCOK
"RTN","SCAPMC6")
0^23^B9265796
"RTN","SCAPMC6",1,0)
SCAPMC6 ;ALB/REW - Team APIs:APPTTM ; 5 Jul 1995
"RTN","SCAPMC6",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC6",3,0)
 ;;1.0
"RTN","SCAPMC6",4,0)
ACPTTM(DFN,SCTM,SCFIELDA,SCACT,SCERR) ;add a patient to a team (pt tm assgn - #404.42
"RTN","SCAPMC6",5,0)
 ; input:
"RTN","SCAPMC6",6,0)
 ;  DFN     = pointer to PATIENT file (#2)
"RTN","SCAPMC6",7,0)
 ;  SCTM    = pointer to TEAM file (#404.51)
"RTN","SCAPMC6",8,0)
 ;  SCFIELDA= array of additional fields to be added
"RTN","SCAPMC6",9,0)
 ;  SCACT   = date to activate [default=DT]
"RTN","SCAPMC6",10,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC6",11,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC6",12,0)
 ;
"RTN","SCAPMC6",13,0)
 ; Output:
"RTN","SCAPMC6",14,0)
 ;  Returned = ien of 404.42 - 0 if none after^new?^Message
"RTN","SCAPMC6",15,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC6",16,0)
 ;             Foramt:
"RTN","SCAPMC6",17,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC6",18,0)
 ;               Piece     Description
"RTN","SCAPMC6",19,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC6",20,0)
 N SCPTTM,SCESEQ,SCPARM,SCIEN,SC,SCFLD,SCNEWTM
"RTN","SCAPMC6",21,0)
 G:'$$OKDATA APTTMQ ;check/setup variables
"RTN","SCAPMC6",22,0)
 IF $S('$D(SCFIELDA):0,('($D(@SCFIELDA@(.08))#2)):0,($G(@SCFIELDA@(.08))=1):1,1:0) IF '$$OKPTTMPC^SCMCTMU2(DFN,SCTM,SCACT) D  G APTTMQ
"RTN","SCAPMC6",23,0)
 .S SCMESS=4044200.001
"RTN","SCAPMC6",24,0)
 S SCPTTM=$$PTTMACT(DFN,SCTM,SCACT,.SCERR)
"RTN","SCAPMC6",25,0)
 IF SCPTTM G APTTMQ
"RTN","SCAPMC6",26,0)
 ELSE  D
"RTN","SCAPMC6",27,0)
 .IF $D(SCFIELDA) D
"RTN","SCAPMC6",28,0)
 ..S SCFLD=0
"RTN","SCAPMC6",29,0)
 ..F  S SCFLD=$O(@SCFIELDA@(SCFLD)) Q:'SCFLD  D
"RTN","SCAPMC6",30,0)
 ...S SC($J,404.42,"+1,",SCFLD)=@SCFIELDA@(SCFLD)
"RTN","SCAPMC6",31,0)
 .S SC($J,404.42,"+1,",.01)=DFN
"RTN","SCAPMC6",32,0)
 .S SC($J,404.42,"+1,",.02)=SCACT
"RTN","SCAPMC6",33,0)
 .S SC($J,404.42,"+1,",.03)=SCTM
"RTN","SCAPMC6",34,0)
 .D UPDATE^DIE("","SC($J)","SCIEN","SCERR")
"RTN","SCAPMC6",35,0)
 .IF $D(@SCERR) K SCIEN
"RTN","SCAPMC6",36,0)
 .ELSE  D
"RTN","SCAPMC6",37,0)
 ..S SCPTTM=$G(SCIEN(1))
"RTN","SCAPMC6",38,0)
 ..S SCNEWTM=1
"RTN","SCAPMC6",39,0)
 ..D AFTERTM^SCMCDD1(SCPTTM)
"RTN","SCAPMC6",40,0)
APTTMQ Q +$G(SCPTTM)_U_+$G(SCNEWTM)
"RTN","SCAPMC6",41,0)
 ;
"RTN","SCAPMC6",42,0)
PTTMACT(DFN,SCTM,SCDT,SCERR) ;what is patient/team assignment on a given date-time into the future? Return 404.42 ien or 0
"RTN","SCAPMC6",43,0)
 N SCTMLST,SCOK,SCPTTMDT
"RTN","SCAPMC6",44,0)
 S SCOK=0
"RTN","SCAPMC6",45,0)
 S SCPTTMDT("BEGIN")=SCDT,SCPTTMDT("END")=3990101,SCPTTMDT("INCL")=0
"RTN","SCAPMC6",46,0)
 IF $$TMPT^SCAPMC3(DFN,"SCPTTMDT","","SCTMLST",.SCERR) S:$D(SCTMLST("SCTM",SCTM)) SCOK=$O(SCTMLST("SCTM",SCTM,0))
"RTN","SCAPMC6",47,0)
 Q SCOK
"RTN","SCAPMC6",48,0)
 ;
"RTN","SCAPMC6",49,0)
ACPTATM(DFNA,SCTM,SCFIELDA,SCACT,SCERR,SCNEWTM,SCOLDTM,SCBADTM) ;list of patients assigned to a team (404.42)
"RTN","SCAPMC6",50,0)
 ; input: as per ACPTTM (above with the following change:)
"RTN","SCAPMC6",51,0)
 ;    DFNA    = is the literal value of a patient array (e.g. "scpt"
"RTN","SCAPMC6",52,0)
 ;              there is at least one scpt(dfn)="" defined
"RTN","SCAPMC6",53,0)
 ;    SCNEWTM = Subset of DFNA that was NEWLY assigned to Team [returned]
"RTN","SCAPMC6",54,0)
 ;    SCOLDTM = Subset of DFNA that was already assigned -Team [returned]
"RTN","SCAPMC6",55,0)
 ;    SCBADTP = Subset of DFNA that was NOT assigned to Team  [returned]
"RTN","SCAPMC6",56,0)
 ;    Note: The above three arrays return data in a user determined array
"RTN","SCAPMC6",57,0)
 ; output: Count of Patients: 
"RTN","SCAPMC6",58,0)
 ;           1             2            3               4
"RTN","SCAPMC6",59,0)
 ;    total assigned^newly assigned^assigned prior^not assigned
"RTN","SCAPMC6",60,0)
 N DFN,SCNEWCNT,SCOLDCNT,SCBADCNT,SCX,SCNOMAIL
"RTN","SCAPMC6",61,0)
 S SCNOMAIL=1
"RTN","SCAPMC6",62,0)
 S (SCNEWCNT,SCOLDCNT,SCBADCNT)=0
"RTN","SCAPMC6",63,0)
 S DFN=0 F  S DFN=$O(@DFNA@(DFN)) Q:'DFN  D
"RTN","SCAPMC6",64,0)
 .S SCX=$$ACPTTM(.DFN,.SCTM,.SCFIELDA,.SCACT,.SCERR)
"RTN","SCAPMC6",65,0)
 .;  SCX = ien of 404.42^new?
"RTN","SCAPMC6",66,0)
 .IF $P(SCX,U,2) D  ;newly assigned
"RTN","SCAPMC6",67,0)
 ..S SCNEWCNT=SCNEWCNT+1
"RTN","SCAPMC6",68,0)
 ..S @SCNEWTM@(DFN)=+SCX   ;scnewtm
"RTN","SCAPMC6",69,0)
 .IF $P(SCX,U,1)&('$P(SCX,U,2)) D  ;old
"RTN","SCAPMC6",70,0)
 ..S SCOLDCNT=SCOLDCNT+1
"RTN","SCAPMC6",71,0)
 ..S @SCOLDTM@(DFN)=+SCX
"RTN","SCAPMC6",72,0)
 .IF 'SCX D
"RTN","SCAPMC6",73,0)
 ..S @SCBADTM@(DFN)=$P(SCX,U,3)
"RTN","SCAPMC6",74,0)
 ..S SCBADCNT=SCBADCNT+1
"RTN","SCAPMC6",75,0)
 K SCNOMAIL
"RTN","SCAPMC6",76,0)
 D MAILLST^SCMCTMM(SCTM,.SCADDFLD,DT,.SCNEWTM,.SCOLDTM,.SCBADTM)
"RTN","SCAPMC6",77,0)
 Q (SCNEWCNT+SCOLDCNT)_U_SCNEWCNT_U_SCOLDCNT_U_SCBADCNT
"RTN","SCAPMC6",78,0)
 ;
"RTN","SCAPMC6",79,0)
OKDATA() ;setup/check variables
"RTN","SCAPMC6",80,0)
 N SCOK
"RTN","SCAPMC6",81,0)
 S SCOK=1
"RTN","SCAPMC6",82,0)
 D INIT^SCAPMCU1(.SCOK)
"RTN","SCAPMC6",83,0)
 IF '$D(^DPT(DFN,0))!('$D(^SCTM(404.51,SCTM,0))) D  S SCOK=0
"RTN","SCAPMC6",84,0)
 . S SCPARM("PATIENT")=DFN
"RTN","SCAPMC6",85,0)
 . S SCPARM("TEAM")=SCTM
"RTN","SCAPMC6",86,0)
 . D ERR^SCAPMCU1(SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC6",87,0)
 S:'$G(SCACT) SCACT=DT
"RTN","SCAPMC6",88,0)
 Q SCOK
"RTN","SCAPMC7")
0^24^B7259229
"RTN","SCAPMC7",1,0)
SCAPMC7 ;ALB/REW - Team APIs:INPTTM ; 5 Jul 1995
"RTN","SCAPMC7",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC7",3,0)
 ;;1.0
"RTN","SCAPMC7",4,0)
INPTTM(DFN,SCPTTM,SCINACT,SCERR) ;inactivate patient from a team (pt tm assgn - #404.42
"RTN","SCAPMC7",5,0)
 ; input:
"RTN","SCAPMC7",6,0)
 ;  DFN     = pointer to PATIENT file (#2)
"RTN","SCAPMC7",7,0)
 ;  SCPTTM  = pointer to pt team assign file (#404.42)
"RTN","SCAPMC7",8,0)
 ;  SCINACT = date to inactivate [default=DT]
"RTN","SCAPMC7",9,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC7",10,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC7",11,0)
 ;
"RTN","SCAPMC7",12,0)
 ; Output:
"RTN","SCAPMC7",13,0)
 ;  SCOK    = 1 if inactivation entry made to file 404.42, 0 ow
"RTN","SCAPMC7",14,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC7",15,0)
 ;             Foramt:
"RTN","SCAPMC7",16,0)
 ;  @SCERR@(0)=Number of erros, undefined if none
"RTN","SCAPMC7",17,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC7",18,0)
 ;               Piece     Description
"RTN","SCAPMC7",19,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC7",20,0)
 N SCTM,SC,SCPARM,SCESEQ,SCLSEQ,SCOK
"RTN","SCAPMC7",21,0)
 S SCOK=0
"RTN","SCAPMC7",22,0)
 G:'$$OKDATA APTTMQ ;setup/check variables
"RTN","SCAPMC7",23,0)
 S SCTM=+$P($G(^SCPT(404.42,SCPTTM,0)),U,3)
"RTN","SCAPMC7",24,0)
 IF '$$PTTMACT(DFN,SCTM,SCINACT,.SCERR) D  G APTTMQ
"RTN","SCAPMC7",25,0)
 .S SCOK=0
"RTN","SCAPMC7",26,0)
 .S SCPARM("INACTIVE DATE")=SCINACT
"RTN","SCAPMC7",27,0)
 .D ERR^SCAPMCU1(SCESEQ,40442001,.SCPARM,"",.SCERR)
"RTN","SCAPMC7",28,0)
 ELSE  D
"RTN","SCAPMC7",29,0)
 .S SCOK=1
"RTN","SCAPMC7",30,0)
 .S SC($J,404.42,SCPTTM_",",.09)=SCINACT
"RTN","SCAPMC7",31,0)
 .D UPDATE^DIE("","SC($J)","SCIEN",.SCERR)
"RTN","SCAPMC7",32,0)
 .I $D(@SCERR@("DIERR")) S SCOK=0
"RTN","SCAPMC7",33,0)
APTTMQ Q SCOK
"RTN","SCAPMC7",34,0)
 ;
"RTN","SCAPMC7",35,0)
PTTMACT(DFN,SCTM,SCDT,SCERR) ;is patient assigned to a team on a given date-time?
"RTN","SCAPMC7",36,0)
 N SCTMDTS,SCTMLST,SCOK
"RTN","SCAPMC7",37,0)
 S SCOK=0
"RTN","SCAPMC7",38,0)
 S (SCTMDTS("BEGIN"),SCTMDTS("END"))=SCDT
"RTN","SCAPMC7",39,0)
 IF $$TMPT^SCAPMC3(DFN,"SCTMDTS","","SCTMLST",.SCERR) S:$D(SCTMLST("SCTM",SCTM)) SCOK=1
"RTN","SCAPMC7",40,0)
 Q SCOK
"RTN","SCAPMC7",41,0)
OKDATA() ;check/setup variables - return 1 if ok/0 if error
"RTN","SCAPMC7",42,0)
 N SCOK
"RTN","SCAPMC7",43,0)
 S SCOK=1
"RTN","SCAPMC7",44,0)
 D INIT^SCAPMCU1(.SCOK)
"RTN","SCAPMC7",45,0)
 IF '$D(^DPT(DFN,0))!('$D(^SCPT(404.42,SCPTTM,0))) D  S SCOK=0
"RTN","SCAPMC7",46,0)
 . S SCPARM("PATIENT")=$G(DFN,"Undefined")
"RTN","SCAPMC7",47,0)
 . S SCPARM("Pt TEAM Asnt")=$G(SCPTTM,"Undefined")
"RTN","SCAPMC7",48,0)
 . D ERR^SCAPMCU1(SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC7",49,0)
 S:'$G(SCACT) SCACT=DT
"RTN","SCAPMC7",50,0)
 S:'$G(SCINACT) SCINACT=DT
"RTN","SCAPMC7",51,0)
 Q SCOK
"RTN","SCAPMC7",52,0)
 ;
"RTN","SCAPMC7",53,0)
INPTATM(DFNA,SCTM,SCFIELDA,SCACT,SCERR,SCNEWTM,SCOLDTM,SCBADTM) ;list of patients assigned to a team (404.42)
"RTN","SCAPMC7",54,0)
 ; input: as per ACPTTM (above with the following change:)
"RTN","SCAPMC7",55,0)
 ;    DFNA    = is the literal value of a patient array (e.g. "scpt"
"RTN","SCAPMC7",56,0)
 ;              there is at least one scpt(dfn)="" defined
"RTN","SCAPMC7",57,0)
 ;    SCNEWTM = Subset of DFNA that was NEWLY assigned to Team [returned]
"RTN","SCAPMC7",58,0)
 ;    SCOLDTM = Subset of DFNA that was already assigned -Team [returned]
"RTN","SCAPMC7",59,0)
 ;    SCBADTP = Subset of DFNA that was NOT assigned to Team  [returned]
"RTN","SCAPMC7",60,0)
 ;    Note: The above three arrays return data in a user determined array
"RTN","SCAPMC7",61,0)
 ; output: Count of Patients: 
"RTN","SCAPMC7",62,0)
 ;           1             2            3               4
"RTN","SCAPMC7",63,0)
 ;    total assigned^newly assigned^assigned prior^not assigned
"RTN","SCAPMC7",64,0)
 N DFN,SCNEWCNT,SCOLDCNT,SCBADCNT,SCX
"RTN","SCAPMC7",65,0)
 S (SCNEWCNT,SCOLDCNT,SCBADCNT)=0
"RTN","SCAPMC7",66,0)
 S DFN=0 F  S DFN=$O(@DFNA@(DFN)) Q:'DFN  D
"RTN","SCAPMC7",67,0)
 .S SCPTTM=$$HISTPTTM^SCAPMCU2(DFN,.SCTM,.SCACT)
"RTN","SCAPMC7",68,0)
 .S SCX=$S(SCPTTM:$$INPTTM(.DFN,.SCPTTM,.SCFIELDA,.SCACT,.SCERR),1:0)
"RTN","SCAPMC7",69,0)
 .;  SCX = ien of 404.42^new?
"RTN","SCAPMC7",70,0)
 .IF $P(SCX,U,2) D  ;newly assigned
"RTN","SCAPMC7",71,0)
 ..S SCNEWCNT=SCNEWCNT+1
"RTN","SCAPMC7",72,0)
 ..S @SCNEWTM@(DFN)=+SCX   ;scnewtm
"RTN","SCAPMC7",73,0)
 .IF $P(SCX,U,1)&('$P($G(SCX),U,2)) D  ;old
"RTN","SCAPMC7",74,0)
 ..S SCOLDCNT=SCOLDCNT+1
"RTN","SCAPMC7",75,0)
 ..S @SCOLDTM@(DFN)=+SCX
"RTN","SCAPMC7",76,0)
 .IF 'SCX D
"RTN","SCAPMC7",77,0)
 ..S @SCBADTM@(DFN)=""
"RTN","SCAPMC7",78,0)
 ..S SCBADCNT=SCBADCNT+1
"RTN","SCAPMC7",79,0)
 Q (SCNEWCNT+SCOLDCNT)_U_SCNEWCNT_U_SCOLDCNT_U_SCBADCNT
"RTN","SCAPMC8")
0^25^B11536956
"RTN","SCAPMC8",1,0)
SCAPMC8 ;ALB/REW - Team API's:PRTP ; JUN 26, 1995
"RTN","SCAPMC8",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC8",3,0)
 ;;1.0
"RTN","SCAPMC8",4,0)
PRTP(SCTP,SCDATES,SCLIST,SCERR) ; -- list of practitioners for position
"RTN","SCAPMC8",5,0)
 ; input:
"RTN","SCAPMC8",6,0)
 ;  SCTP = ien of TEAM POSITION[required]
"RTN","SCAPMC8",7,0)
 ;  SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC8",8,0)
 ;                      [default: TODAY]
"RTN","SCAPMC8",9,0)
 ;         ("END")   = end date to search (inclusive)
"RTN","SCAPMC8",10,0)
 ;                       [default: DT]
"RTN","SCAPMC8",11,0)
 ;         ("INCL")  = 1: only use pracitioners who were on
"RTN","SCAPMC8",12,0)
 ;                       team for entire date range
"RTN","SCAPMC8",13,0)
 ;                    0: anytime in date range
"RTN","SCAPMC8",14,0)
 ;                      [default: 1] 
"RTN","SCAPMC8",15,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC8",16,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC8",17,0)
 ;
"RTN","SCAPMC8",18,0)
 ; Output:
"RTN","SCAPMC8",19,0)
 ;  SCLIST() = array of practitioners
"RTN","SCAPMC8",20,0)
 ;             Format:
"RTN","SCAPMC8",21,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC8",22,0)
 ;               Piece     Description
"RTN","SCAPMC8",23,0)
 ;                 1       IEN of NEW PERSON file entry (#200)
"RTN","SCAPMC8",24,0)
 ;                 2       Name of person
"RTN","SCAPMC8",25,0)
 ;                 3       IEN of TEAM POSITION file (#404.57)
"RTN","SCAPMC8",26,0)
 ;                 4       Name of Position
"RTN","SCAPMC8",27,0)
 ;                 5       IEN OF USR CLASS(#8930) of POSITION (#404.57)
"RTN","SCAPMC8",28,0)
 ;                 6       USR Class Name
"RTN","SCAPMC8",29,0)
 ;                 7       IEN of STANDARD POSITION (#403.46)
"RTN","SCAPMC8",30,0)
 ;                 8       Standard Role (Position) Name
"RTN","SCAPMC8",31,0)
 ;                 9       Activation Date for 404.52 (not 404.59!)
"RTN","SCAPMC8",32,0)
 ;                 10      Inactivation Date for 404.52
"RTN","SCAPMC8",33,0)
 ;                 11      IEN of Position Ass History (404.52)
"RTN","SCAPMC8",34,0)
 ;                 12      IEN of Preceptor Position
"RTN","SCAPMC8",35,0)
 ;                 13      Name of Preceptor Position
"RTN","SCAPMC8",36,0)
 ;  @sclist@('scpr',sc200,sctp,scact,scn)=""
"RTN","SCAPMC8",37,0)
 ;
"RTN","SCAPMC8",38,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC8",39,0)
 ;             Foramt:
"RTN","SCAPMC8",40,0)
 ;  @SCERR@(0) = Number of errors, undefined if none
"RTN","SCAPMC8",41,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC8",42,0)
 ;               Piece     Description
"RTN","SCAPMC8",43,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC8",44,0)
 ;   Returned: 1 if ok, 0 if error
"RTN","SCAPMC8",45,0)
 ;
"RTN","SCAPMC8",46,0)
 ; -- initialize control variables
"RTN","SCAPMC8",47,0)
 ;
"RTN","SCAPMC8",48,0)
ST N SCPOSNM,SCPOS0,SCNODE,SCEFF,SCINDT,SCPAH,SCSTDPOS,SCTPNODE,SCUSR,SCPRTP,SCBOSS
"RTN","SCAPMC8",49,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCP,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCAPMC8",50,0)
 G:'$$OKDATA PRACQ ; setup/check variables
"RTN","SCAPMC8",51,0)
 ; --    get list from position assignments
"RTN","SCAPMC8",52,0)
 S SCEFF=-(SCEND+.000001)
"RTN","SCAPMC8",53,0)
 F  S SCEFF=$O(^SCTM(404.52,"AIDT",SCTP,1,SCEFF)) Q:'SCEFF  D
"RTN","SCAPMC8",54,0)
 .Q:'$$ACTHIST^SCAPMCU2(404.52,SCTP,SCDATES,.SCERR,"SCPRTP")
"RTN","SCAPMC8",55,0)
 .S SCPAH=0
"RTN","SCAPMC8",56,0)
 .S SCTPNODE=^SCTM(404.57,SCTP,0)
"RTN","SCAPMC8",57,0)
 .S SCSTDPOS=$P(SCTPNODE,U,3)
"RTN","SCAPMC8",58,0)
 .S SCUSR=$P(SCTPNODE,U,13)
"RTN","SCAPMC8",59,0)
 .F  S SCPAH=$O(^SCTM(404.52,"AIDT",SCTP,1,SCEFF,SCPAH)) Q:'SCPAH  D
"RTN","SCAPMC8",60,0)
 ..N SC200,SCACT
"RTN","SCAPMC8",61,0)
 ..S SCNODE=^SCTM(404.52,SCPAH,0)
"RTN","SCAPMC8",62,0)
 ..S SCACT=+$P(SCNODE,U,2)
"RTN","SCAPMC8",63,0)
 ..S SC200=+$P(SCNODE,U,3)
"RTN","SCAPMC8",64,0)
 ..Q:$D(@SCLIST@("SCPR",SC200,SCTP,SCACT))
"RTN","SCAPMC8",65,0)
 ..S SCINDT=$O(^SCTM(404.52,"AIDT",SCTP,0,SCEFF),-1)
"RTN","SCAPMC8",66,0)
 ..S SCINDT=$S(SCINDT:-SCINDT,1:"")
"RTN","SCAPMC8",67,0)
 ..Q:'$$DTCHK^SCAPU1(SCBEGIN,SCEND,SCINCL,SCACT,SCINDT)
"RTN","SCAPMC8",68,0)
 ..S SCN=$G(@SCLIST@(0),0)+1
"RTN","SCAPMC8",69,0)
 ..S @SCLIST@(0)=SCN
"RTN","SCAPMC8",70,0)
 ..S SCBOSS=$P(SCTPNODE,U,10)
"RTN","SCAPMC8",71,0)
 ..S @SCLIST@(SCN)=SC200_U_$P($G(^VA(200,SC200,0)),U,1)_U_SCTP_U_$P(SCTPNODE,U,1)_U_SCUSR_U_$P($G(^USR(8930,+SCUSR,0)),U,1)_U_SCSTDPOS_U_$P($G(^SD(403.46,+SCSTDPOS,0)),U,1)_U_SCACT_U_SCINDT_U_SCPAH_U_SCBOSS_U_$P($G(^SCTM(404.57,+SCBOSS,0)),U,1)
"RTN","SCAPMC8",72,0)
 ..S @SCLIST@("SCPR",SC200,SCTP,SCACT,SCN)=""
"RTN","SCAPMC8",73,0)
PRACQ Q $G(@SCERR@(0))<1
"RTN","SCAPMC8",74,0)
OKDATA() ;check/setup variables - return 1 if ok/0 if error
"RTN","SCAPMC8",75,0)
 N SCOK
"RTN","SCAPMC8",76,0)
 S SCOK=1
"RTN","SCAPMC8",77,0)
 D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)
"RTN","SCAPMC8",78,0)
 IF '$D(^SCTM(404.57,+$G(SCTP),0)) D  S SCOK=0
"RTN","SCAPMC8",79,0)
 . S SCPARM("POSITION")=$G(SCTP,"Undefined")
"RTN","SCAPMC8",80,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC8",81,0)
 ; -- is it a valid TEAM ien passed (Error # 4045101 in DIALOG file)
"RTN","SCAPMC8",82,0)
 IF '$D(^SCTM(404.57,+$G(SCTP),0))!('$D(SCDATES)) D  S SCOK=0
"RTN","SCAPMC8",83,0)
 . S SCPARM("POSITION")=$S('$D(SCTP):"Undefined",1:SCTP)
"RTN","SCAPMC8",84,0)
 . S SCPARM("DATES")=$S('$D(SCDATES):"Undefined",1:SCDATES)
"RTN","SCAPMC8",85,0)
 . D ERR^SCAPMCU1(SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC8",86,0)
 Q SCOK
"RTN","SCAPMC9")
0^26^B5281874
"RTN","SCAPMC9",1,0)
SCAPMC9 ;ALB/REW - Team API's:PRCL ; JUN 26, 1995
"RTN","SCAPMC9",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMC9",3,0)
 ;;1.0
"RTN","SCAPMC9",4,0)
PRCL(SC44,SCDATES,SCPOSA,SCUSRA,SCROLEA,SCLIST,SCERR) ;-- list of practitioners for clinic
"RTN","SCAPMC9",5,0)
 ; input:
"RTN","SCAPMC9",6,0)
 ;  SC44 = ien of CLINIC <FILE#44> [required]
"RTN","SCAPMC9",7,0)
 ;  SCDATES("BEGIN") = begin date to search (inclusive)
"RTN","SCAPMC9",8,0)
 ;                       [default: TODAY]
"RTN","SCAPMC9",9,0)
 ;         ("END")   = end date to search (inclusive)
"RTN","SCAPMC9",10,0)
 ;                       [default: TODAY]
"RTN","SCAPMC9",11,0)
 ;         ("INCL")  = 1: only use pracitioners who were on
"RTN","SCAPMC9",12,0)
 ;                       team for entire date range
"RTN","SCAPMC9",13,0)
 ;                     0: anytime in date range
"RTN","SCAPMC9",14,0)
 ;                      [default: 1] 
"RTN","SCAPMC9",15,0)
 ;  SCPOSA= array of positions to include reverse with scposa('exclude')
"RTN","SCAPMC9",16,0)
 ;  SCUSRA= array of usr classes included reverse with scusra('exclude')
"RTN","SCAPMC9",17,0)
 ;  SCROLEA= array of roles included reverse with SCROLEA('exclude')
"RTN","SCAPMC9",18,0)
 ;  SCERR = array NAME to store error messages.
"RTN","SCAPMC9",19,0)
 ;          [ex. ^TMP("ORXX",$J)]
"RTN","SCAPMC9",20,0)
 ;
"RTN","SCAPMC9",21,0)
 ; Output:
"RTN","SCAPMC9",22,0)
 ;  SCLIST() = array of practitioners
"RTN","SCAPMC9",23,0)
 ;             Format:
"RTN","SCAPMC9",24,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC9",25,0)
 ;               Piece     Description
"RTN","SCAPMC9",26,0)
 ;                 1       IEN of NEW PERSON file entry (#200)
"RTN","SCAPMC9",27,0)
 ;                 2       Name of person
"RTN","SCAPMC9",28,0)
 ;                 3       IEN of TEAM POSITION file (#404.57)
"RTN","SCAPMC9",29,0)
 ;                 4       Name of Position
"RTN","SCAPMC9",30,0)
 ;                 5       IEN OF USR CLASS(#8930) of POSITION (#404.57)
"RTN","SCAPMC9",31,0)
 ;                 6       USR Class Name
"RTN","SCAPMC9",32,0)
 ;                 7       IEN of STANDARD POSITION (#403.46)
"RTN","SCAPMC9",33,0)
 ;                 8       Standard Role (Position) Name
"RTN","SCAPMC9",34,0)
 ;                 9       Activation Date for 404.52 (not 404.59!)
"RTN","SCAPMC9",35,0)
 ;                 10      Inactivation Date for 404.52
"RTN","SCAPMC9",36,0)
 ;                 11      IEN of Position Ass History (404.52)
"RTN","SCAPMC9",37,0)
 ;                 12      IEN of Preceptor Position
"RTN","SCAPMC9",38,0)
 ;                 13      Name of Preceptor Position
"RTN","SCAPMC9",39,0)
 ;  @sclist@('scpr',sc200,sctp,scact,scn)=""
"RTN","SCAPMC9",40,0)
 ;
"RTN","SCAPMC9",41,0)
 ;  SCERR() = Array of DIALOG file messages(errors) .
"RTN","SCAPMC9",42,0)
 ;             Foramt:
"RTN","SCAPMC9",43,0)
 ;  @SCERR@(0) = Number of errors, undefined if none
"RTN","SCAPMC9",44,0)
 ;               Subscript: Sequential # from 1 to n
"RTN","SCAPMC9",45,0)
 ;               Piece     Description
"RTN","SCAPMC9",46,0)
 ;                 1       IEN of DIALOG file
"RTN","SCAPMC9",47,0)
 ;   Returned: 1 if ok, 0 if error
"RTN","SCAPMC9",48,0)
 ;
"RTN","SCAPMC9",49,0)
 ;
"RTN","SCAPMC9",50,0)
ST N SCPOSNM,SCTP,SCPOS0,SCOK,SCND,SCU,SCR,SCPRCL
"RTN","SCAPMC9",51,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCP,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCAPMC9",52,0)
 ; -- initialize control variables
"RTN","SCAPMC9",53,0)
 G:'$$OKDATA PRACQ ; check/setup variables
"RTN","SCAPMC9",54,0)
 ; -- loop through team positions
"RTN","SCAPMC9",55,0)
 S SCTP=0
"RTN","SCAPMC9",56,0)
 F  S SCTP=$O(^SCTM(404.57,"D",SC44,SCTP)) Q:SCTP=""  D
"RTN","SCAPMC9",57,0)
 .Q:'$$OKARRAY^SCAPU1(.SCPOSA,SCTP)
"RTN","SCAPMC9",58,0)
 .S SCND=$G(^SCTM(404.57,SCTP,0))
"RTN","SCAPMC9",59,0)
 .S SCU=$P(SCND,U,13)
"RTN","SCAPMC9",60,0)
 .Q:'$$OKUSRCL^SCAPU1(.SCUSRA,SCU)
"RTN","SCAPMC9",61,0)
 .S SCR=$P(SCND,U,3)
"RTN","SCAPMC9",62,0)
 .Q:'$$OKARRAY^SCAPU1(.SCROLEA,.SCR)
"RTN","SCAPMC9",63,0)
 .IF 'SCTP D  Q
"RTN","SCAPMC9",64,0)
 ..S SCPARM("Position")=$G(SCTP,"Undefined")
"RTN","SCAPMC9",65,0)
 ..D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",SCERR)
"RTN","SCAPMC9",66,0)
 .ELSE  D
"RTN","SCAPMC9",67,0)
 .S SCX=$$ACTHIST^SCAPMCU2(404.52,SCTP,SCDATES,.SCERR,"SCPRCL")
"RTN","SCAPMC9",68,0)
 .S:SCX X=$$PRTP^SCAPMC8(SCTP,SCDATES,.SCLIST,.SCERR)
"RTN","SCAPMC9",69,0)
PRACQ Q $G(@SCERR@(0))<1
"RTN","SCAPMC9",70,0)
OKDATA() ;check/setup variables - return 1 if ok/ 0 if error
"RTN","SCAPMC9",71,0)
 N SCOK
"RTN","SCAPMC9",72,0)
 S SCOK=1
"RTN","SCAPMC9",73,0)
 D INIT^SCAPMCU1(.SCOK) ; set default dates & error array (if undefined)
"RTN","SCAPMC9",74,0)
 ;
"RTN","SCAPMC9",75,0)
 IF '$D(^SC(+$G(SC44),0)) D  S SCOK=0
"RTN","SCAPMC9",76,0)
 . S SCPARM("CLINIC")=$G(SC44,"Undefined")
"RTN","SCAPMC9",77,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMC9",78,0)
 Q SCOK
"RTN","SCAPMCU1")
0^27^B31780292
"RTN","SCAPMCU1",1,0)
SCAPMCU1 ;ALB/REW - TEAM API UTILITIES ; 30 Jun 95
"RTN","SCAPMCU1",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMCU1",3,0)
 ;;1.0
"RTN","SCAPMCU1",4,0)
INIT(SCOK) ; setup date array &  error arrays if none passed in
"RTN","SCAPMCU1",5,0)
 ;  VARIABLES SET:
"RTN","SCAPMCU1",6,0)
 ;     SCOK - SET TO 0 IF ERROR
"RTN","SCAPMCU1",7,0)
 ;
"RTN","SCAPMCU1",8,0)
 ;  Makes sure the following are defined:
"RTN","SCAPMCU1",9,0)
 ;   scbegin,scend,scincl,@scdates('begin'),@scdates@('end'),@scdates@('incl') - defaults are today & inclusive
"RTN","SCAPMCU1",10,0)
 ;
"RTN","SCAPMCU1",11,0)
 ;    Note: you should NEW the above just before making this call
"RTN","SCAPMCU1",12,0)
 ;                     ---
"RTN","SCAPMCU1",13,0)
 S (SCN,SCESEQ,SCLSEQ)=0
"RTN","SCAPMCU1",14,0)
 IF '$L($G(SCERR)) K ^TMP("SCERR",$J) S SCERR="^TMP(""SCERR"",$J)"
"RTN","SCAPMCU1",15,0)
 IF '$L($G(SCLIST)) S SCLIST="^TMP(""SC TMP LIST"",$J)" K ^TMP("SC TMP LIST",$J)
"RTN","SCAPMCU1",16,0)
 IF (SCERR="SCERR")!(SCERR="SCLIST")!((SCERR'?1A1.7AN)&(SCERR'?1"^"1A.20E)) D  S SCOK=0
"RTN","SCAPMCU1",17,0)
 . S SCPARM("ERROR ARRAY")=$G(SCERR,"Undefined")
"RTN","SCAPMCU1",18,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMCU1",19,0)
 IF SCLIST="SCERR"!(SCLIST="SCLIST")!((SCLIST'?1A1.7AN.1"(".60E)&(SCLIST'?1"^"1A1.7AN.1"(".60E)) S SCOK=0 D  S SCOK=0
"RTN","SCAPMCU1",20,0)
 . S SCPARM("OUTPUT ARRAY")=$G(SCLIST,"Undefined")
"RTN","SCAPMCU1",21,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMCU1",22,0)
 S:'$D(SCDATES)!($G(SCDATES)="") SCDATES="SCDTS"
"RTN","SCAPMCU1",23,0)
 S SCBEGIN=$G(SCDATES("BEGIN"),DT)
"RTN","SCAPMCU1",24,0)
 S SCEND=$G(SCDATES("END"),DT)
"RTN","SCAPMCU1",25,0)
 S SCINCL=$G(SCDATES("INCL"),1)
"RTN","SCAPMCU1",26,0)
 S (SCN,SCESEQ,SCLSEQ)=0
"RTN","SCAPMCU1",27,0)
 S:'$D(@SCDATES@("BEGIN")) @SCDATES@("BEGIN")=SCBEGIN
"RTN","SCAPMCU1",28,0)
 S:'$D(@SCDATES@("END")) @SCDATES@("END")=SCEND
"RTN","SCAPMCU1",29,0)
 S:'$D(@SCDATES@("INCL")) @SCDATES@("INCL")=SCINCL
"RTN","SCAPMCU1",30,0)
 Q
"RTN","SCAPMCU1",31,0)
 ;
"RTN","SCAPMCU1",32,0)
PCPOSCNT(SCTP,DATE,PCONLY) ;this is the count of PC patients assigned to position
"RTN","SCAPMCU1",33,0)
 ; Input: SCTP - ien to 404.57
"RTN","SCAPMCU1",34,0)
 ;        DATE - date of concern, default=DT
"RTN","SCAPMCU1",35,0)
 ;        PCONLY - 1= must be pc, 0=all assignments 1=DEFAULT
"RTN","SCAPMCU1",36,0)
 ;returns count of patient assignments or -1 if error
"RTN","SCAPMCU1",37,0)
 ;
"RTN","SCAPMCU1",38,0)
 N SCX,SCCTDTS,SCPTTP,SCERR,X,DFN,SCCNT,SCY,DFN,NODE
"RTN","SCAPMCU1",39,0)
 S SCCTDTS("BEGIN")=$G(DATE,DT)
"RTN","SCAPMCU1",40,0)
 S SCCTDTS("END")=SCCTDTS("BEGIN")
"RTN","SCAPMCU1",41,0)
 S SCCNT=0
"RTN","SCAPMCU1",42,0)
 S:'$L($G(PCONLY)) PCONLY=1
"RTN","SCAPMCU1",43,0)
 S SCX=$$PTTP^SCAPMC(SCTP,"SCCTDTS","^TMP(""SCPTTP"",$J,""CNT"")","SCERRX")
"RTN","SCAPMCU1",44,0)
 IF 'SCX S SCCNT=-1 G QTPCPC
"RTN","SCAPMCU1",45,0)
 F SCY=1:1 S NODE=$G(^TMP("SCPTTP",$J,"CNT",SCY)) Q:'NODE  D
"RTN","SCAPMCU1",46,0)
 .S DFN=+NODE
"RTN","SCAPMCU1",47,0)
 .IF 'PCONLY D
"RTN","SCAPMCU1",48,0)
 ..S SCCNT=SCCNT+1
"RTN","SCAPMCU1",49,0)
 .ELSE  D
"RTN","SCAPMCU1",50,0)
 ..S:SCTP=+$$GETPC^SCAPMCU2(DFN,DATE) SCCNT=SCCNT+1
"RTN","SCAPMCU1",51,0)
 S:$P($G(NODE),U,1)=0 SCCNT=-1 ;should only happen with corrupt data - 1st pc of 404.43 file points to non-existant 404.42 entry
"RTN","SCAPMCU1",52,0)
QTPCPC K ^TMP("SCPTTP",$J,"CNT")
"RTN","SCAPMCU1",53,0)
 Q SCCNT
"RTN","SCAPMCU1",54,0)
 ;
"RTN","SCAPMCU1",55,0)
TEAMCNT(SCTM,DATE) ;this is a more efficient version of the count
"RTN","SCAPMCU1",56,0)
 N DFN,SCCNT,SCNODE,HISTIEN
"RTN","SCAPMCU1",57,0)
 Q:'$G(SCTM) 0
"RTN","SCAPMCU1",58,0)
 S DATE=$G(DATE,DT)
"RTN","SCAPMCU1",59,0)
 S (DFN,SCCNT)=0
"RTN","SCAPMCU1",60,0)
 F  S DFN=$O(^SCPT(404.42,"ATMPT",SCTM,DFN)) Q:'DFN  D
"RTN","SCAPMCU1",61,0)
 .S HISTIEN=0
"RTN","SCAPMCU1",62,0)
 .F  S HISTIEN=$O(^SCPT(404.42,"ATMPT",SCTM,DFN,HISTIEN)) Q:'HISTIEN  D
"RTN","SCAPMCU1",63,0)
 ..S SCNODE=$G(^SCPT(404.42,HISTIEN,0))
"RTN","SCAPMCU1",64,0)
 ..Q:$P(SCNODE,U,9)&($P(SCNODE,U,9)<DATE)
"RTN","SCAPMCU1",65,0)
 ..Q:$P(SCNODE,U,2)>DATE
"RTN","SCAPMCU1",66,0)
 ..S SCCNT=SCCNT+1
"RTN","SCAPMCU1",67,0)
 Q SCCNT
"RTN","SCAPMCU1",68,0)
 ;
"RTN","SCAPMCU1",69,0)
TEAMCNT2(SCTM,DATE) ;this is the count of patients assigned to the team on a date
"RTN","SCAPMCU1",70,0)
 ; Input: SCTM - ien to 404.51
"RTN","SCAPMCU1",71,0)
 ;        DATE - date of concern, default=DT
"RTN","SCAPMCU1",72,0)
 N SCX,SCDATES,SCTEAMS,SCERR,X
"RTN","SCAPMCU1",73,0)
 S SCDATES("BEGIN")=$G(DATE,DT)
"RTN","SCAPMCU1",74,0)
 S SCDATES("END")=SCDATES("BEGIN")
"RTN","SCAPMCU1",75,0)
 S SCX=$$PTTM^SCAPMC(SCTM,"SCDATES","^TMP(""SCTEAMS"",$J,""CNT"")","SCERRX")
"RTN","SCAPMCU1",76,0)
 IF 'SCX S X=-SCX
"RTN","SCAPMCU1",77,0)
 ELSE  D
"RTN","SCAPMCU1",78,0)
 .S DFN=0
"RTN","SCAPMCU1",79,0)
 .F X=0:1 S DFN=$O(^TMP("SCTEAMS",$J,"CNT","SCPTA",DFN)) Q:'DFN
"RTN","SCAPMCU1",80,0)
 K ^TMP("SCTEAMS",$J,"CNT")
"RTN","SCAPMCU1",81,0)
 Q X
"RTN","SCAPMCU1",82,0)
ACTHISTB(FILE,IEN) ;boolean active function
"RTN","SCAPMCU1",83,0)
 ;MOVED TO SCAPMCU2
"RTN","SCAPMCU1",84,0)
 Q $$ACTHISTB^SCAPMCU2(.FILE,.IEN)
"RTN","SCAPMCU1",85,0)
ACTHIST(FILE,IEN,SCDATES,SCERR) ;is entry active for a time period?
"RTN","SCAPMCU1",86,0)
 ;MOVED TO SCAPMCU2
"RTN","SCAPMCU1",87,0)
 Q $$ACTHIST^SCAPMCU2(.FILE,.IEN,.SCDATES,.SCERR)
"RTN","SCAPMCU1",88,0)
 ;
"RTN","SCAPMCU1",89,0)
LASTDATE(FILE,IEN) ;gets last date for team or position from 404.52,404.58,404.59 - uses DATES function below
"RTN","SCAPMCU1",90,0)
 ; Input Parameters:
"RTN","SCAPMCU1",91,0)
 ;    File = either 404.52 or 404.58 or 404.59
"RTN","SCAPMCU1",92,0)
 ;    IEN  = pointer to team(404.51) or team position(404.57)
"RTN","SCAPMCU1",93,0)
 ; Returned:
"RTN","SCAPMCU1",94,0)
 ;  -1 if error,o/w latest date defined 0=no historical dates
"RTN","SCAPMCU1",95,0)
 N SCX
"RTN","SCAPMCU1",96,0)
 S SCX=$$DATES(.FILE,.IEN,3990101) ; gets dates as of 1/1/2999
"RTN","SCAPMCU1",97,0)
 Q $S($P(SCX,U,1)<0:-1,$P(SCX,U,3):$P(SCX,U,3),1:+$P(SCX,U,2))
"RTN","SCAPMCU1",98,0)
 ;
"RTN","SCAPMCU1",99,0)
DATES(FILE,IEN,DATE) ;used by files 404.52, 404.58 & 404.59 to return latest activation date & inactivation date for a practitioner or team or team position for a given date 
"RTN","SCAPMCU1",100,0)
 ; Input Parameters:
"RTN","SCAPMCU1",101,0)
 ;    File = either 404.52 or 404.58 or 404.59
"RTN","SCAPMCU1",102,0)
 ;    IEN  = pointer to team(404.51) or team position(404.57)
"RTN","SCAPMCU1",103,0)
 ;    DATE = default=DT
"RTN","SCAPMCU1",104,0)
 ;  Returned:
"RTN","SCAPMCU1",105,0)
 ;  status^actdate^inactdate^scien^first actdate? [1=yes/null=no]
"RTN","SCAPMCU1",106,0)
ST N ROOT,EFFDT,STATUS,ACTDT,INACTDT,X,FUTURE,PREVDT,SCTODAY,PREVST,SCSTAT,SCIEN,SCLAST
"RTN","SCAPMCU1",107,0)
 S:'$G(DATE) DATE=DT
"RTN","SCAPMCU1",108,0)
 S STATUS=-1,SCTODAY=0
"RTN","SCAPMCU1",109,0)
 S SCSTAT=1
"RTN","SCAPMCU1",110,0)
 G:('$G(FILE))!("^404.52^404.58^404.59^"'[$G(FILE))!('$G(IEN)) QTDATES
"RTN","SCAPMCU1",111,0)
 S ROOT="^SCTM("_FILE_",""AIDT"",IEN,SCSTAT"
"RTN","SCAPMCU1",112,0)
 S EFFDT=-DATE
"RTN","SCAPMCU1",113,0)
 S X=ROOT_")"
"RTN","SCAPMCU1",114,0)
 ;if there is an active x-ref
"RTN","SCAPMCU1",115,0)
 IF $D(@X) D
"RTN","SCAPMCU1",116,0)
 .;if today is an activation date
"RTN","SCAPMCU1",117,0)
 .IF $D(@X@(EFFDT)) S ACTDT=-EFFDT
"RTN","SCAPMCU1",118,0)
 .;if today is not an activation date get previous one
"RTN","SCAPMCU1",119,0)
 .ELSE  D
"RTN","SCAPMCU1",120,0)
 ..S ACTDT=-$O(@X@(EFFDT))
"RTN","SCAPMCU1",121,0)
 .;if no activation in past get one in future
"RTN","SCAPMCU1",122,0)
 .S:'$G(ACTDT) ACTDT=-$O(@X@(EFFDT),-1),FUTURE=1
"RTN","SCAPMCU1",123,0)
 .S SCSTAT=0
"RTN","SCAPMCU1",124,0)
 .S INACTDT=$O(@X@(-(ACTDT-.000001)),-1),INACTDT=$S(INACTDT:-INACTDT,1:INACTDT)
"RTN","SCAPMCU1",125,0)
 .S STATUS=$$DTCHK^SCAPU1(DATE,DATE,0,ACTDT,INACTDT)
"RTN","SCAPMCU1",126,0)
 .S SCSTAT=STATUS
"RTN","SCAPMCU1",127,0)
 .S X=ROOT_","_$S(SCSTAT:-ACTDT,1:-INACTDT)_")"
"RTN","SCAPMCU1",128,0)
 .S SCIEN=$O(@X@(0))
"RTN","SCAPMCU1",129,0)
 ELSE  D
"RTN","SCAPMCU1",130,0)
 .S STATUS=0
"RTN","SCAPMCU1",131,0)
QTDATES Q STATUS_U_$G(ACTDT)_U_$G(INACTDT)_U_$G(SCIEN)_U_$G(FUTURE)
"RTN","SCAPMCU1",132,0)
 ;
"RTN","SCAPMCU1",133,0)
ERR(SEQ,ERNUM,PARMS,OUTPUT,SCER) ;-- process errors
"RTN","SCAPMCU1",134,0)
 ;if no dialog entry 4040000 will be processed
"RTN","SCAPMCU1",135,0)
 S ERNUM=$G(ERNUM,4040000)
"RTN","SCAPMCU1",136,0)
 S:'$$GET1^DIQ(.84,$G(ERNUM)_",",.01) ERNUM=4040000
"RTN","SCAPMCU1",137,0)
 IF SCER]"" D
"RTN","SCAPMCU1",138,0)
 . S SEQ=$G(SEQ,0)+1
"RTN","SCAPMCU1",139,0)
 . S SCER(SEQ)=ERNUM
"RTN","SCAPMCU1",140,0)
 . S @SCER@(0)=$G(@SCER@(0))+1
"RTN","SCAPMCU1",141,0)
 .D BLD^DIALOG(.ERNUM,.PARMS,.OUTPUT,.SCER)
"RTN","SCAPMCU1",142,0)
 Q
"RTN","SCAPMCU1",143,0)
 ;
"RTN","SCAPMCU1",144,0)
OKTMPOS(TEAM,POSITION,DATE) ;validate legitimate position in a team for a dt
"RTN","SCAPMCU1",145,0)
 ; used in screen for pc practitioner position of patient team assngt
"RTN","SCAPMCU1",146,0)
 ;
"RTN","SCAPMCU1",147,0)
 ; TEAM - ien of team file
"RTN","SCAPMCU1",148,0)
 ; POSITION - ien of team position file
"RTN","SCAPMCU1",149,0)
 ; DATE     - date of interest
"RTN","SCAPMCU1",150,0)
 ; return 1 if ok, 0 ow
"RTN","SCAPMCU1",151,0)
 ;
"RTN","SCAPMCU1",152,0)
CHK ;
"RTN","SCAPMCU1",153,0)
 N SCTP,SCOK,SCPOS0
"RTN","SCAPMCU1",154,0)
 S SCOK=0
"RTN","SCAPMCU1",155,0)
 S:'$L($G(SCERR)) SCERR="^TMP(""SCERR"",$J)"
"RTN","SCAPMCU1",156,0)
 IF '$D(^SCTM(404.51,+$G(TEAM),0)) D  G QTOKTP
"RTN","SCAPMCU1",157,0)
 . S SCPARM("TEAM")=$G(TEAM,"Undefined")
"RTN","SCAPMCU1",158,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMCU1",159,0)
 IF '$D(^SCTM(404.57,+$G(POSITION),0)) D  G QTOKTP
"RTN","SCAPMCU1",160,0)
 . S SCPARM("POSITION")=$G(POSITION,"Undefined")
"RTN","SCAPMCU1",161,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMCU1",162,0)
 IF '$G(DATE) D  G QTOKTP
"RTN","SCAPMCU1",163,0)
 . S SCPARM("DATE")=$G(DATE,"Undefined")
"RTN","SCAPMCU1",164,0)
 . D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMCU1",165,0)
 S SCPOS0=$G(^SCTM(404.57,POSITION,0))
"RTN","SCAPMCU1",166,0)
 ;if position not linked to team
"RTN","SCAPMCU1",167,0)
 G QTOKTP:$P(SCPOS0,U,2)'=TEAM
"RTN","SCAPMCU1",168,0)
 ;if not active position
"RTN","SCAPMCU1",169,0)
 G QTOKTP:'$$DATES(404.59,POSITION,DATE)
"RTN","SCAPMCU1",170,0)
 S SCOK=1
"RTN","SCAPMCU1",171,0)
QTOKTP Q SCOK
"RTN","SCAPMCU1",172,0)
RSNDICS(EVCODE) ; -- called by input transform and screen logic for type of reason
"RTN","SCAPMCU1",173,0)
 ; Input: EVCODE = event code (e.g. ZM1)
"RTN","SCAPMCU1",174,0)
 ;  Used to check for fields that point to Scheduling Reason File
"RTN","SCAPMCU1",175,0)
 ;    Piece = Piece number of zero node of 
"RTN","SCAPMCU1",176,0)
 Q $P(^SD(403.43,$P(^(0),U,2),0),U,1)=EVCODE
"RTN","SCAPMCU1",177,0)
 ;
"RTN","SCAPMCU1",178,0)
OKPREC(TEAM) ; - called by screen logic for preceptor position file (#.1) of team position (#404.57) file
"RTN","SCAPMCU1",179,0)
 ;  Input; TEAM = Pointer to team file (#404.51) for team position with preceptor
"RTN","SCAPMCU1",180,0)
 ; requires position being assigned to be a possible preceptor position
"RTN","SCAPMCU1",181,0)
 ;  AND that position is from the same team as the supervised position
"RTN","SCAPMCU1",182,0)
 Q ($P(^SCTM(404.57,Y,0),U,12))&($P(^SCTM(404.57,Y,0),U,2)=TEAM)
"RTN","SCAPMCU2")
0^28^B36499490
"RTN","SCAPMCU2",1,0)
SCAPMCU2 ;ALB/REW - TEAM API UTILITIES ; 30 Jun 95
"RTN","SCAPMCU2",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMCU2",3,0)
 ;;1.0
"RTN","SCAPMCU2",4,0)
DTAFTER(FILE,IEN,STATUS,DATE) ;return next date after given one
"RTN","SCAPMCU2",5,0)
 N SCX
"RTN","SCAPMCU2",6,0)
 S SCX=-1
"RTN","SCAPMCU2",7,0)
 G:('$G(FILE))!("^404.52^404.58^404.59^"'[$G(FILE))!('$G(IEN)) QTDTAF
"RTN","SCAPMCU2",8,0)
 S ROOT="^SCTM("_FILE_",""AIDT"",IEN,STATUS)"
"RTN","SCAPMCU2",9,0)
 S EFFDT=-DATE
"RTN","SCAPMCU2",10,0)
 S SCX=$P($O(@ROOT@(EFFDT),-1),"-",2)
"RTN","SCAPMCU2",11,0)
QTDTAF Q SCX
"RTN","SCAPMCU2",12,0)
 ;
"RTN","SCAPMCU2",13,0)
DTBEFORE(FILE,IEN,STATUS,DATE) ;return next date before given one
"RTN","SCAPMCU2",14,0)
 N SCX
"RTN","SCAPMCU2",15,0)
 S SCX=-1
"RTN","SCAPMCU2",16,0)
 G:('$G(FILE))!("^404.52^404.58^404.59^"'[$G(FILE))!('$G(IEN)) QTDTBF
"RTN","SCAPMCU2",17,0)
 S ROOT="^SCTM("_FILE_",""AIDT"",IEN,STATUS)"
"RTN","SCAPMCU2",18,0)
 S EFFDT=-DATE
"RTN","SCAPMCU2",19,0)
 S SCX=$P($O(@ROOT@(EFFDT)),"-",2)
"RTN","SCAPMCU2",20,0)
QTDTBF Q SCX
"RTN","SCAPMCU2",21,0)
ACTHISTB(FILE,IEN) ;boolean active function
"RTN","SCAPMCU2",22,0)
 ;abbreviated form of call below - no error handling
"RTN","SCAPMCU2",23,0)
 N X,SCACTB
"RTN","SCAPMCU2",24,0)
 S X=+$$ACTHIST(.FILE,.IEN,"SCACTB")
"RTN","SCAPMCU2",25,0)
 Q $S(X=1:1,1:0)
"RTN","SCAPMCU2",26,0)
ACTHIST(FILE,IEN,SCDATES,SCERR,SCLIST) ;is entry active for a time period?
"RTN","SCAPMCU2",27,0)
 ; Input Parameters:
"RTN","SCAPMCU2",28,0)
 ;    File = either 404.52 or 404.58 or 404.59
"RTN","SCAPMCU2",29,0)
 ;    IEN  = pointer to team(404.51) or team position(404.57)
"RTN","SCAPMCU2",30,0)
 ;    SCDATES = (SEE PRIOR DEFINITION)
"RTN","SCAPMCU2",31,0)
 ;    SCLIST  = Output array
"RTN","SCAPMCU2",32,0)
 ;  Returned:
"RTN","SCAPMCU2",33,0)
 ;  status (-1:error|0:inactive|1:active)^ien for file^actdt^inacdt
"RTN","SCAPMCU2",34,0)
 ;          which ien depends on status
"RTN","SCAPMCU2",35,0)
 ;
"RTN","SCAPMCU2",36,0)
 N OK,X,ROOT,SCBEGIN,SCEND,SCINCL,SCDATE,SCA,SCDTS,SCE
"RTN","SCAPMCU2",37,0)
 S OK=-1,X=""
"RTN","SCAPMCU2",38,0)
 G:('$G(FILE))!("^404.52^404.58^404.59^"'[$G(FILE))!('$G(IEN)) QTACTH
"RTN","SCAPMCU2",39,0)
 S ROOT="^SCTM("_FILE_",""AIDT"",IEN,SCSTAT"
"RTN","SCAPMCU2",40,0)
 D INIT^SCAPMCU1(.OK) ; set default dates,output & error array (if undefined)
"RTN","SCAPMCU2",41,0)
 IF 'OK S OK=-1 G QTACTH
"RTN","SCAPMCU2",42,0)
 S SCDATE=SCEND
"RTN","SCAPMCU2",43,0)
 S OK=0
"RTN","SCAPMCU2",44,0)
 ;if incl=0 ->a partial hit should be returned
"RTN","SCAPMCU2",45,0)
LOOP IF 'SCINCL D
"RTN","SCAPMCU2",46,0)
 .F  S X=$$DATES^SCAPMCU1(.FILE,.IEN,.SCDATE) S SCA=$P(X,U,2),SCE=$P(X,U,3) D  Q:$P(X,U,5)!(SCE<SCBEGIN)!(OK=-1)
"RTN","SCAPMCU2",47,0)
 ..IF 'X S SCDATE=SCA Q
"RTN","SCAPMCU2",48,0)
 ..IF +X=1 D
"RTN","SCAPMCU2",49,0)
 ...S OK=1
"RTN","SCAPMCU2",50,0)
 ...S SCDATE=SCA-.000001
"RTN","SCAPMCU2",51,0)
 ...Q:$D(@SCLIST@(FILE,"SCLST",IEN,SCA))
"RTN","SCAPMCU2",52,0)
 ...S SCN=$G(@SCLIST@(FILE,0),0)+1
"RTN","SCAPMCU2",53,0)
 ...S @SCLIST@(FILE,0)=SCN
"RTN","SCAPMCU2",54,0)
 ...S @SCLIST@(FILE,SCN)=IEN_U_$$EXT(FILE,IEN)_U_SCA_U_$P(X,U,3)
"RTN","SCAPMCU2",55,0)
 ...S @SCLIST@(FILE,"SCLST",IEN,SCA,SCN)=""
"RTN","SCAPMCU2",56,0)
 ..ELSE  D
"RTN","SCAPMCU2",57,0)
 ...S OK=-1
"RTN","SCAPMCU2",58,0)
 ...S SCPARM("EFFECTIVE DATE")=$G(SCDATE,"Undefined")
"RTN","SCAPMCU2",59,0)
 ...D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCAPMCU2",60,0)
 ELSE  D
"RTN","SCAPMCU2",61,0)
 .S X=$$DATES^SCAPMCU1(.FILE,.IEN,.SCDATE)
"RTN","SCAPMCU2",62,0)
 .IF X&($P(X,U,2)'>SCBEGIN) D
"RTN","SCAPMCU2",63,0)
 ..S OK=1
"RTN","SCAPMCU2",64,0)
 ..Q:$D(@SCLIST@(FILE,"SCLST",IEN,$P(X,U,2)))
"RTN","SCAPMCU2",65,0)
 ..S SCN=$G(@SCLIST@(FILE,0),0)+1
"RTN","SCAPMCU2",66,0)
 ..S @SCLIST@(FILE,0)=SCN
"RTN","SCAPMCU2",67,0)
 ..S @SCLIST@(FILE,SCN)=IEN_U_$$EXT(FILE,IEN)_U_$P(X,U,2)_U_$P(X,U,3)
"RTN","SCAPMCU2",68,0)
 ..S @SCLIST@(FILE,"SCLST",IEN,$P(X,U,2),SCN)=""
"RTN","SCAPMCU2",69,0)
QTACTH Q OK_U_$P(X,U,4)_U_$P(X,U,2)_U_$P(X,U,3)
"RTN","SCAPMCU2",70,0)
 ;
"RTN","SCAPMCU2",71,0)
EXT(FILE,IEN) ;return external value of team or team position file
"RTN","SCAPMCU2",72,0)
 N SCEXT
"RTN","SCAPMCU2",73,0)
 S SCEXT=-1
"RTN","SCAPMCU2",74,0)
 IF FILE=404.58 D
"RTN","SCAPMCU2",75,0)
 .S SCEXT=$P($G(^SCTM(404.51,+$G(IEN),0)),U,1)
"RTN","SCAPMCU2",76,0)
 .S:'$L(SCEXT) SCEXT=-1
"RTN","SCAPMCU2",77,0)
 IF "^404.52^404.59^"[(U_FILE_U) D
"RTN","SCAPMCU2",78,0)
 .S SCEXT=$P($G(^SCTM(404.57,+$G(IEN),0)),U,1)
"RTN","SCAPMCU2",79,0)
 .S:'$L(SCEXT) SCEXT=-1
"RTN","SCAPMCU2",80,0)
QTEXT Q SCEXT
"RTN","SCAPMCU2",81,0)
 ;
"RTN","SCAPMCU2",82,0)
GETPC(DFN,DATE,PCROLE,ASSTYPE) ;return pc position & team for a date
"RTN","SCAPMCU2",83,0)
 ; DFN - pointer to patient file
"RTN","SCAPMCU2",84,0)
 ; DATE - date of interest (Default=DT)
"RTN","SCAPMCU2",85,0)
 ; PCROLE - Default=1 (PC Practitioner Position) note 2= pc attending
"RTN","SCAPMCU2",86,0)
 ; ASSTYPE - Default=1 (PC Team)
"RTN","SCAPMCU2",87,0)
 ; returns sctp^sctm^assigned to pc?
"RTN","SCAPMCU2",88,0)
 ;
"RTN","SCAPMCU2",89,0)
 N ACTDT,SCTP,SCTM,SCPTA,INACTDT
"RTN","SCAPMCU2",90,0)
 Q $$GETPCTP(.DFN,.DATE,.PCROLE)_U_$$GETPCTM(.DFN,.DATE,.ASSTYPE)_U_($D(^SCPT(404.41,"APC",+DFN))>0)
"RTN","SCAPMCU2",91,0)
 ;
"RTN","SCAPMCU2",92,0)
HISTPTTP(DFN,SCTP,DATE) ;404.43 entry for pt,position - if active on date
"RTN","SCAPMCU2",93,0)
 ;return -1 if error, 0 if no active entry or 404.43 ien if one
"RTN","SCAPMCU2",94,0)
 Q:'$G(DFN)!('$G(SCTP))!('$G(DATE)) -1
"RTN","SCAPMCU2",95,0)
 N SCACT,HISTIEN,SCINACT,SCDT
"RTN","SCAPMCU2",96,0)
 S SCDT=DATE+.00000001
"RTN","SCAPMCU2",97,0)
 S SCACT=+$O(^SCPT(404.43,"ADFN",DFN,SCTP,SCDT),-1)
"RTN","SCAPMCU2",98,0)
 S HISTIEN=+$O(^SCPT(404.43,"ADFN",DFN,SCTP,SCACT,0))
"RTN","SCAPMCU2",99,0)
 S SCINACT=$P($G(^SCPT(404.43,HISTIEN,0)),U,4)
"RTN","SCAPMCU2",100,0)
 Q $S('SCACT:0,('HISTIEN):0,('SCINACT):HISTIEN,(DATE>SCINACT):0,1:HISTIEN)
"RTN","SCAPMCU2",101,0)
 ;
"RTN","SCAPMCU2",102,0)
HISTPTTM(DFN,SCTM,DATE) ;404.42 entry for tm,position - if active on date
"RTN","SCAPMCU2",103,0)
 ; return -1 if error, 0 if no active entry or 404.42 entyr if one
"RTN","SCAPMCU2",104,0)
 Q:'$G(DFN)!('$G(SCTM))!('$G(DATE)) -1
"RTN","SCAPMCU2",105,0)
 N SCACT,HISTIEN,SCINACT,SCDT
"RTN","SCAPMCU2",106,0)
 S SCDT=DATE+.00000001
"RTN","SCAPMCU2",107,0)
 S SCACT=-$O(^SCPT(404.42,"AIDT",DFN,SCTM,-SCDT))
"RTN","SCAPMCU2",108,0)
 S HISTIEN=+$O(^SCPT(404.42,"AIDT",DFN,SCTM,-SCACT,0))
"RTN","SCAPMCU2",109,0)
 S SCINACT=$P($G(^SCPT(404.42,HISTIEN,0)),U,9)
"RTN","SCAPMCU2",110,0)
 Q $S('SCACT:0,('HISTIEN):0,('SCINACT):HISTIEN,(DATE>SCINACT):0,1:HISTIEN)
"RTN","SCAPMCU2",111,0)
 ;
"RTN","SCAPMCU2",112,0)
GETPCTM(DFN,DATE,ASSTYPE) ;return pc team for a date
"RTN","SCAPMCU2",113,0)
 ; DFN - pointer to patient file
"RTN","SCAPMCU2",114,0)
 ; DATE - date of interest
"RTN","SCAPMCU2",115,0)
 ; ASSTYPE - Default=1 (PC Team)
"RTN","SCAPMCU2",116,0)
 ; returns sctm
"RTN","SCAPMCU2",117,0)
 ;
"RTN","SCAPMCU2",118,0)
 N ACTDT,SCTP,SCPTTMA,INACTDT,SCTM
"RTN","SCAPMCU2",119,0)
 S ASSTYPE=$G(ASSTYPE,1)
"RTN","SCAPMCU2",120,0)
 S DATE=$G(DATE,DT)
"RTN","SCAPMCU2",121,0)
 ; returns pointer to 404.51, if exists, 0 if not
"RTN","SCAPMCU2",122,0)
 S ACTDT=+$O(^SCPT(404.42,"APCTM",+DFN,+ASSTYPE,(DATE+.000001)),-1)
"RTN","SCAPMCU2",123,0)
 S SCTM=$O(^SCPT(404.42,"APCTM",+DFN,+ASSTYPE,+ACTDT,0))
"RTN","SCAPMCU2",124,0)
 S SCPTTMA=$O(^SCPT(404.42,"APCTM",+DFN,+ASSTYPE,+ACTDT,+SCTM,0))
"RTN","SCAPMCU2",125,0)
 S INACTDT=$P($G(^SCPT(404.42,+SCPTTMA,0)),U,9)
"RTN","SCAPMCU2",126,0)
 Q $S('INACTDT:+SCTM,(INACTDT'<DATE):+SCTM,1:0)
"RTN","SCAPMCU2",127,0)
 ;
"RTN","SCAPMCU2",128,0)
GETPCTP(DFN,DATE,PCROLE) ;return pc position for a date
"RTN","SCAPMCU2",129,0)
 ; DFN - pointer to patient file
"RTN","SCAPMCU2",130,0)
 ; DATE - date of interest
"RTN","SCAPMCU2",131,0)
 ; PCROLE - Default=1 (PC Practitioner Position) note 2= pc attending
"RTN","SCAPMCU2",132,0)
 ; returns sctp,or 0 if none or -1 if error
"RTN","SCAPMCU2",133,0)
 ;
"RTN","SCAPMCU2",134,0)
 N ACTDT,SCTP,SCTM,SCPTA,INACTDT,SCPTTPA,SCOK
"RTN","SCAPMCU2",135,0)
 S SCOK=1
"RTN","SCAPMCU2",136,0)
 S DATE=$G(DATE,DT)
"RTN","SCAPMCU2",137,0)
 S PCROLE=$G(PCROLE,1)
"RTN","SCAPMCU2",138,0)
 ; returns pointer to 404.57, if exists, 0 if not
"RTN","SCAPMCU2",139,0)
 S ACTDT=+$O(^SCPT(404.43,"APCPOS",+DFN,+PCROLE,(DATE+.000001)),-1)
"RTN","SCAPMCU2",140,0)
 S SCTP=$O(^SCPT(404.43,"APCPOS",+DFN,+PCROLE,+ACTDT,0))
"RTN","SCAPMCU2",141,0)
 S SCPTTPA=$O(^SCPT(404.43,"APCPOS",+DFN,+PCROLE,+ACTDT,+SCTP,0))
"RTN","SCAPMCU2",142,0)
 S INACTDT=$P($G(^SCPT(404.43,+SCPTTPA,0)),U,4)
"RTN","SCAPMCU2",143,0)
 Q $S('INACTDT:+SCTP,(INACTDT'<DATE):+SCTP,1:0)
"RTN","SCAPMCU2",144,0)
 ;
"RTN","SCAPMCU2",145,0)
GETPRTP(SCTP,DATE) ;returns ien & name of practitioner filling position
"RTN","SCAPMCU2",146,0)
 ;   Returned [Error:-1,Else: sc200^practname]
"RTN","SCAPMCU2",147,0)
 N X,SCPRDTS,SCPR
"RTN","SCAPMCU2",148,0)
 S DATE=$G(DATE,DT)
"RTN","SCAPMCU2",149,0)
 S SCPRDTS("BEGIN")=DATE
"RTN","SCAPMCU2",150,0)
 S SCPRDTS("END")=DATE
"RTN","SCAPMCU2",151,0)
 S X=$$PRTP^SCAPMC(SCTP,"SCPRDTS","SCPR")
"RTN","SCAPMCU2",152,0)
 Q $S(X<1:-1,($G(SCPR(0))>1):-1,1:$P($G(SCPR(1)),U,1)_U_$P($G(SCPR(1)),U,2))
"RTN","SCAPMCU2",153,0)
 ;
"RTN","SCAPMCU2",154,0)
EXTMPRTP(SCTP,DATE) ;returns external of team and practitioner for position
"RTN","SCAPMCU2",155,0)
 ;
"RTN","SCAPMCU2",156,0)
 N SCX
"RTN","SCAPMCU2",157,0)
 S SCX=$$GETPRTP(.SCTP,.DATE)
"RTN","SCAPMCU2",158,0)
 Q $P($G(^SCTM(404.51,+$P($G(^SCTM(404.57,+SCTP,0)),U,2),0)),U,1)_"   "_$P(SCX,U,2)
"RTN","SCAPMCU2",159,0)
 ;
"RTN","SCAPMCU2",160,0)
NMPCTP(DFN,DATE,PCROLE) ;returns ien & name of pc position
"RTN","SCAPMCU2",161,0)
 ; (See GETPCTP for variables)
"RTN","SCAPMCU2",162,0)
 N X
"RTN","SCAPMCU2",163,0)
 S X=$$GETPCTP(DFN,.DATE,.PCROLE)
"RTN","SCAPMCU2",164,0)
 Q $S('$G(X):"",1:X_U_$P($G(^SCTM(404.57,+X,0)),U,1))
"RTN","SCAPMCU2",165,0)
 ;
"RTN","SCAPMCU2",166,0)
NMPCPR(DFN,DATE,PCROLE) ;returns ien & name of pract filling pc position
"RTN","SCAPMCU2",167,0)
 ; (See GETPCTP for variables)
"RTN","SCAPMCU2",168,0)
 N SCTP
"RTN","SCAPMCU2",169,0)
 S SCTP=+$$NMPCTP(.DFN,.DATE,.PCROLE)
"RTN","SCAPMCU2",170,0)
 Q $S('SCTP:"",1:$$GETPRTP(SCTP,.DATE))
"RTN","SCAPMCU2",171,0)
 ;
"RTN","SCAPMCU2",172,0)
NMPCTM(DFN,DATE,PCROLE) ;returns ien & name of pc team
"RTN","SCAPMCU2",173,0)
 ; (See GETPCTM for variables)
"RTN","SCAPMCU2",174,0)
 N X
"RTN","SCAPMCU2",175,0)
 S X=$$GETPCTM(DFN,.DATE,.PCROLE)
"RTN","SCAPMCU2",176,0)
 Q $S('$G(X):"",1:X_U_$P($G(^SCTM(404.51,+X,0)),U,1))
"RTN","SCAPMCU2",177,0)
ALPHA(INARRAY,OUTARRAY) ;not supported - for PCMM only
"RTN","SCAPMCU2",178,0)
 ; returns array sorted by 2nd piece's value
"RTN","SCAPMCU2",179,0)
 ; it keeps the 0 node -it does not return any x-ref values
"RTN","SCAPMCU2",180,0)
 ; it only converts arrays of type 1-n to another 1-n array
"RTN","SCAPMCU2",181,0)
 N SCNDX,SCX,SCNODE,SCY
"RTN","SCAPMCU2",182,0)
 S (SCX,SCY)=0
"RTN","SCAPMCU2",183,0)
 S:$D(@INARRAY@(0)) @OUTARRAY@(0)=@INARRAY@(0)
"RTN","SCAPMCU2",184,0)
 F  S SCX=$O(@INARRAY@(SCX)) Q:'SCX  S SCNODE=@INARRAY@(SCX) Q:'$L(SCNODE)  D
"RTN","SCAPMCU2",185,0)
 .S ^TMP($J,"SCTMPSORT","B",$P(SCNODE,U,2),SCX)=""
"RTN","SCAPMCU2",186,0)
 S SCNDX=""
"RTN","SCAPMCU2",187,0)
 F  S SCNDX=$O(^TMP($J,"SCTMPSORT","B",SCNDX)) Q:SCNDX=""  D
"RTN","SCAPMCU2",188,0)
 .S SCX=0
"RTN","SCAPMCU2",189,0)
 .F  S SCX=$O(^TMP($J,"SCTMPSORT","B",SCNDX,SCX)) Q:'SCX  D
"RTN","SCAPMCU2",190,0)
 ..S SCY=SCY+1
"RTN","SCAPMCU2",191,0)
 ..S @OUTARRAY@(SCY)=$G(@INARRAY@(SCX))
"RTN","SCAPMCU2",192,0)
 K ^TMP($J,"SCTMPSORT","B")
"RTN","SCAPMCU2",193,0)
 Q
"RTN","SCAPMCU3")
0^29^B12501665
"RTN","SCAPMCU3",1,0)
SCAPMCU3 ;MJK/ALB - AUTOLINK API ; 27 FEB 96
"RTN","SCAPMCU3",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMCU3",3,0)
 ;
"RTN","SCAPMCU3",4,0)
GETREC(SCDATA,SCTEAM) ; -- get team record with autolink data
"RTN","SCAPMCU3",5,0)
 ; input  :    SCTEAM := ien of team
"RTN","SCAPMCU3",6,0)
 ; output : SCDATA is the return array
"RTN","SCAPMCU3",7,0)
 ;          SCDATA(0) := 0th node of Team
"RTN","SCAPMCU3",8,0)
 ;             (1..n) := autolink name ^ autolink type ^ ien of entity
"RTN","SCAPMCU3",9,0)
 ;
"RTN","SCAPMCU3",10,0)
 N SC,X
"RTN","SCAPMCU3",11,0)
 ; -- get 0th node of team
"RTN","SCAPMCU3",12,0)
 S X=$$GETEAM(SCTEAM)
"RTN","SCAPMCU3",13,0)
 ; -- add to return array
"RTN","SCAPMCU3",14,0)
 D SET(X,0,.SCDATA)
"RTN","SCAPMCU3",15,0)
 ; -- find all autolinks for team
"RTN","SCAPMCU3",16,0)
 D SCAN(SCTEAM,.SC)
"RTN","SCAPMCU3",17,0)
 ; -- build autolink string and add to return array
"RTN","SCAPMCU3",18,0)
 D BUILD(.SC,.SCDATA)
"RTN","SCAPMCU3",19,0)
 Q
"RTN","SCAPMCU3",20,0)
 ;
"RTN","SCAPMCU3",21,0)
BUILD(SC,SCDATA) ; -- build string to send and add to return array
"RTN","SCAPMCU3",22,0)
 N SCLINK,SCINC,X,SCGLB,SCTYPE
"RTN","SCAPMCU3",23,0)
 S SCINC=1
"RTN","SCAPMCU3",24,0)
 S SCLINK=""
"RTN","SCAPMCU3",25,0)
 F  S SCLINK=$O(SC(SCLINK)) Q:SCLINK=""  D
"RTN","SCAPMCU3",26,0)
 . S X=SCLINK
"RTN","SCAPMCU3",27,0)
 . IF X["DIC(42," S SCGLB="^DIC(42)",SCTYPE="WARD"
"RTN","SCAPMCU3",28,0)
 . IF X["DIC(45.7," S SCGLB="^DIC(45.7)",SCTYPE="SPECIALTY"
"RTN","SCAPMCU3",29,0)
 . IF X["VA(200," S SCGLB="^VA(200)",SCTYPE="PRACTITIONER"
"RTN","SCAPMCU3",30,0)
 . IF X["DG(405.4," S SCGLB="^DG(405.4)",SCTYPE="ROOM"
"RTN","SCAPMCU3",31,0)
 . IF X["SC(" S SCGLB="^SC",SCTYPE="CLINIC"
"RTN","SCAPMCU3",32,0)
 . ; - add data to return array
"RTN","SCAPMCU3",33,0)
 . IF $D(@SCGLB@(+SCLINK,0)) D SET($P(^(0),U)_U_SCTYPE_U_+SCLINK,.SCINC,.SCDATA)
"RTN","SCAPMCU3",34,0)
 Q
"RTN","SCAPMCU3",35,0)
 ;
"RTN","SCAPMCU3",36,0)
SET(X,INC,SCDATA) ; -- set value in return array
"RTN","SCAPMCU3",37,0)
 S INC=$G(INC)+1,SCDATA(INC)=X
"RTN","SCAPMCU3",38,0)
 Q
"RTN","SCAPMCU3",39,0)
 ;
"RTN","SCAPMCU3",40,0)
SETREC(SCOK,SCTEAM,SC) ; -- add/edit autolink data to Team record
"RTN","SCAPMCU3",41,0)
 ; input  :    SCTEAM := ien of team
"RTN","SCAPMCU3",42,0)
 ; output : SC is the input array
"RTN","SCAPMCU3",43,0)
 ;           SC(1..n) := autolink name ^ autolink type ^ ien of entity
"RTN","SCAPMCU3",44,0)
 ;
"RTN","SCAPMCU3",45,0)
 N SCTYPE,SCROOT,SCGLB,SCLINK,SCLINKI,SCI,SCOLD,SCNEW
"RTN","SCAPMCU3",46,0)
 ; -- build array of current autolink assignments
"RTN","SCAPMCU3",47,0)
 D SCAN(SCTEAM,.SCOLD)
"RTN","SCAPMCU3",48,0)
 ;
"RTN","SCAPMCU3",49,0)
 ; -- compare current with input  and add autolinks if in
"RTN","SCAPMCU3",50,0)
 ;    input array but not in current array
"RTN","SCAPMCU3",51,0)
 S SCI=0 F  S SCI=$O(SC(SCI)) Q:'SCI  S SCX=SC(SCI) D
"RTN","SCAPMCU3",52,0)
 . S SCTYPE=$P(SCX,U,2)
"RTN","SCAPMCU3",53,0)
 . D ROOT(SCTYPE,.SCROOT,.SCGLB)
"RTN","SCAPMCU3",54,0)
 . S SCLINK=+$P(SCX,U,3)_";"_SCROOT
"RTN","SCAPMCU3",55,0)
 . S SCNEW(SCLINK)=""
"RTN","SCAPMCU3",56,0)
 . IF '$D(SCOLD(SCLINK)),SCGLB]"",$D(@SCGLB@(+SCLINK,0)) D ADD(SCTEAM,SCLINK)
"RTN","SCAPMCU3",57,0)
 ;
"RTN","SCAPMCU3",58,0)
 ; -- compare current with input and delete autolinks if not
"RTN","SCAPMCU3",59,0)
 ;    in input array but in current array
"RTN","SCAPMCU3",60,0)
 S SCLINK=""
"RTN","SCAPMCU3",61,0)
 F  S SCLINK=$O(SCOLD(SCLINK)) Q:'SCLINK  IF '$D(SCNEW(SCLINK)) D
"RTN","SCAPMCU3",62,0)
 . S SCLINKI=+SCOLD(SCLINK)
"RTN","SCAPMCU3",63,0)
 . IF SCLINKI D DELETE(SCLINKI)
"RTN","SCAPMCU3",64,0)
 S SCOK=1
"RTN","SCAPMCU3",65,0)
 Q
"RTN","SCAPMCU3",66,0)
 ;
"RTN","SCAPMCU3",67,0)
ADD(SCTEAM,SCLINK) ; -- add an autolink to a Team
"RTN","SCAPMCU3",68,0)
 N DIC,DD,DO
"RTN","SCAPMCU3",69,0)
 S DIC="^SCTM(404.56,",DIC(0)="L",X=SCTEAM,DIC("DR")=".02////^S X=SCLINK"
"RTN","SCAPMCU3",70,0)
 D FILE^DICN
"RTN","SCAPMCU3",71,0)
 Q
"RTN","SCAPMCU3",72,0)
 ;
"RTN","SCAPMCU3",73,0)
DELETE(SCLINKI) ; -- delete an autolink from a Team
"RTN","SCAPMCU3",74,0)
 N DIK,DA
"RTN","SCAPMCU3",75,0)
 IF $D(^SCTM(404.56,SCLINKI,0)) D
"RTN","SCAPMCU3",76,0)
 . S DIK="^SCTM(404.56,",DA=SCLINKI D ^DIK
"RTN","SCAPMCU3",77,0)
 Q
"RTN","SCAPMCU3",78,0)
 ;
"RTN","SCAPMCU3",79,0)
GETEAM(SCTEAM) ; -- retrieve Team demographics
"RTN","SCAPMCU3",80,0)
 Q $G(^SCTM(404.51,+$G(SCTEAM),0))
"RTN","SCAPMCU3",81,0)
 ;
"RTN","SCAPMCU3",82,0)
SCAN(SCTEAM,SC) ; -- build an array of current autolink assignments
"RTN","SCAPMCU3",83,0)
 N SCLINK
"RTN","SCAPMCU3",84,0)
 S SCLINK=""
"RTN","SCAPMCU3",85,0)
 F  S SCLINK=$O(^SCTM(404.56,"APRIMARY",+$G(SCTEAM),SCLINK)) Q:SCLINK=""  S SC(SCLINK)=+$O(^(SCLINK,0))
"RTN","SCAPMCU3",86,0)
 Q
"RTN","SCAPMCU3",87,0)
 ;
"RTN","SCAPMCU3",88,0)
ROOT(SCTYPE,SCROOT,SCGLB) ; -- determine global root of autolink type
"RTN","SCAPMCU3",89,0)
 S (SCROOT,SCGLB)=""
"RTN","SCAPMCU3",90,0)
 IF SCTYPE="WARD" S SCROOT="DIC(42,",SCGLB="^DIC(42)"
"RTN","SCAPMCU3",91,0)
 IF SCTYPE="SPECIALTY" S SCROOT="DIC(45.7,",SCGLB="^DIC(45.7)"
"RTN","SCAPMCU3",92,0)
 IF SCTYPE="PRACTITIONER" S SCROOT="VA(200,",SCGLB="^VA(200)"
"RTN","SCAPMCU3",93,0)
 IF SCTYPE="ROOM" S SCROOT="DG(405.4,",SCGLB="^DG(405.4)"
"RTN","SCAPMCU3",94,0)
 IF SCTYPE="CLINIC" S SCROOT="SC(",SCGLB="^SC"
"RTN","SCAPMCU3",95,0)
 Q
"RTN","SCAPMCU3",96,0)
 ;
"RTN","SCAPMCU3",97,0)
GETLINK(SC,SCTYPE,SCIEN) ; -- get autolink entity data
"RTN","SCAPMCU3",98,0)
 ;  input:  SCTYPE   := type of autolink (WARD, SPECIALTY, ectc.)
"RTN","SCAPMCU3",99,0)
 ;          SCIEN    := ien of entity
"RTN","SCAPMCU3",100,0)
 ; output:  SC(1..n) := list of Team names autolinked to entity
"RTN","SCAPMCU3",101,0)
 ;                    
"RTN","SCAPMCU3",102,0)
 ;
"RTN","SCAPMCU3",103,0)
 N SCTEAM,SCROOT,SCGLB,SCINC,SCLINK
"RTN","SCAPMCU3",104,0)
 ; -- deterine global root for autolink entity
"RTN","SCAPMCU3",105,0)
 D ROOT(SCTYPE,.SCROOT,.SCGLB)
"RTN","SCAPMCU3",106,0)
 ; -- set variable pointer value for autolink entity
"RTN","SCAPMCU3",107,0)
 S SCLINK=+SCIEN_";"_$G(SCROOT)
"RTN","SCAPMCU3",108,0)
 ; -- find Teams with autolinks to this entity
"RTN","SCAPMCU3",109,0)
 S (SCINC,SCTEAM)=0
"RTN","SCAPMCU3",110,0)
 IF $O(^SCTM(404.56,"AC",SCLINK,SCTEAM)) D
"RTN","SCAPMCU3",111,0)
 . F  S SCTEAM=$O(^SCTM(404.56,"AC",SCLINK,SCTEAM)) Q:'SCTEAM  D
"RTN","SCAPMCU3",112,0)
 . . S SCINC=SCINC+1
"RTN","SCAPMCU3",113,0)
 . . S SC(SCINC)=$P($G(^SCTM(404.51,SCTEAM,0)),U)
"RTN","SCAPMCU3",114,0)
 ELSE  D
"RTN","SCAPMCU3",115,0)
 . S SCINC=SCINC+1
"RTN","SCAPMCU3",116,0)
 . S SC(SCINC)="No links found."
"RTN","SCAPMCU3",117,0)
 Q
"RTN","SCAPMCU3",118,0)
 ;
"RTN","SCAPMCU4")
0^123^B1815991
"RTN","SCAPMCU4",1,0)
SCAPMCU4 ;ALB/REW - TEAM API UTILITIES ; 30 Mar 96
"RTN","SCAPMCU4",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMCU4",3,0)
 ;;1.0
"RTN","SCAPMCU4",4,0)
RESTPT(DFN,SCDATE,SCRPA) ;is pt a restricted consult pt?
"RTN","SCAPMCU4",5,0)
 ;   DFN - ien to PATIENT File
"RTN","SCAPMCU4",6,0)
 ;   SCATE - Date of interest - default=DT
"RTN","SCAPMCU4",7,0)
 ;   SCRPA - literal value of desired restrict patients array
"RTN","SCAPMCU4",8,0)
 ;       e.g. scrpa=xx results in xx(sctm)=teamname
"RTN","SCAPMCU4",9,0)
 ;   Returned: [1 if yes, 0 if no, -1 if error]
"RTN","SCAPMCU4",10,0)
 ; 
"RTN","SCAPMCU4",11,0)
 N SCRPDTS,SCOK,SCRPLIST,SCRPERR,SCTM,SCTP,SCYES,SCTMNM,SCNDX,SCND
"RTN","SCAPMCU4",12,0)
 S SCYES=0
"RTN","SCAPMCU4",13,0)
 S SCRPDTS("BEGIN")=SCDATE
"RTN","SCAPMCU4",14,0)
 S SCRPDTS("END")=SCDATE
"RTN","SCAPMCU4",15,0)
 S SCRPDTS("INCL")=0
"RTN","SCAPMCU4",16,0)
 S SCOK=$$TMPT^SCAPMC(DFN,"SCRPDTS",,"SCRPLIST","SCRPERR")
"RTN","SCAPMCU4",17,0)
 IF $G(SCRPLIST(0)) D
"RTN","SCAPMCU4",18,0)
 .F SCNDX=1:1:+$G(SCRPLIST(0)) D
"RTN","SCAPMCU4",19,0)
 ..S SCND=SCRPLIST(SCNDX)
"RTN","SCAPMCU4",20,0)
 ..S SCTM=+SCND
"RTN","SCAPMCU4",21,0)
 ..S SCTMNM=$P(SCND,U,2)
"RTN","SCAPMCU4",22,0)
 ..S SCPTTM=$P(SCND,U,3)
"RTN","SCAPMCU4",23,0)
 ..; restrict from 404.51 (TEAM) file entry??
"RTN","SCAPMCU4",24,0)
 ..IF $P($G(^SCTM(404.51,+SCTM,0)),U,13) D
"RTN","SCAPMCU4",25,0)
 ...S SCYES=1
"RTN","SCAPMCU4",26,0)
 ...S:$L(SCTMNM) @SCRPA@(SCTM)=SCTMNM
"RTN","SCAPMCU4",27,0)
 ..; restring from 404.42 (PATIENT TEAM) file entry??
"RTN","SCAPMCU4",28,0)
 ..IF $P($G(^SCPT(404.42,+SCPTTM,0)),U,10) D
"RTN","SCAPMCU4",29,0)
 ...S SCYES=1
"RTN","SCAPMCU4",30,0)
 ...S:$L(SCTMNM) @SCRPA@(SCTM)=SCTMNM
"RTN","SCAPMCU4",31,0)
 Q $S($D(SCRPERR):-1,1:SCYES)
"RTN","SCAPMSG")
0^30^B2285505
"RTN","SCAPMSG",1,0)
SCAPMSG ;ALB/SCK - PCMM MESSAGE GENERATOR ; 22 SEP 95
"RTN","SCAPMSG",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPMSG",3,0)
 ;;1
"RTN","SCAPMSG",4,0)
 Q
"RTN","SCAPMSG",5,0)
 ; mailman message generator for the primary care management
"RTN","SCAPMSG",6,0)
 ; module.
"RTN","SCAPMSG",7,0)
 ;
"RTN","SCAPMSG",8,0)
PARSE(SC) ;
"RTN","SCAPMSG",9,0)
 ;  -- array parsing for messages
"RTN","SCAPMSG",10,0)
 ;     SCDUZ  -  DUZ of user triggering the message
"RTN","SCAPMSG",11,0)
 ;     SCIENS -  The Internal entry number of the team, position, or
"RTN","SCAPMSG",12,0)
 ;               patient, etc.
"RTN","SCAPMSG",13,0)
 ;     SCDATE -  The date and/or time of the change or incident that
"RTN","SCAPMSG",14,0)
 ;               triggered the notification in external format.
"RTN","SCAPMSG",15,0)
 ;     SCSUBJ -  The subject for the message
"RTN","SCAPMSG",16,0)
 ;     SCMSG  -  The message type
"RTN","SCAPMSG",17,0)
 ;     SCTEXT -  text line to be added to the message
"RTN","SCAPMSG",18,0)
 ;
"RTN","SCAPMSG",19,0)
 S SCDUZ=$G(SC("DUZ"))
"RTN","SCAPMSG",20,0)
 S SCIENS=$G(SC("IENS"))
"RTN","SCAPMSG",21,0)
 S SCDATE=$G(SC("DATE"))
"RTN","SCAPMSG",22,0)
 S SCSUBJ=$G(SC("SUBJECT"))
"RTN","SCAPMSG",23,0)
 S SCMSG=$G(SC("MESSAGE"))
"RTN","SCAPMSG",24,0)
 S SCTEXT=$G(SC("TEXT"))
"RTN","SCAPMSG",25,0)
 Q
"RTN","SCAPMSG",26,0)
 ;
"RTN","SCAPMSG",27,0)
MAILC(SCOK,SCROOT) ;
"RTN","SCAPMSG",28,0)
 ;
"RTN","SCAPMSG",29,0)
 N SCTEXT,SCSUBJ,SCDUZ
"RTN","SCAPMSG",30,0)
 D CHK^SCUTBK
"RTN","SCAPMSG",31,0)
 D TMP^SCUTBK
"RTN","SCAPMSG",32,0)
 ;
"RTN","SCAPMSG",33,0)
 S SCOK=0
"RTN","SCAPMSG",34,0)
 ;
"RTN","SCAPMSG",35,0)
 D BLDMSG(.SCROOT,.SCSUBJ,.SCDUZ)
"RTN","SCAPMSG",36,0)
 ;
"RTN","SCAPMSG",37,0)
 S XMDUZ=$S($G(SCDUZ)]"":SCDUZ,1:"PRIMARY CARE MANAGEMENT")
"RTN","SCAPMSG",38,0)
 S XMSUB=$S($G(SCSUBJ)]"":SCSUBJ,1:"PCMM NOTIFICATION")
"RTN","SCAPMSG",39,0)
 D XMZ^XMA2
"RTN","SCAPMSG",40,0)
 G:XMZ<1 MAILQ
"RTN","SCAPMSG",41,0)
 S XMTEXT="SCTEXT("
"RTN","SCAPMSG",42,0)
 S XMY("G.PCM MESSAGING@DEVFEX.ISC-ALBANY.VA.GOV")=""
"RTN","SCAPMSG",43,0)
 ;
"RTN","SCAPMSG",44,0)
 D ^XMD
"RTN","SCAPMSG",45,0)
 S SCOK=XMZ
"RTN","SCAPMSG",46,0)
MAILQ Q
"RTN","SCAPMSG",47,0)
 ;
"RTN","SCAPMSG",48,0)
BLDMSG(SCROOT,SCSUBJ,SCDUZ) ;
"RTN","SCAPMSG",49,0)
 ;
"RTN","SCAPMSG",50,0)
 N I
"RTN","SCAPMSG",51,0)
 S SCDUZ=$P($G(SCROOT(1,0)),U,1)
"RTN","SCAPMSG",52,0)
 S SCSUBJ=$P($G(SCROOT(1,0)),U,2)
"RTN","SCAPMSG",53,0)
 ;
"RTN","SCAPMSG",54,0)
 S I=0
"RTN","SCAPMSG",55,0)
 F  S I=$O(SCROOT(1,I)) Q:'I  S SCTEXT(I)=SCROOT(1,I)
"RTN","SCAPMSG",56,0)
 Q
"RTN","SCAPU1")
0^31^B5694042
"RTN","SCAPU1",1,0)
SCAPU1 ;ALB/REW - TEAM API UTILITIES ; 30 Jun 95
"RTN","SCAPU1",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCAPU1",3,0)
 ;;1.0
"RTN","SCAPU1",4,0)
DTCHK2(SCDATES,ACTDT,INACTDT) ;given scdates array was it active?
"RTN","SCAPU1",5,0)
 N SCBEGIN,SCEND,SCINCL
"RTN","SCAPU1",6,0)
 D INIT^SCAPMCU1(1) ;set default array
"RTN","SCAPU1",7,0)
 Q $$DTCHK(SCBEGIN,SCEND,SCINCL,ACTDT,.INACTDT)
"RTN","SCAPU1",8,0)
 ;
"RTN","SCAPU1",9,0)
DTCHK(BEGINDT,ENDDT,INCL,ACTDT,INACTDT) ; -- given activation/inactivation dates and begin & end dates and include flag was it active?
"RTN","SCAPU1",10,0)
 ;Parameters:
"RTN","SCAPU1",11,0)
 ;  BEGINDT - begining date
"RTN","SCAPU1",12,0)
 ;  ENDDT   - ending date
"RTN","SCAPU1",13,0)
 ;  INCL    - 1= must be active for whole period to get a 'yes'/0 o/w
"RTN","SCAPU1",14,0)
 ;  ACTDT   - activation date for record
"RTN","SCAPU1",15,0)
 ;  INACTDT - inactivation date for record 
"RTN","SCAPU1",16,0)
 ;  returns: 1 = Active
"RTN","SCAPU1",17,0)
 ;           0 = Inactive
"RTN","SCAPU1",18,0)
 ;          -1 = Error
"RTN","SCAPU1",19,0)
 ; 
"RTN","SCAPU1",20,0)
 N OK
"RTN","SCAPU1",21,0)
 S OK=-1
"RTN","SCAPU1",22,0)
 G DTCHKQ:'$G(BEGINDT)!('$G(ENDDT))!('$G(ACTDT))
"RTN","SCAPU1",23,0)
 S OK=0
"RTN","SCAPU1",24,0)
 ; begin is after inactivation
"RTN","SCAPU1",25,0)
 IF $G(INACTDT),BEGINDT>INACTDT G DTCHKQ
"RTN","SCAPU1",26,0)
 ; end is before effective date
"RTN","SCAPU1",27,0)
 IF ENDDT<ACTDT G DTCHKQ
"RTN","SCAPU1",28,0)
 ; just need 1 day in range
"RTN","SCAPU1",29,0)
 IF $G(INCL)=0 S OK=1 G DTCHKQ
"RTN","SCAPU1",30,0)
 ; begin is not before effective date
"RTN","SCAPU1",31,0)
 IF ACTDT>BEGINDT G DTCHKQ
"RTN","SCAPU1",32,0)
 ; inactivation exists & isn't after end
"RTN","SCAPU1",33,0)
 IF $G(INACTDT),INACTDT<ENDDT G DTCHKQ
"RTN","SCAPU1",34,0)
 S OK=1
"RTN","SCAPU1",35,0)
DTCHKQ Q OK
"RTN","SCAPU1",36,0)
 ;
"RTN","SCAPU1",37,0)
ERR(SEQ,ERNUM,PARMS,OUTPUT,SCER) ;-- process errors
"RTN","SCAPU1",38,0)
 ;if no dialog entry 4040000 will be processed
"RTN","SCAPU1",39,0)
 S ERNUM=$G(ERNUM,4040000)
"RTN","SCAPU1",40,0)
 S:'$$GET1^DIQ(.84,$G(ERNUM)_",",.01) ERNUM=4040000
"RTN","SCAPU1",41,0)
 IF SCER]"" D
"RTN","SCAPU1",42,0)
 . S SEQ=SEQ+1
"RTN","SCAPU1",43,0)
 . S SCER(SEQ)=ERNUM
"RTN","SCAPU1",44,0)
 .D BLD^DIALOG(.ERNUM,.PARMS,.OUTPUT,.SCER)
"RTN","SCAPU1",45,0)
 Q
"RTN","SCAPU1",46,0)
 ;
"RTN","SCAPU1",47,0)
OKARRAY(ARRAY,CHECK) ; see if input array says 'check' should be used
"RTN","SCAPU1",48,0)
 ;  DOES NOT change any varriables - $$okarray(.xx,.yy) is safe...
"RTN","SCAPU1",49,0)
 ;  if array is null OR undefined it is ok
"RTN","SCAPU1",50,0)
 ;  if @array@(check) is defined it is ok
"RTN","SCAPU1",51,0)
 ;  if @array@('exclude') is defined results switch
"RTN","SCAPU1",52,0)
 ;  RETURNS: 1: Yes use/0: No don't
"RTN","SCAPU1",53,0)
 Q $S('$L($G(CHECK)):1,'$L($G(ARRAY)):1,(ARRAY'?1A1.7AN):0,1:'(($D(@ARRAY@(CHECK))#2)=($D(@ARRAY@("EXCLUDE"))#2)))  ;changed to quit if check is not defined
"RTN","SCAPU1",54,0)
 ;
"RTN","SCAPU1",55,0)
OKUSRCL(USRARRAY,CHECK) ; see if input user class array says 'check' is ok
"RTN","SCAPU1",56,0)
 N SCOK,SCU
"RTN","SCAPU1",57,0)
 S SCOK=0
"RTN","SCAPU1",58,0)
 IF '$L($G(CHECK))!('$L($G(USRARRAY))) S SCOK=1 G QTOKUSR
"RTN","SCAPU1",59,0)
 IF (USRARRAY'?1A1.7AN)&(USRARRAY'?1"^"1A.E) G QTOKUSR
"RTN","SCAPU1",60,0)
 S SCU=0
"RTN","SCAPU1",61,0)
 IF $D(@USRARRAY@("EXCLUDE"))#2 D
"RTN","SCAPU1",62,0)
 .S SCOK=1
"RTN","SCAPU1",63,0)
 .F  S SCU=$O(@USRARRAY@(SCU)) Q:'SCU  S:(CHECK=SCU)!($$SUBCLASS^USRLM(CHECK,SCU)) SCOK=0
"RTN","SCAPU1",64,0)
 ELSE  D
"RTN","SCAPU1",65,0)
 .S SCOK=0
"RTN","SCAPU1",66,0)
 .F  S SCU=$O(@USRARRAY@(SCU)) Q:'SCU  S:(CHECK=SCU)!($$SUBCLASS^USRLM(CHECK,SCU)) SCOK=1
"RTN","SCAPU1",67,0)
 .
"RTN","SCAPU1",68,0)
QTOKUSR Q SCOK
"RTN","SCDD")
0^32^B727290
"RTN","SCDD",1,0)
SCDD ;ALB/RMO - Data Dictionary Calls ;02 DEC 1994 9:00 am [ 12/02/94  1:39 PM ]
"RTN","SCDD",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCDD",3,0)
 ;
"RTN","SCDD",4,0)
ACTSTOP(SCSCI,SCDT) ;Determine if Stop Code is Active
"RTN","SCDD",5,0)
 ; Input  -- SCSCI    Stop Code file IEN
"RTN","SCDD",6,0)
 ;           SCDT     Date/Time  (Optional- default today@2359)
"RTN","SCDD",7,0)
 ; Output -- 1=ACTIVE and 0=INACTIVE
"RTN","SCDD",8,0)
 N Y
"RTN","SCDD",9,0)
 S SCDT=$S($G(SCDT)>0:SCDT,1:DT) S:'$P(SCDT,".",2) SCDT=SCDT_.2359
"RTN","SCDD",10,0)
 I $D(^DIC(40.7,SCSCI,"E",+$O(^(+$O(^DIC(40.7,SCSCI,"E","AID",-SCDT)),0)),0)),$P($G(^(0)),U,2) S Y=1
"RTN","SCDD",11,0)
 Q +$G(Y)
"RTN","SCDD",12,0)
 ;
"RTN","SCDD",13,0)
VALTIME(X) ;Validate Time Format
"RTN","SCDD",14,0)
 ; Input  -- X        Time
"RTN","SCDD",15,0)
 ; Output -- 1=VALID and 0=INVALID
"RTN","SCDD",16,0)
 N Y
"RTN","SCDD",17,0)
 S Y=1
"RTN","SCDD",18,0)
 I $L(X)>4!($L(X)<4)!('X?4N&(X<1700)&(X>1700)&(X#100<60)) S Y=0
"RTN","SCDD",19,0)
 Q +$G(Y)
"RTN","SCDD",20,0)
 ;
"RTN","SCMCBK")
0^141^B49055163
"RTN","SCMCBK",1,0)
SCMCBK ;ALB/SCK - Broker Utilities for multiple patient assignments; 4/8/96
"RTN","SCMCBK",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCBK",3,0)
 ;;1T1;
"RTN","SCMCBK",4,0)
 ;
"RTN","SCMCBK",5,0)
 Q
"RTN","SCMCBK",6,0)
 ;
"RTN","SCMCBK",7,0)
PTCLBLD(SCOK,SC) ; Build patient list for a selected clinic
"RTN","SCMCBK",8,0)
 ;  'SC BLD PAT CLN LIST'
"RTN","SCMCBK",9,0)
 ;
"RTN","SCMCBK",10,0)
 D NEWVAR^SCMCBK1
"RTN","SCMCBK",11,0)
 D CHK^SCUTBK
"RTN","SCMCBK",12,0)
 D TMP^SCUTBK
"RTN","SCMCBK",13,0)
 ;
"RTN","SCMCBK",14,0)
 D PARSE^SCMCBK1(.SC)
"RTN","SCMCBK",15,0)
 ;
"RTN","SCMCBK",16,0)
 ;  Build exclude list
"RTN","SCMCBK",17,0)
 S BLOCK=$S(SCPOS'="":"BLKPOS",1:"BLKTM")
"RTN","SCMCBK",18,0)
 S SCBLOCK=$S(SCPOS'="":SCPOS,1:SCTEAM)
"RTN","SCMCBK",19,0)
 D @BLOCK
"RTN","SCMCBK",20,0)
 ;
"RTN","SCMCBK",21,0)
 S SCOK=$$PTCLBR^SCAPMC26(.SCCLN,.SCTEAM,.SCDTRNG)
"RTN","SCMCBK",22,0)
 K ^TMP("SCMC",$J,"EXCLUDE PT")
"RTN","SCMCBK",23,0)
 G:SCOK=0 PTCLNQ
"RTN","SCMCBK",24,0)
 ;
"RTN","SCMCBK",25,0)
 M ^TMP($J,"SC PCMM IN")=^TMP(SCOK,"SCCLPT")
"RTN","SCMCBK",26,0)
 K ^TMP(SCOK,"SCCLPT")
"RTN","SCMCBK",27,0)
 ;
"RTN","SCMCBK",28,0)
 D ALPHA^SCAPMCU2("^TMP($J,""SC PCMM IN"")","^TMP($J,""SCCLPT"")")
"RTN","SCMCBK",29,0)
 ;
"RTN","SCMCBK",30,0)
 S SCOK=$J_U_^TMP($J,"SC PCMM IN",0)
"RTN","SCMCBK",31,0)
 ;
"RTN","SCMCBK",32,0)
PTCLNQ D CLRVAR^SCMCBK1
"RTN","SCMCBK",33,0)
 Q
"RTN","SCMCBK",34,0)
 ;
"RTN","SCMCBK",35,0)
PTSCBLD(SCOK,SC) ; Build patient list for selected stop code
"RTN","SCMCBK",36,0)
 ;  'SC BLD PAT SCDE LIST'
"RTN","SCMCBK",37,0)
 ;
"RTN","SCMCBK",38,0)
 D NEWVAR^SCMCBK1
"RTN","SCMCBK",39,0)
 ;
"RTN","SCMCBK",40,0)
 D CHK^SCUTBK
"RTN","SCMCBK",41,0)
 D TMP^SCUTBK
"RTN","SCMCBK",42,0)
 ;
"RTN","SCMCBK",43,0)
 D PARSE^SCMCBK1(.SC)
"RTN","SCMCBK",44,0)
 ;
"RTN","SCMCBK",45,0)
 K ^TMP($J,"SCSCDE")
"RTN","SCMCBK",46,0)
 ;
"RTN","SCMCBK",47,0)
 ;  Build exclude list
"RTN","SCMCBK",48,0)
 S BLOCK=$S(SCPOS'="":"BLKPOS",1:"BLKTM")
"RTN","SCMCBK",49,0)
 S SCBLOCK=$S(SCPOS'="":SCPOS,1:SCTEAM)
"RTN","SCMCBK",50,0)
 D @BLOCK
"RTN","SCMCBK",51,0)
 ;
"RTN","SCMCBK",52,0)
 IF 'SCOK1 S SCOK="0^0^0^0" G PTSCQ
"RTN","SCMCBK",53,0)
 ;
"RTN","SCMCBK",54,0)
 S SCOK=0
"RTN","SCMCBK",55,0)
 S SCOK=$$PTST^SCAPMC27(SCSCDE,.SCDTRNG,SCNUM,.SCLOC,"SCERMSG",SCMORE)
"RTN","SCMCBK",56,0)
 K ^TMP("SCMC",$J,"EXCLUDE PT")
"RTN","SCMCBK",57,0)
 ;
"RTN","SCMCBK",58,0)
 M ^TMP($J,"SC PCMM IN")=@SCLOC
"RTN","SCMCBK",59,0)
 S I1=$G(^TMP($J,"SC PCMM IN",0))
"RTN","SCMCBK",60,0)
 F I=1:1:I1 S ^TMP($J,"PCMM TMP",I)=$G(^TMP($J,"SC PCMM IN",I))
"RTN","SCMCBK",61,0)
 ;
"RTN","SCMCBK",62,0)
 D ALPHA^SCAPMCU2("^TMP($J,""PCMM TMP"")","^TMP($J,""SCSCDE"")")
"RTN","SCMCBK",63,0)
 S SCOK=$J_U_+I1_U_SCOK
"RTN","SCMCBK",64,0)
 ;
"RTN","SCMCBK",65,0)
PTSCQ D CLRVAR^SCMCBK1
"RTN","SCMCBK",66,0)
 Q
"RTN","SCMCBK",67,0)
 ;
"RTN","SCMCBK",68,0)
PTTMBLD(SCOK,SC) ; Build a list of patients for a selected team and return the $J of the TMP globall
"RTN","SCMCBK",69,0)
 ;  where the list is stored.
"RTN","SCMCBK",70,0)
 ;  ' SC BLD PAT TM LIST ' 
"RTN","SCMCBK",71,0)
 ;
"RTN","SCMCBK",72,0)
 D NEWVAR^SCMCBK1
"RTN","SCMCBK",73,0)
 D CHK^SCUTBK
"RTN","SCMCBK",74,0)
 D TMP^SCUTBK
"RTN","SCMCBK",75,0)
 ;
"RTN","SCMCBK",76,0)
 D PARSE^SCMCBK1(.SC)
"RTN","SCMCBK",77,0)
 K ^TMP($J,"SCTEAM")
"RTN","SCMCBK",78,0)
 ;
"RTN","SCMCBK",79,0)
 ;   Build exclude list
"RTN","SCMCBK",80,0)
 S SCOK=0
"RTN","SCMCBK",81,0)
 S BLOCK=$S(SCPOS'="":"BLKPOS",1:"BLKTM")
"RTN","SCMCBK",82,0)
 S SCBLOCK=$S(SCPOS'="":SCPOS,1:SCTEAM)
"RTN","SCMCBK",83,0)
 D @BLOCK
"RTN","SCMCBK",84,0)
 ;
"RTN","SCMCBK",85,0)
 S SCOK=$$PTTM^SCAPMC2(SCFRMTM,.SCDTRNG,.SCLOC,"SCERMSG")
"RTN","SCMCBK",86,0)
 K ^TMP("SCMC",$J,"EXCLUDE PT")
"RTN","SCMCBK",87,0)
 M ^TMP($J,"SC PCMM IN")=@SCLOC
"RTN","SCMCBK",88,0)
 ;
"RTN","SCMCBK",89,0)
 S I="" F  S I=$O(^TMP($J,"SC PCMM IN",I)) Q:'I  D
"RTN","SCMCBK",90,0)
 . S ^TMP($J,"PCMM TMP",I)=^TMP($J,"SC PCMM IN",I)
"RTN","SCMCBK",91,0)
 ;
"RTN","SCMCBK",92,0)
 D ALPHA^SCAPMCU2("^TMP($J,""PCMM TMP"")","^TMP($J,""SCTEAM"")")
"RTN","SCMCBK",93,0)
 S I1="" F  S I1=$O(^TMP($J,"SCTEAM",I1)) Q:'I1  S I=I1
"RTN","SCMCBK",94,0)
 ;
"RTN","SCMCBK",95,0)
 S SCOK=$J_U_+I_U_SCOK
"RTN","SCMCBK",96,0)
 ;
"RTN","SCMCBK",97,0)
 D CLRVAR^SCMCBK1
"RTN","SCMCBK",98,0)
 Q
"RTN","SCMCBK",99,0)
 ;
"RTN","SCMCBK",100,0)
PTPSBLD(SCOK,SC) ;
"RTN","SCMCBK",101,0)
 ;  ' SC BLD PAT POS LIST '
"RTN","SCMCBK",102,0)
 ;
"RTN","SCMCBK",103,0)
 D NEWVAR^SCMCBK1
"RTN","SCMCBK",104,0)
 D CHK^SCUTBK
"RTN","SCMCBK",105,0)
 D TMP^SCUTBK
"RTN","SCMCBK",106,0)
 ;
"RTN","SCMCBK",107,0)
 D PARSE^SCMCBK1(.SC)
"RTN","SCMCBK",108,0)
 ;
"RTN","SCMCBK",109,0)
 K ^TMP($J,"SCPOS")
"RTN","SCMCBK",110,0)
 ;
"RTN","SCMCBK",111,0)
 ;   Build exclude list
"RTN","SCMCBK",112,0)
 S BLOCK=$S(SCPOS'="":"BLKPOS",1:"BLKTM")
"RTN","SCMCBK",113,0)
 S SCBLOCK=$S(SCPOS'="":SCPOS,1:SCTEAM)
"RTN","SCMCBK",114,0)
 D @BLOCK
"RTN","SCMCBK",115,0)
 ;
"RTN","SCMCBK",116,0)
 S SCOK=0
"RTN","SCMCBK",117,0)
 ;
"RTN","SCMCBK",118,0)
 S SCOK=$$PTTP^SCAPMC11(SCFRMPOS,.SCDTRNG,.SCLOC,.SCERMSG)
"RTN","SCMCBK",119,0)
 K ^TMP("SCMC",$J,"EXCLUDE PT")
"RTN","SCMCBK",120,0)
 M ^TMP($J,"SC PCMM IN")=@SCLOC
"RTN","SCMCBK",121,0)
 ;
"RTN","SCMCBK",122,0)
 S I1=$G(^TMP($J,"SC PCMM IN",0))
"RTN","SCMCBK",123,0)
 F I=1:1:I1 S ^TMP($J,"PCMM TMP",I)=$G(^TMP($J,"SC PCMM IN",I))
"RTN","SCMCBK",124,0)
 D ALPHA^SCAPMCU2("^TMP($J,""PCMM TMP"")","^TMP($J,""SCPOS"")")
"RTN","SCMCBK",125,0)
 S SCOK=$J_U_+I1_U_SCOK
"RTN","SCMCBK",126,0)
 ;
"RTN","SCMCBK",127,0)
 ;IF '+$G(^TMP($J,"SCPOS",0)) D  S SCOK=$J_U_SCOK
"RTN","SCMCBK",128,0)
 ;. S I="" F  S I=$O(^TMP($J,"SCPOS",I)) Q:'I  S SCOK=I
"RTN","SCMCBK",129,0)
 ;
"RTN","SCMCBK",130,0)
 D CLRVAR^SCMCBK1
"RTN","SCMCBK",131,0)
 Q
"RTN","SCMCBK",132,0)
 ;
"RTN","SCMCBK",133,0)
PTAPBLD(SCOK,SC) ;  Build patient list for selected appointment range.
"RTN","SCMCBK",134,0)
 ;     '  SC BLD PAT APT LIST '
"RTN","SCMCBK",135,0)
 ;
"RTN","SCMCBK",136,0)
 ;N SCCLN,SCTEAM,SCDTRNG,SCLOC,SCERMSG,SCNUM,SCCOUNT,SCMORE,SCOK1,SCER2,SCOUT,SCBLOCK
"RTN","SCMCBK",137,0)
 ;
"RTN","SCMCBK",138,0)
 D NEWVAR^SCMCBK1
"RTN","SCMCBK",139,0)
 D CHK^SCUTBK
"RTN","SCMCBK",140,0)
 D TMP^SCUTBK
"RTN","SCMCBK",141,0)
 ;
"RTN","SCMCBK",142,0)
 D PARSE^SCMCBK1(.SC)
"RTN","SCMCBK",143,0)
 ;
"RTN","SCMCBK",144,0)
 K ^TMP($J,"SCCLN")
"RTN","SCMCBK",145,0)
 ;
"RTN","SCMCBK",146,0)
 ;   Build exclude list
"RTN","SCMCBK",147,0)
 S BLOCK=$S(SCPOS'="":"BLKPOS",1:"BLKTM")
"RTN","SCMCBK",148,0)
 S SCBLOCK=$S(SCPOS'="":SCPOS,1:SCTEAM)
"RTN","SCMCBK",149,0)
 D @BLOCK
"RTN","SCMCBK",150,0)
 ;
"RTN","SCMCBK",151,0)
 IF 'SCOK1 S SCOK="0^0^0^0" G PTAPQ
"RTN","SCMCBK",152,0)
 S SCOK=0
"RTN","SCMCBK",153,0)
 S SCOK=$$PTAP^SCAPMC28(SCCLN,.SCDTRNG,SCNUM,.SCLOC,"SCERMSG",SCMORE)
"RTN","SCMCBK",154,0)
 K ^TMP("SCMC",$J,"EXCLUDE PT")
"RTN","SCMCBK",155,0)
 ;
"RTN","SCMCBK",156,0)
 M ^TMP($J,"SC PCMM IN")=@SCLOC
"RTN","SCMCBK",157,0)
 ;
"RTN","SCMCBK",158,0)
 S I1=$G(^TMP($J,"SC PCMM IN",0))
"RTN","SCMCBK",159,0)
 F I=1:1:I1 S ^TMP($J,"PCMM TMP",I)=$G(^TMP($J,"SC PCMM IN",I))
"RTN","SCMCBK",160,0)
 ;
"RTN","SCMCBK",161,0)
 D ALPHA^SCAPMCU2("^TMP($J,""PCMM TMP"")","^TMP($J,""SCAPP"")")
"RTN","SCMCBK",162,0)
 S SCOK=$J_U_I1_U_SCOK
"RTN","SCMCBK",163,0)
 ;
"RTN","SCMCBK",164,0)
 D CLRVAR^SCMCBK1
"RTN","SCMCBK",165,0)
PTAPQ Q
"RTN","SCMCBK",166,0)
 ;
"RTN","SCMCBK",167,0)
PTGET(SCDATA,SC) ;  Return a block of patients to the client
"RTN","SCMCBK",168,0)
 ;     'SC GET PAT BLOCK'
"RTN","SCMCBK",169,0)
 ;
"RTN","SCMCBK",170,0)
 ;     SCJOB   = $J for the ^TMP global
"RTN","SCMCBK",171,0)
 ;     SCJOBID = The second subscript id for the ^TMP global
"RTN","SCMCBK",172,0)
 ;     SCSTART = Beginning entry number for the block retrieval in the ^TMP global
"RTN","SCMCBK",173,0)
 ;     SCEND   = The ending entry number for the block retrieval
"RTN","SCMCBK",174,0)
 ;     SCLAST  = The last entry number in the ^TMP global
"RTN","SCMCBK",175,0)
 ;
"RTN","SCMCBK",176,0)
 N SCJOB,SCSTART,SCEND,I,SCLAST,SCJOBID
"RTN","SCMCBK",177,0)
 ;
"RTN","SCMCBK",178,0)
 D CHK^SCUTBK
"RTN","SCMCBK",179,0)
 D TMP^SCUTBK
"RTN","SCMCBK",180,0)
 ;
"RTN","SCMCBK",181,0)
 D PARSE^SCMCBK1(.SC)
"RTN","SCMCBK",182,0)
 ;
"RTN","SCMCBK",183,0)
 F I=SCSTART:1:SCEND Q:'$G(^TMP(SCJOB,SCJOBID,I),0)  D
"RTN","SCMCBK",184,0)
 . S SCDATA(I)=^TMP(SCJOB,SCJOBID,I)
"RTN","SCMCBK",185,0)
 I SCEND>SCLAST K ^TMP(SCJOB,SCJOBID)
"RTN","SCMCBK",186,0)
 ;
"RTN","SCMCBK",187,0)
 D CLRVAR^SCMCBK1
"RTN","SCMCBK",188,0)
 Q
"RTN","SCMCBK",189,0)
 ;
"RTN","SCMCBK",190,0)
PTLSTBLD(SCOK,SCVAL) ;  Build the list of patients to be assigned in the ^TMP($J,"SC PATIENT LIST",DFN) global
"RTN","SCMCBK",191,0)
 ;  'SC BLD PAT LIST'
"RTN","SCMCBK",192,0)
 ;
"RTN","SCMCBK",193,0)
 N SCJOB,SCDFN
"RTN","SCMCBK",194,0)
 ;
"RTN","SCMCBK",195,0)
 D CHK^SCUTBK
"RTN","SCMCBK",196,0)
 D TMP^SCUTBK
"RTN","SCMCBK",197,0)
 ;
"RTN","SCMCBK",198,0)
 S SCOK=0
"RTN","SCMCBK",199,0)
 I SCVAL["Start" D  G PTBLDQ
"RTN","SCMCBK",200,0)
 . K ^TMP($J,"SC PATIENT LIST")
"RTN","SCMCBK",201,0)
 . S SCOK=$J
"RTN","SCMCBK",202,0)
 ;
"RTN","SCMCBK",203,0)
 S SCJOB=$P(SCVAL,U,1)
"RTN","SCMCBK",204,0)
 S SCDFN=$P(SCVAL,U,2)
"RTN","SCMCBK",205,0)
 S ^TMP(SCJOB,"SC PATIENT LIST",SCDFN)=""
"RTN","SCMCBK",206,0)
 S SCOK=1
"RTN","SCMCBK",207,0)
PTBLDQ Q
"RTN","SCMCBK",208,0)
 ;
"RTN","SCMCBK",209,0)
PTFILE(SCOK,SC) ;  File the patient assignments in the ^TMP($J,"SC TEAM ASSIGN",SCDFN) global
"RTN","SCMCBK",210,0)
 ;    'SC FILE PAT TM ASGN'
"RTN","SCMCBK",211,0)
 ;
"RTN","SCMCBK",212,0)
 N SCADDFLD,SCTEAM,SCFILE,SCJOB,SCNEW,SCOLD,SCBAD,SCERMSG,SCX,SCDTVAR
"RTN","SCMCBK",213,0)
 ;
"RTN","SCMCBK",214,0)
 D CHK^SCUTBK
"RTN","SCMCBK",215,0)
 D TMP^SCUTBK
"RTN","SCMCBK",216,0)
 ;
"RTN","SCMCBK",217,0)
 D PARSE^SCMCBK1(.SC)
"RTN","SCMCBK",218,0)
 G:+$G(SCJOB)=0 FILEQ
"RTN","SCMCBK",219,0)
 ;
"RTN","SCMCBK",220,0)
 ;
"RTN","SCMCBK",221,0)
 S SCADDFLD(.08)=$G(SC("TYPE"),99)
"RTN","SCMCBK",222,0)
 S SCADDFLD(.1)=$G(SC("RESTRICT"),0)
"RTN","SCMCBK",223,0)
 S SCADDFLD(.11)=DUZ
"RTN","SCMCBK",224,0)
 S SCADDFLD(.12)=DT
"RTN","SCMCBK",225,0)
 ;
"RTN","SCMCBK",226,0)
 S SCX=$$ACPTATM^SCAPMC6("^TMP(SCJOB,""SC PATIENT LIST"")",SCTEAM,"SCADDFLD",SCDTVAR,"SCERMSG","SCNEW","SCOLD","SCBAD")
"RTN","SCMCBK",227,0)
 D BAD^SCMCBK1(.SCBAD,.SCOLD,.SCOK)
"RTN","SCMCBK",228,0)
 S SCOK(.1)=SCX
"RTN","SCMCBK",229,0)
 ;
"RTN","SCMCBK",230,0)
 K ^TMP(SCJOB,"SC PATIENT LIST")
"RTN","SCMCBK",231,0)
 ;
"RTN","SCMCBK",232,0)
 D CLRVAR^SCMCBK1
"RTN","SCMCBK",233,0)
FILEQ Q
"RTN","SCMCBK",234,0)
 ;
"RTN","SCMCBK",235,0)
POSFILE(SCOK,SC) ;  File the patient assignments in the ^TMP($J,"SC PATIENT LIST") global 
"RTN","SCMCBK",236,0)
 ;   ' SC FILE PAT POS ASGN '
"RTN","SCMCBK",237,0)
 ;
"RTN","SCMCBK",238,0)
 N SCADDFLD,SCTEAM,SCFILE,SCJOB,SCNEW,SCOLD,SCBAD,SCERMSG,SCX,SCPOS,SCDTVAR,SCMAFLD,SCADTM,SCNEW1
"RTN","SCMCBK",239,0)
 ;
"RTN","SCMCBK",240,0)
 D CHK^SCUTBK
"RTN","SCMCBK",241,0)
 D TMP^SCUTBK
"RTN","SCMCBK",242,0)
 ;
"RTN","SCMCBK",243,0)
 D PARSE^SCMCBK1(.SC)
"RTN","SCMCBK",244,0)
 G:+$G(SCJOB)=0 FILEQ
"RTN","SCMCBK",245,0)
 S SCADTM=1
"RTN","SCMCBK",246,0)
 ;
"RTN","SCMCBK",247,0)
 S SCADDFLD(.05)=$G(SC("TYPE"),0)
"RTN","SCMCBK",248,0)
 S SCADDFLD(.06)=DUZ
"RTN","SCMCBK",249,0)
 S SCADDFLD(.07)=DT
"RTN","SCMCBK",250,0)
 ;
"RTN","SCMCBK",251,0)
 S SCX=$$ACPTATP^SCAPMC21("^TMP(SCJOB,""SC PATIENT LIST"")",SCPOS,"SCADDFLD",SCDTVAR,"SCERMSG",SCADTM,"","SCNEW","SCNEW1","SCOLD","SCBAD")
"RTN","SCMCBK",252,0)
 ;
"RTN","SCMCBK",253,0)
 D BAD2^SCMCBK1(.SCBAD,.SCOLD,.SCOK)
"RTN","SCMCBK",254,0)
 S SCOK(.1)=SCX
"RTN","SCMCBK",255,0)
 K ^TMP(SCJOB,"SC PATIENT LIST")
"RTN","SCMCBK",256,0)
 ;
"RTN","SCMCBK",257,0)
 D CLRVAR^SCMCBK1
"RTN","SCMCBK",258,0)
 Q
"RTN","SCMCBK",259,0)
 ;
"RTN","SCMCBK",260,0)
BLKPOS ;
"RTN","SCMCBK",261,0)
 N SCX
"RTN","SCMCBK",262,0)
 S SCX=$G(SCDTRNG("END"))
"RTN","SCMCBK",263,0)
 S SCDTRNG("END")=3990101 ;check forever
"RTN","SCMCBK",264,0)
 S SCOK1=$$PTTP^SCAPMC(SCBLOCK,.SCDTRNG,"^TMP(""SCMC"",$J,""EXCLUDE PT"")","SCER2")
"RTN","SCMCBK",265,0)
 S SCDTRNG("END")=SCX
"RTN","SCMCBK",266,0)
 Q
"RTN","SCMCBK",267,0)
 ;
"RTN","SCMCBK",268,0)
BLKTM ;
"RTN","SCMCBK",269,0)
 N SCX
"RTN","SCMCBK",270,0)
 S SCX=$G(SCDTRNG("END"))
"RTN","SCMCBK",271,0)
 S SCDTRNG("END")=3990101 ;check forever
"RTN","SCMCBK",272,0)
 S SCOK1=$$PTTM^SCAPMC(SCBLOCK,.SCDTRNG,"^TMP(""SCMC"",$J,""EXCLUDE PT"")","SCER2")
"RTN","SCMCBK",273,0)
 S SCDTRNG("END")=SCX
"RTN","SCMCBK",274,0)
 Q
"RTN","SCMCBK1")
0^146^B69229251
"RTN","SCMCBK1",1,0)
SCMCBK1 ;LB/SCK - Broker Utilities for multiple patient assignments;
"RTN","SCMCBK1",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCBK1",3,0)
 ;;1T1;;
"RTN","SCMCBK1",4,0)
 Q
"RTN","SCMCBK1",5,0)
 ;
"RTN","SCMCBK1",6,0)
PARSE(SC) ;
"RTN","SCMCBK1",7,0)
 S SCTEAM=$G(SC("TEAM"),"")
"RTN","SCMCBK1",8,0)
 S SCPOS=$G(SC("POSITION"),"")
"RTN","SCMCBK1",9,0)
 S SCDTVAR=$G(SC("DATE"),DT)
"RTN","SCMCBK1",10,0)
 S SCDTRNG("BEGIN")=$G(SC("BEGIN"),DT)
"RTN","SCMCBK1",11,0)
 S SCDTRNG("END")=$G(SC("END"),DT)
"RTN","SCMCBK1",12,0)
 S SCDTRNG("INCL")=$G(SC("INCL"),0)
"RTN","SCMCBK1",13,0)
 S SCJOB=$G(SC("JOB"),"")
"RTN","SCMCBK1",14,0)
 S SCSTART=$G(SC("BSTART"),0)
"RTN","SCMCBK1",15,0)
 S SCEND=$G(SC("BEND"),0)
"RTN","SCMCBK1",16,0)
 S SCLAST=$G(SC("BLAST"),0)
"RTN","SCMCBK1",17,0)
 S SCFILE=$G(SC("FILE"),"")
"RTN","SCMCBK1",18,0)
 S SCJOBID=$G(SC("JOBID"),"")
"RTN","SCMCBK1",19,0)
 S SCNUM=$G(SC("MAX"),300)
"RTN","SCMCBK1",20,0)
 S SCCLN=$G(SC("CLINIC"),"")
"RTN","SCMCBK1",21,0)
 S SCSCDE=$G(SC("STOPCODE"),"")
"RTN","SCMCBK1",22,0)
 S SCFRMTM=$G(SC("FROMTEAM"),"")
"RTN","SCMCBK1",23,0)
 S SCFRMPOS=$G(SC("FROMPOS"),"")
"RTN","SCMCBK1",24,0)
 S SCDFN=$G(SC("DFN"),"")
"RTN","SCMCBK1",25,0)
 S SCMORE=$G(SC("MORE"),"")
"RTN","SCMCBK1",26,0)
 Q
"RTN","SCMCBK1",27,0)
 ;
"RTN","SCMCBK1",28,0)
NEWVAR ;
"RTN","SCMCBK1",29,0)
 N SCCLN,SCSCDE,SCTEAM,SCDTRNG,SCLOC,SCERMSG,SCNUM,SCCOUNT,SCMORE,SCOK1,SCER2,SCOUT,BLOCK,SCBLOCK,SCFRMTM,SCFRMPOS,SCSRCE,SCSRCTYP
"RTN","SCMCBK1",30,0)
 N SCADDFLD,SCNEW,SCOLD,SCBAD,SUBRTN,SCX,SCTMP
"RTN","SCMCBK1",31,0)
 ;
"RTN","SCMCBK1",32,0)
 K ^TMP($J,"SC PCMM IN")
"RTN","SCMCBK1",33,0)
 K ^TMP($J,"PCMM TMP")
"RTN","SCMCBK1",34,0)
 K ^TMP("SC TMP LIST",$J)
"RTN","SCMCBK1",35,0)
 K ^TMP($J,"SC PATIENT LIST")
"RTN","SCMCBK1",36,0)
 ;
"RTN","SCMCBK1",37,0)
 Q
"RTN","SCMCBK1",38,0)
 ;
"RTN","SCMCBK1",39,0)
CLRVAR ;  Clear all parsing variables        
"RTN","SCMCBK1",40,0)
 ;
"RTN","SCMCBK1",41,0)
 K SCNUM,SCSCDE,SCCLN,SCJOBID,SCFILE,SCLAST,SCEND,SCSTART,SCJOB,SCDTRNG,SCDTVAR,SCPOS,SCTEAM,SCFRMTM,SCFRMPOS,SCDFN,BLOCK,SCBLOCK,SCX,SUBRTN
"RTN","SCMCBK1",42,0)
 K SCTMP,SCBAD,SCOLD,SCNEW
"RTN","SCMCBK1",43,0)
 ;
"RTN","SCMCBK1",44,0)
 K ^TMP($J,"SC PCMM IN")
"RTN","SCMCBK1",45,0)
 K ^TMP($J,"PCMM TMP")
"RTN","SCMCBK1",46,0)
 K ^TMP("SC TMP LIST",$J)
"RTN","SCMCBK1",47,0)
 K ^TMP($J,"SC PATIENT LIST")
"RTN","SCMCBK1",48,0)
 Q
"RTN","SCMCBK1",49,0)
 ;
"RTN","SCMCBK1",50,0)
PTCLEN(SCOK,SC) ;  Enroll patient in associated clinic for a position
"RTN","SCMCBK1",51,0)
 ;       ' SC PAT ENROLL CLN '
"RTN","SCMCBK1",52,0)
 ;
"RTN","SCMCBK1",53,0)
 N SCCLN,SCDFN,SCDTVAR,SCERMSG,SCADDFLD
"RTN","SCMCBK1",54,0)
 ;
"RTN","SCMCBK1",55,0)
 D CHK^SCUTBK
"RTN","SCMCBK1",56,0)
 D TMP^SCUTBK
"RTN","SCMCBK1",57,0)
 ;
"RTN","SCMCBK1",58,0)
 D PARSE(.SC)
"RTN","SCMCBK1",59,0)
 S SCADDFLD(1)=$G(SC("ADD1"),"O")
"RTN","SCMCBK1",60,0)
 S SCOK=0
"RTN","SCMCBK1",61,0)
 ;
"RTN","SCMCBK1",62,0)
 S SCOK=$$ACPTCL^SCAPMC18(SCDFN,SCCLN,"SCADDFLD",SCDTVAR,"SCERMSG")
"RTN","SCMCBK1",63,0)
 ;
"RTN","SCMCBK1",64,0)
 D CLRVAR
"RTN","SCMCBK1",65,0)
 Q
"RTN","SCMCBK1",66,0)
 ;
"RTN","SCMCBK1",67,0)
CHKPOS(SCOK,SC) ;  Check for primary care pratitioner and attending positions for patient
"RTN","SCMCBK1",68,0)
 ;    ' SC CHECK FOR PC POS '
"RTN","SCMCBK1",69,0)
 ;  Piece 1 of SCOK = 1 if ok for practitioner role
"RTN","SCMCBK1",70,0)
 ;                    0 if not ok
"RTN","SCMCBK1",71,0)
 ;  Piece 2 of SCOK = 1 if ok for ateending role
"RTN","SCMCBK1",72,0)
 ;                    0 if not ok
"RTN","SCMCBK1",73,0)
 ;
"RTN","SCMCBK1",74,0)
 N SCPOS,SCDTVAR,SCDFN
"RTN","SCMCBK1",75,0)
 ;
"RTN","SCMCBK1",76,0)
 D CHK^SCUTBK
"RTN","SCMCBK1",77,0)
 D TMP^SCUTBK
"RTN","SCMCBK1",78,0)
 ;
"RTN","SCMCBK1",79,0)
 D PARSE(.SC)
"RTN","SCMCBK1",80,0)
 ;
"RTN","SCMCBK1",81,0)
 S SCOK=$$PCRLPTTP^SCMCTPU2(SCDFN,SCPOS,SCDTVAR)
"RTN","SCMCBK1",82,0)
 ;
"RTN","SCMCBK1",83,0)
 D CLRVAR
"RTN","SCMCBK1",84,0)
 Q
"RTN","SCMCBK1",85,0)
 ;
"RTN","SCMCBK1",86,0)
NOPCTM(SCOK,SC) ;  Build list of patients with a primary care assignment, but no primary care team;
"RTN","SCMCBK1",87,0)
 ;    ' SC BLD NOPC TM LIST '
"RTN","SCMCBK1",88,0)
 ;
"RTN","SCMCBK1",89,0)
 D NEWVAR
"RTN","SCMCBK1",90,0)
 ;
"RTN","SCMCBK1",91,0)
 D CHK^SCUTBK
"RTN","SCMCBK1",92,0)
 D TMP^SCUTBK
"RTN","SCMCBK1",93,0)
 ;
"RTN","SCMCBK1",94,0)
 D PARSE(.SC)
"RTN","SCMCBK1",95,0)
 ;
"RTN","SCMCBK1",96,0)
 K ^TMP($J,"SCPCNO")
"RTN","SCMCBK1",97,0)
 ;  Build exclude list
"RTN","SCMCBK1",98,0)
 S BLOCK=$S(SCPOS'="":"BLKPOS^SCMCBK",1:"BLKTM^SCMCBK")
"RTN","SCMCBK1",99,0)
 S SCBLOCK=$S(SCPOS'="":SCPOS,1:SCTEAM)
"RTN","SCMCBK1",100,0)
 D @BLOCK
"RTN","SCMCBK1",101,0)
 ;
"RTN","SCMCBK1",102,0)
 S SCOK=0
"RTN","SCMCBK1",103,0)
 ;
"RTN","SCMCBK1",104,0)
 S SCLOC="^TMP($J,""SC PCMM IN"")"
"RTN","SCMCBK1",105,0)
 D PTPCNOTM^SCAPMC20(.SCLOC,SCDTVAR)
"RTN","SCMCBK1",106,0)
 K ^TMP("SCMC",$J,"EXCLUDE PT")
"RTN","SCMCBK1",107,0)
 ;
"RTN","SCMCBK1",108,0)
 S I=""
"RTN","SCMCBK1",109,0)
 F  S I=$O(^TMP($J,"SC PCMM IN",I)) Q:'I  D
"RTN","SCMCBK1",110,0)
 . S ^TMP($J,"PCMM TMP",I)=^TMP($J,"SC PCMM IN",I)
"RTN","SCMCBK1",111,0)
 ;
"RTN","SCMCBK1",112,0)
 D ALPHA^SCAPMCU2("^TMP($J,""PCMM TMP"")","^TMP($J,""SCPCNO"")")
"RTN","SCMCBK1",113,0)
 S I1="" F  S I1=$O(^TMP($J,"SCPCNO",I1)) Q:'I1  S I=I1
"RTN","SCMCBK1",114,0)
 ;
"RTN","SCMCBK1",115,0)
 S SCOK=$J_U_+I_U_1
"RTN","SCMCBK1",116,0)
 ;
"RTN","SCMCBK1",117,0)
 D CLRVAR
"RTN","SCMCBK1",118,0)
 Q
"RTN","SCMCBK1",119,0)
 ;
"RTN","SCMCBK1",120,0)
ASGNALL(SCOK,SC) ;  Assign all entries for the selection source to the appropriate team.
"RTN","SCMCBK1",121,0)
 ;    '  SC FILE ALL PAT TM ASGN  '
"RTN","SCMCBK1",122,0)
 ;
"RTN","SCMCBK1",123,0)
 D NEWVAR
"RTN","SCMCBK1",124,0)
 ;
"RTN","SCMCBK1",125,0)
 D CHK^SCUTBK
"RTN","SCMCBK1",126,0)
 D TMP^SCUTBK
"RTN","SCMCBK1",127,0)
 ;
"RTN","SCMCBK1",128,0)
 D PARSE(.SC)
"RTN","SCMCBK1",129,0)
 S SCSRCE=$G(SC("SOURCE"),"")
"RTN","SCMCBK1",130,0)
 S SCADDFLD(.08)=$G(SC("TYPE"),99)
"RTN","SCMCBK1",131,0)
 S SCADDFLD(.1)=$G(SC("RESTRICT"),0)
"RTN","SCMCBK1",132,0)
 S SCADDFLD(.11)=DUZ
"RTN","SCMCBK1",133,0)
 S SCADDFLD(.12)=DT
"RTN","SCMCBK1",134,0)
 ;
"RTN","SCMCBK1",135,0)
 S DTMP=$G(SCDTRNG("END"))
"RTN","SCMCBK1",136,0)
 S SCDTTRNG("END")=3990101
"RTN","SCMCBK1",137,0)
 S SCOK2=$$PTTM^SCAPMC(SCTEAM,.SCDTRNG,"^TMP(""SCMC"",$J,""EXCLUDE PT"")","SCER2")
"RTN","SCMCBK1",138,0)
 S SCDTRNG("END")=DTMP
"RTN","SCMCBK1",139,0)
 ;
"RTN","SCMCBK1",140,0)
 S SCSRCTYP=$P(SCSRCE,U,1)
"RTN","SCMCBK1",141,0)
 D @SCSRCTYP
"RTN","SCMCBK1",142,0)
 ;
"RTN","SCMCBK1",143,0)
 K SCBAD,SCOLD,SCNEW
"RTN","SCMCBK1",144,0)
 S SCX=$$ACPTATM^SCAPMC6("^TMP($J,""SC PATIENT LIST"")",SCTEAM,"SCADDFLD",SCDTVAR,"SCERMSG","SCNEW","SCOLD","SCBAD")
"RTN","SCMCBK1",145,0)
 ;
"RTN","SCMCBK1",146,0)
 K ^TMP("SCMC",$J,"EXCLUDE PT")
"RTN","SCMCBK1",147,0)
 D BAD(.SCBAD,.SCOLD,.SCOK)
"RTN","SCMCBK1",148,0)
 S SCOK(.1)=SCX
"RTN","SCMCBK1",149,0)
 ;
"RTN","SCMCBK1",150,0)
 D CLRVAR
"RTN","SCMCBK1",151,0)
 Q
"RTN","SCMCBK1",152,0)
 ;
"RTN","SCMCBK1",153,0)
CLN ;    File all patients in selected clinic.
"RTN","SCMCBK1",154,0)
 ;
"RTN","SCMCBK1",155,0)
 S SCOK1=$$PTCLBR^SCAPMC26($P($G(SCSRCE),U,2),.SCTEAM,.SCDTRNG)
"RTN","SCMCBK1",156,0)
 S I=0 F  S I=$O(^TMP($J,"SCCLPT",I)) Q:'I  D
"RTN","SCMCBK1",157,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"SCCLPT",I)),U))=""
"RTN","SCMCBK1",158,0)
 K ^TMP($J,"SCCLPT")
"RTN","SCMCBK1",159,0)
 Q
"RTN","SCMCBK1",160,0)
 ;
"RTN","SCMCBK1",161,0)
STOPC ;   File all patients in the selected stop code
"RTN","SCMCBK1",162,0)
 ;
"RTN","SCMCBK1",163,0)
 S SCOK1=$$PTST^SCAPMC27($P($G(SCSRCE),U,2),.SCDTRNG,SCNUM,.SCTMP,"ERRMSG",0)
"RTN","SCMCBK1",164,0)
 M ^TMP($J,"PCMM TMP")=@SCTMP
"RTN","SCMCBK1",165,0)
 S I=0 F  S I=$O(^TMP($J,"PCMM TMP",I)) Q:'I  D
"RTN","SCMCBK1",166,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"PCMM TMP",I)),U))=""
"RTN","SCMCBK1",167,0)
 Q
"RTN","SCMCBK1",168,0)
 ;
"RTN","SCMCBK1",169,0)
APPT ;   File all patients for the selected clinic appointment range
"RTN","SCMCBK1",170,0)
 S SCOK1=$$PTAP^SCAPMC28($P($G(SCSRCE),U,2),.SCDTRNG,SCNUM,.SCTMP,"SCERMSG",0)
"RTN","SCMCBK1",171,0)
 M ^TMP($J,"PCMM TMP")=@SCTMP
"RTN","SCMCBK1",172,0)
 S I=0 F  S I=$O(^TMP($J,"PCMM TMP",I)) Q:'I  D
"RTN","SCMCBK1",173,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"PCMM TMP",I)),U))=""
"RTN","SCMCBK1",174,0)
 Q
"RTN","SCMCBK1",175,0)
 ;
"RTN","SCMCBK1",176,0)
TEAM ;  File all patients for the selected team
"RTN","SCMCBK1",177,0)
 S SCOK1=$$PTTM^SCAPMC2($P($G(SCSRCE),U,2),.SCDTRNG,.SCTMP,"SCERMSG")
"RTN","SCMCBK1",178,0)
 M ^TMP($J,"PCMM TMP")=@SCTMP
"RTN","SCMCBK1",179,0)
 S I=0 F  S I=$O(^TMP($J,"PCMM TMP",I)) Q:'I  D
"RTN","SCMCBK1",180,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"PCMM TMP",I)),U))=""
"RTN","SCMCBK1",181,0)
 Q
"RTN","SCMCBK1",182,0)
 ;
"RTN","SCMCBK1",183,0)
ASGALLP(SCOK,SC) ;  Assign all entries in the selected source to the selected team and position
"RTN","SCMCBK1",184,0)
 ;
"RTN","SCMCBK1",185,0)
 N DTMP
"RTN","SCMCBK1",186,0)
 D NEWVAR
"RTN","SCMCBK1",187,0)
 D CHK^SCUTBK
"RTN","SCMCBK1",188,0)
 D TMP^SCUTBK
"RTN","SCMCBK1",189,0)
 ;
"RTN","SCMCBK1",190,0)
 D PARSE(.SC)
"RTN","SCMCBK1",191,0)
 S SCSRCE=$G(SC("SOURCE"),"")
"RTN","SCMCBK1",192,0)
 S SCADDFLD(.05)=$G(SC("TYPE"),0)
"RTN","SCMCBK1",193,0)
 S SCADDFLD(.06)=DUZ
"RTN","SCMCBK1",194,0)
 S SCADDFLD(.07)=DT
"RTN","SCMCBK1",195,0)
 ;
"RTN","SCMCBK1",196,0)
 S DTMP=$G(SCDTRNG("END"))
"RTN","SCMCBK1",197,0)
 S SCDTRNG("END")=3990101
"RTN","SCMCBK1",198,0)
 S SCOK2=$$PTTP^SCAPMC(SCPOS,.SCDTRNG,"^TMP(""SCMC"",$J,""EXCLUDE PT"")","SCER2")
"RTN","SCMCBK1",199,0)
 S SCDTRNG("END")=DTMP
"RTN","SCMCBK1",200,0)
 ;
"RTN","SCMCBK1",201,0)
 S SCSRCTYP=$P(SCSRCE,U,1)
"RTN","SCMCBK1",202,0)
 D @SCSRCTYP
"RTN","SCMCBK1",203,0)
 ;
"RTN","SCMCBK1",204,0)
 K SCBAD,SCOLD,SCNEW
"RTN","SCMCBK1",205,0)
 S SCX=$$ACPTATP^SCAPMC21("^TMP($J,""SC PATIENT LIST"")",SCPOS,"SCADDFLD",SCDTVAR,"SCERRMSG",1,"","SCNEW","SCNEW1","SCOLD","SCBAD")
"RTN","SCMCBK1",206,0)
 ;
"RTN","SCMCBK1",207,0)
 K ^TMP("SCMC",$J,"EXCLUDE PT")
"RTN","SCMCBK1",208,0)
 D BAD2(.SCBAD,.SCOLD,.SCOK)
"RTN","SCMCBK1",209,0)
 S SCOK(.1)=SCX
"RTN","SCMCBK1",210,0)
 ;
"RTN","SCMCBK1",211,0)
 D CLRVAR
"RTN","SCMCBK1",212,0)
 Q
"RTN","SCMCBK1",213,0)
 ;
"RTN","SCMCBK1",214,0)
PCLN ;  File all patients in selected clinic to the new position and team
"RTN","SCMCBK1",215,0)
 ;
"RTN","SCMCBK1",216,0)
 S SCOK1=$$PTCLBR^SCAPMC26($P($G(SCSRCE),U,2),.SCTEAM,.SCDTRNG)
"RTN","SCMCBK1",217,0)
 S I=0 F  S I=$O(^TMP($J,"SCCLPT",I)) Q:'I  D
"RTN","SCMCBK1",218,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"SCCLPT",I)),U))=""
"RTN","SCMCBK1",219,0)
 ;
"RTN","SCMCBK1",220,0)
 Q
"RTN","SCMCBK1",221,0)
 ;
"RTN","SCMCBK1",222,0)
PSTOPC ;  File all patients in with the selected stop code to the new position and team
"RTN","SCMCBK1",223,0)
 ;
"RTN","SCMCBK1",224,0)
 S SCOK1=$$PTST^SCAPMC27($P($G(SCSRCE),U,2),.SCDTRNG,500,.SCTMP,"SCERMSG",0)
"RTN","SCMCBK1",225,0)
 M ^TMP($J,"PCMM TMP")=@SCTMP
"RTN","SCMCBK1",226,0)
 S I=0 F  S I=$O(^TMP($J,"PCMM TMP",I)) Q:'I  D
"RTN","SCMCBK1",227,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"PCMM TMP",I)),U))=""
"RTN","SCMCBK1",228,0)
 Q
"RTN","SCMCBK1",229,0)
 ;
"RTN","SCMCBK1",230,0)
PAPPT ;
"RTN","SCMCBK1",231,0)
 S SCOK1=$$PTAP^SCAPMC28($P($G(SCSRCE),U,2),.SCDTRNG,500,.SCTMP,"SCERMSG",0)
"RTN","SCMCBK1",232,0)
 M ^TMP($J,"PCMM TMP")=@SCTMP
"RTN","SCMCBK1",233,0)
 S I=0 F  S I=$O(^TMP($J,"PCMM TMP",I)) Q:'I  D
"RTN","SCMCBK1",234,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"PCMM TMP",I)),U))=""
"RTN","SCMCBK1",235,0)
 Q
"RTN","SCMCBK1",236,0)
 ;
"RTN","SCMCBK1",237,0)
PTEAM ;
"RTN","SCMCBK1",238,0)
 S SCOK1=$$PTTM^SCAPMC2($P($G(SCSRCE),U,2),.SCDTRNG,.SCTMP,"SCERMSG")
"RTN","SCMCBK1",239,0)
 M ^TMP($J,"PCMM TMP")=@SCTMP
"RTN","SCMCBK1",240,0)
 S I=0 F  S I=$O(^TMP($J,"PCMM TMP",I)) Q:'I  D
"RTN","SCMCBK1",241,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"PCMM TMP",I)),U))=""
"RTN","SCMCBK1",242,0)
 Q
"RTN","SCMCBK1",243,0)
 ;
"RTN","SCMCBK1",244,0)
PPOS ;
"RTN","SCMCBK1",245,0)
 S SCOK1=$$PTTP^SCAPMC11($P($G(SCSRCE),U,2),.SCDTRNG,.SCTMP,"SCERMSG")
"RTN","SCMCBK1",246,0)
 M ^TMP($J,"PCMM TMP")=@SCTMP
"RTN","SCMCBK1",247,0)
 S I=0 F  S I=$O(^TMP($J,"PCMM TMP",I)) Q:'I  D
"RTN","SCMCBK1",248,0)
 . S ^TMP($J,"SC PATIENT LIST",$P($G(^TMP($J,"PCMM TMP",I)),U))=""
"RTN","SCMCBK1",249,0)
 Q
"RTN","SCMCBK1",250,0)
 ;
"RTN","SCMCBK1",251,0)
BAD(SCBAD,SCOLD,SCOK) ;
"RTN","SCMCBK1",252,0)
 N SCDFN,SCPARM,DIERR
"RTN","SCMCBK1",253,0)
 S SCDFN=0
"RTN","SCMCBK1",254,0)
 F  S SCDFN=$O(SCBAD(SCDFN)) Q:'SCDFN  D
"RTN","SCMCBK1",255,0)
 . S SCPARM("PATIENT")=$P($G(^DPT(SCDFN,0)),U)_"   "_$P($G(^DPT(SCDFN,.36)),U,4)
"RTN","SCMCBK1",256,0)
 . D BLD^DIALOG(40442001.001,.SCPARM,"","SCOK","S")
"RTN","SCMCBK1",257,0)
 ;
"RTN","SCMCBK1",258,0)
 F  S SCDFN=$O(SCOLD(SCDFN)) Q:'SCDFN  D
"RTN","SCMCBK1",259,0)
 . S SCPARM("PATIENT")=$P($G(^DPT(SCDFN,0)),U)_"   "_$P($G(^DPT(SCDFN,.36)),U,4)
"RTN","SCMCBK1",260,0)
 . D BLD^DIALOG(40442001.002,.SCPARM,"","SCOK","S")
"RTN","SCMCBK1",261,0)
 D HDREC^SCUTBK3(.SCOK,$G(DIERR),"Patient Assignment to Teams")
"RTN","SCMCBK1",262,0)
 Q
"RTN","SCMCBK1",263,0)
 ;
"RTN","SCMCBK1",264,0)
BAD2(SCBAD,SCOLD,SCOK) ;
"RTN","SCMCBK1",265,0)
 N SCDFN,SCPARM,DIERR
"RTN","SCMCBK1",266,0)
 S SCDFN=0
"RTN","SCMCBK1",267,0)
 F  S SCDFN=$O(SCBAD(SCDFN)) Q:'SCDFN  D
"RTN","SCMCBK1",268,0)
 . S SCPARM("PATIENT")=$P($G(^DPT(SCDFN,0)),U)_"   "_$P($G(^DPT(SCDFN,.36)),U,4)
"RTN","SCMCBK1",269,0)
 . D BLD^DIALOG(40443001.001,.SCPARM,"","SCOK","S")
"RTN","SCMCBK1",270,0)
 ;
"RTN","SCMCBK1",271,0)
 F  S SCDFN=$O(SCOLD(SCDFN)) Q:'SCDFN  D
"RTN","SCMCBK1",272,0)
 . S SCPARM("PATIENT")=$P($G(^DPT(SCDFN,0)),U)_"   "_$P($G(^DPT(SCDFN,.36)),U,4)
"RTN","SCMCBK1",273,0)
 . D BLD^DIALOG(40443001.002,.SCPARM,"","SCOK","S")
"RTN","SCMCBK1",274,0)
 D HDREC^SCUTBK3(.SCOK,$G(DIERR),"Patient Assignment to Positions")
"RTN","SCMCBK1",275,0)
 Q
"RTN","SCMCCON")
0^124^B5385741
"RTN","SCMCCON",1,0)
SCMCCON ;ALB/REW - Patient Consult MailMessages ; 26 Mar 1996
"RTN","SCMCCON",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCCON",3,0)
 ;1
"RTN","SCMCCON",4,0)
MAIL(DFN,SCCLNM,ENORAP,DATE,SCTMCNA) ;Do Patient Team Changes MailMan Message
"RTN","SCMCCON",5,0)
 ;   DFN    - ien to PATIENT File
"RTN","SCMCCON",6,0)
 ;   SCCLNM - Name of Clinic
"RTN","SCMCCON",7,0)
 ;   ENORAP - Enrollment or Appointment? 1=Enrollment, 2=Appointment
"RTN","SCMCCON",8,0)
 ;   DATE   - Date of interest, Default =DT
"RTN","SCMCCON",9,0)
 ;   SCTMCNA- Array of teams affected
"RTN","SCMCCON",10,0)
 ;
"RTN","SCMCCON",11,0)
 ; - called by SCMC PT TEAM CHANGES MAIL MESSAGE protocol
"RTN","SCMCCON",12,0)
 G:$G(SCNOMAIL) END  ;- flag can be set to stop message generation
"RTN","SCMCCON",13,0)
 N XMDUZ,XMY,XMSUB,XMTEXT,VA,VAERR,XMZ,Y,SCCNXM
"RTN","SCMCCON",14,0)
 N SCTMAR,SCSTAT,SCNODE,SCY,SCSPACE,SCCNDTS,SCSTAT,SCTM
"RTN","SCMCCON",15,0)
 S SCCNDTS("BEGIN")=DATE,SCCNDTS("END")=DATE
"RTN","SCMCCON",16,0)
 S SCSTAT=$S(ENORAP=1:"Enrollment",(ENORAP=2):"Appointment",1:"")
"RTN","SCMCCON",17,0)
 S $P(SCSPACE," ",80)=""
"RTN","SCMCCON",18,0)
 ;   SCTMAR - ARRAY OF TEAMS (before & after)
"RTN","SCMCCON",19,0)
 ;set xmy array for practitioners in positions receiving consult notices
"RTN","SCMCCON",20,0)
 G:'$$PCMMXMY^SCAPMC25(4,DFN,SCTMCNA,"SCCMDTS",0) END
"RTN","SCMCCON",21,0)
 D EN^DDIOL("Sending Patient-Consult "_SCSTAT_" Message")
"RTN","SCMCCON",22,0)
 D PID^VADPT6
"RTN","SCMCCON",23,0)
 S SCPTNM=$P(^DPT(DFN,0),U,1)
"RTN","SCMCCON",24,0)
 S XMSUB=SCSTAT_" PATIENT-CLINIC "_SCSTAT_" for "_SCPTNM_" ("_VA("PID")_")",XMTEXT="SCCNXM(",SCLNCNT=0
"RTN","SCMCCON",25,0)
 D SETLN("This notice is sent because:")
"RTN","SCMCCON",26,0)
 D SETLN("  The patient had an "_SCSTAT_" to "_$G(SCCLNM)_" and")
"RTN","SCMCCON",27,0)
 D SETLN("  has restricted consults due to the following team assignment(s):")
"RTN","SCMCCON",28,0)
 S SCTM=0
"RTN","SCMCCON",29,0)
 F  S SCTM=$O(@SCTMCNA@(SCTM)) Q:'SCTM  D
"RTN","SCMCCON",30,0)
 .D SETLN("         "_@SCTMCNA@(SCTM))
"RTN","SCMCCON",31,0)
 S SCLNCNT=$$PCMAIL^SCMCMM(DFN,"SCCNXM",DT)
"RTN","SCMCCON",32,0)
 S XMDUZ=$G(DUZ,.5)
"RTN","SCMCCON",33,0)
 S XMY(XMDUZ)=""
"RTN","SCMCCON",34,0)
 D ^XMD
"RTN","SCMCCON",35,0)
END ;
"RTN","SCMCCON",36,0)
 Q
"RTN","SCMCCON",37,0)
 ;
"RTN","SCMCCON",38,0)
SETLN(TEXT) ;
"RTN","SCMCCON",39,0)
 Q:$G(TEXT)=""
"RTN","SCMCCON",40,0)
 ; increments SCLNCNT, adds text to sccnxm(sclncnt)
"RTN","SCMCCON",41,0)
 S SCLNCNT=SCLNCNT+1
"RTN","SCMCCON",42,0)
 S SCCNXM(SCLNCNT)=TEXT
"RTN","SCMCCON",43,0)
 Q
"RTN","SCMCCON",44,0)
 ;
"RTN","SCMCCON",45,0)
TEXT(SCFILE,SCNODE,SCPC,SCSPACE,SCLAB) ;returns fldname & external value
"RTN","SCMCCON",46,0)
 ;returns fldname & external value
"RTN","SCMCCON",47,0)
 ;   Note- Only works for non wp fields of standard numbering conventions
"RTN","SCMCCON",48,0)
 ;   SCFLILE =FILENUM
"RTN","SCMCCON",49,0)
 ;   SCNODE  = 0 NODE
"RTN","SCMCCON",50,0)
 ;   SCPC    = piece of node
"RTN","SCMCCON",51,0)
 ;   SCSPACE = 80 SPACES
"RTN","SCMCCON",52,0)
 ;   SCLAB = 1 if print field name
"RTN","SCMCCON",53,0)
 N SCX,SCINT,SCFLD
"RTN","SCMCCON",54,0)
 S SCX=""
"RTN","SCMCCON",55,0)
 S SCINT=$P(SCNODE,U,SCPC)
"RTN","SCMCCON",56,0)
 G:SCINT="" QTTXT
"RTN","SCMCCON",57,0)
 S SCFLD=SCPC*.01
"RTN","SCMCCON",58,0)
 ;;;
"RTN","SCMCCON",59,0)
 IF $G(SCLAB) D
"RTN","SCMCCON",60,0)
 .S SCX=$$DDNAME^SCMCTMM(SCFLD)_":"
"RTN","SCMCCON",61,0)
 .S:$G(SCLAB)=1 SCX=SCX_$E(SCSPACE,1,(23-$L(SCX)))
"RTN","SCMCCON",62,0)
 .S:$G(SCLAB)=2 SCX=SCX_$E(SCSPACE,1,(50-$L(SCX)))
"RTN","SCMCCON",63,0)
 S:SCINT]"" SCX=SCX_$$EXTERNAL^DILFD(SCFILE,SCFLD,"",SCINT)
"RTN","SCMCCON",64,0)
QTTXT Q SCX
"RTN","SCMCCV")
0^70^B79321918
"RTN","SCMCCV",1,0)
SCMCCV ;ALB/REW - PCMM Conversion of Patient File Fields ; 1 Feb 1996
"RTN","SCMCCV",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCCV",3,0)
EN ; 
"RTN","SCMCCV",4,0)
 ; Variables:
"RTN","SCMCCV",5,0)
 ;     SCASSIGN: 1=Make Patient Assignments if unambiguous (0=No,default)
"RTN","SCMCCV",6,0)
 ;     SCDT:     Date to make assignments (Default=DT)
"RTN","SCMCCV",7,0)
 ;     SCYESTM:  1=Make Pt Tm as well as Pt Posit Assmnts,default(0=No)
"RTN","SCMCCV",8,0)
 ;     SCNOPRPT  1=Don't print patient-detail lines
"RTN","SCMCCV",9,0)
 ;
"RTN","SCMCCV",10,0)
 N SCOK,DFN,SCPCNODE,SCLIST,SCTMPLST,SCHISTAR,SCASSIGN,SCYESTM,SCTM,Y,SCSTOP,SCPAGE,SCNOPRPT,SCTEAMAR,SCNOW,SCSUB
"RTN","SCMCCV",11,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCP,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCMCCV",12,0)
 IF '$$OKASK D MESS("Search aborted","!?5") G QTEN
"RTN","SCMCCV",13,0)
 IF '$D(IO("Q")) D
"RTN","SCMCCV",14,0)
 .U IO
"RTN","SCMCCV",15,0)
 .D REP
"RTN","SCMCCV",16,0)
 .D ^%ZISC
"RTN","SCMCCV",17,0)
 ELSE  D
"RTN","SCMCCV",18,0)
 .F X="SCASSIGN","SCYESTM","SCDT","SCNOPRPT" S ZTSAVE(X)=""
"RTN","SCMCCV",19,0)
 .S Y=$$QUE("SC Patient-Team/Practitioner"_$S('SCASSIGN:"Report Only",1:"Report and Assignment"),"REP^SCMCCV")
"RTN","SCMCCV",20,0)
QTEN Q
"RTN","SCMCCV",21,0)
 ;
"RTN","SCMCCV",22,0)
OKASK() ;
"RTN","SCMCCV",23,0)
 N SCOK,DIR
"RTN","SCMCCV",24,0)
 ;do you want to assign or just get a report?
"RTN","SCMCCV",25,0)
 S DIR(0)="Y"
"RTN","SCMCCV",26,0)
 S DIR("B")="NO"
"RTN","SCMCCV",27,0)
 S DIR("A")="Do you want to assign patients right now?"
"RTN","SCMCCV",28,0)
 S DIR("A",1)=""
"RTN","SCMCCV",29,0)
 S DIR("A",2)=""
"RTN","SCMCCV",30,0)
 S DIR("A",3)="  YES = Assign Patients to Teams and Team Positions"
"RTN","SCMCCV",31,0)
 S DIR("A",4)="  NO  = Just print report to see how things would be"
"RTN","SCMCCV",32,0)
 D ^DIR
"RTN","SCMCCV",33,0)
 IF $D(DTOUT)!$D(DUOUT)!$D(DIROUT) S SCOK=0 G QTASK
"RTN","SCMCCV",34,0)
 S SCASSIGN=Y
"RTN","SCMCCV",35,0)
 ;do you want to omit printing patients?
"RTN","SCMCCV",36,0)
 S DIR(0)="Y"
"RTN","SCMCCV",37,0)
 S DIR("B")="YES"
"RTN","SCMCCV",38,0)
 S DIR("A")="Do you want to omit printing patients?"
"RTN","SCMCCV",39,0)
 S DIR("A",1)=""
"RTN","SCMCCV",40,0)
 S DIR("A",2)=""
"RTN","SCMCCV",41,0)
 S DIR("A",3)="  NO  = Print detail line for each patient that is assignable"
"RTN","SCMCCV",42,0)
 S DIR("A",4)="  YES = Just print Team & Practitioner information"
"RTN","SCMCCV",43,0)
 D ^DIR
"RTN","SCMCCV",44,0)
 IF $D(DTOUT)!$D(DUOUT)!$D(DIROUT) S SCOK=0 G QTASK
"RTN","SCMCCV",45,0)
 S SCNOPRPT=Y
"RTN","SCMCCV",46,0)
 IF '$D(SCASSIGN) S SCASSIGN=0
"RTN","SCMCCV",47,0)
 IF '$D(SCDT) S SCDT=DT
"RTN","SCMCCV",48,0)
 IF '$D(SCYESTM) S SCYESTM=1
"RTN","SCMCCV",49,0)
 S SCOK=$$GETDEV
"RTN","SCMCCV",50,0)
QTASK Q SCOK
"RTN","SCMCCV",51,0)
 ;
"RTN","SCMCCV",52,0)
REP ;non-interactive portion
"RTN","SCMCCV",53,0)
 Q:$$FIRST^SCMCRU  ;check for task end
"RTN","SCMCCV",54,0)
 IF '$$OKINIT() G QTEN
"RTN","SCMCCV",55,0)
 D MESS("  ..Ok")
"RTN","SCMCCV",56,0)
 IF '$$OKBUILD G QRP
"RTN","SCMCCV",57,0)
 D MESS("  ..Ok")
"RTN","SCMCCV",58,0)
 IF '$$OKREPORT G QRP
"RTN","SCMCCV",59,0)
 D MESS("  ..Ok")
"RTN","SCMCCV",60,0)
 IF '$$OKCLEAN G QRP
"RTN","SCMCCV",61,0)
 D MESS("  ..Ok")
"RTN","SCMCCV",62,0)
QRP Q
"RTN","SCMCCV",63,0)
 ;
"RTN","SCMCCV",64,0)
OKINIT() ;
"RTN","SCMCCV",65,0)
 N SCOK
"RTN","SCMCCV",66,0)
 S SCOK=1
"RTN","SCMCCV",67,0)
 D MESS(">>> Checking Programmer Variables:","!,?5")
"RTN","SCMCCV",68,0)
 IF +$G(DUZ)'>0!($G(U)'="^")!('$D(DT)) D  Q 0
"RTN","SCMCCV",69,0)
 . S XPDABORT=1
"RTN","SCMCCV",70,0)
 . D MESS("You must first initialize Programmer Environment by running ^XUP")
"RTN","SCMCCV",71,0)
 . S SCOK=0
"RTN","SCMCCV",72,0)
 S SCLIST="SCTMPLST"
"RTN","SCMCCV",73,0)
 D INIT^SCAPMCU1(.SCOK)
"RTN","SCMCCV",74,0)
 D NOW^%DTC
"RTN","SCMCCV",75,0)
 S SCNOW=%
"RTN","SCMCCV",76,0)
 S SCHISTAR(.05)=1      ;pc practitioner
"RTN","SCMCCV",77,0)
 S SCHISTAR(.06)=DUZ    ;user entering
"RTN","SCMCCV",78,0)
 S SCHISTAR(.07)=SCNOW  ;date entered
"RTN","SCMCCV",79,0)
 S SCTEAMAR(.08)=1      ;pc team
"RTN","SCMCCV",80,0)
 S SCTEAMAR(.11)=DUZ    ;user
"RTN","SCMCCV",81,0)
 S SCTEAMAR(.12)=SCNOW  ;date enter=now
"RTN","SCMCCV",82,0)
 Q SCOK
"RTN","SCMCCV",83,0)
 ;
"RTN","SCMCCV",84,0)
OKBUILD() ;
"RTN","SCMCCV",85,0)
 N SCOK
"RTN","SCMCCV",86,0)
 S SCOK=1
"RTN","SCMCCV",87,0)
 D MESS(">>> Looping through PC Nodes of PATIENT File","!,?5")
"RTN","SCMCCV",88,0)
 S DFN=0
"RTN","SCMCCV",89,0)
 F  S DFN=$O(^DPT(DFN)) Q:'DFN  S SCPCNODE=$G(^DPT(DFN,"PC")) IF SCPCNODE]"" D  D:'(DFN#100) MESS(".")
"RTN","SCMCCV",90,0)
 .S ^TMP("SCMC",$J,"TMPRPT",+$P(SCPCNODE,U,2),+$P(SCPCNODE,U,1),DFN)=""
"RTN","SCMCCV",91,0)
 Q SCOK
"RTN","SCMCCV",92,0)
 ;
"RTN","SCMCCV",93,0)
OKREPORT() ;
"RTN","SCMCCV",94,0)
 N SCOK,SCTM,SCPR,SCTMNODE
"RTN","SCMCCV",95,0)
 S SCOK=1
"RTN","SCMCCV",96,0)
 D MESS(">>> Producing PATIENT File PC Report","!?5")
"RTN","SCMCCV",97,0)
 D MESS("    Checking Team/Practitioner Assignments:","!?10")
"RTN","SCMCCV",98,0)
 S SCTM=0
"RTN","SCMCCV",99,0)
 F  S SCTM=$O(^TMP("SCMC",$J,"TMPRPT",SCTM)) Q:'SCTM!$G(SCSTOP)  D
"RTN","SCMCCV",100,0)
 .S SCTMNODE=$G(^SCTM(404.51,SCTM,0))
"RTN","SCMCCV",101,0)
 .D MESS(">>>Team: "_$$DISPTM(SCTM),"!!?10")
"RTN","SCMCCV",102,0)
 .IF '$$OKTEAM(SCTM,SCDT) D
"RTN","SCMCCV",103,0)
 ..S SCOK=0
"RTN","SCMCCV",104,0)
 ..;D MESS("Problem(s) with Practitioner Assignments","!?15")
"RTN","SCMCCV",105,0)
 Q SCOK
"RTN","SCMCCV",106,0)
 ;
"RTN","SCMCCV",107,0)
OKTEAM(SCTM,SCDT) ;return 1 if exactly 1 posit for each team assignment
"RTN","SCMCCV",108,0)
 ;needs 'tmp('scmc',$j,'tmpr' array defined
"RTN","SCMCCV",109,0)
 ;return count of positions pract is assigned to to team
"RTN","SCMCCV",110,0)
 N SCOK,SC200,SCTMND,SCFLD,SCF
"RTN","SCMCCV",111,0)
 S SCOK=1
"RTN","SCMCCV",112,0)
 S SCTMND=$G(^SCTM(404.51,+$G(SCTM),0))
"RTN","SCMCCV",113,0)
 F SCFLD=3,6,7 IF '$P(SCTMND,U,SCFLD) D  ;check required fields
"RTN","SCMCCV",114,0)
 .S SCOK=0
"RTN","SCMCCV",115,0)
 .S SCF=$$DDNAME^SCMCRU(404.51,(SCFLD*.01))
"RTN","SCMCCV",116,0)
 .D MESS(SCF_" (#"_(SCFLD*.01)_") of Team required.  Enter via PCMM ","!?20")
"RTN","SCMCCV",117,0)
 G:'SCOK QTOKTM
"RTN","SCMCCV",118,0)
 S SCOK=$$ACTTM^SCMCTMU(SCTM,SCDT)
"RTN","SCMCCV",119,0)
 IF 'SCOK D  G QTOKTM
"RTN","SCMCCV",120,0)
 .N SCX
"RTN","SCMCCV",121,0)
 .S SCX=$D(^SCTM(404.58,SCTM,"AIDT",SCTM))
"RTN","SCMCCV",122,0)
 .D:'SCX MESS(" Never activated - Edit via PCMM")
"RTN","SCMCCV",123,0)
 .D:SCX MESS(" Not active on "_SCDT)
"RTN","SCMCCV",124,0)
 IF SCOK<0 D  G QTOKTM
"RTN","SCMCCV",125,0)
 .D MESS(" Error in setup")
"RTN","SCMCCV",126,0)
 IF $D(^TMP("SCMC",$J,"TMPRPT",SCTM,0)) D
"RTN","SCMCCV",127,0)
 .D MESS("Team Assignment Only","!?15")
"RTN","SCMCCV",128,0)
 .D:'SCNOPRPT MESS("Patients to be assigned to this team:","!?20")
"RTN","SCMCCV",129,0)
 .S DFN=0 F  S DFN=$O(^TMP("SCMC",$J,"TMPRPT",SCTM,0,DFN)) Q:'DFN  D
"RTN","SCMCCV",130,0)
 ..D MESS($$DISPPT(DFN),"!?25")
"RTN","SCMCCV",131,0)
 ..S SCX=$$NMPCTM^SCAPMCU2(DFN,SCDT,1)
"RTN","SCMCCV",132,0)
 ..D:SCX&(+SCX=SCTM)&('SCNOPRPT) MESS("Already assigned","!?27")
"RTN","SCMCCV",133,0)
 ..D:SCX&(+SCX'=SCTM)&('SCNOPRPT) MESS("Previously assigned to "_$P(SCX,U,2),"!?27")
"RTN","SCMCCV",134,0)
 ..Q:SCX
"RTN","SCMCCV",135,0)
 ..D:$G(SCASSIGN) PCUPDTM(DFN)
"RTN","SCMCCV",136,0)
 .D:$G(SCASSIGN) MAILLST^SCMCTMM(SCTM,"SCTEAMAR",SCDT,"^TMP(""SCMC"",$J,""NEWTM"",SCTM)")
"RTN","SCMCCV",137,0)
 .F SCSUB="NEWTM","BADTM" K ^TMP("SCMC",$J,SCSUB,SCTM)
"RTN","SCMCCV",138,0)
 S SC200=0
"RTN","SCMCCV",139,0)
 F  S SC200=$O(^TMP("SCMC",$J,"TMPRPT",SCTM,SC200)) Q:'SC200  D
"RTN","SCMCCV",140,0)
 .N SCTMPLST,SCCNT,SCTP,SCX,DFN
"RTN","SCMCCV",141,0)
 .D MESS("Practitioner: "_$$DISP200(SC200),"!?15")
"RTN","SCMCCV",142,0)
 .IF '$D(^VA(200,SC200,0)) D
"RTN","SCMCCV",143,0)
 ..S SCOK=0
"RTN","SCMCCV",144,0)
 ..D MESS("Bad Practitioner Assignment"_$S(SCNOPRPT:"",1:" for the following patient(s):"),"!?15")
"RTN","SCMCCV",145,0)
 ..S DFN=0 F  S DFN=$O(^TMP("SCMC",$J,"TMPRPT",SCTM,SC200,DFN)) Q:'DFN  D
"RTN","SCMCCV",146,0)
 ...D MESS($$DISPPT(DFN),"!?25")
"RTN","SCMCCV",147,0)
 .ELSE  D
"RTN","SCMCCV",148,0)
 .S:'$$TPPR^SCAPMC(SC200,"SCDTS",,,"SCTMPLST($J)",.SCERR) SCOK=0
"RTN","SCMCCV",149,0)
 .S SCXTP=0 F SCCNT=0:1 S SCXTP=$O(SCTMPLST($J,"SCTP",SCTM,SCXTP)) Q:'SCXTP  S SCTP=SCXTP D MESS("Position: "_$$DISPTP(SCTP),"!?17")
"RTN","SCMCCV",150,0)
 .;if no team-position assignments for pract
"RTN","SCMCCV",151,0)
 .IF 'SCCNT D
"RTN","SCMCCV",152,0)
 ..S SCOK=0
"RTN","SCMCCV",153,0)
 ..D MESS("is assigned to "_SCCNT_" positions on team","!?20")
"RTN","SCMCCV",154,0)
 ..D MESS("you need to assign him/her to a position on the team","!?20")
"RTN","SCMCCV",155,0)
 ..S ^TMP("SCMC",$J,"NO_TP",SCTM,SC200)=""
"RTN","SCMCCV",156,0)
 .;if exactly one practitioner assignment to team
"RTN","SCMCCV",157,0)
 .IF SCCNT=1 D
"RTN","SCMCCV",158,0)
 ..D:'SCNOPRPT MESS("Patients to be assigned to this position:","!?20")
"RTN","SCMCCV",159,0)
 ..S DFN=0 F  S DFN=$O(^TMP("SCMC",$J,"TMPRPT",SCTM,SC200,DFN)) Q:'DFN  D
"RTN","SCMCCV",160,0)
 ...D MESS($$DISPPT(DFN),"!?25")
"RTN","SCMCCV",161,0)
 ...S SCX=$$NMPCTP^SCAPMCU2(DFN,SCDT,1)
"RTN","SCMCCV",162,0)
 ...D:SCX&(+SCX=SCTP)&('SCNOPRPT) MESS("Already assigned","!?27")
"RTN","SCMCCV",163,0)
 ...D:SCX&(+SCX'=SCTP)&('SCNOPRPT) MESS("Previously assigned to "_$P(SCX,U,2),"!?27")
"RTN","SCMCCV",164,0)
 ...Q:SCX
"RTN","SCMCCV",165,0)
 ...D:$G(SCASSIGN) PCUPD(DFN)
"RTN","SCMCCV",166,0)
 ..D:$G(SCASSIGN) MAILLST^SCMCTPM(SCTP,"SCHISTAR",SCDT,"^TMP(""SCMC"",$J,""NEWTP"",SCTP)","^TMP(""SCMC"",$J,""OLDTP"",SCTP)","^TMP(""SCMC"",$J,""BADTP"",SCTP)")
"RTN","SCMCCV",167,0)
 ..D:$G(SCASSIGN) MAILLST^SCMCTMM(SCTM,"SCTEAMAR",SCDT,"^TMP(""SCMC"",$J,""NEWTM"",SCTM)")
"RTN","SCMCCV",168,0)
 ..F SCSUB="NEWTP","OLDTP","BADTP" K ^TMP("SCMC",$J,SCSUB,SCTP)
"RTN","SCMCCV",169,0)
 ..K ^TMP("SCMC",$J,"NEWTM",SCTM)
"RTN","SCMCCV",170,0)
 .;if multiple positin assignments for team for pract
"RTN","SCMCCV",171,0)
 .IF SCCNT>1 D
"RTN","SCMCCV",172,0)
 ..S SCOK=0
"RTN","SCMCCV",173,0)
 ..D MESS("Practitioner is assigned to "_SCCNT_" positions on team","!?20")
"RTN","SCMCCV",174,0)
 ..D MESS("because there is more than one position for this team","!?20")
"RTN","SCMCCV",175,0)
 ..D MESS("and practitioner, there will be no patient assignments","!?20")
"RTN","SCMCCV",176,0)
 ..S SCTP=0 F  S SCTP=$O(SCTMPLST($J,SCTM,SCTP)) Q:'SCTP  S ^TMP("SCMC",$J,"MULT_TP",SCTM,SC200,SCTP)=""
"RTN","SCMCCV",177,0)
 .IF SCCNT=1 S ^TMP("SCMC",$J,"ONE_TP",SCTM,SC200,SCTP)=""
"RTN","SCMCCV",178,0)
QTOKTM Q SCOK
"RTN","SCMCCV",179,0)
 ;
"RTN","SCMCCV",180,0)
PCUPD(DFN) ;
"RTN","SCMCCV",181,0)
 N SCX,SCNOMAIL
"RTN","SCMCCV",182,0)
 S SCNOMAIL=1
"RTN","SCMCCV",183,0)
 ;This is NOT a stand-alone procedure
"RTN","SCMCCV",184,0)
 S SCX=$$ACPTTP^SCAPMC(DFN,SCTP,"SCHISTAR",SCDT,.SCERR,SCYESTM)
"RTN","SCMCCV",185,0)
 IF SCX D
"RTN","SCMCCV",186,0)
 .D MESS("File #404.43 ien = "_+SCX,"!?30")
"RTN","SCMCCV",187,0)
 .IF $P(SCX,U,2) D
"RTN","SCMCCV",188,0)
 ..D MESS("  New Entry")
"RTN","SCMCCV",189,0)
 ..S ^TMP("SCMC",$J,"NEWTP",SCTP,DFN)=""
"RTN","SCMCCV",190,0)
 ..IF $P(SCX,U,4) D
"RTN","SCMCCV",191,0)
 ...D MESS(" Team Assignment Made.  IEN="_$P(SCX,U,3),"!?30")
"RTN","SCMCCV",192,0)
 ...S ^TMP("SCMC",$J,"NEWTM",SCTM,DFN)=""
"RTN","SCMCCV",193,0)
 .ELSE  D
"RTN","SCMCCV",194,0)
 ..D MESS("  Already Assigned")
"RTN","SCMCCV",195,0)
 ..S ^TMP("SCMC",$J,"OLDTP",SCTP,DFN)=""
"RTN","SCMCCV",196,0)
 ELSE  D
"RTN","SCMCCV",197,0)
 .D MESS(" - NOT saved")
"RTN","SCMCCV",198,0)
 .S ^TMP("SCMC",$J,"BADTP",+$G(SCTP),DFN)=""
"RTN","SCMCCV",199,0)
 .D:('$P(SCX,U,2))&('$P(SCX,U,4))&('$P(SCX,U,3)) MESS("No Patient Team Assignment","!?30")
"RTN","SCMCCV",200,0)
 Q
"RTN","SCMCCV",201,0)
 ;
"RTN","SCMCCV",202,0)
PCUPDTM(DFN) ;
"RTN","SCMCCV",203,0)
 N SCX,SCNOMAIL
"RTN","SCMCCV",204,0)
 S SCNOMAIL=1
"RTN","SCMCCV",205,0)
 ;This is NOT a stand-alone procedure
"RTN","SCMCCV",206,0)
 S SCX=$$ACPTTM^SCAPMC(DFN,SCTM,"SCTEAMAR",SCDT,.SCERR)
"RTN","SCMCCV",207,0)
 IF SCX D
"RTN","SCMCCV",208,0)
 .D MESS("File #404.42 ien = "_+SCX,"!?30")
"RTN","SCMCCV",209,0)
 .IF $P(SCX,U,2) D
"RTN","SCMCCV",210,0)
 ..D MESS("  New Entry")
"RTN","SCMCCV",211,0)
 ..S ^TMP("SCMC",$J,"NEWTM",SCTM,DFN)=""
"RTN","SCMCCV",212,0)
 ELSE  D
"RTN","SCMCCV",213,0)
 .D MESS(" - NOT saved")
"RTN","SCMCCV",214,0)
 .S ^TMP("SCMC",$J,"BADTM",+$G(SCTM),DFN)=""
"RTN","SCMCCV",215,0)
 Q
"RTN","SCMCCV",216,0)
 ;
"RTN","SCMCCV",217,0)
OKCLEAN() ;
"RTN","SCMCCV",218,0)
 D MESS(">>> Cleaning up ^TMP(""SCMC"" global","!?5")
"RTN","SCMCCV",219,0)
 N SCOK
"RTN","SCMCCV",220,0)
 S SCOK=1
"RTN","SCMCCV",221,0)
 ;K ^TMP("SCMC",$J)
"RTN","SCMCCV",222,0)
 Q SCOK
"RTN","SCMCCV",223,0)
 ;
"RTN","SCMCCV",224,0)
DISP200(SC200) ;
"RTN","SCMCCV",225,0)
 Q $P($G(^VA(200,SC200,0)),U,1)_" [#"_SC200_"]"
"RTN","SCMCCV",226,0)
 ;
"RTN","SCMCCV",227,0)
DISPTP(SCTP) ;
"RTN","SCMCCV",228,0)
 Q $P($G(^SCTM(404.57,SCTP,0)),U,1)_" [#"_SCTP_"]"
"RTN","SCMCCV",229,0)
 ;
"RTN","SCMCCV",230,0)
DISPTM(SCTM) ;
"RTN","SCMCCV",231,0)
 Q $P($G(^SCTM(404.51,SCTM,0)),U,1)_" [#"_SCTM_"]"
"RTN","SCMCCV",232,0)
 ;
"RTN","SCMCCV",233,0)
DISPPT(DFN) ;
"RTN","SCMCCV",234,0)
 Q $S(SCNOPRPT:"",1:$E($P($G(^DPT(DFN,0)),U,1),1,21)_" [SSN#:"_$P($G(^DPT(DFN,0)),U,9)_"]")
"RTN","SCMCCV",235,0)
 ;
"RTN","SCMCCV",236,0)
MESS(TEXT,FORMAT) ;
"RTN","SCMCCV",237,0)
 Q:$G(SCSTOP)!($G(TEXT)="")
"RTN","SCMCCV",238,0)
 S FORMAT=$G(FORMAT,"?5")
"RTN","SCMCCV",239,0)
 D OUT^SCMCRU(TEXT,FORMAT)
"RTN","SCMCCV",240,0)
 Q
"RTN","SCMCCV",241,0)
 ;
"RTN","SCMCCV",242,0)
GETDEV() ;
"RTN","SCMCCV",243,0)
 N SCOK
"RTN","SCMCCV",244,0)
 S SCOK=0
"RTN","SCMCCV",245,0)
 S %ZIS="PMQ" D ^%ZIS  G:POP QTGDV
"RTN","SCMCCV",246,0)
 S SCOK=1
"RTN","SCMCCV",247,0)
QTGDV Q (SCOK)
"RTN","SCMCCV",248,0)
 ;
"RTN","SCMCCV",249,0)
QUE(NAME,START) ;
"RTN","SCMCCV",250,0)
 ;  Needed: ZTSAVE array
"RTN","SCMCCV",251,0)
 ;  NAME   = description
"RTN","SCMCCV",252,0)
 ;  START  = starting point of routine
"RTN","SCMCCV",253,0)
 S ZTDESC=NAME,ZTRTN=START
"RTN","SCMCCV",254,0)
 D ^%ZTLOAD W:$D(ZTSK) !,"TASK #",ZTSK
"RTN","SCMCCV",255,0)
 D HOME^%ZIS K IO("Q")
"RTN","SCMCCV",256,0)
 Q ZTSK
"RTN","SCMCDD")
0^34^B41468865
"RTN","SCMCDD",1,0)
SCMCDD ;ALB/REW - DD Calls used by PCMM ; 6 November 1995
"RTN","SCMCDD",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCDD",3,0)
 ;1
"RTN","SCMCDD",4,0)
NEWHIST(FILE,IEN,DATE,SCERR,STATUS) ; PCMM history files - new record's dt & status
"RTN","SCMCDD",5,0)
 ; Complete
"RTN","SCMCDD",6,0)
 ; input:
"RTN","SCMCDD",7,0)
 ;   FILE   = 404.52,404.58, or 404.59
"RTN","SCMCDD",8,0)
 ;   IEN    = if file=404.58 - pointer to 404.51
"RTN","SCMCDD",9,0)
 ;            otherwise      - pointer to 404.57
"RTN","SCMCDD",10,0)
 ;   DATE   = effective date
"RTN","SCMCDD",11,0)
 ;   SCERR  = [default = "SCERR"]
"RTN","SCMCDD",12,0)
 ;   STATUS = [optional] 1=active/0=inactive - IF undefined don't check
"RTN","SCMCDD",13,0)
 ; output:
"RTN","SCMCDD",14,0)
 ;   Returned: 1 if ok to add, 0 if not^message^external
"RTN","SCMCDD",15,0)
 ;  Note: For 404.52: special case
"RTN","SCMCDD",16,0)
 ;   @scerr = error message array
"RTN","SCMCDD",17,0)
 N SCDATES,SCX,SCOK,DIERR,SCLASTDT,Y,X
"RTN","SCMCDD",18,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCP,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCMCDD",19,0)
 S SCOK=1
"RTN","SCMCDD",20,0)
 ;verify date is after last date
"RTN","SCMCDD",21,0)
 S SCLASTDT=$$LASTDATE^SCAPMCU1(FILE,IEN)
"RTN","SCMCDD",22,0)
 IF SCLASTDT&(SCLASTDT'<DATE) D  G QTNWHIST
"RTN","SCMCDD",23,0)
 .S Y=SCLASTDT D DD^%DT
"RTN","SCMCDD",24,0)
 .S SCOK="0^New Date is not after last historical date("_Y_")"_U_SCLASTDT
"RTN","SCMCDD",25,0)
 S SCX=$$DATES^SCAPMCU1(FILE,IEN,DATE)
"RTN","SCMCDD",26,0)
 IF SCX<0 D  G QTNWHIST
"RTN","SCMCDD",27,0)
 .S SCOK=0_U_"Error in ACTHIST call"
"RTN","SCMCDD",28,0)
 .S SCPARM("NEW ENTRY")="Error in ACTHIST call"
"RTN","SCMCDD",29,0)
 .D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCMCDD",30,0)
 IF DATE'>$P(SCX,U,2)!(DATE'>$P(SCX,U,3)) D  G QTNWHIST
"RTN","SCMCDD",31,0)
 .S SCOK=0_U_"Date On or Before Last Entry"
"RTN","SCMCDD",32,0)
 .S SCPARM("EFFECTIVE DATE")=DATE
"RTN","SCMCDD",33,0)
 .D ERR^SCAPMCU1(.SCESEQ,4045101,.SCPARM,"",.SCERR)
"RTN","SCMCDD",34,0)
 ;skip to end if status is not defined
"RTN","SCMCDD",35,0)
 IF '$D(STATUS)!($G(STATUS)="") G QTNWHIST
"RTN","SCMCDD",36,0)
 IF STATUS=+SCX D  G QTNWHIST
"RTN","SCMCDD",37,0)
 .S SCOK=0_U_"Status Must Change from Prior Entry -  Current Status is "_$S(STATUS:"Active",1:"Inactive")
"RTN","SCMCDD",38,0)
QTNWHIST Q SCOK
"RTN","SCMCDD",39,0)
 ;
"RTN","SCMCDD",40,0)
OKDEL(FILE,HISTIEN,SCERR) ;PCMM history files - delete record
"RTN","SCMCDD",41,0)
 ; input:
"RTN","SCMCDD",42,0)
 ; ** Not Tested - Still needs work on scerr
"RTN","SCMCDD",43,0)
 ; input:
"RTN","SCMCDD",44,0)
 ;   FILE   = History File: 404.52,404.58, or 404.59
"RTN","SCMCDD",45,0)
 ;   HISTIEN    = Entry in History File (404.52,404.58 or 404.59)
"RTN","SCMCDD",46,0)
 ;   SCERR  = [default = "SCERR"]
"RTN","SCMCDD",47,0)
 ; output:
"RTN","SCMCDD",48,0)
 ;   Returned: 1 if ok to delete, 0 if not^message
"RTN","SCMCDD",49,0)
 ;   @scerr = error message array
"RTN","SCMCDD",50,0)
 N SCLASTDT,SCX,ROOT,SCNODE,SCOK
"RTN","SCMCDD",51,0)
 S SCOK=1
"RTN","SCMCDD",52,0)
 S ROOT="^SCTM("_FILE_","_HISTIEN_",0)"
"RTN","SCMCDD",53,0)
 S SCNODE=$G(@ROOT)
"RTN","SCMCDD",54,0)
 S SCLASTDT=$$LASTDATE^SCAPMCU1(FILE,$P(SCNODE,U,1)) ;1st pc=tm or pos
"RTN","SCMCDD",55,0)
 IF SCLASTDT'=$P(SCNODE,U,2) D  G QTOKDEL
"RTN","SCMCDD",56,0)
 .S Y=SCLASTDT D DD^%DT
"RTN","SCMCDD",57,0)
 .S SCOK=0_U_"Date is not last historical date ("_Y_")"_U_SCLASTDT
"RTN","SCMCDD",58,0)
 S SCOK=$$OKINACT(FILE,$P(SCNODE,U,1),SCLASTDT,.SCERR)
"RTN","SCMCDD",59,0)
QTOKDEL Q SCOK
"RTN","SCMCDD",60,0)
 ;
"RTN","SCMCDD",61,0)
OKINACT(FILE,IEN,DATE,SCERR) ;PCMM history files - inactivate record?
"RTN","SCMCDD",62,0)
 ; input:
"RTN","SCMCDD",63,0)
 ; ** Complete **
"RTN","SCMCDD",64,0)
 ; input:
"RTN","SCMCDD",65,0)
 ;   FILE   = History File: 404.52,404.58, or 404.59
"RTN","SCMCDD",66,0)
 ;   IEN    = IEN of non-History File:
"RTN","SCMCDD",67,0)
 ;                Team Position (#404.57) for 404.52 & 404.59
"RTN","SCMCDD",68,0)
 ;                Team (#404.51) for 404.58
"RTN","SCMCDD",69,0)
 ;   DATE   = Date to inactivate
"RTN","SCMCDD",70,0)
 ;   SCERR  = [default = "SCERR"]
"RTN","SCMCDD",71,0)
 ; output:
"RTN","SCMCDD",72,0)
 ;   Returned: 1=ok on date/0 ow^1=ok in future/0 ow^message^techmessage
"RTN","SCMCDD",73,0)
 ;   @scerr = error message array
"RTN","SCMCDD",74,0)
 N SCLASTDT,SCX,ROOT,SCNODE,SCSTAT,SCOK,SCI,SCTP,SCOK,SCTPLST,SCPTLST,SCCLIN
"RTN","SCMCDD",75,0)
 S SCOK=1
"RTN","SCMCDD",76,0)
 S SCLASTDT=$$LASTDATE^SCAPMCU1(FILE,IEN)
"RTN","SCMCDD",77,0)
 IF DATE<SCLASTDT D  G QTOKIN
"RTN","SCMCDD",78,0)
 .S Y=SCLASTDT D DD^%DT
"RTN","SCMCDD",79,0)
 .S SCOK="0^^Date is before last historical date("_Y_")"_U_SCLASTDT
"RTN","SCMCDD",80,0)
 S SCDT("BEGIN")=DATE
"RTN","SCMCDD",81,0)
 S SCDT("END")=3990101 ;infinite future
"RTN","SCMCDD",82,0)
 S SCDT("INCL")=0 ;does not have to be continuous
"RTN","SCMCDD",83,0)
 S SCX=$$ACTHIST^SCAPMCU2(FILE,IEN,"SCDT",.SCERR)
"RTN","SCMCDD",84,0)
 IF SCX'>0 D  G QTOKIN
"RTN","SCMCDD",85,0)
 .S:SCX<0 SCOK="0^^Error in active history call"
"RTN","SCMCDD",86,0)
 .IF 'SCX D
"RTN","SCMCDD",87,0)
 ..S Y=DATE D DD^%DT
"RTN","SCMCDD",88,0)
 ..S SCOK="0^^Entry not active for date("_Y_")"_U_DATE
"RTN","SCMCDD",89,0)
TEAMHIS IF FILE=404.58 D
"RTN","SCMCDD",90,0)
 .; -- check positions for team
"RTN","SCMCDD",91,0)
 .IF '$$TPTM^SCAPMC(IEN,"SCDT",,,"SCTPLST",.SCERR) S SCOK=0_U_U_"Error in Position List Call" Q
"RTN","SCMCDD",92,0)
 .F SCI=1:1 S SCTP=$P($G(SCTPLST(SCI)),U,1) Q:'SCTP  D  Q:'SCOK
"RTN","SCMCDD",93,0)
 ..; -- check if position is active
"RTN","SCMCDD",94,0)
 ..IF '$P(SCTPLST(SCI),U,6)!($P(SCTPLST(SCI),U,6)>DATE) D  Q
"RTN","SCMCDD",95,0)
 ...S Y=$P(SCTPLST(SCI),U,2) D DD^%DT
"RTN","SCMCDD",96,0)
 ...S SCOK="0^^Active Team Position^"_$P($G(^SCTM(404.57,SCTP,0)),U,1)_" as of "_Y_U_SCTP_U_$P(SCTPLST(SCI),U,1)
"RTN","SCMCDD",97,0)
 ..S SCX=$$OKINACT(404.59,SCTP,DATE,.SCERR)
"RTN","SCMCDD",98,0)
 ..S:$P(SCX,U,1,2)["1" SCOK=SCX
"RTN","SCMCDD",99,0)
 .; -- check for patients assigned to team - 999 - maybe able to remove
"RTN","SCMCDD",100,0)
 .IF '$$PTTM^SCAPMC(IEN,"SCDT","^TMP($J,""SCPTLST"")",.SCERR) S SCOK=0_U_U_"Error in Patient List Call" Q
"RTN","SCMCDD",101,0)
 .F SCI=1:1 S SCPT=$P($G(^TMP($J,"SCPTLST",SCI)),U,1) Q:'SCPT  D  Q:'SCOK
"RTN","SCMCDD",102,0)
 ..IF $P(^TMP($J,"SCPTLST",SCI),U,4)>DATE S SCOK="1^0^Patient "_$P(^TMP($J,"SCPTLST",SCI),U,2)_" is active in the future" Q
"RTN","SCMCDD",103,0)
 ..IF $P(^TMP($J,"SCPTLST",SCI),U,5)<DATE S SCOK=0_U_U_"Patient ("_$P(^TMP($J,"SCPTLST",SCI),U,2)_") is active"_U_$P(^TMP($J,"SCPTLST",SCI),U,1)_U_$P(^TMP($J,"SCPTLST",SCI),U,2) Q
"RTN","SCMCDD",104,0)
POSHIS IF FILE=404.59 D
"RTN","SCMCDD",105,0)
 .; -- check for practitioners assigned to position
"RTN","SCMCDD",106,0)
 .IF '$$PRTP^SCAPMC(IEN,"SCDT","SCPRLST",.SCERR) S SCOK=0_U_U_"Error in Practitioner List Call" Q
"RTN","SCMCDD",107,0)
 .F SCI=1:1 S SCPR=$P($G(SCPRLST(SCI)),U,1) Q:'SCPR  D  Q:'SCOK
"RTN","SCMCDD",108,0)
 ..IF $P(SCPRLST(SCI),U,7)>DATE S SCOK="1^0^Team Member "_$P(SCPRLST(SCI),U,2)_" is active in the future in position "_U_$P(SCPRLST(SCI),U,1)_U_IEN Q
"RTN","SCMCDD",109,0)
 ..IF $P(SCPRLST(SCI),U,8)<DATE S SCOK="0^^Team Member "_$P(SCPRLST(SCI),U,2)_" is active in position "_U_$P(SCPRLST(SCI),U,1)_U_IEN Q
"RTN","SCMCDD",110,0)
 .;check if a clinic is assigned to position
"RTN","SCMCDD",111,0)
 .S SCCLIN=$P($G(^SCTM(404.57,IEN,0)),U,9) Q:'SCCLIN  D
"RTN","SCMCDD",112,0)
 ..S SCOK="0^^Clinic ("_$P($G(^SC(SCCLIN,0)),U,1)_") is associated with position"_U_SCCLIN
"RTN","SCMCDD",113,0)
 .;check for patients assigned to position
"RTN","SCMCDD",114,0)
 .IF '$$PTTP^SCAPMC(IEN,"SCDT","^TMP($J,""SCPTLST"")",.SCERR) S SCOK="0^^Error in patient list call" Q
"RTN","SCMCDD",115,0)
 .F SCI=1:1 S SCPT=$P($G(^TMP($J,"SCPTLST",SCI)),U,1) Q:'SCPT  D  Q:'SCOK
"RTN","SCMCDD",116,0)
 ..IF $P(SCPTLST(SCI),U,4)>DATE S SCOK="1^0^Patient "_$P(SCPTLST(SCI),U,1)_" is active in the future" Q
"RTN","SCMCDD",117,0)
 ..IF $P(^TMP($J,"SCPTLST",SCI),U,5)<DATE S SCOK=0_U_U_"Patient "_$P(^TMP($J,"SCPTLST",SCI),U,2)_" is active"_U_$P(^TMP($J,"SCPTLST",SCI),U,1) Q
"RTN","SCMCDD",118,0)
 ;IF FILE=404.52 - NO FURTHER CHECKS NEEDED
"RTN","SCMCDD",119,0)
QTOKIN Q SCOK
"RTN","SCMCDD",120,0)
 ;
"RTN","SCMCDD",121,0)
OKCHGDT(FILE,HISTIEN,DATE,SCERR) ;PCMM history files - ok to change date?
"RTN","SCMCDD",122,0)
 ; input:
"RTN","SCMCDD",123,0)
 ; ** Complete - Not Tested
"RTN","SCMCDD",124,0)
 ; input:
"RTN","SCMCDD",125,0)
 ;   FILE   = History File: 404.52,404.58, or 404.59
"RTN","SCMCDD",126,0)
 ;   HISTIEN - IEN of History File (404.52,404.58 or 404.59)
"RTN","SCMCDD",127,0)
 ;   SCERR  = [default = "SCERR"]
"RTN","SCMCDD",128,0)
 ; output:
"RTN","SCMCDD",129,0)
 ;   Returned: 1 if ok to change date, 0 if not^message
"RTN","SCMCDD",130,0)
 ;   @scerr = error message array
"RTN","SCMCDD",131,0)
 N SCX,ROOT,SCNODE,SCSTAT,SCOK
"RTN","SCMCDD",132,0)
 S SCOK=1
"RTN","SCMCDD",133,0)
 S ROOT="^SCTM("_FILE_","_HISTIEN_",0)"
"RTN","SCMCDD",134,0)
 S SCNODE=$G(@ROOT)
"RTN","SCMCDD",135,0)
 IF 'SCNODE S SCOK="0^Bad or Corrupt File Entry"_U_HISTIEN G QTOKCHK
"RTN","SCMCDD",136,0)
 S SCSTAT=$S(FILE=404.52:$P(SCNODE,U,4),1:$P(SCNODE,U,3))
"RTN","SCMCDD",137,0)
 ;check next & previous effective dates (must be of other status)
"RTN","SCMCDD",138,0)
 ; i.e. if active check next & previous for inactive
"RTN","SCMCDD",139,0)
 S SCX=$$DTAFTER^SCAPMCU2(FILE,$P(SCNODE,U,1),('SCSTAT),$P(SCNODE,U,2))
"RTN","SCMCDD",140,0)
 IF SCX&(DATE'<SCX) D  G QTOKCHK
"RTN","SCMCDD",141,0)
 .S Y=+SCX D DD^%DT
"RTN","SCMCDD",142,0)
 .S SCOK=0_U_"Date Must be before "_Y_U_SCX
"RTN","SCMCDD",143,0)
 S SCX=$$DTBEFORE^SCAPMCU2(FILE,$P(SCNODE,U,1),('SCSTAT),$P(SCNODE,U,2))
"RTN","SCMCDD",144,0)
 IF DATE'>SCX D  G QTOKCHK
"RTN","SCMCDD",145,0)
 .S Y=+SCX D DD^%DT
"RTN","SCMCDD",146,0)
 .S SCOK=0_U_"Date Must be after "_Y_U_SCX
"RTN","SCMCDD",147,0)
QTOKCHK Q SCOK
"RTN","SCMCDD1")
0^35^B22772685
"RTN","SCMCDD1",1,0)
SCMCDD1 ;ALB/REW - DD Calls used by PCMM ; 6 November 1995
"RTN","SCMCDD1",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCDD1",3,0)
 ;1
"RTN","SCMCDD1",4,0)
WRITETP(SCTP) ;used by write node of 404.57
"RTN","SCMCDD1",5,0)
 N SCCL
"RTN","SCMCDD1",6,0)
 S SCCL=$P($G(^SCTM(404.57,+$G(SCTP),0)),U,8)
"RTN","SCMCDD1",7,0)
 Q $P($$GETPRTP^SCAPMCU2(SCTP,DT),U,2)_"  "_$P($G(^SC(+$G(SCCL),0)),U,1)
"RTN","SCMCDD1",8,0)
 ;
"RTN","SCMCDD1",9,0)
SETPTTM(SCPTTMA) ;delete
"RTN","SCMCDD1",10,0)
 Q
"RTN","SCMCDD1",11,0)
 ;
"RTN","SCMCDD1",12,0)
KILLPTTM(SCPTTMA) ;delete
"RTN","SCMCDD1",13,0)
 Q
"RTN","SCMCDD1",14,0)
 ;
"RTN","SCMCDD1",15,0)
AFTERTM(SCPTTM) ;called after update of 404.42
"RTN","SCMCDD1",16,0)
 N SCPTTMB4,SCPCTMB4,SCTMB4,SCTMNDB4,SCPTTMAF,SCPCTMAF,SCTMAF,X,SCFLD,SCX,SCTMNDAF,SCTMNMB4,Y
"RTN","SCMCDD1",17,0)
 Q:'$G(SCPTTM)
"RTN","SCMCDD1",18,0)
 S SCPTTMAF=$G(^SCPT(404.42,SCPTTM,0))
"RTN","SCMCDD1",19,0)
 S SCPCTMAF=$S(($P(SCPTTMAF,U,8)=1):1,1:0)
"RTN","SCMCDD1",20,0)
 S SCTMAF=$P(SCPTTMAF,U,3)
"RTN","SCMCDD1",21,0)
 S:SCTMAF SCTMNDAF=$G(^SCTM(404.51,SCTMAF,0))
"RTN","SCMCDD1",22,0)
 F X="SCPTTMB4","SCPCTMB4","SCTMB4","SCTMNMB4" S @X=$G(^TMP($J,"SCTMCHG",SCPTTM,X))
"RTN","SCMCDD1",23,0)
 F SCFLD=1:1:14 S SCX=$P(SCPTTMAF,U,SCFLD) S:SCX'="" ^TMP($J,"SCTMCHG",SCPTTM,"AF",(SCFLD*.01))=SCX
"RTN","SCMCDD1",24,0)
 S X=+$O(^ORD(101,"B","SCMC PATIENT TEAM CHANGES",0))_";ORD(101,"
"RTN","SCMCDD1",25,0)
 D:SCPTTMAF'=SCPTTMB4 EN^XQOR
"RTN","SCMCDD1",26,0)
 K ^TMP($J,"SCTMCHG",SCPTTM)
"RTN","SCMCDD1",27,0)
 Q
"RTN","SCMCDD1",28,0)
 ;
"RTN","SCMCDD1",29,0)
BEFORETM(SCPTTM) ;called before update of 404.42
"RTN","SCMCDD1",30,0)
 N SCPTTMB4,SCPCTMB4,SCTMB4,SCTMNDB4,X,SCFLD,SCX,SCY,DR,DIC,DA,DIQ
"RTN","SCMCDD1",31,0)
 Q:'$G(SCPTTM)
"RTN","SCMCDD1",32,0)
 S SCPTTMB4=$G(^SCPT(404.42,SCPTTM,0))
"RTN","SCMCDD1",33,0)
 S SCPCTMB4=$S(($P(SCPTTMB4,U,8)=1):1,1:0)
"RTN","SCMCDD1",34,0)
 S SCTMB4=$P(SCPTTMB4,U,3)
"RTN","SCMCDD1",35,0)
 S:SCTMB4 SCTMNDB4=$G(^SCTM(404.51,SCTMB4,0))
"RTN","SCMCDD1",36,0)
 F X="SCPTTMB4","SCPCTMB4","SCTMB4","SCTMNDB4" S ^TMP($J,"SCTMCHG",SCPTTM,X)=$G(@X)
"RTN","SCMCDD1",37,0)
 F SCY=1:1:14 S SCX=$P(SCPTTMB4,U,SCY) IF SCX'="" D
"RTN","SCMCDD1",38,0)
 .S SCFLD=SCY*.01
"RTN","SCMCDD1",39,0)
 .S ^TMP($J,"SCTMCHG",SCPTTM,"B4",SCFLD)=SCX
"RTN","SCMCDD1",40,0)
 Q
"RTN","SCMCDD1",41,0)
 ;
"RTN","SCMCDD1",42,0)
SETPC(SC1,SC2,SC3,SC4,DA)  ;APCPOS xref for 404.43
"RTN","SCMCDD1",43,0)
 ;DFN = Pointer to Patient File
"RTN","SCMCDD1",44,0)
 ;SC1 = pointer to 404.42
"RTN","SCMCDD1",45,0)
 ;SC2 = ROLE (1=pc practitioner,2=pc attending)
"RTN","SCMCDD1",46,0)
 ;SC3 = Activation Date
"RTN","SCMCDD1",47,0)
 ;SC4 = Team Position
"RTN","SCMCDD1",48,0)
 N DFN
"RTN","SCMCDD1",49,0)
 S DFN=$P($G(^SCPT(404.42,SC1,0)),U,1)
"RTN","SCMCDD1",50,0)
 S:DFN&SC1&SC2&SC3&SC4&DA ^SCPT(404.43,"APCPOS",DFN,SC2,SC3,SC4,DA)=""
"RTN","SCMCDD1",51,0)
 Q
"RTN","SCMCDD1",52,0)
KILLPC(SC1,SC2,SC3,SC4,DA) ;APCPOS xref for 404.43
"RTN","SCMCDD1",53,0)
 ;DFN = Pointer to Patient File
"RTN","SCMCDD1",54,0)
 ;SC1 = pointer to 404.42
"RTN","SCMCDD1",55,0)
 ;SC2 = ROLE (1=pc practitioner,2=pc attending)
"RTN","SCMCDD1",56,0)
 ;SC3 = Activation Date
"RTN","SCMCDD1",57,0)
 ;SC4 = Team Position
"RTN","SCMCDD1",58,0)
 N DFN
"RTN","SCMCDD1",59,0)
 S DFN=$P($G(^SCPT(404.42,SC1,0)),U,1)
"RTN","SCMCDD1",60,0)
 S RWDFN=DFN
"RTN","SCMCDD1",61,0)
 K:DFN&SC1&SC2&SC3&SC4&DA ^SCPT(404.43,"APCPOS",DFN,SC2,SC3,SC4,DA)
"RTN","SCMCDD1",62,0)
 Q
"RTN","SCMCDD1",63,0)
 ;
"RTN","SCMCDD1",64,0)
MAKEMANY(DFNA,SCOLDASS,SCBADASS,SCNEWASS) ;Not supported for use by PCMM Only - sets PC field to YES
"RTN","SCMCDD1",65,0)
 ;   DFNA    - DFN ARRAY
"RTN","SCMCDD1",66,0)
 ;   SCOLDASS - Subset of DFNA that were previously assigned
"RTN","SCMCDD1",67,0)
 ;   SCBADASS - Subset of DFNA that could not be assigned
"RTN","SCMCDD1",68,0)
 ;   SCNEWASS - Subset of DFNA that were newly assigned
"RTN","SCMCDD1",69,0)
 ;   Returned: total^new^old^bad
"RTN","SCMCDD1",70,0)
 ; Note: No input error checking!!
"RTN","SCMCDD1",71,0)
 N DFN,SCX,SCOUTFLD,SCBADOUT,SCOLDCNT,SCBADCNT,SCNEWCNT
"RTN","SCMCDD1",72,0)
 S (SCBADCNT,SCOLDCNT,SCNEWCNT)=0
"RTN","SCMCDD1",73,0)
 S DFN=0
"RTN","SCMCDD1",74,0)
 F  S DFN=$O(@DFNA@(DFN)) Q:'DFN  D
"RTN","SCMCDD1",75,0)
 .S SCOUTFLD(.04)=1
"RTN","SCMCDD1",76,0)
 .S SCX=$$ACOUTPT^SCAPMC20(DFN,"SCOUTFLD","SCBADOUT")
"RTN","SCMCDD1",77,0)
 .;SCX=OK?^p404.41^new?
"RTN","SCMCDD1",78,0)
 .IF 'SCX D
"RTN","SCMCDD1",79,0)
 ..S SCBADCNT=SCBADCNT+1
"RTN","SCMCDD1",80,0)
 ..S @SCBADASS@(DFN)=""
"RTN","SCMCDD1",81,0)
 .ELSE  D
"RTN","SCMCDD1",82,0)
 ..IF $P(SCX,U,3) D
"RTN","SCMCDD1",83,0)
 ...S SCNEWCNT=SCNEWCNT+1
"RTN","SCMCDD1",84,0)
 ...S @SCNEWASS@(DFN)=""
"RTN","SCMCDD1",85,0)
 ..ELSE  D
"RTN","SCMCDD1",86,0)
 ...S SCOLDCNT=SCOLDCNT+1
"RTN","SCMCDD1",87,0)
 ...S @SCOLDASS@(DFN)=""
"RTN","SCMCDD1",88,0)
 Q (SCOLDCNT+SCNEWCNT)_U_SCNEWCNT_U_SCOLDCNT_U_SCBADCNT
"RTN","SCMCDD1",89,0)
 ;
"RTN","SCMCDD1",90,0)
MAKEOUT(DA) ;used by 404.42 to create an outpatient profile entry (if there wasn't one) and set the PRIMARY CARE?(.04) field to YES
"RTN","SCMCDD1",91,0)
 ;  Returned (for de-bugging): ok?^ien of404.41^new?
"RTN","SCMCDD1",92,0)
 N SCNODE,SCX,DFN,SCOUTFLD
"RTN","SCMCDD1",93,0)
 S SCNODE=$G(^SCPT(404.42,+$G(DA),0))
"RTN","SCMCDD1",94,0)
 S DFN=$P(SCNODE,U,1)
"RTN","SCMCDD1",95,0)
 IF $P(SCNODE,U,8)=1 D  ;if assignment was to primary care
"RTN","SCMCDD1",96,0)
 .S SCOUTFLD(.04)=1
"RTN","SCMCDD1",97,0)
 .S SCX=$$ACOUTPT^SCAPMC20(DFN,"SCOUTFLD","SCBADOUT")
"RTN","SCMCDD1",98,0)
 Q $G(SCX)
"RTN","SCMCDD1",99,0)
 ;
"RTN","SCMCDD1",100,0)
AFTERTP(SCPTTP) ;called after update of 404.43
"RTN","SCMCDD1",101,0)
 N SCPTTPB4,SCPCTPB4,SCTPB4,SCTPNDB4,SCPTTPAF,SCPCTPAF,SCTPAF,X,SCFLD,SCX,SCTMB4,SCTMNDB4,SCTMNDAF,SCTMAF,SCPTNM,SCTPNDAF,SCTPNMB4,Y
"RTN","SCMCDD1",102,0)
 Q:'$G(SCPTTP)
"RTN","SCMCDD1",103,0)
 S SCPTTPAF=$G(^SCPT(404.43,SCPTTP,0))
"RTN","SCMCDD1",104,0)
 S SCPCTPAF=+$P(SCPTTPAF,U,5)
"RTN","SCMCDD1",105,0)
 S SCTPAF=$P(SCPTTPAF,U,2)
"RTN","SCMCDD1",106,0)
 S:SCTPAF SCTPNDAF=$G(^SCTM(404.57,SCTPAF,0))
"RTN","SCMCDD1",107,0)
 S:SCTPAF SCTMAF=$P(SCTPNDAF,U,2)
"RTN","SCMCDD1",108,0)
 S:SCTMAF SCTMNDAF=$G(^SCTM(404.51,SCTMAF,0))
"RTN","SCMCDD1",109,0)
 F X="SCPTTPB4","SCPCTPB4","SCTPB4","SCTPNMB4","SCTMB4","SCTMNDB4" S @X=$G(^TMP($J,"SCTPCHG",SCPTTP,X))
"RTN","SCMCDD1",110,0)
 F SCFLD=1:1:9 S SCX=$P(SCPTTPAF,U,SCFLD) S:SCX'="" ^TMP($J,"SCTPCHG",SCPTTP,"AF",(SCFLD*.01))=SCX
"RTN","SCMCDD1",111,0)
 S X=+$O(^ORD(101,"B","SCMC PATIENT TEAM POSITION CHANGES",0))_";ORD(101,"
"RTN","SCMCDD1",112,0)
 D:SCPTTPAF'=SCPTTPB4 EN^XQOR
"RTN","SCMCDD1",113,0)
 K ^TMP($J,"SCTPCHG",SCPTTP)
"RTN","SCMCDD1",114,0)
 Q
"RTN","SCMCDD1",115,0)
 ;
"RTN","SCMCDD1",116,0)
BEFORETP(SCPTTP) ;called before update of 404.43
"RTN","SCMCDD1",117,0)
 N SCPTTPB4,SCPCTPB4,SCTPB4,SCTPNDB4,X,SCFLD,SCX,SCY,DR,DIC,DA,DIQ,SCTMB4,SCTMNDAF,SCTMNDB4,SCTMNMB4
"RTN","SCMCDD1",118,0)
 Q:'$G(SCPTTP)
"RTN","SCMCDD1",119,0)
 S SCPTTPB4=$G(^SCPT(404.43,SCPTTP,0))
"RTN","SCMCDD1",120,0)
 S SCPCTPB4=+$P(SCPTTPB4,U,5)
"RTN","SCMCDD1",121,0)
 S SCTPB4=$P(SCPTTPB4,U,2)
"RTN","SCMCDD1",122,0)
 S:SCTPB4 SCTPNDB4=$G(^SCTM(404.57,SCTPB4,0))
"RTN","SCMCDD1",123,0)
 S:SCTPB4 SCTMB4=$P(SCTPNDB4,U,2)
"RTN","SCMCDD1",124,0)
 S:SCTMB4 SCTMNDB4=$G(^SCTM(404.51,SCTMB4,0))
"RTN","SCMCDD1",125,0)
 F X="SCPTTPB4","SCPCTPB4","SCTPB4","SCTPNDB4","SCTMNDB4","SCTMB4" S ^TMP($J,"SCTPCHG",SCPTTP,X)=$G(@X)
"RTN","SCMCDD1",126,0)
 F SCY=1:1:9 S SCX=$P(SCPTTPB4,U,SCY) IF SCX'="" D
"RTN","SCMCDD1",127,0)
 .S SCFLD=SCY*.01
"RTN","SCMCDD1",128,0)
 .S ^TMP($J,"SCTPCHG",SCPTTP,"B4",SCFLD)=SCX
"RTN","SCMCDD1",129,0)
 Q
"RTN","SCMCDD2")
0^125^B3632182
"RTN","SCMCDD2",1,0)
SCMCDD2 ;ALB/REW - DD Calls used by PCMM ; 27 March 1996
"RTN","SCMCDD2",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCDD2",3,0)
 ;1
"RTN","SCMCDD2",4,0)
USEPCDEF(SCCL) ;how should pc practitioner be used for clinic
"RTN","SCMCDD2",5,0)
 ; return 2=always default 1=default if no provider listed 0 -never
"RTN","SCMCDD2",6,0)
 Q 2
"RTN","SCMCDD2",7,0)
SETSCTM(SCTP,SCCL,SCTMNM) ;create 'TEAM' x-ref for Hospital Location File (#44)
"RTN","SCMCDD2",8,0)
 ; x=sccl, da=sctp sctmnm=name of team
"RTN","SCMCDD2",9,0)
 Q:'$G(SCTP)!('$G(SCCL))
"RTN","SCMCDD2",10,0)
 S SCTMNM=$G(SCTMNM,$P(^SCTM(404.51,+$P(^SCTM(404.57,SCTP,0),U,2),0),U))
"RTN","SCMCDD2",11,0)
 S:$L(SCTMNM) ^SC("TEAM",SCTMNM,+SCCL)=""
"RTN","SCMCDD2",12,0)
 Q
"RTN","SCMCDD2",13,0)
 ;
"RTN","SCMCDD2",14,0)
KILLSCTM(SCTP,SCCL,SCTMNM) ;kill 'TEAM' x-ref for File #44 (if no other positions from team have this as associated clinic)
"RTN","SCMCDD2",15,0)
 ; x=sccl, da=sctp sctmnm=name of team
"RTN","SCMCDD2",16,0)
 N SCTM
"RTN","SCMCDD2",17,0)
 Q:'$G(SCTP)!('$G(SCCL))
"RTN","SCMCDD2",18,0)
 S SCTM=+$P(^SCTM(404.57,SCTP,0),U,2)
"RTN","SCMCDD2",19,0)
 S SCTMNM=$G(SCTMNM,$P(^SCTM(404.51,+SCTM,0),U))
"RTN","SCMCDD2",20,0)
 K:$L(SCTMNM)&('$$OKTMCL(SCTM,SCTP,SCCL)) ^SC("TEAM",SCTMNM,+SCCL)
"RTN","SCMCDD2",21,0)
 Q
"RTN","SCMCDD2",22,0)
OKTMCL(SCTM,SCTP,SCCL) ;does team have another position with this clinic as an assoicated clinic?
"RTN","SCMCDD2",23,0)
 N SCXTP,SCOK
"RTN","SCMCDD2",24,0)
 S SCOK=0
"RTN","SCMCDD2",25,0)
 S SCXTP=0
"RTN","SCMCDD2",26,0)
 F  S SCXTP=$O(^SCTM(404.57,"D",SCCL,SCXTP)) Q:('SCXTP)!(SCXTP=SCTP)  D
"RTN","SCMCDD2",27,0)
 .S SCOK=1
"RTN","SCMCDD2",28,0)
 Q SCOK
"RTN","SCMCDD2",29,0)
STSCTMNM(SCTM,SCTMNM) ;if team name changes - set for 'TEAM' xrefs for file#44
"RTN","SCMCDD2",30,0)
 ; sctm=da sctmnm=x
"RTN","SCMCDD2",31,0)
 Q:('$G(SCTM))
"RTN","SCMCDD2",32,0)
 N SCTPNM,SCCL
"RTN","SCMCDD2",33,0)
 S SCTPNM=""
"RTN","SCMCDD2",34,0)
 F  S SCTPNM=$O(^SCTM(404.57,"ATMPOS",SCTM,SCTPNM)) Q:SCTPNM=""  D
"RTN","SCMCDD2",35,0)
 .S SCTP=$O(^SCTM(404.57,"ATMPOS",SCTM,SCTPNM,0)) ;note: name is unique
"RTN","SCMCDD2",36,0)
 .S SCCL=$P($G(^SCTM(404.57,+SCTP,0)),U,9)
"RTN","SCMCDD2",37,0)
 .D:SCCL SETSCTM(SCTP,SCCL,SCTMNM)
"RTN","SCMCDD2",38,0)
 Q
"RTN","SCMCDD2",39,0)
KLSCTMNM(SCTM,SCTMNM) ;if team name changes - kill 'TEAM' xrefs for file #44
"RTN","SCMCDD2",40,0)
 ; sctm=da sctmnm=x
"RTN","SCMCDD2",41,0)
 Q:'SCTM
"RTN","SCMCDD2",42,0)
 N SCTPNM,SCCL
"RTN","SCMCDD2",43,0)
 S SCTPNM=""
"RTN","SCMCDD2",44,0)
 F  S SCTPNM=$O(^SCTM(404.57,"ATMPOS",SCTM,SCTPNM)) Q:SCTPNM=""  D
"RTN","SCMCDD2",45,0)
 .S SCTP=$O(^SCTM(404.57,"ATMPOS",SCTM,SCTPNM,0)) ;note: name is unique
"RTN","SCMCDD2",46,0)
 .S SCCL=$P($G(^SCTM(404.57,+SCTP,0)),U,9)
"RTN","SCMCDD2",47,0)
 .K:SCCL ^SC("TEAM",+$G(SCTMNM))
"RTN","SCMCDD2",48,0)
 Q
"RTN","SCMCENV")
0^36^B10621043
"RTN","SCMCENV",1,0)
SCMCENV ;ALB/REW - PCMM Environment Checker ; 3 Feb 1996
"RTN","SCMCENV",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCENV",3,0)
EN ;entry point
"RTN","SCMCENV",4,0)
 W !,"PCMM Installation Requirements:",!
"RTN","SCMCENV",5,0)
 IF $D(XPDABORT)#2 W !!?4,"*** Warning: Because variable XPDABORT exists, PCMM will not install."
"RTN","SCMCENV",6,0)
 N SCX,SCPATCH,SCROUT,SCCOMM,SC2LINE,SC2DATA,SCGLOB,SC2CHECK,SCARR,SCSUB
"RTN","SCMCENV",7,0)
 W !,">>> Checking Programmer Variables:"
"RTN","SCMCENV",8,0)
 IF +$G(DUZ)'>0!($G(DUZ(0))'="@")!($G(U)'="^")!('$D(DT)) D  Q
"RTN","SCMCENV",9,0)
 . S XPDABORT=2
"RTN","SCMCENV",10,0)
 . W !,"You must first initialize Programmer Environment by running ^XUP",!
"RTN","SCMCENV",11,0)
 ELSE  D
"RTN","SCMCENV",12,0)
 . W " ...Ok"
"RTN","SCMCENV",13,0)
BLDCHK ;check build file entries
"RTN","SCMCENV",14,0)
 W !,">>> Checking BUILD File Entries:"
"RTN","SCMCENV",15,0)
 F SCX=1:1 S SCPATCH=$P($P($T(BUILD+SCX),";;",2),U,1) Q:'$L(SCPATCH)  D
"RTN","SCMCENV",16,0)
 .W !,?5,SCPATCH
"RTN","SCMCENV",17,0)
 .IF '$D(^XPD(9.6,"B",SCPATCH)) D
"RTN","SCMCENV",18,0)
 ..N SCPKG,SCVER
"RTN","SCMCENV",19,0)
 ..S SCPKG=$P($P($T(BUILD+SCX),";;",2),U,2)
"RTN","SCMCENV",20,0)
 ..S SCVER=$P($P($T(BUILD+SCX),";;",2),U,3)
"RTN","SCMCENV",21,0)
 ..IF $$VERSION^XPDUTL(SCPKG)'=SCVER D
"RTN","SCMCENV",22,0)
 ...S XPDABORT=2
"RTN","SCMCENV",23,0)
 ...W !,"Missing Required Package File Entry (Package/Patch): ",SCPATCH
"RTN","SCMCENV",24,0)
 ..ELSE  D
"RTN","SCMCENV",25,0)
 ...W " ...Ok - in Package File"
"RTN","SCMCENV",26,0)
 .ELSE  D
"RTN","SCMCENV",27,0)
 ..W " ...Ok"
"RTN","SCMCENV",28,0)
PKGCHK ;check package file entries
"RTN","SCMCENV",29,0)
 W !,">>> Checking PACKAGE File Entries:"
"RTN","SCMCENV",30,0)
 F SCX=1:1 S SCPATCH=$P($T(PACKAGE+SCX),";;",2) Q:'$L(SCPATCH)  D
"RTN","SCMCENV",31,0)
 .N SCPKG,SCVER,SCPTC,SCPKGI,SCVERI
"RTN","SCMCENV",32,0)
 .W !,?5,SCPATCH
"RTN","SCMCENV",33,0)
 .IF '$$PATCH^XPDUTL(SCPATCH) D
"RTN","SCMCENV",34,0)
 ..S XPDABORT=2
"RTN","SCMCENV",35,0)
 ..W:$G(XPDABORT) !,"Missing Required (Package/Patch) Entry: ",SCPATCH
"RTN","SCMCENV",36,0)
 .ELSE  D
"RTN","SCMCENV",37,0)
 ..W " Ok"
"RTN","SCMCENV",38,0)
 ;check patched routines
"RTN","SCMCENV",39,0)
 ;check patched routines
"RTN","SCMCENV",40,0)
RTCHK W !,">>> Checking Routines: "
"RTN","SCMCENV",41,0)
 ;needs to be improved if 1 digit patches are checked
"RTN","SCMCENV",42,0)
 F SCX=1:1 S SCRT=$P($T(ROUTINE+SCX),";;",2) Q:'$L(SCRT)  D
"RTN","SCMCENV",43,0)
 .S SCROUT=$P(SCRT,U,1)
"RTN","SCMCENV",44,0)
 .W !,?5,$P(SCRT,U,3)," v",$P(SCRT,U,2),?30,"Patch#: ",$P(SCRT,U,4),?43,"Routine: ^",SCROUT," ..."
"RTN","SCMCENV",45,0)
 .S SCCOMM="S SC2LINE=$P($T(+2"_U_SCROUT_"),"";;"",2)"
"RTN","SCMCENV",46,0)
 .X SCCOMM
"RTN","SCMCENV",47,0)
 .S SC2CHECK=$P(SCRT,U,2,99)
"RTN","SCMCENV",48,0)
 .IF '$L(SC2LINE) D  Q
"RTN","SCMCENV",49,0)
 ..W "Missing (Required Routine)"
"RTN","SCMCENV",50,0)
 ..S XPDABORT=2
"RTN","SCMCENV",51,0)
 .ELSE  D
"RTN","SCMCENV",52,0)
 ..IF $P(SC2LINE,";",1)>$P(SC2CHECK,U,1) D  Q
"RTN","SCMCENV",53,0)
 ...W !?10,"Version of ",$P(SC2LINE,";",2)," is greater than standard - No patch checks done"
"RTN","SCMCENV",54,0)
 ..IF $P(SC2LINE,";",1)<$P(SC2CHECK,U,1) D  Q
"RTN","SCMCENV",55,0)
 ...W !?10,"Version of ",$P(SC2LINE,";",2)," is less than required"
"RTN","SCMCENV",56,0)
 ...S XPDABORT=2
"RTN","SCMCENV",57,0)
 ..IF $P(SC2LINE,";",3)'[$P(SC2CHECK,U,3) D  Q
"RTN","SCMCENV",58,0)
 ...W !?10,"Missing Patch # ",$P(SC2CHECK,U,3)
"RTN","SCMCENV",59,0)
 ...S XPDABORT=2
"RTN","SCMCENV",60,0)
 ..W "Ok"
"RTN","SCMCENV",61,0)
GLOBCHK W !,">>> Checking Globals:"
"RTN","SCMCENV",62,0)
 F SCX=1:1 S SCGLOB=$P($T(GLOB+SCX),";;",2) Q:'$L(SCGLOB)  D
"RTN","SCMCENV",63,0)
 .W !,?5,SCGLOB
"RTN","SCMCENV",64,0)
 .IF $$GET1^DID(.84,"","","NAME")'="DIALOG" D
"RTN","SCMCENV",65,0)
 ..W " ...Missing"
"RTN","SCMCENV",66,0)
 ..S XPDABORT=2
"RTN","SCMCENV",67,0)
 .ELSE  D
"RTN","SCMCENV",68,0)
 ..W " ...Ok"
"RTN","SCMCENV",69,0)
 W:$D(XPDABORT) !,">>> PCMM Aborted in Environment Checker"
"RTN","SCMCENV",70,0)
 W:'$D(XPDABORT) !!,">>> Environment is Ok"
"RTN","SCMCENV",71,0)
 Q
"RTN","SCMCENV",72,0)
 ;
"RTN","SCMCENV",73,0)
PACKAGE ;
"RTN","SCMCENV",74,0)
 ;;XU*8.0*2
"RTN","SCMCENV",75,0)
 ;;XU*8.0*15
"RTN","SCMCENV",76,0)
 ;;XU*8.0*16
"RTN","SCMCENV",77,0)
 ;;XU*8.0*28
"RTN","SCMCENV",78,0)
BUILD ;
"RTN","SCMCENV",79,0)
 ;;RPC BROKER 1.0^XWB^1.0
"RTN","SCMCENV",80,0)
ROUTINE ;
"RTN","SCMCENV",81,0)
 ;;DICA^21.0^VA FileMan^17^Dec 28, 1994
"RTN","SCMCENV",82,0)
 ;;SDUTL3^5.3^Scheduling^30^AUG 13, 1993
"RTN","SCMCENV",83,0)
 ;
"RTN","SCMCENV",84,0)
GLOB ;
"RTN","SCMCENV",85,0)
 ;;^DI(.84
"RTN","SCMCENV",86,0)
 ;
"RTN","SCMCEV1")
0^88^B11858888
"RTN","SCMCEV1",1,0)
SCMCEV1 ;ALB/CMM - TEAM EVENT DRIVER UTILITIES ; 03/20/96
"RTN","SCMCEV1",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCEV1",3,0)
 ;
"RTN","SCMCEV1",4,0)
ENROLL(DFN,TIEN,ENDATE,DISDATE,CNAME) ;
"RTN","SCMCEV1",5,0)
 ;enroll DFN patient in team TIEN
"RTN","SCMCEV1",6,0)
 ;DFN - patient ien
"RTN","SCMCEV1",7,0)
 ;TIEN - team ien
"RTN","SCMCEV1",8,0)
 ;ENDATE - clinic enrollment date
"RTN","SCMCEV1",9,0)
 ;DISDATE - clinic discharge date
"RTN","SCMCEV1",10,0)
 ;CNAME - clinic name
"RTN","SCMCEV1",11,0)
 ;
"RTN","SCMCEV1",12,0)
 N OKAY,ERR,PUR,SC,SCERR,TNAME,TEXT
"RTN","SCMCEV1",13,0)
 S TNAME=$P($G(^SCTM(404.51,TIEN,0)),"^") ;team name
"RTN","SCMCEV1",14,0)
 S OKAY=$$ACPTTM^SCAPMC6(DFN,TIEN,,ENDATE,"ERR")
"RTN","SCMCEV1",15,0)
 I OKAY=0 Q
"RTN","SCMCEV1",16,0)
 ;okay = ien of 404.42
"RTN","SCMCEV1",17,0)
 S PUR(1,0)="Automatic Team Enrollment/Update via Clinic: "_CNAME
"RTN","SCMCEV1",18,0)
 I '$D(SCERR) D
"RTN","SCMCEV1",19,0)
 .D WP^DIE(404.42,+OKAY_",","1","A","PUR","SCERR")
"RTN","SCMCEV1",20,0)
 .S TEXT="Enrolled in Team: "_TNAME
"RTN","SCMCEV1",21,0)
 .D EN^DDIOL(TEXT,"","!,?10")
"RTN","SCMCEV1",22,0)
 K SCERR,ERR
"RTN","SCMCEV1",23,0)
 I $D(DISDATE) D
"RTN","SCMCEV1",24,0)
 .S PUR(1,0)="Automatic Team Discharge via Clinic: "_CNAME
"RTN","SCMCEV1",25,0)
 .Q:'$$POSASS^SCMCEV2(DFN,TIEN)
"RTN","SCMCEV1",26,0)
 .S OKAY=$$INPTTM^SCAPMC7(DFN,TIEN,DISDATE,"ERR")
"RTN","SCMCEV1",27,0)
 .I OKAY'=0 D
"RTN","SCMCEV1",28,0)
 ..D WP^DIE(404.42,+OKAY_",","1","A","PUR","SCERR")
"RTN","SCMCEV1",29,0)
 ..S TEXT="Discharged from Team: "_TNAME
"RTN","SCMCEV1",30,0)
 ..D EN^DDIOL(TEXT,"","!,?10")
"RTN","SCMCEV1",31,0)
 Q
"RTN","SCMCEV1",32,0)
 ;
"RTN","SCMCEV1",33,0)
UPDATE(DFN,TIEN,EDATE,DDATE,CNAME) ;
"RTN","SCMCEV1",34,0)
 ;update enrollment date/discharge date
"RTN","SCMCEV1",35,0)
 ;DFN - patient ien
"RTN","SCMCEV1",36,0)
 ;TIEN - team ien
"RTN","SCMCEV1",37,0)
 ;EDATE - enrollment date
"RTN","SCMCEV1",38,0)
 ;DDATE - discharge date
"RTN","SCMCEV1",39,0)
 ;CNAME - clinic name
"RTN","SCMCEV1",40,0)
 ;
"RTN","SCMCEV1",41,0)
 N TPA,TDATE,TEXT,TNAME
"RTN","SCMCEV1",42,0)
 S TNAME=$P($G(^SCTM(404.51,TIEN,0)),"^") ;team name
"RTN","SCMCEV1",43,0)
 I '$D(^SCPT(404.42,"AIDT",DFN,TIEN)) D ENROLL(TIEN,DFN,EDATE,DDATE,CNAME) Q
"RTN","SCMCEV1",44,0)
 ; ^ new enrollment
"RTN","SCMCEV1",45,0)
 S TDATE=$O(^SCPT(404.42,"AIDT",DFN,TIEN,"")) ; -team assignment date (most recent)
"RTN","SCMCEV1",46,0)
 S TPA=$O(^SCPT(404.42,"AIDT",DFN,TIEN,TDATE,"")) ; team assignment ien
"RTN","SCMCEV1",47,0)
 Q:'$D(^SCPT(404.42,+TPA,0))
"RTN","SCMCEV1",48,0)
 K SC($J,404.42),SCERR
"RTN","SCMCEV1",49,0)
 I EDATE'=0 D
"RTN","SCMCEV1",50,0)
 .S SC($J,404.42,TPA_",",.13)=DUZ
"RTN","SCMCEV1",51,0)
 .S SC($J,404.42,TPA_",",.14)=DT
"RTN","SCMCEV1",52,0)
 .S SC($J,404.42,TPA_",",.02)=$P(EDATE,".") ;date only
"RTN","SCMCEV1",53,0)
 .D FILE^DIE("","SC($J)","SCERR")
"RTN","SCMCEV1",54,0)
 .S PUR(1,0)="Automatic Team Update via Clinic:  "_CNAME
"RTN","SCMCEV1",55,0)
 .D WP^DIE(404.42,TPA_",","1","A","PUR","SCERR")
"RTN","SCMCEV1",56,0)
 .S TEXT="Update Team Enrollment "_TNAME
"RTN","SCMCEV1",57,0)
 .D EN^DDIOL(TEXT,"","!,?10")
"RTN","SCMCEV1",58,0)
 I +DDATE'=0 D
"RTN","SCMCEV1",59,0)
 .Q:'$$POSASS^SCMCEV2(DFN,TIEN)
"RTN","SCMCEV1",60,0)
 .; ^ assigned to a position
"RTN","SCMCEV1",61,0)
 .S OKAY=$$INPTTM^SCAPMC7(DFN,TPA,DDATE,"ERR") ; discharge from team
"RTN","SCMCEV1",62,0)
 .I OKAY'=0 D
"RTN","SCMCEV1",63,0)
 ..D WP^DIE(404.42,+OKAY_",","1","A","PUR","SCERR")
"RTN","SCMCEV1",64,0)
 ..S TEXT="Discharged from Team: "_TNAME
"RTN","SCMCEV1",65,0)
 ..D EN^DDIOL(TEXT,"","!,?10")
"RTN","SCMCEV1",66,0)
 Q
"RTN","SCMCEV1",67,0)
 ;
"RTN","SCMCEV1",68,0)
DELT(DFN,CLN) ;deleted clinic entry/enrollment date w/'@'
"RTN","SCMCEV1",69,0)
 ;DFN - patient ien
"RTN","SCMCEV1",70,0)
 ;CLN - clinic ien
"RTN","SCMCEV1",71,0)
 ;
"RTN","SCMCEV1",72,0)
 N CHECK,TM,EDATE,OKAY,CNAME,ERR,TEXT,TNAME
"RTN","SCMCEV1",73,0)
 S CNAME=$P($G(^SC(+CLN,0)),"^") ;clinic name
"RTN","SCMCEV1",74,0)
 S CHECK=$$CHK^SCMCEV2(DFN,CLN,2)
"RTN","SCMCEV1",75,0)
 ; ^ auto discharge okay
"RTN","SCMCEV1",76,0)
 Q:'+CHECK
"RTN","SCMCEV1",77,0)
 ;check if assigned to a position on team
"RTN","SCMCEV1",78,0)
 S TM=+$P(CHECK,"^",2) ;team ien
"RTN","SCMCEV1",79,0)
 S OKAY=$$POSASS^SCMCEV2(DFN,TM)
"RTN","SCMCEV1",80,0)
 Q:'OKAY
"RTN","SCMCEV1",81,0)
 ;delete entry
"RTN","SCMCEV1",82,0)
 S ERR=$$DELTE(DFN,TM)
"RTN","SCMCEV1",83,0)
 I ERR D
"RTN","SCMCEV1",84,0)
 .;deleted entry
"RTN","SCMCEV1",85,0)
 .S TNAME=$P($G(^SCTM(404.51,TM,0)),"^") ;team name
"RTN","SCMCEV1",86,0)
 .S TEXT="Deleted team "_TNAME_" assignment due to deleting clinic assignment"
"RTN","SCMCEV1",87,0)
 .D EN^DDIOL(TEXT,"","!,?10")
"RTN","SCMCEV1",88,0)
 Q
"RTN","SCMCEV1",89,0)
 ;
"RTN","SCMCEV1",90,0)
DELTE(DFN,TIEN) ;delete team assignment entry
"RTN","SCMCEV1",91,0)
 ;DFN - patient ien
"RTN","SCMCEV1",92,0)
 ;TIEN - team ien
"RTN","SCMCEV1",93,0)
 N PTA,ADATE,RET
"RTN","SCMCEV1",94,0)
 S RET=1
"RTN","SCMCEV1",95,0)
 S ADATE=$O(^SCPT(404.42,"AIDT",DFN,TIEN,-(DT+1)))
"RTN","SCMCEV1",96,0)
 I ADATE="" S RET=0 G EXD
"RTN","SCMCEV1",97,0)
 S PTA=$O(^SCPT(404.42,"AIDT",DFN,TIEN,ADATE,""))
"RTN","SCMCEV1",98,0)
 I PTA="" S RET=0 G EXD
"RTN","SCMCEV1",99,0)
 S DA=PTA,DIK="^SCPT(404.42,"
"RTN","SCMCEV1",100,0)
 D ^DIK
"RTN","SCMCEV1",101,0)
 K DA,DIK
"RTN","SCMCEV1",102,0)
EXD Q RET
"RTN","SCMCEV2")
0^89^B4380681
"RTN","SCMCEV2",1,0)
SCMCEV2 ;ALB/CMM - TEAM EVENT DRIVER UTILITIES ; 03/20/96
"RTN","SCMCEV2",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCEV2",3,0)
 ;
"RTN","SCMCEV2",4,0)
ACT(DFN,TIEN) ; active team assignment
"RTN","SCMCEV2",5,0)
 N ACTD,FND,ENT
"RTN","SCMCEV2",6,0)
 S ACTD="",FND=0
"RTN","SCMCEV2",7,0)
 F  S ACTD=$O(^SCPT(404.42,"AIDT",DFN,TIEN,ACTD)) Q:ACTD=""!(FND)  D
"RTN","SCMCEV2",8,0)
 .S ENT=$O(^SCPT(404.42,"AIDT",DFN,TIEN,ACTD,""))
"RTN","SCMCEV2",9,0)
 .Q:ENT=""
"RTN","SCMCEV2",10,0)
 .I $P($G(^SCPT(404.42,ENT,0)),"^",9)="" S FND=1
"RTN","SCMCEV2",11,0)
 Q FND
"RTN","SCMCEV2",12,0)
 ;
"RTN","SCMCEV2",13,0)
CHK(DFN,CLIEN,FLG) ;
"RTN","SCMCEV2",14,0)
 ;check if auto enroll/discharge is appropriate
"RTN","SCMCEV2",15,0)
 ;DFN - patient ien
"RTN","SCMCEV2",16,0)
 ;EN1 - "DE" entry ien
"RTN","SCMCEV2",17,0)
 ;CLIEN - clinic ien
"RTN","SCMCEV2",18,0)
 ;FLG - add-1/del-2/both-3 flag
"RTN","SCMCEV2",19,0)
 ;
"RTN","SCMCEV2",20,0)
 ;RETURNS: 1^team ien = auto enroll/discharge
"RTN","SCMCEV2",21,0)
 ;         0 - don't allow auto enroll/discharge
"RTN","SCMCEV2",22,0)
 ;
"RTN","SCMCEV2",23,0)
 N RETURN,LIST,ERR,OKAY,ACTIVE,TNODE,TIEN
"RTN","SCMCEV2",24,0)
 S RETURN=0,LIST="TCLIST",ERR="ERR1"
"RTN","SCMCEV2",25,0)
 K @LIST,@ERR
"RTN","SCMCEV2",26,0)
 S OKAY=$$TMCL^SCAPMC16(CLIEN,"",.LIST,.ERR)
"RTN","SCMCEV2",27,0)
 G:'OKAY EXIT
"RTN","SCMCEV2",28,0)
 G:@LIST@(0)<0!(@LIST@(0)>1) EXIT
"RTN","SCMCEV2",29,0)
 ;unique team
"RTN","SCMCEV2",30,0)
 S TIEN=+$P($G(@LIST@(1)),"^")
"RTN","SCMCEV2",31,0)
 I FLG=1!(FLG=3),$P($G(^SCTM(404.51,TIEN,0)),"^",11)'=1 G EXIT
"RTN","SCMCEV2",32,0)
 I FLG=2!(FLG=3),$P($G(^SCTM(404.51,TIEN,0)),"^",12)'=1 G EXIT
"RTN","SCMCEV2",33,0)
 ;auto enroll/discharge flag on to allow
"RTN","SCMCEV2",34,0)
 S TNODE=$G(^SCTM(404.51,TIEN,0))
"RTN","SCMCEV2",35,0)
 I $P(TNODE,"^",10)=1 G EXIT ;team close to future assignments
"RTN","SCMCEV2",36,0)
 I $P(TNODE,"^",5)=1&($G(^DPT(DFN,"VET"))'="Y") G EXIT ;pc team but not vet
"RTN","SCMCEV2",37,0)
 S ACTIVE=0
"RTN","SCMCEV2",38,0)
 I $D(^SCPT(404.42,"AIDT",DFN,TIEN)) S ACTIVE=$$ACT(DFN,TIEN)
"RTN","SCMCEV2",39,0)
 ;enrolled on team but is it still active
"RTN","SCMCEV2",40,0)
 I ACTIVE&(FLG=1) G EXIT ;already enrolled
"RTN","SCMCEV2",41,0)
 S RETURN="1^"_TIEN ;update/enroll
"RTN","SCMCEV2",42,0)
EXIT ;
"RTN","SCMCEV2",43,0)
 K @LIST,@ERR
"RTN","SCMCEV2",44,0)
 Q RETURN
"RTN","SCMCEV2",45,0)
 ;
"RTN","SCMCEV2",46,0)
POSASS(DFN,TM) ;patient assigned to position on team TM
"RTN","SCMCEV2",47,0)
 ;DFN - patient ien
"RTN","SCMCEV2",48,0)
 ;TM - team ien
"RTN","SCMCEV2",49,0)
 N PPLIST,ERR,OKAY,CNT,STOP
"RTN","SCMCEV2",50,0)
 S STOP=0
"RTN","SCMCEV2",51,0)
 S OKAY=$$TPPT^SCAPMC23(DFN,"","","","","","","PPLIST","ERR")
"RTN","SCMCEV2",52,0)
 ;returns all positions patient assigned to today
"RTN","SCMCEV2",53,0)
 Q:'OKAY -1
"RTN","SCMCEV2",54,0)
 Q:'$D(PPLIST) 1  ;no associated positions
"RTN","SCMCEV2",55,0)
 S CNT=0
"RTN","SCMCEV2",56,0)
 F  S CNT=$O(PPLIST(CNT)) Q:CNT=""!(CNT'?.N)!(STOP)  D
"RTN","SCMCEV2",57,0)
 .I +$P($G(PPLIST(CNT)),"^",3)=TM S STOP=1
"RTN","SCMCEV2",58,0)
 I 'STOP Q 1
"RTN","SCMCEV2",59,0)
 Q 0
"RTN","SCMCEV3")
0^90^B19467281
"RTN","SCMCEV3",1,0)
SCMCEV3 ;ALB/CMM - TEAM EVENT DRIVER UTILITIES ; 03/20/96
"RTN","SCMCEV3",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCEV3",3,0)
 ;
"RTN","SCMCEV3",4,0)
INVOKE(DFN) ;envokes Team Event Driver
"RTN","SCMCEV3",5,0)
 I '$D(^TMP($J,"SC CED",DFN,"BEFORE"))!('$D(^TMP($J,"SC CED",DFN,"AFTER"))) G EXIT
"RTN","SCMCEV3",6,0)
 S X=+$O(^ORD(101,"B","SC CLINIC ENROLL/DISCHARGE EVENT DRIVER",0))_";ORD(101,"
"RTN","SCMCEV3",7,0)
 D EN^XQOR
"RTN","SCMCEV3",8,0)
EXIT ;
"RTN","SCMCEV3",9,0)
 K ^TMP($J,"SC CED",DFN,"BEFORE"),^TMP($J,"SC CED",DFN,"AFTER"),X
"RTN","SCMCEV3",10,0)
 Q
"RTN","SCMCEV3",11,0)
 ;
"RTN","SCMCEV3",12,0)
BEFORE(DFN) ;
"RTN","SCMCEV3",13,0)
 ;get before picture of ^DPT(DFN,"DE") node
"RTN","SCMCEV3",14,0)
 ;
"RTN","SCMCEV3",15,0)
 K ^TMP($J,"SC CED",DFN,"BEFORE")
"RTN","SCMCEV3",16,0)
 MERGE ^TMP($J,"SC CED",DFN,"BEFORE")=^DPT(DFN,"DE")
"RTN","SCMCEV3",17,0)
 I '$D(^TMP($J,"SC CED",DFN,"BEFORE")) S ^TMP($J,"SC CED",DFN,"BEFORE")=""
"RTN","SCMCEV3",18,0)
 ; ^ not enrolled in any clinics ever
"RTN","SCMCEV3",19,0)
 Q
"RTN","SCMCEV3",20,0)
 ;
"RTN","SCMCEV3",21,0)
AFTER(DFN) ;
"RTN","SCMCEV3",22,0)
 ;get after picture of ^DPT(DFN,"DE") node
"RTN","SCMCEV3",23,0)
 ;
"RTN","SCMCEV3",24,0)
 K ^TMP($J,"SC CED",DFN,"AFTER")
"RTN","SCMCEV3",25,0)
 MERGE ^TMP($J,"SC CED",DFN,"AFTER")=^DPT(DFN,"DE")
"RTN","SCMCEV3",26,0)
 Q
"RTN","SCMCEV3",27,0)
 ;
"RTN","SCMCEV3",28,0)
COMPARE(DFN) ;team event driver
"RTN","SCMCEV3",29,0)
 ;compare before and after of DFN's "DE" node
"RTN","SCMCEV3",30,0)
 N NXT,SUB1,SUB2,NEW,CLN,ENT
"RTN","SCMCEV3",31,0)
 S (NXT,SUB1,SUB2)=0
"RTN","SCMCEV3",32,0)
 I '$D(^TMP($J,"SC CED",DFN,"AFTER")) G DELS
"RTN","SCMCEV3",33,0)
 F  S NXT=$O(^TMP($J,"SC CED",DFN,"AFTER",NXT)) Q:NXT=""!(NXT'?.N)  D
"RTN","SCMCEV3",34,0)
 .S NEW=0
"RTN","SCMCEV3",35,0)
 .;check clinic added
"RTN","SCMCEV3",36,0)
 .I '$D(^TMP($J,"SC CED",DFN,"BEFORE",NXT,0)) D NEWC(DFN,NXT) S NEW=1
"RTN","SCMCEV3",37,0)
 .Q:NEW
"RTN","SCMCEV3",38,0)
 .S SUB1=0
"RTN","SCMCEV3",39,0)
 .;change to existing entry
"RTN","SCMCEV3",40,0)
 .F  S SUB1=$O(^TMP($J,"SC CED",DFN,"AFTER",NXT,SUB1)) Q:SUB1=""!(SUB1'?.N)  D
"RTN","SCMCEV3",41,0)
 ..S SUB2=0
"RTN","SCMCEV3",42,0)
 ..F  S SUB2=$O(^TMP($J,"SC CED",DFN,"AFTER",NXT,SUB1,SUB2)) Q:SUB2=""!(SUB2'?.N)  D
"RTN","SCMCEV3",43,0)
 ...I $G(^TMP($J,"SC CED",DFN,"AFTER",NXT,SUB1,SUB2,0))'=$G(^TMP($J,"SC CED",DFN,"BEFORE",NXT,SUB1,SUB2,0)) D CHNG(DFN,NXT,SUB1,SUB2)
"RTN","SCMCEV3",44,0)
 ;
"RTN","SCMCEV3",45,0)
DELS ;look for deletes
"RTN","SCMCEV3",46,0)
 S CLN=""
"RTN","SCMCEV3",47,0)
 F  S CLN=$O(^TMP($J,"SC CED",DFN,"BEFORE","B",CLN)) Q:CLN=""  D
"RTN","SCMCEV3",48,0)
 .S ENT=$O(^TMP($J,"SC CED",DFN,"BEFORE","B",CLN,""))
"RTN","SCMCEV3",49,0)
 .Q:ENT=""
"RTN","SCMCEV3",50,0)
 .I '$D(^TMP($J,"SC CED",DFN,"AFTER","B",CLN,ENT)) D DELT^SCMCEV1(DFN,CLN)
"RTN","SCMCEV3",51,0)
 Q
"RTN","SCMCEV3",52,0)
 ;
"RTN","SCMCEV3",53,0)
CHNG(DFN,NXT,SUB1,SUB2) ;
"RTN","SCMCEV3",54,0)
 ;changes made in entry SUB2 of SUB1 entry of entry NXT of "DE" node
"RTN","SCMCEV3",55,0)
 N FLAG,EDATE,GDATE,CIEN,CHECK,ENROL,CNAME
"RTN","SCMCEV3",56,0)
 S (ENROL,FLAG,GDATE)=0
"RTN","SCMCEV3",57,0)
 I $P($G(^TMP($J,"SC CED",DFN,"BEFORE",NXT,SUB1,SUB2,0)),"^")'=$P($G(^TMP($J,"SC CED",DFN,"AFTER",NXT,SUB1,SUB2,0)),"^") S EDATE=$P($G(^TMP($J,"SC CED",DFN,"AFTER",NXT,SUB1,SUB2,0)),"^"),FLAG=1,ENROL=1,EDATE=$P(EDATE,".")
"RTN","SCMCEV3",58,0)
 ;                                            ^ date only
"RTN","SCMCEV3",59,0)
 ;enroll date changed
"RTN","SCMCEV3",60,0)
 I $P($G(^TMP($J,"SC CED",DFN,"BEFORE",NXT,SUB1,SUB2,0)),"^",3)'=$P($G(^TMP($J,"SC CED",DFN,"AFTER",NXT,SUB1,SUB2,0)),"^",3) S GDATE=$P($G(^TMP($J,"SC CED",DFN,"AFTER",NXT,SUB1,SUB2,0)),"^",3),FLAG=1,ENROL=$S(ENROL=1:3,1:2),GDATE=$P(GDATE,".")
"RTN","SCMCEV3",61,0)
 ; ^ date only
"RTN","SCMCEV3",62,0)
 ;discharge date changed/added
"RTN","SCMCEV3",63,0)
 S CHECK=""
"RTN","SCMCEV3",64,0)
 S CIEN=+$P($G(^TMP($J,"SC CED",DFN,"AFTER",NXT,0)),"^") ;clinic ien
"RTN","SCMCEV3",65,0)
 S CNAME=$P($G(^SC(CIEN,0)),"^") ;clinic name
"RTN","SCMCEV3",66,0)
 I $D(EDATE),EDATE=""!(EDATE=0) D DELT^SCMCEV1(DFN,CIEN) Q
"RTN","SCMCEV3",67,0)
 ; ^ deleted enrollment date
"RTN","SCMCEV3",68,0)
 I $D(GDATE),'$D(EDATE) S EDATE=$P($G(^TMP($J,"SC CED",DFN,"AFTER",NXT,SUB1,SUB2,0)),"^"),EDATE=$P(EDATE,".") ;date only
"RTN","SCMCEV3",69,0)
 I $D(GDATE),EDATE=GDATE D DELT^SCMCEV1(DFN,CIEN) Q
"RTN","SCMCEV3",70,0)
 ; ^ enrolled and discharged on same date
"RTN","SCMCEV3",71,0)
 I GDATE'="",ENROL=1 S ENROL=3
"RTN","SCMCEV3",72,0)
 I GDATE'="",ENROL=1 S ENROL=2
"RTN","SCMCEV3",73,0)
 ;enrol = 1:enrollment ; 2=discharge ; 3=both
"RTN","SCMCEV3",74,0)
 I FLAG S CHECK=$$CHK^SCMCEV2(DFN,CIEN,ENROL)
"RTN","SCMCEV3",75,0)
 ;update 404.42?
"RTN","SCMCEV3",76,0)
 I +CHECK D UPDATE^SCMCEV1(DFN,$P(CHECK,"^",2),EDATE,GDATE,CNAME)
"RTN","SCMCEV3",77,0)
 Q
"RTN","SCMCEV3",78,0)
 ;
"RTN","SCMCEV3",79,0)
NEWC(DFN,NXT) ;
"RTN","SCMCEV3",80,0)
 ;new clinic added (enrolled)
"RTN","SCMCEV3",81,0)
 ;DFN - patient ien
"RTN","SCMCEV3",82,0)
 ;NXT - ien of "DE" node
"RTN","SCMCEV3",83,0)
 ;
"RTN","SCMCEV3",84,0)
 N CIEN,NODE,CHKIT,SUB1,EDATE,GDATE,FLG,CNAME,SCRESTA,SCREST
"RTN","SCMCEV3",85,0)
 S NODE=$G(^TMP($J,"SC CED",DFN,"AFTER",NXT,0))
"RTN","SCMCEV3",86,0)
 Q:NODE=""
"RTN","SCMCEV3",87,0)
 S CIEN=$P(NODE,"^") ;clinic ien
"RTN","SCMCEV3",88,0)
 S CNAME=$P($G(^SC(+CIEN,0)),"^") ;clinic name
"RTN","SCMCEV3",89,0)
 S SUB1=$O(^TMP($J,"SC CED",DFN,"AFTER",NXT,0))
"RTN","SCMCEV3",90,0)
 S SUB2=$O(^TMP($J,"SC CED",DFN,"AFTER",NXT,SUB1,"A"),-1)
"RTN","SCMCEV3",91,0)
 S EDATE=$P($G(^TMP($J,"SC CED",DFN,"AFTER",NXT,SUB1,SUB2,0)),"^"),FLG=1
"RTN","SCMCEV3",92,0)
 S EDATE=$P(EDATE,".") ;date only
"RTN","SCMCEV3",93,0)
 S GDATE=$P($G(^TMP($J,"SC CED",DFN,"AFTER",NXT,SUB1,SUB2,0)),"^",3)
"RTN","SCMCEV3",94,0)
 S GDATE=$P(GDATE,".") ;date only
"RTN","SCMCEV3",95,0)
 I GDATE'="" S FLG=3
"RTN","SCMCEV3",96,0)
 ;  -- This fires off MailMessage for new assignment to Clinic
"RTN","SCMCEV3",97,0)
 S SCREST=$$RESTPT^SCAPMCU4(DFN,DT,"SCRESTA")
"RTN","SCMCEV3",98,0)
 D:SCREST MAIL^SCMCCON(DFN,.CNAME,1,EDATE,"SCRESTA")
"RTN","SCMCEV3",99,0)
 ;  ---  ----
"RTN","SCMCEV3",100,0)
 S CHKIT=$$CHK^SCMCEV2(DFN,CIEN,FLG)
"RTN","SCMCEV3",101,0)
 I +CHKIT D ENROLL^SCMCEV1(DFN,$P(CHKIT,"^",2),EDATE,GDATE,CNAME)
"RTN","SCMCEV3",102,0)
 Q
"RTN","SCMCEV3",103,0)
 ;
"RTN","SCMCMM")
0^126^B2451307
"RTN","SCMCMM",1,0)
SCMCMM ;ALB/REW - MailMessages Utilities; 26 Mar 1996
"RTN","SCMCMM",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCMM",3,0)
 ;1
"RTN","SCMCMM",4,0)
PCMAIL(DFN,SCARRAY,SCDATE) ;load standard patient pc info into mail message
"RTN","SCMCMM",5,0)
 ;  DFN     - ptr to Patient File
"RTN","SCMCMM",6,0)
 ;  SCARRAY - Literal value of XMTEXT ARRAY
"RTN","SCMCMM",7,0)
 ;  SCDATE  - Date of interest - default=dt
"RTN","SCMCMM",8,0)
 ;    Returned: Ending Line Count for Array
"RTN","SCMCMM",9,0)
 ;
"RTN","SCMCMM",10,0)
 N SCLNCNT,SCPCTM,SCPHONE,SCPCAT,SCPCPR
"RTN","SCMCMM",11,0)
 S SCDATE=$G(SCDATE,DT)
"RTN","SCMCMM",12,0)
 S SCLNCNT=+$O(@SCARRAY@(9999999),-1)  ; the current number of lines
"RTN","SCMCMM",13,0)
 S SCPCTM=$$NMPCTM^SCAPMCU2(DFN,SCDATE,1)
"RTN","SCMCMM",14,0)
 I SCPCTM D
"RTN","SCMCMM",15,0)
 .S SCPHONE=$P($G(^SCTM(404.51,+SCPCTM,0)),U,2)
"RTN","SCMCMM",16,0)
 .S:$L(SCPHONE) SCPHONE="      Phone: "_SCPHONE
"RTN","SCMCMM",17,0)
 .S SCPCTM=$P(SCPCTM,U,2)
"RTN","SCMCMM",18,0)
 .S SCPCAT=$P($$NMPCPR^SCAPMCU2(DFN,SCDATE,2),U,2)
"RTN","SCMCMM",19,0)
 .S SCPCPR=$P($$NMPCPR^SCAPMCU2(DFN,SCDATE,1),U,2)
"RTN","SCMCMM",20,0)
 IF $L(SCPCTM) D
"RTN","SCMCMM",21,0)
 .D SETLN(" ")
"RTN","SCMCMM",22,0)
 .D SETLN("Current Primary Care Management Data: ")
"RTN","SCMCMM",23,0)
 .D:$L(SCPCTM) SETLN("  PC Team:               "_SCPCTM_SCPHONE)
"RTN","SCMCMM",24,0)
 .D:$L(SCPCPR) SETLN("  PC Practitioner:       "_SCPCPR)
"RTN","SCMCMM",25,0)
 .D:$L(SCPCAT) SETLN("  PC Attending:          "_SCPCAT)
"RTN","SCMCMM",26,0)
 ELSE  D
"RTN","SCMCMM",27,0)
 .D SETLN(" ")
"RTN","SCMCMM",28,0)
 .D SETLN("No Current Primary Care Management Data")
"RTN","SCMCMM",29,0)
END Q SCLNCNT
"RTN","SCMCMM",30,0)
 ;
"RTN","SCMCMM",31,0)
SETLN(TEXT) ;
"RTN","SCMCMM",32,0)
 ;Note - This is not a stand-alone call - needs scarray,sclncnt
"RTN","SCMCMM",33,0)
 Q:$G(TEXT)=""
"RTN","SCMCMM",34,0)
 ; increments SCLNCNT, adds text to @scarray@(sclncnt)
"RTN","SCMCMM",35,0)
 S SCLNCNT=SCLNCNT+1
"RTN","SCMCMM",36,0)
 S @SCARRAY@(SCLNCNT)=TEXT
"RTN","SCMCMM",37,0)
 Q
"RTN","SCMCPM")
0^74^B4883597
"RTN","SCMCPM",1,0)
SCMCPM ;ALB/REW - Inpatient Activity MailMan Message ; 7 Mar 1996
"RTN","SCMCPM",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCPM",3,0)
 ;
"RTN","SCMCPM",4,0)
MAIL ;do Inpatient MailMan Message
"RTN","SCMCPM",5,0)
 N SCPMXM,SCPTNM,SCPMDT,SCPCPR,SCPCTM,SCPCAT,SCTRANS,XMDUZ,SCLNCNT,XMY,XMSUB,XMTEXT,VA,VAERR,SCTRANNM,XMZ,Y,SCORIGA,SCNODE
"RTN","SCMCPM",6,0)
 S SCORIGA=$G(^DGPM(+$P(DGPMA,U,14),0))
"RTN","SCMCPM",7,0)
 S SCPMDT("BEGIN")=+DGPMA
"RTN","SCMCPM",8,0)
 S SCPMDT("END")=DT
"RTN","SCMCPM",9,0)
 S SCPMDT("INCL")=0
"RTN","SCMCPM",10,0)
 ;set xmy array for practitioners in positions receiving inpt notices
"RTN","SCMCPM",11,0)
 G:'$$PCMMXMY^SCAPMC25(2,DFN,,"SCPMDT",0) END
"RTN","SCMCPM",12,0)
 S SCTRANS=+$P(DGPMA,U,2),SCTRANNM=$P($G(^DG(405.3,SCTRANS,0)),U,1)
"RTN","SCMCPM",13,0)
 G:("^1^2^3^")'[(U_SCTRANS_U) END  ;must be admit,transfer or discharge
"RTN","SCMCPM",14,0)
 D EN^DDIOL("Sending INPATIENT "_SCTRANNM_" Message")
"RTN","SCMCPM",15,0)
 D PID^VADPT6
"RTN","SCMCPM",16,0)
 S SCPTNM=$P(^DPT(DFN,0),U,1)
"RTN","SCMCPM",17,0)
 S XMSUB="INPATIENT "_SCTRANNM_" for "_SCPTNM_"("_VA("PID")_")",XMTEXT="SCPMXM(",SCLNCNT=0
"RTN","SCMCPM",18,0)
 D SETLN("Patient:                 "_SCPTNM_"("_VA("PID")_")")
"RTN","SCMCPM",19,0)
 D SETLN("Transaction:             "_SCTRANNM)
"RTN","SCMCPM",20,0)
 S Y=+DGPMA X ^DD("DD") D SETLN("Date/Time:               "_Y)
"RTN","SCMCPM",21,0)
 ;if movement is not original movement
"RTN","SCMCPM",22,0)
 IF DGPMA'=SCORIGA D
"RTN","SCMCPM",23,0)
 .S Y=+SCORIGA X ^DD("DD") D SETLN("Admission Date/Time:     "_Y)
"RTN","SCMCPM",24,0)
 D SETLN("Type of Movement:        "_$P($G(^DG(405.1,+$P(DGPMA,U,4),0)),U,1))
"RTN","SCMCPM",25,0)
 S SCNODE=$S(SCTRANS=3:DGPMP,1:DGPMA)
"RTN","SCMCPM",26,0)
 D SETLN(" ")
"RTN","SCMCPM",27,0)
 D SETLN("Ward Location:           "_$P($G(^DIC(42,+$P(SCNODE,U,6),0)),U,1))
"RTN","SCMCPM",28,0)
 D SETLN("Room-Bed:                "_$P($G(^DG(405.4,+$P(SCNODE,U,7),0)),U,1))
"RTN","SCMCPM",29,0)
 D SETLN("Inpatient Provider:      "_$P($G(^VA(200,+$P(SCNODE,U,8),0)),U,1))
"RTN","SCMCPM",30,0)
 D SETLN("Admitting DX:            "_$P(SCORIGA,U,10))
"RTN","SCMCPM",31,0)
 S SCLNCNT=$$PCMAIL^SCMCMM(DFN,"SCPMXM",DT) ;standard pc info into mail
"RTN","SCMCPM",32,0)
 S XMDUZ=$G(DUZ,.5)
"RTN","SCMCPM",33,0)
 S XMY(XMDUZ)=""
"RTN","SCMCPM",34,0)
 D ^XMD
"RTN","SCMCPM",35,0)
END ;
"RTN","SCMCPM",36,0)
 Q
"RTN","SCMCPM",37,0)
 ;
"RTN","SCMCPM",38,0)
SETLN(TEXT) ;
"RTN","SCMCPM",39,0)
 ; increments SCLNCNT, adds text to scpmxm(sclncnt)
"RTN","SCMCPM",40,0)
 S SCLNCNT=SCLNCNT+1
"RTN","SCMCPM",41,0)
 S SCPMXM(SCLNCNT)=TEXT
"RTN","SCMCPM",42,0)
 Q
"RTN","SCMCPM1")
0^127^B4008464
"RTN","SCMCPM1",1,0)
SCMCPM1 ;ALB/REW - Pt PC Team Assignment on Inpt Discharge ; 1 Apr 1996
"RTN","SCMCPM1",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCPM1",3,0)
 ;
"RTN","SCMCPM1",4,0)
PCMMDIS ; - called by 'SC ASSIGN PC TEAM ON DISCHARGE' which is 
"RTN","SCMCPM1",5,0)
 ;   called by the patient movement event driver
"RTN","SCMCPM1",6,0)
 Q:$D(ZTQUEUED)  ;interactive - quit if queued
"RTN","SCMCPM1",7,0)
 ;check if patient has a current PC team if no prompt to enroll
"RTN","SCMCPM1",8,0)
 Q:$P($G(DGPMA),U,2)'=3  ;must be a discharge
"RTN","SCMCPM1",9,0)
 Q:'$G(DFN)  ;should exist
"RTN","SCMCPM1",10,0)
 Q:'$P($G(^SD(404.91,1,"PCMM")),U,2)  ; check turn off flag
"RTN","SCMCPM1",11,0)
 N DIR,DIRUT,DIROUT,SCTMERR,DIC,X,Y,SCOK,SCX,SCOUTFLD,SCBADOUT
"RTN","SCMCPM1",12,0)
 D EN^DDIOL("Checking Primary Care Status...")
"RTN","SCMCPM1",13,0)
 ;display PC info, check if patient has a current PC team
"RTN","SCMCPM1",14,0)
 D PCMM^SCRPU4(DFN,DT)
"RTN","SCMCPM1",15,0)
 G:$$NMPCTM^SCAPMCU2(DFN,DT,1) END
"RTN","SCMCPM1",16,0)
 ;if not, check if patient has a PC team in the future
"RTN","SCMCPM1",17,0)
 S SCOK=$$YSPTTMPC^SCMCTMU2(DFN,DT)
"RTN","SCMCPM1",18,0)
 IF 'SCOK D  G END
"RTN","SCMCPM1",19,0)
 .D EN^DDIOL($P(SCOK,U,2))
"RTN","SCMCPM1",20,0)
 ;if not either, ask if they want to assign a patient to a PC team
"RTN","SCMCPM1",21,0)
 S DIR(0)="Y"
"RTN","SCMCPM1",22,0)
 S DIR("A")="Do you wish to assign patient to Primary Care"
"RTN","SCMCPM1",23,0)
 S DIR("B")="NO"
"RTN","SCMCPM1",24,0)
 D ^DIR
"RTN","SCMCPM1",25,0)
 G:'Y END
"RTN","SCMCPM1",26,0)
 S DIR(0)="Y"
"RTN","SCMCPM1",27,0)
 S DIR("A")="Do you wish to assign patient to a Primary Care Team"
"RTN","SCMCPM1",28,0)
 S DIR("B")="NO"
"RTN","SCMCPM1",29,0)
 D ^DIR
"RTN","SCMCPM1",30,0)
 IF 'Y D  G END
"RTN","SCMCPM1",31,0)
 .S SCOUTFLD(.04)=1
"RTN","SCMCPM1",32,0)
 .S SCX=$$ACOUTPT^SCAPMC20(DFN,"SCOUTFLD","SCBADOUT")
"RTN","SCMCPM1",33,0)
 .D:SCX EN^DDIOL("Patient Assigned to Primary Care, but no Team Assigned...")
"RTN","SCMCPM1",34,0)
 S DIC="^SCTM(404.51,"
"RTN","SCMCPM1",35,0)
 S DIC(0)="AEMQZ"
"RTN","SCMCPM1",36,0)
 S DIC("S")="IF $$ACTTM^SCMCTMU(Y,DT)&($P($G(^SCTM(404.51,Y,0)),U,5))"
"RTN","SCMCPM1",37,0)
 ;  - select from active teams that can be PC Teams
"RTN","SCMCPM1",38,0)
 D ^DIC
"RTN","SCMCPM1",39,0)
 G:Y<1 END
"RTN","SCMCPM1",40,0)
 S SCTM=+Y
"RTN","SCMCPM1",41,0)
 ;setup fields
"RTN","SCMCPM1",42,0)
 S SCTMFLDS(.02)=DT
"RTN","SCMCPM1",43,0)
 S SCTMFLDS(.08)=1 ;primary care assignment
"RTN","SCMCPM1",44,0)
 S SCTMFLDS(.11)=$G(DUZ,.5)
"RTN","SCMCPM1",45,0)
 D NOW^%DTC S SCTMFLDS(.12)=%
"RTN","SCMCPM1",46,0)
 IF $$ACPTTM^SCAPMC(DFN,SCTM,"SCTMFLDS",DT,"SCTPTME") D
"RTN","SCMCPM1",47,0)
 .D EN^DDIOL("...PC Team Assignment Made")
"RTN","SCMCPM1",48,0)
END ;
"RTN","SCMCPM1",49,0)
 Q
"RTN","SCMCPR1")
0^95^B4474920
"RTN","SCMCPR1",1,0)
SCMCPR1 ;ALB/SCK - API FILE FOR STAFF ASSIGNMENTS ; 3/21/96
"RTN","SCMCPR1",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCPR1",3,0)
 ;;1.0
"RTN","SCMCPR1",4,0)
 Q
"RTN","SCMCPR1",5,0)
 ;
"RTN","SCMCPR1",6,0)
URSLKUP(SCDAT,SCUSR,SCVAL,SCREEN,SCINST) ;
"RTN","SCMCPR1",7,0)
 ;   Does a lookup in the USR #8930.3 file based on the user class match passed in
"RTN","SCMCPR1",8,0)
 ;
"RTN","SCMCPR1",9,0)
 ;  Input 
"RTN","SCMCPR1",10,0)
 ;      SCUSR  User class to use for lookup
"RTN","SCMCPR1",11,0)
 ;      SCVAL  Partial User name to lookup on
"RTN","SCMCPR1",12,0)
 ;   
"RTN","SCMCPR1",13,0)
 ;   Returns an array of matches found, or an error array.        
"RTN","SCMCPR1",14,0)
 ;   Format for array:        
"RTN","SCMCPR1",15,0)
 ;        SCDATA(1)=[Data]
"RTN","SCMCPR1",16,0)
 ;        SCDATA(x)=IEN^New Users Name^Title
"RTN","SCMCPR1",17,0)
 ;
"RTN","SCMCPR1",18,0)
 ;   Format for Error:
"RTN","SCMCPR1",19,0)
 ;       SCDATA(1)=[Errors]
"RTN","SCMCPR1",20,0)
 ;       SCDATA(x)=" message "
"RTN","SCMCPR1",21,0)
 ;
"RTN","SCMCPR1",22,0)
 N SCI,N,SCRTN,SCTMP,SCTITLE,SCIEN,SCN,SCUERR
"RTN","SCMCPR1",23,0)
 ;
"RTN","SCMCPR1",24,0)
 I SCUSR']""&(SCINST=1) D  G USRQ
"RTN","SCMCPR1",25,0)
 . S N=0
"RTN","SCMCPR1",26,0)
 . D SETF("[Errors]")
"RTN","SCMCPR1",27,0)
 . D SETF("No User Class Defined")
"RTN","SCMCPR1",28,0)
 ;
"RTN","SCMCPR1",29,0)
 IF $L(SCVAL)<3&(SCINST=0) D  G USRQ
"RTN","SCMCPR1",30,0)
 . S N=0
"RTN","SCMCPR1",31,0)
 .D SETF("[Errors]")
"RTN","SCMCPR1",32,0)
 .D SETF("Insufficient characters to match")
"RTN","SCMCPR1",33,0)
 ;
"RTN","SCMCPR1",34,0)
 S N=0
"RTN","SCMCPR1",35,0)
 IF SCINST=1 D
"RTN","SCMCPR1",36,0)
 . D LIST^DIC(200,"",".01;8;28","","","",SCVAL,"","IF $$ISA^USRLM(Y,SCUSR,SCUERR)","")
"RTN","SCMCPR1",37,0)
 ;
"RTN","SCMCPR1",38,0)
 IF SCINST=0 D
"RTN","SCMCPR1",39,0)
 .D LIST^DIC(200,"",".01;8;28","","","",SCVAL,"",SCREEN,"")
"RTN","SCMCPR1",40,0)
 ;
"RTN","SCMCPR1",41,0)
 S N=0
"RTN","SCMCPR1",42,0)
 D SETF("[Data]")
"RTN","SCMCPR1",43,0)
 S I="" F  S I=$O(^TMP("DILIST",$J,1,I)) Q:'I  D
"RTN","SCMCPR1",44,0)
 . S SCTMP=^TMP("DILIST",$J,2,I)_U
"RTN","SCMCPR1",45,0)
 . S:SCINST SCTMP=SCTMP_$$CLNAME^USRLM(+SCUSR)
"RTN","SCMCPR1",46,0)
 . S SCTMP=SCTMP_U_U_U_U_^TMP("DILIST",$J,1,I)
"RTN","SCMCPR1",47,0)
 . S SCTMP=SCTMP_U_^TMP("DILIST",$J,"ID",I,8)
"RTN","SCMCPR1",48,0)
 . S SCTMP=SCTMP_U_^TMP("DILIST",$J,"ID",I,28)
"RTN","SCMCPR1",49,0)
 . D SETF(SCTMP)
"RTN","SCMCPR1",50,0)
 ;
"RTN","SCMCPR1",51,0)
 K ^TMP("DILIST",$J)
"RTN","SCMCPR1",52,0)
USRQ Q
"RTN","SCMCPR1",53,0)
 ;
"RTN","SCMCPR1",54,0)
SETF(X) ;
"RTN","SCMCPR1",55,0)
 S N=N+1
"RTN","SCMCPR1",56,0)
 S SCDAT(N)=X
"RTN","SCMCPR1",57,0)
 Q
"RTN","SCMCPR1",58,0)
 ;
"RTN","SCMCPR1",59,0)
 ;
"RTN","SCMCPR1",60,0)
TEST(CHK) ;
"RTN","SCMCPR1",61,0)
 N SC,SCCHECK
"RTN","SCMCPR1",62,0)
 K SCK
"RTN","SCMCPR1",63,0)
 IF CHK=1 D
"RTN","SCMCPR1",64,0)
 . S DIC="^USR(8930,",DIC("A")="Enter User Class: ",DIC(0)="AEMZ"
"RTN","SCMCPR1",65,0)
 . D ^DIC
"RTN","SCMCPR1",66,0)
 . W !,Y,!
"RTN","SCMCPR1",67,0)
 . R "Lookup: ",X:60
"RTN","SCMCPR1",68,0)
 . Q:'$G(Y)>0
"RTN","SCMCPR1",69,0)
 . D URSLKUP(.SCK,$P(Y,U),X,"",CHK)
"RTN","SCMCPR1",70,0)
 ;
"RTN","SCMCPR1",71,0)
 IF CHK=0 D
"RTN","SCMCPR1",72,0)
 . R "Name: ",X:60
"RTN","SCMCPR1",73,0)
 . D URSLKUP(.SCK,"",X,"",CHK)
"RTN","SCMCPR1",74,0)
 ;
"RTN","SCMCPR1",75,0)
 ;;;W ! ZW SCK
"RTN","SCMCPR1",76,0)
TESTQ Q
"RTN","SCMCPRE")
0^148^B356944
"RTN","SCMCPRE",1,0)
SCMCPRE ;ALB/REW - PCMM Post-init ; 2 May 1996
"RTN","SCMCPRE",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCPRE",3,0)
EN ;
"RTN","SCMCPRE",4,0)
 D MESS("PCMM Pre-init Actions:","!")
"RTN","SCMCPRE",5,0)
 D MESS("  ...done")
"RTN","SCMCPRE",6,0)
 Q
"RTN","SCMCPRE",7,0)
 ;
"RTN","SCMCPRE",8,0)
MESS(TEXT,FORMAT) ;
"RTN","SCMCPRE",9,0)
 S TEXT=$G(TEXT,"")
"RTN","SCMCPRE",10,0)
 S FORMAT=$G(FORMAT,"!")
"RTN","SCMCPRE",11,0)
 D EN^DDIOL(TEXT,"",FORMAT)
"RTN","SCMCPRE",12,0)
 Q
"RTN","SCMCPRE",13,0)
KILLFILE(FILE) ;
"RTN","SCMCPRE",14,0)
 N DIU
"RTN","SCMCPRE",15,0)
 D MESS("Deleting File "_FILE,"!")
"RTN","SCMCPRE",16,0)
 S DIU(0)="D"
"RTN","SCMCPRE",17,0)
 S DIU=FILE
"RTN","SCMCPRE",18,0)
 D EN^DIU2
"RTN","SCMCPRE",19,0)
 Q
"RTN","SCMCPRE",20,0)
 ;
"RTN","SCMCPST")
0^38^B11926378
"RTN","SCMCPST",1,0)
SCMCPST ;ALB/REW - PCMM Post-init ; 4 Feb 1996
"RTN","SCMCPST",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCPST",3,0)
EN ;
"RTN","SCMCPST",4,0)
 D MESS("PCMM Post-init Actions:","!")
"RTN","SCMCPST",5,0)
 N SCUSR,SCVAR
"RTN","SCMCPST",6,0)
 N SCLSEQ,SCN,SCESEQ,SCPARM,SCP,SCBEGIN,SCEND,SCINCL,SCDTS
"RTN","SCMCPST",7,0)
 IF '$$EXTCHK D  G QTEN
"RTN","SCMCPST",8,0)
 .D MESS("...Problem with Package Environment")
"RTN","SCMCPST",9,0)
 .D ABORT
"RTN","SCMCPST",10,0)
 D MESS("...Environment Ok")
"RTN","SCMCPST",11,0)
 IF '$$DEFAULT D  G QTEN
"RTN","SCMCPST",12,0)
 .D MESS("...Problem with Setting up default variables")
"RTN","SCMCPST",13,0)
 .D ABORT
"RTN","SCMCPST",14,0)
 D MESS("...Default setup Ok")
"RTN","SCMCPST",15,0)
 IF '$$OKCLEAN D  G QTEN
"RTN","SCMCPST",16,0)
 .D MESS("...Problem with Cleanup")
"RTN","SCMCPST",17,0)
 .D ABORT
"RTN","SCMCPST",18,0)
 D MESS("... Cleanup Ok")
"RTN","SCMCPST",19,0)
 D MESS(">>>PCMM Post-init Routine is complete","!!")
"RTN","SCMCPST",20,0)
QTEN Q
"RTN","SCMCPST",21,0)
 ;
"RTN","SCMCPST",22,0)
EXTCHK() ;environment check
"RTN","SCMCPST",23,0)
 D MESS(">>> Checking Package Environment","!!")
"RTN","SCMCPST",24,0)
 N SCOK
"RTN","SCMCPST",25,0)
 S (SCOK,SCUSR)=1
"RTN","SCMCPST",26,0)
 S:'$$GLOBCHK SCOK=0
"RTN","SCMCPST",27,0)
QTEXT D:'SCOK MESS("Problem with Environment Checker.  Post-init aborted")
"RTN","SCMCPST",28,0)
 Q SCOK
"RTN","SCMCPST",29,0)
 ;
"RTN","SCMCPST",30,0)
DEFAULT() ;setup system defaults
"RTN","SCMCPST",31,0)
 N DR,DA,DIE,X,Y,SCOK
"RTN","SCMCPST",32,0)
 S SCOK=1
"RTN","SCMCPST",33,0)
 D MESS(">>> Setting Default System Settings","!!")
"RTN","SCMCPST",34,0)
 D MESS(">>> SCHEDULING PARAMETER FILE (#404.91)","!?4")
"RTN","SCMCPST",35,0)
 IF '$D(^SD(404.91,1,0))#2 D
"RTN","SCMCPST",36,0)
 .K ^SD(404.91,1)
"RTN","SCMCPST",37,0)
 .K DO,DD
"RTN","SCMCPST",38,0)
 .S DIC="^SD(404.91,"
"RTN","SCMCPST",39,0)
 .S DIC(0)="L"
"RTN","SCMCPST",40,0)
 .S X=1
"RTN","SCMCPST",41,0)
 .D FILE^DICN
"RTN","SCMCPST",42,0)
 D MESS("'USE USR CLASS FUNCTIONALITY?' Field(#801)","!?8")
"RTN","SCMCPST",43,0)
 IF $G(SCUSR) D
"RTN","SCMCPST",44,0)
 .IF $P($G(^SD(404.91,1,"PCMM")),U,1)="" D
"RTN","SCMCPST",45,0)
 ..S DR="801////1;802////1",DA=1,DIE="^SD(404.91," D ^DIE
"RTN","SCMCPST",46,0)
 ..D MESS("...Set to 'YES'","?50")
"RTN","SCMCPST",47,0)
 .ELSE  D
"RTN","SCMCPST",48,0)
 ..D MESS("...Already set - No change","?50")
"RTN","SCMCPST",49,0)
 ELSE  D
"RTN","SCMCPST",50,0)
 .D MESS("...Needs TIU to be set","?50")
"RTN","SCMCPST",51,0)
 .S DR="802////1",DA=1,DIE="^SD(404.91," D ^DIE
"RTN","SCMCPST",52,0)
 Q SCOK
"RTN","SCMCPST",53,0)
GLOBCHK() ;
"RTN","SCMCPST",54,0)
 N SCOK
"RTN","SCMCPST",55,0)
 S SCOK=1
"RTN","SCMCPST",56,0)
 D MESS(">>> Checking Globals:","!?4")
"RTN","SCMCPST",57,0)
 F SCX=1:1 S SCGLOB=$P($T(GLOB+SCX),";;",2) Q:'$L(SCGLOB)  D
"RTN","SCMCPST",58,0)
 .S SCARR=$P(SCGLOB,"(",1)
"RTN","SCMCPST",59,0)
 .S SCSUB=$P($P(SCGLOB,"(",2),U,1)
"RTN","SCMCPST",60,0)
 .S SCVAR=$P(SCGLOB,U,3)
"RTN","SCMCPST",61,0)
 .D MESS($P(SCARR_"("_SCSUB,U,2),"!?8")
"RTN","SCMCPST",62,0)
 .IF '$D(@SCARR@(SCSUB)) D
"RTN","SCMCPST",63,0)
 ..D MESS(" ...Missing","?50")
"RTN","SCMCPST",64,0)
 ..S @SCVAR=0
"RTN","SCMCPST",65,0)
 .ELSE  D
"RTN","SCMCPST",66,0)
 ..D MESS(" ...Present","?50")
"RTN","SCMCPST",67,0)
QTGLOB D:'SCOK MESS("Problem with Globals checking")
"RTN","SCMCPST",68,0)
 Q SCOK
"RTN","SCMCPST",69,0)
 ;
"RTN","SCMCPST",70,0)
OKCLEAN() ;
"RTN","SCMCPST",71,0)
 D MESS(">>> Cleaning up ^TMP(""SCMC,$J,"" global","!!")
"RTN","SCMCPST",72,0)
 N SCOK
"RTN","SCMCPST",73,0)
 S SCOK=1
"RTN","SCMCPST",74,0)
 K ^TMP("SCMC",$J)
"RTN","SCMCPST",75,0)
 Q SCOK
"RTN","SCMCPST",76,0)
 ;
"RTN","SCMCPST",77,0)
ABORT ;
"RTN","SCMCPST",78,0)
 D MESS("After correcting the above mentioned problem(s), you should")
"RTN","SCMCPST",79,0)
 D MESS("re-run the PCMM post-init routine by entering the following")
"RTN","SCMCPST",80,0)
 D MESS("command at the programmer's prompt:")
"RTN","SCMCPST",81,0)
 D MESS("     D EN^SCMCPST")
"RTN","SCMCPST",82,0)
 D MESS("")
"RTN","SCMCPST",83,0)
 D MESS("Prior to users making team, position, or staff assignments,")
"RTN","SCMCPST",84,0)
 D MESS("the post-init may be re-run without any harm.")
"RTN","SCMCPST",85,0)
 Q
"RTN","SCMCPST",86,0)
 ;
"RTN","SCMCPST",87,0)
MESS(TEXT,FORMAT) ;
"RTN","SCMCPST",88,0)
 S TEXT=$G(TEXT,"")
"RTN","SCMCPST",89,0)
 S FORMAT=$G(FORMAT,"!")
"RTN","SCMCPST",90,0)
 D EN^DDIOL(TEXT,"",FORMAT)
"RTN","SCMCPST",91,0)
 Q
"RTN","SCMCPST",92,0)
 ;
"RTN","SCMCPST",93,0)
GLOB ;
"RTN","SCMCPST",94,0)
 ;;^USR(8930.3^SCUSR
"RTN","SCMCPST",95,0)
 ;;^USR(8930^SCUSR
"RTN","SCMCPST",96,0)
 ;
"RTN","SCMCPST",97,0)
LTRRT ; - to be used later if a/s isn't distributed with pcmm
"RTN","SCMCPST",98,0)
 ;;USRPROV^1.0T7^Authorization/Subscription^^Feb 15, 1996^SCUSR
"RTN","SCMCPST",99,0)
LTRGLB ;
"RTN","SCMCRT0")
0^39^B7099379
"RTN","SCMCRT0",1,0)
SCMCRT0 ;ALB/SCK - PCM REPORT OUTPUTS ; 10/30/95
"RTN","SCMCRT0",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCRT0",3,0)
 ;;1T1; Primary Care Management
"RTN","SCMCRT0",4,0)
 ;
"RTN","SCMCRT0",5,0)
 Q
"RTN","SCMCRT0",6,0)
 ;
"RTN","SCMCRT0",7,0)
TMPRFL ;   Team Profile Report Entry point
"RTN","SCMCRT0",8,0)
 ;
"RTN","SCMCRT0",9,0)
 N SCTMS,SCPOS,SCBRK,SCTEAMS
"RTN","SCMCRT0",10,0)
 I '$$SELTM G EXIT
"RTN","SCMCRT0",11,0)
 I '$$SELPOS(SCTMS) G EXIT
"RTN","SCMCRT0",12,0)
 S SCBRK=$$PAGEBRK("Team") G:SCBRK="" EXIT
"RTN","SCMCRT0",13,0)
 IF '$$GETDEV G EXIT
"RTN","SCMCRT0",14,0)
 IF $D(IO("Q")) D QUE  G EXIT
"RTN","SCMCRT0",15,0)
 W ! D WAIT^DICD
"RTN","SCMCRT0",16,0)
 D START^SCMCRT1(SCTMS,SCPOS,.SCTEAMS,SCBRK)
"RTN","SCMCRT0",17,0)
EXIT ;
"RTN","SCMCRT0",18,0)
 D:'$D(ZTQUEUED) ^%ZISC
"RTN","SCMCRT0",19,0)
 K ^TMP("PCMTP",$J)
"RTN","SCMCRT0",20,0)
 Q
"RTN","SCMCRT0",21,0)
 ;
"RTN","SCMCRT0",22,0)
SELTM() ;
"RTN","SCMCRT0",23,0)
 N SCOK
"RTN","SCMCRT0",24,0)
 S SCOK=1
"RTN","SCMCRT0",25,0)
 W !!,$$LINE("Team Selection")
"RTN","SCMCRT0",26,0)
 I '$$TMS S SCOK=0 G SELTMQ
"RTN","SCMCRT0",27,0)
 IF SCTMS="S" S SCTMS=10 D  G:'SCOK SELTMQ
"RTN","SCMCRT0",28,0)
 . S DIC="^SCTM(404.51,",VAUTSTR="Team",VAUTVB="SCTEAMS",VAUTNI=2
"RTN","SCMCRT0",29,0)
 . D FIRST^VAUTOMA
"RTN","SCMCRT0",30,0)
 . I Y<0 K SCTMS S SCOK=0
"RTN","SCMCRT0",31,0)
 S:SCTMS="A" SCTMS=1
"RTN","SCMCRT0",32,0)
 S:SCTMS="I" SCTMS=0
"RTN","SCMCRT0",33,0)
 ;
"RTN","SCMCRT0",34,0)
SELTMQ Q SCOK
"RTN","SCMCRT0",35,0)
 ;
"RTN","SCMCRT0",36,0)
SELPOS(SCTMS) ;
"RTN","SCMCRT0",37,0)
 N SCOK
"RTN","SCMCRT0",38,0)
 S SCOK=1
"RTN","SCMCRT0",39,0)
 IF SCTMS=0 S SCPOS=-1  G SELPSQ
"RTN","SCMCRT0",40,0)
 ;
"RTN","SCMCRT0",41,0)
 W !!,$$LINE("Position Selection")
"RTN","SCMCRT0",42,0)
 S DIR(0)="S^A:Active Positions;I:Inactive Positions;P:All Positions"
"RTN","SCMCRT0",43,0)
 S DIR("A")="Positons: ",DIR("B")="A"
"RTN","SCMCRT0",44,0)
 D ^DIR
"RTN","SCMCRT0",45,0)
 I $D(DIRUT) S SCOK=0 G SELPSQ
"RTN","SCMCRT0",46,0)
 S:Y="A" SCPOS=1
"RTN","SCMCRT0",47,0)
 S:Y="I" SCPOS=0
"RTN","SCMCRT0",48,0)
 S:Y="P" SCPOS=-1
"RTN","SCMCRT0",49,0)
SELPSQ Q SCOK
"RTN","SCMCRT0",50,0)
 ;
"RTN","SCMCRT0",51,0)
GETDEV() ;
"RTN","SCMCRT0",52,0)
 N SCOK
"RTN","SCMCRT0",53,0)
 S SCOK=0
"RTN","SCMCRT0",54,0)
 W !!,"This report is formatted for standard letter size output",!
"RTN","SCMCRT0",55,0)
 S %ZIS="PMQ" D ^%ZIS  G DEVQ:POP
"RTN","SCMCRT0",56,0)
 S SCOK=1
"RTN","SCMCRT0",57,0)
DEVQ Q (SCOK)
"RTN","SCMCRT0",58,0)
 ;
"RTN","SCMCRT0",59,0)
TMS() ;
"RTN","SCMCRT0",60,0)
 N SCOK
"RTN","SCMCRT0",61,0)
 S SCOK=1
"RTN","SCMCRT0",62,0)
 S DIR(0)="S^A:Active Teams;I:Inactive Teams;S:Select Teams"
"RTN","SCMCRT0",63,0)
 S DIR("A")="Teams: ",DIR("B")="A"
"RTN","SCMCRT0",64,0)
 D ^DIR
"RTN","SCMCRT0",65,0)
 S SCTMS=Y
"RTN","SCMCRT0",66,0)
 I $D(DIRUT) S SCOK=0
"RTN","SCMCRT0",67,0)
TMSQ Q SCOK
"RTN","SCMCRT0",68,0)
 ;
"RTN","SCMCRT0",69,0)
LINE(STR) ;
"RTN","SCMCRT0",70,0)
 N X
"RTN","SCMCRT0",71,0)
 S:STR]"" STR=" "_STR_" "
"RTN","SCMCRT0",72,0)
 S $P(X,"_",(IOM/2)-($L(STR)/2))=""
"RTN","SCMCRT0",73,0)
 Q X_STR_X
"RTN","SCMCRT0",74,0)
 ;
"RTN","SCMCRT0",75,0)
PAGEBRK(STR) ;
"RTN","SCMCRT0",76,0)
 N X
"RTN","SCMCRT0",77,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","SCMCRT0",78,0)
 S DIR("A")="Do you want a page break as the "_STR_" changes?"
"RTN","SCMCRT0",79,0)
 D ^DIR
"RTN","SCMCRT0",80,0)
 I $D(DIRUT) S Y=""
"RTN","SCMCRT0",81,0)
 Q Y
"RTN","SCMCRT0",82,0)
 ;
"RTN","SCMCRT0",83,0)
QUE ;
"RTN","SCMCRT0",84,0)
 S ZTRTN="QSTART^SCMCRT1",ZTDESC="TEAM PROFILE REPORT"
"RTN","SCMCRT0",85,0)
 F X="SCTMS","SCPOS","SCTEAMS(","SCBRK" S ZTSAVE(X)=""
"RTN","SCMCRT0",86,0)
 D ^%ZTLOAD W:$D(ZTSK) !,"TASK #",ZTSK
"RTN","SCMCRT0",87,0)
 D HOME^%ZIS K IO("Q")
"RTN","SCMCRT0",88,0)
 Q
"RTN","SCMCRT1")
0^40^B10764247
"RTN","SCMCRT1",1,0)
SCMCRT1 ;ALB/SCK - TEAM PROFILE REPORT ; 10/30/95
"RTN","SCMCRT1",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCRT1",3,0)
 ;;1T1;Primary Care Management Module
"RTN","SCMCRT1",4,0)
 ;
"RTN","SCMCRT1",5,0)
 ;  Routine for collecting Team information for the 
"RTN","SCMCRT1",6,0)
 ;  Team Profile report
"RTN","SCMCRT1",7,0)
 ;
"RTN","SCMCRT1",8,0)
START(SCTS,SCPS,SCTEAMS,SCBRK) ;
"RTN","SCMCRT1",9,0)
 ;  SCTS  = Team Status
"RTN","SCMCRT1",10,0)
 ;  SCPS = Positon status
"RTN","SCMCRT1",11,0)
 ;  SCBRK  = Page break as team changes
"RTN","SCMCRT1",12,0)
 ;  
"RTN","SCMCRT1",13,0)
 ;   Status values:
"RTN","SCMCRT1",14,0)
 ;        1   Show active only
"RTN","SCMCRT1",15,0)
 ;        0   Show inactive only
"RTN","SCMCRT1",16,0)
 ;       -1   Show all
"RTN","SCMCRT1",17,0)
 ;       10   Selected Teams
"RTN","SCMCRT1",18,0)
 ;
"RTN","SCMCRT1",19,0)
 ;  SCTEAMS = List of teams to print
"RTN","SCMCRT1",20,0)
 ;   
"RTN","SCMCRT1",21,0)
 N SCTM,SCTMIEN,SCI,SCDTRNG,SCERMSG,SCRTN
"RTN","SCMCRT1",22,0)
 K ^TMP("PCMTP")
"RTN","SCMCRT1",23,0)
 S SCDTRNG=""
"RTN","SCMCRT1",24,0)
 ;
"RTN","SCMCRT1",25,0)
 IF $G(SCTS)=10,$G(SCTEAMS)=0 D  G CONT
"RTN","SCMCRT1",26,0)
 . S SCTM=""
"RTN","SCMCRT1",27,0)
 . F  S SCTM=$O(SCTEAMS(SCTM)) Q:SCTM=""  D
"RTN","SCMCRT1",28,0)
 .. D BLD(SCTM)
"RTN","SCMCRT1",29,0)
 ;
"RTN","SCMCRT1",30,0)
 S SCTM=""
"RTN","SCMCRT1",31,0)
 F  S SCTM=$O(^SCTM(404.51,"B",SCTM)) Q:SCTM=""  D
"RTN","SCMCRT1",32,0)
 . S SCTMIEN="",SCTMIEN=$O(^SCTM(404.51,"B",SCTM,SCTMIEN))
"RTN","SCMCRT1",33,0)
 . Q:'$$TEAMOK(SCTS,SCTMIEN)
"RTN","SCMCRT1",34,0)
 . D BLD(SCTMIEN)
"RTN","SCMCRT1",35,0)
 ;
"RTN","SCMCRT1",36,0)
CONT ;
"RTN","SCMCRT1",37,0)
 D TMRPT^SCMCRT1A(SCBRK)
"RTN","SCMCRT1",38,0)
 Q
"RTN","SCMCRT1",39,0)
 ;
"RTN","SCMCRT1",40,0)
TEAMOK(SCACT,SCIEN) ; function to check teams current status against
"RTN","SCMCRT1",41,0)
 ;  the requested status
"RTN","SCMCRT1",42,0)
 ;
"RTN","SCMCRT1",43,0)
 ;  SCACT - See status values above
"RTN","SCMCRT1",44,0)
 ;  SCIEN - IEN value for the team in 404.51
"RTN","SCMCRT1",45,0)
 ;
"RTN","SCMCRT1",46,0)
 ;  Returns 0 if team does not meet requested  status, 
"RTN","SCMCRT1",47,0)
 ;          1 if team does meet the requested status.
"RTN","SCMCRT1",48,0)
 ;
"RTN","SCMCRT1",49,0)
 ;
"RTN","SCMCRT1",50,0)
 N SCRTN,SCOK,SCER
"RTN","SCMCRT1",51,0)
 S SCOK=1
"RTN","SCMCRT1",52,0)
 G:SCACT<0 TEAMOKQ
"RTN","SCMCRT1",53,0)
 IF '+$$ACTHIST^SCAPMCU1(404.58,SCIEN,"SCDTRNG","SCER") S SCOK=0
"RTN","SCMCRT1",54,0)
TEAMOKQ Q (SCOK)
"RTN","SCMCRT1",55,0)
 ;
"RTN","SCMCRT1",56,0)
POSTOK(SCPACT,SCIEN) ;  function to check a positions current status against
"RTN","SCMCRT1",57,0)
 ;   against the requested status
"RTN","SCMCRT1",58,0)
 ;
"RTN","SCMCRT1",59,0)
 ;    SCPACT  - See status values above
"RTN","SCMCRT1",60,0)
 ;    SCIEN   - Ien value for the position in the 404.57 file
"RTN","SCMCRT1",61,0)
 ;
"RTN","SCMCRT1",62,0)
 ;    Returns  0 if position does not meet requested status
"RTN","SCMCRT1",63,0)
 ;             1 if position does meet the status
"RTN","SCMCRT1",64,0)
 ;
"RTN","SCMCRT1",65,0)
 N SCOK,SCER
"RTN","SCMCRT1",66,0)
 S SCOK=1
"RTN","SCMCRT1",67,0)
 G:SCPACT<0 POSTOKQ
"RTN","SCMCRT1",68,0)
 IF '+$$ACTHIST^SCAPMCU1(404.59,SCIEN,"SCDTRNG","SCER") S SCOK=0
"RTN","SCMCRT1",69,0)
POSTOKQ Q (SCOK)
"RTN","SCMCRT1",70,0)
 ;
"RTN","SCMCRT1",71,0)
BLD(SCIEN) ;  Build entry for the team profile in ^TMP("PCMTP",$J)
"RTN","SCMCRT1",72,0)
 ;
"RTN","SCMCRT1",73,0)
 ;  Team information is on the zero node.  The format is the same
"RTN","SCMCRT1",74,0)
 ;    as for the zero node in file #404.51
"RTN","SCMCRT1",75,0)
 ;
"RTN","SCMCRT1",76,0)
 ;  The team description (WP field nodes) are on the "D" node.
"RTN","SCMCRT1",77,0)
 ;  The teams positions are on individual "P" nodes, by name.
"RTN","SCMCRT1",78,0)
 ;  Format is position ien^standard role (external)^primary care^
"RTN","SCMCRT1",79,0)
 ;    max patients allowed^active status.
"RTN","SCMCRT1",80,0)
 ;
"RTN","SCMCRT1",81,0)
 N SCTNODE,II,SCPNODE,SCPIEN
"RTN","SCMCRT1",82,0)
 S SCTNODE=$G(^SCTM(404.51,SCIEN,0))
"RTN","SCMCRT1",83,0)
 Q:$D(SCTNODE)=0
"RTN","SCMCRT1",84,0)
 ;
"RTN","SCMCRT1",85,0)
 ;   Loop thru all the teams in file 404.51 and build the zero node
"RTN","SCMCRT1",86,0)
 ;   for the requested teams
"RTN","SCMCRT1",87,0)
 ;
"RTN","SCMCRT1",88,0)
 S ^TMP("PCMTP",$J,SCIEN,0)=SCTNODE
"RTN","SCMCRT1",89,0)
 IF $D(^SCTM(404.51,SCIEN,"D")) D
"RTN","SCMCRT1",90,0)
 . S II=0
"RTN","SCMCRT1",91,0)
 . F  S II=$O(^SCTM(404.51,SCIEN,"D",II)) Q:II=""  D
"RTN","SCMCRT1",92,0)
 .. S ^TMP("PCMTP",$J,SCIEN,"D",II)=$G(^SCTM(404.51,SCIEN,"D",II,0))
"RTN","SCMCRT1",93,0)
 ;
"RTN","SCMCRT1",94,0)
 ;   For each team, loop thru all the team positions, and build
"RTN","SCMCRT1",95,0)
 ;   nodes for each position that matches the requested status
"RTN","SCMCRT1",96,0)
 ;
"RTN","SCMCRT1",97,0)
 S SCPIEN=""
"RTN","SCMCRT1",98,0)
 F  S SCPIEN=$O(^SCTM(404.57,"C",SCIEN,SCPIEN)) Q:SCPIEN=""  D
"RTN","SCMCRT1",99,0)
 . Q:'$$POSTOK(SCPS,SCPIEN)
"RTN","SCMCRT1",100,0)
 . S SCPNODE=$G(^SCTM(404.57,SCPIEN,0))
"RTN","SCMCRT1",101,0)
 . S ^TMP("PCMTP",$J,SCIEN,"P",$P(SCPNODE,U))=SCPIEN_"^"_$$ROLE($P(SCPNODE,U,3))_"^"_$$CARE($P(SCPNODE,U,4))_"^"_+$P(SCPNODE,U,8)_"^"_$$ACTPOS(SCPIEN)
"RTN","SCMCRT1",102,0)
 ;
"RTN","SCMCRT1",103,0)
 IF $D(^TMP("PCMTP",$J,SCIEN,"P"))=0 S ^TMP("PCMTP",$J,SCIEN,"P","NO POSITIONS")=""
"RTN","SCMCRT1",104,0)
 Q
"RTN","SCMCRT1",105,0)
 ;
"RTN","SCMCRT1",106,0)
ACTPOS(SCIEN) ;  Returns the active status of the position for the
"RTN","SCMCRT1",107,0)
 ;  date range of the report.
"RTN","SCMCRT1",108,0)
 ;
"RTN","SCMCRT1",109,0)
 N SCSTAT,SCER
"RTN","SCMCRT1",110,0)
 S SCTAT=$$ACTHIST^SCAPMCU1(404.59,SCIEN,"SCDTRNG","SCER")
"RTN","SCMCRT1",111,0)
 Q +SCTAT
"RTN","SCMCRT1",112,0)
 ;
"RTN","SCMCRT1",113,0)
ROLE(SCIEN) ;   Returns the standard role for a position in external format
"RTN","SCMCRT1",114,0)
 ;
"RTN","SCMCRT1",115,0)
 N SCROLE
"RTN","SCMCRT1",116,0)
 S SCROLE="NO STANDARD ROLE"
"RTN","SCMCRT1",117,0)
 G:$G(SCIEN)="" ROLEQ
"RTN","SCMCRT1",118,0)
 S SCROLE=$P($G(^SD(403.46,SCIEN,0)),U)
"RTN","SCMCRT1",119,0)
ROLEQ Q SCROLE
"RTN","SCMCRT1",120,0)
 ;
"RTN","SCMCRT1",121,0)
CARE(SCC) ;  Returns Yes if the position can provide primary care, No
"RTN","SCMCRT1",122,0)
 ;  if the position cannot.
"RTN","SCMCRT1",123,0)
 ;
"RTN","SCMCRT1",124,0)
 N STAT
"RTN","SCMCRT1",125,0)
 S STAT="NO"
"RTN","SCMCRT1",126,0)
 S:SCC=1 STAT="YES"
"RTN","SCMCRT1",127,0)
CAREQ Q STAT
"RTN","SCMCRT1",128,0)
 ;
"RTN","SCMCRT1",129,0)
QSTART ;
"RTN","SCMCRT1",130,0)
 D START(SCTMS,SCPOS,.SCTEAMS,SCBRK)
"RTN","SCMCRT1",131,0)
 Q
"RTN","SCMCRT1A")
0^41^B19869507
"RTN","SCMCRT1A",1,0)
SCMCRT1A ;ALB/SCK - PCM TEAM PROFILE REPORT OUTPUT ; 10/30/95
"RTN","SCMCRT1A",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCRT1A",3,0)
 ;;1T1; Primary Care Management
"RTN","SCMCRT1A",4,0)
 ;
"RTN","SCMCRT1A",5,0)
 Q
"RTN","SCMCRT1A",6,0)
 ;
"RTN","SCMCRT1A",7,0)
TMRPT(SCBRK) ;
"RTN","SCMCRT1A",8,0)
 N PAGE,SCTEAM,SCPOST,SCWPND,SCWP,LINECNT
"RTN","SCMCRT1A",9,0)
 I '$D(^TMP("PCMTP",$J)) D NOREP G EXIT
"RTN","SCMCRT1A",10,0)
 U IO
"RTN","SCMCRT1A",11,0)
 S (PAGE,LINECNT,END)=0
"RTN","SCMCRT1A",12,0)
 ;D HDR Q:END
"RTN","SCMCRT1A",13,0)
 ;
"RTN","SCMCRT1A",14,0)
 S SCTEAM=""
"RTN","SCMCRT1A",15,0)
 F  S SCTEAM=$O(^TMP("PCMTP",$J,SCTEAM)) Q:SCTEAM=""  D:+SCBRK NEWPAGE  D  G:END EXIT
"RTN","SCMCRT1A",16,0)
 . N SCWPND
"RTN","SCMCRT1A",17,0)
 . D PRINT1(^TMP("PCMTP",$J,SCTEAM,0))
"RTN","SCMCRT1A",18,0)
 . S SCWP="",SCWPND=""
"RTN","SCMCRT1A",19,0)
 . F  S SCWP=$O(^TMP("PCMTP",$J,SCTEAM,"D",SCWP)) Q:SCWP=""  D  Q:END
"RTN","SCMCRT1A",20,0)
 .. S SCWPND(SCWP)=^TMP("PCMTP",$J,SCTEAM,"D",SCWP)
"RTN","SCMCRT1A",21,0)
 . IF $D(SCWPND) D PRINTW(.SCWPND)
"RTN","SCMCRT1A",22,0)
 . D PRINT2(SCTEAM,^TMP("PCMTP",$J,SCTEAM,0))
"RTN","SCMCRT1A",23,0)
 . S SCPOST=""
"RTN","SCMCRT1A",24,0)
 . D PRINTCP Q:END
"RTN","SCMCRT1A",25,0)
 . F  S SCPOST=$O(^TMP("PCMTP",$J,SCTEAM,"P",SCPOST)) Q:SCPOST=""  D  Q:END
"RTN","SCMCRT1A",26,0)
 .. D PRINTP(SCPOST,^TMP("PCMTP",$J,SCTEAM,"P",SCPOST))
"RTN","SCMCRT1A",27,0)
 . W !!
"RTN","SCMCRT1A",28,0)
 ;
"RTN","SCMCRT1A",29,0)
EXIT ;
"RTN","SCMCRT1A",30,0)
 D ^%ZISC
"RTN","SCMCRT1A",31,0)
 Q
"RTN","SCMCRT1A",32,0)
 ;
"RTN","SCMCRT1A",33,0)
PRINT1(SCNODE) ;
"RTN","SCMCRT1A",34,0)
 N X,X1
"RTN","SCMCRT1A",35,0)
 I $Y+5>IOSL D HDR Q:END
"RTN","SCMCRT1A",36,0)
 N SCSERV
"RTN","SCMCRT1A",37,0)
 S SCSERV=$P($G(SCNODE),U,6)
"RTN","SCMCRT1A",38,0)
 S X=$$SPACE(5)_"Team Name: "_$P($G(SCNODE),U)
"RTN","SCMCRT1A",39,0)
 S X=X_$$SPACE(45-$L(X))_"Service/Section: "_$E($P($G(^DIC(49,SCSERV,0)),U),1,20)
"RTN","SCMCRT1A",40,0)
 W !,X
"RTN","SCMCRT1A",41,0)
 ;
"RTN","SCMCRT1A",42,0)
 S X=$$SPACE(5)_"Team Telephone: "_$P($G(SCNODE),U,2)
"RTN","SCMCRT1A",43,0)
 W !,X
"RTN","SCMCRT1A",44,0)
 Q
"RTN","SCMCRT1A",45,0)
 ;
"RTN","SCMCRT1A",46,0)
PRINTCP ;
"RTN","SCMCRT1A",47,0)
 I $Y+8>IOSL D HDR Q:END
"RTN","SCMCRT1A",48,0)
 S X=$$SPACE(56)_"Provides     Patients"
"RTN","SCMCRT1A",49,0)
 W !,X
"RTN","SCMCRT1A",50,0)
 S X=$$SPACE(5)_"Position"_$$SPACE(19)_"Standard Role"_$$SPACE(13)_"Care"_$$SPACE(10)_"Allowed"
"RTN","SCMCRT1A",51,0)
 W !,X
"RTN","SCMCRT1A",52,0)
 S X=$$SPACE(5)_"--------"_$$SPACE(19)_"-------------"_$$SPACE(13)_"--------"_$$SPACE(6)_"-------"
"RTN","SCMCRT1A",53,0)
 W !,X
"RTN","SCMCRT1A",54,0)
 Q
"RTN","SCMCRT1A",55,0)
 ;
"RTN","SCMCRT1A",56,0)
PRINT2(SCIEN,SCNODE) ;
"RTN","SCMCRT1A",57,0)
 N X
"RTN","SCMCRT1A",58,0)
 I $Y+8>IOSL D HDR Q:END
"RTN","SCMCRT1A",59,0)
 N SCPRP,SCMAX,SCINST
"RTN","SCMCRT1A",60,0)
 S SCPRP=$P($G(SCNODE),U,3)
"RTN","SCMCRT1A",61,0)
 S SCMAX=$P($G(SCNODE),U,8)
"RTN","SCMCRT1A",62,0)
 S SCINST=$P($G(SCNODE),U,7)
"RTN","SCMCRT1A",63,0)
 S X=$$SPACE(5)_"Team Settings:"
"RTN","SCMCRT1A",64,0)
 W !!,X
"RTN","SCMCRT1A",65,0)
 ;
"RTN","SCMCRT1A",66,0)
 S X=$$SPACE(6)_"Status: "_$S(+$$ACTHISTB^SCAPMCU2(404.58,SCIEN)=1:"ACTIVE",1:"INACTIVE")
"RTN","SCMCRT1A",67,0)
 S X=X_$$SPACE(45-$L(X))_"Purpose: "_$E($P($G(^SD(403.47,SCPRP,0)),U),1,20)
"RTN","SCMCRT1A",68,0)
 W !,X
"RTN","SCMCRT1A",69,0)
 ;
"RTN","SCMCRT1A",70,0)
 S X=$$SPACE(6)_"Maximum Patients: "_$S(SCMAX]"":SCMAX,1:0)
"RTN","SCMCRT1A",71,0)
 S X=X_$$SPACE(45-$L(X))_"Institution: "_$E($P($G(^DIC(4,SCINST,0)),U),1,20)
"RTN","SCMCRT1A",72,0)
 W !,X
"RTN","SCMCRT1A",73,0)
 ;
"RTN","SCMCRT1A",74,0)
 S X=$$SPACE(5)_$S($P($G(SCNODE),U,5)=1:"This team can provide primary care.",1:"This is not a primary care team")
"RTN","SCMCRT1A",75,0)
 W !!,X
"RTN","SCMCRT1A",76,0)
 ;
"RTN","SCMCRT1A",77,0)
 S X=$$SPACE(5)_$S($P($G(SCNODE),U,10)=1:"This team is closed to further patients.",1:"This team is still accepting patients.")
"RTN","SCMCRT1A",78,0)
 W !,X
"RTN","SCMCRT1A",79,0)
 Q
"RTN","SCMCRT1A",80,0)
 ;
"RTN","SCMCRT1A",81,0)
PRINTW(SCDES) ;
"RTN","SCMCRT1A",82,0)
 N NC,DIWL,DIWR,DIWF,WP
"RTN","SCMCRT1A",83,0)
 I $Y+5>IOSL D HDR Q:END
"RTN","SCMCRT1A",84,0)
 K ^UTILITY($J,"W")
"RTN","SCMCRT1A",85,0)
 S WP=$$SPACE(5)_"Team Description:"
"RTN","SCMCRT1A",86,0)
 W !!,WP
"RTN","SCMCRT1A",87,0)
 S DIWL=10,DIWR=80,DIWF="C60"
"RTN","SCMCRT1A",88,0)
 S NC=""
"RTN","SCMCRT1A",89,0)
 F  S NC=$O(SCDES(NC)) Q:NC=""  D  D ^DIWW
"RTN","SCMCRT1A",90,0)
 . S X=SCDES(NC)
"RTN","SCMCRT1A",91,0)
 . D ^DIWP
"RTN","SCMCRT1A",92,0)
 ;
"RTN","SCMCRT1A",93,0)
 S X=""
"RTN","SCMCRT1A",94,0)
 F  S X=$O(^UTILITY($J,"W",DIWL,X)) Q:X=""  D
"RTN","SCMCRT1A",95,0)
 . S WP=$$SPACE(5)_^UTILTIY($J,"W",DIWL,1,0)
"RTN","SCMCRT1A",96,0)
 . W !,WP
"RTN","SCMCRT1A",97,0)
 W !
"RTN","SCMCRT1A",98,0)
 K ^UTILITY($J,"W")
"RTN","SCMCRT1A",99,0)
 Q
"RTN","SCMCRT1A",100,0)
 ;
"RTN","SCMCRT1A",101,0)
PRINTP(SCPOS,SCPNODE) ;
"RTN","SCMCRT1A",102,0)
 N X
"RTN","SCMCRT1A",103,0)
 I $Y+5>IOSL D HDR Q:END
"RTN","SCMCRT1A",104,0)
 S X=$$SPACE(4)_$S($P(SCPNODE,U,5)=1:">",1:" ")_$E(SCPOS,1,28)
"RTN","SCMCRT1A",105,0)
 S X=X_$$SPACE(31-$L(X))_$E($P(SCPNODE,U,2),1,25)
"RTN","SCMCRT1A",106,0)
 S X=X_$$SPACE(56-$L(X))_$P(SCPNODE,U,3)
"RTN","SCMCRT1A",107,0)
 S X=X_$$SPACE(70-$L(X))_$P(SCPNODE,U,4)
"RTN","SCMCRT1A",108,0)
 W !,X
"RTN","SCMCRT1A",109,0)
 Q
"RTN","SCMCRT1A",110,0)
 ;
"RTN","SCMCRT1A",111,0)
NOREP ;
"RTN","SCMCRT1A",112,0)
 W !!,"No Information for the Team Profile report"
"RTN","SCMCRT1A",113,0)
 Q
"RTN","SCMCRT1A",114,0)
 ;
"RTN","SCMCRT1A",115,0)
RPTHDR ;
"RTN","SCMCRT1A",116,0)
 S X=$$SPACE(5)_"Primary Care Management Team Profile Report"
"RTN","SCMCRT1A",117,0)
 W !,X
"RTN","SCMCRT1A",118,0)
 S X=$$SPACE(5)_"Report Date: "_$P($$NOW^VALM1,"@")
"RTN","SCMCRT1A",119,0)
 S X=X_$$SPACE(70-$L(X))_"Page: "_PAGE
"RTN","SCMCRT1A",120,0)
 W !,X,!!
"RTN","SCMCRT1A",121,0)
 Q
"RTN","SCMCRT1A",122,0)
 ;
"RTN","SCMCRT1A",123,0)
HDR ;
"RTN","SCMCRT1A",124,0)
 IF $E(IOST,1,2)="C-" W !,"Press RETURN to continue or '^' to exit: " R X:DTIME S END='$T!(X="^")  Q:END
"RTN","SCMCRT1A",125,0)
 ;
"RTN","SCMCRT1A",126,0)
HDR1 W:'($E(IOST,1,2)'="C-"&'PAGE) @IOF
"RTN","SCMCRT1A",127,0)
HDR2 S PAGE=PAGE+1
"RTN","SCMCRT1A",128,0)
 D RPTHDR
"RTN","SCMCRT1A",129,0)
 Q
"RTN","SCMCRT1A",130,0)
 ;
"RTN","SCMCRT1A",131,0)
LINE() ;
"RTN","SCMCRT1A",132,0)
 N X
"RTN","SCMCRT1A",133,0)
 S $P(X,"=",80)=""
"RTN","SCMCRT1A",134,0)
 Q X
"RTN","SCMCRT1A",135,0)
 ;
"RTN","SCMCRT1A",136,0)
SPACE(SCNUM) ;
"RTN","SCMCRT1A",137,0)
 N X
"RTN","SCMCRT1A",138,0)
 S $P(X," ",SCNUM)=""
"RTN","SCMCRT1A",139,0)
 Q X
"RTN","SCMCRT1A",140,0)
 ;
"RTN","SCMCRT1A",141,0)
WRITE(DEV,STR) ;
"RTN","SCMCRT1A",142,0)
 W @STR
"RTN","SCMCRT1A",143,0)
 Q
"RTN","SCMCRT1A",144,0)
 ;
"RTN","SCMCRT1A",145,0)
NEWPAGE ;
"RTN","SCMCRT1A",146,0)
 W @IOF
"RTN","SCMCRT1A",147,0)
 D HDR2
"RTN","SCMCRT1A",148,0)
 Q
"RTN","SCMCRU")
0^96^B2460904
"RTN","SCMCRU",1,0)
SCMCRU ;ALB/REW - PCMM Report Utilities ; 9 Feb 1996
"RTN","SCMCRU",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCRU",3,0)
 ;FORM FEED & STOPPING UTILITIES
"RTN","SCMCRU",4,0)
FIRST() ;First heading of report
"RTN","SCMCRU",5,0)
 ; RETURNS STOP; 0=GO,1=STOP
"RTN","SCMCRU",6,0)
 N STOP
"RTN","SCMCRU",7,0)
 D STOPCHK
"RTN","SCMCRU",8,0)
 D:$G(STOP) STOPPED
"RTN","SCMCRU",9,0)
 I '$G(STOP),$E($G(IOST),1,2)="C-" W @IOF
"RTN","SCMCRU",10,0)
 Q $G(STOP)
"RTN","SCMCRU",11,0)
 ;
"RTN","SCMCRU",12,0)
SUBSEQ() ;enter for further headings of report
"RTN","SCMCRU",13,0)
 ; RETURNS STOP; 0=GO,1=STOP
"RTN","SCMCRU",14,0)
 N STOP,DIR,X,Y
"RTN","SCMCRU",15,0)
 D STOPCHK
"RTN","SCMCRU",16,0)
 I $E($G(IOST),1,2)="C-" S DIR(0)="E" D ^DIR S:$D(DIRUT) STOP=1
"RTN","SCMCRU",17,0)
 D:$G(STOP) STOPPED
"RTN","SCMCRU",18,0)
 I '$G(STOP) W @IOF
"RTN","SCMCRU",19,0)
 Q $G(STOP)
"RTN","SCMCRU",20,0)
 ;
"RTN","SCMCRU",21,0)
STOPCHK I $D(ZTQUEUED),$$S^%ZTLOAD S (ZTSTOP,STOP)=1
"RTN","SCMCRU",22,0)
 Q
"RTN","SCMCRU",23,0)
STOPPED ;
"RTN","SCMCRU",24,0)
 W !?5,"------------- Report stopped at user's request ------------"
"RTN","SCMCRU",25,0)
 K ZTREQ
"RTN","SCMCRU",26,0)
 Q
"RTN","SCMCRU",27,0)
ENDREP I $E(IOST,1,2)'["C-" W:$Y&'$D(IONOFF) @IOF Q
"RTN","SCMCRU",28,0)
 ;
"RTN","SCMCRU",29,0)
FOOTER ;
"RTN","SCMCRU",30,0)
 ;    print SCFOOT
"RTN","SCMCRU",31,0)
 ;RETURNS SCSTOP=1 IF STOP CALLED FOR
"RTN","SCMCRU",32,0)
 S SCPAGE=$G(SCPAGE)+1
"RTN","SCMCRU",33,0)
 F I=$Y:1:$S($D(IOSL):(IOSL-5),1:61) W !
"RTN","SCMCRU",34,0)
 W !,$G(SCFOOT),?66,"PAGE: ",SCPAGE
"RTN","SCMCRU",35,0)
 S SCSTOP=$$SUBSEQ
"RTN","SCMCRU",36,0)
 I SCSTOP D STOPPED
"RTN","SCMCRU",37,0)
 Q
"RTN","SCMCRU",38,0)
HEADER ;
"RTN","SCMCRU",39,0)
 ;  prints SCHEAD
"RTN","SCMCRU",40,0)
 W !,$G(SCHEAD)
"RTN","SCMCRU",41,0)
 Q
"RTN","SCMCRU",42,0)
WAIT I $E(IOST)="C" S DIR(0)="E" D ^DIR S:'Y SCSTOP=1
"RTN","SCMCRU",43,0)
 Q
"RTN","SCMCRU",44,0)
 ;
"RTN","SCMCRU",45,0)
OUT(LINE,FORMAT) ;
"RTN","SCMCRU",46,0)
 W:$D(FORMAT) @FORMAT
"RTN","SCMCRU",47,0)
 W $G(LINE)
"RTN","SCMCRU",48,0)
 I $Y>(IOSL-4) D FOOTER D HEADER
"RTN","SCMCRU",49,0)
QTOUT Q
"RTN","SCMCRU",50,0)
 ;
"RTN","SCMCRU",51,0)
DDNAME(FILE,FIELD) ;return the fieldname
"RTN","SCMCRU",52,0)
 N SCX
"RTN","SCMCRU",53,0)
 D FIELD^DID(FILE,FIELD,"","LABEL","SCX")
"RTN","SCMCRU",54,0)
 Q $G(SCX("LABEL"))
"RTN","SCMCRU",55,0)
 ;
"RTN","SCMCTMM")
0^128^B37965615
"RTN","SCMCTMM",1,0)
SCMCTMM ;ALB/REW - Patient Team Changes MailMessages ; 26 Mar 1996
"RTN","SCMCTMM",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCTMM",3,0)
 ;1
"RTN","SCMCTMM",4,0)
MAIL ;Do Patient Team Changes MailMan Message
"RTN","SCMCTMM",5,0)
 ; - called by SCMC PT TEAM CHANGES MAIL MESSAGE protocol
"RTN","SCMCTMM",6,0)
 G:$G(SCNOMAIL) END  ;- flag can be set to stop message generation
"RTN","SCMCTMM",7,0)
 N XMDUZ,XMY,XMSUB,XMTEXT,VA,VAERR,XMZ,Y,SCX
"RTN","SCMCTMM",8,0)
 N SCTMAR,SCSTAT,DFN,SCNODE,SCY,SCSPACE,SCPAD,SCPHONE,SCB,SCE,SCB2,SCE2,SCTMDT,SCTMXM,SCPTNM,SCLNCNT
"RTN","SCMCTMM",9,0)
 S $P(SCSPACE," ",80)=""
"RTN","SCMCTMM",10,0)
 ;   SCTMAR - ARRAY OF TEAMS (before & after)
"RTN","SCMCTMM",11,0)
 S:SCTMB4 SCTMAR(SCTMB4)=""
"RTN","SCMCTMM",12,0)
 S:SCTMAF SCTMAR(SCTMAF)=""
"RTN","SCMCTMM",13,0)
 IF 'SCTMAF D
"RTN","SCMCTMM",14,0)
 .S SCSTAT="DELETED",SCB=$P(SCTMB4,U,2),SCE=$S($P(SCPTTMB4,U,9):$P(SCPTTMB4,U,9),1:DT)
"RTN","SCMCTMM",15,0)
 IF 'SCTMB4 D
"RTN","SCMCTMM",16,0)
 .S SCSTAT="NEW",SCB=$P(SCTMAF,U,2),SCE=$S($P(SCPTTMAF,U,9):$P(SCPTTMAF,U,9),1:DT)
"RTN","SCMCTMM",17,0)
 IF SCTMB4&SCTMAF D
"RTN","SCMCTMM",18,0)
 .S SCSTAT="CHANGED"
"RTN","SCMCTMM",19,0)
 .S SCB=$P(SCTMB4,U,2),SCE=$S($P(SCPTTMB4,U,9):$P(SCPTTMB4,U,9),1:DT)
"RTN","SCMCTMM",20,0)
 .S SCB2=$P(SCTMAF,U,2),SCE2=$S($P(SCPTTMAF,U,9):$P(SCPTTMAF,U,9),1:DT)
"RTN","SCMCTMM",21,0)
 .S SCTMDT("BEGIN")=$S(SCB<SCB2:SCB,1:SCB2)
"RTN","SCMCTMM",22,0)
 .S SCTMDT("END")=$S(SCE>SCE2:SCE,1:SCE2)
"RTN","SCMCTMM",23,0)
 .S SCTMDT("INCL")=0
"RTN","SCMCTMM",24,0)
 IF SCSTAT="NEW"!(SCSTAT="DELETED") D
"RTN","SCMCTMM",25,0)
 .S SCTMDT("BEGIN")=SCB
"RTN","SCMCTMM",26,0)
 .S SCTMDT("END")=SCE
"RTN","SCMCTMM",27,0)
 .S SCTMDT("INCL")=0
"RTN","SCMCTMM",28,0)
 S DFN=$S(SCSTAT="DELETED":+SCPTTMB4,1:+SCPTTMAF)
"RTN","SCMCTMM",29,0)
 ;set xmy array for practitioners in positions receiving tmchg notices
"RTN","SCMCTMM",30,0)
 G:'$$PCMMXMY^SCAPMC25(3,DFN,"SCTMAR","SCTMDT",0) END
"RTN","SCMCTMM",31,0)
 D EN^DDIOL("Sending "_SCSTAT_" Patient-Team Assignment Message")
"RTN","SCMCTMM",32,0)
 D PID^VADPT6
"RTN","SCMCTMM",33,0)
 S SCPTNM=$P(^DPT(DFN,0),U,1)
"RTN","SCMCTMM",34,0)
 S XMSUB=SCSTAT_" PATIENT-TEAM ASSIGNMENT for "_SCPTNM_" ("_VA("PID")_")",XMTEXT="^TMP($J,""SCTMXM"",",SCLNCNT=0
"RTN","SCMCTMM",35,0)
 IF SCSTAT="NEW" D
"RTN","SCMCTMM",36,0)
 .D SETLN("Current Patient Team Data:")
"RTN","SCMCTMM",37,0)
 .D SETLN("==========================")
"RTN","SCMCTMM",38,0)
 .F SCX=1:1:14 D
"RTN","SCMCTMM",39,0)
 ..D SETLN($$TEXT(404.42,SCPTTMAF,SCX,SCSPACE,1))
"RTN","SCMCTMM",40,0)
 IF SCSTAT="DELETED" D
"RTN","SCMCTMM",41,0)
 .D SETLN("Previous Patient Team Data:")
"RTN","SCMCTMM",42,0)
 .D SETLN("===========================")
"RTN","SCMCTMM",43,0)
 .F SCX=1:1:14 S SCFLD=SCX*.01 D
"RTN","SCMCTMM",44,0)
 ..D SETLN($$TEXT(404.42,SCPTTMB4,SCX,SCSPACE,1))
"RTN","SCMCTMM",45,0)
 IF SCSTAT="CHANGED" D
"RTN","SCMCTMM",46,0)
 .D SETLN("Fields: "_$E(SCSPACE,1,15)_"Previous Data:             Current Patient Data:")
"RTN","SCMCTMM",47,0)
 .D SETLN("=======================================================================")
"RTN","SCMCTMM",48,0)
 .F SCX=1:1:14 S SCFLD=SCX*.01 D
"RTN","SCMCTMM",49,0)
 ..N SCLAB2,SCY,SCZ
"RTN","SCMCTMM",50,0)
 ..S SCY=$$TEXT(404.42,SCPTTMB4,SCX,SCSPACE,1)
"RTN","SCMCTMM",51,0)
 ..S:'$L(SCY) SCLAB2=2
"RTN","SCMCTMM",52,0)
 ..S SCZ=$$TEXT(404.42,SCPTTMAF,SCX,SCSPACE,+$G(SCLAB2))
"RTN","SCMCTMM",53,0)
 ..D:$L(SCY)!($L(SCZ)) SETLN(SCY_$E(SCSPACE,1,(50-$L(SCY)))_SCZ)
"RTN","SCMCTMM",54,0)
 S SCLNCNT=$$PCMAIL^SCMCMM(DFN,"^TMP($J,""SCTMXM"")",DT)
"RTN","SCMCTMM",55,0)
 S XMDUZ=$G(DUZ,.5)
"RTN","SCMCTMM",56,0)
 S XMY(XMDUZ)=""
"RTN","SCMCTMM",57,0)
 D ^XMD
"RTN","SCMCTMM",58,0)
END K ^TMP($J,"SCTMXM")
"RTN","SCMCTMM",59,0)
 Q
"RTN","SCMCTMM",60,0)
 ;
"RTN","SCMCTMM",61,0)
SETLN(TEXT) ;
"RTN","SCMCTMM",62,0)
 Q:$G(TEXT)=""
"RTN","SCMCTMM",63,0)
 ; increments SCLNCNT, adds text to sctmxm(sclncnt)
"RTN","SCMCTMM",64,0)
 S SCLNCNT=SCLNCNT+1
"RTN","SCMCTMM",65,0)
 S ^TMP($J,"SCTMXM",SCLNCNT)=TEXT
"RTN","SCMCTMM",66,0)
 Q
"RTN","SCMCTMM",67,0)
 ;
"RTN","SCMCTMM",68,0)
TEXT(SCFILE,SCNODE,SCPC,SCSPACE,SCLAB) ;returns fldname & external value
"RTN","SCMCTMM",69,0)
 ;returns fldname & external value
"RTN","SCMCTMM",70,0)
 ;   Note- Only works for non wp fields of standard numbering conventions
"RTN","SCMCTMM",71,0)
 ;   SCFLILE =FILENUM
"RTN","SCMCTMM",72,0)
 ;   SCNODE  = 0 NODE
"RTN","SCMCTMM",73,0)
 ;   SCPC    = piece of node
"RTN","SCMCTMM",74,0)
 ;   SCSPACE = 80 SPACES
"RTN","SCMCTMM",75,0)
 ;   SCLAB = 1 if print field name
"RTN","SCMCTMM",76,0)
 N SCX,SCINT,SCFLD
"RTN","SCMCTMM",77,0)
 S SCX=""
"RTN","SCMCTMM",78,0)
 S SCINT=$P(SCNODE,U,SCPC)
"RTN","SCMCTMM",79,0)
 G:SCINT="" QTTXT
"RTN","SCMCTMM",80,0)
 S SCFLD=SCPC*.01
"RTN","SCMCTMM",81,0)
 ;;;
"RTN","SCMCTMM",82,0)
 IF $G(SCLAB) D
"RTN","SCMCTMM",83,0)
 .S SCX=$$DDNAME(SCFILE,SCFLD)_":"
"RTN","SCMCTMM",84,0)
 .S:$G(SCLAB)=1 SCX=SCX_$E(SCSPACE,1,(23-$L(SCX)))
"RTN","SCMCTMM",85,0)
 .S:$G(SCLAB)=2 SCX=SCX_$E(SCSPACE,1,(50-$L(SCX)))
"RTN","SCMCTMM",86,0)
 S:SCINT]"" SCX=SCX_$$EXTERNAL^DILFD(SCFILE,SCFLD,"",SCINT)
"RTN","SCMCTMM",87,0)
QTTXT Q SCX
"RTN","SCMCTMM",88,0)
 ;
"RTN","SCMCTMM",89,0)
DDNAME(FILE,FIELD) ;return the fieldname
"RTN","SCMCTMM",90,0)
 N SCX
"RTN","SCMCTMM",91,0)
 D FIELD^DID(FILE,FIELD,"","LABEL","SCX")
"RTN","SCMCTMM",92,0)
 Q $G(SCX("LABEL"))
"RTN","SCMCTMM",93,0)
 ;
"RTN","SCMCTMM",94,0)
MAILLST(SCTM,SCFIELDA,SCDATE,SCNEWTM,SCOLDTM,SCBADTM) ;
"RTN","SCMCTMM",95,0)
 ; Input:
"RTN","SCMCTMM",96,0)
 ;    SCTM     - Pointer to Team File (#404.51)
"RTN","SCMCTMM",97,0)
 ;    SCFIELDA - Field array with internal values
"RTN","SCMCTMM",98,0)
 ;    SCDATE   - Effective Date
"RTN","SCMCTMM",99,0)
 ;    SCNEWTM  - DFN array of newly assigned to team
"RTN","SCMCTMM",100,0)
 ;    SCOLDTM  - DFN array of previously assigned to team
"RTN","SCMCTMM",101,0)
 ;    SCBADTM  - DFN array of patients unassignable to team
"RTN","SCMCTMM",102,0)
 ;
"RTN","SCMCTMM",103,0)
 G:$G(SCNOMAIL) QTMULT  ;- flag can be set to stop message generation
"RTN","SCMCTMM",104,0)
 G:'$D(SCNEWTM) QTMULT
"RTN","SCMCTMM",105,0)
 G:'$O(@SCNEWTM@(0)) QTMULT  ;if no new assignments
"RTN","SCMCTMM",106,0)
 N XMDUZ,XMY,XMSUB,XMTEXT,VA,VAERR,XMZ,Y
"RTN","SCMCTMM",107,0)
 N SCTMNM,DFN,SCOK,SCPTNM,SCFLD,SCNODE,SCNDX,SCSPACE,SCE,SCB,SCTMDT,SCDELTEM
"RTN","SCMCTMM",108,0)
 S SCDELTEM=1 ;ok to delete tmp global
"RTN","SCMCTMM",109,0)
 IF $D(SCFIELDA) D
"RTN","SCMCTMM",110,0)
 .IF $D(SCFIELDA(.02)) S SCB=SCFIELDA(.02)
"RTN","SCMCTMM",111,0)
 .IF $D(SCFIELDA(.09)) S SCE=SCFIELDA(.09)
"RTN","SCMCTMM",112,0)
 S SCB=$G(SCB,DT)
"RTN","SCMCTMM",113,0)
 S SCE=$G(SCE,DT)
"RTN","SCMCTMM",114,0)
 S $P(SCSPACE," ",80)=""
"RTN","SCMCTMM",115,0)
 S SCTMDT("BEGIN")=$S(SCB<SCDATE:SCB,1:SCDATE)
"RTN","SCMCTMM",116,0)
 S SCTMDT("END")=$S(SCE>SCDATE:SCE,1:SCDATE)
"RTN","SCMCTMM",117,0)
 S SCTMDT("INCL")=0
"RTN","SCMCTMM",118,0)
 S SCTMNM=$P($G(^SCTM(404.51,+SCTM,0)),U,1)
"RTN","SCMCTMM",119,0)
 S XMSUB="Multiple PATIENT-TEAM ASSIGNMENT for "_SCTMNM,XMTEXT="^TMP($J,""SCTMXM"",",SCLNCNT=0
"RTN","SCMCTMM",120,0)
 D EN^DDIOL("Sending Multiple Patient-Team Assignment Message")
"RTN","SCMCTMM",121,0)
 S SCOK=1
"RTN","SCMCTMM",122,0)
 S SCTMNM=$P($G(^SCTM(404.51,+SCTM,0)),U,1)
"RTN","SCMCTMM",123,0)
 D SETLN("Team:                  "_SCTMNM)
"RTN","SCMCTMM",124,0)
 S Y=SCDATE X ^DD("DD")
"RTN","SCMCTMM",125,0)
 D SETLN("Effective Date:        "_Y)
"RTN","SCMCTMM",126,0)
 D SETLN(" ")
"RTN","SCMCTMM",127,0)
 IF $D(SCFIELDA) D
"RTN","SCMCTMM",128,0)
 .F SCNDX=1:1:14 S SCFLD=SCNDX*.01 IF $D(SCFIELDA(SCFLD)) D
"RTN","SCMCTMM",129,0)
 ..S $P(SCNODE,U,SCNDX)=SCFIELDA(SCFLD)
"RTN","SCMCTMM",130,0)
 ..D SETLN($$TEXT(404.42,SCNODE,SCNDX,SCSPACE,1))
"RTN","SCMCTMM",131,0)
 D SETLN(" ")
"RTN","SCMCTMM",132,0)
 D SETLN("There has been a new team assignment for the following patients:")
"RTN","SCMCTMM",133,0)
 S DFN=0
"RTN","SCMCTMM",134,0)
 F  S DFN=$O(@SCNEWTM@(DFN)) Q:'DFN  D
"RTN","SCMCTMM",135,0)
 .S:$$PCMMXMY^SCAPMC25(3,DFN,,"SCTMDT",0) SCOK=0
"RTN","SCMCTMM",136,0)
 .D PID^VADPT6
"RTN","SCMCTMM",137,0)
 .S SCPTNM=$P(^DPT(DFN,0),U,1)
"RTN","SCMCTMM",138,0)
 .S ^TMP("SCTM MAIL LST",$J,SCTM,1,DFN)=("    "_SCPTNM_" ("_VA("PID")_")")
"RTN","SCMCTMM",139,0)
 .S ^TMP("SCTM MAIL LST",$J,SCTM,1,"B",SCPTNM,DFN)=""
"RTN","SCMCTMM",140,0)
 S SCPTNM=""
"RTN","SCMCTMM",141,0)
 F  S SCPTNM=$O(^TMP("SCTM MAIL LST",$J,SCTM,1,"B",SCPTNM)) Q:SCPTNM']""  D
"RTN","SCMCTMM",142,0)
 .S DFN=0
"RTN","SCMCTMM",143,0)
 .F  S DFN=$O(^TMP("SCTM MAIL LST",$J,SCTM,1,"B",SCPTNM,DFN)) Q:'DFN  D
"RTN","SCMCTMM",144,0)
 ..S SCDETAIL=$G(^TMP("SCTM MAIL LST",$J,SCTM,1,DFN)) Q:SCDETAIL']""  D SETLN(SCDETAIL)
"RTN","SCMCTMM",145,0)
BAD IF $S('$D(SCBADTM):0,1:$O(@SCBADTM@(0))) D
"RTN","SCMCTMM",146,0)
 .D SETLN(" ")
"RTN","SCMCTMM",147,0)
 .D SETLN("There has been NO new team assignment for the following patients:")
"RTN","SCMCTMM",148,0)
 .S DFN=0
"RTN","SCMCTMM",149,0)
 .F  S DFN=$O(@SCBADTM@(DFN)) Q:'DFN  D
"RTN","SCMCTMM",150,0)
 ..S:$$PCMMXMY^SCAPMC25(3,DFN,,"SCTMDT",0) SCOK=0
"RTN","SCMCTMM",151,0)
 ..S SCPTNM=$P(^DPT(DFN,0),U,1)
"RTN","SCMCTMM",152,0)
 ..D PID^VADPT6
"RTN","SCMCTMM",153,0)
 ..S ^TMP("SCTM MAIL LST",$J,SCTM,2,DFN)=("    "_SCPTNM_" ("_VA("PID")_")")
"RTN","SCMCTMM",154,0)
 ..S ^TMP("SCTM MAIL LST",$J,SCTM,2,"B",SCPTNM,DFN)=""
"RTN","SCMCTMM",155,0)
 .S SCPTNM=""
"RTN","SCMCTMM",156,0)
 .F  S SCPTNM=$O(^TMP("SCTM MAIL LST",$J,SCTM,2,"B",SCPTNM)) Q:SCPTNM']""  D
"RTN","SCMCTMM",157,0)
 ..S DFN=0
"RTN","SCMCTMM",158,0)
 ..F  S DFN=$O(^TMP("SCTM MAIL LST",$J,SCTM,2,"B",SCPTNM,DFN)) Q:'DFN  D
"RTN","SCMCTMM",159,0)
 ...S SCDETAIL=$G(^TMP("SCTM MAIL LST",$J,SCTM,2,DFN)) Q:SCDETAIL']""  D SETLN(SCDETAIL)
"RTN","SCMCTMM",160,0)
 S XMDUZ=$G(DUZ,.5)
"RTN","SCMCTMM",161,0)
 D ^XMD
"RTN","SCMCTMM",162,0)
QTMULT K:$G(SCDELTEM) ^TMP("SCTM MAIL LST",$J,SCTM)
"RTN","SCMCTMM",163,0)
 K ^TMP($J,"SCTMXM")
"RTN","SCMCTMM",164,0)
 Q
"RTN","SCMCTMU")
0^42^B24141022
"RTN","SCMCTMU",1,0)
SCMCTMU ;ALB/REW - Team-Patient Utilities ; 1 May 95
"RTN","SCMCTMU",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCTMU",3,0)
 ;1
"RTN","SCMCTMU",4,0)
ACTTM(SCTM,SCDT) ;is the team  currently active?
"RTN","SCMCTMU",5,0)
 ; Used by computed field #300 (CURRENTLY ACTIVE?) OF file #404.51
"RTN","SCMCTMU",6,0)
 ; Input:
"RTN","SCMCTMU",7,0)
 ;  SCTM  - Pointer to Team file #404.51
"RTN","SCMCTMU",8,0)
 ;  SCDT  - Date to check for, Default=DT
"RTN","SCMCTMU",9,0)
 ; Returns:
"RTN","SCMCTMU",10,0)
 ;   1  if after effective date and before inactive date
"RTN","SCMCTMU",11,0)
 ;   0  if not yet active or inactivated
"RTN","SCMCTMU",12,0)
 ;   -1 if error
"RTN","SCMCTMU",13,0)
 ;
"RTN","SCMCTMU",14,0)
 Q $$DATES^SCAPMCU1(404.58,.SCTM,.SCDT)
"RTN","SCMCTMU",15,0)
 ;
"RTN","SCMCTMU",16,0)
ENROLL(DFN,CLINIC,DATE) ;is this patient enrolled in this clinic on a date?
"RTN","SCMCTMU",17,0)
 ;Input:
"RTN","SCMCTMU",18,0)
 ;    DFN - ien of Patient file
"RTN","SCMCTMU",19,0)
 ; CLINIC - Pointer to file 44
"RTN","SCMCTMU",20,0)
 ;   DATE - (Optional) Effective Date, default=DT
"RTN","SCMCTMU",21,0)
 ;Return: [1|Yes, he is enrolled;0|he is not]
"RTN","SCMCTMU",22,0)
 ;
"RTN","SCMCTMU",23,0)
 N SCCL,SCL1,SCNODE,SCACT,SCINACT,SCYES
"RTN","SCMCTMU",24,0)
 S SCYES=0
"RTN","SCMCTMU",25,0)
 S SCCL=0
"RTN","SCMCTMU",26,0)
 F  S SCCL=$O(^DPT(DFN,"DE","B",CLINIC,SCCL)) Q:'SCCL  D
"RTN","SCMCTMU",27,0)
 .S SCCL1=0
"RTN","SCMCTMU",28,0)
 .F  S SCCL1=$O(^DPT(DFN,"DE",SCCL,1,SCCL1)) Q:'SCCL1  D
"RTN","SCMCTMU",29,0)
 ..S SCNODE=$G(^DPT(DFN,"DE",SCCL,1,SCCL1,0))
"RTN","SCMCTMU",30,0)
 ..S SCACT=+SCNODE
"RTN","SCMCTMU",31,0)
 ..S SCINACT=$P(SCNODE,U,3)
"RTN","SCMCTMU",32,0)
 ..S:$S('SCACT:0,(SCACT>DATE):0,'SCINACT:1,(SCINACT<DATE):0,1:1) SCYES=1
"RTN","SCMCTMU",33,0)
 Q SCYES
"RTN","SCMCTMU",34,0)
 ;
"RTN","SCMCTMU",35,0)
RESTCONS(DFN) ;does this patient have restricted consults?
"RTN","SCMCTMU",36,0)
 ; for a clinic in which the patient is NOT enrolled, some patients/teams
"RTN","SCMCTMU",37,0)
 ; require more authority to enroll or make appointments
"RTN","SCMCTMU",38,0)
 ; this will often be used with $$ENROLL(dfn) to see if he is enrolled
"RTN","SCMCTMU",39,0)
 ;
"RTN","SCMCTMU",40,0)
 ; Input: DFN - ien of Patient File
"RTN","SCMCTMU",41,0)
 ; Return: [1|Yes, restrict 0|No
"RTN","SCMCTMU",42,0)
 Q 1
"RTN","SCMCTMU",43,0)
WHOCLIN(SDCL,DATE) ;give clinic & date return prt to 200
"RTN","SCMCTMU",44,0)
 ; SDCL - ien of #44
"RTN","SCMCTMU",45,0)
 ; DATE - effective date (optional) default =DT
"RTN","SCMCTMU",46,0)
 ; Returned: ien of 200
"RTN","SCMCTMU",47,0)
 ;
"RTN","SCMCTMU",48,0)
 Q
"RTN","SCMCTMU",49,0)
POSCLIN(SDCL,DATE) ;given clinic & date, return ptr to team position 404.57
"RTN","SCMCTMU",50,0)
 ;  SDCL - ien of Hospital Location (#44)
"RTN","SCMCTMU",51,0)
 ;  Returned: If exactly one position for clinic - ien of team postion
"RTN","SCMCTMU",52,0)
 ;            else null
"RTN","SCMCTMU",53,0)
 ;
"RTN","SCMCTMU",54,0)
 N X,SCD
"RTN","SCMCTMU",55,0)
 S:'$G(DATE) DATE=DT
"RTN","SCMCTMU",56,0)
 S SCD=$O(^SCTM(404.57,"ACLINDT",+SDCL,-DATE)) ;SCD is the effective date
"RTN","SCMCTMU",57,0)
 S X=$O(^SCTM(404.57,"ACLINDT",+SDCL,+SCD,"")) ;position assoc w/ clinic
"RTN","SCMCTMU",58,0)
 Q $G(X)
"RTN","SCMCTMU",59,0)
WHOPOS(SCTP,DATE) ;given position & date,return pointer to 200^name of pr
"RTN","SCMCTMU",60,0)
 ;SCTP - ien of Team Position File (#404.57)
"RTN","SCMCTMU",61,0)
 ; Date - (Optional) effective date - default=today
"RTN","SCMCTMU",62,0)
 ;
"RTN","SCMCTMU",63,0)
 Q $$GETPRTP^SCAPMCU2(SCTP,.DATE)
"RTN","SCMCTMU",64,0)
DISPWHO(SCPOS,DATE) ;given position & date, return external of 200
"RTN","SCMCTMU",65,0)
 ;SCPOS - ien of 404.48)
"RTN","SCMCTMU",66,0)
 ; DATE - (Optional) effective date - default=today
"RTN","SCMCTMU",67,0)
 ;
"RTN","SCMCTMU",68,0)
 N Y,SCP
"RTN","SCMCTMU",69,0)
 S:'$G(DATE) DATE=DT
"RTN","SCMCTMU",70,0)
 S SCP=$$WHOPOS(SCPOS,DATE)
"RTN","SCMCTMU",71,0)
 S:SCP Y=$S($D(^VA(200,+SCP,0)):$P(^(0),U,1),1:"Unknown")
"RTN","SCMCTMU",72,0)
 Q $G(Y)
"RTN","SCMCTMU",73,0)
PR(SDNPI) ;Provider Display Data
"RTN","SCMCTMU",74,0)
 ; Input  -- SDNPI    New Person IEN
"RTN","SCMCTMU",75,0)
 ; Output -- Provider Display Data - Provider Name
"RTN","SCMCTMU",76,0)
 N Y
"RTN","SCMCTMU",77,0)
 S Y=$S($D(^VA(200,SDNPI,0)):$P(^(0),"^"),1:"Unknown")
"RTN","SCMCTMU",78,0)
 Q $G(Y)
"RTN","SCMCTMU",79,0)
PTTMSCRN ;define dic('s') to ensure patient team position assignement is ok
"RTN","SCMCTMU",80,0)
 ;
"RTN","SCMCTMU",81,0)
CK N SCTM,SCTMA
"RTN","SCMCTMU",82,0)
 S SCTMA=$P($G(^SCPT(404.43,Y,0)),U,1)
"RTN","SCMCTMU",83,0)
 S SCTM=$P($G(^SCPT(404.42,SCTMA,0)),U,3)
"RTN","SCMCTMU",84,0)
 S DIC("S")="IF $D(^SCTM(404.57,""C"","_SCTM_",Y))"
"RTN","SCMCTMU",85,0)
 Q
"RTN","SCMCTMU",86,0)
OKPTTM(SCNODE,DA) ;check pt team assignment - 404.42
"RTN","SCMCTMU",87,0)
 ; SCNODE is proposed new node
"RTN","SCMCTMU",88,0)
 Q 1
"RTN","SCMCTMU",89,0)
 N OK,DFN,SCTM,SCACT,SCINACT,SCDTS,SCTMHIST,SCB4,SCAFT
"RTN","SCMCTMU",90,0)
 S OK=1
"RTN","SCMCTMU",91,0)
 G:'DA QTOKTM
"RTN","SCMCTMU",92,0)
 S DFN=$P(SCNODE,U,1)
"RTN","SCMCTMU",93,0)
 S SCTM=$P(SCNODE,U,3)
"RTN","SCMCTMU",94,0)
 S SCACT=$P(SCNODE,U,2)
"RTN","SCMCTMU",95,0)
 S SCINACT=$P(SCNODE,U,9)
"RTN","SCMCTMU",96,0)
 S:$G(SCACT) SCDTS("BEGIN")=SCACT
"RTN","SCMCTMU",97,0)
 S:$D(SCACT) SCDTS("END")=$S(SCINACT:SCINACT,1:3990101)
"RTN","SCMCTMU",98,0)
 S:$D(SCDTS) SCDTS("INCL")=1
"RTN","SCMCTMU",99,0)
 ;check patient (.01) - none now
"RTN","SCMCTMU",100,0)
 ;check team (.03)
"RTN","SCMCTMU",101,0)
 IF SCINACT&('SCACT) S OK=0_U_"Activation must be defined before Discharge" G QTOKTM
"RTN","SCMCTMU",102,0)
 IF SCTM&SCACT&DFN D
"RTN","SCMCTMU",103,0)
 .S SCTMHIST=$$ACTHIST^SCAPMCU2(404.58,.SCTM,.SCDTS)
"RTN","SCMCTMU",104,0)
 .S:'SCTMHIST OK=0_U_"Team Not Active"
"RTN","SCMCTMU",105,0)
 .;check assignment dt (.02)
"RTN","SCMCTMU",106,0)
 .;  - is there an assignment on exactly the same date in 404.42?
"RTN","SCMCTMU",107,0)
 .S SCPTTMA=0 F  S SCPTTMA=$O(^SCPT(404.42,"AIDT",DFN,SCTM,-SCACT,SCPTTMA)) Q:SCPTTMA=""!(SCPTTMA=DA)!(DA="")  S OK=0_U_"Already an activation for patient/team on this date"
"RTN","SCMCTMU",108,0)
 .;  - is there an assignment w/o a discharge before in 404.42?
"RTN","SCMCTMU",109,0)
 .S SCB4=$O(^SCPT(404.42,"AIDT",DFN,SCTM,-SCACT))
"RTN","SCMCTMU",110,0)
 .S SCB4A=$O(^SCPT(404.42,"AIDT",DFN,SCTM,+SCB4,0))
"RTN","SCMCTMU",111,0)
 .S:SCB4A&('$P($G(^SCPT(404.42,+SCB4A,0)),U,9)) OK=0_U_"Existing active patient/team assignment already"
"RTN","SCMCTMU",112,0)
 .;check inactivation dt (.09)
"RTN","SCMCTMU",113,0)
 .;  - if exists, is inactivation after assignment dt
"RTN","SCMCTMU",114,0)
 .S:SCINACT&(SCACT'<SCINACT) OK=0_U_"Activation must be before discharge"
"RTN","SCMCTMU",115,0)
 .;  - if there is a future assignment is it after this inactivation?
"RTN","SCMCTMU",116,0)
 .S SCAFT=-$O(^SCPT(404.42,"AIDT",DFN,SCTM,-SCINACT),-1)
"RTN","SCMCTMU",117,0)
 .S:SCAFT&(SCAFT'>SCINACT) OK=0_U_"Existing future activation before this inactivation"
"RTN","SCMCTMU",118,0)
QTOKTM Q OK
"RTN","SCMCTMU",119,0)
 ;
"RTN","SCMCTMU",120,0)
INSTPCTM(DFN,SCEFF) ;return institution & team for pt's pc team
"RTN","SCMCTMU",121,0)
 ; return ptr4^institution^sctm^team name
"RTN","SCMCTMU",122,0)
 N SCTM,SCINST,SCOK
"RTN","SCMCTMU",123,0)
 S SCOK=0
"RTN","SCMCTMU",124,0)
 S SCTM=+$$GETPCTM^SCAPMCU2(.DFN,.SCEFF,1)
"RTN","SCMCTMU",125,0)
 S SCINST=+$P($G(^SCTM(404.51,+$G(SCTM),0)),U,7)
"RTN","SCMCTMU",126,0)
 S:SCTM&SCINST SCOK=1
"RTN","SCMCTMU",127,0)
 Q $S('SCOK:0,1:SCTM_U_$P($G(^SCTM(404.51,SCTM,0)),U,1)_U_SCINST_U_$P($G(^DIC(4,SCINST,0)),U,1))
"RTN","SCMCTMU",128,0)
 ;
"RTN","SCMCTMU",129,0)
EVT(SCCVEVT,SCCVORG) ;Invoke encounter conversion event driver
"RTN","SCMCTMU",130,0)
 ; Input  -- SCCVEVT  Conversion event
"RTN","SCMCTMU",131,0)
 ;                    0=Estimate, 1=Convert, 2=Re-convert
"RTN","SCMCTMU",132,0)
 ;           SCCVORG  Originating process type
"RTN","SCMCTMU",133,0)
 ; Output -- ^TMP("SCCVEVT",$J, disposition array
"RTN","SCMCTMU",134,0)
 K DTOUT,DIROUT
"RTN","SCMCTMU",135,0)
 S X=+$O(^ORD(101,"B","SCMC ENCOUNTER CONVERSION EVENTS",0))_";ORD(101,"
"RTN","SCMCTMU",136,0)
 I X D EN^XQOR
"RTN","SCMCTMU",137,0)
 K X,^TMP("SCCVEVT",$J)
"RTN","SCMCTMU",138,0)
EVTQ Q
"RTN","SCMCTMU2")
0^129^B3881733
"RTN","SCMCTMU2",1,0)
SCMCTMU2 ;ALB/REW - Team-Patient Utilities ; 1 Apr 96
"RTN","SCMCTMU2",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCTMU2",3,0)
 ;1
"RTN","SCMCTMU2",4,0)
RESTENR ;call when pt is set to 'restrict consults' & he is enrolled in clinic
"RTN","SCMCTMU2",5,0)
 G:'$G(DFN) END
"RTN","SCMCTMU2",6,0)
 S SCCL=0
"RTN","SCMCTMU2",7,0)
 F  S SCCL=$O(^TMP($J,"SC CED","AFTER","B",SCCL)) Q:'SCCL  D
"RTN","SCMCTMU2",8,0)
 .W !,SCCL
"RTN","SCMCTMU2",9,0)
END Q
"RTN","SCMCTMU2",10,0)
 ;
"RTN","SCMCTMU2",11,0)
YSPTTMPC(DFN,SCACT) ;is it ok to give patient a new pc team?
"RTN","SCMCTMU2",12,0)
 ;  Return [OK:1,Not OK: 0^Message]
"RTN","SCMCTMU2",13,0)
 N SCOK,SCX,SCTM
"RTN","SCMCTMU2",14,0)
 ;does pt have a current pc team?
"RTN","SCMCTMU2",15,0)
 IF $$GETPCTM^SCAPMCU2(DFN,DT,1) S SCOK="0^Pt has current PC Team Assignment" G QTOKPC
"RTN","SCMCTMU2",16,0)
 ;does pt have a future pc team?
"RTN","SCMCTMU2",17,0)
 S SCX=$O(^SCPT(404.42,"APCTM",DFN,1,SCACT))
"RTN","SCMCTMU2",18,0)
 IF SCX D  G QTOKPC
"RTN","SCMCTMU2",19,0)
 .S SCTM=$O(^SCPT(404.42,"APCTM",DFN,1,+SCX,SCTM))
"RTN","SCMCTMU2",20,0)
 .S SCOK="0^Pt has future PC Assignment to the "_$P($G(^SCTM(404.51,+SCTM,0)),U,1)_"team."
"RTN","SCMCTMU2",21,0)
 S SCOK=1
"RTN","SCMCTMU2",22,0)
QTOKPC Q SCOK
"RTN","SCMCTMU2",23,0)
 ;
"RTN","SCMCTMU2",24,0)
OKACPTTM(DFN,SCTM,SCDATE,SCACTIVE) ;is patient active from now till forever?
"RTN","SCMCTMU2",25,0)
 ; Returned: 1: Not active from now till forever, 0 = Active sometime
"RTN","SCMCTMU2",26,0)
 ;   DFN     - Pointer to Patient File
"RTN","SCMCTMU2",27,0)
 ;   SCTM    - Team File ien of interest
"RTN","SCMCTMU2",28,0)
 ;   SCDATE  - Start Date
"RTN","SCMCTMU2",29,0)
 ;   SCACTIVE- Must Team be active on date or just sometime in future?
"RTN","SCMCTMU2",30,0)
 N SCTMDT,SCOK,SCACERR,SCACLST
"RTN","SCMCTMU2",31,0)
 S SCOK=1
"RTN","SCMCTMU2",32,0)
 S SCTMDT("BEGIN")=$G(SCDATE,DT)
"RTN","SCMCTMU2",33,0)
 S SCTMDT("END")=3990101 ;forever
"RTN","SCMCTMU2",34,0)
 S SCTMDT("INCL")=0
"RTN","SCMCTMU2",35,0)
 S SCACTIVE=$G(SCACTIVE,1)
"RTN","SCMCTMU2",36,0)
 ; if checking for active teams
"RTN","SCMCTMU2",37,0)
 IF SCACTIVE&('$$ACTHIST^SCAPMCU2(404.58,.SCTM,"SCTMDT","SCACERR","SCACLST")) S SCOK=0 G ENDOKTM
"RTN","SCMCTMU2",38,0)
 S SCOK=$$TMPT^SCAPMC(DFN,.SCTMDT,,"SCACLST","SCACERR")
"RTN","SCMCTMU2",39,0)
 S:SCOK>0&($D(SCACLST("SCTM",SCTM))) SCOK=0
"RTN","SCMCTMU2",40,0)
ENDOKTM Q SCOK
"RTN","SCMCTMU2",41,0)
 ;
"RTN","SCMCTMU2",42,0)
OKPTTMPC(DFN,SCTM,DATE) ;
"RTN","SCMCTMU2",43,0)
 N SCOK,SCPCTM
"RTN","SCMCTMU2",44,0)
 S SCOK=1
"RTN","SCMCTMU2",45,0)
 ;is this a possible pc team?
"RTN","SCMCTMU2",46,0)
 IF '$P($G(^SCTM(404.51,+$G(SCTM),0)),U,5) S SCOK=0 G QTOKTM
"RTN","SCMCTMU2",47,0)
 S SCPCTM=$$GETPCTM^SCAPMCU2(DFN,DATE,1)
"RTN","SCMCTMU2",48,0)
 IF SCPCTM D  G QTOKTM
"RTN","SCMCTMU2",49,0)
 .IF SCPCTM'=SCTM D
"RTN","SCMCTMU2",50,0)
 ..S SCOK=0
"RTN","SCMCTMU2",51,0)
 ELSE  D
"RTN","SCMCTMU2",52,0)
 .S SCOK=$$YSPTTMPC(DFN,DATE)
"RTN","SCMCTMU2",53,0)
QTOKTM Q SCOK
"RTN","SCMCTPM")
0^131^B33804951
"RTN","SCMCTPM",1,0)
SCMCTPM ;ALB/REW - Patient Position Changes MailMessages ; 26 Mar 1996
"RTN","SCMCTPM",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCTPM",3,0)
 ;1
"RTN","SCMCTPM",4,0)
MAIL ;Do Patient Team Changes MailMan Message
"RTN","SCMCTPM",5,0)
 ; - called by SCMC PT TEAM CHANGES MAIL MESSAGE protocol
"RTN","SCMCTPM",6,0)
 G:$G(SCNOMAIL) END  ;- flag can be set to stop message generation
"RTN","SCMCTPM",7,0)
 N XMDUZ,XMY,XMSUB,XMTEXT,VA,VAERR,XMZ,Y
"RTN","SCMCTPM",8,0)
 N SCTMAR,SCSTAT,DFN,SCNODE,SCY,SCSPACE,SCPAD,SCTPXM,SCLNCNT,SCTPDT,SCPTNM
"RTN","SCMCTPM",9,0)
 S $P(SCSPACE," ",80)=""
"RTN","SCMCTPM",10,0)
 ;   SCTMAR - ARRAY OF TEAMS (before & after)
"RTN","SCMCTPM",11,0)
 S:SCTMAF SCTMAR(SCTMAF)=""
"RTN","SCMCTPM",12,0)
 S:SCTMB4 SCTMAR(SCTMB4)=""
"RTN","SCMCTPM",13,0)
 S:'SCTPAF SCSTAT="DELETED"
"RTN","SCMCTPM",14,0)
 S:'SCTPB4 SCSTAT="NEW"
"RTN","SCMCTPM",15,0)
 S:SCTPB4&SCTPAF SCSTAT="CHANGED"
"RTN","SCMCTPM",16,0)
 S DFN=$S(SCSTAT="DELETED":+$G(^SCPT(404.42,+SCPTTPB4,0)),1:+$G(^SCPT(404.42,+SCPTTPAF,0)))
"RTN","SCMCTPM",17,0)
 ;set xmy array for practitioners in positions receiving TMchg notices
"RTN","SCMCTPM",18,0)
 G:'$$PCMMXMY^SCAPMC25(3,DFN,"SCTMAR","SCTPDT",0) END
"RTN","SCMCTPM",19,0)
 ;D EN^DDIOL("Sending "_SCSTAT_" Patient-Position Assignment Message")
"RTN","SCMCTPM",20,0)
 D PID^VADPT6
"RTN","SCMCTPM",21,0)
 S SCPTNM=$P(^DPT(DFN,0),U,1)
"RTN","SCMCTPM",22,0)
 S XMSUB=SCSTAT_" PATIENT-POSITION ASSIGNMENT for "_SCPTNM_" ("_VA("PID")_")",XMTEXT="^TMP($J,""SCTPXM"",",SCLNCNT=0
"RTN","SCMCTPM",23,0)
 IF SCSTAT="NEW" D
"RTN","SCMCTPM",24,0)
 .D SETLN("Current Patient Team Data:")
"RTN","SCMCTPM",25,0)
 .D SETLN("==========================")
"RTN","SCMCTPM",26,0)
 .F SCX=1:1:9 D
"RTN","SCMCTPM",27,0)
 ..D SETLN($$TEXT(404.43,SCPTTPAF,SCX,SCSPACE,1))
"RTN","SCMCTPM",28,0)
 IF SCSTAT="DELETED" D
"RTN","SCMCTPM",29,0)
 .D SETLN("Previous Patient Team Data:")
"RTN","SCMCTPM",30,0)
 .D SETLN("===========================")
"RTN","SCMCTPM",31,0)
 .F SCX=1:1:9 S SCFLD=SCX*.01 D
"RTN","SCMCTPM",32,0)
 ..D SETLN($$TEXT(404.43,SCPTTPB4,SCX,SCSPACE,1))
"RTN","SCMCTPM",33,0)
 IF SCSTAT="CHANGED" D
"RTN","SCMCTPM",34,0)
 .D SETLN("Fields: "_$E(SCSPACE,1,19)_"Previous Data:           Current Patient Data:")
"RTN","SCMCTPM",35,0)
 .D SETLN("=======================================================================")
"RTN","SCMCTPM",36,0)
 .F SCX=1:1:9 S SCFLD=SCX*.01 D
"RTN","SCMCTPM",37,0)
 ..N SCLAB2,SCY,SCZ
"RTN","SCMCTPM",38,0)
 ..S SCY=$$TEXT(404.43,SCPTTPB4,SCX,SCSPACE,1)
"RTN","SCMCTPM",39,0)
 ..S:'$L(SCY) SCLAB2=2
"RTN","SCMCTPM",40,0)
 ..S SCZ=$$TEXT(404.43,SCPTTPAF,SCX,SCSPACE,+$G(SCLAB2))
"RTN","SCMCTPM",41,0)
 ..D:$L(SCY)!($L(SCZ)) SETLN(SCY_$E(SCSPACE,1,(52-$L(SCY)))_SCZ)
"RTN","SCMCTPM",42,0)
 S SCLNCNT=$$PCMAIL^SCMCMM(DFN,"^TMP($J,""SCTPXM"")",DT)
"RTN","SCMCTPM",43,0)
 S XMDUZ=$G(DUZ,.5)
"RTN","SCMCTPM",44,0)
 D ^XMD
"RTN","SCMCTPM",45,0)
END ;
"RTN","SCMCTPM",46,0)
 Q
"RTN","SCMCTPM",47,0)
 ;
"RTN","SCMCTPM",48,0)
SETLN(TEXT) ;
"RTN","SCMCTPM",49,0)
 Q:$G(TEXT)=""
"RTN","SCMCTPM",50,0)
 ; increments SCLNCNT, adds text to scTPxm(sclncnt)
"RTN","SCMCTPM",51,0)
 S SCLNCNT=SCLNCNT+1
"RTN","SCMCTPM",52,0)
 S ^TMP($J,"SCTPXM",SCLNCNT)=TEXT
"RTN","SCMCTPM",53,0)
 Q
"RTN","SCMCTPM",54,0)
 ;
"RTN","SCMCTPM",55,0)
TEXT(SCFILE,SCNODE,SCPC,SCSPACE,SCLAB) ;returns fldname & external value
"RTN","SCMCTPM",56,0)
 ;returns fldname & external value
"RTN","SCMCTPM",57,0)
 ;   Note- Only works for non wp fields of standard numbering conventions
"RTN","SCMCTPM",58,0)
 ;   SCFLILE =FILENUM
"RTN","SCMCTPM",59,0)
 ;   SCNODE  = 0 NODE
"RTN","SCMCTPM",60,0)
 ;   SCPC    = piece of node
"RTN","SCMCTPM",61,0)
 ;   SCSPACE = 80 SPACES
"RTN","SCMCTPM",62,0)
 ;   SCLAB = 1 if print field name
"RTN","SCMCTPM",63,0)
 N SCX,SCINT,SCFLD
"RTN","SCMCTPM",64,0)
 S SCX=""
"RTN","SCMCTPM",65,0)
 S SCINT=$P(SCNODE,U,SCPC)
"RTN","SCMCTPM",66,0)
 G:SCINT="" QTTXT
"RTN","SCMCTPM",67,0)
 S SCFLD=SCPC*.01
"RTN","SCMCTPM",68,0)
 ;;;
"RTN","SCMCTPM",69,0)
 IF $G(SCLAB) D
"RTN","SCMCTPM",70,0)
 .S SCX=$$DDNAME^SCMCRU(SCFILE,SCFLD)_":"
"RTN","SCMCTPM",71,0)
 .S:$G(SCLAB)=1 SCX=SCX_$E(SCSPACE,1,(27-$L(SCX)))
"RTN","SCMCTPM",72,0)
 .S:$G(SCLAB)=2 SCX=SCX_$E(SCSPACE,1,(52-$L(SCX)))
"RTN","SCMCTPM",73,0)
 S:SCINT]"" SCX=SCX_$$EXTERNAL^DILFD(SCFILE,SCFLD,"",SCINT)
"RTN","SCMCTPM",74,0)
QTTXT Q SCX
"RTN","SCMCTPM",75,0)
DDNAME(FILE,FIELD) ;return the fieldname
"RTN","SCMCTPM",76,0)
 N SCX
"RTN","SCMCTPM",77,0)
 D FIELD^DID(FILE,FIELD,"","LABEL","SCX")
"RTN","SCMCTPM",78,0)
 Q $G(SCX("LABEL"))
"RTN","SCMCTPM",79,0)
 ;
"RTN","SCMCTPM",80,0)
MAILLST(SCTP,SCFIELDA,SCDATE,SCNEWTP,SCOLDTP,SCBADTP) ;
"RTN","SCMCTPM",81,0)
 ; Input:
"RTN","SCMCTPM",82,0)
 ;    SCTP     - Pointer to Team Position File (#404.57)
"RTN","SCMCTPM",83,0)
 ;    SCFIELDA - Field array with internal values
"RTN","SCMCTPM",84,0)
 ;    SCDATE   - Effective Date
"RTN","SCMCTPM",85,0)
 ;    SCNEWTP  - DFN array of newly assigned to position
"RTN","SCMCTPM",86,0)
 ;    SCOLDTP  - DFN array of previously assigned to position
"RTN","SCMCTPM",87,0)
 ;    SCBADTP  - DFN array of patients unassignable to position
"RTN","SCMCTPM",88,0)
 ;
"RTN","SCMCTPM",89,0)
 G:$G(SCNOMAIL) QTMULT  ;- flag can be set to stop message generation
"RTN","SCMCTPM",90,0)
 G:'$D(SCNEWTP) QTMULT
"RTN","SCMCTPM",91,0)
 G:'$O(@SCNEWTP@(0)) QTMULT  ;if no new assignments
"RTN","SCMCTPM",92,0)
 N XMDUZ,XMY,XMSUB,XMTEXT,VA,VAERR,XMZ,Y,SCTPDT
"RTN","SCMCTPM",93,0)
 N SCTPNM,DFN,SCOK,SCPTNM,SCFLD,SCNODE,SCNDX,SCSPACE,SCE,SCB,SCTMNM,SCDELTEM
"RTN","SCMCTPM",94,0)
 S SCDELTEM=1 ;ok to delete tmp global
"RTN","SCMCTPM",95,0)
 IF $D(SCFIELDA) D
"RTN","SCMCTPM",96,0)
 .IF $D(SCFIELDA(.03)) S SCB=SCFIELDA(.03)
"RTN","SCMCTPM",97,0)
 .IF $D(SCFIELDA(.04)) S SCE=SCFIELDA(.04)
"RTN","SCMCTPM",98,0)
 S SCB=$G(SCB,DT)
"RTN","SCMCTPM",99,0)
 S SCE=$G(SCE,DT)
"RTN","SCMCTPM",100,0)
 S $P(SCSPACE," ",80)=""
"RTN","SCMCTPM",101,0)
 S SCTPDT("BEGIN")=$S(SCB<SCDATE:SCB,1:SCDATE)
"RTN","SCMCTPM",102,0)
 S SCTPDT("END")=$S(SCE>SCDATE:SCE,1:SCDATE)
"RTN","SCMCTPM",103,0)
 S SCTPDT("INCL")=0
"RTN","SCMCTPM",104,0)
 S SCTPNM=$P($G(^SCTM(404.57,+SCTP,0)),U,1)
"RTN","SCMCTPM",105,0)
 S XMSUB="Multiple PATIENT-POSITION ASSIGNMENT for "_SCTPNM,XMTEXT="^TMP($J,""SCTPXM"",",SCLNCNT=0
"RTN","SCMCTPM",106,0)
 D EN^DDIOL("Sending Multiple Patient-Position Assignment Message")
"RTN","SCMCTPM",107,0)
 S SCOK=1
"RTN","SCMCTPM",108,0)
 S SCTPNM=$P($G(^SCTM(404.57,+SCTP,0)),U,1)
"RTN","SCMCTPM",109,0)
 S SCTMNM=$P($G(^SCTM(404.51,+$P($G(^SCTM(404.57,+SCTP,0)),U,2),0)),U,1)
"RTN","SCMCTPM",110,0)
 D SETLN("Team:                  "_SCTMNM)
"RTN","SCMCTPM",111,0)
 D SETLN("Position:              "_SCTPNM)
"RTN","SCMCTPM",112,0)
 S Y=SCDATE X ^DD("DD")
"RTN","SCMCTPM",113,0)
 D SETLN("Effective Date:        "_Y)
"RTN","SCMCTPM",114,0)
 D SETLN(" ")
"RTN","SCMCTPM",115,0)
 IF $D(SCFIELDA) D
"RTN","SCMCTPM",116,0)
 .F SCNDX=1:1:14 S SCFLD=SCNDX*.01 IF $D(SCFIELDA(SCFLD)) D
"RTN","SCMCTPM",117,0)
 ..S $P(SCNODE,U,SCNDX)=SCFIELDA(SCFLD)
"RTN","SCMCTPM",118,0)
 ..D SETLN($$TEXT(404.43,SCNODE,SCNDX,SCSPACE,1))
"RTN","SCMCTPM",119,0)
 D SETLN(" ")
"RTN","SCMCTPM",120,0)
 D SETLN("There has been a new position assignment for the following patients:")
"RTN","SCMCTPM",121,0)
 S DFN=0
"RTN","SCMCTPM",122,0)
NEW F  S DFN=$O(@SCNEWTP@(DFN)) Q:'DFN  D
"RTN","SCMCTPM",123,0)
 .S:$$PCMMXMY^SCAPMC25(3,DFN,,"SCTPDT",0) SCOK=0
"RTN","SCMCTPM",124,0)
 .D PID^VADPT6
"RTN","SCMCTPM",125,0)
 .S SCPTNM=$P(^DPT(DFN,0),U,1)
"RTN","SCMCTPM",126,0)
 .S ^TMP("SCTP MAIL LST",$J,SCTP,1,DFN)=("    "_SCPTNM_" ("_VA("PID")_")")
"RTN","SCMCTPM",127,0)
 .S ^TMP("SCTP MAIL LST",$J,SCTP,1,"B",SCPTNM,DFN)=""
"RTN","SCMCTPM",128,0)
 S SCPTNM=""
"RTN","SCMCTPM",129,0)
 F  S SCPTNM=$O(^TMP("SCTP MAIL LST",$J,SCTP,1,"B",SCPTNM)) Q:SCPTNM']""  D
"RTN","SCMCTPM",130,0)
 .S DFN=0
"RTN","SCMCTPM",131,0)
 .F  S DFN=$O(^TMP("SCTP MAIL LST",$J,SCTP,1,"B",SCPTNM,DFN)) Q:'DFN  D
"RTN","SCMCTPM",132,0)
 ..S SCDETAIL=$G(^TMP("SCTP MAIL LST",$J,SCTP,1,DFN)) Q:SCDETAIL']""  D SETLN(SCDETAIL)
"RTN","SCMCTPM",133,0)
BAD IF $O(@SCBADTP@(0)) D
"RTN","SCMCTPM",134,0)
 .D SETLN(" ")
"RTN","SCMCTPM",135,0)
 .D SETLN("There has been NO new position assignment for the following patients:")
"RTN","SCMCTPM",136,0)
 .S DFN=0
"RTN","SCMCTPM",137,0)
 .F  S DFN=$O(@SCBADTP@(DFN)) Q:'DFN  D
"RTN","SCMCTPM",138,0)
 ..S:$$PCMMXMY^SCAPMC25(3,DFN,,"SCTPDT",0) SCOK=0
"RTN","SCMCTPM",139,0)
 ..S SCPTNM=$P(^DPT(DFN,0),U,1)
"RTN","SCMCTPM",140,0)
 ..D PID^VADPT6
"RTN","SCMCTPM",141,0)
 ..S ^TMP("SCTP MAIL LST",$J,SCTP,2,DFN)=("    "_SCPTNM_" ("_VA("PID")_")")
"RTN","SCMCTPM",142,0)
 ..S ^TMP("SCTP MAIL LST",$J,SCTP,2,"B",SCPTNM,DFN)=""
"RTN","SCMCTPM",143,0)
 .S SCPTNM=""
"RTN","SCMCTPM",144,0)
 .F  S SCPTNM=$O(^TMP("SCTP MAIL LST",$J,SCTP,2,"B",SCPTNM)) Q:SCPTNM']""  D
"RTN","SCMCTPM",145,0)
 ..S DFN=0
"RTN","SCMCTPM",146,0)
 ..F  S DFN=$O(^TMP("SCTP MAIL LST",$J,SCTP,2,"B",SCPTNM,DFN)) Q:'DFN  D
"RTN","SCMCTPM",147,0)
 ...S SCDETAIL=$G(^TMP("SCTP MAIL LST",$J,SCTP,2,DFN)) Q:SCDETAIL']""  D SETLN(SCDETAIL)
"RTN","SCMCTPM",148,0)
 S XMDUZ=$G(DUZ,.5)
"RTN","SCMCTPM",149,0)
 D ^XMD
"RTN","SCMCTPM",150,0)
QTMULT K:$G(SCDELTEM) ^TMP("SCTP MAIL LST",$J,SCTP)
"RTN","SCMCTPM",151,0)
 K ^TMP($J,"SCTPXM")
"RTN","SCMCTPM",152,0)
 Q
"RTN","SCMCTPU")
0^43^B20859632
"RTN","SCMCTPU",1,0)
SCMCTPU ;ALB/REW - Team Position Utilities ; 9 Jun 1995
"RTN","SCMCTPU",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCTPU",3,0)
 ;1
"RTN","SCMCTPU",4,0)
ACTPTTM(SCPTTM,SCDT) ;is the patient- team assignment currently active?
"RTN","SCMCTPU",5,0)
 ; Used by computed field #300 (CURRENTLY ACTIVE?) OF file #404.57
"RTN","SCMCTPU",6,0)
 ; Input:
"RTN","SCMCTPU",7,0)
 ;  SCPTTM  - Pointer to Patient Team Assignment file -404.42
"RTN","SCMCTPU",8,0)
 ;  SCDT  - Date to check for, Default=DT
"RTN","SCMCTPU",9,0)
 ; Returns
"RTN","SCMCTPU",10,0)
 ;   status^status change date
"RTN","SCMCTPU",11,0)
 ; status:
"RTN","SCMCTPU",12,0)
 ;   1  if after effective date and before inactive date
"RTN","SCMCTPU",13,0)
 ;   0  if not yet active or inactivated already
"RTN","SCMCTPU",14,0)
 ;   -1 if error
"RTN","SCMCTPU",15,0)
 ;999
"RTN","SCMCTPU",16,0)
 ;new code
"RTN","SCMCTPU",17,0)
 N SCOK,STATUS,EFFDT,SCNODE
"RTN","SCMCTPU",18,0)
 S:'$D(SCDT) SCDT=DT
"RTN","SCMCTPU",19,0)
 S SCNODE=$G(^SCPT(404.42,+SCPTTM,0))
"RTN","SCMCTPU",20,0)
 ;no act=-1,dt before act=0,no inact=1,dt after inact=0,o/w=1
"RTN","SCMCTPU",21,0)
 Q $S(('$P(SCNODE,U,2)):-1,(SCDT<$P(SCNODE,U,2)):0,('$P(SCNODE,U,9)):1,(SCDT>$P(SCNODE,U,9)):0,1:1)
"RTN","SCMCTPU",22,0)
 ;
"RTN","SCMCTPU",23,0)
ACTTP(SCTP,SCDT) ;is the team position currently active?
"RTN","SCMCTPU",24,0)
 ; Used by computed field #300 (CURRENTLY ACTIVE?) OF file #404.57
"RTN","SCMCTPU",25,0)
 ; Input:
"RTN","SCMCTPU",26,0)
 ;  SCTP  - Pointer to Team Position file #404.57
"RTN","SCMCTPU",27,0)
 ;  SCDT  - Date to check for, Default=DT
"RTN","SCMCTPU",28,0)
 ; Returns
"RTN","SCMCTPU",29,0)
 ;   status^status change date
"RTN","SCMCTPU",30,0)
 ; status:
"RTN","SCMCTPU",31,0)
 ;   1  if after effective date and before inactive date
"RTN","SCMCTPU",32,0)
 ;   0  if not yet active or inactivated
"RTN","SCMCTPU",33,0)
 ;   -1 if error
"RTN","SCMCTPU",34,0)
 ;
"RTN","SCMCTPU",35,0)
 ;new code
"RTN","SCMCTPU",36,0)
 N SCX,STATUS,EFFDT
"RTN","SCMCTPU",37,0)
 S:'$D(SCDT) SCDT=DT
"RTN","SCMCTPU",38,0)
 S SCX=$$DATES^SCAPMCU1(404.59,SCTP,SCDT)
"RTN","SCMCTPU",39,0)
 S STATUS=$P(SCX,U,1)
"RTN","SCMCTPU",40,0)
 S EFFDT=$S(STATUS=0:$P(SCX,U,3),(STATUS=1):$P(SCX,U,2),1:"")
"RTN","SCMCTPU",41,0)
QTACTTP Q STATUS_U_EFFDT
"RTN","SCMCTPU",42,0)
 ;
"RTN","SCMCTPU",43,0)
ITSCF(CRITERIA,REPORT,X) ;
"RTN","SCMCTPU",44,0)
 ;Input transform for 404.93
"RTN","SCMCTPU",45,0)
 ;CRITERIA - value of the .01 in 404.93 for entry DA
"RTN","SCMCTPU",46,0)
 ;REPORT - value of the .02 in 404.93 for entry DA
"RTN","SCMCTPU",47,0)
 ;X - value entered by user
"RTN","SCMCTPU",48,0)
 ;X is killed if duplicate
"RTN","SCMCTPU",49,0)
 ;
"RTN","SCMCTPU",50,0)
 Q:'$G(DA)!'$D(X)
"RTN","SCMCTPU",51,0)
 S:'$D(CRITERIA) CRITERIA=$P($G(^SD(404.93,DA,0)),U)
"RTN","SCMCTPU",52,0)
 S:'$D(REPORT)#2 REPORT=$P($G(^SD(404.93,DA,0)),U,2)
"RTN","SCMCTPU",53,0)
 I $D(^SD(404.93,"APRIM",CRITERIA,REPORT)) D
"RTN","SCMCTPU",54,0)
 .D EN^DDIOL("Duplicate Criteria Not Allowed for Same Report","","?5")
"RTN","SCMCTPU",55,0)
 .K X
"RTN","SCMCTPU",56,0)
 Q
"RTN","SCMCTPU",57,0)
 ;
"RTN","SCMCTPU",58,0)
AKEY(REPORT,SORT,X) ;
"RTN","SCMCTPU",59,0)
 ;Input transform for 404.92
"RTN","SCMCTPU",60,0)
 ;REPORT - value of the .01 in 404.92 for entry DA
"RTN","SCMCTPU",61,0)
 ;SORT - value of the .02 in 404.92 for entry DA
"RTN","SCMCTPU",62,0)
 ;X - value entered by user
"RTN","SCMCTPU",63,0)
 ;X is killed if duplicate
"RTN","SCMCTPU",64,0)
 ;
"RTN","SCMCTPU",65,0)
 Q:'$G(DA)!'$D(X)
"RTN","SCMCTPU",66,0)
 S:'$D(REPORT) REPORT=$P($G(^SD(404.92,DA,0)),U)
"RTN","SCMCTPU",67,0)
 S:'$D(SORT)#2 SORT=$P($G(^SD(404.92,DA,0)),U,2)
"RTN","SCMCTPU",68,0)
 I $D(^SD(404.92,"AKEY",REPORT,SORT)) D
"RTN","SCMCTPU",69,0)
 .D EN^DDIOL("Duplicate SORT BY TEXT Not Allowed for Same Report","","?5")
"RTN","SCMCTPU",70,0)
 .K X
"RTN","SCMCTPU",71,0)
 Q
"RTN","SCMCTPU",72,0)
 ;
"RTN","SCMCTPU",73,0)
IPTF(POSITION,TEAM,X) ;input transform for 404.57
"RTN","SCMCTPU",74,0)
 ;kills x if duplicate
"RTN","SCMCTPU",75,0)
 Q:'$G(DIUTIL)="VERIFY FIELDS"
"RTN","SCMCTPU",76,0)
 Q:'$G(DA)!'$D(X)
"RTN","SCMCTPU",77,0)
 S:'$D(POSITION) POSITION=$P($G(^SCTM(404.57,DA,0)),U,1)
"RTN","SCMCTPU",78,0)
 S:'$D(TEAM)#2 TEAM=$P($G(^SCTM(404.57,DA,0)),U,2)
"RTN","SCMCTPU",79,0)
 ;S:'$G(TEAM) TEAM=$O(^SCTM(404.51,"B",TEAM,0))
"RTN","SCMCTPU",80,0)
 IF $D(^SCTM(404.57,"APRIMARY",POSITION,TEAM)) D
"RTN","SCMCTPU",81,0)
 .D EN^DDIOL("Duplicate Team Positions Not Allowed","","?5")
"RTN","SCMCTPU",82,0)
 .K X
"RTN","SCMCTPU",83,0)
 Q
"RTN","SCMCTPU",84,0)
OKACTTP(SCNODE,ACTDT) ;input transform for position assigned date for 404.43
"RTN","SCMCTPU",85,0)
 ;
"RTN","SCMCTPU",86,0)
 N OK
"RTN","SCMCTPU",87,0)
 S OK=1
"RTN","SCMCTPU",88,0)
 ;must have input defined
"RTN","SCMCTPU",89,0)
 IF '$D(SCNODE)#2!('$G(ACTDT)) S OK=0_U_"Bad input data" G QTOKAC
"RTN","SCMCTPU",90,0)
 ;if inactivation exists must be after activation
"RTN","SCMCTPU",91,0)
 S:$P(SCNODE,U,4)&($P(SCNODE,U,4)<ACTDT) OK=0_U_"Inactivation date is after this date"
"RTN","SCMCTPU",92,0)
 ;position must be active during assignment activation
"RTN","SCMCTPU",93,0)
 S:'$$ACTTP(+$P(SCNODE,U,2),ACTDT) OK=0_U_"Position Not active on this date"
"RTN","SCMCTPU",94,0)
 S:1>$$ACTPTTM(+$P(SCNODE,U,1),ACTDT) OK=0_U_"No active Patient Team Assignment on this date"
"RTN","SCMCTPU",95,0)
QTOKAC Q OK
"RTN","SCMCTPU",96,0)
OKINTP(SCNODE,INACTDT) ;input transform for inactivation date for 404.43
"RTN","SCMCTPU",97,0)
 ;
"RTN","SCMCTPU",98,0)
 N OK
"RTN","SCMCTPU",99,0)
 S OK=1
"RTN","SCMCTPU",100,0)
 ;must have input defined
"RTN","SCMCTPU",101,0)
 IF '$D(SCNODE)#2!('$G(INACTDT)) S OK=0 G QTOKIN
"RTN","SCMCTPU",102,0)
 ;must have activation date
"RTN","SCMCTPU",103,0)
 S:'$P(SCNODE,U,3) OK=0_U_"No activation date in Pt Team Assignment"
"RTN","SCMCTPU",104,0)
 ;activation date can't be after inactivation
"RTN","SCMCTPU",105,0)
 S:$P(SCNODE,U,3)>INACTDT OK=0_U_"Activation date is after this date"
"RTN","SCMCTPU",106,0)
 ;inactivation must be during time when position is active
"RTN","SCMCTPU",107,0)
 S:'$$ACTTP(+$P(SCNODE,U,2),INACTDT) OK=0_U_"Inactivation date must be when position is active"
"RTN","SCMCTPU",108,0)
QTOKIN Q OK
"RTN","SCMCTPU",109,0)
 ;
"RTN","SCMCTPU",110,0)
OKTP(DA,SCX) ;used by team position field of 404.43
"RTN","SCMCTPU",111,0)
 N OK,SCTM,SCPTTMA,SCNODE
"RTN","SCMCTPU",112,0)
 S SCNODE=$G(^SCPT(404.43,DA,0))
"RTN","SCMCTPU",113,0)
 S OK=1
"RTN","SCMCTPU",114,0)
 ;must have input defined
"RTN","SCMCTPU",115,0)
 IF '$D(SCNODE)#2!('$G(SCX)) S OK=0 G QTOKTP
"RTN","SCMCTPU",116,0)
 S SCTM=$P($G(^SCTM(404.57,SCX,0)),U,2)
"RTN","SCMCTPU",117,0)
 S SCPTTMA=$P(SCNODE,U,1)
"RTN","SCMCTPU",118,0)
 S:$P($G(^SCPT(404.42,SCPTTMA,0)),U,3)'=SCTM OK=0_U_"Team Position Must be from Team in Pt Team Assignment"
"RTN","SCMCTPU",119,0)
QTOKTP Q OK
"RTN","SCMCTPU",120,0)
 ;
"RTN","SCMCTPU",121,0)
OKROLE(DA,SCX) ;used by role .05 field of 404.43
"RTN","SCMCTPU",122,0)
 N OK,SCNODE,SCPTTMA,SCPC
"RTN","SCMCTPU",123,0)
 S SCNODE=$G(^SCPT(404.43,DA,0))
"RTN","SCMCTPU",124,0)
 S OK=1
"RTN","SCMCTPU",125,0)
 ;must have input defined
"RTN","SCMCTPU",126,0)
 IF '$D(SCNODE)#2!('$D(SCX)) S OK=0_U_"Undefined Patient Team Data" G QTOKTP
"RTN","SCMCTPU",127,0)
 S SCPTTMA=$P(SCNODE,U,1)
"RTN","SCMCTPU",128,0)
 S:$P($G(^SCPT(404.42,SCPTTMA,0)),U,8)=1 SCPC=1
"RTN","SCMCTPU",129,0)
 ;if not a pc team & role is a pc role - not ok
"RTN","SCMCTPU",130,0)
 S:('$G(SCPC))&$G(SCX) OK=0_U_"PC Roles only allowed if Pt Team Assignment is for Primary Care"
"RTN","SCMCTPU",131,0)
QTOKRL Q OK
"RTN","SCMCTPU",132,0)
 ;
"RTN","SCMCTPU",133,0)
USEUSR() ;should user class functionality be employed?
"RTN","SCMCTPU",134,0)
 ;  Returned [1=Use USR Class,0=Don't)
"RTN","SCMCTPU",135,0)
 Q +$G(^SD(404.91,1,"PCMM"))
"RTN","SCMCTPU",136,0)
 ;
"RTN","SCMCTPU",137,0)
ACCLIN(SC44,DATE) ;is clinic active on this date?
"RTN","SCMCTPU",138,0)
 ;  Return: 1=Yes,0=N0
"RTN","SCMCTPU",139,0)
 N SCX
"RTN","SCMCTPU",140,0)
 S SCX=+$G(^SC(+$G(SC44),"I"))
"RTN","SCMCTPU",141,0)
 Q $S('SCX:1,(SCX>DATE):1,1:0)
"RTN","SCMCTPU2")
0^145^B4141112
"RTN","SCMCTPU2",1,0)
SCMCTPU2 ;ALB/REW - Team Position Utilities ; 9 Jun 1995
"RTN","SCMCTPU2",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCTPU2",3,0)
 ;1
"RTN","SCMCTPU2",4,0)
OKACPTTP(DFN,SCTP,DATE,ACTIVE) ;is it ok to activate pt pos assignment?
"RTN","SCMCTPU2",5,0)
 N SCOK,SCDT,SCNODE,SCINACT
"RTN","SCMCTPU2",6,0)
 S SCOK=1
"RTN","SCMCTPU2",7,0)
 G:'$D(^SCPT(404.43,"ADFN",DFN)) ENDOK  ;quick check
"RTN","SCMCTPU2",8,0)
 ;is position active now(if checking)?
"RTN","SCMCTPU2",9,0)
 IF $G(ACTIVE) D  G:'SCOK ENDOK
"RTN","SCMCTPU2",10,0)
 . S SCOK=+$$ACTTP^SCMCTPU(SCTP,DATE)
"RTN","SCMCTPU2",11,0)
 ;is the patient assigned to this position either now or in future?
"RTN","SCMCTPU2",12,0)
 S SCDT=$O(^SCPT(404.43,"ADFN",DFN,SCTP,3990101),-1)
"RTN","SCMCTPU2",13,0)
 S SCPTTP=$O(^SCPT(404.43,"ADFN",DFN,SCTP,+SCDT,0))
"RTN","SCMCTPU2",14,0)
 IF SCPTTP D
"RTN","SCMCTPU2",15,0)
 .S SCNODE=$G(^SCPT(404.43,SCPTTP,0))
"RTN","SCMCTPU2",16,0)
 .S SCINACT=$P(SCNODE,U,4)
"RTN","SCMCTPU2",17,0)
 .IF ('SCINACT)!(SCINACT>DATE) D
"RTN","SCMCTPU2",18,0)
 ..S SCOK=0   ;no inactive date or inact after date
"RTN","SCMCTPU2",19,0)
ENDOK Q SCOK
"RTN","SCMCTPU2",20,0)
 ;
"RTN","SCMCTPU2",21,0)
PCRLPTTP(DFN,SCTP,DATE) ; can position be pc practitioner or pc attending
"RTN","SCMCTPU2",22,0)
 ; return yes pract^yes attend
"RTN","SCMCTPU2",23,0)
 Q $$CHKROLE(DFN,SCTP,DATE,1)_U_$$CHKROLE(DFN,SCTP,DATE,2)
"RTN","SCMCTPU2",24,0)
 ;
"RTN","SCMCTPU2",25,0)
CHKROLE(DFN,SCTP,DATE,ROLE) ;can position file role for patient?
"RTN","SCMCTPU2",26,0)
 ;this is not a stand-alone function
"RTN","SCMCTPU2",27,0)
 N SCCUR,SCDT,SCTPRL,SCPTTP,SCOK,SCNODE,SCINACT,SCACT
"RTN","SCMCTPU2",28,0)
 S SCOK=1
"RTN","SCMCTPU2",29,0)
 IF $G(ROLE)&('$P($G(^SCTM(404.57,+$G(SCTP),0)),U,4)) S SCOK=0 G QTCHKRL
"RTN","SCMCTPU2",30,0)
 S SCDT=$O(^SCPT(404.43,"APCPOS",DFN,ROLE,3990101),-1)
"RTN","SCMCTPU2",31,0)
 S SCTPRL=$O(^SCPT(404.43,"APCPOS",DFN,ROLE,+SCDT,0))
"RTN","SCMCTPU2",32,0)
 S SCPTTP=$O(^SCPT(404.43,"APCPOS",DFN,ROLE,+SCDT,+SCTPRL,0))
"RTN","SCMCTPU2",33,0)
 ;check if active
"RTN","SCMCTPU2",34,0)
 IF SCPTTP D
"RTN","SCMCTPU2",35,0)
 .S SCNODE=$G(^SCPT(404.43,SCPTTP,0))
"RTN","SCMCTPU2",36,0)
 .S SCACT=$P(SCNODE,U,3)
"RTN","SCMCTPU2",37,0)
 .Q:(DATE=SCACT)&(SCTP=SCTPRL)  ;if this date & position (editing current
"RTN","SCMCTPU2",38,0)
 .S SCINACT=$P(SCNODE,U,4)
"RTN","SCMCTPU2",39,0)
 .IF SCINACT D
"RTN","SCMCTPU2",40,0)
 ..IF SCINACT>DATE D
"RTN","SCMCTPU2",41,0)
 ...S SCOK=0  ;no making pc role before currently defined
"RTN","SCMCTPU2",42,0)
 .ELSE  D
"RTN","SCMCTPU2",43,0)
 ..S SCOK=0   ;no making pc role without inactivating current
"RTN","SCMCTPU2",44,0)
QTCHKRL Q SCOK
"RTN","SCMCU1")
0^132^B2004065
"RTN","SCMCU1",1,0)
SCMCU1 ;ALB/CMM - Team Information Display ; 03/25/96
"RTN","SCMCU1",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCMCU1",3,0)
 ;
"RTN","SCMCU1",4,0)
 ;action on Appointment Management
"RTN","SCMCU1",5,0)
 ;
"RTN","SCMCU1",6,0)
SEL ;selection - getting patient
"RTN","SCMCU1",7,0)
 N ENT
"RTN","SCMCU1",8,0)
 I '$D(@VALMAR@("IDX")) S TDFN=$$GETPT() Q
"RTN","SCMCU1",9,0)
 ; ^ no selections available, prompt for patient?
"RTN","SCMCU1",10,0)
 D EN^VALM2(XQORNOD(0),"S")
"RTN","SCMCU1",11,0)
 S ENT=$O(VALMY(0))
"RTN","SCMCU1",12,0)
 I ENT="" S TDFN=$$GETPT() Q
"RTN","SCMCU1",13,0)
 I '$D(^TMP("SDAMIDX",$J,ENT)) S TDFN=0 Q
"RTN","SCMCU1",14,0)
 S TDFN=+$P($G(^TMP("SDAMIDX",$J,ENT)),"^",2)
"RTN","SCMCU1",15,0)
 Q
"RTN","SCMCU1",16,0)
 ;
"RTN","SCMCU1",17,0)
GETPT() ;function to get patient
"RTN","SCMCU1",18,0)
 I $G(VALMHDR(1))?.E1"Patient:".E Q SDFN
"RTN","SCMCU1",19,0)
 N TDFN
"RTN","SCMCU1",20,0)
 S DIC="^DPT(",DIC(0)="AEQM",DIC("A")="Select Patient: "
"RTN","SCMCU1",21,0)
 D ^DIC
"RTN","SCMCU1",22,0)
 K DIC
"RTN","SCMCU1",23,0)
 I X=""!(X["^")!(+Y<0) S TDFN=0
"RTN","SCMCU1",24,0)
 S TDFN=+Y
"RTN","SCMCU1",25,0)
 Q TDFN
"RTN","SCMCU1",26,0)
 ;
"RTN","SCMCU1",27,0)
INIT ;gather team data
"RTN","SCMCU1",28,0)
 N GBL
"RTN","SCMCU1",29,0)
 I TDFN=0 S VALMQUIT="" Q
"RTN","SCMCU1",30,0)
 S GBL="^TMP(""SCTI"","_$J_")"
"RTN","SCMCU1",31,0)
 K @GBL
"RTN","SCMCU1",32,0)
 S SDLN=1
"RTN","SCMCU1",33,0)
 D SET^SDPPTEM("                  *** Team Information ***")
"RTN","SCMCU1",34,0)
 D CNTRL^VALM10(SDLN,15,45,IOINHI,IOINORM)
"RTN","SCMCU1",35,0)
 D SET^SDPPTEM("")
"RTN","SCMCU1",36,0)
 D TDATA^SDPPTEM(TDFN)
"RTN","SCMCU1",37,0)
 S VALMCNT=SDLN
"RTN","SCMCU1",38,0)
 Q
"RTN","SCMCU1",39,0)
 ;
"RTN","SCMCU1",40,0)
HDR ;header code
"RTN","SCMCU1",41,0)
 N PTNAME
"RTN","SCMCU1",42,0)
 S PTNAME=$P($G(^DPT(TDFN,0)),"^")
"RTN","SCMCU1",43,0)
 S VALMHDR(2)="Patient: "_PTNAME
"RTN","SCMCU1",44,0)
 S VALMPGE=1 ;start at page 1
"RTN","SCMCU1",45,0)
 Q
"RTN","SCRPBK")
0^83^B8319188
"RTN","SCRPBK",1,0)
SCRPBK ;MJK/ALB - RPC Broker Utilities ; 27 FEB 96
"RTN","SCRPBK",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPBK",3,0)
 ;
"RTN","SCRPBK",4,0)
GETREC(SCDATA,SCRPT) ; -- get REPORT record
"RTN","SCRPBK",5,0)
 ; input  :     SCRPT := ien of report definition
"RTN","SCRPBK",6,0)
 ; output : SCDATA is the return array
"RTN","SCRPBK",7,0)
 ;          SCDATA(0) := 0th node of rpt def
"RTN","SCRPBK",8,0)
 ;             (1..n) := sections for
"RTN","SCRPBK",9,0)
 ;                       [Description], [Sorts], [Fields], [Files]
"RTN","SCRPBK",10,0)
 ;
"RTN","SCRPBK",11,0)
 ; Related RPC: SCRP DEFINITION GETRECORD
"RTN","SCRPBK",12,0)
 ;
"RTN","SCRPBK",13,0)
 N SC,X,SCINC
"RTN","SCRPBK",14,0)
 S SCINC=-1,SCRPT=+SCRPT
"RTN","SCRPBK",15,0)
 ; -- get 0th node of team
"RTN","SCRPBK",16,0)
 S X=$$RPTDEF(SCRPT)
"RTN","SCRPBK",17,0)
 ; -- add to return array
"RTN","SCRPBK",18,0)
 D SET(X,.SCINC,.SCDATA)
"RTN","SCRPBK",19,0)
 ; -- get description
"RTN","SCRPBK",20,0)
 D DESC(.SCINC,SCRPT,.SCDATA)
"RTN","SCRPBK",21,0)
 ; -- get sorts
"RTN","SCRPBK",22,0)
 D SORTS(.SCINC,SCRPT,.SCDATA)
"RTN","SCRPBK",23,0)
 ; -- get fields
"RTN","SCRPBK",24,0)
 D FIELDS(.SCINC,SCRPT,.SCDATA)
"RTN","SCRPBK",25,0)
 ; -- get files
"RTN","SCRPBK",26,0)
 D FILES(.SCINC,SCRPT,.SCDATA)
"RTN","SCRPBK",27,0)
 Q
"RTN","SCRPBK",28,0)
 ;
"RTN","SCRPBK",29,0)
SET(X,INC,SCDATA) ; -- set value in return array
"RTN","SCRPBK",30,0)
 S INC=$G(INC)+1,SCDATA(INC)=X
"RTN","SCRPBK",31,0)
 Q
"RTN","SCRPBK",32,0)
 ;
"RTN","SCRPBK",33,0)
RPTDEF(SCRPT) ; -- retrieve rpt def demographics
"RTN","SCRPBK",34,0)
 N X,Y
"RTN","SCRPBK",35,0)
 S X=$G(^SD(404.92,SCRPT,0))
"RTN","SCRPBK",36,0)
 S Y=$P(X,U)_U_$P($G(^SD(404.94,+$P(X,U,2),0)),U)
"RTN","SCRPBK",37,0)
 Q Y
"RTN","SCRPBK",38,0)
 ;
"RTN","SCRPBK",39,0)
DESC(SCINC,SCRPT,SCDATA) ; -- get rpt description
"RTN","SCRPBK",40,0)
 N I,X
"RTN","SCRPBK",41,0)
 D SET("[Description]",.SCINC,.SCDATA)
"RTN","SCRPBK",42,0)
 S I=0 F  S I=$O(^SD(404.92,SCRPT,1,I)) Q:'I  S X=$G(^(I,0)) D
"RTN","SCRPBK",43,0)
 . D SET(X,.SCINC,.SCDATA)
"RTN","SCRPBK",44,0)
 D SET("$$END",.SCINC,.SCDATA)
"RTN","SCRPBK",45,0)
 Q
"RTN","SCRPBK",46,0)
 ;
"RTN","SCRPBK",47,0)
SORTS(SCINC,SCRPT,SCDATA) ; -- get possible sorts
"RTN","SCRPBK",48,0)
 N I,X
"RTN","SCRPBK",49,0)
 D SET("[Sorts]",.SCINC,.SCDATA)
"RTN","SCRPBK",50,0)
 S I=0 F  S I=$O(^SD(404.92,SCRPT,"SORTS",I)) Q:'I  S X=$G(^(I,0)) D
"RTN","SCRPBK",51,0)
 . D SET(X,.SCINC,.SCDATA)
"RTN","SCRPBK",52,0)
 D SET("$$END",.SCINC,.SCDATA)
"RTN","SCRPBK",53,0)
 Q
"RTN","SCRPBK",54,0)
 ;
"RTN","SCRPBK",55,0)
FIELDS(SCINC,SCRPT,SCDATA) ; -- get fields to ask
"RTN","SCRPBK",56,0)
 N I,X,Y
"RTN","SCRPBK",57,0)
 D SET("[Fields]",.SCINC,.SCDATA)
"RTN","SCRPBK",58,0)
 S I=0 F  S I=$O(^SD(404.92,SCRPT,"FIELDS",I)) Q:'I  S X=$G(^(I,0)) D
"RTN","SCRPBK",59,0)
 . S Y=""
"RTN","SCRPBK",60,0)
 . S Y=Y_$P($G(^SD(404.93,+X,0)),U,2)_U ; component name
"RTN","SCRPBK",61,0)
 . S Y=Y_$P(X,U,2)_U ; required
"RTN","SCRPBK",62,0)
 . S Y=Y_$P(X,U,3)_U ; always ask
"RTN","SCRPBK",63,0)
 . S Y=Y_$P(X,U,4)_U ; default value
"RTN","SCRPBK",64,0)
 . D SET(Y,.SCINC,.SCDATA)
"RTN","SCRPBK",65,0)
 D SET("$$END",.SCINC,.SCDATA)
"RTN","SCRPBK",66,0)
 Q
"RTN","SCRPBK",67,0)
 ;
"RTN","SCRPBK",68,0)
FILES(SCINC,SCRPT,SCDATA) ; -- get files to select
"RTN","SCRPBK",69,0)
 N I,X,Y,SCTYPE
"RTN","SCRPBK",70,0)
 D SET("[Files]",.SCINC,.SCDATA)
"RTN","SCRPBK",71,0)
 S I=0 F  S I=$O(^SD(404.92,SCRPT,"FILES",I)) Q:'I  S X=$G(^(I,0)) D
"RTN","SCRPBK",72,0)
 . S SCTYPE=$$TYPE(+X)
"RTN","SCRPBK",73,0)
 . S Y=""
"RTN","SCRPBK",74,0)
 . S Y=Y_SCTYPE_U ; file type
"RTN","SCRPBK",75,0)
 . S Y=Y_+X_U ; file #
"RTN","SCRPBK",76,0)
 . S Y=Y_+$P(X,U,2)_U ; selections allowed
"RTN","SCRPBK",77,0)
 . IF $$CHKTYPE^SCRPBK2(SCTYPE) D SET(Y,.SCINC,.SCDATA)
"RTN","SCRPBK",78,0)
 D SET("$$END",.SCINC,.SCDATA)
"RTN","SCRPBK",79,0)
 Q
"RTN","SCRPBK",80,0)
 ;
"RTN","SCRPBK",81,0)
TYPE(FILENUM) ; -- determine file type for file
"RTN","SCRPBK",82,0)
 N X
"RTN","SCRPBK",83,0)
 S X=""
"RTN","SCRPBK",84,0)
 IF FILENUM=4 S X="DIVISION" G TYPEQ
"RTN","SCRPBK",85,0)
 IF FILENUM=404.51 S X="TEAM" G TYPEQ
"RTN","SCRPBK",86,0)
 IF FILENUM=200 S X="PRACTITIONER" G TYPEQ
"RTN","SCRPBK",87,0)
 IF FILENUM=403.46 S X="ROLE" G TYPEQ
"RTN","SCRPBK",88,0)
 IF FILENUM=8930 S X="USERCLASS" G TYPEQ
"RTN","SCRPBK",89,0)
 IF FILENUM=44 S X="CLINIC" G TYPEQ
"RTN","SCRPBK",90,0)
TYPEQ Q X
"RTN","SCRPBK",91,0)
 ;
"RTN","SCRPBK",92,0)
 ;
"RTN","SCRPBK",93,0)
 ; -- variable descriptions for SCRPBK* routines 
"RTN","SCRPBK",94,0)
 ; SCDATA  -> result return array
"RTN","SCRPBK",95,0)
 ; SCINC   -> incrmental variable used when build SCDATA
"RTN","SCRPBK",96,0)
 ; SCQRY   -> ien of 404.95
"RTN","SCRPBK",97,0)
 ; SCQDEF  -> raw query defintion received from client
"RTN","SCRPBK",98,0)
 ; SCQREC  -> query definition
"RTN","SCRPBK",99,0)
 ; SCRPT   -> ien of 404.92 - query definition
"RTN","SCRPBK",100,0)
 ; SCRPTID -> ien of 404.92 - report definifion
"RTN","SCRPBK",101,0)
 ; SCRPT   -> report name
"RTN","SCRPBK",102,0)
 ; SCTYPE  -> selection file type (DIVISION, TEAM, etc.)
"RTN","SCRPBK",103,0)
 ; SCGLB   -> closed global root of a file [i.e. ^SC]
"RTN","SCRPBK",104,0)
 ; SCAN    -> array where the name of used/required report
"RTN","SCRPBK",105,0)
 ;            fields or file selections are stored
"RTN","SCRPBK",106,0)
 ; SCPROC  -> process being performed when error occured
"RTN","SCRPBK",107,0)
 ; SCPARM()-> error parameters to be used by BLD^DIALOG call
"RTN","SCRPBK",108,0)
 ; SCLOG   -> contains the array name where application generated
"RTN","SCRPBK",109,0)
 ;            error messages are stored(usually SCDATA)
"RTN","SCRPBK",110,0)
 ; SCERR() -> array where FM DBS generated errors are stored
"RTN","SCRPBK",111,0)
 ; SCTEXT  -> text used to search files
"RTN","SCRPBK",112,0)
 ; SCSELS()-> array of file entry selections
"RTN","SCRPBK",113,0)
 ; VAUTD() -> array of divisions subscripted by iens
"RTN","SCRPBK",114,0)
 ; VAUTT() -> array of teams subscripted by iens
"RTN","SCRPBK",115,0)
 ; VAUTP() -> array of practitioners subscripted by iens
"RTN","SCRPBK",116,0)
 ; VAUTR() -> array of roles subscripted by iens
"RTN","SCRPBK",117,0)
 ; VAUTC() -> array of clinics subscripted by iens
"RTN","SCRPBK",118,0)
 ; VAUTUC()-> array of user classes subscripted by iens
"RTN","SCRPBK",119,0)
 ; 
"RTN","SCRPBK0")
0^84^B7851287
"RTN","SCRPBK0",1,0)
SCRPBK0 ;MJK/ALB - RPC Broker Utilities ; 27 FEB 96
"RTN","SCRPBK0",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPBK0",3,0)
 ;
"RTN","SCRPBK0",4,0)
GETREC(SCDATA,SCQRY) ; -- get QUERY record
"RTN","SCRPBK0",5,0)
 ; input  :    SCQRY := ien of query definition
"RTN","SCRPBK0",6,0)
 ; output : SCDATA is the return array
"RTN","SCRPBK0",7,0)
 ;          SCDATA(0) := 0th node of qry def
"RTN","SCRPBK0",8,0)
 ;                (1) := externals for 0th
"RTN","SCRPBK0",9,0)
 ;             (2..n) := sections for
"RTN","SCRPBK0",10,0)
 ;                       [Description], [Fields], [Selections]
"RTN","SCRPBK0",11,0)
 ;
"RTN","SCRPBK0",12,0)
 ; -- SEE BOTTOM OF SCRPBK FOR MORE VARIABLE DEFINITIONS
"RTN","SCRPBK0",13,0)
 ;
"RTN","SCRPBK0",14,0)
 ; Related RPC: SCRP QUERY GETRECORD
"RTN","SCRPBK0",15,0)
 ;
"RTN","SCRPBK0",16,0)
 N SC,X,SCINC
"RTN","SCRPBK0",17,0)
 S SCINC=-1,SCQRY=+SCQRY
"RTN","SCRPBK0",18,0)
 ; -- get 0th node of team 
"RTN","SCRPBK0",19,0)
 D QRYDEF(.X,SCQRY)
"RTN","SCRPBK0",20,0)
 ; -- add 0TH to return array
"RTN","SCRPBK0",21,0)
 D SET(X(0),.SCINC,.SCDATA)
"RTN","SCRPBK0",22,0)
 ; -- add external values for 0th to ret array
"RTN","SCRPBK0",23,0)
 D SET(X(1),.SCINC,.SCDATA)
"RTN","SCRPBK0",24,0)
 ; -- get description
"RTN","SCRPBK0",25,0)
 D DESC(.SCINC,SCQRY,.SCDATA)
"RTN","SCRPBK0",26,0)
 ; -- get fields
"RTN","SCRPBK0",27,0)
 D FIELDS(.SCINC,SCQRY,.SCDATA)
"RTN","SCRPBK0",28,0)
 ; -- get files
"RTN","SCRPBK0",29,0)
 D SELECT(.SCINC,SCQRY,.SCDATA)
"RTN","SCRPBK0",30,0)
 Q
"RTN","SCRPBK0",31,0)
 ;
"RTN","SCRPBK0",32,0)
SET(X,INC,SCDATA) ; -- set value in return array
"RTN","SCRPBK0",33,0)
 S INC=$G(INC)+1,SCDATA(INC)=X
"RTN","SCRPBK0",34,0)
 Q
"RTN","SCRPBK0",35,0)
 ;
"RTN","SCRPBK0",36,0)
QRYDEF(X,SCQRY) ; -- retrieve rpt def demographics
"RTN","SCRPBK0",37,0)
 N Y,Z
"RTN","SCRPBK0",38,0)
 S Y=$G(^SD(404.95,SCQRY,0))
"RTN","SCRPBK0",39,0)
 S X(0)=Y ; 0th node
"RTN","SCRPBK0",40,0)
 S X(1)=SCQRY ; query name
"RTN","SCRPBK0",41,0)
 S $P(X(1),U,2)=$P($G(^VA(200,+$P(Y,U,2),0)),U) ; creator
"RTN","SCRPBK0",42,0)
 S $P(X(1),U,3)=$S($P(Y,U,3)=1:"PRIVATE",1:"PUBLIC") ; access level
"RTN","SCRPBK0",43,0)
 S $P(X(1),U,4)=$P($G(^SD(404.92,+$P(Y,U,4),0)),U) ; report name
"RTN","SCRPBK0",44,0)
 S $P(X(1),U,5)=$$FMTE^XLFDT($P(Y,U,5),"2FP")
"RTN","SCRPBK0",45,0)
 Q
"RTN","SCRPBK0",46,0)
 ;
"RTN","SCRPBK0",47,0)
DESC(SCINC,SCQRY,SCDATA) ; -- get query description
"RTN","SCRPBK0",48,0)
 N I,X
"RTN","SCRPBK0",49,0)
 D SET("[Description]",.SCINC,.SCDATA)
"RTN","SCRPBK0",50,0)
 S I=0 F  S I=$O(^SD(404.95,SCQRY,1,I)) Q:'I  S X=$G(^(I,0)) D
"RTN","SCRPBK0",51,0)
 . D SET(X,.SCINC,.SCDATA)
"RTN","SCRPBK0",52,0)
 D SET("$$END",.SCINC,.SCDATA)
"RTN","SCRPBK0",53,0)
 Q
"RTN","SCRPBK0",54,0)
 ;
"RTN","SCRPBK0",55,0)
FIELDS(SCINC,SCQRY,SCDATA) ; -- get fields to ask
"RTN","SCRPBK0",56,0)
 N I,X,Y
"RTN","SCRPBK0",57,0)
 D SET("[Fields]",.SCINC,.SCDATA)
"RTN","SCRPBK0",58,0)
 S I=0 F  S I=$O(^SD(404.95,SCQRY,"FIELDS",I)) Q:'I  S X=$G(^(I,0)) D
"RTN","SCRPBK0",59,0)
 . S Y=""
"RTN","SCRPBK0",60,0)
 . S Y=Y_$P($G(^SD(404.93,+X,0)),U,2)_U ; component name
"RTN","SCRPBK0",61,0)
 . S Y=Y_$P(X,U,2)_U ; value
"RTN","SCRPBK0",62,0)
 . D SET(Y,.SCINC,.SCDATA)
"RTN","SCRPBK0",63,0)
 D SET("$$END",.SCINC,.SCDATA)
"RTN","SCRPBK0",64,0)
 Q
"RTN","SCRPBK0",65,0)
 ;
"RTN","SCRPBK0",66,0)
SELECT(SCINC,SCQRY,SCDATA) ; -- get files to select
"RTN","SCRPBK0",67,0)
 N I,X,Y
"RTN","SCRPBK0",68,0)
 D SET("[Selections]",.SCINC,.SCDATA)
"RTN","SCRPBK0",69,0)
 S I=0 F  S I=$O(^SD(404.95,SCQRY,"FILES",I)) Q:'I  S X=$G(^(I,0)) D
"RTN","SCRPBK0",70,0)
 . IF X["DIC(4" S SCGLB="^DIC(4)",SCTYPE="DIVISION"
"RTN","SCRPBK0",71,0)
 . IF X["SCTM(404.51" S SCGLB="^SCTM(404.51)",SCTYPE="TEAM"
"RTN","SCRPBK0",72,0)
 . IF X["VA(200" S SCGLB="^VA(200)",SCTYPE="PRACTITIONER"
"RTN","SCRPBK0",73,0)
 . IF X["SD(403.46" S SCGLB="^SD(403.46)",SCTYPE="ROLE"
"RTN","SCRPBK0",74,0)
 . IF X["USR(8930" S SCGLB="^USR(8930)",SCTYPE="USERCLASS"
"RTN","SCRPBK0",75,0)
 . IF X["SC(" S SCGLB="^SC",SCTYPE="CLINIC"
"RTN","SCRPBK0",76,0)
 . IF $D(@SCGLB@(+X,0)) D SET($P(^(0),U)_U_SCTYPE_U_+X,.SCINC,.SCDATA)
"RTN","SCRPBK0",77,0)
 D SET("$$END",.SCINC,.SCDATA)
"RTN","SCRPBK0",78,0)
 Q
"RTN","SCRPBK0",79,0)
 ;
"RTN","SCRPBK1")
0^85^B16332067
"RTN","SCRPBK1",1,0)
SCRPBK1 ;MJK/ALB - RPC Broker Utilities ; 27 FEB 96
"RTN","SCRPBK1",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPBK1",3,0)
 ;
"RTN","SCRPBK1",4,0)
GETDATA(SCDATA,SCTYPE,SCRPTID,SCRPTN,SCTEXT,SCSELS) ;
"RTN","SCRPBK1",5,0)
 ; -- get file type entries for Selections form
"RTN","SCRPBK1",6,0)
 ;
"RTN","SCRPBK1",7,0)
 ; output:  SCDATA(1..n) := info about entity
"RTN","SCRPBK1",8,0)
 ;
"RTN","SCRPBK1",9,0)
 ; -- SEE BOTTOM OF SCRPBK FOR MORE VARIABLE DEFINITIONS
"RTN","SCRPBK1",10,0)
 ;
"RTN","SCRPBK1",11,0)
 ; Related RPC: SCRP SELECTION SOURCE
"RTN","SCRPBK1",12,0)
 ;
"RTN","SCRPBK1",13,0)
 IF SCTYPE="DIVISION" D DIV G GETDATAQ
"RTN","SCRPBK1",14,0)
 ;
"RTN","SCRPBK1",15,0)
 IF SCTYPE="TEAM" D TEAM G GETDATAQ
"RTN","SCRPBK1",16,0)
 ;
"RTN","SCRPBK1",17,0)
 IF SCTYPE="PRACTITIONER" D PRAC G GETDATAQ
"RTN","SCRPBK1",18,0)
 ;
"RTN","SCRPBK1",19,0)
 IF SCTYPE="ROLE" D ROLE G GETDATAQ
"RTN","SCRPBK1",20,0)
 ;
"RTN","SCRPBK1",21,0)
 IF SCTYPE="CLINIC" D CLIN G GETDATAQ
"RTN","SCRPBK1",22,0)
 ;
"RTN","SCRPBK1",23,0)
 IF SCTYPE="USERCLASS" D USER G GETDATAQ
"RTN","SCRPBK1",24,0)
 ;
"RTN","SCRPBK1",25,0)
GETDATAQ Q
"RTN","SCRPBK1",26,0)
 ;
"RTN","SCRPBK1",27,0)
CHK(SCX,SCLEN) ; -- check if text matches user input
"RTN","SCRPBK1",28,0)
 Q SCX=""!($E(SCX,1,SCLEN)'=SCTEXT)
"RTN","SCRPBK1",29,0)
 ;
"RTN","SCRPBK1",30,0)
BACK(X) ; -- backup one char for scanning
"RTN","SCRPBK1",31,0)
 Q $S(X="":"",$L(X)=1:$C($A(X)-1)_$C(122),1:$E(X,1,$L(X)-1)_$C($A($E(X,$L(X)))-1)_$C(122))
"RTN","SCRPBK1",32,0)
 ;
"RTN","SCRPBK1",33,0)
DIV ; -- get institution file entries
"RTN","SCRPBK1",34,0)
 N SCI,Y,SCX,SCLEN,SCINC
"RTN","SCRPBK1",35,0)
 S SCI=0,SCINC=0,SCX=$$BACK(SCTEXT),SCLEN=$L(SCTEXT)
"RTN","SCRPBK1",36,0)
 F  S SCI=$O(^SCTM(404.51,"AINST",SCI)) Q:'SCI  D
"RTN","SCRPBK1",37,0)
 . S Y=SCI,SC0=$G(^DIC(4,Y,0))
"RTN","SCRPBK1",38,0)
 . Q:$$CHK($P(SC0,U),SCLEN)
"RTN","SCRPBK1",39,0)
 . D SET($P(SC0,U)_U_SCTYPE_U_SCI,.SCINC,.SCDATA)
"RTN","SCRPBK1",40,0)
 Q
"RTN","SCRPBK1",41,0)
 ;
"RTN","SCRPBK1",42,0)
TEAM ; -- get team file entries
"RTN","SCRPBK1",43,0)
 N SCI,Y,SCX,SCLEN,SCINC,VAUTD
"RTN","SCRPBK1",44,0)
 S SCI=0,SCINC=0,SCX=$$BACK(SCTEXT),SCLEN=$L(SCTEXT)
"RTN","SCRPBK1",45,0)
 D VAUTD(.SCSELS,.VAUTD)
"RTN","SCRPBK1",46,0)
 F  S SCX=$O(^SCTM(404.51,"B",SCX)) Q:$$CHK(SCX,SCLEN)  D
"RTN","SCRPBK1",47,0)
 . F  S SCI=$O(^SCTM(404.51,"B",SCX,SCI)) Q:'SCI  D
"RTN","SCRPBK1",48,0)
 . . S Y=SCI,SC0=$G(^SCTM(404.51,Y,0))
"RTN","SCRPBK1",49,0)
 . . IF $D(VAUTD(+$P(^(0),U,7))) D SET($P(SC0,U)_U_SCTYPE_U_SCI,.SCINC,.SCDATA)
"RTN","SCRPBK1",50,0)
 Q
"RTN","SCRPBK1",51,0)
 ;
"RTN","SCRPBK1",52,0)
PRAC ; -- get practitioner entries
"RTN","SCRPBK1",53,0)
 N SCI,Y,SCX,SCLEN,SCINC,VAUTT
"RTN","SCRPBK1",54,0)
 S SCI=0,SCINC=0,SCX=$$BACK(SCTEXT),SCLEN=$L(SCTEXT)
"RTN","SCRPBK1",55,0)
 D VAUTT(.SCSELS,.VAUTT)
"RTN","SCRPBK1",56,0)
 F  S SCX=$O(^VA(200,"B",SCX)) Q:$$CHK(SCX,SCLEN)  D
"RTN","SCRPBK1",57,0)
 . F  S SCI=$O(^VA(200,"B",SCX,SCI)) Q:'SCI  D
"RTN","SCRPBK1",58,0)
 . . S Y=SCI,SC0=$G(^VA(200,Y,0))
"RTN","SCRPBK1",59,0)
 . . IF $D(VAUTT),$$PRACS^SCRPU1() D SET($P(SC0,U)_U_SCTYPE_U_SCI,.SCINC,.SCDATA)
"RTN","SCRPBK1",60,0)
 Q
"RTN","SCRPBK1",61,0)
 ;
"RTN","SCRPBK1",62,0)
ROLE ; -- get standard role file entries
"RTN","SCRPBK1",63,0)
 N SCI,Y,SCX,SCLEN,SCINC,VAUTT
"RTN","SCRPBK1",64,0)
 S SCI=0,SCINC=0,SCX=$$BACK(SCTEXT),SCLEN=$L(SCTEXT)
"RTN","SCRPBK1",65,0)
 D VAUTT(.SCSELS,.VAUTT)
"RTN","SCRPBK1",66,0)
 F  S SCX=$O(^SD(403.46,"B",SCX)) Q:$$CHK(SCX,SCLEN)  D
"RTN","SCRPBK1",67,0)
 . F  S SCI=$O(^SD(403.46,"B",SCX,SCI)) Q:'SCI  D
"RTN","SCRPBK1",68,0)
 . . S Y=SCI,SC0=$G(^SD(403.46,SCI,0))
"RTN","SCRPBK1",69,0)
 . . IF $D(VAUTT),$$RL^SCRPU1() D SET($P(SC0,U)_U_SCTYPE_U_SCI,.SCINC,.SCDATA)
"RTN","SCRPBK1",70,0)
 Q
"RTN","SCRPBK1",71,0)
 ;
"RTN","SCRPBK1",72,0)
CLIN ; -- get clinic entries
"RTN","SCRPBK1",73,0)
 N SCI,Y,SCX,SCLEN,SCINC,VAUTD,VAUTT,SCLIN
"RTN","SCRPBK1",74,0)
 S SCI=0,SCINC=0,SCLEN=$L(SCTEXT)
"RTN","SCRPBK1",75,0)
 IF SCRPTID=2 D
"RTN","SCRPBK1",76,0)
 . Q
"RTN","SCRPBK1",77,0)
 ELSE  D
"RTN","SCRPBK1",78,0)
 . D VAUTT(.SCSELS,.VAUTT)
"RTN","SCRPBK1",79,0)
 F SCXREF="B","C","TEAMS" S SCX=$$BACK(SCTEXT) D  Q:SCTEXT=""
"RTN","SCRPBK1",80,0)
 . F  S SCX=$O(^SC(SCXREF,SCX)) Q:$$CHK(SCX,SCLEN)  D
"RTN","SCRPBK1",81,0)
 . . F  S SCI=$O(^SC(SCXREF,SCX,SCI)) Q:'SCI  IF '$D(SCLIN(SCI)) D
"RTN","SCRPBK1",82,0)
 . . . S Y=SCI,SC0=$G(^SC(Y,0))
"RTN","SCRPBK1",83,0)
 . . . IF SCRPTID=2,$$CLSC2^SCRPU1() D SET($P(SC0,U)_U_SCTYPE_U_SCI,.SCINC,.SCDATA) S SCLIN(SCI)=""
"RTN","SCRPBK1",84,0)
 . . . IF SCRPTID'=2,$D(VAUTT),$$CLSC^SCRPU1() D SET($P(SC0,U)_U_SCTYPE_U_SCI,.SCINC,.SCDATA)
"RTN","SCRPBK1",85,0)
 Q
"RTN","SCRPBK1",86,0)
 ;
"RTN","SCRPBK1",87,0)
USER ; -- get user class file entries
"RTN","SCRPBK1",88,0)
 N SCI,Y,SCX,SCLEN,SCINC,VAUTT
"RTN","SCRPBK1",89,0)
 S SCI=0,SCINC=0,SCX=$$BACK(SCTEXT),SCLEN=$L(SCTEXT)
"RTN","SCRPBK1",90,0)
 D VAUTT(.SCSELS,.VAUTT)
"RTN","SCRPBK1",91,0)
 F  S SCX=$O(^USR(8930,"B",SCX)) Q:$$CHK(SCX,SCLEN)  D
"RTN","SCRPBK1",92,0)
 . F  S SCI=$O(^USR(8930,"B",SCX,SCI)) Q:'SCI  D
"RTN","SCRPBK1",93,0)
 . . S Y=SCI,SC0=$G(^USR(8930,SCI,0))
"RTN","SCRPBK1",94,0)
 . . IF $D(VAUTT),$$USRCL^SCRPU1() D SET($P(SC0,U)_U_SCTYPE_U_SCI,.SCINC,.SCDATA)
"RTN","SCRPBK1",95,0)
 Q
"RTN","SCRPBK1",96,0)
 ;
"RTN","SCRPBK1",97,0)
VAUTD(SCSELS,VAUTD) ; -- build division util array
"RTN","SCRPBK1",98,0)
 N I,X
"RTN","SCRPBK1",99,0)
 F I=1:1 S X=$G(SCSELS(I)) Q:X=""  IF $P(X,U,2)="DIVISION" S VAUTD(+$P(X,U,3))=$P(X,U)
"RTN","SCRPBK1",100,0)
 S:$D(VAUTD) VAUTD=0
"RTN","SCRPBK1",101,0)
 Q
"RTN","SCRPBK1",102,0)
 ;
"RTN","SCRPBK1",103,0)
VAUTT(SCSELS,VAUTT) ; -- build team util array
"RTN","SCRPBK1",104,0)
 N I,X
"RTN","SCRPBK1",105,0)
 IF SCRPTID=3 S VAUTT=1 G VAUTTQ
"RTN","SCRPBK1",106,0)
 F I=1:1 S X=$G(SCSELS(I)) Q:X=""  IF $P(X,U,2)="TEAM" S VAUTT(+$P(X,U,3))=$P(X,U)
"RTN","SCRPBK1",107,0)
 S:$D(VAUTT) VAUTT=0
"RTN","SCRPBK1",108,0)
VAUTTQ Q
"RTN","SCRPBK1",109,0)
 ;
"RTN","SCRPBK1",110,0)
SET(X,INC,SCDATA) ; -- set value in return array
"RTN","SCRPBK1",111,0)
 S INC=$G(INC)+1,SCDATA(INC)=X
"RTN","SCRPBK1",112,0)
 Q
"RTN","SCRPBK1",113,0)
 ;
"RTN","SCRPBK11")
0^139^B14197603
"RTN","SCRPBK11",1,0)
SCRPBK11 ;MJK/ALB - RPC Broker Utilities ; 27 FEB 96
"RTN","SCRPBK11",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPBK11",3,0)
 ;
"RTN","SCRPBK11",4,0)
GETSEL(SCDATA,SCTYPE,SCIEN) ; 
"RTN","SCRPBK11",5,0)
 ; -- get SELECTION entity data for details form
"RTN","SCRPBK11",6,0)
 ;
"RTN","SCRPBK11",7,0)
 ;  input:  SCTYPE       := type of autolink (DIVISIOND, TEAM, ectc.)
"RTN","SCRPBK11",8,0)
 ;          SCIEN        := ien of entity
"RTN","SCRPBK11",9,0)
 ; output:  SCDATA(1..n) := info about entity
"RTN","SCRPBK11",10,0)
 ;
"RTN","SCRPBK11",11,0)
 ; -- SEE BOTTOM OF SCRPBK FOR VARIABLE DEFINITIONS
"RTN","SCRPBK11",12,0)
 ;
"RTN","SCRPBK11",13,0)
 ; Related RPC: SCRP FILE ENTRY GETSELECTION
"RTN","SCRPBK11",14,0)
 ;                    
"RTN","SCRPBK11",15,0)
 N SC0,SCI,SCINC
"RTN","SCRPBK11",16,0)
 S SCINC=0,SCID=+SCIEN
"RTN","SCRPBK11",17,0)
 ;
"RTN","SCRPBK11",18,0)
 IF SCTYPE="DIVISION" D DIV G GETSELQ
"RTN","SCRPBK11",19,0)
 ;
"RTN","SCRPBK11",20,0)
 IF SCTYPE="TEAM" D TEAM G GETSELQ
"RTN","SCRPBK11",21,0)
 ;
"RTN","SCRPBK11",22,0)
 IF SCTYPE="PRACTITIONER" D PRAC G GETSELQ
"RTN","SCRPBK11",23,0)
 ;
"RTN","SCRPBK11",24,0)
 IF SCTYPE="ROLE" D ROLE G GETSELQ
"RTN","SCRPBK11",25,0)
 ;
"RTN","SCRPBK11",26,0)
 IF SCTYPE="CLINIC" D CLIN G GETSELQ
"RTN","SCRPBK11",27,0)
 ;
"RTN","SCRPBK11",28,0)
 IF SCTYPE="USERCLASS" D USER G GETSELQ
"RTN","SCRPBK11",29,0)
 ;
"RTN","SCRPBK11",30,0)
GETSELQ Q
"RTN","SCRPBK11",31,0)
 ;
"RTN","SCRPBK11",32,0)
SET(X,INC,SCDATA) ; -- set value in return array
"RTN","SCRPBK11",33,0)
 S INC=$G(INC)+1,SCDATA(INC)=X
"RTN","SCRPBK11",34,0)
 Q
"RTN","SCRPBK11",35,0)
 ;
"RTN","SCRPBK11",36,0)
DIV ; -- get division details
"RTN","SCRPBK11",37,0)
 D SET("Teams in  Division:",.SCINC,.SCDATA)
"RTN","SCRPBK11",38,0)
 D SET("------------------",.SCINC,.SCDATA)
"RTN","SCRPBK11",39,0)
 S SCI=0 F  S SCI=$O(^SCTM(404.51,"AINST",SCID,SCI)) Q:'SCI  D
"RTN","SCRPBK11",40,0)
 . D SET($P($G(^SCTM(404.51,SCI,0)),U),.SCINC,.SCDATA)
"RTN","SCRPBK11",41,0)
 Q
"RTN","SCRPBK11",42,0)
 ;
"RTN","SCRPBK11",43,0)
TEAM ; -- get team description
"RTN","SCRPBK11",44,0)
 N SC,SCFLE,SCIEN,SCDEF
"RTN","SCRPBK11",45,0)
 S SCFLE=404.51,SCIEN=SCID_",",SCDEF="<none specified>"
"RTN","SCRPBK11",46,0)
 D GETS^DIQ(SCFLE,SCID_",",50,"","SC")
"RTN","SCRPBK11",47,0)
 D SET("Team Description:",.SCINC,.SCDATA)
"RTN","SCRPBK11",48,0)
 D SET("-----------------",.SCINC,.SCDATA)
"RTN","SCRPBK11",49,0)
 IF $O(SC(SCFLE,SCIEN,50,0)) D
"RTN","SCRPBK11",50,0)
 . S SCI=0 F  S SCI=$O(SC(SCFLE,SCIEN,50,SCI)) Q:'SCI  S X=SC(SCFLE,SCIEN,50,SCI) D
"RTN","SCRPBK11",51,0)
 . . D SET(X,.SCINC,.SCDATA)
"RTN","SCRPBK11",52,0)
 ELSE  D
"RTN","SCRPBK11",53,0)
 . D SET(SCDEF,.SCINC,.SCDATA)
"RTN","SCRPBK11",54,0)
 Q
"RTN","SCRPBK11",55,0)
 ;
"RTN","SCRPBK11",56,0)
PRAC ; -- get practitioner details
"RTN","SCRPBK11",57,0)
 N SC,SCFLE,SCIEN,SCDEF
"RTN","SCRPBK11",58,0)
 S SCFLE=200,SCIEN=SCID_",",SCDEF="<none specified>"
"RTN","SCRPBK11",59,0)
 D GETS^DIQ(SCFLE,SCID_",","1;8;28","","SC")
"RTN","SCRPBK11",60,0)
 D SET(" Initials: "_$S($G(SC(SCFLE,SCIEN,1))]"":SC(SCFLE,SCIEN,1),1:SCDEF),.SCINC,.SCDATA)
"RTN","SCRPBK11",61,0)
 D SET("Mail Code: "_$S($G(SC(SCFLE,SCIEN,28))]"":SC(SCFLE,SCIEN,28),1:SCDEF),.SCINC,.SCDATA)
"RTN","SCRPBK11",62,0)
 D SET("    Title: "_$S($G(SC(SCFLE,SCIEN,8))]"":SC(SCFLE,SCIEN,8),1:SCDEF),.SCINC,.SCDATA)
"RTN","SCRPBK11",63,0)
 Q
"RTN","SCRPBK11",64,0)
 ;
"RTN","SCRPBK11",65,0)
ROLE ; -- get standard role description
"RTN","SCRPBK11",66,0)
 N SC,SCFLE,SCIEN,SCDEF
"RTN","SCRPBK11",67,0)
 S SCFLE=403.46,SCIEN=SCID_",",SCDEF="<none specified>"
"RTN","SCRPBK11",68,0)
 D GETS^DIQ(SCFLE,SCID_",",1,"","SC")
"RTN","SCRPBK11",69,0)
 D SET("Role Description:",.SCINC,.SCDATA)
"RTN","SCRPBK11",70,0)
 D SET("-----------------",.SCINC,.SCDATA)
"RTN","SCRPBK11",71,0)
 IF $O(SC(SCFLE,SCIEN,1,0)) D
"RTN","SCRPBK11",72,0)
 . S SCI=0 F  S SCI=$O(SC(SCFLE,SCIEN,1,SCI)) Q:'SCI  S X=SC(SCFLE,SCIEN,1,SCI) D
"RTN","SCRPBK11",73,0)
 . . D SET(X,.SCINC,.SCDATA)
"RTN","SCRPBK11",74,0)
 ELSE  D
"RTN","SCRPBK11",75,0)
 . D SET(SCDEF,.SCINC,.SCDATA)
"RTN","SCRPBK11",76,0)
 Q
"RTN","SCRPBK11",77,0)
 ;
"RTN","SCRPBK11",78,0)
CLIN ; -- get clinic details
"RTN","SCRPBK11",79,0)
 N SC,SCFLE,SCIEN,SCDEF
"RTN","SCRPBK11",80,0)
 S SCFLE=44,SCIEN=SCID_",",SCDEF="<none specified>"
"RTN","SCRPBK11",81,0)
 D GETS^DIQ(SCFLE,SCID_",","1;3.5","","SC")
"RTN","SCRPBK11",82,0)
 D SET("Abbreviation: "_$S($G(SC(SCFLE,SCIEN,1))]"":SC(SCFLE,SCIEN,1),1:SCDEF),.SCINC,.SCDATA)
"RTN","SCRPBK11",83,0)
 D SET("    Division: "_$S($G(SC(SCFLE,SCIEN,3.5))]"":SC(SCFLE,SCIEN,3.5),1:SCDEF),.SCINC,.SCDATA)
"RTN","SCRPBK11",84,0)
 D SET(" ",.SCINC,.SCDATA)
"RTN","SCRPBK11",85,0)
 D SET("Assoicated Teams and Positions:",.SCINC,.SCDATA)
"RTN","SCRPBK11",86,0)
 D SET("-------------------------------",.SCINC,.SCDATA)
"RTN","SCRPBK11",87,0)
 S SCI=0 F  S SCI=$O(^SCTM(404.57,"D",SCID,SCI)) Q:'SCI  D
"RTN","SCRPBK11",88,0)
 . S X=$G(^SCTM(404.57,SCI,0))
"RTN","SCRPBK11",89,0)
 . D SET("      Team: "_$P($G(^SCTM(404.51,+$P(X,U,2),0)),U),.SCINC,.SCDATA)
"RTN","SCRPBK11",90,0)
 . D SET("  Position: "_$P(X,U),.SCINC,.SCDATA)
"RTN","SCRPBK11",91,0)
 . D SET(" ",.SCINC,.SCDATA)
"RTN","SCRPBK11",92,0)
 Q
"RTN","SCRPBK11",93,0)
 ;
"RTN","SCRPBK11",94,0)
USER ; -- get user class details
"RTN","SCRPBK11",95,0)
 D SET("No additional information available at this time. ",.SCINC,.SCDATA)
"RTN","SCRPBK11",96,0)
 Q
"RTN","SCRPBK11",97,0)
 ;
"RTN","SCRPBK2")
0^91^B39175865
"RTN","SCRPBK2",1,0)
SCRPBK2 ;MJK/ALB - RPC Broker Utilities ; 27 FEB 96
"RTN","SCRPBK2",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPBK2",3,0)
 ;
"RTN","SCRPBK2",4,0)
SAVE(SCDATA,SCQDEF) ; -- save query definition
"RTN","SCRPBK2",5,0)
 ;
"RTN","SCRPBK2",6,0)
 ; -- SCDATA(0) -> <1 - success> ^ <new query ien> ^ <reload client>
"RTN","SCRPBK2",7,0)
 ;              -> <0 - errors found> ^ <number of errors>
"RTN","SCRPBK2",8,0)
 ;      (1...n) -> error text
"RTN","SCRPBK2",9,0)
 ;
"RTN","SCRPBK2",10,0)
 ; -- SEE BOTTOM OF SCRPBK FOR VARIABLE DEFINITIONS
"RTN","SCRPBK2",11,0)
 ;
"RTN","SCRPBK2",12,0)
 ; Related RPC: SCRP QUERY SAVE
"RTN","SCRPBK2",13,0)
 ;
"RTN","SCRPBK2",14,0)
 N SCQREC,SCERR,SCIENS,SCSTAT,SCVM,SCLOG,SCERS,DIERR,SCPROC
"RTN","SCRPBK2",15,0)
 S SCPROC="Save Template"
"RTN","SCRPBK2",16,0)
 D PARSE^SCRPBK5(.SCQDEF,.SCQREC)
"RTN","SCRPBK2",17,0)
 ;
"RTN","SCRPBK2",18,0)
 ; -- do full validation mode(SCVM) check
"RTN","SCRPBK2",19,0)
 S SCVM="FULL",SCLOG="SCDATA"
"RTN","SCRPBK2",20,0)
 D VALCHK^SCRPBK4(SCLOG,.SCQREC,SCVM)
"RTN","SCRPBK2",21,0)
 IF $G(DIERR) D  G SAVEQ
"RTN","SCRPBK2",22,0)
 . D HDREC^SCUTBK3(.SCDATA,DIERR,"Save Template Validation Check")
"RTN","SCRPBK2",23,0)
 ;
"RTN","SCRPBK2",24,0)
 ; -- try to save record and get status of save
"RTN","SCRPBK2",25,0)
 S SCSTAT=$$SAVEREC(.SCQREC,.SCIENS,.SCERR)
"RTN","SCRPBK2",26,0)
 IF SCSTAT D
"RTN","SCRPBK2",27,0)
 . S SCDATA(0)=1_U_$S(SCQREC("QUERYID")="+1":+$G(SCIENS(1)),1:"")_U_$P(SCSTAT,U,2)
"RTN","SCRPBK2",28,0)
 ELSE  D
"RTN","SCRPBK2",29,0)
 . D ERRCHK^SCUTBK3(.SCDATA,.SCERR,SCPROC)
"RTN","SCRPBK2",30,0)
SAVEQ Q
"RTN","SCRPBK2",31,0)
 ;
"RTN","SCRPBK2",32,0)
SAVEREC(SCQREC,SCIENS,SCERR) ; -- actual save process
"RTN","SCRPBK2",33,0)
 N SCFILE,SCFDA,SCDFDA,SCQRY,SCNEW,SCMOD
"RTN","SCRPBK2",34,0)
 S SCFILE=404.95
"RTN","SCRPBK2",35,0)
 S SCFDA="SCFDA",SCDFDA="SCDFDA",SCERR="SCERR",SCIENS="SCIENS"
"RTN","SCRPBK2",36,0)
 S SCQRY=SCQREC("QUERYID")
"RTN","SCRPBK2",37,0)
 ;
"RTN","SCRPBK2",38,0)
 ; -- strip out data not needed
"RTN","SCRPBK2",39,0)
 ;    SCMOD = 1 means some stripping occurred and query needs to reload
"RTN","SCRPBK2",40,0)
 S SCMOD=$$STRIP(.SCQREC)
"RTN","SCRPBK2",41,0)
 ;
"RTN","SCRPBK2",42,0)
 D FDA^DILF(SCFILE,SCQRY_",",.01,"",SCQREC("NAME"),SCFDA,SCERR)
"RTN","SCRPBK2",43,0)
 D FDA^DILF(SCFILE,SCQRY_",",.02,"",SCQREC("CREATORID"),SCFDA,SCERR)
"RTN","SCRPBK2",44,0)
 D FDA^DILF(SCFILE,SCQRY_",",.03,"",SCQREC("ACCESSID"),SCFDA,SCERR)
"RTN","SCRPBK2",45,0)
 D FDA^DILF(SCFILE,SCQRY_",",.04,"",SCQREC("REPORTID"),SCFDA,SCERR)
"RTN","SCRPBK2",46,0)
 D FDA^DILF(SCFILE,SCQRY_",",.05,"",$$NOW^XLFDT(),SCFDA,SCERR)
"RTN","SCRPBK2",47,0)
 IF $D(SCQREC("DESCRIPTION")) D
"RTN","SCRPBK2",48,0)
 . D FDA^DILF(SCFILE,SCQRY_",",10,"",$NA(SCQREC("DESCRIPTION")),SCFDA,SCERR)
"RTN","SCRPBK2",49,0)
 ; -- is this a new record?
"RTN","SCRPBK2",50,0)
 S SCNEW=$S(SCQRY="+1":1,1:0)
"RTN","SCRPBK2",51,0)
 D SAVFLD(.SCQREC,.SCFDA,.SCDFDA,.SCERR,.SCNEW)
"RTN","SCRPBK2",52,0)
 D SAVSEL(.SCQREC,.SCFDA,.SCDFDA,.SCERR,.SCNEW)
"RTN","SCRPBK2",53,0)
 ;
"RTN","SCRPBK2",54,0)
 ; -- process any deletions (SCDFDA array holds deletion FDA)
"RTN","SCRPBK2",55,0)
 IF $D(SCDFDA)>10 D
"RTN","SCRPBK2",56,0)
 . D FILE^DIE("K",SCDFDA,SCERR)
"RTN","SCRPBK2",57,0)
 ;
"RTN","SCRPBK2",58,0)
 ; -- process new items and changes
"RTN","SCRPBK2",59,0)
 IF SCNEW D
"RTN","SCRPBK2",60,0)
 . D UPDATE^DIE("",SCFDA,SCIENS,SCERR)
"RTN","SCRPBK2",61,0)
 ELSE  D
"RTN","SCRPBK2",62,0)
 . D FILE^DIE("K",SCFDA,SCERR)
"RTN","SCRPBK2",63,0)
 ;
"RTN","SCRPBK2",64,0)
 ; -- ret := <success 0/1> ^ <unneeded data automatically stripped out>
"RTN","SCRPBK2",65,0)
SAVERECQ Q '$G(SCERR("DIERR"))_U_SCMOD
"RTN","SCRPBK2",66,0)
 ;
"RTN","SCRPBK2",67,0)
SAVFLD(SCQREC,SCFDA,SCDFDA,SCERR,SCNEW) ;
"RTN","SCRPBK2",68,0)
 ; -- determine which fields were changed or deleted
"RTN","SCRPBK2",69,0)
 ;
"RTN","SCRPBK2",70,0)
 N SCUR,SCAN,SCQRY,SCI,SCFLD
"RTN","SCRPBK2",71,0)
 S SCQRY=SCQREC("QUERYID")
"RTN","SCRPBK2",72,0)
 ;
"RTN","SCRPBK2",73,0)
 ; -- scan fields multiple and build array
"RTN","SCRPBK2",74,0)
 S SCI=0
"RTN","SCRPBK2",75,0)
 F  S SCI=$O(^SD(404.95,SCQRY,"FIELDS",SCI)) Q:'SCI  S X=$G(^(SCI,0)) D
"RTN","SCRPBK2",76,0)
 . IF $D(^SD(404.93,+X,0)) S SCAN($P(^(0),U,2))=SCI_U_$P(X,U,2)
"RTN","SCRPBK2",77,0)
 ;
"RTN","SCRPBK2",78,0)
 ; -- delete fields not passed down and set delete fda
"RTN","SCRPBK2",79,0)
 S SCFLD=""
"RTN","SCRPBK2",80,0)
 F  S SCFLD=$O(SCAN(SCFLD)) Q:SCFLD=""  IF '$D(SCQREC("FIELDS",SCFLD)) D
"RTN","SCRPBK2",81,0)
 . D FDA^DILF(404.9502,+SCAN(SCFLD)_","_SCQRY_",",.01,"","@",SCDFDA,SCERR)
"RTN","SCRPBK2",82,0)
 ;
"RTN","SCRPBK2",83,0)
 ; -- set fda for changes
"RTN","SCRPBK2",84,0)
 S SCFLD=""
"RTN","SCRPBK2",85,0)
 F  S SCFLD=$O(SCQREC("FIELDS",SCFLD)) Q:SCFLD=""  D
"RTN","SCRPBK2",86,0)
 . N SCVAL,SCFLDI,SCIEN,SCUR
"RTN","SCRPBK2",87,0)
 . S SCVAL=SCQREC("FIELDS",SCFLD)
"RTN","SCRPBK2",88,0)
 . S SCFLDI=+$O(^SD(404.93,"C",SCFLD,0))
"RTN","SCRPBK2",89,0)
 . S SCUR=$G(SCAN(SCFLD))
"RTN","SCRPBK2",90,0)
 . S SCIEN=+SCUR IF 'SCIEN S SCNEW=SCNEW+1,SCIEN="+"_SCNEW
"RTN","SCRPBK2",91,0)
 . IF SCIEN="+1"!($P(SCUR,U,2)'=SCVAL) D
"RTN","SCRPBK2",92,0)
 . . D FDA^DILF(404.9502,SCIEN_","_SCQRY_",",.01,"",SCFLDI,SCFDA,SCERR)
"RTN","SCRPBK2",93,0)
 . . D FDA^DILF(404.9502,SCIEN_","_SCQRY_",",.02,"",SCVAL,SCFDA,SCERR)
"RTN","SCRPBK2",94,0)
 Q
"RTN","SCRPBK2",95,0)
 ;
"RTN","SCRPBK2",96,0)
SAVSEL(SCQREC,SCFDA,SCDFDA,SCERR,SCNEW) ;
"RTN","SCRPBK2",97,0)
 ;  -- determine which file selections were changed or deleted
"RTN","SCRPBK2",98,0)
 ;
"RTN","SCRPBK2",99,0)
 N SCUR,SCAN,SCQRY,SCI,SCSEL,SCTYPE,SCHIT
"RTN","SCRPBK2",100,0)
 S SCQRY=SCQREC("QUERYID")
"RTN","SCRPBK2",101,0)
 ; -- scan fields and build array
"RTN","SCRPBK2",102,0)
 S SCI=0
"RTN","SCRPBK2",103,0)
 F  S SCI=$O(^SD(404.95,SCQRY,"FILES",SCI)) Q:'SCI  S X=$G(^(SCI,0)) D
"RTN","SCRPBK2",104,0)
 . S SCAN($P(^(0),U))=SCI
"RTN","SCRPBK2",105,0)
 ;
"RTN","SCRPBK2",106,0)
 ; -- delete fields not passed down
"RTN","SCRPBK2",107,0)
 S SCSEL=""
"RTN","SCRPBK2",108,0)
 F  S SCSEL=$O(SCAN(SCSEL)) Q:SCSEL=""  D
"RTN","SCRPBK2",109,0)
 . S SCTYPE="",SCHIT=0
"RTN","SCRPBK2",110,0)
 . F  S SCTYPE=$O(SCQREC("SELECTIONS",SCTYPE)) Q:SCTYPE=""  IF $D(SCQREC("SELECTIONS",SCTYPE,SCSEL)) S SCHIT=1 Q
"RTN","SCRPBK2",111,0)
 . D:'SCHIT FDA^DILF(404.9503,+SCAN(SCSEL)_","_SCQRY_",",.01,"","@",SCDFDA,SCERR)
"RTN","SCRPBK2",112,0)
 ;
"RTN","SCRPBK2",113,0)
 ; -- set fda
"RTN","SCRPBK2",114,0)
 S SCTYPE=""
"RTN","SCRPBK2",115,0)
 F  S SCTYPE=$O(SCQREC("SELECTIONS",SCTYPE)) Q:SCTYPE=""  D
"RTN","SCRPBK2",116,0)
 . S SCSEL=""
"RTN","SCRPBK2",117,0)
 . F  S SCSEL=$O(SCQREC("SELECTIONS",SCTYPE,SCSEL)) Q:SCSEL=""  IF '$D(SCAN(SCSEL)) D
"RTN","SCRPBK2",118,0)
 . . S SCNEW=SCNEW+1,SCIEN="+"_SCNEW
"RTN","SCRPBK2",119,0)
 . . D FDA^DILF(404.9503,SCIEN_","_SCQRY_",",.01,"",SCSEL,SCFDA,SCERR)
"RTN","SCRPBK2",120,0)
 Q
"RTN","SCRPBK2",121,0)
 ;
"RTN","SCRPBK2",122,0)
DELETE(SCDATA,SCQDEF) ; -- delete a query record
"RTN","SCRPBK2",123,0)
 ;
"RTN","SCRPBK2",124,0)
 ; -- SCDATA(0) -> <1 - success> ^
"RTN","SCRPBK2",125,0)
 ;              -> <0 - errors found> ^ <number of errors>
"RTN","SCRPBK2",126,0)
 ;      (1...n) -> error text
"RTN","SCRPBK2",127,0)
 ;
"RTN","SCRPBK2",128,0)
 ; -- SEE BOTTOM OF SCRPBK FOR VARIABLE DEFINITIONS
"RTN","SCRPBK2",129,0)
 ;
"RTN","SCRPBK2",130,0)
 ; Related RPC: SCRP QUERY DELETE
"RTN","SCRPBK2",131,0)
 ;
"RTN","SCRPBK2",132,0)
 N SCQREC,DIERR,SCLOG
"RTN","SCRPBK2",133,0)
 S SCLOG="SCDATA"
"RTN","SCRPBK2",134,0)
 D PARSE^SCRPBK5(.SCQDEF,.SCQREC)
"RTN","SCRPBK2",135,0)
 D DELCHK(SCLOG,.SCQREC)
"RTN","SCRPBK2",136,0)
 D HDREC^SCUTBK3(.SCDATA,$G(DIERR),"Template Deletion")
"RTN","SCRPBK2",137,0)
 IF SCDATA(0) D DELREC(.SCQREC)
"RTN","SCRPBK2",138,0)
 Q
"RTN","SCRPBK2",139,0)
 ;
"RTN","SCRPBK2",140,0)
DELCHK(SCLOG,SCQREC) ; -- check to see if query can be deleted
"RTN","SCRPBK2",141,0)
 ; -- is the query being used as a default by any user?
"RTN","SCRPBK2",142,0)
 ;
"RTN","SCRPBK2",143,0)
 N SCQRY,PARAM
"RTN","SCRPBK2",144,0)
 S SCQRY=SCQREC("QUERYID")
"RTN","SCRPBK2",145,0)
 IF SCQRY=+SCQRY,'$D(^SCRS(403.35,"AC",SCQRY)) D  G DELCHKQ
"RTN","SCRPBK2",146,0)
 . Q
"RTN","SCRPBK2",147,0)
 ELSE  D
"RTN","SCRPBK2",148,0)
 . S SCPARM("QUERY NAME")=SCQREC("NAME")
"RTN","SCRPBK2",149,0)
 . D BLD^DIALOG(4035002.001,.SCPARM,"",SCLOG,"S")
"RTN","SCRPBK2",150,0)
DELCHKQ Q
"RTN","SCRPBK2",151,0)
 ;
"RTN","SCRPBK2",152,0)
DELREC(SCQREC) ; -- actually delete query record
"RTN","SCRPBK2",153,0)
 N DIK,DA,X
"RTN","SCRPBK2",154,0)
 S DIK="^SD(404.95,",DA=SCQREC("QUERYID") D ^DIK
"RTN","SCRPBK2",155,0)
 Q
"RTN","SCRPBK2",156,0)
 ;
"RTN","SCRPBK2",157,0)
NAME(SCDATA,SCQNAME,SCUSER) ;
"RTN","SCRPBK2",158,0)
 ; -- check to see if user has a query with same name
"RTN","SCRPBK2",159,0)
 ; 
"RTN","SCRPBK2",160,0)
 ; input: SCQNAME -> query name
"RTN","SCRPBK2",161,0)
 ;        SCUSER  -> user id (DUZ)
"RTN","SCRPBK2",162,0)
 ;output: SCDATA(1) -> 0 means no query with that name found
"RTN","SCRPBK2",163,0)
 ;                  -> <n> means query with that name found has this ien
"RTN","SCRPBK2",164,0)
 ; -- SEE BOTTOM OF SCRPBK FOR VARIABLE DEFINITIONS
"RTN","SCRPBK2",165,0)
 ;
"RTN","SCRPBK2",166,0)
 ; Related RPC: SCRP QUERY CHECK NAME
"RTN","SCRPBK2",167,0)
 ;
"RTN","SCRPBK2",168,0)
 N SCERR,SCDUP
"RTN","SCRPBK2",169,0)
 IF $$NAMECHK(.SCQNAME,.SCUSER,.SCERR,.SCDUP) D
"RTN","SCRPBK2",170,0)
 . S SCDATA(1)=0
"RTN","SCRPBK2",171,0)
 ELSE  D
"RTN","SCRPBK2",172,0)
 . S SCDATA(1)=SCDUP
"RTN","SCRPBK2",173,0)
 Q
"RTN","SCRPBK2",174,0)
 ;
"RTN","SCRPBK2",175,0)
NAMECHK(SCQNAME,SCUSER,SCERR,SCDUP) ; -- actuallt scan xref for query name
"RTN","SCRPBK2",176,0)
 N SCOK,SDI
"RTN","SCRPBK2",177,0)
 S SCOK=1,SCI=0
"RTN","SCRPBK2",178,0)
 F  S SCI=$O(^SD(404.95,"AC",SCUSER,SCI)) Q:'SCI  D  Q:'SCOK
"RTN","SCRPBK2",179,0)
 . IF SCQNAME=$P($G(^SD(404.95,SCI,0)),U) S SCOK=0,SCDUP=SCI
"RTN","SCRPBK2",180,0)
 Q SCOK
"RTN","SCRPBK2",181,0)
 ;
"RTN","SCRPBK2",182,0)
STRIP(SCQREC) ; -- strip out inappropriate data for report type
"RTN","SCRPBK2",183,0)
 N I,X,SCAN,SCFLD,SCMOD
"RTN","SCRPBK2",184,0)
 S SCMOD=0
"RTN","SCRPBK2",185,0)
 D GETFLDS(+SCQREC("REPORTID"),.SCAN)
"RTN","SCRPBK2",186,0)
 S SCFLD=""
"RTN","SCRPBK2",187,0)
 F  S SCFLD=$O(SCQREC("FIELDS",SCFLD)) Q:SCFLD=""  D
"RTN","SCRPBK2",188,0)
 . IF '$D(SCAN(SCFLD)) K SCQREC("FIELDS",SCFLD) S SCMOD=1
"RTN","SCRPBK2",189,0)
 ;
"RTN","SCRPBK2",190,0)
 K SCAN
"RTN","SCRPBK2",191,0)
 D GETYPE(+SCQREC("REPORTID"),.SCAN)
"RTN","SCRPBK2",192,0)
 S SCTYPE=""
"RTN","SCRPBK2",193,0)
 F  S SCTYPE=$O(SCQREC("SELECTIONS",SCTYPE)) Q:SCTYPE=""  D
"RTN","SCRPBK2",194,0)
 . IF '$D(SCAN(SCTYPE)) K SCQREC("SELECTIONS",SCTYPE) S SCMOD=1
"RTN","SCRPBK2",195,0)
 Q SCMOD
"RTN","SCRPBK2",196,0)
 ;
"RTN","SCRPBK2",197,0)
GETFLDS(RPTID,SCAN) ; -- build array of fields used/needed by report
"RTN","SCRPBK2",198,0)
 N SCI,SCX
"RTN","SCRPBK2",199,0)
 S SCI=0
"RTN","SCRPBK2",200,0)
 F  S SCI=$O(^SD(404.92,RPTID,"FIELDS",SCI)) Q:'SCI  S SCX=$G(^(SCI,0)) D
"RTN","SCRPBK2",201,0)
 . IF $D(^SD(404.93,+SCX,0)) S SCAN($P(^(0),U,2))=SCX
"RTN","SCRPBK2",202,0)
 Q
"RTN","SCRPBK2",203,0)
 ;
"RTN","SCRPBK2",204,0)
GETYPE(RPTID,SCAN) ; -- build array of files used/needed by report
"RTN","SCRPBK2",205,0)
 N SCI,SCX
"RTN","SCRPBK2",206,0)
 S SCI=0
"RTN","SCRPBK2",207,0)
 F  S SCI=$O(^SD(404.92,RPTID,"FILES",SCI)) Q:'SCI  S SCX=$G(^(SCI,0)) D
"RTN","SCRPBK2",208,0)
 . S SCTYPE=$$TYPE^SCRPBK(+SCX)
"RTN","SCRPBK2",209,0)
 . IF $$CHKTYPE(SCTYPE) S SCAN(SCTYPE)=SCX
"RTN","SCRPBK2",210,0)
 Q
"RTN","SCRPBK2",211,0)
 ;
"RTN","SCRPBK2",212,0)
CHKTYPE(SCTYPE) ; -- special checks to see if file type is ok to use
"RTN","SCRPBK2",213,0)
 N SCOK S SCOK=1
"RTN","SCRPBK2",214,0)
 IF SCTYPE="" S SCOK=0
"RTN","SCRPBK2",215,0)
 ;
"RTN","SCRPBK2",216,0)
 ; -- is site using user class relationship in PCMM?
"RTN","SCRPBK2",217,0)
 IF SCTYPE="USERCLASS",'$P($G(^SD(404.91,1,"PCMM")),U) S SCOK=0
"RTN","SCRPBK2",218,0)
 Q SCOK
"RTN","SCRPBK2",219,0)
 ;
"RTN","SCRPBK3")
0^92^B28708545
"RTN","SCRPBK3",1,0)
SCRPBK3 ;MJK/ALB - RPC Broker Utilities ; 27 FEB 96
"RTN","SCRPBK3",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPBK3",3,0)
 ;
"RTN","SCRPBK3",4,0)
PRINT(SCDATA,SCPTR,SCDATE,SCTIME,SCQDEF) ;
"RTN","SCRPBK3",5,0)
 ; -- print pcmm report
"RTN","SCRPBK3",6,0)
 ;
"RTN","SCRPBK3",7,0)
 ; input: SCPTR   -> printer name
"RTN","SCRPBK3",8,0)
 ;        SCDATE  -> run date
"RTN","SCRPBK3",9,0)
 ;        SCTIME  -> run time
"RTN","SCRPBK3",10,0)
 ;
"RTN","SCRPBK3",11,0)
 ;output:
"RTN","SCRPBK3",12,0)
 ;      SCDATA(0) -> TaskMan task number assicated with queued report
"RTN","SCRPBK3",13,0)
 ;
"RTN","SCRPBK3",14,0)
 ;                  --- OR if errors were found during validation ---
"RTN","SCRPBK3",15,0)
 ;
"RTN","SCRPBK3",16,0)
 ;      SCDATA(0) -> 0 - meaning errors found ^ <number of errors>
"RTN","SCRPBK3",17,0)
 ;  SCDATA(1...n) -> error text
"RTN","SCRPBK3",18,0)
 ;
"RTN","SCRPBK3",19,0)
 ; -- SEE BOTTOM OF SCRPBK FOR MORE VARIABLE DEFINITIONS
"RTN","SCRPBK3",20,0)
 ;
"RTN","SCRPBK3",21,0)
 ; Related RPC: SCRP REPORT PRINT
"RTN","SCRPBK3",22,0)
 ;
"RTN","SCRPBK3",23,0)
 N SCQREC,SCRUNDT,SCPNTR,SCLOG,DIERR
"RTN","SCRPBK3",24,0)
 ;
"RTN","SCRPBK3",25,0)
 ; -- build query record
"RTN","SCRPBK3",26,0)
 D PARSE^SCRPBK5(.SCQDEF,.SCQREC)
"RTN","SCRPBK3",27,0)
 ;
"RTN","SCRPBK3",28,0)
 ; -- do validation full check and report any errors
"RTN","SCRPBK3",29,0)
 S SCLOG="SCDATA"
"RTN","SCRPBK3",30,0)
 D VALCHK^SCRPBK4(SCLOG,.SCQREC,"FULL")
"RTN","SCRPBK3",31,0)
 IF $G(DIERR) D  G PRINTQ
"RTN","SCRPBK3",32,0)
 . D HDREC^SCUTBK3(.SCDATA,DIERR,"Report Printing")
"RTN","SCRPBK3",33,0)
 ;
"RTN","SCRPBK3",34,0)
 ; -- process date/time and printer data and retuen in usable format
"RTN","SCRPBK3",35,0)
 D INIT(SCDATE,SCTIME,SCPTR,.SCRUNDT,.SCPNTR)
"RTN","SCRPBK3",36,0)
 IF SCQREC("REPORTID") D
"RTN","SCRPBK3",37,0)
 . ; -- call appropriate report
"RTN","SCRPBK3",38,0)
 . D @("RPT"_SCQREC("REPORTID")_"(.SCDATA,.SCQREC,.SCPNTR,.SCRUNDT)")
"RTN","SCRPBK3",39,0)
 ELSE  D
"RTN","SCRPBK3",40,0)
 . S SCDATA(0)="0^NOT A VAILD REPORT REQUEST"
"RTN","SCRPBK3",41,0)
PRINTQ Q
"RTN","SCRPBK3",42,0)
 ;
"RTN","SCRPBK3",43,0)
RPT1(SCDATA,SCQREC,SCPNTR,SCRUNDT) ; -- patient/team assignment
"RTN","SCRPBK3",44,0)
 N VAUTD,VAUTT,VAUTR,VAUTP
"RTN","SCRPBK3",45,0)
 D BUILD(.SCQREC,"DIVISION",.VAUTD)
"RTN","SCRPBK3",46,0)
 D BUILD(.SCQREC,"TEAM",.VAUTT)
"RTN","SCRPBK3",47,0)
 D BUILD(.SCQREC,"ROLE",.VAUTR)
"RTN","SCRPBK3",48,0)
 S VAUTP="" D BUILD(.SCQREC,"PRACTITIONER",.VAUTP)
"RTN","SCRPBK3",49,0)
 S SCDATA(0)=$$ENTRY2^SCRPTA(.VAUTD,.VAUTT,.VAUTR,.VAUTP,SCPNTR,SCRUNDT)
"RTN","SCRPBK3",50,0)
 Q
"RTN","SCRPBK3",51,0)
 ;
"RTN","SCRPBK3",52,0)
RPT2(SCDATA,SCQREC,SCPNTR,SCRUNDT) ; -- detailed patient enrollments
"RTN","SCRPBK3",53,0)
 N VAUTD,VAUTT,VAUTC,VAUTA
"RTN","SCRPBK3",54,0)
 D BUILD(.SCQREC,"DIVISION",.VAUTD)
"RTN","SCRPBK3",55,0)
 D BUILD(.SCQREC,"TEAM",.VAUTT)
"RTN","SCRPBK3",56,0)
 D BUILD(.SCQREC,"CLINIC",.VAUTC)
"RTN","SCRPBK3",57,0)
 S VAUTA=$$PASSIGN(.SCQREC,"radAssigned")
"RTN","SCRPBK3",58,0)
 S SCDATA(0)=$$ENTRY2^SCRPEC(.VAUTD,.VAUTT,.VAUTC,VAUTA,SCPNTR,SCRUNDT)
"RTN","SCRPBK3",59,0)
 Q
"RTN","SCRPBK3",60,0)
 ;
"RTN","SCRPBK3",61,0)
RPT3(SCDATA,SCQREC,SCPNTR,SCRUNDT) ; -- practitioner's demographics
"RTN","SCRPBK3",62,0)
 N VAUTP
"RTN","SCRPBK3",63,0)
 D BUILD(.SCQREC,"PRACTITIONER",.VAUTP)
"RTN","SCRPBK3",64,0)
 S SCDATA(0)=$$ENTRY2^SCRPRAC(.VAUTP,SCPNTR,SCRUNDT)
"RTN","SCRPBK3",65,0)
 Q
"RTN","SCRPBK3",66,0)
 ;
"RTN","SCRPBK3",67,0)
RPT4(SCDATA,SCQREC,SCPNTR,SCRUNDT) ; -- practitioner's pateints
"RTN","SCRPBK3",68,0)
 N VAUTD,VAUTT,VAUTC,VAUTR,VAUTP,VAUTS,SCSORT
"RTN","SCRPBK3",69,0)
 D BUILD(.SCQREC,"DIVISION",.VAUTD)
"RTN","SCRPBK3",70,0)
 D BUILD(.SCQREC,"TEAM",.VAUTT)
"RTN","SCRPBK3",71,0)
 D BUILD(.SCQREC,"ROLE",.VAUTR)
"RTN","SCRPBK3",72,0)
 D BUILD(.SCQREC,"PRACTITIONER",.VAUTP)
"RTN","SCRPBK3",73,0)
 S VAUTS=$$YESNO(.SCQREC,"chkSummary")
"RTN","SCRPBK3",74,0)
 S SCSORT=$$FINDSORT(.SCQREC)
"RTN","SCRPBK3",75,0)
 S SCDATA(0)=$$ENTRY2^SCRPPAT(.VAUTD,.VAUTT,.VAUTR,.VAUTP,VAUTS,SCSORT,SCPNTR,SCRUNDT)
"RTN","SCRPBK3",76,0)
 Q
"RTN","SCRPBK3",77,0)
 ;
"RTN","SCRPBK3",78,0)
RPT5(SCDATA,SCQREC,SCPNTR,SCRUNDT) ; -- team profile
"RTN","SCRPBK3",79,0)
 N VAUTD,VAUTT
"RTN","SCRPBK3",80,0)
 D BUILD(.SCQREC,"DIVISION",.VAUTD)
"RTN","SCRPBK3",81,0)
 D BUILD(.SCQREC,"TEAM",.VAUTT)
"RTN","SCRPBK3",82,0)
 S SCDATA(0)=$$ENTRY2^SCRPITP(.VAUTD,.VAUTT,SCPNTR,SCRUNDT)
"RTN","SCRPBK3",83,0)
 Q
"RTN","SCRPBK3",84,0)
 ;
"RTN","SCRPBK3",85,0)
RPT6(SCDATA,SCQREC,SCPNTR,SCRUNDT) ; -- summaru listing of Teams
"RTN","SCRPBK3",86,0)
 N VAUTD,VAUTT,VAUTR
"RTN","SCRPBK3",87,0)
 D BUILD(.SCQREC,"DIVISION",.VAUTD)
"RTN","SCRPBK3",88,0)
 D BUILD(.SCQREC,"TEAM",.VAUTT)
"RTN","SCRPBK3",89,0)
 D BUILD(.SCQREC,"ROLE",.VAUTR)
"RTN","SCRPBK3",90,0)
 S SCDATA(0)=$$ENTRY2^SCRPSLT(.VAUTD,.VAUTT,.VAUTR,SCPNTR,SCRUNDT)
"RTN","SCRPBK3",91,0)
 Q
"RTN","SCRPBK3",92,0)
 ;
"RTN","SCRPBK3",93,0)
RPT7(SCDATA,SCQREC,SCPNTR,SCRUNDT) ; -- team's patients
"RTN","SCRPBK3",94,0)
 N VAUTD,VAUTT,VAUTR,VAUTPS,SCSORT
"RTN","SCRPBK3",95,0)
 D BUILD(.SCQREC,"DIVISION",.VAUTD)
"RTN","SCRPBK3",96,0)
 D BUILD(.SCQREC,"TEAM",.VAUTT)
"RTN","SCRPBK3",97,0)
 D BUILD(.SCQREC,"ROLE",.VAUTR)
"RTN","SCRPBK3",98,0)
 S VAUTPS=$$PSTATUS(.SCQREC,"radPatStatus")
"RTN","SCRPBK3",99,0)
 S SCSORT=$$FINDSORT(.SCQREC)
"RTN","SCRPBK3",100,0)
 S SCDATA(0)=$$ENTRY2^SCRPTP(.VAUTD,.VAUTT,.VAUTR,.VAUTPS,SCSORT,SCPNTR,SCRUNDT)
"RTN","SCRPBK3",101,0)
 Q
"RTN","SCRPBK3",102,0)
 ;
"RTN","SCRPBK3",103,0)
RPT8(SCDATA,SCQREC,SCPNTR,SCRUNDT) ; -- team's members
"RTN","SCRPBK3",104,0)
 N VAUTD,VAUTT,VAUTUC,VAUTR,SCRANG
"RTN","SCRPBK3",105,0)
 D BUILD(.SCQREC,"DIVISION",.VAUTD)
"RTN","SCRPBK3",106,0)
 D BUILD(.SCQREC,"TEAM",.VAUTT)
"RTN","SCRPBK3",107,0)
 D BUILD(.SCQREC,"USERCLASS",.VAUTUC)
"RTN","SCRPBK3",108,0)
 D BUILD(.SCQREC,"ROLE",.VAUTR)
"RTN","SCRPBK3",109,0)
 S SCRANG=$$RANGE(.SCQREC)
"RTN","SCRPBK3",110,0)
 S SCDATA(0)=$$ENTRY2^SCRPTM(.VAUTD,.VAUTT,.VAUTUC,.VAUTR,SCRANG,SCPNTR,SCRUNDT)
"RTN","SCRPBK3",111,0)
 Q
"RTN","SCRPBK3",112,0)
 ;
"RTN","SCRPBK3",113,0)
INIT(SCDATE,SCTIME,SCPTR,SCRUNDT,SCPNTR) ; -- setup of general vars
"RTN","SCRPBK3",114,0)
 N X
"RTN","SCRPBK3",115,0)
 S SCPNTR="Q;"_SCPTR
"RTN","SCRPBK3",116,0)
 S X=SCDATE_"."_$TR($TR(SCTIME,":")," ",0)
"RTN","SCRPBK3",117,0)
 S SCRUNDT=+X
"RTN","SCRPBK3",118,0)
 Q
"RTN","SCRPBK3",119,0)
 ;
"RTN","SCRPBK3",120,0)
BUILD(SCQREC,SCTYPE,VAUT) ; -- build selection array
"RTN","SCRPBK3",121,0)
 ; is type active
"RTN","SCRPBK3",122,0)
 IF '$$CHKTYPE^SCRPBK2(SCTYPE) G BUILDQ
"RTN","SCRPBK3",123,0)
 N SCX
"RTN","SCRPBK3",124,0)
 S SCX="",SCRT=$$ROOT(SCTYPE)
"RTN","SCRPBK3",125,0)
 F  S SCX=$O(SCQREC("SELECTIONS",SCTYPE,SCX)) Q:SCX=""  D
"RTN","SCRPBK3",126,0)
 . IF $D(@SCRT@(+SCX,0)) S VAUT(+SCX)=$P(^(0),U)
"RTN","SCRPBK3",127,0)
 IF $O(VAUT(0)) S VAUT=0
"RTN","SCRPBK3",128,0)
BUILDQ Q
"RTN","SCRPBK3",129,0)
 ;
"RTN","SCRPBK3",130,0)
ROOT(SCTYPE) ; -- determine global root for file type
"RTN","SCRPBK3",131,0)
 N Y
"RTN","SCRPBK3",132,0)
 IF SCTYPE="DIVISION" S Y="^DIC(4)" G ROOTQ
"RTN","SCRPBK3",133,0)
 IF SCTYPE="TEAM" S Y="^SCTM(404.51)" G ROOTQ
"RTN","SCRPBK3",134,0)
 IF SCTYPE="PRACTITIONER" S Y="^VA(200)" G ROOTQ
"RTN","SCRPBK3",135,0)
 IF SCTYPE="ROLE" S Y="^SD(403.46)" G ROOTQ
"RTN","SCRPBK3",136,0)
 IF SCTYPE="CLINIC" S Y="^SC" G ROOTQ
"RTN","SCRPBK3",137,0)
 IF SCTYPE="USERCLASS" S Y="^USR(8930)" G ROOTQ
"RTN","SCRPBK3",138,0)
ROOTQ Q Y
"RTN","SCRPBK3",139,0)
 ;
"RTN","SCRPBK3",140,0)
 ;
"RTN","SCRPBK3",141,0)
FINDSORT(SCQREC) ; -- find sort selected in report definition
"RTN","SCRPBK3",142,0)
 N I,SCRPT,SCSORT,SCSORTID
"RTN","SCRPBK3",143,0)
 S SCSORTID=1
"RTN","SCRPBK3",144,0)
 S SCRPT=+$G(SCQREC("REPORTID"))
"RTN","SCRPBK3",145,0)
 S SCSORT=$G(SCQREC("FIELDS","cboSort"))
"RTN","SCRPBK3",146,0)
 S I=0
"RTN","SCRPBK3",147,0)
 F  S I=$O(^SD(404.92,SCRPT,"SORTS",I)) Q:'I  IF $D(^(I,0)),$P(^(0),U)=SCSORT S SCSORTID=I Q
"RTN","SCRPBK3",148,0)
 Q SCSORTID
"RTN","SCRPBK3",149,0)
 ;
"RTN","SCRPBK3",150,0)
YESNO(SCQREC,SCFLD) ; -- determine yes/no field value
"RTN","SCRPBK3",151,0)
 Q ($G(SCQREC("FIELDS",SCFLD),"NO")="YES")
"RTN","SCRPBK3",152,0)
 ;
"RTN","SCRPBK3",153,0)
PSTATUS(SCQREC,SCFLD) ; -- determine pat status to show
"RTN","SCRPBK3",154,0)
 N VALUE
"RTN","SCRPBK3",155,0)
 S VALUE=$G(SCQREC("FIELDS",SCFLD))
"RTN","SCRPBK3",156,0)
 S VALUE=$S(VALUE=""!(VALUE="ALL"):1,1:VALUE)
"RTN","SCRPBK3",157,0)
 Q VALUE
"RTN","SCRPBK3",158,0)
 ;
"RTN","SCRPBK3",159,0)
PASSIGN(SCQREC,SCFLD) ; -- determine if assign patient's is requested
"RTN","SCRPBK3",160,0)
 Q ($G(SCQREC("FIELDS",SCFLD))="Primary Care")
"RTN","SCRPBK3",161,0)
 ;
"RTN","SCRPBK3",162,0)
RANGE(SCQREC) ; -- deterime date range
"RTN","SCRPBK3",163,0)
 Q $G(SCQREC("FIELDS","txtBeginDate"),DT)_U_$G(SCQREC("FIELDS","txtEndDate"),DT)
"RTN","SCRPBK3",164,0)
 ;
"RTN","SCRPBK4")
0^97^B24363596
"RTN","SCRPBK4",1,0)
SCRPBK4 ;MJK/ALB - RPC Broker Utilities ; 27 FEB 96
"RTN","SCRPBK4",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPBK4",3,0)
 ;
"RTN","SCRPBK4",4,0)
VALID(SCDATA,SCVM,SCQDEF) ; -- query definition validation
"RTN","SCRPBK4",5,0)
 ;
"RTN","SCRPBK4",6,0)
 ; input:  SCVM -> validation mode (FULL or SELECTIONS only)
"RTN","SCRPBK4",7,0)
 ;
"RTN","SCRPBK4",8,0)
 ;output:
"RTN","SCRPBK4",9,0)
 ;    SCDATA(0) -> 1 - meaning validation checks found no errors
"RTN","SCRPBK4",10,0)
 ;                        
"RTN","SCRPBK4",11,0)
 ;                --- OR ---
"RTN","SCRPBK4",12,0)
 ;
"RTN","SCRPBK4",13,0)
 ;    SCDATA(0) -> 0 - meaning errors found ^ <number of errors>
"RTN","SCRPBK4",14,0)
 ;SCDATA(1...n) -> error text
"RTN","SCRPBK4",15,0)
 ;
"RTN","SCRPBK4",16,0)
 ; -- SEE BOTTOM OF SCRPBK FOR MORW VARIABLE DEFINITIONS
"RTN","SCRPBK4",17,0)
 ;
"RTN","SCRPBK4",18,0)
 ; Related RPC: SCRP QUERY VALIDATE
"RTN","SCRPBK4",19,0)
 ;
"RTN","SCRPBK4",20,0)
 N SCQREC,SCTYPE,SCLOG,DIERR,SCER
"RTN","SCRPBK4",21,0)
 S SCLOG="SCDATA"
"RTN","SCRPBK4",22,0)
 ; -- build query record
"RTN","SCRPBK4",23,0)
 D PARSE^SCRPBK5(.SCQDEF,.SCQREC)
"RTN","SCRPBK4",24,0)
 ; -- validate query record
"RTN","SCRPBK4",25,0)
 D VALCHK(SCLOG,.SCQREC,SCVM)
"RTN","SCRPBK4",26,0)
 ; -- report back any erros found(if any) or 1 for success
"RTN","SCRPBK4",27,0)
 D HDREC^SCUTBK3(.SCDATA,$G(DIERR),"Template Validation ("_SCVM_")")
"RTN","SCRPBK4",28,0)
 Q
"RTN","SCRPBK4",29,0)
 ;
"RTN","SCRPBK4",30,0)
VALCHK(SCLOG,SCQREC,SCVM) ; -- determine validation mode and do appropriate checks
"RTN","SCRPBK4",31,0)
 IF SCVM="FULL" D VALFLDS(SCLOG,.SCQREC)
"RTN","SCRPBK4",32,0)
 IF SCVM="FULL"!(SCVM="SELECTIONS") D VALSELS(SCLOG,.SCQREC)
"RTN","SCRPBK4",33,0)
 Q
"RTN","SCRPBK4",34,0)
 ;
"RTN","SCRPBK4",35,0)
VALFLDS(SCLOG,SCQREC) ; -- validate field data
"RTN","SCRPBK4",36,0)
 N X,SCAN,SCFLD
"RTN","SCRPBK4",37,0)
 ;
"RTN","SCRPBK4",38,0)
 ; -- required single fields
"RTN","SCRPBK4",39,0)
 D GETFLDS^SCRPBK2(+SCQREC("REPORTID"),.SCAN)
"RTN","SCRPBK4",40,0)
 S SCFLD=""
"RTN","SCRPBK4",41,0)
 F  S SCFLD=$O(SCAN(SCFLD)) Q:SCFLD=""  S X=SCAN(SCFLD) D
"RTN","SCRPBK4",42,0)
 . IF $P(X,U,2),'$D(SCQREC("FIELDS",SCFLD)) D
"RTN","SCRPBK4",43,0)
 . . D SETFLD(SCLOG,$P($G(^SD(404.93,+X,0),"UNKNOWN"),U))
"RTN","SCRPBK4",44,0)
 Q
"RTN","SCRPBK4",45,0)
 ;
"RTN","SCRPBK4",46,0)
VALSELS(SCLOG,SCQREC) ; -- validate file entry selections
"RTN","SCRPBK4",47,0)
 N SCTYPE,SCAN
"RTN","SCRPBK4",48,0)
 ;
"RTN","SCRPBK4",49,0)
 ; -- have all required selections been made?
"RTN","SCRPBK4",50,0)
 K SCAN
"RTN","SCRPBK4",51,0)
 D GETYPE^SCRPBK2(+SCQREC("REPORTID"),.SCAN)
"RTN","SCRPBK4",52,0)
 S SCTYPE=""
"RTN","SCRPBK4",53,0)
 F  S SCTYPE=$O(SCAN(SCTYPE)) Q:SCTYPE=""  S X=SCAN(SCTYPE) D
"RTN","SCRPBK4",54,0)
 . IF $P(X,U,2),'$D(SCQREC("SELECTIONS",SCTYPE)) D
"RTN","SCRPBK4",55,0)
 . . D SETFLD(SCLOG,SCTYPE)
"RTN","SCRPBK4",56,0)
 ;
"RTN","SCRPBK4",57,0)
 ; -- are selections consistent?
"RTN","SCRPBK4",58,0)
 S SCTYPE=""
"RTN","SCRPBK4",59,0)
 F  S SCTYPE=$O(SCQREC("SELECTIONS",SCTYPE)) Q:SCTYPE=""  IF $D(SCAN(SCTYPE)) D
"RTN","SCRPBK4",60,0)
 . IF SCTYPE="DIVISION" D DIV(SCLOG,.SCQREC,SCTYPE)
"RTN","SCRPBK4",61,0)
 . IF SCTYPE="TEAM" D TEAM(SCLOG,.SCQREC,SCTYPE)
"RTN","SCRPBK4",62,0)
 . IF SCTYPE="PRACTITIONER" D PRAC(SCLOG,.SCQREC,SCTYPE)
"RTN","SCRPBK4",63,0)
 . IF SCTYPE="ROLE" D ROLE(SCLOG,.SCQREC,SCTYPE)
"RTN","SCRPBK4",64,0)
 . IF SCTYPE="CLINIC" D CLIN(SCLOG,.SCQREC,SCTYPE)
"RTN","SCRPBK4",65,0)
 . IF SCTYPE="USERCLASS" D USER(SCLOG,.SCQREC,SCTYPE)
"RTN","SCRPBK4",66,0)
 Q
"RTN","SCRPBK4",67,0)
 ;
"RTN","SCRPBK4",68,0)
DIV(SCLOG,SCQREC,SCTYPE) ; -- validate division selections
"RTN","SCRPBK4",69,0)
 N SCSEL,Y,SC0
"RTN","SCRPBK4",70,0)
 S SCSEL=""
"RTN","SCRPBK4",71,0)
 F  S SCSEL=$O(SCQREC("SELECTIONS",SCTYPE,SCSEL)) Q:SCSEL=""  D
"RTN","SCRPBK4",72,0)
 . S Y=SCSEL,SC0=$G(^DIC(4,+SCSEL,0))
"RTN","SCRPBK4",73,0)
 . IF $D(^SCTM(404.51,"AINST",+Y)) D
"RTN","SCRPBK4",74,0)
 . . Q
"RTN","SCRPBK4",75,0)
 . ELSE  D
"RTN","SCRPBK4",76,0)
 . . D SETSEL(SCLOG,SCTYPE,"NO TEAMS FOR DIVISION",SC0)
"RTN","SCRPBK4",77,0)
 Q
"RTN","SCRPBK4",78,0)
 ;
"RTN","SCRPBK4",79,0)
TEAM(SCLOG,SCQREC,SCTYPE) ; -- validate team selections
"RTN","SCRPBK4",80,0)
 N SCSEL,Y,SC0,VAUTD
"RTN","SCRPBK4",81,0)
 S SCSEL=""
"RTN","SCRPBK4",82,0)
 D BUILD^SCRPBK3(.SCQREC,"DIVISION",.VAUTD)
"RTN","SCRPBK4",83,0)
 F  S SCSEL=$O(SCQREC("SELECTIONS",SCTYPE,SCSEL)) Q:SCSEL=""  D
"RTN","SCRPBK4",84,0)
 . S Y=+SCSEL,SC0=$G(^SCTM(404.51,+SCSEL,0))
"RTN","SCRPBK4",85,0)
 . IF $D(VAUTD(+$P(SC0,U,7))) D
"RTN","SCRPBK4",86,0)
 . . Q
"RTN","SCRPBK4",87,0)
 . ELSE  D
"RTN","SCRPBK4",88,0)
 . . D SETSEL(SCLOG,SCTYPE,"DIVISION",SC0)
"RTN","SCRPBK4",89,0)
 Q
"RTN","SCRPBK4",90,0)
 ;
"RTN","SCRPBK4",91,0)
PRAC(SCLOG,SCQREC,SCTYPE) ; -- validate practitioner selections
"RTN","SCRPBK4",92,0)
 N SCSEL,Y,SC0,VAUTT
"RTN","SCRPBK4",93,0)
 S SCSEL=""
"RTN","SCRPBK4",94,0)
 IF SCQREC("REPORTID")=3 D
"RTN","SCRPBK4",95,0)
 . S VAUTT=1
"RTN","SCRPBK4",96,0)
 ELSE  D
"RTN","SCRPBK4",97,0)
 . D BUILD^SCRPBK3(.SCQREC,"TEAM",.VAUTT)
"RTN","SCRPBK4",98,0)
 F  S SCSEL=$O(SCQREC("SELECTIONS",SCTYPE,SCSEL)) Q:SCSEL=""  D
"RTN","SCRPBK4",99,0)
 . S Y=+SCSEL,SC0=$G(^VA(200,Y,0))
"RTN","SCRPBK4",100,0)
 . IF $D(VAUTT),$$PRACS^SCRPU1() D
"RTN","SCRPBK4",101,0)
 . . Q
"RTN","SCRPBK4",102,0)
 . ELSE  D
"RTN","SCRPBK4",103,0)
 . . D SETSEL(SCLOG,SCTYPE,"TEAM",SC0)
"RTN","SCRPBK4",104,0)
 Q
"RTN","SCRPBK4",105,0)
 ;
"RTN","SCRPBK4",106,0)
ROLE(SCLOG,SCQREC,SCTYPE) ; -- validate role selections
"RTN","SCRPBK4",107,0)
 N SCSEL,Y,SC0,VAUTT
"RTN","SCRPBK4",108,0)
 S SCSEL=""
"RTN","SCRPBK4",109,0)
 D BUILD^SCRPBK3(.SCQREC,"TEAM",.VAUTT)
"RTN","SCRPBK4",110,0)
 F  S SCSEL=$O(SCQREC("SELECTIONS",SCTYPE,SCSEL)) Q:SCSEL=""  D
"RTN","SCRPBK4",111,0)
 . S Y=+SCSEL,SC0=$G(^SD(403.46,Y,0))
"RTN","SCRPBK4",112,0)
 . IF $D(VAUTT),$$RL^SCRPU1() D
"RTN","SCRPBK4",113,0)
 . . Q
"RTN","SCRPBK4",114,0)
 . ELSE  D
"RTN","SCRPBK4",115,0)
 . . D SETSEL(SCLOG,SCTYPE,"TEAM",SC0)
"RTN","SCRPBK4",116,0)
 Q
"RTN","SCRPBK4",117,0)
 ;
"RTN","SCRPBK4",118,0)
CLIN(SCLOG,SCQREC,SCTYPE) ; -- validate clinic selections
"RTN","SCRPBK4",119,0)
 N SCSEL,Y,SC0,SCRPTID,VAUTD,VAUTT
"RTN","SCRPBK4",120,0)
 S SCSEL="",SCRPTID=SCQREC("REPORTID")
"RTN","SCRPBK4",121,0)
 IF SCRPTID=2 D
"RTN","SCRPBK4",122,0)
 . D BUILD^SCRPBK3(.SCQREC,"DIVISION",.VAUTD)
"RTN","SCRPBK4",123,0)
 ELSE  D
"RTN","SCRPBK4",124,0)
 . D BUILD^SCRPBK3(.SCQREC,"TEAM",.VAUTT)
"RTN","SCRPBK4",125,0)
 ;
"RTN","SCRPBK4",126,0)
 F  S SCSEL=$O(SCQREC("SELECTIONS",SCTYPE,SCSEL)) Q:SCSEL=""  D
"RTN","SCRPBK4",127,0)
 . S Y=+SCSEL,SC0=$G(^SC(Y,0))
"RTN","SCRPBK4",128,0)
 . IF SCRPTID=2,$D(VAUTD),$$CLSC2^SCRPU1() D  Q
"RTN","SCRPBK4",129,0)
 . . Q
"RTN","SCRPBK4",130,0)
 . ELSE  D  Q
"RTN","SCRPBK4",131,0)
 . . D SETSEL(SCLOG,SCTYPE,"DIVISION",SC0)
"RTN","SCRPBK4",132,0)
 . IF SCRPTID'=2,$D(VAUTT),$$CLSC^SCRPU1() D
"RTN","SCRPBK4",133,0)
 . . Q
"RTN","SCRPBK4",134,0)
 . ELSE  D
"RTN","SCRPBK4",135,0)
 . . D SETSEL(SCLOG,SCTYPE,"TEAM",SC0)
"RTN","SCRPBK4",136,0)
 Q
"RTN","SCRPBK4",137,0)
 ;
"RTN","SCRPBK4",138,0)
USER(SCLOG,SCQREC,SCTYPE) ; -- validate user selections
"RTN","SCRPBK4",139,0)
 N SCSEL,Y,SC0,VAUTT
"RTN","SCRPBK4",140,0)
 S SCSEL=""
"RTN","SCRPBK4",141,0)
 D BUILD^SCRPBK3(.SCQREC,"TEAM",.VAUTT)
"RTN","SCRPBK4",142,0)
 F  S SCSEL=$O(SCQREC("SELECTIONS",SCTYPE,SCSEL)) Q:SCSEL=""  D
"RTN","SCRPBK4",143,0)
 . S Y=+SCSEL,SC0=$G(^USR(8930,+SCSEL,0))
"RTN","SCRPBK4",144,0)
 . IF $D(VAUTT),$$USRCL^SCRPU1() D
"RTN","SCRPBK4",145,0)
 . . Q
"RTN","SCRPBK4",146,0)
 . ELSE  D
"RTN","SCRPBK4",147,0)
 . . D SETSEL(SCLOG,SCTYPE,"TEAM",SC0)
"RTN","SCRPBK4",148,0)
 Q
"RTN","SCRPBK4",149,0)
 ;
"RTN","SCRPBK4",150,0)
SETFLD(SCLOG,SCFLD) ; -- set field error in error log
"RTN","SCRPBK4",151,0)
 N SCPARM
"RTN","SCRPBK4",152,0)
 S SCPARM("FIELD")=SCFLD
"RTN","SCRPBK4",153,0)
 D BLD^DIALOG(4035001.001,.SCPARM,"",SCLOG,"S")
"RTN","SCRPBK4",154,0)
 Q
"RTN","SCRPBK4",155,0)
 ;
"RTN","SCRPBK4",156,0)
SETSEL(SCLOG,SCTYPE,SCDTYPE,SC0) ; -- set file entry error in error log
"RTN","SCRPBK4",157,0)
 N SCPARM
"RTN","SCRPBK4",158,0)
 S SCPARM("TYPE")=SCTYPE
"RTN","SCRPBK4",159,0)
 S SCPARM("SELECTION")=$P(SC0,U)
"RTN","SCRPBK4",160,0)
 S SCPARM("DEPENDENT")=SCDTYPE
"RTN","SCRPBK4",161,0)
 D BLD^DIALOG(4035001.002,.SCPARM,"",SCLOG,"S")
"RTN","SCRPBK4",162,0)
 Q
"RTN","SCRPBK4",163,0)
 ;
"RTN","SCRPBK5")
0^133^B5220163
"RTN","SCRPBK5",1,0)
SCRPBK5 ;MJK/ALB - RPC Broker Utilities ; 27 FEB 96
"RTN","SCRPBK5",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPBK5",3,0)
 ;
"RTN","SCRPBK5",4,0)
PARSE(SCQDEF,SCQREC) ; -- parse incoming raw broker array
"RTN","SCRPBK5",5,0)
 ; -- return formatted query record
"RTN","SCRPBK5",6,0)
 ;
"RTN","SCRPBK5",7,0)
 ; -- SEE BOTTOM OF SCRPBK FOR VARIABLE DEFINITIONS
"RTN","SCRPBK5",8,0)
 ;
"RTN","SCRPBK5",9,0)
 N SCINC,X
"RTN","SCRPBK5",10,0)
 ;
"RTN","SCRPBK5",11,0)
 ; -- build internal formatted variables
"RTN","SCRPBK5",12,0)
 S SCINC=1,X=SCQDEF(SCINC)
"RTN","SCRPBK5",13,0)
 S SCQREC("NAME")=$P(X,U)
"RTN","SCRPBK5",14,0)
 S SCQREC("CREATORID")=+$P(X,U,2)
"RTN","SCRPBK5",15,0)
 S SCQREC("ACCESSID")=+$P(X,U,3)
"RTN","SCRPBK5",16,0)
 S SCQREC("REPORTID")=+$P(X,U,4)
"RTN","SCRPBK5",17,0)
 ;
"RTN","SCRPBK5",18,0)
 ; -- build external formatted variables
"RTN","SCRPBK5",19,0)
 S SCINC=2,X=SCQDEF(SCINC)
"RTN","SCRPBK5",20,0)
 S SCQREC("QUERYID")=$P(X,U)
"RTN","SCRPBK5",21,0)
 S SCQREC("CREATOR")=$P(X,U,2)
"RTN","SCRPBK5",22,0)
 S SCQREC("ACCESS")=$P(X,U,3)
"RTN","SCRPBK5",23,0)
 S SCQREC("REPORT")=$P(X,U,4)
"RTN","SCRPBK5",24,0)
 ;
"RTN","SCRPBK5",25,0)
 F  S SCINC=$O(SCQDEF(SCINC)) Q:'SCINC  S X=$G(SCQDEF(SCINC)) D
"RTN","SCRPBK5",26,0)
 . IF X="[Description]" D DESC(.SCINC,.SCQDEF,.SCQREC)
"RTN","SCRPBK5",27,0)
 . ; -- get fields
"RTN","SCRPBK5",28,0)
 . IF X="[Fields]" D FIELDS(.SCINC,.SCQDEF,.SCQREC)
"RTN","SCRPBK5",29,0)
 . ; -- get files
"RTN","SCRPBK5",30,0)
 . IF X="[Selections]" D SELECT(.SCINC,.SCQDEF,.SCQREC)
"RTN","SCRPBK5",31,0)
 Q
"RTN","SCRPBK5",32,0)
 ;
"RTN","SCRPBK5",33,0)
DESC(SCINC,SCQDEF,SCQREC) ; -- build query description
"RTN","SCRPBK5",34,0)
 N I,X
"RTN","SCRPBK5",35,0)
 S I=0
"RTN","SCRPBK5",36,0)
 F  S SCINC=$O(SCQDEF(SCINC)) Q:'SCINC  S X=$G(SCQDEF(+SCINC)) Q:X="$$END"  D
"RTN","SCRPBK5",37,0)
 . S I=I+1,SCQREC("DESCRIPTION",I,0)=X
"RTN","SCRPBK5",38,0)
 Q
"RTN","SCRPBK5",39,0)
 ;
"RTN","SCRPBK5",40,0)
FIELDS(SCINC,SCQRY,SCQREC) ; -- build field answeredk
"RTN","SCRPBK5",41,0)
 N X
"RTN","SCRPBK5",42,0)
 F  S SCINC=$O(SCQDEF(SCINC)) Q:'SCINC  S X=$G(SCQDEF(+SCINC)) Q:X="$$END"  D
"RTN","SCRPBK5",43,0)
 . S SCQREC("FIELDS",$P(X,U))=$P(X,U,2)
"RTN","SCRPBK5",44,0)
 Q
"RTN","SCRPBK5",45,0)
 ;
"RTN","SCRPBK5",46,0)
SELECT(SCINC,SCQRY,SCQREC) ; -- build file entries selected
"RTN","SCRPBK5",47,0)
 N X
"RTN","SCRPBK5",48,0)
 F  S SCINC=$O(SCQDEF(SCINC)) Q:'SCINC  S X=$G(SCQDEF(+SCINC)) Q:X="$$END"  D
"RTN","SCRPBK5",49,0)
 . S SCQREC("SELECTIONS",$P(X,U,2),$$SEL(X))=""
"RTN","SCRPBK5",50,0)
 Q
"RTN","SCRPBK5",51,0)
 ;
"RTN","SCRPBK5",52,0)
SEL(SEL) ; -- set vp for selection
"RTN","SCRPBK5",53,0)
 N Y,IEN,SCTYPE
"RTN","SCRPBK5",54,0)
 S SCTYPE=$P(SEL,U,2),IEN=+$P(SEL,U,3),Y="NOT VALID: "_SCTYPE
"RTN","SCRPBK5",55,0)
 IF SCTYPE="DIVISION" S Y="DIC(4," G SELQ
"RTN","SCRPBK5",56,0)
 IF SCTYPE="TEAM" S Y="SCTM(404.51," G SELQ
"RTN","SCRPBK5",57,0)
 IF SCTYPE="PRACTITIONER" S Y="VA(200," G SELQ
"RTN","SCRPBK5",58,0)
 IF SCTYPE="ROLE" S Y="SD(403.46," G SELQ
"RTN","SCRPBK5",59,0)
 IF SCTYPE="CLINIC" S Y="SC(" G SELQ
"RTN","SCRPBK5",60,0)
 IF SCTYPE="USERCLASS" S Y="USR(8930," G SELQ
"RTN","SCRPBK5",61,0)
SELQ Q IEN_";"_Y
"RTN","SCRPBK5",62,0)
 ;
"RTN","SCRPEC")
0^75^B15107592
"RTN","SCRPEC",1,0)
SCRPEC ;ALB/CMM - Detail List of Pts & Enroll Clinics ;01/17/96
"RTN","SCRPEC",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPEC",3,0)
 ;
"RTN","SCRPEC",4,0)
 ;Detailed Listing of Patients and Their Enrolled Clinics Report
"RTN","SCRPEC",5,0)
 ;
"RTN","SCRPEC",6,0)
PROMPTS ;
"RTN","SCRPEC",7,0)
 ;Prompt for Institution, Team, Clinic, Assigned or Unassigned to Primary
"RTN","SCRPEC",8,0)
 ;Care, and Print device
"RTN","SCRPEC",9,0)
 ;
"RTN","SCRPEC",10,0)
 N VAUTD,VAUTT,VAUTC,VAUTA,QTIME,PRNT
"RTN","SCRPEC",11,0)
 K VAUTD,VAUTT,VAUTC,VAUTA,VAUTCA,SCUP
"RTN","SCRPEC",12,0)
 S QTIME=""
"RTN","SCRPEC",13,0)
 D INST^SCRPU1 I Y=-1 G ERR
"RTN","SCRPEC",14,0)
 K Y D PRMTT^SCRPU1 I '$D(VAUTT) G ERR
"RTN","SCRPEC",15,0)
 S VAUTCA="" ;allows for selection of any clinic in one of the selected divisions
"RTN","SCRPEC",16,0)
 K Y D CLINIC^SCRPU1 I '$D(VAUTC) G ERR
"RTN","SCRPEC",17,0)
 K Y D ASSUN^SCRPU2 I '$D(VAUTA) G ERR
"RTN","SCRPEC",18,0)
 S PRNT=$$PDEVICE^SCRPU3()
"RTN","SCRPEC",19,0)
 I PRNT=-1 G ERR
"RTN","SCRPEC",20,0)
 I PRNT["Q;" S QTIME=$$GETTIME^SCRPU3()
"RTN","SCRPEC",21,0)
 I QTIME=-1 G ERR
"RTN","SCRPEC",22,0)
 K Y
"RTN","SCRPEC",23,0)
 I PRNT'?1"Q;".E S PRNT="Q;"_PRNT
"RTN","SCRPEC",24,0)
 N NUMBER
"RTN","SCRPEC",25,0)
 S NUMBER=$$ENTRY2(.VAUTD,.VAUTT,.VAUTC,.VAUTA,PRNT,QTIME)
"RTN","SCRPEC",26,0)
 I NUMBER>0 W !!,"Print queued, task number: ",NUMBER
"RTN","SCRPEC",27,0)
 Q
"RTN","SCRPEC",28,0)
 ;
"RTN","SCRPEC",29,0)
ENTRY2(INST,TEAM,CLINIC,ASSUN,IOP,ZTDTH) ;
"RTN","SCRPEC",30,0)
 ;Second entry point for GUI to use
"RTN","SCRPEC",31,0)
 ;Input Parameters:
"RTN","SCRPEC",32,0)
 ;INST - institutions selected (variable and array)
"RTN","SCRPEC",33,0)
 ;TEAM - teams selected (variable and array)
"RTN","SCRPEC",34,0)
 ;CLINIC - clinics selected (variable and array)
"RTN","SCRPEC",35,0)
 ;ASSUN - Assigned or Unassigned to PC
"RTN","SCRPEC",36,0)
 ;IOP - print device
"RTN","SCRPEC",37,0)
 ;ZTDTH - queue time (optional)
"RTN","SCRPEC",38,0)
 ;
"RTN","SCRPEC",39,0)
 ;validate parameters
"RTN","SCRPEC",40,0)
 I '$D(INST)!'$D(TEAM)!'$D(CLINIC)!'$D(ASSUN)!'$D(IOP)!(IOP="") Q
"RTN","SCRPEC",41,0)
 ;
"RTN","SCRPEC",42,0)
 N NUMBER
"RTN","SCRPEC",43,0)
 S IOST=$P(IOP,"^",2),IOP=$P(IOP,"^")
"RTN","SCRPEC",44,0)
 I IOP?1"Q;".E S IOP=$P(IOP,"Q;",2)
"RTN","SCRPEC",45,0)
 I IOST?1"C-".E D QENTRY G RET
"RTN","SCRPEC",46,0)
 I ZTDTH="" S ZTDTH=$H
"RTN","SCRPEC",47,0)
 S ZTRTN="QENTRY^SCRPEC"
"RTN","SCRPEC",48,0)
 S ZTDESC="Detailed Patient List & Enrolled Clinics",ZTIO=IOP
"RTN","SCRPEC",49,0)
 N II
"RTN","SCRPEC",50,0)
 F II="INST","TEAM","CLINIC","ASSUN","INST(","TEAM(","CLINIC(","IOP" S ZTSAVE(II)=""
"RTN","SCRPEC",51,0)
 D ^%ZTLOAD
"RTN","SCRPEC",52,0)
RET S NUMBER=0
"RTN","SCRPEC",53,0)
 I $D(ZTSK) S NUMBER=ZTSK
"RTN","SCRPEC",54,0)
 D EXIT1
"RTN","SCRPEC",55,0)
 Q NUMBER
"RTN","SCRPEC",56,0)
 ;
"RTN","SCRPEC",57,0)
QENTRY ;
"RTN","SCRPEC",58,0)
 ;driver entry point
"RTN","SCRPEC",59,0)
 S VAUTTN=""
"RTN","SCRPEC",60,0)
 S TITL="Clinic Enrollments - "_$S(ASSUN=1:"Assigned PC",1:"Not Assigned PC")
"RTN","SCRPEC",61,0)
 S STORE="^TMP("_$J_",""SCRPEC"")"
"RTN","SCRPEC",62,0)
 K @STORE
"RTN","SCRPEC",63,0)
 S @STORE=0
"RTN","SCRPEC",64,0)
 D FIND^SCRPEC3
"RTN","SCRPEC",65,0)
 I $O(@STORE@(0))="" S NODATA=$$NODATA^SCRPU3(TITL)
"RTN","SCRPEC",66,0)
 I '$D(NODATA) D PRINTIT^SCRPEC3(STORE,IOP,TITL)
"RTN","SCRPEC",67,0)
 D EXIT2
"RTN","SCRPEC",68,0)
 Q
"RTN","SCRPEC",69,0)
 ;
"RTN","SCRPEC",70,0)
ERR ;
"RTN","SCRPEC",71,0)
EXIT1 ;
"RTN","SCRPEC",72,0)
 K ZTSAVE,ZTSK,ZTIO,ZTDTH,ZTRTN,ZTDESC,VAUTCA,SCUP
"RTN","SCRPEC",73,0)
 Q
"RTN","SCRPEC",74,0)
EXIT2 ;
"RTN","SCRPEC",75,0)
 K @STORE
"RTN","SCRPEC",76,0)
 K STORE,VAUTTN,PAGE,TITL,IOP,TITL,NODATA,CLINIC,ASSUN,INST,TEAM,STOP
"RTN","SCRPEC",77,0)
 Q
"RTN","SCRPEC",78,0)
 ;
"RTN","SCRPEC",79,0)
PDATA(DFN,CLNEN,FLAG) ;
"RTN","SCRPEC",80,0)
 ;Collect and format data for report
"RTN","SCRPEC",81,0)
 ;
"RTN","SCRPEC",82,0)
 N NODE,NAME,PID,PELIG,MT,PSTAT,STATD,DATA,LAST,NEXT,CEN,CNAME
"RTN","SCRPEC",83,0)
 S DATA=""
"RTN","SCRPEC",84,0)
 S NODE=$G(^DPT(DFN,0))
"RTN","SCRPEC",85,0)
 S NAME=$P(NODE,"^") ;patient name
"RTN","SCRPEC",86,0)
 S PID=$P($G(^DPT(DFN,.36)),"^",3),PID=$TR(PID,"-","") ;PID without '-'s
"RTN","SCRPEC",87,0)
 S MT=$P(NODE,"^",4) ;means test category
"RTN","SCRPEC",88,0)
 S PELIG=$$ELIG^SCRPU3(DFN) ;primary eligibility
"RTN","SCRPEC",89,0)
 ;
"RTN","SCRPEC",90,0)
 S CNAME=$P($G(^SC(CLNEN,0)),"^")
"RTN","SCRPEC",91,0)
 S CEN=+$O(^DPT(DFN,"DE","B",CLNEN,""))
"RTN","SCRPEC",92,0)
 S NODE=$G(^DPT(DFN,"DE",CEN,1,1,0))
"RTN","SCRPEC",93,0)
 S PSTAT=$P(NODE,"^",2) S PSTAT=PSTAT_$S(PSTAT="A":"C",PSTAT="O":"PT",1:"") ;opt or ac status
"RTN","SCRPEC",94,0)
 I $P(NODE,"^")="" S STATD=""
"RTN","SCRPEC",95,0)
 I $P(NODE,"^")'="" S STATD=$E($P(NODE,"^"),4,5)_"/"_$E($P(NODE,"^"),6,7)_"/"_$E($P(NODE,"^"),2,3) ;enrollment date
"RTN","SCRPEC",96,0)
 S LAST=$$GETLAST^SCRPU3(DFN,CLNEN) ;last clinic appointment
"RTN","SCRPEC",97,0)
 S NEXT=$$GETNEXT^SCRPU3(DFN,CLNEN) ;next clinic appointment
"RTN","SCRPEC",98,0)
 I '$D(FLAG) S DATA=$$FORMAT^SCRPEC2(NAME,PID,MT,PELIG,PSTAT,STATD,LAST,NEXT,CNAME),DATA=$E(NAME,1,20)_"^"_DATA
"RTN","SCRPEC",99,0)
 I $D(FLAG) S DATA=$E(NAME,1,20)_"^"_PID_"^"_MT_"^"_PELIG_"^"_PSTAT_"^"_STATD_"^"_LAST_"^"_NEXT
"RTN","SCRPEC",100,0)
 Q DATA
"RTN","SCRPEC",101,0)
 ;
"RTN","SCRPEC2")
0^44^B26588462
"RTN","SCRPEC2",1,0)
SCRPEC2 ;ALB/CMM - Detail List of Pts & Enroll Clinics Continued ;01/17/96
"RTN","SCRPEC2",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPEC2",3,0)
 ;
"RTN","SCRPEC2",4,0)
 ;Detailed Listing of Patients and Their Enrolled Clinics Report
"RTN","SCRPEC2",5,0)
 ;
"RTN","SCRPEC2",6,0)
PAT(TIEN,PTLIST) ;
"RTN","SCRPEC2",7,0)
 ;TIEN - team ien
"RTN","SCRPEC2",8,0)
 ;PTLIST - array holding patients assigned to team TIEN
"RTN","SCRPEC2",9,0)
 ;
"RTN","SCRPEC2",10,0)
 N PTIEN,ENT,NODE,OKAY,CLLIST,ERR,PC
"RTN","SCRPEC2",11,0)
 S ENT=0,CLLIST="LIST2",ERR="ERROR2"
"RTN","SCRPEC2",12,0)
 K @CLLIST
"RTN","SCRPEC2",13,0)
 F  S ENT=$O(@PTLIST@(ENT)) Q:ENT=""!(ENT'?.N)  D
"RTN","SCRPEC2",14,0)
 .S NODE=$G(@PTLIST@(ENT))
"RTN","SCRPEC2",15,0)
 .Q:NODE=""
"RTN","SCRPEC2",16,0)
 .S PTIEN=+$P(NODE,"^") ;patient ien
"RTN","SCRPEC2",17,0)
 .S PC=$$PCASSIGN(PTIEN,TIEN)
"RTN","SCRPEC2",18,0)
 .Q:PC'=ASSUN  ;not selected assigned/unassigned primary care
"RTN","SCRPEC2",19,0)
 .K @CLLIST
"RTN","SCRPEC2",20,0)
 .S OKAY=$$CLPT^SCAPMC29(PTIEN,"","",.CLLIST,.ERR)
"RTN","SCRPEC2",21,0)
 .;all clinics for patient PTIEN
"RTN","SCRPEC2",22,0)
 .Q:'OKAY
"RTN","SCRPEC2",23,0)
 .D KEEP(TIEN,PTIEN,.CLLIST)
"RTN","SCRPEC2",24,0)
 K @CLLIST
"RTN","SCRPEC2",25,0)
 Q
"RTN","SCRPEC2",26,0)
 ;
"RTN","SCRPEC2",27,0)
KEEP(TIEN,PTIEN,CLLIST) ;keep data for report
"RTN","SCRPEC2",28,0)
 ;TIEN - team ien
"RTN","SCRPEC2",29,0)
 ;PTIEN - patient ien
"RTN","SCRPEC2",30,0)
 ;CLLIST - array holding clinics for patient PTIEN
"RTN","SCRPEC2",31,0)
 ;
"RTN","SCRPEC2",32,0)
 N ENT,TNAME,INS,NODE,INAME,PDATA,NODE,CIEN,CNAME,PNAME
"RTN","SCRPEC2",33,0)
 S TNAME=$P($G(^SCTM(404.51,TIEN,0)),"^") ;team name
"RTN","SCRPEC2",34,0)
 S INS=+$P($G(^SCTM(404.51,TIEN,0)),"^",7) ;institution ien
"RTN","SCRPEC2",35,0)
 S INAME=$P($G(^DIC(4,INS,0)),"^") ;institution name
"RTN","SCRPEC2",36,0)
 S PNAME=$P($G(^DPT(PTIEN,0)),"^") ;patient name
"RTN","SCRPEC2",37,0)
 ;
"RTN","SCRPEC2",38,0)
 S ENT=0
"RTN","SCRPEC2",39,0)
 F  S ENT=$O(@CLLIST@(ENT)) Q:ENT=""!(ENT'?.N)  D
"RTN","SCRPEC2",40,0)
 .S NODE=$G(@CLLIST@(ENT))
"RTN","SCRPEC2",41,0)
 .S CIEN=+$P(NODE,"^") ;clinic ien
"RTN","SCRPEC2",42,0)
 .I CLINIC'=1,'$D(CLINIC(CIEN)) Q
"RTN","SCRPEC2",43,0)
 .S CNAME=$P(NODE,"^",2) ;clinic name
"RTN","SCRPEC2",44,0)
 .D SETUP(INS,INAME,TIEN,TNAME,PTIEN,PNAME,CIEN,CNAME)
"RTN","SCRPEC2",45,0)
 .S PDATA=$$PDATA^SCRPEC(PTIEN,CIEN,1)
"RTN","SCRPEC2",46,0)
 .;name^pid^mt^pelig^pstat^statd^last^next
"RTN","SCRPEC2",47,0)
 .D FORMAT(PTIEN,INS,TIEN,PDATA,CNAME,CIEN)
"RTN","SCRPEC2",48,0)
 Q
"RTN","SCRPEC2",49,0)
 ;
"RTN","SCRPEC2",50,0)
SETUP(INS,INAME,TIEN,TNAME,PTIEN,PNAME,CIEN,CNAME) ;
"RTN","SCRPEC2",51,0)
 ;INS - institution ien
"RTN","SCRPEC2",52,0)
 ;INAME - institution name
"RTN","SCRPEC2",53,0)
 ;TIEN - team ien
"RTN","SCRPEC2",54,0)
 ;TNAME - team name
"RTN","SCRPEC2",55,0)
 ;PTIEN - patient ien
"RTN","SCRPEC2",56,0)
 ;PNAME - patient name
"RTN","SCRPEC2",57,0)
 ;CIEN - clinic ien
"RTN","SCRPEC2",58,0)
 ;CNAME - clinic name
"RTN","SCRPEC2",59,0)
 ;
"RTN","SCRPEC2",60,0)
 I INAME="" S INAME="[BAD DATA]"
"RTN","SCRPEC2",61,0)
 I TNAME="" S TNAME="[BAD DATA]"
"RTN","SCRPEC2",62,0)
 I CNAME="" S CNAME="[BAD DATA]"
"RTN","SCRPEC2",63,0)
 I PNAME="" S PNAME="[BAD DATA]"
"RTN","SCRPEC2",64,0)
 I '$D(@STORE@("I",INAME,INS)) S @STORE@("I",INAME,INS)="",@STORE@(INS)="Division: "_INAME
"RTN","SCRPEC2",65,0)
 I '$D(@STORE@("T",INS,TNAME,TIEN)) S @STORE@("T",INS,TNAME,TIEN)="",@STORE@(INS,TIEN)="Team: "_TNAME
"RTN","SCRPEC2",66,0)
 I '$D(@STORE@("C",INS,TIEN,CNAME,CIEN)) S @STORE@("C",INS,TIEN,CNAME,CIEN)="" D HEADER(INS,TIEN,CIEN)
"RTN","SCRPEC2",67,0)
 I '$D(@STORE@("PT",INS,TIEN,CIEN,PNAME,PTIEN)) S @STORE@("PT",INS,TIEN,CIEN,PNAME,PTIEN)=""
"RTN","SCRPEC2",68,0)
 Q
"RTN","SCRPEC2",69,0)
 ;
"RTN","SCRPEC2",70,0)
PCASSIGN(DFN,TIEN) ;patient assigned to team as primary care
"RTN","SCRPEC2",71,0)
 ;DFN - patient ien
"RTN","SCRPEC2",72,0)
 ;TIEN - team ien
"RTN","SCRPEC2",73,0)
 ;1 - yes
"RTN","SCRPEC2",74,0)
 ;0 - no
"RTN","SCRPEC2",75,0)
 ;
"RTN","SCRPEC2",76,0)
 N ADATE,ENTRY,PC
"RTN","SCRPEC2",77,0)
 S PC=0
"RTN","SCRPEC2",78,0)
 I '$D(^SCPT(404.42,"AIDT",DFN,TIEN)) Q PC
"RTN","SCRPEC2",79,0)
 S ADATE=$O(^SCPT(404.42,"AIDT",DFN,TIEN,"")) ; -team assignemtn date
"RTN","SCRPEC2",80,0)
 S ENTRY=$O(^SCPT(404.42,"AIDT",DFN,TIEN,ADATE,"")) ;patient team assignemtn ien
"RTN","SCRPEC2",81,0)
 I $P($G(^SCPT(404.42,+ENTRY,0)),"^",8)=1 S PC=1
"RTN","SCRPEC2",82,0)
 Q PC
"RTN","SCRPEC2",83,0)
 ;
"RTN","SCRPEC2",84,0)
HEADER(INS,PTM,CLNEN) ;
"RTN","SCRPEC2",85,0)
 ;report column titles
"RTN","SCRPEC2",86,0)
 N HLD
"RTN","SCRPEC2",87,0)
 S HLD="H0"
"RTN","SCRPEC2",88,0)
 S $E(@STORE@(INS,PTM,CLNEN,HLD),20)="Prim"
"RTN","SCRPEC2",89,0)
 S $E(@STORE@(INS,PTM,CLNEN,HLD),28)="MT"
"RTN","SCRPEC2",90,0)
 S $E(@STORE@(INS,PTM,CLNEN,HLD),32)="Pat"
"RTN","SCRPEC2",91,0)
 S $E(@STORE@(INS,PTM,CLNEN,HLD),37)="Status"
"RTN","SCRPEC2",92,0)
 S $E(@STORE@(INS,PTM,CLNEN,HLD),46)="Lst"
"RTN","SCRPEC2",93,0)
 S $E(@STORE@(INS,PTM,CLNEN,HLD),56)="Nxt"
"RTN","SCRPEC2",94,0)
 S $E(@STORE@(INS,PTM,CLNEN,HLD),65)="Enrolled"
"RTN","SCRPEC2",95,0)
 S HLD="H1"
"RTN","SCRPEC2",96,0)
 S @STORE@(INS,PTM,CLNEN,HLD)="Pt Name"
"RTN","SCRPEC2",97,0)
 S $E(@STORE@(INS,PTM,CLNEN,HLD),12)="Pt ID"
"RTN","SCRPEC2",98,0)
 S $E(@STORE@(INS,PTM,CLNEN,HLD),20)="Elig"
"RTN","SCRPEC2",99,0)
 S $E(@STORE@(INS,PTM,CLNEN,HLD),28)="Cat"
"RTN","SCRPEC2",100,0)
 S $E(@STORE@(INS,PTM,CLNEN,HLD),32)="Stat"
"RTN","SCRPEC2",101,0)
 S $E(@STORE@(INS,PTM,CLNEN,HLD),37)="Date"
"RTN","SCRPEC2",102,0)
 S $E(@STORE@(INS,PTM,CLNEN,HLD),46)="Appt"
"RTN","SCRPEC2",103,0)
 S $E(@STORE@(INS,PTM,CLNEN,HLD),56)="Appt"
"RTN","SCRPEC2",104,0)
 S $E(@STORE@(INS,PTM,CLNEN,HLD),65)="Clinic"
"RTN","SCRPEC2",105,0)
 S HLD="H2"
"RTN","SCRPEC2",106,0)
 S $P(@STORE@(INS,PTM,CLNEN,HLD),"=",80)=""
"RTN","SCRPEC2",107,0)
 Q
"RTN","SCRPEC2",108,0)
 ;
"RTN","SCRPEC2",109,0)
FORMAT(PTIEN,INS,TIEN,PDATA,CNAME,CIEN) ;format data for report
"RTN","SCRPEC2",110,0)
 ;PTIEN - patient ien
"RTN","SCRPEC2",111,0)
 ;INS - institution ien
"RTN","SCRPEC2",112,0)
 ;TIEN - team ien
"RTN","SCRPEC2",113,0)
 ;PDATA - pt name^pid^mt^pelig^pstat^statd^last^next
"RTN","SCRPEC2",114,0)
 ;CNAME - clinic name
"RTN","SCRPEC2",115,0)
 ;CIEN - clinic ien
"RTN","SCRPEC2",116,0)
 ;
"RTN","SCRPEC2",117,0)
 S @STORE@(INS,TIEN,CIEN,PTIEN)=$E($P(PDATA,"^"),1,10) ;patient name
"RTN","SCRPEC2",118,0)
 S $E(@STORE@(INS,TIEN,CIEN,PTIEN),12)=$E($P(PDATA,"^",2),6,10) ;primary long id last 4 plus P
"RTN","SCRPEC2",119,0)
 S $E(@STORE@(INS,TIEN,CIEN,PTIEN),18)=$P(PDATA,"^",4) ;primary eligibility
"RTN","SCRPEC2",120,0)
 S $E(@STORE@(INS,TIEN,CIEN,PTIEN),29)=$P(PDATA,"^",3) ;means test category
"RTN","SCRPEC2",121,0)
 S $E(@STORE@(INS,TIEN,CIEN,PTIEN),32)=$P(PDATA,"^",5) ;patient status
"RTN","SCRPEC2",122,0)
 S $E(@STORE@(INS,TIEN,CIEN,PTIEN),36)=$P(PDATA,"^",6) ;status date
"RTN","SCRPEC2",123,0)
 S $E(@STORE@(INS,TIEN,CIEN,PTIEN),46)=$P(PDATA,"^",7) ;last appointment
"RTN","SCRPEC2",124,0)
 S $E(@STORE@(INS,TIEN,CIEN,PTIEN),56)=$P(PDATA,"^",8) ;next appointment
"RTN","SCRPEC2",125,0)
 S $E(@STORE@(INS,TIEN,CIEN,PTIEN),65)=$E(CNAME,1,15) ;clinic name
"RTN","SCRPEC2",126,0)
 Q
"RTN","SCRPEC2",127,0)
 ;
"RTN","SCRPEC2",128,0)
CHEAD(INS,TEAM,CLINIC) ;
"RTN","SCRPEC2",129,0)
 ;column headings
"RTN","SCRPEC2",130,0)
 ;
"RTN","SCRPEC2",131,0)
 N EN,NEWP
"RTN","SCRPEC2",132,0)
 W !
"RTN","SCRPEC2",133,0)
 S NEWP=0
"RTN","SCRPEC2",134,0)
 I IOST'?1"C-".E,$Y+5>(IOSL-6) D NEWP1^SCRPU3(.PAGE,TITL) S NEWP=1
"RTN","SCRPEC2",135,0)
 I IOST?1"C-".E,$Y+5>(IOSL-6) D HOLD^SCRPU3(.PAGE,TITL) S NEWP=1
"RTN","SCRPEC2",136,0)
 I STOP Q
"RTN","SCRPEC2",137,0)
 I NEWP W !,$G(@STORE@(INS)),!!,$G(@STORE@(INS,TEAM)),!
"RTN","SCRPEC2",138,0)
 F EN="H0","H1","H2" W !,$G(@STORE@(INS,TEAM,CLINIC,EN))
"RTN","SCRPEC2",139,0)
 Q
"RTN","SCRPEC2",140,0)
 ;
"RTN","SCRPEC3")
0^76^B8395241
"RTN","SCRPEC3",1,0)
SCRPEC3 ;ALB/CMM - Detail List of Pts & Enroll Clinics ;01/17/96
"RTN","SCRPEC3",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPEC3",3,0)
 ;
"RTN","SCRPEC3",4,0)
 ;Detailed Listing of Patients and Their Enrolled Clinics Report
"RTN","SCRPEC3",5,0)
 ;
"RTN","SCRPEC3",6,0)
FIND ;
"RTN","SCRPEC3",7,0)
 N TIEN,OKAY,PTLIST,ERR
"RTN","SCRPEC3",8,0)
 I TEAM=1 D TALL^SCRPPAT3 ;get all teams for all divisions selected
"RTN","SCRPEC3",9,0)
 S TIEN=0,PTLIST="LIST",ERR="ERROR"
"RTN","SCRPEC3",10,0)
 K @PTLIST
"RTN","SCRPEC3",11,0)
 F  S TIEN=$O(TEAM(TIEN)) Q:TIEN=""!(TIEN'?.N)  D
"RTN","SCRPEC3",12,0)
 .K @PTLIST,@ERR
"RTN","SCRPEC3",13,0)
 .S OKAY=$$PTTM^SCAPMC2(TIEN,"",.PTLIST,.ERR)
"RTN","SCRPEC3",14,0)
 .Q:'OKAY
"RTN","SCRPEC3",15,0)
 .D PAT^SCRPEC2(TIEN,.PTLIST)
"RTN","SCRPEC3",16,0)
 K @PTLIST
"RTN","SCRPEC3",17,0)
 Q
"RTN","SCRPEC3",18,0)
 ;
"RTN","SCRPEC3",19,0)
PRINTIT(STORE,IOP,TITL) ;
"RTN","SCRPEC3",20,0)
 ;print title
"RTN","SCRPEC3",21,0)
 D OPEN^SCRPU3
"RTN","SCRPEC3",22,0)
 W !,"IOST= ",IOST
"RTN","SCRPEC3",23,0)
 N INS,EINST,ETEAM,TEAM,ECLN,CLINIC,PAGE,FIRST,PTIEN,PTNAME
"RTN","SCRPEC3",24,0)
 S PAGE=1,STOP=0
"RTN","SCRPEC3",25,0)
 D TITLE^SCRPU3(.PAGE,TITL)
"RTN","SCRPEC3",26,0)
 S (INS,EINST)=""
"RTN","SCRPEC3",27,0)
 S FIRST=0
"RTN","SCRPEC3",28,0)
 F  S EINST=$O(@STORE@("I",EINST)) Q:EINST=""!(STOP)  D
"RTN","SCRPEC3",29,0)
 .S INS=$O(@STORE@("I",EINST,INS))
"RTN","SCRPEC3",30,0)
 .Q:INS=""
"RTN","SCRPEC3",31,0)
 .I FIRST,IOST'?1"C-".E D NEWP1^SCRPU3(.PAGE,TITL)
"RTN","SCRPEC3",32,0)
 .I FIRST,IOST?1"C-".E D HOLD^SCRPU3(.PAGE,TITL)
"RTN","SCRPEC3",33,0)
 .Q:STOP
"RTN","SCRPEC3",34,0)
 .I IOST'?1"C-".E,$Y>(IOSL-8) D NEWP1^SCRPU3(.PAGE,TITL)
"RTN","SCRPEC3",35,0)
 .I IOST?1"C-".E,$Y>(IOSL-8) D HOLD^SCRPU3(.PAGE,TITL)
"RTN","SCRPEC3",36,0)
 .Q:STOP!INS=""
"RTN","SCRPEC3",37,0)
 .W !,$G(@STORE@(INS)) ;write institution
"RTN","SCRPEC3",38,0)
 .S FIRST=1
"RTN","SCRPEC3",39,0)
 .S (ETEAM,TEAM)=""
"RTN","SCRPEC3",40,0)
 .F  W ! S ETEAM=$O(@STORE@("T",INS,ETEAM)) Q:ETEAM=""!(STOP)  D
"RTN","SCRPEC3",41,0)
 ..S TEAM=$O(@STORE@("T",INS,ETEAM,""))
"RTN","SCRPEC3",42,0)
 ..I IOST'?1"C-".E,$Y>(IOSL-8) D NEWP1^SCRPU3(.PAGE,TITL) W:'STOP !,$G(@STORE@(INS))
"RTN","SCRPEC3",43,0)
 ..I IOST?1"C-".E,$Y>(IOSL-8) D HOLD^SCRPU3(.PAGE,TITL) W:'STOP !,$G(@STORE@(INS))
"RTN","SCRPEC3",44,0)
 ..I STOP Q
"RTN","SCRPEC3",45,0)
 ..W !!,$G(@STORE@(INS,TEAM)) ;write team
"RTN","SCRPEC3",46,0)
 ..S (ECLN,CLINIC)=0
"RTN","SCRPEC3",47,0)
 ..F  S ECLN=$O(@STORE@("C",INS,TEAM,ECLN)) Q:ECLN=""!(STOP)  D
"RTN","SCRPEC3",48,0)
 ...S CLINIC=$O(@STORE@("C",INS,TEAM,ECLN,""))
"RTN","SCRPEC3",49,0)
 ...W !
"RTN","SCRPEC3",50,0)
 ...D CHEAD^SCRPEC2(INS,TEAM,CLINIC)
"RTN","SCRPEC3",51,0)
 ...S PTNAME=""
"RTN","SCRPEC3",52,0)
 ...F  S PTNAME=$O(@STORE@("PT",INS,TEAM,CLINIC,PTNAME)) Q:PTNAME=""!(STOP)  D
"RTN","SCRPEC3",53,0)
 ....S PTIEN=$O(@STORE@("PT",INS,TEAM,CLINIC,PTNAME,""))
"RTN","SCRPEC3",54,0)
 ....I IOST'?1"C-".E,$Y>(IOSL-8) D NEWP1^SCRPU3(.PAGE,TITL) Q:STOP  W !,$G(@STORE@(INS)),!!,$G(@STORE@(INS,TEAM)),! D CHEAD^SCRPEC2(INS,TEAM,CLINIC)
"RTN","SCRPEC3",55,0)
 ....I IOST?1"C-".E,$Y>(IOSL-8) D HOLD^SCRPU3(.PAGE,TITL) Q:STOP  W !,$G(@STORE@(INS)),!!,$G(@STORE@(INS,TEAM)),! D CHEAD^SCRPEC2(INS,TEAM,CLINIC)
"RTN","SCRPEC3",56,0)
 ....Q:STOP
"RTN","SCRPEC3",57,0)
 ....W !,$G(@STORE@(INS,TEAM,CLINIC,PTIEN))
"RTN","SCRPEC3",58,0)
 D CLOSE^SCRPU3
"RTN","SCRPEC3",59,0)
 Q
"RTN","SCRPEC3",60,0)
 ;
"RTN","SCRPITP")
0^45^B18713783
"RTN","SCRPITP",1,0)
SCRPITP ;ALB/CMM - Individual Team Profile ;02/02/96
"RTN","SCRPITP",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPITP",3,0)
 ;
"RTN","SCRPITP",4,0)
 ;Individual Team Profile
"RTN","SCRPITP",5,0)
 ;
"RTN","SCRPITP",6,0)
PROMPTS ;
"RTN","SCRPITP",7,0)
 ;Prompt for Institution, Team, and Print device
"RTN","SCRPITP",8,0)
 ;
"RTN","SCRPITP",9,0)
 N QTIME,PRNT,VAUTD,VAUTT,Y,NUMBER
"RTN","SCRPITP",10,0)
 K VAUTD,VAUTT,SCUP
"RTN","SCRPITP",11,0)
 S QTIME=""
"RTN","SCRPITP",12,0)
 D INST^SCRPU1 I Y=-1 G ERR
"RTN","SCRPITP",13,0)
 K Y D PRMTT^SCRPU1 I '$D(VAUTT) G ERR
"RTN","SCRPITP",14,0)
 S PRNT=$$PDEVICE^SCRPU3()
"RTN","SCRPITP",15,0)
 I PRNT=-1 G ERR
"RTN","SCRPITP",16,0)
 I PRNT["Q;" S QTIME=$$GETTIME^SCRPU3()
"RTN","SCRPITP",17,0)
 I QTIME=-1 G ERR
"RTN","SCRPITP",18,0)
 I PRNT'?1"Q;".E S PRNT="Q;"_PRNT
"RTN","SCRPITP",19,0)
 S NUMBER=$$ENTRY2(.VAUTD,.VAUTT,PRNT,QTIME)
"RTN","SCRPITP",20,0)
 I NUMBER>0 W !!,"Print queued, task number: ",NUMBER
"RTN","SCRPITP",21,0)
 Q
"RTN","SCRPITP",22,0)
 ;
"RTN","SCRPITP",23,0)
ENTRY2(INST,TEAM,IOP,ZTDTH) ;
"RTN","SCRPITP",24,0)
 ;Second entry point for GUI to use
"RTN","SCRPITP",25,0)
 ;Input Parameters:
"RTN","SCRPITP",26,0)
 ;INST - institutions selected (variable and array)
"RTN","SCRPITP",27,0)
 ;TEAM - teams selected (variable and array)
"RTN","SCRPITP",28,0)
 ;IOP - print device
"RTN","SCRPITP",29,0)
 ;ZTDTH - queue time (optional)
"RTN","SCRPITP",30,0)
 ;
"RTN","SCRPITP",31,0)
 ;validate parameters
"RTN","SCRPITP",32,0)
 I '$D(INST)!'$D(TEAM)!'$D(IOP)!(IOP="") Q
"RTN","SCRPITP",33,0)
 ;
"RTN","SCRPITP",34,0)
 N NUMBER
"RTN","SCRPITP",35,0)
 S IOST=$P(IOP,"^",2),IOP=$P(IOP,"^")
"RTN","SCRPITP",36,0)
 I IOP?1"Q;".E S IOP=$P(IOP,"Q;",2)
"RTN","SCRPITP",37,0)
 I IOST?1"C-".E D QENTRY G RET
"RTN","SCRPITP",38,0)
 I ZTDTH="" S ZTDTH=$H
"RTN","SCRPITP",39,0)
 S ZTRTN="QENTRY^SCRPITP"
"RTN","SCRPITP",40,0)
 S ZTDESC="Summary Listing Of Teams",ZTIO=IOP
"RTN","SCRPITP",41,0)
 N II
"RTN","SCRPITP",42,0)
 F II="INST","TEAM","INST(","TEAM(","IOP" S ZTSAVE(II)=""
"RTN","SCRPITP",43,0)
 D ^%ZTLOAD
"RTN","SCRPITP",44,0)
RET S NUMBER=0
"RTN","SCRPITP",45,0)
 I $D(ZTSK) S NUMBER=ZTSK
"RTN","SCRPITP",46,0)
 D EXIT1
"RTN","SCRPITP",47,0)
 Q NUMBER
"RTN","SCRPITP",48,0)
 ;
"RTN","SCRPITP",49,0)
QENTRY ;
"RTN","SCRPITP",50,0)
 ;driver entry point
"RTN","SCRPITP",51,0)
 S TITL="Primary Care Management Team Profile"
"RTN","SCRPITP",52,0)
 S STORE="^TMP("_$J_",""SCRPITP"")"
"RTN","SCRPITP",53,0)
 K @STORE
"RTN","SCRPITP",54,0)
 S @STORE=0
"RTN","SCRPITP",55,0)
 I TEAM=1 D TALL^SCRPPAT3 S TEAM=0
"RTN","SCRPITP",56,0)
 D FIND
"RTN","SCRPITP",57,0)
 I $O(@STORE@(0))="" S NODATA=$$NODATA^SCRPU3(TITL)
"RTN","SCRPITP",58,0)
 I '$D(NODATA) D PRINTIT(STORE,IOP,TITL)
"RTN","SCRPITP",59,0)
 D EXIT2
"RTN","SCRPITP",60,0)
 Q
"RTN","SCRPITP",61,0)
 ;
"RTN","SCRPITP",62,0)
ERR ;
"RTN","SCRPITP",63,0)
EXIT1 ;
"RTN","SCRPITP",64,0)
 K ZTDTH,ZTRTN,ZTDESC,ZTSK,ZTIO,ZTSAVE
"RTN","SCRPITP",65,0)
 Q
"RTN","SCRPITP",66,0)
 ;
"RTN","SCRPITP",67,0)
EXIT2 ;
"RTN","SCRPITP",68,0)
 K @STORE
"RTN","SCRPITP",69,0)
 K STOP,STORE,TITL,IOP,TEAM,INST,NODATA
"RTN","SCRPITP",70,0)
 Q
"RTN","SCRPITP",71,0)
 ;
"RTN","SCRPITP",72,0)
FIND ;
"RTN","SCRPITP",73,0)
 N TM,EN,NODE,TMP
"RTN","SCRPITP",74,0)
 S TM=""
"RTN","SCRPITP",75,0)
 F  S TM=$O(^SCTM(404.57,"C",TM)) Q:TM=""  D
"RTN","SCRPITP",76,0)
 .;$O through team position file
"RTN","SCRPITP",77,0)
 .I '$D(TEAM(TM))&(TEAM'=1) Q
"RTN","SCRPITP",78,0)
 .;Q above, not a selected team
"RTN","SCRPITP",79,0)
 .;selected team
"RTN","SCRPITP",80,0)
 .S EN=""
"RTN","SCRPITP",81,0)
 .F  S EN=$O(^SCTM(404.57,"C",TM,EN)) Q:EN=""  D
"RTN","SCRPITP",82,0)
 ..I '$D(^SCTM(404.57,EN,0)) Q
"RTN","SCRPITP",83,0)
 ..S NODE=$G(^SCTM(404.57,EN,0))
"RTN","SCRPITP",84,0)
 ..Q:NODE=""
"RTN","SCRPITP",85,0)
 ..;active or inactive position
"RTN","SCRPITP",86,0)
 ..S TMP=$$DATES^SCAPMCU1(404.59,EN,DT)
"RTN","SCRPITP",87,0)
 ..I +TMP D KEEP^SCRPITP2(NODE,EN,TM)
"RTN","SCRPITP",88,0)
 Q
"RTN","SCRPITP",89,0)
 ;
"RTN","SCRPITP",90,0)
PRINTIT(STORE,IOP,TITL) ;
"RTN","SCRPITP",91,0)
 D OPEN^SCRPU3
"RTN","SCRPITP",92,0)
 N INST,EINST,ETEAM,TEM,NEW,PAGE,TNAME,TIEN,EN,SUB,POS,CIEN,INF
"RTN","SCRPITP",93,0)
 S (INST,EINST)="",STOP=0,PAGE=1
"RTN","SCRPITP",94,0)
 D TITLE^SCRPU3(.PAGE,TITL)
"RTN","SCRPITP",95,0)
 D FORHEAD^SCRPITP2
"RTN","SCRPITP",96,0)
 F  S EINST=$O(@STORE@("I",EINST)) Q:EINST=""!(STOP)  D
"RTN","SCRPITP",97,0)
 .S INST=$O(@STORE@("I",EINST,""))
"RTN","SCRPITP",98,0)
 .I INST="" Q
"RTN","SCRPITP",99,0)
 .I $D(NEW),(IOST'?1"C-".E) D NEWP1^SCRPU3(.PAGE,TITL) K NEW
"RTN","SCRPITP",100,0)
 .I $D(NEW),(IOST?1"C-".E)  K NEW D HOLD^SCRPU3(.PAGE,TITL)
"RTN","SCRPITP",101,0)
 .I STOP Q
"RTN","SCRPITP",102,0)
 .S NEW=""
"RTN","SCRPITP",103,0)
 .W !,$G(@STORE@(INST)),!
"RTN","SCRPITP",104,0)
 .;write team info
"RTN","SCRPITP",105,0)
 .S TNAME=""
"RTN","SCRPITP",106,0)
 .F  S TNAME=$O(@STORE@("T",INST,TNAME)) Q:TNAME=""!(STOP)  D
"RTN","SCRPITP",107,0)
 ..S TIEN=$O(@STORE@("T",INST,TNAME,""))
"RTN","SCRPITP",108,0)
 ..I TIEN="" Q
"RTN","SCRPITP",109,0)
 ..F SUB="TI","D","PC","AC" D
"RTN","SCRPITP",110,0)
 ...Q:STOP
"RTN","SCRPITP",111,0)
 ...I '$D(@STORE@(INST,TIEN,SUB)) Q
"RTN","SCRPITP",112,0)
 ...S EN=""
"RTN","SCRPITP",113,0)
 ...F  S EN=$O(@STORE@(INST,TIEN,SUB,EN)) Q:EN=""!(STOP)  D
"RTN","SCRPITP",114,0)
 ....I IOST'?1"C-".E,$Y>(IOSL-8) D NEWP1^SCRPU3(.PAGE,TITL) S NEW=""
"RTN","SCRPITP",115,0)
 ....I IOST?1"C-".E,$Y>(IOSL-8) D HOLD^SCRPU3(.PAGE,TITL) S NEW=""
"RTN","SCRPITP",116,0)
 ....I STOP Q
"RTN","SCRPITP",117,0)
 ....I '$D(NEW) W !,$G(@STORE@(INST)),!,$G(@STORE@(INST,TIEN)),!
"RTN","SCRPITP",118,0)
 ....W !,$G(@STORE@(INST,TIEN,SUB,EN))
"RTN","SCRPITP",119,0)
 ...W !
"RTN","SCRPITP",120,0)
 ..;write position info
"RTN","SCRPITP",121,0)
 ..S POS=""
"RTN","SCRPITP",122,0)
 ..I $Y<IOSL-8 D COLUMN^SCRPITP2
"RTN","SCRPITP",123,0)
 ..F  S POS=$O(@STORE@(INST,TIEN,"P",POS)) Q:POS=""!(POS'?.N)!(STOP)  D
"RTN","SCRPITP",124,0)
 ...I IOST'?1"C-".E,$Y>(IOSL-8) D NEWP1^SCRPU3(.PAGE,TITL) Q:STOP  D COLUMN^SCRPITP2 S NEW=""
"RTN","SCRPITP",125,0)
 ...I IOST?1"C-".E,$Y>(IOSL-8) D HOLD^SCRPU3(.PAGE,TITL) Q:STOP  D COLUMN^SCRPITP2 S NEW=""
"RTN","SCRPITP",126,0)
 ...I STOP Q
"RTN","SCRPITP",127,0)
 ...W !,$G(@STORE@(INST,TIEN,"P",POS))
"RTN","SCRPITP",128,0)
 ..W !
"RTN","SCRPITP",129,0)
 D CLOSE^SCRPU3
"RTN","SCRPITP",130,0)
 Q
"RTN","SCRPITP",131,0)
 ;
"RTN","SCRPITP2")
0^46^B17427768
"RTN","SCRPITP2",1,0)
SCRPITP2 ;ALB/CMM - Individual Team Profile Continued ;02/02/96
"RTN","SCRPITP2",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPITP2",3,0)
 ;
"RTN","SCRPITP2",4,0)
 ;Individual Team Profile
"RTN","SCRPITP2",5,0)
 ;
"RTN","SCRPITP2",6,0)
KEEP(TNODE,TPOS,TM) ;
"RTN","SCRPITP2",7,0)
 ;TNODE - zero node of the team position file entry TPOS
"RTN","SCRPITP2",8,0)
 ;TPOS - ien of team position file entry TNODE
"RTN","SCRPITP2",9,0)
 ;TM - ien of team
"RTN","SCRPITP2",10,0)
 ;
"RTN","SCRPITP2",11,0)
 N POS,PPC,CLIEN,PCLIN,MAX,ROL,CIEN,DIV
"RTN","SCRPITP2",12,0)
 ;
"RTN","SCRPITP2",13,0)
 D TEAM(TM,.DIV)
"RTN","SCRPITP2",14,0)
 ;
"RTN","SCRPITP2",15,0)
 S POS=$P(TNODE,"^") ;position name
"RTN","SCRPITP2",16,0)
 S ROL=$P($G(^SD(403.46,+$P(TNODE,"^",3),0)),"^") ;standard position
"RTN","SCRPITP2",17,0)
 S PPC=$S($P(TNODE,"^",4)=1:"YES",1:"NO") ;primary care position
"RTN","SCRPITP2",18,0)
 S MAX=$P(TNODE,"^",8)
"RTN","SCRPITP2",19,0)
 ;
"RTN","SCRPITP2",20,0)
 S CIEN=+$P(TNODE,"^",9) ;clinic ien
"RTN","SCRPITP2",21,0)
 S PCLIN=""
"RTN","SCRPITP2",22,0)
 I CIEN>0 S PCLIN=$P($G(^SC(CIEN,0)),"^") ;associated clinic
"RTN","SCRPITP2",23,0)
 ;
"RTN","SCRPITP2",24,0)
 D FORMAT(POS,PPC,MAX,DIV,TM,TPOS,ROL,PCLIN)
"RTN","SCRPITP2",25,0)
 ;
"RTN","SCRPITP2",26,0)
 Q
"RTN","SCRPITP2",27,0)
 ;
"RTN","SCRPITP2",28,0)
TEAM(TM,DIV) ;
"RTN","SCRPITP2",29,0)
 ;
"RTN","SCRPITP2",30,0)
 N TMN,TNAME,TDIV,TPHONE,TPC,TSERV,STAT,PUR,MAX,CUR
"RTN","SCRPITP2",31,0)
 S TMN=$G(^SCTM(404.51,TM,0)) ;zero node of team file
"RTN","SCRPITP2",32,0)
 S TNAME=$P(TMN,"^") ;team name
"RTN","SCRPITP2",33,0)
 S DIV=+$P(TMN,"^",7) ;division ien
"RTN","SCRPITP2",34,0)
 S TDIV=$P($G(^DIC(4,DIV,0)),"^") ;team division
"RTN","SCRPITP2",35,0)
 S TPHONE=$P(TMN,"^",2) ;team phone
"RTN","SCRPITP2",36,0)
 S TPC=+$P(TMN,"^",5) ;Primary Care Team ien
"RTN","SCRPITP2",37,0)
 S TSERV=$P($G(^DIC(49,+$P(TMN,"^",6),0)),"^") ;Service/section
"RTN","SCRPITP2",38,0)
 S STAT=$S(+$$ACTTM^SCMCTMU(TM)=1:"ACTIVE",1:"INACTIVE") ;Team status
"RTN","SCRPITP2",39,0)
 S PUR=$P($G(^SD(403.47,+$P(TMN,"^",3),0)),"^")
"RTN","SCRPITP2",40,0)
 S MAX=$P(TMN,"^",8)
"RTN","SCRPITP2",41,0)
 S CUR=$$TEAMCNT^SCAPMCU1(TM,DT)
"RTN","SCRPITP2",42,0)
 D TFORMAT(TNAME,DIV,TDIV,TM,TPHONE,TPC,TSERV,STAT,PUR,MAX,CUR)
"RTN","SCRPITP2",43,0)
 ;
"RTN","SCRPITP2",44,0)
 ;GET TEAM DESCRIPTION (WORD PROCESSING FIELD)
"RTN","SCRPITP2",45,0)
 D TDESC(TM,DIV)
"RTN","SCRPITP2",46,0)
 Q
"RTN","SCRPITP2",47,0)
TDESC(TEM,DIV) ;
"RTN","SCRPITP2",48,0)
 ;gets team description - word processing field
"RTN","SCRPITP2",49,0)
 N EN
"RTN","SCRPITP2",50,0)
 S EN=0
"RTN","SCRPITP2",51,0)
 S @STORE@(DIV,TEM,"D",0)="Team Description: "
"RTN","SCRPITP2",52,0)
 S @STORE@(DIV,TEM,"D",1)=""
"RTN","SCRPITP2",53,0)
 F  S EN=$O(^SCTM(404.51,TEM,"D",EN)) Q:EN=""  D
"RTN","SCRPITP2",54,0)
 .S @STORE@(DIV,TEM,"D",EN+1)=$G(^SCTM(404.51,TEM,"D",EN,0))
"RTN","SCRPITP2",55,0)
 Q
"RTN","SCRPITP2",56,0)
 ;
"RTN","SCRPITP2",57,0)
TFORMAT(TNAME,DIV,TDIV,TM,TPHONE,TPC,TSERV,STAT,PUR,MAX,CUR) ;
"RTN","SCRPITP2",58,0)
 ;
"RTN","SCRPITP2",59,0)
 I TNAME="" S TNAME="[BAD DATA]"
"RTN","SCRPITP2",60,0)
 I TDIV="" S TDIV="[BAD DATA]"
"RTN","SCRPITP2",61,0)
 S @STORE@("I",TDIV,DIV)=""
"RTN","SCRPITP2",62,0)
 S @STORE@("T",DIV,TNAME,TM)=""
"RTN","SCRPITP2",63,0)
 S @STORE@(DIV)="Division: "_TDIV
"RTN","SCRPITP2",64,0)
 ;
"RTN","SCRPITP2",65,0)
 S @STORE@(DIV,TM,"TI",1)="Team Name: "_TNAME
"RTN","SCRPITP2",66,0)
 S $E(@STORE@(DIV,TM,"TI",1),40)="Service/Section: "_$E(TSERV,1,20)
"RTN","SCRPITP2",67,0)
 S @STORE@(DIV,TM,"TI",2)="Team Phone: "_TPHONE
"RTN","SCRPITP2",68,0)
 S @STORE@(DIV,TM,"TI",3)=""
"RTN","SCRPITP2",69,0)
 S @STORE@(DIV,TM,"TI",4)="Team Settings:"
"RTN","SCRPITP2",70,0)
 S @STORE@(DIV,TM,"TI",5)=""
"RTN","SCRPITP2",71,0)
 S @STORE@(DIV,TM,"TI",6)="Status: "_STAT
"RTN","SCRPITP2",72,0)
 S $E(@STORE@(DIV,TM,"TI",6),40)="Purpose: "_$E(PUR,1,35)
"RTN","SCRPITP2",73,0)
 S @STORE@(DIV,TM,"TI",7)="Maximum Patients: "_MAX
"RTN","SCRPITP2",74,0)
 S @STORE@(DIV,TM,"TI",8)=""
"RTN","SCRPITP2",75,0)
 ;
"RTN","SCRPITP2",76,0)
 I TPC S @STORE@(DIV,TM,"PC",0)="This team can provide primary care."
"RTN","SCRPITP2",77,0)
 I 'TPC S @STORE@(DIV,TM,"PC",0)="This team does not provide primary care."
"RTN","SCRPITP2",78,0)
 ;
"RTN","SCRPITP2",79,0)
 I CUR+1>MAX S @STORE@(DIV,TM,"AC",0)="This team is not accepting patients."
"RTN","SCRPITP2",80,0)
 I CUR<MAX,CUR'=MAX S @STORE@(DIV,TM,"AC",0)="This team is still accepting patients."
"RTN","SCRPITP2",81,0)
 Q
"RTN","SCRPITP2",82,0)
 ;
"RTN","SCRPITP2",83,0)
FORMAT(POS,PPC,MAX,DIV,TM,TPOS,ROL,CNAME) ;
"RTN","SCRPITP2",84,0)
 ;
"RTN","SCRPITP2",85,0)
 I TPOS="" S TPOS="[BAD DATA]"
"RTN","SCRPITP2",86,0)
 S @STORE@(DIV,TM,"P",TPOS)=$E(POS,1,20) ;position
"RTN","SCRPITP2",87,0)
 S $E(@STORE@(DIV,TM,"P",TPOS),22)=$E(ROL,1,20) ;standard role
"RTN","SCRPITP2",88,0)
 S $E(@STORE@(DIV,TM,"P",TPOS),45)=PPC ;primary care yes/no
"RTN","SCRPITP2",89,0)
 S $E(@STORE@(DIV,TM,"P",TPOS),55)=MAX ;number of patients allowed
"RTN","SCRPITP2",90,0)
 S $E(@STORE@(DIV,TM,"P",TPOS),62)=$E(CNAME,1,15) ;clinic name
"RTN","SCRPITP2",91,0)
 Q
"RTN","SCRPITP2",92,0)
 ;
"RTN","SCRPITP2",93,0)
FORHEAD ;
"RTN","SCRPITP2",94,0)
 S @STORE@("C",2)="Position"
"RTN","SCRPITP2",95,0)
 S $E(@STORE@("C",1),22)="Standard"
"RTN","SCRPITP2",96,0)
 S $E(@STORE@("C",2),22)="Role"
"RTN","SCRPITP2",97,0)
 S $E(@STORE@("C",1),44)="Primary"
"RTN","SCRPITP2",98,0)
 S $E(@STORE@("C",2),46)="Care"
"RTN","SCRPITP2",99,0)
 S $E(@STORE@("C",1),53)="Patients"
"RTN","SCRPITP2",100,0)
 S $E(@STORE@("C",2),53)="Allowed"
"RTN","SCRPITP2",101,0)
 S $E(@STORE@("C",2),64)="Clinic"
"RTN","SCRPITP2",102,0)
 S $P(@STORE@("C",3),"=",81)=""
"RTN","SCRPITP2",103,0)
 Q
"RTN","SCRPITP2",104,0)
COLUMN ;
"RTN","SCRPITP2",105,0)
 I STOP Q
"RTN","SCRPITP2",106,0)
 N EN
"RTN","SCRPITP2",107,0)
 S EN=0
"RTN","SCRPITP2",108,0)
 F  S EN=$O(@STORE@("C",EN)) Q:EN=""  D
"RTN","SCRPITP2",109,0)
 .W !,$G(@STORE@("C",EN))
"RTN","SCRPITP2",110,0)
 Q
"RTN","SCRPITP2",111,0)
 ;
"RTN","SCRPPAT")
0^47^B30040138
"RTN","SCRPPAT",1,0)
SCRPPAT ;ALB/CMM - Practitioner's Patients ;02/20/96
"RTN","SCRPPAT",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPPAT",3,0)
 ;
"RTN","SCRPPAT",4,0)
 ;Listing of Practitioner's Patients
"RTN","SCRPPAT",5,0)
 ;
"RTN","SCRPPAT",6,0)
PROMPTS ;
"RTN","SCRPPAT",7,0)
 ;Prompt for division, team, role, practitioner, summary only and print device
"RTN","SCRPPAT",8,0)
 ;
"RTN","SCRPPAT",9,0)
 N QTIME,PRNT,VAUTP,Y,VAUTD,VAUTT,VAUTR,VAUTS,SORT,NUMBER
"RTN","SCRPPAT",10,0)
 K SCUP
"RTN","SCRPPAT",11,0)
 S QTIME=""
"RTN","SCRPPAT",12,0)
 D INST^SCRPU1 I Y=-1 G ERR
"RTN","SCRPPAT",13,0)
 K Y D PRMTT^SCRPU1 I '$D(VAUTT) G ERR
"RTN","SCRPPAT",14,0)
 K Y D ROLE^SCRPU1 I '$D(VAUTR) G ERR
"RTN","SCRPPAT",15,0)
 D PRACT^SCRPU1 I '$D(VAUTP) G ERR
"RTN","SCRPPAT",16,0)
 S VAUTS=$$SUMM^SCRPU2() I VAUTS<0 G ERR
"RTN","SCRPPAT",17,0)
 S SORT=$$SORT^SCRPU2() I SORT<1 G ERR
"RTN","SCRPPAT",18,0)
 S PRNT=$$PDEVICE^SCRPU3()
"RTN","SCRPPAT",19,0)
 I PRNT=-1 G ERR
"RTN","SCRPPAT",20,0)
 I PRNT["Q;" S QTIME=$$GETTIME^SCRPU3()
"RTN","SCRPPAT",21,0)
 I QTIME=-1 G ERR
"RTN","SCRPPAT",22,0)
 I PRNT'?1"Q;".E S PRNT="Q;"_PRNT
"RTN","SCRPPAT",23,0)
 S NUMBER=$$ENTRY2(.VAUTD,.VAUTT,.VAUTR,.VAUTP,VAUTS,SORT,PRNT,QTIME)
"RTN","SCRPPAT",24,0)
 I NUMBER>0 W !!,"Print queued, task number: ",NUMBER
"RTN","SCRPPAT",25,0)
 Q
"RTN","SCRPPAT",26,0)
 ;
"RTN","SCRPPAT",27,0)
ENTRY2(INST,TEAM,ROLE,PRACT,SUMM,SORT,IOP,ZTDTH) ;
"RTN","SCRPPAT",28,0)
 ;Second entry point for GUI to use
"RTN","SCRPPAT",29,0)
 ;Input Parameters:
"RTN","SCRPPAT",30,0)
 ;INST - institutions selected (variable and array)
"RTN","SCRPPAT",31,0)
 ;TEAM - teams selected (variable and array)
"RTN","SCRPPAT",32,0)
 ;ROLE - roles selected (variable and array)
"RTN","SCRPPAT",33,0)
 ;PRACT - practitioners selected (ien new person file) - (variable and array)
"RTN","SCRPPAT",34,0)
 ;SUMM - summary info? y/n (1-yes/0-no) yes don't print patient data
"RTN","SCRPPAT",35,0)
 ;SORT - sort criteria (1-d,t,p/2-d,p,t)
"RTN","SCRPPAT",36,0)
 ;IOP - print device
"RTN","SCRPPAT",37,0)
 ;ZTDTH - queue time (optional)
"RTN","SCRPPAT",38,0)
 ;
"RTN","SCRPPAT",39,0)
 ;validate parameters
"RTN","SCRPPAT",40,0)
 I '$D(INST)!'$D(TEAM)!'$D(ROLE)!'$D(PRACT)!'$D(SUMM)!'$D(SORT)!'$D(IOP)!(IOP="") Q
"RTN","SCRPPAT",41,0)
 ;
"RTN","SCRPPAT",42,0)
 N NUMBER
"RTN","SCRPPAT",43,0)
 S IOST=$P(IOP,"^",2),IOP=$P(IOP,"^")
"RTN","SCRPPAT",44,0)
 I IOP?1"Q;".E S IOP=$P(IOP,"Q;",2)
"RTN","SCRPPAT",45,0)
 I IOST?1"C-".E D QENTRY G RET
"RTN","SCRPPAT",46,0)
 I ZTDTH="" S ZTDTH=$H
"RTN","SCRPPAT",47,0)
 S ZTRTN="QENTRY^SCRPPAT"
"RTN","SCRPPAT",48,0)
 S ZTDESC="Practitioner's Patients",ZTIO=IOP
"RTN","SCRPPAT",49,0)
 N II
"RTN","SCRPPAT",50,0)
 F II="INST","INST(","TEAM","TEAM(","ROLE","ROLE(","PRACT(","PRACT","SUMM","IOP","SORT" S ZTSAVE(II)=""
"RTN","SCRPPAT",51,0)
 D ^%ZTLOAD
"RTN","SCRPPAT",52,0)
RET S NUMBER=0
"RTN","SCRPPAT",53,0)
 I $D(ZTSK) S NUMBER=ZTSK
"RTN","SCRPPAT",54,0)
 D EXIT1
"RTN","SCRPPAT",55,0)
 Q NUMBER
"RTN","SCRPPAT",56,0)
 ;
"RTN","SCRPPAT",57,0)
QENTRY ;
"RTN","SCRPPAT",58,0)
 ;driver entry point
"RTN","SCRPPAT",59,0)
 S TITL="Practitioner's Patients"
"RTN","SCRPPAT",60,0)
 I SUMM S TITL=TITL_" Summary Report"
"RTN","SCRPPAT",61,0)
 S STORE="^TMP("_$J_",""SCRPPAT"")"
"RTN","SCRPPAT",62,0)
 K @STORE
"RTN","SCRPPAT",63,0)
 S @STORE=0
"RTN","SCRPPAT",64,0)
 D DRIVE^SCRPPAT2
"RTN","SCRPPAT",65,0)
 I $O(@STORE@(0))="" S NODATA=$$NODATA^SCRPU3(TITL)
"RTN","SCRPPAT",66,0)
 I '$D(NODATA) D PRINTIT(STORE,IOP,TITL,SORT)
"RTN","SCRPPAT",67,0)
 D EXIT2
"RTN","SCRPPAT",68,0)
 Q
"RTN","SCRPPAT",69,0)
 ;
"RTN","SCRPPAT",70,0)
ERR ;
"RTN","SCRPPAT",71,0)
EXIT1 ;
"RTN","SCRPPAT",72,0)
 K ZTDTH,ZTRTN,ZTDESC,ZTSK,ZTIO,ZTSAVE,VAUTD,VAUTT,VAUTP,VAUTR
"RTN","SCRPPAT",73,0)
 K SCUP,VAUTS,SORT
"RTN","SCRPPAT",74,0)
 Q
"RTN","SCRPPAT",75,0)
 ;
"RTN","SCRPPAT",76,0)
EXIT2 ;
"RTN","SCRPPAT",77,0)
 K @STORE
"RTN","SCRPPAT",78,0)
 K STORE,TITL,IOP,PRACT,INST,TEAM,ROLE,SORT,SUMM,NODATA,STOP
"RTN","SCRPPAT",79,0)
 Q
"RTN","SCRPPAT",80,0)
 ;
"RTN","SCRPPAT",81,0)
PRINTIT(STORE,IOP,TITL,SORT) ; Print All Data
"RTN","SCRPPAT",82,0)
 ;STORE - global location of data
"RTN","SCRPPAT",83,0)
 ;IOP - device to print to
"RTN","SCRPPAT",84,0)
 ;TITL - title of report
"RTN","SCRPPAT",85,0)
 ;SORT - sort order 1-div,team,pract/2-div,pract,team
"RTN","SCRPPAT",86,0)
 ;
"RTN","SCRPPAT",87,0)
 N PAGE
"RTN","SCRPPAT",88,0)
 S PAGE=1,STOP=0
"RTN","SCRPPAT",89,0)
 D OPEN^SCRPU3
"RTN","SCRPPAT",90,0)
 D TITLE^SCRPU3(.PAGE,TITL)
"RTN","SCRPPAT",91,0)
 D SHEAD^SCRPPAT3
"RTN","SCRPPAT",92,0)
 N SEC1,SEC2,SEC2,SEC3,SEC4,ST1,ST2,ST3,ST4
"RTN","SCRPPAT",93,0)
 I SORT=1 S SEC1="""T""",SEC2="""P""",SEC3="""TN""",SEC4="""PN"""
"RTN","SCRPPAT",94,0)
 I SORT=2 S SEC1="""P""",SEC2="""T""",SEC3="""PN""",SEC4="""TN"""
"RTN","SCRPPAT",95,0)
 N SEC,TRD,INS,INAME,SECN,TRDN,PT,FIRST
"RTN","SCRPPAT",96,0)
 S (INAME,INS)="",FIRST=1
"RTN","SCRPPAT",97,0)
 F  S INAME=$O(@STORE@("I",INAME)) Q:INAME=""!(STOP)  D
"RTN","SCRPPAT",98,0)
 .S INS=$O(@STORE@("I",INAME,""))
"RTN","SCRPPAT",99,0)
 .Q:INS=""
"RTN","SCRPPAT",100,0)
 .I 'FIRST,(IOST'?1"C-".E) D NEWP1^SCRPU3(.PAGE,TITL)
"RTN","SCRPPAT",101,0)
 .I 'FIRST,(IOST?1"C-".E) D HOLD^SCRPU3(.PAGE,TITL)
"RTN","SCRPPAT",102,0)
 .Q:STOP
"RTN","SCRPPAT",103,0)
 .W !,$G(@STORE@(INS))
"RTN","SCRPPAT",104,0)
 .S FIRST=0
"RTN","SCRPPAT",105,0)
 .S SECN="",ST1=$E(STORE,1,($L(STORE)-1))_","_SEC1_")"
"RTN","SCRPPAT",106,0)
 .F  S SECN=$O(@ST1@(INS,SECN)) Q:SECN=""!(STOP)  D
"RTN","SCRPPAT",107,0)
 ..S SEC=$O(@ST1@(INS,SECN,"")) ;ien of team or practitioner
"RTN","SCRPPAT",108,0)
 ..Q:SEC=""
"RTN","SCRPPAT",109,0)
 ..S ST3=$E(STORE,1,($L(STORE)-1))_","_SEC3_")"
"RTN","SCRPPAT",110,0)
 ..S TRDN="",ST2=$E(STORE,1,($L(STORE)-1))_","_SEC2_")"
"RTN","SCRPPAT",111,0)
 ..F  S TRDN=$O(@ST2@(INS,TRDN)) Q:TRDN=""!(STOP)  D
"RTN","SCRPPAT",112,0)
 ...S TRD=$O(@ST2@(INS,TRDN,"")) ;ien of team or practitioner
"RTN","SCRPPAT",113,0)
 ...Q:TRD=""
"RTN","SCRPPAT",114,0)
 ...;have first team and first practitioner ien
"RTN","SCRPPAT",115,0)
 ...S ST4=$E(STORE,1,($L(STORE)-1))_","_SEC4_")"
"RTN","SCRPPAT",116,0)
 ...D PRNT(ST4,ST3,SEC3,.PAGE,TITL,INS,SEC,TRD)
"RTN","SCRPPAT",117,0)
 .I 'STOP D TOTAL2^SCRPPAT3(INS)
"RTN","SCRPPAT",118,0)
 Q
"RTN","SCRPPAT",119,0)
 ;
"RTN","SCRPPAT",120,0)
PRNT(ST4,ST3,SEC3,PAGE,TITL,INS,SEC,TRD) ;
"RTN","SCRPPAT",121,0)
 ;
"RTN","SCRPPAT",122,0)
 N POS
"RTN","SCRPPAT",123,0)
 I (SEC3="""PN""")&($D(@ST3@(INS,SEC,TRD))) D
"RTN","SCRPPAT",124,0)
 .;get each position for practitioner
"RTN","SCRPPAT",125,0)
 .S POS=""
"RTN","SCRPPAT",126,0)
 .F  S POS=$O(@ST3@(INS,SEC,TRD,POS)) Q:POS=""!(STOP)  D
"RTN","SCRPPAT",127,0)
 ..I (IOST'?1"C-".E),$Y>(IOSL-10) D NEWP1^SCRPU3(.PAGE,TITL) W:'STOP !,$G(@STORE@(INS))
"RTN","SCRPPAT",128,0)
 ..I (IOST?1"C-".E),$Y>(IOSL-10) D HOLD^SCRPU3(.PAGE,TITL) W:'STOP !,$G(@STORE@(INS))
"RTN","SCRPPAT",129,0)
 ..Q:STOP
"RTN","SCRPPAT",130,0)
 ..W !!,$G(@ST3@(INS,SEC,TRD,POS)) ;write practitioner (sort 1)
"RTN","SCRPPAT",131,0)
 ..W !!,$G(@ST4@(INS,TRD)) ;write team (sort 2)
"RTN","SCRPPAT",132,0)
 ..;$o through patients for practitioner on team
"RTN","SCRPPAT",133,0)
 ..D PAT^SCRPPAT3(INS,SEC,TRD,SEC3,ST3,ST4,POS)
"RTN","SCRPPAT",134,0)
 ..I 'STOP D TOTAL1^SCRPPAT3(INS,SEC,TRD,POS) ;print team/practitioner total
"RTN","SCRPPAT",135,0)
 ;
"RTN","SCRPPAT",136,0)
 I (SEC3="""TN""")&($D(@ST4@(INS,TRD,SEC))) D
"RTN","SCRPPAT",137,0)
 .I (IOST'?1"C-".E),$Y>(IOSL-10) D NEWP1^SCRPU3(.PAGE,TITL) W:'STOP !,$G(@STORE@(INS))
"RTN","SCRPPAT",138,0)
 .I (IOST?1"C-".E),$Y>(IOSL-10) D HOLD^SCRPU3(.PAGE,TITL) W:'STOP !,$G(@STORE@(INS))
"RTN","SCRPPAT",139,0)
 .Q:STOP
"RTN","SCRPPAT",140,0)
 .W !!,$G(@ST3@(INS,SEC)) ;write team (sort 1)
"RTN","SCRPPAT",141,0)
 .S POS=""
"RTN","SCRPPAT",142,0)
 .F  S POS=$O(@ST4@(INS,TRD,SEC,POS)) Q:POS=""!(STOP)  D
"RTN","SCRPPAT",143,0)
 ..W !!,$G(@ST4@(INS,TRD,SEC,POS)) ;write practitioner (sort 2)
"RTN","SCRPPAT",144,0)
 ..;$o through patients for practitioner on team
"RTN","SCRPPAT",145,0)
 ..D PAT^SCRPPAT3(INS,SEC,TRD,SEC3,ST3,ST4,POS)
"RTN","SCRPPAT",146,0)
 ..I 'STOP D TOTAL1^SCRPPAT3(INS,SEC,TRD,POS) ;print team/practitioner total
"RTN","SCRPPAT",147,0)
 Q
"RTN","SCRPPAT2")
0^48^B26218710
"RTN","SCRPPAT2",1,0)
SCRPPAT2 ;ALB/CMM - Practitioner's Patients ;02/20/96
"RTN","SCRPPAT2",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPPAT2",3,0)
 ;
"RTN","SCRPPAT2",4,0)
 ;Listing of Practitioner's Patients
"RTN","SCRPPAT2",5,0)
 ;
"RTN","SCRPPAT2",6,0)
DRIVE ;
"RTN","SCRPPAT2",7,0)
 ;driver module
"RTN","SCRPPAT2",8,0)
 N PRAC,INF,ARRY,ERROR,NXT,OKAY,PIEN
"RTN","SCRPPAT2",9,0)
 S ARRY="ARRAY",ERROR="ERR"
"RTN","SCRPPAT2",10,0)
 K @ARRY,@ERROR
"RTN","SCRPPAT2",11,0)
 I PRACT=1 D ALL^SCRPPAT3 ;all practitioners selected
"RTN","SCRPPAT2",12,0)
 S NXT=0
"RTN","SCRPPAT2",13,0)
 F  S NXT=$O(PRACT(NXT)) Q:NXT=""!(NXT'?.N)  D
"RTN","SCRPPAT2",14,0)
 .I PRACT=0 S PIEN=NXT
"RTN","SCRPPAT2",15,0)
 .I PRACT=1 S PIEN=$P(PRACT(NXT),"^")
"RTN","SCRPPAT2",16,0)
 .K @ARRY,@ERROR
"RTN","SCRPPAT2",17,0)
 .S OKAY=$$PTPR^SCAPMC14(PIEN,"","","",ARRY,ERROR) ;patients for practitioner
"RTN","SCRPPAT2",18,0)
 .I '+OKAY Q
"RTN","SCRPPAT2",19,0)
 .D LOOPPT(ARRY,PIEN) ;loop through patients for practitioner
"RTN","SCRPPAT2",20,0)
 K @ARRY,@ERROR
"RTN","SCRPPAT2",21,0)
 Q
"RTN","SCRPPAT2",22,0)
 ;
"RTN","SCRPPAT2",23,0)
LOOPPT(ARY,PRAC) ;loop through patients for practitioner
"RTN","SCRPPAT2",24,0)
 ;ARY - array of patients for selected practitioner
"RTN","SCRPPAT2",25,0)
 ;PRAC - practitioner ien
"RTN","SCRPPAT2",26,0)
 N NXT,PIEN,TPIEN,PNAME,TPIEN,NODE,PTP,TPI,TPN,CLIEN,CNAME,PTA,PTAN,TIEN
"RTN","SCRPPAT2",27,0)
 N PC,TNODE,TNAME,PINF,POSN
"RTN","SCRPPAT2",28,0)
 S NXT=0
"RTN","SCRPPAT2",29,0)
 F  S NXT=$O(@ARY@(NXT)) Q:NXT=""!(NXT'?.N)  D
"RTN","SCRPPAT2",30,0)
 .S NODE=$G(@ARY@(NXT))
"RTN","SCRPPAT2",31,0)
 .Q:NODE=""
"RTN","SCRPPAT2",32,0)
 .S PIEN=+$P(NODE,"^") ;ien of patient file entry
"RTN","SCRPPAT2",33,0)
 .S TPIEN=+$P(NODE,"^",3) ;ien of patient team position assignment
"RTN","SCRPPAT2",34,0)
 .S PTP=$G(^SCPT(404.43,TPIEN,0))
"RTN","SCRPPAT2",35,0)
 .Q:PTP=""
"RTN","SCRPPAT2",36,0)
 .S PTA=+$P(PTP,"^") ;patient team assignment ien (404.42)
"RTN","SCRPPAT2",37,0)
 .S PTAN=$G(^SCPT(404.42,PTA,0))
"RTN","SCRPPAT2",38,0)
 .Q:PTAN=""
"RTN","SCRPPAT2",39,0)
 .S TIEN=+$P(PTAN,"^",3) ;team file ien (404.51)
"RTN","SCRPPAT2",40,0)
 .I '$D(TEAM(TIEN))&(TEAM'=1) Q  ;not a selected team
"RTN","SCRPPAT2",41,0)
 .S TNODE=$G(^SCTM(404.51,TIEN,0))
"RTN","SCRPPAT2",42,0)
 .Q:TNODE=""
"RTN","SCRPPAT2",43,0)
 .S TNAME=$P(TNODE,"^") ;team name
"RTN","SCRPPAT2",44,0)
 .S TPI=+$P(PTP,"^",2) ;Team Position file ien (404.57)
"RTN","SCRPPAT2",45,0)
 .S TPN=$G(^SCTM(404.57,TPI,0))
"RTN","SCRPPAT2",46,0)
 .Q:TPN=""
"RTN","SCRPPAT2",47,0)
 .S POSN=$P(TPN,"^") ;position name
"RTN","SCRPPAT2",48,0)
 .S CLIEN=+$P(TPN,"^",9) ;associated clinic ien
"RTN","SCRPPAT2",49,0)
 .D CECHK(CLIEN,.CNAME,PIEN) ;is patient enrolled in associated clinic?
"RTN","SCRPPAT2",50,0)
 .;S CNAME=$P($G(^SC(CLIEN,0)),"^") ;clinic name
"RTN","SCRPPAT2",51,0)
 .S PC=$S($P(PTP,"^",5)=0:0,1:1) ;primary care position 1or2-yes/0-no
"RTN","SCRPPAT2",52,0)
 .S PNAME=$P($G(^VA(200,+PRAC,0)),"^") ;practitioner name
"RTN","SCRPPAT2",53,0)
 .Q:PNAME=""
"RTN","SCRPPAT2",54,0)
 .;
"RTN","SCRPPAT2",55,0)
 .S PINF=PIEN_"^"_$$PDATA^SCRPEC(PIEN,CLIEN,1)
"RTN","SCRPPAT2",56,0)
 .;$$PDATA returns pt name,pid,mt,pelig,status,status date,last appt,nxt appt
"RTN","SCRPPAT2",57,0)
 .;
"RTN","SCRPPAT2",58,0)
 .D FORMAT(CNAME,PINF,PC,TIEN,TNAME,PRAC,PNAME,POSN,TPI) ;formats data for display
"RTN","SCRPPAT2",59,0)
 Q
"RTN","SCRPPAT2",60,0)
 ;
"RTN","SCRPPAT2",61,0)
CECHK(CLIEN,CNAME,PIEN) ;
"RTN","SCRPPAT2",62,0)
 ;CLIEN - clinic ien
"RTN","SCRPPAT2",63,0)
 ;CNAME - clinic name returned if patient is enrolled in clien clinic
"RTN","SCRPPAT2",64,0)
 ;PIEN - patien ien
"RTN","SCRPPAT2",65,0)
 ;
"RTN","SCRPPAT2",66,0)
 N EN,NODE
"RTN","SCRPPAT2",67,0)
 S CNAME=""
"RTN","SCRPPAT2",68,0)
 I $D(^DPT(PIEN,"DE","B",CLIEN)) D
"RTN","SCRPPAT2",69,0)
 .;enrolled at one time, check if discharged
"RTN","SCRPPAT2",70,0)
 .S EN=$O(^DPT(PIEN,"DE","B",CLIEN,""))
"RTN","SCRPPAT2",71,0)
 .S NODE=$G(^DPT(PIEN,"DE",EN,0))
"RTN","SCRPPAT2",72,0)
 .Q:NODE=""
"RTN","SCRPPAT2",73,0)
 .I $P(NODE,"^",3)="" S CNAME=$P($G(^SC(CLIEN,0)),"^") ;clinic name
"RTN","SCRPPAT2",74,0)
 .I $P(NODE,"^",3)'="",$P(NODE,"^",3)>DT S CNAME=$P($G(^SC(CLIEN,0)),"^") ;clinic name
"RTN","SCRPPAT2",75,0)
 Q
"RTN","SCRPPAT2",76,0)
 ;
"RTN","SCRPPAT2",77,0)
FORMAT(CNAME,PINF,PC,TIEN,TNAME,PRAC,PNAME,POSN,TPI) ; format data for display
"RTN","SCRPPAT2",78,0)
 ;CNAME - clinic name
"RTN","SCRPPAT2",79,0)
 ;PINF - patient/clinic data
"RTN","SCRPPAT2",80,0)
 ;PC - primary care 1/0
"RTN","SCRPPAT2",81,0)
 ;TIEN - team file ien (#404.51)
"RTN","SCRPPAT2",82,0)
 ;TNAME - team name
"RTN","SCRPPAT2",83,0)
 ;PRAC - practitioner ien (#200)
"RTN","SCRPPAT2",84,0)
 ;PNAME - practitioner name
"RTN","SCRPPAT2",85,0)
 ;POSN - position name
"RTN","SCRPPAT2",86,0)
 ;TPI - team position ien (#404.57)
"RTN","SCRPPAT2",87,0)
 ;
"RTN","SCRPPAT2",88,0)
 N IIEN,INAME,ERR
"RTN","SCRPPAT2",89,0)
 S ERR=$$SETUP^SCRPPAT3(.IIEN,.INAME,TIEN,TNAME,PRAC,PNAME,POSN,TPI)
"RTN","SCRPPAT2",90,0)
 I ERR Q
"RTN","SCRPPAT2",91,0)
 ;
"RTN","SCRPPAT2",92,0)
 I SORT=1 D STOR(IIEN,TIEN,PRAC,PINF,PNAME,TNAME,TPI) ;sort division,team,practitioner
"RTN","SCRPPAT2",93,0)
 I SORT=2 D STOR(IIEN,PRAC,TIEN,PINF,PNAME,TNAME,TPI) ;sort division,practitioner,team
"RTN","SCRPPAT2",94,0)
 ;
"RTN","SCRPPAT2",95,0)
 Q
"RTN","SCRPPAT2",96,0)
 ;
"RTN","SCRPPAT2",97,0)
STOR(IIEN,SEC,TRD,PINF,PNAME,TNAME,TPI) ;
"RTN","SCRPPAT2",98,0)
 ;IIEN - ien institution
"RTN","SCRPPAT2",99,0)
 ;SEC - second sort subscript, IEN team or IEN practitioner
"RTN","SCRPPAT2",100,0)
 ;TRD - third sort subscript, IEN team or IEN practitioner
"RTN","SCRPPAT2",101,0)
 ;PINF - patient/clinic info
"RTN","SCRPPAT2",102,0)
 ;PNAME - practitioner name
"RTN","SCRPPAT2",103,0)
 ;TNAME - team name
"RTN","SCRPPAT2",104,0)
 ;TPI - team position ien
"RTN","SCRPPAT2",105,0)
 ;
"RTN","SCRPPAT2",106,0)
 N PIEN,PTNAME,PID
"RTN","SCRPPAT2",107,0)
 S PIEN=+$P(PINF,"^") ;patient ien 
"RTN","SCRPPAT2",108,0)
 S PTNAME=$E($P(PINF,"^",2),1,15) ;patient name
"RTN","SCRPPAT2",109,0)
 I $D(@STORE@("PT",IIEN,SEC,TRD,TPI,PTNAME,PIEN)) Q
"RTN","SCRPPAT2",110,0)
 ;
"RTN","SCRPPAT2",111,0)
 S @STORE@("PT",IIEN,SEC,TRD,TPI,PTNAME,PIEN)=""
"RTN","SCRPPAT2",112,0)
 ;
"RTN","SCRPPAT2",113,0)
 I '$D(@STORE@("PTOT",IIEN,SEC,TRD,PIEN)) D
"RTN","SCRPPAT2",114,0)
 .;count each unique patient for any given practitioner for grand total
"RTN","SCRPPAT2",115,0)
 .S @STORE@("PTOT",IIEN,SEC,TRD,PIEN)=""
"RTN","SCRPPAT2",116,0)
 .S @STORE@("TOTAL",IIEN,PRAC,0)=$G(@STORE@("TOTAL",IIEN,PRAC,0))+1 ;patient count by practitioner
"RTN","SCRPPAT2",117,0)
 ;
"RTN","SCRPPAT2",118,0)
 S @STORE@("TOTAL",IIEN,PRAC,TIEN,TPI)=$G(@STORE@("TOTAL",IIEN,PRAC,TIEN,TPI))+1 ;patient count by practitioner and team
"RTN","SCRPPAT2",119,0)
 ;
"RTN","SCRPPAT2",120,0)
 S @STORE@(IIEN,SEC,TRD,TPI,PIEN)=PTNAME
"RTN","SCRPPAT2",121,0)
 S PID=$P(PINF,"^",3),PID=$TR(PID,"-","")
"RTN","SCRPPAT2",122,0)
 S $E(@STORE@(IIEN,SEC,TRD,TPI,PIEN),18)=$E(PID,6,10) ;last 4 pid - 5 places is for any pseudo
"RTN","SCRPPAT2",123,0)
 S $E(@STORE@(IIEN,SEC,TRD,TPI,PIEN),25)=$P(PINF,"^",4) ;means test status
"RTN","SCRPPAT2",124,0)
 S $E(@STORE@(IIEN,SEC,TRD,TPI,PIEN),29)=$P(PINF,"^",5) ;eligibility
"RTN","SCRPPAT2",125,0)
 S $E(@STORE@(IIEN,SEC,TRD,TPI,PIEN),40)=$P(PINF,"^",6) ;patient status
"RTN","SCRPPAT2",126,0)
 S $E(@STORE@(IIEN,SEC,TRD,TPI,PIEN),45)=$P(PINF,"^",8) ;last appt
"RTN","SCRPPAT2",127,0)
 S $E(@STORE@(IIEN,SEC,TRD,TPI,PIEN),55)=$P(PINF,"^",9) ;nxt appt
"RTN","SCRPPAT2",128,0)
 S $E(@STORE@(IIEN,SEC,TRD,TPI,PIEN),65)=$E(CNAME,1,15) ;clinic
"RTN","SCRPPAT2",129,0)
 ;
"RTN","SCRPPAT2",130,0)
 Q
"RTN","SCRPPAT2",131,0)
 ;
"RTN","SCRPPAT3")
0^49^B24444181
"RTN","SCRPPAT3",1,0)
SCRPPAT3 ;ALB/CMM - Practitioner's Patients ;02/20/96
"RTN","SCRPPAT3",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPPAT3",3,0)
 ;
"RTN","SCRPPAT3",4,0)
 ;Listing of Practitioner's Patients
"RTN","SCRPPAT3",5,0)
 ;
"RTN","SCRPPAT3",6,0)
PAT(INS,SEC,TRD,SEC3,ST3,ST4,POS) ;
"RTN","SCRPPAT3",7,0)
 ;writes patients for position/practitioner
"RTN","SCRPPAT3",8,0)
 N PTN,PT,FIRST
"RTN","SCRPPAT3",9,0)
 S PTN="",FIRST=1
"RTN","SCRPPAT3",10,0)
 I SUMM D TOTAL1^SCRPPAT3(INS,SEC,TRD,POS) Q  ;Summary only
"RTN","SCRPPAT3",11,0)
 F  S PTN=$O(@STORE@("PT",INS,SEC,TRD,POS,PTN)) Q:PTN=""!(STOP)  D
"RTN","SCRPPAT3",12,0)
 .S PT=$O(@STORE@("PT",INS,SEC,TRD,POS,PTN,""))
"RTN","SCRPPAT3",13,0)
 .Q:PT=""
"RTN","SCRPPAT3",14,0)
 .I (IOST'?1"C-".E),$Y>(IOSL-10) D NEWP1^SCRPU3(.PAGE,TITL) D:'STOP HEAD2(INS,SEC,TRD,SEC3,ST3,ST4,POS) D:'FIRST HEADER
"RTN","SCRPPAT3",15,0)
 .I (IOST?1"C-".E),$Y>(IOSL-10) D HOLD^SCRPU3(.PAGE,TITL) D:'STOP HEAD2(INS,SEC,TRD,SEC3,ST3,ST4,POS) D:'FIRST HEADER
"RTN","SCRPPAT3",16,0)
 .Q:STOP
"RTN","SCRPPAT3",17,0)
 .I FIRST D HEADER S FIRST=0
"RTN","SCRPPAT3",18,0)
 .W !,$G(@STORE@(INS,SEC,TRD,POS,PT)) ;print patient detail line
"RTN","SCRPPAT3",19,0)
 Q
"RTN","SCRPPAT3",20,0)
 ;
"RTN","SCRPPAT3",21,0)
SPRINT(STORE,IOP,TITL,SORT) ; Summary Print Only
"RTN","SCRPPAT3",22,0)
 ;STORE - global location of data
"RTN","SCRPPAT3",23,0)
 ;IOP - device to print to
"RTN","SCRPPAT3",24,0)
 ;TITL - title of report
"RTN","SCRPPAT3",25,0)
 ;SORT - sort order 1-div,team,pract/2-div,pract,team
"RTN","SCRPPAT3",26,0)
 ;
"RTN","SCRPPAT3",27,0)
 N PAGE
"RTN","SCRPPAT3",28,0)
 S PAGE=1,STOP=0
"RTN","SCRPPAT3",29,0)
 D OPEN^SCRPU3
"RTN","SCRPPAT3",30,0)
 D TITLE^SCRPU3(.PAGE,TITL)
"RTN","SCRPPAT3",31,0)
 Q
"RTN","SCRPPAT3",32,0)
 ;
"RTN","SCRPPAT3",33,0)
TOTAL1(INS,SEC,TRD,POS) ;
"RTN","SCRPPAT3",34,0)
 ;print team/practitioner total
"RTN","SCRPPAT3",35,0)
 N TEM,PRC
"RTN","SCRPPAT3",36,0)
 I SORT=1 S TEM=SEC,PRC=TRD
"RTN","SCRPPAT3",37,0)
 I SORT=2 S TEM=TRD,PRC=SEC
"RTN","SCRPPAT3",38,0)
 W !!,$G(@STORE@("TH",INS,PRC,TEM,POS)),$G(@STORE@("TOTAL",INS,PRC,TEM,POS))
"RTN","SCRPPAT3",39,0)
 W !!
"RTN","SCRPPAT3",40,0)
 Q
"RTN","SCRPPAT3",41,0)
 ;
"RTN","SCRPPAT3",42,0)
TOTAL2(INS) ;
"RTN","SCRPPAT3",43,0)
 ;print practitioners' totals
"RTN","SCRPPAT3",44,0)
 N PRC,FIRST
"RTN","SCRPPAT3",45,0)
 S PRC="",FIRST=1
"RTN","SCRPPAT3",46,0)
 F  S PRC=$O(@STORE@("TH",INS,PRC)) Q:PRC=""!(STOP)  D
"RTN","SCRPPAT3",47,0)
 .I (IOST'?1"C-".E),$Y>(IOSL-8) D NEWP1^SCRPU3(.PAGE,TITL)
"RTN","SCRPPAT3",48,0)
 .I (IOST?1"C-".E),$Y>(IOSL-8) D HOLD^SCRPU3(.PAGE,TITL)
"RTN","SCRPPAT3",49,0)
 .Q:STOP
"RTN","SCRPPAT3",50,0)
 .I FIRST W !,"Practitioner Patient Panel Totals:",! S FIRST=0
"RTN","SCRPPAT3",51,0)
 .W !!,$G(@STORE@("TH",INS,PRC)),$G(@STORE@("TOTAL",INS,PRC,0))
"RTN","SCRPPAT3",52,0)
 I 'STOP W !!,$G(@STORE@("TH",INS)),!
"RTN","SCRPPAT3",53,0)
 Q
"RTN","SCRPPAT3",54,0)
 ;
"RTN","SCRPPAT3",55,0)
HEAD2(INS,SEC,TRD,SEC3,ST3,ST4,POS) ;
"RTN","SCRPPAT3",56,0)
 I (SEC3="""TN""")&($D(@ST4@(INS,TRD,SEC))) D
"RTN","SCRPPAT3",57,0)
 .W !,$G(@ST3@(INS,SEC)) ;write team (sort 1)
"RTN","SCRPPAT3",58,0)
 .W !,$G(@ST4@(INS,TRD,SEC,POS)) ;write practitioner (sort 2)
"RTN","SCRPPAT3",59,0)
 I (SEC3="""PN""")&($D(@ST3@(INS,SEC,TRD))) D
"RTN","SCRPPAT3",60,0)
 .W !,$G(@ST3@(INS,SEC,TRD,POS)) ;write practitioner (sort 1)
"RTN","SCRPPAT3",61,0)
 .W !,$G(@ST4@(INS,TRD)) ;write team (sort 2)
"RTN","SCRPPAT3",62,0)
 Q
"RTN","SCRPPAT3",63,0)
 ;
"RTN","SCRPPAT3",64,0)
HEADER ;
"RTN","SCRPPAT3",65,0)
 N NXT
"RTN","SCRPPAT3",66,0)
 W !
"RTN","SCRPPAT3",67,0)
 F NXT="H1","H2","H3" W !,$G(@STORE@(NXT))
"RTN","SCRPPAT3",68,0)
 W !
"RTN","SCRPPAT3",69,0)
 Q
"RTN","SCRPPAT3",70,0)
 ;
"RTN","SCRPPAT3",71,0)
SHEAD ;
"RTN","SCRPPAT3",72,0)
 S @STORE@("H2")="Pt Name"
"RTN","SCRPPAT3",73,0)
 S $E(@STORE@("H2"),18)="Pt ID"
"RTN","SCRPPAT3",74,0)
 S $E(@STORE@("H1"),24)="M.T."
"RTN","SCRPPAT3",75,0)
 S $E(@STORE@("H2"),24)="Stat"
"RTN","SCRPPAT3",76,0)
 S $E(@STORE@("H2"),31)="Elig"
"RTN","SCRPPAT3",77,0)
 S $E(@STORE@("H1"),39)="Pat"
"RTN","SCRPPAT3",78,0)
 S $E(@STORE@("H2"),39)="Stat"
"RTN","SCRPPAT3",79,0)
 S $E(@STORE@("H1"),47)="Last"
"RTN","SCRPPAT3",80,0)
 S $E(@STORE@("H2"),47)="Appt"
"RTN","SCRPPAT3",81,0)
 S $E(@STORE@("H1"),57)="Nxt"
"RTN","SCRPPAT3",82,0)
 S $E(@STORE@("H2"),57)="Appt"
"RTN","SCRPPAT3",83,0)
 S $E(@STORE@("H2"),67)="Clinic"
"RTN","SCRPPAT3",84,0)
 S $P(@STORE@("H3"),"=",81)=""
"RTN","SCRPPAT3",85,0)
 Q
"RTN","SCRPPAT3",86,0)
ALL ;
"RTN","SCRPPAT3",87,0)
 ;get all practitioners for all teams selected
"RTN","SCRPPAT3",88,0)
 I TEAM=1 D TALL ;all teams selected
"RTN","SCRPPAT3",89,0)
 N TPRC,TIEN,OKAY
"RTN","SCRPPAT3",90,0)
 S TIEN=""
"RTN","SCRPPAT3",91,0)
 F  S TIEN=$O(TEAM(TIEN)) Q:TIEN=""!(TIEN'?.N)  D
"RTN","SCRPPAT3",92,0)
 .I $D(TEAM(TIEN)) D
"RTN","SCRPPAT3",93,0)
 ..S TPRC="PRACT"
"RTN","SCRPPAT3",94,0)
 ..S OKAY=$$PRTM^SCAPMC1(TIEN,"","","",.TPRC,"ERROR")
"RTN","SCRPPAT3",95,0)
 Q
"RTN","SCRPPAT3",96,0)
 ;
"RTN","SCRPPAT3",97,0)
TALL ;
"RTN","SCRPPAT3",98,0)
 ;get all active team for divisions selected
"RTN","SCRPPAT3",99,0)
 N NXT,IIEN,NODE
"RTN","SCRPPAT3",100,0)
 S NXT=0,IIEN=""
"RTN","SCRPPAT3",101,0)
 ;$O through team file and find all active teams for selected divisions
"RTN","SCRPPAT3",102,0)
 F  S IIEN=$O(^SCTM(404.51,"AINST",IIEN)) Q:IIEN=""  D
"RTN","SCRPPAT3",103,0)
 .I INST=1!$D(INST(IIEN)) D
"RTN","SCRPPAT3",104,0)
 ..S TIEN=0
"RTN","SCRPPAT3",105,0)
 ..F  S TIEN=$O(^SCTM(404.51,"AINST",IIEN,TIEN)) Q:TIEN=""  D
"RTN","SCRPPAT3",106,0)
 ...I $$ACTTM^SCMCTMU(TIEN) S TEAM(TIEN)=""
"RTN","SCRPPAT3",107,0)
 Q
"RTN","SCRPPAT3",108,0)
 ;
"RTN","SCRPPAT3",109,0)
SETUP(IIEN,INAME,TIEN,TNAME,PRAC,PNAME,POSN,TPI) ;
"RTN","SCRPPAT3",110,0)
 ;setup data
"RTN","SCRPPAT3",111,0)
 S IIEN=+$P($G(^SCTM(404.51,TIEN,0)),"^",7) ;institution ien
"RTN","SCRPPAT3",112,0)
 S INAME=$P($G(^DIC(4,IIEN,0)),"^") ;institution name
"RTN","SCRPPAT3",113,0)
 I INAME="" S INAME="[BAD DATA]"
"RTN","SCRPPAT3",114,0)
 ;
"RTN","SCRPPAT3",115,0)
 I PNAME="" S PNAME="[BAD DATA]"
"RTN","SCRPPAT3",116,0)
 I TNAME="" S TNAME="[BAD DATA]"
"RTN","SCRPPAT3",117,0)
 I '$D(@STORE@("PN",IIEN,PRAC,TIEN,TPI)) S @STORE@("PN",IIEN,PRAC,TIEN,TPI)="Practitioner: "_PNAME_" ("_POSN_")"
"RTN","SCRPPAT3",118,0)
 I '$D(@STORE@("TN",IIEN,TIEN)) S @STORE@("TN",IIEN,TIEN)="Team: "_TNAME
"RTN","SCRPPAT3",119,0)
 ;
"RTN","SCRPPAT3",120,0)
 I '$D(@STORE@("I",INAME,IIEN)) S @STORE@("I",INAME,IIEN)="",@STORE@(IIEN)="Division: "_INAME
"RTN","SCRPPAT3",121,0)
 I '$D(@STORE@("T",IIEN,TNAME,TIEN)) S @STORE@("T",IIEN,TNAME,TIEN)=""
"RTN","SCRPPAT3",122,0)
 I '$D(@STORE@("P",IIEN,PNAME,PRAC,TPI)) S @STORE@("P",IIEN,PNAME,PRAC,TPI)=""
"RTN","SCRPPAT3",123,0)
 I '$D(@STORE@("TOTAL",IIEN,PRAC,0)) S @STORE@("TOTAL",IIEN,PRAC,0)=0
"RTN","SCRPPAT3",124,0)
 I '$D(@STORE@("TOTAL",IIEN,PRAC,TIEN)) S @STORE@("TOTAL",IIEN,PRAC,TIEN)=0
"RTN","SCRPPAT3",125,0)
 ;
"RTN","SCRPPAT3",126,0)
 S @STORE@("TH",IIEN,PRAC)="Patient Panel Count for "_PNAME_": "
"RTN","SCRPPAT3",127,0)
 S @STORE@("TH",IIEN,PRAC,TIEN,TPI)="Patient Count for "_PNAME_" ("_POSN_") on Team "_TNAME_": "
"RTN","SCRPPAT3",128,0)
 ;
"RTN","SCRPPAT3",129,0)
 S @STORE@("TH",IIEN)="** Note: Patient Panel Count is a count of unique patients for each practitioner"
"RTN","SCRPPAT3",130,0)
 Q 0
"RTN","SCRPPAT3",131,0)
 ;
"RTN","SCRPRAC")
0^51^B14736526
"RTN","SCRPRAC",1,0)
SCRPRAC ;ALB/CMM - Practitioner Demographics ;02/08/96
"RTN","SCRPRAC",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPRAC",3,0)
 ;
"RTN","SCRPRAC",4,0)
 ;Practitioner Demographics Report
"RTN","SCRPRAC",5,0)
 ;
"RTN","SCRPRAC",6,0)
PROMPTS ;
"RTN","SCRPRAC",7,0)
 ;Prompt for Practioner and Print device
"RTN","SCRPRAC",8,0)
 ;
"RTN","SCRPRAC",9,0)
 K SCUP
"RTN","SCRPRAC",10,0)
 N QTIME,PRNT,VAUTP,Y,VAUTCI,NUMBER
"RTN","SCRPRAC",11,0)
 S QTIME=""
"RTN","SCRPRAC",12,0)
 S VAUTPO="" ;only can select one practitioner
"RTN","SCRPRAC",13,0)
 S VAUTNA="" ;all not allowed
"RTN","SCRPRAC",14,0)
 S VAUTT=1 ;all teams
"RTN","SCRPRAC",15,0)
 D PRACT^SCRPU1
"RTN","SCRPRAC",16,0)
 I '$D(VAUTP) G ERR
"RTN","SCRPRAC",17,0)
 S PRNT=$$PDEVICE^SCRPU3()
"RTN","SCRPRAC",18,0)
 I PRNT=-1 G ERR
"RTN","SCRPRAC",19,0)
 I PRNT["Q;" S QTIME=$$GETTIME^SCRPU3()
"RTN","SCRPRAC",20,0)
 I QTIME=-1 G ERR
"RTN","SCRPRAC",21,0)
 I PRNT'?1"Q;".E S PRNT="Q;"_PRNT
"RTN","SCRPRAC",22,0)
 S NUMBER=$$ENTRY2(.VAUTP,PRNT,QTIME)
"RTN","SCRPRAC",23,0)
 I NUMBER>0 W !!,"Print queued, task number: ",NUMBER
"RTN","SCRPRAC",24,0)
 Q
"RTN","SCRPRAC",25,0)
 ;
"RTN","SCRPRAC",26,0)
ENTRY2(PRACT,IOP,ZTDTH) ;
"RTN","SCRPRAC",27,0)
 ;Second entry point for GUI to use
"RTN","SCRPRAC",28,0)
 ;Input Parameters:
"RTN","SCRPRAC",29,0)
 ;PRACT - practitioner ien new person file
"RTN","SCRPRAC",30,0)
 ;IOP - print device
"RTN","SCRPRAC",31,0)
 ;ZTDTH - queue time (optional)
"RTN","SCRPRAC",32,0)
 ;
"RTN","SCRPRAC",33,0)
 ;validate parameters
"RTN","SCRPRAC",34,0)
 I '$D(PRACT)!'$D(IOP)!(IOP="") Q
"RTN","SCRPRAC",35,0)
 ;
"RTN","SCRPRAC",36,0)
 N NUMBER
"RTN","SCRPRAC",37,0)
 S IOST=$P(IOP,"^",2),IOP=$P(IOP,"^")
"RTN","SCRPRAC",38,0)
 I IOP?1"Q;".E S IOP=$P(IOP,"Q;",2)
"RTN","SCRPRAC",39,0)
 I IOST?1"C-".E D QENTRY G RET
"RTN","SCRPRAC",40,0)
 I ZTDTH="" S ZTDTH=$H
"RTN","SCRPRAC",41,0)
 S ZTRTN="QENTRY^SCRPRAC"
"RTN","SCRPRAC",42,0)
 S ZTDESC="Practitioner Demographics",ZTIO=IOP
"RTN","SCRPRAC",43,0)
 N II
"RTN","SCRPRAC",44,0)
 F II="PRACT(","PRACT","IOP" S ZTSAVE(II)=""
"RTN","SCRPRAC",45,0)
 D ^%ZTLOAD
"RTN","SCRPRAC",46,0)
RET S NUMBER=0
"RTN","SCRPRAC",47,0)
 I $D(ZTSK) S NUMBER=ZTSK
"RTN","SCRPRAC",48,0)
 D EXIT1
"RTN","SCRPRAC",49,0)
 Q NUMBER
"RTN","SCRPRAC",50,0)
 ;
"RTN","SCRPRAC",51,0)
QENTRY ;
"RTN","SCRPRAC",52,0)
 ;driver entry point
"RTN","SCRPRAC",53,0)
 S TITL="Practitioner Demographics"
"RTN","SCRPRAC",54,0)
 S STORE="^TMP("_$J_",""SCRPRAC"")"
"RTN","SCRPRAC",55,0)
 K @STORE
"RTN","SCRPRAC",56,0)
 S @STORE=0
"RTN","SCRPRAC",57,0)
 D DRIVE
"RTN","SCRPRAC",58,0)
 I $O(@STORE@(0))="" S NODATA=$$NODATA^SCRPU3(TITL)
"RTN","SCRPRAC",59,0)
 I '$D(NODATA) D PRINTIT(STORE,IOP,TITL)
"RTN","SCRPRAC",60,0)
 D EXIT2
"RTN","SCRPRAC",61,0)
 Q
"RTN","SCRPRAC",62,0)
 ;
"RTN","SCRPRAC",63,0)
ERR ;
"RTN","SCRPRAC",64,0)
EXIT1 ;
"RTN","SCRPRAC",65,0)
 K ZTDTH,ZTRTN,ZTDESC,ZTSK,ZTIO,ZTSAVE,VAUTPO,VAUTT,VAUTP,SCUP,VAUTNA
"RTN","SCRPRAC",66,0)
 Q
"RTN","SCRPRAC",67,0)
 ;
"RTN","SCRPRAC",68,0)
EXIT2 ;
"RTN","SCRPRAC",69,0)
 K @STORE
"RTN","SCRPRAC",70,0)
 K STORE,TITL,IOP,PRACT,NODATA,STOP
"RTN","SCRPRAC",71,0)
 Q
"RTN","SCRPRAC",72,0)
 ;
"RTN","SCRPRAC",73,0)
DRIVE ;
"RTN","SCRPRAC",74,0)
 ;driver module
"RTN","SCRPRAC",75,0)
 N PRAC,INF,ARRY,ERROR
"RTN","SCRPRAC",76,0)
 S ARRY="ARRAY",ERROR="ERR"
"RTN","SCRPRAC",77,0)
 K @ARRY,@ERROR
"RTN","SCRPRAC",78,0)
 S PRAC=$O(PRACT(0))
"RTN","SCRPRAC",79,0)
 Q:PRAC=""
"RTN","SCRPRAC",80,0)
 S INF=$$TPPR^SCAPMC12(PRAC,,,,ARRY,ERROR) ;get practitioner positions
"RTN","SCRPRAC",81,0)
 I INF=0 Q
"RTN","SCRPRAC",82,0)
 D GATHER^SCRPRAC2(.ARRY,PRAC)
"RTN","SCRPRAC",83,0)
 K @ERROR,@ARRY
"RTN","SCRPRAC",84,0)
 Q
"RTN","SCRPRAC",85,0)
 ;
"RTN","SCRPRAC",86,0)
PRINTIT(STORE,IOP,TITL) ;
"RTN","SCRPRAC",87,0)
 N TM,TPOS,NXT,PFLAG,PAGE,CIEN,ADAY
"RTN","SCRPRAC",88,0)
 K PFLAG
"RTN","SCRPRAC",89,0)
 S TPOS="",PAGE=1,STOP=0
"RTN","SCRPRAC",90,0)
 D OPEN^SCRPU3
"RTN","SCRPRAC",91,0)
 D TITLE^SCRPU3(.PAGE,TITL)
"RTN","SCRPRAC",92,0)
 F  S TPOS=$O(@STORE@("P",TPOS)) Q:TPOS=""!(STOP)  D
"RTN","SCRPRAC",93,0)
 .S NXT=""
"RTN","SCRPRAC",94,0)
 .I IOST?1"C-".E,$Y>(IOSL-8) D HOLD^SCRPU3(.PAGE,TITL)
"RTN","SCRPRAC",95,0)
 .I IOST'?1"C-".E,$Y>(IOSL-8) D NEWP1^SCRPU3(.PAGE,TITL)
"RTN","SCRPRAC",96,0)
 .I STOP Q
"RTN","SCRPRAC",97,0)
 .F  S NXT=$O(@STORE@(TPOS,NXT)) Q:NXT=""!($D(PFLAG))!(STOP)  D
"RTN","SCRPRAC",98,0)
 ..W !,$G(@STORE@(TPOS,NXT))
"RTN","SCRPRAC",99,0)
 .S PFLAG=""
"RTN","SCRPRAC",100,0)
 .W !,""
"RTN","SCRPRAC",101,0)
 .S TM=""
"RTN","SCRPRAC",102,0)
 .F  S TM=$O(@STORE@(TPOS,TM)) Q:TM=""!(STOP)  D
"RTN","SCRPRAC",103,0)
 ..S NXT=""
"RTN","SCRPRAC",104,0)
 ..I IOST?1"C-".E,$Y>(IOSL-8) D HOLD^SCRPU3(.PAGE,TITL) Q:STOP  D HEAD^SCRPRAC2(TPOS)
"RTN","SCRPRAC",105,0)
 ..I IOST'?1"C-".E,$Y>(IOSL-8) D NEWP1^SCRPU3(.PAGE,TITL) Q:STOP  D HEAD^SCRPRAC2(TPOS)
"RTN","SCRPRAC",106,0)
 ..F  S NXT=$O(@STORE@(TPOS,TM,NXT)) Q:NXT=""!(STOP)  D
"RTN","SCRPRAC",107,0)
 ...W !,$G(@STORE@(TPOS,TM,NXT))
"RTN","SCRPRAC",108,0)
 ..;
"RTN","SCRPRAC",109,0)
 ..I '$D(@STORE@("C",TM)) Q
"RTN","SCRPRAC",110,0)
 ..;clinic data
"RTN","SCRPRAC",111,0)
 ..S CIEN=""
"RTN","SCRPRAC",112,0)
 ..F  S CIEN=$O(@STORE@("C",TM,CIEN)) Q:CIEN=""!(STOP)  D
"RTN","SCRPRAC",113,0)
 ...I IOST?1"C-".E,$Y>(IOSL-10) D HOLD^SCRPU3(.PAGE,TITL) Q:STOP  D HEAD^SCRPRAC2(TPOS)
"RTN","SCRPRAC",114,0)
 ...I IOST'?1"C-".E,$Y>(IOSL-10) D NEWP1^SCRPU3(.PAGE,TITL) Q:STOP  D HEAD^SCRPRAC2(TPOS)
"RTN","SCRPRAC",115,0)
 ...W !,$G(@STORE@(1,TM,TPOS,CIEN))
"RTN","SCRPRAC",116,0)
 Q
"RTN","SCRPRAC2")
0^52^B9456185
"RTN","SCRPRAC2",1,0)
SCRPRAC2 ;ALB/CMM - Practitioner Demographics continued ;02/08/96
"RTN","SCRPRAC2",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPRAC2",3,0)
 ;
"RTN","SCRPRAC2",4,0)
 ;Practitioner Demographics Report
"RTN","SCRPRAC2",5,0)
 ;
"RTN","SCRPRAC2",6,0)
GATHER(PARRAY,PRAC) ;
"RTN","SCRPRAC2",7,0)
 ;get practitioner data
"RTN","SCRPRAC2",8,0)
 N ANODE,TIEN,PNAME,POS,STROL,USCL,TNAME,MAX,PHONE,ASSIGN,ROOM,SERV,NODE,PIEN
"RTN","SCRPRAC2",9,0)
 S NXT=0
"RTN","SCRPRAC2",10,0)
 F  S NXT=$O(@PARRAY@(NXT)) Q:NXT=""!(NXT'?.N)  D
"RTN","SCRPRAC2",11,0)
 .S (PNAME,PHONE,SERV,ROOM)=""
"RTN","SCRPRAC2",12,0)
 .D PINFO(PRAC,.PNAME,.PHONE,.ROOM,.SERV)
"RTN","SCRPRAC2",13,0)
 .;get practitioner name, office phone, room, servic/section
"RTN","SCRPRAC2",14,0)
 .;
"RTN","SCRPRAC2",15,0)
 .S ANODE=$G(@PARRAY@(NXT))
"RTN","SCRPRAC2",16,0)
 .Q:ANODE=""
"RTN","SCRPRAC2",17,0)
 .S PIEN=+$P(ANODE,"^") ;position ien
"RTN","SCRPRAC2",18,0)
 .;
"RTN","SCRPRAC2",19,0)
 .S POS=$P(ANODE,"^",2) ;position name
"RTN","SCRPRAC2",20,0)
 .S STROL=$P(ANODE,"^",8) ;standard role name
"RTN","SCRPRAC2",21,0)
 .S USCL=$P(ANODE,"^",10) ;user class name
"RTN","SCRPRAC2",22,0)
 .S NODE=$G(^SCTM(404.57,PIEN,0))
"RTN","SCRPRAC2",23,0)
 .S MAX=$P(NODE,"^",8) ;max patient assignments to position
"RTN","SCRPRAC2",24,0)
 .S ASSIGN=+$$PCPOSCNT^SCAPMCU1(PIEN,DT,0)
"RTN","SCRPRAC2",25,0)
 .;
"RTN","SCRPRAC2",26,0)
 .S TIEN=+$P(ANODE,"^",3) ;team ien
"RTN","SCRPRAC2",27,0)
 .S TNAME=$P($G(^SCTM(404.51,TIEN,0)),"^") ;team name
"RTN","SCRPRAC2",28,0)
 .D FORMAT(PIEN,TIEN,POS,STROL,USCL,TNAME,MAX,ASSIGN)
"RTN","SCRPRAC2",29,0)
 .D FORMAT2(PIEN,PNAME,SERV,PHONE,ROOM)
"RTN","SCRPRAC2",30,0)
 .;
"RTN","SCRPRAC2",31,0)
 .;clinic information
"RTN","SCRPRAC2",32,0)
 .N CIEN,CNAME,HRS,CNODE
"RTN","SCRPRAC2",33,0)
 .S CIEN=+$P(NODE,"^",9) ;clinic ien
"RTN","SCRPRAC2",34,0)
 .I CIEN="" Q
"RTN","SCRPRAC2",35,0)
 .S CNODE=$G(^SC(CIEN,"SL"))
"RTN","SCRPRAC2",36,0)
 .S CNAME=$P($G(^SC(CIEN,0)),"^") ;clinic name
"RTN","SCRPRAC2",37,0)
 .S @STORE@("C",TIEN,CIEN)=""
"RTN","SCRPRAC2",38,0)
 .S @STORE@(1,TIEN,PIEN,CIEN)="Clinic: "_CNAME
"RTN","SCRPRAC2",39,0)
 Q
"RTN","SCRPRAC2",40,0)
 ;
"RTN","SCRPRAC2",41,0)
PINFO(VAE,PRACT,OPH,ROOM,SERV) ;
"RTN","SCRPRAC2",42,0)
 ;practitioner information form new person file
"RTN","SCRPRAC2",43,0)
 S PRACT=$P($G(^VA(200,VAE,0)),"^") ;practitioner name
"RTN","SCRPRAC2",44,0)
 S OPH=$P($G(^VA(200,VAE,.13)),"^",2) ;office phone
"RTN","SCRPRAC2",45,0)
 S ROOM=$P($G(^VA(200,VAE,.14)),"^") ;room
"RTN","SCRPRAC2",46,0)
 S SERV=$P($G(^VA(200,VAE,5)),"^") ;service/section ien
"RTN","SCRPRAC2",47,0)
 S SERV=$P($G(^DIC(49,+SERV,0)),"^") ;service/section name
"RTN","SCRPRAC2",48,0)
 Q
"RTN","SCRPRAC2",49,0)
 ;
"RTN","SCRPRAC2",50,0)
FORMAT(PIEN,TIEN,NAME,STROL,USCL,TNAME,MAX,ASSIGN) ;
"RTN","SCRPRAC2",51,0)
 ;format team data
"RTN","SCRPRAC2",52,0)
 I TNAME="" S TNAME="[BAD DATA]"
"RTN","SCRPRAC2",53,0)
 S @STORE@("P",PIEN)=""
"RTN","SCRPRAC2",54,0)
 S @STORE@(PIEN,TIEN,1)="Team Name: "_$E(TNAME,1,20)
"RTN","SCRPRAC2",55,0)
 S $E(@STORE@(PIEN,TIEN,1),40)="Team Position: "_$E(NAME,1,20)
"RTN","SCRPRAC2",56,0)
 S @STORE@(PIEN,TIEN,2)="Standard Role: "_STROL
"RTN","SCRPRAC2",57,0)
 S $E(@STORE@(PIEN,TIEN,2),40)="User Class: "_$E(USCL,1,35)
"RTN","SCRPRAC2",58,0)
 S @STORE@(PIEN,TIEN,3)="# of Pts Allowed: "_MAX
"RTN","SCRPRAC2",59,0)
 S $E(@STORE@(PIEN,TIEN,3),40)="# of Pts Assigned: "_ASSIGN
"RTN","SCRPRAC2",60,0)
 Q
"RTN","SCRPRAC2",61,0)
 ;
"RTN","SCRPRAC2",62,0)
FORMAT2(PIEN,PNAME,SERV,PHONE,ROOM) ;
"RTN","SCRPRAC2",63,0)
 ;format practitioner information
"RTN","SCRPRAC2",64,0)
 I PNAME="" S PNAME="[BAD DATA]"
"RTN","SCRPRAC2",65,0)
 S @STORE@(PIEN,"P1")="Practitioner Name: "_$E(PNAME,1,25)
"RTN","SCRPRAC2",66,0)
 S $E(@STORE@(PIEN,"P1"),45)="Service/Section: "_$E(SERV,1,20)
"RTN","SCRPRAC2",67,0)
 S @STORE@(PIEN,"P2")="Office Phone: "_PHONE
"RTN","SCRPRAC2",68,0)
 S $E(@STORE@(PIEN,"P2"),35)="Room: "_ROOM
"RTN","SCRPRAC2",69,0)
 Q
"RTN","SCRPRAC2",70,0)
 ;
"RTN","SCRPRAC2",71,0)
HEAD(TPOS) ;
"RTN","SCRPRAC2",72,0)
 ;print practitioner info
"RTN","SCRPRAC2",73,0)
 N NXT
"RTN","SCRPRAC2",74,0)
 S NXT=""
"RTN","SCRPRAC2",75,0)
 F  S NXT=$O(@STORE@(TPOS,NXT)) Q:NXT=""  D
"RTN","SCRPRAC2",76,0)
 .W !,$G(@STORE@(TPOS,NXT))
"RTN","SCRPRAC2",77,0)
 W !,""
"RTN","SCRPRAC2",78,0)
 Q
"RTN","SCRPSLT")
0^53^B22186028
"RTN","SCRPSLT",1,0)
SCRPSLT ;ALB/CMM - Summary Listing of Teams ;02/01/96
"RTN","SCRPSLT",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPSLT",3,0)
 ;
"RTN","SCRPSLT",4,0)
 ;Summary Listing of Teams Report
"RTN","SCRPSLT",5,0)
 ;
"RTN","SCRPSLT",6,0)
PROMPTS ;
"RTN","SCRPSLT",7,0)
 ;Prompt for Institution, Team, Role and Print device
"RTN","SCRPSLT",8,0)
 ;
"RTN","SCRPSLT",9,0)
 N VAUTD,VAUTT,VAUTR,QTIME,PRNT,NUMBER
"RTN","SCRPSLT",10,0)
 K VAUTD,VAUTT,VAUTR,SCUP
"RTN","SCRPSLT",11,0)
 S QTIME=""
"RTN","SCRPSLT",12,0)
 D INST^SCRPU1 I Y=-1 G ERR
"RTN","SCRPSLT",13,0)
 K Y D PRMTT^SCRPU1 I '$D(VAUTT) G ERR
"RTN","SCRPSLT",14,0)
 K Y D ROLE^SCRPU1 I '$D(VAUTR) G ERR
"RTN","SCRPSLT",15,0)
 S PRNT=$$PDEVICE^SCRPU3()
"RTN","SCRPSLT",16,0)
 I PRNT=-1 G ERR
"RTN","SCRPSLT",17,0)
 I PRNT["Q;" S QTIME=$$GETTIME^SCRPU3()
"RTN","SCRPSLT",18,0)
 I QTIME=-1 G ERR
"RTN","SCRPSLT",19,0)
 I PRNT'?1"Q;".E S PRNT="Q;"_PRNT
"RTN","SCRPSLT",20,0)
 K Y
"RTN","SCRPSLT",21,0)
 S NUMBER=$$ENTRY2(.VAUTD,.VAUTT,.VAUTR,PRNT,QTIME)
"RTN","SCRPSLT",22,0)
 I NUMBER>0 W !!,"Print queued, task number: ",NUMBER
"RTN","SCRPSLT",23,0)
 Q
"RTN","SCRPSLT",24,0)
 ;
"RTN","SCRPSLT",25,0)
ENTRY2(INST,TEAM,ROLE,IOP,ZTDTH) ;
"RTN","SCRPSLT",26,0)
 ;Second entry point for GUI to use
"RTN","SCRPSLT",27,0)
 ;Input Parameters:
"RTN","SCRPSLT",28,0)
 ;INST - institutions selected (variable and array)
"RTN","SCRPSLT",29,0)
 ;TEAM - teams selected (variable and array)
"RTN","SCRPSLT",30,0)
 ;ROLE - roles selected (variable and array)
"RTN","SCRPSLT",31,0)
 ;IOP - print device
"RTN","SCRPSLT",32,0)
 ;ZTDTH - queue time (optional)
"RTN","SCRPSLT",33,0)
 ;
"RTN","SCRPSLT",34,0)
 ;validate parameters
"RTN","SCRPSLT",35,0)
 I '$D(INST)!'$D(TEAM)!'$D(ROLE)!'$D(IOP)!(IOP="") Q
"RTN","SCRPSLT",36,0)
 ;
"RTN","SCRPSLT",37,0)
 N NUMBER
"RTN","SCRPSLT",38,0)
 S IOST=$P(IOP,"^",2),IOP=$P(IOP,"^")
"RTN","SCRPSLT",39,0)
 I IOP?1"Q;".E S IOP=$P(IOP,"Q;",2)
"RTN","SCRPSLT",40,0)
 I IOST?1"C-".E D QENTRY G RET
"RTN","SCRPSLT",41,0)
 I ZTDTH="" S ZTDTH=$H
"RTN","SCRPSLT",42,0)
 S ZTRTN="QENTRY^SCRPSLT"
"RTN","SCRPSLT",43,0)
 S ZTDESC="Summary Listing Of Teams",ZTIO=IOP
"RTN","SCRPSLT",44,0)
 N II
"RTN","SCRPSLT",45,0)
 F II="INST","TEAM","ROLE","INST(","TEAM(","ROLE(","IOP" S ZTSAVE(II)=""
"RTN","SCRPSLT",46,0)
 D ^%ZTLOAD
"RTN","SCRPSLT",47,0)
RET S NUMBER=0
"RTN","SCRPSLT",48,0)
 I $D(ZTSK) S NUMBER=ZTSK
"RTN","SCRPSLT",49,0)
 D EXIT1
"RTN","SCRPSLT",50,0)
 Q NUMBER
"RTN","SCRPSLT",51,0)
 ;
"RTN","SCRPSLT",52,0)
QENTRY ;
"RTN","SCRPSLT",53,0)
 ;driver entry point
"RTN","SCRPSLT",54,0)
 S TITL="Summary Listing of Teams Report"
"RTN","SCRPSLT",55,0)
 S STORE="^TMP("_$J_",""SCRPSLT"")"
"RTN","SCRPSLT",56,0)
 K @STORE
"RTN","SCRPSLT",57,0)
 S @STORE=0
"RTN","SCRPSLT",58,0)
 I TEAM=1 D TALL^SCRPPAT3 S TEAM=0
"RTN","SCRPSLT",59,0)
 D FIND
"RTN","SCRPSLT",60,0)
 I $O(@STORE@(0))="" S NODATA=$$NODATA^SCRPU3(TITL)
"RTN","SCRPSLT",61,0)
 I '$D(NODATA) D PRINTIT(STORE,IOP,TITL)
"RTN","SCRPSLT",62,0)
 D EXIT2
"RTN","SCRPSLT",63,0)
 Q
"RTN","SCRPSLT",64,0)
 ;
"RTN","SCRPSLT",65,0)
ERR ;
"RTN","SCRPSLT",66,0)
EXIT1 ;
"RTN","SCRPSLT",67,0)
 K ZTDTH,ZTRTN,ZTDESC,ZTSK,ZTIO,ZTSAVE,SCUP
"RTN","SCRPSLT",68,0)
 Q
"RTN","SCRPSLT",69,0)
 ;
"RTN","SCRPSLT",70,0)
EXIT2 ;
"RTN","SCRPSLT",71,0)
 K @STORE
"RTN","SCRPSLT",72,0)
 K STOP,STORE,TITL,IOP,TEAM,INST,ROLE,NODATA
"RTN","SCRPSLT",73,0)
 Q
"RTN","SCRPSLT",74,0)
 ;
"RTN","SCRPSLT",75,0)
FIND ;
"RTN","SCRPSLT",76,0)
 N TM,EN2,EN,ROL,NODE,TEND,ACT,INA,TPASS,TPCN,TMAX,TMP,TOA
"RTN","SCRPSLT",77,0)
 S TM=""
"RTN","SCRPSLT",78,0)
 F  S TM=$O(^SCTM(404.57,"C",TM)) Q:TM=""  D
"RTN","SCRPSLT",79,0)
 .;$O through team position file
"RTN","SCRPSLT",80,0)
 .I '$D(TEAM(TM))&(TEAM'=1) Q
"RTN","SCRPSLT",81,0)
 .;Q above, not a selected team
"RTN","SCRPSLT",82,0)
 .;selected team
"RTN","SCRPSLT",83,0)
 .S EN=""
"RTN","SCRPSLT",84,0)
 .S TPASS(TM)=0,TMAX(TM)=0,TPCN(TM)=0
"RTN","SCRPSLT",85,0)
 .F  S EN=$O(^SCTM(404.57,"C",TM,EN)) Q:EN=""  D
"RTN","SCRPSLT",86,0)
 ..I '$D(^SCTM(404.57,EN,0)) Q
"RTN","SCRPSLT",87,0)
 ..S NODE=$G(^SCTM(404.57,EN,0))
"RTN","SCRPSLT",88,0)
 ..Q:NODE=""
"RTN","SCRPSLT",89,0)
 ..S ROL=+$P(NODE,"^",3) ;role ien
"RTN","SCRPSLT",90,0)
 ..I '$D(ROLE(ROL))&(ROLE'=1) Q
"RTN","SCRPSLT",91,0)
 ..;Q above not a selected role
"RTN","SCRPSLT",92,0)
 ..;find active position during date range
"RTN","SCRPSLT",93,0)
 ..S TMP=$$DATES^SCAPMCU1(404.52,EN,DT)
"RTN","SCRPSLT",94,0)
 ..I +TMP=0 S TMP="0^[Not Assigned]"
"RTN","SCRPSLT",95,0)
 ..S EN2=+$P(TMP,"^",4)
"RTN","SCRPSLT",96,0)
 ..D KEEP^SCRPSLT2(NODE,EN,EN2,ROL,TM,.TPASS,.TMAX,.TPCN)
"RTN","SCRPSLT",97,0)
 ..S TOA(TM)=$G(TMAX(TM))-$G(TPASS(TM))
"RTN","SCRPSLT",98,0)
 ..D TEAMT^SCRPSLT2(TM,.TPASS,.TMAX,.TPCN,.TOA)
"RTN","SCRPSLT",99,0)
 Q
"RTN","SCRPSLT",100,0)
 ;
"RTN","SCRPSLT",101,0)
PRINTIT(STORE,IOP,TITL) ;
"RTN","SCRPSLT",102,0)
 D OPEN^SCRPU3
"RTN","SCRPSLT",103,0)
 N INST,EINST,ETEAM,TEM,EPRACT,PRACT,NXT,PAGE,NPAGE,NEW,POS
"RTN","SCRPSLT",104,0)
 S (INST,EINST)="",(NPAGE,STOP)=0,PAGE=1
"RTN","SCRPSLT",105,0)
 D TITLE^SCRPU3(.PAGE,TITL)
"RTN","SCRPSLT",106,0)
 D FORHEAD^SCRPSLT2
"RTN","SCRPSLT",107,0)
 F  S EINST=$O(@STORE@("I",EINST)) Q:EINST=""!(STOP)  D
"RTN","SCRPSLT",108,0)
 .S INST=$O(@STORE@("I",EINST,""))
"RTN","SCRPSLT",109,0)
 .I INST="" Q
"RTN","SCRPSLT",110,0)
 .S (TEM,ETEAM)=""
"RTN","SCRPSLT",111,0)
 .F  S ETEAM=$O(@STORE@("T",INST,ETEAM)) Q:ETEAM=""!(STOP)  D
"RTN","SCRPSLT",112,0)
 ..S TEM=$O(@STORE@("T",INST,ETEAM,""))
"RTN","SCRPSLT",113,0)
 ..I TEM="" Q
"RTN","SCRPSLT",114,0)
 ..K NEW
"RTN","SCRPSLT",115,0)
 ..I NPAGE,(IOST'?1"C-".E) D NEWP^SCRPSLT2(INST,TEM,TITL,.PAGE) S NPAGE=0,NEW=""
"RTN","SCRPSLT",116,0)
 ..I NPAGE,(IOST?1"C-".E) D HOLD1^SCRPSLT2(.PAGE,TITL,INST,TEM) S NPAGE=0,NEW=""
"RTN","SCRPSLT",117,0)
 ..I STOP Q
"RTN","SCRPSLT",118,0)
 ..I IOST'?1"C-".E,$Y>(IOSL-8) D NEWP^SCRPSLT2(INST,TEM,TITL,.PAGE) S NEW=""
"RTN","SCRPSLT",119,0)
 ..I IOST?1"C-".E,$Y>(IOSL-8) D HOLD1^SCRPSLT2(.PAGE,TITL,INST,TEM) S NEW=""
"RTN","SCRPSLT",120,0)
 ..I STOP Q
"RTN","SCRPSLT",121,0)
 ..I '$D(NEW) D HEADER^SCRPSLT2(INST,TEM)
"RTN","SCRPSLT",122,0)
 ..S (PRACT,EPRACT)=""
"RTN","SCRPSLT",123,0)
 ..F  S EPRACT=$O(@STORE@("PN",INST,TEM,EPRACT)) Q:EPRACT=""!(STOP)  D
"RTN","SCRPSLT",124,0)
 ...S PRACT=$O(@STORE@("PN",INST,TEM,EPRACT,""))
"RTN","SCRPSLT",125,0)
 ...I PRACT="" Q
"RTN","SCRPSLT",126,0)
 ...S POS=""
"RTN","SCRPSLT",127,0)
 ...F  S POS=$O(@STORE@(INST,TEM,PRACT,POS)) Q:POS=""!(STOP)  D
"RTN","SCRPSLT",128,0)
 ....I IOST'?1"C-".E,$Y>(IOSL-3) D NEWP^SCRPSLT2(INST,TEM,TITL,.PAGE)
"RTN","SCRPSLT",129,0)
 ....I IOST?1"C-".E,$Y>(IOSL-3) D HOLD1^SCRPSLT2(.PAGE,TITL,INST,TEM)
"RTN","SCRPSLT",130,0)
 ....I STOP Q
"RTN","SCRPSLT",131,0)
 ....W !,$G(@STORE@(INST,TEM,PRACT,POS)) ;writes info
"RTN","SCRPSLT",132,0)
 ..D TOTAL^SCRPSLT2(INST,TEM)
"RTN","SCRPSLT",133,0)
 .I STOP Q
"RTN","SCRPSLT",134,0)
 .S NPAGE=1
"RTN","SCRPSLT",135,0)
 D CLOSE^SCRPU3
"RTN","SCRPSLT",136,0)
 Q
"RTN","SCRPSLT",137,0)
 ;
"RTN","SCRPSLT2")
0^54^B16392996
"RTN","SCRPSLT2",1,0)
SCRPSLT2 ;ALB/CMM - Summary Listing of Teams Continued;02/01/96
"RTN","SCRPSLT2",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPSLT2",3,0)
 ;
"RTN","SCRPSLT2",4,0)
 ;Summary Listing of Teams Report
"RTN","SCRPSLT2",5,0)
 ;
"RTN","SCRPSLT2",6,0)
KEEP(TNODE,APOS,TPOS,ROL,TM,TPASS,TMAX,TPCN) ;
"RTN","SCRPSLT2",7,0)
 ;TNODE - zero node of the team position file
"RTN","SCRPSLT2",8,0)
 ;APOS - ien of team position file
"RTN","SCRPSLT2",9,0)
 ;TPOS - ien of position assignment history file
"RTN","SCRPSLT2",10,0)
 ;ROL - ien of role
"RTN","SCRPSLT2",11,0)
 ;TM - ien of team
"RTN","SCRPSLT2",12,0)
 ;
"RTN","SCRPSLT2",13,0)
 N POS,TNAME,TPHONE,TPC,TDIV,TEN,TMN,DIV,PPC,PCLIN,VAE,PRACT,PASS,MAX,PCN
"RTN","SCRPSLT2",14,0)
 ;
"RTN","SCRPSLT2",15,0)
 S TEN=+$P(TNODE,"^",2) ;team file pointer
"RTN","SCRPSLT2",16,0)
 S TMN=$G(^SCTM(404.51,TEN,0))
"RTN","SCRPSLT2",17,0)
 S TNAME=$P(TMN,"^") ;team name
"RTN","SCRPSLT2",18,0)
 S DIV=+$P(TMN,"^",7) ;division ien
"RTN","SCRPSLT2",19,0)
 S TDIV=$P($G(^DIC(4,DIV,0)),"^") ;team division
"RTN","SCRPSLT2",20,0)
 D KTEAM(TNAME,TDIV,TM,DIV)
"RTN","SCRPSLT2",21,0)
 ;
"RTN","SCRPSLT2",22,0)
 S POS=$P(TNODE,"^") ;position name
"RTN","SCRPSLT2",23,0)
 S PPC=$S($P(TNODE,"^",4)=1:"YES",1:"NO")
"RTN","SCRPSLT2",24,0)
 S PCLIN=$P($G(^SC(+$P(TNODE,"^",9),0)),"^") ;associated clinic
"RTN","SCRPSLT2",25,0)
 ;
"RTN","SCRPSLT2",26,0)
 S VAE=+$P($G(^SCTM(404.52,TPOS,0)),"^",3) ;ien of new person file
"RTN","SCRPSLT2",27,0)
 S PRACT=$P($G(^VA(200,VAE,0)),"^") ;practitioner name
"RTN","SCRPSLT2",28,0)
 I PRACT="" S PRACT="[Not Assigned]"
"RTN","SCRPSLT2",29,0)
 ;
"RTN","SCRPSLT2",30,0)
 S MAX=+$P(TNODE,"^",8) I MAX<0 S MAX=0
"RTN","SCRPSLT2",31,0)
 S TMAX(TM)=($G(TMAX(TM)))+(MAX)
"RTN","SCRPSLT2",32,0)
 S PCN=$$PCPOSCNT^SCAPMCU1(APOS,DT) S:PCN=-1 PCN="***"
"RTN","SCRPSLT2",33,0)
 I PCN'="***" S TPCN(TM)=$G(TPCN(TM))+PCN
"RTN","SCRPSLT2",34,0)
 S PASS=$$PCPOSCNT^SCAPMCU1(APOS,DT,0) S:PASS=-1 PASS="***"
"RTN","SCRPSLT2",35,0)
 I PASS'="***" S TPASS(TM)=$G(TPASS(TM))+PASS
"RTN","SCRPSLT2",36,0)
 ;
"RTN","SCRPSLT2",37,0)
 D FORMAT(APOS,POS,PCLIN,VAE,PRACT,PPC,DIV,TM,PASS,MAX,PCN)
"RTN","SCRPSLT2",38,0)
 Q
"RTN","SCRPSLT2",39,0)
 ;
"RTN","SCRPSLT2",40,0)
TEAMT(TM,TPASS,TMAX,TPCN,TOA) ;
"RTN","SCRPSLT2",41,0)
 ;set team totals into global
"RTN","SCRPSLT2",42,0)
 S @STORE@("TOTALS",TM,"H1")="Team Totals:"
"RTN","SCRPSLT2",43,0)
 S @STORE@("TOTALS",TM,"H2")=""
"RTN","SCRPSLT2",44,0)
 S @STORE@("TOTALS",TM,"PCN")="     Total Primary Care:     "_$G(TPCN(TM))
"RTN","SCRPSLT2",45,0)
 S @STORE@("TOTALS",TM,"TOA")="     Total Open Assignments: "_$G(TOA(TM))
"RTN","SCRPSLT2",46,0)
 S @STORE@("TOTALS",TM,"TPA")="     Total Assigned:         "_$G(TPASS(TM))
"RTN","SCRPSLT2",47,0)
 S @STORE@("TOTALS",TM,"ZANOTE")=""
"RTN","SCRPSLT2",48,0)
 S @STORE@("TOTALS",TM,"ZNOTE")="*Primary Care Patients included in Total Assigned Patients"
"RTN","SCRPSLT2",49,0)
 S @STORE@("TOTALS",TM,"ZNOTE2")="*** = Bad Data"
"RTN","SCRPSLT2",50,0)
 Q
"RTN","SCRPSLT2",51,0)
 ;
"RTN","SCRPSLT2",52,0)
FORMAT(APOS,POS,PCLIN,VAE,PRACT,PPC,DIV,TM,PAS,MX,PC) ;
"RTN","SCRPSLT2",53,0)
 ;
"RTN","SCRPSLT2",54,0)
 I PRACT="" S PRACT="Bad Data"
"RTN","SCRPSLT2",55,0)
 S @STORE@("PN",DIV,TM,PRACT,VAE)=""
"RTN","SCRPSLT2",56,0)
 S @STORE@(DIV,TM,VAE,APOS)=$E(PRACT,1,20) ;practitioner name
"RTN","SCRPSLT2",57,0)
 S $E(@STORE@(DIV,TM,VAE,APOS),23)=$E(POS,1,15) ;position
"RTN","SCRPSLT2",58,0)
 S $E(@STORE@(DIV,TM,VAE,APOS),39)=PPC ;primary care yes/no
"RTN","SCRPSLT2",59,0)
 S $E(@STORE@(DIV,TM,VAE,APOS),45)=$E(PCLIN,1,15) ;assoc. clinic
"RTN","SCRPSLT2",60,0)
 S $E(@STORE@(DIV,TM,VAE,APOS),62)=PC
"RTN","SCRPSLT2",61,0)
 S $E(@STORE@(DIV,TM,VAE,APOS),68)=MX
"RTN","SCRPSLT2",62,0)
 S $E(@STORE@(DIV,TM,VAE,APOS),76)=PAS
"RTN","SCRPSLT2",63,0)
 Q
"RTN","SCRPSLT2",64,0)
 ;
"RTN","SCRPSLT2",65,0)
TOTAL(INST,TEM) ;
"RTN","SCRPSLT2",66,0)
 ;Prints team totals
"RTN","SCRPSLT2",67,0)
 N NXT
"RTN","SCRPSLT2",68,0)
 S NXT=""
"RTN","SCRPSLT2",69,0)
 W !
"RTN","SCRPSLT2",70,0)
 F  S NXT=$O(@STORE@("TOTALS",TEM,NXT)) Q:NXT=""  D
"RTN","SCRPSLT2",71,0)
 .W !,$G(@STORE@("TOTALS",TEM,NXT))
"RTN","SCRPSLT2",72,0)
 W !
"RTN","SCRPSLT2",73,0)
 Q
"RTN","SCRPSLT2",74,0)
 ;
"RTN","SCRPSLT2",75,0)
KTEAM(TNAME,TDIV,TIEN,IEND) ;
"RTN","SCRPSLT2",76,0)
 ;store team information
"RTN","SCRPSLT2",77,0)
 I TNAME="" S TNAME="[BAD DATA]"
"RTN","SCRPSLT2",78,0)
 I TDIV="" S TDIV="[BAD DATA]"
"RTN","SCRPSLT2",79,0)
 S @STORE@("I",TDIV,IEND)=""
"RTN","SCRPSLT2",80,0)
 S @STORE@("T",IEND,TNAME,TIEN)=""
"RTN","SCRPSLT2",81,0)
 S @STORE@(IEND)="Division: "_TDIV
"RTN","SCRPSLT2",82,0)
 S @STORE@(IEND,TIEN)="Team Name: "_TNAME
"RTN","SCRPSLT2",83,0)
 Q
"RTN","SCRPSLT2",84,0)
 ;
"RTN","SCRPSLT2",85,0)
FORHEAD ;
"RTN","SCRPSLT2",86,0)
 S @STORE@("H3")="Practitioner"
"RTN","SCRPSLT2",87,0)
 S $E(@STORE@("H3"),23)="Position"
"RTN","SCRPSLT2",88,0)
 S $E(@STORE@("H2"),39)="Prim"
"RTN","SCRPSLT2",89,0)
 S $E(@STORE@("H3"),39)="Care"
"RTN","SCRPSLT2",90,0)
 S $E(@STORE@("H3"),46)="Clinic"
"RTN","SCRPSLT2",91,0)
 S $E(@STORE@("H1"),60)="Total"
"RTN","SCRPSLT2",92,0)
 S $E(@STORE@("H2"),60)="Prim"
"RTN","SCRPSLT2",93,0)
 S $E(@STORE@("H3"),60)="Care"
"RTN","SCRPSLT2",94,0)
 S $E(@STORE@("H1"),67)="Max"
"RTN","SCRPSLT2",95,0)
 S $E(@STORE@("H2"),67)="PTs"
"RTN","SCRPSLT2",96,0)
 S $E(@STORE@("H3"),67)="Allow"
"RTN","SCRPSLT2",97,0)
 S $E(@STORE@("H1"),74)="*Total"
"RTN","SCRPSLT2",98,0)
 S $E(@STORE@("H2"),74)="Assgnd"
"RTN","SCRPSLT2",99,0)
 S $E(@STORE@("H3"),74)="PTs"
"RTN","SCRPSLT2",100,0)
 S $P(@STORE@("H4"),"=",81)=""
"RTN","SCRPSLT2",101,0)
 Q
"RTN","SCRPSLT2",102,0)
HEADER(INST,TEM) ;
"RTN","SCRPSLT2",103,0)
 N NXT
"RTN","SCRPSLT2",104,0)
 S NXT="H"
"RTN","SCRPSLT2",105,0)
 W !!,@STORE@(INST)
"RTN","SCRPSLT2",106,0)
 W !!,@STORE@(INST,TEM)
"RTN","SCRPSLT2",107,0)
 F  S NXT=$O(@STORE@(NXT)) Q:NXT'?1"H".E  D
"RTN","SCRPSLT2",108,0)
 .W !,@STORE@(NXT)
"RTN","SCRPSLT2",109,0)
 W !
"RTN","SCRPSLT2",110,0)
 Q
"RTN","SCRPSLT2",111,0)
NEWP(INST,TEM,TITL,PAGE) ;
"RTN","SCRPSLT2",112,0)
 D NEWP1^SCRPU3(.PAGE,TITL)
"RTN","SCRPSLT2",113,0)
 I STOP Q
"RTN","SCRPSLT2",114,0)
 D HEADER(INST,TEM)
"RTN","SCRPSLT2",115,0)
 Q
"RTN","SCRPSLT2",116,0)
HOLD1(PAGE,TITL,INST,TEM) ;
"RTN","SCRPSLT2",117,0)
 ;device is home, reached end of page
"RTN","SCRPSLT2",118,0)
 D HOLD^SCRPU3(.PAGE,TITL)
"RTN","SCRPSLT2",119,0)
 I STOP Q
"RTN","SCRPSLT2",120,0)
 D HEADER(INST,TEM)
"RTN","SCRPSLT2",121,0)
 Q
"RTN","SCRPTA")
0^55^B27602719
"RTN","SCRPTA",1,0)
SCRPTA ;ALB/CMM - Patient Listing w/Team Assignment Data ;02/22/96
"RTN","SCRPTA",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPTA",3,0)
 ;
"RTN","SCRPTA",4,0)
 ;Patient Listing w/Team Assignment Data Report
"RTN","SCRPTA",5,0)
 ;
"RTN","SCRPTA",6,0)
PROMPTS ;
"RTN","SCRPTA",7,0)
 ;Prompt for Institution, Team, Role, Practitioner and Print device
"RTN","SCRPTA",8,0)
 ;
"RTN","SCRPTA",9,0)
 N PRNT,QTIME,NUMBER
"RTN","SCRPTA",10,0)
 K VAUTD,VAUTT,VAUTR,VAUTP,VAUTPP,SCUP
"RTN","SCRPTA",11,0)
 S QTIME=""
"RTN","SCRPTA",12,0)
 D INST^SCRPU1 I Y=-1 G ERR
"RTN","SCRPTA",13,0)
 K Y D PRMTT^SCRPU1 I '$D(VAUTT) G ERR
"RTN","SCRPTA",14,0)
 K Y D ROLE^SCRPU1 I '$D(VAUTR) G ERR
"RTN","SCRPTA",15,0)
 K Y S VAUTPP="" D PRACT^SCRPU1 K VAUTPP I '$D(VAUTP) G ERR
"RTN","SCRPTA",16,0)
 S PRNT=$$PDEVICE^SCRPU3()
"RTN","SCRPTA",17,0)
 I PRNT=-1 G ERR
"RTN","SCRPTA",18,0)
 I PRNT["Q;" S QTIME=$$GETTIME^SCRPU3()
"RTN","SCRPTA",19,0)
 I QTIME=-1 G ERR
"RTN","SCRPTA",20,0)
 I PRNT'?1"Q;".E S PRNT="Q;"_PRNT
"RTN","SCRPTA",21,0)
 K Y
"RTN","SCRPTA",22,0)
 S NUMBER=$$ENTRY2(.VAUTD,.VAUTT,.VAUTR,.VAUTP,PRNT,QTIME)
"RTN","SCRPTA",23,0)
 I NUMBER>0 W !!,"Print queued, task number: ",NUMBER
"RTN","SCRPTA",24,0)
 Q
"RTN","SCRPTA",25,0)
 ;
"RTN","SCRPTA",26,0)
ENTRY2(INST,TEAM,ROLE,PRACT,IOP,ZTDTH) ;
"RTN","SCRPTA",27,0)
 ;Second entry point for GUI to use
"RTN","SCRPTA",28,0)
 ;Input Parameters:
"RTN","SCRPTA",29,0)
 ;INST - institutions selected (variable and array)
"RTN","SCRPTA",30,0)
 ;TEAM - teams selected (variable and array)
"RTN","SCRPTA",31,0)
 ;ROLE - roles selected (variable and array)
"RTN","SCRPTA",32,0)
 ;PRACT - practitioners selected (variable and array)
"RTN","SCRPTA",33,0)
 ;IOP - print device
"RTN","SCRPTA",34,0)
 ;ZTDTH - queue time (optional)
"RTN","SCRPTA",35,0)
 ;
"RTN","SCRPTA",36,0)
 ;validate parameters
"RTN","SCRPTA",37,0)
 I '$D(INST)!'$D(TEAM)!'$D(ROLE)!'$D(PRACT)!'$D(IOP)!(IOP="") Q
"RTN","SCRPTA",38,0)
 ;
"RTN","SCRPTA",39,0)
 N NUMBER
"RTN","SCRPTA",40,0)
 S IOST=$P(IOP,"^",2),IOP=$P(IOP,"^")
"RTN","SCRPTA",41,0)
 I IOP?1"Q;".E S IOP=$P(IOP,"Q;",2)
"RTN","SCRPTA",42,0)
 I IOST?1"C-".E D QENTRY G RET
"RTN","SCRPTA",43,0)
 I ZTDTH="" S ZTDTH=$H
"RTN","SCRPTA",44,0)
 S ZTRTN="QENTRY^SCRPTA"
"RTN","SCRPTA",45,0)
 S ZTDESC="Patient Listing w/Team Assignment",ZTIO=IOP
"RTN","SCRPTA",46,0)
 N II
"RTN","SCRPTA",47,0)
 F II="INST","TEAM","ROLE","INST(","TEAM(","PRACT","PRACT(","ROLE(","IOP" S ZTSAVE(II)=""
"RTN","SCRPTA",48,0)
 D ^%ZTLOAD
"RTN","SCRPTA",49,0)
RET S NUMBER=0
"RTN","SCRPTA",50,0)
 I $D(ZTSK) S NUMBER=ZTSK
"RTN","SCRPTA",51,0)
 D EXIT1
"RTN","SCRPTA",52,0)
 Q NUMBER
"RTN","SCRPTA",53,0)
 ;
"RTN","SCRPTA",54,0)
QENTRY ;
"RTN","SCRPTA",55,0)
 ;driver entry point
"RTN","SCRPTA",56,0)
 S TITL="Patient Listing w/Team Assignment Data"
"RTN","SCRPTA",57,0)
 S STORE="^TMP("_$J_",""SCRPTA"")"
"RTN","SCRPTA",58,0)
 K @STORE
"RTN","SCRPTA",59,0)
 S @STORE=0
"RTN","SCRPTA",60,0)
 I TEAM=1 D TALL^SCRPPAT3 S TEAM=0
"RTN","SCRPTA",61,0)
 D FIND
"RTN","SCRPTA",62,0)
 I $O(@STORE@(0))="" S NODATA=$$NODATA^SCRPU3(TITL)
"RTN","SCRPTA",63,0)
 I '$D(NODATA) D PRINTIT(STORE,IOP,TITL)
"RTN","SCRPTA",64,0)
 D EXIT2
"RTN","SCRPTA",65,0)
 Q
"RTN","SCRPTA",66,0)
 ;
"RTN","SCRPTA",67,0)
ERR ;
"RTN","SCRPTA",68,0)
EXIT1 ;
"RTN","SCRPTA",69,0)
 K ZTDTH,ZTRTN,ZTDESC,ZTSK,ZTIO,ZTSAVE,Y,SCUP
"RTN","SCRPTA",70,0)
 Q
"RTN","SCRPTA",71,0)
 ;
"RTN","SCRPTA",72,0)
EXIT2 ;
"RTN","SCRPTA",73,0)
 K @STORE
"RTN","SCRPTA",74,0)
 K STOP,STORE,TITL,IOP,TEAM,INST,ROLE,NODATA,PRACT
"RTN","SCRPTA",75,0)
 Q
"RTN","SCRPTA",76,0)
 ;
"RTN","SCRPTA",77,0)
FIND ;
"RTN","SCRPTA",78,0)
 N NXT,TLIST,TERR,CNT,ERR1,TNODE,NODE1,PIEN,PTAIEN
"RTN","SCRPTA",79,0)
 S NXT=0,TLIST="LIST1",TERR="ERR1"
"RTN","SCRPTA",80,0)
 K @TLIST,@TERR
"RTN","SCRPTA",81,0)
 F  S NXT=$O(TEAM(NXT)) Q:NXT=""!(NXT'?.N)  D
"RTN","SCRPTA",82,0)
 .S ERR1=$$PTTM^SCAPMC2(NXT,,.TLIST,.TERR) ;Patients assigned to team NXT
"RTN","SCRPTA",83,0)
 .Q:ERR1=0
"RTN","SCRPTA",84,0)
 .S CNT=0
"RTN","SCRPTA",85,0)
 .F  S CNT=$O(@TLIST@(CNT)) Q:CNT=""!(CNT'?.N)  D
"RTN","SCRPTA",86,0)
 ..S TNODE=$G(@TLIST@(CNT))
"RTN","SCRPTA",87,0)
 ..Q:TNODE=""
"RTN","SCRPTA",88,0)
 ..S PIEN=+$P(TNODE,"^") ;patient ien
"RTN","SCRPTA",89,0)
 ..S PTAIEN=+$P(TNODE,"^",3) ;ien Patient Team Assignment #404.42
"RTN","SCRPTA",90,0)
 ..D CHK^SCRPTA2(PTAIEN,PIEN)
"RTN","SCRPTA",91,0)
 .K @TLIST,@TERR
"RTN","SCRPTA",92,0)
 K @TLIST,@TERR
"RTN","SCRPTA",93,0)
 Q
"RTN","SCRPTA",94,0)
 ;
"RTN","SCRPTA",95,0)
PRINTIT(STORE,IOP,TITL) ;
"RTN","SCRPTA",96,0)
 D OPEN^SCRPU3
"RTN","SCRPTA",97,0)
 N NXT,PAGE,NPAGE,INTN,TMN,INT,TM,PRN,PR,NEW,POS
"RTN","SCRPTA",98,0)
 S (NPAGE,STOP)=0,PAGE=1,(INTN,NEW)=""
"RTN","SCRPTA",99,0)
 D SHEAD ;setup headers
"RTN","SCRPTA",100,0)
 D TITLE^SCRPU3(.PAGE,TITL) ;write title
"RTN","SCRPTA",101,0)
 F  S INTN=$O(@STORE@("I",INTN)) Q:INTN=""!(STOP)  D
"RTN","SCRPTA",102,0)
 .S INT=$O(@STORE@("I",INTN,"")) ;institution
"RTN","SCRPTA",103,0)
 .Q:INT=""
"RTN","SCRPTA",104,0)
 .I '$D(NEW),(IOST'?1"C-".E) D NEWP1^SCRPU3(.PAGE,TITL)
"RTN","SCRPTA",105,0)
 .I '$D(NEW),(IOST?1"C-".E) D HOLD^SCRPU3(.PAGE,TITL)
"RTN","SCRPTA",106,0)
 .Q:STOP
"RTN","SCRPTA",107,0)
 .W !,$G(@STORE@(INT))
"RTN","SCRPTA",108,0)
 .K NEW
"RTN","SCRPTA",109,0)
 .S TMN=""
"RTN","SCRPTA",110,0)
 .F  S TMN=$O(@STORE@("T",INT,TMN)) Q:TMN=""!(STOP)  D
"RTN","SCRPTA",111,0)
 ..S TM=$O(@STORE@("T",INT,TMN,"")) ;team
"RTN","SCRPTA",112,0)
 ..Q:TM=""
"RTN","SCRPTA",113,0)
 ..I (IOST'?1"C-".E),$Y>(IOSL-8) D NEWP1^SCRPU3(.PAGE,TITL) W:'STOP !,$G(@STORE@(INT))
"RTN","SCRPTA",114,0)
 ..I (IOST?1"C-".E),$Y>(IOSL-8) D HOLD^SCRPU3(.PAGE,TITL) W:'STOP !,$G(@STORE@(INT))
"RTN","SCRPTA",115,0)
 ..Q:STOP
"RTN","SCRPTA",116,0)
 ..W !!,$G(@STORE@(INT,TM))
"RTN","SCRPTA",117,0)
 ..I (IOST'?1"C-".E),$Y>(IOSL-10) D NEWP1^SCRPU3(.PAGE,TITL) W:'STOP !,$G(@STORE@(INT)),!!,$G(@STORE@(INT,TM))
"RTN","SCRPTA",118,0)
 ..I (IOST?1"C-".E),$Y>(IOSL-10) D HOLD^SCRPU3(.PAGE,TITL) W:'STOP !,$G(@STORE@(INT)),!!,$G(@STORE@(INT,TM))
"RTN","SCRPTA",119,0)
 ..Q:STOP
"RTN","SCRPTA",120,0)
 ..S PRN=""
"RTN","SCRPTA",121,0)
 ..D HEADER
"RTN","SCRPTA",122,0)
 ..F  S PRN=$O(@STORE@("P",INT,TM,PRN)) Q:PRN=""!(STOP)  D
"RTN","SCRPTA",123,0)
 ...S PR=$O(@STORE@("P",INT,TM,PRN,"")) ;practitioner
"RTN","SCRPTA",124,0)
 ...Q:PR=""
"RTN","SCRPTA",125,0)
 ...S POS=""
"RTN","SCRPTA",126,0)
 ...F  S POS=$O(@STORE@("P",INT,TM,PRN,PR,POS)) Q:POS=""!(STOP)  D
"RTN","SCRPTA",127,0)
 ....D PRNT(INT,TM,PR,POS)
"RTN","SCRPTA",128,0)
 D CLOSE^SCRPU3
"RTN","SCRPTA",129,0)
 Q
"RTN","SCRPTA",130,0)
 ;
"RTN","SCRPTA",131,0)
PRNT(INT,TM,PR,POS) ;
"RTN","SCRPTA",132,0)
 ;INT - institution ien
"RTN","SCRPTA",133,0)
 ;TM - team ien
"RTN","SCRPTA",134,0)
 ;PR - practitioner ien
"RTN","SCRPTA",135,0)
 ;POS - position ien
"RTN","SCRPTA",136,0)
 ;
"RTN","SCRPTA",137,0)
 N PTIEN
"RTN","SCRPTA",138,0)
 S PTIEN=""
"RTN","SCRPTA",139,0)
 F  S PTIEN=$O(@STORE@(INT,TM,PR,POS,PTIEN)) Q:PTIEN=""  D
"RTN","SCRPTA",140,0)
 .I (IOST'?1"C-".E),$Y>(IOSL-4) D NEWP1^SCRPU3(.PAGE,TITL) W:'STOP !,$G(@STORE@(INT)),!!,$G(@STORE@(INT,TM)) D HEADER
"RTN","SCRPTA",141,0)
 .I (IOST?1"C-".E),$Y>(IOSL-4) D HOLD^SCRPU3(.PAGE,TITL) W:'STOP !,$G(@STORE@(INT)),!!,$G(@STORE@(INT,TM)) D HEADER
"RTN","SCRPTA",142,0)
 .Q:STOP
"RTN","SCRPTA",143,0)
 .W !,$G(@STORE@(INT,TM,PR,POS,PTIEN))
"RTN","SCRPTA",144,0)
 Q
"RTN","SCRPTA",145,0)
 ;
"RTN","SCRPTA",146,0)
HEADER ;
"RTN","SCRPTA",147,0)
 ;write column headers
"RTN","SCRPTA",148,0)
 N EN
"RTN","SCRPTA",149,0)
 W !
"RTN","SCRPTA",150,0)
 F EN="H1","H2","H3" D
"RTN","SCRPTA",151,0)
 .W !,$G(@STORE@(EN))
"RTN","SCRPTA",152,0)
 Q
"RTN","SCRPTA",153,0)
SHEAD ;
"RTN","SCRPTA",154,0)
 ;setup column headers
"RTN","SCRPTA",155,0)
 S @STORE@("H2")="Pt Name"
"RTN","SCRPTA",156,0)
 S $E(@STORE@("H2"),23)="Pt ID"
"RTN","SCRPTA",157,0)
 S $E(@STORE@("H2"),30)="Practitioner"
"RTN","SCRPTA",158,0)
 S $E(@STORE@("H2"),52)="Position"
"RTN","SCRPTA",159,0)
 S $E(@STORE@("H1"),70)="Date"
"RTN","SCRPTA",160,0)
 S $E(@STORE@("H2"),70)="Assigned"
"RTN","SCRPTA",161,0)
 S $P(@STORE@("H3"),"=",81)=""
"RTN","SCRPTA",162,0)
 Q
"RTN","SCRPTA2")
0^56^B24706643
"RTN","SCRPTA2",1,0)
SCRPTA2 ;ALB/CMM - Patient Listing w/Team Assignment Data ;02/22/96
"RTN","SCRPTA2",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPTA2",3,0)
 ;
"RTN","SCRPTA2",4,0)
 ;Patient Listing w/Team Assignment Data Report continued
"RTN","SCRPTA2",5,0)
 ;
"RTN","SCRPTA2",6,0)
CHK(PTIEN,PIEN) ;assigned to a position
"RTN","SCRPTA2",7,0)
 ;PTIEN - ien of 404.42 Patient Team Assignment file
"RTN","SCRPTA2",8,0)
 ;PIEN - ien of patient file #2
"RTN","SCRPTA2",9,0)
 ;
"RTN","SCRPTA2",10,0)
 N NODE,START,TPIEN,TPNODE,ROL,PRAC
"RTN","SCRPTA2",11,0)
 S START=""
"RTN","SCRPTA2",12,0)
 Q:'$D(^SCPT(404.43,"B",PTIEN))&(PRACT'="")
"RTN","SCRPTA2",13,0)
 I '$D(^SCPT(404.43,"B",PTIEN))&(PRACT="") D NOTA(PTIEN,PIEN) Q
"RTN","SCRPTA2",14,0)
 F  S START=$O(^SCPT(404.43,"B",PTIEN,START)) Q:START=""  D
"RTN","SCRPTA2",15,0)
 .S NODE=$G(^SCPT(404.43,START,0))
"RTN","SCRPTA2",16,0)
 .Q:NODE=""
"RTN","SCRPTA2",17,0)
 .Q:($P(NODE,"^",4)'="")&($P(NODE,"^",4)<DT)
"RTN","SCRPTA2",18,0)
 .; ^ not assigned currently
"RTN","SCRPTA2",19,0)
 .S TPIEN=+$P(NODE,"^",2) ;team position ien (404.57)
"RTN","SCRPTA2",20,0)
 .I '$D(^SCTM(404.57,TPIEN,0)) D NOTA(PTIEN,PIEN) Q
"RTN","SCRPTA2",21,0)
 .S TPNODE=$G(^SCTM(404.57,TPIEN,0))
"RTN","SCRPTA2",22,0)
 .I TPNODE="" D NOTA(PTIEN,PIEN) Q
"RTN","SCRPTA2",23,0)
 .;
"RTN","SCRPTA2",24,0)
 .S ROL=+$P(TPNODE,"^",3) ;role for position (ien)
"RTN","SCRPTA2",25,0)
 .Q:'$D(ROLE(ROL))&(ROLE'=1)
"RTN","SCRPTA2",26,0)
 .; ^ not a selected role
"RTN","SCRPTA2",27,0)
 .;
"RTN","SCRPTA2",28,0)
 .S PRAC=$$PRACI(TPIEN) ;practitioner information
"RTN","SCRPTA2",29,0)
 .I +PRAC=-1 D NOTA(PTIEN,PIEN) Q
"RTN","SCRPTA2",30,0)
 .I (PRACT'=1)&('$D(PRACT(+PRAC)))&(+PRAC'=0) Q
"RTN","SCRPTA2",31,0)
 .; ^ not a selected practitioner
"RTN","SCRPTA2",32,0)
 .;
"RTN","SCRPTA2",33,0)
 .S POS=$P($G(^SCTM(404.57,TPIEN,0)),"^")
"RTN","SCRPTA2",34,0)
 .D FOUND2(START,NODE,TPIEN,POS,TPNODE,PRAC,PIEN)
"RTN","SCRPTA2",35,0)
 Q
"RTN","SCRPTA2",36,0)
PRACI(TPIEN) ;
"RTN","SCRPTA2",37,0)
 ;TPIEN - team position ien (404.57)
"RTN","SCRPTA2",38,0)
 ;
"RTN","SCRPTA2",39,0)
 N EN,TPLIST,TPERR,NAME,POS,ERR,NPIEN,NODE,POSIEN
"RTN","SCRPTA2",40,0)
 S TPLIST="TPLST",TPERR="ERR2"
"RTN","SCRPTA2",41,0)
 K @TPLIST,@TPERR
"RTN","SCRPTA2",42,0)
 S ERR=$$PRTP^SCAPMC8(TPIEN,,.TPLIST,.TPERR)
"RTN","SCRPTA2",43,0)
 Q:ERR=0!($D(@TPERR)) -1
"RTN","SCRPTA2",44,0)
 S NODE=$G(@TPLIST@(1))
"RTN","SCRPTA2",45,0)
 Q:NODE="" "0^[Not Assigned]"
"RTN","SCRPTA2",46,0)
 S NAME=$P(NODE,"^",2) ;practitioner name
"RTN","SCRPTA2",47,0)
 S NPIEN=+$P(NODE,"^") ;practitioner ien
"RTN","SCRPTA2",48,0)
 S POS=$P(NODE,"^",4) ;position name
"RTN","SCRPTA2",49,0)
 S POSIEN=+$P(NODE,"^",3) ;position ien
"RTN","SCRPTA2",50,0)
 I POS="" S POS="[Not Assigned]",POSIEN=0
"RTN","SCRPTA2",51,0)
 I NAME="" S NAME="[Not Assigned]",NPIEN=0
"RTN","SCRPTA2",52,0)
 K @TPLIST,@TPERR
"RTN","SCRPTA2",53,0)
 Q NPIEN_"^"_NAME_"^"_POS_"^"_POSIEN
"RTN","SCRPTA2",54,0)
 ;
"RTN","SCRPTA2",55,0)
FOUND2(START,NODE,TPIEN,POS,TPNODE,PRAC,PIEN) ;
"RTN","SCRPTA2",56,0)
 ;START - patient team assignment position ien
"RTN","SCRPTA2",57,0)
 ;NODE - patient team position assignment node
"RTN","SCRPTA2",58,0)
 ;TPIEN - team position ien (404.57)
"RTN","SCRPTA2",59,0)
 ;POS - team position
"RTN","SCRPTA2",60,0)
 ;TPNODE - team position node (404.57)
"RTN","SCRPTA2",61,0)
 ;PRAC - practitioner info. NAME IEN^NAME^POS^POSIEN
"RTN","SCRPTA2",62,0)
 ;PIEN - patient ien
"RTN","SCRPTA2",63,0)
 ;
"RTN","SCRPTA2",64,0)
 N PTNAME,PID,ADATE
"RTN","SCRPTA2",65,0)
 S PTNAME=$E($P($G(^DPT(PIEN,0)),"^"),1,20) ;patient name
"RTN","SCRPTA2",66,0)
 S PID=$P($G(^DPT(PTIEN,.36)),"^",3),PID=$TR(PID,"-","")
"RTN","SCRPTA2",67,0)
 S PID=$E(PID,6,10) ;last four pid include 5th for pseudo notation
"RTN","SCRPTA2",68,0)
 ;
"RTN","SCRPTA2",69,0)
 S ADATE=$P(NODE,"^",3) ;position assignment date - fm format
"RTN","SCRPTA2",70,0)
 ;convert to external format
"RTN","SCRPTA2",71,0)
 I ADATE'="" S ADATE=$E(ADATE,4,5)_"/"_$E(ADATE,6,7)_"/"_$E(ADATE,2,3)
"RTN","SCRPTA2",72,0)
 ;
"RTN","SCRPTA2",73,0)
 S PNAME=$P(PRAC,"^",2) ;practitioner name
"RTN","SCRPTA2",74,0)
 S PNIEN=$P(PRAC,"^") ;practitioner ien
"RTN","SCRPTA2",75,0)
 ;
"RTN","SCRPTA2",76,0)
 S TIEN=+$P(TPNODE,"^",2) ;ien team file 404.51
"RTN","SCRPTA2",77,0)
 S TMN=$G(^SCTM(404.51,TIEN,0))
"RTN","SCRPTA2",78,0)
 Q:TMN=""
"RTN","SCRPTA2",79,0)
 S TNAME=$P(TMN,"^") ;team name
"RTN","SCRPTA2",80,0)
 S PC=$P(TMN,"^",5) ;primary care team 1/0
"RTN","SCRPTA2",81,0)
 S IIEN=+$P(TMN,"^",7) ;institution ien
"RTN","SCRPTA2",82,0)
 S INAME=$P($G(^DIC(4,IIEN,0)),"^") ;institution
"RTN","SCRPTA2",83,0)
 ;
"RTN","SCRPTA2",84,0)
 D FORMAT(IIEN,INAME,TNAME,TIEN,PC,PTNAME,PID,PNAME,PIEN,POS,TPIEN,ADATE,PIEN)
"RTN","SCRPTA2",85,0)
 Q
"RTN","SCRPTA2",86,0)
 ;
"RTN","SCRPTA2",87,0)
FORMAT(IIEN,INAME,TNAME,TIEN,PC,PTNAME,PID,PNAME,PIEN,POS,TPIEN,ADATE,PTIEN) ;
"RTN","SCRPTA2",88,0)
 ;IIEN - institution ien
"RTN","SCRPTA2",89,0)
 ;INAME - institution name
"RTN","SCRPTA2",90,0)
 ;TNAME - team name
"RTN","SCRPTA2",91,0)
 ;TIEN - team ien
"RTN","SCRPTA2",92,0)
 ;PC - primary care 1/0
"RTN","SCRPTA2",93,0)
 ;PTNAME - patient name
"RTN","SCRPTA2",94,0)
 ;PID - last 4 pid plus 5th pseudo
"RTN","SCRPTA2",95,0)
 ;PNAME - practitioner name
"RTN","SCRPTA2",96,0)
 ;PIEN - practitioner ien
"RTN","SCRPTA2",97,0)
 ;POS - position name
"RTN","SCRPTA2",98,0)
 ;TPIEN - position ien
"RTN","SCRPTA2",99,0)
 ;ADATE - assignment date
"RTN","SCRPTA2",100,0)
 ;PTIEN - patient ien
"RTN","SCRPTA2",101,0)
 ;
"RTN","SCRPTA2",102,0)
 I INAME="" S INAME="[BAD DATA]"
"RTN","SCRPTA2",103,0)
 I TNAME="" S TNAME="[BAD DATA]"
"RTN","SCRPTA2",104,0)
 I PNAME="" S PNAME="[BAD DATA]"
"RTN","SCRPTA2",105,0)
 I '$D(@STORE@("I",INAME,IIEN)) S @STORE@("I",INAME,IIEN)=""
"RTN","SCRPTA2",106,0)
 I '$D(@STORE@("T",IIEN,TNAME,TIEN)) S @STORE@("T",IIEN,TNAME,TIEN)=""
"RTN","SCRPTA2",107,0)
 I '$D(@STORE@("P",IIEN,TIEN,PNAME,PIEN,TPIEN)) S @STORE@("P",IIEN,TIEN,PNAME,PIEN,TPIEN)=""
"RTN","SCRPTA2",108,0)
 S @STORE@(IIEN)="Division: "_INAME
"RTN","SCRPTA2",109,0)
 S @STORE@(IIEN,TIEN)="Team:  "_TNAME
"RTN","SCRPTA2",110,0)
 S $E(@STORE@(IIEN,TIEN),40)="Primary Care Team: "_$S(PC=1:"YES",1:"NO")
"RTN","SCRPTA2",111,0)
 ;
"RTN","SCRPTA2",112,0)
 S @STORE@(IIEN,TIEN,PIEN,TPIEN,PTIEN)=PTNAME
"RTN","SCRPTA2",113,0)
 S $E(@STORE@(IIEN,TIEN,PIEN,TPIEN,PTIEN),23)=PID
"RTN","SCRPTA2",114,0)
 S $E(@STORE@(IIEN,TIEN,PIEN,TPIEN,PTIEN),30)=PNAME
"RTN","SCRPTA2",115,0)
 S $E(@STORE@(IIEN,TIEN,PIEN,TPIEN,PTIEN),52)=$E(POS,1,16)
"RTN","SCRPTA2",116,0)
 S $E(@STORE@(IIEN,TIEN,PIEN,TPIEN,PTIEN),70)=ADATE
"RTN","SCRPTA2",117,0)
 Q
"RTN","SCRPTA2",118,0)
 ;
"RTN","SCRPTA2",119,0)
NOTA(PTIEN,PIEN) ;
"RTN","SCRPTA2",120,0)
 ;PTIEN - patient team assignment (#404.42)
"RTN","SCRPTA2",121,0)
 ;PIEN - patient ien
"RTN","SCRPTA2",122,0)
 N IIEN,INAME,TNAME,TIEN,PC,PTNAME,PID,PNAME,PNIEN,POSIEN,POS,TPIEN,ADATE
"RTN","SCRPTA2",123,0)
 S POS="[Not Assigned]",POSIEN=0
"RTN","SCRPTA2",124,0)
 S PNAME="[Not Assigned]",PNIEN=0
"RTN","SCRPTA2",125,0)
 S ADATE=""
"RTN","SCRPTA2",126,0)
 ;
"RTN","SCRPTA2",127,0)
 S PTNAME=$E($P($G(^DPT(PIEN,0)),"^"),1,20) ;patient name
"RTN","SCRPTA2",128,0)
 S PID=$P($G(^DPT(PIEN,.36)),"^",3),PID=$TR(PID,"-","")
"RTN","SCRPTA2",129,0)
 S PID=$E(PID,6,10) ;last 4 plus 5th for psuedo
"RTN","SCRPTA2",130,0)
 ;
"RTN","SCRPTA2",131,0)
 S TIEN=+$P($G(^SCPT(404.42,PTIEN,0)),"^",3) ;team ien
"RTN","SCRPTA2",132,0)
 S TMN=$G(^SCTM(404.51,TIEN,0))
"RTN","SCRPTA2",133,0)
 Q:TMN=""
"RTN","SCRPTA2",134,0)
 S TNAME=$P(TMN,"^") ;team name
"RTN","SCRPTA2",135,0)
 S PC=$P(TMN,"^",5) ;primary care team 1/0
"RTN","SCRPTA2",136,0)
 S IIEN=+$P(TMN,"^",7) ;institution ien
"RTN","SCRPTA2",137,0)
 S INAME=$P($G(^DIC(4,IIEN,0)),"^") ;institution name
"RTN","SCRPTA2",138,0)
 ;
"RTN","SCRPTA2",139,0)
 D FORMAT(IIEN,INAME,TNAME,TIEN,PC,PTNAME,PID,PNAME,PNIEN,POS,POSIEN,ADATE,PIEN)
"RTN","SCRPTA2",140,0)
 Q
"RTN","SCRPTM")
0^57^B27643748
"RTN","SCRPTM",1,0)
SCRPTM ;ALB/CMM - List of Team's Members Report ;01/29/96
"RTN","SCRPTM",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPTM",3,0)
 ;
"RTN","SCRPTM",4,0)
 ;List of Team's Members Report
"RTN","SCRPTM",5,0)
 ;
"RTN","SCRPTM",6,0)
PROMPTS ;
"RTN","SCRPTM",7,0)
 ;Prompt for Institution, Team, Date Range, User Class, Role
"RTN","SCRPTM",8,0)
 ;and Print device
"RTN","SCRPTM",9,0)
 ;
"RTN","SCRPTM",10,0)
 N VAUTD,VAUTT,VAUTUC,VAUTR,QTIME,RANG,PRNT,NUMBER
"RTN","SCRPTM",11,0)
 K VAUTD,VAUTT,VAUTUC,VAUTR,SCUP
"RTN","SCRPTM",12,0)
 S QTIME=""
"RTN","SCRPTM",13,0)
 D INST^SCRPU1 I Y=-1 G ERR
"RTN","SCRPTM",14,0)
 K Y D PRMTT^SCRPU1 I '$D(VAUTT) G ERR
"RTN","SCRPTM",15,0)
 K Y S RANG=$$DTRANG^SCRPU2() I +RANG=-1 G ERR
"RTN","SCRPTM",16,0)
 K Y D USER^SCRPU1 I '$D(VAUTUC)&($P($G(^SD(404.91,1,"PCMM")),"^")=1) G ERR
"RTN","SCRPTM",17,0)
 K Y D ROLE^SCRPU1 I '$D(VAUTR) G ERR
"RTN","SCRPTM",18,0)
 S PRNT=$$PDEVICE^SCRPU3()
"RTN","SCRPTM",19,0)
 I PRNT=-1 G ERR
"RTN","SCRPTM",20,0)
 I PRNT["Q;" S QTIME=$$GETTIME^SCRPU3()
"RTN","SCRPTM",21,0)
 I QTIME=-1 G ERR
"RTN","SCRPTM",22,0)
 I PRNT'?1"Q;".E S PRNT="Q;"_PRNT
"RTN","SCRPTM",23,0)
 K Y
"RTN","SCRPTM",24,0)
 S NUMBER=$$ENTRY2(.VAUTD,.VAUTT,.VAUTUC,.VAUTR,RANG,PRNT,QTIME)
"RTN","SCRPTM",25,0)
 I NUMBER>0 W !!,"Print queued, task number: ",NUMBER
"RTN","SCRPTM",26,0)
 Q
"RTN","SCRPTM",27,0)
 ;
"RTN","SCRPTM",28,0)
ENTRY2(INST,TEAM,USERC,ROLE,RANGE,IOP,ZTDTH) ;
"RTN","SCRPTM",29,0)
 ;Second entry point for GUI to use
"RTN","SCRPTM",30,0)
 ;Input Parameters:
"RTN","SCRPTM",31,0)
 ;INST - institutions selected (variable and array)
"RTN","SCRPTM",32,0)
 ;TEAM - teams selected (variable and array)
"RTN","SCRPTM",33,0)
 ;USERC - user classes selected (variable and array)
"RTN","SCRPTM",34,0)
 ;ROLE - roles selected (variable and array)
"RTN","SCRPTM",35,0)
 ;RANGE - date range selected (begin date ^ end date)
"RTN","SCRPTM",36,0)
 ;IOP - print device
"RTN","SCRPTM",37,0)
 ;ZTDTH - queue time (optional)
"RTN","SCRPTM",38,0)
 ;
"RTN","SCRPTM",39,0)
 ;validate parameters
"RTN","SCRPTM",40,0)
 I '$D(INST)!'$D(TEAM)!'$D(ROLE)!'$D(RANGE)!'$D(IOP)!(IOP="") Q
"RTN","SCRPTM",41,0)
 ;
"RTN","SCRPTM",42,0)
 N NUMBER
"RTN","SCRPTM",43,0)
 S IOST=$P(IOP,"^",2),IOP=$P(IOP,"^")
"RTN","SCRPTM",44,0)
 I IOP?1"Q;".E S IOP=$P(IOP,"Q;",2)
"RTN","SCRPTM",45,0)
 I IOST?1"C-".E D QENTRY G RET
"RTN","SCRPTM",46,0)
 I ZTDTH="" S ZTDTH=$H
"RTN","SCRPTM",47,0)
 S ZTRTN="QENTRY^SCRPTM"
"RTN","SCRPTM",48,0)
 S ZTDESC="List of Team's Members",ZTIO=IOP
"RTN","SCRPTM",49,0)
 N II
"RTN","SCRPTM",50,0)
 F II="INST","TEAM","USERC","ROLE","INST(","TEAM(","USERC(","ROLE(","RANGE","IOP" S ZTSAVE(II)=""
"RTN","SCRPTM",51,0)
 D ^%ZTLOAD
"RTN","SCRPTM",52,0)
RET S NUMBER=0
"RTN","SCRPTM",53,0)
 I $D(ZTSK) S NUMBER=ZTSK
"RTN","SCRPTM",54,0)
 D EXIT1
"RTN","SCRPTM",55,0)
 Q NUMBER
"RTN","SCRPTM",56,0)
 ;
"RTN","SCRPTM",57,0)
QENTRY ;
"RTN","SCRPTM",58,0)
 ;driver entry point
"RTN","SCRPTM",59,0)
 S TITL="Team's Members Report"
"RTN","SCRPTM",60,0)
 S STORE="^TMP("_$J_",""SCRPTM"")"
"RTN","SCRPTM",61,0)
 K @STORE
"RTN","SCRPTM",62,0)
 S @STORE=0
"RTN","SCRPTM",63,0)
 I TEAM=1 D TALL^SCRPPAT3 S TEAM=0
"RTN","SCRPTM",64,0)
 D DRIVE
"RTN","SCRPTM",65,0)
 I $O(@STORE@(0))="" S NODATA=$$NODATA^SCRPU3(TITL)
"RTN","SCRPTM",66,0)
 I '$D(NODATA) D PRINTIT(STORE,IOP,TITL)
"RTN","SCRPTM",67,0)
 D EXIT2
"RTN","SCRPTM",68,0)
 Q
"RTN","SCRPTM",69,0)
 ;
"RTN","SCRPTM",70,0)
ERR ;
"RTN","SCRPTM",71,0)
EXIT1 ;
"RTN","SCRPTM",72,0)
 K ZTDTH,ZTRTN,ZTDESC,ZTSK,ZTIO,ZTSAVE,SCUP
"RTN","SCRPTM",73,0)
 Q
"RTN","SCRPTM",74,0)
EXIT2 ;
"RTN","SCRPTM",75,0)
 K @STORE
"RTN","SCRPTM",76,0)
 K STOP,STORE,TITL,IOP,TEAM,INST,NODATA,RANGE,ROLE,USERC
"RTN","SCRPTM",77,0)
 Q
"RTN","SCRPTM",78,0)
 ;
"RTN","SCRPTM",79,0)
DRIVE ;
"RTN","SCRPTM",80,0)
 N TM,EN,EN2,NODE,OKAY,PLIST,ERR,RDATE,TROL,TUSE
"RTN","SCRPTM",81,0)
 S TM="",ERR="ERRORS",PLIST="LIST"
"RTN","SCRPTM",82,0)
 K @ERR,@PLIST
"RTN","SCRPTM",83,0)
 F  S TM=$O(^SCTM(404.57,"C",TM)) Q:TM=""  D
"RTN","SCRPTM",84,0)
 .;$O through team position file
"RTN","SCRPTM",85,0)
 .I '$D(TEAM(TM))&(TEAM'=1) Q
"RTN","SCRPTM",86,0)
 .;Q above, not a selected team
"RTN","SCRPTM",87,0)
 .;selected team
"RTN","SCRPTM",88,0)
 .S RDATE("BEGIN")=$P(RANGE,"^")
"RTN","SCRPTM",89,0)
 .S RDATE("END")=$P(RANGE,"^",2)
"RTN","SCRPTM",90,0)
 .S RDATE("INCL")=0
"RTN","SCRPTM",91,0)
 .I ROLE=1 S OKAY=$$PRTM^SCAPMC1(TM,"RDATE","","",PLIST,ERR)
"RTN","SCRPTM",92,0)
 .I ROLE'=1 S OKAY=$$PRTM^SCAPMC1(TM,"RDATE","","ROLE",PLIST,ERR)
"RTN","SCRPTM",93,0)
 .I OKAY,$D(@PLIST@(0)) D PULL^SCRPTM2(TM,.PLIST)
"RTN","SCRPTM",94,0)
 .K @PLIST,@ERR
"RTN","SCRPTM",95,0)
 .I $D(USERC),(USERC'=1) S OKAY=$$PRTM^SCAPMC1(TM,"RDATE","USERC","",PLIST,ERR)
"RTN","SCRPTM",96,0)
 .I OKAY D PULL^SCRPTM2(TM,.PLIST)
"RTN","SCRPTM",97,0)
 .K @PLIST,@ERR
"RTN","SCRPTM",98,0)
 K @PLIST,@ERR
"RTN","SCRPTM",99,0)
 Q
"RTN","SCRPTM",100,0)
 ;
"RTN","SCRPTM",101,0)
PRINTIT(STORE,IOP,TITL) ;
"RTN","SCRPTM",102,0)
 D OPEN^SCRPU3
"RTN","SCRPTM",103,0)
 N INST,EINST,ETEAM,TEM,EPRACT,PRACT,PAGE,NXT,NPAGE,CNT,HEAD,POS
"RTN","SCRPTM",104,0)
 S (EINST,INST)="",(NPAGE,STOP,HEAD)=0,PAGE=1
"RTN","SCRPTM",105,0)
 D TITLE^SCRPU3(.PAGE,TITL)
"RTN","SCRPTM",106,0)
 F  S EINST=$O(@STORE@("I",EINST)) Q:EINST=""!(STOP)  D
"RTN","SCRPTM",107,0)
 .S INST=$O(@STORE@("I",EINST,INST))
"RTN","SCRPTM",108,0)
 .Q:INST=""
"RTN","SCRPTM",109,0)
 .I 'NPAGE W !,$G(@STORE@(INST)) ;write institution line
"RTN","SCRPTM",110,0)
 .S (ETEAM,TEM)=""
"RTN","SCRPTM",111,0)
 .F  S ETEAM=$O(@STORE@("T",INST,ETEAM)) Q:ETEAM=""!(STOP)  D
"RTN","SCRPTM",112,0)
 ..S TEM=$O(@STORE@("T",INST,ETEAM,TEM))
"RTN","SCRPTM",113,0)
 ..I TEM="" Q
"RTN","SCRPTM",114,0)
 ..S NXT="H"
"RTN","SCRPTM",115,0)
 ..I NPAGE,(IOST'?1"C-".E) D NEWP^SCRPTM2(INST,TEM,TITL,.PAGE,.HEAD) S NPAGE=0
"RTN","SCRPTM",116,0)
 ..I NPAGE,(IOST?1"C-".E) D HOLD1^SCRPTM2(.PAGE,TITL,INST,TEM,.HEAD) S NPAGE=0
"RTN","SCRPTM",117,0)
 ..I STOP Q
"RTN","SCRPTM",118,0)
 ..I IOST'?1"C-".E,$Y>(IOSL-5) D NEWP^SCRPTM2(INST,TEM,TITL,.PAGE,.HEAD)
"RTN","SCRPTM",119,0)
 ..I IOST?1"C-".E,$Y>(IOSL-5) D HOLD1^SCRPTM2(.PAGE,TITL,INST,TEM,.HEAD)
"RTN","SCRPTM",120,0)
 ..I STOP Q
"RTN","SCRPTM",121,0)
 ..W !
"RTN","SCRPTM",122,0)
 ..F  S NXT=$O(@STORE@(INST,TEM,NXT)) Q:NXT'?1"H".E!(STOP)  D
"RTN","SCRPTM",123,0)
 ...I 'HEAD W !,$G(@STORE@(INST,TEM,NXT)) S HEAD=0 ;writes team info
"RTN","SCRPTM",124,0)
 ..S (EPRACT,PRACT)=""
"RTN","SCRPTM",125,0)
 ..W ! ;extra line between members and practioner list
"RTN","SCRPTM",126,0)
 ..F  S EPRACT=$O(@STORE@("PN",INST,TEM,EPRACT)) Q:EPRACT=""!(STOP)  D
"RTN","SCRPTM",127,0)
 ...F  S PRACT=$O(@STORE@("PN",INST,TEM,EPRACT,PRACT)) Q:PRACT=""!(STOP)  D
"RTN","SCRPTM",128,0)
 ....I PRACT="" Q
"RTN","SCRPTM",129,0)
 ....S POS=""
"RTN","SCRPTM",130,0)
 ....F  S POS=$O(@STORE@("PN",INST,TEM,EPRACT,PRACT,POS)) Q:POS=""!(STOP)  D
"RTN","SCRPTM",131,0)
 .....D PRNTD(INST,TEM,PRACT,POS,TITL,.PAGE,.HEAD)
"RTN","SCRPTM",132,0)
 .....W ! ;seperated positions
"RTN","SCRPTM",133,0)
 ....W ! ;seperates practitioners
"RTN","SCRPTM",134,0)
 .S NPAGE=1
"RTN","SCRPTM",135,0)
 D CLOSE^SCRPU3
"RTN","SCRPTM",136,0)
 Q
"RTN","SCRPTM",137,0)
 ;
"RTN","SCRPTM",138,0)
PRNTD(INST,TEM,PRACT,POS,TITL,PAGE,HEAD) ;
"RTN","SCRPTM",139,0)
 ;
"RTN","SCRPTM",140,0)
 N CNT
"RTN","SCRPTM",141,0)
 S CNT=""
"RTN","SCRPTM",142,0)
 F  S CNT=$O(@STORE@(INST,TEM,PRACT,POS,CNT)) Q:CNT=""!(STOP)  D
"RTN","SCRPTM",143,0)
 .I IOST'?1"C-".E,$Y>(IOSL-8) D NEWP^SCRPTM2(INST,TEM,TITL,.PAGE,.HEAD)
"RTN","SCRPTM",144,0)
 .I IOST?1"C-".E,$Y>(IOSL-8) D HOLD1^SCRPTM2(.PAGE,TITL,INST,TEM,.HEAD)
"RTN","SCRPTM",145,0)
 .I STOP Q
"RTN","SCRPTM",146,0)
 .W !,$G(@STORE@(INST,TEM,PRACT,POS,CNT))
"RTN","SCRPTM",147,0)
 Q
"RTN","SCRPTM2")
0^58^B15885009
"RTN","SCRPTM2",1,0)
SCRPTM2 ;ALB/CMM - List of Team's Members Report Continued;01/29/96
"RTN","SCRPTM2",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPTM2",3,0)
 ;
"RTN","SCRPTM2",4,0)
 ;List of Team's Members Report
"RTN","SCRPTM2",5,0)
 ;
"RTN","SCRPTM2",6,0)
PULL(TIEN,PLIST) ;
"RTN","SCRPTM2",7,0)
 ;TIEN - team file ien
"RTN","SCRPTM2",8,0)
 ;PLIST - array of positions and their practitioners
"RTN","SCRPTM2",9,0)
 ;
"RTN","SCRPTM2",10,0)
 N PNAME,TPIEN,ACT,INACT,RNAME,UNAME,CNT,NODE,TNODE,PCLIN,TNAME
"RTN","SCRPTM2",11,0)
 N TPHONE,TPC,INS,INAME,PRIEN,PRNAME,OPH,ROOM,SERV
"RTN","SCRPTM2",12,0)
 ;
"RTN","SCRPTM2",13,0)
 S CNT=0
"RTN","SCRPTM2",14,0)
 F  S CNT=$O(@PLIST@(CNT)) Q:CNT=""!(CNT'?.N)  D
"RTN","SCRPTM2",15,0)
 .;get each practitioner/position
"RTN","SCRPTM2",16,0)
 .S NODE=$G(@PLIST@(CNT))
"RTN","SCRPTM2",17,0)
 .S TPIEN=+$P(NODE,"^",3) ;team position ien
"RTN","SCRPTM2",18,0)
 .S PNAME=$P(NODE,"^",4) ;position name
"RTN","SCRPTM2",19,0)
 .S ACT=$P(NODE,"^",9) ;active date (fm)
"RTN","SCRPTM2",20,0)
 .I ACT'=""&(ACT'=0) S ACT=$E(ACT,4,5)_"/"_$E(ACT,6,7)_"/"_$E(ACT,2,3)
"RTN","SCRPTM2",21,0)
 .S INACT=$P(NODE,"^",10) ;inactive date (fm)
"RTN","SCRPTM2",22,0)
 .I INACT'=""&(INACT'=0) S INACT=$E(INACT,4,5)_"/"_$E(INACT,6,7)_"/"_$E(INACT,2,3)
"RTN","SCRPTM2",23,0)
 .S RNAME=$P(NODE,"^",8) ;standard role name
"RTN","SCRPTM2",24,0)
 .S UNAME=$P(NODE,"^",6) ;user class name
"RTN","SCRPTM2",25,0)
 .S PRIEN=+$P(NODE,"^") ;practitioner ien
"RTN","SCRPTM2",26,0)
 .S PRNAME=$P(NODE,"^",2) ;practitioner name
"RTN","SCRPTM2",27,0)
 .;
"RTN","SCRPTM2",28,0)
 .S PCLIN=+$P($G(^SCTM(404.57,TPIEN,0)),"^",9) ;associated clinic ien
"RTN","SCRPTM2",29,0)
 .S PCLIN=$P($G(^SC(PCLIN,0)),"^") ;associated clinic name
"RTN","SCRPTM2",30,0)
 .;
"RTN","SCRPTM2",31,0)
 .S TNODE=$G(^SCTM(404.51,TIEN,0)) ;team node
"RTN","SCRPTM2",32,0)
 .S TNAME=$P(TNODE,"^") ;team name
"RTN","SCRPTM2",33,0)
 .S TPHONE=$P(TNODE,"^",2) ;team phone
"RTN","SCRPTM2",34,0)
 .S TPC=$S($P(TNODE,"^",5)=1:"YES",1:"NO") ;primary care?
"RTN","SCRPTM2",35,0)
 .S INS=+$P(TNODE,"^",7) ;team division ien
"RTN","SCRPTM2",36,0)
 .S INAME=$P($G(^DIC(4,INS,0)),"^") ;team division name
"RTN","SCRPTM2",37,0)
 .D KTEAM(TNAME,TPHONE,TPC,INAME,TIEN,INS)
"RTN","SCRPTM2",38,0)
 .;
"RTN","SCRPTM2",39,0)
 .S OPH=$P($G(^VA(200,PRIEN,.13)),"^",2) ;office phone
"RTN","SCRPTM2",40,0)
 .S ROOM=$P($G(^VA(200,PRIEN,.14)),"^") ;room
"RTN","SCRPTM2",41,0)
 .S SERV=+$P($G(^VA(200,PRIEN,5)),"^") ;service/section ien
"RTN","SCRPTM2",42,0)
 .S SERV=$P($G(^DIC(49,SERV,0)),"^") ;service/section name
"RTN","SCRPTM2",43,0)
 .;
"RTN","SCRPTM2",44,0)
 .D FORMAT(PNAME,TPIEN,PCLIN,RNAME,UNAME,ACT,INACT,PRIEN,PRNAME,OPH,ROOM,SERV,INS,TIEN)
"RTN","SCRPTM2",45,0)
 Q
"RTN","SCRPTM2",46,0)
 ;
"RTN","SCRPTM2",47,0)
KTEAM(TNAME,TPHONE,TPC,TDIV,TIEN,IEND) ;
"RTN","SCRPTM2",48,0)
 ;store team information
"RTN","SCRPTM2",49,0)
 I TDIV="" S TDIV="[BAD DATA]"
"RTN","SCRPTM2",50,0)
 I TNAME="" S TNAME="[BDA DATA]"
"RTN","SCRPTM2",51,0)
 S @STORE@("I",TDIV,IEND)=""
"RTN","SCRPTM2",52,0)
 S @STORE@("T",IEND,TNAME,TIEN)=""
"RTN","SCRPTM2",53,0)
 S @STORE@(IEND)="Division: "_TDIV
"RTN","SCRPTM2",54,0)
 S @STORE@(IEND,TIEN,"H1")="Team Name: "_TNAME
"RTN","SCRPTM2",55,0)
 S $E(@STORE@(IEND,TIEN,"H1"),40)="Team Phone: "_TPHONE
"RTN","SCRPTM2",56,0)
 S @STORE@(IEND,TIEN,"H2")="Primary Care Team: "_TPC
"RTN","SCRPTM2",57,0)
 S @STORE@(IEND,TIEN,"H3")=""
"RTN","SCRPTM2",58,0)
 S @STORE@(IEND,TIEN,"H4")="Members:"
"RTN","SCRPTM2",59,0)
 Q
"RTN","SCRPTM2",60,0)
 ;
"RTN","SCRPTM2",61,0)
FORMAT(POS,TPIEN,PCLIN,SPOS,UCLASS,BEG,END,PIEN,PRACT,OPH,ROOM,SERV,DIV,TEM) ;
"RTN","SCRPTM2",62,0)
 ;POS - position name
"RTN","SCRPTM2",63,0)
 ;TPIEN - position ien
"RTN","SCRPTM2",64,0)
 ;PCLIN - associated clinic
"RTN","SCRPTM2",65,0)
 ;SPOS - standard  position
"RTN","SCRPTM2",66,0)
 ;UCLASS - user class
"RTN","SCRPTM2",67,0)
 ;BEG - begin date
"RTN","SCRPTM2",68,0)
 ;END - end date
"RTN","SCRPTM2",69,0)
 ;PIEN - ien of new person file
"RTN","SCRPTM2",70,0)
 ;PRACT - practitioner name
"RTN","SCRPTM2",71,0)
 ;OPH - office number
"RTN","SCRPTM2",72,0)
 ;ROOM - room
"RTN","SCRPTM2",73,0)
 ;SERV - service
"RTN","SCRPTM2",74,0)
 ;DIV - ien of division
"RTN","SCRPTM2",75,0)
 ;TEM - ien of team
"RTN","SCRPTM2",76,0)
 ;
"RTN","SCRPTM2",77,0)
 I PRACT="" S PRACT="[BAD DATA]"
"RTN","SCRPTM2",78,0)
 S @STORE@("PN",DIV,TEM,PRACT,PIEN,TPIEN)=""
"RTN","SCRPTM2",79,0)
 S @STORE@(DIV,TEM,PIEN,TPIEN,1)=PRACT
"RTN","SCRPTM2",80,0)
 S $E(@STORE@(DIV,TEM,PIEN,TPIEN,1),35)="Position: "_POS
"RTN","SCRPTM2",81,0)
 S @STORE@(DIV,TEM,PIEN,TPIEN,2)="Standard Position: "_SPOS
"RTN","SCRPTM2",82,0)
 S @STORE@(DIV,TEM,PIEN,TPIEN,3)="User Class: "_UCLASS
"RTN","SCRPTM2",83,0)
 S @STORE@(DIV,TEM,PIEN,TPIEN,4)=SERV
"RTN","SCRPTM2",84,0)
 S $E(@STORE@(DIV,TEM,PIEN,TPIEN,4),35)="Assoc Clinic: "_PCLIN
"RTN","SCRPTM2",85,0)
 S @STORE@(DIV,TEM,PIEN,TPIEN,5)="Office Phone: "_OPH
"RTN","SCRPTM2",86,0)
 S $E(@STORE@(DIV,TEM,PIEN,TPIEN,5),35)="Room: "_ROOM
"RTN","SCRPTM2",87,0)
 S @STORE@(DIV,TEM,PIEN,TPIEN,6)="Begin Date: "_BEG
"RTN","SCRPTM2",88,0)
 S $E(@STORE@(DIV,TEM,PIEN,TPIEN,6),35)="End Date: "_END
"RTN","SCRPTM2",89,0)
 Q
"RTN","SCRPTM2",90,0)
 ;
"RTN","SCRPTM2",91,0)
NEWP(INST,TEM,TITL,PAGE,HEAD) ;
"RTN","SCRPTM2",92,0)
 ;new page
"RTN","SCRPTM2",93,0)
 D NEWP1^SCRPU3(.PAGE,TITL)
"RTN","SCRPTM2",94,0)
 D HEAD1(INST,TEM,.HEAD)
"RTN","SCRPTM2",95,0)
 Q
"RTN","SCRPTM2",96,0)
 ;
"RTN","SCRPTM2",97,0)
HEAD1(INST,TEM,HEAD) ;
"RTN","SCRPTM2",98,0)
 ;write headings
"RTN","SCRPTM2",99,0)
 W !,$G(@STORE@(INST)),!
"RTN","SCRPTM2",100,0)
 N NXT
"RTN","SCRPTM2",101,0)
 S NXT="H"
"RTN","SCRPTM2",102,0)
 F  S NXT=$O(@STORE@(INST,TEM,NXT)) Q:NXT'?1"H".E  D
"RTN","SCRPTM2",103,0)
 .W !,$G(@STORE@(INST,TEM,NXT))
"RTN","SCRPTM2",104,0)
 W ! ;extra line between MEMBERS and practitioner list
"RTN","SCRPTM2",105,0)
 S HEAD=1
"RTN","SCRPTM2",106,0)
 Q
"RTN","SCRPTM2",107,0)
HOLD1(PAGE,TITL,INST,TEM,HEAD) ;
"RTN","SCRPTM2",108,0)
 ;device is home, reached end of page
"RTN","SCRPTM2",109,0)
 D HOLD^SCRPU3(.PAGE,TITL)
"RTN","SCRPTM2",110,0)
 I STOP Q
"RTN","SCRPTM2",111,0)
 D HEAD1(INST,TEM,.HEAD)
"RTN","SCRPTM2",112,0)
 Q
"RTN","SCRPTP")
0^65^B23745983
"RTN","SCRPTP",1,0)
SCRPTP ;ALB/CMM - List of Team's Patients ;02/29/96
"RTN","SCRPTP",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPTP",3,0)
 ;
"RTN","SCRPTP",4,0)
PROMPTS ;Prompt for Institution, Team, Role, Patient Status and Print device
"RTN","SCRPTP",5,0)
 N QTIME,PRNT,VAUTD,VAUTT,VAUTR,VAUTPS,NUMBER
"RTN","SCRPTP",6,0)
 K SCUP
"RTN","SCRPTP",7,0)
 S QTIME=""
"RTN","SCRPTP",8,0)
 D INST^SCRPU1 I Y=-1 G ERR
"RTN","SCRPTP",9,0)
 K Y D PRMTT^SCRPU1 I '$D(VAUTT) G ERR
"RTN","SCRPTP",10,0)
 K Y D ROLE^SCRPU1 I '$D(VAUTR) G ERR
"RTN","SCRPTP",11,0)
 K Y D PTSTAT^SCRPU2 I '$D(VAUTPS) G ERR
"RTN","SCRPTP",12,0)
 K Y S SORT=$$SORT2^SCRPU2()
"RTN","SCRPTP",13,0)
 I SORT<1 G ERR
"RTN","SCRPTP",14,0)
 S PRNT=$$PDEVICE^SCRPU3()
"RTN","SCRPTP",15,0)
 I PRNT=-1 G ERR
"RTN","SCRPTP",16,0)
 I PRNT["Q;" S QTIME=$$GETTIME^SCRPU3()
"RTN","SCRPTP",17,0)
 I QTIME=-1 G ERR
"RTN","SCRPTP",18,0)
 I PRNT'?1"Q;".E S PRNT="Q;"_PRNT
"RTN","SCRPTP",19,0)
 S NUMBER=$$ENTRY2(.VAUTD,.VAUTT,.VAUTR,VAUTPS,SORT,PRNT,QTIME)
"RTN","SCRPTP",20,0)
 I NUMBER>0 W !!,"Print queued, task number: ",NUMBER
"RTN","SCRPTP",21,0)
 Q
"RTN","SCRPTP",22,0)
 ;
"RTN","SCRPTP",23,0)
ENTRY2(INST,TEAM,ROLE,PSTAT,SORT,IOP,ZTDTH) ;Second entry point for GUI to use
"RTN","SCRPTP",24,0)
 ;INST - institutions selected (variable and array)
"RTN","SCRPTP",25,0)
 ;TEAM - teams selected (variable and array)
"RTN","SCRPTP",26,0)
 ;ROLE - roles selected (variable and array)
"RTN","SCRPTP",27,0)
 ;PSTAT - patient status - 1=all or OPT or AC
"RTN","SCRPTP",28,0)
 ;SORT - 1=d,t,ptname 2=d,t,last 4 Pt ID 3=d,t,pract,pt name 4=d,t,pract,last 4 Pt ID
"RTN","SCRPTP",29,0)
 ;IOP - print device
"RTN","SCRPTP",30,0)
 ;ZTDTH - queue time (optional)
"RTN","SCRPTP",31,0)
 ;
"RTN","SCRPTP",32,0)
 ;validate parameters
"RTN","SCRPTP",33,0)
 I '$D(INST)!'$D(TEAM)!'$D(ROLE)!'$D(PSTAT)!'$D(SORT)!'$D(IOP)!(IOP="") Q
"RTN","SCRPTP",34,0)
 N NUMBER
"RTN","SCRPTP",35,0)
 S IOST=$P(IOP,"^",2),IOP=$P(IOP,"^")
"RTN","SCRPTP",36,0)
 I IOP?1"Q;".E S IOP=$P(IOP,"Q;",2)
"RTN","SCRPTP",37,0)
 I IOST?1"C-".E D QENTRY G RET
"RTN","SCRPTP",38,0)
 I ZTDTH="" S ZTDTH=$H
"RTN","SCRPTP",39,0)
 S ZTRTN="QENTRY^SCRPTP"
"RTN","SCRPTP",40,0)
 S ZTDESC="List of Team's Patients",ZTIO=IOP
"RTN","SCRPTP",41,0)
 N II
"RTN","SCRPTP",42,0)
 F II="INST","TEAM","ROLE","ROLE(","SORT","PSTAT","INST(","TEAM(","IOP" S ZTSAVE(II)=""
"RTN","SCRPTP",43,0)
 D ^%ZTLOAD
"RTN","SCRPTP",44,0)
RET S NUMBER=0
"RTN","SCRPTP",45,0)
 I $D(ZTSK) S NUMBER=ZTSK
"RTN","SCRPTP",46,0)
 D EXIT1
"RTN","SCRPTP",47,0)
 Q NUMBER
"RTN","SCRPTP",48,0)
 ;
"RTN","SCRPTP",49,0)
QENTRY ;driver entry point
"RTN","SCRPTP",50,0)
 S TITL="List of Team's Patients",STORE="^TMP("_$J_",""SCRPTP"")"
"RTN","SCRPTP",51,0)
 K @STORE
"RTN","SCRPTP",52,0)
 S @STORE=0
"RTN","SCRPTP",53,0)
 D FIND
"RTN","SCRPTP",54,0)
 I $O(@STORE@(0))="" S NODATA=$$NODATA^SCRPU3(TITL)
"RTN","SCRPTP",55,0)
 I '$D(NODATA) D PRINTIT^SCRPTP2(STORE,IOP,TITL)
"RTN","SCRPTP",56,0)
 D EXIT2
"RTN","SCRPTP",57,0)
 Q
"RTN","SCRPTP",58,0)
ERR ;
"RTN","SCRPTP",59,0)
EXIT1 ;
"RTN","SCRPTP",60,0)
 K ZTDTH,ZTRTN,ZTDESC,ZTSK,ZTIO,ZTSAVE,SCUP
"RTN","SCRPTP",61,0)
 Q
"RTN","SCRPTP",62,0)
EXIT2 ;
"RTN","SCRPTP",63,0)
 K @STORE
"RTN","SCRPTP",64,0)
 K STOP,STORE,TITL,IOP,TEAM,INST,ROLE,PSTAT,SORT,NODATA
"RTN","SCRPTP",65,0)
 Q
"RTN","SCRPTP",66,0)
FIND ;
"RTN","SCRPTP",67,0)
 N TIEN,ERR,LIST,OKAY
"RTN","SCRPTP",68,0)
 I TEAM=1 D TALL^SCRPPAT3 ;gets all teams for all divisions selected
"RTN","SCRPTP",69,0)
 S TIEN="",LIST="ARRAY",ERR="ERROR"
"RTN","SCRPTP",70,0)
 K @LIST,@ERR
"RTN","SCRPTP",71,0)
 F  S TIEN=$O(TEAM(TIEN)) Q:TIEN=""  D
"RTN","SCRPTP",72,0)
 .;TIEN - team ien
"RTN","SCRPTP",73,0)
 .S OKAY=$$PTTM^SCAPMC2(TIEN,"",LIST,ERR)
"RTN","SCRPTP",74,0)
 .; gets all patients for given team
"RTN","SCRPTP",75,0)
 .D HITS^SCRPTP3(LIST,TIEN)
"RTN","SCRPTP",76,0)
 .K @LIST,@ERR
"RTN","SCRPTP",77,0)
 K @LIST,@ERR
"RTN","SCRPTP",78,0)
 Q
"RTN","SCRPTP",79,0)
TINF(TIEN) ;team information
"RTN","SCRPTP",80,0)
 ;TIEN - team ien
"RTN","SCRPTP",81,0)
 ;returns: institution ien ^ team name ^ primary care ^ team phone
"RTN","SCRPTP",82,0)
 N PC,PHONE,TNODE,TNAME
"RTN","SCRPTP",83,0)
 S TNODE=$G(^SCTM(404.51,TIEN,0))
"RTN","SCRPTP",84,0)
 S TNAME=$P(TNODE,"^") ;team name
"RTN","SCRPTP",85,0)
 S PC=$S($P(TNODE,"^",5)=1:"YES",1:"NO") ;primary care team
"RTN","SCRPTP",86,0)
 S PHONE=$P(TNODE,"^",2) ;team phone
"RTN","SCRPTP",87,0)
 S INS=+$P(TNODE,"^",7) ;institution ien
"RTN","SCRPTP",88,0)
 D TDESC^SCRPITP2(TIEN,INS) ;gets team description
"RTN","SCRPTP",89,0)
 Q INS_"^"_TNAME_"^"_PC_"^"_PHONE
"RTN","SCRPTP",90,0)
 ;
"RTN","SCRPTP",91,0)
PST(PTIEN,CLIEN) ;
"RTN","SCRPTP",92,0)
 ;PTIEN - patient ien
"RTN","SCRPTP",93,0)
 ;CLIEN - associated clinic ien
"RTN","SCRPTP",94,0)
 ;returns 1=selected patient status, 0=not selected patient status
"RTN","SCRPTP",95,0)
 ;
"RTN","SCRPTP",96,0)
 N EN,NXT,FOUND,ENODE
"RTN","SCRPTP",97,0)
 S EN="",(FOUND,NXT)=0
"RTN","SCRPTP",98,0)
 Q:'$D(^DPT(PTIEN,"DE","B",CLIEN)) FOUND
"RTN","SCRPTP",99,0)
 S EN=$O(^DPT(PTIEN,"DE","B",CLIEN,""))
"RTN","SCRPTP",100,0)
 I EN=""&(PSTAT=1) S FOUND=1 Q FOUND
"RTN","SCRPTP",101,0)
 Q:EN=""!'$D(^DPT(PTIEN,"DE",EN,1)) FOUND
"RTN","SCRPTP",102,0)
 F  S NXT=$O(^DPT(PTIEN,"DE",EN,1,NXT)) Q:(FOUND)!(NXT="")!(NXT'?.N)  D
"RTN","SCRPTP",103,0)
 .;check if active enrollment
"RTN","SCRPTP",104,0)
 .S ENODE=$G(^DPT(PTIEN,"DE",EN,1,NXT,0))
"RTN","SCRPTP",105,0)
 .I $P(ENODE,"^",3)'="",$P(ENODE,"^",3)<DT+1!$P(ENODE,"^")>DT Q  ;not active enrollment
"RTN","SCRPTP",106,0)
 .;                      ^ discharge date     ^ enrollment date
"RTN","SCRPTP",107,0)
 .Q:$P(ENODE,"^",2)'=$E(PSTAT,1)&(PSTAT'=1)  ;not selected patient status
"RTN","SCRPTP",108,0)
 .S FOUND=1
"RTN","SCRPTP",109,0)
 Q FOUND
"RTN","SCRPTP",110,0)
 ;
"RTN","SCRPTP",111,0)
FORMAT(INS,TIEN,PTIEN,PTNAME,PID,PIEN,PNAME,CNAME,LAST,NEXT) ;Format column information
"RTN","SCRPTP",112,0)
 ;INS - Institution ien
"RTN","SCRPTP",113,0)
 ;TIEN - team ien
"RTN","SCRPTP",114,0)
 ;PTIEN - patient ien
"RTN","SCRPTP",115,0)
 ;PTNAME - patient name
"RTN","SCRPTP",116,0)
 ;PID - last 4 PID - includes pseudo notation as 5th
"RTN","SCRPTP",117,0)
 ;PIEN - practitioner ien
"RTN","SCRPTP",118,0)
 ;PNAME - practitioner name
"RTN","SCRPTP",119,0)
 ;CNAME - clinic name
"RTN","SCRPTP",120,0)
 ;LAST - last appointment
"RTN","SCRPTP",121,0)
 ;NEXT - next appointment
"RTN","SCRPTP",122,0)
 ;
"RTN","SCRPTP",123,0)
 N SEC,TRD
"RTN","SCRPTP",124,0)
 I PNAME="" S PNAME="[BAD DATA]"
"RTN","SCRPTP",125,0)
 I PTNAME="" S PTNAME="[BAD DATA]"
"RTN","SCRPTP",126,0)
 I PID="" S PID="****"
"RTN","SCRPTP",127,0)
 S @STORE@("P",INS,TIEN,PNAME,PIEN)="" ;practitioner
"RTN","SCRPTP",128,0)
 S @STORE@("PT",INS,TIEN,PTNAME,PTIEN)="" ;patient
"RTN","SCRPTP",129,0)
 S @STORE@("PID",INS,TIEN,PID,PTIEN)="" ;last 4 pid
"RTN","SCRPTP",130,0)
 N TRD
"RTN","SCRPTP",131,0)
 I (SORT=1)!(SORT=2) S SEC=PTIEN,TRD=PIEN ;sort doesn't include practitioner
"RTN","SCRPTP",132,0)
 I (SORT=3)!(SORT=4) S SEC=PIEN,TRD=PTIEN ;sort includes practitioner
"RTN","SCRPTP",133,0)
 S @STORE@(INS,TIEN,SEC,TRD)=PTNAME ;patient name
"RTN","SCRPTP",134,0)
 S $E(@STORE@(INS,TIEN,SEC,TRD),17)=PID ;last 4 pid
"RTN","SCRPTP",135,0)
 S $E(@STORE@(INS,TIEN,SEC,TRD),23)=PNAME ;practitioner name
"RTN","SCRPTP",136,0)
 S $E(@STORE@(INS,TIEN,SEC,TRD),45)=LAST ;last appointment
"RTN","SCRPTP",137,0)
 S $E(@STORE@(INS,TIEN,SEC,TRD),55)=NEXT ;next appointment
"RTN","SCRPTP",138,0)
 S $E(@STORE@(INS,TIEN,SEC,TRD),65)=CNAME ;clinic name
"RTN","SCRPTP",139,0)
 Q
"RTN","SCRPTP2")
0^66^B25781636
"RTN","SCRPTP2",1,0)
SCRPTP2 ;ALB/CMM - List of Team's Patients ;02/29/96
"RTN","SCRPTP2",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPTP2",3,0)
 ;
"RTN","SCRPTP2",4,0)
 ;List of Team's Patients Report
"RTN","SCRPTP2",5,0)
 ;
"RTN","SCRPTP2",6,0)
TFORMAT(INST,INAME,TIEN,TNAME,PHONE,PC) ; Format team information
"RTN","SCRPTP2",7,0)
 ;INST - institution ien
"RTN","SCRPTP2",8,0)
 ;INAME - institution name
"RTN","SCRPTP2",9,0)
 ;TIEN - team ien
"RTN","SCRPTP2",10,0)
 ;TNAME - team name
"RTN","SCRPTP2",11,0)
 ;PHONE - team phone
"RTN","SCRPTP2",12,0)
 ;PC - primary care team (yes/no)
"RTN","SCRPTP2",13,0)
 ;
"RTN","SCRPTP2",14,0)
 I INAME="" S INAME="[BAD DATA]"
"RTN","SCRPTP2",15,0)
 I TNAME="" S TNAME="[BAD DATA]"
"RTN","SCRPTP2",16,0)
 S @STORE@("I",INAME,INST)=""
"RTN","SCRPTP2",17,0)
 S @STORE@("T",INST,TNAME,TIEN)=""
"RTN","SCRPTP2",18,0)
 S @STORE@(INST)="Division: "_INAME
"RTN","SCRPTP2",19,0)
 S @STORE@(INST,TIEN)="Team: "_TNAME
"RTN","SCRPTP2",20,0)
 S $E(@STORE@(INST,TIEN),45)="Team Phone: "_PHONE
"RTN","SCRPTP2",21,0)
 S @STORE@(INST,TIEN,1)="Primary Care Team: "_PC
"RTN","SCRPTP2",22,0)
 Q
"RTN","SCRPTP2",23,0)
 ;
"RTN","SCRPTP2",24,0)
PRINTIT(STORE,IOP,TITL) ;
"RTN","SCRPTP2",25,0)
 D OPEN^SCRPU3
"RTN","SCRPTP2",26,0)
 N INST,INAME,TNAME,TIEN
"RTN","SCRPTP2",27,0)
 S (NEW,PAGE)=1,STOP=0
"RTN","SCRPTP2",28,0)
 D TITLE^SCRPU3(.PAGE,TITL) ;write title
"RTN","SCRPTP2",29,0)
 D SETH
"RTN","SCRPTP2",30,0)
 ;
"RTN","SCRPTP2",31,0)
 S INAME=""
"RTN","SCRPTP2",32,0)
 F  S INAME=$O(@STORE@("I",INAME)) Q:INAME=""!(STOP)  D
"RTN","SCRPTP2",33,0)
 .S INST=$O(@STORE@("I",INAME,""))
"RTN","SCRPTP2",34,0)
 .Q:INST=""
"RTN","SCRPTP2",35,0)
 .I ('NEW)&(IOST'?1"C-".E) D NEWP1^SCRPU3(.PAGE,TITL)
"RTN","SCRPTP2",36,0)
 .I ('NEW)&(IOST?1"C-".E) D HOLD^SCRPU3(.PAGE,TITL)
"RTN","SCRPTP2",37,0)
 .Q:STOP
"RTN","SCRPTP2",38,0)
 .W !,$G(@STORE@(INST)) ;write institution
"RTN","SCRPTP2",39,0)
 .S TNAME=""
"RTN","SCRPTP2",40,0)
 .F  S TNAME=$O(@STORE@("T",INST,TNAME)) Q:TNAME=""!(STOP)  D
"RTN","SCRPTP2",41,0)
 ..S TIEN=$O(@STORE@("T",INST,TNAME,""))
"RTN","SCRPTP2",42,0)
 ..Q:TIEN=""
"RTN","SCRPTP2",43,0)
 ..D TPRINT(INST,TIEN) ;writes team info
"RTN","SCRPTP2",44,0)
 ..Q:STOP
"RTN","SCRPTP2",45,0)
 ..;
"RTN","SCRPTP2",46,0)
 ..I (IOST'?1"C-".E)&($Y>(IOSL-8)) D NEWP1^SCRPU3(.PAGE,TITL)
"RTN","SCRPTP2",47,0)
 ..I (IOST?1"C-".E)&($Y>(IOSL-8)) D HOLD^SCRPU3(.PAGE,TITL)
"RTN","SCRPTP2",48,0)
 ..Q:STOP
"RTN","SCRPTP2",49,0)
 ..D HEADER
"RTN","SCRPTP2",50,0)
 ..I (SORT=3)!(SORT=4) D PRACT(INST,TIEN,.NEW)
"RTN","SCRPTP2",51,0)
 ..I (SORT=1)!(SORT=2) D PTP(INST,TIEN,.NEW)
"RTN","SCRPTP2",52,0)
 K NEW,PAGE
"RTN","SCRPTP2",53,0)
 Q
"RTN","SCRPTP2",54,0)
 ;
"RTN","SCRPTP2",55,0)
PRACT(INST,TIEN,NEW) ;Print by practitioner/patient
"RTN","SCRPTP2",56,0)
 N PNAME,PIEN,SEC2,ST1,TRD,TRDI
"RTN","SCRPTP2",57,0)
 S PNAME="",PIEN=""
"RTN","SCRPTP2",58,0)
 F  S PNAME=$O(@STORE@("P",INST,TIEN,PNAME)) Q:PNAME=""!(STOP)  D
"RTN","SCRPTP2",59,0)
 .S PIEN=$O(@STORE@("P",INST,TIEN,PNAME,""))
"RTN","SCRPTP2",60,0)
 .Q:PIEN=""
"RTN","SCRPTP2",61,0)
 .I (SORT=1)!(SORT=3) S SEC2="""PT""" ;sort by patient name
"RTN","SCRPTP2",62,0)
 .I (SORT=2)!(SORT=4) S SEC2="""PID""" ;sort by last 4 PID
"RTN","SCRPTP2",63,0)
 .S ST1=$E(STORE,1,$L(STORE)-1)_","_SEC2_")"
"RTN","SCRPTP2",64,0)
 .I (IOST'?1"C-".E)&($Y>(IOSL-8)) D NEWP1^SCRPU3(.PAGE,TITL) D:'STOP HEADER
"RTN","SCRPTP2",65,0)
 .I (IOST?1"C-".E)&($Y>(IOSL-8)) D HOLD^SCRPU3(.PAGE,TITL) D:'STOP HEADER
"RTN","SCRPTP2",66,0)
 .Q:STOP
"RTN","SCRPTP2",67,0)
 .S (TRDI,TRD)=""
"RTN","SCRPTP2",68,0)
 .F  S TRD=$O(@ST1@(INST,TIEN,TRD)) Q:TRD=""  D
"RTN","SCRPTP2",69,0)
 ..S TRDI=$O(@ST1@(INST,TIEN,TRD,""))
"RTN","SCRPTP2",70,0)
 ..Q:TRDI=""
"RTN","SCRPTP2",71,0)
 ..I (IOST'?1"C-".E)&($Y>(IOSL-8)) D NEWP1^SCRPU3(.PAGE,TITL) D:'STOP HEADER
"RTN","SCRPTP2",72,0)
 ..I (IOST?1"C-".E)&($Y>(IOSL-8)) D HOLD^SCRPU3(.PAGE,TITL) D:'STOP HEADER
"RTN","SCRPTP2",73,0)
 ..Q:STOP
"RTN","SCRPTP2",74,0)
 ..I $D(@STORE@(INST,TIEN,PIEN,TRDI)) W !,$G(@STORE@(INST,TIEN,PIEN,TRDI)) ;write column data
"RTN","SCRPTP2",75,0)
 .S NEW=0
"RTN","SCRPTP2",76,0)
 Q
"RTN","SCRPTP2",77,0)
 ;
"RTN","SCRPTP2",78,0)
PTP(INST,TIEN,NEW) ;Print by patient/practitioner
"RTN","SCRPTP2",79,0)
 N SEC2,ST1,TRDI,TRD,PNAME,PIEN
"RTN","SCRPTP2",80,0)
 I (SORT=1)!(SORT=3) S SEC2="""PT""" ;sort by patient name
"RTN","SCRPTP2",81,0)
 I (SORT=2)!(SORT=4) S SEC2="""PID""" ;sort by last 4 PID
"RTN","SCRPTP2",82,0)
 S ST1=$E(STORE,1,$L(STORE)-1)_","_SEC2_")"
"RTN","SCRPTP2",83,0)
 I (IOST'?1"C-".E)&($Y>(IOSL-8)) D NEWP1^SCRPU3(.PAGE,TITL)
"RTN","SCRPTP2",84,0)
 I (IOST?1"C-".E)&($Y>(IOSL-8)) D HOLD^SCRPU3(.PAGE,TITL)
"RTN","SCRPTP2",85,0)
 Q:STOP
"RTN","SCRPTP2",86,0)
 S (TRDI,TRD)=""
"RTN","SCRPTP2",87,0)
 F  S TRD=$O(@ST1@(INST,TIEN,TRD)) Q:TRD=""!(STOP)  D
"RTN","SCRPTP2",88,0)
 .S TRDI=$O(@ST1@(INST,TIEN,TRD,""))
"RTN","SCRPTP2",89,0)
 .Q:TRDI=""
"RTN","SCRPTP2",90,0)
 .I (IOST'?1"C-".E)&($Y>(IOSL-8)) D NEWP1^SCRPU3(.PAGE,TITL) D:'STOP HEADER
"RTN","SCRPTP2",91,0)
 .I (IOST?1"C-".E)&($Y>(IOSL-8)) D HOLD^SCRPU3(.PAGE,TITL) D:'STOP HEADER
"RTN","SCRPTP2",92,0)
 .Q:STOP
"RTN","SCRPTP2",93,0)
 .S PNAME="",PIEN=""
"RTN","SCRPTP2",94,0)
 .F  S PNAME=$O(@STORE@("P",INST,TIEN,PNAME)) Q:PNAME=""!(STOP)!(PIEN=0)  D
"RTN","SCRPTP2",95,0)
 ..S PIEN=$O(@STORE@("P",INST,TIEN,PNAME,""))
"RTN","SCRPTP2",96,0)
 ..Q:PIEN=""
"RTN","SCRPTP2",97,0)
 ..I (IOST'?1"C-".E)&($Y>(IOSL-8)) D NEWP1^SCRPU3(.PAGE,TITL) D:'STOP HEADER
"RTN","SCRPTP2",98,0)
 ..I (IOST?1"C-".E)&($Y>(IOSL-8)) D HOLD^SCRPU3(.PAGE,TITL) D:'STOP HEADER
"RTN","SCRPTP2",99,0)
 ..Q:STOP
"RTN","SCRPTP2",100,0)
 ..I $D(@STORE@(INST,TIEN,TRDI,PIEN)) W !,$G(@STORE@(INST,TIEN,TRDI,PIEN)) ;write column data
"RTN","SCRPTP2",101,0)
 .S NEW=0
"RTN","SCRPTP2",102,0)
 Q
"RTN","SCRPTP2",103,0)
 ;
"RTN","SCRPTP2",104,0)
TPRINT(INST,TIEN) ;
"RTN","SCRPTP2",105,0)
 ;prints team data
"RTN","SCRPTP2",106,0)
 N NXT
"RTN","SCRPTP2",107,0)
 I (IOST'?1"C-".E)&($Y>(IOSL-10)) D NEWP1^SCRPU3(.PAGE,TITL) W:'STOP !,$G(@STORE@(INST))
"RTN","SCRPTP2",108,0)
 I (IOST?1"C-".E)&($Y>(IOSL-10)) D HOLD^SCRPU3(.PAGE,TITL) W:'STOP !,$G(@STORE@(INST))
"RTN","SCRPTP2",109,0)
 Q:STOP
"RTN","SCRPTP2",110,0)
 W !!,$G(@STORE@(INST,TIEN))
"RTN","SCRPTP2",111,0)
 S NXT=0
"RTN","SCRPTP2",112,0)
 W !,$G(@STORE@(INST,TIEN,1)) ;write team info
"RTN","SCRPTP2",113,0)
 W !!
"RTN","SCRPTP2",114,0)
 S NXT=""
"RTN","SCRPTP2",115,0)
 ;write team description
"RTN","SCRPTP2",116,0)
 F  S NXT=$O(@STORE@(INST,TIEN,"D",NXT)) Q:NXT=""!(STOP)  D
"RTN","SCRPTP2",117,0)
 .I (IOST'?1"C-".E)&$Y>(IOSL-10) D NEWP1^SCRPU3(.PAGE,TITL) W:'STOP !,$G(@STORE@(INST))
"RTN","SCRPTP2",118,0)
 .I (IOST?1"C-".E)&$Y>(IOSL-10) D HOLD^SCRPU3(.PAGE,TITL) W:'STOP !,$G(@STORE@(INST))
"RTN","SCRPTP2",119,0)
 .Q:STOP
"RTN","SCRPTP2",120,0)
 .W !,$G(@STORE@(INST,TIEN,"D",NXT))
"RTN","SCRPTP2",121,0)
 W:'STOP !
"RTN","SCRPTP2",122,0)
 Q
"RTN","SCRPTP2",123,0)
 ;
"RTN","SCRPTP2",124,0)
HEADER ;prints column headings
"RTN","SCRPTP2",125,0)
 N NXT
"RTN","SCRPTP2",126,0)
 F NXT="H1","H2","H3" D
"RTN","SCRPTP2",127,0)
 .W !,$G(@STORE@(NXT))
"RTN","SCRPTP2",128,0)
 Q
"RTN","SCRPTP2",129,0)
 ;
"RTN","SCRPTP2",130,0)
SETH ;sets column headings
"RTN","SCRPTP2",131,0)
 S @STORE@("H2")="Pt Name"
"RTN","SCRPTP2",132,0)
 S $E(@STORE@("H2"),17)="Pt ID"
"RTN","SCRPTP2",133,0)
 S $E(@STORE@("H2"),24)="Practitioner"
"RTN","SCRPTP2",134,0)
 S $E(@STORE@("H1"),45)="Last"
"RTN","SCRPTP2",135,0)
 S $E(@STORE@("H2"),45)="Appt"
"RTN","SCRPTP2",136,0)
 S $E(@STORE@("H1"),55)="Next"
"RTN","SCRPTP2",137,0)
 S $E(@STORE@("H2"),55)="Appt"
"RTN","SCRPTP2",138,0)
 S $E(@STORE@("H2"),65)="Clinic"
"RTN","SCRPTP2",139,0)
 S $P(@STORE@("H3"),"=",81)=""
"RTN","SCRPTP2",140,0)
 Q
"RTN","SCRPTP3")
0^67^B24293900
"RTN","SCRPTP3",1,0)
SCRPTP3 ;ALB/CMM - List of Team's Patients ;02/29/96
"RTN","SCRPTP3",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPTP3",3,0)
 ;
"RTN","SCRPTP3",4,0)
 ;List of Team's Patients Report
"RTN","SCRPTP3",5,0)
 ;
"RTN","SCRPTP3",6,0)
HITS(ARRY,TIEN) ;
"RTN","SCRPTP3",7,0)
 ;ARRY - list of patients for a given team
"RTN","SCRPTP3",8,0)
 ;TIEN - team ien
"RTN","SCRPTP3",9,0)
 ;
"RTN","SCRPTP3",10,0)
 N PTIEN,PIEN,PTNAME,PNAME,PTAI,NXT,NODE,CIEN,CNAME,INAME,INST,LAST,NEXT
"RTN","SCRPTP3",11,0)
 N PAIEN,PC,PHONE,PNODE,PTPA,PTPAN,ROL,PID,TINFO,TNAME,TPIEN,TPNODE
"RTN","SCRPTP3",12,0)
 N CNT,TPA,FLAG
"RTN","SCRPTP3",13,0)
 S NXT=0
"RTN","SCRPTP3",14,0)
 F  S NXT=$O(@ARRY@(NXT)) Q:NXT=""!(NXT'?.N)  D
"RTN","SCRPTP3",15,0)
 .S NODE=$G(@ARRY@(NXT))
"RTN","SCRPTP3",16,0)
 .Q:NODE=""
"RTN","SCRPTP3",17,0)
 .S PTIEN=+$P(NODE,"^") ;patient ien
"RTN","SCRPTP3",18,0)
 .S PTNAME=$E($P(NODE,"^",2),1,15) ;patient name
"RTN","SCRPTP3",19,0)
 .S PTAI=+$P(NODE,"^",3) ;patient team assignment ien (#404.42)
"RTN","SCRPTP3",20,0)
 .;
"RTN","SCRPTP3",21,0)
 .S PNODE=$G(^DPT(PTIEN,0))
"RTN","SCRPTP3",22,0)
 .Q:PNODE=""
"RTN","SCRPTP3",23,0)
 .S PID=$P($G(^DPT(PTIEN,.36)),"^",3),PID=$TR(PID,"-","")
"RTN","SCRPTP3",24,0)
 .S PID=$E(PID,6,10) ;last 4 pid, include pseudo notation
"RTN","SCRPTP3",25,0)
 .;
"RTN","SCRPTP3",26,0)
 .S TPA=$$TPAR(PTAI,"")
"RTN","SCRPTP3",27,0)
 .I TPA'=-1 D
"RTN","SCRPTP3",28,0)
 ..S PIEN=$P(TPA,"^")
"RTN","SCRPTP3",29,0)
 ..S PNAME=$P(TPA,"^",2)
"RTN","SCRPTP3",30,0)
 ..S CNAME=$P(TPA,"^",3)
"RTN","SCRPTP3",31,0)
 ..S LAST=$P(TPA,"^",4)
"RTN","SCRPTP3",32,0)
 ..S NEXT=$P(TPA,"^",5)
"RTN","SCRPTP3",33,0)
 ..;
"RTN","SCRPTP3",34,0)
 ..S FLAG="Y"
"RTN","SCRPTP3",35,0)
 ..S TINFO=$$TINF^SCRPTP(TIEN) ;team information
"RTN","SCRPTP3",36,0)
 ..S INST=+$P(TINFO,"^") ;institution ien
"RTN","SCRPTP3",37,0)
 ..S INAME=$P($G(^DIC(4,INST,0)),"^") ;institution name
"RTN","SCRPTP3",38,0)
 ..S PHONE=$P(TINFO,"^",4) ;team phone
"RTN","SCRPTP3",39,0)
 ..S PC=$P(TINFO,"^",3) ;primary care?
"RTN","SCRPTP3",40,0)
 ..S TNAME=$P(TINFO,"^",2) ;team name
"RTN","SCRPTP3",41,0)
 ..;
"RTN","SCRPTP3",42,0)
 ..D TFORMAT^SCRPTP2(INST,INAME,TIEN,TNAME,PHONE,PC)
"RTN","SCRPTP3",43,0)
 ..D FORMAT^SCRPTP(INST,TIEN,PTIEN,PTNAME,PID,PIEN,PNAME,CNAME,LAST,NEXT)
"RTN","SCRPTP3",44,0)
 .;
"RTN","SCRPTP3",45,0)
 .;check for other assignments
"RTN","SCRPTP3",46,0)
 .N TPIN
"RTN","SCRPTP3",47,0)
 .S CNT=""
"RTN","SCRPTP3",48,0)
 .F  S CNT=$O(^SCPT(404.43,"B",PTAI,CNT)) Q:CNT=""!(CNT'?.N)  D
"RTN","SCRPTP3",49,0)
 ..S TPIN=$$TPAR(PTAI,CNT)
"RTN","SCRPTP3",50,0)
 ..Q:TPIN=-1
"RTN","SCRPTP3",51,0)
 ..S PIEN=$P(TPIN,"^")
"RTN","SCRPTP3",52,0)
 ..S PNAME=$P(TPIN,"^",2)
"RTN","SCRPTP3",53,0)
 ..S CNAME=$P(TPIN,"^",3)
"RTN","SCRPTP3",54,0)
 ..S LAST=$P(TPIN,"^",4)
"RTN","SCRPTP3",55,0)
 ..S NEXT=$P(TPIN,"^",5)
"RTN","SCRPTP3",56,0)
 ..I '$D(FLAG) D
"RTN","SCRPTP3",57,0)
 ...S TINFO=$$TINF^SCRPTP(TIEN) ;team information
"RTN","SCRPTP3",58,0)
 ...S INST=+$P(TINFO,"^") ;institution ien
"RTN","SCRPTP3",59,0)
 ...S INAME=$P($G(^DIC(4,INST,0)),"^") ;institution name
"RTN","SCRPTP3",60,0)
 ...S PHONE=$P(TINFO,"^",4) ;team phone
"RTN","SCRPTP3",61,0)
 ...S PC=$P(TINFO,"^",3) ;primary care?
"RTN","SCRPTP3",62,0)
 ...S TNAME=$P(TINFO,"^",2) ;team name
"RTN","SCRPTP3",63,0)
 ...;
"RTN","SCRPTP3",64,0)
 ...D TFORMAT^SCRPTP2(INST,INAME,TIEN,TNAME,PHONE,PC)
"RTN","SCRPTP3",65,0)
 ..D FORMAT^SCRPTP(INST,TIEN,PTIEN,PTNAME,PID,PIEN,PNAME,CNAME,LAST,NEXT)
"RTN","SCRPTP3",66,0)
 Q
"RTN","SCRPTP3",67,0)
 ;
"RTN","SCRPTP3",68,0)
TPAR(PTAI,START) ;
"RTN","SCRPTP3",69,0)
 N PTPA,TPIEN,TPNODE,ROL,CNAME,CIEN,ENROLL,OKAY,PNAME,NEXT,LAST,PAIEN
"RTN","SCRPTP3",70,0)
 I '$D(^SCPT(404.43,"B",PTAI)) Q "0^[Not Assigned]"
"RTN","SCRPTP3",71,0)
 ; ^ no patient team position assignment
"RTN","SCRPTP3",72,0)
 S PTPA=$O(^SCPT(404.43,"B",PTAI,START))
"RTN","SCRPTP3",73,0)
 I PTPA="" Q "0^[Not Assigned]"
"RTN","SCRPTP3",74,0)
 S PTPAN=$G(^SCPT(404.43,PTPA,0)) ;patient team position assignment node
"RTN","SCRPTP3",75,0)
 I PTPAN=""!(PTPAN=0) Q "0^[Not Assigned]"
"RTN","SCRPTP3",76,0)
 I $P(PTPAN,"^",4)'="",$P(PTPAN,"^",4)<DT Q -1
"RTN","SCRPTP3",77,0)
 S TPIEN=+$P(PTPAN,"^",2) ;team position ien (#404.57)
"RTN","SCRPTP3",78,0)
 I '$D(^SCTM(404.57,TPIEN,0)) Q "0^[Not Assigned]"
"RTN","SCRPTP3",79,0)
 S TPNODE=$G(^SCTM(404.57,TPIEN,0))
"RTN","SCRPTP3",80,0)
 I TPNODE="" Q "0^[Not Assigned]"
"RTN","SCRPTP3",81,0)
 S ROL=+$P(TPNODE,"^",3) ;role for position (ien)
"RTN","SCRPTP3",82,0)
 Q:'$D(ROLE(ROL))&(ROLE'=1) -1
"RTN","SCRPTP3",83,0)
 ; ^ not a selected role
"RTN","SCRPTP3",84,0)
 ;
"RTN","SCRPTP3",85,0)
 S CIEN=+$P(TPNODE,"^",9) ;associated clinic ien
"RTN","SCRPTP3",86,0)
 S CNAME=$E($P($G(^SC(CIEN,0)),"^"),1,15) ;clinic name
"RTN","SCRPTP3",87,0)
 ;check patient status
"RTN","SCRPTP3",88,0)
 S OKAY=""
"RTN","SCRPTP3",89,0)
 I CIEN>0&(PSTAT'=1) S OKAY=$$PST^SCRPTP(PTIEN,CIEN)
"RTN","SCRPTP3",90,0)
 Q:(CIEN>0)&('OKAY)&(PSTAT'=1) -1
"RTN","SCRPTP3",91,0)
 ; ^ not selected patient status
"RTN","SCRPTP3",92,0)
 ;
"RTN","SCRPTP3",93,0)
 S ENROLL=$$ENRL(PTIEN,CIEN) ;enrolled in associated clinic
"RTN","SCRPTP3",94,0)
 I 'ENROLL S CNAME="",CIEN=0
"RTN","SCRPTP3",95,0)
 ;
"RTN","SCRPTP3",96,0)
 S PAIEN=$$CHK(TPIEN)
"RTN","SCRPTP3",97,0)
 I +PAIEN'=0 S PIEN=+PAIEN,PNAME=$P(PAIEN,"^",2) ; practitioner's name
"RTN","SCRPTP3",98,0)
 I +PAIEN=0 S PIEN=0,PNAME="[Not Assigned]"
"RTN","SCRPTP3",99,0)
 ;
"RTN","SCRPTP3",100,0)
 S (NEXT,LAST)=""
"RTN","SCRPTP3",101,0)
 I +CIEN>0 S NEXT=$$GETNEXT^SCRPU3(PTIEN,CIEN) ;next appointment
"RTN","SCRPTP3",102,0)
 I +CIEN>0 S LAST=$$GETLAST^SCRPU3(PTIEN,CIEN) ;last appointment
"RTN","SCRPTP3",103,0)
 ;
"RTN","SCRPTP3",104,0)
 Q PIEN_"^"_PNAME_"^"_CNAME_"^"_NEXT_"^"_LAST
"RTN","SCRPTP3",105,0)
 ;
"RTN","SCRPTP3",106,0)
ENRL(PTIEN,CLIEN) ;
"RTN","SCRPTP3",107,0)
 ;
"RTN","SCRPTP3",108,0)
 N FOUND,ENODE,EN,NXT
"RTN","SCRPTP3",109,0)
 S FOUND=0
"RTN","SCRPTP3",110,0)
 Q:'$D(^DPT(PTIEN,"DE","B",CLIEN)) FOUND
"RTN","SCRPTP3",111,0)
 S EN=$O(^DPT(PTIEN,"DE","B",CLIEN,""))
"RTN","SCRPTP3",112,0)
 Q:EN=""!'$D(^DPT(PTIEN,"DE",EN,1)) FOUND
"RTN","SCRPTP3",113,0)
 S NXT=""
"RTN","SCRPTP3",114,0)
 F  S NXT=$O(^DPT(PTIEN,"DE",EN,1,NXT)) Q:(FOUND)!(NXT="")!(NXT'?.N)  D
"RTN","SCRPTP3",115,0)
 .;check if active enrollment
"RTN","SCRPTP3",116,0)
 .S ENODE=$G(^DPT(PTIEN,"DE",EN,1,NXT,0))
"RTN","SCRPTP3",117,0)
 .I $P(ENODE,"^",3)'="",$P(ENODE,"^",3)<DT+1!$P(ENODE,"^")>DT Q  ;not active enrollment
"RTN","SCRPTP3",118,0)
 .;                      ^ discharge date     ^ enrollment date
"RTN","SCRPTP3",119,0)
 .S FOUND=1
"RTN","SCRPTP3",120,0)
 Q FOUND
"RTN","SCRPTP3",121,0)
 ;
"RTN","SCRPTP3",122,0)
CHK(TPIEN) ;assigned to a position
"RTN","SCRPTP3",123,0)
 ;TPIEN - ien of 404.57 Team Position file
"RTN","SCRPTP3",124,0)
 ;returns:  ien of 200 New Person file
"RTN","SCRPTP3",125,0)
 N EN,PLIST,PERR,ERR,NAME
"RTN","SCRPTP3",126,0)
 S PLIST="PLST",PERR="PRR"
"RTN","SCRPTP3",127,0)
 K @PLIST,@PERR
"RTN","SCRPTP3",128,0)
 S ERR=$$PRTP^SCAPMC8(TPIEN,,.PLIST,.PERR)
"RTN","SCRPTP3",129,0)
 I '$D(@PERR) D
"RTN","SCRPTP3",130,0)
 .S EN=$P($G(@PLIST@(1)),"^") ;ien of new person file
"RTN","SCRPTP3",131,0)
 .S NAME=$P($G(@PLIST@(1)),"^",2) ; new person name
"RTN","SCRPTP3",132,0)
 K @PLIST,@PERR
"RTN","SCRPTP3",133,0)
 Q EN_"^"_NAME
"RTN","SCRPTP3",134,0)
 ;
"RTN","SCRPU1")
0^59^B24263876
"RTN","SCRPU1",1,0)
SCRPU1 ;ALB/CMM - GENERIC PROMPTS FOR PCMM REPORTS ;1/12/96
"RTN","SCRPU1",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPU1",3,0)
 ;
"RTN","SCRPU1",4,0)
INST ;Prompt for institution
"RTN","SCRPU1",5,0)
 S VAUTVB="VAUTD",DIC="^DIC(4,",DIC("S")="I $D(^SCTM(404.51,""AINST"",+Y))"
"RTN","SCRPU1",6,0)
 S VAUTNI=2,VAUTSTR="Division"
"RTN","SCRPU1",7,0)
 G FIRST^VAUTOMA
"RTN","SCRPU1",8,0)
 ;
"RTN","SCRPU1",9,0)
PRMTT ;Prompt for team.  Set VAUTTN to allow not assigned to a team as a selection
"RTN","SCRPU1",10,0)
 I '$D(VAUTD) G ERR
"RTN","SCRPU1",11,0)
 S VAUTVB="VAUTT",DIC="^SCTM(404.51,",VAUTNI=2,VAUTSTR="Team",DIC("B")=""
"RTN","SCRPU1",12,0)
 S DIC("S")="I VAUTD=1!($D(VAUTD(+$P(^(0),U,7))))"
"RTN","SCRPU1",13,0)
 G FIRST
"RTN","SCRPU1",14,0)
 ;
"RTN","SCRPU1",15,0)
CLINIC ;Prompt for Clinic
"RTN","SCRPU1",16,0)
 I '$D(VAUTT)&'$D(VAUTCA) G ERR
"RTN","SCRPU1",17,0)
 S VAUTVB="VAUTC",VAUTSTR="Clinic",VAUTNI=2,DIC="^SC("
"RTN","SCRPU1",18,0)
 ;Set screen to only allow clinics and clinics that are associated to the teams selected
"RTN","SCRPU1",19,0)
 I '$D(VAUTCA) S DIC("S")="I $$CLSC^SCRPU1()"
"RTN","SCRPU1",20,0)
 ;VAUTCA allows for selection of any clinic in the selected
"RTN","SCRPU1",21,0)
 I $D(VAUTCA) S DIC("S")="I $$CLSC2^SCRPU1()"
"RTN","SCRPU1",22,0)
 G FIRST
"RTN","SCRPU1",23,0)
 ;
"RTN","SCRPU1",24,0)
USER ;Prompt for User Class
"RTN","SCRPU1",25,0)
 I '$D(VAUTT) G ERR
"RTN","SCRPU1",26,0)
 I $P($G(^SD(404.91,1,"PCMM")),"^")'=1 Q  ;user class turned off
"RTN","SCRPU1",27,0)
 S VAUTVB="VAUTUC",DIC="^USR(8930,",VAUTSTR="User Class",VAUTNI=2
"RTN","SCRPU1",28,0)
 S DIC("S")="I $$USRCL^SCRPU1"
"RTN","SCRPU1",29,0)
 G FIRST
"RTN","SCRPU1",30,0)
 ;
"RTN","SCRPU1",31,0)
USRCL() ;Screen for user class - must be related to teams selected
"RTN","SCRPU1",32,0)
 N STOP,ENT,NODE,TIEN
"RTN","SCRPU1",33,0)
 I '+$P(^(0),U,3) Q 0
"RTN","SCRPU1",34,0)
 ;check for active/exiting user class
"RTN","SCRPU1",35,0)
 S ENT=0,STOP=0
"RTN","SCRPU1",36,0)
 F  S ENT=$O(^SCTM(404.57,"AUSR",+Y,ENT)) Q:ENT=""!(STOP)  D
"RTN","SCRPU1",37,0)
 .S NODE=$G(^SCTM(404.57,ENT,0))
"RTN","SCRPU1",38,0)
 .I NODE="" S STOP=0 Q
"RTN","SCRPU1",39,0)
 .S TIEN=+$P(NODE,"^",2) ;team ien
"RTN","SCRPU1",40,0)
 .I $D(VAUTT(TIEN))!(VAUTT=1) S STOP=1 Q
"RTN","SCRPU1",41,0)
 .I VAUTT=""&(TIEN="") S STOP=1 Q  ;no team selected, no team assigned
"RTN","SCRPU1",42,0)
 .I VAUTT'=1&('$D(VAUTT(TIEN))) S STOP=0
"RTN","SCRPU1",43,0)
 Q STOP
"RTN","SCRPU1",44,0)
 ;
"RTN","SCRPU1",45,0)
ROLE ;Prompt for Role
"RTN","SCRPU1",46,0)
 I '$D(VAUTT) G ERR
"RTN","SCRPU1",47,0)
 S VAUTVB="VAUTR",DIC="^SD(403.46,",VAUTSTR="Role",VAUTNI=2
"RTN","SCRPU1",48,0)
 S DIC("S")="I $$RL^SCRPU1()"
"RTN","SCRPU1",49,0)
 G FIRST
"RTN","SCRPU1",50,0)
 ;
"RTN","SCRPU1",51,0)
RL() ;Screen for Role - screen on team
"RTN","SCRPU1",52,0)
 N EN,STOP,ACT,TEAM
"RTN","SCRPU1",53,0)
 S EN="",STOP=0
"RTN","SCRPU1",54,0)
 I $D(^SCTM(404.57,"AC",+Y)) D
"RTN","SCRPU1",55,0)
 .F  S EN=$O(^SCTM(404.57,"AC",+Y,EN)) Q:EN=""!(STOP)  D
"RTN","SCRPU1",56,0)
 ..S ACT=+$$ACTTP^SCMCTPU(EN) ;currently active?
"RTN","SCRPU1",57,0)
 ..I 'ACT!('$D(^SCTM(404.57,EN,0))) Q
"RTN","SCRPU1",58,0)
 ..S TEAM=$P(^SCTM(404.57,EN,0),"^",2)
"RTN","SCRPU1",59,0)
 ..I $D(VAUTT(TEAM))!(VAUTT=1) S STOP=1
"RTN","SCRPU1",60,0)
 ..I VAUTT=""&(TEAM="") S STOP=1
"RTN","SCRPU1",61,0)
 Q STOP
"RTN","SCRPU1",62,0)
 ;
"RTN","SCRPU1",63,0)
PRACT ; Prompt for One (set VAUTPO) or One,Many,All,None Practitioner(s)
"RTN","SCRPU1",64,0)
 I '$D(VAUTT) G ERR
"RTN","SCRPU1",65,0)
 S VAUTVB="VAUTP",VAUTSTR="Practitioner",VAUTNI=2,DIC="^VA(200,"
"RTN","SCRPU1",66,0)
 S DIC("S")="I $$PRACS^SCRPU1()"
"RTN","SCRPU1",67,0)
 G FIRST
"RTN","SCRPU1",68,0)
 ;
"RTN","SCRPU1",69,0)
PRACS() ;Practitioner screen - off of team selection
"RTN","SCRPU1",70,0)
 N EN,STOP,NODE,TEAM
"RTN","SCRPU1",71,0)
 S EN="",STOP=0
"RTN","SCRPU1",72,0)
 I '$D(^SCTM(404.52,"C",+Y)) Q 0
"RTN","SCRPU1",73,0)
 ;Position Assignment History file
"RTN","SCRPU1",74,0)
 F  S EN=$O(^SCTM(404.52,"C",+Y,EN)) Q:EN=""!(STOP)  D
"RTN","SCRPU1",75,0)
 .I '$D(^SCTM(404.52,EN)) Q
"RTN","SCRPU1",76,0)
 .S NODE=$G(^SCTM(404.52,EN,0))
"RTN","SCRPU1",77,0)
 .S TEAM=+$P($G(^SCTM(404.57,$P(NODE,"^"),0)),"^",2)
"RTN","SCRPU1",78,0)
 .I $P(NODE,"^",4),$D(VAUTT(TEAM)) S STOP=1
"RTN","SCRPU1",79,0)
 .I VAUTT=1 S STOP=1
"RTN","SCRPU1",80,0)
 Q STOP
"RTN","SCRPU1",81,0)
 ;
"RTN","SCRPU1",82,0)
FIRST ;
"RTN","SCRPU1",83,0)
 S DIC(0)="EQMNZ",DIC("A")="Select "_VAUTSTR_": " K @VAUTVB
"RTN","SCRPU1",84,0)
 S (@VAUTVB,Y)=0
"RTN","SCRPU1",85,0)
REDO W !,DIC("A") R X:DTIME G ERR:(X="^")!'$T D:X["?"!(X="") HELP^SCRPU3
"RTN","SCRPU1",86,0)
 I X="A"!(X="ALL")&'$D(VAUTNA) S @VAUTVB=1 G QUIT
"RTN","SCRPU1",87,0)
 ;VAUTNA doesn't allow all to be selected
"RTN","SCRPU1",88,0)
 ;VAUTTN allows 'Not assigned to a team' as a selection
"RTN","SCRPU1",89,0)
 I X="N"!(X="NOT")!(X="NONE") I $D(VAUTTN)!($D(VAUTPP)) S @VAUTVB="" G QUIT
"RTN","SCRPU1",90,0)
 ;VAUTPP allows 'Not assigned to a practitioner' as a selection
"RTN","SCRPU1",91,0)
 S DIC("A")="Select another "_VAUTSTR_": " D ^DIC G:Y'>0 FIRST D SET
"RTN","SCRPU1",92,0)
 I '$D(VAUTPO) F VAI=1:0:19 W !,DIC("A") R X:DTIME G ERR:(X="")!(X="^")!'$T K Y D HELP^SCRPU3:X["?" S:$E(X)="-" VAUTX=X,X=$E(VAUTX,2,999) D ^DIC I Y>0 D SET G:VAX REDO S:'VAERR VAI=VAI+1
"RTN","SCRPU1",93,0)
 ;VAUTPO - only one practitioner allowed to be selected
"RTN","SCRPU1",94,0)
 G QUIT
"RTN","SCRPU1",95,0)
SET S VAX=0 I $D(VAUTX) S J=$S(VAUTNI=2:+Y,1:$P(Y(0),"^")) K VAUTX S VAERR=$S($D(@VAUTVB@(J)):0,1:1) W $S('VAERR:"...removed from list...",1:"...not on list...can't remove") Q:VAERR  S VAI=VAI-1 K @VAUTVB@(J) S:$O(@VAUTVB@(0))']"" VAX=1 Q
"RTN","SCRPU1",96,0)
 S VAERR=0 I $S($D(@VAUTVB@($P(Y(0),U))):1,$D(@VAUTVB@(+Y)):1,1:0) W !?3,*7,"You have already selected that ",VAUTSTR,".  Try again." S VAERR=1
"RTN","SCRPU1",97,0)
 S @VAUTVB@(+Y)=$P(Y(0),U)
"RTN","SCRPU1",98,0)
 Q
"RTN","SCRPU1",99,0)
 ;
"RTN","SCRPU1",100,0)
ERR S Y=-1 I $O(@VAUTVB@(0))="" K @VAUTVB I X="^" S SCUP=""
"RTN","SCRPU1",101,0)
QUIT S:'$D(Y) Y=1
"RTN","SCRPU1",102,0)
 I $D(@VAUTVB),VAUTSTR="Team",@VAUTVB=1 D EN^DDIOL("All Teams selected, this report may take some time...","","!,?10")
"RTN","SCRPU1",103,0)
 K DIC,J,VAERR,VAI,VAJ,VAJ1,VAX,VAUTNI,VAUTSTR,VAUTVB,X
"RTN","SCRPU1",104,0)
 Q
"RTN","SCRPU1",105,0)
 ;
"RTN","SCRPU1",106,0)
CLSC() ;screen on clinic selection, must be related to team prompt
"RTN","SCRPU1",107,0)
 I $P(^(0),U,3)'="C" Q 0
"RTN","SCRPU1",108,0)
 N TRUE,EN,TEAM
"RTN","SCRPU1",109,0)
 S TRUE=0,EN=""
"RTN","SCRPU1",110,0)
 F  S EN=$O(^SCTM(404.57,"D",+Y,EN)) Q:EN=""!(TRUE)  D
"RTN","SCRPU1",111,0)
 .S TEAM=+$P($G(^SCTM(404.57,EN,0)),"^",2)
"RTN","SCRPU1",112,0)
 .I $D(VAUTT(TEAM))!(VAUTT=1) S TRUE=1
"RTN","SCRPU1",113,0)
 I VAUTT="" S TRUE=1
"RTN","SCRPU1",114,0)
 Q TRUE
"RTN","SCRPU1",115,0)
 ;
"RTN","SCRPU1",116,0)
CLSC2() ;screen on clinic selection, must be a clinic
"RTN","SCRPU1",117,0)
 I $P(^(0),U,3)'="C" Q 0
"RTN","SCRPU1",118,0)
 Q 1
"RTN","SCRPU1",119,0)
 ;
"RTN","SCRPU1",120,0)
CLSC2OLD() ;screen on clinic selection, must be related to division prompt
"RTN","SCRPU1",121,0)
 I $P(^(0),U,3)'="C" Q 0
"RTN","SCRPU1",122,0)
 N TRUE,EN,INST,TDIV
"RTN","SCRPU1",123,0)
 S TRUE=0,EN=""
"RTN","SCRPU1",124,0)
 S TDIV=+$P(^(0),U,15) ;clinic's division
"RTN","SCRPU1",125,0)
 Q:TDIV=0 0
"RTN","SCRPU1",126,0)
 S INST=+$P(^DG(40.8,TDIV,0),U,7)
"RTN","SCRPU1",127,0)
 I '$D(VAUTD(INST))&(VAUTD'="") S TRUE=0
"RTN","SCRPU1",128,0)
 I $D(VAUTD(INST)) S TRUE=1
"RTN","SCRPU1",129,0)
 I VAUTD=1 S TRUE=1
"RTN","SCRPU1",130,0)
 Q TRUE
"RTN","SCRPU2")
0^60^B21550252
"RTN","SCRPU2",1,0)
SCRPU2 ;ALB/CMM - GENERIC PROMPTS FOR PCMM REPORTS ;1/12/96
"RTN","SCRPU2",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPU2",3,0)
 ;
"RTN","SCRPU2",4,0)
DTRANG(FIRST,SECOND) ;Date Range - begin date ^ end date => fileman format
"RTN","SCRPU2",5,0)
 ;FIRST - first prompt (not required)
"RTN","SCRPU2",6,0)
 ;SECOND - second prompt (not required)
"RTN","SCRPU2",7,0)
 N BDATE,EDATE,DIROUT,DUOUT,DTOUT
"RTN","SCRPU2",8,0)
 S EDATE=-1
"RTN","SCRPU2",9,0)
 S DIR(0)="D^::E",DIR("B")="Today"
"RTN","SCRPU2",10,0)
 I '$D(FIRST) S DIR("A")="Begin Date"
"RTN","SCRPU2",11,0)
 I $D(FIRST) S DIR("A")=FIRST
"RTN","SCRPU2",12,0)
 D ^DIR
"RTN","SCRPU2",13,0)
 I $D(DTOUT)!(X="Today") S BDATE=$P(DT,".")
"RTN","SCRPU2",14,0)
 I $D(DUOUT)!($D(DIROUT))  Q -1
"RTN","SCRPU2",15,0)
 S BDATE=+Y
"RTN","SCRPU2",16,0)
DEN I '$D(SECOND) S DIR("A")="End Date"
"RTN","SCRPU2",17,0)
 I $D(SECOND) S DIR("A")=SECOND
"RTN","SCRPU2",18,0)
 K DTOUT,X,Y
"RTN","SCRPU2",19,0)
 D ^DIR
"RTN","SCRPU2",20,0)
 I $D(DTOUT)!(X="Today") S EDATE=$P(DT,".")
"RTN","SCRPU2",21,0)
 I $D(DUOUT)!($D(DIROUT)) Q -1
"RTN","SCRPU2",22,0)
 S EDATE=+Y
"RTN","SCRPU2",23,0)
 I EDATE<BDATE W !,"End date can't occur before Begin Date",! G DEN
"RTN","SCRPU2",24,0)
 K X,Y,DIR
"RTN","SCRPU2",25,0)
 Q BDATE_"^"_EDATE
"RTN","SCRPU2",26,0)
 ;
"RTN","SCRPU2",27,0)
GTEAM(CLN,DFN) ;
"RTN","SCRPU2",28,0)
 ;given clinic and patient, find related team
"RTN","SCRPU2",29,0)
 N TPEN,FOUND,TEAM
"RTN","SCRPU2",30,0)
 S TPEN="",FOUND=0
"RTN","SCRPU2",31,0)
 F  S TPEN=$O(^SCTM(404.57,"D",CLN,TPEN)) Q:TPEN=""!(FOUND)  D
"RTN","SCRPU2",32,0)
 .S TEAM=$P(^SCTM(404.57,TPEN,0),"^",2)
"RTN","SCRPU2",33,0)
 .I $D(^SCPT(404.42,"APTTM",DFN,TEAM)) S FOUND=1
"RTN","SCRPU2",34,0)
 I FOUND=1 Q TEAM
"RTN","SCRPU2",35,0)
 Q FOUND
"RTN","SCRPU2",36,0)
 ;
"RTN","SCRPU2",37,0)
ASSUN ;
"RTN","SCRPU2",38,0)
 ;prompt for assigned or unassigned to Primary Care Team
"RTN","SCRPU2",39,0)
 N VAUTVB
"RTN","SCRPU2",40,0)
 S VAUTVB="VAUTA"
"RTN","SCRPU2",41,0)
 W !,"(A)ssigned or (U)nassigned Patients to Primary Care Team: "
"RTN","SCRPU2",42,0)
 R X:DTIME
"RTN","SCRPU2",43,0)
 I (X="^")!'$T G ERR
"RTN","SCRPU2",44,0)
 I (X'="A")&(X'="U") D HLP G ASSUN
"RTN","SCRPU2",45,0)
 I (X="")!(X["?") D HLP G ASSUN
"RTN","SCRPU2",46,0)
 I X="A" S @VAUTVB=1
"RTN","SCRPU2",47,0)
 I X="U" S @VAUTVB=0
"RTN","SCRPU2",48,0)
 K X
"RTN","SCRPU2",49,0)
 Q
"RTN","SCRPU2",50,0)
 ;
"RTN","SCRPU2",51,0)
PCLNHR() ;Prompt to Print Clinic Hours
"RTN","SCRPU2",52,0)
 S DIR("A")="Print Clinic Hours",DIR("B")="Y"
"RTN","SCRPU2",53,0)
 Q $$YESNO()
"RTN","SCRPU2",54,0)
 ;
"RTN","SCRPU2",55,0)
PCLNIN() ;Prompt to Print Clinic Information
"RTN","SCRPU2",56,0)
 S DIR("A")="Print Clinic Information",DIR("B")="Y"
"RTN","SCRPU2",57,0)
 Q $$YESNO()
"RTN","SCRPU2",58,0)
 ;
"RTN","SCRPU2",59,0)
SUMM() ;Prompt to Print Summary Only (y/n)
"RTN","SCRPU2",60,0)
 S DIR("A")="Print Summary Only",DIR("B")="N"
"RTN","SCRPU2",61,0)
 S DIR("?")="Enter 'Y' to have patient names excluded, 'N' to include patient names"
"RTN","SCRPU2",62,0)
 Q $$YESNO()
"RTN","SCRPU2",63,0)
 ;
"RTN","SCRPU2",64,0)
YESNO() ;Yes/No prompt
"RTN","SCRPU2",65,0)
 N X,DTOUT,DUOUT,DIROUT,Y
"RTN","SCRPU2",66,0)
 S DIR(0)="Y"
"RTN","SCRPU2",67,0)
 D ^DIR
"RTN","SCRPU2",68,0)
 I $D(DTOUT)!(X="") S Y=$S(DIR("B")="Y":1,1:0)
"RTN","SCRPU2",69,0)
 I $D(DUOUT)!($D(DIROUT)) S Y=-1
"RTN","SCRPU2",70,0)
 K DIR
"RTN","SCRPU2",71,0)
 Q +Y
"RTN","SCRPU2",72,0)
 ;
"RTN","SCRPU2",73,0)
PTSTAT ;Prompt for Patient Status (All, OPT, AC)
"RTN","SCRPU2",74,0)
 N X,STAT,VAUTVB
"RTN","SCRPU2",75,0)
 S VAUTVB="VAUTPS"
"RTN","SCRPU2",76,0)
 W !,"Patient Status: ALL//"
"RTN","SCRPU2",77,0)
 R X:DTIME
"RTN","SCRPU2",78,0)
 I '$T!(X="")!(X="ALL") S @VAUTVB=1
"RTN","SCRPU2",79,0)
 I X="^" G ERR
"RTN","SCRPU2",80,0)
 I (X["?") D HLP2 G PTSTAT
"RTN","SCRPU2",81,0)
 I X="A"!(X="AC") S @VAUTVB="AC"
"RTN","SCRPU2",82,0)
 I X="O"!(X="OPT") S @VAUTVB="OPT"
"RTN","SCRPU2",83,0)
 I '$D(@VAUTVB) D HLP2 G PTSTAT
"RTN","SCRPU2",84,0)
 Q
"RTN","SCRPU2",85,0)
 ;
"RTN","SCRPU2",86,0)
HLP2 ;help prompt for Patient Status
"RTN","SCRPU2",87,0)
 W !,"Enter: ",!?10,"- A or AC for patients whose status is AC"
"RTN","SCRPU2",88,0)
 W !?10,"- O or OPT for patient whose status is OPT"
"RTN","SCRPU2",89,0)
 W !?10,"- Enter or ALL for both AC and OPT patients"
"RTN","SCRPU2",90,0)
 Q
"RTN","SCRPU2",91,0)
HLP ;
"RTN","SCRPU2",92,0)
 ;help prompt
"RTN","SCRPU2",93,0)
 W !,"Enter: ",!?5,"- A for patients assigned to the team as Primary Care"
"RTN","SCRPU2",94,0)
 W !?10,"- U for patients not assigned to the team as Primary Care"
"RTN","SCRPU2",95,0)
 Q
"RTN","SCRPU2",96,0)
 ;
"RTN","SCRPU2",97,0)
ERR S Y=-1 I $O(@VAUTVB@(0))="" K @VAUTVB
"RTN","SCRPU2",98,0)
QUIT S:'$D(Y) Y=1 K DIC,J,VAERR,VAI,VAJ,VAJ1,VAX,VAUTNI,VAUTSTR,VAUTVB,X
"RTN","SCRPU2",99,0)
 Q
"RTN","SCRPU2",100,0)
 ;
"RTN","SCRPU2",101,0)
SORT() ;
"RTN","SCRPU2",102,0)
 ;Prompt for sorting by Division, Team, Practitioner or Division, Practitioner, Team
"RTN","SCRPU2",103,0)
 ;
"RTN","SCRPU2",104,0)
EN1 N X
"RTN","SCRPU2",105,0)
 W !,"Sort By:",!?10,"[1] Division, Team, Practitioner",!?10,"[2] Division, Practitioner, Team"
"RTN","SCRPU2",106,0)
 W !!,"Select 1 or 2: "
"RTN","SCRPU2",107,0)
 R X:DTIME
"RTN","SCRPU2",108,0)
 I (X="^")!'$T Q 0
"RTN","SCRPU2",109,0)
 I (X'="1")&(X'="2") D HLP3 G EN1
"RTN","SCRPU2",110,0)
 I (X["?")!(X="") D HLP3 G EN1
"RTN","SCRPU2",111,0)
 Q X
"RTN","SCRPU2",112,0)
HLP3 ;
"RTN","SCRPU2",113,0)
 ;help prompt
"RTN","SCRPU2",114,0)
 W !,"Enter: ",!?5,"- 1 to sort by Division, Team, Practitioner "
"RTN","SCRPU2",115,0)
 W !?10,"- 2 to sort by Division, Practitioner, Team"
"RTN","SCRPU2",116,0)
 Q
"RTN","SCRPU2",117,0)
 ;
"RTN","SCRPU2",118,0)
SORT2() ;Prompt for sorting by:
"RTN","SCRPU2",119,0)
 ;   [1] Division, Team, Patient Name
"RTN","SCRPU2",120,0)
 ;or [2] Division, Team, Last 4 Pt ID
"RTN","SCRPU2",121,0)
 ;or [3] Division, Team, Practitioner, Patient Name
"RTN","SCRPU2",122,0)
 ;or [4] Division, Team, Practitioner, Last 4 Pt ID
"RTN","SCRPU2",123,0)
 ;
"RTN","SCRPU2",124,0)
EN4 ;
"RTN","SCRPU2",125,0)
 N X
"RTN","SCRPU2",126,0)
 W !,"Sort By:",!?10,"[1] Division, Team, Patient Name"
"RTN","SCRPU2",127,0)
 W !?10,"[2] Division, Team, Last 4 Pt ID"
"RTN","SCRPU2",128,0)
 W !?10,"[3] Division, Team, Practitioner, Patient Name"
"RTN","SCRPU2",129,0)
 W !?10,"[4] Division, Team, Practitioner, Last 4 Pt ID"
"RTN","SCRPU2",130,0)
 W !!,"Select 1, 2, 3, or 4: "
"RTN","SCRPU2",131,0)
 R X:DTIME
"RTN","SCRPU2",132,0)
 I X=""!(X="^")!'$T Q 0
"RTN","SCRPU2",133,0)
 I (X'="1")&(X'="2")&(X'="3")&(X'="4") D HLP4 G EN4
"RTN","SCRPU2",134,0)
 I (X["?") D HLP4 G EN4
"RTN","SCRPU2",135,0)
 Q X
"RTN","SCRPU2",136,0)
HLP4 ;
"RTN","SCRPU2",137,0)
 ;help prompt
"RTN","SCRPU2",138,0)
 W !,"Enter: ",!?5,"- 1 to sort by Division, Team, Patient Name"
"RTN","SCRPU2",139,0)
 W !?10,"- 2 to sort by Division, Team, Last 4 Pt ID"
"RTN","SCRPU2",140,0)
 W !?10,"- 3 to sort by Division, Team, Practitioner, Patient Name"
"RTN","SCRPU2",141,0)
 W !?10,"- 4 to sort by Division, Team, Practitioner, Last 4 Pt ID"
"RTN","SCRPU2",142,0)
 Q
"RTN","SCRPU3")
0^61^B16553295
"RTN","SCRPU3",1,0)
SCRPU3 ;ALB/CMM - GENERIC UTILITIES ;1/16/96
"RTN","SCRPU3",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPU3",3,0)
 ;
"RTN","SCRPU3",4,0)
ELIG(DFN) ;
"RTN","SCRPU3",5,0)
 ;Gets Primary Eligibility
"RTN","SCRPU3",6,0)
 N PRIM
"RTN","SCRPU3",7,0)
 I '$D(^DPT(DFN,.36)) Q 0
"RTN","SCRPU3",8,0)
 I '$D(^DIC(8,$P(^DPT(DFN,.36),"^"),0)) Q 0
"RTN","SCRPU3",9,0)
 S PRIM=$P($G(^DIC(8,$P($G(^DPT(DFN,.36)),"^"),0)),"^",9)
"RTN","SCRPU3",10,0)
 ;MAS Primary Eligibility Code
"RTN","SCRPU3",11,0)
 S PRIM=$P($G(^DIC(8.1,PRIM,0)),"^")
"RTN","SCRPU3",12,0)
 ;
"RTN","SCRPU3",13,0)
 S PRIM=$TR(PRIM,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","SCRPU3",14,0)
 I PRIM="NON-SERVICE CONNECTED" S PRIM="NSC"
"RTN","SCRPU3",15,0)
 I PRIM["SERVICE CONNECTED" S PRIM=$P(PRIM,"SERVICE CONNECTED")_"SC"_$P(PRIM,"SERVICE CONNECTED",2,999)
"RTN","SCRPU3",16,0)
 I PRIM["LESS THAN" S PRIM=$P(PRIM,"LESS THAN")_"<"_$P(PRIM,"LESS THAN",2,999)
"RTN","SCRPU3",17,0)
 I PRIM[" TO " S PRIM=$P(PRIM," TO ")_"-"_$P(PRIM," TO ",2,999)
"RTN","SCRPU3",18,0)
 I PRIM["%" S PRIM=$TR(PRIM,"%","")
"RTN","SCRPU3",19,0)
 S PRIM=$E(PRIM,1,9)
"RTN","SCRPU3",20,0)
 Q PRIM
"RTN","SCRPU3",21,0)
 ;
"RTN","SCRPU3",22,0)
GETNEXT(DFN,CLN) ;
"RTN","SCRPU3",23,0)
 ;Get next appointment for patient (DFN) at Clinic (CLN)
"RTN","SCRPU3",24,0)
 ;Returning the date in 00/00/00 format
"RTN","SCRPU3",25,0)
 N NEXT,APPT,FOUND
"RTN","SCRPU3",26,0)
 S APPT=DT,FOUND=0,NEXT=""
"RTN","SCRPU3",27,0)
 F  S APPT=$O(^DPT(DFN,"S",APPT)) Q:APPT=""!(FOUND)  D
"RTN","SCRPU3",28,0)
 .I CLN=+$G(^DPT(DFN,"S",APPT,0))&($P(^DPT(DFN,"S",APPT,0),"^",2)'["C") S FOUND=1,NEXT=$E(APPT,4,5)_"/"_$E(APPT,6,7)_"/"_$E(APPT,2,3)
"RTN","SCRPU3",29,0)
 Q NEXT
"RTN","SCRPU3",30,0)
 ;
"RTN","SCRPU3",31,0)
GETLAST(DFN,CLN) ;
"RTN","SCRPU3",32,0)
 ;Get last appointment for patient (DFN) at Clinic (CLN)
"RTN","SCRPU3",33,0)
 ;Returning the date in 00/00/00 format
"RTN","SCRPU3",34,0)
 N LAST,APPT,FOUND
"RTN","SCRPU3",35,0)
 S APPT=DT,FOUND=0,LAST=""
"RTN","SCRPU3",36,0)
 F  S APPT=$O(^DPT(DFN,"S",APPT),-1) Q:APPT=""!(APPT=0)!(FOUND)  D
"RTN","SCRPU3",37,0)
 .I CLN=+$G(^DPT(DFN,"S",APPT,0))&($P(^DPT(DFN,"S",APPT,0),"^",2)'["C") S FOUND=1,LAST=$E(APPT,4,5)_"/"_$E(APPT,6,7)_"/"_$E(APPT,2,3)
"RTN","SCRPU3",38,0)
 Q LAST
"RTN","SCRPU3",39,0)
 ;
"RTN","SCRPU3",40,0)
PDEVICE() ;
"RTN","SCRPU3",41,0)
 ;Generic Printer Call
"RTN","SCRPU3",42,0)
 N TION,POP
"RTN","SCRPU3",43,0)
 S %ZIS="QN" D ^%ZIS K %ZIS Q:POP!(ION="^") -1
"RTN","SCRPU3",44,0)
 S TION=ION
"RTN","SCRPU3",45,0)
 I $D(IO("Q")) S TION="Q;"_TION
"RTN","SCRPU3",46,0)
 Q TION_"^"_IOST
"RTN","SCRPU3",47,0)
 ;
"RTN","SCRPU3",48,0)
GETTIME() ;
"RTN","SCRPU3",49,0)
 ;Prompt for Queue Time
"RTN","SCRPU3",50,0)
 N X,Y
"RTN","SCRPU3",51,0)
 S DIR(0)="D^NOW::RE",DIR("A")="Start Time ",DIR("B")="NOW"
"RTN","SCRPU3",52,0)
 D ^DIR
"RTN","SCRPU3",53,0)
 I $D(DTOUT)!(X="") S Y=$H
"RTN","SCRPU3",54,0)
 I $D(DUOUT)!($D(DIROUT)) S Y=-1
"RTN","SCRPU3",55,0)
 K DIR,DTOUT,DUOUT,DIROUT
"RTN","SCRPU3",56,0)
 Q Y
"RTN","SCRPU3",57,0)
 ;
"RTN","SCRPU3",58,0)
HOLD(PAGE,TIT) ;
"RTN","SCRPU3",59,0)
 ;device is home, reached end of page
"RTN","SCRPU3",60,0)
 N X
"RTN","SCRPU3",61,0)
 W !!,"Press Any Key to Continue or '^' to Quit" R X:DTIME
"RTN","SCRPU3",62,0)
 I '$T!(X="^") S STOP=1 Q
"RTN","SCRPU3",63,0)
 D NEWP1(.PAGE,TIT)
"RTN","SCRPU3",64,0)
 Q
"RTN","SCRPU3",65,0)
 ;
"RTN","SCRPU3",66,0)
NEWP1(PAGE,TITL) ;
"RTN","SCRPU3",67,0)
 ;new page
"RTN","SCRPU3",68,0)
 ;
"RTN","SCRPU3",69,0)
 D STOPCHK^DGUTL
"RTN","SCRPU3",70,0)
 I $G(STOP) D STOPPED^DGUTL Q
"RTN","SCRPU3",71,0)
 W @IOF
"RTN","SCRPU3",72,0)
 S PAGE=PAGE+1
"RTN","SCRPU3",73,0)
 D TITLE(PAGE,TITL)
"RTN","SCRPU3",74,0)
 Q
"RTN","SCRPU3",75,0)
 ;
"RTN","SCRPU3",76,0)
TITLE(PG,TITL) ;
"RTN","SCRPU3",77,0)
 N PDATE,CEN
"RTN","SCRPU3",78,0)
 S PDATE=$E(DT,4,5)_"/"_$E(DT,6,7)_"/"_$E(DT,2,3)
"RTN","SCRPU3",79,0)
 W !,"Printed on: ",PDATE,?25,TITL,?70,"PAGE: ",PG,!
"RTN","SCRPU3",80,0)
 Q
"RTN","SCRPU3",81,0)
 ;
"RTN","SCRPU3",82,0)
CLOSE ;close device
"RTN","SCRPU3",83,0)
 D ^%ZISC
"RTN","SCRPU3",84,0)
 Q
"RTN","SCRPU3",85,0)
 ;
"RTN","SCRPU3",86,0)
OPEN ;opens device
"RTN","SCRPU3",87,0)
 ;I $D(SCMJK) S IOP="HOME" ; -- added for testing broker code (mjk)
"RTN","SCRPU3",88,0)
 D ^%ZIS
"RTN","SCRPU3",89,0)
 U IO
"RTN","SCRPU3",90,0)
 I IOST?1"C-".E W @IOF
"RTN","SCRPU3",91,0)
 Q
"RTN","SCRPU3",92,0)
 ;
"RTN","SCRPU3",93,0)
NODATA(TITL) ;
"RTN","SCRPU3",94,0)
 ;no data to print
"RTN","SCRPU3",95,0)
 ;returns 1
"RTN","SCRPU3",96,0)
 D OPEN
"RTN","SCRPU3",97,0)
 D TITLE(1,TITL)
"RTN","SCRPU3",98,0)
 W !,"No data to report"
"RTN","SCRPU3",99,0)
 D CLOSE
"RTN","SCRPU3",100,0)
 Q 1
"RTN","SCRPU3",101,0)
 ;
"RTN","SCRPU3",102,0)
HELP W:'$D(VAUTNA) !,"ENTER:",!?5,"- A or ALL for all ",VAUTSTR,"s, or"
"RTN","SCRPU3",103,0)
 W:($D(VAUTTN))&(VAUTSTR="TEAM") !?5,"- N or NOT for not assigned to a team or"
"RTN","SCRPU3",104,0)
 W:($D(VAUTPO))&(VAUTSTR="PRACTITIONER") !?5,"- N or NONE or NOT for not assigned to a Practitioner"
"RTN","SCRPU3",105,0)
 W !?5,"- Select individual "_VAUTSTR W:'$D(VAUTPO) " -- limit 20"
"RTN","SCRPU3",106,0)
 W !?5,"Imprecise selections will yield an additional prompt."
"RTN","SCRPU3",107,0)
 I $O(@VAUTVB@(0))]"" W !?5,"- An entry preceeded by a minus [-] sign to remove entry from list."
"RTN","SCRPU3",108,0)
 I $O(@VAUTVB@(0))]"" W !,"NOTE, you have already selected:" S VAJ=0 F VAJ1=0:0 S VAJ=$O(@VAUTVB@(VAJ)) Q:VAJ=""  W !?8,$S(VAUTNI=1:VAJ,1:@VAUTVB@(VAJ))
"RTN","SCRPU3",109,0)
 Q
"RTN","SCRPU3",110,0)
 ;
"RTN","SCRPU3",111,0)
CONV(ORIGA,NEWA) ;
"RTN","SCRPU3",112,0)
 ;ORIGA - original array - name(ien)=data
"RTN","SCRPU3",113,0)
 ;NEWA - new array - name(n)=ien^data
"RTN","SCRPU3",114,0)
 ;
"RTN","SCRPU3",115,0)
 N ENT,CNT
"RTN","SCRPU3",116,0)
 S ENT=0,CNT=0
"RTN","SCRPU3",117,0)
 S NEWA=ORIGA
"RTN","SCRPU3",118,0)
 F  S ENT=$O(ORIGA(ENT)) Q:ENT=""!(ENT'?.N)  D
"RTN","SCRPU3",119,0)
 .S CNT=CNT+1
"RTN","SCRPU3",120,0)
 .S NEWA(CNT)=ENT_"^"_ORIGA(ENT)
"RTN","SCRPU3",121,0)
 Q
"RTN","SCRPU4")
0^86^B2014588
"RTN","SCRPU4",1,0)
SCRPU4 ;ALB/CMM - PRINT PC TEAM/PRACT/ATTEND ; 03/15/96
"RTN","SCRPU4",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCRPU4",3,0)
 ;
"RTN","SCRPU4",4,0)
PCMM(DFN,ADATE,PRINT) ; display primary care team, primary care provider and team phone for patient DFN on date ADATE
"RTN","SCRPU4",5,0)
 ;DFN - patient ien
"RTN","SCRPU4",6,0)
 ;ADATE - date to find primary care team, provider and team phone (default = today)
"RTN","SCRPU4",7,0)
 ;PRINT - default 1 to print data; otherwise don't print
"RTN","SCRPU4",8,0)
 ;
"RTN","SCRPU4",9,0)
 I '$D(PRINT) S PRINT=1
"RTN","SCRPU4",10,0)
 I PRINT'=""&(PRINT'=1) Q  ;don't print data
"RTN","SCRPU4",11,0)
 I '$D(ADATE) S ADATE=DT
"RTN","SCRPU4",12,0)
 I ADATE="" S ADATE=DT
"RTN","SCRPU4",13,0)
 I '$D(DFN) Q
"RTN","SCRPU4",14,0)
 N PCT,PCP,OKAY,PCA,TPHONE
"RTN","SCRPU4",15,0)
 S (PCT,PCP,PCA)=""
"RTN","SCRPU4",16,0)
 ;
"RTN","SCRPU4",17,0)
 S PCP=$$NMPCPR^SCAPMCU2(DFN,ADATE,1) ;primary care practitioner
"RTN","SCRPU4",18,0)
 S PCA=$$NMPCPR^SCAPMCU2(DFN,ADATE,2) ;primary care attending
"RTN","SCRPU4",19,0)
 S PCT=$$NMPCTM^SCAPMCU2(DFN,ADATE,1) ;primary care team
"RTN","SCRPU4",20,0)
 S TPHONE=$P($G(^SCTM(404.51,+$P(PCT,"^"),0)),"^",2) ;team phone
"RTN","SCRPU4",21,0)
 ;
"RTN","SCRPU4",22,0)
 W !
"RTN","SCRPU4",23,0)
 I PCT'="" W !,"Primary Care Team: ",$P(PCT,"^",2),?40,"Team Phone: ",TPHONE
"RTN","SCRPU4",24,0)
 I PCP'="" W !,"Primary Care Practitioner: ",$P(PCP,"^",2)
"RTN","SCRPU4",25,0)
 I PCA'="" W !,"Primary Care Attending: ",$P(PCA,"^",2)
"RTN","SCRPU4",26,0)
 W !
"RTN","SCRPU4",27,0)
 Q
"RTN","SCUTBK")
0^77^B10771369
"RTN","SCUTBK",1,0)
SCUTBK ;ALB/MJK - Scheduling Broker Utilities ;[ 03/21/95  4:13 PM ]
"RTN","SCUTBK",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCUTBK",3,0)
 ;
"RTN","SCUTBK",4,0)
 Q
"RTN","SCUTBK",5,0)
 ;
"RTN","SCUTBK",6,0)
CHK ; -- all broker callbacks pass thru here
"RTN","SCUTBK",7,0)
 Q
"RTN","SCUTBK",8,0)
 ;
"RTN","SCUTBK",9,0)
LISTC(SCDATA,SC) ; -- broker callback to get list data
"RTN","SCUTBK",10,0)
 N SCFILE,SCIENS,SCFIELDS,SCMAX,SCFROM,SCPART,SCXREF,SCREEN,SCID,SCVAL,SCROOT,SCERR,SCRSLT,SCFLD
"RTN","SCUTBK",11,0)
 D CHK
"RTN","SCUTBK",12,0)
 ; -- parse array to parameters
"RTN","SCUTBK",13,0)
 D PARSE(.SC)
"RTN","SCUTBK",14,0)
 S SCFLAGS=$G(SCFLAGS)_"PS"
"RTN","SCUTBK",15,0)
 ;
"RTN","SCUTBK",16,0)
 ; -- get specific field criteria  - screen code (below) left as reminder
"RTN","SCUTBK",17,0)
 ;IF $G(SC("DDFILE")),$G(SC("DDFIELD")),$D(^DD(SC("DDFILE"),SC("DDFIELD"),12.1)) D
"RTN","SCUTBK",18,0)
 ;. N DIC X ^(12.1) S:$D(DIC("S")) SCREEN=DIC("S")
"RTN","SCUTBK",19,0)
 ;
"RTN","SCUTBK",20,0)
 ; -- need to get from kernel broker somehow...
"RTN","SCUTBK",21,0)
 D TMP
"RTN","SCUTBK",22,0)
 ;
"RTN","SCUTBK",23,0)
 D LIST^DIC(SCFILE,SCIENS,SCFIELDS,SCFLAGS,SCMAX,.SCFROM,SCPART,SCXREF,SCREEN,SCID,"SCRSLT","SCERR")
"RTN","SCUTBK",24,0)
 ;
"RTN","SCUTBK",25,0)
 N Y,I,N
"RTN","SCUTBK",26,0)
 ;
"RTN","SCUTBK",27,0)
 S N=0
"RTN","SCUTBK",28,0)
 IF $G(SCFROM)]"" D
"RTN","SCUTBK",29,0)
 . D SET("[Misc]")
"RTN","SCUTBK",30,0)
 . D SET("MORE"_U_SCFROM_U_SCFROM("IEN"))
"RTN","SCUTBK",31,0)
 ;
"RTN","SCUTBK",32,0)
 D SET("[Data]")
"RTN","SCUTBK",33,0)
 S I=0 F  S I=$O(SCRSLT("DILIST",I)) Q:'I  D SET(SCRSLT("DILIST",I,0))
"RTN","SCUTBK",34,0)
 ;
"RTN","SCUTBK",35,0)
 IF $D(SCERR) D
"RTN","SCUTBK",36,0)
 . D SET("[Errors]")
"RTN","SCUTBK",37,0)
 ;
"RTN","SCUTBK",38,0)
 M SCDATA=Y
"RTN","SCUTBK",39,0)
 Q
"RTN","SCUTBK",40,0)
 ;
"RTN","SCUTBK",41,0)
SET(X) ;
"RTN","SCUTBK",42,0)
 S N=N+1
"RTN","SCUTBK",43,0)
 S Y(N)=X
"RTN","SCUTBK",44,0)
 Q
"RTN","SCUTBK",45,0)
 ;
"RTN","SCUTBK",46,0)
PARSE(SC) ; -- array parsing
"RTN","SCUTBK",47,0)
 S SCFILE=$G(SC("FILE"))
"RTN","SCUTBK",48,0)
 S SCIENS=$G(SC("IENS"))
"RTN","SCUTBK",49,0)
 S SCFIELDS=$G(SC("FIELDS"))
"RTN","SCUTBK",50,0)
 S SCFLAGS=$G(SC("FLAGS"))
"RTN","SCUTBK",51,0)
 S SCMAX=$G(SC("MAX"),"*")
"RTN","SCUTBK",52,0)
 M SCFROM=SC("FROM")
"RTN","SCUTBK",53,0)
 S SCPART=$G(SC("PART"))
"RTN","SCUTBK",54,0)
 S SCXREF=$G(SC("XREF"))
"RTN","SCUTBK",55,0)
 S SCREEN=$G(SC("SCREEN"))
"RTN","SCUTBK",56,0)
 S SCID=$G(SC("ID"))
"RTN","SCUTBK",57,0)
 S SCROOT=$G(SC("ROOT"))
"RTN","SCUTBK",58,0)
 ; -- for find
"RTN","SCUTBK",59,0)
 S SCVAL=$G(SC("VALUE"))
"RTN","SCUTBK",60,0)
 Q
"RTN","SCUTBK",61,0)
 ;
"RTN","SCUTBK",62,0)
FILEC(SCDATA,SCMODE,SCROOT,SCIENS) ;
"RTN","SCUTBK",63,0)
 N SCRTN,SCFDA,SCERR,N,I
"RTN","SCUTBK",64,0)
 D CHK
"RTN","SCUTBK",65,0)
 D FDASET(.SCROOT,.SCFDA)
"RTN","SCUTBK",66,0)
 ; -- set up placeholder DINUM's if any
"RTN","SCUTBK",67,0)
 ; -- NOTE:  Can't use until multiple arrays can be passed by broker
"RTN","SCUTBK",68,0)
 ;S I="" F  S I=$O(SCIENS(I)) Q:I=""  S SCRTN(+I)=+SCIENS(I)
"RTN","SCUTBK",69,0)
 IF SCMODE="ADD" D
"RTN","SCUTBK",70,0)
 . D UPDATE^DIE("","SCFDA","SCRTN","SCERR")
"RTN","SCUTBK",71,0)
 ELSE  D
"RTN","SCUTBK",72,0)
 . D FILE^DIE("","SCFDA","SCERR")
"RTN","SCUTBK",73,0)
 S N=0
"RTN","SCUTBK",74,0)
 ;
"RTN","SCUTBK",75,0)
 D SETF("[Data]")
"RTN","SCUTBK",76,0)
 ; -- send back info on entry #'s for placeholders
"RTN","SCUTBK",77,0)
 S I=0 F  S I=$O(SCRTN(I)) Q:'I  D SETF("+"_I_U_SCRTN(I))
"RTN","SCUTBK",78,0)
 ;
"RTN","SCUTBK",79,0)
 IF $D(SCERR) D
"RTN","SCUTBK",80,0)
 . D SETF("[Errors]")
"RTN","SCUTBK",81,0)
 . D SETF("An error has occurred.")
"RTN","SCUTBK",82,0)
 Q
"RTN","SCUTBK",83,0)
 ;
"RTN","SCUTBK",84,0)
SETF(X) ;
"RTN","SCUTBK",85,0)
 S N=N+1
"RTN","SCUTBK",86,0)
 S SCDATA(N)=X
"RTN","SCUTBK",87,0)
 Q
"RTN","SCUTBK",88,0)
 ;
"RTN","SCUTBK",89,0)
FDASET(SCROOT,SCFDA) ;
"RTN","SCUTBK",90,0)
 N SCFILE,SCIEN,SCFIELD,SCVAL,SCERR,I
"RTN","SCUTBK",91,0)
 ;
"RTN","SCUTBK",92,0)
 S I=0
"RTN","SCUTBK",93,0)
 F  S I=$O(SCROOT(I)) Q:'I  S X=SCROOT(I) D
"RTN","SCUTBK",94,0)
 . S SCFILE=$P(X,U)
"RTN","SCUTBK",95,0)
 . S SCFIELD=$P(X,U,2)
"RTN","SCUTBK",96,0)
 . S SCIEN=$P(X,U,3)
"RTN","SCUTBK",97,0)
 . S SCVAL=$P(X,U,4)
"RTN","SCUTBK",98,0)
 . D FDA^DILF(SCFILE,SCIEN_",",SCFIELD,"",SCVAL,"SCFDA","SCERR")
"RTN","SCUTBK",99,0)
 Q
"RTN","SCUTBK",100,0)
 ;
"RTN","SCUTBK",101,0)
TMP ; -- temporary envrionment variables sets until kernel tools arrives
"RTN","SCUTBK",102,0)
 IF '$G(DUZ) D
"RTN","SCUTBK",103,0)
 . S DUZ=.5,DUZ(0)="@",U="^",DTIME=300
"RTN","SCUTBK",104,0)
 . D NOW^%DTC S DT=X
"RTN","SCUTBK",105,0)
 Q
"RTN","SCUTBK",106,0)
 ;
"RTN","SCUTBK",107,0)
VALC(SCDATA,SC) ; -- calls Database Validator
"RTN","SCUTBK",108,0)
 N SCFILE,SCIENS,SCFIELD,SCVALUE,SCVAL,SCRSLT,SCERR
"RTN","SCUTBK",109,0)
 D CHK
"RTN","SCUTBK",110,0)
 S SCFLAGS="E"
"RTN","SCUTBK",111,0)
 S SCFILE=$G(SC("FILE"))
"RTN","SCUTBK",112,0)
 S SCIENS=$G(SC("IENS"))
"RTN","SCUTBK",113,0)
 S SCFIELD=$G(SC("FIELD"))
"RTN","SCUTBK",114,0)
 S SCVAL=$G(SC("VALUE"))
"RTN","SCUTBK",115,0)
 ;
"RTN","SCUTBK",116,0)
 ; -- need to get from kernel broker somehow...
"RTN","SCUTBK",117,0)
 D TMP
"RTN","SCUTBK",118,0)
 ;
"RTN","SCUTBK",119,0)
 D VAL^DIE(SCFILE,SCIENS,SCFIELD,SCFLAGS,SCVAL,.SCRSLT,"","SCERR")
"RTN","SCUTBK",120,0)
 ;
"RTN","SCUTBK",121,0)
 N Y,N
"RTN","SCUTBK",122,0)
 S N=0
"RTN","SCUTBK",123,0)
 D SET("[FILLER]")
"RTN","SCUTBK",124,0)
 D SET("[Data]")
"RTN","SCUTBK",125,0)
 D SET($G(SCRSLT,U))
"RTN","SCUTBK",126,0)
 D SET($G(SCRSLT(0)))
"RTN","SCUTBK",127,0)
 ;
"RTN","SCUTBK",128,0)
 IF $D(SCERR) D
"RTN","SCUTBK",129,0)
 . D SET("[Errors]")
"RTN","SCUTBK",130,0)
 M SCDATA=Y
"RTN","SCUTBK",131,0)
 Q
"RTN","SCUTBK1")
0^78^B6329555
"RTN","SCUTBK1",1,0)
SCUTBK1 ;ALB/MJK - Scheduling Broker Utilities ;[ 03/08/95  3:41 PM ]
"RTN","SCUTBK1",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCUTBK1",3,0)
 ;
"RTN","SCUTBK1",4,0)
 Q
"RTN","SCUTBK1",5,0)
 ;
"RTN","SCUTBK1",6,0)
DIKC(SCOK,SC) ; -- broker callback to kill a file entry
"RTN","SCUTBK1",7,0)
 ;
"RTN","SCUTBK1",8,0)
 N DIK,DA
"RTN","SCUTBK1",9,0)
 D CHK^SCUTBK
"RTN","SCUTBK1",10,0)
 ;
"RTN","SCUTBK1",11,0)
 ; -- array parsing
"RTN","SCUTBK1",12,0)
 S DIK=$G(SC("ROOT"))
"RTN","SCUTBK1",13,0)
 S DA=+$G(SC("IEN"))
"RTN","SCUTBK1",14,0)
 ;
"RTN","SCUTBK1",15,0)
 IF DIK]"",$D(@(DIK_DA_",0)")) D
"RTN","SCUTBK1",16,0)
 . D ^DIK
"RTN","SCUTBK1",17,0)
 . S SCOK=1
"RTN","SCUTBK1",18,0)
 ELSE  D
"RTN","SCUTBK1",19,0)
 . S SCOK=0
"RTN","SCUTBK1",20,0)
 Q
"RTN","SCUTBK1",21,0)
 ;
"RTN","SCUTBK1",22,0)
LOCKC(SCOK,SC) ; -- broker callback to lock/unlock a node
"RTN","SCUTBK1",23,0)
 ;
"RTN","SCUTBK1",24,0)
 N SCNODE
"RTN","SCUTBK1",25,0)
 D CHK^SCUTBK
"RTN","SCUTBK1",26,0)
 ;
"RTN","SCUTBK1",27,0)
 ; -- array parsing
"RTN","SCUTBK1",28,0)
 S SCNODE=$G(SC("NODE"))
"RTN","SCUTBK1",29,0)
 ;
"RTN","SCUTBK1",30,0)
 IF SCNODE]"" D
"RTN","SCUTBK1",31,0)
 . IF $G(SC("LOCKMODE")) D
"RTN","SCUTBK1",32,0)
 . . L @("+"_SCNODE_":"_$G(SC("TIMEOUT"),5))
"RTN","SCUTBK1",33,0)
 . . S SCOK=$T
"RTN","SCUTBK1",34,0)
 . ELSE  D
"RTN","SCUTBK1",35,0)
 . . L @("-"_SCNODE)
"RTN","SCUTBK1",36,0)
 . . S SCOK=1
"RTN","SCUTBK1",37,0)
 ELSE  D 
"RTN","SCUTBK1",38,0)
 . S SCOK=0
"RTN","SCUTBK1",39,0)
 Q
"RTN","SCUTBK1",40,0)
 ;
"RTN","SCUTBK1",41,0)
FILENOC(SCFLNO,SCNAME) ; -- broker callback to get File #
"RTN","SCUTBK1",42,0)
 ;
"RTN","SCUTBK1",43,0)
 D CHK^SCUTBK
"RTN","SCUTBK1",44,0)
 S SCFLNO=+$O(^DIC("B",SCNAME,""))
"RTN","SCUTBK1",45,0)
 Q
"RTN","SCUTBK1",46,0)
 ;
"RTN","SCUTBK1",47,0)
NODEC(SCNODE,SCROOT) ; -- broker callback to get global node value
"RTN","SCUTBK1",48,0)
 ;
"RTN","SCUTBK1",49,0)
 D CHK^SCUTBK
"RTN","SCUTBK1",50,0)
 ;S SCNODE=$G(@SCROOT)
"RTN","SCUTBK1",51,0)
 IF $D(@SCROOT)=0!($D(@SCROOT)=10) D
"RTN","SCUTBK1",52,0)
 . S SCNODE="{{"_$D(@SCROOT)_"}}"
"RTN","SCUTBK1",53,0)
 IF $D(@SCROOT)=1!($D(@SCROOT)=11) D
"RTN","SCUTBK1",54,0)
 . S SCNODE=$G(@SCROOT)
"RTN","SCUTBK1",55,0)
 Q
"RTN","SCUTBK1",56,0)
 ;
"RTN","SCUTBK1",57,0)
GLCNT(SCOK,SC) ; -- extrinsic call to invoke broker to return number of
"RTN","SCUTBK1",58,0)
 ;       global nodes found at cross reference
"RTN","SCUTBK1",59,0)
 N SCNODE,SCTEAM,SCXREF,SCFRST
"RTN","SCUTBK1",60,0)
 D CHK^SCUTBK
"RTN","SCUTBK1",61,0)
 ;
"RTN","SCUTBK1",62,0)
 S (SCFRST,SCOK)=""
"RTN","SCUTBK1",63,0)
 S SCNODE=$G(SC("ROOT"))
"RTN","SCUTBK1",64,0)
 S SCXREF=$G(SC("XREF"))
"RTN","SCUTBK1",65,0)
 S SCVAL=$G(SC("VALUE"))
"RTN","SCUTBK1",66,0)
 ;
"RTN","SCUTBK1",67,0)
 S:SCXREF="" SCXREF="B"
"RTN","SCUTBK1",68,0)
 S I="",X=0
"RTN","SCUTBK1",69,0)
 F  S I=$O(@SCNODE@(SCXREF,SCVAL,I)) Q:I=""  D
"RTN","SCUTBK1",70,0)
 . S X=X+1
"RTN","SCUTBK1",71,0)
 S SCOK=$G(X)
"RTN","SCUTBK1",72,0)
 Q
"RTN","SCUTBK1",73,0)
 ;
"RTN","SCUTBK1",74,0)
IFNODE(SCNODE,SCROOT) ; -- extrinsic call to check if node exists.
"RTN","SCUTBK1",75,0)
 ; passes in full node reference.
"RTN","SCUTBK1",76,0)
 N X
"RTN","SCUTBK1",77,0)
 D CHK^SCUTBK
"RTN","SCUTBK1",78,0)
 ;
"RTN","SCUTBK1",79,0)
 IF $D(@SCROOT)=0!($D(@SCROOT)=10) D
"RTN","SCUTBK1",80,0)
 . S SCNODE="{{"_$D(@SCROOT)_"}}"
"RTN","SCUTBK1",81,0)
 IF $D(@SCROOT)=1!($D(@SCROOT)=11) D
"RTN","SCUTBK1",82,0)
 . S SCNODE=$G(@SCROOT)
"RTN","SCUTBK1",83,0)
 Q
"RTN","SCUTBK1",84,0)
 ;
"RTN","SCUTBK1",85,0)
PRTP(SCACTV,SC) ;
"RTN","SCUTBK1",86,0)
 ;
"RTN","SCUTBK1",87,0)
 N SCRTN,SCERRX,SCOK,SCIEN,SCKDT
"RTN","SCUTBK1",88,0)
 D TMP^SCUTBK
"RTN","SCUTBK1",89,0)
 D CHK^SCUTBK
"RTN","SCUTBK1",90,0)
 ;
"RTN","SCUTBK1",91,0)
 I $G(SC("IEN"))=0 D  G PRTPQ
"RTN","SCUTBK1",92,0)
 . S SCATV=0
"RTN","SCUTBK1",93,0)
 S SCIEN=SC("IEN")
"RTN","SCUTBK1",94,0)
 ;
"RTN","SCUTBK1",95,0)
 S SCKDT=""
"RTN","SCUTBK1",96,0)
 S SCKDT("BEGIN")=$G(SC("BEGIN"),DT)
"RTN","SCUTBK1",97,0)
 S SCKDT("END")=$G(SC("END"),DT)
"RTN","SCUTBK1",98,0)
 S SCKDT("INCL")=$G(SC("INCL"),0)
"RTN","SCUTBK1",99,0)
 ;
"RTN","SCUTBK1",100,0)
 S SCOK=$$PRTP^SCAPMC8(SCIEN,"SCKDT","SCRTN","SCERRX")
"RTN","SCUTBK1",101,0)
 S SCACTV=$S(SCOK:$G(SCRTN(1),"0"),1:"0")
"RTN","SCUTBK1",102,0)
PRTPQ Q
"RTN","SCUTBK10")
0^62^B12620994
"RTN","SCUTBK10",1,0)
SCUTBK10 ;ALB/SCK - Scheduling Broker Utilities ; 11/6/95
"RTN","SCUTBK10",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCUTBK10",3,0)
 ;
"RTN","SCUTBK10",4,0)
 Q
"RTN","SCUTBK10",5,0)
 ;
"RTN","SCUTBK10",6,0)
PARSE(SC) ;
"RTN","SCUTBK10",7,0)
 S SCFILE=$G(SC("FILE"))
"RTN","SCUTBK10",8,0)
 S SCIEN=$G(SC("IEN"))
"RTN","SCUTBK10",9,0)
 S SCVAL=$G(SC("VALUE"))
"RTN","SCUTBK10",10,0)
 S SCSTATUS=$G(SC("STATUS"))
"RTN","SCUTBK10",11,0)
 S SCSUBJ=$G(SC("SUBJ"),"PCMM NOTIFICATION")
"RTN","SCUTBK10",12,0)
 S SCDATE=$G(SC("DATE"))
"RTN","SCUTBK10",13,0)
 S SCADR=$G(SC("ADDRESS"))
"RTN","SCUTBK10",14,0)
 S SCHIEN=$G(SC("HIEN"))
"RTN","SCUTBK10",15,0)
 Q
"RTN","SCUTBK10",16,0)
 ;
"RTN","SCUTBK10",17,0)
PTASGMM(SCOK,SC) ;  Send MailMan message on single patient assignment to either 
"RTN","SCUTBK10",18,0)
 ; a team or a position.
"RTN","SCUTBK10",19,0)
 ;
"RTN","SCUTBK10",20,0)
 ;   Input:   SC = BT^404.42 Ien   Sets before action for team assign.
"RTN","SCUTBK10",21,0)
 ;            SC = AT^404.42 Ien   Sets after action for team assign.
"RTN","SCUTBK10",22,0)
 ;            SC = BP^404.43 Ien  Sets before action for position assign
"RTN","SCUTBK10",23,0)
 ;            SC = BA^404.43 Ien  Sets after action for position assign 
"RTN","SCUTBK10",24,0)
 ;
"RTN","SCUTBK10",25,0)
 N SCACT,SCIEN
"RTN","SCUTBK10",26,0)
 ;
"RTN","SCUTBK10",27,0)
 D CHK^SCUTBK
"RTN","SCUTBK10",28,0)
 D TMP^SCUTBK
"RTN","SCUTBK10",29,0)
 ;
"RTN","SCUTBK10",30,0)
 S SCOK=0
"RTN","SCUTBK10",31,0)
 S SCACT=$P($G(SC),U,1)
"RTN","SCUTBK10",32,0)
 S SCIEN=$P($G(SC),U,2)
"RTN","SCUTBK10",33,0)
 G:SCACT="" PTASGNQ
"RTN","SCUTBK10",34,0)
 G:SCIEN="" PTASGNQ
"RTN","SCUTBK10",35,0)
 ;
"RTN","SCUTBK10",36,0)
 D @SCACT
"RTN","SCUTBK10",37,0)
 S SCOK=1
"RTN","SCUTBK10",38,0)
PTASGNQ Q
"RTN","SCUTBK10",39,0)
 ;
"RTN","SCUTBK10",40,0)
BT ;
"RTN","SCUTBK10",41,0)
 D BEFORETM^SCMCDD1(SCIEN)
"RTN","SCUTBK10",42,0)
 Q
"RTN","SCUTBK10",43,0)
AT ;
"RTN","SCUTBK10",44,0)
 D AFTERTM^SCMCDD1(SCIEN)
"RTN","SCUTBK10",45,0)
 Q
"RTN","SCUTBK10",46,0)
BP ;
"RTN","SCUTBK10",47,0)
 D BEFORETP^SCMCDD1(SCIEN)
"RTN","SCUTBK10",48,0)
 Q
"RTN","SCUTBK10",49,0)
AP ;
"RTN","SCUTBK10",50,0)
 D AFTERTP^SCMCDD1(SCIEN)
"RTN","SCUTBK10",51,0)
 Q
"RTN","SCUTBK10",52,0)
 ;
"RTN","SCUTBK10",53,0)
MAILC(SCOK,SC) ;   call to invoke broker to send a mailman message from the
"RTN","SCUTBK10",54,0)
 ;           client
"RTN","SCUTBK10",55,0)
 ;
"RTN","SCUTBK10",56,0)
 N SCSUBJ,SCTEXT
"RTN","SCUTBK10",57,0)
 ;
"RTN","SCUTBK10",58,0)
 D CHK^SCUTBK
"RTN","SCUTBK10",59,0)
 D TMP^SCUTBK
"RTN","SCUTBK10",60,0)
 ;
"RTN","SCUTBK10",61,0)
 S SCOK=0
"RTN","SCUTBK10",62,0)
 S SCSUBJ=$G(SC("SUBJ"),"PCMM NOTIFICATION")
"RTN","SCUTBK10",63,0)
 S SCADR=$G(SC("ADDRESS"))
"RTN","SCUTBK10",64,0)
 ;
"RTN","SCUTBK10",65,0)
 S XMDUZ=DUZ
"RTN","SCUTBK10",66,0)
 S XMSUB=SCSUBJ
"RTN","SCUTBK10",67,0)
 D XMZ^XMA2
"RTN","SCUTBK10",68,0)
 G:XMZ<1 MAILQ
"RTN","SCUTBK10",69,0)
 ;
"RTN","SCUTBK10",70,0)
 D BLDTEXT(.SC,.SCTEXT)
"RTN","SCUTBK10",71,0)
 S XMTEXT="SCTEXT("
"RTN","SCUTBK10",72,0)
 ;
"RTN","SCUTBK10",73,0)
 I $P(SCADR,U,2)="TEST" D
"RTN","SCUTBK10",74,0)
 . S XMY("G.PCM MESSAGING@DEVFEX.ISC-ALBANY.VA.GOV")=""
"RTN","SCUTBK10",75,0)
 ;
"RTN","SCUTBK10",76,0)
 I $P(SCADR,U,2)="S" D
"RTN","SCUTBK10",77,0)
 . S XMY($P(SCADR,U,1))=""
"RTN","SCUTBK10",78,0)
 ;
"RTN","SCUTBK10",79,0)
 I $D(XMY)>0 D
"RTN","SCUTBK10",80,0)
 . D ^XMD
"RTN","SCUTBK10",81,0)
 . S SCOK=XMZ
"RTN","SCUTBK10",82,0)
MAILQ Q
"RTN","SCUTBK10",83,0)
 ;
"RTN","SCUTBK10",84,0)
BLDTEXT(SCVAL,SCTXT) ;  Build the message text array from the client
"RTN","SCUTBK10",85,0)
 ;
"RTN","SCUTBK10",86,0)
 N SCLINE,CNT
"RTN","SCUTBK10",87,0)
 S SCLINE=""
"RTN","SCUTBK10",88,0)
 F  S SCLINE=$O(SCVAL(SCLINE)) Q:+SCLINE=0  D
"RTN","SCUTBK10",89,0)
 . S SCTXT(SCLINE)=SCVAL(SCLINE)
"RTN","SCUTBK10",90,0)
 Q
"RTN","SCUTBK10",91,0)
 ;
"RTN","SCUTBK10",92,0)
NEWHIST(SCOK,SC) ;  Call to invoke the broker to determine whether the date for
"RTN","SCUTBK10",93,0)
 ;          the history entry being added is valid.
"RTN","SCUTBK10",94,0)
 ;
"RTN","SCUTBK10",95,0)
 N SCFILE,SCIEN,SCDATE,SCSTATUS,SCVAL,SCERMSG
"RTN","SCUTBK10",96,0)
 D CHK^SCUTBK
"RTN","SCUTBK10",97,0)
 D TMP^SCUTBK
"RTN","SCUTBK10",98,0)
 ;
"RTN","SCUTBK10",99,0)
 S SCOK=0
"RTN","SCUTBK10",100,0)
 D PARSE(.SC)
"RTN","SCUTBK10",101,0)
 ;
"RTN","SCUTBK10",102,0)
 S SCOK=$$NEWHIST^SCMCDD(SCFILE,SCIEN,SCDATE,"SCERMSG",SCSTATUS)
"RTN","SCUTBK10",103,0)
NEWDTQ Q
"RTN","SCUTBK10",104,0)
 ;
"RTN","SCUTBK10",105,0)
NEWSTC(SCOK,SC) ;  Call to invoke the broker to determine whether the status
"RTN","SCUTBK10",106,0)
 ;          entry for the current entry is valid.
"RTN","SCUTBK10",107,0)
 ;
"RTN","SCUTBK10",108,0)
 N SCFILE,SCIEN,SCDATE,SCSTATUS,SCVAL,SCERMSG
"RTN","SCUTBK10",109,0)
 D CHK^SCUTBK
"RTN","SCUTBK10",110,0)
 D TMP^SCUTBK
"RTN","SCUTBK10",111,0)
 ;
"RTN","SCUTBK10",112,0)
 S SCOK=0
"RTN","SCUTBK10",113,0)
 D PARSE(.SC)
"RTN","SCUTBK10",114,0)
 ;
"RTN","SCUTBK10",115,0)
 S SCOK=$$NEWHIST^SCMCDD(SCFILE,SCIEN,SCDATE,"SCERMSG",SCSTATUS)
"RTN","SCUTBK10",116,0)
NEWSTQ Q
"RTN","SCUTBK10",117,0)
 ;
"RTN","SCUTBK10",118,0)
DELDTC(SCOK,SC) ;  Call to invoke the broker to see if the history entry can
"RTN","SCUTBK10",119,0)
 ;          be deleted.
"RTN","SCUTBK10",120,0)
 ;
"RTN","SCUTBK10",121,0)
 N SCFILE,SCHIEN,SCERMSG
"RTN","SCUTBK10",122,0)
 D CHK^SCUTBK
"RTN","SCUTBK10",123,0)
 D TMP^SCUTBK
"RTN","SCUTBK10",124,0)
 ;
"RTN","SCUTBK10",125,0)
 S SCOK=0
"RTN","SCUTBK10",126,0)
 D PARSE(.SC)
"RTN","SCUTBK10",127,0)
 ;
"RTN","SCUTBK10",128,0)
 S SCOK=$$OKDEL^SCMCDD(SCFILE,SCHIEN,"SCERMSG")
"RTN","SCUTBK10",129,0)
DELDTQ Q
"RTN","SCUTBK10",130,0)
 ;
"RTN","SCUTBK10",131,0)
INACTC(SCOK,SC) ;   Call to invoke the broker to see if the history entry can
"RTN","SCUTBK10",132,0)
 ;           be inactivated.
"RTN","SCUTBK10",133,0)
 ;
"RTN","SCUTBK10",134,0)
 N SCFILE,SCIEN,SCDATE
"RTN","SCUTBK10",135,0)
 D CHK^SCUTBK
"RTN","SCUTBK10",136,0)
 D TMP^SCUTBK
"RTN","SCUTBK10",137,0)
 ;
"RTN","SCUTBK10",138,0)
 S SCOK=0
"RTN","SCUTBK10",139,0)
 D PARSE(.SC)
"RTN","SCUTBK10",140,0)
 ;
"RTN","SCUTBK10",141,0)
 S SCOK=$$OKINACT^SCMCDD(SCFILE,SCIEN,SCDATE,"SCERMSG")
"RTN","SCUTBK10",142,0)
INACTQ Q
"RTN","SCUTBK10",143,0)
 ;
"RTN","SCUTBK10",144,0)
CHGDTC(SCOK,SC) ;  Call to see if the date change for the history entry is 
"RTN","SCUTBK10",145,0)
 ;          valid.
"RTN","SCUTBK10",146,0)
 ;
"RTN","SCUTBK10",147,0)
 N SCFILE,SCIEN,SCDATE,SCERMSG
"RTN","SCUTBK10",148,0)
 D CHK^SCUTBK
"RTN","SCUTBK10",149,0)
 D TMP^SCUTBK
"RTN","SCUTBK10",150,0)
 ;
"RTN","SCUTBK10",151,0)
 S SCOK=0
"RTN","SCUTBK10",152,0)
 D PARSE(.SC)
"RTN","SCUTBK10",153,0)
 ;
"RTN","SCUTBK10",154,0)
 S SCOK=$$OKCHGDT^SCMCDD(SCFILE,SCHIEN,SCDATE,"SCERMSG")
"RTN","SCUTBK10",155,0)
CHGDTQ Q
"RTN","SCUTBK10",156,0)
 ;
"RTN","SCUTBK10",157,0)
MNTEST(SCOK,SC) ;
"RTN","SCUTBK10",158,0)
 D CHK^SCUTBK
"RTN","SCUTBK10",159,0)
 D TMP^SCUTBK
"RTN","SCUTBK10",160,0)
 ;
"RTN","SCUTBK10",161,0)
 S SCOK=$$LST^DGMTU(SC)
"RTN","SCUTBK10",162,0)
 Q
"RTN","SCUTBK10",163,0)
 ;
"RTN","SCUTBK11")
0^79^B15282530
"RTN","SCUTBK11",1,0)
SCUTBK11 ;ALB/SCK - Scheduling Broker Utilities; 2/2/96
"RTN","SCUTBK11",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCUTBK11",3,0)
 ;;1T1;
"RTN","SCUTBK11",4,0)
 ;
"RTN","SCUTBK11",5,0)
 Q
"RTN","SCUTBK11",6,0)
PARSE(SC) ;
"RTN","SCUTBK11",7,0)
 S SCDFN=$G(SC("DFN"),"")
"RTN","SCUTBK11",8,0)
 S SCPIEN=$G(SC("PIEN"),"")
"RTN","SCUTBK11",9,0)
 S:$D(SC("TEAM")) SCTM=$G(SC("TEAM"))
"RTN","SCUTBK11",10,0)
 S:$D(SC("BEGIN")) SCDT("BEGIN")=$G(SC("BEGIN"))
"RTN","SCUTBK11",11,0)
 S:$D(SC("END")) SCDT("END")=$G(SC("END"))
"RTN","SCUTBK11",12,0)
 I $D(SC("END")) S SCDT("INCL")=0
"RTN","SCUTBK11",13,0)
 S SCFILE=$G(SC("FILE"))
"RTN","SCUTBK11",14,0)
 S SCIEN=$G(SC("IEN"))
"RTN","SCUTBK11",15,0)
 S SCFIELD=$G(SC("FIELD"))
"RTN","SCUTBK11",16,0)
 S SCVAL=$G(SC("VALUE"))
"RTN","SCUTBK11",17,0)
 Q
"RTN","SCUTBK11",18,0)
 ;
"RTN","SCUTBK11",19,0)
TMLST(SCDATA,SC) ;
"RTN","SCUTBK11",20,0)
 ;  -- Return a list of teams for a patient.  Pass in the DFN and
"RTN","SCUTBK11",21,0)
 ;     optionally a date range and/or a team purpose to restrict the
"RTN","SCUTBK11",22,0)
 ;     team look up.  Return only the team entry, strip out any other
"RTN","SCUTBK11",23,0)
 ;     array items.
"RTN","SCUTBK11",24,0)
 ;
"RTN","SCUTBK11",25,0)
 N DFN,SCDT,SCPURP,SCLIST,SCER1,SCOK,SCD
"RTN","SCUTBK11",26,0)
 ;
"RTN","SCUTBK11",27,0)
 D CHK^SCUTBK
"RTN","SCUTBK11",28,0)
 D TMP^SCUTBK
"RTN","SCUTBK11",29,0)
 ;
"RTN","SCUTBK11",30,0)
 S DFN=$G(SC("DFN"))
"RTN","SCUTBK11",31,0)
 S SCDT("BEGIN")=$G(SC("BEGIN"),"")
"RTN","SCUTBK11",32,0)
 I $L(SCDT("BEGIN"))>2 S SCDT("INCL")=$G(SC("INCL"),0)
"RTN","SCUTBK11",33,0)
 S SCDT("END")=$G(SC("END"),"")
"RTN","SCUTBK11",34,0)
 S SCPURP=$G(SC("PURP"),"")
"RTN","SCUTBK11",35,0)
 ;
"RTN","SCUTBK11",36,0)
 S SCOK=$$TMPT^SCAPMC3(DFN,"SCDT","","SCD","SCER1")
"RTN","SCUTBK11",37,0)
 ;
"RTN","SCUTBK11",38,0)
 S I=0 F  S I=$O(SCD(I)) Q:'I  S SCDATA(I)=SCD(I)
"RTN","SCUTBK11",39,0)
TMQ Q
"RTN","SCUTBK11",40,0)
 ;
"RTN","SCUTBK11",41,0)
FINDP(SCDATA,SC) ;
"RTN","SCUTBK11",42,0)
 ;  -- Patient look
"RTN","SCUTBK11",43,0)
 ;     Return the patient's DFN,
"RTN","SCUTBK11",44,0)
 ;     name, and and any other requested fields.
"RTN","SCUTBK11",45,0)
 ;
"RTN","SCUTBK11",46,0)
 ;     Pass in:  Lookup value, file#, fields to return, and flags.
"RTN","SCUTBK11",47,0)
 ;     Lookup can be partial name, W123, or partial SSN
"RTN","SCUTBK11",48,0)
 ;
"RTN","SCUTBK11",49,0)
 N SCFILE,SCFIELDS,SCVAL,SCLIST,I,SCXREF,SCER1,SCP,SCP1,SCP2,SCP3
"RTN","SCUTBK11",50,0)
 D CHK^SCUTBK
"RTN","SCUTBK11",51,0)
 D TMP^SCUTBK
"RTN","SCUTBK11",52,0)
 ;
"RTN","SCUTBK11",53,0)
 S SCFIELDS=$G(SC("FIELDS"))
"RTN","SCUTBK11",54,0)
 S SCVAL=$G(SC("VALUE"))
"RTN","SCUTBK11",55,0)
 ;
"RTN","SCUTBK11",56,0)
 D FIND^DIC(2,"",".01;.03;.09","M",SCVAL,"","","","","SCLIST","SCER1")
"RTN","SCUTBK11",57,0)
 ;
"RTN","SCUTBK11",58,0)
 S I="" F  S I=$O(SCLIST("DILIST",2,I)) Q:I=""  D
"RTN","SCUTBK11",59,0)
 . S SCP=$G(SCLIST("DILIST",2,I),"")
"RTN","SCUTBK11",60,0)
 . S SCP1=$G(SCLIST("DILIST",1,I),"")
"RTN","SCUTBK11",61,0)
 . S SCP2=$G(SCLIST("DILIST","ID",I,.03),"")
"RTN","SCUTBK11",62,0)
 . S SCP3=$G(SCLIST("DILIST","ID",I,.09),"")
"RTN","SCUTBK11",63,0)
 . S SCDATA(I)=SCP_U_SCP1_U_SCP2_U_SCP3
"RTN","SCUTBK11",64,0)
 Q
"RTN","SCUTBK11",65,0)
PSLST(SCDATA,SC) ;
"RTN","SCUTBK11",66,0)
 ;
"RTN","SCUTBK11",67,0)
 ;  - Returns a array of positions that show the person currently
"RTN","SCUTBK11",68,0)
 ;    assigned to the position, the preceptor for that position,
"RTN","SCUTBK11",69,0)
 ;    for the patient is assigned to.
"RTN","SCUTBK11",70,0)
 ;
"RTN","SCUTBK11",71,0)
 ;    Pass in the Patient's DFN
"RTN","SCUTBK11",72,0)
 ;    To restrict to specific entries, pass in the following:
"RTN","SCUTBK11",73,0)
 ;      Beginning and Ending Date Range 
"RTN","SCUTBK11",74,0)
 ;      A specific Team Position
"RTN","SCUTBK11",75,0)
 ;      A Specific User entry (8930)
"RTN","SCUTBK11",76,0)
 ;      A specific Team Purpose.  (Read SCAPMC23 for how it exclude
"RTN","SCUTBK11",77,0)
 ;        a specific team purpose.
"RTN","SCUTBK11",78,0)
 ;      A specific role
"RTN","SCUTBK11",79,0)
 ;      Flag whether to include patients associated by enrollement
"RTN","SCUTBK11",80,0)
 ;    
"RTN","SCUTBK11",81,0)
 N SCDT,SCD,SCER1,SCDFN,SCPRP,SCPST,SCRLE,SCIND,SCUSR,SCTM,SCDTE
"RTN","SCUTBK11",82,0)
 ;
"RTN","SCUTBK11",83,0)
 D CHK^SCUTBK
"RTN","SCUTBK11",84,0)
 D TMP^SCUTBK
"RTN","SCUTBK11",85,0)
 ;
"RTN","SCUTBK11",86,0)
 D PARSE(.SC)
"RTN","SCUTBK11",87,0)
 S SCDTE=$G(SCDT("BEGIN"))
"RTN","SCUTBK11",88,0)
 ;
"RTN","SCUTBK11",89,0)
 S CNT=0
"RTN","SCUTBK11",90,0)
 K ^TMP($J,"PSLST")
"RTN","SCUTBK11",91,0)
 S SCOK=$$TPPT^SCAPMC(SCDFN,.SCDT,"","","","","","SCD","SCER1")
"RTN","SCUTBK11",92,0)
 S I=0 F  S I=$O(SCD(I)) Q:'I  D
"RTN","SCUTBK11",93,0)
 . I $D(SCTM) D
"RTN","SCUTBK11",94,0)
 .. Q:$P(SCD(I),U,3)'=SCTM
"RTN","SCUTBK11",95,0)
 .. S ^TMP($J,"PSLST",I)=$P($G(SCD(I)),U,3)_U_$P($G(SCD(I)),U,4)_U_$P($G(SCD(I)),U,1,2)_U_$P($G(SCD(I)),U,7,8)
"RTN","SCUTBK11",96,0)
 . ;
"RTN","SCUTBK11",97,0)
 . I '$D(SCTM) D
"RTN","SCUTBK11",98,0)
 .. S ^TMP($J,"PSLST",I)=$P($G(SCD(I)),U,3)_U_$P($G(SCD(I)),U,4)_U_$P($G(SCD(I)),U,1,2)_U_$P($G(SCD(I)),U,7,8)
"RTN","SCUTBK11",99,0)
 ;
"RTN","SCUTBK11",100,0)
 S CNT=0
"RTN","SCUTBK11",101,0)
 S I=""
"RTN","SCUTBK11",102,0)
 F  S I=$O(^TMP($J,"PSLST",I)) Q:'I  D
"RTN","SCUTBK11",103,0)
 . S:'$D(SCDTE) SCDTE=DT
"RTN","SCUTBK11",104,0)
 . S SCPIEN=$P($G(^TMP($J,"PSLST",I)),U,3)
"RTN","SCUTBK11",105,0)
 . S SCDATA(CNT)=^TMP($J,"PSLST",I)_U_$$PSMBR(SCPIEN,SCDTE)_U_+$P($G(^SCPT(404.43,$P($G(^TMP($J,"PSLST",I)),U,2),0)),U,5)_U_+$P($G(^SCTM(404.57,SCPIEN,0)),U,4)
"RTN","SCUTBK11",106,0)
 . S CNT=CNT+1
"RTN","SCUTBK11",107,0)
 K ^TMP($J,"PSLST")
"RTN","SCUTBK11",108,0)
 ;
"RTN","SCUTBK11",109,0)
PSLTQ Q
"RTN","SCUTBK11",110,0)
 ;
"RTN","SCUTBK11",111,0)
PSMBR(SCPIEN,SCPDT) ;
"RTN","SCUTBK11",112,0)
 ;
"RTN","SCUTBK11",113,0)
 N SCPRCP,SCMBR,SCPP
"RTN","SCUTBK11",114,0)
 ;
"RTN","SCUTBK11",115,0)
 S SCMBR=$$GETPRTP^SCAPMCU2(SCPIEN,SCPDT)
"RTN","SCUTBK11",116,0)
 ;
"RTN","SCUTBK11",117,0)
 S SCPP=+$P($G(^SCTM(404.57,SCPIEN,0)),U,10)
"RTN","SCUTBK11",118,0)
 S SCPRCP=$S(SCPP>0:$$GETPRTP^SCAPMCU2(SCPP,SCPDT),1:"^")
"RTN","SCUTBK11",119,0)
 Q SCMBR_U_SCPRCP
"RTN","SCUTBK11",120,0)
 ;
"RTN","SCUTBK11",121,0)
VFILE(SCOK,SC) ;
"RTN","SCUTBK11",122,0)
 N SCFILE,SCIEN,SCFIELD,SCVAL,SCFDA,SCMSG
"RTN","SCUTBK11",123,0)
 ;
"RTN","SCUTBK11",124,0)
 D CHK^SCUTBK
"RTN","SCUTBK11",125,0)
 D TMP^SCUTBK
"RTN","SCUTBK11",126,0)
 ;
"RTN","SCUTBK11",127,0)
 S SCOK=1
"RTN","SCUTBK11",128,0)
 D PARSE(.SC)
"RTN","SCUTBK11",129,0)
 S SCFDA(SCFILE,""_SCIEN_","_"",SCFIELD)=SCVAL
"RTN","SCUTBK11",130,0)
 ;
"RTN","SCUTBK11",131,0)
 D FILE^DIE("K","SCFDA","SCMSG")
"RTN","SCUTBK11",132,0)
 ;
"RTN","SCUTBK11",133,0)
 I $D(SCMSG("DIERR")) D
"RTN","SCUTBK11",134,0)
 . S SCOK=0
"RTN","SCUTBK11",135,0)
 Q
"RTN","SCUTBK11",136,0)
 ;
"RTN","SCUTBK11",137,0)
SECKEY(SCOK,SCKEY) ;
"RTN","SCUTBK11",138,0)
 ;
"RTN","SCUTBK11",139,0)
 D CHK^SCUTBK
"RTN","SCUTBK11",140,0)
 ;
"RTN","SCUTBK11",141,0)
 S SCOK=$D(^XUSEC(SCKEY,DUZ))
"RTN","SCUTBK11",142,0)
 Q
"RTN","SCUTBK12")
0^98^B1642857
"RTN","SCUTBK12",1,0)
SCUTBK12 ;ALB/SCK - Staff Assignment lookup broker call ; 3/21/96
"RTN","SCUTBK12",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCUTBK12",3,0)
 ;
"RTN","SCUTBK12",4,0)
 Q
"RTN","SCUTBK12",5,0)
 ;
"RTN","SCUTBK12",6,0)
STAFFLK(SCDATA,SC) ;
"RTN","SCUTBK12",7,0)
 ;
"RTN","SCUTBK12",8,0)
 N SCUSR,SCVAL,SCREEN,SCINST,SCOK
"RTN","SCUTBK12",9,0)
 D CHK^SCUTBK
"RTN","SCUTBK12",10,0)
 D TMP^SCUTBK
"RTN","SCUTBK12",11,0)
 ;
"RTN","SCUTBK12",12,0)
 S SCINST=$G(SC("USRCOK"),"")
"RTN","SCUTBK12",13,0)
 S SCUSR=$G(SC("USRCLASS"),"")
"RTN","SCUTBK12",14,0)
 S SCVAL=$G(SC("VALUE"),"")
"RTN","SCUTBK12",15,0)
 S SCREEN=$G(SC("SCREEN"),"")
"RTN","SCUTBK12",16,0)
 ;
"RTN","SCUTBK12",17,0)
 IF SCVAL="?"&(SCINST) D  G STAFQ
"RTN","SCUTBK12",18,0)
 . D WHOIS2^USRLM("SCRTN",SCUSR)
"RTN","SCUTBK12",19,0)
 . M SCDATA=SCRTN
"RTN","SCUTBK12",20,0)
 . S SCDATA(0)="[Data]"
"RTN","SCUTBK12",21,0)
 ;
"RTN","SCUTBK12",22,0)
 D URSLKUP^SCMCPR1(.SCDATA,SCUSR,SCVAL,SCREEN,SCINST)
"RTN","SCUTBK12",23,0)
 ;
"RTN","SCUTBK12",24,0)
STAFQ ;
"RTN","SCUTBK12",25,0)
 Q
"RTN","SCUTBK12",26,0)
 ;
"RTN","SCUTBK12",27,0)
CHKUSR(SCOK,SCVAL) ;
"RTN","SCUTBK12",28,0)
 S SCOK=$G(^SD(404.91,SCVAL,"PCMM"))
"RTN","SCUTBK12",29,0)
 Q
"RTN","SCUTBK12",30,0)
 ;
"RTN","SCUTBK12",31,0)
GETPC(SCDATA,SC) ;
"RTN","SCUTBK12",32,0)
 ;
"RTN","SCUTBK12",33,0)
 N SCDFN,SCDATE,SCROLE,SCAST
"RTN","SCUTBK12",34,0)
 D CHK^SCUTBK
"RTN","SCUTBK12",35,0)
 D TMP^SCUTBK
"RTN","SCUTBK12",36,0)
 ;
"RTN","SCUTBK12",37,0)
 S SCDFN=$G(SC("DFN"),"")
"RTN","SCUTBK12",38,0)
 S SCDATE=$G(SC("DATE"),DT)
"RTN","SCUTBK12",39,0)
 S SCROLE=$G(SC("ROLE"),1)
"RTN","SCUTBK12",40,0)
 S SCAST=$G(SC("AST"),1)
"RTN","SCUTBK12",41,0)
 ;
"RTN","SCUTBK12",42,0)
 S SCDATA=$$GETPC^SCAPMCU2(SCDFN,SCDATE,SCROLE,SCAST)
"RTN","SCUTBK12",43,0)
 Q
"RTN","SCUTBK2")
0^80^B4302782
"RTN","SCUTBK2",1,0)
SCUTBK2 ;ALB/MJK - Scheduling Broker Utilities ;[ 03/07/95  10:02 AM ]
"RTN","SCUTBK2",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCUTBK2",3,0)
 ;
"RTN","SCUTBK2",4,0)
 Q
"RTN","SCUTBK2",5,0)
 ;
"RTN","SCUTBK2",6,0)
FINDC(SCDATA,SC) ; -- broker callback to actually use FIND^DIC
"RTN","SCUTBK2",7,0)
 N SCFILE,SCIENS,SCFIELDS,SCFLAGS,SCFROM,SCPART,SCVAL,SCMAX,SCXREF,SCREEN,SCID,SCROOT,SCDILIST
"RTN","SCUTBK2",8,0)
 D CHK^SCUTBK
"RTN","SCUTBK2",9,0)
 ;
"RTN","SCUTBK2",10,0)
 ; -- parse array to parameters
"RTN","SCUTBK2",11,0)
 D PARSE^SCUTBK(.SC)
"RTN","SCUTBK2",12,0)
 D TMP^SCUTBK
"RTN","SCUTBK2",13,0)
 ;
"RTN","SCUTBK2",14,0)
 D FIND^DIC(SCFILE,SCIENS,SCFIELDS,SCFLAGS,SCVAL,SCMAX,SCXREF,SCREEN,SCID,"SCDATA")
"RTN","SCUTBK2",15,0)
 ;
"RTN","SCUTBK2",16,0)
 Q
"RTN","SCUTBK2",17,0)
 ;
"RTN","SCUTBK2",18,0)
GETSC(SCDATA,SC) ;  -- broker callback to actually use GETS^DIQ
"RTN","SCUTBK2",19,0)
 ;
"RTN","SCUTBK2",20,0)
 N SCFILE,SCIENS,SCFIELDS,SCFLAGS,SCFROM,SCPART,SCVAL,SCMAX,SCXREF,SCREEN,SCID,SCROOT,SCERR
"RTN","SCUTBK2",21,0)
 D CHK^SCUTBK
"RTN","SCUTBK2",22,0)
 ;
"RTN","SCUTBK2",23,0)
 ; -- parse array to parameters
"RTN","SCUTBK2",24,0)
 D PARSE^SCUTBK(.SC)
"RTN","SCUTBK2",25,0)
 D TMP^SCUTBK
"RTN","SCUTBK2",26,0)
 ;
"RTN","SCUTBK2",27,0)
 D GETS^DIQ(SCFILE,SCIENS,SCFIELDS,SCFLAGS,"SCDATA","SCERR")
"RTN","SCUTBK2",28,0)
 ;
"RTN","SCUTBK2",29,0)
 N Y,SCFLD,N,X,J,C
"RTN","SCUTBK2",30,0)
 S N=0
"RTN","SCUTBK2",31,0)
 D SET("[Data]")
"RTN","SCUTBK2",32,0)
 S SCFLD=0 F  S SCFLD=$O(SCDATA(SCFILE,SCIENS,SCFLD)) Q:'SCFLD  D
"RTN","SCUTBK2",33,0)
 . S X=SCFILE_"^"_$E(SCIENS,1,$L(SCIENS)-1)_"^"_SCFLD_"^"
"RTN","SCUTBK2",34,0)
 . ; -- below call to $$GET1 is too slow...working w/FM team for speed
"RTN","SCUTBK2",35,0)
 . ;IF $$GET1^DID(SCFILE,SCFLD,"","TYPE")="WORD-PROCESSING" D
"RTN","SCUTBK2",36,0)
 . IF $P($G(^DD(SCFILE,SCFLD,0)),U,4)[";0" D
"RTN","SCUTBK2",37,0)
 . . D SET(X_"[WORD PROCESSING]")
"RTN","SCUTBK2",38,0)
 . . S J=0 F  S J=$O(SCDATA(SCFILE,SCIENS,SCFLD,J)) Q:'J  D
"RTN","SCUTBK2",39,0)
 . . . D SET(SCDATA(SCFILE,SCIENS,SCFLD,J))
"RTN","SCUTBK2",40,0)
 . . D SET("$$END$$")
"RTN","SCUTBK2",41,0)
 . E  D
"RTN","SCUTBK2",42,0)
 . . D SET(X_$G(SCDATA(SCFILE,SCIENS,SCFLD,"I"))_"^"_$G(SCDATA(SCFILE,SCIENS,SCFLD,"E")))
"RTN","SCUTBK2",43,0)
 ;
"RTN","SCUTBK2",44,0)
 IF $D(SCERR) D
"RTN","SCUTBK2",45,0)
 . D SET("[ERROR]")
"RTN","SCUTBK2",46,0)
 ;
"RTN","SCUTBK2",47,0)
 K SCDATA M SCDATA=Y
"RTN","SCUTBK2",48,0)
 Q
"RTN","SCUTBK2",49,0)
 ;
"RTN","SCUTBK2",50,0)
SET(X) ;
"RTN","SCUTBK2",51,0)
 S N=N+1
"RTN","SCUTBK2",52,0)
 S Y(N)=X
"RTN","SCUTBK2",53,0)
 Q
"RTN","SCUTBK2",54,0)
 ;
"RTN","SCUTBK3")
0^134^B6340427
"RTN","SCUTBK3",1,0)
SCUTBK3 ;MJK/ALB - RPC Broker Utilities ; 27 FEB 96
"RTN","SCUTBK3",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SCUTBK3",3,0)
 ;
"RTN","SCUTBK3",4,0)
GETUSER(SCDATA,SCDUZ) ; -- get user data
"RTN","SCUTBK3",5,0)
 ;
"RTN","SCUTBK3",6,0)
 ; input:                 SCDUZ -> user's id (DUZ)
"RTN","SCUTBK3",7,0)
 ;output: for success SCDATA(0) -> duz ^ name ^ default query id
"RTN","SCUTBK3",8,0)
 ;        for failure SCDATA(0) -> 0 ^ <number of errors>
"RTN","SCUTBK3",9,0)
 ;                      (1...n) -> error text
"RTN","SCUTBK3",10,0)
 ;
"RTN","SCUTBK3",11,0)
 ; Related RPC: SCUT GET USER RECORD
"RTN","SCUTBK3",12,0)
 ;
"RTN","SCUTBK3",13,0)
 N X,DIERR,SCPARM
"RTN","SCUTBK3",14,0)
 IF SCDUZ="CURRENT USER" S SCDUZ=+$G(DUZ)
"RTN","SCUTBK3",15,0)
 S X=$G(^VA(200,+SCDUZ,0))
"RTN","SCUTBK3",16,0)
 IF X]"" D
"RTN","SCUTBK3",17,0)
 . N Y
"RTN","SCUTBK3",18,0)
 . S SCDATA(0)=+SCDUZ_U_$P(X,U)_U_$$DEFAULT(SCDUZ)
"RTN","SCUTBK3",19,0)
 . D GETENV^%ZOSV
"RTN","SCUTBK3",20,0)
 . S SCDATA(0)=SCDATA(0)_U_Y
"RTN","SCUTBK3",21,0)
 ELSE  D
"RTN","SCUTBK3",22,0)
 . S SCPARM("USER ID")=SCDUZ
"RTN","SCUTBK3",23,0)
 . D BLD^DIALOG(4030005.001,.SCPARM,"","SCDATA","S")
"RTN","SCUTBK3",24,0)
 . D HDREC(.SCDATA,$G(DIERR),"Scheduling User Data Retrieval")
"RTN","SCUTBK3",25,0)
 Q
"RTN","SCUTBK3",26,0)
 ;
"RTN","SCUTBK3",27,0)
DEFAULT(SCDUZ) ; -- get default query for user
"RTN","SCUTBK3",28,0)
 N X
"RTN","SCUTBK3",29,0)
 S X=+$P($G(^SCRS(403.35,+SCDUZ,"PCMM")),U,15)
"RTN","SCUTBK3",30,0)
 IF 'X S X=+$O(^SD(404.95,"B","System Default",0))
"RTN","SCUTBK3",31,0)
 S X=X_U_$P($G(^SD(404.95,+X,0),"Unknown"),U)
"RTN","SCUTBK3",32,0)
 Q X
"RTN","SCUTBK3",33,0)
 ;
"RTN","SCUTBK3",34,0)
SETDEF(SCDATA,SCDUZ,SCQRY) ; -- set user's default query
"RTN","SCUTBK3",35,0)
 ; input:                 SCDUZ -> user's id (DUZ)
"RTN","SCUTBK3",36,0)
 ;                        SCQRY ->query ien
"RTN","SCUTBK3",37,0)
 ;output: for success SCDATA(0) -> 1
"RTN","SCUTBK3",38,0)
 ;        for failure SCDATA(0) -> 0 ^ <number of errors>
"RTN","SCUTBK3",39,0)
 ;                      (1...n) -> error text
"RTN","SCUTBK3",40,0)
 ;
"RTN","SCUTBK3",41,0)
 ;
"RTN","SCUTBK3",42,0)
 ; Related RPC: SCUT SET USER QUERY DEFAULT
"RTN","SCUTBK3",43,0)
 ;
"RTN","SCUTBK3",44,0)
 N SCVAL,SCFDA,SCIENS,SCERR,DIERR,SCPROC
"RTN","SCUTBK3",45,0)
 S SCPROC="Setting User Query Default"
"RTN","SCUTBK3",46,0)
 S SCFDA="SCFDA",SCIENS="SCIENS",SCERR="SCERR"
"RTN","SCUTBK3",47,0)
 ; -- make sure user has param rec
"RTN","SCUTBK3",48,0)
 IF '$D(^SCRS(403.35,+SCDUZ,0)) D  G:$O(SCDATA(0)) SETDEFQ
"RTN","SCUTBK3",49,0)
 . D FDA^DILF(403.35,"+1,",.01,"",+SCDUZ,SCFDA,SCERR)
"RTN","SCUTBK3",50,0)
 . S SCIENS(1)=+SCDUZ
"RTN","SCUTBK3",51,0)
 . D UPDATE^DIE("",SCFDA,SCIENS,SCERR)
"RTN","SCUTBK3",52,0)
 . D ERRCHK(.SCDATA,.SCERR,SCPROC)
"RTN","SCUTBK3",53,0)
 ;
"RTN","SCUTBK3",54,0)
 ; -- set default
"RTN","SCUTBK3",55,0)
 K SCFDA,SCIENS,SCERR,SCVAL
"RTN","SCUTBK3",56,0)
 S SCFDA="SCFDA",SCIENS="SCIENS",SCERR="SCERR"
"RTN","SCUTBK3",57,0)
 S SCVAL=$S(SCQRY:SCQRY,1:"@")
"RTN","SCUTBK3",58,0)
 D FDA^DILF(403.35,+SCDUZ_",",1.15,"",SCVAL,SCFDA,SCERR)
"RTN","SCUTBK3",59,0)
 D FILE^DIE("K",SCFDA,SCERR)
"RTN","SCUTBK3",60,0)
 D ERRCHK(.SCDATA,.SCERR,"Setting User Query Default")
"RTN","SCUTBK3",61,0)
SETDEFQ Q
"RTN","SCUTBK3",62,0)
 ;
"RTN","SCUTBK3",63,0)
 ;
"RTN","SCUTBK3",64,0)
 ; >>>> Error Processing Utilities <<<<
"RTN","SCUTBK3",65,0)
 ;
"RTN","SCUTBK3",66,0)
HDREC(SCDATA,SCER,SCPROC) ; -- build zeroth of SCDATA array
"RTN","SCUTBK3",67,0)
 IF SCER D
"RTN","SCUTBK3",68,0)
 . S SCDATA(0)=0_U_+SCER_U
"RTN","SCUTBK3",69,0)
 . D SETPROC(.SCDATA,.SCPROC)
"RTN","SCUTBK3",70,0)
 ELSE  D
"RTN","SCUTBK3",71,0)
 . S SCDATA(0)=1_U_U ; no errors
"RTN","SCUTBK3",72,0)
 Q
"RTN","SCUTBK3",73,0)
 ;
"RTN","SCUTBK3",74,0)
SETPROC(SCDATA,SCPROC) ; -- set process name for error list
"RTN","SCUTBK3",75,0)
 S $P(SCDATA(0),U,3)=SCPROC
"RTN","SCUTBK3",76,0)
 Q
"RTN","SCUTBK3",77,0)
 ;
"RTN","SCUTBK3",78,0)
ERRCHK(SCDATA,SCERR,SCPROC) ; -- process fileman dbs errors
"RTN","SCUTBK3",79,0)
 N SCERS
"RTN","SCUTBK3",80,0)
 S SCERS=$G(SCERR("DIERR"))
"RTN","SCUTBK3",81,0)
 IF SCERS D MSG^DIALOG("EA",.SCDATA,"","",SCERR)
"RTN","SCUTBK3",82,0)
 D HDREC(.SCDATA,SCERS,SCPROC)
"RTN","SCUTBK3",83,0)
 Q
"RTN","SCUTBK3",84,0)
 ;
"RTN","SDAPP")
0^99^B7896600
"RTN","SDAPP",1,0)
SDAPP ;ALB/TMP - SCHEDULING  CHART REQUEST ; 07 SEP 84  4:17 pm
"RTN","SDAPP",2,0)
 ;;5.3;Scheduling;**21,32,41**;AUG 13, 1993
"RTN","SDAPP",3,0)
4 ;;Chart Request
"RTN","SDAPP",4,0)
 S:'$D(DTIME) DTIME=300 I '$D(DT) D DT^SDUTL
"RTN","SDAPP",5,0)
 S (DIC,DIE)="^SC(",DIC(0)="AQME",DIC("S")="I $P(^(0),""^"",3)=""C""",DIC("A")="SELECT CLINIC NAME: " D ^DIC K DIC("A"),DIC("S") Q:+Y<0  S SDIN=$S($D(^SC(+Y,"I")):1,1:""),SDRE="" I SDIN S SDIN=+^("I"),SDRE=+$P(^("I"),"^",2)
"RTN","SDAPP",6,0)
 I SDIN,SDIN'>DT,'SDRE S D0=+Y D WRT1 Q
"RTN","SDAPP",7,0)
 S DA=+Y,DR=1906,DR(2,44.006)=".01;S Y=2 I $S('$D(^SC(D0,""I"")):0,+^(""I"")'>0:0,+^(""I"")>X:0,+$P(^(""I""),U,2)'>X&(+$P(^(""I""),U,2)'=0):0,1:1) K ^SC(D0,""C"",D1) S Y="""" D WRT1^SDAPP;2" G ^DIE
"RTN","SDAPP",8,0)
 Q
"RTN","SDAPP",9,0)
19 ;;Edit Clinic Enrollment Data
"RTN","SDAPP",10,0)
 ; SCRESTA = Array of pt's teams causing restricted consults
"RTN","SDAPP",11,0)
 N SCRESTA,SCABORT
"RTN","SDAPP",12,0)
 S DIC="^DPT(",DIC(0)="AEMQF" D ^DIC Q:"^"[X  G:Y<0 19
"RTN","SDAPP",13,0)
 S DFN=+Y
"RTN","SDAPP",14,0)
 S SCREST=$$RESTPT^SCAPMCU4(.DFN,DT,"SCRESTA")
"RTN","SDAPP",15,0)
 IF SCREST D  Q:$G(SCABORT)
"RTN","SDAPP",16,0)
 .N SCTM
"RTN","SDAPP",17,0)
 . W !,?5,"Patient has restricted consults due to the following team assignment(s):"
"RTN","SDAPP",18,0)
 .S SCTM=0
"RTN","SDAPP",19,0)
 .F  S SCTM=$O(SCRESTA(SCTM)) Q:'SCTM  W !,?10,SCRESTA(SCTM)
"RTN","SDAPP",20,0)
 .IF $D(^XUSEC("SC CONSULT",DUZ)) D
"RTN","SDAPP",21,0)
 ..W !!,?10,"Team Members will be notified of new enrollments"
"RTN","SDAPP",22,0)
 .ELSE  D
"RTN","SDAPP",23,0)
 ..W !!,?10,"You need the SC CONSULT key to do enrollments for this patient"
"RTN","SDAPP",24,0)
 ..S SCABORT=1
"RTN","SDAPP",25,0)
 D BEFORE^SCMCEV3(DFN)
"RTN","SDAPP",26,0)
 S DA=+Y,DIE=DIC,DR="3",DR(2,2.001)="1",DR(3,2.011)=".01;1;5;3;4" D ^DIE
"RTN","SDAPP",27,0)
 D AFTER^SCMCEV3(DFN)
"RTN","SDAPP",28,0)
 D INVOKE^SCMCEV3(DFN)
"RTN","SDAPP",29,0)
 G 19
"RTN","SDAPP",30,0)
20 ;;Additional Non-Vet Elig Status
"RTN","SDAPP",31,0)
 S DIC="^DPT(",DIC(0)="AEMQF" D ^DIC Q:"^"[X  G:Y'>0 20
"RTN","SDAPP",32,0)
 I $S('$D(^DPT(+Y,"VET")):1,^("VET")'="Y":1,1:0) W !,*7,"Patient must be a veteran!!" G 20
"RTN","SDAPP",33,0)
 S DIE=DIC,DA=+Y,DR=".099" D ^DIE K DIE,DIC,DR
"RTN","SDAPP",34,0)
 G 20
"RTN","SDAPP",35,0)
WRT1 S SDY=Y,SDI=+^SC(D0,"I"),SDI1=+$P(^("I"),U,2) W *7,!,"Clinic is inactive ",$S(SDI1'=0:"from ",1:"as of ") S Y=SDI D DTS^SDUTL W Y S Y=SDI1 D:Y DTS^SDUTL W $S(SDI1=0:"",1:" to "_Y) S Y=SDY K SDY,SDI,SDI1 Q
"RTN","SDCD")
0^100^B9139637
"RTN","SDCD",1,0)
SDCD ;BSN/GRR - DISCHARGE PATIENT FROM CLINIC ;3/15/91  11:24 ;
"RTN","SDCD",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SDCD",3,0)
15 D:'$D(DT) DT^SDUTL I '$G(SDFN) S DIC="^DPT(",DIC(0)="AEQM" D ^DIC G:Y=-1 QUIT
"RTN","SDCD",4,0)
 S:$G(SDFN) Y=+SDFN S DA(2)=+Y
"RTN","SDCD",5,0)
 I '$G(SDCLN) G:'$D(^DPT(+Y,"DE")) NOPE S DIC="^DPT("_DA(2)_",""DE"",",DIC("S")="I $P(^(0),""^"",2)']""""",VAUTSTR="clinic",VAUTNI=2,VAUTVB="VAUTC" D FIRST^VAUTOMA K DIC("S") Q:Y<0
"RTN","SDCD",6,0)
 I $G(SDCLN) D  G QUIT:'$O(VAUTC(0))
"RTN","SDCD",7,0)
 .S VAUTC=0,VAUTC(+$O(^DPT(DA(2),"DE","B",+SDCLN,0)))=+SDCLN
"RTN","SDCD",8,0)
 .I '$O(VAUTC(0)) W !!,*7,">>> Patient not enrolled in '",$S($D(^SC(+SDCLN,0)):$P(^(0),"^"),1:"Unknown"),"' clinic." S SDAMERR=1
"RTN","SDCD",9,0)
 I VAUTC=1 F I=0:0 S I=$O(^DPT(DA(2),"DE",I)) Q:'I  S CLINIC=^DPT(DA(2),"DE",I,0) I $P(CLINIC,U,2)']"" S VAUTC(I)=+CLINIC
"RTN","SDCD",10,0)
 D BEFORE^SCMCEV3(DA(2)) ;setup before values
"RTN","SDCD",11,0)
 F I=0:0 S I=$O(VAUTC(I)) Q:'I  S DA(1)=I,SC=VAUTC(I) D DIS
"RTN","SDCD",12,0)
 I '$O(VAUTC(0)) W !!,*7,">>> Patient is not actively enrolled in any clinics." S SDAMERR=1
"RTN","SDCD",13,0)
 I '$D(SDAMERR) D AFTER^SCMCEV3(DA(2)) ;setup after values
"RTN","SDCD",14,0)
 ;call team event driver
"RTN","SDCD",15,0)
 I '$D(SDAMERR) D INVOKE^SCMCEV3(DA(2))
"RTN","SDCD",16,0)
 G 15:'$G(SDFN)
"RTN","SDCD",17,0)
QUIT ;
"RTN","SDCD",18,0)
 K CLINIC,DFN,SC,SDF,SDST,VAUTC,VAUTD,VAUTNI,VAUSTR,VAUTVB,DIC
"RTN","SDCD",19,0)
 Q
"RTN","SDCD",20,0)
DIS ;
"RTN","SDCD",21,0)
 S SDF=0
"RTN","SDCD",22,0)
 I $P(^DPT(DA(2),"DE",DA(1),0),"^",2)]"" W *7,*7,!,"PATIENT ALREADY DISCHARGED FROM '",$S($D(^SC(SC,0)):$P(^(0),U),1:"UNKNOWN"),"' CLINIC",*7,*7 S SDAMERR=1 Q
"RTN","SDCD",23,0)
 W !!,"***Discharging patient from ",$S($D(^SC(SC,0)):$P(^(0),U),1:"UNKNOWN")," Clinic***",!
"RTN","SDCD",24,0)
 F XX=DT_.2359:0 S XX=$N(^DPT(DA(2),"S",XX)) Q:XX'>0  I $P(^(XX,0),"^",1)=SC,$P(^(0),"^",2)=""!($P(^(0),"^",2)="I") W !?10,*7,"PATIENT HAS FUTURE APPOINTMENT(S) IN THIS CLINIC" S SDF=1
"RTN","SDCD",25,0)
 I 'SDF F XX=0:0 S XX=$N(^DPT(DA(2),"DE",DA(1),1,XX)) Q:XX<0  D STAT I SDST']"" S DIE="^DPT("_DA(2)_",""DE"","_DA(1)_",1,",DA=XX,DR="3;I 'X S Y=0;I X S XD=1;4" D ^DIE
"RTN","SDCD",26,0)
 W !,*7,"Patient ",$S('$D(XD):"NOT ",XD=2:"ALREADY ",1:""),"Discharged from clinic !!",! S:SDF SDF=0,SDAMERR=1 K XD
"RTN","SDCD",27,0)
 Q
"RTN","SDCD",28,0)
NOPE W !,*7,"PATIENT NOT ENROLLED IN ANY CLINICS!!" G QUIT:$G(SDFN),15
"RTN","SDCD",29,0)
STAT ;ck if already discharged
"RTN","SDCD",30,0)
 S SDST=$P(^DPT(DA(2),"DE",DA(1),1,XX,0),U,3) Q:SDST']""
"RTN","SDCD",31,0)
 S DIE="^DPT("_DA(2)_",""DE"","_DA(1)_",1,",DA=XX,DR="3////^S X=SDST"
"RTN","SDCD",32,0)
 L @(DIE_XX_")"):2 G:'$T STAT D ^DIE L  S:'$D(XD) XD=2 Q
"RTN","SDCO31")
0^119^B2068373
"RTN","SDCO31",1,0)
SDCO31 ;ALB/RMO - Provider Cont. - Check Out;19 MAR 1993 9:04 am
"RTN","SDCO31",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SDCO31",3,0)
 ;
"RTN","SDCO31",4,0)
PRHLP(SDCL) ;Provider Help for Clinic
"RTN","SDCO31",5,0)
 ; Input  -- SDCL     Hospital Location file IEN
"RTN","SDCO31",6,0)
 ; Output -- Help
"RTN","SDCO31",7,0)
 N C,I,SDNPI
"RTN","SDCO31",8,0)
 I '$O(^SC(SDCL,"PR",0)) G PRHLPQ
"RTN","SDCO31",9,0)
 W !!,"The following providers are associated with ",$$LOWER^VALM1($P($G(^SC(SDCL,0)),"^")),":"
"RTN","SDCO31",10,0)
 W !!,"Default Provider: ",$S($$PRDEF(SDCL)]"":$$PRDEF(SDCL),1:"[None]")
"RTN","SDCO31",11,0)
 W !!,"Other providers: "
"RTN","SDCO31",12,0)
 S (C,I)=0 F  S I=$O(^SC(SDCL,"PR",I)) Q:'I  I $D(^(I,0)) S SDNPI=+^(0) I '$D(^SC("ADPR",SDCL,I)) D
"RTN","SDCO31",13,0)
 .S C=C+1
"RTN","SDCO31",14,0)
 .W:C=1 !
"RTN","SDCO31",15,0)
 .D PAUSE^VALM1:'(C#15) W !,$$PR(SDNPI)
"RTN","SDCO31",16,0)
 W:'C "None"
"RTN","SDCO31",17,0)
PRHLPQ Q
"RTN","SDCO31",18,0)
 ;
"RTN","SDCO31",19,0)
PRDEF(SDCL) ;Provider Default for Clinic
"RTN","SDCO31",20,0)
 ; Input  -- SDCL     Hospital Location file IEN
"RTN","SDCO31",21,0)
 ; IF DEFINED: DFN - ptr to PATIENT File
"RTN","SDCO31",22,0)
 ; Output -- Default
"RTN","SDCO31",23,0)
 N Y,X
"RTN","SDCO31",24,0)
 I $D(^SC("ADPR",SDCL)),$D(^SC(SDCL,"PR",+$O(^(SDCL,0)),0)) S Y=$$PR(+^(0))
"RTN","SDCO31",25,0)
 S:($G(Y)="")&($G(^SC(SDCL,"PC")))&($D(DFN)) Y=$P($$NMPCPR^SCAPMCU2(DFN,DT,1),U,2)
"RTN","SDCO31",26,0)
 Q $G(Y)
"RTN","SDCO31",27,0)
 ;
"RTN","SDCO31",28,0)
PR(SDNPI) ;Provider Display Data
"RTN","SDCO31",29,0)
 ; Input  -- SDNPI    New Person IEN
"RTN","SDCO31",30,0)
 ; Output -- Provider Display Data - Provider Name
"RTN","SDCO31",31,0)
 N Y
"RTN","SDCO31",32,0)
 S Y=$S($D(^VA(200,SDNPI,0)):$P(^(0),"^"),1:"Unknown")
"RTN","SDCO31",33,0)
 Q $G(Y)
"RTN","SDM")
0^101^B29872862
"RTN","SDM",1,0)
SDM ;SF/GFT,ALB/BOK - MAKE AN APPOINTMENT ; 14 SEP 84  9:38 am
"RTN","SDM",2,0)
 ;;5.3;Scheduling;**5,32,38,41**;AUG 13, 1993
"RTN","SDM",3,0)
 ;                                           If defined...
"RTN","SDM",4,0)
 ; appt mgt vars:  SDFN := DFN of patient....will not be asked
"RTN","SDM",5,0)
 ;                SDCLN := ifn of clinic.....will not be asked    
"RTN","SDM",6,0)
 ;              SDAMERR := returned if error occurs
"RTN","SDM",7,0)
 ; 
"RTN","SDM",8,0)
 S:'$D(SDMM) SDMM=0
"RTN","SDM",9,0)
EN1 L  W !! D I^SDUTL I '$D(SDCLN) S DIC="^SC(",DIC(0)="AEMZQ",DIC("A")="Select CLINIC: ",DIC("S")="I $P(^(0),U,3)=""C""" D ^DIC K DIC G:Y<0!'$D(^("SL")) END
"RTN","SDM",10,0)
 K SDAPTYP,SDIN,SDRE,SDXXX S:$D(SDCLN) Y=+SDCLN
"RTN","SDM",11,0)
 I $D(^SC(+Y,"I")) S SDIN=+^("I"),SDRE=+$P(^("I"),U,2)
"RTN","SDM",12,0)
 K SDINA I $D(SDIN),SDIN S SDINA=SDIN K SDIN
"RTN","SDM",13,0)
 I $D(SD),$D(SC),+Y'=+SC K SD
"RTN","SDM",14,0)
 S SL=^SC(+Y,"SL"),X=$P(SL,U,3),STARTDAY=$S(X:X,1:8),SC=Y,SB=STARTDAY-1/100,X=$P(SL,U,6),HSI=$S(X=1:X,X:X,1:4),SI=$S(X="":4,X<3:4,X:X,1:4),STR="#@!$* XXWVUTSRQPONMLKJIHGFEDCBA0123456789jklmnopqrstuvwxyz",SDDIF=$S(HSI<3:8/HSI,1:2) K Y
"RTN","SDM",15,0)
 I $D(^SC(+SC,"SDPROT")),$P(^("SDPROT"),U)="Y",'$D(^SC(+SC,"SDPRIV",DUZ)) W !,*7,"Access to this clinic is prohibited!!",!,"Only users with a special code may access this clinic",*7 S:$D(SDCLN) SDAMERR="" G END:$D(SDCLN),SDM
"RTN","SDM",16,0)
 D CS^SDM1A S SDW="",WY="Y"
"RTN","SDM",17,0)
 I '$D(ORACTION),'$D(SDFN) S (DIC,DIE)="^DPT(",DIC(0)="AQZME" D ^DIC S DFN=+Y G:Y<0 END:$D(SDCLN),^SDM0:X[U,SDM
"RTN","SDM",18,0)
 S:$D(SDFN) DFN=SDFN
"RTN","SDM",19,0)
 I $D(^DPT(DFN,.35)),$P(^(.35),U)]"" W !?10,*7,"PATIENT HAS DIED." S:$D(SDFN) SDAMERR="" G END:$D(SDFN),SDM
"RTN","SDM",20,0)
 D ^SDM4 I $S('$D(COLLAT):1,COLLAT=7:1,1:0) G:$D(SDCLN) END G SDM
"RTN","SDM",21,0)
 K SDXXX D EN G END:$D(SDCLN),SDM
"RTN","SDM",22,0)
EN K SDMLT1 W:$P(VAEL(9),U,2)]"" !!,?15,"MEANS TEST STATUS: ",$P(VAEL(9),U,2),!
"RTN","SDM",23,0)
 S Y=DFN,Y(0)=^DPT(DFN,0) I VADM(7)]"" W !?3,*7,VADM(7)
"RTN","SDM",24,0)
 I $D(^DGS(41.1,"B",DFN)) F I=0:0 S I=$N(^DGS(41.1,"B",DFN,I)) Q:I'>0  I $P(^DGS(41.1,I,0),U,2)'<DT&('$P(^DGS(41.1,I,0),U,13)) W !,"SCHEDULED FOR ADMISSION ON " S Y=$P(^(0),U,2) D DT^SDM0
"RTN","SDM",25,0)
PEND W:$N(^DPT(DFN,"S",DT))'>DT !,"NO PENDING APPOINTMENTS" I $N(^DPT(DFN,"S",DT))>DT R !,"DISPLAY PENDING APPOINTMENTS: NO//",X:DTIME S:X="^" SDMLT1=1 G END:X["^",HELP:"YN"'[X I X["Y" W $P("YES",X,2)
"RTN","SDM",26,0)
 I  F Y=DT:0 S Y=$N(^DPT(DFN,"S",Y)) Q:Y'>0  I "I"[$P(^(Y,0),U,2) D CHKSO W:$X>9 ! W ?11 D DT^SDM0 W ?32 S DA=+SSC W SDLN,$S($D(^SC(DA,0)):$P(^(0),U),1:"DELETED CLINIC "),COV,"  ",SDAT16
"RTN","SDM",27,0)
 S DA=DFN,DR=$S('$D(^DPT(DA,.11)):"[SDM1]",$P(^(.11),U)="":"[SDM1]",1:"")
"RTN","SDM",28,0)
 S DIE="^DPT(" D ^DIE:DR]"" K DR Q:$D(SDXXX)
"RTN","SDM",29,0)
E S Y=$P(SL,U,5)
"RTN","SDM",30,0)
 S SDW="" I $D(^DPT(DFN,.1)) S SDW=^(.1) W !,"NOTE - PATIENT IS NOW IN WARD "_SDW
"RTN","SDM",31,0)
 Q:$D(SDXXX)
"RTN","SDM",32,0)
EN2 F X=0:0 S X=$N(^DPT(DFN,"DE",X)) Q:'$D(^(X,0))  I ^(0)-SC=0!'(^(0)-Y) F XX=0:0 S XX=$N(^DPT(DFN,"DE",X,1,XX)) Q:XX<1  S SDDIS=$P(^(XX,0),U,3),SDPRCL=Y D WRT S Y=SDPRCL K SDPRCL G ^SDM0:'SDDIS
"RTN","SDM",33,0)
 W *7,!?9,"PATIENT NOT ENROLLED IN CLINIC!" S X=$S(VADM(5)["F":"ER",1:"IM") I '$D(^SC(+Y,0)) S Y=+SC
"RTN","SDM",34,0)
 S Y=$P(^SC(Y,0),U)
"RTN","SDM",35,0)
 ; SCRESTA = Array of pt's teams causing restricted consults
"RTN","SDM",36,0)
 N SCRESTA
"RTN","SDM",37,0)
 S SCREST=$$RESTPT^SCAPMCU4(DFN,DT,"SCRESTA")
"RTN","SDM",38,0)
 IF SCREST D
"RTN","SDM",39,0)
 .N SCTM
"RTN","SDM",40,0)
 . S SCCLNM=Y
"RTN","SDM",41,0)
 . W !,?5,"Patient has restricted consults due to team assignment(s):"
"RTN","SDM",42,0)
 .S SCTM=0
"RTN","SDM",43,0)
 .F  S SCTM=$O(SCRESTA(SCTM)) Q:'SCTM  W !,?10,SCRESTA(SCTM)
"RTN","SDM",44,0)
 IF SCREST&'$G(SCOKCONS) D  Q
"RTN","SDM",45,0)
 .W !,?5,"This patient may only be given appointments and enrolled in clinics via"
"RTN","SDM",46,0)
 .W !,?15,"Make Consult Appointment Option, and"
"RTN","SDM",47,0)
 .W !,?15,"Edit Clinic Enrollment Data option"
"RTN","SDM",48,0)
ENR S %="",DTOUT=0 W !?9,"WANT TO ENROLL H"_X_" IN "_Y D YN^DICN I '%,%Y]"" W !,"RESPOND YES (Y) OR NO (N)" G ENR
"RTN","SDM",49,0)
 Q:'DTOUT&(%<0)  G:(%-1) ASKC S SDY=Y
"RTN","SDM",50,0)
GETED D BEFORE^SCMCEV3(DFN)
"RTN","SDM",51,0)
 R !,?9,"DATE OF ENROLLMENT: NOW// ",X:DTIME Q:X["^"  S:X="" X="NOW" S %DT="EXT" D ^%DT G:Y<0 GETED S HEY=Y
"RTN","SDM",52,0)
 S DA=DFN,DR="3///"_SDY,(DIE,DIC)="^DPT(",DP=2,DR(2,2.001)=".01///"_SDY_";1///"_HEY,DR(3,2.011)=".01///"_HEY_";S DIE(""NO^"")="""";1" D ^DIE
"RTN","SDM",53,0)
 D MAIL^SCMCCON(DFN,.SCCLNM,1,DT,"SCRESTA")
"RTN","SDM",54,0)
 N TMPY
"RTN","SDM",55,0)
 I $D(Y) S TMPY=Y
"RTN","SDM",56,0)
 K DR,DP,SCCLNM,SCREST
"RTN","SDM",57,0)
 D AFTER^SCMCEV3(DFN),INVOKE^SCMCEV3(DFN)
"RTN","SDM",58,0)
 I $D(TMPY) S Y=TMPY
"RTN","SDM",59,0)
 I '$D(TMPY) K Y
"RTN","SDM",60,0)
 K TMPY
"RTN","SDM",61,0)
 G ^SDM0:'$D(Y)
"RTN","SDM",62,0)
 Q
"RTN","SDM",63,0)
 ;
"RTN","SDM",64,0)
ASKC S %="" W !,"WANT TO SCHEDULE PATIENT FOR CONSULT" D YN^DICN Q:%<0  I '% W !,"REPLY YES (Y) OR NO (N)" G ASKC
"RTN","SDM",65,0)
 Q:(%-1)  D:$G(SCREST) MAIL^SCMCCON(DFN,.SCCLNM,2,DT,"SCRESTA") K DR,SCREST,SCCLNM G ^SDM0
"RTN","SDM",66,0)
CHKSO S COV=$S($P(^DPT(DFN,"S",Y,0),U,11)=1:" (COLLATERAL)",1:""),HY=Y,SSC=^(0),SDAT16=$S($D(^SD(409.1,+$P(SSC,U,16),0)):$P(^(0),U),1:"")
"RTN","SDM",67,0)
 F SDJ=3,4,5 I $P(^DPT(DFN,"S",HY,0),U,SDJ)]"" S Y=$P(^(0),U,SDJ) W:$X>9 ! W ?10,"*" D DT^SDM0 W ?32,$S(SDJ=3:"LAB",SDJ=4:"XRAY",1:"EKG")
"RTN","SDM",68,0)
 S SDLN="" F J=0:0 S J=$N(^SC(+SSC,"S",HY,1,J)) Q:J<0  I $D(^(J,0)),+^(0)=DFN S SDLN="("_$P(^(0),U,2)_" MINUTES) " Q
"RTN","SDM",69,0)
 S Y=HY Q
"RTN","SDM",70,0)
END D KVAR^VADPT K SDAPTYP,SDSC,%,%DT,ASKC,COV,DA,DIC,DIE,DP,DR,HEY,HSI,HY,J,SB,SC,SDDIF,SDJ,SDLN,SD17,SDMAX,SDU,SDYC,SI,SL,SSC,STARTDAY,STR
"RTN","SDM",71,0)
 K WY,X,XX,Y,S,SD,SDAP16,SDEDT,SDTY,SM,SS,ST,ARG,CCX,CCXN,HX,I,PXR,SDINA,SDW,COLLAT,SDDIS I $D(SDMM) K:'SDMM SDMM
"RTN","SDM",72,0)
 I '$D(SDMLT) K SDMLT1
"RTN","SDM",73,0)
 Q
"RTN","SDM",74,0)
OERR S XQORQUIT=1 Q:'$D(ORVP)  S DFN=+ORVP G SDM
"RTN","SDM",75,0)
HELP W !,"YES - TO DISPLAY FUTURE APPOINTMENTS",!,"NO - FUTURE APPOINTMENTS NOT DISPLAYED" G PEND
"RTN","SDM",76,0)
WRT W !,$S('SDDIS:"CURRENT  ",1:"PREVIOUS "),"ENROLLMENT: ",$S($P(^DPT(DFN,"DE",X,1,XX,0),U,2)["O":"OPT",1:"AC") I SDDIS W ?41,"DISCHARGED FROM CLINIC: " S Y=SDDIS D DT^DIQ
"RTN","SDM",77,0)
 Q
"RTN","SDMULT0")
0^121^B19888296
"RTN","SDMULT0",1,0)
SDMULT0 ;ALB/TMP - MAKE MULTI-CLINIC APPOINTMENTS ; 18 APR 86
"RTN","SDMULT0",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SDMULT0",3,0)
START W !,"The following clinics have been selected: ",! F I=0:0 S I=$N(SDC1(I)) Q:I'>0  W !,$P(SDC1(I),"^",1),?45,+$P(SDC1(I),"^",2)," MINUTE APPOINTMENT"
"RTN","SDMULT0",4,0)
OK S %=1 W !!,"OK to proceed" D YN^DICN I '% W !,"RESPOND YES (Y) OR NO (N)" G OK
"RTN","SDMULT0",5,0)
 G:(%-1) END W !
"RTN","SDMULT0",6,0)
DT S %DT(0)=-SDMAX,%DT="AEF",%DT("A")="LOOK FOR CLINIC AVAILABILITY STARTING WHEN: " D ^%DT K %DT G:"^"[X END G:Y<0 DT S SDSTRTDT=+Y
"RTN","SDMULT0",7,0)
LIM W !,"SELECT LATEST DATE TO CHECK FOR AVAILABLE SLOTS: " S Y=SDMAX D DT^DIQ R "// ",X:DTIME G:X["^"!'($T) END I X']"" G OVR
"RTN","SDMULT0",8,0)
 I X?.E1"?" W !,"  The latest date for future bookings (based on the limits from the selected",!,"  clinics) is: " S Y=SDMAX D DTS^SDUTL W Y,"  If you enter a date here, it must be less than this",!,"  date to further limit the search" G LIM
"RTN","SDMULT0",9,0)
 S %DT="EF",%DT(0)=-SDMAX D ^%DT K %DT G:Y<0!(Y<SDSTRTDT) LIM S:Y>0 SDMAX=+Y
"RTN","SDMULT0",10,0)
OVR S SD1=0 F G1=0:0 S G1=$N(SDC(G1)),SD1=SD1+1 Q:G1'>0  D S1,AV Q:'FND  S (SDSTRTDT,SDDT(SD1))=SDAPP
"RTN","SDMULT0",11,0)
A I 'FND W:'$D(SDNEXT) !,"No available slots found" W:'$D(SDNEXT) " on the same day in all the selected clinics for this",!,"  date range" G END
"RTN","SDMULT0",12,0)
 I $D(SDNEXT) Q:SDNEXT  G FND^SDMULT1
"RTN","SDMULT0",13,0)
 S SDNO=0 F I=2:1:SDCT I $D(SDDT(I)),$D(SDDT(I-1)),(SDDT(I)-SDDT(I-1)) S SDNO=1 Q
"RTN","SDMULT0",14,0)
 I SDNO S SDSTRTDT=SDAPP G LOOKA
"RTN","SDMULT0",15,0)
 D FND^SDMULT1 G END
"RTN","SDMULT0",16,0)
LOOKA S SD1=0 F G1=0:0 S G1=$N(SDC(G1)),SD1=SD1+1 Q:G1'>0  I SDDT(SD1)-SDSTRTDT D S1 D:SDSTRTDT'>SDMAX AV Q:'FND  S (SDSTRTDT,SDDT(SD1))=SDAPP
"RTN","SDMULT0",17,0)
 G A
"RTN","SDMULT0",18,0)
AV S SL=$S($D(^SC(SC,"SL")):^("SL"),1:"") I SL']"" W !,*7,"No 'SL' node defined - cannot proceed with this clinic" Q
"RTN","SDMULT0",19,0)
 S X=$P(SL,U,6),SDSI=$S(X="":4,X<3:4,X:X,1:4),SDSOH=$P(SL,"^",8)
"RTN","SDMULT0",20,0)
 S SDLEN=+SL,SDINC=$P(^SC(SC,"SL"),"^",6) S:SDINC="" SDINC=4 S SDSTR="123456789jklmnopqrstuvwxyz",SDINCM=$S(SDINC=4:15,SDINC=3:20,SDINC=6:10,SDINC=2:30,SDINC=1:60,1:0),SDNS=$S($D(SDC1(SC)):$P(SDC1(SC),"^",2),1:SDLEN)\SDINCM
"RTN","SDMULT0",21,0)
 S:SDINC="" SDINC=4 S SDDIF=$S(SDINC<3:8/SDINC,1:2),SDINC=$S(SDINC<3:4,1:SDINC)
"RTN","SDMULT0",22,0)
 K SDJ,SDAPP S (SDDOT,FND)=0 F J=0:1:6 I $D(^SC(+SC,"T"_J)) S SDJ(J)=""
"RTN","SDMULT0",23,0)
 I '$D(SDJ),$N(^SC(SC,"ST",SDSTRTDT))'>0 Q
"RTN","SDMULT0",24,0)
 S SDATE=$S($E(SDSTRTDT,6,7):SDSTRTDT,$E(SDSTRTDT,4,5):SDSTRTDT+1,1:SDSTRTDT+101)
"RTN","SDMULT0",25,0)
LOOP I '$D(SDJ),$N(^SC(+SC,"ST",SDATE-1))'>0 Q
"RTN","SDMULT0",26,0)
 G:$D(^HOLIDAY(SDATE))&('SDSOH) NEXT I $D(^SC(+SC,"ST",SDATE,1)) S SDP=^(1) G CHECK
"RTN","SDMULT0",27,0)
 S (X,SDATE1)=SDATE D DOW^SDM0 G:'$D(SDJ(Y)) NEXT S SDZ=$N(^SC(+SC,"T"_Y,0)) I SDZ>SDATE S SDATE1=SDZ
"RTN","SDMULT0",28,0)
 S SDZ=$N(^SC(+SC,"T"_Y,SDATE1)) I SDZ<0!($S('$D(^SC(+SC,"T"_Y,SDZ,1)):1,^(1)']"":1,1:0))!(SDZ>SDATE) K:SDZ<0!(SDZ>SDMAX) SDJ(Y) G NEXT
"RTN","SDMULT0",29,0)
 S ^SC(+SC,"ST",SDATE,1)=$E($P($T(DAY),U,Y+2),1,2)_" "_$E(SDATE,6,7)_$J("",SDSI+SDSI-6)_^SC(+SC,"T"_Y,SDZ,1),^SC(+SC,"ST",SDATE,0)=SDATE,SDAPP=SDATE,FND=0,SDP=^(1)
"RTN","SDMULT0",30,0)
CHECK S SDST=$F(SDP,"["),(CNT,FND)=0
"RTN","SDMULT0",31,0)
 F J=0:SDDIF:80 Q:$E(SDP,SDST+J,80)'["]"  S K=$E(SDP,SDST+J),CNT=$S(K]""&(SDSTR[K):CNT+1,1:0) S:$S(SDSTR[K:0,K?1A!(K=0):0,1:1) STX=$F(SDP,"[",SDST+J),J=$S('STX:80,1:STX-SDDIF-SDST) I (CNT-SDNS)'<0 S SDAPP=SDATE,FND=1 Q
"RTN","SDMULT0",32,0)
 Q:FND
"RTN","SDMULT0",33,0)
NEXT S SDDOT=SDDOT+1 W:'(SDDOT#5) "." S X1=SDATE,X2=1,X=X1+1 D:+$E(X,6,7)>28 C^%DTC S SDATE=X I SDATE'>SDMAX G LOOP
"RTN","SDMULT0",34,0)
 Q
"RTN","SDMULT0",35,0)
DAY ;;^SUN^MON^TUES^WEDNES^THURS^FRI^SATUR
"RTN","SDMULT0",36,0)
S1 S A=SDC(G1),SC=+A,SDXXX=0
"RTN","SDMULT0",37,0)
 Q
"RTN","SDMULT0",38,0)
END I $S('$D(SDNEXT):1,'SDNEXT:1,1:0) K SB,SC,SDDIF,SDW,SDZ,SI,SL,STARTDAY,STR
"RTN","SDMULT0",39,0)
 ;I $D(SDNEXT),$D(FND),'FND W !,"NO AVAILABILITY FOUND"
"RTN","SDMULT0",40,0)
 K %,A,CNT,G1,I,K,LINE,LINE1,S,S1,SD,SD1,SDATE,SDATE1,SDC,SDC1,SDCT,SDDOT,SDDT,SDINC,SDINCM,SDJ,SDL,SDLEN,SDMADE,SDMAX,SDNO,SDNS,SDP,SDSI,SDSOH,SDSL,SDST,SDSTR,SDV,SDXXX,SM,SDSTRTDT,STM,X,X1,X2,Y,Y1,Z,ZZ D KVAR^VADPT
"RTN","SDMULT0",41,0)
 K SDMLT1 W ! Q:$D(SDNEXT)  G 1^SDMULT
"RTN","SDMULT1")
0^122^B14395355
"RTN","SDMULT1",1,0)
SDMULT1 ;ALB/TMP - MAKE MULTI-CLINIC APPOINTMENTS ; 18 APR 86
"RTN","SDMULT1",2,0)
 ;;5.3;Scheduling;**32,41**;AUG 13, 1993
"RTN","SDMULT1",3,0)
 ;
"RTN","SDMULT1",4,0)
FND I $D(SDNEXT) S SDPCM1=""
"RTN","SDMULT1",5,0)
 I $D(SDNEXT),$G(SDPCMM(SC))>2 K SDPCM1 G ACT
"RTN","SDMULT1",6,0)
 I $D(SDNEXT),+$G(SDPCMM(SC))<1 W @IOF
"RTN","SDMULT1",7,0)
 I '$D(SDNEXT) W @IOF
"RTN","SDMULT1",8,0)
 W !?25,"DATE: " S X=SDAPP D DOW^SDM0 W "(",$P($P($T(DAY),";",3),"^",Y+2),"DAY) " S Y=SDAPP D DT^DIQ W ! F G1=0:0 S G1=$N(SDC(G1)) Q:G1'>0  S SC=+SDC(G1) D S2 S X=SDAPP,SCPCMM(SC)=0 D PROC
"RTN","SDMULT1",9,0)
ACT I '$D(SDPCMM) W:'$D(SDNEXT) ! W !,"ENTER: ",!,?3,"'^' - EXIT  " W:'$D(SDNEXT) "'B' - BOOK  " W "'C' - CONTINUE SEARCH or  'R' - REDISPLAY: CONTINUE// " R X:DTIME G:X["^" END^SDMULT0 S X=$E(X) I X?1"?"!("BCR"'[X) D H1 G ACT
"RTN","SDMULT1",10,0)
 I '$D(SDPCMM),$D(SDNEXT) S SDNEXT=1
"RTN","SDMULT1",11,0)
 I $D(SDPCM1) S X="C"
"RTN","SDMULT1",12,0)
 I X["C"!(X']"") S FND=0 F I=1:1:SDCT S SDDT(I)=0
"RTN","SDMULT1",13,0)
 I  S X1=SDSTRTDT,X2=1 D C^%DTC S SDSTRTDT=X G LOOKA^SDMULT0
"RTN","SDMULT1",14,0)
 I X["R" G FND
"RTN","SDMULT1",15,0)
 I X["B",'$D(SDNEXT) G BOOK
"RTN","SDMULT1",16,0)
 I '$D(SDPCMM) K SDPCM1 D H1 G ACT
"RTN","SDMULT1",17,0)
PROC I $D(SDNEXT) S SDPCMM(SC)=$G(SDPCMM(SC))+1
"RTN","SDMULT1",18,0)
 I $D(SDNEXT),$G(SDPCMM(SC))>3 K SDPCM1 Q
"RTN","SDMULT1",19,0)
 S SDV="",$P(SDV," ",SI+SI-5)="" W !,"CLINIC: ",$P(SDC1(SC),"^",1),?50,"(",$P(SDC1(SC),"^",2)," MINUTES)",!,"-------" S LINE=" TIME"_SDV F Y=STARTDAY:1:65\(SI+SI)+STARTDAY S LINE=LINE_$E("|"_(Y-1#12+1)_"                 ",1,SI+SI)
"RTN","SDMULT1",20,0)
 W !,$E(LINE,1,80) S LINE(G1)=$E(LINE,1,80)
"RTN","SDMULT1",21,0)
 W !,$E(^SC(SC,"ST",SDAPP,1),1,80),! S LINE1(G1)=$E(^(1),1,80) Q
"RTN","SDMULT1",22,0)
H1 W !,"YOU MAY ENTER:",!,?10,"'^' TO EXIT" W:'$D(SDNEXT) !,?10,"'B' TO ENTER THE MAKE APPT ROUTINES AND BOOK THE APPOINTMENTS"
"RTN","SDMULT1",23,0)
 W !,?10,"'C' TO LOOK FOR THE NEXT DATE ALL CLINICS HAVE AN AVAILABLE TIME SLOT",!,?10,"'R' TO REDISPLAY THIS SAME SCREEN" Q
"RTN","SDMULT1",24,0)
 ;
"RTN","SDMULT1",25,0)
DAY ;;^SUN^MON^TUES^WEDNES^THURS^FRI^SATUR
"RTN","SDMULT1",26,0)
 ;
"RTN","SDMULT1",27,0)
BOOK D STARS
"RTN","SDMULT1",28,0)
 F G1=0:0 S G1=$N(SDC(G1)) Q:G1'>0  W !!,"Make appt in : ",$P(SDC(G1),"^",2),! S SC=+SDC(G1) D S2,S3,TM D:SDMADE MADE D:'SDMADE NOT
"RTN","SDMULT1",29,0)
 K COLLAT G END^SDMULT0
"RTN","SDMULT1",30,0)
MADE W !!,$P(^SC(+SDC(G1),"S",SD,1,SDY,0),"^",2)," minute appointment made in ",$P(SDC(G1),"^",2),! D STARS
"RTN","SDMULT1",31,0)
 Q
"RTN","SDMULT1",32,0)
NOT W !!,"No appt made in ",$P(SDC1(SC),"^"),! D STARS
"RTN","SDMULT1",33,0)
 Q
"RTN","SDMULT1",34,0)
STARS S SD0="",$P(SD0,"*",81)="" W !,SD0 K SD0 Q
"RTN","SDMULT1",35,0)
TM S SDMADE=0 R !!,"SCHEDULE TIME: ",X:DTIME Q:"^"[X!'($T)  I X?.E1"?"!(X'?1N.N) W !,"Enter the appointment time for this clinic" G TM
"RTN","SDMULT1",36,0)
 S X=$E(SDAPP,4,7)_$E(SDAPP,2,3)_"@"_X,%DT="TE" D ^%DT I Y<0 W *7,"   WHEN ??" G TM
"RTN","SDMULT1",37,0)
 K %DT S X=Y#1,Y=+Y I $D(^DPT(DFN,"S",Y,0)),$P(^(0),"^",2)'["C" S Y1=+^(0),Y1=$P(^SC(+Y1,0),"^") W !,*7,"Patient already has an appointment in ",Y1," at that time" K Y1 G TM
"RTN","SDMULT1",38,0)
 S:$P(SL,"^",2)]"" $P(SL,"^")=$P(SDC1(SC),"^",2) S SDMLT=1 K SDAPTYP D EN1^SDM1
"RTN","SDMULT1",39,0)
 G:'SDMADE!(SDMADE=2) TM Q
"RTN","SDMULT1",40,0)
S2 S SL=^SC(SC,"SL"),X=$P(SL,"^",3),STARTDAY=$S(X:X,1:8),X=$P(SL,"^",6),SI=$S(X="":4,X<3:4,X:X,1:4) Q
"RTN","SDMULT1",41,0)
S3 W !,LINE(G1),!,LINE1(G1)
"RTN","SDMULT1",42,0)
 S SB=STARTDAY-1/100,X=$P(SL,U,6),HSI=$S(X=1:X,X:X,1:4),STR="#@!$* XXWVUTSRQPONMLKJIHGFEDCBA0123456789jklmnopqrstuvwxyz",SDDIF=$S(HSI<3:8/HSI,1:2),SM=0
"RTN","SDMULT1",43,0)
 K MXOK S SD=SDAPP,(CCX,CCXN,DP)=""
"RTN","SDMULT1",44,0)
 Q
"RTN","SDNEXT")
0^120^B18138629
"RTN","SDNEXT",1,0)
SDNEXT ;ALB/TMP - FIND NEXT AVAILABLE APPOINTMENT FOR A CLINIC ; 18 APR 86
"RTN","SDNEXT",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SDNEXT",3,0)
 ;
"RTN","SDNEXT",4,0)
 S IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP
"RTN","SDNEXT",5,0)
1 S SDNEXT="",SDCT=0 G RD^SDMULT
"RTN","SDNEXT",6,0)
DT S FND=0,%DT(0)=-SDMAX,%DT="AEF",%DT("A")="  START SEARCH FOR NEXT AVAILABLE FROM WHAT DATE: " D ^%DT K %DT G:"^"[X 1:$S('$D(SDNEXT):1,'SDNEXT:1,1:0),END^SDMULT0 G:Y<0 DT S SDSTRTDT=+Y
"RTN","SDNEXT",7,0)
LIM W !,"  ENTER LATEST DATE TO CHECK FOR 1ST AVAILABLE SLOT: " S Y=SDMAX D DT^DIQ R "// ",X:DTIME G:X["^"!'($T) END^SDMULT0 I X']"" G OVR^SDMULT0
"RTN","SDNEXT",8,0)
 I X?.E1"?" W !,"  The latest date for future bookings for ",$P(SDC(1),"^",2)," is: " S Y=SDMAX D DTS^SDUTL W Y,!,"  If you enter a date here, it must be less than this date to further limit the",!,"  search" G LIM
"RTN","SDNEXT",9,0)
 S %DT="EF",%DT(0)=-SDMAX D ^%DT K %DT G:Y<0!(Y<SDSTRTDT) LIM S:Y>0 SDMAX=+Y
"RTN","SDNEXT",10,0)
 G OVR^SDMULT0
"RTN","SDNEXT",11,0)
 ;
"RTN","SDNEXT",12,0)
NEW ;entry point to be use for next available appt. 3/29/96
"RTN","SDNEXT",13,0)
 K VAUTT,VAUTC,SCUP
"RTN","SDNEXT",14,0)
 S IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP
"RTN","SDNEXT",15,0)
 S SDNEXT="",SDCT=0
"RTN","SDNEXT",16,0)
 S VAUTNA="" ;don't allow all to be selected
"RTN","SDNEXT",17,0)
 S VAUTCA="" ;allow any clinic to be selected
"RTN","SDNEXT",18,0)
 S VAUTD=1 ;all divisions
"RTN","SDNEXT",19,0)
 D CLINIC^SCRPU1 ;prompt for clinics (none,one,many)
"RTN","SDNEXT",20,0)
 Q:$D(SCUP)  ; "^" SELECTED
"RTN","SDNEXT",21,0)
 D PRMTT^SCRPU1 ;prompt for team (none,one,many)
"RTN","SDNEXT",22,0)
 Q:('$D(VAUTT))&('$D(VAUTC))
"RTN","SDNEXT",23,0)
 Q:$D(SCUP)  ; "^" SELECTED
"RTN","SDNEXT",24,0)
 S APPTL=$$LENGTH()
"RTN","SDNEXT",25,0)
 Q:APPTL<0
"RTN","SDNEXT",26,0)
 S FIRST="First date to check for 1st available appointments: "
"RTN","SDNEXT",27,0)
 S SECOND="Latest date to check for available appointments: "
"RTN","SDNEXT",28,0)
 S RANG=$$DTRANG^SCRPU2(FIRST,SECOND)
"RTN","SDNEXT",29,0)
 I RANG=-1 D CLEAN,EXIT Q
"RTN","SDNEXT",30,0)
 I $D(VAUTT) D GETCLN(.VAUTT,.VAUTC)
"RTN","SDNEXT",31,0)
 ;all clinics selected & position assoc clinics in VAUTC(ien)=clinic name
"RTN","SDNEXT",32,0)
 D DRIVE(.VAUTC,APPTL,RANG)
"RTN","SDNEXT",33,0)
 D CLEAN,EXIT
"RTN","SDNEXT",34,0)
 Q
"RTN","SDNEXT",35,0)
EXIT ;
"RTN","SDNEXT",36,0)
 K VAUTD,VAUTNA,VAUTT,VAUTC,FIRST,SECOND,RANG,APPTL,SCPCMM,SDNEXT,SDCT
"RTN","SDNEXT",37,0)
 K VAUTCA,SCUP
"RTN","SDNEXT",38,0)
 Q
"RTN","SDNEXT",39,0)
 ;
"RTN","SDNEXT",40,0)
LENGTH() ;
"RTN","SDNEXT",41,0)
 ;prompt for appointment length
"RTN","SDNEXT",42,0)
 N LEN
"RTN","SDNEXT",43,0)
ST S DIR(0)="N"
"RTN","SDNEXT",44,0)
 S DIR("A")="Appointment Length Needed "
"RTN","SDNEXT",45,0)
 D ^DIR
"RTN","SDNEXT",46,0)
 I Y=""!(X="^")!(X="") S LEN=-1 G EX
"RTN","SDNEXT",47,0)
 S LEN=X
"RTN","SDNEXT",48,0)
EX K DIR,Y,X
"RTN","SDNEXT",49,0)
 Q LEN
"RTN","SDNEXT",50,0)
 ;
"RTN","SDNEXT",51,0)
GETCLN(TEAM,CLINIC) ;add assoc. clinics for teams to clinic array
"RTN","SDNEXT",52,0)
 ;TEAM - team array
"RTN","SDNEXT",53,0)
 ;CLINIC - clinic array
"RTN","SDNEXT",54,0)
 ;
"RTN","SDNEXT",55,0)
 N TM,LIST,ERR,OKAY
"RTN","SDNEXT",56,0)
 S TM=0,LIST="TPLIST",ERR="ERR1"
"RTN","SDNEXT",57,0)
 F  S TM=$O(TEAM(TM)) Q:TM=""!(TM'?.N)  D
"RTN","SDNEXT",58,0)
 .K @LIST,@ERR
"RTN","SDNEXT",59,0)
 .S OKAY=$$TPTM^SCAPMC24(TM,"","","",LIST,ERR)
"RTN","SDNEXT",60,0)
 .;@LIST contains all positions for team TM
"RTN","SDNEXT",61,0)
 .I $G(@LIST@(0))>0 D ADDCL(.CLINIC,LIST)
"RTN","SDNEXT",62,0)
 Q
"RTN","SDNEXT",63,0)
 ;
"RTN","SDNEXT",64,0)
ADDCL(CLINIC,PTLIST) ;add team's associated clinics to clinic list
"RTN","SDNEXT",65,0)
 ;CLINIC - array of selected clinics
"RTN","SDNEXT",66,0)
 ;PTLIST - array of all positions for a selected team
"RTN","SDNEXT",67,0)
 N CNAME,CIEN,TPNODE,TPIEN,NODE,EN
"RTN","SDNEXT",68,0)
 S EN=0
"RTN","SDNEXT",69,0)
 F  S EN=$O(@PTLIST@(EN)) Q:EN=""!(EN'?.N)  D
"RTN","SDNEXT",70,0)
 .S NODE=$G(@PTLIST@(EN))
"RTN","SDNEXT",71,0)
 .S TPIEN=+$P(NODE,"^") ;team position ien
"RTN","SDNEXT",72,0)
 .S TPNODE=$G(^SCTM(404.57,TPIEN,0))
"RTN","SDNEXT",73,0)
 .Q:TPNODE=""
"RTN","SDNEXT",74,0)
 .S CIEN=+$P(TPNODE,"^",9) ;clinic ien
"RTN","SDNEXT",75,0)
 .Q:CIEN=0  ;no associated clinic
"RTN","SDNEXT",76,0)
 .S CNAME=$P($G(^SC(CIEN,0)),"^") ;clinic name
"RTN","SDNEXT",77,0)
 .S CLINIC(CIEN)=CNAME
"RTN","SDNEXT",78,0)
 Q
"RTN","SDNEXT",79,0)
 ;
"RTN","SDNEXT",80,0)
DRIVE(CLINICA,LEN,BEGEND) ;driver
"RTN","SDNEXT",81,0)
 ;CLINICA - clinic array
"RTN","SDNEXT",82,0)
 ;LEN - appt. length wanted
"RTN","SDNEXT",83,0)
 ;BEGEND - begin date ^ end date
"RTN","SDNEXT",84,0)
 ;
"RTN","SDNEXT",85,0)
 N CIEN,COUNT,CONT
"RTN","SDNEXT",86,0)
 S SDNEXT="",SDCT=1
"RTN","SDNEXT",87,0)
 S CIEN=0,STOP=0,COUNT=1
"RTN","SDNEXT",88,0)
 F  S CIEN=$O(CLINICA(CIEN)) Q:CIEN=""!(CIEN'?.N)!(STOP)  D
"RTN","SDNEXT",89,0)
 .S SDNEXT=""
"RTN","SDNEXT",90,0)
 .S SDSTRTDT=$P(BEGEND,"^")
"RTN","SDNEXT",91,0)
 .S SDMAX=$P(BEGEND,"^",2)
"RTN","SDNEXT",92,0)
 .S SDC(COUNT)=CIEN,SDC1(CIEN)=$G(CLINICA(CIEN))_"^"_LEN
"RTN","SDNEXT",93,0)
 .S SDCT=COUNT,SC=CIEN
"RTN","SDNEXT",94,0)
 .D OVR^SDMULT0
"RTN","SDNEXT",95,0)
 .K SDC(COUNT),SDC1(CIEN)
"RTN","SDNEXT",96,0)
 .S CONT=$$CONMA(CIEN)
"RTN","SDNEXT",97,0)
 .Q:STOP
"RTN","SDNEXT",98,0)
 I $G(CONT)="M" D CLEAN S:$$ONE(.CLINICA) SDCLN=$O(CLINICA(0)) G ^SDM
"RTN","SDNEXT",99,0)
 Q
"RTN","SDNEXT",100,0)
CLEAN ;
"RTN","SDNEXT",101,0)
 D END^SDMULT0
"RTN","SDNEXT",102,0)
 K SDSTRTDT,SDNEXT,SDMAX,SDC,SDCT,SDC1,SDL,STOP,SDAPP,SDPCMM,SDCLN,FND
"RTN","SDNEXT",103,0)
 K SCPCC,SDPCM1,SC
"RTN","SDNEXT",104,0)
 Q
"RTN","SDNEXT",105,0)
 ;
"RTN","SDNEXT",106,0)
ONE(CLNA) ;one clinic selected? 1 or 0
"RTN","SDNEXT",107,0)
 N CNT,FIRST,RET,STP
"RTN","SDNEXT",108,0)
 S (CNT,STP)=0,RET=1
"RTN","SDNEXT",109,0)
 F  S CNT=$O(CLNA(CNT)) Q:CNT=""!(STP)  D
"RTN","SDNEXT",110,0)
 .I $D(FIRST) S STOP=1,RET=0
"RTN","SDNEXT",111,0)
 .I '$D(FIRST) S FIRST=1
"RTN","SDNEXT",112,0)
 Q RET
"RTN","SDNEXT",113,0)
 ;
"RTN","SDNEXT",114,0)
CONMA(CIEN) ;continue to view, exit or make appointment
"RTN","SDNEXT",115,0)
 ;
"RTN","SDNEXT",116,0)
PRT I $G(SDPCMM(CIEN))'>0 Q -1
"RTN","SDNEXT",117,0)
 W !,"'^' TO EXIT, 'C' TO CONTINUE OR 'M' TO GOTO MAKE APPOINTMENT: CONTINUE//" R X:DTIME
"RTN","SDNEXT",118,0)
 I '$T!(X="^") S STOP=1,X=-1 G EX2
"RTN","SDNEXT",119,0)
 I (X'="^")&(X'="C")&(X'="M")&(X'="") G PRT
"RTN","SDNEXT",120,0)
 I X="M" S STOP=1
"RTN","SDNEXT",121,0)
 I X="" S X="C"
"RTN","SDNEXT",122,0)
EX2 Q X
"RTN","SDPPALL")
0^63^B10851091
"RTN","SDPPALL",1,0)
SDPPALL ;ALB/CAW - Patient Profile - All ; 5/15/92
"RTN","SDPPALL",2,0)
 ;;5.3;Scheduling;**6,41**;AUG 13, 1993
"RTN","SDPPALL",3,0)
 ;
"RTN","SDPPALL",4,0)
 ;
"RTN","SDPPALL",5,0)
EN ;
"RTN","SDPPALL",6,0)
 K ^TMP("SDPPALL",$J)
"RTN","SDPPALL",7,0)
 S VALMBCK=""
"RTN","SDPPALL",8,0)
 W ! D WAIT^DICD,EN^VALM("SDPP PATIENT PROFILE ALL")
"RTN","SDPPALL",9,0)
 S VALMBCK="R"
"RTN","SDPPALL",10,0)
 Q
"RTN","SDPPALL",11,0)
 ;
"RTN","SDPPALL",12,0)
INIT ;
"RTN","SDPPALL",13,0)
 S SDLN=0,SDLN1=1,$P(SDASH,"-",IOM+1)=""
"RTN","SDPPALL",14,0)
INIT1 I SDTYP=2!(SDTYP=6)!($D(SDTYP(2))) D
"RTN","SDPPALL",15,0)
 .D SET^SDPPAPP1("                        *** Appointments ***") D:'SDPRINT CNTRL^VALM10(SDLN,25,20,IOINHI,IOINORM)
"RTN","SDPPALL",16,0)
 .D EN1^SDPPAPP1 ; Appointments
"RTN","SDPPALL",17,0)
 .I SDLN1=SDLN D SET^SDPPADD1(""),SET^SDPPADD1("     No appointments found.")
"RTN","SDPPALL",18,0)
 I SDTYP=1!(SDTYP=6)!($D(SDTYP(1))) D
"RTN","SDPPALL",19,0)
 .D SET^SDPPADD1("                          *** Add/Edits ***") D:'SDPRINT CNTRL^VALM10(SDLN,27,17,IOINHI,IOINORM)
"RTN","SDPPALL",20,0)
 .S SDLN1=SDLN
"RTN","SDPPALL",21,0)
 .D EN1^SDPPADD1 ; Add/Edits
"RTN","SDPPALL",22,0)
 .I SDLN1=SDLN D SET^SDPPADD1(""),SET^SDPPADD1("     No add/edits found.")
"RTN","SDPPALL",23,0)
 I SDTYP=4!(SDTYP=6)!($D(SDTYP(4))) D
"RTN","SDPPALL",24,0)
 .D SET^SDPPENR1("                         *** Enrollments ***") D:'SDPRINT CNTRL^VALM10(SDLN,26,19,IOINHI,IOINORM)
"RTN","SDPPALL",25,0)
 .S SDLN1=SDLN
"RTN","SDPPALL",26,0)
 .D EN1^SDPPENR1 ; Enrollments
"RTN","SDPPALL",27,0)
 .I SDLN1=SDLN D SET^SDPPENR1(""),SET^SDPPENR1("  No enrollments found.")
"RTN","SDPPALL",28,0)
 I SDTYP=5!(SDTYP=6)!($D(SDTYP(5))) D
"RTN","SDPPALL",29,0)
 .D SET^SDPPMT1("                      *** Means Test Info ***") D:'SDPRINT CNTRL^VALM10(SDLN,23,23,IOINHI,IOINORM)
"RTN","SDPPALL",30,0)
 .S SDLN1=SDLN
"RTN","SDPPALL",31,0)
 .D EN1^SDPPMT1 ;  Means test Info
"RTN","SDPPALL",32,0)
 .I SDLN1=SDLN D SET^SDPPMT1(""),SET^SDPPMT1("  No Means Test Info found.")
"RTN","SDPPALL",33,0)
 I SDTYP=3!(SDTYP=6)!($D(SDTYP(3))) D
"RTN","SDPPALL",34,0)
 .D SET^SDPPDIS1("                        *** Dispositions ***") D:'SDPRINT CNTRL^VALM10(SDLN,25,20,IOINHI,IOINORM)
"RTN","SDPPALL",35,0)
 .S SDLN1=SDLN
"RTN","SDPPALL",36,0)
 .D EN1^SDPPDIS1 ; Dispositions
"RTN","SDPPALL",37,0)
 .I SDLN1=SDLN D SET^SDPPDIS1(""),SET^SDPPDIS1("  No dispositions found.")
"RTN","SDPPALL",38,0)
 I SDTYP=7!(SDTYP=6)!($D(SDTYP(7))) D
"RTN","SDPPALL",39,0)
 .D SET^SDPPTEM("                   *** Team Information ***") D:'SDPRINT CNTRL^VALM10(SDLN,20,35,IOINHI,IOINORM) D SET^SDPPTEM("")
"RTN","SDPPALL",40,0)
 .S SDLN1=SDLN
"RTN","SDPPALL",41,0)
 .D TDATA^SDPPTEM(DFN)
"RTN","SDPPALL",42,0)
 .I SDLN1=SDLN D SET^SDPPTEM(""),SET^SDPPTEM("                   No Team Information found")
"RTN","SDPPALL",43,0)
 S VALMCNT=SDLN
"RTN","SDPPALL",44,0)
 D:'SDPRINT HDR^SDPP
"RTN","SDPPALL",45,0)
 Q
"RTN","SDPPALL",46,0)
 ;
"RTN","SDPPALL",47,0)
QUIT ;
"RTN","SDPPALL",48,0)
 S VALMBCK="R"
"RTN","SDPPALL",49,0)
 K BEGDATE,ENDDATE,DIC,DGINC,DGINR,DGREL,SD,SDASH,SDATA,SDDT,SDFLG,SDFST,SDIFN,SDJ,SDL,SDLD,SDPR,SDSEC,X,SD1,SDACT,SDAP,SDBEN,SDBENE,SDCAR,SDCARE,SDLN1
"RTN","SDPPALL",50,0)
 K SDALL,SDCI,SDCL,SDDIS,SDFLN,SDLEN,SDLN,SDM,SDM1,SDMT,SDOB,SDPDATA,SDPOV,SDPV,SDSC,SDSEC,SDSTAT,SDAP,SDWHEN,SDSTATUS,SDVER,SDYN,SDOPT,SDACT,SDMT1,^TMP("SDPPALL",$J)
"RTN","SDPPALL",51,0)
 Q
"RTN","SDPPRT")
0^64^B21741526
"RTN","SDPPRT",1,0)
SDPPRT ;ALB/CAW - Patient Profile - Print ;10/15/93
"RTN","SDPPRT",2,0)
 ;;5.3;Scheduling;**6,19,41**;AUG 13, 1993
"RTN","SDPPRT",3,0)
 ;
"RTN","SDPPRT",4,0)
EN ;Print entire patient profile
"RTN","SDPPRT",5,0)
 ;
"RTN","SDPPRT",6,0)
 D ENS^%ZISS
"RTN","SDPPRT",7,0)
 D DIR G:SDERR ENQ
"RTN","SDPPRT",8,0)
 W !!,$$LINE("Device Selection")
"RTN","SDPPRT",9,0)
 S %ZIS="PMQ" D ^%ZIS I POP G ENQ
"RTN","SDPPRT",10,0)
 I '$D(IO("Q")) D PRINT G ENQ
"RTN","SDPPRT",11,0)
 S Y=$$QUE
"RTN","SDPPRT",12,0)
ENQ D:'$D(ZTQUEUED) ^%ZISC
"RTN","SDPPRT",13,0)
 K SDERR,SDTYP S VALMBCK="R" Q
"RTN","SDPPRT",14,0)
 ;
"RTN","SDPPRT",15,0)
QUE() ; -- que job
"RTN","SDPPRT",16,0)
 ; return: did job que [ 1|yes   0|no ]
"RTN","SDPPRT",17,0)
 ;
"RTN","SDPPRT",18,0)
 N X K ZTSK,IO("Q")
"RTN","SDPPRT",19,0)
 S ZTDESC="Patient Profile",ZTRTN="PRINT^SDPPRT"
"RTN","SDPPRT",20,0)
 F X="DFN","SDACT","SDBD","SDBEG","SDED","SDEND","SDTYP","SDTYP(","SDPRINT","SDRANGE" S ZTSAVE(X)=""
"RTN","SDPPRT",21,0)
 D ^%ZTLOAD W:$D(ZTSK) "   (Task: ",ZTSK,")"
"RTN","SDPPRT",22,0)
 Q $D(ZTSK)
"RTN","SDPPRT",23,0)
 ;
"RTN","SDPPRT",24,0)
PRINT ;Print actual patient profile
"RTN","SDPPRT",25,0)
 U IO N SDWHERE,SDALL,SDGO K ^TMP("SD",$J),^TMP("SDAPT",$J),^TMP("SDENR",$J),^TMP("SDPP",$J),^TMP("SDPPALL",$J)
"RTN","SDPPRT",26,0)
 S (SDPAGE,SDTYP)=0,SDGO=1 D INIT1^SDPP,INIT^SDPPALL
"RTN","SDPPRT",27,0)
 S (SDALL,SDWHERE)=0 I '$$HDR G PRINTQ
"RTN","SDPPRT",28,0)
 F  S SDWHERE=$O(^TMP("SDPP",$J,SDWHERE)) Q:'SDWHERE  S:($Y+6>IOSL) SDGO=$$HDR G:'SDGO PRINTQ W !,^TMP("SDPP",$J,SDWHERE,0)
"RTN","SDPPRT",29,0)
 F  S SDALL=$O(^TMP("SDPPALL",$J,SDALL)) Q:'SDALL  S:($Y+6>IOSL) SDGO=$$HDR G:'SDGO PRINTQ W !,^TMP("SDPPALL",$J,SDALL,0)
"RTN","SDPPRT",30,0)
PRINTQ K ^TMP("SDPP",$J),^TMP("SDPPALL",$J) S SDLN=0 D:'$D(ZTQUEUED) INIT1^SDPP
"RTN","SDPPRT",31,0)
 I SDGO,SDPAGE,$E(IOST,1,2)="C-" D PAUSE^VALM1 Q
"RTN","SDPPRT",32,0)
 Q
"RTN","SDPPRT",33,0)
LINE(STR) ; -- print line
"RTN","SDPPRT",34,0)
 ;  input: STR := text to insert
"RTN","SDPPRT",35,0)
 ; output: none
"RTN","SDPPRT",36,0)
 ; return: text to use
"RTN","SDPPRT",37,0)
 ;
"RTN","SDPPRT",38,0)
 N X
"RTN","SDPPRT",39,0)
 S:STR]"" STR=" "_STR_" "
"RTN","SDPPRT",40,0)
 S $P(X,"_",(IOM/2)-($L(STR)/2))=""
"RTN","SDPPRT",41,0)
 Q X_STR_X
"RTN","SDPPRT",42,0)
 ;
"RTN","SDPPRT",43,0)
DIR ;Ask what they want printed
"RTN","SDPPRT",44,0)
 N SDYN S SDPRINT=1,SDERR=0
"RTN","SDPPRT",45,0)
 I $O(^DPT(DFN,"S",SDBD)) D  I SDERR G DIRQ
"RTN","SDPPRT",46,0)
 .S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do you want to print appointments",DIR("?")="Enter 'NO' if you do not want the appointments, otherwise enter 'YES'."
"RTN","SDPPRT",47,0)
 .D ^DIR K DIR I $D(DIRUT) S SDERR=1 Q
"RTN","SDPPRT",48,0)
 .I Y S SDTYP(2)=""
"RTN","SDPPRT",49,0)
 I $D(^SDV("C",DFN)),(+$O(^(DFN,(SDBD-.1)))),($O(^((SDBD-.1)))<SDED+.9) D  I SDERR G DIRQ
"RTN","SDPPRT",50,0)
 .S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do you want to print add/edits",DIR("?")="Enter 'NO' if you do not want the add/edits, otherwise enter 'YES'."
"RTN","SDPPRT",51,0)
 .D ^DIR K DIR I $D(DIRUT) S SDERR=1 Q
"RTN","SDPPRT",52,0)
 .I Y S SDTYP(1)=""
"RTN","SDPPRT",53,0)
 I $D(^DPT(DFN,"DE")) D  I SDERR G DIRQ
"RTN","SDPPRT",54,0)
 .S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do you want to print enrollments",DIR("?")="Enter 'NO' if you do not want the enrollments, otherwise enter 'YES'."
"RTN","SDPPRT",55,0)
 .D ^DIR K DIR I $D(DIRUT) S SDERR=1 Q
"RTN","SDPPRT",56,0)
 .I Y S SDTYP(4)="",SDACT=0
"RTN","SDPPRT",57,0)
 I $D(^DPT(DFN,"DIS")),$S('SDRANGE:1,+$O(^("DIS",9999999-(SDED+.9)))&($O(^(9999999-(SDED+.9)))<(9999999-(SDBD-.1))):1,1:0) D  I SDERR G DIRQ
"RTN","SDPPRT",58,0)
 .S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do you want to print dispositions",DIR("?")="Enter 'NO' if you do not want the dispositions, otherwise enter 'YES'."
"RTN","SDPPRT",59,0)
 .D ^DIR K DIR I $D(DIRUT) S SDERR=1 Q
"RTN","SDPPRT",60,0)
 .I Y S SDTYP(3)=""
"RTN","SDPPRT",61,0)
 S SDYN=$$LST^DGMTU(DFN) I SDYN D  I SDERR G DIRQ
"RTN","SDPPRT",62,0)
 .S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do you want to print means test",DIR("?")="Enter 'NO' if you do not want the means test, otherwise enter 'YES'."
"RTN","SDPPRT",63,0)
 .D ^DIR K DIR I $D(DIRUT) S SDERR=1 Q
"RTN","SDPPRT",64,0)
 .I Y S SDTYP(5)=""
"RTN","SDPPRT",65,0)
 ;adding team information - chris mckee 2/6/96
"RTN","SDPPRT",66,0)
 S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do you want to print team information",DIR("?")="Enter 'NO' if you do not want the team information, otherwise enter 'YES'."
"RTN","SDPPRT",67,0)
 D ^DIR K DIR I $D(DIRUT) S SDERR=1 Q
"RTN","SDPPRT",68,0)
 I Y S SDTYP(7)="",GBL="^TMP(""SDPP"","_$J_")"
"RTN","SDPPRT",69,0)
DIRQ Q
"RTN","SDPPRT",70,0)
 ;
"RTN","SDPPRT",71,0)
HDR() ; -- print header
"RTN","SDPPRT",72,0)
 ;  return: continue processing [ 1|yes   0|no ]
"RTN","SDPPRT",73,0)
 ;
"RTN","SDPPRT",74,0)
 N Y
"RTN","SDPPRT",75,0)
 I SDPAGE,$E(IOST,1,2)="C-" D PAUSE^VALM1 G:'Y HDRQ
"RTN","SDPPRT",76,0)
 S SDPAGE=SDPAGE+1 D PID^VADPT6
"RTN","SDPPRT",77,0)
 W @IOF,*13,"PATIENT PROFILE: ",$P(^DPT(DFN,0),U)_" ("_VA("BID")_")",?45,$S($D(^DPT(DFN,.1)):"Ward: "_^(.1),1:"Outpatient"),?70,"Page: ",SDPAGE
"RTN","SDPPRT",78,0)
 ;
"RTN","SDPPRT",79,0)
 W !,"Dates: ",$S(SDBD:$$FDATE^VALM1(SDBD),1:"All"),$S(SDED'=9999999:" to "_$$FDATE^VALM1(SDED),1:" Dates"),?45,"Report Date: ",$P($$NOW^VALM1,":",1,2)
"RTN","SDPPRT",80,0)
 W !,SDASH S Y=1
"RTN","SDPPRT",81,0)
HDRQ Q Y
"RTN","SDPPTEM")
0^68^B33071744
"RTN","SDPPTEM",1,0)
SDPPTEM ;ALB/CMM - Patient Profile Team Info ; 2/7/96
"RTN","SDPPTEM",2,0)
 ;;5.3;Scheduling;**41**;AUG 13, 1993
"RTN","SDPPTEM",3,0)
 ;
"RTN","SDPPTEM",4,0)
 ;Gathering Team Information for Patient Profile
"RTN","SDPPTEM",5,0)
 ;
"RTN","SDPPTEM",6,0)
TDATA(DFN) ;
"RTN","SDPPTEM",7,0)
 ;gather data driver
"RTN","SDPPTEM",8,0)
 N STORE,TGBL,OKAY,ERR,TM,FLG
"RTN","SDPPTEM",9,0)
 I DFN="" Q
"RTN","SDPPTEM",10,0)
 S ERR="^TMP("_$J_",""TERR"")"
"RTN","SDPPTEM",11,0)
 S TGBL="^TMP("_$J_",""TEAM"")"
"RTN","SDPPTEM",12,0)
 S STORE="^TMP("_$J_",""FTEAM"")"
"RTN","SDPPTEM",13,0)
 K @ERR,@TGBL,@STORE
"RTN","SDPPTEM",14,0)
 S OKAY=$$PRPT^SCAPMC10(DFN,"","","","","",TGBL,ERR)
"RTN","SDPPTEM",15,0)
 I 'OKAY S SDERR=1 Q
"RTN","SDPPTEM",16,0)
 I $O(@TGBL@(0))="" S TM=$$TEAM(DFN,STORE) S:+TM FLG="" ;not assigned to positions
"RTN","SDPPTEM",17,0)
 I '$D(FLG) D GET(TGBL,STORE)
"RTN","SDPPTEM",18,0)
 I $D(SDERR),SDERR=1 Q
"RTN","SDPPTEM",19,0)
 D FORMAT(STORE)
"RTN","SDPPTEM",20,0)
 K @ERR,@TGBL,@STORE
"RTN","SDPPTEM",21,0)
 Q
"RTN","SDPPTEM",22,0)
 ;
"RTN","SDPPTEM",23,0)
TEAM(DFN,STORE) ;get teams assigned, not assigned to position(s)
"RTN","SDPPTEM",24,0)
 ;DFN - patient ien
"RTN","SDPPTEM",25,0)
 ;STORE - global location for results
"RTN","SDPPTEM",26,0)
 N OKAY,TLIST,TERR,TMLIST
"RTN","SDPPTEM",27,0)
 S TLIST="TMLIST"
"RTN","SDPPTEM",28,0)
 K @TLIST
"RTN","SDPPTEM",29,0)
 S OKAY=$$TMPT^SCAPMC3(DFN,"","",TLIST,"TERR")
"RTN","SDPPTEM",30,0)
 I 'OKAY Q -1
"RTN","SDPPTEM",31,0)
 D GET2(TLIST,STORE)
"RTN","SDPPTEM",32,0)
 Q 1
"RTN","SDPPTEM",33,0)
 ;
"RTN","SDPPTEM",34,0)
GET2(TGBL,STORE) ;
"RTN","SDPPTEM",35,0)
 ;
"RTN","SDPPTEM",36,0)
 N EN,NODE,TPIEN,TIEN,TNODE,TNAME,TPHONE,PCP,TM
"RTN","SDPPTEM",37,0)
 S EN=0
"RTN","SDPPTEM",38,0)
 F  S EN=$O(@TGBL@(EN)) Q:EN=""  D
"RTN","SDPPTEM",39,0)
 .S NODE=$G(@TGBL@(EN))
"RTN","SDPPTEM",40,0)
 .;get team name, phone
"RTN","SDPPTEM",41,0)
 .Q:NODE=""
"RTN","SDPPTEM",42,0)
 .S TIEN=+$P($G(@TGBL@(EN)),"^") ;team ien
"RTN","SDPPTEM",43,0)
 .S TNODE=$G(^SCTM(404.51,TIEN,0))
"RTN","SDPPTEM",44,0)
 .S TNAME=$P(TNODE,"^") ;team name
"RTN","SDPPTEM",45,0)
 .S TPHONE=$P(TNODE,"^",2) ;team phone
"RTN","SDPPTEM",46,0)
 .S @STORE@(TIEN)=TNAME_"^"_TPHONE
"RTN","SDPPTEM",47,0)
 .S @STORE@("T",TNAME,TIEN)=""
"RTN","SDPPTEM",48,0)
 ;
"RTN","SDPPTEM",49,0)
 ;find primary care team, primary care position
"RTN","SDPPTEM",50,0)
 S PCP=$$GETPC^SCAPMCU2(DFN,DT)
"RTN","SDPPTEM",51,0)
 ;if PCP=0 no primary care position has been assigned
"RTN","SDPPTEM",52,0)
 I +PCP>0 D
"RTN","SDPPTEM",53,0)
 .S @STORE@("PCP",+PCP)="" ;primary care position
"RTN","SDPPTEM",54,0)
 .S TM=+$P(PCP,"^",2)
"RTN","SDPPTEM",55,0)
 .S @STORE@("PCTM",TM)="" ;primary care team
"RTN","SDPPTEM",56,0)
 I PCP=0 S @STORE@("PCP",0)="",@STORE@("PCTM",0)="" ;no primary care
"RTN","SDPPTEM",57,0)
 Q
"RTN","SDPPTEM",58,0)
 ;
"RTN","SDPPTEM",59,0)
GET(TGBL,STORE) ;
"RTN","SDPPTEM",60,0)
 ;
"RTN","SDPPTEM",61,0)
 N EN,NODE,PRACT,POS,TPIEN,TIEN,TNODE,TNAME,TPHONE,PCP,TM
"RTN","SDPPTEM",62,0)
 S EN=0
"RTN","SDPPTEM",63,0)
 F  S EN=$O(@TGBL@(EN)) Q:EN=""  D
"RTN","SDPPTEM",64,0)
 .S NODE=$G(@TGBL@(EN))
"RTN","SDPPTEM",65,0)
 .S PRACT=$P(NODE,"^",2) ;practitioner
"RTN","SDPPTEM",66,0)
 .S POS=$P(NODE,"^",4) ;position
"RTN","SDPPTEM",67,0)
 .;get team name, phone
"RTN","SDPPTEM",68,0)
 .S TPIEN=+$P(NODE,"^",3) ;team position ien
"RTN","SDPPTEM",69,0)
 .I '$D(^SCTM(404.57,TPIEN,0)) Q
"RTN","SDPPTEM",70,0)
 .S TIEN=+$P($G(^SCTM(404.57,TPIEN,0)),"^",2) ;team ien
"RTN","SDPPTEM",71,0)
 .I '$D(^SCTM(404.51,TIEN,0)) Q
"RTN","SDPPTEM",72,0)
 .S TNODE=$G(^SCTM(404.51,TIEN,0))
"RTN","SDPPTEM",73,0)
 .S TNAME=$P(TNODE,"^") ;team name
"RTN","SDPPTEM",74,0)
 .S TPHONE=$P(TNODE,"^",2) ;team phone
"RTN","SDPPTEM",75,0)
 .S @STORE@(TIEN,TPIEN)=POS_"^"_PRACT
"RTN","SDPPTEM",76,0)
 .S @STORE@(TIEN)=TNAME_"^"_TPHONE
"RTN","SDPPTEM",77,0)
 .S @STORE@("T",TNAME,TIEN)=""
"RTN","SDPPTEM",78,0)
 ;
"RTN","SDPPTEM",79,0)
 ;find primary care team, primary care position
"RTN","SDPPTEM",80,0)
 S PCP=$$GETPC^SCAPMCU2(DFN,DT)
"RTN","SDPPTEM",81,0)
 ;if PCP=0 no primary care position has been assigned
"RTN","SDPPTEM",82,0)
 I +PCP>0 D
"RTN","SDPPTEM",83,0)
 .S @STORE@("PCP",+PCP)="" ;primary care position
"RTN","SDPPTEM",84,0)
 .S TM=+$P(PCP,"^",2)
"RTN","SDPPTEM",85,0)
 .S @STORE@("PCTM",TM)="" ;primary care team
"RTN","SDPPTEM",86,0)
 I PCP=0 S @STORE@("PCP",0)="",@STORE@("PCTM",0)="" ;no primary care
"RTN","SDPPTEM",87,0)
 Q
"RTN","SDPPTEM",88,0)
 ;
"RTN","SDPPTEM",89,0)
FORMAT(STORE) ;
"RTN","SDPPTEM",90,0)
 ;format and set in list manager global
"RTN","SDPPTEM",91,0)
 N PCTM,PCPOS,X
"RTN","SDPPTEM",92,0)
 S PCTM=$O(@STORE@("PCTM","")) ;primary care team
"RTN","SDPPTEM",93,0)
 S PCPOS=$O(@STORE@("PCP","")) ;primary care position
"RTN","SDPPTEM",94,0)
 I PCTM=0!(PCPOS=0) D SET("No Primary Care Team/Position Assigned")
"RTN","SDPPTEM",95,0)
 ;
"RTN","SDPPTEM",96,0)
 I PCTM>0&(PCPOS>0) D PCENTRY(PCTM,PCPOS,STORE) ;set up primary care entry
"RTN","SDPPTEM",97,0)
 ;
"RTN","SDPPTEM",98,0)
 N TM,TNAM,TPHONE,LEN,LEN2,POS,PRACT,X
"RTN","SDPPTEM",99,0)
 S (TM,TNAME)=""
"RTN","SDPPTEM",100,0)
 F  S TNAME=$O(@STORE@("T",TNAME)) Q:TNAME=""  D
"RTN","SDPPTEM",101,0)
 .S TM=$O(@STORE@("T",TNAME,""))
"RTN","SDPPTEM",102,0)
 .Q:TM=""
"RTN","SDPPTEM",103,0)
 .S TPHONE=$P($G(@STORE@(TM)),"^",2),LEN2=$L(TPHONE)
"RTN","SDPPTEM",104,0)
 .S LEN=$L(TNAME)
"RTN","SDPPTEM",105,0)
 .S X="",X=$$SETSTR^VALM1("Team Name: ",X,2,10)
"RTN","SDPPTEM",106,0)
 .S X=$$SETSTR^VALM1(TNAME,X,13,LEN)
"RTN","SDPPTEM",107,0)
 .S X=$$SETSTR^VALM1("Team Phone: ",X,38,12)
"RTN","SDPPTEM",108,0)
 .S X=$$SETSTR^VALM1(TPHONE,X,52,LEN2)
"RTN","SDPPTEM",109,0)
 .D SET(X)
"RTN","SDPPTEM",110,0)
 .D SET("")
"RTN","SDPPTEM",111,0)
 .S POS=""
"RTN","SDPPTEM",112,0)
 .F  S POS=$O(@STORE@(TM,POS)) Q:POS=""  D
"RTN","SDPPTEM",113,0)
 ..S PNAME=$P($G(@STORE@(TM,POS)),"^"),LEN=$L(PNAME)
"RTN","SDPPTEM",114,0)
 ..S PRACT=$P($G(@STORE@(TM,POS)),"^",2),LEN2=$L(PRACT)
"RTN","SDPPTEM",115,0)
 ..S X="",X=$$SETSTR^VALM1("Position: ",X,5,10)
"RTN","SDPPTEM",116,0)
 ..S X=$$SETSTR^VALM1(PNAME,X,16,LEN)
"RTN","SDPPTEM",117,0)
 ..S X=$$SETSTR^VALM1("Practitioner: ",X,40,14)
"RTN","SDPPTEM",118,0)
 ..S X=$$SETSTR^VALM1(PRACT,X,54,LEN2)
"RTN","SDPPTEM",119,0)
 ..D SET(X)
"RTN","SDPPTEM",120,0)
 .D SET("")
"RTN","SDPPTEM",121,0)
 Q
"RTN","SDPPTEM",122,0)
PCENTRY(PCTM,PCPOS,STORE) ;
"RTN","SDPPTEM",123,0)
 ;primary care entry
"RTN","SDPPTEM",124,0)
 N TNODE,TNAME,TPHONE,PRACT,PNAME,POS,LEN,LEN2,X,PIEN
"RTN","SDPPTEM",125,0)
 ;
"RTN","SDPPTEM",126,0)
 ;primary care team
"RTN","SDPPTEM",127,0)
 S TNODE=$G(@STORE@(PCTM))
"RTN","SDPPTEM",128,0)
 S TNAME=$P(TNODE,"^"),LEN=$L(TNAME)
"RTN","SDPPTEM",129,0)
 S TPHONE=$P(TNODE,"^",2),LEN2=$L(TPHONE)
"RTN","SDPPTEM",130,0)
 S X="",X=$$SETSTR^VALM1("Primary Care Team: ",X,2,19)
"RTN","SDPPTEM",131,0)
 S X=$$SETSTR^VALM1(TNAME,X,21,LEN)
"RTN","SDPPTEM",132,0)
 S X=$$SETSTR^VALM1("Team Phone: ",X,40,12)
"RTN","SDPPTEM",133,0)
 S X=$$SETSTR^VALM1(TPHONE,X,53,LEN2)
"RTN","SDPPTEM",134,0)
 D SET(X)
"RTN","SDPPTEM",135,0)
 D SET("")
"RTN","SDPPTEM",136,0)
 ;primary care position
"RTN","SDPPTEM",137,0)
 S TNODE=$G(@STORE@(PCTM,PCPOS))
"RTN","SDPPTEM",138,0)
 S POS=$P(TNODE,"^"),LEN=$L(POS)
"RTN","SDPPTEM",139,0)
 S PRACT=$P(TNODE,"^",2),LEN2=$L(PRACT)
"RTN","SDPPTEM",140,0)
 S X="",X=$$SETSTR^VALM1("PC Position: ",X,5,12)
"RTN","SDPPTEM",141,0)
 S X=$$SETSTR^VALM1(POS,X,18,LEN)
"RTN","SDPPTEM",142,0)
 S X=$$SETSTR^VALM1("PC Practitioner: ",X,42,18)
"RTN","SDPPTEM",143,0)
 S X=$$SETSTR^VALM1(PRACT,X,60,LEN2)
"RTN","SDPPTEM",144,0)
 D SET(X)
"RTN","SDPPTEM",145,0)
 D SET("")
"RTN","SDPPTEM",146,0)
 ;list rest of position associated with team
"RTN","SDPPTEM",147,0)
 K @STORE@(PCTM,PCPOS) ;get rid of primary care position
"RTN","SDPPTEM",148,0)
 S PIEN=""
"RTN","SDPPTEM",149,0)
 F  S PIEN=$O(@STORE@(PCTM,PIEN)) Q:PIEN=""  D
"RTN","SDPPTEM",150,0)
 .S TNODE=$G(@STORE@(PCTM,PIEN))
"RTN","SDPPTEM",151,0)
 .S POS=$P(TNODE,"^"),LEN=$L(POS)
"RTN","SDPPTEM",152,0)
 .S PRACT=$P(TNODE,"^",2),LEN2=$L(PRACT)
"RTN","SDPPTEM",153,0)
 .S X="",X=$$SETSTR^VALM1("Position: ",X,5,10)
"RTN","SDPPTEM",154,0)
 .S X=$$SETSTR^VALM1(POS,X,16,LEN)
"RTN","SDPPTEM",155,0)
 .S X=$$SETSTR^VALM1("Practitioner: ",X,40,14)
"RTN","SDPPTEM",156,0)
 .S X=$$SETSTR^VALM1(PRACT,X,54,LEN2)
"RTN","SDPPTEM",157,0)
 .D SET(X)
"RTN","SDPPTEM",158,0)
 I PCTM'="" K @STORE@(PCTM) ;get rid of primary care team information
"RTN","SDPPTEM",159,0)
 I TNAME'="",PCTM'="" K @STORE@("T",TNAME,PCTM) ;get rid of primary care team information
"RTN","SDPPTEM",160,0)
 D SET("")
"RTN","SDPPTEM",161,0)
 Q
"RTN","SDPPTEM",162,0)
 ;
"RTN","SDPPTEM",163,0)
SET(X) ;
"RTN","SDPPTEM",164,0)
 Q:'$D(GBL)
"RTN","SDPPTEM",165,0)
 I '$D(SDLN)!(SDLN=0) D
"RTN","SDPPTEM",166,0)
 .S SDLN=$O(@GBL@("A"),-1)
"RTN","SDPPTEM",167,0)
 .I SDLN="" S SDLN=0
"RTN","SDPPTEM",168,0)
 S SDLN=SDLN+1,@GBL@(SDLN,0)=X
"RTN","SDPPTEM",169,0)
 Q
"RTN","SDUTL3")
0^69^B7168021
"RTN","SDUTL3",1,0)
SDUTL3 ;ALB/REW - Primary Care API Calls ; 15-May-1995
"RTN","SDUTL3",2,0)
 ;;5.3;Scheduling;**30,39,41**;Aug 13, 1993
"RTN","SDUTL3",3,0)
 ;
"RTN","SDUTL3",4,0)
OUTPTPR(DFN,SCDATE,SCPCROLE) ;given patient, return internal^external of the pc practitioner
"RTN","SDUTL3",5,0)
 ; Input: DFN - ien of patient file (#2)
"RTN","SDUTL3",6,0)
 ;     SCDATE - Relevant Date (Default=DT)
"RTN","SDUTL3",7,0)
 ;   SCPCROLE - Type of PC Role (Default =1 (PC Practitioner),2=Attending
"RTN","SDUTL3",8,0)
 ; Returned: pointer to file #200^external value of name 
"RTN","SDUTL3",9,0)
 ;           or, if error or none defined, returns a 0
"RTN","SDUTL3",10,0)
 ; Note: This call will continue to be supported with the PCMM release
"RTN","SDUTL3",11,0)
 ;       additional, optional parameters may be added (e.g. effective dt)
"RTN","SDUTL3",12,0)
 ;
"RTN","SDUTL3",13,0)
 Q:'$G(DFN) 0
"RTN","SDUTL3",14,0)
 S SCDATE=$G(SCDATE,DT)
"RTN","SDUTL3",15,0)
 S SCPCROLE=$G(SCPCROLE,1)
"RTN","SDUTL3",16,0)
 N INT,EXT,X
"RTN","SDUTL3",17,0)
 S X=$$NMPCPR^SCAPMCU2(.DFN,.SCDATE,.SCROLE)
"RTN","SDUTL3",18,0)
 G:X QTOUTPR
"RTN","SDUTL3",19,0)
 S INT=+$G(^DPT(+DFN,"PC"))
"RTN","SDUTL3",20,0)
 I INT D
"RTN","SDUTL3",21,0)
 .S EXT=$P($G(^VA(200,+INT,0)),U,1)
"RTN","SDUTL3",22,0)
 .S:$L(EXT) X=INT_U_EXT
"RTN","SDUTL3",23,0)
QTOUTPR Q X
"RTN","SDUTL3",24,0)
 ;
"RTN","SDUTL3",25,0)
OUTPTTM(DFN,SCDATE,ASSTYPE) ;given patient, return internal^external of the pc team
"RTN","SDUTL3",26,0)
 ;Input: DFN - ien of patient file (#2)
"RTN","SDUTL3",27,0)
 ;    SCDATE - Date of interest (Default=dt)
"RTN","SDUTL3",28,0)
 ;   ASSTYPE - Assignment Type (Default=1: PC Team)
"RTN","SDUTL3",29,0)
 ;  
"RTN","SDUTL3",30,0)
 ; Returned: pointer to team file (#404.51)
"RTN","SDUTL3",31,0)
 ;           or, if error or none defined, returns 0
"RTN","SDUTL3",32,0)
 ; Note: This call will continue to be supported with the PCMM release
"RTN","SDUTL3",33,0)
 ;       additional, optional parameters may be added (e.g. effective dt)
"RTN","SDUTL3",34,0)
 ;
"RTN","SDUTL3",35,0)
 Q:'$G(DFN) 0
"RTN","SDUTL3",36,0)
 S SCDATE=$G(SCDATE,DT)
"RTN","SDUTL3",37,0)
 S ASSTYPE=$G(ASSTYPE,1)
"RTN","SDUTL3",38,0)
 N INT,EXT,X
"RTN","SDUTL3",39,0)
 S X=$$NMPCTM^SCAPMCU2(.DFN,.SCDATE,.ASSTYPE)
"RTN","SDUTL3",40,0)
 G:X QTOUTTM
"RTN","SDUTL3",41,0)
 S INT=$P($G(^DPT(+DFN,"PC")),U,2)
"RTN","SDUTL3",42,0)
 I INT D
"RTN","SDUTL3",43,0)
 .S EXT=$P($G(^SCTM(404.51,+INT,0)),U,1)
"RTN","SDUTL3",44,0)
 .S:$L(EXT) X=INT_U_EXT
"RTN","SDUTL3",45,0)
QTOUTTM Q X
"RTN","SDUTL3",46,0)
 ;
"RTN","SDUTL3",47,0)
INPTPR(DFN,PRACT) ;store current PC practitioner; return SDOKS=1, if OK
"RTN","SDUTL3",48,0)
 ; Input: DFN:    ien of patient file (#2)
"RTN","SDUTL3",49,0)
 ;        PRACT:  ien of file #200 if adding,changing field
"RTN","SDUTL3",50,0)
 ;                null or '@' if deleting field
"RTN","SDUTL3",51,0)
 ; Output:SDOKS:  0, if fails to store, 1 otherwise
"RTN","SDUTL3",52,0)
 ;
"RTN","SDUTL3",53,0)
 ; Note: For now this data is stored in field #404.01 of the patient file
"RTN","SDUTL3",54,0)
 ; with the PCMM release this data will be stored in a time-sensitive
"RTN","SDUTL3",55,0)
 ; fashion in another file.
"RTN","SDUTL3",56,0)
 ; ** Many programmers will choose to do a simple DIE call or add these
"RTN","SDUTL3",57,0)
 ;    two fields to a local Registration template.  If this is done,
"RTN","SDUTL3",58,0)
 ;    the Registration template or code must be revised after the 
"RTN","SDUTL3",59,0)
 ;    PCMM release.
"RTN","SDUTL3",60,0)
 ; 
"RTN","SDUTL3",61,0)
 ; Selected NEW PERSON entry must be active and must hold provider key
"RTN","SDUTL3",62,0)
 I '$G(DFN)!('$D(PRACT)#2)!('$D(^DPT(+DFN,0))) S SDOKS=0 Q
"RTN","SDUTL3",63,0)
 D EN^DDIOL("Note: This is NOT automatically added to PCMM Files")
"RTN","SDUTL3",64,0)
 D EN^DDIOL("This data should now be entered via PCMM Input Screens")
"RTN","SDUTL3",65,0)
 S SDOKS=1
"RTN","SDUTL3",66,0)
 N DIE,DIC,DR,DA,X
"RTN","SDUTL3",67,0)
 I PRACT=""!(PRACT="@") D  G QTIPR
"RTN","SDUTL3",68,0)
 .S DIE="^DPT("
"RTN","SDUTL3",69,0)
 .S DR="404.01////^S X=""@"""
"RTN","SDUTL3",70,0)
 .S DA=DFN
"RTN","SDUTL3",71,0)
 .D ^DIE
"RTN","SDUTL3",72,0)
 I '$$SCREEN^DGPMDD(PRACT) S SDOKS=0 Q
"RTN","SDUTL3",73,0)
 I $D(^VA(200,+PRACT,0)) D
"RTN","SDUTL3",74,0)
 .S DIE="^DPT("
"RTN","SDUTL3",75,0)
 .S DR="404.01////^S X=+PRACT"
"RTN","SDUTL3",76,0)
 .S DA=DFN
"RTN","SDUTL3",77,0)
 .D ^DIE
"RTN","SDUTL3",78,0)
 E  D
"RTN","SDUTL3",79,0)
 .S SDOKS=0
"RTN","SDUTL3",80,0)
QTIPR Q
"RTN","SDUTL3",81,0)
INPTTM(DFN,TEAM) ;store current PC team; return SDOKS=0, if fails
"RTN","SDUTL3",82,0)
 ; Input: DFN:   ien of patient file (#2)
"RTN","SDUTL3",83,0)
 ;        TEAM:  ien of file #404.51 if adding,changing field
"RTN","SDUTL3",84,0)
 ;               null or '@' if deleting field
"RTN","SDUTL3",85,0)
 ; Output:SDOKS: 0, if fails to store, 1 otherwise
"RTN","SDUTL3",86,0)
 ;
"RTN","SDUTL3",87,0)
 ; Currently this data is stored in field #404.02 of the patient file
"RTN","SDUTL3",88,0)
 ; with the PCMM release this data will be stored in a time-sensitive
"RTN","SDUTL3",89,0)
 ; fashion in another file.
"RTN","SDUTL3",90,0)
 ; this call will continue to be useable after the PCMM release where
"RTN","SDUTL3",91,0)
 ; it will use DT as the effective date-time
"RTN","SDUTL3",92,0)
 ; ** Many programmers will choose to do a simple DIE call or add these
"RTN","SDUTL3",93,0)
 ;    two fields to a local Registration template.  If this is done,
"RTN","SDUTL3",94,0)
 ;    the Registration template or code must be revised after the 
"RTN","SDUTL3",95,0)
 ;    PCMM release.
"RTN","SDUTL3",96,0)
 ; 
"RTN","SDUTL3",97,0)
 I '$G(DFN)!('$D(TEAM)#2)!('$D(^DPT(+DFN,0))) S SDOKS=0 Q
"RTN","SDUTL3",98,0)
 D EN^DDIOL("This data should now be entered via PCMM Input Screens")
"RTN","SDUTL3",99,0)
 N DIE,DIC,DR,DA,X
"RTN","SDUTL3",100,0)
 S SDOKS=1
"RTN","SDUTL3",101,0)
 I TEAM=""!(TEAM="@") D  G QTITM
"RTN","SDUTL3",102,0)
 .S DIE="^DPT("
"RTN","SDUTL3",103,0)
 .S DR="404.02////^S X=""@"""
"RTN","SDUTL3",104,0)
 .S DA=DFN
"RTN","SDUTL3",105,0)
 .D ^DIE
"RTN","SDUTL3",106,0)
 I $D(^SCTM(404.51,+TEAM,0)) D
"RTN","SDUTL3",107,0)
 .S DIE="^DPT("
"RTN","SDUTL3",108,0)
 .S DR="404.02////^S X=+TEAM"
"RTN","SDUTL3",109,0)
 .S DA=DFN
"RTN","SDUTL3",110,0)
 .D ^DIE
"RTN","SDUTL3",111,0)
 E  D
"RTN","SDUTL3",112,0)
 .S SDOKS=0
"RTN","SDUTL3",113,0)
QTITM Q
"SEC","^DIC",44,44,0,"DD")
#
"SEC","^DIC",44,44,0,"DEL")
#
"SEC","^DIC",44,44,0,"LAYGO")
#
"SEC","^DIC",44,44,0,"RD")
#
"SEC","^DIC",44,44,0,"WR")
#
"SEC","^DIC",403.35,403.35,0,"DD")
@
"SEC","^DIC",403.35,403.35,0,"DEL")
@
"SEC","^DIC",403.35,403.35,0,"LAYGO")
@
"SEC","^DIC",403.35,403.35,0,"RD")
d
"SEC","^DIC",403.35,403.35,0,"WR")
@
"SEC","^DIC",403.43,403.43,0,"DD")
@
"SEC","^DIC",403.43,403.43,0,"DEL")
@
"SEC","^DIC",403.43,403.43,0,"LAYGO")
@
"SEC","^DIC",403.43,403.43,0,"RD")
d
"SEC","^DIC",403.43,403.43,0,"WR")
@
"SEC","^DIC",403.44,403.44,0,"DD")
@
"SEC","^DIC",403.44,403.44,0,"DEL")
@
"SEC","^DIC",403.44,403.44,0,"LAYGO")
@
"SEC","^DIC",403.44,403.44,0,"RD")
d
"SEC","^DIC",403.44,403.44,0,"WR")
@
"SEC","^DIC",403.46,403.46,0,"AUDIT")
@
"SEC","^DIC",403.46,403.46,0,"DD")
@
"SEC","^DIC",403.46,403.46,0,"DEL")
@
"SEC","^DIC",403.46,403.46,0,"LAYGO")
@
"SEC","^DIC",403.46,403.46,0,"RD")
d
"SEC","^DIC",403.46,403.46,0,"WR")
@
"SEC","^DIC",403.47,403.47,0,"AUDIT")
@
"SEC","^DIC",403.47,403.47,0,"DD")
@
"SEC","^DIC",403.47,403.47,0,"DEL")
@
"SEC","^DIC",403.47,403.47,0,"LAYGO")
@
"SEC","^DIC",403.47,403.47,0,"RD")
d
"SEC","^DIC",403.47,403.47,0,"WR")
@
"SEC","^DIC",404.41,404.41,0,"DD")
@
"SEC","^DIC",404.41,404.41,0,"DEL")
@
"SEC","^DIC",404.41,404.41,0,"LAYGO")
@
"SEC","^DIC",404.41,404.41,0,"RD")
d
"SEC","^DIC",404.41,404.41,0,"WR")
@
"SEC","^DIC",404.42,404.42,0,"AUDIT")
@
"SEC","^DIC",404.42,404.42,0,"DD")
@
"SEC","^DIC",404.42,404.42,0,"DEL")
@
"SEC","^DIC",404.42,404.42,0,"LAYGO")
@
"SEC","^DIC",404.42,404.42,0,"RD")
d
"SEC","^DIC",404.42,404.42,0,"WR")
@
"SEC","^DIC",404.43,404.43,0,"AUDIT")
@
"SEC","^DIC",404.43,404.43,0,"DD")
@
"SEC","^DIC",404.43,404.43,0,"DEL")
@
"SEC","^DIC",404.43,404.43,0,"LAYGO")
@
"SEC","^DIC",404.43,404.43,0,"RD")
d
"SEC","^DIC",404.43,404.43,0,"WR")
@
"SEC","^DIC",404.51,404.51,0,"DD")
@
"SEC","^DIC",404.51,404.51,0,"DEL")
@
"SEC","^DIC",404.51,404.51,0,"LAYGO")
@
"SEC","^DIC",404.51,404.51,0,"RD")
d
"SEC","^DIC",404.51,404.51,0,"WR")
@
"SEC","^DIC",404.52,404.52,0,"DD")
@
"SEC","^DIC",404.52,404.52,0,"DEL")
@
"SEC","^DIC",404.52,404.52,0,"LAYGO")
@
"SEC","^DIC",404.52,404.52,0,"RD")
d
"SEC","^DIC",404.52,404.52,0,"WR")
@
"SEC","^DIC",404.56,404.56,0,"AUDIT")
@
"SEC","^DIC",404.56,404.56,0,"DD")
@
"SEC","^DIC",404.56,404.56,0,"DEL")
@
"SEC","^DIC",404.56,404.56,0,"LAYGO")
@
"SEC","^DIC",404.56,404.56,0,"RD")
d
"SEC","^DIC",404.56,404.56,0,"WR")
@
"SEC","^DIC",404.57,404.57,0,"DD")
@
"SEC","^DIC",404.57,404.57,0,"DEL")
@
"SEC","^DIC",404.57,404.57,0,"LAYGO")
@
"SEC","^DIC",404.57,404.57,0,"RD")
d
"SEC","^DIC",404.57,404.57,0,"WR")
@
"SEC","^DIC",404.58,404.58,0,"AUDIT")
@
"SEC","^DIC",404.58,404.58,0,"DD")
@
"SEC","^DIC",404.58,404.58,0,"DEL")
@
"SEC","^DIC",404.58,404.58,0,"LAYGO")
@
"SEC","^DIC",404.58,404.58,0,"RD")
d
"SEC","^DIC",404.58,404.58,0,"WR")
@
"SEC","^DIC",404.59,404.59,0,"AUDIT")
@
"SEC","^DIC",404.59,404.59,0,"DD")
@
"SEC","^DIC",404.59,404.59,0,"DEL")
@
"SEC","^DIC",404.59,404.59,0,"LAYGO")
@
"SEC","^DIC",404.59,404.59,0,"RD")
d
"SEC","^DIC",404.59,404.59,0,"WR")
@
"SEC","^DIC",404.91,404.91,0,"DD")
@
"SEC","^DIC",404.91,404.91,0,"DEL")
@
"SEC","^DIC",404.91,404.91,0,"LAYGO")
@
"SEC","^DIC",404.91,404.91,0,"RD")
d
"SEC","^DIC",404.91,404.91,0,"WR")
@
"SEC","^DIC",404.92,404.92,0,"AUDIT")
@
"SEC","^DIC",404.92,404.92,0,"DD")
@
"SEC","^DIC",404.92,404.92,0,"DEL")
@
"SEC","^DIC",404.92,404.92,0,"LAYGO")
@
"SEC","^DIC",404.92,404.92,0,"RD")
d
"SEC","^DIC",404.92,404.92,0,"WR")
@
"SEC","^DIC",404.93,404.93,0,"AUDIT")
@
"SEC","^DIC",404.93,404.93,0,"DD")
@
"SEC","^DIC",404.93,404.93,0,"DEL")
@
"SEC","^DIC",404.93,404.93,0,"LAYGO")
@
"SEC","^DIC",404.93,404.93,0,"RD")
d
"SEC","^DIC",404.93,404.93,0,"WR")
@
"SEC","^DIC",404.94,404.94,0,"AUDIT")
@
"SEC","^DIC",404.94,404.94,0,"DD")
@
"SEC","^DIC",404.94,404.94,0,"DEL")
@
"SEC","^DIC",404.94,404.94,0,"LAYGO")
@
"SEC","^DIC",404.94,404.94,0,"RD")
d
"SEC","^DIC",404.94,404.94,0,"WR")
@
"SEC","^DIC",404.95,404.95,0,"AUDIT")
Ss
"SEC","^DIC",404.95,404.95,0,"DD")
@
"SEC","^DIC",404.95,404.95,0,"DEL")
@
"SEC","^DIC",404.95,404.95,0,"LAYGO")
@
"SEC","^DIC",404.95,404.95,0,"RD")
d
"SEC","^DIC",404.95,404.95,0,"WR")
@
"VER")
8.0^21.0
"^DD",44,44,0)
FIELD^^2800^88
"^DD",44,44,0,"DDA")
N
"^DD",44,44,0,"DT")
2960329
"^DD",44,44,0,"ID",2)
W ""
"^DD",44,44,0,"ID",2.1)
W ""
"^DD",44,44,0,"ID","WRITE")
I $P(^(0),U,3)="C" N SCMSG S SCMSG="   "_$$PRDEF^SDCO31(+Y) D EN^DDIOL(SCMSG,"","?5")
"^DD",44,44,0,"IX","AC",44,2.1)

"^DD",44,44,0,"IX","AD",44,.01)

"^DD",44,44,0,"IX","ADDX",44.11,.02)

"^DD",44,44,0,"IX","ADP",44.1,.02)

"^DD",44,44,0,"IX","ADPR",44.1,.02)

"^DD",44,44,0,"IX","AF",44,25)

"^DD",44,44,0,"IX","ALTA",44,2511)

"^DD",44,44,0,"IX","ALTC",44,2510)

"^DD",44,44,0,"IX","ALTN",44,2508)

"^DD",44,44,0,"IX","ALTP",44,2509)

"^DD",44,44,0,"IX","ARAD",44.003,10)

"^DD",44,44,0,"IX","ATEAM",44,.01)

"^DD",44,44,0,"IX","B",44,.01)

"^DD",44,44,0,"IX","C",44,1)

"^DD",44,44,0,"IX","D",44.40457,.02)

"^DD",44,44,0,"NM","HOSPITAL LOCATION")

"^DD",44,44,0,"PT",2.001,.01)

"^DD",44,44,0,"PT",2.98,.01)

"^DD",44,44,0,"PT",2.98,18)

"^DD",44,44,0,"PT",4.03,.02)

"^DD",44,44,0,"PT",42,44)

"^DD",44,44,0,"PT",43,213)

"^DD",44,44,0,"PT",44,4)

"^DD",44,44,0,"PT",44,1916)

"^DD",44,44,0,"PT",44,2009)

"^DD",44,44,0,"PT",44,2010)

"^DD",44,44,0,"PT",50.9008,.01)

"^DD",44,44,0,"PT",52,5)

"^DD",44,44,0,"PT",69.01,8)

"^DD",44,44,0,"PT",69.01,23)

"^DD",44,44,0,"PT",70.03,8)

"^DD",44,44,0,"PT",70.03,22)

"^DD",44,44,0,"PT",74.4,8)

"^DD",44,44,0,"PT",75.1,22)

"^DD",44,44,0,"PT",79.1,.01)

"^DD",44,44,0,"PT",79.1,75)

"^DD",44,44,0,"PT",100,6)

"^DD",44,44,0,"PT",100.99011,.01)

"^DD",44,44,0,"PT",100.9925,.01)

"^DD",44,44,0,"PT",101.9,.01)

"^DD",44,44,0,"PT",121,9)

"^DD",44,44,0,"PT",123,.04)

"^DD",44,44,0,"PT",123,2)

"^DD",44,44,0,"PT",123.54,.01)

"^DD",44,44,0,"PT",123.56,.01)

"^DD",44,44,0,"PT",125,.03)

"^DD",44,44,0,"PT",130,119)

"^DD",44,44,0,"PT",131.7,.01)

"^DD",44,44,0,"PT",142.2,.01)

"^DD",44,44,0,"PT",195.9,.01)

"^DD",44,44,0,"PT",195.9,2)

"^DD",44,44,0,"PT",200,100.17)

"^DD",44,44,0,"PT",352.4,.01)

"^DD",44,44,0,"PT",357.9,.01)

"^DD",44,44,0,"PT",357.9501,.01)

"^DD",44,44,0,"PT",357.96,.1)

"^DD",44,44,0,"PT",357.9901,.01)

"^DD",44,44,0,"PT",393,.05)

"^DD",44,44,0,"PT",396.115,.01)

"^DD",44,44,0,"PT",399.0304,6)

"^DD",44,44,0,"PT",403.11,.03)

"^DD",44,44,0,"PT",403.1175,.03)

"^DD",44,44,0,"PT",403.15,.04)

"^DD",44,44,0,"PT",403.18,.04)

"^DD",44,44,0,"PT",403.21,.06)

"^DD",44,44,0,"PT",404.56,.02)

"^DD",44,44,0,"PT",404.57,.09)

"^DD",44,44,0,"PT",404.71,.14)

"^DD",44,44,0,"PT",404.95,40)

"^DD",44,44,0,"PT",404.9503,.01)

"^DD",44,44,0,"PT",409.51,3)

"^DD",44,44,0,"PT",409.68,.04)

"^DD",44,44,0,"PT",409.95,.01)

"^DD",44,44,0,"PT",650.119,.01)

"^DD",44,44,0,"PT",663.4,8)

"^DD",44,44,0,"PT",669.922,.01)

"^DD",44,44,0,"PT",815,201)

"^DD",44,44,0,"PT",9000010,.22)

"^DD",44,44,0,"PT",9000010.09,1205)

"^DD",44,44,0,"PT",9000010.14,1205)

"^DD",44,44,0,"PT",9000011,1.08)

"^DD",44,44,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<2)!'(X'?1P.E)!(X'?.ANP) X
"^DD",44,44,.01,1,0)
^.1
"^DD",44,44,.01,1,1,0)
44^B
"^DD",44,44,.01,1,1,1)
S ^SC("B",$E(X,1,30),DA)=""
"^DD",44,44,.01,1,1,2)
K ^SC("B",$E(X,1,30),DA)
"^DD",44,44,.01,1,2,0)
^^TRIGGER^42^.01
"^DD",44,44,.01,1,2,1)
X ^DD(44,.01,1,2,1.3) I X S X=DIV X ^DD(44,.01,1,2,89.2) S X=$P(Y(101),U,1),X=X S X=X S D0=I(0,0) S DIU=X K Y S X=DIV S X=DIV X ^DD(44,.01,1,2,1.4)
"^DD",44,44,.01,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^SC(D0,42)):^(42),1:"") S X=Y(0)'=$S('$D(^DIC(42,+$P(Y(1),U,1),0)):"",1:$P(^(0),U,1))
"^DD",44,44,.01,1,2,1.4)
S DIH=$S($D(^DIC(42,DIV(0),0)):^(0),1:""),DIV=X I $D(^(0)) S %=$P(DIH,U,2,999),DIU=$P(DIH,U,1),^(0)=DIV_$S(%]"":U_%,1:""),DIH=42,DIG=.01 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",44,44,.01,1,2,2)
Q
"^DD",44,44,.01,1,2,89.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^SC(D0,42)):^(42),1:""),D0=$P(Y(1),U,1) S:'$D(^DIC(42,+D0,0)) D0=-1 S DIV(0)=D0 S Y(101)=$S($D(^DIC(42,D0,0)):^(0),1:"")
"^DD",44,44,.01,1,2,"CREATE CONDITION")
NAME'=WARD LOCATION FILE POINTER
"^DD",44,44,.01,1,2,"CREATE VALUE")
NAME
"^DD",44,44,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",44,44,.01,1,2,"FIELD")
WARD LOCATION FILE POINTER:NAME
"^DD",44,44,.01,1,3,0)
44^ATEAM^MUMPS
"^DD",44,44,.01,1,3,1)
Q
"^DD",44,44,.01,1,3,2)
Q
"^DD",44,44,.01,1,3,"%D",0)
^^7^7^2960402^
"^DD",44,44,.01,1,3,"%D",1,0)
The 'TEAM' cross reference of this file is created & modified through
"^DD",44,44,.01,1,3,"%D",2,0)
changes to the ASSOCIATED CLINIC (#.09) Field of the TEAM POSITION (#404.57)
"^DD",44,44,.01,1,3,"%D",3,0)
File and the NAME (#.01) Field of the TEAM (#404.51) File.  This results
"^DD",44,44,.01,1,3,"%D",4,0)
in a whole-file cross-reference with which a clinic can be looked-up
"^DD",44,44,.01,1,3,"%D",5,0)
for a team that has a team position with an associated clinic.  The
"^DD",44,44,.01,1,3,"%D",6,0)
'ATEAM' cross-reference does not do anything - it is here for
"^DD",44,44,.01,1,3,"%D",7,0)
documentation purposes.
"^DD",44,44,.01,1,3,"DT")
2960402
"^DD",44,44,.01,1,10,0)
44^AD^MUMPS
"^DD",44,44,.01,1,10,1)
Q
"^DD",44,44,.01,1,10,2)
S RTPL=X,X="RTP6" X ^%ZOSF("TEST") S X=RTPL K RTPL I $T D ^RTP6
"^DD",44,44,.01,1,12,0)
^^TRIGGER^403.12^.01
"^DD",44,44,.01,1,12,1)
X ^DD(44,.01,1,12,1.3) I X S X=DIV X ^DD(44,.01,1,12,89.2) S X=$P(Y(101),U,1) S D0=I(0,0) S DIU=X K Y S X=DIV S X=DIV X ^DD(44,.01,1,12,1.4)
"^DD",44,44,.01,1,12,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^SC(D0,0)):^(0),1:"") S X=Y(0)'=$S('$D(^SCRS(403.12,+$P(Y(1),U,29),0)):"",1:$P(^(0),U,1))
"^DD",44,44,.01,1,12,1.4)
S DIH=$S($D(^SCRS(403.12,DIV(0),0)):^(0),1:""),DIV=X I $D(^(0)) S $P(^(0),U,1)=DIV,DIH=403.12,DIG=.01 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",44,44,.01,1,12,2)
Q
"^DD",44,44,.01,1,12,89.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^SC(D0,0)):^(0),1:""),D0=$P(Y(1),U,29) S:'$D(^SCRS(403.12,+D0,0)) D0=-1 S DIV(0)=D0 S Y(101)=$S($D(^SCRS(403.12,D0,0)):^(0),1:"")
"^DD",44,44,.01,1,12,"%D",0)
^^2^2^2950606^
"^DD",44,44,.01,1,12,"%D",1,0)
This trigger cross-reference is used to update the Name field (#.01) of the
"^DD",44,44,.01,1,12,"%D",2,0)
Clinic Services Resource file (#403.12).
"^DD",44,44,.01,1,12,"CREATE CONDITION")
NAME'=CLINIC SERVICES RESOURCE
"^DD",44,44,.01,1,12,"CREATE VALUE")
NAME
"^DD",44,44,.01,1,12,"DELETE VALUE")
NO EFFECT
"^DD",44,44,.01,1,12,"DT")
2950322
"^DD",44,44,.01,1,12,"FIELD")
CLINIC SERVICES RESOURCE:NAME
"^DD",44,44,.01,3)
ANSWER MUST BE 2-30 CHARACTERS IN LENGTH
"^DD",44,44,.01,5,1,0)
42^.01^3
"^DD",44,44,.01,21,0)
^^2^2^2920212^
"^DD",44,44,.01,21,1,0)
Name given by user to any ward, clinic, fileroom, operating room
"^DD",44,44,.01,21,2,0)
or other location within a VA facility.
"^DD",44,44,.01,"DEL",.01,0)
I $P(^SC(D0,0),"^",3)["C" W !,*7,"No deletion of clinics allowed - you must inactivate them!!!"
"^DD",44,44,.01,"DEL",1900,0)
I $N(^SC(DA,"S",DT))+1 W !?10,*7,"FUTURE APP'TS IN CLINIC!"
"^DD",44,44,.01,"DT")
2960402
"^DD",44,44,1,0)
ABBREVIATION^F^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>7!($L(X)<1) X
"^DD",44,44,1,1,0)
^.1
"^DD",44,44,1,1,1,0)
44^C
"^DD",44,44,1,1,1,1)
S ^SC("C",$E(X,1,30),DA)=""
"^DD",44,44,1,1,1,2)
K ^SC("C",$E(X,1,30),DA)
"^DD",44,44,1,3)
ANSWER MUST BE 1-7 CHARACTERS IN LENGTH
"^DD",44,44,1,21,0)
^^2^2^2920212^
"^DD",44,44,1,21,1,0)
Abbreviation given by user to any ward, clinic, fileroom, operating
"^DD",44,44,1,21,2,0)
room or other location associated with the NAME.
"^DD",44,44,1,"DT")
2830401
"^DD",44,44,2,0)
TYPE^RSX^C:CLINIC;M:MODULE;W:WARD;Z:OTHER LOCATION;N:NON-CLINIC STOP;F:FILE AREA;I:IMAGING;OR:OPERATING ROOM;^0;3^K:'$D(^DIC(40.9,"C",X)) X I $D(X) S SDX=$N(^DIC(40.9,"C",X,0)) K:SDX'>0 X K SDX
"^DD",44,44,2,.1)

"^DD",44,44,2,1,0)
^.1
"^DD",44,44,2,1,1,0)
^^TRIGGER^44^2.1
"^DD",44,44,2,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^SC(D0,0)):^(0),1:"") S X=$P(Y(1),U,22),X=X S DIU=X K Y X ^DD(44,2,1,1,1.1) X ^DD(44,2,1,1,1.4)
"^DD",44,44,2,1,1,1.1)
S X=DIV S SDX=$N(^DIC(40.9,"C",X,0)) S:SDX'>0 SDX=0 S X=$S('SDX:"",$D(^DIC(40.9,+SDX,0)):+SDX,1:"") K SDX
"^DD",44,44,2,1,1,1.4)
S DIH=$S($D(^SC(DIV(0),0)):^(0),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,21,99))  S DIH=DIH_U" S %=$P(DIH,U,23,999),DIU=$P(DIH,U,22),^(0)=$P(DIH,U,1,21)_U_DIV_$S(%]"":U_%,1:""),DIH=44,DIG=2.1 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",44,44,2,1,1,2)
Q
"^DD",44,44,2,1,1,"CREATE VALUE")
S SDX=$N(^DIC(40.9,"C",X,0)) S:SDX'>0 SDX=0 S X=$S('SDX:"",$D(^DIC(40.9,+SDX,0)):+SDX,1:"") K SDX
"^DD",44,44,2,1,1,"DELETE VALUE")
NO EFFECT
"^DD",44,44,2,1,1,"FIELD")
TYPE E
"^DD",44,44,2,21,0)
^^2^2^2920212^
"^DD",44,44,2,21,1,0)
Type of location assigned to entries into this file, i.e. Ward,
"^DD",44,44,2,21,2,0)
Clinic, Fileroom, Operating Room, Other.
"^DD",44,44,2,"DT")
2880114
"^DD",44,44,2.1,0)
TYPE EXTENSION^RP40.9'X^DIC(40.9,^0;22^I $P(^SC(DA,0),"^",3)'["Z",$D(^DIC(40.9,+X,0)),$P(^(0),"^",2)]"",$P(^SC(DA,0),"^",3)'=$P(^DIC(40.9,+X,0),"^",2) K X
"^DD",44,44,2.1,1,0)
^.1^^-1
"^DD",44,44,2.1,1,1,0)
44^AC^MUMPS
"^DD",44,44,2.1,1,1,1)
I $D(^DIC(40.9,+X,0)),$P(^(0),"^",2)]"" S ^SC("AC",$P(^(0),"^",2),DA)=""
"^DD",44,44,2.1,1,1,2)
I $D(^DIC(40.9,+X,0)),$P(^(0),"^",2)]"" K ^SC("AC",$P(^(0),"^",2),DA)
"^DD",44,44,2.1,4)
I $P(^SC(DA,0),"^",3)'["Z" S DIC("S")="I $P(^DIC(40.9,Y,0),""^"",2)=$P(^SC(DA,0),""^"",3)"
"^DD",44,44,2.1,5,1,0)
44^2^1
"^DD",44,44,2.1,21,0)
^^3^3^2920212^
"^DD",44,44,2.1,21,1,0)
Type extension of a location assigned to entries into this file
"^DD",44,44,2.1,21,2,0)
to insure user is not allowed to use a previously designated
"^DD",44,44,2.1,21,3,0)
Ward Location as a Clinic Location for example.
"^DD",44,44,2.1,"DT")
2860731
"^DD",44,44,3,0)
INSTITUTION^P4'^DIC(4,^0;4^Q
"^DD",44,44,3,21,0)
^^2^2^2920212^
"^DD",44,44,3,21,1,0)
Institution name assigned to each entry in this file to identify
"^DD",44,44,3,21,2,0)
where the specific location is.
"^DD",44,44,3.5,0)
DIVISION^P40.8'^DG(40.8,^0;15^Q
"^DD",44,44,3.5,21,0)
^^3^3^2920212^
"^DD",44,44,3.5,21,1,0)
Division name assigned to each entry in this file to identify
"^DD",44,44,3.5,21,2,0)
wehre the specific location is.  There can be multiple divisions
"^DD",44,44,3.5,21,3,0)
assigned to an Institution, but only one division per location.
"^DD",44,44,3.5,"DT")
2840202
"^DD",44,44,4,0)
MODULE^P44^SC(^0;5^Q
"^DD",44,44,4,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 9
"^DD",44,44,4,21,0)
^^1^1^2920212^
"^DD",44,44,4,21,1,0)
Module or name of hospital location.
"^DD",44,44,5,0)
DEFAULT DEVICE^F^^99;2^K:$L(X)>3!($L(X)<2) X
"^DD",44,44,5,3)
ANSWER MUST BE 2-3 CHARACTERS IN LENGTH
"^DD",44,44,5,21,0)
^^2^2^2920922^^
"^DD",44,44,5,21,1,0)
Default device to which information should print for a specific
"^DD",44,44,5,21,2,0)
location.  This field is not currently being utilized.
"^DD",44,44,6,0)
DISPOSITION ACTION^S^0:NONE;1:APPOINTMENT REC REQ;2:SCHEDULING;^0;10^Q
"^DD",44,44,6,21,0)
^^2^2^2920212^
"^DD",44,44,6,21,1,0)
A disposition action associated with specific location, i.e.
"^DD",44,44,6,21,2,0)
'0'= none; '1'=appointment record request; '2'=scheduling.
"^DD",44,44,7,0)
VISIT LOCATION^F^^0;6^K:$L(X)>4!($L(X)<1) X
"^DD",44,44,7,3)
ANSWER MUST BE 1-4 CHARACTERS IN LENGTH
"^DD",44,44,7,21,0)
^^1^1^2920212^
"^DD",44,44,7,21,1,0)
Location of visit for specified entry.
"^DD",44,44,8,0)
STOP CODE NUMBER^R*P40.7'^DIC(40.7,^0;7^S DIC("S")="I $P(^(0),U,2)'=900&$S('$P(^(0),U,3):1,$P(^(0),U,3)>DT:1,1:0)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",44,44,8,1,0)
^.1^^0
"^DD",44,44,8,3)

"^DD",44,44,8,12)
Inactive stop codes are invalid.  Stop code 900 can not be used for a clinic.
"^DD",44,44,8,12.1)
S DIC("S")="I $P(^(0),U,2)'=900&$S('$P(^(0),U,3):1,$P(^(0),U,3)>DT:1,1:0)"
"^DD",44,44,8,21,0)
^^3^3^2920212^^
"^DD",44,44,8,21,1,0)
Three digit stop code number assigned to specific location.  Each
"^DD",44,44,8,21,2,0)
stop code number represents a type of care or Service/treating
"^DD",44,44,8,21,3,0)
specialty (clinics only).
"^DD",44,44,8,"DT")
2901004
"^DD",44,44,8.1,0)
PRV. YEAR STOP CODE^P40.7'IX^DIC(40.7,^OC;1^K:X X
"^DD",44,44,8.1,3)
PREVIOUS YEAR STOP CODE
"^DD",44,44,8.1,9)
^
"^DD",44,44,8.1,21,0)
^^2^2^2920212^
"^DD",44,44,8.1,21,1,0)
Previous year's three digit stop code number that was assigned to
"^DD",44,44,8.1,21,2,0)
specific location (clinics only).
"^DD",44,44,8.1,"DT")
2880801
"^DD",44,44,9,0)
SERVICE^RS^M:MEDICINE;S:SURGERY;P:PSYCHIATRY;R:REHAB MEDICINE;N:NEUROLOGY;0:NONE;^0;8^Q
"^DD",44,44,9,21,0)
^^2^2^2920212^
"^DD",44,44,9,21,1,0)
Service assigned to specific location, i.e. Medicine, Surgery,
"^DD",44,44,9,21,2,0)
Psychiatry, etc.
"^DD",44,44,9,"DT")
2831222
"^DD",44,44,9.5,0)
TREATING SPECIALTY^RP45.7'^DIC(45.7,^0;20^Q
"^DD",44,44,9.5,21,0)
^^3^3^2920212^
"^DD",44,44,9.5,21,1,0)
Treating specialty assigned a specific location, i.e. neurosurgery,
"^DD",44,44,9.5,21,2,0)
alcohol/drug rehabilitation, dermatology (specialties within
"^DD",44,44,9.5,21,3,0)
Services usually).
"^DD",44,44,9.5,"DT")
2860228
"^DD",44,44,10,0)
PHYSICAL LOCATION^F^^0;11^K:$L(X)>25!($L(X)<1) X
"^DD",44,44,10,3)
ANSWER MUST BE 1-25 CHARACTERS IN LENGTH
"^DD",44,44,10,21,0)
^^2^2^2920212^
"^DD",44,44,10,21,1,0)
Physical location of a specific ward or clinic, etc., i.e.
"^DD",44,44,10,21,2,0)
3rd floor,  Wing A.
"^DD",44,44,10,"DT")
2831108
"^DD",44,44,11,0)
*OKC A^F^^.901;1^K:$L(X)>3!($L(X)<1) X
"^DD",44,44,11,3)
ANSWER MUST BE 1-3 CHARACTERS IN LENGTH
"^DD",44,44,11,"DT")
2840208
"^DD",44,44,12,0)
*OKC B^F^^.901;2^K:$L(X)>3!($L(X)<1) X
"^DD",44,44,12,3)
ANSWER MUST BE 1-3 CHARACTERS IN LENGTH
"^DD",44,44,13,0)
SYNONYM^44.01A^^.01;0
"^DD",44,44,13,21,0)
^^1^1^2921224^^^
"^DD",44,44,13,21,1,0)
Synonym or shortened name associated with a specific location.
"^DD",44,44,14,0)
SPECIAL AMIS STOP^S^10:MENTAL HYGEINE;11:DAY TREATMENT;12:DAY HOSPITAL;13:DRUG DEPENDANCE;14:ALCOHOL TREATMENT;15:EMERGENCY UNIT;16:EMPLOYEE HEALTH;^0;12^Q
"^DD",44,44,14,21,0)
^^2^2^2920212^
"^DD",44,44,14,21,1,0)
Special AMIS stop associated with a specific location based on
"^DD",44,44,14,21,2,0)
the Service assigned.
"^DD",44,44,15,0)
CATEGORY OF VISIT^F^^0;9^K:$L(X)>3!($L(X)<1) X
"^DD",44,44,15,3)
ANSWER MUST BE 1-3 CHARACTERS IN LENGTH
"^DD",44,44,15,21,0)
^^1^1^2920212^
"^DD",44,44,15,21,1,0)
Category of visit associated with a specific location.
"^DD",44,44,16,0)
DEFAULT PROVIDER^*P200'^VA(200,^0;13^S DIC("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U),+Y)),$S('$G(^VA(200,+Y,""I"")):1,DT'>+^(""I""):1,1:0)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",44,44,16,4)
N D,DO,DIC,X S X="??",DIC("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U),+Y)),$S('$G(^VA(200,+Y,""I"")):1,DT'>+^(""I""):1,1:0)",DIC="^VA(200,",DIC(0)="EQ",D="AK.PROVIDER" D IX^DIC Q
"^DD",44,44,16,12)
Provider must be active.
"^DD",44,44,16,12.1)
S DIC("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U),+Y)),$S('$G(^VA(200,+Y,""I"")):1,DT'>+^(""I""):1,1:0)"
"^DD",44,44,16,21,0)
^^1^1^2930330^^^^
"^DD",44,44,16,21,1,0)
Default provider or physician that is assigned to specific clinic.
"^DD",44,44,16,"DT")
2930126
"^DD",44,44,19,0)
PROHIBITED TERMINAL^44.02^^9;0
"^DD",44,44,19,21,0)
^^1^1^2920212^
"^DD",44,44,19,21,1,0)
Terminals that cannot be utilized from specific location.
"^DD",44,44,23,0)
AGENCY^P4.11'^DIC(4.11,^0;23^Q
"^DD",44,44,23,21,0)
^^2^2^2920212^
"^DD",44,44,23,21,1,0)
Agency associated with specific location, i.e. Veterans Affairs,
"^DD",44,44,23,21,2,0)
Department of Defense, etc.
"^DD",44,44,23,"DT")
2900104
"^DD",44,44,24,0)
ASK FOR CHECK IN/OUT TIME^S^0:NO;1:YES;^0;24^Q
"^DD",44,44,24,21,0)
^^15^15^2950605^^^^
"^DD",44,44,24,21,1,0)
When checking in/out a patient for an appointment, should the
"^DD",44,44,24,21,2,0)
user be prompted for date and time?
"^DD",44,44,24,21,3,0)
 
"^DD",44,44,24,21,4,0)
If this field is set to 'YES', the user will be prompted
"^DD",44,44,24,21,5,0)
for the date and time.  The current date and time will be the
"^DD",44,44,24,21,6,0)
default.
"^DD",44,44,24,21,7,0)
 
"^DD",44,44,24,21,8,0)
If this field is set to 'NO' or is not entered, the user will
"^DD",44,44,24,21,9,0)
not be prompted and the current date and time will automatically
"^DD",44,44,24,21,10,0)
be entered.
"^DD",44,44,24,21,11,0)
 
"^DD",44,44,24,21,12,0)
If an appointment is scheduled retroactively then the system
"^DD",44,44,24,21,13,0)
will use the date and time of the appointment as the check
"^DD",44,44,24,21,14,0)
in/out time.  This date/time will either be entered automatically or
"^DD",44,44,24,21,15,0)
used as a default, depending upon how this parameter is set.
"^DD",44,44,24,"DT")
2930311
"^DD",44,44,25,0)
PROCEDURE CHECK-OFF SHEET^P350.7'^IBE(350.7,^0;25^Q
"^DD",44,44,25,1,0)
^.1
"^DD",44,44,25,1,1,0)
44^AF
"^DD",44,44,25,1,1,1)
S ^SC("AF",$E(X,1,30),DA)=""
"^DD",44,44,25,1,1,2)
K ^SC("AF",$E(X,1,30),DA)
"^DD",44,44,25,1,1,3)
DO NOT DELETE
"^DD",44,44,25,1,1,"%D",0)
^^1^1^2920128^^
"^DD",44,44,25,1,1,"%D",1,0)
Quick index between ckeck-off sheet and associated clinic.
"^DD",44,44,25,1,1,"DT")
2920128
"^DD",44,44,25,3)
Enter the name of the check-off sheet to be printed for this clinic.
"^DD",44,44,25,21,0)
^^1^1^2920128^
"^DD",44,44,25,21,1,0)
A pointer to the CPT check-off sheet to be printed for this clinic.
"^DD",44,44,25,"DT")
2920128
"^DD",44,44,26,0)
ASK PROVIDER AT CHECK OUT^S^0:NO;1:YES/REQUIRED;2:YES/NOT REQUIRED;^0;26^Q
"^DD",44,44,26,21,0)
^^20^20^2930614^^^
"^DD",44,44,26,21,1,0)
When checking out a patient for an appointment or a standalone
"^DD",44,44,26,21,2,0)
add/edit with an associated clinic, should the user be prompted for
"^DD",44,44,26,21,3,0)
provider?
"^DD",44,44,26,21,4,0)
 
"^DD",44,44,26,21,5,0)
If this field is set to 'YES/REQUIRED', the user will be prompted
"^DD",44,44,26,21,6,0)
for provider during the check out interview process.  A provider must
"^DD",44,44,26,21,7,0)
be entered to complete the check out process and receive workload
"^DD",44,44,26,21,8,0)
credit.
"^DD",44,44,26,21,9,0)
 
"^DD",44,44,26,21,10,0)
If this field is set to 'YES/NOT REQUIRED', the user will be prompted
"^DD",44,44,26,21,11,0)
for provider during the check out interview process.  The provider
"^DD",44,44,26,21,12,0)
does NOT have to be entered to complete the check out process and
"^DD",44,44,26,21,13,0)
receive workload credit.
"^DD",44,44,26,21,14,0)
 
"^DD",44,44,26,21,15,0)
If this field is set to 'NO' or is not entered, the user will not
"^DD",44,44,26,21,16,0)
be prompted for provider during the check out interview process.
"^DD",44,44,26,21,17,0)
 
"^DD",44,44,26,21,18,0)
Regardless of how the parameter is set, the provider can be
"^DD",44,44,26,21,19,0)
entered through the Check Out screen or the Appointment Management
"^DD",44,44,26,21,20,0)
screen.
"^DD",44,44,26,"DT")
2930421
"^DD",44,44,27,0)
ASK DIAGNOSIS AT CHECK OUT^S^0:NO;1:YES/REQUIRED;2:YES/NOT REQUIRED;^0;27^Q
"^DD",44,44,27,.1)

"^DD",44,44,27,21,0)
^^20^20^2930614^^
"^DD",44,44,27,21,1,0)
When checking out a patient for an appointment or a standalone
"^DD",44,44,27,21,2,0)
add/edit with an associated clinic, should the user be prompted for
"^DD",44,44,27,21,3,0)
diagnosis?
"^DD",44,44,27,21,4,0)
 
"^DD",44,44,27,21,5,0)
If this field is set to 'YES/REQUIRED', the user will be prompted
"^DD",44,44,27,21,6,0)
for diagnosis during the check out interview process.  A diagnosis must
"^DD",44,44,27,21,7,0)
be entered to complete the check out process and receive workload
"^DD",44,44,27,21,8,0)
credit.
"^DD",44,44,27,21,9,0)
 
"^DD",44,44,27,21,10,0)
If this field is set to 'YES/NOT REQUIRED', the user will be prompted
"^DD",44,44,27,21,11,0)
for diagnosis during the check out interview process.  The diagnosis
"^DD",44,44,27,21,12,0)
does NOT have to be entered to complete the check out process and
"^DD",44,44,27,21,13,0)
receive workload credit.
"^DD",44,44,27,21,14,0)
 
"^DD",44,44,27,21,15,0)
If this field is set to 'NO' or is not entered, the user will not
"^DD",44,44,27,21,16,0)
be prompted for diagnosis during the check out interview process.
"^DD",44,44,27,21,17,0)
 
"^DD",44,44,27,21,18,0)
Regardless of how the parameter is set, the diagnosis can be
"^DD",44,44,27,21,19,0)
entered through the Check Out screen or the Appointment Management
"^DD",44,44,27,21,20,0)
screen.
"^DD",44,44,27,"DT")
2930421
"^DD",44,44,28,0)
ASK STOP CODES AT CHECK OUT^S^0:NO;1:YES;^0;28^Q
"^DD",44,44,28,21,0)
^^12^12^2930614^^
"^DD",44,44,28,21,1,0)
When checking out a patient for an appointment, should the user be
"^DD",44,44,28,21,2,0)
prompted for stop codes?
"^DD",44,44,28,21,3,0)
 
"^DD",44,44,28,21,4,0)
If this field is set to 'YES', the user will be prompted for stop
"^DD",44,44,28,21,5,0)
codes during the check out interview process.
"^DD",44,44,28,21,6,0)
 
"^DD",44,44,28,21,7,0)
If this field is set to 'NO' or is not entered, the user will not
"^DD",44,44,28,21,8,0)
be prompted for stop codes during the check out interview process.
"^DD",44,44,28,21,9,0)
 
"^DD",44,44,28,21,10,0)
Stop codes can also be entered through the Check Out screen or the
"^DD",44,44,28,21,11,0)
Appointment Management screen.  They can either be entered as
"^DD",44,44,28,21,12,0)
standalone add/edits or associated with an appointment.
"^DD",44,44,28,"DT")
2930502
"^DD",44,44,29,0)
CLINIC SERVICES RESOURCE^P403.12'I^SCRS(403.12,^0;29^Q
"^DD",44,44,29,21,0)
^^1^1^2950605^
"^DD",44,44,29,21,1,0)
This field is used to associate the clinic with a Clinic Services Resource.
"^DD",44,44,29,"DT")
2950605
"^DD",44,44,42,0)
WARD LOCATION FILE POINTER^P42X^DIC(42,^42;1^I $D(^DIC(42,+X,44)),+^(44),+^(44)'=DA W !?20,"This Ward location points to ",$P(^SC(+^DIC(42,+X,44),0),"^",1) K X
"^DD",44,44,42,1,0)
^.1
"^DD",44,44,42,1,1,0)
^^TRIGGER^42^44
"^DD",44,44,42,1,1,1)
X ^DD(44,42,1,1,1.3) I X S X=DIV S I(0,0)=$S($D(D0):D0,1:""),D0=DIV S:'$D(^DIC(42,+D0,0)) D0=-1 S DIV(0)=D0 S Y(101)=$S($D(^DIC(42,D0,44)):^(44),1:"") S X=$P(Y(101),U,1),X=X S X=X S D0=I(0,0) S DIU=X K Y X ^DD(44,42,1,1,1.1) X ^DD(44,42,1,1,1.4)
"^DD",44,44,42,1,1,1.1)
S X=DIV S X=$S('$D(D0):"",D0<0:"",1:D0)
"^DD",44,44,42,1,1,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(44,42,1,1,69.2) S X=X S Y=X,X=Y(1),X=X S X=X'=Y S D0=I(0,0)
"^DD",44,44,42,1,1,1.4)
S DIH=$S($D(^DIC(42,DIV(0),44)):^(44),1:""),DIV=X I $D(^(0)) S %=$P(DIH,U,2,999),DIU=$P(DIH,U,1),^(44)=DIV_$S(%]"":U_%,1:""),DIH=42,DIG=44 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",44,44,42,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S I(0,0)=$S($D(D0):D0,1:""),D0=DIV S:'$D(^DIC(42,+D0,0)) D0=-1 S DIV(0)=D0 S Y(101)=$S($D(^DIC(42,D0,44)):^(44),1:"") S X=$P(Y(101),U,1),X=X S X=X S D0=I(0,0) S DIU=X K Y S X="" X ^DD(44,42,1,1,2.4)
"^DD",44,44,42,1,1,2.4)
S DIH=$S($D(^DIC(42,DIV(0),44)):^(44),1:""),DIV=X I $D(^(0)) S %=$P(DIH,U,2,999),DIU=$P(DIH,U,1),^(44)=DIV_$S(%]"":U_%,1:""),DIH=42,DIG=44 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",44,44,42,1,1,69.2)
S I(0,0)=$S($D(D0):D0,1:"") S X=$S('$D(D0):"",D0<0:"",1:D0),Y(1)=X,D0=Y(0) S:'$D(^DIC(42,+D0,0)) D0=-1 S Y(101)=$S($D(^DIC(42,D0,44)):^(44),1:"") S X=$P(Y(101),U,1)
"^DD",44,44,42,1,1,"CREATE CONDITION")
NUMBER'=INTERNAL(WARD LOCATION FILE POINTER:HOSPITAL LOCATION FILE POINTER)
"^DD",44,44,42,1,1,"CREATE VALUE")
NUMBER
"^DD",44,44,42,1,1,"DELETE VALUE")
@
"^DD",44,44,42,1,1,"FIELD")
WARD LOCATION FILE POINTER:HOSPITAL LOCATION FILE POINTER
"^DD",44,44,42,5,1,0)
42^44^1
"^DD",44,44,42,21,0)
^^2^2^2920212^
"^DD",44,44,42,21,1,0)
If location is a ward, this is the file pointer to the Ward
"^DD",44,44,42,21,2,0)
Location File, File 42 in which this location is also stored.
"^DD",44,44,42,"DT")
2860129
"^DD",44,44,99,0)
TELEPHONE^F^^99;1^K:$L(X)>13!($L(X)<3) X
"^DD",44,44,99,3)
ANSWER MUST BE 3-13 CHARACTERS IN LENGTH
"^DD",44,44,99,21,0)
^^1^1^2920212^
"^DD",44,44,99,21,1,0)
Telephone number for specific location.
"^DD",44,44,99,"DT")
2840322
"^DD",44,44,101,0)
ASSOCIATED LOCATION TYPES^44.101P^^LOC;0
"^DD",44,44,1900,0)
APPOINTMENT^44.001DA^^S;0
"^DD",44,44,1900,9)
^
"^DD",44,44,1900,21,0)
^^3^3^2920212^
"^DD",44,44,1900,21,1,0)
Appointment multiple stores all data related to outpatient visits
"^DD",44,44,1900,21,2,0)
including basic demographic data on a patient, appointment data,
"^DD",44,44,1900,21,3,0)
lab, x-ray and EKG appointment dates/times.
"^DD",44,44,1901,0)
CANCEL DATE/TIME BEGIN^44.05D^^SDCAN;0
"^DD",44,44,1901,21,0)
^^1^1^2920212^
"^DD",44,44,1901,21,1,0)
Cancellation date/time beginning for a clinic.
"^DD",44,44,1906,0)
CHART CHECK^44.006DA^^C;0
"^DD",44,44,1906,21,0)
^^1^1^2920212^^
"^DD",44,44,1906,21,1,0)
Does user want the chart checked for availability for this clinic.
"^DD",44,44,1910,0)
SPECIAL INSTRUCTIONS^44.03A^^SI;0
"^DD",44,44,1910,21,0)
^^2^2^2920212^
"^DD",44,44,1910,21,1,0)
Special instructions (free text) entered by clerk at time of making
"^DD",44,44,1910,21,2,0)
the appointment.
"^DD",44,44,1912,0)
LENGTH OF APP'T^RNJ2,0X^^SL;1^K:+X'=X!(X>240)!(X<10)!(X?.E1"."1N.N)!($S('(X#10):0,'(X#15):0,1:1)) X I $D(X) S SDLA=X I $D(^SC(DA,"SL")),+$P(^("SL"),U,6) S SDZ0=$P(^("SL"),U,6),SDZ1=60\SDZ0 I X#SDZ1 D LAPPT^SDUTL
"^DD",44,44,1912,3)
TYPE A WHOLE NUMBER BETWEEN 10 AND 240 -- MUST BE A MULTIPLE OF 10 OR 15
"^DD",44,44,1912,21,0)
^^1^1^2920212^
"^DD",44,44,1912,21,1,0)
Length of appointment designated for clinic.
"^DD",44,44,1912,"DT")
2860219
"^DD",44,44,1913,0)
VARIABLE APP'NTMENT LENGTH^S^V:YES, VARIABLE LENGTH;^SL;2^Q
"^DD",44,44,1913,21,0)
^^3^3^2920212^
"^DD",44,44,1913,21,1,0)
Does the clinic have variable appointment lengths?  Can, if length
"^DD",44,44,1913,21,2,0)
of appointment is 10 minutes, user make longer appointments in
"^DD",44,44,1913,21,3,0)
increments of 10 at time of making appointment?
"^DD",44,44,1914,0)
HOUR CLINIC DISPLAY BEGINS^NJ2,0^^SL;3^K:+X'=X!(X>16)!(X<0)!(X?.E1"."1N.N) X
"^DD",44,44,1914,3)
(0-16), IF OTHER THAN 8AM
"^DD",44,44,1914,21,0)
^^1^1^2920212^
"^DD",44,44,1914,21,1,0)
The hour clinic will begin displaying availability (i.e. 8AM).
"^DD",44,44,1915,0)
HOLD SC SLOTS UNTIL # OF DAYS^NJ3,0^^SL;4^K:+X'=X!(X>365)!(X<1)!(X?.E1"."1N.N) X
"^DD",44,44,1915,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 365
"^DD",44,44,1915,21,0)
^^3^3^2920212^
"^DD",44,44,1915,21,1,0)
Should service connected slots be held open for a set number of
"^DD",44,44,1915,21,2,0)
days?  Service connected veterans have priority over NSC veterans
"^DD",44,44,1915,21,3,0)
when scheduling appointments.
"^DD",44,44,1916,0)
PRINCIPAL CLINIC^*P44'^SC(^SL;5^S DIC("S")="I $P(^(0),""^"",3)=""C""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",44,44,1916,3)

"^DD",44,44,1916,4)
W !,"IF ENROLLMENT IN THIS CLINIC IS EQUIVALENT TO ENROLLMENT IN A LARGER ONE,",!,"ENTER THAT LARGER CLINIC'S NAME",!
"^DD",44,44,1916,12)
PRINCIPAL CLINIC MUST BE A CLINIC
"^DD",44,44,1916,12.1)
S DIC("S")="I $P(^(0),""^"",3)=""C"""
"^DD",44,44,1916,21,0)
^^1^1^2920212^
"^DD",44,44,1916,21,1,0)
Principal clinic or main clinic assigned to a specific location.
"^DD",44,44,1916,"DT")
2890525
"^DD",44,44,1917,0)
DISPLAY INCREMENTS PER HOUR^RSX^1:60-MIN ;2:30-MIN ;4:15-MIN ;3:20-MIN ;6:10-MIN ;^SL;6^S ZSI=$S(X=1!(X=2)!(X=3)!(X=4)!(X=6):60/X,1:0),SDLA=$S('$D(^SC(DA,"SL")):0,1:+^("SL")) K:('SDLA)!('ZSI) SDLA,ZSI,X Q:'$D(X)  I SDLA#ZSI>0 X ^DD(44,1917,9.2) Q
"^DD",44,44,1917,3)
THIS FIELD ***SHOULD NOT BE EDITED*** ONCE AVAILABILITY HAS BEEN CREATED!!
"^DD",44,44,1917,9.2)
I SDLA#ZSI>0 W !,"INCREMENTS PER HOUR INCONSISTENT WITH ",SDLA,"-MINUTE APPOINTMENT LENGTH" K X,ZSI,SDLA Q
"^DD",44,44,1917,21,0)
^^4^4^2890524^
"^DD",44,44,1917,21,1,0)
     This field SHOULD NOT BE EDITED when patterns have been established
"^DD",44,44,1917,21,2,0)
using another increment per hour. Editing this field will cause 
"^DD",44,44,1917,21,3,0)
existing patterns to be erroneous and scheduling conflicts may also occur 
"^DD",44,44,1917,21,4,0)
if the increments are changed.
"^DD",44,44,1917,"DT")
2890524
"^DD",44,44,1918,0)
OVERBOOKS/DAY MAXIMUM^RNJ4,0^^SL;7^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
"^DD",44,44,1918,3)
ENTER THE NUMBER OF ALLOWABLE OVERBOOKS PER DAY.  IF OVERBOOKS ARE NOT ALLOWED, ENTER ZERO.
"^DD",44,44,1918,21,0)
^^2^2^2890129^
"^DD",44,44,1918,21,1,0)
Number of allowable overbooks per day.  If overbooks are not allowed, the
"^DD",44,44,1918,21,2,0)
number should be set to zero.
"^DD",44,44,1918,"DT")
2890129
"^DD",44,44,1918.5,0)
SCHEDULE ON HOLIDAYS?^S^Y:YES;^SL;8^Q
"^DD",44,44,1918.5,3)
RESPOND YES IF SCHEDULING IS ALLOWED FOR THIS CLINIC ON ALL HOLIDAYS
"^DD",44,44,1918.5,21,0)
^^2^2^2920212^
"^DD",44,44,1918.5,21,1,0)
Should the user be able to schedule appointments on holiday's for
"^DD",44,44,1918.5,21,2,0)
specific location?
"^DD",44,44,1918.5,"DT")
2860317
"^DD",44,44,1919,0)
COPIES^NJ2,0^^0;14^K:+X'=X!(X>20)!(X<1)!(X?.E1"."1N.N) X
"^DD",44,44,1919,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 20
"^DD",44,44,1919,21,0)
^^2^2^2920212^
"^DD",44,44,1919,21,1,0)
How many copies of appointment lists should be generated for this
"^DD",44,44,1919,21,2,0)
clinic?
"^DD",44,44,1920,0)
AVAILABILITY^44.002DA^^T;0
"^DD",44,44,1920,21,0)
^^1^1^2920212^
"^DD",44,44,1920,21,1,0)
Multiple that stores clinic availability information.
"^DD",44,44,1920.9,0)
AVAILABILITY FLAG^D^^STT;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",44,44,1920.9,21,0)
^^1^1^2920212^^
"^DD",44,44,1920.9,21,1,0)
Date/time set up for clinic availability.
"^DD",44,44,1921,0)
PATTERN^44.005DA^^ST;0
"^DD",44,44,1921,9)
^
"^DD",44,44,1921,21,0)
^^1^1^2920212^
"^DD",44,44,1921,21,1,0)
Pattern for clinic availability information.
"^DD",44,44,1921.5,0)
SPECIAL PATTERN^44.0002DA^^OST;0
"^DD",44,44,1921.5,9)
^
"^DD",44,44,1921.5,21,0)
^^2^2^2920212^
"^DD",44,44,1921.5,21,1,0)
Special pattern information (storage of previous clinic patterns
"^DD",44,44,1921.5,21,2,0)
and current one).
"^DD",44,44,1922,0)
SUNDAY TEMPLATE^44.06A^^T0;0
"^DD",44,44,1922,9)
^
"^DD",44,44,1922,21,0)
^^3^3^2860801^^^
"^DD",44,44,1922,21,1,0)
This field contains the patterns and limit dates applicable to scheduling
"^DD",44,44,1922,21,2,0)
appointments on Sundays.  These fields are overridden by patterns entered
"^DD",44,44,1922,21,3,0)
for a specific (Sunday) date and stored on the "OST" nodes.
"^DD",44,44,1922,"DEL",.01,0)
I '$D(SDSCHED) W !,"ZZZ",!,*7,"You cannot delete this field using fileman!!!"
"^DD",44,44,1923,0)
MONDAY TEMPLATE^44.07A^^T1;0
"^DD",44,44,1923,9)
^
"^DD",44,44,1923,21,0)
^^3^3^2860801^^
"^DD",44,44,1923,21,1,0)
This field contains the patterns and limit dates applicable to scheduling
"^DD",44,44,1923,21,2,0)
appointments on Mondays.  These fields are overridden by patterns entered
"^DD",44,44,1923,21,3,0)
for a specific (Monday) date and stored on the "OST" nodes.
"^DD",44,44,1923,"DEL",.01,0)
I '$D(SDSCHED) W !,*7,"You cannot delete this field using fileman!!!"
"^DD",44,44,1924,0)
TUESDAY TEMPLATE^44.08A^^T2;0
"^DD",44,44,1924,9)
^
"^DD",44,44,1924,21,0)
^^3^3^2920212^^^^
"^DD",44,44,1924,21,1,0)
This field contains the patterns and limit dates applicable to scheduling
"^DD",44,44,1924,21,2,0)
appointments on Tuesdays.  These fields are overridden by patterns entered
"^DD",44,44,1924,21,3,0)
for a specific (Tuesday) date and stored on the "OST" nodes.
"^DD",44,44,1924,"DEL",.01,0)
I '$D(SDSCHED) W !,*7,"You cannot delete this field using fileman!!!"
"^DD",44,44,1925,0)
WEDNESDAY TEMPLATE^44.09A^^T3;0
"^DD",44,44,1925,9)
^
"^DD",44,44,1925,21,0)
^^3^3^2920212^^^
"^DD",44,44,1925,21,1,0)
This field contains the patterns and limit dates applicable to scheduling
"^DD",44,44,1925,21,2,0)
appointments on Wednesdays.  These fields are overridden by patterns entered
"^DD",44,44,1925,21,3,0)
for a specific (Wednesday) date and stored on the "OST" nodes.
"^DD",44,44,1925,"DEL",.01,0)
I '$D(SDSCHED) W !,*7,"You cannot delete this field using fileman!!!"
"^DD",44,44,1926,0)
THURSDAY TEMPLATE^44.008A^^T4;0
"^DD",44,44,1926,9)
^
"^DD",44,44,1926,21,0)
^^3^3^2860801^^
"^DD",44,44,1926,21,1,0)
This field contains the patterns and limit dates applicable to scheduling
"^DD",44,44,1926,21,2,0)
appointments on Thursdays.  These fields are overridden by patterns entered
"^DD",44,44,1926,21,3,0)
for a specific (Thursday) date and stored on the "OST" nodes.
"^DD",44,44,1926,"DEL",.01,0)
I '$D(SDSCHED) W !,*7,"You cannot delete this field using fileman!!!"
"^DD",44,44,1927,0)
FRIDAY TEMPLATE^44.009A^^T5;0
"^DD",44,44,1927,9)
^
"^DD",44,44,1927,21,0)
^^3^3^2920212^^^
"^DD",44,44,1927,21,1,0)
This field contains the patterns and limit dates applicable to scheduling
"^DD",44,44,1927,21,2,0)
appointments on Fridays.  These fields are overridden by patterns entered
"^DD",44,44,1927,21,3,0)
for a specific (Friday) date and stored on the "OST" nodes.
"^DD",44,44,1927,"DEL",.01,0)
I '$D(SDSCHED) W !,*7,"You cannot delete this field using fileman!!!"
"^DD",44,44,1928,0)
SATURDAY TEMPLATE^44.0001A^^T6;0
"^DD",44,44,1928,9)
^
"^DD",44,44,1928,21,0)
^^3^3^2920212^^^
"^DD",44,44,1928,21,1,0)
This field contains the patterns and limit dates applicable to scheduling
"^DD",44,44,1928,21,2,0)
appointments on Saturdays.  These fields are overridden by patterns entered
"^DD",44,44,1928,21,3,0)
for a specific (Saturday) date and stored on the "OST" nodes.
"^DD",44,44,1928,"DEL",.01,0)
I '$D(SDSCHED) W !,*7,"You cannot delete this field using fileman!!!"
"^DD",44,44,2000,0)
REQUIRE X-RAY FILMS?^S^Y:YES;^RAD;1^Q
"^DD",44,44,2000,21,0)
^^1^1^2920212^
"^DD",44,44,2000,21,1,0)
Will x-ray films be required for patients scheduled in this clinic?
"^DD",44,44,2000,"DT")
2830916
"^DD",44,44,2000.5,0)
REQUIRE ACTION PROFILES?^RS^0:YES;1:NO;^PS;1^Q
"^DD",44,44,2000.5,21,0)
^^2^2^2920212^
"^DD",44,44,2000.5,21,1,0)
Will pharmacy action profiles be required for patients scheduled in
"^DD",44,44,2000.5,21,2,0)
this clinic?
"^DD",44,44,2000.5,"DT")
2860722
"^DD",44,44,2001,0)
ALLOWABLE CONSECUTIVE NO-SHOWS^RNJ3,0^^SDP;1^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",44,44,2001,3)
TYPE A WHOLE NUMBER BETWEEN 0 AND 999
"^DD",44,44,2001,20,0)
^.3LA
"^DD",44,44,2001,21,0)
^^2^2^2901004^^^^
"^DD",44,44,2001,21,1,0)
This is the number of times in a row that a patient can be a no-show in
"^DD",44,44,2001,21,2,0)
a clinic before he/she is flagged for possible discharge from the clinic.
"^DD",44,44,2001,"DT")
2831216
"^DD",44,44,2002,0)
MAX # DAYS FOR FUTURE BOOKING^RNJ3,0^^SDP;2^K:+X'=X!(X>999)!(X<11)!(X?.E1"."1N.N) X
"^DD",44,44,2002,3)
TYPE A WHOLE NUMBER BETWEEN 11 AND 999
"^DD",44,44,2002,21,0)
^^2^2^2920212^
"^DD",44,44,2002,21,1,0)
Maximum number of days that can be available when clerk searching
"^DD",44,44,2002,21,2,0)
for open clinic slots in the future.
"^DD",44,44,2002,"DT")
2831216
"^DD",44,44,2003,0)
START TIME FOR AUTO REBOOK^NJ2,0X^^SDP;3^K:+X'=X!(X>16)!(X<0)!(X?.E1"."1N.N) X I $D(X),$D(^SC(DA,"SL")) I X<$S('$P(^("SL"),"^",3):8,1:$P(^("SL"),"^",3)) W !,*7,"MUST NOT BE EARLIER THAN CLINIC START TIME" K X
"^DD",44,44,2003,3)
TYPE A WHOLE NUMBER BETWEEN 0 AND 16, ONLY IF REBOOKING IS NOT TO BEGIN AT EARLIEST TIME
"^DD",44,44,2003,21,0)
^^5^5^2920212^
"^DD",44,44,2003,21,1,0)
Start time (hour of day) that should be searched for when user
"^DD",44,44,2003,21,2,0)
auto rebooking an appointment.  For example, if the clinic regularly
"^DD",44,44,2003,21,3,0)
starts at 8am, user may wish to set this parameter to 9am so that
"^DD",44,44,2003,21,4,0)
the next available slot at 9am or later will be stuffed with new
"^DD",44,44,2003,21,5,0)
appointment.
"^DD",44,44,2003,"DT")
2861008
"^DD",44,44,2004,0)
COLLATERAL VISITS? (Y OR N)^RS^Y:YES;N:NO;^0;16^Q
"^DD",44,44,2004,21,0)
^^1^1^2920212^
"^DD",44,44,2004,21,1,0)
Are collateral visits allowed to this clinic? Yes or No
"^DD",44,44,2004,"DT")
2840228
"^DD",44,44,2005,0)
MAX # DAYS FOR AUTO-REBOOK^RNJ3,0^^SDP;4^K:+X'=X!(X>365)!(X<1)!(X?.E1"."1N.N) X
"^DD",44,44,2005,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 365
"^DD",44,44,2005,21,0)
^^6^6^2920212^
"^DD",44,44,2005,21,1,0)
Maximum number of days the system can be set to search up to when
"^DD",44,44,2005,21,2,0)
auto rebooking appointments.  For instance, if an appointment to
"^DD",44,44,2005,21,3,0)
this clinic is cancelled and the latest time that should be allowed
"^DD",44,44,2005,21,4,0)
for rescheduling is a period of two weeks (set parameter), then
"^DD",44,44,2005,21,5,0)
auto rebook function will quit after searching a two week period in
"^DD",44,44,2005,21,6,0)
future for available slots.
"^DD",44,44,2005,"DT")
2840307
"^DD",44,44,2006,0)
*RECORD TRACKING COMMUNICATION^S^M:MESSAGE;N:NOTICE;^R;1^Q
"^DD",44,44,2006,"DT")
2840611
"^DD",44,44,2007,0)
*COMMUNICATION FORMAT^P44.8'^DIC(44.8,^R;2^Q
"^DD",44,44,2007,"DT")
2840612
"^DD",44,44,2008,0)
*RECORD REQUEST DEVICE^F^^R;3^K:$L(X)>20!($L(X)<2) X
"^DD",44,44,2008,3)
ANSWER MUST BE 2-20 CHARACTERS IN LENGTH
"^DD",44,44,2008,"DT")
2840611
"^DD",44,44,2009,0)
*RT AT HOME RETREIVER^P44'^SC(^R;4^Q
"^DD",44,44,2009,"DT")
2840611
"^DD",44,44,2010,0)
*RT NOT AT HOME RETREIVER^P44'^SC(^R;5^Q
"^DD",44,44,2010,"DT")
2840611
"^DD",44,44,2011,0)
*RECORD REQUEST PRIORITY^NJ2,0^^DT;1^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",44,44,2011,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 99
"^DD",44,44,2011,"DT")
2840611
"^DD",44,44,2012,0)
*RECORD APPOINTMENT STATUS^S^1:ASK APPOINTMENT DATE;0:DON'T ASK APPOINTMENT DATE;^DT;2^Q
"^DD",44,44,2012,"DT")
2840611
"^DD",44,44,2500,0)
PROHIBIT ACCESS TO CLINIC?^S^Y:YES;^SDPROT;1^Q
"^DD",44,44,2500,21,0)
^^1^1^2920212^
"^DD",44,44,2500,21,1,0)
Should only privileged users have access to book to this clinic?
"^DD",44,44,2500,"DT")
2840612
"^DD",44,44,2501,0)
PRIVILEGED USER^44.04PA^^SDPRIV;0
"^DD",44,44,2501,21,0)
^^4^4^2920212^^
"^DD",44,44,2501,21,1,0)
Privileged users set up to have access to book to clinic.
"^DD",44,44,2501,21,2,0)
Once one privileged user is entered into this multiple, no other
"^DD",44,44,2501,21,3,0)
user will have access to book to the clinic.  Each individual who
"^DD",44,44,2501,21,4,0)
should have access to clinic must be entered one at a time.
"^DD",44,44,2502,0)
NON-COUNT CLINIC? (Y OR N)^RS^Y:YES;N:NO;^0;17^Q
"^DD",44,44,2502,1,0)
^.1
"^DD",44,44,2502,1,1,0)
^^TRIGGER^44^2502.5
"^DD",44,44,2502,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^SC(D0,0)):^(0),1:"") S X=$P(Y(1),U,21),X=X S DIU=X K Y S X="" X ^DD(44,2502,1,1,1.4)
"^DD",44,44,2502,1,1,1.4)
S DIH=$S($D(^SC(DIV(0),0)):^(0),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,20,99))  S DIH=DIH_U" S %=$P(DIH,U,22,999),DIU=$P(DIH,U,21),^(0)=$P(DIH,U,1,20)_U_DIV_$S(%]"":U_%,1:""),DIH=44,DIG=2502.5 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",44,44,2502,1,1,2)
Q
"^DD",44,44,2502,1,1,"CREATE VALUE")
@
"^DD",44,44,2502,1,1,"DELETE VALUE")
NO EFFECT
"^DD",44,44,2502,1,1,"FIELD")
INCL
"^DD",44,44,2502,3)
If appointments to this clinic should not impact MAS AMIS statistics, answer 'Y'.
"^DD",44,44,2502,21,0)
^^2^2^2920212^
"^DD",44,44,2502,21,1,0)
Is this clinic to be a non-count clinic for workload purposes? OR
"^DD",44,44,2502,21,2,0)
Are visits to this clinic to be included in workload statistics?
"^DD",44,44,2502,"DT")
2840802
"^DD",44,44,2502.5,0)
INCLUDE ON FILE ROOM LISTS?^S^0:NO;1:YES;^0;21^Q
"^DD",44,44,2502.5,5,1,0)
44^2502^1
"^DD",44,44,2502.5,21,0)
^^2^2^2861001^
"^DD",44,44,2502.5,21,1,0)
This field should contain a Yes if this is a non-count clinic that should
"^DD",44,44,2502.5,21,2,0)
be included on the file room lists.
"^DD",44,44,2502.5,"DT")
2861001
"^DD",44,44,2503,0)
CREDIT STOP CODE^*P40.7'^DIC(40.7,^0;18^S DIC("S")="I $P(^(0),U,2)'=900&$S('$P(^(0),U,3):1,$P(^(0),U,3)>DT:1,1:0)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",44,44,2503,1,0)
^.1^^0
"^DD",44,44,2503,3)
Enter the Stop Code which should be credited for an appointment to this clinic (only if Code different than the one assigned to this clinic).
"^DD",44,44,2503,12)
Inactive stop codes are invalid.  Stop code 900 can not be used for a clinic.
"^DD",44,44,2503,12.1)
S DIC("S")="I $P(^(0),U,2)'=900&$S('$P(^(0),U,3):1,$P(^(0),U,3)>DT:1,1:0)"
"^DD",44,44,2503,21,0)
^^3^3^2860801^
"^DD",44,44,2503,21,1,0)
Appointments to this clinic will receive this stop code credit in addition
"^DD",44,44,2503,21,2,0)
to the 'normal' stop code credit if a stop code different from the 'normal'
"^DD",44,44,2503,21,3,0)
stop code for this clinic is entered here.
"^DD",44,44,2503,"DT")
2901004
"^DD",44,44,2503.1,0)
PRV. YEAR CREDIT STOP CODE^P40.7'IX^DIC(40.7,^OC;2^K:X X
"^DD",44,44,2503.1,9)
^
"^DD",44,44,2503.1,21,0)
^^1^1^2920212^
"^DD",44,44,2503.1,21,1,0)
Previous year's credit stop code assigned to clinic.
"^DD",44,44,2503.1,"DT")
2880801
"^DD",44,44,2504,0)
CLINIC MEETS AT THIS FACILITY?^RS^Y:YES;N:NO;^0;19^Q
"^DD",44,44,2504,21,0)
^^1^1^2920212^
"^DD",44,44,2504,21,1,0)
Does clinic meet at designated facility?
"^DD",44,44,2504,"DT")
2840919
"^DD",44,44,2505,0)
INACTIVATE DATE^D^^I;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",44,44,2505,3)
This date will be the date from which this clinic is considered inactive
"^DD",44,44,2505,21,0)
^^1^1^2920212^
"^DD",44,44,2505,21,1,0)
Date clinic was inactivated.
"^DD",44,44,2505,"DT")
2850424
"^DD",44,44,2506,0)
REACTIVATE DATE^D^^I;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",44,44,2506,3)
This date will be the date from which this clinic is considered active again.  It must have been previously inactivated. 
"^DD",44,44,2506,21,0)
^^1^1^2920212^
"^DD",44,44,2506,21,1,0)
Date clinic was reactivated.
"^DD",44,44,2507,0)
DEFAULT APPOINTMENT TYPE^*P409.1'^SD(409.1,^AT;1^S DIC("S")="I '$P(^(0),U,3)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",44,44,2507,12)
Choose from active appointment types.
"^DD",44,44,2507,12.1)
S DIC("S")="I '$P(^(0),U,3)"
"^DD",44,44,2507,21,0)
^^2^2^2920212^
"^DD",44,44,2507,21,1,0)
The default or usual appointment type to be associated with this
"^DD",44,44,2507,21,2,0)
clinic.
"^DD",44,44,2507,"DT")
2880405
"^DD",44,44,2508,0)
NO SHOW LETTER^*P407.5'^VA(407.5,^LTR;1^S DIC("S")="I $P(^(0),""^"",2)=""N""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",44,44,2508,1,0)
^.1
"^DD",44,44,2508,1,1,0)
44^ALTN
"^DD",44,44,2508,1,1,1)
S ^SC("ALTN",$E(X,1,30),DA)=""
"^DD",44,44,2508,1,1,2)
K ^SC("ALTN",$E(X,1,30),DA)
"^DD",44,44,2508,12)
LETTER MUST BE NO-SHOW TYPE
"^DD",44,44,2508,12.1)
S DIC("S")="I $P(^(0),""^"",2)=""N"""
"^DD",44,44,2508,21,0)
^^3^3^2920212^
"^DD",44,44,2508,21,1,0)
Enter the no-show letter to be associated with this clinic, so if
"^DD",44,44,2508,21,2,0)
patient does not show for appointment, this specific no-show letter
"^DD",44,44,2508,21,3,0)
will print as opposed to the generic no-show letter.
"^DD",44,44,2508,"DT")
2900927
"^DD",44,44,2509,0)
PRE-APPOINTMENT LETTER^*P407.5'^VA(407.5,^LTR;2^S DIC("S")="I $P(^(0),""^"",2)=""P""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",44,44,2509,1,0)
^.1
"^DD",44,44,2509,1,1,0)
44^ALTP
"^DD",44,44,2509,1,1,1)
S ^SC("ALTP",$E(X,1,30),DA)=""
"^DD",44,44,2509,1,1,2)
K ^SC("ALTP",$E(X,1,30),DA)
"^DD",44,44,2509,12)
LETTER MUST BE PRE-APPOINTMENT TYPE
"^DD",44,44,2509,12.1)
S DIC("S")="I $P(^(0),""^"",2)=""P"""
"^DD",44,44,2509,21,0)
^^3^3^2920212^
"^DD",44,44,2509,21,1,0)
Enter the pre-appointment letter to be associated with this clinic,
"^DD",44,44,2509,21,2,0)
so if letters are generated, this specific pre-appointment letter
"^DD",44,44,2509,21,3,0)
will print as opposed to the generic pre-appointment letter.
"^DD",44,44,2509,"DT")
2900927
"^DD",44,44,2510,0)
CLINIC CANCELLATION LETTER^*P407.5'^VA(407.5,^LTR;3^S DIC("S")="I $P(^(0),""^"",2)=""C""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",44,44,2510,1,0)
^.1
"^DD",44,44,2510,1,1,0)
44^ALTC
"^DD",44,44,2510,1,1,1)
S ^SC("ALTC",$E(X,1,30),DA)=""
"^DD",44,44,2510,1,1,2)
K ^SC("ALTC",$E(X,1,30),DA)
"^DD",44,44,2510,12)
LETTER MUST BE CLINIC CANCELLATION TYPE
"^DD",44,44,2510,12.1)
S DIC("S")="I $P(^(0),""^"",2)=""C"""
"^DD",44,44,2510,21,0)
^^3^3^2920212^
"^DD",44,44,2510,21,1,0)
Enter the clinic cancellation letter to be associated with this clinic,
"^DD",44,44,2510,21,2,0)
so if clinic is cancelled, this letter will print as opposed to
"^DD",44,44,2510,21,3,0)
generic clinic cancellation letter.
"^DD",44,44,2510,"DT")
2900927
"^DD",44,44,2511,0)
APPT. CANCELLATION LETTER^*P407.5'^VA(407.5,^LTR;4^S DIC("S")="I $P(^(0),""^"",2)=""A""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",44,44,2511,1,0)
^.1
"^DD",44,44,2511,1,1,0)
44^ALTA
"^DD",44,44,2511,1,1,1)
S ^SC("ALTA",$E(X,1,30),DA)=""
"^DD",44,44,2511,1,1,2)
K ^SC("ALTA",$E(X,1,30),DA)
"^DD",44,44,2511,12)
LETTER MUST BE PATIENT CANCELLATION TYPE
"^DD",44,44,2511,12.1)
S DIC("S")="I $P(^(0),""^"",2)=""A"""
"^DD",44,44,2511,21,0)
^^3^3^2920212^
"^DD",44,44,2511,21,1,0)
Enter appointment cancellation letter to be associated with this clinic,
"^DD",44,44,2511,21,2,0)
so if veteran cancels appointment, this letter will print as opposed
"^DD",44,44,2511,21,3,0)
to generic appointment cancellation letter.
"^DD",44,44,2511,"DT")
2900927
"^DD",44,44,2600,0)
PROVIDER^44.1P^^PR;0
"^DD",44,44,2600,21,0)
^^4^4^2930615^^
"^DD",44,44,2600,21,1,0)
Enter in this field the providers associated with this clinic.  These
"^DD",44,44,2600,21,2,0)
providers will then be displayed when updating the provider through
"^DD",44,44,2600,21,3,0)
Appointment Management or Check Out to assist the user in entering
"^DD",44,44,2600,21,4,0)
the correct provider.
"^DD",44,44,2700,0)
DIAGNOSIS^44.11P^^DX;0
"^DD",44,44,2700,21,0)
^^4^4^2930615^^
"^DD",44,44,2700,21,1,0)
Enter in this field the diagnoses associated with this clinic.  These
"^DD",44,44,2700,21,2,0)
diagnoses will then be displayed when updating the diagnosis through
"^DD",44,44,2700,21,3,0)
Appointment Management or Check Out to assist the user in entering
"^DD",44,44,2700,21,4,0)
the correct diagnosis.
"^DD",44,44,2800,0)
TEAM POSITIONS^44.40457PA^^PCMM;0
"^DD",44,44,2800,12)
This ensures that only clinics that are 'associated
"^DD",44,44,2800,12.1)
S DIC("S")="I $D(^SC(Y))#2"
"^DD",44,44,2800,21,0)
^^2^2^2960329^^^^
"^DD",44,44,2800,21,1,0)
This contains one or more team positions that have this clinic as
"^DD",44,44,2800,21,2,0)
an 'ASSOCIATE CLINIC' - defined in the TEAM POSITION (#404.57) File.
"^DD",44,44,2801,0)
DEFAULT TO PC PRACTITIONER?^S^1:YES;0:NO;^PC;1^Q
"^DD",44,44,2801,3)
Should PC Practitioner be default if no default provider?
"^DD",44,44,2801,21,0)
^^3^3^2960329^
"^DD",44,44,2801,21,1,0)
This only is relevant if there is no default provider.  If so, if
"^DD",44,44,2801,21,2,0)
there is a current primary care practitioner for the patient - it will
"^DD",44,44,2801,21,3,0)
be provided as the default provider.
"^DD",44,44,2801,"DT")
2960329
"^DD",44,44.0001,0)
SATURDAY TEMPLATE SUB-FIELD^^1^2
"^DD",44,44.0001,0,"NM","SATURDAY TEMPLATE")

"^DD",44,44.0001,0,"UP")
44
"^DD",44,44.0001,.01,0)
LIMIT DATE^NJ7,0X^^0;1^W:'$D(SDSCHED) *7,!,"No editting of this field allowed through fileman" K:'$D(SDSCHED) X I $D(X) S %DT="EX",Y=X D:X'=9999999 ^%DT S X=$S(X=9999999:X,1:Y) K:Y<1 X I $D(X) S DINUM=X
"^DD",44,44.0001,.01,3)
ENTER A DATE OR 9999999 TO INDICATE THE PATTERN IS IN EFFECT FOREVER
"^DD",44,44.0001,.01,21,0)
^^5^5^2860801^^^
"^DD",44,44.0001,.01,21,1,0)
The pattern stored at this date is applicable for Saturdays from the previous
"^DD",44,44.0001,.01,21,2,0)
entry's date up to but not including this date.  If there is no previous
"^DD",44,44.0001,.01,21,3,0)
entry date, this date is the first Saturday when appointments may be made to
"^DD",44,44.0001,.01,21,4,0)
this clinic.  If the date equals 9999999, this pattern is effective
"^DD",44,44.0001,.01,21,5,0)
indefinitely for Saturdays from the previous entry date.
"^DD",44,44.0001,.01,"DEL",1,0)
I '$D(SDSCHED) W !,*7,"You cannot delete this field using fileman!!!"
"^DD",44,44.0001,.01,"DT")
2860801
"^DD",44,44.0001,1,0)
MASTER PATTERN^F^^1;E1,80^K:$L(X)>80!($L(X)<3)!'(X?.E1"[".E!(X="")) X
"^DD",44,44.0001,1,3)
ANSWER MUST BE 3 TO 80 CHARACTERS IN LENGTH
"^DD",44,44.0001,1,21,0)
^^1^1^2920212^
"^DD",44,44.0001,1,21,1,0)
Master pattern set up for clinic for saturdays.
"^DD",44,44.0001,1,"DEL",1,0)
I '$D(SDSCHED) W !,*7,"You cannot delete this field using fileman!!!"
"^DD",44,44.0001,1,"DT")
2860801
"^DD",44,44.0002,0)
SPECIAL PATTERN SUB-FIELD^^1^2
"^DD",44,44.0002,0,"NM","SPECIAL PATTERN")

"^DD",44,44.0002,0,"UP")
44
"^DD",44,44.0002,.01,0)
PATTERN DATE^DX^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X I $D(X) S DINUM=X
"^DD",44,44.0002,.01,3)

"^DD",44,44.0002,.01,21,0)
^^1^1^2920212^
"^DD",44,44.0002,.01,21,1,0)
Date a particular pattern was established by user.
"^DD",44,44.0002,.01,"DT")
2860801
"^DD",44,44.0002,1,0)
ORIGINAL AVAILABILITY^F^^1;E1,90^K:$L(X)>90!($L(X)<2)!'(X?.E1"[".E!(X="")) X
"^DD",44,44.0002,1,3)
ANSWER MUST BE 2-90 CHARACTERS IN LENGTH
"^DD",44,44.0002,1,21,0)
^^1^1^2920212^
"^DD",44,44.0002,1,21,1,0)
First or original availability pattern set up for a clinic.
"^DD",44,44.0002,1,"DT")
2860801
"^DD",44,44.001,0)
APPOINTMENT SUB-FIELD^NL^1400^3
"^DD",44,44.001,0,"DT")
2930504
"^DD",44,44.001,0,"IX","ANT",44.003,309)

"^DD",44,44.001,0,"NM","APPOINTMENT")

"^DD",44,44.001,0,"UP")
44
"^DD",44,44.001,.01,0)
APPOINTMENT DATE/TIME^MDX^^0;1^I X K X W !,"This node may not be set through fileman!!" I $D(X) S %DT="ETX" D ^%DT S X=Y,DINUM=Y K:DT+20000<X!(DT>X) X,DINUM
"^DD",44,44.001,.01,1,0)
^.1^^0
"^DD",44,44.001,.01,3)
TYPE A DATE BETWEEN DT AND DT+2000
"^DD",44,44.001,.01,21,0)
^^1^1^2920212^
"^DD",44,44.001,.01,21,1,0)
Date/time of a veteran's appointment to an outpatient clinic.
"^DD",44,44.001,.01,"DT")
2860801
"^DD",44,44.001,2,0)
PATIENT^44.003PA^^1;0
"^DD",44,44.001,2,21,0)
^^1^1^2920212^
"^DD",44,44.001,2,21,1,0)
Patient for whom this data relates.
"^DD",44,44.001,1400,0)
MESSAGE^F^^MES;1^K:$L(X)>80!($L(X)<2) X
"^DD",44,44.001,1400,3)
ANSWER MUST BE 2-80 CHARACTERS IN LENGTH
"^DD",44,44.001,1400,21,0)
^^3^3^2920212^
"^DD",44,44.001,1400,21,1,0)
Message generated when clerk attempting to make appointment and
"^DD",44,44.001,1400,21,2,0)
patient has appointment same day in another or same clinic to
"^DD",44,44.001,1400,21,3,0)
alert them of same.
"^DD",44,44.002,0)
AVAILABILITY SUB-FIELD^NL^4^4
"^DD",44,44.002,0,"NM","AVAILABILITY")

"^DD",44,44.002,0,"UP")
44
"^DD",44,44.002,.01,0)
AVAILABILITY^MDX^^0;1^S %DT="EX" D ^%DT S X=Y,DINUM=Y K:Y<DT!(Y-10000>DT) X,DINUM
"^DD",44,44.002,.01,3)
NOT LESS THAN TODAY OR GREATER THAN 1 YEAR FROM NOW
"^DD",44,44.002,.01,21,0)
^^1^1^2920212^
"^DD",44,44.002,.01,21,1,0)
Clinic availability information.
"^DD",44,44.002,2,0)
SCHEDULE TIME^44.004A^^2;0
"^DD",44,44.002,2,21,0)
^^1^1^2920212^^
"^DD",44,44.002,2,21,1,0)
Time slots or pattern scheduled for a specific clinic.
"^DD",44,44.002,3,0)
DAY OF WEEK^CJ15^^ ; ^S Y(44.002,3,1)=$S($D(^SC(D0,"T",D1,0)):^(0),1:"") S X=$P(Y(44.002,3,1),U,1) D DW^%DTC S X=X
"^DD",44,44.002,3,9)
^
"^DD",44,44.002,3,9.01)
44.002^.01
"^DD",44,44.002,3,9.1)
DAYOFWEEK(AVAILABILITY)
"^DD",44,44.002,3,21,0)
^^1^1^2920212^
"^DD",44,44.002,3,21,1,0)
Day(s) of week clinic is scheduled to meet.
"^DD",44,44.002,4,0)
NUMBEROFDAY^CJ1^^ ; ^S Y(44.002,4,1)=$S($D(^SC(D0,"T",D1,0)):^(0),1:"") S X=$P(Y(44.002,4,1),U,1) D H^%DTC S X=%Y S X=X
"^DD",44,44.002,4,9)
^
"^DD",44,44.002,4,9.01)
44.002^.01
"^DD",44,44.002,4,9.1)
SDNUMBEROFDAY(AVAILABILITY)
"^DD",44,44.002,4,21,0)
^^1^1^2920212^
"^DD",44,44.002,4,21,1,0)
Number of days per week clinic is scheduled to meet.
"^DD",44,44.002,4,"DT")
2840417
"^DD",44,44.003,0)
PATIENT SUB-FIELD^NL^999^31
"^DD",44,44.003,0,"DT")
2930504
"^DD",44,44.003,0,"IX","ANT1",44.003,303)

"^DD",44,44.003,0,"IX","ASDPSD",44.003,.01)

"^DD",44,44.003,0,"NM","PATIENT")

"^DD",44,44.003,0,"UP")
44.001
"^DD",44,44.003,.01,0)
PATIENT^MP2'^DPT(^0;1^Q
"^DD",44,44.003,.01,1,0)
^.1
"^DD",44,44.003,.01,1,1,0)
44.003^ASDPSD^MUMPS
"^DD",44,44.003,.01,1,1,1)
S SC=DA(2),DFN=X,SD=DA(1) D EN1^SDM3 K SC,SD
"^DD",44,44.003,.01,1,1,2)
D EN1K^SDM3 K SDY,SDIV
"^DD",44,44.003,.01,21,0)
^^1^1^2920212^
"^DD",44,44.003,.01,21,1,0)
Patient for whom appointment data relates.
"^DD",44,44.003,.01,"DT")
2860730
"^DD",44,44.003,.09,0)
SSN^CJ9^^ ; ^X ^DD(44.003,.09,9.2) S X=$P(Y(.09,101),U,9) S D0=Y(.09,2)
"^DD",44,44.003,.09,9)
^
"^DD",44,44.003,.09,9.01)
2^.09;44.003^.01
"^DD",44,44.003,.09,9.1)
PATIENT:SSN
"^DD",44,44.003,.09,9.2)
S Y(.09,2)=$S($D(D0):D0,1:""),Y(.09,1)=$S($D(^SC(D0,"S",D1,1,D2,0)):^(0),1:""),D0=$P(Y(.09,1),U,1) S:'$D(^DPT(+D0,0)) D0=-1 S Y(.09,101)=$S($D(^DPT(D0,0)):^(0),1:"")
"^DD",44,44.003,.09,21,0)
^^2^2^2920212^
"^DD",44,44.003,.09,21,1,0)
Social Security number of the patient for whom appointment data
"^DD",44,44.003,.09,21,2,0)
relates.
"^DD",44,44.003,.099,0)
TERMINAL DIGITS^CJ4^^ ; ^X $P(^DD(44.003,.09,0),U,5,99) S Y(.099,1)=X S X=Y(.099,1),Y(.099,2)=X S X=6,Y(.099,3)=X S X=9,X=$E(Y(.099,2),Y(.099,3),X)
"^DD",44,44.003,.099,9)
^
"^DD",44,44.003,.099,9.01)
44.003^.09
"^DD",44,44.003,.099,9.1)
$E(SSN,6,9)
"^DD",44,44.003,.099,21,0)
^^1^1^2920212^^
"^DD",44,44.003,.099,21,1,0)
Computed field which determines the last four digits of the SSN.
"^DD",44,44.003,.11,0)
STREET^CJ30^^ ; ^X ^DD(44.003,.11,9.2) S X=$P(Y(.11,101),U,1) S D0=Y(.11,2)
"^DD",44,44.003,.11,9)
^
"^DD",44,44.003,.11,9.01)
2^.111;44.003^.01
"^DD",44,44.003,.11,9.1)
PATIENT:STREET ADDRESS
"^DD",44,44.003,.11,9.2)
S Y(.11,2)=$S($D(D0):D0,1:""),Y(.11,1)=$S($D(^SC(D0,"S",D1,1,D2,0)):^(0),1:""),D0=$P(Y(.11,1),U,1) S:'$D(^DPT(+D0,0)) D0=-1 S Y(.11,101)=$S($D(^DPT(D0,.11)):^(.11),1:"")
"^DD",44,44.003,.11,21,0)
^^1^1^2920212^
"^DD",44,44.003,.11,21,1,0)
First line street address of the patient.
"^DD",44,44.003,1,0)
LENGTH OF APP'T^NJ3,0^^0;2^K:+X'=X!(X>120)!(X<5)!(X?.E1"."1N.N) X
"^DD",44,44.003,1,3)
TYPE A WHOLE NUMBER BETWEEN 5 AND 120
"^DD",44,44.003,1,21,0)
^^1^1^2920212^
"^DD",44,44.003,1,21,1,0)
Length of appointment in minutes (i.e. 15-60).
"^DD",44,44.003,1.6,0)
ENROLLMENT CODE^CJ8^^ ; ^S I=$S($D(^SC(D0,"SL")):+$P(^("SL"),U,5),1:0),X="",Y=+^("S",D1,1,D2,0) X "F %=0:0 S %=$N(^DPT(Y,""DE"",%)) Q:'$D(^(%,0))  I +^(0)=Y&Y!(+^(0)=D0) S X=$P(^(0),U,3) Q"
"^DD",44,44.003,1.6,9)
^
"^DD",44,44.003,1.6,9.01)

"^DD",44,44.003,1.6,9.1)
S I=$S($D(^SC(D0,"SL")):+$P(^("SL"),U,5),1:0),X="",Y=+^("S",D1,1,D2,0) X "F %=0:0 S %=$N(^DPT(Y,""DE"",%)) Q:'$D(^(%,0))  I +^(0)=Y&Y!(+^(0)=D0) S X=$P(^(0),U,3) Q"
"^DD",44,44.003,1.6,21,0)
^^1^1^2920212^^
"^DD",44,44.003,1.6,21,1,0)
Computed enrollment code assigned a patient for outpatient care.
"^DD",44,44.003,1.7,0)
ENROLLMENT DATE^CD8^^ ; ^S I=$S($D(^SC(D0,"SL")):+$P(^("SL"),U,5),1:0),X="",Y=+^("S",D1,1,D2,0) X "F %=0:0 S %=$N(^DPT(Y,""DE"",%)) Q:'$D(^(%,0))  I +^(0)=Y&Y!(+^(0)=D0) S X=$P(^(0),U,2) Q"
"^DD",44,44.003,1.7,9)
^
"^DD",44,44.003,1.7,9.01)

"^DD",44,44.003,1.7,9.1)
S I=$S($D(^SC(D0,"SL")):+$P(^("SL"),U,5),1:0),X="",Y=+^("S",D1,1,D2,0) X "F %=0:0 S %=$N(^DPT(Y,""DE"",%)) Q:'$D(^(%,0))  I +^(0)=Y&Y!(+^(0)=D0) S X=$P(^(0),U,2) Q"
"^DD",44,44.003,1.7,21,0)
^^1^1^2920212^
"^DD",44,44.003,1.7,21,1,0)
Date patient was enrolled in a clinic.
"^DD",44,44.003,2,0)
XRAY^F^^0;3^K:$L(X)>20!($L(X)<1) X
"^DD",44,44.003,2,3)
ANSWER MUST BE 1-20 CHARACTERS IN LENGTH
"^DD",44,44.003,2,21,0)
^^1^1^2920212^^
"^DD",44,44.003,2,21,1,0)
X-ray  ordered in association with an appointment.
"^DD",44,44.003,3,0)
OTHER^F^^0;4^K:$L(X)>20!($L(X)<1) X
"^DD",44,44.003,3,3)
ANSWER MUST BE 1-20 CHARACTERS IN LENGTH
"^DD",44,44.003,3,21,0)
^^1^1^2920212^
"^DD",44,44.003,3,21,1,0)
Any other tests ordered in association with an appointment
"^DD",44,44.003,4,0)
WARD LOC^F^^0;5^K:$L(X)>25!($L(X)<1) X
"^DD",44,44.003,4,3)
ANSWER MUST BE 1-25 CHARACTERS IN LENGTH
"^DD",44,44.003,4,21,0)
^^1^1^2920212^
"^DD",44,44.003,4,21,1,0)
Ward location of patient if an inpatient at the time of appointment.
"^DD",44,44.003,5,0)
STATUS^CJ8X^^ ; ^S Y(5,1)=$S($D(^SC(D0,"S",D1,1,D2,0)):^(0),1:"") S X=$P(Y(5,1),U,5) X "F Y=0:0 S Y=$N(^DPT(+Y(5,1),""DE"",Y)),X=$S(X]"""":X,'$D(^(Y,0)):X,^(0)-D0:X,1:$P(^(0),U,3)) Q:Y'>0" K Y
"^DD",44,44.003,5,9)
^
"^DD",44,44.003,5,9.01)
44.003^4
"^DD",44,44.003,5,9.1)
WARD LOC_0
"^DD",44,44.003,5,21,0)
^^1^1^2920212^
"^DD",44,44.003,5,21,1,0)
Status of appointment, i.e. scheduled, unscheduled, cancelled, etc.
"^DD",44,44.003,5,"DT")
2830401
"^DD",44,44.003,6,0)
OTHER, TRAVEL^CJ30^^ ; ^S Y(6,1)=$S($D(^SC(D0,"S",D1,1,D2,0)):^(0),1:"") S X=$P(Y(6,1),U,3)_"  "_$P(Y(6,1),U,4)
"^DD",44,44.003,6,9)
^
"^DD",44,44.003,6,9.01)
44.003^3;44.003^2
"^DD",44,44.003,6,9.1)
XRAY_"  "_OTHER
"^DD",44,44.003,6,21,0)
^^1^1^2920212^
"^DD",44,44.003,6,21,1,0)
Other information, i.e. travel in association with this appointment.
"^DD",44,44.003,7,0)
DATA ENTRY CLERK^P200'^VA(200,^0;6^Q
"^DD",44,44.003,7,3)

"^DD",44,44.003,7,21,0)
^^1^1^2920212^
"^DD",44,44.003,7,21,1,0)
Clerk who entered the appointment.
"^DD",44,44.003,7,"DT")
2901017
"^DD",44,44.003,8,0)
DATE APPOINTMENT MADE^D^^0;7^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",44,44.003,8,1,0)
^.1^^0
"^DD",44,44.003,8,21,0)
^^1^1^2920212^
"^DD",44,44.003,8,21,1,0)
Date/time appointment was placed into the package.
"^DD",44,44.003,8,"DT")
2920409
"^DD",44,44.003,9,0)
OVERBOOK^S^O:OVERBOOK;^OB;1^Q
"^DD",44,44.003,9,21,0)
^^2^2^2920212^
"^DD",44,44.003,9,21,1,0)
Was this appointment an overbook, or scheduled over the maximum number
"^DD",44,44.003,9,21,2,0)
of appointments allowed for that day/slot.
"^DD",44,44.003,10,0)
PRIOR X-RAY RESULTS TO CLINIC?^S^Y:YES;^0;8^Q
"^DD",44,44.003,10,1,0)
^.1
"^DD",44,44.003,10,1,1,0)
44^ARAD^MUMPS
"^DD",44,44.003,10,1,1,1)
S:X["Y" ^SC("ARAD",DA(2),DA(1),DA)=""
"^DD",44,44.003,10,1,1,2)
K ^SC("ARAD",DA(2),DA(1),DA)
"^DD",44,44.003,10,3)
Enter a "Y" if the patient's prior x-ray results should be sent to the clinic on the day of the patient's appointment.
"^DD",44,44.003,10,21,0)
^^2^2^2960507^^
"^DD",44,44.003,10,21,1,0)
Are prior x-ray results required to be sent to clinic at time of
"^DD",44,44.003,10,21,2,0)
appointment?
"^DD",44,44.003,10,"DT")
2860801
"^DD",44,44.003,10.5,0)
CURRENT ELIGIBILITY CODE^CJ10^^ ; ^X ^DD(44.003,10.5,9.2) S Y(44.003,10.5,101)=$S($D(^DPT(D0,.36)):^(.36),1:"") S X=$S('$D(^DIC(8,+$P(Y(44.003,10.5,101),U,1),0)):"",1:$P(^(0),U,1)) S D0=Y(44.003,10.5,2)
"^DD",44,44.003,10.5,9)
^
"^DD",44,44.003,10.5,9.01)
2^.361;44.003^.01
"^DD",44,44.003,10.5,9.1)
PATIENT:ELIGIBILITY
"^DD",44,44.003,10.5,9.2)
S Y(44.003,10.5,2)=$S($D(D0):D0,1:""),Y(44.003,10.5,1)=$S($D(^SC(D0,"S",D1,1,D2,0)):^(0),1:""),D0=$P(Y(44.003,10.5,1),U,1) S:'$D(^DPT(+D0,0)) D0=-1
"^DD",44,44.003,10.5,21,0)
^^2^2^2920706^^
"^DD",44,44.003,10.5,21,1,0)
Patient's current eligibility code as assigned in the Registration
"^DD",44,44.003,10.5,21,2,0)
portion of ADT.
"^DD",44,44.003,11,0)
COLLATERAL^CJ10^^ ; ^X ^DD(44.003,11,9.2) S X=$S(Y(44.003,11,2):Y(44.003,11,3),Y(44.003,11,4):X)
"^DD",44,44.003,11,9)
^
"^DD",44,44.003,11,9.01)
44.003^10.5
"^DD",44,44.003,11,9.1)
$S(#10.5["COLLATERAL":"COLLATERAL",1:"")
"^DD",44,44.003,11,9.2)
X $P(^DD(44.003,10.5,0),U,5,99) S Y(44.003,11,1)=X S X=Y(44.003,11,1)["COLLATERAL",Y(44.003,11,2)=X S X="COLLATERAL",Y(44.003,11,3)=X S X=1,Y(44.003,11,4)=X S X=""
"^DD",44,44.003,11,21,0)
^^1^1^2920212^
"^DD",44,44.003,11,21,1,0)
Is this appointment for a collateral of a veteran?
"^DD",44,44.003,12,0)
LAB TIME^CJ8^^ ; ^S X=$S($D(^SC(D0,"S",D1,1,D2,0)):^(0),1:""),Y=$P(X,"^",1) I X]"" S X=$S($P(^DPT(Y,"S",D1,0),"^",3)]"":$P(^(0),"^",3),1:"") Q:X=""  X ^DD("FUNC",2,1)
"^DD",44,44.003,12,9)
^
"^DD",44,44.003,12,9.01)

"^DD",44,44.003,12,9.1)
S X=$S($D(^SC(D0,"S",D1,1,D2,0)):^(0),1:""),Y=$P(X,"^",1) I X]"" S X=$S($P(^DPT(Y,"S",D1,0),"^",3)]"":$P(^(0),"^",3),1:"") Q:X=""  X ^DD("FUNC",2,1)
"^DD",44,44.003,12,21,0)
^^1^1^2920212^
"^DD",44,44.003,12,21,1,0)
Date/time lab work scheduled.
"^DD",44,44.003,13,0)
XRAY TIME^CJ8^^ ; ^S X=$S($D(^SC(D0,"S",D1,1,D2,0)):^(0),1:""),Y=$P(X,"^",1) I X]"" S X=$S($P(^DPT(Y,"S",D1,0),"^",4)]"":$P(^(0),"^",4),1:"") Q:X=""  X ^DD("FUNC",2,1)
"^DD",44,44.003,13,9)
^
"^DD",44,44.003,13,9.01)

"^DD",44,44.003,13,9.1)
S X=$S($D(^SC(D0,"S",D1,1,D2,0)):^(0),1:""),Y=$P(X,"^",1) I X]"" S X=$S($P(^DPT(Y,"S",D1,0),"^",4)]"":$P(^(0),"^",4),1:"") Q:X=""  X ^DD("FUNC",2,1)
"^DD",44,44.003,13,21,0)
^^1^1^2920212^
"^DD",44,44.003,13,21,1,0)
Date/time x-ray scheduled.
"^DD",44,44.003,14,0)
EKG TIME^CJ8^^ ; ^S X=$S($D(^SC(D0,"S",D1,1,D2,0)):^(0),1:""),Y=$P(X,"^",1) I X]"" S X=$S($P(^DPT(Y,"S",D1,0),"^",5)]"":$P(^(0),"^",5),1:"") Q:X=""  X ^DD("FUNC",2,1)
"^DD",44,44.003,14,9)
^
"^DD",44,44.003,14,9.01)

"^DD",44,44.003,14,9.1)
S X=$S($D(^SC(D0,"S",D1,1,D2,0)):^(0),1:""),Y=$P(X,"^",1) I X]"" S X=$S($P(^DPT(Y,"S",D1,0),"^",5)]"":$P(^(0),"^",5),1:"") Q:X=""  X ^DD("FUNC",2,1)
"^DD",44,44.003,14,21,0)
^^1^1^2920212^
"^DD",44,44.003,14,21,1,0)
Date/time EKG procedure scheduled.
"^DD",44,44.003,30,0)
ELIGIBILITY OF VISIT^*P8'X^DIC(8,^0;10^S DIC("S")="I '$P(^(0),""^"",7)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",44,44.003,30,3)

"^DD",44,44.003,30,5,1,0)
44.003^309^3
"^DD",44,44.003,30,5,2,0)
44.003^303^3
"^DD",44,44.003,30,12)
The eligibility code entered here must be non-veteran
"^DD",44,44.003,30,12.1)
S DIC("S")="I $P(^(0),""^"",5)=""N"""
"^DD",44,44.003,30,21,0)
^^4^4^2920706^^^^
"^DD",44,44.003,30,21,1,0)
This field was previously called NON-VETERAN VISIT ELIGIBILITY.  It now
"^DD",44,44.003,30,21,2,0)
contains the eligibility being used at the time of the appointment.  If
"^DD",44,44.003,30,21,3,0)
a patient has Other Entitled Eligibilities (replaces Dual Status), the
"^DD",44,44.003,30,21,4,0)
appointment options will prompt for eligibility and be set here.
"^DD",44,44.003,30,23,0)
^^3^3^2920706^^
"^DD",44,44.003,30,23,1,0)
This field is automatically filled in when the CHECKED-IN
"^DD",44,44.003,30,23,2,0)
field(#309) is entered.  However, this will only occur if the
"^DD",44,44.003,30,23,3,0)
the field is blank.
"^DD",44,44.003,30,"DT")
2890115
"^DD",44,44.003,200,0)
PARENT RECORD REQUEST #^*P190.1'^RTV(190.1,^RTR;1^S DIC("S")="I $D(DA),$D(DA(1)),$D(DA(2)),$D(^RT(+^(0),0)),$P(^(0),U)=+^SC(DA(2),""S"",DA(1),1,DA,0)_"";DPT(""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",44,44.003,200,12)
Allows only requests that belong to the current patient.
"^DD",44,44.003,200,12.1)
S DIC("S")="I $D(DA),$D(DA(1)),$D(DA(2)),$D(^RT(+^(0),0)),$P(^(0),U)=+^SC(DA(2),""S"",DA(1),1,DA,0)_"";DPT("""
"^DD",44,44.003,200,21,0)
^^17^17^2860917^^
"^DD",44,44.003,200,21,1,0)
This field contains the request number from the record tracking system.
"^DD",44,44.003,200,21,2,0)
It will only have a request number if the clinic requires records
"^DD",44,44.003,200,21,3,0)
for an appointment and if the site is utilitizing the record tracking
"^DD",44,44.003,200,21,4,0)
module.
"^DD",44,44.003,200,21,5,0)
 
"^DD",44,44.003,200,21,6,0)
The request number represents the 'parent' request for records. This
"^DD",44,44.003,200,21,7,0)
parent request may then, in turn, indicate that more than one record 
"^DD",44,44.003,200,21,8,0)
request is associated with this appointment. For example, if the patient's
"^DD",44,44.003,200,21,9,0)
medical record has two volumes then there maybe a request issued for each
"^DD",44,44.003,200,21,10,0)
volume.
"^DD",44,44.003,200,21,11,0)
 
"^DD",44,44.003,200,21,12,0)
The request for volume 1 maybe the initial(parent) request and the
"^DD",44,44.003,200,21,13,0)
request for the second volume would have volumes 1's request as its
"^DD",44,44.003,200,21,14,0)
parent.
"^DD",44,44.003,200,21,15,0)
 
"^DD",44,44.003,200,21,16,0)
Also, requests for x-ray film folders, dental records etc. maybe linked
"^DD",44,44.003,200,21,17,0)
to this parent request.
"^DD",44,44.003,200,"DT")
2860917
"^DD",44,44.003,302,0)
CHECK IN USER^P200'^VA(200,^C;2^Q
"^DD",44,44.003,302,5,1,0)
44.003^309^1
"^DD",44,44.003,302,9)
^
"^DD",44,44.003,302,21,0)
^^3^3^2920303^^
"^DD",44,44.003,302,21,1,0)
This field contains the user who checked in the patient
"^DD",44,44.003,302,21,2,0)
for the appointment.  It is automatically filled in when the
"^DD",44,44.003,302,21,3,0)
CHECKED-IN field(#309) is entered.
"^DD",44,44.003,302,"DT")
2911031
"^DD",44,44.003,303,0)
CHECKED OUT^DX^^C;3^S %DT="ETXR",%DT(0)="-NOW" D ^%DT S X=Y K:Y<1 X I $D(X),+$G(^SC(DA(2),"S",DA(1),1,DA,"C")),X<^("C") K X
"^DD",44,44.003,303,1,0)
^.1
"^DD",44,44.003,303,1,1,0)
^^TRIGGER^44.003^304
"^DD",44,44.003,303,1,1,1)
K DIV S DIV=X,D0=DA(2),DIV(0)=D0,D1=DA(1),DIV(1)=D1,D2=DA,DIV(2)=D2 S Y(0)=X S X=$S('$D(DIU(0)):1,1:0) I X S X=DIV S Y(1)=$S($D(^SC(D0,"S",D1,1,D2,"C")):^("C"),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(44.003,303,1,1,1.4)
"^DD",44,44.003,303,1,1,1.4)
S DIH=$S($D(^SC(DIV(0),"S",DIV(1),1,DIV(2),"C")):^("C"),1:""),DIV=X S $P(^("C"),U,4)=DIV,DIH=44.003,DIG=304 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",44,44.003,303,1,1,2)
K DIV S DIV=X,D0=DA(2),DIV(0)=D0,D1=DA(1),DIV(1)=D1,D2=DA,DIV(2)=D2 S Y(0)=X S X=$S('$D(DIU(0)):1,1:0) I X S X=DIV S Y(1)=$S($D(^SC(D0,"S",D1,1,D2,"C")):^("C"),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" X ^DD(44.003,303,1,1,2.4)
"^DD",44,44.003,303,1,1,2.4)
S DIH=$S($D(^SC(DIV(0),"S",DIV(1),1,DIV(2),"C")):^("C"),1:""),DIV=X S $P(^("C"),U,4)=DIV,DIH=44.003,DIG=304 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",44,44.003,303,1,1,"CREATE CONDITION")
S X=$S('$D(DIU(0)):1,1:0)
"^DD",44,44.003,303,1,1,"CREATE VALUE")
S X=DUZ
"^DD",44,44.003,303,1,1,"DELETE CONDITION")
S X=$S('$D(DIU(0)):1,1:0)
"^DD",44,44.003,303,1,1,"DELETE VALUE")
@
"^DD",44,44.003,303,1,1,"DT")
2930722
"^DD",44,44.003,303,1,1,"FIELD")
CHECK OUT USER
"^DD",44,44.003,303,1,2,0)
^^TRIGGER^44.003^306
"^DD",44,44.003,303,1,2,1)
X ^DD(44.003,303,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^SC(D0,"S",D1,1,D2,"C")):^("C"),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y X ^DD(44.003,303,1,2,1.1) X ^DD(44.003,303,1,2,1.4)
"^DD",44,44.003,303,1,2,1.1)
S X=DIV S %=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100)
"^DD",44,44.003,303,1,2,1.3)
K DIV S DIV=X,D0=DA(2),DIV(0)=D0,D1=DA(1),DIV(1)=D1,D2=DA,DIV(2)=D2 S Y(0)=X S X=$S('$D(DIU(0)):1,1:0)
"^DD",44,44.003,303,1,2,1.4)
S DIH=$S($D(^SC(DIV(0),"S",DIV(1),1,DIV(2),"C")):^("C"),1:""),DIV=X S $P(^("C"),U,6)=DIV,DIH=44.003,DIG=306 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",44,44.003,303,1,2,2)
K DIV S DIV=X,D0=DA(2),DIV(0)=D0,D1=DA(1),DIV(1)=D1,D2=DA,DIV(2)=D2 S Y(0)=X S X=$S('$D(DIU(0)):1,1:0) I X S X=DIV S Y(1)=$S($D(^SC(D0,"S",D1,1,D2,"C")):^("C"),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(44.003,303,1,2,2.4)
"^DD",44,44.003,303,1,2,2.4)
S DIH=$S($D(^SC(DIV(0),"S",DIV(1),1,DIV(2),"C")):^("C"),1:""),DIV=X S $P(^("C"),U,6)=DIV,DIH=44.003,DIG=306 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",44,44.003,303,1,2,"%D",0)
^^1^1^2930723^
"^DD",44,44.003,303,1,2,"%D",1,0)
This trigger records when the check out date/time was entered into the system.
"^DD",44,44.003,303,1,2,"%D",2,0)
into the system.
"^DD",44,44.003,303,1,2,"CREATE CONDITION")
S X=$S('$D(DIU(0)):1,1:0)
"^DD",44,44.003,303,1,2,"CREATE VALUE")
NOW
"^DD",44,44.003,303,1,2,"DELETE CONDITION")
S X=$S('$D(DIU(0)):1,1:0)
"^DD",44,44.003,303,1,2,"DELETE VALUE")
@
"^DD",44,44.003,303,1,2,"DT")
2930722
"^DD",44,44.003,303,1,2,"FIELD")
#306
"^DD",44,44.003,303,1,3,0)
^^TRIGGER^44.003^30
"^DD",44,44.003,303,1,3,1)
X ^DD(44.003,303,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^SC(D0,"S",D1,1,D2,0)):^(0),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y X ^DD(44.003,303,1,3,1.1) X ^DD(44.003,303,1,3,1.4)
"^DD",44,44.003,303,1,3,1.1)
S X=DIV S X=$S($D(^DPT(+^SC(DA(2),"S",DA(1),1,DA,0),.36)):+^(.36),1:0),X=$S('$D(^DIC(8,X,0)):"",$P(^(0),U,4)=6:"",1:X)
"^DD",44,44.003,303,1,3,1.3)
K DIV S DIV=X,D0=DA(2),DIV(0)=D0,D1=DA(1),DIV(1)=D1,D2=DA,DIV(2)=D2 S Y(0)=X S X=($P(^SC(DA(2),"S",DA(1),1,DA,0),U,10)="")
"^DD",44,44.003,303,1,3,1.4)
S DIH=$S($D(^SC(DIV(0),"S",DIV(1),1,DIV(2),0)):^(0),1:""),DIV=X S $P(^(0),U,10)=DIV,DIH=44.003,DIG=30 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",44,44.003,303,1,3,2)
Q
"^DD",44,44.003,303,1,3,"%D",0)
^^7^7^2930311^
"^DD",44,44.003,303,1,3,"%D",1,0)
This trigger will stuff the patient's PRIMARY ELIGIBILITY CODE into
"^DD",44,44.003,303,1,3,"%D",2,0)
the ELIGIBILITY OF VISIT field when the appointment is checked out.
"^DD",44,44.003,303,1,3,"%D",3,0)
 
"^DD",44,44.003,303,1,3,"%D",4,0)
The only exceptions are the following:
"^DD",44,44.003,303,1,3,"%D",5,0)
 
"^DD",44,44.003,303,1,3,"%D",6,0)
         o if the ELIGIBILITY OF VISIT filed is already filled in
"^DD",44,44.003,303,1,3,"%D",7,0)
         o if the PRIMARY ELIGIBILITY CODE is DOM
"^DD",44,44.003,303,1,3,"CREATE CONDITION")
S X=($P(^SC(DA(2),"S",DA(1),1,DA,0),U,10)="")
"^DD",44,44.003,303,1,3,"CREATE VALUE")
S X=$S($D(^DPT(+^SC(DA(2),"S",DA(1),1,DA,0),.36)):+^(.36),1:0),X=$S('$D(^DIC(8,X,0)):"",$P(^(0),U,4)=6:"",1:X)
"^DD",44,44.003,303,1,3,"DELETE VALUE")
NO EFFECT
"^DD",44,44.003,303,1,3,"DT")
2930311
"^DD",44,44.003,303,1,3,"FIELD")
ELIGIBILITY OF VISIT
"^DD",44,44.003,303,1,4,0)
44.003^ANT1^MUMPS
"^DD",44,44.003,303,1,4,1)
D CO^SDM1A(DA(2),DA(1),DA,"SET")
"^DD",44,44.003,303,1,4,2)
D CO^SDM1A(DA(2),DA(1),DA,"KILL")
"^DD",44,44.003,303,1,4,"%D",0)
^^2^2^2930311^
"^DD",44,44.003,303,1,4,"%D",1,0)
This MUMPS cross reference updates the appointment status field
"^DD",44,44.003,303,1,4,"%D",2,0)
in the patient file.
"^DD",44,44.003,303,1,4,"DT")
2930311
"^DD",44,44.003,303,3)
Enter the date the patient was checked out. The date must be after the check in date.
"^DD",44,44.003,303,21,0)
^^2^2^2911031^
"^DD",44,44.003,303,21,1,0)
This field contains the date and time the patient was checked out
"^DD",44,44.003,303,21,2,0)
of the appointment.
"^DD",44,44.003,303,"DT")
2930722
"^DD",44,44.003,304,0)
CHECK OUT USER^P200'^VA(200,^C;4^Q
"^DD",44,44.003,304,5,1,0)
44.003^303^1
"^DD",44,44.003,304,9)
^
"^DD",44,44.003,304,21,0)
^^3^3^2920303^^^
"^DD",44,44.003,304,21,1,0)
This field contains the user who checked out the patient
"^DD",44,44.003,304,21,2,0)
for the appointment.  It is automatically entered when the
"^DD",44,44.003,304,21,3,0)
CHECKED OUT field(#303) is entered.
"^DD",44,44.003,304,"DT")
2911031
"^DD",44,44.003,305,0)
CHECK IN ENTERED^D^^C;5^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",44,44.003,305,5,1,0)
44.003^309^4
"^DD",44,44.003,305,9)
^
"^DD",44,44.003,305,21,0)
^^3^3^2920303^^^
"^DD",44,44.003,305,21,1,0)
Date and time that the 'check in' was entered into the system.
"^DD",44,44.003,305,21,2,0)
This field is automatically filled in when the CHECKED-IN(#309) field
"^DD",44,44.003,305,21,3,0)
is entered.
"^DD",44,44.003,305,"DT")
2920226
"^DD",44,44.003,306,0)
CHECK OUT ENTERED^D^^C;6^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",44,44.003,306,5,1,0)
44.003^303^2
"^DD",44,44.003,306,9)
^
"^DD",44,44.003,306,21,0)
^^3^3^2920303^^^^
"^DD",44,44.003,306,21,1,0)
Date and time that the 'check out' was entered into the system.
"^DD",44,44.003,306,21,2,0)
This field is automatically filled in when the CHECKED-OUT(#303) field
"^DD",44,44.003,306,21,3,0)
is entered.
"^DD",44,44.003,306,"DT")
2920226
"^DD",44,44.003,309,0)
CHECKED-IN^DX^^C;1^S %DT="ETXR",%DT(0)=$S($P($G(^SC(DA(2),"S",DA(1),1,DA,"C")),U,3):-$P(^("C"),U,3),1:"-NOW") D ^%DT S X=Y K:Y<1 X
"^DD",44,44.003,309,1,0)
^.1
"^DD",44,44.003,309,1,1,0)
^^TRIGGER^44.003^302
"^DD",44,44.003,309,1,1,1)
K DIV S DIV=X,D0=DA(2),DIV(0)=D0,D1=DA(1),DIV(1)=D1,D2=DA,DIV(2)=D2 S Y(0)=X S X=$S('$D(DIU(0)):1,1:0) I X S X=DIV S Y(1)=$S($D(^SC(D0,"S",D1,1,D2,"C")):^("C"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(44.003,309,1,1,1.4)
"^DD",44,44.003,309,1,1,1.4)
S DIH=$S($D(^SC(DIV(0),"S",DIV(1),1,DIV(2),"C")):^("C"),1:""),DIV=X S $P(^("C"),U,2)=DIV,DIH=44.003,DIG=302 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",44,44.003,309,1,1,2)
K DIV S DIV=X,D0=DA(2),DIV(0)=D0,D1=DA(1),DIV(1)=D1,D2=DA,DIV(2)=D2 S Y(0)=X S X=$S('$D(DIU(0)):1,1:0) I X S X=DIV S Y(1)=$S($D(^SC(D0,"S",D1,1,D2,"C")):^("C"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(44.003,309,1,1,2.4)
"^DD",44,44.003,309,1,1,2.4)
S DIH=$S($D(^SC(DIV(0),"S",DIV(1),1,DIV(2),"C")):^("C"),1:""),DIV=X S $P(^("C"),U,2)=DIV,DIH=44.003,DIG=302 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",44,44.003,309,1,1,"CREATE CONDITION")
S X=$S('$D(DIU(0)):1,1:0)
"^DD",44,44.003,309,1,1,"CREATE VALUE")
S X=DUZ
"^DD",44,44.003,309,1,1,"DELETE CONDITION")
S X=$S('$D(DIU(0)):1,1:0)
"^DD",44,44.003,309,1,1,"DELETE VALUE")
@
"^DD",44,44.003,309,1,1,"DT")
2930722
"^DD",44,44.003,309,1,1,"FIELD")
#302
"^DD",44,44.003,309,1,2,0)
44.001^ANT^MUMPS
"^DD",44,44.003,309,1,2,1)
D CI^SDM1A(DA(2),DA(1),DA,"SET")
"^DD",44,44.003,309,1,2,2)
D CI^SDM1A(DA(2),DA(1),DA,"KILL")
"^DD",44,44.003,309,1,2,"%D",0)
^^2^2^2911129^
"^DD",44,44.003,309,1,2,"%D",1,0)
This MUMPS cross reference updates the appointment status field
"^DD",44,44.003,309,1,2,"%D",2,0)
in the patient file.
"^DD",44,44.003,309,1,2,"DT")
2911129
"^DD",44,44.003,309,1,3,0)
^^TRIGGER^44.003^30
"^DD",44,44.003,309,1,3,1)
X ^DD(44.003,309,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^SC(D0,"S",D1,1,D2,0)):^(0),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y X ^DD(44.003,309,1,3,1.1) X ^DD(44.003,309,1,3,1.4)
"^DD",44,44.003,309,1,3,1.1)
S X=DIV S X=$S($D(^DPT(+^SC(DA(2),"S",DA(1),1,DA,0),.36)):+^(.36),1:0),X=$S('$D(^DIC(8,X,0)):"",$P(^(0),U,4)=6:"",1:X)
"^DD",44,44.003,309,1,3,1.3)
K DIV S DIV=X,D0=DA(2),DIV(0)=D0,D1=DA(1),DIV(1)=D1,D2=DA,DIV(2)=D2 S Y(0)=X S X=($P(^SC(DA(2),"S",DA(1),1,DA,0),U,10)="")
"^DD",44,44.003,309,1,3,1.4)
S DIH=$S($D(^SC(DIV(0),"S",DIV(1),1,DIV(2),0)):^(0),1:""),DIV=X S $P(^(0),U,10)=DIV,DIH=44.003,DIG=30 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",44,44.003,309,1,3,2)
Q
"^DD",44,44.003,309,1,3,"%D",0)
^^6^6^2911219^
"^DD",44,44.003,309,1,3,"%D",1,0)
This trigger will stuff the patient's PRIMARY ELIGIBILITY CODE into
"^DD",44,44.003,309,1,3,"%D",2,0)
the ELIGIBILITY OF VISIT field when the appointment is checked in.
"^DD",44,44.003,309,1,3,"%D",3,0)
 
"^DD",44,44.003,309,1,3,"%D",4,0)
The only exceptions are the following:
"^DD",44,44.003,309,1,3,"%D",5,0)
        o if the ELIGIBILITY OF VISIT filed is already filled in
"^DD",44,44.003,309,1,3,"%D",6,0)
        o if the PRIMARY ELIGIBILITY CODE is DOM
"^DD",44,44.003,309,1,3,"CREATE CONDITION")
S X=($P(^SC(DA(2),"S",DA(1),1,DA,0),U,10)="")
"^DD",44,44.003,309,1,3,"CREATE VALUE")
S X=$S($D(^DPT(+^SC(DA(2),"S",DA(1),1,DA,0),.36)):+^(.36),1:0),X=$S('$D(^DIC(8,X,0)):"",$P(^(0),U,4)=6:"",1:X)
"^DD",44,44.003,309,1,3,"DELETE VALUE")
NO EFFECT
"^DD",44,44.003,309,1,3,"DT")
2911219
"^DD",44,44.003,309,1,3,"FIELD")
ELIGIBILITY OF VISIT
"^DD",44,44.003,309,1,4,0)
^^TRIGGER^44.003^305
"^DD",44,44.003,309,1,4,1)
X ^DD(44.003,309,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^SC(D0,"S",D1,1,D2,"C")):^("C"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y X ^DD(44.003,309,1,4,1.1) X ^DD(44.003,309,1,4,1.4)
"^DD",44,44.003,309,1,4,1.1)
S X=DIV S %=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100)
"^DD",44,44.003,309,1,4,1.3)
K DIV S DIV=X,D0=DA(2),DIV(0)=D0,D1=DA(1),DIV(1)=D1,D2=DA,DIV(2)=D2 S Y(0)=X S X=$S('$D(DIU(0)):1,1:0)
"^DD",44,44.003,309,1,4,1.4)
S DIH=$S($D(^SC(DIV(0),"S",DIV(1),1,DIV(2),"C")):^("C"),1:""),DIV=X S $P(^("C"),U,5)=DIV,DIH=44.003,DIG=305 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",44,44.003,309,1,4,2)
K DIV S DIV=X,D0=DA(2),DIV(0)=D0,D1=DA(1),DIV(1)=D1,D2=DA,DIV(2)=D2 S Y(0)=X S X=$S('$D(DIU(0)):1,1:0) I X S X=DIV S Y(1)=$S($D(^SC(D0,"S",D1,1,D2,"C")):^("C"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(44.003,309,1,4,2.4)
"^DD",44,44.003,309,1,4,2.4)
S DIH=$S($D(^SC(DIV(0),"S",DIV(1),1,DIV(2),"C")):^("C"),1:""),DIV=X S $P(^("C"),U,5)=DIV,DIH=44.003,DIG=305 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",44,44.003,309,1,4,"%D",0)
^^1^1^2930723^
"^DD",44,44.003,309,1,4,"%D",1,0)
This trigger records when the check in date/time was entered into the system.
"^DD",44,44.003,309,1,4,"%D",2,0)
into the system.
"^DD",44,44.003,309,1,4,"CREATE CONDITION")
S X=$S('$D(DIU(0)):1,1:0)
"^DD",44,44.003,309,1,4,"CREATE VALUE")
NOW
"^DD",44,44.003,309,1,4,"DELETE CONDITION")
S X=$S('$D(DIU(0)):1,1:0)
"^DD",44,44.003,309,1,4,"DELETE VALUE")
@
"^DD",44,44.003,309,1,4,"DT")
2930722
"^DD",44,44.003,309,1,4,"FIELD")
#305
"^DD",44,44.003,309,3)
Enter a date/time before the check-out date, if one exists.
"^DD",44,44.003,309,21,0)
^^2^2^2920212^^
"^DD",44,44.003,309,21,1,0)
This field contains the date and time the patient was checked in
"^DD",44,44.003,309,21,2,0)
for the appointment.
"^DD",44,44.003,309,"DT")
2930722
"^DD",44,44.003,310,0)
APPOINTMENT CANCELLED?^S^C:CANCELLED;^0;9^Q
"^DD",44,44.003,310,21,0)
^^1^1^2920212^
"^DD",44,44.003,310,21,1,0)
Was appointment cancelled?
"^DD",44,44.003,310,"DT")
2841025
"^DD",44,44.003,999,0)
DUPLICATE APP'TS SAME DAY^CJ8^^ ; ^S X="",Y=+^SC(D0,"S",D1,1,0) F %=D1\1:0 S %=$N(^DPT(Y,"S",%)) Q:%'>0  I %-D1,$D(^(%,0)),^(0)'["C" S X=X+1
"^DD",44,44.003,999,9)
^
"^DD",44,44.003,999,9.01)

"^DD",44,44.003,999,9.1)
S X="",Y=+^SC(D0,"S",D1,1,0) F %=D1\1:0 S %=$N(^DPT(Y,"S",%)) Q:%'>0  I %-D1,$D(^(%,0)),^(0)'["C" S X=X+1
"^DD",44,44.003,999,21,0)
^^1^1^2920212^
"^DD",44,44.003,999,21,1,0)
Did the patient have duplicate appointments on the same day?
"^DD",44,44.004,0)
SCHEDULE TIME SUB-FIELD^NL^1^2
"^DD",44,44.004,0,"NM","SCHEDULE TIME")

"^DD",44,44.004,0,"UP")
44.002
"^DD",44,44.004,.01,0)
SCHEDULE TIME^MFX^^0;1^K:$L(X)>4!($L(X)<4)!'(X?4N&(X<1700)&(X>700)&(X#100<60)) X
"^DD",44,44.004,.01,3)
ANSWER MUST BE 4 CHARACTERS IN LENGTH
"^DD",44,44.004,.01,21,0)
^^1^1^2920212^^
"^DD",44,44.004,.01,21,1,0)
Time slots or pattern scheduled for a specific clinic.
"^DD",44,44.004,1,0)
NUMBER OF PATIENTS^NJ2,0^^0;2^K:+X'=X!(X>20)!(X<1)!(X?.E1"."1N.N) X
"^DD",44,44.004,1,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 20
"^DD",44,44.004,1,21,0)
^^1^1^2920212^
"^DD",44,44.004,1,21,1,0)
Number of patients allowed to be booked for time slots.
"^DD",44,44.005,0)
PATTERN SUB-FIELD^NL^3^4
"^DD",44,44.005,0,"NM","PATTERN")

"^DD",44,44.005,0,"UP")
44
"^DD",44,44.005,.01,0)
PATTERN DATE^MDX^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X S:$D(X) DINUM=X
"^DD",44,44.005,.01,21,0)
^^1^1^2920212^^^
"^DD",44,44.005,.01,21,1,0)
Date/time this particular clinic pattern was set up by user.
"^DD",44,44.005,1,0)
CURRENT AVAILABILITY^F^^1;E1,90^K:$L(X)>90!($L(X)<2) X
"^DD",44,44.005,1,3)
ANSWER MUST BE 2-90 CHARACTERS IN LENGTH
"^DD",44,44.005,1,21,0)
^^2^2^2920212^
"^DD",44,44.005,1,21,1,0)
Current clinic availability.  What slots are and are not available
"^DD",44,44.005,1,21,2,0)
for specified clinic days.
"^DD",44,44.005,1,"DT")
2860801
"^DD",44,44.005,2,0)
MAINTENANCE^CJ8X^^ ; ^S Y(2,1)=$S($D(^SC(D0,"ST",D1,1)):^(1),1:"") S X=$E(Y(2,1),1,70),X=$S(X["*":1,X["$":1,X["A":1,X["B":1,1:"")
"^DD",44,44.005,2,9)
^
"^DD",44,44.005,2,9.01)
44.005^1
"^DD",44,44.005,2,9.1)
#1
"^DD",44,44.005,2,21,0)
^^2^2^2920212^
"^DD",44,44.005,2,21,1,0)
Computed to update when slots are taken/restored when reviewing
"^DD",44,44.005,2,21,2,0)
clinic pattern availability.
"^DD",44,44.005,3,0)
SPECIAL AVAILABILITY FLAG^DX^^9;1^Q
"^DD",44,44.005,3,21,0)
^^3^3^2890425^^^
"^DD",44,44.005,3,21,1,0)
This node's existence indicates there is a 'special' availability set up
"^DD",44,44.005,3,21,2,0)
for this date and the master pattern for this date should be taken from
"^DD",44,44.005,3,21,3,0)
the "OST" node with the same date, not the "T0"-"T6" master pattern nodes.
"^DD",44,44.005,3,"DT")
2860801
"^DD",44,44.006,0)
CHART CHECK SUB-FIELD^NL^2^2
"^DD",44,44.006,0,"NM","CHART CHECK")

"^DD",44,44.006,0,"UP")
44
"^DD",44,44.006,.01,0)
DATE^MDX^^0;1^S %DT="EX" D ^%DT S X=Y,DINUM=Y K:X<DT X,DINUM
"^DD",44,44.006,.01,21,0)
^^1^1^2920212^
"^DD",44,44.006,.01,21,1,0)
Date chart was checked for availability for this appointment.
"^DD",44,44.006,2,0)
PATIENT^44.007PA^^1;0
"^DD",44,44.006,2,21,0)
^^1^1^2920212^
"^DD",44,44.006,2,21,1,0)
Patient associated with appointment data.
"^DD",44,44.007,0)
PATIENT SUB-FIELD^NL^.01^1
"^DD",44,44.007,0,"NM","PATIENT")

"^DD",44,44.007,0,"UP")
44.006
"^DD",44,44.007,.01,0)
PATIENT^MP2'^DPT(^0;1^Q
"^DD",44,44.007,.01,21,0)
^^1^1^2920212^
"^DD",44,44.007,.01,21,1,0)
Patient associated wtih appointment data.
"^DD",44,44.008,0)
THURSDAY TEMPLATE SUB-FIELD^^1^2
"^DD",44,44.008,0,"NM","THURSDAY TEMPLATE")

"^DD",44,44.008,0,"UP")
44
"^DD",44,44.008,.01,0)
LIMIT DATE^NJ7,0X^^0;1^W:'$D(SDSCHED) *7,!,"No editting of this field allowed through fileman" K:'$D(SDSCHED) X I $D(X) S %DT="EX",Y=X D:X'=9999999 ^%DT S X=$S(X=9999999:X,1:Y) K:Y<1 X I $D(X) S DINUM=X
"^DD",44,44.008,.01,3)
ENTER A DATE OR 9999999 TO INDICATE THE PATTERN IS IN EFFECT FOREVER
"^DD",44,44.008,.01,21,0)
^^5^5^2860801^^^
"^DD",44,44.008,.01,21,1,0)
The pattern stored at this date is applicable for Thursdays from the previous
"^DD",44,44.008,.01,21,2,0)
entry's date up to but not including this date.  If there is no previous
"^DD",44,44.008,.01,21,3,0)
entry date, this date is the first Thursday when appointments may be made to
"^DD",44,44.008,.01,21,4,0)
this clinic.  If the date equals 9999999, this pattern is effective
"^DD",44,44.008,.01,21,5,0)
indefinitely for Thursdays from the previous entry date.
"^DD",44,44.008,.01,"DEL",1,0)
I '$D(SDSCHED) W !,*7,"You cannot delete this field using fileman!!!"
"^DD",44,44.008,.01,"DT")
2860801
"^DD",44,44.008,1,0)
MASTER PATTERN^F^^1;E1,80^K:$L(X)>80!($L(X)<3)!'(X?.E1"[".E) X
"^DD",44,44.008,1,3)
ANSWER MUST BE 3 TO 80 CHARACTERS IN LENGTH
"^DD",44,44.008,1,21,0)
^^1^1^2920212^
"^DD",44,44.008,1,21,1,0)
Master pattern set up for clinic for thursdays.
"^DD",44,44.008,1,"DEL",1,0)
I '$D(SDSCHED) W !,*7,"You cannot delete this field using fileman!!!"
"^DD",44,44.008,1,"DT")
2860801
"^DD",44,44.009,0)
FRIDAY TEMPLATE SUB-FIELD^^1^2
"^DD",44,44.009,0,"NM","FRIDAY TEMPLATE")

"^DD",44,44.009,0,"UP")
44
"^DD",44,44.009,.01,0)
LIMIT DATE^NJ7,0X^^0;1^W:'$D(SDSCHED) *7,!,"No editting of this field allowed through fileman" K:'$D(SDSCHED) X I $D(X) S %DT="EX",Y=X D:X'=9999999 ^%DT S X=$S(X=9999999:X,1:Y) K:Y<1 X I $D(X) S DINUM=X
"^DD",44,44.009,.01,3)
ENTER A DATE OR 9999999 TO INDICATE THE PATTERN IS IN EFFECT FOREVER
"^DD",44,44.009,.01,21,0)
^^5^5^2860801^^^
"^DD",44,44.009,.01,21,1,0)
The pattern stored at this date is applicable for Fridays from the previous
"^DD",44,44.009,.01,21,2,0)
entry's date up to but not including this date.  If there is no previous
"^DD",44,44.009,.01,21,3,0)
entry date, this date is the first Friday when appointments may be made to
"^DD",44,44.009,.01,21,4,0)
this clinic.  If the date equals 9999999, this pattern is effective
"^DD",44,44.009,.01,21,5,0)
indefinitely for Fridays from the previous entry date.
"^DD",44,44.009,.01,"DEL",1,0)
I '$D(SDSCHED) W !,*7,"You cannot delete this field using fileman!!!"
"^DD",44,44.009,.01,"DT")
2860801
"^DD",44,44.009,1,0)
MASTER PATTERN^F^^1;E1,80^K:$L(X)>80!($L(X)<3)!'(X?.E1"[".E!(X="")) X
"^DD",44,44.009,1,3)
ANSWER MUST BE 3 TO 80 CHARACTERS IN LENGTH
"^DD",44,44.009,1,21,0)
^^1^1^2920212^
"^DD",44,44.009,1,21,1,0)
Master pattern set up for clinic for fridays.
"^DD",44,44.009,1,"DEL",1,0)
I '$D(SDSCHED) W !,*7,"You cannot delete this field using fileman!!!"
"^DD",44,44.009,1,"DT")
2860801
"^DD",44,44.01,0)
SYNONYM SUB-FIELD^NL^.01^1
"^DD",44,44.01,0,"NM","SYNONYM")

"^DD",44,44.01,0,"UP")
44
"^DD",44,44.01,.01,0)
SYNONYM^MF^^0;1^K:$L(X)>30!($L(X)<2) X
"^DD",44,44.01,.01,3)
ANSWER MUST BE 2-30 CHARACTERS IN LENGTH
"^DD",44,44.01,.01,21,0)
^^1^1^2921224^^
"^DD",44,44.01,.01,21,1,0)
Synonym or shortened name associated with a specific location.
"^DD",44,44.02,0)
PROHIBITED TERMINAL SUB-FIELD^NL^.01^1
"^DD",44,44.02,0,"NM","PROHIBITED TERMINAL")

"^DD",44,44.02,0,"UP")
44
"^DD",44,44.02,.01,0)
PROHIBITED TERMINAL^MF^^0;1^K:$L(X)>3!($L(X)<2) X
"^DD",44,44.02,.01,3)
ANSWER MUST BE 2-3 CHARACTERS IN LENGTH
"^DD",44,44.02,.01,21,0)
^^1^1^2920212^
"^DD",44,44.02,.01,21,1,0)
Terminal that cannot be utilized from a specific location.
"^DD",44,44.03,0)
SPECIAL INSTRUCTIONS SUB-FIELD^NL^.01^1
"^DD",44,44.03,0,"NM","SPECIAL INSTRUCTIONS")

"^DD",44,44.03,0,"UP")
44
"^DD",44,44.03,.01,0)
SPECIAL INSTRUCTIONS^F^^0;1^K:$L(X)>80!($L(X)<1) X
"^DD",44,44.03,.01,3)

"^DD",44,44.03,.01,21,0)
^^2^2^2920212^
"^DD",44,44.03,.01,21,1,0)
Special instructions (free text) entered by clerk at time of making
"^DD",44,44.03,.01,21,2,0)
the appointment.
"^DD",44,44.03,.01,"DT")
2840124
"^DD",44,44.04,0)
PRIVILEGED USER SUB-FIELD^NL^.01^1
"^DD",44,44.04,0,"NM","PRIVILEGED USER")

"^DD",44,44.04,0,"UP")
44
"^DD",44,44.04,.01,0)
PRIVILEGED USER^MP200'X^VA(200,^0;1^S DINUM=X
"^DD",44,44.04,.01,21,0)
^^1^1^2920212^
"^DD",44,44.04,.01,21,1,0)
Privileged users set up to have access to book to clinic.
"^DD",44,44.04,.01,"DT")
2901020
"^DD",44,44.05,0)
CANCEL DATE/TIME BEGIN SUB-FIELD^NL^1^2
"^DD",44,44.05,0,"NM","CANCEL DATE/TIME BEGIN")

"^DD",44,44.05,0,"UP")
44
"^DD",44,44.05,.01,0)
CANCEL DATE/TIME BEGIN^DX^^0;1^S %DT="ETX" D ^%DT S X=Y K:Y<1 X S:$D(X) DINUM=X
"^DD",44,44.05,.01,21,0)
^^1^1^2920212^^
"^DD",44,44.05,.01,21,1,0)
Date/time a clinic started cancellation period.
"^DD",44,44.05,.01,"DT")
2850208
"^DD",44,44.05,1,0)
CANCEL ENDING TIME^FX^^0;2^K:$L(X)>4!($L(X)<4)!'(X?4N&(X<2000)&(X>600)&(X#100<60)) X
"^DD",44,44.05,1,3)
ANSWER MUST BE 4 CHARACTERS IN LENGTH
"^DD",44,44.05,1,21,0)
^^1^1^2920212^
"^DD",44,44.05,1,21,1,0)
Date/time a clinic ended cancellation period.
"^DD",44,44.05,1,"DT")
2850208
"^DD",44,44.06,0)
SUNDAY TEMPLATE SUB-FIELD^^1^2
"^DD",44,44.06,0,"NM","SUNDAY TEMPLATE")

"^DD",44,44.06,0,"UP")
44
"^DD",44,44.06,.01,0)
LIMIT DATE^NJ7,0X^^0;1^W:'$D(SDSCHED) *7,!,"No editting of this field allowed through fileman" K:'$D(SDSCHED) X I $D(X) S %DT="EX",Y=X D:X'=9999999 ^%DT S X=$S(X=9999999:X,1:Y) K:Y<1 X I $D(X) S DINUM=X
"^DD",44,44.06,.01,1,0)
^.1^^0
"^DD",44,44.06,.01,3)
ENTER A DATE OR 9999999 TO INDICATE THE PATTERN IS IN EFFECT FOREVER
"^DD",44,44.06,.01,21,0)
^^5^5^2860801^^^^
"^DD",44,44.06,.01,21,1,0)
The pattern stored at this date is applicable for Sundays from the previous
"^DD",44,44.06,.01,21,2,0)
entry's date up to but not including this date.  If there is no previous
"^DD",44,44.06,.01,21,3,0)
entry date, this date is the first Sunday when appointments may be made to
"^DD",44,44.06,.01,21,4,0)
this clinic.  If the date equals 9999999, this pattern is effective
"^DD",44,44.06,.01,21,5,0)
indefinitely for Sundays from the previous entry date.
"^DD",44,44.06,.01,"DEL",1,0)
I '$D(SDSCHED) W !,*7,"You cannot delete this field using fileman!!!"
"^DD",44,44.06,.01,"DT")
2860801
"^DD",44,44.06,1,0)
MASTER PATTERN^F^^1;E1,80^K:$L(X)>80!($L(X)<3)!'(X?.E1"[".E!(X="")) X
"^DD",44,44.06,1,3)
ANSWER MUST BE 3 TO 80 CHARACTERS IN LENGTH
"^DD",44,44.06,1,21,0)
^^2^2^2920212^^
"^DD",44,44.06,1,21,1,0)
Master pattern set up by user on specified date for Sundays.  All patterns
"^DD",44,44.06,1,21,2,0)
stored.
"^DD",44,44.06,1,"DEL",1,0)
I '$D(SDSCHED) W !,*7,"You cannot delete this field using fileman!!!"
"^DD",44,44.06,1,"DT")
2860801
"^DD",44,44.07,0)
MONDAY TEMPLATE SUB-FIELD^^1^2
"^DD",44,44.07,0,"NM","MONDAY TEMPLATE")

"^DD",44,44.07,0,"UP")
44
"^DD",44,44.07,.01,0)
LIMIT DATE^NJ7,0X^^0;1^W:'$D(SDSCHED) *7,!,"No editting of this field allowed through fileman" K:'$D(SDSCHED) X I $D(X) S %DT="EX",Y=X D:X'=9999999 ^%DT S X=$S(X=9999999:X,1:Y) K:Y<1 X I $D(X) S DINUM=X
"^DD",44,44.07,.01,3)
ENTER A DATE OR 9999999 TO INDICATE THE PATTERN IS IN EFFECT FOREVER
"^DD",44,44.07,.01,21,0)
^^5^5^2860801^^^^
"^DD",44,44.07,.01,21,1,0)
The pattern stored at this date is applicable for Mondays from the previous
"^DD",44,44.07,.01,21,2,0)
entry's date up to but not including this date.  If there is no previous
"^DD",44,44.07,.01,21,3,0)
entry date, this date is the first Monday when appointments may be made to
"^DD",44,44.07,.01,21,4,0)
this clinic.  If the date equals 9999999, this pattern is effective
"^DD",44,44.07,.01,21,5,0)
indefinitely for Mondays from the previous entry date.
"^DD",44,44.07,.01,"DEL",1,0)
I '$D(SDSCHED) W !,*7,"You cannot delete this field using fileman!!!"
"^DD",44,44.07,.01,"DT")
2860801
"^DD",44,44.07,1,0)
MASTER PATTERN^F^^1;E1,80^K:$L(X)>80!($L(X)<3)!'(X?.E1"[".E!(X="")) X
"^DD",44,44.07,1,3)
ANSWER MUST BE 3 TO 80 CHARACTERS IN LENGTH
"^DD",44,44.07,1,21,0)
^^1^1^2920212^
"^DD",44,44.07,1,21,1,0)
Master pattern set up by user for clinic for Mondays.
"^DD",44,44.07,1,"DEL",1,0)
I '$D(SDSCHED) W !,*7,"You cannot delete this field using fileman!!!"
"^DD",44,44.07,1,"DT")
2860801
"^DD",44,44.08,0)
TUESDAY TEMPLATE SUB-FIELD^^1^2
"^DD",44,44.08,0,"NM","TUESDAY TEMPLATE")

"^DD",44,44.08,0,"UP")
44
"^DD",44,44.08,.01,0)
LIMIT DATE^NJ7,0X^^0;1^W:'$D(SDSCHED) *7,!,"No editting of this field allowed through fileman" K:'$D(SDSCHED) X I $D(X) S %DT="EX",Y=X D:X'=9999999 ^%DT S X=$S(X=9999999:X,1:Y) K:Y<1 X I $D(X) S DINUM=X
"^DD",44,44.08,.01,3)
ENTER A DATE OR 9999999 TO INDICATE THE PATTERN IS IN EFFECT FOREVER
"^DD",44,44.08,.01,21,0)
^^5^5^2860801^^^^
"^DD",44,44.08,.01,21,1,0)
The pattern stored at this date is applicable for Tuesdays from the previous
"^DD",44,44.08,.01,21,2,0)
entry's date up to but not including this date.  If there is no previous
"^DD",44,44.08,.01,21,3,0)
entry date, this date is the first Tuesday when appointments may be made to
"^DD",44,44.08,.01,21,4,0)
this clinic.  If the date equals 9999999, this pattern is effective
"^DD",44,44.08,.01,21,5,0)
indefinitely for Tuesdays from the previous entry date.
"^DD",44,44.08,.01,"DT")
2860801
"^DD",44,44.08,1,0)
MASTER PATTERN^F^^1;E1,80^K:$L(X)>80!($L(X)<3)!'(X?.E1"[".E!(X="")) X
"^DD",44,44.08,1,3)
ANSWER MUST BE 3 TO 80 CHARACTERS IN LENGTH
"^DD",44,44.08,1,21,0)
^^1^1^2920212^
"^DD",44,44.08,1,21,1,0)
Master Pattern set up for clinic for Tuesdays.
"^DD",44,44.08,1,"DEL",1,0)
I '$D(SDSCHED) W !,*7,"You cannot delete this field using fileman!!!"
"^DD",44,44.08,1,"DT")
2860801
"^DD",44,44.09,0)
WEDNESDAY TEMPLATE SUB-FIELD^^1^2
"^DD",44,44.09,0,"NM","WEDNESDAY TEMPLATE")

"^DD",44,44.09,0,"UP")
44
"^DD",44,44.09,.01,0)
LIMIT DATE^NJ7,0X^^0;1^W:'$D(SDSCHED) *7,!,"No editting of this field allowed through fileman" K:'$D(SDSCHED) X I $D(X) S %DT="EX",Y=X D:X'=9999999 ^%DT S X=$S(X=9999999:X,1:Y) K:Y<1 X I $D(X) S DINUM=X
"^DD",44,44.09,.01,3)
ENTER A DATE OR 9999999 TO INDICATE THE PATTERN IS IN EFFECT FOREVER
"^DD",44,44.09,.01,21,0)
^^5^5^2860801^^^
"^DD",44,44.09,.01,21,1,0)
The pattern stored at this date is applicable for Wednesdays from the previous
"^DD",44,44.09,.01,21,2,0)
entry's date up to but not including this date.  If there is no previous
"^DD",44,44.09,.01,21,3,0)
entry date, this date is the first Wednesday when appointments may be made to
"^DD",44,44.09,.01,21,4,0)
this clinic.  If the date equals 9999999, this pattern is effective
"^DD",44,44.09,.01,21,5,0)
indefinitely for Wednesdays from the previous entry date.
"^DD",44,44.09,.01,"DT")
2860801
"^DD",44,44.09,1,0)
MASTER PATTERN^F^^1;1^K:$L(X)>80!($L(X)<3)!'(X?.E1"[".E!(X="")) X
"^DD",44,44.09,1,3)
ANSWER MUST BE 3 TO 80 CHARACTERS IN LENGTH
"^DD",44,44.09,1,21,0)
^^1^1^2920212^
"^DD",44,44.09,1,21,1,0)
Master pattern set up for clinic for wednesdays.
"^DD",44,44.09,1,"DEL",1,0)
I '$D(SDSCHED) W !,*7,"You cannot delete this field using fileman!!!"
"^DD",44,44.09,1,"DT")
2860801
"^DD",44,44.1,0)
PROVIDER SUB-FIELD^^.02^2
"^DD",44,44.1,0,"DT")
2930129
"^DD",44,44.1,0,"IX","B",44.1,.01)

"^DD",44,44.1,0,"NM","PROVIDER")

"^DD",44,44.1,0,"UP")
44
"^DD",44,44.1,.01,0)
PROVIDER^M*P200'^VA(200,^0;1^S DIC("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U),+Y)),$S('$G(^VA(200,+Y,""I"")):1,DT'>+^(""I""):1,1:0)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",44,44.1,.01,1,0)
^.1
"^DD",44,44.1,.01,1,1,0)
44.1^B
"^DD",44,44.1,.01,1,1,1)
S ^SC(DA(1),"PR","B",$E(X,1,30),DA)=""
"^DD",44,44.1,.01,1,1,2)
K ^SC(DA(1),"PR","B",$E(X,1,30),DA)
"^DD",44,44.1,.01,4)
N D,DO,DIC,X S DIC("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U),+Y)),$S('$G(^VA(200,+Y,""I"")):1,DT'>+^(""I""):1,1:0)",X="??",DIC="^VA(200,",DIC(0)="EQ",D="AK.PROVIDER" D IX^DIC Q
"^DD",44,44.1,.01,12)
Provider must be active.
"^DD",44,44.1,.01,12.1)
S DIC("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U),+Y)),$S('$G(^VA(200,+Y,""I"")):1,DT'>+^(""I""):1,1:0)"
"^DD",44,44.1,.01,21,0)
^^4^4^2930615^^
"^DD",44,44.1,.01,21,1,0)
Enter in this field the providers associated with this clinic.  These
"^DD",44,44.1,.01,21,2,0)
providers will then be displayed when updating the provider through
"^DD",44,44.1,.01,21,3,0)
Appointment Management or Check Out to assist the user in entering
"^DD",44,44.1,.01,21,4,0)
the correct provider.
"^DD",44,44.1,.01,"DT")
2930129
"^DD",44,44.1,.02,0)
DEFAULT PROVIDER^SX^0:NO;1:YES;^0;2^I X,$D(^SC("ADPR",DA(1))),'$D(^(DA(1),DA)) W !?5,"A default provider has already been assigned for this clinic." K X
"^DD",44,44.1,.02,1,0)
^.1
"^DD",44,44.1,.02,1,1,0)
44^ADPR^MUMPS
"^DD",44,44.1,.02,1,1,1)
S:X ^SC("ADPR",DA(1),DA)=""
"^DD",44,44.1,.02,1,1,2)
K ^SC("ADPR",DA(1),DA)
"^DD",44,44.1,.02,1,1,"DT")
2930223
"^DD",44,44.1,.02,21,0)
^^2^2^2930615^^
"^DD",44,44.1,.02,21,1,0)
Enter 'YES' in this field if the provider is the default for this
"^DD",44,44.1,.02,21,2,0)
clinic.  Otherwise, enter 'NO'.
"^DD",44,44.1,.02,"DT")
2930326
"^DD",44,44.101,0)
ASSOCIATED LOCATION TYPES SUB-FIELD^^.01^1
"^DD",44,44.101,0,"DT")
2941201
"^DD",44,44.101,0,"IX","B",44.101,.01)

"^DD",44,44.101,0,"NM","ASSOCIATED LOCATION TYPES")

"^DD",44,44.101,0,"UP")
44
"^DD",44,44.101,.01,0)
ASSOCIATED LOCATION TYPES^MP40.9'^DIC(40.9,^0;1^Q
"^DD",44,44.101,.01,1,0)
^.1
"^DD",44,44.101,.01,1,1,0)
44.101^B
"^DD",44,44.101,.01,1,1,1)
S ^SC(DA(1),"LOC","B",$E(X,1,30),DA)=""
"^DD",44,44.101,.01,1,1,2)
K ^SC(DA(1),"LOC","B",$E(X,1,30),DA)
"^DD",44,44.101,.01,"DT")
2941201
"^DD",44,44.11,0)
DIAGNOSIS SUB-FIELD^^.02^2
"^DD",44,44.11,0,"DT")
2930223
"^DD",44,44.11,0,"IX","B",44.11,.01)

"^DD",44,44.11,0,"NM","DIAGNOSIS")

"^DD",44,44.11,0,"UP")
44
"^DD",44,44.11,.01,0)
DIAGNOSIS^M*P80'^ICD9(^0;1^S DIC("S")="I '$P(^(0),U,9)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",44,44.11,.01,1,0)
^.1
"^DD",44,44.11,.01,1,1,0)
44.11^B
"^DD",44,44.11,.01,1,1,1)
S ^SC(DA(1),"DX","B",$E(X,1,30),DA)=""
"^DD",44,44.11,.01,1,1,2)
K ^SC(DA(1),"DX","B",$E(X,1,30),DA)
"^DD",44,44.11,.01,12)
Diagnosis must be active.
"^DD",44,44.11,.01,12.1)
S DIC("S")="I '$P(^(0),U,9)"
"^DD",44,44.11,.01,21,0)
^^4^4^2930615^^^
"^DD",44,44.11,.01,21,1,0)
Enter in this field the diagnoses associated with this clinic.  These
"^DD",44,44.11,.01,21,2,0)
diagnoses will then be displayed when updating the diagnosis through
"^DD",44,44.11,.01,21,3,0)
Appointment Management or Check Out to assist the user in entering
"^DD",44,44.11,.01,21,4,0)
the correct diagnosis.
"^DD",44,44.11,.01,"DT")
2930129
"^DD",44,44.11,.02,0)
DEFAULT DIAGNOSIS^SX^0:NO;1:YES;^0;2^I X,$D(^SC("ADDX",DA(1))),'$D(^(DA(1),DA)) W !?5,"A default diagnosis has already been assigned for this clinic." K X
"^DD",44,44.11,.02,1,0)
^.1
"^DD",44,44.11,.02,1,1,0)
44^ADDX^MUMPS
"^DD",44,44.11,.02,1,1,1)
S:X ^SC("ADDX",DA(1),DA)=""
"^DD",44,44.11,.02,1,1,2)
K ^SC("ADDX",DA(1),DA)
"^DD",44,44.11,.02,1,1,"DT")
2930223
"^DD",44,44.11,.02,21,0)
^^2^2^2930615^^^^
"^DD",44,44.11,.02,21,1,0)
Enter 'YES' in this field if the diagnosis is the default for this
"^DD",44,44.11,.02,21,2,0)
clinic.  Otherwise, enter 'NO'.
"^DD",44,44.11,.02,"DT")
2930326
"^DD",44,44.40457,0)
TEAM POSITIONS SUB-FIELD^^.02^2
"^DD",44,44.40457,0,"DT")
2960329
"^DD",44,44.40457,0,"IX","B",44.40457,.01)

"^DD",44,44.40457,0,"NM","TEAM POSITIONS")

"^DD",44,44.40457,0,"UP")
44
"^DD",44,44.40457,.01,0)
TEAM POSITIONS^*P404.57'^SCTM(404.57,^0;1^S DIC("S")="I $P($G(^(0)),U,9)=DA" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",44,44.40457,.01,1,0)
^.1
"^DD",44,44.40457,.01,1,1,0)
44.40457^B
"^DD",44,44.40457,.01,1,1,1)
S ^SC(DA(1),"PCMM","B",$E(X,1,30),DA)=""
"^DD",44,44.40457,.01,1,1,2)
K ^SC(DA(1),"PCMM","B",$E(X,1,30),DA)
"^DD",44,44.40457,.01,3)
This should not be edited via FileMan
"^DD",44,44.40457,.01,12)
ASDF
"^DD",44,44.40457,.01,12.1)
S DIC("S")="I $P($G(^(0)),U,9)=DA"
"^DD",44,44.40457,.01,21,0)
^^2^2^2960329^^^^
"^DD",44,44.40457,.01,21,1,0)
This is populated via a trigger on the ASSOCIATED CLINIC (#.09) Field
"^DD",44,44.40457,.01,21,2,0)
of the TEAM POSITION (#404.57) File.
"^DD",44,44.40457,.01,"DT")
2960329
"^DD",44,44.40457,.02,0)
TEAM^*P404.51'^SCTM(404.51,^0;2^S DIC("S")="I $P($G(^SCTM(404.57,+$G(^SC(+$G(DA(1)),""PCMM"",+$G(DA),0)),0)),U,2)=Y" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",44,44.40457,.02,1,0)
^.1
"^DD",44,44.40457,.02,1,1,0)
44^D
"^DD",44,44.40457,.02,1,1,1)
S ^SC("D",$E(X,1,30),DA(1),DA)=""
"^DD",44,44.40457,.02,1,1,2)
K ^SC("D",$E(X,1,30),DA(1),DA)
"^DD",44,44.40457,.02,1,1,"DT")
2960329
"^DD",44,44.40457,.02,3)
ASDF
"^DD",44,44.40457,.02,12)
ASDF
"^DD",44,44.40457,.02,12.1)
S DIC("S")="I $P($G(^SCTM(404.57,+$G(^SC(+$G(DA(1)),""PCMM"",+$G(DA),0)),0)),U,2)=Y"
"^DD",44,44.40457,.02,23,0)
^^1^1^2960329^^
"^DD",44,44.40457,.02,23,1,0)
 
"^DD",44,44.40457,.02,"DT")
2960329
"^DD",403.35,403.35,0)
FIELD^^1.15^2
"^DD",403.35,403.35,0,"DDA")
N
"^DD",403.35,403.35,0,"DT")
2960313
"^DD",403.35,403.35,0,"IX","AC",403.35,1.15)

"^DD",403.35,403.35,0,"IX","B",403.35,.01)

"^DD",403.35,403.35,0,"NM","SCHEDULING USER PREFERENCE")

"^DD",403.35,403.35,.01,0)
SCHEDULING USER^RP200'X^VA(200,^0;1^S DINUM=X
"^DD",403.35,403.35,.01,1,0)
^.1
"^DD",403.35,403.35,.01,1,1,0)
403.35^B
"^DD",403.35,403.35,.01,1,1,1)
S ^SCRS(403.35,"B",$E(X,1,30),DA)=""
"^DD",403.35,403.35,.01,1,1,2)
K ^SCRS(403.35,"B",$E(X,1,30),DA)
"^DD",403.35,403.35,.01,3)
This is the person using the Scheduling Package.
"^DD",403.35,403.35,.01,21,0)
^^2^2^2950811^^
"^DD",403.35,403.35,.01,21,1,0)
This is the user for whom preferences in the Scheduling Package will be
"^DD",403.35,403.35,.01,21,2,0)
used.
"^DD",403.35,403.35,.01,23,0)
^^1^1^2950811^^
"^DD",403.35,403.35,.01,23,1,0)
This is a pointer to the NEW PERSON file (#200).
"^DD",403.35,403.35,.01,"DT")
2950811
"^DD",403.35,403.35,1.15,0)
DEFAULT PCMM REPORT QUERY^P404.95'^SD(404.95,^PCMM;15^Q
"^DD",403.35,403.35,1.15,1,0)
^.1
"^DD",403.35,403.35,1.15,1,1,0)
403.35^AC
"^DD",403.35,403.35,1.15,1,1,1)
S ^SCRS(403.35,"AC",$E(X,1,30),DA)=""
"^DD",403.35,403.35,1.15,1,1,2)
K ^SCRS(403.35,"AC",$E(X,1,30),DA)
"^DD",403.35,403.35,1.15,1,1,"DT")
2960318
"^DD",403.35,403.35,1.15,"DT")
2960318
"^DD",403.43,403.43,0)
FIELD^^.04^5
"^DD",403.43,403.43,0,"DDA")
N
"^DD",403.43,403.43,0,"DT")
2960521
"^DD",403.43,403.43,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",403.43,403.43,0,"IX","B",403.43,.01)

"^DD",403.43,403.43,0,"IX","C",403.43,.02)

"^DD",403.43,403.43,0,"IX","EVN",403.43,.02)

"^DD",403.43,403.43,0,"NM","SCHEDULING EVENT")

"^DD",403.43,403.43,0,"PT",403.16,.09)

"^DD",403.43,403.43,0,"PT",403.18,.03)

"^DD",403.43,403.43,0,"PT",403.44,.02)

"^DD",403.43,403.43,0,"PT",403.53,.03)

"^DD",403.43,403.43,0,"PT",404.22,.05)

"^DD",403.43,403.43,0,"PT",404.71,.07)

"^DD",403.43,403.43,0,"PT",404.72,.03)

"^DD",403.43,403.43,0,"PT",404.74,.03)

"^DD",403.43,403.43,0,"PT",409.69,.03)

"^DD",403.43,403.43,.01,0)
EVENT CODE^RF^^0;1^K:$L(X)>8!($L(X)<1)!'(X'?1P.E) X
"^DD",403.43,403.43,.01,1,0)
^.1
"^DD",403.43,403.43,.01,1,1,0)
403.43^B
"^DD",403.43,403.43,.01,1,1,1)
S ^SD(403.43,"B",$E(X,1,30),DA)=""
"^DD",403.43,403.43,.01,1,1,2)
K ^SD(403.43,"B",$E(X,1,30),DA)
"^DD",403.43,403.43,.01,1,1,"%D",0)
^^1^1^2950606^
"^DD",403.43,403.43,.01,1,1,"%D",1,0)
This cross-reference allows look-up by event code.
"^DD",403.43,403.43,.01,3)
Answer must be 1-8 characters in length.
"^DD",403.43,403.43,.01,21,0)
^^14^14^2960528^^^^
"^DD",403.43,403.43,.01,21,1,0)
Unique code that identifies an enrollment, request or appointment event.
"^DD",403.43,403.43,.01,21,2,0)
  
"^DD",403.43,403.43,.01,21,3,0)
This field uniquely identifies an event and is the primary key to the
"^DD",403.43,403.43,.01,21,4,0)
Scheduling Event file.
"^DD",403.43,403.43,.01,21,5,0)

"^DD",403.43,403.43,.01,21,6,0)
The event code corresponds to the following scheme:
"^DD",403.43,403.43,.01,21,7,0)
 
"^DD",403.43,403.43,.01,21,8,0)
 HL-xxx    HL7 related event codes
"^DD",403.43,403.43,.01,21,9,0)
 SC-RSxxx  Resource related event codes
"^DD",403.43,403.43,.01,21,10,0)
 SC-RQxxx  Request related event codes
"^DD",403.43,403.43,.01,21,11,0)
 ZMxxx to become SC-MCxxx  Managed Care related event codes
"^DD",403.43,403.43,.01,21,12,0)
 SC-TMxxx  Team related event codes
"^DD",403.43,403.43,.01,21,13,0)
 SC-OExxx  Encounter related event codes
"^DD",403.43,403.43,.01,21,14,0)
 
"^DD",403.43,403.43,.01,"DT")
2960516
"^DD",403.43,403.43,.02,0)
EVENT NAME^RF^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",403.43,403.43,.02,1,0)
^.1
"^DD",403.43,403.43,.02,1,1,0)
403.43^EVN
"^DD",403.43,403.43,.02,1,1,1)
S ^SD(403.43,"EVN",$E(X,1,30),DA)=""
"^DD",403.43,403.43,.02,1,1,2)
K ^SD(403.43,"EVN",$E(X,1,30),DA)
"^DD",403.43,403.43,.02,1,1,"%D",0)
^^1^1^2950606^
"^DD",403.43,403.43,.02,1,1,"%D",1,0)
This cross-reference allows look-up by event name.
"^DD",403.43,403.43,.02,1,1,"DT")
2941123
"^DD",403.43,403.43,.02,3)
Answer must be 1-60 characters in length.
"^DD",403.43,403.43,.02,21,0)
^^4^4^2950606^^
"^DD",403.43,403.43,.02,21,1,0)
Brief description of event type.
"^DD",403.43,403.43,.02,21,2,0)
 
"^DD",403.43,403.43,.02,21,3,0)
This field briefly describes the event type and is used to help identify
"^DD",403.43,403.43,.02,21,4,0)
the event.
"^DD",403.43,403.43,.02,"DT")
2941202
"^DD",403.43,403.43,.03,0)
EVENT TYPE^S^1:REQUEST;2:ENROLLMENT;3:ENCOUNTER;4:TEAM;5:TEAM POSITION;6:PRACTITIONER POSITION;7:PATIENT TEAM;8:PATIENT POSITION;9:RESOURCE;10:VISIT TYPE;11:CLINICAL RESOURCE;12:SCHEDULE;13:QUERY;^0;3^Q
"^DD",403.43,403.43,.03,3)

"^DD",403.43,403.43,.03,21,0)
^^3^3^2950606^^
"^DD",403.43,403.43,.03,21,1,0)
This field contains the event type.
"^DD",403.43,403.43,.03,21,2,0)
 
"^DD",403.43,403.43,.03,21,3,0)
Possible event types include:  Request, Enrollment and Encounter
"^DD",403.43,403.43,.03,"DT")
2960521
"^DD",403.43,403.43,.04,0)
HL7 EVENT CODE^P779.001'^HL(779.001,^0;4^Q
"^DD",403.43,403.43,.04,"DT")
2960507
"^DD",403.43,403.43,50,0)
DESCRIPTION^403.435^^D;0
"^DD",403.43,403.43,50,21,0)
^^1^1^2950606^
"^DD",403.43,403.43,50,21,1,0)
This field contains the scheduling event description.
"^DD",403.43,403.435,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",403.43,403.435,0,"DT")
2941110
"^DD",403.43,403.435,0,"NM","DESCRIPTION")

"^DD",403.43,403.435,0,"UP")
403.43
"^DD",403.43,403.435,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",403.43,403.435,.01,"DT")
2941110
"^DD",403.44,403.44,0)
FIELD^^50^5
"^DD",403.44,403.44,0,"DT")
2960528
"^DD",403.44,403.44,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^SD(403.43,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(403.43,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",403.44,403.44,0,"IX","B",403.44,.01)

"^DD",403.44,403.44,0,"IX","EVC",403.44,.02)

"^DD",403.44,403.44,0,"NM","SCHEDULING REASON")

"^DD",403.44,403.44,0,"PT",404.52,.05)

"^DD",403.44,403.44,0,"PT",404.58,.04)

"^DD",403.44,403.44,0,"PT",404.59,.04)

"^DD",403.44,403.44,0,"PT",404.71,.08)

"^DD",403.44,403.44,0,"PT",404.72,.04)

"^DD",403.44,403.44,0,"PT",404.74,.04)

"^DD",403.44,403.44,0,"PT",409.2,5)

"^DD",403.44,403.44,0,"PT",409.69,.05)

"^DD",403.44,403.44,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",403.44,403.44,.01,1,0)
^.1
"^DD",403.44,403.44,.01,1,1,0)
403.44^B
"^DD",403.44,403.44,.01,1,1,1)
S ^SD(403.44,"B",$E(X,1,30),DA)=""
"^DD",403.44,403.44,.01,1,1,2)
K ^SD(403.44,"B",$E(X,1,30),DA)
"^DD",403.44,403.44,.01,1,1,"%D",0)
^^1^1^2950606^
"^DD",403.44,403.44,.01,1,1,"%D",1,0)
This cross-reference allows look-up by name.
"^DD",403.44,403.44,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",403.44,403.44,.01,21,0)
^^3^3^2950606^
"^DD",403.44,403.44,.01,21,1,0)
Brief description of the event reason.
"^DD",403.44,403.44,.01,21,2,0)
 
"^DD",403.44,403.44,.01,21,3,0)
This field is the primary key to the scheduling reason file.
"^DD",403.44,403.44,.02,0)
EVENT CODE^RP403.43'^SD(403.43,^0;2^Q
"^DD",403.44,403.44,.02,1,0)
^.1
"^DD",403.44,403.44,.02,1,1,0)
403.44^EVC
"^DD",403.44,403.44,.02,1,1,1)
S ^SD(403.44,"EVC",$E(X,1,30),DA)=""
"^DD",403.44,403.44,.02,1,1,2)
K ^SD(403.44,"EVC",$E(X,1,30),DA)
"^DD",403.44,403.44,.02,1,1,"%D",0)
^^1^1^2950606^
"^DD",403.44,403.44,.02,1,1,"%D",1,0)
This cross-reference allows look-up by event code.
"^DD",403.44,403.44,.02,1,1,"DT")
2941123
"^DD",403.44,403.44,.02,21,0)
^^5^5^2960516^^^^
"^DD",403.44,403.44,.02,21,1,0)
Indicates which processes can utilize this entry.
"^DD",403.44,403.44,.02,21,2,0)
 
"^DD",403.44,403.44,.02,21,3,0)
This field indicates the event where this reason can be used.  For example,
"^DD",403.44,403.44,.02,21,4,0)
'HL-S15' means this reason can be used during appointment cancellations.
"^DD",403.44,403.44,.02,21,5,0)
This field associates a scheduling reason with a particular event code.
"^DD",403.44,403.44,.02,"DT")
2941123
"^DD",403.44,403.44,.03,0)
SYNONYM^F^^0;3^K:$L(X)>5!($L(X)<1) X
"^DD",403.44,403.44,.03,3)
Answer must be 1-5 characters in length.
"^DD",403.44,403.44,.03,"DT")
2960507
"^DD",403.44,403.44,.04,0)
STATUS^S^0:INACTIVE;1:ACTIVE;^0;4^Q
"^DD",403.44,403.44,.04,"DT")
2960507
"^DD",403.44,403.44,50,0)
DESCRIPTION^403.445^^D;0
"^DD",403.44,403.44,50,21,0)
^^1^1^2950606^
"^DD",403.44,403.44,50,21,1,0)
This field contains the scheduling reason description.
"^DD",403.44,403.445,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",403.44,403.445,0,"DT")
2941115
"^DD",403.44,403.445,0,"NM","DESCRIPTION")

"^DD",403.44,403.445,0,"UP")
403.44
"^DD",403.44,403.445,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",403.44,403.445,.01,"DT")
2941115
"^DD",403.46,403.46,0)
FIELD^^1^3
"^DD",403.46,403.46,0,"DDA")
N
"^DD",403.46,403.46,0,"DT")
2950728
"^DD",403.46,403.46,0,"IX","B",403.46,.01)

"^DD",403.46,403.46,0,"IX","USR",403.46,.02)

"^DD",403.46,403.46,0,"NM","STANDARD POSITION")

"^DD",403.46,403.46,0,"PT",404.57,.03)

"^DD",403.46,403.46,0,"PT",404.95,40)

"^DD",403.46,403.46,0,"PT",404.9503,.01)

"^DD",403.46,403.46,.01,0)
STANDARD POSITION^RF^^0;1^K:$L(X)>50!($L(X)<3)!'(X'?1P.E) X
"^DD",403.46,403.46,.01,1,0)
^.1
"^DD",403.46,403.46,.01,1,1,0)
403.46^B
"^DD",403.46,403.46,.01,1,1,1)
S ^SD(403.46,"B",$E(X,1,30),DA)=""
"^DD",403.46,403.46,.01,1,1,2)
K ^SD(403.46,"B",$E(X,1,30),DA)
"^DD",403.46,403.46,.01,3)
Choose standard position from list defined by VA Central Office.
"^DD",403.46,403.46,.01,21,0)
^^3^3^2950222^^
"^DD",403.46,403.46,.01,21,1,0)
Standard role the provider performs as part of this team.
"^DD",403.46,403.46,.01,21,2,0)
 
"^DD",403.46,403.46,.01,21,3,0)
These standard positions are defined by Central Office.
"^DD",403.46,403.46,.01,"DT")
2950224
"^DD",403.46,403.46,.02,0)
USER CLASSIFICATION^P8930'^USR(8930,^0;2^Q
"^DD",403.46,403.46,.02,1,0)
^.1
"^DD",403.46,403.46,.02,1,1,0)
403.46^USR
"^DD",403.46,403.46,.02,1,1,1)
S ^SD(403.46,"USR",$E(X,1,30),DA)=""
"^DD",403.46,403.46,.02,1,1,2)
K ^SD(403.46,"USR",$E(X,1,30),DA)
"^DD",403.46,403.46,.02,1,1,"DT")
2950228
"^DD",403.46,403.46,.02,3)
The class of users defined in the USR CLASS File (#8930) that are permited to fill this position.
"^DD",403.46,403.46,.02,21,0)
^^1^1^2950728^^^
"^DD",403.46,403.46,.02,21,1,0)
Name of the user class that may fill this standard position.
"^DD",403.46,403.46,.02,"DT")
2950728
"^DD",403.46,403.46,1,0)
DESCRIPTION^403.46001^^1;0
"^DD",403.46,403.46001,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",403.46,403.46001,0,"DT")
2950222
"^DD",403.46,403.46001,0,"NM","DESCRIPTION")

"^DD",403.46,403.46001,0,"UP")
403.46
"^DD",403.46,403.46001,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",403.46,403.46001,.01,3)
This is the long description of the standard position
"^DD",403.46,403.46001,.01,21,0)
^^1^1^2950222^
"^DD",403.46,403.46001,.01,21,1,0)
This is a more complete description of the standard position.
"^DD",403.46,403.46001,.01,"DT")
2950222
"^DD",403.47,403.47,0)
FIELD^^1^2
"^DD",403.47,403.47,0,"DT")
2950222
"^DD",403.47,403.47,0,"IX","B",403.47,.01)

"^DD",403.47,403.47,0,"NM","TEAM PURPOSE")

"^DD",403.47,403.47,0,"PT",404.51,.03)

"^DD",403.47,403.47,.01,0)
TEAM PURPOSE^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",403.47,403.47,.01,1,0)
^.1
"^DD",403.47,403.47,.01,1,1,0)
403.47^B
"^DD",403.47,403.47,.01,1,1,1)
S ^SD(403.47,"B",$E(X,1,30),DA)=""
"^DD",403.47,403.47,.01,1,1,2)
K ^SD(403.47,"B",$E(X,1,30),DA)
"^DD",403.47,403.47,.01,3)
This is the primary role/purpose of a team.
"^DD",403.47,403.47,.01,21,0)
^^1^1^2950222^
"^DD",403.47,403.47,.01,21,1,0)
The primary role/purpose of a team.
"^DD",403.47,403.47,.01,"DT")
2950222
"^DD",403.47,403.47,1,0)
DESCRIPTION^403.47001^^1;0
"^DD",403.47,403.47001,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",403.47,403.47001,0,"DT")
2950222
"^DD",403.47,403.47001,0,"NM","DESCRIPTION")

"^DD",403.47,403.47001,0,"UP")
403.47
"^DD",403.47,403.47001,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",403.47,403.47001,.01,3)
This is the long description of the role/purpose of a team.
"^DD",403.47,403.47001,.01,21,0)
^^1^1^2950222^
"^DD",403.47,403.47001,.01,21,1,0)
Detailed description of the team's primary role/purpose.
"^DD",403.47,403.47001,.01,"DT")
2950222
"^DD",404.41,404.41,0)
FIELD^^205^10
"^DD",404.41,404.41,0,"DDA")
N
"^DD",404.41,404.41,0,"DT")
2960208
"^DD",404.41,404.41,0,"IX","APC1",404.41,.01)

"^DD",404.41,404.41,0,"IX","APC2",404.41,.04)

"^DD",404.41,404.41,0,"IX","B",404.41,.01)

"^DD",404.41,404.41,0,"NM","OUTPATIENT PROFILE")

"^DD",404.41,404.41,.01,0)
PATIENT^RP2'X^DPT(^0;1^S DINUM=X
"^DD",404.41,404.41,.01,1,0)
^.1
"^DD",404.41,404.41,.01,1,1,0)
404.41^B
"^DD",404.41,404.41,.01,1,1,1)
S ^SCPT(404.41,"B",$E(X,1,30),DA)=""
"^DD",404.41,404.41,.01,1,1,2)
K ^SCPT(404.41,"B",$E(X,1,30),DA)
"^DD",404.41,404.41,.01,1,2,0)
404.41^APC1^MUMPS
"^DD",404.41,404.41,.01,1,2,1)
N SC2 S SC2=$P($G(^SCPT(404.41,DA,0)),U,4) I SC2]"" S ^SCPT(404.41,"APC",X,SC2,DA)=""
"^DD",404.41,404.41,.01,1,2,2)
N SC2 S SC2=$P($G(^SCPT(404.41,DA,0)),U,4) I SC2]"" K ^SCPT(404.41,"APC",X,SC2,DA)
"^DD",404.41,404.41,.01,1,2,"%D",0)
^^1^1^2960208^^
"^DD",404.41,404.41,.01,1,2,"%D",1,0)
This sorts by PATIENT(#.01), then by PRIMARY CARE?(#.04).  There is an associated cross reference for the PRIMARY CARE? Field (#.04).
"^DD",404.41,404.41,.01,1,2,"DT")
2960208
"^DD",404.41,404.41,.01,3)
Select Outpatient
"^DD",404.41,404.41,.01,21,0)
^^2^2^2960214^
"^DD",404.41,404.41,.01,21,1,0)
This is a surrogate for the patient file.  It contains only outpatient
"^DD",404.41,404.41,.01,21,2,0)
information.
"^DD",404.41,404.41,.01,"DT")
2960214
"^DD",404.41,404.41,.02,0)
SEND APPOINTMENT LETTERS?^S^0:NO;1:YES;^0;2^Q
"^DD",404.41,404.41,.02,"DT")
2960526
"^DD",404.41,404.41,.03,0)
CONTRACT NURSING HOME PATIENT^S^1:YES;0:NO;^0;3^Q
"^DD",404.41,404.41,.03,3)
This indicates if this is a contract nursing home patient.
"^DD",404.41,404.41,.03,21,0)
^^3^3^2950306^
"^DD",404.41,404.41,.03,21,1,0)
This indicates if the patient is a contract nursing home patient.
"^DD",404.41,404.41,.03,21,2,0)
This can then be used in helping to schedule the patient to assure
"^DD",404.41,404.41,.03,21,3,0)
proper personnel are available before and after the appointment.
"^DD",404.41,404.41,.03,"DT")
2950306
"^DD",404.41,404.41,.04,0)
PRIMARY CARE?^S^1:YES;0:NO;^0;4^Q
"^DD",404.41,404.41,.04,1,0)
^.1
"^DD",404.41,404.41,.04,1,1,0)
404.41^APC2^MUMPS
"^DD",404.41,404.41,.04,1,1,1)
N SC1 S SC1=$P($G(^SCPT(404.41,DA,0)),U,1) I SC1 S ^SCPT(404.41,"APC",SC1,X,DA)=""
"^DD",404.41,404.41,.04,1,1,2)
N SC1 S SC1=$P($G(^SCPT(404.41,DA,0)),U,1) I SC1 K ^SCPT(404.41,"APC",SC1,X,DA)
"^DD",404.41,404.41,.04,1,1,"%D",0)
^^1^1^2960208^
"^DD",404.41,404.41,.04,1,1,"%D",1,0)
his sorts by PATIENT(#.01), then by PRIMARY CARE?(#.04).  There is an associated cross reference for the PATIENT Field (#.01).
"^DD",404.41,404.41,.04,1,1,"DT")
2960208
"^DD",404.41,404.41,.04,3)
Patient has been or will be assigned to a Primary Care Team.
"^DD",404.41,404.41,.04,21,0)
^^2^2^2960208^
"^DD",404.41,404.41,.04,21,1,0)
This indicates if patient has been or will be assigned to a Primary Care
"^DD",404.41,404.41,.04,21,2,0)
Team.
"^DD",404.41,404.41,.04,"DT")
2960208
"^DD",404.41,404.41,25,0)
COMMENT^404.4125^^C;0
"^DD",404.41,404.41,201,0)
CURRENT PC PRACTITIONER ^CJ8^^ ; ^S X=$P($$NMPCPR^SCAPMCU2(D0,DT,1),U,2)
"^DD",404.41,404.41,201,.1)
CURRENT PRIMARY CARE PRACTITIONER
"^DD",404.41,404.41,201,9)
^
"^DD",404.41,404.41,201,9.01)

"^DD",404.41,404.41,201,9.1)
S X=$P($$NMPCPR^SCAPMCU2(D0,DT,1),U,2)
"^DD",404.41,404.41,201,21,0)
^^3^3^2960214^^^^
"^DD",404.41,404.41,201,21,1,0)
This has not been implemented yet.
"^DD",404.41,404.41,201,21,2,0)
This is calcultes the current Primary Care Practitioner,
"^DD",404.41,404.41,201,21,3,0)
from the Primary Care Profile History File.
"^DD",404.41,404.41,201,"DT")
2960520
"^DD",404.41,404.41,202,0)
CURRENT PC ATTENDING^CJ8^^ ; ^S X=$P($$NMPCPR^SCAPMCU2(D0,DT,2),U,2)
"^DD",404.41,404.41,202,.1)
CURRENT PRIMARY CARE ATTENDING
"^DD",404.41,404.41,202,9)
^
"^DD",404.41,404.41,202,9.01)

"^DD",404.41,404.41,202,9.1)
S X=$P($$NMPCPR^SCAPMCU2(D0,DT,2),U,2)
"^DD",404.41,404.41,202,21,0)
^^3^3^2960214^^^^
"^DD",404.41,404.41,202,21,1,0)
This has not been implemented yet.
"^DD",404.41,404.41,202,21,2,0)
This calculates the current primary care attending
"^DD",404.41,404.41,202,21,3,0)
practitioner from the Patient Team/Position Assignment file.
"^DD",404.41,404.41,202,"DT")
2960520
"^DD",404.41,404.41,203,0)
CURRENT PC TEAM^CJ8^^ ; ^S X=$P($$NMPCTM^SCAPMCU2(D0,DT,1),U,2)
"^DD",404.41,404.41,203,.1)
CURRENT PRIMARY CARE TEAM
"^DD",404.41,404.41,203,9)
^
"^DD",404.41,404.41,203,9.01)

"^DD",404.41,404.41,203,9.1)
S X=$P($$NMPCTM^SCAPMCU2(D0,DT,1),U,2)
"^DD",404.41,404.41,203,21,0)
^^2^2^2960214^^^^
"^DD",404.41,404.41,203,21,1,0)
This has not been implemented yet.
"^DD",404.41,404.41,203,21,2,0)
This calculates the current primary care team.
"^DD",404.41,404.41,203,"DT")
2960520
"^DD",404.41,404.41,204,0)
CURRENT PC PRACTITIONER POS^CJ8^^ ; ^S X=$P($$NMPCTP^SCAPMCU2(D0,DT,1),U,2)
"^DD",404.41,404.41,204,.1)
CURRENT PRIMARY CARE PRACTITIONER POSITION
"^DD",404.41,404.41,204,9)
^
"^DD",404.41,404.41,204,9.01)

"^DD",404.41,404.41,204,9.1)
S X=$P($$NMPCTP^SCAPMCU2(D0,DT,1),U,2)
"^DD",404.41,404.41,204,21,0)
^^3^3^2960214^^^^
"^DD",404.41,404.41,204,21,1,0)
This has not been implemented yet.
"^DD",404.41,404.41,204,21,2,0)
This calculates the current primary care practitioner
"^DD",404.41,404.41,204,21,3,0)
position.
"^DD",404.41,404.41,204,"DT")
2960520
"^DD",404.41,404.41,205,0)
CURRENT PC ATTENDING POSITION^CJ8^^ ; ^S X=$P($$NMPCTP^SCAPMCU2(D0,DT,2),U,2)
"^DD",404.41,404.41,205,.1)
CURRENT PRIMARY CARE ATTENDING POSITION
"^DD",404.41,404.41,205,9)
^
"^DD",404.41,404.41,205,9.01)

"^DD",404.41,404.41,205,9.1)
S X=$P($$NMPCTP^SCAPMCU2(D0,DT,2),U,2)
"^DD",404.41,404.41,205,21,0)
^^2^2^2960214^^^^
"^DD",404.41,404.41,205,21,1,0)
This calculates the current primary care attending practitioner position
"^DD",404.41,404.41,205,21,2,0)
for the patient.
"^DD",404.41,404.41,205,"DT")
2960520
"^DD",404.41,404.4125,0)
COMMENT SUB-FIELD^^.01^1
"^DD",404.41,404.4125,0,"DT")
2941110
"^DD",404.41,404.4125,0,"NM","COMMENT")

"^DD",404.41,404.4125,0,"UP")
404.41
"^DD",404.41,404.4125,.01,0)
COMMENT^W^^0;1^Q
"^DD",404.41,404.4125,.01,"DT")
2941110
"^DD",404.42,404.42,0)
FIELD^^1^11
"^DD",404.42,404.42,0,"DDA")
N
"^DD",404.42,404.42,0,"DT")
2960517
"^DD",404.42,404.42,0,"ID",.02)
W "   ",$E($P(^(0),U,2),4,5)_"-"_$E($P(^(0),U,2),6,7)_"-"_$E($P(^(0),U,2),2,3)
"^DD",404.42,404.42,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^SCTM(404.51,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(404.51,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",404.42,404.42,0,"IX","AB",404.42,.01)

"^DD",404.42,404.42,0,"IX","AIDT",404.42,.01)

"^DD",404.42,404.42,0,"IX","AIDT1",404.42,.03)

"^DD",404.42,404.42,0,"IX","AIDT2",404.42,.02)

"^DD",404.42,404.42,0,"IX","AOUTPT",404.42,.08)

"^DD",404.42,404.42,0,"IX","APCTM",404.42,.01)

"^DD",404.42,404.42,0,"IX","APCTM1",404.42,.08)

"^DD",404.42,404.42,0,"IX","APCTM2",404.42,.02)

"^DD",404.42,404.42,0,"IX","APCTM3",404.42,.03)

"^DD",404.42,404.42,0,"IX","APTTM",404.42,.01)

"^DD",404.42,404.42,0,"IX","APTTM1",404.42,.03)

"^DD",404.42,404.42,0,"IX","ATMPT",404.42,.03)

"^DD",404.42,404.42,0,"IX","ATMPT1",404.42,.01)

"^DD",404.42,404.42,0,"IX","B",404.42,.01)

"^DD",404.42,404.42,0,"IX","C",404.42,.03)

"^DD",404.42,404.42,0,"NM","PATIENT TEAM ASSIGNMENT")

"^DD",404.42,404.42,0,"PT",404.43,.01)

"^DD",404.42,404.42,.01,0)
PATIENT^RP2'X^DPT(^0;1^N SC1,SCN,SCDA S SCDA=+$G(DA),SCN=$G(^SCPT(404.42,SCDA,0)) S $P(SCN,U,1)=X S SCN1=$$OKPTTM^SCMCTMU(SCN,SCDA) D:'SCN1 EN^DDIOL($P(SCN1,U,2),"","?5") K:'SCN1 X
"^DD",404.42,404.42,.01,1,0)
^.1
"^DD",404.42,404.42,.01,1,1,0)
404.42^B
"^DD",404.42,404.42,.01,1,1,1)
S ^SCPT(404.42,"B",$E(X,1,30),DA)=""
"^DD",404.42,404.42,.01,1,1,2)
K ^SCPT(404.42,"B",$E(X,1,30),DA)
"^DD",404.42,404.42,.01,1,2,0)
404.42^AIDT^MUMPS
"^DD",404.42,404.42,.01,1,2,1)
N SC2,SC3 S SC2=$P($G(^SCPT(404.42,DA,0)),U,3) I SC2 S SC3=$P($G(^(0)),U,2) I SC3]"" S ^SCPT(404.42,"AIDT",X,SC2,-SC3,DA)=""
"^DD",404.42,404.42,.01,1,2,2)
N SC2,SC3 S SC2=$P($G(^SCPT(404.42,DA,0)),U,3) I SC2 S SC3=$P($G(^(0)),U,2) I SC3]"" K ^SCPT(404.42,"AIDT",X,SC2,-SC3,DA)
"^DD",404.42,404.42,.01,1,2,"%D",0)
^^1^1^2950907^
"^DD",404.42,404.42,.01,1,2,"%D",1,0)
This sorts by PATIENT(#.01), then by TEAM ASSIGNMENT(#.03), then by -TEAM ASSIGNED DATE(#.02).  There are associated cross references for each of these fields.
"^DD",404.42,404.42,.01,1,2,"DT")
2950907
"^DD",404.42,404.42,.01,1,3,0)
404.42^AB
"^DD",404.42,404.42,.01,1,3,1)
S ^SCPT(404.42,"AB",$E(X,1,30),DA)=""
"^DD",404.42,404.42,.01,1,3,2)
K ^SCPT(404.42,"AB",$E(X,1,30),DA)
"^DD",404.42,404.42,.01,1,3,"DT")
2950120
"^DD",404.42,404.42,.01,1,4,0)
404.42^ATMPT1^MUMPS
"^DD",404.42,404.42,.01,1,4,1)
N SC1 S SC1=$P($G(^SCPT(404.42,DA,0)),U,3) I SC1 S ^SCPT(404.42,"ATMPT",SC1,X,DA)=""
"^DD",404.42,404.42,.01,1,4,2)
N SC1 S SC1=$P($G(^SCPT(404.42,DA,0)),U,3) I SC1 K ^SCPT(404.42,"ATMPT",SC1,X,DA)
"^DD",404.42,404.42,.01,1,4,"%D",0)
^^1^1^2950630^
"^DD",404.42,404.42,.01,1,4,"%D",1,0)
This sorts by TEAM ASSIGNMENT(#.03), then by PATIENT(#.01).  There is an associated cross reference for the TEAM ASSIGNMENT Field (#.03).
"^DD",404.42,404.42,.01,1,4,"DT")
2950630
"^DD",404.42,404.42,.01,1,5,0)
404.42^APTTM^MUMPS
"^DD",404.42,404.42,.01,1,5,1)
N SC2 S SC2=$P($G(^SCPT(404.42,DA,0)),U,3) I SC2 S ^SCPT(404.42,"APTTM",X,SC2,DA)=""
"^DD",404.42,404.42,.01,1,5,2)
N SC2 S SC2=$P($G(^SCPT(404.42,DA,0)),U,3) I SC2 K ^SCPT(404.42,"APTTM",X,SC2,DA)
"^DD",404.42,404.42,.01,1,5,"%D",0)
^^1^1^2950703^
"^DD",404.42,404.42,.01,1,5,"%D",1,0)
This sorts by PATIENT(#.01), then by TEAM ASSIGNMENT(#.03).  There is an associated cross reference for the TEAM ASSIGNMENT Field (#.03).
"^DD",404.42,404.42,.01,1,5,"DT")
2950703
"^DD",404.42,404.42,.01,1,6,0)
404.42^APCTM^MUMPS
"^DD",404.42,404.42,.01,1,6,1)
N SC2,SC3,SC4 S SC2=$P($G(^SCPT(404.42,DA,0)),U,8) I SC2]"" S SC3=$P($G(^(0)),U,2) I SC3]"" S SC4=$P($G(^(0)),U,3) I SC4 S ^SCPT(404.42,"APCTM",X,SC2,SC3,SC4,DA)=""
"^DD",404.42,404.42,.01,1,6,2)
N SC2,SC3,SC4 S SC2=$P($G(^SCPT(404.42,DA,0)),U,8) I SC2]"" S SC3=$P($G(^(0)),U,2) I SC3]"" S SC4=$P($G(^(0)),U,3) I SC4 K ^SCPT(404.42,"APCTM",X,SC2,SC3,SC4,DA)
"^DD",404.42,404.42,.01,1,6,"%D",0)
^^3^3^2960214^^
"^DD",404.42,404.42,.01,1,6,"%D",1,0)
This sorts by PATIENT(#.01), then by ASSIGNMENT TYPE(#.08), then by -TEAM ASSIGN
"^DD",404.42,404.42,.01,1,6,"%D",2,0)
ED DATE(#.02), then by TEAM ASSIGNMENT(#.03).  There are associated cross refere
"^DD",404.42,404.42,.01,1,6,"%D",3,0)
nces for each of these fields.
"^DD",404.42,404.42,.01,1,6,"DT")
2960214
"^DD",404.42,404.42,.01,3)
Select Patient from active team
"^DD",404.42,404.42,.01,"DT")
2960306
"^DD",404.42,404.42,.02,0)
TEAM ASSIGNED DATE^RDX^^0;2^S %DT="ETX" D ^%DT S X=Y K:Y<1 X IF $D(X)&($P(^SCPT(404.42,DA,0),U,9)) D:X>$P(^SCPT(404.42,DA,0),U,9) EN^DDIOL("Discharge must be after Assigned Date","","?5") K:X>$P(^SCPT(404.42,DA,0),U,9) X
"^DD",404.42,404.42,.02,1,0)
^.1
"^DD",404.42,404.42,.02,1,1,0)
404.42^AIDT2^MUMPS
"^DD",404.42,404.42,.02,1,1,1)
N SC1,SC2 S SC1=$P($G(^SCPT(404.42,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,3) I SC2 S ^SCPT(404.42,"AIDT",SC1,SC2,-X,DA)=""
"^DD",404.42,404.42,.02,1,1,2)
N SC1,SC2 S SC1=$P($G(^SCPT(404.42,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,3) I SC2 K ^SCPT(404.42,"AIDT",SC1,SC2,-X,DA)
"^DD",404.42,404.42,.02,1,1,"%D",0)
^^1^1^2950907^
"^DD",404.42,404.42,.02,1,1,"%D",1,0)
This sorts by PATIENT(#.01), then by TEAM ASSIGNMENT(#.03), then by -TEAM ASSIGNED DATE(#.02).  There are associated cross references for each of these fields.
"^DD",404.42,404.42,.02,1,1,"DT")
2950907
"^DD",404.42,404.42,.02,1,2,0)
404.42^APCTM2^MUMPS
"^DD",404.42,404.42,.02,1,2,1)
N SC1,SC2,SC4 S SC1=$P($G(^SCPT(404.42,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,8) I SC2]"" S SC4=$P($G(^(0)),U,3) I SC4 S ^SCPT(404.42,"APCTM",SC1,SC2,X,SC4,DA)=""
"^DD",404.42,404.42,.02,1,2,2)
N SC1,SC2,SC4 S SC1=$P($G(^SCPT(404.42,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,8) I SC2]"" S SC4=$P($G(^(0)),U,3) I SC4 K ^SCPT(404.42,"APCTM",SC1,SC2,X,SC4,DA)
"^DD",404.42,404.42,.02,1,2,"%D",0)
^^1^1^2960214^^
"^DD",404.42,404.42,.02,1,2,"%D",1,0)
This sorts by PATIENT(#.01), then by ASSIGNMENT TYPE(#.08), then by -TEAM ASSIGNED DATE(#.02), then by TEAM ASSIGNMENT(#.03).  There are associated cross references for each of these fields.
"^DD",404.42,404.42,.02,1,2,"DT")
2960214
"^DD",404.42,404.42,.02,3)
This is the date the team is assigned to the patient.
"^DD",404.42,404.42,.02,21,0)
^^1^1^2950630^^^
"^DD",404.42,404.42,.02,21,1,0)
This is the date that the patient joins the team's patient panel.
"^DD",404.42,404.42,.02,"DT")
2960214
"^DD",404.42,404.42,.03,0)
TEAM ASSIGNMENT^P404.51'^SCTM(404.51,^0;3^Q
"^DD",404.42,404.42,.03,1,0)
^.1
"^DD",404.42,404.42,.03,1,1,0)
404.42^ATMPT^MUMPS
"^DD",404.42,404.42,.03,1,1,1)
N SC2 S SC2=$P($G(^SCPT(404.42,DA,0)),U,1) I SC2 S ^SCPT(404.42,"ATMPT",X,SC2,DA)=""
"^DD",404.42,404.42,.03,1,1,2)
N SC2 S SC2=$P($G(^SCPT(404.42,DA,0)),U,1) I SC2 K ^SCPT(404.42,"ATMPT",X,SC2,DA)
"^DD",404.42,404.42,.03,1,1,"%D",0)
^^1^1^2950630^
"^DD",404.42,404.42,.03,1,1,"%D",1,0)
This sorts by TEAM ASSIGNMENT(#.03), then by PATIENT(#.01).  There is an associated cross reference for the PATIENT Field (#.01).
"^DD",404.42,404.42,.03,1,1,"DT")
2950630
"^DD",404.42,404.42,.03,1,2,0)
404.42^APTTM1^MUMPS
"^DD",404.42,404.42,.03,1,2,1)
N SC1 S SC1=$P($G(^SCPT(404.42,DA,0)),U,1) I SC1 S ^SCPT(404.42,"APTTM",SC1,X,DA)=""
"^DD",404.42,404.42,.03,1,2,2)
N SC1 S SC1=$P($G(^SCPT(404.42,DA,0)),U,1) I SC1 K ^SCPT(404.42,"APTTM",SC1,X,DA)
"^DD",404.42,404.42,.03,1,2,"%D",0)
^^1^1^2950703^
"^DD",404.42,404.42,.03,1,2,"%D",1,0)
This sorts by PATIENT(#.01), then by TEAM ASSIGNMENT(#.03).  There is an associated cross reference for the PATIENT Field (#.01).
"^DD",404.42,404.42,.03,1,2,"DT")
2950703
"^DD",404.42,404.42,.03,1,3,0)
404.42^AIDT1^MUMPS
"^DD",404.42,404.42,.03,1,3,1)
N SC1,SC3 S SC1=$P($G(^SCPT(404.42,DA,0)),U,1) I SC1 S SC3=$P($G(^(0)),U,2) I SC3]"" S ^SCPT(404.42,"AIDT",SC1,X,-SC3,DA)=""
"^DD",404.42,404.42,.03,1,3,2)
N SC1,SC3 S SC1=$P($G(^SCPT(404.42,DA,0)),U,1) I SC1 S SC3=$P($G(^(0)),U,2) I SC3]"" K ^SCPT(404.42,"AIDT",SC1,X,-SC3,DA)
"^DD",404.42,404.42,.03,1,3,"%D",0)
^^1^1^2950907^
"^DD",404.42,404.42,.03,1,3,"%D",1,0)
This sorts by PATIENT(#.01), then by TEAM ASSIGNMENT(#.03), then by -TEAM ASSIGNED DATE(#.02).  There are associated cross references for each of these fields.
"^DD",404.42,404.42,.03,1,3,"DT")
2950907
"^DD",404.42,404.42,.03,1,4,0)
404.42^APCTM3^MUMPS
"^DD",404.42,404.42,.03,1,4,1)
N SC1,SC2,SC3 S SC1=$P($G(^SCPT(404.42,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,8) I SC2]"" S SC3=$P($G(^(0)),U,2) I SC3]"" S ^SCPT(404.42,"APCTM",SC1,SC2,SC3,X,DA)=""
"^DD",404.42,404.42,.03,1,4,2)
N SC1,SC2,SC3 S SC1=$P($G(^SCPT(404.42,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,8) I SC2]"" S SC3=$P($G(^(0)),U,2) I SC3]"" K ^SCPT(404.42,"APCTM",SC1,SC2,-SC3,X,DA)
"^DD",404.42,404.42,.03,1,4,"%D",0)
^^1^1^2960214^^
"^DD",404.42,404.42,.03,1,4,"%D",1,0)
This sorts by PATIENT(#.01), then by ASSIGNMENT TYPE(#.08), then by -TEAM ASSIGNED DATE(#.02), then by TEAM ASSIGNMENT(#.03).  There are associated cross references for each of these fields.
"^DD",404.42,404.42,.03,1,4,"DT")
2960214
"^DD",404.42,404.42,.03,1,5,0)
404.42^C
"^DD",404.42,404.42,.03,1,5,1)
S ^SCPT(404.42,"C",$E(X,1,30),DA)=""
"^DD",404.42,404.42,.03,1,5,2)
K ^SCPT(404.42,"C",$E(X,1,30),DA)
"^DD",404.42,404.42,.03,1,5,"%D",0)
^^1^1^2960502^
"^DD",404.42,404.42,.03,1,5,"%D",1,0)
Whole cross-reference, by team.
"^DD",404.42,404.42,.03,1,5,"DT")
2960502
"^DD",404.42,404.42,.03,3)
Name of a team assigned to the patient as of the effective date.
"^DD",404.42,404.42,.03,21,0)
^^1^1^2950905^^^^
"^DD",404.42,404.42,.03,21,1,0)
This is the team assigned to patient as of the effective date.
"^DD",404.42,404.42,.03,"DT")
2960502
"^DD",404.42,404.42,.08,0)
ASSIGNMENT TYPE^S^1:PRIMARY CARE;99:OTHER;^0;8^Q
"^DD",404.42,404.42,.08,1,0)
^.1
"^DD",404.42,404.42,.08,1,1,0)
404.42^APCTM1^MUMPS
"^DD",404.42,404.42,.08,1,1,1)
N SC1,SC3,SC4 S SC1=$P($G(^SCPT(404.42,DA,0)),U,1) I SC1 S SC3=$P($G(^(0)),U,2) I SC3]"" S SC4=$P($G(^(0)),U,3) I SC4 S ^SCPT(404.42,"APCTM",SC1,X,SC3,SC4,DA)=""
"^DD",404.42,404.42,.08,1,1,2)
N SC1,SC3,SC4 S SC1=$P($G(^SCPT(404.42,DA,0)),U,1) I SC1 S SC3=$P($G(^(0)),U,2) I SC3]"" S SC4=$P($G(^(0)),U,3) I SC4 K ^SCPT(404.42,"APCTM",SC1,X,SC3,SC4,DA)
"^DD",404.42,404.42,.08,1,1,"%D",0)
^^1^1^2960325^^^
"^DD",404.42,404.42,.08,1,1,"%D",1,0)
This sorts by PATIENT(#.01), then by ASSIGNMENT TYPE(#.08), then by -TEAM ASSIGNED DATE(#.02), then by TEAM ASSIGNMENT(#.03).  There are associated cross references for each of these fields.
"^DD",404.42,404.42,.08,1,1,"DT")
2960214
"^DD",404.42,404.42,.08,1,2,0)
404.42^AOUTPT^MUMPS
"^DD",404.42,404.42,.08,1,2,1)
N SCX S SCX=$$MAKEOUT^SCMCDD1(DA)
"^DD",404.42,404.42,.08,1,2,2)
Q
"^DD",404.42,404.42,.08,1,2,"%D",0)
^^2^2^2960325^
"^DD",404.42,404.42,.08,1,2,"%D",1,0)
This makes an entry in the Outpatient Profile File for every patient
"^DD",404.42,404.42,.08,1,2,"%D",2,0)
who ever gets assigned to a primary care team.
"^DD",404.42,404.42,.08,1,2,"DT")
2960325
"^DD",404.42,404.42,.08,3)
The type of care provided by this assignment.
"^DD",404.42,404.42,.08,21,0)
^^1^1^2950309^^
"^DD",404.42,404.42,.08,21,1,0)
This field indicates the type of care provided by this assignment.
"^DD",404.42,404.42,.08,23,0)
^^3^3^2960522^
"^DD",404.42,404.42,.08,23,1,0)
Currently there are only two choices in this set of codes.  If additional
"^DD",404.42,404.42,.08,23,2,0)
choices are permited, the GUI forms will have to be updated from a
"^DD",404.42,404.42,.08,23,3,0)
check-box to another display method.
"^DD",404.42,404.42,.08,"DT")
2960325
"^DD",404.42,404.42,.09,0)
TEAM DISCHARGE DATE^DX^^0;9^S %DT="ETX" D ^%DT S X=Y K:Y<1 X IF $D(X) D:$P(^SCPT(404.42,DA,0),U,2)>X EN^DDIOL("Discharge must be after Assigned Date","","?5") K:$P(^SCPT(404.42,DA,0),U,2)>X X
"^DD",404.42,404.42,.09,3)
Enter the date/time the team was no longer assigned to the patient.
"^DD",404.42,404.42,.09,21,0)
^^1^1^2950717^^
"^DD",404.42,404.42,.09,21,1,0)
This is the date/time that the team ceased to be assigned to the patient.
"^DD",404.42,404.42,.09,"DT")
2950717
"^DD",404.42,404.42,.1,0)
RESTRICT CONSULTS^S^1:YES;0:NO;^0;10^Q
"^DD",404.42,404.42,.1,3)
Are users not allowed to make consult appointments if a patient is not enrolled in a clinic?
"^DD",404.42,404.42,.1,21,0)
^^3^3^2950706^^
"^DD",404.42,404.42,.1,21,1,0)
This attribute prevents users from making consult appointments to clinics
"^DD",404.42,404.42,.1,21,2,0)
in which the patient is not enrolled. This parameter
"^DD",404.42,404.42,.1,21,3,0)
overrides the same parameter at the team level.
"^DD",404.42,404.42,.1,"DT")
2950706
"^DD",404.42,404.42,.11,0)
USER ENTERING^P200'^VA(200,^0;11^Q
"^DD",404.42,404.42,.11,3)
This is the user who entered the record.
"^DD",404.42,404.42,.11,21,0)
^^1^1^2950706^
"^DD",404.42,404.42,.11,21,1,0)
This is the user who entered this record.
"^DD",404.42,404.42,.11,"DT")
2950706
"^DD",404.42,404.42,.12,0)
DATE/TIME ENTERED^D^^0;12^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",404.42,404.42,.12,1,0)
^.1^^0
"^DD",404.42,404.42,.12,3)
This is the date/time that the history of teams and practitioner positions was entered.
"^DD",404.42,404.42,.12,21,0)
^^1^1^2960517^^
"^DD",404.42,404.42,.12,21,1,0)
This is the date/time that the history of teams and practitioner positions was entered.
"^DD",404.42,404.42,.12,"DT")
2960528
"^DD",404.42,404.42,.13,0)
LAST EDITED BY^P200'^VA(200,^0;13^Q
"^DD",404.42,404.42,.13,3)
This is the user who last edited the record.
"^DD",404.42,404.42,.13,21,0)
^^1^1^2950706^
"^DD",404.42,404.42,.13,21,1,0)
This is the user who last edited the record.
"^DD",404.42,404.42,.13,"DT")
2950706
"^DD",404.42,404.42,.14,0)
DATE/TIME LAST EDITED^D^^0;14^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",404.42,404.42,.14,1,0)
^.1^^0
"^DD",404.42,404.42,.14,3)
This is the date/time the record was last edited.
"^DD",404.42,404.42,.14,21,0)
^^1^1^2960517^^
"^DD",404.42,404.42,.14,21,1,0)
This is the date/time the record was last edited.
"^DD",404.42,404.42,.14,"DT")
2960528
"^DD",404.42,404.42,1,0)
PURPOSE^404.421^^1;0
"^DD",404.42,404.421,0)
PURPOSE SUB-FIELD^^.01^1
"^DD",404.42,404.421,0,"DT")
2950309
"^DD",404.42,404.421,0,"NM","PURPOSE")

"^DD",404.42,404.421,0,"UP")
404.42
"^DD",404.42,404.421,.01,0)
PURPOSE^W^^0;1^Q
"^DD",404.42,404.421,.01,21,0)
^^2^2^2950309^
"^DD",404.42,404.421,.01,21,1,0)
This field should contain the purpose of the care this assignment will
"^DD",404.42,404.421,.01,21,2,0)
provide.
"^DD",404.42,404.421,.01,"DT")
2950309
"^DD",404.43,404.43,0)
FIELD^^.09^9
"^DD",404.43,404.43,0,"DT")
2960314
"^DD",404.43,404.43,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^SCTM(404.57,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(404.57,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",404.43,404.43,0,"IX","ADFN",404.43,.01)

"^DD",404.43,404.43,0,"IX","ADFN1",404.43,.02)

"^DD",404.43,404.43,0,"IX","ADFN2",404.43,.03)

"^DD",404.43,404.43,0,"IX","APCPOS",404.43,.01)

"^DD",404.43,404.43,0,"IX","APCPOS1",404.43,.05)

"^DD",404.43,404.43,0,"IX","APCPOS2",404.43,.03)

"^DD",404.43,404.43,0,"IX","APCPOS3",404.43,.02)

"^DD",404.43,404.43,0,"IX","APRIMARY",404.43,.01)

"^DD",404.43,404.43,0,"IX","APRIMARY1",404.43,.02)

"^DD",404.43,404.43,0,"IX","APRIMARY2",404.43,.03)

"^DD",404.43,404.43,0,"IX","APTPA",404.43,.02)

"^DD",404.43,404.43,0,"IX","APTPA1",404.43,.01)

"^DD",404.43,404.43,0,"IX","B",404.43,.01)

"^DD",404.43,404.43,0,"NM","PATIENT TEAM POSITION ASSIGNMENT")

"^DD",404.43,404.43,.01,0)
PATIENT TEAM ASSIGNMENT^RP404.42'^SCPT(404.42,^0;1^Q
"^DD",404.43,404.43,.01,1,0)
^.1
"^DD",404.43,404.43,.01,1,1,0)
404.43^B
"^DD",404.43,404.43,.01,1,1,1)
S ^SCPT(404.43,"B",$E(X,1,30),DA)=""
"^DD",404.43,404.43,.01,1,1,2)
K ^SCPT(404.43,"B",$E(X,1,30),DA)
"^DD",404.43,404.43,.01,1,2,0)
404.43^APRIMARY^MUMPS
"^DD",404.43,404.43,.01,1,2,1)
N SC2,SC3 S SC2=$P($G(^SCPT(404.43,DA,0)),U,2) I SC2 S SC3=$P($G(^(0)),U,3) I SC3]"" S ^SCPT(404.43,"APRIMARY",X,SC2,-SC3,DA)=""
"^DD",404.43,404.43,.01,1,2,2)
N SC2,SC3 S SC2=$P($G(^SCPT(404.43,DA,0)),U,2) I SC2 S SC3=$P($G(^(0)),U,3) I SC3]"" K ^SCPT(404.43,"APRIMARY",X,SC2,-SC3,DA)
"^DD",404.43,404.43,.01,1,2,"%D",0)
^^1^1^2950908^
"^DD",404.43,404.43,.01,1,2,"%D",1,0)
This sorts by PATIENT TEAM ASSIGNMENT(#.01), then by TEAM POSITION(#.02), then by -POSITION ASSIGNED DATE(#.03).  There are associated cross references for each of these fields.
"^DD",404.43,404.43,.01,1,2,"DT")
2950908
"^DD",404.43,404.43,.01,1,3,0)
404.43^APTPA1^MUMPS
"^DD",404.43,404.43,.01,1,3,1)
N SC1 S SC1=$P($G(^SCPT(404.43,DA,0)),U,2) I SC1 S ^SCPT(404.43,"APTPA",SC1,X,DA)=""
"^DD",404.43,404.43,.01,1,3,2)
N SC1 S SC1=$P($G(^SCPT(404.43,DA,0)),U,2) I SC1 K ^SCPT(404.43,"APTPA",SC1,X,DA)
"^DD",404.43,404.43,.01,1,3,"%D",0)
^^1^1^2951023^
"^DD",404.43,404.43,.01,1,3,"%D",1,0)
This sorts by TEAM POSITION(#.02), then by PATIENT TEAM ASSIGNMENT(#.01).  There is an associated cross reference for the TEAM POSITION Field (#.02).
"^DD",404.43,404.43,.01,1,3,"DT")
2951023
"^DD",404.43,404.43,.01,1,4,0)
404.43^ADFN^MUMPS
"^DD",404.43,404.43,.01,1,4,1)
N SCDFN,SC2,SC3 S SC2=$P($G(^SCPT(404.43,DA,0)),U,2) I SC2 S SC3=$P($G(^(0)),U,3) I SC3]"" S SCDFN=$P($G(^SCPT(404.42,X,0)),U,1) I SCDFN S ^SCPT(404.43,"ADFN",SCDFN,SC2,SC3,DA)=""
"^DD",404.43,404.43,.01,1,4,2)
N SCDFN,SC2,SC3 S SC2=$P($G(^SCPT(404.43,DA,0)),U,2) I SC2 S SC3=$P($G(^(0)),U,3) I SC3]"" S SCDFN=$P($G(^SCPT(404.42,X,0)),U,1) I SCDFN K ^SCPT(404.43,"ADFN",SCDFN,SC2,SC3,DA)
"^DD",404.43,404.43,.01,1,4,"%D",0)
^^1^1^2960319^^^^
"^DD",404.43,404.43,.01,1,4,"%D",1,0)
This sorts by PATIENT File ien (DFN), then by TEAM POSITION(#.02), then by POSITION ASSIGNED DATE(#.03).  There are associated cross references for each of these fields.
"^DD",404.43,404.43,.01,1,4,"DT")
2960319
"^DD",404.43,404.43,.01,1,5,0)
404.43^APCPOS^MUMPS
"^DD",404.43,404.43,.01,1,5,1)
N SC2,SC3,SC4 S SC2=$P($G(^SCPT(404.43,DA,0)),U,5) I SC2]"" S SC3=$P($G(^(0)),U,3) I SC3]"" S SC4=$P($G(^(0)),U,2) I SC4 D SETPC^SCMCDD1(X,SC2,SC3,SC4,DA)
"^DD",404.43,404.43,.01,1,5,2)
N SC2,SC3,SC4 S SC2=$P($G(^SCPT(404.43,DA,0)),U,5) I SC2]"" S SC3=$P($G(^(0)),U,3) I SC3]"" S SC4=$P($G(^(0)),U,2) I SC4 D KILLPC^SCMCDD1(X,SC2,SC3,SC4,DA)
"^DD",404.43,404.43,.01,1,5,"%D",0)
^^1^1^2960214^^^^
"^DD",404.43,404.43,.01,1,5,"%D",1,0)
This sorts by PATIENT (via Patient Team Assignement), then by PC ROLE(#.05), then by -POSITION ASSIGNED DATE(#.03), then by TEAM POSITION(#.02).  There are associated cross references for each of these fields.
"^DD",404.43,404.43,.01,1,5,"DT")
2960214
"^DD",404.43,404.43,.01,3)
This is an entry in the team position assignment file.
"^DD",404.43,404.43,.01,21,0)
^^1^1^2950508^^
"^DD",404.43,404.43,.01,21,1,0)
This is an entry in the team position assignment file.
"^DD",404.43,404.43,.01,"DT")
2960319
"^DD",404.43,404.43,.02,0)
TEAM POSITION^RP404.57'X^SCTM(404.57,^0;2^S DIC("S")="I $$OKTP^SCMCTPU(DA,Y)"
"^DD",404.43,404.43,.02,1,0)
^.1
"^DD",404.43,404.43,.02,1,1,0)
404.43^APRIMARY1^MUMPS
"^DD",404.43,404.43,.02,1,1,1)
N SC1,SC3 S SC1=$P($G(^SCPT(404.43,DA,0)),U,1) I SC1 S SC3=$P($G(^(0)),U,3) I SC3]"" S ^SCPT(404.43,"APRIMARY",SC1,X,-SC3,DA)=""
"^DD",404.43,404.43,.02,1,1,2)
N SC1,SC3 S SC1=$P($G(^SCPT(404.43,DA,0)),U,1) I SC1 S SC3=$P($G(^(0)),U,3) I SC3]"" K ^SCPT(404.43,"APRIMARY",SC1,X,-SC3,DA)
"^DD",404.43,404.43,.02,1,1,"%D",0)
^^1^1^2950908^
"^DD",404.43,404.43,.02,1,1,"%D",1,0)
This sorts by PATIENT TEAM ASSIGNMENT(#.01), then by TEAM POSITION(#.02), then by -POSITION ASSIGNED DATE(#.03).  There are associated cross references for each of these fields.
"^DD",404.43,404.43,.02,1,1,"DT")
2950908
"^DD",404.43,404.43,.02,1,2,0)
404.43^APTPA^MUMPS
"^DD",404.43,404.43,.02,1,2,1)
N SC2 S SC2=$P($G(^SCPT(404.43,DA,0)),U,1) I SC2 S ^SCPT(404.43,"APTPA",X,SC2,DA)=""
"^DD",404.43,404.43,.02,1,2,2)
N SC2 S SC2=$P($G(^SCPT(404.43,DA,0)),U,1) I SC2 K ^SCPT(404.43,"APTPA",X,SC2,DA)
"^DD",404.43,404.43,.02,1,2,"%D",0)
^^1^1^2951023^
"^DD",404.43,404.43,.02,1,2,"%D",1,0)
This sorts by TEAM POSITION(#.02), then by PATIENT TEAM ASSIGNMENT(#.01).  There is an associated cross reference for the PATIENT TEAM ASSIGNMENT Field (#.01).
"^DD",404.43,404.43,.02,1,2,"DT")
2951023
"^DD",404.43,404.43,.02,1,3,0)
404.43^ADFN1^MUMPS
"^DD",404.43,404.43,.02,1,3,1)
N SCDFN,SC1,SC3 S SC1=$P($G(^SCPT(404.43,DA,0)),U,1) I SC1 S SC3=$P($G(^(0)),U,3) I SC3]"" S SCDFN=$P($G(^SCPT(404.42,SC1,0)),U,1) I SCDFN S ^SCPT(404.43,"ADFN",SCDFN,X,SC3,DA)=""
"^DD",404.43,404.43,.02,1,3,2)
N SCDFN,SC1,SC3 S SC1=$P($G(^SCPT(404.43,DA,0)),U,1) I SC1 S SC3=$P($G(^(0)),U,3) I SC3]"" S SCDFN=$P($G(^SCPT(404.42,SC1,0)),U,1) I SCDFN K ^SCPT(404.43,"ADFN",SCDFN,X,SC3,DA)
"^DD",404.43,404.43,.02,1,3,"%D",0)
^^1^1^2960319^^^
"^DD",404.43,404.43,.02,1,3,"%D",1,0)
This sorts by PATIENT file ien (DFN), then by TEAM POSITION(#.02), then by POSITION ASSIGNED DATE(#.03).  There are associated cross references for each of these fields.
"^DD",404.43,404.43,.02,1,3,"DT")
2960319
"^DD",404.43,404.43,.02,1,4,0)
404.43^APCPOS3^MUMPS
"^DD",404.43,404.43,.02,1,4,1)
N SC1,SC2,SC3 S SC1=$P($G(^SCPT(404.43,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,5) I SC2]"" S SC3=$P($G(^(0)),U,3) I SC3]"" D SETPC^SCMCDD1(SC1,SC2,SC3,X,DA)
"^DD",404.43,404.43,.02,1,4,2)
N SC1,SC2,SC3 S SC1=$P($G(^SCPT(404.43,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,5) I SC2]"" S SC3=$P($G(^(0)),U,3) I SC3]"" D KILLPC^SCMCDD1(SC1,SC2,SC3,X,DA)
"^DD",404.43,404.43,.02,1,4,"%D",0)
^^2^2^2960214^^^^
"^DD",404.43,404.43,.02,1,4,"%D",1,0)
This sorts by Patient (via PATIENT TEAM ASSIGNMENT(#.01)), then by PC ROLE(#.05), then by -POSITION ASSIGNED DATE(#.03), then by
"^DD",404.43,404.43,.02,1,4,"%D",2,0)
 TEAM POSITION(#.02).  There are associated cross references for each of these fields.
"^DD",404.43,404.43,.02,1,4,"DT")
2960214
"^DD",404.43,404.43,.02,3)
Enter the position associated with the patient.
"^DD",404.43,404.43,.02,12)
used to assure position is from team
"^DD",404.43,404.43,.02,12.1)
S DIC("S")="I $$OKTP^SCMCTPU(DA,Y)"
"^DD",404.43,404.43,.02,21,0)
^^1^1^2960215^^^^
"^DD",404.43,404.43,.02,21,1,0)
This is the position associated with the patient.
"^DD",404.43,404.43,.02,23,0)
^^1^1^2960215^^^^
"^DD",404.43,404.43,.02,23,1,0)
Position must be from parent team - see screen.
"^DD",404.43,404.43,.02,"DT")
2960319
"^DD",404.43,404.43,.03,0)
POSITION ASSIGNED DATE^RDX^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X N SC1,SCNODE S SC1=$G(X),SCNODE=$G(^SCPT(404.43,+$G(DA),0)) K:'$$OKACTTP^SCMCTPU(SCNODE,SC1) X
"^DD",404.43,404.43,.03,1,0)
^.1
"^DD",404.43,404.43,.03,1,1,0)
404.43^APRIMARY2^MUMPS
"^DD",404.43,404.43,.03,1,1,1)
N SC1,SC2 S SC1=$P($G(^SCPT(404.43,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,2) I SC2 S ^SCPT(404.43,"APRIMARY",SC1,SC2,-X,DA)=""
"^DD",404.43,404.43,.03,1,1,2)
N SC1,SC2 S SC1=$P($G(^SCPT(404.43,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,2) I SC2 K ^SCPT(404.43,"APRIMARY",SC1,SC2,-X,DA)
"^DD",404.43,404.43,.03,1,1,"%D",0)
^^1^1^2950908^
"^DD",404.43,404.43,.03,1,1,"%D",1,0)
This sorts by PATIENT TEAM ASSIGNMENT(#.01), then by TEAM POSITION(#.02), then by -POSITION ASSIGNED DATE(#.03).  There are associated cross references for each of these fields.
"^DD",404.43,404.43,.03,1,1,"DT")
2950908
"^DD",404.43,404.43,.03,1,2,0)
404.43^ADFN2^MUMPS
"^DD",404.43,404.43,.03,1,2,1)
N SCDFN,SC1,SC2 S SC1=$P($G(^SCPT(404.43,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,2) I SC2 S SCDFN=$P($G(^SCPT(404.42,SC1,0)),U,1) I SCDFN S ^SCPT(404.43,"ADFN",SCDFN,SC2,X,DA)=""
"^DD",404.43,404.43,.03,1,2,2)
N SCDFN,SC1,SC2 S SC1=$P($G(^SCPT(404.43,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,2) I SC2 S SCDFN=$P($G(^SCPT(404.42,SC1,0)),U,1) I SCDFN K ^SCPT(404.43,"ADFN",SCDFN,SC2,X,DA)
"^DD",404.43,404.43,.03,1,2,"%D",0)
^^1^1^2960319^^
"^DD",404.43,404.43,.03,1,2,"%D",1,0)
This sorts by PATIENT file ien (DFN), then by TEAM POSITION(#.02), then by POSITION ASSIGNED DATE(#.03).  There are associated cross references for each of these fields.
"^DD",404.43,404.43,.03,1,2,"DT")
2960319
"^DD",404.43,404.43,.03,1,3,0)
404.43^APCPOS2^MUMPS
"^DD",404.43,404.43,.03,1,3,1)
N SC1,SC2,SC4 S SC1=$P($G(^SCPT(404.43,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,5) I SC2]"" S SC4=$P($G(^(0)),U,2) I SC4 D SETPC^SCMCDD1(SC1,SC2,X,SC4,DA)
"^DD",404.43,404.43,.03,1,3,2)
N SC1,SC2,SC4 S SC1=$P($G(^SCPT(404.43,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,5) I SC2]"" S SC4=$P($G(^(0)),U,2) I SC4 D KILLPC^SCMCDD1(SC1,SC2,X,SC4,DA)
"^DD",404.43,404.43,.03,1,3,"%D",0)
^^1^1^2960214^^^^
"^DD",404.43,404.43,.03,1,3,"%D",1,0)
This sorts by Patient (via PATIENT TEAM ASSIGNMENT(#.01)), then by PC ROLE(#.05), then by -POSITION ASSIGNED DATE(#.03), then by TEAM POSITION(#.02).  There are associated cross references for each of these fields.
"^DD",404.43,404.43,.03,1,3,"DT")
2960214
"^DD",404.43,404.43,.03,3)
S %DT="ESTX" D ^%DT S X=Y K:Y<1 X N SC1,SCNODE S SC1=$G(X),SCNODE=$G(^SCPT(404.43,D0,0)) K:'$$OKACTTP^SCMCTPU(SCNODE,SC1) X
"^DD",404.43,404.43,.03,21,0)
^^1^1^2960517^^^^
"^DD",404.43,404.43,.03,21,1,0)
This is the date that the team position was assigned to the patient.
"^DD",404.43,404.43,.03,"DT")
2960517
"^DD",404.43,404.43,.04,0)
POSITION UNASSIGNED DATE^DX^^0;4^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X N SC1,SCNODE S SC1=$G(X),SCNODE=$G(^SCPT(404.43,DA,0)) K:'$$OKINTP^SCMCTPU(SCNODE,SC1) X
"^DD",404.43,404.43,.04,3)
This is the date that the position is no longer associated with the patient.
"^DD",404.43,404.43,.04,21,0)
^^1^1^2950717^
"^DD",404.43,404.43,.04,21,1,0)
This is the date/time that the position is no longer associated with the patient.
"^DD",404.43,404.43,.04,"DT")
2950908
"^DD",404.43,404.43,.05,0)
PC ROLE^SX^0:NO PC ROLE;1:PC PRACTITIONER;2:PC ATTENDING;^0;5^N SC1 S SC1=$$OKROLE^SCMCTPU(DA,X) K:'SC1 X
"^DD",404.43,404.43,.05,1,0)
^.1
"^DD",404.43,404.43,.05,1,1,0)
404.43^APCPOS1^MUMPS
"^DD",404.43,404.43,.05,1,1,1)
N SC1,SC3,SC4 S SC1=$P($G(^SCPT(404.43,DA,0)),U,1) I SC1 S SC3=$P($G(^(0)),U,3) I SC3]"" S SC4=$P($G(^(0)),U,2) I SC4 D SETPC^SCMCDD1(SC1,X,SC3,SC4,DA)
"^DD",404.43,404.43,.05,1,1,2)
N SC1,SC3,SC4 S SC1=$P($G(^SCPT(404.43,DA,0)),U,1) I SC1 S SC3=$P($G(^(0)),U,3) I SC3]"" S SC4=$P($G(^(0)),U,2) I SC4 D KILLPC^SCMCDD1(SC1,X,SC3,SC4,DA)
"^DD",404.43,404.43,.05,1,1,"%D",0)
^^1^1^2960214^^^^
"^DD",404.43,404.43,.05,1,1,"%D",1,0)
This sorts by Patient (via PATIENT TEAM ASSIGNMENT(#.01)), then by PC ROLE(#.05), then by -POSITION ASSIGNED DATE(#.03), then by TEAM POSITION(#.02).  There are associated cross references for each of these fields.
"^DD",404.43,404.43,.05,1,1,"DT")
2960214
"^DD",404.43,404.43,.05,3)
PC Assignments are only allowed if Patient Team Assignment is for Primary Care
"^DD",404.43,404.43,.05,21,0)
^^2^2^2960215^^^^
"^DD",404.43,404.43,.05,21,1,0)
This is used to indicate if patient - team position assigment is a 
"^DD",404.43,404.43,.05,21,2,0)
special one (e.g. primary care practitioner or primary care attending).
"^DD",404.43,404.43,.05,23,0)
^^1^1^2960215^^^
"^DD",404.43,404.43,.05,23,1,0)
This is only allowable if the team assignment is a pc team assignment.
"^DD",404.43,404.43,.05,"DT")
2960215
"^DD",404.43,404.43,.06,0)
USER ENTERING^P200'^VA(200,^0;6^Q
"^DD",404.43,404.43,.06,3)
The user who initially created the record
"^DD",404.43,404.43,.06,21,0)
^^1^1^2960312^
"^DD",404.43,404.43,.06,21,1,0)
This is the user who initially created the record.
"^DD",404.43,404.43,.06,"DT")
2960312
"^DD",404.43,404.43,.07,0)
DATE/TIME ENTERED^D^^0;7^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",404.43,404.43,.07,3)
This is the date/time that the history of the position was entered.
"^DD",404.43,404.43,.07,21,0)
^^1^1^2960312^
"^DD",404.43,404.43,.07,21,1,0)
This is the date/time that the history of the position was entered.
"^DD",404.43,404.43,.07,"DT")
2960312
"^DD",404.43,404.43,.08,0)
LAST EDITED BY^P200'^VA(200,^0;8^Q
"^DD",404.43,404.43,.08,3)
This is the user who last edited the record.
"^DD",404.43,404.43,.08,21,0)
^^1^1^2960312^
"^DD",404.43,404.43,.08,21,1,0)
This is the user who last edited the record.
"^DD",404.43,404.43,.08,"DT")
2960312
"^DD",404.43,404.43,.09,0)
DATE/TIME LAST EDITED^D^^0;9^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",404.43,404.43,.09,3)
This is the date/time the record was last edited.
"^DD",404.43,404.43,.09,21,0)
^^1^1^2960312^
"^DD",404.43,404.43,.09,21,1,0)
This is the date/time the record was last edited.
"^DD",404.43,404.43,.09,"DT")
2960312
"^DD",404.51,404.51,0)
FIELD^^.12^19
"^DD",404.51,404.51,0,"DDA")
N
"^DD",404.51,404.51,0,"DT")
2960528
"^DD",404.51,404.51,0,"IX","AINST",404.51,.07)

"^DD",404.51,404.51,0,"IX","ASCTEAM",404.51,.01)

"^DD",404.51,404.51,0,"IX","B",404.51,.01)

"^DD",404.51,404.51,0,"NM","TEAM")

"^DD",404.51,404.51,0,"PT",2,404.02)

"^DD",404.51,404.51,0,"PT",44.40457,.02)

"^DD",404.51,404.51,0,"PT",101.9,.01)

"^DD",404.51,404.51,0,"PT",403.22,.02)

"^DD",404.51,404.51,0,"PT",404.42,.03)

"^DD",404.51,404.51,0,"PT",404.53,.01)

"^DD",404.51,404.51,0,"PT",404.55,.01)

"^DD",404.51,404.51,0,"PT",404.55,.02)

"^DD",404.51,404.51,0,"PT",404.56,.01)

"^DD",404.51,404.51,0,"PT",404.57,.02)

"^DD",404.51,404.51,0,"PT",404.58,.01)

"^DD",404.51,404.51,0,"PT",404.95,40)

"^DD",404.51,404.51,0,"PT",404.9503,.01)

"^DD",404.51,404.51,.01,0)
NAME^RFX^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X K:$S('$D(X):1,('$D(^SCTM(404.51,"B",X))):0,($G(DIUTIL)="VERIFY FIELDS"):0,1:1) X D:'$D(X) EN^DDIOL("Duplicate Team Names are not allowed.  Name must be 3-30 characters.")
"^DD",404.51,404.51,.01,1,0)
^.1
"^DD",404.51,404.51,.01,1,1,0)
404.51^B
"^DD",404.51,404.51,.01,1,1,1)
S ^SCTM(404.51,"B",$E(X,1,30),DA)=""
"^DD",404.51,404.51,.01,1,1,2)
K ^SCTM(404.51,"B",$E(X,1,30),DA)
"^DD",404.51,404.51,.01,1,2,0)
404.51^ASCTEAM^MUMPS
"^DD",404.51,404.51,.01,1,2,1)
D STSCTMNM^SCMCDD2(DA)
"^DD",404.51,404.51,.01,1,2,2)
D KLSCTMNM^SCMCDD2(DA)
"^DD",404.51,404.51,.01,1,2,"%D",0)
^^5^5^2960401^^
"^DD",404.51,404.51,.01,1,2,"%D",1,0)
This edits the whole cross reference in the Hospital Location File (#44),
"^DD",404.51,404.51,.01,1,2,"%D",2,0)
'TEAM'.  This cross-reference allows users to use the team name to find
"^DD",404.51,404.51,.01,1,2,"%D",3,0)
clinics associated with the team's team positions.  See the 'ASCTEAM'
"^DD",404.51,404.51,.01,1,2,"%D",4,0)
cross-reference in the TEAM POSITION File (#404.57) - in the 'ASSOCIATED
"^DD",404.51,404.51,.01,1,2,"%D",5,0)
CLINIC' (#.09) Field.
"^DD",404.51,404.51,.01,1,2,"DT")
2960401
"^DD",404.51,404.51,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",404.51,404.51,.01,23,0)
^^1^1^2941104^^
"^DD",404.51,404.51,.01,23,1,0)
Place holder.  Integration issue.  Can another DHCP file be used?
"^DD",404.51,404.51,.01,"DT")
2960517
"^DD",404.51,404.51,.02,0)
TEAM PHONE NUMBER^F^^0;2^K:$L(X)>20!($L(X)<3) X
"^DD",404.51,404.51,.02,3)
Answer must be 3-20 characters in length.
"^DD",404.51,404.51,.02,21,0)
^^1^1^2950811^
"^DD",404.51,404.51,.02,21,1,0)
This is the phone number associated with the team.
"^DD",404.51,404.51,.02,"DT")
2950811
"^DD",404.51,404.51,.03,0)
TEAM PURPOSE^RP403.47'^SD(403.47,^0;3^Q
"^DD",404.51,404.51,.03,3)
This is the purpose of the team (e.g. Primary Care)
"^DD",404.51,404.51,.03,21,0)
^^9^9^2960320^^^
"^DD",404.51,404.51,.03,21,1,0)
This defines the primary role of the team.
"^DD",404.51,404.51,.03,21,2,0)
 
"^DD",404.51,404.51,.03,21,3,0)
Examples:
"^DD",404.51,404.51,.03,21,4,0)
    - Primary Care
"^DD",404.51,404.51,.03,21,5,0)
    - Inpatient Ward
"^DD",404.51,404.51,.03,21,6,0)
    - Mental Health Treatment
"^DD",404.51,404.51,.03,21,7,0)
    - Rapid Response
"^DD",404.51,404.51,.03,21,8,0)
    - Community Care
"^DD",404.51,404.51,.03,21,9,0)
    - Special Treatment Program
"^DD",404.51,404.51,.03,"DT")
2950911
"^DD",404.51,404.51,.04,0)
DEFAULT TEAM PRINTER^P3.5'^%ZIS(1,^0;4^Q
"^DD",404.51,404.51,.04,3)
Enter the default device for team reports.
"^DD",404.51,404.51,.04,21,0)
^^1^1^2950811^
"^DD",404.51,404.51,.04,21,1,0)
This is the default printer for the team.
"^DD",404.51,404.51,.04,"DT")
2950811
"^DD",404.51,404.51,.05,0)
CAN ACT AS A PC TEAM?^S^1:YES;0:NO;^0;5^Q
"^DD",404.51,404.51,.05,3)
By answering 'Yes', this team will be allowed to be assigned as a PC Team.
"^DD",404.51,404.51,.05,21,0)
^^3^3^2950306^^
"^DD",404.51,404.51,.05,21,1,0)
Can this team be the primary care team for a patient?
"^DD",404.51,404.51,.05,21,2,0)
 
"^DD",404.51,404.51,.05,21,3,0)
(Even if the team's principle purpose is not primary care, it still maybe able act as a primary care team for some patients. This attribute indicates if that is possible.)
"^DD",404.51,404.51,.05,"DT")
2950306
"^DD",404.51,404.51,.06,0)
SERVICE/DEPARTMENT^RP49'^DIC(49,^0;6^Q
"^DD",404.51,404.51,.06,3)
Enter the service/department most closely associated with this team.
"^DD",404.51,404.51,.06,21,0)
^^1^1^2950911^^
"^DD",404.51,404.51,.06,21,1,0)
Entry in the Service/Section file.
"^DD",404.51,404.51,.06,"DT")
2950911
"^DD",404.51,404.51,.07,0)
INSTITUTION^RP4'^DIC(4,^0;7^Q
"^DD",404.51,404.51,.07,1,0)
^.1
"^DD",404.51,404.51,.07,1,1,0)
404.51^AINST
"^DD",404.51,404.51,.07,1,1,1)
S ^SCTM(404.51,"AINST",$E(X,1,30),DA)=""
"^DD",404.51,404.51,.07,1,1,2)
K ^SCTM(404.51,"AINST",$E(X,1,30),DA)
"^DD",404.51,404.51,.07,1,1,"%D",0)
^^1^1^2950703^
"^DD",404.51,404.51,.07,1,1,"%D",1,0)
This sorts by institution - can be used for multi-divisional sites.
"^DD",404.51,404.51,.07,1,1,"DT")
2950703
"^DD",404.51,404.51,.07,3)
This is the entry for the site in the INSTITUTION File.
"^DD",404.51,404.51,.07,21,0)
^^1^1^2950911^^
"^DD",404.51,404.51,.07,21,1,0)
This is the entry for the site in the INSTITUTION File.
"^DD",404.51,404.51,.07,"DT")
2950911
"^DD",404.51,404.51,.08,0)
MAX NUMBER OF PATIENTS^NJ5,0^^0;8^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",404.51,404.51,.08,3)
Type a Number between 0 and 99999, 0 Decimal Digits
"^DD",404.51,404.51,.08,21,0)
^^2^2^2960528^^
"^DD",404.51,404.51,.08,21,1,0)
The maximum allowable number of patients for this team.  After this number
"^DD",404.51,404.51,.08,21,2,0)
is exceeded, no more patients should be assigned to this team.
"^DD",404.51,404.51,.08,"DT")
2950228
"^DD",404.51,404.51,.09,0)
MAX % OF PRIMARY CARE PATIENTS^NJ4,0^^0;9^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
"^DD",404.51,404.51,.09,3)
Type a Number between 0 and 9999, 0 Decimal Digits
"^DD",404.51,404.51,.09,21,0)
^^1^1^2960528^^^^
"^DD",404.51,404.51,.09,21,1,0)
This is the maximum percentage of all patients assigned to primary care teams that this team should be assigned.
"^DD",404.51,404.51,.09,"DT")
2960528
"^DD",404.51,404.51,.1,0)
CLOSE TO FURTHER ASSIGNMENT?^S^1:YES;0:NO;^0;10^Q
"^DD",404.51,404.51,.1,3)
If 'YES' is entered, users may not add additional patients to this team.
"^DD",404.51,404.51,.1,21,0)
^^2^2^2950306^^
"^DD",404.51,404.51,.1,21,1,0)
This indicates that the team cannot be assigned additional patients.  This 
"^DD",404.51,404.51,.1,21,2,0)
may be used for any reason.
"^DD",404.51,404.51,.1,"DT")
2950306
"^DD",404.51,404.51,.11,0)
AUTO-ASSIGN FROM ASSC CLINICS?^S^1:YES;0:NO;^0;11^Q
"^DD",404.51,404.51,.11,3)
Should changes in enrollment data leaving patient in associated clinics automatically assign patients to this team?
"^DD",404.51,404.51,.11,21,0)
^^4^4^2960503^^
"^DD",404.51,404.51,.11,21,1,0)
By answering 'YES', enrollment into clinics that are associated clinics
"^DD",404.51,404.51,.11,21,2,0)
of active positions will result in the patient being assigned to this
"^DD",404.51,404.51,.11,21,3,0)
team.  If the clinic is associated with more than one team, no assignment
"^DD",404.51,404.51,.11,21,4,0)
will be done.
"^DD",404.51,404.51,.11,"DT")
2960318
"^DD",404.51,404.51,.12,0)
DISCHARGE FROM ASSOC. CLINICS?^S^1:YES;0:NO;^0;12^Q
"^DD",404.51,404.51,.12,3)
Should changes in enrollment data leaving patient out of clinic also discharge him from team?
"^DD",404.51,404.51,.12,21,0)
^^5^5^2960528^^^
"^DD",404.51,404.51,.12,21,1,0)
By answering 'YES', changes in enrollment data that leaves a patient
"^DD",404.51,404.51,.12,21,2,0)
discharged from a clinic will result in the patient being automatically
"^DD",404.51,404.51,.12,21,3,0)
discharged from the team.  If the patient has any active or future
"^DD",404.51,404.51,.12,21,4,0)
assignments to team positions, the patient will not be discharged from
"^DD",404.51,404.51,.12,21,5,0)
the team.
"^DD",404.51,404.51,.12,"DT")
2960318
"^DD",404.51,404.51,.13,0)
RESTRICT CONSULTS?^S^1:YES;0:NO;^0;13^Q
"^DD",404.51,404.51,.13,3)
Are users not allowed to make consult appointments if a patient is not enrolled in a clinic?
"^DD",404.51,404.51,.13,21,0)
^^6^6^2950309^
"^DD",404.51,404.51,.13,21,1,0)
This attribute prevents users from making consult appointments to clinics
"^DD",404.51,404.51,.13,21,2,0)
in which the patient is not enrolled. This parameter in the Patient
"^DD",404.51,404.51,.13,21,3,0)
Team/Position Assignment file
"^DD",404.51,404.51,.13,21,4,0)
overrides this same parameter in the team level.
"^DD",404.51,404.51,.13,21,5,0)
 
"^DD",404.51,404.51,.13,21,6,0)
(Applies to on primary teams only.)
"^DD",404.51,404.51,.13,"DT")
2950309
"^DD",404.51,404.51,50,0)
DESCRIPTION^404.525^^D;0
"^DD",404.51,404.51,201,0)
CURRENT # OF PATIENTS^CJ8^^ ; ^S X=$$TEAMCNT^SCAPMCU1(D0,DT)
"^DD",404.51,404.51,201,9)
^
"^DD",404.51,404.51,201,9.01)

"^DD",404.51,404.51,201,9.1)
S X=$$TEAMCNT^SCAPMCU1(D0,DT)
"^DD",404.51,404.51,201,21,0)
^^1^1^2960528^^^^
"^DD",404.51,404.51,201,21,1,0)
This calculates the number of patients currently assigned to the team.
"^DD",404.51,404.51,201,"DT")
2950728
"^DD",404.51,404.51,202,0)
CURRENT STATUS^CJ8^^ ; ^S X=$S((+$$ACTTM^SCMCTMU(D0)=1):"Active",1:"Inactive")
"^DD",404.51,404.51,202,9)
^
"^DD",404.51,404.51,202,9.01)

"^DD",404.51,404.51,202,9.1)
S X=$S((+$$ACTTM^SCMCTMU(D0)=1):"Active",1:"Inactive")
"^DD",404.51,404.51,202,21,0)
^^1^1^2960520^^^^
"^DD",404.51,404.51,202,21,1,0)
This indicates if the team is active on the current date.
"^DD",404.51,404.51,202,"DT")
2950714
"^DD",404.51,404.51,203,0)
CURRENT EFFECTIVE DATE^CJ8^^ ; ^N Y S Y=$P($$ACTTM^SCMCTMU(D0),U,2) D DD^%DT S X=Y
"^DD",404.51,404.51,203,9)
^
"^DD",404.51,404.51,203,9.01)

"^DD",404.51,404.51,203,9.1)
N Y S Y=$P($$ACTTM^SCMCTMU(D0),U,2) D DD^%DT S X=Y
"^DD",404.51,404.51,203,21,0)
^^1^1^2960520^^^^
"^DD",404.51,404.51,203,21,1,0)
This is the most recent date that the active status was changed.
"^DD",404.51,404.51,203,"DT")
2960520
"^DD",404.51,404.51,204,0)
CURRENT ACTIVATION DATE^CJ8^^ ; ^N Y S Y=$P($$DATES^SCAPMCU1(404.58,D0,DT),U,2) D DD^%DT S X=Y
"^DD",404.51,404.51,204,9)
^
"^DD",404.51,404.51,204,9.01)

"^DD",404.51,404.51,204,9.1)
N Y S Y=$P($$DATES^SCAPMCU1(404.58,D0,DT),U,2) D DD^%DT S X=Y
"^DD",404.51,404.51,204,21,0)
^^4^4^2960520^^^^
"^DD",404.51,404.51,204,21,1,0)
This is the activation date of the team based on today's date:
"^DD",404.51,404.51,204,21,2,0)
  For teams never active - this is the next date where the team is active
"^DD",404.51,404.51,204,21,3,0)
  For teams that are active now - this is the date it became active
"^DD",404.51,404.51,204,21,4,0)
  For teams that are currently inactive - this is the last activation date
"^DD",404.51,404.51,204,"DT")
2950728
"^DD",404.51,404.51,205,0)
CURRENT INACTIVATION DATE^CJ8^^ ; ^N Y S Y=$P($$DATES^SCAPMCU1(404.58,D0,DT),U,3) D DD^%DT S X=Y
"^DD",404.51,404.51,205,9)
^
"^DD",404.51,404.51,205,9.01)

"^DD",404.51,404.51,205,9.1)
N Y S Y=$P($$DATES^SCAPMCU1(404.58,D0,DT),U,3) D DD^%DT S X=Y
"^DD",404.51,404.51,205,21,0)
^^3^3^2960520^^^
"^DD",404.51,404.51,205,21,1,0)
This is the inactivation date as of today.
"^DD",404.51,404.51,205,21,2,0)
  For an inactive team, this is the most recent day it became inactive
"^DD",404.51,404.51,205,21,3,0)
  For an active team, this is the date it will become inactive.
"^DD",404.51,404.525,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",404.51,404.525,0,"DT")
2941104
"^DD",404.51,404.525,0,"NM","DESCRIPTION")

"^DD",404.51,404.525,0,"UP")
404.51
"^DD",404.51,404.525,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",404.51,404.525,.01,"DT")
2941104
"^DD",404.52,404.52,0)
FIELD^^.05^5
"^DD",404.52,404.52,0,"DDA")
N
"^DD",404.52,404.52,0,"DT")
2960214
"^DD",404.52,404.52,0,"ID",.02)
W "   ",$E($P(^(0),U,2),4,5)_"-"_$E($P(^(0),U,2),6,7)_"-"_$E($P(^(0),U,2),2,3)
"^DD",404.52,404.52,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^VA(200,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(200,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",404.52,404.52,0,"ID",.04)
W "   ",@("$P($P($C(59)_$S($D(^DD(404.52,.04,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,4)_"":"",2),$C(59),1)")
"^DD",404.52,404.52,0,"IX","AIDT",404.52,.01)

"^DD",404.52,404.52,0,"IX","AIDT1",404.52,.02)

"^DD",404.52,404.52,0,"IX","AIDT2",404.52,.04)

"^DD",404.52,404.52,0,"IX","B",404.52,.01)

"^DD",404.52,404.52,0,"IX","C",404.52,.03)

"^DD",404.52,404.52,0,"NM","POSITION ASSIGNMENT HISTORY")

"^DD",404.52,404.52,0,"PT",404.54,.02)

"^DD",404.52,404.52,.01,0)
TEAM POSITION^RP404.57'X^SCTM(404.57,^0;1^Q
"^DD",404.52,404.52,.01,1,0)
^.1
"^DD",404.52,404.52,.01,1,1,0)
404.52^B
"^DD",404.52,404.52,.01,1,1,1)
S ^SCTM(404.52,"B",$E(X,1,30),DA)=""
"^DD",404.52,404.52,.01,1,1,2)
K ^SCTM(404.52,"B",$E(X,1,30),DA)
"^DD",404.52,404.52,.01,1,2,0)
404.52^AIDT^MUMPS
"^DD",404.52,404.52,.01,1,2,1)
N SC2,SC3 S SC2=$P($G(^SCTM(404.52,DA,0)),U,4) I SC2]"" S SC3=$P($G(^(0)),U,2) I SC3]"" S ^SCTM(404.52,"AIDT",X,SC2,-SC3,DA)=""
"^DD",404.52,404.52,.01,1,2,2)
N SC2,SC3 S SC2=$P($G(^SCTM(404.52,DA,0)),U,4) I SC2]"" S SC3=$P($G(^(0)),U,2) I SC3]"" K ^SCTM(404.52,"AIDT",X,SC2,-SC3,DA)
"^DD",404.52,404.52,.01,1,2,"%D",0)
^^1^1^2950802^
"^DD",404.52,404.52,.01,1,2,"%D",1,0)
This sorts by TEAM POSITION(#.01), then by STATUS(#.04), then by -EFFECTIVE DATE(#.02).  There are associated cross references for each of these fields.
"^DD",404.52,404.52,.01,1,2,"DT")
2950802
"^DD",404.52,404.52,.01,3)
This is the entry in the Team Position file.
"^DD",404.52,404.52,.01,21,0)
^^1^1^2950228^^
"^DD",404.52,404.52,.01,21,1,0)
This is the entry in the Team Position file.
"^DD",404.52,404.52,.01,"DT")
2960216
"^DD",404.52,404.52,.02,0)
EFFECTIVE DATE^RD^^0;2^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",404.52,404.52,.02,1,0)
^.1^^-1
"^DD",404.52,404.52,.02,1,1,0)
404.52^AIDT1^MUMPS
"^DD",404.52,404.52,.02,1,1,1)
N SC1,SC2 S SC1=$P($G(^SCTM(404.52,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,4) I SC2]"" S ^SCTM(404.52,"AIDT",SC1,SC2,-X,DA)=""
"^DD",404.52,404.52,.02,1,1,2)
N SC1,SC2 S SC1=$P($G(^SCTM(404.52,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,4) I SC2]"" K ^SCTM(404.52,"AIDT",SC1,SC2,-X,DA)
"^DD",404.52,404.52,.02,1,1,"%D",0)
^^1^1^2950802^
"^DD",404.52,404.52,.02,1,1,"%D",1,0)
This sorts by TEAM POSITION(#.01), then by STATUS(#.04), then by -EFFECTIVE DATE(#.02).  There are associated cross references for each of these fields.
"^DD",404.52,404.52,.02,1,1,"DT")
2950802
"^DD",404.52,404.52,.02,3)
This is the date/time that the practitioner took over the position.
"^DD",404.52,404.52,.02,21,0)
^^1^1^2950908^^^
"^DD",404.52,404.52,.02,21,1,0)
This is the date/time that the practitioner took over the team position.
"^DD",404.52,404.52,.02,"DT")
2950908
"^DD",404.52,404.52,.03,0)
PRACTITIONER^R*P200'X^VA(200,^0;3^S DIC("S")="I ($D(^USR(8930.3,""B"",+Y)))!('$$USEUSR^SCMCTPU)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",404.52,404.52,.03,1,0)
^.1
"^DD",404.52,404.52,.03,1,1,0)
404.52^C
"^DD",404.52,404.52,.03,1,1,1)
S ^SCTM(404.52,"C",$E(X,1,30),DA)=""
"^DD",404.52,404.52,.03,1,1,2)
K ^SCTM(404.52,"C",$E(X,1,30),DA)
"^DD",404.52,404.52,.03,1,1,"DT")
2950807
"^DD",404.52,404.52,.03,3)
This is the practitioner that holds the position.
"^DD",404.52,404.52,.03,12)
This assures that the practitioner is in the USR Class Membership file (8930.3)
"^DD",404.52,404.52,.03,12.1)
S DIC("S")="I ($D(^USR(8930.3,""B"",+Y)))!('$$USEUSR^SCMCTPU)"
"^DD",404.52,404.52,.03,21,0)
^^1^1^2960214^^^^
"^DD",404.52,404.52,.03,21,1,0)
This is a staff member who is entered in the USR CLASS MEMBERSHIP file (8930.3).
"^DD",404.52,404.52,.03,23,0)
^^1^1^2960214^^^^
"^DD",404.52,404.52,.03,23,1,0)
Screen insures entry in 8930.3
"^DD",404.52,404.52,.03,"DT")
2960528
"^DD",404.52,404.52,.04,0)
STATUS^RS^1:ACTIVE;0:INACTIVE;^0;4^Q
"^DD",404.52,404.52,.04,1,0)
^.1
"^DD",404.52,404.52,.04,1,1,0)
404.52^AIDT2^MUMPS
"^DD",404.52,404.52,.04,1,1,1)
N SC1,SC3 S SC1=$P($G(^SCTM(404.52,DA,0)),U,1) I SC1 S SC3=$P($G(^(0)),U,2) I SC3]"" S ^SCTM(404.52,"AIDT",SC1,X,-SC3,DA)=""
"^DD",404.52,404.52,.04,1,1,2)
N SC1,SC3 S SC1=$P($G(^SCTM(404.52,DA,0)),U,1) I SC1 S SC3=$P($G(^(0)),U,2) I SC3]"" K ^SCTM(404.52,"AIDT",SC1,X,-SC3,DA)
"^DD",404.52,404.52,.04,1,1,"%D",0)
^^1^1^2950802^
"^DD",404.52,404.52,.04,1,1,"%D",1,0)
This sorts by TEAM POSITION(#.01), then by STATUS(#.04), then by -EFFECTIVE DATE(#.02).  There are associated cross references for each of these fields.
"^DD",404.52,404.52,.04,1,1,"DT")
2950802
"^DD",404.52,404.52,.04,3)
This indicates if the practitioner's position assignment is active or inactive.
"^DD",404.52,404.52,.04,21,0)
^^2^2^2950911^^^
"^DD",404.52,404.52,.04,21,1,0)
This indicates whether the practitioner's position assignment is
"^DD",404.52,404.52,.04,21,2,0)
active or inactive.
"^DD",404.52,404.52,.04,"DT")
2950802
"^DD",404.52,404.52,.05,0)
STATUS REASON^R*P403.44'X^SD(403.44,^0;5^S DIC("S")="IF $$RSNDICS^SCAPMCU1(""ZM5"")" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",404.52,404.52,.05,3)
This is the reason that the position assignment changed.
"^DD",404.52,404.52,.05,12)
This is the reason that the position assignment changed.
"^DD",404.52,404.52,.05,12.1)
S DIC("S")="IF $$RSNDICS^SCAPMCU1(""ZM5"")"
"^DD",404.52,404.52,.05,21,0)
^^1^1^2950714^^
"^DD",404.52,404.52,.05,21,1,0)
This is the reason that the position assignment changed.
"^DD",404.52,404.52,.05,"DT")
2960528
"^DD",404.56,404.56,0)
FIELD^^.02^2
"^DD",404.56,404.56,0,"DT")
2950403
"^DD",404.56,404.56,0,"ID",.02)
S DIY=$S($D(@(DIC_(+Y)_",""0"")")):$P(^("0"),U,2),1:"") D NAME^DICM2 W "   ",DINAME,@("$E("_DIC_"Y,0),0)")
"^DD",404.56,404.56,0,"IX","AC",404.56,.01)

"^DD",404.56,404.56,0,"IX","AC1",404.56,.02)

"^DD",404.56,404.56,0,"IX","APRIMARY",404.56,.01)

"^DD",404.56,404.56,0,"IX","APRIMARY1",404.56,.02)

"^DD",404.56,404.56,0,"IX","B",404.56,.01)

"^DD",404.56,404.56,0,"NM","TEAM AUTOLINK")

"^DD",404.56,404.56,.01,0)
TEAM^RP404.51'^SCTM(404.51,^0;1^Q
"^DD",404.56,404.56,.01,1,0)
^.1
"^DD",404.56,404.56,.01,1,1,0)
404.56^B
"^DD",404.56,404.56,.01,1,1,1)
S ^SCTM(404.56,"B",$E(X,1,30),DA)=""
"^DD",404.56,404.56,.01,1,1,2)
K ^SCTM(404.56,"B",$E(X,1,30),DA)
"^DD",404.56,404.56,.01,1,2,0)
404.56^APRIMARY^MUMPS
"^DD",404.56,404.56,.01,1,2,1)
N SC2 S SC2=$P($G(^SCTM(404.56,DA,0)),U,2) I SC2]"" S ^SCTM(404.56,"APRIMARY",X,SC2,DA)=""
"^DD",404.56,404.56,.01,1,2,2)
N SC2 S SC2=$P($G(^SCTM(404.56,DA,0)),U,2) I SC2]"" K ^SCTM(404.56,"APRIMARY",X,SC2,DA)
"^DD",404.56,404.56,.01,1,2,"%D",0)
^^1^1^2950403^^
"^DD",404.56,404.56,.01,1,2,"%D",1,0)
This sorts by TEAM(#.01), then by AUTOLINK(#.02).  There are associated cross references for each of these fields.
"^DD",404.56,404.56,.01,1,2,"DT")
2950403
"^DD",404.56,404.56,.01,1,3,0)
404.56^AC^MUMPS
"^DD",404.56,404.56,.01,1,3,1)
N SC1 S SC1=$P($G(^SCTM(404.56,DA,0)),U,2) I SC1]"" S ^SCTM(404.56,"AC",SC1,X,DA)=""
"^DD",404.56,404.56,.01,1,3,2)
N SC1 S SC1=$P($G(^SCTM(404.56,DA,0)),U,2) I SC1]"" K ^SCTM(404.56,"AC",SC1,X,DA)
"^DD",404.56,404.56,.01,1,3,"%D",0)
^^1^1^2950403^^
"^DD",404.56,404.56,.01,1,3,"%D",1,0)
This sorts by AUTOLINK(#.02), then by TEAM(#.01).  There is an associated cross reference for the AUTOLINK Field (#.02).
"^DD",404.56,404.56,.01,1,3,"DT")
2950403
"^DD",404.56,404.56,.01,3)

"^DD",404.56,404.56,.01,"DT")
2950403
"^DD",404.56,404.56,.02,0)
AUTOLINK^RV^^0;2^Q
"^DD",404.56,404.56,.02,1,0)
^.1
"^DD",404.56,404.56,.02,1,1,0)
404.56^APRIMARY1^MUMPS
"^DD",404.56,404.56,.02,1,1,1)
N SC1 S SC1=$P($G(^SCTM(404.56,DA,0)),U,1) I SC1 S ^SCTM(404.56,"APRIMARY",SC1,X,DA)=""
"^DD",404.56,404.56,.02,1,1,2)
N SC1 S SC1=$P($G(^SCTM(404.56,DA,0)),U,1) I SC1 K ^SCTM(404.56,"APRIMARY",SC1,X,DA)
"^DD",404.56,404.56,.02,1,1,"%D",0)
^^1^1^2950403^
"^DD",404.56,404.56,.02,1,1,"%D",1,0)
This sorts by TEAM(#.01), then by AUTOLINK(#.02).  There are associated cross references for each of these fields.
"^DD",404.56,404.56,.02,1,1,"DT")
2950403
"^DD",404.56,404.56,.02,1,2,0)
404.56^AC1^MUMPS
"^DD",404.56,404.56,.02,1,2,1)
N SC2 S SC2=$P($G(^SCTM(404.56,DA,0)),U,1) I SC2 S ^SCTM(404.56,"AC",X,SC2,DA)=""
"^DD",404.56,404.56,.02,1,2,2)
N SC2 S SC2=$P($G(^SCTM(404.56,DA,0)),U,1) I SC2 K ^SCTM(404.56,"AC",X,SC2,DA)
"^DD",404.56,404.56,.02,1,2,"%D",0)
^^1^1^2950403^
"^DD",404.56,404.56,.02,1,2,"%D",1,0)
This sorts by AUTOLINK(#.02), then by TEAM(#.01).  There is an associated cross reference for the TEAM Field (#.01).
"^DD",404.56,404.56,.02,1,2,"DT")
2950403
"^DD",404.56,404.56,.02,3)
Enter the file and entry the team will be linked to for automatic patient updates during ADT movements.
"^DD",404.56,404.56,.02,21,0)
^^1^1^2950403^^
"^DD",404.56,404.56,.02,21,1,0)
Links for automatic patient addition/removal based on ADT movements.
"^DD",404.56,404.56,.02,"DT")
2950403
"^DD",404.56,404.56,.02,"V",0)
^.12P^5^5
"^DD",404.56,404.56,.02,"V",1,0)
42^WARD^1^W^n^n
"^DD",404.56,404.56,.02,"V",2,0)
405.4^ROOM-BED^2^R^n^n
"^DD",404.56,404.56,.02,"V",3,0)
200^PRACTITIONER^3^P^y^n
"^DD",404.56,404.56,.02,"V",3,1)
S DIC("S")="I $D(X),$D(^XUSEC(""PROVIDER"",+Y))"
"^DD",404.56,404.56,.02,"V",3,2)
Allows only personnel with 'provider' key.
"^DD",404.56,404.56,.02,"V",4,0)
45.7^SPECIALTY^4^S^n^n
"^DD",404.56,404.56,.02,"V",5,0)
44^CLINIC^5^C^y^n
"^DD",404.56,404.56,.02,"V",5,1)
S DIC("S")="I $P(^(0),U,3)=""C"""
"^DD",404.56,404.56,.02,"V",5,2)
Allows only clinic locations
"^DD",404.57,404.57,0)
FIELD^^304^22
"^DD",404.57,404.57,0,"DDA")
N
"^DD",404.57,404.57,0,"DT")
2960517
"^DD",404.57,404.57,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^SCTM(404.51,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(404.51,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",404.57,404.57,0,"ID","WRITE")
D EN^DDIOL($$WRITETP^SCMCDD1(Y),"","?0")
"^DD",404.57,404.57,0,"IX","AC",404.57,.03)

"^DD",404.57,404.57,0,"IX","APRIMARY",404.57,.01)

"^DD",404.57,404.57,0,"IX","APRIMARY1",404.57,.02)

"^DD",404.57,404.57,0,"IX","ASCTEAM",404.57,.09)

"^DD",404.57,404.57,0,"IX","ATMPOS",404.57,.01)

"^DD",404.57,404.57,0,"IX","ATMPOS1",404.57,.02)

"^DD",404.57,404.57,0,"IX","AUSR",404.57,.13)

"^DD",404.57,404.57,0,"IX","B",404.57,.01)

"^DD",404.57,404.57,0,"IX","C",404.57,.02)

"^DD",404.57,404.57,0,"IX","D",404.57,.09)

"^DD",404.57,404.57,0,"NM","TEAM POSITION")

"^DD",404.57,404.57,0,"PT",44.40457,.01)

"^DD",404.57,404.57,0,"PT",403.34,.01)

"^DD",404.57,404.57,0,"PT",404.43,.02)

"^DD",404.57,404.57,0,"PT",404.52,.01)

"^DD",404.57,404.57,0,"PT",404.53,.02)

"^DD",404.57,404.57,0,"PT",404.57,.1)

"^DD",404.57,404.57,0,"PT",404.59,.01)

"^DD",404.57,404.57,.01,0)
POSITION^RFX^^0;1^N SCZ K:$L(X)>30!($L(X)<3) X D:$D(X) IPTF^SCMCTPU(X,.SCZ,.X)
"^DD",404.57,404.57,.01,1,0)
^.1
"^DD",404.57,404.57,.01,1,1,0)
404.57^B
"^DD",404.57,404.57,.01,1,1,1)
S ^SCTM(404.57,"B",$E(X,1,30),DA)=""
"^DD",404.57,404.57,.01,1,1,2)
K ^SCTM(404.57,"B",$E(X,1,30),DA)
"^DD",404.57,404.57,.01,1,2,0)
404.57^APRIMARY^MUMPS
"^DD",404.57,404.57,.01,1,2,1)
N SC2 S SC2=$P($G(^SCTM(404.57,DA,0)),U,2) I SC2 S ^SCTM(404.57,"APRIMARY",X,SC2,DA)=""
"^DD",404.57,404.57,.01,1,2,2)
N SC2 S SC2=$P($G(^SCTM(404.57,DA,0)),U,2) I SC2 K ^SCTM(404.57,"APRIMARY",X,SC2,DA)
"^DD",404.57,404.57,.01,1,2,"%D",0)
^^1^1^2951214^^^^
"^DD",404.57,404.57,.01,1,2,"%D",1,0)
This sorts by POSITION(#.01), then by TEAM(#.02).  There is an associated cross reference for the TEAM Field (#.02).
"^DD",404.57,404.57,.01,1,2,"DT")
2950503
"^DD",404.57,404.57,.01,1,3,0)
404.57^ATMPOS^MUMPS
"^DD",404.57,404.57,.01,1,3,1)
N SC1 S SC1=$P($G(^SCTM(404.57,DA,0)),U,2) I SC1 S ^SCTM(404.57,"ATMPOS",SC1,X,DA)=""
"^DD",404.57,404.57,.01,1,3,2)
N SC1 S SC1=$P($G(^SCTM(404.57,DA,0)),U,2) I SC1 K ^SCTM(404.57,"ATMPOS",SC1,X,DA)
"^DD",404.57,404.57,.01,1,3,"%D",0)
^^1^1^2950503^
"^DD",404.57,404.57,.01,1,3,"%D",1,0)
This sorts by TEAM(#.02), then by POSITION(#.01).  There is an associated cross reference for the TEAM Field (#.02).
"^DD",404.57,404.57,.01,1,3,"DT")
2950503
"^DD",404.57,404.57,.01,3)
Answer must be 3-30 characters in length - No duplicate position names within a team.
"^DD",404.57,404.57,.01,21,0)
^^1^1^2950811^^^^
"^DD",404.57,404.57,.01,21,1,0)
This is the Name of the Team Position.
"^DD",404.57,404.57,.01,"DT")
2960306
"^DD",404.57,404.57,.02,0)
TEAM^RP404.51'X^SCTM(404.51,^0;2^N SC D:$D(X)#2 IPTF^SCMCTPU(.SC,X,.X)
"^DD",404.57,404.57,.02,1,0)
^.1
"^DD",404.57,404.57,.02,1,1,0)
404.57^APRIMARY1^MUMPS
"^DD",404.57,404.57,.02,1,1,1)
N SC1 S SC1=$P($G(^SCTM(404.57,DA,0)),U,1) I SC1]"" S ^SCTM(404.57,"APRIMARY",SC1,X,DA)=""
"^DD",404.57,404.57,.02,1,1,2)
N SC1 S SC1=$P($G(^SCTM(404.57,DA,0)),U,1) I SC1]"" K ^SCTM(404.57,"APRIMARY",SC1,X,DA)
"^DD",404.57,404.57,.02,1,1,"%D",0)
^^1^1^2951214^^^^
"^DD",404.57,404.57,.02,1,1,"%D",1,0)
This sorts by POSITION(#.01), then by TEAM(#.02).  There is an associated cross reference for the POSITION Field (#.01).
"^DD",404.57,404.57,.02,1,1,"DT")
2950503
"^DD",404.57,404.57,.02,1,2,0)
404.57^C
"^DD",404.57,404.57,.02,1,2,1)
S ^SCTM(404.57,"C",$E(X,1,30),DA)=""
"^DD",404.57,404.57,.02,1,2,2)
K ^SCTM(404.57,"C",$E(X,1,30),DA)
"^DD",404.57,404.57,.02,1,2,"DT")
2950308
"^DD",404.57,404.57,.02,1,3,0)
404.57^ATMPOS1^MUMPS
"^DD",404.57,404.57,.02,1,3,1)
N SC2 S SC2=$P($G(^SCTM(404.57,DA,0)),U,1) I SC2]"" S ^SCTM(404.57,"ATMPOS",X,SC2,DA)=""
"^DD",404.57,404.57,.02,1,3,2)
N SC2 S SC2=$P($G(^SCTM(404.57,DA,0)),U,1) I SC2]"" K ^SCTM(404.57,"ATMPOS",X,SC2,DA)
"^DD",404.57,404.57,.02,1,3,"%D",0)
^^1^1^2950503^
"^DD",404.57,404.57,.02,1,3,"%D",1,0)
This sorts by TEAM(#.02), then by POSITION(#.01).  There is an associated cross reference for the POSITION Field (#.01).
"^DD",404.57,404.57,.02,1,3,"DT")
2950503
"^DD",404.57,404.57,.02,3)
This is the entry in the team File
"^DD",404.57,404.57,.02,21,0)
^^1^1^2951128^^^^
"^DD",404.57,404.57,.02,21,1,0)
Entry in the team file.
"^DD",404.57,404.57,.02,23,0)
^^1^1^2951128^^
"^DD",404.57,404.57,.02,23,1,0)
Pointer  to TEAM File (#404.51)
"^DD",404.57,404.57,.02,"DT")
2950905
"^DD",404.57,404.57,.03,0)
STANDARD ROLE NAME^RP403.46'^SD(403.46,^0;3^Q
"^DD",404.57,404.57,.03,1,0)
^.1
"^DD",404.57,404.57,.03,1,1,0)
404.57^AC
"^DD",404.57,404.57,.03,1,1,1)
S ^SCTM(404.57,"AC",$E(X,1,30),DA)=""
"^DD",404.57,404.57,.03,1,1,2)
K ^SCTM(404.57,"AC",$E(X,1,30),DA)
"^DD",404.57,404.57,.03,1,1,"DT")
2960126
"^DD",404.57,404.57,.03,3)
This is the associated standard position from the list provided by VACO.
"^DD",404.57,404.57,.03,21,0)
^^3^3^2950228^^^
"^DD",404.57,404.57,.03,21,1,0)
Standard role the provider performs as part of this team.
"^DD",404.57,404.57,.03,21,2,0)
 
"^DD",404.57,404.57,.03,21,3,0)
These standard positions are defined by Central Office.
"^DD",404.57,404.57,.03,"DT")
2960126
"^DD",404.57,404.57,.04,0)
POSSIBLE PRIMARY PRACTITIONER?^S^1:YES;0:NO;^0;4^Q
"^DD",404.57,404.57,.04,3)
'YES' indicates that this position may function as primary practitioner or attending.
"^DD",404.57,404.57,.04,21,0)
^^4^4^2960502^^^
"^DD",404.57,404.57,.04,21,1,0)
Can this position be the primary care provider for a patient?
"^DD",404.57,404.57,.04,21,2,0)
 
"^DD",404.57,404.57,.04,21,3,0)
(Even if the position's principle purpose is not primary care, it still maybe able act as a primary care provider for some patients. This field indicates if that is possible.)
"^DD",404.57,404.57,.04,21,4,0)
Note: This also enables the position to be a PC Attending Position.
"^DD",404.57,404.57,.04,"DT")
2950222
"^DD",404.57,404.57,.08,0)
MAX NUMBER OF PATIENTS^NJ5,0^^0;8^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",404.57,404.57,.08,3)
Type a Number between 0 and 99999, 0 Decimal Digits
"^DD",404.57,404.57,.08,21,0)
^^2^2^2960528^^^
"^DD",404.57,404.57,.08,21,1,0)
Once the current number of assigned patients reaches this
"^DD",404.57,404.57,.08,21,2,0)
level, further assignment of this position should be avoided.
"^DD",404.57,404.57,.08,"DT")
2950302
"^DD",404.57,404.57,.09,0)
ASSOCIATED CLINIC^*P44'^SC(^0;9^S DIC("S")="IF $P(^(0),""^"",3)=""C""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",404.57,404.57,.09,1,0)
^.1
"^DD",404.57,404.57,.09,1,1,0)
404.57^D
"^DD",404.57,404.57,.09,1,1,1)
S ^SCTM(404.57,"D",$E(X,1,30),DA)=""
"^DD",404.57,404.57,.09,1,1,2)
K ^SCTM(404.57,"D",$E(X,1,30),DA)
"^DD",404.57,404.57,.09,1,1,"DT")
2950313
"^DD",404.57,404.57,.09,1,2,0)
404.57^ASCTEAM^MUMPS
"^DD",404.57,404.57,.09,1,2,1)
D SETSCTM^SCMCDD2(DA,X)
"^DD",404.57,404.57,.09,1,2,2)
D KILLSCTM^SCMCDD2(DA,X)
"^DD",404.57,404.57,.09,1,2,"%D",0)
^^4^4^2960401^
"^DD",404.57,404.57,.09,1,2,"%D",1,0)
This edits the whole cross reference in the Hospital Location File (#44),
"^DD",404.57,404.57,.09,1,2,"%D",2,0)
'TEAM'.  This cross-reference allows users to use the team name to find
"^DD",404.57,404.57,.09,1,2,"%D",3,0)
clinics associated with the team's team positions.  See the 'ASCTEAM'
"^DD",404.57,404.57,.09,1,2,"%D",4,0)
cross-reference of the TEAM (#404.51) File's NAME (#.01) Field.
"^DD",404.57,404.57,.09,1,2,"DT")
2960401
"^DD",404.57,404.57,.09,3)
Enter the clinic that is associated with this position.
"^DD",404.57,404.57,.09,12)
Allows only clinic locations.
"^DD",404.57,404.57,.09,12.1)
S DIC("S")="IF $P(^(0),""^"",3)=""C"""
"^DD",404.57,404.57,.09,21,0)
^^5^5^2950502^^^^
"^DD",404.57,404.57,.09,21,1,0)
This field allows the site to associate a specific clinic with a
"^DD",404.57,404.57,.09,21,2,0)
Team Position.
"^DD",404.57,404.57,.09,21,3,0)
 
"^DD",404.57,404.57,.09,21,4,0)
This association will be used to find the clinics for team members
"^DD",404.57,404.57,.09,21,5,0)
during various appointing and information processes.
"^DD",404.57,404.57,.09,"DT")
2960401
"^DD",404.57,404.57,.1,0)
PRECEPTOR POSITION^*P404.57'^SCTM(404.57,^0;10^S DIC("S")="I $$OKPREC^SCAPMCU1($P(^SCTM(404.57,DA,0),U,2))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",404.57,404.57,.1,3)
Enter position that supervises this current position.
"^DD",404.57,404.57,.1,12)
requires preceptor to be of team & possible preceptor
"^DD",404.57,404.57,.1,12.1)
S DIC("S")="I $$OKPREC^SCAPMCU1($P(^SCTM(404.57,DA,0),U,2))"
"^DD",404.57,404.57,.1,21,0)
^^5^5^2950717^^^^
"^DD",404.57,404.57,.1,21,1,0)
This field contains the name of the Team Position that is responsible for
"^DD",404.57,404.57,.1,21,2,0)
supervising this current position.
"^DD",404.57,404.57,.1,21,3,0)
 
"^DD",404.57,404.57,.1,21,4,0)
It is an optional field. However, when indicated, this field usually
"^DD",404.57,404.57,.1,21,5,0)
contains an attending position.
"^DD",404.57,404.57,.1,"DT")
2950717
"^DD",404.57,404.57,.11,0)
BEEPER NUMBER^F^^0;11^K:$L(X)>20!($L(X)<3) X
"^DD",404.57,404.57,.11,3)
Answer must be 3-20 characters in length.
"^DD",404.57,404.57,.11,21,0)
^^1^1^2950801^^
"^DD",404.57,404.57,.11,21,1,0)
This is the pager or beeper number that is used by this team position.
"^DD",404.57,404.57,.11,"DT")
2950801
"^DD",404.57,404.57,.12,0)
CAN ACT AS PRECEPTOR?^S^1:YES;0:NO;^0;12^Q
"^DD",404.57,404.57,.12,3)
This indicates if position can supervise other positions.
"^DD",404.57,404.57,.12,21,0)
^^2^2^2950717^
"^DD",404.57,404.57,.12,21,1,0)
By answering 'YES', this position may be used as a preceptor position
"^DD",404.57,404.57,.12,21,2,0)
for the team.
"^DD",404.57,404.57,.12,"DT")
2950717
"^DD",404.57,404.57,.13,0)
USER CLASS^P8930'^USR(8930,^0;13^Q
"^DD",404.57,404.57,.13,1,0)
^.1
"^DD",404.57,404.57,.13,1,1,0)
404.57^AUSR
"^DD",404.57,404.57,.13,1,1,1)
S ^SCTM(404.57,"AUSR",$E(X,1,30),DA)=""
"^DD",404.57,404.57,.13,1,1,2)
K ^SCTM(404.57,"AUSR",$E(X,1,30),DA)
"^DD",404.57,404.57,.13,1,1,"%D",0)
^^1^1^2960322^^
"^DD",404.57,404.57,.13,1,1,"%D",1,0)
This provides a x-ref on the USER CLASS Field
"^DD",404.57,404.57,.13,1,1,"DT")
2960322
"^DD",404.57,404.57,.13,3)
Class of users who will fill this position
"^DD",404.57,404.57,.13,21,0)
^^2^2^2960517^^^^
"^DD",404.57,404.57,.13,21,1,0)
This is an entry in the USR CLASS file to which anyone assigned to the
"^DD",404.57,404.57,.13,21,2,0)
position must belong.
"^DD",404.57,404.57,.13,"DT")
2960517
"^DD",404.57,404.57,1,0)
POSITION DESCRIPTION^404.571^^1;0
"^DD",404.57,404.57,2.01,0)
DEATH MESSAGE^S^T:TEAM'S PATIENTS;P:POSITION'S PATIENTS;N:DO NOT SEND;^2;1^Q
"^DD",404.57,404.57,2.01,3)
This determines for which patients the position receives messages related to patient death.
"^DD",404.57,404.57,2.01,21,0)
^^1^1^2960502^^^^
"^DD",404.57,404.57,2.01,21,1,0)
This determines for which patients the position receives messages related to patient death.
"^DD",404.57,404.57,2.01,"DT")
2960502
"^DD",404.57,404.57,2.02,0)
INPATIENT MESSAGE^S^T:TEAM'S PATIENTS;P:POSITION'S PATIENTS;N:DO NOT SEND;^2;2^Q
"^DD",404.57,404.57,2.02,3)
This determines for which patients the position receives messages related to inpatient activity.
"^DD",404.57,404.57,2.02,21,0)
^^1^1^2960502^^^^
"^DD",404.57,404.57,2.02,21,1,0)
This determines for which patients the position receives messages related to inpatient activity.
"^DD",404.57,404.57,2.02,"DT")
2960502
"^DD",404.57,404.57,2.03,0)
TEAM MESSAGE^S^T:TEAM'S PATIENTS;P:POSITION'S PATIENTS;N:DO NOT SEND;^2;3^Q
"^DD",404.57,404.57,2.03,3)
This determines for which patients the position receives messages related to team activity.
"^DD",404.57,404.57,2.03,21,0)
^^3^3^2960502^^^^
"^DD",404.57,404.57,2.03,21,1,0)
This determines for which patients the position receives messages related 
"^DD",404.57,404.57,2.03,21,2,0)
to team activity such as assignment or re-assignment of a position or
"^DD",404.57,404.57,2.03,21,3,0)
team to the patient.
"^DD",404.57,404.57,2.03,"DT")
2960502
"^DD",404.57,404.57,2.04,0)
CONSULT MESSAGE^S^T:TEAM'S PATIENTS;P:POSITION'S PATIENTS;N:DO NOT SEND;^2;4^Q
"^DD",404.57,404.57,2.04,3)
This determines for which patients the position receives messages related to activity in clinics to which the patient is not enrolled.
"^DD",404.57,404.57,2.04,21,0)
^^1^1^2960502^^^^
"^DD",404.57,404.57,2.04,21,1,0)
This determines for which patients the position receives messages related to activity in clinics to which the patient is not enrolled.
"^DD",404.57,404.57,2.04,"DT")
2960502
"^DD",404.57,404.57,200,0)
CURRENT # OF PC PATIENTS^CJ8^^ ; ^S X=$$PCPOSCNT^SCAPMCU1(D0,DT)
"^DD",404.57,404.57,200,.1)
CURRENT NUMBER OF PRIMARY CARE PATIENTS
"^DD",404.57,404.57,200,9)
^
"^DD",404.57,404.57,200,9.01)

"^DD",404.57,404.57,200,9.1)
S X=$$PCPOSCNT^SCAPMCU1(D0,DT)
"^DD",404.57,404.57,200,21,0)
^^2^2^2960520^^^^
"^DD",404.57,404.57,200,21,1,0)
This calculates the current number of Primary Care patients
"^DD",404.57,404.57,200,21,2,0)
for this team position.
"^DD",404.57,404.57,200,"DT")
2950728
"^DD",404.57,404.57,201,0)
CURRENT # OF PATIENTS^CJ8^^ ; ^S X=$$PCPOSCNT^SCAPMCU1(D0,DT,0)
"^DD",404.57,404.57,201,9)
^
"^DD",404.57,404.57,201,9.01)

"^DD",404.57,404.57,201,9.1)
S X=$$PCPOSCNT^SCAPMCU1(D0,DT,0)
"^DD",404.57,404.57,201,21,0)
^^2^2^2960520^
"^DD",404.57,404.57,201,21,1,0)
This is the number of all patients (primary care & otherwise) associated
"^DD",404.57,404.57,201,21,2,0)
with the team.
"^DD",404.57,404.57,201,"DT")
2960520
"^DD",404.57,404.57,300,0)
CURRENT STATUS^CJ8^^ ; ^S X=$S((+$$ACTTP^SCMCTPU(D0)=1):"Active",1:"Inactive")
"^DD",404.57,404.57,300,9)
^
"^DD",404.57,404.57,300,9.01)

"^DD",404.57,404.57,300,9.1)
S X=$S((+$$ACTTP^SCMCTPU(D0)=1):"Active",1:"Inactive")
"^DD",404.57,404.57,300,21,0)
^^1^1^2960213^^^^
"^DD",404.57,404.57,300,21,1,0)
This indicates if the team position is active on the current date.
"^DD",404.57,404.57,300,"DT")
2950714
"^DD",404.57,404.57,301,0)
CURRENT EFFECTIVE DATE^CJ8^^ ; ^N Y S X="" S Y=$P($$ACTTP^SCMCTPU(D0),U,2) D DD^%DT S X=Y
"^DD",404.57,404.57,301,9)
^
"^DD",404.57,404.57,301,9.01)

"^DD",404.57,404.57,301,9.1)
N Y S X="" S Y=$P($$ACTTP^SCMCTPU(D0),U,2) D DD^%DT S X=Y
"^DD",404.57,404.57,301,21,0)
^^1^1^2950807^^^^
"^DD",404.57,404.57,301,21,1,0)
This is the most recent date (not in future) that the active status changed.
"^DD",404.57,404.57,302,0)
CURRENT ACTIVATION DATE^CJ8^^ ; ^N Y S X="" S Y=$P($$DATES^SCAPMCU1(404.59,D0,DT),U,2) D DD^%DT S X=Y
"^DD",404.57,404.57,302,9)
^
"^DD",404.57,404.57,302,9.01)

"^DD",404.57,404.57,302,9.1)
N Y S X="" S Y=$P($$DATES^SCAPMCU1(404.59,D0,DT),U,2) D DD^%DT S X=Y
"^DD",404.57,404.57,302,21,0)
^^4^4^2950807^^^^
"^DD",404.57,404.57,302,21,1,0)
This is the activation date of the position based on today's date:
"^DD",404.57,404.57,302,21,2,0)
  For positions never active - this is the next date where the position is active
"^DD",404.57,404.57,302,21,3,0)
  For positions that are active now - this is the date it became active
"^DD",404.57,404.57,302,21,4,0)
  For positions that are currently inactive - this is the last activation date
"^DD",404.57,404.57,303,0)
CURRENT INACTIVATION DATE^CJ8^^ ; ^N Y S X="" S Y=$P($$DATES^SCAPMCU1(404.59,D0,DT),U,3) D DD^%DT S X=Y
"^DD",404.57,404.57,303,9)
^
"^DD",404.57,404.57,303,9.01)

"^DD",404.57,404.57,303,9.1)
N Y S X="" S Y=$P($$DATES^SCAPMCU1(404.59,D0,DT),U,3) D DD^%DT S X=Y
"^DD",404.57,404.57,303,21,0)
^^2^2^2950807^^^^
"^DD",404.57,404.57,303,21,1,0)
If it is inactive, this is the day the position became inactive.  If it is
"^DD",404.57,404.57,303,21,2,0)
active it is the day the position will become inactive.
"^DD",404.57,404.57,304,0)
CURRENT PRACTITIONER^CJ8^^ ; ^S X=$P($$GETPRTP^SCAPMCU2(D0,DT),U,2)
"^DD",404.57,404.57,304,9)
^
"^DD",404.57,404.57,304,9.01)

"^DD",404.57,404.57,304,9.1)
S X=$P($$GETPRTP^SCAPMCU2(D0,DT),U,2)
"^DD",404.57,404.57,304,"DT")
2960520
"^DD",404.57,404.571,0)
POSITION DESCRIPTION SUB-FIELD^^.01^1
"^DD",404.57,404.571,0,"DT")
2950222
"^DD",404.57,404.571,0,"NM","POSITION DESCRIPTION")

"^DD",404.57,404.571,0,"UP")
404.57
"^DD",404.57,404.571,.01,0)
POSITION DESCRIPTION^W^^0;1^Q
"^DD",404.57,404.571,.01,3)
Detailed description of position where duties of the role are outlined.
"^DD",404.57,404.571,.01,21,0)
^^1^1^2950222^
"^DD",404.57,404.571,.01,21,1,0)
This is the long description of the position.
"^DD",404.57,404.571,.01,"DT")
2950222
"^DD",404.58,404.58,0)
FIELD^^.04^4
"^DD",404.58,404.58,0,"DT")
2960116
"^DD",404.58,404.58,0,"ID",.02)
W "   ",$E($P(^(0),U,2),4,5)_"-"_$E($P(^(0),U,2),6,7)_"-"_$E($P(^(0),U,2),2,3)
"^DD",404.58,404.58,0,"ID",.03)
W "   ",@("$P($P($C(59)_$S($D(^DD(404.58,.03,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,3)_"":"",2),$C(59),1)")
"^DD",404.58,404.58,0,"IX","AIDT",404.58,.01)

"^DD",404.58,404.58,0,"IX","AIDT1",404.58,.03)

"^DD",404.58,404.58,0,"IX","AIDT2",404.58,.02)

"^DD",404.58,404.58,0,"IX","B",404.58,.01)

"^DD",404.58,404.58,0,"NM","TEAM HISTORY")

"^DD",404.58,404.58,.01,0)
TEAM^RP404.51'^SCTM(404.51,^0;1^Q
"^DD",404.58,404.58,.01,1,0)
^.1
"^DD",404.58,404.58,.01,1,1,0)
404.58^B
"^DD",404.58,404.58,.01,1,1,1)
S ^SCTM(404.58,"B",$E(X,1,30),DA)=""
"^DD",404.58,404.58,.01,1,1,2)
K ^SCTM(404.58,"B",$E(X,1,30),DA)
"^DD",404.58,404.58,.01,1,2,0)
404.58^AIDT^MUMPS
"^DD",404.58,404.58,.01,1,2,1)
N SC2,SC3 S SC2=$P($G(^SCTM(404.58,DA,0)),U,3) I SC2]"" S SC3=$P($G(^(0)),U,2) I SC3]"" S ^SCTM(404.58,"AIDT",X,SC2,-SC3,DA)=""
"^DD",404.58,404.58,.01,1,2,2)
N SC2,SC3 S SC2=$P($G(^SCTM(404.58,DA,0)),U,3) I SC2]"" S SC3=$P($G(^(0)),U,2) I SC3]"" K ^SCTM(404.58,"AIDT",X,SC2,-SC3,DA)
"^DD",404.58,404.58,.01,1,2,"%D",0)
^^1^1^2950803^
"^DD",404.58,404.58,.01,1,2,"%D",1,0)
This sorts by TEAM(#.01), then by STATUS(#.03), then by -EFFECTIVE DATE(#.02).  There are associated cross references for each of these fields.
"^DD",404.58,404.58,.01,1,2,"DT")
2950803
"^DD",404.58,404.58,.01,3)
This is the name of the team.
"^DD",404.58,404.58,.01,21,0)
^^1^1^2950712^
"^DD",404.58,404.58,.01,21,1,0)
This is a pointer to the TEAM file.
"^DD",404.58,404.58,.01,"DT")
2950803
"^DD",404.58,404.58,.02,0)
EFFECTIVE DATE^RD^^0;2^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",404.58,404.58,.02,1,0)
^.1^^-1
"^DD",404.58,404.58,.02,1,1,0)
404.58^AIDT2^MUMPS
"^DD",404.58,404.58,.02,1,1,1)
N SC1,SC2 S SC1=$P($G(^SCTM(404.58,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,3) I SC2]"" S ^SCTM(404.58,"AIDT",SC1,SC2,-X,DA)=""
"^DD",404.58,404.58,.02,1,1,2)
N SC1,SC2 S SC1=$P($G(^SCTM(404.58,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,3) I SC2]"" K ^SCTM(404.58,"AIDT",SC1,SC2,-X,DA)
"^DD",404.58,404.58,.02,1,1,"%D",0)
^^1^1^2950803^
"^DD",404.58,404.58,.02,1,1,"%D",1,0)
This sorts by TEAM(#.01), then by STATUS(#.03), then by -EFFECTIVE DATE(#.02).  There are associated cross references for each of these fields.
"^DD",404.58,404.58,.02,1,1,"DT")
2950803
"^DD",404.58,404.58,.02,3)
This is the date the team's status changed.
"^DD",404.58,404.58,.02,21,0)
^^1^1^2950907^^
"^DD",404.58,404.58,.02,21,1,0)
This is the date that the team's status changed.
"^DD",404.58,404.58,.02,"DT")
2950807
"^DD",404.58,404.58,.03,0)
STATUS^RS^1:ACTIVE;0:INACTIVE;^0;3^Q
"^DD",404.58,404.58,.03,1,0)
^.1
"^DD",404.58,404.58,.03,1,1,0)
404.58^AIDT1^MUMPS
"^DD",404.58,404.58,.03,1,1,1)
N SC1,SC3 S SC1=$P($G(^SCTM(404.58,DA,0)),U,1) I SC1 S SC3=$P($G(^(0)),U,2) I SC3]"" S ^SCTM(404.58,"AIDT",SC1,X,-SC3,DA)=""
"^DD",404.58,404.58,.03,1,1,2)
N SC1,SC3 S SC1=$P($G(^SCTM(404.58,DA,0)),U,1) I SC1 S SC3=$P($G(^(0)),U,2) I SC3]"" K ^SCTM(404.58,"AIDT",SC1,X,-SC3,DA)
"^DD",404.58,404.58,.03,1,1,"%D",0)
^^1^1^2950803^
"^DD",404.58,404.58,.03,1,1,"%D",1,0)
This sorts by TEAM(#.01), then by STATUS(#.03), then by -EFFECTIVE DATE(#.02).  There are associated cross references for each of these fields.
"^DD",404.58,404.58,.03,1,1,"DT")
2950803
"^DD",404.58,404.58,.03,3)
This indicates what the status of the team is as of the effective date.
"^DD",404.58,404.58,.03,21,0)
^^1^1^2950714^^
"^DD",404.58,404.58,.03,21,1,0)
This is indicates if the team is active or inactive as of the effective date.
"^DD",404.58,404.58,.03,"DT")
2950803
"^DD",404.58,404.58,.04,0)
STATUS REASON^R*P403.44'^SD(403.44,^0;4^S DIC("S")="IF $$RSNDICS^SCAPMCU1(""ZM1"")" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",404.58,404.58,.04,3)
This is the reason that the team's status changed.  It is a required field.
"^DD",404.58,404.58,.04,12)
ASDF
"^DD",404.58,404.58,.04,12.1)
S DIC("S")="IF $$RSNDICS^SCAPMCU1(""ZM1"")"
"^DD",404.58,404.58,.04,21,0)
^^1^1^2960116^^^^
"^DD",404.58,404.58,.04,21,1,0)
This is the reason that the team's status changed.
"^DD",404.58,404.58,.04,"DT")
2960116
"^DD",404.59,404.59,0)
FIELD^^.04^4
"^DD",404.59,404.59,0,"DDA")
N
"^DD",404.59,404.59,0,"DT")
2950911
"^DD",404.59,404.59,0,"ID",.02)
W "   ",$E($P(^(0),U,2),4,5)_"-"_$E($P(^(0),U,2),6,7)_"-"_$E($P(^(0),U,2),2,3)
"^DD",404.59,404.59,0,"ID",.03)
W "   ",@("$P($P($C(59)_$S($D(^DD(404.59,.03,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,3)_"":"",2),$C(59),1)")
"^DD",404.59,404.59,0,"IX","AIDT",404.59,.01)

"^DD",404.59,404.59,0,"IX","AIDT1",404.59,.03)

"^DD",404.59,404.59,0,"IX","AIDT2",404.59,.02)

"^DD",404.59,404.59,0,"IX","B",404.59,.01)

"^DD",404.59,404.59,0,"NM","TEAM POSITION HISTORY")

"^DD",404.59,404.59,.01,0)
TEAM POSITION^RP404.57'^SCTM(404.57,^0;1^Q
"^DD",404.59,404.59,.01,1,0)
^.1
"^DD",404.59,404.59,.01,1,1,0)
404.59^B
"^DD",404.59,404.59,.01,1,1,1)
S ^SCTM(404.59,"B",$E(X,1,30),DA)=""
"^DD",404.59,404.59,.01,1,1,2)
K ^SCTM(404.59,"B",$E(X,1,30),DA)
"^DD",404.59,404.59,.01,1,2,0)
404.59^AIDT^MUMPS
"^DD",404.59,404.59,.01,1,2,1)
N SC2,SC3 S SC2=$P($G(^SCTM(404.59,DA,0)),U,3) I SC2]"" S SC3=$P($G(^(0)),U,2) I SC3]"" S ^SCTM(404.59,"AIDT",X,SC2,-SC3,DA)=""
"^DD",404.59,404.59,.01,1,2,2)
N SC2,SC3 S SC2=$P($G(^SCTM(404.59,DA,0)),U,3) I SC2]"" S SC3=$P($G(^(0)),U,2) I SC3]"" K ^SCTM(404.59,"AIDT",X,SC2,-SC3,DA)
"^DD",404.59,404.59,.01,1,2,"%D",0)
^^1^1^2950807^
"^DD",404.59,404.59,.01,1,2,"%D",1,0)
This sorts by TEAM POSITION(#.01), then by STATUS(#.03), then by -EFFECTIVE DATE(#.02).  There are associated cross references for each of these fields.
"^DD",404.59,404.59,.01,1,2,"DT")
2950807
"^DD",404.59,404.59,.01,3)
This is the position on the team.
"^DD",404.59,404.59,.01,21,0)
^^2^2^2950713^^
"^DD",404.59,404.59,.01,21,1,0)
This is the position on the team that is either being activated or 
"^DD",404.59,404.59,.01,21,2,0)
inactivated.
"^DD",404.59,404.59,.01,"DT")
2950807
"^DD",404.59,404.59,.02,0)
EFFECTIVE DATE^RD^^0;2^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",404.59,404.59,.02,1,0)
^.1^^-1
"^DD",404.59,404.59,.02,1,1,0)
404.59^AIDT2^MUMPS
"^DD",404.59,404.59,.02,1,1,1)
N SC1,SC2 S SC1=$P($G(^SCTM(404.59,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,3) I SC2]"" S ^SCTM(404.59,"AIDT",SC1,SC2,-X,DA)=""
"^DD",404.59,404.59,.02,1,1,2)
N SC1,SC2 S SC1=$P($G(^SCTM(404.59,DA,0)),U,1) I SC1 S SC2=$P($G(^(0)),U,3) I SC2]"" K ^SCTM(404.59,"AIDT",SC1,SC2,-X,DA)
"^DD",404.59,404.59,.02,1,1,"%D",0)
^^1^1^2950807^
"^DD",404.59,404.59,.02,1,1,"%D",1,0)
This sorts by TEAM POSITION(#.01), then by STATUS(#.03), then by -EFFECTIVE DATE(#.02).  There are associated cross references for each of these fields.
"^DD",404.59,404.59,.02,1,1,"DT")
2950807
"^DD",404.59,404.59,.02,3)
This is the date that the team position's status changed.
"^DD",404.59,404.59,.02,21,0)
^^1^1^2950911^^^
"^DD",404.59,404.59,.02,21,1,0)
This is the date that the team position's status changed.
"^DD",404.59,404.59,.02,"DT")
2950911
"^DD",404.59,404.59,.03,0)
STATUS^RS^1:ACTIVE;0:INACTIVE;^0;3^Q
"^DD",404.59,404.59,.03,1,0)
^.1
"^DD",404.59,404.59,.03,1,1,0)
404.59^AIDT1^MUMPS
"^DD",404.59,404.59,.03,1,1,1)
N SC1,SC3 S SC1=$P($G(^SCTM(404.59,DA,0)),U,1) I SC1 S SC3=$P($G(^(0)),U,2) I SC3]"" S ^SCTM(404.59,"AIDT",SC1,X,-SC3,DA)=""
"^DD",404.59,404.59,.03,1,1,2)
N SC1,SC3 S SC1=$P($G(^SCTM(404.59,DA,0)),U,1) I SC1 S SC3=$P($G(^(0)),U,2) I SC3]"" K ^SCTM(404.59,"AIDT",SC1,X,-SC3,DA)
"^DD",404.59,404.59,.03,1,1,"%D",0)
^^1^1^2950807^
"^DD",404.59,404.59,.03,1,1,"%D",1,0)
This sorts by TEAM POSITION(#.01), then by STATUS(#.03), then by -EFFECTIVE DATE(#.02).  There are associated cross references for each of these fields.
"^DD",404.59,404.59,.03,1,1,"DT")
2950807
"^DD",404.59,404.59,.03,3)
This indicates if the team position is active or inactive.
"^DD",404.59,404.59,.03,21,0)
^^1^1^2950911^^^
"^DD",404.59,404.59,.03,21,1,0)
This indicates if the team position is active or inactive.
"^DD",404.59,404.59,.03,"DT")
2950911
"^DD",404.59,404.59,.04,0)
STATUS REASON^R*P403.44'^SD(403.44,^0;4^S DIC("S")="I $$RSNDICS^SCAPMCU1(""ZM3"")" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",404.59,404.59,.04,3)
This is the reason that the activation/inactivation status changed.
"^DD",404.59,404.59,.04,12)
Requires Scheduling Reason's Scheduling Event Code to be TEAM POSITION ADD/MODIFY
"^DD",404.59,404.59,.04,12.1)
S DIC("S")="I $$RSNDICS^SCAPMCU1(""ZM3"")"
"^DD",404.59,404.59,.04,21,0)
^^1^1^2950714^^^^
"^DD",404.59,404.59,.04,21,1,0)
This is the reason that the activation/inactivation status changed.
"^DD",404.59,404.59,.04,"DT")
2950714
"^DD",404.91,404.91,0)
FIELD^^803^7
"^DD",404.91,404.91,0,"DT")
2960502
"^DD",404.91,404.91,0,"IX","B",404.91,.01)

"^DD",404.91,404.91,0,"NM","SCHEDULING PARAMETER")

"^DD",404.91,404.91,.001,0)
ENTRY NUMBER^NJ1,0^^ ^K:+X'=X!(X>1)!(X<1)!(X?.E1"."1N.N) X
"^DD",404.91,404.91,.001,3)
Type a Number between 1 and 1, 0 Decimal Digits
"^DD",404.91,404.91,.001,21,0)
^^3^3^2950606^^
"^DD",404.91,404.91,.001,21,1,0)
This field is the primary key field in the Scheduling Parameter file.
"^DD",404.91,404.91,.001,21,2,0)
 
"^DD",404.91,404.91,.001,21,3,0)
A site has only one scheduling parameter table entry and it must equal 1.
"^DD",404.91,404.91,.001,"DT")
2941123
"^DD",404.91,404.91,.01,0)
ID^RNJ1,0^^0;1^K:+X'=X!(X>1)!(X<1)!(X?.E1"."1N.N) X
"^DD",404.91,404.91,.01,1,0)
^.1
"^DD",404.91,404.91,.01,1,1,0)
404.91^B
"^DD",404.91,404.91,.01,1,1,1)
S ^SD(404.91,"B",$E(X,1,30),DA)=""
"^DD",404.91,404.91,.01,1,1,2)
K ^SD(404.91,"B",$E(X,1,30),DA)
"^DD",404.91,404.91,.01,1,1,"%D",0)
^^1^1^2950606^
"^DD",404.91,404.91,.01,1,1,"%D",1,0)
This cross-reference allows look-up by ID.
"^DD",404.91,404.91,.01,3)
Type a Number between 1 and 1, 0 Decimal Digits
"^DD",404.91,404.91,.01,21,0)
^^4^4^2950606^^
"^DD",404.91,404.91,.01,21,1,0)
Internal entry number of parameter entry.  It must equal 1.
"^DD",404.91,404.91,.01,21,2,0)
 
"^DD",404.91,404.91,.01,21,3,0)
This field is the internal entry number to the parameter file and it must
"^DD",404.91,404.91,.01,21,4,0)
equal 1.  A site has only one scheduling parameter table entry.
"^DD",404.91,404.91,.01,"DT")
2941121
"^DD",404.91,404.91,801,0)
USE USR CLASS FUNCTIONALITY?^SX^1:YES;0:NO;^PCMM;1^D:'$D(^USR)&($G(X)) EN^DDIOL("   TIU's USR Class Files are required","","?5") K:'$D(^USR)&($G(X)) X
"^DD",404.91,404.91,801,3)
If 'YES' is answered, TIU's USR Class functionality will be enforced on Position Assignments.
"^DD",404.91,404.91,801,21,0)
^^4^4^2960329^^
"^DD",404.91,404.91,801,21,1,0)
This tells the PCMM software to use TIU's USR Class functionality that
"^DD",404.91,404.91,801,21,2,0)
tells if a user is a member of a user class.
"^DD",404.91,404.91,801,21,3,0)
If this is unanswered or 'NO', any staff member in the NEW PERSON File (#200)
"^DD",404.91,404.91,801,21,4,0)
will be assignable to team positions.
"^DD",404.91,404.91,801,"DT")
2960313
"^DD",404.91,404.91,802,0)
CHECK PC TEAM AT DISCHARGE?^S^1:YES;0:NO;^PCMM;2^Q
"^DD",404.91,404.91,802,3)
Enter YES if users will be prompted to add a patient to a PC Team, if they are not assigned one.
"^DD",404.91,404.91,802,21,0)
^^3^3^2960402^
"^DD",404.91,404.91,802,21,1,0)
This controls whether the user will be asked if they want to assign the
"^DD",404.91,404.91,802,21,2,0)
patient to a primary care team upon inpatient discharge.
"^DD",404.91,404.91,802,21,3,0)
Edits to discharges will also evoke this functionality.
"^DD",404.91,404.91,802,"DT")
2960402
"^DD",404.91,404.91,803,0)
ENABLE AUTOLINK FUNCTIONALITY?^S^1:YES;0:NO;^PCMM;3^Q
"^DD",404.91,404.91,803,3)
Enter 'YES' if Teams can be Autolinked with Wards, Practitioners, Room-Beds, or Specialities.
"^DD",404.91,404.91,803,21,0)
^^1^1^2960502^
"^DD",404.91,404.91,803,21,1,0)
This should generally be turned on only for sites with CPRS installed.
"^DD",404.91,404.91,803,"DT")
2960502
"^DD",404.91,404.91,901,0)
EARLIEST ENCOUNTER DATE^RD^^CNV;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",404.91,404.91,901,.1)
EARLIEST ENCOUNTER CONVERSION DATE
"^DD",404.91,404.91,901,21,0)
^^3^3^2951120^^^^
"^DD",404.91,404.91,901,21,1,0)
This field contains the earliest date to convert encounters.  For example,
"^DD",404.91,404.91,901,21,2,0)
if 10/1/84 is entered in this field, encounters before 10/1/84 cannot
"^DD",404.91,404.91,901,21,3,0)
be converted via the encounter conversion utilities.
"^DD",404.91,404.91,901,"DT")
2951212
"^DD",404.91,404.91,902,0)
ONLY INACTIVE ENCOUNTERS^RS^0:NO;1:YES;^CNV;2^Q
"^DD",404.91,404.91,902,9)
^
"^DD",404.91,404.91,902,21,0)
^^3^3^2951120^
"^DD",404.91,404.91,902,21,1,0)
If this field is set to 'Yes', only inactive ancounters can be converted.
"^DD",404.91,404.91,902,21,2,0)
An inactive encounter is "an encounter which occurred prior to last fiscal
"^DD",404.91,404.91,902,21,3,0)
year."
"^DD",404.91,404.91,902,"DT")
2960509
"^DD",404.92,404.92,0)
FIELD^^40^6
"^DD",404.92,404.92,0,"DDA")
N
"^DD",404.92,404.92,0,"DT")
2960314
"^DD",404.92,404.92,0,"IX","B",404.92,.01)

"^DD",404.92,404.92,0,"IX","C",404.92,.02)

"^DD",404.92,404.92,0,"NM","SCHEDULING REPORT DEFINITION")

"^DD",404.92,404.92,0,"PT",404.95,.04)

"^DD",404.92,404.92,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",404.92,404.92,.01,1,0)
^.1
"^DD",404.92,404.92,.01,1,1,0)
404.92^B
"^DD",404.92,404.92,.01,1,1,1)
S ^SD(404.92,"B",$E(X,1,30),DA)=""
"^DD",404.92,404.92,.01,1,1,2)
K ^SD(404.92,"B",$E(X,1,30),DA)
"^DD",404.92,404.92,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",404.92,404.92,.01,21,0)
^^4^4^2960416^
"^DD",404.92,404.92,.01,21,1,0)
Name of scheduling report.
"^DD",404.92,404.92,.01,21,2,0)

"^DD",404.92,404.92,.01,21,3,0)
The name is presented to the user in the combo-box as part of the Query
"^DD",404.92,404.92,.01,21,4,0)
Template Utility functionality on the client workstation.
"^DD",404.92,404.92,.02,0)
REPORT GROUP^P404.94'^SD(404.94,^0;2^Q
"^DD",404.92,404.92,.02,1,0)
^.1
"^DD",404.92,404.92,.02,1,1,0)
404.92^C
"^DD",404.92,404.92,.02,1,1,1)
S ^SD(404.92,"C",$E(X,1,30),DA)=""
"^DD",404.92,404.92,.02,1,1,2)
K ^SD(404.92,"C",$E(X,1,30),DA)
"^DD",404.92,404.92,.02,1,1,"DT")
2960306
"^DD",404.92,404.92,.02,21,0)
^^4^4^2960509^^
"^DD",404.92,404.92,.02,21,1,0)
This field indicates the report group associated with the
"^DD",404.92,404.92,.02,21,2,0)
report definition. The grouping will be used in future
"^DD",404.92,404.92,.02,21,3,0)
releases to help screen reports available to the user during
"^DD",404.92,404.92,.02,21,4,0)
report selection.
"^DD",404.92,404.92,.02,"DT")
2960306
"^DD",404.92,404.92,10,0)
DESCRIPTION^404.9201^^1;0
"^DD",404.92,404.92,10,21,0)
^^2^2^2960416^
"^DD",404.92,404.92,10,21,1,0)
This field contains a description of the report's purpose
"^DD",404.92,404.92,10,21,2,0)
and output.
"^DD",404.92,404.92,20,0)
SORTS^404.9202^^SORTS;0
"^DD",404.92,404.92,20,21,0)
^^5^5^2960509^^^
"^DD",404.92,404.92,20,21,1,0)
This multiple field contains the list of possible ways
"^DD",404.92,404.92,20,21,2,0)
this report can be sorted.
"^DD",404.92,404.92,20,21,3,0)

"^DD",404.92,404.92,20,21,4,0)
If this list contains more then one entry, then the user
"^DD",404.92,404.92,20,21,5,0)
must select a sort as part of the report criteria.
"^DD",404.92,404.92,30,0)
FIELDS^404.9203P^^FIELDS;0
"^DD",404.92,404.92,30,21,0)
^^2^2^2960417^^
"^DD",404.92,404.92,30,21,1,0)
This multiple contains the list of fields used by this report
"^DD",404.92,404.92,30,21,2,0)
definition.
"^DD",404.92,404.92,30,23,0)
^^3^3^2960417^
"^DD",404.92,404.92,30,23,1,0)
The fields entered into this multiple are the fields
"^DD",404.92,404.92,30,23,2,0)
presented to the user in the Query Template Utility
"^DD",404.92,404.92,30,23,3,0)
application on the client.
"^DD",404.92,404.92,40,0)
FILES^404.9204PI^^FILES;0
"^DD",404.92,404.92,40,21,0)
^^14^14^2960417^^
"^DD",404.92,404.92,40,21,1,0)
This multiple contains the list of files that the
"^DD",404.92,404.92,40,21,2,0)
user usually must select entries for as part of
"^DD",404.92,404.92,40,21,3,0)
the report criteria.
"^DD",404.92,404.92,40,21,4,0)

"^DD",404.92,404.92,40,21,5,0)
Most reports require at least the selection of
"^DD",404.92,404.92,40,21,6,0)
one entry from each file in the multiple.
"^DD",404.92,404.92,40,21,7,0)
However, there is at least one report where only one
"^DD",404.92,404.92,40,21,8,0)
selection is allowed for the file. Also, there is at
"^DD",404.92,404.92,40,21,9,0)
least one report that does not require any selection to
"^DD",404.92,404.92,40,21,10,0)
be made if the user desires the report to search for
"^DD",404.92,404.92,40,21,11,0)
null values.
"^DD",404.92,404.92,40,21,12,0)

"^DD",404.92,404.92,40,21,13,0)
The 'NUMBER OF SELECTIONS REQUIRED' (#.02) field
"^DD",404.92,404.92,40,21,14,0)
indicates how many selections need to be made.
"^DD",404.92,404.9201,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",404.92,404.9201,0,"DT")
2960306
"^DD",404.92,404.9201,0,"NM","DESCRIPTION")

"^DD",404.92,404.9201,0,"UP")
404.92
"^DD",404.92,404.9201,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",404.92,404.9201,.01,"DT")
2960306
"^DD",404.92,404.9202,0)
SORTS SUB-FIELD^^.01^1
"^DD",404.92,404.9202,0,"DT")
2960306
"^DD",404.92,404.9202,0,"IX","B",404.9202,.01)

"^DD",404.92,404.9202,0,"NM","SORTS")

"^DD",404.92,404.9202,0,"UP")
404.92
"^DD",404.92,404.9202,.01,0)
SORTS^MF^^0;1^K:$L(X)>100!($L(X)<3) X
"^DD",404.92,404.9202,.01,1,0)
^.1
"^DD",404.92,404.9202,.01,1,1,0)
404.9202^B
"^DD",404.92,404.9202,.01,1,1,1)
S ^SD(404.92,DA(1),"SORTS","B",$E(X,1,30),DA)=""
"^DD",404.92,404.9202,.01,1,1,2)
K ^SD(404.92,DA(1),"SORTS","B",$E(X,1,30),DA)
"^DD",404.92,404.9202,.01,3)
Answer must be 3-100 characters in length.
"^DD",404.92,404.9202,.01,21,0)
^^1^1^2960417^^
"^DD",404.92,404.9202,.01,21,1,0)
Pre-defined sort sequence available for report.
"^DD",404.92,404.9202,.01,"DT")
2960306
"^DD",404.92,404.9203,0)
FIELDS SUB-FIELD^^.04^4
"^DD",404.92,404.9203,0,"DT")
2960306
"^DD",404.92,404.9203,0,"IX","B",404.9203,.01)

"^DD",404.92,404.9203,0,"NM","FIELDS")

"^DD",404.92,404.9203,0,"UP")
404.92
"^DD",404.92,404.9203,.01,0)
FIELDS^MP404.93'^SD(404.93,^0;1^Q
"^DD",404.92,404.9203,.01,1,0)
^.1
"^DD",404.92,404.9203,.01,1,1,0)
404.9203^B
"^DD",404.92,404.9203,.01,1,1,1)
S ^SD(404.92,DA(1),"FIELDS","B",$E(X,1,30),DA)=""
"^DD",404.92,404.9203,.01,1,1,2)
K ^SD(404.92,DA(1),"FIELDS","B",$E(X,1,30),DA)
"^DD",404.92,404.9203,.01,21,0)
^^2^2^2960416^
"^DD",404.92,404.9203,.01,21,1,0)
This field contains the name of a field used by the report
"^DD",404.92,404.9203,.01,21,2,0)
definition.
"^DD",404.92,404.9203,.01,"DT")
2960306
"^DD",404.92,404.9203,.02,0)
REQUIRED^S^0:NO;1:YES;^0;2^Q
"^DD",404.92,404.9203,.02,21,0)
^^4^4^2960417^^^
"^DD",404.92,404.9203,.02,21,1,0)
This parameter indicates if this field is required as part of
"^DD",404.92,404.9203,.02,21,2,0)
the report definition. If the field is required and the user
"^DD",404.92,404.9203,.02,21,3,0)
does not specify a value, an error will be returned and
"^DD",404.92,404.9203,.02,21,4,0)
displayed to the user.
"^DD",404.92,404.9203,.02,"DT")
2960306
"^DD",404.92,404.9203,.03,0)
ALWAYS ASK^S^0:NO;1:YES;^0;3^Q
"^DD",404.92,404.9203,.03,21,0)
^^8^8^2960417^^
"^DD",404.92,404.9203,.03,21,1,0)
*** This field is currently not being used. ***
"^DD",404.92,404.9203,.03,21,2,0)

"^DD",404.92,404.9203,.03,21,3,0)
This parameter indicates that the field should always be
"^DD",404.92,404.9203,.03,21,4,0)
presented to the user even if the query template has
"^DD",404.92,404.9203,.03,21,5,0)
a value specified for the field.
"^DD",404.92,404.9203,.03,21,6,0)

"^DD",404.92,404.9203,.03,21,7,0)
Typical fields where this parameter would be 'YES' are
"^DD",404.92,404.9203,.03,21,8,0)
date fields.
"^DD",404.92,404.9203,.03,"DT")
2960306
"^DD",404.92,404.9203,.04,0)
DEFAULT VALUE^F^^0;4^K:$L(X)>100!($L(X)<1) X
"^DD",404.92,404.9203,.04,3)
Answer must be 1-100 characters in length.
"^DD",404.92,404.9203,.04,21,0)
^^3^3^2960417^
"^DD",404.92,404.9203,.04,21,1,0)
This field can contain a value that will be used as
"^DD",404.92,404.9203,.04,21,2,0)
the default when the report criteria form is first
"^DD",404.92,404.9203,.04,21,3,0)
presented to the user.
"^DD",404.92,404.9203,.04,"DT")
2960306
"^DD",404.92,404.9204,0)
FILES SUB-FIELD^^.03^3
"^DD",404.92,404.9204,0,"DT")
2960314
"^DD",404.92,404.9204,0,"ID",.02)
W "   ",@("$P($P($C(59)_$S($D(^DD(404.9204,.02,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,2)_"":"",2),$C(59),1)")
"^DD",404.92,404.9204,0,"IX","B",404.9204,.01)

"^DD",404.92,404.9204,0,"NM","FILES")

"^DD",404.92,404.9204,0,"UP")
404.92
"^DD",404.92,404.9204,.01,0)
FILE^MP1'^DIC(^0;1^Q
"^DD",404.92,404.9204,.01,1,0)
^.1
"^DD",404.92,404.9204,.01,1,1,0)
404.9204^B
"^DD",404.92,404.9204,.01,1,1,1)
S ^SD(404.92,DA(1),"FILES","B",$E(X,1,30),DA)=""
"^DD",404.92,404.9204,.01,1,1,2)
K ^SD(404.92,DA(1),"FILES","B",$E(X,1,30),DA)
"^DD",404.92,404.9204,.01,21,0)
^^1^1^2960417^
"^DD",404.92,404.9204,.01,21,1,0)
Name of the file from which selections are made.
"^DD",404.92,404.9204,.01,"DT")
2960306
"^DD",404.92,404.9204,.02,0)
NUMBER OF SELECTIONS REQUIRED^S^0:ONE/MANY/ALL/NONE;1:ONLY ONE;2:ONE/MANY/ALL;^0;2^Q
"^DD",404.92,404.9204,.02,21,0)
^^3^3^2960417^
"^DD",404.92,404.9204,.02,21,1,0)
This parameter indicates the number of selection the
"^DD",404.92,404.9204,.02,21,2,0)
user can make from the file specified in the FILE (#.01)
"^DD",404.92,404.9204,.02,21,3,0)
file.
"^DD",404.92,404.9204,.02,"DT")
2960311
"^DD",404.92,404.9204,.03,0)
DEPENDENT SELECTION FILE^P1'^DIC(^0;3^Q
"^DD",404.92,404.9204,.03,21,0)
^^11^11^2960417^^
"^DD",404.92,404.9204,.03,21,1,0)
This parameter indicates which other file specified in the
"^DD",404.92,404.9204,.03,21,2,0)
multiple dictates which entries can be selected form the
"^DD",404.92,404.9204,.03,21,3,0)
current file being specified.
"^DD",404.92,404.9204,.03,21,4,0)

"^DD",404.92,404.9204,.03,21,5,0)
For example, typically when selecting entries from the
"^DD",404.92,404.9204,.03,21,6,0)
HOSPITAL LOCATION (#44) file, the user is restricted to
"^DD",404.92,404.9204,.03,21,7,0)
entries that are assoicated INSTITUTION file entries
"^DD",404.92,404.9204,.03,21,8,0)
made as part of the report criteria.
"^DD",404.92,404.9204,.03,21,9,0)

"^DD",404.92,404.9204,.03,21,10,0)
The Query Template Utility uses this parameter during the
"^DD",404.92,404.9204,.03,21,11,0)
'validation' check.
"^DD",404.92,404.9204,.03,"DT")
2960314
"^DD",404.93,404.93,0)
FIELD^^10^3
"^DD",404.93,404.93,0,"DDA")
N
"^DD",404.93,404.93,0,"DT")
2960307
"^DD",404.93,404.93,0,"IX","B",404.93,.01)

"^DD",404.93,404.93,0,"IX","C",404.93,.02)

"^DD",404.93,404.93,0,"NM","SCHEDULING REPORT FIELDS DEFINITION")

"^DD",404.93,404.93,0,"PT",404.9203,.01)

"^DD",404.93,404.93,0,"PT",404.9502,.01)

"^DD",404.93,404.93,.01,0)
FIELD^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",404.93,404.93,.01,1,0)
^.1
"^DD",404.93,404.93,.01,1,1,0)
404.93^B
"^DD",404.93,404.93,.01,1,1,1)
S ^SD(404.93,"B",$E(X,1,30),DA)=""
"^DD",404.93,404.93,.01,1,1,2)
K ^SD(404.93,"B",$E(X,1,30),DA)
"^DD",404.93,404.93,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",404.93,404.93,.01,21,0)
^^1^1^2960417^^
"^DD",404.93,404.93,.01,21,1,0)
Human readable/understandable name of field.
"^DD",404.93,404.93,.02,0)
COMPONENT NAME^F^^0;2^K:$L(X)>40!($L(X)<3) X
"^DD",404.93,404.93,.02,1,0)
^.1
"^DD",404.93,404.93,.02,1,1,0)
404.93^C
"^DD",404.93,404.93,.02,1,1,1)
S ^SD(404.93,"C",$E(X,1,30),DA)=""
"^DD",404.93,404.93,.02,1,1,2)
K ^SD(404.93,"C",$E(X,1,30),DA)
"^DD",404.93,404.93,.02,1,1,"DT")
2960318
"^DD",404.93,404.93,.02,3)
Answer must be 3-40 characters in length.
"^DD",404.93,404.93,.02,21,0)
^^2^2^2960417^
"^DD",404.93,404.93,.02,21,1,0)
Name of the Delphi component on the Query Template Utility
"^DD",404.93,404.93,.02,21,2,0)
form that corresponds to the field name.
"^DD",404.93,404.93,.02,23,0)
^^3^3^2960417^
"^DD",404.93,404.93,.02,23,1,0)
The component name is used in the Query Template Utility
"^DD",404.93,404.93,.02,23,2,0)
to indicate the component should be visible/invisible on
"^DD",404.93,404.93,.02,23,3,0)
the form. It's also used for value lookup purposes.
"^DD",404.93,404.93,.02,"DT")
2960318
"^DD",404.93,404.93,10,0)
DESCRIPTION^404.9301^^1;0
"^DD",404.93,404.93,10,21,0)
^^2^2^2960417^
"^DD",404.93,404.93,10,21,1,0)
This field contains a breif description of the purpose of the
"^DD",404.93,404.93,10,21,2,0)
field as it is used in the Query Template Utility.
"^DD",404.93,404.9301,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",404.93,404.9301,0,"DT")
2960306
"^DD",404.93,404.9301,0,"NM","DESCRIPTION")

"^DD",404.93,404.9301,0,"UP")
404.93
"^DD",404.93,404.9301,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",404.93,404.9301,.01,"DT")
2960306
"^DD",404.94,404.94,0)
FIELD^^.02^3
"^DD",404.94,404.94,0,"DDA")
N
"^DD",404.94,404.94,0,"DT")
2960404
"^DD",404.94,404.94,0,"IX","B",404.94,.01)

"^DD",404.94,404.94,0,"NM","SCHEDULING REPORT GROUP")

"^DD",404.94,404.94,0,"PT",404.92,.02)

"^DD",404.94,404.94,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",404.94,404.94,.01,1,0)
^.1
"^DD",404.94,404.94,.01,1,1,0)
404.94^B
"^DD",404.94,404.94,.01,1,1,1)
S ^SD(404.94,"B",$E(X,1,30),DA)=""
"^DD",404.94,404.94,.01,1,1,2)
K ^SD(404.94,"B",$E(X,1,30),DA)
"^DD",404.94,404.94,.01,3)
Answer must be 3-30 characters in length.
"^DD",404.94,404.94,.01,21,0)
^^1^1^2960417^^
"^DD",404.94,404.94,.01,21,1,0)
The field contains the name of the report group.
"^DD",404.94,404.94,.01,"DT")
2960306
"^DD",404.94,404.94,.02,0)
REPORT CLASS^S^1:PCMM;^0;2^Q
"^DD",404.94,404.94,.02,21,0)
^^9^9^2960417^
"^DD",404.94,404.94,.02,21,1,0)
This field allows for a higher level classification of related
"^DD",404.94,404.94,.02,21,2,0)
reports.
"^DD",404.94,404.94,.02,21,3,0)

"^DD",404.94,404.94,.02,21,4,0)
Currently(4/96), there is only one class avaliable, PCMM.
"^DD",404.94,404.94,.02,21,5,0)
However, it is envisioned that other sub-modules within
"^DD",404.94,404.94,.02,21,6,0)
scheduling will use the basic Query Template Utility.
"^DD",404.94,404.94,.02,21,7,0)
When this occurs, this field will allow the utility to
"^DD",404.94,404.94,.02,21,8,0)
only allow user selection of reports available for the
"^DD",404.94,404.94,.02,21,9,0)
module accessing the utility.
"^DD",404.94,404.94,.02,"DT")
2960404
"^DD",404.94,404.94,10,0)
DESCRIPTION^404.9401^^1;0
"^DD",404.94,404.9401,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",404.94,404.9401,0,"DT")
2951215
"^DD",404.94,404.9401,0,"NM","DESCRIPTION")

"^DD",404.94,404.9401,0,"UP")
404.94
"^DD",404.94,404.9401,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",404.94,404.9401,.01,"DT")
2951215
"^DD",404.95,404.95,0)
FIELD^^.05^8
"^DD",404.95,404.95,0,"DDA")
N
"^DD",404.95,404.95,0,"DT")
2960408
"^DD",404.95,404.95,0,"IX","AC",404.95,.02)

"^DD",404.95,404.95,0,"IX","AD",404.95,.03)

"^DD",404.95,404.95,0,"IX","B",404.95,.01)

"^DD",404.95,404.95,0,"IX","C",404.95,.04)

"^DD",404.95,404.95,0,"NM","SCHEDULING REPORT QUERY TEMPLATE")

"^DD",404.95,404.95,0,"PT",403.35,1.15)

"^DD",404.95,404.95,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",404.95,404.95,.01,1,0)
^.1
"^DD",404.95,404.95,.01,1,1,0)
404.95^B
"^DD",404.95,404.95,.01,1,1,1)
S ^SD(404.95,"B",$E(X,1,30),DA)=""
"^DD",404.95,404.95,.01,1,1,2)
K ^SD(404.95,"B",$E(X,1,30),DA)
"^DD",404.95,404.95,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",404.95,404.95,.01,21,0)
^^5^5^2960408^
"^DD",404.95,404.95,.01,21,1,0)
Name of the query template specified by the creator/user.
"^DD",404.95,404.95,.01,21,2,0)

"^DD",404.95,404.95,.01,21,3,0)
Two templates cannot have the same name for a given user.
"^DD",404.95,404.95,.01,21,4,0)
Templates can have the same name but they must be created
"^DD",404.95,404.95,.01,21,5,0)
by different users.
"^DD",404.95,404.95,.01,23,0)
^^2^2^2960408^
"^DD",404.95,404.95,.01,23,1,0)
The template name and the creator is the composite primary
"^DD",404.95,404.95,.01,23,2,0)
key for this file.
"^DD",404.95,404.95,.02,0)
CREATOR^P200'^VA(200,^0;2^Q
"^DD",404.95,404.95,.02,1,0)
^.1^^-1
"^DD",404.95,404.95,.02,1,1,0)
404.95^AC
"^DD",404.95,404.95,.02,1,1,1)
S ^SD(404.95,"AC",$E(X,1,30),DA)=""
"^DD",404.95,404.95,.02,1,1,2)
K ^SD(404.95,"AC",$E(X,1,30),DA)
"^DD",404.95,404.95,.02,1,1,"DT")
2960306
"^DD",404.95,404.95,.02,21,0)
^^1^1^2960408^
"^DD",404.95,404.95,.02,21,1,0)
This field contains the name of the creator of the template.
"^DD",404.95,404.95,.02,"DT")
2960313
"^DD",404.95,404.95,.03,0)
ACCESS LEVEL^S^1:PRIVATE;2:PUBLIC;^0;3^Q
"^DD",404.95,404.95,.03,1,0)
^.1
"^DD",404.95,404.95,.03,1,1,0)
404.95^AD
"^DD",404.95,404.95,.03,1,1,1)
S ^SD(404.95,"AD",$E(X,1,30),DA)=""
"^DD",404.95,404.95,.03,1,1,2)
K ^SD(404.95,"AD",$E(X,1,30),DA)
"^DD",404.95,404.95,.03,1,1,"%D",0)
^^1^1^2960419^
"^DD",404.95,404.95,.03,1,1,"%D",1,0)
Allows quick retrieval of 'public' templates.
"^DD",404.95,404.95,.03,1,1,"DT")
2960419
"^DD",404.95,404.95,.03,21,0)
^^7^7^2960408^
"^DD",404.95,404.95,.03,21,1,0)
When a template is created, the creator designates whether the
"^DD",404.95,404.95,.03,21,2,0)
template is a private template or a public template. Public
"^DD",404.95,404.95,.03,21,3,0)
templates can be used by other users but can only be edited
"^DD",404.95,404.95,.03,21,4,0)
by the creator.
"^DD",404.95,404.95,.03,21,5,0)

"^DD",404.95,404.95,.03,21,6,0)
Another user can copy the template with the 'save as' command
"^DD",404.95,404.95,.03,21,7,0)
and then make modifications.
"^DD",404.95,404.95,.03,"DT")
2960419
"^DD",404.95,404.95,.04,0)
REPORT^P404.92'^SD(404.92,^0;4^Q
"^DD",404.95,404.95,.04,1,0)
^.1
"^DD",404.95,404.95,.04,1,1,0)
404.95^C
"^DD",404.95,404.95,.04,1,1,1)
S ^SD(404.95,"C",$E(X,1,30),DA)=""
"^DD",404.95,404.95,.04,1,1,2)
K ^SD(404.95,"C",$E(X,1,30),DA)
"^DD",404.95,404.95,.04,1,1,"DT")
2960306
"^DD",404.95,404.95,.04,21,0)
^^2^2^2960408^
"^DD",404.95,404.95,.04,21,1,0)
This field indicates the report that the template's pre-defined
"^DD",404.95,404.95,.04,21,2,0)
specifications are applied against.
"^DD",404.95,404.95,.04,"DT")
2960306
"^DD",404.95,404.95,.05,0)
LAST SAVED DATE/TIME^D^^0;5^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",404.95,404.95,.05,21,0)
^^1^1^2960417^
"^DD",404.95,404.95,.05,21,1,0)
Date and time the user lasted saved this template.
"^DD",404.95,404.95,.05,"DT")
2960408
"^DD",404.95,404.95,10,0)
DESCRIPTION^404.9501^^1;0
"^DD",404.95,404.95,10,21,0)
^^2^2^2960408^
"^DD",404.95,404.95,10,21,1,0)
Personal description for template specified by the template's 
"^DD",404.95,404.95,10,21,2,0)
creator.
"^DD",404.95,404.95,30,0)
FIELDS^404.9502P^^FIELDS;0
"^DD",404.95,404.95,30,21,0)
^^2^2^2960417^
"^DD",404.95,404.95,30,21,1,0)
This multiple contains the field names and user specified
"^DD",404.95,404.95,30,21,2,0)
values needed by the REPORT (#.04).
"^DD",404.95,404.95,40,0)
SELECTIONS^404.9503V^^FILES;0
"^DD",404.95,404.95,40,21,0)
^^3^3^2960417^^
"^DD",404.95,404.95,40,21,1,0)
This multiple contains the list of file entries
"^DD",404.95,404.95,40,21,2,0)
selected by the user to meet the report criteria
"^DD",404.95,404.95,40,21,3,0)
selection requirements.
"^DD",404.95,404.9501,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",404.95,404.9501,0,"DT")
2960306
"^DD",404.95,404.9501,0,"NM","DESCRIPTION")

"^DD",404.95,404.9501,0,"UP")
404.95
"^DD",404.95,404.9501,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",404.95,404.9501,.01,"DT")
2960306
"^DD",404.95,404.9502,0)
FIELDS SUB-FIELD^^.02^2
"^DD",404.95,404.9502,0,"DT")
2960306
"^DD",404.95,404.9502,0,"IX","B",404.9502,.01)

"^DD",404.95,404.9502,0,"NM","FIELDS")

"^DD",404.95,404.9502,0,"UP")
404.95
"^DD",404.95,404.9502,.01,0)
FIELDS^MP404.93'^SD(404.93,^0;1^Q
"^DD",404.95,404.9502,.01,1,0)
^.1
"^DD",404.95,404.9502,.01,1,1,0)
404.9502^B
"^DD",404.95,404.9502,.01,1,1,1)
S ^SD(404.95,DA(1),"FIELDS","B",$E(X,1,30),DA)=""
"^DD",404.95,404.9502,.01,1,1,2)
K ^SD(404.95,DA(1),"FIELDS","B",$E(X,1,30),DA)
"^DD",404.95,404.9502,.01,21,0)
^^1^1^2960417^
"^DD",404.95,404.9502,.01,21,1,0)
Name of the field used by the REPORT (#.04).
"^DD",404.95,404.9502,.01,"DT")
2960306
"^DD",404.95,404.9502,.02,0)
VALUE^F^^0;2^K:$L(X)>100!($L(X)<1) X
"^DD",404.95,404.9502,.02,3)
Answer must be 1-100 characters in length.
"^DD",404.95,404.9502,.02,21,0)
^^3^3^2960417^^
"^DD",404.95,404.9502,.02,21,1,0)
Criteria value specified by the user for the field.
"^DD",404.95,404.9502,.02,21,2,0)
This value is used during report execution and
"^DD",404.95,404.9502,.02,21,3,0)
displayed to the user in the Query Template Utility.
"^DD",404.95,404.9502,.02,"DT")
2960306
"^DD",404.95,404.9503,0)
SELECTIONS SUB-FIELD^^.01^1
"^DD",404.95,404.9503,0,"DT")
2960306
"^DD",404.95,404.9503,0,"IX","B",404.9503,.01)

"^DD",404.95,404.9503,0,"NM","SELECTIONS")

"^DD",404.95,404.9503,0,"UP")
404.95
"^DD",404.95,404.9503,.01,0)
SELECTIONS^MV^^0;1^Q
"^DD",404.95,404.9503,.01,1,0)
^.1
"^DD",404.95,404.9503,.01,1,1,0)
404.9503^B
"^DD",404.95,404.9503,.01,1,1,1)
S ^SD(404.95,DA(1),"FILES","B",$E(X,1,30),DA)=""
"^DD",404.95,404.9503,.01,1,1,2)
K ^SD(404.95,DA(1),"FILES","B",$E(X,1,30),DA)
"^DD",404.95,404.9503,.01,1,1,3)
Required Index for Variable Pointer
"^DD",404.95,404.9503,.01,21,0)
^^3^3^2960417^
"^DD",404.95,404.9503,.01,21,1,0)
This field contains the user selected file entry.
"^DD",404.95,404.9503,.01,21,2,0)
The entry meets one of the report criteria selection
"^DD",404.95,404.9503,.01,21,3,0)
requirements.
"^DD",404.95,404.9503,.01,"DT")
2960306
"^DD",404.95,404.9503,.01,"V",0)
^.12P^6^6
"^DD",404.95,404.9503,.01,"V",1,0)
4^DIVISION^1^D^n^n
"^DD",404.95,404.9503,.01,"V",2,0)
403.46^ROLE^2^R^n^n
"^DD",404.95,404.9503,.01,"V",3,0)
404.51^TEAM^3^T^n^n
"^DD",404.95,404.9503,.01,"V",4,0)
200^PRACTITIONER^4^P^n^n
"^DD",404.95,404.9503,.01,"V",5,0)
44^CLINIC^5^C^y^n
"^DD",404.95,404.9503,.01,"V",5,1)
SET DIC("S")="IF $P(^(0),U,3)[""C"""
"^DD",404.95,404.9503,.01,"V",5,2)
Allows only clinics.
"^DD",404.95,404.9503,.01,"V",6,0)
8930^User Class^6^U
"^DIC",44,44,0)
HOSPITAL LOCATION^44I
"^DIC",44,44,0,"GL")
^SC(
"^DIC",44,44,"%",0)
^1.005^3^3
"^DIC",44,44,"%",1,0)
SD
"^DIC",44,44,"%",2,0)
LR
"^DIC",44,44,"%",3,0)
RA
"^DIC",44,44,"%","B","LR",2)

"^DIC",44,44,"%","B","RA",3)

"^DIC",44,44,"%","B","SD",1)

"^DIC",44,44,"%D",0)
1
"^DIC",44,44,"%D",1,0)
Contains locations found in the hospital (ie. Wards, Clinics)
"^DIC",44,44,"%D",2,0)
 *********DO NOT RE-INDEX THIS FILE**********
"^DIC",44,"B","HOSPITAL LOCATION",44)

"^DIC",403.35,403.35,0)
SCHEDULING USER PREFERENCE^403.35P
"^DIC",403.35,403.35,0,"GL")
^SCRS(403.35,
"^DIC",403.35,403.35,"%D",0)
^^1^1^2960531^^
"^DIC",403.35,403.35,"%D",1,0)
This contains the user's preferences to be used as defaults.
"^DIC",403.35,"B","SCHEDULING USER PREFERENCE",403.35)

"^DIC",403.43,403.43,0)
SCHEDULING EVENT^403.43I
"^DIC",403.43,403.43,0,"GL")
^SD(403.43,
"^DIC",403.43,403.43,"%D",0)
^^5^5^2950606^^
"^DIC",403.43,403.43,"%D",1,0)
This table file contains the scheduling events.
"^DIC",403.43,403.43,"%D",2,0)
 
"^DIC",403.43,403.43,"%D",3,0)
If an entry needs to be added, modified or deleted a patch will be issued
"^DIC",403.43,403.43,"%D",4,0)
instructing the site how to make the change.  Otherwise, this table should not
"^DIC",403.43,403.43,"%D",5,0)
be edited in anyway by the site.
"^DIC",403.43,"B","SCHEDULING EVENT",403.43)

"^DIC",403.44,403.44,0)
SCHEDULING REASON^403.44I
"^DIC",403.44,403.44,0,"GL")
^SD(403.44,
"^DIC",403.44,403.44,"%D",0)
^^8^8^2960516^^^^
"^DIC",403.44,403.44,"%D",1,0)
This table file contains the scheduling reasons.
"^DIC",403.44,403.44,"%D",2,0)
 
"^DIC",403.44,403.44,"%D",3,0)
If an entry needs to be added, modified or deleted a patch will be issued
"^DIC",403.44,403.44,"%D",4,0)
instructing the site how to make the change.  Otherwise, this table should not
"^DIC",403.44,403.44,"%D",5,0)
be edited in anyway by the site.
"^DIC",403.44,403.44,"%D",6,0)
 
"^DIC",403.44,403.44,"%D",7,0)
Scheduling Reason event code 'HL-S15' entries in this file correspond to the
"^DIC",403.44,403.44,"%D",8,0)
entries in the Cancellation Reasons file (#409.2).
"^DIC",403.44,"B","SCHEDULING REASON",403.44)

"^DIC",403.46,403.46,0)
STANDARD POSITION^403.46
"^DIC",403.46,403.46,0,"GL")
^SD(403.46,
"^DIC",403.46,403.46,"%D",0)
^^14^14^2960415^^^
"^DIC",403.46,403.46,"%D",1,0)
This table contains the standard team positions used by PCMM.
"^DIC",403.46,403.46,"%D",2,0)
 
"^DIC",403.46,403.46,"%D",3,0)
Each Team Position entry must map to one of these standard roles.
"^DIC",403.46,403.46,"%D",4,0)
 
"^DIC",403.46,403.46,"%D",5,0)
Sites are NOT allowed to edit the structure of this file.  Making any 
"^DIC",403.46,403.46,"%D",6,0)
kind of revision to this file may result in a faulty performance of the
"^DIC",403.46,403.46,"%D",7,0)
Primary Care Management Software or other DHCP software that uses this 
"^DIC",403.46,403.46,"%D",8,0)
file.  Updates to this file should only be done as a result of an 
"^DIC",403.46,403.46,"%D",9,0)
official patch to the Scheduling Module.
"^DIC",403.46,403.46,"%D",10,0)
 
"^DIC",403.46,403.46,"%D",11,0)
Sites are NOT allowed to edit this file's fields via FileMan, without 
"^DIC",403.46,403.46,"%D",12,0)
the direction of DHCP Customer Support.  Deleting, changing, or adding 
"^DIC",403.46,403.46,"%D",13,0)
entries to this file may result in faulty performance of the Primary 
"^DIC",403.46,403.46,"%D",14,0)
Care Management Software or other DHCP software that uses this file.
"^DIC",403.46,"B","STANDARD POSITION",403.46)

"^DIC",403.47,403.47,0)
TEAM PURPOSE^403.47
"^DIC",403.47,403.47,0,"GL")
^SD(403.47,
"^DIC",403.47,403.47,"%D",0)
^^10^10^2950222^
"^DIC",403.47,403.47,"%D",1,0)
This standard table contains the list of roles/purposes of a team.
"^DIC",403.47,403.47,"%D",2,0)
 
"^DIC",403.47,403.47,"%D",3,0)
Examples:
"^DIC",403.47,403.47,"%D",4,0)
    - Primary Care
"^DIC",403.47,403.47,"%D",5,0)
    - Inpatient Ward
"^DIC",403.47,403.47,"%D",6,0)
    - Mental Health Treatment
"^DIC",403.47,403.47,"%D",7,0)
    - Rapid Response
"^DIC",403.47,403.47,"%D",8,0)
    - Community Care
"^DIC",403.47,403.47,"%D",9,0)
    - Special Treatment Program
"^DIC",403.47,403.47,"%D",10,0)
    - Super-Team (group)
"^DIC",403.47,"B","TEAM PURPOSE",403.47)

"^DIC",404.41,404.41,0)
OUTPATIENT PROFILE^404.41P
"^DIC",404.41,404.41,0,"GL")
^SCPT(404.41,
"^DIC",404.41,404.41,"%D",0)
^^3^3^2950309^
"^DIC",404.41,404.41,"%D",1,0)
This table contains outpatient related information for a patient.
"^DIC",404.41,404.41,"%D",2,0)
For example, it contains computed fields that indicate the current
"^DIC",404.41,404.41,"%D",3,0)
primary care team, positions and practitioner assigned to the patient.
"^DIC",404.41,"B","OUTPATIENT PROFILE",404.41)

"^DIC",404.42,404.42,0)
PATIENT TEAM ASSIGNMENT^404.42P
"^DIC",404.42,404.42,0,"GL")
^SCPT(404.42,
"^DIC",404.42,404.42,"%D",0)
^^12^12^2960415^^^
"^DIC",404.42,404.42,"%D",1,0)
This table contains a history of the teams that
"^DIC",404.42,404.42,"%D",2,0)
have been assigned to the patient over time.
"^DIC",404.42,404.42,"%D",3,0)
Sites are NOT allowed to edit the structure of this file.  Making any 
"^DIC",404.42,404.42,"%D",4,0)
kind of revision to this file may result in a faulty performance of the
"^DIC",404.42,404.42,"%D",5,0)
Primary Care Management Software or other DHCP software that uses this 
"^DIC",404.42,404.42,"%D",6,0)
file.  Updates to this file should only be done as a result of an 
"^DIC",404.42,404.42,"%D",7,0)
official patch to the Scheduling Module.
"^DIC",404.42,404.42,"%D",8,0)
 
"^DIC",404.42,404.42,"%D",9,0)
Sites are NOT allowed to edit this file's fields via FileMan, without 
"^DIC",404.42,404.42,"%D",10,0)
the direction of DHCP Customer Support.  Deleting, changing, or adding 
"^DIC",404.42,404.42,"%D",11,0)
entries to this file may result in faulty performance of the Primary 
"^DIC",404.42,404.42,"%D",12,0)
Care Management Software or other DHCP software that uses this file.
"^DIC",404.42,"B","PATIENT TEAM ASSIGNMENT",404.42)

"^DIC",404.43,404.43,0)
PATIENT TEAM POSITION ASSIGNMENT^404.43
"^DIC",404.43,404.43,0,"GL")
^SCPT(404.43,
"^DIC",404.43,404.43,"%D",0)
^^12^12^2960415^
"^DIC",404.43,404.43,"%D",1,0)
This file contains a history of positions that have been assigned
"^DIC",404.43,404.43,"%D",2,0)
to the patient.
"^DIC",404.43,404.43,"%D",3,0)
Sites are NOT allowed to edit the structure of this file.  Making any 
"^DIC",404.43,404.43,"%D",4,0)
kind of revision to this file may result in a faulty performance of the
"^DIC",404.43,404.43,"%D",5,0)
Primary Care Management Software or other DHCP software that uses this 
"^DIC",404.43,404.43,"%D",6,0)
file.  Updates to this file should only be done as a result of an 
"^DIC",404.43,404.43,"%D",7,0)
official patch to the Scheduling Module.
"^DIC",404.43,404.43,"%D",8,0)
 
"^DIC",404.43,404.43,"%D",9,0)
Sites are NOT allowed to edit this file's fields via FileMan, without 
"^DIC",404.43,404.43,"%D",10,0)
the direction of DHCP Customer Support.  Deleting, changing, or adding 
"^DIC",404.43,404.43,"%D",11,0)
entries to this file may result in faulty performance of the Primary 
"^DIC",404.43,404.43,"%D",12,0)
Care Management Software or other DHCP software that uses this file.
"^DIC",404.43,"B","PATIENT TEAM POSITION ASSIGNMENT",404.43)

"^DIC",404.51,404.51,0)
TEAM^404.51
"^DIC",404.51,404.51,0,"GL")
^SCTM(404.51,
"^DIC",404.51,404.51,"%D",0)
^^1^1^2950607^^^^
"^DIC",404.51,404.51,"%D",1,0)
This is a local table file containing the site's names for teams.
"^DIC",404.51,404.51,"%D",2,0)
team. Teams can be setup as primary care teams or service specific teams.
"^DIC",404.51,404.51,"%D",3,0)
 
"^DIC",404.51,404.51,"%D",4,0)
Super-teams can be setup as a group of teams.
"^DIC",404.51,"B","TEAM",404.51)

"^DIC",404.52,404.52,0)
POSITION ASSIGNMENT HISTORY^404.52PI
"^DIC",404.52,404.52,0,"GL")
^SCTM(404.52,
"^DIC",404.52,404.52,"%D",0)
^^12^12^2960415^^^^
"^DIC",404.52,404.52,"%D",1,0)
This table holds the history of which users were assigned to each
"^DIC",404.52,404.52,"%D",2,0)
Team Position and when.
"^DIC",404.52,404.52,"%D",3,0)
Sites are NOT allowed to edit the structure of this file.  Making any 
"^DIC",404.52,404.52,"%D",4,0)
kind of revision to this file may result in a faulty performance of the
"^DIC",404.52,404.52,"%D",5,0)
Primary Care Management Software or other DHCP software that uses this 
"^DIC",404.52,404.52,"%D",6,0)
file.  Updates to this file should only be done as a result of an 
"^DIC",404.52,404.52,"%D",7,0)
official patch to the Scheduling Module.
"^DIC",404.52,404.52,"%D",8,0)
 
"^DIC",404.52,404.52,"%D",9,0)
Sites are NOT allowed to edit this file's fields via FileMan, without 
"^DIC",404.52,404.52,"%D",10,0)
the direction of DHCP Customer Support.  Deleting, changing, or adding 
"^DIC",404.52,404.52,"%D",11,0)
entries to this file may result in faulty performance of the Primary 
"^DIC",404.52,404.52,"%D",12,0)
Care Management Software or other DHCP software that uses this file.
"^DIC",404.52,"B","POSITION ASSIGNMENT HISTORY",404.52)

"^DIC",404.56,404.56,0)
TEAM AUTOLINK^404.56
"^DIC",404.56,404.56,0,"GL")
^SCTM(404.56,
"^DIC",404.56,"B","TEAM AUTOLINK",404.56)

"^DIC",404.57,404.57,0)
TEAM POSITION^404.57I
"^DIC",404.57,404.57,0,"GL")
^SCTM(404.57,
"^DIC",404.57,404.57,"%D",0)
^^1^1^2960411^^^^
"^DIC",404.57,404.57,"%D",1,0)
This table contains the practitioner and administrative positions associated with a Team.
"^DIC",404.57,"B","TEAM POSITION",404.57)

"^DIC",404.58,404.58,0)
TEAM HISTORY^404.58
"^DIC",404.58,404.58,0,"GL")
^SCTM(404.58,
"^DIC",404.58,404.58,"%D",0)
^^12^12^2960510^^
"^DIC",404.58,404.58,"%D",1,0)
This file is a logical multiple of the TEAM File (#404.51).  It contains
"^DIC",404.58,404.58,"%D",2,0)
the history of activations and inactivations for the team.
"^DIC",404.58,404.58,"%D",3,0)
Sites are NOT allowed to edit the structure of this file.  Making any 
"^DIC",404.58,404.58,"%D",4,0)
kind of revision to this file may result in a faulty performance of the
"^DIC",404.58,404.58,"%D",5,0)
Primary Care Management Software or other DHCP software that uses this 
"^DIC",404.58,404.58,"%D",6,0)
file.  Updates to this file should only be done as a result of an 
"^DIC",404.58,404.58,"%D",7,0)
official patch to the Scheduling Module.
"^DIC",404.58,404.58,"%D",8,0)
 
"^DIC",404.58,404.58,"%D",9,0)
Sites are NOT allowed to edit this file's fields via FileMan, without 
"^DIC",404.58,404.58,"%D",10,0)
the direction of DHCP Customer Support.  Deleting, changing, or adding 
"^DIC",404.58,404.58,"%D",11,0)
entries to this file may result in faulty performance of the Primary 
"^DIC",404.58,404.58,"%D",12,0)
Care Management Software or other DHCP software that uses this file.
"^DIC",404.58,"B","TEAM HISTORY",404.58)

"^DIC",404.59,404.59,0)
TEAM POSITION HISTORY^404.59
"^DIC",404.59,404.59,0,"GL")
^SCTM(404.59,
"^DIC",404.59,404.59,"%D",0)
^^13^13^2960510^^^^
"^DIC",404.59,404.59,"%D",1,0)
This is the log file of the statuses of the team positions.  Primarily,
"^DIC",404.59,404.59,"%D",2,0)
this is used to determine if a position is active for a certain time
"^DIC",404.59,404.59,"%D",3,0)
period.
"^DIC",404.59,404.59,"%D",4,0)
Sites are NOT allowed to edit the structure of this file.  Making any 
"^DIC",404.59,404.59,"%D",5,0)
kind of revision to this file may result in a faulty performance of the
"^DIC",404.59,404.59,"%D",6,0)
Primary Care Management Software or other DHCP software that uses this 
"^DIC",404.59,404.59,"%D",7,0)
file.  Updates to this file should only be done as a result of an 
"^DIC",404.59,404.59,"%D",8,0)
official patch to the Scheduling Module.
"^DIC",404.59,404.59,"%D",9,0)
 
"^DIC",404.59,404.59,"%D",10,0)
Sites are NOT allowed to edit this file's fields via FileMan, without 
"^DIC",404.59,404.59,"%D",11,0)
the direction of DHCP Customer Support.  Deleting, changing, or adding 
"^DIC",404.59,404.59,"%D",12,0)
entries to this file may result in faulty performance of the Primary 
"^DIC",404.59,404.59,"%D",13,0)
Care Management Software or other DHCP software that uses this file.
"^DIC",404.59,"B","TEAM POSITION HISTORY",404.59)

"^DIC",404.91,404.91,0)
SCHEDULING PARAMETER^404.91
"^DIC",404.91,404.91,0,"GL")
^SD(404.91,
"^DIC",404.91,404.91,"%D",0)
^^1^1^2950804^^^^
"^DIC",404.91,404.91,"%D",1,0)
This file contains the scheduling parameters.
"^DIC",404.91,"B","SCHEDULING PARAMETER",404.91)

"^DIC",404.92,404.92,0)
SCHEDULING REPORT DEFINITION^404.92
"^DIC",404.92,404.92,0,"GL")
^SD(404.92,
"^DIC",404.92,404.92,"%D",0)
^^13^13^2960509^^^^
"^DIC",404.92,404.92,"%D",1,0)
This file contains the definitions for hard coded scheduling reports
"^DIC",404.92,404.92,"%D",2,0)
that are available to the user on a client workstation.
"^DIC",404.92,404.92,"%D",3,0)

"^DIC",404.92,404.92,"%D",4,0)
These definitions are pre-determined and must not be modified unless
"^DIC",404.92,404.92,"%D",5,0)
explicitly instructed as part of a patch or module upgrade.
"^DIC",404.92,404.92,"%D",6,0)

"^DIC",404.92,404.92,"%D",7,0)
The parameters specified in each report definition are used by the
"^DIC",404.92,404.92,"%D",8,0)
client application. The parameters indicate what prompts are presented
"^DIC",404.92,404.92,"%D",9,0)
to the user, which prompts are required as part report criteria.
"^DIC",404.92,404.92,"%D",10,0)

"^DIC",404.92,404.92,"%D",11,0)
Also, where possible, a default value is specified that is used
"^DIC",404.92,404.92,"%D",12,0)
when first displaying the prompt.
"^DIC",404.92,404.92,"%D",13,0)

"^DIC",404.92,"B","SCHEDULING REPORT DEFINITION",404.92)

"^DIC",404.93,404.93,0)
SCHEDULING REPORT FIELDS DEFINITION^404.93
"^DIC",404.93,404.93,0,"GL")
^SD(404.93,
"^DIC",404.93,404.93,"%D",0)
^^9^9^2960416^
"^DIC",404.93,404.93,"%D",1,0)
This file contains the field definitions used by the SCHEDULING REPORT
"^DIC",404.93,404.93,"%D",2,0)
DEFINITION (#404.92) file. Including a field in the report definition
"^DIC",404.93,404.93,"%D",3,0)
means that the field is presented to the user as part of the report 
"^DIC",404.93,404.93,"%D",4,0)
critieria. This file defines the relationship between the field and
"^DIC",404.93,404.93,"%D",5,0)
a GUI component.
"^DIC",404.93,404.93,"%D",6,0)

"^DIC",404.93,404.93,"%D",7,0)
These field definitions are pre-determined and must not be modified unless
"^DIC",404.93,404.93,"%D",8,0)
explicitly instructed as part of a patch or module upgrade.
"^DIC",404.93,404.93,"%D",9,0)

"^DIC",404.93,"B","SCHEDULING REPORT FIELDS DEFINITION",404.93)

"^DIC",404.94,404.94,0)
SCHEDULING REPORT GROUP^404.94
"^DIC",404.94,404.94,0,"GL")
^SD(404.94,
"^DIC",404.94,404.94,"%D",0)
^^10^10^2960416^
"^DIC",404.94,404.94,"%D",1,0)
This file defines specific scheduling report groups. Each report
"^DIC",404.94,404.94,"%D",2,0)
definition in the SCHEDULING REPORT DEFINITION (#404.92) is assoicated
"^DIC",404.94,404.94,"%D",3,0)
with a report group.
"^DIC",404.94,404.94,"%D",4,0)

"^DIC",404.94,404.94,"%D",5,0)
The report group allows the easy display of related report definitions
"^DIC",404.94,404.94,"%D",6,0)
to the user for selection.
"^DIC",404.94,404.94,"%D",7,0)

"^DIC",404.94,404.94,"%D",8,0)
These groups are pre-determined and must not be modified unless
"^DIC",404.94,404.94,"%D",9,0)
explicitly instructed as part of a patch or module upgrade.
"^DIC",404.94,404.94,"%D",10,0)

"^DIC",404.94,"B","SCHEDULING REPORT GROUP",404.94)

"^DIC",404.95,404.95,0)
SCHEDULING REPORT QUERY TEMPLATE^404.95
"^DIC",404.95,404.95,0,"GL")
^SD(404.95,
"^DIC",404.95,404.95,"%D",0)
^^14^14^2960416^
"^DIC",404.95,404.95,"%D",1,0)
This file stores report criteria specifications used to print
"^DIC",404.95,404.95,"%D",2,0)
reports defined in the SCHEDULING REPORT DEFINITION (#404.92) file. 
"^DIC",404.95,404.95,"%D",3,0)

"^DIC",404.95,404.95,"%D",4,0)
These user-defined templates can then be access by the user, eliminating
"^DIC",404.95,404.95,"%D",5,0)
the need to specify the criteria each time a report needs to be executed.
"^DIC",404.95,404.95,"%D",6,0)

"^DIC",404.95,404.95,"%D",7,0)
The user can created/edit/copy/delete his or her own templates. The user
"^DIC",404.95,404.95,"%D",8,0)
can also specify whether the template is a 'personal' or
"^DIC",404.95,404.95,"%D",9,0)
'public' template. Personal templates can only be used by the user
"^DIC",404.95,404.95,"%D",10,0)
who created it. Public templates can be used by anyone but can
"^DIC",404.95,404.95,"%D",11,0)
only be edited by the template creator. However, another user can copy
"^DIC",404.95,404.95,"%D",12,0)
and edit a public template specification by using the 'Save As...' command.
"^DIC",404.95,404.95,"%D",13,0)

"^DIC",404.95,404.95,"%D",14,0)
Templates are only available on client workstation.
"^DIC",404.95,"B","SCHEDULING REPORT QUERY TEMPLATE",404.95)

**INSTALL NAME**
DG*5.3*84
"BLD",45,0)
DG*5.3*84^REGISTRATION^0^2960530^y
"BLD",45,1,0)
^^1^1^2960530^
"BLD",45,1,1,0)
ADT/R Portion of PCMM - DG*5.3*84
"BLD",45,4,0)
^9.64PA^^
"BLD",45,"ABPKG")
n
"BLD",45,"KRN",0)
^9.67PA^8994^15
"BLD",45,"KRN",.4,0)
.4
"BLD",45,"KRN",.401,0)
.401
"BLD",45,"KRN",.402,0)
.402
"BLD",45,"KRN",.403,0)
.403
"BLD",45,"KRN",.5,0)
.5
"BLD",45,"KRN",.84,0)
.84
"BLD",45,"KRN",3.6,0)
3.6
"BLD",45,"KRN",9.2,0)
9.2
"BLD",45,"KRN",9.8,0)
9.8
"BLD",45,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",45,"KRN",9.8,"NM",1,0)
DGDEATH^^0^B15501227
"BLD",45,"KRN",9.8,"NM",2,0)
DGPMV10^^0^B25790982
"BLD",45,"KRN",9.8,"NM","B","DGDEATH",1)

"BLD",45,"KRN",9.8,"NM","B","DGPMV10",2)

"BLD",45,"KRN",19,0)
19
"BLD",45,"KRN",19.1,0)
19.1
"BLD",45,"KRN",101,0)
101
"BLD",45,"KRN",409.61,0)
409.61
"BLD",45,"KRN",8994,0)
8994
"BLD",45,"KRN",8995,0)
8995
"BLD",45,"KRN","B",.4,.4)

"BLD",45,"KRN","B",.401,.401)

"BLD",45,"KRN","B",.402,.402)

"BLD",45,"KRN","B",.403,.403)

"BLD",45,"KRN","B",.5,.5)

"BLD",45,"KRN","B",.84,.84)

"BLD",45,"KRN","B",3.6,3.6)

"BLD",45,"KRN","B",9.2,9.2)

"BLD",45,"KRN","B",9.8,9.8)

"BLD",45,"KRN","B",19,19)

"BLD",45,"KRN","B",19.1,19.1)

"BLD",45,"KRN","B",101,101)

"BLD",45,"KRN","B",409.61,409.61)

"BLD",45,"KRN","B",8994,8994)

"BLD",45,"KRN","B",8995,8995)

"BLD",45,"QUES",0)
^9.62^^
"OER",5,0)
5^DG^^M.A.S.^
"OER",5,1,0)
^100.9951PA^21^11
"OER",5,1,10,0)
102
"OER",5,1,10,1,0)
^100.99511PA^1^1
"OER",5,1,10,1,1,0)
101
"OER",5,1,11,0)
104
"OER",5,1,11,1,0)
^100.99511PA^1^1
"OER",5,1,11,1,1,0)
101
"OER",5,1,12,0)
112
"OER",5,1,12,1,0)
^100.99511PA^1^1
"OER",5,1,12,1,1,0)
101
"OER",5,1,13,0)
482
"OER",5,1,13,1,0)
^100.99511PA^1^1
"OER",5,1,13,1,1,0)
457
"OER",5,1,14,0)
565
"OER",5,1,14,1,0)
^100.99511PA^1^1
"OER",5,1,14,1,1,0)
101
"OER",5,1,15,0)
647
"OER",5,1,15,1,0)
^100.99511PA^3^3
"OER",5,1,15,1,1,0)
602
"OER",5,1,15,1,2,0)
594
"OER",5,1,15,1,3,0)
788
"OER",5,1,16,0)
649
"OER",5,1,16,1,0)
^100.99511PA^4^4
"OER",5,1,16,1,1,0)
594
"OER",5,1,16,1,2,0)
602
"OER",5,1,16,1,3,0)
582
"OER",5,1,16,1,4,0)
788
"OER",5,1,17,0)
650
"OER",5,1,17,1,0)
^100.99511PA^4^4
"OER",5,1,17,1,1,0)
582
"OER",5,1,17,1,2,0)
602
"OER",5,1,17,1,3,0)
594
"OER",5,1,17,1,4,0)
788
"OER",5,1,19,0)
781
"OER",5,1,19,1,0)
^100.99511PA^1^1
"OER",5,1,19,1,1,0)
414
"OER",5,1,20,0)
837
"OER",5,1,20,1,0)
^100.99511PA^1^1
"OER",5,1,20,1,1,0)
101
"OER",5,1,21,0)
838
"OER",5,1,21,1,0)
^100.99511PA^1^1
"OER",5,1,21,1,1,0)
414
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2941102
"PKG",5,22,1,"PAH",1,0)
84^2960530
"PKG",5,22,1,"PAH",1,1,0)
^^1^1^2960603
"PKG",5,22,1,"PAH",1,1,1,0)
ADT/R Portion of PCMM - DG*5.3*84
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","DGDEATH")
0^1^B15501227
"RTN","DGDEATH",1,0)
DGDEATH ;ALB/MRL - PROCESS DECEASED PATIENTS ; 19 JUN 87
"RTN","DGDEATH",2,0)
 ;;5.3;Registration;**45,84**;Aug 13, 1993
"RTN","DGDEATH",3,0)
 ;
"RTN","DGDEATH",4,0)
GET S DGDTHEN="" W !! S DIC="^DPT(",DIC(0)="AEQMZ" D ^DIC G Q:Y'>0 S (DA,DFN)=+Y
"RTN","DGDEATH",5,0)
 I $D(^DPT(DFN,.1)) W !?3,"Patient is currently in-house.  Discharge him with a discharge type of DEATH." G GET
"RTN","DGDEATH",6,0)
 I $S($D(^DPT(DFN,.35)):^(.35),1:"") F DGY=0:0 S DGY=$O(^DGPM("ATID1",DFN,DGY)) Q:'DGY  S DGDA=$O(^(DGY,0)) I $D(^DGPM(+DGDA,0)),$P(^(0),"^",17)]"" S DGXX=$P(^(0),"^",17),DGXX=^DGPM(DGXX,0) I "^12^38^"[("^"_$P(DGXX,"^",18)_"^") G DIS
"RTN","DGDEATH",7,0)
 K A W ! S DIE=DIC,DR=".351" D ^DIE G GET
"RTN","DGDEATH",8,0)
 ;
"RTN","DGDEATH",9,0)
DIS W !,"Patient has a discharge type of Death",!,"Edit the discharge",!
"RTN","DGDEATH",10,0)
Q K A,DA,DFN,DGDA,DIC,DIE,DR,DGXX,DGY,DGDTHEN Q
"RTN","DGDEATH",11,0)
XFR ; called from set x-ref of field .351 of file 2
"RTN","DGDEATH",12,0)
 N DGPCMM
"RTN","DGDEATH",13,0)
 Q:'$D(DFN)
"RTN","DGDEATH",14,0)
 K DGTEXT D ^DGPATV S DGDEATH=X,XMSUB="PATIENT HAS EXPIRED",DGCT=0
"RTN","DGDEATH",15,0)
 D DEMOG
"RTN","DGDEATH",16,0)
 S DGT=X-.0001,(Y,DGDDT)=X,DG1="" D:DGT]"" ^DGINPW
"RTN","DGDEATH",17,0)
 S Y=$$FMTE^XLFDT(Y),Y=$S(Y]"":Y,1:"UNKNOWN")
"RTN","DGDEATH",18,0)
 D LINE("")
"RTN","DGDEATH",19,0)
 D LINE("      Date/Time of Death: "_Y_$S('DG1:"",$D(DGDTHEN):"",1:"  (While an inpatient)"))
"RTN","DGDEATH",20,0)
 D LINE("")
"RTN","DGDEATH",21,0)
 I '$D(ADM),DG1,$D(^DGPM(+DGA1,0)) S ADM=+^DGPM($P(^(0),"^",14),0)
"RTN","DGDEATH",22,0)
 S Y=$$FMTE^XLFDT($S($D(ADM):ADM,1:""))
"RTN","DGDEATH",23,0)
 D LINE($S($D(DGDTHEN):"",DG1:"     Admission Date/Time: "_Y_$S((DGDDT-ADM)<1:"  (Within 24 hours of hospitalization)",1:""),1:""))
"RTN","DGDEATH",24,0)
 D LINE("")
"RTN","DGDEATH",25,0)
 S DGX=$P($G(^DGPM(+$G(DGA1),0)),"^",6),DGX=$P($G(^DIC(42,+DGX,0)),U,1)
"RTN","DGDEATH",26,0)
 D LINE($S($D(DGDTHEN):"",$D(DGA1):"             Admitted To: "_$S(DGX]"":DGX,1:"UNKNOWN"),1:"")) K DGX
"RTN","DGDEATH",27,0)
 D LINE("")
"RTN","DGDEATH",28,0)
 I DG1&'$D(DGDTHEN) D 
"RTN","DGDEATH",29,0)
 . D LINE($S($D(DGXFR0):"           Last Transfer: "_$S($D(^DIC(42,+$P(DGXFR0,"^",6),0)):$P(^(0),"^"),1:"UNKNOWN"),1:""))
"RTN","DGDEATH",30,0)
 . D LINE("")
"RTN","DGDEATH",31,0)
F I $O(^DPT(DFN,"S",DGDEATH))>0 D LINE("NOTE: Patient had future appointments scheduled!!")
"RTN","DGDEATH",32,0)
 S DGSCHAD=0 D SA I DGSCHAD D LINE("NOTE: Patient had scheduled admissions which have been cancelled!!")
"RTN","DGDEATH",33,0)
 I 'DGVETS D LINE("Patient is a NON-VETERAN."_$S($D(^DIC(21,+$P($G(^DPT(DFN,.32)),"^",3),0)):"  ["_$P(^(0),"^",1)_"]",1:""))
"RTN","DGDEATH",34,0)
 S DGPCMM=$$PCMMXMY^SCAPMC25(1,DFN,,,0) ;creates xmy array
"RTN","DGDEATH",35,0)
 S DGCT=$$PCMAIL^SCMCMM(DFN,"DGTEXT",DT)
"RTN","DGDEATH",36,0)
Q1 S DGB=1 D ^DGBUL S X=DGDEATH
"RTN","DGDEATH",37,0)
 K DGDEATH,DGSCHAD,DGI,Y,DGDDT D KILL^DGPATV K ADM,DG1,DGA1,DGCT,DGT,DGXX,DGY,Z Q
"RTN","DGDEATH",38,0)
SA F DGI=0:0 S DGI=$O(^DGS(41.1,"B",DFN,DGI)) Q:'DGI  I $D(^DGS(41.1,DGI,0)),($P(^(0),"^",13)']""),($P(^(0),"^",17)']"") S $P(^(0),"^",13)=DGDEATH,$P(^(0),"^",14)=+DUZ,$P(^(0),"^",15)=1,$P(^(0),"^",16)=2,DGSCHAD=1
"RTN","DGDEATH",39,0)
 Q
"RTN","DGDEATH",40,0)
 ;
"RTN","DGDEATH",41,0)
DEL ; delete death bulletin
"RTN","DGDEATH",42,0)
 N DGPCMM
"RTN","DGDEATH",43,0)
 S DFN=+$G(DA) I '$D(^DPT(DFN,0)) Q  ; no patient node
"RTN","DGDEATH",44,0)
 I +$G(^DPT(DFN,.35)) Q  ; not deletion
"RTN","DGDEATH",45,0)
 S DGDEATH=X,XMSUB="Patient Death has been Deleted",DGCT=0
"RTN","DGDEATH",46,0)
 D ^DGPATV
"RTN","DGDEATH",47,0)
 D LINE("The date of death for the following patient has been deleted.")
"RTN","DGDEATH",48,0)
 D LINE("")
"RTN","DGDEATH",49,0)
 D DEMOG
"RTN","DGDEATH",50,0)
 S DGPCMM=$$PCMMXMY^SCAPMC25(1,DFN,,,0) ;creates xmy array
"RTN","DGDEATH",51,0)
 S DGCT=$$PCMAIL^SCMCMM(DFN,"DGTEXT",DT)
"RTN","DGDEATH",52,0)
 S DGB=1 D ^DGBUL S X=DGDEATH
"RTN","DGDEATH",53,0)
 K DGCT,DGDEATH D KILL^DGPATV
"RTN","DGDEATH",54,0)
 Q
"RTN","DGDEATH",55,0)
 ;
"RTN","DGDEATH",56,0)
DEMOG ; list main demographics
"RTN","DGDEATH",57,0)
 D LINE("                    NAME: "_DGNAME)
"RTN","DGDEATH",58,0)
 D LINE("                     SSN: "_$P(SSN,"^",2))
"RTN","DGDEATH",59,0)
 D LINE("                     DOB: "_$P(DOB,"^",2))
"RTN","DGDEATH",60,0)
 I DGVETS D
"RTN","DGDEATH",61,0)
 . N DGX
"RTN","DGDEATH",62,0)
 . S DGX=$G(^DPT(DFN,.31))
"RTN","DGDEATH",63,0)
 . D LINE("   CLAIM FOLDER LOCATION: "_$S($D(^DIC(4,+$P(DGX,"^",4),0)):$P(^(0),"^",1),1:"NOT LISTED"))
"RTN","DGDEATH",64,0)
 . D LINE("            CLAIM NUMBER: "_$S($P(DGX,"^",3)]"":$P(DGX,"^",3),1:"NOT LISTED"))
"RTN","DGDEATH",65,0)
 Q
"RTN","DGDEATH",66,0)
 ;
"RTN","DGDEATH",67,0)
LINE(X) ; add line contained in X to array
"RTN","DGDEATH",68,0)
 S DGCT=DGCT+1
"RTN","DGDEATH",69,0)
 S DGTEXT(DGCT,0)=X
"RTN","DGDEATH",70,0)
 Q
"RTN","DGPMV10")
0^2^B25790982
"RTN","DGPMV10",1,0)
DGPMV10 ;ALB/MRL/MIR - PATIENT MOVEMENT, CONT.; 11 APR 89
"RTN","DGPMV10",2,0)
 ;;5.3;Registration;**84**;Aug 13, 1993
"RTN","DGPMV10",3,0)
CS ;Current Status
"RTN","DGPMV10",4,0)
 ;first print primary care team/practitioner/attending
"RTN","DGPMV10",5,0)
 D PCMM^SCRPU4(DFN,DT)
"RTN","DGPMV10",6,0)
 S X=$S('DGPMT:1,DGPMT<4:2,DGPMT>5:2,1:3) ;DGPMT=0 if from pt inq (DGRPD)
"RTN","DGPMV10",7,0)
 I '$D(^DGPM("C",DFN)) W !!,"Status      : PATIENT HAS NO INPATIENT OR LODGER ACTIVITY IN THE COMPUTER",*7 D CS2 Q
"RTN","DGPMV10",8,0)
 S A=$S("^3^5^"[("^"_+DGPMVI(2)_"^"):0,1:+DGPMVI(2)) W !!,"Status      : ",$S('A:"IN",1:""),"ACTIVE ",$S("^4^5^"[("^"_+DGPMVI(2)_"^"):"LODGER",1:"INPATIENT")
"RTN","DGPMV10",9,0)
 G CS1:'A W "-" S X=+DGPMVI(4) I X=1 W "on PASS" G CS1
"RTN","DGPMV10",10,0)
 I "^2^3^25^26^"[("^"_X_"^") W "on ",$S("^2^26^"[X:"A",1:"U"),"A" G CS1
"RTN","DGPMV10",11,0)
 I "^13^43^44^45^"[("^"_X_"^") W "ASIH" G CS1
"RTN","DGPMV10",12,0)
 I X=6 W "OTHER FAC" G CS1
"RTN","DGPMV10",13,0)
 W "on WARD"
"RTN","DGPMV10",14,0)
CS1 I +DGPMVI(2)=3,$D(^DGPM(+DGPMVI(17),0)) W ?39,"Discharge Type : ",$S($D(^DG(405.1,+$P(^(0),"^",4),0)):$P(^(0),"^",1),1:"UNKNOWN")
"RTN","DGPMV10",15,0)
 I "^3^4^5^"'[("^"_+DGPMVI(2)_"^"),$D(^DPT(DFN,"DAC")),($P(^("DAC"),"^",1)="S") W "  (Seriously ill)"
"RTN","DGPMV10",16,0)
 W !!,$S("^4^5^"'[("^"_+DGPMVI(2)_"^"):"Admitted    ",1:"Checked-in  "),": "_$P(DGPMVI(13,1),"^",2)
"RTN","DGPMV10",17,0)
 W ?39,$S("^4^5^"[("^"_+DGPMVI(2)_"^"):"Checked-out",+DGPMVI(2)=3:"Discharged ",1:"Transferred"),"    : ",$S("^1^4^"'[("^"_+DGPMVI(2)_"^"):$P(DGPMVI(3),"^",2),$P(DGPMVI(3),"^",2)'=$P(DGPMVI(13,1),"^",2):$P(DGPMVI(3),"^",2),1:"")
"RTN","DGPMV10",18,0)
 W !,"Ward        : ",$E($P(DGPMVI(5),"^",2),1,24),?39,"Room-Bed       : ",$E($P(DGPMVI(6),"^",2),1,21) I "^4^5^"'[("^"_+DGPMVI(2)_"^") W !,"Provider    : ",$E($P(DGPMVI(7),"^",2),1,26),?39,"Specialty      : ",$E($P(DGPMVI(8),"^",2),1,21)
"RTN","DGPMV10",19,0)
 W !,"Attending   : ",$E($P(DGPMVI(18),"^",2),1,26)
"RTN","DGPMV10",20,0)
 D CS2
"RTN","DGPMV10",21,0)
 S DGPMIFN=DGPMVI(13) I +DGPMVI(2)'=4&(+DGPMVI(2)'=5) D ^DGPMLOS W !!,"Admission LOS: ",+$P(X,"^",5),"  Absence days: ",+$P(X,"^",2),"  Pass Days: ",+$P(X,"^",3),"  ASIH days: ",+$P(X,"^",4)
"RTN","DGPMV10",22,0)
 K A,C,I,J,X
"RTN","DGPMV10",23,0)
 Q
"RTN","DGPMV10",24,0)
 ;
"RTN","DGPMV10",25,0)
CS2 ;-- additional fields for admission screen
"RTN","DGPMV10",26,0)
 Q:DGPMT'=1
"RTN","DGPMV10",27,0)
 S DGHOLD=$S($D(^DPT(DFN,0)):^(0),1:"")
"RTN","DGPMV10",28,0)
 W !!,"Religion    : ",$S($D(^DIC(13,+$P(DGHOLD,U,8),0)):$E($P(^(0),U),1,24),1:"")
"RTN","DGPMV10",29,0)
 W ?39,"Marital Status : ",$S($D(^DIC(11,+$P(DGHOLD,U,5),0)):$P(^(0),U),1:"")
"RTN","DGPMV10",30,0)
 S DGHOLD=$S($D(^DPT(DFN,.36)):$P(^(.36),U),1:"")
"RTN","DGPMV10",31,0)
 W !,"Eligibility : ",$S($D(^DIC(8,+$P(DGHOLD,U),0)):$P(^(0),U),1:"")
"RTN","DGPMV10",32,0)
 S DGHOLD=$S($D(^DPT(DFN,.361)):^(.361),1:"")
"RTN","DGPMV10",33,0)
 W:$P(DGHOLD,U)]"" " (",$P($P($P(^DD(2,.3611,0),U,3),$P(DGHOLD,U)_":",2),";"),")"
"RTN","DGPMV10",34,0)
 W:$P(DGHOLD,U)']"" " (NOT VERIFIED)"
"RTN","DGPMV10",35,0)
 K DGHOLD
"RTN","DGPMV10",36,0)
 Q
"RTN","DGPMV10",37,0)
 ;
"RTN","DGPMV10",38,0)
LODGER ;set-up necessary variables if getting last lodger episode
"RTN","DGPMV10",39,0)
 ;only need 1,2,13,17 - date/time,TT,check-in IFN,check-out IFN
"RTN","DGPMV10",40,0)
 S I=$O(^DGPM("ATID4",DFN,0)),I=$O(^(+I,0))
"RTN","DGPMV10",41,0)
 S X=$S($D(^DGPM(+I,0)):^(0),1:"") I 'X D NULL Q
"RTN","DGPMV10",42,0)
 I $D(^DGPM(+$P(X,"^",17),0)) S (DGPMDCD,DGPMVI(1))=+^(0),DGPMVI(2)=5,DGPMVI(13)=I,DGPMVI(17)=$P(X,"^",17) Q
"RTN","DGPMV10",43,0)
 S (DGPMDCD,DGPMVI(17))="",DGPMVI(1)=+X,DGPMVI(2)=4,DGPMVI(13)=I
"RTN","DGPMV10",44,0)
 Q
"RTN","DGPMV10",45,0)
NULL S DGPMDCD="" F I=1,2,13,17 S DGPMVI(I)=""
"RTN","DGPMV10",46,0)
 Q
"RTN","DGPMV10",47,0)
 ;
"RTN","DGPMV10",48,0)
INP ;set-up inpt vbls needed (mimic VAIP array)
"RTN","DGPMV10",49,0)
 ;
"RTN","DGPMV10",50,0)
 ;Called from scheduling, too
"RTN","DGPMV10",51,0)
 ;
"RTN","DGPMV10",52,0)
 D NOW^%DTC S (VAX("DAT"),NOW)=%,NOWI=9999999.999999-% I '$D(VAIP("E")) D LAST^VADPT3
"RTN","DGPMV10",53,0)
 F I=1:1:8,13,17 S DGPMVI(I)=""
"RTN","DGPMV10",54,0)
 S DGPMVI(13,1)=""
"RTN","DGPMV10",55,0)
 S DGPMVI(1)=$S($D(VAIP("E")):VAIP("E"),1:E) ;use ifn of last mvt from VADPT call or one passed from DGPMV
"RTN","DGPMV10",56,0)
 S DGX=$G(^DGPM(+DGPMVI(1),0)),DGPMVI(2)=$P(DGX,"^",2),DGPMVI(4)=$P(DGX,"^",18) S Y=+DGX X ^DD("DD") S DGPMVI(3)=$P(DGX,"^",1)_"^"_Y
"RTN","DGPMV10",57,0)
 S DGPMVI(5)=$P(DGX,"^",6)_"^"_$S($D(^DIC(42,+$P(DGX,"^",6),0)):$P(^(0),"^",1),1:""),DGPMVI(6)=$P(DGX,"^",7)_"^"_$S($D(^DG(405.4,+$P(DGX,"^",7),0)):$P(^(0),"^",1),1:""),DGPMVI(13)=$P(DGX,"^",14)
"RTN","DGPMV10",58,0)
 I "^3^5^"[("^"_DGPMVI(2)_"^") D GETWD ;get from ward if d/c or check-out
"RTN","DGPMV10",59,0)
 S DGX=$G(^DGPM(+DGPMVI(13),0)) I DGX]"" S Y=+DGX X ^DD("DD") S DGPMVI(13,1)=$P(DGX,"^",1)_"^"_Y,DGPMVI(17)=$P(DGX,"^",17) I $D(DGPMSVC) S DGPMSV=$P($G(^DIC(42,+$P(DGX,"^",6),0)),"^",3)
"RTN","DGPMV10",60,0)
 S DGPMDCD=$S($D(^DGPM(+DGPMVI(17),0)):$P(^(0),"^",1),1:"")
"RTN","DGPMV10",61,0)
 S (DGTS,DGPP,DGAP)="" ;t.s., primary care physician, attending
"RTN","DGPMV10",62,0)
 F I=NOWI:0 S I=$O(^DGPM("ATS",DFN,+DGPMVI(13),I)) Q:'I  F J=0:0 S J=$O(^DGPM("ATS",DFN,+DGPMVI(13),I,J)) Q:'J  F IFN=0:0 S IFN=$O(^DGPM("ATS",DFN,+DGPMVI(13),I,J,IFN)) Q:'IFN  D TS1 G TSQ:DGTS&DGPP&DGAP
"RTN","DGPMV10",63,0)
TSQ S DGPMVI(7)=DGPP,DGPMVI(8)=DGTS,DGPMVI(18)=DGAP
"RTN","DGPMV10",64,0)
 D Q^VADPT3 K DGAP,DGPP,DGTS,DGX,IFN
"RTN","DGPMV10",65,0)
 Q
"RTN","DGPMV10",66,0)
 ;
"RTN","DGPMV10",67,0)
TS1 ; set DGTS, DGPP, and DGAP
"RTN","DGPMV10",68,0)
 Q:'$D(^DGPM(IFN,0))  S DGX=^(0)
"RTN","DGPMV10",69,0)
 I 'DGPP,$D(^VA(200,+$P(DGX,"^",8),0)) S Y=$P(DGX,"^",8)_"^"_$P(^(0),"^") S DGPP=Y
"RTN","DGPMV10",70,0)
 I 'DGAP,$D(^VA(200,+$P(DGX,"^",19),0)) S Y=$P(DGX,"^",19)_"^"_$P(^(0),"^") S DGAP=Y
"RTN","DGPMV10",71,0)
 I 'DGTS,$D(^DIC(45.7,+$P(DGX,"^",9),0)) S DGTS=$P(DGX,"^",9)_"^"_$P(^(0),"^")
"RTN","DGPMV10",72,0)
 Q
"RTN","DGPMV10",73,0)
GETWD ;get the from ward if last mvt is discharge or check-out
"RTN","DGPMV10",74,0)
 I DGPMVI(2)=5 S J=DGPMVI(13) D SETWD Q
"RTN","DGPMV10",75,0)
 F I=0:0 S I=$O(^DGPM("APMV",DFN,DGPMVI(13),I)) Q:'I!+DGPMVI(5)  F J=0:0 S J=$O(^DGPM("APMV",DFN,DGPMVI(13),I,J)) Q:'J  D SETWD Q:+DGPMVI(5)
"RTN","DGPMV10",76,0)
 Q
"RTN","DGPMV10",77,0)
 ;
"RTN","DGPMV10",78,0)
SETWD ;set ward and room-bed variables for discharge/check-out mvts
"RTN","DGPMV10",79,0)
 S X=$G(^DGPM(J,0))
"RTN","DGPMV10",80,0)
 I $D(^DIC(42,+$P(X,"^",6),0)) S DGPMVI(5)=$P(X,"^",6)_"^"_$P(^(0),"^",1)
"RTN","DGPMV10",81,0)
 I $D(^DG(405.4,+$P(X,"^",7),0)) S DGPMVI(6)=$P(X,"^",7)_"^"_$P(^(0),"^",1)
"RTN","DGPMV10",82,0)
 Q
"VER")
8.0^21.0
**END**
**END**
