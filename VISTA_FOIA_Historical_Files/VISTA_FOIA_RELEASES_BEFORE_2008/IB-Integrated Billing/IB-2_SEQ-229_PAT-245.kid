Released IB*2*245 SEQ #229
Extracted from mail message
**KIDS**:IB*2.0*245^

**INSTALL NAME**
IB*2.0*245
"BLD",4728,0)
IB*2.0*245^INTEGRATED BILLING^0^3040208^y
"BLD",4728,1,0)
^^1^1^3040107^
"BLD",4728,1,1,0)
Reasonable Charges version 2.0.  Charge effective date 12/19/03.
"BLD",4728,4,0)
^9.64PA^399.1^5
"BLD",4728,4,363.2,0)
363.2
"BLD",4728,4,363.2,2,0)
^9.641^363.2^1
"BLD",4728,4,363.2,2,363.2,0)
CHARGE ITEM  (File-top level)
"BLD",4728,4,363.2,2,363.2,1,0)
^9.6411^.08^1
"BLD",4728,4,363.2,2,363.2,1,.08,0)
BASE CHARGE
"BLD",4728,4,363.2,222)
y^n^p^^^^n^^n
"BLD",4728,4,363.2,224)

"BLD",4728,4,363.3,0)
363.3
"BLD",4728,4,363.3,2,0)
^9.641^363.3^1
"BLD",4728,4,363.3,2,363.3,0)
BILLING RATE  (File-top level)
"BLD",4728,4,363.3,2,363.3,1,0)
^9.6411^.06^2
"BLD",4728,4,363.3,2,363.3,1,.05,0)
CHARGE METHOD
"BLD",4728,4,363.3,2,363.3,1,.06,0)
BASE CHARGE
"BLD",4728,4,363.3,222)
y^n^p^^^^n^^n
"BLD",4728,4,363.3,224)

"BLD",4728,4,363.31,0)
363.31
"BLD",4728,4,363.31,2,0)
^9.641^363.31^1
"BLD",4728,4,363.31,2,363.31,0)
BILLING REGION  (File-top level)
"BLD",4728,4,363.31,2,363.31,1,0)
^9.6411^.03^1
"BLD",4728,4,363.31,2,363.31,1,.03,0)
TYPE
"BLD",4728,4,363.31,222)
y^n^p^^^^n^^n
"BLD",4728,4,363.31,224)

"BLD",4728,4,399,0)
399
"BLD",4728,4,399,2,0)
^9.641^399.0304^2
"BLD",4728,4,399,2,399.0304,0)
PROCEDURES  (sub-file)
"BLD",4728,4,399,2,399.0304,1,0)
^9.6411^22^3
"BLD",4728,4,399,2,399.0304,1,15,0)
MINUTES
"BLD",4728,4,399,2,399.0304,1,21,0)
MILES
"BLD",4728,4,399,2,399.0304,1,22,0)
HOURS
"BLD",4728,4,399,2,399.048,0)
OTHER CARE  (sub-file)
"BLD",4728,4,399,2,399.048,1,0)
^9.6411^^0
"BLD",4728,4,399,222)
y^n^p^^^^n^^n
"BLD",4728,4,399,224)

"BLD",4728,4,399.1,0)
399.1
"BLD",4728,4,399.1,2,0)
^9.641^399.1^1
"BLD",4728,4,399.1,2,399.1,0)
MCCR UTILITY  (File-top level)
"BLD",4728,4,399.1,2,399.1,1,0)
^9.6411^.25^1
"BLD",4728,4,399.1,2,399.1,1,.25,0)
OTHER CARE
"BLD",4728,4,399.1,222)
y^n^p^^^^n^^n
"BLD",4728,4,399.1,224)

"BLD",4728,4,"APDD",363.2,363.2)

"BLD",4728,4,"APDD",363.2,363.2,.08)

"BLD",4728,4,"APDD",363.3,363.3)

"BLD",4728,4,"APDD",363.3,363.3,.05)

"BLD",4728,4,"APDD",363.3,363.3,.06)

"BLD",4728,4,"APDD",363.31,363.31)

"BLD",4728,4,"APDD",363.31,363.31,.03)

"BLD",4728,4,"APDD",399,399.0304)

"BLD",4728,4,"APDD",399,399.0304,15)

"BLD",4728,4,"APDD",399,399.0304,21)

"BLD",4728,4,"APDD",399,399.0304,22)

"BLD",4728,4,"APDD",399,399.048)

"BLD",4728,4,"APDD",399.1,399.1)

"BLD",4728,4,"APDD",399.1,399.1,.25)

"BLD",4728,4,"B",363.2,363.2)

"BLD",4728,4,"B",363.3,363.3)

"BLD",4728,4,"B",363.31,363.31)

"BLD",4728,4,"B",399,399)

"BLD",4728,4,"B",399.1,399.1)

"BLD",4728,"ABPKG")
n
"BLD",4728,"INIT")
POST^IBYPSA
"BLD",4728,"KRN",0)
^9.67PA^8989.52^19
"BLD",4728,"KRN",.4,0)
.4
"BLD",4728,"KRN",.401,0)
.401
"BLD",4728,"KRN",.402,0)
.402
"BLD",4728,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",4728,"KRN",.402,"NM",1,0)
IB SCREEN4    FILE #399^399^0
"BLD",4728,"KRN",.402,"NM","B","IB SCREEN4    FILE #399",1)

"BLD",4728,"KRN",.403,0)
.403
"BLD",4728,"KRN",.5,0)
.5
"BLD",4728,"KRN",.84,0)
.84
"BLD",4728,"KRN",3.6,0)
3.6
"BLD",4728,"KRN",3.8,0)
3.8
"BLD",4728,"KRN",9.2,0)
9.2
"BLD",4728,"KRN",9.8,0)
9.8
"BLD",4728,"KRN",9.8,"NM",0)
^9.68A^64^61
"BLD",4728,"KRN",9.8,"NM",1,0)
IBCBB2^^0^B32248575
"BLD",4728,"KRN",9.8,"NM",2,0)
IBCCPT^^0^B56500610
"BLD",4728,"KRN",9.8,"NM",4,0)
IBCRBC^^0^B13287981
"BLD",4728,"KRN",9.8,"NM",5,0)
IBCRBC1^^0^B53010456
"BLD",4728,"KRN",9.8,"NM",6,0)
IBCRBC11^^0^B9081129
"BLD",4728,"KRN",9.8,"NM",7,0)
IBCRBC2^^0^B24945366
"BLD",4728,"KRN",9.8,"NM",8,0)
IBCRBCA1^^0^B18875246
"BLD",4728,"KRN",9.8,"NM",9,0)
IBCRBCA2^^0^B44227203
"BLD",4728,"KRN",9.8,"NM",10,0)
IBCRBCA3^^0^B15514071
"BLD",4728,"KRN",9.8,"NM",11,0)
IBCRBG^^0^B48558770
"BLD",4728,"KRN",9.8,"NM",12,0)
IBCRBG1^^0^B2469476
"BLD",4728,"KRN",9.8,"NM",13,0)
IBCRBG2^^0^B7014659
"BLD",4728,"KRN",9.8,"NM",14,0)
IBCRBH1^^0^B59021504
"BLD",4728,"KRN",9.8,"NM",15,0)
IBCRCC^^0^B17873250
"BLD",4728,"KRN",9.8,"NM",16,0)
IBCRCI^^0^B9964623
"BLD",4728,"KRN",9.8,"NM",17,0)
IBCRCU1^^0^B25973842
"BLD",4728,"KRN",9.8,"NM",18,0)
IBCREE1^^0^B12151738
"BLD",4728,"KRN",9.8,"NM",19,0)
IBCREF^^0^B5731884
"BLD",4728,"KRN",9.8,"NM",20,0)
IBCRHBR^^0^B7554762
"BLD",4728,"KRN",9.8,"NM",21,0)
IBCRHBR6^^0^B75293524
"BLD",4728,"KRN",9.8,"NM",22,0)
IBCRHBRV^^0^B51893900
"BLD",4728,"KRN",9.8,"NM",23,0)
IBCRHBS^^0^B512744
"BLD",4728,"KRN",9.8,"NM",24,0)
IBCRHBS1^^0^B20644988
"BLD",4728,"KRN",9.8,"NM",25,0)
IBCRHBS2^^0^B3595668
"BLD",4728,"KRN",9.8,"NM",26,0)
IBCRHBS3^^0^B26475049
"BLD",4728,"KRN",9.8,"NM",27,0)
IBCRHBS4^^0^B61381373
"BLD",4728,"KRN",9.8,"NM",28,0)
IBCRHBS5^^0^B8928529
"BLD",4728,"KRN",9.8,"NM",29,0)
IBCRHBS6^^0^B45177259
"BLD",4728,"KRN",9.8,"NM",30,0)
IBCRHBS7^^0^B42517043
"BLD",4728,"KRN",9.8,"NM",31,0)
IBCRHBS8^^0^B45646528
"BLD",4728,"KRN",9.8,"NM",32,0)
IBCRHBSZ^^0^B41172296
"BLD",4728,"KRN",9.8,"NM",33,0)
IBCRHL^^0^B17051350
"BLD",4728,"KRN",9.8,"NM",34,0)
IBCRHU1^^0^B24883195
"BLD",4728,"KRN",9.8,"NM",35,0)
IBCRHU2^^0^B31268050
"BLD",4728,"KRN",9.8,"NM",36,0)
IBCRLG^^0^B6639689
"BLD",4728,"KRN",9.8,"NM",37,0)
IBCRLI^^0^B36357978
"BLD",4728,"KRN",9.8,"NM",38,0)
IBCROI^^0^B31270008
"BLD",4728,"KRN",9.8,"NM",39,0)
IBCROI1^^0^B11082486
"BLD",4728,"KRN",9.8,"NM",40,0)
IBCRU4^^0^B20945650
"BLD",4728,"KRN",9.8,"NM",41,0)
IBCRU8^^0^B2263347
"BLD",4728,"KRN",9.8,"NM",42,0)
IBCSC4^^0^B21002455
"BLD",4728,"KRN",9.8,"NM",45,0)
IBCU3^^0^B25631470
"BLD",4728,"KRN",9.8,"NM",46,0)
IBCU4^^0^B17691975
"BLD",4728,"KRN",9.8,"NM",47,0)
IBCU6^^0^B18448611
"BLD",4728,"KRN",9.8,"NM",48,0)
IBCU7^^0^B52823765
"BLD",4728,"KRN",9.8,"NM",49,0)
IBCU71^^0^B21957104
"BLD",4728,"KRN",9.8,"NM",50,0)
IBYPSA^^0^B22300550
"BLD",4728,"KRN",9.8,"NM",51,0)
IBYPSA1^^0^B46054837
"BLD",4728,"KRN",9.8,"NM",52,0)
IBYPSA2^^0^B4684241
"BLD",4728,"KRN",9.8,"NM",53,0)
IBCCC2^^0^B54730874
"BLD",4728,"KRN",9.8,"NM",54,0)
IBCRBE^^0^B30595604
"BLD",4728,"KRN",9.8,"NM",55,0)
IBCU73^^0^B15637923
"BLD",4728,"KRN",9.8,"NM",56,0)
IBCU7A^^0^B28120798
"BLD",4728,"KRN",9.8,"NM",57,0)
IBCU7U^^0^B14094757
"BLD",4728,"KRN",9.8,"NM",58,0)
IBCD3^^0^B29247948
"BLD",4728,"KRN",9.8,"NM",59,0)
IBCSC5A^^0^B40439674
"BLD",4728,"KRN",9.8,"NM",60,0)
IBCSCE^^0^B14523025
"BLD",4728,"KRN",9.8,"NM",61,0)
IBCSCH^^0^B64131006
"BLD",4728,"KRN",9.8,"NM",62,0)
IBCSCH1^^0^B21318339
"BLD",4728,"KRN",9.8,"NM",63,0)
IBCRBH2^^0^B6439962
"BLD",4728,"KRN",9.8,"NM",64,0)
IBCU7A1^^0^B18275811
"BLD",4728,"KRN",9.8,"NM","B","IBCBB2",1)

"BLD",4728,"KRN",9.8,"NM","B","IBCCC2",53)

"BLD",4728,"KRN",9.8,"NM","B","IBCCPT",2)

"BLD",4728,"KRN",9.8,"NM","B","IBCD3",58)

"BLD",4728,"KRN",9.8,"NM","B","IBCRBC",4)

"BLD",4728,"KRN",9.8,"NM","B","IBCRBC1",5)

"BLD",4728,"KRN",9.8,"NM","B","IBCRBC11",6)

"BLD",4728,"KRN",9.8,"NM","B","IBCRBC2",7)

"BLD",4728,"KRN",9.8,"NM","B","IBCRBCA1",8)

"BLD",4728,"KRN",9.8,"NM","B","IBCRBCA2",9)

"BLD",4728,"KRN",9.8,"NM","B","IBCRBCA3",10)

"BLD",4728,"KRN",9.8,"NM","B","IBCRBE",54)

"BLD",4728,"KRN",9.8,"NM","B","IBCRBG",11)

"BLD",4728,"KRN",9.8,"NM","B","IBCRBG1",12)

"BLD",4728,"KRN",9.8,"NM","B","IBCRBG2",13)

"BLD",4728,"KRN",9.8,"NM","B","IBCRBH1",14)

"BLD",4728,"KRN",9.8,"NM","B","IBCRBH2",63)

"BLD",4728,"KRN",9.8,"NM","B","IBCRCC",15)

"BLD",4728,"KRN",9.8,"NM","B","IBCRCI",16)

"BLD",4728,"KRN",9.8,"NM","B","IBCRCU1",17)

"BLD",4728,"KRN",9.8,"NM","B","IBCREE1",18)

"BLD",4728,"KRN",9.8,"NM","B","IBCREF",19)

"BLD",4728,"KRN",9.8,"NM","B","IBCRHBR",20)

"BLD",4728,"KRN",9.8,"NM","B","IBCRHBR6",21)

"BLD",4728,"KRN",9.8,"NM","B","IBCRHBRV",22)

"BLD",4728,"KRN",9.8,"NM","B","IBCRHBS",23)

"BLD",4728,"KRN",9.8,"NM","B","IBCRHBS1",24)

"BLD",4728,"KRN",9.8,"NM","B","IBCRHBS2",25)

"BLD",4728,"KRN",9.8,"NM","B","IBCRHBS3",26)

"BLD",4728,"KRN",9.8,"NM","B","IBCRHBS4",27)

"BLD",4728,"KRN",9.8,"NM","B","IBCRHBS5",28)

"BLD",4728,"KRN",9.8,"NM","B","IBCRHBS6",29)

"BLD",4728,"KRN",9.8,"NM","B","IBCRHBS7",30)

"BLD",4728,"KRN",9.8,"NM","B","IBCRHBS8",31)

"BLD",4728,"KRN",9.8,"NM","B","IBCRHBSZ",32)

"BLD",4728,"KRN",9.8,"NM","B","IBCRHL",33)

"BLD",4728,"KRN",9.8,"NM","B","IBCRHU1",34)

"BLD",4728,"KRN",9.8,"NM","B","IBCRHU2",35)

"BLD",4728,"KRN",9.8,"NM","B","IBCRLG",36)

"BLD",4728,"KRN",9.8,"NM","B","IBCRLI",37)

"BLD",4728,"KRN",9.8,"NM","B","IBCROI",38)

"BLD",4728,"KRN",9.8,"NM","B","IBCROI1",39)

"BLD",4728,"KRN",9.8,"NM","B","IBCRU4",40)

"BLD",4728,"KRN",9.8,"NM","B","IBCRU8",41)

"BLD",4728,"KRN",9.8,"NM","B","IBCSC4",42)

"BLD",4728,"KRN",9.8,"NM","B","IBCSC5A",59)

"BLD",4728,"KRN",9.8,"NM","B","IBCSCE",60)

"BLD",4728,"KRN",9.8,"NM","B","IBCSCH",61)

"BLD",4728,"KRN",9.8,"NM","B","IBCSCH1",62)

"BLD",4728,"KRN",9.8,"NM","B","IBCU3",45)

"BLD",4728,"KRN",9.8,"NM","B","IBCU4",46)

"BLD",4728,"KRN",9.8,"NM","B","IBCU6",47)

"BLD",4728,"KRN",9.8,"NM","B","IBCU7",48)

"BLD",4728,"KRN",9.8,"NM","B","IBCU71",49)

"BLD",4728,"KRN",9.8,"NM","B","IBCU73",55)

"BLD",4728,"KRN",9.8,"NM","B","IBCU7A",56)

"BLD",4728,"KRN",9.8,"NM","B","IBCU7A1",64)

"BLD",4728,"KRN",9.8,"NM","B","IBCU7U",57)

"BLD",4728,"KRN",9.8,"NM","B","IBYPSA",50)

"BLD",4728,"KRN",9.8,"NM","B","IBYPSA1",51)

"BLD",4728,"KRN",9.8,"NM","B","IBYPSA2",52)

"BLD",4728,"KRN",19,0)
19
"BLD",4728,"KRN",19.1,0)
19.1
"BLD",4728,"KRN",101,0)
101
"BLD",4728,"KRN",409.61,0)
409.61
"BLD",4728,"KRN",409.61,"NM",0)
^9.68A^2^2
"BLD",4728,"KRN",409.61,"NM",1,0)
IBCR BILLING REGION^^0
"BLD",4728,"KRN",409.61,"NM",2,0)
IBCR CHARGE ITEM^^0
"BLD",4728,"KRN",409.61,"NM","B","IBCR BILLING REGION",1)

"BLD",4728,"KRN",409.61,"NM","B","IBCR CHARGE ITEM",2)

"BLD",4728,"KRN",771,0)
771
"BLD",4728,"KRN",870,0)
870
"BLD",4728,"KRN",8989.51,0)
8989.51
"BLD",4728,"KRN",8989.52,0)
8989.52
"BLD",4728,"KRN",8994,0)
8994
"BLD",4728,"KRN","B",.4,.4)

"BLD",4728,"KRN","B",.401,.401)

"BLD",4728,"KRN","B",.402,.402)

"BLD",4728,"KRN","B",.403,.403)

"BLD",4728,"KRN","B",.5,.5)

"BLD",4728,"KRN","B",.84,.84)

"BLD",4728,"KRN","B",3.6,3.6)

"BLD",4728,"KRN","B",3.8,3.8)

"BLD",4728,"KRN","B",9.2,9.2)

"BLD",4728,"KRN","B",9.8,9.8)

"BLD",4728,"KRN","B",19,19)

"BLD",4728,"KRN","B",19.1,19.1)

"BLD",4728,"KRN","B",101,101)

"BLD",4728,"KRN","B",409.61,409.61)

"BLD",4728,"KRN","B",771,771)

"BLD",4728,"KRN","B",870,870)

"BLD",4728,"KRN","B",8989.51,8989.51)

"BLD",4728,"KRN","B",8989.52,8989.52)

"BLD",4728,"KRN","B",8994,8994)

"BLD",4728,"QUES",0)
^9.62^^
"BLD",4728,"REQB",0)
^9.611^4^4
"BLD",4728,"REQB",1,0)
IB*2.0*169^1
"BLD",4728,"REQB",2,0)
IB*2.0*210^1
"BLD",4728,"REQB",3,0)
IB*2.0*211^1
"BLD",4728,"REQB",4,0)
IB*2.0*236^1
"BLD",4728,"REQB","B","IB*2.0*169",1)

"BLD",4728,"REQB","B","IB*2.0*210",2)

"BLD",4728,"REQB","B","IB*2.0*211",3)

"BLD",4728,"REQB","B","IB*2.0*236",4)

"FIA",363.2)
CHARGE ITEM
"FIA",363.2,0)
^IBA(363.2,
"FIA",363.2,0,0)
363.2V
"FIA",363.2,0,1)
y^n^p^^^^n^^n
"FIA",363.2,0,10)

"FIA",363.2,0,11)

"FIA",363.2,0,"RLRO")

"FIA",363.2,0,"VR")
2.0^IB
"FIA",363.2,363.2)
1
"FIA",363.2,363.2,.08)

"FIA",363.3)
BILLING RATE
"FIA",363.3,0)
^IBE(363.3,
"FIA",363.3,0,0)
363.3
"FIA",363.3,0,1)
y^n^p^^^^n^^n
"FIA",363.3,0,10)

"FIA",363.3,0,11)

"FIA",363.3,0,"RLRO")

"FIA",363.3,0,"VR")
2.0^IB
"FIA",363.3,363.3)
1
"FIA",363.3,363.3,.05)

"FIA",363.3,363.3,.06)

"FIA",363.31)
BILLING REGION
"FIA",363.31,0)
^IBE(363.31,
"FIA",363.31,0,0)
363.31
"FIA",363.31,0,1)
y^n^p^^^^n^^n
"FIA",363.31,0,10)

"FIA",363.31,0,11)

"FIA",363.31,0,"RLRO")

"FIA",363.31,0,"VR")
2.0^IB
"FIA",363.31,363.31)
1
"FIA",363.31,363.31,.03)

"FIA",399)
BILL/CLAIMS
"FIA",399,0)
^DGCR(399,
"FIA",399,0,0)
399I
"FIA",399,0,1)
y^n^p^^^^n^^n
"FIA",399,0,10)

"FIA",399,0,11)

"FIA",399,0,"RLRO")

"FIA",399,0,"VR")
2.0^IB
"FIA",399,399)
1
"FIA",399,399,48)

"FIA",399,399.0304)
1
"FIA",399,399.0304,15)

"FIA",399,399.0304,21)

"FIA",399,399.0304,22)

"FIA",399,399.048)
0
"FIA",399.1)
MCCR UTILITY
"FIA",399.1,0)
^DGCR(399.1,
"FIA",399.1,0,0)
399.1I
"FIA",399.1,0,1)
y^n^p^^^^n^^n
"FIA",399.1,0,10)

"FIA",399.1,0,11)

"FIA",399.1,0,"RLRO")

"FIA",399.1,0,"VR")
2.0^IB
"FIA",399.1,399.1)
1
"FIA",399.1,399.1,.25)

"INIT")
POST^IBYPSA
"KRN",.402,1074,-1)
0^1
"KRN",.402,1074,0)
IB SCREEN4^3040123.1028^@^399^^@^3040207
"KRN",.402,1074,"DIAB",1,1,399.04,0)
ALL
"KRN",.402,1074,"DIAB",1,1,399.048,0)
.01;"SNF/SA CARE"
"KRN",.402,1074,"DIAB",8,0,399,0)
48;"SNF/SA CARE"
"KRN",.402,1074,"DR",1,399)
S:IBDR20'["41" Y="@42";I $P($G(^DGCR(399,DA,0)),U,8) S Y="@411";159.5;@411;160;159;158;48SNF/SA CARE~;@42;S:IBDR20'["42" Y="@43";162;@43;@45;@46;S:IBDR20'["46" Y="@47";41;@47;S:IBDR20'["47" Y="@44";40;@44;S:IBDR20'["44" Y="@48";
"KRN",.402,1074,"DR",1,399,1)
S IBZ20=$P(^DGCR(399,DA,0),U,9);.09;D PRO^IBCSC4B;S IBASKCOD=1;@48;S:IBDR20'["48" Y="@49";I $P(^DGCR(399,DA,0),U,19)=2 S Y="@49";47;@49;
"KRN",.402,1074,"DR",2,399.04)
.01
"KRN",.402,1074,"DR",2,399.041)
.01;.02;I $P(^DGCR(399,DA(1),0),U,19)'=2 S Y="@454";.03;S Y="@455";@454;I '$P(^DGCR(399.1,+^DGCR(399,DA(1),"OC",DA,0),0),U,10) S Y="@455";.04;@455;
"KRN",.402,1074,"DR",2,399.047)
.01;.02;
"KRN",.402,1074,"DR",2,399.048)
.01SNF/SA CARE~;.02;.03;S DGRVRCAL=1;
"KRN",.402,1074,"ROU")
^IBXSC4
"KRN",.402,1074,"ROUOLD")
IBXSC4
"KRN",409.61,571,-1)
0^2
"KRN",409.61,571,0)
IBCR CHARGE ITEM^1^^80^5^20^1^1^Item^IBCR CHARGE ITEM MENU^Charge Items^1^^1
"KRN",409.61,571,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,571,"ARRAY")
 ^TMP("IBCRLI",$J)
"KRN",409.61,571,"COL",0)
^409.621^7^7
"KRN",409.61,571,"COL",1,0)
ITEM^3^30^Charge Item
"KRN",409.61,571,"COL",2,0)
UCHG^32^9^  Unit $
"KRN",409.61,571,"COL",3,0)
RVCD^53^5^Rv Cd
"KRN",409.61,571,"COL",4,0)
EFFDT^60^9^Effective
"KRN",409.61,571,"COL",5,0)
DS^69^1
"KRN",409.61,571,"COL",6,0)
INADT^71^8^Inactive
"KRN",409.61,571,"COL",7,0)
BCHG^42^9^  Base $
"KRN",409.61,571,"COL","B","BCHG",7)

"KRN",409.61,571,"COL","B","DS",5)

"KRN",409.61,571,"COL","B","EFFDT",4)

"KRN",409.61,571,"COL","B","INADT",6)

"KRN",409.61,571,"COL","B","ITEM",1)

"KRN",409.61,571,"COL","B","RVCD",3)

"KRN",409.61,571,"COL","B","UCHG",2)

"KRN",409.61,571,"FNL")
D EXIT^IBCRLI
"KRN",409.61,571,"HDR")
D HDR^IBCRLI
"KRN",409.61,571,"HLP")
D HELP^IBCRLI
"KRN",409.61,571,"INIT")
D INIT^IBCRLI
"KRN",409.61,574,-1)
0^1
"KRN",409.61,574,0)
IBCR BILLING REGION^1^^80^4^21^1^1^Region^IBCR BILLING REGION MENU^Billing Regions^1^^1
"KRN",409.61,574,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,574,"ARRAY")
 ^TMP("IBCRLG",$J)
"KRN",409.61,574,"COL",0)
^409.621^4^4
"KRN",409.61,574,"COL",1,0)
REGN^2^32^Region
"KRN",409.61,574,"COL",2,0)
ID^33^5
"KRN",409.61,574,"COL",3,0)
TYPE^39^12
"KRN",409.61,574,"COL",4,0)
DI^52^28
"KRN",409.61,574,"COL","B","DI",4)

"KRN",409.61,574,"COL","B","ID",2)

"KRN",409.61,574,"COL","B","REGN",1)

"KRN",409.61,574,"COL","B","TYPE",3)

"KRN",409.61,574,"FNL")
D EXIT^IBCRLG
"KRN",409.61,574,"HDR")
D HDR^IBCRLG
"KRN",409.61,574,"HLP")
D HELP^IBCRLG
"KRN",409.61,574,"INIT")
D INIT^IBCRLG
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",17,409.61)
409.61;17;1;;;;;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^2^1
"PKG",200,20,2,0)
2^^IBAXDR
"PKG",200,20,2,1)

"PKG",200,20,"B",2,2)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321
"PKG",200,22,1,"PAH",1,0)
245^3040208
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3040208
"PKG",200,22,1,"PAH",1,1,1,0)
Reasonable Charges version 2.0.  Charge effective date 12/19/03.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
61
"RTN","IBCBB2")
0^1^B32248575
"RTN","IBCBB2",1,0)
IBCBB2 ;ALB/ARH - CONTINUATION OF EDIT CHECKS ROUTINE (HCFA 1500) ; 04/14/92
"RTN","IBCBB2",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210,245**;21-MAR-94
"RTN","IBCBB2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCBB2",4,0)
 ;
"RTN","IBCBB2",5,0)
 ;MAP TO DGCRBB2
"RTN","IBCBB2",6,0)
 ;
"RTN","IBCBB2",7,0)
EN ;
"RTN","IBCBB2",8,0)
 N IBI,IBJ,IBN,IBY,IBDX,IBDXO,IBDXL,IBCPT,IBCPTL,IBOLAB,Z,IBXSAVE,IBLOC,IBTX,IBPS,IBSP
"RTN","IBCBB2",9,0)
 I '$D(IBER) S IBER=""
"RTN","IBCBB2",10,0)
 S IBTX=$$TXMT^IBCEF4(IBIFN)
"RTN","IBCBB2",11,0)
 ;
"RTN","IBCBB2",12,0)
 ; Warn if no group provider id (MCRWNR is a default)
"RTN","IBCBB2",13,0)
 I '$$WNRBILL^IBEFUNC(IBIFN) D
"RTN","IBCBB2",14,0)
 . S Z=$P($G(^DGCR(399,IBIFN,"M1")),U,$$COBN^IBCEF(IBIFN)+1)
"RTN","IBCBB2",15,0)
 . I Z="" D WARN^IBCBB11("No group prov # for the current ins co - site tax id will be used")
"RTN","IBCBB2",16,0)
 ; Max 4 modifiers per CPT code allowed before warning
"RTN","IBCBB2",17,0)
 K IBXDATA
"RTN","IBCBB2",18,0)
 D F^IBCEF("N-HCFA 1500 MODIFIERS",,,IBIFN) ;Get modifiers
"RTN","IBCBB2",19,0)
 ;
"RTN","IBCBB2",20,0)
 S Z=0 F  S Z=$O(IBZPRC92(Z)) Q:'Z  I $P(IBZPRC92(Z),U)["ICPT(",$L($P(IBZPRC92(Z),U,15),",")>4 S IBI="Proc "_$$PRCD^IBCEF1($P(IBZPRC92(Z),U))_" has > 4 modifiers - only first 4 will be used" D WARN^IBCBB11(IBI)
"RTN","IBCBB2",21,0)
 ; ICD-9 diagnosis, at least 1 required
"RTN","IBCBB2",22,0)
 D SET^IBCSC4D(IBIFN,.IBDX,.IBDXO) I '$P(IBDX,U,2) S IBER=IBER_"IB071;"
"RTN","IBCBB2",23,0)
 S IBI=$O(IBDXO(0))
"RTN","IBCBB2",24,0)
 I IBI,$$INPAT^IBCEF(IBIFN,1),$E($$ICD9^IBACSV(+$P(IBDXO(IBI),U)))="V" S Z="Principal Dx V-code may not be valid" D WARN^IBCBB11(Z)
"RTN","IBCBB2",25,0)
 ;
"RTN","IBCBB2",26,0)
 ; CPT procs must be associated with a dx, must have a defined provider
"RTN","IBCBB2",27,0)
 S (IBLOC,IBN,IBI,IBY)=0 F  S IBI=$O(^DGCR(399,IBIFN,"CP",IBI)) Q:IBI'?1N.N  S IBCPT=^(IBI,0) D  I +IBY S IBN=1
"RTN","IBCBB2",28,0)
 . ;I IBER'["IB089",$P(IBCPT,U,10)=7,$S('$P(IBCPT,U,16):1,1:$P(IBCPT,U,16)#15) S IBER=IBER_"IB089;" ;anesthesia needs minutes in multiple of 15
"RTN","IBCBB2",29,0)
 . I 'IBLOC,$P(IBCPT,U,15)'="",IBTX S Z="At least 1 charge has local box 24K data that will not be transmitted - " S IBLOC=1 D WARN^IBCBB11(Z) S Z="  This data will only print locally" D WARN^IBCBB11(Z)
"RTN","IBCBB2",30,0)
 . I $P(IBCPT,U)'["ICPT(" S:IBER'["IB092" IBER=IBER_"IB092;" Q
"RTN","IBCBB2",31,0)
 . S IBY=1 F IBJ=11:1:14 I +$P(IBCPT,"^",IBJ) S IBCPTL(+$P(IBCPT,"^",IBJ))="",IBY=0
"RTN","IBCBB2",32,0)
 . ;I '$P(IBCPT,U,18) S:IBER'["IB094;" IBER=IBER_"IB094;" Q
"RTN","IBCBB2",33,0)
 I +IBN S IBER=IBER_"IB072;"
"RTN","IBCBB2",34,0)
 ;
"RTN","IBCBB2",35,0)
 I '$$OCC10(IBIFN,.IBDX,2) S IBER=IBER_"IB093;"
"RTN","IBCBB2",36,0)
 ; HCFA 1500: dxs associated with procs must be defined dxs for the bill
"RTN","IBCBB2",37,0)
 S IBI=0 F  S IBI=$O(IBDX(IBI))  Q:'IBI  S IBDXL(IBDX(IBI))=""
"RTN","IBCBB2",38,0)
 S (IBN,IBI)=0 F  S IBI=$O(IBCPTL(IBI)) Q:'IBI  I '$D(IBDXL(IBI)) S IBN=1 Q
"RTN","IBCBB2",39,0)
 I +IBN S IBER=IBER_"IB073;"
"RTN","IBCBB2",40,0)
 ;
"RTN","IBCBB2",41,0)
 I $$WNRBILL^IBEFUNC(IBIFN),$$MRATYPE^IBEFUNC(IBIFN)'="B" D WARN^IBCBB11("MEDICARE policy assigned to this HCFA-1500 bill is not a PART B policy")
"RTN","IBCBB2",42,0)
 ; Only one occurrence code can be present for event date for box 14
"RTN","IBCBB2",43,0)
 S Z=$$EVENT^IBCF22(IBIFN,.IBXSAVE,.IBI)
"RTN","IBCBB2",44,0)
 I IBI S IBER=IBER_"IB099;"
"RTN","IBCBB2",45,0)
 ; unit/charge limits
"RTN","IBCBB2",46,0)
 K IBXDATA
"RTN","IBCBB2",47,0)
 D F^IBCEF("N-HCFA 1500 SERVICES (PRINT)",,,IBIFN) ;Get charge lines
"RTN","IBCBB2",48,0)
 S IBOLAB=0,IBPS="",IBSP=$$BILLSPEC^IBCEU3(IBIFN)
"RTN","IBCBB2",49,0)
 S IBI=0 F  S IBI=$O(IBXDATA(IBI)) Q:'IBI  D  Q:IBER["IB310"!(IBER["IB311")
"RTN","IBCBB2",50,0)
 . I $P(IBNDU2,U,11) D
"RTN","IBCBB2",51,0)
 .. I '$P(IBXDATA(IBI),U,11) S IBPS=IBPS_$S(IBPS'="":",",1:"")_IBI Q
"RTN","IBCBB2",52,0)
 .. I $P(IBXDATA(IBI),U,14),"24"'[$P(IBNDU2,U,11) D WARN^IBCBB11("Outside lab charges exist on a non-lab NON-VA bill")
"RTN","IBCBB2",53,0)
 . I '$P(IBNDU2,U,11),$P(IBXDATA(IBI),U,11) D WARN^IBCBB11("Purchased service amounts are invalid unless this is a NON-VA bill")
"RTN","IBCBB2",54,0)
 . I $D(IBXDATA(IBI,"A")) S IBER=IBER_"IB310;" Q
"RTN","IBCBB2",55,0)
 . I $D(IBXDATA(IBI,"ARX")),IBER'["311;" S IBER=IBER_"IB311;" Q
"RTN","IBCBB2",56,0)
 . I $P(IBXDATA(IBI),U,14) S IBOLAB=IBOLAB+1
"RTN","IBCBB2",57,0)
 . ; Place of service required
"RTN","IBCBB2",58,0)
 . I $G(IBER)'["IB314;",$P(IBXDATA(IBI),U,3)="" S IBER=IBER_"IB314;"
"RTN","IBCBB2",59,0)
 . ; Type of service required
"RTN","IBCBB2",60,0)
 . I $G(IBER)'["IB313;",$P(IBXDATA(IBI),U,4)="" S IBER=IBER_"IB313;"
"RTN","IBCBB2",61,0)
 . ; 43 and 53 are invalid types of service
"RTN","IBCBB2",62,0)
 . I $G(IBER)'["IB110;",($P(IBXDATA(IBI),U,4)=43!($P(IBXDATA(IBI),U,4)=53)) S IBER=IBER_"IB110;"
"RTN","IBCBB2",63,0)
 . ; Units for the line item must be less than 100/1000
"RTN","IBCBB2",64,0)
 . I IBER'["IB088",$P(IBXDATA(IBI),U,9)'<100 D
"RTN","IBCBB2",65,0)
 .. I $P(IBXDATA(IBI),U,4)'=7 S IBER=IBER_"IB088;" Q
"RTN","IBCBB2",66,0)
 .. I $P(IBXDATA(IBI),U,9)'<1000 S IBER=IBER_"IB088;"
"RTN","IBCBB2",67,0)
 . ; Line item total charge must be less than $10,000.00, greater than 0
"RTN","IBCBB2",68,0)
 . I IBER'["IB090",$P(IBXDATA(IBI),U,9)'<10000 S IBER=IBER_"IB090;"
"RTN","IBCBB2",69,0)
 . I '($P(IBXDATA(IBI),U,9)*$P(IBXDATA(IBI),U,8)),$$COBN^IBCEF(IBIFN)'>1 S Z="Procedure "_$P(IBXDATA(IBI),U,5)_" has a 0-charge and will not be transmitted" D WARN^IBCBB11(Z)
"RTN","IBCBB2",70,0)
 . I $G(IBXDATA(IBI,"AUX"))'="",'$G(IBSP(1)),+IBSP'=35,$TR($P(IBXDATA(IBI,"AUX"),U,4,6)_$P(IBXDATA(IBI,"AUX"),U,2),U)'="" S IBSP(1)=1
"RTN","IBCBB2",71,0)
 I $G(IBSP(1)) D WARN^IBCBB11("Chiropractic service details only valid if provider specialty is '35'")
"RTN","IBCBB2",72,0)
 I IBPS'="" D WARN^IBCBB11("NON-VA facility indicated, but no purchased service charge on line item"_$S(IBPS[",":"s",1:"")_" #"_IBPS)
"RTN","IBCBB2",73,0)
 I $P(IBNDU2,U,11),$P(IBNDU2,U,11)=4,IBOLAB>1 D WARN^IBCBB11("For proper payment, you must bill each outside lab on a separate claim form")
"RTN","IBCBB2",74,0)
 K IBXDATA
"RTN","IBCBB2",75,0)
 ;
"RTN","IBCBB2",76,0)
 Q
"RTN","IBCBB2",77,0)
 ;
"RTN","IBCBB2",78,0)
OCC10(IBIFN,IBARR,IBFT) ; Determine if occurrence code 10 exists for pregnancy dx
"RTN","IBCBB2",79,0)
 ; IBARR=array subscripted by ien of DX code if IBFT=2 (HCFA form)
"RTN","IBCBB2",80,0)
 ;                         by seq # and = ien of DX code if IBFT'=2
"RTN","IBCBB2",81,0)
 ;
"RTN","IBCBB2",82,0)
 N IBN,IBI,IBXDATA,IBXSAVE,IBDX,Z
"RTN","IBCBB2",83,0)
 S IBN=1
"RTN","IBCBB2",84,0)
 ;
"RTN","IBCBB2",85,0)
 I '$D(^TMP($J,"LMD")) D
"RTN","IBCBB2",86,0)
 . D F^IBCEF("N-OCCURRENCE CODES",,,IBIFN)
"RTN","IBCBB2",87,0)
 . S ^TMP($J,"LMD")=""
"RTN","IBCBB2",88,0)
 . S Z=0 F  S Z=$O(IBXSAVE("OCC",Z)) Q:'Z  I +IBXSAVE("OCC",Z)=10 S ^TMP($J,"LMD")=1 Q
"RTN","IBCBB2",89,0)
 ;
"RTN","IBCBB2",90,0)
 I '^TMP($J,"LMD") S IBI=0 F  S IBI=$O(IBARR(IBI))  Q:'IBI  D  Q:'IBN
"RTN","IBCBB2",91,0)
 . N Z,Z1
"RTN","IBCBB2",92,0)
 . ; If a pregnancy DX exists, must be an occurrence code 10 for LMP date
"RTN","IBCBB2",93,0)
 . ; dx ranges are: V22*-V24*, V27*-V28*, 630*-677*
"RTN","IBCBB2",94,0)
 . S IBDX=$S($G(IBFT)'=2:+IBARR(IBI),1:IBI)
"RTN","IBCBB2",95,0)
 . S Z=$E($P($$ICD9^IBACSV(IBDX),U),1,3),Z1=$E(Z,2,3)
"RTN","IBCBB2",96,0)
 . I $S(Z'<630&(Z<678):1,$E(Z)="V":$S(Z1'<22&(Z1<25):1,1:Z1'<27&(Z1<28)),1:0) S IBN=0 ;Pregnancy Dx exists
"RTN","IBCBB2",97,0)
 ;
"RTN","IBCBB2",98,0)
OCC10Q K ^TMP($J,"LMD")
"RTN","IBCBB2",99,0)
 Q IBN
"RTN","IBCBB2",100,0)
 ;
"RTN","IBCCC2")
0^53^B54730874
"RTN","IBCCC2",1,0)
IBCCC2 ;ALB/AAS - CANCEL AND CLONE A BILL - CONTINUED ; 6/6/03 9:56am
"RTN","IBCCC2",2,0)
 ;;2.0;INTEGRATED BILLING;**80,106,124,138,51,151,137,161,182,211,245**;21-MAR-94
"RTN","IBCCC2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCCC2",4,0)
 ;
"RTN","IBCCC2",5,0)
 ;MAP TO DGCRCC2
"RTN","IBCCC2",6,0)
 ;
"RTN","IBCCC2",7,0)
 ;STEP 5 - get remainder of data to move and store in MCCR then x-ref
"RTN","IBCCC2",8,0)
 ;STEP 6 - go to screens, come out to IBB1 or something like that
"RTN","IBCCC2",9,0)
 ;
"RTN","IBCCC2",10,0)
STEP5 S IBIFN1=$P(^DGCR(399,IBIFN,0),"^",15) G END:$S(IBIFN1="":1,'$D(^DGCR(399,IBIFN1,0)):1,1:0)
"RTN","IBCCC2",11,0)
 ;
"RTN","IBCCC2",12,0)
 ;move pure data nodes
"RTN","IBCCC2",13,0)
 F I="I1","I2","I3","M1" I $D(^DGCR(399,IBIFN1,I)) S ^DGCR(399,IBIFN,I)=^DGCR(399,IBIFN1,I)
"RTN","IBCCC2",14,0)
 ;
"RTN","IBCCC2",15,0)
 ;move top level data node. ;Do not move 'TX' node
"RTN","IBCCC2",16,0)
 F I="U","U1","U2","UF2","UF3","UF31","C","M" I $D(^DGCR(399,IBIFN1,I)) S IBND(I)=^(I) D @I
"RTN","IBCCC2",17,0)
 ;
"RTN","IBCCC2",18,0)
 ;move multiple level data
"RTN","IBCCC2",19,0)
 F I="CC","OC","OP","OT","RC","CP","CV","PRV" I $D(^DGCR(399,IBIFN1,I,0)) D @I
"RTN","IBCCC2",20,0)
 ;
"RTN","IBCCC2",21,0)
 D FTPRV^IBCEU5(IBIFN) ; Ask change prov type if form type not the same
"RTN","IBCCC2",22,0)
 D COBCHG(IBIFN,,.IBCOB)
"RTN","IBCCC2",23,0)
 ;
"RTN","IBCCC2",24,0)
 D ^IBCCC3 ; copy table files (362.3)
"RTN","IBCCC2",25,0)
 ;
"RTN","IBCCC2",26,0)
 S I=$G(^DGCR(399,IBIFN1,0)) I $P(I,U,13)=7,$P(I,U,20)=1 D COPYB^IBCDC(IBIFN1,IBIFN) ; update auto bill files
"RTN","IBCCC2",27,0)
 D PRIOR(IBIFN) ; add new bill to previous bills in series, primary/secondary
"RTN","IBCCC2",28,0)
 I +$G(IBCTCOPY) N IBAUTO S IBAUTO=1 D PROC^IBCU7A(IBIFN),BILL^IBCRBC(IBIFN),CPTMOD26^IBCU73(IBIFN) D RECALL^DILFD(399,IBIFN_",",DUZ) G END
"RTN","IBCCC2",29,0)
 ;
"RTN","IBCCC2",30,0)
STEP6 N IBGOEND
"RTN","IBCCC2",31,0)
 I '$G(IBCE("EDI"))!$G(IBCE("EDI","NEW")),'$G(IBCEAUTO) D IBSCEDT G END:$G(IBGOEND)
"RTN","IBCCC2",32,0)
 ;
"RTN","IBCCC2",33,0)
 ;
"RTN","IBCCC2",34,0)
END K DFN,IB,IBA,IBA2,IBAD,IBADD1,IBBNO,IBCAN,IBCCC,IBDA,IBDPT,IBDR,IBDT,IBI,IBI1,IBIDS,IBIFN,IBIFN1,IBND,IBQUIT,IBU,IBUN,IBARST,IBCOB,IBCNCOPY,IBCBCOPY
"RTN","IBCCC2",35,0)
 K IBV,IBV1,IBW,IBWW,IBYN,IBZZ,PRCASV,PRCAERCD,PRCAERR,PRCASVC,PRCAT,IBBT,IBCH,IBNDS,IBOA,IBREV,IBX,DGXRF1,VAEL,VAERR,IBAC,IBCCC,IBDD1,IBIN,DGREV,DGREV00,DGREVHDR,IBCHK
"RTN","IBCCC2",36,0)
 K IBBS,IBLS,DGPCM,IBIP,IBND0,IBNDU,IBO,IBPTF,IBST,IBUC,IBDD,D,%,%DT,DIC,VA,VADM,X,X1,X2,X3,X4,Y,I,J,K,DGRVRCAL,DDH,DGACTDT,DGAMNT,DGBR,DGBRN,DGBSI,DGBSLOS,IBA1,IBOD,IBINS,IBN,IBPROC,DGFUNC,DGIFN
"RTN","IBCCC2",37,0)
 Q
"RTN","IBCCC2",38,0)
 ;
"RTN","IBCCC2",39,0)
 ;
"RTN","IBCCC2",40,0)
IBSCEDT ; call the IB bill edit screens and validate the data
"RTN","IBCCC2",41,0)
 N IBV,IBPAR,IBAC,IBHV,IBH,IBCIREDT
"RTN","IBCCC2",42,0)
 D RECALL^DILFD(399,IBIFN_",",DUZ)
"RTN","IBCCC2",43,0)
ST1 S IBV=0 D ^IBCSCU,^IBCSC1 I $G(IBPOPOUT) S IBGOEND=1 G IBSCX
"RTN","IBCCC2",44,0)
 S IBAC=1
"RTN","IBCCC2",45,0)
 D ^IBCB1
"RTN","IBCCC2",46,0)
 I $G(IBCIREDT) G ST1
"RTN","IBCCC2",47,0)
IBSCX ;
"RTN","IBCCC2",48,0)
 Q
"RTN","IBCCC2",49,0)
 ;
"RTN","IBCCC2",50,0)
 ;
"RTN","IBCCC2",51,0)
U F J=3,4,6:1:17,20 I $P(IBND("U"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U"),"^",J)=$P(IBND("U"),"^",J)
"RTN","IBCCC2",52,0)
 Q
"RTN","IBCCC2",53,0)
U1 F J=1:1:9,13,14 I $P(IBND("U1"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U1"),"^",J)=$P(IBND("U1"),"^",J)
"RTN","IBCCC2",54,0)
 Q
"RTN","IBCCC2",55,0)
U2 F J=1:1:19 I $P(IBND("U2"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U2"),"^",J)=$P(IBND("U2"),"^",J)
"RTN","IBCCC2",56,0)
 Q
"RTN","IBCCC2",57,0)
UF2 F J=1 I $P(IBND("UF2"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF2"),"^",J)=$P(IBND("UF2"),"^",J)
"RTN","IBCCC2",58,0)
 Q
"RTN","IBCCC2",59,0)
UF3 F J=1:1:7 I $P(IBND("UF3"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF3"),"^",J)=$P(IBND("UF3"),"^",J)
"RTN","IBCCC2",60,0)
 Q
"RTN","IBCCC2",61,0)
UF31 F J=1:1:3 I $P(IBND("UF31"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF31"),"^",J)=$P(IBND("UF31"),"^",J)
"RTN","IBCCC2",62,0)
 Q
"RTN","IBCCC2",63,0)
C F J=10 I $P(IBND("C"),"^",J)]"" S $P(^DGCR(399,IBIFN,"C"),"^",J)=$P(IBND("C"),"^",J)
"RTN","IBCCC2",64,0)
 I '$D(^DGCR(399,IBIFN1,"CP")) D CP1
"RTN","IBCCC2",65,0)
 Q
"RTN","IBCCC2",66,0)
M F J=1:1:14 I $P(IBND("M"),"^",J)]"" S $P(^DGCR(399,IBIFN,"M"),"^",J)=$P(IBND("M"),"^",J)
"RTN","IBCCC2",67,0)
 Q
"RTN","IBCCC2",68,0)
CC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",69,0)
 S IBDD=399.04 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",70,0)
OP S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",71,0)
 S IBDD=399.043 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",72,0)
 Q
"RTN","IBCCC2",73,0)
OC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",74,0)
 S IBDD=399.041 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",75,0)
 Q
"RTN","IBCCC2",76,0)
OT S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",77,0)
 S IBDD=399.048 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",78,0)
 Q
"RTN","IBCCC2",79,0)
CV ; Don't copy value codes from inpatient inst to inpatient prof bills
"RTN","IBCCC2",80,0)
 I $$FT^IBCEF(IBIFN1)'=2,$$FT^IBCEF(IBIFN)=2 Q
"RTN","IBCCC2",81,0)
 S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",82,0)
 S IBDD=399.047 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",83,0)
 Q
"RTN","IBCCC2",84,0)
RC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",85,0)
 S IBDD=399.042 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S IBND("RC")=^(0) F K=1:1:15 S $P(^DGCR(399,IBIFN,I,J,0),"^",K)=$P(IBND("RC"),"^",K),X=$P(IBND("RC"),"^",K)
"RTN","IBCCC2",86,0)
 Q
"RTN","IBCCC2",87,0)
CP S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",88,0)
 I +$G(IBNOCPT) Q
"RTN","IBCCC2",89,0)
 S IBDD=399.0304 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S IBND("CP")=^(0),IBND("CP-AUX")=$G(^("AUX")) D
"RTN","IBCCC2",90,0)
 . F K=1:1:7,9:1:14,16:1:22 S $P(^DGCR(399,IBIFN,I,J,0),"^",K)=$P(IBND("CP"),"^",K)
"RTN","IBCCC2",91,0)
 . I IBND("CP-AUX")'="" F K=1:1:8 S $P(^DGCR(399,IBIFN,I,J,"AUX"),"^",K)=$P(IBND("CP-AUX"),"^",K)
"RTN","IBCCC2",92,0)
 . I $D(^DGCR(399,IBIFN1,I,J,"MOD",0)) S ^DGCR(399,IBIFN,I,J,"MOD",0)=^DGCR(399,IBIFN1,I,J,"MOD",0) D
"RTN","IBCCC2",93,0)
 .. S K=0 F  S K=$O(^DGCR(399,IBIFN1,I,J,"MOD",K)) Q:'K  D
"RTN","IBCCC2",94,0)
 ... I $G(IBNOTC),$P($$MOD^ICPTMOD(+$P($G(^DGCR(399,IBIFN1,I,J,"MOD",K,0)),U,2),"I"),U,2)="TC" Q  ; Don't copy TC modifier from inst to prof bill
"RTN","IBCCC2",95,0)
 ... S ^DGCR(399,IBIFN,I,J,"MOD",K,0)=^DGCR(399,IBIFN1,I,J,"MOD",K,0)
"RTN","IBCCC2",96,0)
CP1 S IBCOD=$P($G(^DGCR(399,IBIFN,0)),"^",9) Q:IBCOD=""!('$D(^DGCR(399,IBIFN1,"C")))
"RTN","IBCCC2",97,0)
 I IBCOD=9 F DGI=4,5,6 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICD0(",DGPROCDT=$P(^("C"),"^",DGI+7) D FILE
"RTN","IBCCC2",98,0)
 I IBCOD=4 F DGI=1,2,3 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICPT(",DGPROCDT=$P(^("C"),"^",DGI+10) D FILE
"RTN","IBCCC2",99,0)
 I IBCOD=5 F DGI=7,8,9 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICPT(",DGPROCDT=$P(^("C"),"^",DGI+4) D FILE
"RTN","IBCCC2",100,0)
 Q
"RTN","IBCCC2",101,0)
 ;
"RTN","IBCCC2",102,0)
PRV S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",103,0)
 N Z,Z0
"RTN","IBCCC2",104,0)
 S Z=$P($G(^DGCR(399,IBIFN,0)),U,19),Z0=$P($G(^DGCR(399,IBIFN1,0)),U,19)
"RTN","IBCCC2",105,0)
 S IBDD=399.0222 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) D
"RTN","IBCCC2",106,0)
 . S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",107,0)
 . I Z'=Z0,$S(X=3:Z0=3,X=4:Z0=2,1:0) S $P(^DGCR(399,IBIFN,I,J,0),U)=(Z0+1)
"RTN","IBCCC2",108,0)
 Q
"RTN","IBCCC2",109,0)
 ;
"RTN","IBCCC2",110,0)
COB S J=0 F  S J=$O(IBCOB(I,J)) Q:'J  S $P(^DGCR(399,IBIFN,I),U,J)=IBCOB(I,J)
"RTN","IBCCC2",111,0)
 Q
"RTN","IBCCC2",112,0)
 ;
"RTN","IBCCC2",113,0)
FILE N DIC,DIE,DR,DA,X,Y,DLAYGO,DD,DO
"RTN","IBCCC2",114,0)
 I '$D(^DGCR(399,IBIFN,"CP",0)) S DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCCC2",115,0)
 S DIC(0)="L",DLAYGO=399,DA(1)=IBIFN,DIC="^DGCR(399,"_DA(1)_",""CP""," Q:X=""  D FILE^DICN K DO,DD Q:+Y<1  S DA=+Y
"RTN","IBCCC2",116,0)
 S DIE="^DGCR(399,"_DA(1)_",""CP"",",DR="1///"_DGPROCDT D ^DIE
"RTN","IBCCC2",117,0)
 K DGPROCDT
"RTN","IBCCC2",118,0)
 Q
"RTN","IBCCC2",119,0)
 ;
"RTN","IBCCC2",120,0)
INDEX ;index entire file (set logic)
"RTN","IBCCC2",121,0)
 S DIK="^DGCR(399,",DA=IBIFN D IX1^DIK K DA,DIK
"RTN","IBCCC2",122,0)
 Q
"RTN","IBCCC2",123,0)
 ;
"RTN","IBCCC2",124,0)
PRIOR(IBIFN) ; set Secondary/Tertiary Bill #s on prior bills, if the bill is cancelled remove it from prior bills
"RTN","IBCCC2",125,0)
 N IBSEQ,IBSEQN,IBM1,I,IBIFN1
"RTN","IBCCC2",126,0)
 S IBSEQ=$$COB^IBCEF(IBIFN)
"RTN","IBCCC2",127,0)
 S IBSEQN=$S(IBSEQ="S":6,IBSEQ="T":7,1:"") Q:'IBSEQN
"RTN","IBCCC2",128,0)
 ;
"RTN","IBCCC2",129,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1")) I +$P(^DGCR(399,IBIFN,0),U,13)=7 S IBIFN=""
"RTN","IBCCC2",130,0)
 F I=5,6 I I<IBSEQN  S IBIFN1=+$P(IBM1,U,I) I +IBIFN1,$D(^DGCR(399,+IBIFN1,0)) S $P(^DGCR(399,IBIFN1,"M1"),U,IBSEQN)=IBIFN
"RTN","IBCCC2",131,0)
 Q
"RTN","IBCCC2",132,0)
 ;
"RTN","IBCCC2",133,0)
COBCHG(IBIFN,IBINS,IBCOB) ; Make changes for a new COB payer for bill
"RTN","IBCCC2",134,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCCC2",135,0)
 ; IBINS = ien of bill's current insurance (optional)
"RTN","IBCCC2",136,0)
 ; IBCOB = array subscripted by node,piece of COB data field change
"RTN","IBCCC2",137,0)
 ;
"RTN","IBCCC2",138,0)
 N I,IBFRMTYP
"RTN","IBCCC2",139,0)
 ; Subtract the Prior Payments from the bill's Offset (these are re-added by triggers)
"RTN","IBCCC2",140,0)
 F I=4,5,6  S $P(^DGCR(399,IBIFN,"U1"),U,2)=$P($G(^DGCR(399,IBIFN,"U1")),U,2)-$P($G(^DGCR(399,IBIFN,"U2")),U,I)
"RTN","IBCCC2",141,0)
 ;
"RTN","IBCCC2",142,0)
 I $G(IBINS),$$MCRWNR^IBEFUNC(IBINS) D
"RTN","IBCCC2",143,0)
 . ;MCRWNR is current insurance ... move payer only
"RTN","IBCCC2",144,0)
 . N IBCOBN,IBX
"RTN","IBCCC2",145,0)
 . S IBCOBN=$$COBN^IBCEF(IBIFN)
"RTN","IBCCC2",146,0)
 . S IBCOB(0,15)=""
"RTN","IBCCC2",147,0)
 . S IBCOB(0,21)=$P("S^T^",U,IBCOBN)
"RTN","IBCCC2",148,0)
 . S IBCOB("M1",IBCOBN+4)=IBIFN
"RTN","IBCCC2",149,0)
 . S IBCOB("TX",1)="",IBCOB("TX",2)="",IBCOB("TX",6)=""
"RTN","IBCCC2",150,0)
 . S IBX=$$REQMRA^IBEFUNC(IBIFN)
"RTN","IBCCC2",151,0)
 . I IBX=0 S IBCOB("TX",5)=0
"RTN","IBCCC2",152,0)
 . I IBX["R" S IBCOB("TX",5)="A"
"RTN","IBCCC2",153,0)
 . I IBX=1 D
"RTN","IBCCC2",154,0)
 .. N Z,Z0,IBOK
"RTN","IBCCC2",155,0)
 .. S (IBOK,Z)=0
"RTN","IBCCC2",156,0)
 .. F  S Z=$O(^IBM(361.1,"ABS",IBIFN,IBCOBN,Z)) Q:'Z  D  Q:IBOK
"RTN","IBCCC2",157,0)
 ... S Z0=$G(^IBM(361.1,Z,0))
"RTN","IBCCC2",158,0)
 ... I "23"[$P(Z0,U,16) S IBOK=1
"RTN","IBCCC2",159,0)
 .. I 'IBOK S IBCOB("TX",5)=$E("AC",IBOK+1)
"RTN","IBCCC2",160,0)
 . D PRIOR(IBIFN)
"RTN","IBCCC2",161,0)
 ;
"RTN","IBCCC2",162,0)
 ;reset fields for next Sequence Payer
"RTN","IBCCC2",163,0)
 F I=0,"M1","U2","TX" I $D(IBCOB(I)) D COB
"RTN","IBCCC2",164,0)
 ;
"RTN","IBCCC2",165,0)
 ; IB*2.0*211
"RTN","IBCCC2",166,0)
 ; save off Form Type
"RTN","IBCCC2",167,0)
 S IBFRMTYP=$P($G(^DGCR(399,IBIFN,0)),U,19)
"RTN","IBCCC2",168,0)
 ; fire xrefs set logic
"RTN","IBCCC2",169,0)
 D INDEX
"RTN","IBCCC2",170,0)
 ; don't restore form type if creating HCFA bill 
"RTN","IBCCC2",171,0)
 ; from CTCOPY1^IBCCCB 
"RTN","IBCCC2",172,0)
 I $G(IBCTCOPY)=1 K IBCOB("TX") Q
"RTN","IBCCC2",173,0)
 ; restore Form Type if changed
"RTN","IBCCC2",174,0)
 I IBFRMTYP'=$P($G(^DGCR(399,IBIFN,0)),U,19) N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR=".19////"_IBFRMTYP D ^DIE
"RTN","IBCCC2",175,0)
 ;
"RTN","IBCCC2",176,0)
 K IBCOB("TX")
"RTN","IBCCC2",177,0)
 Q
"RTN","IBCCC2",178,0)
 ;
"RTN","IBCCPT")
0^2^B56500610
"RTN","IBCCPT",1,0)
IBCCPT ;ALB/LDB/AAS - MCCR OUTPATIENT VISITS LISTING CONT. ; 29 MAY 90
"RTN","IBCCPT",2,0)
 ;;2.0;INTEGRATED BILLING;**55,62,52,91,106,125,51,148,174,182,245**;21-MAR-94
"RTN","IBCCPT",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCCPT",4,0)
 ;
"RTN","IBCCPT",5,0)
 ;MAP TO DGCRCPT
"RTN","IBCCPT",6,0)
 ;
"RTN","IBCCPT",7,0)
EN1(IBQUERY,IBHLP) ;
"RTN","IBCCPT",8,0)
 K DIR
"RTN","IBCCPT",9,0)
EN D:$D(DIR) HLP W @IOF S DGU=0 K DGCPT,^UTILITY($J) D VST(.IBQUERY)
"RTN","IBCCPT",10,0)
 D CHDR,WRNO
"RTN","IBCCPT",11,0)
 S (DGCNT,DGCNT1)=0 F  S DGCNT=$O(^UTILITY($J,"CPT-CNT",DGCNT)) Q:'DGCNT  S DGNOD=^(DGCNT),DGCPT=+DGNOD,DGDAT=$P(DGNOD,"^",2),DGBIL=$P(DGNOD,"^",3),DGASC=$P(DGNOD,"^",4),DGDIV=$P(DGNOD,"^",5),DGCNT1=DGCNT1+1 D CPRT I DGU="^" S DGCNT=DGCNT-1 Q
"RTN","IBCCPT",12,0)
 I DGU'="^" F Y=$Y:1:IOSL-6 W !
"RTN","IBCCPT",13,0)
OK1 K Y Q:'$D(^UTILITY($J,"CPT-CNT"))!($D(DIR))!($G(IBHLP))
"RTN","IBCCPT",14,0)
OK S DIR(0)="LAO^1:"_DGCNT1_"^K:X[""."" X",DIR("?")="^N DIR D EN1^IBCCPT(.IBQUERY,1)",DIR("A")="SELECT CPT CODE(S) TO INCLUDE IN THIS BILL: "
"RTN","IBCCPT",15,0)
 D ^DIR K DIR I 'Y D Q1^IBCOPV1 Q
"RTN","IBCCPT",16,0)
 S IBFT=+$P(^DGCR(399,IBIFN,0),"^",19)
"RTN","IBCCPT",17,0)
OK2 W !,"YOU HAVE SELECTED CPT CODE(S) NUMBERED-",$E(Y,1,$L(Y)-1),!,"IS THIS CORRECT" S %=1 D YN^DICN I %=-1 S IBOUT=1 D Q^IBCOPV1 Q
"RTN","IBCCPT",18,0)
 I +Y,'% W !,"Respond 'Y'es to include these codes in the bill.",!,"Respond 'N'o to reselect." G OK2
"RTN","IBCCPT",19,0)
 I +Y,%=2 G OK
"RTN","IBCCPT",20,0)
 ;
"RTN","IBCCPT",21,0)
FILE S DGCPT1=Y,(DGCNT,DGCNT2)=0
"RTN","IBCCPT",22,0)
 S DIE="^DGCR(399,",DA=IBIFN,DR=".09///5" D ^DIE K DR,DA,DIE
"RTN","IBCCPT",23,0)
 F I9=1:1 S I1=$P(DGCPT1,",",I9) Q:'I1  I $D(^UTILITY($J,"CPT-CNT",I1)) S DGNOD=^(I1) D FILE1
"RTN","IBCCPT",24,0)
 D Q1^IBCOPV1 Q
"RTN","IBCCPT",25,0)
 ;
"RTN","IBCCPT",26,0)
FILE1 ;  file procedures, if BASC, only for 1 visit date
"RTN","IBCCPT",27,0)
 K DGNOADD S (X,DINUM)=$P(DGNOD,"^",2) D VFILE1^IBCOPV1 K DINUM,X
"RTN","IBCCPT",28,0)
 N IBCPTNM S IBCPTNM=$$CPT^ICPTCOD(+DGNOD,+$P(DGNOD,U,2))
"RTN","IBCCPT",29,0)
 I $D(DGNOADD) W !?10,"Can't add Amb. Surg. ",$P(IBCPTNM,U,2)," without visit date!" Q  ;don't add cpt for date that can't go on bill
"RTN","IBCCPT",30,0)
 I IBFT'=2,+$P(DGNOD,"^",4),$$TOMANY($P(DGNOD,"^",2)) W !?10,"Can't add Billable Amb. Surg. ",$P(IBCPTNM,U,2)," when more than one visit date!",*7 Q
"RTN","IBCCPT",31,0)
 D DSPPRC(IBCPTNM,DGNOD)
"RTN","IBCCPT",32,0)
 ;
"RTN","IBCCPT",33,0)
 S:'$D(^DGCR(399,IBIFN,"CP",0)) DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCCPT",34,0)
 S DLAYGO=399,DA(1)=IBIFN,DIC="^DGCR(399,"_DA(1)_",""CP"",",DIC(0)="L",X=+DGNOD_";ICPT(" K DD,DO D FILE^DICN S (DA,IBPROCP)=+Y K DO,DD,DLAYGO,DIC("P")
"RTN","IBCCPT",35,0)
 ;
"RTN","IBCCPT",36,0)
 S DR="1///"_$P(DGNOD,"^",2)
"RTN","IBCCPT",37,0)
 I +$P(DGNOD,"^",8) S DR=DR_";18///`"_+$P(DGNOD,"^",8)
"RTN","IBCCPT",38,0)
 I +$P(DGNOD,"^",9) S DR=DR_";6///`"_+$P(DGNOD,"^",9)
"RTN","IBCCPT",39,0)
 I +$P(DGNOD,"^",5) S DR=DR_";5////"_+$P(DGNOD,"^",5)
"RTN","IBCCPT",40,0)
 I +$P(DGNOD,"^",11) S DR=DR_";20////"_+$P(DGNOD,"^",11)
"RTN","IBCCPT",41,0)
 S DIE=DIC D ^DIE
"RTN","IBCCPT",42,0)
 D:$P(DGNOD,U,10)'="" ADDMOD(IBIFN,IBPROCP,$P(DGNOD,U,10))
"RTN","IBCCPT",43,0)
 ;
"RTN","IBCCPT",44,0)
 S DR="16"
"RTN","IBCCPT",45,0)
 I '$P(DGNOD,"^",8) S DR=DR_";18"
"RTN","IBCCPT",46,0)
 I '$P(DGNOD,"^",9) S DR=DR_";6"
"RTN","IBCCPT",47,0)
 I '$P(DGNOD,"^",5) S DR=DR_";5"
"RTN","IBCCPT",48,0)
 S:IBFT=2 DR=DR_";8;9;17//NO"
"RTN","IBCCPT",49,0)
 S DIE=DIC D ^DIE
"RTN","IBCCPT",50,0)
 ;
"RTN","IBCCPT",51,0)
 S DR=$$SPCUNIT^IBCU7(IBIFN,IBPROCP) I DR'="" D ^DIE ; miles/minutes/hours
"RTN","IBCCPT",52,0)
 ;
"RTN","IBCCPT",53,0)
 ; DSS QuadraMed Interface: CPT Sequence and Diagnosis Linkage for Single CPT
"RTN","IBCCPT",54,0)
 I $$QMED^IBCU1("DX^VEJDIBE1",IBIFN) D DX^VEJDIBE1(IBIFN,IBPROCP)
"RTN","IBCCPT",55,0)
 ;
"RTN","IBCCPT",56,0)
 Q:$D(Y)
"RTN","IBCCPT",57,0)
 D DX^IBCU72(IBIFN,IBPROCP):IBFT=2
"RTN","IBCCPT",58,0)
 I IBFT=2 S X=$$ADDTNL^IBCU7(IBIFN,.DA)
"RTN","IBCCPT",59,0)
 L ^DGCR(399,IBIFN):1
"RTN","IBCCPT",60,0)
 K DIE,DIC,DR,DA,IBPROCP
"RTN","IBCCPT",61,0)
 Q
"RTN","IBCCPT",62,0)
 ;
"RTN","IBCCPT",63,0)
CPRT D:$Y+6>IOSL SCR Q:DGU="^"
"RTN","IBCCPT",64,0)
 N IBCPTNM,IBNBM,IBMODS,J,IBZ S IBNBM="",IBCPTNM=$$CPT^ICPTCOD(DGCPT) Q:'IBCPTNM
"RTN","IBCCPT",65,0)
 W !,DGCNT,")",?5,$P(IBCPTNM,U,2),?13,$E($P(IBCPTNM,U,3),1,24),?39,$E($P($G(^SC(+$P(DGNOD,U,9),0)),U,1),1,15),?56,$$FMTE^XLFDT(DGDAT,2)
"RTN","IBCCPT",66,0)
 I +DGBIL,+$P($G(DGNOD),U,6) S IBNBM="  *ON BILL/"_$E($P(DGNOD,U,7),1,4)_"*"
"RTN","IBCCPT",67,0)
 I IBNBM="",DGBIL S IBNBM="  *ON THIS BILL*"
"RTN","IBCCPT",68,0)
 I IBNBM="",+$P($G(DGNOD),U,6) S IBNBM="  "_$E($P(DGNOD,U,7),1,12)
"RTN","IBCCPT",69,0)
 W ?64,IBNBM
"RTN","IBCCPT",70,0)
 ;
"RTN","IBCCPT",71,0)
 S IBMODS=$P($G(DGNOD),U,10) F J=1:1 S IBZ=$P(IBMODS,",",J) Q:IBZ=""  S IBZ=$$MOD^ICPTMOD(IBZ,"I") W !,?13,$P(IBZ,U,2),?18,$P(IBZ,U,3)
"RTN","IBCCPT",72,0)
 Q
"RTN","IBCCPT",73,0)
CHDR W @IOF,!,?15,"<<CURRENT PROCEDURAL TERMINOLOGY CODES>>",!!,?10,"LISTING FROM VISIT DATES WITH ASSOCIATED CPT CODES",!,?22,"IN OUTPT ENCOUNTERS FILE",!
"RTN","IBCCPT",74,0)
 K ^TMP("IBVIS",$J)
"RTN","IBCCPT",75,0)
 S L="",$P(L,"=",80)="" W !,L,!,"NO.",?5,"CODE",?13,"SHORT NAME",?39,"CLINIC",?56,"DATE",!,L,! K L
"RTN","IBCCPT",76,0)
 Q
"RTN","IBCCPT",77,0)
ADDMOD(IBIFN,IBY,IBMOD) ; Add modifier(s) from PCE procedure to CPT code mult
"RTN","IBCCPT",78,0)
 N DIE,DR,DIC,DA,DO,DD,IBS,IBM
"RTN","IBCCPT",79,0)
 F IBS=1:1:$L(IBMOD,",") S DA(2)=IBIFN,DA(1)=IBY,X=$O(^DGCR(399,DA(2),"CP",DA(1),"MOD","B",""),-1)+1 S IBM=$P(IBMOD,",",IBS) I IBM'="" D
"RTN","IBCCPT",80,0)
 . S:'$D(^DGCR(399,DA(2),"CP",DA(1),"MOD")) DIC("P")=$$GETSPEC^IBEFUNC(399.0304,16)
"RTN","IBCCPT",81,0)
 . S DIC(0)="L",DIC="^DGCR(399,"_IBIFN_",""CP"","_IBY_",""MOD"",",DLAYGO=399.30416,DIC("DR")=".02////"_IBM
"RTN","IBCCPT",82,0)
 . D FILE^DICN K DIC,DO,DD
"RTN","IBCCPT",83,0)
 Q
"RTN","IBCCPT",84,0)
 ;
"RTN","IBCCPT",85,0)
DSPPRC(CPTNM,NOD) ; display summary of procedure being added
"RTN","IBCCPT",86,0)
 N IBI,IBL,IBMODS,IBMOD,IBPRVTYP,IBPRV I $G(CPTNM)=""!($G(NOD)="") Q
"RTN","IBCCPT",87,0)
 S IBMODS=$P(NOD,U,10),IBPRVTYP="",IBPRV=""
"RTN","IBCCPT",88,0)
 I +$P(NOD,U,8) S IBPRV=$P($G(^VA(200,+$P(NOD,U,8),0)),U,1),IBPRVTYP=$P($$PRVTYP^IBCRU6(+$P(NOD,U,8)),U,3) S IBL=$S(($L(IBPRVTYP)+$L(IBPRV))>32:"",1:" - ")
"RTN","IBCCPT",89,0)
 ;
"RTN","IBCCPT",90,0)
 W !!?4,"Adding CPT Procedure: ",$P(CPTNM,U,2),?34,$P(CPTNM,U,3)
"RTN","IBCCPT",91,0)
 I IBMODS'="" F IBI=1:1 S IBMOD=$P(IBMODS,",",IBI) Q:'IBMOD  S IBMOD=$$MOD^ICPTMOD(IBMOD,"I") W !,?34,$P(IBMOD,U,2)," - ",$E($P(IBMOD,U,3),1,40)
"RTN","IBCCPT",92,0)
 W !,?34,"Visit: ",$$FMTE^XLFDT(+$P(NOD,U,2),2),", ",$E($P($G(^SC(+$P(NOD,U,9),0)),U,1),1,29)
"RTN","IBCCPT",93,0)
 I IBPRV'="" W !,?34,"Provider: ",$E(IBPRV,1,35) I IBPRVTYP'="" W:IBL="" !,?44 W IBL,IBPRVTYP
"RTN","IBCCPT",94,0)
 W !
"RTN","IBCCPT",95,0)
 Q
"RTN","IBCCPT",96,0)
 ;
"RTN","IBCCPT",97,0)
VST(IBQUERY) ;Procedures for outpatient visits ... If IBQUERY is defined
"RTN","IBCCPT",98,0)
 ;  on entry, the QUERY OBJECT defined by this value will be used for
"RTN","IBCCPT",99,0)
 ;  loop to extract procedures for visits, otherwise, a new QUERY will be opened
"RTN","IBCCPT",100,0)
 ;  If passed by reference, IBQUERY will be ret'd as the new QUERY ref #
"RTN","IBCCPT",101,0)
 S DGCNT=0 I $O(^DGCR(399,IBIFN,"OP",0)) F V=0:0 S V=$O(^DGCR(399,IBIFN,"OP",V)) Q:'V  S (IBOPV1,IBOPV2)=V D PROC(.IBQUERY)
"RTN","IBCCPT",102,0)
 I $O(^DGCR(399,IBIFN,"OP",0)) K ^TMP("IBVIS",$J) G VSTQ
"RTN","IBCCPT",103,0)
 S IBOPV1=$P(^DGCR(399,IBIFN,"U"),"^"),IBOPV2=$P(^("U"),"^",2)
"RTN","IBCCPT",104,0)
 D PROC(.IBQUERY) K ^TMP("IBVIS",$J)
"RTN","IBCCPT",105,0)
VSTQ Q
"RTN","IBCCPT",106,0)
 ;
"RTN","IBCCPT",107,0)
WRNO W:'$O(^UTILITY($J,"CPT-CNT",0)) !,"NO CPT CODES ON FILE FOR THE ",$S($O(^DGCR(399,IBIFN,"OP",0)):"VISIT DATES ON THIS BILL",1:"PERIOD THAT THIS STATEMENT COVERS")
"RTN","IBCCPT",108,0)
 Q
"RTN","IBCCPT",109,0)
SCR Q:DGU="^"  I $E(IOST,1,2)["C-",$Y+6>IOSL F Y=$Y:1:IOSL-5 W !
"RTN","IBCCPT",110,0)
 I  R !,"Press return to continue or ""^"" to exit display ",DGU:DTIME D:DGU'="^" CHDR
"RTN","IBCCPT",111,0)
 Q
"RTN","IBCCPT",112,0)
HLP W !!,"Enter a number between 1 and ",DGCNT1," or a range of numbers separated with commas",!,"or dashes, e.g., 1,3,5 or 2-4,8"
"RTN","IBCCPT",113,0)
 W !,"The number(s) must appear as a selectable number in the sequential list." R H:5 K H Q
"RTN","IBCCPT",114,0)
CPT S DA(1)=IBIFN,IBCCPTZ=$P(^DGCR(399,DA(1),0),U,9),IBCCPTX=$S($D(^DGCR(399,DA(1),"C"))&IBCCPTZ:1,1:0)
"RTN","IBCCPT",115,0)
 K DIK,DGTE,I1 Q
"RTN","IBCCPT",116,0)
 ;
"RTN","IBCCPT",117,0)
PROC(IBQUERY) ;  -find outpatient procedures, flag if billable
"RTN","IBCCPT",118,0)
 ;  -  ^utility($j,cpt-cnt,count)=code^date^on bill^is BASC^divis^nb^nb mess^provider^clinic^mod,mod^Opt Enc Ptr
"RTN","IBCCPT",119,0)
 N IBVAL,IBCBK,IBFILTER
"RTN","IBCCPT",120,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=IBOPV1,IBVAL("EDT")=(IBOPV2+.99)
"RTN","IBCCPT",121,0)
 ; Must be a billable appt type and outpt enctr status of CHECKED OUT
"RTN","IBCCPT",122,0)
 S IBFILTER=""
"RTN","IBCCPT",123,0)
 S IBCBK="I '$P(Y0,U,6),$P(Y0,U,7),$$DSP^IBEFUNC($P(Y0,U,10),+Y0),'$D(^TMP(""IBVIS"",$J,+$P(Y0,U,5))) S ^TMP(""IBVIS"",$J,+$P(Y0,U,5))="""" D EXTPROC^IBCCPT(IBIFN,Y,Y0,.DGCNT)"
"RTN","IBCCPT",124,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,IBFILTER,IBCBK,0,.IBQUERY) K ^TMP("DIERR",$J)
"RTN","IBCCPT",125,0)
 ;
"RTN","IBCCPT",126,0)
 Q
"RTN","IBCCPT",127,0)
EXTPROC(IBIFN,IBOE,IBOE0,IBCNT) ; Extract procedures for an encounter
"RTN","IBCCPT",128,0)
 ; IBIFN = the ien of the bill
"RTN","IBCCPT",129,0)
 ; IBOE0 = 0-node of the outpatient encounter file entry IBOE
"RTN","IBCCPT",130,0)
 ; IBCNT  extracted entry counter
"RTN","IBCCPT",131,0)
 N I2,I7,IBCPT,IBCPTS,IBDIV,IBOED,IBZERR,Z,IBCPTDAT,IBCPTPRV,IBCLINIC,IBZ,IBONBILL,IBMODS
"RTN","IBCCPT",132,0)
 D GETCPT^SDOE(IBOE,"IBCPTS","IBZERR")
"RTN","IBCCPT",133,0)
 Q:'$O(IBCPTS(0))  ;No procedures for this encounter
"RTN","IBCCPT",134,0)
 I '$$BDSRC^IBEFUNC3($P($G(IBOE0),U,5)) Q  ; non-billable visit data source
"RTN","IBCCPT",135,0)
 S IBOED=$$NBOE^IBCU81(IBOE,IBOE0)
"RTN","IBCCPT",136,0)
 S I7=IBOE0\1,IBDIV=$P(IBOE0,U,11)
"RTN","IBCCPT",137,0)
 S IBCLINIC="" I +$P(IBOE0,U,4),+$$CLNSCRN^IBCU(I7,+$P(IBOE0,U,4)) S IBCLINIC=+$P(IBOE0,U,4)
"RTN","IBCCPT",138,0)
 S I2=0 F  S I2=$O(IBCPTS(I2)) Q:'I2  D
"RTN","IBCCPT",139,0)
 . S IBCPT=$P(IBCPTS(I2),U)
"RTN","IBCCPT",140,0)
 . S IBCPTPRV=$P($G(IBCPTS(I2,12)),U,4)
"RTN","IBCCPT",141,0)
 . S IBONBILL=0 S IBZ=0 F  S IBZ=$O(^DGCR(399,IBIFN,"CP","B",IBCPT_";ICPT(",IBZ)) Q:'IBZ  I $P($G(^DGCR(399,IBIFN,"CP",IBZ,0)),U,2)=I7 S IBONBILL=1
"RTN","IBCCPT",142,0)
 . S IBMODS="",IBZ=0 F  S IBZ=$O(IBCPTS(I2,1,IBZ)) Q:'IBZ  S IBMODS=IBMODS_$S(IBMODS="":"",1:",")_+$G(IBCPTS(I2,1,IBZ,0))
"RTN","IBCCPT",143,0)
 . S IBCPTDAT=IBCPT_U_I7_U_IBONBILL_U_0_U_IBDIV_U_$P(IBOED,U,1)_U_$P(IBOED,U,2)_U_IBCPTPRV_U_IBCLINIC_U_IBMODS_U_IBOE
"RTN","IBCCPT",144,0)
 . F Z=1:1:$P(IBCPTS(I2),U,16) S IBCNT=IBCNT+1,^UTILITY($J,"CPT-CNT",IBCNT)=IBCPTDAT
"RTN","IBCCPT",145,0)
 I $O(IBCPTS(0)),'$D(^UTILITY($J,"CPT",+IBOE0,0)) S ^(0)="Y"
"RTN","IBCCPT",146,0)
 Q
"RTN","IBCCPT",147,0)
 ;
"RTN","IBCCPT",148,0)
TOMANY(DATE) ;  - returns 1 if more than 1 visit date on bill (for basc)
"RTN","IBCCPT",149,0)
 G TOMANYQ:'$D(DATE)
"RTN","IBCCPT",150,0)
 S DGVCNT=+$P($G(^DGCR(399,IBIFN,"OP",0)),"^",4)
"RTN","IBCCPT",151,0)
 I DGVCNT>1!(DGVCNT=1&('$D(^DGCR(399,IBIFN,"OP",DATE)))) K DGVCNT Q 1
"RTN","IBCCPT",152,0)
TOMANYQ Q 0
"RTN","IBCD3")
0^58^B29247948
"RTN","IBCD3",1,0)
IBCD3 ;ALB/ARH - AUTOMATED BILLER (ADD NEW BILL - CREATE BILL ENTRY) ; 9/5/93
"RTN","IBCD3",2,0)
 ;;2.0;INTEGRATED BILLING;**14,55,52,91,106,125,51,148,160,137,210,245**;21-MAR-94
"RTN","IBCD3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCD3",4,0)
 ;
"RTN","IBCD3",5,0)
 ;Called by IBCD2,IBACUS2
"RTN","IBCD3",6,0)
 ;
"RTN","IBCD3",7,0)
EN(IBQUERY) ;
"RTN","IBCD3",8,0)
 N IBI,IBX,IBY,I,X,X1,X2,IBAC,IBCPY K IBDR,IBDR222 S IBAC=1
"RTN","IBCD3",9,0)
 S X=$P($T(WHERE),";;",2),X2=$P($T(WHERE+1),";;",2) F I=0:0 S I=$O(IB(I)) Q:'I  S X1=$P($E(X,$F(X,I)+1,999),";",1) S:X1="" X1=$P($E(X2,$F(X2,I)+1,999),";",1) I $D(IB(I))=1 S $P(IBDR($P(X1,"^",1)),"^",$P(X1,"^",2))=IB(I)
"RTN","IBCD3",10,0)
 F I=0,"C","M","M1","S","U","U1","U2" I $D(IBDR(I)) S ^DGCR(399,IBIFN,I)=IBDR(I)
"RTN","IBCD3",11,0)
 S $P(^DGCR(399,0),"^",3)=IBIFN,$P(^(0),"^",4)=$P(^(0),"^",4)+1
"RTN","IBCD3",12,0)
 S DIK="^DGCR(399,",DA=IBIFN D IX1^DIK K DA,DIK ; set cross-references
"RTN","IBCD3",13,0)
 ;
"RTN","IBCD3",14,0)
 ; Set the attending/rendering provider into provider multiple
"RTN","IBCD3",15,0)
 I $G(IB("PRV",.01))'="" D
"RTN","IBCD3",16,0)
 . S DIC("DR")="",I=.01
"RTN","IBCD3",17,0)
 . N IBV
"RTN","IBCD3",18,0)
 . F  S I=$O(IB("PRV",I)) Q:'I  I IB("PRV",I)'="" S IBV(I)=IB("PRV",I),DIC("DR")=DIC("DR")_$S(DIC("DR")="":"",1:";")_I_"////^S X=IBV("_I_")"
"RTN","IBCD3",19,0)
 . S DIC="^DGCR(399,"_IBIFN_",""PRV"",",DIC(0)="L",DLAYGO=399,DA(1)=IBIFN,X=IB("PRV",.01)
"RTN","IBCD3",20,0)
 . K DO,DD D FILE^DICN K DO,DD,DLAYGO,DA,DIC
"RTN","IBCD3",21,0)
 ;
"RTN","IBCD3",22,0)
 ; Set the occurrence span codes for leave/pass days
"RTN","IBCD3",23,0)
 I $O(IB("OC",0)) D
"RTN","IBCD3",24,0)
 . N I,I1
"RTN","IBCD3",25,0)
 . S I1=0 F  S I1=$O(IB("OC",I1)) Q:'I1  D
"RTN","IBCD3",26,0)
 .. S I=0,DIC("DR")=""
"RTN","IBCD3",27,0)
 .. F  S I=$O(IB("OC",I1,I)) Q:'I  S DIC("DR")=DIC("DR")_$S(DIC("DR")="":"",1:";")_I_"////"_IB("OC",I1,I)
"RTN","IBCD3",28,0)
 .. S DIC="^DGCR(399,"_IBIFN_",""OC"",",DIC(0)="L",DLAYGO=399,DA(1)=IBIFN,DIC("P")=$$GETSPEC^IBEFUNC(399,41),X=IB("OC")
"RTN","IBCD3",29,0)
 .. K DO,DD D FILE^DICN K DO,DD,DLAYGO,DA,DIC
"RTN","IBCD3",30,0)
 ;
"RTN","IBCD3",31,0)
 ; file rx refills, default CPT and Dx if defined
"RTN","IBCD3",32,0)
 I $D(IB(362.4))>2 D  G END
"RTN","IBCD3",33,0)
 . N IBZ
"RTN","IBCD3",34,0)
 . S IBRX=0 F  S IBRX=$O(IB(362.4,IBRX)) Q:'IBRX  S IBY="" F  S IBY=$O(IB(362.4,IBRX,IBY)) Q:IBY=""  D
"RTN","IBCD3",35,0)
 .. S IBX=IB(362.4,IBRX,IBY) Q:IBX=""
"RTN","IBCD3",36,0)
 .. S IBZ=$$ADD^IBCSC5A($P(IBX,U),IBIFN,$P(IBX,U,4),$P(IBX,U,2),+IBRX,$P(IBX,U,3)_U_$P(IBX,U,5)_U_$P(IBX,U,6))
"RTN","IBCD3",37,0)
 ;
"RTN","IBCD3",38,0)
 ;file outpatient visit dates and find/store outpatient procedures and dx
"RTN","IBCD3",39,0)
 ;NOTE: If IBQUERY is defined at this point, it will be used to perform
"RTN","IBCD3",40,0)
 ;       the scan for outpatient procedures
"RTN","IBCD3",41,0)
 I '$$INPAT^IBCEF(IBIFN) D  G END
"RTN","IBCD3",42,0)
 . I $D(IB(43))>2 D
"RTN","IBCD3",43,0)
 .. S ^DGCR(399,IBIFN,"OP",0)="^399.043DA^" S IBX=0 F  S IBX=$O(IB(43,IBX)) Q:'IBX  D
"RTN","IBCD3",44,0)
 ... S DIC="^DGCR(399,"_IBIFN_",""OP"",",DIC(0)="L",DA(1)=IBIFN,(DINUM,X)=IBX,DLAYGO=399.043 K DD,DO D FILE^DICN K DIC,DA,DINUM,DO,DD,DLAYGO
"RTN","IBCD3",45,0)
 . ;
"RTN","IBCD3",46,0)
 . D VST^IBCCPT(.IBQUERY) I $D(^UTILITY($J,"CPT-CNT")) D
"RTN","IBCD3",47,0)
 .. N IBPRX
"RTN","IBCD3",48,0)
 .. S DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCD3",49,0)
 .. S IBY=0 F  S IBY=$O(^UTILITY($J,"CPT-CNT",IBY)) Q:'IBY  S IBX=^(IBY) I '$P(IBX,U,6) D
"RTN","IBCD3",50,0)
 ... S IBPRX(+$P(IBX,U,8))=""
"RTN","IBCD3",51,0)
 ... S DIC="^DGCR(399,"_IBIFN_",""CP"",",DIC(0)="L",DA(1)=IBIFN,X=+IBX_";ICPT(",DLAYGO=399 K DD,DO D FILE^DICN K DO,DD,DLAYGO Q:Y'>0
"RTN","IBCD3",52,0)
 ... ;
"RTN","IBCD3",53,0)
 ... S IBCPY=+Y
"RTN","IBCD3",54,0)
 ... S DR="1////"_$P(IBX,U,2)_$S(+$P(IBX,U,8):";18////"_+$P(IBX,U,8),1:"")
"RTN","IBCD3",55,0)
 ... S DR=DR_$S(+$P(IBX,U,9):";6////"_+$P(IBX,U,9),1:"")_$S(+$P(IBX,U,5):";5////"_+$P(IBX,U,5),1:"")
"RTN","IBCD3",56,0)
 ... S DR=DR_$S(+$P(IBX,U,11):";20////"_+$P(IBX,U,11),1:"")
"RTN","IBCD3",57,0)
 ... S DIE=DIC,DA=+IBCPY D ^DIE K DIE,DIC,DA,DINUM,DO,DD
"RTN","IBCD3",58,0)
 ... I $P(IBX,U,10) D ADDMOD^IBCCPT(IBIFN,IBCPY,$P(IBX,U,10)) ;Modifiers
"RTN","IBCD3",59,0)
 .. I $O(IBPRX(""))=$O(IBPRX(""),-1),$O(IBPRX(0)) D
"RTN","IBCD3",60,0)
 ... ;If only 1 provider - make it the rendering
"RTN","IBCD3",61,0)
 ... S IB("PRV",.02)=+$O(IBPRX(0))_";VA(200,",IB("PRV",.01)=3
"RTN","IBCD3",62,0)
 . K DGCNT,V,IBOPV1,IBOPV2,I,DGDIV,I1,DGNOD,DGCPTS,I7,I2,DGCPT,^UTILITY($J,"CPT-CNT")
"RTN","IBCD3",63,0)
 . ;
"RTN","IBCD3",64,0)
 . D OPTDX^IBCSC4D(DFN,IB(151),IB(152),.IBDX) I +IBDX D  K IBDX
"RTN","IBCD3",65,0)
 .. S IBY=0 F  S IBY=$O(IBDX(IBY)) Q:IBY=""  S IBX=IBDX(IBY) I '$P(IBX,U,5) D
"RTN","IBCD3",66,0)
 ... I '$D(^DGCR(399,"AOPV",DFN,(+$P(IBX,U,4)\1),IBIFN)) Q
"RTN","IBCD3",67,0)
 ... S DIC("DR")=".02////"_IBIFN,DIC="^IBA(362.3,",DIC(0)="L",X=+IBX,DLAYGO=362.3 K DD,DO D FILE^DICN
"RTN","IBCD3",68,0)
 ... K DIE,DIC,DA,DLAYGO,DO,DD
"RTN","IBCD3",69,0)
 ;
"RTN","IBCD3",70,0)
 ;store inpatient diagnosis and procedures, default admit dx to first dx found
"RTN","IBCD3",71,0)
 I $$INPAT^IBCEF(IBIFN) D  G END
"RTN","IBCD3",72,0)
 . I $G(^TMP("IBDX",$J))=IB(.08) D  K ^TMP("IBDX",$J)
"RTN","IBCD3",73,0)
 .. N IBXDEF S IBXDEF=0
"RTN","IBCD3",74,0)
 .. S (IBI,IBX)="" F  S IBX=$O(^TMP("IBDX",$J,IBX)) Q:'IBX  S IBY=0 F  S IBY=$O(^TMP("IBDX",$J,IBX,IBY)) Q:'IBY  D
"RTN","IBCD3",75,0)
 ... S IBZ=^TMP("IBDX",$J,IBX,IBY) Q:($$ICD9^IBACSV(+IBZ)="")  S IBI=IBI+1
"RTN","IBCD3",76,0)
 ... S DIC("DR")=".02////"_IBIFN_";.03////"_IBI,DIC="^IBA(362.3,",DIC(0)="L",X=+IBZ,DLAYGO=362.3 K DD,DO D FILE^DICN
"RTN","IBCD3",77,0)
 ... K DIE,DIC,DA,DLAYGO,DO,DD
"RTN","IBCD3",78,0)
 ... I Y>0,'IBXDEF S IBXDEF=1,DR="215////"_+IBZ,DIE="^DGCR(399,",DA=IBIFN D ^DIE
"RTN","IBCD3",79,0)
 . ;
"RTN","IBCD3",80,0)
 . D IPRC^IBCD4(+IB(.08),IB(151),IB(152)) I $D(^TMP("IBIPRC",$J)) D  K ^TMP("IBIPRC",$J)
"RTN","IBCD3",81,0)
 .. S ^DGCR(399,IBIFN,"CP",0)="^399.0304AVI^"
"RTN","IBCD3",82,0)
 .. S IBX=0 F  S IBX=$O(^TMP("IBIPRC",$J,IBX)) Q:'IBX  D
"RTN","IBCD3",83,0)
 ... S IBY=^TMP("IBIPRC",$J,IBX) F IBI=1:1 S IBZ=$P(IBY,U,IBI) Q:'IBZ  D
"RTN","IBCD3",84,0)
 .... S DIC="^DGCR(399,"_IBIFN_",""CP"",",DIC(0)="L",DA(1)=IBIFN,X=+IBZ_";ICD0(",DLAYGO=399.0304 K DD,DO D FILE^DICN
"RTN","IBCD3",85,0)
 .... I Y>0 S DIE=DIC,DA=+Y,DR="1////"_(IBX\1) D ^DIE K DIE,DIC,DA,DLAYGO,DO,DD
"RTN","IBCD3",86,0)
 ;
"RTN","IBCD3",87,0)
END S IBX="1^Billing Record #"_$P(^DGCR(399,+IBIFN,0),"^",1)_" established for "_$P($G(^DPT(IBDFN,0)),U,1)
"RTN","IBCD3",88,0)
 ;
"RTN","IBCD3",89,0)
 S IBAUTO=1,DGPTUPDT="" I '$G(IBCHTRN) D PROC^IBCU7A(IBIFN) D ^IBCU6 ; auto calculate/store revenue codes
"RTN","IBCD3",90,0)
 ;
"RTN","IBCD3",91,0)
Q K %,%DT,IBDR,X1,X2,X3,X4,Y,DGDIRA,DGDIRB,DGDIR0,DIR,DGRVRCAL,DIC,DA,DR,DINUM,DGPTUPDT,DGXRF1,IBCHK,IBINDT,IBIDS,DLAYGO
"RTN","IBCD3",92,0)
 Q
"RTN","IBCD3",93,0)
 ;
"RTN","IBCD3",94,0)
WHERE ;;.01^0^1;.02^0^2;.03^0^3;.04^0^4;.05^0^5;.06^0^6;.07^0^7;.08^0^8;.09^0^9;.11^0^11;.17^0^17;.16^0^16;.18^0^18;.19^0^19;.2^0^20;.22^0^22;.27^0^27;112^M^12;151^U^1;152^U^2;155^U^5;101^M^1;158^U^8;159^U^9;160^U^10;161^U^11;162^U^12;
"RTN","IBCD3",95,0)
 ;;217^U2^3;221^U2^7;
"RTN","IBCRBC")
0^4^B13287981
"RTN","IBCRBC",1,0)
IBCRBC ;ALB/ARH - RATES: BILL CALCULATION OF CHARGES ; 22-MAY-1996
"RTN","IBCRBC",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,51,137,245**;21-MAR-94
"RTN","IBCRBC",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRBC",4,0)
 ;
"RTN","IBCRBC",5,0)
 ; Variable DGPTUPDT may be defined on entry/exit for inpt bills so the PTF will only be updated once per session
"RTN","IBCRBC",6,0)
 ; Charges may be filed on the bill and if IBRSARR is passed but does not exist it may be updated
"RTN","IBCRBC",7,0)
 ; otherwise there are no other outputs/results of this call.
"RTN","IBCRBC",8,0)
 ;
"RTN","IBCRBC",9,0)
BILL(IBIFN,IBRSARR) ; given a bill number calculate and store all charges
"RTN","IBCRBC",10,0)
 ; if IBRSARR is defined it will be used to create charges rather than the standard set for the bills Rate Type
"RTN","IBCRBC",11,0)
 ;
"RTN","IBCRBC",12,0)
 N IB0,IBU,IBBRT,IBBTYPE,IBCTYPE,DFN,PTF,IBDGPT,IBRS,IBCS,IBBEVNT Q:'$G(IBIFN)
"RTN","IBCRBC",13,0)
 K ^TMP($J,"IBCRCC"),^TMP($J,"IBCRCS")
"RTN","IBCRBC",14,0)
 ;
"RTN","IBCRBC",15,0)
 S IB0=$G(^DGCR(399,+IBIFN,0)) Q:IB0=""  S IBU=$G(^DGCR(399,+IBIFN,"U")) Q:'IBU
"RTN","IBCRBC",16,0)
 S IBBRT=+$P(IB0,U,7),IBBTYPE=$S($$INPAT^IBCEF(IBIFN):1,1:3),IBCTYPE=+$P(IB0,U,27),DFN=$P(IB0,U,2) Q:'DFN
"RTN","IBCRBC",17,0)
 ;
"RTN","IBCRBC",18,0)
 ; if who's responsible is insurer, but bill has no insurer defined quit
"RTN","IBCRBC",19,0)
 I $P(IB0,U,11)="i",'$G(^DGCR(399,+IBIFN,"MP")),'$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN)) Q
"RTN","IBCRBC",20,0)
 ;
"RTN","IBCRBC",21,0)
 ; if inpt bill, PTF Status is Open, not a Fee Basis record and not previously done then Update the PTF record
"RTN","IBCRBC",22,0)
 I IBBTYPE<3,'$D(DGPTUPDT) S PTF=$P(IB0,U,8) Q:'PTF  S IBDGPT=$G(^DGPT(+PTF,0)) Q:IBDGPT=""  D
"RTN","IBCRBC",23,0)
 . I '$P(IBDGPT,U,6),'$P(IBDGPT,U,4) D UPDT^DGPTUTL S DGPTUPDT=""
"RTN","IBCRBC",24,0)
 ;
"RTN","IBCRBC",25,0)
 ;
"RTN","IBCRBC",26,0)
 D DSPDL^IBCRBC3,DELALLRC^IBCRBF(IBIFN) ; delete all existing auto charges on the bill
"RTN","IBCRBC",27,0)
 ;
"RTN","IBCRBC",28,0)
 ; get standard set of all rate schedules and charge sets available for entire date range of the bill
"RTN","IBCRBC",29,0)
 I '$D(IBRSARR) D RT^IBCRU3(IBBRT,IBBTYPE,$P(IBU,U,1,2),.IBRSARR,"",IBCTYPE) I 'IBRSARR G END
"RTN","IBCRBC",30,0)
 ;
"RTN","IBCRBC",31,0)
 ; process charge sets - set all charges for the bill into array
"RTN","IBCRBC",32,0)
 S IBRS=0 F  S IBRS=$O(IBRSARR(IBRS)) Q:'IBRS  D
"RTN","IBCRBC",33,0)
 . S IBCS=0 F  S IBCS=$O(IBRSARR(IBRS,IBCS)) Q:'IBCS  I +IBRSARR(IBRS,IBCS) D
"RTN","IBCRBC",34,0)
 .. S IBBEVNT=+$P($G(^IBE(363.1,+IBCS,0)),U,3) Q:'IBBEVNT  S IBBEVNT=$$EMUTL^IBCRU1(IBBEVNT) Q:IBBEVNT=""
"RTN","IBCRBC",35,0)
 .. ;
"RTN","IBCRBC",36,0)
 .. I IBBEVNT["INPATIENT BEDSECTION STAY" D INPTBS^IBCRBC1(IBIFN,IBRS,IBCS)
"RTN","IBCRBC",37,0)
 .. I IBBEVNT["INPATIENT DRG" D INPTDRG^IBCRBC11(IBIFN,IBRS,IBCS)
"RTN","IBCRBC",38,0)
 .. I IBBEVNT["OUTPATIENT VISIT DATE" D OPTVST^IBCRBC1(IBIFN,IBRS,IBCS)
"RTN","IBCRBC",39,0)
 .. I IBBEVNT["PRESCRIPTION" D RX^IBCRBC1(IBIFN,IBRS,IBCS)
"RTN","IBCRBC",40,0)
 .. I IBBEVNT["PROSTHETICS" D PI^IBCRBC1(IBIFN,IBRS,IBCS)
"RTN","IBCRBC",41,0)
 .. I IBBEVNT["PROCEDURE" D CPT^IBCRBC1(IBIFN,IBRS,IBCS)
"RTN","IBCRBC",42,0)
 ;
"RTN","IBCRBC",43,0)
 I '$D(^TMP($J,"IBCRCC")) G END
"RTN","IBCRBC",44,0)
 ;
"RTN","IBCRBC",45,0)
 D MULTCPT^IBCRBCA1 ; adjust charges for Multiple Surgical Procedure Discount
"RTN","IBCRBC",46,0)
 D PSB^IBCRBCA2 ;     adjust charges for Primary/Secondary Bundling
"RTN","IBCRBC",47,0)
 D MODADJ^IBCRBCA3 ;  adjust charges for Modifier Adjustment
"RTN","IBCRBC",48,0)
 ;
"RTN","IBCRBC",49,0)
 D SORTCI^IBCRBC3 I '$D(^TMP($J,"IBCRCS")) G END
"RTN","IBCRBC",50,0)
 ;
"RTN","IBCRBC",51,0)
 D ADDBCHGS^IBCRBC3(IBIFN)
"RTN","IBCRBC",52,0)
 ;
"RTN","IBCRBC",53,0)
 D MAILADD(IBIFN,IBBTYPE)
"RTN","IBCRBC",54,0)
 ;
"RTN","IBCRBC",55,0)
END I $D(^TMP("IBCRRX",$J)) D CLEANRX^IBCRBC3(IBIFN)
"RTN","IBCRBC",56,0)
 K ^TMP($J,"IBCRCC"),^TMP($J,"IBCRCS")
"RTN","IBCRBC",57,0)
 Q
"RTN","IBCRBC",58,0)
 ;
"RTN","IBCRBC",59,0)
MAILADD(IBIFN,BTYPE) ; update the bill mailing address:  it may be based on the types of charges
"RTN","IBCRBC",60,0)
 ; an outpatient bill may go to either the opt or rx mailing addresses depending on the types of charges
"RTN","IBCRBC",61,0)
 N DA,IB01,IB02
"RTN","IBCRBC",62,0)
 I $G(BTYPE)>2,+$G(IBIFN),$D(^IBA(362.4,"C",+IBIFN)),+$$CHGTYPE^IBCU(+IBIFN)=3 S DA=IBIFN D MAILA^IBCU5 D
"RTN","IBCRBC",63,0)
 . I '$D(ZTQUEUED),'$G(IBAUTO) W !!,"Updating Bill Mailing Address"
"RTN","IBCRBC",64,0)
 Q
"RTN","IBCRBC",65,0)
 ;
"RTN","IBCRBC",66,0)
BILLITEM(IBIFN,IBITMARR) ; add selected unassociated item charges to the bill
"RTN","IBCRBC",67,0)
 N IBRS,IBCS,IBBEVNT K ^TMP($J,"IBCRCC"),^TMP($J,"IBCRCS")
"RTN","IBCRBC",68,0)
 ;
"RTN","IBCRBC",69,0)
 S IBRS=0 F  S IBRS=$O(IBITMARR(IBRS)) Q:'IBRS  D
"RTN","IBCRBC",70,0)
 . S IBCS=0 F  S IBCS=$O(IBITMARR(IBRS,IBCS)) Q:'IBCS  D
"RTN","IBCRBC",71,0)
 .. S IBBEVNT=+$P($G(^IBE(363.1,+IBCS,0)),U,3) Q:'IBBEVNT  S IBBEVNT=$$EMUTL^IBCRU1(IBBEVNT) Q:IBBEVNT=""
"RTN","IBCRBC",72,0)
 .. ;
"RTN","IBCRBC",73,0)
 .. I IBBEVNT["UNASSOCIATED" D UNASSOC^IBCRBC11(IBIFN,IBRS,IBCS,.IBITMARR)
"RTN","IBCRBC",74,0)
 ;
"RTN","IBCRBC",75,0)
 I $D(^TMP($J,"IBCRCC")) D SORTCI^IBCRBC3
"RTN","IBCRBC",76,0)
 ;
"RTN","IBCRBC",77,0)
 I $D(^TMP($J,"IBCRCS")) D ADDBCHGS^IBCRBC3(IBIFN)
"RTN","IBCRBC",78,0)
 ;
"RTN","IBCRBC",79,0)
 K ^TMP($J,"IBCRCC"),^TMP($J,"IBCRCS")
"RTN","IBCRBC",80,0)
 Q
"RTN","IBCRBC",81,0)
 ;
"RTN","IBCRBC",82,0)
 ;
"RTN","IBCRBC",83,0)
 ;
"RTN","IBCRBC",84,0)
 ; There are 3 types of charges/items:
"RTN","IBCRBC",85,0)
 ; - ITEM: charge for an individual item:  specific item has one or more charge entries in 363.2
"RTN","IBCRBC",86,0)
 ;   for the charge to be applied to the bill the specific item must be found on the bill
"RTN","IBCRBC",87,0)
 ;
"RTN","IBCRBC",88,0)
 ; - EVENT: charge for an event, not an item:  items are defined in 363.2
"RTN","IBCRBC",89,0)
 ;   all charge items active on a date in the set define the charge for the event
"RTN","IBCRBC",90,0)
 ;   the item does not need to be defined on the bill for the charge to be applied to the bill
"RTN","IBCRBC",91,0)
 ;   the charge set on a date becomes the events charge, so effective date cuts across item and applies to event
"RTN","IBCRBC",92,0)
 ;   all charge items with the same effective date are used to calculate the event charge for that date
"RTN","IBCRBC",93,0)
 ;   each charge item effective date in the set overrides all previous entries in the set regardless of item
"RTN","IBCRBC",94,0)
 ;
"RTN","IBCRBC",95,0)
 ; - VA COST:  charge for an individual item but no entries in 363.2
"RTN","IBCRBC",96,0)
 ;   instead the charge is calculated/obtained when it is needed from an interface with the source package
"RTN","IBCRBC",97,0)
 ;
"RTN","IBCRBC",98,0)
 ;
"RTN","IBCRBC",99,0)
 ; Auto calculation and filing of a bills charges
"RTN","IBCRBC",100,0)
 ;
"RTN","IBCRBC",101,0)
 ; IBCRBC (BILL) - determine if charges can be calculated and which rates (RS/CS) should be used
"RTN","IBCRBC",102,0)
 ;                 then find billable items/events, calculate and store the charges
"RTN","IBCRBC",103,0)
 ;                 called anytime a bills charges need to be updated
"RTN","IBCRBC",104,0)
 ;        
"RTN","IBCRBC",105,0)
 ;                 IBCRBC1 (event) - gather billable items/events for each billable event type
"RTN","IBCRBC",106,0)
 ;                                   then accumulate all charges for the bill for each billable event/item
"RTN","IBCRBC",107,0)
 ;
"RTN","IBCRBC",108,0)
 ;                                   IBCRCGx (event) - pull billable items/events from the bill
"RTN","IBCRBC",109,0)
 ;                                   IBCRBC2 (BITMCHRG) - calculate charges for billable item/event
"RTN","IBCRBC",110,0)
 ;
"RTN","IBCRBC",111,0)
 ;                 IBCRBC3 (SORTCI) - sort accumulated charges into order to store on bill, combine if possible
"RTN","IBCRBC",112,0)
 ;                 IBCRBC3 (ADDBCHRGS) -  store the sorted accumulated charges on the bill
"RTN","IBCRBC",113,0)
 ;
"RTN","IBCRBC",114,0)
 ;
"RTN","IBCRBC",115,0)
 ; The Billable Event of the Charge Set is directly related to the Type of charge assigned
"RTN","IBCRBC",116,0)
 ; to the charges calculated for that Charge Set.  So, Billable Event (363.1,.03) <-> Type (399,42,.1)
"RTN","IBCRBC",117,0)
 ;
"RTN","IBCRBC",118,0)
 ;
"RTN","IBCRBC",119,0)
 ;  ^TMP($J,"IBCRCC")  -  array containing raw charges for a bill and related data, created in IBRCBC2
"RTN","IBCRBC",120,0)
 ;  ^TMP($J,"IBCRCC",X) = 1  charge item ifn
"RTN","IBCRBC",121,0)
 ;                        2  charge set ifn
"RTN","IBCRBC",122,0)
 ;                        3  rate schedule ifn
"RTN","IBCRBC",123,0)
 ;                        4  item ptr (to source)
"RTN","IBCRBC",124,0)
 ;                        5  cpt modifier ptr
"RTN","IBCRBC",125,0)
 ;                        6  revenue code ptr
"RTN","IBCRBC",126,0)
 ;                        7  billable bedsection (bill)
"RTN","IBCRBC",127,0)
 ;                        8  event date (visit or st from or admission)
"RTN","IBCRBC",128,0)
 ;                        9  charge per unit/qty
"RTN","IBCRBC",129,0)
 ;                        10 units/qty (qty of item)
"RTN","IBCRBC",130,0)
 ;                        11 total charge per unit/qty
"RTN","IBCRBC",131,0)
 ;                        12 adjusted total charge per unit/qty
"RTN","IBCRBC",132,0)
 ;                        13 units (# item on bill)
"RTN","IBCRBC",133,0)
 ;                        14 CPT ptr
"RTN","IBCRBC",134,0)
 ;                        15 division ptr
"RTN","IBCRBC",135,0)
 ;                        16 item type (source)
"RTN","IBCRBC",136,0)
 ;                        17 item ptr (to source)
"RTN","IBCRBC",137,0)
 ;                        18 charge component
"RTN","IBCRBC",138,0)
 ;                        19 billable bedsection (for item)
"RTN","IBCRBC",139,0)
 ;                        20 procedure provider
"RTN","IBCRBC",140,0)
 ;                        21 procedures associated clinic
"RTN","IBCRBC",141,0)
 ;                        22 procedures Outpatient Encounter, pointer to #409.68
"RTN","IBCRBC",142,0)
 ;
"RTN","IBCRBC",143,0)
 ;  ^TMP($J,"IBCRCC",X,"CC",x) = comments explaining charge adjustements
"RTN","IBCRBC",144,0)
 ;
"RTN","IBCRBC",145,0)
 ;  ^TMP($J,"IBCRCS")  -  array of charges from IBCRCC in sorted order and with only data needed to save on bill
"RTN","IBCRBC",146,0)
 ;  ^TMP($J,"IBCRCS", BS, RV, X) = 1  revenue code ptr
"RTN","IBCRBC",147,0)
 ;                                 2  bedsection ptr
"RTN","IBCRBC",148,0)
 ;                                 3  charge per units (adjusted total charge)
"RTN","IBCRBC",149,0)
 ;                                 4  units (# item on bill)
"RTN","IBCRBC",150,0)
 ;                                 5  CPT ptr
"RTN","IBCRBC",151,0)
 ;                                 6  division ptr
"RTN","IBCRBC",152,0)
 ;                                 7  item type
"RTN","IBCRBC",153,0)
 ;                                 8  item ptr
"RTN","IBCRBC",154,0)
 ;                                 9  charge component
"RTN","IBCRBC",155,0)
 ;
"RTN","IBCRBC",156,0)
 ;
"RTN","IBCRBC",157,0)
 ;
"RTN","IBCRBC",158,0)
 ; Inpatient Bill Dates use follow rules:
"RTN","IBCRBC",159,0)
 ; - admission date is counted as billable
"RTN","IBCRBC",160,0)
 ; - the discharge date is not billable and is not counted
"RTN","IBCRBC",161,0)
 ; 
"RTN","IBCRBC",162,0)
 ; - if admission movement is found in the Patient Movement file then the dates of admission and discharge
"RTN","IBCRBC",163,0)
 ;   will be used as the outside limits of the LOS, even if date range of the bill is longer   (LOS^IBCU64)
"RTN","IBCRBC",164,0)
 ; 
"RTN","IBCRBC",165,0)
 ; - a day is counted as billable to the bedsection the patient was in at the end of the day (ie. counted
"RTN","IBCRBC",166,0)
 ;   in LOS of next movement after midnight)
"RTN","IBCRBC",167,0)
 ; - if there is a movement on any given date that date is included in the LOS of the bedsection the patient
"RTN","IBCRBC",168,0)
 ;   moved into (same as admission date)
"RTN","IBCRBC",169,0)
 ; - if there is a movement on any given date that date is NOT included in the LOS of the bedsection the 
"RTN","IBCRBC",170,0)
 ;   patient moved out of (same as discharge date)
"RTN","IBCRBC",171,0)
 ; 
"RTN","IBCRBC",172,0)
 ; - if the time frame of the bill is:
"RTN","IBCRBC",173,0)
 ;   - either interim-first or interim-continuous the last date on the bill should be billed
"RTN","IBCRBC",174,0)
 ;     - if the last date is counted it is added to the LOS of the bedsection the patient was in at the end
"RTN","IBCRBC",175,0)
 ;       of the day
"RTN","IBCRBC",176,0)
 ;   - either NOT interim-first or interim-continuous (final bills) the last date on the bill
"RTN","IBCRBC",177,0)
 ;     should NOT be billed (i.e. this is considered the discharge date)
"RTN","IBCRBC",178,0)
 ;
"RTN","IBCRBC",179,0)
 ; - start with first bedsection after begin date, day is counted in the bedsection the patient is in at midnight
"RTN","IBCRBC",180,0)
 ; - continuous: last bedsection counted is the bedsection the patient is in at midnight of the end date
"RTN","IBCRBC",181,0)
 ; - final:last bedsection counted is the bedsection the patient is in at midnight of the day before the end date
"RTN","IBCRBC",182,0)
 ;
"RTN","IBCRBC1")
0^5^B53010456
"RTN","IBCRBC1",1,0)
IBCRBC1 ;ALB/ARH - RATES: BILL CALCULATION BILLABLE EVENTS ; 22 MAY 96
"RTN","IBCRBC1",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,138,51,148,245**;21-MAR-94
"RTN","IBCRBC1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRBC1",4,0)
 ;
"RTN","IBCRBC1",5,0)
 ; For each type of Billable Event, search for items on the bill and calculate the charges
"RTN","IBCRBC1",6,0)
 ;  1) search the bill for items of the billable event type
"RTN","IBCRBC1",7,0)
 ;  2) determine how the charges should be calculated, based on Billable Item and Charge Method of the Set's Rate
"RTN","IBCRBC1",8,0)
 ;  3) calculate charges
"RTN","IBCRBC1",9,0)
 ; For per diem Billing Rates, no item pointers are passed since all items have a standard charge
"RTN","IBCRBC1",10,0)
 ; The Insurance Company Different Revenue Codes to Use (36,.07) is passed so standard rev codes can be replaced
"RTN","IBCRBC1",11,0)
 ; The Charge Type (363.1,.04) is passed so it can be added to the charge on the bill if it is defined for a Set
"RTN","IBCRBC1",12,0)
 ; Output:  ^TMP($J,"IBCRCC")= ..., (created in IBCRBC2 based on charge items found here)
"RTN","IBCRBC1",13,0)
 ;
"RTN","IBCRBC1",14,0)
INPTBS(IBIFN,RS,CS) ; Determine charges for INPATIENT BEDSECTION STAY billable events
"RTN","IBCRBC1",15,0)
 ; - the billable events are billable bedsections based on the patient movement treating specialties,
"RTN","IBCRBC1",16,0)
 ;   these are pulled from the PTF record each time the charges are calculated (INPTPTF^IBCRCG)
"RTN","IBCRBC1",17,0)
 ; - each day of billable care is calculated separately in case a rate becomes inactive
"RTN","IBCRBC1",18,0)
 ;
"RTN","IBCRBC1",19,0)
 N IBX,IBBLITEM,IBCHGMTH,IBEVDT,IBIDRC,IBBDIV,IBITM,IBDIV,IBTYPE,IBCMPNT,IBSAVE I '$G(IBIFN)!'$G(CS) Q
"RTN","IBCRBC1",20,0)
 ;
"RTN","IBCRBC1",21,0)
 D INPTPTF^IBCRBG(IBIFN,CS)
"RTN","IBCRBC1",22,0)
 ;
"RTN","IBCRBC1",23,0)
 S IBTYPE=1,IBCMPNT=$P($G(^IBE(363.1,+CS,0)),U,4),IBX=$$CSBR^IBCRU3(CS),IBBLITEM=$P(IBX,U,4),IBCHGMTH=$P(IBX,U,5)
"RTN","IBCRBC1",24,0)
 S IBIDRC=+$G(^DGCR(399,+IBIFN,"MP"))
"RTN","IBCRBC1",25,0)
 I 'IBIDRC,$$MCRWNR^IBEFUNC($$CURR^IBCEF2(IBIFN)) S IBIDRC=$$CURR^IBCEF2(IBIFN)
"RTN","IBCRBC1",26,0)
 S IBIDRC=$G(^DIC(36,+IBIDRC,0)),IBIDRC=$P(IBIDRC,U,7)
"RTN","IBCRBC1",27,0)
 ;
"RTN","IBCRBC1",28,0)
 S IBBDIV=$P($G(^DGCR(399,+IBIFN,0)),U,22) ; bill's default division
"RTN","IBCRBC1",29,0)
 ;
"RTN","IBCRBC1",30,0)
 I IBBLITEM=1,IBCHGMTH=1 D  ; inpt/bedsection/per diem
"RTN","IBCRBC1",31,0)
 . S IBEVDT="" F  S IBEVDT=$O(^TMP($J,"IBCRC-INDT",IBEVDT)) Q:'IBEVDT  D
"RTN","IBCRBC1",32,0)
 .. S IBX=$G(^TMP($J,"IBCRC-INDT",IBEVDT)),IBITM=+$P(IBX,U,2),IBDIV=$P(IBX,U,5)
"RTN","IBCRBC1",33,0)
 .. ;
"RTN","IBCRBC1",34,0)
 .. I $$CSDV^IBCRU3(CS,IBDIV,IBBDIV)<0 Q  ; check division
"RTN","IBCRBC1",35,0)
 .. ;
"RTN","IBCRBC1",36,0)
 .. S IBSAVE="1^^"_IBDIV_"^"_IBTYPE_"^^"_IBCMPNT
"RTN","IBCRBC1",37,0)
 .. D BITMCHG^IBCRBC2(RS,CS,IBITM,IBEVDT,1,"","",IBIDRC,IBSAVE)
"RTN","IBCRBC1",38,0)
 K ^TMP($J,"IBCRC-INDT")
"RTN","IBCRBC1",39,0)
 Q
"RTN","IBCRBC1",40,0)
 ;
"RTN","IBCRBC1",41,0)
OPTVST(IBIFN,RS,CS) ; Determine charges for OUTPATIENT VISIT DATE billable events
"RTN","IBCRBC1",42,0)
 ; - the billable event is the outpatient visit date(s) on the bill (399,43)
"RTN","IBCRBC1",43,0)
 ;
"RTN","IBCRBC1",44,0)
 N IBX,IBBLITEM,IBCHGMTH,IBIDRC,IBOPVARR,IBI,IBEVDT,IBTYPE,IBCMPNT,IBSAVE I '$G(IBIFN)!'$G(CS) Q
"RTN","IBCRBC1",45,0)
 ;
"RTN","IBCRBC1",46,0)
 D OPTVD^IBCRBG1(IBIFN,.IBOPVARR) Q:'IBOPVARR
"RTN","IBCRBC1",47,0)
 ;
"RTN","IBCRBC1",48,0)
 S IBTYPE=2,IBCMPNT=$P($G(^IBE(363.1,+CS,0)),U,4),IBX=$$CSBR^IBCRU3(CS),IBBLITEM=$P(IBX,U,4),IBCHGMTH=$P(IBX,U,5)
"RTN","IBCRBC1",49,0)
 S IBIDRC=+$G(^DGCR(399,+IBIFN,"MP"))
"RTN","IBCRBC1",50,0)
 I 'IBIDRC,$$MCRWNR^IBEFUNC($$CURR^IBCEF2(IBIFN)) S IBIDRC=$$CURR^IBCEF2(IBIFN)
"RTN","IBCRBC1",51,0)
 S IBIDRC=$G(^DIC(36,+IBIDRC,0)),IBIDRC=$P(IBIDRC,U,7)
"RTN","IBCRBC1",52,0)
 ;
"RTN","IBCRBC1",53,0)
 I IBBLITEM=1,IBCHGMTH=1 D  ; opt vst/bedsection/per diem
"RTN","IBCRBC1",54,0)
 . S IBI="" F  S IBI=$O(IBOPVARR(IBI)) Q:IBI=""  D
"RTN","IBCRBC1",55,0)
 .. S IBEVDT=IBOPVARR(IBI)
"RTN","IBCRBC1",56,0)
 .. S IBSAVE="1^^^"_IBTYPE_"^^"_IBCMPNT
"RTN","IBCRBC1",57,0)
 .. D ALLBEDS^IBCRBC2(RS,CS,IBEVDT,"",IBIDRC,IBSAVE)
"RTN","IBCRBC1",58,0)
 Q
"RTN","IBCRBC1",59,0)
 ;
"RTN","IBCRBC1",60,0)
RX(IBIFN,RS,CS) ; Determine charges for PRESCRIPTION billable events
"RTN","IBCRBC1",61,0)
 ; - the billable event is an rx that has been added to the bill (362.4)
"RTN","IBCRBC1",62,0)
 ; - the insurance company Prescription Refill Rev Code (36,.15) is passed to the calculator to be used as
"RTN","IBCRBC1",63,0)
 ;   the rev code for all Rx charges, all types, this overrides the rev codes for the set or item
"RTN","IBCRBC1",64,0)
 ; - on HCFA 1500, the site parameter Default Rx Refill CPT (350.9,1.3) is added as the CPT to all Rx RC entries
"RTN","IBCRBC1",65,0)
 ;
"RTN","IBCRBC1",66,0)
 N IBX,IBBLITEM,IBCHGMTH,IBRXCPT,IBIDRC,IBIRC,IBRXARR,IBRX,IBEVDT,IBUNIT,IBITM,IBNDC,IBTYPE,IBCMPNT,IBSAVE
"RTN","IBCRBC1",67,0)
 I '$G(IBIFN)!'$G(CS) Q
"RTN","IBCRBC1",68,0)
 ;
"RTN","IBCRBC1",69,0)
 D SET^IBCSC5A(IBIFN,.IBRXARR) Q:'$P(IBRXARR,U,2)
"RTN","IBCRBC1",70,0)
 ;
"RTN","IBCRBC1",71,0)
 S IBTYPE=3,IBCMPNT=$P($G(^IBE(363.1,+CS,0)),U,4),IBX=$$CSBR^IBCRU3(CS),IBBLITEM=$P(IBX,U,4),IBCHGMTH=$P(IBX,U,5)
"RTN","IBCRBC1",72,0)
 S IBIDRC=+$G(^DGCR(399,+IBIFN,"MP"))
"RTN","IBCRBC1",73,0)
 I 'IBIDRC,$$MCRWNR^IBEFUNC($$CURR^IBCEF2(IBIFN)) S IBIDRC=$$CURR^IBCEF2(IBIFN)
"RTN","IBCRBC1",74,0)
 S IBIDRC=$G(^DIC(36,+IBIDRC,0)),IBIRC=$P(IBIDRC,U,15),IBIDRC=$P(IBIDRC,U,7)
"RTN","IBCRBC1",75,0)
 ;
"RTN","IBCRBC1",76,0)
 S IBRXCPT="" I $$FT^IBCU3(IBIFN)=2 S IBRXCPT=$P($G(^IBE(350.9,1,1)),U,30)
"RTN","IBCRBC1",77,0)
 ;
"RTN","IBCRBC1",78,0)
 I IBBLITEM=1,IBCHGMTH=1 D  ; rx refill/bedsection/per diem
"RTN","IBCRBC1",79,0)
 . S IBRX="" F  S IBRX=$O(IBRXARR(IBRX)) Q:IBRX=""  D
"RTN","IBCRBC1",80,0)
 .. S IBEVDT=0 F  S IBEVDT=$O(IBRXARR(IBRX,IBEVDT)) Q:'IBEVDT  D
"RTN","IBCRBC1",81,0)
 ... ;
"RTN","IBCRBC1",82,0)
 ... S IBSAVE="1^"_IBRXCPT_"^^"_IBTYPE_"^"_+IBRXARR(IBRX,IBEVDT)_"^"_IBCMPNT
"RTN","IBCRBC1",83,0)
 ... D ALLBEDS^IBCRBC2(RS,CS,IBEVDT,IBIRC,IBIDRC,IBSAVE)
"RTN","IBCRBC1",84,0)
 ;
"RTN","IBCRBC1",85,0)
 I IBBLITEM=3,IBCHGMTH=3 D  ; ndc/quantity
"RTN","IBCRBC1",86,0)
 . S IBRX="" F  S IBRX=$O(IBRXARR(IBRX)) Q:IBRX=""  D
"RTN","IBCRBC1",87,0)
 .. S IBEVDT=0 F  S IBEVDT=$O(IBRXARR(IBRX,IBEVDT)) Q:'IBEVDT  D
"RTN","IBCRBC1",88,0)
 ... S IBX=IBRXARR(IBRX,IBEVDT),IBITM=+IBX,IBUNIT=$P(IBX,U,4),IBNDC=$P(IBX,U,5) Q:IBNDC=""
"RTN","IBCRBC1",89,0)
 ... S IBNDC=$O(^IBA(363.21,"B",IBNDC,0)) Q:'IBNDC
"RTN","IBCRBC1",90,0)
 ... S IBSAVE="1^"_IBRXCPT_"^^"_IBTYPE_"^"_IBITM_"^"_IBCMPNT
"RTN","IBCRBC1",91,0)
 ... D BITMCHG^IBCRBC2(RS,CS,IBNDC,IBEVDT,IBUNIT,"",IBIRC,IBIDRC,IBSAVE)
"RTN","IBCRBC1",92,0)
 ;
"RTN","IBCRBC1",93,0)
 I IBCHGMTH=2 D  ; va cost
"RTN","IBCRBC1",94,0)
 . S IBRX="" F  S IBRX=$O(IBRXARR(IBRX)) Q:IBRX=""  D
"RTN","IBCRBC1",95,0)
 .. S IBEVDT=0 F  S IBEVDT=$O(IBRXARR(IBRX,IBEVDT)) Q:'IBEVDT  D
"RTN","IBCRBC1",96,0)
 ... S IBX=IBRXARR(IBRX,IBEVDT),IBITM=+IBX,IBUNIT=$P(IBX,U,4) Q:'IBITM
"RTN","IBCRBC1",97,0)
 ... S IBSAVE="1^"_IBRXCPT_"^^"_IBTYPE_"^"_IBITM_"^"_IBCMPNT
"RTN","IBCRBC1",98,0)
 ... D BITMCHG^IBCRBC2(RS,CS,IBITM,IBEVDT,IBUNIT,"",IBIRC,IBIDRC,IBSAVE)
"RTN","IBCRBC1",99,0)
 ;
"RTN","IBCRBC1",100,0)
 Q
"RTN","IBCRBC1",101,0)
 ;
"RTN","IBCRBC1",102,0)
CPT(IBIFN,RS,CS) ; Determine charges for PROCEDURE billable events
"RTN","IBCRBC1",103,0)
 ; - the billable event is a CPT procedure from the bill (399,304)
"RTN","IBCRBC1",104,0)
 ; - the item to be billed is a CPT, this may include Modifier
"RTN","IBCRBC1",105,0)
 ; - for each CPT found on the bill that has a modifier, will first check to see if that CPT-modifier
"RTN","IBCRBC1",106,0)
 ;   combination is billable (ie. is defined as a charge item for the Billing Rate, does not have to be active)
"RTN","IBCRBC1",107,0)
 ;   if it does not then assumes the charge should be the CPT charge
"RTN","IBCRBC1",108,0)
 ; - if the charge set is limited by region then either the CPT's division or if no CPT division then the bill's
"RTN","IBCRBC1",109,0)
 ;   Default Division must be contained in the sets region
"RTN","IBCRBC1",110,0)
 ; - the billable CPT is added as the CPT of the charge entry, Division is also added if defined for the CPT
"RTN","IBCRBC1",111,0)
 ; - the procedures provider may affect the charges due to a provider discount
"RTN","IBCRBC1",112,0)
 ; - if an inpatient bill then the bedsection on date of procedure will be used as the default bedsection
"RTN","IBCRBC1",113,0)
 ; - different sets of charges apply to SNF and Inpatient care although the bill is defined as inpatient
"RTN","IBCRBC1",114,0)
 ;
"RTN","IBCRBC1",115,0)
 N IBX,IBBLITEM,IBCHGMTH,IBBR,IBBDIV,IBIDRC,IBCPTARR,IBCPT,IBCPTFN,IBEVDT,IBMOD,IBDIV,IBTYPE,IBCMPNT
"RTN","IBCRBC1",116,0)
 N IBPPRV,IBBS,IBCLIN,IBOE,IBSAVE,IBUNIT I '$G(IBIFN)!'$G(CS) Q
"RTN","IBCRBC1",117,0)
 ;
"RTN","IBCRBC1",118,0)
 D CPT^IBCRBG1(IBIFN,.IBCPTARR) Q:'IBCPTARR
"RTN","IBCRBC1",119,0)
 ;
"RTN","IBCRBC1",120,0)
 S IBTYPE=4,IBCMPNT=$P($G(^IBE(363.1,+CS,0)),U,4),IBX=$$CSBR^IBCRU3(CS),IBBLITEM=$P(IBX,U,4),IBCHGMTH=$P(IBX,U,5)
"RTN","IBCRBC1",121,0)
 S IBIDRC=+$G(^DGCR(399,+IBIFN,"MP"))
"RTN","IBCRBC1",122,0)
 I 'IBIDRC,$$MCRWNR^IBEFUNC($$CURR^IBCEF2(IBIFN)) S IBIDRC=$$CURR^IBCEF2(IBIFN)
"RTN","IBCRBC1",123,0)
 S IBIDRC=$G(^DIC(36,+IBIDRC,0)),IBIDRC=$P(IBIDRC,U,7)
"RTN","IBCRBC1",124,0)
 S IBBR=$P(IBX,U,3)
"RTN","IBCRBC1",125,0)
 ;
"RTN","IBCRBC1",126,0)
 S IBBDIV=$P($G(^DGCR(399,+IBIFN,0)),U,22) ; bill's default division
"RTN","IBCRBC1",127,0)
 D INPTPTF^IBCRBG(IBIFN,CS) ; get inpatient bedsections
"RTN","IBCRBC1",128,0)
 ;
"RTN","IBCRBC1",129,0)
 I IBBLITEM=2 D  ; cpt/count/minutes/miles/hours
"RTN","IBCRBC1",130,0)
 . S IBCPT=0 F  S IBCPT=$O(IBCPTARR(IBCPT)) Q:'IBCPT  D
"RTN","IBCRBC1",131,0)
 .. S IBCPTFN=0 F  S IBCPTFN=$O(IBCPTARR(IBCPT,IBCPTFN)) Q:'IBCPTFN  D
"RTN","IBCRBC1",132,0)
 ... S IBX=IBCPTARR(IBCPT,IBCPTFN),IBEVDT=$P(IBX,U,1),IBMOD=$P(IBX,U,2)
"RTN","IBCRBC1",133,0)
 ... S IBDIV=$P(IBX,U,3),IBPPRV=$P(IBX,U,4),IBCLIN=$P(IBX,U,5),IBOE=$P(IBX,U,6)
"RTN","IBCRBC1",134,0)
 ... ;
"RTN","IBCRBC1",135,0)
 ... I '$$CHGOTH^IBCRBC2(IBIFN,RS,IBEVDT) Q
"RTN","IBCRBC1",136,0)
 ... ;
"RTN","IBCRBC1",137,0)
 ... S IBUNIT=$$CPTUNITS^IBCRBC2(CS,IBCHGMTH,IBX) Q:'IBUNIT
"RTN","IBCRBC1",138,0)
 ... ;
"RTN","IBCRBC1",139,0)
 ... S IBBS=$P($G(^TMP($J,"IBCRC-INDT",IBEVDT)),U,2) ; get inpatient bedsection
"RTN","IBCRBC1",140,0)
 ... I 'IBBS S IBX=$O(^TMP($J,"IBCRC-INDT",IBEVDT),-1) I +IBX S IBBS=$P($G(^TMP($J,"IBCRC-INDT",IBX)),U,2)
"RTN","IBCRBC1",141,0)
 ... ;
"RTN","IBCRBC1",142,0)
 ... I '$P($$CPT^ICPTCOD(+IBCPT,+IBEVDT),U,7) Q  ; check is a valid active CPT
"RTN","IBCRBC1",143,0)
 ... I $$CSDV^IBCRU3(CS,IBDIV,IBBDIV)<0 Q  ; check division
"RTN","IBCRBC1",144,0)
 ... I +IBMOD S IBMOD=$P($$CPTMOD^IBCRCU1(CS,IBCPT,IBMOD,IBEVDT),",",1) ; check CPT-MODs for billable combination
"RTN","IBCRBC1",145,0)
 ... ;
"RTN","IBCRBC1",146,0)
 ... S IBSAVE="1^"_IBCPT_U_IBDIV_U_IBTYPE_U_IBCPTFN_U_IBCMPNT_U_IBBS_U_IBPPRV_U_IBCLIN_U_IBOE
"RTN","IBCRBC1",147,0)
 ... D BITMCHG^IBCRBC2(RS,CS,IBCPT,IBEVDT,IBUNIT,IBMOD,"",IBIDRC,IBSAVE)
"RTN","IBCRBC1",148,0)
 K ^TMP($J,"IBCRC-INDT")
"RTN","IBCRBC1",149,0)
 Q
"RTN","IBCRBC1",150,0)
 ;
"RTN","IBCRBC1",151,0)
PI(IBIFN,RS,CS) ; Determine charges for PROSTHETICS billable events
"RTN","IBCRBC1",152,0)
 ; - the billable event is a prosthetic item that has been added to the bill (362.5)
"RTN","IBCRBC1",153,0)
 ;
"RTN","IBCRBC1",154,0)
 N IBX,IBBLITEM,IBCHGMTH,IBPIARR,IBIDRC,IBEVDT,IBPI,IBITM,IBTYPE,IBCMPNT,IBSAVE I '$G(IBIFN)!'$G(CS) Q
"RTN","IBCRBC1",155,0)
 ;
"RTN","IBCRBC1",156,0)
 D SET^IBCSC5B(IBIFN,.IBPIARR) Q:'$P(IBPIARR,U,2)
"RTN","IBCRBC1",157,0)
 ;
"RTN","IBCRBC1",158,0)
 S IBTYPE=5,IBCMPNT=$P($G(^IBE(363.1,+CS,0)),U,4),IBX=$$CSBR^IBCRU3(CS),IBBLITEM=$P(IBX,U,4),IBCHGMTH=$P(IBX,U,5)
"RTN","IBCRBC1",159,0)
 S IBIDRC=+$G(^DGCR(399,+IBIFN,"MP"))
"RTN","IBCRBC1",160,0)
 I 'IBIDRC,$$MCRWNR^IBEFUNC($$CURR^IBCEF2(IBIFN)) S IBIDRC=$$CURR^IBCEF2(IBIFN)
"RTN","IBCRBC1",161,0)
 S IBIDRC=$G(^DIC(36,+IBIDRC,0)),IBIDRC=$P(IBIDRC,U,7)
"RTN","IBCRBC1",162,0)
 ;
"RTN","IBCRBC1",163,0)
 I IBBLITEM=1,IBCHGMTH=1 D  ; pros/bedsection/per diem
"RTN","IBCRBC1",164,0)
 . S IBEVDT="" F  S IBEVDT=$O(IBPIARR(IBEVDT)) Q:'IBEVDT  D
"RTN","IBCRBC1",165,0)
 .. S IBPI=0 F  S IBPI=$O(IBPIARR(IBEVDT,IBPI)) Q:'IBPI  D
"RTN","IBCRBC1",166,0)
 ... S IBSAVE="1^^^"_IBTYPE_"^^"_IBCMPNT
"RTN","IBCRBC1",167,0)
 ... D ALLBEDS^IBCRBC2(RS,CS,IBEVDT,"",IBIDRC,IBSAVE)
"RTN","IBCRBC1",168,0)
 ;
"RTN","IBCRBC1",169,0)
 I IBCHGMTH=2 D  ; va cost
"RTN","IBCRBC1",170,0)
 . S IBEVDT="" F  S IBEVDT=$O(IBPIARR(IBEVDT)) Q:'IBEVDT  D
"RTN","IBCRBC1",171,0)
 .. S IBPI=0 F  S IBPI=$O(IBPIARR(IBEVDT,IBPI)) Q:'IBPI  D
"RTN","IBCRBC1",172,0)
 ... S IBITM=IBPIARR(IBEVDT,IBPI) Q:'IBITM
"RTN","IBCRBC1",173,0)
 ... S IBSAVE="1^^^"_IBTYPE_"^"_+IBITM_"^"_IBCMPNT
"RTN","IBCRBC1",174,0)
 ... D BITMCHG^IBCRBC2(RS,CS,+IBITM,IBEVDT,1,"","",IBIDRC,IBSAVE)
"RTN","IBCRBC1",175,0)
 ;
"RTN","IBCRBC1",176,0)
 Q
"RTN","IBCRBC11")
0^6^B9081129
"RTN","IBCRBC11",1,0)
IBCRBC11 ;ALB/ARH - RATES: BILL CALCULATION BILLABLE EVENTS ; 10-OCT-1998
"RTN","IBCRBC11",2,0)
 ;;2.0;INTEGRATED BILLING;**106,245**;21-MAR-94
"RTN","IBCRBC11",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRBC11",4,0)
 ;
"RTN","IBCRBC11",5,0)
 ; continuation of IBCRBC1
"RTN","IBCRBC11",6,0)
 ;
"RTN","IBCRBC11",7,0)
INPTDRG(IBIFN,RS,CS) ; Determine charges for INPATIENT DRG billable events
"RTN","IBCRBC11",8,0)
 ; - the billable events are DRG's, the Transfer DRG of the patient treating specialties movements,
"RTN","IBCRBC11",9,0)
 ;   pulled from the PTF record each time the charges are calculated (INPTPTF^IBCRCG)
"RTN","IBCRBC11",10,0)
 ; - each day of billable care is calculated separately in case a rate becomes in/active
"RTN","IBCRBC11",11,0)
 ; - if bedsection is ICU then allow ICU Charge Set only
"RTN","IBCRBC11",12,0)
 ;
"RTN","IBCRBC11",13,0)
 N IBX,IBBLITEM,IBCHGMTH,IBEVDT,IBIDRC,IBBS,IBITM,IBTYPE,IBCMPNT,IBSAVE I '$G(IBIFN)!'$G(CS) Q
"RTN","IBCRBC11",14,0)
 ;
"RTN","IBCRBC11",15,0)
 D INPTPTF^IBCRBG(IBIFN,CS)
"RTN","IBCRBC11",16,0)
 ;
"RTN","IBCRBC11",17,0)
 S IBTYPE=6,IBCMPNT=$P($G(^IBE(363.1,+CS,0)),U,4),IBX=$$CSBR^IBCRU3(CS),IBBLITEM=$P(IBX,U,4),IBCHGMTH=$P(IBX,U,5)
"RTN","IBCRBC11",18,0)
 S IBIDRC=+$G(^DGCR(399,+IBIFN,"MP")),IBIDRC=$G(^DIC(36,+IBIDRC,0)),IBIDRC=$P(IBIDRC,U,7)
"RTN","IBCRBC11",19,0)
 ;
"RTN","IBCRBC11",20,0)
 S IBBDIV=$P($G(^DGCR(399,+IBIFN,0)),U,22) ; bill's default division
"RTN","IBCRBC11",21,0)
 ;
"RTN","IBCRBC11",22,0)
 I IBBLITEM=4,IBCHGMTH=1 D  ; inpt/DRG/per diem
"RTN","IBCRBC11",23,0)
 . S IBEVDT="" F  S IBEVDT=$O(^TMP($J,"IBCRC-INDT",IBEVDT)) Q:IBEVDT=""  D
"RTN","IBCRBC11",24,0)
 .. ;
"RTN","IBCRBC11",25,0)
 .. S IBX=$G(^TMP($J,"IBCRC-INDT",IBEVDT)),IBITM=$P(IBX,U,4),IBBS=$P(IBX,U,2),IBDIV=$P(IBX,U,5) Q:'IBITM
"RTN","IBCRBC11",26,0)
 .. ;
"RTN","IBCRBC11",27,0)
 .. I '$$CHGICU^IBCRBC2(CS,IBBS) Q  ; check icu charges are applied to icu bedsection
"RTN","IBCRBC11",28,0)
 .. ;
"RTN","IBCRBC11",29,0)
 .. I $$CSDV^IBCRU3(CS,IBDIV,IBBDIV)<0 Q  ; check division
"RTN","IBCRBC11",30,0)
 .. ;
"RTN","IBCRBC11",31,0)
 .. S IBSAVE="1^^"_IBDIV_"^"_IBTYPE_"^"_IBITM_"^"_IBCMPNT_"^"_IBBS
"RTN","IBCRBC11",32,0)
 .. D BITMCHG^IBCRBC2(RS,CS,IBITM,IBEVDT,1,"","",IBIDRC,IBSAVE)
"RTN","IBCRBC11",33,0)
 K ^TMP($J,"IBCRC-INDT")
"RTN","IBCRBC11",34,0)
 Q
"RTN","IBCRBC11",35,0)
 ;
"RTN","IBCRBC11",36,0)
UNASSOC(IBIFN,RS,CS,IBMIARR) ; Determine charges for UNASSOCIATED billable events
"RTN","IBCRBC11",37,0)
 ; - the billable event is not associated with any data element on the bill
"RTN","IBCRBC11",38,0)
 ; - the item to charge is selected by the user from the list of billing items (363.21)
"RTN","IBCRBC11",39,0)
 ; - the items the user selected to add charges to the bill for are passed in in array IBMIARR
"RTN","IBCRBC11",40,0)
 ; - if the charge set is limited by region then either the items division or if no item division then the bill's
"RTN","IBCRBC11",41,0)
 ;   Default Division must be contained in the sets region
"RTN","IBCRBC11",42,0)
 ;
"RTN","IBCRBC11",43,0)
 N IBX,IBBLITEM,IBCHGMTH,IBIDRC,IBBDIV,IBI,IBITM,IBEVDT,IBTUNITS,IBDIV,IBRVCD,IBTYPE,IBCMPNT,IBSAVE
"RTN","IBCRBC11",44,0)
 I '$G(IBIFN)!'$G(CS)!'$G(IBMIARR) Q
"RTN","IBCRBC11",45,0)
 ;
"RTN","IBCRBC11",46,0)
 S IBTYPE=9,IBCMPNT=$P($G(^IBE(363.1,+CS,0)),U,4),IBX=$$CSBR^IBCRU3(CS),IBBLITEM=$P(IBX,U,4),IBCHGMTH=$P(IBX,U,5)
"RTN","IBCRBC11",47,0)
 S IBIDRC=+$G(^DGCR(399,+IBIFN,"MP")),IBIDRC=$G(^DIC(36,+IBIDRC,0)),IBIDRC=$P(IBIDRC,U,7)
"RTN","IBCRBC11",48,0)
 ;
"RTN","IBCRBC11",49,0)
 S IBBDIV=$P($G(^DGCR(399,+IBIFN,0)),U,22) ; bill's default division
"RTN","IBCRBC11",50,0)
 ;
"RTN","IBCRBC11",51,0)
 I IBBLITEM=9,IBCHGMTH=1 D  ; charge per item
"RTN","IBCRBC11",52,0)
 . S IBI=0 F  S IBI=$O(IBMIARR(RS,CS,IBI)) Q:'IBI  D
"RTN","IBCRBC11",53,0)
 .. S IBX=IBMIARR(RS,CS,IBI),IBITM=+$P(IBX,U,1),IBEVDT=$P(IBX,U,2)
"RTN","IBCRBC11",54,0)
 .. S IBTUNITS=$P(IBX,U,3),IBDIV=$P(IBX,U,4),IBRVCD=$P(IBX,U,5)
"RTN","IBCRBC11",55,0)
 .. ;
"RTN","IBCRBC11",56,0)
 .. I $$CSDV^IBCRU3(CS,IBDIV,IBBDIV)<0 Q  ; check division
"RTN","IBCRBC11",57,0)
 .. ;
"RTN","IBCRBC11",58,0)
 .. S IBSAVE=IBTUNITS_"^^"_IBDIV_"^"_IBTYPE_"^"_IBITM_"^"_IBCMPNT
"RTN","IBCRBC11",59,0)
 .. D BITMCHG^IBCRBC2(RS,CS,IBITM,IBEVDT,1,"",IBRVCD,IBIDRC,IBSAVE)
"RTN","IBCRBC11",60,0)
 Q
"RTN","IBCRBC2")
0^7^B24945366
"RTN","IBCRBC2",1,0)
IBCRBC2 ;ALB/ARH - RATES: BILL CALCULATION OF ITEM CHARGE ; 22-MAY-1996
"RTN","IBCRBC2",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,138,148,245**;21-MAR-94
"RTN","IBCRBC2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRBC2",4,0)
 ;
"RTN","IBCRBC2",5,0)
 ; Input:  RS     - rate schedule necessary to calculated modified charges
"RTN","IBCRBC2",6,0)
 ;         CS     - required, charge set which defines the charges to calculate
"RTN","IBCRBC2",7,0)
 ;         ITEM   - required, ptr to source item to be billed, type defined by billable item of the rate
"RTN","IBCRBC2",8,0)
 ;         EVDT   - date of event, to be used when searching for a charge effective date, default=DT
"RTN","IBCRBC2",9,0)
 ;         UNITS  - required, used only for Quantity:  # of units of Charge Item Charge for each Item
"RTN","IBCRBC2",10,0)
 ;         MOD    - CPT Modifier if any
"RTN","IBCRBC2",11,0)
 ;         INSRC  - special revenue code to use (from ins comp), if any (overrides set and item rv cd)
"RTN","IBCRBC2",12,0)
 ;         IDFRC  - different revenue codes to use, these replace the standard set in CM (DRC:SRC,DRC:SRC)
"RTN","IBCRBC2",13,0)
 ;         SAVE   - serveral data items not needed here but passed on to next step (store) in TMP array:
"RTN","IBCRBC2",14,0)
 ;                  TUNITS - required to add charge to bill, total # of the Item on the bill
"RTN","IBCRBC2",15,0)
 ;                  CPT    - default CPT to be added to the bill for the charge
"RTN","IBCRBC2",16,0)
 ;                  DIV    - division charges apply to
"RTN","IBCRBC2",17,0)
 ;                  TYPE   - type of item being billed - defines the source of the item on the bill
"RTN","IBCRBC2",18,0)
 ;                  ITMPTR - soft pointer to the item on the bill:  may be a multiple or file IFN
"RTN","IBCRBC2",19,0)
 ;                  CMPNT  - what component of the total charge: institutional or professional
"RTN","IBCRBC2",20,0)
 ;                  BEDS   - billable bedsection to use if not a bedsection item, if null uses set default
"RTN","IBCRBC2",21,0)
 ;                  PROV   - procedure provider
"RTN","IBCRBC2",22,0)
 ;                  CLINIC - procedures associated clinic
"RTN","IBCRBC2",23,0)
 ;                  IBOE   - Outpatient Encounter, pointer to #408.69
"RTN","IBCRBC2",24,0)
 ;
"RTN","IBCRBC2",25,0)
 ; Total charge is calculated:  X = UNITS * UNIT CHARGE of the item         (per unit charge (un-adjusted))
"RTN","IBCRBC2",26,0)
 ;                              Y = X modified by Rate Schedule Adjustment  (per unit charge (adjusted))
"RTN","IBCRBC2",27,0)
 ; the Units are used to calculate the per item charge: 30 pills for an rx, 1 bs per bs
"RTN","IBCRBC2",28,0)
 ; and the Tunits are the number of that Item on the bill: 1 rx of 30 pills, 11 days of bs stay
"RTN","IBCRBC2",29,0)
 ;
"RTN","IBCRBC2",30,0)
 ; Output: TMP($J,"IBCRCC", containing all chargable items and all related info needed to file them on the bill
"RTN","IBCRBC2",31,0)
 ;         each charge will have it's own entry, nothing combined (12 = per unit charge (adjusted), p13 = Tunits)
"RTN","IBCRBC2",32,0)
 ;         TMP is not killed on entry so each items charges are compiled and added to existing charges
"RTN","IBCRBC2",33,0)
 ;         
"RTN","IBCRBC2",34,0)
BITMCHG(RS,CS,ITEM,EVDT,UNITS,MOD,INSRC,IDFRC,SAVE) ; get bill charges for a specific item, rate schedule and charge set and date set into temp array
"RTN","IBCRBC2",35,0)
 ;
"RTN","IBCRBC2",36,0)
 N IBCS0,IBDRVCD,IBBS,IBCHGARR,IBI,IBCNT,IBLN,IBCI,IBRVCD,IBPPRV,IBCHRG,IBTCHRG,IBRCHRG,IBPCHRG,IBACHRG,IBBASE,IBCOM
"RTN","IBCRBC2",37,0)
 I '$G(ITEM)!'$G(CS)!'$G(UNITS) Q
"RTN","IBCRBC2",38,0)
 ;
"RTN","IBCRBC2",39,0)
 S RS=$G(RS),EVDT=$S(+$G(EVDT):+EVDT\1,1:DT),MOD=$G(MOD),INSRC=$G(INSRC),IDFRC=$G(IDFRC),SAVE=$G(SAVE)
"RTN","IBCRBC2",40,0)
 S IBCS0=$G(^IBE(363.1,+CS,0)),IBDRVCD=$P(IBCS0,U,5),IBPPRV=$P(SAVE,U,8)
"RTN","IBCRBC2",41,0)
 S IBBS=+ITEM I $P($G(^IBE(363.3,+$P(IBCS0,U,2),0)),U,4)'=1 S IBBS=$P(SAVE,U,7) I 'IBBS S IBBS=$P(IBCS0,U,6)
"RTN","IBCRBC2",42,0)
 I 'IBBS Q
"RTN","IBCRBC2",43,0)
 ;
"RTN","IBCRBC2",44,0)
 D ITMCHG^IBCRCC(CS,ITEM,EVDT,MOD,.IBCHGARR)
"RTN","IBCRBC2",45,0)
 ;
"RTN","IBCRBC2",46,0)
 S IBCNT=+$G(^TMP($J,"IBCRCC"))
"RTN","IBCRBC2",47,0)
 S IBI=0 F  S IBI=$O(IBCHGARR(IBI)) Q:'IBI  D
"RTN","IBCRBC2",48,0)
 . S IBLN=IBCHGARR(IBI),IBCI=+IBLN,IBCHRG=$P(IBLN,U,3),(IBPCHRG,IBRCHRG)="" Q:'IBCHRG  S IBBASE=$P(IBLN,U,4)
"RTN","IBCRBC2",49,0)
 . S IBRVCD=INSRC I 'IBRVCD S IBRVCD=$P(IBLN,U,2)
"RTN","IBCRBC2",50,0)
 . I 'IBRVCD S IBRVCD=$P($$RVLNK^IBCRU6(+ITEM,"",+CS),U,2) I 'IBRVCD S IBRVCD=IBDRVCD Q:'IBRVCD
"RTN","IBCRBC2",51,0)
 . I +IDFRC,+$P(IDFRC,IBRVCD_":",2) S IBRVCD=+$P(IDFRC,IBRVCD_":",2) Q:IBRVCD'?3N
"RTN","IBCRBC2",52,0)
 . ;
"RTN","IBCRBC2",53,0)
 . S IBCHRG=IBCHRG*UNITS
"RTN","IBCRBC2",54,0)
 . S IBCHRG=IBCHRG+IBBASE
"RTN","IBCRBC2",55,0)
 . S IBPCHRG=IBCHRG I +IBPPRV S IBPCHRG=$$PRVCHG^IBCRCC(CS,IBCHRG,IBPPRV,EVDT,ITEM)
"RTN","IBCRBC2",56,0)
 . S (IBCHRG,IBTCHRG)=+IBPCHRG
"RTN","IBCRBC2",57,0)
 . S IBACHRG=IBTCHRG I +RS,+IBTCHRG S IBRCHRG=$$RATECHG^IBCRCC(RS,IBTCHRG,EVDT),IBACHRG=+IBRCHRG
"RTN","IBCRBC2",58,0)
 . ;
"RTN","IBCRBC2",59,0)
 . S IBCNT=IBCNT+1,^TMP($J,"IBCRCC")=IBCNT
"RTN","IBCRBC2",60,0)
 . S ^TMP($J,"IBCRCC",IBCNT)=IBCI_U_CS_U_RS_U_ITEM_U_MOD_U_IBRVCD_U_IBBS_U_EVDT_U_IBCHRG_U_UNITS_U_IBTCHRG_U_IBACHRG_U_$G(SAVE)
"RTN","IBCRBC2",61,0)
 . ;
"RTN","IBCRBC2",62,0)
 . I (UNITS>1)!(+IBBASE) S IBCOM=$$COMMUB(CS,UNITS,IBBASE) I IBCOM'="" D COMMENT(IBCNT,IBCOM)
"RTN","IBCRBC2",63,0)
 . I $P(IBPCHRG,U,2)'="" S IBCOM=$P(IBPCHRG,U,2) I IBCOM'="" D COMMENT(IBCNT,IBCOM)
"RTN","IBCRBC2",64,0)
 . I $P(IBRCHRG,U,2)'="" S IBCOM=$P(IBRCHRG,U,2) I IBCOM'="" D COMMENT(IBCNT,IBCOM)
"RTN","IBCRBC2",65,0)
 Q
"RTN","IBCRBC2",66,0)
 ;
"RTN","IBCRBC2",67,0)
COMMENT(LINE,COMM) ; set comment into charge array for a particular line item
"RTN","IBCRBC2",68,0)
 I +$D(^TMP($J,"IBCRCC",+$G(LINE))) N IBX D
"RTN","IBCRBC2",69,0)
 . S IBX=$O(^TMP($J,"IBCRCC",+LINE,"CC",9999),-1) S IBX=IBX+1
"RTN","IBCRBC2",70,0)
 . S ^TMP($J,"IBCRCC",+LINE,"CC",IBX)=$G(COMM)
"RTN","IBCRBC2",71,0)
 Q
"RTN","IBCRBC2",72,0)
 ;
"RTN","IBCRBC2",73,0)
COMMUB(CS,UNITS,BASE) ; return comment for special units and base
"RTN","IBCRBC2",74,0)
 N IBX,IBY,IBCM S IBX="",IBY="Charge calculated"
"RTN","IBCRBC2",75,0)
 S IBCM=$P($G(^IBE(363.1,+CS,0)),U,2),IBCM=$P($G(^IBE(363.3,+IBCM,0)),U,5)
"RTN","IBCRBC2",76,0)
 S IBCM=$S(IBCM=4:"Miles",IBCM=5:"SubUnits",IBCM=6:"Hours",1:"")
"RTN","IBCRBC2",77,0)
 I +$G(UNITS) S IBX=IBY_" for "_UNITS_" "_IBCM,IBY=""
"RTN","IBCRBC2",78,0)
 I +$G(BASE) S IBX=IBY_IBX_" with a Base Charge="_$J(BASE,0,2)
"RTN","IBCRBC2",79,0)
 Q IBX
"RTN","IBCRBC2",80,0)
 ;
"RTN","IBCRBC2",81,0)
ALLBEDS(RS,CS,EVDT,RC,DFRC,SAVE) ; get charges for all bedsections active on date of visit
"RTN","IBCRBC2",82,0)
 ; each effective date supercedes all previous effective date, regardless of the item
"RTN","IBCRBC2",83,0)
 ; used for per diem rates where the charges are associated with a bedsection, but the item being billed is not
"RTN","IBCRBC2",84,0)
 ; a bedsection, so the count of the item on the bill is found and applied as the units to all bedsections active
"RTN","IBCRBC2",85,0)
 ; on the event date  (the 3 opt visit dates on a bill are the units for the Outpatient Visit bedsection charge)
"RTN","IBCRBC2",86,0)
 ;
"RTN","IBCRBC2",87,0)
 N IBITM,IBITEMS I '$G(CS)!'$G(EVDT) Q
"RTN","IBCRBC2",88,0)
 ;
"RTN","IBCRBC2",89,0)
 D CSALL^IBCRCU1(CS,EVDT,.IBITEMS)
"RTN","IBCRBC2",90,0)
 ;
"RTN","IBCRBC2",91,0)
 I +IBITEMS S IBITM="" F  S IBITM=$O(IBITEMS(IBITM)) Q:'IBITM  D
"RTN","IBCRBC2",92,0)
 . D BITMCHG($G(RS),CS,IBITM,EVDT,1,"",$G(RC),$G(DFRC),$G(SAVE))
"RTN","IBCRBC2",93,0)
 Q
"RTN","IBCRBC2",94,0)
 ;
"RTN","IBCRBC2",95,0)
 ;
"RTN","IBCRBC2",96,0)
CPTUNITS(CS,CHGMTH,ITLINE) ; return CPT units based on Charge Method and CPT data
"RTN","IBCRBC2",97,0)
 ; Input:  CS is the related Charge Set
"RTN","IBCRBC2",98,0)
 ;         CHGMTH is the Rate Schedule Charge Method (363.3, .05)
"RTN","IBCRBC2",99,0)
 ;         ITLINE is item data from CPT^IBCRBG1
"RTN","IBCRBC2",100,0)
 ; Output: calculated units for CPT, 1 or calculated for miles/minutes/hours
"RTN","IBCRBC2",101,0)
 N IBUNIT S IBUNIT=1,CHGMTH=$G(CHGMTH),ITLINE=$G(ITLINE),CS=$G(CS)
"RTN","IBCRBC2",102,0)
 I CHGMTH=4 S IBUNIT=+$P(ITLINE,U,8) ; miles
"RTN","IBCRBC2",103,0)
 I CHGMTH=5 S IBUNIT=+$P(ITLINE,U,7) ; minutes
"RTN","IBCRBC2",104,0)
 I CHGMTH=6 S IBUNIT=+$P(ITLINE,U,9) ; hours
"RTN","IBCRBC2",105,0)
 S IBUNIT=$$CPTUNITS^IBCRCU1(CS,IBUNIT)
"RTN","IBCRBC2",106,0)
 Q IBUNIT
"RTN","IBCRBC2",107,0)
 ;
"RTN","IBCRBC2",108,0)
CHGOTH(IBIFN,RS,EVDT) ; check if the Rate Schedule charges are applicable to the event date for the bill
"RTN","IBCRBC2",109,0)
 ; this is relevent to RC v2.0 and type of care of Other
"RTN","IBCRBC2",110,0)
 ; both Rate Schedule is SNF and event date is SNF care or neither can be otherwise no charge
"RTN","IBCRBC2",111,0)
 ; SNF charges can't be used for non-SNF care and non-SNF charges can't be used for SNF care
"RTN","IBCRBC2",112,0)
 ; Output: returns true if charges and bill date are of same type, SNF or non-SNF
"RTN","IBCRBC2",113,0)
 N IBOK,IBRSTY,IBDTTY S (IBRSTY,IBDTTY)=0,IBOK=1
"RTN","IBCRBC2",114,0)
 I $G(EVDT)<$$VERSDT^IBCRU8(2) G CHGOTHQ
"RTN","IBCRBC2",115,0)
 I '$G(IBIFN)!'$G(RS) G CHGOTHQ
"RTN","IBCRBC2",116,0)
 ;
"RTN","IBCRBC2",117,0)
 S IBRSTY=$$RSOTHER^IBCRU8(RS) ; are charges for other type of care
"RTN","IBCRBC2",118,0)
 S IBDTTY=$$BOTHER^IBCU3(IBIFN,EVDT) ; is date other type of care
"RTN","IBCRBC2",119,0)
 ;
"RTN","IBCRBC2",120,0)
 I +IBRSTY,'IBDTTY S IBOK=0
"RTN","IBCRBC2",121,0)
 I 'IBRSTY,+IBDTTY S IBOK=0
"RTN","IBCRBC2",122,0)
 ;
"RTN","IBCRBC2",123,0)
CHGOTHQ Q IBOK
"RTN","IBCRBC2",124,0)
 ;
"RTN","IBCRBC2",125,0)
CHGICU(CS,BS) ; check if charge and bedsection match relative to ICU RC 2.0+, compares Charge Set Name and Bedsection
"RTN","IBCRBC2",126,0)
 ; both the charge set and the bedsection have to be ICU or neither of them can be ICU otherwise no charge
"RTN","IBCRBC2",127,0)
 ; ICU charges can't be used with non-ICU bedsections and non-ICU charges can't be used with ICU bedsection
"RTN","IBCRBC2",128,0)
 ; Output: returns true if charges and bedsection are of same type, ICU or non-ICU
"RTN","IBCRBC2",129,0)
 N IBCSICU,IBCSN,IBICU,IBOK S (IBOK,IBCSICU)=0,BS=+$G(BS)
"RTN","IBCRBC2",130,0)
 S IBICU=$$MCCRUTL^IBCRU1("ICU",5)
"RTN","IBCRBC2",131,0)
 S IBCSN=$G(^IBE(363.1,+$G(CS),0)) I $E(IBCSN,1,2)'="RC" S IBOK=1
"RTN","IBCRBC2",132,0)
 I $P(IBCSN,U,1)["ICU" S IBCSICU=1 ; charge set is icu
"RTN","IBCRBC2",133,0)
 ;
"RTN","IBCRBC2",134,0)
 I BS=IBICU,+IBCSICU S IBOK=1 ; both bedsection and charge set are icu
"RTN","IBCRBC2",135,0)
 I BS'=IBICU,'IBCSICU S IBOK=1 ; niether bedsection nor charge set are icu
"RTN","IBCRBC2",136,0)
 Q IBOK
"RTN","IBCRBCA1")
0^8^B18875246
"RTN","IBCRBCA1",1,0)
IBCRBCA1 ;ALB/ARH - RATES: BILL CALCULATION ADJUST MSPD ; 01-OCT-03
"RTN","IBCRBCA1",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBCRBCA1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRBCA1",4,0)
 ;
"RTN","IBCRBCA1",5,0)
 ;
"RTN","IBCRBCA1",6,0)
MULTCPT ; calculate the multiple surgical procedure discount for the Reasonable Charges Facility Billing Rate
"RTN","IBCRBCA1",7,0)
 ; if multiple surgical procedures are performed for the same encounter then apply the discount
"RTN","IBCRBCA1",8,0)
 ; this can only be calculated after all charges on the bill have been accumulated
"RTN","IBCRBCA1",9,0)
 ;                Billing Rate =       RC FACILITY
"RTN","IBCRBCA1",10,0)
 ;                Billable Event =     PROCEDURE
"RTN","IBCRBCA1",11,0)
 ;                Surgical CPT Range = selected based on date
"RTN","IBCRBCA1",12,0)
 ; 
"RTN","IBCRBCA1",13,0)
 ; Input:  ^TMP($J,"IBCRCC" array of calculated bill charges from BITMCHG^IBCRBC2
"RTN","IBCRBCA1",14,0)
 ; Output: ^TMP($J,"IBCRCC" array of calculated bill charges with charges adusted for MSPD
"RTN","IBCRBCA1",15,0)
 ; 
"RTN","IBCRBCA1",16,0)
 N IBI,IBLN,IBCS,IBCPT,IBCSBR,IBGRP,IBCNT,IBC,IBDSCNT,IBCHRG,IBUNITS,IBRS,IBEVDT,IBTCHRG,IBRCHRG,IBACHRG,IBCHGARR
"RTN","IBCRBCA1",17,0)
 N IBDT,IBCLIN,IBOE,IBTMPA,IBTMPS,IBCOM
"RTN","IBCRBCA1",18,0)
 ;
"RTN","IBCRBCA1",19,0)
 S IBI=0 F  S IBI=$O(^TMP($J,"IBCRCC",IBI))  Q:'IBI  D
"RTN","IBCRBCA1",20,0)
 . S IBLN=$G(^TMP($J,"IBCRCC",IBI)),IBCS=$P(IBLN,U,2),IBCPT=+$P(IBLN,U,4)
"RTN","IBCRBCA1",21,0)
 . S IBCHRG=+$P(IBLN,U,9),IBDT=+$P(IBLN,U,8),IBCLIN=+$P(IBLN,U,21),IBOE=+$P(IBLN,U,22) I 'IBCHRG Q
"RTN","IBCRBCA1",22,0)
 . S IBCSBR=$$CSBR^IBCRU3(IBCS)
"RTN","IBCRBCA1",23,0)
 . ;
"RTN","IBCRBCA1",24,0)
 . I $P($G(^IBE(363.3,+$P(IBCSBR,U,3),0)),U,1)'["RC FACILITY" Q
"RTN","IBCRBCA1",25,0)
 . I $P(IBCSBR,U,1)'["PROCEDURE" Q
"RTN","IBCRBCA1",26,0)
 . ;I '((IBCPT'<10000)&(IBCPT'>69999))&'((IBCPT'<93501)&(IBCPT'>93533)) Q
"RTN","IBCRBCA1",27,0)
 . I '$$INMSPD(IBCPT,IBDT) Q
"RTN","IBCRBCA1",28,0)
 . ;
"RTN","IBCRBCA1",29,0)
 . S IBTMPA(IBI)=IBCHRG_U_IBDT_U_IBCLIN_U_IBOE I +IBOE S IBTMPS(IBDT,IBCLIN,IBOE)=""
"RTN","IBCRBCA1",30,0)
 ;
"RTN","IBCRBCA1",31,0)
 S IBI=0 F  S IBI=$O(IBTMPA(IBI)) Q:'IBI  D
"RTN","IBCRBCA1",32,0)
 . S IBLN=IBTMPA(IBI),IBCHRG=+$P(IBLN,U,1),IBDT=+$P(IBLN,U,2),IBCLIN=+$P(IBLN,U,3),IBOE=+$P(IBLN,U,4)
"RTN","IBCRBCA1",33,0)
 . I 'IBOE S IBOE=$O(IBTMPS(IBDT,IBCLIN,IBOE))
"RTN","IBCRBCA1",34,0)
 . S IBGRP=IBDT_U_IBCLIN_U_IBOE
"RTN","IBCRBCA1",35,0)
 . S IBCHGARR(IBGRP,-IBCHRG,IBI)=""
"RTN","IBCRBCA1",36,0)
 ;
"RTN","IBCRBCA1",37,0)
 S IBGRP=0 F  S IBGRP=$O(IBCHGARR(IBGRP)) Q:'IBGRP  D
"RTN","IBCRBCA1",38,0)
 . S IBCNT=0,IBC="" F  S IBC=$O(IBCHGARR(IBGRP,IBC)) Q:IBC=""  D
"RTN","IBCRBCA1",39,0)
 .. S IBI=0 F  S IBI=$O(IBCHGARR(IBGRP,IBC,IBI)) Q:'IBI  D
"RTN","IBCRBCA1",40,0)
 ... S IBCNT=IBCNT+1,IBDSCNT=$S(IBCNT=1:1,IBCNT=2:.25,IBCNT=3:.15,1:0) Q:IBDSCNT=1
"RTN","IBCRBCA1",41,0)
 ... S IBLN=$G(^TMP($J,"IBCRCC",IBI)) Q:IBLN=""
"RTN","IBCRBCA1",42,0)
 ... S IBCHRG=$P(IBLN,U,9),IBUNITS=$P(IBLN,U,10),IBRS=$P(IBLN,U,3),IBEVDT=$P(IBLN,U,8)
"RTN","IBCRBCA1",43,0)
 ... ;
"RTN","IBCRBCA1",44,0)
 ... S IBCHRG=IBCHRG*IBDSCNT
"RTN","IBCRBCA1",45,0)
 ... S IBTCHRG=IBCHRG
"RTN","IBCRBCA1",46,0)
 ... S IBACHRG=IBTCHRG I +IBRS S IBRCHRG=$$RATECHG^IBCRCC(+IBRS,IBTCHRG,+IBEVDT),IBACHRG=+IBRCHRG
"RTN","IBCRBCA1",47,0)
 ... ;
"RTN","IBCRBCA1",48,0)
 ... ;I IBCHRG'>0 K ^TMP($J,"IBCRCC",IBI) S ^TMP($J,"IBCRCC")=$G(^TMP($J,"IBCRCC"))-1 Q
"RTN","IBCRBCA1",49,0)
 ... S $P(^TMP($J,"IBCRCC",IBI),U,9)=+$FN(IBCHRG,"",2)
"RTN","IBCRBCA1",50,0)
 ... S $P(^TMP($J,"IBCRCC",IBI),U,11)=+$FN(IBTCHRG,"",2)
"RTN","IBCRBCA1",51,0)
 ... S $P(^TMP($J,"IBCRCC",IBI),U,12)=+$FN(IBACHRG,"",2)
"RTN","IBCRBCA1",52,0)
 ... ;
"RTN","IBCRBCA1",53,0)
 ... S IBCOM="Multiple Surgical Procedure Discount "_(IBDSCNT*100)_"% of "_$J($P(IBLN,U,9),0,2) D COMMENT^IBCRBC2(IBI,IBCOM)
"RTN","IBCRBCA1",54,0)
 ... I $P(IBRCHRG,U,2)'="" S IBCOM=$P(IBRCHRG,U,2) D COMMENT^IBCRBC2(IBI,IBCOM)
"RTN","IBCRBCA1",55,0)
 ;
"RTN","IBCRBCA1",56,0)
 Q
"RTN","IBCRBCA1",57,0)
 ;
"RTN","IBCRBCA1",58,0)
 ;
"RTN","IBCRBCA1",59,0)
 ;
"RTN","IBCRBCA1",60,0)
INMSPD(CPT,DATE) ; return true if Multiple Surgical Procedure Discount should be applied to procedure on date
"RTN","IBCRBCA1",61,0)
 ; dependent on date of procedure or version of charges
"RTN","IBCRBCA1",62,0)
 N IBFND,IBEND,LABEL,IBI,IBJ,IBLN,IBCPT,IBCPT1,IBCPT2 S (IBFND,IBEND)=0 I $G(DATE)'?7N S DATE=DT
"RTN","IBCRBCA1",63,0)
 ;
"RTN","IBCRBCA1",64,0)
 S LABEL="MSPDL2" I DATE<$$VERSDT^IBCRU8(2) S LABEL="MSPDL1"
"RTN","IBCRBCA1",65,0)
 ;
"RTN","IBCRBCA1",66,0)
 I +$G(CPT) F IBI=1:1 S IBLN=$P($T(@LABEL+IBI),";;",2) Q:IBLN=""  D  I +IBEND Q
"RTN","IBCRBCA1",67,0)
 . F IBJ=1:1 S IBCPT=$P(IBLN,",",IBJ) Q:IBCPT=""  D  I +IBEND Q
"RTN","IBCRBCA1",68,0)
 .. S IBCPT1=$P(IBCPT,"-",1),IBCPT2=$P(IBCPT,"-",2) I IBCPT2="" S IBCPT2=IBCPT1
"RTN","IBCRBCA1",69,0)
 .. I CPT=IBCPT1 S IBFND=1,IBEND=1 Q
"RTN","IBCRBCA1",70,0)
 .. I CPT=IBCPT2 S IBFND=1,IBEND=1 Q
"RTN","IBCRBCA1",71,0)
 .. I CPT'<IBCPT1,CPT'>IBCPT2 S IBFND=1,IBEND=1 Q
"RTN","IBCRBCA1",72,0)
 .. I CPT<IBCPT2 S IBEND=1
"RTN","IBCRBCA1",73,0)
 Q IBFND
"RTN","IBCRBCA1",74,0)
 ;
"RTN","IBCRBCA1",75,0)
 ;
"RTN","IBCRBCA1",76,0)
 ;
"RTN","IBCRBCA1",77,0)
MSPDL1 ; Procedures included in Multiple Surgical Procedure Discount in RC v1.x
"RTN","IBCRBCA1",78,0)
 ;;10000-69999,93501-93533
"RTN","IBCRBCA1",79,0)
 ;;
"RTN","IBCRBCA1",80,0)
MSPDL2 ; Procedures included in Multiple Surgical Procedure Discount in RC v2 (3440)
"RTN","IBCRBCA1",81,0)
 ;;10021-11976,12001-15851,15876-19260,19316-20650,20670-21300,21325-21355,21390-27446,27496-28899,
"RTN","IBCRBCA1",82,0)
 ;;29800-30220,30310-31205,31231-31420,31502-33249,33284-35903,36260-36425,36468-36491,36530-37209,
"RTN","IBCRBCA1",83,0)
 ;;37500-38129,38220-38221,38300-38760,39400-40801,40805-42808,42810-43750,43760-46500,46604-47011,
"RTN","IBCRBCA1",84,0)
 ;;47370-47579,47630-48999,49080-49659,49999-50562,50590-51797,51880-58679,58800-61623,61626-61791,
"RTN","IBCRBCA1",85,0)
 ;;61880-62230,62263-62365,63001-63615,63660-64530,64585-65175,65235-65426,65435-65436,65600-65755,
"RTN","IBCRBCA1",86,0)
 ;;65770-67450,67505-67810,67825-67935,67950-68020,68100-68135,68320-68750,68770,68810-69150,69205,
"RTN","IBCRBCA1",87,0)
 ;;69220-69700,69711-69979,91122,92018,92230-92235,92502,92511,92973-92977,92980-92998,93501-93533,
"RTN","IBCRBCA1",88,0)
 ;;93580-93623,93631,93650-93652,95250,95990,96520-96571,96920-96999,99170,103857,103863,104656,104667,
"RTN","IBCRBCA1",89,0)
 ;;104730,104929,105215,105789,105818,106045-106049,106219-106221,106675,106902,106911,106915-106916,
"RTN","IBCRBCA1",90,0)
 ;;106937,
"RTN","IBCRBCA1",91,0)
 ;;
"RTN","IBCRBCA2")
0^9^B44227203
"RTN","IBCRBCA2",1,0)
IBCRBCA2 ;ALB/ARH - RATES: BILL CALCULATION ADJUST PSB ; 01-OCT-03
"RTN","IBCRBCA2",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBCRBCA2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRBCA2",4,0)
 ;
"RTN","IBCRBCA2",5,0)
 ;
"RTN","IBCRBCA2",6,0)
PSB ; calculate the primary/secondary bundled procedure discount for the Reasonable Charges Facility Billing Rate
"RTN","IBCRBCA2",7,0)
 ; if both primary and secondary procedures are performed for the same encounter then apply the discount
"RTN","IBCRBCA2",8,0)
 ; this can only be calculated after all charges on the bill have been accumulated
"RTN","IBCRBCA2",9,0)
 ; discount began with RC v2.0 since primary were exported with cost of secondary included, so if secondary is 
"RTN","IBCRBCA2",10,0)
 ; preformed then the cost of the two must be reduced, total cost of both must be equal primary charge
"RTN","IBCRBCA2",11,0)
 ;
"RTN","IBCRBCA2",12,0)
 ;                Billing Rate =       RC FACILITY
"RTN","IBCRBCA2",13,0)
 ;                Billable Event =     PROCEDURE
"RTN","IBCRBCA2",14,0)
 ;                CPT Range =          selected based on date
"RTN","IBCRBCA2",15,0)
 ; 
"RTN","IBCRBCA2",16,0)
 ; Input:  ^TMP($J,"IBCRCC" array of calculated bill charges from BITMCHG^IBCRBC2
"RTN","IBCRBCA2",17,0)
 ; Output: ^TMP($J,"IBCRCC" array of calculated bill charges with charges adusted for PSB
"RTN","IBCRBCA2",18,0)
 ; 
"RTN","IBCRBCA2",19,0)
 N IBI,IBLN,IBCS,IBCPT,IBCSBR,IBGRP,IBCNT,IBC,IBDSCNT,IBCHRG,IBUNITS,IBRS,IBEVDT,IBTCHRG,IBRCHRG,IBACHRG,IBCHGARR
"RTN","IBCRBCA2",20,0)
 N IBDT,IBCLIN,IBOE,IBTMPA,IBTMPS,IBTCHG1,IBTCHG2,IBDSI,IBPPSB,IBCOM
"RTN","IBCRBCA2",21,0)
 ;
"RTN","IBCRBCA2",22,0)
 S IBI=0 F  S IBI=$O(^TMP($J,"IBCRCC",IBI))  Q:'IBI  D
"RTN","IBCRBCA2",23,0)
 . S IBLN=$G(^TMP($J,"IBCRCC",IBI)),IBCS=$P(IBLN,U,2),IBCPT=+$P(IBLN,U,4)
"RTN","IBCRBCA2",24,0)
 . S IBCHRG=+$P(IBLN,U,9),IBDT=+$P(IBLN,U,8),IBCLIN=+$P(IBLN,U,21),IBOE=+$P(IBLN,U,22) I 'IBCHRG Q
"RTN","IBCRBCA2",25,0)
 . S IBCSBR=$$CSBR^IBCRU3(IBCS)
"RTN","IBCRBCA2",26,0)
 . ;
"RTN","IBCRBCA2",27,0)
 . I $P($G(^IBE(363.3,+$P(IBCSBR,U,3),0)),U,1)'["RC FACILITY" Q
"RTN","IBCRBCA2",28,0)
 . I $P(IBCSBR,U,1)'["PROCEDURE" Q
"RTN","IBCRBCA2",29,0)
 . ;
"RTN","IBCRBCA2",30,0)
 . S IBPPSB=$$INPSB(IBCPT,IBDT) I 'IBPPSB Q
"RTN","IBCRBCA2",31,0)
 . ;
"RTN","IBCRBCA2",32,0)
 . S IBTMPA(IBI)=IBCHRG_U_IBDT_U_IBCLIN_U_IBOE_U_IBPPSB I +IBOE S IBTMPS(IBDT,IBCLIN,IBOE)=""
"RTN","IBCRBCA2",33,0)
 ;
"RTN","IBCRBCA2",34,0)
 S IBI=0 F  S IBI=$O(IBTMPA(IBI)) Q:'IBI  D
"RTN","IBCRBCA2",35,0)
 . S IBLN=IBTMPA(IBI),IBCHRG=+$P(IBLN,U,1),IBDT=+$P(IBLN,U,2),IBCLIN=+$P(IBLN,U,3),IBPPSB=+$P(IBLN,U,5)
"RTN","IBCRBCA2",36,0)
 . S IBOE=+$P(IBLN,U,4) I 'IBOE S IBOE=$O(IBTMPS(IBDT,IBCLIN,IBOE))
"RTN","IBCRBCA2",37,0)
 . S IBGRP=IBDT_U_IBCLIN_U_IBOE
"RTN","IBCRBCA2",38,0)
 . S IBCHGARR(IBGRP,IBPPSB)=+$G(IBCHGARR(IBGRP,IBPPSB))+IBCHRG
"RTN","IBCRBCA2",39,0)
 . S IBCHGARR(IBGRP,IBPPSB,IBI)=""
"RTN","IBCRBCA2",40,0)
 ;
"RTN","IBCRBCA2",41,0)
 S IBGRP=0 F  S IBGRP=$O(IBCHGARR(IBGRP)) Q:'IBGRP  D
"RTN","IBCRBCA2",42,0)
 . ;
"RTN","IBCRBCA2",43,0)
 . S IBTCHG1=+$G(IBCHGARR(IBGRP,1)) Q:'IBTCHG1
"RTN","IBCRBCA2",44,0)
 . S IBTCHG2=+$G(IBCHGARR(IBGRP,2)) Q:'IBTCHG2
"RTN","IBCRBCA2",45,0)
 . ;
"RTN","IBCRBCA2",46,0)
 . S IBDSI=IBTCHG1*.6 I IBDSI>IBTCHG2 S IBDSI=IBTCHG2 ; lesser of 60% of primary or secondary
"RTN","IBCRBCA2",47,0)
 . ; 
"RTN","IBCRBCA2",48,0)
 . S IBDSCNT(1)=(IBTCHG1-IBDSI)/IBTCHG1 ; percentage of primary
"RTN","IBCRBCA2",49,0)
 . S IBDSCNT(2)=(IBDSI)/IBTCHG2 ; percentage of secondary
"RTN","IBCRBCA2",50,0)
 . ;
"RTN","IBCRBCA2",51,0)
 . S IBCNT=0 F IBC=1,2 S IBDSCNT=IBDSCNT(IBC) D
"RTN","IBCRBCA2",52,0)
 .. S IBI=0 F  S IBI=$O(IBCHGARR(IBGRP,IBC,IBI)) Q:'IBI  D
"RTN","IBCRBCA2",53,0)
 ... S IBCNT=IBCNT+1
"RTN","IBCRBCA2",54,0)
 ... S IBLN=$G(^TMP($J,"IBCRCC",IBI)) Q:IBLN=""
"RTN","IBCRBCA2",55,0)
 ... S IBCHRG=$P(IBLN,U,9),IBUNITS=$P(IBLN,U,10),IBRS=$P(IBLN,U,3),IBEVDT=$P(IBLN,U,8)
"RTN","IBCRBCA2",56,0)
 ... ;
"RTN","IBCRBCA2",57,0)
 ... S IBCHRG=IBCHRG*IBDSCNT
"RTN","IBCRBCA2",58,0)
 ... S IBTCHRG=IBCHRG
"RTN","IBCRBCA2",59,0)
 ... S IBACHRG=IBTCHRG I +IBRS S IBRCHRG=$$RATECHG^IBCRCC(+IBRS,IBTCHRG,+IBEVDT),IBACHRG=+IBRCHRG
"RTN","IBCRBCA2",60,0)
 ... ;
"RTN","IBCRBCA2",61,0)
 ... ;I IBCHRG'>0 K ^TMP($J,"IBCRCC",IBI) S ^TMP($J,"IBCRCC")=$G(^TMP($J,"IBCRCC"))-1 Q
"RTN","IBCRBCA2",62,0)
 ... S $P(^TMP($J,"IBCRCC",IBI),U,9)=+$FN(IBCHRG,"",2)
"RTN","IBCRBCA2",63,0)
 ... S $P(^TMP($J,"IBCRCC",IBI),U,11)=+$FN(IBTCHRG,"",2)
"RTN","IBCRBCA2",64,0)
 ... S $P(^TMP($J,"IBCRCC",IBI),U,12)=+$FN(IBACHRG,"",2)
"RTN","IBCRBCA2",65,0)
 ... ;
"RTN","IBCRBCA2",66,0)
 ... S IBCOM="Primary/Secondary Discount "_$J((IBDSCNT*100),0,2)_"% of "_$J($P(IBLN,U,9),0,2) D COMMENT^IBCRBC2(IBI,IBCOM)
"RTN","IBCRBCA2",67,0)
 ... I $P(IBRCHRG,U,2)'="" S IBCOM=$P(IBRCHRG,U,2) D COMMENT^IBCRBC2(IBI,IBCOM)
"RTN","IBCRBCA2",68,0)
 ;
"RTN","IBCRBCA2",69,0)
 Q
"RTN","IBCRBCA2",70,0)
 ;
"RTN","IBCRBCA2",71,0)
 ;
"RTN","IBCRBCA2",72,0)
 ;
"RTN","IBCRBCA2",73,0)
INPSB(CPT,DATE) ; return value of CPT in Primary/Secondary Bundling
"RTN","IBCRBCA2",74,0)
 ; Output: 1 - Primary Bundled, 2 Secondary Bundled
"RTN","IBCRBCA2",75,0)
 N IBFND,LABEL,IBI,IBJ,IBLN,IBCPT,IBCPT1,IBCPT2,IBEND,IBPSB S (IBPSB,IBFND,IBEND)=0 I $G(DATE)'?7N S DATE=DT
"RTN","IBCRBCA2",76,0)
 I DATE<$$VERSDT^IBCRU8(2) G INPSBQ
"RTN","IBCRBCA2",77,0)
 ;
"RTN","IBCRBCA2",78,0)
 I +$G(CPT) F LABEL="PSB2P","PSB2S" S IBPSB=IBPSB+1,IBEND=0 D  I +IBFND Q
"RTN","IBCRBCA2",79,0)
 . F IBI=1:1 S IBLN=$P($T(@LABEL+IBI),";;",2) Q:IBLN=""  D  I +IBEND Q
"RTN","IBCRBCA2",80,0)
 .. F IBJ=1:1 S IBCPT=$P(IBLN,",",IBJ) Q:IBCPT=""  D  I +IBEND Q
"RTN","IBCRBCA2",81,0)
 ... S IBCPT1=$P(IBCPT,"-",1),IBCPT2=$P(IBCPT,"-",2) I IBCPT2="" S IBCPT2=IBCPT1
"RTN","IBCRBCA2",82,0)
 ... I CPT=IBCPT1 S IBFND=IBPSB,IBEND=1 Q
"RTN","IBCRBCA2",83,0)
 ... I CPT=IBCPT2 S IBFND=IBPSB,IBEND=1 Q
"RTN","IBCRBCA2",84,0)
 ... I CPT'<IBCPT1,CPT'>IBCPT2 S IBFND=IBPSB,IBEND=1 Q
"RTN","IBCRBCA2",85,0)
 ... I CPT<IBCPT2 S IBEND=1
"RTN","IBCRBCA2",86,0)
 ;
"RTN","IBCRBCA2",87,0)
INPSBQ Q IBFND
"RTN","IBCRBCA2",88,0)
 ;
"RTN","IBCRBCA2",89,0)
 ;
"RTN","IBCRBCA2",90,0)
 ;
"RTN","IBCRBCA2",91,0)
PSB2P ; Procedures included in Primary Bundled RC v2 (5082)
"RTN","IBCRBCA2",92,0)
 ;;10021-38206,38220-43750,43760-61791,61795-64530,64553-65755,65770-69700,69711-71552,72010-72158,
"RTN","IBCRBCA2",93,0)
 ;;72170-72197,72200-73223,73500-73723,74000-74183,74190-74327,74340-75555,75600-75891,75894-75953,
"RTN","IBCRBCA2",94,0)
 ;;75960-75984,75992-76000,76006-76066,76071-76080,76086-76091,76095-76150,76355-76360,76370-76380,
"RTN","IBCRBCA2",95,0)
 ;;76400,76496-77295,77300-77470,77520-77789,77799-78264,78270-78350,78399-78458,78460-78483,78494-78807,
"RTN","IBCRBCA2",96,0)
 ;;78999-79440,79999,80500-80502,85060-85097,86077-86079,86485-86586,86850-86906,86920-86932,86945-86999,
"RTN","IBCRBCA2",97,0)
 ;;88104-88125,88160-88162,88172-88173,88180-88182,88299-88365,89100-89105,89130-89141,89250-89264,
"RTN","IBCRBCA2",98,0)
 ;;89350,89360,90375-90376,90581,90636,90657-90659,90693,90723,90732,90740-90748,90782-90935,90945,
"RTN","IBCRBCA2",99,0)
 ;;91000-92371,92499-92502,92511-92557,92561-92589,92596,92700-93005,93017-93313,93315-93316,93318-93533,
"RTN","IBCRBCA2",100,0)
 ;;93580-93744,93786,93797-94750,94770-95117,95144-96155,96520-96999,98925-98942,99170,99195,99201-99215,
"RTN","IBCRBCA2",101,0)
 ;;99241-99440,100273-100738,101123,101200,101238,101267,101318,101369,101412,101448,101529-101532,
"RTN","IBCRBCA2",102,0)
 ;;101535-101536,101540,101543,101545,101555-101558,101563,101573,101575-101576,101580,102545,102547-102558,
"RTN","IBCRBCA2",103,0)
 ;;103413-103416,103424,103481,103550,103639-103643,103696,103703-103704,103772,103821,103853,103857-103861,
"RTN","IBCRBCA2",104,0)
 ;;103863,103882,103910,103914,103940,103943-103947,104192-104194,104211,104215,104220,104224-104225,
"RTN","IBCRBCA2",105,0)
 ;;104348,104363-104390,104418-104435,104450,104455-104457,104649,104654-104657,104666-104667,104669,
"RTN","IBCRBCA2",106,0)
 ;;104675-104678,104721-104722,104728-104732,104749-104754,104843-104848,104929,104931,104939-104940,
"RTN","IBCRBCA2",107,0)
 ;;104942-104943,104974,104976-104978,104986,105159-105312,105766-105789,105805-105818,105877,105880,
"RTN","IBCRBCA2",108,0)
 ;;105882,105906-105919,105924-105925,105930,105936,105938,105941,105944,105949,105952,106040-106058,
"RTN","IBCRBCA2",109,0)
 ;;106089,106098-106102,106191-106210,106219-106221,106248-106249,106251-106286,106305-106307,106311,
"RTN","IBCRBCA2",110,0)
 ;;106343-106347,106675,106789-106802,106810-106848,106900-106919,106923,106927-106967,106972,106975,
"RTN","IBCRBCA2",111,0)
 ;;106980,106982,106985,107055-107058,
"RTN","IBCRBCA2",112,0)
 ;;
"RTN","IBCRBCA2",113,0)
PSB2S ; Procedures included in Secondary Bundled in RC v2 (432)
"RTN","IBCRBCA2",114,0)
 ;;74328-74330,75893,75989,76001-76005,76350,76362,76393-76394,76490,77790,78890-78891,79900,80103,
"RTN","IBCRBCA2",115,0)
 ;;90296,90378-90379,90385,90389-90396,90471-90472,90476-90477,90585-90634,90645-90648,90665,90675-90692,
"RTN","IBCRBCA2",116,0)
 ;;90700-90721,90725-90727,90733-90735,90749,90939-90940,93012,93314,93317,93555-93572,93770,94760-94762,
"RTN","IBCRBCA2",117,0)
 ;;97602,99078,99175,100114-100118,100896,101122,101125-101131,101139-101195,101205-101237,101239-101266,
"RTN","IBCRBCA2",118,0)
 ;;101268-101269,101280-101286,101290-101303,101306-101317,101319-101367,101370-101397,101400-101411,
"RTN","IBCRBCA2",119,0)
 ;;101413-101445,101449-101462,101464-101488,101512-101523,101534,101539,101541,101544,101547,101550,
"RTN","IBCRBCA2",120,0)
 ;;101552-101553,101560,101562,101565,101568-101570,101572,101577-101579,101581-101582,102565-102586,
"RTN","IBCRBCA2",121,0)
 ;;103312-103314,103411-103412,103419,103482-103483,103594,103635-103637,103697-103702,103817-103818,
"RTN","IBCRBCA2",122,0)
 ;;103820,103822-103851,103883-103890,103911-103913,103917,103926-103927,103930-103933,103938,103942,
"RTN","IBCRBCA2",123,0)
 ;;104170-104171,104200-104210,104213,104219,104221-104222,104345,104359-104360,104445,104448-104449,
"RTN","IBCRBCA2",124,0)
 ;;104451-104453,104552,104591,104648,104670-104674,104743-104745,104747-104748,104771-104775,104777-104778,
"RTN","IBCRBCA2",125,0)
 ;;104780,104782,104784-104786,104788,104790-104791,104793,104839,104936-104938,104941,104945-104946,
"RTN","IBCRBCA2",126,0)
 ;;104973,105126-105127,105148-105149,105763,105804,105872-105873,105875,105878-105879,105881,105920-105923,
"RTN","IBCRBCA2",127,0)
 ;;105926-105929,105931-105933,105937,105940,105943,105945-105946,105950-105951,106037,106177,106298-106300,
"RTN","IBCRBCA2",128,0)
 ;;106302-106304,106309,
"RTN","IBCRBCA2",129,0)
 ;;
"RTN","IBCRBCA3")
0^10^B15514071
"RTN","IBCRBCA3",1,0)
IBCRBCA3 ;ALB/ARH - RATES: BILL CALCULATION ADJUST MODIFIERS ; 01-OCT-03
"RTN","IBCRBCA3",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBCRBCA3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRBCA3",4,0)
 ;
"RTN","IBCRBCA3",5,0)
 ;
"RTN","IBCRBCA3",6,0)
MODADJ ; calculate the modifier adjustment for the Reasonable Charges Physician Billing Rate
"RTN","IBCRBCA3",7,0)
 ; this is a straight adjustment for a modifier, except for modifier 50
"RTN","IBCRBCA3",8,0)
 ; a procedure may be billed in two ways with modifier 50, it may be on the bill once with 50 so whole
"RTN","IBCRBCA3",9,0)
 ; adjustment applied, or it may be on the bill twice with 50 once, part of adjustment applied
"RTN","IBCRBCA3",10,0)
 ; QZ is not part of RC adjustment but is a normal adjustment due to it's meaning
"RTN","IBCRBCA3",11,0)
 ; this can only be calculated after all charges on the bill have been accumulated
"RTN","IBCRBCA3",12,0)
 ;
"RTN","IBCRBCA3",13,0)
 ;                Billing Rate =       RC PHYSICIAN
"RTN","IBCRBCA3",14,0)
 ;                Billable Event =     PROCEDURE
"RTN","IBCRBCA3",15,0)
 ;                CPT Range =          ALL
"RTN","IBCRBCA3",16,0)
 ;                Modifiers =          22, 50, 51, 52, 53, 62, 80 and QZ
"RTN","IBCRBCA3",17,0)
 ; 
"RTN","IBCRBCA3",18,0)
 ; Input:  ^TMP($J,"IBCRCC" array of calculated bill charges from BITMCHG^IBCRBC2
"RTN","IBCRBCA3",19,0)
 ; Output: ^TMP($J,"IBCRCC" array of calculated bill charges with charges adusted for Modifier
"RTN","IBCRBCA3",20,0)
 ; 
"RTN","IBCRBCA3",21,0)
 N IBI,IBLN,IBCS,IBCPT,IBCSBR,IBGRP,IBCNT,IBC,IBDSCNT,IBCHRG,IBUNITS,IBRS,IBEVDT,IBTCHRG,IBRCHRG,IBACHRG,IBCHGARR
"RTN","IBCRBCA3",22,0)
 N IBDT,IBCLIN,IBOE,IBTMPA,IBTMPS,IBCPTIFN,IBCPTM,IBM,IBJ,IBCOM Q:'$G(IBIFN)
"RTN","IBCRBCA3",23,0)
 ;
"RTN","IBCRBCA3",24,0)
 S IBI=0 F  S IBI=$O(^TMP($J,"IBCRCC",IBI))  Q:'IBI  D
"RTN","IBCRBCA3",25,0)
 . S IBLN=$G(^TMP($J,"IBCRCC",IBI)),IBCS=$P(IBLN,U,2),IBCPT=+$P(IBLN,U,4)
"RTN","IBCRBCA3",26,0)
 . S IBCHRG=+$P(IBLN,U,9),IBDT=+$P(IBLN,U,8),IBCLIN=+$P(IBLN,U,21),IBOE=+$P(IBLN,U,22) I 'IBCHRG Q
"RTN","IBCRBCA3",27,0)
 . S IBCSBR=$$CSBR^IBCRU3(IBCS)
"RTN","IBCRBCA3",28,0)
 . ;
"RTN","IBCRBCA3",29,0)
 . I $P($G(^IBE(363.3,+$P(IBCSBR,U,3),0)),U,1)'["RC PHYSICIAN" Q
"RTN","IBCRBCA3",30,0)
 . I $P(IBCSBR,U,1)'["PROCEDURE" Q
"RTN","IBCRBCA3",31,0)
 . ;
"RTN","IBCRBCA3",32,0)
 . S IBCPTIFN=$P(IBLN,U,17),IBCPTM=$$GETMOD^IBEFUNC(IBIFN,IBCPTIFN),IBCPTM=$$LSTMOD(IBCPTM)
"RTN","IBCRBCA3",33,0)
 . ;
"RTN","IBCRBCA3",34,0)
 . S IBTMPA(IBI)=IBCHRG_U_IBDT_U_IBCLIN_U_IBOE_U_IBCPT_U_IBCPTM I +IBOE S IBTMPS(IBDT,IBCLIN,IBOE)=""
"RTN","IBCRBCA3",35,0)
 ;
"RTN","IBCRBCA3",36,0)
 S IBI=0 F  S IBI=$O(IBTMPA(IBI)) Q:'IBI  D
"RTN","IBCRBCA3",37,0)
 . S IBLN=IBTMPA(IBI),IBCHRG=+$P(IBLN,U,1),IBDT=+$P(IBLN,U,2),IBCLIN=+$P(IBLN,U,3),IBCPT=+$P(IBLN,U,5)
"RTN","IBCRBCA3",38,0)
 . S IBOE=+$P(IBLN,U,4) I 'IBOE S IBOE=$O(IBTMPS(IBDT,IBCLIN,IBOE))
"RTN","IBCRBCA3",39,0)
 . S IBGRP=IBDT_U_IBCLIN_U_IBOE_U_IBCPT
"RTN","IBCRBCA3",40,0)
 . ;
"RTN","IBCRBCA3",41,0)
 . S IBCPTM=$P(IBLN,U,6) F IBJ=1:1 S IBM=$P(IBCPTM,",",IBJ) Q:IBM=""  D
"RTN","IBCRBCA3",42,0)
 .. S IBCHGARR(IBGRP,+IBM)=+$G(IBCHGARR(IBGRP,+IBM))+1
"RTN","IBCRBCA3",43,0)
 .. S IBCHGARR(IBGRP,+IBM,IBI)=""
"RTN","IBCRBCA3",44,0)
 ;
"RTN","IBCRBCA3",45,0)
 S IBGRP=0 F  S IBGRP=$O(IBCHGARR(IBGRP)) Q:'IBGRP  D
"RTN","IBCRBCA3",46,0)
 . ;
"RTN","IBCRBCA3",47,0)
 . S IBCNT=0,IBC=0 F  S IBC=$O(IBCHGARR(IBGRP,IBC)) Q:'IBC  D
"RTN","IBCRBCA3",48,0)
 .. S IBI=0 F  S IBI=$O(IBCHGARR(IBGRP,IBC,IBI)) Q:'IBI  D
"RTN","IBCRBCA3",49,0)
 ... S IBCNT=IBCNT+1
"RTN","IBCRBCA3",50,0)
 ... S IBLN=$G(^TMP($J,"IBCRCC",IBI)) Q:IBLN=""
"RTN","IBCRBCA3",51,0)
 ... S IBCHRG=$P(IBLN,U,9),IBUNITS=$P(IBLN,U,10),IBRS=$P(IBLN,U,3),IBEVDT=$P(IBLN,U,8)
"RTN","IBCRBCA3",52,0)
 ... ;
"RTN","IBCRBCA3",53,0)
 ... S IBDSCNT=$$INMOD(IBC,IBEVDT) Q:'IBDSCNT
"RTN","IBCRBCA3",54,0)
 ... I IBC=10,+$G(IBCHGARR(IBGRP,0)) S IBDSCNT=IBDSCNT-1,IBCHGARR(IBGRP,0)=+$G(IBCHGARR(IBGRP,0))-1
"RTN","IBCRBCA3",55,0)
 ... ;
"RTN","IBCRBCA3",56,0)
 ... S IBCHRG=IBCHRG*IBDSCNT
"RTN","IBCRBCA3",57,0)
 ... S IBTCHRG=IBCHRG
"RTN","IBCRBCA3",58,0)
 ... S IBACHRG=IBTCHRG I +IBRS S IBRCHRG=$$RATECHG^IBCRCC(+IBRS,IBTCHRG,+IBEVDT),IBACHRG=+IBRCHRG
"RTN","IBCRBCA3",59,0)
 ... ;
"RTN","IBCRBCA3",60,0)
 ... ;I IBCHRG'>0 K ^TMP($J,"IBCRCC",IBI) S ^TMP($J,"IBCRCC")=$G(^TMP($J,"IBCRCC"))-1 Q
"RTN","IBCRBCA3",61,0)
 ... S $P(^TMP($J,"IBCRCC",IBI),U,9)=+$FN(IBCHRG,"",2)
"RTN","IBCRBCA3",62,0)
 ... S $P(^TMP($J,"IBCRCC",IBI),U,11)=+$FN(IBTCHRG,"",2)
"RTN","IBCRBCA3",63,0)
 ... S $P(^TMP($J,"IBCRCC",IBI),U,12)=+$FN(IBACHRG,"",2)
"RTN","IBCRBCA3",64,0)
 ... ;
"RTN","IBCRBCA3",65,0)
 ... S IBCOM="Modifier "_$P($$MOD^ICPTMOD(+IBC,"I"),U,2)_" Adjustment "_(IBDSCNT*100)_"% of "_$J($P(IBLN,U,9),0,2) D COMMENT^IBCRBC2(IBI,IBCOM)
"RTN","IBCRBCA3",66,0)
 ... I $P(IBRCHRG,U,2)'="" S IBCOM=$P(IBRCHRG,U,2) D COMMENT^IBCRBC2(IBI,IBCOM)
"RTN","IBCRBCA3",67,0)
 ;
"RTN","IBCRBCA3",68,0)
 Q
"RTN","IBCRBCA3",69,0)
 ;
"RTN","IBCRBCA3",70,0)
LSTMOD(MODS) ; given a list of modifier, return those with adjustments
"RTN","IBCRBCA3",71,0)
 N IBX,ADJ,IBI,IBNMODS S IBNMODS=0
"RTN","IBCRBCA3",72,0)
 I +$G(MODS) S ADJ=","_$$MODS F IBI=1:1 S IBX=$P(MODS,",",IBI) Q:'IBX  I ADJ[(","_IBX_";") S IBNMODS=IBNMODS_IBX_","
"RTN","IBCRBCA3",73,0)
 Q IBNMODS
"RTN","IBCRBCA3",74,0)
 ;
"RTN","IBCRBCA3",75,0)
 ;
"RTN","IBCRBCA3",76,0)
 ;
"RTN","IBCRBCA3",77,0)
INMOD(MOD,DATE) ; return value of adjustment if modifier has one on date
"RTN","IBCRBCA3",78,0)
 N IBFND,ADJ,IBI,IBX S IBFND="" I $G(DATE)'?7N S DATE=DT
"RTN","IBCRBCA3",79,0)
 I DATE<$$VERSDT^IBCRU8(2) G INMODQ
"RTN","IBCRBCA3",80,0)
 ;
"RTN","IBCRBCA3",81,0)
 S ADJ=$$MODS
"RTN","IBCRBCA3",82,0)
 F IBI=1:1 S IBX=$P(ADJ,",",IBI) Q:'IBX  I +IBX=+MOD S IBFND=$P(IBX,";",2)
"RTN","IBCRBCA3",83,0)
 ;
"RTN","IBCRBCA3",84,0)
INMODQ Q IBFND
"RTN","IBCRBCA3",85,0)
 ;
"RTN","IBCRBCA3",86,0)
 ;
"RTN","IBCRBCA3",87,0)
 ;
"RTN","IBCRBCA3",88,0)
MODS() ; Modifiers and their adjustment factor
"RTN","IBCRBCA3",89,0)
 N IBX,IBY S IBX="22;1.2,50;1.54,51;.94,52;.7,53;.97,62;.92,80;.31,QZ;2"
"RTN","IBCRBCA3",90,0)
 S IBY="3;1.2,10;1.54,11;.94,12;.7,307;.97,18;.92,24;.31,102;2"
"RTN","IBCRBCA3",91,0)
 Q IBY
"RTN","IBCRBE")
0^54^B30595604
"RTN","IBCRBE",1,0)
IBCRBE ;ALB/ARH - RATES: BILL ENTER/EDIT (RS/CS) SCREEN ; 22-MAY-1996
"RTN","IBCRBE",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,245**;21-MAR-94
"RTN","IBCRBE",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRBE",4,0)
 ; 
"RTN","IBCRBE",5,0)
EDIT(IBIFN) ; ENTRY POINT from Enter/Edit a Bill option:  
"RTN","IBCRBE",6,0)
 ; display available Schedules/Sets for a bill, allow the user to choose the ones to use,
"RTN","IBCRBE",7,0)
 ; then recalculate the bills charges
"RTN","IBCRBE",8,0)
 ;
"RTN","IBCRBE",9,0)
 N IBSRTARR,IBCHGARR,IBUCHGAR I '$G(IBIFN) G EDITQ
"RTN","IBCRBE",10,0)
 ;
"RTN","IBCRBE",11,0)
 I '$$DISPLAY(IBIFN,.IBSRTARR) G EDITQ
"RTN","IBCRBE",12,0)
 ;
"RTN","IBCRBE",13,0)
 I '$$SELCT(IBIFN,.IBSRTARR,.IBCHGARR) G EDITQ
"RTN","IBCRBE",14,0)
 ;
"RTN","IBCRBE",15,0)
 I $O(IBCHGARR(0)) D BILL^IBCRBC(IBIFN,.IBCHGARR)
"RTN","IBCRBE",16,0)
 ;
"RTN","IBCRBE",17,0)
 I $O(IBCHGARR(0)),$$SELITEMS^IBCRBEI(IBIFN,.IBCHGARR,.IBUCHGAR) D BILLITEM^IBCRBC(IBIFN,.IBUCHGAR)
"RTN","IBCRBE",18,0)
 ;
"RTN","IBCRBE",19,0)
EDITQ Q
"RTN","IBCRBE",20,0)
 ;
"RTN","IBCRBE",21,0)
DISPLAY(IBIFN,IBSRTARR) ; get list of all RS/CS combinations available for use on the bill
"RTN","IBCRBE",22,0)
 ; sort them in name order then display the results to the screen, returns 1 if some found
"RTN","IBCRBE",23,0)
 N IB0,IBU,IBC,IBRSARR K IBSRTARR S IBC=1
"RTN","IBCRBE",24,0)
 ;
"RTN","IBCRBE",25,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)) I IB0="" S IBC=0 G DISPQ
"RTN","IBCRBE",26,0)
 S IBU=$G(^DGCR(399,+$G(IBIFN),"U")) I 'IBU S IBC=0 G DISPQ
"RTN","IBCRBE",27,0)
 D RT^IBCRU3($P(IB0,U,7),+$P(IB0,U,5),$P(IBU,U,1,2),.IBRSARR)
"RTN","IBCRBE",28,0)
 ;
"RTN","IBCRBE",29,0)
 I 'IBRSARR D NONE($P(IB0,U,1),$P(IB0,U,7),+$P(IB0,U,5),$P(IB0,U,3)),WAIT S IBC=0 G DISPQ
"RTN","IBCRBE",30,0)
 ;
"RTN","IBCRBE",31,0)
 D SORTBRS(.IBRSARR,.IBSRTARR,$P(IB0,U,27)),DISPRS($P(IB0,U,7),$P(IB0,U,5),.IBSRTARR)
"RTN","IBCRBE",32,0)
 ;
"RTN","IBCRBE",33,0)
DISPQ Q IBC
"RTN","IBCRBE",34,0)
 ;
"RTN","IBCRBE",35,0)
SORTBRS(IBRSARR,IBSRTARR,IBBCT) ; return array in rs name, cs name sorted order with external form of data
"RTN","IBCRBE",36,0)
 ; input:   IBRSARR(rate sched IFN,charge set IFN) = true if auto add
"RTN","IBCRBE",37,0)
 ; output:  IBSRTARR = CNT of RS/CS to be auto added ^ total CNT
"RTN","IBCRBE",38,0)
 ;          IBSRTARR(CNT) = rs IFN ^ cs IFN ^ rs name ^ cs name ^ auto add ^ unassoc event ^ chg type ^ disp set
"RTN","IBCRBE",39,0)
 ;
"RTN","IBCRBE",40,0)
 N IBRS,IBCS,IBRSN,IBCSN,IBAA,IBUA,IBCT,IBTCNT,IBACNT,IBLN,IBS,ARRX K IBSRTARR S IBBCT=+$G(IBBCT)
"RTN","IBCRBE",41,0)
 S IBRS=0 F  S IBRS=$O(IBRSARR(IBRS)) Q:'IBRS  D
"RTN","IBCRBE",42,0)
 . S IBCS=0 F  S IBCS=$O(IBRSARR(IBRS,IBCS)) Q:'IBCS  D
"RTN","IBCRBE",43,0)
 .. S IBAA=IBRSARR(IBRS,IBCS),IBRSN=$P($G(^IBE(363,+IBRS,0)),U,1),IBCSN=$P($G(^IBE(363.1,+IBCS,0)),U,1)
"RTN","IBCRBE",44,0)
 .. S IBUA=$S($$CSBR^IBCRU3(IBCS)["UNASSOCIATE":1,1:0),IBCT=$P($G(^IBE(363.1,+IBCS,0)),U,4)
"RTN","IBCRBE",45,0)
 .. S IBS=$S('IBAA:2,(+IBBCT&(IBBCT'=IBCT)):1,1:" ")_$S(IBCT=1:"I",IBCT=2:"P",1:" ")
"RTN","IBCRBE",46,0)
 .. I IBRSN'="",IBCSN'="" S ARRX(IBS_IBRSN_IBRS_IBCS,IBCSN)=IBRS_U_IBCS_U_IBRSN_U_IBCSN_U_IBAA_U_IBUA_U_IBCT_U_IBS
"RTN","IBCRBE",47,0)
 ;
"RTN","IBCRBE",48,0)
 S (IBTCNT,IBACNT)=0,IBRSN="" F  S IBRSN=$O(ARRX(IBRSN)) Q:IBRSN=""  D
"RTN","IBCRBE",49,0)
 . S IBCSN="" F  S IBCSN=$O(ARRX(IBRSN,IBCSN)) Q:IBCSN=""  D
"RTN","IBCRBE",50,0)
 .. S IBLN=ARRX(IBRSN,IBCSN),IBTCNT=IBTCNT+1 I 'IBRSN S IBACNT=IBACNT+1
"RTN","IBCRBE",51,0)
 .. S IBSRTARR(IBTCNT)=IBLN
"RTN","IBCRBE",52,0)
 S IBSRTARR=IBACNT_U_IBTCNT
"RTN","IBCRBE",53,0)
 Q
"RTN","IBCRBE",54,0)
 ;
"RTN","IBCRBE",55,0)
DISPRS(RT,BT,IBSRTARR) ; display available rate schedules and charge sets for a bill
"RTN","IBCRBE",56,0)
 N RTN,IBCNT,IBLN,IBLAST S RTN=$P($G(^DGCR(399.3,+$G(RT),0)),U,1),BT=$G(BT)
"RTN","IBCRBE",57,0)
 W @IOF,!?5,"Rate Schedules available for an "_$S(BT>2:"Outpatient ",BT>0:"Inpatient ",1:"")_$E(RTN,1,27)_" bill"
"RTN","IBCRBE",58,0)
 W !,"------------------------------------------------------------------------------"
"RTN","IBCRBE",59,0)
 ;
"RTN","IBCRBE",60,0)
 S IBCNT=0 F  S IBCNT=$O(IBSRTARR(IBCNT)) Q:'IBCNT  D
"RTN","IBCRBE",61,0)
 . S IBLN=$G(IBSRTARR(IBCNT)) I +$P(IBLN,U,8)'=+$G(IBLAST) W ! S IBLAST=+$P(IBLN,U,8)
"RTN","IBCRBE",62,0)
 . W !,?3,IBCNT,")",?8,$P(IBLN,U,3),?31,$P(IBLN,U,4),?69,$S(+$P(IBLN,U,7)=1:"INST",$P(IBLN,U,7)=2:"PROF",1:""),?75,$S(+$P(IBLN,U,6):"s",1:""),?77,$S('$P(IBLN,U,5):"*",1:"")
"RTN","IBCRBE",63,0)
 ;
"RTN","IBCRBE",64,0)
 Q
"RTN","IBCRBE",65,0)
 ;
"RTN","IBCRBE",66,0)
SELCT(IBIFN,IBSRTARR,IBCHGARR) ; get the user selection of rs/cs charges to add to the bill
"RTN","IBCRBE",67,0)
 ; input:   IBSRTARR = CNT of RS/CS to be auto added ^ total CNT
"RTN","IBCRBE",68,0)
 ;          IBSRTARR(CNT) = rs IFN ^ cs IFN ^ rs name ^ cs name ^ Auto Add ^ unassoc event ^ chg type ^ disp set
"RTN","IBCRBE",69,0)
 ; output:  IBCHGARR(rate sched IFN,charge set IFN) = 1 - add charges for rs/cs
"RTN","IBCRBE",70,0)
 ;
"RTN","IBCRBE",71,0)
 N IBCHNG,IBSEL,IBI,IBS,IBLN,DIR,DIRUT,DUOUT,DTOUT,X,Y K IBCHGARR S IBCHNG=0 I '$G(IBIFN) G SELCTQ
"RTN","IBCRBE",72,0)
 I '$O(IBSRTARR(0)) G SELCTQ
"RTN","IBCRBE",73,0)
 ;
"RTN","IBCRBE",74,0)
 S DIR("?")="Enter the number (1-"_+$P(IBSRTARR,U,2)_") preceding the Rate Schedule/Charge Sets that apply to this bill.  All associated charges will be added to the bill."
"RTN","IBCRBE",75,0)
 S DIR("?",1)="* - these charges are available to be added to this bill if selected here,"
"RTN","IBCRBE",76,0)
 S DIR("?",2)="    but will not be added when the bills charges are automatically calculated."
"RTN","IBCRBE",77,0)
 S DIR("?",3)="s - the items these charges are associated with must be specifically"
"RTN","IBCRBE",78,0)
 S DIR("?",4)="    selected here, they do not relate to any item on the bill.",DIR("?",5)=" "
"RTN","IBCRBE",79,0)
 S DIR("?",6)="If the bill's charge type is exclusively institutional or professional then"
"RTN","IBCRBE",80,0)
 S DIR("?",7)="only sets of charges with a corresponding type will be added when the bills"
"RTN","IBCRBE",81,0)
 S DIR("?",8)="charges are automatically calculated.  On this screen these charges will be"
"RTN","IBCRBE",82,0)
 S DIR("?",9)="displayed in the first set and used as the selection default.",DIR("?",10)=" "
"RTN","IBCRBE",83,0)
 S DIR("??")="^D HELP^IBCRBE("_IBIFN_")"
"RTN","IBCRBE",84,0)
 S DIR("A")="Select Schedule Charges to ADD to the bill: " I +IBSRTARR S DIR("B")="1-"_+IBSRTARR
"RTN","IBCRBE",85,0)
 ;
"RTN","IBCRBE",86,0)
 W !! S DIR(0)="LOA^1:"_+$P(IBSRTARR,U,2) D ^DIR K DIR I 'Y!$D(DIRUT) G SELCTQ
"RTN","IBCRBE",87,0)
 ;
"RTN","IBCRBE",88,0)
 S IBSEL=Y F IBI=1:1:30 S IBS=$P(IBSEL,",",IBI) Q:'IBS  D
"RTN","IBCRBE",89,0)
 . I $D(IBSRTARR(IBS)) S IBCHNG=1,IBLN=IBSRTARR(IBS),IBCHGARR(+IBLN,$P(IBLN,U,2))=1
"RTN","IBCRBE",90,0)
 ;
"RTN","IBCRBE",91,0)
SELCTQ Q IBCHNG
"RTN","IBCRBE",92,0)
 ;
"RTN","IBCRBE",93,0)
NONE(IBBN,RT,BT,EVDT) ; write message indicating no rate schedules defined for this bill
"RTN","IBCRBE",94,0)
 N IBRTN S BT=+$G(BT),EVDT=$G(EVDT),IBRTN=$P($G(^DGCR(399.3,+$G(RT),0)),U,1)
"RTN","IBCRBE",95,0)
 W !,?7 I +EVDT W !,?7,"On ",$$DATE^IBCRU1(+EVDT),", there are "
"RTN","IBCRBE",96,0)
 W "No Rate Schedules with charges defined "
"RTN","IBCRBE",97,0)
 I IBRTN'="" W:+EVDT !,?20 W "for ",$S(BT>2:"Outpatient ",BT>0:"Inpatient ",1:""),IBRTN
"RTN","IBCRBE",98,0)
 I $G(IBBN)'="" W !!,?7,"Therefore charges can not be calculated for this bill (",IBBN,") "
"RTN","IBCRBE",99,0)
 W !
"RTN","IBCRBE",100,0)
 Q
"RTN","IBCRBE",101,0)
 ;
"RTN","IBCRBE",102,0)
WAIT N DIR,DIRUT,DUOUT,DTOUT,Y,X S DIR("A")="Press RETURN to continue",DIR(0)="E" D ^DIR K DIR
"RTN","IBCRBE",103,0)
 Q
"RTN","IBCRBE",104,0)
 ;
"RTN","IBCRBE",105,0)
HELP(IBIFN) ; display rs/cs for the bill - used as help text
"RTN","IBCRBE",106,0)
 N IBX I +$G(IBIFN) S IBX=$$DISPLAY(IBIFN)
"RTN","IBCRBE",107,0)
 Q
"RTN","IBCRBG")
0^11^B48558770
"RTN","IBCRBG",1,0)
IBCRBG ;ALB/ARH - RATES: BILL SOURCE EVENTS (INPT) ; 21 MAY 96
"RTN","IBCRBG",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,51,142,159,210,245**;21-MAR-94
"RTN","IBCRBG",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRBG",4,0)
 ;
"RTN","IBCRBG",5,0)
INPTPTF(IBIFN,CS) ; search PTF record for billable bedsections, transfer DRGs, and length of stay 
"RTN","IBCRBG",6,0)
 ; - screens out days for pass, leave and SC treatment
"RTN","IBCRBG",7,0)
 ; - adds charges for only one BS if the ins company does not allow multiple bedsections per bill (36,.06)
"RTN","IBCRBG",8,0)
 ; Output:  ^TMP($J,"IBCRC-INDT", BILLABLE DATE) = MOVE DT/TM ^ BILL BS ^ SC FLAG ^ DRG ^ DIVISION ^ SPECIALTY
"RTN","IBCRBG",9,0)
 ;
"RTN","IBCRBG",10,0)
 N IB0,DFN,PTF,IBU,IBBDT,IBEDT,IBTF,IBADM,IBX,IBINSMBS
"RTN","IBCRBG",11,0)
 K ^TMP($J,"IBCRC-PTF"),^TMP($J,"IBCRC-DIV"),^TMP($J,"IBCRC-INDT")
"RTN","IBCRBG",12,0)
 ;
"RTN","IBCRBG",13,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IB0,U,2) Q:'DFN
"RTN","IBCRBG",14,0)
 S IBTF=$P(IB0,U,6),PTF="" S:$P(IB0,U,5)<3 PTF=$P(IB0,U,8) Q:'PTF
"RTN","IBCRBG",15,0)
 S IBINSMBS=0,IBX=+$G(^DGCR(399,+IBIFN,"MP"))
"RTN","IBCRBG",16,0)
 I 'IBX,$$MCRWNR^IBEFUNC($$CURR^IBCEF2(IBIFN)) S IBX=$$CURR^IBCEF2(IBIFN)
"RTN","IBCRBG",17,0)
 I $P($G(^DIC(36,+IBX,0)),U,6)=0 S IBINSMBS=1 ; 1 bs per bill
"RTN","IBCRBG",18,0)
 ;
"RTN","IBCRBG",19,0)
 S IBU=$G(^DGCR(399,+IBIFN,"U")) Q:'IBU
"RTN","IBCRBG",20,0)
 S IBBDT=+IBU,IBEDT=$P(IBU,U,2) Q:'IBEDT
"RTN","IBCRBG",21,0)
 ;
"RTN","IBCRBG",22,0)
 S IBADM=$O(^DGPM("APTF",PTF,0)) ; find corresponding admission
"RTN","IBCRBG",23,0)
 ;
"RTN","IBCRBG",24,0)
 D PTF(PTF) ; get movements and bedsections
"RTN","IBCRBG",25,0)
 D PTFDV(PTF) ; reset movements and bedsections for ward/division
"RTN","IBCRBG",26,0)
 ;
"RTN","IBCRBG",27,0)
 D BSLOS(IBBDT,IBEDT,IBTF,IBADM,IBINSMBS) ; calculate days in bedsections within timeframe of the bill
"RTN","IBCRBG",28,0)
 ;
"RTN","IBCRBG",29,0)
 K ^TMP($J,"IBCRC-PTF"),^TMP($J,"IBCRC-DIV")
"RTN","IBCRBG",30,0)
 ;
"RTN","IBCRBG",31,0)
 D INPTRSET^IBCRBG2(IBIFN,$G(CS))
"RTN","IBCRBG",32,0)
 Q
"RTN","IBCRBG",33,0)
 ;
"RTN","IBCRBG",34,0)
PTF(PTF) ; find all movements in PTF for the admission by date and billing bedsection (501 movement)
"RTN","IBCRBG",35,0)
 ; the movement date is the date the patient left the bedsection
"RTN","IBCRBG",36,0)
 ; Output:  ^TMP($J,"IBCRC-PTF", MOVE DT/TM)=MOVE DT/TM ^ BILL BEDSECTION ^ SC FLAG ^ TRANSFER DRG ^ ^ SPECIALTY
"RTN","IBCRBG",37,0)
 ;
"RTN","IBCRBG",38,0)
 N IBMOVE,IBMVLN,IBBILLBS,IBENDDT,IBMSC,IBMDRG S PTF=+$G(PTF)
"RTN","IBCRBG",39,0)
 S IBMOVE=0 F  S IBMOVE=$O(^DGPT(PTF,"M",IBMOVE)) Q:'IBMOVE  D
"RTN","IBCRBG",40,0)
 . S IBMVLN=^DGPT(PTF,"M",IBMOVE,0)
"RTN","IBCRBG",41,0)
 . S IBBILLBS=+$$SPBB($P(IBMVLN,U,2)) ;                                 billable bedsection
"RTN","IBCRBG",42,0)
 . S IBENDDT=+$P(IBMVLN,U,10) I 'IBENDDT S IBENDDT=DT ;                 movement date (last date in bedsection)
"RTN","IBCRBG",43,0)
 . S IBMSC="" I +$P(IBMVLN,U,18)=1 S IBMSC=1 ;                          sc movement
"RTN","IBCRBG",44,0)
 . S IBMDRG=$$MVDRG(PTF,IBMOVE) ;                                       movement DRG
"RTN","IBCRBG",45,0)
 . S ^TMP($J,"IBCRC-PTF",IBENDDT)=IBENDDT_U_IBBILLBS_U_IBMSC_U_IBMDRG_U_U_+$P(IBMVLN,U,2)
"RTN","IBCRBG",46,0)
 Q
"RTN","IBCRBG",47,0)
 ;
"RTN","IBCRBG",48,0)
SPBB(SPCLTY) ; find the billable bedsection for a Specialty (42.4)
"RTN","IBCRBG",49,0)
 ; returns billable bedsection IFN ^ billable bedsection name
"RTN","IBCRBG",50,0)
 N IBX,IBY,IBZ S IBZ=0
"RTN","IBCRBG",51,0)
 S IBX=$P($G(^DIC(42.4,+$G(SPCLTY),0)),U,5)
"RTN","IBCRBG",52,0)
 I IBX'="" S IBY=$O(^DGCR(399.1,"B",IBX,0)) I +IBY S IBZ=IBY_U_IBX
"RTN","IBCRBG",53,0)
 Q IBZ
"RTN","IBCRBG",54,0)
 ;
"RTN","IBCRBG",55,0)
BSLOS(IBBDT,IBEDT,IBTF,IBADM,IBINSMBS) ; from the array of PTF movments get all bedsections and their LOS covered by date range of the bill
"RTN","IBCRBG",56,0)
 ; adds all days for first cronological bs if ins comp wants only a single bs per bill, even if not sequential
"RTN","IBCRBG",57,0)
 ; the movement date is the date the patient left the bedsection, so admission date is not in PTF array
"RTN","IBCRBG",58,0)
 ;
"RTN","IBCRBG",59,0)
 ; Input:   ^TMP($J,"IBCRC-PTF", MOVE DT/TM) = MOVE DT/TM ^ BILL BS ^ SC FLAG ^ DRG ^ DIVISION ^ SPECIALTY
"RTN","IBCRBG",60,0)
 ; Output:  ^TMP($J,"IBCRC-INDT", BILLABLE DATE) = MOVE DT/TM ^ BILL BS ^ SC FLAG ^ DRG ^ DIVISION ^ SPECIALTY
"RTN","IBCRBG",61,0)
 ;
"RTN","IBCRBG",62,0)
 N IBSBDT,IBSEDT,IBS,IBLASTDT,IBX
"RTN","IBCRBG",63,0)
 S IBSBDT=IBBDT+.3 ;                        discount any movements ending on or before the begin date
"RTN","IBCRBG",64,0)
 S IBSEDT=IBEDT\1
"RTN","IBCRBG",65,0)
 ; 
"RTN","IBCRBG",66,0)
 I ",2,3,"'[IBTF S IBSEDT=IBSEDT-.01 ;      final bill, do not count last day
"RTN","IBCRBG",67,0)
 ;
"RTN","IBCRBG",68,0)
 I +$G(IBADM) S IBX=$$AD^IBCU64(IBADM) I +IBX,($P(IBX,U,1)\1)=($P(IBX,U,2)\1) S IBSBDT=IBBDT ; reset 1 day stays
"RTN","IBCRBG",69,0)
 ;
"RTN","IBCRBG",70,0)
 S IBS=IBSBDT-.01 F  S IBS=$O(^TMP($J,"IBCRC-PTF",IBS)) Q:'IBS  D SET S IBLASTDT=IBS Q:(IBLASTDT\1)>IBSEDT
"RTN","IBCRBG",71,0)
 ;
"RTN","IBCRBG",72,0)
 Q
"RTN","IBCRBG",73,0)
 ;
"RTN","IBCRBG",74,0)
SET ; checks a specific movement to determine if it should be billed and what the length of stay is
"RTN","IBCRBG",75,0)
 ; setting of the movement date determines how many days are counted in the bedsection
"RTN","IBCRBG",76,0)
 N IBMVLN,IBMBDT,IBMEDT,IBMTF,IBMLOS,IBI,IBCHGDT
"RTN","IBCRBG",77,0)
 S IBMVLN=$G(^TMP($J,"IBCRC-PTF",IBS))
"RTN","IBCRBG",78,0)
 I '$P(IBMVLN,U,2) Q  ;                                              non-billable bedsection
"RTN","IBCRBG",79,0)
 I +$P(IBMVLN,U,3) Q  ;                                              sc movement
"RTN","IBCRBG",80,0)
 I +IBINSMBS,+$G(IBLASTDT) Q  ;                                      ins does not allow multiple bs
"RTN","IBCRBG",81,0)
 ;
"RTN","IBCRBG",82,0)
 S IBMBDT=$S(IBBDT>$G(IBLASTDT):IBBDT,1:IBLASTDT),IBMBDT=IBMBDT\1 ;  start cnt on begin dt or last move dt
"RTN","IBCRBG",83,0)
 S IBMEDT=$S(IBS<IBEDT:IBS,1:IBEDT),IBMEDT=IBMEDT\1 ;                end cnt on move dt or end dt
"RTN","IBCRBG",84,0)
 S IBMTF=$S(IBEDT<(IBS\1):IBTF,1:1) ;                                last movement gets timeframe
"RTN","IBCRBG",85,0)
 S IBMLOS=$$LOS^IBCU64(IBMBDT,IBMEDT,IBMTF,IBADM) Q:'IBMLOS  ;       calculate the LOS for the movement
"RTN","IBCRBG",86,0)
 ;
"RTN","IBCRBG",87,0)
 F IBI=1:1:IBMLOS S IBCHGDT=$$FMADD^XLFDT(IBMBDT,(IBI-1)),^TMP($J,"IBCRC-INDT",+IBCHGDT)=IBMVLN
"RTN","IBCRBG",88,0)
 Q
"RTN","IBCRBG",89,0)
 ;
"RTN","IBCRBG",90,0)
BBS(X) ; returns true if pointer passed in is a billable bedsection ^ bedsection name
"RTN","IBCRBG",91,0)
 N IBX,IBY S IBY=0,IBX=$G(^DGCR(399.1,+$G(X),0)) I +$P(IBX,U,5) S IBY=1_U_$P(IBX,U,1)
"RTN","IBCRBG",92,0)
 Q IBY
"RTN","IBCRBG",93,0)
 ;
"RTN","IBCRBG",94,0)
 Q
"RTN","IBCRBG",95,0)
 ;
"RTN","IBCRBG",96,0)
PTFDV(PTF) ; find all ward/location transfers in PTF for the patient to determine the site/division the patient was in
"RTN","IBCRBG",97,0)
 ; the division of the ward will be added to the PTF bedsection movements
"RTN","IBCRBG",98,0)
 ; Input:   ^TMP($J,"IBCRC-PTF", move dt/tm) = move dt/tm ^ bill bs ^ sc flag ^ move drg ^^ specialty
"RTN","IBCRBG",99,0)
 ; Output:  ^TMP($J,"IBCRC-PTF", move dt/tm) = move dt/tm ^ bill bs ^ sc flag ^ move drg ^ WARD DIV ^ specialty
"RTN","IBCRBG",100,0)
 ;          ^TMP($J,"IBCRC-DIV", TRANSFER DATE/TIME) = WARD DIVISION
"RTN","IBCRBG",101,0)
 N IBTRNSF,IBTRLN,IBENDDT,IBTRDV,IBMVDT,IBTRDT
"RTN","IBCRBG",102,0)
 ;
"RTN","IBCRBG",103,0)
 I '$O(^TMP($J,"IBCRC-PTF",0)) Q
"RTN","IBCRBG",104,0)
 ;
"RTN","IBCRBG",105,0)
 ; get all ward transfers
"RTN","IBCRBG",106,0)
 S IBTRNSF=0 F  S IBTRNSF=$O(^DGPT(PTF,535,IBTRNSF)) Q:'IBTRNSF  D
"RTN","IBCRBG",107,0)
 . S IBTRLN=$G(^DGPT(PTF,535,+IBTRNSF,0))
"RTN","IBCRBG",108,0)
 . S IBENDDT=$P(IBTRLN,U,10) I 'IBENDDT S IBENDDT=DT ;                  transfer date (last date in ward)
"RTN","IBCRBG",109,0)
 . S IBTRDV=$P($G(^DIC(42,+$P(IBTRLN,U,6),0)),U,11) Q:'IBTRDV  ;        losing ward division
"RTN","IBCRBG",110,0)
 . S ^TMP($J,"IBCRC-DIV",IBENDDT)=IBTRDV
"RTN","IBCRBG",111,0)
 ;
"RTN","IBCRBG",112,0)
 ; if the ward transfer does not coincide with a specialty transfer add bedsection move on the transfer date
"RTN","IBCRBG",113,0)
 S IBENDDT=0 F  S IBENDDT=$O(^TMP($J,"IBCRC-DIV",IBENDDT)) Q:'IBENDDT  D
"RTN","IBCRBG",114,0)
 . S IBMVDT=$O(^TMP($J,"IBCRC-PTF",(IBENDDT-.0000001)))
"RTN","IBCRBG",115,0)
 . I 'IBMVDT Q  ; - transfer movement dates after the discharge date in the PTF file (inconsistent)
"RTN","IBCRBG",116,0)
 . I $P(IBENDDT,".")'=$P(IBMVDT,".") S ^TMP($J,"IBCRC-PTF",IBENDDT)=$G(^TMP($J,"IBCRC-PTF",IBMVDT))
"RTN","IBCRBG",117,0)
 ;
"RTN","IBCRBG",118,0)
 ; add the ward division to the bedsection/specialty
"RTN","IBCRBG",119,0)
 S IBENDDT=0 F  S IBENDDT=$O(^TMP($J,"IBCRC-PTF",IBENDDT)) Q:'IBENDDT  D
"RTN","IBCRBG",120,0)
 . S IBTRDT=$O(^TMP($J,"IBCRC-DIV",(IBENDDT-.0000001))) ;              ward transfer covering this bedsection
"RTN","IBCRBG",121,0)
 . S IBTRDV=$G(^TMP($J,"IBCRC-DIV",+IBTRDT)) ;                         ward division
"RTN","IBCRBG",122,0)
 . I +IBTRDV S $P(^TMP($J,"IBCRC-PTF",IBENDDT),U,5)=IBTRDV
"RTN","IBCRBG",123,0)
 Q
"RTN","IBCRBG",124,0)
 ;
"RTN","IBCRBG",125,0)
MVDRG(PTF,M) ; Return the DRG for a specific PTF Movememt (M=move ifn)
"RTN","IBCRBG",126,0)
 N DPT0,PTF0,PTFM0,PTF70,IBBEG,IBEND,IBDSST,IBDX,IBPRC0,IBPRC,IBDRG,IBI,IBJ,IBP
"RTN","IBCRBG",127,0)
 N SEX,AGE,ICDDX,ICDPRC,ICDEXP,ICDDMS,ICDTRS,ICDDRG,ICDMDC,ICDRTC,ICDDATE
"RTN","IBCRBG",128,0)
 S IBDRG=""
"RTN","IBCRBG",129,0)
 ;
"RTN","IBCRBG",130,0)
 S PTF0=$G(^DGPT(+$G(PTF),0)),DPT0=$G(^DPT(+$P(PTF0,U,1),0)) I DPT0="" G MVDRGQ
"RTN","IBCRBG",131,0)
 S PTFM0=$G(^DGPT(+PTF,"M",+$G(M),0)) I 'PTFM0 G MVDRGQ
"RTN","IBCRBG",132,0)
 S PTF70=$G(^DGPT(+PTF,70)),IBDSST=+$P(PTF70,U,3)
"RTN","IBCRBG",133,0)
 ;
"RTN","IBCRBG",134,0)
 S IBEND=+$P(PTFM0,U,10) I 'IBEND S IBEND=DT+.9
"RTN","IBCRBG",135,0)
 S IBBEG=$O(^DGPT(+PTF,"M","AM",IBEND),-1) I 'IBBEG S IBBEG=$P(PTF0,U,2)
"RTN","IBCRBG",136,0)
 ;
"RTN","IBCRBG",137,0)
 S SEX=$P(DPT0,U,2)
"RTN","IBCRBG",138,0)
 S AGE=$P(DPT0,U,3),AGE=$$FMDIFF^XLFDT(IBEND,AGE)\365.25
"RTN","IBCRBG",139,0)
 ;
"RTN","IBCRBG",140,0)
 S (ICDEXP,ICDDMS,ICDTRS)=0 I +PTF70,+PTF70=$P(PTFM0,U,10) D
"RTN","IBCRBG",141,0)
 . I IBDSST>5 S ICDEXP=1 ;  patient expired
"RTN","IBCRBG",142,0)
 . I IBDSST=4 S ICDDMS=1 ;  patient left against medical advice
"RTN","IBCRBG",143,0)
 . I IBDSST=5,+$P(PTF70,U,13) S ICDTRS=1 ; patient transfered to another facility
"RTN","IBCRBG",144,0)
 ;
"RTN","IBCRBG",145,0)
 S IBJ=0 F IBI=5:1:9 S IBDX=$P(PTFM0,U,IBI) I +IBDX,($$ICD9^IBACSV(+IBDX)'="") S IBJ=IBJ+1,ICDDX(IBJ)=IBDX
"RTN","IBCRBG",146,0)
 ;
"RTN","IBCRBG",147,0)
 I '$O(ICDDX(0)) G MVDRGQ
"RTN","IBCRBG",148,0)
 ;
"RTN","IBCRBG",149,0)
 S IBJ=0
"RTN","IBCRBG",150,0)
 S IBP=0 F  S IBP=$O(^DGPT(+PTF,"S",IBP)) Q:'IBP  D  ; surguries
"RTN","IBCRBG",151,0)
 . S IBPRC0=$G(^DGPT(+PTF,"S",IBP,0)) Q:'IBPRC0
"RTN","IBCRBG",152,0)
 . I +IBPRC0'<IBBEG,+IBPRC0'>IBEND D
"RTN","IBCRBG",153,0)
 .. F IBI=8:1:12 S IBPRC=$P(IBPRC0,U,IBI) I +IBPRC,($$ICD0^IBACSV(+IBPRC)'="") S IBJ=IBJ+1,ICDPRC(IBJ)=+IBPRC
"RTN","IBCRBG",154,0)
 ;
"RTN","IBCRBG",155,0)
 S IBP=0 F  S IBP=$O(^DGPT(+PTF,"P",IBP)) Q:'IBP  D  ; procedures
"RTN","IBCRBG",156,0)
 . S IBPRC0=$G(^DGPT(+PTF,"P",IBP,0)) Q:'IBPRC0
"RTN","IBCRBG",157,0)
 . I +IBPRC0'<IBBEG,+IBPRC0'>IBEND D
"RTN","IBCRBG",158,0)
 .. F IBI=5:1:9 S IBPRC=$P(IBPRC0,U,IBI) I +IBPRC,($$ICD0^IBACSV(+IBPRC)'="") S IBJ=IBJ+1,ICDPRC(IBJ)=+IBPRC
"RTN","IBCRBG",159,0)
 ;
"RTN","IBCRBG",160,0)
 S ICDDATE=$P(PTFM0,U,10) ; use the movement date for the DRG Grouper versioning
"RTN","IBCRBG",161,0)
 D ^ICDDRG S IBDRG=$G(ICDDRG)
"RTN","IBCRBG",162,0)
 ;
"RTN","IBCRBG",163,0)
MVDRGQ Q IBDRG
"RTN","IBCRBG1")
0^12^B2469476
"RTN","IBCRBG1",1,0)
IBCRBG1 ;ALB/ARH - RATES: BILL SOURCE EVENTS (OPT,CPT) ; 5/21/96
"RTN","IBCRBG1",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,148,245**;21-MAR-94
"RTN","IBCRBG1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRBG1",4,0)
 ;
"RTN","IBCRBG1",5,0)
OPTVD(IBIFN,ARR) ; outpatient visit dates on a bill
"RTN","IBCRBG1",6,0)
 ; returns       ARR = cnt of visit dates found
"RTN","IBCRBG1",7,0)
 ;               ARR(DA of visit) = date
"RTN","IBCRBG1",8,0)
 ;
"RTN","IBCRBG1",9,0)
 N IBI,IBX K ARR S ARR=0,IBIFN=+$G(IBIFN)
"RTN","IBCRBG1",10,0)
 S IBI=0 F  S IBI=$O(^DGCR(399,IBIFN,"OP",IBI))  Q:'IBI  D
"RTN","IBCRBG1",11,0)
 . S IBX=+$G(^DGCR(399,IBIFN,"OP",IBI,0))
"RTN","IBCRBG1",12,0)
 . I +IBX S ARR=ARR+1,ARR(+IBI)=IBX
"RTN","IBCRBG1",13,0)
 Q
"RTN","IBCRBG1",14,0)
 ;
"RTN","IBCRBG1",15,0)
CPT(IBIFN,ARR) ; find all CPT codes for a bill (excludes ICD9)
"RTN","IBCRBG1",16,0)
 ; returns ARR = cnt of CPT's found
"RTN","IBCRBG1",17,0)
 ; ARR(CPT,DA of CPT) = date ^ modifiers ^ division ^ provider ^ clinic ^ ptr to 409.68 ^ minutes ^ miles ^ hours
"RTN","IBCRBG1",18,0)
 ;
"RTN","IBCRBG1",19,0)
 N IBI,IBX K ARR S ARR=0,IBIFN=+$G(IBIFN)
"RTN","IBCRBG1",20,0)
 S IBI=0 F  S IBI=$O(^DGCR(399,IBIFN,"CP",IBI)) Q:'IBI  D
"RTN","IBCRBG1",21,0)
 . S IBX=$G(^DGCR(399,IBIFN,"CP",IBI,0))
"RTN","IBCRBG1",22,0)
 . I +IBX,IBX[";ICPT(" S ARR=ARR+1,ARR(+IBX,IBI)=$P(IBX,U,2)_U_$$GETMOD^IBEFUNC(IBIFN,IBI)_U_$P(IBX,U,6)_U_$P(IBX,U,18)_U_$P(IBX,U,7)_U_$P(IBX,U,20)_U_$P(IBX,U,16)_U_$P(IBX,U,21)_U_$P(IBX,U,22)
"RTN","IBCRBG1",23,0)
 Q
"RTN","IBCRBG2")
0^13^B7014659
"RTN","IBCRBG2",1,0)
IBCRBG2 ;ALB/ARH - RATES: BILL SOURCE EVENTS (INPT CONT) ; 01-OCT-03
"RTN","IBCRBG2",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBCRBG2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRBG2",4,0)
 ;
"RTN","IBCRBG2",5,0)
INPTRSET(IBIFN,CS) ; reset Inpatient data due to bedsection Tort 03 and Other Type of Care RC v2.0
"RTN","IBCRBG2",6,0)
 ; (based on INPTPTF since that deals with timeframe and end of bill)
"RTN","IBCRBG2",7,0)
 N IBRC S IBRC=1 I +$G(CS),$E($G(^IBE(363.1,+CS,0)),1,2)'="RC" S IBRC=0
"RTN","IBCRBG2",8,0)
 ;
"RTN","IBCRBG2",9,0)
 D INPTBS(IBIFN,IBRC)
"RTN","IBCRBG2",10,0)
 D INPTOTH(IBIFN,IBRC)
"RTN","IBCRBG2",11,0)
 Q
"RTN","IBCRBG2",12,0)
 ;
"RTN","IBCRBG2",13,0)
INPTBS(IBIFN,RC) ; with output from INPTPTF^IBCRBG, reset bedsections due to changes with Tort 03 and RC
"RTN","IBCRBG2",14,0)
 ; - Some Specialties are changed to PRRTP bedsection (beginning with Tort 03)
"RTN","IBCRBG2",15,0)
 ; - Some Specialties are changed to ICU bedsection for RC only (beginning with RC v2.0)
"RTN","IBCRBG2",16,0)
 ; - Nursing Home Care and Observation bedsections are not billable with RC DRG (per diem) so remove DRG
"RTN","IBCRBG2",17,0)
 ; (based on INPTPTF since that deals with timeframe and end of bill)
"RTN","IBCRBG2",18,0)
 ;
"RTN","IBCRBG2",19,0)
 N IBDT,IBLN,IBSPCLTY,IBNLN,IBNBS,IBNDRG,IBCGTY
"RTN","IBCRBG2",20,0)
 ;
"RTN","IBCRBG2",21,0)
 S IBDT=0 F  S IBDT=$O(^TMP($J,"IBCRC-INDT",IBDT)) Q:'IBDT  D
"RTN","IBCRBG2",22,0)
 . S IBLN=$G(^TMP($J,"IBCRC-INDT",IBDT)) Q:'IBLN
"RTN","IBCRBG2",23,0)
 . S IBSPCLTY=$P(IBLN,U,6) Q:'IBSPCLTY
"RTN","IBCRBG2",24,0)
 . ;
"RTN","IBCRBG2",25,0)
 . S IBNLN=IBLN
"RTN","IBCRBG2",26,0)
 . S IBNBS=$$BSUPD(IBSPCLTY,IBDT,+$G(RC)) I +IBNBS S $P(IBNLN,U,2)=+IBNBS
"RTN","IBCRBG2",27,0)
 . S IBNDRG=$$NODRG(IBSPCLTY) I +IBNDRG S $P(IBNLN,U,4)=""
"RTN","IBCRBG2",28,0)
 . I 'IBNBS,'IBNDRG Q
"RTN","IBCRBG2",29,0)
 . S ^TMP($J,"IBCRC-INDT",IBDT)=IBNLN
"RTN","IBCRBG2",30,0)
 Q
"RTN","IBCRBG2",31,0)
 ; 
"RTN","IBCRBG2",32,0)
INPTOTH(IBIFN,RC) ; with output from INPTPTF^IBCRBG, reset Other type of care and Tort 03 changes
"RTN","IBCRBG2",33,0)
 ; - If type of care is Other then bedsection is replaced and DRG deleted (began with RC v2.0)
"RTN","IBCRBG2",34,0)
 ; (based on INPTPTF since that deals with timeframe and end of bill)
"RTN","IBCRBG2",35,0)
 ;
"RTN","IBCRBG2",36,0)
 N IBOT,IBOTLN,IBBS,IBDT1,IBDT2,IBDT,IBLN,IBNLN Q:'$G(RC)
"RTN","IBCRBG2",37,0)
 I +$G(IBIFN) S IBOT=0 F  S IBOT=$O(^DGCR(399,IBIFN,"OT",IBOT)) Q:'IBOT  D
"RTN","IBCRBG2",38,0)
 . S IBOTLN=$G(^DGCR(399,IBIFN,"OT",IBOT,0)) Q:'IBOTLN
"RTN","IBCRBG2",39,0)
 . S IBDT1=+$P(IBOTLN,U,2) Q:'IBDT1  S IBDT2=+$P(IBOTLN,U,3) Q:'IBDT2
"RTN","IBCRBG2",40,0)
 . S IBBS=+IBOTLN Q:'IBOTLN
"RTN","IBCRBG2",41,0)
 . ;
"RTN","IBCRBG2",42,0)
 . S IBDT=IBDT1-.1 F  S IBDT=$O(^TMP($J,"IBCRC-INDT",IBDT)) Q:('IBDT)!(IBDT'<IBDT2)  D
"RTN","IBCRBG2",43,0)
 .. S IBLN=$G(^TMP($J,"IBCRC-INDT",IBDT)) Q:'IBLN
"RTN","IBCRBG2",44,0)
 .. I IBDT<$$RC20 Q
"RTN","IBCRBG2",45,0)
 .. ;
"RTN","IBCRBG2",46,0)
 .. S IBNLN=IBLN
"RTN","IBCRBG2",47,0)
 .. S $P(IBNLN,U,2)=+IBBS,$P(IBNLN,U,4)=""
"RTN","IBCRBG2",48,0)
 .. S ^TMP($J,"IBCRC-INDT",IBDT)=IBNLN
"RTN","IBCRBG2",49,0)
 Q
"RTN","IBCRBG2",50,0)
 ;
"RTN","IBCRBG2",51,0)
 ;
"RTN","IBCRBG2",52,0)
BSUPD(SPCLTY,DATE,RC) ; return updated bedsection name for specialty passed in (42.4 ifn)
"RTN","IBCRBG2",53,0)
 ; beginning with TORT 2003 some specialties were moved to new PRRTP bedsection
"RTN","IBCRBG2",54,0)
 ; beginning with RC v2.0 some specialties were moved to a new ICU bedsection, only applies to RC charges
"RTN","IBCRBG2",55,0)
 N IBX,IBY,IBZ S (IBZ,IBX)="",SPCLTY=","_+$G(SPCLTY)_",",DATE=$S(+$G(DATE):(DATE\1),1:DT)
"RTN","IBCRBG2",56,0)
 I DATE'<$$TORT03,",25,26,27,28,29,38,39,"[SPCLTY S IBX="PRRTP"
"RTN","IBCRBG2",57,0)
 I +$G(RC),DATE'<$$RC20,",12,16,17,63,"[SPCLTY S IBX="ICU"
"RTN","IBCRBG2",58,0)
 I IBX'="" S IBY=$O(^DGCR(399.1,"B",IBX,0)) I +IBY S IBZ=IBY_U_IBX
"RTN","IBCRBG2",59,0)
 Q IBZ
"RTN","IBCRBG2",60,0)
 ;
"RTN","IBCRBG2",61,0)
TORT03() ; return effective date of TORT 2003, date when PRRTP bedsection specialties changed
"RTN","IBCRBG2",62,0)
 Q 9999999
"RTN","IBCRBG2",63,0)
 ;
"RTN","IBCRBG2",64,0)
RC20() ; return effective date of RC v2.0, date when ICU bedsection specialties changed
"RTN","IBCRBG2",65,0)
 Q 3031219
"RTN","IBCRBG2",66,0)
 ;
"RTN","IBCRBG2",67,0)
NODRG(SPCLTY) ; return specialty ifn followed by bedsection name if the specialty should not be charged a DRG charge
"RTN","IBCRBG2",68,0)
 N IBX,IBS S IBX=0,IBS=","_+$G(SPCLTY)_","
"RTN","IBCRBG2",69,0)
 I ",80,81,96,"[IBS S IBX=+SPCLTY_"^Nursing Home Care"
"RTN","IBCRBG2",70,0)
 I ",18,23,24,36,41,65,94,"[IBS S IBX=+SPCLTY_"^Observation"
"RTN","IBCRBG2",71,0)
 Q IBX
"RTN","IBCRBH1")
0^14^B59021504
"RTN","IBCRBH1",1,0)
IBCRBH1 ;ALB/ARH - RATES: BILL HELP DISPLAYS - CHARGES ; 10-OCT-1998
"RTN","IBCRBH1",2,0)
 ;;2.0;INTEGRATED BILLING;**106,245**;21-MAR-94
"RTN","IBCRBH1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRBH1",4,0)
 ;
"RTN","IBCRBH1",5,0)
DISPCHG(IBIFN) ; display a bills items and their charges, display only, does not change the charges on the bill
"RTN","IBCRBH1",6,0)
 ;
"RTN","IBCRBH1",7,0)
 D BILL(IBIFN,1),SORTCI(IBIFN),DSPCHRG(1) ;     display auto add charges
"RTN","IBCRBH1",8,0)
 K ^TMP($J,"IBCRCC"),^TMP($J,"IBCRCSX"),^TMP($J,"IBCRCSXR"),^TMP($J,"IBCRCSXN")
"RTN","IBCRBH1",9,0)
 D BILL(IBIFN,""),SORTCI(IBIFN),DSPCHRG("") ;   display non-auto add charges
"RTN","IBCRBH1",10,0)
 K ^TMP($J,"IBCRCC"),^TMP($J,"IBCRCSX"),^TMP($J,"IBCRCSXR"),^TMP($J,"IBCRCSXN")
"RTN","IBCRBH1",11,0)
 D NOTES(IBIFN,1)
"RTN","IBCRBH1",12,0)
 Q
"RTN","IBCRBH1",13,0)
 ;
"RTN","IBCRBH1",14,0)
BILL(IBIFN,IBAA,IBRSARR) ; given a bill number calculate charges using schedules that match the auto add flag
"RTN","IBCRBH1",15,0)
 ; if IBRSARR is defined it will be used to create charges rather than the standard set for the bills Rate Type
"RTN","IBCRBH1",16,0)
 ; Output:  ^TMP($J,"IBCRCC" - same as would be calculated if the charges were being added to bill
"RTN","IBCRBH1",17,0)
 ;
"RTN","IBCRBH1",18,0)
 N IB0,IBU,IBBRT,IBBTYPE,IBCTYPE,IBRS,IBCS,IBBEVNT Q:'$G(IBIFN)
"RTN","IBCRBH1",19,0)
 K ^TMP($J,"IBCRCC")
"RTN","IBCRBH1",20,0)
 ;
"RTN","IBCRBH1",21,0)
 S IB0=$G(^DGCR(399,+IBIFN,0)) Q:IB0=""  S IBU=$G(^DGCR(399,+IBIFN,"U")) Q:'IBU
"RTN","IBCRBH1",22,0)
 S IBBRT=+$P(IB0,U,7),IBBTYPE=$S($P(IB0,U,5)<3:1,1:3),IBCTYPE=+$P(IB0,U,27)
"RTN","IBCRBH1",23,0)
 ;
"RTN","IBCRBH1",24,0)
 ; get standard set of all rate schedules and charge sets available for the bill
"RTN","IBCRBH1",25,0)
 I '$D(IBRSARR) D RT^IBCRU3(IBBRT,IBBTYPE,$P(IBU,U,1,2),.IBRSARR,"",IBCTYPE) I 'IBRSARR G END
"RTN","IBCRBH1",26,0)
 ;
"RTN","IBCRBH1",27,0)
 ; process charge sets - set all charges for the bill into array
"RTN","IBCRBH1",28,0)
 S IBRS=0 F  S IBRS=$O(IBRSARR(IBRS)) Q:'IBRS  D
"RTN","IBCRBH1",29,0)
 . S IBCS=0 F  S IBCS=$O(IBRSARR(IBRS,IBCS)) Q:'IBCS  I IBRSARR(IBRS,IBCS)=IBAA D
"RTN","IBCRBH1",30,0)
 .. S IBBEVNT=+$P($G(^IBE(363.1,+IBCS,0)),U,3) Q:'IBBEVNT  S IBBEVNT=$$EMUTL^IBCRU1(IBBEVNT) Q:IBBEVNT=""
"RTN","IBCRBH1",31,0)
 .. ;
"RTN","IBCRBH1",32,0)
 .. I IBBEVNT["INPATIENT BEDSECTION STAY" D INPTBS^IBCRBC1(IBIFN,IBRS,IBCS)
"RTN","IBCRBH1",33,0)
 .. I IBBEVNT["INPATIENT DRG" D INPTDRG^IBCRBC11(IBIFN,IBRS,IBCS)
"RTN","IBCRBH1",34,0)
 .. I IBBEVNT["OUTPATIENT VISIT DATE" D OPTVST^IBCRBC1(IBIFN,IBRS,IBCS)
"RTN","IBCRBH1",35,0)
 .. I IBBEVNT["PRESCRIPTION" D RX^IBCRBC1(IBIFN,IBRS,IBCS)
"RTN","IBCRBH1",36,0)
 .. I IBBEVNT["PROSTHETICS" D PI^IBCRBC1(IBIFN,IBRS,IBCS)
"RTN","IBCRBH1",37,0)
 .. I IBBEVNT["PROCEDURE" D CPT^IBCRBC1(IBIFN,IBRS,IBCS)
"RTN","IBCRBH1",38,0)
 ;
"RTN","IBCRBH1",39,0)
 I '$D(^TMP($J,"IBCRCC")) G END
"RTN","IBCRBH1",40,0)
 ;
"RTN","IBCRBH1",41,0)
 D MULTCPT^IBCRBCA1
"RTN","IBCRBH1",42,0)
 D PSB^IBCRBCA2
"RTN","IBCRBH1",43,0)
 D MODADJ^IBCRBCA3
"RTN","IBCRBH1",44,0)
 ;
"RTN","IBCRBH1",45,0)
END Q
"RTN","IBCRBH1",46,0)
 ;
"RTN","IBCRBH1",47,0)
 ;
"RTN","IBCRBH1",48,0)
SORTCI(IBIFN) ; process charge array - create new array in sorted order with items combined, if possible
"RTN","IBCRBH1",49,0)
 ; if bs, rv cd, charge, cpt, div, item type, item ptr and component all match then charge is combined
"RTN","IBCRBH1",50,0)
 ; Input:  TMP($J,"IBCRCC",X) = ...  (from IBCRBC2)
"RTN","IBCRBH1",51,0)
 ; Output: TMP($J,"IBCRCSX",X) = 
"RTN","IBCRBH1",52,0)
 ;         RV CD ^ BS ^ CHG ^ UNITS ^ CPT ^ DIV ^ ITM TYPE ^ ITM PTR ^ CHRG CMPNT ^ CHRG SET ^ EVNT DT ^ ITM NAME
"RTN","IBCRBH1",53,0)
 ;         TMP($J,"IBCRCSX",X,"CC",Y) = charge adjustment messages
"RTN","IBCRBH1",54,0)
 ;         TMP($J,"IBCRCSXR",BS,RV CD,X) = ""
"RTN","IBCRBH1",55,0)
 ;         TMP($J,"IBCRCSXN",DATE,ITEM NAME,X) = ""
"RTN","IBCRBH1",56,0)
 ;
"RTN","IBCRBH1",57,0)
 N IBI,IBLN,IBRVCD,IBBS,IBCHG,IBUNITS,IBCPT,IBDV,IBIT,IBIP,IBCMPT,IBCS,IBDT,IBNM,IBTUNITS,IBK,IBJ,IBX,IBY
"RTN","IBCRBH1",58,0)
 K ^TMP($J,"IBCRCSX"),^TMP($J,"IBCRCSXR"),^TMP($J,"IBCRCSXN")
"RTN","IBCRBH1",59,0)
 ;
"RTN","IBCRBH1",60,0)
 S IBI=0 F  S IBI=$O(^TMP($J,"IBCRCC",IBI)) Q:'IBI  D
"RTN","IBCRBH1",61,0)
 . ;
"RTN","IBCRBH1",62,0)
 . S IBLN=^TMP($J,"IBCRCC",IBI)
"RTN","IBCRBH1",63,0)
 . S IBRVCD=$P(IBLN,U,6),IBBS=$P(IBLN,U,7),IBCHG=+$FN($P(IBLN,U,12),"",2),IBUNITS=$P(IBLN,U,13)
"RTN","IBCRBH1",64,0)
 . S IBCPT=$P(IBLN,U,14),IBDV=$P(IBLN,U,15),IBIT=$P(IBLN,U,16),IBIP=$P(IBLN,U,17),IBCMPT=$P(IBLN,U,18)
"RTN","IBCRBH1",65,0)
 . S IBCS=$P(IBLN,U,2),IBDT=$P(IBLN,U,8),IBNM=$$ITMNM($G(IBIFN),IBBS,IBIT,IBIP,IBCPT)
"RTN","IBCRBH1",66,0)
 . ;
"RTN","IBCRBH1",67,0)
 . ; combine like charges, unless there are comments
"RTN","IBCRBH1",68,0)
 . S (IBTUNITS,IBK,IBJ)=0 F  S IBJ=$O(^TMP($J,"IBCRCSXR",+IBBS,+IBRVCD,IBJ)) Q:'IBJ  S IBK=IBJ D  Q:+IBTUNITS
"RTN","IBCRBH1",69,0)
 .. I $D(^TMP($J,"IBCRCC",IBI,"CC")) Q
"RTN","IBCRBH1",70,0)
 .. S IBX=$G(^TMP($J,"IBCRCSX",IBJ))
"RTN","IBCRBH1",71,0)
 .. I IBCHG=$P(IBX,U,3),IBCPT=$P(IBX,U,5),IBDV=$P(IBX,U,6),IBIT=$P(IBX,U,7),IBIP=$P(IBX,U,8),IBCMPT=$P(IBX,U,9) D
"RTN","IBCRBH1",72,0)
 ... S IBTUNITS=$P(IBX,U,4),IBDT=$P(IBX,U,11)
"RTN","IBCRBH1",73,0)
 . ;
"RTN","IBCRBH1",74,0)
 . I 'IBTUNITS S IBK=IBI ; no combination, new line item charge
"RTN","IBCRBH1",75,0)
 . S IBTUNITS=IBTUNITS+IBUNITS
"RTN","IBCRBH1",76,0)
 . ;
"RTN","IBCRBH1",77,0)
 . S ^TMP($J,"IBCRCSXR",+IBBS,+IBRVCD,IBK)=""
"RTN","IBCRBH1",78,0)
 . S ^TMP($J,"IBCRCSXN",IBDT_" ",IBNM_" ",IBK)=""
"RTN","IBCRBH1",79,0)
 . S ^TMP($J,"IBCRCSX",IBK)=IBRVCD_U_+IBBS_U_IBCHG_U_IBTUNITS_U_IBCPT_U_IBDV_U_IBIT_U_IBIP_U_IBCMPT_U_IBCS_U_IBDT_U_IBNM
"RTN","IBCRBH1",80,0)
 . S IBY=0 F  S IBY=$O(^TMP($J,"IBCRCC",IBI,"CC",IBY)) Q:'IBY  S ^TMP($J,"IBCRCSX",IBK,"CC",IBY)=^TMP($J,"IBCRCC",IBI,"CC",IBY)
"RTN","IBCRBH1",81,0)
 Q
"RTN","IBCRBH1",82,0)
 ;
"RTN","IBCRBH1",83,0)
DSPCHRG(AA) ; display charges
"RTN","IBCRBH1",84,0)
 ; Input: TMP($J,"IBCRCSx",...) = ... (from SORTCI)
"RTN","IBCRBH1",85,0)
 ;
"RTN","IBCRBH1",86,0)
 N IBX,IBI,IBJ,IBK,IBLN,IBCNT,IBRVCD,IBCHG,IBUNITS,IBDV,IBCMPT,IBCS,IBDT,IBNM,IBTOTAL,IBQUIT,IBY S (IBTOTAL,IBQUIT)=0
"RTN","IBCRBH1",87,0)
 ;
"RTN","IBCRBH1",88,0)
 D DSPHDR(AA) S IBCNT=4
"RTN","IBCRBH1",89,0)
 ;
"RTN","IBCRBH1",90,0)
 S IBI="" F  S IBI=$O(^TMP($J,"IBCRCSXN",IBI)) Q:IBI=""  D  Q:IBQUIT
"RTN","IBCRBH1",91,0)
 . S IBJ="" F  S IBJ=$O(^TMP($J,"IBCRCSXN",IBI,IBJ)) Q:IBJ=""  D  Q:IBQUIT
"RTN","IBCRBH1",92,0)
 .. S IBK=0 F  S IBK=$O(^TMP($J,"IBCRCSXN",IBI,IBJ,IBK)) Q:'IBK  D  Q:IBQUIT
"RTN","IBCRBH1",93,0)
 ... S IBLN=$G(^TMP($J,"IBCRCSX",IBK)) Q:IBLN=""
"RTN","IBCRBH1",94,0)
 ... ;
"RTN","IBCRBH1",95,0)
 ... ; add charges to RC multiple
"RTN","IBCRBH1",96,0)
 ... S IBRVCD=$P(IBLN,U,1),IBCHG=$P(IBLN,U,3),IBUNITS=$P(IBLN,U,4),IBDV=$P(IBLN,U,6)
"RTN","IBCRBH1",97,0)
 ... S IBCMPT=$P(IBLN,U,9),IBCS=$P(IBLN,U,10),IBDT=$P(IBLN,U,11),IBNM=$P(IBLN,U,12)
"RTN","IBCRBH1",98,0)
 ... S IBTOTAL=IBTOTAL+(IBCHG*IBUNITS),IBCNT=IBCNT+1
"RTN","IBCRBH1",99,0)
 ... ;
"RTN","IBCRBH1",100,0)
 ... S IBX=IBRVCD_U_IBCHG_U_IBUNITS_U_IBCMPT_U_IBCS_U_IBDT_U_IBDV_U_IBNM D DSPLN(IBX)
"RTN","IBCRBH1",101,0)
 ... ;
"RTN","IBCRBH1",102,0)
 ... S IBY=0 F  S IBY=$O(^TMP($J,"IBCRCSX",IBK,"CC",IBY)) Q:'IBY  D
"RTN","IBCRBH1",103,0)
 .... S IBX=$G(^TMP($J,"IBCRCSX",IBK,"CC",IBY)) I IBX'="" D DISPLNC(IBX) S IBCNT=IBCNT+1
"RTN","IBCRBH1",104,0)
 ... I $O(^TMP($J,"IBCRCSX",IBK,"CC",0)) D DISPLNC("") S IBCNT=IBCNT+1
"RTN","IBCRBH1",105,0)
 ... ;
"RTN","IBCRBH1",106,0)
 ... I IBCNT>20 S IBQUIT=$$PAUSE(IBCNT) Q:IBQUIT  D DSPHDR(AA) S IBCNT=4
"RTN","IBCRBH1",107,0)
 ;
"RTN","IBCRBH1",108,0)
 I +IBTOTAL W !,?72,"--------",!,?70,$J(IBTOTAL,10,2) S IBCNT=IBCNT+2
"RTN","IBCRBH1",109,0)
 I 'IBQUIT S IBQUIT=$$PAUSE(IBCNT)
"RTN","IBCRBH1",110,0)
 Q
"RTN","IBCRBH1",111,0)
 ;
"RTN","IBCRBH1",112,0)
DSPHDR(AA) ;
"RTN","IBCRBH1",113,0)
 W @IOF,!,"Items and Charges on this Bill ("_$S('AA:"NOT ",1:"")_"Auto Add)"
"RTN","IBCRBH1",114,0)
 W !,"Item",?18,"Date",?28,"Charge Set",?40,"Div",?47,"Type",?52,"RvCd",?57,"Units",?64,"Charge",?75,"Total"
"RTN","IBCRBH1",115,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCRBH1",116,0)
 Q
"RTN","IBCRBH1",117,0)
 ;
"RTN","IBCRBH1",118,0)
DSPLN(LN) ;
"RTN","IBCRBH1",119,0)
 N CS,DIV,CMP,RVCD,ITM,CHG,UNIT S LN=$G(LN)
"RTN","IBCRBH1",120,0)
 S CS=$P(LN,U,5) I +CS S CS=$P($G(^IBE(363.1,+$P(LN,U,5),0)),U,1)
"RTN","IBCRBH1",121,0)
 S DIV=$P($G(^DG(40.8,+$P(LN,U,7),0)),U,2)
"RTN","IBCRBH1",122,0)
 S CMP=$S($P(LN,U,4)=1:"INST",$P(LN,U,4)=2:"PROF",1:"")
"RTN","IBCRBH1",123,0)
 S RVCD=$P($G(^DGCR(399.2,+LN,0)),U,1)
"RTN","IBCRBH1",124,0)
 S ITM=$P(LN,U,8),CHG=+$P(LN,U,2),UNIT=$P(LN,U,3)
"RTN","IBCRBH1",125,0)
 W !,$E(ITM,1,15),?18,$$DATE($P(LN,U,6)),?28,$E(CS,1,7),?40,DIV,?47,CMP,?52,RVCD,?57,$J(UNIT,3),?62,$J(CHG,8,2),?71,$J((UNIT*CHG),9,2)
"RTN","IBCRBH1",126,0)
 Q
"RTN","IBCRBH1",127,0)
 ;
"RTN","IBCRBH1",128,0)
DISPLNC(LN) ; display charge adjustment commenmts
"RTN","IBCRBH1",129,0)
 W !,?18,$G(LN)
"RTN","IBCRBH1",130,0)
 Q
"RTN","IBCRBH1",131,0)
 ;
"RTN","IBCRBH1",132,0)
DATE(X) ;
"RTN","IBCRBH1",133,0)
 S X=$G(X),X=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCRBH1",134,0)
 Q X
"RTN","IBCRBH1",135,0)
 ;
"RTN","IBCRBH1",136,0)
PAUSE(CNT) ;
"RTN","IBCRBH1",137,0)
 N IBI F IBI=CNT:1:22 W !
"RTN","IBCRBH1",138,0)
 N DIR,DUOUT,DTOUT,DIRUT,IBX,X,Y S IBX=0,DIR(0)="E" D ^DIR K DIR I $D(DIRUT) S IBX=1
"RTN","IBCRBH1",139,0)
 Q IBX
"RTN","IBCRBH1",140,0)
 ;
"RTN","IBCRBH1",141,0)
ITMNM(IBIFN,IBBS,IBIT,IBIP,IBCPT) ; return external form of the item name
"RTN","IBCRBH1",142,0)
 N ITM S ITM="",IBBS=$G(IBBS),IBIT=$G(IBIT),IBIP=$G(IBIP),IBCPT=$G(IBCPT)
"RTN","IBCRBH1",143,0)
 I +IBIP S ITM=$$NAME^IBCSC61(IBIT,IBIP)
"RTN","IBCRBH1",144,0)
 I ITM="",+IBIT=4,+$G(IBIFN) S ITM=$$CPTNM(IBIFN,IBIT,IBIP)
"RTN","IBCRBH1",145,0)
 I ITM="",+IBCPT S ITM=$P($$CPT^ICPTCOD(+IBCPT,DT),U,2)
"RTN","IBCRBH1",146,0)
 I ITM="" S ITM=$$EMUTL^IBCRU1(IBBS)
"RTN","IBCRBH1",147,0)
 Q ITM
"RTN","IBCRBH1",148,0)
 ;
"RTN","IBCRBH1",149,0)
CPTNM(IBIFN,TYPE,ITEM) ; retrurn external name of the charge item if it is a CPT item (type=399,42,.1)
"RTN","IBCRBH1",150,0)
 N IBX,NAME S IBX=0,NAME=""
"RTN","IBCRBH1",151,0)
 I +$G(TYPE)=4 S IBX=$G(^DGCR(399,+$G(IBIFN),"CP",+$G(ITEM),0))
"RTN","IBCRBH1",152,0)
 I +IBX S NAME=$P($$CPT^ICPTCOD(+$P(IBX,U,1),DT),U,2)
"RTN","IBCRBH1",153,0)
 I +IBX S IBX=$$GETMOD^IBEFUNC(+$G(IBIFN),+$G(ITEM),1) I IBX'="" S NAME=NAME_"-"_IBX
"RTN","IBCRBH1",154,0)
 Q NAME
"RTN","IBCRBH1",155,0)
 ;
"RTN","IBCRBH1",156,0)
 ;
"RTN","IBCRBH1",157,0)
 ;
"RTN","IBCRBH1",158,0)
 ;
"RTN","IBCRBH1",159,0)
NOTES(IBIFN,PAUSE) ; compile and print charge notes for a bill
"RTN","IBCRBH1",160,0)
 ;
"RTN","IBCRBH1",161,0)
 ; Current Checks are for those Treating Specialties that should not be billed using DRG:
"RTN","IBCRBH1",162,0)
 ; - Inpatient Institutional Reasonable Charges bill contains SNF Treating Specialty
"RTN","IBCRBH1",163,0)
 ; - Inpatient Institutional Reasonable Charges bill contains Observation Treating Specialty
"RTN","IBCRBH1",164,0)
 ;
"RTN","IBCRBH1",165,0)
 I $D(ZTQUEUED)!(+$G(IBAUTO)) Q
"RTN","IBCRBH1",166,0)
 N IB0,IBU,PTF,BEG,END,IBMVLN,IBENDDT,IBMDRG,IBFND,IBMSG,IBX S IBFND=0 K ^TMP($J,"IBCRC-PTF")
"RTN","IBCRBH1",167,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)) Q:IB0=""  S IBU=$G(^DGCR(399,+$G(IBIFN),"U")) Q:'IBU
"RTN","IBCRBH1",168,0)
 ;
"RTN","IBCRBH1",169,0)
 I '$$BILLRATE^IBCRU3($P(IB0,U,7),$P(IB0,U,5),$P(IB0,U,3),"RC") Q  ; not Reasonable Charges bill
"RTN","IBCRBH1",170,0)
 ;
"RTN","IBCRBH1",171,0)
 ; Outpatient Freestanding bill: display message if this is a non-provider based freestanding bill
"RTN","IBCRBH1",172,0)
 I $P(IB0,U,5)=3,$P(IB0,U,3)'<$$VERSDT^IBCRU8(2),$P($$RCDV^IBCRU8(+$P(IB0,U,22)),U,3)=3 D
"RTN","IBCRBH1",173,0)
 . S IBFND=IBFND+1,IBX=">>> Bill Division is Freestanding Non-Provider with Professional Charges only.",IBMSG(IBFND)=IBX
"RTN","IBCRBH1",174,0)
 ;
"RTN","IBCRBH1",175,0)
 ; Inpatient Institutional bill: check for treating specialties that should not be billed by DRG
"RTN","IBCRBH1",176,0)
 I +$P(IB0,U,8),$P(IB0,U,5)<3,$P(IB0,U,27)<2 D
"RTN","IBCRBH1",177,0)
 . ;
"RTN","IBCRBH1",178,0)
 . S PTF=+$P(IB0,U,8),BEG=+$P(IBU,U,1)\1,END=$S(+$P(IBU,U,2):+$P(IBU,U,2)\1,1:DT)
"RTN","IBCRBH1",179,0)
 . ;
"RTN","IBCRBH1",180,0)
 . D PTF^IBCRBG(PTF)
"RTN","IBCRBH1",181,0)
 . ;
"RTN","IBCRBH1",182,0)
 . S IBENDDT=BEG F  S IBENDDT=$O(^TMP($J,"IBCRC-PTF",IBENDDT)) Q:'IBENDDT  D  I IBENDDT>END Q
"RTN","IBCRBH1",183,0)
 .. I (IBENDDT\1)=BEG,BEG'=END Q
"RTN","IBCRBH1",184,0)
 .. ;
"RTN","IBCRBH1",185,0)
 .. S IBMVLN=$G(^TMP($J,"IBCRC-PTF",IBENDDT)),IBMVLN=+$P(IBMVLN,U,6) Q:'IBMVLN
"RTN","IBCRBH1",186,0)
 .. S IBMDRG=$$NODRG^IBCRBG2(IBMVLN) Q:'IBMDRG
"RTN","IBCRBH1",187,0)
 .. ;
"RTN","IBCRBH1",188,0)
 .. S IBFND=IBFND+1,IBX=">>> "_$P(IBMDRG,U,2)_" ("_$$FMTE^XLFDT(IBENDDT,2)_") not billed using DRG"
"RTN","IBCRBH1",189,0)
 .. S:IBMDRG["Nursing" IBX=IBX_", use SNF." S:IBMDRG["Observa" IBX=IBX_", use Procedures."
"RTN","IBCRBH1",190,0)
 .. S IBMSG(IBFND)=$G(IBX)
"RTN","IBCRBH1",191,0)
 ;
"RTN","IBCRBH1",192,0)
 I +IBFND D  I +$G(PAUSE) S IBFND=$$PAUSE(21)
"RTN","IBCRBH1",193,0)
 . W ! S IBX="" F  S IBX=$O(IBMSG(IBX)) Q:IBX=""  W !,IBMSG(IBX)
"RTN","IBCRBH1",194,0)
 K ^TMP($J,"IBCRC-PTF")
"RTN","IBCRBH1",195,0)
 Q
"RTN","IBCRBH2")
0^63^B6439962
"RTN","IBCRBH2",1,0)
IBCRBH2 ;ALB/ARH - RATES: BILL HELP DISPLAYS - CPT CHARGES ; 01-OCT-03
"RTN","IBCRBH2",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBCRBH2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRBH2",4,0)
 ;
"RTN","IBCRBH2",5,0)
 ;
"RTN","IBCRBH2",6,0)
BCPTCHG(IBIFN) ; select a CPT code and display potential charges for a specific bill
"RTN","IBCRBH2",7,0)
 N IB0,IBU,IBBDV,IBCPT,IBCPTN,IBCPT1,IBRS,IBCS,IBCSN,IBEVDT,IBCI,IBLN,IBEFFDT,IBRVCD,IBCHGB,IBFND,CHGARR,ARRCS,DONEARR,IBX
"RTN","IBCRBH2",8,0)
 ;
"RTN","IBCRBH2",9,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)) Q:IB0=""
"RTN","IBCRBH2",10,0)
 S IBU=$G(^DGCR(399,+$G(IBIFN),"U")) Q:'IBU
"RTN","IBCRBH2",11,0)
 S IBBDV=$P(IB0,U,22)
"RTN","IBCRBH2",12,0)
 ;
"RTN","IBCRBH2",13,0)
 W @IOF,!,"Search for Procedure Charges for " I +IBBDV S IBX=$G(^DG(40.8,+IBBDV,0)) W $P(IBX,U,2)," - ",$P(IBX,U,1)
"RTN","IBCRBH2",14,0)
 W !,"--------------------------------------------------------------------------------",!
"RTN","IBCRBH2",15,0)
 ;
"RTN","IBCRBH2",16,0)
 D RT^IBCRU3($P(IB0,U,7),$P(IB0,U,5),$P(IBU,U,1,2),.ARRCS,"PROCEDURE")
"RTN","IBCRBH2",17,0)
 I '$O(ARRCS(0)) W !,"No Rate Schedules with Procedure charges assigned to this bill.",! H 2 Q
"RTN","IBCRBH2",18,0)
 ;
"RTN","IBCRBH2",19,0)
 F  S IBCPT=$$GETCPT^IBCRU1() Q:+IBCPT<1  S IBCPTN=$P(IBCPT,U,1),IBCPT=$P(IBCPT,U,2) W ! D
"RTN","IBCRBH2",20,0)
 . ;
"RTN","IBCRBH2",21,0)
 . S IBRS=0 F  S IBRS=$O(ARRCS(IBRS)) Q:'IBRS  S IBFND=0 D  I +IBFND W !
"RTN","IBCRBH2",22,0)
 .. S IBCS=0 F  S IBCS=$O(ARRCS(IBRS,IBCS)) Q:'IBCS  I +ARRCS(IBRS,IBCS) D  K DONEARR
"RTN","IBCRBH2",23,0)
 ... S IBCSN=$P($G(^IBE(363.1,+IBCS,0)),U,1)
"RTN","IBCRBH2",24,0)
 ... ;
"RTN","IBCRBH2",25,0)
 ... I $$CSDV^IBCRU3(IBCS,IBBDV)<0 Q  ; check division
"RTN","IBCRBH2",26,0)
 ... ;
"RTN","IBCRBH2",27,0)
 ... F IBEVDT=+IBU,+$P(IBU,U,2) I +$$FNDCI^IBCRU4(IBCS,IBCPTN,IBEVDT,.CHGARR) D  K CHGARR
"RTN","IBCRBH2",28,0)
 .... ;
"RTN","IBCRBH2",29,0)
 .... S IBCI=0 F  S IBCI=$O(CHGARR(IBCI)) Q:'IBCI  I '$D(DONEARR(IBCI)) D
"RTN","IBCRBH2",30,0)
 ..... S IBLN=CHGARR(IBCI),DONEARR(IBCI)="",IBFND=1
"RTN","IBCRBH2",31,0)
 ..... S IBEFFDT=$$FMTE^XLFDT(+$P(IBLN,U,3),2)
"RTN","IBCRBH2",32,0)
 ..... S IBCPT1=IBCPT I +$P(IBLN,U,7) S IBCPT1=IBCPT1_"-"_$P($$MOD^ICPTMOD(+$P(IBLN,U,7),"I",IBEFFDT),U,2)
"RTN","IBCRBH2",33,0)
 ..... S IBRVCD=$$RVCPT^IBCROI(+$P(IBLN,U,6),+$P(IBLN,U,1),+$P(IBLN,U,2))
"RTN","IBCRBH2",34,0)
 ..... S IBCHGB="" I +$P(IBLN,U,8) S IBCHGB="+"_$J($P(IBLN,U,8),0,2)
"RTN","IBCRBH2",35,0)
 ..... ;
"RTN","IBCRBH2",36,0)
 ..... W !,?4,IBCPT1,?15,IBEFFDT,?26,IBCSN,?55,$J($P(IBLN,U,5),10,2),IBCHGB,?75,IBRVCD
"RTN","IBCRBH2",37,0)
 . I 'IBFND W ?60,"no charge found...",!
"RTN","IBCRBH2",38,0)
 Q
"RTN","IBCRCC")
0^15^B17873250
"RTN","IBCRCC",1,0)
IBCRCC ;ALB/ARH - RATES: CALCULATION OF ITEM CHARGE ; 22-MAY-1996
"RTN","IBCRCC",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,138,245**;21-MAR-94
"RTN","IBCRCC",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRCC",4,0)
 ;
"RTN","IBCRCC",5,0)
 ; ITMCHG and RATECHG are basic item/set/rate charge functions, IBCRCI contains more standard callable functions
"RTN","IBCRCC",6,0)
 ;
"RTN","IBCRCC",7,0)
ITMCHG(CS,ITEM,EVDT,MOD,ARR) ; get the base unit charges for a specific item, given a charge set, item and date
"RTN","IBCRCC",8,0)
 ; this is the primary function to get an item charge and works for all Charge Methods, given an Item
"RTN","IBCRCC",9,0)
 ; returns ARR = count of items in array ^ total charge for item ^ total base charge
"RTN","IBCRCC",10,0)
 ;         ARR(x) = charge item IFN (if any) ^ rev code (if any) ^ $ charge ^ $ base charge
"RTN","IBCRCC",11,0)
 ; checks Item effective and inactive dates, modifier match, and only sets array if the charge is non-zero
"RTN","IBCRCC",12,0)
 ; each item will be passed back separately in the array, no combination of charges
"RTN","IBCRCC",13,0)
 ;
"RTN","IBCRCC",14,0)
 N IBCSBR,IBEVDT,IBEFDT,IBXREF,IBITEM,IBDA,IBLN,IBCHRG,IBITMFND K ARR S ARR=0
"RTN","IBCRCC",15,0)
 S CS=+$G(CS),IBEVDT=$S(+$G(EVDT):+EVDT,1:DT),IBITEM=+$G(ITEM),MOD=$G(MOD) I 'CS!'IBITEM Q
"RTN","IBCRCC",16,0)
 S IBCSBR=$$CSBR^IBCRU3(CS)
"RTN","IBCRCC",17,0)
 ;
"RTN","IBCRCC",18,0)
 ; va cost
"RTN","IBCRCC",19,0)
 I $P(IBCSBR,U,5)=2 D  Q  ; va cost
"RTN","IBCRCC",20,0)
 . I $P(IBCSBR,U,1)["PROSTHETICS" S IBCHRG=$$PICOST(IBITEM)  I +IBCHRG D SETARR(0,0,+IBCHRG,.ARR) Q
"RTN","IBCRCC",21,0)
 . I $P(IBCSBR,U,1)["PRESCRIPTION" S IBCHRG=$$RXCOST(IBITEM) I +IBCHRG D SETARR(0,0,+IBCHRG,.ARR) Q
"RTN","IBCRCC",22,0)
 ;
"RTN","IBCRCC",23,0)
 ; all others - have Charge Item entries
"RTN","IBCRCC",24,0)
 ;
"RTN","IBCRCC",25,0)
 ; find most recent Charge Item for the item, search until modifiers match (only BI=CPT should have mods defined)
"RTN","IBCRCC",26,0)
 S IBXREF="AIVDTS"_CS,IBITMFND=0
"RTN","IBCRCC",27,0)
 S IBEFDT=-(IBEVDT+.01) F  S IBEFDT=$O(^IBA(363.2,IBXREF,IBITEM,IBEFDT)) Q:'IBEFDT  D  Q:IBITMFND
"RTN","IBCRCC",28,0)
 . S IBDA=0 F  S IBDA=$O(^IBA(363.2,IBXREF,IBITEM,IBEFDT,IBDA)) Q:'IBDA  D
"RTN","IBCRCC",29,0)
 .. S IBLN=$G(^IBA(363.2,IBDA,0))
"RTN","IBCRCC",30,0)
 .. I +$P(IBLN,U,7)'=+MOD Q  ; charge item modifier does not match modifier passed in
"RTN","IBCRCC",31,0)
 .. S IBITMFND=1 ; item found
"RTN","IBCRCC",32,0)
 .. I +$P(IBLN,U,4),+$P(IBLN,U,4)<IBEVDT Q  ; charge is inactive on event date
"RTN","IBCRCC",33,0)
 .. I +$P(IBLN,U,5) D SETARR(IBDA,+$P(IBLN,U,6),+$P(IBLN,U,5),.ARR,$P(IBLN,U,8))
"RTN","IBCRCC",34,0)
 Q
"RTN","IBCRCC",35,0)
 ;
"RTN","IBCRCC",36,0)
SETARR(CI,RVCD,CHRG,ARR,CHRGB) ; set charges into an array, does not allow zero charge, a new entry is created each time,
"RTN","IBCRCC",37,0)
 ; no attempt to combine like items, the new item charge is added to any that may already be in the array 
"RTN","IBCRCC",38,0)
 ; returns ARR = count of items in array ^ total charge for item
"RTN","IBCRCC",39,0)
 ;         ARR(x) = charge item IFN (if any) ^ item rev code (if any) ^ $ charge
"RTN","IBCRCC",40,0)
 ;
"RTN","IBCRCC",41,0)
 N CNT,TCHRG,TCHRGB
"RTN","IBCRCC",42,0)
 S CNT=+$G(ARR)+1,TCHRG=$P($G(ARR),U,2)+$G(CHRG) I +$G(CHRGB) S TCHRGB=+$P($G(ARR),U,3)+CHRGB
"RTN","IBCRCC",43,0)
 I +$G(CHRG) S ARR=CNT_U_+TCHRG_U_$G(TCHRGB),ARR(CNT)=$G(CI)_U_+$G(RVCD)_U_+CHRG_U_$G(TCHRGB)
"RTN","IBCRCC",44,0)
 Q
"RTN","IBCRCC",45,0)
 ;
"RTN","IBCRCC",46,0)
PICOST(PI) ; returns (PI=ptr 362.5): total VA cost of an item (660,14) ^ quantity (660,5) from prosthetics ^ bill IFN
"RTN","IBCRCC",47,0)
 ;
"RTN","IBCRCC",48,0)
 N IBPIP,IBLN,IBX,IBIFN S (IBPIP,IBX)=0
"RTN","IBCRCC",49,0)
 I +$G(PI) S IBLN=$G(^IBA(362.5,+PI,0)),IBPIP=$P(IBLN,U,4),IBIFN=$P(IBLN,U,2)
"RTN","IBCRCC",50,0)
 I +IBPIP S IBLN=$G(^RMPR(660,+IBPIP,0)) I IBLN'="" S IBX=$P(IBLN,U,16)_U_$P(IBLN,U,7)_U_IBIFN
"RTN","IBCRCC",51,0)
 Q IBX
"RTN","IBCRCC",52,0)
 ;
"RTN","IBCRCC",53,0)
RATECHG(RS,CHG,EVDT) ; returns modifed item charge based on rate schedule:  check effective dates, apply adjustment
"RTN","IBCRCC",54,0)
 ; adjusted amount ^ comment (if there is an adjustment)
"RTN","IBCRCC",55,0)
 ;
"RTN","IBCRCC",56,0)
 N IBX,IBRS0,IBRS10,IBEFDT,IBINADT,IBRTY,X S IBRTY=""
"RTN","IBCRCC",57,0)
 S IBX=+$G(CHG),IBRS0=$G(^IBE(363,+$G(RS),0)),IBRS10=$G(^IBE(363,+$G(RS),10))
"RTN","IBCRCC",58,0)
 S EVDT=$S(+$G(EVDT):EVDT,1:DT),IBEFDT=$P(IBRS0,U,5),IBINADT=$P(IBRS0,U,6)
"RTN","IBCRCC",59,0)
 I +IBEFDT>EVDT!(+IBINADT&(IBINADT<EVDT)) S IBX=0
"RTN","IBCRCC",60,0)
 I +IBX,IBRS10'="" S X=IBX X IBRS10 S IBX=X,IBRTY="^Rate Schedule Adjustment ("_$J(CHG,"",2)_")"
"RTN","IBCRCC",61,0)
 Q IBX_IBRTY
"RTN","IBCRCC",62,0)
 ;
"RTN","IBCRCC",63,0)
RXCOST(RX) ; returns (RX=ptr 362.4): VA Cost of an Rx - Per Unit Cost ^ bill IFN
"RTN","IBCRCC",64,0)
 ; w/ Per Unit Cost = RX (Unit Price of Drug - 52,17) or Drug (Price Per Dispense Unit 50,16) cost
"RTN","IBCRCC",65,0)
 ;
"RTN","IBCRCC",66,0)
 N IBRXP,IBDGP,IBLN,IBX,IBIFN S (IBRXP,IBX)=0
"RTN","IBCRCC",67,0)
 I +$G(RX) S IBLN=$G(^IBA(362.4,+RX,0)),IBRXP=$P(IBLN,U,5),IBDGP=$P(IBLN,U,4),IBIFN=$P(IBLN,U,2)
"RTN","IBCRCC",68,0)
 I +IBRXP S IBLN=$G(^PSRX(+IBRXP,0)) I IBLN'="" S IBX=$P(IBLN,U,17)_U_IBIFN
"RTN","IBCRCC",69,0)
 I 'IBRXP,+IBDGP S IBLN=$G(^PSDRUG(+IBDGP,660)) I IBLN'="" S IBX=$P(IBLN,U,6)_U_IBIFN
"RTN","IBCRCC",70,0)
 Q IBX
"RTN","IBCRCC",71,0)
 ;
"RTN","IBCRCC",72,0)
PRVCHG(CS,CHG,PRV,EVDT,ITEM) ; return discounted amount, based on total charge for a the care, the provider and Charge Set (BR)
"RTN","IBCRCC",73,0)
 ; if no discount record found for the Charge Set or the provider then returns original amount
"RTN","IBCRCC",74,0)
 ; no provider discount for Lab charges (80000-89999)
"RTN","IBCRCC",75,0)
 ;   discounted amount ^ comment (if discounted) ^ percent discount
"RTN","IBCRCC",76,0)
 ;
"RTN","IBCRCC",77,0)
 N IBPC,IBSGFN,IBSG,IBPDFN,IBPD0,IBPDTY,IBI,IBX,IBY S IBX=+$G(CHG),(IBSGFN,IBPDTY)="" I '$G(EVDT) S EVDT=DT
"RTN","IBCRCC",78,0)
 I +$G(ITEM),ITEM>79999,ITEM<90000 S (CS,PRV)=""
"RTN","IBCRCC",79,0)
 I +$G(CS) S IBSGFN=+$$CSSG^IBCRU6(+CS,"",2,.IBSG)
"RTN","IBCRCC",80,0)
 I +$G(PRV),+IBSGFN S IBPC=$$GET^XUA4A72(PRV,EVDT)
"RTN","IBCRCC",81,0)
 ;
"RTN","IBCRCC",82,0)
 S IBI=0 F  S IBI=$O(IBSG(IBI)) Q:'IBI  S IBSGFN=+IBSG(IBI) I +IBSGFN D
"RTN","IBCRCC",83,0)
 . S IBPDFN=0 F  S IBPDFN=$O(^IBE(363.34,"C",+IBSGFN,IBPDFN)) Q:'IBPDFN  D  Q:IBPDTY'=""
"RTN","IBCRCC",84,0)
 .. I '$O(^IBE(363.34,+IBPDFN,11,"B",+IBPC,0)) Q
"RTN","IBCRCC",85,0)
 .. S IBPD0=$G(^IBE(363.34,+IBPDFN,0)),IBY=$P(IBPD0,U,3) Q:IBY=""
"RTN","IBCRCC",86,0)
 .. S IBY=+IBY/100,IBX=IBY*IBX
"RTN","IBCRCC",87,0)
 .. S IBPDTY=U_$P($G(^VA(200,+PRV,0)),U,1)_" - "_$P(IBPD0,U,1)_" "_$P(IBPD0,U,3)_"% of "_$J(CHG,0,2)_U_+IBY
"RTN","IBCRCC",88,0)
 Q IBX_IBPDTY
"RTN","IBCRCC",89,0)
 ;
"RTN","IBCRCC",90,0)
HRUNIT(HRS) ; returns Hour Units based on the Hours passed in
"RTN","IBCRCC",91,0)
 ; Hour Units are the hours rounded to the nearest whole hour (less than 30 minutes is 0 units)
"RTN","IBCRCC",92,0)
 N IBX S IBX=0 I +$G(HRS) S IBX=$J(HRS,0,0)
"RTN","IBCRCC",93,0)
 Q IBX
"RTN","IBCRCC",94,0)
 ;
"RTN","IBCRCC",95,0)
MLUNIT(MLS) ; returns Miles Units based on the Miles passed in
"RTN","IBCRCC",96,0)
 ; Mile Units are the miles rounded to the nearest whole mile
"RTN","IBCRCC",97,0)
 N IBX S IBX=0 I +$G(MLS) S IBX=$J(MLS,0,0) I 'IBX S IBX=1
"RTN","IBCRCC",98,0)
 Q IBX
"RTN","IBCRCC",99,0)
 ;
"RTN","IBCRCC",100,0)
MNUNIT(MNS) ; return Minute Units based on the Minutes passed in
"RTN","IBCRCC",101,0)
 ; Minute Units are 15 minute intervals, rounded down for less than 5 minutes
"RTN","IBCRCC",102,0)
 N IBX S IBX=0 I +$G(MNS) S IBX=(MNS\15) S:(MNS#15)>4 IBX=IBX+1 I 'IBX S IBX=1
"RTN","IBCRCC",103,0)
 Q IBX
"RTN","IBCRCI")
0^16^B9964623
"RTN","IBCRCI",1,0)
IBCRCI ;ALB/ARH - RATES: CALCULATION ITEM/EVENT COST FNCTNS ; 22-MAY-96
"RTN","IBCRCI",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,245**;21-MAR-94
"RTN","IBCRCI",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified
"RTN","IBCRCI",4,0)
 ;
"RTN","IBCRCI",5,0)
 ;       standard callable functions to get item charge/cost
"RTN","IBCRCI",6,0)
 ;
"RTN","IBCRCI",7,0)
 ; notice that each function works for all Charge Methods and both types of Sets (Item/Event)
"RTN","IBCRCI",8,0)
 ; - if the Charge Set is based on event then the event charge will be calculated (item passed will not be used)
"RTN","IBCRCI",9,0)
 ; - the charges are the unit charges so UNIT should only be defined (or not 1) if the Charge Method is Quantity
"RTN","IBCRCI",10,0)
 ;
"RTN","IBCRCI",11,0)
ITCHG(CS,ITEM,EVDT,MOD) ; returns total base unit charge for a specific charge set, item/event and date
"RTN","IBCRCI",12,0)
 ; works for both types of Charge Set (Item and Event) and all Charge Methods
"RTN","IBCRCI",13,0)
 ; does not factor in division, units or rate schedule adjustment
"RTN","IBCRCI",14,0)
 ; if charges for the Set are based on event rather than item, will get active events, ITEM is not required/used
"RTN","IBCRCI",15,0)
 ; Input:  CS = Charge Set ifn, ITEM = billable item pointer, MOD = cpt modifier
"RTN","IBCRCI",16,0)
 ; Output: total item charge on EVDT ^ effective date of charge ^ total base charge
"RTN","IBCRCI",17,0)
 ;
"RTN","IBCRCI",18,0)
 N IBX,IBITMARR,IBCHGARR,IBITEM,IBI,IBLN,IBCHG,IBCHGB,IBCI,IBEFDT S IBX=0,EVDT=$G(EVDT)\1
"RTN","IBCRCI",19,0)
 I '$D(^IBE(363.1,+$G(CS),0))!(EVDT'?7N) G ITCHGQ
"RTN","IBCRCI",20,0)
 I +$G(ITEM),'$$ITBICHK^IBCRU2(+CS,+ITEM) G ITCHGQ
"RTN","IBCRCI",21,0)
 ;
"RTN","IBCRCI",22,0)
 I $$CSITMS^IBCRCU1(CS)=2 D CSALL^IBCRCU1(CS,EVDT,.IBITMARR)
"RTN","IBCRCI",23,0)
 I +$G(ITEM),'$G(IBITMARR) S IBITMARR=EVDT,IBITMARR(ITEM)=""
"RTN","IBCRCI",24,0)
 I '$G(IBITMARR) G ITCHGQ
"RTN","IBCRCI",25,0)
 ;
"RTN","IBCRCI",26,0)
 S (IBCHG,IBCHGB,IBCI,IBITEM)=0 F  S IBITEM=$O(IBITMARR(IBITEM)) Q:'IBITEM  D
"RTN","IBCRCI",27,0)
 . D ITMCHG^IBCRCC(CS,IBITEM,EVDT,$G(MOD),.IBCHGARR)
"RTN","IBCRCI",28,0)
 . S IBI=0 F  S IBI=$O(IBCHGARR(IBI)) Q:'IBI  D
"RTN","IBCRCI",29,0)
 .. S IBLN=IBCHGARR(IBI) S IBCHG=IBCHG+$P(IBLN,U,3),IBCI=+IBLN,IBCHGB=IBCHGB+$P(IBLN,U,4)
"RTN","IBCRCI",30,0)
 ;
"RTN","IBCRCI",31,0)
 I +IBCI S IBEFDT=$P($G(^IBA(363.2,+IBCI,0)),U,3)
"RTN","IBCRCI",32,0)
 I +IBCHG S IBX=+$FN(+IBCHG,"",2)_U_$G(IBEFDT) I +IBCHGB S IBX=IBX_U_+$FN(+IBCHGB,"",2)
"RTN","IBCRCI",33,0)
 ;
"RTN","IBCRCI",34,0)
ITCHGQ Q IBX
"RTN","IBCRCI",35,0)
 ;
"RTN","IBCRCI",36,0)
ITCOST(RS,CS,ITEM,EVDT,MOD,DIV,UNIT) ; returns total adjusted unit cost/charge for a specific schedule/set, item/event, date
"RTN","IBCRCI",37,0)
 ; this is the actual cost of one item/event, does factor in division, units and rate schedule adjustment
"RTN","IBCRCI",38,0)
 ; units should be 1 or undefined unless the Charge Method of the rate is Quantity/Miles/Minutes/Hours
"RTN","IBCRCI",39,0)
 ; if the Charge Set is region specific, Division passed must be within that region or no charge
"RTN","IBCRCI",40,0)
 ; Input:  CS = Charge Set ifn, ITEM = billable item pointer, MOD = cpt modifier, UNIT = 1 unless Quantity
"RTN","IBCRCI",41,0)
 ; Output: total adjusted item charge/cost on EVDT ^ effective date of charge
"RTN","IBCRCI",42,0)
 ;
"RTN","IBCRCI",43,0)
 N IBCOST,IBBCOST,IBDT S IBCOST=0,EVDT=$G(EVDT)\1,UNIT=$S(+$G(UNIT):UNIT,1:1)
"RTN","IBCRCI",44,0)
 I '$D(^IBE(363.1,+$G(CS),0))!(EVDT'?7N) G ITCOSTQ
"RTN","IBCRCI",45,0)
 I $$CSDV^IBCRU3(CS,+$G(DIV))<0 G ITCOSTQ
"RTN","IBCRCI",46,0)
 S UNIT=$$CPTUNITS^IBCRCU1(CS,UNIT)
"RTN","IBCRCI",47,0)
 ;
"RTN","IBCRCI",48,0)
 S IBCOST=$$ITCHG(CS,$G(ITEM),EVDT,$G(MOD)),IBDT=$P(IBCOST,U,2),IBBCOST=$P(IBCOST,U,3)
"RTN","IBCRCI",49,0)
 S IBCOST=+IBCOST*UNIT
"RTN","IBCRCI",50,0)
 I +IBBCOST S IBCOST=IBCOST+IBBCOST
"RTN","IBCRCI",51,0)
 I +$G(RS) S IBCOST=+$$RATECHG^IBCRCC(RS,+IBCOST,EVDT)
"RTN","IBCRCI",52,0)
 I +IBCOST S IBCOST=+$FN(+IBCOST,"",2)_U_IBDT
"RTN","IBCRCI",53,0)
 ;
"RTN","IBCRCI",54,0)
ITCOSTQ Q IBCOST
"RTN","IBCRCI",55,0)
 ;
"RTN","IBCRCI",56,0)
BICOST(RT,BT,EVDT,BE,ITEM,MOD,DIV,UNIT,CT) ; returns the total unit cost of a particular item/event for a specific Rate Type and Bill Type, i.e. payer
"RTN","IBCRCI",57,0)
 ; this includes all cost for the item and payer, which may include more than one charge set or rate schedule
"RTN","IBCRCI",58,0)
 ; ITEM is not required if it is an Event CS, BE is required only as a screen for a specific event, if desired
"RTN","IBCRCI",59,0)
 ;
"RTN","IBCRCI",60,0)
 N IBX,IBY,IBCOST,IBDT,IBARR,IBRS,IBCS S (IBX,IBCOST)=0,IBDT=""
"RTN","IBCRCI",61,0)
 I $G(BE)'=""!(+$G(ITEM)) D RT^IBCRU3($G(RT),$G(BT),$G(EVDT),.IBARR,$G(BE),$G(CT))
"RTN","IBCRCI",62,0)
 ;
"RTN","IBCRCI",63,0)
 S IBRS=0 F  S IBRS=$O(IBARR(IBRS)) Q:'IBRS  D
"RTN","IBCRCI",64,0)
 . S IBCS=0 F  S IBCS=$O(IBARR(IBRS,IBCS)) Q:'IBCS  I +IBARR(IBRS,IBCS) D
"RTN","IBCRCI",65,0)
 .. S IBY=$$ITCOST(IBRS,IBCS,$G(ITEM),$G(EVDT),$G(MOD),$G(DIV),$G(UNIT)) I +$P(IBY,U,2)>IBDT S IBDT=+$P(IBY,U,2)
"RTN","IBCRCI",66,0)
 .. S IBCOST=+IBCOST+IBY
"RTN","IBCRCI",67,0)
 S IBX=IBCOST_U_IBDT
"RTN","IBCRCI",68,0)
 Q IBX
"RTN","IBCRCI",69,0)
 ;
"RTN","IBCRCI",70,0)
BILLCOST(IBIFN,EVDT,BE,ITEM,MOD,UNIT) ; returns total cost of a particular item or event for a specific bill
"RTN","IBCRCI",71,0)
 ; cost may include more than one set or schedule charge if the item/event is defined for more than one set
"RTN","IBCRCI",72,0)
 ; or schedule assigned to the rate type/event type of the bill
"RTN","IBCRCI",73,0)
 ;
"RTN","IBCRCI",74,0)
 N IBX,IB0,IBRT,IBBT S IBX=0,IB0=$G(^DGCR(399,+$G(IBIFN),0)),IBRT=+$P(IB0,U,7),IBBT=$P(IB0,U,5)
"RTN","IBCRCI",75,0)
 I IB0'="" S IBX=$$BICOST(IBRT,IBBT,$G(EVDT),$G(BE),$G(ITEM),$G(MOD),$P(IB0,U,22),$G(UNIT),$P(IB0,U,27))
"RTN","IBCRCI",76,0)
 Q IBX
"RTN","IBCRCU1")
0^17^B25973842
"RTN","IBCRCU1",1,0)
IBCRCU1 ;ALB/ARH - RATES: CALCULATION UTILITIES ; 22-MAY-1996
"RTN","IBCRCU1",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,245**;21-MAR-94
"RTN","IBCRCU1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRCU1",4,0)
 ;
"RTN","IBCRCU1",5,0)
 ; there are two types of Charge Sets (363.1) that have Charge Item entries (363.2):
"RTN","IBCRCU1",6,0)
 ; 1 - ITEM: each item has an individual charge:  an item on the bill has corresponding charge item entries,
"RTN","IBCRCU1",7,0)
 ;     the item may have more than one Charge Item entry but they are specifically defined for that item
"RTN","IBCRCU1",8,0)
 ;     ex: an inpt bs, a CPT, or a drug
"RTN","IBCRCU1",9,0)
 ; 2 - EVENT: the charge is for an event not an item:  all charge items active on a date in the Set 
"RTN","IBCRCU1",10,0)
 ;     combine to give the charge for the item on the bill for that date
"RTN","IBCRCU1",11,0)
 ;     all items in the set define the event charge - the total charges for a set on a date is the event charge
"RTN","IBCRCU1",12,0)
 ;     the item does not have to match an item on the bill and is only relevant because it is then added
"RTN","IBCRCU1",13,0)
 ;     to the RC multiple of the bill as one of the bills charge lines
"RTN","IBCRCU1",14,0)
 ;     ex:  the charge for a bills opt visit date is the combined charge of all items active in the Set
"RTN","IBCRCU1",15,0)
 ;          on the visit date (this may be more than simply the Outpatient Visit Date bedsection charge if
"RTN","IBCRCU1",16,0)
 ;          there is another bedsection charge defined for that date)
"RTN","IBCRCU1",17,0)
 ;
"RTN","IBCRCU1",18,0)
CSITMS(CS) ; returns 1 (ITEM) if the CS requires a single billable item or 2 (EVENT) if all active items for date are used
"RTN","IBCRCU1",19,0)
 ;
"RTN","IBCRCU1",20,0)
 N IBX,IBCSBR,IBBEVNT,IBBLITEM,IBCHGMTH S IBX=0 I '$G(CS) G CSITMSQ
"RTN","IBCRCU1",21,0)
 S IBCSBR=$$CSBR^IBCRU3(+CS) I IBCSBR="" G CSITMSQ
"RTN","IBCRCU1",22,0)
 S IBBEVNT=$P(IBCSBR,U,1),IBBLITEM=$P(IBCSBR,U,4),IBCHGMTH=$P(IBCSBR,U,5)
"RTN","IBCRCU1",23,0)
 ;
"RTN","IBCRCU1",24,0)
 I IBBEVNT["INPATIENT BEDSECTION STAY",IBBLITEM=1,IBCHGMTH=1 S IBX=1 G CSITMSQ
"RTN","IBCRCU1",25,0)
 I IBBEVNT["OUTPATIENT VISIT DATE",IBBLITEM=1,IBCHGMTH=1 S IBX=2 G CSITMSQ
"RTN","IBCRCU1",26,0)
 I IBBEVNT["PRESCRIPTION",IBBLITEM=1,IBCHGMTH=1 S IBX=2 G CSITMSQ
"RTN","IBCRCU1",27,0)
 I IBBEVNT["PRESCRIPTION",IBBLITEM=3,IBCHGMTH=3 S IBX=1 G CSITMSQ
"RTN","IBCRCU1",28,0)
 I IBBEVNT["PRESCRIPTION",IBCHGMTH=2 S IBX=1 G CSITMSQ
"RTN","IBCRCU1",29,0)
 I IBBEVNT["PROSTHETICS",IBBLITEM=1,IBCHGMTH=1 S IBX=2 G CSITMSQ
"RTN","IBCRCU1",30,0)
 I IBBEVNT["PROSTHETICS",IBCHGMTH=2 S IBX=1 G CSITMSQ
"RTN","IBCRCU1",31,0)
 I IBBEVNT["PROCEDURE",IBBLITEM=2,IBCHGMTH=1 S IBX=1 G CSITMSQ
"RTN","IBCRCU1",32,0)
 I IBBEVNT["PROCEDURE",IBBLITEM=2,IBCHGMTH=4 S IBX=1 G CSITMSQ
"RTN","IBCRCU1",33,0)
 I IBBEVNT["PROCEDURE",IBBLITEM=2,IBCHGMTH=5 S IBX=1 G CSITMSQ
"RTN","IBCRCU1",34,0)
 I IBBEVNT["PROCEDURE",IBBLITEM=2,IBCHGMTH=6 S IBX=1 G CSITMSQ
"RTN","IBCRCU1",35,0)
 I IBBEVNT["INPATIENT DRG",IBBLITEM=4,IBCHGMTH=1 S IBX=1 G CSITMSQ
"RTN","IBCRCU1",36,0)
 I IBBEVNT["UNASSOCIATED",IBBLITEM=9,IBCHGMTH=1 S IBX=1 G CSITMSQ
"RTN","IBCRCU1",37,0)
CSITMSQ Q IBX
"RTN","IBCRCU1",38,0)
 ;
"RTN","IBCRCU1",39,0)
CSALL(CS,EVDT,ARR) ; returns all items billable on a given effective date for charge sets where all active items are billed (EVENT)
"RTN","IBCRCU1",40,0)
 ; finds most recent effective date, returns all items active on that date ie. does not check item inactive date
"RTN","IBCRCU1",41,0)
 ; first get all active items on date then get only those items active on most recent effective date
"RTN","IBCRCU1",42,0)
 ; Ouput:  ARR = chg effective date
"RTN","IBCRCU1",43,0)
 ;         ARR(source item pointer) =""
"RTN","IBCRCU1",44,0)
 ;
"RTN","IBCRCU1",45,0)
 N IBXRF,IBITM,IBEVDT,ARR1 K ARR S ARR=0,EVDT=$G(EVDT)\1 I '$G(CS)!(EVDT'?7N) G CSALLQ
"RTN","IBCRCU1",46,0)
 I +$$CSITMS(CS)'=2 G CSALLQ
"RTN","IBCRCU1",47,0)
 ;
"RTN","IBCRCU1",48,0)
 S IBXRF="AIVDTS"_CS
"RTN","IBCRCU1",49,0)
 S IBITM=0 F  S IBITM=$O(^IBA(363.2,IBXRF,IBITM)) Q:'IBITM  D
"RTN","IBCRCU1",50,0)
 . S IBEVDT=$O(^IBA(363.2,IBXRF,IBITM,-(EVDT+.01))) Q:'IBEVDT
"RTN","IBCRCU1",51,0)
 . S ARR1(IBEVDT,IBITM)=""
"RTN","IBCRCU1",52,0)
 ;
"RTN","IBCRCU1",53,0)
 S IBEVDT=$O(ARR1(""))
"RTN","IBCRCU1",54,0)
 I +IBEVDT S IBITM=0 F  S IBITM=$O(ARR1(IBEVDT,IBITM)) Q:'IBITM  S ARR(IBITM)="",ARR=-IBEVDT
"RTN","IBCRCU1",55,0)
 ;
"RTN","IBCRCU1",56,0)
CSALLQ Q
"RTN","IBCRCU1",57,0)
 ;
"RTN","IBCRCU1",58,0)
CPTUNITS(CS,UNIT) ; return raw data returns CPT units based on Charge Set and item
"RTN","IBCRCU1",59,0)
 ; Input: CS - Charge Set of charge determines Charge Method
"RTN","IBCRCU1",60,0)
 ;        UNIT - total miles/minutes/hours of item
"RTN","IBCRCU1",61,0)
 ; Output: UNIT or calculated for miles/minutes/hours
"RTN","IBCRCU1",62,0)
 N IBUNITS,IBCSBR,IBCHGMTH S IBUNITS=+$G(UNIT) I 'IBUNITS G CPTUNITQ
"RTN","IBCRCU1",63,0)
 S CS=$G(CS) S IBCSBR=$$CSBR^IBCRU3(CS),IBCHGMTH=$P(IBCSBR,U,5)
"RTN","IBCRCU1",64,0)
 I +IBCHGMTH=4 S IBUNITS=$$MLUNIT^IBCRCC(UNIT) ; miles
"RTN","IBCRCU1",65,0)
 I +IBCHGMTH=5 S IBUNITS=$$MNUNIT^IBCRCC(UNIT) ; minutes
"RTN","IBCRCU1",66,0)
 I +IBCHGMTH=6 S IBUNITS=$$HRUNIT^IBCRCC(UNIT) ; hours
"RTN","IBCRCU1",67,0)
CPTUNITQ Q IBUNITS
"RTN","IBCRCU1",68,0)
 ;
"RTN","IBCRCU1",69,0)
CPTMOD(CS,CPT,MODS,DATE) ; check to see if a CPT-Modifier combination has a charge in this Charge Set, returns "" or CI IFN
"RTN","IBCRCU1",70,0)
 ; Input MODS is a list of modifiers to check separated by ','
"RTN","IBCRCU1",71,0)
 ; Output "" or list of modifiers with active charges in the set on date
"RTN","IBCRCU1",72,0)
 N IBMOD,IBI,IBX,IBY S (IBX,IBY)="" I '$G(CS)!'$G(CPT)!'$G(MODS)!'$G(DATE) G CPTMODQ
"RTN","IBCRCU1",73,0)
 F IBI=1:1 S IBMOD=$P(MODS,",",IBI) Q:IBMOD=""  D
"RTN","IBCRCU1",74,0)
 . I +$$FNDCI^IBCRU4(CS,CPT,DATE,,IBMOD) S IBX=IBX_IBY_IBMOD S IBY=","
"RTN","IBCRCU1",75,0)
 ;
"RTN","IBCRCU1",76,0)
CPTMODQ Q IBX
"RTN","IBCRCU1",77,0)
 ;
"RTN","IBCRCU1",78,0)
CHGMOD(IBIFN,CPT,EFFDT,CT) ; find charges for a procedure and a date for a bill
"RTN","IBCRCU1",79,0)
 ; returns: count of charges ':' list of charge items ':' list of charge modifiers
"RTN","IBCRCU1",80,0)
 N IB0,IBU,IBBDV,IBBCT,ARRCS,IBRS,IBCS,ARRCHG,IBFND,IBCIS,IBMODS,IBX S IBFND=0,(IBCIS,IBMODS)=""
"RTN","IBCRCU1",81,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),IBU=$G(^DGCR(399,+$G(IBIFN),"U")),IBBDV=$P(IB0,U,22),IBBCT=$S($D(CT):CT,1:$P(IB0,U,27))
"RTN","IBCRCU1",82,0)
 I IB0'="",+IBU,+IBBDV,+$G(CPT),+$G(EFFDT) D RT^IBCRU3($P(IB0,U,7),$P(IB0,U,5),EFFDT,.ARRCS,"PROCEDURE",IBBCT) D
"RTN","IBCRCU1",83,0)
 . S IBRS=0 F  S IBRS=$O(ARRCS(IBRS)) Q:'IBRS  D
"RTN","IBCRCU1",84,0)
 .. S IBCS=0 F  S IBCS=$O(ARRCS(IBRS,IBCS)) Q:'IBCS  I +ARRCS(IBRS,IBCS) D
"RTN","IBCRCU1",85,0)
 ... I $$CSDV^IBCRU3(IBCS,IBBDV)<0 Q  ; check division
"RTN","IBCRCU1",86,0)
 ... I '$$CHGOTH^IBCRBC2(IBIFN,IBRS,EFFDT) Q  ; ckeck snf/non-snf
"RTN","IBCRCU1",87,0)
 ... I +$$FNDCI^IBCRU4(IBCS,CPT,EFFDT,.ARRCHG) S IBFND=IBFND+ARRCHG D
"RTN","IBCRCU1",88,0)
 .... S IBX=0  F  S IBX=$O(ARRCHG(IBX)) Q:'IBX  S IBCIS=IBCIS_IBX_U,IBMODS=IBMODS_$P(ARRCHG(IBX),U,7)_U
"RTN","IBCRCU1",89,0)
 I +IBFND S IBFND=IBFND_":"_IBCIS_":"_IBMODS
"RTN","IBCRCU1",90,0)
CHGMODQ Q IBFND
"RTN","IBCRCU1",91,0)
 ;
"RTN","IBCRCU1",92,0)
CPTCHG(IBIFN,CT) ; return true if bill has auto add CPT charges for the Charge Type passed in (regardless of modifier)
"RTN","IBCRCU1",93,0)
 N IBFND,IB0,IBU,IBBILLDV,IBBCT,IBCT,ARRCPT,ARRCS,IBRS,IBCS,IBCPT,IBCPTDA,IBCPT0 S IBFND=0,CT=$G(CT)
"RTN","IBCRCU1",94,0)
 ;
"RTN","IBCRCU1",95,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)) I IB0="" G CPTCHGQ
"RTN","IBCRCU1",96,0)
 S IBU=$G(^DGCR(399,+$G(IBIFN),"U")) I 'IBU G CPTCHGQ
"RTN","IBCRCU1",97,0)
 S IBBILLDV=$P(IB0,U,22),IBBCT=$P(IB0,U,27)
"RTN","IBCRCU1",98,0)
 ;
"RTN","IBCRCU1",99,0)
 S IBCT=$S(CT="BILL":IBBCT,CT="INST":1,CT="PROF":2,CT="OPST"&(IBBCT=1):2,CT="OPST"&(IBBCT=2):1,CT="":"",1:-1)
"RTN","IBCRCU1",100,0)
 I IBCT<0 G CPTCHGQ
"RTN","IBCRCU1",101,0)
 ;
"RTN","IBCRCU1",102,0)
 D CPT^IBCRBG1(IBIFN,.ARRCPT) I '$O(ARRCPT(0)) G CPTCHGQ
"RTN","IBCRCU1",103,0)
 D RT^IBCRU3($P(IB0,U,7),$P(IB0,U,5),$P(IBU,U,1,2),.ARRCS,"PROCEDURE",IBCT)
"RTN","IBCRCU1",104,0)
 ;
"RTN","IBCRCU1",105,0)
 S IBRS=0 F  S IBRS=$O(ARRCS(IBRS)) Q:'IBRS  D  I +IBFND Q
"RTN","IBCRCU1",106,0)
 . S IBCS=0 F  S IBCS=$O(ARRCS(IBRS,IBCS)) Q:'IBCS  I +ARRCS(IBRS,IBCS) D  I +IBFND Q
"RTN","IBCRCU1",107,0)
 .. ;
"RTN","IBCRCU1",108,0)
 .. S IBCPT=0 F  S IBCPT=$O(ARRCPT(IBCPT)) Q:'IBCPT  D  I +IBFND Q
"RTN","IBCRCU1",109,0)
 ... S IBCPTDA=0 F  S IBCPTDA=$O(ARRCPT(IBCPT,IBCPTDA)) Q:'IBCPTDA  D  I +IBFND Q
"RTN","IBCRCU1",110,0)
 .... ;
"RTN","IBCRCU1",111,0)
 .... S IBCPT0=ARRCPT(IBCPT,IBCPTDA)
"RTN","IBCRCU1",112,0)
 .... I $$CSDV^IBCRU3(IBCS,$P(IBCPT0,U,3),IBBILLDV)<0 Q  ; check division
"RTN","IBCRCU1",113,0)
 .... ;
"RTN","IBCRCU1",114,0)
 .... I +$$CHKIPB^IBCU7A1(IBCPT,IBCT) S IBFND=1 Q
"RTN","IBCRCU1",115,0)
 .... I +$$FNDCI^IBCRU4(IBCS,IBCPT,$P(IBCPT0,U,1)) S IBFND=1
"RTN","IBCRCU1",116,0)
 ;
"RTN","IBCRCU1",117,0)
CPTCHGQ Q IBFND
"RTN","IBCREE1")
0^18^B12151738
"RTN","IBCREE1",1,0)
IBCREE1 ;ALB/ARH - RATES: CM ENTER/EDIT (CI) ; 16-MAY-1996
"RTN","IBCREE1",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,245**;21-MAR-94
"RTN","IBCREE1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCREE1",4,0)
 ;
"RTN","IBCREE1",5,0)
EDITCI ; Enter/Edit Charge Items
"RTN","IBCREE1",6,0)
 N IBCS0,IBBR0,IBBRFN,IBITEM,IBBRBI,IBDT,IBCIFN,IBX,DIE,DR,DA,X,Y
"RTN","IBCREE1",7,0)
 ;
"RTN","IBCREE1",8,0)
CS I '$G(IBCSFN) S IBCSFN=+$$GETCS^IBCRU1 Q:IBCSFN'>0
"RTN","IBCREE1",9,0)
 D DISPCS^IBCRU5(+IBCSFN)
"RTN","IBCREE1",10,0)
 ;
"RTN","IBCREE1",11,0)
 S IBCS0=$G(^IBE(363.1,+IBCSFN,0)),IBBRFN=$P(IBCS0,U,2)
"RTN","IBCREE1",12,0)
 S IBBR0=$G(^IBE(363.3,+IBBRFN,0)),IBBRBI=$P(IBBR0,U,4)
"RTN","IBCREE1",13,0)
 W !!,"Enter/edit a billable item (",$$BITM(IBBRBI),") for Charge Set ",$P(IBCS0,U,1)
"RTN","IBCREE1",14,0)
 ;
"RTN","IBCREE1",15,0)
CI W ! S IBITEM=$$GETITEM^IBCRU1(IBCSFN,"",1) I +IBITEM<1 Q
"RTN","IBCREE1",16,0)
 I '$$ITFILE^IBCRU2(IBBRBI,+IBITEM) W !!,$$BITM(IBBRBI)," ",$P(IBITEM,U,2)," CURRENTLY INACTIVE",!
"RTN","IBCREE1",17,0)
 ;
"RTN","IBCREE1",18,0)
EF D DISPCI^IBCRU5(+IBCSFN,+IBITEM)
"RTN","IBCREE1",19,0)
 S IBDT=$$GETDT^IBCRU1($G(IBDT)) I IBDT<1 S IBDT="" W "   ... no change" G CI
"RTN","IBCREE1",20,0)
 D SCRNDSPL
"RTN","IBCREE1",21,0)
 ;
"RTN","IBCREE1",22,0)
 S IBCIFN=$$FINDCI(+IBCSFN,+IBITEM,IBDT) I IBCIFN<0 G EF
"RTN","IBCREE1",23,0)
 ;
"RTN","IBCREE1",24,0)
 I IBCIFN>0 W !,?50,"Editing Charge Item!"
"RTN","IBCREE1",25,0)
 ;
"RTN","IBCREE1",26,0)
 I 'IBCIFN D  I 'IBCIFN W !!,"A charge can not be added for this item!",! Q
"RTN","IBCREE1",27,0)
 . S IBCIFN=$$ADDCI^IBCREF(+IBCSFN,+IBITEM,IBDT) W !,?50,"Adding a new Charge Item!"
"RTN","IBCREE1",28,0)
 ;
"RTN","IBCREE1",29,0)
 S DR=$$DR01(+$P(IBITEM,U,4))_";.03;.04;.05;.06"
"RTN","IBCREE1",30,0)
 ;
"RTN","IBCREE1",31,0)
 I $P(IBITEM,U,4)=81 S DR=DR_";.07"
"RTN","IBCREE1",32,0)
 I +$P(IBBR0,U,6) S DR=DR_";.08"
"RTN","IBCREE1",33,0)
 ;
"RTN","IBCREE1",34,0)
DIE S DIDEL=363.2,DIE="^IBA(363.2,",DA=+IBCIFN D ^DIE K DIE,DR,X,DIDEL
"RTN","IBCREE1",35,0)
 ;
"RTN","IBCREE1",36,0)
 I $D(DA),$D(Y)=0 S IBX=$$RQCI^IBCREU1(+IBCIFN) I +IBX D RQW S DR=".06" G DIE
"RTN","IBCREE1",37,0)
 D DISPCSL^IBCRU5(+IBCSFN)
"RTN","IBCREE1",38,0)
 G CI
"RTN","IBCREE1",39,0)
 Q
"RTN","IBCREE1",40,0)
BITM(X) ; return external form of billable item
"RTN","IBCREE1",41,0)
 S X=+$G(X) S X=$$EXPAND^IBCRU1(363.3,.04,X)
"RTN","IBCREE1",42,0)
 Q X
"RTN","IBCREE1",43,0)
RQW ; write explanation of required fields
"RTN","IBCREE1",44,0)
 W !!,"Enter either a Default Revenue Code for the Charge Set or a Revenue Code for",!,"this Charge Item:"
"RTN","IBCREE1",45,0)
 W !,"    - a charge can not be added to a bill without a revenue code"
"RTN","IBCREE1",46,0)
 W !,"    - no Revenue Code was added for this Charge Item and there is no"
"RTN","IBCREE1",47,0)
 W !,"      Default Revenue code for the Charge Set."
"RTN","IBCREE1",48,0)
 W !,"    - one or the other must be added before this charge will be used",!!
"RTN","IBCREE1",49,0)
 W !!,"You may enter a revenue code for the Charge Item now:  (^ to exit)"
"RTN","IBCREE1",50,0)
 Q
"RTN","IBCREE1",51,0)
FINDCI(IBCSFN,IBITEM,IBDT) ; find item to edit returns CIIFN or 0 (new) or -1 (error)
"RTN","IBCREE1",52,0)
 ;
"RTN","IBCREE1",53,0)
 N IBY,IBI,IBCNT,DIR,X,Y,IBARR S IBY=-1
"RTN","IBCREE1",54,0)
 S IBI=$O(^IBA(363.2,"AIVDTS"_IBCSFN,+IBITEM,-IBDT,0)) I 'IBI S IBY=0 G FCQ ; none found
"RTN","IBCREE1",55,0)
 ;
"RTN","IBCREE1",56,0)
 S (IBI,IBCNT)=0 F  S IBI=$O(^IBA(363.2,"AIVDTS"_IBCSFN,+IBITEM,-IBDT,+IBI)) Q:'IBI  D
"RTN","IBCREE1",57,0)
 . S IBCNT=IBCNT+1,IBARR(IBCNT)=IBI D DISPCIL^IBCRU5(IBI,IBCNT)
"RTN","IBCREE1",58,0)
 I +IBCNT S DIR(0)="NO^1:"_IBCNT D ^DIR I Y>0 S IBY=$G(IBARR(Y))
"RTN","IBCREE1",59,0)
 I '$D(DTOUT),'$D(DUOUT),IBY<1 S DIR(0)="Y",DIR("A")="Add a new Charge Item? " S DIR("B")="Y" D ^DIR I Y=1 S IBY=0
"RTN","IBCREE1",60,0)
FCQ Q IBY
"RTN","IBCREE1",61,0)
 ;
"RTN","IBCREE1",62,0)
DR01(FILE) ; return DR string for editing the .01 field of charge item
"RTN","IBCREE1",63,0)
 N IBX S IBX=""
"RTN","IBCREE1",64,0)
 I +$G(FILE) S IBX="S DIC(""V"")=""I +Y(0)="_+FILE_""";.01;K DIC(""V"")"
"RTN","IBCREE1",65,0)
 Q IBX
"RTN","IBCREE1",66,0)
 ;
"RTN","IBCREE1",67,0)
SCRNDSPL ; if this edit is called from the screen return the items and dates edited so screen can be
"RTN","IBCREE1",68,0)
 ; redisplayed with the new/edited items
"RTN","IBCREE1",69,0)
 I $D(IBSRNITM) S IBSRNITM=IBITEM
"RTN","IBCREE1",70,0)
 I $D(IBSRNBDT),IBSRNBDT>IBDT S IBSRNBDT=IBDT
"RTN","IBCREE1",71,0)
 I $D(IBSRNEDT),+IBSRNEDT,IBSRNEDT<IBDT S IBSRNEDT=IBDT
"RTN","IBCREE1",72,0)
 Q
"RTN","IBCREF")
0^19^B5731884
"RTN","IBCREF",1,0)
IBCREF ;ALB/ARH - RATES: CM FILE ENTRIES (CI,BI) ; 22-MAY-1996
"RTN","IBCREF",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,138,245**;21-MAR-94
"RTN","IBCREF",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCREF",4,0)
 ;
"RTN","IBCREF",5,0)
 ;
"RTN","IBCREF",6,0)
ADDCI(CS,ITEM,EFDT,CHG,RVCD,MOD,INAC,BASE) ; adds new charge item entries, does not check for duplicates or zero charge
"RTN","IBCREF",7,0)
 ; Input:  CS, ITEM, EFDT are required, rest will be set if they have values
"RTN","IBCREF",8,0)
 ; Output: IFN of new entry
"RTN","IBCREF",9,0)
 ;
"RTN","IBCREF",10,0)
 N IBCS0,IBCI,IBEFDT,IBBI,IBFILE,DIC,DIE,DA,D0,DLAYGO,DR,X,Y S IBCI=0 I '$G(ITEM) G ADDCIQ
"RTN","IBCREF",11,0)
 S IBCS0=$G(^IBE(363.1,+$G(CS),0)) I IBCS0="" G ADDCIQ
"RTN","IBCREF",12,0)
 S IBEFDT=$G(EFDT)\1 I IBEFDT'?7N G ADDCIQ
"RTN","IBCREF",13,0)
 ;
"RTN","IBCREF",14,0)
 S IBBI=$P($$CSBR^IBCRU3(CS),U,4) I 'IBBI G ADDCIQ
"RTN","IBCREF",15,0)
 S IBFILE=$P($$BIFILE^IBCRU2(IBBI),U,1) I IBFILE="" G ADDCIQ
"RTN","IBCREF",16,0)
 I '$$ITFILE^IBCRU2(IBBI,ITEM,IBEFDT) G ADDCIQ
"RTN","IBCREF",17,0)
 ;
"RTN","IBCREF",18,0)
 S DIC("DR")=".02////"_CS_";.03////"_IBEFDT
"RTN","IBCREF",19,0)
 K DD,DO S DLAYGO=363.2,DIC="^IBA(363.2,",DIC(0)="L",X=+ITEM_IBFILE
"RTN","IBCREF",20,0)
 D FILE^DICN K DIC,DLAYGO,X I Y<1 G ADDCIQ
"RTN","IBCREF",21,0)
 ;
"RTN","IBCREF",22,0)
 S IBCI=+Y D EDITCI(IBCI,$G(CHG),$G(RVCD),$G(MOD),$G(INAC),$G(BASE))
"RTN","IBCREF",23,0)
 ;
"RTN","IBCREF",24,0)
ADDCIQ Q IBCI
"RTN","IBCREF",25,0)
 ;
"RTN","IBCREF",26,0)
EDITCI(CI,CHG,RVCD,MOD,INAC,BASE) ; edit certain fields of a charge item
"RTN","IBCREF",27,0)
 ;
"RTN","IBCREF",28,0)
 N DIC,DIE,DA,D0,DR,X,Y S DR=""
"RTN","IBCREF",29,0)
 S:$G(INAC)'="" DR=".04////"_INAC_";" S:$G(CHG)'="" DR=DR_".05////"_+$FN(CHG,"",2)_";" S:$G(BASE)'="" DR=DR_".08////"_+$FN(BASE,"",2)_";"
"RTN","IBCREF",30,0)
 S:$G(RVCD)'="" DR=DR_".06////"_RVCD_";" S:$G(MOD)'="" DR=DR_".07////"_MOD
"RTN","IBCREF",31,0)
 I DR'="",+$G(CI),$G(^IBA(363.2,+CI,0))'="" S DIE="^IBA(363.2,",DA=+CI D ^DIE
"RTN","IBCREF",32,0)
 Q
"RTN","IBCREF",33,0)
 ;
"RTN","IBCREF",34,0)
ADDBI(TYPE,NAME,DUP) ; add a new Billing Item entry (363.21), check for duplicates optional
"RTN","IBCREF",35,0)
 ; Input:  TYPE - data type (363.21,.02), NAME - billing item name, DUP - 1 if add without duplicate check
"RTN","IBCREF",36,0)
 ; Output: 0 - not added, BI IFN ^ 0 - already exists, BI IFN ^ 1 - new entry added
"RTN","IBCREF",37,0)
 N IBX,IBTYPE,IBBI,DIC,DIE,DA,D0,DLAYGO,DR,X,Y S IBBI=0
"RTN","IBCREF",38,0)
 ;
"RTN","IBCREF",39,0)
 S IBTYPE=$G(TYPE),IBTYPE=$S(IBTYPE["NDC":1,IBTYPE["MISCELLANEOUS":9,1:IBTYPE) I 'IBTYPE!($G(NAME)="") G ADDBIQ
"RTN","IBCREF",40,0)
 I IBTYPE=1,NAME'?1N.N1"-"1N.N1"-"1N.N G ADDBIQ
"RTN","IBCREF",41,0)
 I '$G(DUP) S IBX=$$FNDBI^IBCRU2(IBTYPE,NAME) I +IBX S IBBI=+IBX_U_0 G ADDBIQ
"RTN","IBCREF",42,0)
 ;
"RTN","IBCREF",43,0)
 S DIC("DR")=".02////"_IBTYPE
"RTN","IBCREF",44,0)
 K DD,DO S DLAYGO=363.21,DIC="^IBA(363.21,",DIC(0)="L",X=NAME D FILE^DICN K DIC,DLAYGO,X I Y<1 G ADDCIQ
"RTN","IBCREF",45,0)
 S IBBI=+Y_U_1
"RTN","IBCREF",46,0)
ADDBIQ Q IBBI
"RTN","IBCRHBR")
0^20^B7554762
"RTN","IBCRHBR",1,0)
IBCRHBR ;ALB/ARH - RATES: UPLOAD HOST FILES (RC) DRIVER ; 10-OCT-1998
"RTN","IBCRHBR",2,0)
 ;;2.0;INTEGRATED BILLING;**106,138,148,245**;21-MAR-94
"RTN","IBCRHBR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRHBR",4,0)
 ;
"RTN","IBCRHBR",5,0)
 ;
"RTN","IBCRHBR",6,0)
RC N IBLOAD,IBSITE,IBVERS
"RTN","IBCRHBR",7,0)
 W @IOF,!,"Upload National Reasonable Charges Host Files to Temporary Vista Files (XTMP)"
"RTN","IBCRHBR",8,0)
 W !,"-----------------------------------------------------------------------------"
"RTN","IBCRHBR",9,0)
 ;
"RTN","IBCRHBR",10,0)
 I '$$CONT^IBCRHBR5 Q
"RTN","IBCRHBR",11,0)
 ;
"RTN","IBCRHBR",12,0)
 S IBLOAD=$$RELOAD^IBCRHBR1 I IBLOAD<0 Q
"RTN","IBCRHBR",13,0)
 ;
"RTN","IBCRHBR",14,0)
 I IBLOAD=1 S IBVERS=$$SELVERS^IBCRHBRV Q:'IBVERS
"RTN","IBCRHBR",15,0)
 ;
"RTN","IBCRHBR",16,0)
 I ($G(IBVERS)>1.9)!($$VERSION^IBCRHBRV>1.9) G ^IBCRHBS
"RTN","IBCRHBR",17,0)
 ;
"RTN","IBCRHBR",18,0)
 I IBLOAD=1 S IBLOAD=$$HOSTLOAD^IBCRHBR1(IBVERS) I 'IBLOAD Q
"RTN","IBCRHBR",19,0)
 ;
"RTN","IBCRHBR",20,0)
 S IBSITE=$$SELSITE^IBCRHBR4 I 'IBSITE Q
"RTN","IBCRHBR",21,0)
 ;
"RTN","IBCRHBR",22,0)
 D CALCRC^IBCRHBR5(IBSITE)
"RTN","IBCRHBR",23,0)
 ;
"RTN","IBCRHBR",24,0)
 Q
"RTN","IBCRHBR",25,0)
 ;
"RTN","IBCRHBR",26,0)
 ;
"RTN","IBCRHBR",27,0)
 ; ==============================================================================================
"RTN","IBCRHBR",28,0)
 ;
"RTN","IBCRHBR",29,0)
1 ;XTMP version of national files of all charges and area factors
"RTN","IBCRHBR",30,0)
 ;
"RTN","IBCRHBR",31,0)
 ; IBCR RC x,0: delete date ^ create date ^ name, date/time, by ^ ?? ^ count
"RTN","IBCRHBR",32,0)
 ;
"RTN","IBCRHBR",33,0)
 ; IBCR RC A:  DRG ^ surg/non-surg ^ rm&bd ^ anc ^ begin ^ end
"RTN","IBCRHBR",34,0)
 ;             999 ^  ^ charge ^ ^ begin ^ end
"RTN","IBCRHBR",35,0)
 ; IBCR RC B:  site number ^ surg rm&bd ^ surg anc ^ non-surg rm&bd ^ non-surg anc ^ skilled nursing ^ begin ^end
"RTN","IBCRHBR",36,0)
 ;
"RTN","IBCRHBR",37,0)
 ; IBCR RC C:  CPT ^ charge ^ begin ^ end ^ site limited
"RTN","IBCRHBR",38,0)
 ; IBCR RC D:  site number ^ area factor ^ begin ^ end ^ site limited
"RTN","IBCRHBR",39,0)
 ;
"RTN","IBCRHBR",40,0)
 ; IBCR RC E: CPT ^ modifier ^ work expense ^ practice expense ^ code group ^ conversion factor ^ begin ^ end
"RTN","IBCRHBR",41,0)
 ;
"RTN","IBCRHBR",42,0)
 ; IBCR RC F: CPT ^ modifier ^ charge ^ code group ^ begin ^ end
"RTN","IBCRHBR",43,0)
 ;
"RTN","IBCRHBR",44,0)
 ; IBCR RC G: CPT ^ modifier ^ unit value ^ code group ^ conversion factor ^ begin ^ end
"RTN","IBCRHBR",45,0)
 ;
"RTN","IBCRHBR",46,0)
 ; IBCR RC H: site number ^ work adjuster ^ work expense ^ practice expense ^ begin ^ end
"RTN","IBCRHBR",47,0)
 ; IBCR RC H, BC: code group area factors
"RTN","IBCRHBR",48,0)
 ;
"RTN","IBCRHBR",49,0)
 ; IBCR RC I: site number ^ area factor ^ begin ^ end
"RTN","IBCRHBR",50,0)
 ;
"RTN","IBCRHBR",51,0)
2 ;site file created from all national area factor files
"RTN","IBCRHBR",52,0)
 ;
"RTN","IBCRHBR",53,0)
 ; IBCR RC SITE: site number ^ site name, state ^ 3-digit zip
"RTN","IBCRHBR",54,0)
 ; IBCR RC SITE, source file: source ifn
"RTN","IBCRHBR",55,0)
 ; IBCR RC SITE, VERSION: version number
"RTN","IBCRHBR",56,0)
 ;
"RTN","IBCRHBR",57,0)
3 ;all XTMP files read by CM utility
"RTN","IBCRHBR",58,0)
 ;
"RTN","IBCRHBR",59,0)
 ; IBCR RC site: item ptr ^ effective date ^ inactive date ^ charge ^ modifier ^ base (2.0+)
"RTN","IBCRHBR",60,0)
 ;
"RTN","IBCRHBR",61,0)
4 ;all updates due to a new version are in routine IBCRHBRV
"RTN","IBCRHBR",62,0)
 ;
"RTN","IBCRHBR",63,0)
 ; ==============================================================================================
"RTN","IBCRHBR",64,0)
 ;
"RTN","IBCRHBR",65,0)
 ;
"RTN","IBCRHBR",66,0)
CGROUP ; set up code group array needed when calculating charges
"RTN","IBCRHBR",67,0)
 N IBI,IBLN
"RTN","IBCRHBR",68,0)
 F IBI=1:1 S IBLN=$P($T(CGROUPF+IBI),";;",2) Q:IBLN=""  I +IBLN D
"RTN","IBCRHBR",69,0)
 . S ^TMP($J,"IBCR RC CGROUP",$P(IBLN,U,2))=+IBLN
"RTN","IBCRHBR",70,0)
 Q
"RTN","IBCRHBR",71,0)
CGROUPF ; list of valid Code Groups and their corresponding piece in the area factor file (table h)
"RTN","IBCRHBR",72,0)
 ;; 
"RTN","IBCRHBR",73,0)
 ;;5^Allergy Immunotherapy
"RTN","IBCRHBR",74,0)
 ;;4^Allergy Testing
"RTN","IBCRHBR",75,0)
 ;;21^Anesthesia
"RTN","IBCRHBR",76,0)
 ;;10^Cardiovascular
"RTN","IBCRHBR",77,0)
 ;;16^Chiropractor
"RTN","IBCRHBR",78,0)
 ;;8^Consults
"RTN","IBCRHBR",79,0)
 ;;7^Emer Room Visits and Observation Care
"RTN","IBCRHBR",80,0)
 ;;14^Hearing/Speech Exams
"RTN","IBCRHBR",81,0)
 ;;11^Immunizations
"RTN","IBCRHBR",82,0)
 ;;1^Inpatient Visits
"RTN","IBCRHBR",83,0)
 ;;23^Maternity - Cesarean Deliveries
"RTN","IBCRHBR",84,0)
 ;;24^Maternity - Non-Deliveries
"RTN","IBCRHBR",85,0)
 ;;22^Maternity - Normal Deliveries
"RTN","IBCRHBR",86,0)
 ;;6^Miscellaneous Medical
"RTN","IBCRHBR",87,0)
 ;;2^Office/Home/Urgent Care Visits
"RTN","IBCRHBR",88,0)
 ;;17^Outpatient Psych/Alcohol & Drug Abuse
"RTN","IBCRHBR",89,0)
 ;;20^Pathology
"RTN","IBCRHBR",90,0)
 ;;15^Physical Exams
"RTN","IBCRHBR",91,0)
 ;;9^Physical Medicine
"RTN","IBCRHBR",92,0)
 ;;19^Radiology
"RTN","IBCRHBR",93,0)
 ;;18^Surgery
"RTN","IBCRHBR",94,0)
 ;;3^Therapeutic Injections
"RTN","IBCRHBR",95,0)
 ;;13^Vision Exams
"RTN","IBCRHBR",96,0)
 ;;12^Well Baby Exams
"RTN","IBCRHBR",97,0)
 ;;
"RTN","IBCRHBR6")
0^21^B75293524
"RTN","IBCRHBR6",1,0)
IBCRHBR6 ;ALB/ARH - RATES: UPLOAD (RC) SITE CALCULATIONS ; 10-OCT-1998
"RTN","IBCRHBR6",2,0)
 ;;2.0;INTEGRATED BILLING;**106,138,148,169,245**;21-MAR-94
"RTN","IBCRHBR6",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRHBR6",4,0)
 ;
"RTN","IBCRHBR6",5,0)
INPT(SITE) ; use Inpatient Facility National Rates to calculate Site Specific Rates
"RTN","IBCRHBR6",6,0)
 N IBXTMPC,IBXTMPA,IBSITE,IBXRF1,IBXRF2,IBAA,IBI,IBDRG,IBEFF,IBINA,IBCHRG,IBSNS,IBDRMB,IBSRMB,IBDANC,IBSANC,IBRG,IBRATE,IBEVNT,IBBS,IBCSRB,IBCSAN
"RTN","IBCRHBR6",7,0)
 ;
"RTN","IBCRHBR6",8,0)
 S IBXTMPC="IBCR RC A",IBXTMPA="IBCR RC B",IBSITE=$$SITE(SITE,IBXTMPA,"Inpatient Facility") Q:'IBSITE
"RTN","IBCRHBR6",9,0)
 S IBXRF1="IBCR UPLOAD RC "_$P(IBSITE,U,2)_" "_$P(IBSITE,U,3),IBXRF2="Inpt Fac"
"RTN","IBCRHBR6",10,0)
 W !,$P(IBSITE,U,2)," ",$P(IBSITE,U,3)," - Inpatient Facility Charges"
"RTN","IBCRHBR6",11,0)
 ;
"RTN","IBCRHBR6",12,0)
 S IBAA=$G(^XTMP(IBXTMPA,+IBSITE)) Q:IBAA=""
"RTN","IBCRHBR6",13,0)
 ;
"RTN","IBCRHBR6",14,0)
 S IBRG=$$RG^IBCRHU2("RC "_$P(IBSITE,U,2)_" - "_$P(IBSITE,U,3),$P(IBSITE,U,2),$P(IBSITE,U,4)),IBRG=$P(IBRG,U,2)
"RTN","IBCRHBR6",15,0)
 S IBRATE="RC INPATIENT FACILITY"
"RTN","IBCRHBR6",16,0)
 S IBEVNT="INPATIENT DRG"
"RTN","IBCRHBR6",17,0)
 S IBBS="GENERAL MEDICAL CARE"
"RTN","IBCRHBR6",18,0)
 S IBCSRB=$$CS^IBCRHU2("RC-INPT R&B "_$P(IBSITE,U,2),IBRATE,IBEVNT,IBRG,"INST",101,IBBS)
"RTN","IBCRHBR6",19,0)
 S IBCSAN=$$CS^IBCRHU2("RC-INPT ANC "_$P(IBSITE,U,2),IBRATE,IBEVNT,IBRG,"INST",240,IBBS)
"RTN","IBCRHBR6",20,0)
 ;
"RTN","IBCRHBR6",21,0)
 S IBI=0 F  S IBI=$O(^XTMP(IBXTMPC,IBI)) Q:'IBI  D  I '(IBI#100) W "."
"RTN","IBCRHBR6",22,0)
 . S IBDRG=$G(^XTMP(IBXTMPC,IBI)) Q:IBDRG=""
"RTN","IBCRHBR6",23,0)
 . ;
"RTN","IBCRHBR6",24,0)
 . S IBEFF=$P(IBDRG,U,5) I $P(IBAA,U,7)>IBEFF S IBEFF=$P(IBAA,U,7)
"RTN","IBCRHBR6",25,0)
 . S IBINA=$P(IBDRG,U,6) I $P(IBAA,U,8)>IBINA S IBINA=$P(IBAA,U,8)
"RTN","IBCRHBR6",26,0)
 . ;
"RTN","IBCRHBR6",27,0)
 . S IBSNS=$P(IBDRG,U,2)
"RTN","IBCRHBR6",28,0)
 . S IBDRMB=$P(IBDRG,U,3),IBSRMB=$S(IBSNS="S":$P(IBAA,U,2),IBSNS="N":$P(IBAA,U,4),1:0)
"RTN","IBCRHBR6",29,0)
 . S IBCHRG=IBDRMB*IBSRMB,IBCHRG=$J(IBCHRG,0,$$RND)
"RTN","IBCRHBR6",30,0)
 . D SET(IBXRF1,IBXRF2_" R&B","DRG"_+$P(IBDRG,U,1),IBEFF,IBINA,+IBCHRG,"",IBCSRB,4)
"RTN","IBCRHBR6",31,0)
 . ;
"RTN","IBCRHBR6",32,0)
 . S IBDANC=$P(IBDRG,U,4),IBSANC=$S(IBSNS="S":$P(IBAA,U,3),IBSNS="N":$P(IBAA,U,5),1:0)
"RTN","IBCRHBR6",33,0)
 . S IBCHRG=IBDANC*IBSANC,IBCHRG=$J(IBCHRG,0,$$RND)
"RTN","IBCRHBR6",34,0)
 . D SET(IBXRF1,IBXRF2_" Anc","DRG"_+$P(IBDRG,U,1),IBEFF,IBINA,+IBCHRG,"",IBCSAN,4)
"RTN","IBCRHBR6",35,0)
 Q
"RTN","IBCRHBR6",36,0)
 ;
"RTN","IBCRHBR6",37,0)
SNF(SITE) ; Skilled Nursing
"RTN","IBCRHBR6",38,0)
 N IBXTMPC,IBXTMPA,IBSITE,IBXRF1,IBXRF2,IBAA,IBI,IBDRG,IBEFF,IBINA,IBCHRG,IBRG,IBRATE,IBEVNT,IBBS,IBCS
"RTN","IBCRHBR6",39,0)
 ;
"RTN","IBCRHBR6",40,0)
 ;
"RTN","IBCRHBR6",41,0)
 S IBXTMPC="IBCR RC A",IBXTMPA="IBCR RC B",IBSITE=$$SITE(SITE,IBXTMPA,"Skilled Nursing") Q:'IBSITE
"RTN","IBCRHBR6",42,0)
 S IBXRF1="IBCR UPLOAD RC "_$P(IBSITE,U,2)_" "_$P(IBSITE,U,3),IBXRF2="Inpt SNF"
"RTN","IBCRHBR6",43,0)
 W !,$P(IBSITE,U,2)," ",$P(IBSITE,U,3)," - Inpatient Skilled Nursing Charges"
"RTN","IBCRHBR6",44,0)
 ;
"RTN","IBCRHBR6",45,0)
 S IBRG=$$RG^IBCRHU2("RC "_$P(IBSITE,U,2)_" - "_$P(IBSITE,U,3),$P(IBSITE,U,2),$P(IBSITE,U,4)),IBRG=$P(IBRG,U,2)
"RTN","IBCRHBR6",46,0)
 S IBRATE="RC SKILLED NURSING/SUB-ACUTE"
"RTN","IBCRHBR6",47,0)
 S IBEVNT="UNASSOCIATED"
"RTN","IBCRHBR6",48,0)
 S IBBS="SKILLED NURSING/SUB-ACUTE CARE"
"RTN","IBCRHBR6",49,0)
 S IBCS=$$CS^IBCRHU2("RC-SNF "_$P(IBSITE,U,2),IBRATE,IBEVNT,IBRG,"INST","100",IBBS)
"RTN","IBCRHBR6",50,0)
 ;
"RTN","IBCRHBR6",51,0)
 S IBAA=$G(^XTMP(IBXTMPA,+IBSITE)) Q:IBAA=""
"RTN","IBCRHBR6",52,0)
 ;
"RTN","IBCRHBR6",53,0)
 S IBI=0 F  S IBI=$O(^XTMP(IBXTMPC,IBI)) Q:'IBI  D
"RTN","IBCRHBR6",54,0)
 . S IBDRG=$G(^XTMP(IBXTMPC,IBI)) I $P(IBDRG,U,1)'=999 Q
"RTN","IBCRHBR6",55,0)
 . ;
"RTN","IBCRHBR6",56,0)
 . S IBEFF=$P(IBDRG,U,5) I $P(IBAA,U,7)>IBEFF S IBEFF=$P(IBAA,U,7)
"RTN","IBCRHBR6",57,0)
 . S IBINA=$P(IBDRG,U,6) I $P(IBAA,U,8)>IBINA S IBINA=$P(IBAA,U,8)
"RTN","IBCRHBR6",58,0)
 . ;
"RTN","IBCRHBR6",59,0)
 . S IBCHRG=$P(IBAA,U,6)*$P(IBDRG,U,3),IBCHRG=$J(IBCHRG,0,$$RND)
"RTN","IBCRHBR6",60,0)
 . D SET(IBXRF1,IBXRF2,"SKILLED NURSING CARE",IBEFF,IBINA,+IBCHRG,"",IBCS,9)
"RTN","IBCRHBR6",61,0)
 . S IBCHRG=$P(IBAA,U,6)*$P(IBDRG,U,3),IBCHRG=$J(IBCHRG,0,$$RND)
"RTN","IBCRHBR6",62,0)
 . D SET(IBXRF1,IBXRF2,"SUB-ACUTE CARE",IBEFF,IBINA,+IBCHRG,"",IBCS,9)
"RTN","IBCRHBR6",63,0)
 Q
"RTN","IBCRHBR6",64,0)
 ;
"RTN","IBCRHBR6",65,0)
OPT(SITE) ; use Outpatient Facility National Rates to calculate Site Specific Rates
"RTN","IBCRHBR6",66,0)
 N IBXTMPC,IBXTMPA,IBSITE,IBXRF1,IBXRF2,IBAA,IBI,IBCPT,IBEFF,IBINA,IBCHRG,IBRG,IBRATE,IBEVNT,IBBS,IBCS
"RTN","IBCRHBR6",67,0)
 ;
"RTN","IBCRHBR6",68,0)
 S IBXTMPC="IBCR RC C",IBXTMPA="IBCR RC D",IBSITE=$$SITE(SITE,IBXTMPA,"Outpatient Facility") Q:'IBSITE
"RTN","IBCRHBR6",69,0)
 S IBXRF1="IBCR UPLOAD RC "_$P(IBSITE,U,2)_" "_$P(IBSITE,U,3),IBXRF2="Opt Fac"
"RTN","IBCRHBR6",70,0)
 W !,$P(IBSITE,U,2)," ",$P(IBSITE,U,3)," - Outpatient Facility Charges"
"RTN","IBCRHBR6",71,0)
 ;
"RTN","IBCRHBR6",72,0)
 S IBRG=$$RG^IBCRHU2("RC "_$P(IBSITE,U,2)_" - "_$P(IBSITE,U,3),$P(IBSITE,U,2),$P(IBSITE,U,4)),IBRG=$P(IBRG,U,2)
"RTN","IBCRHBR6",73,0)
 S IBRATE="RC FACILITY PR"
"RTN","IBCRHBR6",74,0)
 S IBEVNT="PROCEDURE"
"RTN","IBCRHBR6",75,0)
 S IBBS="OUTPATIENT VISIT"
"RTN","IBCRHBR6",76,0)
 S IBCS=$$CS^IBCRHU2("RC-OPT FAC "_$P(IBSITE,U,2),IBRATE,IBEVNT,IBRG,"INST",510,IBBS)
"RTN","IBCRHBR6",77,0)
 ;
"RTN","IBCRHBR6",78,0)
 S IBAA=$G(^XTMP(IBXTMPA,+IBSITE)) Q:IBAA=""
"RTN","IBCRHBR6",79,0)
 ;
"RTN","IBCRHBR6",80,0)
 S IBI=0 F  S IBI=$O(^XTMP(IBXTMPC,IBI)) Q:'IBI  D  I '(IBI#100) W "."
"RTN","IBCRHBR6",81,0)
 . S IBCPT=$G(^XTMP(IBXTMPC,IBI)) Q:IBCPT=""
"RTN","IBCRHBR6",82,0)
 . ;
"RTN","IBCRHBR6",83,0)
 . I +$P(IBCPT,U,5),$P(IBCPT,U,5)'=$P(IBAA,U,5) Q  ; site limited charge
"RTN","IBCRHBR6",84,0)
 . ;
"RTN","IBCRHBR6",85,0)
 . S IBEFF=$P(IBCPT,U,3) I $P(IBAA,U,3)>IBEFF S IBEFF=$P(IBAA,U,3)
"RTN","IBCRHBR6",86,0)
 . S IBINA=$P(IBCPT,U,4) I $P(IBAA,U,4)>IBINA S IBINA=$P(IBAA,U,4)
"RTN","IBCRHBR6",87,0)
 . ;
"RTN","IBCRHBR6",88,0)
 . S IBCHRG=+$P(IBAA,U,2)*$P(IBCPT,U,2),IBCHRG=$J(IBCHRG,0,2)
"RTN","IBCRHBR6",89,0)
 . D SET(IBXRF1,IBXRF2,$P(IBCPT,U,1),IBEFF,IBINA,+IBCHRG,"",IBCS,2)
"RTN","IBCRHBR6",90,0)
 Q
"RTN","IBCRHBR6",91,0)
 ;
"RTN","IBCRHBR6",92,0)
PCE(SITE) ; use Physician (General) National Rates to calculate Site Specific Rates
"RTN","IBCRHBR6",93,0)
 N IBXTMPC,IBXTMPA,IBSITE,IBXRF1,IBXRF2,IBAA,IBI,IBCPT,IBEFF,IBINA,IBCHRG,IBAAM,IBCGP,IBC1,IBC2,IBC3,IBOK,IBRG,IBRATE,IBEVNT,IBBS,IBCS S IBOK=1
"RTN","IBCRHBR6",94,0)
 ;
"RTN","IBCRHBR6",95,0)
 S IBXTMPC="IBCR RC E",IBXTMPA="IBCR RC H",IBSITE=$$SITE(SITE,IBXTMPA,"Physician E") Q:'IBSITE
"RTN","IBCRHBR6",96,0)
 S IBXRF1="IBCR UPLOAD RC "_$P(IBSITE,U,2)_" "_$P(IBSITE,U,3),IBXRF2="Phys Fee E"
"RTN","IBCRHBR6",97,0)
 W !,$P(IBSITE,U,2)," ",$P(IBSITE,U,3)," - Physician Charges E"
"RTN","IBCRHBR6",98,0)
 ;
"RTN","IBCRHBR6",99,0)
 S IBRG=$$RG^IBCRHU2("RC "_$P(IBSITE,U,2)_" - "_$P(IBSITE,U,3),$P(IBSITE,U,2),$P(IBSITE,U,4)),IBRG=$P(IBRG,U,2)
"RTN","IBCRHBR6",100,0)
 S IBRATE="RC PHYSICIAN PR"
"RTN","IBCRHBR6",101,0)
 S IBEVNT="PROCEDURE"
"RTN","IBCRHBR6",102,0)
 S IBBS="OUTPATIENT VISIT"
"RTN","IBCRHBR6",103,0)
 S IBCS=$$CS^IBCRHU2("RC-PHYSICIAN "_$P(IBSITE,U,2),IBRATE,IBEVNT,IBRG,"PROF",510,IBBS)
"RTN","IBCRHBR6",104,0)
 ;
"RTN","IBCRHBR6",105,0)
 S IBAA=$G(^XTMP(IBXTMPA,+IBSITE)) Q:IBAA=""
"RTN","IBCRHBR6",106,0)
 S IBAAM=$G(^XTMP(IBXTMPA,+IBSITE,"BC")) Q:IBAAM=""
"RTN","IBCRHBR6",107,0)
 ;
"RTN","IBCRHBR6",108,0)
 S IBI=0 F  S IBI=$O(^XTMP(IBXTMPC,IBI)) Q:'IBI  D  W:'(IBI#100) "." I 'IBOK Q
"RTN","IBCRHBR6",109,0)
 . S IBCPT=$G(^XTMP(IBXTMPC,IBI)) Q:IBCPT=""
"RTN","IBCRHBR6",110,0)
 . S IBCGP=$$CGP($P(IBCPT,U,5),IBXTMPC_"="_$P(IBCPT,U,1)) I 'IBCGP S IBOK=0 Q
"RTN","IBCRHBR6",111,0)
 . ;
"RTN","IBCRHBR6",112,0)
 . S IBEFF=$P(IBCPT,U,7) I $P(IBAA,U,5)>IBEFF S IBEFF=$P(IBAA,U,5)
"RTN","IBCRHBR6",113,0)
 . S IBINA=$P(IBCPT,U,8) I $P(IBAA,U,6)>IBINA S IBINA=$P(IBAA,U,6)
"RTN","IBCRHBR6",114,0)
 . ;
"RTN","IBCRHBR6",115,0)
 . S IBC1=$P(IBCPT,U,3)*$P(IBAA,U,3)*$P(IBAA,U,2)
"RTN","IBCRHBR6",116,0)
 . S IBC2=$P(IBCPT,U,4)*$P(IBAA,U,4)
"RTN","IBCRHBR6",117,0)
 . S IBC3=$P(IBCPT,U,6)*$P(IBAAM,U,IBCGP)
"RTN","IBCRHBR6",118,0)
 . S IBCHRG=(IBC1+IBC2)*IBC3,IBCHRG=$J(IBCHRG,0,2)
"RTN","IBCRHBR6",119,0)
 . D SET(IBXRF1,IBXRF2,$P(IBCPT,U,1),IBEFF,IBINA,+IBCHRG,$P(IBCPT,U,2),IBCS,2)
"RTN","IBCRHBR6",120,0)
 Q
"RTN","IBCRHBR6",121,0)
 ;
"RTN","IBCRHBR6",122,0)
PCF(SITE) ; use Physician (Path & Anesthesia) National Rates to calculate Site Specific Rates
"RTN","IBCRHBR6",123,0)
 N IBXTMPC,IBXTMPA,IBSITE,IBXRF1,IBXRF2,IBAA,IBI,IBCPT,IBEFF,IBINA,IBCHRG,IBAAM,IBCGP,IBOK,IBCS S IBOK=1
"RTN","IBCRHBR6",124,0)
 ;
"RTN","IBCRHBR6",125,0)
 S IBXTMPC="IBCR RC F",IBXTMPA="IBCR RC H",IBSITE=$$SITE(SITE,IBXTMPA,"Physician F") Q:'IBSITE
"RTN","IBCRHBR6",126,0)
 S IBXRF1="IBCR UPLOAD RC "_$P(IBSITE,U,2)_" "_$P(IBSITE,U,3),IBXRF2="Phys Fee F"
"RTN","IBCRHBR6",127,0)
 W !,$P(IBSITE,U,2)," ",$P(IBSITE,U,3)," - Physician Charges F"
"RTN","IBCRHBR6",128,0)
 ;
"RTN","IBCRHBR6",129,0)
 S IBCS=$$USECS^IBCRHU2("RC-PHYSICIAN "_$P(IBSITE,U,2))
"RTN","IBCRHBR6",130,0)
 ;
"RTN","IBCRHBR6",131,0)
 S IBAA=$G(^XTMP(IBXTMPA,+IBSITE)) Q:IBAA=""
"RTN","IBCRHBR6",132,0)
 S IBAAM=$G(^XTMP(IBXTMPA,+IBSITE,"BC")) Q:IBAAM=""
"RTN","IBCRHBR6",133,0)
 ;
"RTN","IBCRHBR6",134,0)
 S IBI=0 F  S IBI=$O(^XTMP(IBXTMPC,IBI)) Q:'IBI  D  W:'(IBI#100) "." I 'IBOK Q
"RTN","IBCRHBR6",135,0)
 . S IBCPT=$G(^XTMP(IBXTMPC,IBI)) Q:IBCPT=""
"RTN","IBCRHBR6",136,0)
 . S IBCGP=$$CGP($P(IBCPT,U,4),IBXTMPC_"="_$P(IBCPT,U,1)) I 'IBCGP S IBOK=0 Q
"RTN","IBCRHBR6",137,0)
 . ;
"RTN","IBCRHBR6",138,0)
 . S IBEFF=$P(IBCPT,U,5) I $P(IBAA,U,5)>IBEFF S IBEFF=$P(IBAA,U,5)
"RTN","IBCRHBR6",139,0)
 . S IBINA=$P(IBCPT,U,6) I $P(IBAA,U,6)>IBINA S IBINA=$P(IBAA,U,6)
"RTN","IBCRHBR6",140,0)
 . ;
"RTN","IBCRHBR6",141,0)
 . S IBCHRG=+$P(IBAAM,U,IBCGP)*$P(IBCPT,U,3),IBCHRG=$J(IBCHRG,0,2)
"RTN","IBCRHBR6",142,0)
 . D SET(IBXRF1,IBXRF2,$P(IBCPT,U,1),IBEFF,IBINA,+IBCHRG,$P(IBCPT,U,2),IBCS,2)
"RTN","IBCRHBR6",143,0)
 Q
"RTN","IBCRHBR6",144,0)
 ;
"RTN","IBCRHBR6",145,0)
PCG(SITE) ; use Physician (Total RVU) National Rates to calculate Site Specific Rates
"RTN","IBCRHBR6",146,0)
 N IBXTMPC,IBXTMPA,IBXRF1,IBXRF2,IBSITE,IBAA,IBAAM,IBI,IBCPT,IBCGP,IBEFF,IBINA,IBCHRG,IBCS
"RTN","IBCRHBR6",147,0)
 ;
"RTN","IBCRHBR6",148,0)
 S IBXTMPC="IBCR RC G",IBXTMPA="IBCR RC I",IBSITE=$$SITE(SITE,IBXTMPA,"Physician G") Q:'IBSITE
"RTN","IBCRHBR6",149,0)
 S IBXRF1="IBCR UPLOAD RC "_$P(IBSITE,U,2)_" "_$P(IBSITE,U,3),IBXRF2="Phys Fee G"
"RTN","IBCRHBR6",150,0)
 W !,$P(IBSITE,U,2)," ",$P(IBSITE,U,3)," - Physician Charges G"
"RTN","IBCRHBR6",151,0)
 ;
"RTN","IBCRHBR6",152,0)
 S IBCS=$$USECS^IBCRHU2("RC-PHYSICIAN "_$P(IBSITE,U,2))
"RTN","IBCRHBR6",153,0)
 ;
"RTN","IBCRHBR6",154,0)
 S IBAA=$G(^XTMP(IBXTMPA,+IBSITE)) Q:IBAA=""
"RTN","IBCRHBR6",155,0)
 S IBAAM=$G(^XTMP("IBCR RC H",+IBSITE,"BC")) Q:IBAAM=""
"RTN","IBCRHBR6",156,0)
 ;
"RTN","IBCRHBR6",157,0)
 S IBI=0 F  S IBI=$O(^XTMP(IBXTMPC,IBI)) Q:'IBI  D  I '(IBI#100) W "."
"RTN","IBCRHBR6",158,0)
 . S IBCPT=$G(^XTMP(IBXTMPC,IBI)) Q:IBCPT=""
"RTN","IBCRHBR6",159,0)
 . S IBCGP=$$CGP($P(IBCPT,U,4),IBXTMPC_"="_$P(IBCPT,U,1)) I 'IBCGP S IBOK=0 Q
"RTN","IBCRHBR6",160,0)
 . ;
"RTN","IBCRHBR6",161,0)
 . S IBEFF=$P(IBCPT,U,6) I $P(IBAA,U,3)>IBEFF S IBEFF=$P(IBAA,U,3)
"RTN","IBCRHBR6",162,0)
 . S IBINA=$P(IBCPT,U,7) I $P(IBAA,U,4)>IBINA S IBINA=$P(IBAA,U,4)
"RTN","IBCRHBR6",163,0)
 . ;
"RTN","IBCRHBR6",164,0)
 . S IBCHRG=+$P(IBAAM,U,IBCGP)*$P(IBAA,U,2)*$P(IBCPT,U,3)*$P(IBCPT,U,5),IBCHRG=$J(IBCHRG,0,2)
"RTN","IBCRHBR6",165,0)
 . D SET(IBXRF1,IBXRF2,$P(IBCPT,U,1),IBEFF,IBINA,+IBCHRG,$P(IBCPT,U,2),IBCS,2)
"RTN","IBCRHBR6",166,0)
 Q
"RTN","IBCRHBR6",167,0)
 ;
"RTN","IBCRHBR6",168,0)
SITE(IBSXIFN,IBXTMP,IBCHGTYP) ; return site data: XTMP file IFN ^ div num ^ name ^ 3-digit zip
"RTN","IBCRHBR6",169,0)
 N IBSITE,IBSXTMP,IBSITEN S IBSITE="",IBSXTMP="IBCR RC SITE"
"RTN","IBCRHBR6",170,0)
 S IBSITE=$G(^XTMP(IBSXTMP,IBSXIFN,IBXTMP)),IBSITEN=$G(^XTMP(IBSXTMP,IBSXIFN))
"RTN","IBCRHBR6",171,0)
 I +IBSITE S IBSITE=IBSITE_U_$P(IBSITEN,U,1,3)
"RTN","IBCRHBR6",172,0)
 I 'IBSITE W !,"There are no ",$G(IBCHGTYP)," charges for ",$P(IBSITEN,U,1)," ",$P(IBSITEN,U,2),"!",!
"RTN","IBCRHBR6",173,0)
 Q IBSITE
"RTN","IBCRHBR6",174,0)
 ;
"RTN","IBCRHBR6",175,0)
SETHDR(IBXRF1) ; set up header for XTMP file
"RTN","IBCRHBR6",176,0)
 N IBX K ^XTMP(IBXRF1)
"RTN","IBCRHBR6",177,0)
 S IBX="IB Upload RC v"_$$VERSION^IBCRHBRV_" "_$P(IBXRF1,"UPLOAD RC ",2)_", "_$P($$HTE^XLFDT($H,2),":",1,2)_" by "_$P($G(^VA(200,+$G(DUZ),0)),U,1)
"RTN","IBCRHBR6",178,0)
 S ^XTMP(IBXRF1,0)=$$FMADD^XLFDT(DT,2)_U_DT_U_IBX
"RTN","IBCRHBR6",179,0)
 Q
"RTN","IBCRHBR6",180,0)
 ;
"RTN","IBCRHBR6",181,0)
SET(IBXRF1,IBXRF2,ITEM,EFFDT,INACTDT,CHRG,MOD,CS,ITYPE) ; set calculated charges into XTMP
"RTN","IBCRHBR6",182,0)
 ;
"RTN","IBCRHBR6",183,0)
 N IBX,IBK,IBINACT S IBX=$G(^XTMP(IBXRF1,0)) I IBX="" D SETHDR(IBXRF1)
"RTN","IBCRHBR6",184,0)
 S IBK=+$P(IBX,U,4)+1,$P(^XTMP(IBXRF1,0),U,4)=IBK
"RTN","IBCRHBR6",185,0)
 S ^XTMP(IBXRF1,IBXRF2)=(+$G(^XTMP(IBXRF1,IBXRF2))+1)_U_$G(ITYPE)_U_$G(CS)
"RTN","IBCRHBR6",186,0)
 ;
"RTN","IBCRHBR6",187,0)
 S ^XTMP(IBXRF1,IBXRF2,IBK)=ITEM_U_$$DATE(EFFDT)_U_$$ENDDT(INACTDT)_U_+CHRG_U_$G(MOD)
"RTN","IBCRHBR6",188,0)
 Q
"RTN","IBCRHBR6",189,0)
 ;
"RTN","IBCRHBR6",190,0)
CGP(CG,TXT) ; if Code Group is defined return benefit category number in list
"RTN","IBCRHBR6",191,0)
 N IBCGP I '$D(^TMP($J,"IBCR RC CGROUP")) D CGROUP^IBCRHBR
"RTN","IBCRHBR6",192,0)
 S IBCGP=0 I $G(CG)'="" S IBCGP=+$G(^TMP($J,"IBCR RC CGROUP",CG))
"RTN","IBCRHBR6",193,0)
 I '$G(IBCGP) W !,"     *** Fatal Error: ",$G(TXT),!,?21,"could not find Code Group: ",CG
"RTN","IBCRHBR6",194,0)
 Q IBCGP
"RTN","IBCRHBR6",195,0)
 ;
"RTN","IBCRHBR6",196,0)
DATE(X) ; return yyyymmdd in FM format
"RTN","IBCRHBR6",197,0)
 N Y S Y="" I $G(X)?8N S Y=$S($E(X,1,4)>1999:3,1:2)_$E(X,3,4)_$E(X,5,8)
"RTN","IBCRHBR6",198,0)
 Q Y
"RTN","IBCRHBR6",199,0)
 ;
"RTN","IBCRHBR6",200,0)
ENDDT(X) ; return yyyymmdd date in FM format, check version inactive date
"RTN","IBCRHBR6",201,0)
 N Y,V S Y=$$DATE($G(X)) I 'Y S V=$G(^XTMP("IBCR RC SITE","VERSION INACTIVE")) I +V S Y=V
"RTN","IBCRHBR6",202,0)
 Q Y
"RTN","IBCRHBR6",203,0)
 ;
"RTN","IBCRHBR6",204,0)
RND() ;
"RTN","IBCRHBR6",205,0)
 N Y S Y=$$VERSION^IBCRHBRV S Y=$S(Y=1:0,1:2)
"RTN","IBCRHBR6",206,0)
 Q Y
"RTN","IBCRHBRV")
0^22^B51893900
"RTN","IBCRHBRV",1,0)
IBCRHBRV ;ALB/ARH - RATES: UPLOAD (RC) VERSION FUNCTIONS ; 14-FEB-01
"RTN","IBCRHBRV",2,0)
 ;;2.0;INTEGRATED BILLING;**148,169,245**;21-MAR-94
"RTN","IBCRHBRV",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRHBRV",4,0)
 ;
"RTN","IBCRHBRV",5,0)
 ; RC functions related to Version, most have to be updated when a new version is to be exported
"RTN","IBCRHBRV",6,0)
 ;
"RTN","IBCRHBRV",7,0)
SELVERS() ; get version to upload from user
"RTN","IBCRHBRV",8,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y,IBX S IBX=0
"RTN","IBCRHBRV",9,0)
 W !!,"Select the version of Reasonable Charges to upload.",!
"RTN","IBCRHBRV",10,0)
 S DIR("?")="Enter a code from the list corresponding to the version of Reasonable Charges to upload.  There was no version 1.3 of Reasonable Charges."
"RTN","IBCRHBRV",11,0)
 S DIR(0)="SO^1:Reasonable Charges version 1.0;1.1:Reasonable Charges version 1.1;1.2:Reasonable Charges version 1.2;1.4:Reasonable Charges version 1.4;2:Reasonable Charges version 2.0"
"RTN","IBCRHBRV",12,0)
 D ^DIR K DIR S IBX=$S(Y=1:1,Y=1.1:1.1,Y=1.2:1.2,Y=1.4:1.4,Y=2:2,1:0)
"RTN","IBCRHBRV",13,0)
 Q IBX
"RTN","IBCRHBRV",14,0)
 ;
"RTN","IBCRHBRV",15,0)
VERSION() ; return currently loaded version of RC files (1, 1.1, ...)
"RTN","IBCRHBRV",16,0)
 N IBX S IBX=$G(^XTMP("IBCR RC SITE","VERSION"))
"RTN","IBCRHBRV",17,0)
 Q IBX
"RTN","IBCRHBRV",18,0)
 ;
"RTN","IBCRHBRV",19,0)
VERSDT(VERS) ; return Effective Date of a version of RC files, either version passed in or currently loaded version
"RTN","IBCRHBRV",20,0)
 N IBX S:'$G(VERS) VERS=$$VERSION S IBX=$S(VERS=1:2990901,VERS=1.1:3001102,VERS=1.2:3010508,VERS=1.4:3030429,VERS=2:3031219,1:"")
"RTN","IBCRHBRV",21,0)
 Q IBX
"RTN","IBCRHBRV",22,0)
 ;
"RTN","IBCRHBRV",23,0)
VERSEDT(VERS) ; return Inactive Date of a version of RC files, either version passed in or currently loaded version
"RTN","IBCRHBRV",24,0)
 N IBX S:'$G(VERS) VERS=$$VERSION S IBX=$S(VERS=1:3001101,VERS=1.1:3010507,VERS=1.2:3030428,VERS=1.4:3031218,1:"")
"RTN","IBCRHBRV",25,0)
 Q IBX
"RTN","IBCRHBRV",26,0)
 ;
"RTN","IBCRHBRV",27,0)
VERSALL() ; returns all Reasonable Charges versions and corresponding effective date
"RTN","IBCRHBRV",28,0)
 N IBX S IBX="1;2990901^1.1;3001102^1.2;3010508^1.4;3030429^2;3031219"
"RTN","IBCRHBRV",29,0)
 Q IBX
"RTN","IBCRHBRV",30,0)
 ;
"RTN","IBCRHBRV",31,0)
VERSEND() ; returns all Reasonable Charges versions and corresponding inactive dates
"RTN","IBCRHBRV",32,0)
 N IBX S IBX="1;3001101^1.1;3010507^1.2;3030428^1.4;3031218"
"RTN","IBCRHBRV",33,0)
 Q IBX
"RTN","IBCRHBRV",34,0)
 ;
"RTN","IBCRHBRV",35,0)
 ;
"RTN","IBCRHBRV",36,0)
VERSITE(SITE) ; returns the list of versions loaded for a particular site
"RTN","IBCRHBRV",37,0)
 ; *** uses 99201 in the RC PHYSICIAN set to check which versions/dates are loaded
"RTN","IBCRHBRV",38,0)
 ; *** so 99201 must have a pro charge in all versions, if not it must be replaced with an item that does
"RTN","IBCRHBRV",39,0)
 N IBCS,IBXRF,IBITM,IBVERS,IBCSFN,IBI,IBV,IBX,IBY S IBX=""
"RTN","IBCRHBRV",40,0)
 S IBVERS=$$VERSALL,IBITM=99201
"RTN","IBCRHBRV",41,0)
 ;
"RTN","IBCRHBRV",42,0)
 I $G(SITE)'="" S IBCS="RC-PHYSICIAN" F  S IBCS=$O(^IBE(363.1,"B",IBCS)) Q:IBCS'["RC-PHYSICIAN"  D
"RTN","IBCRHBRV",43,0)
 . S IBV=$L(IBCS," ") I $P(IBCS," ",IBV)'=SITE Q
"RTN","IBCRHBRV",44,0)
 . S IBCSFN=$O(^IBE(363.1,"B",IBCS,0)) Q:'IBCSFN  S IBXRF="AIVDTS"_IBCSFN
"RTN","IBCRHBRV",45,0)
 . F IBI=1:1 S IBV=$P(IBVERS,U,IBI) Q:'IBV  I $O(^IBA(363.2,IBXRF,IBITM,-$P(IBV,";",2),0)) S IBY(+IBV)=""
"RTN","IBCRHBRV",46,0)
 S IBV="" F  S IBV=$O(IBY(IBV)) Q:'IBV  S IBX=IBX_IBV_","
"RTN","IBCRHBRV",47,0)
 ;
"RTN","IBCRHBRV",48,0)
 I $E(IBX,$L(IBX))="," S IBX=$E(IBX,1,$L(IBX)-1)
"RTN","IBCRHBRV",49,0)
 Q IBX
"RTN","IBCRHBRV",50,0)
 ;
"RTN","IBCRHBRV",51,0)
MSGSITE(SITE) ; display a message indicating which versions are loaded for a site
"RTN","IBCRHBRV",52,0)
 N IBVERS Q:'$G(SITE)
"RTN","IBCRHBRV",53,0)
 S IBVERS=$$VERSITE(SITE)
"RTN","IBCRHBRV",54,0)
 I 'IBVERS W !!,?12,"There appear to be no RC charges already loaded for "_SITE_"."
"RTN","IBCRHBRV",55,0)
 I +IBVERS W !!,?12,"RC versions "_IBVERS_" appear to be already loaded for "_SITE_"."
"RTN","IBCRHBRV",56,0)
 Q
"RTN","IBCRHBRV",57,0)
 ;
"RTN","IBCRHBRV",58,0)
MSGVERS(SITE) ; check if versions are being loaded in the correct order, should be loaded in date order
"RTN","IBCRHBRV",59,0)
 ; displays messages to the user:
"RTN","IBCRHBRV",60,0)
 ;   - if loading a version that has already been loaded for the site
"RTN","IBCRHBRV",61,0)
 ;   - if loading a version when any future versions have already been loaded for the site
"RTN","IBCRHBRV",62,0)
 ;   - if loading a version when the last version has not yet been loaded for the site
"RTN","IBCRHBRV",63,0)
 ; *** uses 99201 in the RC PHYSICIAN set to check which versions/dates are loaded
"RTN","IBCRHBRV",64,0)
 ; *** so 99201 must have a pro charge in all versions, if not it must be replaced with an item that does
"RTN","IBCRHBRV",65,0)
 N IBVERS,IBVDTC,IBVERSIN,IBVERSO Q:'$G(SITE)
"RTN","IBCRHBRV",66,0)
 ;
"RTN","IBCRHBRV",67,0)
 S IBVERS=$$VERSION Q:'IBVERS  S IBVDTC=$$VERSDT,IBVERSIN=","_$$VERSITE(SITE)_","
"RTN","IBCRHBRV",68,0)
 ;
"RTN","IBCRHBRV",69,0)
 ; check if loading a version that has already been loaded
"RTN","IBCRHBRV",70,0)
 I IBVERSIN[(","_IBVERS_",") D
"RTN","IBCRHBRV",71,0)
 . W !!,?5,"*** It appears version RC v",IBVERS," has already been loaded for this site ***"
"RTN","IBCRHBRV",72,0)
 ;
"RTN","IBCRHBRV",73,0)
 ; check if loading a version when any future versions have already been loaded
"RTN","IBCRHBRV",74,0)
 F IBVERSO=1,1.1,1.2,1.4,2 I IBVERSO>IBVERS D
"RTN","IBCRHBRV",75,0)
 . I IBVERSIN[(","_IBVERSO_",") D
"RTN","IBCRHBRV",76,0)
 .. W !!,?5,">>> Currently trying to load RC v"_IBVERS_" but RC v"_IBVERSO_" appears to be already",!,?9,"loaded for this site.  The versions should be loaded in date order."
"RTN","IBCRHBRV",77,0)
 ;
"RTN","IBCRHBRV",78,0)
 ; check if loading a version when the last version has not yet been loaded
"RTN","IBCRHBRV",79,0)
 F IBVERSO=2,1.4,1.2,1.1,1 I IBVERS>IBVERSO D  Q
"RTN","IBCRHBRV",80,0)
 . I IBVERSIN'[(","_IBVERSO_",") D
"RTN","IBCRHBRV",81,0)
 .. W !!,?5,"*** Currently trying to load RC v"_IBVERS_" but RC v"_IBVERSO_" does not appear to be",!,?9,"loaded for this site.  The versions should be loaded in date order."
"RTN","IBCRHBRV",82,0)
 .. W !!,?5,">>> Continue only if there will never be a need to bill events before ",!,?9,$$FMTE^XLFDT(IBVDTC,2)," for this site.  If RC v"_IBVERSO_" will be needed for this site then",!,?9,"load it first."
"RTN","IBCRHBRV",83,0)
 ;
"RTN","IBCRHBRV",84,0)
 Q
"RTN","IBCRHBRV",85,0)
 ;
"RTN","IBCRHBRV",86,0)
FILES(IBFILES,VERS) ; source Host file name, description, and routine lable that parses the file
"RTN","IBCRHBRV",87,0)
 ; the subscript used for the file in XTMP is 'IBCR RC '_X w/ X=the routine lable that parses the file
"RTN","IBCRHBRV",88,0)
 ;
"RTN","IBCRHBRV",89,0)
 I $G(VERS)=1.1 G FBREAL
"RTN","IBCRHBRV",90,0)
 I $G(VERS)=1.2 G FCREAL
"RTN","IBCRHBRV",91,0)
 I $G(VERS)=1.4 G FDREAL
"RTN","IBCRHBRV",92,0)
 I $G(VERS)=2 G FEREAL
"RTN","IBCRHBRV",93,0)
 ;
"RTN","IBCRHBRV",94,0)
FREAL S IBFILES("IBRCVA.TXT")="RC v1 Inpatient Facility Charges^A"
"RTN","IBCRHBRV",95,0)
 S IBFILES("IBRCVB.TXT")="RC v1 Inpatient Facility Area Factors^B"
"RTN","IBCRHBRV",96,0)
 S IBFILES("IBRCVC.TXT")="RC v1 Outpatient Facility Charges^C"
"RTN","IBCRHBRV",97,0)
 S IBFILES("IBRCVD.TXT")="RC v1 Outpatient Facility Area Factors^D"
"RTN","IBCRHBRV",98,0)
 S IBFILES("IBRCVE.TXT")="RC v1 Physician Charges E^E"
"RTN","IBCRHBRV",99,0)
 S IBFILES("IBRCVF.TXT")="RC v1 Physician Charges F^F"
"RTN","IBCRHBRV",100,0)
 S IBFILES("IBRCVG.TXT")="RC v1 Physician Charges G^G"
"RTN","IBCRHBRV",101,0)
 S IBFILES("IBRCVH.TXT")="RC v1 Physician Area Factors^H"
"RTN","IBCRHBRV",102,0)
 S IBFILES("IBRCVI.TXT")="RC v1 Physician Unit Area Factors^I"
"RTN","IBCRHBRV",103,0)
 Q
"RTN","IBCRHBRV",104,0)
 ;
"RTN","IBCRHBRV",105,0)
FBREAL S IBFILES("IBRC0011A.TXT")="RC v1.1 Inpatient Facility Charges^A"
"RTN","IBCRHBRV",106,0)
 S IBFILES("IBRC0011B.TXT")="RC v1.1 Inpatient Facility Area Factors^B"
"RTN","IBCRHBRV",107,0)
 S IBFILES("IBRC0011C.TXT")="RC v1.1 Outpatient Facility Charges^C"
"RTN","IBCRHBRV",108,0)
 S IBFILES("IBRC0011D.TXT")="RC v1.1 Outpatient Facility Area Factors^D"
"RTN","IBCRHBRV",109,0)
 S IBFILES("IBRC0011E.TXT")="RC v1.1 Physician Charges E^E"
"RTN","IBCRHBRV",110,0)
 S IBFILES("IBRC0011F.TXT")="RC v1.1 Physician Charges F^F"
"RTN","IBCRHBRV",111,0)
 S IBFILES("IBRC0011G.TXT")="RC v1.1 Physician Charges G^G"
"RTN","IBCRHBRV",112,0)
 S IBFILES("IBRC0011H.TXT")="RC v1.1 Physician Area Factors^H"
"RTN","IBCRHBRV",113,0)
 S IBFILES("IBRC0011I.TXT")="RC v1.1 Physician Unit Area Factors^I"
"RTN","IBCRHBRV",114,0)
 Q
"RTN","IBCRHBRV",115,0)
 ;
"RTN","IBCRHBRV",116,0)
FCREAL S IBFILES("IBRC0105A.TXT")="RC v1.2 Inpatient Facility Charges^A"
"RTN","IBCRHBRV",117,0)
 S IBFILES("IBRC0105B.TXT")="RC v1.2 Inpatient Facility Area Factors^B"
"RTN","IBCRHBRV",118,0)
 S IBFILES("IBRC0105C.TXT")="RC v1.2 Outpatient Facility Charges^C"
"RTN","IBCRHBRV",119,0)
 S IBFILES("IBRC0105D.TXT")="RC v1.2 Outpatient Facility Area Factors^D"
"RTN","IBCRHBRV",120,0)
 S IBFILES("IBRC0105E.TXT")="RC v1.2 Physician Charges E^E"
"RTN","IBCRHBRV",121,0)
 S IBFILES("IBRC0105F.TXT")="RC v1.2 Physician Charges F^F"
"RTN","IBCRHBRV",122,0)
 S IBFILES("IBRC0105G.TXT")="RC v1.2 Physician Charges G^G"
"RTN","IBCRHBRV",123,0)
 S IBFILES("IBRC0105H.TXT")="RC v1.2 Physician Area Factors^H"
"RTN","IBCRHBRV",124,0)
 S IBFILES("IBRC0105I.TXT")="RC v1.2 Physician Unit Area Factors^I"
"RTN","IBCRHBRV",125,0)
 Q
"RTN","IBCRHBRV",126,0)
 ;
"RTN","IBCRHBRV",127,0)
FDREAL S IBFILES("IBRC0304A.TXT")="RC v1.4 Inpatient Facility Charges^A"
"RTN","IBCRHBRV",128,0)
 S IBFILES("IBRC0304B.TXT")="RC v1.4 Inpatient Facility Area Factors^B"
"RTN","IBCRHBRV",129,0)
 S IBFILES("IBRC0304C.TXT")="RC v1.4 Outpatient Facility Charges^C"
"RTN","IBCRHBRV",130,0)
 S IBFILES("IBRC0304D.TXT")="RC v1.4 Outpatient Facility Area Factors^D"
"RTN","IBCRHBRV",131,0)
 S IBFILES("IBRC0304E.TXT")="RC v1.4 Physician Charges E^E"
"RTN","IBCRHBRV",132,0)
 S IBFILES("IBRC0304F.TXT")="RC v1.4 Physician Charges F^F"
"RTN","IBCRHBRV",133,0)
 S IBFILES("IBRC0304G.TXT")="RC v1.4 Physician Charges G^G"
"RTN","IBCRHBRV",134,0)
 S IBFILES("IBRC0304H.TXT")="RC v1.4 Physician Area Factors^H"
"RTN","IBCRHBRV",135,0)
 S IBFILES("IBRC0304I.TXT")="RC v1.4 Physician Unit Area Factors^I"
"RTN","IBCRHBRV",136,0)
 Q
"RTN","IBCRHBRV",137,0)
 ;
"RTN","IBCRHBRV",138,0)
FEREAL S IBFILES("IBRC0312A.TXT")="RC v2.0 Inpatient Facility Charges^A^10"
"RTN","IBCRHBRV",139,0)
 S IBFILES("IBRC0312B.TXT")="RC v2.0 Outpatient Facility Charges^B^14"
"RTN","IBCRHBRV",140,0)
 S IBFILES("IBRC0312C.TXT")="RC v2.0 Professional Charges^C^23"
"RTN","IBCRHBRV",141,0)
 S IBFILES("IBRC0312D.TXT")="RC v2.0 Service Catigory Codes^D^4"
"RTN","IBCRHBRV",142,0)
 S IBFILES("IBRC0312E.TXT")="RC v2.0 Area Factors^E^41"
"RTN","IBCRHBRV",143,0)
 S IBFILES("IBRC0312F.TXT")="RC v2.0 VA Sites and Zip Codes^F^4"
"RTN","IBCRHBRV",144,0)
 Q
"RTN","IBCRHBS")
0^23^B512744
"RTN","IBCRHBS",1,0)
IBCRHBS ;ALB/ARH - RATES: UPLOAD HOST FILES (RC 2+) DRIVER ; 10-OCT-03
"RTN","IBCRHBS",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBCRHBS",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRHBS",4,0)
 ;
"RTN","IBCRHBS",5,0)
 ;
"RTN","IBCRHBS",6,0)
 ; called from IBCRHBR to process RC v2.0+ versions
"RTN","IBCRHBS",7,0)
RC ;
"RTN","IBCRHBS",8,0)
 I IBLOAD=1 S IBLOAD=$$HOSTLOAD^IBCRHBS1(IBVERS) I 'IBLOAD Q
"RTN","IBCRHBS",9,0)
 ;
"RTN","IBCRHBS",10,0)
 S IBSITE=$$SELSITE^IBCRHBS4 I 'IBSITE Q
"RTN","IBCRHBS",11,0)
 ;
"RTN","IBCRHBS",12,0)
 D CALCRC^IBCRHBS5(IBSITE)
"RTN","IBCRHBS",13,0)
 ;
"RTN","IBCRHBS",14,0)
 Q
"RTN","IBCRHBS",15,0)
 ;
"RTN","IBCRHBS",16,0)
 ;
"RTN","IBCRHBS",17,0)
 ; ==============================================================================================
"RTN","IBCRHBS",18,0)
 ;
"RTN","IBCRHBS",19,0)
1 ;XTMP version of national files of all charges and area factors
"RTN","IBCRHBS",20,0)
 ;
"RTN","IBCRHBS",21,0)
 ; IBCR RC x,0: delete date ^ create date ^ name, date/time, by ^ ?? ^ count
"RTN","IBCRHBS",22,0)
 ;
"RTN","IBCRHBS",23,0)
 ; IBCR RC A:  Inpatient DRG and SNF Per Diem Charges, same format/fields as Host File
"RTN","IBCRHBS",24,0)
 ; IBCR RC B:  Facility CPT Charges, same format/fields as Host File
"RTN","IBCRHBS",25,0)
 ; IBCR RC C:  Professional CPT Charges, same format/fields as Host File
"RTN","IBCRHBS",26,0)
 ; IBCR RC D:  Service Category Codes, same format/fields as Host File
"RTN","IBCRHBS",27,0)
 ; IBCR RC E:  Area Factor File, same format/fields as Host File
"RTN","IBCRHBS",28,0)
 ; IBCR RC F:  Division/Zip File, same format/fields as Host File
"RTN","IBCRHBS",29,0)
 ;
"RTN","IBCRHBS",30,0)
 ;
"RTN","IBCRHBS",31,0)
2 ;site file created from all national area factor files
"RTN","IBCRHBS",32,0)
 ;
"RTN","IBCRHBS",33,0)
 ; IBCR RC SITE: site number ^ site name, state ^ 3-digit zip ^ type (if VA division)
"RTN","IBCRHBS",34,0)
 ; IBCR RC SITE, source file: source ifn
"RTN","IBCRHBS",35,0)
 ; IBCR RC SITE, VERSION: version number
"RTN","IBCRHBS",36,0)
 ; IBCR RC SITE, VERSION INACTIVE: version inactive date
"RTN","IBCRHBS",37,0)
 ;
"RTN","IBCRHBS",38,0)
3 ;all XTMP files read by CM utility
"RTN","IBCRHBS",39,0)
 ;
"RTN","IBCRHBS",40,0)
 ; IBCR UPLOAD site, 0: Upload Date + 2 ^ Upload Date ^ Name/Description ^ Item Count
"RTN","IBCRHBS",41,0)
 ; IBCR UPLOAD site, Charge Group: Item Count ^ Billable Item ^ Charge Set
"RTN","IBCRHBS",42,0)
 ; IBCR UPLOAD site, Charge Group, x: item ptr ^ effective date ^ inactive date ^ charge ^ modifier (i) ^ base
"RTN","IBCRHBS",43,0)
 ;
"RTN","IBCRHBS",44,0)
4 ;all updates due to a new version are in routine IBCRHBRV
"RTN","IBCRHBS",45,0)
 ;
"RTN","IBCRHBS",46,0)
 ; ==============================================================================================
"RTN","IBCRHBS",47,0)
 ;
"RTN","IBCRHBS1")
0^24^B20644988
"RTN","IBCRHBS1",1,0)
IBCRHBS1 ;ALB/ARH - RATES: UPLOAD HOST FILES (RC 2+) SETUP ; 10-OCT-03
"RTN","IBCRHBS1",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBCRHBS1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRHBS1",4,0)
 ;
"RTN","IBCRHBS1",5,0)
HOSTLOAD(VERS) ; upload national REASONABLE CHARGES files from Host files into ^XTMP
"RTN","IBCRHBS1",6,0)
 ;
"RTN","IBCRHBS1",7,0)
 N X,Y,IBFILES,IBPATH,IBFILE,IBNODE,IBOK S IBOK=0,VERS=+$G(VERS)
"RTN","IBCRHBS1",8,0)
 W @IOF,!,"Upload National Reasonable Charges v"_VERS_" Host Files to Temporary Vista files"
"RTN","IBCRHBS1",9,0)
 W !,"--------------------------------------------------------------------------------",!
"RTN","IBCRHBS1",10,0)
 ;
"RTN","IBCRHBS1",11,0)
 S IBPATH=$$PATH I IBPATH<0 G HLEND
"RTN","IBCRHBS1",12,0)
 ;
"RTN","IBCRHBS1",13,0)
 D FILES^IBCRHBRV(.IBFILES,VERS) ;          list of files to be loaded
"RTN","IBCRHBS1",14,0)
 ;
"RTN","IBCRHBS1",15,0)
 I '$$FNDHOST(.IBFILES,IBPATH) G HLEND ;    all host files found
"RTN","IBCRHBS1",16,0)
 ;
"RTN","IBCRHBS1",17,0)
 I '$$CONT(.IBFILES) G HLEND
"RTN","IBCRHBS1",18,0)
 I '$$CONT1 G HLEND
"RTN","IBCRHBS1",19,0)
 ;
"RTN","IBCRHBS1",20,0)
 W @IOF,!,"Loading National Reasonable Charges v"_VERS_" Host Files into temporary local file"
"RTN","IBCRHBS1",21,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCRHBS1",22,0)
 ;
"RTN","IBCRHBS1",23,0)
 S IBOK=1,IBFILE="" F  S IBFILE=$O(IBFILES(IBFILE)) Q:IBFILE=""  D  I 'IBOK Q
"RTN","IBCRHBS1",24,0)
 . S IBNODE=IBFILES(IBFILE)
"RTN","IBCRHBS1",25,0)
 . I $$LOAD^IBCRHBS2(IBPATH,IBFILE,$P(IBNODE,U,1),$P(IBNODE,U,2),VERS,$P(IBNODE,U,3)) Q
"RTN","IBCRHBS1",26,0)
 . W !!,"   Error while processing host file, can not continue!",!! S IBOK=0
"RTN","IBCRHBS1",27,0)
 ;
"RTN","IBCRHBS1",28,0)
 I +IBOK W !!,"Upload of Reasonable Charges v"_VERS_" Host Files Complete.",!
"RTN","IBCRHBS1",29,0)
 I +$$FNDXTMP(.IBFILES) D
"RTN","IBCRHBS1",30,0)
 . W !!,"The following files were created in XTMP, they will be purged in 2 days:"
"RTN","IBCRHBS1",31,0)
 . W !,"------------------------------------------------------------------------" D DSPXTMP(.IBFILES)
"RTN","IBCRHBS1",32,0)
HLEND Q IBOK
"RTN","IBCRHBS1",33,0)
 ;
"RTN","IBCRHBS1",34,0)
CONT(FILES) ; check for existing files stored in XTMP with same subscript
"RTN","IBCRHBS1",35,0)
 ; returns true if user wants to continue, any existing files are deleted
"RTN","IBCRHBS1",36,0)
 ;
"RTN","IBCRHBS1",37,0)
 N ARR,IBX,IBZ,DIR,DIRUT,DUOUT,X,Y S IBZ=1
"RTN","IBCRHBS1",38,0)
 ;
"RTN","IBCRHBS1",39,0)
 I +$$FNDXTMP(.FILES) D
"RTN","IBCRHBS1",40,0)
 . S IBZ=0 W !!,"These files already exist in XTMP:",!,"----------------------------------"
"RTN","IBCRHBS1",41,0)
 . ;
"RTN","IBCRHBS1",42,0)
 . D DSPXTMP(.FILES,.ARR) Q:$D(ARR)<10  W !
"RTN","IBCRHBS1",43,0)
 . S DIR("?")="Enter either 'Y' or 'N'.  These files use the same name as the new upload would use and therefore must be deleted before the upload can proceed."
"RTN","IBCRHBS1",44,0)
 . S DIR("A")="Delete the above files and continue with the upload",DIR(0)="Y" D ^DIR K DIR
"RTN","IBCRHBS1",45,0)
 . ;
"RTN","IBCRHBS1",46,0)
 . I Y=1 S IBZ=1,IBX="IBCR RC" F  S IBX=$O(^XTMP(IBX)) Q:IBX'["IBCR RC"  K ^XTMP(IBX) W "."
"RTN","IBCRHBS1",47,0)
 ;
"RTN","IBCRHBS1",48,0)
 Q IBZ
"RTN","IBCRHBS1",49,0)
 ;
"RTN","IBCRHBS1",50,0)
CONT1() ; get final OK to start upload, return true if want to continue with upload
"RTN","IBCRHBS1",51,0)
 N IBZ,DIR,DIRUT,DUOUT,X,Y S IBZ=0 W !!
"RTN","IBCRHBS1",52,0)
 S DIR("?")="Enter either 'Y' or 'N'.  Enter 'Y' if you want to load the Reasonable Charges Host files into XTMP."
"RTN","IBCRHBS1",53,0)
 S DIR("A")="Proceed with upload of National Reasonable Charges Host Files now",DIR(0)="Y" D ^DIR K DIR I Y=1 S IBZ=1
"RTN","IBCRHBS1",54,0)
 Q IBZ
"RTN","IBCRHBS1",55,0)
 ;
"RTN","IBCRHBS1",56,0)
PATH() ; return directory or -1
"RTN","IBCRHBS1",57,0)
 N IBPATH,DIR,DIRUT,DUOUT,X,Y S IBPATH=""
"RTN","IBCRHBS1",58,0)
 S DIR("?",1)="Enter the full path specification where the host files may be found"
"RTN","IBCRHBS1",59,0)
 S DIR("?")="or press return for the default directory "_$$PWD^%ZISH
"RTN","IBCRHBS1",60,0)
 S DIR(0)="FO^3:60",DIR("A")="Enter the file path",DIR("B")=$$PWD^%ZISH D ^DIR K DIR
"RTN","IBCRHBS1",61,0)
 S IBPATH=$S($D(DUOUT)!$D(DTOUT):-1,1:Y)
"RTN","IBCRHBS1",62,0)
 Q IBPATH
"RTN","IBCRHBS1",63,0)
 ;
"RTN","IBCRHBS1",64,0)
FNDXTMP(FILES) ; find if any existing files in XTMP, return true if any found
"RTN","IBCRHBS1",65,0)
 N IBFILE,IBXRF,IBNODE,IBZ S IBZ=0
"RTN","IBCRHBS1",66,0)
 ;
"RTN","IBCRHBS1",67,0)
 S IBFILE="" F  S IBFILE=$O(FILES(IBFILE)) Q:IBFILE=""  D  Q:+IBZ
"RTN","IBCRHBS1",68,0)
 . S IBXRF="IBCR RC "_$P(FILES(IBFILE),U,2) Q:$D(^XTMP(IBXRF))=0  S IBZ=1
"RTN","IBCRHBS1",69,0)
 Q IBZ
"RTN","IBCRHBS1",70,0)
 ;
"RTN","IBCRHBS1",71,0)
DSPXTMP(FILES,ARR) ; display any existing files in XTMP, ARR passed by ref can be used to get list of existing file subscripts
"RTN","IBCRHBS1",72,0)
 N IBFILE,IBXRF,IBNODE,IBY K ARR
"RTN","IBCRHBS1",73,0)
 ;
"RTN","IBCRHBS1",74,0)
 S IBFILE="" F  S IBFILE=$O(FILES(IBFILE)) Q:IBFILE=""  D
"RTN","IBCRHBS1",75,0)
 . S IBXRF="IBCR RC "_$P(FILES(IBFILE),U,2) I $D(^XTMP(IBXRF))=0 Q
"RTN","IBCRHBS1",76,0)
 . S ARR(IBXRF)="",IBNODE=$G(^XTMP(IBXRF,0)),IBY=$S($P(IBNODE,U,3)="":IBXRF,1:$P(IBNODE,U,3))
"RTN","IBCRHBS1",77,0)
 . W !,?4,$E(IBY,1,67),?74,$P(IBNODE,U,5)
"RTN","IBCRHBS1",78,0)
 Q
"RTN","IBCRHBS1",79,0)
 ;
"RTN","IBCRHBS1",80,0)
FNDHOST(FILES,IBPATH) ; find and display any Host files available for upload, return true if all required files found
"RTN","IBCRHBS1",81,0)
 N IBX,IBY,IBZ,IBF,IBFILE,X,Y S IBF=1
"RTN","IBCRHBS1",82,0)
 W !!,"Reasonable Charges Host Files found: ",?44,IBPATH,!,"------------------------------------"
"RTN","IBCRHBS1",83,0)
 ;
"RTN","IBCRHBS1",84,0)
 I $O(FILES(""))="" S IBF=0
"RTN","IBCRHBS1",85,0)
 ;
"RTN","IBCRHBS1",86,0)
 S IBFILE="" F  S IBFILE=$O(FILES(IBFILE)) Q:IBFILE=""  D
"RTN","IBCRHBS1",87,0)
 . S IBX(IBFILE)="",IBZ=$$LIST^%ZISH(IBPATH,"IBX","IBY") K IBX,IBY
"RTN","IBCRHBS1",88,0)
 . W !,$P(FILES(IBFILE),U,1),":",?45,IBFILE I 'IBZ W ?57,"*** not found ***" S IBF=0
"RTN","IBCRHBS1",89,0)
 ;
"RTN","IBCRHBS1",90,0)
 I 'IBF W !!,"Can not find all required host files, can not continue!",!!
"RTN","IBCRHBS1",91,0)
 I +IBF W !!,"All required host files found.",!
"RTN","IBCRHBS1",92,0)
 Q IBF
"RTN","IBCRHBS2")
0^25^B3595668
"RTN","IBCRHBS2",1,0)
IBCRHBS2 ;ALB/ARH - RATES: UPLOAD HOST FILES (RC 2+) READ ; 10-OCT-03
"RTN","IBCRHBS2",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBCRHBS2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRHBS2",4,0)
 ;
"RTN","IBCRHBS2",5,0)
 ;LOAD -> A -> SET...
"RTN","IBCRHBS2",6,0)
 ;
"RTN","IBCRHBS2",7,0)
 ;for each file -> open/close and read a line -> parse the line -> save the data to XTMP
"RTN","IBCRHBS2",8,0)
 ;
"RTN","IBCRHBS2",9,0)
 ;
"RTN","IBCRHBS2",10,0)
LOAD(IBPATH,IBFILE,IBNAME,PARSE,VERS,COLUMNS) ; open and read a host file, returns true if file loaded ok
"RTN","IBCRHBS2",11,0)
 N IBOK,IBI,IBFLINE,IBSYS,X,Y S IBOK=1,IBSYS=0,VERS=$G(VERS) I '$G(COLUMNS) S IBOK=0 G LOADQ
"RTN","IBCRHBS2",12,0)
 ;
"RTN","IBCRHBS2",13,0)
 S X=$G(^%ZOSF("OS")) I X["OpenM" S IBSYS=1,X="ERROR^IBCRHBS2",@^%ZOSF("TRAP") ; reset error trap for OpenM
"RTN","IBCRHBS2",14,0)
 ;
"RTN","IBCRHBS2",15,0)
 ;W !,IBNAME,?45,IBFILE ;I PARSE="OC" Q 0 ;  *****  AND IBI ;Q 1
"RTN","IBCRHBS2",16,0)
 ;
"RTN","IBCRHBS2",17,0)
 D OPEN^%ZISH(IBFILE,IBPATH,IBFILE,"R") I POP W !!,?20,"**** Unable to open ",IBPATH,IBFILE,! S IBOK=0 G LOADQ
"RTN","IBCRHBS2",18,0)
 ;
"RTN","IBCRHBS2",19,0)
 U IO(0) W !,IBNAME,?45,IBFILE
"RTN","IBCRHBS2",20,0)
 ;
"RTN","IBCRHBS2",21,0)
 S IBI=0 F  S IBI=IBI+1 U IO R IBFLINE:5 Q:$$ENDF  D @(PARSE_"^IBCRHBS3") I '(IBI#100) U IO(0) W "." ;Q:IBI>100
"RTN","IBCRHBS2",22,0)
 ;
"RTN","IBCRHBS2",23,0)
CLOSE D CLOSE^%ZISH(IBFILE) ;W "  Done, ",(IBI-1)," lines processed."
"RTN","IBCRHBS2",24,0)
 ;
"RTN","IBCRHBS2",25,0)
LOADQ I IBSYS=1 S X="",@^%ZOSF("TRAP")  ; reset error trap for OpenM
"RTN","IBCRHBS2",26,0)
 Q $G(IBOK)
"RTN","IBCRHBS2",27,0)
 ;
"RTN","IBCRHBS2",28,0)
ENDF() N IBX S IBX=1 I $T S IBX=0
"RTN","IBCRHBS2",29,0)
 I $$STATUS^%ZISH S IBX=1
"RTN","IBCRHBS2",30,0)
 Q IBX
"RTN","IBCRHBS2",31,0)
 ;
"RTN","IBCRHBS2",32,0)
ERROR ; process EOF and errors for OpenM
"RTN","IBCRHBS2",33,0)
 N IBERROR S IBERROR=$$EC^%ZOSV
"RTN","IBCRHBS2",34,0)
 I IBERROR["ENDOFFILE" S IBOK=1 G CLOSE
"RTN","IBCRHBS2",35,0)
 U IO(0) W !!,"Error reading file: ",IBERROR,!!
"RTN","IBCRHBS2",36,0)
 D ^%ZTER
"RTN","IBCRHBS2",37,0)
 S IBOK=0
"RTN","IBCRHBS2",38,0)
 G CLOSE
"RTN","IBCRHBS2",39,0)
 Q
"RTN","IBCRHBS3")
0^26^B26475049
"RTN","IBCRHBS3",1,0)
IBCRHBS3 ;ALB/ARH - RATES: UPLOAD HOST FILES (RC 2+) PARSE ; 10-OCT-03
"RTN","IBCRHBS3",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBCRHBS3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRHBS3",4,0)
 ;
"RTN","IBCRHBS3",5,0)
 ; IBFILE, IBFLINE, COLUMNS required and VERS expected on entry
"RTN","IBCRHBS3",6,0)
 ; Parse lines from the Host Files and place them in XTMP.  
"RTN","IBCRHBS3",7,0)
 ; Direct copy of fields, number of fields and placement not changed, but cleaned up (spaces, $, commas removed)
"RTN","IBCRHBS3",8,0)
 ;
"RTN","IBCRHBS3",9,0)
A ; Inpatient Facility DRG Charges:  process a single line, parse out into individual fields and store in XTMP
"RTN","IBCRHBS3",10,0)
 ;
"RTN","IBCRHBS3",11,0)
 N LINE,IBI,IBPIECE,IBITYPE,IBCODE,IBXTMP,IBXIFN S IBXTMP="IBCR RC A" I ('$G(COLUMNS))!($G(IBFLINE)="") Q
"RTN","IBCRHBS3",12,0)
 ;
"RTN","IBCRHBS3",13,0)
 S LINE="" F IBI=1:1:COLUMNS S IBPIECE=$$P(IBFLINE,IBI),IBPIECE=$$STRIP(IBPIECE) S LINE=LINE_IBPIECE_U
"RTN","IBCRHBS3",14,0)
 ;
"RTN","IBCRHBS3",15,0)
 S IBITYPE=$P(LINE,U,2) I IBITYPE'="DRG",IBITYPE'="SNF" Q
"RTN","IBCRHBS3",16,0)
 S IBCODE=$P(LINE,U,1) I IBCODE'?3N Q
"RTN","IBCRHBS3",17,0)
 ;
"RTN","IBCRHBS3",18,0)
 S IBXIFN=$$SET(IBFILE,IBXTMP,LINE)
"RTN","IBCRHBS3",19,0)
 ;
"RTN","IBCRHBS3",20,0)
 Q
"RTN","IBCRHBS3",21,0)
 ;
"RTN","IBCRHBS3",22,0)
B ; Outpatient Facility CPT Charges:  process a single line, parse out into individual fields and store in XTMP
"RTN","IBCRHBS3",23,0)
 ;
"RTN","IBCRHBS3",24,0)
 N LINE,IBI,IBPIECE,IBITYPE,IBCODE,IBXTMP,IBXIFN S IBXTMP="IBCR RC B" I ('$G(COLUMNS))!($G(IBFLINE)="") Q
"RTN","IBCRHBS3",25,0)
 ;
"RTN","IBCRHBS3",26,0)
 S LINE="" F IBI=1:1:COLUMNS S IBPIECE=$$P(IBFLINE,IBI),IBPIECE=$$STRIP(IBPIECE) S LINE=LINE_IBPIECE_U
"RTN","IBCRHBS3",27,0)
 ;
"RTN","IBCRHBS3",28,0)
 S IBITYPE=$P(LINE,U,2) I IBITYPE'="CPT",IBITYPE'="HCPCS",IBITYPE'="PHOSP" Q
"RTN","IBCRHBS3",29,0)
 S IBCODE=$P(LINE,U,1) I IBCODE'?5UN Q
"RTN","IBCRHBS3",30,0)
 ;
"RTN","IBCRHBS3",31,0)
 S IBXIFN=$$SET(IBFILE,IBXTMP,LINE,IBCODE)
"RTN","IBCRHBS3",32,0)
 ;
"RTN","IBCRHBS3",33,0)
 Q
"RTN","IBCRHBS3",34,0)
 ;
"RTN","IBCRHBS3",35,0)
C ; Physician CPT Charges:  process a single line, parse out into individual fields and store in XTMP
"RTN","IBCRHBS3",36,0)
 ;
"RTN","IBCRHBS3",37,0)
 N LINE,IBI,IBPIECE,IBITYPE,IBCODE,IBXTMP,IBXIFN S IBXTMP="IBCR RC C" I ('$G(COLUMNS))!($G(IBFLINE)="") Q
"RTN","IBCRHBS3",38,0)
 ;
"RTN","IBCRHBS3",39,0)
 S LINE="" F IBI=1:1:COLUMNS S IBPIECE=$$P(IBFLINE,IBI),IBPIECE=$$STRIP(IBPIECE) S LINE=LINE_IBPIECE_U
"RTN","IBCRHBS3",40,0)
 ;
"RTN","IBCRHBS3",41,0)
 S IBITYPE=$P(LINE,U,2) I IBITYPE'="CPT",IBITYPE'="HCPCS" Q
"RTN","IBCRHBS3",42,0)
 S IBCODE=$P(LINE,U,1) I IBCODE'?5UN Q
"RTN","IBCRHBS3",43,0)
 ;
"RTN","IBCRHBS3",44,0)
 S IBXIFN=$$SET(IBFILE,IBXTMP,LINE,IBCODE)
"RTN","IBCRHBS3",45,0)
 ;
"RTN","IBCRHBS3",46,0)
 Q
"RTN","IBCRHBS3",47,0)
 ;
"RTN","IBCRHBS3",48,0)
D ; Service Category Codes:  process a single line, parse out into individual fields and store in XTMP
"RTN","IBCRHBS3",49,0)
 ;
"RTN","IBCRHBS3",50,0)
 N LINE,IBI,IBPIECE,IBCODE,IBXTMP,IBXIFN S IBXTMP="IBCR RC D" I ('$G(COLUMNS))!($G(IBFLINE)="") Q
"RTN","IBCRHBS3",51,0)
 ;
"RTN","IBCRHBS3",52,0)
 S LINE="" F IBI=1:1:COLUMNS S IBPIECE=$$P(IBFLINE,IBI),IBPIECE=$$STRIP(IBPIECE) S LINE=LINE_IBPIECE_U
"RTN","IBCRHBS3",53,0)
 ;
"RTN","IBCRHBS3",54,0)
 S IBCODE=$P(LINE,U,1) I 'IBCODE Q
"RTN","IBCRHBS3",55,0)
 ;
"RTN","IBCRHBS3",56,0)
 S IBXIFN=$$SET(IBFILE,IBXTMP,LINE,IBCODE)
"RTN","IBCRHBS3",57,0)
 ;
"RTN","IBCRHBS3",58,0)
 Q
"RTN","IBCRHBS3",59,0)
 ;
"RTN","IBCRHBS3",60,0)
E ; Area Factors:  process a single line, parse out into individual fields and store in XTMP
"RTN","IBCRHBS3",61,0)
 ;
"RTN","IBCRHBS3",62,0)
 N LINE,IBI,IBPIECE,IBZIP,IBXTMP,IBXIFN S IBXTMP="IBCR RC E" I ('$G(COLUMNS))!($G(IBFLINE)="") Q
"RTN","IBCRHBS3",63,0)
 ;
"RTN","IBCRHBS3",64,0)
 S LINE="" F IBI=1:1:COLUMNS S IBPIECE=$$P(IBFLINE,IBI),IBPIECE=$$STRIP(IBPIECE) S LINE=LINE_IBPIECE_U
"RTN","IBCRHBS3",65,0)
 ;
"RTN","IBCRHBS3",66,0)
 S IBZIP=$P(LINE,U,1) I IBZIP'?3N Q
"RTN","IBCRHBS3",67,0)
 ;
"RTN","IBCRHBS3",68,0)
 S IBXIFN=$$SET(IBFILE,IBXTMP,LINE,IBZIP) D SETSITE(IBZIP)
"RTN","IBCRHBS3",69,0)
 ;
"RTN","IBCRHBS3",70,0)
 Q
"RTN","IBCRHBS3",71,0)
 ;
"RTN","IBCRHBS3",72,0)
F ; Zip Codes and Sites:  process a single line, parse out into individual fields and store in XTMP
"RTN","IBCRHBS3",73,0)
 ;
"RTN","IBCRHBS3",74,0)
 N LINE,IBSITE,IBZIP,IBNM,IBSTYPE,IBXTMP,IBXIFN S IBXTMP="IBCR RC F" I ('$G(COLUMNS))!($G(IBFLINE)="") Q
"RTN","IBCRHBS3",75,0)
 ;
"RTN","IBCRHBS3",76,0)
 S IBSITE=$$P(IBFLINE,1),IBSITE=$$STRIP(IBSITE) I IBSITE'?3N0.2UN Q  ; division number
"RTN","IBCRHBS3",77,0)
 S IBNM=$$P(IBFLINE,2) ; facility name
"RTN","IBCRHBS3",78,0)
 S IBZIP=$$P(IBFLINE,3),IBZIP=$$STRIP(IBZIP) I IBZIP'?3N Q  ; 3-digit zip code
"RTN","IBCRHBS3",79,0)
 S IBSTYPE=$$P(IBFLINE,4),IBSTYPE=$$STRIP(IBSTYPE) I 'IBSTYPE Q  ; facility type
"RTN","IBCRHBS3",80,0)
 ;
"RTN","IBCRHBS3",81,0)
 S LINE=IBSITE_U_IBNM_U_IBZIP_U_IBSTYPE
"RTN","IBCRHBS3",82,0)
 ;
"RTN","IBCRHBS3",83,0)
 S IBXIFN=$$SET(IBFILE,IBXTMP,LINE,IBZIP) D SETSITE(IBZIP,IBSITE,IBNM,IBSTYPE)
"RTN","IBCRHBS3",84,0)
 ;
"RTN","IBCRHBS3",85,0)
 Q
"RTN","IBCRHBS3",86,0)
 ;
"RTN","IBCRHBS3",87,0)
 ;
"RTN","IBCRHBS3",88,0)
 ;
"RTN","IBCRHBS3",89,0)
SETHDR(IBFILE,IBXRF1) ; set up header for XTMP file
"RTN","IBCRHBS3",90,0)
 ;
"RTN","IBCRHBS3",91,0)
 N IBX S IBX=IBFILE_" RC v"_$G(VERS)_" Host File Upload, "_$P($$HTE^XLFDT($H,2),":",1,2)_" by "_$P($G(^VA(200,+$G(DUZ),0)),U,1)
"RTN","IBCRHBS3",92,0)
 S ^XTMP(IBXRF1,0)=$$FMADD^XLFDT(DT,2)_U_DT_U_IBX_U_0_U_0
"RTN","IBCRHBS3",93,0)
 I IBXRF1="IBCR RC SITE" S ^XTMP(IBXRF1,"VERSION")=$G(VERS),^XTMP(IBXRF1,"VERSION INACTIVE")=$$VERSEDT^IBCRHBRV($G(VERS))
"RTN","IBCRHBS3",94,0)
 Q
"RTN","IBCRHBS3",95,0)
 ;
"RTN","IBCRHBS3",96,0)
SET(IBFILE,IBXRF1,LINE,ACROSS) ; set data parsed from host file to XTMP
"RTN","IBCRHBS3",97,0)
 N IBX,IBK
"RTN","IBCRHBS3",98,0)
 S IBX=$G(^XTMP(IBXRF1,0)) I IBX="" D SETHDR(IBFILE,IBXRF1)
"RTN","IBCRHBS3",99,0)
 S IBK=+$P(IBX,U,5)+1,$P(^XTMP(IBXRF1,0),U,5)=IBK
"RTN","IBCRHBS3",100,0)
 S ^XTMP(IBXRF1,IBK)=LINE
"RTN","IBCRHBS3",101,0)
 ;
"RTN","IBCRHBS3",102,0)
 I $G(ACROSS)'="" S ^XTMP(IBXRF1,"A",ACROSS,IBK)=""
"RTN","IBCRHBS3",103,0)
 Q IBK
"RTN","IBCRHBS3",104,0)
 ;
"RTN","IBCRHBS3",105,0)
 ;
"RTN","IBCRHBS3",106,0)
SETSITE(ZIP,SITE,NAME,TYPE) ; set up site entries and cross references
"RTN","IBCRHBS3",107,0)
 ; the Area Factor File (E) has entries not associated with a VA site, Site/Zip file (F) only has valid VA sites
"RTN","IBCRHBS3",108,0)
 ; therefore there are many zip codes (E) with no assigned division but that must be available for selection
"RTN","IBCRHBS3",109,0)
 ; these unassigned zip codes are passed in with only Zip defined, 
"RTN","IBCRHBS3",110,0)
 ; a temporary Division Number '9yyXy' and Name 'ZIP Code ZZZ' is created, Type is blank to be set by user
"RTN","IBCRHBS3",111,0)
 ; if the zip is '000' then these are the Nation wide charges and the corresponding Division Number/Name is used
"RTN","IBCRHBS3",112,0)
 N IBXRF1,LINE,IBXIFN
"RTN","IBCRHBS3",113,0)
 ;
"RTN","IBCRHBS3",114,0)
 I ZIP="000" S SITE="999",NAME="NATIONWIDE AVERAGE",TYPE=""
"RTN","IBCRHBS3",115,0)
 I $G(SITE)="" S SITE="9"_$E(ZIP,1,2)_"X"_$E(ZIP,3),NAME="ZIP Code "_ZIP,TYPE=""
"RTN","IBCRHBS3",116,0)
 I $O(^XTMP("IBCR RC SITE","C",SITE_" ",0)) W !!,"Site Error: Dupicate Site Numbers: ",SITE
"RTN","IBCRHBS3",117,0)
 ;
"RTN","IBCRHBS3",118,0)
 S IBXRF1="IBCR RC SITE"
"RTN","IBCRHBS3",119,0)
 S LINE=SITE_U_NAME_U_ZIP_U_TYPE
"RTN","IBCRHBS3",120,0)
 ;
"RTN","IBCRHBS3",121,0)
 S IBXIFN=$$SET(IBXRF1,IBXRF1,LINE)
"RTN","IBCRHBS3",122,0)
 ;
"RTN","IBCRHBS3",123,0)
 I $G(NAME)'="" S ^XTMP(IBXRF1,"B",NAME,IBXIFN)=""
"RTN","IBCRHBS3",124,0)
 I $G(ZIP)'="" S ZIP="ZC "_ZIP S ^XTMP(IBXRF1,"B",ZIP,IBXIFN)=""
"RTN","IBCRHBS3",125,0)
 I $G(SITE)'="" S SITE=SITE_" " S ^XTMP(IBXRF1,"B",SITE,IBXIFN)="",^XTMP(IBXRF1,"C",SITE,IBXIFN)=""
"RTN","IBCRHBS3",126,0)
 ;
"RTN","IBCRHBS3",127,0)
 Q
"RTN","IBCRHBS3",128,0)
 ;
"RTN","IBCRHBS3",129,0)
 ;
"RTN","IBCRHBS3",130,0)
STRIP(IBVAL) ; strip blanks, $, and commas
"RTN","IBCRHBS3",131,0)
 N IBI,IBY,IBX S IBY=""
"RTN","IBCRHBS3",132,0)
 F IBI=1:1:200 S IBX=$E(IBVAL,IBI) Q:IBX=""  I IBX'=" ",IBX'=",",IBX'="$" S IBY=IBY_IBX
"RTN","IBCRHBS3",133,0)
 Q IBY
"RTN","IBCRHBS3",134,0)
 ;
"RTN","IBCRHBS3",135,0)
 ;
"RTN","IBCRHBS3",136,0)
P(LINE,P) ; parse the line and return the piece requested (replaces $P since may be two dilimiters)
"RTN","IBCRHBS3",137,0)
 ; the pieces are delimited by a comma, any piece that includes a comma within the text is surrounded by quotes
"RTN","IBCRHBS3",138,0)
 N I,U1,U2,PC S U1=",",U2="""",PC=""
"RTN","IBCRHBS3",139,0)
 ;
"RTN","IBCRHBS3",140,0)
 F I=1:1:P D
"RTN","IBCRHBS3",141,0)
 . I $E(LINE)=U2 S LINE=$E(LINE,2,9999),PC=$P(LINE,U2,1),LINE=$P(LINE,U2_U1,2,9999) Q
"RTN","IBCRHBS3",142,0)
 . ;
"RTN","IBCRHBS3",143,0)
 . S PC=$P(LINE,U1,1),LINE=$P(LINE,U1,2,9999)
"RTN","IBCRHBS3",144,0)
 ;
"RTN","IBCRHBS3",145,0)
 Q PC
"RTN","IBCRHBS4")
0^27^B61381373
"RTN","IBCRHBS4",1,0)
IBCRHBS4 ;ALB/ARH - RATES: UPLOAD (RC 2+) SELECT SITES ; 10-OCT-03
"RTN","IBCRHBS4",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBCRHBS4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRHBS4",4,0)
 ;
"RTN","IBCRHBS4",5,0)
 ;
"RTN","IBCRHBS4",6,0)
SELSITE() ; select one site to calculate RC charges for
"RTN","IBCRHBS4",7,0)
 ; return: 0 or 'IFN of site in IBCR RC SITE ^ site number ^ site name ^ 3-digit zip ^ type'
"RTN","IBCRHBS4",8,0)
 ;
"RTN","IBCRHBS4",9,0)
 D SETRGZIP^IBCRHBSZ,CHKRGZIP^IBCRHBSZ
"RTN","IBCRHBS4",10,0)
 ;
"RTN","IBCRHBS4",11,0)
 N IBSNAME,IBSELDIV,IBX,IBXIFN,IBMCDV
"RTN","IBCRHBS4",12,0)
 W !!!,"Select Site to calculate Reasonable Charges v"_$$VERSION^IBCRHBRV_" for load into Charge Master"
"RTN","IBCRHBS4",13,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCRHBS4",14,0)
 ;
"RTN","IBCRHBS4",15,0)
SELECT S (IBSELDIV,IBMCDV)=0
"RTN","IBCRHBS4",16,0)
 S IBSNAME=$$ASKNAM I IBSNAME="" G SSQ
"RTN","IBCRHBS4",17,0)
 ;
"RTN","IBCRHBS4",18,0)
 S IBXIFN=$$LSTSITE(IBSNAME) I +IBXIFN'>0 G SELECT
"RTN","IBCRHBS4",19,0)
 S IBSELDIV=$G(^XTMP("IBCR RC SITE",IBXIFN)) I IBSELDIV="" G SELECT
"RTN","IBCRHBS4",20,0)
 S IBSELDIV=IBXIFN_U_IBSELDIV
"RTN","IBCRHBS4",21,0)
 ;
"RTN","IBCRHBS4",22,0)
 I $$DV999(IBSELDIV) S IBSELDIV=$$ASKDV(IBSELDIV) I IBSELDIV="" G SELECT
"RTN","IBCRHBS4",23,0)
 ;
"RTN","IBCRHBS4",24,0)
 I '$$RECHK(IBSELDIV) G SELECT
"RTN","IBCRHBS4",25,0)
 ;
"RTN","IBCRHBS4",26,0)
 S IBX=$P(IBSELDIV,U,2) D MSGSITE^IBCRHBRV(IBX),MSGVERS^IBCRHBRV(IBX),MSGDIV^IBCRHBSZ(IBX)
"RTN","IBCRHBS4",27,0)
 ;
"RTN","IBCRHBS4",28,0)
 I '$$CONT(IBSELDIV) G SELECT
"RTN","IBCRHBS4",29,0)
 ;
"RTN","IBCRHBS4",30,0)
SSQ Q IBSELDIV
"RTN","IBCRHBS4",31,0)
 ;
"RTN","IBCRHBS4",32,0)
ASKNAM() ; ask the user to enter the name of a site/division, return upper case name entered or null
"RTN","IBCRHBS4",33,0)
 N DIR,DIRUT,DUOUT,X,Y,IBX,IBY S IBX=""
"RTN","IBCRHBS4",34,0)
 S DIR("?",1)="All or some divisions whose care is billed from your site may have charges."
"RTN","IBCRHBS4",35,0)
 S DIR("?",2)="Some charges are unique to a single division, others cover multiple divisions."
"RTN","IBCRHBS4",36,0)
 S DIR("?",3)="This may result in multiple sets in the Charge Master."
"RTN","IBCRHBS4",37,0)
 S DIR("?",4)="Enter '??' for a complete list of divisions."
"RTN","IBCRHBS4",38,0)
 S DIR("?",5)="Enter a division number or name for a matching list.",DIR("?",6)=""
"RTN","IBCRHBS4",39,0)
 S DIR("?")="Select a division that will be billed at your site.",DIR("??")="^D LSTALL^IBCRHBS4"
"RTN","IBCRHBS4",40,0)
 S DIR(0)="FO",DIR("A")="Select Division" W !! D ^DIR K DIR S IBX=Y I $D(DIRUT) S IBX=""
"RTN","IBCRHBS4",41,0)
 I IBX'="" S IBX=$$UP^XLFSTR(IBX)
"RTN","IBCRHBS4",42,0)
 Q IBX
"RTN","IBCRHBS4",43,0)
 ;
"RTN","IBCRHBS4",44,0)
CONT(SITE) ; as user if they want to load this division, return 1 if accept division and calculate charges, else 0
"RTN","IBCRHBS4",45,0)
 N DIR,DIRUT,DUOUT,X,Y,IBX S IBX=0
"RTN","IBCRHBS4",46,0)
 W !,?15,$P(SITE,U,2),?27,$P(SITE,U,3),?60,$P(SITE,U,4),?67,$P(SITE,U,5),!
"RTN","IBCRHBS4",47,0)
 S DIR("?")="Enter 'Y' if the care provided at this division is billed at your site and you need this divisions charges loaded on your system."
"RTN","IBCRHBS4",48,0)
 S DIR("A")="Calculate RC v"_$$VERSION^IBCRHBRV_" charges for this division"
"RTN","IBCRHBS4",49,0)
 S DIR(0)="YO" D ^DIR K DIR I Y=1 S IBX=Y
"RTN","IBCRHBS4",50,0)
 Q IBX
"RTN","IBCRHBS4",51,0)
 ;
"RTN","IBCRHBS4",52,0)
LSTALL ; list all sites, user cannot select, nothing returned
"RTN","IBCRHBS4",53,0)
 N IBX,IBCNT,IBEND,IBXIFN,IBNODE,DIR,DIRUT,DUOUT,DTOUT,X,Y S (IBCNT,IBEND)=0 W !
"RTN","IBCRHBS4",54,0)
 ;
"RTN","IBCRHBS4",55,0)
 S IBX="" F  S IBX=$O(^XTMP("IBCR RC SITE","C",IBX))  Q:IBX=""  D  Q:$D(DIRUT)
"RTN","IBCRHBS4",56,0)
 . S IBXIFN="" F  S IBXIFN=$O(^XTMP("IBCR RC SITE","B",IBX,IBXIFN)) Q:'IBXIFN  D  Q:$D(DIRUT)
"RTN","IBCRHBS4",57,0)
 .. S IBNODE=$G(^XTMP("IBCR RC SITE",IBXIFN))
"RTN","IBCRHBS4",58,0)
 .. W !,?10,$P(IBNODE,U,1),?22,$P(IBNODE,U,2),?60,$P(IBNODE,U,3),?67,$P(IBNODE,U,4)
"RTN","IBCRHBS4",59,0)
 .. S IBCNT=IBCNT+1,IBEND=0 I '(IBCNT#21) W ! S DIR(0)="E" D ^DIR K DIR W ! S IBEND=1
"RTN","IBCRHBS4",60,0)
 I 'IBEND,'$D(DIRUT) W ! S DIR(0)="E" D ^DIR K DIR W !
"RTN","IBCRHBS4",61,0)
 Q
"RTN","IBCRHBS4",62,0)
 ;
"RTN","IBCRHBS4",63,0)
LSTSITE(SNAME) ; search, display, selecy from list of sites
"RTN","IBCRHBS4",64,0)
 ; returns 'site IFN in IBCR RC SITE' if one selected, 0 if none selected, -1 if ^
"RTN","IBCRHBS4",65,0)
 ;
"RTN","IBCRHBS4",66,0)
 N IBX,IBL,IBXIFN,IBNODE,IBCNT,IBEND,IBSEL,SELARR,DIR,DIRUT,DUOUT,X,Y S (IBSEL,IBEND,IBCNT)=0 W !
"RTN","IBCRHBS4",67,0)
 ;
"RTN","IBCRHBS4",68,0)
 S IBX=SNAME,IBL=$L(SNAME) I SNAME'="" S IBX=$E(SNAME,1,$L(SNAME)-1)_$C($A($E(SNAME,$L(SNAME)))-1)_"~"
"RTN","IBCRHBS4",69,0)
 ;
"RTN","IBCRHBS4",70,0)
 F  S IBX=$O(^XTMP("IBCR RC SITE","B",IBX))  Q:IBX=""!($E(IBX,1,IBL)'=SNAME)  D  Q:IBSEL'=0
"RTN","IBCRHBS4",71,0)
 . S IBXIFN="" F  S IBXIFN=$O(^XTMP("IBCR RC SITE","B",IBX,IBXIFN)) Q:'IBXIFN  D  Q:IBSEL'=0
"RTN","IBCRHBS4",72,0)
 .. S IBNODE=$G(^XTMP("IBCR RC SITE",IBXIFN))
"RTN","IBCRHBS4",73,0)
 .. S IBCNT=IBCNT+1,SELARR(IBCNT)=IBXIFN
"RTN","IBCRHBS4",74,0)
 .. W !,?4,IBCNT,")",?10,$P(IBNODE,U,1),?22,$P(IBNODE,U,2),?60,$P(IBNODE,U,3),?67,$P(IBNODE,U,4)
"RTN","IBCRHBS4",75,0)
 .. S IBEND=0 I '(IBCNT#21) S IBSEL=$$ASKSEL(IBCNT) S IBEND=1
"RTN","IBCRHBS4",76,0)
 I SNAME'="",IBCNT'>0 W ?40,"??"
"RTN","IBCRHBS4",77,0)
 ;
"RTN","IBCRHBS4",78,0)
 I IBSEL=0,IBCNT>1,'IBEND S IBSEL=$$ASKSEL(IBCNT)
"RTN","IBCRHBS4",79,0)
 I IBSEL=0,IBCNT=1 S IBSEL=1
"RTN","IBCRHBS4",80,0)
 ;
"RTN","IBCRHBS4",81,0)
 I IBSEL>0,$D(SELARR(+IBSEL)) S IBSEL=SELARR(+IBSEL)
"RTN","IBCRHBS4",82,0)
 ;
"RTN","IBCRHBS4",83,0)
 Q IBSEL
"RTN","IBCRHBS4",84,0)
 ;
"RTN","IBCRHBS4",85,0)
ASKSEL(CNT) ; ask user to select from list of sites, returns number selected, 0 if none selected, -1 if ^
"RTN","IBCRHBS4",86,0)
 ;
"RTN","IBCRHBS4",87,0)
 N DIR,DIRUT,DUOUT,DTOUT,X,Y,IBX S IBX=0 W !
"RTN","IBCRHBS4",88,0)
 S DIR("?")="Enter return to continue, enter '^' to exit, or enter the number preceding the site you want to select.  The number may be no greater than "_CNT
"RTN","IBCRHBS4",89,0)
 S DIR(0)="NO^1:"_CNT_":0",DIR("A")="  Press return to continue or select a site" D ^DIR
"RTN","IBCRHBS4",90,0)
 S IBX=$S($D(DUOUT)!$D(DTOUT):-1,+Y>0:+Y,1:0) W !
"RTN","IBCRHBS4",91,0)
 Q IBX
"RTN","IBCRHBS4",92,0)
 ;
"RTN","IBCRHBS4",93,0)
DV999(SITE) ; check if Site is an valid site or a temporary placeholder
"RTN","IBCRHBS4",94,0)
 N IBX S IBX=0 I +$G(SITE) I ($P(SITE,U,2)?1"9".2N.1"X".1N)!($P(SITE,U,5)="") S IBX=1
"RTN","IBCRHBS4",95,0)
 Q IBX
"RTN","IBCRHBS4",96,0)
 ;
"RTN","IBCRHBS4",97,0)
ASKDV(SITE) ; Get new Division number, Name and Type for invalid sites
"RTN","IBCRHBS4",98,0)
 ; return: "" or 'IFN of site in IBCR RC SITE ^ site number ^ site name ^ 3-digit zip ^ type'
"RTN","IBCRHBS4",99,0)
 N IBNDIV,IBNM,IBTYP,IBNEW,IBI,IBX,X,Y,DIR,DIRUT,DUOUT,DTOUT S IBNEW="" I '$G(SITE) G ASKDVQ
"RTN","IBCRHBS4",100,0)
 ;
"RTN","IBCRHBS4",101,0)
 W !!,"--------------------------------------------------------------------------------"
"RTN","IBCRHBS4",102,0)
 W !,"'",$P(SITE,U,2)," - ",$P(SITE,U,3),"' is an invalid site number, you may now enter",!,"the correct information on the site you are loading charges for.",!
"RTN","IBCRHBS4",103,0)
 ;
"RTN","IBCRHBS4",104,0)
 I $P(SITE,U,2)="999" S IBNDIV=$P(SITE,U,2),IBNM=$P(SITE,U,3) G ASKTYP
"RTN","IBCRHBS4",105,0)
 ;
"RTN","IBCRHBS4",106,0)
 S DIR("?")=$P(SITE,U,2)_" is not a valid site number, if you know the correct number for this division you may change it now."
"RTN","IBCRHBS4",107,0)
 S DIR(0)="F^3:7^I X'?3N,X'?3N1.4UN K X",DIR("A")="Site Division Number" D ^DIR K DIR I $D(DIRUT) G ASKDVQ
"RTN","IBCRHBS4",108,0)
 S IBNDIV=Y
"RTN","IBCRHBS4",109,0)
 ;
"RTN","IBCRHBS4",110,0)
 I '$O(^DG(40.8,"C",IBNDIV,0)) W !!,">> ",IBNDIV," is not a valid Medical Center division on your system.",!!
"RTN","IBCRHBS4",111,0)
 ;
"RTN","IBCRHBS4",112,0)
 I $E(IBNDIV)<9 S IBX=$$SITEDV^IBCRHBSZ(IBNDIV) I +IBX S IBNEW=IBX W !!,"**Site exists." G ASKDVQ
"RTN","IBCRHBS4",113,0)
 ;
"RTN","IBCRHBS4",114,0)
 S IBX=$$RGDV^IBCRHBSZ(IBNDIV)
"RTN","IBCRHBS4",115,0)
 I +IBX,+$P(IBX,U,5) S IBNEW=+SITE_U_$P(IBX,U,2,5) W !!,"** Region ",IBNDIV," already exists." G ASKDVQ
"RTN","IBCRHBS4",116,0)
 I +IBX,'$P(IBX,U,5) S IBNDIV=$P(IBX,U,2),IBNM=$P(IBX,U,3) W !!,"** Region ",IBNDIV," already exists." G ASKTYP
"RTN","IBCRHBS4",117,0)
 ;
"RTN","IBCRHBS4",118,0)
 ;
"RTN","IBCRHBS4",119,0)
 S DIR(0)="F^3:25",DIR("A")="Location of Site, City" D ^DIR K DIR G:$D(DIRUT) ASKDVQ  S IBNM=Y
"RTN","IBCRHBS4",120,0)
 S DIR(0)="P^5:AEQMZ",DIR("A")="Location of Site, State" D ^DIR K DIR G:$D(DIRUT) ASKDVQ
"RTN","IBCRHBS4",121,0)
 S IBNM=IBNM_", "_$P(Y(0),U,2)
"RTN","IBCRHBS4",122,0)
 ;
"RTN","IBCRHBS4",123,0)
 ;
"RTN","IBCRHBS4",124,0)
 W !!,"*** IT IS VERY IMPORTANT THAT TYPE OF FACILITY BE SET CORRECTLY"
"RTN","IBCRHBS4",125,0)
 W !,"*** IF THERE IS ANY DOUBT OF THE TYPE OF FACILITY THEN CONTACT THE CBO ",!,?4,"OR ENTER A NOIS BEFORE CONTINUING"
"RTN","IBCRHBS4",126,0)
ASKTYP S DIR("?",1)="If unsure of the correct Type of Facility for the site then STOP, "
"RTN","IBCRHBS4",127,0)
 S DIR("?",2)="contact the CBO or enter a NOIS to get the correct Type of Facility.",DIR("?",3)=" "
"RTN","IBCRHBS4",128,0)
 S DIR("?")="The Type of Facility determines the charges loaded for the site."
"RTN","IBCRHBS4",129,0)
 ;
"RTN","IBCRHBS4",130,0)
 S DIR(0)="S^1:Inpatient Facility (Provider Based);2:Outpatient Facility (Provider Based);3:Freestanding (Non-Provider Based)",DIR("A")="Type of Facility" D ^DIR I $D(DIRUT) G ASKDVQ
"RTN","IBCRHBS4",131,0)
 S IBTYP=Y
"RTN","IBCRHBS4",132,0)
 ;
"RTN","IBCRHBS4",133,0)
 I $P(SITE,U,2)="999" S IBNDIV="999A"_IBTYP
"RTN","IBCRHBS4",134,0)
 ;
"RTN","IBCRHBS4",135,0)
 S IBNEW=$P(SITE,U,1)_U_IBNDIV_U_IBNM_U_$P(SITE,U,4)_U_IBTYP
"RTN","IBCRHBS4",136,0)
 ;
"RTN","IBCRHBS4",137,0)
ASKDVQ W !!,"--------------------------------------------------------------------------------",!
"RTN","IBCRHBS4",138,0)
 Q IBNEW
"RTN","IBCRHBS4",139,0)
 ;
"RTN","IBCRHBS4",140,0)
RECHK(SITE) ; re-check site against existing region, Division number and Type are critical
"RTN","IBCRHBS4",141,0)
 N IBX,IBY,IBOK,DA,DIC,DIE,DR S IBOK=1,SITE=$G(SITE),IBX=$P($G(SITE),U,2),IBY=0
"RTN","IBCRHBS4",142,0)
 I IBX'="" S IBY=$$RGDV^IBCRHBSZ(IBX)
"RTN","IBCRHBS4",143,0)
 ;
"RTN","IBCRHBS4",144,0)
 I +IBY,'$P(IBY,U,5),+$P(SITE,U,5) D  ; needed for cases where region exists but division not in host file
"RTN","IBCRHBS4",145,0)
 . S DR=".03////"_+$P(SITE,U,5),DIE="^IBE(363.31,",DA=+IBY D ^DIE K DIE,DIC,DA,DR S $P(IBY,U,5)=$P(SITE,U,5)
"RTN","IBCRHBS4",146,0)
 ;
"RTN","IBCRHBS4",147,0)
 I +IBY I ($P(SITE,U,2)'=$P(IBY,U,2))!($P(SITE,U,5)'=$P(IBY,U,5)) D
"RTN","IBCRHBS4",148,0)
 . S IBOK=0 W !,"*** Error: Division selected does not match existing Region"
"RTN","IBCRHBS4",149,0)
 . W !,?10,$P(SITE,U,2),?20,$P(SITE,U,3),?55,$P(SITE,U,4),?65,$P(SITE,U,5)
"RTN","IBCRHBS4",150,0)
 . W !,?10,$P(IBY,U,2),?20,$P(IBY,U,3),?55,$P(IBY,U,4),?65,$P(IBY,U,5)
"RTN","IBCRHBS4",151,0)
 ;
"RTN","IBCRHBS4",152,0)
 I ($P(SITE,U,4)="")!('$P(SITE,U,5)) D
"RTN","IBCRHBS4",153,0)
 . S IBOK=0 W !,"** Error: Required data missing (zip or type):"
"RTN","IBCRHBS4",154,0)
 . W !,?10,$P(SITE,U,2),?20,$P(SITE,U,3),?55,$P(SITE,U,4),?65,$P(SITE,U,5)
"RTN","IBCRHBS4",155,0)
 ;
"RTN","IBCRHBS4",156,0)
 I $P(SITE,U,4)'="",'$O(^XTMP("IBCR RC E","A",$P(SITE,U,4),0)) D
"RTN","IBCRHBS4",157,0)
 . S IBOK=0 W !,"** Error: No Area Factors defined for site/zip:"
"RTN","IBCRHBS4",158,0)
 . W !,?10,$P(SITE,U,2),?20,$P(SITE,U,3),?55,$P(SITE,U,4),?65,$P(SITE,U,5)
"RTN","IBCRHBS4",159,0)
 Q IBOK
"RTN","IBCRHBS5")
0^28^B8928529
"RTN","IBCRHBS5",1,0)
IBCRHBS5 ;ALB/ARH - RATES: UPLOAD (RC 2+) CALCULATIONS DRIVER ; 10-OCT-03
"RTN","IBCRHBS5",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBCRHBS5",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRHBS5",4,0)
 ;
"RTN","IBCRHBS5",5,0)
CALCRC(SITE) ; calculate a sites RC charges, create XTMP file that can be loaded into CM
"RTN","IBCRHBS5",6,0)
 ; input:  IFN of site in IBCR RC SITE ^ site number ^ site name ^ 3-digit zip ^ type
"RTN","IBCRHBS5",7,0)
 ;
"RTN","IBCRHBS5",8,0)
 N IBX,IBSITE,IBRG Q:'$G(SITE)  S IBSITE=$P(SITE,U,2)_" "_$P(SITE,U,3) K ^TMP($J,"IBCR UPLOAD FS PROF")
"RTN","IBCRHBS5",9,0)
 I '$D(^XTMP("IBCR RC SITE",+SITE))!(IBSITE="")!($P(SITE,U,4)'?3N)!('$P(SITE,U,5)) W !!,"Site incompletely defined in upload, can not continue!" Q
"RTN","IBCRHBS5",10,0)
 W @IOF,!,"Calculating Reasonable Charges v"_$$VERSION^IBCRHBRV_" for "_IBSITE_":"
"RTN","IBCRHBS5",11,0)
 W !,"-------------------------------------------------------------------------------"
"RTN","IBCRHBS5",12,0)
 ;
"RTN","IBCRHBS5",13,0)
 I '$$CONT("RC "_IBSITE) Q
"RTN","IBCRHBS5",14,0)
 ;
"RTN","IBCRHBS5",15,0)
 S IBXRF1="IBCR UPLOAD RC "_$P(SITE,U,2)_" "_$P(SITE,U,3) K ^XTMP(IBXRF1)
"RTN","IBCRHBS5",16,0)
 ;
"RTN","IBCRHBS5",17,0)
 ;
"RTN","IBCRHBS5",18,0)
 S TYPE=$P(SITE,U,5) Q:'TYPE
"RTN","IBCRHBS5",19,0)
 ;
"RTN","IBCRHBS5",20,0)
 I TYPE=1 D
"RTN","IBCRHBS5",21,0)
 . D INPT^IBCRHBS6(SITE,IBXRF1)
"RTN","IBCRHBS5",22,0)
 . D OPT^IBCRHBS6(SITE,IBXRF1)
"RTN","IBCRHBS5",23,0)
 . D A^IBCRHBS7(SITE,IBXRF1)
"RTN","IBCRHBS5",24,0)
 . D B^IBCRHBS7(SITE,IBXRF1)
"RTN","IBCRHBS5",25,0)
 . D C^IBCRHBS7(SITE,IBXRF1)
"RTN","IBCRHBS5",26,0)
 ;
"RTN","IBCRHBS5",27,0)
 I TYPE=2 D
"RTN","IBCRHBS5",28,0)
 . D OPT^IBCRHBS6(SITE,IBXRF1)
"RTN","IBCRHBS5",29,0)
 . D B^IBCRHBS7(SITE,IBXRF1)
"RTN","IBCRHBS5",30,0)
 . D C^IBCRHBS7(SITE,IBXRF1)
"RTN","IBCRHBS5",31,0)
 ;
"RTN","IBCRHBS5",32,0)
 I TYPE=3 D
"RTN","IBCRHBS5",33,0)
 . D FREE^IBCRHBS6(SITE,IBXRF1)
"RTN","IBCRHBS5",34,0)
 . D B^IBCRHBS7(SITE,IBXRF1)
"RTN","IBCRHBS5",35,0)
 . D C^IBCRHBS7(SITE,IBXRF1)
"RTN","IBCRHBS5",36,0)
 . D FA^IBCRHBS7(SITE,IBXRF1)
"RTN","IBCRHBS5",37,0)
 ;
"RTN","IBCRHBS5",38,0)
 ;
"RTN","IBCRHBS5",39,0)
 W !!,"Done.",!!,"The following files were created, they will be purged in 2 days:" D DISP1^IBCRHU1("IBCR UPLOAD RC "_IBSITE)
"RTN","IBCRHBS5",40,0)
 ;
"RTN","IBCRHBS5",41,0)
 K ^TMP($J,"IBCR UPLOAD FS PROF")
"RTN","IBCRHBS5",42,0)
 Q
"RTN","IBCRHBS5",43,0)
 ;
"RTN","IBCRHBS5",44,0)
CONT(SITE) ; check for existing files stored in XTMP with same subscript
"RTN","IBCRHBS5",45,0)
 ; returns true if user wants to continue, any existing files are deleted, 0 otherwise
"RTN","IBCRHBS5",46,0)
 N ARR,IBX,IBY,IBZ,DIR,DIRUT,DUOUT,X,Y S ARR=0,IBZ=1
"RTN","IBCRHBS5",47,0)
 ;
"RTN","IBCRHBS5",48,0)
 D DISP1^IBCRHU1("IBCR UPLOAD "_$G(SITE),.ARR)
"RTN","IBCRHBS5",49,0)
 ;
"RTN","IBCRHBS5",50,0)
 I +ARR S IBZ=0 D
"RTN","IBCRHBS5",51,0)
 . W !!,"The above files already exist in XTMP." S DIR("?")="Enter either 'Y' or 'N'.  This files use the same name as the new upload would use and therefore must be deleted before the upload can proceed."
"RTN","IBCRHBS5",52,0)
 . S DIR("A")="Delete the above files and continue with upload",DIR(0)="Y" D ^DIR K DIR
"RTN","IBCRHBS5",53,0)
 . ;
"RTN","IBCRHBS5",54,0)
 . I Y=1 S IBZ=1,IBX="" F  S IBX=$O(ARR(IBX)) Q:IBX=""  K ^XTMP(IBX) W "."
"RTN","IBCRHBS5",55,0)
 ;
"RTN","IBCRHBS5",56,0)
 Q IBZ
"RTN","IBCRHBS6")
0^29^B45177259
"RTN","IBCRHBS6",1,0)
IBCRHBS6 ;ALB/ARH - RATES: UPLOAD (RC 2+) CALCULATIONS SETUP ; 10-OCT-03
"RTN","IBCRHBS6",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBCRHBS6",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRHBS6",4,0)
 ;
"RTN","IBCRHBS6",5,0)
INPT(IBSITE,IBXRF1) ; Create Charge Sets for Inpatient and SNF Charges
"RTN","IBCRHBS6",6,0)
 N IBRG,IBDIVN,IBEVNT,IBBS,TYPE
"RTN","IBCRHBS6",7,0)
 W !,$P(IBSITE,U,2)," ",$P(IBSITE,U,3)," - Inpatient and SNF Charges"
"RTN","IBCRHBS6",8,0)
 ;
"RTN","IBCRHBS6",9,0)
 ; set billing region
"RTN","IBCRHBS6",10,0)
 S IBRG=$$RG^IBCRHU2("RC "_$P(IBSITE,U,2)_" - "_$P(IBSITE,U,3),$P(IBSITE,U,2),$P(IBSITE,U,4),$P(IBSITE,U,5))
"RTN","IBCRHBS6",11,0)
 S IBRG=$P(IBRG,U,2),IBDIVN=$P(IBSITE,U,2)
"RTN","IBCRHBS6",12,0)
 ;
"RTN","IBCRHBS6",13,0)
 S TYPE=$P(IBSITE,U,5) Q:TYPE'=1
"RTN","IBCRHBS6",14,0)
 ;
"RTN","IBCRHBS6",15,0)
 ;
"RTN","IBCRHBS6",16,0)
 ; Inpatient Facility Per Diem Charges from Table A (DRG Based)
"RTN","IBCRHBS6",17,0)
 S IBEVNT="INPATIENT DRG",IBBS="GENERAL MEDICAL CARE" ; Inpatient Standard DRG Charges
"RTN","IBCRHBS6",18,0)
 D SETUP(IBXRF1,"Inpt PD R&B","RC-INPT R&B","RC INPATIENT FACILITY",IBDIVN,4,IBEVNT,IBRG,"INST",101,IBBS)
"RTN","IBCRHBS6",19,0)
 D SETUP(IBXRF1,"Inpt PD Anc","RC-INPT ANC","RC INPATIENT FACILITY",IBDIVN,4,IBEVNT,IBRG,"INST",240,IBBS)
"RTN","IBCRHBS6",20,0)
 ;
"RTN","IBCRHBS6",21,0)
 S IBEVNT="INPATIENT DRG",IBBS="ICU" ; Inpatient ICU DRG Charges
"RTN","IBCRHBS6",22,0)
 D SETUP(IBXRF1,"Inpt PD R&B ICU","RC-INPT R&B ICU","RC INPATIENT FACILITY",IBDIVN,4,IBEVNT,IBRG,"INST",200,IBBS)
"RTN","IBCRHBS6",23,0)
 D SETUP(IBXRF1,"Inpt PD Anc ICU","RC-INPT ANC ICU","RC INPATIENT FACILITY",IBDIVN,4,IBEVNT,IBRG,"INST",240,IBBS)
"RTN","IBCRHBS6",24,0)
 ;
"RTN","IBCRHBS6",25,0)
 S IBEVNT="INPATIENT BEDSECTION STAY",IBBS="SKILLED NURSING/SUB-ACUTE CARE" ; Inpatient SNF Charges
"RTN","IBCRHBS6",26,0)
 D SETUP(IBXRF1,"SNF PD INC","RC-SNF INC","RC FACILITY PER DIEM",IBDIVN,1,IBEVNT,IBRG,"INST",101,IBBS)
"RTN","IBCRHBS6",27,0)
 ;
"RTN","IBCRHBS6",28,0)
 ;
"RTN","IBCRHBS6",29,0)
 ; Inpatient Facility Charges from Table B (CPT Based)
"RTN","IBCRHBS6",30,0)
 S IBEVNT="PROCEDURE",IBBS="GENERAL MEDICAL CARE" ; Inpatient Facility Charges
"RTN","IBCRHBS6",31,0)
 D SETUP(IBXRF1,"Inpt Fac 1","RC-INPT FAC PR","RC FACILITY PR",IBDIVN,2,IBEVNT,IBRG,"INST",240,IBBS)
"RTN","IBCRHBS6",32,0)
 D SETUP(IBXRF1,"Inpt Fac 2","RC-INPT FAC HR","RC FACILITY HR",IBDIVN,2,IBEVNT,IBRG,"INST",240,IBBS)
"RTN","IBCRHBS6",33,0)
 D SETUP(IBXRF1,"Inpt Fac 4","RC-INPT FAC ML","RC FACILITY ML",IBDIVN,2,IBEVNT,IBRG,"INST",240,IBBS)
"RTN","IBCRHBS6",34,0)
 ;
"RTN","IBCRHBS6",35,0)
 S IBEVNT="PROCEDURE",IBBS="SKILLED NURSING/SUB-ACUTE CARE" ; SNF Facility Charges
"RTN","IBCRHBS6",36,0)
 D SETUP(IBXRF1,"SNF Fac 1","RC-SNF FAC PR","RC FACILITY PR",IBDIVN,2,IBEVNT,IBRG,"INST",240,IBBS)
"RTN","IBCRHBS6",37,0)
 D SETUP(IBXRF1,"SNF Fac 2","RC-SNF FAC HR","RC FACILITY HR",IBDIVN,2,IBEVNT,IBRG,"INST",240,IBBS)
"RTN","IBCRHBS6",38,0)
 D SETUP(IBXRF1,"SNF Fac 4","RC-SNF FAC ML","RC FACILITY ML",IBDIVN,2,IBEVNT,IBRG,"INST",240,IBBS)
"RTN","IBCRHBS6",39,0)
 ;
"RTN","IBCRHBS6",40,0)
 ;
"RTN","IBCRHBS6",41,0)
 ; Inpatient Facility Charges from Table C (CPT Based)
"RTN","IBCRHBS6",42,0)
 S IBEVNT="PROCEDURE",IBBS="GENERAL MEDICAL CARE" ; Inpatient Facility CPT Charges
"RTN","IBCRHBS6",43,0)
 D SETUP(IBXRF1,"Inpt Fac/Phys 1","RC-INPT FAC PR","RC FACILITY PR",IBDIVN,2,IBEVNT,IBRG,"INST",240,IBBS)
"RTN","IBCRHBS6",44,0)
 ;
"RTN","IBCRHBS6",45,0)
 S IBEVNT="PROCEDURE",IBBS="SKILLED NURSING/SUB-ACUTE CARE" ; SNF Facility CPT Charges
"RTN","IBCRHBS6",46,0)
 D SETUP(IBXRF1,"SNF Fac/Phys 1","RC-SNF FAC PR","RC FACILITY PR",IBDIVN,2,IBEVNT,IBRG,"INST",240,IBBS)
"RTN","IBCRHBS6",47,0)
 ;
"RTN","IBCRHBS6",48,0)
 ;
"RTN","IBCRHBS6",49,0)
 ; Inpatient Physician Charges from Table C (CPT Based)
"RTN","IBCRHBS6",50,0)
 S IBEVNT="PROCEDURE",IBBS="GENERAL MEDICAL CARE" ; Inpatient Professional CPT Charges
"RTN","IBCRHBS6",51,0)
 D SETUP(IBXRF1,"Inpt Phys 1","RC-PHYSICIAN INPT PR","RC PHYSICIAN PR",IBDIVN,2,IBEVNT,IBRG,"PROF",960,IBBS)
"RTN","IBCRHBS6",52,0)
 D SETUP(IBXRF1,"Inpt Phys 3","RC-PHYSICIAN INPT MN","RC PHYSICIAN MN",IBDIVN,2,IBEVNT,IBRG,"PROF",960,IBBS)
"RTN","IBCRHBS6",53,0)
 ;
"RTN","IBCRHBS6",54,0)
 S IBEVNT="PROCEDURE",IBBS="SKILLED NURSING/SUB-ACUTE CARE" ; SNF Professional CPT Charges
"RTN","IBCRHBS6",55,0)
 D SETUP(IBXRF1,"SNF Phys 1","RC-PHYSICIAN SNF PR","RC PHYSICIAN PR",IBDIVN,2,IBEVNT,IBRG,"PROF",960,IBBS)
"RTN","IBCRHBS6",56,0)
 D SETUP(IBXRF1,"SNF Phys 3","RC-PHYSICIAN SNF MN","RC PHYSICIAN MN",IBDIVN,2,IBEVNT,IBRG,"PROF",960,IBBS)
"RTN","IBCRHBS6",57,0)
 ;
"RTN","IBCRHBS6",58,0)
 Q
"RTN","IBCRHBS6",59,0)
 ;
"RTN","IBCRHBS6",60,0)
 ;
"RTN","IBCRHBS6",61,0)
OPT(IBSITE,IBXRF1) ; Create Charge Sets for Outpatient Facilities (CPT based and Partial Hospitalization)
"RTN","IBCRHBS6",62,0)
 N IBRG,IBDIVN,IBEVNT,IBBS,TYPE
"RTN","IBCRHBS6",63,0)
 W !,$P(IBSITE,U,2)," ",$P(IBSITE,U,3)," - Outpatient Charges"
"RTN","IBCRHBS6",64,0)
 ;
"RTN","IBCRHBS6",65,0)
 ; set billing region
"RTN","IBCRHBS6",66,0)
 S IBRG=$$RG^IBCRHU2("RC "_$P(IBSITE,U,2)_" - "_$P(IBSITE,U,3),$P(IBSITE,U,2),$P(IBSITE,U,4),$P(IBSITE,U,5))
"RTN","IBCRHBS6",67,0)
 S IBRG=$P(IBRG,U,2),IBDIVN=$P(IBSITE,U,2)
"RTN","IBCRHBS6",68,0)
 ;
"RTN","IBCRHBS6",69,0)
 S TYPE=$P(IBSITE,U,5) Q:TYPE'<3
"RTN","IBCRHBS6",70,0)
 ;
"RTN","IBCRHBS6",71,0)
 ;
"RTN","IBCRHBS6",72,0)
 ; Outpatient Facility Charges from Table B (CPT Based)
"RTN","IBCRHBS6",73,0)
 S IBEVNT="PROCEDURE",IBBS="OUTPATIENT VISIT" ; Outpatient Facility CPT Charges
"RTN","IBCRHBS6",74,0)
 D SETUP(IBXRF1,"Opt Fac 1","RC-OPT FAC PR","RC FACILITY PR",IBDIVN,2,IBEVNT,IBRG,"INST",510,IBBS)
"RTN","IBCRHBS6",75,0)
 D SETUP(IBXRF1,"Opt Fac 2","RC-OPT FAC HR","RC FACILITY HR",IBDIVN,2,IBEVNT,IBRG,"INST",510,IBBS)
"RTN","IBCRHBS6",76,0)
 D SETUP(IBXRF1,"Opt Fac 4","RC-OPT FAC ML","RC FACILITY ML",IBDIVN,2,IBEVNT,IBRG,"INST",510,IBBS)
"RTN","IBCRHBS6",77,0)
 ;
"RTN","IBCRHBS6",78,0)
 S IBEVNT="UNASSOCIATED",IBBS="PARTIAL HOSPITALIZATION" ; Partial Hospitalization Facility Per Diem Charge
"RTN","IBCRHBS6",79,0)
 D SETUP(IBXRF1,"Opt PD PHosp","RC-OPT MISC","RC MISCELLANEOUS",IBDIVN,9,IBEVNT,IBRG,"INST",912,IBBS)
"RTN","IBCRHBS6",80,0)
 ;
"RTN","IBCRHBS6",81,0)
 ;
"RTN","IBCRHBS6",82,0)
 ; Outpatient Facility Charges from Table C (CPT Based)
"RTN","IBCRHBS6",83,0)
 S IBEVNT="PROCEDURE",IBBS="OUTPATIENT VISIT" ; Outpatient Facility CPT Charges
"RTN","IBCRHBS6",84,0)
 D SETUP(IBXRF1,"Opt Fac/Phys 1","RC-OPT FAC PR","RC FACILITY PR",IBDIVN,2,IBEVNT,IBRG,"INST",510,IBBS)
"RTN","IBCRHBS6",85,0)
 ;
"RTN","IBCRHBS6",86,0)
 ;
"RTN","IBCRHBS6",87,0)
 ; Outpatient Physician Charges from Table C (CPT Based)
"RTN","IBCRHBS6",88,0)
 S IBEVNT="PROCEDURE",IBBS="OUTPATIENT VISIT" ; Outpatient Professional CPT Charges
"RTN","IBCRHBS6",89,0)
 D SETUP(IBXRF1,"Opt Phys 1","RC-PHYSICIAN OPT PR","RC PHYSICIAN PR",IBDIVN,2,IBEVNT,IBRG,"PROF",510,IBBS)
"RTN","IBCRHBS6",90,0)
 D SETUP(IBXRF1,"Opt Phys 3","RC-PHYSICIAN OPT MN","RC PHYSICIAN MN",IBDIVN,2,IBEVNT,IBRG,"PROF",510,IBBS)
"RTN","IBCRHBS6",91,0)
 ;
"RTN","IBCRHBS6",92,0)
 Q
"RTN","IBCRHBS6",93,0)
 ;
"RTN","IBCRHBS6",94,0)
 ;
"RTN","IBCRHBS6",95,0)
FREE(IBSITE,IBXRF1) ; Create Charge Sets for Freestanding Facilities
"RTN","IBCRHBS6",96,0)
 N IBRG,IBDIVN,IBEVNT,IBBS,TYPE
"RTN","IBCRHBS6",97,0)
 W !,$P(IBSITE,U,2)," ",$P(IBSITE,U,3)," - Freestanding Charges"
"RTN","IBCRHBS6",98,0)
 ;
"RTN","IBCRHBS6",99,0)
 ; set billing region
"RTN","IBCRHBS6",100,0)
 S IBRG=$$RG^IBCRHU2("RC "_$P(IBSITE,U,2)_" - "_$P(IBSITE,U,3),$P(IBSITE,U,2),$P(IBSITE,U,4),$P(IBSITE,U,5))
"RTN","IBCRHBS6",101,0)
 S IBRG=$P(IBRG,U,2),IBDIVN=$P(IBSITE,U,2)
"RTN","IBCRHBS6",102,0)
 ;
"RTN","IBCRHBS6",103,0)
 S TYPE=$P(IBSITE,U,5) Q:TYPE'=3
"RTN","IBCRHBS6",104,0)
 ;
"RTN","IBCRHBS6",105,0)
 ;
"RTN","IBCRHBS6",106,0)
 ; Freestanding Physician Charges from Table C (CPT Based)
"RTN","IBCRHBS6",107,0)
 S IBEVNT="PROCEDURE",IBBS="OUTPATIENT VISIT" ; Freestanding Professional CPT Charges
"RTN","IBCRHBS6",108,0)
 D SETUP(IBXRF1,"FS Phys 1","RC-PHYSICIAN FS PR","RC PHYSICIAN PR",IBDIVN,2,IBEVNT,IBRG,"PROF",510,IBBS)
"RTN","IBCRHBS6",109,0)
 D SETUP(IBXRF1,"FS Phys 3","RC-PHYSICIAN FS MN","RC PHYSICIAN MN",IBDIVN,2,IBEVNT,IBRG,"PROF",510,IBBS)
"RTN","IBCRHBS6",110,0)
 ;
"RTN","IBCRHBS6",111,0)
 ;
"RTN","IBCRHBS6",112,0)
 ; Freestanding Physician Charges from Table B (CPT Based)
"RTN","IBCRHBS6",113,0)
 S IBEVNT="PROCEDURE",IBBS="OUTPATIENT VISIT" ; Freestanding Professional CPT Charges
"RTN","IBCRHBS6",114,0)
 D SETUP(IBXRF1,"FS Phys/Opt 1","RC-PHYSICIAN FS PR","RC PHYSICIAN PR",IBDIVN,2,IBEVNT,IBRG,"PROF",510,IBBS)
"RTN","IBCRHBS6",115,0)
 D SETUP(IBXRF1,"FS Phys/Opt 4","RC-PHYSICIAN FS ML","RC PHYSICIAN ML",IBDIVN,2,IBEVNT,IBRG,"PROF",510,IBBS)
"RTN","IBCRHBS6",116,0)
 D SETUP(IBXRF1,"FS Phys/Opt TC 1","RC-PHYSICIAN FS PR","RC PHYSICIAN PR",IBDIVN,2,IBEVNT,IBRG,"PROF",510,IBBS)
"RTN","IBCRHBS6",117,0)
 ;
"RTN","IBCRHBS6",118,0)
 ;
"RTN","IBCRHBS6",119,0)
 ; Freestanding Physician Global Charges from Table C (CPT Based, sum of TC and 26)
"RTN","IBCRHBS6",120,0)
 S IBEVNT="PROCEDURE",IBBS="OUTPATIENT VISIT" ; Freestanding Professional CPT Charges
"RTN","IBCRHBS6",121,0)
 D SETUP(IBXRF1,"FS Phys/Add 00 1","RC-PHYSICIAN FS PR","RC PHYSICIAN PR",IBDIVN,2,IBEVNT,IBRG,"PROF",510,IBBS)
"RTN","IBCRHBS6",122,0)
 ;
"RTN","IBCRHBS6",123,0)
 Q
"RTN","IBCRHBS6",124,0)
 ;
"RTN","IBCRHBS6",125,0)
 ;
"RTN","IBCRHBS6",126,0)
SETUP(IBXRF1,IBXRF2,CSNM,BRATE,DIVN,BITEM,EVNT,RG,CHGTYP,RVCD,BS) ; Set up XTMP array and Charge Set for Charges
"RTN","IBCRHBS6",127,0)
 N IBCS
"RTN","IBCRHBS6",128,0)
 ;
"RTN","IBCRHBS6",129,0)
 S IBCS=$$CS^IBCRHU2(CSNM_" "_DIVN,BRATE,EVNT,RG,CHGTYP,RVCD,BS)
"RTN","IBCRHBS6",130,0)
 ;
"RTN","IBCRHBS6",131,0)
 D SETHDR(IBXRF1,IBXRF2,IBCS,BITEM)
"RTN","IBCRHBS6",132,0)
 ;
"RTN","IBCRHBS6",133,0)
 Q
"RTN","IBCRHBS6",134,0)
 ;
"RTN","IBCRHBS6",135,0)
SETHDR(IBXRF1,IBXRF2,CS,BITYPE) ; set up header for XTMP file
"RTN","IBCRHBS6",136,0)
 N IBX
"RTN","IBCRHBS6",137,0)
 S IBX="IB Upload RC v"_$$VERSION^IBCRHBRV_" "_$P(IBXRF1,"UPLOAD RC ",2)_", "_$P($$HTE^XLFDT($H,2),":",1,2)_" by "_$P($G(^VA(200,+$G(DUZ),0)),U,1)
"RTN","IBCRHBS6",138,0)
 S ^XTMP(IBXRF1,0)=$$FMADD^XLFDT(DT,2)_U_DT_U_IBX
"RTN","IBCRHBS6",139,0)
 ;
"RTN","IBCRHBS6",140,0)
 S ^XTMP(IBXRF1,IBXRF2)=0_U_$G(BITYPE)_U_$G(CS)
"RTN","IBCRHBS6",141,0)
 Q
"RTN","IBCRHBS7")
0^30^B42517043
"RTN","IBCRHBS7",1,0)
IBCRHBS7 ;ALB/ARH - RATES: UPLOAD (RC 2+) CALCULATIONS SITE ; 10-OCT-03
"RTN","IBCRHBS7",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBCRHBS7",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRHBS7",4,0)
 ;
"RTN","IBCRHBS7",5,0)
A(SITE,IBXRF1) ; use Inpatient Facility National Rates to calculate Site Specific Rates
"RTN","IBCRHBS7",6,0)
 N IBXTMPC,IBI,IBLINE,IBDRG,IBEFF,IBINA,IBCT,IBCHRG
"RTN","IBCRHBS7",7,0)
 ;
"RTN","IBCRHBS7",8,0)
 I $P(SITE,U,5)'=1 Q
"RTN","IBCRHBS7",9,0)
 ;
"RTN","IBCRHBS7",10,0)
 S IBXTMPC="IBCR RC A"
"RTN","IBCRHBS7",11,0)
 ;
"RTN","IBCRHBS7",12,0)
 S IBI=0 F  S IBI=$O(^XTMP(IBXTMPC,IBI)) Q:'IBI  D  I '(IBI#100) W "."
"RTN","IBCRHBS7",13,0)
 . S IBLINE=$G(^XTMP(IBXTMPC,IBI)) Q:IBLINE=""
"RTN","IBCRHBS7",14,0)
 . ;
"RTN","IBCRHBS7",15,0)
 . S IBDRG="DRG"_+$P(IBLINE,U,1),IBEFF=$P(IBLINE,U,9),IBINA=$P(IBLINE,U,10),IBCT=$P(IBLINE,U,2)
"RTN","IBCRHBS7",16,0)
 . ;
"RTN","IBCRHBS7",17,0)
 . ;
"RTN","IBCRHBS7",18,0)
 . I IBCT="SNF" D  Q
"RTN","IBCRHBS7",19,0)
 .. S IBCHRG=$$ISNF^IBCRHBS8(SITE,IBLINE)
"RTN","IBCRHBS7",20,0)
 .. D SET(IBXRF1,"SNF PD INC","SKILLED NURSING CARE",IBEFF,IBINA,IBCHRG,"")
"RTN","IBCRHBS7",21,0)
 .. D SET(IBXRF1,"SNF PD INC","SUB-ACUTE CARE",IBEFF,IBINA,IBCHRG,"")
"RTN","IBCRHBS7",22,0)
 . ;
"RTN","IBCRHBS7",23,0)
 . I IBCT="DRG" D  Q
"RTN","IBCRHBS7",24,0)
 .. S IBCHRG=$$ISR^IBCRHBS8(SITE,IBLINE) D SET(IBXRF1,"Inpt PD R&B",IBDRG,IBEFF,IBINA,IBCHRG,"")
"RTN","IBCRHBS7",25,0)
 .. S IBCHRG=$$ISA^IBCRHBS8(SITE,IBLINE) D SET(IBXRF1,"Inpt PD Anc",IBDRG,IBEFF,IBINA,IBCHRG,"")
"RTN","IBCRHBS7",26,0)
 .. S IBCHRG=$$IIR^IBCRHBS8(SITE,IBLINE) D SET(IBXRF1,"Inpt PD R&B ICU",IBDRG,IBEFF,IBINA,IBCHRG,"")
"RTN","IBCRHBS7",27,0)
 .. S IBCHRG=$$IIA^IBCRHBS8(SITE,IBLINE) D SET(IBXRF1,"Inpt PD Anc ICU",IBDRG,IBEFF,IBINA,IBCHRG,"")
"RTN","IBCRHBS7",28,0)
 Q
"RTN","IBCRHBS7",29,0)
 ;
"RTN","IBCRHBS7",30,0)
 ;
"RTN","IBCRHBS7",31,0)
B(SITE,IBXRF1) ; use Outpatient Facility National Rates to calculate Site Specific Rates
"RTN","IBCRHBS7",32,0)
 N IBXTMPC,TYPE,IBI,IBLINE,IBCPT,IBEFF,IBINA,IBCHRG,IBUT,IBFAC
"RTN","IBCRHBS7",33,0)
 ;
"RTN","IBCRHBS7",34,0)
 S TYPE=$P(SITE,U,5) Q:'TYPE
"RTN","IBCRHBS7",35,0)
 ;
"RTN","IBCRHBS7",36,0)
 S IBXTMPC="IBCR RC B"
"RTN","IBCRHBS7",37,0)
 ;
"RTN","IBCRHBS7",38,0)
 S IBI=0 F  S IBI=$O(^XTMP(IBXTMPC,IBI)) Q:'IBI  D  I '(IBI#100) W "."
"RTN","IBCRHBS7",39,0)
 . S IBLINE=$G(^XTMP(IBXTMPC,IBI)) Q:IBLINE=""
"RTN","IBCRHBS7",40,0)
 . ;
"RTN","IBCRHBS7",41,0)
 . S IBCPT=$P(IBLINE,U,1),IBEFF=$P(IBLINE,U,13),IBINA=$P(IBLINE,U,14),IBUT=$P(IBLINE,U,10)
"RTN","IBCRHBS7",42,0)
 . ;
"RTN","IBCRHBS7",43,0)
 . S IBCHRG=$$FAC^IBCRHBS8(SITE,IBLINE)
"RTN","IBCRHBS7",44,0)
 . ;
"RTN","IBCRHBS7",45,0)
 . ;
"RTN","IBCRHBS7",46,0)
 . I $P(IBLINE,U,2)="PHOSP" D  Q  ; Partial Hospitalization
"RTN","IBCRHBS7",47,0)
 .. I TYPE<3 D SET(IBXRF1,"Opt PD PHosp","PARTIAL HOSPITALIZATION",IBEFF,IBINA,IBCHRG,"")
"RTN","IBCRHBS7",48,0)
 . ;
"RTN","IBCRHBS7",49,0)
 . I TYPE=1 D  ; Inpatient/SNF Facility 
"RTN","IBCRHBS7",50,0)
 .. I $P(IBLINE,U,11) D SET(IBXRF1,"Inpt Fac "_IBUT,IBCPT,IBEFF,IBINA,IBCHRG,"")
"RTN","IBCRHBS7",51,0)
 .. I $P(IBLINE,U,12) D SET(IBXRF1,"SNF Fac "_IBUT,IBCPT,IBEFF,IBINA,IBCHRG,"")
"RTN","IBCRHBS7",52,0)
 . ;
"RTN","IBCRHBS7",53,0)
 . I TYPE<3 D  ; Outpatient Facility Charges
"RTN","IBCRHBS7",54,0)
 .. D SET(IBXRF1,"Opt Fac "_IBUT,IBCPT,IBEFF,IBINA,IBCHRG,"")
"RTN","IBCRHBS7",55,0)
 . ;
"RTN","IBCRHBS7",56,0)
 . I TYPE=3 D  ; move facility charge to physician for Freestanding if there is no global or TC
"RTN","IBCRHBS7",57,0)
 .. S IBFAC=$$INPHYS(IBCPT,IBUT) I IBFAC<0 Q
"RTN","IBCRHBS7",58,0)
 .. I IBFAC=26 D SET(IBXRF1,"FS Phys/Opt TC "_IBUT,IBCPT,IBEFF,IBINA,IBCHRG,"TC")
"RTN","IBCRHBS7",59,0)
 .. I IBFAC="" D SET(IBXRF1,"FS Phys/Opt "_IBUT,IBCPT,IBEFF,IBINA,IBCHRG,"")
"RTN","IBCRHBS7",60,0)
 ;
"RTN","IBCRHBS7",61,0)
 Q
"RTN","IBCRHBS7",62,0)
 ;
"RTN","IBCRHBS7",63,0)
C(SITE,IBXRF1) ; use Physician National Rates to calculate Site Specific Rates
"RTN","IBCRHBS7",64,0)
 N IBXTMPC,TYPE,IBI,IBLINE,IBCPT,IBEFF,IBINA,IBUT,IBMOD,IBXRF2A,IBCHRG
"RTN","IBCRHBS7",65,0)
 ;
"RTN","IBCRHBS7",66,0)
 S TYPE=$P(SITE,U,5) Q:'TYPE
"RTN","IBCRHBS7",67,0)
 ;
"RTN","IBCRHBS7",68,0)
 S IBXTMPC="IBCR RC C"
"RTN","IBCRHBS7",69,0)
 ;
"RTN","IBCRHBS7",70,0)
 S IBI=0 F  S IBI=$O(^XTMP(IBXTMPC,IBI)) Q:'IBI  D  W:'(IBI#100) "."
"RTN","IBCRHBS7",71,0)
 . S IBLINE=$G(^XTMP(IBXTMPC,IBI)) Q:IBLINE=""
"RTN","IBCRHBS7",72,0)
 . ;
"RTN","IBCRHBS7",73,0)
 . S IBCPT=$P(IBLINE,U,1),IBEFF=$P(IBLINE,U,22),IBINA=$P(IBLINE,U,23),IBUT=$P(IBLINE,U,16),IBMOD=$P(IBLINE,U,4)
"RTN","IBCRHBS7",74,0)
 . ;
"RTN","IBCRHBS7",75,0)
 . S IBCHRG=$$PROF^IBCRHBS8(SITE,IBLINE)
"RTN","IBCRHBS7",76,0)
 . ;
"RTN","IBCRHBS7",77,0)
 . ;
"RTN","IBCRHBS7",78,0)
 . I TYPE=3 D  Q  ; Freestanding Professional Charge
"RTN","IBCRHBS7",79,0)
 .. I +$P(IBLINE,U,21) D SET(IBXRF1,"FS Phys "_IBUT,IBCPT,IBEFF,IBINA,IBCHRG,IBMOD)
"RTN","IBCRHBS7",80,0)
 . ;
"RTN","IBCRHBS7",81,0)
 . S IBXRF2A="Phys "
"RTN","IBCRHBS7",82,0)
 . I +$P(IBLINE,U,17) S IBXRF2A="Fac/Phys ",IBMOD=$S(IBMOD="TC":"",1:IBMOD) I +$$INFAC(IBCPT) Q  ; facility
"RTN","IBCRHBS7",83,0)
 . ;
"RTN","IBCRHBS7",84,0)
 . I TYPE=1 D
"RTN","IBCRHBS7",85,0)
 .. I +$P(IBLINE,U,19) D SET(IBXRF1,"Inpt "_IBXRF2A_IBUT,IBCPT,IBEFF,IBINA,IBCHRG,IBMOD)
"RTN","IBCRHBS7",86,0)
 .. I +$P(IBLINE,U,20) D SET(IBXRF1,"SNF "_IBXRF2A_IBUT,IBCPT,IBEFF,IBINA,IBCHRG,IBMOD)
"RTN","IBCRHBS7",87,0)
 . ;
"RTN","IBCRHBS7",88,0)
 . I TYPE<3 D
"RTN","IBCRHBS7",89,0)
 .. I +$P(IBLINE,U,18) D SET(IBXRF1,"Opt "_IBXRF2A_IBUT,IBCPT,IBEFF,IBINA,IBCHRG,IBMOD)
"RTN","IBCRHBS7",90,0)
 ;
"RTN","IBCRHBS7",91,0)
 Q
"RTN","IBCRHBS7",92,0)
 ;
"RTN","IBCRHBS7",93,0)
FA(SITE,IBXRF1) ; Add TC and 26 Freestanding Professional charges to create global charge
"RTN","IBCRHBS7",94,0)
 N IBTMPX,IBCPT,IBK,IBXRF2,IB26,IB26UT,IBTC,IBTCUT,IBUT,IBITEM,IBEFF,IBINA,IBMOD,IBCHRG,IBCHRGB
"RTN","IBCRHBS7",95,0)
 ;
"RTN","IBCRHBS7",96,0)
 S IBTMPX="IBCR UPLOAD FS PROF"
"RTN","IBCRHBS7",97,0)
 ;
"RTN","IBCRHBS7",98,0)
 I $P(SITE,U,5)'=3 Q
"RTN","IBCRHBS7",99,0)
 ;
"RTN","IBCRHBS7",100,0)
 S IBCPT="" F  S IBCPT=$O(^TMP($J,IBTMPX,IBCPT)) Q:IBCPT=""  D
"RTN","IBCRHBS7",101,0)
 . I $O(^TMP($J,IBTMPX,IBCPT,"00",0)) Q
"RTN","IBCRHBS7",102,0)
 . S IBK=$O(^TMP($J,IBTMPX,IBCPT,"26",0)) Q:'IBK
"RTN","IBCRHBS7",103,0)
 . S IBXRF2=^TMP($J,IBTMPX,IBCPT,"26",IBK),IB26=^XTMP(IBXRF1,IBXRF2,+IBK) Q:IB26=""   S IB26UT=$$UNITYPE(IBXRF2)
"RTN","IBCRHBS7",104,0)
 . S IBK=$O(^TMP($J,IBTMPX,IBCPT,"TC",0)) Q:'IBK
"RTN","IBCRHBS7",105,0)
 . S IBXRF2=^TMP($J,IBTMPX,IBCPT,"TC",IBK),IBTC=^XTMP(IBXRF1,IBXRF2,+IBK) Q:IBTC=""   S IBTCUT=$$UNITYPE(IBXRF2)
"RTN","IBCRHBS7",106,0)
 . ;
"RTN","IBCRHBS7",107,0)
 . S IBUT=IB26UT I IB26UT'=IBTCUT W !,"ERROR, UNIT TYPES DON'T MATCH ",IBCPT Q
"RTN","IBCRHBS7",108,0)
 . ;
"RTN","IBCRHBS7",109,0)
 . S IBITEM=$P(IB26,U,1),IBEFF="20"_$E($P(IB26,U,2),2,7),IBINA="20"_$E($P(IB26,U,3),2,7),IBMOD=""
"RTN","IBCRHBS7",110,0)
 . ;
"RTN","IBCRHBS7",111,0)
 . S IBCHRG=$P(IB26,U,4)+$P(IBTC,U,4) Q:'IBCHRG  S IBCHRG=$J(IBCHRG,0,2)
"RTN","IBCRHBS7",112,0)
 . S IBCHRGB=$P(IB26,U,6)+$P(IBTC,U,6) I +IBCHRGB S IBCHRG=IBCHRG_U_$J(IBCHGB,0,2)
"RTN","IBCRHBS7",113,0)
 . ;
"RTN","IBCRHBS7",114,0)
 . D SET(IBXRF1,"FS Phys/Add 00 "_IBUT,IBITEM,IBEFF,IBINA,IBCHRG,IBMOD)
"RTN","IBCRHBS7",115,0)
 ;
"RTN","IBCRHBS7",116,0)
 K ^TMP($J,IBTMPX)
"RTN","IBCRHBS7",117,0)
 Q
"RTN","IBCRHBS7",118,0)
 ;
"RTN","IBCRHBS7",119,0)
 ;
"RTN","IBCRHBS7",120,0)
 ;
"RTN","IBCRHBS7",121,0)
SET(IBXRF1,IBXRF2,ITEM,EFFDT,INACTDT,CHRG,MOD) ; set calculated charges into XTMP
"RTN","IBCRHBS7",122,0)
 ;
"RTN","IBCRHBS7",123,0)
 N IBX,IBK,IBY,IBINACT,IBMODI S IBMODI=""
"RTN","IBCRHBS7",124,0)
 S IBX=$G(^XTMP(IBXRF1,0))
"RTN","IBCRHBS7",125,0)
 ;
"RTN","IBCRHBS7",126,0)
 I IBX="" W !!,"ERROR: IBXRF1 NOT SET ",IBXRF1,!! Q
"RTN","IBCRHBS7",127,0)
 I '$D(^XTMP(IBXRF1,IBXRF2)) W !!,"ERROR: IBXRF2 NOT SET ",IBXRF2,!! Q
"RTN","IBCRHBS7",128,0)
 ;
"RTN","IBCRHBS7",129,0)
 S IBK=+$P(IBX,U,4)+1,$P(^XTMP(IBXRF1,0),U,4)=IBK
"RTN","IBCRHBS7",130,0)
 S $P(^XTMP(IBXRF1,IBXRF2),U,1)=(+$G(^XTMP(IBXRF1,IBXRF2))+1)
"RTN","IBCRHBS7",131,0)
 ;
"RTN","IBCRHBS7",132,0)
 I $G(MOD)'="" S IBY=$$MODIFN(MOD,EFFDT) I +IBY>0 S IBMODI=+IBY
"RTN","IBCRHBS7",133,0)
 ;
"RTN","IBCRHBS7",134,0)
 S ^XTMP(IBXRF1,IBXRF2,IBK)=ITEM_U_$$DATE(EFFDT)_U_$$ENDDT(INACTDT)_U_+CHRG_U_IBMODI_U_$P(CHRG,U,2)
"RTN","IBCRHBS7",135,0)
 ;
"RTN","IBCRHBS7",136,0)
 I $E(IBXRF2,1,7)="FS Phys" S MOD=$S(MOD="":"00",1:MOD),^TMP($J,"IBCR UPLOAD FS PROF",ITEM,MOD,IBK)=IBXRF2
"RTN","IBCRHBS7",137,0)
 Q
"RTN","IBCRHBS7",138,0)
 ;
"RTN","IBCRHBS7",139,0)
 ;
"RTN","IBCRHBS7",140,0)
DATE(X) ; return yyyymmdd in FM format
"RTN","IBCRHBS7",141,0)
 N Y S Y="" I $G(X)?8N S Y=$S($E(X,1,4)>1999:3,1:2)_$E(X,3,4)_$E(X,5,8)
"RTN","IBCRHBS7",142,0)
 Q Y
"RTN","IBCRHBS7",143,0)
 ;
"RTN","IBCRHBS7",144,0)
ENDDT(X) ; return yyyymmdd date in FM format, check version inactive date
"RTN","IBCRHBS7",145,0)
 N Y,V S Y=$$DATE($G(X)) I 'Y S V=$G(^XTMP("IBCR RC SITE","VERSION INACTIVE")) I +V S Y=V
"RTN","IBCRHBS7",146,0)
 Q Y
"RTN","IBCRHBS7",147,0)
 ;
"RTN","IBCRHBS7",148,0)
MODIFN(MOD,EFFDT) ; return internal form of modifier
"RTN","IBCRHBS7",149,0)
 ; extra check is required because there are two RR modifiers so MOD will not return any
"RTN","IBCRHBS7",150,0)
 ; base the get on a CPT code for which RR is known to be a valid modifier
"RTN","IBCRHBS7",151,0)
 N IBY,IBX S (IBX,IBY)="" S EFFDT=$$DATE($G(EFFDT)) I 'EFFDT S EFFDT=DT
"RTN","IBCRHBS7",152,0)
 I $G(MOD)'="" S IBY=$$MOD^ICPTMOD(MOD,"E",EFFDT)
"RTN","IBCRHBS7",153,0)
 I IBY<0,$G(MOD)="RR" S IBY=$$MODP^ICPTMOD("K0455","RR","E",EFFDT)
"RTN","IBCRHBS7",154,0)
 I IBY>0 S IBX=+IBY
"RTN","IBCRHBS7",155,0)
 Q IBX
"RTN","IBCRHBS7",156,0)
 ;
"RTN","IBCRHBS7",157,0)
 ;
"RTN","IBCRHBS7",158,0)
INPHYS(IBCPT,UNITYPE) ; returns string of all modifiers associated with Physician charges for CPT and Unit Type
"RTN","IBCRHBS7",159,0)
 ; if charge exists but it has no modifier then uses 00, so if CPT has no charge then returns null
"RTN","IBCRHBS7",160,0)
 ; if a charge is found for the CPT but it has a different Unit Type then -1 is returned
"RTN","IBCRHBS7",161,0)
 ; note: if no freestanding physician charge then can add opt facility charge as physician charge
"RTN","IBCRHBS7",162,0)
 ; note: if only a freestanding 26 physician charge then can add the opt facility charge as TC physician charge (same unit type)
"RTN","IBCRHBS7",163,0)
 ;
"RTN","IBCRHBS7",164,0)
 N MOD,MODS,IBX,IBY S MODS=""
"RTN","IBCRHBS7",165,0)
 ;
"RTN","IBCRHBS7",166,0)
 S IBX="" F  S IBX=$O(^XTMP("IBCR RC C","A",IBCPT,IBX)) Q:IBX=""  D
"RTN","IBCRHBS7",167,0)
 . S IBY=^XTMP("IBCR RC C",IBX) I $P(IBY,U,16)'=UNITYPE S MODS=-1 Q
"RTN","IBCRHBS7",168,0)
 . S MOD=$P(IBY,U,4) I MOD="" S MOD="00"
"RTN","IBCRHBS7",169,0)
 . S MODS=MODS_MOD
"RTN","IBCRHBS7",170,0)
 Q MODS
"RTN","IBCRHBS7",171,0)
 ;
"RTN","IBCRHBS7",172,0)
INFAC(IBCPT) ; check if the CPT code has a charge in the Opt Facility file (table B)
"RTN","IBCRHBS7",173,0)
 ; return true if CPT code has a Opt Facility Charge 
"RTN","IBCRHBS7",174,0)
 N IBX S IBX=0 I $O(^XTMP("IBCR RC B","A",IBCPT,"")) S IBX=1
"RTN","IBCRHBS7",175,0)
 Q IBX
"RTN","IBCRHBS7",176,0)
 ;
"RTN","IBCRHBS7",177,0)
UNITYPE(IBXRF2) ; return unit type of group of charges last piece of IBXRF2
"RTN","IBCRHBS7",178,0)
 N IBX,IBY,IBZ S IBX=""
"RTN","IBCRHBS7",179,0)
 S IBY=$L(IBXRF2),IBZ=$E(IBXRF2,IBY) I IBZ>0,IBZ<5 S IBX=IBZ
"RTN","IBCRHBS7",180,0)
 Q IBX
"RTN","IBCRHBS8")
0^31^B45646528
"RTN","IBCRHBS8",1,0)
IBCRHBS8 ;ALB/ARH - RATES: UPLOAD (RC 2+) CALCULATIONS CHARGE ; 10-OCT-03
"RTN","IBCRHBS8",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBCRHBS8",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRHBS8",4,0)
 ;
"RTN","IBCRHBS8",5,0)
 ;
"RTN","IBCRHBS8",6,0)
ISA(SITE,ITLINE) ; Return Inpatient DRG Standard Ancillary Charge
"RTN","IBCRHBS8",7,0)
 N IBCHG,IBZIP,IBAA,IBCTI,IBCTIAAP S IBCHG=0,ITLINE=$G(ITLINE),IBZIP=$P($G(SITE),U,4)
"RTN","IBCRHBS8",8,0)
 I $P(ITLINE,U,2)'="DRG" G ISAQ
"RTN","IBCRHBS8",9,0)
 ;
"RTN","IBCRHBS8",10,0)
 S IBAA=$$GETAA(IBZIP) I $P(IBAA,U,1)'=IBZIP G ISAQ
"RTN","IBCRHBS8",11,0)
 S IBCTI=$P($G(ITLINE),U,4),IBCTIAAP=$S(IBCTI="S":3,IBCTI="N":5,1:0) I 'IBCTIAAP G ISAQ
"RTN","IBCRHBS8",12,0)
 ;
"RTN","IBCRHBS8",13,0)
 S IBCHG=$P(ITLINE,U,6)*$P(IBAA,U,IBCTIAAP) S IBCHG=$J(IBCHG,0,2)
"RTN","IBCRHBS8",14,0)
 ;
"RTN","IBCRHBS8",15,0)
ISAQ Q IBCHG
"RTN","IBCRHBS8",16,0)
 ;
"RTN","IBCRHBS8",17,0)
ISR(SITE,ITLINE) ; Return Inpatient DRG Standard Room & Board Charge
"RTN","IBCRHBS8",18,0)
 N IBCHG,IBZIP,IBAA,IBCTI,IBCTIAAP S IBCHG=0,ITLINE=$G(ITLINE),IBZIP=$P($G(SITE),U,4)
"RTN","IBCRHBS8",19,0)
 I $P(ITLINE,U,2)'="DRG" G ISRQ
"RTN","IBCRHBS8",20,0)
 ;
"RTN","IBCRHBS8",21,0)
 S IBAA=$$GETAA(IBZIP) I $P(IBAA,U,1)'=IBZIP G ISRQ
"RTN","IBCRHBS8",22,0)
 S IBCTI=$P($G(ITLINE),U,4),IBCTIAAP=$S(IBCTI="S":2,IBCTI="N":4,1:0) I 'IBCTIAAP G ISRQ
"RTN","IBCRHBS8",23,0)
 ;
"RTN","IBCRHBS8",24,0)
 S IBCHG=$P(ITLINE,U,5)*$P(IBAA,U,IBCTIAAP) S IBCHG=$J(IBCHG,0,2)
"RTN","IBCRHBS8",25,0)
 ;
"RTN","IBCRHBS8",26,0)
ISRQ Q IBCHG
"RTN","IBCRHBS8",27,0)
 ;
"RTN","IBCRHBS8",28,0)
IIA(SITE,ITLINE) ; Return Inpatient DRG ICU Ancillary Charge
"RTN","IBCRHBS8",29,0)
 N IBCHG,IBZIP,IBAA,IBCTI,IBCTIAAP S IBCHG=0,ITLINE=$G(ITLINE),IBZIP=$P($G(SITE),U,4)
"RTN","IBCRHBS8",30,0)
 I $P(ITLINE,U,2)'="DRG" G IIAQ
"RTN","IBCRHBS8",31,0)
 ;
"RTN","IBCRHBS8",32,0)
 S IBAA=$$GETAA(IBZIP) I $P(IBAA,U,1)'=IBZIP G IIAQ
"RTN","IBCRHBS8",33,0)
 S IBCTI=$P($G(ITLINE),U,4),IBCTIAAP=$S(IBCTI="S":3,IBCTI="N":5,1:0) I 'IBCTIAAP G IIAQ
"RTN","IBCRHBS8",34,0)
 ;
"RTN","IBCRHBS8",35,0)
 S IBCHG=$P(ITLINE,U,8)*$P(IBAA,U,IBCTIAAP) S IBCHG=$J(IBCHG,0,2)
"RTN","IBCRHBS8",36,0)
 ;
"RTN","IBCRHBS8",37,0)
IIAQ Q IBCHG
"RTN","IBCRHBS8",38,0)
 ;
"RTN","IBCRHBS8",39,0)
IIR(SITE,ITLINE) ; Return Inpatient DRG ICU Room & Board Charge
"RTN","IBCRHBS8",40,0)
 N IBCHG,IBZIP,IBAA,IBCTI,IBCTIAAP S IBCHG=0,ITLINE=$G(ITLINE),IBZIP=$P($G(SITE),U,4)
"RTN","IBCRHBS8",41,0)
 I $P(ITLINE,U,2)'="DRG" G IIRQ
"RTN","IBCRHBS8",42,0)
 ;
"RTN","IBCRHBS8",43,0)
 S IBAA=$$GETAA(IBZIP) I $P(IBAA,U,1)'=IBZIP G IIRQ
"RTN","IBCRHBS8",44,0)
 S IBCTI=$P($G(ITLINE),U,4),IBCTIAAP=$S(IBCTI="S":2,IBCTI="N":4,1:0) I 'IBCTIAAP G IIRQ
"RTN","IBCRHBS8",45,0)
 ;
"RTN","IBCRHBS8",46,0)
 S IBCHG=$P(ITLINE,U,7)*$P(IBAA,U,IBCTIAAP) S IBCHG=$J(IBCHG,0,2)
"RTN","IBCRHBS8",47,0)
 ;
"RTN","IBCRHBS8",48,0)
IIRQ Q IBCHG
"RTN","IBCRHBS8",49,0)
 ;
"RTN","IBCRHBS8",50,0)
ISNF(SITE,ITLINE) ; Return Inpatient Skilled Nursing Facility Per Diem
"RTN","IBCRHBS8",51,0)
 N IBCHG,IBZIP,IBAA S IBCHG=0,ITLINE=$G(ITLINE),IBZIP=$P($G(SITE),U,4) I $P(ITLINE,U,2)'="SNF" G ISNFQ
"RTN","IBCRHBS8",52,0)
 I $P(ITLINE,U,1)'="999" G ISNFQ
"RTN","IBCRHBS8",53,0)
 ;
"RTN","IBCRHBS8",54,0)
 S IBAA=$$GETAA(IBZIP) I $P(IBAA,U,1)'=IBZIP G ISNFQ
"RTN","IBCRHBS8",55,0)
 ;
"RTN","IBCRHBS8",56,0)
 S IBCHG=$P(ITLINE,U,5)*$P(IBAA,U,6) S IBCHG=$J(IBCHG,0,2)
"RTN","IBCRHBS8",57,0)
 ;
"RTN","IBCRHBS8",58,0)
ISNFQ Q IBCHG
"RTN","IBCRHBS8",59,0)
 ;
"RTN","IBCRHBS8",60,0)
 ;
"RTN","IBCRHBS8",61,0)
FAC(SITE,ITLINE) ; Return Facility Charge (Table B) for All Charge and Unit Types
"RTN","IBCRHBS8",62,0)
 ; each line record contains 1 charge that may be calculated in multiple ways
"RTN","IBCRHBS8",63,0)
 N IBCHG,IBUT S IBCHG=0,SITE=$G(SITE),ITLINE=$G(ITLINE)
"RTN","IBCRHBS8",64,0)
 ;
"RTN","IBCRHBS8",65,0)
 S IBUT=$P(ITLINE,U,10)
"RTN","IBCRHBS8",66,0)
 ;
"RTN","IBCRHBS8",67,0)
 I IBUT=1 S IBCHG=$$FSTD(SITE,ITLINE) G FACQ
"RTN","IBCRHBS8",68,0)
 I IBUT=4 S IBCHG=$$FSTD(SITE,ITLINE) G FACQ
"RTN","IBCRHBS8",69,0)
 I IBUT=2 S IBCHG=$$FHRS(SITE,ITLINE) G FACQ
"RTN","IBCRHBS8",70,0)
 ;
"RTN","IBCRHBS8",71,0)
FACQ Q IBCHG
"RTN","IBCRHBS8",72,0)
 ;
"RTN","IBCRHBS8",73,0)
FSTD(SITE,ITLINE) ; Return Facility Charge of Unit Type = 1 or 4 (Standard and Miles)
"RTN","IBCRHBS8",74,0)
 N IBCHG,IBZIP,IBUT,IBAA,IBSCC,IBSCCAAP S IBCHG=0,ITLINE=$G(ITLINE),IBZIP=$P($G(SITE),U,4)
"RTN","IBCRHBS8",75,0)
 S IBUT=$P(ITLINE,U,10) I IBUT'=1,IBUT'=4 G FSTDQ
"RTN","IBCRHBS8",76,0)
 ;
"RTN","IBCRHBS8",77,0)
 S IBAA=$$GETAA(IBZIP) I $P(IBAA,U,1)'=IBZIP G FSTDQ
"RTN","IBCRHBS8",78,0)
 S IBSCC=$$GETSCC($P(ITLINE,U,5)),IBSCCAAP=$P(IBSCC,U,4) I 'IBSCCAAP G FSTDQ
"RTN","IBCRHBS8",79,0)
 ;
"RTN","IBCRHBS8",80,0)
 S IBCHG=$P(ITLINE,U,8)*$P(IBAA,U,IBSCCAAP) S IBCHG=$J(IBCHG,0,2)
"RTN","IBCRHBS8",81,0)
 ;
"RTN","IBCRHBS8",82,0)
FSTDQ Q IBCHG
"RTN","IBCRHBS8",83,0)
 ;
"RTN","IBCRHBS8",84,0)
FHRS(SITE,ITLINE) ; Return Facility Charge of Unit Type = 2 (Hours)
"RTN","IBCRHBS8",85,0)
 N IBCHG,IBCHGB,IBZIP,IBUT,IBAA,IBSCC,IBSCCAAP S (IBCHG,IBCHGB)=0,ITLINE=$G(ITLINE),IBZIP=$P($G(SITE),U,4)
"RTN","IBCRHBS8",86,0)
 S IBUT=$P(ITLINE,U,10) I IBUT'=2 G FHRSQ
"RTN","IBCRHBS8",87,0)
 ;
"RTN","IBCRHBS8",88,0)
 S IBAA=$$GETAA(IBZIP) I $P(IBAA,U,1)'=IBZIP G FHRSQ
"RTN","IBCRHBS8",89,0)
 S IBSCC=$$GETSCC($P(ITLINE,U,5)),IBSCCAAP=$P(IBSCC,U,4) I 'IBSCCAAP G FHRSQ
"RTN","IBCRHBS8",90,0)
 ;
"RTN","IBCRHBS8",91,0)
 S IBCHG=$P(ITLINE,U,8)*$P(IBAA,U,IBSCCAAP) S IBCHG=$J(IBCHG,0,2)
"RTN","IBCRHBS8",92,0)
 S IBCHGB=$P(ITLINE,U,9)*$P(IBAA,U,IBSCCAAP) S IBCHGB=$J(IBCHGB,0,2)
"RTN","IBCRHBS8",93,0)
 ;
"RTN","IBCRHBS8",94,0)
FHRSQ Q IBCHG_U_IBCHGB
"RTN","IBCRHBS8",95,0)
 ;
"RTN","IBCRHBS8",96,0)
 ;
"RTN","IBCRHBS8",97,0)
PROF(SITE,ITLINE) ; Return Professional Charge (Table C) for All Charge and Unit Types
"RTN","IBCRHBS8",98,0)
 ; each line record contains 1 charge that may be calculated in multiple ways
"RTN","IBCRHBS8",99,0)
 N IBCHG,IBCT,IBUT S IBCHG=0,SITE=$G(SITE),ITLINE=$G(ITLINE)
"RTN","IBCRHBS8",100,0)
 ;
"RTN","IBCRHBS8",101,0)
 S IBCT=$P(ITLINE,U,8)
"RTN","IBCRHBS8",102,0)
 S IBUT=$P(ITLINE,U,16)
"RTN","IBCRHBS8",103,0)
 ;
"RTN","IBCRHBS8",104,0)
 I IBUT=1,IBCT="RBRVS" S IBCHG=$$PRBRVS(SITE,ITLINE) G PROFQ
"RTN","IBCRHBS8",105,0)
 I IBUT=1,IBCT="TotalUnits" S IBCHG=$$PTRVU(SITE,ITLINE) G PROFQ
"RTN","IBCRHBS8",106,0)
 I IBUT=1,IBCT="NW" S IBCHG=$$PNW(SITE,ITLINE) G PROFQ
"RTN","IBCRHBS8",107,0)
 I IBUT=3,IBCT="Anesth" S IBCHG=$$PANES(SITE,ITLINE) G PROFQ
"RTN","IBCRHBS8",108,0)
 ;
"RTN","IBCRHBS8",109,0)
PROFQ Q IBCHG
"RTN","IBCRHBS8",110,0)
 ;
"RTN","IBCRHBS8",111,0)
PRBRVS(SITE,ITLINE) ; Return Professional RBRVS Based Charge
"RTN","IBCRHBS8",112,0)
 N IBCHG,IBZIP,IBCTI,IBUT,IBAA,IBSCC,IBSCCAAP,IBPEP,IBWE,IBPE,IBCF S IBCHG=0,ITLINE=$G(ITLINE),IBZIP=$P($G(SITE),U,4)
"RTN","IBCRHBS8",113,0)
 S IBCTI=$P(ITLINE,U,8) I IBCTI'="RBRVS" G PRBRVSQ
"RTN","IBCRHBS8",114,0)
 S IBUT=$P(ITLINE,U,16) I IBUT'=1 G PRBRVSQ
"RTN","IBCRHBS8",115,0)
 ;
"RTN","IBCRHBS8",116,0)
 S IBAA=$$GETAA(IBZIP) I $P(IBAA,U,1)'=IBZIP G PRBRVSQ
"RTN","IBCRHBS8",117,0)
 S IBSCC=$$GETSCC($P(ITLINE,U,6)) S IBSCCAAP=$P(IBSCC,U,4) I 'IBSCCAAP G PRBRVSQ
"RTN","IBCRHBS8",118,0)
 ;
"RTN","IBCRHBS8",119,0)
 S IBPEP=$S($P(SITE,U,5)=3:11,1:10) ; provider/non-provider site
"RTN","IBCRHBS8",120,0)
 ;
"RTN","IBCRHBS8",121,0)
 S IBWE=$P(ITLINE,U,9)*$P(IBAA,U,7)
"RTN","IBCRHBS8",122,0)
 S IBPE=$P(ITLINE,U,IBPEP)*$P(IBAA,U,8)
"RTN","IBCRHBS8",123,0)
 S IBCF=$P(IBSCC,U,3)*$P(IBAA,U,IBSCCAAP)
"RTN","IBCRHBS8",124,0)
 ;
"RTN","IBCRHBS8",125,0)
 S IBCHG=(IBWE+IBPE)*IBCF S IBCHG=$J(IBCHG,0,2)
"RTN","IBCRHBS8",126,0)
 ;
"RTN","IBCRHBS8",127,0)
PRBRVSQ Q IBCHG
"RTN","IBCRHBS8",128,0)
 ;
"RTN","IBCRHBS8",129,0)
 ;
"RTN","IBCRHBS8",130,0)
PTRVU(SITE,ITLINE) ; Return Professional Total RVU Charge
"RTN","IBCRHBS8",131,0)
 N IBCHG,IBZIP,IBCTI,IBUT,IBAA,IBSCC,IBSCCAAP,IBUN,IBCF S IBCHG=0,ITLINE=$G(ITLINE),IBZIP=$P($G(SITE),U,4)
"RTN","IBCRHBS8",132,0)
 S IBCTI=$P(ITLINE,U,8) I IBCTI'="TotalUnits" G PTRVUQ
"RTN","IBCRHBS8",133,0)
 S IBUT=$P(ITLINE,U,16) I IBUT'=1 G PTRVUQ
"RTN","IBCRHBS8",134,0)
 ;
"RTN","IBCRHBS8",135,0)
 S IBAA=$$GETAA(IBZIP) I $P(IBAA,U,1)'=IBZIP G PTRVUQ
"RTN","IBCRHBS8",136,0)
 S IBSCC=$$GETSCC($P(ITLINE,U,6)) S IBSCCAAP=$P(IBSCC,U,4) I 'IBSCCAAP G PTRVUQ
"RTN","IBCRHBS8",137,0)
 ;
"RTN","IBCRHBS8",138,0)
 S IBUN=$P(ITLINE,U,12)*$P(IBAA,U,9)
"RTN","IBCRHBS8",139,0)
 S IBCF=$P(IBSCC,U,3)*$P(IBAA,U,IBSCCAAP)
"RTN","IBCRHBS8",140,0)
 ;
"RTN","IBCRHBS8",141,0)
 S IBCHG=IBUN*IBCF S IBCHG=$J(IBCHG,0,2)
"RTN","IBCRHBS8",142,0)
 ;
"RTN","IBCRHBS8",143,0)
PTRVUQ Q IBCHG
"RTN","IBCRHBS8",144,0)
 ;
"RTN","IBCRHBS8",145,0)
PNW(SITE,ITLINE) ; Return Professional Nationwide Charge
"RTN","IBCRHBS8",146,0)
 N IBCHG,IBZIP,IBCTI,IBUT,IBAA,IBSCC,IBSCCAAP S IBCHG=0,ITLINE=$G(ITLINE),IBZIP=$P($G(SITE),U,4)
"RTN","IBCRHBS8",147,0)
 S IBCTI=$P(ITLINE,U,8) I IBCTI'="NW" G PNWQ
"RTN","IBCRHBS8",148,0)
 S IBUT=$P(ITLINE,U,16) I IBUT'=1 G PNWQ
"RTN","IBCRHBS8",149,0)
 ;
"RTN","IBCRHBS8",150,0)
 S IBAA=$$GETAA(IBZIP) I $P(IBAA,U,1)'=IBZIP G PNWQ
"RTN","IBCRHBS8",151,0)
 S IBSCC=$$GETSCC($P(ITLINE,U,6)) S IBSCCAAP=$P(IBSCC,U,4) I 'IBSCCAAP G PNWQ
"RTN","IBCRHBS8",152,0)
 ;
"RTN","IBCRHBS8",153,0)
 S IBCHG=$P(ITLINE,U,14)*$P(IBAA,U,IBSCCAAP) S IBCHG=$J(IBCHG,0,2)
"RTN","IBCRHBS8",154,0)
 ;
"RTN","IBCRHBS8",155,0)
PNWQ Q IBCHG
"RTN","IBCRHBS8",156,0)
 ;
"RTN","IBCRHBS8",157,0)
PANES(SITE,ITLINE) ; Return Professional Anesthesia Charge
"RTN","IBCRHBS8",158,0)
 N IBCHG,IBCHGB,IBZIP,IBCTI,IBUT,IBAA,IBSCC,IBSCCAAP,IBCF S (IBCHG,IBCHGB)=0,ITLINE=$G(ITLINE),IBZIP=$P($G(SITE),U,4)
"RTN","IBCRHBS8",159,0)
 S IBCTI=$P(ITLINE,U,8) I IBCTI'="Anesth" G PANESQ
"RTN","IBCRHBS8",160,0)
 S IBUT=$P(ITLINE,U,16) I IBUT'=3 G PANESQ
"RTN","IBCRHBS8",161,0)
 ;
"RTN","IBCRHBS8",162,0)
 S IBAA=$$GETAA(IBZIP) I $P(IBAA,U,1)'=IBZIP G PANESQ
"RTN","IBCRHBS8",163,0)
 S IBSCC=$$GETSCC($P(ITLINE,U,6)) S IBSCCAAP=$P(IBSCC,U,4) I 'IBSCCAAP G PANESQ
"RTN","IBCRHBS8",164,0)
 ;
"RTN","IBCRHBS8",165,0)
 S IBCF=$P(IBSCC,U,3)*$P(IBAA,U,IBSCCAAP)
"RTN","IBCRHBS8",166,0)
 ;
"RTN","IBCRHBS8",167,0)
 S IBCHG=$P(ITLINE,U,14)*IBCF S IBCHG=$J(IBCHG,0,2)
"RTN","IBCRHBS8",168,0)
 S IBCHGB=$P(ITLINE,U,13)*IBCF S IBCHGB=$J(IBCHGB,0,2)
"RTN","IBCRHBS8",169,0)
 ;
"RTN","IBCRHBS8",170,0)
PANESQ Q IBCHG_U_IBCHGB
"RTN","IBCRHBS8",171,0)
 ;
"RTN","IBCRHBS8",172,0)
 ;
"RTN","IBCRHBS8",173,0)
 ;
"RTN","IBCRHBS8",174,0)
 ;
"RTN","IBCRHBS8",175,0)
GETAA(ZIP) ; return Area Factor entry for Zip from Table E
"RTN","IBCRHBS8",176,0)
 N IBTMPAA,IBAALN,IBDIV,IBDIVLN S IBAALN="",IBTMPAA="IBCR RC E",IBDIV=""
"RTN","IBCRHBS8",177,0)
 ;
"RTN","IBCRHBS8",178,0)
 I $G(ZIP)?3N S IBDIV=$O(^XTMP(IBTMPAA,"A",ZIP,0))
"RTN","IBCRHBS8",179,0)
 I +IBDIV S IBDIVLN=$G(^XTMP(IBTMPAA,IBDIV)) I $P(IBDIVLN,U,1)=ZIP S IBAALN=IBDIVLN
"RTN","IBCRHBS8",180,0)
 ;
"RTN","IBCRHBS8",181,0)
 Q IBAALN
"RTN","IBCRHBS8",182,0)
 ;
"RTN","IBCRHBS8",183,0)
GETSCC(SCC) ; return Service Category Code entry from Table D
"RTN","IBCRHBS8",184,0)
 N IBTMPSCC,IBSCC,IBSCCLN,IBLN S IBSCCLN="",IBTMPSCC="IBCR RC D",IBSCC=""
"RTN","IBCRHBS8",185,0)
 ;
"RTN","IBCRHBS8",186,0)
 I +$G(SCC) S IBSCC=$O(^XTMP(IBTMPSCC,"A",SCC,0))
"RTN","IBCRHBS8",187,0)
 I +IBSCC S IBLN=$G(^XTMP(IBTMPSCC,IBSCC)) I $P(IBLN,U,1)=SCC S IBSCCLN=IBLN
"RTN","IBCRHBS8",188,0)
 ;
"RTN","IBCRHBS8",189,0)
 Q IBSCCLN
"RTN","IBCRHBSZ")
0^32^B41172296
"RTN","IBCRHBSZ",1,0)
IBCRHBSZ ;ALB/ARH - RATES: UPLOAD (RC 2+) DIVISION FUNCTIONS ; 10-OCT-03
"RTN","IBCRHBSZ",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBCRHBSZ",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRHBSZ",4,0)
 ;
"RTN","IBCRHBSZ",5,0)
 ;
"RTN","IBCRHBSZ",6,0)
SITEDV(DIV) ; return the host file site data on the division passed in
"RTN","IBCRHBSZ",7,0)
 ; input: site number, output: 0 or 'IFN of site in IBCR RC SITE ^ site number ^ site name ^ 3-digit zip ^ type'
"RTN","IBCRHBSZ",8,0)
 ;
"RTN","IBCRHBSZ",9,0)
 N IBY,IBX,IBLN S (IBY,IBX)=0
"RTN","IBCRHBSZ",10,0)
 I +$G(DIV) S IBY=$O(^XTMP("IBCR RC SITE","C",DIV_" ",0))
"RTN","IBCRHBSZ",11,0)
 I +IBY S IBLN=$G(^XTMP("IBCR RC SITE",IBY)) I IBLN'="" S IBX=IBY_U_IBLN
"RTN","IBCRHBSZ",12,0)
 Q IBX
"RTN","IBCRHBSZ",13,0)
 ;
"RTN","IBCRHBSZ",14,0)
RGDV(DV) ; return Billing Region data on division passed in
"RTN","IBCRHBSZ",15,0)
 ; Input: site number, output 0 or 'IFN of region in 363.31 ^ site number ^ site city,st ^ 3-digit zip ^ type'
"RTN","IBCRHBSZ",16,0)
 N IBRG,IBX,IBY,IBFND S IBFND=0
"RTN","IBCRHBSZ",17,0)
 I $G(DV)'="" S IBRG="RC "_DV F  S IBRG=$O(^IBE(363.31,"B",IBRG)) Q:$E(IBRG,1,2)'="RC"  D  Q:IBFND
"RTN","IBCRHBSZ",18,0)
 . I IBRG'[(" "_DV_" ") Q
"RTN","IBCRHBSZ",19,0)
 . S IBY=$O(^IBE(363.31,"B",IBRG,0)) I 'IBY Q
"RTN","IBCRHBSZ",20,0)
 . S IBX=$G(^IBE(363.31,+IBY,0))
"RTN","IBCRHBSZ",21,0)
 . S IBFND=IBY_U_DV_U_$P($P(IBX,U,1)," - ",2)_U_$P(IBX,U,2,3)
"RTN","IBCRHBSZ",22,0)
 Q IBFND
"RTN","IBCRHBSZ",23,0)
 ;
"RTN","IBCRHBSZ",24,0)
MSGDIV(SITE) ; check if division selected is defined as a division (40.8) on the system
"RTN","IBCRHBSZ",25,0)
 N IBMCDV,IBRG,IBX,IBY,IBFND S (IBMCDV,IBFND)="",SITE=$G(SITE)
"RTN","IBCRHBSZ",26,0)
 I SITE'="" S IBMCDV=+$O(^DG(40.8,"C",SITE,0))
"RTN","IBCRHBSZ",27,0)
 I +IBMCDV S IBX=$G(^DG(40.8,+IBMCDV,0)) D
"RTN","IBCRHBSZ",28,0)
 . W !!,?5,$P(IBX,U,2),?15,$P(IBX,U,1)," is a valid Medical Center division on your system.",!
"RTN","IBCRHBSZ",29,0)
 . S IBRG="RC" F  S IBRG=$O(^IBE(363.31,"B",IBRG)) Q:$E(IBRG,1,2)'="RC"  D  Q:IBFND
"RTN","IBCRHBSZ",30,0)
 .. I IBRG[(" "_SITE_" ") S IBFND=1 Q
"RTN","IBCRHBSZ",31,0)
 .. S IBY=$O(^IBE(363.31,"B",IBRG,0)) I 'IBY Q
"RTN","IBCRHBSZ",32,0)
 .. I '$O(^IBE(363.31,IBY,11,"B",+IBMCDV,0)) Q
"RTN","IBCRHBSZ",33,0)
 .. W !!,?5,SITE," is already assigned to Billing Region: ",IBRG,! S IBFND=1
"RTN","IBCRHBSZ",34,0)
 I 'IBMCDV W !!,?5,"*** ",SITE," is NOT defined as a Medical Center Division on your system ***",!
"RTN","IBCRHBSZ",35,0)
 Q
"RTN","IBCRHBSZ",36,0)
 ;
"RTN","IBCRHBSZ",37,0)
 ;
"RTN","IBCRHBSZ",38,0)
 ; ***************************************************************************************
"RTN","IBCRHBSZ",39,0)
 ;
"RTN","IBCRHBSZ",40,0)
SETRGZIP ; for all existing Billing Regions, set the sites 3-digit zip code into the Identifier field (363.31,.02)
"RTN","IBCRHBSZ",41,0)
 ; and set the Facility type into the Type field (363.31,.03)
"RTN","IBCRHBSZ",42,0)
 ; the 3-digit zip was not available with RC v1, so Regions created for RC v1 will not have this field set
"RTN","IBCRHBSZ",43,0)
 ; the type field was not available until RC v2, so Regions created before RC 2 will not have this field set
"RTN","IBCRHBSZ",44,0)
 ;
"RTN","IBCRHBSZ",45,0)
 N DIE,DIC,DA,DR,X,Y,IBRGFN,IBLN,IBZIP,IBSITE,IBTYPE I $$VERSION^IBCRHBRV=1 Q
"RTN","IBCRHBSZ",46,0)
 ;
"RTN","IBCRHBSZ",47,0)
 S IBRGFN=0 F  S IBRGFN=$O(^IBE(363.31,IBRGFN)) Q:'IBRGFN  D
"RTN","IBCRHBSZ",48,0)
 . S IBLN=$G(^IBE(363.31,IBRGFN,0)) Q:$E(IBLN,1,3)'="RC "  I $P(IBLN,U,2)'="",$P(IBLN,U,3)'="" Q
"RTN","IBCRHBSZ",49,0)
 . ;
"RTN","IBCRHBSZ",50,0)
 . S IBSITE=$$SITEDV($P(IBLN," ",2))
"RTN","IBCRHBSZ",51,0)
 . S IBZIP=$P(IBSITE,U,4) Q:IBZIP'?3N
"RTN","IBCRHBSZ",52,0)
 . S IBTYPE=$P(IBSITE,U,5) Q:IBTYPE=""
"RTN","IBCRHBSZ",53,0)
 . ;
"RTN","IBCRHBSZ",54,0)
 . S DR=""
"RTN","IBCRHBSZ",55,0)
 . I $P(IBLN,U,2)="" S DR=".02////"_IBZIP_";"
"RTN","IBCRHBSZ",56,0)
 . I $P(IBLN,U,3)="" S DR=DR_".03////"_IBTYPE
"RTN","IBCRHBSZ",57,0)
 . I DR'="" S DIE="^IBE(363.31,",DA=IBRGFN D ^DIE K DIE,DIC,DA,DR
"RTN","IBCRHBSZ",58,0)
 Q
"RTN","IBCRHBSZ",59,0)
 ;
"RTN","IBCRHBSZ",60,0)
CHKRGZIP ; for all existing Billing Regions, check to ensure each division assigned is actually within that Region
"RTN","IBCRHBSZ",61,0)
 ; Check the Billing Region zip/type against the Host files zip/type for the site
"RTN","IBCRHBSZ",62,0)
 ; Also the 3-digit zip of the Regions Divisions must match the 3-digit zip of the Regions primary division
"RTN","IBCRHBSZ",63,0)
 ; if the 3-digit zips do not match, the Division is deleted from the Region
"RTN","IBCRHBSZ",64,0)
 ;
"RTN","IBCRHBSZ",65,0)
 N IBRGFN,IBLN,IBRGSITE,IBRGZIP,IBRGTYPE,IBDVFN,IBDV,IBDVLN,IBDVSITE,IBDVZIP,IBDVTYPE,ARRAY,ARRAY2,DA,DIK,DIC,DIR,X,Y
"RTN","IBCRHBSZ",66,0)
 ;
"RTN","IBCRHBSZ",67,0)
 S IBRGFN=0 F  S IBRGFN=$O(^IBE(363.31,IBRGFN)) Q:'IBRGFN  D
"RTN","IBCRHBSZ",68,0)
 . S IBLN=$G(^IBE(363.31,IBRGFN,0)) Q:$E(IBLN,1,3)'="RC "
"RTN","IBCRHBSZ",69,0)
 . S IBRGSITE=$$SITEDV($P(IBLN," ",2))
"RTN","IBCRHBSZ",70,0)
 . S IBRGZIP=$P(IBRGSITE,U,4)
"RTN","IBCRHBSZ",71,0)
 . S IBRGTYPE=$P(IBRGSITE,U,5)
"RTN","IBCRHBSZ",72,0)
 . I IBRGZIP'?3N,IBRGTYPE="" Q
"RTN","IBCRHBSZ",73,0)
 . ;
"RTN","IBCRHBSZ",74,0)
 . ; check region settings against settings for primary division in host files
"RTN","IBCRHBSZ",75,0)
 . I $P(IBLN,U,2)'=IBRGZIP S ARRAY2($P(IBLN,U,1))=$P(IBLN,U,2)_U_+$P(IBLN,U,3)_U_IBRGZIP_U_+IBRGTYPE
"RTN","IBCRHBSZ",76,0)
 . I +IBRGTYPE,$P(IBLN,U,3)'=IBRGTYPE S ARRAY2($P(IBLN,U,1))=$P(IBLN,U,2)_U_+$P(IBLN,U,3)_U_IBRGZIP_U_+IBRGTYPE
"RTN","IBCRHBSZ",77,0)
 . 
"RTN","IBCRHBSZ",78,0)
 . ; check regions primary division against the assigned divisions
"RTN","IBCRHBSZ",79,0)
 . S IBDVFN=0 F  S IBDVFN=$O(^IBE(363.31,IBRGFN,11,IBDVFN)) Q:'IBDVFN  D
"RTN","IBCRHBSZ",80,0)
 .. S IBDV=+$G(^IBE(363.31,IBRGFN,11,IBDVFN,0)) Q:'IBDV
"RTN","IBCRHBSZ",81,0)
 .. S IBDVLN=$G(^DG(40.8,+IBDV,0)) Q:IBDVLN=""
"RTN","IBCRHBSZ",82,0)
 .. S IBDVSITE=$$SITEDV($P(IBDVLN,U,2))
"RTN","IBCRHBSZ",83,0)
 .. S IBDVZIP=$P(IBDVSITE,U,4)
"RTN","IBCRHBSZ",84,0)
 .. S IBDVTYPE=$P(IBDVSITE,U,5)
"RTN","IBCRHBSZ",85,0)
 .. I IBDVZIP'?3N,IBDVTYPE="" Q
"RTN","IBCRHBSZ",86,0)
 .. ;
"RTN","IBCRHBSZ",87,0)
 .. I IBRGZIP=IBDVZIP,IBRGTYPE=IBDVTYPE Q
"RTN","IBCRHBSZ",88,0)
 .. I IBRGTYPE=1,IBDVTYPE<3 Q
"RTN","IBCRHBSZ",89,0)
 .. S ARRAY(IBRGFN)=IBLN,ARRAY(IBRGFN,IBDV)=$P(IBDVLN,U,1,2)_U_IBDVZIP_U_IBDVTYPE
"RTN","IBCRHBSZ",90,0)
 .. S DA(1)=IBRGFN,DIK="^IBE(363.31,"_DA(1)_",11,",DA=IBDVFN D ^DIK
"RTN","IBCRHBSZ",91,0)
 ;
"RTN","IBCRHBSZ",92,0)
 I $O(ARRAY2(""))'="" D
"RTN","IBCRHBSZ",93,0)
 . ; check region settings against settings for primary division in host files
"RTN","IBCRHBSZ",94,0)
 . W @IOF,!,"********************************************************************************"
"RTN","IBCRHBSZ",95,0)
 . W !,"Error Found: Billing Regions found in Charge Master with Incorrect Zip or Type."
"RTN","IBCRHBSZ",96,0)
 . W !,"Billing Regions are defined by both the 3-digit zip code and Type of Facility."
"RTN","IBCRHBSZ",97,0)
 . W !!,"There are Charge Master Billing Regions whose Zip or Type do not match the "
"RTN","IBCRHBSZ",98,0)
 . W !,"settings of that primary division in the new host files.",!
"RTN","IBCRHBSZ",99,0)
 . ;
"RTN","IBCRHBSZ",100,0)
 . W !!,?3,"Billing Region",?32,"CM Zip-Type",?47,"HF Zip-Type",!,?3,"--------------------------------------------------------------------------"
"RTN","IBCRHBSZ",101,0)
 . S IBRGFN="" F  S IBRGFN=$O(ARRAY2(IBRGFN)) Q:IBRGFN=""  D
"RTN","IBCRHBSZ",102,0)
 .. S IBLN=ARRAY2(IBRGFN) W !,?3,IBRGFN,?35,$P(IBLN,U,1),"-",$P(IBLN,U,2),?50,$P(IBLN,U,3),"-",$P(IBLN,U,4)
"RTN","IBCRHBSZ",103,0)
 . ;
"RTN","IBCRHBSZ",104,0)
 . W !!,"IT IS POSSIBLE THERE ARE PROBLEMS WITH THE CHARGES, PLEASE CONTACT SUPPORT."
"RTN","IBCRHBSZ",105,0)
 . W !,"********************************************************************************",!
"RTN","IBCRHBSZ",106,0)
 . S DIR(0)="E" D ^DIR K DIR W @IOF
"RTN","IBCRHBSZ",107,0)
 ;
"RTN","IBCRHBSZ",108,0)
 I $O(ARRAY(0)) D
"RTN","IBCRHBSZ",109,0)
 . ; check regions primary division against the assigned divisions
"RTN","IBCRHBSZ",110,0)
 . W @IOF,!,"********************************************************************************"
"RTN","IBCRHBSZ",111,0)
 . W !,"Error Found:  Incorrect Billing Regions found in the Charge Master."
"RTN","IBCRHBSZ",112,0)
 . W !!,"Billing Regions are defined by the 3-digit zip code identifier and "
"RTN","IBCRHBSZ",113,0)
 . W !,"Type of Facility of the primary division.  Only Divisions with the "
"RTN","IBCRHBSZ",114,0)
 . W !,"same 3-digit zip code and type should be assigned to a Billing Region."
"RTN","IBCRHBSZ",115,0)
 . W !!,"There were Divisions incorrectly associated with Billing Regions in the"
"RTN","IBCRHBSZ",116,0)
 . W !,"Charge Master.  For the following Billing Regions, the corresponding "
"RTN","IBCRHBSZ",117,0)
 . W !,"Division has been deleted."
"RTN","IBCRHBSZ",118,0)
 . W !!,?3,"Billing Region",?43,"Division(s) Deleted",!,?3,"--------------------------------------------------------------------------"
"RTN","IBCRHBSZ",119,0)
 . ;
"RTN","IBCRHBSZ",120,0)
 . S IBRGFN=0 F  S IBRGFN=$O(ARRAY(IBRGFN)) Q:'IBRGFN  D
"RTN","IBCRHBSZ",121,0)
 .. S IBLN=ARRAY(IBRGFN) W !,?3,$E($P(IBLN,U,1),1,23),?26,"(",$P(IBLN,U,2),"-",$P(IBLN,U,3),")"
"RTN","IBCRHBSZ",122,0)
 .. ;
"RTN","IBCRHBSZ",123,0)
 .. S IBDV=0 F  S IBDV=$O(ARRAY(IBRGFN,IBDV)) Q:'IBDV  D
"RTN","IBCRHBSZ",124,0)
 ... S IBLN=ARRAY(IBRGFN,IBDV) W ?43,$P(IBLN,U,2),?50,$E($P(IBLN,U,1),1,20),?72,"(",$P(IBLN,U,3),"-",$P(IBLN,U,4),")",!
"RTN","IBCRHBSZ",125,0)
 . ;
"RTN","IBCRHBSZ",126,0)
 . W !,"IT IS LIKELY THE ABOVE DIVISIONS NO LONGER HAVE ANY REASONABLE CHARGES ASSIGNED."
"RTN","IBCRHBSZ",127,0)
 . W !,"********************************************************************************",!
"RTN","IBCRHBSZ",128,0)
 . S DIR(0)="E" D ^DIR K DIR W @IOF
"RTN","IBCRHBSZ",129,0)
 Q
"RTN","IBCRHL")
0^33^B17051350
"RTN","IBCRHL",1,0)
IBCRHL ;ALB/ARH - RATES: UPLOAD CHECK & ADD TO CM SEARCH ; 22-MAY-1996
"RTN","IBCRHL",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,138,245**;21-MAR-94
"RTN","IBCRHL",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRHL",4,0)
 ;
"RTN","IBCRHL",5,0)
 ; check data in XTMP files to see if it can be loaded into the Charge Master
"RTN","IBCRHL",6,0)
 ; file checks: Charge Set and Billable Items defined and match
"RTN","IBCRHL",7,0)
 ; line checks: these must be true for the item to be added to CM  (Errors)
"RTN","IBCRHL",8,0)
 ;               - item in source file and is active
"RTN","IBCRHL",9,0)
 ;                    - NDCs not checked since these are added to the source file (363.21) if not defined
"RTN","IBCRHL",10,0)
 ;               - if CPT and Modifier defined then modifier must be valid for the CPT
"RTN","IBCRHL",11,0)
 ;               - dates are in correct format
"RTN","IBCRHL",12,0)
 ;               - inactive date and modifier are not required
"RTN","IBCRHL",13,0)
 ; 
"RTN","IBCRHL",14,0)
 ; duplicates: the new charge for an Item is compared to any existing charges for the Item in the CM,
"RTN","IBCRHL",15,0)
 ;             duplicates are not added
"RTN","IBCRHL",16,0)
 ;               - possible duplicates: CS, item, eff dt, and modifier all match
"RTN","IBCRHL",17,0)
 ;                    - these are NOT counted as Duplicates, but as Errors so they can be displayed
"RTN","IBCRHL",18,0)
 ;                      individually on the reports
"RTN","IBCRHL",19,0)
 ;               - exact duplicates:  CS, item, eff dt, modifier, and Charge all match
"RTN","IBCRHL",20,0)
 ;                    - these will be counted as exact Duplicates and are not added to CM
"RTN","IBCRHL",21,0)
 ;               - removed IB*2*138: no change in charge: the same charge already exists for the item
"RTN","IBCRHL",22,0)
 ;                    - this is basically an exact duplicate except the effective date may be different
"RTN","IBCRHL",23,0)
 ;                    - these will be counted as exact Duplicates and are not added to CM
"RTN","IBCRHL",24,0)
 ; 
"RTN","IBCRHL",25,0)
 ; zero charge: Items uploaded with a with zero charge are not added to CM
"RTN","IBCRHL",26,0)
 ;               - on check report all items found with a zero charge are added to the Zero Count
"RTN","IBCRHL",27,0)
 ;               - if an active charge currently exists in CM for the item of the zero charge then
"RTN","IBCRHL",28,0)
 ;                    - the existing charge is inactivated by having an inactive date added
"RTN","IBCRHL",29,0)
 ;                    - the inactive date added is 1 day before the zero charges effective date
"RTN","IBCRHL",30,0)
 ;                    - the effective dates do not have to match, the charge just has to be active
"RTN","IBCRHL",31,0)
 ;                      on the zero charge effective date
"RTN","IBCRHL",32,0)
 ;                    - on the Add report these added to the Inactive Count
"RTN","IBCRHL",33,0)
 ;
"RTN","IBCRHL",34,0)
 ; Inactive Date: Tries to inactivate an existing entry if the Item uploaded is inactive
"RTN","IBCRHL",35,0)
 ;                - if a charge has an inactive date but is an exact duplicate of an existing charge
"RTN","IBCRHL",36,0)
 ;                    - the existing charge must match effective date and not already have an inactive date
"RTN","IBCRHL",37,0)
 ;                    - the inactive date will be added as the Inactive Date of the existing charge
"RTN","IBCRHL",38,0)
 ;                    - these will be counted as Duplicates during the Check but as Inactives during the Add
"RTN","IBCRHL",39,0)
 ;
"RTN","IBCRHL",40,0)
 ; NDC Numbers not already defined in 363.31 are automatically added
"RTN","IBCRHL",41,0)
 ;
"RTN","IBCRHL",42,0)
SRCH(FILE,ADD) ; search and check a particular Host file
"RTN","IBCRHL",43,0)
 ; results: ^TMP($J,FILE,SUBFILE) = ^ comment 1 ^ comment 2 ^ comment 3
"RTN","IBCRHL",44,0)
 ;          ^TMP($J,FILE,SUBFILE,X) = error # ^ comment/error
"RTN","IBCRHL",45,0)
 ;
"RTN","IBCRHL",46,0)
 N IBSUB,IBTSCNT,IBCS,IBCI,IBBI,IBADD,IBDUP,IBCNT,IBZERO,IBERR,IBINAC,IBLN,IBX,IBY,IBZ,IBITM,IBARR Q:$G(FILE)=""
"RTN","IBCRHL",47,0)
 K ^TMP($J,FILE) I $G(^XTMP(FILE,0))="" Q
"RTN","IBCRHL",48,0)
 I '$D(ZTQUEUED) W !!,$S(+$G(ADD):"Loading data into Charge Master:",1:"Data validity check on temporary files:")
"RTN","IBCRHL",49,0)
 ;
"RTN","IBCRHL",50,0)
 S IBSUB=0 F  S IBSUB=$O(^XTMP(FILE,IBSUB)) Q:IBSUB=""  D CHECKS
"RTN","IBCRHL",51,0)
 ;
"RTN","IBCRHL",52,0)
 Q
"RTN","IBCRHL",53,0)
 ;
"RTN","IBCRHL",54,0)
 ;
"RTN","IBCRHL",55,0)
CHECKS ;
"RTN","IBCRHL",56,0)
 S IBTSCNT=+$G(^XTMP(FILE,IBSUB))
"RTN","IBCRHL",57,0)
 S IBCS=+$P($G(^XTMP(FILE,IBSUB)),U,3) I '+IBCS Q
"RTN","IBCRHL",58,0)
 S IBBI=$$CSBI^IBCRU3(+IBCS)
"RTN","IBCRHL",59,0)
 I '$D(ZTQUEUED) W !!,FILE,?35,IBSUB,?50
"RTN","IBCRHL",60,0)
 ;
"RTN","IBCRHL",61,0)
 S IBY=$$CHKFL^IBCRHU1(IBCS,FILE,IBSUB) I +IBY D SETF(IBY) Q
"RTN","IBCRHL",62,0)
 ;
"RTN","IBCRHL",63,0)
 S (IBDUP,IBERR,IBADD,IBINAC,IBZERO,IBCNT,IBX)=0
"RTN","IBCRHL",64,0)
 ;
"RTN","IBCRHL",65,0)
 F  S IBX=$O(^XTMP(FILE,IBSUB,IBX)) Q:'IBX  D  Q:+IBY=3
"RTN","IBCRHL",66,0)
 . I '$D(ZTQUEUED),'(IBCNT#100) W "."
"RTN","IBCRHL",67,0)
 . S IBY=0,IBCNT=IBCNT+1,IBLN=$G(^XTMP(FILE,IBSUB,IBX)) Q:IBLN=""
"RTN","IBCRHL",68,0)
 . S IBITM=$$ITPTR^IBCRU2(IBBI,$P(IBLN,U,1))
"RTN","IBCRHL",69,0)
 . ;
"RTN","IBCRHL",70,0)
 . I +$G(ADD),'IBITM,+IBBI=3 S IBITM=$$ADDBI^IBCREF("NDC",$P(IBLN,U,1)) Q:'IBITM
"RTN","IBCRHL",71,0)
 . ;
"RTN","IBCRHL",72,0)
 . I '$P(IBLN,U,4) D  S:'IBCI IBZERO=IBZERO+1 Q
"RTN","IBCRHL",73,0)
 .. S IBCI=0 K IBARR I '$G(ADD)!+IBY Q
"RTN","IBCRHL",74,0)
 .. D ITMCHG^IBCRCC(IBCS,IBITM,$P(IBLN,U,2),$P(IBLN,U,5),.IBARR) S IBCI=+$G(IBARR(1))
"RTN","IBCRHL",75,0)
 .. I +IBCI S IBZ=$$FMADD^XLFDT($P(IBLN,U,2),-1) D EDITCI^IBCREF(+IBCI,"","","",IBZ) S IBINAC=IBINAC+1
"RTN","IBCRHL",76,0)
 . ;
"RTN","IBCRHL",77,0)
 . I +$G(ADD),+$P(IBLN,U,3) D  I +IBCI Q
"RTN","IBCRHL",78,0)
 .. S IBCI=$$FINDCI^IBCRU4(IBCS,IBITM,$P(IBLN,U,2),$P(IBLN,U,5),"",$P(IBLN,U,4),"",,$P(IBLN,U,6))
"RTN","IBCRHL",79,0)
 .. I +IBCI D EDITCI^IBCREF(IBCI,"","","",$P(IBLN,U,3)) S IBINAC=IBINAC+1
"RTN","IBCRHL",80,0)
 . ;
"RTN","IBCRHL",81,0)
 . S IBY=$$CHKLN^IBCRHU1(IBBI,IBLN) I +IBY D SETL(IBY) S IBERR=IBERR+1 Q
"RTN","IBCRHL",82,0)
 . ;
"RTN","IBCRHL",83,0)
 . S IBY=$$CHKDUP^IBCRHU1(IBCS,IBLN,+$G(ADD)) I +IBY S:+IBY=2 IBDUP=IBDUP+1 D:+IBY'=2 SETL(IBY) S:+IBY<2 IBERR=IBERR+1 Q
"RTN","IBCRHL",84,0)
 . ;
"RTN","IBCRHL",85,0)
 . I +$G(ADD),'IBY D
"RTN","IBCRHL",86,0)
 .. I $$ADDCI^IBCREF(IBCS,IBITM,$P(IBLN,U,2),+$P(IBLN,U,4),"",$P(IBLN,U,5),$P(IBLN,U,3),$P(IBLN,U,6)) S IBADD=IBADD+1
"RTN","IBCRHL",87,0)
 ;
"RTN","IBCRHL",88,0)
 I +IBCNT,$G(^TMP($J,FILE,IBSUB))="" D  D SETF(IBY)
"RTN","IBCRHL",89,0)
 . S IBZ=((IBERR/IBCNT)*100)
"RTN","IBCRHL",90,0)
 . S IBY="0^"_IBCNT_" of "_IBTSCNT_" records checked, "_IBDUP_" duplicates, "_IBZERO_" with $=0^"_IBERR_" line/data errors or warnings found for a "_+$FN(IBZ,"",2)_"% error rate.^"
"RTN","IBCRHL",91,0)
 . ;
"RTN","IBCRHL",92,0)
 . I +$G(ADD),+IBINAC S IBY=IBY_IBINAC_" charges items inactivated,  "
"RTN","IBCRHL",93,0)
 . I +$G(ADD) S IBY=IBY_IBADD_" entries added to the Charge Set "_$P($G(^IBE(363.1,+IBCS,0)),U,1)_"."
"RTN","IBCRHL",94,0)
 Q
"RTN","IBCRHL",95,0)
 ;
"RTN","IBCRHL",96,0)
SETF(ERROR) ;
"RTN","IBCRHL",97,0)
 S ^TMP($J,FILE,IBSUB)=ERROR
"RTN","IBCRHL",98,0)
 Q
"RTN","IBCRHL",99,0)
SETL(ERROR) ;
"RTN","IBCRHL",100,0)
 S ^TMP($J,FILE,IBSUB,IBX)=ERROR
"RTN","IBCRHL",101,0)
 Q
"RTN","IBCRHU1")
0^34^B24883195
"RTN","IBCRHU1",1,0)
IBCRHU1 ;ALB/ARH - RATES: UPLOAD UTILITIES ; 22-MAY-1996
"RTN","IBCRHU1",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,138,245**;21-MAR-94
"RTN","IBCRHU1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRHU1",4,0)
 ;
"RTN","IBCRHU1",5,0)
 ;
"RTN","IBCRHU1",6,0)
GETXTMP(IBXRF,ARR,ARR1,CS) ; get list of available files
"RTN","IBCRHU1",7,0)
 ; Output: ARR(file) = upload file description ^ total cnt
"RTN","IBCRHU1",8,0)
 ;         ARR(file,subfile) = I ^ count ^ billable item type ^ charge set
"RTN","IBCRHU1",9,0)
 ;         ARR1(I) = file ^ subfile
"RTN","IBCRHU1",10,0)
 ;
"RTN","IBCRHU1",11,0)
 N IBX,IBY,IBL,CNT,IBLN,IBLN1 K ARR,ARR1 S (CNT,ARR,ARR1)=0 I $G(IBXRF)="" S IBXRF="IBCR UPLOAD"
"RTN","IBCRHU1",12,0)
 S IBL=$L(IBXRF),IBY=$E(IBXRF,IBL),IBY=$A(IBY)-1,IBY=$C(IBY),IBX=$E(IBXRF,1,(IBL-1))_IBY_"~"
"RTN","IBCRHU1",13,0)
 F  S IBX=$O(^XTMP(IBX)) Q:IBX=""!(IBX'[IBXRF)  I IBX[IBXRF D
"RTN","IBCRHU1",14,0)
 . S IBLN=$G(^XTMP(IBX,0)) Q:IBLN=""
"RTN","IBCRHU1",15,0)
 . S IBY=0 F  S IBY=$O(^XTMP(IBX,IBY)) Q:IBY=""  D
"RTN","IBCRHU1",16,0)
 .. S IBLN1=$G(^XTMP(IBX,IBY)) Q:IBLN1=""  I +$G(CS),'$P(IBLN1,U,3) Q
"RTN","IBCRHU1",17,0)
 .. S CNT=CNT+1,(ARR,ARR1)=CNT,ARR1(CNT)=IBX_U_IBY
"RTN","IBCRHU1",18,0)
 .. S ARR(IBX)=$P(IBLN,U,3,4),ARR(IBX,IBY)=CNT_U_IBLN1
"RTN","IBCRHU1",19,0)
 Q
"RTN","IBCRHU1",20,0)
 ;
"RTN","IBCRHU1",21,0)
DISP(ARR) ; display list of available files by number
"RTN","IBCRHU1",22,0)
 ;
"RTN","IBCRHU1",23,0)
 N IBX,IBY,IBLN,IBFCNT S IBFCNT=0
"RTN","IBCRHU1",24,0)
 S IBX="" F  S IBX=$O(ARR(IBX)) Q:IBX=""  D
"RTN","IBCRHU1",25,0)
 . S IBLN=ARR(IBX),IBFCNT=IBFCNT+1
"RTN","IBCRHU1",26,0)
 . W !!,?5,IBX,?55,"Count = ",$P(IBLN,U,2)
"RTN","IBCRHU1",27,0)
 . W !,?5,$P(IBLN,U,1)
"RTN","IBCRHU1",28,0)
 . W !!,?6,"Subfile",?30,"Item",?39,"Count",?49,"Charge Set",!,?6,"-------",?30,"----",?39,"-----",?49,"-------------------------"
"RTN","IBCRHU1",29,0)
 . S IBY="" F  S IBY=$O(ARR(IBX,IBY)) Q:IBY=""  D
"RTN","IBCRHU1",30,0)
 .. S IBLN=ARR(IBX,IBY)
"RTN","IBCRHU1",31,0)
 .. W !,?2,+IBLN,?6,IBY,?30,$E($$EXPAND^IBCRU1(363.3,.04,$P(IBLN,U,3)),1,5),?39,$P(IBLN,U,2),?49,$E($P($G(^IBE(363.1,+$P(IBLN,U,4),0)),U,1),1,30)
"RTN","IBCRHU1",32,0)
 W !
"RTN","IBCRHU1",33,0)
 Q
"RTN","IBCRHU1",34,0)
 ;
"RTN","IBCRHU1",35,0)
DISP1(IBXRF,ARR,ARR1,CS) ; get and display uploaded files
"RTN","IBCRHU1",36,0)
 D GETXTMP($G(IBXRF),.ARR,.ARR1,$G(CS))
"RTN","IBCRHU1",37,0)
 D DISP(.ARR)
"RTN","IBCRHU1",38,0)
 Q
"RTN","IBCRHU1",39,0)
 ;
"RTN","IBCRHU1",40,0)
CHKDUP(CS,IBLN,ADD) ; check that item would not be a duplicate
"RTN","IBCRHU1",41,0)
 ; check on same charge but different date removed so each version is complete even if the charge does not change
"RTN","IBCRHU1",42,0)
 N IBX,IBBI,IBITEM,IBARR S IBX=0
"RTN","IBCRHU1",43,0)
 S IBBI=$$CSBI^IBCRU3($G(CS)) I 'IBBI S IBX="3^Subfile/Set Error: No Billable Item for the Charge Set" G CHKDUPQ
"RTN","IBCRHU1",44,0)
 S IBITEM=+$$ITPTR^IBCRU2(+IBBI,$P($G(IBLN),U,1))
"RTN","IBCRHU1",45,0)
 I 'IBITEM,+IBBI=3,'$G(ADD) S IBX=0 G CHKDUPQ ; new NDC numbers
"RTN","IBCRHU1",46,0)
 I 'IBITEM S IBX="2^Line/Data Error: Item not found in source file" G CHKDUPQ
"RTN","IBCRHU1",47,0)
 I $$FINDCI^IBCRU4(CS,IBITEM,$P(IBLN,U,2),$P(IBLN,U,5),"",$J($P(IBLN,U,4),"",2),,,$P(IBLN,U,6)) S IBX="2^Line/Data Error:  Duplicate found, the same charge already exists for this item and effective date" G CHKDUPQ
"RTN","IBCRHU1",48,0)
 I $$FINDCI^IBCRU4(CS,IBITEM,$P(IBLN,U,2),$P(IBLN,U,5)) S IBX="1^Line/Data Warning:  Potential duplicate, a charge already exists for this item and effective date" G CHKDUPQ
"RTN","IBCRHU1",49,0)
 ;I '$P(IBLN,U,3) D ITMCHG^IBCRCC(CS,IBITEM,$P(IBLN,U,2),$P(IBLN,U,5),.IBARR) I +IBARR=1,+$P(IBARR,U,2)=+$P(IBLN,U,4) S IBX="2^Line/Data Error:  Charge for item is not modified by the new entry" G CHKDUPQ
"RTN","IBCRHU1",50,0)
CHKDUPQ Q IBX
"RTN","IBCRHU1",51,0)
 ;
"RTN","IBCRHU1",52,0)
CHKLN(BI,IBLN) ; check if data in line item is valid Billable Item
"RTN","IBCRHU1",53,0)
 ; Input:  IBLN= item ^ eff dt ^ inact dt ^ charge ^ cpt modifier
"RTN","IBCRHU1",54,0)
 ; Output: if data not good:  x ^ error description
"RTN","IBCRHU1",55,0)
 ;                               w/  x=1 - line/data warning - bad data but field not required
"RTN","IBCRHU1",56,0)
 ;                                   x=2 - line/data error - bad required data, item can not be loaded into CM
"RTN","IBCRHU1",57,0)
 ;                                   x=3 - subfile/set error stop all processing
"RTN","IBCRHU1",58,0)
 ; do not have to check if NDC is in source, since it is added if not there
"RTN","IBCRHU1",59,0)
 ; check on cpt-modifier pair removed with RC v2.0, charge pairings do not match official pairings
"RTN","IBCRHU1",60,0)
 N IBX,IBCSBR,IBITEM S IBX=0
"RTN","IBCRHU1",61,0)
 I +$G(BI)'=3 S IBITEM=+$$ITPTR^IBCRU2(+$G(BI),$P($G(IBLN),U,1)) I 'IBITEM S IBX="2^Line/Data Error: Item not found in source file" G CHKLNQ
"RTN","IBCRHU1",62,0)
 I +$G(BI)'=3,'$$ITFILE^IBCRU2(+$G(BI),IBITEM,$P(IBLN,U,2)) S IBX="2^Line/Data Error: Not a valid active Item in source file" G CHKLNQ
"RTN","IBCRHU1",63,0)
 I +$G(BI)=2,+$P(IBLN,U,5),'$P($$MOD^ICPTMOD(+$P(IBLN,U,5),"I",+$P(IBLN,U,2)),U,7) S IBX="2^Line/Data Error: Not a valid active Modifier" G CHKLNQ
"RTN","IBCRHU1",64,0)
 ;I +$G(BI)=2,+$P(IBLN,U,5),+$$MODP^ICPTMOD(+IBITEM,+$P(IBLN,U,5),"I",$P(IBLN,U,2))<1 S IBX="2^Line/Data Error: Modifier "_$P($$MOD^ICPTMOD(+$P(IBLN,U,5),"I"),U,2)_" can not be used with CPT "_$P(IBLN,U,1) G CHKLNQ
"RTN","IBCRHU1",65,0)
 I '$$VDATE($P(IBLN,U,2)) S IBX="2^Line/Data Error: Invalid Effective Date" G CHKLNQ
"RTN","IBCRHU1",66,0)
 I $P(IBLN,U,3),'$$VDATE($P(IBLN,U,3)) S IBX="1^Line/Data Warning: Invalid Inactive Date" G CHKLNQ
"RTN","IBCRHU1",67,0)
CHKLNQ Q IBX
"RTN","IBCRHU1",68,0)
 ;
"RTN","IBCRHU1",69,0)
CHKFL(CS,FILE,IBSUBFL) ; Check the Charge Set and Host file are defined and match ok
"RTN","IBCRHU1",70,0)
 ; Output: if check is ok:    0
"RTN","IBCRHU1",71,0)
 ;         if data not good:  x ^ error description
"RTN","IBCRHU1",72,0)
 ;                                w/ x=3 - subfile/set error stop all processing
"RTN","IBCRHU1",73,0)
 N IBX,IBY,IBCSBI S IBX=0
"RTN","IBCRHU1",74,0)
 I '$G(CS) S IBX="3^Subfile/Set Error: No Charge Set Defined" G CHKFLQ
"RTN","IBCRHU1",75,0)
 S IBCSBI=$$CSBI^IBCRU3(CS) I 'IBCSBI S IBX="3^Subfile/Set Error: No Billable Item for the Charge Set" G CHKFLQ
"RTN","IBCRHU1",76,0)
 ;
"RTN","IBCRHU1",77,0)
 I $G(FILE)="" S IBX="3^Subfile/Set Error: Invalid Host File Name" G CHKFLQ
"RTN","IBCRHU1",78,0)
 S IBY=$G(^XTMP(FILE,0)) I IBY="" S IBX="3^Subfile/Set Error: Host File Name Not Defined" G CHKFLQ
"RTN","IBCRHU1",79,0)
 ;
"RTN","IBCRHU1",80,0)
 I $G(IBSUBFL)="" S IBX="3^Subfile/Set Error: Invalid Sub-File Name" G CHKFLQ
"RTN","IBCRHU1",81,0)
 S IBY=$G(^XTMP(FILE,IBSUBFL)) I IBY="" S IBX="3^Subfile/Set Error: File Subset Not Defined" G CHKFLQ
"RTN","IBCRHU1",82,0)
 I +IBCSBI'=+$P(IBY,U,2) S IBX="3^Subfile/Set Error: Charge Set rate Billable Item ("_$P(IBCSBI,U,2)_") does not match Host file Item ("_$$EXPAND^IBCRU1(363.3,.04,+$P(IBY,U,2))_")" G CHKFLQ
"RTN","IBCRHU1",83,0)
CHKFLQ Q IBX
"RTN","IBCRHU1",84,0)
 ;
"RTN","IBCRHU1",85,0)
VDATE(X) ; check for valid date
"RTN","IBCRHU1",86,0)
 N Y S Y=0 I +$G(X)?7N,X>2801010,X<3091232 S Y=1
"RTN","IBCRHU1",87,0)
 Q Y
"RTN","IBCRHU2")
0^35^B31268050
"RTN","IBCRHU2",1,0)
IBCRHU2 ;ALB/ARH - RATES: UPLOAD UTILITIES (ADD CM ELEMENTS) ; 10-OCT-1998
"RTN","IBCRHU2",2,0)
 ;;2.0;INTEGRATED BILLING;**106,138,245**;21-MAR-94
"RTN","IBCRHU2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRHU2",4,0)
 ;
"RTN","IBCRHU2",5,0)
RG(NAME,DIV,ID,TY) ; add a new Billing Region for Reasonable Charges (363.31), input region name, MC division site #
"RTN","IBCRHU2",6,0)
 ; returns IFN of billing region (new or existing) ^ region name, null otherwise
"RTN","IBCRHU2",7,0)
 ; the division number surrounded by spaces is expected in the name for any match to be made
"RTN","IBCRHU2",8,0)
 N IBA,IBDV,IBFN,IBNEW,IBX,DD,DO,DLAYGO,DIC,DIE,DA,DR,X,Y S DIV=$G(DIV),IBDV="",(IBFN,IBNEW)=0
"RTN","IBCRHU2",9,0)
 I $G(NAME)="" G RGQ
"RTN","IBCRHU2",10,0)
 I NAME[" (DIV)" S NAME=$P(NAME," (DIV)",1)_$P(NAME," (DIV)",2)
"RTN","IBCRHU2",11,0)
 I NAME[" (2)" S NAME=$P(NAME," (2)",1)_$P(NAME," (2)",2)
"RTN","IBCRHU2",12,0)
 I NAME[" (3)" S NAME=$P(NAME," (2)",1)_$P(NAME," (3)",2)
"RTN","IBCRHU2",13,0)
 ;
"RTN","IBCRHU2",14,0)
 S IBX="" F  S IBX=$O(^IBE(363.31,"B",IBX)) Q:IBX=""  I IBX[(" "_DIV_" ") S IBFN=$O(^IBE(363.31,"B",IBX,0)) Q
"RTN","IBCRHU2",15,0)
 I +IBFN S IBFN=IBFN_U_$E(IBX,1,30),IBNEW=0 G RGQ
"RTN","IBCRHU2",16,0)
 ;
"RTN","IBCRHU2",17,0)
 S IBDV=$$DIV(DIV) I 'IBDV D MSG("     *** Warning: No MC division "_DIV_" defined, no division added to Region")
"RTN","IBCRHU2",18,0)
 ;
"RTN","IBCRHU2",19,0)
 I $G(ID)'="" S DIC("DR")=".02////"_$E(ID,1,10)_";"
"RTN","IBCRHU2",20,0)
 I $G(TY)'="" S DIC("DR")=DIC("DR")_".03////"_$E(TY,1,10)
"RTN","IBCRHU2",21,0)
 K DD,DO S DLAYGO=363.31,DIC="^IBE(363.31,",DIC(0)="L",X=$E(NAME,1,30) D FILE^DICN K DIC I Y<1 K X,Y Q
"RTN","IBCRHU2",22,0)
 S IBFN=Y,IBNEW=1
"RTN","IBCRHU2",23,0)
 ;
"RTN","IBCRHU2",24,0)
 I +IBDV S DLAYGO=363.31,DA(1)=+IBFN,DIC="^IBE(363.31,"_DA(1)_",11,",DIC(0)="L",X=+IBDV,DIC("P")="363.3111P" D ^DIC K DIC,DIE,DLAYGO
"RTN","IBCRHU2",25,0)
 ;
"RTN","IBCRHU2",26,0)
RGQ I +IBNEW!($D(IBA)) S IBA(1)="  >> "_$E(NAME,1,30)_" Billing Region "_$S('$G(IBFN):"NOT ",1:"")_"added "_$S(+IBDV:"for MCD "_$P(IBDV,U,3)_" "_$P(IBDV,U,2),1:"") D MSGP
"RTN","IBCRHU2",27,0)
 Q $G(IBFN)
"RTN","IBCRHU2",28,0)
 ;
"RTN","IBCRHU2",29,0)
CS(NAME,RATE,EVENT,RG,CT,RV,BS) ; add Charge Set for Reasonable Charges (363.1), all input in external form
"RTN","IBCRHU2",30,0)
 ; returns IFN of new charge set, 0 otherwise
"RTN","IBCRHU2",31,0)
 N IBA,IBBR,IBBE,IBRG,IBRV,IBBS,IBCT,IBOK,IBFN,IBCSN,IBJ,DD,DO,DLAYGO,DINUM,DIC,DIE,DA,DR,X,Y,IBFND S IBOK=1
"RTN","IBCRHU2",32,0)
 S NAME=$G(NAME),RATE=$G(RATE),EVENT=$G(EVENT),RG=$G(RG),CT=$G(CT),RV=$G(RV),BS=$G(BS) I NAME=""!(RATE="") G CSQ
"RTN","IBCRHU2",33,0)
 ;
"RTN","IBCRHU2",34,0)
 S IBFND=+$O(^IBE(363.1,"B",$E(NAME,1,30),0)) I +IBFND S IBFN=IBFND,IBCSN=NAME G CSQ
"RTN","IBCRHU2",35,0)
 ;
"RTN","IBCRHU2",36,0)
 S IBBR=$O(^IBE(363.3,"B",RATE,0)) I 'IBBR S IBOK=0 D MSG("     *** Error: "_RATE_" Billing Rate does not exist")
"RTN","IBCRHU2",37,0)
 S IBBE=$$MCCRUTL(EVENT,14) I 'IBBE S IBOK=0 D MSG("     *** Error: "_EVENT_" Billable Event undefined")
"RTN","IBCRHU2",38,0)
 S IBRG="" I RG'="" S IBRG=$O(^IBE(363.31,"B",$E(RG,1,30),0))
"RTN","IBCRHU2",39,0)
 I 'IBRG,RG'="" S IBOK=0 D MSG("     *** Error: "_$E(RG,1,30)_" Billing Region does not exist")
"RTN","IBCRHU2",40,0)
 I '$G(IBOK) G CSQ
"RTN","IBCRHU2",41,0)
 S IBRV=$$RVCD(RV) I 'IBRV D MSG("     *** Warning: No default revenue code added for Charge Set")
"RTN","IBCRHU2",42,0)
 S IBBS=$$MCCRUTL(BS,5) I 'IBBS D MSG("     *** Warning: No default bedsection added for Charge Set")
"RTN","IBCRHU2",43,0)
 S IBCT=$S($E(CT)="I":1,$E(CT)="P":2,1:"")
"RTN","IBCRHU2",44,0)
 ;
"RTN","IBCRHU2",45,0)
 F IBJ=1:1 S IBFN=$G(^IBE(363.1,IBJ,0)) I IBFN="" S DINUM=IBJ Q
"RTN","IBCRHU2",46,0)
 ;
"RTN","IBCRHU2",47,0)
 K DD,DO S DLAYGO=363.1,DIC="^IBE(363.1,",DIC(0)="L",X=$E(NAME,1,30) D FILE^DICN K DIC K DIC,DINUM,DLAYGO I Y<1 K X,Y Q
"RTN","IBCRHU2",48,0)
 S IBFN=+Y,IBCSN=$P(Y,U,2)
"RTN","IBCRHU2",49,0)
 ;
"RTN","IBCRHU2",50,0)
 S DR=".02////"_IBBR_";.03////"_IBBE_";.04////"_IBCT_";.07////"_IBRG
"RTN","IBCRHU2",51,0)
 I +IBRV S DR=DR_";.05////"_IBRV
"RTN","IBCRHU2",52,0)
 I +IBBS S DR=DR_";.06////"_IBBS
"RTN","IBCRHU2",53,0)
 S DIE="^IBE(363.1,",DA=+IBFN D ^DIE K DIE,DA,DR,X,Y
"RTN","IBCRHU2",54,0)
 ;
"RTN","IBCRHU2",55,0)
 ;
"RTN","IBCRHU2",56,0)
CSQ I +$G(IBFN),$G(IBCSN)'="" D RS(IBCSN)
"RTN","IBCRHU2",57,0)
 ;
"RTN","IBCRHU2",58,0)
 S IBA(1)="  >> "_$E(NAME,1,30)_" Charge Set "_$S('$G(IBFN):"NOT ",1:"")_$S(+$G(IBFND):"used",1:"added") D MSGP
"RTN","IBCRHU2",59,0)
 Q +$G(IBFN)
"RTN","IBCRHU2",60,0)
 ;
"RTN","IBCRHU2",61,0)
USECS(CSN) ; return an existing CS for a set of RC charges, given the name to look for, or write an error message
"RTN","IBCRHU2",62,0)
 N IBCS S IBCS=0
"RTN","IBCRHU2",63,0)
 I $G(CSN)'="" S IBCS=$O(^IBE(363.1,"B",$E(CSN,1,30),0))
"RTN","IBCRHU2",64,0)
 I 'IBCS W !,"     *** Warning:  No Charge Set found for these charges"
"RTN","IBCRHU2",65,0)
 I +IBCS W !,"  >> "_$E(CSN,1,30)_" Charge Set used"
"RTN","IBCRHU2",66,0)
 Q IBCS
"RTN","IBCRHU2",67,0)
 ;
"RTN","IBCRHU2",68,0)
MCCRUTL(X,P) ; returns IFN of item in 399.1 if Name is found and piece P is true
"RTN","IBCRHU2",69,0)
 N IBX,IBY S IBY=""
"RTN","IBCRHU2",70,0)
 I $G(X)'="" S IBX=0 F  S IBX=$O(^DGCR(399.1,"B",X,IBX)) Q:'IBX  I $P($G(^DGCR(399.1,IBX,0)),U,+$G(P)) S IBY=IBX
"RTN","IBCRHU2",71,0)
 Q IBY
"RTN","IBCRHU2",72,0)
 ;
"RTN","IBCRHU2",73,0)
RVCD(RVCD) ; check for valid revenue code (#399.2), input either revenue code or revenue code IFN
"RTN","IBCRHU2",74,0)
 ; returns IFN if revenue code is valid and active, null otherwise
"RTN","IBCRHU2",75,0)
 N IBX,IBY S IBY=""
"RTN","IBCRHU2",76,0)
 I +$G(RVCD) S IBX=$G(^DGCR(399.2,+RVCD,0)) I +$P(IBX,U,3) S IBY=+RVCD
"RTN","IBCRHU2",77,0)
 Q IBY
"RTN","IBCRHU2",78,0)
 ;
"RTN","IBCRHU2",79,0)
DIV(DIV) ; check for valid medical center division (#40.8), input facility/site number
"RTN","IBCRHU2",80,0)
 ; returns 'IFN ^ name ^ #' of division if it exists in Medical Center Division file (40.8), 0 otherwise
"RTN","IBCRHU2",81,0)
 N IBX,IBY S IBX=0
"RTN","IBCRHU2",82,0)
 I $G(DIV)'="" S DIV=+$O(^DG(40.8,"C",DIV,0))
"RTN","IBCRHU2",83,0)
 I +$G(DIV) S IBY=$G(^DG(40.8,+DIV,0)) I IBY'="" S IBX=DIV_U_$P(IBY,U,1,2)
"RTN","IBCRHU2",84,0)
 Q IBX
"RTN","IBCRHU2",85,0)
 ;
"RTN","IBCRHU2",86,0)
MSG(X) ; add message to end of message list, reserves IBA(1) for primary message
"RTN","IBCRHU2",87,0)
 N IBX S IBX=$O(IBA(999999),-1) S:'IBX IBX=1 S IBX=IBX+1
"RTN","IBCRHU2",88,0)
 S IBA(IBX)=$G(X)
"RTN","IBCRHU2",89,0)
 Q
"RTN","IBCRHU2",90,0)
MSGP ; print error messages in IBA
"RTN","IBCRHU2",91,0)
 N IBX S IBX="" F  S IBX=$O(IBA(IBX)) Q:'IBX  W !,IBA(IBX)
"RTN","IBCRHU2",92,0)
 Q
"RTN","IBCRHU2",93,0)
 ;
"RTN","IBCRHU2",94,0)
 ;
"RTN","IBCRHU2",95,0)
RS(CSN) ; add new RC Charge Sets to Rate Schedules, input Charge Set Name
"RTN","IBCRHU2",96,0)
 ; finds the RS to add the CS to based on the effective/inactive dates of the RS and version being loaded
"RTN","IBCRHU2",97,0)
 ; for RC 1.x only adds physician to inpt if there was also inpatient facility charges
"RTN","IBCRHU2",98,0)
 N IBCSFN,IBRSN,IBRS,IBRS0,IBRSLST,IBVBEG,IBVEND,IBVERS,IBAUTO,IBFND,IBSITE,IBI,DINUM,DD,DO,DLAYGO,DIC,DIE,DA,DR,X,Y
"RTN","IBCRHU2",99,0)
 ;
"RTN","IBCRHU2",100,0)
 I $G(CSN)="" Q
"RTN","IBCRHU2",101,0)
 S IBCSFN=$O(^IBE(363.1,"B",$E(CSN,1,30),0)) I 'IBCSFN Q
"RTN","IBCRHU2",102,0)
 S IBAUTO=1 I $P($G(^IBE(363.3,+$P($G(^IBE(363.1,+IBCSFN,0)),U,2),0)),U,4)=9 S IBAUTO=""
"RTN","IBCRHU2",103,0)
 S IBVERS=$$VERSION^IBCRHBRV,IBVBEG=$$VERSDT^IBCRHBRV,IBVEND=$$VERSEDT^IBCRHBRV,IBFND=1
"RTN","IBCRHU2",104,0)
 S IBI=$L(CSN," "),IBSITE=$P(CSN," ",IBI)
"RTN","IBCRHU2",105,0)
 ;
"RTN","IBCRHU2",106,0)
 I IBVERS<2 D
"RTN","IBCRHU2",107,0)
 . I CSN["INPT " S IBRSLST="RI-INPT,NF-INPT,WC-INPT"
"RTN","IBCRHU2",108,0)
 . I CSN["SNF " S IBRSLST="RI-INPT,NF-INPT,WC-INPT"
"RTN","IBCRHU2",109,0)
 . I CSN["OPT " S IBRSLST="RI-OPT,NF-OPT,WC-OPT"
"RTN","IBCRHU2",110,0)
 . I CSN["PHYS" S IBRSLST="RI-OPT,NF-OPT,WC-OPT"
"RTN","IBCRHU2",111,0)
 . I CSN["PHYS",$O(^IBE(363.1,"B","RC-INPT ANC "_IBSITE,0)) S IBRSLST=IBRSLST_",RI-INPT,NF-INPT,WC-INPT"
"RTN","IBCRHU2",112,0)
 ;
"RTN","IBCRHU2",113,0)
 I IBVERS'<2 D
"RTN","IBCRHU2",114,0)
 . I CSN["INPT " S IBRSLST="RI-INPT,NF-INPT,WC-INPT"
"RTN","IBCRHU2",115,0)
 . I CSN["SNF " S IBRSLST="RI-SNF,NF-SNF,WC-SNF"
"RTN","IBCRHU2",116,0)
 . I CSN["OPT " S IBRSLST="RI-OPT,NF-OPT,WC-OPT"
"RTN","IBCRHU2",117,0)
 . I CSN[" FS " S IBRSLST="RI-OPT,NF-OPT,WC-OPT"
"RTN","IBCRHU2",118,0)
 I $G(IBRSLST)="" Q
"RTN","IBCRHU2",119,0)
 ;
"RTN","IBCRHU2",120,0)
 F IBI=1:1 S IBRSN=$P(IBRSLST,",",IBI) Q:IBRSN=""  D
"RTN","IBCRHU2",121,0)
 . S IBRS=0 F  S IBRS=$O(^IBE(363,"B",IBRSN,IBRS)) Q:'IBRS  D  Q:+IBFND
"RTN","IBCRHU2",122,0)
 .. S IBRS0=$G(^IBE(363,IBRS,0))
"RTN","IBCRHU2",123,0)
 .. I +$P(IBRS0,U,6),$P(IBRS0,U,6)<IBVBEG S IBFND=0 Q
"RTN","IBCRHU2",124,0)
 .. I +IBVEND,+$P(IBRS0,U,5),$P(IBRS0,U,5)>IBVEND S IBFND=0 Q
"RTN","IBCRHU2",125,0)
 .. S IBFND=1 I $O(^IBE(363,+IBRS,11,"B",+IBCSFN,0)) Q
"RTN","IBCRHU2",126,0)
 .. I +IBAUTO S DIC("DR")=".02////"_1
"RTN","IBCRHU2",127,0)
 .. S DLAYGO=363,DA(1)=+IBRS,DIC="^IBE(363,"_DA(1)_",11,",DIC(0)="LX",X=CSN,DIC("P")="363.0011P" D ^DIC K DIC,DIE
"RTN","IBCRHU2",128,0)
 Q
"RTN","IBCRLG")
0^36^B6639689
"RTN","IBCRLG",1,0)
IBCRLG ;ALB/ARH - RATES: DISPLAY BILLING REGIONS ; 16-MAY-1996
"RTN","IBCRLG",2,0)
 ;;2.0;INTEGRATED BILLING;**52,115,138,245**;21-MAR-94
"RTN","IBCRLG",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRLG",4,0)
 ;
"RTN","IBCRLG",5,0)
EN ; -- main entry point for IBCR BILLING REGION
"RTN","IBCRLG",6,0)
 D EN^VALM("IBCR BILLING REGION")
"RTN","IBCRLG",7,0)
 Q
"RTN","IBCRLG",8,0)
 ;
"RTN","IBCRLG",9,0)
HDR ; -- header code
"RTN","IBCRLG",10,0)
 S VALMHDR(1)="Regions/localities covered by the same charges"
"RTN","IBCRLG",11,0)
 Q
"RTN","IBCRLG",12,0)
 ;
"RTN","IBCRLG",13,0)
INIT ; -- init variables and list array
"RTN","IBCRLG",14,0)
 K ^TMP("IBCRLG",$J)
"RTN","IBCRLG",15,0)
 D BLD
"RTN","IBCRLG",16,0)
 Q
"RTN","IBCRLG",17,0)
 ;
"RTN","IBCRLG",18,0)
HELP ; -- help code
"RTN","IBCRLG",19,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCRLG",20,0)
 Q
"RTN","IBCRLG",21,0)
 ;
"RTN","IBCRLG",22,0)
EXIT ; -- exit code
"RTN","IBCRLG",23,0)
 K ^TMP("IBCRLG",$J)
"RTN","IBCRLG",24,0)
 D CLEAR^VALM1,CLEAN^VALM10
"RTN","IBCRLG",25,0)
 Q
"RTN","IBCRLG",26,0)
 ;
"RTN","IBCRLG",27,0)
BLD ; build LM array for billing region display
"RTN","IBCRLG",28,0)
 N IBRGN,IBRGFN,IBRG0,IBDVN,IBDV0,IBX,IBY,IBIST,IBIS0 S VALMCNT=0
"RTN","IBCRLG",29,0)
 ;
"RTN","IBCRLG",30,0)
 ; create LM display array
"RTN","IBCRLG",31,0)
 S IBRGN="" F  S IBRGN=$O(^IBE(363.31,"B",IBRGN)) Q:IBRGN=""  D
"RTN","IBCRLG",32,0)
 . S IBRGFN=0 F  S IBRGFN=$O(^IBE(363.31,"B",IBRGN,IBRGFN)) Q:'IBRGFN  D
"RTN","IBCRLG",33,0)
 .. S IBRG0=$G(^IBE(363.31,IBRGFN,0)) Q:IBRG0=""
"RTN","IBCRLG",34,0)
 .. D SET("") S IBY=""
"RTN","IBCRLG",35,0)
 .. ;
"RTN","IBCRLG",36,0)
 .. S IBX=$P(IBRG0,U,1),IBY=$$SETFLD^VALM1(IBX,IBY,"REGN")
"RTN","IBCRLG",37,0)
 .. S IBX=$P(IBRG0,U,2)_"-"_$P(IBRG0,U,3),IBY=$$SETFLD^VALM1(IBX,IBY,"ID")
"RTN","IBCRLG",38,0)
 .. ;
"RTN","IBCRLG",39,0)
 .. S IBDVN=0 F  S IBDVN=$O(^IBE(363.31,IBRGFN,11,IBDVN)) Q:'IBDVN  D
"RTN","IBCRLG",40,0)
 ... S IBDV0=$G(^IBE(363.31,IBRGFN,11,IBDVN,0)) Q:IBDV0=""
"RTN","IBCRLG",41,0)
 ... ;
"RTN","IBCRLG",42,0)
 ... I IBY'="" S IBX=$J("Division:",12),IBY=$$SETFLD^VALM1(IBX,IBY,"TYPE")
"RTN","IBCRLG",43,0)
 ... S IBX=$G(^DG(40.8,+IBDV0,0)),IBX=$E(($P(IBX,U,2)_"   "),1,6)_$P(IBX,U,1),IBY=$$SETFLD^VALM1(IBX,IBY,"DI")
"RTN","IBCRLG",44,0)
 ... ;
"RTN","IBCRLG",45,0)
 ... D SET(IBY) S IBY=""
"RTN","IBCRLG",46,0)
 .. ;
"RTN","IBCRLG",47,0)
 .. ; institutions for transfer pricing
"RTN","IBCRLG",48,0)
 .. S IBIST=0 F  S IBIST=$O(^IBE(363.31,IBRGFN,21,IBIST)) Q:'IBIST  D
"RTN","IBCRLG",49,0)
 ... S IBIS0=$G(^IBE(363.31,IBRGFN,21,IBIST,0)) Q:IBIS0=""
"RTN","IBCRLG",50,0)
 ... ;
"RTN","IBCRLG",51,0)
 ... I IBY'="" S IBX=$J("Institution:",12),IBY=$$SETFLD^VALM1(IBX,IBY,"TYPE")
"RTN","IBCRLG",52,0)
 ... S IBX=$P($$NNT^XUAF4(+IBIS0),U,1),IBY=$$SETFLD^VALM1(IBX,IBY,"DI")
"RTN","IBCRLG",53,0)
 ... ;
"RTN","IBCRLG",54,0)
 ... D SET(IBY) S IBY=""
"RTN","IBCRLG",55,0)
 .. ;
"RTN","IBCRLG",56,0)
 .. I IBY'="" D SET(IBY)
"RTN","IBCRLG",57,0)
 ;
"RTN","IBCRLG",58,0)
 I VALMCNT=0 D SET(" "),SET("No Billing Regions defined")
"RTN","IBCRLG",59,0)
 ;
"RTN","IBCRLG",60,0)
 Q
"RTN","IBCRLG",61,0)
 ;
"RTN","IBCRLG",62,0)
SET(X) ; set up list manager screen array
"RTN","IBCRLG",63,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCRLG",64,0)
 S ^TMP("IBCRLG",$J,VALMCNT,0)=X
"RTN","IBCRLG",65,0)
 Q
"RTN","IBCRLI")
0^37^B36357978
"RTN","IBCRLI",1,0)
IBCRLI ;ALB/ARH - RATES: DISPLAY CHARGE ITEMS ; 16-MAY-1996
"RTN","IBCRLI",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,245**;21-MAR-94
"RTN","IBCRLI",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRLI",4,0)
 ;
"RTN","IBCRLI",5,0)
 ; if Charge Set/Rates Billable Item is Bedsection then default display is current charge for all items
"RTN","IBCRLI",6,0)
 ; all other Charge Sets display all charges for a user selected item
"RTN","IBCRLI",7,0)
 ; this is due to unknown number of possible entries, for example a CPT set may have thousands of current charges
"RTN","IBCRLI",8,0)
 ;
"RTN","IBCRLI",9,0)
EN ; -- main entry point for IBCR CHARGE ITEM
"RTN","IBCRLI",10,0)
 D EN^VALM("IBCR CHARGE ITEM")
"RTN","IBCRLI",11,0)
 Q
"RTN","IBCRLI",12,0)
 ;
"RTN","IBCRLI",13,0)
HDR ; -- header code
"RTN","IBCRLI",14,0)
 N IBY,IBX,IBZ,IBI,IBK S IBI=1,(IBX,IBY,IBZ,IBK,VALMHDR(1),VALMHDR(2))=""
"RTN","IBCRLI",15,0)
 ;
"RTN","IBCRLI",16,0)
 I +$P(IBCS0,U,5) S IBK="Default Revenue Code: "_$P($G(^DGCR(399.2,+$P(IBCS0,U,5),0)),U,1)
"RTN","IBCRLI",17,0)
 ;
"RTN","IBCRLI",18,0)
 S IBZ=IBBRBIN_$S(+IBSRNITM:" ",1:"")_$P(IBSRNITM,U,2)_" items billable to Charge Set "
"RTN","IBCRLI",19,0)
 ;
"RTN","IBCRLI",20,0)
 S IBX=$P(IBCS0,U,1) I +$G(IBSRNBDT)!(+$G(IBSRNEDT)) D
"RTN","IBCRLI",21,0)
 . I IBSRNBDT=IBSRNEDT S IBX=$E(IBX,1,28),IBY=" on "_$$DATE(IBSRNBDT) Q
"RTN","IBCRLI",22,0)
 . I 'IBSRNBDT S IBY=" on or before "_$$DATE(IBSRNEDT) Q
"RTN","IBCRLI",23,0)
 . I 'IBSRNEDT S IBY=" on or after "_$$DATE(IBSRNBDT) Q
"RTN","IBCRLI",24,0)
 . I IBSRNBDT'=IBSRNEDT S IBY=" between "_$$DATE(IBSRNBDT)_" and "_$$DATE(IBSRNEDT)
"RTN","IBCRLI",25,0)
 ;
"RTN","IBCRLI",26,0)
 S VALMHDR(1)=IBZ_IBX
"RTN","IBCRLI",27,0)
 I ($L(IBZ)+$L(IBX)+$L(IBY))<80 S VALMHDR(1)=VALMHDR(1)_IBY,IBY=""
"RTN","IBCRLI",28,0)
 S VALMHDR(2)=IBK_$J("",(80-($L(IBK)+$L(IBY))))_IBY
"RTN","IBCRLI",29,0)
 Q
"RTN","IBCRLI",30,0)
 ;
"RTN","IBCRLI",31,0)
INIT ; -- init variables and list array  IBCSFN required
"RTN","IBCRLI",32,0)
 K ^TMP("IBCRLI",$J)
"RTN","IBCRLI",33,0)
 I '$G(IBCSFN) S IBCSFN=$$GETCS^IBCRU1 I IBCSFN'>0 S VALMQUIT="" Q
"RTN","IBCRLI",34,0)
 I $$GET(IBCSFN)<0 S VALMQUIT="" Q
"RTN","IBCRLI",35,0)
 D BLD
"RTN","IBCRLI",36,0)
 Q
"RTN","IBCRLI",37,0)
 ;
"RTN","IBCRLI",38,0)
HELP ; -- help code
"RTN","IBCRLI",39,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCRLI",40,0)
 Q
"RTN","IBCRLI",41,0)
 ;
"RTN","IBCRLI",42,0)
EXIT ; -- exit code
"RTN","IBCRLI",43,0)
 K ^TMP("IBCRLI",$J),IBCS0,IBBRBI,IBBRBIN,IBSRNITM,IBSRNBDT,IBSRNEDT
"RTN","IBCRLI",44,0)
 D CLEAR^VALM1,CLEAN^VALM10
"RTN","IBCRLI",45,0)
 Q
"RTN","IBCRLI",46,0)
 ;
"RTN","IBCRLI",47,0)
BLD ; build array for display for Charge Item display: charge set required
"RTN","IBCRLI",48,0)
 N IBITEM,IBDT1,IBCIFN,IBLN,IBX,IBY S VALMCNT=0 K ^TMP($J,"IBCRCI")
"RTN","IBCRLI",49,0)
 S IBSRNITM=$G(IBSRNITM),IBSRNBDT=$G(IBSRNBDT),IBSRNEDT=$G(IBSRNEDT)
"RTN","IBCRLI",50,0)
 ;
"RTN","IBCRLI",51,0)
 I (IBBRBI=1)!(+IBSRNITM) D SORTCI(IBCSFN,$G(IBSRNITM),$G(IBSRNBDT),$G(IBSRNEDT))
"RTN","IBCRLI",52,0)
 ;
"RTN","IBCRLI",53,0)
 ; create LM diplay array of charge items
"RTN","IBCRLI",54,0)
 S IBITEM="" F  S IBITEM=$O(^TMP($J,"IBCRCI",IBITEM)) Q:IBITEM=""  D
"RTN","IBCRLI",55,0)
 . S IBDT1="" F  S IBDT1=$O(^TMP($J,"IBCRCI",IBITEM,IBDT1)) Q:IBDT1=""  D
"RTN","IBCRLI",56,0)
 .. S IBCIFN=0 F  S IBCIFN=$O(^TMP($J,"IBCRCI",IBITEM,IBDT1,IBCIFN)) Q:'IBCIFN  D
"RTN","IBCRLI",57,0)
 ... ;
"RTN","IBCRLI",58,0)
 ... S IBLN=$G(^IBA(363.2,IBCIFN,0)),IBY=""
"RTN","IBCRLI",59,0)
 ... S IBX=$$EXPAND^IBCRU1(363.2,.01,$P(IBLN,U,1))
"RTN","IBCRLI",60,0)
 ... I +$P(IBLN,U,7) S IBX=IBX_" - "_$$EXPAND^IBCRU1(363.2,.07,+$P(IBLN,U,7))
"RTN","IBCRLI",61,0)
 ... S IBY=$$SETFLD^VALM1(IBX,IBY,"ITEM")
"RTN","IBCRLI",62,0)
 ... S IBX=$J($P(IBLN,U,5),8,2),IBY=$$SETFLD^VALM1(IBX,IBY,"UCHG")
"RTN","IBCRLI",63,0)
 ... S IBX=$J($P(IBLN,U,8),8,2),IBY=$$SETFLD^VALM1(IBX,IBY,"BCHG")
"RTN","IBCRLI",64,0)
 ... S IBX=$P($G(^DGCR(399.2,+$P(IBLN,U,6),0)),U,1),IBY=$$SETFLD^VALM1(IBX,IBY,"RVCD")
"RTN","IBCRLI",65,0)
 ... S IBX=$$DATE($P(IBLN,U,3)),IBY=$$SETFLD^VALM1(IBX,IBY,"EFFDT")
"RTN","IBCRLI",66,0)
 ... S IBX=$P(IBLN,U,4)
"RTN","IBCRLI",67,0)
 ... I +IBX S IBY=$$SETFLD^VALM1("-",IBY,"DS"),IBX=$$DATE(IBX),IBY=$$SETFLD^VALM1(IBX,IBY,"INADT")
"RTN","IBCRLI",68,0)
 ... D SET(IBY)
"RTN","IBCRLI",69,0)
 ;
"RTN","IBCRLI",70,0)
 I VALMCNT=0 D SET(" ") D
"RTN","IBCRLI",71,0)
 . I 'IBBRBI D SET("The Billing Rate of this Set has no Billable Item defined, therefore no"),SET("Charge Items may be defined for it.  (The charges may be calculated amounts.)") Q
"RTN","IBCRLI",72,0)
 . I '$D(^IBA(363.2,"AIVDTS"_+$G(IBCSFN))) D SET("No Charge Items defined for this Set.") Q
"RTN","IBCRLI",73,0)
 . I +IBSRNITM,'$D(^IBA(363.2,"AIVDTS"_+$G(IBCSFN),+IBSRNITM)) D SET(IBBRBIN_" "_$P(IBSRNITM,U,2)_" has no charges for this set.") Q
"RTN","IBCRLI",74,0)
 . I 'IBSRNITM,IBBRBI'=1 D SET("No Charge Item chosen for display:"),SET("       - Non-bedsection type Items must be specifically chosen for display."),SET("       - Use the CI action and select an item to display.") Q
"RTN","IBCRLI",75,0)
 . I 'IBSRNITM D SET("This set has no charges in this date range.") Q
"RTN","IBCRLI",76,0)
 . D SET(IBBRBIN_" "_$P(IBSRNITM,U,2)_" has no charges for this set in this date range.")
"RTN","IBCRLI",77,0)
 ;
"RTN","IBCRLI",78,0)
 K ^TMP($J,"IBCRCI")
"RTN","IBCRLI",79,0)
 Q
"RTN","IBCRLI",80,0)
 ;
"RTN","IBCRLI",81,0)
DATE(X) ; date in external format
"RTN","IBCRLI",82,0)
 N Y S Y="" I $G(X)?7N.E S Y=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCRLI",83,0)
 Q Y
"RTN","IBCRLI",84,0)
 ;
"RTN","IBCRLI",85,0)
SET(X) ; set up list manager screen array
"RTN","IBCRLI",86,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCRLI",87,0)
 S ^TMP("IBCRLI",$J,VALMCNT,0)=X
"RTN","IBCRLI",88,0)
 Q
"RTN","IBCRLI",89,0)
 ;
"RTN","IBCRLI",90,0)
 ;
"RTN","IBCRLI",91,0)
SORTCI(IBCSFN,IBITM,IBDT1,IBDT2) ; sort a charge sets items by item name and inverse effective date
"RTN","IBCRLI",92,0)
 ; if ITEM is not defined than dates should be, if ITEM or dates not defined then assumes all should be included
"RTN","IBCRLI",93,0)
 ; ^TMP("IBCRCI",$J, item name, - effective date, ITEM IFN)=""
"RTN","IBCRLI",94,0)
 ;
"RTN","IBCRLI",95,0)
 N IBXRF,IBBITM,IBEITM,IBITEM,IBBDT,IBEDT,IBEFDT,IBCIFN,IBLN,IBITEMN
"RTN","IBCRLI",96,0)
 ;
"RTN","IBCRLI",97,0)
 S IBXRF="AIVDTS"_+$G(IBCSFN)
"RTN","IBCRLI",98,0)
 S IBBITM=+$G(IBITM)-.0001,IBEITM=$S(+$G(IBITM):IBITM,1:9999999999)
"RTN","IBCRLI",99,0)
 S IBBDT=$S(+$G(IBDT1):-IBDT1,1:-1000000),IBEDT=$S(+$G(IBDT2):-(IBDT2+.01),1:-9999999) Q:IBBDT<IBEDT
"RTN","IBCRLI",100,0)
 ;
"RTN","IBCRLI",101,0)
 S IBITEM=IBBITM F  S IBITEM=$O(^IBA(363.2,IBXRF,IBITEM)) Q:'IBITEM!(IBITEM>IBEITM)  D
"RTN","IBCRLI",102,0)
 . S IBEFDT=IBEDT F  S IBEFDT=$O(^IBA(363.2,IBXRF,IBITEM,IBEFDT)) Q:'IBEFDT  D  Q:(IBEFDT'<IBBDT)
"RTN","IBCRLI",103,0)
 .. S IBCIFN=0 F  S IBCIFN=$O(^IBA(363.2,IBXRF,IBITEM,IBEFDT,IBCIFN)) Q:'IBCIFN  D
"RTN","IBCRLI",104,0)
 ... S IBLN=$G(^IBA(363.2,IBCIFN,0)),IBITEMN=$$EXPAND^IBCRU1(363.2,.01,$P(IBLN,U,1))_" - "
"RTN","IBCRLI",105,0)
 ... I +$P(IBLN,U,7) S IBITEMN=IBITEMN_$$EXPAND^IBCRU1(363.2,.07,+$P(IBLN,U,7))
"RTN","IBCRLI",106,0)
 ... I $P(IBLN,U,4),+$P(IBLN,U,4)<-IBBDT Q
"RTN","IBCRLI",107,0)
 ... S ^TMP($J,"IBCRCI",IBITEMN,IBEFDT,IBCIFN)=""
"RTN","IBCRLI",108,0)
 Q
"RTN","IBCRLI",109,0)
 ;
"RTN","IBCRLI",110,0)
GET(IBCSFN) ; get item to display on screen for specific charge set, set up general variables required
"RTN","IBCRLI",111,0)
 ; (returns 0 if error, -1 if ^) all active bedsections or all entries for a specific CPT or NDC #
"RTN","IBCRLI",112,0)
 ;
"RTN","IBCRLI",113,0)
 ; returns general data on the Charge set to be diplayed, may ask user for a specific item
"RTN","IBCRLI",114,0)
 ; variables defined on exit: IBCS0,IBBRBI,IBBRBIN,IBSRNITM,IBSRNBDT,IBSRNEDT
"RTN","IBCRLI",115,0)
 ; if billable item is bedsection returns current date but no item
"RTN","IBCRLI",116,0)
 ; if billable item is anything else asks user for specific item but returns no date
"RTN","IBCRLI",117,0)
 ;
"RTN","IBCRLI",118,0)
 N IBX S IBX=1,(IBBRBI,IBBRBIN,IBSRNITM,IBSRNBDT,IBSRNEDT)=""
"RTN","IBCRLI",119,0)
 S IBCS0=$G(^IBE(363.1,+$G(IBCSFN),0)) I IBCS0="" S IBX=0 G GETQ
"RTN","IBCRLI",120,0)
 S IBBRBI=$P($G(^IBE(363.3,+$P(IBCS0,U,2),0)),U,4) I 'IBBRBI S IBX=0 G GETQ
"RTN","IBCRLI",121,0)
 S IBBRBIN=$$EXPAND^IBCRU1(363.3,.04,IBBRBI)
"RTN","IBCRLI",122,0)
 I IBBRBI>1 W !!,"Select a billable ",IBBRBIN," to display for Charge Set ",$P(IBCS0,U,1),!
"RTN","IBCRLI",123,0)
 ;
"RTN","IBCRLI",124,0)
 I IBBRBI=1 S (IBSRNBDT,IBSRNEDT)=DT ; all currently active charges (bedsection)
"RTN","IBCRLI",125,0)
 I IBBRBI=2 S (IBX,IBSRNITM)=$$GETCPT^IBCRU1("",1) ; all charges for a specific CPT
"RTN","IBCRLI",126,0)
 I IBBRBI=3 S (IBX,IBSRNITM)=$$GETNDC^IBCRU1 ; all charges for a specific NDC #
"RTN","IBCRLI",127,0)
 I IBBRBI=4 S (IBX,IBSRNITM)=$$GETDRG^IBCRU1 ; all charges for a specific DRG
"RTN","IBCRLI",128,0)
 I IBBRBI=9 S (IBX,IBSRNITM)=$$GETMISC^IBCRU1 ; all charges for a specific MISCELLANEOUS item
"RTN","IBCRLI",129,0)
GETQ Q IBX
"RTN","IBCROI")
0^38^B31270008
"RTN","IBCROI",1,0)
IBCROI ;ALB/ARH - RATES: REPORTS CHARGE ITEM ; 11/22/96
"RTN","IBCROI",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,121,245**;21-MAR-94
"RTN","IBCROI",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCROI",4,0)
 ;
"RTN","IBCROI",5,0)
EN ; OPTION ENTRY POINT:  Charge Item report - get parameters then run the report
"RTN","IBCROI",6,0)
 N DIC,DIR,DIRUT,DTOUT,DUOUT,X,Y,IBLIST,IBX,IBSORT1,IBSORT2,IBBDT,IBEDT,IBHDR,IBQUIT,IBSELITM S IBLIST=""
"RTN","IBCROI",7,0)
 ;
"RTN","IBCROI",8,0)
 W !!,?20,"****** Charge Item Report ******",!!
"RTN","IBCROI",9,0)
 W !,"This report will list all charges that are effective within a date range."
"RTN","IBCROI",10,0)
 ;
"RTN","IBCROI",11,0)
 S DIR(0)="SO^1:Rate;2:Charge Set",DIR("A")="First sort by" D ^DIR K DIR S IBSORT1=+Y I Y<1!$D(DTOUT)!$D(DUOUT) Q
"RTN","IBCROI",12,0)
 ;
"RTN","IBCROI",13,0)
 S DIC=$S(IBSORT1=1:"^IBE(363.3,",1:"^IBE(363.1,") S DIC(0)="AENQ" D ^DIC I Y>0 S IBLIST=+Y
"RTN","IBCROI",14,0)
 I '$G(IBLIST)!$D(DTOUT)!$D(DUOUT) Q
"RTN","IBCROI",15,0)
 ;
"RTN","IBCROI",16,0)
 W !!,"Select a single item to display or press return for all items."
"RTN","IBCROI",17,0)
 S IBX=$S(IBSORT1=1:+IBLIST,1:$P($G(^IBE(363.1,+IBLIST,0)),U,2)),IBX=$P($G(^IBE(363.3,+IBX,0)),U,4) Q:'IBX
"RTN","IBCROI",18,0)
 S IBSELITM=$S(IBX=1:+$$GETBED^IBCRU1(),IBX=2:+$$GETCPT^IBCRU1("",1),IBX=3:+$$GETNDC^IBCRU1(),IBX=4:+$$GETDRG^IBCRU1(),IBX=9:+$$GETMISC^IBCRU1(),1:-1) Q:IBSELITM<0
"RTN","IBCROI",19,0)
 ;
"RTN","IBCROI",20,0)
 I '$G(IBSELITM) S DIR(0)="SO^1:Charge Item;2:Effective Date",DIR("A")="Sort by" D ^DIR K DIR S IBSORT2=+Y I Y<1!$D(DUOUT) Q
"RTN","IBCROI",21,0)
 I '$G(IBSORT2) S IBSORT2=1
"RTN","IBCROI",22,0)
 ;
"RTN","IBCROI",23,0)
 S IBBDT=$$GETDT^IBCRU1(DT,"Charges effective beginning on") Q:IBBDT'?7N
"RTN","IBCROI",24,0)
 S IBEDT=$$GETDT^IBCRU1(DT,"Charges effective ending on") Q:IBEDT'?7N
"RTN","IBCROI",25,0)
 ;
"RTN","IBCROI",26,0)
 S IBQUIT=0 D DEV I IBQUIT G EXIT
"RTN","IBCROI",27,0)
 ;
"RTN","IBCROI",28,0)
RPT ;find, save, and print Charge Item report - entry for tasked jobs
"RTN","IBCROI",29,0)
 ;
"RTN","IBCROI",30,0)
 ; if IBSCRPT is defined then the report will use the existing ^TMP($J,IBSCRPT,  array
"RTN","IBCROI",31,0)
 ;            this array must be in the same format as the arrays created in IBCROI1
"RTN","IBCROI",32,0)
 ; Otherwise, the following variations on the Charges report are possible:
"RTN","IBCROI",33,0)
 ;
"RTN","IBCROI",34,0)
 ; IBBDT, IBEDT required, if IBSELITM is defined then a single itme will print, otherwise all
"RTN","IBCROI",35,0)
 ; IBSORT1:  1 - primary sort is by the Billing Rate selected (IBLIST - list of Billing Rates to print, required)
"RTN","IBCROI",36,0)
 ;               all Charge Sets for a single Rate are accumulated into the sort,
"RTN","IBCROI",37,0)
 ;               the Charge Set name is printed as a date element on each charge line
"RTN","IBCROI",38,0)
 ;
"RTN","IBCROI",39,0)
 ; IBSORT1:  2 - primary sort is by Charge Set                  (IBLIST - list of Charge Sets to print, required)
"RTN","IBCROI",40,0)
 ;               group of Charge Sets are accumulated into the sort and ordered by Charge Set,
"RTN","IBCROI",41,0)
 ;               the Charge Set name is printed as a sub-header on the report, not as a line data element
"RTN","IBCROI",42,0)
 ;
"RTN","IBCROI",43,0)
 ; IBSORT2:  1 - secondary sort element is Charge Item Name and tertiary sort element is Effective Date
"RTN","IBCROI",44,0)
 ; IBSORT2:  2 - secondary sort element is Effective Date and tertiary sort element is Charge Item Name
"RTN","IBCROI",45,0)
 ;
"RTN","IBCROI",46,0)
 ;
"RTN","IBCROI",47,0)
 I $G(IBSCRPT)="" S IBSCRPT="IBCROI" K ^TMP($J,IBSCRPT) D
"RTN","IBCROI",48,0)
 . I $G(IBSORT1)=1 D SRCH1^IBCROI1(IBLIST,$G(IBSORT2),$G(IBBDT),$G(IBEDT),$G(IBSELITM))
"RTN","IBCROI",49,0)
 . I $G(IBSORT1)=2 D SRCH2^IBCROI1(IBLIST,$G(IBSORT2),$G(IBBDT),$G(IBEDT),$G(IBSELITM))
"RTN","IBCROI",50,0)
 ;
"RTN","IBCROI",51,0)
 D PRINT
"RTN","IBCROI",52,0)
 ;
"RTN","IBCROI",53,0)
EXIT ;clean up and quit
"RTN","IBCROI",54,0)
 K ^TMP($J),IBSCRPT Q:$D(ZTQUEUED)
"RTN","IBCROI",55,0)
 D ^%ZISC
"RTN","IBCROI",56,0)
 Q
"RTN","IBCROI",57,0)
 ;
"RTN","IBCROI",58,0)
PRINT ;print the report from the temp sort file to the appropriate device
"RTN","IBCROI",59,0)
 N IBPGN,IBLN,IBHDR1,IBHDR2,IBHDR3,IBS1,IBS2,IBS3,IBS4,IBQUIT,IBSP1,IBSP2,IBSORT1,IBSORT2
"RTN","IBCROI",60,0)
 N IBLNX,IBITEM,IBCSN,IBEFDT,IBINDT,IBCHG,IBCHGB,IBRVCD I '$D(ZTQUEUED) U IO
"RTN","IBCROI",61,0)
 S IBPGN=0,IBLN=999,IBQUIT=0 D GETHDR Q:$$HDR
"RTN","IBCROI",62,0)
 ;
"RTN","IBCROI",63,0)
 S IBS1="" F  S IBS1=$O(^TMP($J,IBSCRPT,IBS1)) Q:IBS1=""  D  Q:IBQUIT
"RTN","IBCROI",64,0)
 . I +IBSORT1=2 W !!,?20,"CHARGE SET: ",IBS1,! S IBLN=IBLN+3
"RTN","IBCROI",65,0)
 . ;
"RTN","IBCROI",66,0)
 . S IBS2="" F  S IBS2=$O(^TMP($J,IBSCRPT,IBS1,IBS2)) Q:IBS2=""  D  Q:IBQUIT
"RTN","IBCROI",67,0)
 .. S IBS3="" F  S IBS3=$O(^TMP($J,IBSCRPT,IBS1,IBS2,IBS3)) Q:IBS3=""  D  Q:IBQUIT
"RTN","IBCROI",68,0)
 ... S IBS4="" F  S IBS4=$O(^TMP($J,IBSCRPT,IBS1,IBS2,IBS3,IBS4)) Q:IBS4=""  D  S IBQUIT=$$HDR Q:IBQUIT
"RTN","IBCROI",69,0)
 .... ;
"RTN","IBCROI",70,0)
 .... S IBLNX=$G(^TMP($J,IBSCRPT,IBS1,IBS2,IBS3,IBS4))
"RTN","IBCROI",71,0)
 .... S IBITEM=$$EXPAND^IBCRU1(363.2,.01,$P(IBLNX,U,1))
"RTN","IBCROI",72,0)
 .... S IBCSN="" I IBSORT1=1 S IBCSN=$P($G(^IBE(363.1,+$P(IBLNX,U,2),0)),U,1)
"RTN","IBCROI",73,0)
 .... S IBEFDT=$$DATE^IBCRU1(+$P(IBLNX,U,3))
"RTN","IBCROI",74,0)
 .... S IBINDT="" I +$P(IBLNX,U,4) S IBINDT=$$DATE^IBCRU1(+$P(IBLNX,U,4))
"RTN","IBCROI",75,0)
 .... S IBCHG=$P(IBLNX,U,5),IBCHGB=$P(IBLNX,U,8) I IBCHGB'="" S IBCHGB="+"_$J(IBCHGB,0,2)
"RTN","IBCROI",76,0)
 .... S IBRVCD=$$RVCPT(+$P(IBLNX,U,6),+$P(IBLNX,U,1),+$P(IBLNX,U,2))
"RTN","IBCROI",77,0)
 .... I +$P(IBLNX,U,7) S IBITEM=IBITEM_"-"_$P($$MOD^ICPTMOD(+$P(IBLNX,U,7),"I",IBEFDT),U,2)
"RTN","IBCROI",78,0)
 .... ;
"RTN","IBCROI",79,0)
 .... I +IBSORT2=1 W !,$E(IBITEM,1,(31-IBSP1)),?(34-IBSP1),IBEFDT,?(44-IBSP1),IBINDT S IBLN=IBLN+1
"RTN","IBCROI",80,0)
 .... I +IBSORT2'=1 W !,IBEFDT,?10,IBINDT,?21,$E(IBITEM,1,(32-IBSP1)) S IBLN=IBLN+1
"RTN","IBCROI",81,0)
 .... I +IBSORT1=1 W ?(55-IBSP1),$E(IBCSN,1,(27-IBSP2)),?(82-IBSP1-IBSP2),$J(IBCHG,10,2),IBCHGB,?(102-IBSP1-IBSP2),IBRVCD
"RTN","IBCROI",82,0)
 .... I +IBSORT1'=1 W ?(55-IBSP1),$J(IBCHG,10,2),IBCHGB,?(75-IBSP1),IBRVCD
"RTN","IBCROI",83,0)
 I $P($G(^TMP($J,IBSCRPT)),U,4)'="" W !!,$P(^TMP($J,IBSCRPT),U,4)
"RTN","IBCROI",84,0)
 I 'IBQUIT D PAUSE
"RTN","IBCROI",85,0)
 Q
"RTN","IBCROI",86,0)
 ;
"RTN","IBCROI",87,0)
GETHDR ; set up header lines
"RTN","IBCROI",88,0)
 N IBDT,IBS S IBHDR2="",(IBSP1,IBSP2)=0
"RTN","IBCROI",89,0)
 S IBS=$G(^TMP($J,IBSCRPT)),IBSORT1=$P(IBS,U,2),IBSORT2=$P(IBS,U,3) I IBSORT1=1,$E(IOST,1,2)["C-" S IBSP1=23,IBSP2=2
"RTN","IBCROI",90,0)
 S IBDT=$$HTE^XLFDT($H),IBDT=$P(IBDT,"@",1)_"  "_$P($P(IBDT,"@",2),":",1,2)
"RTN","IBCROI",91,0)
 S IBHDR1=$P(IBS,U,1),IBHDR1=IBHDR1_$J("",(IOM-$L(IBHDR1)-30))_IBDT_$J("",$L(IOM-8))_"Page "
"RTN","IBCROI",92,0)
 ;
"RTN","IBCROI",93,0)
 I +IBSORT2=1 S IBHDR2=$E("Charge Item                      ",1,(31-IBSP1))_"   Effective Inactive "
"RTN","IBCROI",94,0)
 I +IBSORT2=2 S IBHDR2="Effective Inactive   "_$E("Charge Item                            ",1,(32-IBSP1))
"RTN","IBCROI",95,0)
 I +IBSORT1=1 S IBHDR2=IBHDR2_"  "_$E("Charge Set                  ",1,(27-IBSP2))_"     Charge       Rv Cd"
"RTN","IBCROI",96,0)
 I +IBSORT1=2 S IBHDR2=IBHDR2_"      Charge         Rv Cd"
"RTN","IBCROI",97,0)
 S IBHDR3="",$P(IBHDR3,"-",IOM+1)=""
"RTN","IBCROI",98,0)
 Q
"RTN","IBCROI",99,0)
 ;
"RTN","IBCROI",100,0)
HDR() ;print the report header
"RTN","IBCROI",101,0)
 N IBQUIT,X,Y S IBQUIT=0
"RTN","IBCROI",102,0)
 S IBQUIT=$$STOP I +IBQUIT G HDRQ
"RTN","IBCROI",103,0)
 I IBLN<(IOSL-3) G HDRQ
"RTN","IBCROI",104,0)
 I IBPGN>0 D PAUSE I +IBQUIT G HDRQ
"RTN","IBCROI",105,0)
 S IBPGN=IBPGN+1,IBLN=4
"RTN","IBCROI",106,0)
 I IBPGN>1!($E(IOST,1,2)["C-") W @IOF
"RTN","IBCROI",107,0)
 ;
"RTN","IBCROI",108,0)
 W !,IBHDR1,IBPGN,!,IBHDR2,!,IBHDR3
"RTN","IBCROI",109,0)
HDRQ Q IBQUIT
"RTN","IBCROI",110,0)
 ;
"RTN","IBCROI",111,0)
DEV ;get the device
"RTN","IBCROI",112,0)
 S IBQUIT=0 S %ZIS="QM",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS I POP S IBQUIT=1 Q
"RTN","IBCROI",113,0)
 I $D(IO("Q")) S ZTRTN="RPT^IBCROI",ZTDESC="Charge Item Report",ZTSAVE("IB*")="" D ^%ZTLOAD K IO("Q") S IBQUIT=1
"RTN","IBCROI",114,0)
 Q
"RTN","IBCROI",115,0)
 ;
"RTN","IBCROI",116,0)
RVCPT(DRV,ITM,CS) ; returns revenue code:  first CI rev code then rv-cpt link
"RTN","IBCROI",117,0)
 N IBX,IBY S (IBX,IBY)=""
"RTN","IBCROI",118,0)
 I +$G(DRV) S IBY=+DRV
"RTN","IBCROI",119,0)
 I IBY="",+$G(ITM),+$G(CS) S IBY=$P($$RVLNK^IBCRU6(+ITM,"",+CS),U,2)
"RTN","IBCROI",120,0)
 I IBY'="" S IBX=$P($G(^DGCR(399.2,+IBY,0)),U,1)
"RTN","IBCROI",121,0)
 Q IBX
"RTN","IBCROI",122,0)
 ;
"RTN","IBCROI",123,0)
PAUSE ;pause at end of screen if being displayed on a terminal
"RTN","IBCROI",124,0)
 Q:$E(IOST,1,2)'["C-"  S DIR(0)="E" D ^DIR K DIR I $D(DUOUT)!($D(DIRUT)) S IBQUIT=1
"RTN","IBCROI",125,0)
 Q
"RTN","IBCROI",126,0)
 ;
"RTN","IBCROI",127,0)
STOP() ; determine if user has requested the queued report to stop
"RTN","IBCROI",128,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !,"***TASK STOPPED BY USER***"
"RTN","IBCROI",129,0)
 Q +$G(ZTSTOP)
"RTN","IBCROI1")
0^39^B11082486
"RTN","IBCROI1",1,0)
IBCROI1 ;ALB/ARH - RATES: REPORTS CHARGE ITEM (SRCH) ; 11/22/96
"RTN","IBCROI1",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,245**;21-MAR-94
"RTN","IBCROI1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCROI1",4,0)
 ;
"RTN","IBCROI1",5,0)
 ;  ^TMP($J,SUB1) = report header ^ SORT1 ^ SORT2 ^ count & desc (optional)
"RTN","IBCROI1",6,0)
 ;  ^TMP($J,SUB1, SUB2) = IFN of SUB2
"RTN","IBCROI1",7,0)
 ;  ^TMP($J,SUB1, SUB2, SUB3, SUB4, CI IFN) = itm ^ cs ^ ef dt ^ in dt ^ chg ^ rv cd ^ mod ^ base charge
"RTN","IBCROI1",8,0)
 ; 
"RTN","IBCROI1",9,0)
 ; SORT1=1:  (SRCH1) SUB2 = BILLING RATE name        SORT2=1:  SUB3 = Item Name          SUB4 = Effective Date
"RTN","IBCROI1",10,0)
 ; SORT1=2:  (SRCH2) SUB2 = CHARGE SET name          SORT2=2:  SUB3 = Effective Date     SUB4 = Item Name
"RTN","IBCROI1",11,0)
 ; 
"RTN","IBCROI1",12,0)
 ; SUB1 - first subscript to identify the search/print, set to "IBCROI" for the Charge Item report
"RTN","IBCROI1",13,0)
 ; other reports may use this array and print routine, both TMPLN and TMPHDR must be called to setup array
"RTN","IBCROI1",14,0)
 ;
"RTN","IBCROI1",15,0)
SRCH1(BRL,SORT2,BDT,EDT,IBSELITM) ; search/gather items for the report, all charge sets for a particular Rate
"RTN","IBCROI1",16,0)
 ; Input: BRL = List of Billing Rates to include, SORT2 = secondary sort: 1/charge item, 2/effective date
"RTN","IBCROI1",17,0)
 N IBRATE,IBRATEN,IBHDR,IBSUB2,IBCS,IBCS0,IBI K ^TMP($J,"IBCROI") I '$G(SORT2)!($G(BDT)'?7N)!($G(EDT)'?7N) Q
"RTN","IBCROI1",18,0)
 ;
"RTN","IBCROI1",19,0)
 I +$G(BRL) S IBRATE=0 F IBI=1:1 S IBRATE=$P(BRL,U,IBI) Q:'IBRATE  D
"RTN","IBCROI1",20,0)
 . S IBRATEN=$P($G(^IBE(363.3,+IBRATE,0)),U,1) Q:IBRATEN=""
"RTN","IBCROI1",21,0)
 . S IBHDR="Charges for "_$S(+$P(BRL,U,2):"Selected",1:IBRATEN)_" Rates ",IBSUB2="BILLING RATE"
"RTN","IBCROI1",22,0)
 . ;
"RTN","IBCROI1",23,0)
 . S IBCS=0 F  S IBCS=$O(^IBE(363.1,IBCS)) Q:'IBCS  D
"RTN","IBCROI1",24,0)
 .. S IBCS0=$G(^IBE(363.1,IBCS,0)) I $P(IBCS0,U,2)'=IBRATE Q
"RTN","IBCROI1",25,0)
 .. D SRCHITM(IBCS,IBSUB2,SORT2,BDT,EDT,$G(IBSELITM)) I '$D(ZTQUEUED) W "."
"RTN","IBCROI1",26,0)
 .. D TMPHDR("IBCROI",IBSUB2,0,IBHDR,"1^"_SORT2,BDT,EDT)
"RTN","IBCROI1",27,0)
 Q
"RTN","IBCROI1",28,0)
 ;
"RTN","IBCROI1",29,0)
SRCH2(CSL,SORT2,BDT,EDT,IBSELITM) ; search/gather items for the report for a group of Charge Sets
"RTN","IBCROI1",30,0)
 ; Input:  CSL = list of Charge Sets to sort, SORT2 = secondary sort: 1/charge item, 2/effective date
"RTN","IBCROI1",31,0)
 N IBCS,IBCSN,IBI,IBHDR K ^TMP($J,"IBCROI") I '$G(SORT2)!($G(BDT)'?7N)!($G(EDT)'?7N) Q
"RTN","IBCROI1",32,0)
 ;
"RTN","IBCROI1",33,0)
 I +$G(CSL) S IBCS=0 F IBI=1:1 S IBCS=$P(CSL,U,IBI) Q:'IBCS  D
"RTN","IBCROI1",34,0)
 . S IBCSN=$P($G(^IBE(363.1,+IBCS,0)),U,1) Q:IBCSN=""  S IBHDR="Charges by Set for "
"RTN","IBCROI1",35,0)
 . D SRCHITM(IBCS,IBCSN,SORT2,BDT,EDT,$G(IBSELITM)) I '$D(ZTQUEUED) W "."
"RTN","IBCROI1",36,0)
 . D TMPHDR("IBCROI",IBCSN,IBCS,IBHDR,"2^"_SORT2,BDT,EDT)
"RTN","IBCROI1",37,0)
 Q
"RTN","IBCROI1",38,0)
 ;
"RTN","IBCROI1",39,0)
SRCHITM(CS,SUB2,SORT2,BDT,EDT,IBSELITM) ; search/gather all items within the date range for one Charge Set
"RTN","IBCROI1",40,0)
 ; Input:  CS = CS IFN, SUB2 = first data subscript, SORT2 = secondary sort: 1/charge item, 2/effective date
"RTN","IBCROI1",41,0)
 N IBXRF,IBITM,IBEFDT,IBCI,IBINDT,IBITEM,IBITEMN I '$G(CS)!'$G(SORT2)!($G(SUB2)="")!($G(BDT)'?7N)!($G(EDT)'?7N) Q
"RTN","IBCROI1",42,0)
 S IBXRF="AIVDTS"_+CS
"RTN","IBCROI1",43,0)
 ;
"RTN","IBCROI1",44,0)
 S IBITM=+$G(IBSELITM) I +IBITM S IBITM=IBITM-.0001
"RTN","IBCROI1",45,0)
 F  S IBITM=$O(^IBA(363.2,IBXRF,IBITM)) Q:'IBITM!(+$G(IBSELITM)&(IBITM'=$G(IBSELITM)))  D
"RTN","IBCROI1",46,0)
 . S IBEFDT=-(EDT+.01) F  S IBEFDT=$O(^IBA(363.2,IBXRF,IBITM,IBEFDT)) Q:'IBEFDT  D
"RTN","IBCROI1",47,0)
 .. S IBCI=0 F  S IBCI=$O(^IBA(363.2,IBXRF,IBITM,IBEFDT,IBCI)) Q:'IBCI  D
"RTN","IBCROI1",48,0)
 ... ;
"RTN","IBCROI1",49,0)
 ... S IBINDT=$$INACTCI^IBCRU4(IBCI) I +IBINDT,IBINDT<BDT Q
"RTN","IBCROI1",50,0)
 ... D TMPLN(IBCI,"IBCROI",SUB2,SORT2)
"RTN","IBCROI1",51,0)
 Q
"RTN","IBCROI1",52,0)
 ;
"RTN","IBCROI1",53,0)
TMPLN(CI,SUB1,SUB2,SORT2) ; add charge item to TMP array
"RTN","IBCROI1",54,0)
 N IBINDT,IBITEM,IBITEMN I '$G(CI)!'$G(SORT2)!($G(SUB1)="")!($G(SUB2)="") Q
"RTN","IBCROI1",55,0)
 S IBINDT=$$INACTCI^IBCRU4(CI)
"RTN","IBCROI1",56,0)
 S IBITEM=$G(^IBA(363.2,+CI,0)) Q:IBITEM=""  ;S $P(IBITEM,U,8)=IBINDT
"RTN","IBCROI1",57,0)
 S IBITEMN=$$EXPAND^IBCRU1(363.2,.01,$P(IBITEM,U,1))_" "
"RTN","IBCROI1",58,0)
 I +$P(IBITEM,U,7) S IBITEMN=IBITEMN_"- "_$P($$MOD^ICPTMOD(+$P(IBITEM,U,7),"I",DT),U,2)
"RTN","IBCROI1",59,0)
 ;
"RTN","IBCROI1",60,0)
 I SORT2=1 S ^TMP($J,SUB1,SUB2,IBITEMN,+$P(IBITEM,U,3),+CI)=IBITEM
"RTN","IBCROI1",61,0)
 I SORT2=2 S ^TMP($J,SUB1,SUB2,+$P(IBITEM,U,3),IBITEMN,+CI)=IBITEM
"RTN","IBCROI1",62,0)
 Q
"RTN","IBCROI1",63,0)
 ;
"RTN","IBCROI1",64,0)
TMPHDR(SUB1,SUB2,SUB2IFN,HDR,SORT,BDT,EDT) ; set up top level of the TMP array
"RTN","IBCROI1",65,0)
 I '$G(SORT)!($G(SUB2)="")!($G(SUB1)="") Q
"RTN","IBCROI1",66,0)
 I +$G(BDT) S HDR=$G(HDR)_" "_$$DATE^IBCRU1(BDT) I +$G(EDT) S HDR=HDR_" - "_$$DATE^IBCRU1(EDT)
"RTN","IBCROI1",67,0)
 S ^TMP($J,SUB1)=HDR_U_SORT
"RTN","IBCROI1",68,0)
 S ^TMP($J,SUB1,SUB2)=SUB2IFN
"RTN","IBCROI1",69,0)
 Q
"RTN","IBCRU4")
0^40^B20945650
"RTN","IBCRU4",1,0)
IBCRU4 ;ALB/ARH - RATES: UTILITIES (RG/BILL/CI) ; 16-MAY-1996
"RTN","IBCRU4",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,245**;21-MAR-94
"RTN","IBCRU4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRU4",4,0)
 ;
"RTN","IBCRU4",5,0)
 ;
"RTN","IBCRU4",6,0)
 ;
"RTN","IBCRU4",7,0)
RGEXT(RG) ; returns regions in external format (NAME ^ DIV1 ^ DIV 2 ^ ...)
"RTN","IBCRU4",8,0)
 N IBX,IBY,IBZ,IBI,IBC S IBY="",IBX=0,IBC=""
"RTN","IBCRU4",9,0)
 I +$G(RG) S IBZ=$P($G(^IBE(363.31,+RG,0)),U,1) I IBZ'="" S IBY=IBZ_U
"RTN","IBCRU4",10,0)
 I IBY'="" S IBX=$$RGDV(+RG)
"RTN","IBCRU4",11,0)
 I +IBX F IBI=1:1 S IBZ=$P(IBX,U,IBI) Q:'IBZ  S IBY=IBY_IBC_$P($G(^DG(40.8,+IBZ,0)),U,1),IBC=", "
"RTN","IBCRU4",12,0)
 Q IBY
"RTN","IBCRU4",13,0)
 ;
"RTN","IBCRU4",14,0)
RGDV(RG,DV) ; returns a Billing Regions Divisions (363.31):  div1 ^ div2 ^ ...
"RTN","IBCRU4",15,0)
 ; if DV is passed in and covered by region it will be the first division in the set
"RTN","IBCRU4",16,0)
 N IBX,IBI S IBX=""
"RTN","IBCRU4",17,0)
 I +$G(RG),$G(^IBE(363.31,+RG,0))'="" D
"RTN","IBCRU4",18,0)
 . I +$G(DV),$D(^IBE(363.31,+RG,11,"B",DV)) S IBX=DV_U
"RTN","IBCRU4",19,0)
 . S IBI=0 F  S IBI=$O(^IBE(363.31,+RG,11,"B",IBI)) Q:'IBI  I $G(DV)'=IBI S IBX=IBX_IBI_U
"RTN","IBCRU4",20,0)
 Q IBX
"RTN","IBCRU4",21,0)
 ;
"RTN","IBCRU4",22,0)
BILLCPT(IBIFN) ; returns true if any of the charges on the bill may be based on CPT
"RTN","IBCRU4",23,0)
 ; ie. one of the Billing Rates of one of the Charge Sets defined for the Rate Type of the bill
"RTN","IBCRU4",24,0)
 ; has a Billable Item of CPT
"RTN","IBCRU4",25,0)
 ;
"RTN","IBCRU4",26,0)
 N IBX,IB0,IBU,IBI,IBJ,IBBR,IBRSARR S IBX=0,IBRSARR=0
"RTN","IBCRU4",27,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),IBU=$G(^DGCR(399,+$G(IBIFN),"U"))
"RTN","IBCRU4",28,0)
 I IB0'="",+IBU D RT^IBCRU3($P(IB0,U,7),$P(IB0,U,5),$P(IBU,U,1,2),.IBRSARR)
"RTN","IBCRU4",29,0)
 I +IBRSARR S IBI=0 F  S IBI=$O(IBRSARR(IBI)) Q:'IBI  D  Q:IBX
"RTN","IBCRU4",30,0)
 . S IBJ=0 F  S IBJ=$O(IBRSARR(IBI,IBJ)) Q:'IBJ  D  Q:IBX
"RTN","IBCRU4",31,0)
 .. S IBBR=$P($G(^IBE(363.1,IBJ,0)),U,2) I $P($G(^IBE(363.3,IBBR,0)),U,4)=2 S IBX=1
"RTN","IBCRU4",32,0)
 Q IBX
"RTN","IBCRU4",33,0)
 ;
"RTN","IBCRU4",34,0)
BILLDV(IBIFN) ; returns true if one of the Billing Rates of the Charge Sets defined for the Rate Type of the bill
"RTN","IBCRU4",35,0)
 ; is modifiable by Region and therefore may need division,  ie. has a Region defined
"RTN","IBCRU4",36,0)
 ;
"RTN","IBCRU4",37,0)
 N IBX,IB0,IBU,IBI,IBJ,IBCS0,IBRSARR S IBX=0,IBRSARR=0
"RTN","IBCRU4",38,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),IBU=$G(^DGCR(399,+$G(IBIFN),"U"))
"RTN","IBCRU4",39,0)
 I IB0'="",+IBU D RT^IBCRU3($P(IB0,U,7),$P(IB0,U,5),$P(IBU,U,1,2),.IBRSARR)
"RTN","IBCRU4",40,0)
 I +IBRSARR S IBI=0 F  S IBI=$O(IBRSARR(IBI)) Q:'IBI  D  Q:IBX
"RTN","IBCRU4",41,0)
 . S IBJ=0 F  S IBJ=$O(IBRSARR(IBI,IBJ)) Q:'IBJ  D  Q:IBX
"RTN","IBCRU4",42,0)
 .. S IBCS0=$G(^IBE(363.1,IBJ,0)) I +$P(IBCS0,U,7) S IBX=1
"RTN","IBCRU4",43,0)
 Q IBX
"RTN","IBCRU4",44,0)
 ;
"RTN","IBCRU4",45,0)
 ;
"RTN","IBCRU4",46,0)
FINDCI(CS,ITEM,EFDT,MOD,RVCD,CHG,INAC,ARR,BASE) ; find charge item entries for a billable item (exact match on date)
"RTN","IBCRU4",47,0)
 ; Input:  CS, ITEM, EFDT required, if the others are defined they will be used in the match (ARR-pass by ref)
"RTN","IBCRU4",48,0)
 ; Output: returns string off all CI IFNs that match
"RTN","IBCRU4",49,0)
 ;         ARR = count of matchs found
"RTN","IBCRU4",50,0)
 ;         ARR(CI) = 0 node record of CI from 363.2
"RTN","IBCRU4",51,0)
 N IBX,IBXRF,IBEFDT,IBCI,IBLN K ARR S ARR=0,IBX="",EFDT=$G(EFDT)\1 I '$G(CS)!'$G(ITEM)!(EFDT'?7N) G FINDCIQ
"RTN","IBCRU4",52,0)
 ;
"RTN","IBCRU4",53,0)
 S IBXRF="AIVDTS"_CS,IBEFDT=-EFDT
"RTN","IBCRU4",54,0)
 ;
"RTN","IBCRU4",55,0)
 S IBCI=0 F  S IBCI=$O(^IBA(363.2,IBXRF,ITEM,IBEFDT,IBCI)) Q:'IBCI  D
"RTN","IBCRU4",56,0)
 . ;
"RTN","IBCRU4",57,0)
 . S IBLN=$G(^IBA(363.2,IBCI,0))
"RTN","IBCRU4",58,0)
 . I $D(INAC),INAC'=$P(IBLN,U,4) Q
"RTN","IBCRU4",59,0)
 . I $D(CHG),+CHG'=+$P(IBLN,U,5) Q
"RTN","IBCRU4",60,0)
 . I $D(RVCD),RVCD'=$P(IBLN,U,6) Q
"RTN","IBCRU4",61,0)
 . I $D(MOD),MOD'=$P(IBLN,U,7) Q
"RTN","IBCRU4",62,0)
 . I $D(BASE),+BASE'=+$P(IBLN,U,8) Q
"RTN","IBCRU4",63,0)
 . S IBX=IBX_IBCI_U,ARR=+$G(ARR)+1,ARR(IBCI)=IBLN
"RTN","IBCRU4",64,0)
 ;
"RTN","IBCRU4",65,0)
FINDCIQ Q IBX
"RTN","IBCRU4",66,0)
 ;
"RTN","IBCRU4",67,0)
FNDCI(CS,ITEM,EFDT,ARR,MOD) ; find charge item entries effective for a billable item on a given date
"RTN","IBCRU4",68,0)
 ; Input:  CS, ITEM, EFDT required, if MOD defined it will be used in the match (ARR-pass by ref)
"RTN","IBCRU4",69,0)
 ; Output: returns string of all CI IFNs that are effective for item on date
"RTN","IBCRU4",70,0)
 ;         ARR = count of effective charge items found
"RTN","IBCRU4",71,0)
 ;         ARR(CI) = 0 node record of CI from 363.2
"RTN","IBCRU4",72,0)
 N IBX,IBXRF,IBEFDT,IBCI,IBLN,IBITMFND K ARR S ARR=0,IBX="",EFDT=$G(EFDT)\1
"RTN","IBCRU4",73,0)
 I '$G(CS)!'$G(ITEM)!(EFDT'?7N) G FNDCIQ
"RTN","IBCRU4",74,0)
 ;
"RTN","IBCRU4",75,0)
 S IBXRF="AIVDTS"_CS,IBITMFND=0
"RTN","IBCRU4",76,0)
 S IBEFDT=-(EFDT+.01) F  S IBEFDT=$O(^IBA(363.2,IBXRF,ITEM,IBEFDT)) Q:'IBEFDT  D  Q:IBITMFND
"RTN","IBCRU4",77,0)
 . S IBCI=0 F  S IBCI=$O(^IBA(363.2,IBXRF,ITEM,IBEFDT,IBCI)) Q:'IBCI  D
"RTN","IBCRU4",78,0)
 .. ;
"RTN","IBCRU4",79,0)
 .. S IBLN=$G(^IBA(363.2,IBCI,0))
"RTN","IBCRU4",80,0)
 .. I $D(MOD),MOD'=$P(IBLN,U,7) Q  ; charge item modifier does not match modifier passed in
"RTN","IBCRU4",81,0)
 .. S IBITMFND=1 ; item found
"RTN","IBCRU4",82,0)
 .. I +$P(IBLN,U,4),+$P(IBLN,U,4)<EFDT Q  ; charge is inactive on date
"RTN","IBCRU4",83,0)
 .. I +$P(IBLN,U,5) S IBX=IBX_IBCI_U,ARR=+$G(ARR)+1,ARR(IBCI)=IBLN
"RTN","IBCRU4",84,0)
 ;
"RTN","IBCRU4",85,0)
FNDCIQ Q IBX
"RTN","IBCRU4",86,0)
 ;
"RTN","IBCRU4",87,0)
INACTCI(CI) ; returns date Charge Item becomes inactive: either Inactive Date or replaced (ie last active date)
"RTN","IBCRU4",88,0)
 ; returns: -1: not found, 0: not inactive, Date: date inactive or last active date before replaced
"RTN","IBCRU4",89,0)
 ;
"RTN","IBCRU4",90,0)
 N IBX,IBCI0,IBEFDT,IBITEM,IBXRF,IBNEXT,IBNCI,IBNCI0,IBINDT1,IBINDT2 S (IBINDT1,IBINDT2,IBX)=0
"RTN","IBCRU4",91,0)
 S IBCI0=$G(^IBA(363.2,+$G(CI),0)) I IBCI0="" S IBX=-1 G ACTCIQ
"RTN","IBCRU4",92,0)
 ;
"RTN","IBCRU4",93,0)
 S IBINDT1=+$P(IBCI0,U,4) ; charge item inactive date
"RTN","IBCRU4",94,0)
 ;
"RTN","IBCRU4",95,0)
 ; check previous entries for the item to see if it has been replaced
"RTN","IBCRU4",96,0)
 S IBEFDT=$P(IBCI0,U,3),IBITEM=+IBCI0,IBXRF="AIVDTS"_+$P(IBCI0,U,2)
"RTN","IBCRU4",97,0)
 S IBNEXT=-IBEFDT F  S IBNEXT=$O(^IBA(363.2,IBXRF,IBITEM,IBNEXT),-1) Q:'IBNEXT  D  Q:+IBINDT2
"RTN","IBCRU4",98,0)
 . S IBNCI=0 F  S IBNCI=$O(^IBA(363.2,IBXRF,IBITEM,IBNEXT,IBNCI)) Q:'IBNCI  D  Q:+IBINDT2
"RTN","IBCRU4",99,0)
 .. S IBNCI0=$G(^IBA(363.2,IBNCI,0)) I '$P(IBNCI0,U,3) Q
"RTN","IBCRU4",100,0)
 .. I $P(IBCI0,U,7)=$P(IBNCI0,U,7) S IBINDT2=$$FMADD^XLFDT(+$P(IBNCI0,U,3),-1)
"RTN","IBCRU4",101,0)
 ;
"RTN","IBCRU4",102,0)
 S IBX=IBINDT1 I 'IBX S IBX=IBINDT2
"RTN","IBCRU4",103,0)
 I +IBINDT2,+IBINDT1,IBINDT2<IBINDT1 S IBX=IBINDT2
"RTN","IBCRU4",104,0)
 ;
"RTN","IBCRU4",105,0)
ACTCIQ Q IBX
"RTN","IBCRU4",106,0)
 ;
"RTN","IBCRU4",107,0)
ITMUNIT(ITM,UNIT,CT) ; return true if the Item has the requested type of units or Charge Method
"RTN","IBCRU4",108,0)
 ; Input: ITM  - pointer to Item Code
"RTN","IBCRU4",109,0)
 ;        UNIT - Number of type of unit, or Charge Method, 4 - Miles, etc
"RTN","IBCRU4",110,0)
 ;        CT   - Charge Type (optional) 1 for Inst, 2 for Prof (363.1,.04)
"RTN","IBCRU4",111,0)
 ;
"RTN","IBCRU4",112,0)
 N IBFND,IBCS,IBCSN S IBFND=0 S ITM=+$G(ITM),UNIT=+$G(UNIT)
"RTN","IBCRU4",113,0)
 ;
"RTN","IBCRU4",114,0)
 I +ITM,+UNIT S IBCS=0 F  S IBCS=$O(^IBE(363.1,IBCS)) Q:'IBCS  D  I +IBFND Q
"RTN","IBCRU4",115,0)
 . S IBCSN=$G(^IBE(363.1,IBCS,0))
"RTN","IBCRU4",116,0)
 . ;
"RTN","IBCRU4",117,0)
 . I +$G(CT),+$P(IBCSN,U,4),$P(IBCSN,U,4)'=CT Q
"RTN","IBCRU4",118,0)
 . I +$P($G(^IBE(363.3,+$P(IBCSN,U,2),0)),U,5)'=UNIT Q
"RTN","IBCRU4",119,0)
 . ;
"RTN","IBCRU4",120,0)
 . I $O(^IBA(363.2,"AIVDTS"_IBCS,+ITM,"")) S IBFND=1
"RTN","IBCRU4",121,0)
 ;
"RTN","IBCRU4",122,0)
 Q IBFND
"RTN","IBCRU8")
0^41^B2263347
"RTN","IBCRU8",1,0)
IBCRU8 ;ALB/ARH - RATES: UTILITIES (RC) ; 10-OCT-03
"RTN","IBCRU8",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBCRU8",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCRU8",4,0)
 ;
"RTN","IBCRU8",5,0)
VERSDT(VERS) ; return effective date of RC version passed in
"RTN","IBCRU8",6,0)
 N IBX S IBX=0 I +$G(VERS) S IBX=$$VERSDT^IBCRHBRV(VERS)
"RTN","IBCRU8",7,0)
 Q IBX
"RTN","IBCRU8",8,0)
 ;
"RTN","IBCRU8",9,0)
RCDV(DIV) ; return RC Billing Region Data a division 'Region IFN^ID^TYPE'
"RTN","IBCRU8",10,0)
 N IBX,IBRG,IBRG0 S IBX=0
"RTN","IBCRU8",11,0)
 I +$G(DIV) S IBRG=0 F  S IBRG=$O(^IBE(363.31,IBRG)) Q:'IBRG  D
"RTN","IBCRU8",12,0)
 . I '$O(^IBE(363.31,IBRG,11,"B",+DIV,0)) Q
"RTN","IBCRU8",13,0)
 . S IBRG0=$G(^IBE(363.31,IBRG,0)) I $E(IBRG0,1,3)'="RC " Q
"RTN","IBCRU8",14,0)
 . S IBX=IBRG_U_$P(IBRG0,U,2,3)
"RTN","IBCRU8",15,0)
 Q IBX
"RTN","IBCRU8",16,0)
 ;
"RTN","IBCRU8",17,0)
RSOTHER(RS) ; return Billable Service if the Rate Schedule is applicable to Other Type of Care
"RTN","IBCRU8",18,0)
 ; with RC v2.0 Skilled Nursing and Sub-Acute has an entire set of charges separate from inpatient charges
"RTN","IBCRU8",19,0)
 ; charges are identified as Other (SNF/SA) by the Rate Schedule Billable Service for RC v2.0+ only
"RTN","IBCRU8",20,0)
 ; Output: 0 - Charges are not applicable to Other Care
"RTN","IBCRU8",21,0)
 ;         Billable Service ifn - Charges are applicable to the Billable Service only
"RTN","IBCRU8",22,0)
 ; only the Billable Service SKILLED NURSING is defined as an 'Other' type of care and for RC 2.0+ only
"RTN","IBCRU8",23,0)
 N IBRS0,IBRCX,IBFND,IBX S (IBRCX,IBFND)=0 S IBRS0=$G(^IBE(363,+$G(RS),0)) I IBRS0="" G RSOTHERQ
"RTN","IBCRU8",24,0)
 I $P(IBRS0,U,5)<$$VERSDT(2) G RSOTHERQ
"RTN","IBCRU8",25,0)
 S IBX=0 F  S IBX=$O(^IBE(363,RS,11,"B",IBX)) Q:'IBX  I $E($G(^IBE(363.1,IBX,0)),1,3)="RC-" S IBRCX=1 Q
"RTN","IBCRU8",26,0)
 I 'IBRCX G RSOTHERQ
"RTN","IBCRU8",27,0)
 S IBX=$$MCCRUTL^IBCRU1("SKILLED NURSING",13) I +$P(IBRS0,U,4)=IBX S IBFND=IBX
"RTN","IBCRU8",28,0)
RSOTHERQ Q IBFND
"RTN","IBCSC4")
0^42^B21002455
"RTN","IBCSC4",1,0)
IBCSC4 ;ALB/MJB - MCCR SCREEN 4 (INPT. EOC) ; 27 MAY 88 10:17
"RTN","IBCSC4",2,0)
 ;;2.0;INTEGRATED BILLING;**52,51,210,245**;21-MAR-94
"RTN","IBCSC4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC4",4,0)
 ;
"RTN","IBCSC4",5,0)
 ;MAP TO DGCRSC4
"RTN","IBCSC4",6,0)
 ;
"RTN","IBCSC4",7,0)
EN I $P(^DGCR(399,IBIFN,0),"^",5)>2 G EN^IBCSC5
"RTN","IBCSC4",8,0)
 I $D(IBASKCOD) K IBASKCOD D CODMUL^IBCU7 I $$BILLCPT^IBCRU4(IBIFN) S DGRVRCAL=1
"RTN","IBCSC4",9,0)
 I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
"RTN","IBCSC4",10,0)
 L ^DGCR(399,IBIFN):1
"RTN","IBCSC4",11,0)
 D ^IBCSCU S IBSR=4,IBSR1="",IBV1="0000000"_$S($$FT^IBCEF(IBIFN)'=2:0,1:1),IBUC="UNSPECIFIED CODE"
"RTN","IBCSC4",12,0)
 S:IBV IBV1="11111111"
"RTN","IBCSC4",13,0)
 D H^IBCSCU F I=1:1:4 S Y="Q"_I_"^IBCVA" D @Y
"RTN","IBCSC4",14,0)
 D INP
"RTN","IBCSC4",15,0)
 S IBBT=$P(IB(0),"^",4)_$P(IB(0),"^",5)_$P(IB(0),"^",6)
"RTN","IBCSC4",16,0)
 D:DGPT(0)]"" DX^IBCSC4A D OCC^IBCVA1
"RTN","IBCSC4",17,0)
 I '$P(DGPT(0),U,6) W !?26,$S('DGPT(0):"No PTF record for this ADMISSION",1:"PTF record status: OPEN")
"RTN","IBCSC4",18,0)
 S J=$P(IB("U"),U,20),J=$S(J=99:"",J="":"",$L(J)=1:".0"_J,1:"."_J)
"RTN","IBCSC4",19,0)
 S Z=1 X IBWW W " Admission  : " S I=$S($P(DGPT(0),U,2)]"":$P(DGPT(0),U,2),1:$P(IBIP,U,2)_J) S:$P(I,".",2)=""&I $P(I,".",2)="2400"
"RTN","IBCSC4",20,0)
 S Y=$$FMTE^XLFDT(I,"1P")
"RTN","IBCSC4",21,0)
 W Y,?49,"Accident Hour: ",$S($P(IB("U"),U,10)=99:IBU,$P(IB("U"),U,10)'="":$P(IB("U"),U,10),1:IBU)
"RTN","IBCSC4",22,0)
 W !?4,"Source     : " S I=$P(^DD(399,159,0),U,3),I=$P($P(I,";",($P(IB("U"),U,9))),":",2) W I
"RTN","IBCSC4",23,0)
 W ?58,"Type: ",$S($P(IB("U"),U,8)=3:"ELECTIVE",$P(IB("U"),U,8)=1:"EMERGENCY",$P(IB("U"),U,8)=2:"URGENT",1:IBU)
"RTN","IBCSC4",24,0)
 D OT
"RTN","IBCSC4",25,0)
 S Z=2 X IBWW
"RTN","IBCSC4",26,0)
 W " Discharge  : " S Y=$S($P(IBIP,U,6)>0:$P(IBIP,U,6),1:"") X ^DD("DD") W $S(Y]"":Y,1:IBU)
"RTN","IBCSC4",27,0)
 W !?4,"Status     : ",$S($P(IB("U"),U,12)]""&($D(^DGCR(399.1,(+$P(IB("U"),"^",12)),0))):$P(^(0),"^",1),1:IBU)
"RTN","IBCSC4",28,0)
 N IBPOARR,IBDATE
"RTN","IBCSC4",29,0)
 D SET^IBCSC4D(IBIFN,"",.IBPOARR)
"RTN","IBCSC4",30,0)
 S IBDATE=$$BDATE^IBACSV(+$G(IBIFN)) ; The EVENT DATE of the bill
"RTN","IBCSC4",31,0)
 S Z=3,IBW=1 X IBWW W " Prin. Diag.: " S Y=$$DX(0,IBDATE) W $S(Y'="":$P(Y,U,4)_" - "_$P(Y,U,2),1:IBUN)
"RTN","IBCSC4",32,0)
 F I=1:1:4 S Y=$$DX(+Y,IBDATE) Q:Y=""  W !?4,"Other Diag.: ",$P(Y,U,4)_" - "_$P(Y,U,2)
"RTN","IBCSC4",33,0)
 I +Y S Y=$$DX(+Y,IBDATE) I +Y W !?4,"***There are more diagnoses associated with this bill.***"
"RTN","IBCSC4",34,0)
 ;F I=15:1:18 I $P(IB("C"),U,I)]"" W !?4,"Other Diag.: ",$S($D(^ICD9($P(IB("C"),U,I),0)):$P(^(0),U,3)_" - "_$P(^(0),U,1),1:IBU)
"RTN","IBCSC4",35,0)
 S Z=4,IBW=1,DGPCM=$P(IB(0),U,9) X IBWW W " Cod. Method: ",$S(DGPCM="":IBUN,DGPCM=9:"ICD-9-CM",DGPCM=4:"CPT-4",1:"HCPCS")
"RTN","IBCSC4",36,0)
 D:$D(IBPROC) WRT^IBCSC5
"RTN","IBCSC4",37,0)
 ;I DGPCM="" W !?4,"Pro. Code  : ",IBUN G OCC
"RTN","IBCSC4",38,0)
 ;I $D(IBCPT),DGPCM=4 F I=1:1:3 I $D(IBCPT(I)) W !?4,"CPT Code   : ",$P(^ICPT(IBCPT(I),0),U,2)," - ",$P(^(0),U),?55,"Date: " S Y=$P(IB("C"),U,(I+10)) D DT^DIQ
"RTN","IBCSC4",39,0)
 ;I DGPCM=4 W:'$D(IBCPT) !?4,"Pro. Code  : ",IBUN G OCC
"RTN","IBCSC4",40,0)
 ;I $D(IBICD),DGPCM=9 F I=4:1:6 I $D(IBICD(I)) W !?4,"ICD Code   : ",$S($D(^ICD0(IBICD(I),0)):$E($P(^(0),U,4),1,20)_" - "_$P(^(0),U,1),1:IBUC),?55,"Date: " S Y=$P(IB("C"),U,(I+7)) D DT^DIQ
"RTN","IBCSC4",41,0)
 ;I DGPCM=9 W:'$D(IBICD) !?4,"Pro. Code  : ",IBUN G OCC
"RTN","IBCSC4",42,0)
 ;I $D(IBHC),DGPCM=5 F I=7:1:9 I $D(IBHC(I)) W !?4,"HCFA Code  : ",$P(^ICPT(IBHC(I),0),U,2)," - ",IBHCN(I),?55,"Date: " S Y=$P(IB("C"),U,(I+4)) D DT^DIQ
"RTN","IBCSC4",43,0)
 ;I DGPCM=5 W:'$D(IBHC) !?4,"Pro. Code  : ",IBUN
"RTN","IBCSC4",44,0)
OCC ;I $O(^DGCR(399,IBIFN,"CP",0)) S I=0 F I1=1:1 S I=$O(^DGCR(399,IBIFN,"CP",I)) D:I1>9 MORE Q:'I  W !,?17 S Y=$P(^(I,0),"^",2) D:+Y D^DIQ D OCC1
"RTN","IBCSC4",45,0)
 S Z=$S($P(IB(0),U,5)<3:5,1:6)
"RTN","IBCSC4",46,0)
 S IBW=1 X IBWW W " Pros. Items: " S Y=$$PD^IBCSC5 I 'Y W IBUN
"RTN","IBCSC4",47,0)
 S Z=$S($P(IB(0),U,5)<3:6,1:7) X IBWW
"RTN","IBCSC4",48,0)
 W " Occ. Code  : " F I=1:1:5 I $D(IBO(I)) W:I>1 !?4,"Occ. Code  : ",$E(IBOCN(I),1,27) W:I=1 $E(IBOCN(I),1,27) S Y=IBOCD(I) X ^DD("DD") W ?55,Y S Y=IBOCD2(I) I +Y X ^DD("DD") W " - ",Y
"RTN","IBCSC4",49,0)
 I '$D(IBO) W IBUN
"RTN","IBCSC4",50,0)
 I $D(IBO)=1,IBO="" W IBUN
"RTN","IBCSC4",51,0)
 S Z=$S($P(IB(0),U,5)<3:7,1:8) X IBWW
"RTN","IBCSC4",52,0)
 W " Cond. Code : " F I=1:1:5 I $D(IBCC(I)) W:I>1 !?4,"Cond. Code : ",IBCCN(I) W:I=1 IBCCN(I)
"RTN","IBCSC4",53,0)
 I '$D(IBCC) W IBUN
"RTN","IBCSC4",54,0)
 I $D(IBCC)=1,IBCC="" W IBUN
"RTN","IBCSC4",55,0)
 S Z=$S($P(IB(0),U,5)<3:8,1:9)
"RTN","IBCSC4",56,0)
 X IBWW W " Value Code : " S IBVC=0
"RTN","IBCSC4",57,0)
 I $$FT^IBCEF(IBIFN)'=2 D
"RTN","IBCSC4",58,0)
 . D VC^IBCVA1 I +IBVC S J=1,I=0 F  S I=$O(IBVC(I)) Q:'I  W:J>1 !,?3," Value Code : " W ?17,$E($P(IBVC(I),U,2),1,40),?58,$P(IBVC(I),U,3) S J=J+1
"RTN","IBCSC4",59,0)
 W:'IBVC IBUN K IBVC
"RTN","IBCSC4",60,0)
 D Q^IBCSC4B G ^IBCSCP
"RTN","IBCSC4",61,0)
 Q
"RTN","IBCSC4",62,0)
OCC1 W $P(^DGCR(399,IBIFN,"CP",I,0),"^",3)_" - "_$P($$PRCD^IBCEF1($P(^DGCR(399,IBIFN,"CP",I,0),U)),U),?55,"Date: ",Y
"RTN","IBCSC4",63,0)
 Q
"RTN","IBCSC4",64,0)
 ;IBIP= PTF ptr (399,.08) ^ PTF admiss dt (45,2) or Event dt (399,.03)^ accident hour (399,160) 
"RTN","IBCSC4",65,0)
 ; ^ source of addmis (399,159) ^ typ of addmiss (399,158)
"RTN","IBCSC4",66,0)
 ; ^ PTF disch dt (45,70) or Non-VA disch dt (399,.16) ^ disch status (399,162)
"RTN","IBCSC4",67,0)
 ; ^ dxls (45,79) ^ disch bedsection (399,161)
"RTN","IBCSC4",68,0)
INP F I="C","U",0 S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCSC4",69,0)
 S IBPTF=$P(IB(0),U,8) F I=0,70 S DGPT(I)=$S(IBPTF="":"",$D(^DGPT(IBPTF,I)):^(I),1:"")
"RTN","IBCSC4",70,0)
 F I="C","U",0 S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCSC4",71,0)
 S IBIP=IBPTF_"^"_$S($P(DGPT(0),"^",2)]"":$P(DGPT(0),"^",2),1:$P(IB(0),"^",3))_"^"_$P(IB("U"),"^",10)_"^"_$P(IB("U"),"^",9)_"^"_$P(IB("U"),"^",8)_"^"_$S(+DGPT(70)>0:+DGPT(70),1:$P(IB(0),"^",16))_"^"
"RTN","IBCSC4",72,0)
 S IBIP=IBIP_$P(IB("U"),"^",12)_"^"_$S($D(DGPT(70)):$P(DGPT(70),"^",10),1:"")_"^"_$P(IB("U"),"^",11)
"RTN","IBCSC4",73,0)
 Q
"RTN","IBCSC4",74,0)
SET ;S ^DD(399.0304,0,"ID","WRITE")="N X S X=^(0) W ""   "",$E($P($G(@(U_$P($P(X,U),"";"",2)_+X_"",0)"")),U,$S($P(X,U,1)[""CPT"":2,1:4)),1,30)"
"RTN","IBCSC4",75,0)
 Q
"RTN","IBCSC4",76,0)
 ;
"RTN","IBCSC4",77,0)
DX(ORDER,IBDATE) ; Get next diagnosis data
"RTN","IBCSC4",78,0)
 N IBX
"RTN","IBCSC4",79,0)
 S IBX=""
"RTN","IBCSC4",80,0)
 S ORDER=$O(IBPOARR(ORDER))
"RTN","IBCSC4",81,0)
 I ORDER S IBX=ORDER_U_$$ICD9^IBACSV(+IBPOARR(ORDER),$G(IBDATE))
"RTN","IBCSC4",82,0)
 Q IBX
"RTN","IBCSC4",83,0)
 ;
"RTN","IBCSC4",84,0)
OT ; print Other Care (SNF) multiple
"RTN","IBCSC4",85,0)
 N IBX,IBY,IBN I '$O(^DGCR(399,IBIFN,"OT",0)) W !,?4,"SNF Care   : UNSPECIFIED [NOT REQUIRED]"
"RTN","IBCSC4",86,0)
 S IBX=0 F  S IBX=$O(^DGCR(399,IBIFN,"OT",IBX)) Q:'IBX  D
"RTN","IBCSC4",87,0)
 . S IBY=$G(^DGCR(399,IBIFN,"OT",IBX,0)) Q:'IBY
"RTN","IBCSC4",88,0)
 . S IBN=$P($G(^DGCR(399.1,+IBY,0)),U,1),IBN=$S(IBN["SKILLED":"SNF Care ",IBN["SUB-ACUTE":"Sub-Acute",1:"Unknown  ")
"RTN","IBCSC4",89,0)
 . W !,?4,IBN,"  : ",$$FMTE^XLFDT(+$P(IBY,U,2))," - ",$$FMTE^XLFDT(+$P(IBY,U,3))
"RTN","IBCSC4",90,0)
 Q
"RTN","IBCSC4",91,0)
 ;IBCSC4
"RTN","IBCSC5A")
0^59^B40439674
"RTN","IBCSC5A",1,0)
IBCSC5A ;ALB/ARH - ADD/ENTER PRESCRIPTION FILLS ; 12/27/93
"RTN","IBCSC5A",2,0)
 ;;2.0;INTEGRATED BILLING;**27,52,106,51,160,137,245**;21-MAR-94
"RTN","IBCSC5A",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC5A",4,0)
 ;
"RTN","IBCSC5A",5,0)
EN ;add/edit prescription fills for a bill, IBIFN required
"RTN","IBCSC5A",6,0)
 S IBX=$$BILL(IBIFN) Q:'IBIFN  S DFN=+IBX,IBDT1=$P(IBX,U,2),IBDT2=$P(IBX,U,3),IBRXALL=$P(IBX,U,4)
"RTN","IBCSC5A",7,0)
 D SET(IBIFN,.IBRXA,"")
"RTN","IBCSC5A",8,0)
 D RXDISP^IBCSC5C(DFN,IBDT1,IBDT2,.IBPR,.IBPRO,.IBRXA,IBRXALL) I +$P($G(IBPRO),U,2) D NEWRX^IBCSC5C(+IBPRO) I +$G(IBLIST) D ADDNEW^IBCSC5C(IBIFN,IBLIST,.IBPR,.IBPRO) S DGRVRCAL=1
"RTN","IBCSC5A",9,0)
 S IBRXAP=+$G(IBPRO) D SET(IBIFN,.IBRXA,.IBRXAP),DISP(.IBRXA,.IBRXAP)
"RTN","IBCSC5A",10,0)
E1 S IBPIFN=0,IBRX=$$ASKRX(.IBRXAP,.IBPRO) G:IBRX="" EXIT S IBDT=$P(IBRX,U,2),IBRX=$P(IBRX,U,1),DGRVRCAL=1
"RTN","IBCSC5A",11,0)
 I 'IBDT S IBDT=$O(IBRXA(IBRX,0)) S:'IBDT IBDT=$O(IBPR(IBRX,0)) S IBDT=$$ASKDT(IBDT1,IBDT2,IBDT) G:'IBDT E1
"RTN","IBCSC5A",12,0)
 I +$$RXDUP^IBCU3(IBRX,IBDT,IBIFN,1),'$D(IBRXA(IBRX,IBDT)) G E1
"RTN","IBCSC5A",13,0)
 I '$D(IBPR(IBRX,IBDT)) W !,"This rx fill does not exist in Pharmacy for this patient!",!
"RTN","IBCSC5A",14,0)
 S IBPIFN=$G(IBRXA(IBRX,IBDT)),IBDRG=$P(IBPIFN,U,2)
"RTN","IBCSC5A",15,0)
 I 'IBPIFN S IBX=$G(IBPR(IBRX,IBDT)),IBPIFN=$$ADD(IBRX,IBIFN,IBDT,$P(IBX,U,3),$P(IBX,U,1),$P(IBX,U,4,6)) D  G:'IBPIFN E1
"RTN","IBCSC5A",16,0)
 . I 'IBPIFN W " ??" Q
"RTN","IBCSC5A",17,0)
 . W "  ... ADDED"
"RTN","IBCSC5A",18,0)
 D EDIT(+IBPIFN,$P(IBPIFN,U,7)) S IBRXAP=+$G(IBPRO) D SET(IBIFN,.IBRXA,.IBRXAP) G E1
"RTN","IBCSC5A",19,0)
 ;
"RTN","IBCSC5A",20,0)
EXIT ;
"RTN","IBCSC5A",21,0)
 K IBPIFN,IBRX,IBDRG,IBX,IBDT1,IBDT2,IBRXA,IBPR,IBDT,IBLIST,IBPRO,IBRXAP,IBRXALL
"RTN","IBCSC5A",22,0)
 Q
"RTN","IBCSC5A",23,0)
 ;
"RTN","IBCSC5A",24,0)
ASKRX(IBRXAP,IBPRO) ;
"RTN","IBCSC5A",25,0)
 N X,Y,IBY,IBX W ! S IBX=""
"RTN","IBCSC5A",26,0)
 I +$G(IBIFN) S DIR("?")="The prescription number for the fill.  "_$$HTEXT^IBCSC5C,DIR("??")="^D HELP^IBCSC5A("_IBIFN_")"
"RTN","IBCSC5A",27,0)
 S DIR("A")="Select RX FILL",DIR(0)="FO^1:11^K:X'?.UN X" D ^DIR I $D(DIRUT)!(Y'?.AN) S Y="" K DIR,DIRUT G ARX1E
"RTN","IBCSC5A",28,0)
 S IBX=Y I $D(IBRXAP)<10,$D(IBPRO)<10 G ARX1E
"RTN","IBCSC5A",29,0)
 ;
"RTN","IBCSC5A",30,0)
 S IBY=$G(IBRXAP(IBX)) S:IBY="" IBY=$G(IBPRO(IBX)) I IBY="" G ARX1E
"RTN","IBCSC5A",31,0)
 W ! S DIR(0)="YO",DIR("A")="ADD/EDIT RX FILL "_$P(IBY,U,1)_" FOR "_$$FMTE^XLFDT($P(IBY,U,2))_" CORRECT",DIR("B")="YES"
"RTN","IBCSC5A",32,0)
 D ^DIR K DIR I Y=1,'$D(DIRUT) S IBX=IBY
"RTN","IBCSC5A",33,0)
ARX1E Q IBX
"RTN","IBCSC5A",34,0)
 ;
"RTN","IBCSC5A",35,0)
ASKDT(IBDT1,IBDT2,IBDT) ;
"RTN","IBCSC5A",36,0)
 S DIR("A")="Select RX FILL DATE",DIR(0)="DO^"_IBDT1_":"_IBDT2_":EX",DIR("B")=$$FMTE^XLFDT(IBDT) D ^DIR K DIR,DTOUT,DIRUT
"RTN","IBCSC5A",37,0)
 Q $S(Y?7N:Y,1:0)
"RTN","IBCSC5A",38,0)
 ;
"RTN","IBCSC5A",39,0)
ADD(RX,IFN,IBDT,DRUG,PIFN,OTHER) ;
"RTN","IBCSC5A",40,0)
 N IBX,X,Y,DD,DO,DA,DIC,DLAYGO
"RTN","IBCSC5A",41,0)
 S IBX=0 S DRUG=$$DRUG($G(DRUG)) G:'DRUG ADDE
"RTN","IBCSC5A",42,0)
 S DIC="^IBA(362.4,",DIC(0)="AQL",X=RX,DLAYGO=362.4 D FILE^DICN
"RTN","IBCSC5A",43,0)
 I Y>0 D
"RTN","IBCSC5A",44,0)
 . S DIE=DIC,(IBX,DA)=+Y,DR=".02////"_IFN_";.03////"_IBDT_";.04////"_DRUG_";.05////"_+PIFN_";.06////"_$P(OTHER,U,1)_";.07////"_$P(OTHER,U,2)_";.08////"_$P(OTHER,U,3) D ^DIE K DIE,DIC,DA,DR
"RTN","IBCSC5A",45,0)
 . S DGRVRCAL=1
"RTN","IBCSC5A",46,0)
ADDE Q IBX
"RTN","IBCSC5A",47,0)
 ;
"RTN","IBCSC5A",48,0)
EDIT(PIFN,REVIEN) ;
"RTN","IBCSC5A",49,0)
 N IBCHG,DIE,DR,DA,DIC,DIDEL
"RTN","IBCSC5A",50,0)
 S DIDEL=362.4,DIE="^IBA(362.4,"
"RTN","IBCSC5A",51,0)
 S DR=".01;.03;.04;.06;.07;.08;.09"
"RTN","IBCSC5A",52,0)
 S DA=PIFN D ^DIE
"RTN","IBCSC5A",53,0)
 I '$D(^IBA(362.4,PIFN,0)),$G(REVIEN) D  ; Deleted RX - delete related rev code/CPT code
"RTN","IBCSC5A",54,0)
 . I $P($G(^DGCR(399,IBIFN,"RC",REVIEN,0)),U,15) S DA(1)=IBIFN,DA=$P(^(0),U,15),DIK="^DGCR(399,"_DA(1)_",""CP""," D ^DIK
"RTN","IBCSC5A",55,0)
 . S DA=REVIEN,DA(1)=IBIFN,DIK="^DGCR(399,"_DA(1)_",""RC""," D ^DIK
"RTN","IBCSC5A",56,0)
 . S DGRVRCAL=1
"RTN","IBCSC5A",57,0)
 Q
"RTN","IBCSC5A",58,0)
 ;
"RTN","IBCSC5A",59,0)
SET(IFN,RXARR,RXARRP) ;setup array of all rx fills for bill, array name should be passed by reference
"RTN","IBCSC5A",60,0)
 ;returns: RXARR(RX #, FILL DT)=RX IFN (362.4) ^ DRUG ^ DAYS SUPPLY ^ QTY ^ NDC # ^ Charge if known ^ ien of associated rev code multiple, if known ^ NDC FORMAT INDICATOR (1-4)
"RTN","IBCSC5A",61,0)
 ;         RXARR=BILL IFN ^ RX count
"RTN","IBCSC5A",62,0)
 N CNT,IBX,IBY,IBZ,PIFN,IBC,IBCNT,IBRC S IBCNT=+$G(RXARRP),IBC="AIFN"_$G(IFN) K RXARR,RXARRP
"RTN","IBCSC5A",63,0)
 ;
"RTN","IBCSC5A",64,0)
 D RCITEM(IFN,"IBRC",3)
"RTN","IBCSC5A",65,0)
 S (CNT,IBX)=0 F  S IBX=$O(^IBA(362.4,IBC,IBX)) Q:IBX=""  S PIFN=0 F  S PIFN=$O(^IBA(362.4,IBC,IBX,PIFN)) Q:'PIFN  D
"RTN","IBCSC5A",66,0)
 .S IBY=$G(^IBA(362.4,PIFN,0)) Q:IBY=""  S CNT=CNT+1,RXARR($P(IBY,U,1),+$P(IBY,U,3))=PIFN_U_$P(IBY,U,4)_U_$P(IBY,U,6,8),$P(RXARR($P(IBY,U),+$P(IBY,U,3)),U,6)=$$CHG^IBCF4(PIFN,3,.IBRC)
"RTN","IBCSC5A",67,0)
 . I $G(IFN) S $P(RXARR($P(IBY,U),+$P(IBY,U,3)),U,7)=$$FINDREV(IFN,3,PIFN)
"RTN","IBCSC5A",68,0)
 . S $P(RXARR($P(IBY,U),+$P(IBY,U,3)),U,8)=$P(IBY,U,9)
"RTN","IBCSC5A",69,0)
 ;
"RTN","IBCSC5A",70,0)
 S RXARR=$G(IFN)_"^"_CNT
"RTN","IBCSC5A",71,0)
 S IBX=0 F  S IBX=$O(RXARR(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(RXARR(IBX,IBY)) Q:'IBY  S IBCNT=IBCNT+1,RXARRP(IBCNT)=IBX_"^"_IBY_"^"_$P(RXARR(IBX,IBY),U,7)
"RTN","IBCSC5A",72,0)
 Q
"RTN","IBCSC5A",73,0)
 ;
"RTN","IBCSC5A",74,0)
DISP(RXARR,RXARRP) ;screen display of existing fills for a bill: input should be print order array returned by SET^IBCSC5A: RXARR(RX,DT)=RX IFN (362.4) ^ DRUG, passed by reference
"RTN","IBCSC5A",75,0)
 N IBX,IBY,IBZ,IBS,IBP,IBIFN
"RTN","IBCSC5A",76,0)
 W !!,?5,"-----------------  Existing Prescriptions on Bill  -----------------",!
"RTN","IBCSC5A",77,0)
 S IBIFN=+$G(RXARR)
"RTN","IBCSC5A",78,0)
 S IBI=0 F  S IBI=$O(RXARRP(IBI)) Q:IBI=""  S IBX=$P(RXARRP(IBI),U,1),IBY=$P(RXARRP(IBI),U,2) I $D(RXARR(IBX,IBY)) D
"RTN","IBCSC5A",79,0)
 . S IBS=$$RXSTAT^IBCU1(+$P(RXARR(IBX,IBY),U,2),+$P($G(^IBA(362.4,+RXARR(IBX,IBY),0)),U,5),IBY)
"RTN","IBCSC5A",80,0)
 . S IBZ=$P($G(^PSDRUG(+$P(RXARR(IBX,IBY),U,2),0)),U,1),IBP=$$PRVNM(+RXARR(IBX,IBY))
"RTN","IBCSC5A",81,0)
 . W !,$J(IBI,2),")",?5,IBX,?19,$E(IBZ,1,25),?46,$$DATE^IBCSC5C(IBY),?56,$P(IBS,U,1),?61,$P(IBS,U,2),?69,$P(IBS,U,3)
"RTN","IBCSC5A",82,0)
 . S IBZ=$$RXDUP^IBCU3(IBX,IBY,IBIFN) I +IBZ W ?73,$P($G(^DGCR(399,+IBZ,0)),U,1)
"RTN","IBCSC5A",83,0)
 . S IBZ=$G(^DGCR(399,IBIFN,"RC",+$P(RXARR(IBX,IBY),U,7),0))
"RTN","IBCSC5A",84,0)
 . W !,?5,$E(IBP,1,25),?35,"(Rx Procedure ",$S($P(IBZ,U,15):"#"_$P(IBZ,U,15)_" "_$$CPTNM^IBCRBH1(IBIFN,4,$P(IBZ,U,15)),1:"Missing"),"  Rev Code ",$S(IBZ:"#"_+$P(RXARR(IBX,IBY),U,7)_" "_$P($G(^DGCR(399.2,+IBZ,0)),U),1:"Missing"),")"
"RTN","IBCSC5A",85,0)
 W !
"RTN","IBCSC5A",86,0)
 Q
"RTN","IBCSC5A",87,0)
 ;
"RTN","IBCSC5A",88,0)
HELP(IFN) ;called for help from rx enter to display existing rx, displays rx' from 52 and 399
"RTN","IBCSC5A",89,0)
 I +$G(IFN) N IBX,IBRXA S IBX=$$BILL(IFN) I +IBX D SET(IFN,.IBRXA,""),RXDISP^IBCSC5C($P(IBX,U,1),$P(IBX,U,2),$P(IBX,U,3),.IBPR,.IBPRO,.IBRXA,$P(IBX,U,4)) S IBRXAP=+IBPRO D SET(IFN,.IBRXA,.IBRXAP),DISP(.IBRXA,.IBRXAP)
"RTN","IBCSC5A",90,0)
 Q
"RTN","IBCSC5A",91,0)
BILL(IBIFN) ; return data on a bill 'patient ifn ^ from dt ^ to dt ^ true if add original rx'
"RTN","IBCSC5A",92,0)
 N IBX,IBY
"RTN","IBCSC5A",93,0)
 S IBX=$G(^DGCR(399,+$G(IBIFN),0)),IBY=$P(IBX,U,2)
"RTN","IBCSC5A",94,0)
 I '$$PERDIEM^IBCRU3(+$P(IBX,U,7),+$P(IBX,U,5),+$P(IBX,U,3)) S $P(IBY,U,4)=1
"RTN","IBCSC5A",95,0)
 S IBX=$G(^DGCR(399,+IBIFN,"U")),$P(IBY,U,2)=+IBX,$P(IBY,U,3)=+$P(IBX,U,2)
"RTN","IBCSC5A",96,0)
 Q IBY
"RTN","IBCSC5A",97,0)
DRUG(IBD) ; get drug
"RTN","IBCSC5A",98,0)
 N X,Y S IBD=+$G(IBD) I '$D(^PSDRUG(IBD,0)) S IBD=0,DIC="^PSDRUG(",DIC(0)="AEQ" D ^DIC K DIC I +Y>0 S IBD=+Y
"RTN","IBCSC5A",99,0)
 Q IBD
"RTN","IBCSC5A",100,0)
 ;
"RTN","IBCSC5A",101,0)
RCITEM(IBIFN,ARRAY,TYPE) ; Pull off all item charges from RC multiple 
"RTN","IBCSC5A",102,0)
 ;  for item TYPE on bill IBIFN, return array ARRAY
"RTN","IBCSC5A",103,0)
 ; If type = "ALL", pull off all types
"RTN","IBCSC5A",104,0)
 ;Set up @ARRAY@(type,item reference,ct)=# units^unit charge
"RTN","IBCSC5A",105,0)
 ; If no pointer to an item, this was a manually entered charge and
"RTN","IBCSC5A",106,0)
 ;  will only 'associate' with the items found in the appropriate
"RTN","IBCSC5A",107,0)
 ;  item source file that are not referenced by an item in the revenue
"RTN","IBCSC5A",108,0)
 ;  code multiple in a sequential fashion (first unassociated 'RC' will
"RTN","IBCSC5A",109,0)
 ;  correlate to the first unassociated entry found for the bill in source file)
"RTN","IBCSC5A",110,0)
 N Z,Z0,Z1
"RTN","IBCSC5A",111,0)
 S Z=0
"RTN","IBCSC5A",112,0)
 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$G(^(Z,0)) I $S(TYPE="ALL":1,1:$P(Z0,U,10)=TYPE) I $P(Z0,U,10)'="" S Z1=$S($P(Z0,U,11)="":0,1:$P(Z0,U,11)),@ARRAY@($P(Z0,U,10),Z1,Z)=$P(Z0,U,3)_U_$P(Z0,U,2)
"RTN","IBCSC5A",113,0)
 Q
"RTN","IBCSC5A",114,0)
 ;
"RTN","IBCSC5A",115,0)
FINDREV(IBIFN,TYP,PTR) ; Finds the first revenue code that matches the
"RTN","IBCSC5A",116,0)
 ; same item type and item pointer
"RTN","IBCSC5A",117,0)
 ;
"RTN","IBCSC5A",118,0)
 N REVIEN,Z,Z0
"RTN","IBCSC5A",119,0)
 S Z=0
"RTN","IBCSC5A",120,0)
 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$G(^(Z,0)) I $P(Z0,U,10)=TYP,$P(Z0,U,11)=PTR S REVIEN=Z Q
"RTN","IBCSC5A",121,0)
 Q $G(REVIEN)
"RTN","IBCSC5A",122,0)
 ;
"RTN","IBCSC5A",123,0)
NDCNUM(IBNDC) ; Returns the format of the NDC # IBNDC, if possible
"RTN","IBCSC5A",124,0)
 N Z
"RTN","IBCSC5A",125,0)
 S Z=$TR(IBNDC,"-")
"RTN","IBCSC5A",126,0)
 Q $S(IBNDC?4N1"-"4N1"-"2N:1,IBNDC?5N1"-"3N1"-"2N:2,IBNDC?5N1"-"4N1"-"1N:3,IBNDC?5N1"-"4N1"-"2N!($L(Z)=11):4,IBNDC'="":1,1:"")
"RTN","IBCSC5A",127,0)
 ;
"RTN","IBCSC5A",128,0)
PRVNM(PIFN) ; return provider name for an rx, if one defined or null
"RTN","IBCSC5A",129,0)
 N IBX,IBPRV,IBRXIFN S IBPRV=""
"RTN","IBCSC5A",130,0)
 S IBRXIFN=$P($G(^IBA(362.4,+$G(PIFN),0)),U,5) I +IBRXIFN S IBX=$P($G(^PSRX(IBRXIFN,0)),U,4) I +IBX S IBPRV=$P($G(^VA(200,+IBX,0)),U,1)
"RTN","IBCSC5A",131,0)
 Q IBPRV
"RTN","IBCSCE")
0^60^B14523025
"RTN","IBCSCE",1,0)
IBCSCE ;ALB/MRL,MJB - MCCR SCREEN EDITS ;07 JUN 88 14:35
"RTN","IBCSCE",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,91,106,51,137,236,245**;21-MAR-94
"RTN","IBCSCE",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSCE",4,0)
 ;
"RTN","IBCSCE",5,0)
 ;MAP TO DGCRSCE
"RTN","IBCSCE",6,0)
 ; always do procedures last because they are edited upon return to screen routine
"RTN","IBCSCE",7,0)
 I IBDR20["54," S IBDR20=$P(IBDR20,"54,",1)_$P(IBDR20,"54,",2)_"54,"
"RTN","IBCSCE",8,0)
 I IBDR20["44," S IBDR20=$P(IBDR20,"44,",1)_$P(IBDR20,"44,",2)_"44,"
"RTN","IBCSCE",9,0)
LOOP N IBDRLP,IBDRL S IBDRLP=IBDR20 F IBDRL=1:1 S IBDR20=$P(IBDRLP,",",IBDRL) Q:IBDR20=""  D EDIT
"RTN","IBCSCE",10,0)
 Q
"RTN","IBCSCE",11,0)
EDIT N IBQUERY
"RTN","IBCSCE",12,0)
 I (IBDR20["31") D MCCR^IBCNSP2 G ENQ
"RTN","IBCSCE",13,0)
 I (IBDR20["43")!(IBDR20["52") D ^IBCSC4D G ENQ
"RTN","IBCSCE",14,0)
 I (IBDR20["74")!(IBDR20["53") K DR N I D ^IBCOPV S (DA,Y)=IBIFN G TMPL
"RTN","IBCSCE",15,0)
 I (IBDR20["54"),$P($G(^IBE(350.9,1,1)),"^",17) K DR N I D EN1^IBCCPT(.IBQUERY) D CLOSE^IBSDU(.IBQUERY) G TMPL ;
"RTN","IBCSCE",16,0)
 I (IBDR20["55") D ^IBCSC5A G ENQ
"RTN","IBCSCE",17,0)
 I (IBDR20["45")!(IBDR20["56") D ^IBCSC5B G ENQ
"RTN","IBCSCE",18,0)
 I (IBDR20["66")!(IBDR20["76") D EDIT^IBCRBE(IBIFN) G ENQ
"RTN","IBCSCE",19,0)
 I (IBDR20["87") D EN1^IBCEP6 G ENQ
"RTN","IBCSCE",20,0)
 F Q=1:1:9 I IBDR20[("9"_Q) D EDIT^IBCSC9 G ENQ
"RTN","IBCSCE",21,0)
TMPL N IBFLIAE S IBFLIAE=1 ;to invoke EN^DGREGAED from [IB SCREEN1]
"RTN","IBCSCE",22,0)
 S DR="[IB SCREEN"_IBSR_IBSR1_"]",(DA,Y)=IBIFN,DIE="^DGCR(399,"
"RTN","IBCSCE",23,0)
 D ^DIE K DIE,DR,DLAYGO
"RTN","IBCSCE",24,0)
 I (IBDR20["15") S DR="110///"_$$PTADD^IBCU(+$P(^DGCR(399,IBIFN,0),U,2),"PSA"),(DA,Y)=IBIFN,DIE="^DGCR(399," D ^DIE K DIE,DR
"RTN","IBCSCE",25,0)
 I (IBDR20["61")!(IBDR20["71") I +$G(DGRVRCAL) D PROC^IBCU7A(IBIFN,1)
"RTN","IBCSCE",26,0)
ENQ K DIE,DR,IBDR1,IBDR20,DGDRD,DGDRS,DGDRS1,DA Q
"RTN","IBCSCE",27,0)
 ;
"RTN","IBCSCE",28,0)
 ; W I "^11^12^13^15^14^21^22^23^"[("^"_J_"^") G W1
"RTN","IBCSCE",29,0)
 ; I "^44^"[("^"_J_"^") S DR(2,399.0304)=".01;1;I $D(IBIP),X<$P(IBIP,""^"",2)!($P(IBIP,""^"",6)&(X>$P(IBIP,""^"",6))) K X"
"RTN","IBCSCE",30,0)
 ; I "^64^"[("^"_J_"^") S DR(2,399.042)=".01:.03;"
"RTN","IBCSCE",31,0)
 ; I $T(@J) S DGDRD=$P($T(@J),";;",2) D S S K=(J*10) I $T(@K) S DGDRD=$P($T(@K),";;",2) D S
"RTN","IBCSCE",32,0)
 ; D ^IBCSCE1:("^31^")[("^"_J_"^") Q
"RTN","IBCSCE",33,0)
 ; W1 I @DGDRS["^2^DPT(^^D SET^IBCSCE;" D ^IBCSCE1 Q
"RTN","IBCSCE",34,0)
 ; S DGDRD="^2^DPT(^^D SET^IBCSCE;" D S,^IBCSCE1 Q
"RTN","IBCSCE",35,0)
 ; S I $L(@DGDRS)+$L(DGDRD)<241 S @DGDRS=@DGDRS_DGDRD Q
"RTN","IBCSCE",36,0)
 ; S DGCT=DGCT+1,DGDRS="DR(1,399,"_DGCT_")",@DGDRS=DGDRD Q
"RTN","IBCSCE",37,0)
 ; Q
"RTN","IBCSCE",38,0)
16 ;;110;
"RTN","IBCSCE",39,0)
17 ;;.18;
"RTN","IBCSCE",40,0)
31 ;;.07;S X=$P(^DGCR(399,DA,0),U,11);S Y="@"_$S(X']"":31,X="p":31,X="o":311,1:310);@310;D 1^IBCSCH1 S Y="@"_$S(IBADI=-1:31,'IBADI:312,1:313);@313;^2^DPT(^^D SET^IBCSCE;D UPDT^IBCSCE;@312;
"RTN","IBCSCE",41,0)
310 ;;101;102;103;S Y="@31";@311;D INST^IBCU;111;K DIC("DR"),DLAYGO;@31;
"RTN","IBCSCE",42,0)
32 ;;104;105;106;121;107;108;109
"RTN","IBCSCE",43,0)
41 ;;S:IBPTF Y="@411";159.5;@411;160;159;158;
"RTN","IBCSCE",44,0)
42 ;;162;
"RTN","IBCSCE",45,0)
43 ;;I IBPTF S Y="@943";64;65;66;67;68;S Y="@43";@943;D DX^IBCSC4B;@43;
"RTN","IBCSCE",46,0)
44 ;;S IBZ20=$P(^DGCR(399,DA,0),U,9);.09;D PRO^IBCSC4B;S IBASKCOD=1
"RTN","IBCSCE",47,0)
45 ;;41;
"RTN","IBCSCE",48,0)
46 ;;40;
"RTN","IBCSCE",49,0)
51 ;;.03;
"RTN","IBCSCE",50,0)
999 ;;64;65;66;67;68;
"RTN","IBCSCE",51,0)
52 ;;64;S:X="" Y="@99";65;S:X="" Y="@99";66;S:X="" Y="@99";67;S:X="" Y="@99";68;@99;
"RTN","IBCSCE",52,0)
53 ;;;;same as 74
"RTN","IBCSCE",53,0)
54 ;;S IBZ20=$P(^DGCR(399,DA,0),U,9);.09;S IBASKCOD=1
"RTN","IBCSCE",54,0)
55 ;;41;
"RTN","IBCSCE",55,0)
56 ;;40;
"RTN","IBCSCE",56,0)
61 ;;.06;164;
"RTN","IBCSCE",57,0)
62 ;;155;S:X=0 Y=156;157;156;S:'$D(IBOX) Y="@62";153;@62;
"RTN","IBCSCE",58,0)
63 ;;151;152;
"RTN","IBCSCE",59,0)
64 ;;161;165;
"RTN","IBCSCE",60,0)
65 ;;D RCD^IBCU1;42;202;S:'X Y=201;203;201;I $P(^DGCR(399,DA,"U1"),"^",11)']"" S Y="@65";210;@65;
"RTN","IBCSCE",61,0)
71 ;;.06;164;
"RTN","IBCSCE",62,0)
72 ;;155;S:X=0 Y=156;157;156;S:'$D(IBOX) Y="@72";153;@72;
"RTN","IBCSCE",63,0)
73 ;;151;152;
"RTN","IBCSCE",64,0)
74 ;;S:$D(IBOUT) Y="@999";43;@999;K IBOUT;
"RTN","IBCSCE",65,0)
75 ;;D RCD^IBCU1;42;202;S:'X Y=201;203;201;I $P(^DGCR(399,DA,"U1"),"^",11)']"" S Y="@75";210;@75;
"RTN","IBCSCE",66,0)
81 ;;208;
"RTN","IBCSCE",67,0)
82 ;;204;
"RTN","IBCSCE",68,0)
83 ;;205;
"RTN","IBCSCE",69,0)
84 ;;206;
"RTN","IBCSCE",70,0)
85 ;;207;
"RTN","IBCSCE",71,0)
86 ;;163;
"RTN","IBCSCE",72,0)
 ; AD S X=$S($D(^DPT(DA,.11)):^(.11),1:""),IBPHO=$S($D(^(.13)):$P(^(.13),U,1),1:""),Y=$S($D(^(IBADD)):^(IBADD),1:""),^(IBADD)=$P(Y,U,1)_U_$P(Y,U,2)_U_$P(X,U,1,6)_U_IBPHO_U_$P(Y,U,10) K IBADD,IBPHO Q
"RTN","IBCSCE",73,0)
 ; SET S I(0,0)=D0,Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:""),X=$P(Y(1),"^",2),D(0)=X,X=$S(D(0)>0:D(0),1:"") Q
"RTN","IBCSCE",74,0)
 ;called by screen 3 (input template)
"RTN","IBCSCE",75,0)
UPDT F IBDD=0:0 S IBDD=$O(^DPT(DFN,.312,IBDD)) Q:IBDD'>0  S IBI1=^DPT(DFN,.312,IBDD,0) I $D(^DIC(36,+IBI1,0)),$P(^(0),"^",2)'="N" S IBDD(+IBI1)=IBI1
"RTN","IBCSCE",76,0)
 F IBAIC=0:0 S IBAIC=$O(^DGCR(399,IBIFN,"AIC",IBAIC)) Q:IBAIC'>0  I $D(IBDD(IBAIC)) F IBI1="I1","I2","I3" I $D(^DGCR(399,IBIFN,IBI1)),+^(IBI1)=IBAIC,^(IBI1)'=IBDD(IBAIC) S ^DGCR(399,IBIFN,IBI1)=IBDD(IBAIC)
"RTN","IBCSCE",77,0)
 K IBAIC,IBDD,IBI1 Q
"RTN","IBCSCE",78,0)
 ;
"RTN","IBCSCE",79,0)
 ;Edit patient's address using DGREGAED API
"RTN","IBCSCE",80,0)
EDADDR(IBDFN) ;
"RTN","IBCSCE",81,0)
 I $G(IBFLIAE)'=1!(IBDFN=0) Q 0
"RTN","IBCSCE",82,0)
 N IBFL S IBFL(1)=1
"RTN","IBCSCE",83,0)
 N X,Y,DIE,DA,DR,DIDEL,DIW,DIEDA,DG,DICR
"RTN","IBCSCE",84,0)
 D EN^DGREGAED(IBDFN,.IBFL)
"RTN","IBCSCE",85,0)
 Q 1
"RTN","IBCSCE",86,0)
 ;IBCSCE
"RTN","IBCSCH")
0^61^B64131006
"RTN","IBCSCH",1,0)
IBCSCH ;ALB/MJB - MCCR HELP ROUTINE ; 03 JUN 88 15:25
"RTN","IBCSCH",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,124,138,51,148,137,161,245**;21-MAR-94
"RTN","IBCSCH",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSCH",4,0)
 ;
"RTN","IBCSCH",5,0)
 ;MAP TO DGCRSCH
"RTN","IBCSCH",6,0)
 ;
"RTN","IBCSCH",7,0)
 N IBSCNNZ,IBQ,IBPRNT S IBSCNNZ=$$UP^XLFSTR($G(IBSCNN)),IBQ=0
"RTN","IBCSCH",8,0)
 I '$D(IBPAR) D  Q:IBQ
"RTN","IBCSCH",9,0)
 . I $G(IBSCNNZ)="?HCFA",$$FT^IBCEF(IBIFN)=2 S IBQ=1,IBPRNT=2 D BL24(IBIFN,1) Q
"RTN","IBCSCH",10,0)
 . I $G(IBSCNNZ)="?SC" S IBQ=1 D DISPSC(IBIFN) Q
"RTN","IBCSCH",11,0)
 . I $G(IBSCNNZ)="?INS" S IBQ=1 D INSDSPL(IBIFN) Q
"RTN","IBCSCH",12,0)
 . I $G(IBSCNNZ)="?PRV" S IBQ=1 D DISPPRV(IBIFN) Q
"RTN","IBCSCH",13,0)
 . I $G(IBSCNNZ)="?CHG" S IBQ=1 D DISPCHG^IBCRBH1(IBIFN) Q
"RTN","IBCSCH",14,0)
 . I $G(IBSCNNZ)="?PRC" S IBQ=1 D DISPPRC^IBCSCH1(IBIFN) Q
"RTN","IBCSCH",15,0)
 . I $G(IBSCNNZ)="?CPT" S IBQ=1 D BCPTCHG^IBCRBH2(IBIFN) Q
"RTN","IBCSCH",16,0)
 . I $G(IBSCNNZ)="?INC" S IBQ=1 D EDIT^IBCBB(IBIFN) Q
"RTN","IBCSCH",17,0)
 . I $G(IBSCNNZ)="?CLA",$$CK0^IBCIUT1() S IBQ=1 D CLA^IBCISC(IBIFN) Q
"RTN","IBCSCH",18,0)
 . Q
"RTN","IBCSCH",19,0)
 ;
"RTN","IBCSCH",20,0)
 S IBH("HELP")="" D ^IBCSCU,H^IBCSCU K IBH("HELP") W !,"Enter '^' to stop the display ",$S(IBV:"",1:"and edit "),"of data,"
"RTN","IBCSCH",21,0)
 W:'$D(IBPAR) " '^N' to jump to screen #N (see",!,"listing below), <RET> to continue on to the next available screen" I IBV W "." G M
"RTN","IBCSCH",22,0)
 W " or enter",!,"the field group number(s) you wish to edit using commas and dashes as",!,"delimiters.  Those groups enclosed in brackets ""[]"" are editable while those"
"RTN","IBCSCH",23,0)
 W !,"enclosed in arrows ""<>"" are not."
"RTN","IBCSCH",24,0)
 G:$D(IBPAR) M1
"RTN","IBCSCH",25,0)
M W "  Special help screens:"
"RTN","IBCSCH",26,0)
 W !,?5,"Enter '?SC' to view SC Status and Rated Disabilities."
"RTN","IBCSCH",27,0)
 W !,?5,"Enter '?INS' to view the patients insurance policies."
"RTN","IBCSCH",28,0)
 W !,?5,"Enter '?PRV' to view provider specific information."
"RTN","IBCSCH",29,0)
 W !,?5,"Enter '?PRC' to view all procedures on the bill and related data."
"RTN","IBCSCH",30,0)
 W !,?5,"Enter '?CHG' to view all items on the bill with potential charges."
"RTN","IBCSCH",31,0)
 W !,?5,"Enter '?CPT' to view all charges for selected CPT codes and bill type."
"RTN","IBCSCH",32,0)
 I $$FT^IBCEF(IBIFN)=2 W !,?5,"Enter '?HCFA' to view how block 24 will print on a HCFA 1500."
"RTN","IBCSCH",33,0)
 W !,?5,"Enter '?INC' to execute the edits & view the bill inconsistencies."
"RTN","IBCSCH",34,0)
 I $$CK0^IBCIUT1() W !?5,"Enter '?CLA' to view the ClaimsManager options."
"RTN","IBCSCH",35,0)
 ;
"RTN","IBCSCH",36,0)
 I +IBSR'=9 S Z="DATA GROUPS ON SCREEN "_+IBSR W ! X IBWW D @(IBSR1_IBSR) D W
"RTN","IBCSCH",37,0)
 D S W ! F I=$Y:1:20 W !
"RTN","IBCSCH",38,0)
 S Z="PRESS <RETURN> KEY" X IBWW W " to RETURN to SCREEN ",+IBSR R X:DTIME Q
"RTN","IBCSCH",39,0)
M1 S Z="DATA GROUPS ON PARAMETER SCREEN" W !! X IBWW D @(IBSR1_IBSR) D W W ! F I=$Y:1:20 W !
"RTN","IBCSCH",40,0)
 S Z="PRESS <RETURN> KEY" X IBWW W " to RETURN to PARAMETER SCREEN" R X:DTIME Q
"RTN","IBCSCH",41,0)
1 S X="DOB^Alias Name^Sex, Marital Status^Veteran Status, Eligibility^Address, Temporary Address^Patient Short Billing Address^SC at Time of Care" Q
"RTN","IBCSCH",42,0)
2 S X="Patient Employer Name, Address^Spouse Employer Name, Address" Q
"RTN","IBCSCH",43,0)
3 S X="Payer Information^Provider Numbers^Mailing Address" Q
"RTN","IBCSCH",44,0)
4 S X="Admission Information^Discharge Information^Diagnosis Code(s)^Coding Method, Inpt Proc Code(s)^Occurrence Code(s)^Condition Code(s)^Value Code(s)" Q
"RTN","IBCSCH",45,0)
5 S X="Event Date^Outpatient Diagnosis^Outpatient Visits^Coding Method, Opt. Pro. Code(s)^Occurrence Code(s)^Condtion Code(s)" Q
"RTN","IBCSCH",46,0)
6 S X="Bill Type, Covered/Non-Covered Days^R.O.I., Assignment of Benefits^Statement Covers Period^Bedsection, Length of Stay^Revenue Code(s), Offset, Total^Rate Schedule(s)^Prior Payments/Claims" Q
"RTN","IBCSCH",47,0)
7 S X="Bill Type, Covered/Non-Covered Days^R.O.I., Assignment of Benefits^Statement Covers Period^Outpatient Visits^Revenue Code(s), Offset, Total^Rate Schedule(s)^Prior Payments/Claims" Q
"RTN","IBCSCH",48,0)
8 S X="Bill Remark^Form Locator 2^Form Locator 9^Form Locator 27^Form Locator 45^Form Locator 92^Form Locator 93^Tx Auth. Code" Q
"RTN","IBCSCH",49,0)
9 S X="Locally defined fields" Q
"RTN","IBCSCH",50,0)
28 S X="Bill Remark, ICN/DCN's, Tx Auth. Code, Admit Diagnosis/Source^Providers^Form Locator 2 and 11^Form Locator 31^Form Locator 56, 57, and 78^Force to Print" Q
"RTN","IBCSCH",51,0)
H8 S X="Period Unable to Work^Admit Dx, ICN/DCN, Tx/Prior Auth. Code^Providers^Non-VA Facility^Form Locator 19^Force to Print" Q
"RTN","IBCSCH",52,0)
PAR S X="Fed Tax #, BC/BS #, MAS Svc Pointer^Bill Signer, Billing Supervisor^Security Parameters, Outpatient CPT parameters ^Remarks, Mailgroups^Agent Cashier Address/Phone" Q
"RTN","IBCSCH",53,0)
S W !! S Z="AVAILABLE SCREENS" X IBWW
"RTN","IBCSCH",54,0)
 S X="Demographic^Employment^Payer^Inpatient Event^Outpatient Event^Inpatient Billing - General^Outpatient Billing - General^Billing - Specific^Locally Defined"
"RTN","IBCSCH",55,0)
 S C=0 F I=1:1 S J=$P(X,"^",I) Q:J=""  I '$E(IBVV,I) S C=C+1,Z="^"_I,IBW=(C#2) W:'(C#2) ?41 X IBWW S Z=$S(I?1N:" ",1:" ")_J_" Data" W Z
"RTN","IBCSCH",56,0)
 Q
"RTN","IBCSCH",57,0)
W F I=1:1 S J=$P(X,"^",I) Q:J=""  S Z=I,IBW=(I#2) W:'(I#2) ?42 X IBWW W " "_J
"RTN","IBCSCH",58,0)
 W:'(I-1)#2 ! Q
"RTN","IBCSCH",59,0)
 Q
"RTN","IBCSCH",60,0)
 ;IBCSCH
"RTN","IBCSCH",61,0)
 ;
"RTN","IBCSCH",62,0)
 ;
"RTN","IBCSCH",63,0)
BL24(IBIFN,IBNOSHOW) ; display block 24 of HCFA 1500
"RTN","IBCSCH",64,0)
 ; IBNOSHOW = 1 for not to show error/warning text line
"RTN","IBCSCH",65,0)
 N X,Y,DIR,IBPG,IBLN,IBCOL,IBX,IBQ,IBLC,IBLIN,IBPFORM,IBD,IBC1,Z,Z0,IBXDATA,IBXSAVE
"RTN","IBCSCH",66,0)
 K ^TMP("IBXSAVE",$J)
"RTN","IBCSCH",67,0)
 S IBQ=0,IBLC=9 Q:'$G(IBIFN)  K ^TMP("IBXDISP",$J)
"RTN","IBCSCH",68,0)
 ;
"RTN","IBCSCH",69,0)
 S IBLIN=$$BOX24D^IBCEF11()
"RTN","IBCSCH",70,0)
 S IBPFORM=$S($P($G(^IBE(353,2,2)),U,8):$P(^(2),U,8),1:2)
"RTN","IBCSCH",71,0)
 S IBX=$$BILLN^IBCEFG0(0,"1^99",IBLIN,+IBIFN,IBPFORM)
"RTN","IBCSCH",72,0)
 ;
"RTN","IBCSCH",73,0)
 W @IOF,!,"Example of diagnoses, procedures and charges printing on the HCFA 1500"
"RTN","IBCSCH",74,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",75,0)
 F Z=+IBLIN,IBLIN+1 I $D(^TMP("IBXDISP",$J,1,Z)) S Z0=$G(^TMP("IBXDISP",$J,1,Z,+$O(^TMP("IBXDISP",$J,1,Z,20),-1))) I Z0'="" S:Z=+IBLIN Z0="BOX 19 DATA: "_Z0 W !,Z0
"RTN","IBCSCH",76,0)
 W !,"21. diagnosis"
"RTN","IBCSCH",77,0)
 ;
"RTN","IBCSCH",78,0)
 W !,?5,"1. ",$G(^TMP("IBXDISP",$J,1,IBLIN+3,3)),?25,"3. ",$G(^TMP("IBXDISP",$J,1,IBLIN+3,31))
"RTN","IBCSCH",79,0)
 W !,?5,"2. ",$G(^TMP("IBXDISP",$J,1,IBLIN+5,3)),?25,"4. ",$G(^TMP("IBXDISP",$J,1,IBLIN+5,31))
"RTN","IBCSCH",80,0)
 ;
"RTN","IBCSCH",81,0)
 D PG
"RTN","IBCSCH",82,0)
 S IBPG=0 F  S IBPG=$O(^TMP("IBXDISP",$J,IBPG)) Q:'IBPG  D  Q:IBQ
"RTN","IBCSCH",83,0)
 . F IBLN=IBLIN+8:1:+$P(IBLIN,U,2) S IBCOL=$O(^TMP("IBXDISP",$J,IBPG,IBLN,0)) Q:'IBCOL&'$O(^TMP("IBXDISP",$J,IBPG,IBLN))  S IBLC=IBLC+1 I IBCOL D  Q:IBQ
"RTN","IBCSCH",84,0)
 .. S IBCOL=0,IBC1=1 F  S IBCOL=$O(^TMP("IBXDISP",$J,IBPG,IBLN,IBCOL)) Q:'IBCOL  I $TR($G(^(IBCOL))," ")'="" D
"RTN","IBCSCH",85,0)
 ... W:IBC1 ! S IBC1=0 W ?(IBCOL-1),$G(^TMP("IBXDISP",$J,IBPG,IBLN,IBCOL))
"RTN","IBCSCH",86,0)
 . I 'IBQ,$O(^TMP("IBXDISP",$J,IBPG)) S IBLIN=$$BOX24D^IBCEF11(),IBQ=$$PAUSE^IBCSCH1(IBLC) Q:IBQ  S IBLC=9 W @IOF D PG
"RTN","IBCSCH",87,0)
 ;
"RTN","IBCSCH",88,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",89,0)
 I 'IBPG,'IBQ S IBQ=$$PAUSE^IBCSCH1(IBLC)
"RTN","IBCSCH",90,0)
 K ^TMP("IBXDISP",$J),^TMP("IBXSAVE",$J)
"RTN","IBCSCH",91,0)
 Q
"RTN","IBCSCH",92,0)
 ;
"RTN","IBCSCH",93,0)
PG ; Display box 24 letters at top of charge list
"RTN","IBCSCH",94,0)
 W !,"24. A             B   C     D            E            F     G H  I        K"
"RTN","IBCSCH",95,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",96,0)
 Q
"RTN","IBCSCH",97,0)
 ;
"RTN","IBCSCH",98,0)
INSDSPL(IBIFN) ; Display patients policies
"RTN","IBCSCH",99,0)
 N DIR,X,Y,IBX,DFN,IBDTIN,IBCOVEXT W @IOF
"RTN","IBCSCH",100,0)
 S IBX=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IBX,U,2),IBDTIN=$P(IBX,U,3),IBCOVEXT=1
"RTN","IBCSCH",101,0)
 I +DFN D DISPDT^IBCNS W ! S DIR("A")="Press RETURN to continue",DIR(0)="E" D ^DIR K DIR
"RTN","IBCSCH",102,0)
 Q
"RTN","IBCSCH",103,0)
 ;
"RTN","IBCSCH",104,0)
DISPPRV(IBIFN) ; display provider information: interactive - user selects provider
"RTN","IBCSCH",105,0)
 N DIC,DA,X,Y,IBI,IBPRV,IBPX,IBDT,IBARR
"RTN","IBCSCH",106,0)
 W !!,"This is a display of provider specific information."
"RTN","IBCSCH",107,0)
 D SPECIFIC^IBCEU5(IBIFN)
"RTN","IBCSCH",108,0)
 S IBDT=+$G(^DGCR(399,+$G(IBIFN),"U")) I 'IBDT S IBDT=DT
"RTN","IBCSCH",109,0)
 ;
"RTN","IBCSCH",110,0)
 F IBI=1:1 W ! S DIC("A")="Select PROVIDER NAME: ",DIC="^VA(200,",DIC(0)="AEQM" D ^DIC Q:Y'>0  D
"RTN","IBCSCH",111,0)
 . S IBPRV=Y W !!,$TR($J(" ",IOM)," ","-")
"RTN","IBCSCH",112,0)
 . ;
"RTN","IBCSCH",113,0)
 . S IBPX=$$ESBLOCK^XUSESIG1(+IBPRV)
"RTN","IBCSCH",114,0)
 . W !," Signature Name: ",$P(IBPX,U,1),!,"Signature Title: ",$P(IBPX,U,3),!,"         Degree: ",$P(IBPX,U,2)
"RTN","IBCSCH",115,0)
 . ;
"RTN","IBCSCH",116,0)
 . S IBPX=$$PRVLIC^IBCU1(+IBPRV,IBDT,.IBARR) W !!,"     License(s): " D
"RTN","IBCSCH",117,0)
 .. I IBPX'>0 W "None Active on ",$$FMTE^XLFDT(IBDT,2) Q
"RTN","IBCSCH",118,0)
 .. S IBJ=0,IBW=0 F  S IBJ=$O(IBARR(IBJ)) Q:'IBJ  D
"RTN","IBCSCH",119,0)
 ... S IBPX=IBARR(IBJ),IBPX=$P($G(^DIC(5,+IBPX,0)),U,2)_": "_$P(IBPX,U,2)
"RTN","IBCSCH",120,0)
 ... I (IBW+$L(IBPX))>61 W !,?17 S IBW=0
"RTN","IBCSCH",121,0)
 ... W IBPX,"  " S IBW=IBW+$L(IBPX)+2
"RTN","IBCSCH",122,0)
 . ;
"RTN","IBCSCH",123,0)
 . S IBPX=$$GET^XUA4A72(+IBPRV,IBDT) W !!,"   Person Class: " D
"RTN","IBCSCH",124,0)
 .. I IBPX'>0 W "None Active on ",$$FMTE^XLFDT(IBDT,2) Q
"RTN","IBCSCH",125,0)
 .. W $P(IBPX,U,7)
"RTN","IBCSCH",126,0)
 .. W !,"  PROVIDER TYPE: ",$P(IBPX,U,2),!," CLASSIFICATION: ",$P(IBPX,U,3),!," SPECIALIZATION: ",$P(IBPX,U,4)
"RTN","IBCSCH",127,0)
 .. I +$P(IBPX,U,5) W !,"      EFFECTIVE: ",$$FMTE^XLFDT(+$P(IBPX,U,5),2) I +$P(IBPX,U,6) W " - ",$$FMTE^XLFDT(+$P(IBPX,U,6),2)
"RTN","IBCSCH",128,0)
 . ;
"RTN","IBCSCH",129,0)
 . S IBPX=$$PRVTYP^IBCRU6(+IBPRV,+IBDT)
"RTN","IBCSCH",130,0)
 . W !!,"RC Provider Group: ",$S(+IBPX:$P(IBPX,U,3)_", "_$P(IBPX,U,5)_"%",1:"None")
"RTN","IBCSCH",131,0)
 . W !,$TR($J(" ",IOM)," ","-")
"RTN","IBCSCH",132,0)
 ;
"RTN","IBCSCH",133,0)
 Q
"RTN","IBCSCH",134,0)
 ;
"RTN","IBCSCH",135,0)
DISPSC(IBIFN) ; display patients SC Status and Rated Disabilities
"RTN","IBCSCH",136,0)
 N IB0,DFN,IBSC,IBX,VAEL,VAERR
"RTN","IBCSCH",137,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IB0,U,2),IBSC=$P(IB0,U,18)
"RTN","IBCSCH",138,0)
 W !,@IOF,!,"SC Status and Rated Disabilities for ",$P($G(^DPT(+$G(DFN),0)),U,1)
"RTN","IBCSCH",139,0)
 W !,"--------------------------------------------------------------------------------",!
"RTN","IBCSCH",140,0)
 I +$G(IBIFN) W !," SC At Time Of Care: ",$S(IBSC=1:"Yes",IBSC=0:"No",1:"")
"RTN","IBCSCH",141,0)
 I +$G(DFN) D ELIG^VADPT D DIS^DGRPDB
"RTN","IBCSCH",142,0)
 W !!,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",143,0)
 S IBX=$$PAUSE^IBCSCH1(19)
"RTN","IBCSCH",144,0)
 Q
"RTN","IBCSCH1")
0^62^B21318339
"RTN","IBCSCH1",1,0)
IBCSCH1 ;ALB/MRL - BILLING HELPS (CONTINUED) ; 01 JUN 88 12:00
"RTN","IBCSCH1",2,0)
 ;;2.0;INTEGRATED BILLING;**106,125,51,245**;21-MAR-94
"RTN","IBCSCH1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSCH1",4,0)
 ;
"RTN","IBCSCH1",5,0)
 ;MAP TO DGCRSCH1
"RTN","IBCSCH1",6,0)
 ;
"RTN","IBCSCH1",7,0)
1 W !!,"DO YOU WISH TO ADD/EDIT INSURANCE COMPANY DATA FOR THIS PATIENT" S %=2 D YN^DICN S IBADI=$S(%=1!(%=-1):%,1:0)
"RTN","IBCSCH1",8,0)
 I '% W !!?4,"YES - And I'll prompt you so that you may add insurance data to the PATIENT",!?9,"file for this patient.",!?4,"NO  - To bypass this editing of the PATIENT file." G 1
"RTN","IBCSCH1",9,0)
 Q
"RTN","IBCSCH1",10,0)
 ;
"RTN","IBCSCH1",11,0)
2 W !!,"If you updated insurance information for any policy which is already specified",!,"as either a PRIMARY, SECONDARY or TERIARY for this billing episode, you will"
"RTN","IBCSCH1",12,0)
 W !,"need to press the <RETURN> key through the following prompts in order to insure",!,"that these new values are properly stored.  If you fail to do so, i.e.,"
"RTN","IBCSCH1",13,0)
 W !,"enter an up-arrow, the new values will not be stored as part of this billing",!,"record." Q
"RTN","IBCSCH1",14,0)
3 I '$D(IBIFN),$D(DA) S IBIFN=DA
"RTN","IBCSCH1",15,0)
 W !,"If a procedure is linked as a prescription to a rev code, it cannot be deleted",!
"RTN","IBCSCH1",16,0)
 W:$P(^DGCR(399,IBIFN,0),"^",5)<3 !!?4," - Enter the alphanumeric designation of your choice from",!?7,"the display (e.g. 'A1') to input one of the codes shown",!?7,"above into this billing record."
"RTN","IBCSCH1",17,0)
 I $P(^IBE(350.9,1,1),U,15)'=1 G 4
"RTN","IBCSCH1",18,0)
 S DGCODMET=$P(^DGCR(399,IBIFN,0),"^",9),DGCODMET=$S(DGCODMET=9:"ICD",DGCODMET="":"",1:"CPT")
"RTN","IBCSCH1",19,0)
 W !!?4," - Enter the name or code number of an ",$S($D(IBPY):"ICD DIAGNOSIS ",1:DGCODMET_" PROCEDURE "),"CODE",!?7,"not displayed above to input a ",$S($D(IBPY):"DIAGNOSIS",1:"PROCEDURE")," code"
"RTN","IBCSCH1",20,0)
 I $P(^DGCR(399,IBIFN,0),"^",5)>2 W "." G 4
"RTN","IBCSCH1",21,0)
 W " not found",!?7,"in the PTF record into this billing record, or '??' for ",!?7,"a list of all ",$S($D(IBPY):"ICD DIAGNOSIS ",1:DGCODMET_" PROCEDURE "),"CODES."
"RTN","IBCSCH1",22,0)
4 W !!?4," - Enter <RETURN> to accept the default ",$S($D(IBPY):"DIAGNOSIS ",1:"PROCEDURE "),"code, or",!?7,"'^' to abort.",!!
"RTN","IBCSCH1",23,0)
 K DGCODMET
"RTN","IBCSCH1",24,0)
 Q
"RTN","IBCSCH1",25,0)
 ;
"RTN","IBCSCH1",26,0)
DISPPRC(IBIFN) ; display procedures
"RTN","IBCSCH1",27,0)
 N IBHDR,IBHDR1,IBD,IBN,IBI,IBX,IBQ,IBLN,IBPR,IBPRD,IBDT,IBDV,IBCL,IBPV,IBLC,PRCARR,IBMOD,IBSUS S IBQ=0
"RTN","IBCSCH1",28,0)
 ;
"RTN","IBCSCH1",29,0)
 I '$O(^DGCR(399,+$G(IBIFN),"CP",0)) W !!?5,"No Codes Entered!",! D PAUSE^VALM1 Q
"RTN","IBCSCH1",30,0)
 ;
"RTN","IBCSCH1",31,0)
 S IBHDR="W @IOF,!,""Procedures Assigned to this Bill"",!,""Code"",?10,""Procedure"",?35,""PO"",?38,""Date"",?48,""Div"",?55,""Clinic"",?68,""Provider"" X IBHDR1"
"RTN","IBCSCH1",32,0)
 S IBHDR1="W !,""--------------------------------------------------------------------------------"" S IBLC=2"
"RTN","IBCSCH1",33,0)
 ;
"RTN","IBCSCH1",34,0)
 X IBHDR D PRCDT^IBCU71(+IBIFN,.PRCARR)
"RTN","IBCSCH1",35,0)
 S IBD="" F  S IBD=$O(PRCARR(IBD)) Q:IBD=""  D  Q:IBQ
"RTN","IBCSCH1",36,0)
 . S IBN="" F  S IBN=$O(PRCARR(IBD,IBN)) Q:IBN=""  D  Q:IBQ
"RTN","IBCSCH1",37,0)
 .. S IBI=0 F  S IBI=$O(PRCARR(IBD,IBN,IBI)) Q:'IBI  D  I IBLC>19 S IBQ=$$PAUSE(IBLC) Q:IBQ  X IBHDR
"RTN","IBCSCH1",38,0)
 ... S IBLN=$G(PRCARR(IBD,IBN,IBI)),(IBPR,IBPRD,IBDT,IBDV,IBCL,IBPV,IBSUS)="",IBLC=IBLC+1
"RTN","IBCSCH1",39,0)
 ... S IBX=$$PRCNM($P(IBLN,U,1),+$P(IBLN,U,2)),IBPR=$P(IBX,U,1),IBPRD=$P(IBX,U,2)
"RTN","IBCSCH1",40,0)
 ... S IBDT=$P(IBLN,U,2),IBDT=$E(IBDT,4,5)_"/"_$E(IBDT,6,7)_"/"_$E(IBDT,2,3)
"RTN","IBCSCH1",41,0)
 ... I +$P(IBLN,U,6) S IBDV=$P($G(^DG(40.8,+$P(IBLN,U,6),0)),U,2)
"RTN","IBCSCH1",42,0)
 ... I +$P(IBLN,U,7) S IBCL=$P($G(^SC(+$P(IBLN,U,7),0)),U,1)
"RTN","IBCSCH1",43,0)
 ... I +$P(IBLN,U,18) S IBPV=$P($G(^VA(200,+$P(IBLN,U,18),0)),U,1)
"RTN","IBCSCH1",44,0)
 ... I +$P(IBLN,U,16) S IBSUS=$P(IBLN,U,16)_"mn"
"RTN","IBCSCH1",45,0)
 ... I +$P(IBLN,U,21) S IBSUS=$P(IBLN,U,21)_"ml"
"RTN","IBCSCH1",46,0)
 ... I +$P(IBLN,U,22) S IBSUS=$P(IBLN,U,22)_"hr"
"RTN","IBCSCH1",47,0)
 ... ;
"RTN","IBCSCH1",48,0)
 ... W !,$E(IBPR,1,6),?7,$E(IBPRD,1,20),?29,IBSUS,?35,$P(IBLN,U,4),?38,IBDT,?48,IBDV,?55,$E(IBCL,1,11),?68,$E(IBPV,1,12)
"RTN","IBCSCH1",49,0)
 ... S IBX=$$MODLST^IBEFUNC2($$GETMOD^IBEFUNC(IBIFN,IBI),1,.IBX)
"RTN","IBCSCH1",50,0)
 ... I IBX'="" F IBMOD=1:1:$L(IBX,",") W !,?10,$P(IBX,",",IBMOD),?15,$P($G(IBX(1)),",",IBMOD) S IBLC=IBLC+1
"RTN","IBCSCH1",51,0)
 I 'IBI,'IBQ S IBQ=$$PAUSE(IBLC)
"RTN","IBCSCH1",52,0)
 Q
"RTN","IBCSCH1",53,0)
 ;
"RTN","IBCSCH1",54,0)
PRCNM(PRC,EFDT) ; return procedure name, input first piece of CP node -
"RTN","IBCSCH1",55,0)
 ;                                        (in variable pointer format)
"RTN","IBCSCH1",56,0)
 ; output: code ^ name
"RTN","IBCSCH1",57,0)
 N IBNM
"RTN","IBCSCH1",58,0)
 S IBNM=$$PRCD^IBCEF1($G(PRC),1,$G(EFDT))
"RTN","IBCSCH1",59,0)
 I $TR(IBNM,U)="" D
"RTN","IBCSCH1",60,0)
 . S IBNM="NO ENTRY FOUND^"
"RTN","IBCSCH1",61,0)
 E  D
"RTN","IBCSCH1",62,0)
 . S IBNM=$P(IBNM,U,2,3)
"RTN","IBCSCH1",63,0)
 Q IBNM
"RTN","IBCSCH1",64,0)
 ;
"RTN","IBCSCH1",65,0)
PAUSE(CNT) ;
"RTN","IBCSCH1",66,0)
 N IBI F IBI=CNT:1:20 W !
"RTN","IBCSCH1",67,0)
 N DIR,DUOUT,DTOUT,DIRUT,IBX,X,Y S IBX=0,DIR(0)="E" D ^DIR K DIR I $D(DIRUT) S IBX=1
"RTN","IBCSCH1",68,0)
 Q IBX
"RTN","IBCU3")
0^45^B25631470
"RTN","IBCU3",1,0)
IBCU3 ;ALB/AAS - BILLING UTILITY ROUTINE (CONTINUED) ; 4/4/03 8:49am
"RTN","IBCU3",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,91,106,51,137,211,245**;21-MAR-94
"RTN","IBCU3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCU3",4,0)
 ;
"RTN","IBCU3",5,0)
 ;MAP TO DGCRU3
"RTN","IBCU3",6,0)
SC(DFN) ; returns 1 if service connection indicated, 0 otherwise (based on VAEL(3))
"RTN","IBCU3",7,0)
 N X,VAEL,VAERR S X=0
"RTN","IBCU3",8,0)
 I +$G(DFN) D ELIG^VADPT S X=+$G(VAEL(3))
"RTN","IBCU3",9,0)
 Q X
"RTN","IBCU3",10,0)
 ;
"RTN","IBCU3",11,0)
APPT(DATE,DFN,DISP) ;Check date to see if patient has any visit data
"RTN","IBCU3",12,0)
 ;input:   DATE - required, date to check for appointments
"RTN","IBCU3",13,0)
 ;         DFN  - required, patient to check for appointments on date
"RTN","IBCU3",14,0)
 ;         DISP - if true then error message will be printed before exit, if any
"RTN","IBCU3",15,0)
 ;returns: 1 - if appt visit found
"RTN","IBCU3",16,0)
 ;         2 - if unscheduled add/edit clinic stop entry found
"RTN","IBCU3",17,0)
 ;         3 - if only disposition found
"RTN","IBCU3",18,0)
 ;         "0^error message" if no valid visit data/disposition found
"RTN","IBCU3",19,0)
 ;
"RTN","IBCU3",20,0)
 N Y,X,X1,X2 S DATE=$P(DATE,".",1),Y="0^* Patient has no Visits for this date..."
"RTN","IBCU3",21,0)
 I 'DATE!'$D(^DPT(DFN,0)) S Y="0^Unable to check for appointments on this date!" G APPTE
"RTN","IBCU3",22,0)
 N IBVAL,IBCBK,IBVTYP
"RTN","IBCU3",23,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=DATE,IBVAL("EDT")=DATE+.9
"RTN","IBCU3",24,0)
 S IBCBK="I '$P(Y0,U,6) S IBVTYP=+$P(Y0,U,8) I $S(IBVTYP=2:1,IBVTYP=1:$$APPTCT^IBEFUNC(Y0),IBVTYP=3:$$DISCT^IBEFUNC(Y,Y0),1:0) S IBVTYP(IBVTYP)="""" S:$D(IBVTYP(1)) SDSTOP=1"
"RTN","IBCU3",25,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,"",IBCBK,1) K ^TMP("DIERR",$J)
"RTN","IBCU3",26,0)
 S IBVTYP=$O(IBVTYP(0))
"RTN","IBCU3",27,0)
 S:IBVTYP Y=IBVTYP
"RTN","IBCU3",28,0)
 ;
"RTN","IBCU3",29,0)
APPTE I +$G(DISP),'Y W !,?10,*7,$P(Y,U,2)
"RTN","IBCU3",30,0)
 Q Y
"RTN","IBCU3",31,0)
 ;
"RTN","IBCU3",32,0)
BDT(DFN,DATE) ; returns primary bill defined for an event date, "" if none
"RTN","IBCU3",33,0)
 N X,Y S X="" I '$O(^DGCR(399,"C",+$G(DFN),0))!'$G(DATE) G BDTE
"RTN","IBCU3",34,0)
 S Y="",DATE=9999999-DATE F  S Y=$O(^DGCR(399,"APDT",+DFN,Y)) Q:'Y  D
"RTN","IBCU3",35,0)
 . I $O(^DGCR(399,"APDT",+DFN,Y,0))=DATE,'$P($G(^DGCR(399,Y,"S")),U,16) S X=$P($G(^DGCR(399,Y,0)),U,17) Q
"RTN","IBCU3",36,0)
BDTE Q X
"RTN","IBCU3",37,0)
 ;
"RTN","IBCU3",38,0)
BILLED(PTF) ;returns bill "IFN^^rate group" if PTF record is already associated with an uncancelled final bill
"RTN","IBCU3",39,0)
 ;returns "bill IFN ^ bill date (stm to) ^ bill rate group" if inpatients interim with no final bill, 0 otherwise
"RTN","IBCU3",40,0)
 N IFN,Y,X S Y=0 I '$D(^DGCR(399,"APTF",+$G(PTF))) G BILLEDQ
"RTN","IBCU3",41,0)
 S IFN=0 F  S IFN=$O(^DGCR(399,"APTF",PTF,IFN)) Q:'IFN  D  I +Y,'$P(Y,U,2) Q
"RTN","IBCU3",42,0)
 . S X=$G(^DGCR(399,IFN,0)) I $P(X,U,13)=7 Q  ; bill cancelled
"RTN","IBCU3",43,0)
 . S Y=IFN_"^^"_$P(X,U,7) I $P(X,U,6)=2!($P(X,U,6)=3) S Y=IFN_"^"_$P($G(^DGCR(399,IFN,"U")),U,2)_"^"_$P(X,U,7)
"RTN","IBCU3",44,0)
BILLEDQ Q Y
"RTN","IBCU3",45,0)
 ;
"RTN","IBCU3",46,0)
FTN(FT) ;returns name of the form type passed in, "" if not defined
"RTN","IBCU3",47,0)
 N X S X=$P($G(^IBE(353,+$G(FT),0)),U,1)
"RTN","IBCU3",48,0)
 Q X
"RTN","IBCU3",49,0)
 ;
"RTN","IBCU3",50,0)
FT(IFN,IBRESET) ;return the correct form type for a bill (trigger code in 399 to set .19)
"RTN","IBCU3",51,0)
 ; if IBRESET is not a positive value ('IBRESET), returns the bills current form type (if defined)
"RTN","IBCU3",52,0)
 ; if IBRESET is a positive value (+IBRESET), interpret form type according to following rules (for triggers):
"RTN","IBCU3",53,0)
 ;    first use ins co default (36,.14), then bill is inst (UB) or prof (1500) (399,.27),
"RTN","IBCU3",54,0)
 ;    then current (399,.19), then site default (350.9,1.26), then UB-92
"RTN","IBCU3",55,0)
 N X,Y,FTC,FTN,FTD,FTI,FTT,INS S X="",IFN=+$G(IFN),Y=$G(^DGCR(399,IFN,0))
"RTN","IBCU3",56,0)
 S FTC=$P(Y,U,19) I FTC=1 S FTC=3
"RTN","IBCU3",57,0)
 I '$G(IBRESET),+FTC S X=FTC G FTQ
"RTN","IBCU3",58,0)
 S FTT=$S($P(Y,U,27)=1:3,$P(Y,U,27)=2:2,1:"")
"RTN","IBCU3",59,0)
 S INS=+$G(^DGCR(399,IFN,"MP"))
"RTN","IBCU3",60,0)
 I 'INS,$$MCRWNR^IBEFUNC($$CURR^IBCEF2(IFN)) S INS=+$$CURR^IBCEF2(IFN)
"RTN","IBCU3",61,0)
 S FTI=$P($G(^DIC(36,+INS,0)),U,14),FTD=$P($G(^IBE(350.9,1,1)),U,26)
"RTN","IBCU3",62,0)
 S X=$S(+FTI:FTI,+FTT:FTT,+FTC:FTC,+FTD:FTD,1:3)
"RTN","IBCU3",63,0)
FTQ Q X
"RTN","IBCU3",64,0)
 ;
"RTN","IBCU3",65,0)
FNT(FTN) ;returns the ifn of the form type name passed in, must be exact match, 0 if none found
"RTN","IBCU3",66,0)
 N X,Y S X=0 I $G(FTN)'="" S X=$O(^IBE(353,"B",FTN,0))
"RTN","IBCU3",67,0)
 Q X
"RTN","IBCU3",68,0)
 ;
"RTN","IBCU3",69,0)
BILLDEV(IFN,PRT) ;returns the default device for a bill's form type, if PRT is passed as true then returns the AR follow up device, otherwise the billing device
"RTN","IBCU3",70,0)
 N X,Y S X=0 I $D(^DGCR(399,+$G(IFN),0)) S PRT=$S(+$G(PRT):3,1:2),Y=$$FT(IFN),X=$P($G(^IBE(353,+Y,0)),U,PRT)
"RTN","IBCU3",71,0)
 Q X
"RTN","IBCU3",72,0)
 ;
"RTN","IBCU3",73,0)
RXDUP(RX,DATE,IFN,DISP,DFN,RTG) ;returns bill ifn if rx # exists on another bill
"RTN","IBCU3",74,0)
 ;input:  rx # - required, rx # to check for
"RTN","IBCU3",75,0)
 ;        date - required, date of refill
"RTN","IBCU3",76,0)
 ;ifn, dfn, rtg are optional - if not passed then not used to specify rx
"RTN","IBCU3",77,0)
 ;(if ifn not passed then returns true if on any bill same or dfn and rtgetc.)
"RTN","IBCU3",78,0)
 ;if ifn passed the dfn and rtg do not need to be
"RTN","IBCU3",79,0)
 N X,LN,RIFN,BIFN,RLN,BLN S (RIFN,X)=0,DATE=$G(DATE),RX=$G(RX),IFN=$G(IFN) I RX=""!('DATE) G RXDUPE
"RTN","IBCU3",80,0)
 S LN=$G(^DGCR(399,+IFN,0)),DFN=$S(+$G(DFN):DFN,1:+$P(LN,U,2)),RTG=$S(+$G(RTG):RTG,1:+$P(LN,U,7))
"RTN","IBCU3",81,0)
 F  S RIFN=$O(^IBA(362.4,"B",RX,RIFN)) Q:'RIFN  S RLN=$G(^IBA(362.4,+RIFN,0)) I +DATE=+$P(RLN,U,3) D  Q:+X
"RTN","IBCU3",82,0)
 . S BIFN=+$P(RLN,U,2),BLN=$G(^DGCR(399,BIFN,0)) Q:(BLN="")!(BIFN=+$G(IFN))
"RTN","IBCU3",83,0)
 . I $P(BLN,U,13)=7 Q  ; bill cancelled
"RTN","IBCU3",84,0)
 . I +DFN,$P(BLN,U,2)'=DFN Q  ; different patient
"RTN","IBCU3",85,0)
 . I +RTG,+RTG'=$P(BLN,U,7) Q  ; different rate group
"RTN","IBCU3",86,0)
 . S X=BIFN_"^A "_$P($G(^DGCR(399.3,+$P(BLN,U,7),0)),U,1)_" bill ("_$P(BLN,U,1)_") exists for Rx # "_RX_" and refill date "_$$DAT1^IBOUTL(DATE)_"."
"RTN","IBCU3",87,0)
RXDUPE I +$G(DISP),+X W !,?10,$P(X,U,2)
"RTN","IBCU3",88,0)
 Q X
"RTN","IBCU3",89,0)
 ;
"RTN","IBCU3",90,0)
BCOB(IBIFN,IBCOB) ; returns an array of all bills related COB to the bill passed in
"RTN","IBCU3",91,0)
 ; includes prior bills defined on this bill then checks the Primary, Secondary and Tertiary Bills and adds
"RTN","IBCU3",92,0)
 ; all the prior bills defined on them
"RTN","IBCU3",93,0)
 ; ARR(BILL SEQUENCE (1,2,3), INSURANCE CO, BILL #)=""
"RTN","IBCU3",94,0)
 ;
"RTN","IBCU3",95,0)
 N IBM1,IBI,IBIFN1,IBM,IBM11,IBSEQ,IBSEQN,IBJ K IBCOB
"RTN","IBCU3",96,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1"))
"RTN","IBCU3",97,0)
 F IBI=IBIFN,+$P(IBM1,U,5),+$P(IBM1,U,6),+$P(IBM1,U,7) I +IBI S IBIFN1=+IBI D
"RTN","IBCU3",98,0)
 . ;
"RTN","IBCU3",99,0)
 . S IBM=$G(^DGCR(399,IBIFN1,"M")),IBM11=$G(^DGCR(399,IBIFN1,"M1")) I IBIFN=IBIFN1,'$P(IBM,U,2),'$P(IBM,U,3) Q
"RTN","IBCU3",100,0)
 . S IBSEQ=$P($G(^DGCR(399,IBIFN1,0)),U,21),IBSEQN=$S(IBSEQ="P":1,IBSEQ="S":2,IBSEQ="T":3,1:"") Q:'IBSEQN
"RTN","IBCU3",101,0)
 . ;
"RTN","IBCU3",102,0)
 . F IBJ=1:1:3 I +$P(IBM,U,IBJ) S IBCOB(IBJ,+$P(IBM,U,IBJ),+$P(IBM11,U,(IBJ+4)))=""
"RTN","IBCU3",103,0)
 . I +$P(IBM,U,IBSEQN) S IBCOB(IBSEQN,$P(IBM,U,IBSEQN),+IBIFN1)=""
"RTN","IBCU3",104,0)
 ;
"RTN","IBCU3",105,0)
 S IBI=0 F  S IBI=$O(IBCOB(IBI)) Q:'IBI  S IBJ=0 F  S IBJ=$O(IBCOB(IBI,IBJ)) Q:'IBJ  I +$O(IBCOB(IBI,IBJ,0)) K IBCOB(IBI,IBJ,0)
"RTN","IBCU3",106,0)
 Q
"RTN","IBCU3",107,0)
 ;
"RTN","IBCU3",108,0)
BINS(IBIFN) ; return list of billable insurance carriers on a bill (COB)
"RTN","IBCU3",109,0)
 ; output:  sequence:carrier:policy ^ sequence:carrier:policy ^ sequence:carrier:policy
"RTN","IBCU3",110,0)
 N IBM0,IBI,IBS,IBC,IBP,IBX S IBI=0,IBX="",IBM0=$G(^DGCR(399,+$G(IBIFN),"M"))
"RTN","IBCU3",111,0)
 F IBS="P","S","T" S IBI=IBI+1,IBC=+$P(IBM0,U,IBI) I +IBC D
"RTN","IBCU3",112,0)
 . S IBP=+$P(IBM0,U,(11+IBI)) I $P($G(^DIC(36,+IBC,0)),U,2)'="N" S IBX=IBX_IBS_":"_IBC_":"_IBP_U
"RTN","IBCU3",113,0)
 Q IBX
"RTN","IBCU3",114,0)
 ;
"RTN","IBCU3",115,0)
BOTHER(IBIFN,IBDT) ; return Bedsection of Type of Care if date is Other Type of care, based on "OT" multiple
"RTN","IBCU3",116,0)
 ; Other care is not inpatient or outpatient, SNF and Sub-Acute became distinct with RC v2.0
"RTN","IBCU3",117,0)
 ; as with all other bedsection movements, the last date is not included since that is the date they left
"RTN","IBCU3",118,0)
 N IBX,IBY,IBFND S IBFND=0,IBDT=$G(IBDT)\1
"RTN","IBCU3",119,0)
 I +$G(IBIFN),+IBDT S IBX=0 F  S IBX=$O(^DGCR(399,IBIFN,"OT",IBX)) Q:'IBX  D
"RTN","IBCU3",120,0)
 . S IBY=$G(^DGCR(399,IBIFN,"OT",IBX,0)) Q:'IBY
"RTN","IBCU3",121,0)
 . I IBDT'<$P(IBY,U,2),IBDT<$P(IBY,U,3) S IBFND=+IBY
"RTN","IBCU3",122,0)
 Q IBFND
"RTN","IBCU4")
0^46^B17691975
"RTN","IBCU4",1,0)
IBCU4 ;ALB/AAS - BILLING UTILITY ROUTINE (CONTINUED) ; 12-FEB-90
"RTN","IBCU4",2,0)
 ;;2.0;INTEGRATED BILLING;**109,122,137,245**;21-MAR-94
"RTN","IBCU4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCU4",4,0)
 ;
"RTN","IBCU4",5,0)
 ;MAP TO DGCRU4
"RTN","IBCU4",6,0)
 ;
"RTN","IBCU4",7,0)
DDAT ;Input transform for Statement Covers From field
"RTN","IBCU4",8,0)
 I '$D(DA) G TO
"RTN","IBCU4",9,0)
 S IB00=+$P(^DGCR(399,+DA,0),"^",3) I +X<$P(IB00,".",1) W !?4,"Cannot precede the 'EVENT DATE'!",*7 K X G DDAT4
"RTN","IBCU4",10,0)
 I +X>(DT_".2359") W !?4,"Cannot bill for future treatment!",*7 K X G DDAT4
"RTN","IBCU4",11,0)
 D PROCDT
"RTN","IBCU4",12,0)
 I DGPRDTB,X>DGPRDTB K X W !?4,"Can't be greater than date of specified Procedures!",*7 G DDAT4
"RTN","IBCU4",13,0)
 G DDAT4
"RTN","IBCU4",14,0)
DDAT1 ;Input transform for Statement covers to
"RTN","IBCU4",15,0)
 I '$D(DA) G FROM
"RTN","IBCU4",16,0)
 S IB00=$S($D(^DGCR(399,+DA,"U")):$P(^("U"),"^",1),1:"") I 'IB00 W !?4,"'Start Date' must be specified first!",*7 K X G DDAT4
"RTN","IBCU4",17,0)
 I +X>DT W !?4,"Cannot bill for future treatment!",*7 K X G DDAT4
"RTN","IBCU4",18,0)
 I +X<IB00 W !?4,"Cannot preceed the 'Start Date'!",*7 K X G DDAT4
"RTN","IBCU4",19,0)
 ;I $S($E(IB00,4,5)<10:$E(IB00,2,3),1:$E(IB00,2,3)+1)'=$S($E(X,4,5)<10:$E(X,2,3),1:$E(X,2,3)+1) K X W !?4,"Must be in same fiscal year!",*7 G DDAT4
"RTN","IBCU4",20,0)
 ;I $$FY(+IB00)'=$$FY(X) K X W !?4,"Must be in same fiscal year!",*7 G DDAT4
"RTN","IBCU4",21,0)
 ;I $E(IB00,1,3)'=$E(X,1,3) K X W !?4,"Must be in same calendar year!",*7 G DDAT4
"RTN","IBCU4",22,0)
 D PROCDT
"RTN","IBCU4",23,0)
 I DGPRDTE,X<DGPRDTE K X W !?4,"Can't be less than date of specified Procedures!",*7 G DDAT4
"RTN","IBCU4",24,0)
 G DDAT4
"RTN","IBCU4",25,0)
 ;
"RTN","IBCU4",26,0)
 ;DDAT2   ;Input transform for OP VISITS DATE(S) field  REPLACED WITH IBCU41 6/15/93
"RTN","IBCU4",27,0)
 ;S IB00=$G(^DGCR(399,IBIFN,"U")) I $P(IB00,"^",1)']"" W !?4,*7,"No 'Start Date' on file...can't enter OP visit dates..." K X G DDAT4
"RTN","IBCU4",28,0)
 ;I $P(IB00,"^",2)']"" W !?4,*7,"No 'End Date' on file...can't enter OP visit dates..." K X G DDAT4
"RTN","IBCU4",29,0)
 ;I X<$P(IB00,"^",1) W !?4,*7,"Can't enter a visit date prior to 'Start Date'..." K X G DDAT4
"RTN","IBCU4",30,0)
 ;I X>$P(IB00,"^",2) W !?4,*7,"Can't enter a visit date later than 'End Date'..." K X G DDAT4
"RTN","IBCU4",31,0)
 ;I $P(^DGCR(399,IBIFN,0),"^",19)'=2,$D(^DGCR(399,"ASC2",IBIFN)),$O(^DGCR(399,IBIFN,"OP",0)) W !?4,*7,"Only 1 visit date allowed on bills with Amb. Surg. Codes!" K X G DDAT4
"RTN","IBCU4",32,0)
 ;D APPT^IBCU3,DUPCHK^IBCU3
"RTN","IBCU4",33,0)
 G DDAT4
"RTN","IBCU4",34,0)
 ;
"RTN","IBCU4",35,0)
DDAT3 ; - x-ref call for to and from dates, REPLACED BY TRIGGERS ON .08, 151, 152 ON 10/18/93
"RTN","IBCU4",36,0)
 ;if inpatient bill return DGNEWLOS to cause recalc of los in IBSC6
"RTN","IBCU4",37,0)
 G DDAT4:'$D(X)
"RTN","IBCU4",38,0)
 I $D(^DGCR(399,DA,0)),$P(^(0),"^",5)<3 S DGNEWLOS=1
"RTN","IBCU4",39,0)
 S IB00=$S($D(^DGCR(399,+DA,"U")):^("U"),1:"") I IB00']"" K X G DDAT4
"RTN","IBCU4",40,0)
 S IB02=$S(+$E(IB00,4,5)<10:$E(IB00,2,3),1:$E(IB00,2,3)+1),IB01=$E(IB00,1)_IB02_"0930",$P(^DGCR(399,DA,"U1"),"^",9)=IB02 ;,$P(^DGCR(399,DA,"U1"),"^",11)=$S($P(IB00,"^",2)>IB01:IB02+1,1:"")
"RTN","IBCU4",41,0)
 ;I $P(^DGCR(399,DA,"U1"),"^",11)="" S $P(^("U1"),"^",12)=""
"RTN","IBCU4",42,0)
 ;
"RTN","IBCU4",43,0)
DDAT4 K IB00,IB01,IB02,IB03,DGX,DGNOAP,DGJ,DGPROC,DGPRDT,DGPRDTE,DGPRDTB Q
"RTN","IBCU4",44,0)
 ;
"RTN","IBCU4",45,0)
OTDAT ; Input transform for Other Care Start Date (399,48,.02)
"RTN","IBCU4",46,0)
 I ('$G(DA(1)))!('$G(X)) Q
"RTN","IBCU4",47,0)
 N IBX S IBX=$G(^DGCR(399,DA(1),"U"))
"RTN","IBCU4",48,0)
 I +X<+IBX W !,?4,"Can Not Precede Bill Start Date!",!,*7 K X Q
"RTN","IBCU4",49,0)
 I +X>+$P(IBX,U,2) W !,?4,"Can not be after Bill End Date!",!,*7 K X Q
"RTN","IBCU4",50,0)
 Q
"RTN","IBCU4",51,0)
 ;
"RTN","IBCU4",52,0)
 ;
"RTN","IBCU4",53,0)
 ;
"RTN","IBCU4",54,0)
TO ;151 pseudo input x-form
"RTN","IBCU4",55,0)
 I +X_.9<IBIDS(.03) W !?4,"Cannot precede the 'EVENT DATE'!",*7 K X Q
"RTN","IBCU4",56,0)
 I +X>(DT_".2359") W !?4,"Cannot bill for future treatment!",*7 K X
"RTN","IBCU4",57,0)
 Q
"RTN","IBCU4",58,0)
FROM ;152 pseudo input x-form
"RTN","IBCU4",59,0)
 I '$D(IBIDS(151)) W !?4,"'Start Date' must be specified first!",*7 K X Q
"RTN","IBCU4",60,0)
 I +X<IBIDS(151) W !?4,"Cannot preceed the 'Start Date'!",*7 K X Q
"RTN","IBCU4",61,0)
 ;I $S($E(IBIDS(151),4,5)<10:$E(IBIDS(151),2,3),1:$E(IBIDS(151),2,3)+1)'=$S($E(X,4,5)<10:$E(X,2,3),1:$E(X,2,3)+1) K X W !?4,"Must be in same fiscal year!",*7 Q
"RTN","IBCU4",62,0)
 ;I $$FY(IBIDS(151))'=$$FY(X) K X W !?4,"Must be in same fiscal year!",*7 Q
"RTN","IBCU4",63,0)
 ;I $E(IBIDS(151),1,3)'=$E(X,1,3) K X W !?4,"Must be in same calendar year!",*7 Q
"RTN","IBCU4",64,0)
 Q
"RTN","IBCU4",65,0)
 ;
"RTN","IBCU4",66,0)
FY(DATE) ; return a dates Fiscal Year
"RTN","IBCU4",67,0)
 N IBYR,IBFY S IBFY=""
"RTN","IBCU4",68,0)
 I $G(DATE)?7N.E S IBYR=$S($E(DATE,4,5)<10:$E(DATE,1,3),1:$E(DATE,1,3)+1),IBFY=$E(IBYR,2,3)
"RTN","IBCU4",69,0)
 Q IBFY
"RTN","IBCU4",70,0)
 ;
"RTN","IBCU4",71,0)
SPEC ;  - calculate discharge specialty
"RTN","IBCU4",72,0)
 ;  - input  IBids(.08) = ptf record number
"RTN","IBCU4",73,0)
 ;  - output IBids(161) = pointer to billing specialty in 399.1
"RTN","IBCU4",74,0)
 K IBIDS(161)
"RTN","IBCU4",75,0)
 Q:$S('$D(IBIDS(.08)):1,'$D(^DGPT(+IBIDS(.08),70)):1,'$P(^(70),"^",2):1,'$D(^DIC(42.4,+$P(^(70),"^",2),0)):1,1:0)  S IBIDS(161)=$P(^DGPT(IBIDS(.08),70),"^",2)
"RTN","IBCU4",76,0)
 S IBIDS(161)=$P($G(^DIC(42.4,+IBIDS(161),0)),"^",5) I IBIDS(161)="" K IBIDS(161) Q
"RTN","IBCU4",77,0)
 S IBIDS(161)=$O(^DGCR(399.1,"B",IBIDS(161),0))
"RTN","IBCU4",78,0)
 I '$D(^DGCR(399.1,+IBIDS(161),0)) K IBIDS(161)
"RTN","IBCU4",79,0)
 Q
"RTN","IBCU4",80,0)
 ;
"RTN","IBCU4",81,0)
PROCDT ;  - find first and last dates of procedures
"RTN","IBCU4",82,0)
 ;    can't set from and to date inside of this range
"RTN","IBCU4",83,0)
 S (DGPRDT,DGPROC,DGPRDTE,DGPRDTB)=0
"RTN","IBCU4",84,0)
 F  S DGPROC=$O(^DGCR(399,+DA,"CP",DGPROC)) Q:'DGPROC  S DGPRDT=$P($G(^DGCR(399,+DA,"CP",DGPROC,0)),"^",2) D
"RTN","IBCU4",85,0)
 . I DGPRDTB=0!(DGPRDTB>DGPRDT) S DGPRDTB=DGPRDT
"RTN","IBCU4",86,0)
 . I DGPRDTE=0!(DGPRDTE<DGPRDT) S DGPRDTE=DGPRDT
"RTN","IBCU4",87,0)
 . Q
"RTN","IBCU4",88,0)
 Q
"RTN","IBCU4",89,0)
 ;
"RTN","IBCU4",90,0)
TOBIN(Y,DA) ; Screen for UB92 bill classification based on UB92 location of care
"RTN","IBCU4",91,0)
 ; Y = internal value of code for field .25 (UB BILL CLASSIFICATION)
"RTN","IBCU4",92,0)
 ; DA = bill ien in file 399
"RTN","IBCU4",93,0)
 N IB0
"RTN","IBCU4",94,0)
 S IB0=$P($G(^DGCR(399,DA,0)),U,24) ; Get UB92 LOCATION OF CARE value
"RTN","IBCU4",95,0)
 Q $S('IB0:0,(","_$P($G(^DGCR(399.1,+Y,0)),U,24)_",")'[(","_IB0_","):0,1:1)
"RTN","IBCU4",96,0)
 ;
"RTN","IBCU4",97,0)
TRIG05(X,D0) ; Trigger executed on field .05 of file 399 to set field .25
"RTN","IBCU4",98,0)
 ; Find the correct entry in file 399.1 that corresponds to the value in .05
"RTN","IBCU4",99,0)
 ; X = value of field .05, location of care
"RTN","IBCU4",100,0)
 ; D0 = IEN of bill entry in file 399
"RTN","IBCU4",101,0)
 N Z,Z0,IEN,LOC
"RTN","IBCU4",102,0)
 S LOC=$P($G(^DGCR(399,D0,0)),U,4)
"RTN","IBCU4",103,0)
 S IEN="",Z=0
"RTN","IBCU4",104,0)
 I LOC'="" F  S Z=$O(^DGCR(399.1,"C",X,Z)) Q:'Z  S Z0=$P($G(^DGCR(399.1,Z,0)),U,23,24) I +Z0,(","_$P(Z0,U,2)_",")[(","_LOC_",") S IEN=Z Q
"RTN","IBCU4",105,0)
 Q IEN
"RTN","IBCU4",106,0)
 ;
"RTN","IBCU4",107,0)
TOB(IBIFN,POS) ;Function returns the 3 digit type of bill from UB92
"RTN","IBCU4",108,0)
 ;  fields or the position (1-3) as determined by POS (optional)
"RTN","IBCU4",109,0)
 N Z
"RTN","IBCU4",110,0)
 S Z=$P($G(^DGCR(399,IBIFN,0)),U,24,26),Z=$P(Z,U)_$P($G(^DGCR(399.1,+$P(Z,U,2),0)),U,2)_$P(Z,U,3)
"RTN","IBCU4",111,0)
 Q $S('$G(POS):Z,1:$E(Z,+POS))
"RTN","IBCU4",112,0)
 ;
"RTN","IBCU6")
0^47^B18448611
"RTN","IBCU6",1,0)
IBCU6 ;ALB/AAS - UTILITY ROUTINE TO SET BEDSECTIONS/REVENUE CODES FROM PTF DATA ; 25 MAY 90
"RTN","IBCU6",2,0)
 ;;2.0;INTEGRATED BILLING;**14,52,138,245**;21-MAR-94
"RTN","IBCU6",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCU6",4,0)
 ;
"RTN","IBCU6",5,0)
 ;MAP TO DGCRU6
"RTN","IBCU6",6,0)
 ;
"RTN","IBCU6",7,0)
% ;setup variables - needs IBifn
"RTN","IBCU6",8,0)
 ;K IBRSARR D BILL^IBCRBC(IBIFN,.IBRSARR)
"RTN","IBCU6",9,0)
 N X S X=$$PRCDIV^IBCU71(IBIFN) I '$D(ZTQUEUED),+X W !,$P(X,U,2) ; update bill default division
"RTN","IBCU6",10,0)
 S X=$$DVTYP^IBCU71(IBIFN) I '$D(ZTQUEUED),$P(X,U,2)'="" W !,$P(X,U,2) ; update bill charge type
"RTN","IBCU6",11,0)
 ;
"RTN","IBCU6",12,0)
 D BILL^IBCRBC(IBIFN) ;   calculate bill charges
"RTN","IBCU6",13,0)
 ;
"RTN","IBCU6",14,0)
 D CPTMOD26^IBCU73(IBIFN) ; add cpt modifier 26 to professional bill
"RTN","IBCU6",15,0)
 Q
"RTN","IBCU6",16,0)
 ;
"RTN","IBCU6",17,0)
 Q:'$D(^DGCR(399,IBIFN,0))  N IBQUIT S IBQUIT=0 K ^UTILITY($J) D GVAR^IBCU61 Q:IBQUIT
"RTN","IBCU6",18,0)
 I '$D(DFN) S DFN=$P(^DGCR(399,IBIFN,0),"^",2)
"RTN","IBCU6",19,0)
 I IBIDS(.05)<3 S PTF=$P(^DGCR(399,IBIFN,0),"^",8) Q:PTF']""  Q:'$D(^DGPT(PTF,0))  I '$P(^DGPT(PTF,0),"^",6),'$P(^(0),"^",4),'$D(DGPTUPDT) D UPDT^DGPTUTL S DGPTUPDT=""
"RTN","IBCU6",20,0)
 S DGADM=IBIDS(.03),DGPMCA=$O(^DGPM("AMV1",DGADM,DFN,0)) ;find corresponding admission
"RTN","IBCU6",21,0)
 D:$O(^DGCR(399,IBIFN,"RC",0)) ALL^IBCU61
"RTN","IBCU6",22,0)
 ;
"RTN","IBCU6",23,0)
OPT ;I IBIDS(.05)>2 S DGBILLBS="OUTPATIENT VISIT",DGVISCNT=$S($D(^DGCR(399,IBIFN,"OP",0)):$P(^(0),U,4),1:""),^UTILITY($J,"IB-BS",DGBILLBS)=DGVISCNT G END:DGVISCNT<1 D  G END:IBQUIT,3
"RTN","IBCU6",24,0)
 ;.I $D(^DGCR(399,IBIFN,"CP","ASC",1)) D ^IBCU63
"RTN","IBCU6",25,0)
 ;.;I $D(^UTILITY($J,"IB-ASC")) S IBQUIT=1
"RTN","IBCU6",26,0)
 I IBIDS(.05)>2 D  G END:(DGVISCNT<1)!IBQUIT,3
"RTN","IBCU6",27,0)
 . S DGBILLBS="OUTPATIENT VISIT",DGVISCNT=$S($D(^DGCR(399,IBIFN,"OP",0)):$P(^(0),U,4),1:""),^UTILITY($J,"IB-BS",DGBILLBS)=DGVISCNT ; visit
"RTN","IBCU6",28,0)
 . I DGVISCNT>0,$D(^DGCR(399,IBIFN,"CP","ASC",1)) D ^IBCU63 ; basc
"RTN","IBCU6",29,0)
 . D SET^IBCSC5A(IBIFN,.IBX) S IBCNT=+$P(IBX,U,2) K IBX I +IBCNT D RX^IBCU63 ; rx refills
"RTN","IBCU6",30,0)
 ;
"RTN","IBCU6",31,0)
1 ;build array of movement dates, billable bedsections
"RTN","IBCU6",32,0)
 S DGMOVE=0 F DGII=0:0 S DGMOVE=$O(^DGPT(PTF,"M",DGMOVE)) Q:'DGMOVE  D SETU
"RTN","IBCU6",33,0)
 ;
"RTN","IBCU6",34,0)
2 ;build array of billable bedsections = los in bedsection
"RTN","IBCU6",35,0)
 ;start with statement covers from date, end with statement covers to date
"RTN","IBCU6",36,0)
 S (DGMVDT,DGMVDTP)=$S($D(IBIDS(151)):IBIDS(151),1:IBIDS(.03)),(DGBS,DGBS1)=""
"RTN","IBCU6",37,0)
 ;
"RTN","IBCU6",38,0)
 S DGMVDT=DGMVDT+.3,IBMVDTE=IBIDS(152)\1
"RTN","IBCU6",39,0)
 I ",2,3,"'[IBIDS(.06) S IBMVDTE=IBMVDTE-.01 I IBIDS(151)=IBIDS(152) S DGMVDT=IBIDS(151)
"RTN","IBCU6",40,0)
 I +DGPMCA S DGII=$$AD^IBCU64(DGPMCA) I ($P(DGII,U,1)\1)=($P(DGII,U,2)\1) S DGMVDT=IBIDS(151),IBMVDTE=IBIDS(152)
"RTN","IBCU6",41,0)
 ;
"RTN","IBCU6",42,0)
 S DGMVDT=DGMVDT-.01 F DGII=0:0 S DGMVDT=$O(^UTILITY($J,"IB-PTF",DGMVDT)) Q:'DGMVDT!(DGMVDTP\1>IBIDS(152))  D SETU1 S DGMVDTP=DGMVDT Q:(DGMVDTP\1)>IBMVDTE
"RTN","IBCU6",43,0)
 ;
"RTN","IBCU6",44,0)
3 ;find revenue codes and set up in file.
"RTN","IBCU6",45,0)
 S DGBS=0 I '$D(^DGCR(399,IBIFN,"RC",0)) S ^DGCR(399,IBIFN,"RC",0)="^399.042PA"
"RTN","IBCU6",46,0)
 F DGII=0:0 S DGBS=$O(^UTILITY($J,"IB-BS",DGBS)) Q:DGBS']""!(IBQUIT)  S DGBSLOS=^(DGBS),DGBSI=$O(^DGCR(399.1,"B",DGBS,0)) I DGBSI,$D(^DGCR(399.1,DGBSI,0)) D SETREV^IBCU62
"RTN","IBCU6",47,0)
 G END
"RTN","IBCU6",48,0)
 ;
"RTN","IBCU6",49,0)
SETU ;utility array of all movements by date, billing bedsection
"RTN","IBCU6",50,0)
 ;non-billable bs's must be added to array so their days will not be added to a billable bs
"RTN","IBCU6",51,0)
 S X=^DGPT(PTF,"M",DGMOVE,0)
"RTN","IBCU6",52,0)
 S DGBILLBS=$P($G(^DIC(42.4,+$P(X,U,2),0)),U,5) I DGBILLBS="" S DGBILLBS="UNKNOWN"
"RTN","IBCU6",53,0)
 ;S DGBILLBS=$S('$P(X,U,2):"UNKNOWN",$D(^DIC(42.4,$P(X,U,2),0)):$P(^(0),U,5),1:"UNKNOWN") Q:DGBILLBS=""
"RTN","IBCU6",54,0)
 S ^UTILITY($J,"IB-PTF",$S($P(X,U,10)]"":$P(X,U,10),1:DT),DGBILLBS)=($P(X,U,3)+$P(X,U,4))_"^"_$P(X,U,18)
"RTN","IBCU6",55,0)
 Q
"RTN","IBCU6",56,0)
 ;
"RTN","IBCU6",57,0)
SETU1 ;determine los - set utility=los
"RTN","IBCU6",58,0)
 S DGBS=$O(^UTILITY($J,"IB-PTF",DGMVDT,0)) Q:DGBS="UNKNOWN"  S:DGBS1="" DGBS1=DGBS
"RTN","IBCU6",59,0)
 S DGEDT=$S(DGMVDT<IBIDS(152):DGMVDT,1:IBIDS(152)),DGBDT=$S(IBIDS(151)>DGMVDTP:IBIDS(151),1:DGMVDTP)
"RTN","IBCU6",60,0)
 S IBTF=$S(IBIDS(152)<(DGMVDT\1):IBIDS(.06),1:1)
"RTN","IBCU6",61,0)
 S X=$$LOS^IBCU64(DGBDT,DGEDT,IBTF,DGPMCA) Q:'X
"RTN","IBCU6",62,0)
 I $D(DGINPAR),$P(DGINPAR,"^")=0,(DGBS1'=DGBS) Q  ;only one bedsection allowed by ins co
"RTN","IBCU6",63,0)
 I IBIDS(.11)="c",(DGBS1'=DGBS) Q
"RTN","IBCU6",64,0)
 I $P(^UTILITY($J,"IB-PTF",DGMVDT,DGBS),U,2)=1 Q  ;treatment for sc condition
"RTN","IBCU6",65,0)
 S ^UTILITY($J,"IB-BS",DGBS)=+$G(^UTILITY($J,"IB-BS",DGBS))+X
"RTN","IBCU6",66,0)
 Q
"RTN","IBCU6",67,0)
END I IBIDS(.11)="c" S IBIDS(.11)="p"
"RTN","IBCU6",68,0)
 K ^UTILITY($J),DGMOVE,DGMVDT,DGMVDTP,DGBS,DGBSLOS,DGBSI,DGBILLBS,DGBR,DGREC,DGII,DGJJ,DGKK,DGREVHDR,DGAMNT,DGREV,DGBS1,X,X1,X2,Y,Z,DGINPAR,DR,DIK,DGVISCNT,DGBRN,DGFUNC,DGACTDT,DGRVRCAL,DA,IBIDS,DGREV00
"RTN","IBCU6",69,0)
 K DGLL,DGFND,IBND0,IBNDU,DGPMCA,DGADM,DGEDT,DGBDT,DGMVTP,DGMVT,DGDC,DGNEXT,DGX,DGIFN,IBTF,IBCNT,IBCHK,IBMVDTE
"RTN","IBCU6",70,0)
 Q
"RTN","IBCU7")
0^48^B52823765
"RTN","IBCU7",1,0)
IBCU7 ;ALB/AAS - INTERCEPT SCREEN INPUT OF PROCEDURE CODES ; 29-OCT-91
"RTN","IBCU7",2,0)
 ;;2.0;INTEGRATED BILLING;**62,52,106,125,51,137,210,245**;21-MAR-94
"RTN","IBCU7",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCU7",4,0)
 ;
"RTN","IBCU7",5,0)
 ;MAP TO DGCRU7
"RTN","IBCU7",6,0)
 ;
"RTN","IBCU7",7,0)
CHKX ;  -interception of input x from Additional Procedure input
"RTN","IBCU7",8,0)
 G:X=" " CHKXQ
"RTN","IBCU7",9,0)
 I $$INPAT^IBCEF(DA(1)),'$P($G(^IBE(350.9,1,1)),"^",15),X'?1A1N D  G CHKXQ
"RTN","IBCU7",10,0)
 . K X
"RTN","IBCU7",11,0)
 . D EN^DDIOL("Site param does not allow entry of non-PTF procedures") ;Fileman error here will be: The previous error occurred when performing an action specified in a Pre-lookup transform (7.5 node).
"RTN","IBCU7",12,0)
 G:'$D(^UTILITY($J,"IB")) CHKXQ
"RTN","IBCU7",13,0)
 S M=($A($E(X,1))-64),S=+$E(X,2) Q:'$G(^UTILITY($J,"IB",M,S))  S X="`"_+^(S)
"RTN","IBCU7",14,0)
 I $D(DGPROCDT),DGPROCDT'=$P($G(^UTILITY($J,"IB",M,1)),"^",2) S DGPROCDT=$P(^(1),"^",2) W !!,"Procedure Date: " S Y=DGPROCDT X ^DD("DD") W Y,!
"RTN","IBCU7",15,0)
CHKXQ Q
"RTN","IBCU7",16,0)
 ;
"RTN","IBCU7",17,0)
CODMUL ;Date oriented entry of procedure 
"RTN","IBCU7",18,0)
DELASK I $D(IBZ20),IBZ20,IBZ20'=$P(^DGCR(399,IBIFN,0),U,9) S %=2 W !,"SINCE THE PROCEDURE CODING METHOD HAS BEEN CHANGED, DO YOU WANT TO DELETE ALL",!,"PROCEDURE CODES IN THIS BILL"
"RTN","IBCU7",19,0)
 I  D YN^DICN Q:%=-1  D:%=1 DELADD I %Y?1."?" W !!,"If you answer 'Yes', all procedure codes will be DELETED from this bill.",! G DELASK
"RTN","IBCU7",20,0)
 K %,%Y,DA,IBZ20,DIK ;W !,"Procedure Entry:"
"RTN","IBCU7",21,0)
 ;
"RTN","IBCU7",22,0)
CODDT I $D(IBIFN),$D(^DGCR(399,IBIFN,0)),$P(^(0),U,9) S DIC("V")=$S($P(^(0),U,9)=9:"I +Y(0)=80.1",$P(^(0),U,9)=4!($P(^(0),U,9)=5):"I +Y(0)=81",1:"")
"RTN","IBCU7",23,0)
 I $P($G(^DGCR(399,IBIFN,0)),"^",5)<3 S IBZTYPE=1 I $P($G(^UTILITY($J,"IB",1,1)),"^",2) S DGPROCDT=$P(^(1),"^",2) D ASKCOD
"RTN","IBCU7",24,0)
 S X=$$PRCDIV^IBCU71(IBIFN) I +X W !!,$P(X,U,2),!
"RTN","IBCU7",25,0)
 N Z,Z0 S Z=$G(^DGCR(399,IBIFN,"U")),Z0=$$FMTE^XLFDT($P(Z,U),"2D")_"-"_$$FMTE^XLFDT($P(Z,U,2),"2D")
"RTN","IBCU7",26,0)
 W !,"Select PROCEDURE DATE"_$S($TR(Z0,"-")'="":" ("_Z0_")",1:"")_": " R X:DTIME G:'$T!("^"[X) CODQ D:X["?" CODHLP
"RTN","IBCU7",27,0)
 S IBEX=0 D  ; Get procedure date
"RTN","IBCU7",28,0)
 . I X=" ",$D(DGPROCDT),DGPROCDT?7N S Y=DGPROCDT D D^DIQ W "   (",Y,")" Q
"RTN","IBCU7",29,0)
 . I X=" ",+$P($G(^DGCR(399,IBIFN,"OP",0)),"^",4) S (DGPROCDT,Y)=$O(^DGCR(399,IBIFN,"OP",0)) D D^DIQ W "   (",Y,")" Q
"RTN","IBCU7",30,0)
 . S %DT="EXP",%DT(0)=-DT D ^%DT K %DT I Y<1 S IBEX=1 Q
"RTN","IBCU7",31,0)
 . I '$$OPV2^IBCU41(Y,IBIFN,1) S IBEX=1 Q
"RTN","IBCU7",32,0)
 . S:'$G(IBZTYPE) X=$$OPV^IBCU41(Y,IBIFN) S DGPROCDT=Y
"RTN","IBCU7",33,0)
 I 'IBEX D ASKCOD,ADDCPT^IBCU71:$D(DGCPT)
"RTN","IBCU7",34,0)
 K IBEX
"RTN","IBCU7",35,0)
 G CODDT
"RTN","IBCU7",36,0)
 ;
"RTN","IBCU7",37,0)
ASKCOD N Z,Z0,DA,IBACT,IBQUIT
"RTN","IBCU7",38,0)
 K DGCPT
"RTN","IBCU7",39,0)
 S DGCPT=0,DGCPTUP=$P($G(^IBE(350.9,1,1)),"^",19),DGADDVST=0,IBFT=$P($G(^DGCR(399,IBIFN,0)),"^",19)
"RTN","IBCU7",40,0)
 I '$D(^DGCR(399,IBIFN,"CP",0)) S ^DGCR(399,IBIFN,"CP",0)=U_$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCU7",41,0)
 ;
"RTN","IBCU7",42,0)
 F  S IBQUIT=0 D  Q:IBQUIT
"RTN","IBCU7",43,0)
 . S DIC("A")="   Select PROCEDURE: "
"RTN","IBCU7",44,0)
 . S DIC="^DGCR(399,"_IBIFN_",""CP"","
"RTN","IBCU7",45,0)
 . S DIC(0)="AEQMNL"
"RTN","IBCU7",46,0)
 . S DIC("S")="I '$D(DIV(""S""))&($P(^(0),U,2)=DGPROCDT)"
"RTN","IBCU7",47,0)
 . S DIC("DR")="1///^S X=DGPROCDT"
"RTN","IBCU7",48,0)
 . S DA(1)=IBIFN,DLAYGO=399
"RTN","IBCU7",49,0)
 . W ! D ^DIC I Y<1 S IBQUIT=1 Q
"RTN","IBCU7",50,0)
 . ; If we just added inactive code - it must be deleted.
"RTN","IBCU7",51,0)
 . S IBACT=0 ; Active flag
"RTN","IBCU7",52,0)
 . I Y["ICD0" S IBACT=$$ICD0ACT^IBACSV(+$P(Y,U,2),DGPROCDT)
"RTN","IBCU7",53,0)
 . I Y["ICPT" S IBACT=$$CPTACT^IBACSV(+$P(Y,U,2),DGPROCDT)
"RTN","IBCU7",54,0)
 . S DGCPTNEW=$P(Y,"^",3) ;Was the procedure just added?
"RTN","IBCU7",55,0)
 . I DGCPTNEW,'IBACT D DELPROC Q
"RTN","IBCU7",56,0)
 . I 'IBACT W !,*7,"Warning:  Procedure code is inactive on this date",!
"RTN","IBCU7",57,0)
 . S DGADDVST=$S(DGCPTNEW:1,$D(DGADDVST):DGADDVST,1:0)
"RTN","IBCU7",58,0)
 . N IBPRV,IBPRVO,IBPRVN
"RTN","IBCU7",59,0)
 . S IBPRVO=$$MAINPRV^IBCEU(IBIFN),IBPRV=$P(IBPRVO,U,3),IBPRVN=(IBPRVO["IBA(355.93,"),IBPRV=$S(IBPRV="":"",'IBPRVN:$P(IBPRVO,U),1:"")
"RTN","IBCU7",60,0)
 . I IBPRV="",'IBPRVN D
"RTN","IBCU7",61,0)
 .. S IBPRV=0 F  S IBPRV=$O(^DGCR(399,IBIFN,"CP",IBPRV)) S:'IBPRV IBPRV="" Q:'IBPRV  S Z=$P($G(^(IBPRV,0)),U,18) I Z S IBPRV=$P($G(^VA(200,Z,0)),U) Q
"RTN","IBCU7",62,0)
 . S DR="" I Y["ICPT" S DR="16"_$S(IBPRVN:";18///@",1:";18//"_IBPRV)_";6;5//"_$$DEFDIV(IBIFN)_";"
"RTN","IBCU7",63,0)
 . S DR=".01;"_DR_$S(IBFT=2:"8;9;17//NO;",1:"")_3,DIE=DIC,(IBPROCP,DA)=+Y D ^DIE Q:'$D(DA)!($E($G(Y))=U)
"RTN","IBCU7",64,0)
 . ;
"RTN","IBCU7",65,0)
 . S DR=$$SPCUNIT(IBIFN,IBPROCP) I DR'="" D ^DIE ; miles/minutes/hours
"RTN","IBCU7",66,0)
 . ;
"RTN","IBCU7",67,0)
 . I IBFT=2 D
"RTN","IBCU7",68,0)
 .. D DX^IBCU72(IBIFN,IBPROCP)
"RTN","IBCU7",69,0)
 .. S X=$$ADDTNL(IBIFN,.DA)
"RTN","IBCU7",70,0)
 . Q:$$INPAT^IBCEF(IBIFN)  ;only outpatient bills
"RTN","IBCU7",71,0)
 . ;add procedures to array for download to PCE: dgcpt(assoc clinic,cpt,'provider^first dx^modifiers',cnt)=""
"RTN","IBCU7",72,0)
 . S DGPROC=$G(^DGCR(399,IBIFN,"CP",+DA,0))
"RTN","IBCU7",73,0)
 . S X=$P(DGPROC,U,18)_U_+$G(^IBA(362.3,+$P(DGPROC,U,11),0))_U_$P(DGPROC,U,15)
"RTN","IBCU7",74,0)
 . I 'DGCPTNEW,$P(DGPROC,"^",7)="" S DGCPTNEW=2
"RTN","IBCU7",75,0)
 . I DGCPTUP,DGCPTNEW S DGCPT=DGCPT+1 I $P(DGPROC,"^",7) S DGCPT($P(DGPROC,"^",7),+DGPROC,X,DGCPT)=""
"RTN","IBCU7",76,0)
 . ; add visit date to bill
"RTN","IBCU7",77,0)
 . I DGADDVST S (X,DINUM)=DGPROCDT D VFILE1^IBCOPV1 K DINUM,X,DGNOADD,DGADDVST
"RTN","IBCU7",78,0)
 ; Delete modifers with only a sequence #, no code
"RTN","IBCU7",79,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"CP",Z)) Q:'Z  S Z0=0 F  S Z0=$O(^DGCR(399,IBIFN,"CP",Z,"MOD",Z0)) Q:'Z0  I $P($G(^(Z0,0)),U,2)="" S DA(2)=IBIFN,DA(1)=Z,DA=Z0,DIK="^DGCR(399,"_DA(2)_",""CP"","_DA(1)_",""MOD""," D ^DIK
"RTN","IBCU7",80,0)
 Q
"RTN","IBCU7",81,0)
CODQ K %DT,DGPROC,DIC,DIE,DR,DGPROCDT,IBPROCP,DLAYGO
"RTN","IBCU7",82,0)
 K IBFT,DGNOADD,DGADDVST,DGCPT,DGCPTUP,IBZTYPE,DGCPTNEW
"RTN","IBCU7",83,0)
 Q
"RTN","IBCU7",84,0)
 ;
"RTN","IBCU7",85,0)
DELPROC ; Remove the selected procedure, because of inactive status (cancel selection)
"RTN","IBCU7",86,0)
 W !!,*7,"The Procedure code is inactive on ",$$DAT1^IBOUTL(DGPROCDT),"."
"RTN","IBCU7",87,0)
 W !,"Please select another Procedure."
"RTN","IBCU7",88,0)
 S DA(1)=IBIFN,DA=+Y,DIK="^DGCR(399,"_IBIFN_",""CP"","
"RTN","IBCU7",89,0)
 D ^DIK
"RTN","IBCU7",90,0)
 Q
"RTN","IBCU7",91,0)
 ;
"RTN","IBCU7",92,0)
DELADD N Z,Z0,DA,DIK,X,Y
"RTN","IBCU7",93,0)
 S DA(1)=IBIFN
"RTN","IBCU7",94,0)
 ;Delete references to proc on rev codes
"RTN","IBCU7",95,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$G(^(Z,0)) I Z0'="",$P(Z0,U,15)!$S($P(Z0,U,10)=3:$P(Z0,U,11),1:0) S DIE="^DGCR(399,"_DA(1)_",""RC"",",DA=Z,DR=".11///@;.15///@"_$S($P(Z0,U,8):"",1:";.08////1") D ^DIE
"RTN","IBCU7",96,0)
 S DIK="^DGCR(399,"_DA(1)_",""CP""," F DA=0:0 S DA=$O(^DGCR(399,DA(1),"CP",DA)) Q:'DA  D ^DIK
"RTN","IBCU7",97,0)
 S DGRVRCAL=1
"RTN","IBCU7",98,0)
 Q
"RTN","IBCU7",99,0)
 ;
"RTN","IBCU7",100,0)
DTMES ;Message if procedure date not in date range
"RTN","IBCU7",101,0)
 Q:'$D(IBIFN)  Q:'$D(^DGCR(399,IBIFN,"U"))  S DGNODUU=^("U")
"RTN","IBCU7",102,0)
 G:X'<$P(DGNODUU,"^")&(X'>$P(DGNODUU,"^",2)) DTMESQ
"RTN","IBCU7",103,0)
 W *7,!!?3,"Date must be within STATEMENT COVERS FROM and STATEMENT COVERS TO period."
"RTN","IBCU7",104,0)
 S Y=$P(DGNODUU,"^") X ^DD("DD")
"RTN","IBCU7",105,0)
 W !?3,"Enter a date between ",Y," and " S Y=$P(DGNODUU,"^",2) X ^DD("DD") W Y,!
"RTN","IBCU7",106,0)
 K X,Y
"RTN","IBCU7",107,0)
DTMESQ K DGNODUU Q
"RTN","IBCU7",108,0)
 ;
"RTN","IBCU7",109,0)
CODHLP ;Display Additional Procedure codes
"RTN","IBCU7",110,0)
 N I,J,Y,IBMOD
"RTN","IBCU7",111,0)
 I '$O(^DGCR(399,IBIFN,"CP",0)) W !!?5,"No Codes Entered!",! Q
"RTN","IBCU7",112,0)
 F I=0:0 S I=$O(^DGCR(399,IBIFN,"CP",I)) Q:'I  S Y=$G(^(I,0)) S Z=$$PRCNM^IBCSCH1($P(Y,"^",1),$P(Y,"^",2)) W !?5,$E($P(Z,"^",2),1,28),?35,"- ",$P(Z,"^") D
"RTN","IBCU7",113,0)
 . N IBY
"RTN","IBCU7",114,0)
 . S IBY=$P(Y,U,2)
"RTN","IBCU7",115,0)
 . S IBMOD=$$GETMOD^IBEFUNC(IBIFN,I,1)
"RTN","IBCU7",116,0)
 . I IBMOD'="" S IBMOD="/"_IBMOD W IBMOD
"RTN","IBCU7",117,0)
 . W ?60,"Date: " S Y=IBY D DT^DIQ
"RTN","IBCU7",118,0)
 ;
"RTN","IBCU7",119,0)
 K Z Q
"RTN","IBCU7",120,0)
 ;
"RTN","IBCU7",121,0)
DICV I $D(IBIFN),$D(^DGCR(399,IBIFN,0)),$P(^(0),U,9) S DIC("V")=$S($P(^(0),U,9)=9:"I +Y(0)=80.1",$P(^(0),U,9)=4!($P(^(0),U,9)=5):"I +Y(0)=81",1:"")
"RTN","IBCU7",122,0)
 Q
"RTN","IBCU7",123,0)
 ;
"RTN","IBCU7",124,0)
DEFDIV(IBIFN) ; Find default division for bill IBIFN
"RTN","IBCU7",125,0)
 Q $P($G(^DG(40.8,+$P($G(^DGCR(399,IBIFN,0)),U,22),0)),U)
"RTN","IBCU7",126,0)
 ;
"RTN","IBCU7",127,0)
ADDTNL(IBIFN,DA) ;
"RTN","IBCU7",128,0)
 N DR,IBOK,X,Y,DIR
"RTN","IBCU7",129,0)
 S IBOK=1
"RTN","IBCU7",130,0)
 ;S DR="19;S:$P($G(^IBE(353.2,+$P($G(^DGCR(399,DA(1),""CP"",DA,0)),U,10),0)),U,2)'=""ANESTHESIA"" Y=""@20"";15;@20;50.01;50.08" D ^DIE
"RTN","IBCU7",131,0)
 S DR="19;50.01;50.08" D ^DIE
"RTN","IBCU7",132,0)
 I $D(Y) S IBOK=0 G ADDTNLQ
"RTN","IBCU7",133,0)
 S DIR("B")="NO",DIR("A")="EDIT HCFA 1500 SPECIAL PROGRAM FIELDS and BOX 19?: ",DIR("A",1)=" ",DIR(0)="YA"
"RTN","IBCU7",134,0)
 S DIR("?",1)="Respond YES only if you need to add/edit data for chiropratic visits,"
"RTN","IBCU7",135,0)
 S DIR("?")="EPSDT care, or if billing for HOSPICE and attending is not a hospice employee."
"RTN","IBCU7",136,0)
 D ^DIR K DIR
"RTN","IBCU7",137,0)
 I Y'=1 S IBOK=0 G ADDTNLQ
"RTN","IBCU7",138,0)
 S DR="W !,""  <<EPSDT>>"";50.07;W !!,""  <<HOSPICE>>"";50.03;W !!,""  <<CHIROPRACTIC>>"";50.04;50.02;50.05;50.06"
"RTN","IBCU7",139,0)
 D ^DIE
"RTN","IBCU7",140,0)
 W !
"RTN","IBCU7",141,0)
ADDTNLQ Q IBOK
"RTN","IBCU7",142,0)
 ;
"RTN","IBCU7",143,0)
XTRA1(Y) ;
"RTN","IBCU7",144,0)
 K Y
"RTN","IBCU7",145,0)
 Q
"RTN","IBCU7",146,0)
 ;
"RTN","IBCU7",147,0)
SPCUNIT(IBIFN,DA) ; return fields for special units if applicable, in DR form
"RTN","IBCU7",148,0)
 N IB0,IBCPT,IBDR,IBCT,IBFT S IBDR=""
"RTN","IBCU7",149,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),IBCT=$P(IB0,U,27),IBFT=$P(IB0,U,19)
"RTN","IBCU7",150,0)
 S IBCPT=$G(^DGCR(399,+$G(IBIFN),"CP",+$G(DA),0)) I IBCPT'["ICPT" G SPCUNTQ
"RTN","IBCU7",151,0)
 I +$$ITMUNIT^IBCRU4(+IBCPT,5,IBCT) S IBDR="15;" G SPCUNTQ ; minutes
"RTN","IBCU7",152,0)
 I +$$ITMUNIT^IBCRU4(+IBCPT,4,IBCT) S IBDR="21;" G SPCUNTQ ; miles
"RTN","IBCU7",153,0)
 I +$$ITMUNIT^IBCRU4(+IBCPT,6,IBCT) S IBDR="22;" G SPCUNTQ ; hours
"RTN","IBCU7",154,0)
 I +IBFT=2,$P($G(^IBE(353.2,+$P(IBCPT,U,10),0)),U,2)="ANESTHESIA" S IBDR="15;" ; minutes
"RTN","IBCU7",155,0)
SPCUNTQ Q IBDR
"RTN","IBCU71")
0^49^B21957104
"RTN","IBCU71",1,0)
IBCU71 ;ALB/AAS - INTERCEPT SCREEN INPUT OF PROCEDURE CODES ; 29-OCT-91
"RTN","IBCU71",2,0)
 ;;2.0;INTEGRATED BILLING;**41,60,91,106,125,138,210,245**;21-MAR-94
"RTN","IBCU71",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCU71",4,0)
 ;
"RTN","IBCU71",5,0)
 ;MAP TO DGCRU71
"RTN","IBCU71",6,0)
 ;
"RTN","IBCU71",7,0)
ADDCPT ;  - store cpt codes in visits file
"RTN","IBCU71",8,0)
 Q:$D(DGCPT)'>9
"RTN","IBCU71",9,0)
 N DA,DIC,DR,DIE,DIRUT,DUOUT,DTOUT,DIROUT,VADM
"RTN","IBCU71",10,0)
 S DIR(0)="Y",DIR("A")="OK to add CPT codes to Visits file",DIR("B")="Y" D ^DIR K DIR Q:'Y!$D(DIRUT)
"RTN","IBCU71",11,0)
 N IBPKG,IBCLIN,IBVDATE,IBPROC,IBK,IBCOUNT,IBRESULT,IBOTH
"RTN","IBCU71",12,0)
 S IBPKG=$O(^DIC(9.4,"C","IB",0)) Q:'IBPKG
"RTN","IBCU71",13,0)
 W !!,"Adding Procedures to PCE..."
"RTN","IBCU71",14,0)
 S IBCLIN=0 F  S IBCLIN=$O(DGCPT(IBCLIN)) Q:'IBCLIN  D
"RTN","IBCU71",15,0)
 .;
"RTN","IBCU71",16,0)
 .K ^TMP("IBPXAPI",$J)
"RTN","IBCU71",17,0)
 .;
"RTN","IBCU71",18,0)
 .; - set up encounter data
"RTN","IBCU71",19,0)
 .S IBVDATE=DGPROCDT D VISDT
"RTN","IBCU71",20,0)
 .S ^TMP("IBPXAPI",$J,"ENCOUNTER",1,"ENC D/T")=IBVDATE,^("PATIENT")=DFN,^("HOS LOC")=IBCLIN,^("SERVICE CATEGORY")="X",^("ENCOUNTER TYPE")="A"
"RTN","IBCU71",21,0)
 .;
"RTN","IBCU71",22,0)
 .; - set up procedure and diagnosis data
"RTN","IBCU71",23,0)
 .S IBK=0,IBPROC=0 F  S IBPROC=$O(DGCPT(IBCLIN,IBPROC)) Q:'IBPROC  D
"RTN","IBCU71",24,0)
 ..S IBOTH="" F  S IBOTH=$O(DGCPT(IBCLIN,IBPROC,IBOTH)) Q:IBOTH=""  D
"RTN","IBCU71",25,0)
 ...S IBK=IBK+1
"RTN","IBCU71",26,0)
 ...;
"RTN","IBCU71",27,0)
 ...; - load first procedure diagnosis as visit diagnosis
"RTN","IBCU71",28,0)
 ...I +$P(IBOTH,U,2) S ^TMP("IBPXAPI",$J,"DX/PL",IBK,"DIAGNOSIS")=+$P(IBOTH,U,2)
"RTN","IBCU71",29,0)
 ...;
"RTN","IBCU71",30,0)
 ...; - count number of times procedure performed
"RTN","IBCU71",31,0)
 ...S (X,IBCOUNT)=0 F  S X=$O(DGCPT(IBCLIN,IBPROC,IBOTH,X)) Q:'X  S IBCOUNT=IBCOUNT+1
"RTN","IBCU71",32,0)
 ...;
"RTN","IBCU71",33,0)
 ...; - load procedure information
"RTN","IBCU71",34,0)
 ...S ^TMP("IBPXAPI",$J,"PROCEDURE",IBK,"PROCEDURE")=IBPROC,^("QTY")=IBCOUNT,^("EVENT D/T")=IBVDATE
"RTN","IBCU71",35,0)
 ...I +$P(IBOTH,U,1) S ^TMP("IBPXAPI",$J,"PROCEDURE",IBK,"ENC PROVIDER")=+$P(IBOTH,U,1)
"RTN","IBCU71",36,0)
 ...I +$P(IBOTH,U,3) S ^TMP("IBPXAPI",$J,"PROCEDURE",IBK,"MODIFIERS",$P($$MOD^ICPTMOD(+$P(IBOTH,U,3),"I"),U,2))=""
"RTN","IBCU71",37,0)
 .;
"RTN","IBCU71",38,0)
 .; - call the PCE interface
"RTN","IBCU71",39,0)
 .Q:'$D(^TMP("IBPXAPI",$J,"PROCEDURE"))
"RTN","IBCU71",40,0)
 .;
"RTN","IBCU71",41,0)
 .S IBRESULT=$$DATA2PCE^PXAPI("^TMP(""IBPXAPI"",$J)",IBPKG,"IB DATA",,DUZ,0)
"RTN","IBCU71",42,0)
 .W !,"  Procedures in ",$P(^SC(IBCLIN,0),"^")," "
"RTN","IBCU71",43,0)
 .I IBRESULT>0 W "were added okay." Q
"RTN","IBCU71",44,0)
 .W "were not added - error code is ",IBRESULT
"RTN","IBCU71",45,0)
 ;
"RTN","IBCU71",46,0)
 K ^TMP("IBPXAPI",$J)
"RTN","IBCU71",47,0)
 Q
"RTN","IBCU71",48,0)
 ;
"RTN","IBCU71",49,0)
 ;
"RTN","IBCU71",50,0)
DISPDX ;  - display diagnosis codes available for associated dx (HCFA 1500)  NO LONGER USED?
"RTN","IBCU71",51,0)
 N I,J,X,IBDX,IBDXL,IBDATE
"RTN","IBCU71",52,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBCU71",53,0)
 F I=1:1:4 S IBDX=$P($G(^DGCR(399,IBIFN,"C")),"^",(I+13)),X=$$ICD9^IBACSV(+IBDX,IBDATE) I X'="" S IBDXL(I)=IBDX_"^"_X
"RTN","IBCU71",54,0)
 I '$D(IBDXL) W !!,"Bill has no ICD DIAGNOSIS." Q
"RTN","IBCU71",55,0)
 W !!,?24,"<<<ASSOCIATED ICD-9 DIAGNOSIS>>>",!!
"RTN","IBCU71",56,0)
 F I=1,2 W ! S X=0 F J=0,2 I $D(IBDXL(I+J)) S IBDX=IBDXL(I+J) D  S X=40
"RTN","IBCU71",57,0)
 . W ?X,"    ",$P(IBDX,"^",2),?(X+13),$E($P(IBDX,"^",4),1,28)
"RTN","IBCU71",58,0)
 W !
"RTN","IBCU71",59,0)
 Q
"RTN","IBCU71",60,0)
 ;
"RTN","IBCU71",61,0)
SCREEN(X,Y) ; -- screen logic for active procs or surgeries - OBSOLETE
"RTN","IBCU71",62,0)
 ; -- input x = date to check,  y = procedure
"RTN","IBCU71",63,0)
 ; -- output 0 if not active for billing or amb proc on date,  1 if either active
"RTN","IBCU71",64,0)
 ;
"RTN","IBCU71",65,0)
 Q 0
"RTN","IBCU71",66,0)
 ;
"RTN","IBCU71",67,0)
VISDT ; Find the actual encounter for the visit; update visit date/time
"RTN","IBCU71",68,0)
 ; input DGPROCDT, DFN, IBCLIN
"RTN","IBCU71",69,0)
 N IBD,IBF,IBOEN,IBEVT,IBVAL,IBCBK,IBFILTER
"RTN","IBCU71",70,0)
 S IBF=0,IBD=DGPROCDT-.1
"RTN","IBCU71",71,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=DGPROCDT-.1,IBVAL("EDT")=DGPROCDT\1_".99"
"RTN","IBCU71",72,0)
 S IBFILTER=""
"RTN","IBCU71",73,0)
 S IBCBK="I IBCLIN=$P(Y0,U,4) S IBVDATE=+Y0,SDSTOP=1"
"RTN","IBCU71",74,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,IBFILTER,IBCBK,1)
"RTN","IBCU71",75,0)
 Q
"RTN","IBCU71",76,0)
 ;
"RTN","IBCU71",77,0)
PRCDT(IBIFN,ARR) ; return array of bill's procedures in date then code order
"RTN","IBCU71",78,0)
 ; returns    ARR(DATE, NAME, CPIFN) = 399.0304 node
"RTN","IBCU71",79,0)
 N IBI,IBX,IBNAME K ARR
"RTN","IBCU71",80,0)
 S IBI=0 F  S IBI=$O(^DGCR(399,+$G(IBIFN),"CP",IBI)) Q:'IBI  D
"RTN","IBCU71",81,0)
 . S IBX=$G(^DGCR(399,IBIFN,"CP",IBI,0))
"RTN","IBCU71",82,0)
 . S IBNAME=$P($$PRCNM^IBCSCH1($P(IBX,U,1)),U,1)_" "
"RTN","IBCU71",83,0)
 . S ARR($P(IBX,U,2),IBNAME,IBI)=IBX
"RTN","IBCU71",84,0)
 Q
"RTN","IBCU71",85,0)
 ;
"RTN","IBCU71",86,0)
PRCDIV(IBIFN) ; change Bills Default Division (399,.22) to reflect care provided
"RTN","IBCU71",87,0)
 ; - set Bill Division to the first Procedures Division (399,304,5), if defined
"RTN","IBCU71",88,0)
 ; - or else if bill is an inpatient bill then get the Division of the Ward the patient was Admitted to
"RTN","IBCU71",89,0)
 ; return null if no change or 'new division ifn^message'
"RTN","IBCU71",90,0)
 ;
"RTN","IBCU71",91,0)
 N IB0,IBCPT,IBPDIV,IBWRD,IBX,DIC,DIE,DA,DR,X,Y S IBX="",IBPDIV=0
"RTN","IBCU71",92,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0))
"RTN","IBCU71",93,0)
 ;
"RTN","IBCU71",94,0)
 I +$G(IBIFN) S IBCPT=$O(^DGCR(399,IBIFN,"CP",0)) I +IBCPT D  ; if CPT division defined, use it
"RTN","IBCU71",95,0)
 . S IBCPT=$G(^DGCR(399,IBIFN,"CP",IBCPT,0)) S IBPDIV=+$P(IBCPT,U,6)
"RTN","IBCU71",96,0)
 ;
"RTN","IBCU71",97,0)
 I 'IBPDIV,+$P(IB0,U,8) D  ; for inpatient, get Ward Division
"RTN","IBCU71",98,0)
 . S IBWRD=$G(^DGPT(+$P(IB0,U,8),535,1,0)) S IBPDIV=+$P($G(^DIC(42,+$P(IBWRD,U,6),0)),U,11)
"RTN","IBCU71",99,0)
 ;
"RTN","IBCU71",100,0)
 I +IBPDIV,+$P(IB0,U,22)'=+IBPDIV D
"RTN","IBCU71",101,0)
 . S DIE="^DGCR(399,",DA=IBIFN,DR=".22////"_+IBPDIV D ^DIE K DIE,DR,DA,X,Y
"RTN","IBCU71",102,0)
 . S IBX=+IBPDIV_"^Bill Division Changed to "_$P($G(^DG(40.8,+IBPDIV,0)),U,1)
"RTN","IBCU71",103,0)
 Q IBX
"RTN","IBCU71",104,0)
 ;
"RTN","IBCU71",105,0)
DVTYP(IBIFN) ; reset Bill Charge Type (399, .27) based on Bill Division (399, .22)
"RTN","IBCU71",106,0)
 ; if bill division is type 3 - Freestanding then reset Charge Type to 2 - Professional
"RTN","IBCU71",107,0)
 ; with RC 2.0+ Type 3 sites have only professional charges, start date of bill must be on/after beginning of RC 2.0
"RTN","IBCU71",108,0)
 N IB0,IBDV,IBCHGTYP,IBDVTYP,DIC,DIE,DA,DR,X,Y
"RTN","IBCU71",109,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),IBDV=$P(IB0,U,22),IBCHGTYP=$P(IB0,U,27)
"RTN","IBCU71",110,0)
 I +$G(^DGCR(399,+$G(IBIFN),"U"))<$$VERSDT^IBCRU8(2) G DVTYPQ
"RTN","IBCU71",111,0)
 I +IBDV,+IBCHGTYP S IBDVTYP=$$RCDV^IBCRU8(+IBDV) I +$P(IBDVTYP,U,3)=3,IBCHGTYP'=2 D
"RTN","IBCU71",112,0)
 . S DIE="^DGCR(399,",DA=IBIFN,DR=".27////"_2 D ^DIE K DIE,DR,DA,X,Y
"RTN","IBCU71",113,0)
 . S IBCHGTYP="2^Bill Charge Type Changed to Professional"
"RTN","IBCU71",114,0)
DVTYPQ Q IBCHGTYP
"RTN","IBCU73")
0^55^B15637923
"RTN","IBCU73",1,0)
IBCU73 ;ALB/ARH - ADD/DELETE MODIFIER 26 TO SPECIFIED CPTS ; 1-SEP-00
"RTN","IBCU73",2,0)
 ;;2.0;INTEGRATED BILLING;**138,51,148,169,245**;21-MAR-94
"RTN","IBCU73",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCU73",4,0)
 ;
"RTN","IBCU73",5,0)
 ; Based on Reasonable Charges v1.1, certain CPT codes should be reported with a modifier 26, indicating the
"RTN","IBCU73",6,0)
 ; charge is only the professional portion of the charge for the procedure.
"RTN","IBCU73",7,0)
 ;
"RTN","IBCU73",8,0)
 ; Auto add/remove modifier 26 for specific CPT codes on a bill
"RTN","IBCU73",9,0)
 ; - must be a Reasonable Charges v1.1 bill or greater
"RTN","IBCU73",10,0)
 ; - the CPT must be part of a specific set of CPT's (MOD26)
"RTN","IBCU73",11,0)
 ; - there must be both institutional and professional RC charges for the CPT
"RTN","IBCU73",12,0)
 ; - if the bill is an institutional bill then modifier 26 is deleted, if it is defined for the CPT
"RTN","IBCU73",13,0)
 ; - if the bill is a professional bill then modifier 26 is added, if it is not already defined for the CPT
"RTN","IBCU73",14,0)
 ;
"RTN","IBCU73",15,0)
CPTMOD26(IBIFN) ; add/remove modifier 26 from specific CPT codes on Reasonable Charges bills
"RTN","IBCU73",16,0)
 N IB0,IBEVDT,IBBCT,IBCSI,IBCSP,IBBCPT,IBLN,IBMODS,IB26,IBX,IBCHANGE,IBBU,IBEND S IBCHANGE=0
"RTN","IBCU73",17,0)
 I '$O(^DGCR(399,+$G(IBIFN),"CP",0)) Q
"RTN","IBCU73",18,0)
 S IB0=$G(^DGCR(399,+IBIFN,0)) Q:IB0=""  S IBBCT=$P(IB0,U,27) Q:'IBBCT
"RTN","IBCU73",19,0)
 S IBBU=$G(^DGCR(399,+IBIFN,"U")),IBEND=$$VERSDT^IBCRU8(2)
"RTN","IBCU73",20,0)
 I 3001102>$P(IBBU,U,2) Q  ; starts with v1.1
"RTN","IBCU73",21,0)
 I +IBBU>IBEND Q  ; ends with v2
"RTN","IBCU73",22,0)
 I '$$BILLRATE^IBCRU3($P(IB0,U,7),$P(IB0,U,5),$P(IB0,U,3),"RC") Q
"RTN","IBCU73",23,0)
 ;
"RTN","IBCU73",24,0)
 S IBX=$O(^IBE(363.1,"B","RC-OPT FAC")),IBCSI=$O(^IBE(363.1,"B",IBX,0)) Q:'IBCSI  S IBCSI="AIVDTS"_IBCSI
"RTN","IBCU73",25,0)
 S IBX=$O(^IBE(363.1,"B","RC-PHYSICI")),IBCSP=$O(^IBE(363.1,"B",IBX,0)) Q:'IBCSP  S IBCSP="AIVDTS"_IBCSP
"RTN","IBCU73",26,0)
 ;
"RTN","IBCU73",27,0)
 S IBBCPT=0 F  S IBBCPT=$O(^DGCR(399,IBIFN,"CP",IBBCPT)) Q:'IBBCPT  D
"RTN","IBCU73",28,0)
 . S IBLN=$G(^DGCR(399,IBIFN,"CP",IBBCPT,0)),IBEVDT=$P(IBLN,U,2) Q:IBLN'[";ICPT("
"RTN","IBCU73",29,0)
 . I 3001102>IBEVDT Q
"RTN","IBCU73",30,0)
 . I IBEVDT'<IBEND Q
"RTN","IBCU73",31,0)
 . ;
"RTN","IBCU73",32,0)
 . I '$$MOD26(+IBLN,IBEVDT) Q
"RTN","IBCU73",33,0)
 . ;
"RTN","IBCU73",34,0)
 . S IBX=$O(^IBA(363.2,IBCSI,+IBLN,-IBEVDT)) Q:'IBX  I IBX'=$O(^IBA(363.2,IBCSP,+IBLN,-IBEVDT)) Q
"RTN","IBCU73",35,0)
 . ;
"RTN","IBCU73",36,0)
 . S IB26=",7,",IBMODS=","_$$GETMOD^IBEFUNC(IBIFN,IBBCPT)_","
"RTN","IBCU73",37,0)
 . ;
"RTN","IBCU73",38,0)
 . I IBBCT=1,IBMODS[IB26 D DELMOD(IBIFN,IBBCPT,7) S IBCHANGE=1
"RTN","IBCU73",39,0)
 . I IBBCT=2,IBMODS'[IB26 D ADDMOD(IBIFN,IBBCPT,7) S IBCHANGE=2
"RTN","IBCU73",40,0)
 ;
"RTN","IBCU73",41,0)
 I '$D(ZTQUEUED),'$G(IBAUTO),+IBCHANGE W !,"Modifier 26 "_$S(IBCHANGE=1:"Deleted from",1:"Added to")_" CPT procedures."
"RTN","IBCU73",42,0)
 Q
"RTN","IBCU73",43,0)
 ;
"RTN","IBCU73",44,0)
MOD26(CPT,IBDT) ; returns true if CPT should have a 26-modifier for professional bill
"RTN","IBCU73",45,0)
 ; 
"RTN","IBCU73",46,0)
 N IBX,IBCPTX S IBX=0,IBCPTX=","_$G(CPT)_",",IBDT=$S(+$G(IBDT):IBDT,1:DT) I '$G(CPT) G MOD26Q
"RTN","IBCU73",47,0)
 I CPT'<70000,CPT'>79999 S IBX=1
"RTN","IBCU73",48,0)
 I CPT'<90000,CPT'>99199 S IBX=1
"RTN","IBCU73",49,0)
 I CPT'<51725,CPT'>51797 S IBX=1
"RTN","IBCU73",50,0)
 I ",54240,54250,59020,59025,62252,62367,62368,"[IBCPTX S IBX=1
"RTN","IBCU73",51,0)
 ;
"RTN","IBCU73",52,0)
 I ",75952,75953,78990,90870,90871,91100,91105,92018,92019,92502,"[IBCPTX S IBX=0
"RTN","IBCU73",53,0)
 I ",92950,92953,92960,92961,93503,93536,93650,93651,93652,94660,94662,"[IBCPTX S IBX=0
"RTN","IBCU73",54,0)
 I ",96405,96406,96440,96445,96450,96542,96570,96571,96902,"[IBCPTX S IBX=0
"RTN","IBCU73",55,0)
 I CPT'<90918,CPT'>90997 S IBX=0
"RTN","IBCU73",56,0)
 ;
"RTN","IBCU73",57,0)
 I IBDT>3030428,",75952,75953,"[IBCPTX S IBX=1 ; should have modifier 26 in v1.4 but not v1.2
"RTN","IBCU73",58,0)
MOD26Q Q IBX
"RTN","IBCU73",59,0)
 ;
"RTN","IBCU73",60,0)
DELMOD(IBIFN,BCPT,MOD) ; delete the modifier from the CPT
"RTN","IBCU73",61,0)
 ; Input:  BCPT - the ifn of the CPT in the 304 multiple
"RTN","IBCU73",62,0)
 ;         MOD  - internal form of the modifier to delete
"RTN","IBCU73",63,0)
 N DA,DR,DIE,DIC,IBLN,X,Y Q:'$G(MOD)
"RTN","IBCU73",64,0)
 S IBLN=+$O(^DGCR(399,+$G(IBIFN),"CP",+$G(BCPT),"MOD","C",MOD,0)) Q:'IBLN
"RTN","IBCU73",65,0)
 ;
"RTN","IBCU73",66,0)
 S DA(2)=IBIFN,DA(1)=BCPT,DA=IBLN,DIE="^DGCR(399,"_DA(2)_",""CP"","_DA(1)_",""MOD"",",DR=".01///@" D ^DIE
"RTN","IBCU73",67,0)
 Q
"RTN","IBCU73",68,0)
 ;
"RTN","IBCU73",69,0)
ADDMOD(IBIFN,BCPT,MOD) ; add the modifier to the CPT
"RTN","IBCU73",70,0)
 ; Input:  BCPT - the ifn of the CPT in the 304 multiple
"RTN","IBCU73",71,0)
 ;         MOD  - internal form of the modifier to add
"RTN","IBCU73",72,0)
 N DA,DR,DIE,DINUM,DIC,IBLN,IBM,IBCPM,X,Y Q:'$G(MOD)
"RTN","IBCU73",73,0)
 S IBLN=+$O(^DGCR(399,+$G(IBIFN),"CP",+$G(BCPT),"MOD","C",MOD,0)) Q:IBLN
"RTN","IBCU73",74,0)
 ;I $$MODP^ICPTMOD(+$G(^DGCR(399,+$G(IBIFN),"CP",+$G(BCPT),0)),MOD,"I")<1 Q ; CPT 2001 too restrictive for RC
"RTN","IBCU73",75,0)
 ;
"RTN","IBCU73",76,0)
 I $D(^DGCR(399,IBIFN,"CP",BCPT,"MOD",1)) D  ;Move modifiers out of 1
"RTN","IBCU73",77,0)
 . S IBCPM="A"
"RTN","IBCU73",78,0)
 . F  S IBCPM=$O(^DGCR(399,IBIFN,"CP",BCPT,"MOD",IBCPM),-1) Q:'IBCPM  S IBM=$G(^(IBCPM,0)) I $P(IBM,U,2) D
"RTN","IBCU73",79,0)
 .. N DA,DO,DD,X,Y,DINUM
"RTN","IBCU73",80,0)
 .. S DA(2)=IBIFN,DA(1)=BCPT,DIC="^DGCR(399,"_DA(2)_",""CP"","_DA(1)_",""MOD"","
"RTN","IBCU73",81,0)
 .. S DINUM=IBCPM+1,X=IBM+1,DIC("DR")=".02////"_$P(IBM,U,2),DIC(0)="L" D FILE^DICN K DO,DD
"RTN","IBCU73",82,0)
 .. I Y>0 S DIE=DIC,DA(2)=IBIFN,DA(1)=BCPT,DA=IBCPM,DR=".01///@" D ^DIE
"RTN","IBCU73",83,0)
 S DINUM=1,DA(2)=IBIFN,DA(1)=BCPT,DIC="^DGCR(399,"_DA(2)_",""CP"","_DA(1)_",""MOD"",",DIC("DR")=".02////"_MOD,X=1,DIC(0)="L" D FILE^DICN
"RTN","IBCU73",84,0)
 Q
"RTN","IBCU7A")
0^56^B28120798
"RTN","IBCU7A",1,0)
IBCU7A ;ALB/ARH - BILL PROCEDURE MANIPULATIONS ; 10-OCT-03
"RTN","IBCU7A",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBCU7A",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCU7A",4,0)
 ;
"RTN","IBCU7A",5,0)
 ; Based on Reasonable Charges v2.0+, certain CPT codes should be reported in a certain way
"RTN","IBCU7A",6,0)
 ; this set of routines manipulates the bill's procedure to conform to the charges and proper billing
"RTN","IBCU7A",7,0)
 ;
"RTN","IBCU7A",8,0)
 ; criteria:  bill must be a Reasonable Charges bill
"RTN","IBCU7A",9,0)
 ;            charges must be v2.0 or greater
"RTN","IBCU7A",10,0)
 ;
"RTN","IBCU7A",11,0)
 ; called after bill created and poplulated to reset procedures
"RTN","IBCU7A",12,0)
 ;
"RTN","IBCU7A",13,0)
PROC(IBIFN,EDIT) ; manipulate bill procedures base on charges and the clinical data
"RTN","IBCU7A",14,0)
 ; EDIT is a flag for which manipulations should be completed, if true then only the charge significant manipulations are preformed
"RTN","IBCU7A",15,0)
 N IB0,IBBCT,IBPBTYP S EDIT=$G(EDIT)
"RTN","IBCU7A",16,0)
 I '$O(^DGCR(399,+$G(IBIFN),"CP",0)) Q
"RTN","IBCU7A",17,0)
 S IB0=$G(^DGCR(399,+IBIFN,0)) Q:IB0=""  S IBBCT=$P(IB0,U,27) Q:'IBBCT
"RTN","IBCU7A",18,0)
 I +$P($G(^DGCR(399,+IBIFN,"U")),U,2)<$$VERSDT^IBCRU8(2) Q
"RTN","IBCU7A",19,0)
 I '$$BILLRATE^IBCRU3($P(IB0,U,7),$P(IB0,U,5),$P(IB0,U,3),"RC") Q
"RTN","IBCU7A",20,0)
 ;
"RTN","IBCU7A",21,0)
 S IBPBTYP=$P($$RCDV^IBCRU8(+$P(IB0,U,22)),U,3) Q:'IBPBTYP
"RTN","IBCU7A",22,0)
 ;
"RTN","IBCU7A",23,0)
 I 'EDIT,IBPBTYP<3 D DELCLN(IBIFN) ; delete TC/26 component clinical procedures from bills
"RTN","IBCU7A",24,0)
 I 'EDIT,IBPBTYP<3 D ADDCLN(IBIFN) ; add 26 modified clinical procedures to bill
"RTN","IBCU7A",25,0)
 I 'EDIT,IBPBTYP<3 D DELTC(IBIFN) ; delete all TC modifiers from institutional bills
"RTN","IBCU7A",26,0)
 ;
"RTN","IBCU7A",27,0)
 D MOD26(IBIFN) ; if only professional charge is a 26 charge then add or delete modifier 26 on procedure
"RTN","IBCU7A",28,0)
 ;
"RTN","IBCU7A",29,0)
 D BNDL^IBCU7A1(IBIFN) ; split or combine bundled procedures
"RTN","IBCU7A",30,0)
 ;
"RTN","IBCU7A",31,0)
 K ^UTILITY($J)
"RTN","IBCU7A",32,0)
 Q
"RTN","IBCU7A",33,0)
 ;
"RTN","IBCU7A",34,0)
 ;
"RTN","IBCU7A",35,0)
 ;
"RTN","IBCU7A",36,0)
DELTC(IBIFN) ; delete TC modifier from all procedures on RC v2.0+ Institutional bills
"RTN","IBCU7A",37,0)
 N IB0,IBBCT,IBTC,IBBCPT,IBLN,IBEVDT,IBMODS,IBV2,IBCHANGE S IBCHANGE=0
"RTN","IBCU7A",38,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)) Q:IB0=""  S IBBCT=$P(IB0,U,27) I IBBCT'=1 Q
"RTN","IBCU7A",39,0)
 S IBTC=+$$MOD^ICPTMOD("TC","E") Q:IBTC<1  S IBV2=$$VERSDT^IBCRU8(2)
"RTN","IBCU7A",40,0)
 ;
"RTN","IBCU7A",41,0)
 S IBBCPT=0 F  S IBBCPT=$O(^DGCR(399,IBIFN,"CP",IBBCPT)) Q:'IBBCPT  D
"RTN","IBCU7A",42,0)
 . S IBLN=$G(^DGCR(399,IBIFN,"CP",IBBCPT,0)),IBEVDT=$P(IBLN,U,2) Q:IBLN'[";ICPT("
"RTN","IBCU7A",43,0)
 . I IBEVDT<IBV2 Q
"RTN","IBCU7A",44,0)
 . S IBMODS=","_$$GETMOD^IBEFUNC(IBIFN,IBBCPT)_","
"RTN","IBCU7A",45,0)
 . I IBMODS[IBTC D DELMOD^IBCU73(IBIFN,IBBCPT,IBTC) S IBCHANGE=IBCHANGE+1
"RTN","IBCU7A",46,0)
 I '$D(ZTQUEUED),'$G(IBAUTO),+IBCHANGE W !,"Modifier TC Deleted from all Procedures ("_IBCHANGE_")."
"RTN","IBCU7A",47,0)
 Q
"RTN","IBCU7A",48,0)
 ;
"RTN","IBCU7A",49,0)
DELCLN(IBIFN) ; remove clinical procedures from RC v2.0+ bills
"RTN","IBCU7A",50,0)
 ; - remove from institutional bill any procedures with a 26 in the clincal data
"RTN","IBCU7A",51,0)
 ; - remove from professional bill any procedures with a TC in the clinical data
"RTN","IBCU7A",52,0)
 ; to delete a procedure the outpatient encounter pointer must match the clinical encounter
"RTN","IBCU7A",53,0)
 ; (checks for non-modified procedure on bill in case modifier was manually removed)
"RTN","IBCU7A",54,0)
 ;
"RTN","IBCU7A",55,0)
 N IB0,IBBCT,IBMODE,IBMOD,IBX,IBLN,IBOE,IBCM,IBCPT,IBBCPT,IBLN1,IBFND,IBEND,IBV2,IBCHANGE S IBCHANGE=0
"RTN","IBCU7A",56,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)) Q:IB0=""  S IBBCT=$P(IB0,U,27) I 'IBBCT Q
"RTN","IBCU7A",57,0)
 S IBMODE=$S(IBBCT=1:26,IBBCT=2:"TC",1:"") Q:IBMODE=""  S IBV2=$$VERSDT^IBCRU8(2)
"RTN","IBCU7A",58,0)
 S IBMOD=+$$MOD^ICPTMOD(IBMODE,"E") Q:IBMOD<1
"RTN","IBCU7A",59,0)
 ;
"RTN","IBCU7A",60,0)
 D GETSD^IBCU7U(IBIFN)
"RTN","IBCU7A",61,0)
 S IBX=0 F  S IBX=$O(^UTILITY($J,"CPT-CNT",IBX)) Q:'IBX  D
"RTN","IBCU7A",62,0)
 . S IBLN=$G(^UTILITY($J,"CPT-CNT",IBX)),(IBEND,IBFND)=0
"RTN","IBCU7A",63,0)
 . I +$P(IBLN,U,2)<IBV2 Q
"RTN","IBCU7A",64,0)
 . S IBOE=+$P(IBLN,U,11),IBCM=","_$P(IBLN,U,10)_","
"RTN","IBCU7A",65,0)
 . ;
"RTN","IBCU7A",66,0)
 . I IBCM[(","_IBMOD_",") D
"RTN","IBCU7A",67,0)
 .. S IBCPT=+IBLN_";ICPT(",IBBCPT=0 F  S IBBCPT=$O(^DGCR(399,IBIFN,"CP","B",IBCPT,IBBCPT)) Q:'IBBCPT  D  Q:IBEND
"RTN","IBCU7A",68,0)
 ... S IBLN1=$G(^DGCR(399,IBIFN,"CP",IBBCPT,0))
"RTN","IBCU7A",69,0)
 ... I IBOE=$P(IBLN1,U,20) S IBFND=IBBCPT I $O(^DGCR(399,IBIFN,"CP",IBBCPT,"MOD","C",IBMOD,0)) S IBEND=1
"RTN","IBCU7A",70,0)
 .. I +IBFND,+$$DELCPT^IBCU7U(IBIFN,IBBCPT) S IBCHANGE=IBCHANGE+1
"RTN","IBCU7A",71,0)
 I '$D(ZTQUEUED),'$G(IBAUTO),+IBCHANGE W !,"Modifier "_IBMODE_" Procedures Deleted ("_IBCHANGE_")."
"RTN","IBCU7A",72,0)
 Q
"RTN","IBCU7A",73,0)
 ;
"RTN","IBCU7A",74,0)
ADDCLN(IBIFN) ; add 26 modified clinical procedures to RC v2.0+ bills
"RTN","IBCU7A",75,0)
 ; - add to professional bill any procedures with a 26 in the clinical data
"RTN","IBCU7A",76,0)
 ; to add the clinical procedure the bill must not already have that procedure for the date
"RTN","IBCU7A",77,0)
 ; (checks for non-modified procedure on bill in case modifier was manually removed)
"RTN","IBCU7A",78,0)
 ;
"RTN","IBCU7A",79,0)
 N IB0,IBBCT,IBMOD,IBX,IBLN,IBEVDT,IBCM,IBCPT,IBBCPT,IBLN1,IBFND,IBEND,IBV2,IBCHANGE S IBCHANGE=0
"RTN","IBCU7A",80,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)) Q:IB0=""  S IBBCT=$P(IB0,U,27) I IBBCT'=2 Q
"RTN","IBCU7A",81,0)
 S IBMOD=+$$MOD^ICPTMOD("26","E") Q:IBMOD<1  S IBV2=$$VERSDT^IBCRU8(2)
"RTN","IBCU7A",82,0)
 ;
"RTN","IBCU7A",83,0)
 D GETSD^IBCU7U(IBIFN)
"RTN","IBCU7A",84,0)
 S IBX=0 F  S IBX=$O(^UTILITY($J,"CPT-CNT",IBX)) Q:'IBX  D
"RTN","IBCU7A",85,0)
 . S IBLN=$G(^UTILITY($J,"CPT-CNT",IBX)),(IBEND,IBFND)=0
"RTN","IBCU7A",86,0)
 . S IBEVDT=+$P(IBLN,U,2),IBCM=","_$P(IBLN,U,10)_","
"RTN","IBCU7A",87,0)
 . I IBEVDT<IBV2 Q
"RTN","IBCU7A",88,0)
 . ;
"RTN","IBCU7A",89,0)
 . I IBCM[(","_IBMOD_",") D
"RTN","IBCU7A",90,0)
 .. S IBCPT=+IBLN_";ICPT(",IBBCPT=0 F  S IBBCPT=$O(^DGCR(399,IBIFN,"CP","B",IBCPT,IBBCPT)) Q:'IBBCPT  D  Q:IBEND
"RTN","IBCU7A",91,0)
 ... S IBLN1=$G(^DGCR(399,IBIFN,"CP",IBBCPT,0))
"RTN","IBCU7A",92,0)
 ... I IBEVDT=$P(IBLN1,U,2) S IBFND=IBBCPT I $O(^DGCR(399,IBIFN,"CP",IBBCPT,"MOD","C",IBMOD,0)) S IBEND=1
"RTN","IBCU7A",93,0)
 .. I 'IBFND,+$$ADDCPT^IBCU7U(IBIFN,IBLN) S IBCHANGE=IBCHANGE+1
"RTN","IBCU7A",94,0)
 I '$D(ZTQUEUED),'$G(IBAUTO),+IBCHANGE W !,"Modifier 26 Procedures Added ("_IBCHANGE_")."
"RTN","IBCU7A",95,0)
 Q
"RTN","IBCU7A",96,0)
 ;
"RTN","IBCU7A",97,0)
MOD26(IBIFN) ; add/delete modifier 26 to procedure if that is the only professional charge available
"RTN","IBCU7A",98,0)
 ; added on professional bill, deleted from institutional bill
"RTN","IBCU7A",99,0)
 N IB0,IBBCT,IB26,IBBCPT,IBLN,IBEVDT,IBMODS,IBV2,IBCHANGE,IBCHGS S IBCHANGE=0
"RTN","IBCU7A",100,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)) Q:IB0=""  S IBBCT=$P(IB0,U,27) I 'IBBCT Q
"RTN","IBCU7A",101,0)
 S IB26=+$$MOD^ICPTMOD("26","E") Q:IB26<1  S IBV2=$$VERSDT^IBCRU8(2)
"RTN","IBCU7A",102,0)
 ;
"RTN","IBCU7A",103,0)
 S IBBCPT=0 F  S IBBCPT=$O(^DGCR(399,IBIFN,"CP",IBBCPT)) Q:'IBBCPT  D
"RTN","IBCU7A",104,0)
 . S IBLN=$G(^DGCR(399,IBIFN,"CP",IBBCPT,0)),IBEVDT=$P(IBLN,U,2) Q:IBLN'[";ICPT("
"RTN","IBCU7A",105,0)
 . I IBEVDT<IBV2 Q
"RTN","IBCU7A",106,0)
 . S IBMODS=","_$$GETMOD^IBEFUNC(IBIFN,IBBCPT)_","
"RTN","IBCU7A",107,0)
 . ;
"RTN","IBCU7A",108,0)
 . S IBCHGS=$$CHGMOD^IBCRCU1(IBIFN,+IBLN,IBEVDT,2) I (+IBCHGS'=1)!(+$P(IBCHGS,":",3)'=IB26) Q
"RTN","IBCU7A",109,0)
 . ;
"RTN","IBCU7A",110,0)
 . I IBBCT=1,IBMODS[IB26 D DELMOD^IBCU73(IBIFN,IBBCPT,IB26) S IBCHANGE=IBCHANGE+1
"RTN","IBCU7A",111,0)
 . I IBBCT=2,IBMODS'[IB26 D ADDMOD^IBCU73(IBIFN,IBBCPT,IB26) S IBCHANGE=IBCHANGE+1
"RTN","IBCU7A",112,0)
 ;
"RTN","IBCU7A",113,0)
 I '$D(ZTQUEUED),'$G(IBAUTO),+IBCHANGE W !,"Modifier 26 "_$S(IBBCT=1:"Deleted from",1:"Added to")_" Procedures ("_IBCHANGE_")."
"RTN","IBCU7A",114,0)
 Q
"RTN","IBCU7A1")
0^64^B18275811
"RTN","IBCU7A1",1,0)
IBCU7A1 ;ALB/ARH - BILL PROCEDURE MANIPULATIONS (BUNDLED) ; 10-OCT-03
"RTN","IBCU7A1",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBCU7A1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCU7A1",4,0)
 ;
"RTN","IBCU7A1",5,0)
 ;
"RTN","IBCU7A1",6,0)
BNDL(IBIFN) ; manipulate a bill's CPT codes, replace bundled codes
"RTN","IBCU7A1",7,0)
 ; on facility and profesional bills global codes should be billed using their components
"RTN","IBCU7A1",8,0)
 ; on freestanding bills component codes should be billed as global
"RTN","IBCU7A1",9,0)
 ; - on facility bill, if a global code is found in the clinical data and on the bill then 
"RTN","IBCU7A1",10,0)
 ;   replace it on the bill with the institutional components
"RTN","IBCU7A1",11,0)
 ; - on professional bill, if the global code is found in the clinical data and the institutional components
"RTN","IBCU7A1",12,0)
 ;   are found on the bill then replace the institutional components with the professional components
"RTN","IBCU7A1",13,0)
 ; - on a freestanding bill if all institutional and professional components are found then
"RTN","IBCU7A1",14,0)
 ;   replace them with the global code
"RTN","IBCU7A1",15,0)
 ; maximum of 10 is insurance against infinite loops
"RTN","IBCU7A1",16,0)
 N IB0,IBCT,IBDVTY,IBTYPE,IBI,IBJ,IBLN,IBGLB,IBNLN,IBNEW,IBDEL,IBRPL,IBX,IBMSG,IBCHANGE S IBCHANGE=0
"RTN","IBCU7A1",17,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)) Q:IB0=""
"RTN","IBCU7A1",18,0)
 S IBCT=$P(IB0,U,27) Q:'IBCT  S IBDVTY=$P($$RCDV^IBCRU8($P(IB0,U,22)),U,3)
"RTN","IBCU7A1",19,0)
 S IBTYPE=$S(IBDVTY=3:3,1:+IBCT)
"RTN","IBCU7A1",20,0)
 ;
"RTN","IBCU7A1",21,0)
 I +$O(^DGCR(399,+$G(IBIFN),"CP","B","94017;ICPT("),-1)<93000 Q  ; none of the bundled codes on bill
"RTN","IBCU7A1",22,0)
 ;
"RTN","IBCU7A1",23,0)
 I IBDVTY'=3 D GETSD^IBCU7U(IBIFN) ; for provider based sites global charge should be in clincal data
"RTN","IBCU7A1",24,0)
 ;
"RTN","IBCU7A1",25,0)
 ; loop through list of bundled procedures and find any on bill
"RTN","IBCU7A1",26,0)
 F IBI=1:1 S IBLN=$P($T(IPBI+IBI),";;",2) Q:IBLN=""  D
"RTN","IBCU7A1",27,0)
 . S IBGLB=$P(IBLN,":",1),IBCHANGE=0
"RTN","IBCU7A1",28,0)
 . ;
"RTN","IBCU7A1",29,0)
 . S IBNLN=$$IPB(IBLN,IBTYPE) Q:'IBNLN  S IBNEW=$P(IBNLN,":",2),IBDEL=$P(IBNLN,":",1)
"RTN","IBCU7A1",30,0)
 . ;
"RTN","IBCU7A1",31,0)
 . I IBDVTY'=3,'$D(^UTILITY($J,"CPT-CLN",+IBGLB)) Q
"RTN","IBCU7A1",32,0)
 . ;
"RTN","IBCU7A1",33,0)
 . ; search the bill for the list of procedures to be replaced
"RTN","IBCU7A1",34,0)
 . F IBJ=1:1 S IBRPL=$$FND(IBIFN,IBDEL) Q:'IBRPL  D  Q:IBJ>10
"RTN","IBCU7A1",35,0)
 .. ;
"RTN","IBCU7A1",36,0)
 .. I IBDVTY'=3,'$D(^UTILITY($J,"CPT-CLN",+IBGLB,+IBRPL)) Q
"RTN","IBCU7A1",37,0)
 .. S IBRPL=$P(IBRPL,U,2,999) I $L(IBRPL,U)'=$L(IBDEL,U) Q
"RTN","IBCU7A1",38,0)
 .. ;
"RTN","IBCU7A1",39,0)
 .. I +$$RPL(IBIFN,IBNEW,IBRPL) S IBCHANGE=1 ; replace procedures
"RTN","IBCU7A1",40,0)
 . ;
"RTN","IBCU7A1",41,0)
 . I +IBCHANGE S IBMSG(IBI)=$TR(IBDEL,"^",",")_" replaced by "_$TR(IBNEW,"^",",")
"RTN","IBCU7A1",42,0)
 ;
"RTN","IBCU7A1",43,0)
 I '$D(ZTQUEUED),'$G(IBAUTO),+$O(IBMSG(0)) S IBI=0 F  S IBI=$O(IBMSG(IBI)) Q:'IBI  W !,IBMSG(IBI)
"RTN","IBCU7A1",44,0)
 Q
"RTN","IBCU7A1",45,0)
 ;
"RTN","IBCU7A1",46,0)
RPL(IBIFN,NEWCPTS,OLDLIST) ; replace procedures on the bill
"RTN","IBCU7A1",47,0)
 ; Input:  NEWCPTS - list of CPT codes to add to the bill
"RTN","IBCU7A1",48,0)
 ;         OLDLIST - list of procedure ifn's on the bill to be replaced
"RTN","IBCU7A1",49,0)
 ; Output: returns true if changes made
"RTN","IBCU7A1",50,0)
 ; the list of new and replaced may not be the same length
"RTN","IBCU7A1",51,0)
 ; - if more CPT's to be added than exist then the first existing procedure is copied for the new CPT
"RTN","IBCU7A1",52,0)
 ; - if fewer CPT's to be added than exist then the extra entries on the bill are deleted
"RTN","IBCU7A1",53,0)
 N IBJ,IBFFN,IBRFN,IBNCPT,IBFND S IBFND=0
"RTN","IBCU7A1",54,0)
 ;
"RTN","IBCU7A1",55,0)
 S NEWCPTS=$G(NEWCPTS),OLDLIST=$G(OLDLIST),IBFFN=+OLDLIST
"RTN","IBCU7A1",56,0)
 ;
"RTN","IBCU7A1",57,0)
 F IBJ=1:1 S IBRFN=$P(OLDLIST,U,IBJ),IBNCPT=$P(NEWCPTS,U,IBJ) Q:('IBRFN)&('IBNCPT)  D  Q:'IBFND
"RTN","IBCU7A1",58,0)
 . I +IBRFN,'IBNCPT S IBFND=$$DELCPT^IBCU7U(IBIFN,IBRFN) Q
"RTN","IBCU7A1",59,0)
 . I 'IBRFN,+IBNCPT S IBFND=$$COPYCPT^IBCU7U(IBIFN,IBFFN,IBNCPT) Q
"RTN","IBCU7A1",60,0)
 . I +IBRFN,+IBNCPT S IBFND=$$EDITCPT^IBCU7U(IBIFN,IBRFN,IBNCPT)
"RTN","IBCU7A1",61,0)
 ;
"RTN","IBCU7A1",62,0)
 Q IBFND
"RTN","IBCU7A1",63,0)
 ;
"RTN","IBCU7A1",64,0)
FND(IBIFN,LIST) ; find first set of the procedures on the bill to be replaced
"RTN","IBCU7A1",65,0)
 ; if all found then returns procedure date followed by 'CP' ifn list
"RTN","IBCU7A1",66,0)
 ; Input:  list of CPT's to be replaced separated by '^', internal format
"RTN","IBCU7A1",67,0)
 ; Output: procedure date ^ ifn of procedures in bill CP multiple
"RTN","IBCU7A1",68,0)
 N IBJ,IBC1,IBC1N,IBC1D,IBC2,IBC2N,IBC2D,IBFND,IBNLIST S (IBFND,IBNLIST)=0 I '$G(LIST) G FNDQ
"RTN","IBCU7A1",69,0)
 ;
"RTN","IBCU7A1",70,0)
 ; start with the first procedure to be replaced if it is on the bill then search for the rest on same date
"RTN","IBCU7A1",71,0)
 S IBC1=$P(LIST,U,1)
"RTN","IBCU7A1",72,0)
 S IBC1N=0 F  S IBC1N=$O(^DGCR(399,+$G(IBIFN),"CP","B",IBC1_";ICPT(",IBC1N)) Q:'IBC1N  D  Q:IBFND
"RTN","IBCU7A1",73,0)
 . S IBC1D=$P($G(^DGCR(399,IBIFN,"CP",IBC1N,0)),U,2)
"RTN","IBCU7A1",74,0)
 . S IBFND=1,IBNLIST=IBC1D_U_IBC1N
"RTN","IBCU7A1",75,0)
 . ;
"RTN","IBCU7A1",76,0)
 . ; find other procedures to be replaced for same date
"RTN","IBCU7A1",77,0)
 . F IBJ=2:1 S IBC2=$P(LIST,U,IBJ) Q:'IBC2  S IBFND=0 D  Q:'IBFND
"RTN","IBCU7A1",78,0)
 .. S IBC2N=0 F  S IBC2N=$O(^DGCR(399,IBIFN,"CP","B",IBC2_";ICPT(",IBC2N)) Q:'IBC2N  D  Q:IBFND
"RTN","IBCU7A1",79,0)
 ... S IBC2D=$P($G(^DGCR(399,IBIFN,"CP",IBC2N,0)),U,2) I IBC1D'=IBC2D S IBFND=0 Q
"RTN","IBCU7A1",80,0)
 ... S IBFND=1,IBNLIST=IBNLIST_U_IBC2N
"RTN","IBCU7A1",81,0)
 . ;
"RTN","IBCU7A1",82,0)
 . I 'IBFND S IBNLIST=0
"RTN","IBCU7A1",83,0)
 ;
"RTN","IBCU7A1",84,0)
FNDQ Q IBNLIST
"RTN","IBCU7A1",85,0)
 ;
"RTN","IBCU7A1",86,0)
CHKIPB(CPT,TYPE) ; return procedures that may replace procedure passed in
"RTN","IBCU7A1",87,0)
 ; Input:  TYPE - 1 for institutional, 2 for professional, 3 for Non-Provider Based
"RTN","IBCU7A1",88,0)
 ; Output: Procedures to be replaced ':' Procedures they are replaced with
"RTN","IBCU7A1",89,0)
 N IBX,IBI,IBLN,IBRPL S IBX="",CPT=$G(CPT),TYPE=+$G(TYPE)
"RTN","IBCU7A1",90,0)
 I +TYPE,CPT>92999,CPT<94017 F IBI=1:1 S IBLN=$P($T(IPBI+IBI),";;",2) Q:IBLN=""  D  Q:+IBX
"RTN","IBCU7A1",91,0)
 . S IBRPL=$$IPB(IBLN,TYPE) I $P(IBRPL,":",1)[CPT S IBX=IBRPL
"RTN","IBCU7A1",92,0)
 Q IBX
"RTN","IBCU7A1",93,0)
 ;
"RTN","IBCU7A1",94,0)
 ;
"RTN","IBCU7A1",95,0)
IPB(LINE,TYPE) ; return procedures to be replaced and those they are replaced by for the type of bill
"RTN","IBCU7A1",96,0)
 ; Input:  LINE - line of bundled procedures from IPBI
"RTN","IBCU7A1",97,0)
 ;         TYPE - 1 for institutional, 2 for professional, 3 for Non-Provider Based
"RTN","IBCU7A1",98,0)
 ; Output: Procedures to be replaced ':' Procedures they are replaced with
"RTN","IBCU7A1",99,0)
 ; - institutional type the global is replaced by the technical componentes
"RTN","IBCU7A1",100,0)
 ; - professional type: the institutional components are replaced by the professional components
"RTN","IBCU7A1",101,0)
 ; - non-provider based: the institutional and professional components are preplaced by the global
"RTN","IBCU7A1",102,0)
 ;
"RTN","IBCU7A1",103,0)
 N IBNEW,IBDEL,IBX S (IBX,IBDEL,IBNEW)="",TYPE=$G(TYPE),LINE=$G(LINE)
"RTN","IBCU7A1",104,0)
 I TYPE=1 S IBNEW=$P(LINE,":",2),IBDEL=$P(LINE,":",1)
"RTN","IBCU7A1",105,0)
 I TYPE=2 S IBNEW=$P(LINE,":",3),IBDEL=$P(LINE,":",2)
"RTN","IBCU7A1",106,0)
 I TYPE=3 S IBNEW=$P(LINE,":",1),IBDEL=$P(LINE,":",2)_U_$P(LINE,":",3)
"RTN","IBCU7A1",107,0)
 S IBX=IBDEL_":"_IBNEW
"RTN","IBCU7A1",108,0)
 Q IBX
"RTN","IBCU7A1",109,0)
 ;
"RTN","IBCU7A1",110,0)
IPBI ; Facility Provider Based Replace Global by Technical Component: global:technical:professional
"RTN","IBCU7A1",111,0)
 ;;93000:93005:93010
"RTN","IBCU7A1",112,0)
 ;;93015:93017:93016^93018
"RTN","IBCU7A1",113,0)
 ;;93040:93041:93042
"RTN","IBCU7A1",114,0)
 ;;93224:93225^93226:93227
"RTN","IBCU7A1",115,0)
 ;;93230:93231^93232:93233
"RTN","IBCU7A1",116,0)
 ;;93235:93236:93237
"RTN","IBCU7A1",117,0)
 ;;93268:93270^93271:93272
"RTN","IBCU7A1",118,0)
 ;;93720:93721:93722
"RTN","IBCU7A1",119,0)
 ;;93784:93788:93790
"RTN","IBCU7A1",120,0)
 ;;94014:94015:94016
"RTN","IBCU7A1",121,0)
 ;;
"RTN","IBCU7U")
0^57^B14094757
"RTN","IBCU7U",1,0)
IBCU7U ;ALB/ARH - BILL PROCEDURE UTILITIES ; 10-OCT-03
"RTN","IBCU7U",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBCU7U",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCU7U",4,0)
 ;
"RTN","IBCU7U",5,0)
 ; basic bill procedure utilities
"RTN","IBCU7U",6,0)
 ;
"RTN","IBCU7U",7,0)
DELCPT(IBIFN,OLDDA) ; delete a CPT code from a bill
"RTN","IBCU7U",8,0)
 ; Input: OLDDA  = ifn of cpt in bill cpt multiple to be deleted
"RTN","IBCU7U",9,0)
 N DA,DIK,DIC,DIE,X,Y,IBFND S IBFND=0,DA(1)=+$G(IBIFN),DA=+$G(OLDDA)
"RTN","IBCU7U",10,0)
 I $D(^DGCR(399,DA(1),"CP",DA,0)) S DIK="^DGCR(399,"_DA(1)_",""CP""," D ^DIK S IBFND=1
"RTN","IBCU7U",11,0)
 Q IBFND
"RTN","IBCU7U",12,0)
 ;
"RTN","IBCU7U",13,0)
EDITCPT(IBIFN,OLDDA,NEWCPT) ; replace a CPT code on the bill with another CPT code
"RTN","IBCU7U",14,0)
 ; Input: OLDDA  = ifn of cpt in bill cpt multiple to be replaced
"RTN","IBCU7U",15,0)
 ;        NEWCPT = ifn of cpt code to be added
"RTN","IBCU7U",16,0)
 N DA,DR,DIE,DIC,IBFND,X,Y S IBFND=0,DA(1)=+$G(IBIFN),DA=+$G(OLDDA),NEWCPT=+$G(NEWCPT)
"RTN","IBCU7U",17,0)
 I NEWCPT,$D(^DGCR(399,DA(1),"CP",DA,0)) S DIE="^DGCR(399,"_DA(1)_",""CP"",",DR=".01///`"_NEWCPT D ^DIE S IBFND=1
"RTN","IBCU7U",18,0)
 Q IBFND
"RTN","IBCU7U",19,0)
 ;
"RTN","IBCU7U",20,0)
COPYCPT(IBIFN,OLDDA,NEWCPT) ; add a new CPT and populate date fields with data from an existing bill cpt
"RTN","IBCU7U",21,0)
 ; Input: OLDDA  = ifn of cpt in bill cpt multiple to be copied
"RTN","IBCU7U",22,0)
 ;        NEWCPT = ifn of cpt code to be added
"RTN","IBCU7U",23,0)
 N DLAYGO,DIC,DIE,DA,DR,DD,DO,IBNEWDA,IBODA,IBNDA,IBXDA,IBSFILE,IBX,IBY,IBOLD,IBNEW,IBFND,X,Y S IBFND=0
"RTN","IBCU7U",24,0)
 ;
"RTN","IBCU7U",25,0)
 I '$D(^DGCR(399,+$G(IBIFN),"CP",+$G(OLDDA),0)) G COPYCPQ
"RTN","IBCU7U",26,0)
 I '$G(NEWCPT) G COPYCPQ
"RTN","IBCU7U",27,0)
 ;
"RTN","IBCU7U",28,0)
 ; add new procedure entry to bill
"RTN","IBCU7U",29,0)
 S DLAYGO=399,DA(1)=IBIFN,DIC="^DGCR(399,"_DA(1)_",""CP"",",DIC(0)="L",X=+NEWCPT_";ICPT(" K DD,DO D FILE^DICN K DO,DD,DIC,DIE
"RTN","IBCU7U",30,0)
 S (DA,IBNEWDA,IBFND)=+Y I IBNEWDA<1 S IBFND=0 G COPYCPQ
"RTN","IBCU7U",31,0)
 ;
"RTN","IBCU7U",32,0)
 ; copy data from existing procedure to new procedure on bill
"RTN","IBCU7U",33,0)
 S IBODA=OLDDA_","_IBIFN_","
"RTN","IBCU7U",34,0)
 S IBNDA=IBNEWDA_","_IBIFN_","
"RTN","IBCU7U",35,0)
 D GETS^DIQ(399.0304,IBODA,"*","IN","IBOLD")
"RTN","IBCU7U",36,0)
 S IBSFILE=0 F  S IBSFILE=$O(IBOLD(IBSFILE)) Q:'IBSFILE  D
"RTN","IBCU7U",37,0)
 . S IBXDA="" F  S IBXDA=$O(IBOLD(IBSFILE,IBXDA)) Q:IBXDA=""  D
"RTN","IBCU7U",38,0)
 .. S IBX=0 F  S IBX=$O(IBOLD(IBSFILE,IBXDA,IBX)) Q:'IBX  D
"RTN","IBCU7U",39,0)
 ... I IBXDA=IBODA,",.01,2,3,4,7,14,20,"[(","_IBX_",") Q
"RTN","IBCU7U",40,0)
 ... S IBNEW(IBSFILE,IBNDA,IBX)=IBOLD(IBSFILE,IBXDA,IBX,"I")
"RTN","IBCU7U",41,0)
 I $O(IBNEW(0)) D FILE^DIE("","IBNEW") K DA,DR,DA,DO,DIE,DIC
"RTN","IBCU7U",42,0)
 ;
"RTN","IBCU7U",43,0)
 ; copy modifiers from existing procedure to new procedure on bill
"RTN","IBCU7U",44,0)
 S IBX=0 F  S IBX=$O(^DGCR(399,IBIFN,"CP",OLDDA,"MOD",IBX)) Q:'IBX  D
"RTN","IBCU7U",45,0)
 . S IBY=$G(^DGCR(399,IBIFN,"CP",OLDDA,"MOD",IBX,0)) Q:IBY=""
"RTN","IBCU7U",46,0)
 . S:'$D(^DGCR(399,IBIFN,"CP",IBNEWDA,"MOD")) DIC("P")=$$GETSPEC^IBEFUNC(399.0304,16)
"RTN","IBCU7U",47,0)
 . S DIC(0)="L",DIC="^DGCR(399,"_IBIFN_",""CP"","_+IBNEWDA_",""MOD"",",DLAYGO=399.30416
"RTN","IBCU7U",48,0)
 . S DA(2)=IBIFN,DA(1)=IBNEWDA,X=+IBY,DIC("DR")=".02////"_$P(IBY,U,2) D FILE^DICN K DIC,DO,DD
"RTN","IBCU7U",49,0)
 ;
"RTN","IBCU7U",50,0)
COPYCPQ Q IBFND
"RTN","IBCU7U",51,0)
 ;
"RTN","IBCU7U",52,0)
ADDCPT(IBIFN,SDLN) ; add a new CPT code to a bill and populate it's data based on clinical data
"RTN","IBCU7U",53,0)
 ; Input: SDLN - data line from ^UTILITY($J,"CPT-CNT" created in VST^IBCCPT
"RTN","IBCU7U",54,0)
 ; ^utility($j,cpt-cnt,count)=code^date^on bill^is BASC^divis^nb^nb mess^provider^clinic^mod,mod^Opt Enc Ptr
"RTN","IBCU7U",55,0)
 N DLAYGO,DIC,DIE,DA,DR,DD,DO,DINUM,IBNEWDA,IBFND,X,Y S IBFND=0
"RTN","IBCU7U",56,0)
 ;
"RTN","IBCU7U",57,0)
 I '$D(^DGCR(399,+$G(IBIFN),0)) G ADDCPTQ
"RTN","IBCU7U",58,0)
 I '$G(SDLN) G ADDCPTQ
"RTN","IBCU7U",59,0)
 I +$P(SDLN,U,6) G ADDCPTQ
"RTN","IBCU7U",60,0)
 ;
"RTN","IBCU7U",61,0)
 I '$D(^DGCR(399,IBIFN,"CP")) S DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCU7U",62,0)
 S DLAYGO=399,DA(1)=IBIFN,DIC="^DGCR(399,"_DA(1)_",""CP"",",DIC(0)="L",X=+SDLN_";ICPT(" K DD,DO D FILE^DICN K DO,DD,DIC("P")
"RTN","IBCU7U",63,0)
 S (DA,IBNEWDA,IBFND)=+Y I IBNEWDA<1 S IBFND=0 G ADDCPTQ
"RTN","IBCU7U",64,0)
 ;
"RTN","IBCU7U",65,0)
 S DR="1////"_$P(SDLN,U,2)_$S(+$P(SDLN,U,8):";18////"_+$P(SDLN,U,8),1:"")
"RTN","IBCU7U",66,0)
 S DR=DR_$S(+$P(SDLN,U,9):";6////"_+$P(SDLN,U,9),1:"")_$S(+$P(SDLN,U,5):";5////"_+$P(SDLN,U,5),1:"")
"RTN","IBCU7U",67,0)
 S DR=DR_$S(+$P(SDLN,U,11):";20////"_+$P(SDLN,U,11),1:"")
"RTN","IBCU7U",68,0)
 S DIE=DIC,DA=+IBNEWDA D ^DIE K DIE,DIC,DA,DINUM,DO,DD
"RTN","IBCU7U",69,0)
 ;
"RTN","IBCU7U",70,0)
 I $P(SDLN,U,10) D ADDMOD^IBCCPT(IBIFN,IBNEWDA,$P(SDLN,U,10)) ;Modifiers
"RTN","IBCU7U",71,0)
 ;
"RTN","IBCU7U",72,0)
ADDCPTQ Q IBFND
"RTN","IBCU7U",73,0)
 ;
"RTN","IBCU7U",74,0)
GETSD(IBIFN) ; get the procedures from the clinical data covered by the bill
"RTN","IBCU7U",75,0)
 ; Output: ^UTILITY($J,"CPT-CNT",X)= ... (from VST^IBCCPT)
"RTN","IBCU7U",76,0)
 ;         ^UTILITY($J,"CPT-CLN",CPT,EVDT)= ...
"RTN","IBCU7U",77,0)
 N SDCNT,SDQDATA,SDQUERY,V,X,IBQUERY,IBOPV1,IBOPV2,DGCNT,DFN,IBX,IBY K ^UTILITY($J)
"RTN","IBCU7U",78,0)
 S DFN=$P($G(^DGCR(399,+$G(IBIFN),0)),U,2) Q:'DFN
"RTN","IBCU7U",79,0)
 D VST^IBCCPT(.IBQUERY)
"RTN","IBCU7U",80,0)
 S IBX=0 F  S IBX=$O(^UTILITY($J,"CPT-CNT",IBX)) Q:'IBX  D
"RTN","IBCU7U",81,0)
 . S IBY=^UTILITY($J,"CPT-CNT",IBX)
"RTN","IBCU7U",82,0)
 . S ^UTILITY($J,"CPT-CLN",$P(IBY,U,1),$P(IBY,U,2))=IBY
"RTN","IBCU7U",83,0)
 Q
"RTN","IBYPSA")
0^50^B22300550
"RTN","IBYPSA",1,0)
IBYPSA ;ALB/ARH - IB*2.0*245 POST INIT: REASONABLE CHARGES V2.0 ; 10-OCT-2003
"RTN","IBYPSA",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBYPSA",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBYPSA",4,0)
 ;
"RTN","IBYPSA",5,0)
 ;
"RTN","IBYPSA",6,0)
 Q
"RTN","IBYPSA",7,0)
 ;
"RTN","IBYPSA",8,0)
POST ;
"RTN","IBYPSA",9,0)
 N IBA
"RTN","IBYPSA",10,0)
 S IBA(1)="",IBA(2)="    Reasonable Charges v2.0 Post-Install .....",IBA(3)="" D MES^XPDUTL(.IBA) K IBA
"RTN","IBYPSA",11,0)
 ;
"RTN","IBYPSA",12,0)
 D RSINDT ; add Rate Schedule Inactive dates (363, .06)
"RTN","IBYPSA",13,0)
 ;
"RTN","IBYPSA",14,0)
 D UPDBR ; update Billing Rate Names for v2.0 (363.3)
"RTN","IBYPSA",15,0)
 ;
"RTN","IBYPSA",16,0)
 D ADDRB^IBYPSA1 ; add Billable Service  (399.1, .2)
"RTN","IBYPSA",17,0)
 D ADDBS^IBYPSA1 ; add Bedsections  (399.1,.12)
"RTN","IBYPSA",18,0)
 D ADDBI^IBYPSA1 ; add Billable Items   (363.21)
"RTN","IBYPSA",19,0)
 D ADDRS^IBYPSA1 ; add Rate Schedule   (363)
"RTN","IBYPSA",20,0)
 D ADDBR^IBYPSA1 ; add Billing Rates   (363.3)
"RTN","IBYPSA",21,0)
 ;
"RTN","IBYPSA",22,0)
 D SGBR ; add Billing Rates to Special Groups  (363.32,11,.01)
"RTN","IBYPSA",23,0)
 D RVACT ; activate 3 Revenue Codes (399.2,2)
"RTN","IBYPSA",24,0)
 ;
"RTN","IBYPSA",25,0)
 D CHGINA^IBYPSA2("") ; inactivate all RC charges in #363.2
"RTN","IBYPSA",26,0)
 ;
"RTN","IBYPSA",27,0)
 S IBA(1)="",IBA(2)="    Reasonable Charges v2.0 Post-Install Complete",IBA(3)="" D MES^XPDUTL(.IBA) K IBA
"RTN","IBYPSA",28,0)
 ;
"RTN","IBYPSA",29,0)
 Q
"RTN","IBYPSA",30,0)
 ;
"RTN","IBYPSA",31,0)
 ;
"RTN","IBYPSA",32,0)
RSINDT ; add an inactive date to rate schedules if this is the first time the load is completed (363, .06)
"RTN","IBYPSA",33,0)
 ; Reimbursable Ins, No Fault, and Workers Comp only
"RTN","IBYPSA",34,0)
 ; if test account use 9/30/98, if production account use 8/31/99
"RTN","IBYPSA",35,0)
 N IBA,IBRSFN,IBRS0,IBRSN,IBCNT,IBSTDT,DD,DO,DIC,DIE,DA,DR,X,Y S IBSTDT="",IBCNT=0
"RTN","IBYPSA",36,0)
 ;
"RTN","IBYPSA",37,0)
 I $O(^IBE(363.3,"B","RC PHYSICIAN MN",0)) G RSINQ
"RTN","IBYPSA",38,0)
 ;
"RTN","IBYPSA",39,0)
 S IBSTDT=$$VERSEDT^IBCRHBRV(1.4) ;I '$$PROD^IBCORC S IBSTDT=2980930
"RTN","IBYPSA",40,0)
 ;
"RTN","IBYPSA",41,0)
 S IBRSFN=0 F  S IBRSFN=$O(^IBE(363,IBRSFN)) Q:'IBRSFN  D
"RTN","IBYPSA",42,0)
 . S IBRS0=$G(^IBE(363,IBRSFN,0)),IBRSN=$E(IBRS0,1,3)
"RTN","IBYPSA",43,0)
 . I IBRSN'="RI-",IBRSN'="NF-",IBRSN'="WC-" Q
"RTN","IBYPSA",44,0)
 . I $P(IBRS0,U,5)'<IBSTDT Q
"RTN","IBYPSA",45,0)
 . I $P(IBRS0,U,6)'="" Q
"RTN","IBYPSA",46,0)
 . ;
"RTN","IBYPSA",47,0)
 . S IBCNT=IBCNT+1,DR=".06////"_IBSTDT,DIE="^IBE(363,",DA=+IBRSFN D ^DIE K DIE,DA,DR,X,Y
"RTN","IBYPSA",48,0)
 ;
"RTN","IBYPSA",49,0)
RSINQ S IBA(1)="      >> "_IBCNT_" Rate Schedules inactivated on "_$E(IBSTDT,4,5)_"/"_$E(IBSTDT,6,7)_"/"_$E(IBSTDT,2,3)_" (363)..."
"RTN","IBYPSA",50,0)
 D MES^XPDUTL(.IBA)
"RTN","IBYPSA",51,0)
 Q
"RTN","IBYPSA",52,0)
 ;
"RTN","IBYPSA",53,0)
UPDBR ; Update Billing Rate Names
"RTN","IBYPSA",54,0)
 N IBA,IBDA,IBCNT,DD,DO,DINUM,DLAYGO,DIC,DIE,DA,DR,X,Y S IBCNT=0
"RTN","IBYPSA",55,0)
 ;
"RTN","IBYPSA",56,0)
 S DA=$O(^IBE(363.3,"B","RC OUTPATIENT FACILITY","")) I +DA D
"RTN","IBYPSA",57,0)
 . S DR=".01///RC FACILITY PR;.02///RC F/PR" S DIE="^IBE(363.3," D ^DIE K DIE,DA,DR,X,Y
"RTN","IBYPSA",58,0)
 . D MSG("             RC OUTPATIENT FACILITY to RC FACILITY PR") S IBCNT=IBCNT+1
"RTN","IBYPSA",59,0)
 ;
"RTN","IBYPSA",60,0)
 S DA=$O(^IBE(363.3,"B","RC PHYSICIAN","")) I +DA D
"RTN","IBYPSA",61,0)
 . S DR=".01///RC PHYSICIAN PR;.02///RC P/PR" S DIE="^IBE(363.3," D ^DIE K DIE,DA,DR,X,Y
"RTN","IBYPSA",62,0)
 . D MSG("             RC PHYSICIAN to RC PHYSICIAN PR") S IBCNT=IBCNT+1
"RTN","IBYPSA",63,0)
 ;
"RTN","IBYPSA",64,0)
 S IBA(1)="      >> "_IBCNT_" Billing Rate Names Updated (363.3)..."
"RTN","IBYPSA",65,0)
 D MES^XPDUTL(.IBA)
"RTN","IBYPSA",66,0)
 Q
"RTN","IBYPSA",67,0)
 ;
"RTN","IBYPSA",68,0)
SGBR ; add new Billing Rates to the Special Groups (363.32,11,.01)
"RTN","IBYPSA",69,0)
 N IBA,IBSET,IBSG,IBSGFN,IBBR,IBBRFN,IBCNT,DINUM,DD,DO,DLAYGO,DIC,DIE,DA,DR,X,Y,IBBRNM S IBCNT=0
"RTN","IBYPSA",70,0)
 ;
"RTN","IBYPSA",71,0)
 F IBSET="STANDARD RVCD LINKS^RC FACILITY","STANDARD RVCD LINKS^RC PHYSICIAN","RC PROVIDER DISCOUNTS^RC PHYSICIAN" D
"RTN","IBYPSA",72,0)
 . S IBSG=$P(IBSET,U,1) Q:IBSG=""  S IBSGFN=$O(^IBE(363.32,"B",IBSG,0)) Q:'IBSGFN
"RTN","IBYPSA",73,0)
 . S IBBR=$P(IBSET,U,2) Q:IBBR=""
"RTN","IBYPSA",74,0)
 . ;
"RTN","IBYPSA",75,0)
 . S IBBRNM=IBBR F  S IBBRNM=$O(^IBE(363.3,"B",IBBRNM)) Q:IBBRNM'[IBBR  D
"RTN","IBYPSA",76,0)
 .. ;
"RTN","IBYPSA",77,0)
 .. S IBBRFN=$O(^IBE(363.3,"B",IBBRNM,0)) Q:'IBBRFN
"RTN","IBYPSA",78,0)
 .. I +$P($G(^IBE(363.3,+IBBRFN,0)),U,4)'=2 Q  ; cpt charges only
"RTN","IBYPSA",79,0)
 .. ;
"RTN","IBYPSA",80,0)
 .. I $O(^IBE(363.32,+IBSGFN,11,"B",+IBBRFN,0)) Q
"RTN","IBYPSA",81,0)
 .. ;
"RTN","IBYPSA",82,0)
 .. S DLAYGO=363.32,DA(1)=+IBSGFN,DIC="^IBE(363.32,"_DA(1)_",11,",DIC(0)="L",X=IBBRNM,DIC("P")="363.3211PA" D ^DIC K DIC,DIE S IBCNT=IBCNT+1
"RTN","IBYPSA",83,0)
 ;
"RTN","IBYPSA",84,0)
SGBRQ S IBA(1)="      >> "_IBCNT_" Billing Rates added to Special Groups (363.32)..."
"RTN","IBYPSA",85,0)
 D MES^XPDUTL(.IBA)
"RTN","IBYPSA",86,0)
 Q
"RTN","IBYPSA",87,0)
 ;
"RTN","IBYPSA",88,0)
RVACT ; activate (3) Revenue Codes exported in as defaults for new Charge Sets (399.2,2)
"RTN","IBYPSA",89,0)
 N IBA,IBLN,IBI,IBRVFN,IBACT,IBCNT,IBJ,DD,DO,DIC,DIE,DA,DR,X,Y S IBCNT=0,IBACT=""
"RTN","IBYPSA",90,0)
 ;
"RTN","IBYPSA",91,0)
 S IBLN=$P($T(RVF+1),";;",2)
"RTN","IBYPSA",92,0)
 ;
"RTN","IBYPSA",93,0)
 F IBI=1:1 S IBRVFN=$P(IBLN,",",IBI) Q:'IBRVFN  D
"RTN","IBYPSA",94,0)
 . ;
"RTN","IBYPSA",95,0)
 . I +$P($G(^DGCR(399.2,IBRVFN,0)),U,3) Q
"RTN","IBYPSA",96,0)
 . ;
"RTN","IBYPSA",97,0)
 . S IBACT=IBACT_IBRVFN_","
"RTN","IBYPSA",98,0)
 . S IBCNT=IBCNT+1,DR="2////1",DIE="^DGCR(399.2,",DA=+IBRVFN D ^DIE K DIE,DA,DR,X,Y
"RTN","IBYPSA",99,0)
 ;
"RTN","IBYPSA",100,0)
 I IBCNT>0 S IBJ=0 F IBI=1:15 S IBJ=IBJ+15 S IBLN=$P(IBACT,",",IBI,IBJ) Q:IBLN=""  D MSG("             "_IBLN)
"RTN","IBYPSA",101,0)
 ;
"RTN","IBYPSA",102,0)
RVAQ S IBA(1)="      >> "_IBCNT_" Revenue Codes activated (399.2)..."
"RTN","IBYPSA",103,0)
 D MES^XPDUTL(.IBA)
"RTN","IBYPSA",104,0)
 Q
"RTN","IBYPSA",105,0)
 ;
"RTN","IBYPSA",106,0)
MCCRUTL(X,P) ; returns IFN of item in 399.1 if Name is found and piece P is true
"RTN","IBYPSA",107,0)
 N IBX,IBY S IBY=""
"RTN","IBYPSA",108,0)
 I $G(X)'="" S IBX=0 F  S IBX=$O(^DGCR(399.1,"B",X,IBX)) Q:'IBX  I $P($G(^DGCR(399.1,IBX,0)),U,+$G(P)) S IBY=IBX
"RTN","IBYPSA",109,0)
 Q IBY
"RTN","IBYPSA",110,0)
 ;
"RTN","IBYPSA",111,0)
MSG(X) ;
"RTN","IBYPSA",112,0)
 N IBX S IBX=$O(IBA(999999),-1) S:'IBX IBX=1 S IBX=IBX+1
"RTN","IBYPSA",113,0)
 S IBA(IBX)=$G(X)
"RTN","IBYPSA",114,0)
 Q
"RTN","IBYPSA",115,0)
 ;
"RTN","IBYPSA",116,0)
RVF ;  Revenue Codes to (3) Activate (399.2,2)
"RTN","IBYPSA",117,0)
 ;;190,200,912,
"RTN","IBYPSA",118,0)
 ;;
"RTN","IBYPSA1")
0^51^B46054837
"RTN","IBYPSA1",1,0)
IBYPSA1 ;ALB/ARH - IB*2.0*245 POST INIT: REASONABLE CHARGES V2.0 CONT; 10-OCT-2003
"RTN","IBYPSA1",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBYPSA1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBYPSA1",4,0)
 ;
"RTN","IBYPSA1",5,0)
 ;
"RTN","IBYPSA1",6,0)
 Q
"RTN","IBYPSA1",7,0)
 ;
"RTN","IBYPSA1",8,0)
ADDRB ; Add Billable Service (399.1, .2=1)
"RTN","IBYPSA1",9,0)
 N IBA,IBCNT,IBI,IBLN,IBFN,IBX,DD,DO,DLAYGO,DIC,DIE,DA,DR,X,Y S IBCNT=0
"RTN","IBYPSA1",10,0)
 ;
"RTN","IBYPSA1",11,0)
 F IBI=1:1 S IBLN=$P($T(RBF+IBI),";;",2) Q:+IBLN!(IBLN="")  I $E(IBLN)?1A D
"RTN","IBYPSA1",12,0)
 . ;
"RTN","IBYPSA1",13,0)
 . I +$$MCCRUTL($P(IBLN,U,1),13) Q
"RTN","IBYPSA1",14,0)
 . ;
"RTN","IBYPSA1",15,0)
 . K DD,DO S DLAYGO=399.1,DIC="^DGCR(399.1,",DIC(0)="L",X=$P(IBLN,U,1) D FILE^DICN K DIC I Y<1 K X,Y Q
"RTN","IBYPSA1",16,0)
 . S IBFN=+Y,IBCNT=IBCNT+1
"RTN","IBYPSA1",17,0)
 . ;
"RTN","IBYPSA1",18,0)
 . S DR=".03////"_$P(IBLN,U,2)_";.2////"_1
"RTN","IBYPSA1",19,0)
 . S DIE="^DGCR(399.1,",DA=+IBFN D ^DIE K DIE,DA,DR,X,Y
"RTN","IBYPSA1",20,0)
 . ;
"RTN","IBYPSA1",21,0)
 . S IBA(IBCNT+1)="             "_$P(IBLN,U,1)
"RTN","IBYPSA1",22,0)
 ;
"RTN","IBYPSA1",23,0)
RBQ S IBA(1)="      >> "_IBCNT_" Billable Services added (399.1)..."
"RTN","IBYPSA1",24,0)
 D MES^XPDUTL(.IBA)
"RTN","IBYPSA1",25,0)
 Q
"RTN","IBYPSA1",26,0)
 ;
"RTN","IBYPSA1",27,0)
ADDBS ; Add Bedsection (399.1, .12=1)
"RTN","IBYPSA1",28,0)
 N IBA,IBCNT,IBI,IBLN,IBRB,IBFN,DD,DO,DLAYGO,DIC,DIE,DA,DR,X,Y S IBCNT=0
"RTN","IBYPSA1",29,0)
 ;
"RTN","IBYPSA1",30,0)
 F IBI=1:1 S IBLN=$P($T(BSF+IBI),";;",2) Q:+IBLN!(IBLN="")  I $E(IBLN)?1A D
"RTN","IBYPSA1",31,0)
 . ;
"RTN","IBYPSA1",32,0)
 . I +$$MCCRUTL($P(IBLN,U,1),5) Q
"RTN","IBYPSA1",33,0)
 . ;
"RTN","IBYPSA1",34,0)
 . S IBRB=$P(IBLN,U,3) I IBRB'="" S IBRB=$$MCCRUTL(IBRB,13) D  Q:'IBRB
"RTN","IBYPSA1",35,0)
 .. I 'IBRB D MSG("         *** Billable Service "_$P(IBLN,U,3)_" not defined, BS "_$P(IBLN,U,1)_" not created")
"RTN","IBYPSA1",36,0)
 . ;
"RTN","IBYPSA1",37,0)
 . K DD,DO S DLAYGO=399.1,DIC="^DGCR(399.1,",DIC(0)="L",X=$P(IBLN,U,1) D FILE^DICN K DIC I Y<1 K X,Y Q
"RTN","IBYPSA1",38,0)
 . S IBFN=+Y,IBCNT=IBCNT+1
"RTN","IBYPSA1",39,0)
 . ;
"RTN","IBYPSA1",40,0)
 . S DR=".03////"_$P(IBLN,U,2)_";.12////"_1 I +IBRB S DR=DR_";.25////"_IBRB
"RTN","IBYPSA1",41,0)
 . S DIE="^DGCR(399.1,",DA=+IBFN D ^DIE K DIE,DA,DR,X,Y
"RTN","IBYPSA1",42,0)
 . ;
"RTN","IBYPSA1",43,0)
 . S IBA(IBCNT+1)="             "_$P(IBLN,U,1)
"RTN","IBYPSA1",44,0)
 ;
"RTN","IBYPSA1",45,0)
BSQ S IBA(1)="      >> "_IBCNT_" Bedsection added (399.1)..."
"RTN","IBYPSA1",46,0)
 D MES^XPDUTL(.IBA)
"RTN","IBYPSA1",47,0)
 Q
"RTN","IBYPSA1",48,0)
 ;
"RTN","IBYPSA1",49,0)
ADDBI ; Add Billing Items (363.21)
"RTN","IBYPSA1",50,0)
 N IBA,IBCNT,IBI,IBLN,IBFN,IBX,DD,DO,DLAYGO,DIC,DIE,DA,DR,X,Y S IBCNT=0
"RTN","IBYPSA1",51,0)
 ;
"RTN","IBYPSA1",52,0)
 F IBI=1:1 S IBLN=$P($T(BIF+IBI),";;",2) Q:+IBLN!(IBLN="")  I $E(IBLN)?1A D
"RTN","IBYPSA1",53,0)
 . ;
"RTN","IBYPSA1",54,0)
 . S IBX=$O(^IBA(363.21,"B",$P(IBLN,U,1),0)) I +IBX,$P($G(^IBA(363.21,IBX,0)),U,2)=$P(IBLN,U,2) Q
"RTN","IBYPSA1",55,0)
 . ;
"RTN","IBYPSA1",56,0)
 . S DIC("DR")=".02////"_$P(IBLN,U,2)
"RTN","IBYPSA1",57,0)
 . K DD,DO S DLAYGO=363.21,DIC="^IBA(363.21,",DIC(0)="L",X=$P(IBLN,U,1) D FILE^DICN K DIC,DLAYGO I Y<1 K X,Y Q
"RTN","IBYPSA1",58,0)
 . S IBFN=+Y,IBCNT=IBCNT+1
"RTN","IBYPSA1",59,0)
 . ;
"RTN","IBYPSA1",60,0)
 . S IBA(IBCNT+1)="             "_$P(IBLN,U,1)
"RTN","IBYPSA1",61,0)
 ;
"RTN","IBYPSA1",62,0)
BIQ S IBA(1)="      >> "_IBCNT_" Billing Items added (363.21)..."
"RTN","IBYPSA1",63,0)
 D MES^XPDUTL(.IBA)
"RTN","IBYPSA1",64,0)
 Q
"RTN","IBYPSA1",65,0)
ADDBR ; Add Billing Rates (363.3)
"RTN","IBYPSA1",66,0)
 N IBA,IBCNT,IBI,IBJ,IBBR,IBLN,IBFN,DD,DO,DINUM,DLAYGO,DIC,DIE,DA,DR,X,Y S IBCNT=0
"RTN","IBYPSA1",67,0)
 ;
"RTN","IBYPSA1",68,0)
 F IBI=1:1 S IBLN=$P($T(BRF+IBI),";;",2) Q:+IBLN!(IBLN="")  I $E(IBLN)?1A D
"RTN","IBYPSA1",69,0)
 . ;
"RTN","IBYPSA1",70,0)
 . I $O(^IBE(363.3,"B",$P(IBLN,U,1),0)) Q
"RTN","IBYPSA1",71,0)
 . ;
"RTN","IBYPSA1",72,0)
 . F IBJ=1:1 S IBBR=$G(^IBE(363.3,IBJ,0)) I IBBR="" S DINUM=IBJ Q
"RTN","IBYPSA1",73,0)
 . ;
"RTN","IBYPSA1",74,0)
 . K DD,DO S DLAYGO=363.3,DIC="^IBE(363.3,",DIC(0)="L",X=$P(IBLN,U,1) D FILE^DICN K DIC I Y<1 K X,Y Q
"RTN","IBYPSA1",75,0)
 . S IBFN=+Y,IBCNT=IBCNT+1
"RTN","IBYPSA1",76,0)
 . ;
"RTN","IBYPSA1",77,0)
 . S DR=".02////"_$P(IBLN,U,2)_";.03////"_$P(IBLN,U,3)_";.04////"_$P(IBLN,U,4)_";.05////"_$P(IBLN,U,5)_";.06////"_$P(IBLN,U,6)
"RTN","IBYPSA1",78,0)
 . S DIE="^IBE(363.3,",DA=+IBFN D ^DIE K DIE,DA,DR,X,Y
"RTN","IBYPSA1",79,0)
 . ;
"RTN","IBYPSA1",80,0)
 . S IBA(IBCNT+1)="             "_$P(IBLN,U,1)
"RTN","IBYPSA1",81,0)
 ;
"RTN","IBYPSA1",82,0)
BRQ S IBA(1)="      >> "_IBCNT_" Billing Rates added (363.3)..."
"RTN","IBYPSA1",83,0)
 D MES^XPDUTL(.IBA)
"RTN","IBYPSA1",84,0)
 Q
"RTN","IBYPSA1",85,0)
 ;
"RTN","IBYPSA1",86,0)
ADDRS ; add Rate Schedules (363) for Reasonable Charges, if this is the first time the patch is installed
"RTN","IBYPSA1",87,0)
 ; (charge sets will be added when rates are uploaded)
"RTN","IBYPSA1",88,0)
 N IBA,IBCNT,IBI,IBLN,IBFN,IBRT,IBBS,IBJ,IBLNCS,IBCS,IBCSFN,IBSTDT,IBRS,DINUM,DD,DO,DLAYGO,DIC,DIE,DA,DR,X,Y S IBSTDT="",IBCNT=0
"RTN","IBYPSA1",89,0)
 ;
"RTN","IBYPSA1",90,0)
 I $O(^IBE(363.3,"B","RC PHYSICIAN MN",0)) G RSQ
"RTN","IBYPSA1",91,0)
 ;
"RTN","IBYPSA1",92,0)
 S IBSTDT=$$VERSDT^IBCRHBRV(2) ;I '$$PROD^IBCORC S IBSTDT=2981001
"RTN","IBYPSA1",93,0)
 ;
"RTN","IBYPSA1",94,0)
 F IBI=1:1 S IBLN=$P($T(RSF+IBI),";;",2) Q:+IBLN!(IBLN="")  I $E(IBLN)?1A D
"RTN","IBYPSA1",95,0)
 . ;
"RTN","IBYPSA1",96,0)
 . S IBBS=$P(IBLN,U,4) I IBBS'="" S IBBS=$$MCCRUTL(IBBS,13) D  Q:'IBBS
"RTN","IBYPSA1",97,0)
 .. I 'IBBS D MSG("         *** Billable Service "_$P(IBLN,U,4)_" not defined, RS "_$P(IBLN,U,1)_" not created")
"RTN","IBYPSA1",98,0)
 . ;
"RTN","IBYPSA1",99,0)
 . S IBRT=$P(IBLN,U,2),IBRT=$O(^DGCR(399.3,"B",IBRT,0)) D  Q:'IBRT
"RTN","IBYPSA1",100,0)
 .. I 'IBRT D MSG("         *** Rate Type "_$P(IBLN,U,2)_" not defined, RS "_$P(IBLN,U,1)_" not created")
"RTN","IBYPSA1",101,0)
 .. I +$P($G(^DGCR(399.3,+IBRT,0)),U,3) S IBRT=0 D MSG("         *** Rate Type "_$P(IBLN,U,2)_" not Active, RS "_$P(IBLN,U,1)_" not created")
"RTN","IBYPSA1",102,0)
 . ;
"RTN","IBYPSA1",103,0)
 . F IBJ=1:1 S IBRS=$G(^IBE(363,IBJ,0)) I IBRS="" S DINUM=IBJ Q
"RTN","IBYPSA1",104,0)
 . ;
"RTN","IBYPSA1",105,0)
 . K DD,DO S DLAYGO=363,DIC="^IBE(363,",DIC(0)="L",X=$P(IBLN,U,1) D FILE^DICN K DIC,DINUM,DLAYGO I Y<1 K X,Y Q
"RTN","IBYPSA1",106,0)
 . S IBFN=+Y,IBCNT=IBCNT+1
"RTN","IBYPSA1",107,0)
 . ;
"RTN","IBYPSA1",108,0)
 . S DR=".02////"_IBRT_";.03////"_$P(IBLN,U,3) S:+IBBS DR=DR_";.04////"_IBBS S DR=DR_";.05////"_IBSTDT
"RTN","IBYPSA1",109,0)
 . S DIE="^IBE(363,",DA=+Y D ^DIE K DIE,DA,DR,X,Y
"RTN","IBYPSA1",110,0)
 . ;
"RTN","IBYPSA1",111,0)
 . ; charge sets (multiple)
"RTN","IBYPSA1",112,0)
 . S IBLNCS=$P(IBLN,":",2,999) I IBLNCS'="" F IBJ=1:1 S IBCS=$P(IBLNCS,":",IBJ) Q:IBCS=""  D
"RTN","IBYPSA1",113,0)
 .. S IBCSFN=$O(^IBE(363.1,"B",IBCS,0)) Q:'IBCSFN
"RTN","IBYPSA1",114,0)
 .. ;
"RTN","IBYPSA1",115,0)
 .. S DLAYGO=363,DA(1)=+IBFN,DIC="^IBE(363,"_DA(1)_",11,",DIC(0)="L",X=IBCS,DIC("DR")=".02////"_1,DIC("P")="363.0011P" D ^DIC K DIC,DIE
"RTN","IBYPSA1",116,0)
 ;
"RTN","IBYPSA1",117,0)
RSQ S IBA(1)="      >> "_IBCNT_" Rate Schedules added, active on "_$E(IBSTDT,4,5)_"/"_$E(IBSTDT,6,7)_"/"_$E(IBSTDT,2,3)_" (363)..."
"RTN","IBYPSA1",118,0)
 D MES^XPDUTL(.IBA)
"RTN","IBYPSA1",119,0)
 Q
"RTN","IBYPSA1",120,0)
 ;
"RTN","IBYPSA1",121,0)
MCCRUTL(X,P) ; returns IFN of item in 399.1 if Name is found and piece P is true
"RTN","IBYPSA1",122,0)
 N IBX,IBY S IBY=""
"RTN","IBYPSA1",123,0)
 I $G(X)'="" S IBX=0 F  S IBX=$O(^DGCR(399.1,"B",X,IBX)) Q:'IBX  I $P($G(^DGCR(399.1,IBX,0)),U,+$G(P)) S IBY=IBX
"RTN","IBYPSA1",124,0)
 Q IBY
"RTN","IBYPSA1",125,0)
 ;
"RTN","IBYPSA1",126,0)
MSG(X) ;
"RTN","IBYPSA1",127,0)
 N IBX S IBX=$O(IBA(999999),-1) S:'IBX IBX=1 S IBX=IBX+1
"RTN","IBYPSA1",128,0)
 S IBA(IBX)=$G(X)
"RTN","IBYPSA1",129,0)
 Q
"RTN","IBYPSA1",130,0)
 ;
"RTN","IBYPSA1",131,0)
 ;
"RTN","IBYPSA1",132,0)
RBF ; billable services (399.1,.2)
"RTN","IBYPSA1",133,0)
 ;; name ^ abbreviation
"RTN","IBYPSA1",134,0)
 ;; 
"RTN","IBYPSA1",135,0)
 ;;SKILLED NURSING^SNF
"RTN","IBYPSA1",136,0)
 ;;
"RTN","IBYPSA1",137,0)
 ;
"RTN","IBYPSA1",138,0)
BSF ;  Bedsections (399.1,.12)
"RTN","IBYPSA1",139,0)
 ;; name ^ abbreviation ^ other care
"RTN","IBYPSA1",140,0)
 ;;    
"RTN","IBYPSA1",141,0)
 ;;ICU^ICU
"RTN","IBYPSA1",142,0)
 ;;PARTIAL HOSPITALIZATION^PARTIAL HOSP
"RTN","IBYPSA1",143,0)
 ;;SKILLED NURSING CARE^SNF^SKILLED NURSING
"RTN","IBYPSA1",144,0)
 ;;SUB-ACUTE CARE^SUBACUTE^SKILLED NURSING
"RTN","IBYPSA1",145,0)
 ;;
"RTN","IBYPSA1",146,0)
 ;
"RTN","IBYPSA1",147,0)
BIF ;  Billing Items (363.21)
"RTN","IBYPSA1",148,0)
 ;; name ^ type
"RTN","IBYPSA1",149,0)
 ;;  
"RTN","IBYPSA1",150,0)
 ;;PARTIAL HOSPITALIZATION^9
"RTN","IBYPSA1",151,0)
 ;;
"RTN","IBYPSA1",152,0)
BRF ;  Billing Rates File (363.3)
"RTN","IBYPSA1",153,0)
 ;; name ^ abbreviation ^ distribution ^ billable item ^ charge method ^ base allowed
"RTN","IBYPSA1",154,0)
 ;; 
"RTN","IBYPSA1",155,0)
 ;;RC FACILITY PER DIEM^RC F/PD^1^1^1
"RTN","IBYPSA1",156,0)
 ;; 
"RTN","IBYPSA1",157,0)
 ;;RC FACILITY HR^RC F/HR^1^2^6^1
"RTN","IBYPSA1",158,0)
 ;;RC FACILITY ML^RC F/ML^1^2^4
"RTN","IBYPSA1",159,0)
 ;; 
"RTN","IBYPSA1",160,0)
 ;;RC MISCELLANEOUS^RC MISC^1^9^1
"RTN","IBYPSA1",161,0)
 ;; 
"RTN","IBYPSA1",162,0)
 ;;RC PHYSICIAN MN^RC P/MN^1^2^5^1
"RTN","IBYPSA1",163,0)
 ;;RC PHYSICIAN ML^RC P/ML^1^2^4
"RTN","IBYPSA1",164,0)
 ;;
"RTN","IBYPSA1",165,0)
RSF ;  Rate Schedules (363)
"RTN","IBYPSA1",166,0)
 ;; rs name ^ rate type ^ bill type ^ billable service ^ effective date ^^ charge sets
"RTN","IBYPSA1",167,0)
 ;; 
"RTN","IBYPSA1",168,0)
 ;;RI-INPT^REIMBURSABLE INS.^1^^
"RTN","IBYPSA1",169,0)
 ;;RI-SNF^REIMBURSABLE INS.^1^SKILLED NURSING^
"RTN","IBYPSA1",170,0)
 ;;RI-OPT^REIMBURSABLE INS.^3^^
"RTN","IBYPSA1",171,0)
 ;;RI-RX^REIMBURSABLE INS.^3^^^^:TL-RX FILL
"RTN","IBYPSA1",172,0)
 ;; 
"RTN","IBYPSA1",173,0)
 ;;NF-INPT^NO FAULT INS.^1^^
"RTN","IBYPSA1",174,0)
 ;;NF-SNF^NO FAULT INS.^1^SKILLED NURSING^
"RTN","IBYPSA1",175,0)
 ;;NF-OPT^NO FAULT INS.^3^^
"RTN","IBYPSA1",176,0)
 ;;NF-RX^NO FAULT INS.^3^^^^:TL-RX FILL
"RTN","IBYPSA1",177,0)
 ;; 
"RTN","IBYPSA1",178,0)
 ;;WC-INPT^WORKERS' COMP.^1^^
"RTN","IBYPSA1",179,0)
 ;;WC-SNF^WORKERS' COMP.^1^SKILLED NURSING^
"RTN","IBYPSA1",180,0)
 ;;WC-OPT^WORKERS' COMP.^3^^
"RTN","IBYPSA1",181,0)
 ;;WC-RX^WORKERS' COMP.^3^^^^:TL-RX FILL
"RTN","IBYPSA1",182,0)
 ;;
"RTN","IBYPSA2")
0^52^B4684241
"RTN","IBYPSA2",1,0)
IBYPSA2 ;ALB/ARH - IB*2.0*245 POST INIT: INACTIVATE OLD RC CHARGES ; 01-OCT-2003
"RTN","IBYPSA2",2,0)
 ;;2.0;INTEGRATED BILLING;**245**;21-MAR-94
"RTN","IBYPSA2",3,0)
 ; 
"RTN","IBYPSA2",4,0)
 Q
"RTN","IBYPSA2",5,0)
 ;
"RTN","IBYPSA2",6,0)
CHGINA(VERS) ; inactive charges from previous versions of Reasonable Charges
"RTN","IBYPSA2",7,0)
 ; VERS = version to begin inactivations with (1, 1.1, 1.2, ...)
"RTN","IBYPSA2",8,0)
 ; - Inactive date added is the first RC Version Inactive date after the effective date of the charge
"RTN","IBYPSA2",9,0)
 ; - if the charge already has an inactive date less than the Version Inactive Date then no change is made
"RTN","IBYPSA2",10,0)
 ;
"RTN","IBYPSA2",11,0)
 N IBA,IBI,IBX,IBSTART,IBENDATE,IBCS,IBCS0,IBBR0,IBXRF,IBITM,IBNEF,IBCI,IBCI0,IBCIEF,IBCIIA,IBNEWIA
"RTN","IBYPSA2",12,0)
 N DD,DO,DLAYGO,DIC,DIE,DA,DR,X,Y,IBCNT S IBCNT=0
"RTN","IBYPSA2",13,0)
 ;
"RTN","IBYPSA2",14,0)
 S IBA(1)="      >> Inactivating Existing Reasonable Charges, Please Wait..." D MES^XPDUTL(.IBA) K IBA
"RTN","IBYPSA2",15,0)
 ;
"RTN","IBYPSA2",16,0)
 S IBSTART="" I $G(VERS)'="" S IBSTART=$$VERSDT^IBCRHBRV(VERS)
"RTN","IBYPSA2",17,0)
 S IBENDATE=$$VERSEND^IBCRHBRV
"RTN","IBYPSA2",18,0)
 ;
"RTN","IBYPSA2",19,0)
 S IBCS=0 F  S IBCS=$O(^IBE(363.1,IBCS)) Q:'IBCS  D
"RTN","IBYPSA2",20,0)
 . S IBCS0=$G(^IBE(363.1,IBCS,0)) Q:IBCS0=""
"RTN","IBYPSA2",21,0)
 . S IBBR0=$G(^IBE(363.3,+$P(IBCS0,U,2),0)) I $E(IBBR0,1,3)'="RC " Q
"RTN","IBYPSA2",22,0)
 . ;
"RTN","IBYPSA2",23,0)
 . S IBXRF="AIVDTS"_IBCS
"RTN","IBYPSA2",24,0)
 . S IBITM=0 F  S IBITM=$O(^IBA(363.2,IBXRF,IBITM)) Q:'IBITM  D
"RTN","IBYPSA2",25,0)
 .. S IBNEF="" F  S IBNEF=$O(^IBA(363.2,IBXRF,IBITM,IBNEF)) Q:IBNEF=""  Q:-IBNEF<IBSTART  D
"RTN","IBYPSA2",26,0)
 ... ;
"RTN","IBYPSA2",27,0)
 ... S IBCI=0 F  S IBCI=$O(^IBA(363.2,IBXRF,IBITM,IBNEF,IBCI)) Q:'IBCI  D
"RTN","IBYPSA2",28,0)
 .... S IBCI0=$G(^IBA(363.2,IBCI,0)) Q:IBCI0=""
"RTN","IBYPSA2",29,0)
 .... S IBCIEF=$P(IBCI0,U,3),IBCIIA=$P(IBCI0,U,4),IBNEWIA=""
"RTN","IBYPSA2",30,0)
 .... ;
"RTN","IBYPSA2",31,0)
 .... F IBI=2:1 S IBX=+$P(IBENDATE,";",IBI) S IBNEWIA=IBX Q:'IBX  Q:IBCIEF'>IBX
"RTN","IBYPSA2",32,0)
 .... ;
"RTN","IBYPSA2",33,0)
 .... I 'IBNEWIA Q
"RTN","IBYPSA2",34,0)
 .... I +IBCIIA,IBCIIA'>IBNEWIA Q
"RTN","IBYPSA2",35,0)
 .... ;
"RTN","IBYPSA2",36,0)
 .... S DR=".04////"_+IBNEWIA,DIE="^IBA(363.2,",DA=+IBCI D ^DIE K DIE,DIC,DA,DR,X,Y S IBCNT=IBCNT+1
"RTN","IBYPSA2",37,0)
 ;
"RTN","IBYPSA2",38,0)
 S IBA(1)="         Done.  "_IBCNT_" existing charges inactivated " D MES^XPDUTL(.IBA) K IBA
"RTN","IBYPSA2",39,0)
 Q
"UP",399,399.0304,-1)
399^CP
"UP",399,399.0304,0)
399.0304
"UP",399,399.048,-1)
399^OT
"UP",399,399.048,0)
399.048
"VER")
8.0^22.0
"^DD",363.2,363.2,.08,0)
BASE CHARGE^NJ8,2^^0;8^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>99999)!(X<0) X
"^DD",363.2,363.2,.08,3)
Type a Dollar Amount between 0 and 99999, 2 Decimal Digits
"^DD",363.2,363.2,.08,21,0)
^.001^5^5^3040115^^^^
"^DD",363.2,363.2,.08,21,1,0)
Enter the Base Charge associated with the item.  This amount will be 
"^DD",363.2,363.2,.08,21,2,0)
added once for the item on the bill, instead of once for each unit of 
"^DD",363.2,363.2,.08,21,3,0)
the item.  Base Charge is appropriate for only specific types of 
"^DD",363.2,363.2,.08,21,4,0)
charges where the total charge for the item is an incremental Unit 
"^DD",363.2,363.2,.08,21,5,0)
charge plus a single Base charge, such as Minutes and Hours.
"^DD",363.2,363.2,.08,"DT")
3031203
"^DD",363.3,363.3,.05,0)
CHARGE METHOD^RS^1:COUNT;2:VA COST;3:QUANTITY;4:MILES;5:MINUTES;6:HOURS;^0;5^Q
"^DD",363.3,363.3,.05,3)
Enter the method of charge calculation for this rate.
"^DD",363.3,363.3,.05,21,0)
^.001^8^8^3031110^^^^
"^DD",363.3,363.3,.05,21,1,0)
Indicates how the charge will be calculated for the Billable Items
"^DD",363.3,363.3,.05,21,2,0)
found on the bills.
"^DD",363.3,363.3,.05,21,3,0)
COUNT:    charge per Item found on the bill
"^DD",363.3,363.3,.05,21,4,0)
VA COST:  calculated value of the VA cost for an item
"^DD",363.3,363.3,.05,21,5,0)
QUANTITY: price per dispense unit (NDC # charges only)
"^DD",363.3,363.3,.05,21,6,0)
MILES:    charge per mile
"^DD",363.3,363.3,.05,21,7,0)
MINUTES:  charge with base plus incremental charge per 15 minutes
"^DD",363.3,363.3,.05,21,8,0)
HOURS:    charge with base plus incremental charge per hour
"^DD",363.3,363.3,.05,"DT")
3031110
"^DD",363.3,363.3,.06,0)
BASE CHARGE^S^1:YES;^0;6^Q
"^DD",363.3,363.3,.06,3)
Enter YES if a Base Charge is allowed for this Billing Rate.
"^DD",363.3,363.3,.06,21,0)
^.001^3^3^3040115^^
"^DD",363.3,363.3,.06,21,1,0)
Certain types of charges require both an incremental charge per unit 
"^DD",363.3,363.3,.06,21,2,0)
and base charge applied once per item.  Enter yes if this Billing 
"^DD",363.3,363.3,.06,21,3,0)
Rate allows a base charge plus the unit charge for an item.
"^DD",363.3,363.3,.06,"DT")
3031210
"^DD",363.31,363.31,.03,0)
TYPE^F^^0;3^K:$L(X)>10!($L(X)<1) X
"^DD",363.31,363.31,.03,3)
Answer must be 1-10 characters in length.
"^DD",363.31,363.31,.03,21,0)
^.001^4^4^3040205^^
"^DD",363.31,363.31,.03,21,1,0)
This identifies the type of facility for the divisions assigned to the 
"^DD",363.31,363.31,.03,21,2,0)
region.  For Reasonable Charges these include: 1 - Provider based with 
"^DD",363.31,363.31,.03,21,3,0)
Inpatient care, 2 - Provider based with Outpatient care only, 
"^DD",363.31,363.31,.03,21,4,0)
3 - Non-Provider based Outpatient care.
"^DD",363.31,363.31,.03,"DT")
3031028
"^DD",399,399,48,0)
OTHER CARE^399.048P^^OT;0
"^DD",399,399,48,21,0)
^.001^2^2^3040123^^^^
"^DD",399,399,48,21,1,0)
Allows definition of the type of care to be other than the standard 
"^DD",399,399,48,21,2,0)
inpatient or outpatient.
"^DD",399,399,48,23,0)
^.001^1^1^3040123^^^^
"^DD",399,399,48,23,1,0)
Used to identify the charges applied to the dates of care.
"^DD",399,399.0304,15,0)
MINUTES^NJ3,0X^^0;16^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",399,399.0304,15,3)
Enter the # of minutes for this service.
"^DD",399,399.0304,15,5,1,0)
399.0304^9^1
"^DD",399,399.0304,15,21,0)
^.001^1^1^3031203^^^^
"^DD",399,399.0304,15,21,1,0)
Enter the number of minutes of care, usually related to Anesthesia.
"^DD",399,399.0304,15,"DT")
2990219
"^DD",399,399.0304,21,0)
MILES^NJ7,1^^0;21^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."2N.N) X
"^DD",399,399.0304,21,3)
Type a Number between 0 and 99999, 1 Decimal Digit
"^DD",399,399.0304,21,21,0)
^^1^1^3030930^
"^DD",399,399.0304,21,21,1,0)
Enter the number of miles the patient was transported.
"^DD",399,399.0304,21,"DT")
3030930
"^DD",399,399.0304,22,0)
HOURS^NJ5,1^^0;22^K:+X'=X!(X>999)!(X<0)!(X?.E1"."2N.N) X
"^DD",399,399.0304,22,3)
Type a Number between 0 and 999, 1 Decimal Digit
"^DD",399,399.0304,22,21,0)
^.001^1^1^3031203^^
"^DD",399,399.0304,22,21,1,0)
Enter the number of hours of care, usually related to Observation.
"^DD",399,399.0304,22,"DT")
3031203
"^DD",399,399.048,0)
OTHER CARE SUB-FIELD^^.03^3
"^DD",399,399.048,0,"DT")
3040122
"^DD",399,399.048,0,"IX","B",399.048,.01)

"^DD",399,399.048,0,"NM","OTHER CARE")

"^DD",399,399.048,0,"UP")
399
"^DD",399,399.048,.01,0)
OTHER CARE^M*P399.1'^DGCR(399.1,^0;1^S DIC("S")="I +$P($G(^DGCR(399.1,+Y,0)),U,5),+$P($G(^DGCR(399.1,+Y,0)),U,25)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399.048,.01,1,0)
^.1
"^DD",399,399.048,.01,1,1,0)
399.048^B
"^DD",399,399.048,.01,1,1,1)
S ^DGCR(399,DA(1),"OT","B",$E(X,1,30),DA)=""
"^DD",399,399.048,.01,1,1,2)
K ^DGCR(399,DA(1),"OT","B",$E(X,1,30),DA)
"^DD",399,399.048,.01,3)
Identify care other than Inpatient or Outpatient.
"^DD",399,399.048,.01,12)
Bedsections available for Other Care.
"^DD",399,399.048,.01,12.1)
S DIC("S")="I +$P($G(^DGCR(399.1,+Y,0)),U,5),+$P($G(^DGCR(399.1,+Y,0)),U,25)"
"^DD",399,399.048,.01,21,0)
^.001^3^3^3040122^^
"^DD",399,399.048,.01,21,1,0)
Identification of a range of dates for care to be other than the 
"^DD",399,399.048,.01,21,2,0)
standard Inpatient or Outpatient.  Reasonable Charges will be applied 
"^DD",399,399.048,.01,21,3,0)
for the type of care entered.
"^DD",399,399.048,.01,"DT")
3040122
"^DD",399,399.048,.02,0)
START DATE^RDX^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X I $D(X) D OTDAT^IBCU4
"^DD",399,399.048,.02,3)
Enter the date the patient began this type of care.
"^DD",399,399.048,.02,21,0)
^.001^1^1^3040123^^^
"^DD",399,399.048,.02,21,1,0)
This is the date the patient entered this type of care.
"^DD",399,399.048,.02,"DT")
3040122
"^DD",399,399.048,.03,0)
END DATE^RDX^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X I $D(X) D OTDAT^IBCU4
"^DD",399,399.048,.03,3)
Enter the date this type of care ended for the patient.
"^DD",399,399.048,.03,21,0)
^.001^1^1^3040123^^^^
"^DD",399,399.048,.03,21,1,0)
This is the date this type of care ended for the patient.
"^DD",399,399.048,.03,"DT")
3040122
"^DD",399.1,399.1,.25,0)
OTHER CARE^*P399.1'^DGCR(399.1,^0;25^S DIC("S")="I +$P(^(0),U,13),$P(^DGCR(399.1,+DA,0),U,5)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399.1,399.1,.25,3)
Enter the Billable Service this Bedsection is related to.
"^DD",399.1,399.1,.25,12)
Only Valid Billable Services!
"^DD",399.1,399.1,.25,12.1)
S DIC("S")="I +$P(^(0),U,13),$P(^DGCR(399.1,+DA,0),U,5)"
"^DD",399.1,399.1,.25,21,0)
^.001^2^2^3040205^^^^
"^DD",399.1,399.1,.25,21,1,0)
If this Bedsection is associated with an 'Other Type of Care', then this 
"^DD",399.1,399.1,.25,21,2,0)
Billable Service will identify the Rate Schedules that apply.
"^DD",399.1,399.1,.25,"DT")
3040122
**END**
**END**
