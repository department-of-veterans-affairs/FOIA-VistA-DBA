KIDS Distribution saved on Jan 16, 2004@09:42:45
OR 3 174, XHD 1.0, and ORRC 1.0
**KIDS**:OR*3.0*174^XHD PARAMETERS 1.0^XHD 1.0^ORRC PARAMETERS 1.0^ORRC 1.0^

**INSTALL NAME**
OR*3.0*174
"BLD",4125,0)
OR*3.0*174^ORDER ENTRY/RESULTS REPORTING^0^3040116^y
"BLD",4125,1,0)
^^2^2^3030610^^
"BLD",4125,1,1,0)
The description of this build is found in the National Patch Module under
"BLD",4125,1,2,0)
patch OR*3*174.
"BLD",4125,4,0)
^9.64PA^^0
"BLD",4125,"ABNS",0)
^9.66A^1^1
"BLD",4125,"ABNS",1,0)
ORR
"BLD",4125,"ABNS",1,1,0)
^9.661A^^
"BLD",4125,"ABNS","B","ORR",1)

"BLD",4125,"ABPKG")
n^y^G.CPRS REENGINEERING@FO-SLC.MED.VA.GOV
"BLD",4125,"INI")

"BLD",4125,"INID")
^^
"BLD",4125,"INIT")

"BLD",4125,"KRN",0)
^9.67PA^8989.52^19
"BLD",4125,"KRN",.4,0)
.4
"BLD",4125,"KRN",.4,"NM",0)
^9.68A^^
"BLD",4125,"KRN",.401,0)
.401
"BLD",4125,"KRN",.401,"NM",0)
^9.68A^^
"BLD",4125,"KRN",.402,0)
.402
"BLD",4125,"KRN",.402,"NM",0)
^9.68A^^
"BLD",4125,"KRN",.403,0)
.403
"BLD",4125,"KRN",.5,0)
.5
"BLD",4125,"KRN",.84,0)
.84
"BLD",4125,"KRN",3.6,0)
3.6
"BLD",4125,"KRN",3.8,0)
3.8
"BLD",4125,"KRN",9.2,0)
9.2
"BLD",4125,"KRN",9.8,0)
9.8
"BLD",4125,"KRN",9.8,"NM",0)
^9.68A^54^9
"BLD",4125,"KRN",9.8,"NM",30,0)
ORRU^^0^B2433260
"BLD",4125,"KRN",9.8,"NM",45,0)
ORRHCQ^^0^B54191395
"BLD",4125,"KRN",9.8,"NM",48,0)
ORQRY01^^0^B6247232
"BLD",4125,"KRN",9.8,"NM",49,0)
ORRHCQ1^^0^B12564917
"BLD",4125,"KRN",9.8,"NM",50,0)
ORMLR^^0^B52858454
"BLD",4125,"KRN",9.8,"NM",51,0)
ORMRA^^0^B56134543
"BLD",4125,"KRN",9.8,"NM",52,0)
ORMGMRC^^0^B41693018
"BLD",4125,"KRN",9.8,"NM",53,0)
ORQRY^^0^B69278095
"BLD",4125,"KRN",9.8,"NM",54,0)
ORRHCU^^0^B13954560
"BLD",4125,"KRN",9.8,"NM","B","ORMGMRC",52)

"BLD",4125,"KRN",9.8,"NM","B","ORMLR",50)

"BLD",4125,"KRN",9.8,"NM","B","ORMRA",51)

"BLD",4125,"KRN",9.8,"NM","B","ORQRY",53)

"BLD",4125,"KRN",9.8,"NM","B","ORQRY01",48)

"BLD",4125,"KRN",9.8,"NM","B","ORRHCQ",45)

"BLD",4125,"KRN",9.8,"NM","B","ORRHCQ1",49)

"BLD",4125,"KRN",9.8,"NM","B","ORRHCU",54)

"BLD",4125,"KRN",9.8,"NM","B","ORRU",30)

"BLD",4125,"KRN",19,0)
19
"BLD",4125,"KRN",19,"NM",0)
^9.68A^^0
"BLD",4125,"KRN",19.1,0)
19.1
"BLD",4125,"KRN",19.1,"NM",0)
^9.68A^^0
"BLD",4125,"KRN",101,0)
101
"BLD",4125,"KRN",101,"NM",0)
^9.68A^^0
"BLD",4125,"KRN",409.61,0)
409.61
"BLD",4125,"KRN",771,0)
771
"BLD",4125,"KRN",870,0)
870
"BLD",4125,"KRN",8989.51,0)
8989.51
"BLD",4125,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",4125,"KRN",8989.52,0)
8989.52
"BLD",4125,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",4125,"KRN",8994,0)
8994
"BLD",4125,"KRN",8994,"NM",0)
^9.68A^55^7
"BLD",4125,"KRN",8994,"NM",49,0)
ORRHCQ1 DELSEN^^0
"BLD",4125,"KRN",8994,"NM",50,0)
ORRHCQ1 GETCNT^^0
"BLD",4125,"KRN",8994,"NM",51,0)
ORRHCQ1 GETSLN^^0
"BLD",4125,"KRN",8994,"NM",52,0)
ORRHCQ1 GETSPT^^0
"BLD",4125,"KRN",8994,"NM",53,0)
ORRHCQ1 QRYSITR^^0
"BLD",4125,"KRN",8994,"NM",54,0)
ORRHCQ1 QSITR^^0
"BLD",4125,"KRN",8994,"NM",55,0)
ORRHCU DFLDMAP^^0
"BLD",4125,"KRN",8994,"NM","B","ORRHCQ1 DELSEN",49)

"BLD",4125,"KRN",8994,"NM","B","ORRHCQ1 GETCNT",50)

"BLD",4125,"KRN",8994,"NM","B","ORRHCQ1 GETSLN",51)

"BLD",4125,"KRN",8994,"NM","B","ORRHCQ1 GETSPT",52)

"BLD",4125,"KRN",8994,"NM","B","ORRHCQ1 QRYSITR",53)

"BLD",4125,"KRN",8994,"NM","B","ORRHCQ1 QSITR",54)

"BLD",4125,"KRN",8994,"NM","B","ORRHCU DFLDMAP",55)

"BLD",4125,"KRN","B",.4,.4)

"BLD",4125,"KRN","B",.401,.401)

"BLD",4125,"KRN","B",.402,.402)

"BLD",4125,"KRN","B",.403,.403)

"BLD",4125,"KRN","B",.5,.5)

"BLD",4125,"KRN","B",.84,.84)

"BLD",4125,"KRN","B",3.6,3.6)

"BLD",4125,"KRN","B",3.8,3.8)

"BLD",4125,"KRN","B",9.2,9.2)

"BLD",4125,"KRN","B",9.8,9.8)

"BLD",4125,"KRN","B",19,19)

"BLD",4125,"KRN","B",19.1,19.1)

"BLD",4125,"KRN","B",101,101)

"BLD",4125,"KRN","B",409.61,409.61)

"BLD",4125,"KRN","B",771,771)

"BLD",4125,"KRN","B",870,870)

"BLD",4125,"KRN","B",8989.51,8989.51)

"BLD",4125,"KRN","B",8989.52,8989.52)

"BLD",4125,"KRN","B",8994,8994)

"BLD",4125,"QUES",0)
^9.62^^
"BLD",4125,"REQB",0)
^9.611^1^1
"BLD",4125,"REQB",1,0)
OR*3.0*153^2
"BLD",4125,"REQB","B","OR*3.0*153",1)

"KRN",8994,1924,-1)
0^50
"KRN",8994,1924,0)
ORRHCQ1 GETCNT^GETCNT^ORRHCQ1^1^R
"KRN",8994,1924,1,0)
^^2^2^3030611^
"KRN",8994,1924,1,1,0)
Returns the count of sensitive patients left to evaluate after a main
"KRN",8994,1924,1,2,0)
query iteration run.
"KRN",8994,1925,-1)
0^53
"KRN",8994,1925,0)
ORRHCQ1 QRYSITR^QRYSITR^ORRHCQ1^1^R
"KRN",8994,1925,1,0)
^^4^4^3030612^
"KRN",8994,1925,1,1,0)
Similar to the main query iterator routine, except does not process
"KRN",8994,1925,1,2,0)
the patients marked as sensitive, and saves them off without
"KRN",8994,1925,1,3,0)
screening them.  Subsequent routines are called to manage the list
"KRN",8994,1925,1,4,0)
and process those selected for reporting.
"KRN",8994,1925,2,0)
^8994.02A^1^1
"KRN",8994,1925,2,1,0)
ITERATOR^1^80^1
"KRN",8994,1925,2,1,1,0)
^^1^1^3030612^
"KRN",8994,1925,2,1,1,1,0)
Iterator that was returned from the last call to this routine.
"KRN",8994,1925,2,"B","ITERATOR",1)

"KRN",8994,1925,3,0)
^^2^2^3030612^
"KRN",8994,1925,3,1,0)
Returns PtSearched^RecordsFound^Iterator; use the Iterator returned
"KRN",8994,1925,3,2,0)
for subsequent calls.
"KRN",8994,1926,-1)
0^54
"KRN",8994,1926,0)
ORRHCQ1 QSITR^QSITR^ORRHCQ1^1^R
"KRN",8994,1926,1,0)
^^3^3^3030612^
"KRN",8994,1926,1,1,0)
Iterates through sensitive patients identified in a query tool report.
"KRN",8994,1926,1,2,0)
Screens patients based on report criteria, and reports sensitive
"KRN",8994,1926,1,3,0)
patients as necessary.
"KRN",8994,1926,2,0)
^8994.02A^1^1
"KRN",8994,1926,2,1,0)
Iterator^1^80^1
"KRN",8994,1926,2,1,1,0)
^^1^1^3030612^
"KRN",8994,1926,2,1,1,1,0)
Iterator to tell the routine from which patient to perform the search.
"KRN",8994,1926,2,"B","Iterator",1)

"KRN",8994,1926,3,0)
^^2^2^3030612^
"KRN",8994,1926,3,1,0)
Returns PtSearched^RecordsFound^Iterator; use the Iterator returned in 
"KRN",8994,1926,3,2,0)
the subsequent call.
"KRN",8994,1927,-1)
0^52
"KRN",8994,1927,0)
ORRHCQ1 GETSPT^GETSPT^ORRHCQ1^2^R
"KRN",8994,1927,1,0)
^^2^2^3030612^
"KRN",8994,1927,1,1,0)
Gets sensitive patients from a query tool cohort, where the patients
"KRN",8994,1927,1,2,0)
have not yet been screened.
"KRN",8994,1927,2,0)
^8994.02A^2^2
"KRN",8994,1927,2,1,0)
Start^1^80^1^1
"KRN",8994,1927,2,1,1,0)
^^2^2^3030612^
"KRN",8994,1927,2,1,1,1,0)
Starting position, specified by Name!DFN.  For example:
"KRN",8994,1927,2,1,1,2,0)
Winchester, Charles Emmerson!78390
"KRN",8994,1927,2,2,0)
Length^1^80^1^2
"KRN",8994,1927,2,2,1,0)
^^1^1^3030612^
"KRN",8994,1927,2,2,1,1,0)
Length of the return array from this routine.
"KRN",8994,1927,2,"B","Length",2)

"KRN",8994,1927,2,"B","Start",1)

"KRN",8994,1927,2,"PARAMSEQ",1,1)

"KRN",8994,1927,2,"PARAMSEQ",2,2)

"KRN",8994,1927,3,0)
^^2^2^3030612^
"KRN",8994,1927,3,1,0)
List of items in the format DFN^Patient Name^Sensitivity Level, sorted
"KRN",8994,1927,3,2,0)
by patient name.
"KRN",8994,1928,-1)
0^51
"KRN",8994,1928,0)
ORRHCQ1 GETSLN^GETSLN^ORRHCQ1^2^R
"KRN",8994,1928,1,0)
^^4^4^3030612^
"KRN",8994,1928,1,1,0)
When a query executes, the sensitive patients are saved off before they
"KRN",8994,1928,1,2,0)
are evaluated, along with the sensitive information gathered from
"KRN",8994,1928,1,3,0)
the routine PTSEC^DGSEC4.  This RPC returns the sensitive message text
"KRN",8994,1928,1,4,0)
for the given patient when this query attempted to query their record.
"KRN",8994,1928,2,0)
^8994.02A^1^1
"KRN",8994,1928,2,1,0)
DFN^1^80^1^1
"KRN",8994,1928,2,1,1,0)
^^1^1^3030612^
"KRN",8994,1928,2,1,1,1,0)
DFN of the sensitive patient.
"KRN",8994,1928,2,"B","DFN",1)

"KRN",8994,1928,2,"PARAMSEQ",1,1)

"KRN",8994,1928,3,0)
^^1^1^3030612^
"KRN",8994,1928,3,1,0)
Sensitive information text returned by PTSEC^DGSEC4 for this patient.
"KRN",8994,1929,-1)
0^49
"KRN",8994,1929,0)
ORRHCQ1 DELSEN^DELSEN^ORRHCQ1^1^R
"KRN",8994,1929,1,0)
^^3^3^3030612^
"KRN",8994,1929,1,1,0)
Deletes the sensitive patient from the sensitive patient list generated
"KRN",8994,1929,1,2,0)
for the currently executing query.  No further evaluation of the 
"KRN",8994,1929,1,3,0)
patients record will take place.
"KRN",8994,1929,2,0)
^8994.02A^1^1
"KRN",8994,1929,2,1,0)
DFN^1^80^1^10
"KRN",8994,1929,2,1,1,0)
^^1^1^3030612^
"KRN",8994,1929,2,1,1,1,0)
The DFN of the record to remove.
"KRN",8994,1929,2,"B","DFN",1)

"KRN",8994,1929,2,"PARAMSEQ",10,1)

"KRN",8994,1929,3,0)
^^1^1^3030612^
"KRN",8994,1929,3,1,0)
1=Success, -1=Failure
"KRN",8994,1984,-1)
0^55
"KRN",8994,1984,0)
ORRHCU DFLDMAP^DFLDMAP^ORRHCU^2^R
"KRN",8994,1984,1,0)
^8994.01^1^1^3030806^^
"KRN",8994,1984,1,1,0)
Returns a mapping from criteria categories to display field categories
"KRN",8994,1984,3,0)
^8994.03^2^2^3030806^^
"KRN",8994,1984,3,1,0)
The returned array is a mapping in the form A=B, where A is the criteria
"KRN",8994,1984,3,2,0)
category and B is the display field category.
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PKG",110,-1)
1^1
"PKG",110,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",110,20,0)
^9.402P^^
"PKG",110,22,0)
^9.49I^1^1
"PKG",110,22,1,0)
3.0^2971217
"PKG",110,22,1,"PAH",1,0)
174^3040116^1411
"PKG",110,22,1,"PAH",1,1,0)
^^2^2^3040116
"PKG",110,22,1,"PAH",1,1,1,0)
The description of this build is found in the National Patch Module under
"PKG",110,22,1,"PAH",1,1,2,0)
patch OR*3*174.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","ORMGMRC")
0^52^B41693018
"RTN","ORMGMRC",1,0)
ORMGMRC ; SLC/MKB - Process Consult ORM msgs ;12:03 PM  26 Jul 2000
"RTN","ORMGMRC",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**3,26,68,92,153,174**;Dec 17, 1997
"RTN","ORMGMRC",3,0)
EN ; -- entry point for GMRC messges
"RTN","ORMGMRC",4,0)
 I '$L($T(@ORDCNTRL)) Q  ;S ORERR="Invalid order control code" Q
"RTN","ORMGMRC",5,0)
 I ORDCNTRL'="SN",ORDCNTRL'="ZP",'ORIFN!('$D(^OR(100,+ORIFN,0))) S ORERR="Invalid OE/RR order number" Q
"RTN","ORMGMRC",6,0)
 S:ORDCNTRL="OC"&(ORTYPE="ORR") ORDCNTRL="UA" ;new code
"RTN","ORMGMRC",7,0)
 N ORSTS,OREASON1,NTE S ORSTS=$$STATUS(ORDSTS)
"RTN","ORMGMRC",8,0)
 S:'ORLOG ORLOG=$$NOW^XLFDT S:'ORDUZ ORDUZ=DUZ S:$G(DGPMT) ORDUZ=""
"RTN","ORMGMRC",9,0)
 S OREASON=$P(OREASON,U,5),NTE=$O(@ORMSG@(+ORC)),OREASON1=""
"RTN","ORMGMRC",10,0)
 I NTE,$E(@ORMSG@(NTE),1,3)="NTE" S OREASON1=$P(@ORMSG@(NTE),"|",4)
"RTN","ORMGMRC",11,0)
 D @ORDCNTRL
"RTN","ORMGMRC",12,0)
 Q
"RTN","ORMGMRC",13,0)
 ;
"RTN","ORMGMRC",14,0)
ZP ; -- Purged
"RTN","ORMGMRC",15,0)
 Q:'ORIFN  Q:'$D(^OR(100,+ORIFN,0))
"RTN","ORMGMRC",16,0)
 K ^OR(100,+ORIFN,4) I "^3^5^6^8^"[(U_$P($G(^(3)),U,3)_U) D STATUS^ORCSAVE2(+ORIFN,14) ; Remove pkg reference, sts=lapsed if still active
"RTN","ORMGMRC",17,0)
 Q
"RTN","ORMGMRC",18,0)
 ;
"RTN","ORMGMRC",19,0)
ZR ; -- Purged as requested [ack]
"RTN","ORMGMRC",20,0)
 D DELETE^ORCSAVE2(+ORIFN)
"RTN","ORMGMRC",21,0)
 Q
"RTN","ORMGMRC",22,0)
 ;
"RTN","ORMGMRC",23,0)
ZU ; -- Unable to purge [ack]
"RTN","ORMGMRC",24,0)
 S $P(^OR(100,+ORIFN,3),U)=$$NOW^XLFDT ; update Last Activity
"RTN","ORMGMRC",25,0)
 Q
"RTN","ORMGMRC",26,0)
 ;
"RTN","ORMGMRC",27,0)
OK ; -- Order accepted, GMRC order # assigned [ack]
"RTN","ORMGMRC",28,0)
 S ^OR(100,+ORIFN,4)=PKGIFN S:'$G(ORSTS) ORSTS=5
"RTN","ORMGMRC",29,0)
 D STATUS^ORCSAVE2(+ORIFN,ORSTS) ; 5=pending
"RTN","ORMGMRC",30,0)
 D DATES^ORCSAVE2(+ORIFN,+$E($$NOW^XLFDT,1,12))
"RTN","ORMGMRC",31,0)
 Q
"RTN","ORMGMRC",32,0)
 ;
"RTN","ORMGMRC",33,0)
XX ; -- Change order
"RTN","ORMGMRC",34,0)
 N ORDIALOG,ORDG,ORDA,ORX,ORP,ORSIG S:'$L(ORNATR) ORNATR="S"
"RTN","ORMGMRC",35,0)
 D DLG Q:$D(ORERR)  Q:'$D(ORDIALOG)  S ORIFN=+ORIFN
"RTN","ORMGMRC",36,0)
 S ORDA=$$ACTION^ORCSAVE("XX",ORIFN,ORNP,OREASON1,ORLOG,ORDUZ)
"RTN","ORMGMRC",37,0)
 I ORDA'>0 S ORERR="Cannot create new order action" Q
"RTN","ORMGMRC",38,0)
 ; -Update sts of order to active, last action to dc/edit:
"RTN","ORMGMRC",39,0)
 S ORX=+$P($G(^OR(100,ORIFN,3)),U,7) S:ORX'>0 ORX=+$O(^(8,ORDA),-1)
"RTN","ORMGMRC",40,0)
 I $D(^OR(100,ORIFN,8,ORX,0)),$P(^(0),U,15)="" S $P(^(0),U,15)=12
"RTN","ORMGMRC",41,0)
 S $P(^OR(100,ORIFN,3),U,7)=ORDA D:$G(ORSTS) STATUS^ORCSAVE2(ORIFN,ORSTS)
"RTN","ORMGMRC",42,0)
 D RELEASE^ORCSAVE2(ORIFN,ORDA,ORLOG,ORDUZ,ORNATR)
"RTN","ORMGMRC",43,0)
 ; -If unsigned edit, leave XX unsigned & mark ORX as Sig Not Req'd
"RTN","ORMGMRC",44,0)
 S ORSIG=$S($P($G(^OR(100,ORIFN,8,ORX,0)),U,4)'=2:1,1:0)
"RTN","ORMGMRC",45,0)
 D SIGSTS^ORCSAVE2(ORIFN,ORDA):ORSIG,SIGN^ORCSAVE2(ORIFN,,,5,ORX):'ORSIG
"RTN","ORMGMRC",46,0)
 ; -Update responses, get/save new order text:
"RTN","ORMGMRC",47,0)
 K ^OR(100,ORIFN,4.5) D RESPONSE^ORCSAVE,ORDTEXT^ORCSAVE1(ORIFN_";"_ORDA)
"RTN","ORMGMRC",48,0)
 S $P(^OR(100,ORIFN,8,ORDA,0),U,14)=ORDA
"RTN","ORMGMRC",49,0)
 K:OREASON="RESUBMIT" ^OR(100,ORIFN,6) ;clear previous DC data
"RTN","ORMGMRC",50,0)
 I $G(ORL) S ORP(1)=+ORIFN_";"_ORDA_"^1" D PRINTS^ORWD1(.ORP,+ORL)
"RTN","ORMGMRC",51,0)
 Q
"RTN","ORMGMRC",52,0)
 ;
"RTN","ORMGMRC",53,0)
SN ; -- New backdoor order: return NA msg w/ORIFN, or DE msg
"RTN","ORMGMRC",54,0)
 N ORDIALOG,ORDG,ORP K ^TMP("ORWORD",$J) S:'$L(ORNATR) ORNATR="W"
"RTN","ORMGMRC",55,0)
 I '$D(^VA(200,ORNP,0)) S ORERR="Missing or invalid ordering provider" Q
"RTN","ORMGMRC",56,0)
 I ORDUZ,'$D(^VA(200,ORDUZ,0)) S ORERR="Invalid entering person" Q
"RTN","ORMGMRC",57,0)
 I '$G(ORL) S ORERR="Missing or invalid patient location" Q
"RTN","ORMGMRC",58,0)
 D DLG Q:$D(ORERR)  Q:'$D(ORDIALOG)
"RTN","ORMGMRC",59,0)
SN1 D EN^ORCSAVE K ^TMP("ORWORD",$J) ; setting status, xrefs
"RTN","ORMGMRC",60,0)
 I '$G(ORIFN) S ORERR="Cannot create new order" Q
"RTN","ORMGMRC",61,0)
 D RELEASE^ORCSAVE2(ORIFN,1,ORLOG,ORDUZ,ORNATR),SIGSTS^ORCSAVE2(ORIFN,1)
"RTN","ORMGMRC",62,0)
 S:'ORSTRT ORSTRT=$$NOW^XLFDT D DATES^ORCSAVE2(+ORIFN,ORSTRT)
"RTN","ORMGMRC",63,0)
 D:$G(ORSTS) STATUS^ORCSAVE2(ORIFN,ORSTS)
"RTN","ORMGMRC",64,0)
 I $G(ORL) S ORP(1)=ORIFN_";1^1" D PRINTS^ORWD1(.ORP,+ORL) ; chart copy
"RTN","ORMGMRC",65,0)
 S ^OR(100,ORIFN,4)=PKGIFN
"RTN","ORMGMRC",66,0)
 Q
"RTN","ORMGMRC",67,0)
 ;
"RTN","ORMGMRC",68,0)
DLG ; -- Build ORDIALOG(),ORDG from msg
"RTN","ORMGMRC",69,0)
 N OBR,USID,TYPE,OI,ZSV,J,OBX,WP,I
"RTN","ORMGMRC",70,0)
 S OBR=$$OBR I 'OBR!($E($G(@ORMSG@(OBR)),1,3)'="OBR") S ORERR="Missing OBR segment" Q
"RTN","ORMGMRC",71,0)
 S USID=$P(@ORMSG@(OBR),"|",5),TYPE=$S(USID["99CON":"CONSULT",1:"REQUEST")
"RTN","ORMGMRC",72,0)
 S ORDIALOG=$O(^ORD(101.41,"AB","GMRCOR "_TYPE,0))
"RTN","ORMGMRC",73,0)
 D GETDLG1^ORCD(ORDIALOG)
"RTN","ORMGMRC",74,0)
 S ORDIALOG($$PTR("URGENCY"),1)=ORURG
"RTN","ORMGMRC",75,0)
 S OI=$$ORDITEM^ORM(USID) I 'OI S ORERR="Invalid consult or procedure" Q
"RTN","ORMGMRC",76,0)
 S ORDIALOG($$PTR("ORDERABLE ITEM"),1)=OI
"RTN","ORMGMRC",77,0)
 S ZSV=$O(@ORMSG@(OBR)) I ZSV,$E(@ORMSG@(ZSV),1,3)="ZSV" D
"RTN","ORMGMRC",78,0)
 . N X1,X2 S X1=$P(@ORMSG@(ZSV),"|",2),X2=$P(@ORMSG@(ZSV),"|",3)
"RTN","ORMGMRC",79,0)
 . I TYPE="REQUEST" S ORDIALOG($$PTR("REQUEST SERVICE"),1)=+$P(X1,U,4)
"RTN","ORMGMRC",80,0)
 . I TYPE="CONSULT",$L(X2) S ORDIALOG($$PTR("FREE TEXT OI"),1)=X2
"RTN","ORMGMRC",81,0)
D1 S ORDIALOG($$PTR("CATEGORY"),1)=$G(ORCAT)
"RTN","ORMGMRC",82,0)
 S J=$P(@ORMSG@(OBR),"|",19),ORDIALOG($$PTR("PLACE OF CONSULTATION"),1)=$S(J="OC":"C",1:J)
"RTN","ORMGMRC",83,0)
 S ORDIALOG($$PTR("PROVIDER"),1)=$P(@ORMSG@(OBR),"|",20)
"RTN","ORMGMRC",84,0)
 S OBX=OBR F  S OBX=$O(@ORMSG@(OBX)) Q:OBX'>0  S J=$E(@ORMSG@(OBX),1,3) Q:J="ORC"  Q:J="MSH"  I J="OBX" D
"RTN","ORMGMRC",85,0)
 . N SEG,NAME,VALUE S SEG=@ORMSG@(OBX)
"RTN","ORMGMRC",86,0)
 . S NAME=$$UP^XLFSTR($P($P(SEG,"|",4),U,2)),VALUE=$P(SEG,"|",6)
"RTN","ORMGMRC",87,0)
 . I NAME="PROVISIONAL DIAGNOSIS" D  Q
"RTN","ORMGMRC",88,0)
 .. S:$P(SEG,"|",3)="CE" ORDIALOG($$PTR("CODE"),1)=$P(VALUE,U),VALUE=$P(VALUE,U,2)
"RTN","ORMGMRC",89,0)
 .. S ORDIALOG($$PTR("FREE TEXT"),1)=VALUE
"RTN","ORMGMRC",90,0)
 . S WP=$$PTR("WORD PROCESSING 1"),I=1,^TMP("ORWORD",$J,WP,1,I,0)=VALUE
"RTN","ORMGMRC",91,0)
 . S J=0 F  S J=$O(@ORMSG@(OBX,J)) Q:J'>0  S I=I+1,^TMP("ORWORD",$J,WP,1,I,0)=@ORMSG@(OBX,J)
"RTN","ORMGMRC",92,0)
 S:$G(I) ^TMP("ORWORD",$J,WP,1,0)="^^"_I_U_I_U_DT_U,ORDIALOG(WP,1)="^TMP(""ORWORD"",$J,"_WP_",1)"
"RTN","ORMGMRC",93,0)
 Q
"RTN","ORMGMRC",94,0)
 ;
"RTN","ORMGMRC",95,0)
OBR() ; -- Return subscript of RXE segment
"RTN","ORMGMRC",96,0)
 N X,I,SEG S X="",I=+ORC
"RTN","ORMGMRC",97,0)
 F  S I=$O(@ORMSG@(I)) Q:I'>0  S SEG=$E(@ORMSG@(I),1,3) Q:SEG="ORC"  I SEG="OBR" S X=I Q
"RTN","ORMGMRC",98,0)
 Q X
"RTN","ORMGMRC",99,0)
 ;
"RTN","ORMGMRC",100,0)
SC ; -- Status changed (i.e. scheduled)
"RTN","ORMGMRC",101,0)
 S:'$G(ORSTS) ORSTS=6 D STATUS^ORCSAVE2(+ORIFN,ORSTS) ; 6=active
"RTN","ORMGMRC",102,0)
 Q
"RTN","ORMGMRC",103,0)
 ;
"RTN","ORMGMRC",104,0)
STATUS(X) ; -- Returns ptr to Order Status file #100.01
"RTN","ORMGMRC",105,0)
 Q $S(X="DC":1,X="CM":2,X="HD":3,X="IP":5,X="SC":6,X="A":9,X="RP":12,X="CA":13,X="ZC":8,1:5)
"RTN","ORMGMRC",106,0)
 ;
"RTN","ORMGMRC",107,0)
RE ; -- Completed, w/results
"RTN","ORMGMRC",108,0)
 N I,SEG,DA,DR,DIE,X,Y
"RTN","ORMGMRC",109,0)
 S:'$G(ORSTS) ORSTS=2 D STATUS^ORCSAVE2(+ORIFN,ORSTS)
"RTN","ORMGMRC",110,0)
 S X="",DA=+ORIFN,DIE="^OR(100,"
"RTN","ORMGMRC",111,0)
 S DR="71////"_+$E($$NOW^XLFDT,1,12) D ^DIE
"RTN","ORMGMRC",112,0)
 S I=+ORC,X="" F  S I=$O(@ORMSG@(I)) Q:I<1  S SEG=$G(@ORMSG@(I)) Q:$E(SEG,1,3)="ORC"  I $E(SEG,1,3)="OBX",$P(SEG,"|",4)["SIG FINDINGS" S X=$P(SEG,"|",6) Q
"RTN","ORMGMRC",113,0)
 S $P(^OR(100,DA,7),U,2)=$S(X="Y":1,1:"")
"RTN","ORMGMRC",114,0)
 S:'$G(ORNP) ORNP=+$P($G(^OR(100,+ORIFN,0)),U,4)
"RTN","ORMGMRC",115,0)
 I $L($T(ADD^ORRCACK)) D ADD^ORRCACK(+ORIFN,ORNP) ;Ack stub for prov
"RTN","ORMGMRC",116,0)
 Q
"RTN","ORMGMRC",117,0)
 ;
"RTN","ORMGMRC",118,0)
UA ; -- Unable to Accept [ack]
"RTN","ORMGMRC",119,0)
 S ORDUZ="" I '$L(OREASON1),$L(OREASON) S OREASON1=OREASON
"RTN","ORMGMRC",120,0)
OC ; -- Cancelled/Denied
"RTN","ORMGMRC",121,0)
 S:'$L(ORNATR) ORNATR="X" ;Rejected
"RTN","ORMGMRC",122,0)
 S ^OR(100,+ORIFN,6)=$O(^ORD(100.02,"C",ORNATR,0))_U_ORDUZ_U_ORLOG_U_U_OREASON1
"RTN","ORMGMRC",123,0)
 D STATUS^ORCSAVE2(+ORIFN,13) I ORDCNTRL="OC" D UPDATE("DC") Q
"RTN","ORMGMRC",124,0)
UD ; -- Unable to discontinue [ack]
"RTN","ORMGMRC",125,0)
 N DA S DA=$P(ORIFN,";",2) I DA D
"RTN","ORMGMRC",126,0)
 . S $P(^OR(100,+ORIFN,8,DA,0),U,15)=13 ;request rejected
"RTN","ORMGMRC",127,0)
 . S:$L(OREASON1) ^OR(100,+ORIFN,8,DA,1)=OREASON1
"RTN","ORMGMRC",128,0)
 Q
"RTN","ORMGMRC",129,0)
 ;
"RTN","ORMGMRC",130,0)
OD ; -- Discontinued
"RTN","ORMGMRC",131,0)
 S ^OR(100,+ORIFN,6)=$S($L(ORNATR):$O(^ORD(100.02,"C",ORNATR,0)),1:"")_U_ORDUZ_U_ORLOG_U_U_OREASON1
"RTN","ORMGMRC",132,0)
 D STATUS^ORCSAVE2(+ORIFN,1),UPDATE("DC"):$L(ORNATR)
"RTN","ORMGMRC",133,0)
 Q
"RTN","ORMGMRC",134,0)
 ;
"RTN","ORMGMRC",135,0)
DR ; -- Discontinued [ack]
"RTN","ORMGMRC",136,0)
 D STATUS^ORCSAVE2(+ORIFN,1)
"RTN","ORMGMRC",137,0)
 Q
"RTN","ORMGMRC",138,0)
 ;
"RTN","ORMGMRC",139,0)
UPDATE(ORACT) ; -- continue processing
"RTN","ORMGMRC",140,0)
 N ORX,ORDA,ORP
"RTN","ORMGMRC",141,0)
 S ORX=$$CREATE^ORX1(ORNATR) D:ORX
"RTN","ORMGMRC",142,0)
 . S ORDA=$$ACTION^ORCSAVE(ORACT,+ORIFN,ORNP,OREASON1,ORLOG,ORDUZ)
"RTN","ORMGMRC",143,0)
 . I ORDA'>0 S ORERR="Cannot create new order action" Q
"RTN","ORMGMRC",144,0)
 . D RELEASE^ORCSAVE2(+ORIFN,ORDA,ORLOG,ORDUZ,ORNATR)
"RTN","ORMGMRC",145,0)
 . D SIGSTS^ORCSAVE2(+ORIFN,ORDA)
"RTN","ORMGMRC",146,0)
 . I $G(ORL) S ORP(1)=+ORIFN_";"_ORDA_"^1" D PRINTS^ORWD1(.ORP,+ORL)
"RTN","ORMGMRC",147,0)
 . S $P(^OR(100,+ORIFN,3),U,7)=ORDA
"RTN","ORMGMRC",148,0)
 I 'ORX,ORACT="DC",'$$ACTV^ORX1(ORNATR) S $P(^OR(100,+ORIFN,3),U,7)=0
"RTN","ORMGMRC",149,0)
 D:$G(ORACT)="DC" CANCEL^ORCSEND(+ORIFN)
"RTN","ORMGMRC",150,0)
 Q
"RTN","ORMGMRC",151,0)
 ;
"RTN","ORMGMRC",152,0)
PTR(X) ; -- Returns ptr to prompt in Order Dialog file #101.41
"RTN","ORMGMRC",153,0)
 Q $O(^ORD(101.41,"AB",$E("OR GTX "_X,1,63),0))
"RTN","ORMLR")
0^50^B52858454
"RTN","ORMLR",1,0)
ORMLR ; SLC/MKB - Process Lab ORM msgs ;11:59 AM  26 Jul 2000
"RTN","ORMLR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**3,92,153,174**;Dec 17, 1997
"RTN","ORMLR",3,0)
EN ; -- entry point for LR messages
"RTN","ORMLR",4,0)
 I '$L($T(@ORDCNTRL)) Q  ;S ORERR="Invalid order control code" Q
"RTN","ORMLR",5,0)
 I ORDCNTRL'="SN",ORDCNTRL'="ZC",ORDCNTRL'="ZP" D  Q:$L($G(ORERR))
"RTN","ORMLR",6,0)
 . I 'ORIFN!('$D(^OR(100,+ORIFN,0))) S ORERR="Invalid OE/RR order number" Q
"RTN","ORMLR",7,0)
 . S ORDUZ=DUZ,ORLOG=+$E($$NOW^XLFDT,1,12)
"RTN","ORMLR",8,0)
 S OREASON=$$REASON I 'ORNATR,OREASON S ORNATR=+$P($G(^ORD(100.03,+OREASON,0)),U,7)
"RTN","ORMLR",9,0)
 D @ORDCNTRL
"RTN","ORMLR",10,0)
 Q
"RTN","ORMLR",11,0)
 ;
"RTN","ORMLR",12,0)
STATUS(X) ; -- Returns Order Status for HL7 code X
"RTN","ORMLR",13,0)
 N Y S Y=$S(X="DC":1,X="CM":2,X="IP":5,X="SC":6,X="ZS":9,X="CA":13,1:"")
"RTN","ORMLR",14,0)
 Q Y
"RTN","ORMLR",15,0)
 ;
"RTN","ORMLR",16,0)
OK ; -- Order accepted, LR order # assigned [ack]
"RTN","ORMLR",17,0)
 S ^OR(100,+ORIFN,4)=PKGIFN ; LR identifier
"RTN","ORMLR",18,0)
 D STATUS^ORCSAVE2(+ORIFN,5) ; pending
"RTN","ORMLR",19,0)
 Q
"RTN","ORMLR",20,0)
 ;
"RTN","ORMLR",21,0)
ZC ; -- Convert existing 2.5 orders to 3.0 format
"RTN","ORMLR",22,0)
 S ORNATR="" I 'ORIFN!('$D(^OR(100,+ORIFN,0))) D  Q  ;create
"RTN","ORMLR",23,0)
 . K ORIFN D SN Q:'$G(ORIFN)  S ORDCNTRL="SN"
"RTN","ORMLR",24,0)
 . I ORSTOP,ORSTOP<$$NOW^XLFDT S $P(^OR(100,+ORIFN,3),U)=ORSTOP
"RTN","ORMLR",25,0)
 N ORDIALOG,I,X,OBR,NTE S ORIFN=+ORIFN
"RTN","ORMLR",26,0)
 S I=+ORC F  S I=$O(@ORMSG@(I)) Q:'I  S SEG=$E(@ORMSG@(I),1,3) Q:SEG="ORC"  Q:SEG="MSH"  I SEG="OBR" S OBR=I Q
"RTN","ORMLR",27,0)
 I '$G(OBR) S ORERR="Missing OBR segment" Q
"RTN","ORMLR",28,0)
 S ORDIALOG=+$O(^ORD(101.41,"AB","LR OTHER LAB TESTS",0))
"RTN","ORMLR",29,0)
 D GETDLG1^ORCD(ORDIALOG)
"RTN","ORMLR",30,0)
 S X=$$FIND^ORM(OBR,5),X=$$ORDITEM^ORM(X) I 'X S ORERR="Invalid test" Q
"RTN","ORMLR",31,0)
 S ORDIALOG($$PTR("ORDERABLE ITEM"),1)=X,X=$$FIND^ORM(OBR,16)
"RTN","ORMLR",32,0)
 S ORDIALOG($$PTR("COLLECTION SAMPLE"),1)=$P(X,";",4)
"RTN","ORMLR",33,0)
 S ORDIALOG($$PTR("SPECIMEN"),1)=$S($L($P(X,";")):+$O(^LAB(61,"C",$P(X,";"),0)),1:+$P(X,U,4))
"RTN","ORMLR",34,0)
 S X=$$FIND^ORM(OBR,28),ORDIALOG($$PTR("LAB URGENCY"),1)=+$P($P(X,U,6),";",2)
"RTN","ORMLR",35,0)
 S X=$$FIND^ORM(OBR,12),ORDIALOG($$PTR("COLLECTION TYPE"),1)=$S(X="L":"LC",X="O":"WC",X=2:"I",1:"SP")
"RTN","ORMLR",36,0)
ZC1 S NTE=$O(@ORMSG@(OBR)) I NTE,$E(@ORMSG@(NTE),1,3)="NTE" D
"RTN","ORMLR",37,0)
 . N LCNT,WP S WP=$$PTR("WORD PROCESSING 1") K ^TMP("ORWORD",$J)
"RTN","ORMLR",38,0)
 . S LCNT=1,^TMP("ORWORD",$J,WP,1,LCNT,0)=$P(@ORMSG@(NTE),"|",4)
"RTN","ORMLR",39,0)
 . S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S LCNT=LCNT+1,^TMP("ORWORD",$J,WP,1,LCNT,0)=@ORMSG@(NTE,I)
"RTN","ORMLR",40,0)
 . S ^TMP("ORWORD",$J,WP,1,0)="^^"_LCNT_U_LCNT_U_DT_U
"RTN","ORMLR",41,0)
 . S ORDIALOG(WP,1)="^TMP(""ORWORD"","_$J_","_WP_",1)"
"RTN","ORMLR",42,0)
 S ORDIALOG($$PTR("START DATE/TIME"),1)=ORSTRT
"RTN","ORMLR",43,0)
 S ^OR(100,ORIFN,4)=PKGIFN,$P(^(0),U,5)=+ORDIALOG_";ORD(101.41,"
"RTN","ORMLR",44,0)
 D RESPONSE^ORCSAVE ; save ORDIALOG() into ^(4.5)
"RTN","ORMLR",45,0)
 K ^TMP("ORWORD",$J)
"RTN","ORMLR",46,0)
 Q
"RTN","ORMLR",47,0)
 ;
"RTN","ORMLR",48,0)
SN ; -- New backdoor order: return NA msg w/ORIFN, or DE msg
"RTN","ORMLR",49,0)
 N X,ORDIALOG,ORDG,OBR,NTE,CMMT,OI,LCNT,I,ORSTS,LRSUB,ORNEW,ORP
"RTN","ORMLR",50,0)
 I ORDUZ,'$D(^VA(200,+ORDUZ,0)) S ORERR="Invalid entering person" Q
"RTN","ORMLR",51,0)
 ; I '$G(ORL) S ORERR="Missing or invalid patient location" Q
"RTN","ORMLR",52,0)
 S LRSUB=$E($P($P(@ORMSG@(+ORC),"|",4),U,2),3,4),ORDG=$$DGRP(LRSUB)
"RTN","ORMLR",53,0)
 S ORDIALOG="LR OTHER LAB TESTS" ; $S(LRSUB="AP",LRSUB="BB")
"RTN","ORMLR",54,0)
 S ORDIALOG=$O(^ORD(101.41,"AB",ORDIALOG,0)) D GETDLG1^ORCD(ORDIALOG)
"RTN","ORMLR",55,0)
 S ORDIALOG($$PTR("START DATE/TIME"),1)=ORSTRT
"RTN","ORMLR",56,0)
 S CMMT=$$PTR("WORD PROCESSING 1") K ^TMP("ORWORD",$J)
"RTN","ORMLR",57,0)
SN1 S OBR=$O(@ORMSG@(+ORC)) I 'OBR!($E($G(@ORMSG@(OBR)),1,3)'="OBR") S ORERR="Missing OBR segment" Q
"RTN","ORMLR",58,0)
 S X=$$FIND^ORM(OBR,5),OI=$$ORDITEM^ORM(X) I 'OI S ORERR="Invalid test" Q
"RTN","ORMLR",59,0)
 S ORDIALOG($$PTR("ORDERABLE ITEM"),1)=OI
"RTN","ORMLR",60,0)
 I LRSUB="BB" S ORDIALOG($$PTR("QUANTITY"),1)=+ORQT G SN2
"RTN","ORMLR",61,0)
 S X=$$FIND^ORM(OBR,16),ORDIALOG($$PTR("COLLECTION SAMPLE"),1)=$P(X,";",4)
"RTN","ORMLR",62,0)
 S ORDIALOG($$PTR("SPECIMEN"),1)=$S($L($P(X,";")):$O(^LAB(61,"C",$P(X,";"),0)),1:+$P(X,U,4))
"RTN","ORMLR",63,0)
 S X=+$P($P($$FIND^ORM(OBR,28),U,6),";",2),ORDIALOG($$PTR("LAB URGENCY"),1)=$S(X:X,1:9)
"RTN","ORMLR",64,0)
 S X=$$FIND^ORM(OBR,12),ORDIALOG($$PTR("COLLECTION TYPE"),1)=$S(X="L":"LC",X="O":"WC",X=2:"I",1:"SP")
"RTN","ORMLR",65,0)
SN2 S NTE=$O(@ORMSG@(+OBR)) I NTE,$E(@ORMSG@(NTE),1,3)="NTE" D
"RTN","ORMLR",66,0)
 . S LCNT=1,^TMP("ORWORD",$J,CMMT,1,LCNT,0)=$P(@ORMSG@(NTE),"|",4)
"RTN","ORMLR",67,0)
 . I $O(@ORMSG@(NTE,0)) S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S LCNT=LCNT+1,^TMP("ORWORD",$J,CMMT,1,LCNT,0)=@ORMSG@(NTE,I)
"RTN","ORMLR",68,0)
 . S ^TMP("ORWORD",$J,CMMT,1,0)="^^"_LCNT_U_LCNT_U_DT_U,ORDIALOG(CMMT,1)="^TMP(""ORWORD"",$J,"_CMMT_",1)"
"RTN","ORMLR",69,0)
SNQ D EN^ORCSAVE K ^TMP("ORWORD",$J)
"RTN","ORMLR",70,0)
 I '$G(ORIFN) S ORERR="Cannot create new order" Q
"RTN","ORMLR",71,0)
 D RELEASE^ORCSAVE2(ORIFN,1,ORLOG,ORDUZ,ORNATR),SIGSTS^ORCSAVE2(ORIFN,1)
"RTN","ORMLR",72,0)
 D:ORSTOP DATES^ORCSAVE2(ORIFN,,ORSTOP) ;Start date in order itself
"RTN","ORMLR",73,0)
 S ORSTS=$$STATUS(ORDSTS) D:ORSTS STATUS^ORCSAVE2(ORIFN,ORSTS)
"RTN","ORMLR",74,0)
 I ORDCNTRL="SN",$G(ORL) S ORP(1)=ORIFN_";1^1" D PRINTS^ORWD1(.ORP,+ORL)
"RTN","ORMLR",75,0)
 S ^OR(100,ORIFN,4)=PKGIFN
"RTN","ORMLR",76,0)
 Q
"RTN","ORMLR",77,0)
 ;
"RTN","ORMLR",78,0)
PTR(NAME) ; -- Returns ien of prompt NAME in Order Dialog file #101.41
"RTN","ORMLR",79,0)
 Q $O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORMLR",80,0)
 ;
"RTN","ORMLR",81,0)
DGRP(DG) ; -- Returns Display Group ptr based on Lab section
"RTN","ORMLR",82,0)
 N Y S:'$L($G(DG)) DG="CH" S Y=$O(^ORD(100.98,"B",DG,0))
"RTN","ORMLR",83,0)
 S:'Y Y=$O(^ORD(100.98,"B","LAB",0))
"RTN","ORMLR",84,0)
 Q Y
"RTN","ORMLR",85,0)
 ;
"RTN","ORMLR",86,0)
XX ; -- Changed: NOT IN USE
"RTN","ORMLR",87,0)
 D XX^ORMLR1
"RTN","ORMLR",88,0)
 Q
"RTN","ORMLR",89,0)
 ;
"RTN","ORMLR",90,0)
XR ; -- Changed [ack]: NOT IN USE
"RTN","ORMLR",91,0)
 N ORIG
"RTN","ORMLR",92,0)
 S ^OR(100,+ORIFN,4)=PKGIFN,ORIG=$P(^(3),U,5)
"RTN","ORMLR",93,0)
 D:ORIG STATUS^ORCSAVE2(ORIG,12)
"RTN","ORMLR",94,0)
 D STATUS^ORCSAVE2(+ORIFN,5) ; pending
"RTN","ORMLR",95,0)
 Q
"RTN","ORMLR",96,0)
 ;
"RTN","ORMLR",97,0)
ZP ; -- Purged
"RTN","ORMLR",98,0)
 Q:'ORIFN  Q:'$D(^OR(100,+ORIFN,0))
"RTN","ORMLR",99,0)
 S $P(^OR(100,+ORIFN,4),";",1,3)=";;" I "^5^6^"[(U_$P($G(^(3)),U,3)_U) D STATUS^ORCSAVE2(+ORIFN,$S($P(^(4),";",5):2,1:14)) ; Remove pkg reference, sts=lapsed if still active
"RTN","ORMLR",100,0)
 Q
"RTN","ORMLR",101,0)
 ;
"RTN","ORMLR",102,0)
ZR ; -- Purged as requested [ack]
"RTN","ORMLR",103,0)
 D DELETE^ORCSAVE2(+ORIFN)
"RTN","ORMLR",104,0)
 Q
"RTN","ORMLR",105,0)
 ;
"RTN","ORMLR",106,0)
ZU ; -- Unable to purge [ack]
"RTN","ORMLR",107,0)
 S $P(^OR(100,+ORIFN,3),U)=$$NOW^XLFDT ; update Last Activity
"RTN","ORMLR",108,0)
 Q
"RTN","ORMLR",109,0)
 ;
"RTN","ORMLR",110,0)
SC ; -- Status changed (collected)
"RTN","ORMLR",111,0)
 N ORSTS D DATES^ORCSAVE2(+ORIFN,ORSTRT,ORSTOP)
"RTN","ORMLR",112,0)
 S ORSTS=$$STATUS(ORDSTS) D:ORSTS STATUS^ORCSAVE2(+ORIFN,ORSTS)
"RTN","ORMLR",113,0)
 S:$L($P(OREASON,U,2)) ^OR(100,+ORIFN,8,1,1)=$P(OREASON,U,2)
"RTN","ORMLR",114,0)
 Q
"RTN","ORMLR",115,0)
 ;
"RTN","ORMLR",116,0)
RE ; -- Completed, w/results
"RTN","ORMLR",117,0)
 N ORSTS,ORX,I,SEG,DONE,X,Y
"RTN","ORMLR",118,0)
 S ORSTS=$$STATUS(ORDSTS) D:ORSTS STATUS^ORCSAVE2(+ORIFN,ORSTS)
"RTN","ORMLR",119,0)
 S ^OR(100,+ORIFN,4)=PKGIFN,ORX="" D  ;get Results D/T [from OBR]
"RTN","ORMLR",120,0)
 . N OBR S OBR=+$O(@ORMSG@(+ORC)),X=""
"RTN","ORMLR",121,0)
 . I OBR,$E($G(@ORMSG@(OBR)),1,3)="OBR" S X=$P(@ORMSG@(OBR),"|",23)
"RTN","ORMLR",122,0)
 . S X=$S(X:$$FMDATE^ORM(X),1:+$E($$NOW^XLFDT,1,12))
"RTN","ORMLR",123,0)
 . S $P(^OR(100,+ORIFN,7),U)=X,^OR(100,"ARS",ORVP,9999999-X,+ORIFN)=""
"RTN","ORMLR",124,0)
 S I=+ORC F  S I=$O(@ORMSG@(I)) Q:I<1  S SEG=$G(@ORMSG@(I)) Q:$E(SEG,1,3)="ORC"  I $E(SEG,1,3)="OBX",$L($P(SEG,"|",9)) D  Q:$G(DONE)  ;abnormal result
"RTN","ORMLR",125,0)
 . S X=+$P($P(SEG,"|",4),U,4),Y=$P($G(^LAB(60,X,.1)),U) ;DBIA #2387
"RTN","ORMLR",126,0)
 . S X=Y_"="_$P(SEG,"|",6) I $L(X)+$L(ORX)>75 S X="...",DONE=1
"RTN","ORMLR",127,0)
 . S ORX=ORX_$S($L(ORX):", ",1:"")_X
"RTN","ORMLR",128,0)
 S $P(^OR(100,+ORIFN,7),U,2,3)=$S($L(ORX):"1^"_ORX,1:"^")
"RTN","ORMLR",129,0)
 S:'$G(ORNP) ORNP=+$P($G(^OR(100,+ORIFN,0)),U,4)
"RTN","ORMLR",130,0)
 I $L($T(ADD^ORRCACK)) D ADD^ORRCACK(+ORIFN,ORNP) ;Ack stub for prov
"RTN","ORMLR",131,0)
 Q
"RTN","ORMLR",132,0)
 ;
"RTN","ORMLR",133,0)
OC ; -- Cancelled
"RTN","ORMLR",134,0)
 G:ORTYPE="ORR" UA S:ORNATR=+$O(^ORD(100.02,"C","A",0)) ORDUZ=""
"RTN","ORMLR",135,0)
 S ^OR(100,+ORIFN,6)=ORNATR_U_ORDUZ_U_ORLOG_U_$P(OREASON,U)_U_$E($P(OREASON,U,2),1,80)
"RTN","ORMLR",136,0)
 D UPDATE(1,"DC")
"RTN","ORMLR",137,0)
 Q
"RTN","ORMLR",138,0)
 ;
"RTN","ORMLR",139,0)
CR ; -- Cancelled [ack]
"RTN","ORMLR",140,0)
 D STATUS^ORCSAVE2(+ORIFN,1)
"RTN","ORMLR",141,0)
 Q
"RTN","ORMLR",142,0)
 ;
"RTN","ORMLR",143,0)
UA ; -- Unable to accept [ack]
"RTN","ORMLR",144,0)
UX ; -- Unable to change [ack]: NOT IN USE
"RTN","ORMLR",145,0)
 S:'ORNATR ORNATR=$O(^ORD(100.02,"C","X",0)) ;rejected
"RTN","ORMLR",146,0)
 S ^OR(100,+ORIFN,6)=ORNATR_U_U_ORLOG_U_$P(OREASON,U)_U_$E($P(OREASON,U,2),1,80)
"RTN","ORMLR",147,0)
 D STATUS^ORCSAVE2(+ORIFN,13)
"RTN","ORMLR",148,0)
UC ; -- Unable to cancel [ack]
"RTN","ORMLR",149,0)
DE ; -- Data Error [ack]
"RTN","ORMLR",150,0)
 N DA S DA=$P(ORIFN,";",2) Q:'DA
"RTN","ORMLR",151,0)
 S $P(^OR(100,+ORIFN,8,DA,0),U,15)=13 ;request rejected
"RTN","ORMLR",152,0)
 S:$L($P(OREASON,U,2)) ^OR(100,+ORIFN,8,DA,1)=$E($P(OREASON,U,2),1,240)
"RTN","ORMLR",153,0)
 Q
"RTN","ORMLR",154,0)
 ;
"RTN","ORMLR",155,0)
UPDATE(ORSTS,ORACT) ; -- continue processing
"RTN","ORMLR",156,0)
 N DA,ORX,ORCMMT,ORP
"RTN","ORMLR",157,0)
 D DATES^ORCSAVE2(+ORIFN,ORSTRT,ORSTOP)
"RTN","ORMLR",158,0)
 D:$G(ORSTS) STATUS^ORCSAVE2(+ORIFN,ORSTS)
"RTN","ORMLR",159,0)
 S ORCMMT=$E($P(OREASON,U,2),1,240),ORX=$$CREATE^ORX1(ORNATR) D:ORX
"RTN","ORMLR",160,0)
 . S DA=$$ACTION^ORCSAVE(ORACT,+ORIFN,ORNP,ORCMMT,ORLOG,ORDUZ)
"RTN","ORMLR",161,0)
 . I DA'>0 S ORERR="Cannot create new order action" Q
"RTN","ORMLR",162,0)
 . D RELEASE^ORCSAVE2(+ORIFN,DA,ORLOG,ORDUZ,ORNATR)
"RTN","ORMLR",163,0)
 . D SIGSTS^ORCSAVE2(+ORIFN,DA)
"RTN","ORMLR",164,0)
 . I $G(ORL) S ORP(1)=+ORIFN_";"_DA_"^1" D PRINTS^ORWD1(.ORP,+ORL)
"RTN","ORMLR",165,0)
 . S $P(^OR(100,+ORIFN,3),U,7)=DA
"RTN","ORMLR",166,0)
 I 'ORX,'$$ACTV^ORX1(ORNATR) S $P(^OR(100,+ORIFN,3),U,7)=0
"RTN","ORMLR",167,0)
 D:ORACT="DC" CANCEL^ORCSEND(+ORIFN)
"RTN","ORMLR",168,0)
 Q
"RTN","ORMLR",169,0)
 ;
"RTN","ORMLR",170,0)
REASON() ; -- Get reason from OREASON or NTE segments
"RTN","ORMLR",171,0)
 N NTE,CMMT,X,Y,I,L
"RTN","ORMLR",172,0)
 S NTE=+$O(@ORMSG@(+ORC)),CMMT=$P(OREASON,U,4,5)
"RTN","ORMLR",173,0)
 G:'NTE RQ G:$E(@ORMSG@(NTE),1,3)'="NTE" RQ ; no add'l comments
"RTN","ORMLR",174,0)
 S Y=$P(@ORMSG@(NTE),"|",4),I=0
"RTN","ORMLR",175,0)
 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S X=$G(@ORMSG@(NTE,I)),L=$L(Y)+1+$L(X) S:L'>240 Y=Y_" "_X I L>240 S Y=Y_" "_$E(X,1,239-$L(Y)) Q
"RTN","ORMLR",176,0)
 S $P(CMMT,U,2)=Y
"RTN","ORMLR",177,0)
RQ Q CMMT
"RTN","ORMRA")
0^51^B56134543
"RTN","ORMRA",1,0)
ORMRA ; SLC/MKB - Process Radiology ORM msgs ;2/21/02  15:44
"RTN","ORMRA",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**3,53,92,110,136,153,174**;Dec 17, 1997
"RTN","ORMRA",3,0)
 ;DBIA 2968 allows for reading ^DIC(34
"RTN","ORMRA",4,0)
EN ; -- entry point for RA messages
"RTN","ORMRA",5,0)
 I '$L($T(@ORDCNTRL)) Q  ;S ORERR="Invalid order control code" Q
"RTN","ORMRA",6,0)
 I ORDCNTRL'="SN",ORDCNTRL'="ZP",'ORIFN!('$D(^OR(100,+ORIFN,0))) S ORERR="Invalid OE/RR order number" Q
"RTN","ORMRA",7,0)
 S OREASON=$S($P(OREASON,U,6)="99RAR":$P(OREASON,U,5),1:$P(OREASON,U,2))
"RTN","ORMRA",8,0)
 S:'ORDUZ ORDUZ=DUZ S:'ORLOG ORLOG=+$E($$NOW^XLFDT,1,12)
"RTN","ORMRA",9,0)
 D @ORDCNTRL
"RTN","ORMRA",10,0)
 Q
"RTN","ORMRA",11,0)
 ;
"RTN","ORMRA",12,0)
ZP ; -- Purged
"RTN","ORMRA",13,0)
 Q:'ORIFN  Q:'$D(^OR(100,+ORIFN,0))  K ^OR(100,+ORIFN,4)
"RTN","ORMRA",14,0)
 ; - Set status=lapsed, if still active
"RTN","ORMRA",15,0)
 I "^3^5^6^8^"[(U_$P($G(^(3)),U,3)_U) D STATUS^ORCSAVE2(ORIFN,14)
"RTN","ORMRA",16,0)
 Q
"RTN","ORMRA",17,0)
 ;
"RTN","ORMRA",18,0)
ZR ; -- Purged as requested [ack]
"RTN","ORMRA",19,0)
 D DELETE^ORCSAVE2(+ORIFN)
"RTN","ORMRA",20,0)
 Q
"RTN","ORMRA",21,0)
 ;
"RTN","ORMRA",22,0)
ZU ; -- Unable to purge [ack]
"RTN","ORMRA",23,0)
 S $P(^OR(100,+ORIFN,3),U)=$$NOW^XLFDT ; update Last Activity
"RTN","ORMRA",24,0)
 Q
"RTN","ORMRA",25,0)
 ;
"RTN","ORMRA",26,0)
OK ; -- Order accepted, RA order # assigned [ack]
"RTN","ORMRA",27,0)
 N ORSTS,OBR S ^OR(100,+ORIFN,4)=PKGIFN,ORSTS=5 ; 5=pending
"RTN","ORMRA",28,0)
 ; Ck if also scheduled, else quit
"RTN","ORMRA",29,0)
 S OBR=$O(@ORMSG@(+ORC)) G:'OBR OKQ G:$E(@ORMSG@(OBR),1,3)'="OBR" OKQ
"RTN","ORMRA",30,0)
 S ORSTRT=$$FMDATE^ORM($P(@ORMSG@(OBR),"|",37))
"RTN","ORMRA",31,0)
 D:ORSTRT DATES^ORCSAVE2(+ORIFN,ORSTRT)
"RTN","ORMRA",32,0)
OKQ D STATUS^ORCSAVE2(ORIFN,ORSTS)
"RTN","ORMRA",33,0)
 Q
"RTN","ORMRA",34,0)
 ;
"RTN","ORMRA",35,0)
XX ; -- Change order
"RTN","ORMRA",36,0)
 N ORDIALOG,ORDG,ORDA,ORX,ORP S:'$L(ORNATR) ORNATR="S"
"RTN","ORMRA",37,0)
 D DLG Q:$D(ORERR)  Q:'$D(ORDIALOG)  S ORIFN=+ORIFN
"RTN","ORMRA",38,0)
 S ORDA=$$ACTION^ORCSAVE("XX",ORIFN,ORNP,OREASON,ORLOG,ORDUZ)
"RTN","ORMRA",39,0)
 I ORDA'>0 S ORERR="Cannot create new order action" Q
"RTN","ORMRA",40,0)
 ; -Update sts of order to active, last action to dc/edit:
"RTN","ORMRA",41,0)
 S ORX=+$P($G(^OR(100,ORIFN,3)),U,7)
"RTN","ORMRA",42,0)
 S:$P($G(^OR(100,ORIFN,8,ORX,0)),U,15)="" $P(^(0),U,15)=12
"RTN","ORMRA",43,0)
 S $P(^OR(100,ORIFN,3),U,7)=ORDA D STATUS^ORCSAVE2(ORIFN,6)
"RTN","ORMRA",44,0)
 D RELEASE^ORCSAVE2(ORIFN,ORDA,ORLOG,ORDUZ,ORNATR)
"RTN","ORMRA",45,0)
 ; -If unsigned edit, leave XX unsigned & mark ORX as Sig Not Req'd
"RTN","ORMRA",46,0)
 S ORSIG=$S($P($G(^OR(100,ORIFN,8,ORX,0)),U,4)'=2:1,1:0)
"RTN","ORMRA",47,0)
 D SIGSTS^ORCSAVE2(ORIFN,ORDA):ORSIG,SIGN^ORCSAVE2(ORIFN,,,5,ORX):'ORSIG
"RTN","ORMRA",48,0)
 ; -Update responses, get/save new order text:
"RTN","ORMRA",49,0)
 K ^OR(100,ORIFN,4.5) D RESPONSE^ORCSAVE,ORDTEXT^ORCSAVE1(ORIFN_";"_ORDA)
"RTN","ORMRA",50,0)
 S $P(^OR(100,ORIFN,8,ORDA,0),U,14)=ORDA
"RTN","ORMRA",51,0)
 I $G(ORL) S ORP(1)=+ORIFN_";"_ORDA_"^1" D PRINTS^ORWD1(.ORP,+ORL)
"RTN","ORMRA",52,0)
 Q
"RTN","ORMRA",53,0)
 ;
"RTN","ORMRA",54,0)
SN ; -- New backdoor order: return NA msg w/ORIFN, or DE msg
"RTN","ORMRA",55,0)
 N ORDIALOG,ORDG,ORP K ^TMP("ORWORD",$J) S:'$L(ORNATR) ORNATR="W"
"RTN","ORMRA",56,0)
 I ORDUZ,'$D(^VA(200,ORDUZ,0)) S ORERR="Invalid entering person" Q
"RTN","ORMRA",57,0)
 I '$D(^VA(200,ORNP,0)) S ORERR="Missing or invalid ordering provider" Q
"RTN","ORMRA",58,0)
 I '$G(ORL) S ORERR="Missing or invalid patient location" Q
"RTN","ORMRA",59,0)
 D DLG Q:$D(ORERR)  Q:'$D(ORDIALOG)
"RTN","ORMRA",60,0)
SNQ D EN^ORCSAVE K ^TMP("ORWORD",$J)
"RTN","ORMRA",61,0)
 I '$G(ORIFN) S ORERR="Cannot create new order" Q
"RTN","ORMRA",62,0)
 D RELEASE^ORCSAVE2(ORIFN,1,ORLOG,ORDUZ,ORNATR),SIGSTS^ORCSAVE2(ORIFN,1)
"RTN","ORMRA",63,0)
 D STATUS^ORCSAVE2(ORIFN,5) S ^OR(100,ORIFN,4)=PKGIFN
"RTN","ORMRA",64,0)
 I $G(ORL) S ORP(1)=ORIFN_";1^1" D PRINTS^ORWD1(.ORP,+ORL) ; chart copy
"RTN","ORMRA",65,0)
 Q
"RTN","ORMRA",66,0)
 ;
"RTN","ORMRA",67,0)
DLG ; -- Build ORDIALOG() from msg
"RTN","ORMRA",68,0)
 N OBR,OI,MODS,J,X,Y,ILOC,MODE,CH,CHI,OBX,NTE
"RTN","ORMRA",69,0)
 S ORDIALOG=$O(^ORD(101.41,"AB","RA OERR EXAM",0))
"RTN","ORMRA",70,0)
 D GETDLG1^ORCD(ORDIALOG)
"RTN","ORMRA",71,0)
 S ORDIALOG($$PTR("CATEGORY"),1)=$G(ORCAT)
"RTN","ORMRA",72,0)
 S ORDIALOG($$PTR("START DATE/TIME"),1)=ORSTRT
"RTN","ORMRA",73,0)
 S ORDIALOG($$PTR("URGENCY"),1)=ORURG
"RTN","ORMRA",74,0)
 S:$P(ORC,"|",12) ORDIALOG($$PTR("PROVIDER"),1)=+$P(ORC,"|",12)
"RTN","ORMRA",75,0)
D1 S OBR=$O(@ORMSG@(+ORC)) I 'OBR!($E($G(@ORMSG@(OBR)),1,3)'="OBR") S ORERR="Missing OBR segment" Q
"RTN","ORMRA",76,0)
 S OI=$$ORDITEM^ORM($P(@ORMSG@(OBR),"|",5))
"RTN","ORMRA",77,0)
 I 'OI S ORERR="Invalid procedure" Q
"RTN","ORMRA",78,0)
 S ORDIALOG($$PTR("ORDERABLE ITEM"),1)=OI
"RTN","ORMRA",79,0)
 S ORDG=$P($G(^ORD(101.43,+OI,"RA")),U,3) S:$L(ORDG) ORDG=+$O(^ORD(100.98,"B",ORDG,0)) I 'ORDG S ORDG=$P(^ORD(101.41,+ORDIALOG,0),U,5) ; Im Type
"RTN","ORMRA",80,0)
 S MODS=$P(@ORMSG@(OBR),"|",19) I $L(MODS) D
"RTN","ORMRA",81,0)
 . F J=1:1:$L(MODS,"~") S X=$P(MODS,"~",J) I $L(X) S Y=$O(^RAMIS(71.2,"B",X,0)) S:Y ORDIALOG($$PTR("MODIFIERS"),J)=Y
"RTN","ORMRA",82,0)
 S ILOC=+$P(@ORMSG@(OBR),"|",20),MODE=$P(@ORMSG@(OBR),"|",31)
"RTN","ORMRA",83,0)
 S:ILOC ORDIALOG($$PTR("IMAGING LOCATION"),1)=ILOC
"RTN","ORMRA",84,0)
 S ORDIALOG($$PTR("MODE OF TRANSPORT"),1)=$S(MODE="WALK":"A",MODE="CART":"S",1:$E(MODE))
"RTN","ORMRA",85,0)
 I ORDCNTRL="XX" S NTE=+$O(@ORMSG@(OBR)) I NTE,$E($G(@ORMSG@(NTE)),1,3)="NTE" S OREASON=$P(@ORMSG@(NTE),"|",4) ;Tech's Comments
"RTN","ORMRA",86,0)
D2 ; might the procedure be scheduled at this point ??  Not in spec
"RTN","ORMRA",87,0)
 S CH=$$PTR("WORD PROCESSING 1"),CHI=0
"RTN","ORMRA",88,0)
 S OBX=OBR F  S OBX=$O(@ORMSG@(OBX)) Q:OBX'>0  S J=$E(@ORMSG@(OBX),1,3) Q:J="ORC"  Q:J="MSH"  I J="OBX" D
"RTN","ORMRA",89,0)
 . N NAME,VALUE,X0 S VALUE=$P(@ORMSG@(OBX),"|",6)
"RTN","ORMRA",90,0)
 . S NAME=$$UP^XLFSTR($P($P(@ORMSG@(OBX),"|",4),U,2))
"RTN","ORMRA",91,0)
 . I NAME="CONTRACT/SHARING SOURCE" S X0=$G(^DIC(34,+VALUE,0)) S:$L(X0) ORDIALOG($$PTR(NAME),1)=+VALUE,ORDIALOG($$PTR("CATEGORY"),1)=$P(X0,U,2) Q
"RTN","ORMRA",92,0)
 . I NAME="RESEARCH SOURCE" S ORDIALOG($$PTR(NAME),1)=VALUE,ORDIALOG($$PTR("CATEGORY"),1)="R" Q
"RTN","ORMRA",93,0)
 . I NAME="PREGNANT" S ORDIALOG($$PTR(NAME),1)=VALUE Q
"RTN","ORMRA",94,0)
 . I NAME="PRE-OP SCHEDULED DATE/TIME" S ORDIALOG($$PTR(NAME),1)=$$FMDATE^ORM(VALUE) Q
"RTN","ORMRA",95,0)
 . S CHI=CHI+1,^TMP("ORWORD",$J,CH,1,CHI,0)=VALUE
"RTN","ORMRA",96,0)
 S:CHI ^TMP("ORWORD",$J,CH,1,0)="^^"_CHI_U_CHI_U_DT_U,ORDIALOG(CH,1)="^TMP(""ORWORD"",$J,"_CH_",1)"
"RTN","ORMRA",97,0)
 Q
"RTN","ORMRA",98,0)
 ;
"RTN","ORMRA",99,0)
PTR(X) ; -- Returns ptr to prompt in Order Dialog file #101.41
"RTN","ORMRA",100,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_X,1,63),0))
"RTN","ORMRA",101,0)
 ;
"RTN","ORMRA",102,0)
SC ; -- Status changed (scheduled, registered, or unverified)
"RTN","ORMRA",103,0)
 N ORSTS,OBR,OR3 ;110
"RTN","ORMRA",104,0)
 S ORSTS=$S(ORDSTS="ZR":6,ORDSTS="ZU":6,1:8),OR3=$G(^OR(100,+ORIFN,3)) ;110
"RTN","ORMRA",105,0)
 G:ORSTS=6 SCQ ;136  Done if active, else get scheduled data
"RTN","ORMRA",106,0)
 S OBR=$O(@ORMSG@(+ORC)) I 'OBR!($E($G(@ORMSG@(OBR)),1,3)'="OBR") S ORERR="Missing OBR segment" Q
"RTN","ORMRA",107,0)
 S ORSTRT=$$FMDATE^ORM($P(@ORMSG@(OBR),"|",37))
"RTN","ORMRA",108,0)
 D:ORSTRT DATES^ORCSAVE2(+ORIFN,ORSTRT)
"RTN","ORMRA",109,0)
 I $P(OR3,U,3)=3,$P($G(^OR(100,+ORIFN,8,+$P(OR3,U,7),0)),U,2)="HD" D RL ;If status is hold and current action is hold then release.  Added with 110
"RTN","ORMRA",110,0)
SCQ D STATUS^ORCSAVE2(ORIFN,ORSTS)
"RTN","ORMRA",111,0)
 Q
"RTN","ORMRA",112,0)
 ;
"RTN","ORMRA",113,0)
RE ; -- Completed, w/results
"RTN","ORMRA",114,0)
 N I,SEG,OBX
"RTN","ORMRA",115,0)
 D STATUS^ORCSAVE2(ORIFN,2)
"RTN","ORMRA",116,0)
 S OBX="" D  ;get Results D/T [from OBR]
"RTN","ORMRA",117,0)
 . N DA,DR,DIE,X,Y,OBR
"RTN","ORMRA",118,0)
 . S DA=+ORIFN,DIE="^OR(100,",OBR=+$O(@ORMSG@(+ORC)),X=""
"RTN","ORMRA",119,0)
 . I OBR,$E($G(@ORMSG@(OBR)),1,3)="OBR" S X=$P(@ORMSG@(OBR),"|",23)
"RTN","ORMRA",120,0)
 . S DR="71////"_$S(X:$$FMDATE^ORM(X),1:+$E($$NOW^XLFDT,1,12)) D ^DIE
"RTN","ORMRA",121,0)
 S I=+ORC F  S I=$O(@ORMSG@(I)) Q:I<1  S SEG=$G(@ORMSG@(I)) Q:$E(SEG,1,3)="ORC"  I $E(SEG,1,3)="OBX" S OBX=I_U_SEG Q  ;first one
"RTN","ORMRA",122,0)
 S $P(^OR(100,+ORIFN,7),U,2)=$S($P(OBX,"|",9)="A":1,1:"")
"RTN","ORMRA",123,0)
 S:'$G(ORNP) ORNP=+$P($G(^OR(100,+ORIFN,0)),U,4)
"RTN","ORMRA",124,0)
 I $L($T(ADD^ORRCACK)) D ADD^ORRCACK(+ORIFN,ORNP) ;Ack stub for prov
"RTN","ORMRA",125,0)
 Q
"RTN","ORMRA",126,0)
 ;
"RTN","ORMRA",127,0)
OH ; -- Held
"RTN","ORMRA",128,0)
 D UPDATE(3,"HD")
"RTN","ORMRA",129,0)
 Q
"RTN","ORMRA",130,0)
 ;
"RTN","ORMRA",131,0)
OC ; -- Cancelled/Unable to accept [ack]
"RTN","ORMRA",132,0)
UA ; -- Unable to accept [ack]
"RTN","ORMRA",133,0)
 S:'$L(ORNATR) ORNATR="X" ;Rejected
"RTN","ORMRA",134,0)
 S ^OR(100,+ORIFN,6)=$O(^ORD(100.02,"C",ORNATR,0))_U_U_ORLOG_U_U_OREASON
"RTN","ORMRA",135,0)
 D STATUS^ORCSAVE2(ORIFN,13)
"RTN","ORMRA",136,0)
UD ; -- Unable to discontinue [ack]
"RTN","ORMRA",137,0)
 N DA S DA=+$P(ORIFN,";",2) I DA D
"RTN","ORMRA",138,0)
 . S $P(^OR(100,+ORIFN,8,DA,0),U,15)=13 ;Request rejected
"RTN","ORMRA",139,0)
 . S:$L(OREASON) ^OR(100,+ORIFN,8,DA,1)=OREASON
"RTN","ORMRA",140,0)
 Q
"RTN","ORMRA",141,0)
 ;
"RTN","ORMRA",142,0)
OD ; -- Discontinued
"RTN","ORMRA",143,0)
 S:$G(DGPMT) ORDUZ="" ;auto-dc on movement
"RTN","ORMRA",144,0)
 S ^OR(100,+ORIFN,6)=$S($L(ORNATR):$O(^ORD(100.02,"C",ORNATR,0)),1:"")_U_ORDUZ_U_ORLOG_U_U_OREASON
"RTN","ORMRA",145,0)
 D UPDATE(1,"DC")
"RTN","ORMRA",146,0)
 Q
"RTN","ORMRA",147,0)
 ;
"RTN","ORMRA",148,0)
DR ; -- Discontinued [ack]
"RTN","ORMRA",149,0)
 D STATUS^ORCSAVE2(ORIFN,1)
"RTN","ORMRA",150,0)
 Q
"RTN","ORMRA",151,0)
 ;
"RTN","ORMRA",152,0)
UPDATE(ORSTS,ORACT) ; -- continue processing
"RTN","ORMRA",153,0)
 N ORX,ORDA,ORP D:$G(ORSTS) STATUS^ORCSAVE2(ORIFN,ORSTS)
"RTN","ORMRA",154,0)
 S ORX=$$CREATE^ORX1(ORNATR) D:ORX
"RTN","ORMRA",155,0)
 . S ORDA=$$ACTION^ORCSAVE(ORACT,+ORIFN,ORNP,OREASON,ORLOG,ORDUZ)
"RTN","ORMRA",156,0)
 . I ORDA'>0 S ORERR="Cannot create new order action" Q
"RTN","ORMRA",157,0)
 . D RELEASE^ORCSAVE2(+ORIFN,ORDA,ORLOG,ORDUZ,ORNATR)
"RTN","ORMRA",158,0)
 . D SIGSTS^ORCSAVE2(+ORIFN,ORDA)
"RTN","ORMRA",159,0)
 . I $G(ORL) S ORP(1)=+ORIFN_";"_ORDA_"^1" D PRINTS^ORWD1(.ORP,+ORL)
"RTN","ORMRA",160,0)
 . S $P(^OR(100,+ORIFN,3),U,7)=ORDA
"RTN","ORMRA",161,0)
 I 'ORX D  ;no new action created
"RTN","ORMRA",162,0)
 . I ORACT="DC" S:'$$ACTV^ORX1(ORNATR) $P(^OR(100,+ORIFN,3),U,7)=0 Q
"RTN","ORMRA",163,0)
 . S:ORACT="HD"&$L(OREASON) ^OR(100,+ORIFN,8,1,1)=OREASON ;pend/sch only
"RTN","ORMRA",164,0)
 D:ORACT="DC" CANCEL^ORCSEND(+ORIFN)
"RTN","ORMRA",165,0)
 Q
"RTN","ORMRA",166,0)
 ;
"RTN","ORMRA",167,0)
RL ;Release hold --entire section added with patch 110
"RTN","ORMRA",168,0)
 S ^OR(100,+ORIFN,8,$P(OR3,U,7),2)=ORLOG_"^"_ORDUZ  ;Set release hold date/time and release hold user
"RTN","ORMRA",169,0)
 S ORNATR=$S($L(ORNATR):ORNATR,1:$P(^OR(100,+ORIFN,8,$P(OR3,U,7),0),U,12)) ;set nature of order for release equal to nature of order for hold if it doesn't exist
"RTN","ORMRA",170,0)
 I $G(ORSTS)="" S ORSTS=6
"RTN","ORMRA",171,0)
 D UPDATE(ORSTS,"RL")
"RTN","ORMRA",172,0)
 Q
"RTN","ORQRY")
0^53^B69278095
"RTN","ORQRY",1,0)
ORQRY ; SLC/MKB/JDL - Order Query utilities ;3/17/03  14:45
"RTN","ORQRY",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**153,174**;Dec 17, 1997
"RTN","ORQRY",3,0)
 ;
"RTN","ORQRY",4,0)
 ;
"RTN","ORQRY",5,0)
PP(DFN,PROV) ; -- Returns 1 or 0, if PROV is prim prov for DFN
"RTN","ORQRY",6,0)
 N X,Y I '$G(DFN)!'$G(PROV) Q ""
"RTN","ORQRY",7,0)
 S X=$$OUTPTPR^SDUTL3(+DFN),Y=$S(+X=+PROV:1,1:0)
"RTN","ORQRY",8,0)
 Q Y
"RTN","ORQRY",9,0)
 ;
"RTN","ORQRY",10,0)
ACT(DFN,BEG,END,LOC) ; -- Returns 1 or 0, if recent activity for DFN
"RTN","ORQRY",11,0)
 ;  BEG = beginning date [default = DT-1yr]
"RTN","ORQRY",12,0)
 ;  END = ending date [default = DT]
"RTN","ORQRY",13,0)
 ;  LOC(IEN) = list of clinic IENs from #44 [default = all]
"RTN","ORQRY",14,0)
 N X,YY,VASD,VAERR,IDT,DA
"RTN","ORQRY",15,0)
 N VSTH,IX,JX
"RTN","ORQRY",16,0)
 S DFN=+$G(DFN),YY=0 I '$G(DFN) Q ""
"RTN","ORQRY",17,0)
 S BEG=$G(BEG,DT-10000),END=$G(END,DT) ;default=last year
"RTN","ORQRY",18,0)
 I END<BEG S X=END,END=BEG,BEG=X
"RTN","ORQRY",19,0)
 I '$D(LOC) D  G:YY ACTQ ;check inpatient, Rx data
"RTN","ORQRY",20,0)
 . ;curr inpt
"RTN","ORQRY",21,0)
 . I $G(^DPT(DFN,.105)) S YY=1 Q
"RTN","ORQRY",22,0)
 . S X=+$O(^DGPM("APRD",DFN,BEG))
"RTN","ORQRY",23,0)
 . ; admission
"RTN","ORQRY",24,0)
 . I X,X'>END S YY=1 Q
"RTN","ORQRY",25,0)
 . ;Rx
"RTN","ORQRY",26,0)
 . D OCL^PSOORRL(DFN,BEG,END) I $O(^TMP("PS",$J,0)) S YY=1 Q
"RTN","ORQRY",27,0)
 S VSTH="",(IX,JX)=0
"RTN","ORQRY",28,0)
 D VST^ORWCV(.VSTH,DFN,BEG,END)
"RTN","ORQRY",29,0)
 F  S IX=$O(VSTH(IX)) Q:'IX  D
"RTN","ORQRY",30,0)
 . F  S JX=$O(LOC(JX)) Q:'JX  D
"RTN","ORQRY",31,0)
 . . I +$P($G(VSTH(IX)),";",3)=JX S YY=1 Q
"RTN","ORQRY",32,0)
 I YY=1 G ACTQ
"RTN","ORQRY",33,0)
 S IDT=BEG-.0001 F  S IDT=$O(^SCE("ADFN",DFN,IDT)) Q:IDT<1!(IDT>END)  D  Q:YY  ;IA #2065
"RTN","ORQRY",34,0)
 . I '$D(LOC) S YY=1 Q
"RTN","ORQRY",35,0)
 . S DA=0 F  S DA=+$O(^SCE("ADFN",DFN,IDT,DA)) Q:DA<1  I $D(LOC(+$P($G(^SCE(DA,0)),U,4))) S YY=1 Q
"RTN","ORQRY",36,0)
ACTQ K ^UTILITY("VASD",$J),^TMP("PS",$J)
"RTN","ORQRY",37,0)
 Q YY
"RTN","ORQRY",38,0)
 ;
"RTN","ORQRY",39,0)
BYPT(ORY,DFN,QRY) ; -- Returns report data in @ORY based on QRY parameters
"RTN","ORQRY",40,0)
 Q:'$G(DFN)  N PAT,ORYPAT,VA,VADM,VAIN,VAERR ;M ^XTMP("ORQRY",$G(DUZ)_";"_$H)=QRY
"RTN","ORQRY",41,0)
 S ORY=$G(ORY,"^TMP($J)"),DFN=+DFN D OERR^VADPT
"RTN","ORQRY",42,0)
 S ORYPAT("Patient.DFN")=DFN,PAT=DFN_";DPT("
"RTN","ORQRY",43,0)
 S ORYPAT("Patient.Age")=VADM(4),ORYPAT("Patient.Name")=VADM(1)
"RTN","ORQRY",44,0)
 S ORYPAT("Patient.Last4")=$E(VADM(1))_VA("BID")
"RTN","ORQRY",45,0)
 S ORYPAT("Patient.Ward")=$S(VAIN(4):$P(VAIN(4),U,2)_" "_VAIN(5),1:"")
"RTN","ORQRY",46,0)
 I $D(QRY("Document")) D DOCMTS
"RTN","ORQRY",47,0)
 I $D(QRY("Order")) D ORDERS
"RTN","ORQRY",48,0)
 I $D(QRY("Consult")) D CSLTS
"RTN","ORQRY",49,0)
 I $D(QRY("Visit")) D VISITS
"RTN","ORQRY",50,0)
 Q
"RTN","ORQRY",51,0)
 ;
"RTN","ORQRY",52,0)
DOCMTS ; -- Find documents
"RTN","ORQRY",53,0)
 N DOCMT
"RTN","ORQRY",54,0)
 M DOCMT=QRY("Document")
"RTN","ORQRY",55,0)
 D DOCDT^ORQRY01(.DOCMT)
"RTN","ORQRY",56,0)
 D QUERY^TIUQRY(ORY,.DOCMT,.ORYPAT)
"RTN","ORQRY",57,0)
 I $D(DOCMT("NegativeSearch")) D NEGATE("Documents")
"RTN","ORQRY",58,0)
 Q
"RTN","ORQRY",59,0)
 ;
"RTN","ORQRY",60,0)
CSLTS ; -- Find consults (treats consults as special case of orders)
"RTN","ORQRY",61,0)
 N ORDER,ORGRP,SDATE,EDATE,ORCNT,X,CSLTMODE
"RTN","ORQRY",62,0)
 M ORDER=QRY("Consult") S ORCNT=0,CSLTMODE=1
"RTN","ORQRY",63,0)
 I '$D(ORDER("DisplayGroup")) D
"RTN","ORQRY",64,0)
 . S ORDER("DisplayGroup",$O(^ORD(100.98,"B","CSLT",0)))=""
"RTN","ORQRY",65,0)
 G ORDERS1
"RTN","ORQRY",66,0)
 ;
"RTN","ORQRY",67,0)
ORDERS ; -- Find orders
"RTN","ORQRY",68,0)
 N ORDER,ORGRP,SDATE,EDATE,ORCNT,I
"RTN","ORQRY",69,0)
 M ORDER=QRY("Order") S ORCNT=0
"RTN","ORQRY",70,0)
ORDERS1 N ORCBO I $D(ORDER("ItemCombo1"))>1 S (ORCBO(1),ORCBO(2))=-1
"RTN","ORQRY",71,0)
 I $D(ORDER("DisplayGroup"))>1 S I=0 F  S I=$O(ORDER("DisplayGroup",I)) Q:'I  D GRP(I)
"RTN","ORQRY",72,0)
 D DATES,@$S($D(ORDER("Abnormal")):"ARSX",1:"ACTX") ;$G(ORDER("View")):"AVWX"
"RTN","ORQRY",73,0)
 ; if looking for a combination and both not there, remove the orders
"RTN","ORQRY",74,0)
 I $D(ORCBO),((ORCBO(1)=-1)!(ORCBO(2)=-1)) D
"RTN","ORQRY",75,0)
 . D RMOV($S($G(CSLTMODE):"CST",1:"ORD"))
"RTN","ORQRY",76,0)
 . S ORCNT=0
"RTN","ORQRY",77,0)
 S:'$D(CSLTMODE) @ORY@(0,"Orders")=ORCNT
"RTN","ORQRY",78,0)
 S:$D(CSLTMODE) @ORY@(0,"Consults")=ORCNT
"RTN","ORQRY",79,0)
 I $D(ORDER("NegativeSearch")) D NEGATE($S($G(CSLTMODE):"Consults",1:"Orders"))
"RTN","ORQRY",80,0)
 Q
"RTN","ORQRY",81,0)
 ;
"RTN","ORQRY",82,0)
GRP(DG) ; -- Setup display group DG in ORGRP()
"RTN","ORQRY",83,0)
 N STK,MEM
"RTN","ORQRY",84,0)
 S ORGRP(DG)="",STK=1,STK(STK)=DG_"^0",STK(0)=0,MEM=0
"RTN","ORQRY",85,0)
 F  S MEM=$O(^ORD(100.98,+STK(STK),1,MEM)) D @$S(+MEM'>0:"POP",1:"PROC") Q:STK<1
"RTN","ORQRY",86,0)
 Q
"RTN","ORQRY",87,0)
POP S STK=STK-1,MEM=$P(STK(STK),"^",2)
"RTN","ORQRY",88,0)
 Q
"RTN","ORQRY",89,0)
PROC S $P(STK(STK),"^",2)=MEM,DG=$P(^ORD(100.98,+STK(STK),1,MEM,0),"^",1)
"RTN","ORQRY",90,0)
 S ORGRP(DG)="",STK=STK+1,STK(STK)=DG_"^0",MEM=0
"RTN","ORQRY",91,0)
 Q
"RTN","ORQRY",92,0)
 ;
"RTN","ORQRY",93,0)
DATES ; -- Return SDATE and EDATE from TimeFrame
"RTN","ORQRY",94,0)
 ;    [Inverted for rev-chron search]
"RTN","ORQRY",95,0)
 N X S X=$O(ORDER("TimeFrame","")),SDATE=$P(X,":"),EDATE=$P(X,":",2)
"RTN","ORQRY",96,0)
 I EDATE S EDATE=$S($L(EDATE,".")=2:EDATE+.0001,1:EDATE+1)
"RTN","ORQRY",97,0)
 I SDATE S SDATE=$S($L(SDATE,".")=2:SDATE-.0001,1:SDATE)
"RTN","ORQRY",98,0)
 S SDATE=9999999-$S(SDATE:SDATE,1:0),EDATE=9999999-$S(EDATE:EDATE,1:9999998)
"RTN","ORQRY",99,0)
 S X=EDATE,EDATE=SDATE,SDATE=X
"RTN","ORQRY",100,0)
 Q
"RTN","ORQRY",101,0)
 ;
"RTN","ORQRY",102,0)
AVWX ; -- use ORQ1 for order view
"RTN","ORQRY",103,0)
 N X,DG,MULT,ORLIST,ORI,IFN,ACT
"RTN","ORQRY",104,0)
 S X=$O(ORDER("TimeFrame","")),SDATE=$P(X,":"),EDATE=$P(X,":",2)
"RTN","ORQRY",105,0)
 S DG=+$O(^ORD(100.98,"B","ALL",0)),X=$G(ORDER("View"))
"RTN","ORQRY",106,0)
 S MULT=$S("^1^6^8^9^10^11^13^14^20^22^"[(U_X_U):1,1:0)
"RTN","ORQRY",107,0)
 D EN^ORQ1(PAT,,X,,SDATE,EDATE,,MULT)
"RTN","ORQRY",108,0)
 S ORI=0 F  S ORI=$O(^TMP("ORR",$J,ORLIST,ORI)) Q:ORI'>0  S IFN=$G(^(ORI)),ACT=$P(IFN,";",2) D CONT
"RTN","ORQRY",109,0)
 K ^TMP("ORR",$J,ORLIST)
"RTN","ORQRY",110,0)
 Q
"RTN","ORQRY",111,0)
 ;
"RTN","ORQRY",112,0)
ARSX ; -- loop on ARS xref
"RTN","ORQRY",113,0)
 N IDX,IFN
"RTN","ORQRY",114,0)
 S IDX="^OR(100,""ARS"",PAT,SDATE)"
"RTN","ORQRY",115,0)
 F  S IDX=$Q(@IDX) Q:$P(IDX,"""",4)'=PAT  Q:$P(IDX,",",4)>EDATE  D
"RTN","ORQRY",116,0)
 . S IFN=+$P(IDX,",",5) D CONT
"RTN","ORQRY",117,0)
 Q
"RTN","ORQRY",118,0)
ACTX ; -- loop on "ACT" xref
"RTN","ORQRY",119,0)
 N IDX,IFN,ACT
"RTN","ORQRY",120,0)
 S IDX="^OR(100,""ACT"",PAT,SDATE)"
"RTN","ORQRY",121,0)
 F  S IDX=$Q(@IDX)  Q:$P(IDX,"""",4)'=PAT  Q:$P(IDX,",",4)>EDATE  D
"RTN","ORQRY",122,0)
 . S IFN=+$P(IDX,",",6),ACT=+$P(IDX,",",7)
"RTN","ORQRY",123,0)
 . I $P($G(^OR(100,IFN,8,ACT,0)),U,2)="NW"!$D(ORDER("SignStatus")) D CONT
"RTN","ORQRY",124,0)
 Q
"RTN","ORQRY",125,0)
CONT ; -- Proceed with checking order ORDER() & IFN [from ARS,ACT]
"RTN","ORQRY",126,0)
 N X,X0,X3,X7,X8,ACTN
"RTN","ORQRY",127,0)
 S X0=$G(^OR(100,IFN,0)),X3=$G(^(3)),X7=$G(^(7))
"RTN","ORQRY",128,0)
 Q:$P(X3,U,8)  I $P(X3,U,9),'$P($G(^OR(100,+$P(X3,U,9),3)),U,8) Q
"RTN","ORQRY",129,0)
 ;I $L($P(X0,U,17)),"^10^11^"[(U_STS_U) S X=$$LAPSED^OREVNTX($P(X0,U,17))
"RTN","ORQRY",130,0)
 I $D(ORGRP) Q:'$D(ORGRP(+$P(X0,U,11)))
"RTN","ORQRY",131,0)
 I $D(ORDER("Requestor")) Q:'$D(ORDER("Requestor",+$P(X0,U,4)))  ;X8?
"RTN","ORQRY",132,0)
 I $D(ORDER("Status")) Q:'$D(ORDER("Status",+$P(X3,U,3)))
"RTN","ORQRY",133,0)
 I $D(ORDER("Abnormal")) Q:'$P(X7,U,2)
"RTN","ORQRY",134,0)
 I $D(ORDER("Orderable")) Q:'$$OI(IFN)
"RTN","ORQRY",135,0)
 S ACTN=$S($G(ACT):ACT,1:$$LAST(IFN)),X8=$G(^OR(100,IFN,8,ACTN,0))
"RTN","ORQRY",136,0)
 S TXT=+$P(X8,U,14) I $D(ORDER("Text")) Q:'$$TEXT(IFN,TXT)
"RTN","ORQRY",137,0)
 I $D(ORDER("SignStatus")) Q:'$L($P(X8,U,4))  Q:'$D(ORDER("SignStatus",+$P(X8,U,4)))
"RTN","ORQRY",138,0)
 ;I $D(ORDER("Requestor")) Q:'$D(ORDER("Requestor",+$P(X8,U,3)))
"RTN","ORQRY",139,0)
 D SAVEORD
"RTN","ORQRY",140,0)
 Q
"RTN","ORQRY",141,0)
 ;
"RTN","ORQRY",142,0)
LAST(IFN) ; -- Returns DA of current/latest action for order IFN
"RTN","ORQRY",143,0)
 ;      (Only NW or XX actions?)
"RTN","ORQRY",144,0)
 N Y S Y=+$P($G(^OR(100,IFN,3)),U,7)
"RTN","ORQRY",145,0)
 I Y<1 S Y=+$O(^OR(100,IFN,8,"?"),-1)
"RTN","ORQRY",146,0)
 Q Y
"RTN","ORQRY",147,0)
 ;
"RTN","ORQRY",148,0)
OI(IFN) ; -- Return 1 or 0, if IFN contains any requested OI's
"RTN","ORQRY",149,0)
 N ITM,Y S Y=0
"RTN","ORQRY",150,0)
 S ITM=0 F  S ITM=$O(ORDER("Orderable",ITM)) Q:ITM<1  I $D(^OR(100,IFN,.1,"B",ITM)) S Y=1 Q
"RTN","ORQRY",151,0)
 Q Y
"RTN","ORQRY",152,0)
 ;
"RTN","ORQRY",153,0)
TEXT(IFN,TXT) ; -- Return 1 or 0, if IFN;TXT text contains requested string
"RTN","ORQRY",154,0)
 N X,Y,I S Y=0
"RTN","ORQRY",155,0)
 S X="" F  S X=$O(ORDER("Text",X)) Q:X=""  S I=0 D
"RTN","ORQRY",156,0)
 . F  S I=+$O(^OR(100,IFN,8,TXT,.1,I)) Q:I<1  I $$UP^XLFSTR($G(^(I,0)))[$$UP^XLFSTR(X) S Y=1 Q
"RTN","ORQRY",157,0)
 Q Y
"RTN","ORQRY",158,0)
 ;
"RTN","ORQRY",159,0)
SAVEORD ; -- Save order number in @ORY@("ORD:IFN;ACTN")
"RTN","ORQRY",160,0)
 ;    Called from CONT: also uses X0,X3,X8,TXT,ORYPAT
"RTN","ORQRY",161,0)
 N ID,X
"RTN","ORQRY",162,0)
 S ID=$S($D(CSLTMODE):"CST:",1:"ORD:")_IFN_";"_ACTN,ORCNT=ORCNT+1
"RTN","ORQRY",163,0)
 S @ORY@(ID,"Order.Datetime")=$S($P(X0,U,8):$P(X0,U,8),1:$P(X8,U,16))
"RTN","ORQRY",164,0)
 S @ORY@(ID,"Order.DisplayGroup")=$P($G(^ORD(100.98,+$P(X0,U,11),0)),U)
"RTN","ORQRY",165,0)
 S @ORY@(ID,"Order.Provider")=$P($G(^VA(200,+$P(X0,U,4),0)),U)
"RTN","ORQRY",166,0)
 S X=$P(X8,U,4),@ORY@(ID,"Order.Signature")=$S(X=0!(X=4):"on chart",X=1:"electronically signed",X=2:"unsigned",X=3:"not required",X=5:"cancelled",X=6:"service correction",X=7:"digitally signed",1:"")
"RTN","ORQRY",167,0)
 S @ORY@(ID,"Order.Status")=$$LOW^XLFSTR($P($G(^ORD(100.01,+$P(X3,U,3),0)),U))
"RTN","ORQRY",168,0)
 S @ORY@(ID,"Order.Abnormal")=$S($P(X7,U,2):"YES",X7:"NO",1:"")
"RTN","ORQRY",169,0)
 S @ORY@(ID,"Order.Finding")=$P(X7,U,3)
"RTN","ORQRY",170,0)
 S @ORY@(ID,"Order.Text")=$$BLDTXT(IFN,TXT)
"RTN","ORQRY",171,0)
 M @ORY@(ID)=ORYPAT
"RTN","ORQRY",172,0)
 I $D(ORCBO) D SETCBO(IFN)
"RTN","ORQRY",173,0)
 Q
"RTN","ORQRY",174,0)
BLDTXT(IFN,TXT) ; -- Return concatenated order text up to 245 chars
"RTN","ORQRY",175,0)
 N I,ALL,PART,MAX S ALL="",MAX=0
"RTN","ORQRY",176,0)
 S I=0 F  S I=$O(^OR(100,IFN,8,TXT,.1,I)) Q:'I  D  Q:MAX
"RTN","ORQRY",177,0)
 . S PART=$G(^OR(100,IFN,8,TXT,.1,I,0))
"RTN","ORQRY",178,0)
 . I ($L(ALL)+$L(PART))<245 S ALL=ALL_$S($L(ALL):" ",1:"")_PART
"RTN","ORQRY",179,0)
 . E  S MAX=1
"RTN","ORQRY",180,0)
 I MAX S ALL=ALL_"..."
"RTN","ORQRY",181,0)
 Q ALL
"RTN","ORQRY",182,0)
 ;
"RTN","ORQRY",183,0)
SETCBO(IFN) ; -- Set flags when looking for combinations of orderable items
"RTN","ORQRY",184,0)
 N I,OI
"RTN","ORQRY",185,0)
 S I=0 F  S I=$O(^OR(100,IFN,.1,I)) Q:'I  D
"RTN","ORQRY",186,0)
 . S OI=+^OR(100,IFN,.1,I,0)
"RTN","ORQRY",187,0)
 . I $D(ORDER("ItemCombo1",OI)) S ORCBO(1)=1
"RTN","ORQRY",188,0)
 . I $D(ORDER("ItemCombo2",OI)) S ORCBO(2)=1
"RTN","ORQRY",189,0)
 Q
"RTN","ORQRY",190,0)
 ;
"RTN","ORQRY",191,0)
VISITS ; -- Find clinic visits
"RTN","ORQRY",192,0)
 ;    Save in @ORY@("VST:TYPE;DT;LOC")
"RTN","ORQRY",193,0)
 N VISIT,X,SDATE,EDATE,ORV,ORCNT,I,ID,VTYPE
"RTN","ORQRY",194,0)
 M VISIT=QRY("Visit")
"RTN","ORQRY",195,0)
 S X=$O(VISIT("TimeFrame","")),SDATE=$P(X,":"),EDATE=$P(X,":",2)
"RTN","ORQRY",196,0)
 S SDATE=SDATE-.0001 S:$L(EDATE,".")<2 EDATE=EDATE+.9999
"RTN","ORQRY",197,0)
 D VST^ORWCV(.ORV,DFN,SDATE,EDATE,1) S ORCNT=0
"RTN","ORQRY",198,0)
 S I=0 F  S I=+$O(ORV(I)) Q:I<1  D
"RTN","ORQRY",199,0)
 . S X=ORV(I) Q:'$$ISVALID(X)
"RTN","ORQRY",200,0)
 . Q:$P(X,";",2)>(EDATE+1)
"RTN","ORQRY",201,0)
 . S VTYPE=$P(ORV(I),";")
"RTN","ORQRY",202,0)
 . S ID="VST:"_$P(X,U),ORCNT=ORCNT+1
"RTN","ORQRY",203,0)
 . S @ORY@(ID,"Visit.Datetime")=$P(ID,";",2)
"RTN","ORQRY",204,0)
 . S @ORY@(ID,"Visit.Location")=$P(X,U,3)
"RTN","ORQRY",205,0)
 . S @ORY@(ID,"Visit.NoShow")=$S($E(X)'="A":"",$$UP^XLFSTR($P(X,U,4))["NO-SHOW":"YES",1:"NO")
"RTN","ORQRY",206,0)
 . S:VTYPE'="I" @ORY@(ID,"Visit.Status")=$P(X,U,4)
"RTN","ORQRY",207,0)
 . M @ORY@(ID)=ORYPAT
"RTN","ORQRY",208,0)
 S @ORY@(0,"Visits")=ORCNT
"RTN","ORQRY",209,0)
 I $D(VISIT("NegativeSearch")) D NEGATE("Visits")
"RTN","ORQRY",210,0)
 Q
"RTN","ORQRY",211,0)
 ;
"RTN","ORQRY",212,0)
ISVALID(VST) ; -- True: valid visit data
"RTN","ORQRY",213,0)
 N IX,VSTID,ISVAL
"RTN","ORQRY",214,0)
 S VSTID=+$P(VST,";",3)
"RTN","ORQRY",215,0)
 S (IX,ISVAL)=0
"RTN","ORQRY",216,0)
 F  S IX=$O(VISIT("Location",IX)) Q:'IX  D
"RTN","ORQRY",217,0)
 . I IX=VSTID S ISVAL=1 Q
"RTN","ORQRY",218,0)
 S:'$D(VISIT("Location")) ISVAL=1
"RTN","ORQRY",219,0)
 Q ISVAL
"RTN","ORQRY",220,0)
 ;
"RTN","ORQRY",221,0)
NEGATE(SRCHITM) ; -- set report to return nodes only when nothing found
"RTN","ORQRY",222,0)
 N ID,RTNCNT,PRE
"RTN","ORQRY",223,0)
 I SRCHITM="Consults"  S ID="PTC:"_DFN,PRE="CST"
"RTN","ORQRY",224,0)
 I SRCHITM="Orders"    S ID="PTO:"_DFN,PRE="ORD"
"RTN","ORQRY",225,0)
 I SRCHITM="Documents" S ID="PTD:"_DFN,PRE="DOC"
"RTN","ORQRY",226,0)
 I SRCHITM="Visits"    S ID="PTV:"_DFN,PRE="VST"
"RTN","ORQRY",227,0)
 S RTNCNT=@ORY@(0,SRCHITM)
"RTN","ORQRY",228,0)
 I RTNCNT=0 D
"RTN","ORQRY",229,0)
 . M @ORY@(ID)=ORYPAT
"RTN","ORQRY",230,0)
 . S @ORY@(ID,"Patient.NoneFound")=SRCHITM
"RTN","ORQRY",231,0)
 . S @ORY@(0,SRCHITM)=1
"RTN","ORQRY",232,0)
 E  D
"RTN","ORQRY",233,0)
 . D RMOV(PRE)
"RTN","ORQRY",234,0)
 . S @ORY@(0,SRCHITM)=0
"RTN","ORQRY",235,0)
 Q
"RTN","ORQRY",236,0)
 ;
"RTN","ORQRY",237,0)
RMOV(PRE) ; -- Remove nodes based on ID prefix
"RTN","ORQRY",238,0)
 N ID
"RTN","ORQRY",239,0)
 S ID="" F  S ID=$O(@ORY@(ID)) Q:ID=""  I $P(ID,":")=PRE K @ORY@(ID)
"RTN","ORQRY",240,0)
 Q
"RTN","ORQRY01")
0^48^B6247232
"RTN","ORQRY01",1,0)
ORQRY01 ;SLC/JDL - Order query utility ;6/10/03 13:17
"RTN","ORQRY01",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**153,174**;Dec 17, 1997
"RTN","ORQRY01",3,0)
 ;
"RTN","ORQRY01",4,0)
DOCDT(DOCS) ;Date range for TIU
"RTN","ORQRY01",5,0)
 N XDT,SDATE,EDATE
"RTN","ORQRY01",6,0)
 S XDT=$O(DOCS("Reference",""))
"RTN","ORQRY01",7,0)
 Q:'$L(XDT)
"RTN","ORQRY01",8,0)
 S SDATE=$P(XDT,":"),EDATE=$P(XDT,":",2)
"RTN","ORQRY01",9,0)
 S:SDATE=-1 SDATE=0
"RTN","ORQRY01",10,0)
 I EDATE=-1 S EDATE=9999999+EDATE
"RTN","ORQRY01",11,0)
 E  S EDATE=EDATE+1
"RTN","ORQRY01",12,0)
 K DOCS("Reference",XDT)
"RTN","ORQRY01",13,0)
 S DOCS("Reference",SDATE_":"_EDATE)=""
"RTN","ORQRY01",14,0)
 Q
"RTN","ORQRY01",15,0)
CLINPTS(ORY,CLIN,ORBDATE,OREDATE) ; RETURN LIST OF PTS W/CLINIC APPT W/IN DT RNG
"RTN","ORQRY01",16,0)
 ;Copied from CLINPTS^ORQPTQ2 without maximum limitation
"RTN","ORQRY01",17,0)
 S ORY="^TMP(""ORCLINPT"",$J)"
"RTN","ORQRY01",18,0)
 K @ORY
"RTN","ORQRY01",19,0)
 I +$G(CLIN)<1 S @ORY@(1)="^No clinic identified" Q 
"RTN","ORQRY01",20,0)
 I $$ACTLOC^ORWU(CLIN)'=1 S @ORY@(1)="^Clinic is inactive or Occasion Of Service" Q
"RTN","ORQRY01",21,0)
 N DFN,NAME,I,J,X,ORJ,ORSRV,ORNOWDT,CHKX,CHKIN,ORC,CLNAM
"RTN","ORQRY01",22,0)
 S ORNOWDT=$$NOW^XLFDT
"RTN","ORQRY01",23,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORQRY01",24,0)
 S DFN=0,I=1
"RTN","ORQRY01",25,0)
 I ORBDATE="" S ORBDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC START DATE",1,"E"))
"RTN","ORQRY01",26,0)
 I OREDATE="" S OREDATE=$$UP^XLFSTR($$GET^XPAR("USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG","ORLP DEFAULT CLINIC STOP DATE",1,"E"))
"RTN","ORQRY01",27,0)
 ;CONVERT ORBDATE AND OREDATE INTO FILEMAN DATE/TIME
"RTN","ORQRY01",28,0)
 D DT^DILF("T",ORBDATE,.ORBDATE,"","")
"RTN","ORQRY01",29,0)
 D DT^DILF("T",OREDATE,.OREDATE,"","")
"RTN","ORQRY01",30,0)
 I (ORBDATE=-1)!(OREDATE=-1) S @ORY@(1)="^Error in date range." Q 
"RTN","ORQRY01",31,0)
 S OREDATE=$P(OREDATE,".")_.5  ;ADD 1/2 DAY TO END DATE
"RTN","ORQRY01",32,0)
 ;access to SC global granted under DBIA #518:
"RTN","ORQRY01",33,0)
 S ORJ=ORBDATE F  S ORJ=$O(^SC(+CLIN,"S",ORJ)) Q:ORJ<1!(ORJ>OREDATE)  D
"RTN","ORQRY01",34,0)
 .I $L($G(^SC(+CLIN,"S",ORJ,1,0))) D
"RTN","ORQRY01",35,0)
 ..S J=0 F  S J=$O(^SC(+CLIN,"S",ORJ,1,J)) Q:+J<1  D
"RTN","ORQRY01",36,0)
 ...S ORC=$P(^SC(+CLIN,"S",ORJ,1,J,0),U,9)
"RTN","ORQRY01",37,0)
 ...Q:ORC="C"  ; cancelled clinic availability
"RTN","ORQRY01",38,0)
 ...;
"RTN","ORQRY01",39,0)
 ...S DFN=+$G(^SC(+CLIN,"S",ORJ,1,J,0))
"RTN","ORQRY01",40,0)
 ...S X=$G(^DPT(DFN,"S",ORJ,0)) I +X'=CLIN Q  ; appt cancelled/resched
"RTN","ORQRY01",41,0)
 ...;
"RTN","ORQRY01",42,0)
 ...; quit if appt cancelled or no show:
"RTN","ORQRY01",43,0)
 ...I $P(X,U,2)'="NT",($P(X,U,2)["C")!($P(X,U,2)["N") Q
"RTN","ORQRY01",44,0)
 ...;
"RTN","ORQRY01",45,0)
 ...S @ORY@(I)=DFN_"^"_$P(^DPT(DFN,0),"^")_"^"_+CLIN_"^"_ORJ,I=I+1
"RTN","ORQRY01",46,0)
 S:'$D(@ORY) @ORY@(1)="^No appointments."
"RTN","ORQRY01",47,0)
 Q
"RTN","ORRHCQ")
0^45^B54191395
"RTN","ORRHCQ",1,0)
ORRHCQ ; SLC/KCM/JLI - CPRS Query Tools - Utilities ;2/1/03  11:10
"RTN","ORRHCQ",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**153,174**;Dec 17, 1997
"RTN","ORRHCQ",3,0)
 ;
"RTN","ORRHCQ",4,0)
SETUP(ITR,QRY) ; Setup the query
"RTN","ORRHCQ",5,0)
 ; use ^TMP("ORRHCQ",$J,"QRY") for the query
"RTN","ORRHCQ",6,0)
 ; use ^TMP("ORRHCQ",$J,"COL") for the columns
"RTN","ORRHCQ",7,0)
 ; use ^TMP("ORRHCQD",$J) for the query data
"RTN","ORRHCQ",8,0)
 D CLEAR(.OK)
"RTN","ORRHCQ",9,0)
 N I,X,NAM,VAL,CID,ICOL,QROOT,DTRNG,CSLTGRP S ICOL=0,ITR=0,CSLTGRP=0
"RTN","ORRHCQ",10,0)
 S I=0 F  S I=$O(QRY(I)) Q:'I  D
"RTN","ORRHCQ",11,0)
 . S NAM=$P(QRY(I),"="),VAL=$P(QRY(I),"=",2,99)
"RTN","ORRHCQ",12,0)
 . ; if time range, convert relative to actual fileman times
"RTN","ORRHCQ",13,0)
 . S CID=+$O(^ORD(102.22,"B",NAM,0))
"RTN","ORRHCQ",14,0)
 . I +CID S:$P(^ORD(102.22,CID,0),U,2)=2 VAL=$$RNG2FM^ORRHCU(VAL)
"RTN","ORRHCQ",15,0)
 . I $L(VAL) S ^TMP("ORRHCQ",$J,"QRY",$P(NAM,"."),$P(NAM,".",2),VAL)=""
"RTN","ORRHCQ",16,0)
 . I NAM="Report.Column" S ICOL=ICOL+1,^TMP("ORRHCQ",$J,"COL",ICOL)=VAL
"RTN","ORRHCQ",17,0)
 ; when looking for combination of items, create full list to pass to query
"RTN","ORRHCQ",18,0)
 S QROOT="^TMP(""ORRHCQ"",$J,""QRY"")"
"RTN","ORRHCQ",19,0)
 I $D(@QROOT@("Order","ItemCombo1"))>1 D
"RTN","ORRHCQ",20,0)
 . M @QROOT@("Order","Orderable")=@QROOT@("Order","ItemCombo1")
"RTN","ORRHCQ",21,0)
 . M @QROOT@("Order","Orderable")=@QROOT@("Order","ItemCombo2")
"RTN","ORRHCQ",22,0)
 I $D(@QROOT@("Consult","ItemCombo1"))>1 D
"RTN","ORRHCQ",23,0)
 . M @QROOT@("Consult","Orderable")=@QROOT@("Consult","ItemCombo1")
"RTN","ORRHCQ",24,0)
 . M @QROOT@("Consult","Orderable")=@QROOT@("Consult","ItemCombo2")
"RTN","ORRHCQ",25,0)
 I $D(@QROOT@("Consult","DisplayGroup"))>1 D
"RTN","ORRHCQ",26,0)
 . S CSLTGRP=$O(^ORD(100.98,"B","CSLT",0))
"RTN","ORRHCQ",27,0)
 . I CSLTGRP=$O(@QROOT@("Consult","DisplayGroup",0)) Q
"RTN","ORRHCQ",28,0)
 . M @QROOT@("Consult","Orderable")=@QROOT@("Consult","DisplayGroup")
"RTN","ORRHCQ",29,0)
 . K @QROOT@("Consult","DisplayGroup")
"RTN","ORRHCQ",30,0)
 ; set up actual dates for clinic list sources
"RTN","ORRHCQ",31,0)
 S X=""
"RTN","ORRHCQ",32,0)
 F  S X=$O(@QROOT@("Patient","ListSource",X)) Q:X=""  I $E(X)="c" D
"RTN","ORRHCQ",33,0)
 . S DTRNG=$P(X,":",3,4),DTRNG=$$RNG2FM^ORRHCU(DTRNG)
"RTN","ORRHCQ",34,0)
 . K @QROOT@("Patient","ListSource",X)
"RTN","ORRHCQ",35,0)
 . S @QROOT@("Patient","ListSource",$P(X,":",1,2)_":"_DTRNG)=""
"RTN","ORRHCQ",36,0)
 ; set up date ranges for search items based on general date range
"RTN","ORRHCQ",37,0)
 S DTRNG=$O(@QROOT@("Search","DateRange",0))
"RTN","ORRHCQ",38,0)
 I $D(@QROOT@("Document")) S @QROOT@("Document","Reference",DTRNG)=""
"RTN","ORRHCQ",39,0)
 I $D(@QROOT@("Order"))    S @QROOT@("Order","TimeFrame",DTRNG)=""
"RTN","ORRHCQ",40,0)
 I $D(@QROOT@("Consult"))  S @QROOT@("Consult","TimeFrame",DTRNG)=""
"RTN","ORRHCQ",41,0)
 I $D(@QROOT@("Visit"))    S @QROOT@("Visit","TimeFrame",DTRNG)=""
"RTN","ORRHCQ",42,0)
 S ^TMP("ORRHCQ",$J,"TOT")=0
"RTN","ORRHCQ",43,0)
 S ITR=$$NXTITER("")
"RTN","ORRHCQ",44,0)
 Q
"RTN","ORRHCQ",45,0)
ADDTO(IEN,CLINDT) ;Add active location to lst
"RTN","ORRHCQ",46,0)
 N IEN42
"RTN","ORRHCQ",47,0)
 S IEN42=0
"RTN","ORRHCQ",48,0)
 I ($P($G(^SC(IEN,0)),U,3)="C"),$$ACTLOC^ORWU(IEN) D
"RTN","ORRHCQ",49,0)
 . S @QROOT@("Patient","ListSource","c:"_IEN_":"_CLINDT)=""
"RTN","ORRHCQ",50,0)
 I ($P($G(^SC(IEN,0)),U,3)="W"),$$ACTLOC^ORWU(IEN) D
"RTN","ORRHCQ",51,0)
 . S IEN42=$G(^SC(IEN,42))
"RTN","ORRHCQ",52,0)
 . S:IEN42 @QROOT@("Patient","ListSource","w:"_IEN42_":")=""
"RTN","ORRHCQ",53,0)
 Q
"RTN","ORRHCQ",54,0)
WCFDIV(DIVLST) ;Get wards/clinics for division
"RTN","ORRHCQ",55,0)
 N XXI,XXJ,NNN,CDTR
"RTN","ORRHCQ",56,0)
 S (XXI,NNN)=0,CDTR=""
"RTN","ORRHCQ",57,0)
 F  S XXI=$O(DIVLST(XXI)) Q:'XXI  D
"RTN","ORRHCQ",58,0)
 . S CDTR=$P(DIVLST(XXI),":",2,3)
"RTN","ORRHCQ",59,0)
 . S XXJ=0
"RTN","ORRHCQ",60,0)
 . F  S XXJ=$O(^SC(XXJ)) Q:'XXJ  D
"RTN","ORRHCQ",61,0)
 . . I $P(^SC(XXJ,0),U,4)=+DIVLST(XXI) D ADDTO(XXJ,CDTR)
"RTN","ORRHCQ",62,0)
 Q
"RTN","ORRHCQ",63,0)
DODIV ; find Wards/Clinics for divisions
"RTN","ORRHCQ",64,0)
 N XI,XJ,NN,WCLST,DIVLST,DIVPTR
"RTN","ORRHCQ",65,0)
 S (XI,XJ,DIVLST)="",(NN,DIVPTR)=0
"RTN","ORRHCQ",66,0)
 F  S XI=$O(@QROOT@("Patient","ListSource",XI)) Q:XI=""  I $E(XI)="d" D
"RTN","ORRHCQ",67,0)
 . S NN=NN+1,DIVLST(NN)=$P(XI,":",2,4)
"RTN","ORRHCQ",68,0)
 . K @QROOT@("Patient","ListSource",XI)
"RTN","ORRHCQ",69,0)
 Q:$D(DIVLST)=1
"RTN","ORRHCQ",70,0)
 S XI=""
"RTN","ORRHCQ",71,0)
 F  S XJ=$O(@QROOT@("Patient","ListSource",XJ)) Q:XJ=""  I "cw"[$E(XJ) D
"RTN","ORRHCQ",72,0)
 . S DIVPTR=$P($G(^SC($P(XJ,":",2),0)),U,4) Q:'DIVPTR
"RTN","ORRHCQ",73,0)
 . F  S XI=$O(DIVLST(XI)) Q:'XI  D
"RTN","ORRHCQ",74,0)
 . . I DIVPTR=+DIVLST(XI) K @QROOT@("Patient","ListSource",XJ)
"RTN","ORRHCQ",75,0)
 D WCFDIV(.DIVLST)
"RTN","ORRHCQ",76,0)
 Q
"RTN","ORRHCQ",77,0)
CLEAR(OK) ; Clear/Cancel the query
"RTN","ORRHCQ",78,0)
 K ^TMP("ORRHCQ",$J),^TMP("ORRHCQD",$J)  ;LW UNCOMMENT
"RTN","ORRHCQ",79,0)
 K ^TMP("ORRHCQB",$J),^TMP("ORRHCQS",$J) ;LW UNCOMMENT
"RTN","ORRHCQ",80,0)
 S OK=1
"RTN","ORRHCQ",81,0)
 Q
"RTN","ORRHCQ",82,0)
NXTITER(X) ; Return the iterator for the next patient
"RTN","ORRHCQ",83,0)
 ; ITER=Subscript;DFN;Item#
"RTN","ORRHCQ",84,0)
 N SUB,ITM,DFNITM
"RTN","ORRHCQ",85,0)
 S SUB=$P(X,";",1),ITM=$P(X,";",3)
"RTN","ORRHCQ",86,0)
 F  D  Q:+DFNITM  Q:SUB=""  ; loop until DFN or no subscripts
"RTN","ORRHCQ",87,0)
 . S DFNITM=$$NXTDFN(SUB,ITM)
"RTN","ORRHCQ",88,0)
 . Q:+DFNITM
"RTN","ORRHCQ",89,0)
 . S SUB=$O(^TMP("ORRHCQ",$J,"QRY","Patient","ListSource",SUB))
"RTN","ORRHCQ",90,0)
 . Q:SUB=""
"RTN","ORRHCQ",91,0)
 . D SETPTS(SUB)
"RTN","ORRHCQ",92,0)
 . S ITM=0
"RTN","ORRHCQ",93,0)
 Q:+DFNITM=0 ""
"RTN","ORRHCQ",94,0)
 Q SUB_";"_DFNITM
"RTN","ORRHCQ",95,0)
 ;
"RTN","ORRHCQ",96,0)
NXTDFN(SUB,ITM) ; Return the next patient^item within a subscript
"RTN","ORRHCQ",97,0)
 Q:SUB="" 0
"RTN","ORRHCQ",98,0)
 N DFN S DFN=""
"RTN","ORRHCQ",99,0)
 I $E(SUB)="r" D
"RTN","ORRHCQ",100,0)
 . N RC,ITR
"RTN","ORRHCQ",101,0)
 . M ITR=^TMP("ORRHCQ",$J,"PTLST",SUB,"ITR")
"RTN","ORRHCQ",102,0)
 . S RC=$$NEXTPAT^RORAPI01(.ITR)
"RTN","ORRHCQ",103,0)
 . M ^TMP("ORRHCQ",$J,"PTLST",SUB,"ITR")=ITR
"RTN","ORRHCQ",104,0)
 . S DFN=$P(RC,U),ITM=0
"RTN","ORRHCQ",105,0)
 E  D
"RTN","ORRHCQ",106,0)
 . S ITM=$O(^TMP("ORRHCQ",$J,"PTLST",SUB,+ITM))
"RTN","ORRHCQ",107,0)
 . I ITM S DFN=+^TMP("ORRHCQ",$J,"PTLST",SUB,ITM)
"RTN","ORRHCQ",108,0)
 Q DFN_";"_ITM
"RTN","ORRHCQ",109,0)
 ;
"RTN","ORRHCQ",110,0)
SETPTS(SUB) ; Set up to iterate through a patient list
"RTN","ORRHCQ",111,0)
 N LST
"RTN","ORRHCQ",112,0)
 I $E(SUB)="c" D CLINPTS^ORQRY01(.LST,$P(SUB,":",2),$P(SUB,":",3),$P(SUB,":",4)) M:$D(@LST)>1 ^TMP("ORRHCQ",$J,"PTLST",SUB)=@LST Q
"RTN","ORRHCQ",113,0)
 I $E(SUB)="w" D BYWARD^ORWPT(.LST,$P(SUB,":",2))
"RTN","ORRHCQ",114,0)
 I $E(SUB)="t" D TEAMPTS^ORQPTQ1(.LST,$P(SUB,":",2))
"RTN","ORRHCQ",115,0)
 I $E(SUB)="s" D SPECPTS^ORQPTQ2(.LST,$P(SUB,":",2))
"RTN","ORRHCQ",116,0)
 I $E(SUB)="p" D PROVPTS^ORQPTQ2(.LST,$P(SUB,":",2))
"RTN","ORRHCQ",117,0)
 I $D(LST)>1 M ^TMP("ORRHCQ",$J,"PTLST",SUB)=LST Q
"RTN","ORRHCQ",118,0)
 ;
"RTN","ORRHCQ",119,0)
 N ITR
"RTN","ORRHCQ",120,0)
 I ($E(SUB)="r"),'($$PATITER^RORAPI01(.ITR,$P(SUB,":",2),$P(SUB,":",3))) D
"RTN","ORRHCQ",121,0)
 . M ^TMP("ORRHCQ",$J,"PTLST",SUB,"ITR")=ITR
"RTN","ORRHCQ",122,0)
 Q
"RTN","ORRHCQ",123,0)
QRYITR(VAL,ORRITR) ; Do query for the current iterator
"RTN","ORRHCQ",124,0)
 ; VAL=PtSearched^RecordsFound^Iterator
"RTN","ORRHCQ",125,0)
 S VAL=$$PTSCRN($P(ORRITR,";",2))
"RTN","ORRHCQ",126,0)
 I VAL S $P(VAL,U,2)=$$QRYPT($P(ORRITR,";",2))
"RTN","ORRHCQ",127,0)
 S $P(VAL,U,3)=$$NXTITER(ORRITR)
"RTN","ORRHCQ",128,0)
 Q
"RTN","ORRHCQ",129,0)
 ;
"RTN","ORRHCQ",130,0)
PTSCRN(PATID) ; Return 1 if should continue with this patient
"RTN","ORRHCQ",131,0)
 Q:$D(^TMP("ORRHCQ",$J,"DFN",PATID)) 0
"RTN","ORRHCQ",132,0)
 N PRILST,LOCLST,DATRNG,CONT
"RTN","ORRHCQ",133,0)
 M PRILST=^TMP("ORRHCQ",$J,"QRY","Patient","Primary")
"RTN","ORRHCQ",134,0)
 M LOCLST=^TMP("ORRHCQ",$J,"QRY","Patient","Location")
"RTN","ORRHCQ",135,0)
 S DATRNG=$O(^TMP("ORRHCQ",$J,"QRY","Patient","DateRange",0)),CONT=1
"RTN","ORRHCQ",136,0)
 ;
"RTN","ORRHCQ",137,0)
 ; check if pt has primary provider in the list
"RTN","ORRHCQ",138,0)
 I $D(PRILST)>1 D
"RTN","ORRHCQ",139,0)
 . N FND,IPP S FND=0,IPP=0
"RTN","ORRHCQ",140,0)
 . F  S IPP=$O(PRILST(IPP)) Q:'IPP  S FND=$$PP^ORQRY(PATID,IPP) Q:FND
"RTN","ORRHCQ",141,0)
 . I 'FND S CONT=0
"RTN","ORRHCQ",142,0)
 Q:CONT=0 0
"RTN","ORRHCQ",143,0)
 ;
"RTN","ORRHCQ",144,0)
 ; check if pt has visit at during date range at optional location
"RTN","ORRHCQ",145,0)
 I $L(DATRNG) D
"RTN","ORRHCQ",146,0)
 . S:$D(LOCLST) CONT=$$ACT^ORQRY(PATID,$P(DATRNG,":"),$P(DATRNG,":",2),.LOCLST)
"RTN","ORRHCQ",147,0)
 . S:'$D(LOCLST) CONT=$$ACT^ORQRY(PATID,$P(DATRNG,":"),$P(DATRNG,":",2))
"RTN","ORRHCQ",148,0)
 I CONT S ^TMP("ORRHCQ",$J,"DFN",PATID)=""
"RTN","ORRHCQ",149,0)
 Q CONT
"RTN","ORRHCQ",150,0)
 ;
"RTN","ORRHCQ",151,0)
QRYPT(PATID) ; Search for records and return the number found
"RTN","ORRHCQ",152,0)
 N QRY,ROOT,CNT
"RTN","ORRHCQ",153,0)
 K ^TMP("ORRHCQP",$J)
"RTN","ORRHCQ",154,0)
 S ROOT="^TMP(""ORRHCQP"",$J)"
"RTN","ORRHCQ",155,0)
 M QRY=^TMP("ORRHCQ",$J,"QRY")
"RTN","ORRHCQ",156,0)
 D BYPT^ORQRY(ROOT,PATID,.QRY)
"RTN","ORRHCQ",157,0)
 S CNT=$G(^TMP("ORRHCQP",$J,0,"Documents"))+$G(^("Orders"))+$G(^("Visits"))+$G(^("Consults"))
"RTN","ORRHCQ",158,0)
 S ^TMP("ORRHCQ",$J,"TOT")=^TMP("ORRHCQ",$J,"TOT")+CNT
"RTN","ORRHCQ",159,0)
 M ^TMP("ORRHCQD",$J)=^TMP("ORRHCQP",$J)
"RTN","ORRHCQ",160,0)
 K ^TMP("ORRHCQP",$J)
"RTN","ORRHCQ",161,0)
 Q CNT
"RTN","ORRHCQ",162,0)
SORTBY(SEQ,FNM,FWD) ; Sort by a particular field
"RTN","ORRHCQ",163,0)
 N ID,KEY
"RTN","ORRHCQ",164,0)
 K ^TMP("ORRHCQB",$J),^TMP("ORRHCQS",$J)
"RTN","ORRHCQ",165,0)
 S SEQ=0 I 'FWD S SEQ=^TMP("ORRHCQ",$J,"TOT")+1
"RTN","ORRHCQ",166,0)
 S ID=0 F  S ID=$O(^TMP("ORRHCQD",$J,ID)) Q:ID=""  D
"RTN","ORRHCQ",167,0)
 . S KEY=$E($G(^TMP("ORRHCQD",$J,ID,FNM),"~~~~~~~~~~~~~~~~"),1,64)
"RTN","ORRHCQ",168,0)
 . S KEY=$TR(KEY,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ORRHCQ",169,0)
 . S:KEY="" KEY=" "
"RTN","ORRHCQ",170,0)
 . S ^TMP("ORRHCQB",$J,KEY,ID)=""
"RTN","ORRHCQ",171,0)
 S KEY="" F  S KEY=$O(^TMP("ORRHCQB",$J,KEY)) Q:KEY=""  D
"RTN","ORRHCQ",172,0)
 . S ID="" F  S ID=$O(^TMP("ORRHCQB",$J,KEY,ID)) Q:ID=""  D
"RTN","ORRHCQ",173,0)
 . . S:FWD SEQ=SEQ+1 S:'FWD SEQ=SEQ-1
"RTN","ORRHCQ",174,0)
 . . S ^TMP("ORRHCQS",$J,SEQ)=ID
"RTN","ORRHCQ",175,0)
 Q
"RTN","ORRHCQ",176,0)
SUBDTA(LST,FIRST,LAST) ; Return name-value pairs for subset of query data
"RTN","ORRHCQ",177,0)
 N SEQ,COL,ID,ICOL,ILST S ILST=0
"RTN","ORRHCQ",178,0)
 M COL=^TMP("ORRHCQ",$J,"COL")
"RTN","ORRHCQ",179,0)
 F SEQ=FIRST:1:LAST D
"RTN","ORRHCQ",180,0)
 . Q:'$D(^TMP("ORRHCQS",$J,SEQ))
"RTN","ORRHCQ",181,0)
 . S ID=^TMP("ORRHCQS",$J,SEQ)
"RTN","ORRHCQ",182,0)
 . S ILST=ILST+1,LST(ILST)="RowItemID="_ID
"RTN","ORRHCQ",183,0)
 . S ICOL=0 F  S ICOL=$O(COL(ICOL)) Q:'ICOL  D
"RTN","ORRHCQ",184,0)
 . . S ILST=ILST+1
"RTN","ORRHCQ",185,0)
 . . S LST(ILST)=COL(ICOL)_"="_$G(^TMP("ORRHCQD",$J,ID,COL(ICOL)))
"RTN","ORRHCQ",186,0)
 Q
"RTN","ORRHCQ",187,0)
DETAIL(REF,ID) ; Return results of order identified by ID
"RTN","ORRHCQ",188,0)
 K ^TMP("ORXPND",$J)
"RTN","ORRHCQ",189,0)
 N ORESULTS,ORVP,LCNT,ORID S ORESULTS=1,LCNT=0
"RTN","ORRHCQ",190,0)
 I ID[":" S ID=$P(ID,":",2) ;strip off prefix
"RTN","ORRHCQ",191,0)
 S ORVP=$P(^OR(100,+ID,0),U,2),ORID=ID
"RTN","ORRHCQ",192,0)
 D ORDERS^ORCXPND1 S ID=ORID
"RTN","ORRHCQ",193,0)
 D ORDERS^ORCXPND2
"RTN","ORRHCQ",194,0)
 K ^TMP("ORXPND",$J,"VIDEO")
"RTN","ORRHCQ",195,0)
 S REF=$NA(^TMP("ORXPND",$J))
"RTN","ORRHCQ",196,0)
 Q
"RTN","ORRHCQ",197,0)
PTINFO(VAL,ID) ; Return patient info given an order, consult, or note
"RTN","ORRHCQ",198,0)
 N DFN,X,X0,X1,X101
"RTN","ORRHCQ",199,0)
 S VAL="",DFN=0,X=$P(ID,":")
"RTN","ORRHCQ",200,0)
 I X="ORD"!(X="CST") S DFN=+$P(^OR(100,+$P(ID,":",2),0),U,2)
"RTN","ORRHCQ",201,0)
 I X="DOC" S DFN=+$P(^TIU(8925,+$P(ID,":",2),0),U,2)
"RTN","ORRHCQ",202,0)
 ;I X="VST" visits too?
"RTN","ORRHCQ",203,0)
 Q:'DFN
"RTN","ORRHCQ",204,0)
 S X0=^DPT(DFN,0),X1=$G(^(.1)),X101=$G(^(.101))
"RTN","ORRHCQ",205,0)
 S VAL=$P(X0,U)_U_$P(X0,U,9)_U_X1_" "_X101
"RTN","ORRHCQ",206,0)
 Q
"RTN","ORRHCQ",207,0)
RNGFM(ORY,RNG)        ;Return FM date range string
"RTN","ORRHCQ",208,0)
 Q:'$L(RNG)
"RTN","ORRHCQ",209,0)
 S ORY=$$RNG2FM^ORRHCU(RNG)
"RTN","ORRHCQ",210,0)
 Q
"RTN","ORRHCQ1")
0^49^B12564917
"RTN","ORRHCQ1",1,0)
ORRHCQ1 ; SLC/SRM - CPRS Query Tools - Utilities ;6/10/03  15:11
"RTN","ORRHCQ1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**174**;Dec 17, 1997
"RTN","ORRHCQ1",3,0)
 ;
"RTN","ORRHCQ1",4,0)
QRYSITR(VAL,ORRITR)       ; Do query for the standard Iterator, saving off the sensitive patients
"RTN","ORRHCQ1",5,0)
 ; VAL=PtSearched^RecordsFound^Iterator
"RTN","ORRHCQ1",6,0)
 S VAL=$$SSCREEN($P(ORRITR,";",2))
"RTN","ORRHCQ1",7,0)
 I VAL S VAL=$$PTSCRN^ORRHCQ($P(ORRITR,";",2))
"RTN","ORRHCQ1",8,0)
 I VAL S $P(VAL,U,2)=$$QRYPT^ORRHCQ($P(ORRITR,";",2))
"RTN","ORRHCQ1",9,0)
 S $P(VAL,U,3)=$$NXTITER^ORRHCQ(ORRITR)
"RTN","ORRHCQ1",10,0)
 Q
"RTN","ORRHCQ1",11,0)
 ;
"RTN","ORRHCQ1",12,0)
QSITR(VAL,SITR) ;       Do query for the current sensitive patient iterator
"RTN","ORRHCQ1",13,0)
 ; VAL=PtSearched^RecordsFound^Iterator
"RTN","ORRHCQ1",14,0)
 N LEVEL,RET
"RTN","ORRHCQ1",15,0)
 I $G(SITR)="" S SITR=0
"RTN","ORRHCQ1",16,0)
 S SITR=$O(^TMP("ORRHCQ",$J,"DFN","S",SITR))
"RTN","ORRHCQ1",17,0)
 I +SITR<1 S VAL=0_U_0_U Q
"RTN","ORRHCQ1",18,0)
 ;
"RTN","ORRHCQ1",19,0)
 ; Sensitive notifications, exclusions
"RTN","ORRHCQ1",20,0)
 ;
"RTN","ORRHCQ1",21,0)
 S LEVEL=+$G(^TMP("ORRHCQ",$J,"DFN","S",SITR))
"RTN","ORRHCQ1",22,0)
 I LEVEL=2 D 
"RTN","ORRHCQ1",23,0)
 .D NOTICE^DGSEC4(.RET,SITR,"ORRCMP QUERY TOOL^ORRCM CLIENT",1)
"RTN","ORRHCQ1",24,0)
 .I +$G(RET)=0 D ERROR("Error logging sensitive patient use.") S VAL=0_U_0_U Q
"RTN","ORRHCQ1",25,0)
 S VAL=0
"RTN","ORRHCQ1",26,0)
 I LEVEL<3 D
"RTN","ORRHCQ1",27,0)
 .S VAL=$$PTSCRN^ORRHCQ(SITR)
"RTN","ORRHCQ1",28,0)
 ;
"RTN","ORRHCQ1",29,0)
 I +VAL S $P(VAL,U,2)=$$QRYPT^ORRHCQ(SITR)
"RTN","ORRHCQ1",30,0)
 S $P(VAL,U,3)=SITR
"RTN","ORRHCQ1",31,0)
 Q
"RTN","ORRHCQ1",32,0)
 ;
"RTN","ORRHCQ1",33,0)
GETSPT(RES,START,LEN)   ;Returns a list of DFN^Patient Name^Level given a start position and a length.  The START 
"RTN","ORRHCQ1",34,0)
                 ;parameter should be in the form "NAME!DFN" (a 'bang' between name and DFN.)
"RTN","ORRHCQ1",35,0)
 N I,X S I=START,X=1
"RTN","ORRHCQ1",36,0)
 I +$G(LEN)<1 Q
"RTN","ORRHCQ1",37,0)
 F  S I=$O(^TMP("ORRHCQ",$J,"DFN","S","B",I)) Q:X>+$G(LEN)!(I="")  D
"RTN","ORRHCQ1",38,0)
 .S RES(X)=$P(I,"!",2)_U_$P(I,"!",1)_U_$G(^TMP("ORRHCQ",$J,"DFN","S","B",I)),X=X+1
"RTN","ORRHCQ1",39,0)
 Q
"RTN","ORRHCQ1",40,0)
 ;
"RTN","ORRHCQ1",41,0)
GETSLN(RES,DFN) ;Returns the sensitive patient message text lines for the given patient.
"RTN","ORRHCQ1",42,0)
 N I,CODE S RES="",I=0
"RTN","ORRHCQ1",43,0)
 I $D(^TMP("ORRHCQ",$J,"DFN","S",DFN)) D
"RTN","ORRHCQ1",44,0)
 .S CODE=^TMP("ORRHCQ",$J,"DFN","S",DFN)
"RTN","ORRHCQ1",45,0)
 .M RES=^TMP("ORRHCQ",$J,"DFN","S","MESSAGE",CODE)
"RTN","ORRHCQ1",46,0)
 Q
"RTN","ORRHCQ1",47,0)
 ;
"RTN","ORRHCQ1",48,0)
DELSEN(RES,DFN) ;Removes Sensitive Patient from list
"RTN","ORRHCQ1",49,0)
 S RES=0
"RTN","ORRHCQ1",50,0)
 I $D(^TMP("ORRHCQ",$J,"DFN","S",DFN)) D
"RTN","ORRHCQ1",51,0)
 .S RES=1 K ^TMP("ORRHCQ",$J,"DFN","S",DFN),^TMP("ORRHCQ",$J,"DFN","S","B",$$PTNAME(DFN)_"!"_DFN)
"RTN","ORRHCQ1",52,0)
 Q RES
"RTN","ORRHCQ1",53,0)
 ;
"RTN","ORRHCQ1",54,0)
GETCNT(LEN)     ; Returns the count of sensitive patients
"RTN","ORRHCQ1",55,0)
 S LEN=0
"RTN","ORRHCQ1",56,0)
 I $D(^TMP("ORRHCQ",$J,"DFN","S")) D
"RTN","ORRHCQ1",57,0)
 .N I S I=0
"RTN","ORRHCQ1",58,0)
 .F  S I=$O(^TMP("ORRHCQ",$J,"DFN","S",I)) Q:I'>0  S LEN=LEN+1
"RTN","ORRHCQ1",59,0)
 Q
"RTN","ORRHCQ1",60,0)
 ;
"RTN","ORRHCQ1",61,0)
SSCREEN(PATID)  ; Screen sensitive patients - returns 1 if not a sensitive patient; returns 0 if is a sensitive patient or has error
"RTN","ORRHCQ1",62,0)
 ; check for sensitive pt level here and store in "DFN","S",DFN)=LEVEL??
"RTN","ORRHCQ1",63,0)
 N RESULT,CODE
"RTN","ORRHCQ1",64,0)
 D PTSEC^DGSEC4(.RESULT,PATID,0,"ORRCMP QUERY TOOL^ORRCM CLIENT")
"RTN","ORRHCQ1",65,0)
 I $D(RESULT)<1 D ERROR("PTSEC^DGSEC4 did not return expected values.") Q 0
"RTN","ORRHCQ1",66,0)
 I $G(RESULT(1))<0 D ERROR("PTSEC^DGSEC4 returned an error code of:"_RESULT(1)) Q 0
"RTN","ORRHCQ1",67,0)
 I $G(RESULT(1))>0 D  Q 0
"RTN","ORRHCQ1",68,0)
 .S ^TMP("ORRHCQ",$J,"DFN","S",PATID)=RESULT(1),^TMP("ORRHCQ",$J,"DFN","S","B",$$PTNAME(PATID)_"!"_PATID)=RESULT(1)
"RTN","ORRHCQ1",69,0)
 .S CODE=RESULT(1) K RESULT(1)
"RTN","ORRHCQ1",70,0)
 .M ^TMP("ORRHCQ",$J,"DFN","S","MESSAGE",CODE)=RESULT
"RTN","ORRHCQ1",71,0)
 Q 1
"RTN","ORRHCQ1",72,0)
 ;
"RTN","ORRHCQ1",73,0)
ERROR(MESSAGE)  ;Log an error searching for sensitive patient information
"RTN","ORRHCQ1",74,0)
 Q
"RTN","ORRHCQ1",75,0)
 ;
"RTN","ORRHCQ1",76,0)
PTNAME(DFN) ; Returns patient name
"RTN","ORRHCQ1",77,0)
 N VADM,VA,VAERR
"RTN","ORRHCQ1",78,0)
 D DEM^VADPT
"RTN","ORRHCQ1",79,0)
 Q VADM(1)
"RTN","ORRHCQ1",80,0)
 ;
"RTN","ORRHCU")
0^54^B13954560
"RTN","ORRHCU",1,0)
ORRHCU ; SLC/KCM - CPRS Query Tools - Utilities ; [8/6/03 1:27Pm]
"RTN","ORRHCU",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**153,174**;Dec 17, 1997
"RTN","ORRHCU",3,0)
 ;
"RTN","ORRHCU",4,0)
NXT() ; Increment ILST
"RTN","ORRHCU",5,0)
 S ILST=ILST+1
"RTN","ORRHCU",6,0)
 Q ILST
"RTN","ORRHCU",7,0)
 ;
"RTN","ORRHCU",8,0)
RNG2FM(RNG)     ; convert a relative date range to Fileman dates
"RTN","ORRHCU",9,0)
 N FMRNG
"RTN","ORRHCU",10,0)
 I $E(RNG,1)="Y" D
"RTN","ORRHCU",11,0)
 . N YR,TYP,QTR
"RTN","ORRHCU",12,0)
 . S YR=$E(DT,1,3),TYP=$E(RNG,2) I (TYP="F"),(+$E(DT,4,5)>9) S YR=YR+1
"RTN","ORRHCU",13,0)
 . S YR=YR+$E(RNG,3,999)
"RTN","ORRHCU",14,0)
 . I (RNG["Q"),($P(RNG,"Q",2)="") S RNG=RNG_$$CURQTR($E(RNG,2)="F")
"RTN","ORRHCU",15,0)
 . I $P(RNG,"Q",2)="" D  Q
"RTN","ORRHCU",16,0)
 . . I TYP="C" S FMRNG=YR_"0101:"_YR_"1231"
"RTN","ORRHCU",17,0)
 . . I TYP="F" S FMRNG=(YR-1)_"1001:"_YR_"0930"
"RTN","ORRHCU",18,0)
 . S QTR=+$P(RNG,"Q",2)
"RTN","ORRHCU",19,0)
 . I TYP="F" S:QTR=1 YR=YR-1 S QTR=QTR-1 S:QTR=0 QTR=4
"RTN","ORRHCU",20,0)
 . S FMRNG=YR_$P("0101^0401^0701^1001",U,QTR)_":"_YR
"RTN","ORRHCU",21,0)
 . S FMRNG=FMRNG_$P("0331^0630^0930^1231",U,QTR)
"RTN","ORRHCU",22,0)
 E  D
"RTN","ORRHCU",23,0)
 . N BDT,EDT,%DT,X,Y
"RTN","ORRHCU",24,0)
 . S BDT=$P(RNG,":",1),EDT=$P(RNG,":",2)
"RTN","ORRHCU",25,0)
 . I $L(BDT) S X=BDT D ^%DT S BDT=Y
"RTN","ORRHCU",26,0)
 . I $L(EDT) S X=EDT D ^%DT S EDT=Y
"RTN","ORRHCU",27,0)
 . I '$L(BDT) S BDT=0
"RTN","ORRHCU",28,0)
 . I '$L(EDT) S EDT=9999999
"RTN","ORRHCU",29,0)
 . S FMRNG=BDT_":"_EDT
"RTN","ORRHCU",30,0)
 Q FMRNG
"RTN","ORRHCU",31,0)
CURQTR(ISFY)    ; return the current fiscal or calendar quarter
"RTN","ORRHCU",32,0)
 N QTR
"RTN","ORRHCU",33,0)
 S QTR=$P(($E(DT,4,5)-1)/3,".")+1
"RTN","ORRHCU",34,0)
 I ISFY S QTR=QTR+1 S:QTR=5 QTR=1
"RTN","ORRHCU",35,0)
 Q QTR
"RTN","ORRHCU",36,0)
ID2EXT(LST,FN,IDLST)     ; Return the external values for a set if IENs
"RTN","ORRHCU",37,0)
 N I
"RTN","ORRHCU",38,0)
 S I=0 F  S I=$O(IDLST(I)) Q:'I  D
"RTN","ORRHCU",39,0)
 . I +IDLST(I)=0 S LST(I)=IDLST(I) Q
"RTN","ORRHCU",40,0)
 . S LST(I)=IDLST(I)_U_$$GET1^DIQ(FN,IDLST(I),.01)
"RTN","ORRHCU",41,0)
 Q
"RTN","ORRHCU",42,0)
BYREG(LST,NAM,MOD)      ; List patients from registry
"RTN","ORRHCU",43,0)
 N ILST,RC,ITR,PATID S ILST=0
"RTN","ORRHCU",44,0)
 I $$PATITER^RORAPI01(.ITR,NAM,MOD)<0 Q
"RTN","ORRHCU",45,0)
 F  S RC=$$NEXTPAT^RORAPI01(.ITR)  Q:RC'>0  D
"RTN","ORRHCU",46,0)
 . S PATID=$P(RC,U)
"RTN","ORRHCU",47,0)
 . S LST($$NXT)=PATID_U_$P(^DPT(PATID,0),U)
"RTN","ORRHCU",48,0)
 Q
"RTN","ORRHCU",49,0)
REGLST(LST)     ; List available local registries
"RTN","ORRHCU",50,0)
 S LST(1)="VA HEPC^Local HepC Registry"
"RTN","ORRHCU",51,0)
 Q
"RTN","ORRHCU",52,0)
REGNAM(VAL,ID)  ; Return the full name of a registry
"RTN","ORRHCU",53,0)
 S VAL="Unknown Registry"
"RTN","ORRHCU",54,0)
 I ID="VA HEPC" S VAL="Local HepC Registry"
"RTN","ORRHCU",55,0)
 Q
"RTN","ORRHCU",56,0)
NMVAL(NM,VAL)   ; Set a name=value pair
"RTN","ORRHCU",57,0)
 Q:NM=""  Q:VAL=""
"RTN","ORRHCU",58,0)
 S LST($$NXT)=NM_"="_VAL
"RTN","ORRHCU",59,0)
 Q
"RTN","ORRHCU",60,0)
DFLDS(LST,TYP)  ; List display fields
"RTN","ORRHCU",61,0)
 N I,J,ILST,X0 S ILST=0
"RTN","ORRHCU",62,0)
 S TYP=$$DFLDTRAN(TYP) ; consults, orders return same fields
"RTN","ORRHCU",63,0)
 S I=0 F  S I=$O(^ORD(102.24,I)) Q:'I  D
"RTN","ORRHCU",64,0)
 . S X0=^ORD(102.24,I,0)
"RTN","ORRHCU",65,0)
 . Q:TYP'[$E(X0)  ; 1st char of name corresponds to type
"RTN","ORRHCU",66,0)
 . ; S LST($$NXT)=X0
"RTN","ORRHCU",67,0)
 . D NMVAL("DisplayName",$P(X0,U,2))  ; must be first
"RTN","ORRHCU",68,0)
 . D NMVAL("InternalName",$P(X0,U))
"RTN","ORRHCU",69,0)
 . D NMVAL("HeaderName",$P(X0,U,3))
"RTN","ORRHCU",70,0)
 . D NMVAL("SortType",$P(X0,U,4))
"RTN","ORRHCU",71,0)
 . S J=0 F  S J=$O(^ORD(102.24,I,1,J)) Q:'J  D
"RTN","ORRHCU",72,0)
 . . D NMVAL("SampleData",$G(^ORD(102.24,I,1,J,0)))
"RTN","ORRHCU",73,0)
 Q
"RTN","ORRHCU",74,0)
COLTYP(LST,SRC) ; List the column types
"RTN","ORRHCU",75,0)
 N I,IEN
"RTN","ORRHCU",76,0)
 S I=0 F  S I=$O(SRC(I)) Q:'I  D
"RTN","ORRHCU",77,0)
 . S IEN=$O(^ORD(102.24,"B",SRC(I),0))
"RTN","ORRHCU",78,0)
 . I 'IEN S LST(I)=SRC(I)_"^0"
"RTN","ORRHCU",79,0)
 . E  S LST(I)=SRC(I)_U_$P($G(^ORD(102.24,IEN,0)),U,4)
"RTN","ORRHCU",80,0)
 Q
"RTN","ORRHCU",81,0)
 ;
"RTN","ORRHCU",82,0)
DFLDMAP(LST)    ; Returns a mapping of constraint types to display field types
"RTN","ORRHCU",83,0)
 N FLDLIST S FLDLIST=$$GETFLDLS
"RTN","ORRHCU",84,0)
 N TRANSLST S TRANSLST=$$DFLDTRAN(FLDLIST)
"RTN","ORRHCU",85,0)
 N I S I=0
"RTN","ORRHCU",86,0)
 F  S I=I+1 Q:I>$L(FLDLIST)  D
"RTN","ORRHCU",87,0)
 .S LST(I)=$E(FLDLIST,I)_"="_$E(TRANSLST,I)
"RTN","ORRHCU",88,0)
 Q
"RTN","ORRHCU",89,0)
 ;
"RTN","ORRHCU",90,0)
DFLDTRAN(FLD)   ;Translates the constraint types to the display field types
"RTN","ORRHCU",91,0)
 Q $TR(FLD,"C","O")
"RTN","ORRHCU",92,0)
 ;
"RTN","ORRHCU",93,0)
GETFLDLS()      ;Returns a list of defined display fields
"RTN","ORRHCU",94,0)
 N LIST
"RTN","ORRHCU",95,0)
 S LIST="PODVC"
"RTN","ORRHCU",96,0)
 Q LIST
"RTN","ORRHCU",97,0)
 ;
"RTN","ORRU")
0^30^B2433260
"RTN","ORRU",1,0)
ORRU ; SLC/JER - Scroll-mode Utility Subroutines ; 5-APR-2002 12:39:51
"RTN","ORRU",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**174**;Dec 17, 1997
"RTN","ORRU",3,0)
STOP(PROMPT,SCROLL) ; Call DIR at bottom of screen
"RTN","ORRU",4,0)
 N DIR,X,Y
"RTN","ORRU",5,0)
 I $E(IOST)'="C" S Y="" G STOPX
"RTN","ORRU",6,0)
 I +$G(SCROLL),(IOSL>($Y+5)) F  W ! Q:IOSL<($Y+6)
"RTN","ORRU",7,0)
 S DIR(0)="FO^1:1"
"RTN","ORRU",8,0)
 S DIR("A")=$S($G(PROMPT)]"":PROMPT,1:"Press RETURN to continue or '^' to exit")
"RTN","ORRU",9,0)
 S DIR("?")="Enter '^' to quit present action or '^^' to quit to menu"
"RTN","ORRU",10,0)
 D ^DIR I $D(DIRUT),(Y="") K DIRUT
"RTN","ORRU",11,0)
 S Y=$S(Y="^":0,Y="^^":0,$D(DTOUT):"",Y="":1,1:1_U_Y)
"RTN","ORRU",12,0)
STOPX Q Y
"RTN","ORRU",13,0)
READ(TYPE,PROMPT,DEFAULT,HELP,SCREEN) ; Calls reader, returns response
"RTN","ORRU",14,0)
 N DIR,X,Y
"RTN","ORRU",15,0)
 S DIR(0)=TYPE
"RTN","ORRU",16,0)
 I $D(SCREEN) S DIR("S")=SCREEN
"RTN","ORRU",17,0)
 I $G(PROMPT)]"" S DIR("A")=PROMPT
"RTN","ORRU",18,0)
 I $G(DEFAULT)]"" S DIR("B")=DEFAULT
"RTN","ORRU",19,0)
 I $D(HELP) S DIR("?")=HELP
"RTN","ORRU",20,0)
 D ^DIR
"RTN","ORRU",21,0)
 I $G(X)="@" S Y="@" G READX
"RTN","ORRU",22,0)
 I Y]"",($L($G(Y),U)'=2) S Y=Y_U_$G(Y(0),Y)
"RTN","ORRU",23,0)
READX Q Y
"RTN","ORRU",24,0)
LISTREAD(ORLIST,ANSTYPE) ; Present list to user for selection of item(s)
"RTN","ORRU",25,0)
 N ORI,ORL,ORY S (ORI,ORY)=0
"RTN","ORRU",26,0)
 S ANSTYPE=$S($G(ANSTYPE)]"":$G(ANSTYPE),1:"N")
"RTN","ORRU",27,0)
 F  S ORI=$O(ORLIST(ORI)) Q:+ORI'>0  D
"RTN","ORRU",28,0)
 . W !,ORI,?5,$P(ORLIST(ORI),U,2) S ORL=ORI
"RTN","ORRU",29,0)
 I +$G(ORL) D
"RTN","ORRU",30,0)
 . W !
"RTN","ORRU",31,0)
 . S ORY=$$READ(ANSTYPE_"A^1:"_ORL,"Select "_$P(ORLIST,U)_": ")
"RTN","ORRU",32,0)
 . I +ORY S ORY=$G(ORLIST(+ORY))
"RTN","ORRU",33,0)
 Q ORY
"VER")
8.0^22.0
**INSTALL NAME**
XHD PARAMETERS 1.0
"BLD",4139,0)
XHD PARAMETERS 1.0^^0^3040116^y
"BLD",4139,1,0)
^^2^2^3031009^
"BLD",4139,1,1,0)
This build transports the PARAMETER DEFINITIONS for HealtheVet Desktop 
"BLD",4139,1,2,0)
1.0.
"BLD",4139,4,0)
^9.64PA^^
"BLD",4139,"KRN",0)
^9.67PA^8989.52^19
"BLD",4139,"KRN",.4,0)
.4
"BLD",4139,"KRN",.401,0)
.401
"BLD",4139,"KRN",.402,0)
.402
"BLD",4139,"KRN",.403,0)
.403
"BLD",4139,"KRN",.5,0)
.5
"BLD",4139,"KRN",.84,0)
.84
"BLD",4139,"KRN",3.6,0)
3.6
"BLD",4139,"KRN",3.8,0)
3.8
"BLD",4139,"KRN",9.2,0)
9.2
"BLD",4139,"KRN",9.8,0)
9.8
"BLD",4139,"KRN",19,0)
19
"BLD",4139,"KRN",19.1,0)
19.1
"BLD",4139,"KRN",101,0)
101
"BLD",4139,"KRN",409.61,0)
409.61
"BLD",4139,"KRN",771,0)
771
"BLD",4139,"KRN",870,0)
870
"BLD",4139,"KRN",8989.51,0)
8989.51
"BLD",4139,"KRN",8989.51,"NM",0)
^9.68A^5^5
"BLD",4139,"KRN",8989.51,"NM",1,0)
XHD PRISM ADA S508 NOTICE^^0
"BLD",4139,"KRN",8989.51,"NM",2,0)
XHD PRISM DEFAULT PERSPECTIVE^^0
"BLD",4139,"KRN",8989.51,"NM",3,0)
XHD PRISM PERSPECTIVE SELECTOR^^0
"BLD",4139,"KRN",8989.51,"NM",4,0)
XHD TEST SCALAR PARAMETER^^0
"BLD",4139,"KRN",8989.51,"NM",5,0)
XHD TEST WP PARAMETERS^^0
"BLD",4139,"KRN",8989.51,"NM","B","XHD PRISM ADA S508 NOTICE",1)

"BLD",4139,"KRN",8989.51,"NM","B","XHD PRISM DEFAULT PERSPECTIVE",2)

"BLD",4139,"KRN",8989.51,"NM","B","XHD PRISM PERSPECTIVE SELECTOR",3)

"BLD",4139,"KRN",8989.51,"NM","B","XHD TEST SCALAR PARAMETER",4)

"BLD",4139,"KRN",8989.51,"NM","B","XHD TEST WP PARAMETERS",5)

"BLD",4139,"KRN",8989.52,0)
8989.52
"BLD",4139,"KRN",8994,0)
8994
"BLD",4139,"KRN","B",.4,.4)

"BLD",4139,"KRN","B",.401,.401)

"BLD",4139,"KRN","B",.402,.402)

"BLD",4139,"KRN","B",.403,.403)

"BLD",4139,"KRN","B",.5,.5)

"BLD",4139,"KRN","B",.84,.84)

"BLD",4139,"KRN","B",3.6,3.6)

"BLD",4139,"KRN","B",3.8,3.8)

"BLD",4139,"KRN","B",9.2,9.2)

"BLD",4139,"KRN","B",9.8,9.8)

"BLD",4139,"KRN","B",19,19)

"BLD",4139,"KRN","B",19.1,19.1)

"BLD",4139,"KRN","B",101,101)

"BLD",4139,"KRN","B",409.61,409.61)

"BLD",4139,"KRN","B",771,771)

"BLD",4139,"KRN","B",870,870)

"BLD",4139,"KRN","B",8989.51,8989.51)

"BLD",4139,"KRN","B",8989.52,8989.52)

"BLD",4139,"KRN","B",8994,8994)

"BLD",4139,"QUES",0)
^9.62^^
"BLD",4139,"REQB",0)
^9.611^^
"KRN",8989.51,307,-1)
0^5
"KRN",8989.51,307,0)
XHD TEST WP PARAMETERS^Test Word-processing^0^^Word-Processing Text^
"KRN",8989.51,307,1)
W
"KRN",8989.51,307,4,0)
^8989.514^2^2
"KRN",8989.51,307,4,1,0)
WORD PROCESSING
"KRN",8989.51,307,4,2,0)
TEST
"KRN",8989.51,307,4,"B","TEST",2)

"KRN",8989.51,307,4,"B","WORD PROCESSING",1)

"KRN",8989.51,307,20,0)
^8989.512^1^1^3030326^^^
"KRN",8989.51,307,20,1,0)
Test filing of large strings (e.g., XML streams) as parameter values.
"KRN",8989.51,307,30,0)
^8989.513I^2^2
"KRN",8989.51,307,30,1,0)
1^200
"KRN",8989.51,307,30,2,0)
2^9.4
"KRN",8989.51,308,-1)
0^4
"KRN",8989.51,308,0)
XHD TEST SCALAR PARAMETER^Scalar Test^0^^Scalar value
"KRN",8989.51,308,1)
N^0:100^Specify an integer number between zero and one hundred.
"KRN",8989.51,308,4,0)
^8989.514^2^2
"KRN",8989.51,308,4,1,0)
SCALAR
"KRN",8989.51,308,4,2,0)
TEST
"KRN",8989.51,308,4,"B","SCALAR",1)

"KRN",8989.51,308,4,"B","TEST",2)

"KRN",8989.51,308,20,0)
^8989.512^2^2^3030226^^
"KRN",8989.51,308,20,1,0)
This is a test parameter for integration testing of the HealtheVet 
"KRN",8989.51,308,20,2,0)
Desktop Configurator module. It has no use in production applications.
"KRN",8989.51,308,30,0)
^8989.513I^2^2
"KRN",8989.51,308,30,1,0)
1^200
"KRN",8989.51,308,30,2,0)
2^9.4
"KRN",8989.51,309,-1)
0^2
"KRN",8989.51,309,0)
XHD PRISM DEFAULT PERSPECTIVE^Default Perspective^0^^Default Perspective^0
"KRN",8989.51,309,1)
F^3:60^Indicate the Perspective to which the Desktop should open initially
"KRN",8989.51,309,4,0)
^8989.514^2^2
"KRN",8989.51,309,4,1,0)
DEFAULT
"KRN",8989.51,309,4,2,0)
PERSPECTIVE
"KRN",8989.51,309,4,"B","DEFAULT",1)

"KRN",8989.51,309,4,"B","PERSPECTIVE",2)

"KRN",8989.51,309,20,0)
^^2^2^3030403^
"KRN",8989.51,309,20,1,0)
This is the perspective to which the HealtheVet Desktop should open by 
"KRN",8989.51,309,20,2,0)
default.
"KRN",8989.51,309,30,0)
^8989.513I^4^4
"KRN",8989.51,309,30,1,0)
1^200
"KRN",8989.51,309,30,2,0)
2^4
"KRN",8989.51,309,30,3,0)
3^4.2
"KRN",8989.51,309,30,4,0)
4^9.4
"KRN",8989.51,315,-1)
0^3
"KRN",8989.51,315,0)
XHD PRISM PERSPECTIVE SELECTOR^HealtheVet Desktop Perspective Selector^^^Perspective Option
"KRN",8989.51,315,1)
P^19^Enter the option that lists the perspectives available in the desktop.
"KRN",8989.51,315,20,0)
^8989.512^1^1^3030522^^
"KRN",8989.51,315,20,1,0)
This identifies the option that lists the perspectives that are initally shown in the HealtheVet Desktop.
"KRN",8989.51,315,30,0)
^8989.513I^4^2
"KRN",8989.51,315,30,3,0)
5^49
"KRN",8989.51,315,30,4,0)
2^200
"KRN",8989.51,325,-1)
0^1
"KRN",8989.51,325,0)
XHD PRISM ADA S508 NOTICE^ADA Section 508 Notice Acknowledged^0^^Okay?^0
"KRN",8989.51,325,1)
Y^^Indicate whether the user has been shown the Section 508 notice.
"KRN",8989.51,325,20,0)
^^3^3^3030529^
"KRN",8989.51,325,20,1,0)
This parameter is used to store a Boolean flag indicating whether or not 
"KRN",8989.51,325,20,2,0)
the user has been given the opportunity to review the notice with respect 
"KRN",8989.51,325,20,3,0)
to Section 508 of the Americans with Disabilities Act.
"KRN",8989.51,325,30,0)
^8989.513I^2^2
"KRN",8989.51,325,30,1,0)
1^200
"KRN",8989.51,325,30,2,0)
2^9.4
"MBREQ")
0
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.0
**INSTALL NAME**
XHD 1.0
"BLD",4133,0)
XHD 1.0^HEALTHEVET DESKTOP^0^3040116^y
"BLD",4133,1,0)
^^3^3^3030708^^^
"BLD",4133,1,1,0)
This is the build for the HealtheVet Desktop.  The desktop is primarily
"BLD",4133,1,2,0)
a client-side Java application.  Some server-side components may be added
"BLD",4133,1,3,0)
in the future.
"BLD",4133,4,0)
^9.64PA^8935.91^1
"BLD",4133,4,8935.91,0)
8935.91
"BLD",4133,4,8935.91,222)
y^y^f^^y^^y^r^n
"BLD",4133,4,8935.91,224)
I Y=4
"BLD",4133,4,"B",8935.91,8935.91)

"BLD",4133,"ABNS",0)
^9.66A^1^1
"BLD",4133,"ABNS",1,0)
XHD
"BLD",4133,"ABNS",1,1,0)
^9.661A^^
"BLD",4133,"ABNS","B","XHD",1)

"BLD",4133,"ABPKG")
n^y^G.CPRS REENGINEERING@FO-SLC.MED.VA.GOV
"BLD",4133,"INI")
XHDYPRE
"BLD",4133,"INID")
^y^y
"BLD",4133,"INIT")
XHDYP
"BLD",4133,"KRN",0)
^9.67PA^8989.52^19
"BLD",4133,"KRN",.4,0)
.4
"BLD",4133,"KRN",.401,0)
.401
"BLD",4133,"KRN",.402,0)
.402
"BLD",4133,"KRN",.403,0)
.403
"BLD",4133,"KRN",.5,0)
.5
"BLD",4133,"KRN",.84,0)
.84
"BLD",4133,"KRN",3.6,0)
3.6
"BLD",4133,"KRN",3.8,0)
3.8
"BLD",4133,"KRN",9.2,0)
9.2
"BLD",4133,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",4133,"KRN",9.8,0)
9.8
"BLD",4133,"KRN",9.8,"NM",0)
^9.68A^15^15
"BLD",4133,"KRN",9.8,"NM",1,0)
XHDLXM^^0^B4966475
"BLD",4133,"KRN",9.8,"NM",2,0)
XHDPAR^^0^B1416315
"BLD",4133,"KRN",9.8,"NM",3,0)
XHDPARAM^^0^B3638871
"BLD",4133,"KRN",9.8,"NM",4,0)
XHDPCAT^^0^B24059494
"BLD",4133,"KRN",9.8,"NM",5,0)
XHDPDEF^^0^B30481256
"BLD",4133,"KRN",9.8,"NM",6,0)
XHDPEDIT^^0^B43733011
"BLD",4133,"KRN",9.8,"NM",7,0)
XHDPMUT^^0^B46856254
"BLD",4133,"KRN",9.8,"NM",8,0)
XHDPTREE^^0^B57481232
"BLD",4133,"KRN",9.8,"NM",9,0)
XHDX^^0^B13282365
"BLD",4133,"KRN",9.8,"NM",10,0)
XHDYPRE^^0^B2313108
"BLD",4133,"KRN",9.8,"NM",11,0)
XHDLSITE^^0^B494220
"BLD",4133,"KRN",9.8,"NM",12,0)
XHDAUTH^^0^B7535946
"BLD",4133,"KRN",9.8,"NM",13,0)
XHDTST^^0^B2797378
"BLD",4133,"KRN",9.8,"NM",14,0)
XHDYP^^0^B803022
"BLD",4133,"KRN",9.8,"NM",15,0)
XHDYP01^^0^B36104366
"BLD",4133,"KRN",9.8,"NM","B","XHDAUTH",12)

"BLD",4133,"KRN",9.8,"NM","B","XHDLSITE",11)

"BLD",4133,"KRN",9.8,"NM","B","XHDLXM",1)

"BLD",4133,"KRN",9.8,"NM","B","XHDPAR",2)

"BLD",4133,"KRN",9.8,"NM","B","XHDPARAM",3)

"BLD",4133,"KRN",9.8,"NM","B","XHDPCAT",4)

"BLD",4133,"KRN",9.8,"NM","B","XHDPDEF",5)

"BLD",4133,"KRN",9.8,"NM","B","XHDPEDIT",6)

"BLD",4133,"KRN",9.8,"NM","B","XHDPMUT",7)

"BLD",4133,"KRN",9.8,"NM","B","XHDPTREE",8)

"BLD",4133,"KRN",9.8,"NM","B","XHDTST",13)

"BLD",4133,"KRN",9.8,"NM","B","XHDX",9)

"BLD",4133,"KRN",9.8,"NM","B","XHDYP",14)

"BLD",4133,"KRN",9.8,"NM","B","XHDYP01",15)

"BLD",4133,"KRN",9.8,"NM","B","XHDYPRE",10)

"BLD",4133,"KRN",19,0)
19
"BLD",4133,"KRN",19,"NM",0)
^9.68A^6^6
"BLD",4133,"KRN",19,"NM",1,0)
XHDX ASSIGN USER PERSPECTIVES^^0
"BLD",4133,"KRN",19,"NM",2,0)
XHDX HEALTHEVET DESKTOP^^0
"BLD",4133,"KRN",19,"NM",3,0)
XHDXC DESKTOP^^0
"BLD",4133,"KRN",19,"NM",4,0)
OR PARAM IRM MENU^^2
"BLD",4133,"KRN",19,"NM",5,0)
XHDX ASSIGN MULTIPLE USERS^^0
"BLD",4133,"KRN",19,"NM",6,0)
XHDX ASSIGN SERVICE^^0
"BLD",4133,"KRN",19,"NM","B","OR PARAM IRM MENU",4)

"BLD",4133,"KRN",19,"NM","B","XHDX ASSIGN MULTIPLE USERS",5)

"BLD",4133,"KRN",19,"NM","B","XHDX ASSIGN SERVICE",6)

"BLD",4133,"KRN",19,"NM","B","XHDX ASSIGN USER PERSPECTIVES",1)

"BLD",4133,"KRN",19,"NM","B","XHDX HEALTHEVET DESKTOP",2)

"BLD",4133,"KRN",19,"NM","B","XHDXC DESKTOP",3)

"BLD",4133,"KRN",19.1,0)
19.1
"BLD",4133,"KRN",101,0)
101
"BLD",4133,"KRN",409.61,0)
409.61
"BLD",4133,"KRN",771,0)
771
"BLD",4133,"KRN",870,0)
870
"BLD",4133,"KRN",8989.51,0)
8989.51
"BLD",4133,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",4133,"KRN",8989.52,0)
8989.52
"BLD",4133,"KRN",8994,0)
8994
"BLD",4133,"KRN",8994,"NM",0)
^9.68A^16^16
"BLD",4133,"KRN",8994,"NM",1,0)
XHD DELETE PARAMETER CATEGORY^^0
"BLD",4133,"KRN",8994,"NM",2,0)
XHD GET ALL PARAMETER DEFS^^0
"BLD",4133,"KRN",8994,"NM",3,0)
XHD GET CONFIGURATION^^0
"BLD",4133,"KRN",8994,"NM",4,0)
XHD GET MUTABLE CONFIGURATION^^0
"BLD",4133,"KRN",8994,"NM",5,0)
XHD GET PARAMETER DEF LIST^^0
"BLD",4133,"KRN",8994,"NM",6,0)
XHD GET PARAMETER DEFINITION^^0
"BLD",4133,"KRN",8994,"NM",7,0)
XHD GET PARAMETER DEFINITIONS^^0
"BLD",4133,"KRN",8994,"NM",8,0)
XHD INSERT PARAMETER CATEGORY^^0
"BLD",4133,"KRN",8994,"NM",9,0)
XHD PUT PARAMETER^^0
"BLD",4133,"KRN",8994,"NM",10,0)
XHD REMOVE PARAMETER CATEGORY^^0
"BLD",4133,"KRN",8994,"NM",11,0)
XHD UPDATE PARAMETER CATEGORY^^0
"BLD",4133,"KRN",8994,"NM",12,0)
XHD GET SITE INFO^^0
"BLD",4133,"KRN",8994,"NM",13,0)
XHD GET USER DEMOGRAPHICS^^0
"BLD",4133,"KRN",8994,"NM",14,0)
XHDX PERSEL^^0
"BLD",4133,"KRN",8994,"NM",15,0)
XHDX VERSRV^^0
"BLD",4133,"KRN",8994,"NM",16,0)
XHD TEST INPUT LIST^^0
"BLD",4133,"KRN",8994,"NM","B","XHD DELETE PARAMETER CATEGORY",1)

"BLD",4133,"KRN",8994,"NM","B","XHD GET ALL PARAMETER DEFS",2)

"BLD",4133,"KRN",8994,"NM","B","XHD GET CONFIGURATION",3)

"BLD",4133,"KRN",8994,"NM","B","XHD GET MUTABLE CONFIGURATION",4)

"BLD",4133,"KRN",8994,"NM","B","XHD GET PARAMETER DEF LIST",5)

"BLD",4133,"KRN",8994,"NM","B","XHD GET PARAMETER DEFINITION",6)

"BLD",4133,"KRN",8994,"NM","B","XHD GET PARAMETER DEFINITIONS",7)

"BLD",4133,"KRN",8994,"NM","B","XHD GET SITE INFO",12)

"BLD",4133,"KRN",8994,"NM","B","XHD GET USER DEMOGRAPHICS",13)

"BLD",4133,"KRN",8994,"NM","B","XHD INSERT PARAMETER CATEGORY",8)

"BLD",4133,"KRN",8994,"NM","B","XHD PUT PARAMETER",9)

"BLD",4133,"KRN",8994,"NM","B","XHD REMOVE PARAMETER CATEGORY",10)

"BLD",4133,"KRN",8994,"NM","B","XHD TEST INPUT LIST",16)

"BLD",4133,"KRN",8994,"NM","B","XHD UPDATE PARAMETER CATEGORY",11)

"BLD",4133,"KRN",8994,"NM","B","XHDX PERSEL",14)

"BLD",4133,"KRN",8994,"NM","B","XHDX VERSRV",15)

"BLD",4133,"KRN","B",.4,.4)

"BLD",4133,"KRN","B",.401,.401)

"BLD",4133,"KRN","B",.402,.402)

"BLD",4133,"KRN","B",.403,.403)

"BLD",4133,"KRN","B",.5,.5)

"BLD",4133,"KRN","B",.84,.84)

"BLD",4133,"KRN","B",3.6,3.6)

"BLD",4133,"KRN","B",3.8,3.8)

"BLD",4133,"KRN","B",9.2,9.2)

"BLD",4133,"KRN","B",9.8,9.8)

"BLD",4133,"KRN","B",19,19)

"BLD",4133,"KRN","B",19.1,19.1)

"BLD",4133,"KRN","B",101,101)

"BLD",4133,"KRN","B",409.61,409.61)

"BLD",4133,"KRN","B",771,771)

"BLD",4133,"KRN","B",870,870)

"BLD",4133,"KRN","B",8989.51,8989.51)

"BLD",4133,"KRN","B",8989.52,8989.52)

"BLD",4133,"KRN","B",8994,8994)

"BLD",4133,"QUES",0)
^9.62^^
"BLD",4133,"REQB",0)
^9.611^^
"DATA",8935.91,4,0)
XHD PRISM PARAMETERS^gov.va.med.hds.cd.prism^Desktop^^1^1
"DATA",8935.91,4,1)
prismPreferencePage
"DATA",8935.91,4,2,0)
^8935.912^5^4
"DATA",8935.91,4,2,1,0)
Countdown Seconds upon Timeout^30
"DATA",8935.91,4,2,3,0)
Timeout for GUI chart^253
"DATA",8935.91,4,2,4,0)
Default Perspective^309
"DATA",8935.91,4,2,5,0)
ADA Section 508 Notice Acknowledged^325
"FIA",8935.91)
XHD PARAMETER CATEGORY
"FIA",8935.91,0)
^XHD(8935.91,
"FIA",8935.91,0,0)
8935.91
"FIA",8935.91,0,1)
y^y^f^^y^^y^r^n
"FIA",8935.91,0,10)

"FIA",8935.91,0,11)
I Y=4
"FIA",8935.91,0,"RLRO")

"FIA",8935.91,0,"VR")
1.0^XHD
"FIA",8935.91,8935.91)
0
"FIA",8935.91,8935.912)
0
"FIA",8935.91,8935.913)
0
"FRV1",8935.91,"4,2,1,0",2)
ORWOR TIMEOUT COUNTDOWN
"FRV1",8935.91,"4,2,1,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"4,2,3,0",2)
ORWOR TIMEOUT CHART
"FRV1",8935.91,"4,2,3,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"4,2,4,0",2)
XHD PRISM DEFAULT PERSPECTIVE
"FRV1",8935.91,"4,2,4,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"4,2,5,0",2)
XHD PRISM ADA S508 NOTICE
"FRV1",8935.91,"4,2,5,0",2,"F")
;XTV(8989.51,
"INI")
XHDYPRE
"INIT")
XHDYP
"IX",8935.91,8935.91,"AMROOT",0)
8935.91^AMROOT^Cross-reference of root categories^MU^^R^IR^I^8935.91^^^^^S
"IX",8935.91,8935.91,"AMROOT",1)
S ^XHD(8935.91,"AMROOT",$E(X(1),1,60),DA)=""
"IX",8935.91,8935.91,"AMROOT",1.4)
S:+X(2) X=1
"IX",8935.91,8935.91,"AMROOT",2)
K ^XHD(8935.91,"AMROOT",$E(X(1),1,60),DA)
"IX",8935.91,8935.91,"AMROOT",2.5)
K ^XHD(8935.91,"AMROOT")
"IX",8935.91,8935.91,"AMROOT",11.1,0)
^.114IA^2^2
"IX",8935.91,8935.91,"AMROOT",11.1,1,0)
1^F^8935.91^.02^60^1^F
"IX",8935.91,8935.91,"AMROOT",11.1,1,3)

"IX",8935.91,8935.91,"AMROOT",11.1,2,0)
2^F^8935.91^.05^^2^F
"IX",8935.91,8935.91,"AMROOT",11.1,2,3)

"KRN",19,6545,-1)
2^4
"KRN",19,6545,0)
OR PARAM IRM MENU^CPRS Configuration (IRM)^^M^5^XUPROG
"KRN",19,6545,10,0)
^19.01IP^5^5
"KRN",19,6545,10,5,0)
8942^HD
"KRN",19,6545,10,5,"^")
XHDX HEALTHEVET DESKTOP
"KRN",19,6545,"U")
CPRS CONFIGURATION (IRM)
"KRN",19,8942,-1)
0^2
"KRN",19,8942,0)
XHDX HEALTHEVET DESKTOP^HealtheVet Desktop Configuration^^M^^^^^^^^
"KRN",19,8942,1,0)
^^1^1^3030522^
"KRN",19,8942,1,1,0)
This menu allows various settings of the HealtheVet Desktop to be controlled.
"KRN",19,8942,10,0)
^19.01IP^3^3
"KRN",19,8942,10,1,0)
8943^AP
"KRN",19,8942,10,1,"^")
XHDX ASSIGN USER PERSPECTIVES
"KRN",19,8942,10,2,0)
8951^AM
"KRN",19,8942,10,2,"^")
XHDX ASSIGN MULTIPLE USERS
"KRN",19,8942,10,3,0)
8955^AS
"KRN",19,8942,10,3,"^")
XHDX ASSIGN SERVICE
"KRN",19,8942,99)
59414,38536
"KRN",19,8942,"U")
HEALTHEVET DESKTOP CONFIGURATI
"KRN",19,8943,-1)
0^1
"KRN",19,8943,0)
XHDX ASSIGN USER PERSPECTIVES^Assign Perspective List to User^^A^^^^^^^^^^1
"KRN",19,8943,1,0)
^19.06^1^1^3030829^^^
"KRN",19,8943,1,1,0)
This allows an option to be chosen as the list of perspectives for a particular user.
"KRN",19,8943,20)
D BYUSR^XHDX
"KRN",19,8943,"U")
ASSIGN PERSPECTIVE LIST TO USE
"KRN",19,8944,-1)
0^3
"KRN",19,8944,0)
XHDXC DESKTOP^HealtheVet Desktop 1.0^^B^^^^^^^^
"KRN",19,8944,1,0)
^19.06^1^1^3030606^^^^
"KRN",19,8944,1,1,0)
This is the option context for RPCs called by the HealtheVet Desktop.
"KRN",19,8944,99.1)
59358,45169
"KRN",19,8944,"RPC",0)
^19.05P^17^17
"KRN",19,8944,"RPC",1,0)
XHDX VERSRV
"KRN",19,8944,"RPC",2,0)
XHD GET USER DEMOGRAPHICS
"KRN",19,8944,"RPC",3,0)
XWB EXAMPLE WPTEXT
"KRN",19,8944,"RPC",4,0)
XWB EXAMPLE ECHO STRING
"KRN",19,8944,"RPC",6,0)
XHD GET PARAMETER DEF LIST
"KRN",19,8944,"RPC",7,0)
XHD GET CONFIGURATION
"KRN",19,8944,"RPC",8,0)
XHD PUT PARAMETER
"KRN",19,8944,"RPC",9,0)
XHD INSERT PARAMETER CATEGORY
"KRN",19,8944,"RPC",10,0)
XHD UPDATE PARAMETER CATEGORY
"KRN",19,8944,"RPC",11,0)
XHD DELETE PARAMETER CATEGORY
"KRN",19,8944,"RPC",12,0)
XHD REMOVE PARAMETER CATEGORY
"KRN",19,8944,"RPC",13,0)
ORWU DT
"KRN",19,8944,"RPC",14,0)
XHD GET SITE INFO
"KRN",19,8944,"RPC",16,0)
XHDX PERSEL
"KRN",19,8944,"RPC",17,0)
XHD TEST INPUT LIST
"KRN",19,8944,"U")
HEALTHEVET DESKTOP 1.0
"KRN",19,8951,-1)
0^5
"KRN",19,8951,0)
XHDX ASSIGN MULTIPLE USERS^Assign Perspective List to Multiple Users^^A^^^^^^^^^^1
"KRN",19,8951,1,0)
^^2^2^3030709^
"KRN",19,8951,1,1,0)
This allows an options to be chosen as the list of perspectives and
"KRN",19,8951,1,2,0)
assigned to multiple users.
"KRN",19,8951,20)
D ASSIGN^XHDX
"KRN",19,8951,"U")
ASSIGN PERSPECTIVE LIST TO MUL
"KRN",19,8955,-1)
0^6
"KRN",19,8955,0)
XHDX ASSIGN SERVICE^Assign Perspective List to Service^^A^^^^^^^^^^1
"KRN",19,8955,1,0)
^19.06^1^1^3030902^^
"KRN",19,8955,1,1,0)
This allows an option to be chosen as the list of perspectives for a service.
"KRN",19,8955,20)
D BYSVC^XHDX
"KRN",19,8955,"U")
ASSIGN PERSPECTIVE LIST TO SER
"KRN",8994,1966,-1)
0^1
"KRN",8994,1966,0)
XHD DELETE PARAMETER CATEGORY^DELETE^XHDPCAT^1^S^^^^.1
"KRN",8994,1966,1,0)
^8994.01^4^4^3030706^^
"KRN",8994,1966,1,1,0)
This call deletes parameter categories from the M backing store. If the 
"KRN",8994,1966,1,2,0)
second parameter, DELKIDS is passed as "1" (boolean true by M programming 
"KRN",8994,1966,1,3,0)
convention), all descendents of the category in question will also be 
"KRN",8994,1966,1,4,0)
deleted.
"KRN",8994,1966,2,0)
^8994.02A^2^2
"KRN",8994,1966,2,1,0)
PCAT^1^^1^1
"KRN",8994,1966,2,1,1,0)
^^2^2^3021202^
"KRN",8994,1966,2,1,1,1,0)
This is the record number (i.e., IEN) of the parameter category to be 
"KRN",8994,1966,2,1,1,2,0)
deleted.
"KRN",8994,1966,2,2,0)
DELKIDS^1^^0^2
"KRN",8994,1966,2,2,1,0)
^8994.021^2^2^3030706^^
"KRN",8994,1966,2,2,1,1,0)
This boolean flag indicates whether to delete all descendents of the 
"KRN",8994,1966,2,2,1,2,0)
parameter category in question.
"KRN",8994,1966,2,"B","DELKIDS",2)

"KRN",8994,1966,2,"B","PCAT",1)

"KRN",8994,1966,2,"PARAMSEQ",1,1)

"KRN",8994,1966,2,"PARAMSEQ",2,2)

"KRN",8994,1966,3,0)
^8994.03^2^2^3030706^^
"KRN",8994,1966,3,1,0)
Error condition. Returns 0 if the category was successfully deleted, or
"KRN",8994,1966,3,2,0)
1^message if the call failed.
"KRN",8994,1967,-1)
0^2
"KRN",8994,1967,0)
XHD GET ALL PARAMETER DEFS^GETXML^XHDPDEF^4^S^^^1^.1
"KRN",8994,1967,1,0)
^8994.01^1^1^3030706^^^^
"KRN",8994,1967,1,1,0)
Returns all Parameter Definitions.
"KRN",8994,1968,-1)
0^3
"KRN",8994,1968,0)
XHD GET CONFIGURATION^GETTREE^XHDPTREE^4^S^^^1^.1
"KRN",8994,1968,1,0)
^8994.01^1^1^3030706^^^
"KRN",8994,1968,1,1,0)
Returns Configuration tree as XML in the following format:
"KRN",8994,1968,2,0)
^8994.02A^1^1
"KRN",8994,1968,2,1,0)
MODULEID^1^^1^1
"KRN",8994,1968,2,1,1,0)
^8994.021^1^1^3030706^^^
"KRN",8994,1968,2,1,1,1,0)
This is the module id for the module in question.
"KRN",8994,1968,2,"B","MODULEID",1)

"KRN",8994,1968,2,"PARAMSEQ",1,1)

"KRN",8994,1968,3,0)
^8994.03^1^1^3030706^^^
"KRN",8994,1968,3,1,0)
Returns XML in the following format:
"KRN",8994,1969,-1)
0^4
"KRN",8994,1969,0)
XHD GET MUTABLE CONFIGURATION^GETTREE^XHDPMUT^4^S^^^1^.1
"KRN",8994,1969,1,0)
^8994.01^1^1^3030706^^^^
"KRN",8994,1969,1,1,0)
Returns Configuration tree as XML in the following format:
"KRN",8994,1969,2,0)
^8994.02A^1^1
"KRN",8994,1969,2,1,0)
MODULEID^1^^1^1
"KRN",8994,1969,2,1,1,0)
^8994.021^1^1^3030706^^^^
"KRN",8994,1969,2,1,1,1,0)
This is the module id for the module in question.
"KRN",8994,1969,2,"B","MODULEID",1)

"KRN",8994,1969,2,"PARAMSEQ",1,1)

"KRN",8994,1969,3,0)
^8994.03^1^1^3030706^^^^
"KRN",8994,1969,3,1,0)
Returns XML in the following format:
"KRN",8994,1970,-1)
0^5
"KRN",8994,1970,0)
XHD GET PARAMETER DEF LIST^GETALL^XHDPDEF^4^S^^^1
"KRN",8994,1970,1,0)
^8994.01^2^2^3030706^^
"KRN",8994,1970,1,1,0)
Gets all parameter definitions as a list with IEN^NAME^DISPLAY NAME in 
"KRN",8994,1970,1,2,0)
each node of the return array.
"KRN",8994,1971,-1)
0^6
"KRN",8994,1971,0)
XHD GET PARAMETER DEFINITION^GETXML^XHDPDEF^4^S^^^1^.1
"KRN",8994,1971,1,0)
^8994.01^1^1^3030706^^
"KRN",8994,1971,1,1,0)
This call returns an XML representation of a Parameter Definition.
"KRN",8994,1971,2,0)
^8994.02A^1^1
"KRN",8994,1971,2,1,0)
XHDDA^1^^0^1
"KRN",8994,1971,2,1,1,0)
^8994.021^2^2^3030706^^
"KRN",8994,1971,2,1,1,1,0)
This is the IEN of the parameter in the Parameter Definition File 
"KRN",8994,1971,2,1,1,2,0)
(#8989.51).
"KRN",8994,1971,2,"B","XHDDA",1)

"KRN",8994,1971,2,"PARAMSEQ",1,1)

"KRN",8994,1971,3,0)
^8994.03^1^1^3030706^^
"KRN",8994,1971,3,1,0)
This is an XML representation of the Parameter Definition.
"KRN",8994,1972,-1)
0^7
"KRN",8994,1972,0)
XHD GET PARAMETER DEFINITIONS^LIST^XHDPDEF^2^S^^^1
"KRN",8994,1972,1,0)
^8994.01^3^3^3030706^^
"KRN",8994,1972,1,1,0)
Gets parameter definitions as a list with IEN^NAME^DISPLAY NAME^ENTITYLIST
"KRN",8994,1972,1,2,0)
in each node of the return array. This call returns a local array of SIZE 
"KRN",8994,1972,1,3,0)
elements in DIR direction from the initial Definition FROM.
"KRN",8994,1972,2,0)
^8994.02A^3^3
"KRN",8994,1972,2,1,0)
FROM^1^^1^1
"KRN",8994,1972,2,1,1,0)
^^2^2^3030303^
"KRN",8994,1972,2,1,1,1,0)
This is the definition from which the list should begin (i.e., inclusive 
"KRN",8994,1972,2,1,1,2,0)
bound).
"KRN",8994,1972,2,2,0)
DIR^1^^0^2
"KRN",8994,1972,2,2,1,0)
^^5^5^3030303^
"KRN",8994,1972,2,2,1,1,0)
OPTIONAL parameter. This is the DIRECTION from the origin in which the 
"KRN",8994,1972,2,2,1,2,0)
definitions will be retrieved. Pass "+1" to indicate ascending order, or 
"KRN",8994,1972,2,2,1,3,0)
"-1" to indicate descending order). 
"KRN",8994,1972,2,2,1,4,0)
 
"KRN",8994,1972,2,2,1,5,0)
DEFAULT: "+1" or ascending order.
"KRN",8994,1972,2,3,0)
SIZE^1^^0^3
"KRN",8994,1972,2,3,1,0)
^8994.021^4^4^3030706^^
"KRN",8994,1972,2,3,1,1,0)
This is the number of definitions that should be returned with each 
"KRN",8994,1972,2,3,1,2,0)
invocation of the call.
"KRN",8994,1972,2,3,1,3,0)
 
"KRN",8994,1972,2,3,1,4,0)
DEFAULT: 44.
"KRN",8994,1972,2,"B","DIR",2)

"KRN",8994,1972,2,"B","FROM",1)

"KRN",8994,1972,2,"B","SIZE",3)

"KRN",8994,1972,2,"PARAMSEQ",1,1)

"KRN",8994,1972,2,"PARAMSEQ",2,2)

"KRN",8994,1972,2,"PARAMSEQ",3,3)

"KRN",8994,1972,3,0)
^8994.03^6^6^3030706^^
"KRN",8994,1972,3,1,0)
A local array of Parameter Definitions is returned with the following 
"KRN",8994,1972,3,2,0)
format:
"KRN",8994,1972,3,3,0)
 
"KRN",8994,1972,3,4,0)
ORRY(n)="IEN^PARAMETER DEFINITION NAME^DISPLAY NAME^ENTITY(1) 
"KRN",8994,1972,3,5,0)
   IEN|ENTITY(1) NAME;ENTITY(2) IEN|ENTITY(2) NAME;...;ENTITY(n)
"KRN",8994,1972,3,6,0)
   IEN|ENTITY(n) NAME"
"KRN",8994,1973,-1)
0^8
"KRN",8994,1973,0)
XHD INSERT PARAMETER CATEGORY^INSERT^XHDPCAT^1^S^^^^.1
"KRN",8994,1973,1,0)
^8994.01^1^1^3030706^^^
"KRN",8994,1973,1,1,0)
Inserts new parameter categories.
"KRN",8994,1973,2,0)
^8994.02A^1^1
"KRN",8994,1973,2,1,0)
PARAMS^2^^1^1
"KRN",8994,1973,2,1,1,0)
^8994.021^1^1^3030706^^^
"KRN",8994,1973,2,1,1,1,0)
This is the list of fields, subscripted by Field Name.
"KRN",8994,1973,2,"B","PARAMS",1)

"KRN",8994,1973,2,"PARAMSEQ",1,1)

"KRN",8994,1973,3,0)
^8994.03^3^3^3030706^^^
"KRN",8994,1973,3,1,0)
This is an error flag, the first piece will be 0 if no error occurs 
"KRN",8994,1973,3,2,0)
during the filing process, or 1 if an error occurs, followed by an 
"KRN",8994,1973,3,3,0)
explanatory message.
"KRN",8994,1974,-1)
0^9
"KRN",8994,1974,0)
XHD PUT PARAMETER^PUT^XHDPARAM^1^S^^^^.1
"KRN",8994,1974,1,0)
^8994.01^1^1^3030706^^
"KRN",8994,1974,1,1,0)
Call PUT^XPAR or PUTWP^XPAR to file a given parameter.
"KRN",8994,1974,2,0)
^8994.02A^2^2
"KRN",8994,1974,2,1,0)
KEY^1^^1^1
"KRN",8994,1974,2,1,1,0)
^^1^1^3021121^
"KRN",8994,1974,2,1,1,1,0)
This is the key for the parameter.
"KRN",8994,1974,2,2,0)
VALUE^2^^1^2
"KRN",8994,1974,2,2,1,0)
^8994.021^1^1^3030706^^
"KRN",8994,1974,2,2,1,1,0)
This is the value of the parameter.
"KRN",8994,1974,2,"B","KEY",1)

"KRN",8994,1974,2,"B","VALUE",2)

"KRN",8994,1974,2,"PARAMSEQ",1,1)

"KRN",8994,1974,2,"PARAMSEQ",2,2)

"KRN",8994,1974,3,0)
^8994.03^1^1^3030706^^
"KRN",8994,1974,3,1,0)
An Error condition.
"KRN",8994,1975,-1)
0^10
"KRN",8994,1975,0)
XHD REMOVE PARAMETER CATEGORY^REMOVE^XHDPCAT^1^S^^^^.1
"KRN",8994,1975,1,0)
^8994.01^4^4^3030706^^^
"KRN",8994,1975,1,1,0)
This call removes parameter categories from their parents (i.e., "prunes" 
"KRN",8994,1975,1,2,0)
the branch of which the the category is the root). It does NOT delete the 
"KRN",8994,1975,1,3,0)
Category or its descendents. Use the ORR DELETE PARAMETER CATEGORY to 
"KRN",8994,1975,1,4,0)
delete a given categor and all its descendents.
"KRN",8994,1975,2,0)
^8994.02A^2^2
"KRN",8994,1975,2,1,0)
PCAT^1^^1^1
"KRN",8994,1975,2,1,1,0)
^^1^1^3021127^
"KRN",8994,1975,2,1,1,1,0)
This is the record number (i.e., IEN) of the parameter category.
"KRN",8994,1975,2,2,0)
PARENT^1^^1^2
"KRN",8994,1975,2,2,1,0)
^8994.021^1^1^3030706^^^
"KRN",8994,1975,2,2,1,1,0)
This is the record number (i.e., IEN) of the parameter category's parent.
"KRN",8994,1975,2,"B","PARENT",2)

"KRN",8994,1975,2,"B","PCAT",1)

"KRN",8994,1975,2,"PARAMSEQ",1,1)

"KRN",8994,1975,2,"PARAMSEQ",2,2)

"KRN",8994,1975,3,0)
^8994.03^2^2^3030706^^^
"KRN",8994,1975,3,1,0)
Error condition. Returns 0 if the category was successfully removed from 
"KRN",8994,1975,3,2,0)
its parent, or 1^message if the call failed.
"KRN",8994,1976,-1)
0^11
"KRN",8994,1976,0)
XHD UPDATE PARAMETER CATEGORY^UPDATE^XHDPCAT^1^S^^^^.1
"KRN",8994,1976,1,0)
^8994.01^1^1^3030706^^
"KRN",8994,1976,1,1,0)
This call updates ParameterCategories.
"KRN",8994,1977,-1)
0^12
"KRN",8994,1977,0)
XHD GET SITE INFO^SITE^XHDLSITE^1^S
"KRN",8994,1977,1,0)
^8994.01^1^1^3030707^^
"KRN",8994,1977,1,1,0)
Returns Division and Integration names and IDs.
"KRN",8994,1977,3,0)
^8994.03^1^1^3030707^^^
"KRN",8994,1977,3,1,0)
Returns DIVISION ID^SITE NAME^PRIMARY STATION ID^INTEGRATION NAME.
"KRN",8994,1978,-1)
0^13
"KRN",8994,1978,0)
XHD GET USER DEMOGRAPHICS^BYPASS^XHDAUTH^4^^^^1^.1
"KRN",8994,1978,1,0)
^8994.01^2^2^3030707^^^
"KRN",8994,1978,1,1,0)
Returns same demographics as XHD AUTHORIZE, w/o the authorization step. 
"KRN",8994,1978,1,2,0)
Used to populate the JAAS Subject when the SharedBroker is in use. 
"KRN",8994,1978,3,0)
^^11^11^3030707^
"KRN",8994,1978,3,1,0)
<result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
"KRN",8994,1978,3,2,0)
xsi:noNamespaceSchemaLocation="AuthenticateSchema.xsd">
"KRN",8994,1978,3,3,0)
  <userInfo>
"KRN",8994,1978,3,4,0)
    <uniqueId>11</uniqueId>
"KRN",8994,1978,3,5,0)
    <firstName>JOEL</firstName>
"KRN",8994,1978,3,6,0)
    <lastName>RUSSELL</lastName>
"KRN",8994,1978,3,7,0)
    <middleInitial/>
"KRN",8994,1978,3,8,0)
    <title>Clinical Systems Developer</title>
"KRN",8994,1978,3,9,0)
    <lastFourSSN>4156</lastFourSSN>
"KRN",8994,1978,3,10,0)
  </userInfo>
"KRN",8994,1978,3,11,0)
</result>
"KRN",8994,1979,-1)
0^14
"KRN",8994,1979,0)
XHDX PERSEL^PERSEL^XHDX^2^R
"KRN",8994,1979,1,0)
^8994.01^2^2^3030707^^
"KRN",8994,1979,1,1,0)
This returns the list of perspective id's that should be visible for the
"KRN",8994,1979,1,2,0)
current user.
"KRN",8994,1979,3,0)
^^2^2^3030522^
"KRN",8994,1979,3,1,0)
The list returned contains the perspective ids, sorted in the order they
"KRN",8994,1979,3,2,0)
should appear on the desktop.
"KRN",8994,1980,-1)
0^15
"KRN",8994,1980,0)
XHDX VERSRV^VERSRV^XHDX^2
"KRN",8994,1980,1,0)
^8994.01^3^3^3030707^^
"KRN",8994,1980,1,1,0)
Returns a list of options and the associated version numbers.  The list of
"KRN",8994,1980,1,2,0)
options is passed in.  Returns is a list of OptionName^VersionNumber.  The
"KRN",8994,1980,1,3,0)
version number must be the last space piece in the MENU TEXT of the option.
"KRN",8994,1980,2,0)
^8994.02A^1^1
"KRN",8994,1980,2,1,0)
OPT^2^3^1^1
"KRN",8994,1980,2,1,1,0)
^8994.021^1^1^3030707^^
"KRN",8994,1980,2,1,1,1,0)
A list of option names.
"KRN",8994,1980,2,"B","OPT",1)

"KRN",8994,1980,2,"PARAMSEQ",1,1)

"KRN",8994,1980,3,0)
^8994.03^1^1^3030707^^
"KRN",8994,1980,3,1,0)
A list were each line is OptionName^VersionNumber
"KRN",8994,1981,-1)
0^16
"KRN",8994,1981,0)
XHD TEST INPUT LIST^INLST^XHDTST^4
"KRN",8994,1981,1,0)
^8994.01^2^2^3030707^^^^
"KRN",8994,1981,1,1,0)
This RPC returns the list that it's been passed. It's for test purposes 
"KRN",8994,1981,1,2,0)
only.
"KRN",8994,1981,2,0)
^8994.02A^1^1
"KRN",8994,1981,2,1,0)
ORX^2^^1
"KRN",8994,1981,2,1,1,0)
^8994.021^1^1^3030707^^^^
"KRN",8994,1981,2,1,1,1,0)
This is the input list.
"KRN",8994,1981,2,"B","ORX",1)

"KRN",8994,1981,3,0)
^8994.03^1^1^3030707^^^^
"KRN",8994,1981,3,1,0)
ORY is the list that's returned. It will match the input list.
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PGL",8935.91,0,4,.04)
PARENT ID^P8935.91'^XHD(8935.91,^0;4^Q
"PGL",8935.912,0,2,.02)
PARAMETER DEFINITION^P8989.51'^XTV(8989.51,^0;2^Q
"PGL",8935.913,0,2,.02)
SUBCATEGORY^P8935.91^XHD(8935.91,^0;2^Q
"PKG",378,-1)
1^1
"PKG",378,0)
HEALTHEVET DESKTOP^XHD^HealtheVet Desktop
"PKG",378,20,0)
^9.402P^^
"PKG",378,22,0)
^9.49I^1^1
"PKG",378,22,1,0)
1.0^3040116^3030729^1411
"PKG",378,22,1,1,0)
^^3^3^3040116
"PKG",378,22,1,1,1,0)
This is the build for the HealtheVet Desktop.  The desktop is primarily
"PKG",378,22,1,1,2,0)
a client-side Java application.  Some server-side components may be added
"PKG",378,22,1,1,3,0)
in the future.
"PKG",378,"VERSION")
1.0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
15
"RTN","XHDAUTH")
0^12^B7535946
"RTN","XHDAUTH",1,0)
XHDAUTH ; SLC/JER - Authentication calls for HeVD ; 25 Jul 2003  9:42 AM
"RTN","XHDAUTH",2,0)
 ;;1.0;HEALTHEVET DESKTOP;;Jul 15, 2003
"RTN","XHDAUTH",3,0)
AUTHNTC(XHDY,ACCESS,VERIFY) ; authenticate user based on access/verify pair
"RTN","XHDAUTH",4,0)
 N XHD,UID,SPEC,COL,XHDI
"RTN","XHDAUTH",5,0)
 S (XHD,XHDI)=0
"RTN","XHDAUTH",6,0)
 S XHDY=$NA(^TMP("XHDCUID",$J)) K @XHDY
"RTN","XHDAUTH",7,0)
 D XMLHDR(XHDY,.XHDI)
"RTN","XHDAUTH",8,0)
 S UID=$$CHKAV^XUVERIFY(ACCESS_";"_VERIFY)
"RTN","XHDAUTH",9,0)
 I '+UID D
"RTN","XHDAUTH",10,0)
 . S XHDI=XHDI+1
"RTN","XHDAUTH",11,0)
 . S @XHDY@(XHDI)="<errorText>Invalid Access/Verify Code Pair</errorText>"
"RTN","XHDAUTH",12,0)
 E  D UIDTBL(XHDY,UID,.XHDI)
"RTN","XHDAUTH",13,0)
 D XMLFOOT(XHDY,.XHDI)
"RTN","XHDAUTH",14,0)
 Q
"RTN","XHDAUTH",15,0)
BYPASS(XHDY) ; get user demographics w/o security
"RTN","XHDAUTH",16,0)
 N XHD,UID,SPEC,COL,XHDI
"RTN","XHDAUTH",17,0)
 S (XHD,XHDI)=0,UID=$G(DUZ)
"RTN","XHDAUTH",18,0)
 S XHDY=$NA(^TMP("XHDCUID",$J)) K @XHDY
"RTN","XHDAUTH",19,0)
 D XMLHDR(XHDY,.XHDI)
"RTN","XHDAUTH",20,0)
 I '+UID D
"RTN","XHDAUTH",21,0)
 . S XHDI=XHDI+1
"RTN","XHDAUTH",22,0)
 . S @XHDY@(XHDI)="<errorText>Invalid Access/Verify Code Pair</errorText>"
"RTN","XHDAUTH",23,0)
 E  D UIDTBL(XHDY,UID,.XHDI)
"RTN","XHDAUTH",24,0)
 D XMLFOOT(XHDY,.XHDI)
"RTN","XHDAUTH",25,0)
 Q
"RTN","XHDAUTH",26,0)
XMLHDR(XHDY,XHDI) ; append header
"RTN","XHDAUTH",27,0)
 S XHDI=XHDI+1
"RTN","XHDAUTH",28,0)
 S @XHDY@(XHDI)="<result xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""AuthenticateSchema.xsd"">"
"RTN","XHDAUTH",29,0)
 Q
"RTN","XHDAUTH",30,0)
XMLFOOT(XHDY,XHDI)        ; append footer
"RTN","XHDAUTH",31,0)
 S XHDI=XHDI+1
"RTN","XHDAUTH",32,0)
 S @XHDY@(XHDI)="</result>"
"RTN","XHDAUTH",33,0)
 Q
"RTN","XHDAUTH",34,0)
UIDTBL(XHDY,UID,XHDI) ; userIdTable
"RTN","XHDAUTH",35,0)
 N SSN,NSDA,FNM,LNM,MI,TITLE
"RTN","XHDAUTH",36,0)
 S NSDA=+$G(^VA(200,UID,3.1))
"RTN","XHDAUTH",37,0)
 I NSDA D
"RTN","XHDAUTH",38,0)
 . N NSE
"RTN","XHDAUTH",39,0)
 . S NSE=$G(^VA(20,NSDA,1)),LNM=$P(NSE,U),FNM=$P(NSE,U,2),MI=$E($P(NSE,U,3))
"RTN","XHDAUTH",40,0)
 E  D
"RTN","XHDAUTH",41,0)
 . N NAME
"RTN","XHDAUTH",42,0)
 . S NAME=$$NAME^XUSER(UID)
"RTN","XHDAUTH",43,0)
 . S LNM=$$NAME^TIULS(NAME,"LAST"),FNM=$$NAME^TIULS(NAME,"FIRST"),MI=$$NAME^TIULS(NAME,"MI")
"RTN","XHDAUTH",44,0)
 S SSN=$E($P($G(^VA(200,UID,1)),U,9),6,10)
"RTN","XHDAUTH",45,0)
 S TITLE=$P($G(^VA(200,UID,20)),U,3)
"RTN","XHDAUTH",46,0)
 S XHDI=XHDI+1,@XHDY@(XHDI)="<userInfo>"
"RTN","XHDAUTH",47,0)
 D ADDELEM(XHDY,"uniqueId",UID,.XHDI)
"RTN","XHDAUTH",48,0)
 D ADDELEM(XHDY,"firstName",FNM,.XHDI)
"RTN","XHDAUTH",49,0)
 D ADDELEM(XHDY,"lastName",LNM,.XHDI)
"RTN","XHDAUTH",50,0)
 D ADDELEM(XHDY,"middleInitial",MI,.XHDI)
"RTN","XHDAUTH",51,0)
 D ADDELEM(XHDY,"title",TITLE,.XHDI)
"RTN","XHDAUTH",52,0)
 D ADDELEM(XHDY,"lastFourSSN",SSN,.XHDI)
"RTN","XHDAUTH",53,0)
 S XHDI=XHDI+1,@XHDY@(XHDI)="</userInfo>"
"RTN","XHDAUTH",54,0)
 Q
"RTN","XHDAUTH",55,0)
 ;
"RTN","XHDAUTH",56,0)
ADDELEM(XHDY,TAG,VAL,XHDI)        ; Insert an element with its value
"RTN","XHDAUTH",57,0)
 S XHDI=XHDI+1,@XHDY@(XHDI)="<"_TAG_$S(VAL']"":"/>",1:">"_$$ESCAPE^XHDLXM(VAL)_"</"_TAG_">")
"RTN","XHDAUTH",58,0)
 Q
"RTN","XHDAUTH",59,0)
BUILDROW(COL,RNM) ; Resolve fields for each row
"RTN","XHDAUTH",60,0)
 S COL(1)=$$ESCAPE^XHDLXM(RNM)
"RTN","XHDAUTH",61,0)
 Q
"RTN","XHDLSITE")
0^11^B494220
"RTN","XHDLSITE",1,0)
XHDLSITE        ; TLH/SLOIFO - Site Library Calls; 07-JUL-2003 11:14 ; 25 Jul 2003  9:42 AM
"RTN","XHDLSITE",2,0)
 ;;1.0;HEALTHEVET DESKTOP;;Jul 15, 2003
"RTN","XHDLSITE",3,0)
SITE(XHDY)      ; Get Site Name
"RTN","XHDLSITE",4,0)
 S XHDY=$$SITE^VASITE_U_$$NAME^VASITE(DT)
"RTN","XHDLSITE",5,0)
 Q
"RTN","XHDLSITE",6,0)
INTNAME(XHDY)   ; Get Integration Name
"RTN","XHDLSITE",7,0)
 S XHDY=$$NAME^VASITE(DT)
"RTN","XHDLSITE",8,0)
 Q
"RTN","XHDLXM")
0^1^B4966475
"RTN","XHDLXM",1,0)
XHDLXM ; SLC/JER - XML Library calls for CM ; 25 Jul 2003  9:42 AM
"RTN","XHDLXM",2,0)
 ;;1.0;HEALTHEVET DESKTOP;;Jul 15, 2003
"RTN","XHDLXM",3,0)
XMLHDR(XHDY,ROOTEL,XHDI) ; Create XML Header for Mresult pass root element
"RTN","XHDLXM",4,0)
 ; as ROOTEL
"RTN","XHDLXM",5,0)
 S XHDI=+$G(XHDI)+1
"RTN","XHDLXM",6,0)
 S @XHDY@(XHDI)="<?xml version=""1.0"" encoding=""UTF-8"" ?>"
"RTN","XHDLXM",7,0)
 S XHDI=XHDI+1
"RTN","XHDLXM",8,0)
 S @XHDY@(XHDI)="<"_ROOTEL_">"
"RTN","XHDLXM",9,0)
 Q
"RTN","XHDLXM",10,0)
 ;
"RTN","XHDLXM",11,0)
XMLFOOT(XHDY,ROOTEL,XHDI) ; Appends XML closing tags
"RTN","XHDLXM",12,0)
 S XHDI=+$G(XHDI)+1,@XHDY@(XHDI)="</"_ROOTEL_">"
"RTN","XHDLXM",13,0)
 Q
"RTN","XHDLXM",14,0)
 ;
"RTN","XHDLXM",15,0)
ESCAPE(DATA) ; Escapes XML special characters in data
"RTN","XHDLXM",16,0)
 N SPEC
"RTN","XHDLXM",17,0)
 S SPEC("<")="&lt;",SPEC(">")="&gt;",SPEC("""")="&quot;"
"RTN","XHDLXM",18,0)
 S SPEC("'")="&apos;",SPEC("&")="&amp;"
"RTN","XHDLXM",19,0)
 Q $$REPLACE^XLFSTR(DATA,.SPEC)
"RTN","XHDLXM",20,0)
 ;
"RTN","XHDLXM",21,0)
FILENTRY(XHDY,FILE,IENS,FLDS,INCID,XHDI)        ; Produce XML representation of entry
"RTN","XHDLXM",22,0)
 N XHDF,XHDKI,PCATAG S XHDF=0,XHDI=+$G(XHDI)
"RTN","XHDLXM",23,0)
 I +$G(INCID) D
"RTN","XHDLXM",24,0)
 . S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="<id>"_+IENS_"</id>"
"RTN","XHDLXM",25,0)
 D GETS^DIQ(FILE,IENS,$$FLDS(.FLDS),"IE",XHDY)
"RTN","XHDLXM",26,0)
 F  S XHDF=$O(@XHDY@(FILE,IENS,XHDF)) Q:XHDF'>0  D
"RTN","XHDLXM",27,0)
 . N TAG,VAL
"RTN","XHDLXM",28,0)
 . S TAG=$TR($$FLDNAME(XHDF,FILE)," /","")
"RTN","XHDLXM",29,0)
 . S VAL=$G(@XHDY@(FILE,IENS,XHDF,$S($L(FLDS(XHDF),U)=2:$P(FLDS(XHDF),U,2),1:"E")))
"RTN","XHDLXM",30,0)
 . S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="<"_TAG_">"_VAL_"</"_TAG_">"
"RTN","XHDLXM",31,0)
 K @XHDY@(FILE)
"RTN","XHDLXM",32,0)
 Q
"RTN","XHDLXM",33,0)
FLDS(FLDS)      ; Iterate through field list, build DR-string
"RTN","XHDLXM",34,0)
 N XHDI,XHDY S XHDI=0,XHDY=""
"RTN","XHDLXM",35,0)
 F  S XHDI=$O(FLDS(XHDI)) Q:+XHDI'>0  D
"RTN","XHDLXM",36,0)
 . S XHDY=XHDY_$S(XHDY="":"",1:";")_XHDI
"RTN","XHDLXM",37,0)
 Q XHDY
"RTN","XHDLXM",38,0)
FLDNAME(XHDFN,FILENUM)  ; Resolve field names
"RTN","XHDLXM",39,0)
 Q $$MIXED($P($G(^DD(FILENUM,XHDFN,0)),U))
"RTN","XHDLXM",40,0)
MIXED(X) ; Return Mixed Case X
"RTN","XHDLXM",41,0)
 N XHDI,WORD,TMP
"RTN","XHDLXM",42,0)
 S TMP="" F XHDI=1:1:$L(X," ") S WORD=$$LOW^XLFSTR($P(X," ",XHDI)),$E(WORD)=$S(XHDI=1:$E(WORD),1:$$UP^XLFSTR($E(WORD))),TMP=$S(TMP="":WORD,1:TMP_WORD)
"RTN","XHDLXM",43,0)
 Q TMP
"RTN","XHDPAR")
0^2^B1416315
"RTN","XHDPAR",1,0)
XHDPAR       ; SLC/JER - Parameter Calls ; 25 Jul 2003  9:42 AM
"RTN","XHDPAR",2,0)
 ;;1.0;HEALTHEVET DESKTOP;;Jul 15, 2003
"RTN","XHDPAR",3,0)
GETLST(XHDY,PAR,ERR)    ; Gets values for all entities
"RTN","XHDPAR",4,0)
 N ENT,INST,VAL,CNT,X,VDTYPE
"RTN","XHDPAR",5,0)
 S X="ONERROR^XHDPAR",@^%ZOSF("TRAP")
"RTN","XHDPAR",6,0)
 S (CNT,ENT,ERR)=0,VDTYPE=$P($G(^XTV(8989.51,PAR,1)),U)
"RTN","XHDPAR",7,0)
 F  S ENT=$O(^XTV(8989.5,"AC",PAR,ENT)) Q:'ENT  D
"RTN","XHDPAR",8,0)
 . S INST=""
"RTN","XHDPAR",9,0)
 . F  S INST=$O(^XTV(8989.5,"AC",PAR,ENT,INST)) Q:INST=""  D
"RTN","XHDPAR",10,0)
 . . S VAL=^XTV(8989.5,"AC",PAR,ENT,INST)
"RTN","XHDPAR",11,0)
 . . S CNT=CNT+1,XHDY(CNT)=ENT_U_$$ENTNAME^XPARLIST(ENT)_U_INST_U_$S(VDTYPE="D":VAL,1:$$EXT^XPARDD(VAL,PAR,"V"))
"RTN","XHDPAR",12,0)
 Q
"RTN","XHDPAR",13,0)
ONERROR ; Trap errors
"RTN","XHDPAR",14,0)
 S ERR="1^"_$TR($$EC^%ZOSV,"^","~")
"RTN","XHDPAR",15,0)
 D ^%ZTER
"RTN","XHDPAR",16,0)
 Q
"RTN","XHDPARAM")
0^3^B3638871
"RTN","XHDPARAM",1,0)
XHDPARAM        ; SLC/JER - Configurator Server Calls ; 25 Jul 2003  9:42 AM
"RTN","XHDPARAM",2,0)
 ;;1.0;HEALTHEVET DESKTOP;;Jul 15, 2003
"RTN","XHDPARAM",3,0)
PUT(ERR,KEY,VALUE)      ; Calls PUT^XPAR to set param value
"RTN","XHDPARAM",4,0)
 N ENT,PAR,INST,PUTVAL,X,VDTYPE
"RTN","XHDPARAM",5,0)
 S X="ONERROR^XHDPARAM",@^%ZOSF("TRAP")
"RTN","XHDPARAM",6,0)
 S ENT=$S(+$P(KEY,U,2):$P(KEY,U,2),1:DUZ_";VA(200,"),PAR=$P(KEY,U,3)
"RTN","XHDPARAM",7,0)
 S VDTYPE=$P($G(^XTV(8989.51,PAR,1)),U)
"RTN","XHDPARAM",8,0)
 S INST=$P(KEY,U,4)
"RTN","XHDPARAM",9,0)
 S:INST']"" INST=1
"RTN","XHDPARAM",10,0)
 I $S(VDTYPE="W":1,$$COUNT(.VALUE)>1:1,1:0) D SETWPVAL(.VALUE,.PUTVAL) S PUTVAL=$P(KEY,U) I 1
"RTN","XHDPARAM",11,0)
 E  S PUTVAL=$$XFORM(VALUE(1),VDTYPE)
"RTN","XHDPARAM",12,0)
 S ^XTMP("XHDPARAM",$J,KEY,"ENT")=ENT,^("PAR")=PAR,^("INST")=INST,^("PUTVAL")=PUTVAL
"RTN","XHDPARAM",13,0)
 D EN^XPAR(ENT,PAR,INST,.PUTVAL,.ERR)
"RTN","XHDPARAM",14,0)
 S ^XTMP("XHDPARAM",$J,KEY,"ERR")=ERR
"RTN","XHDPARAM",15,0)
 Q
"RTN","XHDPARAM",16,0)
COUNT(VALUE) ; Count number of lines in VALUE
"RTN","XHDPARAM",17,0)
 N XHDI,COUNT S (COUNT,XHDI)=0
"RTN","XHDPARAM",18,0)
 F  S XHDI=$O(VALUE(XHDI)) Q:+XHDI'>0  S COUNT=COUNT+1
"RTN","XHDPARAM",19,0)
 Q COUNT
"RTN","XHDPARAM",20,0)
SETWPVAL(INVALUE,OUTVALUE)      ; Sets 0-nodes for WordProcessing value
"RTN","XHDPARAM",21,0)
 N XHDI,VAL S XHDI=0
"RTN","XHDPARAM",22,0)
 F  S XHDI=$O(INVALUE(XHDI)) Q:+XHDI'>0  S OUTVALUE(XHDI,0)=INVALUE(XHDI) K INVALUE(XHDI)
"RTN","XHDPARAM",23,0)
 Q
"RTN","XHDPARAM",24,0)
ONERROR ; Trap errors
"RTN","XHDPARAM",25,0)
 S ERR="1^"_$TR($$EC^%ZOSV,"^","~")
"RTN","XHDPARAM",26,0)
 D ^%ZTER
"RTN","XHDPARAM",27,0)
 Q
"RTN","XHDPARAM",28,0)
XFORM(VAL,VDTYPE)       ; Transform values for select data types
"RTN","XHDPARAM",29,0)
 N XHDY S XHDY=VAL
"RTN","XHDPARAM",30,0)
 I VDTYPE="D" S XHDY=$$HL7TFM^XLFDT(VAL) G XFORMX
"RTN","XHDPARAM",31,0)
 I VDTYPE="Y" S XHDY=$S(VAL="true":"YES",VAL="false":"NO",1:VAL)
"RTN","XHDPARAM",32,0)
XFORMX Q XHDY
"RTN","XHDPCAT")
0^4^B24059494
"RTN","XHDPCAT",1,0)
XHDPCAT        ; SLC/JER - Configurator Server Calls ; 25 Jul 2003  9:42 AM
"RTN","XHDPCAT",2,0)
 ;;1.0;HEALTHEVET DESKTOP;;Jul 15, 2003
"RTN","XHDPCAT",3,0)
INSERT(ERR,CATFLDS)      ; Insert ParameterCategory
"RTN","XHDPCAT",4,0)
 N XHDI,FDA,LASTI,LASTS,LASTN,X,XHDDAD,NEWDA
"RTN","XHDPCAT",5,0)
 S X="ONERROR^XHDPCAT",@^%ZOSF("TRAP")
"RTN","XHDPCAT",6,0)
 S XHDI="",(ERR,LASTS,LASTN)=0,LASTI=1
"RTN","XHDPCAT",7,0)
 F  S XHDI=$O(CATFLDS(XHDI)) Q:+XHDI'>0  D
"RTN","XHDPCAT",8,0)
 . S FDA($$GETFILE(XHDI),$$GETIENS(XHDI),$$GETORI(XHDI))=CATFLDS(XHDI)
"RTN","XHDPCAT",9,0)
 I $D(FDA)'>9 S ERR="1^Request not well-formed." Q
"RTN","XHDPCAT",10,0)
 D UPDATER(.ERR,.FDA) Q:+ERR
"RTN","XHDPCAT",11,0)
 I '+ERR S NEWDA=$P(ERR,U,2)
"RTN","XHDPCAT",12,0)
 ; If new record's parent doesn't include it as a subCategory, add it
"RTN","XHDPCAT",13,0)
 S XHDDAD=+$P(^XHD(8935.91,NEWDA,0),U,4)
"RTN","XHDPCAT",14,0)
 I +XHDDAD,'+$O(^XHD(8935.91,"SCAT",NEWDA,XHDDAD,0)) D  Q:+ERR
"RTN","XHDPCAT",15,0)
 . N FDA,SUBERR
"RTN","XHDPCAT",16,0)
 . S FDA(8935.913,"?+1,"_XHDDAD_",",.01)=(+$O(^XHD(8935.91,1,3,"A"),-1)+1)
"RTN","XHDPCAT",17,0)
 . S FDA(8935.913,"?+1,"_XHDDAD_",",.02)="`"_NEWDA
"RTN","XHDPCAT",18,0)
 . D UPDATER(.SUBERR,.FDA) S:+SUBERR ERR=SUBERR
"RTN","XHDPCAT",19,0)
 ; If there are subcategories, file NEWDA as their parentId
"RTN","XHDPCAT",20,0)
 I +NEWDA D
"RTN","XHDPCAT",21,0)
 . N XHDJ,SUBERR S XHDJ=0
"RTN","XHDPCAT",22,0)
 . F  S XHDJ=$O(^XHD(8935.91,NEWDA,3,XHDJ)) Q:+XHDJ'>0!+ERR  D
"RTN","XHDPCAT",23,0)
 . . N SUBDA,FDA,IEN,MSG
"RTN","XHDPCAT",24,0)
 . . S SUBDA=$P($G(^XHD(8935.91,NEWDA,3,XHDJ,0)),U,2) Q:+SUBDA'>0
"RTN","XHDPCAT",25,0)
 . . I +$P($G(^XHD(8935.91,SUBDA,0)),U,4)=NEWDA Q
"RTN","XHDPCAT",26,0)
 . . S FDA(8935.91,SUBDA_",",.04)="`"_NEWDA
"RTN","XHDPCAT",27,0)
 . . D FILER(.SUBERR,.FDA,SUBDA) S:+SUBERR ERR=SUBERR
"RTN","XHDPCAT",28,0)
 Q
"RTN","XHDPCAT",29,0)
ADDPARAM(ERR,CATFLDS) ; Add Parameter to Category
"RTN","XHDPCAT",30,0)
 N XHDI,FDA,PCDA,X S X="ONERROR^XHDPCAT",@^%ZOSF("TRAP")
"RTN","XHDPCAT",31,0)
 S XHDI="",ERR=0,PCDA=+$G(CATFLDS("IEN"))
"RTN","XHDPCAT",32,0)
 I $S('PCDA:1,'$D(^XHD(8935.91,PCDA,0)):1,1:0) D  Q
"RTN","XHDPCAT",33,0)
 . S ERR="1^Invalid ID passed."
"RTN","XHDPCAT",34,0)
 L +^XHD(8935.91,PCDA):1
"RTN","XHDPCAT",35,0)
 E  D  Q
"RTN","XHDPCAT",36,0)
 . S ERR="1^Another process is modifying Category #"_PCDA
"RTN","XHDPCAT",37,0)
 F  S XHDI=$O(CATFLDS(XHDI)) Q:+XHDI'>0  D
"RTN","XHDPCAT",38,0)
 . S FDA(8935.912,"?+1,"_PCDA_",",$P(XHDI,U,3))=CATFLDS(XHDI)
"RTN","XHDPCAT",39,0)
 I $D(FDA)'>9 S ERR="1^Request not well-formed." Q
"RTN","XHDPCAT",40,0)
 D UPDATER(.ERR,.FDA)
"RTN","XHDPCAT",41,0)
 L -^XHD(8935.91,PCDA)
"RTN","XHDPCAT",42,0)
 Q
"RTN","XHDPCAT",43,0)
UPDATER(ERR,FDA)        ; Call UPDATE^DIE to create pCats or subCats
"RTN","XHDPCAT",44,0)
 N IEN,MSG
"RTN","XHDPCAT",45,0)
 D UPDATE^DIE("E","FDA","IEN","MSG")
"RTN","XHDPCAT",46,0)
 I $D(MSG("DIERR")) S ERR="1^"_MSG("DIERR",1,"TEXT",1) Q
"RTN","XHDPCAT",47,0)
 S ERR="0^"_IEN(1)_U_IEN(1,0)
"RTN","XHDPCAT",48,0)
 Q
"RTN","XHDPCAT",49,0)
UPDATE(ERR,CATFLDS)     ; Call FILE^DIE to update ParameterCategory
"RTN","XHDPCAT",50,0)
 N XHDI,FDA,X S X="ONERROR^XHDPCAT",@^%ZOSF("TRAP")
"RTN","XHDPCAT",51,0)
 S XHDI="",ERR=0,PCDA=+$G(CATFLDS("IEN"))
"RTN","XHDPCAT",52,0)
 I $S('PCDA:1,'$D(^XHD(8935.91,PCDA,0)):1,1:0) D  Q
"RTN","XHDPCAT",53,0)
 . S ERR="1^Invalid ID passed."
"RTN","XHDPCAT",54,0)
 F  S XHDI=$O(CATFLDS(XHDI)) Q:+XHDI'>0  D
"RTN","XHDPCAT",55,0)
 . S FDA($$GETFILE(XHDI),$$GETUPIEN(PCDA,XHDI),$$GETORI(XHDI))=CATFLDS(XHDI)
"RTN","XHDPCAT",56,0)
 I $D(FDA)'>9 S ERR="1^Request not well-formed." Q
"RTN","XHDPCAT",57,0)
 D UPDATER(.ERR,.FDA)
"RTN","XHDPCAT",58,0)
 Q
"RTN","XHDPCAT",59,0)
REMPARAM(ERR,PDEF,PCDA) ; Remove Parameter from Category
"RTN","XHDPCAT",60,0)
 N XHDSDA,XHDI,FDA,X S X="ONERROR^XHDPCAT",@^%ZOSF("TRAP")
"RTN","XHDPCAT",61,0)
 S XHDI="",ERR=0
"RTN","XHDPCAT",62,0)
 I $S('+$G(PCDA):1,'$D(^XHD(8935.91,PCDA,0)):1,1:0) D  Q
"RTN","XHDPCAT",63,0)
 . S ERR="1^Invalid ID passed."
"RTN","XHDPCAT",64,0)
 S XHDSDA=$O(^XHD(8935.91,PCDA,2,"C",PDEF,0))
"RTN","XHDPCAT",65,0)
 I +XHDSDA S FDA(8935.912,XHDSDA_","_PCDA_",",.01)="@"
"RTN","XHDPCAT",66,0)
 I $D(FDA)'>9 S ERR="1^Parameter "_PDEF_" not found in Category "_PCDA_"." Q
"RTN","XHDPCAT",67,0)
 D FILER(.ERR,.FDA,PCDA)
"RTN","XHDPCAT",68,0)
 Q
"RTN","XHDPCAT",69,0)
REMOVE(ERR,PCAT,PARENT) ; Remove Parameter Category from parent
"RTN","XHDPCAT",70,0)
 N XHDSDA,FDA,X S XHDSDA=0,X="ONERROR^XHDPCAT",@^%ZOSF("TRAP")
"RTN","XHDPCAT",71,0)
 ; remove reference to parent
"RTN","XHDPCAT",72,0)
 S FDA(8935.91,PCAT_",",.04)="@"
"RTN","XHDPCAT",73,0)
 ; remove PCAT from parent's subCat multiple
"RTN","XHDPCAT",74,0)
 S XHDSDA=$O(^XHD(8935.91,PARENT,3,"C",PCAT,0))
"RTN","XHDPCAT",75,0)
 I +XHDSDA S FDA(8935.913,XHDSDA_","_PARENT_",",.01)="@"
"RTN","XHDPCAT",76,0)
 I $D(FDA)'>9 S ERR="1^Sub-category not found in Parent Category." Q
"RTN","XHDPCAT",77,0)
 D FILER(.ERR,.FDA,PARENT)
"RTN","XHDPCAT",78,0)
 Q
"RTN","XHDPCAT",79,0)
DELETE(ERR,PCAT,DELKIDS) ; Delete Parameter Category and all descendents
"RTN","XHDPCAT",80,0)
 N X,FDA,PARENT S X="ONERROR^XHDPCAT",@^%ZOSF("TRAP"),ERR=0
"RTN","XHDPCAT",81,0)
 ; if DELKIDS, remove descendents first
"RTN","XHDPCAT",82,0)
 I +$G(DELKIDS) D  Q:+ERR
"RTN","XHDPCAT",83,0)
 . N XHDI S XHDI=0
"RTN","XHDPCAT",84,0)
 . F  S XHDI=$O(^XHD(8935.91,PCAT,3,XHDI)) Q:+XHDI'>0!+ERR  D
"RTN","XHDPCAT",85,0)
 . . N XHDSDA S XHDSDA=$P($G(^XHD(8935.91,PCAT,3,XHDI,0)),U,2)
"RTN","XHDPCAT",86,0)
 . . I '+XHDSDA S ERR="1^Corrupt Sub-category at PCat #"_PCAT_", seq #"_XHDI Q
"RTN","XHDPCAT",87,0)
 . . D DELETE(.ERR,XHDSDA,1)
"RTN","XHDPCAT",88,0)
 ;Remove the sub-category from its parent prior to deletion
"RTN","XHDPCAT",89,0)
 S PARENT=$P($G(^XHD(8935.91,PCAT,0)),U,4)
"RTN","XHDPCAT",90,0)
 I +PARENT D REMOVE(.ERR,PCAT,PARENT)
"RTN","XHDPCAT",91,0)
 ; delete record
"RTN","XHDPCAT",92,0)
 S FDA(8935.91,PCAT_",",.01)="@"
"RTN","XHDPCAT",93,0)
 I $D(FDA)'>9 S ERR="1^Request not well-formed." Q
"RTN","XHDPCAT",94,0)
 D FILER(.ERR,.FDA,PCAT)
"RTN","XHDPCAT",95,0)
 Q
"RTN","XHDPCAT",96,0)
FILER(ERR,FDA,XHDDA)    ; Call FILE^DIE with FDA to post changes
"RTN","XHDPCAT",97,0)
 I $D(FDA)'>9 S ERR="1^Request not well-formed." Q
"RTN","XHDPCAT",98,0)
 L +^XHD(8935.91,XHDDA):1
"RTN","XHDPCAT",99,0)
 E  D  Q
"RTN","XHDPCAT",100,0)
 . S ERR="1^Another process is modifying Category #"_XHDDA
"RTN","XHDPCAT",101,0)
 D FILE^DIE("E","FDA","MSG")
"RTN","XHDPCAT",102,0)
 L -^XHD(8935.91,XHDDA)
"RTN","XHDPCAT",103,0)
 I $D(MSG("DIERR")) S ERR="1^"_MSG("DIERR",1,"TEXT",1) Q
"RTN","XHDPCAT",104,0)
 S ERR="0^"_XHDDA
"RTN","XHDPCAT",105,0)
 Q
"RTN","XHDPCAT",106,0)
ONERROR ; Trap errors
"RTN","XHDPCAT",107,0)
 S ERR="1^"_$TR($$EC^%ZOSV,"^","~")
"RTN","XHDPCAT",108,0)
 D ^%ZTER
"RTN","XHDPCAT",109,0)
 Q
"RTN","XHDPCAT",110,0)
GETUPIEN(PCDA,XHDI)      ; Get IENS for UPDATE call
"RTN","XHDPCAT",111,0)
 Q $S($L(XHDI,U)=3:"?+"_$P(XHDI,U,2)_","_PCDA_",",1:PCDA_",")
"RTN","XHDPCAT",112,0)
GETFILE(XHDI)    ; Get first subscript for FDA
"RTN","XHDPCAT",113,0)
 Q $S($P(XHDI,U)=2:8935.912,$P(XHDI,U)=3:8935.913,1:8935.91)
"RTN","XHDPCAT",114,0)
GETIENS(XHDI)    ; Get IENS for UPDATE^DIE call
"RTN","XHDPCAT",115,0)
 I $L(XHDI,U)=3 D
"RTN","XHDPCAT",116,0)
 . S LASTI=LASTI+$S($P(XHDI,U)'=LASTS:1,$P(XHDI,U,2)'=LASTN:1,1:0)
"RTN","XHDPCAT",117,0)
 . S LASTS=$P(XHDI,U),LASTN=$P(XHDI,U,2)
"RTN","XHDPCAT",118,0)
 Q $S($L(XHDI,U)=3:"?+"_LASTI_",?+1,",1:"?+1,")
"RTN","XHDPCAT",119,0)
GETORI(XHDI)     ; Get field subscript for FDA
"RTN","XHDPCAT",120,0)
 Q $S($L(XHDI,U)=3:$P(XHDI,U,3),1:XHDI)
"RTN","XHDPDEF")
0^5^B30481256
"RTN","XHDPDEF",1,0)
XHDPDEF        ; SLC/JER - Parameter Definition Calls ; 25 Jul 2003  9:42 AM
"RTN","XHDPDEF",2,0)
 ;;1.0;HEALTHEVET DESKTOP;;Jul 15, 2003
"RTN","XHDPDEF",3,0)
LIST(XHDY,FROM,DIR,SIZE)        ; Get next SIZE definitions in DIR direction
"RTN","XHDPDEF",4,0)
 N XHDI,XHDCNT S XHDCNT=0,SIZE=$G(SIZE,44),DIR=$G(DIR,"+1")
"RTN","XHDPDEF",5,0)
 S XHDI=FROM ;$S(FROM="":FROM,1:$O(^XTV(8989.51,"B",FROM),-DIR))
"RTN","XHDPDEF",6,0)
 F  S XHDI=$O(^XTV(8989.51,"B",XHDI),DIR) Q:XHDI']""!(XHDCNT'<SIZE)  D
"RTN","XHDPDEF",7,0)
 . N XHDDA S XHDDA=0
"RTN","XHDPDEF",8,0)
 . F  S XHDDA=$O(^XTV(8989.51,"B",XHDI,XHDDA)) Q:+XHDDA'>0!(XHDCNT'<SIZE)  D
"RTN","XHDPDEF",9,0)
 . . S XHDCNT=XHDCNT+1,XHDY(XHDCNT)=XHDDA_U_$P($G(^XTV(8989.51,+XHDDA,0)),U,1,2)_U_$$ENTSTR(XHDDA)
"RTN","XHDPDEF",10,0)
 Q
"RTN","XHDPDEF",11,0)
GETALL(XHDY)    ; Gets all parameter definitions in ^TMP("XHDPDEF",$J)
"RTN","XHDPDEF",12,0)
 N XHDI,XHDCNT S XHDI="",XHDCNT=0 S XHDY=$NA(^TMP("XHDPDEF",$J))
"RTN","XHDPDEF",13,0)
 F  S XHDI=$O(^XTV(8989.51,"B",XHDI)) Q:XHDI']""  D
"RTN","XHDPDEF",14,0)
 . N XHDDA S XHDDA=0
"RTN","XHDPDEF",15,0)
 . F  S XHDDA=$O(^XTV(8989.51,"B",XHDI,XHDDA)) Q:+XHDDA'>0  D
"RTN","XHDPDEF",16,0)
 . . S XHDCNT=XHDCNT+1
"RTN","XHDPDEF",17,0)
 . . S @XHDY@(XHDCNT)=XHDDA_U_$P($G(^XTV(8989.51,XHDDA,0)),U,1,2)_U_$$ENTSTR(XHDDA)
"RTN","XHDPDEF",18,0)
 Q
"RTN","XHDPDEF",19,0)
ENTSTR(XHDDA)    ; Get applicable entities
"RTN","XHDPDEF",20,0)
 N XHDI,ENTSTR,ENTCNT S ENTSTR="",(ENTCNT,XHDI)=0
"RTN","XHDPDEF",21,0)
 F  S XHDI=$O(^XTV(8989.51,XHDDA,30,XHDI)) Q:XHDI'>0  D
"RTN","XHDPDEF",22,0)
 . N ENT0 S ENT0=$G(^XTV(8989.51,XHDDA,30,XHDI,0)) Q:+ENT0'>0
"RTN","XHDPDEF",23,0)
 . S ENTSTR=ENTSTR_$S(ENTCNT=0:"",1:";")_+ENT0_"|"_$$ENTFILE($P(ENT0,U,2))
"RTN","XHDPDEF",24,0)
 . S ENTCNT=ENTCNT+1
"RTN","XHDPDEF",25,0)
 Q ENTSTR
"RTN","XHDPDEF",26,0)
ENTFILE(ENTDA)  ; Resolve entity name
"RTN","XHDPDEF",27,0)
 Q $P($G(^XTV(8989.518,ENTDA,0)),U)
"RTN","XHDPDEF",28,0)
GETXML(XHDY,XHDDA)        ; Control Branching
"RTN","XHDPDEF",29,0)
 N XHDI,XHDJ,X S X="ONERROR^XHDPDEF",@^%ZOSF("TRAP")
"RTN","XHDPDEF",30,0)
 S XHDI=0,XHDJ=""
"RTN","XHDPDEF",31,0)
 S XHDY=$NA(^TMP("XHDPDEF",$J)) K @XHDY
"RTN","XHDPDEF",32,0)
 S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="<?xml version=""1.0"" encoding=""UTF-8""?>"
"RTN","XHDPDEF",33,0)
 S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="<getParameterDefinitionsCallResult>"
"RTN","XHDPDEF",34,0)
 S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="<parameterDefinitionList>"
"RTN","XHDPDEF",35,0)
 I +$G(XHDDA) D
"RTN","XHDPDEF",36,0)
 . D GETDEF(XHDY,XHDDA,.XHDI)
"RTN","XHDPDEF",37,0)
 E  D
"RTN","XHDPDEF",38,0)
 . F  S XHDJ=$O(^XTV(8989.51,"B",XHDJ)) Q:XHDJ=""  D
"RTN","XHDPDEF",39,0)
 . . N XHDDA S XHDDA=0
"RTN","XHDPDEF",40,0)
 . . F  S XHDDA=$O(^XTV(8989.51,"B",XHDJ,XHDDA)) Q:+XHDDA'>0  D
"RTN","XHDPDEF",41,0)
 . . . D GETDEF(XHDY,XHDDA,.XHDI)
"RTN","XHDPDEF",42,0)
 S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="</parameterDefinitionList>"
"RTN","XHDPDEF",43,0)
 S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="</getParameterDefinitionsCallResult>"
"RTN","XHDPDEF",44,0)
 S XHDY=$NA(^TMP("XHDPDEF",$J,"XMLDOC"))
"RTN","XHDPDEF",45,0)
 M ^XTMP("XHDPDEF",$J,"XMLDOC")=@XHDY
"RTN","XHDPDEF",46,0)
 Q
"RTN","XHDPDEF",47,0)
FLDS() ; Get field string
"RTN","XHDPDEF",48,0)
 Q ".01:8"
"RTN","XHDPDEF",49,0)
GETDEF(XHDY,XHDDA,XHDI)       ; Loads Top-level Fields
"RTN","XHDPDEF",50,0)
 N XHDF,XHDDI S XHDF=0
"RTN","XHDPDEF",51,0)
 S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="<parameterDefinition>"
"RTN","XHDPDEF",52,0)
 S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="<id>"_XHDDA_"</id>"
"RTN","XHDPDEF",53,0)
 D GETS^DIQ(8989.51,XHDDA_",",$$FLDS,"E",XHDY)
"RTN","XHDPDEF",54,0)
 F  S XHDF=$O(@XHDY@(8989.51,XHDDA_",",XHDF)) Q:XHDF'>0  D
"RTN","XHDPDEF",55,0)
 . N TAG,VAL
"RTN","XHDPDEF",56,0)
 . S TAG=$TR($$FLDNAME(XHDF,8989.51)," /","")
"RTN","XHDPDEF",57,0)
 . S VAL=$G(@XHDY@(8989.51,XHDDA_",",XHDF,"E"))
"RTN","XHDPDEF",58,0)
 . I $S(XHDF=.03:1,XHDF=.06:1,1:0) S VAL=$S(VAL="Yes":"true",1:"false")
"RTN","XHDPDEF",59,0)
 . S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="<"_TAG_">"_$$ESCAPE^XHDLXM(VAL)_"</"_TAG_">"
"RTN","XHDPDEF",60,0)
 K @XHDY@(8989.51)
"RTN","XHDPDEF",61,0)
 ;** get description **
"RTN","XHDPDEF",62,0)
 S XHDDI=0
"RTN","XHDPDEF",63,0)
 S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="<description>"
"RTN","XHDPDEF",64,0)
 S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="<![CDATA["
"RTN","XHDPDEF",65,0)
 F  S XHDDI=$O(^XTV(8989.51,XHDDA,20,XHDDI)) Q:+XHDDI'>0  D
"RTN","XHDPDEF",66,0)
 . S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)=$G(^XTV(8989.51,XHDDA,20,XHDDI,0))
"RTN","XHDPDEF",67,0)
 S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="]]>"
"RTN","XHDPDEF",68,0)
 S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="</description>"
"RTN","XHDPDEF",69,0)
 ;** get entities **
"RTN","XHDPDEF",70,0)
 D GETENTS(XHDY,XHDDA,.XHDI)
"RTN","XHDPDEF",71,0)
 ;** get keywords **
"RTN","XHDPDEF",72,0)
 D KEYWORDS(XHDY,XHDDA,.XHDI)
"RTN","XHDPDEF",73,0)
 S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="</parameterDefinition>"
"RTN","XHDPDEF",74,0)
 Q
"RTN","XHDPDEF",75,0)
FLDNAME(XHDFN,FILENUM)  ; Resolve field names
"RTN","XHDPDEF",76,0)
 Q $$MIXED($P($G(^DD(FILENUM,XHDFN,0)),U))
"RTN","XHDPDEF",77,0)
MIXED(X) ; Return Mixed Case X
"RTN","XHDPDEF",78,0)
 N XHDI,WORD,TMP
"RTN","XHDPDEF",79,0)
 S TMP="" F XHDI=1:1:$L(X," ") S WORD=$$LOW^XLFSTR($P(X," ",XHDI)),$E(WORD)=$S(XHDI=1:$E(WORD),1:$$UP^XLFSTR($E(WORD))),TMP=$S(TMP="":WORD,1:TMP_WORD)
"RTN","XHDPDEF",80,0)
 Q TMP
"RTN","XHDPDEF",81,0)
GETENTS(XHDY,XHDDA,XHDI)        ; Get allowable entities
"RTN","XHDPDEF",82,0)
 N XHDSDA S XHDSDA=0,FLDS=".01:.02"
"RTN","XHDPDEF",83,0)
 S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="<entities>"
"RTN","XHDPDEF",84,0)
 F  S XHDSDA=$O(^XTV(8989.51,XHDDA,30,XHDSDA)) Q:+XHDSDA'>0  D
"RTN","XHDPDEF",85,0)
 . S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="<entity>"
"RTN","XHDPDEF",86,0)
 . D GETS^DIQ(8989.513,XHDSDA_","_XHDDA_",",FLDS,"E",XHDY)
"RTN","XHDPDEF",87,0)
 . F  S XHDF=$O(@XHDY@(8989.513,XHDSDA_","_XHDDA_",",XHDF)) Q:XHDF'>0  D
"RTN","XHDPDEF",88,0)
 . . N TAG,VAL
"RTN","XHDPDEF",89,0)
 . . S TAG=$TR($$FLDNAME(XHDF,8989.513)," /","")
"RTN","XHDPDEF",90,0)
 . . S VAL=$G(@XHDY@(8989.513,XHDSDA_","_XHDDA_",",XHDF,"E"))
"RTN","XHDPDEF",91,0)
 . . S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="<"_TAG_">"_$$ESCAPE^XHDLXM(VAL)_"</"_TAG_">"
"RTN","XHDPDEF",92,0)
 . K @XHDY@(8989.513)
"RTN","XHDPDEF",93,0)
 . S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="</entity>"
"RTN","XHDPDEF",94,0)
 S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="</entities>"
"RTN","XHDPDEF",95,0)
 Q
"RTN","XHDPDEF",96,0)
KEYWORDS(XHDY,XHDDA,XHDI)        ; Get Keywords
"RTN","XHDPDEF",97,0)
 N XHDSDA S XHDSDA=0,FLDS=".01"
"RTN","XHDPDEF",98,0)
 S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="<keywords>"
"RTN","XHDPDEF",99,0)
 F  S XHDSDA=$O(^XTV(8989.51,XHDDA,4,XHDSDA)) Q:+XHDSDA'>0  D
"RTN","XHDPDEF",100,0)
 . D GETS^DIQ(8989.514,XHDSDA_","_XHDDA_",",FLDS,"E",XHDY)
"RTN","XHDPDEF",101,0)
 . F  S XHDF=$O(@XHDY@(8989.514,XHDSDA_","_XHDDA_",",XHDF)) Q:XHDF'>0  D
"RTN","XHDPDEF",102,0)
 . . N TAG,VAL
"RTN","XHDPDEF",103,0)
 . . S TAG=$TR($$FLDNAME(XHDF,8989.514)," /","")
"RTN","XHDPDEF",104,0)
 . . S VAL=$G(@XHDY@(8989.514,XHDSDA_","_XHDDA_",",XHDF,"E"))
"RTN","XHDPDEF",105,0)
 . . S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="<"_TAG_">"_$$ESCAPE^XHDLXM(VAL)_"</"_TAG_">"
"RTN","XHDPDEF",106,0)
 . K @XHDY@(8989.514)
"RTN","XHDPDEF",107,0)
 S XHDI=XHDI+1,@XHDY@("XMLDOC",XHDI)="</keywords>"
"RTN","XHDPDEF",108,0)
 Q
"RTN","XHDPDEF",109,0)
ONERROR ; Trap errors
"RTN","XHDPDEF",110,0)
 N XHDCI S XHDCI=4
"RTN","XHDPDEF",111,0)
 ; remove remnant of DIQ1 call result
"RTN","XHDPDEF",112,0)
 K @XHDCY@(8989.51),@XHDCY@(8989.513)
"RTN","XHDPDEF",113,0)
 ; remove partial configTree node
"RTN","XHDPDEF",114,0)
 F  S XHDCI=$O(@XHDCY@("XMLDOC",XHDCI)) Q:+XHDCI'>0  K @XHDCY@("XMLDOC",XHDCI)
"RTN","XHDPDEF",115,0)
 ; append error node to call result
"RTN","XHDPDEF",116,0)
 S XHDCI=4
"RTN","XHDPDEF",117,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<error>"
"RTN","XHDPDEF",118,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<![CDATA["_$$EC^%ZOSV_"]]>"
"RTN","XHDPDEF",119,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</error>"
"RTN","XHDPDEF",120,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</getConfigurationCallResult>"
"RTN","XHDPDEF",121,0)
 S XHDCY=$NA(^TMP("XHDPTREE",$J,"XMLDOC"))
"RTN","XHDPDEF",122,0)
 D ^%ZTER
"RTN","XHDPDEF",123,0)
 Q
"RTN","XHDPEDIT")
0^6^B43733011
"RTN","XHDPEDIT",1,0)
XHDPEDIT        ; SLC/JER - Configuration Editor Server Calls ; 25 Jul 2003  9:42 AM
"RTN","XHDPEDIT",2,0)
 ;;1.0;HEALTHEVET DESKTOP;;Jul 15, 2003
"RTN","XHDPEDIT",3,0)
GETTREE(XHDCY,XHDMOD)        ; Control Branching
"RTN","XHDPEDIT",4,0)
 N XHDCI,XHDCDA
"RTN","XHDPEDIT",5,0)
 S XHDCI=0,XHDCDA=+$O(^XHD(8935.91,"AMROOT",XHDMOD,0))
"RTN","XHDPEDIT",6,0)
 S XHDCY=$NA(^TMP("XHDPTREE",$J)) K @XHDCY
"RTN","XHDPEDIT",7,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<?xml version=""1.0"" encoding=""UTF-8""?>"
"RTN","XHDPEDIT",8,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<getConfigurationCallResult"
"RTN","XHDPEDIT",9,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"""
"RTN","XHDPEDIT",10,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="xsi:noNamespaceSchemaLocation=""C:\reeng\main\modules\config\src\gov\va\med\hds\cd\config\xml\configTree.xsd"">"
"RTN","XHDPEDIT",11,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<configTree>"
"RTN","XHDPEDIT",12,0)
 D GETCAT(XHDCY,XHDCDA,.XHDCI)
"RTN","XHDPEDIT",13,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</configTree>"
"RTN","XHDPEDIT",14,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</getConfigurationCallResult>"
"RTN","XHDPEDIT",15,0)
 S XHDCY=$NA(^TMP("XHDPTREE",$J,"XMLDOC"))
"RTN","XHDPEDIT",16,0)
 Q
"RTN","XHDPEDIT",17,0)
FLDS() ; Get field string
"RTN","XHDPEDIT",18,0)
 Q ".01:1"
"RTN","XHDPEDIT",19,0)
GETCAT(XHDCY,XHDCDA,XHDCI)       ; Loads Top-level Fields
"RTN","XHDPEDIT",20,0)
 N XHDCF,XHDKI,PCATAG S XHDCF=0
"RTN","XHDPEDIT",21,0)
 S PCATAG=$S($$ISROOT(XHDCDA):"pluginParameterCategory",1:"parameterCategory")
"RTN","XHDPEDIT",22,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<"_PCATAG_">"
"RTN","XHDPEDIT",23,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<id>"_XHDCDA_"</id>"
"RTN","XHDPEDIT",24,0)
 D GETS^DIQ(8935.91,XHDCDA_",",$$FLDS,"IE",XHDCY)
"RTN","XHDPEDIT",25,0)
 F  S XHDCF=$O(@XHDCY@(8935.91,XHDCDA_",",XHDCF)) Q:XHDCF'>0  D
"RTN","XHDPEDIT",26,0)
 . N TAG,VAL
"RTN","XHDPEDIT",27,0)
 . S TAG=$TR($$FLDNAME(XHDCF,8935.91)," /","")
"RTN","XHDPEDIT",28,0)
 . S VAL=$G(@XHDCY@(8935.91,XHDCDA_",",XHDCF,$S(XHDCF=.04:"I",1:"E")))
"RTN","XHDPEDIT",29,0)
 . I XHDCF=.04 S VAL=+VAL
"RTN","XHDPEDIT",30,0)
 . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<"_TAG_">"_VAL_"</"_TAG_">"
"RTN","XHDPEDIT",31,0)
 K @XHDCY@(8935.91)
"RTN","XHDPEDIT",32,0)
 ;** get parameters **
"RTN","XHDPEDIT",33,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<parameters>"
"RTN","XHDPEDIT",34,0)
 D GETPARAM(XHDCY,XHDCDA,.XHDCI)
"RTN","XHDPEDIT",35,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</parameters>"
"RTN","XHDPEDIT",36,0)
 S XHDKI=0
"RTN","XHDPEDIT",37,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<children>"
"RTN","XHDPEDIT",38,0)
 F  S XHDKI=$O(^XHD(8935.91,XHDCDA,3,XHDKI)) Q:+XHDKI'>0  D
"RTN","XHDPEDIT",39,0)
 . N XHDKID S XHDKID=$P($G(^XHD(8935.91,XHDCDA,3,XHDKI,0)),U,2)
"RTN","XHDPEDIT",40,0)
 . D GETCAT(XHDCY,XHDKID,.XHDCI)
"RTN","XHDPEDIT",41,0)
 ;S XHDKI=0
"RTN","XHDPEDIT",42,0)
 ;F  S XHDKI=$O(^XHD(8935.91,XHDCDA,2,XHDKI)) Q:+XHDKI'>0  D
"RTN","XHDPEDIT",43,0)
 ;. N XHDPARAM S XHDPARAM=$P($G(^XHD(8935.91,XHDCDA,2,XHDKI,0)),U,2)
"RTN","XHDPEDIT",44,0)
 ;. D GETLEAF(XHDCY,XHDPARAM,XHDCDA,.XHDCI)
"RTN","XHDPEDIT",45,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</children>"
"RTN","XHDPEDIT",46,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</"_PCATAG_">"
"RTN","XHDPEDIT",47,0)
 Q
"RTN","XHDPEDIT",48,0)
GETLEAF(XHDCY,PAR,PID,XHDCI)    ; Build Leafnode categories
"RTN","XHDPEDIT",49,0)
 N FULLNAME,PLUGINID,NAME,PARAM0,PCAT0
"RTN","XHDPEDIT",50,0)
 S PARAM0=$G(^XTV(8989.51,PAR,0)),PCAT0=$G(^XHD(8935.91,PID,0))
"RTN","XHDPEDIT",51,0)
 S FULLNAME=$$ESCAPE^XHDLXM($P(PARAM0,U)),NAME=$$ESCAPE^XHDLXM($P(PARAM0,U,2))
"RTN","XHDPEDIT",52,0)
 S PLUGINID=$P(PCAT0,U,2)
"RTN","XHDPEDIT",53,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<parameterCategory>"
"RTN","XHDPEDIT",54,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<id/>"
"RTN","XHDPEDIT",55,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<fullName>"_FULLNAME_"</fullName>"
"RTN","XHDPEDIT",56,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<pluginId>"_PLUGINID_"</pluginId>"
"RTN","XHDPEDIT",57,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<name/>"_NAME_"</name>"
"RTN","XHDPEDIT",58,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<parentId/>"_PID_"</parentId>"
"RTN","XHDPEDIT",59,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<packageRoot/>false</packageRoot>"
"RTN","XHDPEDIT",60,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<preferencePage/>"
"RTN","XHDPEDIT",61,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<leaf>true</leaf>"
"RTN","XHDPEDIT",62,0)
 ;** get parameters **
"RTN","XHDPEDIT",63,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<parameters>"
"RTN","XHDPEDIT",64,0)
 D GETPARAM(XHDCY,XHDCDA,.XHDCI)
"RTN","XHDPEDIT",65,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</parameters>"
"RTN","XHDPEDIT",66,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</parameterCategory>"
"RTN","XHDPEDIT",67,0)
 Q
"RTN","XHDPEDIT",68,0)
ISROOT(XHDCDA)  ; Boolean - is record plugin root?
"RTN","XHDPEDIT",69,0)
 Q +$P($G(^XHD(8935.91,XHDCDA,0)),U,5)
"RTN","XHDPEDIT",70,0)
FLDNAME(XHDCFN,FILENUM)  ; Resolve field names
"RTN","XHDPEDIT",71,0)
 Q $$MIXED($P($G(^DD(FILENUM,XHDCFN,0)),U))
"RTN","XHDPEDIT",72,0)
MIXED(X) ; Return Mixed Case X
"RTN","XHDPEDIT",73,0)
 N ORI,WORD,TMP
"RTN","XHDPEDIT",74,0)
 S TMP="" F ORI=1:1:$L(X," ") S WORD=$$LOW^XLFSTR($P(X," ",ORI)),$E(WORD)=$S(ORI=1:$E(WORD),1:$$UP^XLFSTR($E(WORD))),TMP=$S(TMP="":WORD,1:TMP_WORD)
"RTN","XHDPEDIT",75,0)
 Q TMP
"RTN","XHDPEDIT",76,0)
GETPARAM(XHDCY,XHDCDA,XHDCI)    ; Loads Parameters
"RTN","XHDPEDIT",77,0)
 N ORI S ORI=0
"RTN","XHDPEDIT",78,0)
 F  S ORI=$O(^XHD(8935.91,XHDCDA,2,ORI)) Q:+ORI'>0  D
"RTN","XHDPEDIT",79,0)
 . N PNODE,FULLNAME,MULTIVAL,WORDPROC,PAR,PARDEF0,PARDEF1,DNAME,VDTYPE,READONLY
"RTN","XHDPEDIT",80,0)
 . S PNODE=$G(^XHD(8935.91,XHDCDA,2,ORI,0))
"RTN","XHDPEDIT",81,0)
 . Q:PNODE']""
"RTN","XHDPEDIT",82,0)
 . S PAR=$P(PNODE,U,2),PARDEF0=$G(^XTV(8989.51,PAR,0)),PARDEF1=$G(^(1))
"RTN","XHDPEDIT",83,0)
 . S FULLNAME=$P(PARDEF0,U),DNAME=$P(PARDEF0,U,2),VDTYPE=$P(PARDEF1,U)
"RTN","XHDPEDIT",84,0)
 . S READONLY=$S(+$P(PARDEF0,U,6):"true",1:"false")
"RTN","XHDPEDIT",85,0)
 . S MULTIVAL=$S(+$P(PARDEF0,U,3):"true",1:"false")
"RTN","XHDPEDIT",86,0)
 . S WORDPROC=$S(VDTYPE="W":"true",1:"false")
"RTN","XHDPEDIT",87,0)
 . N PLIST,ERR
"RTN","XHDPEDIT",88,0)
 . D GETLST^XHDPAR(.PLIST,PAR,.ERR)
"RTN","XHDPEDIT",89,0)
 . I 'ERR D
"RTN","XHDPEDIT",90,0)
 . . N ORJ S ORJ=0
"RTN","XHDPEDIT",91,0)
 . . F  S ORJ=$O(PLIST(ORJ)) Q:+ORJ'>0  D
"RTN","XHDPEDIT",92,0)
 . . . N KEY,ENT,INST,VAL,NAME,EXTENT
"RTN","XHDPEDIT",93,0)
 . . . S NAME=$$ESCAPE^XHDLXM(DNAME)
"RTN","XHDPEDIT",94,0)
 . . . S ENT=$P(PLIST(ORJ),U),EXTENT=$P(PLIST(ORJ),U,2)
"RTN","XHDPEDIT",95,0)
 . . . S INST=$P(PLIST(ORJ),U,3),VAL=$P(PLIST(ORJ),U,4)
"RTN","XHDPEDIT",96,0)
 . . . S:(MULTIVAL="true") NAME=NAME_" "_INST
"RTN","XHDPEDIT",97,0)
 . . . S KEY=NAME_U_ENT_U_PAR_U_INST
"RTN","XHDPEDIT",98,0)
 . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<parameter>"
"RTN","XHDPEDIT",99,0)
 . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<id>"_PAR_"</id>"
"RTN","XHDPEDIT",100,0)
 . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<name>"_NAME_"</name>"
"RTN","XHDPEDIT",101,0)
 . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<fullName>"_$$ESCAPE^XHDLXM(FULLNAME)_"</fullName>"
"RTN","XHDPEDIT",102,0)
 . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<key>"_KEY_"</key>"
"RTN","XHDPEDIT",103,0)
 . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<readOnly>"_READONLY_"</readOnly>"
"RTN","XHDPEDIT",104,0)
 . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<extEntity>"_EXTENT_"</extEntity>"
"RTN","XHDPEDIT",105,0)
 . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<multiValued>"_MULTIVAL_"</multiValued>"
"RTN","XHDPEDIT",106,0)
 . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<wordProcessing>"_WORDPROC_"</wordProcessing>"
"RTN","XHDPEDIT",107,0)
 . . . ; If wp, call for wp result
"RTN","XHDPEDIT",108,0)
 . . . I (WORDPROC="true") D
"RTN","XHDPEDIT",109,0)
 . . . . N VALIST,ERR
"RTN","XHDPEDIT",110,0)
 . . . . D GETWP^XPAR(.VALIST,"ALL^"_$P(KEY,U,2),PAR,INST,.ERR)
"RTN","XHDPEDIT",111,0)
 . . . . I 'ERR D
"RTN","XHDPEDIT",112,0)
 . . . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<value>"
"RTN","XHDPEDIT",113,0)
 . . . . . N ORK S ORK=0
"RTN","XHDPEDIT",114,0)
 . . . . . F  S ORK=$O(VALIST(ORK)) Q:+ORK'>0  D
"RTN","XHDPEDIT",115,0)
 . . . . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)=$$ESCAPE^XHDLXM($G(VALIST(ORK,0)))
"RTN","XHDPEDIT",116,0)
 . . . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</value>"
"RTN","XHDPEDIT",117,0)
 . . . . N DFLIST,ERR
"RTN","XHDPEDIT",118,0)
 . . . . D GETWP^XPAR(.DFLIST,"PKG",PAR,INST,.ERR)
"RTN","XHDPEDIT",119,0)
 . . . . I 'ERR D
"RTN","XHDPEDIT",120,0)
 . . . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<defaultValue>"
"RTN","XHDPEDIT",121,0)
 . . . . . N ORK S ORK=0
"RTN","XHDPEDIT",122,0)
 . . . . . F  S ORK=$O(VALIST(ORK)) Q:+ORK'>0  D
"RTN","XHDPEDIT",123,0)
 . . . . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)=$$ESCAPE^XHDLXM($G(VALIST(ORK,0)))
"RTN","XHDPEDIT",124,0)
 . . . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</defaultValue>"
"RTN","XHDPEDIT",125,0)
 . . . E  D
"RTN","XHDPEDIT",126,0)
 . . . . N DVAL S DVAL=$$GET^XPAR("PKG",PAR,INST,$S(VDTYPE="D":"Q",1:"E"))
"RTN","XHDPEDIT",127,0)
 . . . . S VAL=$$XFORM^XHDPTREE(VAL,VDTYPE)
"RTN","XHDPEDIT",128,0)
 . . . . S DVAL=$$XFORM^XHDPTREE(DVAL,VDTYPE)
"RTN","XHDPEDIT",129,0)
 . . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<value>"_$$ESCAPE^XHDLXM(VAL)_"</value>"
"RTN","XHDPEDIT",130,0)
 . . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<defaultValue>"_$$ESCAPE^XHDLXM(DVAL)_"</defaultValue>"
"RTN","XHDPEDIT",131,0)
 . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</parameter>"
"RTN","XHDPEDIT",132,0)
 Q
"RTN","XHDPMUT")
0^7^B46856254
"RTN","XHDPMUT",1,0)
XHDPMUT        ; SLC/JER - Get Mutable Configuration ; 25 Jul 2003  9:42 AM
"RTN","XHDPMUT",2,0)
 ;;1.0;HEALTHEVET DESKTOP;;Jul 15, 2003
"RTN","XHDPMUT",3,0)
GETTREE(XHDCY,XHDMOD)        ; Control Branching
"RTN","XHDPMUT",4,0)
 N XHDCI,XHDCDA
"RTN","XHDPMUT",5,0)
 S XHDCI=0,XHDCDA=+$O(^XHD(8935.91,"AMROOT",XHDMOD,0))
"RTN","XHDPMUT",6,0)
 S XHDCY=$NA(^TMP("XHDPTREE",$J)) K @XHDCY
"RTN","XHDPMUT",7,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<?xml version=""1.0"" encoding=""UTF-8""?>"
"RTN","XHDPMUT",8,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<getConfigurationCallResult"
"RTN","XHDPMUT",9,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"""
"RTN","XHDPMUT",10,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="xsi:noNamespaceSchemaLocation=""C:\reeng\main\modules\config\src\gov\va\med\hds\cd\config\xml\getConfigurationCallResult.xsd"">"
"RTN","XHDPMUT",11,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<configTree>"
"RTN","XHDPMUT",12,0)
 D GETCAT(XHDCY,XHDCDA,.XHDCI)
"RTN","XHDPMUT",13,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</configTree>"
"RTN","XHDPMUT",14,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</getConfigurationCallResult>"
"RTN","XHDPMUT",15,0)
 S XHDCY=$NA(^TMP("XHDPTREE",$J,"XMLDOC"))
"RTN","XHDPMUT",16,0)
 Q
"RTN","XHDPMUT",17,0)
FLDS() ; Get field string
"RTN","XHDPMUT",18,0)
 Q ".01:1"
"RTN","XHDPMUT",19,0)
GETCAT(XHDCY,XHDCDA,XHDCI)       ; Loads Top-level Fields
"RTN","XHDPMUT",20,0)
 N XHDCF,XHDKI,PCATAG S XHDCF=0
"RTN","XHDPMUT",21,0)
 S PCATAG=$S($$ISROOT(XHDCDA):"pluginParameterCategory",1:"parameterCategory")
"RTN","XHDPMUT",22,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<"_PCATAG_">"
"RTN","XHDPMUT",23,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<id>"_XHDCDA_"</id>"
"RTN","XHDPMUT",24,0)
 D GETS^DIQ(8935.91,XHDCDA_",",$$FLDS,"IE",XHDCY)
"RTN","XHDPMUT",25,0)
 F  S XHDCF=$O(@XHDCY@(8935.91,XHDCDA_",",XHDCF)) Q:XHDCF'>0  D
"RTN","XHDPMUT",26,0)
 . N TAG,VAL
"RTN","XHDPMUT",27,0)
 . S TAG=$TR($$FLDNAME(XHDCF,8935.91)," /","")
"RTN","XHDPMUT",28,0)
 . S VAL=$G(@XHDCY@(8935.91,XHDCDA_",",XHDCF,$S(XHDCF=.04:"I",1:"E")))
"RTN","XHDPMUT",29,0)
 . I XHDCF=.04 S VAL=+VAL
"RTN","XHDPMUT",30,0)
 . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<"_TAG_">"_VAL_"</"_TAG_">"
"RTN","XHDPMUT",31,0)
 K @XHDCY@(8935.91)
"RTN","XHDPMUT",32,0)
 ;** get parameters **
"RTN","XHDPMUT",33,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<parameters>"
"RTN","XHDPMUT",34,0)
 ;D GETPARAM(XHDCY,XHDCDA,.XHDCI)
"RTN","XHDPMUT",35,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</parameters>"
"RTN","XHDPMUT",36,0)
 S XHDKI=0
"RTN","XHDPMUT",37,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<children>"
"RTN","XHDPMUT",38,0)
 F  S XHDKI=$O(^XHD(8935.91,XHDCDA,3,XHDKI)) Q:+XHDKI'>0  D
"RTN","XHDPMUT",39,0)
 . N XHDKID S XHDKID=$P($G(^XHD(8935.91,XHDCDA,3,XHDKI,0)),U,2)
"RTN","XHDPMUT",40,0)
 . D GETCAT(XHDCY,XHDKID,.XHDCI)
"RTN","XHDPMUT",41,0)
 S XHDKI=0
"RTN","XHDPMUT",42,0)
 F  S XHDKI=$O(^XHD(8935.91,XHDCDA,2,XHDKI)) Q:+XHDKI'>0  D
"RTN","XHDPMUT",43,0)
 . N XHDPARAM S XHDPARAM=$P($G(^XHD(8935.91,XHDCDA,2,XHDKI,0)),U,2)
"RTN","XHDPMUT",44,0)
 . D GETLEAF(XHDCY,XHDPARAM,XHDCDA,.XHDCI)
"RTN","XHDPMUT",45,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</children>"
"RTN","XHDPMUT",46,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</"_PCATAG_">"
"RTN","XHDPMUT",47,0)
 Q
"RTN","XHDPMUT",48,0)
GETLEAF(XHDCY,PAR,PID,XHDCI)    ; Build Leafnode categories
"RTN","XHDPMUT",49,0)
 N FULLNAME,PLUGINID,NAME,PARAM0,PCAT0
"RTN","XHDPMUT",50,0)
 S PARAM0=$G(^XTV(8989.51,PAR,0)),PCAT0=$G(^XHD(8935.91,PID,0))
"RTN","XHDPMUT",51,0)
 S FULLNAME=$$ESCAPE^XHDLXM($P(PARAM0,U)),NAME=$$ESCAPE^XHDLXM($P(PARAM0,U,2))
"RTN","XHDPMUT",52,0)
 S PLUGINID=$P(PCAT0,U,2)
"RTN","XHDPMUT",53,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<parameterCategory>"
"RTN","XHDPMUT",54,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<id>0</id>"
"RTN","XHDPMUT",55,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<fullName>"_FULLNAME_"</fullName>"
"RTN","XHDPMUT",56,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<pluginId>"_PLUGINID_"</pluginId>"
"RTN","XHDPMUT",57,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<name>"_NAME_"</name>"
"RTN","XHDPMUT",58,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<parentId>"_PID_"</parentId>"
"RTN","XHDPMUT",59,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<packageRoot>false</packageRoot>"
"RTN","XHDPMUT",60,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<preferencePageId/>"
"RTN","XHDPMUT",61,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<leaf>true</leaf>"
"RTN","XHDPMUT",62,0)
 ;** get parameters **
"RTN","XHDPMUT",63,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<parameters>"
"RTN","XHDPMUT",64,0)
 D GETINSTS(XHDCY,PAR,.XHDCI)
"RTN","XHDPMUT",65,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</parameters>"
"RTN","XHDPMUT",66,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<children/>"
"RTN","XHDPMUT",67,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</parameterCategory>"
"RTN","XHDPMUT",68,0)
 Q
"RTN","XHDPMUT",69,0)
ISROOT(XHDCDA)  ; Boolean - is record plugin root?
"RTN","XHDPMUT",70,0)
 Q +$P($G(^XHD(8935.91,XHDCDA,0)),U,5)
"RTN","XHDPMUT",71,0)
FLDNAME(XHDCFN,FILENUM)  ; Resolve field names
"RTN","XHDPMUT",72,0)
 Q $$MIXED($P($G(^DD(FILENUM,XHDCFN,0)),U))
"RTN","XHDPMUT",73,0)
MIXED(X) ; Return Mixed Case X
"RTN","XHDPMUT",74,0)
 N XHDI,WORD,TMP
"RTN","XHDPMUT",75,0)
 S TMP="" F XHDI=1:1:$L(X," ") S WORD=$$LOW^XLFSTR($P(X," ",XHDI)),$E(WORD)=$S(XHDI=1:$E(WORD),1:$$UP^XLFSTR($E(WORD))),TMP=$S(TMP="":WORD,1:TMP_WORD)
"RTN","XHDPMUT",76,0)
 Q TMP
"RTN","XHDPMUT",77,0)
GETPARAM(XHDCY,XHDCDA,XHDCI)    ; Loads Parameters
"RTN","XHDPMUT",78,0)
 N XHDI S XHDI=0
"RTN","XHDPMUT",79,0)
 F  S XHDI=$O(^XHD(8935.91,XHDCDA,2,XHDI)) Q:+XHDI'>0  D
"RTN","XHDPMUT",80,0)
 . N PNODE,FULLNAME,MULTIVAL,WORDPROC,PAR,PARDEF0,PARDEF1,DNAME,VDTYPE,READONLY
"RTN","XHDPMUT",81,0)
 . S PNODE=$G(^XHD(8935.91,XHDCDA,2,XHDI,0))
"RTN","XHDPMUT",82,0)
 . Q:PNODE']""
"RTN","XHDPMUT",83,0)
 . S PAR=$P(PNODE,U,2) D GETINSTS(XHDCY,PAR,.XHDCI)
"RTN","XHDPMUT",84,0)
 Q
"RTN","XHDPMUT",85,0)
GETINSTS(XHDCY,PAR,XHDCI)       ; get all instances of parameter PAR
"RTN","XHDPMUT",86,0)
 N FULLNAME,MULTIVAL,WORDPROC,PARDEF0,PARDEF1,DNAME,VDTYPE,READONLY
"RTN","XHDPMUT",87,0)
 S PARDEF0=$G(^XTV(8989.51,PAR,0)),PARDEF1=$G(^(1))
"RTN","XHDPMUT",88,0)
 S FULLNAME=$P(PARDEF0,U),DNAME=$P(PARDEF0,U,2),VDTYPE=$P(PARDEF1,U)
"RTN","XHDPMUT",89,0)
 S READONLY=$S(+$P(PARDEF0,U,6):"true",1:"false")
"RTN","XHDPMUT",90,0)
 S MULTIVAL=$S(+$P(PARDEF0,U,3):"true",1:"false")
"RTN","XHDPMUT",91,0)
 S WORDPROC=$S(VDTYPE="W":"true",1:"false")
"RTN","XHDPMUT",92,0)
 N PLIST,ERR
"RTN","XHDPMUT",93,0)
 D GETLST^XHDPAR(.PLIST,PAR,.ERR)
"RTN","XHDPMUT",94,0)
 I 'ERR D
"RTN","XHDPMUT",95,0)
 . N XHDJ S XHDJ=0
"RTN","XHDPMUT",96,0)
 . F  S XHDJ=$O(PLIST(XHDJ)) Q:+XHDJ'>0  D
"RTN","XHDPMUT",97,0)
 . . N KEY,ENT,INST,VAL,NAME,EXTENT
"RTN","XHDPMUT",98,0)
 . . S NAME=$$ESCAPE^XHDLXM(DNAME)
"RTN","XHDPMUT",99,0)
 . . S ENT=$P(PLIST(XHDJ),U),EXTENT=$P(PLIST(XHDJ),U,2)
"RTN","XHDPMUT",100,0)
 . . S INST=$P(PLIST(XHDJ),U,3),VAL=$P(PLIST(XHDJ),U,4)
"RTN","XHDPMUT",101,0)
 . . S:(MULTIVAL="true") NAME=NAME_" "_INST
"RTN","XHDPMUT",102,0)
 . . S KEY=NAME_U_ENT_U_PAR_U_INST
"RTN","XHDPMUT",103,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<parameter>"
"RTN","XHDPMUT",104,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<id>"_PAR_"</id>"
"RTN","XHDPMUT",105,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<name>"_NAME_"</name>"
"RTN","XHDPMUT",106,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<fullName>"_$$ESCAPE^XHDLXM(FULLNAME)_"</fullName>"
"RTN","XHDPMUT",107,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<key>"_KEY_"</key>"
"RTN","XHDPMUT",108,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<readOnly>"_READONLY_"</readOnly>"
"RTN","XHDPMUT",109,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<extEntity>"_EXTENT_"</extEntity>"
"RTN","XHDPMUT",110,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<multiValued>"_MULTIVAL_"</multiValued>"
"RTN","XHDPMUT",111,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<wordProcessing>"_WORDPROC_"</wordProcessing>"
"RTN","XHDPMUT",112,0)
 . . ; If wp, call for wp result
"RTN","XHDPMUT",113,0)
 . . I (WORDPROC="true") D
"RTN","XHDPMUT",114,0)
 . . . N VALIST,ERR
"RTN","XHDPMUT",115,0)
 . . . D GETWP^XPAR(.VALIST,"ALL^"_$P(KEY,U,2),PAR,INST,.ERR)
"RTN","XHDPMUT",116,0)
 . . . I 'ERR D
"RTN","XHDPMUT",117,0)
 . . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<value>"
"RTN","XHDPMUT",118,0)
 . . . . N XHDK S XHDK=0
"RTN","XHDPMUT",119,0)
 . . . . F  S XHDK=$O(VALIST(XHDK)) Q:+XHDK'>0  D
"RTN","XHDPMUT",120,0)
 . . . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)=$$ESCAPE^XHDLXM($G(VALIST(XHDK,0)))
"RTN","XHDPMUT",121,0)
 . . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</value>"
"RTN","XHDPMUT",122,0)
 . . . N DFLIST,ERR
"RTN","XHDPMUT",123,0)
 . . . D GETWP^XPAR(.DFLIST,"PKG",PAR,INST,.ERR)
"RTN","XHDPMUT",124,0)
 . . . I 'ERR D
"RTN","XHDPMUT",125,0)
 . . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<defaultValue>"
"RTN","XHDPMUT",126,0)
 . . . . N XHDK S XHDK=0
"RTN","XHDPMUT",127,0)
 . . . . F  S XHDK=$O(VALIST(XHDK)) Q:+XHDK'>0  D
"RTN","XHDPMUT",128,0)
 . . . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)=$$ESCAPE^XHDLXM($G(VALIST(XHDK,0)))
"RTN","XHDPMUT",129,0)
 . . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</defaultValue>"
"RTN","XHDPMUT",130,0)
 . . E  D
"RTN","XHDPMUT",131,0)
 . . . N DVAL S DVAL=$$GET^XPAR("PKG",PAR,INST,$S(VDTYPE="D":"Q",1:"E"))
"RTN","XHDPMUT",132,0)
 . . . S VAL=$$XFORM^XHDPTREE(VAL,VDTYPE)
"RTN","XHDPMUT",133,0)
 . . . S DVAL=$$XFORM^XHDPTREE(DVAL,VDTYPE)
"RTN","XHDPMUT",134,0)
 . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<value>"_$$ESCAPE^XHDLXM(VAL)_"</value>"
"RTN","XHDPMUT",135,0)
 . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<defaultValue>"_$$ESCAPE^XHDLXM(DVAL)_"</defaultValue>"
"RTN","XHDPMUT",136,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</parameter>"
"RTN","XHDPMUT",137,0)
 Q
"RTN","XHDPTREE")
0^8^B57481232
"RTN","XHDPTREE",1,0)
XHDPTREE        ; SLC/JER - Configurator Server Calls ; 08 Oct 2003 11:00
"RTN","XHDPTREE",2,0)
 ;;1.0;HEALTHEVET DESKTOP;;Jul 15, 2003
"RTN","XHDPTREE",3,0)
GETTREE(XHDCY,XHDMOD)        ; Control Branching
"RTN","XHDPTREE",4,0)
 N XHDCI,XHDCDA,X S X="ONERROR^XHDPTREE",@^%ZOSF("TRAP")
"RTN","XHDPTREE",5,0)
 S XHDCI=0,XHDCDA=+$O(^XHD(8935.91,"AMROOT",XHDMOD,0))
"RTN","XHDPTREE",6,0)
 S XHDCY=$NA(^TMP("XHDPTREE",$J)) K @XHDCY
"RTN","XHDPTREE",7,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<?xml version=""1.0"" encoding=""UTF-8""?>"
"RTN","XHDPTREE",8,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<getConfigurationCallResult"
"RTN","XHDPTREE",9,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"""
"RTN","XHDPTREE",10,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="xsi:noNamespaceSchemaLocation=""C:\reeng\main\modules\config\src\gov\va\med\hds\cd\config\xml\getConfigurationCallResult.xsd"">"
"RTN","XHDPTREE",11,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<configTree>"
"RTN","XHDPTREE",12,0)
 D GETCAT(XHDCY,XHDCDA,.XHDCI)
"RTN","XHDPTREE",13,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</configTree>"
"RTN","XHDPTREE",14,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</getConfigurationCallResult>"
"RTN","XHDPTREE",15,0)
 S XHDCY=$NA(^TMP("XHDPTREE",$J,"XMLDOC"))
"RTN","XHDPTREE",16,0)
 Q
"RTN","XHDPTREE",17,0)
FLDS() ; Get field string
"RTN","XHDPTREE",18,0)
 Q ".01:1"
"RTN","XHDPTREE",19,0)
GETCAT(XHDCY,XHDCDA,XHDCI)       ; Loads Top-level Fields
"RTN","XHDPTREE",20,0)
 N XHDCF,XHDKI,PCATAG S XHDCF=0
"RTN","XHDPTREE",21,0)
 S PCATAG=$S($$ISROOT(XHDCDA):"pluginParameterCategory",1:"parameterCategory")
"RTN","XHDPTREE",22,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<"_PCATAG_">"
"RTN","XHDPTREE",23,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<id>"_XHDCDA_"</id>"
"RTN","XHDPTREE",24,0)
 D GETS^DIQ(8935.91,XHDCDA_",",$$FLDS,"IE",XHDCY)
"RTN","XHDPTREE",25,0)
 F  S XHDCF=$O(@XHDCY@(8935.91,XHDCDA_",",XHDCF)) Q:XHDCF'>0  D
"RTN","XHDPTREE",26,0)
 . N TAG,VAL
"RTN","XHDPTREE",27,0)
 . S TAG=$TR($$FLDNAME(XHDCF,8935.91)," /","")
"RTN","XHDPTREE",28,0)
 . S VAL=$G(@XHDCY@(8935.91,XHDCDA_",",XHDCF,$S(XHDCF=.04:"I",1:"E")))
"RTN","XHDPTREE",29,0)
 . I XHDCF=.04 S VAL=+VAL
"RTN","XHDPTREE",30,0)
 . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<"_TAG_">"_VAL_"</"_TAG_">"
"RTN","XHDPTREE",31,0)
 K @XHDCY@(8935.91)
"RTN","XHDPTREE",32,0)
 ;** get parameters **
"RTN","XHDPTREE",33,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<parameters>"
"RTN","XHDPTREE",34,0)
 D GETPARAM(XHDCY,XHDCDA,.XHDCI)
"RTN","XHDPTREE",35,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</parameters>"
"RTN","XHDPTREE",36,0)
 S XHDKI=0
"RTN","XHDPTREE",37,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<children>"
"RTN","XHDPTREE",38,0)
 F  S XHDKI=$O(^XHD(8935.91,XHDCDA,3,XHDKI)) Q:+XHDKI'>0  D
"RTN","XHDPTREE",39,0)
 . N XHDKID S XHDKID=$P($G(^XHD(8935.91,XHDCDA,3,XHDKI,0)),U,2)
"RTN","XHDPTREE",40,0)
 . D GETCAT(XHDCY,XHDKID,.XHDCI)
"RTN","XHDPTREE",41,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</children>"
"RTN","XHDPTREE",42,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</"_PCATAG_">"
"RTN","XHDPTREE",43,0)
 Q
"RTN","XHDPTREE",44,0)
ISROOT(XHDCDA)  ; Boolean - is record plugin root?
"RTN","XHDPTREE",45,0)
 Q +$P($G(^XHD(8935.91,XHDCDA,0)),U,5)
"RTN","XHDPTREE",46,0)
FLDNAME(XHDCFN,FILENUM)  ; Resolve field names
"RTN","XHDPTREE",47,0)
 Q $$MIXED($P($G(^DD(FILENUM,XHDCFN,0)),U))
"RTN","XHDPTREE",48,0)
MIXED(X) ; Return Mixed Case X
"RTN","XHDPTREE",49,0)
 N XHDI,WORD,TMP
"RTN","XHDPTREE",50,0)
 S TMP="" F XHDI=1:1:$L(X," ") S WORD=$$LOW^XLFSTR($P(X," ",XHDI)),$E(WORD)=$S(XHDI=1:$E(WORD),1:$$UP^XLFSTR($E(WORD))),TMP=$S(TMP="":WORD,1:TMP_WORD)
"RTN","XHDPTREE",51,0)
 Q TMP
"RTN","XHDPTREE",52,0)
GETPARAM(XHDCY,XHDCDA,XHDCI)    ; Loads Parameters
"RTN","XHDPTREE",53,0)
 N XHDI S XHDI=0
"RTN","XHDPTREE",54,0)
 F  S XHDI=$O(^XHD(8935.91,XHDCDA,2,XHDI)) Q:+XHDI'>0  D
"RTN","XHDPTREE",55,0)
 . N PNODE,FULLNAME,MULTIVAL,WORDPROC,PAR,PARDEF0,PARDEF1,DNAME,VDTYPE,READONLY
"RTN","XHDPTREE",56,0)
 . S PNODE=$G(^XHD(8935.91,XHDCDA,2,XHDI,0))
"RTN","XHDPTREE",57,0)
 . Q:PNODE']""
"RTN","XHDPTREE",58,0)
 . S PAR=$P(PNODE,U,2),PARDEF0=$G(^XTV(8989.51,PAR,0)),PARDEF1=$G(^(1))
"RTN","XHDPTREE",59,0)
 . S FULLNAME=$P(PARDEF0,U),DNAME=$P(PARDEF0,U,2),VDTYPE=$P(PARDEF1,U)
"RTN","XHDPTREE",60,0)
 . S READONLY=$S(+$P(PARDEF0,U,6):"true",1:"false")
"RTN","XHDPTREE",61,0)
 . S MULTIVAL=$S(+$P(PARDEF0,U,3):"true",1:"false")
"RTN","XHDPTREE",62,0)
 . S WORDPROC=$S(VDTYPE="W":"true",1:"false")
"RTN","XHDPTREE",63,0)
 . N PLIST,ERR
"RTN","XHDPTREE",64,0)
 . D GETLST^XPAR(.PLIST,"ALL^"_DUZ_";VA(200,^"_$$GETSRV_";DIC(49,",PAR,$S(VDTYPE="D":"Q",1:"E"),.ERR)
"RTN","XHDPTREE",65,0)
 . I ERR Q
"RTN","XHDPTREE",66,0)
 . I PLIST=0 D  Q
"RTN","XHDPTREE",67,0)
 . . N KEY,ENT,INST,NAME,VAL,EXTENT
"RTN","XHDPTREE",68,0)
 . . S NAME=$$ESCAPE^XHDLXM(DNAME)
"RTN","XHDPTREE",69,0)
 . . S INST=$S(FULLNAME="ORWOR TIMEOUT CHART":1,1:"")
"RTN","XHDPTREE",70,0)
 . . S VAL=$S(FULLNAME="ORWOR TIMEOUT CHART":DTIME,1:"")
"RTN","XHDPTREE",71,0)
 . . S:(MULTIVAL="true") NAME=NAME_" "_INST
"RTN","XHDPTREE",72,0)
 . . S ENT=DUZ_";VA(200,",EXTENT=$$ENTNAME^XPARLIST(ENT)
"RTN","XHDPTREE",73,0)
 . . S KEY=NAME_U_ENT_U_PAR_U_INST
"RTN","XHDPTREE",74,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<parameter>"
"RTN","XHDPTREE",75,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<id>"_PAR_"</id>"
"RTN","XHDPTREE",76,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<name>"_NAME_"</name>"
"RTN","XHDPTREE",77,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<fullName>"_$$ESCAPE^XHDLXM(FULLNAME)_"</fullName>"
"RTN","XHDPTREE",78,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<key>"_KEY_"</key>"
"RTN","XHDPTREE",79,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<readOnly>"_READONLY_"</readOnly>"
"RTN","XHDPTREE",80,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<extEntity>"_EXTENT_"</extEntity>"
"RTN","XHDPTREE",81,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<multiValued>"_MULTIVAL_"</multiValued>"
"RTN","XHDPTREE",82,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<wordProcessing>"_WORDPROC_"</wordProcessing>"
"RTN","XHDPTREE",83,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)=$S(VAL="":"<value/>",1:"<value>"_VAL_"</value>")
"RTN","XHDPTREE",84,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<defaultValue/>"
"RTN","XHDPTREE",85,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</parameter>"
"RTN","XHDPTREE",86,0)
 . N XHDJ S XHDJ=0
"RTN","XHDPTREE",87,0)
 . F  S XHDJ=$O(PLIST(XHDJ)) Q:+XHDJ'>0  D
"RTN","XHDPTREE",88,0)
 . . N KEY,ENT,INST,VAL,NAME,EXTENT
"RTN","XHDPTREE",89,0)
 . . S NAME=$$ESCAPE^XHDLXM(DNAME)
"RTN","XHDPTREE",90,0)
 . . S INST=$P(PLIST(XHDJ),U),VAL=$P(PLIST(XHDJ),U,2)
"RTN","XHDPTREE",91,0)
 . . S:(MULTIVAL="true") NAME=NAME_" "_INST
"RTN","XHDPTREE",92,0)
 . . S ENT=$$GETENT(PAR,INST,VAL),EXTENT=$$ENTNAME^XPARLIST(ENT)
"RTN","XHDPTREE",93,0)
 . . S KEY=NAME_U_ENT_U_PAR_U_INST
"RTN","XHDPTREE",94,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<parameter>"
"RTN","XHDPTREE",95,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<id>"_PAR_"</id>"
"RTN","XHDPTREE",96,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<name>"_NAME_"</name>"
"RTN","XHDPTREE",97,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<fullName>"_$$ESCAPE^XHDLXM(FULLNAME)_"</fullName>"
"RTN","XHDPTREE",98,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<key>"_KEY_"</key>"
"RTN","XHDPTREE",99,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<readOnly>"_READONLY_"</readOnly>"
"RTN","XHDPTREE",100,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<extEntity>"_EXTENT_"</extEntity>"
"RTN","XHDPTREE",101,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<multiValued>"_MULTIVAL_"</multiValued>"
"RTN","XHDPTREE",102,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<wordProcessing>"_WORDPROC_"</wordProcessing>"
"RTN","XHDPTREE",103,0)
 . . ; If wp, call for wp result
"RTN","XHDPTREE",104,0)
 . . I (WORDPROC="true") D
"RTN","XHDPTREE",105,0)
 . . . N VALIST,ERR
"RTN","XHDPTREE",106,0)
 . . . D GETWP^XPAR(.VALIST,"ALL^"_$P(KEY,U,2),PAR,INST,.ERR)
"RTN","XHDPTREE",107,0)
 . . . I 'ERR D
"RTN","XHDPTREE",108,0)
 . . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<value>"
"RTN","XHDPTREE",109,0)
 . . . . N XHDK S XHDK=0
"RTN","XHDPTREE",110,0)
 . . . . F  S XHDK=$O(VALIST(XHDK)) Q:+XHDK'>0  D
"RTN","XHDPTREE",111,0)
 . . . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)=$$ESCAPE^XHDLXM($G(VALIST(XHDK,0)))
"RTN","XHDPTREE",112,0)
 . . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</value>"
"RTN","XHDPTREE",113,0)
 . . . N DFLIST,ERR
"RTN","XHDPTREE",114,0)
 . . . D GETWP^XPAR(.DFLIST,"PKG",PAR,INST,.ERR)
"RTN","XHDPTREE",115,0)
 . . . I 'ERR D
"RTN","XHDPTREE",116,0)
 . . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<defaultValue>"
"RTN","XHDPTREE",117,0)
 . . . . N XHDK S XHDK=0
"RTN","XHDPTREE",118,0)
 . . . . F  S XHDK=$O(VALIST(XHDK)) Q:+XHDK'>0  D
"RTN","XHDPTREE",119,0)
 . . . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)=$$ESCAPE^XHDLXM($G(VALIST(XHDK,0)))
"RTN","XHDPTREE",120,0)
 . . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</defaultValue>"
"RTN","XHDPTREE",121,0)
 . . E  D
"RTN","XHDPTREE",122,0)
 . . . N DVAL S DVAL=$$GET^XPAR("PKG",PAR,INST,$S(VDTYPE="D":"Q",1:"E"))
"RTN","XHDPTREE",123,0)
 . . . S VAL=$$XFORM(VAL,VDTYPE)
"RTN","XHDPTREE",124,0)
 . . . S DVAL=$$XFORM(DVAL,VDTYPE)
"RTN","XHDPTREE",125,0)
 . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<value>"_$$ESCAPE^XHDLXM(VAL)_"</value>"
"RTN","XHDPTREE",126,0)
 . . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<defaultValue>"_$$ESCAPE^XHDLXM(DVAL)_"</defaultValue>"
"RTN","XHDPTREE",127,0)
 . . S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</parameter>"
"RTN","XHDPTREE",128,0)
 Q
"RTN","XHDPTREE",129,0)
GETSRV()        ; Get user's Service/Section
"RTN","XHDPTREE",130,0)
 Q $P($G(^VA(200,DUZ,5)),U)
"RTN","XHDPTREE",131,0)
XFORM(VAL,VDTYPE)       ; Transform values for select data types
"RTN","XHDPTREE",132,0)
 N XHDY S XHDY=VAL
"RTN","XHDPTREE",133,0)
 I VDTYPE="D" S XHDY=$$FMTHL7^XLFDT(VAL) G XFORMX
"RTN","XHDPTREE",134,0)
 I VDTYPE="Y" S XHDY=$S(VAL="YES":"true",VAL="NO":"false",1:VAL)
"RTN","XHDPTREE",135,0)
XFORMX Q XHDY
"RTN","XHDPTREE",136,0)
GETENT(PAR,INST,VAL)    ; Find entity, given parameter, instance, and value
"RTN","XHDPTREE",137,0)
 N VLIST,ERR,ENTITY S ENTITY=0
"RTN","XHDPTREE",138,0)
 D ENVAL^XPAR(.VLIST,PAR,INST,.ERR)
"RTN","XHDPTREE",139,0)
 I 'ERR D
"RTN","XHDPTREE",140,0)
 . N XHDENT S XHDENT=0
"RTN","XHDPTREE",141,0)
 . F  S XHDENT=$O(VLIST(XHDENT)) Q:+XHDENT'>0!+ENTITY  D
"RTN","XHDPTREE",142,0)
 . . I $P(XHDENT,";",2)="VA(200,",(+XHDENT'=DUZ) Q
"RTN","XHDPTREE",143,0)
 . . I ($G(VLIST(XHDENT,INST))=VAL) S ENTITY=XHDENT
"RTN","XHDPTREE",144,0)
 S:'+ENTITY ENTITY=DUZ_";VA(200,"
"RTN","XHDPTREE",145,0)
 Q ENTITY
"RTN","XHDPTREE",146,0)
ONERROR ; Trap errors
"RTN","XHDPTREE",147,0)
 N XHDCI S XHDCI=4
"RTN","XHDPTREE",148,0)
 ; remove remnant of DIQ1 call result
"RTN","XHDPTREE",149,0)
 K @XHDCY@(8935.91)
"RTN","XHDPTREE",150,0)
 ; remove partial configTree node
"RTN","XHDPTREE",151,0)
 F  S XHDCI=$O(@XHDCY@("XMLDOC",XHDCI)) Q:+XHDCI'>0  K @XHDCY@("XMLDOC",XHDCI)
"RTN","XHDPTREE",152,0)
 ; append error node to call result
"RTN","XHDPTREE",153,0)
 S XHDCI=4
"RTN","XHDPTREE",154,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<error>"
"RTN","XHDPTREE",155,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="<![CDATA["_$$EC^%ZOSV_"]]>"
"RTN","XHDPTREE",156,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</error>"
"RTN","XHDPTREE",157,0)
 S XHDCI=XHDCI+1,@XHDCY@("XMLDOC",XHDCI)="</getConfigurationCallResult>"
"RTN","XHDPTREE",158,0)
 S XHDCY=$NA(^TMP("XHDPTREE",$J,"XMLDOC"))
"RTN","XHDPTREE",159,0)
 D ^%ZTER
"RTN","XHDPTREE",160,0)
 Q
"RTN","XHDTST")
0^13^B2797378
"RTN","XHDTST",1,0)
XHDTST ; SLC/JER - Test calls ; 25 Jul 2003  9:42 AM
"RTN","XHDTST",2,0)
 ;;1.0;HEALTHEVET DESKTOP;;Jul 15, 2003
"RTN","XHDTST",3,0)
INLST(ORY,ORX) ; Test input list
"RTN","XHDTST",4,0)
 N I,J,RC S I="",(J,RC)=0,ORY=$NA(^TMP("XHDZTST",$J))
"RTN","XHDTST",5,0)
 D XMLHDR^XHDLXM(.ORY,"result",.J),RSLTBL(.ORY,.J)
"RTN","XHDTST",6,0)
 F  S I=$O(ORX(I)) Q:I']""  D
"RTN","XHDTST",7,0)
 . N COL
"RTN","XHDTST",8,0)
 . S RC=RC+1
"RTN","XHDTST",9,0)
 . D BUILDROW(.COL,.ORX,I),SETROW(.ORY,.COL,.J)
"RTN","XHDTST",10,0)
 S SPEC("##")=RC,@ORY@(3)=$$REPLACE^XLFSTR(@ORY@(3),.SPEC)
"RTN","XHDTST",11,0)
 S J=J+1,@ORY@(J)="</rows>"
"RTN","XHDTST",12,0)
 S J=J+1,@ORY@(J)="</resultTable>"
"RTN","XHDTST",13,0)
 D XMLFOOT^XHDLXM(.ORY,"result",.J)
"RTN","XHDTST",14,0)
 Q
"RTN","XHDTST",15,0)
RSLTBL(ORY,ORI) ; resultTable
"RTN","XHDTST",16,0)
 S ORI=ORI+1
"RTN","XHDTST",17,0)
 S @ORY@(ORI)="<resultTable name=""test_list"" rowCount=""##"" columnCount=""2"">"
"RTN","XHDTST",18,0)
 S ORI=ORI+1,@ORY@(ORI)="<columns>"
"RTN","XHDTST",19,0)
 S ORI=ORI+1
"RTN","XHDTST",20,0)
 S @ORY@(ORI)="<c name=""name"" type=""string""/>"
"RTN","XHDTST",21,0)
 S ORI=ORI+1
"RTN","XHDTST",22,0)
 S @ORY@(ORI)="<c name=""value"" type=""string""/>"
"RTN","XHDTST",23,0)
 S ORI=ORI+1,@ORY@(ORI)="</columns>"
"RTN","XHDTST",24,0)
 S ORI=ORI+1,@ORY@(ORI)="<rows>"
"RTN","XHDTST",25,0)
 Q
"RTN","XHDTST",26,0)
BUILDROW(COL,ORX,I) ; Resolve fields for each row
"RTN","XHDTST",27,0)
 S COL(1)=I
"RTN","XHDTST",28,0)
 S COL(2)=ORX(I)
"RTN","XHDTST",29,0)
 Q
"RTN","XHDTST",30,0)
SETROW(ORY,COL,ORI) ; Generate tags for row
"RTN","XHDTST",31,0)
 N ORC,Y S ORC=0
"RTN","XHDTST",32,0)
 S ORI=ORI+1,@ORY@(ORI)="<r>"
"RTN","XHDTST",33,0)
 S Y=ORI
"RTN","XHDTST",34,0)
 F  S ORC=$O(COL(ORC)) Q:+ORC'>0  D
"RTN","XHDTST",35,0)
 . S ORI=ORI+1,@ORY@(ORI)=$S(COL(ORC)]"":"<c>"_COL(ORC)_"</c>",1:"<c/>")
"RTN","XHDTST",36,0)
 I Y=ORI S ORI=ORI+1,@ORY@(ORI)="<c/>"
"RTN","XHDTST",37,0)
 S ORI=ORI+1,@ORY@(ORI)="</r>"
"RTN","XHDTST",38,0)
 Q
"RTN","XHDX")
0^9^B13282365
"RTN","XHDX",1,0)
XHDX ; SLC/JER - Desktop Config Calls ; 01 Aug 2003  12:18 AM
"RTN","XHDX",2,0)
 ;;1.0;HEALTHEVET DESKTOP;;Jul 15, 2003
"RTN","XHDX",3,0)
PERSEL(LST)     ; List perspectives for a user
"RTN","XHDX",4,0)
 N OPT,X,I
"RTN","XHDX",5,0)
 S OPT=$$GET^XPAR($$ENTSTR,"XHD PRISM PERSPECTIVE SELECTOR",1,"I")
"RTN","XHDX",6,0)
 Q:'OPT
"RTN","XHDX",7,0)
 S I=0 F  S I=$O(^DIC(19,+OPT,10,I)) Q:'I  D
"RTN","XHDX",8,0)
 . S X=^DIC(19,+OPT,10,I,0)
"RTN","XHDX",9,0)
 . S LST($S($P(X,U,3):$P(X,U,3),1:99999+I))=$P(^DIC(19,+X,0),U,2)
"RTN","XHDX",10,0)
 Q
"RTN","XHDX",11,0)
ENTSTR()        ; Build entities string
"RTN","XHDX",12,0)
 Q "ALL^USR.`"_DUZ_$S(+$G(^VA(200,DUZ,5)):"^SRV.`"_+$G(^(5)),1:"")
"RTN","XHDX",13,0)
VERSRV(LST,OPT) ; Return option versions
"RTN","XHDX",14,0)
 N I,X
"RTN","XHDX",15,0)
 S I=0 F  S I=$O(OPT(I)) Q:'I  D
"RTN","XHDX",16,0)
 . N XHDLST
"RTN","XHDX",17,0)
 . S X=$P(OPT(I),U),LST(I)=X
"RTN","XHDX",18,0)
 . D FIND^DIC(19,"",1,"X",X,1,,,,"XHDLST")
"RTN","XHDX",19,0)
 . I 'XHDLST("DILIST",0) Q
"RTN","XHDX",20,0)
 . S $P(LST(I),U,2)=$RE($P($RE(XHDLST("DILIST","ID",1,1))," ",1))
"RTN","XHDX",21,0)
 Q
"RTN","XHDX",22,0)
ASSIGN ; Assign perspectives to users
"RTN","XHDX",23,0)
 N DIC,DONE,X,Y,USR,OPT,ANERR,CUR,CURNM,REP,DIR,DIRUT,DUOUT,DTOUT
"RTN","XHDX",24,0)
 S DIC=19,DIC(0)="AEMQ",DIC("A")="Select Perspective Option: "
"RTN","XHDX",25,0)
 D ^DIC Q:Y<1  S OPT=+Y
"RTN","XHDX",26,0)
 W !!,"Assigning "_$P(Y,U,2)_" to Users"
"RTN","XHDX",27,0)
 S DONE=0 F  D  Q:DONE
"RTN","XHDX",28,0)
 . S DIC=200,DIC(0)="AEMQ",DIC("A")="Assign to: "
"RTN","XHDX",29,0)
 . D ^DIC I Y<1 S DONE=1 Q
"RTN","XHDX",30,0)
 . S USR=+Y
"RTN","XHDX",31,0)
 . S CUR=+$$GET^XPAR(USR_";VA(200,","XHD PRISM PERSPECTIVE SELECTOR",1)
"RTN","XHDX",32,0)
 . I +CUR,(CUR'=OPT) D  Q:'REP
"RTN","XHDX",33,0)
 . . S CURNM=$$GET^XPAR(USR_";VA(200,","XHD PRISM PERSPECTIVE SELECTOR",1,"E")
"RTN","XHDX",34,0)
 . . S DIR(0)="Y",DIR("A")="Currently Assigned "_CURNM_".  Replace",DIR("B")="Y"
"RTN","XHDX",35,0)
 . . D ^DIR S REP=Y
"RTN","XHDX",36,0)
 . D EN^XPAR(USR_";VA(200,","XHD PRISM PERSPECTIVE SELECTOR",1,"`"_OPT,.ANERR)
"RTN","XHDX",37,0)
 . I ANERR W !,$P(ANERR,U,2)
"RTN","XHDX",38,0)
 . D CHKCTXT(OPT,USR)
"RTN","XHDX",39,0)
 Q
"RTN","XHDX",40,0)
CHKCTXT(OPT,USR)        ; Check context
"RTN","XHDX",41,0)
 N HASOPT,ALLCTXT
"RTN","XHDX",42,0)
 S HASOPT=$$ACCESS^XQCHK(USR,OPT)
"RTN","XHDX",43,0)
 I +HASOPT<1 D
"RTN","XHDX",44,0)
 . S ALLCTXT=$$FIND1^DIC(19,"","QX","ORRCM CLIENT")
"RTN","XHDX",45,0)
 . S HASOPT=$$ACCESS^XQCHK(USR,ALLCTXT)
"RTN","XHDX",46,0)
 I +HASOPT<1 D
"RTN","XHDX",47,0)
 . N USRNM,OPTNM
"RTN","XHDX",48,0)
 . S USRNM=$$GET1^DIQ(200,USR_",",.01)
"RTN","XHDX",49,0)
 . S OPTNM=$$GET1^DIQ(19,OPT_",",.01)
"RTN","XHDX",50,0)
 . W !,USRNM_" does not have the "_OPTNM_" in the menu tree."
"RTN","XHDX",51,0)
 . W !,"You many need to add this as a secondary menu for this user.",!
"RTN","XHDX",52,0)
 Q
"RTN","XHDX",53,0)
BYUSR ; Assign a perspective to a single user
"RTN","XHDX",54,0)
 N DIC,DIR,DIRUT,DUOUT,DTOUT,X,Y,USR,OPT,ANERR
"RTN","XHDX",55,0)
 S DIC=200,DIC(0)="AEMQ"  ;,DIC("A")="Assign to: "
"RTN","XHDX",56,0)
 D ^DIC Q:Y<1  S USR=+Y
"RTN","XHDX",57,0)
 S DIR(0)="PAO^19:EM",DIR("A")="Select Perspective Option: "
"RTN","XHDX",58,0)
 S DIR("B")=$$GET^XPAR(USR_";VA(200,","XHD PRISM PERSPECTIVE SELECTOR",1,"E")
"RTN","XHDX",59,0)
 I DIR("B")="" K DIR("B")
"RTN","XHDX",60,0)
 D ^DIR
"RTN","XHDX",61,0)
 S OPT="" S:(Y<1)&(X="@") OPT="@" S:+Y>0 OPT="`"_+Y
"RTN","XHDX",62,0)
 Q:OPT=""
"RTN","XHDX",63,0)
 D EN^XPAR(USR_";VA(200,","XHD PRISM PERSPECTIVE SELECTOR",1,OPT,.ANERR)
"RTN","XHDX",64,0)
 I ANERR W !,$P(ANERR,U,2)
"RTN","XHDX",65,0)
 S OPT=+$P(OPT,"`",2) I OPT D CHKCTXT(OPT,USR)
"RTN","XHDX",66,0)
 Q
"RTN","XHDX",67,0)
BYSVC ; Assign a perspective to a service
"RTN","XHDX",68,0)
 N DIC,DIR,DIRUT,DUOUT,DTOUT,X,Y,SVC,SVCNM,OPT,OPTNM,ANERR
"RTN","XHDX",69,0)
 S DIC=49,DIC(0)="AEMQ"
"RTN","XHDX",70,0)
 D ^DIC Q:Y<1  S SVC=+Y,SVCNM=$P(Y,U,2)
"RTN","XHDX",71,0)
 S DIR(0)="PAO^19:EM",DIR("A")="Select Perspective Option: "
"RTN","XHDX",72,0)
 S DIR("B")=$$GET^XPAR(SVC_";DIC(49,","XHD PRISM PERSPECTIVE SELECTOR",1,"E")
"RTN","XHDX",73,0)
 I DIR("B")="" K DIR("B")
"RTN","XHDX",74,0)
 D ^DIR
"RTN","XHDX",75,0)
 S OPT="" S:(Y<1)&(X="@") OPT="@" S:+Y>0 OPT="`"_+Y S OPTNM=$P(Y,U,2)
"RTN","XHDX",76,0)
 Q:OPT=""
"RTN","XHDX",77,0)
 D EN^XPAR(SVC_";DIC(49,","XHD PRISM PERSPECTIVE SELECTOR",1,OPT,.ANERR)
"RTN","XHDX",78,0)
 I ANERR W !,$P(ANERR,U,2)
"RTN","XHDX",79,0)
 I 'ANERR,(+$P(OPT,"`",2)) D
"RTN","XHDX",80,0)
 . W !,OPTNM_" has been set for "_SVCNM_"."
"RTN","XHDX",81,0)
 . W !,"Note:  "_OPTNM_" must also be available in each user's menu tree."
"RTN","XHDX",82,0)
 Q
"RTN","XHDYP")
0^14^B803022
"RTN","XHDYP",1,0)
XHDYP ; Export Package Level Parameters ; Oct 09, 2003@13:59:24
"RTN","XHDYP",2,0)
 ;;1.0;HEALTHEVET DESKTOP;;Jul 15, 2003
"RTN","XHDYP",3,0)
MAIN ; main (initial) parameter transport routine
"RTN","XHDYP",4,0)
 K ^TMP($J,"XPARRSTR")
"RTN","XHDYP",5,0)
 N ENT,IDX,ROOT,REF,VAL,I
"RTN","XHDYP",6,0)
 S ROOT=$NAME(^TMP($J,"XPARRSTR")),ROOT=$E(ROOT,1,$L(ROOT)-1)_","
"RTN","XHDYP",7,0)
 D ^XHDYP01
"RTN","XHDYP",8,0)
XX2 S IDX=0,ENT="PKG."_"HEALTHEVET DESKTOP"
"RTN","XHDYP",9,0)
 F  S IDX=$O(^TMP($J,"XPARRSTR",IDX)) Q:'IDX  D
"RTN","XHDYP",10,0)
 . N PAR,INST,VAL,ERR
"RTN","XHDYP",11,0)
 . S PAR=$P(^TMP($J,"XPARRSTR",IDX,"KEY"),U),INST=$P(^("KEY"),U,2)
"RTN","XHDYP",12,0)
 . M VAL=^TMP($J,"XPARRSTR",IDX,"VAL")
"RTN","XHDYP",13,0)
 . D EN^XPAR(ENT,PAR,INST,.VAL,.ERR)
"RTN","XHDYP",14,0)
 K ^TMP($J,"XPARRSTR")
"RTN","XHDYP",15,0)
 Q
"RTN","XHDYP01")
0^15^B36104366
"RTN","XHDYP01",1,0)
XHDYP01 ; ; Oct 09, 2003@13:59:24
"RTN","XHDYP01",2,0)
 ;;1.0;HEALTHEVET DESKTOP;;Jul 15, 2003
"RTN","XHDYP01",3,0)
LOAD ; load data into ^TMP (expects ROOT to be defined)
"RTN","XHDYP01",4,0)
 S I=1 F  S REF=$T(DATA+I) Q:REF=""  S VAL=$T(DATA+I+1) D
"RTN","XHDYP01",5,0)
 . S I=I+2,REF=$P(REF,";",3,999),VAL=$P(VAL,";",3,999)
"RTN","XHDYP01",6,0)
 . S @(ROOT_REF)=VAL
"RTN","XHDYP01",7,0)
 Q
"RTN","XHDYP01",8,0)
DATA ; parameter data
"RTN","XHDYP01",9,0)
 ;;4448,"KEY")
"RTN","XHDYP01",10,0)
 ;;XHD PRISM DEFAULT PERSPECTIVE^1
"RTN","XHDYP01",11,0)
 ;;4448,"VAL")
"RTN","XHDYP01",12,0)
 ;;clinicianDashboard
"RTN","XHDYP01",13,0)
 ;;4449,"KEY")
"RTN","XHDYP01",14,0)
 ;;XHD TEST WP PARAMETERS^1
"RTN","XHDYP01",15,0)
 ;;4449,"VAL")
"RTN","XHDYP01",16,0)
 ;;Test Word-Processing
"RTN","XHDYP01",17,0)
 ;;4449,"VAL",1,0)
"RTN","XHDYP01",18,0)
 ;;<?xml version="1.0" encoding="UTF-8"?>
"RTN","XHDYP01",19,0)
 ;;4449,"VAL",2,0)
"RTN","XHDYP01",20,0)
 ;;<configTree xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
"RTN","XHDYP01",21,0)
 ;;4449,"VAL",3,0)
"RTN","XHDYP01",22,0)
 ;;xsi:noNamespaceSchemaLocation="C:\reeng\main\modules\config\src\
"RTN","XHDYP01",23,0)
 ;;4449,"VAL",4,0)
"RTN","XHDYP01",24,0)
 ;;gov\va\med\hds\config\xml\configTree.xsd">
"RTN","XHDYP01",25,0)
 ;;4449,"VAL",5,0)
"RTN","XHDYP01",26,0)
 ;;<pluginParameterCategory>
"RTN","XHDYP01",27,0)
 ;;4449,"VAL",6,0)
"RTN","XHDYP01",28,0)
 ;;<id>1</id>
"RTN","XHDYP01",29,0)
 ;;4449,"VAL",7,0)
"RTN","XHDYP01",30,0)
 ;;<name>Dashboard</name>
"RTN","XHDYP01",31,0)
 ;;4449,"VAL",8,0)
"RTN","XHDYP01",32,0)
 ;;<preferencePage>gov.va.med.hds.dash.DBPrefPage</preferencePage>
"RTN","XHDYP01",33,0)
 ;;4449,"VAL",9,0)
"RTN","XHDYP01",34,0)
 ;;<parameters>
"RTN","XHDYP01",35,0)
 ;;4449,"VAL",10,0)
"RTN","XHDYP01",36,0)
 ;;<parameter>
"RTN","XHDYP01",37,0)
 ;;4449,"VAL",11,0)
"RTN","XHDYP01",38,0)
 ;;<name>Look and Feel</name>
"RTN","XHDYP01",39,0)
 ;;4449,"VAL",12,0)
"RTN","XHDYP01",40,0)
 ;;<key>Look and Feel^5000;DIC(4,^201^1</key>
"RTN","XHDYP01",41,0)
 ;;4449,"VAL",13,0)
"RTN","XHDYP01",42,0)
 ;;<value>Motif</value>
"RTN","XHDYP01",43,0)
 ;;4449,"VAL",14,0)
"RTN","XHDYP01",44,0)
 ;;</parameter>
"RTN","XHDYP01",45,0)
 ;;4449,"VAL",15,0)
"RTN","XHDYP01",46,0)
 ;;<parameter>
"RTN","XHDYP01",47,0)
 ;;4449,"VAL",16,0)
"RTN","XHDYP01",48,0)
 ;;<name>Selection Mode</name>
"RTN","XHDYP01",49,0)
 ;;4449,"VAL",17,0)
"RTN","XHDYP01",50,0)
 ;;<key>Selection Mode^0^4749^1</key>
"RTN","XHDYP01",51,0)
 ;;4449,"VAL",18,0)
"RTN","XHDYP01",52,0)
 ;;<value>Table-Navigator-Viewer</value>
"RTN","XHDYP01",53,0)
 ;;4449,"VAL",19,0)
"RTN","XHDYP01",54,0)
 ;;</parameter>
"RTN","XHDYP01",55,0)
 ;;4449,"VAL",20,0)
"RTN","XHDYP01",56,0)
 ;;<parameter>
"RTN","XHDYP01",57,0)
 ;;4449,"VAL",21,0)
"RTN","XHDYP01",58,0)
 ;;<name>Window Mode</name>
"RTN","XHDYP01",59,0)
 ;;4449,"VAL",22,0)
"RTN","XHDYP01",60,0)
 ;;<key>Window Mode^0^4750^1</key>
"RTN","XHDYP01",61,0)
 ;;4449,"VAL",23,0)
"RTN","XHDYP01",62,0)
 ;;<value>Single Document Interface</value>
"RTN","XHDYP01",63,0)
 ;;4449,"VAL",24,0)
"RTN","XHDYP01",64,0)
 ;;</parameter>
"RTN","XHDYP01",65,0)
 ;;4449,"VAL",25,0)
"RTN","XHDYP01",66,0)
 ;;</parameters>
"RTN","XHDYP01",67,0)
 ;;4449,"VAL",26,0)
"RTN","XHDYP01",68,0)
 ;;<children>
"RTN","XHDYP01",69,0)
 ;;4449,"VAL",27,0)
"RTN","XHDYP01",70,0)
 ;;<parameterCategory>
"RTN","XHDYP01",71,0)
 ;;4449,"VAL",28,0)
"RTN","XHDYP01",72,0)
 ;;<id>2</id>
"RTN","XHDYP01",73,0)
 ;;4449,"VAL",29,0)
"RTN","XHDYP01",74,0)
 ;;<name>Patient Selection</name>
"RTN","XHDYP01",75,0)
 ;;4449,"VAL",30,0)
"RTN","XHDYP01",76,0)
 ;;<preferencePage>gov.va.med.hds.dash.PtSelPrefPage</preferencePage>
"RTN","XHDYP01",77,0)
 ;;4449,"VAL",31,0)
"RTN","XHDYP01",78,0)
 ;;<parameters>
"RTN","XHDYP01",79,0)
 ;;4449,"VAL",32,0)
"RTN","XHDYP01",80,0)
 ;;<parameter>
"RTN","XHDYP01",81,0)
 ;;4449,"VAL",33,0)
"RTN","XHDYP01",82,0)
 ;;<name>Patient Selection Mode</name>
"RTN","XHDYP01",83,0)
 ;;4449,"VAL",34,0)
"RTN","XHDYP01",84,0)
 ;;<key>Patient Selection Mode^0^4751^1</key>
"RTN","XHDYP01",85,0)
 ;;4449,"VAL",35,0)
"RTN","XHDYP01",86,0)
 ;;<value>single click</value>
"RTN","XHDYP01",87,0)
 ;;4449,"VAL",36,0)
"RTN","XHDYP01",88,0)
 ;;</parameter>
"RTN","XHDYP01",89,0)
 ;;4449,"VAL",37,0)
"RTN","XHDYP01",90,0)
 ;;<parameter>
"RTN","XHDYP01",91,0)
 ;;4449,"VAL",38,0)
"RTN","XHDYP01",92,0)
 ;;<name>Default Patient List</name>
"RTN","XHDYP01",93,0)
 ;;4449,"VAL",39,0)
"RTN","XHDYP01",94,0)
 ;;<key>Default Patient List^375;DIC(9.4,^4752^1</key>
"RTN","XHDYP01",95,0)
 ;;4449,"VAL",40,0)
"RTN","XHDYP01",96,0)
 ;;<value>Patient List A</value>
"RTN","XHDYP01",97,0)
 ;;4449,"VAL",41,0)
"RTN","XHDYP01",98,0)
 ;;</parameter>
"RTN","XHDYP01",99,0)
 ;;4449,"VAL",42,0)
"RTN","XHDYP01",100,0)
 ;;</parameters>
"RTN","XHDYP01",101,0)
 ;;4449,"VAL",43,0)
"RTN","XHDYP01",102,0)
 ;;<children>
"RTN","XHDYP01",103,0)
 ;;4449,"VAL",44,0)
"RTN","XHDYP01",104,0)
 ;;</children>
"RTN","XHDYP01",105,0)
 ;;4449,"VAL",45,0)
"RTN","XHDYP01",106,0)
 ;;</parameterCategory>
"RTN","XHDYP01",107,0)
 ;;4449,"VAL",46,0)
"RTN","XHDYP01",108,0)
 ;;<parameterCategory>
"RTN","XHDYP01",109,0)
 ;;4449,"VAL",47,0)
"RTN","XHDYP01",110,0)
 ;;<id>3</id>
"RTN","XHDYP01",111,0)
 ;;4449,"VAL",48,0)
"RTN","XHDYP01",112,0)
 ;;<name>Lab Collection Times</name>
"RTN","XHDYP01",113,0)
 ;;4449,"VAL",49,0)
"RTN","XHDYP01",114,0)
 ;;<preferencePage>gov.va.med.hds.dash.LabPrefPage</preferencePage>
"RTN","XHDYP01",115,0)
 ;;4449,"VAL",50,0)
"RTN","XHDYP01",116,0)
 ;;<parameters>
"RTN","XHDYP01",117,0)
 ;;4449,"VAL",51,0)
"RTN","XHDYP01",118,0)
 ;;<parameter>
"RTN","XHDYP01",119,0)
 ;;4449,"VAL",52,0)
"RTN","XHDYP01",120,0)
 ;;<name>Lab Collection Times</name>
"RTN","XHDYP01",121,0)
 ;;4449,"VAL",53,0)
"RTN","XHDYP01",122,0)
 ;;<key>Lab Collection Times^5000;DIC(4,^21^28800</key>
"RTN","XHDYP01",123,0)
 ;;4449,"VAL",54,0)
"RTN","XHDYP01",124,0)
 ;;<value>0810</value>
"RTN","XHDYP01",125,0)
 ;;4449,"VAL",55,0)
"RTN","XHDYP01",126,0)
 ;;</parameter>
"RTN","XHDYP01",127,0)
 ;;4449,"VAL",56,0)
"RTN","XHDYP01",128,0)
 ;;<parameter>
"RTN","XHDYP01",129,0)
 ;;4449,"VAL",57,0)
"RTN","XHDYP01",130,0)
 ;;<name>Lab Collection Times</name>
"RTN","XHDYP01",131,0)
 ;;4449,"VAL",58,0)
"RTN","XHDYP01",132,0)
 ;;<key>Lab Collection Times^5000;DIC(4,^21^36000</key>
"RTN","XHDYP01",133,0)
 ;;4449,"VAL",59,0)
"RTN","XHDYP01",134,0)
 ;;<value>1030</value>
"RTN","XHDYP01",135,0)
 ;;4449,"VAL",60,0)
"RTN","XHDYP01",136,0)
 ;;</parameter>
"RTN","XHDYP01",137,0)
 ;;4449,"VAL",61,0)
"RTN","XHDYP01",138,0)
 ;;<parameter>
"RTN","XHDYP01",139,0)
 ;;4449,"VAL",62,0)
"RTN","XHDYP01",140,0)
 ;;<name>Lab Collection Times</name>
"RTN","XHDYP01",141,0)
 ;;4449,"VAL",63,0)
"RTN","XHDYP01",142,0)
 ;;<key>Lab Collection Times^5000;DIC(4,^21^39600</key>
"RTN","XHDYP01",143,0)
 ;;4449,"VAL",64,0)
"RTN","XHDYP01",144,0)
 ;;<value>1130</value>
"RTN","XHDYP01",145,0)
 ;;4449,"VAL",65,0)
"RTN","XHDYP01",146,0)
 ;;</parameter>
"RTN","XHDYP01",147,0)
 ;;4449,"VAL",66,0)
"RTN","XHDYP01",148,0)
 ;;<parameter>
"RTN","XHDYP01",149,0)
 ;;4449,"VAL",67,0)
"RTN","XHDYP01",150,0)
 ;;<name>Lab Collection Times</name>
"RTN","XHDYP01",151,0)
 ;;4449,"VAL",68,0)
"RTN","XHDYP01",152,0)
 ;;<key>Lab Collection Times^5000;DIC(4,^21^66600</key>
"RTN","XHDYP01",153,0)
 ;;4449,"VAL",69,0)
"RTN","XHDYP01",154,0)
 ;;<value>1900</value>
"RTN","XHDYP01",155,0)
 ;;4449,"VAL",70,0)
"RTN","XHDYP01",156,0)
 ;;</parameter>
"RTN","XHDYP01",157,0)
 ;;4449,"VAL",71,0)
"RTN","XHDYP01",158,0)
 ;;<parameter>
"RTN","XHDYP01",159,0)
 ;;4449,"VAL",72,0)
"RTN","XHDYP01",160,0)
 ;;<name>Lab Collection Times</name>
"RTN","XHDYP01",161,0)
 ;;4449,"VAL",73,0)
"RTN","XHDYP01",162,0)
 ;;<key>Lab Collection Times^5000;DIC(4,^21^73800</key>
"RTN","XHDYP01",163,0)
 ;;4449,"VAL",74,0)
"RTN","XHDYP01",164,0)
 ;;<value>2100</value>
"RTN","XHDYP01",165,0)
 ;;4449,"VAL",75,0)
"RTN","XHDYP01",166,0)
 ;;</parameter>
"RTN","XHDYP01",167,0)
 ;;4449,"VAL",76,0)
"RTN","XHDYP01",168,0)
 ;;<parameter>
"RTN","XHDYP01",169,0)
 ;;4449,"VAL",77,0)
"RTN","XHDYP01",170,0)
 ;;<name>Lab Collection Times</name>
"RTN","XHDYP01",171,0)
 ;;4449,"VAL",78,0)
"RTN","XHDYP01",172,0)
 ;;<key>Lab Collection Times^5000;DIC(4,^21^75000</key>
"RTN","XHDYP01",173,0)
 ;;4449,"VAL",79,0)
"RTN","XHDYP01",174,0)
 ;;<value>2350</value>
"RTN","XHDYP01",175,0)
 ;;4449,"VAL",80,0)
"RTN","XHDYP01",176,0)
 ;;</parameter>
"RTN","XHDYP01",177,0)
 ;;4449,"VAL",81,0)
"RTN","XHDYP01",178,0)
 ;;</parameters>
"RTN","XHDYP01",179,0)
 ;;4449,"VAL",82,0)
"RTN","XHDYP01",180,0)
 ;;<children>
"RTN","XHDYP01",181,0)
 ;;4449,"VAL",83,0)
"RTN","XHDYP01",182,0)
 ;;</children>
"RTN","XHDYP01",183,0)
 ;;4449,"VAL",84,0)
"RTN","XHDYP01",184,0)
 ;;</parameterCategory>
"RTN","XHDYP01",185,0)
 ;;4449,"VAL",85,0)
"RTN","XHDYP01",186,0)
 ;;</children>
"RTN","XHDYP01",187,0)
 ;;4449,"VAL",86,0)
"RTN","XHDYP01",188,0)
 ;;</pluginParameterCategory>
"RTN","XHDYP01",189,0)
 ;;4449,"VAL",87,0)
"RTN","XHDYP01",190,0)
 ;;</configTree>
"RTN","XHDYP01",191,0)
 ;;4450,"KEY")
"RTN","XHDYP01",192,0)
 ;;XHD TEST SCALAR PARAMETER^1
"RTN","XHDYP01",193,0)
 ;;4450,"VAL")
"RTN","XHDYP01",194,0)
 ;;99
"RTN","XHDYP01",195,0)
 ;;4451,"KEY")
"RTN","XHDYP01",196,0)
 ;;XHD PRISM ADA S508 NOTICE^1
"RTN","XHDYP01",197,0)
 ;;4451,"VAL")
"RTN","XHDYP01",198,0)
 ;;NO
"RTN","XHDYPRE")
0^10^B2313108
"RTN","XHDYPRE",1,0)
XHDYPRE ; SLC/KCM - Alpha/Beta Site Conversions ; 25 Jul 2003  9:42 AM
"RTN","XHDYPRE",2,0)
 ;;1.0;HEALTHEVET DESKTOP;;Jul 15, 2003
"RTN","XHDYPRE",3,0)
SET2XHD ; Rename options, parameters for HealtheVet Desktop
"RTN","XHDYPRE",4,0)
 D RENAME^XPDMENU("ORRPX ASSIGN USER PERSPECTIVES","XHDX ASSIGN USER PERSPECTIVES")
"RTN","XHDYPRE",5,0)
 D RENAME^XPDMENU("ORRPX HEALTHEVET DESKTOP","XHDX HEALTHEVET DESKTOP")
"RTN","XHDYPRE",6,0)
 D RENAME^XPDMENU("ORRPXC DESKTOP","XHDXC DESKTOP")
"RTN","XHDYPRE",7,0)
 D RENAME(8989.51,"ORR PRISM DEFAULT PERSPECTIVE","XHD PRISM DEFAULT PERSPECTIVE")
"RTN","XHDYPRE",8,0)
 D RENAME(8989.51,"ORR PRISM PERSPECTIVE SELECTOR","XHD PRISM PERSPECTIVE SELECTOR")
"RTN","XHDYPRE",9,0)
 D RENAME(8989.51,"ORR PRISM ADA S508 NOTICE","XHD PRISM ADA S508 NOTICE")
"RTN","XHDYPRE",10,0)
 D RENAME(8989.51,"ORR TEST SCALAR PARAMETER","XHD TEST SCALAR PARAMETER")
"RTN","XHDYPRE",11,0)
 D RENAME(8989.51,"ORR TEST WP PARAMETERS","XHD TEST WP PARAMETERS")
"RTN","XHDYPRE",12,0)
 Q
"RTN","XHDYPRE",13,0)
RENAME(FILENUM,OLDNAME,NEWNAME) ; rename .01 entry in a file
"RTN","XHDYPRE",14,0)
 N IEN,FDA,ERR,DIERR
"RTN","XHDYPRE",15,0)
 S IEN=$$FIND1^DIC(FILENUM,"","X",OLDNAME)
"RTN","XHDYPRE",16,0)
 Q:'IEN
"RTN","XHDYPRE",17,0)
 S FDA(FILENUM,IEN_",",.01)=NEWNAME
"RTN","XHDYPRE",18,0)
 D FILE^DIE("","FDA","ERR")
"RTN","XHDYPRE",19,0)
 I $D(DIERR) D BMES^XPDUTL("Unable to rename "_OLDNAME)
"RTN","XHDYPRE",20,0)
 Q
"SEC","^DIC",8935.91,8935.91,0,"AUDIT")
@
"SEC","^DIC",8935.91,8935.91,0,"DD")
@
"SEC","^DIC",8935.91,8935.91,0,"DEL")
@
"SEC","^DIC",8935.91,8935.91,0,"LAYGO")
@
"SEC","^DIC",8935.91,8935.91,0,"RD")
@
"SEC","^DIC",8935.91,8935.91,0,"WR")
@
"VER")
8.0^22.0
"^DD",8935.91,8935.91,0)
FIELD^^3^9
"^DD",8935.91,8935.91,0,"DDA")
N
"^DD",8935.91,8935.91,0,"IX","B",8935.91,.01)

"^DD",8935.91,8935.91,0,"IX","C",8935.91,.02)

"^DD",8935.91,8935.91,0,"IX","D",8935.91,.01)

"^DD",8935.91,8935.91,0,"IX","DAD",8935.91,.04)

"^DD",8935.91,8935.91,0,"IX","SCAT",8935.913,.02)

"^DD",8935.91,8935.91,0,"NM","XHD PARAMETER CATEGORY")

"^DD",8935.91,8935.91,0,"PT",8935.91,.04)

"^DD",8935.91,8935.91,0,"PT",8935.913,.02)

"^DD",8935.91,8935.91,0,"VRPK")
XHD
"^DD",8935.91,8935.91,.01,0)
FULL NAME^RF^^0;1^K:$L(X)>60!($L(X)<3)!'(X'?1P.E) X
"^DD",8935.91,8935.91,.01,1,0)
^.1
"^DD",8935.91,8935.91,.01,1,1,0)
8935.91^B
"^DD",8935.91,8935.91,.01,1,1,1)
S ^XHD(8935.91,"B",$E(X,1,30),DA)=""
"^DD",8935.91,8935.91,.01,1,1,2)
K ^XHD(8935.91,"B",$E(X,1,30),DA)
"^DD",8935.91,8935.91,.01,1,2,0)
8935.91^D^KWIC
"^DD",8935.91,8935.91,.01,1,2,1)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^XHD(8935.91,"D",I,DA)=""
"^DD",8935.91,8935.91,.01,1,2,2)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^XHD(8935.91,"D",I,DA)
"^DD",8935.91,8935.91,.01,1,2,"%D",0)
^^1^1^3021211^
"^DD",8935.91,8935.91,.01,1,2,"%D",1,0)
KWIC Cross-reference on the name field allows look-up on partial names.
"^DD",8935.91,8935.91,.01,1,2,"DT")
3021211
"^DD",8935.91,8935.91,.01,3)
Answer must be 3-60 characters in length, beginning with Package namespace
"^DD",8935.91,8935.91,.01,21,0)
^.001^1^1^3021108^^^
"^DD",8935.91,8935.91,.01,21,1,0)
This is the name of the Parameter Category.
"^DD",8935.91,8935.91,.01,"DT")
3021211
"^DD",8935.91,8935.91,.02,0)
PLUGIN ID^F^^0;2^K:$L(X)>60!($L(X)<3) X
"^DD",8935.91,8935.91,.02,1,0)
^.1
"^DD",8935.91,8935.91,.02,1,1,0)
8935.91^C
"^DD",8935.91,8935.91,.02,1,1,1)
S ^XHD(8935.91,"C",$E(X,1,30),DA)=""
"^DD",8935.91,8935.91,.02,1,1,2)
K ^XHD(8935.91,"C",$E(X,1,30),DA)
"^DD",8935.91,8935.91,.02,1,1,"%D",0)
^^2^2^3021112^
"^DD",8935.91,8935.91,.02,1,1,"%D",1,0)
This REGULAR FileMan cross-reference allows look-up and sorting by module 
"^DD",8935.91,8935.91,.02,1,1,"%D",2,0)
ID.
"^DD",8935.91,8935.91,.02,1,1,"DT")
3021112
"^DD",8935.91,8935.91,.02,3)
Answer must be 3-60 characters in length.
"^DD",8935.91,8935.91,.02,21,0)
^^2^2^3030114^
"^DD",8935.91,8935.91,.02,21,1,0)
This is the identifier of the plugin to which this category applies 
"^DD",8935.91,8935.91,.02,21,2,0)
(e.g., gov.va.med.hds.prism).
"^DD",8935.91,8935.91,.02,"DT")
3030114
"^DD",8935.91,8935.91,.03,0)
NAME^F^^0;3^K:$L(X)>60!($L(X)<3) X
"^DD",8935.91,8935.91,.03,3)
Answer must be 3-60 characters in length.
"^DD",8935.91,8935.91,.03,21,0)
^^2^2^3021108^
"^DD",8935.91,8935.91,.03,21,1,0)
This is the name of the category by which it will be known to the outside 
"^DD",8935.91,8935.91,.03,21,2,0)
world.
"^DD",8935.91,8935.91,.03,"DT")
3021113
"^DD",8935.91,8935.91,.04,0)
PARENT ID^P8935.91'^XHD(8935.91,^0;4^Q
"^DD",8935.91,8935.91,.04,1,0)
^.1
"^DD",8935.91,8935.91,.04,1,1,0)
8935.91^DAD
"^DD",8935.91,8935.91,.04,1,1,1)
S ^XHD(8935.91,"DAD",$E(X,1,30),DA)=""
"^DD",8935.91,8935.91,.04,1,1,2)
K ^XHD(8935.91,"DAD",$E(X,1,30),DA)
"^DD",8935.91,8935.91,.04,1,1,"%D",0)
^^3^3^3021126^
"^DD",8935.91,8935.91,.04,1,1,"%D",1,0)
This REGULAR, whole-file cross-reference on the parent field helps to 
"^DD",8935.91,8935.91,.04,1,1,"%D",2,0)
assure referential consistency between Parameter Categories and their 
"^DD",8935.91,8935.91,.04,1,1,"%D",3,0)
sub-categories.
"^DD",8935.91,8935.91,.04,1,1,"DT")
3021126
"^DD",8935.91,8935.91,.04,3)
Specify the parent category
"^DD",8935.91,8935.91,.04,21,0)
^.001^1^1^3021113^^
"^DD",8935.91,8935.91,.04,21,1,0)
This is the parent category.
"^DD",8935.91,8935.91,.04,"DT")
3021126
"^DD",8935.91,8935.91,.05,0)
PACKAGE ROOT^S^0:false;1:true;^0;5^Q
"^DD",8935.91,8935.91,.05,3)
Is this the root category for the module?
"^DD",8935.91,8935.91,.05,21,0)
^.001^1^1^3021122^^
"^DD",8935.91,8935.91,.05,21,1,0)
Boolean field to identify the root category for a given module.
"^DD",8935.91,8935.91,.05,"DT")
3021122
"^DD",8935.91,8935.91,.06,0)
OK TO TRANSPORT^S^0:false;1:true;^0;6^Q
"^DD",8935.91,8935.91,.06,3)
Indicate whether the category is ok to transport
"^DD",8935.91,8935.91,.06,21,0)
^^2^2^3030212^
"^DD",8935.91,8935.91,.06,21,1,0)
This Boolean field indicates whether or not a given Category is okay to 
"^DD",8935.91,8935.91,.06,21,2,0)
transport with a KIDS distribution.
"^DD",8935.91,8935.91,.06,"DT")
3030212
"^DD",8935.91,8935.91,1,0)
PREFERENCE PAGE ID^F^^1;1^K:$L(X)>60!($L(X)<3) X
"^DD",8935.91,8935.91,1,3)
Answer must be 3-60 characters in length.
"^DD",8935.91,8935.91,1,21,0)
^^3^3^3030204^
"^DD",8935.91,8935.91,1,21,1,0)
This is the freetext ID of the extension-point in the plugin's 
"^DD",8935.91,8935.91,1,21,2,0)
Manifest.xml file that maps to the Java Class for the Preference Page
"^DD",8935.91,8935.91,1,21,3,0)
associated with this category (e.g., gov.va.med.hds.query.PreferencePage).
"^DD",8935.91,8935.91,1,"DT")
3030204
"^DD",8935.91,8935.91,2,0)
PARAMETERS^8935.912^^2;0
"^DD",8935.91,8935.91,2,21,0)
^.001^1^1^3030226^^^^
"^DD",8935.91,8935.91,2,21,1,0)
This is the multiple of parameters for the category.
"^DD",8935.91,8935.91,3,0)
SUBCATEGORIES^8935.913^^3;0
"^DD",8935.91,8935.91,3,21,0)
^.001^2^2^3021112^^^^
"^DD",8935.91,8935.91,3,21,1,0)
This multiple of subcategories allows an indefinitely nested hierarchy of 
"^DD",8935.91,8935.91,3,21,2,0)
categories.
"^DD",8935.91,8935.912,0)
PARAMETERS SUB-FIELD^^.02^2
"^DD",8935.91,8935.912,0,"IX","B",8935.912,.01)

"^DD",8935.91,8935.912,0,"IX","C",8935.912,.02)

"^DD",8935.91,8935.912,0,"NM","PARAMETERS")

"^DD",8935.91,8935.912,0,"UP")
8935.91
"^DD",8935.91,8935.912,.01,0)
PARAMETER NAME^MF^^0;1^K:$L(X)>60!($L(X)<3) X
"^DD",8935.91,8935.912,.01,1,0)
^.1
"^DD",8935.91,8935.912,.01,1,1,0)
8935.912^B
"^DD",8935.91,8935.912,.01,1,1,1)
S ^XHD(8935.91,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",8935.91,8935.912,.01,1,1,2)
K ^XHD(8935.91,DA(1),2,"B",$E(X,1,30),DA)
"^DD",8935.91,8935.912,.01,3)
Answer must be 3-60 characters in length.
"^DD",8935.91,8935.912,.01,21,0)
^.001^2^2^3021112^^^
"^DD",8935.91,8935.912,.01,21,1,0)
This is the name of the parameter by which it will be identified to the 
"^DD",8935.91,8935.912,.01,21,2,0)
application (e.g., "Look and Feel").
"^DD",8935.91,8935.912,.01,"DT")
3021108
"^DD",8935.91,8935.912,.02,0)
PARAMETER DEFINITION^P8989.51'^XTV(8989.51,^0;2^Q
"^DD",8935.91,8935.912,.02,1,0)
^.1
"^DD",8935.91,8935.912,.02,1,1,0)
8935.912^C
"^DD",8935.91,8935.912,.02,1,1,1)
S ^XHD(8935.91,DA(1),2,"C",$E(X,1,30),DA)=""
"^DD",8935.91,8935.912,.02,1,1,2)
K ^XHD(8935.91,DA(1),2,"C",$E(X,1,30),DA)
"^DD",8935.91,8935.912,.02,1,1,"%D",0)
^.101^2^2^3030221^^
"^DD",8935.91,8935.912,.02,1,1,"%D",1,0)
This REGULAR cross-reference on categories by parameter definition will 
"^DD",8935.91,8935.912,.02,1,1,"%D",2,0)
optimize finding instances of a given parameter in a category.
"^DD",8935.91,8935.912,.02,1,1,"DT")
3030221
"^DD",8935.91,8935.912,.02,3)
Specify the parameter definition to which this entry applies
"^DD",8935.91,8935.912,.02,21,0)
^.001^2^2^3021112^^^
"^DD",8935.91,8935.912,.02,21,1,0)
This is the PARAMETER DEFINITION FILE (#8989.51) to which the entry 
"^DD",8935.91,8935.912,.02,21,2,0)
applies.
"^DD",8935.91,8935.912,.02,"DT")
3030221
"^DD",8935.91,8935.913,0)
SUBCATEGORIES SUB-FIELD^^.02^2
"^DD",8935.91,8935.913,0,"IX","B",8935.913,.01)

"^DD",8935.91,8935.913,0,"IX","C",8935.913,.02)

"^DD",8935.91,8935.913,0,"NM","SUBCATEGORIES")

"^DD",8935.91,8935.913,0,"UP")
8935.91
"^DD",8935.91,8935.913,.01,0)
SEQUENCE^MNJ5,1^^0;1^K:+X'=X!(X>999.9)!(X<.1)!(X?.E1"."2N.N) X
"^DD",8935.91,8935.913,.01,1,0)
^.1
"^DD",8935.91,8935.913,.01,1,1,0)
8935.913^B
"^DD",8935.91,8935.913,.01,1,1,1)
S ^XHD(8935.91,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",8935.91,8935.913,.01,1,1,2)
K ^XHD(8935.91,DA(1),3,"B",$E(X,1,30),DA)
"^DD",8935.91,8935.913,.01,3)
Type a Number between .1 and 999.9, 1 Decimal Digit
"^DD",8935.91,8935.913,.01,21,0)
^.001^1^1^3021112^^
"^DD",8935.91,8935.913,.01,21,1,0)
Specify the sequence in which the subcategory will be presented.
"^DD",8935.91,8935.913,.01,"DT")
3021112
"^DD",8935.91,8935.913,.02,0)
SUBCATEGORY^P8935.91^XHD(8935.91,^0;2^Q
"^DD",8935.91,8935.913,.02,1,0)
^.1
"^DD",8935.91,8935.913,.02,1,1,0)
8935.913^C
"^DD",8935.91,8935.913,.02,1,1,1)
S ^XHD(8935.91,DA(1),3,"C",$E(X,1,30),DA)=""
"^DD",8935.91,8935.913,.02,1,1,2)
K ^XHD(8935.91,DA(1),3,"C",$E(X,1,30),DA)
"^DD",8935.91,8935.913,.02,1,1,"%D",0)
^^2^2^3021127^
"^DD",8935.91,8935.913,.02,1,1,"%D",1,0)
This regular cross-reference by subcategory allows quick look-ups based 
"^DD",8935.91,8935.913,.02,1,1,"%D",2,0)
on sub-category ids.
"^DD",8935.91,8935.913,.02,1,1,"DT")
3021127
"^DD",8935.91,8935.913,.02,1,2,0)
8935.91^SCAT
"^DD",8935.91,8935.913,.02,1,2,1)
S ^XHD(8935.91,"SCAT",$E(X,1,30),DA(1),DA)=""
"^DD",8935.91,8935.913,.02,1,2,2)
K ^XHD(8935.91,"SCAT",$E(X,1,30),DA(1),DA)
"^DD",8935.91,8935.913,.02,1,2,"%D",0)
^^2^2^3021127^
"^DD",8935.91,8935.913,.02,1,2,"%D",1,0)
This regular, whole-file cross-reference by sub-category allows quick 
"^DD",8935.91,8935.913,.02,1,2,"%D",2,0)
look-ups by sub-category id.
"^DD",8935.91,8935.913,.02,1,2,"DT")
3021127
"^DD",8935.91,8935.913,.02,3)
Select the subcategory.
"^DD",8935.91,8935.913,.02,21,0)
^.001^2^2^3021112^^^
"^DD",8935.91,8935.913,.02,21,1,0)
This field holds a reference to the subcategory entry in the Parameter 
"^DD",8935.91,8935.913,.02,21,2,0)
Categories file.
"^DD",8935.91,8935.913,.02,"DT")
3021127
"^DIC",8935.91,8935.91,0)
XHD PARAMETER CATEGORY^8935.91
"^DIC",8935.91,8935.91,0,"GL")
^XHD(8935.91,
"^DIC",8935.91,8935.91,"%D",0)
^^17^17^3031027^
"^DIC",8935.91,8935.91,"%D",1,0)
The HealtheVet Desktop relies on various modules or plug-ins for proper 
"^DIC",8935.91,8935.91,"%D",2,0)
processing. Each plug-in may have related VistA parameters from which 
"^DIC",8935.91,8935.91,"%D",3,0)
values are obtained. This file supports the grouping of parameters into 
"^DIC",8935.91,8935.91,"%D",4,0)
logical categories, and the association of such categories with the module 
"^DIC",8935.91,8935.91,"%D",5,0)
or plug-in to which they apply.  
"^DIC",8935.91,8935.91,"%D",6,0)
 
"^DIC",8935.91,8935.91,"%D",7,0)
Categories may also be associated with Preference Pages. Preference Pages may 
"^DIC",8935.91,8935.91,"%D",8,0)
be composed by plug-in developers, and are used by the HealtheVet Desktop's 
"^DIC",8935.91,8935.91,"%D",9,0)
Preferences Dialog to make available user-configurable features of the
"^DIC",8935.91,8935.91,"%D",10,0)
corresponding plug-in.
"^DIC",8935.91,8935.91,"%D",11,0)
 
"^DIC",8935.91,8935.91,"%D",12,0)
******************************************************************************
"^DIC",8935.91,8935.91,"%D",13,0)
*     Entries in this file are distributed by HealtheVet Desktop Plug-in     * 
"^DIC",8935.91,8935.91,"%D",14,0)
* developers, and should NOT be altered by any facility. Altering this file  * 
"^DIC",8935.91,8935.91,"%D",15,0)
*  can severely compromise the behavior of your HeatheVet Desktop plug-ins.  * 
"^DIC",8935.91,8935.91,"%D",16,0)
*                                                                            *
"^DIC",8935.91,8935.91,"%D",17,0)
******************************************************************************
"^DIC",8935.91,"B","XHD PARAMETER CATEGORY",8935.91)

**INSTALL NAME**
ORRC PARAMETERS 1.0
"BLD",4138,0)
ORRC PARAMETERS 1.0^^0^3040116^y
"BLD",4138,1,0)
^^1^1^3031009^^
"BLD",4138,1,1,0)
This build transports the PARAMETER DEFINITIONS for Care Management 1.0.
"BLD",4138,4,0)
^9.64PA^^
"BLD",4138,"KRN",0)
^9.67PA^8989.52^19
"BLD",4138,"KRN",.4,0)
.4
"BLD",4138,"KRN",.401,0)
.401
"BLD",4138,"KRN",.402,0)
.402
"BLD",4138,"KRN",.403,0)
.403
"BLD",4138,"KRN",.5,0)
.5
"BLD",4138,"KRN",.84,0)
.84
"BLD",4138,"KRN",3.6,0)
3.6
"BLD",4138,"KRN",3.8,0)
3.8
"BLD",4138,"KRN",9.2,0)
9.2
"BLD",4138,"KRN",9.8,0)
9.8
"BLD",4138,"KRN",19,0)
19
"BLD",4138,"KRN",19.1,0)
19.1
"BLD",4138,"KRN",101,0)
101
"BLD",4138,"KRN",409.61,0)
409.61
"BLD",4138,"KRN",771,0)
771
"BLD",4138,"KRN",870,0)
870
"BLD",4138,"KRN",8989.51,0)
8989.51
"BLD",4138,"KRN",8989.51,"NM",0)
^9.68A^14^12
"BLD",4138,"KRN",8989.51,"NM",1,0)
ORRC ACTIVATION DATE^^0
"BLD",4138,"KRN",8989.51,"NM",2,0)
ORRC DASHBOARD PT SELECT LIST^^0
"BLD",4138,"KRN",8989.51,"NM",5,0)
ORRC NURSE EVENT DATE MAX^^0
"BLD",4138,"KRN",8989.51,"NM",6,0)
ORRC NURSE EVENT DATE MIN^^0
"BLD",4138,"KRN",8989.51,"NM",7,0)
ORRC NURSE RESULT DATE MAX^^0
"BLD",4138,"KRN",8989.51,"NM",8,0)
ORRC NURSE RESULT DATE MIN^^0
"BLD",4138,"KRN",8989.51,"NM",9,0)
ORRC NURSE TEXT ORDER DATE MAX^^0
"BLD",4138,"KRN",8989.51,"NM",10,0)
ORRC NURSE TEXT ORDER DATE MIN^^0
"BLD",4138,"KRN",8989.51,"NM",11,0)
ORRC NURSE UNVERIFIED DATE MAX^^0
"BLD",4138,"KRN",8989.51,"NM",12,0)
ORRC NURSE UNVERIFIED DATE MIN^^0
"BLD",4138,"KRN",8989.51,"NM",13,0)
ORRC NURSE VITALS DATE MAX^^0
"BLD",4138,"KRN",8989.51,"NM",14,0)
ORRC NURSE VITALS DATE MIN^^0
"BLD",4138,"KRN",8989.51,"NM","B","ORRC ACTIVATION DATE",1)

"BLD",4138,"KRN",8989.51,"NM","B","ORRC DASHBOARD PT SELECT LIST",2)

"BLD",4138,"KRN",8989.51,"NM","B","ORRC NURSE EVENT DATE MAX",5)

"BLD",4138,"KRN",8989.51,"NM","B","ORRC NURSE EVENT DATE MIN",6)

"BLD",4138,"KRN",8989.51,"NM","B","ORRC NURSE RESULT DATE MAX",7)

"BLD",4138,"KRN",8989.51,"NM","B","ORRC NURSE RESULT DATE MIN",8)

"BLD",4138,"KRN",8989.51,"NM","B","ORRC NURSE TEXT ORDER DATE MAX",9)

"BLD",4138,"KRN",8989.51,"NM","B","ORRC NURSE TEXT ORDER DATE MIN",10)

"BLD",4138,"KRN",8989.51,"NM","B","ORRC NURSE UNVERIFIED DATE MAX",11)

"BLD",4138,"KRN",8989.51,"NM","B","ORRC NURSE UNVERIFIED DATE MIN",12)

"BLD",4138,"KRN",8989.51,"NM","B","ORRC NURSE VITALS DATE MAX",13)

"BLD",4138,"KRN",8989.51,"NM","B","ORRC NURSE VITALS DATE MIN",14)

"BLD",4138,"KRN",8989.52,0)
8989.52
"BLD",4138,"KRN",8994,0)
8994
"BLD",4138,"KRN","B",.4,.4)

"BLD",4138,"KRN","B",.401,.401)

"BLD",4138,"KRN","B",.402,.402)

"BLD",4138,"KRN","B",.403,.403)

"BLD",4138,"KRN","B",.5,.5)

"BLD",4138,"KRN","B",.84,.84)

"BLD",4138,"KRN","B",3.6,3.6)

"BLD",4138,"KRN","B",3.8,3.8)

"BLD",4138,"KRN","B",9.2,9.2)

"BLD",4138,"KRN","B",9.8,9.8)

"BLD",4138,"KRN","B",19,19)

"BLD",4138,"KRN","B",19.1,19.1)

"BLD",4138,"KRN","B",101,101)

"BLD",4138,"KRN","B",409.61,409.61)

"BLD",4138,"KRN","B",771,771)

"BLD",4138,"KRN","B",870,870)

"BLD",4138,"KRN","B",8989.51,8989.51)

"BLD",4138,"KRN","B",8989.52,8989.52)

"BLD",4138,"KRN","B",8994,8994)

"BLD",4138,"QUES",0)
^9.62^^
"BLD",4138,"REQB",0)
^9.611^^
"KRN",8989.51,312,-1)
0^5
"KRN",8989.51,312,0)
ORRC NURSE EVENT DATE MAX^Events Max Date^0
"KRN",8989.51,312,1)
F^^Include events in Dashboard with dates as recent as this date.
"KRN",8989.51,312,20,0)
^8989.512^2^2^3030515^^^
"KRN",8989.51,312,20,1,0)
Events with dates as recent as this date will be added to the Dashboard.
"KRN",8989.51,312,20,2,0)
Events will be added with dates between MIN DATE and MAX DATE.
"KRN",8989.51,312,30,0)
^8989.513I^5^5
"KRN",8989.51,312,30,1,0)
1^200
"KRN",8989.51,312,30,2,0)
2^49
"KRN",8989.51,312,30,3,0)
3^4
"KRN",8989.51,312,30,4,0)
4^4.2
"KRN",8989.51,312,30,5,0)
5^9.4
"KRN",8989.51,313,-1)
0^6
"KRN",8989.51,313,0)
ORRC NURSE EVENT DATE MIN^Events Min Date^0
"KRN",8989.51,313,1)
F^^Include events in Dashboard with dates as early as this date.
"KRN",8989.51,313,20,0)
^^2^2^3030515^
"KRN",8989.51,313,20,1,0)
Events with dates as early as this date will be added to the Dashboard.
"KRN",8989.51,313,20,2,0)
Events will be added with dates between MIN DATE and MAX DATE.
"KRN",8989.51,313,30,0)
^8989.513I^5^5
"KRN",8989.51,313,30,1,0)
1^200
"KRN",8989.51,313,30,2,0)
2^49
"KRN",8989.51,313,30,3,0)
3^4
"KRN",8989.51,313,30,4,0)
4^4.2
"KRN",8989.51,313,30,5,0)
5^9.4
"KRN",8989.51,314,-1)
0^2
"KRN",8989.51,314,0)
ORRC DASHBOARD PT SELECT LIST^Patient Selection List^0^
"KRN",8989.51,314,1)
W^^This XML fragment describes the sources for the pt. selection list
"KRN",8989.51,314,4,0)
^8989.514^3^3
"KRN",8989.51,314,4,1,0)
DASHBOARD
"KRN",8989.51,314,4,2,0)
PATIENT
"KRN",8989.51,314,4,3,0)
SELECTION
"KRN",8989.51,314,4,"B","DASHBOARD",1)

"KRN",8989.51,314,4,"B","PATIENT",2)

"KRN",8989.51,314,4,"B","SELECTION",3)

"KRN",8989.51,314,6)
F^^
"KRN",8989.51,314,20,0)
^^2^2^3030827^
"KRN",8989.51,314,20,1,0)
This parameter allows the Dashboard to save lists of Patient Selection
"KRN",8989.51,314,20,2,0)
sources.
"KRN",8989.51,314,30,0)
^8989.513I^5^5
"KRN",8989.51,314,30,1,0)
1^200
"KRN",8989.51,314,30,2,0)
2^44
"KRN",8989.51,314,30,3,0)
3^49
"KRN",8989.51,314,30,4,0)
4^4
"KRN",8989.51,314,30,5,0)
5^4.2
"KRN",8989.51,316,-1)
0^7
"KRN",8989.51,316,0)
ORRC NURSE RESULT DATE MAX^Results Max Date^0
"KRN",8989.51,316,1)
F^^Include results in Dashboard with dates as recent as this date.
"KRN",8989.51,316,20,0)
^^2^2^3030515^
"KRN",8989.51,316,20,1,0)
Results with dates as recent as this date will be added to the Dashboard.
"KRN",8989.51,316,20,2,0)
Results will be added with dates between MIN DATE and MAX DATE.
"KRN",8989.51,316,30,0)
^8989.513I^5^5
"KRN",8989.51,316,30,1,0)
1^200
"KRN",8989.51,316,30,2,0)
2^49
"KRN",8989.51,316,30,3,0)
3^4
"KRN",8989.51,316,30,4,0)
4^4.2
"KRN",8989.51,316,30,5,0)
5^9.4
"KRN",8989.51,317,-1)
0^8
"KRN",8989.51,317,0)
ORRC NURSE RESULT DATE MIN^Results Min Date^0
"KRN",8989.51,317,1)
F^^Include results in Dashboard with dates as early as this date.
"KRN",8989.51,317,20,0)
^^2^2^3030515^
"KRN",8989.51,317,20,1,0)
Results with dates as early as this date will be added to the Dashboard.
"KRN",8989.51,317,20,2,0)
Results will be added with dates between MIN DATE and MAX DATE.
"KRN",8989.51,317,30,0)
^8989.513I^5^5
"KRN",8989.51,317,30,1,0)
1^200
"KRN",8989.51,317,30,2,0)
2^49
"KRN",8989.51,317,30,3,0)
3^4
"KRN",8989.51,317,30,4,0)
4^4.2
"KRN",8989.51,317,30,5,0)
5^9.4
"KRN",8989.51,318,-1)
0^11
"KRN",8989.51,318,0)
ORRC NURSE UNVERIFIED DATE MAX^Unverified Max Date^0
"KRN",8989.51,318,1)
F^^Include unverified orders in Dashboard with dates as recent as this date.
"KRN",8989.51,318,20,0)
^^2^2^3030516^
"KRN",8989.51,318,20,1,0)
Unverified orders with dates as recent as this date will be added to the
"KRN",8989.51,318,20,2,0)
Dashboard. Orders will be added with dates between MIN DATE and MAX DATE.
"KRN",8989.51,318,30,0)
^8989.513I^5^5
"KRN",8989.51,318,30,1,0)
1^200
"KRN",8989.51,318,30,2,0)
2^49
"KRN",8989.51,318,30,3,0)
3^4
"KRN",8989.51,318,30,4,0)
4^4.2
"KRN",8989.51,318,30,5,0)
5^9.4
"KRN",8989.51,319,-1)
0^12
"KRN",8989.51,319,0)
ORRC NURSE UNVERIFIED DATE MIN^Unverified Min Date^0
"KRN",8989.51,319,1)
F^^Include unverified orders in Dashboard with dates as early as this date.
"KRN",8989.51,319,20,0)
^^2^2^3030516^
"KRN",8989.51,319,20,1,0)
Unverified orders with dates as early as this date will be added to the
"KRN",8989.51,319,20,2,0)
Dashboard. Orders will be added with dates between MIN DATE and MAX DATE.
"KRN",8989.51,319,30,0)
^8989.513I^5^5
"KRN",8989.51,319,30,1,0)
1^200
"KRN",8989.51,319,30,2,0)
2^49
"KRN",8989.51,319,30,3,0)
3^4
"KRN",8989.51,319,30,4,0)
4^4.2
"KRN",8989.51,319,30,5,0)
5^9.4
"KRN",8989.51,320,-1)
0^9
"KRN",8989.51,320,0)
ORRC NURSE TEXT ORDER DATE MAX^Text Order Max Date^0
"KRN",8989.51,320,1)
F^^Include text orders in Dashboard with dates as recent as this date.
"KRN",8989.51,320,20,0)
^^2^2^3030516^
"KRN",8989.51,320,20,1,0)
Text orders with dates as recent as this date will be added to the
"KRN",8989.51,320,20,2,0)
Dashboard. Orders will be added with dates between MIN DATE and MAX DATE.
"KRN",8989.51,320,30,0)
^8989.513I^5^5
"KRN",8989.51,320,30,1,0)
1^200
"KRN",8989.51,320,30,2,0)
2^49
"KRN",8989.51,320,30,3,0)
3^4
"KRN",8989.51,320,30,4,0)
4^4.2
"KRN",8989.51,320,30,5,0)
5^9.4
"KRN",8989.51,321,-1)
0^10
"KRN",8989.51,321,0)
ORRC NURSE TEXT ORDER DATE MIN^Text Order Min Date^0
"KRN",8989.51,321,1)
F^^Include text orders in Dashboard with dates as early as this date.
"KRN",8989.51,321,20,0)
^^2^2^3030516^
"KRN",8989.51,321,20,1,0)
Text orders with dates as early as this date will be added to the
"KRN",8989.51,321,20,2,0)
Dashboard. Orders will be added with dates between MIN DATE and MAX DATE.
"KRN",8989.51,321,30,0)
^8989.513I^5^5
"KRN",8989.51,321,30,1,0)
1^200
"KRN",8989.51,321,30,2,0)
2^49
"KRN",8989.51,321,30,3,0)
3^4
"KRN",8989.51,321,30,4,0)
4^4.2
"KRN",8989.51,321,30,5,0)
5^9.4
"KRN",8989.51,322,-1)
0^13
"KRN",8989.51,322,0)
ORRC NURSE VITALS DATE MAX^Vitals Max Date^0
"KRN",8989.51,322,1)
F^^Include vitals in Dashboard with dates as recent as this date.
"KRN",8989.51,322,20,0)
^^2^2^3030516^
"KRN",8989.51,322,20,1,0)
Vitals with dates as recent as this date will be added to the Dashboard.
"KRN",8989.51,322,20,2,0)
Vitals will be added with dates between MIN DATE and MAX DATE.
"KRN",8989.51,322,30,0)
^8989.513I^5^5
"KRN",8989.51,322,30,1,0)
1^200
"KRN",8989.51,322,30,2,0)
2^49
"KRN",8989.51,322,30,3,0)
3^4
"KRN",8989.51,322,30,4,0)
4^4.2
"KRN",8989.51,322,30,5,0)
5^9.4
"KRN",8989.51,323,-1)
0^14
"KRN",8989.51,323,0)
ORRC NURSE VITALS DATE MIN^Vitals Min Date^0
"KRN",8989.51,323,1)
F^^Include vitals in Dashboard with dates as early as this date.
"KRN",8989.51,323,20,0)
^^2^2^3030516^
"KRN",8989.51,323,20,1,0)
Vitals with dates as early as this date will be added to the Dashboard.
"KRN",8989.51,323,20,2,0)
Vitals will be added with dates between MIN DATE and MAX DATE.
"KRN",8989.51,323,30,0)
^8989.513I^5^5
"KRN",8989.51,323,30,1,0)
1^200
"KRN",8989.51,323,30,2,0)
2^49
"KRN",8989.51,323,30,3,0)
3^4
"KRN",8989.51,323,30,4,0)
4^4.2
"KRN",8989.51,323,30,5,0)
5^9.4
"KRN",8989.51,324,-1)
0^1
"KRN",8989.51,324,0)
ORRC ACTIVATION DATE^Care Management Activation Date^^^ACTIVATION DATE
"KRN",8989.51,324,1)
D^::EX^Enter the date after which Care Management will be available.
"KRN",8989.51,324,20,0)
^8989.512^3^3^3030609^^^
"KRN",8989.51,324,20,1,0)
This is the date that users are expected to begin using the Care Management
"KRN",8989.51,324,20,2,0)
application; after this date, results data will be accumulated and tracked
"KRN",8989.51,324,20,3,0)
in the Order Acknowledgment file #102.4 for designated users.
"KRN",8989.51,324,30,0)
^8989.513I^5^5
"KRN",8989.51,324,30,1,0)
1^200
"KRN",8989.51,324,30,2,0)
5^49
"KRN",8989.51,324,30,3,0)
7^4
"KRN",8989.51,324,30,4,0)
8^4.2
"KRN",8989.51,324,30,5,0)
9^9.4
"MBREQ")
0
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.0
**INSTALL NAME**
ORRC 1.0
"BLD",4134,0)
ORRC 1.0^CARE MANAGEMENT^0^3040116^y
"BLD",4134,1,0)
^^4^4^3030709^
"BLD",4134,1,1,0)
This package contains the Care Management modules.  These modules include 
"BLD",4134,1,2,0)
the clinician dashboard, the nursing dashboard, the query tool, and the 
"BLD",4134,1,3,0)
task editor.  Options are used to grant access to the modules or 
"BLD",4134,1,4,0)
components within the modules.
"BLD",4134,4,0)
^9.64PA^102.21^4
"BLD",4134,4,102.21,0)
102.21
"BLD",4134,4,102.21,222)
n^n^f^^y^^y^r^n
"BLD",4134,4,102.21,224)
I $P(^(0),U)="RPT SCHEDULED/DUE ACTIVITY"
"BLD",4134,4,102.3,0)
102.3
"BLD",4134,4,102.3,222)
y^y^f^^^^n
"BLD",4134,4,102.4,0)
102.4
"BLD",4134,4,102.4,222)
y^y^f^^^^n
"BLD",4134,4,8935.91,0)
8935.91
"BLD",4134,4,8935.91,222)
y^n^f^^y^^y^r^n
"BLD",4134,4,8935.91,224)
I $E(^(0),1,5)="ORRC "
"BLD",4134,4,"B",102.21,102.21)

"BLD",4134,4,"B",102.3,102.3)

"BLD",4134,4,"B",102.4,102.4)

"BLD",4134,4,"B",8935.91,8935.91)

"BLD",4134,"ABNS",0)
^9.66A^1^1
"BLD",4134,"ABNS",1,0)
ORRC
"BLD",4134,"ABNS",1,1,0)
^9.661A^^
"BLD",4134,"ABNS","B","ORRC",1)

"BLD",4134,"ABPKG")
n^y^G.CPRS REENGINEERING@FO-SLC.MED.VA.GOV
"BLD",4134,"INI")
ORRCYPRE
"BLD",4134,"INID")
^y^y
"BLD",4134,"INIT")
ORRCYP
"BLD",4134,"KRN",0)
^9.67PA^8989.52^19
"BLD",4134,"KRN",.4,0)
.4
"BLD",4134,"KRN",.401,0)
.401
"BLD",4134,"KRN",.402,0)
.402
"BLD",4134,"KRN",.403,0)
.403
"BLD",4134,"KRN",.5,0)
.5
"BLD",4134,"KRN",.84,0)
.84
"BLD",4134,"KRN",3.6,0)
3.6
"BLD",4134,"KRN",3.8,0)
3.8
"BLD",4134,"KRN",9.2,0)
9.2
"BLD",4134,"KRN",9.8,0)
9.8
"BLD",4134,"KRN",9.8,"NM",0)
^9.68A^20^16
"BLD",4134,"KRN",9.8,"NM",1,0)
ORRCYP01^^0^B1869759
"BLD",4134,"KRN",9.8,"NM",2,0)
ORRCACK^^0^B69951493
"BLD",4134,"KRN",9.8,"NM",5,0)
ORRCDPT1^^0^B22049351
"BLD",4134,"KRN",9.8,"NM",6,0)
ORRCEVT^^0^B45814618
"BLD",4134,"KRN",9.8,"NM",7,0)
ORRCLNP^^0^B525065
"BLD",4134,"KRN",9.8,"NM",8,0)
ORRCLPT^^0^B266293
"BLD",4134,"KRN",9.8,"NM",10,0)
ORRCOR^^0^B42048781
"BLD",4134,"KRN",9.8,"NM",11,0)
ORRCQLPT^^0^B1006284
"BLD",4134,"KRN",9.8,"NM",12,0)
ORRCSIG^^0^B11096954
"BLD",4134,"KRN",9.8,"NM",13,0)
ORRCTIU^^0^B23646519
"BLD",4134,"KRN",9.8,"NM",14,0)
ORRCTSK^^0^B44307761
"BLD",4134,"KRN",9.8,"NM",16,0)
ORRCVIT^^0^B17118495
"BLD",4134,"KRN",9.8,"NM",17,0)
ORRCXQ^^0^B20320443
"BLD",4134,"KRN",9.8,"NM",18,0)
ORRCYP^^0^B792380
"BLD",4134,"KRN",9.8,"NM",19,0)
ORRCDPT^^0^B26430839
"BLD",4134,"KRN",9.8,"NM",20,0)
ORRCYPRE^^0^B652707
"BLD",4134,"KRN",9.8,"NM","B","ORRCACK",2)

"BLD",4134,"KRN",9.8,"NM","B","ORRCDPT",19)

"BLD",4134,"KRN",9.8,"NM","B","ORRCDPT1",5)

"BLD",4134,"KRN",9.8,"NM","B","ORRCEVT",6)

"BLD",4134,"KRN",9.8,"NM","B","ORRCLNP",7)

"BLD",4134,"KRN",9.8,"NM","B","ORRCLPT",8)

"BLD",4134,"KRN",9.8,"NM","B","ORRCOR",10)

"BLD",4134,"KRN",9.8,"NM","B","ORRCQLPT",11)

"BLD",4134,"KRN",9.8,"NM","B","ORRCSIG",12)

"BLD",4134,"KRN",9.8,"NM","B","ORRCTIU",13)

"BLD",4134,"KRN",9.8,"NM","B","ORRCTSK",14)

"BLD",4134,"KRN",9.8,"NM","B","ORRCVIT",16)

"BLD",4134,"KRN",9.8,"NM","B","ORRCXQ",17)

"BLD",4134,"KRN",9.8,"NM","B","ORRCYP",18)

"BLD",4134,"KRN",9.8,"NM","B","ORRCYP01",1)

"BLD",4134,"KRN",9.8,"NM","B","ORRCYPRE",20)

"BLD",4134,"KRN",19,0)
19
"BLD",4134,"KRN",19,"NM",0)
^9.68A^22^18
"BLD",4134,"KRN",19,"NM",3,0)
ORRCMC DASHBOARD^^0
"BLD",4134,"KRN",19,"NM",4,0)
ORRCMC PATIENT TASK^^0
"BLD",4134,"KRN",19,"NM",5,0)
ORRCMC QUERY TOOL^^0
"BLD",4134,"KRN",19,"NM",6,0)
ORRCMC SIGN LIST^^0
"BLD",4134,"KRN",19,"NM",7,0)
ORRCMM CLINICIAN^^0
"BLD",4134,"KRN",19,"NM",8,0)
ORRCMM CLINICIAN QUERY^^0
"BLD",4134,"KRN",19,"NM",10,0)
ORRCMM NURSE QUERY^^0
"BLD",4134,"KRN",19,"NM",11,0)
ORRCMM NURSING^^0
"BLD",4134,"KRN",19,"NM",12,0)
ORRCMM TROUBLESHOOTER CLIN^^0
"BLD",4134,"KRN",19,"NM",13,0)
ORRCMP DASH CLINICIAN^^0
"BLD",4134,"KRN",19,"NM",14,0)
ORRCMP DASH NURSING^^0
"BLD",4134,"KRN",19,"NM",15,0)
ORRCMP QUERY TOOL^^0
"BLD",4134,"KRN",19,"NM",16,0)
ORRCMP RPC LOGGER^^0
"BLD",4134,"KRN",19,"NM",17,0)
ORRCMP SIGN LIST^^0
"BLD",4134,"KRN",19,"NM",19,0)
ORRCMC GENERAL^^0
"BLD",4134,"KRN",19,"NM",20,0)
XHDXC DESKTOP^^4^
"BLD",4134,"KRN",19,"NM",21,0)
ORRCM CLIENT^^0
"BLD",4134,"KRN",19,"NM",22,0)
ORRCMM TROUBLESHOOTER NURS^^0
"BLD",4134,"KRN",19,"NM","B","ORRCM CLIENT",21)

"BLD",4134,"KRN",19,"NM","B","ORRCMC DASHBOARD",3)

"BLD",4134,"KRN",19,"NM","B","ORRCMC GENERAL",19)

"BLD",4134,"KRN",19,"NM","B","ORRCMC PATIENT TASK",4)

"BLD",4134,"KRN",19,"NM","B","ORRCMC QUERY TOOL",5)

"BLD",4134,"KRN",19,"NM","B","ORRCMC SIGN LIST",6)

"BLD",4134,"KRN",19,"NM","B","ORRCMM CLINICIAN",7)

"BLD",4134,"KRN",19,"NM","B","ORRCMM CLINICIAN QUERY",8)

"BLD",4134,"KRN",19,"NM","B","ORRCMM NURSE QUERY",10)

"BLD",4134,"KRN",19,"NM","B","ORRCMM NURSING",11)

"BLD",4134,"KRN",19,"NM","B","ORRCMM TROUBLESHOOTER CLIN",12)

"BLD",4134,"KRN",19,"NM","B","ORRCMM TROUBLESHOOTER NURS",22)

"BLD",4134,"KRN",19,"NM","B","ORRCMP DASH CLINICIAN",13)

"BLD",4134,"KRN",19,"NM","B","ORRCMP DASH NURSING",14)

"BLD",4134,"KRN",19,"NM","B","ORRCMP QUERY TOOL",15)

"BLD",4134,"KRN",19,"NM","B","ORRCMP RPC LOGGER",16)

"BLD",4134,"KRN",19,"NM","B","ORRCMP SIGN LIST",17)

"BLD",4134,"KRN",19,"NM","B","XHDXC DESKTOP",20)

"BLD",4134,"KRN",19.1,0)
19.1
"BLD",4134,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",4134,"KRN",19.1,"NM",1,0)
ORRC QUERY RESULT EXPORT^^0
"BLD",4134,"KRN",19.1,"NM","B","ORRC QUERY RESULT EXPORT",1)

"BLD",4134,"KRN",101,0)
101
"BLD",4134,"KRN",409.61,0)
409.61
"BLD",4134,"KRN",771,0)
771
"BLD",4134,"KRN",870,0)
870
"BLD",4134,"KRN",8989.51,0)
8989.51
"BLD",4134,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",4134,"KRN",8989.52,0)
8989.52
"BLD",4134,"KRN",8994,0)
8994
"BLD",4134,"KRN",8994,"NM",0)
^9.68A^33^30
"BLD",4134,"KRN",8994,"NM",1,0)
ORRC ALERTS BY PATIENT^^0
"BLD",4134,"KRN",8994,"NM",2,0)
ORRC APPTS BY PATIENT^^0
"BLD",4134,"KRN",8994,"NM",4,0)
ORRC DASHBOARD PATIENTS^^0
"BLD",4134,"KRN",8994,"NM",5,0)
ORRC EVENTS ACKNOWLEDGE^^0
"BLD",4134,"KRN",8994,"NM",6,0)
ORRC EVENTS BY ID^^0
"BLD",4134,"KRN",8994,"NM",7,0)
ORRC EVENTS BY PATIENT^^0
"BLD",4134,"KRN",8994,"NM",8,0)
ORRC NURS DASHBD PATIENTS^^0
"BLD",4134,"KRN",8994,"NM",9,0)
ORRC ORDERS BY ID^^0
"BLD",4134,"KRN",8994,"NM",10,0)
ORRC ORDERS BY PATIENT^^0
"BLD",4134,"KRN",8994,"NM",11,0)
ORRC ORDERS COMPLETE^^0
"BLD",4134,"KRN",8994,"NM",12,0)
ORRC ORDERS VERIFY^^0
"BLD",4134,"KRN",8994,"NM",13,0)
ORRC PHY DASHBD PATIENTS^^0
"BLD",4134,"KRN",8994,"NM",14,0)
ORRC RESULTS ACKNOWLEDGE^^0
"BLD",4134,"KRN",8994,"NM",15,0)
ORRC RESULTS BY DATE^^0
"BLD",4134,"KRN",8994,"NM",16,0)
ORRC RESULTS BY ID^^0
"BLD",4134,"KRN",8994,"NM",17,0)
ORRC RESULTS BY PATIENT^^0
"BLD",4134,"KRN",8994,"NM",18,0)
ORRC SIGN^^0
"BLD",4134,"KRN",8994,"NM",19,0)
ORRC TASK ADD^^0
"BLD",4134,"KRN",8994,"NM",20,0)
ORRC TASK CANCEL^^0
"BLD",4134,"KRN",8994,"NM",21,0)
ORRC TASK COMPLETE^^0
"BLD",4134,"KRN",8994,"NM",22,0)
ORRC TASK EDIT^^0
"BLD",4134,"KRN",8994,"NM",23,0)
ORRC TASK SUBJECTS BY PT^^0
"BLD",4134,"KRN",8994,"NM",24,0)
ORRC TASKS BY ID^^0
"BLD",4134,"KRN",8994,"NM",25,0)
ORRC TASKS BY PATIENT^^0
"BLD",4134,"KRN",8994,"NM",26,0)
ORRC TASKS DUE BY PATIENT^^0
"BLD",4134,"KRN",8994,"NM",28,0)
ORRC UNSIGNED BY ID^^0
"BLD",4134,"KRN",8994,"NM",29,0)
ORRC VITALS BY ID^^0
"BLD",4134,"KRN",8994,"NM",30,0)
ORRC VITALS BY PATIENT^^0
"BLD",4134,"KRN",8994,"NM",32,0)
ORRCQLPT PTDEMOS^^0
"BLD",4134,"KRN",8994,"NM",33,0)
ORRCQLPT PTDFN^^0
"BLD",4134,"KRN",8994,"NM","B","ORRC ALERTS BY PATIENT",1)

"BLD",4134,"KRN",8994,"NM","B","ORRC APPTS BY PATIENT",2)

"BLD",4134,"KRN",8994,"NM","B","ORRC DASHBOARD PATIENTS",4)

"BLD",4134,"KRN",8994,"NM","B","ORRC EVENTS ACKNOWLEDGE",5)

"BLD",4134,"KRN",8994,"NM","B","ORRC EVENTS BY ID",6)

"BLD",4134,"KRN",8994,"NM","B","ORRC EVENTS BY PATIENT",7)

"BLD",4134,"KRN",8994,"NM","B","ORRC NURS DASHBD PATIENTS",8)

"BLD",4134,"KRN",8994,"NM","B","ORRC ORDERS BY ID",9)

"BLD",4134,"KRN",8994,"NM","B","ORRC ORDERS BY PATIENT",10)

"BLD",4134,"KRN",8994,"NM","B","ORRC ORDERS COMPLETE",11)

"BLD",4134,"KRN",8994,"NM","B","ORRC ORDERS VERIFY",12)

"BLD",4134,"KRN",8994,"NM","B","ORRC PHY DASHBD PATIENTS",13)

"BLD",4134,"KRN",8994,"NM","B","ORRC RESULTS ACKNOWLEDGE",14)

"BLD",4134,"KRN",8994,"NM","B","ORRC RESULTS BY DATE",15)

"BLD",4134,"KRN",8994,"NM","B","ORRC RESULTS BY ID",16)

"BLD",4134,"KRN",8994,"NM","B","ORRC RESULTS BY PATIENT",17)

"BLD",4134,"KRN",8994,"NM","B","ORRC SIGN",18)

"BLD",4134,"KRN",8994,"NM","B","ORRC TASK ADD",19)

"BLD",4134,"KRN",8994,"NM","B","ORRC TASK CANCEL",20)

"BLD",4134,"KRN",8994,"NM","B","ORRC TASK COMPLETE",21)

"BLD",4134,"KRN",8994,"NM","B","ORRC TASK EDIT",22)

"BLD",4134,"KRN",8994,"NM","B","ORRC TASK SUBJECTS BY PT",23)

"BLD",4134,"KRN",8994,"NM","B","ORRC TASKS BY ID",24)

"BLD",4134,"KRN",8994,"NM","B","ORRC TASKS BY PATIENT",25)

"BLD",4134,"KRN",8994,"NM","B","ORRC TASKS DUE BY PATIENT",26)

"BLD",4134,"KRN",8994,"NM","B","ORRC UNSIGNED BY ID",28)

"BLD",4134,"KRN",8994,"NM","B","ORRC VITALS BY ID",29)

"BLD",4134,"KRN",8994,"NM","B","ORRC VITALS BY PATIENT",30)

"BLD",4134,"KRN",8994,"NM","B","ORRCQLPT PTDEMOS",32)

"BLD",4134,"KRN",8994,"NM","B","ORRCQLPT PTDFN",33)

"BLD",4134,"KRN","B",.4,.4)

"BLD",4134,"KRN","B",.401,.401)

"BLD",4134,"KRN","B",.402,.402)

"BLD",4134,"KRN","B",.403,.403)

"BLD",4134,"KRN","B",.5,.5)

"BLD",4134,"KRN","B",.84,.84)

"BLD",4134,"KRN","B",3.6,3.6)

"BLD",4134,"KRN","B",3.8,3.8)

"BLD",4134,"KRN","B",9.2,9.2)

"BLD",4134,"KRN","B",9.8,9.8)

"BLD",4134,"KRN","B",19,19)

"BLD",4134,"KRN","B",19.1,19.1)

"BLD",4134,"KRN","B",101,101)

"BLD",4134,"KRN","B",409.61,409.61)

"BLD",4134,"KRN","B",771,771)

"BLD",4134,"KRN","B",870,870)

"BLD",4134,"KRN","B",8989.51,8989.51)

"BLD",4134,"KRN","B",8989.52,8989.52)

"BLD",4134,"KRN","B",8994,8994)

"BLD",4134,"QUES",0)
^9.62^^
"BLD",4134,"REQB",0)
^9.611^2^2
"BLD",4134,"REQB",1,0)
XHD 1.0^2
"BLD",4134,"REQB",2,0)
OR*3.0*174^2
"BLD",4134,"REQB","B","OR*3.0*174",2)

"BLD",4134,"REQB","B","XHD 1.0",1)

"DATA",102.21,77,0)
RPT SCHEDULED/DUE ACTIVITY^Scheduled/Due Activity^^R
"DATA",102.21,77,1,0)
^102.211A^12^12
"DATA",102.21,77,1,1,0)
1^12^^Patient Lists for Search:
"DATA",102.21,77,1,2,0)
2^12^1^< select patient list >
"DATA",102.21,77,1,3,0)
3^65^^Searching Reports
"DATA",102.21,77,1,4,0)
4^65^48^from 14 May 2002 through 14 Nov 2002
"DATA",102.21,77,1,4,1,0)
^102.2111^1^1
"DATA",102.21,77,1,4,1,1,0)
T-183:T+1
"DATA",102.21,77,1,5,0)
5^15^24^Find Orders
"DATA",102.21,77,1,5,1,0)
^102.2111^1^1
"DATA",102.21,77,1,5,1,1,0)
1
"DATA",102.21,77,1,6,0)
6^5^^where the service category (display group) is
"DATA",102.21,77,1,7,0)
7^5^5^IMAGING
"DATA",102.21,77,1,7,1,0)
^102.2111^1^1
"DATA",102.21,77,1,7,1,1,0)
13
"DATA",102.21,77,1,8,0)
8^11^^where the order status is
"DATA",102.21,77,1,9,0)
9^11^7^PENDING
"DATA",102.21,77,1,9,1,0)
^102.2111^1^1
"DATA",102.21,77,1,9,1,1,0)
5
"DATA",102.21,77,1,10,0)
10^46^26^Find Consults
"DATA",102.21,77,1,10,1,0)
^102.2111^1^1
"DATA",102.21,77,1,10,1,1,0)
1
"DATA",102.21,77,1,11,0)
11^57^^where the consult status is
"DATA",102.21,77,1,12,0)
12^57^45^ACTIVE or PENDING or SCHEDULED
"DATA",102.21,77,1,12,1,0)
^102.2111^3^3
"DATA",102.21,77,1,12,1,1,0)
5
"DATA",102.21,77,1,12,1,2,0)
8
"DATA",102.21,77,1,12,1,3,0)
6
"DATA",102.21,77,2,0)
^102.212^5^5
"DATA",102.21,77,2,1,0)
0^1^107
"DATA",102.21,77,2,2,0)
1^5^80
"DATA",102.21,77,2,3,0)
2^6^76
"DATA",102.21,77,2,4,0)
3^7^318
"DATA",102.21,77,2,5,0)
4^8^42
"DATA",8935.91,5,0)
ORRC CLINICIAN DASHBOARD PARAMETERS^gov.va.med.hds.dashboard.clinician^Clinician Dashboard^^1^1
"DATA",8935.91,5,1)
clinicianDashboardPreferencePage
"DATA",8935.91,5,2,0)
^8935.912^1^1
"DATA",8935.91,5,2,1,0)
Care Management Activation Date^324
"DATA",8935.91,6,0)
ORRC NURSE DASHBOARD PARAMETERS^gov.va.med.hds.dashboard.nurse^Nurse Dashboard^^1^1
"DATA",8935.91,6,1)
nurseDashboardDatesPreferencePage
"DATA",8935.91,6,2,0)
^8935.912^17^11
"DATA",8935.91,6,2,5,0)
Patient Selection List^314
"DATA",8935.91,6,2,8,0)
Events Max Date^312
"DATA",8935.91,6,2,9,0)
Events Min Date^313
"DATA",8935.91,6,2,10,0)
Results Max Date^316
"DATA",8935.91,6,2,11,0)
Unverified Max Date^318
"DATA",8935.91,6,2,12,0)
Results Min Date^317
"DATA",8935.91,6,2,13,0)
Unverified Min Date^319
"DATA",8935.91,6,2,14,0)
Text Order Max Date^320
"DATA",8935.91,6,2,15,0)
Text Order Min Date^321
"DATA",8935.91,6,2,16,0)
Vitals Max Date^322
"DATA",8935.91,6,2,17,0)
Vitals Min Date^323
"DATA",8935.91,7,0)
ORRC NURSE DASHBOARD TIMES^^Date Ranges^^0^0
"DATA",8935.91,7,2,0)
^8935.912^14^10
"DATA",8935.91,7,2,3,0)
Events Max Date^312
"DATA",8935.91,7,2,4,0)
Events Min Date^313
"DATA",8935.91,7,2,5,0)
Results Max Date^316
"DATA",8935.91,7,2,6,0)
Results Min Date^317
"DATA",8935.91,7,2,7,0)
Unverified Max Date^318
"DATA",8935.91,7,2,8,0)
Unverified Min Date^319
"DATA",8935.91,7,2,9,0)
Text Order Max Date^320
"DATA",8935.91,7,2,10,0)
Text Order Min Date^321
"DATA",8935.91,7,2,13,0)
Vitals Max Date^322
"DATA",8935.91,7,2,14,0)
Vitals Min Date^323
"FIA",102.21)
CPRS QUERY DEFINITION
"FIA",102.21,0)
^ORD(102.21,
"FIA",102.21,0,0)
102.21
"FIA",102.21,0,1)
n^n^f^^y^^y^r^n
"FIA",102.21,0,10)

"FIA",102.21,0,11)
I $P(^(0),U)="RPT SCHEDULED/DUE ACTIVITY"
"FIA",102.21,0,"RLRO")

"FIA",102.21,0,"VR")
1.0^ORRC
"FIA",102.21,102.21)
0
"FIA",102.21,102.211)
0
"FIA",102.21,102.2111)
0
"FIA",102.21,102.212)
0
"FIA",102.3)
PATIENT TASK
"FIA",102.3,0)
^ORRT(102.3,
"FIA",102.3,0,0)
102.3D
"FIA",102.3,0,1)
y^y^f^^^^n
"FIA",102.3,0,10)

"FIA",102.3,0,11)

"FIA",102.3,0,"RLRO")

"FIA",102.3,0,"VR")
1.0^ORRC
"FIA",102.3,102.3)
0
"FIA",102.3,102.31)
0
"FIA",102.4)
ORDER ACKNOWLEDGEMENT
"FIA",102.4,0)
^ORA(102.4,
"FIA",102.4,0,0)
102.4P
"FIA",102.4,0,1)
y^y^f^^^^n
"FIA",102.4,0,10)

"FIA",102.4,0,11)

"FIA",102.4,0,"RLRO")

"FIA",102.4,0,"VR")
1.0^ORRC
"FIA",102.4,102.4)
0
"FIA",8935.91)
XHD PARAMETER CATEGORY
"FIA",8935.91,0)
^XHD(8935.91,
"FIA",8935.91,0,0)
8935.91
"FIA",8935.91,0,1)
y^n^f^^y^^y^r^n
"FIA",8935.91,0,10)

"FIA",8935.91,0,11)
I $E(^(0),1,5)="ORRC "
"FIA",8935.91,0,"RLRO")

"FIA",8935.91,0,"VR")
1.0^ORRC
"FIA",8935.91,8935.91)
0
"FIA",8935.91,8935.912)
0
"FIA",8935.91,8935.913)
0
"FRV1",102.21,"77,1,1,0",2)
CTP PATIENT LIST
"FRV1",102.21,"77,1,1,0",2,"F")
;ORD(102.21,
"FRV1",102.21,"77,1,10,0",2)
CTP CONSULT
"FRV1",102.21,"77,1,10,0",2,"F")
;ORD(102.21,
"FRV1",102.21,"77,1,10,0",3)
Consult.Search
"FRV1",102.21,"77,1,10,0",3,"F")
;ORD(102.22,
"FRV1",102.21,"77,1,11,0",2)
CTN CONSULT STATUS
"FRV1",102.21,"77,1,11,0",2,"F")
;ORD(102.21,
"FRV1",102.21,"77,1,12,0",2)
CTN CONSULT STATUS
"FRV1",102.21,"77,1,12,0",2,"F")
;ORD(102.21,
"FRV1",102.21,"77,1,12,0",3)
Consult.Status
"FRV1",102.21,"77,1,12,0",3,"F")
;ORD(102.22,
"FRV1",102.21,"77,1,2,0",2)
CTP PATIENT LIST
"FRV1",102.21,"77,1,2,0",2,"F")
;ORD(102.21,
"FRV1",102.21,"77,1,2,0",3)
Patient.ListSource
"FRV1",102.21,"77,1,2,0",3,"F")
;ORD(102.22,
"FRV1",102.21,"77,1,3,0",2)
CTP SEARCH DATE RANGE
"FRV1",102.21,"77,1,3,0",2,"F")
;ORD(102.21,
"FRV1",102.21,"77,1,4,0",2)
CTP SEARCH DATE RANGE
"FRV1",102.21,"77,1,4,0",2,"F")
;ORD(102.21,
"FRV1",102.21,"77,1,4,0",3)
Search.DateRange
"FRV1",102.21,"77,1,4,0",3,"F")
;ORD(102.22,
"FRV1",102.21,"77,1,5,0",2)
CTP ORDER
"FRV1",102.21,"77,1,5,0",2,"F")
;ORD(102.21,
"FRV1",102.21,"77,1,5,0",3)
Order.Search
"FRV1",102.21,"77,1,5,0",3,"F")
;ORD(102.22,
"FRV1",102.21,"77,1,6,0",2)
CTN ORDER DISPLAY GROUP
"FRV1",102.21,"77,1,6,0",2,"F")
;ORD(102.21,
"FRV1",102.21,"77,1,7,0",2)
CTN ORDER DISPLAY GROUP
"FRV1",102.21,"77,1,7,0",2,"F")
;ORD(102.21,
"FRV1",102.21,"77,1,7,0",3)
Order.DisplayGroup
"FRV1",102.21,"77,1,7,0",3,"F")
;ORD(102.22,
"FRV1",102.21,"77,1,8,0",2)
CTN ORDER STATUS
"FRV1",102.21,"77,1,8,0",2,"F")
;ORD(102.21,
"FRV1",102.21,"77,1,9,0",2)
CTN ORDER STATUS
"FRV1",102.21,"77,1,9,0",2,"F")
;ORD(102.21,
"FRV1",102.21,"77,1,9,0",3)
Order.Status
"FRV1",102.21,"77,1,9,0",3,"F")
;ORD(102.22,
"FRV1",102.21,"77,2,1,0",2)
Patient.Name
"FRV1",102.21,"77,2,1,0",2,"F")
;ORD(102.24,
"FRV1",102.21,"77,2,2,0",2)
Order.Datetime
"FRV1",102.21,"77,2,2,0",2,"F")
;ORD(102.24,
"FRV1",102.21,"77,2,3,0",2)
Order.Provider
"FRV1",102.21,"77,2,3,0",2,"F")
;ORD(102.24,
"FRV1",102.21,"77,2,4,0",2)
Order.Text
"FRV1",102.21,"77,2,4,0",2,"F")
;ORD(102.24,
"FRV1",102.21,"77,2,5,0",2)
Order.Status
"FRV1",102.21,"77,2,5,0",2,"F")
;ORD(102.24,
"FRV1",8935.91,"5,2,1,0",2)
ORRC ACTIVATION DATE
"FRV1",8935.91,"5,2,1,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"6,2,10,0",2)
ORRC NURSE RESULT DATE MAX
"FRV1",8935.91,"6,2,10,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"6,2,11,0",2)
ORRC NURSE UNVERIFIED DATE MAX
"FRV1",8935.91,"6,2,11,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"6,2,12,0",2)
ORRC NURSE RESULT DATE MIN
"FRV1",8935.91,"6,2,12,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"6,2,13,0",2)
ORRC NURSE UNVERIFIED DATE MIN
"FRV1",8935.91,"6,2,13,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"6,2,14,0",2)
ORRC NURSE TEXT ORDER DATE MAX
"FRV1",8935.91,"6,2,14,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"6,2,15,0",2)
ORRC NURSE TEXT ORDER DATE MIN
"FRV1",8935.91,"6,2,15,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"6,2,16,0",2)
ORRC NURSE VITALS DATE MAX
"FRV1",8935.91,"6,2,16,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"6,2,17,0",2)
ORRC NURSE VITALS DATE MIN
"FRV1",8935.91,"6,2,17,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"6,2,5,0",2)
ORRC DASHBOARD PT SELECT LIST
"FRV1",8935.91,"6,2,5,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"6,2,8,0",2)
ORRC NURSE EVENT DATE MAX
"FRV1",8935.91,"6,2,8,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"6,2,9,0",2)
ORRC NURSE EVENT DATE MIN
"FRV1",8935.91,"6,2,9,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"7,2,10,0",2)
ORRC NURSE TEXT ORDER DATE MIN
"FRV1",8935.91,"7,2,10,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"7,2,13,0",2)
ORRC NURSE VITALS DATE MAX
"FRV1",8935.91,"7,2,13,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"7,2,14,0",2)
ORRC NURSE VITALS DATE MIN
"FRV1",8935.91,"7,2,14,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"7,2,3,0",2)
ORRC NURSE EVENT DATE MAX
"FRV1",8935.91,"7,2,3,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"7,2,4,0",2)
ORRC NURSE EVENT DATE MIN
"FRV1",8935.91,"7,2,4,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"7,2,5,0",2)
ORRC NURSE RESULT DATE MAX
"FRV1",8935.91,"7,2,5,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"7,2,6,0",2)
ORRC NURSE RESULT DATE MIN
"FRV1",8935.91,"7,2,6,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"7,2,7,0",2)
ORRC NURSE UNVERIFIED DATE MAX
"FRV1",8935.91,"7,2,7,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"7,2,8,0",2)
ORRC NURSE UNVERIFIED DATE MIN
"FRV1",8935.91,"7,2,8,0",2,"F")
;XTV(8989.51,
"FRV1",8935.91,"7,2,9,0",2)
ORRC NURSE TEXT ORDER DATE MAX
"FRV1",8935.91,"7,2,9,0",2,"F")
;XTV(8989.51,
"INI")
ORRCYPRE
"INIT")
ORRCYP
"IX",102.21,102.211,"AC",0)
102.211^AC^TEST^MU^^F^IR^I^102.211^^^^^A
"IX",102.21,102.211,"AC",1)
Q
"IX",102.21,102.211,"AC",2)
Q
"IX",102.21,102.211,"AC",11.1,0)
^.114IA^1^1
"IX",102.21,102.211,"AC",11.1,1,0)
1^F^102.211^.01^30^^F
"IX",102.3,102.3,"DUE",0)
102.3^DUE^Retrieve tasks that have not been completed^R^^R^IR^I^102.3^^^^^LS
"IX",102.3,102.3,"DUE",1)
S ^ORRT(102.3,"DUE",X(1),DA)=""
"IX",102.3,102.3,"DUE",1.4)
S X=$S(X(2):0,X(3):0,1:1)
"IX",102.3,102.3,"DUE",2)
K ^ORRT(102.3,"DUE",X(1),DA)
"IX",102.3,102.3,"DUE",2.4)
S X=$S(X(2):0,X(3):0,1:1)
"IX",102.3,102.3,"DUE",2.5)
K ^ORRT(102.3,"DUE")
"IX",102.3,102.3,"DUE",11.1,0)
^.114IA^3^3
"IX",102.3,102.3,"DUE",11.1,1,0)
1^F^102.3^3^^1^F
"IX",102.3,102.3,"DUE",11.1,1,3)

"IX",102.3,102.3,"DUE",11.1,2,0)
2^F^102.3^6^^^F
"IX",102.3,102.3,"DUE",11.1,2,3)

"IX",102.3,102.3,"DUE",11.1,3,0)
3^F^102.3^8^^^F
"IX",102.3,102.3,"DUE",11.1,3,3)

"IX",102.4,102.4,"ACK",0)
102.4^ACK^Retrieve orders whose results have not been acknowledged^R^^R^IR^I^102.4^^^^^S
"IX",102.4,102.4,"ACK",1)
S ^ORA(102.4,"ACK",X(1),X(2),DA)=""
"IX",102.4,102.4,"ACK",1.4)
S X=$S(X(3):0,1:1)
"IX",102.4,102.4,"ACK",2)
K ^ORA(102.4,"ACK",X(1),X(2),DA)
"IX",102.4,102.4,"ACK",2.4)
S X=$S(X(3):0,1:1)
"IX",102.4,102.4,"ACK",2.5)
K ^ORA(102.4,"ACK")
"IX",102.4,102.4,"ACK",11.1,0)
^.114IA^3^3
"IX",102.4,102.4,"ACK",11.1,1,0)
1^F^102.4^2^^1^F
"IX",102.4,102.4,"ACK",11.1,1,3)

"IX",102.4,102.4,"ACK",11.1,2,0)
2^F^102.4^.01^^2^F
"IX",102.4,102.4,"ACK",11.1,2,3)

"IX",102.4,102.4,"ACK",11.1,3,0)
3^F^102.4^3^^^F
"IX",102.4,102.4,"ACK",11.1,3,3)

"IX",8935.91,8935.91,"AMROOT",0)
8935.91^AMROOT^Cross-reference of root categories^MU^^R^IR^I^8935.91^^^^^S
"IX",8935.91,8935.91,"AMROOT",1)
S ^XHD(8935.91,"AMROOT",$E(X(1),1,60),DA)=""
"IX",8935.91,8935.91,"AMROOT",1.4)
S:+X(2) X=1
"IX",8935.91,8935.91,"AMROOT",2)
K ^XHD(8935.91,"AMROOT",$E(X(1),1,60),DA)
"IX",8935.91,8935.91,"AMROOT",2.5)
K ^XHD(8935.91,"AMROOT")
"IX",8935.91,8935.91,"AMROOT",11.1,0)
^.114IA^2^2
"IX",8935.91,8935.91,"AMROOT",11.1,1,0)
1^F^8935.91^.02^60^1^F
"IX",8935.91,8935.91,"AMROOT",11.1,1,3)

"IX",8935.91,8935.91,"AMROOT",11.1,2,0)
2^F^8935.91^.05^^2^F
"IX",8935.91,8935.91,"AMROOT",11.1,2,3)

"KRN",19,8933,-1)
0^21
"KRN",19,8933,0)
ORRCM CLIENT^Care Management Client Context^^M^^^^^^^^
"KRN",19,8933,1,0)
^19.06^1^1^3030530^^^^
"KRN",19,8933,1,1,0)
This is the log-in context for Care Management.
"KRN",19,8933,10,0)
^19.01IP^6^6
"KRN",19,8933,10,1,0)
8944
"KRN",19,8933,10,1,"^")
XHDXC DESKTOP
"KRN",19,8933,10,2,0)
8946
"KRN",19,8933,10,2,"^")
ORRCMC DASHBOARD
"KRN",19,8933,10,3,0)
8947
"KRN",19,8933,10,3,"^")
ORRCMC PATIENT TASK
"KRN",19,8933,10,4,0)
8945
"KRN",19,8933,10,4,"^")
ORRCMC QUERY TOOL
"KRN",19,8933,10,5,0)
8948
"KRN",19,8933,10,5,"^")
ORRCMC SIGN LIST
"KRN",19,8933,10,6,0)
8954
"KRN",19,8933,10,6,"^")
ORRCMC GENERAL
"KRN",19,8933,99)
59400,56154
"KRN",19,8933,99.1)
59371,47185
"KRN",19,8933,"U")
CARE MANAGEMENT CLIENT CONTEXT
"KRN",19,8934,-1)
0^13
"KRN",19,8934,0)
ORRCMP DASH CLINICIAN^clinicianDashboard^^M^^^^^^^^^^1
"KRN",19,8934,1,0)
^^1^1^3030411^
"KRN",19,8934,1,1,0)
This is the clinician dashboard perspective.
"KRN",19,8934,10,0)
^19.01IP^5^5
"KRN",19,8934,10,1,0)
8954
"KRN",19,8934,10,1,"^")
ORRCMC GENERAL
"KRN",19,8934,10,2,0)
8946
"KRN",19,8934,10,2,"^")
ORRCMC DASHBOARD
"KRN",19,8934,10,3,0)
8947
"KRN",19,8934,10,3,"^")
ORRCMC PATIENT TASK
"KRN",19,8934,10,4,0)
8944
"KRN",19,8934,10,4,"^")
XHDXC DESKTOP
"KRN",19,8934,10,5,0)
8945
"KRN",19,8934,10,5,"^")
ORRCMC QUERY TOOL
"KRN",19,8934,20)
W !!!,?5,"These options are only available from the HealtheVet Desktop."
"KRN",19,8934,99)
59400,56154
"KRN",19,8934,"U")
CLINICIANDASHBOARD
"KRN",19,8935,-1)
0^7
"KRN",19,8935,0)
ORRCMM CLINICIAN^Clinician Perspective Selector^^M^^^^^^^^^^1
"KRN",19,8935,10,0)
^19.01IP^2^2
"KRN",19,8935,10,1,0)
8934^^1
"KRN",19,8935,10,1,"^")
ORRCMP DASH CLINICIAN
"KRN",19,8935,10,2,0)
8938^^2
"KRN",19,8935,10,2,"^")
ORRCMP SIGN LIST
"KRN",19,8935,20)
W !!!,?5,"These options are only available from the HealtheVet Desktop."
"KRN",19,8935,99)
59379,35213
"KRN",19,8935,99.1)
59358,85708
"KRN",19,8935,"U")
CLINICIAN PERSPECTIVE SELECTOR
"KRN",19,8936,-1)
0^14
"KRN",19,8936,0)
ORRCMP DASH NURSING^dashboard.nurseDashboard^^M^^^^^^^^^^1
"KRN",19,8936,1,0)
^19.06^1^1^3030530^^
"KRN",19,8936,1,1,0)
This is the nursing dashboard perspective.
"KRN",19,8936,10,0)
^19.01IP^5^5
"KRN",19,8936,10,1,0)
8954
"KRN",19,8936,10,1,"^")
ORRCMC GENERAL
"KRN",19,8936,10,2,0)
8946
"KRN",19,8936,10,2,"^")
ORRCMC DASHBOARD
"KRN",19,8936,10,3,0)
8947
"KRN",19,8936,10,3,"^")
ORRCMC PATIENT TASK
"KRN",19,8936,10,4,0)
8944
"KRN",19,8936,10,4,"^")
XHDXC DESKTOP
"KRN",19,8936,10,5,0)
8945
"KRN",19,8936,10,5,"^")
ORRCMC QUERY TOOL
"KRN",19,8936,20)
W !!!,?5,"These options are only available from the HealtheVet Desktop."
"KRN",19,8936,99)
59400,56154
"KRN",19,8936,"U")
DASHBOARD.NURSEDASHBOARD
"KRN",19,8937,-1)
0^15
"KRN",19,8937,0)
ORRCMP QUERY TOOL^queryTool^^M^^^^^^^^^^1
"KRN",19,8937,1,0)
^^1^1^3030521^
"KRN",19,8937,1,1,0)
This is the query tool perspective.
"KRN",19,8937,10,0)
^19.01IP^3^3
"KRN",19,8937,10,1,0)
8954
"KRN",19,8937,10,1,"^")
ORRCMC GENERAL
"KRN",19,8937,10,2,0)
8945
"KRN",19,8937,10,2,"^")
ORRCMC QUERY TOOL
"KRN",19,8937,10,3,0)
8944
"KRN",19,8937,10,3,"^")
XHDXC DESKTOP
"KRN",19,8937,20)
W !!!,?5,"These options are only available from the HealtheVet Desktop."
"KRN",19,8937,99)
59400,56154
"KRN",19,8937,"U")
QUERYTOOL
"KRN",19,8938,-1)
0^17
"KRN",19,8938,0)
ORRCMP SIGN LIST^dashboard.signatureList^^M^^^^^^^^^^1
"KRN",19,8938,1,0)
^^1^1^3030521^
"KRN",19,8938,1,1,0)
This is the sign list perspective.
"KRN",19,8938,10,0)
^19.01IP^2^2
"KRN",19,8938,10,1,0)
8948
"KRN",19,8938,10,1,"^")
ORRCMC SIGN LIST
"KRN",19,8938,10,2,0)
8944
"KRN",19,8938,10,2,"^")
XHDXC DESKTOP
"KRN",19,8938,20)
W !!!,?5,"These options are only available from the HealtheVet Desktop."
"KRN",19,8938,99)
59379,35213
"KRN",19,8938,"U")
DASHBOARD.SIGNATURELIST
"KRN",19,8939,-1)
0^11
"KRN",19,8939,0)
ORRCMM NURSING^Nursing Perspective Selector^^M^^^^^^^^^^1
"KRN",19,8939,10,0)
^19.01IP^2^2
"KRN",19,8939,10,1,0)
8936^^1
"KRN",19,8939,10,1,"^")
ORRCMP DASH NURSING
"KRN",19,8939,10,2,0)
8938^^2
"KRN",19,8939,10,2,"^")
ORRCMP SIGN LIST
"KRN",19,8939,20)
W !!!,?5,"These options are only available from the HealtheVet Desktop."
"KRN",19,8939,99)
59379,35213
"KRN",19,8939,"U")
NURSING PERSPECTIVE SELECTOR
"KRN",19,8940,-1)
0^8
"KRN",19,8940,0)
ORRCMM CLINICIAN QUERY^Clinician Dashboard and Query Selector^^M^^^^^^^^^^1^^^
"KRN",19,8940,10,0)
^19.01IP^3^3
"KRN",19,8940,10,1,0)
8934^^1
"KRN",19,8940,10,1,"^")
ORRCMP DASH CLINICIAN
"KRN",19,8940,10,2,0)
8937^^2
"KRN",19,8940,10,2,"^")
ORRCMP QUERY TOOL
"KRN",19,8940,10,3,0)
8938^^3
"KRN",19,8940,10,3,"^")
ORRCMP SIGN LIST
"KRN",19,8940,20)
W !!!,?5,"These options are only available from the HealtheVet Desktop."
"KRN",19,8940,26)

"KRN",19,8940,99)
59379,35213
"KRN",19,8940,"U")
CLINICIAN DASHBOARD AND QUERY 
"KRN",19,8944,-1)
4^20
"KRN",19,8944,0)
XHDXC DESKTOP
"KRN",19,8945,-1)
0^5
"KRN",19,8945,0)
ORRCMC QUERY TOOL^Query Tool 1.0.1^^B^^^^^^^^
"KRN",19,8945,1,0)
^19.06^1^1^3030611^^
"KRN",19,8945,1,1,0)
This is the option context for RPCs called by the Care Management Query Tool.
"KRN",19,8945,"RPC",0)
^19.05P^42^42
"KRN",19,8945,"RPC",1,0)
ORWU NEWPERS
"KRN",19,8945,"RPC",2,0)
ORRHCQ QRYITR
"KRN",19,8945,"RPC",3,0)
ORRHCU REGLST
"KRN",19,8945,"RPC",4,0)
ORWU HASKEY
"KRN",19,8945,"RPC",5,0)
ORRHCO ORDITM
"KRN",19,8945,"RPC",6,0)
ORRHCR CTPLST
"KRN",19,8945,"RPC",7,0)
ORWORDG ALLTREE
"KRN",19,8945,"RPC",8,0)
ORRHCQ SETUP
"KRN",19,8945,"RPC",9,0)
XHD GET USER DEMOGRAPHICS
"KRN",19,8945,"RPC",10,0)
ORQPT TEAMS
"KRN",19,8945,"RPC",11,0)
ORRHCT DOCCLS
"KRN",19,8945,"RPC",12,0)
ORQPT WARDS
"KRN",19,8945,"RPC",13,0)
ORRHCO OISETS
"KRN",19,8945,"RPC",14,0)
ORQPT SPECIALTIES
"KRN",19,8945,"RPC",15,0)
ORRHCR TAGDEF
"KRN",19,8945,"RPC",16,0)
ORRHCU DFLDS
"KRN",19,8945,"RPC",17,0)
ORRHCO SIGNSTS
"KRN",19,8945,"RPC",18,0)
ORRHCO ORDSTS
"KRN",19,8945,"RPC",19,0)
ORRHCU ID2EXT
"KRN",19,8945,"RPC",20,0)
ORRHCQ SUBDTA
"KRN",19,8945,"RPC",21,0)
TIU GET RECORD TEXT
"KRN",19,8945,"RPC",22,0)
ORRHCQ DETAIL
"KRN",19,8945,"RPC",23,0)
ORRHCQ PTINFO
"KRN",19,8945,"RPC",24,0)
ORRCQLPT PTDFN
"KRN",19,8945,"RPC",25,0)
ORRHCQ SORTBY
"KRN",19,8945,"RPC",26,0)
ORRHCR RPTLST
"KRN",19,8945,"RPC",27,0)
ORRHCR RPTDEF
"KRN",19,8945,"RPC",28,0)
ORWU CLINLOC
"KRN",19,8945,"RPC",29,0)
ORRHCR SAVDEF
"KRN",19,8945,"RPC",30,0)
ORRHCR DELETE
"KRN",19,8945,"RPC",31,0)
ORRHCQ1 GETCNT
"KRN",19,8945,"RPC",32,0)
ORRHCQ1 DELSEN
"KRN",19,8945,"RPC",33,0)
ORRHCQ1 GETSLN
"KRN",19,8945,"RPC",34,0)
ORRHCQ1 GETSPT
"KRN",19,8945,"RPC",35,0)
ORRHCQ1 QRYSITR
"KRN",19,8945,"RPC",36,0)
ORRHCQ1 QSITR
"KRN",19,8945,"RPC",37,0)
TIU LONG LIST OF TITLES
"KRN",19,8945,"RPC",38,0)
ORRHCT DOCSTS
"KRN",19,8945,"RPC",39,0)
ORRHCQ CLEAR
"KRN",19,8945,"RPC",40,0)
ORRHCO CSLTGRP
"KRN",19,8945,"RPC",41,0)
ORWPT PTINQ
"KRN",19,8945,"RPC",42,0)
ORRHCU DFLDMAP
"KRN",19,8945,"U")
QUERY TOOL 1.0.1
"KRN",19,8946,-1)
0^3
"KRN",19,8946,0)
ORRCMC DASHBOARD^Care Management Dashboard 1.0^^B^^^^^^^^
"KRN",19,8946,1,0)
^^2^2^3030603^
"KRN",19,8946,1,1,0)
This is the option context for RPCs called by the Care Management Dashboard
"KRN",19,8946,1,2,0)
(both the Nursing and Clinician dashboards).
"KRN",19,8946,"RPC",0)
^19.05P^30^30
"KRN",19,8946,"RPC",1,0)
ORWU HASKEY
"KRN",19,8946,"RPC",2,0)
ORRC DASHBOARD PATIENTS
"KRN",19,8946,"RPC",3,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,8946,"RPC",4,0)
ORWPT PTINQ
"KRN",19,8946,"RPC",5,0)
ORRC RESULTS BY ID
"KRN",19,8946,"RPC",6,0)
ORRC VITALS BY ID
"KRN",19,8946,"RPC",7,0)
ORRC ORDERS BY ID
"KRN",19,8946,"RPC",8,0)
ORRC RESULTS ACKNOWLEDGE
"KRN",19,8946,"RPC",9,0)
ORRC UNSIGNED BY ID
"KRN",19,8946,"RPC",10,0)
ORRC SIGN
"KRN",19,8946,"RPC",11,0)
ORRC ORDERS COMPLETE
"KRN",19,8946,"RPC",12,0)
ORRC ORDERS VERIFY
"KRN",19,8946,"RPC",13,0)
ORRC EVENTS BY ID
"KRN",19,8946,"RPC",14,0)
ORRC EVENTS ACKNOWLEDGE
"KRN",19,8946,"RPC",15,0)
ORWPT DFLTSRC
"KRN",19,8946,"RPC",16,0)
ORRC RESULTS BY PATIENT
"KRN",19,8946,"RPC",17,0)
ORRC VITALS BY PATIENT
"KRN",19,8946,"RPC",18,0)
ORRC ORDERS BY PATIENT
"KRN",19,8946,"RPC",19,0)
ORRC EVENTS BY PATIENT
"KRN",19,8946,"RPC",20,0)
ORRC APPTS BY PATIENT
"KRN",19,8946,"RPC",21,0)
ORQPT DEFAULT PATIENT LIST
"KRN",19,8946,"RPC",22,0)
ORQPT PROVIDER PATIENTS
"KRN",19,8946,"RPC",23,0)
ORQPT TEAM PATIENTS
"KRN",19,8946,"RPC",24,0)
ORQPT SPECIALTY PATIENTS
"KRN",19,8946,"RPC",25,0)
ORQPT CLINIC PATIENTS
"KRN",19,8946,"RPC",26,0)
ORWPT BYWARD
"KRN",19,8946,"RPC",27,0)
ORRC NURS DASHBD PATIENTS
"KRN",19,8946,"RPC",28,0)
ORRC PHY DASHBD PATIENTS
"KRN",19,8946,"RPC",29,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,8946,"RPC",30,0)
ORRC ALERTS BY PATIENT
"KRN",19,8946,"U")
CARE MANAGEMENT DASHBOARD 1.0
"KRN",19,8947,-1)
0^4
"KRN",19,8947,0)
ORRCMC PATIENT TASK^Care Management Task 1.0^^B^^^^^^^^
"KRN",19,8947,1,0)
^^1^1^3030603^
"KRN",19,8947,1,1,0)
This is the option context for RPCs called by the Care Management Task Editor.
"KRN",19,8947,"RPC",0)
^19.05P^5^5
"KRN",19,8947,"RPC",1,0)
ORRC TASKS BY ID
"KRN",19,8947,"RPC",2,0)
ORRC TASKS BY PATIENT
"KRN",19,8947,"RPC",3,0)
ORRC TASK EDIT
"KRN",19,8947,"RPC",4,0)
ORRC TASK ADD
"KRN",19,8947,"RPC",5,0)
ORRHCU ID2EXT
"KRN",19,8947,"U")
CARE MANAGEMENT TASK 1.0
"KRN",19,8948,-1)
0^6
"KRN",19,8948,0)
ORRCMC SIGN LIST^Sign List 1.0^^B^^^^^^^^
"KRN",19,8948,1,0)
^^1^1^3030603^
"KRN",19,8948,1,1,0)
This is the option context for the RPCs called by the Sign List perspective.
"KRN",19,8948,"RPC",0)
^19.05P^2^2
"KRN",19,8948,"RPC",1,0)
ORWU VALIDSIG
"KRN",19,8948,"RPC",2,0)
ORRC SIGN
"KRN",19,8948,"U")
SIGN LIST 1.0
"KRN",19,8950,-1)
0^10
"KRN",19,8950,0)
ORRCMM NURSE QUERY^Nursing Dashboard and Query Selector^^M^^^^^^^^^^1
"KRN",19,8950,10,0)
^19.01IP^3^3
"KRN",19,8950,10,1,0)
8936^^1
"KRN",19,8950,10,1,"^")
ORRCMP DASH NURSING
"KRN",19,8950,10,2,0)
8938^^3
"KRN",19,8950,10,2,"^")
ORRCMP SIGN LIST
"KRN",19,8950,10,3,0)
8937^^2
"KRN",19,8950,10,3,"^")
ORRCMP QUERY TOOL
"KRN",19,8950,20)
W !!!,?5,"These options are only available from the HealtheVet Desktop."
"KRN",19,8950,99)
59379,35213
"KRN",19,8950,"U")
NURSING DASHBOARD AND QUERY SE
"KRN",19,8952,-1)
0^16
"KRN",19,8952,0)
ORRCMP RPC LOGGER^rpclogger^^M^^^^^^^^^^1
"KRN",19,8952,1,0)
^19.06^1^1^3030702^^
"KRN",19,8952,1,1,0)
This is the RPC Logger perspective.
"KRN",19,8952,20)
W !!!,?5,"These options are only available from the HealtheVet Desktop."
"KRN",19,8952,"U")
RPCLOGGER
"KRN",19,8954,-1)
0^19
"KRN",19,8954,0)
ORRCMC GENERAL^Clinical General 1.0^^B^^^^^^^^
"KRN",19,8954,1,0)
^19.06^2^2^3030723^^
"KRN",19,8954,1,1,0)
This is the option context for RPCs called by clinical perspectives
"KRN",19,8954,1,2,0)
within the HealtheVet Desktop.
"KRN",19,8954,"RPC",0)
^19.05P^4^4
"KRN",19,8954,"RPC",1,0)
ORRCQLPT PTDEMOS
"KRN",19,8954,"RPC",2,0)
ORWPT SELECT
"KRN",19,8954,"RPC",3,0)
VAFCTFU CONVERT ICN TO DFN
"KRN",19,8954,"RPC",4,0)
ORWU HASKEY
"KRN",19,8954,"U")
CLINICAL GENERAL 1.0
"KRN",19,8956,-1)
0^12
"KRN",19,8956,0)
ORRCMM TROUBLESHOOTER CLIN^CM Troubleshooter Clinician^^M^^^^^^^^^^1
"KRN",19,8956,10,0)
^19.01IP^6^4
"KRN",19,8956,10,1,0)
8934^^1
"KRN",19,8956,10,1,"^")
ORRCMP DASH CLINICIAN
"KRN",19,8956,10,3,0)
8937^^3
"KRN",19,8956,10,3,"^")
ORRCMP QUERY TOOL
"KRN",19,8956,10,4,0)
8938^^4
"KRN",19,8956,10,4,"^")
ORRCMP SIGN LIST
"KRN",19,8956,10,6,0)
8952^^6
"KRN",19,8956,10,6,"^")
ORRCMP RPC LOGGER
"KRN",19,8956,20)
W !!!,?5,"These options are only available from the HealtheVet Desktop."
"KRN",19,8956,99)
59512,57533
"KRN",19,8956,"U")
CM TROUBLESHOOTER CLINICIAN
"KRN",19,8957,-1)
0^22
"KRN",19,8957,0)
ORRCMM TROUBLESHOOTER NURS^CM Troubleshooter Nursing^^M^^^^^^^^^^1
"KRN",19,8957,10,0)
^19.01IP^6^4
"KRN",19,8957,10,2,0)
8936^^2
"KRN",19,8957,10,2,"^")
ORRCMP DASH NURSING
"KRN",19,8957,10,3,0)
8937^^3
"KRN",19,8957,10,3,"^")
ORRCMP QUERY TOOL
"KRN",19,8957,10,4,0)
8938^^4
"KRN",19,8957,10,4,"^")
ORRCMP SIGN LIST
"KRN",19,8957,10,6,0)
8952^^6
"KRN",19,8957,10,6,"^")
ORRCMP RPC LOGGER
"KRN",19,8957,20)
W !!!,?5,"These options are only available from the HealtheVet Desktop."
"KRN",19,8957,99)
59512,57622
"KRN",19,8957,"U")
CM TROUBLESHOOTER NURSING
"KRN",19.1,365,-1)
0^1
"KRN",19.1,365,0)
ORRC QUERY RESULT EXPORT^Allows Export of Query Results^^n
"KRN",19.1,365,1,0)
^19.11^2^2^3030616^^
"KRN",19.1,365,1,1,0)
This key allows holders to export the results of a Query from Care 
"KRN",19.1,365,1,2,0)
Management.
"KRN",8994,1889,-1)
0^13
"KRN",8994,1889,0)
ORRC PHY DASHBD PATIENTS^EN^ORRCDPT^4^S^^^1
"KRN",8994,1889,1,0)
^8994.01^3^3^3030527^^^^
"KRN",8994,1889,1,1,0)
This call returns a list of patients with recent activity (new results
"KRN",8994,1889,1,2,0)
or ADT movements) or items that need attention (tasks that are due or
"KRN",8994,1889,1,3,0)
unsigned orders and notes) for the specified user.
"KRN",8994,1889,2,0)
^8994.02A^1^1
"KRN",8994,1889,2,1,0)
USER^1^^1^1
"KRN",8994,1889,2,1,1,0)
^8994.021^1^1^3030410^^^^
"KRN",8994,1889,2,1,1,1,0)
This is the pointer to the user in the New Person file #200.
"KRN",8994,1889,2,"B","USER",1)

"KRN",8994,1889,2,"PARAMSEQ",1,1)

"KRN",8994,1889,3,0)
^8994.03^18^18^3030527^^
"KRN",8994,1889,3,1,0)
This call returns a list of patients for the Clinician Dashboard that are 
"KRN",8994,1889,3,2,0)
relevant for the specified user, along with lists of item ID's, as:
"KRN",8994,1889,3,3,0)
  "Patient=DFN^NAME^SSN^DOB^AGE"
"KRN",8994,1889,3,4,0)
  "Result=ORR:##^ORR:##^...^*ORR:##"
"KRN",8994,1889,3,5,0)
  "Task= TSK:##^TSK:##^...^*TSK:##"
"KRN",8994,1889,3,6,0)
  "Event=VST:ID^VST:ID^...^VST:ID"
"KRN",8994,1889,3,7,0)
  "Unsigned=ORU:##^...^ORU:##^DOC:##^...^DOC:##"
"KRN",8994,1889,3,8,0)
 where DFN  = Pointer to patient in Patient file #2
"KRN",8994,1889,3,9,0)
       NAME = Patient name from file #2 (i.e. LAST,FIRST MI)
"KRN",8994,1889,3,10,0)
       SSN  = SSN or Primary Long ID from file #2
"KRN",8994,1889,3,11,0)
       DOB  = Date of Birth of patient in the form YYYYMMDD
"KRN",8994,1889,3,12,0)
       AGE  = Current age of patient (or age at death, if deceased)
"KRN",8994,1889,3,13,0)
 and ORR:## = Identifier for an order w/results (##=file #100 pointer)
"KRN",8994,1889,3,14,0)
     TSK:## = Identifier for a task (##=file #102.3 pointer)
"KRN",8994,1889,3,15,0)
       [a leading * indicates abnormal results or high priority]
"KRN",8994,1889,3,16,0)
     VST:ID = Identifier for an alert about a visit (including ADT)
"KRN",8994,1889,3,17,0)
     ORU:## = Identifier for an unsigned order in (##=file #100 pointer)
"KRN",8994,1889,3,18,0)
     DOC:## = Identifier for a document (##=file #8925 pointer)
"KRN",8994,1892,-1)
0^17
"KRN",8994,1892,0)
ORRC RESULTS BY PATIENT^LIST^ORRCACK^4^S^^^1
"KRN",8994,1892,1,0)
^8994.01^2^2^3030307^^
"KRN",8994,1892,1,1,0)
This call returns a list of orders for a patient placed by the user, that
"KRN",8994,1892,1,2,0)
have new unacknowledged results.
"KRN",8994,1892,2,0)
^8994.02A^3^3
"KRN",8994,1892,2,1,0)
USER^1^^1^1
"KRN",8994,1892,2,1,1,0)
^^1^1^3030131^
"KRN",8994,1892,2,1,1,1,0)
This is the pointer to the user in the New Person file #200.
"KRN",8994,1892,2,2,0)
PATIENT^1^^1^2
"KRN",8994,1892,2,2,1,0)
^^1^1^3030131^
"KRN",8994,1892,2,2,1,1,0)
This is the pointer to the patient in the Patient file #2.
"KRN",8994,1892,2,3,0)
RESULTS^1^^0^3
"KRN",8994,1892,2,3,1,0)
^8994.021^2^2^3030307^^
"KRN",8994,1892,2,3,1,1,0)
This flag indicates whether to return the results with each order (true)
"KRN",8994,1892,2,3,1,2,0)
or just the list of order ID's (false).
"KRN",8994,1892,2,"B","PATIENT",2)

"KRN",8994,1892,2,"B","RESULTS",3)

"KRN",8994,1892,2,"B","USER",1)

"KRN",8994,1892,2,"PARAMSEQ",1,1)

"KRN",8994,1892,2,"PARAMSEQ",2,2)

"KRN",8994,1892,2,"PARAMSEQ",3,3)

"KRN",8994,1892,3,0)
^^8^8^3030307^
"KRN",8994,1892,3,1,0)
This call returns a list of orders for PATIENT that were placed by USER
"KRN",8994,1892,3,2,0)
and now have results available, in the form:
"KRN",8994,1892,3,3,0)
  "Item=" _ ID ^ Text ^ Result Date in HL7 format
"KRN",8994,1892,3,4,0)
where ID is the order number in the form "ORR:###".  If the RESULTS 
"KRN",8994,1892,3,5,0)
parameter was true, other entries will also be included as:
"KRN",8994,1892,3,6,0)
  "Data=" _ Test ^ value ^ units ^ reference range ^ critical flag, or
"KRN",8994,1892,3,7,0)
  "Text=" _ line of report text
"KRN",8994,1892,3,8,0)
repeated as needed until the next "Item" entry.
"KRN",8994,1892,3,9,0)
repeated as needed until the next "Item" entry.
"KRN",8994,1893,-1)
0^16
"KRN",8994,1893,0)
ORRC RESULTS BY ID^RESULT^ORRCACK^4^S^^^1
"KRN",8994,1893,1,0)
^8994.01^1^1^3030307^^
"KRN",8994,1893,1,1,0)
This call returns the results for a list of orders.
"KRN",8994,1893,2,0)
^8994.02A^1^1
"KRN",8994,1893,2,1,0)
ORDERS^2^^1^1
"KRN",8994,1893,2,1,1,0)
^^2^2^3030307^
"KRN",8994,1893,2,1,1,1,0)
This is the list of order ID's for which to return results, in the form
"KRN",8994,1893,2,1,1,2,0)
"ORR:###" where ### is the order number from file #100.
"KRN",8994,1893,2,1,1,3,0)
the corresponding M file containing the data:
"KRN",8994,1893,2,1,1,4,0)
    ORD = Orders file #100
"KRN",8994,1893,2,1,1,5,0)
    DOC = TIU Documents file #8925
"KRN",8994,1893,2,1,1,6,0)
    TSK = Patient Task file #102.3
"KRN",8994,1893,2,"B","ORDERS",1)

"KRN",8994,1893,2,"PARAMSEQ",1,1)

"KRN",8994,1893,3,0)
^^6^6^3030307^
"KRN",8994,1893,3,1,0)
This call returns the list of order ID's and the results of each, in the 
"KRN",8994,1893,3,2,0)
form:
"KRN",8994,1893,3,3,0)
  "Item=" _ ID ^ Text ^ Result Date in HL7 format
"KRN",8994,1893,3,4,0)
and either of the following repeated as necessary until the next "Item".
"KRN",8994,1893,3,5,0)
  "Data=" _ Test ^ value ^ units ^ reference range ^ critical flag
"KRN",8994,1893,3,6,0)
  "Text=" _ line of report text
"KRN",8994,1894,-1)
0^14
"KRN",8994,1894,0)
ORRC RESULTS ACKNOWLEDGE^ACK^ORRCACK^2^S
"KRN",8994,1894,1,0)
^8994.01^2^2^3030307^^^^
"KRN",8994,1894,1,1,0)
This call will mark new results as being acknowledged by the user; it
"KRN",8994,1894,1,2,0)
will return a true or false value for each order ID if successfully saved.
"KRN",8994,1894,2,0)
^8994.02A^2^2
"KRN",8994,1894,2,1,0)
USER^1^^1^1
"KRN",8994,1894,2,1,1,0)
^^1^1^3030131^
"KRN",8994,1894,2,1,1,1,0)
This is the pointer to the user in the New Person file #200.
"KRN",8994,1894,2,2,0)
ORDERS^2^^1^2
"KRN",8994,1894,2,2,1,0)
2^8994.021^3^3^3030307^
"KRN",8994,1894,2,2,1,1,0)
This is the list of order ID's whose results may be acknowledged, in the
"KRN",8994,1894,2,2,1,2,0)
form "ORR:###^1" where ### is the order number from file #100 and the
"KRN",8994,1894,2,2,1,3,0)
second ^-piece is either 1 or 0 if the order was acknowledged.
"KRN",8994,1894,2,"B","ORDERS",2)

"KRN",8994,1894,2,"B","USER",1)

"KRN",8994,1894,2,"PARAMSEQ",1,1)

"KRN",8994,1894,2,"PARAMSEQ",2,2)

"KRN",8994,1894,3,0)
^8994.03^3^3^3030307^^
"KRN",8994,1894,3,1,0)
This call returns the list of order ID's passed into the ORDERS input
"KRN",8994,1894,3,2,0)
parameter, along with a flag indicating if the acknowledgment update
"KRN",8994,1894,3,3,0)
was successful or not, in the form ORR:### ^ 1 or 0.
"KRN",8994,1895,-1)
0^25
"KRN",8994,1895,0)
ORRC TASKS BY PATIENT^LIST^ORRCTSK^2^S
"KRN",8994,1895,1,0)
^8994.01^2^2^3030408^^^
"KRN",8994,1895,1,1,0)
This call returns a list of tasks for a patient that are not yet
"KRN",8994,1895,1,2,0)
completed.
"KRN",8994,1895,2,0)
^8994.02A^3^3
"KRN",8994,1895,2,1,0)
PATIENT^1^^1^1
"KRN",8994,1895,2,1,1,0)
^8994.021^1^1^3030204^^
"KRN",8994,1895,2,1,1,1,0)
This is the pointer to the patient in the Patient file #2.
"KRN",8994,1895,2,2,0)
USER^1^^0^2
"KRN",8994,1895,2,2,1,0)
^8994.021^3^3^3030408^^
"KRN",8994,1895,2,2,1,1,0)
This is the pointer to the user in the New Person file #200; if defined
"KRN",8994,1895,2,2,1,2,0)
then tasks will be returned that USER created or all incomplete tasks if
"KRN",8994,1895,2,2,1,3,0)
USER is linked to the patient in some way.
"KRN",8994,1895,2,3,0)
DUE^1^^0^3
"KRN",8994,1895,2,3,1,0)
^^2^2^3030408^
"KRN",8994,1895,2,3,1,1,0)
This is a date in the format YYYYMMDD[HHMMSS]; if defined, then only
"KRN",8994,1895,2,3,1,2,0)
tasks that are past DUE (i.e. Due Date is prior to DUE) will be returned.
"KRN",8994,1895,2,"B","DUE",3)

"KRN",8994,1895,2,"B","PATIENT",1)

"KRN",8994,1895,2,"B","USER",2)

"KRN",8994,1895,2,"PARAMSEQ",1,1)

"KRN",8994,1895,2,"PARAMSEQ",2,2)

"KRN",8994,1895,2,"PARAMSEQ",3,3)

"KRN",8994,1895,3,0)
^8994.03^14^14^3030408^^^
"KRN",8994,1895,3,1,0)
This call returns a list of incomplete tasks, in the form:
"KRN",8994,1895,3,2,0)
   ID^Subject^Created^ByWhom^Patient^Priority^Due^Completed^ByWhom^Items
"KRN",8994,1895,3,3,0)
  where ID        = TSK:##, where ## is the pointer to #102.3
"KRN",8994,1895,3,4,0)
        Subject   = Text subject of task
"KRN",8994,1895,3,5,0)
        Created   = date task was created, as YYYYMMDDHHMMSS
"KRN",8994,1895,3,6,0)
        ByWhom    = user who created task, as pointer to #200
"KRN",8994,1895,3,7,0)
        Patient   = patient that task is for, as pointer to #2
"KRN",8994,1895,3,8,0)
        Priority  = H, M, or L
"KRN",8994,1895,3,9,0)
        Due       = date task is due to be completed, as YYYMMDD[HHMM]
"KRN",8994,1895,3,10,0)
        Completed = date task was completed as, YYYYMMDDHHMM
"KRN",8994,1895,3,11,0)
        ByWhom    = user who completed task, as pointer to #200
"KRN",8994,1895,3,12,0)
        Items     = linked items as ID,ID,...,ID where ID is XXX:### as
"KRN",8994,1895,3,13,0)
                    DOC:### = unsigned documents in #8925
"KRN",8994,1895,3,14,0)
                    ORR:### = order results in #100
"KRN",8994,1896,-1)
0^24
"KRN",8994,1896,0)
ORRC TASKS BY ID^DETAIL^ORRCTSK^2^S
"KRN",8994,1896,1,0)
^8994.01^2^2^3030204^^^
"KRN",8994,1896,1,1,0)
This call returns the details of the tasks requested in the list of ID's
"KRN",8994,1896,1,2,0)
passed in.
"KRN",8994,1896,2,0)
^8994.02A^1^1
"KRN",8994,1896,2,1,0)
TASKS^2^^1^1
"KRN",8994,1896,2,1,1,0)
^8994.021^2^2^3030204^^^
"KRN",8994,1896,2,1,1,1,0)
This is the list of task identifiers, as TSK:## where ## is the pointer
"KRN",8994,1896,2,1,1,2,0)
to file #102.3
"KRN",8994,1896,2,"B","TASKS",1)

"KRN",8994,1896,2,"PARAMSEQ",1,1)

"KRN",8994,1896,3,0)
^8994.03^14^14^3030307^^
"KRN",8994,1896,3,1,0)
This call returns a list of incomplete tasks, in the form:
"KRN",8994,1896,3,2,0)
   ID^Subject^Created^ByWhom^Patient^Priority^Due^Completed^ByWhom^Items
"KRN",8994,1896,3,3,0)
  where ID        = TSK:##, where ## is the pointer to #102.3
"KRN",8994,1896,3,4,0)
        Subject   = Text subject of task
"KRN",8994,1896,3,5,0)
        Created   = date task was created, as YYYYMMDDHHMMSS
"KRN",8994,1896,3,6,0)
        ByWhom    = user who created task, as pointer to #200
"KRN",8994,1896,3,7,0)
        Patient   = patient that task is for, as pointer to #2
"KRN",8994,1896,3,8,0)
        Priority  = H, M, or L
"KRN",8994,1896,3,9,0)
        Due       = date task is due to be completed, as YYYMMDD[HHMM]
"KRN",8994,1896,3,10,0)
        Completed = date task was completed as, YYYYMMDDHHMM
"KRN",8994,1896,3,11,0)
        ByWhom    = user who completed task, as pointer to #200
"KRN",8994,1896,3,12,0)
        Items     = linked items as ID,ID,...,ID where ID is XXX:### as
"KRN",8994,1896,3,13,0)
                    DOC:### = documents in #8925
"KRN",8994,1896,3,14,0)
                    ORR:### = order results in #100
"KRN",8994,1897,-1)
0^19
"KRN",8994,1897,0)
ORRC TASK ADD^NEW^ORRCTSK^1^S
"KRN",8994,1897,1,0)
^8994.01^2^2^3030307^^
"KRN",8994,1897,1,1,0)
This call will accept data to create a new entry in the Patient Task
"KRN",8994,1897,1,2,0)
file #102.3 and return the new identifier.
"KRN",8994,1897,2,0)
^8994.02A^1^1
"KRN",8994,1897,2,1,0)
DATA^1^^1^1
"KRN",8994,1897,2,1,1,0)
^^13^13^3030307^
"KRN",8994,1897,2,1,1,1,0)
This is a string of ^-delimited attributes of a new task, in the form
"KRN",8994,1897,2,1,1,2,0)
  Subject^Created^ByWhom^Patient^Priority^Due^Completed^ByWhom^Items
"KRN",8994,1897,2,1,1,3,0)
where Subject   = Text subject of task
"KRN",8994,1897,2,1,1,4,0)
      Created   = date task was created, as YYYYMMDDHHMMSS
"KRN",8994,1897,2,1,1,5,0)
      ByWhom    = user who created task, as pointer to #200
"KRN",8994,1897,2,1,1,6,0)
      Patient   = patient that task is for, as pointer to #2
"KRN",8994,1897,2,1,1,7,0)
      Priority  = H, M, or L
"KRN",8994,1897,2,1,1,8,0)
      Due       = date task is due to be completed, as YYYMMDD[HHMM]
"KRN",8994,1897,2,1,1,9,0)
      Completed = date task was completed as, YYYYMMDDHHMM
"KRN",8994,1897,2,1,1,10,0)
      ByWhom    = user who completed task, as pointer to #200
"KRN",8994,1897,2,1,1,11,0)
      Items     = linked items as ID,ID,...,ID where ID is XXX:### as
"KRN",8994,1897,2,1,1,12,0)
                  DOC:### = documents in #8925
"KRN",8994,1897,2,1,1,13,0)
                  ORR:### = order results in #100
"KRN",8994,1897,2,"B","DATA",1)

"KRN",8994,1897,2,"PARAMSEQ",1,1)

"KRN",8994,1897,3,0)
^8994.03^3^3^3030307^^
"KRN",8994,1897,3,1,0)
This call returns either the identifier of the new task created in the
"KRN",8994,1897,3,2,0)
form TSK:## (where ## is a pointer to the Patient Task file #102.3), or
"KRN",8994,1897,3,3,0)
0^ErrorMessage to indicate that a new task could not be created.
"KRN",8994,1898,-1)
0^22
"KRN",8994,1898,0)
ORRC TASK EDIT^EDIT^ORRCTSK^2^S
"KRN",8994,1898,1,0)
^8994.01^3^3^3030307^^
"KRN",8994,1898,1,1,0)
This call will update patient tasks using the data strings passed in, and
"KRN",8994,1898,1,2,0)
return a true or false flag with each ID indicating if the update was
"KRN",8994,1898,1,3,0)
successful.
"KRN",8994,1898,2,0)
^8994.02A^1^1
"KRN",8994,1898,2,1,0)
TASKS^2^^1^1
"KRN",8994,1898,2,1,1,0)
^^14^14^3030307^
"KRN",8994,1898,2,1,1,1,0)
This is a string of ^-delimited attributes of a new task, in the form
"KRN",8994,1898,2,1,1,2,0)
  ID^Subject^Created^ByWhom^Patient^Priority^Due^Completed^ByWhom^Items
"KRN",8994,1898,2,1,1,3,0)
where ID        = Task identifier, as TSK:## [##=pointer to #102.3]
"KRN",8994,1898,2,1,1,4,0)
      Subject   = Text subject of task      
"KRN",8994,1898,2,1,1,5,0)
      Created   = date task was created, as YYYYMMDDHHMMSS      
"KRN",8994,1898,2,1,1,6,0)
      ByWhom    = user who created task, as pointer to #200      
"KRN",8994,1898,2,1,1,7,0)
      Patient   = patient that task is for, as pointer to #2      
"KRN",8994,1898,2,1,1,8,0)
      Priority  = H, M, or L      
"KRN",8994,1898,2,1,1,9,0)
      Due       = date task is due to be completed, as YYYMMDD[HHMM]      
"KRN",8994,1898,2,1,1,10,0)
      Completed = date task was completed as, YYYYMMDDHHMM      
"KRN",8994,1898,2,1,1,11,0)
      ByWhom    = user who completed task, as pointer to #200      
"KRN",8994,1898,2,1,1,12,0)
      Items     = linked items as ID,ID,...,ID where ID is XXX:### as
"KRN",8994,1898,2,1,1,13,0)
                  DOC:### = documents in #8925
"KRN",8994,1898,2,1,1,14,0)
                  ORR:### = order results in #100
"KRN",8994,1898,2,"B","TASKS",1)

"KRN",8994,1898,2,"PARAMSEQ",1,1)

"KRN",8994,1898,3,0)
^8994.03^3^3^3030428^^^
"KRN",8994,1898,3,1,0)
This call returns a list of the task identifiers passed into the call as
"KRN",8994,1898,3,2,0)
well as a flag indicating if the requested update was successful, in the
"KRN",8994,1898,3,3,0)
form ID ^ 1 or 0 ^ error message (if 0).
"KRN",8994,1899,-1)
0^21
"KRN",8994,1899,0)
ORRC TASK COMPLETE^COMP^ORRCTSK^2^S
"KRN",8994,1899,1,0)
^^1^1^3030204^
"KRN",8994,1899,1,1,0)
This call accepts a list of patient task ID's to be marked as completed.
"KRN",8994,1899,2,0)
^8994.02A^2^2
"KRN",8994,1899,2,1,0)
USER^1^^1^1
"KRN",8994,1899,2,1,1,0)
^^1^1^3030204^
"KRN",8994,1899,2,1,1,1,0)
This is the pointer to the user in the New Person file #200.
"KRN",8994,1899,2,2,0)
TASKS^2^^1^2
"KRN",8994,1899,2,2,1,0)
^^2^2^3030204^
"KRN",8994,1899,2,2,1,1,0)
This is a list of task identifiers in the form TSK:##, where ## is the
"KRN",8994,1899,2,2,1,2,0)
pointer to the Patient Task file #102.3.
"KRN",8994,1899,2,"B","TASKS",2)

"KRN",8994,1899,2,"B","USER",1)

"KRN",8994,1899,2,"PARAMSEQ",1,1)

"KRN",8994,1899,2,"PARAMSEQ",2,2)

"KRN",8994,1899,3,0)
^8994.03^3^3^3030428^^
"KRN",8994,1899,3,1,0)
This call returns a list of the task identifiers passed into the call as
"KRN",8994,1899,3,2,0)
well as a flag indicating if the requested update was successful, in the
"KRN",8994,1899,3,3,0)
form ID ^ 1 or 0 ^ error message (if 0).
"KRN",8994,1900,-1)
0^23
"KRN",8994,1900,0)
ORRC TASK SUBJECTS BY PT^SUBJ^ORRCTSK^2^S
"KRN",8994,1900,1,0)
^^2^2^3030204^
"KRN",8994,1900,1,1,0)
This call returns a list of the subjects previously used for tasks on
"KRN",8994,1900,1,2,0)
this patient.
"KRN",8994,1900,2,0)
^8994.02A^1^1
"KRN",8994,1900,2,1,0)
PATIENT^1^^1^1
"KRN",8994,1900,2,1,1,0)
^^1^1^3030204^
"KRN",8994,1900,2,1,1,1,0)
This is the pointer to the patient in the Patient file #2.
"KRN",8994,1900,2,"B","PATIENT",1)

"KRN",8994,1900,2,"PARAMSEQ",1,1)

"KRN",8994,1900,3,0)
^^2^2^3030204^
"KRN",8994,1900,3,1,0)
This call returns a list of text subjects previously used for this
"KRN",8994,1900,3,2,0)
patient's tasks.
"KRN",8994,1901,-1)
0^28
"KRN",8994,1901,0)
ORRC UNSIGNED BY ID^DETAIL^ORRCSIG^4^S^^^1
"KRN",8994,1901,1,0)
^8994.01^1^1^3030307^^
"KRN",8994,1901,1,1,0)
This call returns the details of a list of orders and/or documents.
"KRN",8994,1901,2,0)
^8994.02A^1^1
"KRN",8994,1901,2,1,0)
ITEMS^2^^1^1
"KRN",8994,1901,2,1,1,0)
^8994.021^5^5^3030307^^^
"KRN",8994,1901,2,1,1,1,0)
This is the list of ID's of each item to return details for, in the form
"KRN",8994,1901,2,1,1,2,0)
XXX:### where XXX indicates the type of item and ### is the pointer to
"KRN",8994,1901,2,1,1,3,0)
the corresponding M file containing the data:
"KRN",8994,1901,2,1,1,4,0)
    ORU = Orders file #100
"KRN",8994,1901,2,1,1,5,0)
    DOC = TIU Documents file #8925
"KRN",8994,1901,2,"B","ITEMS",1)

"KRN",8994,1901,2,"PARAMSEQ",1,1)

"KRN",8994,1901,3,0)
^8994.03^4^4^3030307^^
"KRN",8994,1901,3,1,0)
This call returns a list of orders and documents for the Physician
"KRN",8994,1901,3,2,0)
Dashboard with its details or text, in the form:
"KRN",8994,1901,3,3,0)
  "Item=" _ ID ^ Title ^ Date in HL7 format
"KRN",8994,1901,3,4,0)
  "Text=" _ line of report text
"KRN",8994,1902,-1)
0^6
"KRN",8994,1902,0)
ORRC EVENTS BY ID^TEXT^ORRCEVT^4^S^^^1
"KRN",8994,1902,1,0)
^8994.01^2^2^3030411^^^
"KRN",8994,1902,1,1,0)
This call returns the text of the documents associated with the events
"KRN",8994,1902,1,2,0)
in the ID list passed in.
"KRN",8994,1902,2,0)
^8994.02A^1^1
"KRN",8994,1902,2,1,0)
EVENTS^2^^1^1
"KRN",8994,1902,2,1,1,0)
^^4^4^3030411^
"KRN",8994,1902,2,1,1,1,0)
This is the list of alert IDs in the format "VST:"_ID where ID is the
"KRN",8994,1902,2,1,1,2,0)
alert identifier as defined by Kernel ("OR,<patient>,<Notification ien>;
"KRN",8994,1902,2,1,1,3,0)
<creator>;<date created>") or the appointment time/location ("<date.time>;
"KRN",8994,1902,2,1,1,4,0)
<location>").
"KRN",8994,1902,2,"B","ALERTS",1)

"KRN",8994,1902,2,"B","EVENTS",1)

"KRN",8994,1902,2,"PARAMSEQ",1,1)

"KRN",8994,1902,3,0)
^8994.03^4^4^3030411^^^
"KRN",8994,1902,3,1,0)
This call returns the list of event IDs and the text of the document
"KRN",8994,1902,3,2,0)
associated with the event, if any currently exists, in the form:
"KRN",8994,1902,3,3,0)
  "Item=" _ ID
"KRN",8994,1902,3,4,0)
  "Text=" _ line of document text
"KRN",8994,1903,-1)
0^5
"KRN",8994,1903,0)
ORRC EVENTS ACKNOWLEDGE^CLEAR^ORRCEVT^2^S
"KRN",8994,1903,1,0)
^8994.01^2^2^3030307^^
"KRN",8994,1903,1,1,0)
This call will clear the event alerts for this user, and return a true
"KRN",8994,1903,1,2,0)
or false value for each ID if successful.
"KRN",8994,1903,2,0)
^8994.02A^2^2
"KRN",8994,1903,2,1,0)
USER^1^^1^1
"KRN",8994,1903,2,1,1,0)
^^1^1^3030207^
"KRN",8994,1903,2,1,1,1,0)
This is the pointer to the user in the New Person file #200.
"KRN",8994,1903,2,2,0)
ALERTS^2^^1^2
"KRN",8994,1903,2,2,1,0)
^^3^3^3030307^
"KRN",8994,1903,2,2,1,1,0)
This is the list of alert IDs to be cleared, in the form "VST:"_ID where
"KRN",8994,1903,2,2,1,2,0)
ID is the alert identifier as defined by Kernel ("OR,<patient>,
"KRN",8994,1903,2,2,1,3,0)
<Notification ien>;<creator>;<date created>").
"KRN",8994,1903,2,"B","ALERTS",2)

"KRN",8994,1903,2,"B","USER",1)

"KRN",8994,1903,2,"PARAMSEQ",1,1)

"KRN",8994,1903,2,"PARAMSEQ",2,2)

"KRN",8994,1903,3,0)
^8994.03^3^3^3030307^^
"KRN",8994,1903,3,1,0)
This call returns the list of alert IDs passed in along with a flag
"KRN",8994,1903,3,2,0)
indicating if the alert deletion was successful or not, in the form
"KRN",8994,1903,3,3,0)
VST:ID ^ 1 or 0.
"KRN",8994,1904,-1)
0^18
"KRN",8994,1904,0)
ORRC SIGN^SIGN^ORRCSIG^4^S^^^1
"KRN",8994,1904,1,0)
^8994.01^4^4^3030307^^^^
"KRN",8994,1904,1,1,0)
This call will apply the user's electronic signature to the orders and 
"KRN",8994,1904,1,2,0)
documents in the ITEM array. It will return a boolean result for each 
"KRN",8994,1904,1,3,0)
item (indicating success or failure), with explanatory text in the event 
"KRN",8994,1904,1,4,0)
the call fails.
"KRN",8994,1904,2,0)
^8994.02A^6^4
"KRN",8994,1904,2,1,0)
USER^1^^1^1
"KRN",8994,1904,2,1,1,0)
^8994.021^1^1^3030212^^
"KRN",8994,1904,2,1,1,1,0)
This is the pointer to the user in the New Person file #200.
"KRN",8994,1904,2,4,0)
LOC^1^^0^2
"KRN",8994,1904,2,4,1,0)
^8994.021^2^2^3030212^^
"KRN",8994,1904,2,4,1,1,0)
The hospital location. Essential in the OE/RR 3 for printing of orders,
"KRN",8994,1904,2,4,1,2,0)
if available. Not essential for notes.
"KRN",8994,1904,2,5,0)
ESCODE^1^^1^3
"KRN",8994,1904,2,5,1,0)
^8994.021^1^1^3030212^^
"KRN",8994,1904,2,5,1,1,0)
The network encrypted signature code of the person identified in ORNP. 
"KRN",8994,1904,2,6,0)
ITEM^2^^1^4
"KRN",8994,1904,2,6,1,0)
^8994.021^4^4^3030307^^^
"KRN",8994,1904,2,6,1,1,0)
The array of items to which the electronic signature is being applied. 
"KRN",8994,1904,2,6,1,2,0)
Should have the format:
"KRN",8994,1904,2,6,1,3,0)
  ITEM(#)=DOC:### for notes, or
"KRN",8994,1904,2,6,1,4,0)
  ITEM(#)=ORU:###^DFN^Release Flag^Signature Status^Nature of Order
"KRN",8994,1904,2,6,1,5,0)
  ITEM(#)=ORD:###^DFN^Release Flag^Signature Status^Nature of Order
"KRN",8994,1904,2,"B","ESCODE",5)

"KRN",8994,1904,2,"B","ITEM",6)

"KRN",8994,1904,2,"B","LOC",4)

"KRN",8994,1904,2,"B","USER",1)

"KRN",8994,1904,2,"PARAMSEQ",1,1)

"KRN",8994,1904,2,"PARAMSEQ",2,4)

"KRN",8994,1904,2,"PARAMSEQ",3,5)

"KRN",8994,1904,2,"PARAMSEQ",4,6)

"KRN",8994,1904,3,0)
^8994.03^3^3^3030307^^^^
"KRN",8994,1904,3,1,0)
in @ORY@(#) = ID^Success Indicator^Error Message (if 'Success).
"KRN",8994,1904,3,2,0)
where ID is ORU:IEN for Orders, or
"KRN",8994,1904,3,3,0)
            DOC:IEN for Documents.
"KRN",8994,1904,3,4,0)
            DOC:IEN for Documents.
"KRN",8994,1907,-1)
0^15
"KRN",8994,1907,0)
ORRC RESULTS BY DATE^LISTD^ORRCACK^4^S^^^1
"KRN",8994,1907,1,0)
^8994.01^2^2^3030415^^^
"KRN",8994,1907,1,1,0)
This call returns a list of orders for a patient with new results within
"KRN",8994,1907,1,2,0)
a given time frame, that have not been acknowledged by the user.
"KRN",8994,1907,2,0)
^8994.02A^5^5
"KRN",8994,1907,2,1,0)
PATIENT^1^^1^1
"KRN",8994,1907,2,1,1,0)
^^1^1^3030331^
"KRN",8994,1907,2,1,1,1,0)
This is the pointer to the patient in the Patient file #2.
"KRN",8994,1907,2,2,0)
USER^1^^1^2
"KRN",8994,1907,2,2,1,0)
^^1^1^3030331^
"KRN",8994,1907,2,2,1,1,0)
This is the pointer to the user in the New Person file #200.
"KRN",8994,1907,2,3,0)
START^1^^0^3
"KRN",8994,1907,2,3,1,0)
^8994.021^1^1^3030415^^
"KRN",8994,1907,2,3,1,1,0)
This is the date to start searching for orders, in the form YYYYMMDDHHMMSS.
"KRN",8994,1907,2,4,0)
STOP^1^^0^4
"KRN",8994,1907,2,4,1,0)
^8994.021^1^1^3030415^^
"KRN",8994,1907,2,4,1,1,0)
This is the date to stop searching for orders, in the form YYYYMMDDHHMMSS.
"KRN",8994,1907,2,5,0)
RESULTS^1^^0^5
"KRN",8994,1907,2,5,1,0)
^8994.021^2^2^3030415^^
"KRN",8994,1907,2,5,1,1,0)
This flag indicates whether to return the results with each order (true)
"KRN",8994,1907,2,5,1,2,0)
or just the list of order ID's (false).
"KRN",8994,1907,2,"B","PATIENT",1)

"KRN",8994,1907,2,"B","RESULTS",5)

"KRN",8994,1907,2,"B","START",3)

"KRN",8994,1907,2,"B","STOP",4)

"KRN",8994,1907,2,"B","USER",2)

"KRN",8994,1907,2,"PARAMSEQ",1,1)

"KRN",8994,1907,2,"PARAMSEQ",2,2)

"KRN",8994,1907,2,"PARAMSEQ",3,3)

"KRN",8994,1907,2,"PARAMSEQ",4,4)

"KRN",8994,1907,2,"PARAMSEQ",5,5)

"KRN",8994,1907,3,0)
^8994.03^9^9^3030415^^
"KRN",8994,1907,3,1,0)
This call returns a list of orders for PATIENT that were placed between
"KRN",8994,1907,3,2,0)
START and STOP and now have results available that have not yet been
"KRN",8994,1907,3,3,0)
acknowledged by USER, in the form:
"KRN",8994,1907,3,4,0)
  "Item=" _ ID ^ Text ^ Result Date in the form YYYYMMDDHHMMSS
"KRN",8994,1907,3,5,0)
where ID is the order number in the form "ORR:###".  If the RESULTS
"KRN",8994,1907,3,6,0)
parameter was true, other entries will also be included as:
"KRN",8994,1907,3,7,0)
  "Data=" _ Test ^ Value ^ Units ^ Reference Range ^ Critical flag, or
"KRN",8994,1907,3,8,0)
  "Text=" _ line of report text
"KRN",8994,1907,3,9,0)
repeated as needed until the next "Item" entry.
"KRN",8994,1908,-1)
0^2
"KRN",8994,1908,0)
ORRC APPTS BY PATIENT^APPT^ORRCEVT^4^S^^^1
"KRN",8994,1908,1,0)
^8994.01^2^2^3030415^^^^
"KRN",8994,1908,1,1,0)
This call returns a list of the patient's appointments, including
"KRN",8994,1908,1,2,0)
scheduled procedures, within a given time frame.
"KRN",8994,1908,2,0)
^8994.02A^4^4
"KRN",8994,1908,2,1,0)
PATIENT^1^^1^1
"KRN",8994,1908,2,1,1,0)
^^1^1^3030331^
"KRN",8994,1908,2,1,1,1,0)
This is the pointer to the patient in the Patient file #2.
"KRN",8994,1908,2,2,0)
START^1^^0^2
"KRN",8994,1908,2,2,1,0)
^8994.021^2^2^3030415^^^^
"KRN",8994,1908,2,2,1,1,0)
This is the date to start searching for appointments, in the form
"KRN",8994,1908,2,2,1,2,0)
YYYYMMDDHHMMSS.
"KRN",8994,1908,2,3,0)
STOP^1^^0^3
"KRN",8994,1908,2,3,1,0)
^8994.021^2^2^3030415^^
"KRN",8994,1908,2,3,1,1,0)
This is the date to stop searching for appointments, in the form
"KRN",8994,1908,2,3,1,2,0)
YYYYMMDDHHMMSS.
"KRN",8994,1908,2,4,0)
DETAILS^1^^0^4
"KRN",8994,1908,2,4,1,0)
^8994.021^2^2^3030415^^
"KRN",8994,1908,2,4,1,1,0)
This flag indicates whether to return the details or note text with each
"KRN",8994,1908,2,4,1,2,0)
appointment (true) or just the list of appointment ID's (false).
"KRN",8994,1908,2,"B","DETAILS",4)

"KRN",8994,1908,2,"B","PATIENT",1)

"KRN",8994,1908,2,"B","START",2)

"KRN",8994,1908,2,"B","STOP",3)

"KRN",8994,1908,2,"PARAMSEQ",1,1)

"KRN",8994,1908,2,"PARAMSEQ",2,2)

"KRN",8994,1908,2,"PARAMSEQ",3,3)

"KRN",8994,1908,2,"PARAMSEQ",4,4)

"KRN",8994,1908,3,0)
^8994.03^6^6^3030415^^
"KRN",8994,1908,3,1,0)
This call returns the list of appointment ID's, and optionally the details
"KRN",8994,1908,3,2,0)
or note text associated with the appointment, in the form:
"KRN",8994,1908,3,3,0)
  "Item=" _ ID ^ Text ^ Date in the form YYYYMMDDHHMMSS ^ Status
"KRN",8994,1908,3,4,0)
and also if DETAILS flag is true
"KRN",8994,1908,3,5,0)
  "Text=" _ line of document text
"KRN",8994,1908,3,6,0)
where ID is the appointment identifier string prefixed by "VST:".
"KRN",8994,1909,-1)
0^10
"KRN",8994,1909,0)
ORRC ORDERS BY PATIENT^LIST^ORRCOR^4^S^^^1
"KRN",8994,1909,1,0)
^8994.01^1^1^3030415^^^
"KRN",8994,1909,1,1,0)
This call returns a list of orders for a patient by various views.
"KRN",8994,1909,2,0)
^8994.02A^6^6
"KRN",8994,1909,2,1,0)
PATIENT^1^^1^1
"KRN",8994,1909,2,1,1,0)
^^1^1^3030331^
"KRN",8994,1909,2,1,1,1,0)
This is the pointer to the patient in the Patient file #2.
"KRN",8994,1909,2,2,0)
TYPE^1^^1^2
"KRN",8994,1909,2,2,1,0)
^^4^4^3030331^
"KRN",8994,1909,2,2,1,1,0)
This is a 3-letter string identifying the type of orders to be returned:
"KRN",8994,1909,2,2,1,2,0)
  ORN = Active Nursing (text) orders
"KRN",8994,1909,2,2,1,3,0)
  ORV = Orders unverified by nursing
"KRN",8994,1909,2,2,1,4,0)
  ORU = Unsigned orders by USER
"KRN",8994,1909,2,3,0)
USER^1^^^3
"KRN",8994,1909,2,3,1,0)
^^2^2^3030331^
"KRN",8994,1909,2,3,1,1,0)
This is the pointer to the user in the New Person file #200; it is required
"KRN",8994,1909,2,3,1,2,0)
for Unsigned Orders.
"KRN",8994,1909,2,4,0)
DETAILS^1^^^4
"KRN",8994,1909,2,4,1,0)
^^2^2^3030331^
"KRN",8994,1909,2,4,1,1,0)
This flag indicates whether to return the details with each order (true),
"KRN",8994,1909,2,4,1,2,0)
or just the list of order ID's (false).
"KRN",8994,1909,2,5,0)
START^1^^0^5
"KRN",8994,1909,2,5,1,0)
^^1^1^3030415^
"KRN",8994,1909,2,5,1,1,0)
This is the date to start searching for orders, in the form YYYMMDDHHMMSS.
"KRN",8994,1909,2,6,0)
STOP^1^^0^6
"KRN",8994,1909,2,6,1,0)
^^1^1^3030415^
"KRN",8994,1909,2,6,1,1,0)
This is the date to stop searching for orders, in the form YYYMMDDHHMMSS.
"KRN",8994,1909,2,"B","DETAILS",4)

"KRN",8994,1909,2,"B","PATIENT",1)

"KRN",8994,1909,2,"B","START",5)

"KRN",8994,1909,2,"B","STOP",6)

"KRN",8994,1909,2,"B","TYPE",2)

"KRN",8994,1909,2,"B","USER",3)

"KRN",8994,1909,2,"PARAMSEQ",1,1)

"KRN",8994,1909,2,"PARAMSEQ",2,2)

"KRN",8994,1909,2,"PARAMSEQ",3,3)

"KRN",8994,1909,2,"PARAMSEQ",4,4)

"KRN",8994,1909,2,"PARAMSEQ",5,5)

"KRN",8994,1909,2,"PARAMSEQ",6,6)

"KRN",8994,1909,3,0)
^8994.03^7^7^3030617^^^^
"KRN",8994,1909,3,1,0)
This call returns a list of orders, and optionally the details of each,
"KRN",8994,1909,3,2,0)
in the form:
"KRN",8994,1909,3,3,0)
  "Item=" _ ID ^ Title ^ Date (in the form YYYYMMDDHHMMSS) ^ Status
"KRN",8994,1909,3,4,0)
  "Order=" _ line of order text
"KRN",8994,1909,3,5,0)
and also if DETAILS is true
"KRN",8994,1909,3,6,0)
  "Text=" _ line of report text
"KRN",8994,1909,3,7,0)
where ID = TYPE_":"_order#;action#
"KRN",8994,1910,-1)
0^30
"KRN",8994,1910,0)
ORRC VITALS BY PATIENT^LIST^ORRCVIT^4^S^^^1
"KRN",8994,1910,1,0)
^8994.01^1^1^3030522^^^^
"KRN",8994,1910,1,1,0)
This call returns recent vitals measurements taken for the patient.
"KRN",8994,1910,2,0)
^8994.02A^4^4
"KRN",8994,1910,2,1,0)
PATIENT^1^^1^1
"KRN",8994,1910,2,1,1,0)
^8994.021^1^1^3030411^^
"KRN",8994,1910,2,1,1,1,0)
This is the pointer to the patient in the Patient file #2.
"KRN",8994,1910,2,2,0)
START^1^^0^2
"KRN",8994,1910,2,2,1,0)
^^3^3^3030522^
"KRN",8994,1910,2,2,1,1,0)
This is the date to start searching for vitals, in the form YYYYMMDDHHMMSS;
"KRN",8994,1910,2,2,1,2,0)
if no date range is specified, up to 5 sets of measurements will be 
"KRN",8994,1910,2,2,1,3,0)
returned.
"KRN",8994,1910,2,3,0)
STOP^1^^0^3
"KRN",8994,1910,2,3,1,0)
^8994.021^3^3^3030522^^
"KRN",8994,1910,2,3,1,1,0)
This is the date to stop searching for vitals, in the form YYYYMMDDHHMMSS;
"KRN",8994,1910,2,3,1,2,0)
if no date range is specified, up to 5 sets of measurements will be
"KRN",8994,1910,2,3,1,3,0)
returned.
"KRN",8994,1910,2,4,0)
DETAILS^1^^0^4
"KRN",8994,1910,2,4,1,0)
^^2^2^3030522^
"KRN",8994,1910,2,4,1,1,0)
This flag indicates whether to return the details of each vital sign
"KRN",8994,1910,2,4,1,2,0)
taken (true), or just the list of measurement set IDs (false).
"KRN",8994,1910,2,"B","DETAILS",3)

"KRN",8994,1910,2,"B","DETAILS",4)

"KRN",8994,1910,2,"B","MAX",2)

"KRN",8994,1910,2,"B","PATIENT",1)

"KRN",8994,1910,2,"B","START",2)

"KRN",8994,1910,2,"B","STOP",3)

"KRN",8994,1910,2,"PARAMSEQ",1,1)

"KRN",8994,1910,2,"PARAMSEQ",2,2)

"KRN",8994,1910,2,"PARAMSEQ",3,3)

"KRN",8994,1910,2,"PARAMSEQ",4,4)

"KRN",8994,1910,3,0)
^8994.03^17^17^3030522^^^^
"KRN",8994,1910,3,1,0)
This call returns recent sets of vitals measurements for a patient, in the
"KRN",8994,1910,3,2,0)
form:
"KRN",8994,1910,3,3,0)
  "Item=" _ ID ^ ^ Measurement Date in the form YYYMMDDHHMMSS
"KRN",8994,1910,3,4,0)
and also if DETAILS is true
"KRN",8994,1910,3,5,0)
  "Data=" _ Vital ^ Value ^ Unit ^ Metric ^ Unit ^ BMI ^ SO2 ^ Abn ^ Qual
"KRN",8994,1910,3,6,0)
where ID     = "VIT:" _ Patient pointer _";"_ measurement date
"KRN",8994,1910,3,7,0)
      Vital  = name of vital measurement
"KRN",8994,1910,3,8,0)
      Value  = value of measurement (alphanumeric)
"KRN",8994,1910,3,9,0)
      Unit   = unit of measure
"KRN",8994,1910,3,10,0)
      Metric = metric version of value, available for temp, weight, height,
"KRN",8994,1910,3,11,0)
                circumference/girth
"KRN",8994,1910,3,12,0)
      Unit   = metric unit of measure, when Metric is returned
"KRN",8994,1910,3,13,0)
      BMI    = Body Mass Index, returned only for Weight
"KRN",8994,1910,3,14,0)
      SO2    = Supplemental Oxygen (numeric), returned only for Pulse 
"KRN",8994,1910,3,15,0)
                Oximetry (PO2)
"KRN",8994,1910,3,16,0)
      Abn    = abnormal flag (* if value is considered critical else null)
"KRN",8994,1910,3,17,0)
      Qual   = list of qualifiers, as Q1;Q2;...;Qn
"KRN",8994,1912,-1)
0^8
"KRN",8994,1912,0)
ORRC NURS DASHBD PATIENTS^EN^ORRCDPT1^4^S^^^1
"KRN",8994,1912,1,0)
^8994.01^3^3^3030527^^
"KRN",8994,1912,1,1,0)
This call returns a list of patients with recent activity (new results,
"KRN",8994,1912,1,2,0)
vitals, or appointments) or items that need attention (tasks that are due,
"KRN",8994,1912,1,3,0)
generic text or unverified orders) for nursing users.
"KRN",8994,1912,2,0)
^8994.02A^2^2
"KRN",8994,1912,2,1,0)
USER^1^^1^1
"KRN",8994,1912,2,1,1,0)
^8994.021^1^1^3030410^^^^
"KRN",8994,1912,2,1,1,1,0)
This is the pointer to the user in the New Person file #200.
"KRN",8994,1912,2,2,0)
LIST^2^^1^2
"KRN",8994,1912,2,2,1,0)
^^8^8^3030410^
"KRN",8994,1912,2,2,1,1,0)
These are the lists from which to return patients with data, in the form 
"KRN",8994,1912,2,2,1,2,0)
"type:ien:clinic start:clinic stop" where
"KRN",8994,1912,2,2,1,3,0)
  Provider list = "p:<ien in New Person file #200>"
"KRN",8994,1912,2,2,1,4,0)
OE/RR Team list = "t:<ien in OE/RR List file #100.21>"
"KRN",8994,1912,2,2,1,5,0)
 Specialty list = "s:<ien in Facility Treating Specialty file #45.7>"
"KRN",8994,1912,2,2,1,6,0)
      Ward list = "w:<ien in Ward Location file #42>"
"KRN",8994,1912,2,2,1,7,0)
    Clinic list = "c:<ien in Hospital Location file #44>:<Start>:<Stop>"
"KRN",8994,1912,2,2,1,8,0)
                    where Start and Stop are FileMan-compatible dates
"KRN",8994,1912,2,"B","LIST",2)

"KRN",8994,1912,2,"B","USER",1)

"KRN",8994,1912,2,"PARAMSEQ",1,1)

"KRN",8994,1912,2,"PARAMSEQ",2,2)

"KRN",8994,1912,3,0)
^^22^22^3030527^
"KRN",8994,1912,3,1,0)
This call returns a list of patients for the Nursing Dashboard that are 
"KRN",8994,1912,3,2,0)
relevant for the specified user, along with lists of item ID's, as:
"KRN",8994,1912,3,3,0)
  "Patient=DFN^NAME^SSN^DOB^AGE"
"KRN",8994,1912,3,4,0)
  "Result=*ORR:##^ORR:##^...^ORR:##"
"KRN",8994,1912,3,5,0)
  "Task=*TSK:##^TSK:##^...^TSK:##"
"KRN",8994,1912,3,6,0)
  "Event=VST:ID^VST:ID^...^VST:ID"
"KRN",8994,1912,3,7,0)
  "Unverified=ORV:##^...^ORV:##"
"KRN",8994,1912,3,8,0)
  "Nursing=!ORN:##^...^ORN:##"
"KRN",8994,1912,3,9,0)
  "Vital=*VIT:ID^...^VIT:ID"
"KRN",8994,1912,3,10,0)
 where DFN  = Pointer to patient in Patient file #2
"KRN",8994,1912,3,11,0)
       NAME = Patient name from file #2 (i.e. LAST,FIRST MI)
"KRN",8994,1912,3,12,0)
       SSN  = SSN or Primary Long ID from file #2
"KRN",8994,1912,3,13,0)
       DOB  = Date of Birth of patient in the form YYYYMMDD
"KRN",8994,1912,3,14,0)
       AGE  = Current age of patient (or age at death, if deceased)
"KRN",8994,1912,3,15,0)
 and ORR:## = Identifier for an order w/results (##=file #100 pointer)
"KRN",8994,1912,3,16,0)
     TSK:## = Identifier for a task (##=file #102.3 pointer)
"KRN",8994,1912,3,17,0)
     VST:ID = Identifier for an alert about an appointment
"KRN",8994,1912,3,18,0)
     ORV:## = Identifier for an unverified order in (##=file #100 pointer)
"KRN",8994,1912,3,19,0)
     ORN:## = Identifier for a nursing order (##=file #100 pointer)
"KRN",8994,1912,3,20,0)
     VIT:ID = Identifier for a set of vitals measurements
"KRN",8994,1912,3,21,0)
       [a leading * indicates abnormal results or high priority, and
"KRN",8994,1912,3,22,0)
        a leading ! indicates a terminated or unreleased order]
"KRN",8994,1913,-1)
0^29
"KRN",8994,1913,0)
ORRC VITALS BY ID^DETAIL^ORRCVIT^4^S^^^1
"KRN",8994,1913,1,0)
^8994.01^2^2^3030411^^
"KRN",8994,1913,1,1,0)
This call returns the details of the measurement sets requested in the
"KRN",8994,1913,1,2,0)
list of ID's passed in.
"KRN",8994,1913,2,0)
^8994.02A^1^1
"KRN",8994,1913,2,1,0)
VITALS^2^^1^1
"KRN",8994,1913,2,1,1,0)
^8994.021^2^2^3030411^^
"KRN",8994,1913,2,1,1,1,0)
This is the list of measurement set identifiers, as VIT:ID where ID is
"KRN",8994,1913,2,1,1,2,0)
Patient#_";"_Date.Time as returned by the patient list RPCs.
"KRN",8994,1913,2,"B","VITALS",1)

"KRN",8994,1913,2,"PARAMSEQ",1,1)

"KRN",8994,1913,3,0)
^8994.03^16^16^3030522^^^
"KRN",8994,1913,3,1,0)
This call returns the values of the requested vitals measurements for a
"KRN",8994,1913,3,2,0)
patient, in the form:
"KRN",8994,1913,3,3,0)
  "Item=" _ ID ^ ^ Measurement Date in the form YYYMMDDHHMMSS
"KRN",8994,1913,3,4,0)
  "Data=" _ Vital ^ Value ^ Unit ^ Metric ^ Unit ^ BMI ^ SO2 ^ Abn ^ Qual
"KRN",8994,1913,3,5,0)
where ID     = "VIT:" _ Patient pointer _";"_ measurement date
"KRN",8994,1913,3,6,0)
      Vital  = name of vital measurement
"KRN",8994,1913,3,7,0)
      Value  = value of measurement (alphanumeric)
"KRN",8994,1913,3,8,0)
      Unit   = unit of measure
"KRN",8994,1913,3,9,0)
      Metric = metric version of value, available for temp, weight, height,
"KRN",8994,1913,3,10,0)
                circumference/girth
"KRN",8994,1913,3,11,0)
      Unit   = metric unit of measure, when Metric is returned
"KRN",8994,1913,3,12,0)
      BMI    = Body Mass Index, returned only for Weight
"KRN",8994,1913,3,13,0)
      SO2    = Supplemental Oxygen (numeric), returned only for Pulse 
"KRN",8994,1913,3,14,0)
                Oximetry (PO2)
"KRN",8994,1913,3,15,0)
      Abn    = abnormal flag (* if value is considered critical else null)
"KRN",8994,1913,3,16,0)
      Qual   = list of qualifiers, as Q1;Q2;...;Qn
"KRN",8994,1914,-1)
0^7
"KRN",8994,1914,0)
ORRC EVENTS BY PATIENT^LIST^ORRCEVT^4^S^^^1
"KRN",8994,1914,1,0)
^^1^1^3030411^
"KRN",8994,1914,1,1,0)
This call returns a list of the patient's alerted events.
"KRN",8994,1914,2,0)
^8994.02A^3^3
"KRN",8994,1914,2,1,0)
PATIENT^1^^1^1
"KRN",8994,1914,2,1,1,0)
^^1^1^3030411^
"KRN",8994,1914,2,1,1,1,0)
This is the pointer to the patient in the Patient file #2.
"KRN",8994,1914,2,2,0)
USER^1^^1^2
"KRN",8994,1914,2,2,1,0)
^^1^1^3030411^
"KRN",8994,1914,2,2,1,1,0)
This is the pointer to the user in the New Person file #200.
"KRN",8994,1914,2,3,0)
DETAILS^1^^0^3
"KRN",8994,1914,2,3,1,0)
^^2^2^3030411^
"KRN",8994,1914,2,3,1,1,0)
This flag indicates whether to return the details or note text with each
"KRN",8994,1914,2,3,1,2,0)
event (true) or just the list of event ID's (false).
"KRN",8994,1914,2,"B","DETAILS",3)

"KRN",8994,1914,2,"B","PATIENT",1)

"KRN",8994,1914,2,"B","USER",2)

"KRN",8994,1914,2,"PARAMSEQ",1,1)

"KRN",8994,1914,2,"PARAMSEQ",2,2)

"KRN",8994,1914,2,"PARAMSEQ",3,3)

"KRN",8994,1914,3,0)
^^6^6^3030411^
"KRN",8994,1914,3,1,0)
This call returns the list of event ID's, and optionally the details or
"KRN",8994,1914,3,2,0)
note text associated with the event, in the form:
"KRN",8994,1914,3,3,0)
  "Item=" _ ID ^ Text ^ Date in the form YYYYMMDDHHMMSS
"KRN",8994,1914,3,4,0)
and also if DETAILS is true
"KRN",8994,1914,3,5,0)
  "Text=" _ line of document text
"KRN",8994,1914,3,6,0)
where ID is the alert identifier string prefixed by "VST:".
"KRN",8994,1915,-1)
0^9
"KRN",8994,1915,0)
ORRC ORDERS BY ID^DETAIL^ORRCOR^4^S^^^1
"KRN",8994,1915,1,0)
^8994.01^1^1^3030411^^
"KRN",8994,1915,1,1,0)
This call returns the Detailed Display report for the given order IDs.
"KRN",8994,1915,2,0)
^8994.02A^1^1
"KRN",8994,1915,2,1,0)
ORDERS^2^^1^1
"KRN",8994,1915,2,1,1,0)
^8994.021^3^3^3030411^^
"KRN",8994,1915,2,1,1,1,0)
This is the list of order IDs in the form ORx:##, where x denotes the view
"KRN",8994,1915,2,1,1,2,0)
that this order belongs to int he dashboard and ## is the pointer to the
"KRN",8994,1915,2,1,1,3,0)
Orders file #100.
"KRN",8994,1915,2,"B","ORDERS",1)

"KRN",8994,1915,2,"PARAMSEQ",1,1)

"KRN",8994,1915,3,0)
^8994.03^6^6^3030617^^^^
"KRN",8994,1915,3,1,0)
This call returns the list of orders with the Detailed Display report of
"KRN",8994,1915,3,2,0)
each, in the form:
"KRN",8994,1915,3,3,0)
  "Item=" _ ID ^ Title ^ Date (in the form YYYYMMDDHHMMSS) ^ Status
"KRN",8994,1915,3,4,0)
  "Order=" _ line of order text
"KRN",8994,1915,3,5,0)
  "Text=" _ line of report text
"KRN",8994,1915,3,6,0)
where ID = TYPE_":"_order#;action#.
"KRN",8994,1916,-1)
0^12
"KRN",8994,1916,0)
ORRC ORDERS VERIFY^VERIFY^ORRCOR^2^S
"KRN",8994,1916,1,0)
^8994.01^1^1^3030415^^
"KRN",8994,1916,1,1,0)
This call accepts a list of order IDs to be marked as verified.
"KRN",8994,1916,2,0)
^8994.02A^2^2
"KRN",8994,1916,2,1,0)
USER^1^^1^1
"KRN",8994,1916,2,1,1,0)
^^1^1^3030415^
"KRN",8994,1916,2,1,1,1,0)
This is the pointer to the user in the New Person file #200.
"KRN",8994,1916,2,2,0)
ORDERS^2^^1^2
"KRN",8994,1916,2,2,1,0)
^^3^3^3030415^
"KRN",8994,1916,2,2,1,1,0)
This is a list of order identifiers in the form ORV:order#;action#, where
"KRN",8994,1916,2,2,1,2,0)
order# is the pointer to the Orders file #100 and action# is the IEN in
"KRN",8994,1916,2,2,1,3,0)
the Order Actions sub-file.
"KRN",8994,1916,2,"B","ORDERS",2)

"KRN",8994,1916,2,"B","USER",1)

"KRN",8994,1916,2,"PARAMSEQ",1,1)

"KRN",8994,1916,2,"PARAMSEQ",2,2)

"KRN",8994,1916,3,0)
^8994.03^3^3^3030617^^^
"KRN",8994,1916,3,1,0)
This call returns a list of the order identifiers passed into the call as
"KRN",8994,1916,3,2,0)
well as a flag indicating if the requested update was successful, in the
"KRN",8994,1916,3,3,0)
form ID^1 or ID^0^error if not.
"KRN",8994,1917,-1)
0^11
"KRN",8994,1917,0)
ORRC ORDERS COMPLETE^COMP^ORRCOR^2^S
"KRN",8994,1917,1,0)
^^1^1^3030415^
"KRN",8994,1917,1,1,0)
This call accepts a list of order IDs to be marked as completed.
"KRN",8994,1917,2,0)
^8994.02A^2^2
"KRN",8994,1917,2,1,0)
USER^1^^1^1
"KRN",8994,1917,2,1,1,0)
^^1^1^3030415^
"KRN",8994,1917,2,1,1,1,0)
This is the pointer to the user in the New Person file #200.
"KRN",8994,1917,2,2,0)
ORDERS^2^^1^2
"KRN",8994,1917,2,2,1,0)
^^3^3^3030415^
"KRN",8994,1917,2,2,1,1,0)
This is a list of order identifiers in the form ORN:order#;action# where
"KRN",8994,1917,2,2,1,2,0)
order# is the pointer to the Orders file #100 and action# is the IEN in
"KRN",8994,1917,2,2,1,3,0)
the Order Actions sub-file.
"KRN",8994,1917,2,"B","ORDERS",2)

"KRN",8994,1917,2,"B","USER",1)

"KRN",8994,1917,2,"PARAMSEQ",1,1)

"KRN",8994,1917,2,"PARAMSEQ",2,2)

"KRN",8994,1917,3,0)
^8994.03^3^3^3030617^^
"KRN",8994,1917,3,1,0)
This call returns a list of the order identifiers passed into the call as
"KRN",8994,1917,3,2,0)
well as a flag indicating if the requested update was successful, in the
"KRN",8994,1917,3,3,0)
form ID^1 or ID^0^error if not.
"KRN",8994,1918,-1)
0^33
"KRN",8994,1918,0)
ORRCQLPT PTDFN^PTDFN^ORRCQLPT^1^^^^^.1
"KRN",8994,1918,1,0)
^^1^1^3030428^
"KRN",8994,1918,1,1,0)
RETURNS THE DFN GIVEN A REPORT LINE IDENTIFIER
"KRN",8994,1918,2,0)
^8994.02A^1^1
"KRN",8994,1918,2,1,0)
OID^1^^1^1
"KRN",8994,1918,2,1,1,0)
^^1^1^3030428^
"KRN",8994,1918,2,1,1,1,0)
QUERY REPORT LINE IDENTIFIER
"KRN",8994,1918,2,"B","OID",1)

"KRN",8994,1918,2,"PARAMSEQ",1,1)

"KRN",8994,1919,-1)
0^32
"KRN",8994,1919,0)
ORRCQLPT PTDEMOS^PTDEMOS^ORRCQLPT^1
"KRN",8994,1919,1,0)
^^2^2^3030430^
"KRN",8994,1919,1,1,0)
Returns patient demographics info in the form:
"KRN",8994,1919,1,2,0)
<dfn>^<name>^<ssn>^<dob>^<age>
"KRN",8994,1919,2,0)
^8994.02A^1^1
"KRN",8994,1919,2,1,0)
DFN^1
"KRN",8994,1919,2,"B","DFN",1)

"KRN",8994,1921,-1)
0^4
"KRN",8994,1921,0)
ORRC DASHBOARD PATIENTS^MAIN^ORRCDPT^4^S^^^1
"KRN",8994,1921,1,0)
^^2^2^3030527^
"KRN",8994,1921,1,1,0)
This call returns a list of patients with recent activity or items that
"KRN",8994,1921,1,2,0)
need attention for the specified user.
"KRN",8994,1921,2,0)
^8994.02A^3^3
"KRN",8994,1921,2,1,0)
USER^1^^1^1
"KRN",8994,1921,2,1,1,0)
^8994.021^1^1^3030527^^^^
"KRN",8994,1921,2,1,1,1,0)
This is the pointer to the user in the New Person file #200.
"KRN",8994,1921,2,2,0)
LIST^2^^0^3
"KRN",8994,1921,2,2,1,0)
^8994.021^8^8^3030527^^
"KRN",8994,1921,2,2,1,1,0)
These are the lists from which to return patients with data, in the form 
"KRN",8994,1921,2,2,1,2,0)
"type:ien:clinic start:clinic stop" where
"KRN",8994,1921,2,2,1,3,0)
  Provider list = "p:<ien in New Person file #200>"
"KRN",8994,1921,2,2,1,4,0)
OE/RR Team list = "t:<ien in OE/RR List file #100.21>"
"KRN",8994,1921,2,2,1,5,0)
 Specialty list = "s:<ien in Facility Treating Specialty file #45.7>"
"KRN",8994,1921,2,2,1,6,0)
      Ward list = "w:<ien in Ward Location file #42>"
"KRN",8994,1921,2,2,1,7,0)
    Clinic list = "c:<ien in Hospital Location file #44>:<Start>:<Stop>"
"KRN",8994,1921,2,2,1,8,0)
                    where Start and Stop are FileMan-compatible dates
"KRN",8994,1921,2,3,0)
TYPE^1^^1^2
"KRN",8994,1921,2,3,1,0)
^^1^1^3030527^
"KRN",8994,1921,2,3,1,1,0)
This is the type of dashboard view desired, (C)linician or (N)urse.
"KRN",8994,1921,2,"B","LIST",2)

"KRN",8994,1921,2,"B","LIST",3)

"KRN",8994,1921,2,"B","TYPE",2)

"KRN",8994,1921,2,"B","TYPE",3)

"KRN",8994,1921,2,"B","USER",1)

"KRN",8994,1921,2,"PARAMSEQ",1,1)

"KRN",8994,1921,2,"PARAMSEQ",2,2)

"KRN",8994,1921,2,"PARAMSEQ",2,3)

"KRN",8994,1921,2,"PARAMSEQ",3,2)

"KRN",8994,1921,2,"PARAMSEQ",3,3)

"KRN",8994,1921,3,0)
^8994.03^24^24^3030919^^^
"KRN",8994,1921,3,1,0)
This call returns a list of patients for the Care Management Dashboards
"KRN",8994,1921,3,2,0)
that are relevant for the specified user, including item ID's, as:
"KRN",8994,1921,3,3,0)
  "Patient=DFN^NAME^SSN^DOB^AGE"
"KRN",8994,1921,3,4,0)
  "Result=*ORR:##^ORR:##^...^ORR:##"
"KRN",8994,1921,3,5,0)
  "Task=*TSK:##^TSK:##^...^TSK:##"
"KRN",8994,1921,3,6,0)
  "Event=VST:ID^VST:ID^...^VST:ID"
"KRN",8994,1921,3,7,0)
  "Error=^<Error Description>"
"KRN",8994,1921,3,8,0)
 and also if TYPE="N":
"KRN",8994,1921,3,9,0)
  "Unverified=ORV:##^...^ORV:##"
"KRN",8994,1921,3,10,0)
  "Nursing=!ORN:##^...^ORN:##"
"KRN",8994,1921,3,11,0)
  "Vital=*VIT:ID^...^VIT:ID"
"KRN",8994,1921,3,12,0)
 where DFN  = Pointer to patient in Patient file #2
"KRN",8994,1921,3,13,0)
       NAME = Patient name from file #2 (i.e. LAST,FIRST MI)
"KRN",8994,1921,3,14,0)
       SSN  = SSN or Primary Long ID from file #2
"KRN",8994,1921,3,15,0)
       DOB  = Date of Birth of patient in the form YYYYMMDD
"KRN",8994,1921,3,16,0)
       AGE  = Current age of patient (or age at death, if deceased)
"KRN",8994,1921,3,17,0)
 and ORR:## = Identifier for an order w/results (##=file #100 pointer)
"KRN",8994,1921,3,18,0)
     TSK:## = Identifier for a task (##=file #102.3 pointer)
"KRN",8994,1921,3,19,0)
     VST:ID = Identifier for an alert about an appointment
"KRN",8994,1921,3,20,0)
     ORV:## = Identifier for an unverified order in (##=file #100 pointer)
"KRN",8994,1921,3,21,0)
     ORN:## = Identifier for a nursing order (##=file #100 pointer)
"KRN",8994,1921,3,22,0)
     VIT:ID = Identifier for a set of vitals measurements
"KRN",8994,1921,3,23,0)
       [a leading * indicates abnormal results or high priority, and
"KRN",8994,1921,3,24,0)
        a leading ! indicates a terminated or unreleased order]
"KRN",8994,1923,-1)
0^1
"KRN",8994,1923,0)
ORRC ALERTS BY PATIENT^PAT^ORRCXQ^4^S^^^1
"KRN",8994,1923,1,0)
^8994.01^1^1^3030606^^
"KRN",8994,1923,1,1,0)
This call returns a list of the patient's non-ADT alerts.
"KRN",8994,1923,2,0)
^8994.02A^2^2
"KRN",8994,1923,2,1,0)
PATIENT^1^^1^1
"KRN",8994,1923,2,1,1,0)
^8994.021^1^1^3030606^^
"KRN",8994,1923,2,1,1,1,0)
This is the pointer to the patient in the Patient file #2.
"KRN",8994,1923,2,2,0)
USER^1^^1^2
"KRN",8994,1923,2,2,1,0)
^8994.021^1^1^3030606^^
"KRN",8994,1923,2,2,1,1,0)
This is the pointer to the user in the New Person file #200.
"KRN",8994,1923,2,"B","PATIENT",1)

"KRN",8994,1923,2,"B","USER",2)

"KRN",8994,1923,2,"PARAMSEQ",1,1)

"KRN",8994,1923,2,"PARAMSEQ",2,2)

"KRN",8994,1923,3,0)
^^3^3^3030606^
"KRN",8994,1923,3,1,0)
This call returns the list of alert ID's, in the form:
"KRN",8994,1923,3,2,0)
  "Item=" _ ID ^ Text ^ Date in the form YYYYMMDDHHMMSS
"KRN",8994,1923,3,3,0)
where ID is the alert identifier string prefixed by "NOT:".
"KRN",8994,1982,-1)
0^26
"KRN",8994,1982,0)
ORRC TASKS DUE BY PATIENT^DUE^ORRCTSK^2^S
"KRN",8994,1982,1,0)
^8994.01^1^1^3030331^^
"KRN",8994,1982,1,1,0)
This call returns a list of tasks for a patient that are now due.
"KRN",8994,1982,2,0)
^8994.02A^1^1
"KRN",8994,1982,2,1,0)
PATIENT^1^^1^1
"KRN",8994,1982,2,1,1,0)
^^1^1^3030331^
"KRN",8994,1982,2,1,1,1,0)
This is the pointer to the patient in the Patient file #2.
"KRN",8994,1982,2,"B","PATIENT",1)

"KRN",8994,1982,2,"PARAMSEQ",1,1)

"KRN",8994,1982,3,0)
^8994.03^14^14^3030331^^
"KRN",8994,1982,3,1,0)
This call returns a list of tasks that are due, in the form:
"KRN",8994,1982,3,2,0)
   ID^Subject^Created^ByWhom^Patient^Priority^Due^Completed^ByWhom^Items
"KRN",8994,1982,3,3,0)
  where ID        = TSK:##, where ## is the pointer to #102.3
"KRN",8994,1982,3,4,0)
        Subject   = Text subject of task
"KRN",8994,1982,3,5,0)
        Created   = date task was created, as YYYYMMDDHHMMSS
"KRN",8994,1982,3,6,0)
        ByWhom    = user who created task, as pointer to #200
"KRN",8994,1982,3,7,0)
        Patient   = patient that task is for, as pointer to #2
"KRN",8994,1982,3,8,0)
        Priority  = H, M, or L
"KRN",8994,1982,3,9,0)
        Due       = date task is due to be completed, as YYYMMDD[HHMM]
"KRN",8994,1982,3,10,0)
        Completed = date task was completed as, YYYYMMDDHHMM
"KRN",8994,1982,3,11,0)
        ByWhom    = user who completed task, as pointer to #200
"KRN",8994,1982,3,12,0)
        Items     = linked items as ID,ID,...,ID where ID is XXX:### as
"KRN",8994,1982,3,13,0)
                    DOC:### = unsigned documents in #8925
"KRN",8994,1982,3,14,0)
                    ORR:### = order results in #100
"KRN",8994,1983,-1)
0^20
"KRN",8994,1983,0)
ORRC TASK CANCEL^CANC^ORRCTSK^2^S
"KRN",8994,1983,1,0)
^8994.01^1^1^3030606^^
"KRN",8994,1983,1,1,0)
This call accepts a list of patient task ID's to be marked as canceled.
"KRN",8994,1983,2,0)
^8994.02A^2^2
"KRN",8994,1983,2,1,0)
USER^1^^1^1
"KRN",8994,1983,2,1,1,0)
^8994.021^1^1^3030606^^
"KRN",8994,1983,2,1,1,1,0)
This is the pointer to the user in the New Person file #200.
"KRN",8994,1983,2,2,0)
TASKS^2^^1^2
"KRN",8994,1983,2,2,1,0)
^8994.021^2^2^3030606^^
"KRN",8994,1983,2,2,1,1,0)
This is a list of task identifiers in the form TSK:##, where ## is the
"KRN",8994,1983,2,2,1,2,0)
pointer to the Patient Task file #102.3.
"KRN",8994,1983,2,"B","TASKS",2)

"KRN",8994,1983,2,"B","USER",1)

"KRN",8994,1983,2,"PARAMSEQ",1,1)

"KRN",8994,1983,2,"PARAMSEQ",2,2)

"KRN",8994,1983,3,0)
^8994.03^3^3^3030606^^^
"KRN",8994,1983,3,1,0)
This call returns a list of the task identifiers passed into the call as
"KRN",8994,1983,3,2,0)
well as a flag indicating if the requested update was successful, in the
"KRN",8994,1983,3,3,0)
form ID ^ 1 or 0 ^ error message (if 0).
"MBREQ")
0
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PGL",102.21,0,5,5)
OWNER^P200'^VA(200,^0;5^Q
"PGL",102.21,0,6,6)
PARENT^P102.21'^ORD(102.21,^0;6^Q
"PGL",102.211,0,2,2)
CRITERION^P102.21'^ORD(102.21,^0;2^Q
"PGL",102.211,0,3,3)
CONSTRAINT^P102.22'^ORD(102.22,^0;3^Q
"PGL",102.212,0,2,2)
DISPLAY FIELD^P102.24'^ORD(102.24,^0;2^Q
"PGL",8935.91,0,4,.04)
PARENT ID^P8935.91'^XHD(8935.91,^0;4^Q
"PGL",8935.912,0,2,.02)
PARAMETER DEFINITION^P8989.51'^XTV(8989.51,^0;2^Q
"PGL",8935.913,0,2,.02)
SUBCATEGORY^P8935.91^XHD(8935.91,^0;2^Q
"PKG",379,-1)
1^1
"PKG",379,0)
CARE MANAGEMENT^ORRC^Care Mgt Modules
"PKG",379,20,0)
^9.402P^^
"PKG",379,22,0)
^9.49I^1^1
"PKG",379,22,1,0)
1.0^3040116^3030729^1411
"PKG",379,22,1,1,0)
^^4^4^3040116
"PKG",379,22,1,1,1,0)
This package contains the Care Management modules.  These modules include 
"PKG",379,22,1,1,2,0)
the clinician dashboard, the nursing dashboard, the query tool, and the 
"PKG",379,22,1,1,3,0)
task editor.  Options are used to grant access to the modules or 
"PKG",379,22,1,1,4,0)
components within the modules.
"PKG",379,"VERSION")
1.0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
16
"RTN","ORRCACK")
0^2^B69951493
"RTN","ORRCACK",1,0)
ORRCACK ;SLC/MKB - Result Acknowledgement file utilities ; 25 Jul 2003  9:31 AM
"RTN","ORRCACK",2,0)
 ;;1.0;CARE MANAGEMENT;;Jul 15, 2003
"RTN","ORRCACK",3,0)
 ;
"RTN","ORRCACK",4,0)
 ; ID = "ORR:"_order# everywhere below
"RTN","ORRCACK",5,0)
 ;
"RTN","ORRCACK",6,0)
PARAM(PROV) ; -- Return ORRC ACTIVATION DATE parameter for PROV
"RTN","ORRCACK",7,0)
 N SERV,Y S PROV=+$G(PROV),SERV=+$G(^VA(200,PROV,5))
"RTN","ORRCACK",8,0)
 S Y=$$GET^XPAR("ALL^USR.`"_PROV_"^SRV.`"_SERV,"ORRC ACTIVATION DATE")
"RTN","ORRCACK",9,0)
 Q Y
"RTN","ORRCACK",10,0)
 ;
"RTN","ORRCACK",11,0)
ADD(ORDER,PROV,ACK) ; -- Create new entry in file #102.4 when results are posted
"RTN","ORRCACK",12,0)
 ;  [called from HL7 messages: ORMLR, ORMRA, ORMGMRC]
"RTN","ORRCACK",13,0)
 Q:'$G(ORDER)  N X,Y,DIC,DO,STOP
"RTN","ORRCACK",14,0)
 I '$G(ACK),+$G(PROV) D  Q:$G(STOP)
"RTN","ORRCACK",15,0)
 . I $D(^ORA(102.4,"ACK",PROV,+$G(ORDER))) S STOP=1 Q  ;exists
"RTN","ORRCACK",16,0)
 . N ACTDT S ACTDT=$$PARAM(PROV)
"RTN","ORRCACK",17,0)
 . I (ACTDT<1)!(ACTDT>DT) S STOP=1 Q  ;not [yet] active
"RTN","ORRCACK",18,0)
 S DIC="^ORA(102.4,",DIC(0)="" S:$G(PROV) DIC("DR")="2////"_+PROV
"RTN","ORRCACK",19,0)
 S X=+ORDER D FILE^DICN
"RTN","ORRCACK",20,0)
 Q
"RTN","ORRCACK",21,0)
 ;
"RTN","ORRCACK",22,0)
ACK(ORY,ORUSR,ORDER) ; -- Acknowledge results of ORDERs by ORUSR
"RTN","ORRCACK",23,0)
 ; where ORDER(#) = ID ^ 1 or 0, if acknowledged
"RTN","ORRCACK",24,0)
 ; Returns ORY(#) = ID ^ 1 or 0, if successful
"RTN","ORRCACK",25,0)
 ; RPC = ORRC RESULTS ACKNOWLEDGE
"RTN","ORRCACK",26,0)
 Q:'$G(ORUSR)  N X,Y,DA,DR,DIE,ORI,ORIFN,ORACK,ORXQ
"RTN","ORRCACK",27,0)
 S DIE="^ORA(102.4,",ORUSR=+$G(ORUSR)
"RTN","ORRCACK",28,0)
 S ORI="" F  S ORI=$O(ORDER(ORI)) Q:ORI=""  D
"RTN","ORRCACK",29,0)
 . S X=ORDER(ORI),ORIFN=$P(X,U),ORACK=+$P(X,U,2)
"RTN","ORRCACK",30,0)
 . S ORY(ORI)=ORIFN_"^0",ORIFN=+$P(ORIFN,":",2) Q:ORIFN<1
"RTN","ORRCACK",31,0)
 . I '$D(^ORA(102.4,"ACK",+ORUSR,+ORIFN)) D ADD(ORIFN,ORUSR,1)
"RTN","ORRCACK",32,0)
 . S DA=+$O(^ORA(102.4,"ACK",+ORUSR,+ORIFN,0)) Q:DA<1
"RTN","ORRCACK",33,0)
 . S DR="3///"_$S(ORACK:"NOW",1:"@") D ^DIE
"RTN","ORRCACK",34,0)
 . S $P(ORY(ORI),U,2)=1,ORXQ(+ORIFN)=""
"RTN","ORRCACK",35,0)
 D:$D(ORXQ) RSLT^ORRCXQ(.ORXQ,ORUSR)
"RTN","ORRCACK",36,0)
 Q
"RTN","ORRCACK",37,0)
 ;
"RTN","ORRCACK",38,0)
DEL(DA) ; -- Delete old acknowledgment stub
"RTN","ORRCACK",39,0)
 N DIK S DIK="^ORA(102.4,"
"RTN","ORRCACK",40,0)
 I $G(DA),'$P($G(^ORA(102.4,DA,0)),U,3) D ^DIK
"RTN","ORRCACK",41,0)
 Q
"RTN","ORRCACK",42,0)
 ;
"RTN","ORRCACK",43,0)
PATS(ORY,ORUSR) ; -- Return list of patients for whom ORUSR has unack'd results
"RTN","ORRCACK",44,0)
 ; in @ORY@(PAT) = #orders ^ 1 if any are abnormal
"RTN","ORRCACK",45,0)
 ;    @ORY@(PAT,ID) = * if abnormal, else null
"RTN","ORRCACK",46,0)
 ; [from ORRCDPT]
"RTN","ORRCACK",47,0)
 N ORIFN,PAT,ABN,X,CNT,ACTDT,RDT,ACK
"RTN","ORRCACK",48,0)
 S ORUSR=+$G(ORUSR),ACTDT=$$PARAM(ORUSR)
"RTN","ORRCACK",49,0)
 S ORY=$NA(^TMP($J,"ORRCRSLT")) K @ORY,^TMP($J,"ORSLT")
"RTN","ORRCACK",50,0)
 S ORIFN=0 F  S ORIFN=+$O(^ORA(102.4,"ACK",ORUSR,ORIFN)) Q:ORIFN<1  D
"RTN","ORRCACK",51,0)
 . Q:+$P($G(^OR(100,ORIFN,3)),U,3)=9  ;partial results
"RTN","ORRCACK",52,0)
 . S PAT=+$P($G(^OR(100,ORIFN,0)),U,2),RDT=+$G(^(7)),ABN=$P($G(^(7)),U,2)
"RTN","ORRCACK",53,0)
 . I $D(^TMP($J,"ORRCLST")),'$D(^TMP($J,"ORRCY",PAT)) Q  ;pt not on list
"RTN","ORRCACK",54,0)
 . I 'ACTDT!(RDT<ACTDT) S ACK=+$O(^ORA(102.4,"ACK",ORUSR,ORIFN,0)) D DEL(ACK) Q  ;remove old stub
"RTN","ORRCACK",55,0)
 . S X=$G(ORY(PAT)),CNT=+X
"RTN","ORRCACK",56,0)
 . S CNT=CNT+1,@ORY@(PAT)=CNT_$S(ABN!$P(X,U,2):"^1",1:"")
"RTN","ORRCACK",57,0)
 . S @ORY@(PAT,"ORR:"_ORIFN)=$S(ABN:"*",1:"")
"RTN","ORRCACK",58,0)
 . D ORSLT ;temp xref for PATS^ORRCEVT
"RTN","ORRCACK",59,0)
 Q
"RTN","ORRCACK",60,0)
 ;
"RTN","ORRCACK",61,0)
ORSLT ; -- Add ORIFN to ^TMP($J,"ORSLT",PAT,pkgid) for use by Events
"RTN","ORRCACK",62,0)
 N OR0,OR4,NMSP,X
"RTN","ORRCACK",63,0)
 S OR0=$G(^OR(100,+ORIFN,0)),OR4=$G(^(4)),X=""
"RTN","ORRCACK",64,0)
 S NMSP=$$NMSP^ORCD($P(OR0,U,14)) I NMSP="RA" D  Q
"RTN","ORRCACK",65,0)
 . N IDX S IDX="^RADPT(""AO"",+OR4,PAT)"
"RTN","ORRCACK",66,0)
 . F  S IDX=$Q(@IDX) Q:$P(IDX,",",2)'=+OR4  Q:$P(IDX,",",3)'=PAT  S X=$P(IDX,",",4)_"~"_$P(IDX,",",5),^TMP($J,"ORSLT",PAT,X)=+ORIFN
"RTN","ORRCACK",67,0)
 I NMSP="LR" S X=+ORIFN_"@OR"
"RTN","ORRCACK",68,0)
 I NMSP="GMRC" S X=+OR4
"RTN","ORRCACK",69,0)
 S:$L(X) ^TMP($J,"ORSLT",PAT,X)=+ORIFN
"RTN","ORRCACK",70,0)
 Q
"RTN","ORRCACK",71,0)
 ;
"RTN","ORRCACK",72,0)
IDS(ORY,ORPAT,ORUSR,SDATE,EDATE) ; -- Return new results for ORPAT
"RTN","ORRCACK",73,0)
 ; between ORBEG & OREND that ORUSR has not acknowledged
"RTN","ORRCACK",74,0)
 ; in @ORY@(ORPAT) = #orders ^ 1 if any are abnormal
"RTN","ORRCACK",75,0)
 ;    @ORY@(ORPAT,ID) = * if abnormal, else null
"RTN","ORRCACK",76,0)
 ; [from ORRCDPT1]
"RTN","ORRCACK",77,0)
 N CNT,ORIFN,ORDT,ABN,X
"RTN","ORRCACK",78,0)
 S ORY=$NA(^TMP($J,"ORRCRSLT")) K @ORY
"RTN","ORRCACK",79,0)
 S ORUSR=+$G(ORUSR),ORPAT=+$G(ORPAT)_";DPT(",CNT=0
"RTN","ORRCACK",80,0)
 S SDATE=$G(SDATE),EDATE=$G(EDATE) D DT1 ;defaults ??
"RTN","ORRCACK",81,0)
 S ORDT=SDATE F  S ORDT=$O(^OR(100,"ARS",ORPAT,ORDT)) Q:ORDT<1  Q:ORDT>EDATE  D
"RTN","ORRCACK",82,0)
 . S ORIFN=0 F  S ORIFN=+$O(^OR(100,"ARS",ORPAT,ORDT,ORIFN)) Q:ORIFN<1  D
"RTN","ORRCACK",83,0)
 .. Q:+$P($G(^OR(100,ORIFN,3)),U,3)=9  ;partial results
"RTN","ORRCACK",84,0)
 .. Q:$$ACKD(ORIFN,ORUSR)  S CNT=CNT+1,X=$P($G(^OR(100,ORIFN,7)),U,2)
"RTN","ORRCACK",85,0)
 .. S @ORY@(+ORPAT,"ORR:"_ORIFN)=$S(X:"*",1:"") S:X ABN=1
"RTN","ORRCACK",86,0)
 S:CNT @ORY@(+ORPAT)=CNT_U_$G(ABN)
"RTN","ORRCACK",87,0)
 Q
"RTN","ORRCACK",88,0)
 ;
"RTN","ORRCACK",89,0)
LIST(ORY,ORUSR,ORPAT,ORSLT) ; -- Return orders by ORUSR for ORPAT with new results
"RTN","ORRCACK",90,0)
 ; in @ORY@(#) = Item=ID^Text^ResultDate in HL7 format, and also if ORSLT
"RTN","ORRCACK",91,0)
 ;             = Data=Test^Value^Units^ReferenceRange^CriticalFlag
"RTN","ORRCACK",92,0)
 ;             = Cmnt=result comment
"RTN","ORRCACK",93,0)
 ;            or Text=line of report text
"RTN","ORRCACK",94,0)
 ; RPC = ORRC RESULTS BY PATIENT
"RTN","ORRCACK",95,0)
 N ORN,ORIFN,ORTX,ORDT
"RTN","ORRCACK",96,0)
 S ORY=$NA(^TMP($J,"ORRCRSLT")) K @ORY
"RTN","ORRCACK",97,0)
 S ORUSR=+$G(ORUSR),ORPAT=+$G(ORPAT),ORN=0
"RTN","ORRCACK",98,0)
 S ORIFN=0 F  S ORIFN=+$O(^ORA(102.4,"ACK",ORUSR,ORIFN)) Q:ORIFN<1  I +$P($G(^OR(100,ORIFN,0)),U,2)=ORPAT D
"RTN","ORRCACK",99,0)
 . Q:+$P($G(^OR(100,ORIFN,3)),U,3)=9  ;partial results
"RTN","ORRCACK",100,0)
 . D TEXT^ORQ12(.ORTX,ORIFN) S ORDT=+$G(^OR(100,ORIFN,7))
"RTN","ORRCACK",101,0)
 . S ORN=ORN+1,@ORY@(ORN)="Item=ORR:"_ORIFN_U_ORTX(1)_U_$$FMTHL7^XLFDT(ORDT)
"RTN","ORRCACK",102,0)
 . I $G(ORSLT) D ORD ;add results data to ORY(#)
"RTN","ORRCACK",103,0)
 ;S ORY(0)=CNT
"RTN","ORRCACK",104,0)
 Q
"RTN","ORRCACK",105,0)
 ;
"RTN","ORRCACK",106,0)
LISTD(ORY,ORPAT,ORUSR,ORBEG,OREND,ORSLT) ; -- Return new results for ORPAT
"RTN","ORRCACK",107,0)
 ; between ORBEG & OREND that ORUSR has not acknowledged
"RTN","ORRCACK",108,0)
 ; in @ORY@(#) = Item=ID^Text^ResultDate in HL7 format, and also if ORSLT
"RTN","ORRCACK",109,0)
 ;             = Data=Test^Value^Units^ReferenceRange^CriticalFlag
"RTN","ORRCACK",110,0)
 ;             = Cmnt=result comment
"RTN","ORRCACK",111,0)
 ;            or Text=line of report text
"RTN","ORRCACK",112,0)
 ; RPC = ORRC RESULTS BY DATE
"RTN","ORRCACK",113,0)
 N ORN,ORIFN,ORTX,ORDT,SDATE,EDATE
"RTN","ORRCACK",114,0)
 S ORY=$NA(^TMP($J,"ORRCRSLT")) K @ORY
"RTN","ORRCACK",115,0)
 S ORUSR=+$G(ORUSR),ORPAT=+$G(ORPAT)_";DPT(",ORN=0 D DATES
"RTN","ORRCACK",116,0)
 S ORDT=SDATE F  S ORDT=$O(^OR(100,"ARS",ORPAT,ORDT)) Q:ORDT<1  Q:ORDT>EDATE  D
"RTN","ORRCACK",117,0)
 . S ORIFN=0 F  S ORIFN=+$O(^OR(100,"ARS",ORPAT,ORDT,ORIFN)) Q:ORIFN<1  D
"RTN","ORRCACK",118,0)
 .. Q:+$P($G(^OR(100,ORIFN,3)),U,3)=9  ;partial results
"RTN","ORRCACK",119,0)
 .. Q:$$ACKD(ORIFN,ORUSR)  D TEXT^ORQ12(.ORTX,ORIFN)
"RTN","ORRCACK",120,0)
 .. S ORN=ORN+1,@ORY@(ORN)="Item=ORR:"_ORIFN_U_ORTX(1)_U_$$FMTHL7^XLFDT(ORDT)
"RTN","ORRCACK",121,0)
 .. I $G(ORSLT) D ORD ;add results data to ORY(#)
"RTN","ORRCACK",122,0)
 Q
"RTN","ORRCACK",123,0)
 ;
"RTN","ORRCACK",124,0)
DATES ; -- Return SDATE and EDATE from ORBEG and OREND
"RTN","ORRCACK",125,0)
 ;    [Inverted for rev-chron search]
"RTN","ORRCACK",126,0)
 S SDATE=$$HL7TFM^XLFDT($G(ORBEG)),EDATE=$$HL7TFM^XLFDT($G(OREND))
"RTN","ORRCACK",127,0)
DT1 I EDATE S EDATE=$S($L(EDATE,".")=2:EDATE+.0001,1:EDATE+1)
"RTN","ORRCACK",128,0)
 I SDATE S SDATE=$S($L(SDATE,".")=2:SDATE-.0001,1:SDATE)
"RTN","ORRCACK",129,0)
 S SDATE=9999999-$S(SDATE:SDATE,1:0),EDATE=9999999-$S(EDATE:EDATE,1:9999998)
"RTN","ORRCACK",130,0)
 S X=EDATE,EDATE=SDATE,SDATE=X
"RTN","ORRCACK",131,0)
 Q
"RTN","ORRCACK",132,0)
 ;
"RTN","ORRCACK",133,0)
ACKD(ORDER,USER) ; -- Returns 1 or 0, if USER has acknowledged ORDER
"RTN","ORRCACK",134,0)
 N Y S Y=0
"RTN","ORRCACK",135,0)
 S IFN=0 F  S IFN=$O(^ORA(102.4,"B",+$G(ORDER),IFN)) Q:IFN<1  D  Q:Y
"RTN","ORRCACK",136,0)
 . S X=$G(^ORA(102.4,IFN,0)) I $P(X,U,3),$P(X,U,2)=+$G(USER) S Y=1 Q
"RTN","ORRCACK",137,0)
 Q Y
"RTN","ORRCACK",138,0)
 ;
"RTN","ORRCACK",139,0)
RESULT(ORY,ORDER) ; -- Return results of ORDERs
"RTN","ORRCACK",140,0)
 ; where ORDER(#) = ID
"RTN","ORRCACK",141,0)
 ; in @ORY@(#) = Item=ID^Text^ResultDate in HL7 format, and
"RTN","ORRCACK",142,0)
 ;             = Data=Test^Value^Units^ReferenceRange^CriticalFlag
"RTN","ORRCACK",143,0)
 ;             = Cmnt=result comment
"RTN","ORRCACK",144,0)
 ;            or Text=line of report text
"RTN","ORRCACK",145,0)
 ; RPC = ORRC RESULTS BY ID
"RTN","ORRCACK",146,0)
 N ORN,ORI,ORIFN,ORDT,ORTX
"RTN","ORRCACK",147,0)
 S ORN=0,ORY=$NA(^TMP($J,"ORRCRSLT")) K @ORY
"RTN","ORRCACK",148,0)
 S ORI="" F  S ORI=$O(ORDER(ORI)) Q:ORI=""  S ORIFN=ORDER(ORI) D
"RTN","ORRCACK",149,0)
 . S ORIFN=+$P(ORIFN,":",2),ORDT=+$G(^OR(100,ORIFN,7))
"RTN","ORRCACK",150,0)
 . D TEXT^ORQ12(.ORTX,ORIFN)
"RTN","ORRCACK",151,0)
 . S ORN=ORN+1,@ORY@(ORN)="Item=ORR:"_ORIFN_U_ORTX(1)_U_$$FMTHL7^XLFDT(ORDT)
"RTN","ORRCACK",152,0)
 . D ORD
"RTN","ORRCACK",153,0)
 Q
"RTN","ORRCACK",154,0)
 ;
"RTN","ORRCACK",155,0)
ORD ; -- Add results for ORIFN to @ORY@(ORN)
"RTN","ORRCACK",156,0)
 N PKG Q:'+$G(ORIFN)
"RTN","ORRCACK",157,0)
 S PKG=+$P($G(^OR(100,ORIFN,0)),U,14),PKG=$$NMSP^ORCD(PKG)
"RTN","ORRCACK",158,0)
 I "^LR^RA^GMRC^"'[(U_PKG_U)!'ORIFN S ORY(1)="Text=No results available." Q  ;DT??
"RTN","ORRCACK",159,0)
 D @PKG
"RTN","ORRCACK",160,0)
 Q
"RTN","ORRCACK",161,0)
LR ; -- Lab results
"RTN","ORRCACK",162,0)
 N ORVP,LRID,LRTST,LRSUB,I,X K ^TMP("LRRR",$J)
"RTN","ORRCACK",163,0)
 S ORVP=$P($G(^OR(100,ORIFN,0)),U,2),LRID=$G(^(4))
"RTN","ORRCACK",164,0)
 I '$L(LRID) S ORN=ORN+1,@ORY@(ORN)="Text=No results available." Q
"RTN","ORRCACK",165,0)
 S X=$$VALUE^ORCSAVE2(ORIFN,"ORDERABLE"),LRTST=+$P($G(^ORD(101.43,+X,0)),U,2)
"RTN","ORRCACK",166,0)
 I +LRID  D RR^LR7OR1(+ORVP,LRID,,,,LRTST) I '$D(^TMP("LRRR",$J,+ORVP)) S $P(LRID,";",1,3)=";;" ;Order possibly purged, reset to lookup on file 63
"RTN","ORRCACK",167,0)
 I '+LRID,$P(LRID,";",5)  D RR^LR7OR1(+ORVP,,9999999-$P(LRID,";",5),9999999-$P(LRID,";",5),$P(LRID,";",4),LRTST)
"RTN","ORRCACK",168,0)
 I '$D(^TMP("LRRR",$J,+ORVP)) S ORN=ORN+1,@ORY@(ORN)="Text=No results available." Q
"RTN","ORRCACK",169,0)
 S LRSUB=$O(^TMP("LRRR",$J,+ORVP,"")) Q:LRSUB=""
"RTN","ORRCACK",170,0)
 S LRDT=$O(^TMP("LRRR",$J,+ORVP,LRSUB,0)) I LRDT S LRDT=9999999-LRDT,$P(@ORY@(ORN),U,3)=$$FMTHL7^XLFDT(LRDT) ;return Coll Dt instead of Results Dt
"RTN","ORRCACK",171,0)
 I LRSUB="CH" D  K ^TMP("LRRR",$J) Q
"RTN","ORRCACK",172,0)
 . N TEST,LRDT,LRN,LRI M TEST=^TMP("LRRR",$J,+ORVP,"CH")
"RTN","ORRCACK",173,0)
 . S LRDT=0 F  S LRDT=$O(TEST(LRDT)) Q:LRDT<1  S LRN=0 F  S LRN=$O(TEST(LRDT,LRN)) Q:LRN=""  D
"RTN","ORRCACK",174,0)
 .. I LRN S I=$G(TEST(LRDT,LRN)),X=$P($G(^LAB(60,+I,0)),U)_U_$P(I,U,2)_U_$P(I,U,4,5)_U_$P(I,U,3) S ORN=ORN+1,@ORY@(ORN)="Data="_X
"RTN","ORRCACK",175,0)
 .. I LRN="N" S LRI=0 F  S LRI=$O(TEST(LRDT,LRN,LRI)) Q:LRI<1  S ORN=ORN+1,@ORY@(ORN)="Cmnt="_$G(TEST(LRDT,LRN,LRI))
"RTN","ORRCACK",176,0)
 K ^TMP("LRC",$J) D EN1^LR7OSBR(+ORVP):LRSUB="BB",EN^LR7OSMZ0(+ORVP):LRSUB="MI"
"RTN","ORRCACK",177,0)
 S I=0 F  S I=+$O(^TMP("LRC",$J,I)) Q:I<1  S X=$G(^(I,0)),ORN=ORN+1,@ORY@(ORN)="Text="_X
"RTN","ORRCACK",178,0)
 K ^TMP("LRC",$J),^TMP("LRRR",$J)
"RTN","ORRCACK",179,0)
 Q
"RTN","ORRCACK",180,0)
RA ; -- Radiology results
"RTN","ORRCACK",181,0)
 N ORVP,RAID,CASE,PROC,PSET,FIRST
"RTN","ORRCACK",182,0)
 S ORVP=$P($G(^OR(100,ORIFN,0)),U,2),RAID=+$G(^(4)) D EN30^RAO7PC3(RAID)
"RTN","ORRCACK",183,0)
 S PSET=$D(^TMP($J,"RAE3",+ORVP,"PRINT_SET")),FIRST=1
"RTN","ORRCACK",184,0)
 I 'PSET S CASE=0 F  S CASE=$O(^TMP($J,"RAE3",+ORVP,CASE)) Q:CASE'>0  D
"RTN","ORRCACK",185,0)
 . S PROC="" F  S PROC=$O(^TMP($J,"RAE3",+ORVP,CASE,PROC)) Q:PROC=""  D XRPT
"RTN","ORRCACK",186,0)
 I PSET S CASE=$O(^TMP($J,"RAE3",+ORVP,0)),PROC=$O(^(CASE,"")) D XRPT
"RTN","ORRCACK",187,0)
 K ^TMP($J,"RAE3",+ORVP)
"RTN","ORRCACK",188,0)
 Q
"RTN","ORRCACK",189,0)
XRPT ; -- body of report for CASE, PROC
"RTN","ORRCACK",190,0)
 N ORD,X,I
"RTN","ORRCACK",191,0)
 I 'FIRST S ORN=ORN+1,@ORY@(ORN)="Text="_$$REPEAT^XLFSTR(" * ",24)
"RTN","ORRCACK",192,0)
 S ORD=$S($L($G(^TMP($J,"RAE3",+ORVP,"ORD"))):^("ORD"),$L($G(^("ORD",CASE))):^(CASE),1:"") I $L(ORD),ORD'=PROC S ORN=ORN+1,@ORY@(ORN)="Text=Proc Ord: "_ORD
"RTN","ORRCACK",193,0)
 S I=1 F  S I=$O(^TMP($J,"RAE3",+ORVP,CASE,PROC,I)) Q:I'>0  S X=^(I),ORN=ORN+1,@ORY@(ORN)="Text="_X ;Skip pt ID on line 1
"RTN","ORRCACK",194,0)
 S FIRST=0
"RTN","ORRCACK",195,0)
 Q
"RTN","ORRCACK",196,0)
GMRC ; -- Consult results
"RTN","ORRCACK",197,0)
 N GMRCID,I,X,SUB S GMRCID=+$G(^OR(100,ORIFN,4)),SUB="RT" N ORIFN ;protect
"RTN","ORRCACK",198,0)
 I '$D(^GMR(123,GMRCID,50,"B")),'$D(^GMR(123,GMRCID,51,"B")) S SUB="DT"
"RTN","ORRCACK",199,0)
 D RT^GMRCGUIA(GMRCID,"^TMP(""GMRCR"",$J,""RT"")"):SUB="RT",DT^GMRCSLM2(GMRCID):SUB="DT"
"RTN","ORRCACK",200,0)
 S I=0 F  S I=$O(^TMP("GMRCR",$J,SUB,I)) Q:I'>0  S X=$G(^(I,0)),ORN=ORN+1,@ORY@(ORN)="Text="_X
"RTN","ORRCACK",201,0)
 K ^TMP("GMRCR",$J)
"RTN","ORRCACK",202,0)
 Q
"RTN","ORRCDPT")
0^19^B26430839
"RTN","ORRCDPT",1,0)
ORRCDPT ;SLC/MKB - Patient List for Physician Dashboard ; 19 Sept 2003 10:09 AM
"RTN","ORRCDPT",2,0)
 ;;1.0;CARE MANAGEMENT;;Jul 15, 2003
"RTN","ORRCDPT",3,0)
 ;
"RTN","ORRCDPT",4,0)
MAIN(ORY,USER,TYPE,LIST) ; -- Return patient list for dashboard
"RTN","ORRCDPT",5,0)
 ; where USER    = pointer to #200
"RTN","ORRCDPT",6,0)
 ;       TYPE    = (C)linician or (N)urse view
"RTN","ORRCDPT",7,0)
 ;       LIST(#) = <list-type>:<list-ID>:<clinic start>:<clinic stop>
"RTN","ORRCDPT",8,0)
 ; RPC = ORRC DASHBOARD PATIENTS
"RTN","ORRCDPT",9,0)
 ;
"RTN","ORRCDPT",10,0)
 D EXPDATES(.LIST) ;expand dates
"RTN","ORRCDPT",11,0)
 S USER=+$G(USER),TYPE=$$UP^XLFSTR($G(TYPE))
"RTN","ORRCDPT",12,0)
 I TYPE="N" D EN^ORRCDPT1(.ORY,USER,.LIST) Q
"RTN","ORRCDPT",13,0)
 I $O(LIST(0)) D EN1(.ORY,USER,.LIST) Q
"RTN","ORRCDPT",14,0)
 D EN(.ORY,USER)
"RTN","ORRCDPT",15,0)
 Q
"RTN","ORRCDPT",16,0)
 ;
"RTN","ORRCDPT",17,0)
EN(ORY,ORUSR) ; -- Return each patient to list on dashboard for ORUSR
"RTN","ORRCDPT",18,0)
 ; in @ORY@(#) = "Patient=<dfn>^<name>^<ssn>^<dob>^<age>"
"RTN","ORRCDPT",19,0)
 ;             = "Result=ORR:##^ORR:##^...^*ORR:##"
"RTN","ORRCDPT",20,0)
 ;             = "Task=TSK:##^TSK:##^...^*TSK:##"
"RTN","ORRCDPT",21,0)
 ;             = "Event=VST:ID^VST:ID^...^VST:ID"
"RTN","ORRCDPT",22,0)
 ;             = "Unsigned=ORD:##^...^ORD:##^DOC:##^...^DOC:##"
"RTN","ORRCDPT",23,0)
 ;             = "Notifications=1"
"RTN","ORRCDPT",24,0)
 ; RPC = ORRC PHY DASHBD PATIENTS
"RTN","ORRCDPT",25,0)
 S ORUSR=+$G(ORUSR) K ^TMP($J,"ORRCPTS"),^TMP($J,"ORRCY"),^TMP($J,"ORRCLST")
"RTN","ORRCDPT",26,0)
 D RSLT,TASK,EVNT,SIGN ;build ^TMP($J,"ORRCY",DFN,"<type>",ID)=* or null
"RTN","ORRCDPT",27,0)
 I $D(^TMP($J,"ORRCY")) D FORMAT
"RTN","ORRCDPT",28,0)
 K ^TMP($J,"ORRCY")
"RTN","ORRCDPT",29,0)
 Q
"RTN","ORRCDPT",30,0)
 ;
"RTN","ORRCDPT",31,0)
EN1(ORY,ORUSR,ORLST) ; -- Return patients on ORLST for ORUSR's dashboard
"RTN","ORRCDPT",32,0)
 ; in @ORY@(#) = "Patient=<dfn>^<name>^<ssn>^<dob>^<age>"
"RTN","ORRCDPT",33,0)
 ;             = "Result=ORR:##^ORR:##^...^*ORR:##"
"RTN","ORRCDPT",34,0)
 ;             = "Task=TSK:##^TSK:##^...^*TSK:##"
"RTN","ORRCDPT",35,0)
 ;             = "Event=VST:ID^VST:ID^...^VST:ID"
"RTN","ORRCDPT",36,0)
 ;             = "Unsigned=ORD:##^...^ORD:##^DOC:##^...^DOC:##"
"RTN","ORRCDPT",37,0)
 ;             = "Error=^<error description>"
"RTN","ORRCDPT",38,0)
 N ORI,ORX,X,ORID,ORPAT,ORTN,ORBEG,OREND,ORJ,PAT,ERRI S ORUSR=+$G(ORUSR),ERRI=0
"RTN","ORRCDPT",39,0)
 K ^TMP($J,"ORRCY"),^TMP($J,"ORRCNOTF"),^TMP($J,"ORRCPTS")
"RTN","ORRCDPT",40,0)
 S ^TMP($J,"ORRCLST")=""
"RTN","ORRCDPT",41,0)
 S ORI=0 F  S ORI=$O(ORLST(ORI)) Q:ORI<1  S ORX=$G(ORLST(ORI)) D
"RTN","ORRCDPT",42,0)
 . S X=$$UP^XLFSTR($P(ORX,":")),ORID=+$P(ORX,":",2) D  Q:'$G(ORPAT(1))
"RTN","ORRCDPT",43,0)
 .. I X="X" D DEFLIST^ORQPTQ11(.ORPAT) D:$E($G(ORPAT))="M"  Q
"RTN","ORRCDPT",44,0)
 ... S ORJ=0 F  S ORJ=$O(^TMP("OR",$J,"PATIENTS",ORJ)) Q:ORJ<1  S PAT=+$G(^(ORJ,0)),^TMP($J,"ORRCY",PAT)=""
"RTN","ORRCDPT",45,0)
 .. I X="T" D TEAMPTS^ORQPTQ1(.ORPAT,ORID) Q
"RTN","ORRCDPT",46,0)
 .. S ORTN=$S(X="P":"PROV",X="S":"SPEC",X="W":"WARD",X="C":"CLIN",1:"") Q:'$L(ORTN)
"RTN","ORRCDPT",47,0)
 .. I X'="C" S ORTN=ORTN_"PTS^ORQPTQ2(.ORPAT,ORID)" D @ORTN Q
"RTN","ORRCDPT",48,0)
 .. S ORBEG=$P(ORX,":",3),OREND=$P(ORX,":",4)
"RTN","ORRCDPT",49,0)
 .. D CLINPTS^ORQPTQ2(.ORPAT,ORID,ORBEG,OREND)
"RTN","ORRCDPT",50,0)
 .. I $D(ORPAT(1)),'+$G(ORPAT(1)),ORPAT(1)'="^No appointments." S ERRI=ERRI+1,^TMP($J,"ORRCDPT_ERROR",ERRI)=ORPAT(1)
"RTN","ORRCDPT",51,0)
 . S ORJ=0 F  S ORJ=$O(ORPAT(ORJ)) Q:ORJ<1  S PAT=+$G(ORPAT(ORJ)),^TMP($J,"ORRCY",PAT)=""
"RTN","ORRCDPT",52,0)
 I $D(^TMP($J,"ORRCY")) D  ;there are patients on selected list(s)
"RTN","ORRCDPT",53,0)
 . ; build ^TMP($J,"ORRCY",DFN,"<type>",ID)=* or null:
"RTN","ORRCDPT",54,0)
 . D RSLT,TASK,EVNT,SIGN,FORMAT
"RTN","ORRCDPT",55,0)
 D ERROR(.ORY)
"RTN","ORRCDPT",56,0)
 K ^TMP($J,"ORRCY"),^TMP($J,"ORRCNOTF"),^TMP($J,"ORRCLST"),^TMP($J,"ORRCDPT_ERROR")
"RTN","ORRCDPT",57,0)
 Q
"RTN","ORRCDPT",58,0)
 ;
"RTN","ORRCDPT",59,0)
ERROR(ORY)     ; -- process errors
"RTN","ORRCDPT",60,0)
 I '$D(^TMP($J,"ORRCDPT_ERROR")) Q
"RTN","ORRCDPT",61,0)
 N I,J S I=0,J=0
"RTN","ORRCDPT",62,0)
 I '$D(ORY) S ORY=$$GETRET
"RTN","ORRCDPT",63,0)
 F  S I=$O(@ORY@(I)) Q:I'>0  S J=I
"RTN","ORRCDPT",64,0)
 S I=0
"RTN","ORRCDPT",65,0)
 F  S I=$O(^TMP($J,"ORRCDPT_ERROR",I)) Q:I'>0  S J=J+1,@ORY@(J)="Error="_^TMP($J,"ORRCDPT_ERROR",I)
"RTN","ORRCDPT",66,0)
 Q
"RTN","ORRCDPT",67,0)
 ;
"RTN","ORRCDPT",68,0)
RSLT ; -- find patients with unack'd results for ORUSR's orders
"RTN","ORRCDPT",69,0)
 N ORACK,PAT
"RTN","ORRCDPT",70,0)
 D PATS^ORRCACK(.ORACK,ORUSR) S PAT=0
"RTN","ORRCDPT",71,0)
 F  S PAT=+$O(@ORACK@(PAT)) Q:PAT<1  M ^TMP($J,"ORRCY",PAT,"R")=@ORACK@(PAT)
"RTN","ORRCDPT",72,0)
 K @ORACK
"RTN","ORRCDPT",73,0)
 Q
"RTN","ORRCDPT",74,0)
 ;
"RTN","ORRCDPT",75,0)
TASK ; -- find patients with tasks not complete
"RTN","ORRCDPT",76,0)
 N ORTSK,PAT
"RTN","ORRCDPT",77,0)
 D PATS^ORRCTSK(.ORTSK,ORUSR) S PAT=0
"RTN","ORRCDPT",78,0)
 F  S PAT=+$O(@ORTSK@(PAT)) Q:PAT<1  M ^TMP($J,"ORRCY",PAT,"T")=@ORTSK@(PAT)
"RTN","ORRCDPT",79,0)
 K @ORTSK
"RTN","ORRCDPT",80,0)
 Q
"RTN","ORRCDPT",81,0)
 ;
"RTN","ORRCDPT",82,0)
EVNT ; -- find patients that ORUSR has outstanding ADT alerts for
"RTN","ORRCDPT",83,0)
 N OREVT,PAT
"RTN","ORRCDPT",84,0)
 D PATS^ORRCEVT(.OREVT,ORUSR) S PAT=0
"RTN","ORRCDPT",85,0)
 F  S PAT=+$O(@OREVT@(PAT)) Q:PAT<1  M ^TMP($J,"ORRCY",PAT,"E")=@OREVT@(PAT)
"RTN","ORRCDPT",86,0)
 K @OREVT
"RTN","ORRCDPT",87,0)
 Q
"RTN","ORRCDPT",88,0)
 ;
"RTN","ORRCDPT",89,0)
SIGN ; -- find patients that have orders or notes ORUSR needs to sign
"RTN","ORRCDPT",90,0)
 N ORDER,ORDOC,PAT
"RTN","ORRCDPT",91,0)
 ;D PTUNS^ORRCOR(.ORDER,ORUSR) S PAT=0
"RTN","ORRCDPT",92,0)
 ;F  S PAT=+$O(ORDER(PAT)) Q:PAT<1  M ^TMP($J,"ORRCY",PAT,"U")=ORDER(PAT)
"RTN","ORRCDPT",93,0)
 D GETPTUNS^ORRCTIU(.ORDOC,ORUSR) S PAT=0
"RTN","ORRCDPT",94,0)
 F  S PAT=+$O(@ORDOC@(PAT)) Q:PAT<1  M ^TMP($J,"ORRCY",PAT,"U")=@ORDOC@(PAT)
"RTN","ORRCDPT",95,0)
 K @ORDOC
"RTN","ORRCDPT",96,0)
 Q
"RTN","ORRCDPT",97,0)
 ;
"RTN","ORRCDPT",98,0)
FORMAT ; -- Format return array ^TMP($J,"ORRCPTS") from temp array ^TMP($J,"ORRCY")
"RTN","ORRCDPT",99,0)
 N ORPT,ORN,DFN,VADM,VA,VAERR
"RTN","ORRCDPT",100,0)
 S ORY=$$GETRET
"RTN","ORRCDPT",101,0)
 S (ORPT,ORN)=0 F  S ORPT=$O(^TMP($J,"ORRCY",ORPT)) Q:ORPT<1  D
"RTN","ORRCDPT",102,0)
 . S DFN=ORPT D DEM^VADPT
"RTN","ORRCDPT",103,0)
 . S ORN=ORN+1,@ORY@(ORN)="Patient="_DFN_U_VADM(1)_U_VA("PID")_U_$$FMTHL7^XLFDT(+VADM(3))_U_VADM(4)
"RTN","ORRCDPT",104,0)
 . I $D(^TMP($J,"ORRCY",ORPT,"R")) D ADD("Result")
"RTN","ORRCDPT",105,0)
 . I $D(^TMP($J,"ORRCY",ORPT,"T")) D ADD("Task")
"RTN","ORRCDPT",106,0)
 . I $D(^TMP($J,"ORRCY",ORPT,"E")) D ADD("Event")
"RTN","ORRCDPT",107,0)
 . I $D(^TMP($J,"ORRCY",ORPT,"U")) D ADD("Unsigned")
"RTN","ORRCDPT",108,0)
 . I $G(^TMP($J,"ORRCNOTF",ORPT)) S ORN=ORN+1,@ORY@(ORN)="Notifications=1"
"RTN","ORRCDPT",109,0)
 Q
"RTN","ORRCDPT",110,0)
 ;
"RTN","ORRCDPT",111,0)
GETRET()        ;Returns the return variable pointer
"RTN","ORRCDPT",112,0)
 Q $NA(^TMP($J,"ORRCPTS"))
"RTN","ORRCDPT",113,0)
 ;
"RTN","ORRCDPT",114,0)
ADD(TYPE) ; -- Add item IDs from ^TMP($J,"ORRCY",PAT,<TYPE>) into return array
"RTN","ORRCDPT",115,0)
 N ORX,ORSUB,ORID,X,ORU
"RTN","ORRCDPT",116,0)
 S ORX=TYPE_"=",ORSUB=$E(TYPE),ORID="",ORU=""
"RTN","ORRCDPT",117,0)
 F  S ORID=$O(^TMP($J,"ORRCY",ORPT,ORSUB,ORID)) Q:ORID=""  S X=$G(^(ORID))_ORID D
"RTN","ORRCDPT",118,0)
 . I $L(ORX)+$L(X)>254 S ORN=ORN+1,@ORY@(ORN)=ORX,ORX=TYPE_"=",ORU=""
"RTN","ORRCDPT",119,0)
 . S ORX=ORX_ORU_X,ORU=U
"RTN","ORRCDPT",120,0)
 S ORN=ORN+1,@ORY@(ORN)=ORX
"RTN","ORRCDPT",121,0)
 Q
"RTN","ORRCDPT",122,0)
 ;
"RTN","ORRCDPT",123,0)
EXPDATES(LIST)  ;Expand dates for clinic appointments, if they need to be expanded.  These would be a year or quarter indicators on clinic appt lists.
"RTN","ORRCDPT",124,0)
         ;Ex. YC = current year, YC-4 = current year - 4, etc.
"RTN","ORRCDPT",125,0)
 N I,RANGE S I=0
"RTN","ORRCDPT",126,0)
 F  S I=$O(LIST(I)) Q:I'>0  D
"RTN","ORRCDPT",127,0)
 .I $P(LIST(I),":",1)="c",$L(LIST(I),":")=3 D
"RTN","ORRCDPT",128,0)
 ..S RANGE=$$RNG2FM^ORRHCU($P(LIST(I),":",3))
"RTN","ORRCDPT",129,0)
 ..S $P(LIST(I),":",3)=$P(RANGE,":",1)
"RTN","ORRCDPT",130,0)
 ..S $P(LIST(I),":",4)=$P(RANGE,":",2)
"RTN","ORRCDPT",131,0)
 Q
"RTN","ORRCDPT",132,0)
 ;
"RTN","ORRCDPT1")
0^5^B22049351
"RTN","ORRCDPT1",1,0)
ORRCDPT1 ;SLC/MKB - Patient List for Nursing Dashboard ; 19 Sept 2003  10:10 AM
"RTN","ORRCDPT1",2,0)
 ;;1.0;CARE MANAGEMENT;;Jul 15, 2003
"RTN","ORRCDPT1",3,0)
 ;
"RTN","ORRCDPT1",4,0)
EN(ORY,ORUSR,ORLST) ; -- Return each patient in ORLSTs for ORUSR
"RTN","ORRCDPT1",5,0)
 ; where ORLST(#) = <list-type>:<list-ID>:<clinic start>:<clinic stop>
"RTN","ORRCDPT1",6,0)
 ; in @ORY@(#) = "Patient=<dfn>^<name>^<ssn>^<dob>^<age>"
"RTN","ORRCDPT1",7,0)
 ;             = "Result=ORR:##^ORR:##^...^*ORR:##"
"RTN","ORRCDPT1",8,0)
 ;             = "Task=TSK:##^TSK:##^...^*TSK:##"
"RTN","ORRCDPT1",9,0)
 ;             = "Event=VST:ID^VST:ID^...^VST:ID"
"RTN","ORRCDPT1",10,0)
 ;             = "Unverified=ORV:##^...^ORV:##"
"RTN","ORRCDPT1",11,0)
 ;             = "Nursing=ORN:##^...^!ORN:##"
"RTN","ORRCDPT1",12,0)
 ;             = "Vital=VIT:ID^...^*VIT:ID"
"RTN","ORRCDPT1",13,0)
 ;             = "Error=^<error description>"
"RTN","ORRCDPT1",14,0)
 ; RPC = ORRC NURS DASHBD PATIENTS
"RTN","ORRCDPT1",15,0)
 K ^TMP($J,"ORRCPTS"),^TMP($J,"ORRCY")
"RTN","ORRCDPT1",16,0)
 N ORI,ORX,X,ORID,ORBEG,OREND,ORTN,ORPAT,ORJ,PAT,ORDMIN,ORDMAX,ERRI
"RTN","ORRCDPT1",17,0)
 S ORUSR=+$G(ORUSR),ERRI=0 D PARAMS
"RTN","ORRCDPT1",18,0)
 S ORI=0 F  S ORI=$O(ORLST(ORI)) Q:ORI<1  S ORX=$G(ORLST(ORI)) D
"RTN","ORRCDPT1",19,0)
 . S X=$$UP^XLFSTR($P(ORX,":")),ORID=+$P(ORX,":",2) D  Q:'$G(ORPAT(1))
"RTN","ORRCDPT1",20,0)
 .. I X="X" D DEFLIST^ORQPTQ11(.ORPAT) D:$E($G(ORPAT))="M"  Q
"RTN","ORRCDPT1",21,0)
 ... S ORJ=0 F  S ORJ=$O(^TMP("OR",$J,"PATIENTS",ORJ)) Q:ORJ<1  S PAT=+$G(^(ORJ,0)),ORPAT(ORJ)=PAT
"RTN","ORRCDPT1",22,0)
 .. I X="T" D TEAMPTS^ORQPTQ1(.ORPAT,ORID) Q
"RTN","ORRCDPT1",23,0)
 .. S ORTN=$S(X="P":"PROV",X="S":"SPEC",X="W":"WARD",X="C":"CLIN",1:"") Q:'$L(ORTN)
"RTN","ORRCDPT1",24,0)
 .. I X'="C" S ORTN=ORTN_"PTS^ORQPTQ2(.ORPAT,ORID)" D @ORTN Q
"RTN","ORRCDPT1",25,0)
 .. S ORBEG=$P(ORX,":",3),OREND=$P(ORX,":",4)
"RTN","ORRCDPT1",26,0)
 .. S ORTN=ORTN_"PTS^ORQPTQ2(.ORPAT,ORID,ORBEG,OREND)" D @ORTN
"RTN","ORRCDPT1",27,0)
 .. I $D(ORPAT(1)),'+$G(ORPAT(1)),ORPAT(1)'="^No appointments." S ERRI=ERRI+1,^TMP($J,"ORRCDPT1_ERROR",ERRI)=ORPAT(1)
"RTN","ORRCDPT1",28,0)
 . S ORJ=0 F  S ORJ=$O(ORPAT(ORJ)) Q:ORJ<1  S PAT=+$G(ORPAT(ORJ)) D
"RTN","ORRCDPT1",29,0)
 .. Q:$D(^TMP($J,"ORRCY",PAT))  ;already processed
"RTN","ORRCDPT1",30,0)
 .. ; build ^TMP($J,"ORRCY",DFN,"<type>",ID)=* or null:
"RTN","ORRCDPT1",31,0)
 .. D RSLT,TASK,EVNT,UNVR,TEXT,VITL
"RTN","ORRCDPT1",32,0)
 .. S ^TMP($J,"ORRCY",PAT)="" ;return all pts on list
"RTN","ORRCDPT1",33,0)
 I $D(^TMP($J,"ORRCY")) D FORMAT
"RTN","ORRCDPT1",34,0)
 I $D(^TMP($J,"ORRCDPT1_ERROR")) D ERROR(.ORY)
"RTN","ORRCDPT1",35,0)
 K ^TMP($J,"ORRCY"),^TMP($J,"ORRCDPT1_ERROR")
"RTN","ORRCDPT1",36,0)
 Q
"RTN","ORRCDPT1",37,0)
 ;
"RTN","ORRCDPT1",38,0)
ERROR(ORY)      ;Process errors to be returned
"RTN","ORRCDPT1",39,0)
 N I,J S I=0,J=0
"RTN","ORRCDPT1",40,0)
 I '$D(ORY) S ORY=$$GETRET
"RTN","ORRCDPT1",41,0)
 F  S I=$O(@ORY@(I)) Q:I'>0  S J=I
"RTN","ORRCDPT1",42,0)
 S I=0
"RTN","ORRCDPT1",43,0)
 F  S I=$O(^TMP($J,"ORRCDPT1_ERROR",I)) Q:I'>0  S J=J+1,@ORY@(J)="Error="_^TMP($J,"ORRCDPT1_ERROR",I)
"RTN","ORRCDPT1",44,0)
 Q
"RTN","ORRCDPT1",45,0)
 ;
"RTN","ORRCDPT1",46,0)
PARAMS ; -- Return date range parameters ORDMIN(type),ORDMAX(type) for ORUSR
"RTN","ORRCDPT1",47,0)
 N SERV,ORX,X,Y,%DT S SERV=+$G(^VA(200,ORUSR,5))
"RTN","ORRCDPT1",48,0)
 F ORX="RESULT","EVENT","TEXT ORDER","UNVERIFIED","VITALS" D
"RTN","ORRCDPT1",49,0)
 . S X=$$GET^XPAR("ALL^USR.`"_ORUSR_"^SRV.`"_SERV,"ORRC NURSE "_ORX_" DATE MIN"),%DT="TX"
"RTN","ORRCDPT1",50,0)
 . D ^%DT S ORDMIN(ORX)=$S(Y>0:Y,1:"")
"RTN","ORRCDPT1",51,0)
 . S X=$$GET^XPAR("ALL^USR.`"_ORUSR_"^SRV.`"_SERV,"ORRC NURSE "_ORX_" DATE MAX"),%DT="TX"
"RTN","ORRCDPT1",52,0)
 . D ^%DT S ORDMAX(ORX)=$S(Y>0:Y,1:"")
"RTN","ORRCDPT1",53,0)
 Q
"RTN","ORRCDPT1",54,0)
 ;
"RTN","ORRCDPT1",55,0)
RSLT ; -- find PAT's results unack'd by ORUSR
"RTN","ORRCDPT1",56,0)
 N ORACK,ORDBEG,ORDEND
"RTN","ORRCDPT1",57,0)
 S ORDBEG=ORDMIN("RESULT"),ORDEND=ORDMAX("RESULT")
"RTN","ORRCDPT1",58,0)
 D IDS^ORRCACK(.ORACK,PAT,ORUSR,ORDBEG,ORDEND)
"RTN","ORRCDPT1",59,0)
 M ^TMP($J,"ORRCY",PAT,"R")=@ORACK@(PAT) K @ORACK
"RTN","ORRCDPT1",60,0)
 Q
"RTN","ORRCDPT1",61,0)
 ;
"RTN","ORRCDPT1",62,0)
TASK ; -- find PAT's due tasks
"RTN","ORRCDPT1",63,0)
 N ORTSK
"RTN","ORRCDPT1",64,0)
 D IDS^ORRCTSK(.ORTSK,PAT)
"RTN","ORRCDPT1",65,0)
 M ^TMP($J,"ORRCY",PAT,"T")=@ORTSK@(PAT) K @ORTSK
"RTN","ORRCDPT1",66,0)
 Q
"RTN","ORRCDPT1",67,0)
 ;
"RTN","ORRCDPT1",68,0)
EVNT ; -- find PAT's appointments
"RTN","ORRCDPT1",69,0)
 N OREVT,ORABEG,ORAEND
"RTN","ORRCDPT1",70,0)
 S ORABEG=ORDMIN("EVENT"),ORAEND=ORDMAX("EVENT")
"RTN","ORRCDPT1",71,0)
 D IDS^ORRCEVT(.OREVT,PAT,ORABEG,ORAEND)
"RTN","ORRCDPT1",72,0)
 M ^TMP($J,"ORRCY",PAT,"E")=@OREVT@(PAT) K @OREVT
"RTN","ORRCDPT1",73,0)
 Q
"RTN","ORRCDPT1",74,0)
 ;
"RTN","ORRCDPT1",75,0)
UNVR ; -- find PAT's unverified orders, by nursing
"RTN","ORRCDPT1",76,0)
 N ORDER,ORDBEG,ORDEND
"RTN","ORRCDPT1",77,0)
 S ORDBEG=ORDMIN("UNVERIFIED"),ORDEND=ORDMAX("UNVERIFIED")
"RTN","ORRCDPT1",78,0)
 D IDS^ORRCOR(.ORDER,PAT,"ORV",ORDBEG,ORDEND)
"RTN","ORRCDPT1",79,0)
 M ^TMP($J,"ORRCY",PAT,"U")=@ORDER@(PAT) K @ORDER
"RTN","ORRCDPT1",80,0)
 Q
"RTN","ORRCDPT1",81,0)
 ;
"RTN","ORRCDPT1",82,0)
TEXT ; -- find patients with active generic text orders
"RTN","ORRCDPT1",83,0)
 N ORDER,ORDBEG,ORDEND
"RTN","ORRCDPT1",84,0)
 S ORDBEG=ORDMIN("TEXT ORDER"),ORDEND=ORDMAX("TEXT ORDER")
"RTN","ORRCDPT1",85,0)
 D IDS^ORRCOR(.ORDER,PAT,"ORN",ORDBEG,ORDEND)
"RTN","ORRCDPT1",86,0)
 M ^TMP($J,"ORRCY",PAT,"N")=@ORDER@(PAT) K @ORDER
"RTN","ORRCDPT1",87,0)
 Q
"RTN","ORRCDPT1",88,0)
 ;
"RTN","ORRCDPT1",89,0)
VITL ; -- find patients with recent vitals
"RTN","ORRCDPT1",90,0)
 N ORVIT,ORVBEG,ORVEND
"RTN","ORRCDPT1",91,0)
 S ORVBEG=ORDMIN("VITALS"),ORVEND=ORDMAX("VITALS")
"RTN","ORRCDPT1",92,0)
 D IDS^ORRCVIT(.ORVIT,PAT,ORVBEG,ORVEND)
"RTN","ORRCDPT1",93,0)
 M ^TMP($J,"ORRCY",PAT,"V")=@ORVIT@(PAT) K @ORVIT
"RTN","ORRCDPT1",94,0)
 Q
"RTN","ORRCDPT1",95,0)
 ;
"RTN","ORRCDPT1",96,0)
FORMAT ; -- Format return array ^TMP($J,"ORRCPTS") from temp array ^TMP($J,"ORRCY")
"RTN","ORRCDPT1",97,0)
 N ORPT,ORN,DFN,VADM,VA,VAERR
"RTN","ORRCDPT1",98,0)
 S ORY=$$GETRET
"RTN","ORRCDPT1",99,0)
 S (ORPT,ORN)=0 F  S ORPT=$O(^TMP($J,"ORRCY",ORPT)) Q:ORPT<1  D
"RTN","ORRCDPT1",100,0)
 . S DFN=ORPT D DEM^VADPT
"RTN","ORRCDPT1",101,0)
 . S ORN=ORN+1,@ORY@(ORN)="Patient="_DFN_U_VADM(1)_U_VA("PID")_U_$$FMTHL7^XLFDT(+VADM(3))_U_VADM(4)
"RTN","ORRCDPT1",102,0)
 . I $D(^TMP($J,"ORRCY",ORPT,"R")) D ADD("Result")
"RTN","ORRCDPT1",103,0)
 . I $D(^TMP($J,"ORRCY",ORPT,"T")) D ADD("Task")
"RTN","ORRCDPT1",104,0)
 . I $D(^TMP($J,"ORRCY",ORPT,"E")) D ADD("Event")
"RTN","ORRCDPT1",105,0)
 . I $D(^TMP($J,"ORRCY",ORPT,"U")) D ADD("Unverified")
"RTN","ORRCDPT1",106,0)
 . I $D(^TMP($J,"ORRCY",ORPT,"N")) D ADD("Nursing")
"RTN","ORRCDPT1",107,0)
 . I $D(^TMP($J,"ORRCY",ORPT,"V")) D ADD("Vital")
"RTN","ORRCDPT1",108,0)
 Q
"RTN","ORRCDPT1",109,0)
 ;
"RTN","ORRCDPT1",110,0)
ADD(TYPE) ; -- Add item IDs from ^TMP($J,"ORRCY",PAT,<TYPE>) into return array
"RTN","ORRCDPT1",111,0)
 N ORX,ORSUB,ORID,X,ORU
"RTN","ORRCDPT1",112,0)
 S ORX=TYPE_"=",ORSUB=$E(TYPE),ORID="",ORU=""
"RTN","ORRCDPT1",113,0)
 F  S ORID=$O(^TMP($J,"ORRCY",ORPT,ORSUB,ORID)) Q:ORID=""  S X=$G(^(ORID))_ORID D
"RTN","ORRCDPT1",114,0)
 . I $L(ORX)+$L(X)>254 S ORN=ORN+1,@ORY@(ORN)=ORX,ORX=TYPE_"=",ORU=""
"RTN","ORRCDPT1",115,0)
 . S ORX=ORX_ORU_X,ORU=U
"RTN","ORRCDPT1",116,0)
 S ORN=ORN+1,@ORY@(ORN)=ORX
"RTN","ORRCDPT1",117,0)
 Q
"RTN","ORRCDPT1",118,0)
 ;
"RTN","ORRCDPT1",119,0)
GETRET()        ;Returns the return variable pointer
"RTN","ORRCDPT1",120,0)
 Q $NA(^TMP($J,"ORRCPTS"))
"RTN","ORRCDPT1",121,0)
 ;
"RTN","ORRCEVT")
0^6^B45814618
"RTN","ORRCEVT",1,0)
ORRCEVT ; SLC/MKB - Event utilities ; 25 Jul 2003  9:31 AM
"RTN","ORRCEVT",2,0)
 ;;1.0;CARE MANAGEMENT;;Jul 15, 2003
"RTN","ORRCEVT",3,0)
 ;
"RTN","ORRCEVT",4,0)
 ; ID = "VST:"_alertID (="OR,<dfn>,<nien>;<user>;<date.time>")
"RTN","ORRCEVT",5,0)
 ;         or _apptID  (="A;<date.time>;<hospital location>;<dfn>")
"RTN","ORRCEVT",6,0)
 ;         or _visitID (="V;<date.time>;<hospital location>;<dfn>")
"RTN","ORRCEVT",7,0)
 ;         or _procID  (=order#)
"RTN","ORRCEVT",8,0)
 ;
"RTN","ORRCEVT",9,0)
PATS(ORY,ORUSR) ; -- Return list of patients for whom ORUSR has ADT alerts
"RTN","ORRCEVT",10,0)
 ; in @ORY@(PAT) = #event alerts
"RTN","ORRCEVT",11,0)
 ;    @ORY@(PAT,ID) = "" per alert
"RTN","ORRCEVT",12,0)
 ; [from ORRCDPT]
"RTN","ORRCEVT",13,0)
 N ORXQ,ORI,XQAID,PAT,NOT,X,ACTDT
"RTN","ORRCEVT",14,0)
 S ORY=$NA(^TMP($J,"ORRCEVT")) K @ORY
"RTN","ORRCEVT",15,0)
 S ORXQ=$NA(^TMP($J,"ORXQ")) K @ORXQ
"RTN","ORRCEVT",16,0)
 S ORUSR=+$G(ORUSR),ACTDT=$$PARAM^ORRCACK(ORUSR)
"RTN","ORRCEVT",17,0)
 D USER^XQALERT(ORXQ,ORUSR) Q:+$G(@ORXQ)<1
"RTN","ORRCEVT",18,0)
 S ORI=0 F  S ORI=$O(@ORXQ@(ORI)) Q:ORI<1  S XQAID=$P(@ORXQ@(ORI),U,2) D
"RTN","ORRCEVT",19,0)
 . Q:XQAID'?1"OR,".E  S PAT=+$P(XQAID,",",2),NOT=+$P(XQAID,",",3)
"RTN","ORRCEVT",20,0)
 . I $D(^TMP($J,"ORRCLST")),'$D(^TMP($J,"ORRCY",PAT)) Q  ;pt not on list
"RTN","ORRCEVT",21,0)
 . I "^18^19^20^35^36^"'[(U_NOT_U) S:'$$INCLD ^TMP($J,"ORRCNOTF",PAT)=1 Q  ;non-ADT alerts
"RTN","ORRCEVT",22,0)
 . S X=+$G(@ORY@(PAT)),@ORY@(PAT)=X+1,@ORY@(PAT,"VST:"_XQAID)=""
"RTN","ORRCEVT",23,0)
 K @ORXQ,^TMP($J,"ORSLT")
"RTN","ORRCEVT",24,0)
 Q
"RTN","ORRCEVT",25,0)
 ;
"RTN","ORRCEVT",26,0)
INCLD() ; -- Order already in Results column?
"RTN","ORRCEVT",27,0)
 I "^3^14^21^22^23^24^25^53^57^58^"'[(U_NOT_U) Q 0
"RTN","ORRCEVT",28,0)
 I (ACTDT<1)!(ACTDT>DT) Q 0
"RTN","ORRCEVT",29,0)
 N X,DATE,DATA
"RTN","ORRCEVT",30,0)
 S DATE=$P(XQAID,";",3),DATA=$G(^XTV(8992,ORUSR,"XQA",DATE,1))
"RTN","ORRCEVT",31,0)
 S X=$P(DATA,"|") S:$L(X,"~")>2 X=$P(X,"~",2,3) I X="" Q 0
"RTN","ORRCEVT",32,0)
 I '$G(^TMP($J,"ORSLT",PAT,X)) Q 0
"RTN","ORRCEVT",33,0)
 Q 1
"RTN","ORRCEVT",34,0)
 ;
"RTN","ORRCEVT",35,0)
IDS(ORY,ORPAT,ORBEG,OREND) ; -- Return appointments for ORPAT
"RTN","ORRCEVT",36,0)
 ; in @ORY@(ORPAT) = #appts
"RTN","ORRCEVT",37,0)
 ;    @ORY@(ORPAT,ID) = "" per appt
"RTN","ORRCEVT",38,0)
 ; [from ORRCDPT1]
"RTN","ORRCEVT",39,0)
 N ORVST,ORI,CNT,ID,ORDG,ORLIST,ORIFN,STS,STRT,ORDT
"RTN","ORRCEVT",40,0)
 S ORY=$NA(^TMP($J,"ORRCEVT")) K @ORY
"RTN","ORRCEVT",41,0)
 S ORPAT=+$G(ORPAT),ORBEG=$G(ORBEG),OREND=$G(OREND)
"RTN","ORRCEVT",42,0)
 D VST^ORWCV(.ORVST,ORPAT,ORBEG,OREND,1) ;=ID^FMdate^ClinicName^StatusName
"RTN","ORRCEVT",43,0)
 S (CNT,ORI)=0 F  S ORI=$O(ORVST(ORI)) Q:ORI<1  D
"RTN","ORRCEVT",44,0)
 . S ID="VST:"_$P(ORVST(ORI),U)_";"_ORPAT
"RTN","ORRCEVT",45,0)
 . S CNT=CNT+1,@ORY@(ORPAT,ID)=""
"RTN","ORRCEVT",46,0)
 ;+scheduled Radiology procedures
"RTN","ORRCEVT",47,0)
 S ORDG=+$O(^ORD(100.98,"B","XRAY",0)),ORPAT=+ORPAT_";DPT("
"RTN","ORRCEVT",48,0)
 D EN^ORQ1(ORPAT,ORDG,2) S ORDT=$S($G(DT):DT,1:$P($$NOW^XLFDT,"."))
"RTN","ORRCEVT",49,0)
 S ORI=0 F  S ORI=$O(^TMP("ORR",$J,ORLIST,ORI)) Q:ORI<1  S ORIFN=^(ORI) D
"RTN","ORRCEVT",50,0)
 . S STS=$P($G(^OR(100,+ORIFN,3)),U,3),STRT=$P($G(^(0)),U,8)
"RTN","ORRCEVT",51,0)
 . Q:"^1^2^7^12^13^14^"[(U_STS_U)  I STRT,STRT<ORDT Q  ;done
"RTN","ORRCEVT",52,0)
 . S CNT=CNT+1,@ORY@(ORPAT,"VST:"_+ORIFN)=""
"RTN","ORRCEVT",53,0)
 S:CNT @ORY@(ORPAT)=CNT K ^TMP("ORR",$J,ORLIST)
"RTN","ORRCEVT",54,0)
 Q
"RTN","ORRCEVT",55,0)
 ;
"RTN","ORRCEVT",56,0)
LIST(ORY,ORPAT,ORUSR,ORDET) ; -- Return alerted events to ORUSR for ORPAT
"RTN","ORRCEVT",57,0)
 ; in @ORY@(#) = Item=ID^Text^Date in HL7 format, and also if ORDET
"RTN","ORRCEVT",58,0)
 ;             = Text=line of associated document text
"RTN","ORRCEVT",59,0)
 ; RPC = ORRC EVENTS BY PATIENT
"RTN","ORRCEVT",60,0)
 N ORXQ,ORN,I,XQAID,NOT,TEXT,DATE
"RTN","ORRCEVT",61,0)
 S ORXQ=$NA(^TMP($J,"ORXQ")) K @ORXQ D USER^XQALERT(ORXQ,+$G(ORUSR))
"RTN","ORRCEVT",62,0)
 S ORY=$NA(^TMP($J,"ORRCEVT")),ORN=0 K @ORY
"RTN","ORRCEVT",63,0)
 S I=0 F  S I=$O(@ORXQ@(I)) Q:I<1  D
"RTN","ORRCEVT",64,0)
 . S TEXT=$P(@ORXQ@(I),U),XQAID=$P(@ORXQ@(I),U,2),DATE=$P(XQAID,";",3)
"RTN","ORRCEVT",65,0)
 . Q:XQAID'?1"OR,".E  Q:+$P(XQAID,",",2)'=ORPAT
"RTN","ORRCEVT",66,0)
 . S NOT=+$P(XQAID,",",3) Q:"^18^19^20^35^36^"'[(U_NOT_U)
"RTN","ORRCEVT",67,0)
 . S ORN=ORN+1,@ORY@(ORN)="Item=VST:"_XQAID_U_$E(TEXT,23,99)_U_$$FMTHL7^XLFDT(DATE)
"RTN","ORRCEVT",68,0)
 . I $G(ORDET) D NOTE
"RTN","ORRCEVT",69,0)
 K @ORXQ
"RTN","ORRCEVT",70,0)
 Q
"RTN","ORRCEVT",71,0)
 ;
"RTN","ORRCEVT",72,0)
APPT(ORY,ORPAT,ORBEG,OREND,ORDET) ; -- Return past/future appointments
"RTN","ORRCEVT",73,0)
 ; in @ORY@(#) = Item=ID^Text^Date in HL7 format^Status, and also if ORDET
"RTN","ORRCEVT",74,0)
 ;             = Text=line of associated document text
"RTN","ORRCEVT",75,0)
 ; RPC = ORRC APPTS BY PATIENT
"RTN","ORRCEVT",76,0)
 N ORN,ORVST,ORI,X,ID,LOC,DATE,VISIT,ORNOTE,ORJ,ORDG,ORLIST,ORIFN,STS,STRT,NOW
"RTN","ORRCEVT",77,0)
 S ORPAT=+$G(ORPAT),ORBEG=$$HL7TFM^XLFDT($G(ORBEG)),OREND=$$HL7TFM^XLFDT($G(OREND)),NOW=$$NOW^XLFDT
"RTN","ORRCEVT",78,0)
 D VST^ORWCV(.ORVST,ORPAT,ORBEG,OREND,1) ;=ID^FMdate^ClinicName^StatusName
"RTN","ORRCEVT",79,0)
 S ORY=$NA(^TMP($J,"ORRCAPPT")),ORN=0 K @ORY
"RTN","ORRCEVT",80,0)
 S ORI=0 F  S ORI=$O(ORVST(ORI)) Q:ORI<1  D
"RTN","ORRCEVT",81,0)
 . S X=ORVST(ORI),DATE=$P(X,U,2)
"RTN","ORRCEVT",82,0)
 . S ID="VST:"_$P(X,U)_";"_ORPAT,LOC=+$P(ID,";",3)
"RTN","ORRCEVT",83,0)
 . S ORN=ORN+1,@ORY@(ORN)="Item="_ID_U_$P(X,U,3)_U_$$FMTHL7^XLFDT(DATE)_U_$P(X,U,4)
"RTN","ORRCEVT",84,0)
 . I $G(ORDET) D
"RTN","ORRCEVT",85,0)
 .. I DATE>NOW S ORN=ORN+1,@ORY@(ORN)="Text=Scheduled Appointment" Q
"RTN","ORRCEVT",86,0)
 .. I $G(^SC(LOC,"OOS")) S ORN=ORN+1,@ORY@(ORN)="Text=No note available" Q
"RTN","ORRCEVT",87,0)
 .. S VISIT=+$$GETENC^PXAPI(ORPAT,DATE,LOC) K ORNOTE
"RTN","ORRCEVT",88,0)
 .. D DETNOTE^ORQQVS(.ORNOTE,ORPAT,VISIT)
"RTN","ORRCEVT",89,0)
 .. S ORJ=0 F  S ORJ=$O(ORNOTE(ORJ)) Q:ORJ<1  S ORN=ORN+1,@ORY@(ORN)="Text="_ORNOTE(ORJ)
"RTN","ORRCEVT",90,0)
 ;+future Radiology procedures in #100
"RTN","ORRCEVT",91,0)
 S ORDG=+$O(^ORD(100.98,"B","XRAY",0)),ORPAT=+ORPAT_";DPT("
"RTN","ORRCEVT",92,0)
 D EN^ORQ1(ORPAT,ORDG,2) S ORNOW=$$NOW^XLFDT
"RTN","ORRCEVT",93,0)
 S ORI=0 F  S ORI=$O(^TMP("ORR",$J,ORLIST,ORI)) Q:ORI<1  S ORIFN=^(ORI) D
"RTN","ORRCEVT",94,0)
 . S STS=$P($G(^OR(100,+ORIFN,3)),U,3),STRT=$P($G(^(0)),U,8)
"RTN","ORRCEVT",95,0)
 . Q:"^1^2^7^12^13^14^"[(U_STS_U)  I STRT,STRT<ORNOW Q  ;done
"RTN","ORRCEVT",96,0)
 . S ORN=ORN+1,@ORY@(ORN)="Item=VST:"_+ORIFN_U_$$TXT^ORRCOR(+ORIFN)_U_$$FMTHL7^XLFDT(STRT)_U_$$STS^ORRCOR(+ORIFN)
"RTN","ORRCEVT",97,0)
 . I $G(ORDET) D ORD^ORRCOR
"RTN","ORRCEVT",98,0)
 K ^TMP("ORR",$J,ORLIST)
"RTN","ORRCEVT",99,0)
 Q
"RTN","ORRCEVT",100,0)
 ;
"RTN","ORRCEVT",101,0)
TEXT(ORY,VISIT) ; -- Return associated document text of VISITs
"RTN","ORRCEVT",102,0)
 ; where VISIT(#) = ID
"RTN","ORRCEVT",103,0)
 ; in @ORY@(#) = Item=ID^Text^Date in HL7 format
"RTN","ORRCEVT",104,0)
 ;             = Text=line of document text
"RTN","ORRCEVT",105,0)
 ; RPC = ORRC EVENTS BY ID
"RTN","ORRCEVT",106,0)
 N ORN,ORI,ID,XQAID,LOC,TEXT,DATE,VST,ORIFN,DFN,ORNOTE,NOW
"RTN","ORRCEVT",107,0)
 S NOW=$$NOW^XLFDT,ORN=0,ORY=$NA(^TMP($J,"ORRCEVT")) K @ORY
"RTN","ORRCEVT",108,0)
 S ORI="" F  S ORI=$O(VISIT(ORI)) Q:ORI=""  S ID=$P(VISIT(ORI),":",2) D
"RTN","ORRCEVT",109,0)
 . I ID D  Q  ;order
"RTN","ORRCEVT",110,0)
 .. S DATE=$P($G(^OR(100,+ID,0)),U,8)
"RTN","ORRCEVT",111,0)
 .. S ORN=ORN+1,@ORY@(ORN)="Item=VST:"_ID_U_$$TXT^ORRCOR(+ID)_U_$$FMTHL7^XLFDT(DATE)
"RTN","ORRCEVT",112,0)
 .. S ORIFN=ID D ORD^ORRCOR
"RTN","ORRCEVT",113,0)
 . I ID?1"OR,".E D  Q  ;alert
"RTN","ORRCEVT",114,0)
 .. S TEXT=$$MSGTXT^ORRCXQ(ID),DATE=+$P(ID,";",3)
"RTN","ORRCEVT",115,0)
 .. S ORN=ORN+1,@ORY@(ORN)="Item=VST:"_ID_U_TEXT_U_$$FMTHL7^XLFDT(DATE)
"RTN","ORRCEVT",116,0)
 .. S XQAID=ID D NOTE
"RTN","ORRCEVT",117,0)
 . S DATE=$P(ID,";",2),LOC=+$P(ID,";",3),DFN=+$P(ID,";",4)
"RTN","ORRCEVT",118,0)
 . S ORN=ORN+1,@ORY@(ORN)="Item=VST:"_ID_U_$P($G(^SC(LOC,0)),U)_U_DATE
"RTN","ORRCEVT",119,0)
 . I DATE>NOW S ORN=ORN+1,@ORY@(ORN)="Text=Scheduled Appointment" Q
"RTN","ORRCEVT",120,0)
 . S VST=+$$GETENC^PXAPI(DFN,DATE,LOC) K ORNOTE
"RTN","ORRCEVT",121,0)
 . D DETNOTE^ORQQVS(.ORNOTE,DFN,VST)
"RTN","ORRCEVT",122,0)
 . S ORJ=0 F  S ORJ=$O(ORNOTE(ORJ)) Q:ORJ<1  S ORN=ORN+1,@ORY@(ORN)="Text="_ORNOTE(ORJ)
"RTN","ORRCEVT",123,0)
 Q
"RTN","ORRCEVT",124,0)
 ;
"RTN","ORRCEVT",125,0)
NOTE ; -- Add note text associated with event in alert XQAID to @ORY@(ORN)
"RTN","ORRCEVT",126,0)
 ;    Expects TEXT,DATE from alert
"RTN","ORRCEVT",127,0)
 N DFN,NOT,VDT,VAIP,VAERR,LOC,VISIT,ORZ,ORI,ENC
"RTN","ORRCEVT",128,0)
 S DFN=+$P(XQAID,",",2),NOT=+$P(XQAID,",",3),VDT=$$MSGDT^ORRCXQ(DATE,TEXT)
"RTN","ORRCEVT",129,0)
 I NOT=20,TEXT?1"Died on ".E S ORN=ORN+1,@ORY@(ORN)="Text=No details available." Q
"RTN","ORRCEVT",130,0)
 I NOT=19 D  ;Unsched visit
"RTN","ORRCEVT",131,0)
 . S LOC=0,VISIT=0 ;IA #2065
"RTN","ORRCEVT",132,0)
 . S ENC=0 F  S ENC=$O(^SCE("ADFN",DFN,VDT,ENC)) Q:ENC<1  D  Q:LOC
"RTN","ORRCEVT",133,0)
 .. S X0=$G(^SCE(ENC,0)) Q:$P(X0,U,6)  Q:$P(X0,U,8)=1  ;not parent, appt
"RTN","ORRCEVT",134,0)
 .. Q:$G(^SC(+$P(X0,U,4),"OOS"))  ;not OOS loc
"RTN","ORRCEVT",135,0)
 .. S LOC=+$P(X0,U,4),VISIT=+$P(X0,U,5)
"RTN","ORRCEVT",136,0)
 . S:VISIT<1 VISIT=+$$GETENC^PXAPI(DFN,VDT,LOC)
"RTN","ORRCEVT",137,0)
 . K ORZ D DETNOTE^ORQQVS(.ORZ,DFN,VISIT)
"RTN","ORRCEVT",138,0)
 I NOT'=19 D  ;inpt mvt
"RTN","ORRCEVT",139,0)
 . S VAIP("D")=$S(NOT=18!(NOT=36):DATE,1:VDT) D IN5^VADPT
"RTN","ORRCEVT",140,0)
 . S VDT=+VAIP(13,1),LOC=+$G(^DIC(42,+VAIP(13,4),44))
"RTN","ORRCEVT",141,0)
 . S VISIT=+$$GETENC^PXAPI(DFN,VDT,LOC)
"RTN","ORRCEVT",142,0)
 . K ORZ D DETSUM^ORQQVS(.ORZ,DFN,VISIT)
"RTN","ORRCEVT",143,0)
 . K ^TMP("PXKENC",$J)
"RTN","ORRCEVT",144,0)
 S ORI=0 F  S ORI=$O(ORZ(ORI)) Q:ORI<1  S ORN=ORN+1,@ORY@(ORN)="Text="_ORZ(ORI)
"RTN","ORRCEVT",145,0)
 Q
"RTN","ORRCEVT",146,0)
 ;
"RTN","ORRCEVT",147,0)
CLEAR(ORY,ORUSR,VISIT) ; -- Clear VISIT alerts for ORUSR
"RTN","ORRCEVT",148,0)
 ; where VISIT(#) = ID
"RTN","ORRCEVT",149,0)
 ; returns ORY(#) = ID ^ 1 or 0, if successful
"RTN","ORRCEVT",150,0)
 ; RPC = ORRC EVENTS ACKNOWLEDGE
"RTN","ORRCEVT",151,0)
 Q:'$G(ORUSR)  N ORN,ORI,XQAID S ORN=0 K ORY
"RTN","ORRCEVT",152,0)
 S ORI=""  F  S ORI=$O(VISIT(ORI)) Q:ORI=""  D
"RTN","ORRCEVT",153,0)
 . S XQAID=$P(VISIT(ORI),":",2)
"RTN","ORRCEVT",154,0)
 . D DELETE^ORRCXQ(XQAID)
"RTN","ORRCEVT",155,0)
 . S ORN=ORN+1,ORY(ORN)="VST:"_XQAID_"^1"
"RTN","ORRCEVT",156,0)
 Q
"RTN","ORRCEVT",157,0)
 ;
"RTN","ORRCEVT",158,0)
TEST19(USR) ; -- Trigger Unsched Visit alert to test
"RTN","ORRCEVT",159,0)
 N XQA,XQAID,XQAMSG
"RTN","ORRCEVT",160,0)
 S XQA(USR)="",XQAID="OR,54,19",XQAMSG="RAMBO,JOH (R1239): Unscheduled visit on OCT 14,1999@17:16:21"
"RTN","ORRCEVT",161,0)
 D SETUP^XQALERT
"RTN","ORRCEVT",162,0)
 Q
"RTN","ORRCEVT",163,0)
 ;
"RTN","ORRCEVT",164,0)
TEST35(USR) ; -- Trigger Discharge alert to test
"RTN","ORRCEVT",165,0)
 N XQA,XQAID,XQAMSG
"RTN","ORRCEVT",166,0)
 S XQA(USR)="",XQAID="OR,?,35",XQAMSG="Discharged on ?"
"RTN","ORRCEVT",167,0)
 D SETUP^XQALERT
"RTN","ORRCEVT",168,0)
 Q
"RTN","ORRCEVT",169,0)
 ;
"RTN","ORRCEVT",170,0)
TEST20(USR) ; -- Trigger Deceased alert to test
"RTN","ORRCEVT",171,0)
 N XQA,XQAID,XQAMSG
"RTN","ORRCEVT",172,0)
 S XQA(USR)="",XQAID="OR,91265,20",XQAMSG="BABBITT,K (B8838): Died on AUG 31,1999"
"RTN","ORRCEVT",173,0)
 D SETUP^XQALERT
"RTN","ORRCEVT",174,0)
 Q
"RTN","ORRCLNP")
0^7^B525065
"RTN","ORRCLNP",1,0)
ORRCLNP ; SLC/JER - Person functions for CM ; 25 Jul 2003  9:31 AM
"RTN","ORRCLNP",2,0)
 ;;1.0;CARE MANAGEMENT;;Jul 15, 2003
"RTN","ORRCLNP",3,0)
EMAIL(USER) ; e-mail address
"RTN","ORRCLNP",4,0)
 Q $$NETNAME^XMXUTIL(USER)
"RTN","ORRCLNP",5,0)
NAME(USER) ; Person Name
"RTN","ORRCLNP",6,0)
 Q $$NAME^XUSER(USER)
"RTN","ORRCLNP",7,0)
SSNL4(USER) ; SSN Last4
"RTN","ORRCLNP",8,0)
 N ORRCY
"RTN","ORRCLNP",9,0)
 S ORRCY=$P($G(^VA(200,USER,1)),U,9)
"RTN","ORRCLNP",10,0)
 Q $S(+ORRCY:$E(ORRCY,6,10),1:ORRCY)
"RTN","ORRCLNP",11,0)
SEX(USER) ; Person SEX
"RTN","ORRCLNP",12,0)
 Q $P($G(^VA(200,USER,1)),U,2)
"RTN","ORRCLNP",13,0)
PROVIDER(USER) ; Boolean fn: is user a provider
"RTN","ORRCLNP",14,0)
 Q $S(+$D(^XUSEC("PROVIDER",USER)):1,+$$ISA^USRLM(USER,"PROVIDER"):1,1:0)
"RTN","ORRCLPT")
0^8^B266293
"RTN","ORRCLPT",1,0)
ORRCLPT ; SLC/JER - Pt functions for CM ; 25 Jul 2003  9:31 AM
"RTN","ORRCLPT",2,0)
 ;;1.0;CARE MANAGEMENT;;Jul 15, 2003
"RTN","ORRCLPT",3,0)
NAME(DFN) ; Pt Name
"RTN","ORRCLPT",4,0)
 Q $P($G(^DPT(DFN,0)),U)
"RTN","ORRCLPT",5,0)
SSNL4(DFN) ; SSN Last4
"RTN","ORRCLPT",6,0)
 N ORRCY
"RTN","ORRCLPT",7,0)
 S ORRCY=$$SSN^DPTLK1(DFN)
"RTN","ORRCLPT",8,0)
 Q $S(+ORRCY:$E(ORRCY,6,10),1:ORRCY)
"RTN","ORRCLPT",9,0)
SEX(DFN) ; Pt SEX
"RTN","ORRCLPT",10,0)
 Q $P($G(^DPT(DFN,0)),U,2)
"RTN","ORRCLPT",11,0)
AGE(DFN) ; Pt AGE
"RTN","ORRCLPT",12,0)
 Q $$AGE^ORWPT(DFN,$$DOB^DPTLK1(DFN,2))
"RTN","ORRCOR")
0^10^B42048781
"RTN","ORRCOR",1,0)
ORRCOR ;SLC/MKB - OR data for CM ; 25 Jul 2003  9:31 AM
"RTN","ORRCOR",2,0)
 ;;1.0;CARE MANAGEMENT;;Jul 15, 2003
"RTN","ORRCOR",3,0)
 ;
"RTN","ORRCOR",4,0)
PTUNS(ORY,ORUSR) ; -- Return list of patients with unsigned orders by ORUSR
"RTN","ORRCOR",5,0)
 ; in @ORY@(PAT) = #unsigned orders
"RTN","ORRCOR",6,0)
 ;    @ORY@(PAT,"ORU:ien;act")=""
"RTN","ORRCOR",7,0)
 ; [from ORRCDPT]
"RTN","ORRCOR",8,0)
 N IDX,PAT,IFN,ACT,NUM,X
"RTN","ORRCOR",9,0)
 S ORY=$NA(^TMP($J,"ORRCORU")),IDX="^OR(100,""AS"")" K @ORY
"RTN","ORRCOR",10,0)
 F  S IDX=$Q(@IDX) Q:IDX'?1"^OR(100,""AS"",".E  D
"RTN","ORRCOR",11,0)
 . S PAT=+$P($P(IDX,",",3),"""",2),IFN=+$P(IDX,",",5),ACT=+$P(IDX,",",6)
"RTN","ORRCOR",12,0)
 . Q:+$P($G(^OR(100,IFN,8,ACT,0)),U,3)'=ORUSR
"RTN","ORRCOR",13,0)
 . S X=+$G(ORY(PAT)),ORY(PAT)=X+1,ORY(PAT,"ORU:"_IFN_";"_ACT)=""
"RTN","ORRCOR",14,0)
 Q
"RTN","ORRCOR",15,0)
 ;
"RTN","ORRCOR",16,0)
IDS(ORY,ORPAT,ORTYPE,ORBEG,OREND) ; -- Return order IDs for ORPAT where
"RTN","ORRCOR",17,0)
 ; ORTYPE = ORN: Active Nursing Orders (2)
"RTN","ORRCOR",18,0)
 ;          ORV: Orders Unverified by Nursing (9)
"RTN","ORRCOR",19,0)
 ; in @ORY@(PAT) = #orders
"RTN","ORRCOR",20,0)
 ;    @ORY@(PAT,ID)= ! if completed (for ORN), else null
"RTN","ORRCOR",21,0)
 ; [from ORRCDPT1]
"RTN","ORRCOR",22,0)
 N ORN,ORWARD,ORFLG,ORID,ORDG,ORPKG,ORLIST,ORI,ORIFN,STS,PKG,X
"RTN","ORRCOR",23,0)
 S ORY=$NA(^TMP($J,"ORRCORU")) K @ORY
"RTN","ORRCOR",24,0)
 S ORPAT=+$G(ORPAT)_";DPT(",ORTYPE=$G(ORTYPE,"ORD")
"RTN","ORRCOR",25,0)
 S ORWARD=$G(^DPT(+ORPAT,.1)) S:$L(ORWARD) ORWARD=+$O(^DIC(42,"B",ORWARD,0))
"RTN","ORRCOR",26,0)
 S ORFLG=$S(ORTYPE="ORU":11,ORTYPE="ORV":9,1:2),ORID=ORTYPE_":"
"RTN","ORRCOR",27,0)
 S ORDG=$S(ORTYPE="ORN":"NURS",1:"ALL"),ORDG=+$O(^ORD(100.98,"B",ORDG,0))
"RTN","ORRCOR",28,0)
 S ORPKG=+$O(^DIC(9.4,"C","OR",0))
"RTN","ORRCOR",29,0)
 ;S (ORBEG,OREND)="" I ORFLG=9 S OREND=$$NOW^XLFDT,ORBEG=OREND-1
"RTN","ORRCOR",30,0)
 D EN^ORQ1(ORPAT,ORDG,ORFLG,,$G(ORBEG),$G(OREND)) S (ORI,CNT)=0
"RTN","ORRCOR",31,0)
 F  S ORI=+$O(^TMP("ORR",$J,ORLIST,ORI)) Q:ORI<1  S ORIFN=^(ORI) D
"RTN","ORRCOR",32,0)
 . S STS=$P($G(^OR(100,+ORIFN,3)),U,3),PKG=+$P($G(^(0)),U,14),X=""
"RTN","ORRCOR",33,0)
 . ;I ORTYPE="ORV",STS=1,+$G(^(6))=10 Q  ;changed ??
"RTN","ORRCOR",34,0)
 . I ORTYPE="ORN","^1^2^7^11^12^13^14^"[(U_STS_U)!(PKG'=ORPKG) S X="!" ;can't complete
"RTN","ORRCOR",35,0)
 . S CNT=CNT+1,@ORY@(+ORPAT,ORID_ORIFN)=X
"RTN","ORRCOR",36,0)
 S:CNT @ORY@(+ORPAT)=CNT K ^TMP("ORR",$J,ORLIST)
"RTN","ORRCOR",37,0)
 Q
"RTN","ORRCOR",38,0)
 ;
"RTN","ORRCOR",39,0)
LISTUNS(ORY,ORUSR,ORPAT,ORDET) ; -- Return unsigned orders by ORUSR for ORPAT
"RTN","ORRCOR",40,0)
 ; in @ORY@(#) = Item=ID^Text^OrderDate in HL7 format
"RTN","ORRCOR",41,0)
 ;             = Order=line of order text, and also if ORDET
"RTN","ORRCOR",42,0)
 ;             = Text=line of report text
"RTN","ORRCOR",43,0)
 ; [from LIST^ORRCSIG]
"RTN","ORRCOR",44,0)
 N ORN,ORDT,ORIFN,ORACT,ORID,ORTX,I
"RTN","ORRCOR",45,0)
 S ORY=$NA(^TMP($J,"ORRCORD")) K @ORY
"RTN","ORRCOR",46,0)
 S ORUSR=+$G(ORUSR),ORPAT=+$G(ORPAT)_";DPT(",ORN=0
"RTN","ORRCOR",47,0)
 S ORDT=0 F  S ORDT=+$O(^OR(100,"AS",ORPAT,ORDT)) Q:ORDT<1  D
"RTN","ORRCOR",48,0)
 . S ORIFN=0 F  S ORIFN=+$O(^OR(100,"AS",ORPAT,ORDT,ORIFN)) Q:ORIFN<1  D
"RTN","ORRCOR",49,0)
 .. S ORACT=0 F  S ORACT=+$O(^OR(100,"AS",ORPAT,ORDT,ORIFN,ORACT)) Q:ORACT<1  D
"RTN","ORRCOR",50,0)
 ... Q:+$P($G(^OR(100,ORIFN,8,ORACT,0)),U,3)'=ORUSR  S ORID=ORIFN_";"_ORACT
"RTN","ORRCOR",51,0)
 ... D TEXT^ORQ12(.ORTX,ORID,200)
"RTN","ORRCOR",52,0)
 ... S ORN=ORN+1,@ORY@(ORN)="Item=ORU:"_ORID_U_$$TXT1_U_$$FMTHL7^XLFDT(ORDT)_U_$$STS(ORIFN)
"RTN","ORRCOR",53,0)
 ... S I=0 F  S I=$O(ORTX(I)) Q:I<1  S ORN=ORN+1,@ORY@(ORN)="Order="_ORTX(I)
"RTN","ORRCOR",54,0)
 ... I $G(ORDET) D ORD ;add Detailed Display to @ORY@(#)
"RTN","ORRCOR",55,0)
 ;S ORY(0)=CNT
"RTN","ORRCOR",56,0)
 Q
"RTN","ORRCOR",57,0)
 ;
"RTN","ORRCOR",58,0)
LIST(ORY,ORPAT,ORTYPE,ORUSR,ORDET,ORBEG,OREND) ; -- Return orders for ORPAT where
"RTN","ORRCOR",59,0)
 ; ORTYPE = ORN: Active Nursing Orders (2)
"RTN","ORRCOR",60,0)
 ;          ORV: Orders Unverified by Nursing (9)
"RTN","ORRCOR",61,0)
 ;          ORU: Unsigned Orders by ORUSR (11)
"RTN","ORRCOR",62,0)
 ; in @ORY@(#) = Item=ID^Text^OrderDate in HL7 format^Status
"RTN","ORRCOR",63,0)
 ;             = Order=line of order text, & if ORDET
"RTN","ORRCOR",64,0)
 ;             = Text=line of report text
"RTN","ORRCOR",65,0)
 ;    where ID = ORTYPE_":"_order#;action#
"RTN","ORRCOR",66,0)
 ; RPC = ORRC ORDERS BY PATIENT
"RTN","ORRCOR",67,0)
 N ORN,ORWARD,ORIGVIEW,ORFLG,ORID,ORDG,ORLIST,ORI,ORIFN,ORACT,OR0,ORA0,ORDT,ORTX,I
"RTN","ORRCOR",68,0)
 S ORY=$NA(^TMP($J,"ORRCORD")) K @ORY
"RTN","ORRCOR",69,0)
 S ORUSR=+$G(ORUSR),ORPAT=+$G(ORPAT)_";DPT(",ORTYPE=$G(ORTYPE,"ORD")
"RTN","ORRCOR",70,0)
 S ORWARD=$G(^DPT(+ORPAT,.1)),ORIGVIEW=1
"RTN","ORRCOR",71,0)
 S:$L(ORWARD) ORWARD=+$O(^DIC(42,"B",ORWARD,0))
"RTN","ORRCOR",72,0)
 S ORFLG=$S(ORTYPE="ORU":11,ORTYPE="ORV":9,1:2),ORID=ORTYPE_":"
"RTN","ORRCOR",73,0)
 S ORDG=$S(ORTYPE="ORN":"NURS",1:"ALL"),ORDG=+$O(^ORD(100.98,"B",ORDG,0))
"RTN","ORRCOR",74,0)
 S:$G(ORBEG) ORBEG=$$HL7TFM^XLFDT(ORBEG) S:$G(OREND) OREND=$$HL7TFM^XLFDT(OREND)
"RTN","ORRCOR",75,0)
 D EN^ORQ1(ORPAT,ORDG,ORFLG,,$G(ORBEG),$G(OREND)) S (ORI,ORN)=0
"RTN","ORRCOR",76,0)
 F  S ORI=+$O(^TMP("ORR",$J,ORLIST,ORI)) Q:ORI<1  S ORIFN=^(ORI) D
"RTN","ORRCOR",77,0)
 . S ORACT=+$P(ORIFN,";",2) S:ORACT<1 ORACT=+$P($G(^OR(100,+ORIFN,3)),U,7)
"RTN","ORRCOR",78,0)
 . S OR0=$G(^OR(100,+ORIFN,0)),ORA0=$G(^(8,ORACT,0))
"RTN","ORRCOR",79,0)
 . I ORFLG=11,+$P(ORA0,U,3)'=ORUSR Q
"RTN","ORRCOR",80,0)
 . S ORDT=$S('$P(OR0,U,8):$P(ORA0,U),"^DC^HD^"[(U_$P(ORA0,U,2)_U):$P(ORA0,U),1:$P(OR0,U,8))
"RTN","ORRCOR",81,0)
 . D TEXT^ORQ12(.ORTX,ORIFN,200)
"RTN","ORRCOR",82,0)
 . S ORN=ORN+1,@ORY@(ORN)="Item="_ORID_ORIFN_U_$$TXT1_U_$$FMTHL7^XLFDT(ORDT)_U_$$STS(ORIFN)
"RTN","ORRCOR",83,0)
 . S I=0 F  S I=$O(ORTX(I)) Q:I<1  S ORN=ORN+1,@ORY@(ORN)="Order="_ORTX(I)
"RTN","ORRCOR",84,0)
 . I $G(ORDET) D ORD ;add Detailed Display to @ORY@(#)
"RTN","ORRCOR",85,0)
 Q
"RTN","ORRCOR",86,0)
 ;
"RTN","ORRCOR",87,0)
DETAIL(ORY,ORDER) ; -- Return details of ORDERs
"RTN","ORRCOR",88,0)
 ; where ORDER(#) = ID
"RTN","ORRCOR",89,0)
 ; in @ORY@(#) = Item=ID^Text^OrderDate in HL7 format^Status
"RTN","ORRCOR",90,0)
 ;             = Order=line of order text
"RTN","ORRCOR",91,0)
 ;             = Text=line of report text
"RTN","ORRCOR",92,0)
 ; RPC = ORRC ORDERS BY ID [and from DETAIL^ORRCSIG]
"RTN","ORRCOR",93,0)
 N ORN,ORI,ORID,ORIFN,ORACT,ORDT,ORTX,I
"RTN","ORRCOR",94,0)
 S ORN=0,ORY=$NA(^TMP($J,"ORRCORD")) K @ORY
"RTN","ORRCOR",95,0)
 S ORI="" F  S ORI=$O(ORDER(ORI)) Q:ORI=""  S ORID=ORDER(ORI) D
"RTN","ORRCOR",96,0)
 . S ORIFN=$P(ORID,":",2),ORACT=+$P(ORIFN,";",2)
"RTN","ORRCOR",97,0)
 . S:ORACT<1 ORACT=+$P($G(^OR(100,+ORIFN,3)),U,7) S:ORACT<1 ORACT=1
"RTN","ORRCOR",98,0)
 . S ORDT=+$G(^OR(100,+ORIFN,8,ORACT,0))
"RTN","ORRCOR",99,0)
 . D TEXT^ORQ12(.ORTX,ORIFN,200)
"RTN","ORRCOR",100,0)
 . S ORN=ORN+1,@ORY@(ORN)="Item="_ORID_U_$$TXT1_U_$P($$FMTHL7^XLFDT(ORDT),"-")_U_$$STS(ORIFN)
"RTN","ORRCOR",101,0)
 . S I=0 F  S I=$O(ORTX(I)) Q:I<1  S ORN=ORN+1,@ORY@(ORN)="Order="_ORTX(I)
"RTN","ORRCOR",102,0)
 . D ORD
"RTN","ORRCOR",103,0)
 Q
"RTN","ORRCOR",104,0)
 ;
"RTN","ORRCOR",105,0)
TXT(IFN) ; -- Return [first line of] order IFN's text
"RTN","ORRCOR",106,0)
 N ORTX,Y D TEXT^ORQ12(.ORTX,$G(IFN),200)
"RTN","ORRCOR",107,0)
 S Y=$G(ORTX(1))_$S($O(ORTX(1)):"...",1:"")
"RTN","ORRCOR",108,0)
 Q Y
"RTN","ORRCOR",109,0)
 ;
"RTN","ORRCOR",110,0)
TXT1() ; -- Return [first line of] order text from ORTX()
"RTN","ORRCOR",111,0)
 N Y
"RTN","ORRCOR",112,0)
 S Y=$G(ORTX(1))_$S($O(ORTX(1)):"...",1:"")
"RTN","ORRCOR",113,0)
 Q Y
"RTN","ORRCOR",114,0)
 ;
"RTN","ORRCOR",115,0)
STS(IFN) ; --Return name of order IFN's status
"RTN","ORRCOR",116,0)
 N STS,X,Y
"RTN","ORRCOR",117,0)
 S STS=+$P($G(^OR(100,+$G(IFN),3)),U,3)
"RTN","ORRCOR",118,0)
 S X=$P($G(^ORD(100.01,STS,0)),U),Y=$$LOW^XLFSTR(X)
"RTN","ORRCOR",119,0)
 Q Y
"RTN","ORRCOR",120,0)
 ;
"RTN","ORRCOR",121,0)
ORD ; -- Add details of ORIFN to @ORY@(ORN)
"RTN","ORRCOR",122,0)
 Q:'+$G(ORIFN)  N ORZ,ORI,ORVP
"RTN","ORRCOR",123,0)
 S ORVP=$P($G(^OR(100,+ORIFN,0)),U,2)
"RTN","ORRCOR",124,0)
 S ORZ="^TMP($J,""ORTXT"")" D DETAIL^ORQ2(.ORZ,ORIFN)
"RTN","ORRCOR",125,0)
 S ORI=0 F  S ORI=$O(@ORZ@(ORI)) Q:ORI<1  S ORN=ORN+1,@ORY@(ORN)="Text="_@ORZ@(ORI)
"RTN","ORRCOR",126,0)
 K @ORZ
"RTN","ORRCOR",127,0)
 Q
"RTN","ORRCOR",128,0)
 ;
"RTN","ORRCOR",129,0)
VERIFY(ORY,ORUSR,ORDER) ; -- Mark ORDERs as verified by ORUSR
"RTN","ORRCOR",130,0)
 ;where ORDER(#) = ID = ORV:order#;action#
"RTN","ORRCOR",131,0)
 ;returns ORY(#) = ID^1 if successful, else ID^0^error
"RTN","ORRCOR",132,0)
 ;RPC = ORRC ORDERS VERIFY
"RTN","ORRCOR",133,0)
 Q:'$G(ORUSR)  N ORVER,ORI,ORID,ORIFN,ORACT,ORA0,ORLK,ORES,ORERR,ORVP,ORWARD
"RTN","ORRCOR",134,0)
 K ORY S ORVER="N"
"RTN","ORRCOR",135,0)
 S ORI=""  F  S ORI=$O(ORDER(ORI)) Q:ORI=""  D
"RTN","ORRCOR",136,0)
 . S ORID=ORDER(ORI),ORIFN=$P(ORID,":",2),ORACT=+$P(ORIFN,";",2)
"RTN","ORRCOR",137,0)
 . I ORACT<1 S ORACT=+$P($G(^OR(100,+ORIFN,3)),U,7),ORIFN=+ORIFN_";"_ORACT
"RTN","ORRCOR",138,0)
 . S ORA0=$G(^OR(100,+ORIFN,8,ORACT,0)) I $P(ORA0,U,9) D  Q  ;verified
"RTN","ORRCOR",139,0)
 .. N WHO,WHEN,X S WHO=$P(ORA0,U,8),WHEN=$P(ORA0,U,9),X=""
"RTN","ORRCOR",140,0)
 .. S:WHO X=X_" by "_$P($G(^VA(200,WHO,0)),U)
"RTN","ORRCOR",141,0)
 .. S:WHEN X=X_" on "_$$FMTE^XLFDT(WHEN,"2P")
"RTN","ORRCOR",142,0)
 .. S ORY(ORI)=ORID_"^0^This order has been verified"_X_"!" Q
"RTN","ORRCOR",143,0)
 . S ORLK=$$LOCK1^ORX2(+ORIFN) I 'ORLK S ORY(ORI)=ORID_U_ORLK Q
"RTN","ORRCOR",144,0)
 . S ORES(ORIFN)=ORID,ORES("B",ORIFN)=ORI
"RTN","ORRCOR",145,0)
 . D REPLCD^ORCACT1 ;incl unverified replaced orders
"RTN","ORRCOR",146,0)
 Q:'$O(ORES(0))  S ORIFN=0 F  S ORIFN=$O(ORES(ORIFN)) Q:ORIFN<1  D
"RTN","ORRCOR",147,0)
 . S ORVP=$P($G(^OR(100,+ORIFN,0)),U,2),ORVP(ORVP)=""
"RTN","ORRCOR",148,0)
 . D EN^ORCSEND(ORIFN,"VR","","",,,.ORERR),UNLK1^ORX2(+ORIFN)
"RTN","ORRCOR",149,0)
 . S ORID=$G(ORES(ORIFN)),ORI=+$G(ORES("B",ORIFN))
"RTN","ORRCOR",150,0)
 . I ORI S ORY(ORI)=ORID_U_$S($G(ORERR):"0^"_$P(ORERR,U,2),1:1)
"RTN","ORRCOR",151,0)
 S ORVP="" F  S ORVP=$O(ORVP(ORVP)) Q:ORVP=""  D
"RTN","ORRCOR",152,0)
 . S ORWARD=$S($G(^DPT(+ORVP,.105)):1,1:0) ;inpt
"RTN","ORRCOR",153,0)
 . D CKALERT^ORCACT1 ;delete unver orders alerts
"RTN","ORRCOR",154,0)
 Q
"RTN","ORRCOR",155,0)
 ;
"RTN","ORRCOR",156,0)
COMP(ORY,ORUSR,ORDER) ; -- Mark ORDERs as completed by ORUSR
"RTN","ORRCOR",157,0)
 ;where ORDER(#) = ID = ORN:order#;action#
"RTN","ORRCOR",158,0)
 ;returns ORY(#) = ID^1 if successful, else ID^0^error
"RTN","ORRCOR",159,0)
 ;RPC = ORRC ORDERS COMPLETE
"RTN","ORRCOR",160,0)
 Q:'$G(ORUSR)  N ORNOW,ORI,ORID,ORIFN,ORLK
"RTN","ORRCOR",161,0)
 K ORY S ORNOW=+$E($$NOW^XLFDT,1,12)
"RTN","ORRCOR",162,0)
 S ORI=""  F  S ORI=$O(ORDER(ORI)) Q:ORI=""  D
"RTN","ORRCOR",163,0)
 . S ORID=ORDER(ORI),ORIFN=+$P(ORID,":",2)
"RTN","ORRCOR",164,0)
 . S ORLK=$$LOCK1^ORX2(ORIFN) I 'ORLK S ORY(ORI)=ORID_U_ORLK Q
"RTN","ORRCOR",165,0)
 . D COMP^ORCSAVE2(ORIFN,ORUSR,ORNOW),UNLK1^ORX2(ORIFN)
"RTN","ORRCOR",166,0)
 . S ORY(ORI)=ORID_U_$S($P($G(^OR(100,ORIFN,6)),U,6):1,1:0)
"RTN","ORRCOR",167,0)
 Q
"RTN","ORRCQLPT")
0^11^B1006284
"RTN","ORRCQLPT",1,0)
ORRCQLPT  ; SLC/TH - CPRS Query Tools - Libraries ; 25 Jul 2003  9:31 AM
"RTN","ORRCQLPT",2,0)
 ;;1.0;CARE MANAGEMENT;;Jul 15, 2003
"RTN","ORRCQLPT",3,0)
 ;
"RTN","ORRCQLPT",4,0)
PTDFN(VAL,ID) ; Return patient info given an order, consult, or note
"RTN","ORRCQLPT",5,0)
 N DFN,X,X0,X1,X101
"RTN","ORRCQLPT",6,0)
 S VAL="",DFN=0,X=$P(ID,":")
"RTN","ORRCQLPT",7,0)
 I X="ORD"!(X="CST") S DFN=+$P(^OR(100,+$P(ID,":",2),0),U,2)
"RTN","ORRCQLPT",8,0)
 I X="DOC" S DFN=+$P(^TIU(8925,+$P(ID,":",2),0),U,2)
"RTN","ORRCQLPT",9,0)
 I X="PTC" S DFN=+$P(ID,":",2)
"RTN","ORRCQLPT",10,0)
 ;I X="VST" visits too?
"RTN","ORRCQLPT",11,0)
 Q:'DFN
"RTN","ORRCQLPT",12,0)
 S VAL=DFN
"RTN","ORRCQLPT",13,0)
 Q
"RTN","ORRCQLPT",14,0)
 ;
"RTN","ORRCQLPT",15,0)
PTDEMOS(ORY,DFN) ; Return patient info
"RTN","ORRCQLPT",16,0)
 ; ORY="<dfn>^<name>^<ssn>^<dob>^<age>"
"RTN","ORRCQLPT",17,0)
 ; RPC = ORRCQLPT PTDEMOS
"RTN","ORRCQLPT",18,0)
 N VADM,VA,VAERR
"RTN","ORRCQLPT",19,0)
 D DEM^VADPT
"RTN","ORRCQLPT",20,0)
 S ORY=DFN_U_VADM(1)_U_VA("PID")_U_$$FMTHL7^XLFDT(+VADM(3))_U_VADM(4)
"RTN","ORRCQLPT",21,0)
 Q
"RTN","ORRCQLPT",22,0)
 ;
"RTN","ORRCQLPT",23,0)
TESTPTD(DFN)    ; Test PTDEMOS
"RTN","ORRCQLPT",24,0)
 N ORY
"RTN","ORRCQLPT",25,0)
 D PTDEMOS(.ORY,DFN)
"RTN","ORRCQLPT",26,0)
 W !,ORY
"RTN","ORRCQLPT",27,0)
 Q
"RTN","ORRCSIG")
0^12^B11096954
"RTN","ORRCSIG",1,0)
ORRCSIG ;SLC/MKB - Signature utilities for CM ; 25 Jul 2003  9:31 AM
"RTN","ORRCSIG",2,0)
 ;;1.0;CARE MANAGEMENT;;Jul 15, 2003
"RTN","ORRCSIG",3,0)
 ;
"RTN","ORRCSIG",4,0)
 ; ID = "DOC:"_Document# or "ORU:"_Order# everywhere below
"RTN","ORRCSIG",5,0)
 ;
"RTN","ORRCSIG",6,0)
LIST(ORY,ORUSR,ORPAT,ORDET) ; -- Return unsigned orders and documents by ORUSR for ORPAT
"RTN","ORRCSIG",7,0)
 ; in @ORY@(#) = Item=ID^Text^Date in HL7 format, and also if ORDET
"RTN","ORRCSIG",8,0)
 ;             = Text=line of report text
"RTN","ORRCSIG",9,0)
 ; RPC = ORRC UNSIGNED BY PATIENT
"RTN","ORRCSIG",10,0)
 N ORN,ORI,ORORD,ORDOC
"RTN","ORRCSIG",11,0)
 S ORUSR=+$G(ORUSR),ORPAT=+$G(ORPAT)
"RTN","ORRCSIG",12,0)
 D LISTUNS^ORRCOR(.ORORD,ORUSR,ORPAT,$G(ORDET))
"RTN","ORRCSIG",13,0)
 D LISTUNS^ORRCTIU(.ORDOC,ORUSR,ORPAT,$G(ORDET))
"RTN","ORRCSIG",14,0)
 S ORY=$NA(^TMP($J,"ORRCSIG")),ORN=0 K @ORY
"RTN","ORRCSIG",15,0)
 S ORI=0 F  S ORI=$O(@ORORD@(ORI)) Q:ORI<1  S ORN=ORN+1,@ORY@(ORN)=@ORORD@(ORI)
"RTN","ORRCSIG",16,0)
 S ORI=0 F  S ORI=$O(@ORDOC@(ORI)) Q:ORI<1  S ORN=ORN+1,@ORY@(ORN)=@ORDOC@(ORI)
"RTN","ORRCSIG",17,0)
 K @ORORD,@ORDOC
"RTN","ORRCSIG",18,0)
 Q
"RTN","ORRCSIG",19,0)
 ;
"RTN","ORRCSIG",20,0)
DETAIL(ORY,ITEM) ; -- Return details of unsigned ITEMs
"RTN","ORRCSIG",21,0)
 ; where ITEM(#) = ID
"RTN","ORRCSIG",22,0)
 ;   in @ORY@(#) = Item=ID^Text^Date in HL7 format
"RTN","ORRCSIG",23,0)
 ;               = Text=line of report text
"RTN","ORRCSIG",24,0)
 ; RPC = ORRC UNSIGNED BY ID
"RTN","ORRCSIG",25,0)
 N ORN,ORI,ORID,ORO,ORD,ORORD,ORDOC
"RTN","ORRCSIG",26,0)
 S ORI="" F  S ORI=$O(ITEM(ORI)) Q:ORI=""  S ORID=ITEM(ORI) D
"RTN","ORRCSIG",27,0)
 . I ORID["OR" S ORO(ORI)=ORID
"RTN","ORRCSIG",28,0)
 . I ORID["DOC" S ORD(ORI)=ORID
"RTN","ORRCSIG",29,0)
 D DETAIL^ORRCOR(.ORORD,.ORO),TEXT^ORRCTIU(.ORDOC,.ORD)
"RTN","ORRCSIG",30,0)
 S ORY=$NA(^TMP($J,"ORRCSIG")),ORN=0 K @ORY
"RTN","ORRCSIG",31,0)
 S ORI=0 F  S ORI=$O(@ORORD@(ORI)) Q:ORI<1  S ORN=ORN+1,@ORY@(ORN)=@ORORD@(ORI)
"RTN","ORRCSIG",32,0)
 S ORI=0 F  S ORI=$O(@ORDOC@(ORI)) Q:ORI<1  S ORN=ORN+1,@ORY@(ORN)=@ORDOC@(ORI)
"RTN","ORRCSIG",33,0)
 K @ORORD,@ORDOC
"RTN","ORRCSIG",34,0)
 Q
"RTN","ORRCSIG",35,0)
 ;
"RTN","ORRCSIG",36,0)
SIGN(ORY,ORNP,LOC,ESCODE,ITEM) ; -- Apply signature to ITEMs
"RTN","ORRCSIG",37,0)
 ; where ITEM(#) = ID for notes, or for orders
"RTN","ORRCSIG",38,0)
 ;               = ID^DFN^Release Flag^Signature Status^Nature of Order
"RTN","ORRCSIG",39,0)
 ;   in @ORY@(#) = ID^Success Indicator^Error Message (if 'Success)
"RTN","ORRCSIG",40,0)
 ; RPC = ORRC SIGN ITEMS
"RTN","ORRCSIG",41,0)
 N ORN,DFN,ORID,ORO,ORD,ORORD,ORDOC
"RTN","ORRCSIG",42,0)
 S ORI="" F  S ORI=$O(ITEM(ORI)) Q:ORI=""  D
"RTN","ORRCSIG",43,0)
 . S ORID=$P(ITEM(ORI),U)
"RTN","ORRCSIG",44,0)
 . I ORID["OR" S ORO(ORI)=$P(ORID,":",2)_U_$P(ITEM(ORI),U,2,5)
"RTN","ORRCSIG",45,0)
 . I ORID["DOC" D
"RTN","ORRCSIG",46,0)
 . . N ERROR
"RTN","ORRCSIG",47,0)
 . . D SIGN^TIUSRVP(.ERROR,$P(ORID,":",2),ESCODE)
"RTN","ORRCSIG",48,0)
 . . S ORDOC(ORI)=ORID_U_'+ERROR_$P(ERROR,U,2)
"RTN","ORRCSIG",49,0)
 I $D(ORO) D SIGNORDR(.ORORD,ORNP,LOC,.ORO)
"RTN","ORRCSIG",50,0)
 S ORY=$NA(^TMP($J,"ORRCSIG")),ORN=0 K @ORY
"RTN","ORRCSIG",51,0)
 S ORI=0 F  S ORI=$O(ORORD(ORI)) Q:ORI<1  S ORN=ORN+1,@ORY@(ORN)=ORORD(ORI)
"RTN","ORRCSIG",52,0)
 S ORI=0 F  S ORI=$O(ORDOC(ORI)) Q:ORI<1  S ORN=ORN+1,@ORY@(ORN)=ORDOC(ORI)
"RTN","ORRCSIG",53,0)
 Q
"RTN","ORRCSIG",54,0)
SIGNORDR(ORORD,ORNP,LOC,ORO)    ; Sign orders
"RTN","ORRCSIG",55,0)
 N OROBYPT,DFN,OREI,ORNDX,ORERRS
"RTN","ORRCSIG",56,0)
 D SORTORDR(.ORBYPT,.ORO),INDEX(.ORNDX,.ORO,.ORORD)
"RTN","ORRCSIG",57,0)
 S DFN=0 F  S DFN=$O(ORBYPT(DFN)) Q:+DFN'>0  D
"RTN","ORRCSIG",58,0)
 . N ORLST M ORLST=ORBYPT(DFN)
"RTN","ORRCSIG",59,0)
 . ;D SIGN^ORWD(.ORERRS,DFN,ORNP,LOC,.ORLST)
"RTN","ORRCSIG",60,0)
 S OREI=0 F  S OREI=$O(ORERRS(OREI)) Q:+OREI'>0  D
"RTN","ORRCSIG",61,0)
 . N ORID,ORI S ORID=$P(ORERRS(OREI),U),ORI=$G(ORNDX(ORID))
"RTN","ORRCSIG",62,0)
 . I +ORI S ORORD(ORI)=ORID_U_0_U_$P(ORERRS(OREI),U,2)
"RTN","ORRCSIG",63,0)
 Q
"RTN","ORRCSIG",64,0)
TSTSORT ; Test SORTORDR and INDEX calls
"RTN","ORRCSIG",65,0)
 N ORO,ORI,ORBYPT,ORNDX,ORORD
"RTN","ORRCSIG",66,0)
 S ORO(1)="123^987^1^U^E"
"RTN","ORRCSIG",67,0)
 S ORO(3)="176^789^1^U^E"
"RTN","ORRCSIG",68,0)
 S ORO(5)="221^987^1^U^E"
"RTN","ORRCSIG",69,0)
 S ORO(6)="233^321^1^U^E"
"RTN","ORRCSIG",70,0)
 S ORO(9)="311^789^1^U^E"
"RTN","ORRCSIG",71,0)
 S ORO(15)="339^321^1^U^E"
"RTN","ORRCSIG",72,0)
 ;W ! S ORI=0 F  S ORI=$O(ORO(ORI)) Q:+ORI'>0  D
"RTN","ORRCSIG",73,0)
 ;. W !,"ORO(",ORI,")=",ORO(ORI)
"RTN","ORRCSIG",74,0)
 ;D SORTORDR(.ORBYPT,.ORO),INDEX(.ORNDX,.ORO,.ORORD)
"RTN","ORRCSIG",75,0)
 ;W ! ZW ORBYPT W ! ZW ORNDX W ! ZW ORORD
"RTN","ORRCSIG",76,0)
 Q
"RTN","ORRCSIG",77,0)
SORTORDR(ORBYPT,ORO)    ; Sort orders by patient
"RTN","ORRCSIG",78,0)
 N ORI S ORI=0
"RTN","ORRCSIG",79,0)
 F  S ORI=$O(ORO(ORI)) Q:+ORI'>0  D
"RTN","ORRCSIG",80,0)
 . N ORDER,DFN,ID S ORDER=ORO(ORI),DFN=$P(ORDER,U,2),ID=$P(ORDER,U)
"RTN","ORRCSIG",81,0)
 . S ORBYPT(DFN,ORI)=ID_U_$P(ORDER,U,3,5)
"RTN","ORRCSIG",82,0)
 Q
"RTN","ORRCSIG",83,0)
INDEX(ORNDX,ORO,ORORD)  ; Index orders
"RTN","ORRCSIG",84,0)
 N ORI S ORI=0
"RTN","ORRCSIG",85,0)
 F  S ORI=$O(ORO(ORI)) Q:+ORI'>0  D
"RTN","ORRCSIG",86,0)
 . N ORID S ORID=$P(ORO(ORI),U)
"RTN","ORRCSIG",87,0)
 . S ORNDX(ORID)=ORI,ORORD(ORI)=ORID_U_1
"RTN","ORRCSIG",88,0)
 Q
"RTN","ORRCTIU")
0^13^B23646519
"RTN","ORRCTIU",1,0)
ORRCTIU ; SLC/JER - TIU data for CM ; 7 Oct 2003  14:16
"RTN","ORRCTIU",2,0)
 ;;1.0;CARE MANAGEMENT;;Jul 15, 2003
"RTN","ORRCTIU",3,0)
 ;
"RTN","ORRCTIU",4,0)
GETPTUNS(ORRCY,AUDUZ) ; Get pts w/documents that need user's signature
"RTN","ORRCTIU",5,0)
 ; Returns @ORRCY@(DFN,"DOC:"_TIUDA)=""
"RTN","ORRCTIU",6,0)
 ; [from ORRCDPT]
"RTN","ORRCTIU",7,0)
 N TITLE,GVN,ORT,TIUDA,ORDFN
"RTN","ORRCTIU",8,0)
 S TITLE=0,GVN=$NA(^TIU(8925,"AAU")),ORRCY=$NA(^TMP($J,"ORRCTIU")) K @ORRCY
"RTN","ORRCTIU",9,0)
 F  S TITLE=$O(@GVN@(AUDUZ,TITLE)) Q:+TITLE'>0  D
"RTN","ORRCTIU",10,0)
 . S ORT=0 F  S ORT=$O(@GVN@(AUDUZ,TITLE,5,ORT)) Q:+ORT'>0  D
"RTN","ORRCTIU",11,0)
 .. S TIUDA=0
"RTN","ORRCTIU",12,0)
 .. F  S TIUDA=$O(@GVN@(AUDUZ,TITLE,5,ORT,TIUDA)) Q:+TIUDA'>0  D
"RTN","ORRCTIU",13,0)
 ... S ORDFN=$P($G(^TIU(8925,TIUDA,0)),U,2) Q:+ORDFN'>0
"RTN","ORRCTIU",14,0)
 ... I $D(^TMP($J,"ORRCLST")),'$D(^TMP($J,"ORRCY",ORDFN)) Q  ;not on list
"RTN","ORRCTIU",15,0)
 ... I '+$$CANDO^TIULP(TIUDA,"SIGNATURE",AUDUZ) Q  ; user may not sign
"RTN","ORRCTIU",16,0)
 ... S @ORRCY@(ORDFN,"DOC:"_TIUDA)=""
"RTN","ORRCTIU",17,0)
 S TITLE=0,GVN=$NA(^TIU(8925,"ASUP"))
"RTN","ORRCTIU",18,0)
 F  S TITLE=$O(@GVN@(AUDUZ,TITLE)) Q:+TITLE'>0  D
"RTN","ORRCTIU",19,0)
 . N STATUS F STATUS=5,6 D
"RTN","ORRCTIU",20,0)
 .. S ORT=0 F  S ORT=$O(@GVN@(AUDUZ,TITLE,STATUS,ORT)) Q:+ORT'>0  D
"RTN","ORRCTIU",21,0)
 ... S TIUDA=0
"RTN","ORRCTIU",22,0)
 ... F  S TIUDA=$O(@GVN@(AUDUZ,TITLE,STATUS,ORT,TIUDA)) Q:+TIUDA'>0  D
"RTN","ORRCTIU",23,0)
 .... S ORDFN=$P($G(^TIU(8925,TIUDA,0)),U,2) Q:+ORDFN'>0
"RTN","ORRCTIU",24,0)
 .... I $D(^TMP($J,"ORRCLST")),'$D(^TMP($J,"ORRCY",ORDFN)) Q  ;not on list
"RTN","ORRCTIU",25,0)
 .... I '+$$CANDO^TIULP(TIUDA,$S(STATUS=5:"SIGNATURE",1:"COSIGNATURE"),AUDUZ) Q  ; user may not Sign/Cosign
"RTN","ORRCTIU",26,0)
 .... S @ORRCY@(ORDFN,"DOC:"_TIUDA)=""
"RTN","ORRCTIU",27,0)
 Q
"RTN","ORRCTIU",28,0)
 ;
"RTN","ORRCTIU",29,0)
LISTUNS(ORY,ORUSR,ORPAT) ; -- Get list of unsigned documents for ORPAT by ORUSR
"RTN","ORRCTIU",30,0)
 ; 
"RTN","ORRCTIU",31,0)
 Q
"RTN","ORRCTIU",32,0)
 ;
"RTN","ORRCTIU",33,0)
TEXT(ORY,DOC) ; -- Return text of DOCs in
"RTN","ORRCTIU",34,0)
 ; @ORY@(#) = Item=ID^Title^Date IN HL7 format
"RTN","ORRCTIU",35,0)
 ;          = Text=line of document text
"RTN","ORRCTIU",36,0)
 N ORN,ORI,TIUDA,TIUY,TIUI,TIUX
"RTN","ORRCTIU",37,0)
 S ORN=0,ORY=$NA(^TMP($J,"ORRCDOC")) K @ORY
"RTN","ORRCTIU",38,0)
 S ORI="" F  S ORI=$O(DOC(ORI)) Q:ORI=""  D
"RTN","ORRCTIU",39,0)
 . S TIUDA=+$P(DOC(ORI),":",2) D TGET^TIUSRVR1(.TIUY,TIUDA)
"RTN","ORRCTIU",40,0)
 . S TIUX=$$RESOLVE^TIUSRVLO(TIUDA)
"RTN","ORRCTIU",41,0)
 . S ORN=ORN+1,@ORY@(ORN)="Item=DOC:"_TIUDA_U_$P(TIUX,U)_U_$P($$FMTHL7^XLFDT($P(TIUX,U,2)),"-")_U_$$REQENC(TIUDA)
"RTN","ORRCTIU",42,0)
 . S TIUI=0 F  S TIUI=$O(@TIUY@(TIUI)) Q:TIUI<1  S ORN=ORN+1,@ORY@(ORN)="Text="_@TIUY@(TIUI)
"RTN","ORRCTIU",43,0)
 Q
"RTN","ORRCTIU",44,0)
 ;
"RTN","ORRCTIU",45,0)
REQENC(TIUDA)   ; -- Determine whether encounter data is needed
"RTN","ORRCTIU",46,0)
 N ORRD0,ORRD12,ORSVC,ORRY,ORRDP,ORRSA,ORASK,ORRPRIMD,DATANEED,ORROPT,LST,ORRPRIME
"RTN","ORRCTIU",47,0)
 S ORRD0=$G(^TIU(8925,TIUDA,0)),ORRD12=$G(^(12)),ORRY="false"
"RTN","ORRCTIU",48,0)
 S (ORROPT,DATANEED)=0
"RTN","ORRCTIU",49,0)
 ; Load existing encounter data, if available
"RTN","ORRCTIU",50,0)
 D PCE4NOTE^ORWPCE3(.LST,TIUDA,+$P(ORRD0,U,2))
"RTN","ORRCTIU",51,0)
 ; identify primary provider
"RTN","ORRCTIU",52,0)
 S ORRPRIMD=$$GETPRIMD(TIUDA,ORRD12,.LST)
"RTN","ORRCTIU",53,0)
 ; determine whether "Data Needed"
"RTN","ORRCTIU",54,0)
 ; 1. if encdt > today quit false
"RTN","ORRCTIU",55,0)
 I +$P(ORRD0,U,7)>(DT_".235959") G CHKASK
"RTN","ORRCTIU",56,0)
 ; 2. if service category '= "A", "I", or "T" quit false
"RTN","ORRCTIU",57,0)
 S ORSVC=$P(ORRD0,U,13)
"RTN","ORRCTIU",58,0)
 I '$S(ORSVC="A":1,ORSVC="I":1,ORSVC="T":1,1:0) G CHKASK
"RTN","ORRCTIU",59,0)
 S ORROPT=1
"RTN","ORRCTIU",60,0)
 ; if TIU doc param SUPPRESS DX/CPT ON ENTRY is true, quit false
"RTN","ORRCTIU",61,0)
 D DOCPRM^TIULC1(+ORRD0,.ORRDP)
"RTN","ORRCTIU",62,0)
 I +$P(ORRDP(0),U,14) G CHKASK
"RTN","ORRCTIU",63,0)
 ; if stand-alone visit, quit true
"RTN","ORRCTIU",64,0)
 D HASVISIT^ORWPCE(.ORRSA,TIUDA,+$P(ORRD0,U,2),+$P(ORRD12,U,11),+$P(ORRD0,U,7))
"RTN","ORRCTIU",65,0)
 I ORRSA<1 S DATANEED=1 G CHKASK
"RTN","ORRCTIU",66,0)
 ; if TIU doc param ASK DX/CPT ON ALL OPT VISITS is true, quit true
"RTN","ORRCTIU",67,0)
 I +$P(ORRDP(0),U,16) S DATANEED=1 G CHKASK
"RTN","ORRCTIU",68,0)
CHKASK I +DATANEED S DATANEED=$$CHKPCE(TIUDA,.LST,$P(ORRD0,U,2),$P(ORRD12,U,11))
"RTN","ORRCTIU",69,0)
 D ASKPCE^ORWPCE2(.ORASK,DUZ,+$P(ORRD12,U,11))
"RTN","ORRCTIU",70,0)
 ; if Never or Disable, quit false
"RTN","ORRCTIU",71,0)
 I $S(ORASK=6:1,ORASK=7:1,1:0) S ORRY="false" G REQENCX
"RTN","ORRCTIU",72,0)
 ; if Always, quit true
"RTN","ORRCTIU",73,0)
 I ORASK=5 S ORRY="true" G REQENCX
"RTN","ORRCTIU",74,0)
 ; if Data Needed, quit true
"RTN","ORRCTIU",75,0)
 I ORASK=3,+DATANEED S ORRY="true" G REQENCX
"RTN","ORRCTIU",76,0)
 ; if Outpatient, quit true
"RTN","ORRCTIU",77,0)
 I ORASK=4,+ORROPT S ORRY="true" G REQENCX
"RTN","ORRCTIU",78,0)
 ; If we don't know who the primary encounter provider is, and we need to know, we
"RTN","ORRCTIU",79,0)
 ; must go to the chart to sign the note - so we treat it the same as if they are primary
"RTN","ORRCTIU",80,0)
 I ORRPRIMD=0 S ORRPRIME=1
"RTN","ORRCTIU",81,0)
 E  S ORRPRIME=+(DUZ=ORRPRIMD)
"RTN","ORRCTIU",82,0)
 ; if Primary/Data Needed, quit true
"RTN","ORRCTIU",83,0)
 I ORASK=0,ORRPRIME,+DATANEED S ORRY="true" G REQENCX
"RTN","ORRCTIU",84,0)
 ; if Primary/Outpatient, quit true
"RTN","ORRCTIU",85,0)
 I ORASK=1,ORRPRIME,+ORROPT S ORRY="true" G REQENCX
"RTN","ORRCTIU",86,0)
 ; if Primary Always, quit true
"RTN","ORRCTIU",87,0)
 I ORASK=2,ORRPRIME S ORRY="true" G REQENCX
"RTN","ORRCTIU",88,0)
REQENCX Q ORRY
"RTN","ORRCTIU",89,0)
 ;
"RTN","ORRCTIU",90,0)
CHKPCE(TIUDA,LST,PTNT,LOC)    ; Look for existing PCE data
"RTN","ORRCTIU",91,0)
 N ENCDT,ORI,CPT,COUNT,MAX,ICD,CODE,SUB,EXPNEED,EXP,RESULT,SCREQ,DOCPARM
"RTN","ORRCTIU",92,0)
 S (CPT,ICD,ORI,EXPNEED,EXP,RESULT,COUNT)=0
"RTN","ORRCTIU",93,0)
 S MAX=2
"RTN","ORRCTIU",94,0)
 S ENCDT=$P($P(LST(1),U,4),";",2)
"RTN","ORRCTIU",95,0)
 D SCSEL^ORWPCE(.SCREQ,PTNT,ENCDT,LOC,"")
"RTN","ORRCTIU",96,0)
 D DOCPARM^TIUSRVP1(.DOCPARM,TIUDA,0)
"RTN","ORRCTIU",97,0)
 I +$P(DOCPARM(0),U,15)=1 S EXPNEED=1,MAX=8
"RTN","ORRCTIU",98,0)
 F  S ORI=$O(LST(ORI)) Q:+ORI'>0  D  Q:(COUNT'<MAX)
"RTN","ORRCTIU",99,0)
 . S CODE=$P(LST(ORI),U)
"RTN","ORRCTIU",100,0)
 . I CODE="POV",'ICD S ICD=1,COUNT=COUNT+1
"RTN","ORRCTIU",101,0)
 . I CODE="CPT",'CPT S CPT=1,COUNT=COUNT+1
"RTN","ORRCTIU",102,0)
 . I EXPNEED,CODE="VST" D
"RTN","ORRCTIU",103,0)
 . . N VAL,IDX
"RTN","ORRCTIU",104,0)
 . . S SUB=$P(LST(ORI),U,2),VAL=$P(LST(ORI),U,3)
"RTN","ORRCTIU",105,0)
 . . S IDX=$S(SUB="SC":1,SUB="AO":2,SUB="IR":3,SUB="EC":4,SUB="MST":5,SUB="HNC":6,1:0)
"RTN","ORRCTIU",106,0)
 . . I IDX>0 S COUNT=COUNT+1 I VAL'="" S $P(SCREQ,";",IDX)=0
"RTN","ORRCTIU",107,0)
 I 'ICD Q 1
"RTN","ORRCTIU",108,0)
 I 'CPT Q 1
"RTN","ORRCTIU",109,0)
 F ORI=1:1:6 D  Q:RESULT=1
"RTN","ORRCTIU",110,0)
 . I $P($P(SCREQ,";",ORI),U,1) S RESULT=1
"RTN","ORRCTIU",111,0)
 Q RESULT
"RTN","ORRCTIU",112,0)
GETPRIMD(TIUDA,ORRD12,LST)    ; Get the Primary Provider
"RTN","ORRCTIU",113,0)
 N ORRY,ORI,ORMDEF,TIUSPRM S (ORI,ORRY)=0
"RTN","ORRCTIU",114,0)
 D SITEPARM^TIUSRVP1(.TIUSPRM)
"RTN","ORRCTIU",115,0)
 ; 1. Check for the provider in the encounter, if it exists.
"RTN","ORRCTIU",116,0)
 F  S ORI=$O(LST(ORI)) Q:+ORI'>0  D  Q:+ORRY
"RTN","ORRCTIU",117,0)
 . I $P(LST(ORI),U)="PRV",+$P(LST(ORI),U,6) S ORRY=$P(LST(ORI),U,2)
"RTN","ORRCTIU",118,0)
 ; 2. check for the default primary as specified in TIU
"RTN","ORRCTIU",119,0)
 I 'ORRY D  ;DEFDOC^TIUSRVP1(.ORMDEF,$P(ORRD12,U,11),DUZ,$P(ORRD0,U,7),TIUDA) S ORRY=+ORMDEF
"RTN","ORRCTIU",120,0)
 . I +$P(TIUSPRM,U,8)=1 S ORRY=$$DFLTDOC^TIUPXAPI($P(ORRD12,U,11)) I +ORRY'=DUZ S ORRY=0
"RTN","ORRCTIU",121,0)
 Q ORRY
"RTN","ORRCTIU",122,0)
SIGN(ORY,LIST) ; -- Apply signature to documents in LIST(#)=DOC:##
"RTN","ORRCTIU",123,0)
 ; RPC = ORRC UNSIGNED DOCS SIGN
"RTN","ORRCTIU",124,0)
 Q
"RTN","ORRCTSK")
0^14^B44307761
"RTN","ORRCTSK",1,0)
ORRCTSK ;SLC/MKB -- Patient Task file #102.3 utilities ; 25 Jul 2003  9:31 AM
"RTN","ORRCTSK",2,0)
 ;;1.0;CARE MANAGEMENT;;Jul 15, 2003
"RTN","ORRCTSK",3,0)
 ;
"RTN","ORRCTSK",4,0)
 ; ID = "TSK:"_task# everywhere below
"RTN","ORRCTSK",5,0)
 ;
"RTN","ORRCTSK",6,0)
PATS(ORY,ORUSR) ; -- Return list of patients for whom ORUSR has tasks due
"RTN","ORRCTSK",7,0)
 ; in @ORY@(PAT) = #tasks ^ 1 if any are high priority
"RTN","ORRCTSK",8,0)
 ;    @ORY@(PAT,ID) = * if high priority, else null
"RTN","ORRCTSK",9,0)
 ; [from ORRCDPT]
"RTN","ORRCTSK",10,0)
 N ORPROV,DUE,PAT,CNT,ABN,IFN,X0
"RTN","ORRCTSK",11,0)
 S ORY=$NA(^TMP($J,"ORRCTSK")) K @ORY
"RTN","ORRCTSK",12,0)
 S ORUSR=+$G(ORUSR),DUE=$S($G(DT):DT,1:$P($$NOW^XLFDT,"."))
"RTN","ORRCTSK",13,0)
 S PAT=0 F  S PAT=+$O(^ORRT(102.3,"DUE",PAT)) Q:PAT<1  D
"RTN","ORRCTSK",14,0)
 . I $D(^TMP($J,"ORRCLST")),'$D(^TMP($J,"ORRCY",PAT)) Q  ;pt not on list
"RTN","ORRCTSK",15,0)
 . S ORPROV=$$PROV(ORUSR,PAT),(CNT,ABN,IFN)=0
"RTN","ORRCTSK",16,0)
 . F  S IFN=+$O(^ORRT(102.3,"DUE",PAT,IFN)) Q:IFN<1  D
"RTN","ORRCTSK",17,0)
 .. S X0=$G(^ORRT(102.3,IFN,0)) I $P(X0,U,5),$P($P(X0,U,5),".")>DUE Q
"RTN","ORRCTSK",18,0)
 .. I $P(X0,U,2)'=+ORUSR,'ORPROV Q  ;not linked provider
"RTN","ORRCTSK",19,0)
 .. S @ORY@(PAT,"TSK:"_IFN)=$S($P(X0,U,4)="H":"*",1:"")
"RTN","ORRCTSK",20,0)
 .. S CNT=CNT+1 S:$P(X0,U,4)="H" ABN=1
"RTN","ORRCTSK",21,0)
 . I CNT S @ORY@(PAT)=CNT_U_ABN
"RTN","ORRCTSK",22,0)
 Q
"RTN","ORRCTSK",23,0)
 ;
"RTN","ORRCTSK",24,0)
IDS(ORY,PAT) ; -- Return due tasks for PAT
"RTN","ORRCTSK",25,0)
 ; in @ORY@(PAT) = #tasks ^ 1 if any are high priority
"RTN","ORRCTSK",26,0)
 ;    @ORY@(PAT,ID) = * if high priority, else null
"RTN","ORRCTSK",27,0)
 ; [from ORRCDPT1]
"RTN","ORRCTSK",28,0)
 N DUE,CNT,ABN,IFN,X0
"RTN","ORRCTSK",29,0)
 S ORY=$NA(^TMP($J,"ORRCTSK")) K @ORY
"RTN","ORRCTSK",30,0)
 S DUE=$S($G(DT):DT,1:$P($$NOW^XLFDT,".")),CNT=0,ABN=""
"RTN","ORRCTSK",31,0)
 S IFN=0 F  S IFN=+$O(^ORRT(102.3,"DUE",PAT,IFN)) Q:IFN<1  D
"RTN","ORRCTSK",32,0)
 . S X0=$G(^ORRT(102.3,IFN,0)) I $P(X0,U,5),$P($P(X0,U,5),".")>DUE Q
"RTN","ORRCTSK",33,0)
 . S @ORY@(PAT,"TSK:"_IFN)=$S($P(X0,U,4)="H":"*",1:"")
"RTN","ORRCTSK",34,0)
 . S CNT=CNT+1 S:$P(X0,U,4)="H" ABN=1
"RTN","ORRCTSK",35,0)
 S:CNT @ORY@(PAT)=CNT_U_ABN
"RTN","ORRCTSK",36,0)
 Q
"RTN","ORRCTSK",37,0)
 ;
"RTN","ORRCTSK",38,0)
PROV(USR,PAT) ; -- Return 1 or 0, if USR is a provider for PAT
"RTN","ORRCTSK",39,0)
 N Y,LIST S Y=0 S USR=+$G(USR),PAT=+$G(PAT)
"RTN","ORRCTSK",40,0)
 I +$G(^DPT(PAT,.104))=USR S Y=1 G PVQ ;Prim Prov
"RTN","ORRCTSK",41,0)
 I +$G(^DPT(PAT,.1041))=USR S Y=1 G PVQ ;Attending Prov
"RTN","ORRCTSK",42,0)
 S PAT=PAT_";DPT(",LIST=0
"RTN","ORRCTSK",43,0)
 F  S LIST=+$O(^OR(100.21,"AB",PAT,LIST)) Q:LIST<1  I $G(^OR(100.21,LIST,1,USR,0)) S Y=1 Q
"RTN","ORRCTSK",44,0)
PVQ Q Y
"RTN","ORRCTSK",45,0)
 ;
"RTN","ORRCTSK",46,0)
LIST(ORY,ORPAT,ORUSR,ORDUE) ; -- Return incomplete[ORDUE] tasks [by ORUSR] for ORPAT
"RTN","ORRCTSK",47,0)
 ; in ORY(#) = ID^subject^date created^who created^patient^priority^due^date completed^who completed^date canceled^who canceled^items
"RTN","ORRCTSK",48,0)
 ; RPC = ORRC TASKS BY PATIENT
"RTN","ORRCTSK",49,0)
 N ORN,ORPROV,IFN,X0,X1,I,ITMS,X K ORY
"RTN","ORRCTSK",50,0)
 S ORN=0,ORPAT=+$G(ORPAT),ORPROV=$S($G(ORUSR):$$PROV(ORUSR,ORPAT),1:"")
"RTN","ORRCTSK",51,0)
 I $G(ORDUE) S ORDUE=$$HL7TFM^XLFDT(ORDUE)
"RTN","ORRCTSK",52,0)
 S IFN=0 F  S IFN=+$O(^ORRT(102.3,"DUE",ORPAT,IFN)) Q:IFN<1  D
"RTN","ORRCTSK",53,0)
 . S X0=$G(^ORRT(102.3,IFN,0)),X1=$G(^(1)),ITMS=""
"RTN","ORRCTSK",54,0)
 . I $G(ORDUE),$P(X0,U,5),$P($P(X0,U,5),".")>ORDUE Q  ;future-not due yet
"RTN","ORRCTSK",55,0)
 . I $G(ORUSR),$P(X0,U,2)'=+ORUSR,'ORPROV Q  ;not linked prov
"RTN","ORRCTSK",56,0)
 . F I=1,5,6,8 S X=$P(X0,U,I) I $L(X) S $P(X0,U,I)=$$FMTHL7^XLFDT(X)
"RTN","ORRCTSK",57,0)
 . S I=0 F  S I=$O(^ORRT(102.3,IFN,2,I)) Q:I<1  S X=$G(^(I,0)),ITMS=ITMS_$S($L(ITMS):"~",1:"")_X
"RTN","ORRCTSK",58,0)
 . S $P(X0,U,10)=ITMS,ORN=ORN+1,ORY(ORN)="TSK:"_IFN_U_X1_U_X0
"RTN","ORRCTSK",59,0)
 Q
"RTN","ORRCTSK",60,0)
 ;
"RTN","ORRCTSK",61,0)
DUE(ORY,ORPAT) ; -- Return tasks that are due for ORPAT
"RTN","ORRCTSK",62,0)
 ; in ORY(#) = ID^subject^date created^who created^patient^priority^due^date completed^who completed^date canceled^who canceled^items
"RTN","ORRCTSK",63,0)
 ; RPC = ORRC TASKS DUE BY PATIENT <not used>
"RTN","ORRCTSK",64,0)
 N ORDT S ORDT=$$FMTHL7^XLFDT($G(DT))
"RTN","ORRCTSK",65,0)
 D LIST(.ORY,ORPAT,,ORDT)
"RTN","ORRCTSK",66,0)
 Q
"RTN","ORRCTSK",67,0)
 ;
"RTN","ORRCTSK",68,0)
DETAIL(ORY,TASK) ; -- Return details of TASKs
"RTN","ORRCTSK",69,0)
 ; where TASK(#) = ID
"RTN","ORRCTSK",70,0)
 ; in ORY(#) = ID^subject^date created^who created^patient^priority^due^date completed^who completed^date canceled^who canceled^items
"RTN","ORRCTSK",71,0)
 ; RPC = ORRC TASKS BY ID
"RTN","ORRCTSK",72,0)
 N ORN,ORI,ID,IFN,X0,X1,ITMS,I,X S ORN=0 K ORY
"RTN","ORRCTSK",73,0)
 S ORI="" F  S ORI=$O(TASK(ORI)) Q:ORI=""  S ID=$G(TASK(ORI)) D
"RTN","ORRCTSK",74,0)
 . S IFN=+$P(ID,":",2),X0=$G(^ORRT(102.3,IFN,0)),X1=$G(^(1))
"RTN","ORRCTSK",75,0)
 . F I=1,5,6,8 S X=$P(X0,U,I) I $L(X) S $P(X0,U,I)=$$FMTHL7^XLFDT(X)
"RTN","ORRCTSK",76,0)
 . S ITMS="",I=0 F  S I=$O(^ORRT(102.3,IFN,2,I)) Q:I<1  S X=$G(^(I,0)),ITMS=ITMS_$S($L(ITMS):"~",1:"")_X
"RTN","ORRCTSK",77,0)
 . S $P(X0,U,10)=ITMS,ORN=ORN+1,ORY(ORN)=ID_U_X1_U_X0
"RTN","ORRCTSK",78,0)
 Q
"RTN","ORRCTSK",79,0)
 ;
"RTN","ORRCTSK",80,0)
NEW(ORY,DATA) ; -- Create new task
"RTN","ORRCTSK",81,0)
 ;   where DATA = [^]subject^date created^user^patient^priority^due^date completed^who completed^date canceled^who canceled^items
"RTN","ORRCTSK",82,0)
 ; returns ORY  = ID if successful, else 0^error message
"RTN","ORRCTSK",83,0)
 ; RPC = ORRC TASK ADD
"RTN","ORRCTSK",84,0)
 N DO,DIC,X,Y,I,ITMS S ORY=""
"RTN","ORRCTSK",85,0)
 I '$L($G(DATA)) S ORY="0^Missing data string" Q
"RTN","ORRCTSK",86,0)
 S DATA=U_DATA,ORY=$$VALID(.DATA) Q:'ORY  ;invalid data
"RTN","ORRCTSK",87,0)
 S DIC="^ORRT(102.3,",DIC(0)="",X=$P(DATA,U,3) S:X<1 X=$$NOW^XLFDT
"RTN","ORRCTSK",88,0)
 D FILE^DICN I Y<1 S ORY="0^Unable to create new task" Q
"RTN","ORRCTSK",89,0)
 S $P(^ORRT(102.3,+Y,0),U,2,9)=$P(DATA,U,4,11),^(1)=$P(DATA,U,2)
"RTN","ORRCTSK",90,0)
 S ^ORRT(102.3,"C",+$P(DATA,U,5),+Y)=""
"RTN","ORRCTSK",91,0)
 I '$P(DATA,U,8),'$P(DATA,U,10) S ^ORRT(102.3,"DUE",+$P(DATA,U,5),+Y)=""
"RTN","ORRCTSK",92,0)
 S ITMS=$P(DATA,U,12) I $L(ITMS) D
"RTN","ORRCTSK",93,0)
 . F I=1:1:$L(ITMS,"~") S X=$P(ITMS,"~",I) I $L(X) S ^ORRT(102.3,+Y,2,I,0)=X,^ORRT(102.3,+Y,2,"B",X,I)=""
"RTN","ORRCTSK",94,0)
 . S ^ORRT(102.3,+Y,2,0)="^102.31AV^"_I_U_I
"RTN","ORRCTSK",95,0)
 S ORY="TSK:"_+Y
"RTN","ORRCTSK",96,0)
 Q
"RTN","ORRCTSK",97,0)
 ;
"RTN","ORRCTSK",98,0)
VALID(DATA) ; -- Returns 1 or 0^error if DATA string is valid
"RTN","ORRCTSK",99,0)
 N X,Y,I,L S Y=1
"RTN","ORRCTSK",100,0)
 S X=$P(DATA,U) I $L(X),'$D(^ORRT(102.3,+$P(X,":",2),0)) S Y="0^Invalid task number" G VQ
"RTN","ORRCTSK",101,0)
 S X=$P(DATA,U,5) I X'=+X!(X<1)!'$D(^DPT(+X,0)) S Y="0^Missing or invalid patient ID" G VQ
"RTN","ORRCTSK",102,0)
 F I=4,9 S X=$P(X,U,I) I $L(X),X'=+X!(X<1)!'$D(^VA(200,+X,0)) S Y="0^Missing or invalid user ID" G VQ
"RTN","ORRCTSK",103,0)
 F I=3,7,8,10 S X=$P(DATA,U,I) I $L(X) D  Q:'Y
"RTN","ORRCTSK",104,0)
 . I $L(X)=12,$E(X,9,12)="0000" S X=$E(X,1,8) ;date only
"RTN","ORRCTSK",105,0)
 . S X=$$HL7TFM^XLFDT(X) I $L(X) S $P(DATA,U,I)=X Q  ;reformat
"RTN","ORRCTSK",106,0)
 . S Y="0^Invalid date "_$S(I=3:"created",I=7:"due",1:"completed")
"RTN","ORRCTSK",107,0)
 S X=$P(DATA,U,6) I $L(X),X'="L",X'="M",X'="H" S Y="0^Invalid priority" G VQ
"RTN","ORRCTSK",108,0)
 S X=$P(DATA,U,2) I '$L(X)!(X["^")!($L(X)>100) S Y="0^Invalid subject text" G VQ
"RTN","ORRCTSK",109,0)
 S X=$P(DATA,U,12) I $L(X) F I=1:1:$P(X,"~") S L=$P(X,"~",I) I $L(L),L'?3U1":".E S Y="0^Invalid linked item ID" Q
"RTN","ORRCTSK",110,0)
VQ Q Y
"RTN","ORRCTSK",111,0)
 ;
"RTN","ORRCTSK",112,0)
EDIT(ORY,TASK) ; -- Change existing tasks
"RTN","ORRCTSK",113,0)
 ;   where TASK(#) = ID^subject^date created^user^patient^priority^due^date completed^who completed^date canceled^who canceled^items
"RTN","ORRCTSK",114,0)
 ; returns ORY(#)  = ID^1 or ID^0^error, if successful or not
"RTN","ORRCTSK",115,0)
 ; RPC = ORRC TASK EDIT
"RTN","ORRCTSK",116,0)
 N ORI,DATA,ID,DA,I,X,Y,SUBJ,ITMS,X0 K ORY
"RTN","ORRCTSK",117,0)
 S ORI="" F  S ORI=$O(TASK(ORI)) Q:ORI=""  S DATA=$G(TASK(ORI)) D
"RTN","ORRCTSK",118,0)
 . S ID=$P(DATA,U),DA=+$P(ID,":",2)
"RTN","ORRCTSK",119,0)
 . I DA<1 S ORY(ORI)=ID_"^0^Invalid task number" Q
"RTN","ORRCTSK",120,0)
 . S X=$$VALID(.DATA) I X<1 S ORY(ORI)=ID_U_X Q
"RTN","ORRCTSK",121,0)
 . L +^ORRT(102.3,DA):5 I '$T S ORY(ORI)=ID_"^0^Another user is editing this task" Q
"RTN","ORRCTSK",122,0)
 . S SUBJ=$P(DATA,U,2),ITMS=$P(DATA,U,12),DATA=$P(DATA,U,3,11)
"RTN","ORRCTSK",123,0)
 . S X0=$G(^ORRT(102.3,DA,0)),^(0)=DATA,^(1)=SUBJ K ^(2) I $L(ITMS) D
"RTN","ORRCTSK",124,0)
 .. F I=1:1:$L(ITMS,"~") S X=$P(ITMS,"~",I) I $L(X) S ^ORRT(102.3,DA,2,I,0)=X,^ORRT(102.3,DA,2,"B",X,I)=""
"RTN","ORRCTSK",125,0)
 .. S ^ORRT(102.3,DA,2,0)="^102.31AV^"_I_U_I
"RTN","ORRCTSK",126,0)
 . I $P(X0,U)'=$P(DATA,U) K ^ORRT(102.3,"B",$P(X0,U),DA) S ^ORRT(102.3,"B",$P(DATA,U),DA)=""
"RTN","ORRCTSK",127,0)
 . I $P(X0,U,3)'=$P(DATA,U,3) K ^ORRT(102.3,"C",$P(X0,U,3),DA) S ^ORRT(102.3,"C",$P(DATA,U,3),DA)=""
"RTN","ORRCTSK",128,0)
 . K ^ORRT(102.3,"DUE",$P(X0,U,3),DA)
"RTN","ORRCTSK",129,0)
 . I '$P(DATA,U,6),'$P(DATA,U,8) S ^ORRT(102.3,"DUE",$P(DATA,U,3),DA)=""
"RTN","ORRCTSK",130,0)
 . S ORY(ORI)=ID_"^1" L -^ORRT(102.3,DA)
"RTN","ORRCTSK",131,0)
 Q
"RTN","ORRCTSK",132,0)
 ;
"RTN","ORRCTSK",133,0)
COMP(ORY,ORUSR,TASK) ; -- Complete tasks by ORUSR
"RTN","ORRCTSK",134,0)
 ;   where TASK(#) = ID
"RTN","ORRCTSK",135,0)
 ; returns ORY(#)  = ID^1 or ID^0^error, if successful or not
"RTN","ORRCTSK",136,0)
 ; RPC = ORRC TASK COMPLETE
"RTN","ORRCTSK",137,0)
 N X,Y,ID,DA,DR,DIE,ORI
"RTN","ORRCTSK",138,0)
 I $G(ORUSR)<1 S ORY(0)="0^Invalid user identifier" Q
"RTN","ORRCTSK",139,0)
 S DIE="^ORRT(102.3,",DR="6///NOW;7///"_+ORUSR
"RTN","ORRCTSK",140,0)
 S ORI="" F  S ORI=$O(TASK(ORI)) Q:ORI=""  S ID=TASK(ORI) D
"RTN","ORRCTSK",141,0)
 . S DA=+$P(ID,":",2) I DA<1 S ORY(ORI)=ID_"^0^Invalid task number" Q
"RTN","ORRCTSK",142,0)
 . L +^ORRT(102.3,DA):5 I '$T S ORY(ORI)=ID_"^0^Another user is editing this task" Q
"RTN","ORRCTSK",143,0)
 . D ^DIE S ORY(ORI)=ID_"^1" L -^ORRT(102.3,DA)
"RTN","ORRCTSK",144,0)
 Q
"RTN","ORRCTSK",145,0)
 ;
"RTN","ORRCTSK",146,0)
CANC(ORY,ORUSR,TASK) ; -- Cancel tasks by ORUSR
"RTN","ORRCTSK",147,0)
 ;   where TASK(#) = ID
"RTN","ORRCTSK",148,0)
 ; returns ORY(#)  = ID^1 or ID^0^error, if successful or not
"RTN","ORRCTSK",149,0)
 ; RPC = ORRC TASK CANCEL
"RTN","ORRCTSK",150,0)
 N X,Y,ID,DA,DR,DIE,ORI
"RTN","ORRCTSK",151,0)
 I $G(ORUSR)<1 S ORY(0)="0^Invalid user identifier" Q
"RTN","ORRCTSK",152,0)
 S DIE="^ORRT(102.3,",DR="8///NOW;9///"_+ORUSR
"RTN","ORRCTSK",153,0)
 S ORI="" F  S ORI=$O(TASK(ORI)) Q:ORI=""  S ID=TASK(ORI) D
"RTN","ORRCTSK",154,0)
 . S DA=+$P(ID,":",2) I DA<1 S ORY(ORI)=ID_"^0^Invalid task number" Q
"RTN","ORRCTSK",155,0)
 . L +^ORRT(102.3,DA):5 I '$T S ORY(ORI)=ID_"^0^Another user is editing this task" Q
"RTN","ORRCTSK",156,0)
 . D ^DIE S ORY(ORI)=ID_"^1" L -^ORRT(102.3,DA)
"RTN","ORRCTSK",157,0)
 Q
"RTN","ORRCTSK",158,0)
 ;
"RTN","ORRCTSK",159,0)
SUBJ(ORY,ORPAT) ; -- Return list of task subjects used for ORPAT
"RTN","ORRCTSK",160,0)
 ; as ORY(#) = task subject
"RTN","ORRCTSK",161,0)
 N ORI,ORN K ORY S ORN=0
"RTN","ORRCTSK",162,0)
 S ORI=0  F  S ORI=$O(^ORRT(102.3,"C",ORPAT,ORI)) Q:ORI<1  D
"RTN","ORRCTSK",163,0)
 . S X=$G(^ORRT(102.3,ORI,1)) Q:'$L(X)
"RTN","ORRCTSK",164,0)
 . S ORN=ORN+1,ORY(ORN)=X
"RTN","ORRCTSK",165,0)
 Q
"RTN","ORRCVIT")
0^16^B17118495
"RTN","ORRCVIT",1,0)
ORRCVIT ;SLC/MKB - Vitals utilities ; 25 Jul 2003  9:31 AM
"RTN","ORRCVIT",2,0)
 ;;1.0;CARE MANAGEMENT;;Jul 15, 2003
"RTN","ORRCVIT",3,0)
 ; 
"RTN","ORRCVIT",4,0)
 ; ID = "VIT:"_PatientID_;_MeasurementDate everywhere below
"RTN","ORRCVIT",5,0)
 ;
"RTN","ORRCVIT",6,0)
LIST(ORY,DFN,SDATE,EDATE,VALS) ; -- Return MAX sets of measurements for DFN
"RTN","ORRCVIT",7,0)
 ; in @ORY@(#) = Item=ID^^MeasurementDate in HL7 format, and if VALS
"RTN","ORRCVIT",8,0)
 ;             = Data=Vital^Value^Unit^MetricValue^Unit^BMI^SuppO2^CriticalFlag^Qualifiers
"RTN","ORRCVIT",9,0)
 ; RPC = ORRC VITALS BY PATIENT
"RTN","ORRCVIT",10,0)
 N ORN,GMRVSTR,CNT,IDT,VDT,TYPE,IFN,DATA,X K ^UTILITY($J,"GMRVD")
"RTN","ORRCVIT",11,0)
 S SDATE=$$HL7TFM^XLFDT($G(SDATE)),EDATE=$$HL7TFM^XLFDT($G(EDATE))
"RTN","ORRCVIT",12,0)
 S DFN=+$G(DFN),MAX=$S(SDATE&EDATE:100,1:5)
"RTN","ORRCVIT",13,0)
 I $G(EDATE),$L(EDATE,".")<2 S EDATE=EDATE_".2359"
"RTN","ORRCVIT",14,0)
 S GMRVSTR="BP;T;R;P;HT;WT;CVP;CG;PO2;PN",GMRVSTR(0)=SDATE_U_EDATE_U_MAX_"^1"
"RTN","ORRCVIT",15,0)
 D EN1^GMRVUT0 S ORY=$NA(^TMP($J,"ORRCVIT")),(ORN,CNT)=0 K @ORY
"RTN","ORRCVIT",16,0)
 S IDT=0 F  S IDT=$O(^UTILITY($J,"GMRVD",IDT)) Q:IDT<1  D  Q:CNT'<MAX
"RTN","ORRCVIT",17,0)
 . S VDT=9999999-IDT,CNT=CNT+1
"RTN","ORRCVIT",18,0)
 . S ORN=ORN+1,@ORY@(ORN)="Item=VIT:"_DFN_";"_VDT_U_U_VDT Q:'$G(VALS)
"RTN","ORRCVIT",19,0)
 . S TYPE="" F  S TYPE=$O(^UTILITY($J,"GMRVD",IDT,TYPE)) Q:TYPE=""  D
"RTN","ORRCVIT",20,0)
 .. S IFN=0 F  S IFN=$O(^UTILITY($J,"GMRVD",IDT,TYPE,IFN)) Q:IFN<1  S X=$G(^(IFN)) D
"RTN","ORRCVIT",21,0)
 ... D @TYPE ;return DATA w/relevant pieces
"RTN","ORRCVIT",22,0)
 ... S ORN=ORN+1,@ORY@(ORN)="Data="_DATA
"RTN","ORRCVIT",23,0)
 K ^UTILITY($J,"GMRVD")
"RTN","ORRCVIT",24,0)
 Q
"RTN","ORRCVIT",25,0)
 ;
"RTN","ORRCVIT",26,0)
DETAIL(ORY,VITAL) ; -- Return details of VITALs
"RTN","ORRCVIT",27,0)
 ; where VITAL(#) = ID
"RTN","ORRCVIT",28,0)
 ; in @ORY@(#) = Item=ID^^MeasurementDate in HL7 format
"RTN","ORRCVIT",29,0)
 ;             = Data=Vital^Value^Unit^MetricValue^Unit^BMI^SuppO2^CriticalFlag^Qualifiers
"RTN","ORRCVIT",30,0)
 ; RPC = ORRC VITALS BY ID
"RTN","ORRCVIT",31,0)
 N GMRVSTR,DFN,STRT,STOP,ORN,ORI,ID,IDT,VDT,TYPE,IFN,DATA,X
"RTN","ORRCVIT",32,0)
 K ^UTILITY($J,"GMRVD") D RANGE
"RTN","ORRCVIT",33,0)
 S GMRVSTR="BP;T;R;P;HT;WT;CVP;CG;PO2;PN",GMRVSTR(0)=STRT_U_STOP_"^100^1"
"RTN","ORRCVIT",34,0)
 D EN1^GMRVUT0 S ORY=$NA(^TMP($J,"ORRCVIT")),ORN=0 K @ORY
"RTN","ORRCVIT",35,0)
 S ORI=0 F  S ORI=$O(VITAL(ORI)) Q:ORI<1  S ID=$G(VITAL(ORI)) D
"RTN","ORRCVIT",36,0)
 . S VDT=$P(ID,";",2),IDT=9999999-VDT
"RTN","ORRCVIT",37,0)
 . S ORN=ORN+1,@ORY@(ORN)="Item="_ID_U_U_VDT
"RTN","ORRCVIT",38,0)
 . S TYPE="" F  S TYPE=$O(^UTILITY($J,"GMRVD",IDT,TYPE)) Q:TYPE=""  D
"RTN","ORRCVIT",39,0)
 .. S IFN=0 F  S IFN=$O(^UTILITY($J,"GMRVD",IDT,TYPE,IFN)) Q:IFN<1  S X=$G(^(IFN)) D
"RTN","ORRCVIT",40,0)
 ... D @TYPE ;return DATA w/relevant pieces
"RTN","ORRCVIT",41,0)
 ... S ORN=ORN+1,@ORY@(ORN)="Data="_DATA
"RTN","ORRCVIT",42,0)
 K ^UTILITY($J,"GMRVD")
"RTN","ORRCVIT",43,0)
 Q
"RTN","ORRCVIT",44,0)
 ;
"RTN","ORRCVIT",45,0)
RANGE ; -- Get STRT,STOP,DFN from VITALs
"RTN","ORRCVIT",46,0)
 N ORI,ID,VDT  S (STRT,STOP)=""
"RTN","ORRCVIT",47,0)
 S ORI=0 F  S ORI=$O(VITAL(ORI)) Q:ORI<1  S ID=$G(VITAL(ORI)) D
"RTN","ORRCVIT",48,0)
 . S DFN=+$P(ID,":",2),VDT=$P(ID,";",2)
"RTN","ORRCVIT",49,0)
 . I $S('$L(STRT):1,VDT<STRT:1,1:0) S STRT=VDT
"RTN","ORRCVIT",50,0)
 . I $S('$L(STOP):1,VDT>STOP:1,1:0) S STOP=VDT
"RTN","ORRCVIT",51,0)
 Q
"RTN","ORRCVIT",52,0)
 ;
"RTN","ORRCVIT",53,0)
 ; Return formatted DATA string from X:
"RTN","ORRCVIT",54,0)
 ;
"RTN","ORRCVIT",55,0)
BP ; -- Blood Pressure = B/P^value^^^^^^[*]^Q1;..;Qn
"RTN","ORRCVIT",56,0)
 S DATA="B/P^"_$P(X,U,8)_"^^^^^^"_$P(X,U,12)_U_$P(X,U,17)
"RTN","ORRCVIT",57,0)
 Q
"RTN","ORRCVIT",58,0)
T ; -- Temperature = Temp.^value^F^metric^C^^^[*]^Q1;..;Qn
"RTN","ORRCVIT",59,0)
 S DATA="Temp.^"_$P(X,U,8)_"^F^"_$P(X,U,13)_"^C^^^"_$P(X,U,12)_U_$P(X,U,17)
"RTN","ORRCVIT",60,0)
 Q
"RTN","ORRCVIT",61,0)
R ; -- Respiration = Resp.^value^^^^^^[*]^Q1;..;Qn
"RTN","ORRCVIT",62,0)
 S DATA="Resp.^"_$P(X,U,8)_"^^^^^^"_$P(X,U,12)_U_$P(X,U,17)
"RTN","ORRCVIT",63,0)
 Q
"RTN","ORRCVIT",64,0)
P ; -- Pulse = Pulse^value^^^^^^[*]^Q1;..;Qn
"RTN","ORRCVIT",65,0)
 S DATA="Pulse^"_$P(X,U,8)_"^^^^^^"_$P(X,U,12)_U_$P(X,U,17)
"RTN","ORRCVIT",66,0)
 Q
"RTN","ORRCVIT",67,0)
HT ; -- Height = Ht.^value^in^metric^cm^^^[*]^Q1;..;Qn
"RTN","ORRCVIT",68,0)
 S DATA="Ht.^"_$P(X,U,8)_"^in^"_$P(X,U,13)_"^cm^^^"_$P(X,U,12)_U_$P(X,U,17)
"RTN","ORRCVIT",69,0)
 Q
"RTN","ORRCVIT",70,0)
WT ; -- Weight = Wt.^value^lb^metric^kg^BodyMassIndex^^[*]^Q1;..;Qn
"RTN","ORRCVIT",71,0)
 S DATA="Wt.^"_$P(X,U,8)_"^lb^"_$P(X,U,13)_"^kg^"_$P(X,U,14)_U_U_$P(X,U,12)_U_$P(X,U,17)
"RTN","ORRCVIT",72,0)
 Q
"RTN","ORRCVIT",73,0)
CVP ; -- CenVenPress = CVP^value^cmH2O^^^^^[*]^Q1;..;Qn
"RTN","ORRCVIT",74,0)
 S DATA="CVP^"_$P(X,U,8)_"^cmH2O^^^^^"_$P(X,U,12)_U_$P(X,U,17)
"RTN","ORRCVIT",75,0)
 Q
"RTN","ORRCVIT",76,0)
CG ; -- Circm/Girth = C/G^value^in^metric^cm^^^[*]^Q1;..;Qn
"RTN","ORRCVIT",77,0)
 S DATA="C/G^"_$P(X,U,8)_"^in^"_$P(X,U,13)_"^cm^^^"_$P(X,U,12)_U_$P(X,U,17)
"RTN","ORRCVIT",78,0)
 Q
"RTN","ORRCVIT",79,0)
PO2 ; -- PulseOx = Pulse Ox^value^^^^^l/min of supplemental O2^[*]^Q1;..;Qn
"RTN","ORRCVIT",80,0)
 S DATA="Pulse Ox^"_$P(X,U,8)_"^^^^^"_$P(X,U,15)_U_$P(X,U,12)_U_$P(X,U,17)
"RTN","ORRCVIT",81,0)
 Q
"RTN","ORRCVIT",82,0)
PN ; -- Pain = Pain^value^^^^^^[*]^Q1;..;Qn
"RTN","ORRCVIT",83,0)
 S DATA="Pain^"_$P(X,U,8)_"^^^^^^"_$P(X,U,12)_U_$P(X,U,17)
"RTN","ORRCVIT",84,0)
 Q
"RTN","ORRCVIT",85,0)
 ;
"RTN","ORRCVIT",86,0)
IDS(ORY,DFN,SDATE,EDATE) ; --Return recent measurement IDs for DFN
"RTN","ORRCVIT",87,0)
 ; in @ORY@(DFN) = #sets ^ 1 if any are critical
"RTN","ORRCVIT",88,0)
 ;    @ORY@(DFN,ID) = * if critical, else null
"RTN","ORRCVIT",89,0)
 ; [from ORRCDPT1]
"RTN","ORRCVIT",90,0)
 N GMRVSTR,MAX,CNT,ABN,IDT,VDT,X
"RTN","ORRCVIT",91,0)
 S ORY=$NA(^TMP($J,"ORRCVIT")) K @ORY,^UTILITY($J,"GMRVD")
"RTN","ORRCVIT",92,0)
 S DFN=+$G(DFN),MAX=$S($G(SDATE)&$G(EDATE):100,1:5)
"RTN","ORRCVIT",93,0)
 I $G(EDATE),$L(EDATE,".")<2 S EDATE=EDATE_".2359" ;end of day
"RTN","ORRCVIT",94,0)
 S GMRVSTR="BP;T;R;P;HT;WT;CVP;CG;PO2;PN",GMRVSTR(0)=$G(SDATE)_U_$G(EDATE)_U_MAX_"^1"
"RTN","ORRCVIT",95,0)
 D EN1^GMRVUT0 S CNT=0,ABN=""
"RTN","ORRCVIT",96,0)
 S IDT=0 F  S IDT=$O(^UTILITY($J,"GMRVD",IDT)) Q:IDT<1  D  Q:CNT'<MAX
"RTN","ORRCVIT",97,0)
 . S VDT=9999999-IDT,CNT=CNT+1,X=$$ABN(IDT)
"RTN","ORRCVIT",98,0)
 . S @ORY@(DFN,"VIT:"_DFN_";"_VDT)=X S:$L(X) ABN=1
"RTN","ORRCVIT",99,0)
 S:CNT @ORY@(DFN)=CNT_U_ABN
"RTN","ORRCVIT",100,0)
 K ^UTILITY($J,"GMRVD")
"RTN","ORRCVIT",101,0)
 Q
"RTN","ORRCVIT",102,0)
 ;
"RTN","ORRCVIT",103,0)
ABN(IDT) ; -- Return * if any value from measurement set is critical, else null
"RTN","ORRCVIT",104,0)
 N Y,TYPE,IFN S Y=""
"RTN","ORRCVIT",105,0)
 S TYPE="" F  S TYPE=$O(^UTILITY($J,"GMRVD",IDT,TYPE)) Q:TYPE=""  D
"RTN","ORRCVIT",106,0)
 . S IFN=0 F  S IFN=$O(^UTILITY($J,"GMRVD",IDT,TYPE,IFN)) Q:IFN<1  S:$G(^(IFN))["*" Y="*"
"RTN","ORRCVIT",107,0)
 Q Y
"RTN","ORRCXQ")
0^17^B20320443
"RTN","ORRCXQ",1,0)
ORRCXQ ;SLC/MKB - Alert utilities for CM ; 25 Jul 2003  9:31 AM
"RTN","ORRCXQ",2,0)
 ;;1.0;CARE MANAGEMENT;;Jul 15, 2003
"RTN","ORRCXQ",3,0)
 ;
"RTN","ORRCXQ",4,0)
USER(ORY,ORDUZ) ; -- Return user's current alerts in @ORY@(PKGID,AID)=DATA
"RTN","ORRCXQ",5,0)
 ;    
"RTN","ORRCXQ",6,0)
 N ORXQ,X,I,PKGID,AID,TM,DATA
"RTN","ORRCXQ",7,0)
 S ORDUZ=$G(ORDUZ,DUZ),ORY=$NA(^TMP($J,"ORY")) K @ORY
"RTN","ORRCXQ",8,0)
 S ORXQ="^TMP($J,""ORXQ"")" D USER^XQALERT(ORXQ,ORDUZ)
"RTN","ORRCXQ",9,0)
 S I=0 F  S I=$O(@ORXQ@(I)) Q:I<1  D
"RTN","ORRCXQ",10,0)
 . S X=$P(@ORXQ@(I),U,2),PKGID=$P(X,";"),AID=$P(X,";",2,3),TM=$P(X,";",3)
"RTN","ORRCXQ",11,0)
 . S DATA=$G(^XTV(8992,ORDUZ,"XQA",TM,1)) ;IA#2689
"RTN","ORRCXQ",12,0)
 . S @ORY@(PKGID,AID)=DATA
"RTN","ORRCXQ",13,0)
 K @ORXQ
"RTN","ORRCXQ",14,0)
 Q
"RTN","ORRCXQ",15,0)
 ;
"RTN","ORRCXQ",16,0)
PAT(ORY,ORPAT,ORUSR) ; -- Return non-ADT alerts for ORPAT to ORUSR
"RTN","ORRCXQ",17,0)
 ; in @ORY@(#) = Item=ID^Text^Date in HL7 format
"RTN","ORRCXQ",18,0)
 ;                where ID is "NOT:<XQAID>"
"RTN","ORRCXQ",19,0)
 ; RPC = ORRC ALERTS BY PATIENT
"RTN","ORRCXQ",20,0)
 N ORXQ,ORN,I,TEXT,XQAID,DATE,NOT,ACTDT
"RTN","ORRCXQ",21,0)
 S ORUSR=+$G(ORUSR),ACTDT=$$PARAM^ORRCACK(ORUSR)
"RTN","ORRCXQ",22,0)
 S ORXQ="^TMP($J,""ORXQ"")" D USER^XQALERT(ORXQ,ORUSR)
"RTN","ORRCXQ",23,0)
 S ORY=$NA(^TMP($J,"ORRCNOT")),ORN=0 K @ORY
"RTN","ORRCXQ",24,0)
 S I=0 F  S I=$O(@ORXQ@(I)) Q:I<1  D
"RTN","ORRCXQ",25,0)
 . S TEXT=$P(@ORXQ@(I),U),XQAID=$P(@ORXQ@(I),U,2),DATE=$P(XQAID,";",3)
"RTN","ORRCXQ",26,0)
 . Q:XQAID'?1"OR,".E  I $G(ORPAT) Q:+$P(XQAID,",",2)'=ORPAT
"RTN","ORRCXQ",27,0)
 . S NOT=+$P(XQAID,",",3) Q:"^18^19^20^35^36^"[(U_NOT_U)  ;skip ADT ones
"RTN","ORRCXQ",28,0)
 . I ACTDT,ACTDT'>DT,$$INCLD(NOT) Q  ;skip results ones already included
"RTN","ORRCXQ",29,0)
 . S ORN=ORN+1,@ORY@(ORN)="Item=NOT:"_XQAID_U_$E(TEXT,23,99)_U_$$FMTHL7^XLFDT(DATE)
"RTN","ORRCXQ",30,0)
 K @ORXQ
"RTN","ORRCXQ",31,0)
 Q
"RTN","ORRCXQ",32,0)
 ;
"RTN","ORRCXQ",33,0)
INCLD(NIEN) ; -- Order already in Results column?
"RTN","ORRCXQ",34,0)
 ;    [from PAT - uses ORUSR]
"RTN","ORRCXQ",35,0)
 N X,Y,DATA,NMSP,PKG S X=U_NIEN_U,Y=0
"RTN","ORRCXQ",36,0)
 S NMSP=$S("^3^14^24^57^58^"[X:"LR","^21^22^25^53^"[X:"RA","^23^"[X:"GMRC","^32^33^44^60^"[X:"X",1:"") I NMSP="" Q 0
"RTN","ORRCXQ",37,0)
 S DATA=$G(^XTV(8992,ORUSR,"XQA",DATE,1)),PKG=$P($P(DATA,"|",2),"@",2)
"RTN","ORRCXQ",38,0)
 S ORIFN=0 F  S ORIFN=$O(^ORA(102.4,"ACK",ORUSR,ORIFN)) Q:ORIFN<1  D  Q:Y
"RTN","ORRCXQ",39,0)
 . S OR0=$G(^OR(100,+ORIFN,0)),PKGIFN=+$G(^(4))
"RTN","ORRCXQ",40,0)
 . S ORVP=$P(OR0,U,2) Q:+ORVP'=ORPAT
"RTN","ORRCXQ",41,0)
 . S ORPKG=$$NMSP^ORCD($P(OR0,U,14)) I ORPKG'=NMSP,'(NMSP="X"&(PKG[ORPKG)) Q
"RTN","ORRCXQ",42,0)
 . S:$$MATCH Y=1
"RTN","ORRCXQ",43,0)
 Q Y
"RTN","ORRCXQ",44,0)
 ;
"RTN","ORRCXQ",45,0)
RSLT(ORDER,ORUSR) ; -- clear alerts for ORDERs results
"RTN","ORRCXQ",46,0)
 N ORY,ORN,ORIFN,OR0,ORVP,ORPKG,PKGIFN,NIEN,PKGID,AID,DATA
"RTN","ORRCXQ",47,0)
 D USER(.ORY,ORUSR),ORN ;notifs by pkg
"RTN","ORRCXQ",48,0)
 S ORIFN=0 F  S ORIFN=$O(ORDER(ORIFN)) Q:ORIFN<1  D
"RTN","ORRCXQ",49,0)
 . S OR0=$G(^OR(100,+ORIFN,0)),PKGIFN=+$G(^(4))
"RTN","ORRCXQ",50,0)
 . S ORPKG=$$NMSP^ORCD($P(OR0,U,14)) Q:"^LR^RA^GMRC^"'[(U_ORPKG_U)
"RTN","ORRCXQ",51,0)
 . S ORVP=$P(OR0,U,2),PKGID="OR,"_+ORVP
"RTN","ORRCXQ",52,0)
 . F  S PKGID=$O(@ORY@(PKGID)) Q:$P(PKGID,",",1,2)'=("OR,"_+ORVP)  D
"RTN","ORRCXQ",53,0)
 .. S NIEN=$P(PKGID,",",3) Q:'$D(ORN(ORPKG,NIEN))  ;alert not for ORPKG
"RTN","ORRCXQ",54,0)
 .. S AID="" F  S AID=$O(@ORY@(PKGID,AID)) Q:AID=""  D
"RTN","ORRCXQ",55,0)
 ... S DATA=@ORY@(PKGID,AID) Q:'$$MATCH
"RTN","ORRCXQ",56,0)
 ... D DELETE(PKGID_";"_AID)
"RTN","ORRCXQ",57,0)
 K @ORY
"RTN","ORRCXQ",58,0)
 Q
"RTN","ORRCXQ",59,0)
 ;
"RTN","ORRCXQ",60,0)
ORN ; -- List result notifications by pkg in ORN(NMSP,IEN)
"RTN","ORRCXQ",61,0)
 N X,Y,I,N K ORN
"RTN","ORRCXQ",62,0)
 F X="LR","RA","GMRC" D
"RTN","ORRCXQ",63,0)
 . S Y=$S(X="LR":"3^14^24^57^58",X="RA":"21^22^25^53",X="GMRC":"23",1:"")
"RTN","ORRCXQ",64,0)
 . F I=1:1:$L(Y,U) S N=$P(Y,U,I),ORN(X,N)=""
"RTN","ORRCXQ",65,0)
 . F I=32,33,44,60 S ORN(X,I)="" ;flagged or stat results, for any pkg
"RTN","ORRCXQ",66,0)
 Q
"RTN","ORRCXQ",67,0)
 ;
"RTN","ORRCXQ",68,0)
MATCH() ; -- Return 1 or 0, if alert matches current order
"RTN","ORRCXQ",69,0)
 ;    Called from RSLT & $$INCLD, so expects those var's to be defined
"RTN","ORRCXQ",70,0)
 N Y,APKG,ADATA S Y=0
"RTN","ORRCXQ",71,0)
 S ADATA=$P(DATA,"|"),APKG=$P($P(DATA,"|",2),"@",2)
"RTN","ORRCXQ",72,0)
 I ORPKG="LR",APKG["LR",+DATA=+ORIFN S Y=1 G MQ
"RTN","ORRCXQ",73,0)
 I "^32^33^44^60^"[(U_NIEN_U) D  G MQ
"RTN","ORRCXQ",74,0)
 . I ORPKG="RA",APKG["RA",$D(^RADPT("AO",PKGIFN,+ORVP,+$P(ADATA,"~",2),+$P(ADATA,"~",3))) S Y=1 ;IA#2588
"RTN","ORRCXQ",75,0)
 . I ORPKG="GMRC",APKG["GMRC",PKGIFN=+ADATA S Y=1
"RTN","ORRCXQ",76,0)
 I ORPKG="RA",$D(^RADPT("AO",PKGIFN,+ORVP,+ADATA,+$P(ADATA,"~",2))) S Y=1 ;IA#2588
"RTN","ORRCXQ",77,0)
 I ORPKG="GMRC",PKGIFN=+ADATA S Y=1
"RTN","ORRCXQ",78,0)
MQ Q Y
"RTN","ORRCXQ",79,0)
 ;
"RTN","ORRCXQ",80,0)
SIGN(ID) ; -- clear alerts for signatures
"RTN","ORRCXQ",81,0)
 N ORY,ORNKILL,ORVP,PKGID,AID
"RTN","ORRCXQ",82,0)
 D USER(.ORY,DUZ) I ID["OR" D  G SIGQ
"RTN","ORRCXQ",83,0)
 . S ORVP=$P($G(^OR(100,+ID,0)),U,2) Q:$O(^OR(100,"AS",ORVP,0))
"RTN","ORRCXQ",84,0)
 . S PKGID="OR,"_+ORVP_",12",AID=""
"RTN","ORRCXQ",85,0)
 . F  S AID=$O(@ORY@(PKGID,AID)) Q:AID=""  S ORNKILL(PKGID_";"_AID)=""
"RTN","ORRCXQ",86,0)
 I ID["TIU" D  G SIGQ
"RTN","ORRCXQ",87,0)
 . S PKGID="TIU"_+ID,AID=""
"RTN","ORRCXQ",88,0)
 . F  S AID=$O(@ORY@(PKGID,AID)) Q:AID=""  S ORNKILL(PKGID_";"_AID)=""
"RTN","ORRCXQ",89,0)
 . ;ck w/Joel: possible alerts + formats, kill conditions
"RTN","ORRCXQ",90,0)
SIGQ I $D(ORNKILL) D DELETE
"RTN","ORRCXQ",91,0)
 K @ORY
"RTN","ORRCXQ",92,0)
 Q
"RTN","ORRCXQ",93,0)
 ;
"RTN","ORRCXQ",94,0)
DELETE(XQAID) ; -- Delete alert XQAID
"RTN","ORRCXQ",95,0)
 Q:'$L($G(XQAID))  N XQAKILL,ORN
"RTN","ORRCXQ",96,0)
 S ORN=+$P($P(XQAID,";"),",",3),XQAKILL=$S(ORN:$$XQAKILL^ORB3F1(ORN),1:0)
"RTN","ORRCXQ",97,0)
 D DELETE^XQALERT ;for DUZ
"RTN","ORRCXQ",98,0)
 Q
"RTN","ORRCXQ",99,0)
 ;
"RTN","ORRCXQ",100,0)
MSGTXT(ID) ; -- Return message text of alert ID
"RTN","ORRCXQ",101,0)
 N IDX,D0,D1,Y
"RTN","ORRCXQ",102,0)
 S IDX="^XTV(8992,""AXQA"","""_ID_""")",IDX=$Q(@IDX)
"RTN","ORRCXQ",103,0)
 S D0=+$P(IDX,",",6),D1=+$P(IDX,",",7)
"RTN","ORRCXQ",104,0)
 S Y=$P($G(^XTV(8992,D0,"XQA",D1,0)),U,3),Y=$E(Y,20,999)
"RTN","ORRCXQ",105,0)
 Q Y
"RTN","ORRCXQ",106,0)
 ;
"RTN","ORRCXQ",107,0)
MSGDT(ADT,ATXT) ; -- Return event date from alert date and text
"RTN","ORRCXQ",108,0)
 N I,X,Y,%DT
"RTN","ORRCXQ",109,0)
 I ATXT?1"Transfer".E S Y=ADT G MDQ ;no date in text
"RTN","ORRCXQ",110,0)
 S I=$F(ATXT," on "),X="" S:I X=$E(ATXT,I,999)
"RTN","ORRCXQ",111,0)
 I ATXT?1"Admit".E S I=$F(X,"  "),X=$E(X,1,I-3) ;strip off ward,rm-bed
"RTN","ORRCXQ",112,0)
 S:X?2N1"/"2N1" "2N1":"2N X=$TR(X," ","@")
"RTN","ORRCXQ",113,0)
 S %DT="TS" D ^%DT I Y<0 S Y=ADT
"RTN","ORRCXQ",114,0)
MDQ Q Y
"RTN","ORRCYP")
0^18^B792380
"RTN","ORRCYP",1,0)
ORRCYP ; Export Package Level Parameters ; Oct 10, 2003@08:36:54
"RTN","ORRCYP",2,0)
 ;;1.0;HEALTHEVET DESKTOP;;Jul 15, 2003
"RTN","ORRCYP",3,0)
MAIN ; main (initial) parameter transport routine
"RTN","ORRCYP",4,0)
 K ^TMP($J,"XPARRSTR")
"RTN","ORRCYP",5,0)
 N ENT,IDX,ROOT,REF,VAL,I
"RTN","ORRCYP",6,0)
 S ROOT=$NAME(^TMP($J,"XPARRSTR")),ROOT=$E(ROOT,1,$L(ROOT)-1)_","
"RTN","ORRCYP",7,0)
 D ^ORRCYP01
"RTN","ORRCYP",8,0)
XX2 S IDX=0,ENT="PKG."_"CARE MANAGEMENT"
"RTN","ORRCYP",9,0)
 F  S IDX=$O(^TMP($J,"XPARRSTR",IDX)) Q:'IDX  D
"RTN","ORRCYP",10,0)
 . N PAR,INST,VAL,ERR
"RTN","ORRCYP",11,0)
 . S PAR=$P(^TMP($J,"XPARRSTR",IDX,"KEY"),U),INST=$P(^("KEY"),U,2)
"RTN","ORRCYP",12,0)
 . M VAL=^TMP($J,"XPARRSTR",IDX,"VAL")
"RTN","ORRCYP",13,0)
 . D EN^XPAR(ENT,PAR,INST,.VAL,.ERR)
"RTN","ORRCYP",14,0)
 K ^TMP($J,"XPARRSTR")
"RTN","ORRCYP",15,0)
 Q
"RTN","ORRCYP01")
0^1^B1869759
"RTN","ORRCYP01",1,0)
ORRCYP01 ; ; Oct 14, 2003@11:51
"RTN","ORRCYP01",2,0)
 ;;1.0;HEALTHEVET DESKTOP;;Jul 15, 2003
"RTN","ORRCYP01",3,0)
LOAD ; load data into ^TMP (expects ROOT to be defined)
"RTN","ORRCYP01",4,0)
 S I=1 F  S REF=$T(DATA+I) Q:REF=""  S VAL=$T(DATA+I+1) D
"RTN","ORRCYP01",5,0)
 . S I=I+2,REF=$P(REF,";",3,999),VAL=$P(VAL,";",3,999)
"RTN","ORRCYP01",6,0)
 . S @(ROOT_REF)=VAL
"RTN","ORRCYP01",7,0)
 Q
"RTN","ORRCYP01",8,0)
DATA ; parameter data
"RTN","ORRCYP01",9,0)
 ;;4473,"KEY")
"RTN","ORRCYP01",10,0)
 ;;ORRC NURSE EVENT DATE MAX^1
"RTN","ORRCYP01",11,0)
 ;;4473,"VAL")
"RTN","ORRCYP01",12,0)
 ;;T+7
"RTN","ORRCYP01",13,0)
 ;;4474,"KEY")
"RTN","ORRCYP01",14,0)
 ;;ORRC NURSE EVENT DATE MIN^1
"RTN","ORRCYP01",15,0)
 ;;4474,"VAL")
"RTN","ORRCYP01",16,0)
 ;;T
"RTN","ORRCYP01",17,0)
 ;;4475,"KEY")
"RTN","ORRCYP01",18,0)
 ;;ORRC NURSE RESULT DATE MAX^1
"RTN","ORRCYP01",19,0)
 ;;4475,"VAL")
"RTN","ORRCYP01",20,0)
 ;;T
"RTN","ORRCYP01",21,0)
 ;;4476,"KEY")
"RTN","ORRCYP01",22,0)
 ;;ORRC NURSE RESULT DATE MIN^1
"RTN","ORRCYP01",23,0)
 ;;4476,"VAL")
"RTN","ORRCYP01",24,0)
 ;;T-2
"RTN","ORRCYP01",25,0)
 ;;4477,"KEY")
"RTN","ORRCYP01",26,0)
 ;;ORRC NURSE UNVERIFIED DATE MAX^1
"RTN","ORRCYP01",27,0)
 ;;4477,"VAL")
"RTN","ORRCYP01",28,0)
 ;;T
"RTN","ORRCYP01",29,0)
 ;;4478,"KEY")
"RTN","ORRCYP01",30,0)
 ;;ORRC NURSE UNVERIFIED DATE MIN^1
"RTN","ORRCYP01",31,0)
 ;;4478,"VAL")
"RTN","ORRCYP01",32,0)
 ;;T-2
"RTN","ORRCYP01",33,0)
 ;;4479,"KEY")
"RTN","ORRCYP01",34,0)
 ;;ORRC NURSE TEXT ORDER DATE MAX^1
"RTN","ORRCYP01",35,0)
 ;;4479,"VAL")
"RTN","ORRCYP01",36,0)
 ;;T
"RTN","ORRCYP01",37,0)
 ;;4481,"KEY")
"RTN","ORRCYP01",38,0)
 ;;ORRC NURSE VITALS DATE MAX^1
"RTN","ORRCYP01",39,0)
 ;;4481,"VAL")
"RTN","ORRCYP01",40,0)
 ;;T
"RTN","ORRCYP01",41,0)
 ;;4482,"KEY")
"RTN","ORRCYP01",42,0)
 ;;ORRC NURSE VITALS DATE MIN^1
"RTN","ORRCYP01",43,0)
 ;;4482,"VAL")
"RTN","ORRCYP01",44,0)
 ;;T-7
"RTN","ORRCYP01",45,0)
 ;;4728,"KEY")
"RTN","ORRCYP01",46,0)
 ;;ORRC NURSE TEXT ORDER DATE MIN^1
"RTN","ORRCYP01",47,0)
 ;;4728,"VAL")
"RTN","ORRCYP01",48,0)
 ;;T-365
"RTN","ORRCYPRE")
0^20^B652707
"RTN","ORRCYPRE",1,0)
ORRCYPRE ; SLC/KCM - Alpha/Beta Site Conversions ; 29 AUG 2003 16:59
"RTN","ORRCYPRE",2,0)
 ;;1.0;HEALTHEVET DESKTOP;;Jul 15, 2003
"RTN","ORRCYPRE",3,0)
SET2XHD ; Rename ORRC NURSE PT SELECT LIST parameter for Care Management
"RTN","ORRCYPRE",4,0)
 D RENAME(8989.51,"ORRC NURSE PT SELECT LIST","ORRC DASHBOARD PT SELECT LIST")
"RTN","ORRCYPRE",5,0)
 Q
"RTN","ORRCYPRE",6,0)
RENAME(FILENUM,OLDNAME,NEWNAME) ; rename .01 entry in a file
"RTN","ORRCYPRE",7,0)
 N IEN,FDA,ERR,DIERR
"RTN","ORRCYPRE",8,0)
 S IEN=$$FIND1^DIC(FILENUM,"","X",OLDNAME)
"RTN","ORRCYPRE",9,0)
 Q:'IEN
"RTN","ORRCYPRE",10,0)
 S FDA(FILENUM,IEN_",",.01)=NEWNAME
"RTN","ORRCYPRE",11,0)
 D FILE^DIE("","FDA","ERR")
"RTN","ORRCYPRE",12,0)
 I $D(DIERR) D BMES^XPDUTL("Unable to rename "_OLDNAME)
"RTN","ORRCYPRE",13,0)
 Q
"SEC","^DIC",102.3,102.3,0,"AUDIT")
@
"SEC","^DIC",102.3,102.3,0,"DD")
@
"SEC","^DIC",102.3,102.3,0,"DEL")
@
"SEC","^DIC",102.3,102.3,0,"LAYGO")
@
"SEC","^DIC",102.3,102.3,0,"RD")
@
"SEC","^DIC",102.3,102.3,0,"WR")
@
"SEC","^DIC",102.4,102.4,0,"AUDIT")
@
"SEC","^DIC",102.4,102.4,0,"DD")
@
"SEC","^DIC",102.4,102.4,0,"DEL")
@
"SEC","^DIC",102.4,102.4,0,"LAYGO")
@
"SEC","^DIC",102.4,102.4,0,"RD")
@
"SEC","^DIC",102.4,102.4,0,"WR")
@
"VER")
8.0^22.0
"^DD",102.21,102.21,0)
FIELD^^20^9
"^DD",102.21,102.21,0,"DDA")
N
"^DD",102.21,102.21,0,"DT")
3021103
"^DD",102.21,102.21,0,"IX","B",102.21,.01)

"^DD",102.21,102.21,0,"IX","C",102.21,.01)

"^DD",102.21,102.21,0,"IX","T",102.21,7)

"^DD",102.21,102.21,0,"NM","CPRS QUERY DEFINITION")

"^DD",102.21,102.21,0,"PT",102.21,6)

"^DD",102.21,102.21,0,"PT",102.211,2)

"^DD",102.21,102.21,0,"VRPK")
OR
"^DD",102.21,102.21,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",102.21,102.21,.01,1,0)
^.1
"^DD",102.21,102.21,.01,1,1,0)
102.21^B
"^DD",102.21,102.21,.01,1,1,1)
S ^ORD(102.21,"B",$E(X,1,30),DA)=""
"^DD",102.21,102.21,.01,1,1,2)
K ^ORD(102.21,"B",$E(X,1,30),DA)
"^DD",102.21,102.21,.01,1,2,0)
102.21^C^MUMPS
"^DD",102.21,102.21,.01,1,2,1)
S ^ORD(102.21,"C",$$UP^XLFSTR(X),DA)=""
"^DD",102.21,102.21,.01,1,2,2)
K ^ORD(102.21,"C",$$UP^XLFSTR(X),DA)
"^DD",102.21,102.21,.01,1,2,"%D",0)
^^1^1^3020924^
"^DD",102.21,102.21,.01,1,2,"%D",1,0)
Upper case xref for full lookup
"^DD",102.21,102.21,.01,1,2,"DT")
3020924
"^DD",102.21,102.21,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",102.21,102.21,.01,21,0)
^^3^3^3030110^
"^DD",102.21,102.21,.01,21,1,0)
This is the name of the report or criterion.  Personally created reports 
"^DD",102.21,102.21,.01,21,2,0)
are stored as RPTUduz user-created-name.  This assures uniqueness of 
"^DD",102.21,102.21,.01,21,3,0)
personal custom reports.
"^DD",102.21,102.21,.01,"DT")
3020924
"^DD",102.21,102.21,2,0)
DISPLAY TEXT^F^^0;2^K:$L(X)>30!($L(X)<3) X
"^DD",102.21,102.21,2,3)
Answer must be 3-30 characters in length.
"^DD",102.21,102.21,2,21,0)
^^2^2^3020908^
"^DD",102.21,102.21,2,21,1,0)
This is the text that is displayed in the list box when selecting a
"^DD",102.21,102.21,2,21,2,0)
criterion or a report.
"^DD",102.21,102.21,2,"DT")
3020908
"^DD",102.21,102.21,3,0)
DISABLE^F^^0;3^K:$L(X)>30!($L(X)<3) X
"^DD",102.21,102.21,3,3)
Answer must be 3-30 characters in length.
"^DD",102.21,102.21,3,21,0)
^^1^1^3020908^
"^DD",102.21,102.21,3,21,1,0)
This is the text that is desplayed when the definition is disabled.
"^DD",102.21,102.21,3,"DT")
3020908
"^DD",102.21,102.21,4,0)
TYPE^RS^C:constraint;R:report;S:search item;B:baseline;^0;4^Q
"^DD",102.21,102.21,4,3)
Enter the type of this definition (constraint, search item, or report).
"^DD",102.21,102.21,4,21,0)
^^1^1^3020908^
"^DD",102.21,102.21,4,21,1,0)
This specifies whether the record is a report or a criterion.
"^DD",102.21,102.21,4,"DT")
3020916
"^DD",102.21,102.21,5,0)
OWNER^P200'^VA(200,^0;5^Q
"^DD",102.21,102.21,5,3)
Enter the person to whom this report belongs.
"^DD",102.21,102.21,5,21,0)
^^1^1^3020908^
"^DD",102.21,102.21,5,21,1,0)
This contains the owner of a custom report.
"^DD",102.21,102.21,5,"DT")
3020908
"^DD",102.21,102.21,6,0)
PARENT^P102.21'^ORD(102.21,^0;6^Q
"^DD",102.21,102.21,6,3)
Select the search item that this entry is subordinate to.
"^DD",102.21,102.21,6,12)
Only criteria may have a hierarchical relationship at this time.
"^DD",102.21,102.21,6,12.1)
I $P(^ORD(102.21,Y,0),U,4)="C"
"^DD",102.21,102.21,6,21,0)
^^2^2^3020908^
"^DD",102.21,102.21,6,21,1,0)
This identifies the entry that is the parent criterion.  Criteria may
"^DD",102.21,102.21,6,21,2,0)
appear in a hierarchy.
"^DD",102.21,102.21,6,"DT")
3020916
"^DD",102.21,102.21,7,0)
TAG^NJ7,0^^0;7^K:+X'=X!(X>9999999)!(X<1000000)!(X?.E1"."1N.N) X
"^DD",102.21,102.21,7,1,0)
^.1
"^DD",102.21,102.21,7,1,1,0)
102.21^T
"^DD",102.21,102.21,7,1,1,1)
S ^ORD(102.21,"T",$E(X,1,30),DA)=""
"^DD",102.21,102.21,7,1,1,2)
K ^ORD(102.21,"T",$E(X,1,30),DA)
"^DD",102.21,102.21,7,1,1,"%D",0)
^^1^1^3021026^
"^DD",102.21,102.21,7,1,1,"%D",1,0)
Allows looking up a report name by the windows tag
"^DD",102.21,102.21,7,1,1,"DT")
3021026
"^DD",102.21,102.21,7,3)
Type a Number between 1000000 and 9999999, 0 Decimal Digits
"^DD",102.21,102.21,7,21,0)
^^2^2^3021026^
"^DD",102.21,102.21,7,21,1,0)
This contains an integer that matches the Tag property of the Windows
"^DD",102.21,102.21,7,21,2,0)
control that references this criterion.
"^DD",102.21,102.21,7,"DT")
3021103
"^DD",102.21,102.21,10,0)
QUERY TEXT^102.211A^^1;0
"^DD",102.21,102.21,10,21,0)
^^2^2^3020908^
"^DD",102.21,102.21,10,21,1,0)
This multiple allows a sequence of captions to be defined that comprise
"^DD",102.21,102.21,10,21,2,0)
the default text of a query description.
"^DD",102.21,102.21,20,0)
FORMAT^102.212^^2;0
"^DD",102.21,102.21,20,21,0)
^.001^2^2^3020928^^
"^DD",102.21,102.21,20,21,1,0)
This multiple contains formatting information for the columns of the
"^DD",102.21,102.21,20,21,2,0)
report.
"^DD",102.21,102.211,0)
QUERY TEXT SUB-FIELD^^10^5
"^DD",102.21,102.211,0,"DT")
3020908
"^DD",102.21,102.211,0,"IX","B",102.211,.01)

"^DD",102.21,102.211,0,"NM","QUERY TEXT")

"^DD",102.21,102.211,0,"UP")
102.21
"^DD",102.21,102.211,.01,0)
SEQUENCE^MNJ7,2^^0;1^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."3N.N) X
"^DD",102.21,102.211,.01,1,0)
^.1
"^DD",102.21,102.211,.01,1,1,0)
102.211^B
"^DD",102.21,102.211,.01,1,1,1)
S ^ORD(102.21,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",102.21,102.211,.01,1,1,2)
K ^ORD(102.21,DA(1),1,"B",$E(X,1,30),DA)
"^DD",102.21,102.211,.01,3)
Type a Number between 1 and 9999, 2 Decimal Digits
"^DD",102.21,102.211,.01,21,0)
^.001^1^1^3020908^^
"^DD",102.21,102.211,.01,21,1,0)
This specifies the sequence of each caption that appears in the query text.
"^DD",102.21,102.211,.01,"DT")
3030207
"^DD",102.21,102.211,2,0)
CRITERION^P102.21'^ORD(102.21,^0;2^Q
"^DD",102.21,102.211,2,3)
Enter the criterion to which this caption applies.
"^DD",102.21,102.211,2,21,0)
^^2^2^3020908^
"^DD",102.21,102.211,2,21,1,0)
This is the criterion that is the 'parent' of the specific query text
"^DD",102.21,102.211,2,21,2,0)
caption.
"^DD",102.21,102.211,2,"DT")
3020908
"^DD",102.21,102.211,3,0)
CONSTRAINT^P102.22'^ORD(102.22,^0;3^Q
"^DD",102.21,102.211,3,3)
Enter the constraint (parameter) which is mapped to the editor for this value.
"^DD",102.21,102.211,3,21,0)
^^2^2^3020908^
"^DD",102.21,102.211,3,21,1,0)
This identifies the constraint (parameter) used for this query and the
"^DD",102.21,102.211,3,21,2,0)
range of values possible along with the editor that should be used.
"^DD",102.21,102.211,3,"DT")
3020908
"^DD",102.21,102.211,4,0)
CAPTION^F^^0;4^K:$L(X)>80!($L(X)<1) X
"^DD",102.21,102.211,4,3)
Answer must be 1-80 characters in length.
"^DD",102.21,102.211,4,21,0)
^.001^1^1^3021111^^
"^DD",102.21,102.211,4,21,1,0)
This is the caption text that appears for the query.
"^DD",102.21,102.211,4,"DT")
3020908
"^DD",102.21,102.211,10,0)
VALUES^102.2111^^1;0
"^DD",102.21,102.2111,0)
VALUES SUB-FIELD^^.01^1
"^DD",102.21,102.2111,0,"DT")
3020908
"^DD",102.21,102.2111,0,"IX","B",102.2111,.01)

"^DD",102.21,102.2111,0,"NM","VALUES")

"^DD",102.21,102.2111,0,"UP")
102.211
"^DD",102.21,102.2111,.01,0)
VALUE^MF^^0;1^K:$L(X)>235!($L(X)<1) X
"^DD",102.21,102.2111,.01,1,0)
^.1
"^DD",102.21,102.2111,.01,1,1,0)
102.2111^B
"^DD",102.21,102.2111,.01,1,1,1)
S ^ORD(102.21,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",102.21,102.2111,.01,1,1,2)
K ^ORD(102.21,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",102.21,102.2111,.01,3)
Answer must be 1-235 characters in length.
"^DD",102.21,102.2111,.01,21,0)
^.001^1^1^3020918^^
"^DD",102.21,102.2111,.01,21,1,0)
This constains the actual values passed as constraints to this query.
"^DD",102.21,102.2111,.01,"DT")
3020918
"^DD",102.21,102.212,0)
FORMAT SUB-FIELD^^3^3
"^DD",102.21,102.212,0,"DT")
3020924
"^DD",102.21,102.212,0,"IX","B",102.212,.01)

"^DD",102.21,102.212,0,"NM","FORMAT")

"^DD",102.21,102.212,0,"UP")
102.21
"^DD",102.21,102.212,.01,0)
COLUMN^MNJ10,2^^0;1^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."3N.N) X
"^DD",102.21,102.212,.01,1,0)
^.1
"^DD",102.21,102.212,.01,1,1,0)
102.212^B
"^DD",102.21,102.212,.01,1,1,1)
S ^ORD(102.21,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",102.21,102.212,.01,1,1,2)
K ^ORD(102.21,DA(1),2,"B",$E(X,1,30),DA)
"^DD",102.21,102.212,.01,3)
Type a Number between 0 and 9999999, 2 Decimal Digits
"^DD",102.21,102.212,.01,21,0)
^.001^1^1^3020928^^^
"^DD",102.21,102.212,.01,21,1,0)
This is the sequence number for the column.
"^DD",102.21,102.212,.01,"DT")
3020928
"^DD",102.21,102.212,2,0)
DISPLAY FIELD^P102.24'^ORD(102.24,^0;2^Q
"^DD",102.21,102.212,2,3)
Select the Display Field for this sequence (column) number.
"^DD",102.21,102.212,2,21,0)
^^2^2^3020924^
"^DD",102.21,102.212,2,21,1,0)
This specifies which field should be displayed in this column of the
"^DD",102.21,102.212,2,21,2,0)
report.
"^DD",102.21,102.212,2,"DT")
3020924
"^DD",102.21,102.212,3,0)
PIXEL WIDTH^NJ8,0^^0;3^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",102.21,102.212,3,3)
Type a Number between 0 and 99999999, 0 Decimal Digits
"^DD",102.21,102.212,3,21,0)
^^1^1^3020924^
"^DD",102.21,102.212,3,21,1,0)
This specifies the initial width of the column in pixels.
"^DD",102.21,102.212,3,"DT")
3020924
"^DD",102.3,102.3,0)
FIELD^^10^11
"^DD",102.3,102.3,0,"DT")
3030605
"^DD",102.3,102.3,0,"IX","B",102.3,.01)

"^DD",102.3,102.3,0,"IX","C",102.3,3)

"^DD",102.3,102.3,0,"NM","PATIENT TASK")

"^DD",102.3,102.3,0,"VRPK")
ORRC
"^DD",102.3,102.3,.01,0)
CREATED^RD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",102.3,102.3,.01,1,0)
^.1
"^DD",102.3,102.3,.01,1,1,0)
102.3^B
"^DD",102.3,102.3,.01,1,1,1)
S ^ORRT(102.3,"B",$E(X,1,30),DA)=""
"^DD",102.3,102.3,.01,1,1,2)
K ^ORRT(102.3,"B",$E(X,1,30),DA)
"^DD",102.3,102.3,.01,3)
Enter the date and time this task was created.
"^DD",102.3,102.3,.01,21,0)
^^1^1^3030112^
"^DD",102.3,102.3,.01,21,1,0)
This is the date and time the task was created.
"^DD",102.3,102.3,.01,"DT")
3030112
"^DD",102.3,102.3,1,0)
SUBJECT^RF^^1;1^K:$L(X)>100!($L(X)<1) X
"^DD",102.3,102.3,1,3)
Answer must be 1-100 characters in length.
"^DD",102.3,102.3,1,21,0)
^.001^1^1^3030112^^
"^DD",102.3,102.3,1,21,1,0)
This is a description of the task.
"^DD",102.3,102.3,1,"DT")
3030112
"^DD",102.3,102.3,2,0)
USER^P200'^VA(200,^0;2^Q
"^DD",102.3,102.3,2,3)
Enter the user who created this task.
"^DD",102.3,102.3,2,21,0)
^^1^1^3030112^
"^DD",102.3,102.3,2,21,1,0)
This is the user who created the task for this patient.
"^DD",102.3,102.3,2,"DT")
3030112
"^DD",102.3,102.3,3,0)
PATIENT^RP2'^DPT(^0;3^Q
"^DD",102.3,102.3,3,1,0)
^.1
"^DD",102.3,102.3,3,1,1,0)
102.3^C
"^DD",102.3,102.3,3,1,1,1)
S ^ORRT(102.3,"C",$E(X,1,30),DA)=""
"^DD",102.3,102.3,3,1,1,2)
K ^ORRT(102.3,"C",$E(X,1,30),DA)
"^DD",102.3,102.3,3,1,1,"DT")
3030204
"^DD",102.3,102.3,3,3)
Enter the patient who is the object of this task.
"^DD",102.3,102.3,3,21,0)
^^1^1^3030112^
"^DD",102.3,102.3,3,21,1,0)
This is the patient that this task applies to.
"^DD",102.3,102.3,3,"DT")
3030605
"^DD",102.3,102.3,4,0)
PRIORITY^S^L:LOW;M:MEDIUM;H:HIGH;^0;4^Q
"^DD",102.3,102.3,4,3)
Enter the priority of this task.
"^DD",102.3,102.3,4,21,0)
^^1^1^3030112^
"^DD",102.3,102.3,4,21,1,0)
This is the priority for accomplishing this task.
"^DD",102.3,102.3,4,"DT")
3030112
"^DD",102.3,102.3,5,0)
DUE DATE^D^^0;5^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",102.3,102.3,5,3)
Enter the date [and time] by which this task is to be completed.
"^DD",102.3,102.3,5,21,0)
^^1^1^3030112^
"^DD",102.3,102.3,5,21,1,0)
This is the date [and time] by which this task should be completed.
"^DD",102.3,102.3,5,"DT")
3030112
"^DD",102.3,102.3,6,0)
COMPLETED^D^^0;6^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",102.3,102.3,6,3)
Enter the date and time this task was completed.
"^DD",102.3,102.3,6,21,0)
^.001^1^1^3030112^^^
"^DD",102.3,102.3,6,21,1,0)
This field indicates when this task was completed.
"^DD",102.3,102.3,6,"DT")
3030605
"^DD",102.3,102.3,7,0)
COMPLETED BY^P200'^VA(200,^0;7^Q
"^DD",102.3,102.3,7,3)
Enter the user who completed this task.
"^DD",102.3,102.3,7,21,0)
^^1^1^3030112^
"^DD",102.3,102.3,7,21,1,0)
This is the user who marked this task as complete.
"^DD",102.3,102.3,7,"DT")
3030112
"^DD",102.3,102.3,8,0)
CANCELED^D^^0;8^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",102.3,102.3,8,3)
Enter the date and time this task was canceled.
"^DD",102.3,102.3,8,21,0)
^^1^1^3030605^
"^DD",102.3,102.3,8,21,1,0)
This field indicates when this task was canceled.
"^DD",102.3,102.3,8,"DT")
3030605
"^DD",102.3,102.3,9,0)
CANCELED BY^P200'^VA(200,^0;9^Q
"^DD",102.3,102.3,9,3)
Enter the user who canceled this task.
"^DD",102.3,102.3,9,21,0)
^^1^1^3030605^
"^DD",102.3,102.3,9,21,1,0)
This is the user who marked this task as canceled.
"^DD",102.3,102.3,9,"DT")
3030605
"^DD",102.3,102.3,10,0)
LINKED ITEMS^102.31A^^2;0
"^DD",102.3,102.3,10,21,0)
^.001^2^2^3030206^^
"^DD",102.3,102.3,10,21,1,0)
This multiple contains identifiers for items that have been linked to
"^DD",102.3,102.3,10,21,2,0)
this task.
"^DD",102.3,102.3,10,23,0)
^.001^5^5^3030206^^
"^DD",102.3,102.3,10,23,1,0)
Entries will be a string consisting of two ':' delimited pieces, where 
"^DD",102.3,102.3,10,23,2,0)
the first will be three uppercase letters indicating the file or source 
"^DD",102.3,102.3,10,23,3,0)
of the data (i.e. ORD=Orders file #100, DOC=TIU Documents file #8925, etc)
"^DD",102.3,102.3,10,23,4,0)
and the second will be a data string containing whatever is needed to
"^DD",102.3,102.3,10,23,5,0)
identify the item in that file.
"^DD",102.3,102.31,0)
LINKED ITEMS SUB-FIELD^^.01^1
"^DD",102.3,102.31,0,"DT")
3030206
"^DD",102.3,102.31,0,"IX","B",102.31,.01)

"^DD",102.3,102.31,0,"NM","LINKED ITEMS")

"^DD",102.3,102.31,0,"UP")
102.3
"^DD",102.3,102.31,.01,0)
ITEM^MF^^0;1^K:$L(X)>50!($L(X)<3) X
"^DD",102.3,102.31,.01,1,0)
^.1
"^DD",102.3,102.31,.01,1,1,0)
102.31^B
"^DD",102.3,102.31,.01,1,1,1)
S ^ORRT(102.3,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",102.3,102.31,.01,1,1,2)
K ^ORRT(102.3,DA(1),2,"B",$E(X,1,30),DA)
"^DD",102.3,102.31,.01,3)
Answer must be 3-50 characters in length.
"^DD",102.3,102.31,.01,21,0)
^.001^1^1^3030206^^^^
"^DD",102.3,102.31,.01,21,1,0)
This is an item that is relevant to this task.
"^DD",102.3,102.31,.01,"DT")
3030206
"^DD",102.4,102.4,0)
FIELD^^3^3
"^DD",102.4,102.4,0,"DT")
3030124
"^DD",102.4,102.4,0,"IX","B",102.4,.01)

"^DD",102.4,102.4,0,"NM","ORDER ACKNOWLEDGEMENT")

"^DD",102.4,102.4,0,"VRPK")
ORRC
"^DD",102.4,102.4,.01,0)
ORDER^RP100'^OR(100,^0;1^Q
"^DD",102.4,102.4,.01,1,0)
^.1
"^DD",102.4,102.4,.01,1,1,0)
102.4^B
"^DD",102.4,102.4,.01,1,1,1)
S ^ORA(102.4,"B",$E(X,1,30),DA)=""
"^DD",102.4,102.4,.01,1,1,2)
K ^ORA(102.4,"B",$E(X,1,30),DA)
"^DD",102.4,102.4,.01,3)
Enter the number of an order with results.
"^DD",102.4,102.4,.01,21,0)
^^2^2^3030124^
"^DD",102.4,102.4,.01,21,1,0)
This field contains the number of an order with results from the Orders
"^DD",102.4,102.4,.01,21,2,0)
file #100.
"^DD",102.4,102.4,.01,"DT")
3030124
"^DD",102.4,102.4,2,0)
PROVIDER^P200'^VA(200,^0;2^Q
"^DD",102.4,102.4,2,3)
Enter the name of the ordering provider for this order.
"^DD",102.4,102.4,2,21,0)
^^3^3^3030124^
"^DD",102.4,102.4,2,21,1,0)
This field contains the provider from the New Person file #200 who placed
"^DD",102.4,102.4,2,21,2,0)
this order; this order will be presented to this user in the Care 
"^DD",102.4,102.4,2,21,3,0)
Management dashboard to view and acknowledge the results.
"^DD",102.4,102.4,2,"DT")
3030124
"^DD",102.4,102.4,3,0)
ACKNOWLEDGED^D^^0;3^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",102.4,102.4,3,3)
Enter the date/time the results of the order were acknowledged.
"^DD",102.4,102.4,3,21,0)
^^2^2^3030124^
"^DD",102.4,102.4,3,21,1,0)
This field is the date/time that the results of this order were viewed
"^DD",102.4,102.4,3,21,2,0)
and acknowledged in the Care Management dashboard.
"^DD",102.4,102.4,3,"DT")
3030124
"^DD",8935.91,8935.91,0)
FIELD^^3^9
"^DD",8935.91,8935.91,0,"DDA")
N
"^DD",8935.91,8935.91,0,"IX","B",8935.91,.01)

"^DD",8935.91,8935.91,0,"IX","C",8935.91,.02)

"^DD",8935.91,8935.91,0,"IX","D",8935.91,.01)

"^DD",8935.91,8935.91,0,"IX","DAD",8935.91,.04)

"^DD",8935.91,8935.91,0,"IX","SCAT",8935.913,.02)

"^DD",8935.91,8935.91,0,"NM","XHD PARAMETER CATEGORY")

"^DD",8935.91,8935.91,0,"PT",8935.91,.04)

"^DD",8935.91,8935.91,0,"PT",8935.913,.02)

"^DD",8935.91,8935.91,0,"VRPK")
XHD
"^DD",8935.91,8935.91,.01,0)
FULL NAME^RF^^0;1^K:$L(X)>60!($L(X)<3)!'(X'?1P.E) X
"^DD",8935.91,8935.91,.01,1,0)
^.1
"^DD",8935.91,8935.91,.01,1,1,0)
8935.91^B
"^DD",8935.91,8935.91,.01,1,1,1)
S ^XHD(8935.91,"B",$E(X,1,30),DA)=""
"^DD",8935.91,8935.91,.01,1,1,2)
K ^XHD(8935.91,"B",$E(X,1,30),DA)
"^DD",8935.91,8935.91,.01,1,2,0)
8935.91^D^KWIC
"^DD",8935.91,8935.91,.01,1,2,1)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^XHD(8935.91,"D",I,DA)=""
"^DD",8935.91,8935.91,.01,1,2,2)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^XHD(8935.91,"D",I,DA)
"^DD",8935.91,8935.91,.01,1,2,"%D",0)
^^1^1^3021211^
"^DD",8935.91,8935.91,.01,1,2,"%D",1,0)
KWIC Cross-reference on the name field allows look-up on partial names.
"^DD",8935.91,8935.91,.01,1,2,"DT")
3021211
"^DD",8935.91,8935.91,.01,3)
Answer must be 3-60 characters in length, beginning with Package namespace
"^DD",8935.91,8935.91,.01,21,0)
^.001^1^1^3021108^^^
"^DD",8935.91,8935.91,.01,21,1,0)
This is the name of the Parameter Category.
"^DD",8935.91,8935.91,.01,"DT")
3021211
"^DD",8935.91,8935.91,.02,0)
PLUGIN ID^F^^0;2^K:$L(X)>60!($L(X)<3) X
"^DD",8935.91,8935.91,.02,1,0)
^.1
"^DD",8935.91,8935.91,.02,1,1,0)
8935.91^C
"^DD",8935.91,8935.91,.02,1,1,1)
S ^XHD(8935.91,"C",$E(X,1,30),DA)=""
"^DD",8935.91,8935.91,.02,1,1,2)
K ^XHD(8935.91,"C",$E(X,1,30),DA)
"^DD",8935.91,8935.91,.02,1,1,"%D",0)
^^2^2^3021112^
"^DD",8935.91,8935.91,.02,1,1,"%D",1,0)
This REGULAR FileMan cross-reference allows look-up and sorting by module 
"^DD",8935.91,8935.91,.02,1,1,"%D",2,0)
ID.
"^DD",8935.91,8935.91,.02,1,1,"DT")
3021112
"^DD",8935.91,8935.91,.02,3)
Answer must be 3-60 characters in length.
"^DD",8935.91,8935.91,.02,21,0)
^^2^2^3030114^
"^DD",8935.91,8935.91,.02,21,1,0)
This is the identifier of the plugin to which this category applies 
"^DD",8935.91,8935.91,.02,21,2,0)
(e.g., gov.va.med.hds.prism).
"^DD",8935.91,8935.91,.02,"DT")
3030114
"^DD",8935.91,8935.91,.03,0)
NAME^F^^0;3^K:$L(X)>60!($L(X)<3) X
"^DD",8935.91,8935.91,.03,3)
Answer must be 3-60 characters in length.
"^DD",8935.91,8935.91,.03,21,0)
^^2^2^3021108^
"^DD",8935.91,8935.91,.03,21,1,0)
This is the name of the category by which it will be known to the outside 
"^DD",8935.91,8935.91,.03,21,2,0)
world.
"^DD",8935.91,8935.91,.03,"DT")
3021113
"^DD",8935.91,8935.91,.04,0)
PARENT ID^P8935.91'^XHD(8935.91,^0;4^Q
"^DD",8935.91,8935.91,.04,1,0)
^.1
"^DD",8935.91,8935.91,.04,1,1,0)
8935.91^DAD
"^DD",8935.91,8935.91,.04,1,1,1)
S ^XHD(8935.91,"DAD",$E(X,1,30),DA)=""
"^DD",8935.91,8935.91,.04,1,1,2)
K ^XHD(8935.91,"DAD",$E(X,1,30),DA)
"^DD",8935.91,8935.91,.04,1,1,"%D",0)
^^3^3^3021126^
"^DD",8935.91,8935.91,.04,1,1,"%D",1,0)
This REGULAR, whole-file cross-reference on the parent field helps to 
"^DD",8935.91,8935.91,.04,1,1,"%D",2,0)
assure referential consistency between Parameter Categories and their 
"^DD",8935.91,8935.91,.04,1,1,"%D",3,0)
sub-categories.
"^DD",8935.91,8935.91,.04,1,1,"DT")
3021126
"^DD",8935.91,8935.91,.04,3)
Specify the parent category
"^DD",8935.91,8935.91,.04,21,0)
^.001^1^1^3021113^^
"^DD",8935.91,8935.91,.04,21,1,0)
This is the parent category.
"^DD",8935.91,8935.91,.04,"DT")
3021126
"^DD",8935.91,8935.91,.05,0)
PACKAGE ROOT^S^0:false;1:true;^0;5^Q
"^DD",8935.91,8935.91,.05,3)
Is this the root category for the module?
"^DD",8935.91,8935.91,.05,21,0)
^.001^1^1^3021122^^
"^DD",8935.91,8935.91,.05,21,1,0)
Boolean field to identify the root category for a given module.
"^DD",8935.91,8935.91,.05,"DT")
3021122
"^DD",8935.91,8935.91,.06,0)
OK TO TRANSPORT^S^0:false;1:true;^0;6^Q
"^DD",8935.91,8935.91,.06,3)
Indicate whether the category is ok to transport
"^DD",8935.91,8935.91,.06,21,0)
^^2^2^3030212^
"^DD",8935.91,8935.91,.06,21,1,0)
This Boolean field indicates whether or not a given Category is okay to 
"^DD",8935.91,8935.91,.06,21,2,0)
transport with a KIDS distribution.
"^DD",8935.91,8935.91,.06,"DT")
3030212
"^DD",8935.91,8935.91,1,0)
PREFERENCE PAGE ID^F^^1;1^K:$L(X)>60!($L(X)<3) X
"^DD",8935.91,8935.91,1,3)
Answer must be 3-60 characters in length.
"^DD",8935.91,8935.91,1,21,0)
^^3^3^3030204^
"^DD",8935.91,8935.91,1,21,1,0)
This is the freetext ID of the extension-point in the plugin's 
"^DD",8935.91,8935.91,1,21,2,0)
Manifest.xml file that maps to the Java Class for the Preference Page
"^DD",8935.91,8935.91,1,21,3,0)
associated with this category (e.g., gov.va.med.hds.query.PreferencePage).
"^DD",8935.91,8935.91,1,"DT")
3030204
"^DD",8935.91,8935.91,2,0)
PARAMETERS^8935.912^^2;0
"^DD",8935.91,8935.91,2,21,0)
^.001^1^1^3030226^^^^
"^DD",8935.91,8935.91,2,21,1,0)
This is the multiple of parameters for the category.
"^DD",8935.91,8935.91,3,0)
SUBCATEGORIES^8935.913^^3;0
"^DD",8935.91,8935.91,3,21,0)
^.001^2^2^3021112^^^^
"^DD",8935.91,8935.91,3,21,1,0)
This multiple of subcategories allows an indefinitely nested hierarchy of 
"^DD",8935.91,8935.91,3,21,2,0)
categories.
"^DD",8935.91,8935.912,0)
PARAMETERS SUB-FIELD^^.02^2
"^DD",8935.91,8935.912,0,"IX","B",8935.912,.01)

"^DD",8935.91,8935.912,0,"IX","C",8935.912,.02)

"^DD",8935.91,8935.912,0,"NM","PARAMETERS")

"^DD",8935.91,8935.912,0,"UP")
8935.91
"^DD",8935.91,8935.912,.01,0)
PARAMETER NAME^MF^^0;1^K:$L(X)>60!($L(X)<3) X
"^DD",8935.91,8935.912,.01,1,0)
^.1
"^DD",8935.91,8935.912,.01,1,1,0)
8935.912^B
"^DD",8935.91,8935.912,.01,1,1,1)
S ^XHD(8935.91,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",8935.91,8935.912,.01,1,1,2)
K ^XHD(8935.91,DA(1),2,"B",$E(X,1,30),DA)
"^DD",8935.91,8935.912,.01,3)
Answer must be 3-60 characters in length.
"^DD",8935.91,8935.912,.01,21,0)
^.001^2^2^3021112^^^
"^DD",8935.91,8935.912,.01,21,1,0)
This is the name of the parameter by which it will be identified to the 
"^DD",8935.91,8935.912,.01,21,2,0)
application (e.g., "Look and Feel").
"^DD",8935.91,8935.912,.01,"DT")
3021108
"^DD",8935.91,8935.912,.02,0)
PARAMETER DEFINITION^P8989.51'^XTV(8989.51,^0;2^Q
"^DD",8935.91,8935.912,.02,1,0)
^.1
"^DD",8935.91,8935.912,.02,1,1,0)
8935.912^C
"^DD",8935.91,8935.912,.02,1,1,1)
S ^XHD(8935.91,DA(1),2,"C",$E(X,1,30),DA)=""
"^DD",8935.91,8935.912,.02,1,1,2)
K ^XHD(8935.91,DA(1),2,"C",$E(X,1,30),DA)
"^DD",8935.91,8935.912,.02,1,1,"%D",0)
^.101^2^2^3030221^^
"^DD",8935.91,8935.912,.02,1,1,"%D",1,0)
This REGULAR cross-reference on categories by parameter definition will 
"^DD",8935.91,8935.912,.02,1,1,"%D",2,0)
optimize finding instances of a given parameter in a category.
"^DD",8935.91,8935.912,.02,1,1,"DT")
3030221
"^DD",8935.91,8935.912,.02,3)
Specify the parameter definition to which this entry applies
"^DD",8935.91,8935.912,.02,21,0)
^.001^2^2^3021112^^^
"^DD",8935.91,8935.912,.02,21,1,0)
This is the PARAMETER DEFINITION FILE (#8989.51) to which the entry 
"^DD",8935.91,8935.912,.02,21,2,0)
applies.
"^DD",8935.91,8935.912,.02,"DT")
3030221
"^DD",8935.91,8935.913,0)
SUBCATEGORIES SUB-FIELD^^.02^2
"^DD",8935.91,8935.913,0,"IX","B",8935.913,.01)

"^DD",8935.91,8935.913,0,"IX","C",8935.913,.02)

"^DD",8935.91,8935.913,0,"NM","SUBCATEGORIES")

"^DD",8935.91,8935.913,0,"UP")
8935.91
"^DD",8935.91,8935.913,.01,0)
SEQUENCE^MNJ5,1^^0;1^K:+X'=X!(X>999.9)!(X<.1)!(X?.E1"."2N.N) X
"^DD",8935.91,8935.913,.01,1,0)
^.1
"^DD",8935.91,8935.913,.01,1,1,0)
8935.913^B
"^DD",8935.91,8935.913,.01,1,1,1)
S ^XHD(8935.91,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",8935.91,8935.913,.01,1,1,2)
K ^XHD(8935.91,DA(1),3,"B",$E(X,1,30),DA)
"^DD",8935.91,8935.913,.01,3)
Type a Number between .1 and 999.9, 1 Decimal Digit
"^DD",8935.91,8935.913,.01,21,0)
^.001^1^1^3021112^^
"^DD",8935.91,8935.913,.01,21,1,0)
Specify the sequence in which the subcategory will be presented.
"^DD",8935.91,8935.913,.01,"DT")
3021112
"^DD",8935.91,8935.913,.02,0)
SUBCATEGORY^P8935.91^XHD(8935.91,^0;2^Q
"^DD",8935.91,8935.913,.02,1,0)
^.1
"^DD",8935.91,8935.913,.02,1,1,0)
8935.913^C
"^DD",8935.91,8935.913,.02,1,1,1)
S ^XHD(8935.91,DA(1),3,"C",$E(X,1,30),DA)=""
"^DD",8935.91,8935.913,.02,1,1,2)
K ^XHD(8935.91,DA(1),3,"C",$E(X,1,30),DA)
"^DD",8935.91,8935.913,.02,1,1,"%D",0)
^^2^2^3021127^
"^DD",8935.91,8935.913,.02,1,1,"%D",1,0)
This regular cross-reference by subcategory allows quick look-ups based 
"^DD",8935.91,8935.913,.02,1,1,"%D",2,0)
on sub-category ids.
"^DD",8935.91,8935.913,.02,1,1,"DT")
3021127
"^DD",8935.91,8935.913,.02,1,2,0)
8935.91^SCAT
"^DD",8935.91,8935.913,.02,1,2,1)
S ^XHD(8935.91,"SCAT",$E(X,1,30),DA(1),DA)=""
"^DD",8935.91,8935.913,.02,1,2,2)
K ^XHD(8935.91,"SCAT",$E(X,1,30),DA(1),DA)
"^DD",8935.91,8935.913,.02,1,2,"%D",0)
^^2^2^3021127^
"^DD",8935.91,8935.913,.02,1,2,"%D",1,0)
This regular, whole-file cross-reference by sub-category allows quick 
"^DD",8935.91,8935.913,.02,1,2,"%D",2,0)
look-ups by sub-category id.
"^DD",8935.91,8935.913,.02,1,2,"DT")
3021127
"^DD",8935.91,8935.913,.02,3)
Select the subcategory.
"^DD",8935.91,8935.913,.02,21,0)
^.001^2^2^3021112^^^
"^DD",8935.91,8935.913,.02,21,1,0)
This field holds a reference to the subcategory entry in the Parameter 
"^DD",8935.91,8935.913,.02,21,2,0)
Categories file.
"^DD",8935.91,8935.913,.02,"DT")
3021127
"^DIC",102.21,102.21,0)
CPRS QUERY DEFINITION^102.21
"^DIC",102.21,102.21,0,"GL")
^ORD(102.21,
"^DIC",102.21,102.21,"%D",0)
^^18^18^3030110^
"^DIC",102.21,102.21,"%D",1,0)
The CPRS query tool provides a mechanism by which clinical users may 
"^DIC",102.21,102.21,"%D",2,0)
search for items typically managed by CPRS.  These are very limited types
"^DIC",102.21,102.21,"%D",3,0)
of queries.  A wizard helps the user construct the criteria used in the
"^DIC",102.21,102.21,"%D",4,0)
query.
"^DIC",102.21,102.21,"%D",5,0)
 
"^DIC",102.21,102.21,"%D",6,0)
This file contains definitions of queries used to build reports of CPRS
"^DIC",102.21,102.21,"%D",7,0)
items (orders, consults, documents).  Each query definition contains a
"^DIC",102.21,102.21,"%D",8,0)
list of constraints.  These constraints are used by the query routines to
"^DIC",102.21,102.21,"%D",9,0)
return a subset of CPRS items.
"^DIC",102.21,102.21,"%D",10,0)
 
"^DIC",102.21,102.21,"%D",11,0)
This file also contains definitions of report criteria.  These criteria 
"^DIC",102.21,102.21,"%D",12,0)
are selected and modified by the user when building custom reports.  A
"^DIC",102.21,102.21,"%D",13,0)
report criterion contains a list of constraints that apply to the
"^DIC",102.21,102.21,"%D",14,0)
particular criterion. A critieron behaves much like a "mini-report".
"^DIC",102.21,102.21,"%D",15,0)
 
"^DIC",102.21,102.21,"%D",16,0)
The other part of a query definition stored in this file is the list of
"^DIC",102.21,102.21,"%D",17,0)
fields to be displayed after the query is run.  The query produces a 
"^DIC",102.21,102.21,"%D",18,0)
columnar report with the selected display field in each column.
"^DIC",102.21,"B","CPRS QUERY DEFINITION",102.21)

"^DIC",102.3,102.3,0)
PATIENT TASK^102.3
"^DIC",102.3,102.3,0,"GL")
^ORRT(102.3,
"^DIC",102.3,102.3,"%D",0)
^^3^3^3030721^
"^DIC",102.3,102.3,"%D",1,0)
This file contains patient tasks for the Care Management dashboards;
"^DIC",102.3,102.3,"%D",2,0)
all supporting attributes are stored here, as well as tracking of each
"^DIC",102.3,102.3,"%D",3,0)
one's cancellation or fulfillment.
"^DIC",102.3,"B","PATIENT TASK",102.3)

"^DIC",102.4,102.4,0)
ORDER ACKNOWLEDGEMENT^102.4
"^DIC",102.4,102.4,0,"GL")
^ORA(102.4,
"^DIC",102.4,102.4,"%D",0)
^^6^6^3030721^
"^DIC",102.4,102.4,"%D",1,0)
This file contains all acknowledgments for order results captured via
"^DIC",102.4,102.4,"%D",2,0)
the Care Management dashboards.  A stub is created here for the ordering
"^DIC",102.4,102.4,"%D",3,0)
provider when new results become available for an order that s/he placed;
"^DIC",102.4,102.4,"%D",4,0)
the entry is then updated when the order is actually acknowledged via
"^DIC",102.4,102.4,"%D",5,0)
the CM application.  An order's results may also be acknowledged by
"^DIC",102.4,102.4,"%D",6,0)
other users as well, such as the nursing staff caring for the patient.
"^DIC",102.4,"B","ORDER ACKNOWLEDGEMENT",102.4)

"^DIC",8935.91,8935.91,0)
XHD PARAMETER CATEGORY^8935.91
"^DIC",8935.91,8935.91,0,"GL")
^XHD(8935.91,
"^DIC",8935.91,8935.91,"%D",0)
^^17^17^3031027^
"^DIC",8935.91,8935.91,"%D",1,0)
The HealtheVet Desktop relies on various modules or plug-ins for proper 
"^DIC",8935.91,8935.91,"%D",2,0)
processing. Each plug-in may have related VistA parameters from which 
"^DIC",8935.91,8935.91,"%D",3,0)
values are obtained. This file supports the grouping of parameters into 
"^DIC",8935.91,8935.91,"%D",4,0)
logical categories, and the association of such categories with the module 
"^DIC",8935.91,8935.91,"%D",5,0)
or plug-in to which they apply.  
"^DIC",8935.91,8935.91,"%D",6,0)
 
"^DIC",8935.91,8935.91,"%D",7,0)
Categories may also be associated with Preference Pages. Preference Pages may 
"^DIC",8935.91,8935.91,"%D",8,0)
be composed by plug-in developers, and are used by the HealtheVet Desktop's 
"^DIC",8935.91,8935.91,"%D",9,0)
Preferences Dialog to make available user-configurable features of the
"^DIC",8935.91,8935.91,"%D",10,0)
corresponding plug-in.
"^DIC",8935.91,8935.91,"%D",11,0)
 
"^DIC",8935.91,8935.91,"%D",12,0)
******************************************************************************
"^DIC",8935.91,8935.91,"%D",13,0)
*     Entries in this file are distributed by HealtheVet Desktop Plug-in     * 
"^DIC",8935.91,8935.91,"%D",14,0)
* developers, and should NOT be altered by any facility. Altering this file  * 
"^DIC",8935.91,8935.91,"%D",15,0)
*  can severely compromise the behavior of your HeatheVet Desktop plug-ins.  * 
"^DIC",8935.91,8935.91,"%D",16,0)
*                                                                            *
"^DIC",8935.91,8935.91,"%D",17,0)
******************************************************************************
"^DIC",8935.91,"B","XHD PARAMETER CATEGORY",8935.91)

**END**
**END**
