Released XU*8*24 SEQ #29
Extracted from mail message
**KIDS**:XU*8.0*24^

**INSTALL NAME**
XU*8.0*24
"BLD",43,0)
XU*8.0*24^KERNEL^0^2960802^n
"BLD",43,1,0)
^^153^153^2960812^
"BLD",43,1,1,0)

"BLD",43,1,2,0)
E3R #8206   On VAX DSM to have TelNet links HALT from ZUVXD and not wait
"BLD",43,1,3,0)
for the next user.
"BLD",43,1,4,0)

"BLD",43,1,5,0)
NOIS DAY-0596-40526  A syntax error at RES+1^%ZOSV1VXD
"BLD",43,1,6,0)

"BLD",43,1,7,0)
NOIS SDC-0596-60064  Problem was that users couldn't use ScreenMan after
"BLD",43,1,8,0)
doing 'Print a spool document' because the IO parameters didn't get reset.
"BLD",43,1,9,0)

"BLD",43,1,10,0)
-- The '%Index of Routines' option doesn't call the new version.
"BLD",43,1,11,0)

"BLD",43,1,12,0)
NOIS DAY-0496-41713  Submanager count always low. Site and John Beaufait
"BLD",43,1,13,0)
did a great job of researching this problem.
"BLD",43,1,14,0)

"BLD",43,1,15,0)
NOIS WBP-0596-21109, SDC-0496-60862  After patch XU*8*18 if the site has
"BLD",43,1,16,0)
error screens setup in taskman, a task getting an error would not get
"BLD",43,1,17,0)
its status updated.  This was especially true when the error happened
"BLD",43,1,18,0)
setting up Network Mail tasks, Follow-up Mail would check on the status
"BLD",43,1,19,0)
of the task and not start new ones believing that one was starting.
"BLD",43,1,20,0)
Thanks to David Dahlstrand for noticing the link.
"BLD",43,1,21,0)

"BLD",43,1,22,0)
NOIS PUG-0596-51586  The new OPEN^%ZISH call wouldn't work to write a 
"BLD",43,1,23,0)
newversion of a file.  Problem was only with the VAX DSM version.
"BLD",43,1,24,0)

"BLD",43,1,25,0)
FILEMAN TEAM Problems with $$FTG^%ZISH on VAX DSM and reading records
"BLD",43,1,26,0)
greater than 255 char.  ZISHMSM had the same problem.
"BLD",43,1,27,0)

"BLD",43,1,28,0)
NOIS DES-0795-41067  TaskMan on MSM system could see the SYSTEM SHUTDOWN
"BLD",43,1,29,0)
flag and would set the X-ref of the Inhibit Logon's field to prevent users
"BLD",43,1,30,0)
from login on.  If the shutdown was aborted the X-ref would keep user from
"BLD",43,1,31,0)
login on but looking at the Volume Set file would show the Logon Inhibit
"BLD",43,1,32,0)
field still set to NO, this was confusing to sites.  This has been fixed
"BLD",43,1,33,0)
by adding a new item to the set of codes System Shutdown that is set and
"BLD",43,1,34,0)
cleared by taskman.
"BLD",43,1,35,0)

"BLD",43,1,36,0)
NOIS IHS-0696-N0286  Site found a call to a missing TAG in %ZISH, it was 
"BLD",43,1,37,0)
part of some code that is undocumented and the call has been removed.
"BLD",43,1,38,0)

"BLD",43,1,39,0)
NOIS DAY-0196-42100  Intermittent UNDEF in XQALDEV.  One entry point didn't
"BLD",43,1,40,0)
have all the variables setup.
"BLD",43,1,41,0)

"BLD",43,1,42,0)
NOIS HUN-0396-20414  At VAX DSM sites running taskman from DCL the log 
"BLD",43,1,43,0)
files could excced the VMS limit and bring Taskman to a stop.  The fix
"BLD",43,1,44,0)
is to not record a log file.
"BLD",43,1,45,0)

"BLD",43,1,46,0)
FORUM errors.  UNDEF Error at SETVAR^%ZIS1 when slecting a item from the
"BLD",43,1,47,0)
Local Synonym list.
"BLD",43,1,48,0)

"BLD",43,1,49,0)
BRX-0296-10688 Site needed to help identify devices to users.  Site wanted
"BLD",43,1,50,0)
the display the Mnemonic. This is a multipule and would cause problems.
"BLD",43,1,51,0)
Added code to display the Device Location like the FM loopup does.
"BLD",43,1,52,0)

"BLD",43,1,53,0)

"BLD",43,1,54,0)
routine     new checksum
"BLD",43,1,55,0)
XQALDEL          13827021
"BLD",43,1,56,0)
ZIS5              7634324
"BLD",43,1,57,0)
ZIS6              9961139
"BLD",43,1,58,0)
ZISC              8469046
"BLD",43,1,59,0)
ZISHMSM           5232475
"BLD",43,1,60,0)
ZISHVXD           6949854
"BLD",43,1,61,0)
ZISUTL            2111550
"BLD",43,1,62,0)
ZOSV1VXD          2355845
"BLD",43,1,63,0)
ZTER             18727059
"BLD",43,1,64,0)
ZTER1             5363987
"BLD",43,1,65,0)
ZTM               7509587
"BLD",43,1,66,0)
ZTM5              3649126
"BLD",43,1,67,0)
ZTMDCL             527042
"BLD",43,1,68,0)
ZTMS              4863268
"BLD",43,1,69,0)
ZTMS0             3205484
"BLD",43,1,70,0)
ZUVXD             4856063
"BLD",43,1,71,0)

"BLD",43,1,72,0)
========================================================================= 
"BLD",43,1,73,0)
Installation:
"BLD",43,1,74,0)

"BLD",43,1,75,0)
  1.  These routines are usually mapped on systems that allow mapping,
"BLD",43,1,76,0)
      so you will need to disable mapping for the effected routines.
"BLD",43,1,77,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"BLD",43,1,78,0)
      option will load the KIDS package onto your system.
"BLD",43,1,79,0)
  3.  The patch has now been loaded into a Transport global on your
"BLD",43,1,80,0)
      system. You now need to use KIDS to install the Transport global.
"BLD",43,1,81,0)
      On the KIDS menu, under the 'Installation' menu, use the following
"BLD",43,1,82,0)
      options:
"BLD",43,1,83,0)
         Print Transport Global
"BLD",43,1,84,0)
         Compare Transport Global to Current System
"BLD",43,1,85,0)
         Verify Checksums in Transport Global
"BLD",43,1,86,0)
         Backup a Transport Global
"BLD",43,1,87,0)
  5.  Stop TASKMAN.
"BLD",43,1,88,0)
      Inhibit users from login into the system. (If you install when few
"BLD",43,1,89,0)
      user are on the system and the possibility of some CLOBER errors in 
"BLD",43,1,90,0)
      %ZIS is acceptable then users can stay on the system.)
"BLD",43,1,91,0)
  6.  On the KIDS menu, under the 'Installation' menu, use the following
"BLD",43,1,92,0)
      options:
"BLD",43,1,93,0)
         Install Package(s)  'XU*8.0*24'
"BLD",43,1,94,0)
  7.  VAX DSM Sites in the production account rename ZUVXD to ZU.
"BLD",43,1,95,0)
  
"BLD",43,1,96,0)
      MSM Sites - Answer YES to the question 'Want to MOVE routines to
"BLD",43,1,97,0)
      other CPUs?'. Enter the names of your Compute and Print server(s).
"BLD",43,1,98,0)
      NOTE: You will see the following message: TASKMAN is not running.
"BLD",43,1,99,0)
      You must run the routine XPDCPU in the production UCI for each
"BLD",43,1,100,0)
      of the VOLUME SETS you have listed, once the installation starts.
"BLD",43,1,101,0)
             
"BLD",43,1,102,0)
      MSM Sites - Once the install starts, KIDS will pause 5 minutes to
"BLD",43,1,103,0)
      allow time for you to go to the other CPUs, and make them ready to
"BLD",43,1,104,0)
      receive the patched routines.
"BLD",43,1,105,0)
      'D ^XUP' to setup the enviroment, then 'D ^XPDCPU' to load them.
"BLD",43,1,106,0)
           
"BLD",43,1,107,0)
  8.  After installing this patch, you need to move several routines from 
"BLD",43,1,108,0)
      your productions account to the manager account:
"BLD",43,1,109,0)

"BLD",43,1,110,0)
      ZIS5
"BLD",43,1,111,0)
      ZIS6
"BLD",43,1,112,0)
      ZISC
"BLD",43,1,113,0)
      ZISHVXD
"BLD",43,1,114,0)
      ZISHMSM
"BLD",43,1,115,0)
      ZISUTL
"BLD",43,1,116,0)
      ZOSV1VXD
"BLD",43,1,117,0)
      ZTER
"BLD",43,1,118,0)
      ZTER1
"BLD",43,1,119,0)
      ZTM
"BLD",43,1,120,0)
      ZTM5
"BLD",43,1,121,0)
      ZTMDCL
"BLD",43,1,122,0)
      ZTMS 
"BLD",43,1,123,0)
      ZTMS0 
"BLD",43,1,124,0)

"BLD",43,1,125,0)

"BLD",43,1,126,0)
      and in the manager account rename
"BLD",43,1,127,0)

"BLD",43,1,128,0)
      Example: ZL ZISUTL ZS %ZISUTL
"BLD",43,1,129,0)
      
"BLD",43,1,130,0)
      ZIS5       to %ZIS5
"BLD",43,1,131,0)
      ZIS6       to %ZIS6
"BLD",43,1,132,0)
      ZISC       to %ZISC
"BLD",43,1,133,0)
      ZISHMSM    to %ZISH   (MSM only)
"BLD",43,1,134,0)
      ZISHVXD    to %ZISH   (VAX DSM only) 
"BLD",43,1,135,0)
      ZISUTL     to %ZISUTL
"BLD",43,1,136,0)
      ZOSV1VXD   to %ZOSV1  (VAX DSM only)
"BLD",43,1,137,0)
      ZTER       to %ZTER
"BLD",43,1,138,0)
      ZTER1      to %ZTER1
"BLD",43,1,139,0)
      ZTM        to %ZTM
"BLD",43,1,140,0)
      ZTM5       to %ZTM5
"BLD",43,1,141,0)
      ZTMDCL     to %ZTMDCL
"BLD",43,1,142,0)
      ZTMS       to %ZTMS
"BLD",43,1,143,0)
      ZTMS0      to %ZTMS0
"BLD",43,1,144,0)
     
"BLD",43,1,145,0)

"BLD",43,1,146,0)
  9.  MSM sites now move both the % and non-% new routines to the MGR
"BLD",43,1,147,0)
      uci of the other CPU's.       
"BLD",43,1,148,0)
  9.  AXP Sites, after patch has installed, rebuild your map set.
"BLD",43,1,149,0)
 10.  Restart Taskman and enable user's login.
"BLD",43,1,150,0)
     
"BLD",43,1,151,0)

"BLD",43,1,152,0)
=========================================================================
"BLD",43,1,153,0)

"BLD",43,4,0)
^9.64PA^14.5^1
"BLD",43,4,14.5,0)
14.5
"BLD",43,4,14.5,2,0)
^9.641^14.5^1
"BLD",43,4,14.5,2,14.5,0)
VOLUME SET  (File-top level)
"BLD",43,4,14.5,2,14.5,1,0)
^9.6411^1^1
"BLD",43,4,14.5,2,14.5,1,1,0)
INHIBIT LOGONS?
"BLD",43,4,14.5,222)
y^y^p^^^^n
"BLD",43,4,"APDD",14.5,14.5)

"BLD",43,4,"APDD",14.5,14.5,1)

"BLD",43,4,"B",14.5,14.5)

"BLD",43,"KRN",0)
^9.67PA^8994^15
"BLD",43,"KRN",.4,0)
.4
"BLD",43,"KRN",.401,0)
.401
"BLD",43,"KRN",.402,0)
.402
"BLD",43,"KRN",.402,"NM",0)
^9.68A^^0
"BLD",43,"KRN",.403,0)
.403
"BLD",43,"KRN",.5,0)
.5
"BLD",43,"KRN",.84,0)
.84
"BLD",43,"KRN",3.6,0)
3.6
"BLD",43,"KRN",9.2,0)
9.2
"BLD",43,"KRN",9.8,0)
9.8
"BLD",43,"KRN",9.8,"NM",0)
^9.68A^16^16
"BLD",43,"KRN",9.8,"NM",1,0)
ZUVXD^^0^B10098055
"BLD",43,"KRN",9.8,"NM",2,0)
ZOSV1VXD^^0^B4315785
"BLD",43,"KRN",9.8,"NM",3,0)
ZTM^^0^B20414148
"BLD",43,"KRN",9.8,"NM",4,0)
ZTMS^^0^B11085603
"BLD",43,"KRN",9.8,"NM",5,0)
ZISHVXD^^0^B36797682
"BLD",43,"KRN",9.8,"NM",6,0)
ZIS6^^0^B16985110
"BLD",43,"KRN",9.8,"NM",7,0)
ZISUTL^^0^B6155305
"BLD",43,"KRN",9.8,"NM",8,0)
XQALDEL^^0^B25043478
"BLD",43,"KRN",9.8,"NM",9,0)
ZTM5^^0^B9979173
"BLD",43,"KRN",9.8,"NM",10,0)
ZTER^^0^B26354935
"BLD",43,"KRN",9.8,"NM",11,0)
ZTMDCL^^0^B616863
"BLD",43,"KRN",9.8,"NM",12,0)
ZISC^^0^B19987118
"BLD",43,"KRN",9.8,"NM",13,0)
ZTMS0^^0^B6272720
"BLD",43,"KRN",9.8,"NM",14,0)
ZIS5^^0^B12909289
"BLD",43,"KRN",9.8,"NM",15,0)
ZISHMSM^^0^B29326283
"BLD",43,"KRN",9.8,"NM",16,0)
ZTER1^^0^B7457451
"BLD",43,"KRN",9.8,"NM","B","XQALDEL",8)

"BLD",43,"KRN",9.8,"NM","B","ZIS5",14)

"BLD",43,"KRN",9.8,"NM","B","ZIS6",6)

"BLD",43,"KRN",9.8,"NM","B","ZISC",12)

"BLD",43,"KRN",9.8,"NM","B","ZISHMSM",15)

"BLD",43,"KRN",9.8,"NM","B","ZISHVXD",5)

"BLD",43,"KRN",9.8,"NM","B","ZISUTL",7)

"BLD",43,"KRN",9.8,"NM","B","ZOSV1VXD",2)

"BLD",43,"KRN",9.8,"NM","B","ZTER",10)

"BLD",43,"KRN",9.8,"NM","B","ZTER1",16)

"BLD",43,"KRN",9.8,"NM","B","ZTM",3)

"BLD",43,"KRN",9.8,"NM","B","ZTM5",9)

"BLD",43,"KRN",9.8,"NM","B","ZTMDCL",11)

"BLD",43,"KRN",9.8,"NM","B","ZTMS",4)

"BLD",43,"KRN",9.8,"NM","B","ZTMS0",13)

"BLD",43,"KRN",9.8,"NM","B","ZUVXD",1)

"BLD",43,"KRN",19,0)
19
"BLD",43,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",43,"KRN",19,"NM",1,0)
XUINDEX^^0
"BLD",43,"KRN",19,"NM","B","XUINDEX",1)

"BLD",43,"KRN",19.1,0)
19.1
"BLD",43,"KRN",101,0)
101
"BLD",43,"KRN",409.61,0)
409.61
"BLD",43,"KRN",8994,0)
8994
"BLD",43,"KRN",8995,0)
8995
"BLD",43,"KRN","B",.4,.4)

"BLD",43,"KRN","B",.401,.401)

"BLD",43,"KRN","B",.402,.402)

"BLD",43,"KRN","B",.403,.403)

"BLD",43,"KRN","B",.5,.5)

"BLD",43,"KRN","B",.84,.84)

"BLD",43,"KRN","B",3.6,3.6)

"BLD",43,"KRN","B",9.2,9.2)

"BLD",43,"KRN","B",9.8,9.8)

"BLD",43,"KRN","B",19,19)

"BLD",43,"KRN","B",19.1,19.1)

"BLD",43,"KRN","B",101,101)

"BLD",43,"KRN","B",409.61,409.61)

"BLD",43,"KRN","B",8994,8994)

"BLD",43,"KRN","B",8995,8995)

"BLD",43,"QUES",0)
^9.62^^
"FIA",14.5)
VOLUME SET
"FIA",14.5,0)
^%ZIS(14.5,
"FIA",14.5,0,0)
14.5
"FIA",14.5,0,1)
y^y^p^^^^n
"FIA",14.5,0,10)

"FIA",14.5,0,11)

"FIA",14.5,0,"RLRO")

"FIA",14.5,0,"VR")
8.0^XU
"FIA",14.5,14.5)
1
"FIA",14.5,14.5,1)

"KRN",19,195,-1)
0^1
"KRN",19,195,0)
XUINDEX^%Index of Routines^^R^^^^5^^^^^^
"KRN",19,195,1,0)
^^1^1^2880401^^
"KRN",19,195,1,1,0)
This option runs the %INDEX routine.
"KRN",19,195,25)
XINDEX
"KRN",19,195,99.1)
56665,39870
"KRN",19,195,"U")
%INDEX OF ROUTINES
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^XUDOCV7 NEW FEATURES
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^2950703^2951018^4
"PKG",3,22,1,"PAH",1,0)
24^2960802
"PKG",3,22,1,"PAH",1,1,0)
^^153^153^2960812
"PKG",3,22,1,"PAH",1,1,1,0)

"PKG",3,22,1,"PAH",1,1,2,0)
E3R #8206   On VAX DSM to have TelNet links HALT from ZUVXD and not wait
"PKG",3,22,1,"PAH",1,1,3,0)
for the next user.
"PKG",3,22,1,"PAH",1,1,4,0)

"PKG",3,22,1,"PAH",1,1,5,0)
NOIS DAY-0596-40526  A syntax error at RES+1^%ZOSV1VXD
"PKG",3,22,1,"PAH",1,1,6,0)

"PKG",3,22,1,"PAH",1,1,7,0)
NOIS SDC-0596-60064  Problem was that users couldn't use ScreenMan after
"PKG",3,22,1,"PAH",1,1,8,0)
doing 'Print a spool document' because the IO parameters didn't get reset.
"PKG",3,22,1,"PAH",1,1,9,0)

"PKG",3,22,1,"PAH",1,1,10,0)
-- The '%Index of Routines' option doesn't call the new version.
"PKG",3,22,1,"PAH",1,1,11,0)

"PKG",3,22,1,"PAH",1,1,12,0)
NOIS DAY-0496-41713  Submanager count always low. Site and John Beaufait
"PKG",3,22,1,"PAH",1,1,13,0)
did a great job of researching this problem.
"PKG",3,22,1,"PAH",1,1,14,0)

"PKG",3,22,1,"PAH",1,1,15,0)
NOIS WBP-0596-21109, SDC-0496-60862  After patch XU*8*18 if the site has
"PKG",3,22,1,"PAH",1,1,16,0)
error screens setup in taskman, a task getting an error would not get
"PKG",3,22,1,"PAH",1,1,17,0)
its status updated.  This was especially true when the error happened
"PKG",3,22,1,"PAH",1,1,18,0)
setting up Network Mail tasks, Follow-up Mail would check on the status
"PKG",3,22,1,"PAH",1,1,19,0)
of the task and not start new ones believing that one was starting.
"PKG",3,22,1,"PAH",1,1,20,0)
Thanks to David Dahlstrand for noticing the link.
"PKG",3,22,1,"PAH",1,1,21,0)

"PKG",3,22,1,"PAH",1,1,22,0)
NOIS PUG-0596-51586  The new OPEN^%ZISH call wouldn't work to write a 
"PKG",3,22,1,"PAH",1,1,23,0)
newversion of a file.  Problem was only with the VAX DSM version.
"PKG",3,22,1,"PAH",1,1,24,0)

"PKG",3,22,1,"PAH",1,1,25,0)
FILEMAN TEAM Problems with $$FTG^%ZISH on VAX DSM and reading records
"PKG",3,22,1,"PAH",1,1,26,0)
greater than 255 char.  ZISHMSM had the same problem.
"PKG",3,22,1,"PAH",1,1,27,0)

"PKG",3,22,1,"PAH",1,1,28,0)
NOIS DES-0795-41067  TaskMan on MSM system could see the SYSTEM SHUTDOWN
"PKG",3,22,1,"PAH",1,1,29,0)
flag and would set the X-ref of the Inhibit Logon's field to prevent users
"PKG",3,22,1,"PAH",1,1,30,0)
from login on.  If the shutdown was aborted the X-ref would keep user from
"PKG",3,22,1,"PAH",1,1,31,0)
login on but looking at the Volume Set file would show the Logon Inhibit
"PKG",3,22,1,"PAH",1,1,32,0)
field still set to NO, this was confusing to sites.  This has been fixed
"PKG",3,22,1,"PAH",1,1,33,0)
by adding a new item to the set of codes System Shutdown that is set and
"PKG",3,22,1,"PAH",1,1,34,0)
cleared by taskman.
"PKG",3,22,1,"PAH",1,1,35,0)

"PKG",3,22,1,"PAH",1,1,36,0)
NOIS IHS-0696-N0286  Site found a call to a missing TAG in %ZISH, it was 
"PKG",3,22,1,"PAH",1,1,37,0)
part of some code that is undocumented and the call has been removed.
"PKG",3,22,1,"PAH",1,1,38,0)

"PKG",3,22,1,"PAH",1,1,39,0)
NOIS DAY-0196-42100  Intermittent UNDEF in XQALDEV.  One entry point didn't
"PKG",3,22,1,"PAH",1,1,40,0)
have all the variables setup.
"PKG",3,22,1,"PAH",1,1,41,0)

"PKG",3,22,1,"PAH",1,1,42,0)
NOIS HUN-0396-20414  At VAX DSM sites running taskman from DCL the log 
"PKG",3,22,1,"PAH",1,1,43,0)
files could excced the VMS limit and bring Taskman to a stop.  The fix
"PKG",3,22,1,"PAH",1,1,44,0)
is to not record a log file.
"PKG",3,22,1,"PAH",1,1,45,0)

"PKG",3,22,1,"PAH",1,1,46,0)
FORUM errors.  UNDEF Error at SETVAR^%ZIS1 when slecting a item from the
"PKG",3,22,1,"PAH",1,1,47,0)
Local Synonym list.
"PKG",3,22,1,"PAH",1,1,48,0)

"PKG",3,22,1,"PAH",1,1,49,0)
BRX-0296-10688 Site needed to help identify devices to users.  Site wanted
"PKG",3,22,1,"PAH",1,1,50,0)
the display the Mnemonic. This is a multipule and would cause problems.
"PKG",3,22,1,"PAH",1,1,51,0)
Added code to display the Device Location like the FM loopup does.
"PKG",3,22,1,"PAH",1,1,52,0)

"PKG",3,22,1,"PAH",1,1,53,0)

"PKG",3,22,1,"PAH",1,1,54,0)
routine     new checksum
"PKG",3,22,1,"PAH",1,1,55,0)
XQALDEL          13827021
"PKG",3,22,1,"PAH",1,1,56,0)
ZIS5              7634324
"PKG",3,22,1,"PAH",1,1,57,0)
ZIS6              9961139
"PKG",3,22,1,"PAH",1,1,58,0)
ZISC              8469046
"PKG",3,22,1,"PAH",1,1,59,0)
ZISHMSM           5232475
"PKG",3,22,1,"PAH",1,1,60,0)
ZISHVXD           6949854
"PKG",3,22,1,"PAH",1,1,61,0)
ZISUTL            2111550
"PKG",3,22,1,"PAH",1,1,62,0)
ZOSV1VXD          2355845
"PKG",3,22,1,"PAH",1,1,63,0)
ZTER             18727059
"PKG",3,22,1,"PAH",1,1,64,0)
ZTER1             5363987
"PKG",3,22,1,"PAH",1,1,65,0)
ZTM               7509587
"PKG",3,22,1,"PAH",1,1,66,0)
ZTM5              3649126
"PKG",3,22,1,"PAH",1,1,67,0)
ZTMDCL             527042
"PKG",3,22,1,"PAH",1,1,68,0)
ZTMS              4863268
"PKG",3,22,1,"PAH",1,1,69,0)
ZTMS0             3205484
"PKG",3,22,1,"PAH",1,1,70,0)
ZUVXD             4856063
"PKG",3,22,1,"PAH",1,1,71,0)

"PKG",3,22,1,"PAH",1,1,72,0)
========================================================================= 
"PKG",3,22,1,"PAH",1,1,73,0)
Installation:
"PKG",3,22,1,"PAH",1,1,74,0)

"PKG",3,22,1,"PAH",1,1,75,0)
  1.  These routines are usually mapped on systems that allow mapping,
"PKG",3,22,1,"PAH",1,1,76,0)
      so you will need to disable mapping for the effected routines.
"PKG",3,22,1,"PAH",1,1,77,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"PKG",3,22,1,"PAH",1,1,78,0)
      option will load the KIDS package onto your system.
"PKG",3,22,1,"PAH",1,1,79,0)
  3.  The patch has now been loaded into a Transport global on your
"PKG",3,22,1,"PAH",1,1,80,0)
      system. You now need to use KIDS to install the Transport global.
"PKG",3,22,1,"PAH",1,1,81,0)
      On the KIDS menu, under the 'Installation' menu, use the following
"PKG",3,22,1,"PAH",1,1,82,0)
      options:
"PKG",3,22,1,"PAH",1,1,83,0)
         Print Transport Global
"PKG",3,22,1,"PAH",1,1,84,0)
         Compare Transport Global to Current System
"PKG",3,22,1,"PAH",1,1,85,0)
         Verify Checksums in Transport Global
"PKG",3,22,1,"PAH",1,1,86,0)
         Backup a Transport Global
"PKG",3,22,1,"PAH",1,1,87,0)
  5.  Stop TASKMAN.
"PKG",3,22,1,"PAH",1,1,88,0)
      Inhibit users from login into the system. (If you install when few
"PKG",3,22,1,"PAH",1,1,89,0)
      user are on the system and the possibility of some CLOBER errors in 
"PKG",3,22,1,"PAH",1,1,90,0)
      %ZIS is acceptable then users can stay on the system.)
"PKG",3,22,1,"PAH",1,1,91,0)
  6.  On the KIDS menu, under the 'Installation' menu, use the following
"PKG",3,22,1,"PAH",1,1,92,0)
      options:
"PKG",3,22,1,"PAH",1,1,93,0)
         Install Package(s)  'XU*8.0*24'
"PKG",3,22,1,"PAH",1,1,94,0)
  7.  VAX DSM Sites in the production account rename ZUVXD to ZU.
"PKG",3,22,1,"PAH",1,1,95,0)
  
"PKG",3,22,1,"PAH",1,1,96,0)
      MSM Sites - Answer YES to the question 'Want to MOVE routines to
"PKG",3,22,1,"PAH",1,1,97,0)
      other CPUs?'. Enter the names of your Compute and Print server(s).
"PKG",3,22,1,"PAH",1,1,98,0)
      NOTE: You will see the following message: TASKMAN is not running.
"PKG",3,22,1,"PAH",1,1,99,0)
      You must run the routine XPDCPU in the production UCI for each
"PKG",3,22,1,"PAH",1,1,100,0)
      of the VOLUME SETS you have listed, once the installation starts.
"PKG",3,22,1,"PAH",1,1,101,0)
             
"PKG",3,22,1,"PAH",1,1,102,0)
      MSM Sites - Once the install starts, KIDS will pause 5 minutes to
"PKG",3,22,1,"PAH",1,1,103,0)
      allow time for you to go to the other CPUs, and make them ready to
"PKG",3,22,1,"PAH",1,1,104,0)
      receive the patched routines.
"PKG",3,22,1,"PAH",1,1,105,0)
      'D ^XUP' to setup the enviroment, then 'D ^XPDCPU' to load them.
"PKG",3,22,1,"PAH",1,1,106,0)
           
"PKG",3,22,1,"PAH",1,1,107,0)
  8.  After installing this patch, you need to move several routines from 
"PKG",3,22,1,"PAH",1,1,108,0)
      your productions account to the manager account:
"PKG",3,22,1,"PAH",1,1,109,0)

"PKG",3,22,1,"PAH",1,1,110,0)
      ZIS5
"PKG",3,22,1,"PAH",1,1,111,0)
      ZIS6
"PKG",3,22,1,"PAH",1,1,112,0)
      ZISC
"PKG",3,22,1,"PAH",1,1,113,0)
      ZISHVXD
"PKG",3,22,1,"PAH",1,1,114,0)
      ZISHMSM
"PKG",3,22,1,"PAH",1,1,115,0)
      ZISUTL
"PKG",3,22,1,"PAH",1,1,116,0)
      ZOSV1VXD
"PKG",3,22,1,"PAH",1,1,117,0)
      ZTER
"PKG",3,22,1,"PAH",1,1,118,0)
      ZTER1
"PKG",3,22,1,"PAH",1,1,119,0)
      ZTM
"PKG",3,22,1,"PAH",1,1,120,0)
      ZTM5
"PKG",3,22,1,"PAH",1,1,121,0)
      ZTMDCL
"PKG",3,22,1,"PAH",1,1,122,0)
      ZTMS 
"PKG",3,22,1,"PAH",1,1,123,0)
      ZTMS0 
"PKG",3,22,1,"PAH",1,1,124,0)

"PKG",3,22,1,"PAH",1,1,125,0)

"PKG",3,22,1,"PAH",1,1,126,0)
      and in the manager account rename
"PKG",3,22,1,"PAH",1,1,127,0)

"PKG",3,22,1,"PAH",1,1,128,0)
      Example: ZL ZISUTL ZS %ZISUTL
"PKG",3,22,1,"PAH",1,1,129,0)
      
"PKG",3,22,1,"PAH",1,1,130,0)
      ZIS5       to %ZIS5
"PKG",3,22,1,"PAH",1,1,131,0)
      ZIS6       to %ZIS6
"PKG",3,22,1,"PAH",1,1,132,0)
      ZISC       to %ZISC
"PKG",3,22,1,"PAH",1,1,133,0)
      ZISHMSM    to %ZISH   (MSM only)
"PKG",3,22,1,"PAH",1,1,134,0)
      ZISHVXD    to %ZISH   (VAX DSM only) 
"PKG",3,22,1,"PAH",1,1,135,0)
      ZISUTL     to %ZISUTL
"PKG",3,22,1,"PAH",1,1,136,0)
      ZOSV1VXD   to %ZOSV1  (VAX DSM only)
"PKG",3,22,1,"PAH",1,1,137,0)
      ZTER       to %ZTER
"PKG",3,22,1,"PAH",1,1,138,0)
      ZTER1      to %ZTER1
"PKG",3,22,1,"PAH",1,1,139,0)
      ZTM        to %ZTM
"PKG",3,22,1,"PAH",1,1,140,0)
      ZTM5       to %ZTM5
"PKG",3,22,1,"PAH",1,1,141,0)
      ZTMDCL     to %ZTMDCL
"PKG",3,22,1,"PAH",1,1,142,0)
      ZTMS       to %ZTMS
"PKG",3,22,1,"PAH",1,1,143,0)
      ZTMS0      to %ZTMS0
"PKG",3,22,1,"PAH",1,1,144,0)
     
"PKG",3,22,1,"PAH",1,1,145,0)

"PKG",3,22,1,"PAH",1,1,146,0)
  9.  MSM sites now move both the % and non-% new routines to the MGR
"PKG",3,22,1,"PAH",1,1,147,0)
      uci of the other CPU's.       
"PKG",3,22,1,"PAH",1,1,148,0)
  9.  AXP Sites, after patch has installed, rebuild your map set.
"PKG",3,22,1,"PAH",1,1,149,0)
 10.  Restart Taskman and enable user's login.
"PKG",3,22,1,"PAH",1,1,150,0)
     
"PKG",3,22,1,"PAH",1,1,151,0)

"PKG",3,22,1,"PAH",1,1,152,0)
=========================================================================
"PKG",3,22,1,"PAH",1,1,153,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
16
"RTN","XQALDEL")
0^8^B25043478
"RTN","XQALDEL",1,0)
XQALDEL ;ISC-SF.SEA/JLI - DELETE ALERTS ;06/03/96  09:15
"RTN","XQALDEL",2,0)
 ;;8.0;KERNEL;**6,24**;Jul 10, 1995
"RTN","XQALDEL",3,0)
 ;;
"RTN","XQALDEL",4,0)
 Q
"RTN","XQALDEL",5,0)
 ;
"RTN","XQALDEL",6,0)
DELETE ;
"RTN","XQALDEL",7,0)
 Q:'$D(XQAID)  Q:XQAID=""  S:'$D(XQAKILL) XQAKILL=0 S:$P(XQAID,";")="NO-ID" XQAKILL=1
"RTN","XQALDEL",8,0)
 S XQADAT=$$NOW^XLFDT()
"RTN","XQALDEL",9,0)
 I '$D(XQAUSER) N XQAUSER S XQAUSER=DUZ
"RTN","XQALDEL",10,0)
 I $D(XQAKILL) S XQXX=$O(^XTV(8992.1,"B",XQAID,0)) I XQXX>0 S XQXY=$O(^XTV(8992.1,XQXX,20,"B",XQAUSER,0)) I XQXY>0 S $P(^XTV(8992.1,XQXX,20,XQXY,0),U,4)=XQADAT
"RTN","XQALDEL",11,0)
 K XQXX,XQXY
"RTN","XQALDEL",12,0)
 I '$D(^XTV(8992,"AXQA",XQAID,XQAUSER)) D KILLOC
"RTN","XQALDEL",13,0)
 F XQX=$S('XQAKILL:0,1:XQAUSER-.01):0 S XQX=$O(^XTV(8992,"AXQA",XQAID,XQX)) Q:XQX'>0  D  Q:XQAKILL
"RTN","XQALDEL",14,0)
 . F XQK=0:0 S XQK=$O(^XTV(8992,"AXQA",XQAID,XQX,XQK)) Q:XQK'>0  K ^(XQK),^XTV(8992,"AXQAN",$P(XQAID,";"),XQX,XQK) S XQAID1=XQAID D:$D(^XTV(8992,XQX,"XQA",XQK,0)) DELA S XQAID=XQAID1
"RTN","XQALDEL",15,0)
 K XQAID,XQX,XQJ,XQK,XQAID1,XQAKILL
"RTN","XQALDEL",16,0)
 Q
"RTN","XQALDEL",17,0)
 ;
"RTN","XQALDEL",18,0)
DELETEA ;
"RTN","XQALDEL",19,0)
 Q:'$D(XQAID)  Q:XQAID=""  S XQA1=$P(XQAID,";")
"RTN","XQALDEL",20,0)
 S XQADAT=$$NOW^XLFDT()
"RTN","XQALDEL",21,0)
 I '$D(XQAUSER) N XQAUSER S XQAUSER=DUZ
"RTN","XQALDEL",22,0)
 I '$D(^XTV(8992,"AXQAN",XQA1,XQAUSER)) D KILLOC
"RTN","XQALDEL",23,0)
 I $D(XQAKILL) S XQXX=$O(^XTV(8992.1,"B",XQAID,0)) I XQXX>0 S XQXY=$O(^XTV(8992.1,XQXX,20,"B",XQAUSER,0)) I XQXY>0 S $P(^XTV(8992.1,XQXX,20,XQXY,0),U,4)=XQADAT
"RTN","XQALDEL",24,0)
 S:'$D(XQAKILL) XQAKILL=0 G:$P(XQAID,";")="NO-ID" DELETE S XQX=$S('XQAKILL:0,1:XQAUSER-.01)
"RTN","XQALDEL",25,0)
 I $P(XQAID,",",2)'=""!($P(XQAID,";",2)="") F XQX=XQX:0 S XQX=$O(^XTV(8992,"AXQAN",XQA1,XQX)) Q:XQX'>0  D  Q:XQAKILL
"RTN","XQALDEL",26,0)
 . F XQK=0:0 S XQK=$O(^XTV(8992,"AXQAN",XQA1,XQX,XQK)) Q:XQK'>0  K ^(XQK) I $D(^XTV(8992,XQX,"XQA",XQK,0)) D DELA
"RTN","XQALDEL",27,0)
 I $P(XQAID,",",2)=""&($P(XQAID,";",2)'="") F XQX=XQX:0 S XQX=$O(^XTV(8992,"AXQA",XQAID,XQX)) Q:XQX'>0  D  Q:XQAKILL
"RTN","XQALDEL",28,0)
 . S XQK=$O(^XTV(8992,"AXQA",XQAID,XQX,0)) Q:XQK'>0  K ^(XQK),^XTV(8992,"AXQAN",XQA1,XQX,XQK) I $D(^XTV(8992,XQX,"XQA",XQK,0)) D DELA
"RTN","XQALDEL",29,0)
 K XQAID,XQA1,XQX,XQK,XQAKILL
"RTN","XQALDEL",30,0)
 Q
"RTN","XQALDEL",31,0)
DELA ;
"RTN","XQALDEL",32,0)
 N XQ11,XQK1 S XQAID=$P(^XTV(8992,XQX,"XQA",XQK,0),U,2),XQ11=$P(^(0),U) K ^XTV(8992,XQX,"XQA",XQK),^XTV(8992,"AXQA",XQAID,XQX,XQK) S XQK1=$P(^XTV(8992,XQX,"XQA",0),U,4)-1 K:XQK1'>0 ^(0) S:XQK1>0 $P(^(0),U,4)=XQK1
"RTN","XQALDEL",33,0)
 K ^XTV(8992,"AXQAN",$P(XQAID,";"),XQX,XQK),^XTV(8992,XQX,"XQA","B",XQ11,XQK)
"RTN","XQALDEL",34,0)
 S XQXX=$O(^XTV(8992.1,"B",XQAID,0)) I XQXX>0 S XQXY=$O(^XTV(8992.1,XQXX,20,"B",XQX,0)) I XQXY>0 S $P(^XTV(8992.1,XQXX,20,XQXY,0),U,5)=XQADAT
"RTN","XQALDEL",35,0)
 K XQXX,XQXY
"RTN","XQALDEL",36,0)
 Q
"RTN","XQALDEL",37,0)
 ;
"RTN","XQALDEL",38,0)
KILLOC ;
"RTN","XQALDEL",39,0)
 S XQX=XQAUSER F XQK=0:0 S XQK=$O(^XTV(8992,XQAUSER,"XQA",XQK)) Q:XQK'>0  I $P(^(XQK,0),U,2)=XQAID D
"RTN","XQALDEL",40,0)
 . N XQAID D DELA
"RTN","XQALDEL",41,0)
 Q
"RTN","XQALDEL",42,0)
 ;
"RTN","XQALDEL",43,0)
OLDDEL ;
"RTN","XQALDEL",44,0)
 ;
"RTN","XQALDEL",45,0)
 S XQADAT=$$NOW^XLFDT()
"RTN","XQALDEL",46,0)
 S X2=-15 I $D(ZTQPARAM),ZTQPARAM>0 S X2=-ZTQPARAM
"RTN","XQALDEL",47,0)
 S XQDAT=$$FMADD^XLFDT(DT,X2)
"RTN","XQALDEL",48,0)
 F XQ1=0:0 S XQ1=$O(^XTV(8992,XQ1)) Q:XQ1'>0  F XQ2=0:0 S XQ2=$O(^XTV(8992,XQ1,"XQA",XQ2)) Q:XQ2'>0  S X=^(XQ2,0) D
"RTN","XQALDEL",49,0)
 . I $P(X,U,13)>0 I $$FMADD^XLFDT($P($P(X,U,2),";",3),+$P(X,U,13))\1=DT D
"RTN","XQALDEL",50,0)
 . . N XQA,I,XQAUSER S XQAUSER=XQ1 F I=0:0 S I=$O(^XMB(3.7,XQAUSER,9,I)) Q:I'>0  S XQA(I)=+^(I,0)
"RTN","XQALDEL",51,0)
 . . Q:'$D(XQA)  D FORWARD^XQALFWD($P(X,U,2),.XQA,"A","ALERT NOT PROCESSED BY "_$P(^VA(200,XQAUSER,0),U))
"RTN","XQALDEL",52,0)
 . I $P(X,U,14)>0 I $$FMADD^XLFDT($P($P(X,U,2),";",3),+$P(X,U,14))\1=DT D
"RTN","XQALDEL",53,0)
 . . N XQA,I,XQAUSER S XQAUSER=XQ1 S I=$P($G(^VA(200,XQAUSER,5)),U) I I>0 S I=$P($G(^DIC(49,+I,0)),U,3) I I>0,$D(^VA(200,+I,0)) S XQA=+I
"RTN","XQALDEL",54,0)
 . . I $D(XQA) D FORWARD^XQALFWD($P(X,U,2),XQA,"A","ALERT NOT PROCESSED BY "_$P(^VA(200,XQAUSER,0),U))
"RTN","XQALDEL",55,0)
 . I XQ2'>XQDAT  D OLDDEL1
"RTN","XQALDEL",56,0)
 D KILLARCH
"RTN","XQALDEL",57,0)
 K X1,X2,X,XQ1,XQ2,XQDAT,XQA,XQADAT
"RTN","XQALDEL",58,0)
 Q
"RTN","XQALDEL",59,0)
OLDDEL1 ;
"RTN","XQALDEL",60,0)
 S XQA=$P(^XTV(8992,XQ1,"XQA",XQ2,0),U,2) K ^(0),^(1),^(2) K:XQA'="" ^XTV(8992,"AXQA",XQA,XQ1),^XTV(8992,"AXQAN",$P(XQA,";"),XQ1) S $P(^(0),U,4)=$P(^XTV(8992,XQ1,"XQA",0),U,4)-1 I $O(^(0))'>0 K ^(0)
"RTN","XQALDEL",61,0)
 I XQA'="" S XQXX=$O(^XTV(8992.1,"B",XQA,0)) I XQXX>0 S XQXY=$O(^XTV(8992.1,XQXX,20,"B",XQ1,0)) I XQXY>0 S $P(^XTV(8992.1,XQXX,20,XQXY,0),U,6)=XQADAT
"RTN","XQALDEL",62,0)
 Q
"RTN","XQALDEL",63,0)
 ;
"RTN","XQALDEL",64,0)
KILLARCH ;
"RTN","XQALDEL",65,0)
 N DA,DIK
"RTN","XQALDEL",66,0)
 S XQDAT=$$FMADD^XLFDT(DT,-30)
"RTN","XQALDEL",67,0)
 F XQ1=0:0 S XQ1=$O(^XTV(8992.1,XQ1)) Q:XQ1'>0  D
"RTN","XQALDEL",68,0)
 . S X1=$P(^XTV(8992.1,XQ1,0),U,2),X2=$P(^(0),U,8)
"RTN","XQALDEL",69,0)
 . S DA=XQ1 I X2="",X1>XQDAT Q
"RTN","XQALDEL",70,0)
 . I X2>0,DT<X2 Q
"RTN","XQALDEL",71,0)
 . S DIK="^XTV(8992.1," D ^DIK
"RTN","XQALDEL",72,0)
 Q
"RTN","XQALDEL",73,0)
 ;
"RTN","XQALDEL",74,0)
USERDEL ; Delete undesired alerts for a user
"RTN","XQALDEL",75,0)
 N DA,DIC
"RTN","XQALDEL",76,0)
 S DIC("A")="Select NEW PERSON entry for deletion of alerts: "
"RTN","XQALDEL",77,0)
 S DIC(0)="AEQM",DIC=200
"RTN","XQALDEL",78,0)
 D ^DIC K DIC Q:Y'>0  S XQAUSER=+Y
"RTN","XQALDEL",79,0)
 S XQALDELE=1
"RTN","XQALDEL",80,0)
 K XQX1
"RTN","XQALDEL",81,0)
 D DOIT^XQALERT1
"RTN","XQALDEL",82,0)
 K XQALDELE
"RTN","XQALDEL",83,0)
 I $D(XQX1),XQX1>0 D
"RTN","XQALDEL",84,0)
 . F  Q:XQX1=""  S DA=+XQX1,XQX1=$P(XQX1,",",2,99) D  I XQX1="" S Y=$O(XQX1(0)) I Y>0 S XQX1=XQX1(Y) K XQX1(Y)
"RTN","XQALDEL",85,0)
 . . S XQAID=$P(^XUTL("XQ",$J,"XQA1",DA),U,2),XQAKILL=1
"RTN","XQALDEL",86,0)
 . . I XQAID="" K ^XTV(8992,XQAUSER,"XQA",+^XUTL("XQ",$J,"XQA1",DA,1))
"RTN","XQALDEL",87,0)
 . . I XQAID'="" D DELETE
"RTN","XQALDEL",88,0)
 . . K ^XUTL("XQ",$J,"XQA1",DA),^XUTL("XQ",$J,"XQA",(999999-DA))
"RTN","XQALDEL",89,0)
 . I $O(^XTV(8992,XQAUSER,"XQA",0))'>0 K ^XTV(8992,XQAUSER,"XQA")
"RTN","XQALDEL",90,0)
 K XQAUSER,XQX1
"RTN","XQALDEL",91,0)
 Q
"RTN","ZIS5")
0^14^B12909289
"RTN","ZIS5",1,0)
%ZIS5 ;SFISC/STAFF --DEVICE LOOK-UP ;07/05/96  11:56
"RTN","ZIS5",2,0)
 ;;8.0;KERNEL;**18,24**;JUL 10, 1995
"RTN","ZIS5",3,0)
 S U="^",%DO="" K DUOUT
"RTN","ZIS5",4,0)
 I $D(^%ZIS(%ZISDFN,0)) S %DO=^(0)
"RTN","ZIS5",5,0)
A G:%ZIS(0)'["A" X I $D(%ZIS("A")) S %DD=%ZIS("A") G B
"RTN","ZIS5",6,0)
 S %DD="Select "_$P(%DO,U,1)_": "
"RTN","ZIS5",7,0)
B I $D(%ZIS("B")),%ZIS("B")]"" S %YY=%ZIS("B"),%XX=$O(^%ZIS(%ZISDFN,%D,%YY)),%DIY=$S($F(%XX,%YY)-1=$L(%YY):%XX,$D(^%ZIS(%ZISDFN,%YY,0)):$P(^(0),U,1),1:%YY) W %DD,%DIY,"// " R %XX:$S($D(DTIME):DTIME,1:9999) G G:%XX]"" S %XX=%DIY G G
"RTN","ZIS5",8,0)
 W !,%DD R %XX:$S($D(DTIME):DTIME,1:9999)
"RTN","ZIS5",9,0)
G G NO:'$T,NO:%XX["^" G:%XX?.N&(+%XX=%XX) NUM I %XX'?.ANP!($L(%XX)>30) W:%ZIS(0)["Q" *7," ??" G A
"RTN","ZIS5",10,0)
X I %XX=" ",$D(DUZ)#2,$D(^DISV(+DUZ,"^%ZIS("_%ZISDFN_",")) S %YY=+^("^%ZIS("_%ZISDFN_",") D S G:'$T NO G GOT
"RTN","ZIS5",11,0)
F G NO:%XX="" K %DS S %DS=0,%DS(0)=1,%DIX=%XX,%DIY=0
"RTN","ZIS5",12,0)
 I $D(^%ZIS(%ZISDFN,%D,%XX)) G T1
"RTN","ZIS5",13,0)
TRY S %DIX=$O(^%ZIS(%ZISDFN,%D,%DIX)) G:$P(%DIX,%XX,1)'=""!(%DIX="") T2 S %DIY=0
"RTN","ZIS5",14,0)
T1 S %DIY=$O(^%ZIS(%ZISDFN,%D,%DIX,+%DIY)) G:%DIY'>0 TRY S %YY=+%DIY D S G:'$T T1
"RTN","ZIS5",15,0)
 I %DS,'(%DS#10) D LST G NO:%XX=U,ADD:%YY<0,GOT:%YY>0
"RTN","ZIS5",16,0)
 S %DS=%DS+1,%DS(%DS)=%DIY G T1
"RTN","ZIS5",17,0)
LSYN ;
"RTN","ZIS5",18,0)
S I $D(^%ZIS(%ZISDFN,%YY,0)) G S1
"RTN","ZIS5",19,0)
 Q
"RTN","ZIS5",20,0)
S1 G S2:%ZISDFN'=1!(%D'="LSYN") I $P(^%ZIS(1,%YY,0),U,9)=%ZISV!($P(^(0),U,9)="") G S2
"RTN","ZIS5",21,0)
 Q
"RTN","ZIS5",22,0)
S2 N Y S Y=%YY D:$D(%ZIS("S")) XS^ZISX Q
"RTN","ZIS5",23,0)
T2 G:'%DS NO S %DIY="" D LST G NO:%XX=U,ADD:%YY<1,GOT
"RTN","ZIS5",24,0)
LST I %DS=1,'$D(%ZISLST) S %YY=%DS(1) Q
"RTN","ZIS5",25,0)
 S %YY=-1 Q:%ZIS(0)'["E"  W !
"RTN","ZIS5",26,0)
 F %DZ=%DS(0):1:%DS W !,$J(%DZ,2)," ",$P(^%ZIS(%ZISDFN,%DS(%DZ),0),U,1) D:%ZISDFN=1  I $D(%ZIS("W")),$D(^(0)) W "  " D XW^ZISX
"RTN","ZIS5",27,0)
 . ;Show Location
"RTN","ZIS5",28,0)
 . S %=$G(^(1)) W:$X+$L($P(%,U))>74 !?75-$L(X) W "   "_$P(%,U)
"RTN","ZIS5",29,0)
L1 W:%DIY !,"Type '^' to Stop, or" W !,"Choose 1" W:%DS>1 "-",%DS
"RTN","ZIS5",30,0)
 R "> ",%YY:$S($D(DTIME):DTIME,1:9999) S %ZISLST=1 I %YY="",%DIY S %DS(0)=%DS+1,%YY=0 W ! Q
"RTN","ZIS5",31,0)
 I %YY=U!(%YY="") S %YY=-1,DUOUT=1 S:%YY=U %XX=U Q
"RTN","ZIS5",32,0)
 I +%YY'=%YY!(%YY<1)!(%YY>%DS) W:%ZIS(0)["Q" *7," ??" G L1
"RTN","ZIS5",33,0)
 S %YY=%DS(%YY) Q
"RTN","ZIS5",34,0)
GOT S %DZ=^%ZIS(%ZISDFN,+%YY,0)
"RTN","ZIS5",35,0)
 W:%ZIS(0)["E" "  ",$P(%DZ,U,1)
"RTN","ZIS5",36,0)
R I %ZIS(0)'["F" S:$S($D(DUZ)#2:$S(DUZ:1,1:0),1:0) ^DISV(DUZ,"^%ZIS("_%ZISDFN_",")=+%YY
"RTN","ZIS5",37,0)
 I %ZIS(0)["Z" S %YY(0)=^%ZIS(%ZISDFN,+%YY,0)
"RTN","ZIS5",38,0)
Q K %ZISDFN,%DO,%DD,%DIX,%DIY,%DZ Q
"RTN","ZIS5",39,0)
K K %D,%DS,%ZISLST Q
"RTN","ZIS5",40,0)
ADD ;can't add to files
"RTN","ZIS5",41,0)
NO S %YY=-1 G Q
"RTN","ZIS5",42,0)
NUM I $D(^%ZIS(%ZISDFN,%XX)) S %YY=%XX D S I $T G GOT
"RTN","ZIS5",43,0)
 G F
"RTN","ZIS5",44,0)
1 F %D="B","LSYN" S %ZISDFN=1,%ZIS(0)=$S($D(IOP):"M",1:"EMQ") D %ZIS5 Q:%YY>0
"RTN","ZIS5",45,0)
 D K Q
"RTN","ZIS5",46,0)
2 S %D="B",%ZISDFN=2,%ZIS(0)=$S($D(IOP):"M",1:"EMQ") D %ZIS5 D K Q
"RTN","ZIS5",47,0)
 ;
"RTN","ZIS5",48,0)
LD1 S %E=0,%Y=0 D LCPU:"PD"[$E(%X) S %E=0 W !
"RTN","ZIS5",49,0)
L S %E=$S("PD"[$E(%X):$O(^UTILITY("ZIS",$J,"DEVLST","B",%E)),1:$O(^%ZIS(1,"B",%E))) G:%E="" RESTART S %A=+$O(^(%E,0))
"RTN","ZIS5",50,0)
 G L:'$D(^%ZIS(1,%A,0)),L:$P(^(0),"^",2)=46,L:$P(^(0),"^",2)=63 I $D(%ZIS("S")) N Y S Y=%A D XS^ZISX G L:'$T
"RTN","ZIS5",51,0)
 I "AP"[$E(%X) G L:$P($G(^%ZIS(2,+$G(^%ZIS(1,%A,"SUBTYPE")),0)),U)'?1"P".E
"RTN","ZIS5",52,0)
 W $J($P(^%ZIS(1,%A,0),"^",1),9) W:$D(^(1)) " ",$P(^(1),"^",1) I $D(^(90)),^(90) W " ** OUT OF SERVICE"
"RTN","ZIS5",53,0)
 W ?39 I $X>40 W ! S %Y=%Y+1 I %Y>20 R "'^' TO STOP: ",%Y:$S($D(DTIME):DTIME,1:60),! G RESTART:%Y?1P S %Y=0
"RTN","ZIS5",54,0)
 G L
"RTN","ZIS5",55,0)
 ;
"RTN","ZIS5",56,0)
LCPU S %A=%ZISV
"RTN","ZIS5",57,0)
LC1 S %A=$O(^%ZIS(1,"CPU",%A)) Q:$P(%A,".")'=%ZISV  S %E=0
"RTN","ZIS5",58,0)
LC2 S %E=+$O(^%ZIS(1,"CPU",%A,%E)) G LC1:%E'>0,LC1:'$D(^%ZIS(1,%E,0)) S ^UTILITY("ZIS",$J,"DEVLST","B",$P(^(0),"^",1),%E)="" G LC2
"RTN","ZIS5",59,0)
RESTART S:$D(%H) %E=+%H K %X,^UTILITY("ZIS",$J,"DEVLST") Q
"RTN","ZIS6")
0^6^B16985110
"RTN","ZIS6",1,0)
%ZIS6 ;SFISC/AC - DEVICE HANDLER -- RESOURCES ;05/21/96  16:32
"RTN","ZIS6",2,0)
 ;;8.0;KERNEL;**24**;JUL 10, 1995
"RTN","ZIS6",3,0)
 ;
"RTN","ZIS6",4,0)
OXECUTE I $D(^%ZIS(2,%ZISIOST(0),2))=1 S %Y=^(2) D 2
"RTN","ZIS6",5,0)
ANSBAK I $D(^%ZIS(2,%ZISIOST(0),102)) S %Y=^(102) D 2 E  S POP=1 W:'$D(IOP) *7,"[NOT ON LINE]" C:%ZISB IO K IO(1,IO) Q
"RTN","ZIS6",6,0)
 I $D(%ZISMTR) X ^%ZOSF("MAGTAPE") U IO W:$D(%MT("REW")) @%MT("REW") U IO(0) K %MT
"RTN","ZIS6",7,0)
 Q:'$D(IO("P"))  I $F(IO("P"),"B"),$D(^%ZIS(2,%ZISIOST(0),7)) S %Y=$P(^(7),"^",1) I %Y]"" U IO W @%Y U:%IS'[0 IO(0)
"RTN","ZIS6",8,0)
 S %Y=$F(IO("P"),"P") G QLTY:'%Y S %Y=+$E(IO("P"),%Y,99),%X=$S(%Y=16:12.1,%Y=10!(%Y=12):5,1:"") G QLTY:'%X
"RTN","ZIS6",9,0)
 S %Y=$S($D(^%ZIS(2,%ZISIOST(0),%X)):$P(^(%X),"^",$S(%Y=12:2,1:1)),1:"")
"RTN","ZIS6",10,0)
 I %Y]"" U IO W @%Y U:%IS'[0 IO(0)
"RTN","ZIS6",11,0)
QLTY S %Y=$F(IO("P"),"Q") Q:'%Y  S %Y=+$E(IO("P"),%Y,99),%X=$S(%Y<0!(%Y>2):0,1:%Y+1)
"RTN","ZIS6",12,0)
 I %X S %Y=$S($D(^%ZIS(2,%ZISIOST(0),12.2)):$P(^(12.2),"^",%X),1:"") I %Y]"" U IO W @%Y U:%IS'[0 IO(0)
"RTN","ZIS6",13,0)
 Q
"RTN","ZIS6",14,0)
2 Q:%Y=""  I %IS'[0,$D(^%ZIS(1,+%H,"TYPE")),^("TYPE")["TRM" D OH Q:POP  S IO(1,IO(0))=""
"RTN","ZIS6",15,0)
 S %X=$T U IO D %Y^ZISX Q:'%X  U IO(0) Q
"RTN","ZIS6",16,0)
OH N X S X="OPNERR^%ZIS4",@^%ZOSF("TRAP") O:$S($G(IO(0))]"":$D(IO(1,IO(0))),1:0) IO(0)::0 Q  ;ADD POP VALUE HERE.
"RTN","ZIS6",17,0)
 ;
"RTN","ZIS6",18,0)
RES1 ;Allocate a resource slot
"RTN","ZIS6",19,0)
 N A,L,X L +^%ZISL(3.54):2
"RTN","ZIS6",20,0)
 I '$T S POP=1 W:'$D(IOP) *7,"  [NOT AVAILABLE]" G RESX
"RTN","ZIS6",21,0)
 S %ZISD0=$O(^%ZISL(3.54,"B",IO,0))
"RTN","ZIS6",22,0)
 I '%ZISD0 S %ZISD0=$$RADD(IO),IO(1,IO)="RES" G R1 ;New one
"RTN","ZIS6",23,0)
RES2 S X=$P(^%ZISL(3.54,%ZISD0,0),"^",2)
"RTN","ZIS6",24,0)
 I 'X S POP=1 W:'$D(IOP) *7,"  [NOT AVAILABLE]" G RESX
"RTN","ZIS6",25,0)
 S X=X-1,$P(^%ZISL(3.54,%ZISD0,0),"^",2)=X,IO(1,IO)="RES"
"RTN","ZIS6",26,0)
 ;
"RTN","ZIS6",27,0)
R1 ;Grab a slot
"RTN","ZIS6",28,0)
 S A=$G(^%ZISL(3.54,%ZISD0,1,0),"^3.542^^")
"RTN","ZIS6",29,0)
 F L=1:1:%ZISRL I '$D(^%ZISL(3.54,%ZISD0,1,L,0)) Q
"RTN","ZIS6",30,0)
 I '$T K IO(1,IO) G RES2 ;No free slots
"RTN","ZIS6",31,0)
 S ^%ZISL(3.54,%ZISD0,1,L,0)=L_"^"_%ZISV_"^"_$J,^%ZISL(3.54,"AJ",$J,%ZISD0,L)="",^%ZISL(3.54,%ZISD0,1,"B",L,L)="",$P(A,"^",3,4)=L_U_($P(A,U,4)+1),^%ZIS(3.54,%ZISD0,1,0)=A
"RTN","ZIS6",32,0)
RESX L -^%ZISL(3.54) Q
"RTN","ZIS6",33,0)
 ;
"RTN","ZIS6",34,0)
RADD(X) ;Add Resource
"RTN","ZIS6",35,0)
 N %1,%2
"RTN","ZIS6",36,0)
 S %1=$G(^%ZISL(3.54,0),"RESOURCE^3.54^^"),%2=$P(%1,U,3) ; S %1=$P(^(0),"^",3),A=X
"RTN","ZIS6",37,0)
 F %2=%2:1 Q:'$D(^%ZISL(3.54,I,0))
"RTN","ZIS6",38,0)
 S $P(^%ZISL(3.54,0),U,3,4)=%2_U_($P(%1,U,4)+1),^%ZISL(3.54,%2,0)=X_"^"_$G(%ZISRL,1),^%ZISL(3.54,"B",X,%2)=""
"RTN","ZIS6",39,0)
 Q %2
"RTN","ZIS6",40,0)
 ;
"RTN","ZIS6",41,0)
Q G Q^%ZIS3
"RTN","ZIS6",42,0)
HG ;
"RTN","ZIS6",43,0)
 Q
"RTN","ZIS6",44,0)
SPL N %E,%Z D MARGN^%ZIS3 W:'$D(IOP) ! D SPOOL^%ZIS4:%IS'["T" G Q ;Spool type
"RTN","ZIS6",45,0)
MT D MARGN^%ZIS3,ASKPAR,AMTREW:'POP&'$D(IOP)&%ZISB W:'$D(IOP) ! D O^%ZIS4:'POP&(%ZISB&(%IS'["T")) G Q ;Magtape type
"RTN","ZIS6",46,0)
SDP D MARGN^%ZIS3,ASKPAR W:'$D(IOP) ! D O^%ZIS4:'POP&(%ZISB&(%IS'["T")) G Q ;Sequential disk processor type
"RTN","ZIS6",47,0)
HFS D MARGN^%ZIS3,HFS^%ZIS4 W:'$D(IOP) ! D O^%ZIS4:'POP&(%ZISB&(%IS'["T")) G Q ;Host File Server type
"RTN","ZIS6",48,0)
RES G Q:%IS["T" N X,X1 I %IS'["R"!'$D(IOP) S POP=1 W:'$D(IOP) *7,"  [NOT AVAILABLE]" Q  ;Resources
"RTN","ZIS6",49,0)
 G Q:$D(IO(1,IO)) I %IS["T" S X=IO,X1="RES" D DEVOK^%ZIS3 S:Y POP=1 G Q:POP
"RTN","ZIS6",50,0)
 D:%ZISB RES1 G Q
"RTN","ZIS6",51,0)
CHAN ;Network Channel type devices -- DecNet or TCP/IP devices.
"RTN","ZIS6",52,0)
 I IO="SYS$NET",$I="SYS$INPUT:;" S IO(0)=IO U IO ;DECNET Server Device
"RTN","ZIS6",53,0)
 D MARGN^%ZIS3:'POP,ASKPAR:'POP W:'$D(IOP) ! D O^%ZIS4:'POP&(%ZISB&(%IS'["T")) G Q ;Other Device type
"RTN","ZIS6",54,0)
IMPC ;Imaging Work Station
"RTN","ZIS6",55,0)
BAR ;Bar Code
"RTN","ZIS6",56,0)
OTH ;I IO="SYS$NET",$I="SYS$INPUT:;" S IO(0)=IO U IO ;DECNET Server Device
"RTN","ZIS6",57,0)
 D MARGN^%ZIS3:'POP,ASKPAR:'POP W:'$D(IOP) ! D O^%ZIS4:'POP&(%ZISB&(%IS'["T")) G Q ;Other Device type
"RTN","ZIS6",58,0)
 ;
"RTN","ZIS6",59,0)
ASKPAR G SETPAR^%ZIS3:$D(IOP),SETPAR^%ZIS3:'$P(^%ZIS(1,%E,0),"^",4) W "  ADDRESS/PARAMETERS: " W:%ZISOPAR]"" %ZISOPAR_"// " D SBR^%ZIS1 D MSG1:%X="?" G ASKPAR:%X="?" S:%X]"" %ZISOPAR=%X I $D(DTOUT)!$D(DUOUT) S POP=1
"RTN","ZIS6",60,0)
 I POP,%ZISB&(%ZTYPE["TRM") C IO K IO(1,IO) Q
"RTN","ZIS6",61,0)
 Q:POP  G SETPAR^%ZIS3
"RTN","ZIS6",62,0)
AMTREW I %ZISB,%ZTYPE="MT",'$D(IOP) W "  REWIND" S %=2,U="^",%ZISDTIM=60 D YN^%ZIS1 K %ZISDTIM G AMTREW:%=0 I %=-1 S POP=1 Q
"RTN","ZIS6",63,0)
 S:%=1 %ZISMTR=1 Q
"RTN","ZIS6",64,0)
MSG1 W !?5,"Enter the desired parameters needed to open the selected device.",!?25 Q
"RTN","ZIS6",65,0)
 ;
"RTN","ZISC")
0^12^B19987118
"RTN","ZISC",1,0)
%ZISC ;SF/GFT,AC,MUS - CLOSE LOGIC FOR DEVICES  ;06/18/96  08:51
"RTN","ZISC",2,0)
 ;;8.0;KERNEL;**24**;JUL 10, 1995
"RTN","ZISC",3,0)
C0 ;D:$D(ZISLP) C^%ZISLPC ;-- No longer called in kernel v8.
"RTN","ZISC",4,0)
 K %,IO("DOC"),IO("HFSIO") S:$D(IO)[0 IO=$I S:'$D(IO(0)) IO(0)=$I S:$D(ION) %=ION S:'$D(%) %=IO
"RTN","ZISC",5,0)
 S %ZISOS=$G(^%ZOSF("OS")),%ZISV=$G(^("VOL"))
"RTN","ZISC",6,0)
 I %=""!(IO="") G SETIO:IO(0)]"" G END
"RTN","ZISC",7,0)
 I $D(IOT),IOT="RES" D RES G SETIO
"RTN","ZISC",8,0)
 ;D CHKDVOPN ;Code needs to be reviewed before it is distributed.
"RTN","ZISC",9,0)
 ;
"RTN","ZISC",10,0)
 I $D(IOST)#2,IOST]"" K % ;Define subtype info if not already defined.
"RTN","ZISC",11,0)
 I $D(%) S IOST=$P(%,";",2) D:IOST'?1A.ANP C2A S:IOST IOST(0)=IOST
"RTN","ZISC",12,0)
 I '$D(%)!($D(%)&(IOST?1A.ANP!($D(IOST(0))))) D
"RTN","ZISC",13,0)
 . S:'$D(IOST(0)) IOST(0)=$O(^%ZIS(2,"B",IOST,0)) K %
"RTN","ZISC",14,0)
 . I $G(^%ZIS(2,+IOST(0),3))]"",$D(IO(1,IO)) D
"RTN","ZISC",15,0)
 . . U IO S $X=0 D X3^ZISX:'$D(IO("T")) ;perform close execute
"RTN","ZISC",16,0)
 ;
"RTN","ZISC",17,0)
 I $D(IO(1,IO)) D  ;Perform the following if the device is opended.
"RTN","ZISC",18,0)
 .I $G(IO("P"))["B" D  ;Return to normal intensity
"RTN","ZISC",19,0)
 ..S %=$P($G(^%ZIS(2,+IOST(0),7)),"^",3) I %]"" W @%
"RTN","ZISC",20,0)
 .I $G(IO("P"))["P" D  ;Return to default pitch
"RTN","ZISC",21,0)
 ..S %=$G(^%ZIS(2,+IOST(0),12.11)) I %]"" W @%
"RTN","ZISC",22,0)
 ;
"RTN","ZISC",23,0)
 W:$$FF @IOF ;form feed issued at close
"RTN","ZISC",24,0)
 I $$CLOSPP D X11^ZISX:'$D(IO("T")) K IO("S") ;Close printer port
"RTN","ZISC",25,0)
 ;
"RTN","ZISC",26,0)
 I '$D(IOCPU)&(IO'=IO(0)!$D(IO("C"))),$D(IO(1,IO)) D
"RTN","ZISC",27,0)
 .U:$S($D(ZTQUEUED):0,'$D(IO(0)):0,IO(0)']"":0,$D(IO(1,IO(0)))#2:1,1:0) IO(0)
"RTN","ZISC",28,0)
 .C IO K IO(1,IO) ;close device
"RTN","ZISC",29,0)
 ;
"RTN","ZISC",30,0)
 ;I $G(^%ZIS(2,+IOST(0),3.1))]"" D X31^ZISX:'$D(IO("T"))
"RTN","ZISC",31,0)
 ;
"RTN","ZISC",32,0)
 S IO("CLOSE")=IO D:IO'=IO(0) RESETP
"RTN","ZISC",33,0)
 I $D(IOT),IOT="CHAN",$D(IOS) D
"RTN","ZISC",34,0)
 .S %=$G(^%ZIS(1,+IOS,"GBL"))
"RTN","ZISC",35,0)
 .I %]"" L @("-^"_%) ;unlock global used to control access to network channels.
"RTN","ZISC",36,0)
 D CLOSE^%ZIS4:$D(IO("SPOOL"))
"RTN","ZISC",37,0)
SETIO I $G(IOS),$G(^%ZIS(1,+IOS,"PCX"))]"" S %ZISPCX=^("PCX")
"RTN","ZISC",38,0)
 S (IO,IOS)=IO(0) K IO("T") D CIOS
"RTN","ZISC",39,0)
 G END:'IOS S ION=$P(^%ZIS(1,IOS,0),"^",1),IOT=$G(^("TYPE")),IOST(0)=$S(IOT["TRM"&($D(^XUTL("XQ",$J,"IOST(0)"))):^("IOST(0)"),1:$G(^%ZIS(1,IOS,"SUBTYPE")))
"RTN","ZISC",40,0)
 I IOT["TRM",$D(^XUTL("XQ",$J,"IOST(0)")) D HOME^%ZIS G END
"RTN","ZISC",41,0)
 I $D(^%ZIS(1,IOS,91)) S %=^%ZIS(1,IOS,91),IOM=+%,IOF=$P(%,"^",2),IOSL=$P(%,"^",3),IOBS=$P(%,"^",4) G S1
"RTN","ZISC",42,0)
 I IOST(0),$D(^%ZIS(2,IOST(0),1)) S %=^(1),IOM=+%,IOF=$P(%,"^",2),IOSL=$P(%,"^",3),IOBS=$P(%,"^",4) G S1
"RTN","ZISC",43,0)
 S (IOM,IOF,IOSL)=""
"RTN","ZISC",44,0)
S1 S:IOST(0) IOST=$P($G(^%ZIS(2,+IOST(0),0)),"^"),IOXY=$G(^("XY"))
"RTN","ZISC",45,0)
 I '$D(ZTQUEUED),'$D(IO("C")),IOT["TRM" D RM:$D(IO(1,IO))
"RTN","ZISC",46,0)
 ;I $G(^%ZIS(1,+IOS,"PCX"))]"" D XPCX^ZISX:'$D(IO("T")) ;Post-close execute code of Device file.
"RTN","ZISC",47,0)
END I '$D(IO("T")),$G(%ZISPCX)]"" S %Y=%ZISPCX D %Y^ZISX
"RTN","ZISC",48,0)
 K %,%E,%H,%ZISI,%ZISOS,%ZISPCX,%ZISV,%ZISVT,%ZISX,IO("P"),IOC,IOCPU,IONOFF Q
"RTN","ZISC",49,0)
 ;
"RTN","ZISC",50,0)
C2A S IOS=$P(%,";") D CIOS S IOST=IOS
"RTN","ZISC",51,0)
 S IOST=$S($D(^%ZIS(1,+IOST,"SUBTYPE")):^("SUBTYPE"),1:0)
"RTN","ZISC",52,0)
 Q
"RTN","ZISC",53,0)
 ;
"RTN","ZISC",54,0)
CIOS I $D(^XUTL("XQ",$J,"IOS")) S IOS=+^("IOS") Q
"RTN","ZISC",55,0)
 I $D(^%ZOSF("VOL")) S %ZISVT=IOS D VTLKUP^%ZIS S IOS=+%E
"RTN","ZISC",56,0)
 E  S IOS=+$O(^%ZIS(1,"C",IOS,0))
"RTN","ZISC",57,0)
 Q:IOS>0!(IO(0)']"")
"RTN","ZISC",58,0)
 S %ZISVT=IO(0) D VIRTUAL^%ZIS
"RTN","ZISC",59,0)
 I $D(%ZISVT) S %H=%E I %ZISVT]"",%H>0,$D(^%ZIS(1,%H,0)),$D(^("TYPE")),^("TYPE")="VTRM" K %ZISVT S IOS=%H
"RTN","ZISC",60,0)
 Q
"RTN","ZISC",61,0)
 ;
"RTN","ZISC",62,0)
RESETP I IO]"" K ^XUTL("ZISPARAM",IO) Q
"RTN","ZISC",63,0)
 Q
"RTN","ZISC",64,0)
RM N X S X=+IOM X ^%ZOSF("RM") Q
"RTN","ZISC",65,0)
RES ;Close resource device.
"RTN","ZISC",66,0)
 Q:'$D(IO(1,IO))&'$D(^%ZISL(3.54,"AJ",$J))
"RTN","ZISC",67,0)
 S %ZISJOB=$J L +^%ZISL(3.54):1000
"RTN","ZISC",68,0)
 I '$T S X=1/0 ; forces error if Lock fails
"RTN","ZISC",69,0)
 ;
"RTN","ZISC",70,0)
RES1 G RQ:'$D(IOS),RQ:'$D(^%ZIS(1,+IOS,1)) S %ZISRL=+$P(^(1),"^",10),%ZISRL=$S(%ZISRL:%ZISRL,1:1)
"RTN","ZISC",71,0)
 S %X=$O(^%ZISL(3.54,"B",IO,0)) G RQ:'%X
"RTN","ZISC",72,0)
 G RQ:'$D(^%ZISL(3.54,+%X,0)) S %ZISD0=+%X,%ZISY0=^(0)
"RTN","ZISC",73,0)
 S %X=$O(^%ZISL(3.54,"AJ",%ZISJOB,%ZISD0,0)) S %ZISD1=%X G RQ:'%X K ^(%X)
"RTN","ZISC",74,0)
 S %Y=$S($D(^%ZISL(3.54,%ZISD0,1,+%ZISD1,0)):^(0),1:"") G RQ:$P(%Y,"^",3)'=$J K ^(0),^%ZISL(3.54,%ZISD0,1,"B",+%ZISD1,+%ZISD1)
"RTN","ZISC",75,0)
 S %X=$P(%ZISY0,"^",2),%X=$S((%X+1)'>(%ZISRL):%X+1,1:%ZISRL),$P(%ZISY0,"^",2)=%X,^%ZISL(3.54,%ZISD0,0)=%ZISY0
"RTN","ZISC",76,0)
 I '$D(^%ZISL(3.54,%ZISD0,1,0)) S ^(0)="^3.542A^^" G RQ
"RTN","ZISC",77,0)
 S %Y=^%ZISL(3.54,%ZISD0,1,0),%X=$P(%Y,"^",4),$P(%Y,"^",3,4)="^"_$S(%X>2:(%X-1),1:1),^(0)=%Y
"RTN","ZISC",78,0)
RQ K IO(1,IO),%X,%Y,%ZISD0,%ZISD1,%ZISJOB,%ZISRES,%ZISRL,%ZISY0,%ZTRTN,ZTSAVE,ZTIO L -^%ZISL(3.54) Q
"RTN","ZISC",79,0)
DQCRES ;Tasked entry point to close resource device.
"RTN","ZISC",80,0)
 L +^%ZISL(3.54) S IO=%ZISRES G RES1
"RTN","ZISC",81,0)
CHKDVOPN ;CHECK DEVICES THAT ARE OPENED.
"RTN","ZISC",82,0)
 ;NEEDS TO BE REVIEWED BEFORE DISTRIBUTION
"RTN","ZISC",83,0)
 ;THE CODE BELOW IS SPECIFIC TO VAX DSM.
"RTN","ZISC",84,0)
 N X,Y
"RTN","ZISC",85,0)
 S X=$J D DEVOPN
"RTN","ZISC",86,0)
 S Y=","_Y,X=","_IO_","
"RTN","ZISC",87,0)
 I Y'[X K IO(1,IO)
"RTN","ZISC",88,0)
 Q
"RTN","ZISC",89,0)
DEVOPN ;
"RTN","ZISC",90,0)
 N %FST,X1,X2,X3,X4,X5,X6,X7,X8,X9
"RTN","ZISC",91,0)
 S %FST=1,Y=""
"RTN","ZISC",92,0)
 F  D  Q:%DONE=0
"RTN","ZISC",93,0)
 .S %DONE=$ZC(%OPNLIST,%FST,.X1,.X2,.X3,.X4,.X5,.X6,.X7,.X8,.X9)
"RTN","ZISC",94,0)
 .Q:%DONE=0
"RTN","ZISC",95,0)
 .S %FST=0,Y=Y_X1_","
"RTN","ZISC",96,0)
 Q
"RTN","ZISC",97,0)
FF() ;Issue form feed
"RTN","ZISC",98,0)
 I $E(IOST,1,2)'["C-",$D(IO(1,IO)),$G(IOT)="TRM"!($G(IOT)="SPL"),'$D(IO("T"))&$Y&'$D(IONOFF)&'$D(IO(1,IO,"NOFF")) Q 1
"RTN","ZISC",99,0)
 Q 0
"RTN","ZISC",100,0)
 ;I $E(IOST,1,2)'["C-",$D(IO(1,IO)),$G(IOT)="TRM"!($G(IOT)="SPL") W:'$D(IO("T"))&$Y&'$D(IONOFF)&'$D(IO(1,IO,"NOFF")) @IOF ;form feed issued at close
"RTN","ZISC",101,0)
 ;
"RTN","ZISC",102,0)
CLOSPP() ;Close printer port
"RTN","ZISC",103,0)
 I $D(IO("S")),$D(^%ZIS(2,+IO("S"),11))&$D(IO(1,IO)) Q 1
"RTN","ZISC",104,0)
 Q 0
"RTN","ZISC",105,0)
 ;I $D(IO("S")) D:$D(^%ZIS(2,+IO("S"),11))&$D(IO(1,IO)) X11^ZISX:'$D(IO("T")) K IO("S")
"RTN","ZISHMSM")
0^15^B29326283
"RTN","ZISHMSM",1,0)
%ZISH ;IHS\PR,SFISC/AC - Host File Control for MSM ;08/09/96  16:37
"RTN","ZISHMSM",2,0)
 ;;8.0;KERNEL;**24**;JUL 10, 1995
"RTN","ZISHMSM",3,0)
 ;
"RTN","ZISHMSM",4,0)
OPEN(X1,X2,X3,X4,X5)    ;Open Host File
"RTN","ZISHMSM",5,0)
 ;X1=handle name
"RTN","ZISHMSM",6,0)
 ;X2=directory name \dir\
"RTN","ZISHMSM",7,0)
 ;X3=file name
"RTN","ZISHMSM",8,0)
 ;X4=file access mode e.g.: W for write, R for read, A for append.
"RTN","ZISHMSM",9,0)
 ;X5=Max record size for a new file
"RTN","ZISHMSM",10,0)
 N %,%1,%2,%I,%T,%ZA,%ZISHIO
"RTN","ZISHMSM",11,0)
 S %I=$I,%T=0,POP=0 M %ZISHIO=IO
"RTN","ZISHMSM",12,0)
 F %=51:1:54 O %::0 I $T S %T=% Q
"RTN","ZISHMSM",13,0)
 I '%T U:%I]"" %I S POP=1 Q
"RTN","ZISHMSM",14,0)
 S %1=$$MODE^%ZISF(X2_X3,X4)
"RTN","ZISHMSM",15,0)
 S %2=%_":"_%1
"RTN","ZISHMSM",16,0)
 U @%2 S %ZA=$ZA
"RTN","ZISHMSM",17,0)
 I %ZA=-1 U:%I]"" %I C % S POP=1 Q
"RTN","ZISHMSM",18,0)
 S IO=%,IO(1,IO)=""
"RTN","ZISHMSM",19,0)
 I $G(X1)]"" D SAVDEV^%ZISUTL(X1)
"RTN","ZISHMSM",20,0)
 Q
"RTN","ZISHMSM",21,0)
 ;
"RTN","ZISHMSM",22,0)
CLOSE(X) ;Close HFS device not opened by %ZIS.
"RTN","ZISHMSM",23,0)
 ;X=HANDLE NAME
"RTN","ZISHMSM",24,0)
 ;IO=Device
"RTN","ZISHMSM",25,0)
 N %
"RTN","ZISHMSM",26,0)
 I $G(IO)]"" C IO K IO(1,IO)
"RTN","ZISHMSM",27,0)
 I $G(X)]"" D RMDEV^%ZISUTL(X)
"RTN","ZISHMSM",28,0)
 D HOME^%ZIS
"RTN","ZISHMSM",29,0)
 Q
"RTN","ZISHMSM",30,0)
 ;
"RTN","ZISHMSM",31,0)
OPENERR ;
"RTN","ZISHMSM",32,0)
 Q 0
"RTN","ZISHMSM",33,0)
 ;
"RTN","ZISHMSM",34,0)
DEL(%ZISHX1,%ZISHX2) ;Del fl(s)
"RTN","ZISHMSM",35,0)
 ;S Y=$$DEL^ZOSHMSM("\dir\","fl")
"RTN","ZISHMSM",36,0)
 ;                         ,.array)
"RTN","ZISHMSM",37,0)
 ;Changed X2 to a $NAME string
"RTN","ZISHMSM",38,0)
 N %,%ZISH
"RTN","ZISHMSM",39,0)
 N ZOSHDA,ZOSHF,ZOSHX,ZOSHQ,ZOSHDF,ZOSHC
"RTN","ZISHMSM",40,0)
 S %ZISHX1=$TR(%ZISHX1,"/","\")
"RTN","ZISHMSM",41,0)
 ;Get fls to act on
"RTN","ZISHMSM",42,0)
 ;No '*' allowed
"RTN","ZISHMSM",43,0)
 S %ZISH="" F  S %ZISH=$O(@%ZISHX2@(%ZISH)) Q:'%ZISH  I %ZISH["*" S ZOSHQ=1 Q
"RTN","ZISHMSM",44,0)
 I $D(ZOSHQ) Q 0
"RTN","ZISHMSM",45,0)
 S %ZISH="" F   S %ZISH=$O(@%ZISHX2@(%ZISH)) Q:%ZISH=""  D
"RTN","ZISHMSM",46,0)
 .;S ZOSHC="rm "_X1_%
"RTN","ZISHMSM",47,0)
 .S ZOSHC=$ZOS(2,%ZISHX1_%ZISH)
"RTN","ZISHMSM",48,0)
 .;D JW
"RTN","ZISHMSM",49,0)
 Q 1
"RTN","ZISHMSM",50,0)
 ;
"RTN","ZISHMSM",51,0)
LIST(%ZISHX1,%ZISHX2,%ZISHX3) ;Create a local array holding fl names
"RTN","ZISHMSM",52,0)
 ;S Y=$$LIST^ZOSHDOS("\dir\","fl",".return array")
"RTN","ZISHMSM",53,0)
 ;                           "fl*",
"RTN","ZISHMSM",54,0)
 ;                           .array,
"RTN","ZISHMSM",55,0)
 ;
"RTN","ZISHMSM",56,0)
 ;Change X2 = $NAME OF CLOSE ROOT
"RTN","ZISHMSM",57,0)
 ;Change X3 = $NAME OF CLOSE ROOT
"RTN","ZISHMSM",58,0)
 ;
"RTN","ZISHMSM",59,0)
 N %ZISH,%ZISHN,%ZISHX,%ZISHY
"RTN","ZISHMSM",60,0)
 S %ZISHN=0
"RTN","ZISHMSM",61,0)
 ;Get fls to act on
"RTN","ZISHMSM",62,0)
 S %ZISH="" F  S %ZISH=$O(@%ZISHX2@(%ZISH)) Q:%ZISH=""  D
"RTN","ZISHMSM",63,0)
 .S %ZISHX=%ZISHX1_%ZISH
"RTN","ZISHMSM",64,0)
 .F %ZISHN=1:1 D  Q:$P(%ZISHY,"^")=""!(%ZISHY<0)  S @%ZISHX3@($P(%ZISHY,"^"))="" ;S @%ZISHX3@(%ZISHN)=$P(%ZISHY,"^")
"RTN","ZISHMSM",65,0)
 ..I %ZISHN>1 S %ZISHY=$ZOS(13,%ZISHY)
"RTN","ZISHMSM",66,0)
 ..E  S %ZISHY=$ZOS(12,%ZISHX,0)
"RTN","ZISHMSM",67,0)
 Q $O(@%ZISHX3@(""))]""
"RTN","ZISHMSM",68,0)
 ;
"RTN","ZISHMSM",69,0)
MV(X1,X2,Y1,Y2) ;Rename a fl
"RTN","ZISHMSM",70,0)
 ;S Y=$$MV^ZOSHDOS("\dir\","fl","\dir\","fl")
"RTN","ZISHMSM",71,0)
 ;
"RTN","ZISHMSM",72,0)
 N %ZB,%ZC,%ZISHDV1,%ZISHDV2,%ZISHFN1,%ZISHFN2,%ZISHPCT,%ZISHSIZ,%ZISHX,X,Y
"RTN","ZISHMSM",73,0)
 S X=X1_X2
"RTN","ZISHMSM",74,0)
 S Y=Y1_Y2
"RTN","ZISHMSM",75,0)
 I X1=Y1 Q $ZOS(3,X,Y)'<0
"RTN","ZISHMSM",76,0)
 ;
"RTN","ZISHMSM",77,0)
 S %ZISHDV1=51,%ZISHDV2=52,%ZISHFN1=X,%ZISHFN2=Y
"RTN","ZISHMSM",78,0)
 O %ZISHDV1:(%ZISHFN1)
"RTN","ZISHMSM",79,0)
 O %ZISHDV2:(%ZISHFN2:"W")
"RTN","ZISHMSM",80,0)
 U %ZISHDV1:(::0:2) S %ZISHSIZ=$ZB U %ZISHDV1:(::0:0) S (%ZISHPCT,%ZB,%ZC)=0
"RTN","ZISHMSM",81,0)
 D SLOWCOPY S %ZISHX(X2)="" S Y=$$DEL^%ZISH(X1,$NA(%ZISHX))
"RTN","ZISHMSM",82,0)
 Q 1
"RTN","ZISHMSM",83,0)
 ;
"RTN","ZISHMSM",84,0)
SLOWCOPY ; Copy without view buffer
"RTN","ZISHMSM",85,0)
 N X,Y
"RTN","ZISHMSM",86,0)
 O %ZISHDV1:(%ZISHFN1:"R"::::""),%ZISHDV2:(%ZISHFN2:"W"::::"")
"RTN","ZISHMSM",87,0)
 FOR  DO  Q:%ZC!(%ZB=%ZISHSIZ)
"RTN","ZISHMSM",88,0)
 . U %ZISHDV1 R X#1024 Q:$L(X)=0
"RTN","ZISHMSM",89,0)
 . U %ZISHDV2 W X S %ZB=$ZB,%ZC=$ZC Q:%ZC
"RTN","ZISHMSM",90,0)
 . I %ZB=%ZISHSIZ C %ZISHDV2 S %ZC=($ZA=-1)
"RTN","ZISHMSM",91,0)
 . S X=%ZB/%ZISHSIZ*100\1 ; %done
"RTN","ZISHMSM",92,0)
 . Q:X=%ZISHPCT  S %ZISHPCT=X
"RTN","ZISHMSM",93,0)
 . Q  ;U 0 W $J(%ZISHPCT,3),*13
"RTN","ZISHMSM",94,0)
 Q
"RTN","ZISHMSM",95,0)
 ;
"RTN","ZISHMSM",96,0)
PWD() ;Print working directory
"RTN","ZISHMSM",97,0)
 N Y
"RTN","ZISHMSM",98,0)
 S Y=$ZOS(11,$ZOS(14))
"RTN","ZISHMSM",99,0)
 Q:Y<0 ""
"RTN","ZISHMSM",100,0)
 S Y=Y_$S($E(Y,$L(Y))'="\":"\",1:"")
"RTN","ZISHMSM",101,0)
 Q $ZOS(14)_":"_Y
"RTN","ZISHMSM",102,0)
 ;
"RTN","ZISHMSM",103,0)
JW ;Call dos $ZOS
"RTN","ZISHMSM",104,0)
 S ZOSHX=$ZOS(ZOSHNUM,ZOSHC)
"RTN","ZISHMSM",105,0)
 Q
"RTN","ZISHMSM",106,0)
DF(X) ;Dir frmt
"RTN","ZISHMSM",107,0)
 Q:X=""
"RTN","ZISHMSM",108,0)
 S X=$TR(X,"/","\")
"RTN","ZISHMSM",109,0)
 I $E(X,$L(X))'="\" S X=X_"\"
"RTN","ZISHMSM",110,0)
 Q
"RTN","ZISHMSM",111,0)
FL(X) ;Fl len
"RTN","ZISHMSM",112,0)
 N ZOSHP1,ZOSHP2
"RTN","ZISHMSM",113,0)
 S ZOSHP1=$P(X,"."),ZOSHP2=$P(X,".",2)
"RTN","ZISHMSM",114,0)
 I $L(ZOSHP1)>8 S X=4 Q
"RTN","ZISHMSM",115,0)
 I $L(ZOSHP2)>3 S X=4 Q
"RTN","ZISHMSM",116,0)
 Q
"RTN","ZISHMSM",117,0)
READNXT(REC) ;Read any sized record into array.
"RTN","ZISHMSM",118,0)
 N T,I,X,LB
"RTN","ZISHMSM",119,0)
 U IO S LB=$ZB R REC#255 S %ZA=$ZA,%ZB=$ZB,%ZC=$ZC,%ZL=%ZA Q:$$EOF(%ZC)
"RTN","ZISHMSM",120,0)
 Q:%ZA<255
"RTN","ZISHMSM",121,0)
 F I=1:1 S LB=LB+%ZA Q:LB<%ZB  R X#255 S %ZA=$ZA,%ZB=$ZB,%ZC=$ZC Q:$$EOF(%ZC)!('$L(X))  S REC(I)=X
"RTN","ZISHMSM",122,0)
 Q
"RTN","ZISHMSM",123,0)
EOF(X) ;Eof flag, pass in $ZC
"RTN","ZISHMSM",124,0)
 Q (X=-1)
"RTN","ZISHMSM",125,0)
 ;
"RTN","ZISHMSM",126,0)
READREC(X) ;Read record from host file.
"RTN","ZISHMSM",127,0)
 N Y
"RTN","ZISHMSM",128,0)
 U IO R X S Y=$ZC
"RTN","ZISHMSM",129,0)
 U $P
"RTN","ZISHMSM",130,0)
 Q Y
"RTN","ZISHMSM",131,0)
MAKEREF(HF,IX,OVF) ;Internal call to rebuild global ref.
"RTN","ZISHMSM",132,0)
 ;Return %ZISHF,%ZISHO,%ZISHI,%ZISUB
"RTN","ZISHMSM",133,0)
 N I,F,MX
"RTN","ZISHMSM",134,0)
 S OVF=$G(OVF,"%ZISHOF")
"RTN","ZISHMSM",135,0)
 S %ZISHI=$QS(HF,IX),MX=$QL(HF) ;
"RTN","ZISHMSM",136,0)
 S F=$NA(@HF,IX-1) ;Get first part
"RTN","ZISHMSM",137,0)
 S %ZISHF=$E(F,1,$L(F)-1)_",%ZISHI" ;Build root
"RTN","ZISHMSM",138,0)
 S %ZISHO=%ZISHF_","_OVF_",%OVFCNT)" ;Make overflow
"RTN","ZISHMSM",139,0)
 F I=IX+1:1:MX S %ZISHF=%ZISHF_",%ZISUB("_I_")",%ZISUB(I)=$QS(HF,I)
"RTN","ZISHMSM",140,0)
 S %ZISHF=%ZISHF_")"
"RTN","ZISHMSM",141,0)
 Q
"RTN","ZISHMSM",142,0)
FTG(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4,%ZISHX5) ;Unload contents of host file into global
"RTN","ZISHMSM",143,0)
 ;p1=hostf file directory 
"RTN","ZISHMSM",144,0)
 ;p2=host file name
"RTN","ZISHMSM",145,0)
 ;p3= $NAME REFERENCE INCLUDING STARTING SUBSCRIPT
"RTN","ZISHMSM",146,0)
 ;p4=INCREMENT SUBSCRIPT
"RTN","ZISHMSM",147,0)
 ;p5=Overflow subscript, defaults to "OVF"
"RTN","ZISHMSM",148,0)
 N %ZA,%ZB,%ZC,%ZL,X,%OVFCNT,%CONT
"RTN","ZISHMSM",149,0)
 N I,%ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHOF,%ZISHOX,%ZISHS,%ZISHX,%ZISHY,POP,%ZISUB
"RTN","ZISHMSM",150,0)
 S %ZISHOF=$G(%ZISHX5,"OVF")
"RTN","ZISHMSM",151,0)
 D MAKEREF(%ZISHX3,%ZISHX4,"%ZISHOF")
"RTN","ZISHMSM",152,0)
 D OPEN^%ZISH(,%ZISHX1,%ZISHX2,"R")
"RTN","ZISHMSM",153,0)
 I POP Q 0
"RTN","ZISHMSM",154,0)
 S X="ERREOF^%ZISH",@^%ZOSF("TRAP")
"RTN","ZISHMSM",155,0)
 U IO F  K %XX D READNXT(.%XX) Q:$$EOF(%ZC)  D
"RTN","ZISHMSM",156,0)
 . S @%ZISHF=%XX
"RTN","ZISHMSM",157,0)
 . I $D(%XX)>2 F %OVFCNT=1:1 Q:'$D(%XX(%OVFCNT))  S @%ZISHO=%XX(%OVFCNT)
"RTN","ZISHMSM",158,0)
 . S %ZISHI=%ZISHI+1
"RTN","ZISHMSM",159,0)
 . Q
"RTN","ZISHMSM",160,0)
 D CLOSE() ;Normal exit
"RTN","ZISHMSM",161,0)
 Q 1
"RTN","ZISHMSM",162,0)
 ;
"RTN","ZISHMSM",163,0)
ERREOF D CLOSE() ;Error close and exit
"RTN","ZISHMSM",164,0)
 Q 0
"RTN","ZISHMSM",165,0)
 ;
"RTN","ZISHMSM",166,0)
GTF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4) ;Load contents of global to host file.
"RTN","ZISHMSM",167,0)
 ;Previously name LOAD
"RTN","ZISHMSM",168,0)
 ;p1=$NAME of global reference
"RTN","ZISHMSM",169,0)
 ;p2=incrementing subscript
"RTN","ZISHMSM",170,0)
 ;p3=host file directory
"RTN","ZISHMSM",171,0)
 ;p4=host file name
"RTN","ZISHMSM",172,0)
 N %ZISHY,%ZISHOX
"RTN","ZISHMSM",173,0)
 S %ZISHY=$$MGTF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4,"W")
"RTN","ZISHMSM",174,0)
 Q %ZISHY
"RTN","ZISHMSM",175,0)
 ;
"RTN","ZISHMSM",176,0)
GATF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4) ;Append to host file.
"RTN","ZISHMSM",177,0)
 ;
"RTN","ZISHMSM",178,0)
 ;p1=$NAME of global reference
"RTN","ZISHMSM",179,0)
 ;p2=incrementing subscript
"RTN","ZISHMSM",180,0)
 ;p3=host file directory
"RTN","ZISHMSM",181,0)
 ;p4=host file name
"RTN","ZISHMSM",182,0)
 N %ZISHY
"RTN","ZISHMSM",183,0)
 S %ZISHY=$$MGTF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4,"A")
"RTN","ZISHMSM",184,0)
 Q %ZISHY
"RTN","ZISHMSM",185,0)
MGTF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4,%ZISHX5) ;
"RTN","ZISHMSM",186,0)
 ;p1=$NAME of global reference
"RTN","ZISHMSM",187,0)
 ;p2=incrementing subscript
"RTN","ZISHMSM",188,0)
 ;p3=host file directory
"RTN","ZISHMSM",189,0)
 ;p4=host file name
"RTN","ZISHMSM",190,0)
 N %ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHS,%ZISHOX,IO,%ZISHX,Y
"RTN","ZISHMSM",191,0)
 D MAKEREF(%ZISHX1,%ZISHX2)
"RTN","ZISHMSM",192,0)
 D OPEN^%ZISH(,%ZISHX3,%ZISHX4,%ZISHX5)
"RTN","ZISHMSM",193,0)
 I POP Q 0
"RTN","ZISHMSM",194,0)
 N X
"RTN","ZISHMSM",195,0)
 S X="ERREOF^%ZISH",@^%ZOSF("TRAP")
"RTN","ZISHMSM",196,0)
 F  Q:'($D(@%ZISHF)#2)  S %ZISHX=@%ZISHF,%ZISHI=%ZISHI+1 U IO W %ZISHX,!
"RTN","ZISHMSM",197,0)
 D CLOSE()
"RTN","ZISHMSM",198,0)
 Q 1
"RTN","ZISHMSM",199,0)
 ;
"RTN","ZISHVXD")
0^5^B36797682
"RTN","ZISHVXD",1,0)
ZISHVXD ;IHS/PR - Host file Control ;08/01/96  16:43
"RTN","ZISHVXD",2,0)
 ;;8.0;KERNEL;**24**;JUL 10, 1995
"RTN","ZISHVXD",3,0)
 ;
"RTN","ZISHVXD",4,0)
OPENERR ;
"RTN","ZISHVXD",5,0)
 Q 0
"RTN","ZISHVXD",6,0)
 ;
"RTN","ZISHVXD",7,0)
OPEN(X1,X2,X3,X4,X5) ;Open file
"RTN","ZISHVXD",8,0)
 ;X1=handle name
"RTN","ZISHVXD",9,0)
 ;X2=directory
"RTN","ZISHVXD",10,0)
 ;X3=filename
"RTN","ZISHVXD",11,0)
 ;X4=access mode
"RTN","ZISHVXD",12,0)
 ;X5=new file max record size
"RTN","ZISHVXD",13,0)
 ;
"RTN","ZISHVXD",14,0)
 N %,%1,%2,%IO,%P,%T,X,Y
"RTN","ZISHVXD",15,0)
 S X="OPNERR^%ZISH",@^%ZOSF("TRAP")
"RTN","ZISHVXD",16,0)
 S Y=$S(X4="A":"",X4="R":"READONLY",X4="W":"NEWVERSION",1:"")
"RTN","ZISHVXD",17,0)
 ;S %1="" I X4["R" S %1=$&ZLIB^%GETFILE(X2_X3,"MRS")
"RTN","ZISHVXD",18,0)
 S %IO=X2_X3 ;S %IO(X2_X3)="",%IO=$P($P($NA(%IO(X2_X3)),"(",2),")")
"RTN","ZISHVXD",19,0)
 S %IO("OPEN")="%IO:"_Y_$S($G(X5)&(X4="W"):":RECORDSIZE="_+X5,1:"")_":3"
"RTN","ZISHVXD",20,0)
 O @%IO("OPEN") S %T=$T ;O @(""""_X2_X3_""":"_Y_":0") S %T=$T
"RTN","ZISHVXD",21,0)
 S %=X2_X3
"RTN","ZISHVXD",22,0)
 I '%T S POP=1 Q
"RTN","ZISHVXD",23,0)
 S IO=%IO,IO(1,IO)=""
"RTN","ZISHVXD",24,0)
 I $G(X1)]"" D SAVDEV^%ZISUTL(X1)
"RTN","ZISHVXD",25,0)
 U IO:NOTRAP U $P ;Enable use of $ZA to test EOF condition.
"RTN","ZISHVXD",26,0)
 S POP=0
"RTN","ZISHVXD",27,0)
 Q
"RTN","ZISHVXD",28,0)
OPNERR ;error on open
"RTN","ZISHVXD",29,0)
 S POP=1
"RTN","ZISHVXD",30,0)
 U:$G(%P)]"" %P
"RTN","ZISHVXD",31,0)
 Q
"RTN","ZISHVXD",32,0)
CLOSE(X) ;Close HFS device not opened by %ZIS.
"RTN","ZISHVXD",33,0)
 ;X1=Handle name
"RTN","ZISHVXD",34,0)
 I $G(X)]"" C IO K IO(1,IO) D RMDEV^%ZISUTL(X),HOME^%ZIS Q
"RTN","ZISHVXD",35,0)
 C IO K IO(1,IO) D HOME^%ZIS
"RTN","ZISHVXD",36,0)
 Q
"RTN","ZISHVXD",37,0)
DEL(%ZISHX1,%ZISHX2) ;Del fl(s)
"RTN","ZISHVXD",38,0)
 ;S Y=$$DEL^ZOSHMSM("/dir/","fl")
"RTN","ZISHVXD",39,0)
 ;                         ,.array)
"RTN","ZISHVXD",40,0)
 N %ZISH,%ZISHLGR,%ZISHXIT,X
"RTN","ZISHVXD",41,0)
 ;Get fls to act on
"RTN","ZISHVXD",42,0)
 ;No '*' allowed
"RTN","ZISHVXD",43,0)
 S %ZISH="" F  S %ZISH=$O(@%ZISHX2@(%ZISH)) Q:'%ZISH  I %ZISH["*" S %ZISHXIT=1 Q
"RTN","ZISHVXD",44,0)
 I $D(%ZISHXIT) Q 0
"RTN","ZISHVXD",45,0)
 S X="DELERR^%ZISH",@^%ZOSF("TRAP") ;need to evaluate this call
"RTN","ZISHVXD",46,0)
 S %ZISH="" F  S %ZISH=$O(@%ZISHX2@(%ZISH)) Q:%ZISH=""  S %ZISHX=%ZISHX1_%ZISH D
"RTN","ZISHVXD",47,0)
 .O %ZISHX:READONLY:0 I  C %ZISHX:DELETE
"RTN","ZISHVXD",48,0)
 Q 1
"RTN","ZISHVXD",49,0)
DELERR ;TRAP READ/DELETE ERROR
"RTN","ZISHVXD",50,0)
 I $G(%ZISHLGR)]"",$D(@%ZISHLGR)
"RTN","ZISHVXD",51,0)
 Q 0
"RTN","ZISHVXD",52,0)
LIST(%ZISHX1,%ZISHX2,%ZISHX3) ;Set local array holding fl names
"RTN","ZISHVXD",53,0)
 ;S Y=$$LIST^ZOSHMSM("/dir/","list_root","return_root")
"RTN","ZISHVXD",54,0)
 ;list_root can have XX("A*"), XX("test.com")...
"RTN","ZISHVXD",55,0)
 ;Both arrays passed as closed roots.
"RTN","ZISHVXD",56,0)
 ;--------------------------------------
"RTN","ZISHVXD",57,0)
 N %IO,%X,%ZISH,%ZISH1,%ZISHIO,%ZISHX,POP,X,ZISHAUTO,ZISHTMP
"RTN","ZISHVXD",58,0)
 M %ZISHIO=IO N $ETRAP S $ETRAP=""
"RTN","ZISHVXD",59,0)
 S %IO=$I,ZISHAUTO="ZISH"_$J_".TMPA",ZISHTMP="ZISH"_$J_".TMPB"
"RTN","ZISHVXD",60,0)
 S X="SPAWNERR^%ZISH",@^%ZOSF("TRAP")
"RTN","ZISHVXD",61,0)
 ;Init ZOSHAUTO.$J
"RTN","ZISHVXD",62,0)
 O ZISHAUTO::0 I  C ZISHAUTO:DELETE
"RTN","ZISHVXD",63,0)
 O ZISHTMP::0 I  C ZISHTMP:DELETE
"RTN","ZISHVXD",64,0)
LSTERR2 ;Set array if fls pbv
"RTN","ZISHVXD",65,0)
 ;Get fls to act on
"RTN","ZISHVXD",66,0)
 ;Append listing to ZISHAUTO.$J
"RTN","ZISHVXD",67,0)
 I $ZSEARCH(ZISHTMP)]"" S Y=$&ZLIB.%SPAWN("DEL "_ZISHTMP_";*")
"RTN","ZISHVXD",68,0)
 S %ZISH1=0
"RTN","ZISHVXD",69,0)
 S %ZISH="" F  S %ZISH=$O(@%ZISHX2@(%ZISH)) Q:%ZISH=""  S %ZISHX=%ZISHX1_%ZISH D
"RTN","ZISHVXD",70,0)
 . I %ZISH1 D
"RTN","ZISHVXD",71,0)
 . . S Y=$&ZLIB.%SPAWN("DIR/COL=1 "_%ZISHX,,ZISHTMP)
"RTN","ZISHVXD",72,0)
 . . I Y S Y=$&ZLIB.%SPAWN("APPEND "_ZISHTMP_" "_ZISHAUTO)
"RTN","ZISHVXD",73,0)
 . E  S Y=$&ZLIB.%SPAWN("DIR/COL=1 "_%ZISHX,,ZISHAUTO),%ZISH1=1
"RTN","ZISHVXD",74,0)
 ;I $ZSEARCH(ZISHTMP)]"" S Y=$&ZLIB.%SPAWN("DEL "_ZISHTMP_";*")
"RTN","ZISHVXD",75,0)
 ;Open ZISHAUTO.$J to read.
"RTN","ZISHVXD",76,0)
 D OPEN(,"",ZISHAUTO,"R") I POP Q 0
"RTN","ZISHVXD",77,0)
 S X="LSTEOF^%ZISH",@^%ZOSF("TRAP")
"RTN","ZISHVXD",78,0)
 U ZISHAUTO:NOTRAP R %ZISHX,%ZISHX,%ZISHX
"RTN","ZISHVXD",79,0)
 I $ZA=-1 Q
"RTN","ZISHVXD",80,0)
 F  R %ZISHX G LSTEOF:$ZA=-1 I %ZISHX]"" S %X=$P(%ZISHX,$C(32)) D
"RTN","ZISHVXD",81,0)
 . I %ZISHX'["Total of",%ZISHX'?.E1".DIR;".N,%ZISHX'?1"Directory".E D
"RTN","ZISHVXD",82,0)
 . . I (%X[ZISHAUTO)!(%X[ZISHTMP) Q
"RTN","ZISHVXD",83,0)
 . . S @%ZISHX3@(%X)=""
"RTN","ZISHVXD",84,0)
LSTEOF C ZISHAUTO:DELETE
"RTN","ZISHVXD",85,0)
 U:$D(IO(1,%IO)) %IO
"RTN","ZISHVXD",86,0)
 K IO M IO=%ZISHIO
"RTN","ZISHVXD",87,0)
 I $ZSEARCH(ZISHTMP)]"" S Y=$&ZLIB.%SPAWN("DEL "_ZISHTMP_";*")
"RTN","ZISHVXD",88,0)
 I $ZSEARCH(ZISHAUTO)]"" S Y=$&ZLIB.%SPAWN("DEL "_ZISHAUTO_";*")
"RTN","ZISHVXD",89,0)
 Q 1
"RTN","ZISHVXD",90,0)
SPAWNERR ;TRAP ERROR OF SPAWN
"RTN","ZISHVXD",91,0)
 O ZISHAUTO:READONLY:1
"RTN","ZISHVXD",92,0)
 I $T C ZISHAUTO:DELETE
"RTN","ZISHVXD",93,0)
 Q 0
"RTN","ZISHVXD",94,0)
 ;
"RTN","ZISHVXD",95,0)
MV(X1,X2,X3,X4) ;Rename a fl
"RTN","ZISHVXD",96,0)
 ;S Y=$$MV^ZOSHMSM("/dir/","fl","/dir/","fl")
"RTN","ZISHVXD",97,0)
 N X,ZISHAUTO
"RTN","ZISHVXD",98,0)
 S ZISHAUTO="ZISH"_$J_".TMPA"
"RTN","ZISHVXD",99,0)
 S X="SPAWNERR^%ZISH",@^%ZOSF("TRAP")
"RTN","ZISHVXD",100,0)
 ;Pbv or qit
"RTN","ZISHVXD",101,0)
 I $O(X2(0))!$O(X4(0)) X "I $G(%ZISHLGR)]"""",$D(@%ZISHLGR)" Q 0
"RTN","ZISHVXD",102,0)
 I X1=X3 D
"RTN","ZISHVXD",103,0)
 .O @(""""_X1_X2_"""")
"RTN","ZISHVXD",104,0)
 .C @(""""_X1_X2_""":RENAME="_""""_X3_X4_"""")
"RTN","ZISHVXD",105,0)
 E  D
"RTN","ZISHVXD",106,0)
 .S Y=$&ZLIB.%SPAWN("COPY "_X1_X2_" "_X3_X4,,ZISHAUTO)
"RTN","ZISHVXD",107,0)
 .O ZISHAUTO:READONLY:1
"RTN","ZISHVXD",108,0)
 .I $T C ZISHAUTO:DELETE
"RTN","ZISHVXD",109,0)
 .S X=$&ZLIB.%PARSE(X1_X2)
"RTN","ZISHVXD",110,0)
 .S Y=$&ZLIB.%SPAWN("DEL "_X,,ZISHAUTO)
"RTN","ZISHVXD",111,0)
 .O ZISHAUTO:READONLY:1
"RTN","ZISHVXD",112,0)
 .I $T C ZISHAUTO:DELETE
"RTN","ZISHVXD",113,0)
 Q 1
"RTN","ZISHVXD",114,0)
PWD() ;Print working directory
"RTN","ZISHVXD",115,0)
 N Y
"RTN","ZISHVXD",116,0)
 S Y=$&ZLIB.%PARSE("TMP.TMP",,,"DEVICE")_$&ZLIB.%DIRECTORY
"RTN","ZISHVXD",117,0)
 Q Y
"RTN","ZISHVXD",118,0)
JW ;msm extrinsic
"RTN","ZISHVXD",119,0)
 S ZOSHX=$&ZLIB.%SPAWN(ZOSHC)
"RTN","ZISHVXD",120,0)
 Q
"RTN","ZISHVXD",121,0)
 ;
"RTN","ZISHVXD",122,0)
EOF(X) ;Eof flag, Pass in $ZA
"RTN","ZISHVXD",123,0)
 Q (X=-1)
"RTN","ZISHVXD",124,0)
QL(X) ;Qlfrs
"RTN","ZISHVXD",125,0)
 Q:X=""
"RTN","ZISHVXD",126,0)
 S:$E(X)'="-" X="-"_X
"RTN","ZISHVXD",127,0)
 Q
"RTN","ZISHVXD",128,0)
FL(X) ;Fl len
"RTN","ZISHVXD",129,0)
 N ZOSHP1,ZOSHP2
"RTN","ZISHVXD",130,0)
 S ZOSHP1=$P(X,"."),ZOSHP2=$P(X,".",2)
"RTN","ZISHVXD",131,0)
 I $L(ZOSHP1)>14 S X=4 Q
"RTN","ZISHVXD",132,0)
 I $L(ZOSHP2)>8 S X=4 Q
"RTN","ZISHVXD",133,0)
 Q
"RTN","ZISHVXD",134,0)
 ;
"RTN","ZISHVXD",135,0)
MAKEREF(HF,IX,OVF) ;Internal call to rebuild global ref.
"RTN","ZISHVXD",136,0)
 ;Return %ZISHF,%ZISHO,%ZISHI,%ZISUB
"RTN","ZISHVXD",137,0)
 N I,F,MX
"RTN","ZISHVXD",138,0)
 S OVF=$G(OVF,"%ZISHOF")
"RTN","ZISHVXD",139,0)
 S %ZISHI=$QS(HF,IX),MX=$QL(HF) ;
"RTN","ZISHVXD",140,0)
 S F=$NA(@HF,IX-1) ;Get first part
"RTN","ZISHVXD",141,0)
 S %ZISHF=$E(F,1,$L(F)-1)_",%ZISHI" ;Build root
"RTN","ZISHVXD",142,0)
 S %ZISHO=%ZISHF_","_OVF_",%OVFCNT)" ;Make overflow
"RTN","ZISHVXD",143,0)
 F I=IX+1:1:MX S %ZISHF=%ZISHF_",%ZISUB("_I_")",%ZISUB(I)=$QS(HF,I)
"RTN","ZISHVXD",144,0)
 S %ZISHF=%ZISHF_")"
"RTN","ZISHVXD",145,0)
 Q
"RTN","ZISHVXD",146,0)
FTG(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4,%ZISHX5) ;Unload contents of host file into global
"RTN","ZISHVXD",147,0)
 ;p1=hostf file directory 
"RTN","ZISHVXD",148,0)
 ;p2=host file name
"RTN","ZISHVXD",149,0)
 ;p3= $NAME REFERENCE INCLUDING STARTING SUBSCRIPT
"RTN","ZISHVXD",150,0)
 ;p4=INCREMENT SUBSCRIPT
"RTN","ZISHVXD",151,0)
 ;p5=Overflow subscript, defaults to "OVF"
"RTN","ZISHVXD",152,0)
 N %ZA,%ZB,%ZC,%ZL,X,%OVFCNT,%CONT
"RTN","ZISHVXD",153,0)
 N I,%ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHLGR,%ZISHOF,%ZISHOX,%ZISHS,%ZISHX,%ZISHY,POP,%ZISUB
"RTN","ZISHVXD",154,0)
 S %ZISHOF=$G(%ZISHX5,"OVF")
"RTN","ZISHVXD",155,0)
 D MAKEREF(%ZISHX3,%ZISHX4,"%ZISHOF")
"RTN","ZISHVXD",156,0)
 D OPEN^%ZISH(,$G(%ZISHX1),%ZISHX2,"R")
"RTN","ZISHVXD",157,0)
 I POP Q 0
"RTN","ZISHVXD",158,0)
 N $ETRAP S $ETRAP="",X="ERREOF^%ZISH",@^%ZOSF("TRAP")
"RTN","ZISHVXD",159,0)
 U IO F  K %XX D READNXT(.%XX) Q:$$EOF(%ZA)  D
"RTN","ZISHVXD",160,0)
 . S @%ZISHF=%XX
"RTN","ZISHVXD",161,0)
 . I $D(%XX)>2 F %OVFCNT=1:1 Q:'$D(%XX(%OVFCNT))  S @%ZISHO=%XX(%OVFCNT)
"RTN","ZISHVXD",162,0)
 . S %ZISHI=%ZISHI+1
"RTN","ZISHVXD",163,0)
 . Q
"RTN","ZISHVXD",164,0)
 D CLOSE() ;Normal exit
"RTN","ZISHVXD",165,0)
 Q 1
"RTN","ZISHVXD",166,0)
 ;
"RTN","ZISHVXD",167,0)
ERREOF D CLOSE() ;Got error Reading file
"RTN","ZISHVXD",168,0)
 Q 0
"RTN","ZISHVXD",169,0)
 ;
"RTN","ZISHVXD",170,0)
READNXT(REC) ;
"RTN","ZISHVXD",171,0)
 N T,I,X
"RTN","ZISHVXD",172,0)
 U IO:NOTRAP R REC#255 S %ZA=$ZA,%ZB=$ZB,%ZL=%ZA Q:$$EOF(%ZA)
"RTN","ZISHVXD",173,0)
 F I=1:1:%ZL\255 R X#255 S %ZA=$ZA Q:$$EOF(%ZA)  S REC(I)=X
"RTN","ZISHVXD",174,0)
 Q
"RTN","ZISHVXD",175,0)
GTF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4) ;Load contents of global to host file.
"RTN","ZISHVXD",176,0)
 ;Previously name LOAD
"RTN","ZISHVXD",177,0)
 ;p1=$NAME of global reference
"RTN","ZISHVXD",178,0)
 ;p2=incrementing subscript
"RTN","ZISHVXD",179,0)
 ;p3=host file directory
"RTN","ZISHVXD",180,0)
 ;p4=host file name
"RTN","ZISHVXD",181,0)
 N %ZISHY,%ZISHLGR,%ZISHOX
"RTN","ZISHVXD",182,0)
 S %ZISHY=$$MGTF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4,"W")
"RTN","ZISHVXD",183,0)
 Q %ZISHY
"RTN","ZISHVXD",184,0)
 ;
"RTN","ZISHVXD",185,0)
GATF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4) ;Append to host file.
"RTN","ZISHVXD",186,0)
 ;
"RTN","ZISHVXD",187,0)
 ;p1=$NAME of global reference
"RTN","ZISHVXD",188,0)
 ;p2=incrementing subscript
"RTN","ZISHVXD",189,0)
 ;p3=host file directory
"RTN","ZISHVXD",190,0)
 ;p4=host file name
"RTN","ZISHVXD",191,0)
 N %ZISHY
"RTN","ZISHVXD",192,0)
 S %ZISHY=$$MGTF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4,"A")
"RTN","ZISHVXD",193,0)
 Q %ZISHY
"RTN","ZISHVXD",194,0)
MGTF(%ZISHX1,%ZISHX2,%ZISHX3,%ZISHX4,%ZISHX5) ;
"RTN","ZISHVXD",195,0)
 ;p1=$NAME of global reference
"RTN","ZISHVXD",196,0)
 ;p2=incrementing subscript
"RTN","ZISHVXD",197,0)
 ;p3=host file directory
"RTN","ZISHVXD",198,0)
 ;p4=host file name
"RTN","ZISHVXD",199,0)
 N %ZISH,%ZISH1,%ZISHI,%ZISHL,%ZISHLGR,%ZISHS,%ZISHOX,IO,%ZISHX,Y
"RTN","ZISHVXD",200,0)
 D MAKEREF(%ZISHX1,%ZISHX2)
"RTN","ZISHVXD",201,0)
 D OPEN^%ZISH(,%ZISHX3,%ZISHX4,%ZISHX5)
"RTN","ZISHVXD",202,0)
 I POP Q 0
"RTN","ZISHVXD",203,0)
 N X
"RTN","ZISHVXD",204,0)
 N $ETRAP S $ETRAP="",X="ERREOF^%ZISH",@^%ZOSF("TRAP")
"RTN","ZISHVXD",205,0)
 F  Q:'($D(@%ZISHF)#2)  S %ZISHX=@%ZISHF,%ZISHI=%ZISHI+1 U IO W %ZISHX,!
"RTN","ZISHVXD",206,0)
 D CLOSE() ;Normal Exit
"RTN","ZISHVXD",207,0)
 Q 1
"RTN","ZISHVXD",208,0)
 ;
"RTN","ZISUTL")
0^7^B6155305
"RTN","ZISUTL",1,0)
%ZISUTL ;Device Handler Utility routine ;06/18/96  14:46
"RTN","ZISUTL",2,0)
 ;;8.0;KERNEL;**18,24**;JUL 10, 1995
"RTN","ZISUTL",3,0)
 Q  ;No entry from top
"RTN","ZISUTL",4,0)
GETDEV(X) ;Return IO variables
"RTN","ZISUTL",5,0)
 I '$D(^TMP("XUDEVICE",$J,X)) S POP=1 Q
"RTN","ZISUTL",6,0)
 ;Cleanup first
"RTN","ZISUTL",7,0)
 N % K IO("S")
"RTN","ZISUTL",8,0)
 F %="IO","IO(""S"")","IOS","IOT","IOBS","IOF","IOM","ION","IOSL","IOST","IOST(0)","IOXY" I $D(^TMP("XUDEVICE",$J,X,%))#2 S @%=^(%)
"RTN","ZISUTL",9,0)
 Q
"RTN","ZISUTL",10,0)
 ;
"RTN","ZISUTL",11,0)
SAVDEV(NM) ;Save IO variables
"RTN","ZISUTL",12,0)
 ;NM=Handle name
"RTN","ZISUTL",13,0)
 N %,Y
"RTN","ZISUTL",14,0)
 S Y=$$FINDEV(NM) I 'Y S Y=$$NEXTDEV
"RTN","ZISUTL",15,0)
 S ^TMP("XUDEVICE",$J,Y,0)=NM,^TMP("XUDEVICE",$J,"B",NM,Y)=""
"RTN","ZISUTL",16,0)
 F %="IO","IO(""S"")","IOS","IOT","IOBS","IOF","IOM","ION","IOSL","IOST","IOST(0)","IOXY" I $D(@%)#2 S ^TMP("XUDEVICE",$J,Y,%)=@%
"RTN","ZISUTL",17,0)
 Q
"RTN","ZISUTL",18,0)
 ;
"RTN","ZISUTL",19,0)
FINDEV(NM) ;Find Device name and return IEN.
"RTN","ZISUTL",20,0)
 Q $O(^TMP("XUDEVICE",$J,"B",NM,0))
"RTN","ZISUTL",21,0)
 ;
"RTN","ZISUTL",22,0)
RMDEV(X) ;Remove saved IO variables.
"RTN","ZISUTL",23,0)
 N Y
"RTN","ZISUTL",24,0)
 S Y=$$FINDEV(X)
"RTN","ZISUTL",25,0)
 Q:'Y
"RTN","ZISUTL",26,0)
 K ^TMP("XUDEVICE",$J,"B",X),^TMP("XUDEVICE",$J,+Y)
"RTN","ZISUTL",27,0)
 Q
"RTN","ZISUTL",28,0)
 ;
"RTN","ZISUTL",29,0)
RMALLDEV() ;Remove saved IO variables for all devices saved in table.
"RTN","ZISUTL",30,0)
 K ^TMP("XUDEVICE",$J)
"RTN","ZISUTL",31,0)
 Q 1
"RTN","ZISUTL",32,0)
 ;
"RTN","ZISUTL",33,0)
NEXTDEV() ;Return next available device.
"RTN","ZISUTL",34,0)
 N Y
"RTN","ZISUTL",35,0)
 F Y=1:1 Q:'$D(^TMP("XUDEVICE",$J,Y))
"RTN","ZISUTL",36,0)
 Q Y
"RTN","ZISUTL",37,0)
 ;
"RTN","ZISUTL",38,0)
OPEN(HNDL,IOP,%ZIS) ;Open extrinsic function
"RTN","ZISUTL",39,0)
 ;Parameters
"RTN","ZISUTL",40,0)
 ;HNDL=Handle name
"RTN","ZISUTL",41,0)
 ;IOP string--optional
"RTN","ZISUTL",42,0)
 ;%ZIS string--optional
"RTN","ZISUTL",43,0)
 N %
"RTN","ZISUTL",44,0)
 I $G(IOP)="" K IOP ;Remove IOP if null.
"RTN","ZISUTL",45,0)
 D ^%ZIS,SAVDEV(HNDL):POP=0
"RTN","ZISUTL",46,0)
 Q
"RTN","ZISUTL",47,0)
 ;
"RTN","ZISUTL",48,0)
CLOSE(X1) ;Close extrinsic functionsl
"RTN","ZISUTL",49,0)
 ;X1=Handle
"RTN","ZISUTL",50,0)
 ;
"RTN","ZISUTL",51,0)
 N %,Y
"RTN","ZISUTL",52,0)
 S Y=$$FINDEV^%ZISUTL(X1)
"RTN","ZISUTL",53,0)
 Q:'Y
"RTN","ZISUTL",54,0)
 D GETDEV^%ZISUTL(Y)
"RTN","ZISUTL",55,0)
 D ^%ZISC,RMDEV^%ZISUTL(X1)
"RTN","ZISUTL",56,0)
 Q
"RTN","ZISUTL",57,0)
 ;
"RTN","ZISUTL",58,0)
USE(X1) ;Restore IO* variables pertaining to the device.
"RTN","ZISUTL",59,0)
 ;X1=Handle name
"RTN","ZISUTL",60,0)
 N %,Y
"RTN","ZISUTL",61,0)
 S Y=$$FINDEV^%ZISUTL(X1)
"RTN","ZISUTL",62,0)
 Q:'Y
"RTN","ZISUTL",63,0)
 D GETDEV^%ZISUTL(Y) U IO
"RTN","ZISUTL",64,0)
 Q
"RTN","ZISUTL",65,0)
 ;
"RTN","ZISUTL",66,0)
LINEPORT() ;Obtain line port information and return to home.
"RTN","ZISUTL",67,0)
 ;
"RTN","ZISUTL",68,0)
 N %,%1,Y
"RTN","ZISUTL",69,0)
 S Y=0
"RTN","ZISUTL",70,0)
 S %=$$LNPRTIEN^%ZISUTL($$LNPRTNAM^%ZISUTL)
"RTN","ZISUTL",71,0)
 S Y=+$P($G(^%ZIS(3.23,+%,0)),"^",3)
"RTN","ZISUTL",72,0)
 Q Y
"RTN","ZISUTL",73,0)
LNPRTSUB() ;Obtain line port information and return to home.
"RTN","ZISUTL",74,0)
 ;
"RTN","ZISUTL",75,0)
 N %,%1,Y
"RTN","ZISUTL",76,0)
 S Y=0
"RTN","ZISUTL",77,0)
 S %=$$LNPRTIEN^%ZISUTL($$LNPRTNAM^%ZISUTL)
"RTN","ZISUTL",78,0)
 S Y=$P($G(^%ZIS(2,+$P($G(^%ZIS(3.23,+%,0)),"^",4),0)),"^")
"RTN","ZISUTL",79,0)
 Q Y
"RTN","ZISUTL",80,0)
LNPRTNAM() ;Return Line port name
"RTN","ZISUTL",81,0)
 N Y
"RTN","ZISUTL",82,0)
 S Y=""
"RTN","ZISUTL",83,0)
 I $G(^%ZOSF("OS"))["VAX DSM" D
"RTN","ZISUTL",84,0)
 .S Y=$ZIO
"RTN","ZISUTL",85,0)
 E  I $G(^%ZOSF("OS"))["MSM" D
"RTN","ZISUTL",86,0)
 .S Y=$ZDEV($I)
"RTN","ZISUTL",87,0)
 Q Y
"RTN","ZISUTL",88,0)
LNPRTIEN(X) ;Return internal entry number of Line/port
"RTN","ZISUTL",89,0)
 Q:X="" 0
"RTN","ZISUTL",90,0)
 Q $O(^%ZIS(3.23,"B",X,0))
"RTN","ZISUTL",91,0)
LNPRTADR(X) ;Returns Line/Port name of a fixed device.
"RTN","ZISUTL",92,0)
 N %,Y
"RTN","ZISUTL",93,0)
 S Y=""
"RTN","ZISUTL",94,0)
 S %=$O(^%ZIS(1,"B",X,0))
"RTN","ZISUTL",95,0)
 S %=$O(^%ZIS(3.23,"C",+%,0))
"RTN","ZISUTL",96,0)
 I %,$G(^%ZIS(3.23,+%,0))]"" S Y=$P(^(0),"^")
"RTN","ZISUTL",97,0)
 Q Y
"RTN","ZISUTL",98,0)
 ;
"RTN","ZOSV1VXD")
0^2^B4315785
"RTN","ZOSV1VXD",1,0)
ZOSV1VXD ;SFISC/AC - View commands & special functions(continued). ;6/24/96  14:41
"RTN","ZOSV1VXD",2,0)
 ;;8.0;KERNEL;**24**;JUL 03, 1995
"RTN","ZOSV1VXD",3,0)
DEVOPN ;List devices opened.
"RTN","ZOSV1VXD",4,0)
 N %,%B,%I,%L,%X,%X1,%X2,%Y
"RTN","ZOSV1VXD",5,0)
 S %X1=$V($V(0)+8),%X2=$V(%X1),Y=""
"RTN","ZOSV1VXD",6,0)
 F %I=1:1 D D1 S %X2=$V(%X2) Q:%X2=%X1
"RTN","ZOSV1VXD",7,0)
 Q
"RTN","ZOSV1VXD",8,0)
D1 S %X=$V(%X2+8)
"RTN","ZOSV1VXD",9,0)
 S %L=$V(%X+4,-1,1),%B=$V(%X+8)
"RTN","ZOSV1VXD",10,0)
 S %Y=""
"RTN","ZOSV1VXD",11,0)
 F %=1:1:%L S %Y=%Y_$C($V(%B,-1,1)) S %B=%B+1
"RTN","ZOSV1VXD",12,0)
 S Y=Y_%Y_"," Q
"RTN","ZOSV1VXD",13,0)
 ;
"RTN","ZOSV1VXD",14,0)
DEVOK ;Check Device Availability.  (not complete)
"RTN","ZOSV1VXD",15,0)
 ;INPUT:  X=Device $I, X1=IOT -- X1 needed for resources
"RTN","ZOSV1VXD",16,0)
 ;OUTPUT: Y=0 if available, Y=job # if owned, Y=-1 if device does not exists.
"RTN","ZOSV1VXD",17,0)
 S Y=0 Q:X["::"  I $G(X1)="RES" G RES
"RTN","ZOSV1VXD",18,0)
 S Y=$ZC(%GETDVI,X,"EXISTS")
"RTN","ZOSV1VXD",19,0)
 G DV1:Y D DV2 Q:Y=-1  I Y="TERM" S Y=-1 Q
"RTN","ZOSV1VXD",20,0)
 S Y=-2 Q
"RTN","ZOSV1VXD",21,0)
DV1 S Y=$ZC(%GETDVI,X,"PID") I Y=$J!($ZC(%GETDVI,X,"SPL")) S Y=0 Q
"RTN","ZOSV1VXD",22,0)
 I Y,$ZC(%GETJPI,X,"MASTER_PID")=Y G DVOPN
"RTN","ZOSV1VXD",23,0)
 Q:Y>0  D DV2 G DVOPN:Y="TERM" S Y=$S(Y="DISK":0,Y="MAILBOX":0,Y="TAPE":0,1:-1) Q
"RTN","ZOSV1VXD",24,0)
DV2 S Y=$ZC(%PARSE,X) I Y="" S Y=-1 Q
"RTN","ZOSV1VXD",25,0)
 I X]"" S Y=$ZC(%GETDVI,$S(Y]"":Y,1:X),"DEVCLASS") Q
"RTN","ZOSV1VXD",26,0)
 Q
"RTN","ZOSV1VXD",27,0)
DVOPN S $ZT="DVERR",Y=0 Q:$D(%ZTIO)
"RTN","ZOSV1VXD",28,0)
 L:$D(%ZISLOCK) +@%ZISLOCK:60
"RTN","ZOSV1VXD",29,0)
 O X::$S($D(%ZISTO):%ZISTO,1:0) E  S Y=999 L:$D(%ZISLOCK) -@%ZISLOCK:60 Q
"RTN","ZOSV1VXD",30,0)
 L:$D(%ZISLOCK) -@%ZISLOCK
"RTN","ZOSV1VXD",31,0)
 S Y=0 I '$D(%ZISCHK)!$S($D(%ZIS)#2:(%ZIS["T"),1:0) C X Q
"RTN","ZOSV1VXD",32,0)
 S:X]"" IO(1,X)="" Q
"RTN","ZOSV1VXD",33,0)
DVERR I $ZE["OPENERR" S Y=-1 Q
"RTN","ZOSV1VXD",34,0)
 ZQ
"RTN","ZOSV1VXD",35,0)
RES S Y=0,%ZISD0=$O(^%ZISL(3.54,"B",X,0))
"RTN","ZOSV1VXD",36,0)
 I '%ZISD0 S Y=-1,%ZISD0=$O(^%ZIS(1,"C",X)) Q:'%ZISD0  Q:'$D(^%ZIS(1,+%ZISD0,0))  Q:$P(^(0),"^")'=X  Q:'$D(^("TYPE"))  Q:^("TYPE")'="RES"  S Y=0 Q
"RTN","ZOSV1VXD",37,0)
 S X1=$S($D(^%ZISL(3.54,+%ZISD0,0)):^(0),1:"")
"RTN","ZOSV1VXD",38,0)
 I $P(X1,"^",2)&(X=$P(X1,"^")) S Y=0 Q
"RTN","ZOSV1VXD",39,0)
 S Y=999 F %ZISD1=0:0 S %ZISD1=$O(^%ZISL(3.54,%ZISD0,1,%ZISD1)) Q:%ZISD1'>0  I $D(^(%ZISD1,0)) S Y=$P(^(0),"^",3) Q
"RTN","ZOSV1VXD",40,0)
 K %ZISD0,%ZISD1
"RTN","ZOSV1VXD",41,0)
 Q
"RTN","ZTER")
0^10^B26354935
"RTN","ZTER",1,0)
%ZTER ; ISC-SF.SEA/JLI - ERROR TRAP TO LOG ERRORS ;07/18/96  11:59
"RTN","ZTER",2,0)
 ;;8.0;KERNEL;**8,18,32,24**;JUL 10, 1995
"RTN","ZTER",3,0)
 I $ZE["-ALLOC,"!($ZE["<STORE>") D @$S('$D(^%ZOSF("OS")):"^%ET",^("OS")["DTM":"^%errlog",1:"^%ET") D H^XUS
"RTN","ZTER",4,0)
 S %ZT("^XUTL(""XQ"",$J)")="" S:'$D(%ZTERLGR) %ZTERLGR=$$LGR^%ZOSV()
"RTN","ZTER",5,0)
 S %ZTER11N=$P($G(^%ZTER(1,+$H,0)),"^",2)+1,^%ZTER(1,+$H,0)=(+$H)_"^"_%ZTER11N,^(1,0)="^3.0751^"_%ZTER11N_"^"_%ZTER11N
"RTN","ZTER",6,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,0)=%ZTER11N,^("ZE")=$ZE S:$D(%ZTERLGR) ^("GR")=%ZTERLGR K %ZTERLGR I %ZTER11N=1 S ^%ZTER(1,0)=$P(^%ZTER(1,0),"^",1,2)_"^"_(+$H)_"^"_($P(^%ZTER(1,0),"^",4)+1)
"RTN","ZTER",7,0)
 S %ZTER11B="" F %ZTER11I=1:1:$L($ZB) S %ZTER11A=$E($ZB,%ZTER11I),%ZTER11B=%ZTER11B_$S(%ZTER11A?1C:$C($A(%ZTER11A)+32#128),1:%ZTER11A)
"RTN","ZTER",8,0)
 S %ZTER11I="" I $D(^%ZOSF("UCI")) K %ZTER11A S:$D(Y) %ZTER11A="" S:($D(Y)#2) %ZTER11A=Y X ^%ZOSF("UCI") S %ZTER11I=Y K:'$D(%ZTER11A) Y S:$D(%ZTER11A) Y=%ZTER11A
"RTN","ZTER",9,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,"H")=$H,^("J")=$J_"^^^"_%ZTER11I_"^"_$J,^("I")=$I_"^"_$S($I[":":$ZA,1:"")_"^"_%ZTER11B_"^"_$S($D(IO("ZIO")):IO("ZIO"),1:"")
"RTN","ZTER",10,0)
 S %ZTERROR=$S($ZE["%DSM-E":$P($P($ZE,"%DSM-E-",2),","),1:$P($P($ZE,"<",2),">"))
"RTN","ZTER",11,0)
 S %ZTER11C=0 I $$NEWERR() S:'$D(%ZTER11S) %ZTER11S=$STACK-1 D STACK^%ZTER1
"RTN","ZTER",12,0)
 I ^%ZOSF("OS")["VAX DSM" K %ZTER11A,%ZTER11B D VXD^%ZTER1 I 1
"RTN","ZTER",13,0)
 E  S %ZTERVAR="%" D:$D(%) VAR:$D(%)#2,SUBS:$D(%)>9 F %ZTER11Z=0:0 S %ZTERVAR=$O(@%ZTERVAR) Q:%ZTERVAR=""  D VAR:$D(@%ZTERVAR)#2,SUBS:$D(@%ZTERVAR)>9
"RTN","ZTER",14,0)
 D GLOB S:%ZTER11C>0 ^%ZTER(1,+$H,1,%ZTER11N,"ZV",0)="^3.0752^"_%ZTER11C_"^"_%ZTER11C S:'$D(^%ZTER(1,"B",+$H)) ^(+$H,+$H)="" S ^%ZTER(1,+$H,1,"B",%ZTER11N,%ZTER11N)=""
"RTN","ZTER",15,0)
LIN ;
"RTN","ZTER",16,0)
 S %ZTY=$P($ZE,","),%ZTX=$P(%ZTY,"^") S:%ZTX[">" %ZTX=$P(%ZTX,">",2)
"RTN","ZTER",17,0)
 I %ZTX'="" S X=$P($P(%ZTY,"^",2),":") I X'="" X ^%ZOSF("TEST") I $T D
"RTN","ZTER",18,0)
 .S XCNP=0,DIF="^TMP($J,""XTER1""," X ^%ZOSF("LOAD") S %ZTY=$P(%ZTX,"+",1) D
"RTN","ZTER",19,0)
 ..I %ZTY'="" F X=0:0 S X=$O(^TMP($J,"XTER1",X)) Q:X'>0  I $P(^(X,0)," ")=%ZTY S X=X+$P(%ZTX,"+",2),%ZTZLIN=^TMP($J,"XTER1",X,0) Q
"RTN","ZTER",20,0)
 ..I %ZTY="" S X=+$P(%ZTX,"+",2) Q:X'>0  S %ZTZLIN=^TMP($J,"XTER1",X,0)
"RTN","ZTER",21,0)
 K ^TMP($J,"XTER1"),XCNP,DIF,%ZTY,%ZTX,X,Y
"RTN","ZTER",22,0)
 S:$D(%ZTZLIN) ^%ZTER(1,+$H,1,%ZTER11N,"LINE")=%ZTZLIN K %ZTZLIN
"RTN","ZTER",23,0)
 I %ZTERROR'="",$D(^%ZTER(2,"B",%ZTERROR)) S %ZTERROR=%ZTERROR_"^"_$P(^%ZTER(2,+$O(^(%ZTERROR,0)),0),"^",2)
"RTN","ZTER",24,0)
 K %ZTER11A,%ZTER11B,%ZTER11C,%ZTER11S,%ZTER11Z,%ZTERVAP,%ZTERVAR,%ZTERSUB,%ZTER11I,%ZTER11D,%ZTER11L,%ZTER11Q,%,%ZTER111,%ZTER112,%H,%ZTER11N
"RTN","ZTER",25,0)
 Q
"RTN","ZTER",26,0)
 ;
"RTN","ZTER",27,0)
VAR I ",%ZTERVAR,%ZTER11Z,%ZTER11A,%ZTER11B,%ZTER11C,%ZTER11N,%ZTER11I,%ZTER11L,%ZTER11S,%ZTERVAP,%ZTERSUB,"'[(","_%ZTERVAR_",") S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)=%ZTERVAR D
"RTN","ZTER",28,0)
 . I $L(@%ZTERVAR)'>255 S ^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,"D")=@%ZTERVAR Q
"RTN","ZTER",29,0)
 . S ^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,"D")=" **** VALUE IS GREATER THAN 255 CHARACTERS (SEE SUBNODES FOR DATA) *** "
"RTN","ZTER",30,0)
 . N %ZTER11,%ZTER12
"RTN","ZTER",31,0)
 . F %ZTER11=1:1 S %ZTER12=$E(@%ZTERVAR,1,245) Q:%ZTER12=""  S @%ZTERVAR=$E(@%ZTERVAR,246,$L(@%ZTERVAR)),^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,"D",%ZTER11)=%ZTER12
"RTN","ZTER",32,0)
 . Q
"RTN","ZTER",33,0)
 Q
"RTN","ZTER",34,0)
 ;
"RTN","ZTER",35,0)
SUBS S %ZTER11S="" Q:"%ZT("=$E(%ZTERVAR,1,4)  Q:",%ZTER11S,%ZTER11L,"[(","_%ZTERVAR_",")  S %ZTERVAP=%ZTERVAR_"(",%ZTERSUB="%ZTER11S)"
"RTN","ZTER",36,0)
 ;
"RTN","ZTER",37,0)
DESC S %ZTER11I=%ZTER11I+1,%ZTER11S(%ZTER11I)=%ZTER11S,%ZTER11S="",%ZTER11L(%ZTER11I)=$L(%ZTERSUB)-9 F %ZTER11Z=0:0 S %ZTER11S=$O(@(%ZTERVAP_%ZTERSUB)) Q:%ZTER11S=""  D SUBX
"RTN","ZTER",38,0)
 S %ZTER11S=%ZTER11S(%ZTER11I) K %ZTER11S(%ZTER11I),%ZTER11L(%ZTER11I) S %ZTER11I=%ZTER11I-1
"RTN","ZTER",39,0)
 Q
"RTN","ZTER",40,0)
 ;
"RTN","ZTER",41,0)
SUBX I $D(@(%ZTERVAP_%ZTERSUB))#10 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)=$P(%ZTERVAP_%ZTERSUB,"%ZTER11S",1)_""""_%ZTER11S_""""_$P(%ZTERVAP_%ZTERSUB,"%ZTER11S",2),^("D")=@(%ZTERVAP_%ZTERSUB)
"RTN","ZTER",42,0)
 I $D(@(%ZTERVAP_%ZTERSUB))\10 S %ZTERSUB=$E(%ZTERSUB,1,%ZTER11L(%ZTER11I))_""""_%ZTER11S_""""_",%ZTER11S)" D DESC S %ZTERSUB=$E(%ZTERSUB,1,%ZTER11L(%ZTER11I))_"%ZTER11S)"
"RTN","ZTER",43,0)
 Q
"RTN","ZTER",44,0)
 ;
"RTN","ZTER",45,0)
GLOB ;
"RTN","ZTER",46,0)
 S %ZTER11D="" F %ZTER11I=0:0 S %ZTER11D=$O(%ZT(%ZTER11D)) Q:%ZTER11D=""  S %ZTER11A=%ZTER11D S:%ZTER11A["$J" %ZTER11B=$J,%ZTER11A=$P(%ZTER11A,"$J",1)_%ZTER11B_$P(%ZTER11A,"$J",2,99) S %ZTER11B=$P(%ZTER11A,")",1) D LOOP
"RTN","ZTER",47,0)
 Q
"RTN","ZTER",48,0)
 ;
"RTN","ZTER",49,0)
LOOP ;
"RTN","ZTER",50,0)
 F %ZTER11I=0:0 S %ZTER11A=$ZO(@%ZTER11A) Q:%ZTER11A'[%ZTER11B  S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)=$P(%ZTER11D,")")_$P(%ZTER11A,%ZTER11B,2),^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,"D")=@%ZTER11A
"RTN","ZTER",51,0)
 Q
"RTN","ZTER",52,0)
SCREEN(ERR) ;Screen out certain errors.
"RTN","ZTER",53,0)
 N %ZTE
"RTN","ZTER",54,0)
 S %ZTE="" F  S %ZTE=$O(^%ZTSCH("ES",%ZTE)) Q:%ZTE=""  Q:ERR[%ZTE
"RTN","ZTER",55,0)
 I %ZTE]"" D  Q 1 ;Skip the recording of the error.
"RTN","ZTER",56,0)
 . I $D(^%ZTSCH("ES",%ZTE,1)) L +^%ZTSCH("ES") S ^(1)=$G(^%ZTSCH("ES",%ZTE,1))+1 L -^%ZTSCH("ES")
"RTN","ZTER",57,0)
 . Q
"RTN","ZTER",58,0)
 Q 0 ;record error
"RTN","ZTER",59,0)
 ;
"RTN","ZTER",60,0)
UNWIND ;Unwind stack for new error trap. Called by app code.
"RTN","ZTER",61,0)
 Q:'$$NEWERR()
"RTN","ZTER",62,0)
 S $ETRAP="D UNW^%ZTER Q",$ECODE=",U1,"
"RTN","ZTER",63,0)
UNW Q:$ESTACK>1  S $ECODE="" Q
"RTN","ZTER",64,0)
 ;
"RTN","ZTER",65,0)
NEWERR() ;Does this OS support the M95 error trapping
"RTN","ZTER",66,0)
 N % S %=$G(^%ZOSF("OS")) Q:%="" 0
"RTN","ZTER",67,0)
 I %["VAX DSM" Q 1
"RTN","ZTER",68,0)
 I %["MSM",$P($ZV,"Version ",2)'<4.3 Q 1
"RTN","ZTER",69,0)
 Q 0
"RTN","ZTER1")
0^16^B7457451
"RTN","ZTER1",1,0)
%ZTER1 ;ISC-SF.SEA/JLI - ERROR TRAP TO LOG ERRORS (VAX LOCAL SYMBOL TABLE) ;07/18/96  12:18
"RTN","ZTER1",2,0)
 ;;8.0;KERNEL;**18,24**;JUL 10, 1995
"RTN","ZTER1",3,0)
VXD ;Record VAX DSM variables
"RTN","ZTER1",4,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,"J")=$J_"^"_$ZC(%GETJPI,0,"PRCNAM")_"^"_$ZC(%GETJPI,0,"USERNAME")_"^"_%ZTER11I_"^"_$ZC(%SYSFAO,"!XL",$J),^%ZTER(1,+$H,1,%ZTER11N,"I")=$IO_"^"_$ZA_"^"_$ZB_"^"_$ZIO K %ZTER11I
"RTN","ZTER1",5,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,"ZH")=$TR($ZH,",","^")
"RTN","ZTER1",6,0)
 I $STACK>100 G VERR
"RTN","ZTER1",7,0)
 S %ZTER111="%" F  D  S %ZTER111=$ZSORT(@%ZTER111) Q:%ZTER111=""  ;Code from DEC
"RTN","ZTER1",8,0)
 . Q:$E(%ZTER111,1,5)="%ZTER"
"RTN","ZTER1",9,0)
 . I $D(@%ZTER111)#2 D VNXT2
"RTN","ZTER1",10,0)
 . I $D(@%ZTER111)>9 D VNXT3
"RTN","ZTER1",11,0)
 . Q
"RTN","ZTER1",12,0)
 Q
"RTN","ZTER1",13,0)
 ;
"RTN","ZTER1",14,0)
VNXT2 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)=%ZTER111,^("D")=$E(@%ZTER111,1,255)
"RTN","ZTER1",15,0)
 Q
"RTN","ZTER1",16,0)
VNXT3 S %ZTER11Q=%ZTER111
"RTN","ZTER1",17,0)
 F  S %ZTER11Q=$Q(@%ZTER11Q) Q:%ZTER11Q=""  S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)=%ZTER11Q,^("D")=$E(@%ZTER11Q,1,255)
"RTN","ZTER1",18,0)
 Q
"RTN","ZTER1",19,0)
 ;
"RTN","ZTER1",20,0)
STACK ;Record the new $STACK variable
"RTN","ZTER1",21,0)
 I $ECODE]"" S $ZE=""
"RTN","ZTER1",22,0)
 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$ECODE",^("D")=$E($ECODE,1,255)
"RTN","ZTER1",23,0)
 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$ESTACK",^("D")=$ESTACK
"RTN","ZTER1",24,0)
 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$STACK",^("D")=$STACK
"RTN","ZTER1",25,0)
 S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$QUIT",^("D")=$QUIT
"RTN","ZTER1",26,0)
 F %=0:1:%ZTER11S S %1=$E(1000+%,2,4) D
"RTN","ZTER1",27,0)
 . S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$STACK("_%1_")",^("D")=$STACK(%)
"RTN","ZTER1",28,0)
 . S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$STACK("_%1_",""ECODE"")",^("D")=$STACK(%,"ECODE")
"RTN","ZTER1",29,0)
 . S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$STACK("_%1_",""PLACE"")",^("D")=$STACK(%,"PLACE")
"RTN","ZTER1",30,0)
 . S %ZTER11C=%ZTER11C+1,^%ZTER(1,+$H,1,%ZTER11N,"ZV",%ZTER11C,0)="$STACK("_%1_",""MCODE"")",^("D")=$STACK(%,"MCODE")
"RTN","ZTER1",31,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,"LINE")=$STACK(%ZTER11S,"MCODE")
"RTN","ZTER1",32,0)
 S $ECODE=""
"RTN","ZTER1",33,0)
 Q
"RTN","ZTER1",34,0)
 ;
"RTN","ZTER1",35,0)
VERR ;
"RTN","ZTER1",36,0)
 S ^%ZTER(1,+$H,1,%ZTER11N,"ZE2")="%DSM-E-ET, Error occurred in %ZTER, "_$ECODE
"RTN","ZTER1",37,0)
 HALT
"RTN","ZTM")
0^3^B20414148
"RTN","ZTM",1,0)
%ZTM ;SEA/RDS-TaskMan: Manager, Part 1 (Main Loop) ;06/14/96  14:08
"RTN","ZTM",2,0)
 ;;8.0;KERNEL;**24**;JUL 10, 1995
"RTN","ZTM",3,0)
 ;
"RTN","ZTM",4,0)
LOOP ;Taskman's Main Loop
"RTN","ZTM",5,0)
 F %ZTLOOP=0:1 S %ZTLOOP=%ZTLOOP#8 D CHECK,SCHQ,IDLE:%ZTCHK
"RTN","ZTM",6,0)
 S %ZTFALL="" G LOOP
"RTN","ZTM",7,0)
 ;
"RTN","ZTM",8,0)
CHECK ;LOOP--Check Status And Update Loop Data
"RTN","ZTM",9,0)
 Q:%ZTLOOP&$G(%ZTCHK)
"RTN","ZTM",10,0)
 I $D(^%ZTSCH("RUN"))[0 K ^%ZTSCH("STATUS",$J) H
"RTN","ZTM",11,0)
 S ^%ZTSCH("RUN")=$H
"RTN","ZTM",12,0)
 I $D(^%ZTSCH("WAIT"))#2 D STATUS("WAIT^Taskman Waiting") H 5 G CHECK
"RTN","ZTM",13,0)
 ;
"RTN","ZTM",14,0)
 I $D(^%ZTSCH("UPDATE",$J))[0 D UPDATE^%ZTM5 D
"RTN","ZTM",15,0)
 . Q:"GP"[%ZTYPE
"RTN","ZTM",16,0)
 . K ^%ZTSCH("STATUS")
"RTN","ZTM",17,0)
 . S ^%ZTSCH("RUN")=%ZTNODE_" is the wrong type of volume set for TaskMan."
"RTN","ZTM",18,0)
 . H
"RTN","ZTM",19,0)
 I %ZTVLI="Y" D STATUS("PAUSE^Logons Inhibited") H 60 G CHECK ;Set in %ZTM5
"RTN","ZTM",20,0)
 I @%ZTNLG D INHIBIT^%ZTM5(1),STATUS("PAUSE^No Signons Allowed") H 60 G CHECK
"RTN","ZTM",21,0)
 I $G(^%ZIS(14.5,"LOGON",%ZTVOL)) D INHIBIT^%ZTM5(0) ;Check field
"RTN","ZTM",22,0)
 I $D(ZTREQUIR)#2 D STATUS("PAUSE^Required link to "_ZTREQUIR_" is down.") H 60 D REQUIR^%ZTM5 G CHECK
"RTN","ZTM",23,0)
 ;
"RTN","ZTM",24,0)
 I $D(^%ZTSCH("LINK"))#2,$$DIFF($H,^("LINK"))>900 D LINK^%ZTM3
"RTN","ZTM",25,0)
 ;
"RTN","ZTM",26,0)
 X ^%ZOSF("ACTJ") S %ZTRUN=%ZTVMJ>Y
"RTN","ZTM",27,0)
 I %ZTRUN,%ZTPFLG("BAL")]"" D BALANCE^%ZTM6 I $D(ZTOVERLD)#2 D STATUS("BALANCE^This cpu ("_%ZTPAIR_") is waiting to balance the load.") H 5 G CHECK
"RTN","ZTM",28,0)
 I %ZTRUN D STATUS("RUN^Main Loop")
"RTN","ZTM",29,0)
 E  D STATUS("RUN^Taskman Job Limit Reached")
"RTN","ZTM",30,0)
 Q
"RTN","ZTM",31,0)
 ;
"RTN","ZTM",32,0)
STATUS(MSG) ;Record TM status
"RTN","ZTM",33,0)
 S ^%ZTSCH("STATUS",$J)=$H_"^"_MSG Q
"RTN","ZTM",34,0)
 ;
"RTN","ZTM",35,0)
SCHQ ;LOOP--Check Schedule List
"RTN","ZTM",36,0)
 S %ZTIME=$$H3($H),ZTDTH=0,%ZTCHK=1,IO=""
"RTN","ZTM",37,0)
S1 S ZTDTH=$O(^%ZTSCH(ZTDTH)) Q:(ZTDTH>%ZTIME)  Q:('ZTDTH)!(ZTDTH'?6.N)  I +ZTDTH<0 K ^%ZTSCH(ZTDTH) G S1
"RTN","ZTM",38,0)
 S ZTSK=0
"RTN","ZTM",39,0)
S2 L  S ZTSK=$O(^%ZTSCH(ZTDTH,ZTSK)) G S1:ZTSK="" S ZTST=$G(^%ZTSCH(ZTDTH,ZTSK))
"RTN","ZTM",40,0)
 L ^%ZTSK(ZTSK):1 G S2:'$T K ^%ZTSCH(ZTDTH,ZTSK)
"RTN","ZTM",41,0)
 I $D(^%ZTSK(ZTSK,0))[0 S:$D(^%ZTSK(ZTSK)) $P(^(ZTSK,.1),U,1,3)="I^"_$H_U_1 G S2
"RTN","ZTM",42,0)
 I $D(^%ZTSK(ZTSK,.1))#2,$P(^(.1),U,10)]"" S $P(^(.1),U,1,3)="D^"_$H_"^1" G S2
"RTN","ZTM",43,0)
 D ^%ZTM1 G S2:%ZTREJCT
"RTN","ZTM",44,0)
 ;
"RTN","ZTM",45,0)
SEND ;Send Task To Submanager
"RTN","ZTM",46,0)
 S %ZTCHK=0,ZTPAIR=""
"RTN","ZTM",47,0)
 I ZTDVOL'=%ZTVOL D XLINK^%ZTM2 G:'ZTJOBIT SCHX
"RTN","ZTM",48,0)
 S $P(^%ZTSK(ZTSK,.1),U,1,2)=$S(ZTYPE="C":"M",1:3)_U_$H
"RTN","ZTM",49,0)
 I (ZTYPE'="C")&(%ZTNODE[ZTNODE) L +^%ZTSCH("JOB"):10 S ^%ZTSCH("JOB",ZTDTH,ZTSK)=IO
"RTN","ZTM",50,0)
 E  L +^%ZTSCH("C"):10 S ZTPAIR=ZTDVOL_$S(ZTNODE]"":":"_ZTNODE,1:""),^%ZTSCH("C",ZTPAIR,ZTDTH,ZTSK)=IO
"RTN","ZTM",51,0)
 I '$D(^%ZTSCH("STOP")),(ZTYPE="C"!(%ZTRUN&'^%ZTSCH("SUB"))),'$$OOS(ZTPAIR) D
"RTN","ZTM",52,0)
 . I 1 X %ZTJOB H %ZTSLO I '$T X %ZTJOB H %ZTSLO
"RTN","ZTM",53,0)
 . Q
"RTN","ZTM",54,0)
SCHX L  K ZTREP Q
"RTN","ZTM",55,0)
 ;
"RTN","ZTM",56,0)
IDLE ;LOOP--DEV Node Maintenance; Backup JOB Commands
"RTN","ZTM",57,0)
 ;only proceed with idle work if 15 seconds since last check
"RTN","ZTM",58,0)
 S (ZTREC,ZTCVOL)="" H 2 Q:%ZTLOOP
"RTN","ZTM",59,0)
 L ^%ZTSCH("IDLE")
"RTN","ZTM",60,0)
 I $$DIFF(%ZTIME,^%ZTSCH("IDLE"),1)<15 L  Q
"RTN","ZTM",61,0)
 S ^%ZTSCH("IDLE")=%ZTIME L
"RTN","ZTM",62,0)
I1 ;
"RTN","ZTM",63,0)
 ;clear out old DEV nodes
"RTN","ZTM",64,0)
 I $D(^%ZTSCH("DEV")) S %ZTIO="" F  S %ZTIO=$O(^%ZTSCH("DEV",%ZTIO)) Q:%ZTIO=""  D
"RTN","ZTM",65,0)
 . L ^%ZTSCH("DEV",%ZTIO):5 I '$T Q
"RTN","ZTM",66,0)
 . N X S X=$G(^%ZTSCH("DEV",%ZTIO)) Q:'$L(X)
"RTN","ZTM",67,0)
 . I $$DIFF(%ZTIME,X,1)>120 K ^%ZTSCH("DEV",%ZTIO)
"RTN","ZTM",68,0)
 . Q
"RTN","ZTM",69,0)
 L  ;clear all locks.
"RTN","ZTM",70,0)
I2 ;
"RTN","ZTM",71,0)
 I $D(^%ZTSCH("STOP")) Q
"RTN","ZTM",72,0)
 ;job new submanagers cross-volume for each unfinished C list
"RTN","ZTM",73,0)
 I $D(^%ZTSCH("C")) D
"RTN","ZTM",74,0)
 . S X="ERCL^%ZTM2",@^%ZOSF("TRAP")
"RTN","ZTM",75,0)
 . S ZTVOL="" F  S ZTVOL=$O(^%ZTSCH("C",ZTVOL)) Q:ZTVOL=""  D
"RTN","ZTM",76,0)
 .. S ZTNODE="",ZTDVOL=ZTVOL S:ZTDVOL[":" ZTNODE=$P(ZTDVOL,":",2),ZTDVOL=$P(ZTDVOL,":")
"RTN","ZTM",77,0)
 .. S X=$G(^%ZTSCH("C",ZTVOL))
"RTN","ZTM",78,0)
 .. I $D(^%ZTSCH("LINK",ZTDVOL))!(X>9)!$$OOS(ZTVOL) Q
"RTN","ZTM",79,0)
 .. S ^%ZTSCH("C",ZTVOL)=X+1
"RTN","ZTM",80,0)
 .. S %ZTCHK=0,ZTUCI=$O(^%ZIS(14.6,"AV",ZTDVOL,""))
"RTN","ZTM",81,0)
 .. I 1 X %ZTJOB H %ZTSLO I '$T X %ZTJOB H %ZTSLO
"RTN","ZTM",82,0)
 .. Q
"RTN","ZTM",83,0)
 . Q
"RTN","ZTM",84,0)
I3 ;job off a new submanager if none are tending the Device List
"RTN","ZTM",85,0)
 I '%ZTRUN Q
"RTN","ZTM",86,0)
 I '^%ZTSCH("SUB"),$O(^%ZTSCH("IO",""))]"" D  Q
"RTN","ZTM",87,0)
 . Q:'$$SUBOK()
"RTN","ZTM",88,0)
 . S %ZTCHK=0,ZTUCI=%ZTUCI,ZTDVOL=%ZTVOL,ZTNODE=""
"RTN","ZTM",89,0)
 . I 1 X %ZTJOB H %ZTSLO I '$T X %ZTJOB H %ZTSLO
"RTN","ZTM",90,0)
 . Q
"RTN","ZTM",91,0)
I4 ;job off a new submanager if the Job List still has tasks
"RTN","ZTM",92,0)
 I $D(^%ZTSCH("JOB")) D
"RTN","ZTM",93,0)
 . ;D SUB^%ZTMS1(-1)
"RTN","ZTM",94,0)
 . Q:'$$SUBOK()  S %ZTCHK=0,ZTUCI=%ZTUCI,ZTDVOL=%ZTVOL,ZTNODE=""
"RTN","ZTM",95,0)
 . I 1 X %ZTJOB H %ZTSLO I '$T X %ZTJOB H %ZTSLO
"RTN","ZTM",96,0)
 . Q
"RTN","ZTM",97,0)
I5 ;Clean up %ZTSCH
"RTN","ZTM",98,0)
 S ZTDTH="0,0" F  S ZTDTH=$O(^%ZTSCH(ZTDTH)) Q:ZTDTH'[","  D
"RTN","ZTM",99,0)
 . N ZTSK,X L +^%ZTSCH(ZTDTH)
"RTN","ZTM",100,0)
 . S ZTSK=$O(^%ZTSCH(ZTDTH,0)) I ZTSK>0 S X=^(ZTSK),^%ZTSCH($$H3(ZTDTH),ZTSK)=X K ^%ZTSCH(ZTDTH,ZTSK)
"RTN","ZTM",101,0)
 . L -^%ZTSCH(ZTDTH)
"RTN","ZTM",102,0)
 . Q
"RTN","ZTM",103,0)
I9 K %ZTVS Q
"RTN","ZTM",104,0)
 ;
"RTN","ZTM",105,0)
DIFF(N,O,T) ;Diff in sec.
"RTN","ZTM",106,0)
 Q:$G(T) N-O ;For new seconds times
"RTN","ZTM",107,0)
 Q N-O*86400-$P(O,",",2)+$P(N,",",2)
"RTN","ZTM",108,0)
 ;
"RTN","ZTM",109,0)
OOS(BV) ;Check if Box-Volume is Out Of Service, Return 1 if OOS.
"RTN","ZTM",110,0)
 Q:BV="" 0 N %
"RTN","ZTM",111,0)
 S %=$O(^%ZIS(14.7,"B",BV,0)),%=$G(^%ZIS(14.7,+%,0))
"RTN","ZTM",112,0)
 Q:%="" 1 Q $P(%,U,11)=1
"RTN","ZTM",113,0)
 ;
"RTN","ZTM",114,0)
H3(%) ;Convert $H to seconds.
"RTN","ZTM",115,0)
 Q 86400*%+$P(%,",",2)
"RTN","ZTM",116,0)
H0(%) ;Covert from seconds to $H
"RTN","ZTM",117,0)
 Q (%\86400)_","_(%#86400)
"RTN","ZTM",118,0)
SUBOK() ;Check if sub's are starting, return 1 if OK
"RTN","ZTM",119,0)
 S ^%ZTSCH("SUB",0)=$G(^%ZTSCH("SUB",0))+1
"RTN","ZTM",120,0)
 Q ^%ZTSCH("SUB",0)<10
"RTN","ZTM5")
0^9^B9979173
"RTN","ZTM5",1,0)
%ZTM5 ;SEA/RDS-TaskMan: Manager, Part 7 (Short Subroutines) ;6/14/96  14:49
"RTN","ZTM5",2,0)
 ;;8.0;KERNEL;**24**;JUL 10, 1995
"RTN","ZTM5",3,0)
 ;
"RTN","ZTM5",4,0)
ER ;primary error trap for manager
"RTN","ZTM5",5,0)
 S %ZTERLGR=$$LGR^%ZOSV
"RTN","ZTM5",6,0)
 S X="ER^%ZTM5",@^%ZOSF("TRAP")
"RTN","ZTM5",7,0)
 L  S ^%ZTSCH("RUN")=$H
"RTN","ZTM5",8,0)
 S ^%ZTSCH("STATUS",$J)=$H_"^ERROR^Recording A Trapped Error."
"RTN","ZTM5",9,0)
 ;
"RTN","ZTM5",10,0)
 S ZTERCODE=$$EC^%ZOSV,ZTE=""
"RTN","ZTM5",11,0)
 F ZTI=1:0 S ZTE=$O(^%ZTSCH("ES",ZTE)) Q:ZTE=""  I ZTERCODE[ZTE S ZTI=0 Q
"RTN","ZTM5",12,0)
 I 'ZTI,'$O(^%ZTSCH("ES",ZTE,"")) G RESTART^%ZTM0
"RTN","ZTM5",13,0)
 I 'ZTI L ^%ZTSCH("ES",ZTE) S ^(1)=$S($D(^(1))[0:1,^(1)<1:1,1:^(1)+1) L  G RESTART^%ZTM0
"RTN","ZTM5",14,0)
 ;
"RTN","ZTM5",15,0)
 L ^%ZTSCH("ER") H 1 S ZT=$H
"RTN","ZTM5",16,0)
 S ^%ZTSCH("ER",+ZT,$P(ZT,",",2))=ZTERCODE
"RTN","ZTM5",17,0)
 S ^($P(ZT,",",2),1)="Caused by the manager." L
"RTN","ZTM5",18,0)
 ;
"RTN","ZTM5",19,0)
 D @^%ZOSF("ERRTN")
"RTN","ZTM5",20,0)
 C:$I>0 $I K ZTERCODE
"RTN","ZTM5",21,0)
 H 10 G RESTART^%ZTM0 ;Lets wait before restarting.
"RTN","ZTM5",22,0)
 ;
"RTN","ZTM5",23,0)
UPDATE ;CHECK^%ZTM/LOOKUP^%ZTM0--update TaskMan site parameters
"RTN","ZTM5",24,0)
 L ^%ZTSCH("UPDATE",$J)
"RTN","ZTM5",25,0)
 S %ZTVSN=+$O(^%ZIS(14.5,"B",%ZTVOL,"")),%ZTVSS=$G(^%ZIS(14.5,%ZTVSN,0))
"RTN","ZTM5",26,0)
 S %ZTVLI=($P(%ZTVSS,U,2)="Y") ;Did site set Inhibit.
"RTN","ZTM5",27,0)
 S %ZTYPE("V")=$P(%ZTVSS,U,10) ;get vol set type
"RTN","ZTM5",28,0)
U1 ;
"RTN","ZTM5",29,0)
 S %ZTPN=+$O(^%ZIS(14.7,"B",%ZTPAIR,"")),%ZTPS=$G(^%ZIS(14.7,%ZTPN,0))
"RTN","ZTM5",30,0)
 S %ZTPT=+$P(%ZTPS,U,4)
"RTN","ZTM5",31,0)
 S %ZTSIZ=+$P(%ZTPS,U,5) ;par size
"RTN","ZTM5",32,0)
 I '%ZTSIZ,%ZTOS'["VAX DSM",%ZTOS["DSM" S %ZTSIZ=32
"RTN","ZTM5",33,0)
 S %ZTRET=+$P(%ZTPS,U,6)
"RTN","ZTM5",34,0)
 S %ZTVMJ=+$P(%ZTPS,U,7) ;TM job limit
"RTN","ZTM5",35,0)
 S %ZTSLO=+$P(%ZTPS,U,8) ;TM slow down
"RTN","ZTM5",36,0)
 S %ZTYPE=$P(%ZTPS,U,9),%ZTPFLG("DCL")=$P(%ZTPS,U,10) ;TM mode, VAX DCL
"RTN","ZTM5",37,0)
 S %ZTPFLG("BAL")=$E($G(^%ZIS(14.7,%ZTPN,2)),1,20)
"RTN","ZTM5",38,0)
 S %ZTPFLG("START")=+$H
"RTN","ZTM5",39,0)
 S ^%ZTSCH("UPDATE",$J)=$H
"RTN","ZTM5",40,0)
 L
"RTN","ZTM5",41,0)
 ;
"RTN","ZTM5",42,0)
REQUIR ;UPDATE/CHECK^%ZTM--ensure required links are available
"RTN","ZTM5",43,0)
 K ZTREQUIR
"RTN","ZTM5",44,0)
 S ZT1="" F ZT=0:0 S ZT1=$O(^%ZIS(14.5,ZT1)) Q:'ZT1  I $D(^%ZIS(14.5,ZT1,0))#2 S ZTS=^(0) I $P(ZTS,U,5)="Y" D TEST I $D(ZTREQUIR)#2 Q
"RTN","ZTM5",45,0)
 K ZT,ZT1,ZTN,ZTS,ZTU
"RTN","ZTM5",46,0)
 Q
"RTN","ZTM5",47,0)
 ;
"RTN","ZTM5",48,0)
TEST ;REQUIR--test a required volume set
"RTN","ZTM5",49,0)
 S ZTN=$P(ZTS,U) I ZTN="" Q
"RTN","ZTM5",50,0)
 I ZTN=%ZTVOL Q
"RTN","ZTM5",51,0)
 I $P(ZTS,U,3)="N" S ZTREQUIR=ZTN Q
"RTN","ZTM5",52,0)
 I $P(ZTS,U,4)="Y" S ZTREQUIR=ZTN Q
"RTN","ZTM5",53,0)
 S ZTU=$O(^%ZIS(14.6,"AV",ZTN,"")) I ZTU="" Q
"RTN","ZTM5",54,0)
 S X="ERTEST^%ZTM5",@^%ZOSF("TRAP")
"RTN","ZTM5",55,0)
 S X=$D(^[ZTU,ZTN]DIC(0))
"RTN","ZTM5",56,0)
 S X="",@^%ZOSF("TRAP")
"RTN","ZTM5",57,0)
 L ^%ZTSCH("LINK",ZTN)
"RTN","ZTM5",58,0)
 I $D(^%ZTSCH("LINK",ZTN)) S ^%ZTSCH("LINK")=0
"RTN","ZTM5",59,0)
 L  Q
"RTN","ZTM5",60,0)
 ;
"RTN","ZTM5",61,0)
ERTEST ;TEST--trap if required link is down
"RTN","ZTM5",62,0)
 S X="",@^%ZOSF("TRAP")
"RTN","ZTM5",63,0)
 S ZTREQUIR=ZTN
"RTN","ZTM5",64,0)
 Q
"RTN","ZTM5",65,0)
 ;
"RTN","ZTM5",66,0)
LINK(ZTVOL) ;internal Kernel extrinsic function
"RTN","ZTM5",67,0)
 ;input--volume set where task should run
"RTN","ZTM5",68,0)
 ;output--UCI,volume set where record must be created
"RTN","ZTM5",69,0)
 ;after call check 1--if value is "", the input or file is bad
"RTN","ZTM5",70,0)
 ;after call check 2--if $P(value,",",2) is current volume set then
"RTN","ZTM5",71,0)
 ;...no extended reference should be used
"RTN","ZTM5",72,0)
 ;
"RTN","ZTM5",73,0)
L0 ;was a volume set passed in?
"RTN","ZTM5",74,0)
 N ZTN,ZTU,ZTV,ZTVD,ZTVN
"RTN","ZTM5",75,0)
 I $G(ZTVOL)'?2.7U Q ""
"RTN","ZTM5",76,0)
 ;
"RTN","ZTM5",77,0)
L1 ;is this volume set on file?
"RTN","ZTM5",78,0)
 S ZTVN=$O(^%ZIS(14.5,"B",ZTVOL,""))
"RTN","ZTM5",79,0)
 I ZTVN="" Q ""
"RTN","ZTM5",80,0)
 I $D(^%ZIS(14.5,ZTVN,0))[0 Q ""
"RTN","ZTM5",81,0)
 S ZTVD=^%ZIS(14.5,ZTVN,0)
"RTN","ZTM5",82,0)
 ;
"RTN","ZTM5",83,0)
L2 ;is there a TaskMan Files Volume Set?  if not, skip next section
"RTN","ZTM5",84,0)
 S ZTN=$P(ZTVD,"^",7)
"RTN","ZTM5",85,0)
 I ZTN="" S ZTV=ZTVOL G L4
"RTN","ZTM5",86,0)
 ;
"RTN","ZTM5",87,0)
L3 ;if there is a separate TaskMan Files Volume Set, is it on file?
"RTN","ZTM5",88,0)
 I $D(^%ZIS(14.5,ZTN,0))[0 Q ""
"RTN","ZTM5",89,0)
 S ZTVD=^%ZIS(14.5,ZTN,0)
"RTN","ZTM5",90,0)
 S ZTV=$P(ZTVD,"^")
"RTN","ZTM5",91,0)
 I ZTV="" Q ""
"RTN","ZTM5",92,0)
 ;
"RTN","ZTM5",93,0)
L4 ;if there is a TaskMan Files UCI, return UCI,volume set
"RTN","ZTM5",94,0)
 S ZTU=$P(ZTVD,"^",6)
"RTN","ZTM5",95,0)
 I ZTU="" Q ""
"RTN","ZTM5",96,0)
 Q ZTU_","_ZTV
"RTN","ZTM5",97,0)
 ;
"RTN","ZTM5",98,0)
 ;
"RTN","ZTM5",99,0)
INHIBIT(Y) ;Set/Clear the Inhibit logon field
"RTN","ZTM5",100,0)
 I Y=1 S $P(^%ZIS(14.5,%ZTVSN,0),U,2)="S",^%ZIS(14.5,"LOGON",%ZTVOL)=1 Q
"RTN","ZTM5",101,0)
 I Y=0 S $P(^%ZIS(14.5,%ZTVSN,0),U,2)="N" K ^%ZIS(14.5,"LOGON",%ZTVOL) Q
"RTN","ZTM5",102,0)
 Q
"RTN","ZTMDCL")
0^11^B616863
"RTN","ZTMDCL",1,0)
ZTMDCL ;SFISC/RWF - Run Taskman with a DCL context. ;05/17/96  07:47
"RTN","ZTMDCL",2,0)
 ;;8.0;KERNEL;**24**;JUL 03, 1995
"RTN","ZTMDCL",3,0)
 ;This assumes that TM was started with a DCL context.
"RTN","ZTMDCL",4,0)
 N QUEUE S QUEUE=$S(ZTNODE]"":ZTNODE,1:%ZTNODE)
"RTN","ZTMDCL",5,0)
 ;Use the next line if you want/need log files
"RTN","ZTMDCL",6,0)
 ;S %SPAWN="SUBMIT/NOPRINT/NOKEEP/QUEUE=TM$"_QUEUE_" ZTMSWDCL.COM/PARAM=("_%ZTPFLG("DCL")_","_ZTUCI_","_ZTDVOL_")"
"RTN","ZTMDCL",7,0)
 ;Use the next line if you don't need log files.
"RTN","ZTMDCL",8,0)
 S %SPAWN="SUBMIT/NOPRINT/NOLOG/QUEUE=TM$"_QUEUE_" ZTMSWDCL.COM/PARAM=("_%ZTPFLG("DCL")_","_ZTUCI_","_ZTDVOL_")"
"RTN","ZTMDCL",9,0)
 S %=$ZC(%SPAWN,%SPAWN) I 1
"RTN","ZTMDCL",10,0)
 Q
"RTN","ZTMS")
0^4^B11085603
"RTN","ZTMS",1,0)
%ZTMS ;SEA/RDS-TaskMan: Submanager, (Entry & Trap) ;07/18/96  12:12
"RTN","ZTMS",2,0)
 ;;8.0;KERNEL;**2,18,24**;Jul 10, 1995
"RTN","ZTMS",3,0)
 ;
"RTN","ZTMS",4,0)
START ;Bottom level of submanager
"RTN","ZTMS",5,0)
 I $$NEWERR^%ZTER() S $ETRAP="S %ZTER11S=$STACK D ERROR^%ZTMS HALT"
"RTN","ZTMS",6,0)
 E  S X="ERROR^%ZTMS",@^%ZOSF("TRAP")
"RTN","ZTMS",7,0)
 I $D(^%ZTSCH("STOP")) Q
"RTN","ZTMS",8,0)
 S ZTQUEUED=0,U="^",^%ZTSCH("SUB",0)=0
"RTN","ZTMS",9,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("$STRT ZTMS")
"RTN","ZTMS",10,0)
 S X="Sub "_$J D SETENV^%ZOSV
"RTN","ZTMS",11,0)
 D PARAMS
"RTN","ZTMS",12,0)
 I '$D(ZTOUT) G SUBMGR^%ZTMS1
"RTN","ZTMS",13,0)
QUIT I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("$STOP ZTMS")
"RTN","ZTMS",14,0)
 Q
"RTN","ZTMS",15,0)
PARAMS ;
"RTN","ZTMS",16,0)
 ;START--lookup parameters
"RTN","ZTMS",17,0)
 X ^%ZOSF("PRIINQ") S %ZTMS("PRIO")=Y ;Get starting priority
"RTN","ZTMS",18,0)
 D GETENV^%ZOSV
"RTN","ZTMS",19,0)
 S ZTCPU=$P(Y,U,2),ZTNODE=$P(Y,U,3),ZTPAIR=$P(Y,U,4),ZTUCI=$P(Y,U)_$S(ZTCPU]"":","_ZTCPU,1:"")
"RTN","ZTMS",20,0)
 S X=$O(^%ZIS(14.7,"B",ZTPAIR,"")),ZTPRE=0,ZTYPE=""
"RTN","ZTMS",21,0)
 I X]"" S %=$G(^%ZIS(14.7,X,0)),ZTPRE=+$P(%,U,6),ZTYPE=$P(%,U,9)
"RTN","ZTMS",22,0)
 I 'X S ZTOUT=1 Q
"RTN","ZTMS",23,0)
 I "FO"[ZTYPE S ZTOUT=1 Q  ;SM only run on C,P,G types
"RTN","ZTMS",24,0)
 Q
"RTN","ZTMS",25,0)
ERROR ;START--trap
"RTN","ZTMS",26,0)
 ;prepare to handle error, set backup trap
"RTN","ZTMS",27,0)
 S %ZTERLGR=$$LGR^%ZOSV
"RTN","ZTMS",28,0)
 S %ZTME=$$EC^%ZOSV
"RTN","ZTMS",29,0)
 I $G(^%ZOSF("OS"))["VAX DSM" S $ETRAP="D ERROR2^%ZTMS0 HALT"
"RTN","ZTMS",30,0)
 E  S %ZX=$G(X,"undef"),X="ERROR2^%ZTMS0",@^%ZOSF("TRAP")
"RTN","ZTMS",31,0)
 S %ZTMETSK=$S($D(%ZTTV)#2:$P(%ZTTV,"^",4),$G(ZTSK)>0:ZTSK,1:0)
"RTN","ZTMS",32,0)
 I %ZTMETSK L ^%ZTSK(%ZTMETSK) ;Unlock all other locks
"RTN","ZTMS",33,0)
 I $G(IO)]"" L +^%ZTSCH("DEV",IO) ;Keep other tasks from IO device.
"RTN","ZTMS",34,0)
 ;Check if to record error
"RTN","ZTMS",35,0)
 I '$$SCREEN^%ZTER(%ZTME) D
"RTN","ZTMS",36,0)
 . D ^%ZTER ;Kernel error file
"RTN","ZTMS",37,0)
 . ;log error and context in TaskMan Error file
"RTN","ZTMS",38,0)
 . L +^%ZTSCH("ER") H 1 S ZTERROH=$H
"RTN","ZTMS",39,0)
 . S ^%ZTSCH("ER",+ZTERROH,$P(ZTERROH,",",2))=%ZTME
"RTN","ZTMS",40,0)
 . D XREF^%ZTMS0
"RTN","ZTMS",41,0)
 . S ^%ZTSCH("ER",+ZTERROH,$P(ZTERROH,",",2),1)=ZTERROX1
"RTN","ZTMS",42,0)
 . L -^%ZTSCH("ER")
"RTN","ZTMS",43,0)
 . Q
"RTN","ZTMS",44,0)
 ;
"RTN","ZTMS",45,0)
 I $D(ZTDEVOK) S $P(^%ZTSCH("IO"),U,2)=ZTDEVOK ;Have others skip dev.
"RTN","ZTMS",46,0)
 ;Update Task file entry
"RTN","ZTMS",47,0)
 I $G(ZTQUEUED),%ZTMETSK,$D(^%ZTSK(%ZTMETSK)) D STATUS^%ZTMS0
"RTN","ZTMS",48,0)
 ;
"RTN","ZTMS",49,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("$ETRP ZTMS")
"RTN","ZTMS",50,0)
 I ZTQUEUED>.9,%ZTMETSK>0,$G(DUZ)>.9,$D(^DD(8992,.01,0)) D
"RTN","ZTMS",51,0)
 . S XQA(DUZ)="",XQAMSG="Your task #"_%ZTMETSK_" stopped because of an error",XQADATA=%ZTMETSK,XQAROU="XQA^XUTMUTL"
"RTN","ZTMS",52,0)
 . D SETUP^XQALERT Q
"RTN","ZTMS",53,0)
 ;
"RTN","ZTMS",54,0)
CLEAN ;clean up global data related to this process
"RTN","ZTMS",55,0)
 I $G(ZTQUEUED)>.9 K ^%ZTSCH("TASK",ZTQUEUED)
"RTN","ZTMS",56,0)
 K ^TMP($J),^UTILITY($J),^XUTL("XQ",$J)
"RTN","ZTMS",57,0)
 I '$G(ZTQUEUED) D SUB^%ZTMS1(-1)
"RTN","ZTMS",58,0)
 I $D(ZTDEVN)#2,$D(%ZTIO)#2,%ZTIO]"" D DEVLK^%ZTMS1(-1,%ZTIO)
"RTN","ZTMS",59,0)
 I $D(ZTDEVOK)#2 D DEVBAD^%ZTMS0
"RTN","ZTMS",60,0)
 I $G(ZTSYNCFL)]"" S X=$$SYNCFLG^%ZTMS2("S",ZTSYNCFL,"","Stopped because of an error")
"RTN","ZTMS",61,0)
 ;
"RTN","ZTMS",62,0)
CLOSE ;close i/o device after error
"RTN","ZTMS",63,0)
 D ERCLOZ^%ZTMS0
"RTN","ZTMS",64,0)
 I $G(IO)]"" C IO H 5 ;In case of a port problem give it time to reset.
"RTN","ZTMS",65,0)
 ;
"RTN","ZTMS",66,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("$ESTP ZTMS")
"RTN","ZTMS",67,0)
 I ZTQUEUED=.5,%ZTMETSK>0,$P($G(^%ZTSK(%ZTMETSK,.12)),"^")<5 D  ;Only try 5 times
"RTN","ZTMS",68,0)
 . S $P(^(.12),"^")=^%ZTSK(%ZTMETSK,.12)+1
"RTN","ZTMS",69,0)
 . S ^%ZTSCH($$NEWH^%ZTMS2($H,600),%ZTMETSK)=""
"RTN","ZTMS",70,0)
 HALT  ;Start a new process to continue
"RTN","ZTMS0")
0^13^B6272720
"RTN","ZTMS0",1,0)
%ZTMS0 ;SEA/RDS-TaskMan: Submanager, Part 2 (Trap Functions) ;05/20/96  10:37
"RTN","ZTMS0",2,0)
 ;;8.0;KERNEL;**24**;JUL 10, 1995
"RTN","ZTMS0",3,0)
 ;
"RTN","ZTMS0",4,0)
ERROR2 ;ERROR--trap
"RTN","ZTMS0",5,0)
 L ^%ZTSCH("ER") H 1 S ZTH=$H
"RTN","ZTMS0",6,0)
 S ^%ZTSCH("ER",+ZTH,$P(ZTH,",",2))=$$EC^%ZOSV
"RTN","ZTMS0",7,0)
 S ^%ZTSCH("ER",+ZTH,$P(ZTH,",",2),1)="Caused by the submanager while trapping an error."
"RTN","ZTMS0",8,0)
 L
"RTN","ZTMS0",9,0)
 HALT
"RTN","ZTMS0",10,0)
 ;
"RTN","ZTMS0",11,0)
STATUS ;ERROR--update task's status in Task File, Call w/ ^%ZTSK locked
"RTN","ZTMS0",12,0)
 S ZTE=$E(%ZTME,1,70)
"RTN","ZTMS0",13,0)
 S ZTE=$TR(ZTE,"^","~")
"RTN","ZTMS0",14,0)
 S $P(^%ZTSK(%ZTMETSK,.1),"^",1,3)=$S(ZTQUEUED>.5:"C^",1:"L^")_$H_"^"_ZTE
"RTN","ZTMS0",15,0)
 S $P(^%ZTSK(%ZTMETSK,.12),"^",2,9)=ZTERROH_"^"_%ZTME
"RTN","ZTMS0",16,0)
 S ^%ZTSK(%ZTMETSK,.12,ZTERROH)=%ZTME
"RTN","ZTMS0",17,0)
 Q
"RTN","ZTMS0",18,0)
 ;
"RTN","ZTMS0",19,0)
DEVBAD ;ERROR--dequeue all entries for a bad device
"RTN","ZTMS0",20,0)
 N ZT,ZT1,ZT2,ZT3,ZT4
"RTN","ZTMS0",21,0)
 L +^%ZTSCH("IO"):5 Q:'$T  S $P(^%ZTSCH("IO"),"^")=$H
"RTN","ZTMS0",22,0)
 S ZT1="IO",ZT2=ZTDEVOK,ZT3=""
"RTN","ZTMS0",23,0)
 F  S ZT3=$O(^%ZTSCH(ZT1,ZT2,ZT3)),ZT4="" Q:ZT3=""  F  S ZT4=$O(^%ZTSCH(ZT1,ZT2,ZT3,ZT4)) Q:ZT4=""  L +^%ZTSK(ZT4) D DQ L -^%ZTSK(ZT4)
"RTN","ZTMS0",24,0)
 K ^%ZTSCH("IO",ZTDEVOK)
"RTN","ZTMS0",25,0)
 I $O(^%ZTSCH("IO",""))="" K ^%ZTSCH("IO")
"RTN","ZTMS0",26,0)
 L -^%ZTSCH("IO")
"RTN","ZTMS0",27,0)
 Q
"RTN","ZTMS0",28,0)
 ;
"RTN","ZTMS0",29,0)
DQ ;DEVBAD--remove a task from the waiting list for a bad device
"RTN","ZTMS0",30,0)
 K ^%ZTSCH(ZT1,ZT2,ZT3,ZT4)
"RTN","ZTMS0",31,0)
 S $P(^%ZTSK(ZT4,.1),"^",1,3)="B^"_$H_"^BAD IO DEVICE "_ZT2
"RTN","ZTMS0",32,0)
 K ^%ZTSK(ZT4,.26,ZT2)
"RTN","ZTMS0",33,0)
 I $O(^%ZTSK(ZT4,.26,""))]"" Q
"RTN","ZTMS0",34,0)
 K ^%ZTSK(ZT4,.26)
"RTN","ZTMS0",35,0)
 Q
"RTN","ZTMS0",36,0)
 ;
"RTN","ZTMS0",37,0)
ERCLOZ ;ERROR--close device after error
"RTN","ZTMS0",38,0)
 I %ZTME["data set hang-up" Q
"RTN","ZTMS0",39,0)
 I %ZTME["CLOSERR" Q
"RTN","ZTMS0",40,0)
 I %ZTME["DSCON" Q
"RTN","ZTMS0",41,0)
 I '$D(ZTQUEUED) Q:$D(IO)[0  Q:IO=""  C:$O(^%ZISL(3.54,"B",IO,""))="" IO Q
"RTN","ZTMS0",42,0)
 I '$D(%ZTTV) Q
"RTN","ZTMS0",43,0)
 S IOS=$P(%ZTTV,"^",2),(IO,IO(0))=$P(%ZTTV,"^",5),IOT=$P(%ZTTV,"^",6),IOF=$P(%ZTTV,"^",11),IOST=$P(%ZTTV,"^",12),IO("C")=""
"RTN","ZTMS0",44,0)
 D ^%ZISC
"RTN","ZTMS0",45,0)
 Q
"RTN","ZTMS0",46,0)
 ;
"RTN","ZTMS0",47,0)
XREF ;ERROR--cross-reference TaskMan Error file entry by context of error
"RTN","ZTMS0",48,0)
 S ZTERROX=$S('%ZTMETSK:"an unknown task.",1:"Task # "_%ZTMETSK_".")
"RTN","ZTMS0",49,0)
 S ZTQUEUED=$G(ZTQUEUED)
"RTN","ZTMS0",50,0)
 I ZTQUEUED=0 S ZTERROX1="Caused by the submanager." Q
"RTN","ZTMS0",51,0)
 I ZTQUEUED=.5 S ZTERROX1="Caused by the submanager while preparing "_ZTERROX Q
"RTN","ZTMS0",52,0)
 I ZTQUEUED=.6 S ZTERROX1="Caused by submanager after "_ZTERROX Q
"RTN","ZTMS0",53,0)
 S ZTERROX1="Caused by "_ZTERROX
"RTN","ZTMS0",54,0)
 Q
"RTN","ZTMS0",55,0)
 ;
"RTN","ZUVXD")
0^1^B10098055
"RTN","ZUVXD",1,0)
ZU ;SF/JLI,RWF - For DSM, TIE ALL TERMINALS TO THIS ROUTINE!! ;5/15/96  07:25
"RTN","ZUVXD",2,0)
 ;;8.0;KERNEL;**13,24**;Jul 10, 1995
"RTN","ZUVXD",3,0)
 ;FOR VAX-DSM V5 & V6
"RTN","ZUVXD",4,0)
EN ;I '$D(X) X ^%ZOSF("PROGMODE") I 'Y,$&ZLIB.%GETJPI($J,"CPUTIM")<400 D  
"RTN","ZUVXD",5,0)
 ;. S %=$&ZLIB.%GETJPI($J,"LOGINTIM"),%ZH0="0,,"_%_",,,,0,0"
"RTN","ZUVXD",6,0)
 ;. S:$E($ZV,10,12)>5.1 %=$E(%,13,23) S XRT0=+$H_","_($P(%,":")*3600+($P(%,":",2)*60)+$P(%,":",3)),XRTL=$ZU(0),XRTN=$T(+0) D T1^%ZOSV
"RTN","ZUVXD",7,0)
 S X=$&ZLIB.%DISABLCTRL($C(25)) U $I:NOCENABLE
"RTN","ZUVXD",8,0)
 I $D(^XTV(8989.3,1,"XUCP")),^("XUCP")="Y" D LOGRSRC^%ZOSV("DSMIN")
"RTN","ZUVXD",9,0)
 S ZUGUI2=$&ZLIB.%TRNLNM("DECW$DISPLAY",,,,,"VALUE")
"RTN","ZUVXD",10,0)
 N $ESTACK,$ETRAP S $ETRAP="S %ZTER11S=$STACK D ERR^ZU Q:$QUIT 0 Q"
"RTN","ZUVXD",11,0)
 G ^XUSG:$G(ZUGUI1),^XUS
"RTN","ZUVXD",12,0)
 ;
"RTN","ZUVXD",13,0)
G ;Entry point for GUI device.
"RTN","ZUVXD",14,0)
 S ZUGUI1=1 G EN
"RTN","ZUVXD",15,0)
ERR ;Come here on error
"RTN","ZUVXD",16,0)
 S $ETRAP="D UNWIND^ZU" L  U $I:NOCENABLE
"RTN","ZUVXD",17,0)
 Q:$ECODE["<PROG>"
"RTN","ZUVXD",18,0)
 I $ZE["^XUS1A:2, %DSM-E-WRITERR" G HALT
"RTN","ZUVXD",19,0)
 I $G(IO)]"",$D(IO(1,IO)),$E($G(IOST))="P" U IO W @$S($D(IOF):IOF,1:"#")
"RTN","ZUVXD",20,0)
 I $G(IO(0))]"" U IO(0) W !!,"RECORDING THAT AN ERROR OCCURRED ---",!!?15,"Sorry 'bout that",!,*7,!?10,"$STACK=",$STACK,"  $ECODE=",$ECODE,!?10,"$ZERROR=",$ZERROR
"RTN","ZUVXD",21,0)
 S %ZTERLGR=$ZR,%ZT("^XUTL(""XQ"",$J)")="" D ^%ZTER K %ZT S XUERF="" ; Capture symbol table first!
"RTN","ZUVXD",22,0)
 I $D(%ZTERROR),$P(%ZTERROR,"^",2)="F" H  ; Halt immediately for disaster type FATAL errors
"RTN","ZUVXD",23,0)
 ;U $I:NOCENABLE D PROGMODE^%ZOSV I Y U $I:CENABLE Q
"RTN","ZUVXD",24,0)
 I $G(DUZ)'>0 HALT
"RTN","ZUVXD",25,0)
 ;
"RTN","ZUVXD",26,0)
CTRLC I $D(IO)=11 U IO(0) C:IO'=IO(0) IO S IO=IO(0)
"RTN","ZUVXD",27,0)
 W:$ZE["-CTLC" !,"--Interrupt Acknowledged",!
"RTN","ZUVXD",28,0)
 D KILL1^XUSCLEAN ;Clean up symbol table
"RTN","ZUVXD",29,0)
 S $ECODE=",<<POP>>,"
"RTN","ZUVXD",30,0)
 Q
"RTN","ZUVXD",31,0)
 ;
"RTN","ZUVXD",32,0)
UNWIND ;Unwind the stack
"RTN","ZUVXD",33,0)
 Q:$ESTACK>1  G CONT:$ECODE["<<HALT>>",CTRLC2:$ECODE["<<POP>>"
"RTN","ZUVXD",34,0)
 S $ECODE=""
"RTN","ZUVXD",35,0)
 Q
"RTN","ZUVXD",36,0)
 ;
"RTN","ZUVXD",37,0)
CTRLC2 S $ECODE="" G:$G(^XUTL("XQ",$J,"T"))<2 ^XUSCLEAN
"RTN","ZUVXD",38,0)
 S ^XUTL("XQ",$J,"T")=1,XQY=$G(^(1)),XQY0=$P(XQY,"^",2,99)
"RTN","ZUVXD",39,0)
 G:$P(XQY0,"^",4)'="M" CTRLC2
"RTN","ZUVXD",40,0)
 S XQPSM=$P(XQY,"^",1),XQY=+XQPSM,XQPSM=$P(XQPSM,XQY,2,3)
"RTN","ZUVXD",41,0)
 G:'XQY ^XUSCLEAN
"RTN","ZUVXD",42,0)
 S $ECODE="",$ETRAP="S %ZTER11S=$STACK D ERR^ZU Q:$QUIT 0 Q" G M1^XQ
"RTN","ZUVXD",43,0)
 ;
"RTN","ZUVXD",44,0)
HALT I $D(^XUTL("XQ",$J)) D:$D(DUZ)#2 BYE^XUSCLEAN
"RTN","ZUVXD",45,0)
 I '$ESTACK G CONT
"RTN","ZUVXD",46,0)
 S $ETRAP="D UNWIND^ZU" ;Set new trap
"RTN","ZUVXD",47,0)
 S $ECODE=",<<HALT>>," ;Cause error to unwind stack
"RTN","ZUVXD",48,0)
 Q
"RTN","ZUVXD",49,0)
CONT ;
"RTN","ZUVXD",50,0)
 S $ECODE="",$ETRAP=""
"RTN","ZUVXD",51,0)
 I $D(^XTV(8989.3,1,"XUCP")),^("XUCP")="Y" D LOGRSRC^%ZOSV("DSMOUT")
"RTN","ZUVXD",52,0)
 I $&ZLIB.%GETSYM("DHCP$UCI_CHANGE") HALT  ;User changed UCI's
"RTN","ZUVXD",53,0)
 I $L($&ZLIB.%GETSYM("ZSLOT")) QUIT  ;Quit upto ZSLOT
"RTN","ZUVXD",54,0)
 S %=$&ZLIB.%GETDVI($I,"TT_DIALUP") I %!$D(XQXFLG("HALT")) HALT
"RTN","ZUVXD",55,0)
 I ($P["_TNA")!$D(XQXFLG("HALT")) HALT  ;Check for TelNet
"RTN","ZUVXD",56,0)
 S X="Waiting "_($J#1000000) D SETENV^%ZOSV ;Change VMS name
"RTN","ZUVXD",57,0)
 U $I:NOCENABLE R !,"Enter return to continue: ",X:600 S:'$T X="^" G:X'="^" ^ZU
"RTN","ZUVXD",58,0)
 I $D(^XTV(8989.3,1,"XUCP")),^("XUCP")="Y" D LOGRSRC^%ZOSV("DSMHALT")
"RTN","ZUVXD",59,0)
 HALT
"RTN","ZUVXD",60,0)
SLOT ;Entry point from ZSLOT
"RTN","ZUVXD",61,0)
 N ZIO,ZTIME
"RTN","ZUVXD",62,0)
 D LOG G EN
"RTN","ZUVXD",63,0)
 ;
"RTN","ZUVXD",64,0)
LOG ;Define some nessary Logical names for ZSLOT
"RTN","ZUVXD",65,0)
 S %=$&ZLIB.%CRELOG("SYS$INPUT",$I,"SUPERVISOR")
"RTN","ZUVXD",66,0)
 S %=$&ZLIB.%CRELOG("SYS$OUTPUT",$I,"SUPERVISOR")
"RTN","ZUVXD",67,0)
 S %=$&ZLIB.%CRELOG("SYS$COMMAND",$I,"SUPERVISOR")
"RTN","ZUVXD",68,0)
 Q
"VER")
8.0^21.0
"^DD",14.5,14.5,1,0)
INHIBIT LOGONS?^S^Y:YES;N:NO;S:SYSTEM SHUTDOWN;^0;2^Q
"^DD",14.5,14.5,1,1,0)
^.1
"^DD",14.5,14.5,1,1,1,0)
14.5^AE^MUMPS
"^DD",14.5,14.5,1,1,1,1)
I X]"" D ^XUTMG14P
"^DD",14.5,14.5,1,1,1,2)
Q
"^DD",14.5,14.5,1,1,1,"%D",0)
^^1^1^2920513^^^^
"^DD",14.5,14.5,1,1,1,"%D",1,0)
This cross-reference notifies TaskMan of changes to the field.
"^DD",14.5,14.5,1,1,1,"DT")
2910213
"^DD",14.5,14.5,1,1,2,0)
14.5^AF^MUMPS
"^DD",14.5,14.5,1,1,2,1)
S ^%ZIS(14.5,"LOGON",$P(^%ZIS(14.5,DA,0),U))=("YS"[X)
"^DD",14.5,14.5,1,1,2,2)
K ^%ZIS(14.5,"LOGON",$P(^%ZIS(14.5,DA,0),U))
"^DD",14.5,14.5,1,1,2,3)
Tells MenuMan, Security, and TaskMan when logons are inhibited.
"^DD",14.5,14.5,1,1,2,"%D",0)
^^3^3^2920706^^
"^DD",14.5,14.5,1,1,2,"%D",1,0)
This cross-reference sets and kills the flag that tells MenuMan, Security,
"^DD",14.5,14.5,1,1,2,"%D",2,0)
and TaskMan that logons are inhibited for this volume set.  The flag is
"^DD",14.5,14.5,1,1,2,"%D",3,0)
kept at ^%ZIS(14.5,"LOGON",volume set name).
"^DD",14.5,14.5,1,1,2,"DT")
2920706
"^DD",14.5,14.5,1,10)
System manager
"^DD",14.5,14.5,1,11,0)
^.2LAP^1^1
"^DD",14.5,14.5,1,11,1,0)
1
"^DD",14.5,14.5,1,21,0)
^^5^5^2960614^^^
"^DD",14.5,14.5,1,21,1,0)
Answering YES will cause TaskMan to notify Sign-on that logons are now
"^DD",14.5,14.5,1,21,2,0)
prohibited, and to stop processing tasks until logons are allowed again.
"^DD",14.5,14.5,1,21,3,0)
 
"^DD",14.5,14.5,1,21,4,0)
If set to SYSTEM SHUTDOWN then taskman set this because of a pending
"^DD",14.5,14.5,1,21,5,0)
shutdown. Taskman will clear this flag when restarted.
"^DD",14.5,14.5,1,"AUDIT")
n
"^DD",14.5,14.5,1,"DT")
2960614
**END**
**END**
