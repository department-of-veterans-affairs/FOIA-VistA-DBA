KIDS Distribution saved on Sep 12, 2006@13:30
BPS*1*3, PSO*7*247, IB*2*342 INSTALL DISTRIBUTIONS
**KIDS**:BPS PSO IB BUNDLE 1.0^BPS*1.0*3^PSO*7.0*247^IB*2.0*342^

**INSTALL NAME**
BPS PSO IB BUNDLE 1.0
"BLD",6755,0)
BPS PSO IB BUNDLE 1.0^^1^3060912^y
"BLD",6755,1,0)
^^13^13^3060724^
"BLD",6755,1,1,0)
This multi-build distribution supports the National Council for
"BLD",6755,1,2,0)
Prescription Drug Programs (NCPDP) standard which was adopted under the
"BLD",6755,1,3,0)
Healthcare Insurance Portability and Accountability Act (HIPAA) for
"BLD",6755,1,4,0)
pharmacy claims. This patch is one of six to be released.  Three patches
"BLD",6755,1,5,0)
will be released in a KIDS multi-build distribution containing: BPS*1*3,
"BLD",6755,1,6,0)
PSO*7*247, and IB*2*342.  Three patches will be released individually and
"BLD",6755,1,7,0)
they are: PRCA*4.5*247, PSX*2*62, and PSS*1*115.
"BLD",6755,1,8,0)
 
"BLD",6755,1,9,0)
Enhancements included in the release of the six patches are a new option 
"BLD",6755,1,10,0)
that will enable the user to reopen a closed Electronic Claims Management
"BLD",6755,1,11,0)
Engine (ECME) claim; updates to the Rx Activity Log; and permanent storage
"BLD",6755,1,12,0)
of Claims activity information as reported by the ECME Billing Events
"BLD",6755,1,13,0)
Report.
"BLD",6755,10,0)
^9.63^3^3
"BLD",6755,10,1,0)
BPS*1.0*3^1
"BLD",6755,10,2,0)
PSO*7.0*247^1
"BLD",6755,10,3,0)
IB*2.0*342^1
"BLD",6755,10,"B","BPS*1.0*3",1)

"BLD",6755,10,"B","IB*2.0*342",3)

"BLD",6755,10,"B","PSO*7.0*247",2)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.0
**INSTALL NAME**
BPS*1.0*3
"BLD",6750,0)
BPS*1.0*3^E CLAIMS MGMT ENGINE^0^3060912^y
"BLD",6750,1,0)
^^13^13^3060724^
"BLD",6750,1,1,0)
This patch supports the National Council for Prescription Drug Programs 
"BLD",6750,1,2,0)
(NCPDP) standard which was adopted under the Healthcare Insurance
"BLD",6750,1,3,0)
Portability and Accountability Act (HIPAA) for pharmacy claims. This patch
"BLD",6750,1,4,0)
is one of six to be released.  Three patches will be released in a KIDS
"BLD",6750,1,5,0)
multi-build distribution containing: BPS*1*3, PSO*7*247, and IB*2*342.  
"BLD",6750,1,6,0)
Three patches will be released individually and they are: PRCA*4.5*247,
"BLD",6750,1,7,0)
PSX*2*62, and PSS*1*115.
"BLD",6750,1,8,0)
 
"BLD",6750,1,9,0)
Enhancements included in the release of the six patches are a new option 
"BLD",6750,1,10,0)
that will enable the user to reopen a closed Electronic Claims Management
"BLD",6750,1,11,0)
Engine (ECME) claim; updates to the Rx Activity Log; and permanent storage
"BLD",6750,1,12,0)
of Claims activity information as reported by the ECME Billing Events
"BLD",6750,1,13,0)
Report. 
"BLD",6750,4,0)
^9.64PA^9002313.56^3
"BLD",6750,4,9002313.02,0)
9002313.02
"BLD",6750,4,9002313.02,2,0)
^9.641^9002313.02^1
"BLD",6750,4,9002313.02,2,9002313.02,0)
BPS CLAIMS  (File-top level)
"BLD",6750,4,9002313.02,2,9002313.02,1,0)
^9.6411^908^3
"BLD",6750,4,9002313.02,2,9002313.02,1,906,0)
REOPENED DATE/TIME
"BLD",6750,4,9002313.02,2,9002313.02,1,907,0)
REOPENED BY
"BLD",6750,4,9002313.02,2,9002313.02,1,908,0)
REOPENED COMMENT
"BLD",6750,4,9002313.02,222)
y^n^p^^^^n^^n
"BLD",6750,4,9002313.02,224)

"BLD",6750,4,9002313.51,0)
9002313.51
"BLD",6750,4,9002313.51,2,0)
^9.641^9002313.51^1
"BLD",6750,4,9002313.51,2,9002313.51,0)
BPS DATA INPUT  (File-top level)
"BLD",6750,4,9002313.51,2,9002313.51,1,0)
^9.6411^1.13^1
"BLD",6750,4,9002313.51,2,9002313.51,1,1.13,0)
NCPDP OVERRIDES
"BLD",6750,4,9002313.51,222)
y^n^p^^^^n^^n
"BLD",6750,4,9002313.51,224)

"BLD",6750,4,9002313.56,0)
9002313.56
"BLD",6750,4,9002313.56,2,0)
^9.641^9002313.5601^2
"BLD",6750,4,9002313.56,2,9002313.56,0)
BPS PHARMACIES  (File-top level)
"BLD",6750,4,9002313.56,2,9002313.56,1,0)
^9.6411^.1^1
"BLD",6750,4,9002313.56,2,9002313.56,1,.1,0)
STATUS
"BLD",6750,4,9002313.56,2,9002313.5601,0)
OUTPATIENT SITE  (sub-file)
"BLD",6750,4,9002313.56,2,9002313.5601,1,0)
^9.6411^.01^1
"BLD",6750,4,9002313.56,2,9002313.5601,1,.01,0)
OUTPATIENT SITE
"BLD",6750,4,9002313.56,222)
y^n^p^^^^n^^n
"BLD",6750,4,9002313.56,224)

"BLD",6750,4,"APDD",9002313.02,9002313.02)

"BLD",6750,4,"APDD",9002313.02,9002313.02,906)

"BLD",6750,4,"APDD",9002313.02,9002313.02,907)

"BLD",6750,4,"APDD",9002313.02,9002313.02,908)

"BLD",6750,4,"APDD",9002313.51,9002313.51)

"BLD",6750,4,"APDD",9002313.51,9002313.51,1.13)

"BLD",6750,4,"APDD",9002313.56,9002313.56)

"BLD",6750,4,"APDD",9002313.56,9002313.56,.1)

"BLD",6750,4,"APDD",9002313.56,9002313.5601)

"BLD",6750,4,"APDD",9002313.56,9002313.5601,.01)

"BLD",6750,4,"B",9002313.02,9002313.02)

"BLD",6750,4,"B",9002313.51,9002313.51)

"BLD",6750,4,"B",9002313.56,9002313.56)

"BLD",6750,6.3)
20
"BLD",6750,"INIT")
EN^BPS01P3
"BLD",6750,"KRN",0)
^9.67PA^8989.52^19
"BLD",6750,"KRN",.4,0)
.4
"BLD",6750,"KRN",.401,0)
.401
"BLD",6750,"KRN",.402,0)
.402
"BLD",6750,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",6750,"KRN",.402,"NM",1,0)
BPSJ PHARMACY SITE ENTER/EDIT    FILE #9002313.56^9002313.56^0
"BLD",6750,"KRN",.402,"NM","B","BPSJ PHARMACY SITE ENTER/EDIT    FILE #9002313.56",1)

"BLD",6750,"KRN",.403,0)
.403
"BLD",6750,"KRN",.5,0)
.5
"BLD",6750,"KRN",.84,0)
.84
"BLD",6750,"KRN",3.6,0)
3.6
"BLD",6750,"KRN",3.8,0)
3.8
"BLD",6750,"KRN",9.2,0)
9.2
"BLD",6750,"KRN",9.8,0)
9.8
"BLD",6750,"KRN",9.8,"NM",0)
^9.68A^31^31
"BLD",6750,"KRN",9.8,"NM",1,0)
BPSBUTL^^0^47119211
"BLD",6750,"KRN",9.8,"NM",2,0)
BPSREOP^^0^3927200
"BLD",6750,"KRN",9.8,"NM",3,0)
BPSREOP1^^0^27740075
"BLD",6750,"KRN",9.8,"NM",4,0)
BPSSCR02^^0^44572484
"BLD",6750,"KRN",9.8,"NM",5,0)
BPSSCRCL^^0^75932788
"BLD",6750,"KRN",9.8,"NM",6,0)
BPSSCRRS^^0^20547842
"BLD",6750,"KRN",9.8,"NM",7,0)
BPSSCRU6^^0^5405845
"BLD",6750,"KRN",9.8,"NM",8,0)
BPSRES^^0^50532069
"BLD",6750,"KRN",9.8,"NM",9,0)
BPSNCPDP^^0^53857295
"BLD",6750,"KRN",9.8,"NM",10,0)
BPSOSI^^0^32863307
"BLD",6750,"KRN",9.8,"NM",11,0)
BPSOSIY^^0^63767272
"BLD",6750,"KRN",9.8,"NM",12,0)
BPSOSQB^^0^46504388
"BLD",6750,"KRN",9.8,"NM",13,0)
BPSOSO2^^0^33102462
"BLD",6750,"KRN",9.8,"NM",14,0)
BPSSCRU4^^0^58171346
"BLD",6750,"KRN",9.8,"NM",15,0)
BPS01P3^^0^23053500
"BLD",6750,"KRN",9.8,"NM",16,0)
BPSJPREG^^0^11507539
"BLD",6750,"KRN",9.8,"NM",17,0)
BPSUTIL^^0^4023220
"BLD",6750,"KRN",9.8,"NM",18,0)
BPSOSQC^^0^5309915
"BLD",6750,"KRN",9.8,"NM",19,0)
BPSNCPD1^^0^42956727
"BLD",6750,"KRN",9.8,"NM",20,0)
BPSOSCD^^0^46703234
"BLD",6750,"KRN",9.8,"NM",21,0)
BPSSCRU2^^0^58140964
"BLD",6750,"KRN",9.8,"NM",22,0)
BPSUSCR4^^0^10854593
"BLD",6750,"KRN",9.8,"NM",23,0)
BPSRPT6^^0^68506243
"BLD",6750,"KRN",9.8,"NM",24,0)
BPSRPT3^^0^37239882
"BLD",6750,"KRN",9.8,"NM",25,0)
BPSRPT5^^0^81419948
"BLD",6750,"KRN",9.8,"NM",26,0)
BPSRPT7^^0^70034619
"BLD",6750,"KRN",9.8,"NM",27,0)
BPSRPT8^^0^73476726
"BLD",6750,"KRN",9.8,"NM",28,0)
BPSPHAR^^0^1377330
"BLD",6750,"KRN",9.8,"NM",29,0)
BPSJINIT^^0^36410434
"BLD",6750,"KRN",9.8,"NM",30,0)
BPSJZQR^^0^2363888
"BLD",6750,"KRN",9.8,"NM",31,0)
BPSRPT2^^0^36670735
"BLD",6750,"KRN",9.8,"NM","B","BPS01P3",15)

"BLD",6750,"KRN",9.8,"NM","B","BPSBUTL",1)

"BLD",6750,"KRN",9.8,"NM","B","BPSJINIT",29)

"BLD",6750,"KRN",9.8,"NM","B","BPSJPREG",16)

"BLD",6750,"KRN",9.8,"NM","B","BPSJZQR",30)

"BLD",6750,"KRN",9.8,"NM","B","BPSNCPD1",19)

"BLD",6750,"KRN",9.8,"NM","B","BPSNCPDP",9)

"BLD",6750,"KRN",9.8,"NM","B","BPSOSCD",20)

"BLD",6750,"KRN",9.8,"NM","B","BPSOSI",10)

"BLD",6750,"KRN",9.8,"NM","B","BPSOSIY",11)

"BLD",6750,"KRN",9.8,"NM","B","BPSOSO2",13)

"BLD",6750,"KRN",9.8,"NM","B","BPSOSQB",12)

"BLD",6750,"KRN",9.8,"NM","B","BPSOSQC",18)

"BLD",6750,"KRN",9.8,"NM","B","BPSPHAR",28)

"BLD",6750,"KRN",9.8,"NM","B","BPSREOP",2)

"BLD",6750,"KRN",9.8,"NM","B","BPSREOP1",3)

"BLD",6750,"KRN",9.8,"NM","B","BPSRES",8)

"BLD",6750,"KRN",9.8,"NM","B","BPSRPT2",31)

"BLD",6750,"KRN",9.8,"NM","B","BPSRPT3",24)

"BLD",6750,"KRN",9.8,"NM","B","BPSRPT5",25)

"BLD",6750,"KRN",9.8,"NM","B","BPSRPT6",23)

"BLD",6750,"KRN",9.8,"NM","B","BPSRPT7",26)

"BLD",6750,"KRN",9.8,"NM","B","BPSRPT8",27)

"BLD",6750,"KRN",9.8,"NM","B","BPSSCR02",4)

"BLD",6750,"KRN",9.8,"NM","B","BPSSCRCL",5)

"BLD",6750,"KRN",9.8,"NM","B","BPSSCRRS",6)

"BLD",6750,"KRN",9.8,"NM","B","BPSSCRU2",21)

"BLD",6750,"KRN",9.8,"NM","B","BPSSCRU4",14)

"BLD",6750,"KRN",9.8,"NM","B","BPSSCRU6",7)

"BLD",6750,"KRN",9.8,"NM","B","BPSUSCR4",22)

"BLD",6750,"KRN",9.8,"NM","B","BPSUTIL",17)

"BLD",6750,"KRN",19,0)
19
"BLD",6750,"KRN",19,"NM",0)
^9.68A^27^27
"BLD",6750,"KRN",19,"NM",1,0)
BPS MENU MAINTENANCE^^0
"BLD",6750,"KRN",19,"NM",2,0)
BPS REOPEN CLOSED CLAIM^^0
"BLD",6750,"KRN",19,"NM",3,0)
BPS APP REG TASKMAN^^0
"BLD",6750,"KRN",19,"NM",4,0)
BPS MENU RPT CLAIM STATUS^^0
"BLD",6750,"KRN",19,"NM",5,0)
BPS MENU RPT MAIN^^0
"BLD",6750,"KRN",19,"NM",6,0)
BPS MENU RPT OTHER^^0
"BLD",6750,"KRN",19,"NM",7,0)
BPS NIGHTLY BACKGROUND JOB^^0
"BLD",6750,"KRN",19,"NM",8,0)
BPS RPT CLOSED CLAIMS^^0
"BLD",6750,"KRN",19,"NM",9,0)
BPS RPT CMOP/ECME ACTIVITY^^0
"BLD",6750,"KRN",19,"NM",10,0)
BPS RPT NOT RELEASED^^0
"BLD",6750,"KRN",19,"NM",11,0)
BPS RPT PAYABLE^^0
"BLD",6750,"KRN",19,"NM",12,0)
BPS RPT PAYER SHEET DETAIL^^0
"BLD",6750,"KRN",19,"NM",13,0)
BPS RPT RECENT TRANSACTIONS^^0
"BLD",6750,"KRN",19,"NM",14,0)
BPS RPT REJECTION^^0
"BLD",6750,"KRN",19,"NM",15,0)
BPS RPT REVERSAL^^0
"BLD",6750,"KRN",19,"NM",16,0)
BPS RPT SETUP PHARMACIES^^0
"BLD",6750,"KRN",19,"NM",17,0)
BPS RPT TOTALS BY DAY^^0
"BLD",6750,"KRN",19,"NM",18,0)
BPS RPT TURNAROUND STATS^^0
"BLD",6750,"KRN",19,"NM",19,0)
BPS SETUP BASIC PARAMS^^0
"BLD",6750,"KRN",19,"NM",20,0)
BPS SETUP MENU^^0
"BLD",6750,"KRN",19,"NM",21,0)
BPS SETUP PHARMACY^^0
"BLD",6750,"KRN",19,"NM",22,0)
BPS SETUP REGISTER PHARMACY^^0
"BLD",6750,"KRN",19,"NM",23,0)
BPS STATISTICS SCREEN^^0
"BLD",6750,"KRN",19,"NM",24,0)
BPS UNSTRAND SCREEN^^0
"BLD",6750,"KRN",19,"NM",25,0)
BPS USER SCREEN^^0
"BLD",6750,"KRN",19,"NM",26,0)
BPSMENU^^0
"BLD",6750,"KRN",19,"NM",27,0)
BPS MANAGER MENU^^0
"BLD",6750,"KRN",19,"NM","B","BPS APP REG TASKMAN",3)

"BLD",6750,"KRN",19,"NM","B","BPS MANAGER MENU",27)

"BLD",6750,"KRN",19,"NM","B","BPS MENU MAINTENANCE",1)

"BLD",6750,"KRN",19,"NM","B","BPS MENU RPT CLAIM STATUS",4)

"BLD",6750,"KRN",19,"NM","B","BPS MENU RPT MAIN",5)

"BLD",6750,"KRN",19,"NM","B","BPS MENU RPT OTHER",6)

"BLD",6750,"KRN",19,"NM","B","BPS NIGHTLY BACKGROUND JOB",7)

"BLD",6750,"KRN",19,"NM","B","BPS REOPEN CLOSED CLAIM",2)

"BLD",6750,"KRN",19,"NM","B","BPS RPT CLOSED CLAIMS",8)

"BLD",6750,"KRN",19,"NM","B","BPS RPT CMOP/ECME ACTIVITY",9)

"BLD",6750,"KRN",19,"NM","B","BPS RPT NOT RELEASED",10)

"BLD",6750,"KRN",19,"NM","B","BPS RPT PAYABLE",11)

"BLD",6750,"KRN",19,"NM","B","BPS RPT PAYER SHEET DETAIL",12)

"BLD",6750,"KRN",19,"NM","B","BPS RPT RECENT TRANSACTIONS",13)

"BLD",6750,"KRN",19,"NM","B","BPS RPT REJECTION",14)

"BLD",6750,"KRN",19,"NM","B","BPS RPT REVERSAL",15)

"BLD",6750,"KRN",19,"NM","B","BPS RPT SETUP PHARMACIES",16)

"BLD",6750,"KRN",19,"NM","B","BPS RPT TOTALS BY DAY",17)

"BLD",6750,"KRN",19,"NM","B","BPS RPT TURNAROUND STATS",18)

"BLD",6750,"KRN",19,"NM","B","BPS SETUP BASIC PARAMS",19)

"BLD",6750,"KRN",19,"NM","B","BPS SETUP MENU",20)

"BLD",6750,"KRN",19,"NM","B","BPS SETUP PHARMACY",21)

"BLD",6750,"KRN",19,"NM","B","BPS SETUP REGISTER PHARMACY",22)

"BLD",6750,"KRN",19,"NM","B","BPS STATISTICS SCREEN",23)

"BLD",6750,"KRN",19,"NM","B","BPS UNSTRAND SCREEN",24)

"BLD",6750,"KRN",19,"NM","B","BPS USER SCREEN",25)

"BLD",6750,"KRN",19,"NM","B","BPSMENU",26)

"BLD",6750,"KRN",19.1,0)
19.1
"BLD",6750,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",6750,"KRN",101,0)
101
"BLD",6750,"KRN",101,"NM",0)
^9.68A^21^21
"BLD",6750,"KRN",101,"NM",1,0)
BPS PRTCL REOPEN^^0
"BLD",6750,"KRN",101,"NM",2,0)
BPS PRTCL REOPEN EXIT^^0
"BLD",6750,"KRN",101,"NM",3,0)
BPS PRTCL REOPEN MENU^^0
"BLD",6750,"KRN",101,"NM",4,0)
BPS PRTCL USRSCR HIDDEN ACTIONS^^0
"BLD",6750,"KRN",101,"NM",5,0)
BPS PRTCL USRSCR RESUBMIT EDITS^^0
"BLD",6750,"KRN",101,"NM",6,0)
BPS VALM PREVIOUS SCREEN^^4^
"BLD",6750,"KRN",101,"NM",7,0)
BPS VALM PRINT SCREEN^^4^
"BLD",6750,"KRN",101,"NM",8,0)
BPS VALM LAST SCREEN^^4^
"BLD",6750,"KRN",101,"NM",9,0)
BPS VALM FIRST SCREEN^^4^
"BLD",6750,"KRN",101,"NM",10,0)
BPS PRTCL USRSCR DEVELOPER LOG^^4^
"BLD",6750,"KRN",101,"NM",11,0)
BPS VALM NEXT SCREEN^^4^
"BLD",6750,"KRN",101,"NM",12,0)
BPS VALM DOWN A LINE^^4^
"BLD",6750,"KRN",101,"NM",13,0)
BPS VALM UP ONE LINE^^4^
"BLD",6750,"KRN",101,"NM",14,0)
BPS VALM GOTO PAGE^^4^
"BLD",6750,"KRN",101,"NM",15,0)
VALM RIGHT^^4^
"BLD",6750,"KRN",101,"NM",16,0)
VALM LEFT^^4^
"BLD",6750,"KRN",101,"NM",17,0)
VALM REFRESH^^4^
"BLD",6750,"KRN",101,"NM",18,0)
VALM PRINT LIST^^4^
"BLD",6750,"KRN",101,"NM",19,0)
VALM SEARCH LIST^^4^
"BLD",6750,"KRN",101,"NM",20,0)
VALM TURN ON/OFF MENUS^^4^
"BLD",6750,"KRN",101,"NM",21,0)
VALM QUIT^^4^
"BLD",6750,"KRN",101,"NM","B","BPS PRTCL REOPEN",1)

"BLD",6750,"KRN",101,"NM","B","BPS PRTCL REOPEN EXIT",2)

"BLD",6750,"KRN",101,"NM","B","BPS PRTCL REOPEN MENU",3)

"BLD",6750,"KRN",101,"NM","B","BPS PRTCL USRSCR DEVELOPER LOG",10)

"BLD",6750,"KRN",101,"NM","B","BPS PRTCL USRSCR HIDDEN ACTIONS",4)

"BLD",6750,"KRN",101,"NM","B","BPS PRTCL USRSCR RESUBMIT EDITS",5)

"BLD",6750,"KRN",101,"NM","B","BPS VALM DOWN A LINE",12)

"BLD",6750,"KRN",101,"NM","B","BPS VALM FIRST SCREEN",9)

"BLD",6750,"KRN",101,"NM","B","BPS VALM GOTO PAGE",14)

"BLD",6750,"KRN",101,"NM","B","BPS VALM LAST SCREEN",8)

"BLD",6750,"KRN",101,"NM","B","BPS VALM NEXT SCREEN",11)

"BLD",6750,"KRN",101,"NM","B","BPS VALM PREVIOUS SCREEN",6)

"BLD",6750,"KRN",101,"NM","B","BPS VALM PRINT SCREEN",7)

"BLD",6750,"KRN",101,"NM","B","BPS VALM UP ONE LINE",13)

"BLD",6750,"KRN",101,"NM","B","VALM LEFT",16)

"BLD",6750,"KRN",101,"NM","B","VALM PRINT LIST",18)

"BLD",6750,"KRN",101,"NM","B","VALM QUIT",21)

"BLD",6750,"KRN",101,"NM","B","VALM REFRESH",17)

"BLD",6750,"KRN",101,"NM","B","VALM RIGHT",15)

"BLD",6750,"KRN",101,"NM","B","VALM SEARCH LIST",19)

"BLD",6750,"KRN",101,"NM","B","VALM TURN ON/OFF MENUS",20)

"BLD",6750,"KRN",409.61,0)
409.61
"BLD",6750,"KRN",409.61,"NM",0)
^9.68A^2^2
"BLD",6750,"KRN",409.61,"NM",1,0)
BPS LSTMN ECME REOPEN^^0
"BLD",6750,"KRN",409.61,"NM",2,0)
BPS LSTMN ECME USRSCR^^0
"BLD",6750,"KRN",409.61,"NM","B","BPS LSTMN ECME REOPEN",1)

"BLD",6750,"KRN",409.61,"NM","B","BPS LSTMN ECME USRSCR",2)

"BLD",6750,"KRN",771,0)
771
"BLD",6750,"KRN",870,0)
870
"BLD",6750,"KRN",8989.51,0)
8989.51
"BLD",6750,"KRN",8989.52,0)
8989.52
"BLD",6750,"KRN",8994,0)
8994
"BLD",6750,"KRN","B",.4,.4)

"BLD",6750,"KRN","B",.401,.401)

"BLD",6750,"KRN","B",.402,.402)

"BLD",6750,"KRN","B",.403,.403)

"BLD",6750,"KRN","B",.5,.5)

"BLD",6750,"KRN","B",.84,.84)

"BLD",6750,"KRN","B",3.6,3.6)

"BLD",6750,"KRN","B",3.8,3.8)

"BLD",6750,"KRN","B",9.2,9.2)

"BLD",6750,"KRN","B",9.8,9.8)

"BLD",6750,"KRN","B",19,19)

"BLD",6750,"KRN","B",19.1,19.1)

"BLD",6750,"KRN","B",101,101)

"BLD",6750,"KRN","B",409.61,409.61)

"BLD",6750,"KRN","B",771,771)

"BLD",6750,"KRN","B",870,870)

"BLD",6750,"KRN","B",8989.51,8989.51)

"BLD",6750,"KRN","B",8989.52,8989.52)

"BLD",6750,"KRN","B",8994,8994)

"BLD",6750,"QUES",0)
^9.62^^
"BLD",6750,"REQB",0)
^9.611^1^1
"BLD",6750,"REQB",1,0)
BPS*1.0*1^2
"BLD",6750,"REQB","B","BPS*1.0*1",1)

"FIA",9002313.02)
BPS CLAIMS
"FIA",9002313.02,0)
^BPSC(
"FIA",9002313.02,0,0)
9002313.02
"FIA",9002313.02,0,1)
y^n^p^^^^n^^n
"FIA",9002313.02,0,10)

"FIA",9002313.02,0,11)

"FIA",9002313.02,0,"RLRO")

"FIA",9002313.02,0,"VR")
1.0^BPS
"FIA",9002313.02,9002313.02)
1
"FIA",9002313.02,9002313.02,906)

"FIA",9002313.02,9002313.02,907)

"FIA",9002313.02,9002313.02,908)

"FIA",9002313.51)
BPS DATA INPUT
"FIA",9002313.51,0)
^BPS(9002313.51,
"FIA",9002313.51,0,0)
9002313.51D
"FIA",9002313.51,0,1)
y^n^p^^^^n^^n
"FIA",9002313.51,0,10)

"FIA",9002313.51,0,11)

"FIA",9002313.51,0,"RLRO")

"FIA",9002313.51,0,"VR")
1.0^BPS
"FIA",9002313.51,9002313.51)
1
"FIA",9002313.51,9002313.51,1.13)

"FIA",9002313.56)
BPS PHARMACIES
"FIA",9002313.56,0)
^BPS(9002313.56,
"FIA",9002313.56,0,0)
9002313.56
"FIA",9002313.56,0,1)
y^n^p^^^^n^^n
"FIA",9002313.56,0,10)

"FIA",9002313.56,0,11)

"FIA",9002313.56,0,"RLRO")

"FIA",9002313.56,0,"VR")
1.0^BPS
"FIA",9002313.56,9002313.56)
1
"FIA",9002313.56,9002313.56,.1)

"FIA",9002313.56,9002313.56,13800)

"FIA",9002313.56,9002313.5601)
1
"FIA",9002313.56,9002313.5601,.01)

"INIT")
EN^BPS01P3
"KRN",.402,2787,-1)
0^1
"KRN",.402,2787,0)
BPSJ PHARMACY SITE ENTER/EDIT^3060605.0902^@^9002313.56^^@^3060707
"KRN",.402,2787,"DR",1,9002313.56)
.1;.02;.03;120.03;120.01;120.02;102.03;120.04;120.05;130.01;130.02;130.03;130.6;130.07;130.08;
"KRN",19,16910,-1)
0^20
"KRN",19,16910,0)
BPS SETUP MENU^Pharmacy ECME Setup Menu^^M^^BPS MASTER^^^^^^^^^^^1
"KRN",19,16910,1,0)
^^3^3^3060602^
"KRN",19,16910,1,1,0)
This menu contains options which allow the user to define various ECME 
"KRN",19,16910,1,2,0)
setup parameters. It also contains an option to register pharmacies with 
"KRN",19,16910,1,3,0)
the Austin Automation Center.
"KRN",19,16910,10,0)
^19.01IP^15^15
"KRN",19,16910,10,12,0)
16914^REG^3
"KRN",19,16910,10,12,"^")
BPS SETUP REGISTER PHARMACY
"KRN",19,16910,10,14,0)
16935^PHAR^2
"KRN",19,16910,10,14,"^")
BPS SETUP PHARMACY
"KRN",19,16910,10,15,0)
17310^BAS^1
"KRN",19,16910,10,15,"^")
BPS SETUP BASIC PARAMS
"KRN",19,16910,26)
D HDR^BPSMHDR
"KRN",19,16910,99)
60473,50822
"KRN",19,16910,99.1)
60452,55581
"KRN",19,16910,"U")
PHARMACY ECME SETUP MENU
"KRN",19,16911,-1)
0^27
"KRN",19,16911,0)
BPS MANAGER MENU^Pharmacy ECME Manager Menu^^M^^BPS MANAGER^^^^^^^^1^^^1
"KRN",19,16911,1,0)
^^3^3^3060606^
"KRN",19,16911,1,1,0)
BPS submenu which contains a link to the ECME Transaction 
"KRN",19,16911,1,2,0)
Maintenance menu, a link to the Pharmacy ECME Setup menu, and the BPS
"KRN",19,16911,1,3,0)
Statistics Screen.
"KRN",19,16911,10,0)
^19.01IP^10^10
"KRN",19,16911,10,8,0)
16910^SET^20
"KRN",19,16911,10,8,"^")
BPS SETUP MENU
"KRN",19,16911,10,9,0)
17301^MNT^10
"KRN",19,16911,10,9,"^")
BPS MENU MAINTENANCE
"KRN",19,16911,10,10,0)
17306^STAT^30
"KRN",19,16911,10,10,"^")
BPS STATISTICS SCREEN
"KRN",19,16911,20)
K BPSQUIT D INIT^BPSMHDR I $G(BPSQUIT) K BPSQUIT S XQUIT=1
"KRN",19,16911,26)
D HDR^BPSMHDR
"KRN",19,16911,99)
60473,50822
"KRN",19,16911,99.1)
60044,54677
"KRN",19,16911,"U")
PHARMACY ECME MANAGER MENU
"KRN",19,16912,-1)
0^26
"KRN",19,16912,0)
BPSMENU^ECME^^M^^BPSMENU^^^^^^E CLAIMS MGMT ENGINE^^1^^^
"KRN",19,16912,1,0)
^^1^1^3060602^
"KRN",19,16912,1,1,0)
The main BPS menu which provides access to all of the ECME options. 
"KRN",19,16912,10,0)
^19.01IP^4^4
"KRN",19,16912,10,2,0)
16911^MGR^2
"KRN",19,16912,10,2,"^")
BPS MANAGER MENU
"KRN",19,16912,10,3,0)
16920^U^1
"KRN",19,16912,10,3,"^")
BPS USER SCREEN
"KRN",19,16912,10,4,0)
16922^RPT^4
"KRN",19,16912,10,4,"^")
BPS MENU RPT MAIN
"KRN",19,16912,20)
K BPSQUIT D INIT^BPSMHDR,HDR^BPSMHDR I $G(BPSQUIT) K BPSQUIT S XQUIT=1
"KRN",19,16912,26)

"KRN",19,16912,99)
60473,50821
"KRN",19,16912,99.1)
60225,50771
"KRN",19,16912,"U")
ECME
"KRN",19,16913,-1)
0^3
"KRN",19,16913,0)
BPS APP REG TASKMAN^EPHARMACY APPLICATION REGISTRATION - TASKMAN^^R^^^^^^^^
"KRN",19,16913,1,0)
^19.06^2^2^3060602^^
"KRN",19,16913,1,1,0)
Registers the VistA site and valid BPS Pharmacy with the Austin 
"KRN",19,16913,1,2,0)
Automation Center (AAC) - For use with Taskman scheduling.
"KRN",19,16913,25)
TASKMAN^BPSJAREG
"KRN",19,16913,99.1)
59878,62177
"KRN",19,16913,"U")
EPHARMACY APPLICATION REGISTRA
"KRN",19,16914,-1)
0^22
"KRN",19,16914,0)
BPS SETUP REGISTER PHARMACY^Register Pharmacy with Austin Automation Center^^R^^BPS MASTER^^^^^y^
"KRN",19,16914,1,0)
^^2^2^3060602^
"KRN",19,16914,1,1,0)
Registers the VistA site and valid BPS Pharmacy with the Austin
"KRN",19,16914,1,2,0)
Automation Center (AAC)
"KRN",19,16914,25)
INIT^BPSJAREG
"KRN",19,16914,99.1)
59647,50769
"KRN",19,16914,"U")
REGISTER PHARMACY WITH AUSTIN 
"KRN",19,16920,-1)
0^25
"KRN",19,16920,0)
BPS USER SCREEN^ECME User Screen^^R^^BPS USER^^^^^^^^^1
"KRN",19,16920,1,0)
^^4^4^3060602^
"KRN",19,16920,1,1,0)
The User Screen was designed to provide the user with a set of operations 
"KRN",19,16920,1,2,0)
to manipulate claims:  Reverse, resubmit, close, etc. The Further Research
"KRN",19,16920,1,3,0)
submenu also provides shortcuts to preexisting IB and Pharmacy menu
"KRN",19,16920,1,4,0)
options that are commonly used by OPECC personal.
"KRN",19,16920,15)
D KILL^XUSCLEAN
"KRN",19,16920,20)

"KRN",19,16920,25)
EN^BPSSCR
"KRN",19,16920,99.1)
58154,30494
"KRN",19,16920,"U")
ECME USER SCREEN
"KRN",19,16922,-1)
0^5
"KRN",19,16922,0)
BPS MENU RPT MAIN^Pharmacy Electronic Claims Reports^^M^^BPS REPORTS^^^^^^^^^^^1
"KRN",19,16922,1,0)
^^2^2^3060602^
"KRN",19,16922,1,1,0)
This is the main reports menu. It contains both the Claims Status and 
"KRN",19,16922,1,2,0)
Other Reports submenus.
"KRN",19,16922,10,0)
^19.01IP^3^2
"KRN",19,16922,10,1,0)
16967^CLA^10
"KRN",19,16922,10,1,"^")
BPS MENU RPT CLAIM STATUS
"KRN",19,16922,10,3,0)
16978^OTH
"KRN",19,16922,10,3,"^")
BPS MENU RPT OTHER
"KRN",19,16922,20)

"KRN",19,16922,26)
D HDR^BPSMHDR
"KRN",19,16922,99)
60473,50821
"KRN",19,16922,99.1)
60345,62055
"KRN",19,16922,"U")
PHARMACY ELECTRONIC CLAIMS REP
"KRN",19,16935,-1)
0^21
"KRN",19,16935,0)
BPS SETUP PHARMACY^Edit ECME Pharmacy Data^^R^^BPS MASTER^^^^^^^^^
"KRN",19,16935,1,0)
^^1^1^3060602^
"KRN",19,16935,1,1,0)
Allows users to edit BPS Pharmacy specific information.
"KRN",19,16935,15)

"KRN",19,16935,25)
EN^BPSPHAR
"KRN",19,16935,30)

"KRN",19,16935,31)

"KRN",19,16935,50)

"KRN",19,16935,51)

"KRN",19,16935,"U")
EDIT ECME PHARMACY DATA
"KRN",19,16967,-1)
0^4
"KRN",19,16967,0)
BPS MENU RPT CLAIM STATUS^Claim Results and Status^^M^^BPS REPORTS^^^^^^^^^^^1
"KRN",19,16967,1,0)
^^2^2^3060608^
"KRN",19,16967,1,1,0)
This menu contains the standard claims status reports as well as the
"KRN",19,16967,1,2,0)
ECME/CMOP Activity Report.
"KRN",19,16967,10,0)
^19.01IP^31^31
"KRN",19,16967,10,18,0)
16993^PAY^1
"KRN",19,16967,10,18,"^")
BPS RPT PAYABLE
"KRN",19,16967,10,19,0)
16992^REJ^2
"KRN",19,16967,10,19,"^")
BPS RPT REJECTION
"KRN",19,16967,10,25,0)
16999^DAY^91
"KRN",19,16967,10,25,"^")
BPS RPT TOTALS BY DAY
"KRN",19,16967,10,27,0)
17009^NYR^13
"KRN",19,16967,10,27,"^")
BPS RPT NOT RELEASED
"KRN",19,16967,10,28,0)
17011^REV^7
"KRN",19,16967,10,28,"^")
BPS RPT REVERSAL
"KRN",19,16967,10,29,0)
17012^CLO^92
"KRN",19,16967,10,29,"^")
BPS RPT CLOSED CLAIMS
"KRN",19,16967,10,30,0)
17300^ECMP^3
"KRN",19,16967,10,30,"^")
BPS RPT CMOP/ECME ACTIVITY
"KRN",19,16967,10,31,0)
17309^REC^50
"KRN",19,16967,10,31,"^")
BPS RPT RECENT TRANSACTIONS
"KRN",19,16967,25)

"KRN",19,16967,26)
D HDR^BPSMHDR
"KRN",19,16967,99)
60473,50822
"KRN",19,16967,"U")
CLAIM RESULTS AND STATUS
"KRN",19,16978,-1)
0^6
"KRN",19,16978,0)
BPS MENU RPT OTHER^Other Reports^^M^^BPS REPORTS^^^^^^^^^^^1
"KRN",19,16978,1,0)
^^4^4^3060602^
"KRN",19,16978,1,1,0)
This menu contains any ECME reports which do not directly relate to 
"KRN",19,16978,1,2,0)
claims. Currently included in this menu are the Payer Sheet Detail 
"KRN",19,16978,1,3,0)
Report, the ECME Setup - Pharmacies Report, and the Turn-around Time 
"KRN",19,16978,1,4,0)
Statistics Report.
"KRN",19,16978,10,0)
^19.01IP^6^6
"KRN",19,16978,10,4,0)
17305^PAY^2
"KRN",19,16978,10,4,"^")
BPS RPT PAYER SHEET DETAIL
"KRN",19,16978,10,5,0)
17307^PHAR^5
"KRN",19,16978,10,5,"^")
BPS RPT SETUP PHARMACIES
"KRN",19,16978,10,6,0)
17308^TAT^91
"KRN",19,16978,10,6,"^")
BPS RPT TURNAROUND STATS
"KRN",19,16978,26)
D HDR^BPSMHDR
"KRN",19,16978,99)
60473,50822
"KRN",19,16978,"U")
OTHER REPORTS
"KRN",19,16992,-1)
0^14
"KRN",19,16992,0)
BPS RPT REJECTION^Rejected Claims Report^^R^^BPS REPORTS^^^^^^^^^
"KRN",19,16992,1,0)
^^4^4^3060602^
"KRN",19,16992,1,1,0)
This report lists REJECTED electronic claims for the selected 
"KRN",19,16992,1,2,0)
criteria. A REJECTED claim (to be included in this report) is defined as 
"KRN",19,16992,1,3,0)
a claim that has been successfully transmitted to the payer and has been 
"KRN",19,16992,1,4,0)
returned REJECTED and has not been closed.
"KRN",19,16992,15)

"KRN",19,16992,20)

"KRN",19,16992,25)
EN^BPSRPT0(2)
"KRN",19,16992,60)

"KRN",19,16992,62)
0
"KRN",19,16992,63)

"KRN",19,16992,64)

"KRN",19,16992,65)

"KRN",19,16992,66)

"KRN",19,16992,67)

"KRN",19,16992,"U")
REJECTED CLAIMS REPORT
"KRN",19,16993,-1)
0^11
"KRN",19,16993,0)
BPS RPT PAYABLE^Payable Claims Report^^R^^BPS REPORTS^^^^^^^^^
"KRN",19,16993,1,0)
^^4^4^3060602^
"KRN",19,16993,1,1,0)
This report lists PAYABLE electronic claims for the selected 
"KRN",19,16993,1,2,0)
criteria. A PAYABLE claim (to be included in this report) is defined as a 
"KRN",19,16993,1,3,0)
claim that has been successfully transmitted to the payer, has been 
"KRN",19,16993,1,4,0)
returned PAYABLE and has not been REVERSED.  
"KRN",19,16993,15)

"KRN",19,16993,20)

"KRN",19,16993,25)
EN^BPSRPT0(1)
"KRN",19,16993,60)

"KRN",19,16993,62)
0
"KRN",19,16993,63)

"KRN",19,16993,64)

"KRN",19,16993,67)

"KRN",19,16993,"U")
PAYABLE CLAIMS REPORT
"KRN",19,16999,-1)
0^17
"KRN",19,16999,0)
BPS RPT TOTALS BY DAY^Totals by Date^^R^^BPS REPORTS^^^^^^^^^
"KRN",19,16999,1,0)
^^5^5^3060602^
"KRN",19,16999,1,1,0)
This report contains totals by day for all ECME submission claim 
"KRN",19,16999,1,2,0)
activity for the selected criteria. A claim (to be included in this 
"KRN",19,16999,1,3,0)
report) is defined as a claim that has been successfully transmitted to 
"KRN",19,16999,1,4,0)
the payer, has been returned PAYABLE or REJECTED but has not been 
"KRN",19,16999,1,5,0)
REVERSED.
"KRN",19,16999,15)

"KRN",19,16999,20)

"KRN",19,16999,25)
EN^BPSRPT0(6)
"KRN",19,16999,60)

"KRN",19,16999,62)
0
"KRN",19,16999,63)

"KRN",19,16999,64)

"KRN",19,16999,65)

"KRN",19,16999,66)

"KRN",19,16999,67)

"KRN",19,16999,"U")
TOTALS BY DATE
"KRN",19,17009,-1)
0^10
"KRN",19,17009,0)
BPS RPT NOT RELEASED^Claims Submitted, Not Yet Released^^R^^BPS REPORTS^^^^^^^^^
"KRN",19,17009,1,0)
^^4^4^3060602^
"KRN",19,17009,1,1,0)
This report lists submitted electronic claims that have not yet been 
"KRN",19,17009,1,2,0)
released for the selected criteria. A claim (to be included in this 
"KRN",19,17009,1,3,0)
report) is defined as a claim that has been successfully transmitted to 
"KRN",19,17009,1,4,0)
the payer, has been returned PAYABLE and the Rx has not been RELEASED.
"KRN",19,17009,15)

"KRN",19,17009,20)

"KRN",19,17009,25)
EN^BPSRPT0(3)
"KRN",19,17009,60)

"KRN",19,17009,62)
0
"KRN",19,17009,63)

"KRN",19,17009,64)

"KRN",19,17009,67)

"KRN",19,17009,"U")
CLAIMS SUBMITTED, NOT YET RELE
"KRN",19,17011,-1)
0^15
"KRN",19,17011,0)
BPS RPT REVERSAL^Reversal Claims Report^^R^^BPS REPORTS^^^^^^^^^
"KRN",19,17011,1,0)
^^4^4^3060602^
"KRN",19,17011,1,1,0)
This report lists REVERSAL electronic claims for the selected 
"KRN",19,17011,1,2,0)
criteria. A REVERSAL claim (to be included in this report) is defined as 
"KRN",19,17011,1,3,0)
a claim that has been successfully transmitted to the payer to REVERSE a 
"KRN",19,17011,1,4,0)
previously PAYABLE claim and has not been RESUBMITTED.
"KRN",19,17011,15)

"KRN",19,17011,20)

"KRN",19,17011,25)
EN^BPSRPT0(4)
"KRN",19,17011,30)

"KRN",19,17011,60)

"KRN",19,17011,63)

"KRN",19,17011,67)

"KRN",19,17011,668000,0)
^19.0668^^0
"KRN",19,17011,"U")
REVERSAL CLAIMS REPORT
"KRN",19,17012,-1)
0^8
"KRN",19,17012,0)
BPS RPT CLOSED CLAIMS^Closed Claims Report^^R^^BPS REPORTS^^^^^^^^^
"KRN",19,17012,1,0)
^^5^5^3060602^
"KRN",19,17012,1,1,0)
This report lists REJECTED electronic claims that have been CLOSED 
"KRN",19,17012,1,2,0)
using the ECME Close Claim action option. A CLOSED claim (to be included 
"KRN",19,17012,1,3,0)
in this report) is defined as a claim that has been successfully 
"KRN",19,17012,1,4,0)
transmitted to the payer, has been returned REJECTED and has been CLOSED 
"KRN",19,17012,1,5,0)
using the ECME Close Claim action option.
"KRN",19,17012,10.1)
Closed Claims Report
"KRN",19,17012,15)

"KRN",19,17012,20)

"KRN",19,17012,25)
EN^BPSRPT0(7)
"KRN",19,17012,60)

"KRN",19,17012,"U")
CLOSED CLAIMS REPORT
"KRN",19,17300,-1)
0^9
"KRN",19,17300,0)
BPS RPT CMOP/ECME ACTIVITY^CMOP/ECME Activity Report^^R^^BPS REPORTS^^^^^^
"KRN",19,17300,1,0)
^^3^3^3060602^
"KRN",19,17300,1,1,0)
This report is necessary for monitoring CMOP activity during both the 
"KRN",19,17300,1,2,0)
Controlled Substances and General CMOP Transmissions. This report shall 
"KRN",19,17300,1,3,0)
contain reference information from File 550.2, CMOP Transmissions.
"KRN",19,17300,25)
BPSCEAR
"KRN",19,17300,62)
0
"KRN",19,17300,"U")
CMOP/ECME ACTIVITY REPORT
"KRN",19,17301,-1)
0^1
"KRN",19,17301,0)
BPS MENU MAINTENANCE^ECME transaction maintenance options^^M^^BPS MANAGER^^^^^^
"KRN",19,17301,1,0)
^^2^2^3060608^
"KRN",19,17301,1,1,0)
This ECME maintenance menu contains the BPS Unstrand Screen and the 
"KRN",19,17301,1,2,0)
Re-Open Closed Claim options.
"KRN",19,17301,10,0)
^19.01IP^2^2
"KRN",19,17301,10,1,0)
17304^UNS^1
"KRN",19,17301,10,1,"^")
BPS UNSTRAND SCREEN
"KRN",19,17301,10,2,0)
17323^ROC^2
"KRN",19,17301,10,2,"^")
BPS REOPEN CLOSED CLAIM
"KRN",19,17301,99)
60473,50822
"KRN",19,17301,"U")
ECME TRANSACTION MAINTENANCE O
"KRN",19,17302,-1)
0^7
"KRN",19,17302,0)
BPS NIGHTLY BACKGROUND JOB^BPS NIGHTLY BACKGROUND JOB^^R^^^^^^^^
"KRN",19,17302,1,0)
^^6^6^3060602^
"KRN",19,17302,1,1,0)
This option is not to be placed on any menu nor run by any user.  It has
"KRN",19,17302,1,2,0)
specifically been designed to be scheduled in TaskMan to be executed
"KRN",19,17302,1,3,0)
once a day during off-peak hours. It is recommended that this option be
"KRN",19,17302,1,4,0)
scheduled to run at night after midnight. Running this option more than
"KRN",19,17302,1,5,0)
once a day may cause unexpected results.  This option is the BPS nightly
"KRN",19,17302,1,6,0)
task that performs ECME-related nightly procedures.
"KRN",19,17302,25)
EN^BPSBCKJ
"KRN",19,17302,"U")
BPS NIGHTLY BACKGROUND JOB
"KRN",19,17304,-1)
0^24
"KRN",19,17304,0)
BPS UNSTRAND SCREEN^View/Unstrand Claims Not Completed^^R^^BPS MANAGER^^^^^^^^^1
"KRN",19,17304,1,0)
^^4^4^3060602^
"KRN",19,17304,1,1,0)
List Manager screen which permits users to see claims that have not
"KRN",19,17304,1,2,0)
completed and have been in progress for one half hour or more. Users
"KRN",19,17304,1,3,0)
can then unstrand these claims so that they can be processed via the
"KRN",19,17304,1,4,0)
ECME user screen (i.e., reversed, resubmitted).
"KRN",19,17304,15)
D KILL^XUSCLEAN
"KRN",19,17304,25)
EN^BPSUSCR
"KRN",19,17304,99.1)
58154,30494
"KRN",19,17304,"U")
VIEW/UNSTRAND CLAIMS NOT COMPL
"KRN",19,17305,-1)
0^12
"KRN",19,17305,0)
BPS RPT PAYER SHEET DETAIL^Payer Sheet Detail Report^^R^^BPS REPORTS^^^^^^
"KRN",19,17305,1,0)
^^3^3^3060602^
"KRN",19,17305,1,1,0)
This report shows detail information for payer sheets in the BPS NCPDP
"KRN",19,17305,1,2,0)
FORMATS (#9002313.92) table, including NCPDP segment and field
"KRN",19,17305,1,3,0)
information.
"KRN",19,17305,25)
EN^BPSRPAY
"KRN",19,17305,"U")
PAYER SHEET DETAIL REPORT
"KRN",19,17306,-1)
0^23
"KRN",19,17306,0)
BPS STATISTICS SCREEN^Statistics Screen^^R^^BPS MANAGER^^^^^^^^1^1
"KRN",19,17306,1,0)
^^4^4^3060602^
"KRN",19,17306,1,1,0)
List Manager screen that shows claims that are in progress and
"KRN",19,17306,1,2,0)
completed.  The in progress claims are broken out by the progress states
"KRN",19,17306,1,3,0)
(i.e., Waiting for Packet Build, Transmitted).  The completed claims are
"KRN",19,17306,1,4,0)
broken out by payer results (i.e., Paid, Rejected, Duplicate).
"KRN",19,17306,15)
D KILL^XUSCLEAN
"KRN",19,17306,20)
K BPSQUIT D INIT^BPSMHDR I $G(BPSQUIT) K BPSQUIT S XQUIT=1
"KRN",19,17306,25)
BPSOS2
"KRN",19,17306,"U")
STATISTICS SCREEN
"KRN",19,17307,-1)
0^16
"KRN",19,17307,0)
BPS RPT SETUP PHARMACIES^ECME Setup - Pharmacies Report^^P^^BPS REPORTS^^^^^^^^^1
"KRN",19,17307,1,0)
^^3^3^3060602^
"KRN",19,17307,1,1,0)
This report shows BPS Pharmacy information entered via the Register with
"KRN",19,17307,1,2,0)
Austin Automation Center and Edit ECME Pharmacy Data options.  All BPS
"KRN",19,17307,1,3,0)
Pharmacies are displayed.
"KRN",19,17307,15)
D PRESSANY^BPSOSU5(),KILL^XUSCLEAN
"KRN",19,17307,30)

"KRN",19,17307,60)
BPS(9002313.56,
"KRN",19,17307,62)
0
"KRN",19,17307,63)
[CAPTIONED]
"KRN",19,17307,64)
[BPS SETUP PHARMACIES]
"KRN",19,17307,"U")
ECME SETUP - PHARMACIES REPORT
"KRN",19,17308,-1)
0^18
"KRN",19,17308,0)
BPS RPT TURNAROUND STATS^Turn-around time statistics^^R^^BPS REPORTS^^^^^^^^^1
"KRN",19,17308,1,0)
^^4^4^3060602^
"KRN",19,17308,1,1,0)
After the user selects a transaction date range, this report shows the 
"KRN",19,17308,1,2,0)
length of time for claims to complete, including breakouts for various 
"KRN",19,17308,1,3,0)
steps of claims creation.  The end of the report has the average time for 
"KRN",19,17308,1,4,0)
the claims displayed.
"KRN",19,17308,15)
D PRESSANY^BPSOSU5(),KILL^XUSCLEAN
"KRN",19,17308,25)
BPSRDT1
"KRN",19,17308,"U")
TURN-AROUND TIME STATISTICS
"KRN",19,17309,-1)
0^13
"KRN",19,17309,0)
BPS RPT RECENT TRANSACTIONS^Recent Transactions^^R^^BPS REPORTS^^^^^^
"KRN",19,17309,1,0)
^^6^6^3060602^
"KRN",19,17309,1,1,0)
This report summarizes recently completed transactions for the selected 
"KRN",19,17309,1,2,0)
criteria. A claim (to be included in this Report) is defined as a claim 
"KRN",19,17309,1,3,0)
that has been successfully transmitted to the payer. These claims will 
"KRN",19,17309,1,4,0)
include submissions, reversals and resubmissions. Closed Claims will not 
"KRN",19,17309,1,5,0)
show up on this report since this report displays activity between ECME 
"KRN",19,17309,1,6,0)
and the payer only.
"KRN",19,17309,25)
EN^BPSRPT0(5)
"KRN",19,17309,62)
0
"KRN",19,17309,"U")
RECENT TRANSACTIONS
"KRN",19,17310,-1)
0^19
"KRN",19,17310,0)
BPS SETUP BASIC PARAMS^Edit Basic ECME Parameters^^R^^BPS MASTER^^^^^^^^^1
"KRN",19,17310,1,0)
^^3^3^3060602^
"KRN",19,17310,1,1,0)
Gives users the ability to edit the ECME timeout parameter, which 
"KRN",19,17310,1,2,0)
determines how long ECME claim progress messages are displayed on the 
"KRN",19,17310,1,3,0)
screen.
"KRN",19,17310,15)
D KILL^XUSCLEAN
"KRN",19,17310,25)
PART1^BPSOSS8
"KRN",19,17310,"U")
EDIT BASIC ECME PARAMETERS
"KRN",19,17323,-1)
0^2
"KRN",19,17323,0)
BPS REOPEN CLOSED CLAIM^Re Open CLOSED Claim^^R^^BPS MANAGER^^^^^^^^
"KRN",19,17323,1,0)
^^3^3^3060627^
"KRN",19,17323,1,1,0)
This option allows the user to Re Open a claim that has been previously 
"KRN",19,17323,1,2,0)
REJECTED and Closed using the ECME Close Claim option. Once a claim is Re 
"KRN",19,17323,1,3,0)
Opened, the user may resubmit the claim to the payer for payment.
"KRN",19,17323,20)

"KRN",19,17323,25)
EN1^BPSREOP
"KRN",19,17323,"U")
RE OPEN CLOSED CLAIM
"KRN",101,2228,-1)
4^17
"KRN",101,2228,0)
VALM REFRESH
"KRN",101,2234,-1)
4^21
"KRN",101,2234,0)
VALM QUIT
"KRN",101,2236,-1)
4^18
"KRN",101,2236,0)
VALM PRINT LIST
"KRN",101,2238,-1)
4^20
"KRN",101,2238,0)
VALM TURN ON/OFF MENUS
"KRN",101,2240,-1)
4^19
"KRN",101,2240,0)
VALM SEARCH LIST
"KRN",101,2247,-1)
4^15
"KRN",101,2247,0)
VALM RIGHT
"KRN",101,2248,-1)
4^16
"KRN",101,2248,0)
VALM LEFT
"KRN",101,6567,-1)
0^4
"KRN",101,6567,0)
BPS PRTCL USRSCR HIDDEN ACTIONS^ECME User Screen Hidden Actions^^M^^^^^^^^
"KRN",101,6567,10,0)
^101.01PA^28^28
"KRN",101,6567,10,2,0)
6578^-^12^
"KRN",101,6567,10,2,"^")
BPS VALM PREVIOUS SCREEN
"KRN",101,6567,10,10,0)
6580^PS^25^
"KRN",101,6567,10,10,"^")
BPS VALM PRINT SCREEN
"KRN",101,6567,10,11,0)
6583^LS^22^
"KRN",101,6567,10,11,"^")
BPS VALM LAST SCREEN
"KRN",101,6567,10,12,0)
6582^FS^20^
"KRN",101,6567,10,12,"^")
BPS VALM FIRST SCREEN
"KRN",101,6567,10,16,0)
6568^DV^40^
"KRN",101,6567,10,16,"^")
BPS PRTCL USRSCR DEVELOPER LOG
"KRN",101,6567,10,17,0)
6579^+^11^
"KRN",101,6567,10,17,"^")
BPS VALM NEXT SCREEN
"KRN",101,6567,10,18,0)
6576^DN^14^
"KRN",101,6567,10,18,"^")
BPS VALM DOWN A LINE
"KRN",101,6567,10,19,0)
6577^UP^13^
"KRN",101,6567,10,19,"^")
BPS VALM UP ONE LINE
"KRN",101,6567,10,20,0)
6581^GO^23^
"KRN",101,6567,10,20,"^")
BPS VALM GOTO PAGE
"KRN",101,6567,10,21,0)
2247^>^15^
"KRN",101,6567,10,21,"^")
VALM RIGHT
"KRN",101,6567,10,22,0)
2248^<^16^
"KRN",101,6567,10,22,"^")
VALM LEFT
"KRN",101,6567,10,23,0)
2228^RD^24^
"KRN",101,6567,10,23,"^")
VALM REFRESH
"KRN",101,6567,10,24,0)
2236^PL^26^
"KRN",101,6567,10,24,"^")
VALM PRINT LIST
"KRN",101,6567,10,25,0)
2240^SL^31^
"KRN",101,6567,10,25,"^")
VALM SEARCH LIST
"KRN",101,6567,10,26,0)
2238^ADPL^32^
"KRN",101,6567,10,26,"^")
VALM TURN ON/OFF MENUS
"KRN",101,6567,10,27,0)
2234^Q^33^
"KRN",101,6567,10,27,"^")
VALM QUIT
"KRN",101,6567,10,28,0)
6615^RED^^
"KRN",101,6567,10,28,"^")
BPS PRTCL USRSCR RESUBMIT EDITS
"KRN",101,6567,99)
60473,50821
"KRN",101,6568,-1)
4^10
"KRN",101,6568,0)
BPS PRTCL USRSCR DEVELOPER LOG
"KRN",101,6576,-1)
4^12
"KRN",101,6576,0)
BPS VALM DOWN A LINE
"KRN",101,6577,-1)
4^13
"KRN",101,6577,0)
BPS VALM UP ONE LINE
"KRN",101,6578,-1)
4^6
"KRN",101,6578,0)
BPS VALM PREVIOUS SCREEN
"KRN",101,6579,-1)
4^11
"KRN",101,6579,0)
BPS VALM NEXT SCREEN
"KRN",101,6580,-1)
4^7
"KRN",101,6580,0)
BPS VALM PRINT SCREEN
"KRN",101,6581,-1)
4^14
"KRN",101,6581,0)
BPS VALM GOTO PAGE
"KRN",101,6582,-1)
4^9
"KRN",101,6582,0)
BPS VALM FIRST SCREEN
"KRN",101,6583,-1)
4^8
"KRN",101,6583,0)
BPS VALM LAST SCREEN
"KRN",101,6615,-1)
0^5
"KRN",101,6615,0)
BPS PRTCL USRSCR RESUBMIT EDITS^Resubmit Claim w/EDITS^^A^^^^^^^^
"KRN",101,6615,20)
D RESED^BPSRES
"KRN",101,6615,99)
60473,50821
"KRN",101,6616,-1)
0^1
"KRN",101,6616,0)
BPS PRTCL REOPEN^Reopen Claim^^A^^^^^^^^E CLAIMS MGMT ENGINE
"KRN",101,6616,20)
D SELECT^BPSREOP1
"KRN",101,6616,99)
60473,50821
"KRN",101,6617,-1)
0^3
"KRN",101,6617,0)
BPS PRTCL REOPEN MENU^Menu protocol for Reopen Close claims^^M^^^^^^^^E CLAIMS MGMT ENGINE
"KRN",101,6617,4)
26^4^^
"KRN",101,6617,10,0)
^101.01PA^2^2
"KRN",101,6617,10,1,0)
6616^RE^1^
"KRN",101,6617,10,1,"^")
BPS PRTCL REOPEN
"KRN",101,6617,10,2,0)
6618^EX^2^
"KRN",101,6617,10,2,"^")
BPS PRTCL REOPEN EXIT
"KRN",101,6617,26)
DO SHOW^VALM
"KRN",101,6617,28)
Select action:
"KRN",101,6617,99)
60473,50821
"KRN",101,6618,-1)
0^2
"KRN",101,6618,0)
BPS PRTCL REOPEN EXIT^Exit^^A^^^^^^^^E CLAIMS MGMT ENGINE
"KRN",101,6618,4)
^^^
"KRN",101,6618,99)
60473,50821
"KRN",409.61,645,-1)
0^2
"KRN",409.61,645,0)
BPS LSTMN ECME USRSCR^1^^80^6^18^0^1^LM template for User Screen^BPS PRTCL ECME USRSCR^PHARMACY ECME^1^^1
"KRN",409.61,645,1)
^BPS PRTCL USRSCR HIDDEN ACTIONS
"KRN",409.61,645,"ARRAY")
 ^TMP("BPSSCR",$J,"VALM")
"KRN",409.61,645,"COL",0)
^409.621^2^2
"KRN",409.61,645,"COL",1,0)
CAPTION^5^76^PATIENT/DRUG/COMMENTS   INSURANCE/NDC/FILL/RX#/ECME#           LOC/TYP RXINF^^0
"KRN",409.61,645,"COL",2,0)
LINENO^1^5^##
"KRN",409.61,645,"COL","AIDENT",0,1)

"KRN",409.61,645,"COL","B","CAPTION",1)

"KRN",409.61,645,"COL","B","LINENO",2)

"KRN",409.61,645,"FNL")
D EXIT^BPSSCR
"KRN",409.61,645,"HDR")
D HDR^BPSSCR
"KRN",409.61,645,"HLP")
D HELP^BPSSCR
"KRN",409.61,645,"INIT")
D INIT^BPSSCR
"KRN",409.61,659,-1)
0^1
"KRN",409.61,659,0)
BPS LSTMN ECME REOPEN^1^^80^5^18^0^1^LM template for Reopen screen^BPS PRTCL REOPEN MENU^REOPEN CLOSED CLAIM^1^^1
"KRN",409.61,659,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,659,"ARRAY")
 ^TMP("BPSREOP",$J,"VALM")
"KRN",409.61,659,"COL",0)
^409.621^2^2
"KRN",409.61,659,"COL",1,0)
CAPTION^5^76^  DRUG               NDC           FILL  RX#         REF/ECME# LOC RX INFO 
"KRN",409.61,659,"COL",2,0)
LINENO^1^5^##
"KRN",409.61,659,"COL","B","CAPTION",1)

"KRN",409.61,659,"COL","B","LINENO",2)

"KRN",409.61,659,"FNL")
D EXIT^BPSREOP
"KRN",409.61,659,"HDR")
D HDR^BPSREOP
"KRN",409.61,659,"HLP")
D HELP^BPSREOP
"KRN",409.61,659,"INIT")
D INIT^BPSREOP
"MBREQ")
1
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",570,-1)
1^1
"PKG",570,0)
E CLAIMS MGMT ENGINE^BPS^ELECTRONIC CLAIMS MGT
"PKG",570,20,0)
^9.402P^^
"PKG",570,22,0)
^9.49I^1^1
"PKG",570,22,1,0)
1.0^3041008^3041202^1017
"PKG",570,22,1,"PAH",1,0)
3^3060912^35198
"PKG",570,22,1,"PAH",1,1,0)
^^13^13^3060912
"PKG",570,22,1,"PAH",1,1,1,0)
This patch supports the National Council for Prescription Drug Programs 
"PKG",570,22,1,"PAH",1,1,2,0)
(NCPDP) standard which was adopted under the Healthcare Insurance
"PKG",570,22,1,"PAH",1,1,3,0)
Portability and Accountability Act (HIPAA) for pharmacy claims. This patch
"PKG",570,22,1,"PAH",1,1,4,0)
is one of six to be released.  Three patches will be released in a KIDS
"PKG",570,22,1,"PAH",1,1,5,0)
multi-build distribution containing: BPS*1*3, PSO*7*247, and IB*2*342.  
"PKG",570,22,1,"PAH",1,1,6,0)
Three patches will be released individually and they are: PRCA*4.5*247,
"PKG",570,22,1,"PAH",1,1,7,0)
PSX*2*62, and PSS*1*115.
"PKG",570,22,1,"PAH",1,1,8,0)
 
"PKG",570,22,1,"PAH",1,1,9,0)
Enhancements included in the release of the six patches are a new option 
"PKG",570,22,1,"PAH",1,1,10,0)
that will enable the user to reopen a closed Electronic Claims Management
"PKG",570,22,1,"PAH",1,1,11,0)
Engine (ECME) claim; updates to the Rx Activity Log; and permanent storage
"PKG",570,22,1,"PAH",1,1,12,0)
of Claims activity information as reported by the ECME Billing Events
"PKG",570,22,1,"PAH",1,1,13,0)
Report. 
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
31
"RTN","BPS01P3")
0^15^B23053500
"RTN","BPS01P3",1,0)
BPS01P3 ;BHAM ISC/NSS - Set BPS pharmacies to ACTIVE, one-time post-install. ;06/01/2004
"RTN","BPS01P3",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**3**;JUN 2004;Build 20
"RTN","BPS01P3",3,0)
 Q
"RTN","BPS01P3",4,0)
 ;
"RTN","BPS01P3",5,0)
EN ;
"RTN","BPS01P3",6,0)
 D FIXOUTPS
"RTN","BPS01P3",7,0)
 D ACTIVATE
"RTN","BPS01P3",8,0)
 Q
"RTN","BPS01P3",9,0)
 ;
"RTN","BPS01P3",10,0)
ACTIVATE ; Set the STATUS in BPS PHARMACIES to ACTIVE
"RTN","BPS01P3",11,0)
 D MSG("Setting the STATUS field in the BPS PHARMACIES file to ACTIVE")
"RTN","BPS01P3",12,0)
 N BPSPHARM,FILNUM
"RTN","BPS01P3",13,0)
 S FILNUM=9002313.56
"RTN","BPS01P3",14,0)
 S BPSPHARM=0 F  S BPSPHARM=$O(^BPS(FILNUM,BPSPHARM)) Q:'BPSPHARM  D
"RTN","BPS01P3",15,0)
 . S $P(^BPS(FILNUM,BPSPHARM,0),U,10)=1
"RTN","BPS01P3",16,0)
 Q
"RTN","BPS01P3",17,0)
 ;
"RTN","BPS01P3",18,0)
 ;identify and remove all duplicate outpatient site item from BPS PHARMACIES file
"RTN","BPS01P3",19,0)
FIXOUTPS ;
"RTN","BPS01P3",20,0)
 D MSG("Deleting Outpatient Site duplicates from BPS PHARMACIES file")
"RTN","BPS01P3",21,0)
 N BPIEN56 ;ien of 9002313.56
"RTN","BPS01P3",22,0)
 N BPIENOUT ;ien of 9002313.5601 (OUTPATIENT SITE multiple)
"RTN","BPS01P3",23,0)
 N BPIEN59 ;ien of file #59
"RTN","BPS01P3",24,0)
 ;set XTMP global for 30 days
"RTN","BPS01P3",25,0)
 K ^XTMP("BPS1P3")
"RTN","BPS01P3",26,0)
 S ^XTMP("BPS1P3",0)=$$FMADD^XLFDT(DT,30)_U_DT
"RTN","BPS01P3",27,0)
 ;first step - identify duplicates
"RTN","BPS01P3",28,0)
 D MSG("> Identifying duplicate entries...")
"RTN","BPS01P3",29,0)
 S BPIEN59=0
"RTN","BPS01P3",30,0)
 F  S BPIEN59=$O(^BPS(9002313.56,"C",BPIEN59)) Q:+BPIEN59=0  D
"RTN","BPS01P3",31,0)
 . S BPIEN56=0
"RTN","BPS01P3",32,0)
 . F  S BPIEN56=$O(^BPS(9002313.56,"C",BPIEN59,BPIEN56)) Q:+BPIEN56=0  D
"RTN","BPS01P3",33,0)
 . . S BPIENOUT=0
"RTN","BPS01P3",34,0)
 . . F  S BPIENOUT=$O(^BPS(9002313.56,"C",BPIEN59,BPIEN56,BPIENOUT)) Q:+BPIENOUT=0  D
"RTN","BPS01P3",35,0)
 . . . I '$D(^XTMP("BPS1P3",1,"K",BPIEN59)) D  Q  ;if this is a first entry in x-ref - it has lowerst ien in BPS PHARMACIES 
"RTN","BPS01P3",36,0)
 . . . . S ^XTMP("BPS1P3",1,"K",BPIEN59,BPIEN56,BPIENOUT)="" ;keep it
"RTN","BPS01P3",37,0)
 . . . S ^XTMP("BPS1P3",1,"D",BPIEN59,BPIEN56,BPIENOUT)="" ;delete it
"RTN","BPS01P3",38,0)
 ;
"RTN","BPS01P3",39,0)
 D DELSITES
"RTN","BPS01P3",40,0)
 Q
"RTN","BPS01P3",41,0)
 ;
"RTN","BPS01P3",42,0)
 ;delete duplicate outpatient site entries from BPS PHARMACIES file
"RTN","BPS01P3",43,0)
DELSITES ;
"RTN","BPS01P3",44,0)
 D MSG("> Deleting duplicate entries...")
"RTN","BPS01P3",45,0)
 N BPCNT
"RTN","BPS01P3",46,0)
 N BPIEN56 ;ien of 9002313.56
"RTN","BPS01P3",47,0)
 N BPIENOUT ;ien of 9002313.5601 (OUTPATIENT SITE multiple)
"RTN","BPS01P3",48,0)
 N BPIEN59 ;ien of file #59
"RTN","BPS01P3",49,0)
 S BPCNT=0
"RTN","BPS01P3",50,0)
 S BPIEN59=0
"RTN","BPS01P3",51,0)
 F  S BPIEN59=$O(^XTMP("BPS1P3",1,"D",BPIEN59)) Q:+BPIEN59=0  D
"RTN","BPS01P3",52,0)
 . S BPIEN56=0
"RTN","BPS01P3",53,0)
 . F  S BPIEN56=$O(^XTMP("BPS1P3",1,"D",BPIEN59,BPIEN56)) Q:+BPIEN56=0  D
"RTN","BPS01P3",54,0)
 . . S BPIENOUT=0
"RTN","BPS01P3",55,0)
 . . F  S BPIENOUT=$O(^XTMP("BPS1P3",1,"D",BPIEN59,BPIEN56,BPIENOUT)) Q:+BPIENOUT=0  D
"RTN","BPS01P3",56,0)
 . . . I '$D(^BPS(9002313.56,BPIEN56,"OPSITE",BPIENOUT)) D  Q
"RTN","BPS01P3",57,0)
 . . . . D MSG("> The entry #"_BPIENOUT_" has been already deleted") Q
"RTN","BPS01P3",58,0)
 . . . D MSG("> Outpatient Site entry#="_BPIENOUT_", value= "_BPIEN59_" from "_$P($G(^BPS(9002313.56,BPIEN56,0)),U))
"RTN","BPS01P3",59,0)
 . . . I $$EDITFLD(9002313.5601,.01,BPIENOUT_","_BPIEN56,"@")>0 S BPCNT=BPCNT+1
"RTN","BPS01P3",60,0)
 D MSG("Outpatient Site duplicates deleted in BPS PHARMACIES file: "_BPCNT)
"RTN","BPS01P3",61,0)
 Q
"RTN","BPS01P3",62,0)
 ;
"RTN","BPS01P3",63,0)
 ;utility to restore deleted items from ^XTMP global in case of emergency 
"RTN","BPS01P3",64,0)
RESTORE ;
"RTN","BPS01P3",65,0)
 D MSG("> Restoring duplicate entries...")
"RTN","BPS01P3",66,0)
 N BPCNT
"RTN","BPS01P3",67,0)
 N BPIEN56 ;ien of 9002313.56
"RTN","BPS01P3",68,0)
 N BPIENOUT ;ien of 9002313.5601 (OUTPATIENT SITE multiple)
"RTN","BPS01P3",69,0)
 N BPIEN59 ;ien of file #59
"RTN","BPS01P3",70,0)
 N BPX
"RTN","BPS01P3",71,0)
 S BPCNT=0
"RTN","BPS01P3",72,0)
 S BPIEN59=0
"RTN","BPS01P3",73,0)
 F  S BPIEN59=$O(^XTMP("BPS1P3",1,"D",BPIEN59)) Q:+BPIEN59=0  D
"RTN","BPS01P3",74,0)
 . S BPIEN56=0
"RTN","BPS01P3",75,0)
 . F  S BPIEN56=$O(^XTMP("BPS1P3",1,"D",BPIEN59,BPIEN56)) Q:+BPIEN56=0  D
"RTN","BPS01P3",76,0)
 . . S BPIENOUT=0
"RTN","BPS01P3",77,0)
 . . F  S BPIENOUT=$O(^XTMP("BPS1P3",1,"D",BPIEN59,BPIEN56,BPIENOUT)) Q:+BPIENOUT=0  D
"RTN","BPS01P3",78,0)
 . . . S BPX=+$G(^BPS(9002313.56,BPIEN56,"OPSITE",BPIENOUT,0))
"RTN","BPS01P3",79,0)
 . . . I BPX>0 D  Q
"RTN","BPS01P3",80,0)
 . . . . I BPX=BPIEN59 D MSG("> The entry #"_BPIENOUT_" already exists") Q
"RTN","BPS01P3",81,0)
 . . . . D MSG("> The required entry #"_BPIENOUT_" exists but its value is different") Q
"RTN","BPS01P3",82,0)
 . . . D MSG("> Outpatient Site entry#="_BPIENOUT_", value= "_BPIEN59_" from "_$P($G(^BPS(9002313.56,BPIEN56,0)),U))
"RTN","BPS01P3",83,0)
 . . . I $$INSITEM(9002313.5601,BPIEN56,BPIEN59,BPIENOUT)'=-1 S BPCNT=BPCNT+1
"RTN","BPS01P3",84,0)
 D MSG("Outpatient Site duplicates restored in BPS PHARMACIES file: "_BPCNT)
"RTN","BPS01P3",85,0)
 Q
"RTN","BPS01P3",86,0)
 ;
"RTN","BPS01P3",87,0)
 ;
"RTN","BPS01P3",88,0)
 ;edit/delete fields
"RTN","BPS01P3",89,0)
 ;Input:
"RTN","BPS01P3",90,0)
 ;FILENO file/subfile number
"RTN","BPS01P3",91,0)
 ;FLDNO field number
"RTN","BPS01P3",92,0)
 ;RECIEN ien string  (format: "...,ien of multiple,ien")
"RTN","BPS01P3",93,0)
 ;NEWVAL new value to file  (use "@" to delete a value)
"RTN","BPS01P3",94,0)
 ;Output:
"RTN","BPS01P3",95,0)
 ;0^ NEWVAL^error if failure
"RTN","BPS01P3",96,0)
 ;1^ NEWVAL if success
"RTN","BPS01P3",97,0)
EDITFLD(FILENO,FLDNO,RECIEN,NEWVAL) ;
"RTN","BPS01P3",98,0)
 N RECIENS,FDA,ERRARR
"RTN","BPS01P3",99,0)
 S RECIENS=RECIEN_","
"RTN","BPS01P3",100,0)
 S FDA(FILENO,RECIENS,FLDNO)=NEWVAL
"RTN","BPS01P3",101,0)
 D FILE^DIE("","FDA","ERRARR")
"RTN","BPS01P3",102,0)
 I $D(ERRARR) Q "0^"_NEWVAL_"^"_ERRARR("DIERR",1,"TEXT",1)
"RTN","BPS01P3",103,0)
 Q "1^"_NEWVAL
"RTN","BPS01P3",104,0)
 ;
"RTN","BPS01P3",105,0)
 ;insert item
"RTN","BPS01P3",106,0)
 ;BPFILE - subfile# (9002313.59111) for comment
"RTN","BPS01P3",107,0)
 ;BPIEN - ien of the parent file entry in which the new subfile entry will be inserted
"RTN","BPS01P3",108,0)
 ;BPVAL01 - .01 value for the new entry
"RTN","BPS01P3",109,0)
 ;NEWRECNO -(optional) specify IEN if you want specific value
"RTN","BPS01P3",110,0)
 ; Note: "" then the system will assign the entry number itself.
"RTN","BPS01P3",111,0)
 ;BPFLGS - FLAGS parameter for UPDATE^DIE (avoid using using "E")
"RTN","BPS01P3",112,0)
 ;
"RTN","BPS01P3",113,0)
INSITEM(BPFILE,BPIEN,BPVAL01,NEWRECNO,BPFLGS) ;*/
"RTN","BPS01P3",114,0)
 N BPSSI,BPIENS,BPFDA,BPERR
"RTN","BPS01P3",115,0)
 I '$G(NEWRECNO) N NEWRECNO S NEWRECNO=$G(NEWRECNO)
"RTN","BPS01P3",116,0)
 I BPIEN'="" S BPIENS="+1,"_BPIEN_"," I $L(NEWRECNO)>0 S BPSSI(1)=+NEWRECNO
"RTN","BPS01P3",117,0)
 I BPIEN="" S BPIENS="+1," I $L(NEWRECNO)>0 S BPSSI(1)=+NEWRECNO
"RTN","BPS01P3",118,0)
 S BPFDA(BPFILE,BPIENS,.01)=BPVAL01
"RTN","BPS01P3",119,0)
 D UPDATE^DIE($G(BPFLGS),"BPFDA","BPSSI","BPERR")
"RTN","BPS01P3",120,0)
 I $D(BPERR) D BMES^XPDUTL(BPERR("DIERR",1,"TEXT",1)) Q -1  ;D BMES^XPDUTL(BPERR("DIERR",1,"TEXT",1)) 
"RTN","BPS01P3",121,0)
 Q +$G(BPSSI(1))
"RTN","BPS01P3",122,0)
 ;
"RTN","BPS01P3",123,0)
 ;display message during post install
"RTN","BPS01P3",124,0)
 ;MESG - message text
"RTN","BPS01P3",125,0)
MSG(MESG) ;
"RTN","BPS01P3",126,0)
 D BMES^XPDUTL(MESG)
"RTN","BPS01P3",127,0)
 Q
"RTN","BPS01P3",128,0)
 ;
"RTN","BPSBUTL")
0^1^B47119211
"RTN","BPSBUTL",1,0)
BPSBUTL ;BHAM ISC/MFR/VA/DLF - IB Communication Utilities ;06/01/2004
"RTN","BPSBUTL",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSBUTL",3,0)
 ;Reference to ^PSRX supported by DBIA 1977
"RTN","BPSBUTL",4,0)
 ;Reference to STORESP^IBNCPDP supported by DBIA 4299
"RTN","BPSBUTL",5,0)
 ;Reference to ^DG(40.8,"AD" supported by DBIA 2817
"RTN","BPSBUTL",6,0)
 ;----------------------------------------------------------------------
"RTN","BPSBUTL",7,0)
CLOSE(CLAIM,TRNDX,REASON,PAPER,RELCOP,COMMENT,ERROR) ; Send IB an update on the CLAIM status for a Closed Claim
"RTN","BPSBUTL",8,0)
 N DFN,IBARY,BILLNUM,CLAIMNFO,RXINFO,RFINFO,TRANINFO
"RTN","BPSBUTL",9,0)
 ;
"RTN","BPSBUTL",10,0)
 ; - Data gathering
"RTN","BPSBUTL",11,0)
 D GETS^DIQ("9002313.59",TRNDX,"1.11;9","I","TRANINFO")
"RTN","BPSBUTL",12,0)
 S RXIEN=TRANINFO(9002313.59,TRNDX_",",1.11,"I")
"RTN","BPSBUTL",13,0)
 I '$D(^PSRX(RXIEN,0)) S ERROR="Prescription not found." Q
"RTN","BPSBUTL",14,0)
 S IBARY("FILL NUMBER")=TRANINFO(9002313.59,TRNDX_",",9,"I")
"RTN","BPSBUTL",15,0)
 D GETS^DIQ("9002313.02",CLAIM,"400*;401;402;403;426","","CLAIMNFO")
"RTN","BPSBUTL",16,0)
 S IBARY("FILL DATE")=$$EXT2FM^BPSOSU1(CLAIMNFO("9002313.0201","1,"_CLAIM_",","401"))
"RTN","BPSBUTL",17,0)
 D GETS^DIQ("52",RXIEN,".01;4;6;8;7;16;27","IE","RXINFO")
"RTN","BPSBUTL",18,0)
 S FILLNUM=+IBARY("FILL NUMBER") I FILLNUM>0 D GETS^DIQ("52.1",FILLNUM_","_RXIEN,".01;1;1.1;11","","RFINFO")
"RTN","BPSBUTL",19,0)
 S DFN=$P(^PSRX(RXIEN,0),"^",2)
"RTN","BPSBUTL",20,0)
 S IBARY("FILLED BY")=RXINFO(52,RXIEN_",",16,"I"),IBARY("PRESCRIPTION")=RXIEN
"RTN","BPSBUTL",21,0)
 S IBARY("BILLED")=$$DFF2EXT^BPSECFM($P(CLAIMNFO("9002313.0201","1,"_CLAIM_",","426"),"DQ",2))
"RTN","BPSBUTL",22,0)
 S IBARY("CLAIMID")=$P(CLAIMNFO("9002313.0201","1,"_CLAIM_",","402"),"D2",2)
"RTN","BPSBUTL",23,0)
 S IBARY("PLAN")=$P(^BPST(TRNDX,10,1,0),"^"),IBARY("STATUS")="CLOSED",IBARY("PAID")=0
"RTN","BPSBUTL",24,0)
 S IBARY("RELEASE DATE")=$S(FILLNUM=0:$P(^PSRX(RXIEN,2),"^",13),1:$P($G(^PSRX(RXIEN,1,FILLNUM,0)),"^",18))
"RTN","BPSBUTL",25,0)
 S IBARY("DIVISION")=$$MCDIV(RXIEN,FILLNUM),IBARY("USER")=DUZ
"RTN","BPSBUTL",26,0)
 I REASON'="" D
"RTN","BPSBUTL",27,0)
 . S IBARY("CLOSE REASON")=$O(^IBE(356.8,"B",REASON,0))
"RTN","BPSBUTL",28,0)
 . S IBARY("DROP TO PAPER")=+$G(PAPER)
"RTN","BPSBUTL",29,0)
 . S IBARY("RELEASE COPAY")=+$G(RELCOP)
"RTN","BPSBUTL",30,0)
 I $G(COMMENT)]"" S IBARY("CLOSE COMMENT")=COMMENT
"RTN","BPSBUTL",31,0)
 ;
"RTN","BPSBUTL",32,0)
 S BILLNUM=$$STORESP^IBNCPDP(DFN,.IBARY)
"RTN","BPSBUTL",33,0)
 Q
"RTN","BPSBUTL",34,0)
 ; Send IB an update on the CLAIM status for a restocked or deleted prescription
"RTN","BPSBUTL",35,0)
CLOSE2(RXIEN,BFILL,BWHERE) ;
"RTN","BPSBUTL",36,0)
 N IEN59,IBARY,DFN,BILLNUM,FILL,REASON
"RTN","BPSBUTL",37,0)
 N CLAIMNFO,RXINFO,RFINFO
"RTN","BPSBUTL",38,0)
 N DIE,DA,DR
"RTN","BPSBUTL",39,0)
 ;
"RTN","BPSBUTL",40,0)
 ; Check parameters
"RTN","BPSBUTL",41,0)
 I '$G(RXIEN) S ERROR="No prescription parameter" Q
"RTN","BPSBUTL",42,0)
 I '$D(^PSRX(RXIEN,0)) S ERROR="Prescription not found." Q
"RTN","BPSBUTL",43,0)
 I ",DDED,DE,RS,"'[(","_BWHERE_",") S ERROR="Invalid BWHERE parameter" Q
"RTN","BPSBUTL",44,0)
 ;
"RTN","BPSBUTL",45,0)
 ; Calculate the transaction IEN and see that it exists
"RTN","BPSBUTL",46,0)
 S FILL=".0000"_+BFILL
"RTN","BPSBUTL",47,0)
 S IEN59=RXIEN_"."_$E(FILL,$L(FILL)-3,$L(FILL))_"1"
"RTN","BPSBUTL",48,0)
 I '$D(^BPST(IEN59,0)) Q
"RTN","BPSBUTL",49,0)
 ;
"RTN","BPSBUTL",50,0)
 ; Get claim data
"RTN","BPSBUTL",51,0)
 S CLAIM=$P(^BPST(IEN59,0),"^",4)
"RTN","BPSBUTL",52,0)
 D GETS^DIQ("9002313.02",CLAIM,"400*;401;402;426","","CLAIMNFO")
"RTN","BPSBUTL",53,0)
 S IBARY("FILL NUMBER")=+BFILL
"RTN","BPSBUTL",54,0)
 S IBARY("FILL DATE")=$$EXT2FM^BPSOSU1(CLAIMNFO("9002313.0201","1,"_CLAIM_",","401"))
"RTN","BPSBUTL",55,0)
 ;
"RTN","BPSBUTL",56,0)
 ; Get prescription data
"RTN","BPSBUTL",57,0)
 D GETS^DIQ("52",RXIEN,".01;4;6;8;7;16;27","IE","RXINFO")
"RTN","BPSBUTL",58,0)
 S FILLNUM=IBARY("FILL NUMBER")
"RTN","BPSBUTL",59,0)
 I FILLNUM>0 D GETS^DIQ("52.1",FILLNUM_","_RXIEN,".01;1;1.1;11","","RFINFO")
"RTN","BPSBUTL",60,0)
 S DFN=$P(^PSRX(RXIEN,0),"^",2)
"RTN","BPSBUTL",61,0)
 S IBARY("FILLED BY")=RXINFO(52,RXIEN_",",16,"I"),IBARY("PRESCRIPTION")=RXIEN
"RTN","BPSBUTL",62,0)
 S IBARY("BILLED")=$$DFF2EXT^BPSECFM($P(CLAIMNFO("9002313.0201","1,"_CLAIM_",","426"),"DQ",2))
"RTN","BPSBUTL",63,0)
 S IBARY("CLAIMID")=$P(CLAIMNFO("9002313.0201","1,"_CLAIM_",","402"),"D2",2)
"RTN","BPSBUTL",64,0)
 S IBARY("PLAN")=$P(^BPST(IEN59,10,1,0),"^"),IBARY("STATUS")="CLOSED",IBARY("PAID")=0
"RTN","BPSBUTL",65,0)
 S IBARY("RELEASE DATE")=$S(FILLNUM=0:$P(^PSRX(RXIEN,2),"^",13),1:$P($G(^PSRX(RXIEN,1,FILLNUM,0)),"^",18))
"RTN","BPSBUTL",66,0)
 ;
"RTN","BPSBUTL",67,0)
 ; Determine the reversal reason based on the BWHERE value
"RTN","BPSBUTL",68,0)
 I BWHERE="RS" S REASON="PRESCRIPTION NOT RELEASED"
"RTN","BPSBUTL",69,0)
 I BWHERE="DE"!(BWHERE="DDED") S REASON="PRESCRIPTION DELETED"
"RTN","BPSBUTL",70,0)
 I REASON]"" S IBARY("CLOSE REASON")=$O(^IBE(356.8,"B",REASON,0))
"RTN","BPSBUTL",71,0)
 ;
"RTN","BPSBUTL",72,0)
 ;if a refill was deleted while RX is still active (not deleted) then send DELETION OF REFILL comment for CT record
"RTN","BPSBUTL",73,0)
 I BWHERE="DE",$$RXSTATUS^BPSSCRU2(RXIEN,0)'=13 S IBARY("CLOSE COMMENT")="DELETION OF REFILL ONLY - ORIGINAL RX MAY REMAIN ACTIVE"
"RTN","BPSBUTL",74,0)
 ;
"RTN","BPSBUTL",75,0)
 ; Miscellaneous values
"RTN","BPSBUTL",76,0)
 S IBARY("DIVISION")=$$MCDIV(RXIEN,FILLNUM),IBARY("USER")=.5
"RTN","BPSBUTL",77,0)
 ;
"RTN","BPSBUTL",78,0)
 ; Update IB
"RTN","BPSBUTL",79,0)
 S BILLNUM=$$STORESP^IBNCPDP(DFN,.IBARY)
"RTN","BPSBUTL",80,0)
 ;
"RTN","BPSBUTL",81,0)
 ; Update the claim file that the claim is closed and the reason why.
"RTN","BPSBUTL",82,0)
 S DIE="^BPSC(",DA=CLAIM
"RTN","BPSBUTL",83,0)
 S DR="901///1;902///"_$$NOW^XLFDT()_";903///.5;904///"_IBARY("CLOSE REASON")
"RTN","BPSBUTL",84,0)
 D ^DIE
"RTN","BPSBUTL",85,0)
 Q
"RTN","BPSBUTL",86,0)
 ;
"RTN","BPSBUTL",87,0)
 ; Function to return Transaction, claim, and response IENs
"RTN","BPSBUTL",88,0)
 ; Parameters:
"RTN","BPSBUTL",89,0)
 ;    RXI: Prescription IEN
"RTN","BPSBUTL",90,0)
 ;    RXR: Fill Number
"RTN","BPSBUTL",91,0)
 ; Returns:
"RTN","BPSBUTL",92,0)
 ;    IEN59^Claim IEN^Response IEN^Reversal Claim IEN^Reversal Response IEN
"RTN","BPSBUTL",93,0)
CLAIM(RXI,RXR) ;
"RTN","BPSBUTL",94,0)
 N IEN59,CLAIMIEN,RESPIEN,REVCLAIM,REVRESP
"RTN","BPSBUTL",95,0)
 I '$G(RXI) Q
"RTN","BPSBUTL",96,0)
 S IEN59=$$IEN59^BPSOSRX(RXI,RXR)
"RTN","BPSBUTL",97,0)
 I '$D(^BPST(IEN59,0)) Q ""
"RTN","BPSBUTL",98,0)
 S CLAIMIEN=$P(^BPST(IEN59,0),"^",4),RESPIEN=$P(^BPST(IEN59,0),"^",5)
"RTN","BPSBUTL",99,0)
 S REVCLAIM=$P($G(^BPST(IEN59,4)),"^",1),REVRESP=$P($G(^BPST(IEN59,4)),"^",2)
"RTN","BPSBUTL",100,0)
 Q IEN59_U_CLAIMIEN_U_RESPIEN_U_REVCLAIM_U_REVRESP
"RTN","BPSBUTL",101,0)
 ;
"RTN","BPSBUTL",102,0)
NABP(RXP,BFILL) ;
"RTN","BPSBUTL",103,0)
 N BPSTIEN,BPSCIEN,DFILL,NABP
"RTN","BPSBUTL",104,0)
 S DFILL=$E($TR($J("",4-$L(BFILL))," ","0")_BFILL,1,4)
"RTN","BPSBUTL",105,0)
 S BPSTIEN=RXP_"."_DFILL_"1"
"RTN","BPSBUTL",106,0)
 I 'BPSTIEN Q 0
"RTN","BPSBUTL",107,0)
 S BPSCIEN=$P($G(^BPST(BPSTIEN,0)),U,4)
"RTN","BPSBUTL",108,0)
 I 'BPSCIEN Q 0
"RTN","BPSBUTL",109,0)
 S NABP=$P($G(^BPSC(BPSCIEN,200)),U)
"RTN","BPSBUTL",110,0)
 Q NABP
"RTN","BPSBUTL",111,0)
 ;
"RTN","BPSBUTL",112,0)
 ;MC Division for the IB
"RTN","BPSBUTL",113,0)
MCDIV(RXIEN,FILLNUM) ; Get MC DIVISION from the Rx/Fill
"RTN","BPSBUTL",114,0)
 N BPSDIV,BINST,BMCDIV
"RTN","BPSBUTL",115,0)
 ; outpatient division
"RTN","BPSBUTL",116,0)
 I 'FILLNUM S BPSDIV=+$P($G(^PSRX(RXIEN,2)),U,9)
"RTN","BPSBUTL",117,0)
 E  S BPSDIV=+$P($G(^PSRX(RXIEN,1,FILLNUM,0)),U,9)
"RTN","BPSBUTL",118,0)
 I 'BPSDIV Q ""
"RTN","BPSBUTL",119,0)
 ; related institution
"RTN","BPSBUTL",120,0)
 S BINST=+$P($G(^PS(59,BPSDIV,"INI")),U) Q:'BINST ""
"RTN","BPSBUTL",121,0)
 S BMCDIV=$O(^DG(40.8,"AD",BINST,0)) ; medical center division
"RTN","BPSBUTL",122,0)
 Q BMCDIV
"RTN","BPSBUTL",123,0)
 ;
"RTN","BPSBUTL",124,0)
 ; DIVNABP - Get NABP/NCPDP number for a specific outpatient site
"RTN","BPSBUTL",125,0)
 ; Input
"RTN","BPSBUTL",126,0)
 ;   ABSBPDIV - Outpatient Site
"RTN","BPSBUTL",127,0)
 ; Output
"RTN","BPSBUTL",128,0)
 ;   "" - No BPS Pharmacies or no NABP/NCPDP number found
"RTN","BPSBUTL",129,0)
 ;   NABP/NCPCP number 
"RTN","BPSBUTL",130,0)
DIVNCPDP(ABSBPDIV) ;
"RTN","BPSBUTL",131,0)
 N BPSHARM,NABP,ABSBSDIV
"RTN","BPSBUTL",132,0)
 I '$G(ABSBPDIV) Q ""
"RTN","BPSBUTL",133,0)
 S NABP="",ABSBSDIV=1
"RTN","BPSBUTL",134,0)
 ; GETPHARM expects ABSBPDIV and ABSBSDIV to be set
"RTN","BPSBUTL",135,0)
 ; Returns BPSHARM (BPS Pharmacy IEN)
"RTN","BPSBUTL",136,0)
 D GETPHARM^BPSOSQC
"RTN","BPSBUTL",137,0)
 I BPSHARM'=0 S NABP=$$GET1^DIQ(9002313.56,BPSHARM_",",.02)
"RTN","BPSBUTL",138,0)
 Q NABP
"RTN","BPSBUTL",139,0)
 ;
"RTN","BPSBUTL",140,0)
 ;ADDCOMM - Add a comment to a ECME claim
"RTN","BPSBUTL",141,0)
 ;Input:
"RTN","BPSBUTL",142,0)
 ; BPRX - ien in file #52 or external RX# 
"RTN","BPSBUTL",143,0)
 ; BPREF - refill number (0,1,2,...)
"RTN","BPSBUTL",144,0)
 ; BPRCMNT - comment text 
"RTN","BPSBUTL",145,0)
 ;Output:
"RTN","BPSBUTL",146,0)
 ;  1 - okay
"RTN","BPSBUTL",147,0)
 ; -1 - failed
"RTN","BPSBUTL",148,0)
ADDCOMM(BPRX,BPREF,BPRCMNT) ;*/
"RTN","BPSBUTL",149,0)
 N BP59,BPNOW,BPLCK,BPREC,BPDA,BPERR
"RTN","BPSBUTL",150,0)
 N %,%H,%I,X
"RTN","BPSBUTL",151,0)
 I $L(BPRX)<1 Q -1
"RTN","BPSBUTL",152,0)
 I $G(BPRCMNT)="" Q -1
"RTN","BPSBUTL",153,0)
 S BP59=BPRX_$S($L(+BPREF)=1:".000",1:".00")_+BPREF_"1" ;borrowed from CLOSE2 above
"RTN","BPSBUTL",154,0)
 D NOW^%DTC
"RTN","BPSBUTL",155,0)
 S BPNOW=%
"RTN","BPSBUTL",156,0)
 L +^BPST(9002313.59111,+BP59):10
"RTN","BPSBUTL",157,0)
 S BPLCK=$T
"RTN","BPSBUTL",158,0)
 I 'BPLCK Q -1  ;quit
"RTN","BPSBUTL",159,0)
 D INSITEM^BPSCMT01(9002313.59111,+BP59,BPNOW)
"RTN","BPSBUTL",160,0)
 S BPREC=$O(^BPST(BP59,11,"B",BPNOW,0))
"RTN","BPSBUTL",161,0)
 I BPREC>0 D
"RTN","BPSBUTL",162,0)
 . S BPDA(9002313.59111,BPREC_","_BP59_",",.02)=+$G(DUZ)
"RTN","BPSBUTL",163,0)
 . S BPDA(9002313.59111,BPREC_","_BP59_",",.03)=$G(BPRCMNT)
"RTN","BPSBUTL",164,0)
 . D FILE^DIE("","BPDA","BPERR")
"RTN","BPSBUTL",165,0)
 I BPLCK L -^BPST(9002313.59111,+BP59)
"RTN","BPSBUTL",166,0)
 I BPREC>0,'$D(BPERR) Q 1
"RTN","BPSBUTL",167,0)
 Q -1
"RTN","BPSBUTL",168,0)
 ;
"RTN","BPSBUTL",169,0)
 ;REOPEN - Reopen closed claim
"RTN","BPSBUTL",170,0)
 ;Input:
"RTN","BPSBUTL",171,0)
 ; BP59 - ien in BPS TRANSACTION file
"RTN","BPSBUTL",172,0)
 ; BP02 - ien in BPS CLAIMS file
"RTN","BPSBUTL",173,0)
 ; BPREOPDT - reopen date/time 
"RTN","BPSBUTL",174,0)
 ; BPDUZ - user DUZ (#200 ien)
"RTN","BPSBUTL",175,0)
 ; BPCOMM - reopen comment text
"RTN","BPSBUTL",176,0)
 ;Output:
"RTN","BPSBUTL",177,0)
 ; 0^message_error - error
"RTN","BPSBUTL",178,0)
 ; 1 - success
"RTN","BPSBUTL",179,0)
REOPEN(BP59,BP02,BPREOPDT,BPDUZ,BPCOMM) ;
"RTN","BPSBUTL",180,0)
 N RECIENS,BPDA,ERRARR,BPREFNO,BPRXIEN,BPFILLDT,BPCLMID,BPZ,IBARY,BPDFN,BPRETVAL,BPZ1
"RTN","BPSBUTL",181,0)
 S BPDFN=$P($G(^BPST(BP59,0)),U,6)
"RTN","BPSBUTL",182,0)
 S BPREFNO=$P($G(^BPST(BP59,1)),U)
"RTN","BPSBUTL",183,0)
 I BPREFNO="" Q "0^Null Fill Number"
"RTN","BPSBUTL",184,0)
 S BPRXIEN=$P($G(^BPST(BP59,1)),U,11)
"RTN","BPSBUTL",185,0)
 I BPRXIEN="" Q "0^Null RX ien Number"
"RTN","BPSBUTL",186,0)
 ;in VA there is only one med/claim but in some cases it can different than "1"
"RTN","BPSBUTL",187,0)
 ;so take the latest one
"RTN","BPSBUTL",188,0)
 S BPZ=$O(^BPSC(BP02,400,9999999),-1)
"RTN","BPSBUTL",189,0)
 I BPRXIEN="" Q "0^Database Error"
"RTN","BPSBUTL",190,0)
 S BPFILLDT=$$YMD2FM^BPSSCRU6(+$P($G(^BPSC(BP02,400,+BPZ,400)),U))
"RTN","BPSBUTL",191,0)
 S BPCLMID=$$CONVCLID^BPSSCRU6($P($G(^BPSC(BP02,400,+BPZ,400)),U,2))
"RTN","BPSBUTL",192,0)
 ;============
"RTN","BPSBUTL",193,0)
 ;Now update ECME database
"RTN","BPSBUTL",194,0)
 S BPRETVAL=$$UPDREOP^BPSREOP1(BP02,0,BPREOPDT,BPDUZ,BPCOMM)
"RTN","BPSBUTL",195,0)
 I +BPRETVAL=0 D  Q BPRETVAL
"RTN","BPSBUTL",196,0)
 . ;try to reverse it in case it was done partially
"RTN","BPSBUTL",197,0)
 . I $$UPDREOP^BPSREOP1(BP02,1,"@",+BPDUZ,"@")
"RTN","BPSBUTL",198,0)
 ;============
"RTN","BPSBUTL",199,0)
 ;Now call IB API for "REOPEN" event
"RTN","BPSBUTL",200,0)
 S IBARY("STATUS")="REOPEN"
"RTN","BPSBUTL",201,0)
 S IBARY("FILL DATE")=BPFILLDT
"RTN","BPSBUTL",202,0)
 S IBARY("FILL NUMBER")=BPREFNO
"RTN","BPSBUTL",203,0)
 S IBARY("PRESCRIPTION")=BPRXIEN
"RTN","BPSBUTL",204,0)
 S IBARY("CLAIMID")=BPCLMID
"RTN","BPSBUTL",205,0)
 S IBARY("DRUG")=$$DRUGIEN^BPSSCRU6(BPRXIEN,BPDFN)
"RTN","BPSBUTL",206,0)
 S IBARY("PLAN")=$P($G(^BPST(BP59,10,1,0)),"^")
"RTN","BPSBUTL",207,0)
 S IBARY("USER")=BPDUZ
"RTN","BPSBUTL",208,0)
 S IBARY("REOPEN COMMENT")=BPCOMM
"RTN","BPSBUTL",209,0)
 S BPRETVAL=$$STORESP^IBNCPDP(BPDFN,.IBARY)
"RTN","BPSBUTL",210,0)
 ;if successful
"RTN","BPSBUTL",211,0)
 I +BPRETVAL>0 Q "1^ReOpening Claim: "_$P($G(^BPSC(BP02,0)),U)_" ... OK"
"RTN","BPSBUTL",212,0)
 ;===========
"RTN","BPSBUTL",213,0)
 ;if it was unsuccessful
"RTN","BPSBUTL",214,0)
 ;reverse ECME database (keep the user who made the attempt)
"RTN","BPSBUTL",215,0)
 I $$UPDREOP^BPSREOP1(BP02,1,"@",+BPDUZ,"@")
"RTN","BPSBUTL",216,0)
 ;return IB error message
"RTN","BPSBUTL",217,0)
 Q BPRETVAL
"RTN","BPSBUTL",218,0)
 ;BPSBUTL
"RTN","BPSJINIT")
0^29^B36410434
"RTN","BPSJINIT",1,0)
BPSJINIT ;BHAM ISC/LJF - HL7 Application Registration ;21-NOV-2003
"RTN","BPSJINIT",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSJINIT",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","BPSJINIT",4,0)
 ;
"RTN","BPSJINIT",5,0)
 N DA,DIC,DIE,DINUM,DIR,DIRUT,DIROUT,DLAYGO,DR,DTOUT,DUOUT,X,Y
"RTN","BPSJINIT",6,0)
 N BPVALFN,BPSJAPPR,BPSJVALR,PHIX,DT,DUZ
"RTN","BPSJINIT",7,0)
 ;
"RTN","BPSJINIT",8,0)
 ;  This program will allow user to enter site data.
"RTN","BPSJINIT",9,0)
 ;
"RTN","BPSJINIT",10,0)
 ; Programmer Note: D BPSJVAL^BPSJAREG(X) will validate with following.
"RTN","BPSJINIT",11,0)
 ;   where X is: 0 = HL7 trigger, no validation display
"RTN","BPSJINIT",12,0)
 ;               1 = HL7 trigger, display validation
"RTN","BPSJINIT",13,0)
 ;               2 = no HL7 trigger, display validation
"RTN","BPSJINIT",14,0)
 ;               3 = no validation display, no HL7 trigger
"RTN","BPSJINIT",15,0)
 ;
"RTN","BPSJINIT",16,0)
 D DT^DICRW S DUZ(0)="@",DT=$$NOW^XLFDT
"RTN","BPSJINIT",17,0)
 D HOME^%ZIS,CLEAR^VALM1
"RTN","BPSJINIT",18,0)
 W !!!,"ENTER/VERIFY SITE REGISTRATION DATA.",!!
"RTN","BPSJINIT",19,0)
 ;
"RTN","BPSJINIT",20,0)
 S BPVALFN=9002313.99
"RTN","BPSJINIT",21,0)
 ; Set Version number to 2 if not set or not an integer > 1
"RTN","BPSJINIT",22,0)
 S DA=$O(^BPS(BPVALFN,0)),DIE=$$ROOT^DILFD(BPVALFN)
"RTN","BPSJINIT",23,0)
 I 'DA S DA=1 D
"RTN","BPSJINIT",24,0)
 . S DR=".01////BPS SETUP #1" D ^DIE
"RTN","BPSJINIT",25,0)
 . S DR="6003////2" D ^DIE
"RTN","BPSJINIT",26,0)
 ;
"RTN","BPSJINIT",27,0)
 K DIC,DIE,DINUM,DIR,DIRUT,DIROUT,DLAYGO,DR,DTOUT,DUOUT,X,Y
"RTN","BPSJINIT",28,0)
 S DR=$P($G(^BPS(BPVALFN,DA,"VITRIA")),U,3)
"RTN","BPSJINIT",29,0)
 I DR>1,DR=+DR
"RTN","BPSJINIT",30,0)
 E  S DIE=$$ROOT^DILFD(BPVALFN),DR="6003////2" D ^DIE
"RTN","BPSJINIT",31,0)
 ;
"RTN","BPSJINIT",32,0)
 W !!,"PRIMARY SITE CONTACT DATA."
"RTN","BPSJINIT",33,0)
 K DIC,DIE,DINUM,DIR,DIRUT,DIROUT,DLAYGO,DR,DTOUT,DUOUT,X,Y
"RTN","BPSJINIT",34,0)
 S DIE=$$ROOT^DILFD(BPVALFN)
"RTN","BPSJINIT",35,0)
 S DR="[BPSJ CONTACT ENTER/EDIT]" D ^DIE
"RTN","BPSJINIT",36,0)
 ;
"RTN","BPSJINIT",37,0)
 W !!,"ALTERNATE SITE CONTACT DATA."
"RTN","BPSJINIT",38,0)
 K DIC,DIE,DINUM,DIR,DIRUT,DIROUT,DLAYGO,DR,DTOUT,DUOUT,X,Y
"RTN","BPSJINIT",39,0)
 S DIE=$$ROOT^DILFD(BPVALFN)
"RTN","BPSJINIT",40,0)
 S DR="[BPSJ ALT CONTACT ENTER/EDIT]" D ^DIE
"RTN","BPSJINIT",41,0)
 ;
"RTN","BPSJINIT",42,0)
 D HOME^%ZIS,CLEAR^VALM1
"RTN","BPSJINIT",43,0)
 W !!!,"-- APPLICATION REGISTRATION VALIDATION RESULTS. --",!!
"RTN","BPSJINIT",44,0)
 S BPSJVALR=-1
"RTN","BPSJINIT",45,0)
 D BPSJVAL^BPSJAREG(2)
"RTN","BPSJINIT",46,0)
 S BPSJAPPR=BPSJVALR
"RTN","BPSJINIT",47,0)
 ;
"RTN","BPSJINIT",48,0)
 I 'BPSJAPPR W !!,"-- APPLICATION REGISTRATION DATA VALID. --",!
"RTN","BPSJINIT",49,0)
 E  D
"RTN","BPSJINIT",50,0)
 . W !!,"** APPLICATION REGISTRATION DATA INVALID!!!  **"
"RTN","BPSJINIT",51,0)
 . W !,"**  APPLICATION REGISTRATION AND PHARMACY    **"
"RTN","BPSJINIT",52,0)
 . W !,"**    REGISTRATIONS WILL NOT BE SENT!        **",!
"RTN","BPSJINIT",53,0)
 ;
"RTN","BPSJINIT",54,0)
 K DA,DIC,DIE,DINUM,DIR,DIRUT,DIROUT,DLAYGO,DR,DTOUT,DUOUT,X,Y
"RTN","BPSJINIT",55,0)
 S DIR(0)="EO" D ^DIR I X=U Q
"RTN","BPSJINIT",56,0)
 ;
"RTN","BPSJINIT",57,0)
 D PHARM
"RTN","BPSJINIT",58,0)
 I BPSJAPPR D  Q
"RTN","BPSJINIT",59,0)
 . W !!,"REGISTRATION ABORTED DUE TO INVALID SITE REGISTRATION DATA.",!!
"RTN","BPSJINIT",60,0)
 ;
"RTN","BPSJINIT",61,0)
 D HOME^%ZIS,CLEAR^VALM1
"RTN","BPSJINIT",62,0)
 W !!!,"APPLICATION REGISTRATION DATA IS VALID."
"RTN","BPSJINIT",63,0)
 W !!,"PHARMACY REGISTRATION DATA IS:"
"RTN","BPSJINIT",64,0)
 S PHIX=$O(^BPS(9002313.56,0))
"RTN","BPSJINIT",65,0)
 F  Q:'PHIX  D  S PHIX=$O(^BPS(9002313.56,PHIX))
"RTN","BPSJINIT",66,0)
 . S BPSJVALR=-1 D REG^BPSJPREG(PHIX,3)
"RTN","BPSJINIT",67,0)
 . I BPSJVALR>0 S DIR=" *INVALID",DIE=" and will NOT be transmitted."
"RTN","BPSJINIT",68,0)
 . E  S DIR="    VALID",DIE=" and will be transmitted."
"RTN","BPSJINIT",69,0)
 . W !,DIR_" for "_$P($G(^BPS(9002313.56,PHIX,0)),U)_DIE
"RTN","BPSJINIT",70,0)
 W !
"RTN","BPSJINIT",71,0)
 K DA,DIC,DIE,DINUM,DIR,DIRUT,DIROUT,DLAYGO,DR,DTOUT,DUOUT,X,Y
"RTN","BPSJINIT",72,0)
 S DIR(0)="YEO",DIR("A")="SEND APPLICATION REGISTRATION: Y/N " D ^DIR
"RTN","BPSJINIT",73,0)
 I $TR($E(X),"y","Y")'="Y" Q
"RTN","BPSJINIT",74,0)
 ;
"RTN","BPSJINIT",75,0)
 K DA,DIC,DIE,DINUM,DIR,DIRUT,DIROUT,DLAYGO,DR,DTOUT,DUOUT,X,Y
"RTN","BPSJINIT",76,0)
 D BPSJVAL^BPSJAREG(0)
"RTN","BPSJINIT",77,0)
 W !!,"APPLICATION REGISTRATION SUBMITTED."
"RTN","BPSJINIT",78,0)
 Q
"RTN","BPSJINIT",79,0)
 ;
"RTN","BPSJINIT",80,0)
PHARM ;CYCLE THROUGH PHARMACIES
"RTN","BPSJINIT",81,0)
 ;
"RTN","BPSJINIT",82,0)
 N DA,DIC,DIE,DINUM,DIR,DIRUT,DIROUT,DLAYGO,DR,DTOUT,DUOUT,X,Y
"RTN","BPSJINIT",83,0)
 N BPVALFN,BPSJVALR,DT,DUZ,BPSJPHPR
"RTN","BPSJINIT",84,0)
 ;
"RTN","BPSJINIT",85,0)
 D DT^DICRW S DUZ(0)="@",DT=$$NOW^XLFDT
"RTN","BPSJINIT",86,0)
 ;
"RTN","BPSJINIT",87,0)
 S BPVALFN=9002313.56,PHIX=0
"RTN","BPSJINIT",88,0)
 ;
"RTN","BPSJINIT",89,0)
 F  D  Q:PHIX=""
"RTN","BPSJINIT",90,0)
 . D HOME^%ZIS,CLEAR^VALM1
"RTN","BPSJINIT",91,0)
 . W !!!,"ENTER/VERIFY PHARMACY REGISTRATION DATA."
"RTN","BPSJINIT",92,0)
 . W !!,"PHARMACY SPECIFIC DATA."
"RTN","BPSJINIT",93,0)
 . K DA,DIC,DIE,DINUM,DIR,DIRUT,DIROUT,DLAYGO,DR,DTOUT,DUOUT,X,Y
"RTN","BPSJINIT",94,0)
 . S DIC(0)="QAELM",DIC=BPVALFN,DLAYGO=DIC D ^DIC
"RTN","BPSJINIT",95,0)
 . ;
"RTN","BPSJINIT",96,0)
 . I X'=U,0<+Y S PHIX=+Y
"RTN","BPSJINIT",97,0)
 . E  S PHIX="" Q
"RTN","BPSJINIT",98,0)
 . D MOD I 'PHIX Q
"RTN","BPSJINIT",99,0)
 . D HOME^%ZIS,CLEAR^VALM1
"RTN","BPSJINIT",100,0)
 . W !!!,"-- PHARMACY REGISTRATION VALIDATION RESULTS. --",!
"RTN","BPSJINIT",101,0)
 . ;
"RTN","BPSJINIT",102,0)
 . S BPSJVALR=-1
"RTN","BPSJINIT",103,0)
 . D REG^BPSJPREG(PHIX,2)
"RTN","BPSJINIT",104,0)
 . S BPSJPHPR=BPSJVALR
"RTN","BPSJINIT",105,0)
 . ;
"RTN","BPSJINIT",106,0)
 . I 'BPSJPHPR W !!,"-- PHARMACY REGISTRATION DATA VALID. --",!
"RTN","BPSJINIT",107,0)
 . E  D
"RTN","BPSJINIT",108,0)
 .. W !!,"**     PHARMACY REGISTRATION DATA INVALID!!!      **"
"RTN","BPSJINIT",109,0)
 .. W !,"** THIS PHARMACY'S REGISTRATION WILL NOT BE SENT! **",!
"RTN","BPSJINIT",110,0)
 . ;
"RTN","BPSJINIT",111,0)
 . K DA,DIC,DIE,DINUM,DIR,DIRUT,DIROUT,DLAYGO,DR,DTOUT,DUOUT,X,Y
"RTN","BPSJINIT",112,0)
 . S DIR(0)="EO",DIR("A")="Enter RETURN to continue" D ^DIR
"RTN","BPSJINIT",113,0)
 ;
"RTN","BPSJINIT",114,0)
 Q
"RTN","BPSJINIT",115,0)
 ;
"RTN","BPSJINIT",116,0)
MOD ;
"RTN","BPSJINIT",117,0)
 N DA,DIC,DIE,DINUM,DIR,DIRUT,DIROUT,DLAYGO,DR,DTOUT,DUOUT,X,Y
"RTN","BPSJINIT",118,0)
 ;
"RTN","BPSJINIT",119,0)
 ; Set hours to default if not set.
"RTN","BPSJINIT",120,0)
 S DA=$$OPHOURS^BPSJZRP(PHIX),DR=$G(^BPS(9002313.56,PHIX,"HOURS"))
"RTN","BPSJINIT",121,0)
 I $P(DR,U,2,5)'=DA S ^BPS(9002313.56,PHIX,"HOURS")="24"_U_DA
"RTN","BPSJINIT",122,0)
 ;
"RTN","BPSJINIT",123,0)
 ; Set STATUS default to ACTIVE if not set
"RTN","BPSJINIT",124,0)
 I $$GET1^DIQ(9002313.56,PHIX,.1,"I")="" D
"RTN","BPSJINIT",125,0)
 . K DI,DIDEL
"RTN","BPSJINIT",126,0)
 . S DR=".1///ACTIVE",DIE=9002313.56,DA=PHIX
"RTN","BPSJINIT",127,0)
 . D ^DIE
"RTN","BPSJINIT",128,0)
 ;
"RTN","BPSJINIT",129,0)
 W !!,"SITE DATA."
"RTN","BPSJINIT",130,0)
 K DA,DIC,DIE,DINUM,DIR,DIRUT,DIROUT,DLAYGO,DR,DTOUT,DUOUT,X,Y
"RTN","BPSJINIT",131,0)
 S DA=PHIX,DIE=$$ROOT^DILFD(BPVALFN)
"RTN","BPSJINIT",132,0)
 S DR="[BPSJ PHARMACY SITE ENTER/EDIT]" D ^DIE
"RTN","BPSJINIT",133,0)
 ;
"RTN","BPSJINIT",134,0)
 I '$G(DA) S PHIX=0 Q   ; Pharmacy killed by user
"RTN","BPSJINIT",135,0)
 ;
"RTN","BPSJINIT",136,0)
 ; Pharmacy open hours
"RTN","BPSJINIT",137,0)
 I '$D(Y) D EN^BPSJINI1(PHIX)
"RTN","BPSJINIT",138,0)
 ;
"RTN","BPSJINIT",139,0)
 K DA,DIC,DIE,DINUM,DIR,DIRUT,DIROUT,DLAYGO,DR,DTOUT,DUOUT,X,Y
"RTN","BPSJINIT",140,0)
 S DIR(0)="EO" D ^DIR
"RTN","BPSJINIT",141,0)
 ;
"RTN","BPSJINIT",142,0)
 I X=U Q
"RTN","BPSJINIT",143,0)
 ;
"RTN","BPSJINIT",144,0)
 W !!,"PRIMARY CONTACT DATA."
"RTN","BPSJINIT",145,0)
 K DA,DIC,DIE,DINUM,DIR,DIRUT,DIROUT,DLAYGO,DR,DTOUT,DUOUT,X,Y
"RTN","BPSJINIT",146,0)
 S DA=PHIX,DIE=$$ROOT^DILFD(BPVALFN)
"RTN","BPSJINIT",147,0)
 S DR="[BPSJ PHARM CONTACT ENTER/EDIT]" D ^DIE
"RTN","BPSJINIT",148,0)
 ;
"RTN","BPSJINIT",149,0)
 K DA,DIC,DIE,DINUM,DIR,DIRUT,DIROUT,DLAYGO,DR,DTOUT,DUOUT,X,Y
"RTN","BPSJINIT",150,0)
 S DIR(0)="EO" D ^DIR
"RTN","BPSJINIT",151,0)
 ;
"RTN","BPSJINIT",152,0)
 I X=U Q
"RTN","BPSJINIT",153,0)
 ;
"RTN","BPSJINIT",154,0)
 W !!,"ALTERNATE CONTACT DATA."
"RTN","BPSJINIT",155,0)
 K DA,DIC,DIE,DINUM,DIR,DIRUT,DIROUT,DLAYGO,DR,DTOUT,DUOUT,X,Y
"RTN","BPSJINIT",156,0)
 S DA=PHIX,DIE=$$ROOT^DILFD(BPVALFN)
"RTN","BPSJINIT",157,0)
 S DR="[BPSJ PHARM ALT CONT ENTER/EDIT]" D ^DIE
"RTN","BPSJINIT",158,0)
 ;
"RTN","BPSJINIT",159,0)
 K DA,DIC,DIE,DINUM,DIR,DIRUT,DIROUT,DLAYGO,DR,DTOUT,DUOUT,X,Y
"RTN","BPSJINIT",160,0)
 S DIR(0)="EO" D ^DIR
"RTN","BPSJINIT",161,0)
 ;
"RTN","BPSJINIT",162,0)
 I X=U Q
"RTN","BPSJINIT",163,0)
 ;
"RTN","BPSJINIT",164,0)
 W !!,"PHARMACIST DATA."  ; VA LEAD PHARMACIST
"RTN","BPSJINIT",165,0)
 K DA,DIC,DIE,DINUM,DIR,DIRUT,DIROUT,DLAYGO,DR,DTOUT,DUOUT,X,Y
"RTN","BPSJINIT",166,0)
 S DA=PHIX,DIE=$$ROOT^DILFD(BPVALFN)
"RTN","BPSJINIT",167,0)
 S DR="[BPSJ PHARMACIST ENTER/EDIT]" D ^DIE
"RTN","BPSJINIT",168,0)
 ;
"RTN","BPSJINIT",169,0)
 I $D(Y) Q
"RTN","BPSJINIT",170,0)
 ;
"RTN","BPSJINIT",171,0)
 ; VA LEAD PHARMACIST LICENSE
"RTN","BPSJINIT",172,0)
 K DA,DIC,DIE,DINUM,DIR,DIRUT,DIROUT,DLAYGO,DR,DTOUT,DUOUT,X,Y
"RTN","BPSJINIT",173,0)
 S DA=PHIX,DIE=$$ROOT^DILFD(BPVALFN)
"RTN","BPSJINIT",174,0)
 S DR="1900.04//" D ^DIE
"RTN","BPSJINIT",175,0)
 ;
"RTN","BPSJINIT",176,0)
 Q
"RTN","BPSJINIT",177,0)
 ;
"RTN","BPSJINIT",178,0)
VALIDATE ;  this will only validate the Application Registration and
"RTN","BPSJINIT",179,0)
 ;          the Pharmacy registrations
"RTN","BPSJINIT",180,0)
 Q
"RTN","BPSJINIT",181,0)
 N AREG
"RTN","BPSJINIT",182,0)
 ;
"RTN","BPSJINIT",183,0)
 D BPSJVAL^BPSJAREG(2)
"RTN","BPSJINIT",184,0)
 ;
"RTN","BPSJINIT",185,0)
 S DIR(0)="EO"
"RTN","BPSJINIT",186,0)
 D ^DIR
"RTN","BPSJINIT",187,0)
 I X=U Q
"RTN","BPSJINIT",188,0)
 ;
"RTN","BPSJINIT",189,0)
 S AREG="" F  S AREG=$O(^BPS(9002313.56,AREG)) Q:'AREG  D  I X=U Q
"RTN","BPSJINIT",190,0)
 . D REG^BPSJPREG(AREG,2)
"RTN","BPSJINIT",191,0)
 . S DIR(0)="EO"
"RTN","BPSJINIT",192,0)
 . D ^DIR
"RTN","BPSJINIT",193,0)
 ;
"RTN","BPSJINIT",194,0)
 Q
"RTN","BPSJPREG")
0^16^B11507539
"RTN","BPSJPREG",1,0)
BPSJPREG ;BHAM ISC/LJF - HL7 Registration MFN Message ;21-NOV-2003
"RTN","BPSJPREG",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSJPREG",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","BPSJPREG",4,0)
 ;
"RTN","BPSJPREG",5,0)
 ;**Program Description**
"RTN","BPSJPREG",6,0)
 ;  This program will process the outgoing registration MFN message
"RTN","BPSJPREG",7,0)
 ;
"RTN","BPSJPREG",8,0)
 ;  Variable
"RTN","BPSJPREG",9,0)
 ; HL      = HL7 parameters
"RTN","BPSJPREG",10,0)
 ; HL7DTG  = Date time in HL7 format
"RTN","BPSJPREG",11,0)
 ; HLECH   = HL7 Encoding Characters
"RTN","BPSJPREG",12,0)
 ; HLEID   = HL7 Link id
"RTN","BPSJPREG",13,0)
 ; HLFS    = HL7 Field separator
"RTN","BPSJPREG",14,0)
 ; HLLNK   = HL7 E-Pharm Link
"RTN","BPSJPREG",15,0)
 ; HLRESET = HL7 generate results
"RTN","BPSJPREG",16,0)
 ; IPP     = IP Port
"RTN","BPSJPREG",17,0)
 ; IPA     = IP Address
"RTN","BPSJPREG",18,0)
 ; MCT     = Message Count
"RTN","BPSJPREG",19,0)
 ; MGRP    = E-Mail message group
"RTN","BPSJPREG",20,0)
 ; MSG     = Message
"RTN","BPSJPREG",21,0)
 ;
"RTN","BPSJPREG",22,0)
 ; Don't allow direct execution
"RTN","BPSJPREG",23,0)
 ;
"RTN","BPSJPREG",24,0)
 W !!!,"DIRECT ENTRY NOT ALLOWED",!!!
"RTN","BPSJPREG",25,0)
 Q
"RTN","BPSJPREG",26,0)
 ;
"RTN","BPSJPREG",27,0)
REG(PHARMIX,BPSJVAL) ;  Registration message for when a site installs
"RTN","BPSJPREG",28,0)
 ;
"RTN","BPSJPREG",29,0)
 N HL,HL7DTG,HLECH,HLEID,HLFS,HLLNK,HLPRO,HLRESLT,IPA,IPP
"RTN","BPSJPREG",30,0)
 N MGRP,MCT,MSG,TAXID,ZRPSEG,BPSJVAL2,BPSJPRES
"RTN","BPSJPREG",31,0)
 ;
"RTN","BPSJPREG",32,0)
 S (MCT,TAXID)=0,BPSJVAL=$G(BPSJVAL)
"RTN","BPSJPREG",33,0)
 ;
"RTN","BPSJPREG",34,0)
 I '$G(PHARMIX) Q
"RTN","BPSJPREG",35,0)
 K ^TMP("HLS",$J)
"RTN","BPSJPREG",36,0)
 ;
"RTN","BPSJPREG",37,0)
 ;  Get Link data from HL7 table
"RTN","BPSJPREG",38,0)
 S HLPRO="BPSJ REGISTER",(IPA,IPP)=""
"RTN","BPSJPREG",39,0)
 S HLLNK=$$FIND1^DIC(870,"",,"EPHARM OUT","B")
"RTN","BPSJPREG",40,0)
 I HLLNK S IPA=$$GET1^DIQ(870,HLLNK_",",400.01),IPP=$$GET1^DIQ(870,HLLNK_",",400.02)
"RTN","BPSJPREG",41,0)
 ;
"RTN","BPSJPREG",42,0)
 ;  Error if any missing data
"RTN","BPSJPREG",43,0)
 I IPA=""!(IPP="") S MCT=MCT+1,MSG(MCT)="IP Address or Port is not defined.  "
"RTN","BPSJPREG",44,0)
 ;
"RTN","BPSJPREG",45,0)
 ;  Initialize the HL7
"RTN","BPSJPREG",46,0)
 D INIT^HLFNC2(HLPRO,.HL)
"RTN","BPSJPREG",47,0)
 S HLFS=$G(HL("FS")) I HLFS="" S HLFS="|"
"RTN","BPSJPREG",48,0)
 S HLECH=$E($G(HL("ECH"),1)) I HLECH="" S HLECH="^"
"RTN","BPSJPREG",49,0)
 S HL("SITE")=$$SITE^VASITE,HL("SAF")=$P(HL("SITE"),U,2,3)
"RTN","BPSJPREG",50,0)
 S HL("EPPORT")=IPP,HLEID=$$HLP^BPSJUTL(HLPRO)
"RTN","BPSJPREG",51,0)
 ;
"RTN","BPSJPREG",52,0)
 ;Get fileman date/time, ensuring seconds are included: 3031029.135636
"RTN","BPSJPREG",53,0)
 S HL7DTG=$E($$HTFM^XLFDT($H)_"000000",1,14)
"RTN","BPSJPREG",54,0)
 ;Set HL7 Date/Time format: 20031029135636-0400
"RTN","BPSJPREG",55,0)
 S HL7DTG=$$FMTHL7^XLFDT(HL7DTG)
"RTN","BPSJPREG",56,0)
 ;
"RTN","BPSJPREG",57,0)
 ;  Set the ZRP Segment
"RTN","BPSJPREG",58,0)
 D EN^BPSJZRP(.HL,PHARMIX,.TAXID,.ZRPSEG)
"RTN","BPSJPREG",59,0)
 M ^TMP("HLS",$J,3)=ZRPSEG K ZRPSEG
"RTN","BPSJPREG",60,0)
 ;
"RTN","BPSJPREG",61,0)
 ;  Set the MFE segment
"RTN","BPSJPREG",62,0)
 N BPSMFE S BPSMFE="MUP"
"RTN","BPSJPREG",63,0)
 I '$$BPSACTV^BPSUTIL(PHARMIX) S BPSMFE="MDC"
"RTN","BPSJPREG",64,0)
 S ^TMP("HLS",$J,2)="MFE"_HLFS_BPSMFE_HLFS_HLFS_HL7DTG
"RTN","BPSJPREG",65,0)
 S ^TMP("HLS",$J,2)=^TMP("HLS",$J,2)_HLFS_TAXID_HLFS_"ST"
"RTN","BPSJPREG",66,0)
 ;
"RTN","BPSJPREG",67,0)
 ;   Set the MFI segment
"RTN","BPSJPREG",68,0)
 S ^TMP("HLS",$J,1)="MFI"_HLFS_"Pharmacy Table"_HLFS_HLFS_"UPD"_HLFS
"RTN","BPSJPREG",69,0)
 S ^TMP("HLS",$J,1)=^TMP("HLS",$J,1)_HL7DTG_HLFS_HL7DTG_HLFS_"NE"
"RTN","BPSJPREG",70,0)
 ;
"RTN","BPSJPREG",71,0)
 S BPSJPRES=$$VAL2^BPSJVAL(BPSJVAL)  ; 0 = ok
"RTN","BPSJPREG",72,0)
 I BPSJVAL=3 G FINI   ; Just checking to see if data valid.
"RTN","BPSJPREG",73,0)
 ;
"RTN","BPSJPREG",74,0)
 ;-Check if msg valid.
"RTN","BPSJPREG",75,0)
 I 'BPSJPRES D  G FINI
"RTN","BPSJPREG",76,0)
 . K HLRESLT
"RTN","BPSJPREG",77,0)
 . D GENERATE^HLMA(HLEID,"GM",1,.HLRESLT,"")
"RTN","BPSJPREG",78,0)
 . I $P($G(HLRESLT),U,2)]"" D  Q
"RTN","BPSJPREG",79,0)
 .. I BPSJVAL D  Q   ; Interactive: show no success
"RTN","BPSJPREG",80,0)
 ... W !!,"HL7 E-Pharm Pharmacy Registration Message not created: "_HLRESLT
"RTN","BPSJPREG",81,0)
 ... W !," PHARMIX: "_PHARMIX_""
"RTN","BPSJPREG",82,0)
 .. S MCT=MCT+1,MSG(MCT)="HL7 E-Pharm Pharmacy Registration Message not created. (PHARMIX: "_PHARMIX_")"
"RTN","BPSJPREG",83,0)
 .. S MCT=MCT+1,MSG(MCT)=HLRESLT
"RTN","BPSJPREG",84,0)
 .. D MSG^BPSJUTL(.MSG,"BPSJAREG")
"RTN","BPSJPREG",85,0)
 . I BPSJVAL D    ;Interactive: show success
"RTN","BPSJPREG",86,0)
 .. W !!,"HL7 E-Pharm Pharmacy Registration Message successfully created."
"RTN","BPSJPREG",87,0)
 ;
"RTN","BPSJPREG",88,0)
 ;
"RTN","BPSJPREG",89,0)
FINI ; Clean up
"RTN","BPSJPREG",90,0)
 K ^TMP("HLS",$J)
"RTN","BPSJPREG",91,0)
 Q
"RTN","BPSJZQR")
0^30^B2363888
"RTN","BPSJZQR",1,0)
BPSJZQR ;BHAM ISC/LJF - HL7 Registration ZQR Message ;21-NOV-2003
"RTN","BPSJZQR",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSJZQR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","BPSJZQR",4,0)
 ;
"RTN","BPSJZQR",5,0)
 ; ZQR is pharmacy site registration info
"RTN","BPSJZQR",6,0)
 ;
"RTN","BPSJZQR",7,0)
EN(HL) N ZQR,FS,CPS,REP,BPSFILE,BPSIEN,VAIX1,VAIX2,CNF,I
"RTN","BPSJZQR",8,0)
 ;
"RTN","BPSJZQR",9,0)
 ; Normally: HL("FS")="|"  HL("ECH")="^~\&"
"RTN","BPSJZQR",10,0)
 S FS=$G(HL("FS")) I FS="" S FS="|"
"RTN","BPSJZQR",11,0)
 S CPS=$E($G(HL("ECH"))) I CPS="" S CPS="^"
"RTN","BPSJZQR",12,0)
 S REP=$E($G(HL("ECH")),2) I REP="" S REP="~"
"RTN","BPSJZQR",13,0)
 ;
"RTN","BPSJZQR",14,0)
 S ZQR=FS_(+$G(HL("SITE")))
"RTN","BPSJZQR",15,0)
 ;
"RTN","BPSJZQR",16,0)
 ; Get Contact Info
"RTN","BPSJZQR",17,0)
 S BPSFILE=9002313.99,BPSIEN=$O(^BPS(BPSFILE,0))
"RTN","BPSJZQR",18,0)
 S VAIX1=$G(^BPS(BPSFILE,BPSIEN,"VITRIA")),VAIX2=$P(VAIX1,U,2)
"RTN","BPSJZQR",19,0)
 ;
"RTN","BPSJZQR",20,0)
 ; Get Version number
"RTN","BPSJZQR",21,0)
 S ZQR=ZQR_FS_$P(VAIX1,U,3)
"RTN","BPSJZQR",22,0)
 ;
"RTN","BPSJZQR",23,0)
 ; Port
"RTN","BPSJZQR",24,0)
 S ZQR=ZQR_FS_$G(HL("EPPORT"))
"RTN","BPSJZQR",25,0)
 ;
"RTN","BPSJZQR",26,0)
 ; Load the Name and Means Fields
"RTN","BPSJZQR",27,0)
 ; Default the values to null
"RTN","BPSJZQR",28,0)
 F I=5:1:8 S $P(ZQR,FS,I)=""
"RTN","BPSJZQR",29,0)
 ; Contact
"RTN","BPSJZQR",30,0)
 I VAIX1 D
"RTN","BPSJZQR",31,0)
 . S CNF=$$VA200NM^BPSJUTL(+VAIX1,"",.HL) I CNF]"" S $P(ZQR,FS,5)=CNF
"RTN","BPSJZQR",32,0)
 . S CNF=$$VA20013^BPSJUTL(+VAIX1,.HL) I CNF]"" S $P(ZQR,FS,6)=CNF
"RTN","BPSJZQR",33,0)
 ;
"RTN","BPSJZQR",34,0)
 ; Alternate Contact
"RTN","BPSJZQR",35,0)
 I VAIX2 D
"RTN","BPSJZQR",36,0)
 . S CNF=$$VA200NM^BPSJUTL(VAIX2,"",.HL) I CNF]"" S $P(ZQR,FS,7)=CNF
"RTN","BPSJZQR",37,0)
 . S CNF=$$VA20013^BPSJUTL(VAIX2,.HL) I CNF]"" S $P(ZQR,FS,8)=CNF
"RTN","BPSJZQR",38,0)
 ;
"RTN","BPSJZQR",39,0)
 Q "ZQR|"_ZQR
"RTN","BPSNCPD1")
0^19^B42956727
"RTN","BPSNCPD1",1,0)
BPSNCPD1 ;BHAM ISC/LJE - Pharmacy API part 2 ;06/16/2004
"RTN","BPSNCPD1",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSNCPD1",3,0)
 ;External reference to file #50.68 supported by DBIA 3735
"RTN","BPSNCPD1",4,0)
 ;
"RTN","BPSNCPD1",5,0)
 ; Due to space considerations, these comments were moved from BPSNPCPD
"RTN","BPSNCPD1",6,0)
 ;   to this routine.
"RTN","BPSNCPD1",7,0)
 ;
"RTN","BPSNCPD1",8,0)
 ; ------------------ Beginning of BPSNCPDP comments ------------------
"RTN","BPSNCPD1",9,0)
 ;Input
"RTN","BPSNCPD1",10,0)
 ; BRXIEN = Prescription IEN
"RTN","BPSNCPD1",11,0)
 ; BFILL = Fill Number
"RTN","BPSNCPD1",12,0)
 ; BFILLDAT = Fill Date of current prescription and fill number
"RTN","BPSNCPD1",13,0)
 ; BWHERE (RX Action)
"RTN","BPSNCPD1",14,0)
 ;    ARES = Resubmit for an auto-reversed claim was released while waiting
"RTN","BPSNCPD1",15,0)
 ;           for the payer response
"RTN","BPSNCPD1",16,0)
 ;    AREV = Auto-Reversal
"RTN","BPSNCPD1",17,0)
 ;    BB   = Back Billing
"RTN","BPSNCPD1",18,0)
 ;    CRLB = CMOP Release & Rebill
"RTN","BPSNCPD1",19,0)
 ;    CRLR = CMOP Release & Reverse (successful release)
"RTN","BPSNCPD1",20,0)
 ;    CRLX = CMOP unsuccessful release & reverse
"RTN","BPSNCPD1",21,0)
 ;    DC   = Discontinue - only reverse un-released PAYABLE DC's, release date check
"RTN","BPSNCPD1",22,0)
 ;           should be in calling routine.
"RTN","BPSNCPD1",23,0)
 ;    DDED = Delete in edit
"RTN","BPSNCPD1",24,0)
 ;    DE   = Delete
"RTN","BPSNCPD1",25,0)
 ;    ED   = Edit
"RTN","BPSNCPD1",26,0)
 ;    ERES = Resubmit from ECME user screen
"RTN","BPSNCPD1",27,0)
 ;    EREV = Reversal from ECME user screen
"RTN","BPSNCPD1",28,0)
 ;    HLD  = Put prescription on Hold
"RTN","BPSNCPD1",29,0)
 ;    OF   = Original Fill
"RTN","BPSNCPD1",30,0)
 ;    PC   = Pull CMOPs
"RTN","BPSNCPD1",31,0)
 ;    PE   = Pull early from suspense
"RTN","BPSNCPD1",32,0)
 ;    PL   = Pull local from suspense
"RTN","BPSNCPD1",33,0)
 ;    PP   = PP from Patient Prescription Processing option
"RTN","BPSNCPD1",34,0)
 ;    RF   = Refill
"RTN","BPSNCPD1",35,0)
 ;    RL   = Release Rx NDC check - Rebill if billed NDC doesn't match release NDC
"RTN","BPSNCPD1",36,0)
 ;    RN   = Renew
"RTN","BPSNCPD1",37,0)
 ;    RRL  = Original claim rejected, submit another claim, no reversal
"RTN","BPSNCPD1",38,0)
 ;    RS   = Return-to-Stock
"RTN","BPSNCPD1",39,0)
 ; BILLNDC = Valid NDC# with format 5-4-2
"RTN","BPSNCPD1",40,0)
 ; REVREAS = Reversal Reason
"RTN","BPSNCPD1",41,0)
 ; DURREC  = String of DUR info - Three "^" pieces
"RTN","BPSNCPD1",42,0)
 ;                Professional Service Code
"RTN","BPSNCPD1",43,0)
 ;                Reason for Service Code
"RTN","BPSNCPD1",44,0)
 ;                Result of Service Code
"RTN","BPSNCPD1",45,0)
 ; BPOVRIEN = Pointer to BPS NCPDP OVERIDE file.  This parameter will 
"RTN","BPSNCPD1",46,0)
 ;            only be passed if there are overrides entered by the
"RTN","BPSNCPD1",47,0)
 ;            user via the Resubmit with Edits (RED) option in the 
"RTN","BPSNCPD1",48,0)
 ;            user screen.
"RTN","BPSNCPD1",49,0)
 ;  
"RTN","BPSNCPD1",50,0)
 ;Output (RESPONSE^MESSAGE)
"RTN","BPSNCPD1",51,0)
 ; RESPONSE
"RTN","BPSNCPD1",52,0)
 ;    0  Submitted through ECME
"RTN","BPSNCPD1",53,0)
 ;    1  No submission through ECME
"RTN","BPSNCPD1",54,0)
 ;    2  IB not billable
"RTN","BPSNCPD1",55,0)
 ;    3  Claim was closed, not submitted (RTS/Deletes)
"RTN","BPSNCPD1",56,0)
 ;    4  Unable to queue claim
"RTN","BPSNCPD1",57,0)
 ;    5  Incorrect information supplied to ECME
"RTN","BPSNCPD1",58,0)
 ; MESSAGE = Message associated with the response (error/submitted)
"RTN","BPSNCPD1",59,0)
 ; ----------------- End of BPSNCPDP comments ----------------------
"RTN","BPSNCPD1",60,0)
 ;
"RTN","BPSNCPD1",61,0)
 ; Procedure STARRAY - Retrieve information for API call to IB and store in ARRAY
"RTN","BPSNCPD1",62,0)
 ; Incoming Parameters
"RTN","BPSNCPD1",63,0)
 ;    BRXIEN - Prescription IEN
"RTN","BPSNCPD1",64,0)
 ;    BFILL  - Fill Number
"RTN","BPSNCPD1",65,0)
 ;    BWHERE - RX action
"RTN","BPSNCPD1",66,0)
 ;    ARRAY  - Array that is built (passed by reference)
"RTN","BPSNCPD1",67,0)
STARRAY(BRXIEN,BFILL,BWHERE,ARRAY) ;
"RTN","BPSNCPD1",68,0)
 N RXINFO,DRUGIEN,CMOP,EIS
"RTN","BPSNCPD1",69,0)
 S ARRAY("DFN")=DFN
"RTN","BPSNCPD1",70,0)
 S ARRAY("DAYS SUPPLY")=$P(^PSRX(BRXIEN,0),"^",8)
"RTN","BPSNCPD1",71,0)
 S ARRAY("IEN")=BRXIEN
"RTN","BPSNCPD1",72,0)
 S ARRAY("FILL NUMBER")=BFILL
"RTN","BPSNCPD1",73,0)
 S ARRAY("NDC")=BILLNDC
"RTN","BPSNCPD1",74,0)
 S RXINFO=^PSRX(BRXIEN,0)
"RTN","BPSNCPD1",75,0)
 S DRUGIEN=$P(RXINFO,"^",6)
"RTN","BPSNCPD1",76,0)
 S ARRAY("DRUG")=DRUGIEN
"RTN","BPSNCPD1",77,0)
 S CMOP=0 S CMOP=$$DRUGDIE^BPSUTIL(DRUGIEN,213) S:CMOP="" CMOP=0
"RTN","BPSNCPD1",78,0)
 S ARRAY("DEA")=$$DRUGDIE^BPSUTIL(DRUGIEN,3)
"RTN","BPSNCPD1",79,0)
 S ARRAY("COST")=$$DRUGDIE^BPSUTIL(DRUGIEN,16)
"RTN","BPSNCPD1",80,0)
 S ARRAY("QTY")=$P(RXINFO,U,7)
"RTN","BPSNCPD1",81,0)
 S ARRAY("FILL DATE")=BFILLDAT
"RTN","BPSNCPD1",82,0)
 S ARRAY("DIVISION")=$$MCDIV^BPSBUTL(BRXIEN,BFILL)
"RTN","BPSNCPD1",83,0)
 S ARRAY("RELEASE DATE")=$P($S(BFILL=0:$P(^PSRX(BRXIEN,2),"^",13),1:$P(^PSRX(BRXIEN,1,BFILL,0),"^",18)),".")
"RTN","BPSNCPD1",84,0)
 S ARRAY("AO")="",ARRAY("EC")="",ARRAY("HNC")="",ARRAY("IR")="",ARRAY("MST")="",ARRAY("SC")="",ARRAY("CV")=""
"RTN","BPSNCPD1",85,0)
 ;
"RTN","BPSNCPD1",86,0)
 ; New way of getting SC/EI (CIDC)
"RTN","BPSNCPD1",87,0)
 S EIS=$G(^PSRX(BRXIEN,"ICD",1,0))
"RTN","BPSNCPD1",88,0)
 I $G(EIS)]"" D
"RTN","BPSNCPD1",89,0)
 . S ARRAY("AO")=$P(EIS,U,2)
"RTN","BPSNCPD1",90,0)
 . S ARRAY("EC")=$P(EIS,U,5)
"RTN","BPSNCPD1",91,0)
 . S ARRAY("HNC")=$P(EIS,U,7)
"RTN","BPSNCPD1",92,0)
 . S ARRAY("CV")=$P(EIS,U,8)
"RTN","BPSNCPD1",93,0)
 . S ARRAY("IR")=$P(EIS,U,3)
"RTN","BPSNCPD1",94,0)
 . S ARRAY("SC")=$P(EIS,U,4)
"RTN","BPSNCPD1",95,0)
 . S ARRAY("MST")=$P(EIS,U,6)
"RTN","BPSNCPD1",96,0)
 ; If not available, pull from IBQ node (old way)
"RTN","BPSNCPD1",97,0)
 E  S EIS=$G(^PSRX(BRXIEN,"IBQ")) I EIS'="" D
"RTN","BPSNCPD1",98,0)
 . S ARRAY("AO")=$P(EIS,U,3)
"RTN","BPSNCPD1",99,0)
 . S ARRAY("EC")=$P(EIS,U,5)
"RTN","BPSNCPD1",100,0)
 . S ARRAY("HNC")=$P(EIS,U,6)
"RTN","BPSNCPD1",101,0)
 . S ARRAY("CV")=$P(EIS,U,7)
"RTN","BPSNCPD1",102,0)
 . S ARRAY("IR")=$P(EIS,U,4)
"RTN","BPSNCPD1",103,0)
 . S ARRAY("SC")=$P(EIS,U,1)
"RTN","BPSNCPD1",104,0)
 . S ARRAY("MST")=$P(EIS,U,2)
"RTN","BPSNCPD1",105,0)
 ;
"RTN","BPSNCPD1",106,0)
 ; Add user so that it is stored correctly in the IB Event Log
"RTN","BPSNCPD1",107,0)
 ;  Note: Auto-Reversals (AREV) and CMOP/OPAI (CR*/PC/RL) use postmaster (.5)
"RTN","BPSNCPD1",108,0)
 I ",AREV,CRLB,CRLX,CRLR,PC,RL,"[(","_BWHERE_",") S ARRAY("USER")=.5
"RTN","BPSNCPD1",109,0)
 E  S ARRAY("USER")=DUZ
"RTN","BPSNCPD1",110,0)
 Q
"RTN","BPSNCPD1",111,0)
 ;
"RTN","BPSNCPD1",112,0)
 ; Called by BPSNCPDP to display progress of claim
"RTN","BPSNCPD1",113,0)
STATUS(BRXIEN,BFILL,REBILL,REVONLY,BPSTART,BWHERE) ;
"RTN","BPSNCPD1",114,0)
 ; Initialization
"RTN","BPSNCPD1",115,0)
 N TRANSIEN,CERTUSER,BPSTO,END,IBSEQ,BPQ
"RTN","BPSNCPD1",116,0)
 N CLMSTAT,OCLMSTAT,RESUB,RESFL
"RTN","BPSNCPD1",117,0)
 S (CLMSTAT,OCLMSTAT)=0
"RTN","BPSNCPD1",118,0)
 ;
"RTN","BPSNCPD1",119,0)
 ; Set CERTUSER to true if this user is the certifier
"RTN","BPSNCPD1",120,0)
 S CERTUSER=^BPS(9002313.99,1,"CERTIFIER")=DUZ
"RTN","BPSNCPD1",121,0)
 ;
"RTN","BPSNCPD1",122,0)
 ; Build Transaction IEN
"RTN","BPSNCPD1",123,0)
 S TRANSIEN=BRXIEN_"."_$E($TR($J("",4-$L(BFILL))," ","0")_BFILL,1,4)_1
"RTN","BPSNCPD1",124,0)
 ;
"RTN","BPSNCPD1",125,0)
 ; Write Rebill and Status Messages
"RTN","BPSNCPD1",126,0)
 W !!,"Claim Status: "
"RTN","BPSNCPD1",127,0)
 I REBILL W !,"Reversing and Rebilling a previously submitted claim...",!,"Reversing..."
"RTN","BPSNCPD1",128,0)
 ;
"RTN","BPSNCPD1",129,0)
 ; Get the ECME Timeout and set the display timeout
"RTN","BPSNCPD1",130,0)
 S BPSTO=$$GET1^DIQ(9002313.99,"1,",3.01),END=$S(CERTUSER:50,$G(BPSTO)]"":BPSTO,1:5)
"RTN","BPSNCPD1",131,0)
 ;
"RTN","BPSNCPD1",132,0)
 ; For remaining time, loop through and display status
"RTN","BPSNCPD1",133,0)
 S (BPQ,RESFL)=0
"RTN","BPSNCPD1",134,0)
 F IBSEQ=1:1:END D  Q:BPQ=1
"RTN","BPSNCPD1",135,0)
 . H 1
"RTN","BPSNCPD1",136,0)
 . ;
"RTN","BPSNCPD1",137,0)
 . ; Get status of resubmit, last update, and claim status
"RTN","BPSNCPD1",138,0)
 . S CLMSTAT=$$STATUS^BPSOSRX(BRXIEN,BFILL,1)
"RTN","BPSNCPD1",139,0)
 . S RESUB=$$GET1^DIQ(9002313.59,TRANSIEN_",",1.12,"I")
"RTN","BPSNCPD1",140,0)
 . ;
"RTN","BPSNCPD1",141,0)
 . ; Format status message
"RTN","BPSNCPD1",142,0)
 . S CLMSTAT=$P(CLMSTAT,"^",1)_$S($P(CLMSTAT,"^",1)["IN PROGRESS":"-"_$P(CLMSTAT,"^",3),1:"")
"RTN","BPSNCPD1",143,0)
 . ;
"RTN","BPSNCPD1",144,0)
 . ; If we are starting the resubmit, display message
"RTN","BPSNCPD1",145,0)
 . I REBILL,RESFL=0,RESUB=1,CLMSTAT["Resubmitting" W !,"Resubmitting..." S RESFL=1 Q
"RTN","BPSNCPD1",146,0)
 . I REBILL,RESFL=0,RESUB=2,CLMSTAT["IN PROGRESS" W !,"Resubmitting..." S RESFL=1
"RTN","BPSNCPD1",147,0)
 . ;
"RTN","BPSNCPD1",148,0)
 . ; If the status has changed, display the new message
"RTN","BPSNCPD1",149,0)
 . I OCLMSTAT'=CLMSTAT W !,CLMSTAT S OCLMSTAT=CLMSTAT
"RTN","BPSNCPD1",150,0)
 . ;
"RTN","BPSNCPD1",151,0)
 . ; If the status is not IN PROGRESS, then we are done
"RTN","BPSNCPD1",152,0)
 . I CLMSTAT'["IN PROGRESS" S BPQ=1
"RTN","BPSNCPD1",153,0)
 W !
"RTN","BPSNCPD1",154,0)
 ;
"RTN","BPSNCPD1",155,0)
 ; Log messages to developer log
"RTN","BPSNCPD1",156,0)
 D LOG^BPSNCPDP($T(+0)_" - After Status Loop")
"RTN","BPSNCPD1",157,0)
 Q
"RTN","BPSNCPD1",158,0)
 ;
"RTN","BPSNCPD1",159,0)
 ; Bulletin to the OPECC
"RTN","BPSNCPD1",160,0)
BULL(RXI,RXR,SITE,DFN,PATNAME) ;
"RTN","BPSNCPD1",161,0)
 N BTXT,XMSUB,XMY,XMTEXT,XMDUZ
"RTN","BPSNCPD1",162,0)
 N SSN,X,SITENM
"RTN","BPSNCPD1",163,0)
 I $G(SITE) S SITENM=$P($G(^PS(59,SITE,0)),U)
"RTN","BPSNCPD1",164,0)
 I $G(DFN) D
"RTN","BPSNCPD1",165,0)
 . S X=$P($G(^DPT(DFN,0)),U,9)
"RTN","BPSNCPD1",166,0)
 . S SSN=$E(X,$L(X)-3,$L(X))
"RTN","BPSNCPD1",167,0)
 ;
"RTN","BPSNCPD1",168,0)
 ; Need to do in the background
"RTN","BPSNCPD1",169,0)
 ;   Mailman calls CMOP which calls EN^BPSNCPDP.
"RTN","BPSNCPD1",170,0)
 ;   If BPSNCPDP* (same process) then calls mailman, it gets confused.
"RTN","BPSNCPD1",171,0)
 N ZTIO,ZTRTN,ZTDTH,ZTSAVE,ZTDESC
"RTN","BPSNCPD1",172,0)
 N %,%H,%I,X
"RTN","BPSNCPD1",173,0)
 D NOW^%DTC
"RTN","BPSNCPD1",174,0)
 S ZTIO="",ZTDTH=%,ZTDESC="IN PROGRESS BULLETIN"
"RTN","BPSNCPD1",175,0)
 S ZTSAVE("RXR")="",ZTSAVE("RXI")=""
"RTN","BPSNCPD1",176,0)
 S ZTSAVE("SITENM")="",ZTSAVE("PATNAME")=""
"RTN","BPSNCPD1",177,0)
 S ZTSAVE("SSN")=""
"RTN","BPSNCPD1",178,0)
 S ZTRTN="BULL1^BPSNCPD1"
"RTN","BPSNCPD1",179,0)
 D ^%ZTLOAD
"RTN","BPSNCPD1",180,0)
 Q
"RTN","BPSNCPD1",181,0)
 ;
"RTN","BPSNCPD1",182,0)
BULL1 ;
"RTN","BPSNCPD1",183,0)
 S XMSUB="RX not processed for site "_$G(SITENM)
"RTN","BPSNCPD1",184,0)
 S BTXT(1)="Prescription "_$P(^PSRX(RXI,0),"^",1)_" and fill number "_+RXR_" could "
"RTN","BPSNCPD1",185,0)
 S BTXT(1)=BTXT(1)_"not be processed because the "
"RTN","BPSNCPD1",186,0)
 S BTXT(2)="previous request was in progress.  There may have been a delay in processing "
"RTN","BPSNCPD1",187,0)
 S BTXT(3)="of the previous claim or the previous claim may be stranded."
"RTN","BPSNCPD1",188,0)
 S BTXT(4)=""
"RTN","BPSNCPD1",189,0)
 S BTXT(5)="For more information on this prescription's activity, please view the "
"RTN","BPSNCPD1",190,0)
 S BTXT(6)="ECME log within the View Prescription (VP) option on the Further Research (FR) "
"RTN","BPSNCPD1",191,0)
 S BTXT(7)="menu of the ECME user screen."
"RTN","BPSNCPD1",192,0)
 S BTXT(8)=""
"RTN","BPSNCPD1",193,0)
 S BTXT(9)="Patient Name: "_$G(PATNAME)
"RTN","BPSNCPD1",194,0)
 S BTXT(10)="Last four digits of SSN: "_$G(SSN)
"RTN","BPSNCPD1",195,0)
 S BTXT(11)=""
"RTN","BPSNCPD1",196,0)
 ;
"RTN","BPSNCPD1",197,0)
 S XMDUZ="BPS PACKAGE",XMTEXT="BTXT("
"RTN","BPSNCPD1",198,0)
 S XMY("G.BPS OPECC")=""
"RTN","BPSNCPD1",199,0)
 I $G(DUZ)'<1 S XMY(DUZ)=""
"RTN","BPSNCPD1",200,0)
 D ^XMD
"RTN","BPSNCPD1",201,0)
 Q
"RTN","BPSNCPDP")
0^9^B53857295
"RTN","BPSNCPDP",1,0)
BPSNCPDP ;BHAM ISC/LJE - API to submit a claim to ECME ;8/01/03
"RTN","BPSNCPDP",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSNCPDP",3,0)
 ;
"RTN","BPSNCPDP",4,0)
 ; For comments regarding this API, see routine BPSNCPD1.
"RTN","BPSNCPDP",5,0)
 ;   They were moved to BPSNCPD1 due to size constraints
"RTN","BPSNCPDP",6,0)
 ; Reference to ^PSRX supported by DBIA 1977
"RTN","BPSNCPDP",7,0)
 ;    
"RTN","BPSNCPDP",8,0)
EN(BRXIEN,BFILL,BFILLDAT,BWHERE,BILLNDC,REVREAS,DURREC,BPOVRIEN) ;
"RTN","BPSNCPDP",9,0)
EN1 N DFN,PNAME,BRX,ARRAY,MOREDATA,SITE,WFLG,OLDRESP
"RTN","BPSNCPDP",10,0)
 N %,%I,%H,X,TODAY
"RTN","BPSNCPDP",11,0)
 N QUIT,CERTIFY,CERTIEN,PAYERSH
"RTN","BPSNCPDP",12,0)
 N REBILL,REVONLY,CLMSTAT,RESPONSE,BPSTART,IB,RESP
"RTN","BPSNCPDP",13,0)
 ;
"RTN","BPSNCPDP",14,0)
 ; Default variables
"RTN","BPSNCPDP",15,0)
 S RESPONSE="",CLMSTAT=""
"RTN","BPSNCPDP",16,0)
 ;
"RTN","BPSNCPDP",17,0)
 ; Check for missing parameters
"RTN","BPSNCPDP",18,0)
 I '$G(BRXIEN) S CLMSTAT="Prescription IEN parameter missing",RESPONSE=5 G END
"RTN","BPSNCPDP",19,0)
 I $G(BWHERE)="" S CLMSTAT="RX Action parameter missing",RESPONSE=5 G END
"RTN","BPSNCPDP",20,0)
 I '$G(BFILL) S BFILL=0
"RTN","BPSNCPDP",21,0)
 ;
"RTN","BPSNCPDP",22,0)
 ; Check that the prescription exists
"RTN","BPSNCPDP",23,0)
 I '$D(^PSRX(BRXIEN,0)) S CLMSTAT="Prescription does not exist",RESPONSE=5 G END
"RTN","BPSNCPDP",24,0)
 ;
"RTN","BPSNCPDP",25,0)
 ; Get the NDC if it was not passed in
"RTN","BPSNCPDP",26,0)
 I $G(BILLNDC)="" S BILLNDC=$$GETNDC^PSONDCUT(BRXIEN,BFILL)
"RTN","BPSNCPDP",27,0)
 ;
"RTN","BPSNCPDP",28,0)
 ; Patient Info
"RTN","BPSNCPDP",29,0)
 S DFN=$$GET1^DIQ(52,BRXIEN_",",2,"I"),PNAME=$$GET1^DIQ(2,DFN,.01)
"RTN","BPSNCPDP",30,0)
 ;
"RTN","BPSNCPDP",31,0)
 ; Get prescription number
"RTN","BPSNCPDP",32,0)
 S BRX=$P(^PSRX(BRXIEN,0),"^",1)
"RTN","BPSNCPDP",33,0)
 ;
"RTN","BPSNCPDP",34,0)
 ; Set write flag
"RTN","BPSNCPDP",35,0)
 S WFLG=1
"RTN","BPSNCPDP",36,0)
 I ",ARES,AREV,CRLB,CRLR,CRLX,DDED,DE,EREV,HLD,PC,PE,PL,RS,"[(","_BWHERE_",") S WFLG=0
"RTN","BPSNCPDP",37,0)
 ;
"RTN","BPSNCPDP",38,0)
 ; Get status of previously submitted claim and set rebill/revonly flags
"RTN","BPSNCPDP",39,0)
 S (REBILL,REVONLY)=0
"RTN","BPSNCPDP",40,0)
 S OLDRESP=$P($$STATUS^BPSOSRX(BRXIEN,BFILL,1),U,1)
"RTN","BPSNCPDP",41,0)
 I ",AREV,CRLR,CRLX,DC,DDED,DE,EREV,HLD,RS,"[(","_BWHERE_",") S REVONLY=1
"RTN","BPSNCPDP",42,0)
 E  I OLDRESP="E PAYABLE"!(OLDRESP="E DUPLICATE") S REBILL=1
"RTN","BPSNCPDP",43,0)
 ;
"RTN","BPSNCPDP",44,0)
 ; Get Site info and check if the site has ECME turned on
"RTN","BPSNCPDP",45,0)
 ;   Do not check for reversals/rebill as these need to be processed for the old site
"RTN","BPSNCPDP",46,0)
 I 'BFILL S SITE=$$GET1^DIQ(52,BRXIEN,20,"I")
"RTN","BPSNCPDP",47,0)
 I BFILL S SITE=$$GET1^DIQ(52.1,BFILL_","_BRXIEN,8,"I")
"RTN","BPSNCPDP",48,0)
 I 'REVONLY,'REBILL D  I RESPONSE=1 G END
"RTN","BPSNCPDP",49,0)
 . I '$G(SITE) S CLMSTAT="No Site Information",RESPONSE=1 Q
"RTN","BPSNCPDP",50,0)
 . I '$$ECMEON^BPSUTIL(SITE) S CLMSTAT="ECME switch is not on for the site",RESPONSE=1
"RTN","BPSNCPDP",51,0)
 ;
"RTN","BPSNCPDP",52,0)
 ; In Progress/Stranded claims check
"RTN","BPSNCPDP",53,0)
 I OLDRESP["IN PROGRESS" D  G END
"RTN","BPSNCPDP",54,0)
 . S CLMSTAT="Previous request is IN PROGRESS.  It may need to be unstranded.",RESPONSE=4
"RTN","BPSNCPDP",55,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",56,0)
 . ; If not OP, then send an email to the OPECC
"RTN","BPSNCPDP",57,0)
 . I ",AREV,BB,ERES,EREV,"'[(","_BWHERE_",") D BULL^BPSNCPD1(BRXIEN,BFILL,$G(SITE),$G(DFN),$G(PNAME))
"RTN","BPSNCPDP",58,0)
 ;
"RTN","BPSNCPDP",59,0)
 ; Backbilling check
"RTN","BPSNCPDP",60,0)
 I BWHERE="BB",OLDRESP'="" D  G END
"RTN","BPSNCPDP",61,0)
 . S CLMSTAT="Previously billed through ECME: "_OLDRESP,RESPONSE=1
"RTN","BPSNCPDP",62,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",63,0)
 ;
"RTN","BPSNCPDP",64,0)
 ; Do not reverse if the prescription was not previously billed through ECME
"RTN","BPSNCPDP",65,0)
 I OLDRESP="",(",AREV,CRLR,CRLX,DC,DDED,DE,EREV,HLD,RS,"[(","_BWHERE_",")) D  G END
"RTN","BPSNCPDP",66,0)
 . S CLMSTAT="Prescription not previously billed through ECME.  Cannot Reverse claim.",RESPONSE=1
"RTN","BPSNCPDP",67,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",68,0)
 ;
"RTN","BPSNCPDP",69,0)
 ; If returning to stock or deleting and the previous claim was not paid, then no reversal is needed
"RTN","BPSNCPDP",70,0)
 ;   so close the prescription and quit
"RTN","BPSNCPDP",71,0)
 I OLDRESP'["E PAYABLE",OLDRESP'["E REVERSAL REJECTED",(",RS,DE,"[(","_BWHERE_",")) D  G END
"RTN","BPSNCPDP",72,0)
 . D CLOSE2^BPSBUTL(BRXIEN,BFILL,BWHERE)
"RTN","BPSNCPDP",73,0)
 . S CLMSTAT="Claim was not payable so it has been closed.  No ECME claim created.",RESPONSE=3
"RTN","BPSNCPDP",74,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",75,0)
 ;
"RTN","BPSNCPDP",76,0)
 ; Do not reverse if the claim is not E PAYABLE
"RTN","BPSNCPDP",77,0)
 I OLDRESP'["E PAYABLE",OLDRESP'["E DUPLICATE",(",AREV,CRLR,CRLX,DC,DDED,HLD,"[(","_BWHERE_",")) D  G END
"RTN","BPSNCPDP",78,0)
 . S CLMSTAT="Claim has status "_OLDRESP_".  Not reversed.",RESPONSE=1
"RTN","BPSNCPDP",79,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",80,0)
 ;
"RTN","BPSNCPDP",81,0)
 ; EREV can be re-reversed if the previous submission is Payable or Rejected Revesal
"RTN","BPSNCPDP",82,0)
 I BWHERE="EREV",",E PAYABLE,E DUPLICATE,E REVERSAL REJECTED,E REVERSAL STRANDED,"'[(","_OLDRESP_",") D  G END
"RTN","BPSNCPDP",83,0)
 . S CLMSTAT="Claim has status "_OLDRESP_".  Not reversed.",RESPONSE=1
"RTN","BPSNCPDP",84,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",85,0)
 ;
"RTN","BPSNCPDP",86,0)
 ; Make sure fill date is not in the future or empty
"RTN","BPSNCPDP",87,0)
 D NOW^%DTC
"RTN","BPSNCPDP",88,0)
 S TODAY=$P(%,".",1)
"RTN","BPSNCPDP",89,0)
 I '$G(BFILLDAT)!($G(BFILLDAT)>TODAY) S BFILLDAT=TODAY
"RTN","BPSNCPDP",90,0)
 ;
"RTN","BPSNCPDP",91,0)
 ; Store needed parameters into MOREDATA
"RTN","BPSNCPDP",92,0)
 S MOREDATA("USER")=DUZ
"RTN","BPSNCPDP",93,0)
 S MOREDATA("RX ACTION")=$G(BWHERE)
"RTN","BPSNCPDP",94,0)
 S MOREDATA("DATE OF SERVICE")=$P($G(BFILLDAT),".",1)
"RTN","BPSNCPDP",95,0)
 S MOREDATA("REVERSAL REASON")=$S($G(REVREAS)="":"UNKNOWN",1:$E($G(REVREAS),1,40))
"RTN","BPSNCPDP",96,0)
 I $G(DURREC)]"" S MOREDATA("DUR",1,0)=DURREC
"RTN","BPSNCPDP",97,0)
 I $G(BPOVRIEN)]"" S MOREDATA("BPOVRIEN")=BPOVRIEN
"RTN","BPSNCPDP",98,0)
 ;
"RTN","BPSNCPDP",99,0)
 ; Do a reversal for the appropriate actions
"RTN","BPSNCPDP",100,0)
 I ",AREV,CRLR,CRLX,DC,DDED,DE,EREV,HLD,RS,"[(","_BWHERE_",") D  G STATUS:RESPONSE=0,END:RESPONSE=4
"RTN","BPSNCPDP",101,0)
 . ; If override flag is set, prompt for override values - MUST be commented out for any release.
"RTN","BPSNCPDP",102,0)
 . ;I $L($T(CHECK^ZZGIZOV1))>0,$$CHECK^ZZGIZOV1 D GETOVER^ZZGIZOV1(BRXIEN,BFILL,OLDRESP,BWHERE,"R")
"RTN","BPSNCPDP",103,0)
 . D LOG(DT_" Before Submit of Reversal")
"RTN","BPSNCPDP",104,0)
 . S BPSTART=$$STTM()
"RTN","BPSNCPDP",105,0)
 . S RESP=$$UNCLAIM^BPSOSRX(BRXIEN,BFILL,.MOREDATA)
"RTN","BPSNCPDP",106,0)
 . D LOG("After Submit of Reversal. Return Value: "_RESP)
"RTN","BPSNCPDP",107,0)
 . I RESP=1 D
"RTN","BPSNCPDP",108,0)
 .. S RESPONSE=0,CLMSTAT="Reversing prescription "_BRX_"."
"RTN","BPSNCPDP",109,0)
 .. I WFLG W !,CLMSTAT H 2
"RTN","BPSNCPDP",110,0)
 . I RESP=0 D
"RTN","BPSNCPDP",111,0)
 .. S RESPONSE=4,CLMSTAT="No claim submission made.  Unable to queue reversal."
"RTN","BPSNCPDP",112,0)
 .. D LOG(CLMSTAT)
"RTN","BPSNCPDP",113,0)
 .. I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",114,0)
 .. L -^BPST
"RTN","BPSNCPDP",115,0)
 ;
"RTN","BPSNCPDP",116,0)
 ; Can not resubmit reversed claims unless they are accepted
"RTN","BPSNCPDP",117,0)
 I OLDRESP]"",OLDRESP["E REVERSAL",OLDRESP'="E REVERSAL ACCEPTED" D  G END
"RTN","BPSNCPDP",118,0)
 . S CLMSTAT="Can not resubmit a rejected or stranded reversal",RESPONSE=1
"RTN","BPSNCPDP",119,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",120,0)
 ;
"RTN","BPSNCPDP",121,0)
 ; Some actions require a paid claim (they will not do a reversal/resubmit)
"RTN","BPSNCPDP",122,0)
 I OLDRESP]"",OLDRESP'="E REVERSAL ACCEPTED",OLDRESP'="E REJECTED",(",CRLB,ED,ERES,RL,RRL,"'[(","_BWHERE_",")) D  G END
"RTN","BPSNCPDP",123,0)
 . S CLMSTAT="Previously billed through ECME: "_OLDRESP,RESPONSE=1
"RTN","BPSNCPDP",124,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",125,0)
 ;
"RTN","BPSNCPDP",126,0)
 ; Certification Testing
"RTN","BPSNCPDP",127,0)
 S (QUIT,CERTIFY)=0
"RTN","BPSNCPDP",128,0)
 I ^BPS(9002313.99,1,"CERTIFIER")=DUZ D  I QUIT S CLMSTAT="User exited from certification questions",RESPONSE=1 G END
"RTN","BPSNCPDP",129,0)
 . S CERTIFY=1
"RTN","BPSNCPDP",130,0)
C1 . R !,"ENTER NDC: ",BILLNDC:120 S:BILLNDC="^" QUIT=1 Q:QUIT  I BILLNDC="" G C1
"RTN","BPSNCPDP",131,0)
C2 . R !,"PAYER SHEET: ",PAYERSH:120 I '$D(^BPSF(9002313.92,"B",PAYERSH)) S:PAYERSH="^" QUIT=1 Q:QUIT  W !,"INVALID SHEET" G C2
"RTN","BPSNCPDP",132,0)
C3 . R !,"CERTIFICATION ENTRY: ",CERTIEN:120 I '$D(^BPS(9002313.31,CERTIEN)) S:CERTIEN="^" QUIT=1 Q:QUIT  W !,"INVALID IEN" G C3
"RTN","BPSNCPDP",133,0)
 I WFLG W !!
"RTN","BPSNCPDP",134,0)
 ;
"RTN","BPSNCPDP",135,0)
 ; Build array with prescription data
"RTN","BPSNCPDP",136,0)
 D STARRAY^BPSNCPD1(BRXIEN,BFILL,BWHERE,.ARRAY)
"RTN","BPSNCPDP",137,0)
 ;
"RTN","BPSNCPDP",138,0)
 ; Do IB billing determination and check response
"RTN","BPSNCPDP",139,0)
 ; If IB=2, then not billable, so write messages
"RTN","BPSNCPDP",140,0)
 S IB=0
"RTN","BPSNCPDP",141,0)
 D EN^BPSNCPD2
"RTN","BPSNCPDP",142,0)
 I IB=2 D  G END
"RTN","BPSNCPDP",143,0)
 . S RESPONSE=2
"RTN","BPSNCPDP",144,0)
 . S CLMSTAT=$P(MOREDATA("BILL"),"^",2)
"RTN","BPSNCPDP",145,0)
 . I OLDRESP]"" D LOG(CLMSTAT)
"RTN","BPSNCPDP",146,0)
 ;
"RTN","BPSNCPDP",147,0)
 ; Check for missing data (Will IB billing determination catch this?)
"RTN","BPSNCPDP",148,0)
 I $D(MOREDATA("IBDATA",1,1)),$P(MOREDATA("IBDATA",1,1),"^",1)="" D  G END
"RTN","BPSNCPDP",149,0)
 . S RESPONSE=2,CLMSTAT="Information missing from IB data."
"RTN","BPSNCPDP",150,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",151,0)
 ;
"RTN","BPSNCPDP",152,0)
 ; Check for missing/invalid payer sheets (I think IB billing determination will catch this)
"RTN","BPSNCPDP",153,0)
 I $P($G(MOREDATA("IBDATA",1,1)),"^",4)="" D  G END
"RTN","BPSNCPDP",154,0)
 . S RESPONSE=2,CLMSTAT="Invalid/missing payer sheet from IB data."
"RTN","BPSNCPDP",155,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",156,0)
 ;
"RTN","BPSNCPDP",157,0)
 ; Check if IB says to bill
"RTN","BPSNCPDP",158,0)
 I '$G(MOREDATA("BILL")) D  G END
"RTN","BPSNCPDP",159,0)
 . S RESPONSE=2
"RTN","BPSNCPDP",160,0)
 . S CLMSTAT="Flagged by IB to not 3rd Party Insurance bill through ECME."
"RTN","BPSNCPDP",161,0)
 . I WFLG W !,CLMSTAT,! H 2
"RTN","BPSNCPDP",162,0)
 ;
"RTN","BPSNCPDP",163,0)
 ; Log message to ECME log
"RTN","BPSNCPDP",164,0)
 D LOG(DT_" Before submit of claim")
"RTN","BPSNCPDP",165,0)
 ;
"RTN","BPSNCPDP",166,0)
 ; If override flag is set, prompt for override values - MUST be commented out for any release.
"RTN","BPSNCPDP",167,0)
 ;I $L($T(CHECK^ZZGIZOV1))>0,$$CHECK^ZZGIZOV1 D GETOVER^ZZGIZOV1(BRXIEN,BFILL,OLDRESP,BWHERE,"S")
"RTN","BPSNCPDP",168,0)
 ;
"RTN","BPSNCPDP",169,0)
 ; Get require data
"RTN","BPSNCPDP",170,0)
 S BPSTART=$$STTM()
"RTN","BPSNCPDP",171,0)
 ;
"RTN","BPSNCPDP",172,0)
 ; Submit claim and check result
"RTN","BPSNCPDP",173,0)
 S RESP=$$CLAIM^BPSOSRX(BRXIEN,BFILL,.MOREDATA)
"RTN","BPSNCPDP",174,0)
 D LOG("After Submit of Claim.  Return Value: "_RESP)
"RTN","BPSNCPDP",175,0)
 I RESP=1 D
"RTN","BPSNCPDP",176,0)
 . S RESPONSE=0
"RTN","BPSNCPDP",177,0)
 . S CLMSTAT="Prescription "_BRX_" successfully submitted to ECME for claim generation."
"RTN","BPSNCPDP",178,0)
 . I WFLG W !!,CLMSTAT
"RTN","BPSNCPDP",179,0)
 I RESP=0 D  G END
"RTN","BPSNCPDP",180,0)
 . S RESPONSE=4
"RTN","BPSNCPDP",181,0)
 . S CLMSTAT="No claim submission made.  Unable to queue claim submission."
"RTN","BPSNCPDP",182,0)
 . I WFLG W !!,CLMSTAT,!
"RTN","BPSNCPDP",183,0)
 . D LOG(CLMSTAT)
"RTN","BPSNCPDP",184,0)
 ;
"RTN","BPSNCPDP",185,0)
 ; Display status
"RTN","BPSNCPDP",186,0)
STATUS I 'WFLG H 1
"RTN","BPSNCPDP",187,0)
 E  D STATUS^BPSNCPD1(BRXIEN,BFILL,REBILL,REVONLY,BPSTART,BWHERE)
"RTN","BPSNCPDP",188,0)
 ;
"RTN","BPSNCPDP",189,0)
 ; Clean up and quit
"RTN","BPSNCPDP",190,0)
END K BRXIEN,BFILL,BFILLDAT,BWHERE,MOREDATA
"RTN","BPSNCPDP",191,0)
 S:'$D(RESPONSE) RESPONSE=1
"RTN","BPSNCPDP",192,0)
 Q RESPONSE_"^"_$G(CLMSTAT)
"RTN","BPSNCPDP",193,0)
 ;
"RTN","BPSNCPDP",194,0)
LOG(LOGMSG) ;
"RTN","BPSNCPDP",195,0)
 D LOG59^BPSOSL($T(+0)_" - "_LOGMSG,BRXIEN_"."_$E($TR($J("",4-$L(BFILL))," ","0")_BFILL,1,4)_1)
"RTN","BPSNCPDP",196,0)
 Q
"RTN","BPSNCPDP",197,0)
STTM() ;
"RTN","BPSNCPDP",198,0)
 N %,%H,%I
"RTN","BPSNCPDP",199,0)
 D NOW^%DTC
"RTN","BPSNCPDP",200,0)
 Q %
"RTN","BPSOSCD")
0^20^B46703234
"RTN","BPSOSCD",1,0)
BPSOSCD ;BHAM ISC/FCS/DRS/DLF - Set BPS() "RX" nodes for current medication ;06/01/2004
"RTN","BPSOSCD",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSOSCD",3,0)
 Q
"RTN","BPSOSCD",4,0)
 ;----------------------------------------------------------------------
"RTN","BPSOSCD",5,0)
 ;Set BPS() "RX" nodes for current medication:
"RTN","BPSOSCD",6,0)
 ;
"RTN","BPSOSCD",7,0)
 ;Parameters:   VMEDINFO  - Contains VMEDIEN,RXIEN,RXRFIEN,VCPTIEN
"RTN","BPSOSCD",8,0)
 ;              MEDN      - Index number indicating what medication is
"RTN","BPSOSCD",9,0)
 ;                          being processed
"RTN","BPSOSCD",10,0)
 ;----------------------------------------------------------------------
"RTN","BPSOSCD",11,0)
 ; Called from BPSOSCA from BPSOSQG from BPSOSQ2,
"RTN","BPSOSCD",12,0)
 ; once for each item in its VMEDS() array.
"RTN","BPSOSCD",13,0)
MEDINFO(VMEDINFO,MEDN,INSPINS) ;EP
"RTN","BPSOSCD",14,0)
 ;Manage local variables
"RTN","BPSOSCD",15,0)
 N VMEDIEN,RXIEN,RXRFIEN,DRUGIEN,PROVIEN,VCPTIEN,RXI,IEN59,PINSTYPE
"RTN","BPSOSCD",16,0)
 N FILLDT
"RTN","BPSOSCD",17,0)
 ;
"RTN","BPSOSCD",18,0)
 ;Parse variables from VMEDINFO variable
"RTN","BPSOSCD",19,0)
 S VMEDIEN=$P(VMEDINFO,U,1)
"RTN","BPSOSCD",20,0)
 S RXIEN=$P(VMEDINFO,U,2)
"RTN","BPSOSCD",21,0)
 S RXRFIEN=$P(VMEDINFO,U,3)
"RTN","BPSOSCD",22,0)
 S VCPTIEN=$P(VMEDINFO,U,4)
"RTN","BPSOSCD",23,0)
 S IEN59=$P(VMEDINFO,U,5) ; 06/23/2000
"RTN","BPSOSCD",24,0)
 D OVERRIDE(IEN59,MEDN) ; overrides stored in 9002313.511
"RTN","BPSOSCD",25,0)
 ;
"RTN","BPSOSCD",26,0)
 ;IHS/SD/lwj 8/20/02  NCPDP 5.1 changes - if a 5.1 claims and
"RTN","BPSOSCD",27,0)
 ; there are DUR values - retrieve them
"RTN","BPSOSCD",28,0)
 I BPS("NCPDP","Version")[5 D DURVALUE(IEN59,MEDN)
"RTN","BPSOSCD",29,0)
 ;
"RTN","BPSOSCD",30,0)
 ;
"RTN","BPSOSCD",31,0)
 S PINSTYPE=$P(INSPINS,",") ; "CAID" will make a difference
"RTN","BPSOSCD",32,0)
 ;
"RTN","BPSOSCD",33,0)
 S DRUGIEN=$P($G(^PSRX(RXIEN,0)),U,6)
"RTN","BPSOSCD",34,0)
 S PROVIEN=$P($G(^PSRX(RXIEN,0)),U,4)
"RTN","BPSOSCD",35,0)
 ;
"RTN","BPSOSCD",36,0)
 S BPS("RX",MEDN,"VCPT IEN")=VCPTIEN
"RTN","BPSOSCD",37,0)
 S BPS("RX",MEDN,"IEN59")=IEN59 ; 06/23/2000
"RTN","BPSOSCD",38,0)
 S (RXI,BPS("RX",MEDN,"RX IEN"))=RXIEN
"RTN","BPSOSCD",39,0)
 S BPS("RX",MEDN,"Date Written")=$P($G(^PSRX(RXIEN,0)),U,13)
"RTN","BPSOSCD",40,0)
 S BPS("RX",MEDN,"RX Number")=RXIEN
"RTN","BPSOSCD",41,0)
 S BPS("RX",MEDN,"New/Refill")=$S(RXRFIEN="":"N",1:"R")
"RTN","BPSOSCD",42,0)
 ;
"RTN","BPSOSCD",43,0)
 ;IHS/SD/lwj 8/30/02  NCPDP 5.1 changes 
"RTN","BPSOSCD",44,0)
 ; Version 3.2 uses field 416 for the prior auth code and number
"RTN","BPSOSCD",45,0)
 ; Version 5.1 will use fields 461 and 462
"RTN","BPSOSCD",46,0)
 ; Below line remarked out, next three lines added
"RTN","BPSOSCD",47,0)
 ;
"RTN","BPSOSCD",48,0)
 S BPS("RX",MEDN,"Preauth #")=$P(^BPST(IEN59,1),U,15)_$P(^BPST(IEN59,1),U,9)
"RTN","BPSOSCD",49,0)
 ;
"RTN","BPSOSCD",50,0)
 ; Get Service Date
"RTN","BPSOSCD",51,0)
 ; It should be in BPS Transaction.  If not, use the established algorithm, which
"RTN","BPSOSCD",52,0)
 ;    is $$DOSDATE^BPSSCRRS
"RTN","BPSOSCD",53,0)
 S FILLDT=$P($G(^BPST(IEN59,12)),U,2)
"RTN","BPSOSCD",54,0)
 I FILLDT="" S FILLDT=$$DOSDATE^BPSSCRRS(RXIEN,RXRFIEN)
"RTN","BPSOSCD",55,0)
 S BPS("RX",MEDN,"Date Filled")=$$FMTHL7^XLFDT(FILLDT)
"RTN","BPSOSCD",56,0)
 S BPS("Claim",MEDN,"Prior Auth Type")=$P(^BPST(IEN59,1),U,15)
"RTN","BPSOSCD",57,0)
 S BPS("Claim",MEDN,"Prior Auth Num Sub")=$P(^BPST(IEN59,1),U,9)
"RTN","BPSOSCD",58,0)
 ;
"RTN","BPSOSCD",59,0)
 I 'RXRFIEN D  ; first fill
"RTN","BPSOSCD",60,0)
 .S BPS("RX",MEDN,"Quantity")=$P($G(^PSRX(RXIEN,0)),U,7)
"RTN","BPSOSCD",61,0)
 .S BPS("RX",MEDN,"Days Supply")=$P($G(^PSRX(RXIEN,0)),U,8)
"RTN","BPSOSCD",62,0)
 .S BPS("RX",MEDN,"DAW")=$P($G(^PSRX(RXIEN,"EPH")),U,1)
"RTN","BPSOSCD",63,0)
 . D NOW^%DTC S TODAY=$P(%,".",1)
"RTN","BPSOSCD",64,0)
 E  D  ; refill
"RTN","BPSOSCD",65,0)
 .S BPS("RX",MEDN,"Quantity")=$P($G(^PSRX(RXIEN,1,RXRFIEN,0)),U,4)
"RTN","BPSOSCD",66,0)
 .S BPS("RX",MEDN,"Days Supply")=$P($G(^PSRX(RXIEN,1,RXRFIEN,0)),U,10)
"RTN","BPSOSCD",67,0)
 .S BPS("RX",MEDN,"DAW")=$P($G(^PSRX(RXIEN,1,RXRFIEN,"EPH")),U,1)
"RTN","BPSOSCD",68,0)
 S BPS("RX",MEDN,"NDC")=$$GETNDC^PSONDCUT(RXIEN,RXRFIEN)
"RTN","BPSOSCD",69,0)
 S BPS("RX",MEDN,"# Refills")=$P($G(^PSRX(RXIEN,0)),U,9)
"RTN","BPSOSCD",70,0)
 S BPS("RX",MEDN,"Refill #")=$$RXRFN(RXIEN,RXRFIEN)
"RTN","BPSOSCD",71,0)
 S BPS("RX",MEDN,"Prescriber IEN")=+PROVIEN
"RTN","BPSOSCD",72,0)
 D STLIC^BPSJPAY(MEDN,PROVIEN,BPS("RX",MEDN,"Date Filled"))
"RTN","BPSOSCD",73,0)
 I PROVIEN'="" D  ;had to do this for certification
"RTN","BPSOSCD",74,0)
 .S BPS("RX",MEDN,"Prescriber Name")=$$GET1^DIQ(200,+PROVIEN,.01) ;LJE;7/7/03
"RTN","BPSOSCD",75,0)
 .S BPS("RX",MEDN,"Prescriber Phone #")=$$GET1^DIQ(200,+PROVIEN,.131) ;LJE;7/7/03
"RTN","BPSOSCD",76,0)
 .I ^BPS(9002313.99,1,"CERTIFIER")=DUZ S BPS("RX",MEDN,"Prescriber DEA #")=$G(BPS("RX",1,"Provider ID"))
"RTN","BPSOSCD",77,0)
 .S BPS("RX",MEDN,"Prescriber DEA #")=$$GET1^DIQ(200,+PROVIEN,53.2)
"RTN","BPSOSCD",78,0)
 .S BPS("RX",MEDN,"Prescriber CAID #")=""
"RTN","BPSOSCD",79,0)
 .S BPS("RX",MEDN,"Prescriber UPIN #")=""
"RTN","BPSOSCD",80,0)
 .S BPS("RX",MEDN,"Prescriber Billing Location")="" ; ANMC only?  not in Sitka's data dic.
"RTN","BPSOSCD",81,0)
 S BPS("RX",MEDN,"Alt. Product Type")="03" ;lje;7/15/03
"RTN","BPSOSCD",82,0)
 S BPS("RX",MEDN,"Gross Amount Due")=$G(VAINFO(9002313.59902,VAINSDA1_","_VAINSDA_",",902.15,"I")) ;LJE
"RTN","BPSOSCD",83,0)
 S BPS("RX",MEDN,"Usual & Customary")=$G(VAINFO(9002313.59902,VAINSDA1_","_VAINSDA_",",902.14,"I")) ;LJE
"RTN","BPSOSCD",84,0)
 S BPS("RX",MEDN,"Basis of Cost Determination")=$G(VAINFO(9002313.59902,VAINSDA1_","_VAINSDA_",",902.13,"I")) ;LJE
"RTN","BPSOSCD",85,0)
 S (VANATURE,VAOIEN)="",VAOIEN=$P($G(^PSRX(RXIEN,"OR1")),"^",2),VANATURE=$$GET1^DIQ(100.008,"1,"_VAOIEN_",","12")
"RTN","BPSOSCD",86,0)
 S BPS("RX",MEDN,"Origin Code")=$S(VANATURE="AUTO":2,VANATURE["ELECTRONIC":3,VANATURE="DUPLICATE":0,VANATURE["TELEPHONE":2,1:1)
"RTN","BPSOSCD",87,0)
 K VANATURE,VAOIEN ;LJE;7/16/03
"RTN","BPSOSCD",88,0)
 D
"RTN","BPSOSCD",89,0)
 . N %
"RTN","BPSOSCD",90,0)
 . I PINSTYPE="CAID" D
"RTN","BPSOSCD",91,0)
 . . S %=BPS("RX",MEDN,"Prescriber CAID #")
"RTN","BPSOSCD",92,0)
 . . I %="" D  ; special for ANMC
"RTN","BPSOSCD",93,0)
 . . . N X1 S X1=BPS("RX",MEDN,"Prescriber Billing Location")
"RTN","BPSOSCD",94,0)
 . . . S %=$S(X1=1665:"MDG275",X1=1946:"MDG867",1:"")
"RTN","BPSOSCD",95,0)
 . . I %="" S %=BPS("Site","Default CAID #")
"RTN","BPSOSCD",96,0)
 . E  D
"RTN","BPSOSCD",97,0)
 . . S %=BPS("RX",MEDN,"Prescriber DEA #")
"RTN","BPSOSCD",98,0)
 . . I %="" S %=BPS("Site","Default DEA #")
"RTN","BPSOSCD",99,0)
 . S BPS("RX",MEDN,"Prescriber ID")=%
"RTN","BPSOSCD",100,0)
 ;
"RTN","BPSOSCD",101,0)
 D:DRUGIEN'=""
"RTN","BPSOSCD",102,0)
 .S BPS("RX",MEDN,"Drug IEN")=DRUGIEN
"RTN","BPSOSCD",103,0)
 .S BPS("RX",MEDN,"Drug Name")=$$DRUGDIE^BPSUTIL(DRUGIEN,.01,"E")
"RTN","BPSOSCD",104,0)
 N PRICING S PRICING=^BPST(IEN59,5)
"RTN","BPSOSCD",105,0)
 S BPS("RX",MEDN,"Quantity")=$P(PRICING,U) ; 01/31/2001
"RTN","BPSOSCD",106,0)
 S BPS("RX",MEDN,"Unit Price")=$P(PRICING,U,2)
"RTN","BPSOSCD",107,0)
 S BPS("RX",MEDN,"Ingredient Cost")=$J($P(PRICING,U,2),0,2)
"RTN","BPSOSCD",108,0)
 S BPS("RX",MEDN,"Dispensing Fee")=$J($P(PRICING,U,4),0,2)
"RTN","BPSOSCD",109,0)
 S BPS("Site","Dispensing Fee")=BPS("RX",MEDN,"Dispensing Fee")
"RTN","BPSOSCD",110,0)
 I '$G(VARX) S BPS("RX",MEDN,"Gross Amount Due")=$J($P(PRICING,U,5),0,2) ;LJE;7/21/03
"RTN","BPSOSCD",111,0)
 S BPS("RX",MEDN,"Usual & Customary")=$J($P(PRICING,U,5),0,2)
"RTN","BPSOSCD",112,0)
 I $G(BPS("NCPDP","Add Disp. Fee to Ingr. Cost")) D  ;LJE;ADDED $G
"RTN","BPSOSCD",113,0)
 . N X S X=BPS("RX",MEDN,"Ingredient Cost")
"RTN","BPSOSCD",114,0)
 . S X=X+BPS("RX",MEDN,"Dispensing Fee")
"RTN","BPSOSCD",115,0)
 . S BPS("RX",MEDN,"Ingredient Cost")=X
"RTN","BPSOSCD",116,0)
 ;
"RTN","BPSOSCD",117,0)
 ; Visit-related data
"RTN","BPSOSCD",118,0)
 ;
"RTN","BPSOSCD",119,0)
 I IEN59 D
"RTN","BPSOSCD",120,0)
 . N VSITIEN S VSITIEN=$P(^BPST(IEN59,0),U,7)
"RTN","BPSOSCD",121,0)
 . Q:'VSITIEN
"RTN","BPSOSCD",122,0)
 Q
"RTN","BPSOSCD",123,0)
 ;
"RTN","BPSOSCD",124,0)
 ; $$RXRFN()
"RTN","BPSOSCD",125,0)
 ;Determine RX Refill Number based on prescription record
"RTN","BPSOSCD",126,0)
 ;  It's overly cautious about making sure that the refills are
"RTN","BPSOSCD",127,0)
 ;  counted in date filled order.
"RTN","BPSOSCD",128,0)
 ;
"RTN","BPSOSCD",129,0)
 ;Input Variables:    RXIEN    -  Prescription record IEN (52)
"RTN","BPSOSCD",130,0)
 ;                    RXRFIEN  -  Refill multiple IEN
"RTN","BPSOSCD",131,0)
 ;
"RTN","BPSOSCD",132,0)
 ;Function Returns:   Null  - Could not process request
"RTN","BPSOSCD",133,0)
 ;                    0     - Not a refill
"RTN","BPSOSCD",134,0)
 ;                    N     - Refill number
"RTN","BPSOSCD",135,0)
 ; Copied into here from BPSECD4 so we can remove BPSECD4 from kit.
"RTN","BPSOSCD",136,0)
 ; Also called from BPSOSN3
"RTN","BPSOSCD",137,0)
 ;----------------------------------------------------------------------
"RTN","BPSOSCD",138,0)
RXRFN(RXIEN,RXRFIEN) ;EP
"RTN","BPSOSCD",139,0)
 ;Manage local variables
"RTN","BPSOSCD",140,0)
 N COUNT,DATE,XIEN,STOP
"RTN","BPSOSCD",141,0)
 ;
"RTN","BPSOSCD",142,0)
 ;Make sure input variables are defined
"RTN","BPSOSCD",143,0)
 Q:$G(RXIEN)="" ""
"RTN","BPSOSCD",144,0)
 Q:$G(RXRFIEN)="" ""
"RTN","BPSOSCD",145,0)
 ;
"RTN","BPSOSCD",146,0)
 ;Initialize local variables
"RTN","BPSOSCD",147,0)
 S (COUNT,STOP)=0
"RTN","BPSOSCD",148,0)
 ;
"RTN","BPSOSCD",149,0)
 ;Loop through refill multiple by date
"RTN","BPSOSCD",150,0)
 S DATE=""
"RTN","BPSOSCD",151,0)
 F  D  Q:'+DATE!(STOP)
"RTN","BPSOSCD",152,0)
 .S DATE=$O(^PSRX(RXIEN,1,"B",DATE))
"RTN","BPSOSCD",153,0)
 .Q:'+DATE
"RTN","BPSOSCD",154,0)
 .;
"RTN","BPSOSCD",155,0)
 .;For each sub-record increment refill count
"RTN","BPSOSCD",156,0)
 .S XIEN=""
"RTN","BPSOSCD",157,0)
 .F  D  Q:'+XIEN!(STOP)
"RTN","BPSOSCD",158,0)
 ..S XIEN=$O(^PSRX(RXIEN,1,"B",DATE,XIEN))
"RTN","BPSOSCD",159,0)
 ..Q:'+XIEN
"RTN","BPSOSCD",160,0)
 ..S COUNT=COUNT+1
"RTN","BPSOSCD",161,0)
 ..;
"RTN","BPSOSCD",162,0)
 ..;STOP when you reach the refill record
"RTN","BPSOSCD",163,0)
 ..S:XIEN=RXRFIEN STOP=1
"RTN","BPSOSCD",164,0)
 Q $S(STOP=1:COUNT,1:0)
"RTN","BPSOSCD",165,0)
 ;
"RTN","BPSOSCD",166,0)
 ; Retrieve OVERRIDE nodes and put into BPS array
"RTN","BPSOSCD",167,0)
 ; They will be fetched from BPS("OVERRIDE"
"RTN","BPSOSCD",168,0)
 ; during low-level construction of the actual encoded claim packet.
"RTN","BPSOSCD",169,0)
 ;
"RTN","BPSOSCD",170,0)
OVERRIDE(IEN59,MEDN)    ; set any BPS("OVERRIDE" nodes from 9002313.511 data
"RTN","BPSOSCD",171,0)
 ; BPS("OVERRIDE",field)=value  for fields 101-401
"RTN","BPSOSCD",172,0)
 ; BPS("OVERRIDE","RX",MEDN,field) for med #N, fields 402+
"RTN","BPSOSCD",173,0)
 ; Note that if you have multiple prescriptions bundled, the
"RTN","BPSOSCD",174,0)
 ; union of overrides from 101-401 apply to all; and if there's a 
"RTN","BPSOSCD",175,0)
 ; conflict, the last one overwrites the previous ones.
"RTN","BPSOSCD",176,0)
 N IEN511 S IEN511=$P(^BPST(IEN59,1),U,13) Q:'IEN511
"RTN","BPSOSCD",177,0)
 N RETVAL S RETVAL=$$GET511^BPSOSO2(IEN511,"BPS(""OVERRIDE"")","BPS(""OVERRIDE"",""RX"","_MEDN_")")
"RTN","BPSOSCD",178,0)
CC Q
"RTN","BPSOSCD",179,0)
 ;
"RTN","BPSOSCD",180,0)
DURVALUE(IEN59,MEDN)         ;IHS/SD/lwj 8/20/02 NCPDP 5.1 changes
"RTN","BPSOSCD",181,0)
 ; This subroutine will read in the DUR data from the DUR multiple
"RTN","BPSOSCD",182,0)
 ; in BPS Transactions and store the values into BPS("RX",MEDN,DUR,....)
"RTN","BPSOSCD",183,0)
 ;
"RTN","BPSOSCD",184,0)
 ; (NOTE - unlike most values, these fields are stored by their
"RTN","BPSOSCD",185,0)
 ; field number.  Since they are repeating, it will ease the 
"RTN","BPSOSCD",186,0)
 ; retrieval of them, when we populate the claim.)
"RTN","BPSOSCD",187,0)
 ;
"RTN","BPSOSCD",188,0)
 N DUR,DCNT,DURREC
"RTN","BPSOSCD",189,0)
 ;
"RTN","BPSOSCD",190,0)
 S (DUR,DCNT)=0
"RTN","BPSOSCD",191,0)
 F  S DCNT=$O(^BPST(IEN59,13,DCNT)) Q:'+DCNT  D
"RTN","BPSOSCD",192,0)
 . S DURREC=$G(^BPST(IEN59,13,DCNT,0))
"RTN","BPSOSCD",193,0)
 . I DURREC="" Q
"RTN","BPSOSCD",194,0)
 . S DUR=DUR+1
"RTN","BPSOSCD",195,0)
 . S BPS("RX",MEDN,"DUR",DUR,473)=DUR  ;dur/pps cntr
"RTN","BPSOSCD",196,0)
 . S BPS("RX",MEDN,"DUR",DUR,439)=$P(DURREC,U,2) ;Reason Srv Cd
"RTN","BPSOSCD",197,0)
 . S BPS("RX",MEDN,"DUR",DUR,440)=$P(DURREC,U,3) ;Prof Srv Cd
"RTN","BPSOSCD",198,0)
 . S BPS("RX",MEDN,"DUR",DUR,441)=$P(DURREC,U,4) ;Result Src Cd
"RTN","BPSOSCD",199,0)
 . S BPS("RX",MEDN,"DUR",DUR,474)=""             ;Level of Effort
"RTN","BPSOSCD",200,0)
 . S BPS("RX",MEDN,"DUR",DUR,475)=""             ;Co-agent Qual
"RTN","BPSOSCD",201,0)
 . S BPS("RX",MEDN,"DUR",DUR,476)=""             ;Co-agent ID
"RTN","BPSOSCD",202,0)
 ;
"RTN","BPSOSCD",203,0)
 Q
"RTN","BPSOSI")
0^10^B32863307
"RTN","BPSOSI",1,0)
BPSOSI ;BHAM ISC/FCS/DRS/DLF - Data entry w/ScreenMan ;06/01/2004
"RTN","BPSOSI",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSOSI",3,0)
 ; This calls ScreenMan for an entry in file 9002313.51
"RTN","BPSOSI",4,0)
ALL ; This entry point does data entry and submits the claims, both.
"RTN","BPSOSI",5,0)
 ; This is what we'll call from the ListManager menu.
"RTN","BPSOSI",6,0)
 W !,"The NEW option will be available in a future patch."  H 2 Q  ;LJE
"RTN","BPSOSI",7,0)
 DO FULL^VALM1 ; List manager had set scroll regions
"RTN","BPSOSI",8,0)
 I $$OLDSTYLE G ^BPSOSIV
"RTN","BPSOSI",9,0)
ALL1 ;EP - BPSOSIV branches back here if user decides he wants Screenman
"RTN","BPSOSI",10,0)
 N INPUTIEN S INPUTIEN=$$NEW
"RTN","BPSOSI",11,0)
 I INPUTIEN D
"RTN","BPSOSI",12,0)
 . D FULL^VALM1 ; full screen - we might do I/O
"RTN","BPSOSI",13,0)
 . D FILE^BPSOSIZ(INPUTIEN) ; send them to ECME or to paper
"RTN","BPSOSI",14,0)
 . N NODISPLY S NODISPLY=1 D UPD^BPSOS6A ; so your new claims show up
"RTN","BPSOSI",15,0)
 . N % W ! R %:1
"RTN","BPSOSI",16,0)
 E  D
"RTN","BPSOSI",17,0)
 . W "Because of <PF1> Q,",!
"RTN","BPSOSI",18,0)
 . W "These charges and claims are NOT filed and processed.",!
"RTN","BPSOSI",19,0)
 . W ! R %:3
"RTN","BPSOSI",20,0)
 W !
"RTN","BPSOSI",21,0)
 S VALMBCK="R" ; tell List Manager to Refresh
"RTN","BPSOSI",22,0)
 Q
"RTN","BPSOSI",23,0)
 ;
"RTN","BPSOSI",24,0)
 ; Usually, for a new input session, $$NEW^BPSOSI 
"RTN","BPSOSI",25,0)
 ;   It returns the IEN of the session
"RTN","BPSOSI",26,0)
 ;
"RTN","BPSOSI",27,0)
 ; D ^BPSOSI -> TEST^BPSOSI  for testing and development
"RTN","BPSOSI",28,0)
 ;
"RTN","BPSOSI",29,0)
 ; If you need to edit an existing session, $$MYSCREEN^BPSOSI(IEN)
"RTN","BPSOSI",30,0)
 ; That's probably not going to be used, but it's here if you need it.
"RTN","BPSOSI",31,0)
 ;
"RTN","BPSOSI",32,0)
 Q
"RTN","BPSOSI",33,0)
NEW() ;EP - from BPSOSI
"RTN","BPSOSI",34,0)
 Q $$MYSCREEN(-1)
"RTN","BPSOSI",35,0)
 Q
"RTN","BPSOSI",36,0)
MYSCREEN(DA)       ; returns IEN of input if <PF1>E (or the equivalent) was used
"RTN","BPSOSI",37,0)
 ; if the user quits out (<PF1>Q or the equivalent), returns 0^IEN
"RTN","BPSOSI",38,0)
 N DDSFILE,DR,DDSPAGE,DDSPARM
"RTN","BPSOSI",39,0)
 N DDSCHANG,DDSSAVE,DIMSG,DTOUT,RETVAL
"RTN","BPSOSI",40,0)
 S DDSFILE=9002313.51 ; PEC/MIS INPUT file
"RTN","BPSOSI",41,0)
 S DR="[BPS INPUT 1]"
"RTN","BPSOSI",42,0)
 I DA'>0 D
"RTN","BPSOSI",43,0)
 . S DA=$$NEWREC(,,2)
"RTN","BPSOSI",44,0)
 . S RETVAL=$$INIT(DA)
"RTN","BPSOSI",45,0)
 S DDSPARM="CS"
"RTN","BPSOSI",46,0)
 D ^DDS
"RTN","BPSOSI",47,0)
 I $G(DDSSAVE) Q DA
"RTN","BPSOSI",48,0)
 E  Q 0_U_DA
"RTN","BPSOSI",49,0)
TEST ;
"RTN","BPSOSI",50,0)
 W "NEW^BPSOSI returns ",$$NEW^BPSOSI
"RTN","BPSOSI",51,0)
 W "Outputs:",!
"RTN","BPSOSI",52,0)
 D ZWRITE^BPSOS("DDSCHANG","DDSSAVE","DIMSG","DTOUT")
"RTN","BPSOSI",53,0)
 D GL
"RTN","BPSOSI",54,0)
 Q DA
"RTN","BPSOSI",55,0)
ISEMPTY(DA)        ; true if PRESCRIPTIONS multiple count >0, false if not
"RTN","BPSOSI",56,0)
 Q $P($G(^BPS(9002313.51,DA,2,0)),U,4)>0
"RTN","BPSOSI",57,0)
FN() Q 9002313.51
"RTN","BPSOSI",58,0)
FNPRESC()          Q 9002313.512
"RTN","BPSOSI",59,0)
FNINS() Q 9002313.522
"RTN","BPSOSI",60,0)
NEWREC(NMULT,NINS,ORIGIN) ;EP - from BPSOSIV - a new PEC/MIS INPUT record
"RTN","BPSOSI",61,0)
 ; NMULT = how many multiples to initialize (opt, defaults to 9)
"RTN","BPSOSI",62,0)
 ; NINS = how many insurance lines to init for each one (opt, def to 5)
"RTN","BPSOSI",63,0)
 ; ORIGIN = pointer to 9002313.516
"RTN","BPSOSI",64,0)
 N FDA,IEN,MSG,FN,NEW S FN=$$FN,NEW="+999999,"
"RTN","BPSOSI",65,0)
 N FNPRESC,FNINS S FNPRESC=$$FNPRESC,FNINS=$$FNINS
"RTN","BPSOSI",66,0)
 S FDA(FN,NEW,.01)="NOW"
"RTN","BPSOSI",67,0)
 S FDA(FN,NEW,.03)=$P(^BPS(9002313.516,ORIGIN,0),U)
"RTN","BPSOSI",68,0)
 N I F I=1000:1000:1000*$S($D(NMULT):NMULT,1:9) D
"RTN","BPSOSI",69,0)
 . N X S X="+"_I_","_NEW
"RTN","BPSOSI",70,0)
 . S FDA(FNPRESC,X,.01)=I/1000
"RTN","BPSOSI",71,0)
 . N J F J=1:1:$S($D(NINS):NINS,1:5) D
"RTN","BPSOSI",72,0)
 . . S FDA(FNINS,"+"_(I+J)_","_X,.01)=J
"RTN","BPSOSI",73,0)
 . . ; ex:          +3002,+3000,+999999, for 2nd ins in 3rd presc
"RTN","BPSOSI",74,0)
 N STOP F  D  Q:STOP
"RTN","BPSOSI",75,0)
 . D UPDATE^DIE("E","FDA","IEN","MSG")
"RTN","BPSOSI",76,0)
 . I '$D(MSG),$G(IEN(999999)) S STOP=1 Q
"RTN","BPSOSI",77,0)
 . D ZWRITE^BPSOS("MSG","IEN")
"RTN","BPSOSI",78,0)
 . S STOP='$$IMPOSS^BPSOSUE("FM","TRI","UPDATE^DIE failed",,"NEWREC",$T(+0))
"RTN","BPSOSI",79,0)
 Q IEN(999999)
"RTN","BPSOSI",80,0)
INIT(IEN) ;EP - from BPSOSIV - initialize record IEN
"RTN","BPSOSI",81,0)
 N FDA,MSG,FN S FN=$$FN,IEN=IEN_","
"RTN","BPSOSI",82,0)
 S FDA(FN,IEN,.02)=$G(MOREDATA("USER"))              ; User
"RTN","BPSOSI",83,0)
 S FDA(FN,IEN,3.01)=$G(MOREDATA("RX ACTION"))        ; RX Action (value passed into BPSNCPDP)
"RTN","BPSOSI",84,0)
 S FDA(FN,IEN,3.02)=$G(MOREDATA("DATE OF SERVICE"))  ; DOS (Fill Date passed into BPSNCPDP)
"RTN","BPSOSI",85,0)
 S FDA(FN,IEN,1.13)=$G(MOREDATA("BPOVRIEN"))         ; NCPDP OVERRIDE (value passed into BPSNCPDP)
"RTN","BPSOSI",86,0)
 D
"RTN","BPSOSI",87,0)
 . N ARR,I,Y
"RTN","BPSOSI",88,0)
 . D GET515($G(MOREDATA("USER")),.ARR) ; get this user's settings, apply defaults
"RTN","BPSOSI",89,0)
 . S Y=$G(ARR(1)) ; we're interested in the ASK ones in the 1 subscript
"RTN","BPSOSI",90,0)
 . F I=1:1:4 I $P(Y,U,I)="" S $P(Y,U,I)=0 ; defaults for default
"RTN","BPSOSI",91,0)
 . F I=1:1:4 S FDA(FN,IEN,I/100+1)=$P(Y,U,I) ; ASK INS, etc.
"RTN","BPSOSI",92,0)
 . S Y=$G(ARR(100)) ; and in the 100 subscript,
"RTN","BPSOSI",93,0)
 . ; piece 1 - should we default the NDC # - the default default is YES
"RTN","BPSOSI",94,0)
 . ; defaults for the default
"RTN","BPSOSI",95,0)
 . F I=1:1:1 I $P(Y,U,I)="" S $P(Y,U,I)=$S(I=1:1,1:0)
"RTN","BPSOSI",96,0)
 . F I=1:1:1 S FDA(FN,IEN,I/100+100)=$P(Y,U,I)
"RTN","BPSOSI",97,0)
 N STOP F  D  Q:STOP
"RTN","BPSOSI",98,0)
 . D FILE^DIE("","FDA","MSG")
"RTN","BPSOSI",99,0)
 . I '$D(MSG) S STOP=1 Q
"RTN","BPSOSI",100,0)
 . D ZWRITE^BPSOS("MSG")
"RTN","BPSOSI",101,0)
 . S STOP='$$IMPOSS^BPSOSUE("FM","TRI","FILE^DIE failed",,"INIT",$T(+0))
"RTN","BPSOSI",102,0)
 Q '$D(MSG)  ;='0=1 if success, ='nonzero=0 if failure
"RTN","BPSOSI",103,0)
DELALL ; delete all records ; good for testing
"RTN","BPSOSI",104,0)
 N FN S FN=$$FN I FN'=9002313.51 D  Q  ; must be that file
"RTN","BPSOSI",105,0)
 . D IMPOSS^BPSOSUE("P","TI",,,"DELALL",$T(+0))
"RTN","BPSOSI",106,0)
 W !,"Deleting all records from file ",FN
"RTN","BPSOSI",107,0)
 N IEN F  S IEN=$O(^BPS(FN,0)) Q:'IEN  Q:'$$DELETE(IEN)  W "."
"RTN","BPSOSI",108,0)
 W ! D GL
"RTN","BPSOSI",109,0)
 Q
"RTN","BPSOSI",110,0)
GL ; quickie global list good for testing
"RTN","BPSOSI",111,0)
 N FN S FN=$$FN
"RTN","BPSOSI",112,0)
 N X M X=^BPS(FN)
"RTN","BPSOSI",113,0)
 D ZWRITE^BPSOS("X")
"RTN","BPSOSI",114,0)
 Q
"RTN","BPSOSI",115,0)
DELETE(IEN)        ; delete record IEN
"RTN","BPSOSI",116,0)
 N FDA,MSG,FN S FN=$$FN,IEN=IEN_","
"RTN","BPSOSI",117,0)
 S FDA(FN,IEN,.01)="@"
"RTN","BPSOSI",118,0)
 D FILE^DIE("E","FDA","MSG")
"RTN","BPSOSI",119,0)
 I $D(MSG) D ZWRITE^BPSOS("MSG")
"RTN","BPSOSI",120,0)
 I $D(MSG) Q 0
"RTN","BPSOSI",121,0)
 Q 1
"RTN","BPSOSI",122,0)
GENINSTR ; general instructions, in the FORM-level pre-action for Block 2C
"RTN","BPSOSI",123,0)
 N AR
"RTN","BPSOSI",124,0)
 S AR(1)="Use   <PF1> E   to SUBMIT the claims"
"RTN","BPSOSI",125,0)
 S AR(1)=AR(1)_",    <PF1> Q to QUIT and cancel"
"RTN","BPSOSI",126,0)
 D HLP^DDSUTL(.AR)
"RTN","BPSOSI",127,0)
 Q
"RTN","BPSOSI",128,0)
OLDSTYLE()         ; return true if DUZ wants old style input
"RTN","BPSOSI",129,0)
 ; if this user has a specific setting, go with it
"RTN","BPSOSI",130,0)
 N X D GET515(DUZ,.X)
"RTN","BPSOSI",131,0)
 Q $P($G(X(0)),U,3)
"RTN","BPSOSI",132,0)
GET515(USER,DEST) ;EP - from BPSOSIV ; call as GET515(USER,.DESTINATION)
"RTN","BPSOSI",133,0)
 ; where .DESTINATION is undefined coming in.
"RTN","BPSOSI",134,0)
 ; set DEST(*) = copy of the .515 in effect,
"RTN","BPSOSI",135,0)
 ; with defaults overlaid as needed
"RTN","BPSOSI",136,0)
 I $G(USER)="" Q
"RTN","BPSOSI",137,0)
 I $D(DEST) D  Q
"RTN","BPSOSI",138,0)
 . D IMPOSS^BPSOSUE("P","TI",,,"GET515",$T(+0))
"RTN","BPSOSI",139,0)
 D GET515A(USER,.DEST)
"RTN","BPSOSI",140,0)
 I $P($G(DEST(0)),U,2) D  ; if this user inherits from another, 
"RTN","BPSOSI",141,0)
 . N ARR
"RTN","BPSOSI",142,0)
 . D GET515A(USER,.ARR) ; then get that user's settings
"RTN","BPSOSI",143,0)
 . D GET515B(.DEST,.ARR) ; fill in any that need defaults
"RTN","BPSOSI",144,0)
 D
"RTN","BPSOSI",145,0)
 . N ARR
"RTN","BPSOSI",146,0)
 . D GET515A(1,.ARR) ; likewise, inherit from user #1
"RTN","BPSOSI",147,0)
 . D GET515B(.DEST,.ARR)
"RTN","BPSOSI",148,0)
 Q
"RTN","BPSOSI",149,0)
GET515A(USER,DEST) ; grab copy of the record for this user
"RTN","BPSOSI",150,0)
 N IEN S IEN=$O(^BPS(9002313.515,"B",USER,0)) Q:'IEN
"RTN","BPSOSI",151,0)
 M DEST=^BPS(9002313.515,IEN) ; DEST(0), DEST(1), etc. are set now
"RTN","BPSOSI",152,0)
 Q
"RTN","BPSOSI",153,0)
GET515B(A,B)       ; fill in defaults in A as needed, from B
"RTN","BPSOSI",154,0)
 N X,Y,I,S S S=""
"RTN","BPSOSI",155,0)
 F  S S=$O(B(S)) Q:S=""  D
"RTN","BPSOSI",156,0)
 . S X=B(S) F I=1:1:$L(X,U) S Y=$P(X,U,I) I Y]"" D
"RTN","BPSOSI",157,0)
 . . I $P($G(A(S)),U,I)="" S $P(A(S),U,I)=Y ; not def, so fill default
"RTN","BPSOSI",158,0)
 Q
"RTN","BPSOSIY")
0^11^B63767272
"RTN","BPSOSIY",1,0)
BPSOSIY ;BHAM ISC/FCS/DRS/DLF - Filing with .51,.59 ;06/01/2004
"RTN","BPSOSIY",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSOSIY",3,0)
 Q
"RTN","BPSOSIY",4,0)
IEN59() ;EP - given INPUT(), what should we use for an IEN in file 9002313.59?
"RTN","BPSOSIY",5,0)
 N RXI,RET
"RTN","BPSOSIY",6,0)
 S RXI=$P(INPUT(1),U)
"RTN","BPSOSIY",7,0)
 I RXI D
"RTN","BPSOSIY",8,0)
 . S RXR=$P(INPUT(1),U,2)
"RTN","BPSOSIY",9,0)
 . I RXR>9000 D
"RTN","BPSOSIY",10,0)
 . . D IMPOSS^BPSOSUE("DB","TI","Refill number near overflow point","RXI="_RXI,"IEN59",$T(+0))
"RTN","BPSOSIY",11,0)
 . ; you can raise the limit and be thinking of how to get around it
"RTN","BPSOSIY",12,0)
 . S RET=RXI_"."_$TR($J(RXR,4)," ","0")
"RTN","BPSOSIY",13,0)
 . S RET=RET_$S($P(INPUT(0),U,3)?1"POSTAGE".E:2,1:1)
"RTN","BPSOSIY",14,0)
 E  D
"RTN","BPSOSIY",15,0)
 . N VIS,CPT S VIS=$P(INPUT(1),U,6),CPT=$P(INPUT(1),U,8)
"RTN","BPSOSIY",16,0)
 . I 'VIS D  ; visit IEN, must not be zero
"RTN","BPSOSIY",17,0)
 . . D IMPOSS^BPSOSUE("P","TI","Visit IEN missing; should have been detected by now",,"IEN59",$T(+0))
"RTN","BPSOSIY",18,0)
 . . S VIS="MISSING"
"RTN","BPSOSIY",19,0)
 . I 'CPT D  ; CPT IEN, must not be zero
"RTN","BPSOSIY",20,0)
 . . D IMPOSS^BPSOSUE("P","TI","CPT IEN missing; should have been detected by now",,"IEN59",$T(+0))
"RTN","BPSOSIY",21,0)
 . . S CPT="MISSING"
"RTN","BPSOSIY",22,0)
 . S RET=VIS_"."_$TR($J(CPT,6)," ","0")_3
"RTN","BPSOSIY",23,0)
 Q RET
"RTN","BPSOSIY",24,0)
SETUP59(IEN51,IEN59,ORIGIN) ;EP - from BPSOSIZ
"RTN","BPSOSIY",25,0)
 ;You don't have to set null fields, so long as you have called
"RTN","BPSOSIY",26,0)
 ;CLEAR, or if this is a NEW entry.
"RTN","BPSOSIY",27,0)
 ;INPUT is defined in FILE1^BPSOSIZ
"RTN","BPSOSIY",28,0)
 N FLAGS,FDA,MSG,FN,REC,X,I,VARX,TYPE
"RTN","BPSOSIY",29,0)
 S VARX=0
"RTN","BPSOSIY",30,0)
 I '$P($G(^BPS(9002313.99,1,"SITE TYPE")),"^",1) S VARX=1
"RTN","BPSOSIY",31,0)
 S FN=9002313.59,REC=IEN59_","
"RTN","BPSOSIY",32,0)
 ;TYPE = 1 for prescription, = 2 for mailing prescription,
"RTN","BPSOSIY",33,0)
 ;     = 3 for non-prescription items
"RTN","BPSOSIY",34,0)
 S TYPE=$E(IEN59,$L(IEN59))
"RTN","BPSOSIY",35,0)
 S FDA(FN,REC,.13)=TYPE
"RTN","BPSOSIY",36,0)
 S FDA(FN,REC,.14)=ORIGIN
"RTN","BPSOSIY",37,0)
 S FDA(FN,REC,1)=0 ; STATUS - waiting to start
"RTN","BPSOSIY",38,0)
 ;Field 1.06 - copied from field 701, below
"RTN","BPSOSIY",39,0)
 S FDA(FN,REC,1.08)=1 ; PINS piece
"RTN","BPSOSIY",40,0)
 I TYPE=1!(TYPE=2) S FDA(FN,REC,1.11)=$P(INPUT(1),U) ; RXI
"RTN","BPSOSIY",41,0)
 I $P($G(^BPST(IEN59,1)),U,12)=1 S FDA(FN,REC,1.12)=2  ; Resubmit after reversal
"RTN","BPSOSIY",42,0)
 S FDA(FN,REC,1.13)=$P($G(^BPS(9002313.51,IEN51,1)),U,13)   ; NCPDP OVERRIDES
"RTN","BPSOSIY",43,0)
 S X=$G(^BPS(9002313.51,IEN51,3))
"RTN","BPSOSIY",44,0)
 S FDA(FN,REC,1201)=$P(X,"^",1)                             ; RX Action
"RTN","BPSOSIY",45,0)
 S FDA(FN,REC,1202)=$P(X,"^",2)                             ; Date of Service
"RTN","BPSOSIY",46,0)
 S FDA(FN,REC,13)=$P($G(^BPS(9002313.51,IEN51,0)),"^",2)    ; User
"RTN","BPSOSIY",47,0)
 ;
"RTN","BPSOSIY",48,0)
 ;IHS/SD/lwj 8/30/02 NCPDP 5.1 changes
"RTN","BPSOSIY",49,0)
 ;the prior authorization code is now two fields - type and number
"RTN","BPSOSIY",50,0)
 ;begin changes to capture both values
"RTN","BPSOSIY",51,0)
 ;
"RTN","BPSOSIY",52,0)
 I $D(INPUT(2)),$P(INPUT(2),U,2)]"" D
"RTN","BPSOSIY",53,0)
 . S FDA(FN,REC,1.09)=$P(INPUT(2),U)    ; prior authorization number 
"RTN","BPSOSIY",54,0)
 . S FDA(FN,REC,1.15)=$P(INPUT(2),U,2)  ; prior auth type code 
"RTN","BPSOSIY",55,0)
 ;
"RTN","BPSOSIY",56,0)
 ;IHS/SD/lwj 8/30/02 end NCPDP 5.1 prior authorization changes
"RTN","BPSOSIY",57,0)
 ;
"RTN","BPSOSIY",58,0)
 S FDA(FN,REC,5)=$P(INPUT(1),U,4) ; Patient
"RTN","BPSOSIY",59,0)
 S FDA(FN,REC,7)=$$NOW ; LAST UPDATE
"RTN","BPSOSIY",60,0)
 S FDA(FN,REC,9)=$P(INPUT(1),U,2) ; RXR - refill index
"RTN","BPSOSIY",61,0)
 I TYPE=1 S FDA(FN,REC,10)=$P(INPUT(0),U,3) ; NDC
"RTN","BPSOSIY",62,0)
 I TYPE=1&(VARX) S FDA(FN,REC,10)=$P($G(INPUT(9)),"^",8)  ;LJE
"RTN","BPSOSIY",63,0)
 I TYPE=1!(TYPE=2) S FDA(FN,REC,12)=$P(INPUT(1),U,6) ; Visit
"RTN","BPSOSIY",64,0)
 S FDA(FN,REC,15)=FDA(FN,REC,7) ; START TIME
"RTN","BPSOSIY",65,0)
 F I=1:1:6 S X=$P($G(INPUT(5)),U,I) I X]"" S FDA(FN,REC,500+I)=X
"RTN","BPSOSIY",66,0)
 I $G(INPUT(6))]""!($G(INPUT(7))]"") D
"RTN","BPSOSIY",67,0)
 . F I=1:1:3 D
"RTN","BPSOSIY",68,0)
 . . I $P(INPUT(6),U,I)]"" S FDA(FN,REC,600+I)=$P($G(INPUT(6)),U,I)
"RTN","BPSOSIY",69,0)
 . . I $P(INPUT(7),U,I)]"" S FDA(FN,REC,700+I)=$P($G(INPUT(7)),U,I)
"RTN","BPSOSIY",70,0)
 I $D(FDA(FN,REC,701)) D
"RTN","BPSOSIY",71,0)
 . S FDA(FN,REC,1.06)=FDA(FN,REC,701) ; INSURER
"RTN","BPSOSIY",72,0)
 ;500's, 600's, 700's done above
"RTN","BPSOSIY",73,0)
 ; 
"RTN","BPSOSIY",74,0)
 ;LJE;6/26/03; Set initial insurance to work with
"RTN","BPSOSIY",75,0)
 I $D(INPUT(8)) D
"RTN","BPSOSIY",76,0)
 . S FDA(FN,REC,901)=1  ;first insurance ien
"RTN","BPSOSIY",77,0)
 . S FDA(FN,REC,504)=$P($G(INPUT(9)),"^",1)  ;DISPENSE FEE
"RTN","BPSOSIY",78,0)
 . S FDA(FN,REC,505)=$P($G(INPUT(9)),"^",3)  ;GROSS AMOUNT DUE/USUAL & CUSTOMARY
"RTN","BPSOSIY",79,0)
 . S FDA(FN,REC,507)=$P($G(INPUT(9)),"^",5)  ;ADMINISTRATIVE FEE
"RTN","BPSOSIY",80,0)
 . S FDA(FN,REC,501)=$P($G(INPUT(9)),"^",6)  ;Drug QUANTITY
"RTN","BPSOSIY",81,0)
 . S FDA(FN,REC,502)=$P($G(INPUT(9)),"^",7)  ;INGREDIENT COST
"RTN","BPSOSIY",82,0)
 . S FDA(FN,REC,10)=$P($G(INPUT(9)),"^",8)   ;NDC - last NDC billed for this drug
"RTN","BPSOSIY",83,0)
 I FDA(FN,REC,10)'["-" S FDA(FN,REC,10)=$E(FDA(FN,REC,10),1,5)_"-"_$E(FDA(FN,REC,10),6,9)_"-"_$E(FDA(FN,REC,10),10,11)
"RTN","BPSOSIY",84,0)
 ;
"RTN","BPSOSIY",85,0)
 D FILE^DIE("","FDA","MSG") ; NO "E" FLAG - DATA IS IN INTERNAL FORMAT!
"RTN","BPSOSIY",86,0)
 ;
"RTN","BPSOSIY",87,0)
 ;LJE;6/24/03;Added VA sets to .59 file; continuing sets throughout process in order to
"RTN","BPSOSIY",88,0)
 ;                       ; not lose any data should an error occur.
"RTN","BPSOSIY",89,0)
 ;
"RTN","BPSOSIY",90,0)
 S VA59IEN="+1,"
"RTN","BPSOSIY",91,0)
 S ISTHERE="",ISTHERE=$$GET1^DIQ(9002313.59902,"1,"_REC_",",".01","","","MSG")
"RTN","BPSOSIY",92,0)
 I ISTHERE'=""&('$D(MSG)) S VA59IEN="1,"
"RTN","BPSOSIY",93,0)
 K MSG
"RTN","BPSOSIY",94,0)
 S FN=9002313.59902
"RTN","BPSOSIY",95,0)
 ;Note: The INPUT array is from 8 and 9 node of 9002313.51 and the FDA array is for the 10 node of 9002313.59
"RTN","BPSOSIY",96,0)
 ;Create/edit the multiple  The Plan ID is in internal format.
"RTN","BPSOSIY",97,0)
 I $D(INPUT(8)) D
"RTN","BPSOSIY",98,0)
 . S FDA(FN,VA59IEN_REC,.01)=$P($G(INPUT(8)),"^",1)               ;PLAN ID
"RTN","BPSOSIY",99,0)
 . I VA59IEN'["+" D FILE^DIE("","FDA","MSG")
"RTN","BPSOSIY",100,0)
 . I VA59IEN["+"  D UPDATE^DIE("","FDA","VAIEN","MSG")
"RTN","BPSOSIY",101,0)
 . ; 
"RTN","BPSOSIY",102,0)
 . ;Include the rest of the fields, which are in external format
"RTN","BPSOSIY",103,0)
 . S VA59IEN="1,"
"RTN","BPSOSIY",104,0)
 . S FDA(FN,VA59IEN_REC,902.03)=$P($G(INPUT(8)),"^",2)            ;BIN
"RTN","BPSOSIY",105,0)
 . S FDA(FN,VA59IEN_REC,902.04)=$P($G(INPUT(8)),"^",3)            ;PCN
"RTN","BPSOSIY",106,0)
 . S FDA(FN,VA59IEN_REC,902.02)=$P($G(INPUT(8)),"^",4)            ;PAYER SHEET IEN 
"RTN","BPSOSIY",107,0)
 . S FDA(FN,VA59IEN_REC,902.05)=$P($G(INPUT(8)),"^",5)            ;GROUP ID
"RTN","BPSOSIY",108,0)
 . S FDA(FN,VA59IEN_REC,902.06)=$P($G(INPUT(8)),"^",6)            ;CARDHOLDER ID
"RTN","BPSOSIY",109,0)
 . S FDA(FN,VA59IEN_REC,902.07)=$P($G(INPUT(8)),"^",7)            ;PATIENT RELATIONSHIP CODE
"RTN","BPSOSIY",110,0)
 . S FDA(FN,VA59IEN_REC,902.08)=$P($P($G(INPUT(8)),"^",8)," ")    ;CARDHOLDER FIRST NAME
"RTN","BPSOSIY",111,0)
 . S FDA(FN,VA59IEN_REC,902.09)=$P($G(INPUT(8)),"^",9)            ;CARDHOLDER LAST NAME
"RTN","BPSOSIY",112,0)
 . S FDA(FN,VA59IEN_REC,902.11)=$P($G(INPUT(8)),"^",10)           ;HOME PLAN STATE
"RTN","BPSOSIY",113,0)
 . S FDA(FN,VA59IEN_REC,902.18)=$P($G(INPUT(8)),"^",13)           ;Software/Vendor Cert ID
"RTN","BPSOSIY",114,0)
 . S FDA(FN,VA59IEN_REC,902.19)=$P($G(INPUT(8)),"^",11)           ;B2 PAYER SHEET REVERSAL
"RTN","BPSOSIY",115,0)
 . S FDA(FN,VA59IEN_REC,902.21)=$P($G(INPUT(8)),"^",12)           ;B3 PAYER SHEET REBILL
"RTN","BPSOSIY",116,0)
 . S FDA(FN,VA59IEN_REC,902.22)=$P($G(INPUT(8)),"^",16)           ;CERTIFY MODE
"RTN","BPSOSIY",117,0)
 . S FDA(FN,VA59IEN_REC,902.23)=$P($G(INPUT(8)),"^",15)           ;CERTIFICATION IEN TO USE FROM 9002313.31
"RTN","BPSOSIY",118,0)
 . S FDA(FN,VA59IEN_REC,902.24)=$P($G(INPUT(8)),"^",14)           ;PLAN NAME
"RTN","BPSOSIY",119,0)
 . S FDA(FN,VA59IEN_REC,902.12)=$P($G(INPUT(9)),"^",1)            ;DISPENSE FEE
"RTN","BPSOSIY",120,0)
 . S FDA(FN,VA59IEN_REC,902.13)=$P($G(INPUT(9)),"^",2)            ;BASIS OF COST DETERMINATION
"RTN","BPSOSIY",121,0)
 . S FDA(FN,VA59IEN_REC,902.14)=$P($G(INPUT(9)),"^",3)            ;USUAL & CUSTOMARY CHARGE
"RTN","BPSOSIY",122,0)
 . S FDA(FN,VA59IEN_REC,902.15)=$P($G(INPUT(9)),"^",4)            ;GROSS AMOUNT DUE
"RTN","BPSOSIY",123,0)
 . S FDA(FN,VA59IEN_REC,902.16)=$P($G(INPUT(9)),"^",5)            ;ADMINISTRATIVE FEE
"RTN","BPSOSIY",124,0)
 . S FDA(FN,VA59IEN_REC,902.17)=$P($G(INPUT(9)),"^",9)            ;FILL NUMBER
"RTN","BPSOSIY",125,0)
 . S FDA(FN,VA59IEN_REC,902.25)=$P($G(INPUT(10)),"^",1)           ;GROUP NAME
"RTN","BPSOSIY",126,0)
 . S FDA(FN,VA59IEN_REC,902.26)=$P($G(INPUT(10)),"^",2)           ;INSURANCE CO PHONE #
"RTN","BPSOSIY",127,0)
 . S FDA(FN,VA59IEN_REC,902.27)=$P($G(INPUT(10)),"^",3)           ;PHARMACY PLAN IEN
"RTN","BPSOSIY",128,0)
 . ;File the data
"RTN","BPSOSIY",129,0)
 . D FILE^DIE("E","FDA","MSG")
"RTN","BPSOSIY",130,0)
 ;
"RTN","BPSOSIY",131,0)
 ;Store DUR multiple if it exists
"RTN","BPSOSIY",132,0)
 I +$P($G(^BPS(9002313.51,IEN51,4,0)),U,4) D
"RTN","BPSOSIY",133,0)
 . K FDA
"RTN","BPSOSIY",134,0)
 . N DUR,DURREC,IENS
"RTN","BPSOSIY",135,0)
 . S FN=9002313.5913,DUR=0
"RTN","BPSOSIY",136,0)
 . F  S DUR=$O(^BPS(9002313.51,IEN51,4,DUR)) Q:+DUR=0  D
"RTN","BPSOSIY",137,0)
 .. S DURREC=$G(^BPS(9002313.51,IEN51,4,DUR,0))
"RTN","BPSOSIY",138,0)
 .. S IENS="+1,"_REC,IENS(1)=DUR
"RTN","BPSOSIY",139,0)
 .. S FDA(FN,IENS,.01)=$P(DURREC,U,1)  ; DUR Counter
"RTN","BPSOSIY",140,0)
 .. S FDA(FN,IENS,1)=$P(DURREC,U,2)    ; DUR Professional Service Code
"RTN","BPSOSIY",141,0)
 .. S FDA(FN,IENS,2)=$P(DURREC,U,3)    ; DUR Reason for Service Code
"RTN","BPSOSIY",142,0)
 .. S FDA(FN,IENS,3)=$P(DURREC,U,4)    ; DUR Result of Service Code
"RTN","BPSOSIY",143,0)
 . I $D(FDA) D UPDATE^DIE("","FDA","IENS","MSG")
"RTN","BPSOSIY",144,0)
 ;
"RTN","BPSOSIY",145,0)
 S FN=9002313.59 ; SET IT BACK TO ORIGINAL, JUST IN CASE
"RTN","BPSOSIY",146,0)
 K ISTHERE,VA59IEN
"RTN","BPSOSIY",147,0)
 Q $S($D(MSG):0,1:1)
"RTN","BPSOSIY",148,0)
ACTIVEWT(IEN59,IEN51,IEN512) ;EP - from BPSOSIZ
"RTN","BPSOSIY",149,0)
 ;Return 0 = forget about it, don't wait, just skip this one
"RTN","BPSOSIY",150,0)
 ;       1 = yes, wait and check again in several seconds from now
"RTN","BPSOSIY",151,0)
 ;        
"RTN","BPSOSIY",152,0)
 N PROMPT,Y
"RTN","BPSOSIY",153,0)
 ;An opportunity to wait for the active prescription to finish
"RTN","BPSOSIY",154,0)
 ;processing.  Return 1 if you do want to wait; 0 if you do not. 
"RTN","BPSOSIY",155,0)
 I '$G(ECHO) Q 1  ; not interactive, you can't ask - assume YES, wait
"RTN","BPSOSIY",156,0)
 W ?5,"There is currently an active transaction for this item"
"RTN","BPSOSIY",157,0)
 W ".",!
"RTN","BPSOSIY",158,0)
 W ?5,"So this item will be skipped.",! H 1 ; 03/22/2001
"RTN","BPSOSIY",159,0)
 Q 0 ; 03/22/2001
"RTN","BPSOSIY",160,0)
ACWTA S PROMPT="Do you want to wait for the active transaction to finish"
"RTN","BPSOSIY",161,0)
 S Y=$$YESNO^BPSOSU3(PROMPT,"YES",1) W !
"RTN","BPSOSIY",162,0)
 I Y=1 Q 1
"RTN","BPSOSIY",163,0)
 S PROMPT="Do you want to forget about this one"
"RTN","BPSOSIY",164,0)
 S Y=$$YESNO^BPSOSU3(PROMPT,"NO",1) W !
"RTN","BPSOSIY",165,0)
 I Y=1 Q 0
"RTN","BPSOSIY",166,0)
 G ACWTA
"RTN","BPSOSIY",167,0)
RXPREV(IEN,ENTRY)  ; has this item previously been through ECME?
"RTN","BPSOSIY",168,0)
 ;return false if not
"RTN","BPSOSIY",169,0)
 ;return pointer to 9002313.57 if true
"RTN","BPSOSIY",170,0)
 N RXI,RXR,VIS,CPT,INDEX,A,B
"RTN","BPSOSIY",171,0)
 S RXI=$$RXI(IEN,ENTRY)
"RTN","BPSOSIY",172,0)
 I RXI D
"RTN","BPSOSIY",173,0)
 . S RXR=$$RXR(IEN,ENTRY)
"RTN","BPSOSIY",174,0)
 . S INDEX=$S($$NDC(IEN,ENTRY)?1"POSTAGE".E:"POSTAGE",1:"RXIRXR")
"RTN","BPSOSIY",175,0)
 . S A=RXI,B=RXR
"RTN","BPSOSIY",176,0)
 E  D
"RTN","BPSOSIY",177,0)
 . S VIS=$$VIS(IEN,ENTRY)
"RTN","BPSOSIY",178,0)
 . S CPT=$$CPTIEN(IEN,ENTRY)
"RTN","BPSOSIY",179,0)
 . S A=VIS,B=CPT,INDEX="OTHERS"
"RTN","BPSOSIY",180,0)
 Q $O(^BPSTL("NON-FILEMAN",INDEX,A,B,""),-1)
"RTN","BPSOSIY",181,0)
RXPAID(IEN,ENTRY)  ;EP - from BPSOSIZ 
"RTN","BPSOSIY",182,0)
 ;return true if the prescription and fill has a "paid"
"RTN","BPSOSIY",183,0)
 ;status as far as ECME is concerned
"RTN","BPSOSIY",184,0)
 ;A paper claim counts as a ECME "paid" for this purpose
"RTN","BPSOSIY",185,0)
 ;Return 1 = POS, paid
"RTN","BPSOSIY",186,0)
 ;Return 2 = paper
"RTN","BPSOSIY",187,0)
 N N57 S N57=$$RXPREV(IEN,ENTRY)
"RTN","BPSOSIY",188,0)
 I 'N57 Q ""  ; no ECME record of this
"RTN","BPSOSIY",189,0)
 ;If it's a reversal, then our result depends on the reversal:
"RTN","BPSOSIY",190,0)
 ;   Was the reversal accepted?   If so, then No, not paid.
"RTN","BPSOSIY",191,0)
 ;   Was the reversal rejected?   Assume Paid, since we try to
"RTN","BPSOSIY",192,0)
 ;        allow reversals only in the case of a paid original.
"RTN","BPSOSIY",193,0)
 I $$ISREVERS^BPSOS57(N57) Q $S($$REVACC^BPSOS57(N57):0,1:1)
"RTN","BPSOSIY",194,0)
 ;Not a reversal:
"RTN","BPSOSIY",195,0)
 N X S X=$$CATEG^BPSOSUC(N57)
"RTN","BPSOSIY",196,0)
 Q $S(X="E PAYABLE":1,X="PAPER":2,X="E DUPLICATE":3,1:0)
"RTN","BPSOSIY",197,0)
RXI(IEN,ENTRY)     Q $P(^BPS(9002313.51,IEN,2,ENTRY,1),U)
"RTN","BPSOSIY",198,0)
RXR(IEN,ENTRY)     Q $P(^BPS(9002313.51,IEN,2,ENTRY,1),U,2)
"RTN","BPSOSIY",199,0)
VIS(IEN,ENTRY)     Q $P(^BPS(9002313.51,IEN,2,ENTRY,1),U,6)
"RTN","BPSOSIY",200,0)
NDC(IEN,ENTRY)     Q $P(^BPS(9002313.51,IEN,2,ENTRY,0),U,3)
"RTN","BPSOSIY",201,0)
CPTIEN(IEN,ENTRY)  Q $P(^BPS(9002313.51,IEN,2,ENTRY,1),U,8)
"RTN","BPSOSIY",202,0)
WANTREV()         ;EP - from BPSOSIZ 
"RTN","BPSOSIY",203,0)
 Q 0 ;TO BE IMPLEMENTED
"RTN","BPSOSIY",204,0)
NOW() N %,%H,%I,X D NOW^%DTC Q %
"RTN","BPSOSO2")
0^13^B33102462
"RTN","BPSOSO2",1,0)
BPSOSO2 ;BHAM ISC/FCS/DRS/DLF - NCPDP Override-Fman utils ;06/01/2004
"RTN","BPSOSO2",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSOSO2",3,0)
 Q
"RTN","BPSOSO2",4,0)
 ; EDIT,EDITGEN are called from the menus in BPSOSO1,
"RTN","BPSOSO2",5,0)
 ;   typically reached from the pharmacy package's call
"RTN","BPSOSO2",6,0)
 ;   to OVERRIDE^BPSOSO
"RTN","BPSOSO2",7,0)
 ; GET511 is called from BPSOSCD during claim construction
"RTN","BPSOSO2",8,0)
 ;
"RTN","BPSOSO2",9,0)
 ;IHS/SD/lwj 8/01/02  NCPDP 5.1 changes to GET511 subroutine
"RTN","BPSOSO2",10,0)
 ; Routine was changed to look at an exceptions list, if the
"RTN","BPSOSO2",11,0)
 ; field being processed is in the exceptions list it will
"RTN","BPSOSO2",12,0)
 ; create a "claim header" and "claim rx" entry.  The reason
"RTN","BPSOSO2",13,0)
 ; for this is that several 300 range fields were moved to the 
"RTN","BPSOSO2",14,0)
 ; claim rx area within the 5.1 segments creating duplicate flds.
"RTN","BPSOSO2",15,0)
 ; (i.e. the <402 and >402 rule is no longer valid)
"RTN","BPSOSO2",16,0)
 ;
"RTN","BPSOSO2",17,0)
 ; New routine (PRIORA) added to handle the input of the prior
"RTN","BPSOSO2",18,0)
 ; authorization information at prescription creation time.
"RTN","BPSOSO2",19,0)
 ;
"RTN","BPSOSO2",20,0)
EDIT(IEN,FIELDNUM) ;
"RTN","BPSOSO2",21,0)
 I '$D(FIELDNUM) D EDITGEN(IEN) Q
"RTN","BPSOSO2",22,0)
 ; Editing one field
"RTN","BPSOSO2",23,0)
 N DIE,DA,DR,DIDEL,DTOUT,FIELDNAM
"RTN","BPSOSO2",24,0)
 S DA=$$HASVALUE(IEN,FIELDNUM)
"RTN","BPSOSO2",25,0)
 ; Make sure the entry exists in the subfile.
"RTN","BPSOSO2",26,0)
 ; Create an empty one if necessary.
"RTN","BPSOSO2",27,0)
 I 'DA S DA=$$SETVALUE(IEN,FIELDNUM,"")
"RTN","BPSOSO2",28,0)
 ; edit the value field in the subfile
"RTN","BPSOSO2",29,0)
 S DIE="^BPS(9002313.511,"_IEN_",1,",DA(1)=IEN
"RTN","BPSOSO2",30,0)
 S DR=.02_$TR($$FIELDNAM(FIELDNUM),""";~","")
"RTN","BPSOSO2",31,0)
 D ^DIE
"RTN","BPSOSO2",32,0)
 ; If the value is null, then delete the entire FIELDNUM entry
"RTN","BPSOSO2",33,0)
 I $$GETVALUE(IEN,FIELDNUM)="" D DELVALUE(IEN,FIELDNUM)
"RTN","BPSOSO2",34,0)
 Q
"RTN","BPSOSO2",35,0)
EDITGEN(IEN)       ; general edit
"RTN","BPSOSO2",36,0)
 ; First pass:  quick & dirty Fileman ^DIE call
"RTN","BPSOSO2",37,0)
 ; Future: Screenman interface
"RTN","BPSOSO2",38,0)
 N DIE,DA,DR,DIDEL,DTOUT
"RTN","BPSOSO2",39,0)
 S DA=IEN,DIE=$$FILENUM,DR=1 D ^DIE
"RTN","BPSOSO2",40,0)
 ; And we need to delete any entries with null values
"RTN","BPSOSO2",41,0)
 N A S A=0 F  S A=$O(^BPS(9002313.511,IEN,1,A)) Q:'A  D
"RTN","BPSOSO2",42,0)
 . N X S X=^BPS(9002313.511,IEN,1,A,0)
"RTN","BPSOSO2",43,0)
 . I $P(X,U,2)="" D
"RTN","BPSOSO2",44,0)
 . . N FIELDNUM S FIELDNUM=$P(^BPSF(9002313.91,$P(X,U),0),U)
"RTN","BPSOSO2",45,0)
 . . D DELVALUE(IEN,FIELDNUM)
"RTN","BPSOSO2",46,0)
 Q
"RTN","BPSOSO2",47,0)
GET511(IEN,ARR101,ARR402) ;EP - from BPSOSCD - load arrays with data from IEN
"RTN","BPSOSO2",48,0)
 ; IHS/SD/lwj 8/1/02 altered for NCPDP 5.1 - must store some 
"RTN","BPSOSO2",49,0)
 ; 300 range fields at the "header" and "detail" level due to 
"RTN","BPSOSO2",50,0)
 ; reconstructing of 5.1 claim segments
"RTN","BPSOSO2",51,0)
 ;
"RTN","BPSOSO2",52,0)
 N A,C S A=0,C=0
"RTN","BPSOSO2",53,0)
 N EXPTLST,TFLD,BPFLDNUM,BPHFLD                ;IHS/SD/lwj 8/1/02
"RTN","BPSOSO2",54,0)
 ;
"RTN","BPSOSO2",55,0)
 S EXPTLST=",308,315,316,317,318,319,320,327,401,498.09,"  ;IHS/SD/lwj 8/1/02
"RTN","BPSOSO2",56,0)
 S BPHFLD=",498.09,524,"
"RTN","BPSOSO2",57,0)
 ;
"RTN","BPSOSO2",58,0)
 F  S A=$O(^BPS(9002313.511,IEN,1,A)) Q:'A  D
"RTN","BPSOSO2",59,0)
 . N X S X=^BPS(9002313.511,IEN,1,A,0)
"RTN","BPSOSO2",60,0)
 . N F S F=$P(X,U) ; field IEN, points to 9002313.91
"RTN","BPSOSO2",61,0)
 . ; store in either claim header or claim detail, based on field #
"RTN","BPSOSO2",62,0)
 . S BPFLDNUM=+$$FIELDNUM(F)
"RTN","BPSOSO2",63,0)
 . I BPFLDNUM<402!(BPHFLD[(","_BPFLDNUM_",")) S @ARR101@(F)=$P(X,U,2)
"RTN","BPSOSO2",64,0)
 . E  S @ARR402@(F)=$P(X,U,2)
"RTN","BPSOSO2",65,0)
 . ;
"RTN","BPSOSO2",66,0)
 . ; IHS/SD/lwj 8/1/02  nxt 2 lns added to check for exception flds
"RTN","BPSOSO2",67,0)
 . S TFLD=","_BPFLDNUM_","
"RTN","BPSOSO2",68,0)
 . I EXPTLST[TFLD S @ARR402@(F)=$P(X,U,2)
"RTN","BPSOSO2",69,0)
 . ;
"RTN","BPSOSO2",70,0)
 . S C=C+1
"RTN","BPSOSO2",71,0)
 Q C
"RTN","BPSOSO2",72,0)
 ; 
"RTN","BPSOSO2",73,0)
 ; Generalized utilities - good for everything, not just auth #
"RTN","BPSOSO2",74,0)
LOCK() L +^BPS(9002313.511,IEN):300 Q $T
"RTN","BPSOSO2",75,0)
UNLOCK L -^BPS(9002313.511,IEN) Q
"RTN","BPSOSO2",76,0)
FILENUM()          Q 9002313.511
"RTN","BPSOSO2",77,0)
SUBFNUM()          Q 9002313.5111
"RTN","BPSOSO2",78,0)
FLOCK() L +^BPS(9002313.511):300 Q $T
"RTN","BPSOSO2",79,0)
FUNLOCK L -^BPS(9002313.511) Q
"RTN","BPSOSO2",80,0)
FIELDIEN(FIELDNUM) ; ien of a 9002313.91 NCPDP Data Dictionary field
"RTN","BPSOSO2",81,0)
 Q $$FIND1^DIC(9002313.91,,,FIELDNUM)
"RTN","BPSOSO2",82,0)
FIELDNAM(FIELDNUM) ; name of a 9002313.91 NCPDP Data Dictionary field
"RTN","BPSOSO2",83,0)
 Q $$GET1^DIQ(9002313.91,$$FIELDIEN(FIELDNUM),.03)
"RTN","BPSOSO2",84,0)
 ; given pointer to NCPDP Data Dictionary fields, return external #
"RTN","BPSOSO2",85,0)
FIELDNUM(IEN91)    Q $P($G(^BPSF(9002313.91,IEN91,0)),U)
"RTN","BPSOSO2",86,0)
NEW() ;EP -  create new entry in 9002313.511
"RTN","BPSOSO2",87,0)
 F  Q:$$FLOCK  Q:'$$IMPOSS^BPSOSUE("L","RTI","interlock on new Override record creation",,"NEW",$T(+0))
"RTN","BPSOSO2",88,0)
 N FLAGS,FDA,IEN,MSG,FN,X,NEWREC S FN=$$FILENUM
"RTN","BPSOSO2",89,0)
 D NEW1
"RTN","BPSOSO2",90,0)
 D FUNLOCK
"RTN","BPSOSO2",91,0)
 Q NEWREC
"RTN","BPSOSO2",92,0)
NEW1 ;
"RTN","BPSOSO2",93,0)
 S FDA(FN,"+1,",.01)=$O(^BPS(FN,"B",999999999999),-1)+1
"RTN","BPSOSO2",94,0)
 D UPDATE^DIE(,"FDA","IEN","MSG")
"RTN","BPSOSO2",95,0)
 I $D(MSG) D  G NEW1:$$IMPOSS^BPSOSUE("FM","TRI","UPDATE^DIE failed",,"NEW1",$T(+0))
"RTN","BPSOSO2",96,0)
 . D ZWRITE^BPSOS("FDA","IEN","MSG")
"RTN","BPSOSO2",97,0)
 . K MSG
"RTN","BPSOSO2",98,0)
 S NEWREC=IEN(1)
"RTN","BPSOSO2",99,0)
NEW2 ;
"RTN","BPSOSO2",100,0)
 S FDA(FN,NEWREC_",",.02)="NOW"
"RTN","BPSOSO2",101,0)
 D FILE^DIE("E","FDA","MSG")
"RTN","BPSOSO2",102,0)
 Q:'$D(MSG)  ; success
"RTN","BPSOSO2",103,0)
 G NEW2:$$IMPOSS^BPSOSUE("FM","TRI","FILE^DIE failed",,"NEW2",$T(+0))
"RTN","BPSOSO2",104,0)
 Q
"RTN","BPSOSO2",105,0)
HASVALUE(IEN,FIELDNUM)       ; does the FIELDNUM have an override value?
"RTN","BPSOSO2",106,0)
 ; returns IEN into the subfile
"RTN","BPSOSO2",107,0)
 Q $$FIND1^DIC($$SUBFNUM,","_IEN_",",,FIELDNUM)
"RTN","BPSOSO2",108,0)
GETVALUE(IEN,FIELDNUM) ; return currently-set override value for given FIELDNUM
"RTN","BPSOSO2",109,0)
 N X S X=$$HASVALUE(IEN,FIELDNUM) I 'X Q ""
"RTN","BPSOSO2",110,0)
 Q $$GET1^DIQ($$SUBFNUM,X_","_IEN_",",.02)
"RTN","BPSOSO2",111,0)
SETVALUE(IEN,FIELDNUM,VALUE) ;
"RTN","BPSOSO2",112,0)
 ; can DO or $$; $$ = ien in subfile for this FIELDNUM
"RTN","BPSOSO2",113,0)
 ; Special case for the override file:  if you're trying to set the
"RTN","BPSOSO2",114,0)
 ; field's value to "@", don't just delete the field value,
"RTN","BPSOSO2",115,0)
 ; which would leave the field defined with a null value.
"RTN","BPSOSO2",116,0)
 ; Instead, delete the entire override for the field.
"RTN","BPSOSO2",117,0)
 ; This prevents accidentally overriding a genuine value with null.
"RTN","BPSOSO2",118,0)
 I "@"=VALUE D DELVALUE(IEN,FIELDNUM) Q ""
"RTN","BPSOSO2",119,0)
 ; But the usual case is just storing a value:
"RTN","BPSOSO2",120,0)
 N FDA,MSG,IENS,IENARRAY
"RTN","BPSOSO2",121,0)
 ; Note:  I tried the "+?1,ien," method but it always created a new
"RTN","BPSOSO2",122,0)
 ; entry, even when it meant creating duplicates.  So now we test to
"RTN","BPSOSO2",123,0)
 ; see if there's already an entry for the fieldnum, and if not,
"RTN","BPSOSO2",124,0)
 ; then we put in a "+1,"
"RTN","BPSOSO2",125,0)
 N ENTRY S ENTRY=$$HASVALUE(IEN,FIELDNUM) ; do we already have FIELDNUM
"RTN","BPSOSO2",126,0)
 I 'ENTRY S ENTRY="+1" ; if not, then create a new entry
"RTN","BPSOSO2",127,0)
 S IENS=ENTRY_","_IEN_","
"RTN","BPSOSO2",128,0)
 S FDA($$SUBFNUM,IENS,.01)=FIELDNUM
"RTN","BPSOSO2",129,0)
 S FDA($$SUBFNUM,IENS,.02)=VALUE
"RTN","BPSOSO2",130,0)
 D SETV1
"RTN","BPSOSO2",131,0)
 I ENTRY="+1" S ENTRY=$G(IENARRAY(1))
"RTN","BPSOSO2",132,0)
 Q ENTRY
"RTN","BPSOSO2",133,0)
SETV1 ;
"RTN","BPSOSO2",134,0)
 D UPDATE^DIE("E","FDA","IENARRAY","MSG")
"RTN","BPSOSO2",135,0)
 Q:'$D(MSG)  ; success
"RTN","BPSOSO2",136,0)
 K ^TMP("BPS",$J,"BPSOSO2",$J,"SETVALUE")
"RTN","BPSOSO2",137,0)
 S ^TMP("BPS",$J,"BPSOSO2",$J,"SETVALUE")=$$ERRHDR
"RTN","BPSOSO2",138,0)
 M ^TMP("BPS",$J,"BPSOSO2",$J,"SETVALUE","MSG")=MSG
"RTN","BPSOSO2",139,0)
 I $D(IENARRAY) M ^TMP("BPS",$J,"BPSOSO2",$J,"SETVALUE","IENARRAY")=IENARRAY
"RTN","BPSOSO2",140,0)
 D ZWRITE^BPSOS("FDA","IENARRAY","MSG")
"RTN","BPSOSO2",141,0)
 G SETV1:$$IMPOSS^BPSOSUE("FM","TRI",,,"SETVALUE",$T(+0))
"RTN","BPSOSO2",142,0)
 Q
"RTN","BPSOSO2",143,0)
DELVALUE(IEN,FIELDNUM)       ;
"RTN","BPSOSO2",144,0)
 N ENTRY S ENTRY=$$HASVALUE(IEN,FIELDNUM) Q:'ENTRY  ; wasn't defined
"RTN","BPSOSO2",145,0)
 N FDA,MSG
"RTN","BPSOSO2",146,0)
 S FDA($$SUBFNUM,ENTRY_","_IEN_",",.01)="@"
"RTN","BPSOSO2",147,0)
DE5 D FILE^DIE("E","FDA","MSG")
"RTN","BPSOSO2",148,0)
 Q:'$D(MSG)  ; success
"RTN","BPSOSO2",149,0)
 K ^TMP("BPS",$J,"BPSOSO2",$J,"DELVALUE")
"RTN","BPSOSO2",150,0)
 S ^TMP("BPS",$J,"BPSOSO2",$J,"DELVALUE")=$$ERRHDR
"RTN","BPSOSO2",151,0)
 D ZWRITE^BPSOS("IEN","FDA","MSG")
"RTN","BPSOSO2",152,0)
 G DE5:$$IMPOSS^BPSOSUE("FM","TRI",,,"DELVALUE",$T(+0))
"RTN","BPSOSO2",153,0)
 Q
"RTN","BPSOSO2",154,0)
ERRHDR() Q "ERROR AT $H="_$H_" FOR $J="_$J
"RTN","BPSOSO2",155,0)
SEE(IEN) N TMP M TMP=^BPS($$FILENUM,IEN) D ZWRITE^BPSOS("TMP") Q  ; debugging
"RTN","BPSOSO2",156,0)
 ;
"RTN","BPSOSO2",157,0)
PRIORA(IEN) ;IHS/SD/lwj 9/3/02 NCPDP 5.1 Changes - Prior Authorization 
"RTN","BPSOSO2",158,0)
 ; We are still processing 5.1 and 3.2 claims, so we have to be able
"RTN","BPSOSO2",159,0)
 ; to populate fields 461, 462 and 416.  416 will be created based
"RTN","BPSOSO2",160,0)
 ; on the input into fields 461, and 462.
"RTN","BPSOSO2",161,0)
 ;
"RTN","BPSOSO2",162,0)
 N FIELDNUM
"RTN","BPSOSO2",163,0)
 ;
"RTN","BPSOSO2",164,0)
 S FIELDNUM=461              ;Prior authorization type code
"RTN","BPSOSO2",165,0)
 D EDIT(IEN,FIELDNUM)
"RTN","BPSOSO2",166,0)
 ;
"RTN","BPSOSO2",167,0)
 S FIELDNUM=462              ;Prior authorization number submitted
"RTN","BPSOSO2",168,0)
 D EDIT(IEN,FIELDNUM)
"RTN","BPSOSO2",169,0)
 ;
"RTN","BPSOSO2",170,0)
 ;now we combine field 461 and 462 to creat field 416
"RTN","BPSOSO2",171,0)
 ;
"RTN","BPSOSO2",172,0)
 N VAL461,VAL462,VAL416,DA
"RTN","BPSOSO2",173,0)
 S (VAL461,VAL462,VAL416)=""
"RTN","BPSOSO2",174,0)
 ;
"RTN","BPSOSO2",175,0)
 S VAL461=$$GETVALUE(IEN,461)
"RTN","BPSOSO2",176,0)
 S VAL462=$$GETVALUE(IEN,462)
"RTN","BPSOSO2",177,0)
 S VAL416=VAL461_VAL462
"RTN","BPSOSO2",178,0)
 Q:VAL416=""
"RTN","BPSOSO2",179,0)
 ;
"RTN","BPSOSO2",180,0)
 S DA=$$SETVALUE(IEN,416,"")
"RTN","BPSOSO2",181,0)
 S:$G(DA)'="" DA=$$SETVALUE(IEN,416,VAL416)
"RTN","BPSOSO2",182,0)
 ;
"RTN","BPSOSO2",183,0)
 ;
"RTN","BPSOSO2",184,0)
 Q
"RTN","BPSOSQB")
0^12^B46504388
"RTN","BPSOSQB",1,0)
BPSOSQB ;BHAM ISC/FCS/DRS/DLF - ECME background, Part 1 ;06/01/2004
"RTN","BPSOSQB",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSOSQB",3,0)
 ;External reference private DBIA 4303
"RTN","BPSOSQB",4,0)
 ;
"RTN","BPSOSQB",5,0)
 ;IHS/DSD/lwj 10/09/01 on behalf of David Slauenwhite - change
"RTN","BPSOSQB",6,0)
 ; consist of one line be altered in the "C" subroutine.
"RTN","BPSOSQB",7,0)
 ; David reported:
"RTN","BPSOSQB",8,0)
 ;   I think that what happens is that CLEAR59^BPSOSIZ always
"RTN","BPSOSQB",9,0)
 ;   cleans out the 9002313.59 transaction-in-progress entry so
"RTN","BPSOSQB",10,0)
 ;   that C+3 always gets null for both these fields.  The
"RTN","BPSOSQB",11,0)
 ;   GETDIV^BPSOSQC computes them anew, and then C+7:C+8
"RTN","BPSOSQB",12,0)
 ;   stores the computed values in the correct locations so that in
"RTN","BPSOSQB",13,0)
 ;   D+3, GETPHARM^BPSOSQC will find the correct pharmacy.
"RTN","BPSOSQB",14,0)
 ;
"RTN","BPSOSQB",15,0)
 ;IHS/SD/lwj 08/20/01  NCPDP 5.1 changes
"RTN","BPSOSQB",16,0)
 ; New field added to point to the new DUR/PPS values file.  The
"RTN","BPSOSQB",17,0)
 ; pointer will reside in the Outpatient Pharmacy V6.0 file following
"RTN","BPSOSQB",18,0)
 ; the release of Patch 4.  For now, we are just setting up the code
"RTN","BPSOSQB",19,0)
 ; in anticipation of the field.  (PCS will require the DUR/PPS
"RTN","BPSOSQB",20,0)
 ; claim segment as part of their format.)
"RTN","BPSOSQB",21,0)
 ; Since the logic is similar to the Override field -I will add this
"RTN","BPSOSQB",22,0)
 ; new field retrieval to the same place in the code.
"RTN","BPSOSQB",23,0)
 ;
"RTN","BPSOSQB",24,0)
 Q
"RTN","BPSOSQB",25,0)
CLAIMINF() ;EP - from BPSOSQA
"RTN","BPSOSQB",26,0)
 ; Send in ABSBRXI, ABSBRXR, ABSBNDC, IEN59
"RTN","BPSOSQB",27,0)
 ; Fill in as much other information as possible,
"RTN","BPSOSQB",28,0)
 ; Every 9002313.59 field must be accounted for in here!
"RTN","BPSOSQB",29,0)
 ;  Even if only to say "not filled in", or to explicitly delete field.
"RTN","BPSOSQB",30,0)
 ;
"RTN","BPSOSQB",31,0)
 N FN S FN=9002313.59
"RTN","BPSOSQB",32,0)
 N FDA,IEN,MSG
"RTN","BPSOSQB",33,0)
 N IEN59COM S IEN59COM=IEN59_","
"RTN","BPSOSQB",34,0)
 ;
"RTN","BPSOSQB",35,0)
 ; Now fill in missing information.
"RTN","BPSOSQB",36,0)
 ; Set up FDA(FN,IEN59_",",FIELD)=internal value
"RTN","BPSOSQB",37,0)
 ;
"RTN","BPSOSQB",38,0)
 ; ***
"RTN","BPSOSQB",39,0)
 ; ***  Fields in the ^(0) node
"RTN","BPSOSQB",40,0)
 ; ***
"RTN","BPSOSQB",41,0)
 ; .01 ENTRY#  already done
"RTN","BPSOSQB",42,0)
 ; .13 TYPE    already done  ; use $$TYPE^BPSOSQ to infer it from IEN59 in here
"RTN","BPSOSQB",43,0)
 ; 1   STATUS  already done
"RTN","BPSOSQB",44,0)
 ; 2   PCN     not yet
"RTN","BPSOSQB",45,0)
 ; 3   CLAIM   not yet
"RTN","BPSOSQB",46,0)
 ; 4   RESPONSE  not yet
"RTN","BPSOSQB",47,0)
 ;
"RTN","BPSOSQB",48,0)
 ; 12  VISIT        -  set up ABSBVISI
"RTN","BPSOSQB",49,0)
 ;
"RTN","BPSOSQB",50,0)
A S ABSBVISI=$P(^BPST(IEN59,0),U,7)
"RTN","BPSOSQB",51,0)
 ;
"RTN","BPSOSQB",52,0)
 ;----- LJE;6/16/03 Added next section to skip visit handling for VA and added B1 line label.
"RTN","BPSOSQB",53,0)
 I $P($G(^BPS(9002313.99,1,"SITE TYPE")),"^",1)=0 D  G B
"RTN","BPSOSQB",54,0)
 . S LINKSRC="#"_$S(ABSBRXR:ABSBRXR,1:0)
"RTN","BPSOSQB",55,0)
 ;
"RTN","BPSOSQB",56,0)
 I 'ABSBVISI D  ; need to lookup visit
"RTN","BPSOSQB",57,0)
 . I $$TYPE^BPSOSQ=3 D  ; if supply item, we found visit from ^PSRX
"RTN","BPSOSQB",58,0)
 . . D IMPOSS^BPSOSUE("DB,P","TI","Supply item must have visit by now.",IEN59,"A",$T(+0))
"RTN","BPSOSQB",59,0)
 . D VISIT^BPSOSQC
"RTN","BPSOSQB",60,0)
 . S FDA(FN,IEN59COM,12)=ABSBVISI
"RTN","BPSOSQB",61,0)
 I 'ABSBVISI Q 12 ; result code 12 - visit lookup failed
"RTN","BPSOSQB",62,0)
 ;
"RTN","BPSOSQB",63,0)
 ; Make sure there's a VCN number assigned to this visit
"RTN","BPSOSQB",64,0)
 ;
"RTN","BPSOSQB",65,0)
A1 I $$MAKEVCN^BPSOSQ D SETVCN^BPSOSQD
"RTN","BPSOSQB",66,0)
 ;
"RTN","BPSOSQB",67,0)
 ; 5   PATIENT      -  set up ABSBPATI
"RTN","BPSOSQB",68,0)
 ;
"RTN","BPSOSQB",69,0)
B S ABSBPATI=$P(^BPST(IEN59,0),U,6)
"RTN","BPSOSQB",70,0)
 I 'ABSBPATI Q 13
"RTN","BPSOSQB",71,0)
 ;
"RTN","BPSOSQB",72,0)
 ; 7   LAST UPDATE  not here
"RTN","BPSOSQB",73,0)
 ; 14  POSITION IN CLAIM  not here
"RTN","BPSOSQB",74,0)
 ; 13  USER    already done
"RTN","BPSOSQB",75,0)
 ; 15  START TIME  already done
"RTN","BPSOSQB",76,0)
 ; 16  COMMS LOG    not yet
"RTN","BPSOSQB",77,0)
 ;
"RTN","BPSOSQB",78,0)
 ; ***
"RTN","BPSOSQB",79,0)
 ; ***  Fields in the ^(1) node
"RTN","BPSOSQB",80,0)
 ; ***
"RTN","BPSOSQB",81,0)
 ; 9   ABSBRXR  already done
"RTN","BPSOSQB",82,0)
 ; 10  ABSBNDC
"RTN","BPSOSQB",83,0)
B1 ;
"RTN","BPSOSQB",84,0)
 S FDA(FN,IEN59COM,10)=ABSBNDC ; usually already there
"RTN","BPSOSQB",85,0)
 ;
"RTN","BPSOSQB",86,0)
 ; 8   VCPT  - at the very end, in a separate billing job,
"RTN","BPSOSQB",87,0)
 ;     in the billing programs, BPSOSB*
"RTN","BPSOSQB",88,0)
 ;
"RTN","BPSOSQB",89,0)
 ; 11  ABSBDIV           -  ABSBPDIV, pointer to ^PS(59,ABSBPDIV,*)
"RTN","BPSOSQB",90,0)
 ; 1.05 ABSBDIV SOURCE   -  ABSBSDIV, source = 1
"RTN","BPSOSQB",91,0)
 ;
"RTN","BPSOSQB",92,0)
C S ABSBPDIV=$P(^BPST(IEN59,1),U,4)
"RTN","BPSOSQB",93,0)
 I ABSBPDIV D
"RTN","BPSOSQB",94,0)
 . N X S X=^BPST(IEN59,1)
"RTN","BPSOSQB",95,0)
 . S ABSBPDIV=$P(X,U,4),ABSBSDIV=$P(X,U,5)   ;IHS/DSD/lwj 10/09/01
"RTN","BPSOSQB",96,0)
 ; end of 10/09/01 changes
"RTN","BPSOSQB",97,0)
 I 'ABSBPDIV D
"RTN","BPSOSQB",98,0)
 . D GETDIV^BPSOSQC ; needs ABSBRXI,ABSBRXR
"RTN","BPSOSQB",99,0)
 . I $$TYPE^BPSOSQ=1!($$TYPE^BPSOSQ=2) D  ; prescription or postage
"RTN","BPSOSQB",100,0)
 . . S FDA(FN,IEN59COM,11)=ABSBPDIV
"RTN","BPSOSQB",101,0)
 . . S FDA(FN,IEN59COM,1.05)=ABSBSDIV
"RTN","BPSOSQB",102,0)
 I 'ABSBPDIV Q 14
"RTN","BPSOSQB",103,0)
 ;
"RTN","BPSOSQB",104,0)
 ; 1.07 PHARMACY  (depends on ABSBSDIV,ABSBPDIV)
"RTN","BPSOSQB",105,0)
 ;
"RTN","BPSOSQB",106,0)
D S BPSHARM=$P(^BPST(IEN59,1),U,7)
"RTN","BPSOSQB",107,0)
 I 'BPSHARM D
"RTN","BPSOSQB",108,0)
 . D GETPHARM^BPSOSQC
"RTN","BPSOSQB",109,0)
 . S FDA(FN,IEN59COM,1.07)=BPSHARM
"RTN","BPSOSQB",110,0)
 I BPSHARM=0 Q 15
"RTN","BPSOSQB",111,0)
 ;
"RTN","BPSOSQB",112,0)
 ; 1.06 INSURER - see ^(6) and ^(7), below
"RTN","BPSOSQB",113,0)
 ; 1.08 PINS PIECE - see ^(6) and ^(7), below
"RTN","BPSOSQB",114,0)
 ;
"RTN","BPSOSQB",115,0)
 ; 1.09 PREAUTHORIZATION NUMBER
"RTN","BPSOSQB",116,0)
 ;  May someday need to do an extra lookup here.
"RTN","BPSOSQB",117,0)
 ;  Thinking of Puyallup, where an extensive preauthorization number
"RTN","BPSOSQB",118,0)
 ;  database scheme has been set up in the past.
"RTN","BPSOSQB",119,0)
 ;  (And more typically, may be handled by the NCPDP OVERRIDE
"RTN","BPSOSQB",120,0)
 ;
"RTN","BPSOSQB",121,0)
 ; 1.11 ABSBRXI  already done
"RTN","BPSOSQB",122,0)
 ;
"RTN","BPSOSQB",123,0)
 ; 1.12 RESUBMIT AFTER REVERSAL
"RTN","BPSOSQB",124,0)
 ;   How's that work again?  It was set by the caller, right?
"RTN","BPSOSQB",125,0)
 ;
"RTN","BPSOSQB",126,0)
 ; 1.13 NCPDP OVERRIDES
"RTN","BPSOSQB",127,0)
 I $$TYPE^BPSOSQ=1!($$TYPE^BPSOSQ=2) D
"RTN","BPSOSQB",128,0)
 . I '$G(VARX) D
"RTN","BPSOSQB",129,0)
 .. N X S X=$$GETIEN^BPSOSO($$RXI^BPSOSQ,$$RXR^BPSOSQ)
"RTN","BPSOSQB",130,0)
 .. I X S FDA(FN,IEN59COM,1.13)=X
"RTN","BPSOSQB",131,0)
 . ;
"RTN","BPSOSQB",132,0)
 . ;IHS/SD/lwj 8/20/02 NCPDP 5.1 changes - add the retrieval of the
"RTN","BPSOSQB",133,0)
 . ; DUR/PPS pointer from the prescription file
"RTN","BPSOSQB",134,0)
 . N DUR S DUR=$$GETDUR^BPSOSO($$RXI^BPSOSQ,$$RXR^BPSOSQ)
"RTN","BPSOSQB",135,0)
 . I DUR S FDA(FN,IEN59COM,1.14)=DUR
"RTN","BPSOSQB",136,0)
 ;
"RTN","BPSOSQB",137,0)
 ; ***
"RTN","BPSOSQB",138,0)
 ; ***   Fields in the ^(2) node - RESULT CODE, RESULT TEXT - not here
"RTN","BPSOSQB",139,0)
 ; ***   In the ^(3) node - CANCELLATION REQUESTED - not here
"RTN","BPSOSQB",140,0)
 ; ***   In the ^(4) node - REVERSAL CLAIM, REVERSAL RESPONSE - not here
"RTN","BPSOSQB",141,0)
 ; ***
"RTN","BPSOSQB",142,0)
 ;
"RTN","BPSOSQB",143,0)
 ; ***
"RTN","BPSOSQB",144,0)
 ; ***   INSURANCE data
"RTN","BPSOSQB",145,0)
 ; ***   Fields 1.06 INSURER and 1.08 PINS PIECE
"RTN","BPSOSQB",146,0)
 ; ***   And the ^(6) and ^(7) nodes
"RTN","BPSOSQB",147,0)
 ; ***
"RTN","BPSOSQB",148,0)
 ;
"RTN","BPSOSQB",149,0)
 ; SET VA PATIENT INSURANCE ;lje;6/21/03
"RTN","BPSOSQB",150,0)
 ; Insurance info passed by IB and must store.
"RTN","BPSOSQB",151,0)
 ; VA currently not using IHS insurance programs; so skipping them.
"RTN","BPSOSQB",152,0)
 I '$P($G(^BPS(9002313.99,1,"SITE TYPE")),"^",1) G VASKIP ;LJE;6/21/03
"RTN","BPSOSQB",153,0)
 ;
"RTN","BPSOSQB",154,0)
 S INSURER=$P(^BPST(IEN59,1),U,6)
"RTN","BPSOSQB",155,0)
 I INSURER D  ; whoever set up this entry included insurance data
"RTN","BPSOSQB",156,0)
 . ; nothing more to do right now
"RTN","BPSOSQB",157,0)
 E  D  ; insurance data not set up; establish defaults here and now
"RTN","BPSOSQB",158,0)
 . N INSARRAY
"RTN","BPSOSQB",159,0)
 . I $$TYPE^BPSOSQ=2 D  ; postage: try to take same insur. as prescrip
"RTN","BPSOSQB",160,0)
 . . N N57 S N57=$$N57LAST^BPSOSQ() Q:'N57  ; last transaction
"RTN","BPSOSQB",161,0)
 . . N TMP M TMP=^BPSTL(N57) Q:'$D(TMP(6))
"RTN","BPSOSQB",162,0)
 . . S INSARRAY(0)=$L(TMP(6),U)
"RTN","BPSOSQB",163,0)
 . . N I F I=1:1:$L(TMP(6),U) D
"RTN","BPSOSQB",164,0)
 . . . S INSARRAY(I)=$P(TMP(7),U,I)_U_$P(TMP(6),U,I)
"RTN","BPSOSQB",165,0)
 . I '$D(INSARRAY)  D
"RTN","BPSOSQB",166,0)
 . .N RETVAL S RETVAL=$$INSURER^BPSOS25(.INSARRAY)
"RTN","BPSOSQB",167,0)
 . ; INSARRAY(0)=count^other junk...
"RTN","BPSOSQB",168,0)
 . ; INSARRAY(n)=insurer^pins
"RTN","BPSOSQB",169,0)
 . N I F I=1:1:$P(INSARRAY(0),U) D
"RTN","BPSOSQB",170,0)
 . . I I>3 Q
"RTN","BPSOSQB",171,0)
 . . S FDA(FN,IEN59COM,I+700)=$P(INSARRAY(I),U)
"RTN","BPSOSQB",172,0)
 . . S FDA(FN,IEN59COM,I+600)=$P(INSARRAY(I),U,2)
"RTN","BPSOSQB",173,0)
 . . I I=1 D
"RTN","BPSOSQB",174,0)
 . . . S (INSURER,FDA(FN,IEN59COM,1.06))=$P(INSARRAY(I),U)
"RTN","BPSOSQB",175,0)
 . . . S FDA(FN,IEN59COM,1.08)=1
"RTN","BPSOSQB",176,0)
 ;
"RTN","BPSOSQB",177,0)
 ; ***
"RTN","BPSOSQB",178,0)
 ; ***   PRICING data - in the ^(5) node
"RTN","BPSOSQB",179,0)
 ; ***
"RTN","BPSOSQB",180,0)
 ;
"RTN","BPSOSQB",181,0)
P N PRICING S PRICING=$G(^BPST(IEN59,5))
"RTN","BPSOSQB",182,0)
 I $P(PRICING,U,5)]"" D
"RTN","BPSOSQB",183,0)
 . ; do nothing; pricing is already determined
"RTN","BPSOSQB",184,0)
 E  D  ; need to figure out pricing
"RTN","BPSOSQB",185,0)
 . I $$TYPE^BPSOSQ=2 D
"RTN","BPSOSQB",186,0)
 . . D IMPOSS^BPSOSUE("DB,P","TI","Pricing of postage must already be in place by now.",IEN59,"P:2",$T(+0))
"RTN","BPSOSQB",187,0)
 . E  I $$TYPE^BPSOSQ=3 D
"RTN","BPSOSQB",188,0)
 . . D IMPOSS^BPSOSUE("DB,P","TI","Pricing of supplies must already be in place by now.",IEN59,"P:3",$T(+0))
"RTN","BPSOSQB",189,0)
 . E  I $$TYPE^BPSOSQ=1 D  ; Drug pricing:
"RTN","BPSOSQB",190,0)
 . . N DRGDFN,DRGNAME,PROVDFN,PROV,PRICALC
"RTN","BPSOSQB",191,0)
 . . N ABSBRXI,ABSBRXR,ABSBNDC,ABSBDRGI
"RTN","BPSOSQB",192,0)
 . . S ABSBRXI=$$RXI^BPSOSQ,ABSBRXR=$$RXR^BPSOSQ,ABSBNDC=$$NDC^BPSOSQ
"RTN","BPSOSQB",193,0)
 . . S ABSBDRGI=$$DRGDFN^BPSOSQ ; INSURER was set above
"RTN","BPSOSQB",194,0)
 . . D EN^BPSOSQP ; and PRICING is set for you
"RTN","BPSOSQB",195,0)
 . N I F I=1:1:5 S FDA(FN,IEN59COM,I+500)=$P(PRICING,U,I)
"RTN","BPSOSQB",196,0)
 ;
"RTN","BPSOSQB",197,0)
VASKIP ;
"RTN","BPSOSQB",198,0)
 ; The 9002313.59 entry has all the data it should have at this point.
"RTN","BPSOSQB",199,0)
 ; Store whatever data were just determined in this routine.
"RTN","BPSOSQB",200,0)
 ;
"RTN","BPSOSQB",201,0)
FILE1 I $D(FDA) D
"RTN","BPSOSQB",202,0)
 . D FILE^DIE("","FDA","MSG")
"RTN","BPSOSQB",203,0)
 ;
"RTN","BPSOSQB",204,0)
 I $D(MSG) D  G FILE99
"RTN","BPSOSQB",205,0)
 . D LOG^BPSOSL("Error in D FILE^DIE at tag FILE1^"_$T(+0))
"RTN","BPSOSQB",206,0)
 . D LOGMSG ; failure - log returned diagnostics
"RTN","BPSOSQB",207,0)
 ;
"RTN","BPSOSQB",208,0)
FILE99 D LOG59 ; log a copy of what's in the IEN59 now
"RTN","BPSOSQB",209,0)
 Q $S($D(MSG):1000,1:0) ; >0 if error, =0 if no error
"RTN","BPSOSQB",210,0)
 ;
"RTN","BPSOSQB",211,0)
LOGMSG D LOG^BPSOSL("Error returned by FILE^DIE")
"RTN","BPSOSQB",212,0)
 D LOGARRAY("MSG") Q  ; log the MSG array
"RTN","BPSOSQB",213,0)
LOGARRAY(Q) ;EP - BPSOSQD
"RTN","BPSOSQB",214,0)
 I $D(@Q)#10 D LOG^BPSOSL(Q_"="_@Q)
"RTN","BPSOSQB",215,0)
 F  S Q=$Q(@Q) Q:Q=""  D LOG^BPSOSL(Q_"="_@Q)
"RTN","BPSOSQB",216,0)
 Q
"RTN","BPSOSQB",217,0)
LOG59 ; log the IEN59 entry
"RTN","BPSOSQB",218,0)
 N A M A=^BPST(IEN59)
"RTN","BPSOSQB",219,0)
 D LOG^BPSOSL("Contents of ^BPST("_IEN59_") :")
"RTN","BPSOSQB",220,0)
 D LOGARRAY("A")
"RTN","BPSOSQB",221,0)
 Q
"RTN","BPSOSQB",222,0)
LOG59A ;EP - from REVERS59^BPSOS6D
"RTN","BPSOSQB",223,0)
 N SAVESLOT S SAVESLOT=$$GETSLOT^BPSOSL
"RTN","BPSOSQB",224,0)
 D SETSLOT^BPSOSL(IEN59)
"RTN","BPSOSQB",225,0)
 D LOG59
"RTN","BPSOSQB",226,0)
 D RELSLOT^BPSOSL
"RTN","BPSOSQB",227,0)
 D SETSLOT^BPSOSL(SAVESLOT)
"RTN","BPSOSQB",228,0)
 Q
"RTN","BPSOSQC")
0^18^B5309915
"RTN","BPSOSQC",1,0)
BPSOSQC ;BHAM ISC/FCS/DRS/FLS - ECME background, Part 1 ;06/01/2004
"RTN","BPSOSQC",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSOSQC",3,0)
 ;External reference private DBIA 4303
"RTN","BPSOSQC",4,0)
 Q
"RTN","BPSOSQC",5,0)
 ;  GETPHARM, GETDIV, VISIT subroutines
"RTN","BPSOSQC",6,0)
 ;
"RTN","BPSOSQC",7,0)
GETPHARM ;EP -  given ABSBPDIV, ABSBSDIV, ABSBRXI, ABSBRXR
"RTN","BPSOSQC",8,0)
 S BPSHARM=0 ; want to set this value
"RTN","BPSOSQC",9,0)
 N SUB S SUB=$P("OPSITE^",U,ABSBSDIV) Q:SUB=""  ; which list to check
"RTN","BPSOSQC",10,0)
 N X S X=0 F  S X=$O(^BPS(9002313.56,X)) Q:'X  D  Q:BPSHARM
"RTN","BPSOSQC",11,0)
 . Q:'$D(^BPS(9002313.56,X,SUB,"B",ABSBPDIV))
"RTN","BPSOSQC",12,0)
 . Q:'$$BPSACTV^BPSUTIL(X)
"RTN","BPSOSQC",13,0)
 . N Y S Y=$O(^BPS(9002313.56,X,SUB,"B",ABSBPDIV,0))
"RTN","BPSOSQC",14,0)
 . S BPSHARM=X
"RTN","BPSOSQC",15,0)
 Q
"RTN","BPSOSQC",16,0)
GETDIV ;EP - Var setup: Given ABSBRXI, ABSBRXR, Set ABSBPDIV, ABSBSDIV
"RTN","BPSOSQC",17,0)
 S (ABSBSDIV,ABSBPDIV)=0 N X1,X
"RTN","BPSOSQC",18,0)
 I ABSBRXR D  ; if refill, get the (PRESCRIPTION,REFILL DATE,DIVISION)
"RTN","BPSOSQC",19,0)
 . S X=$P($G(^PSRX(ABSBRXI,1,ABSBRXR,0)),U,9)
"RTN","BPSOSQC",20,0)
 E  I ABSBRXI D  ; if not refill, get the (PRESCRIPTION,DIVISION)
"RTN","BPSOSQC",21,0)
 . S X=$P($G(^PSRX(ABSBRXI,2)),U,9)
"RTN","BPSOSQC",22,0)
 E  Q  ; must be a supply item - no prescription file entry
"RTN","BPSOSQC",23,0)
 ;       for supply item, leave division as 0, it's okay
"RTN","BPSOSQC",24,0)
 S ABSBPDIV=X ;$P($G(^PS(59,ABSBPDIV,0)),U,6) points to institution
"RTN","BPSOSQC",25,0)
 S ABSBSDIV=1 ; file 59 is where this points
"RTN","BPSOSQC",26,0)
 ;   $P(^PS(59,ABSBPDIV,"INI"),U) points to related institution
"RTN","BPSOSQC",27,0)
 I 'ABSBPDIV D  Q
"RTN","BPSOSQC",28,0)
 .D LOG^BPSOSL("DIVISION - Incorrect or missing for "_ABSBRXI_","_ABSBRXR) Q
"RTN","BPSOSQC",29,0)
 ; and a lot of early ANMC complexity deleted
"RTN","BPSOSQC",30,0)
 Q
"RTN","BPSOSQC",31,0)
VISIT ;EP -  Var setup:  pointers ^AUPNVSIT(ABSBVISI and ^AUPNVMED(VMEDDFN
"RTN","BPSOSQC",32,0)
 ; We assume that the visit is already created,
"RTN","BPSOSQC",33,0)
 ; we assume that the prescription is already entered,
"RTN","BPSOSQC",34,0)
 ; we assume that the PCC link is already created.
"RTN","BPSOSQC",35,0)
 ; Isn't VMEDDFN required for us?  Or is the prescription # good enough?
"RTN","BPSOSQC",36,0)
 ;  (have to look at claim assembly code to know for sure)
"RTN","BPSOSQC",37,0)
 ; ANMC tally as of 03/10/2000 5:15PM EST:
"RTN","BPSOSQC",38,0)
 ;   4675 found via PCC link;  0 found by date@12;  2 visits created
"RTN","BPSOSQC",39,0)
 ; So we don't really need or want all that extra baggage, do we?
"RTN","BPSOSQC",40,0)
 S ABSBVISI="",VMEDDFN=""
"RTN","BPSOSQC",41,0)
 N X
"RTN","BPSOSQC",42,0)
VIS1 ;get PCC link for last refill, if any; otherwise for first fill
"RTN","BPSOSQC",43,0)
 N LINKSRC,PCCLINK,RESULT
"RTN","BPSOSQC",44,0)
 ; Start by getting the appropriate PCC link
"RTN","BPSOSQC",45,0)
 I ABSBRXR D
"RTN","BPSOSQC",46,0)
 . S PCCLINK=$P($G(^PSRX(ABSBRXI,1,ABSBRXR,999999911)),U) ;refill
"RTN","BPSOSQC",47,0)
 . S LINKSRC="#"_ABSBRXR
"RTN","BPSOSQC",48,0)
 E  D
"RTN","BPSOSQC",49,0)
 . S PCCLINK=$P($G(^PSRX(ABSBRXI,999999911)),U) ;first fill
"RTN","BPSOSQC",50,0)
 . S LINKSRC="#0"
"RTN","BPSOSQC",51,0)
 S RESULT="VISIT - PCC LINK "_LINKSRC_"->"
"RTN","BPSOSQC",52,0)
VIS2 I PCCLINK D  ; yes, a PCC link was found
"RTN","BPSOSQC",53,0)
 .S VMEDDFN=PCCLINK ; remember IEN into V MEDICATION
"RTN","BPSOSQC",54,0)
 I 'ABSBVISI S RESULT=RESULT_":FAILURE"
"RTN","BPSOSQC",55,0)
 D LOG^BPSOSL(RESULT)
"RTN","BPSOSQC",56,0)
 D INCSTAT^BPSOSUD("V",$S(ABSBVISI:1,1:2)) ; 1 success, 2 failure
"RTN","BPSOSQC",57,0)
 Q
"RTN","BPSOSQC",58,0)
 ; - - - - - - - - - - - - -
"RTN","BPSPHAR")
0^28^B1377330
"RTN","BPSPHAR",1,0)
BPSPHAR ;BHAM ISC/BEE - ECME MGR PHAR OPTION ;14-FEB-05
"RTN","BPSPHAR",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSPHAR",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","BPSPHAR",4,0)
 ;
"RTN","BPSPHAR",5,0)
 ;This routine is called by the [BPS SETUP PHARMACY] menu option. It updates
"RTN","BPSPHAR",6,0)
 ;several fields in the [BPS PHARMACIES] file.
"RTN","BPSPHAR",7,0)
 ;
"RTN","BPSPHAR",8,0)
 Q
"RTN","BPSPHAR",9,0)
 ;
"RTN","BPSPHAR",10,0)
EN N D0,DA,DI,DIC,DLAYGO,DIE,DIRUT,DQ,DR,DTOUT,DUOUT,X,Y
"RTN","BPSPHAR",11,0)
 ;
"RTN","BPSPHAR",12,0)
 ;First select the pharmacy or enter a new one
"RTN","BPSPHAR",13,0)
 W !! S DIC(0)="QEALM",(DLAYGO,DIC)=9002313.56,DIC("A")="Select BPS PHARMACIES NAME: "
"RTN","BPSPHAR",14,0)
 D ^DIC
"RTN","BPSPHAR",15,0)
 ;
"RTN","BPSPHAR",16,0)
 ;Check for "^", timeout, or blank entry
"RTN","BPSPHAR",17,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1)!($G(Y)=-1) Q
"RTN","BPSPHAR",18,0)
 ;
"RTN","BPSPHAR",19,0)
 ;Pull internal entry
"RTN","BPSPHAR",20,0)
 S DA=$P($G(Y),U) Q:'$G(Y)
"RTN","BPSPHAR",21,0)
 ;
"RTN","BPSPHAR",22,0)
 ; Display the BPS Pharmacy name, NCPDP #, and NPI
"RTN","BPSPHAR",23,0)
 W !!,"NAME: ",$P($G(^BPS(9002313.56,DA,0)),U,1)
"RTN","BPSPHAR",24,0)
 W !,"NCPDP #: ",$P($G(^BPS(9002313.56,DA,0)),U,2)
"RTN","BPSPHAR",25,0)
 W !,"STATUS: ",$$GET1^DIQ(9002313.56,DA,.1,"E")
"RTN","BPSPHAR",26,0)
 ;
"RTN","BPSPHAR",27,0)
 ;Now edit OUTPATIENT SITE, CMOP SWITCH, AUTO-REVERSE PARAMETER, and the DEFAULT DEA #
"RTN","BPSPHAR",28,0)
 S DIE=9002313.56
"RTN","BPSPHAR",29,0)
 S DR="13800;1;.09;.03"
"RTN","BPSPHAR",30,0)
 S DR(2,9002313.5601)=".01"
"RTN","BPSPHAR",31,0)
 D ^DIE
"RTN","BPSPHAR",32,0)
 ;
"RTN","BPSPHAR",33,0)
 Q
"RTN","BPSREOP")
0^2^B3927200
"RTN","BPSREOP",1,0)
BPSREOP ;BHAM ISC/SS - REOPEN CLOSED CLAIMS ;05-APR-05
"RTN","BPSREOP",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**3**;JUN 2004;Build 20
"RTN","BPSREOP",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","BPSREOP",4,0)
 ;Reopen closed claims
"RTN","BPSREOP",5,0)
 ;Q
"RTN","BPSREOP",6,0)
EN1 ;
"RTN","BPSREOP",7,0)
 N BPDFN,BPSTRT,BPEND
"RTN","BPSREOP",8,0)
 W @IOF
"RTN","BPSREOP",9,0)
 I $$WHATTODO(.BPDFN,.BPSTRT,.BPEND)<0 Q
"RTN","BPSREOP",10,0)
 ;
"RTN","BPSREOP",11,0)
EN ; -- main entry point for BPS LSTMN ECME REOPEN
"RTN","BPSREOP",12,0)
 N VALMAR,VALMBCK,VALMCNT,VALMHDR,X
"RTN","BPSREOP",13,0)
 D EN^VALM("BPS LSTMN ECME REOPEN")
"RTN","BPSREOP",14,0)
 Q
"RTN","BPSREOP",15,0)
 ;
"RTN","BPSREOP",16,0)
HDR ; -- header code
"RTN","BPSREOP",17,0)
 ;S VALMHDR(1)="This is a test header for BPS LSTMN ECME REOPEN."
"RTN","BPSREOP",18,0)
 ;S VALMHDR(2)="This is the second line"
"RTN","BPSREOP",19,0)
 Q
"RTN","BPSREOP",20,0)
 ;
"RTN","BPSREOP",21,0)
INIT ; -- init variables and list array
"RTN","BPSREOP",22,0)
 N BPTMPGL,Y
"RTN","BPSREOP",23,0)
 ;ask what patient and what is date range
"RTN","BPSREOP",24,0)
 I ('$D(BPDFN))!('$D(BPSTRT))!('$D(BPEND)) W !,"BPDFN,BPSTRT,BPEND need to be defined! " Q
"RTN","BPSREOP",25,0)
 D COLLECT^BPSREOP1(BPDFN,BPSTRT,BPEND)
"RTN","BPSREOP",26,0)
 S VALMHDR(1)="PATIENT: "_$$PATINF^BPSREOP1(BPDFN)_"   Closed claims from "_$$FORMDATE^BPSSCRU6(BPSTRT,3)_" to "_$$FORMDATE^BPSSCRU6(BPEND,3)
"RTN","BPSREOP",27,0)
 Q
"RTN","BPSREOP",28,0)
 ;
"RTN","BPSREOP",29,0)
HELP ; -- help code
"RTN","BPSREOP",30,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","BPSREOP",31,0)
 Q
"RTN","BPSREOP",32,0)
 ;
"RTN","BPSREOP",33,0)
EXIT ; -- exit code
"RTN","BPSREOP",34,0)
 Q
"RTN","BPSREOP",35,0)
 ;
"RTN","BPSREOP",36,0)
EXPND ; -- expand code
"RTN","BPSREOP",37,0)
 Q
"RTN","BPSREOP",38,0)
 ;
"RTN","BPSREOP",39,0)
 ;prompts the user to select patient , start and end dates
"RTN","BPSREOP",40,0)
 ;input/output (by reference):
"RTN","BPSREOP",41,0)
 ;BPDFN - patient ien #2
"RTN","BPSREOP",42,0)
 ;BPSTRT - start date (fileman format)
"RTN","BPSREOP",43,0)
 ;BPEND - end date (fileman format)
"RTN","BPSREOP",44,0)
 ;Return value:
"RTN","BPSREOP",45,0)
 ;-1 quit
"RTN","BPSREOP",46,0)
 ; 1 - continue (okay)_
"RTN","BPSREOP",47,0)
 ;
"RTN","BPSREOP",48,0)
WHATTODO(BPDFN,BPSTRT,BPEND) ;
"RTN","BPSREOP",49,0)
 S BPDFN=$$PROMPT^BPSSCRCV("P^DPT(","Select PATIENT NAME","")
"RTN","BPSREOP",50,0)
 I BPDFN<0 Q -1
"RTN","BPSREOP",51,0)
 S BPSTRT=$$ASKDATE^BPSSCRU6("START WITH DATE:","TODAY")
"RTN","BPSREOP",52,0)
 I BPSTRT<0 Q -1
"RTN","BPSREOP",53,0)
 F  S BPEND=$$ASKDATE^BPSSCRU6("GO TO DATE:","TODAY") Q:(BPEND<0)!(BPEND'<BPSTRT)  D
"RTN","BPSREOP",54,0)
 . W !,"The GO TO date cannot precede the START date."
"RTN","BPSREOP",55,0)
 I BPEND<0 Q -1
"RTN","BPSREOP",56,0)
 Q 1
"RTN","BPSREOP",57,0)
 ;
"RTN","BPSREOP1")
0^3^B27740075
"RTN","BPSREOP1",1,0)
BPSREOP1 ;BHAM ISC/SS - REOPEN CLOSED CLAIMS ;05-APR-05
"RTN","BPSREOP1",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**3**;JUN 2004;Build 20
"RTN","BPSREOP1",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","BPSREOP1",4,0)
 ;Reopen closed claims
"RTN","BPSREOP1",5,0)
 Q
"RTN","BPSREOP1",6,0)
 ;
"RTN","BPSREOP1",7,0)
 ;
"RTN","BPSREOP1",8,0)
 ;create an ^TMP for the list manager
"RTN","BPSREOP1",9,0)
 ;
"RTN","BPSREOP1",10,0)
COLLECT(BPDFN,BPSTRT,BPEND) ;
"RTN","BPSREOP1",11,0)
 D CLEAN^VALM10
"RTN","BPSREOP1",12,0)
 N LINE
"RTN","BPSREOP1",13,0)
 N BPIEN02,BPIEN59
"RTN","BPSREOP1",14,0)
 S LINE=1
"RTN","BPSREOP1",15,0)
 S BPIEN59=0
"RTN","BPSREOP1",16,0)
 F  S BPIEN59=$O(^BPST("AC",BPDFN,BPIEN59)) Q:+BPIEN59=0  D
"RTN","BPSREOP1",17,0)
 . I $P($G(^BPST(BPIEN59,12)),U,2)<BPSTRT Q
"RTN","BPSREOP1",18,0)
 . I $P($G(^BPST(BPIEN59,12)),U,2)>BPEND Q
"RTN","BPSREOP1",19,0)
 . S BPIEN02=+$P($G(^BPST(BPIEN59,0)),U,4)
"RTN","BPSREOP1",20,0)
 . ;if the is no BPS CLAIMS - error
"RTN","BPSREOP1",21,0)
 . Q:BPIEN02=0
"RTN","BPSREOP1",22,0)
 . ;if NOT closed
"RTN","BPSREOP1",23,0)
 . I +$P($G(^BPSC(BPIEN02,900)),U)=0 Q
"RTN","BPSREOP1",24,0)
 . D SET^VALM10(LINE,$$LJ^BPSSCR02(LINE,6)_$$CLAIMINF(BPIEN59),BPIEN59)
"RTN","BPSREOP1",25,0)
 . S LINE=LINE+1
"RTN","BPSREOP1",26,0)
 S VALMCNT=LINE-1 ;"of PAGE" fix - VALMCNT should be EXACT number of lines on the screen 
"RTN","BPSREOP1",27,0)
 Q
"RTN","BPSREOP1",28,0)
 ;claim info for list manager screen 
"RTN","BPSREOP1",29,0)
CLAIMINF(BP59) ;*/
"RTN","BPSREOP1",30,0)
 N BPX,BPX1
"RTN","BPSREOP1",31,0)
 S BPX1=$$RXREF^BPSSCRU2(BP59)
"RTN","BPSREOP1",32,0)
 S BPX=$$LJ^BPSSCR02($$DRGNAME^BPSSCRU2(BP59),17)_"  "_$$LJ^BPSSCR02($$NDC^BPSSCRU2(+BPX1,+$P(BPX1,U,2)),13)_" "
"RTN","BPSREOP1",33,0)
 S BPX=BPX_$$LJ^BPSSCR02($$FILLDATE^BPSSCRRS(+BPX1,+$P(BPX1,U,2)),5)_" "
"RTN","BPSREOP1",34,0)
 S BPX=BPX_$$LJ^BPSSCR02($$RXNUM^BPSSCRU2(+BPX1),11)_" "_+$P(BPX1,U,2)_"/"
"RTN","BPSREOP1",35,0)
 S BPX=BPX_$$LJ^BPSSCR02($$ECMENUM^BPSSCRU2(BP59),7)_" "_$$MWCNAME^BPSSCRU2($$GETMWC^BPSSCRU2(BP59))_"   "
"RTN","BPSREOP1",36,0)
 S BPX=BPX_$$RTBB^BPSSCRU2(BP59)_" "_$$RXST^BPSSCRU2(BP59)_"/"_$$RL^BPSSCRU2(BP59)
"RTN","BPSREOP1",37,0)
 Q BPX
"RTN","BPSREOP1",38,0)
 ;
"RTN","BPSREOP1",39,0)
 ;patient info for header
"RTN","BPSREOP1",40,0)
PATINF(BPDFN) ;*/
"RTN","BPSREOP1",41,0)
 N X
"RTN","BPSREOP1",42,0)
 S X=$E($$PATNAME(BPDFN),1,22)_" "_$$SSN4^BPSSCRU2(BPDFN)
"RTN","BPSREOP1",43,0)
 Q $$LJ^BPSSCR02(X,29) ;name
"RTN","BPSREOP1",44,0)
 ;
"RTN","BPSREOP1",45,0)
 ;------------ patient's name
"RTN","BPSREOP1",46,0)
PATNAME(BPDFN) ;
"RTN","BPSREOP1",47,0)
 Q $E($P($G(^DPT(BPDFN,0)),U),1,30)
"RTN","BPSREOP1",48,0)
 ;
"RTN","BPSREOP1",49,0)
SELECT ;
"RTN","BPSREOP1",50,0)
 I VALMCNT<1 D  Q
"RTN","BPSREOP1",51,0)
 . W !,"No claims to select." D PAUSE^VALM1 S VALMBCK="R"
"RTN","BPSREOP1",52,0)
 N BP59,BPQ
"RTN","BPSREOP1",53,0)
 D FULL^VALM1
"RTN","BPSREOP1",54,0)
 S BP59=0
"RTN","BPSREOP1",55,0)
 S BPQ=0
"RTN","BPSREOP1",56,0)
 F  S BPLINE=$$PROMPT("Select item","","A") D  Q:BPQ
"RTN","BPSREOP1",57,0)
 . I BPLINE="^" S BPQ=1 Q
"RTN","BPSREOP1",58,0)
 . I '(BPLINE?1N.N) W !,"Please select a SINGLE Rx Line Item." Q
"RTN","BPSREOP1",59,0)
 . S BP59=+$$GET59(+BPLINE) I BP59>0 S BPQ=1 Q
"RTN","BPSREOP1",60,0)
 . W !,"Please select a VALID Rx Line Item."
"RTN","BPSREOP1",61,0)
 I BPLINE="^" S VALMBCK="R" Q
"RTN","BPSREOP1",62,0)
 I BP59=0 S VALMBCK="R" W !,"Invalid selection." D PAUSE^VALM1 Q
"RTN","BPSREOP1",63,0)
 I $$SELCLAIM(BP59)<1 S VALMBCK="R" Q
"RTN","BPSREOP1",64,0)
 ;D RE^VALM4
"RTN","BPSREOP1",65,0)
 D REDRAW
"RTN","BPSREOP1",66,0)
 S VALMBCK="R"
"RTN","BPSREOP1",67,0)
 Q
"RTN","BPSREOP1",68,0)
 ;
"RTN","BPSREOP1",69,0)
GET59(BPLINE) ;
"RTN","BPSREOP1",70,0)
 Q +$O(^TMP("BPSREOP",$J,"VALM","IDX",BPLINE,0))
"RTN","BPSREOP1",71,0)
 ;
"RTN","BPSREOP1",72,0)
 ;display selected claim information
"RTN","BPSREOP1",73,0)
SELCLAIM(BP59) ;
"RTN","BPSREOP1",74,0)
 D FULL^VALM1
"RTN","BPSREOP1",75,0)
 W @IOF
"RTN","BPSREOP1",76,0)
 N BPX,BPX1,BPDFN,BPIEN02,BPCLDATA,BPCOMM,BPRETV,BPREOPDT,BPQ
"RTN","BPSREOP1",77,0)
 S BPDFN=+$P($G(^BPST(BP59,0)),U,6)
"RTN","BPSREOP1",78,0)
 S BPX1=$$RXREF^BPSSCRU2(BP59)
"RTN","BPSREOP1",79,0)
 W !,?1,$$LJ^BPSSCR02("PATIENT NAME: "_$$PATNAME(BPDFN),30)
"RTN","BPSREOP1",80,0)
 W ?33,$$LJ^BPSSCR02("RX#: "_$$RXNUM^BPSSCRU2(+BPX1)_" "_$P(BPX1,U,2),22)
"RTN","BPSREOP1",81,0)
 W ?57,$$LJ^BPSSCR02("DRUG: "_$$DRGNAME^BPSSCRU2(BP59),22)
"RTN","BPSREOP1",82,0)
 ;ien in BPS CLAIMS
"RTN","BPSREOP1",83,0)
 S BPIEN02=+$P($G(^BPST(BP59,0)),U,4)
"RTN","BPSREOP1",84,0)
 I BPIEN02=0 W !,"BPS CLAIMS file error!" D PAUSE^VALM1 Q -1
"RTN","BPSREOP1",85,0)
 ;Close info
"RTN","BPSREOP1",86,0)
 S BPCLDATA=$G(^BPSC(BPIEN02,900))
"RTN","BPSREOP1",87,0)
 ;if the is no BPS CLAIMS - error
"RTN","BPSREOP1",88,0)
 W !,?3,"CLOSED  ",$$FORMDATE^BPSSCRU6(+$P($G(^BPSC(BPIEN02,900)),U,2),2)
"RTN","BPSREOP1",89,0)
 W !,?4,"ECME#: "_+BPX1_", FILL DATE: "_$$FORMDATE^BPSSCRU6($$DOSDATE^BPSSCRRS(+BPX1,+$P(BPX1,U,2)),2)
"RTN","BPSREOP1",90,0)
 W ", RELEASE DATE: "_$$FORMDATE^BPSSCRU6($$RELDATE^BPSSCRU6(+BPX1,+$P(BPX1,U,2)),2)
"RTN","BPSREOP1",91,0)
 W !,?4,"PLAN: ",$$PLANNAME^BPSSCRU6(BP59)," INSURANCE: ",$$INSNAME^BPSSCRU6(BP59)
"RTN","BPSREOP1",92,0)
 W !,?4,"CLOSE REASON: ",$$CLREASON^BPSSCRU6(+$P(BPCLDATA,U,4))
"RTN","BPSREOP1",93,0)
 W !,?4,"DROP TO PAPER: ",$S(+$P(BPCLDATA,U,5)=1:"YES",1:"NO")
"RTN","BPSREOP1",94,0)
 W !,?4,"CLOSE USER: ",$P($G(^VA(200,+$P(BPCLDATA,U,3),0)),U)
"RTN","BPSREOP1",95,0)
 W !!,"You have selected the CLOSED electronic claim listed above.",!
"RTN","BPSREOP1",96,0)
 S BPCOMM=$$PROMPT("REOPEN COMMENTS","","F",1,40)
"RTN","BPSREOP1",97,0)
 Q:BPCOMM["^" 0
"RTN","BPSREOP1",98,0)
 S BPQ=$$YESNO^BPSSCRRS("ARE YOU SURE YOU WANT TO RE-OPEN THIS CLAIM? (Y/N)","No")
"RTN","BPSREOP1",99,0)
 Q:BPQ<1 0
"RTN","BPSREOP1",100,0)
 D 
"RTN","BPSREOP1",101,0)
 . N %,%H,%I,X
"RTN","BPSREOP1",102,0)
 . D NOW^%DTC
"RTN","BPSREOP1",103,0)
 . S BPREOPDT=%
"RTN","BPSREOP1",104,0)
 S BPRETV=$$REOPEN^BPSBUTL(BP59,BPIEN02,BPREOPDT,+DUZ,BPCOMM)
"RTN","BPSREOP1",105,0)
 W !,$P(BPRETV,U,2),!
"RTN","BPSREOP1",106,0)
 W !,"1 claim has been reopened.",!
"RTN","BPSREOP1",107,0)
 D PAUSE^VALM1
"RTN","BPSREOP1",108,0)
 Q 1
"RTN","BPSREOP1",109,0)
 ;
"RTN","BPSREOP1",110,0)
REDRAW ;
"RTN","BPSREOP1",111,0)
 N BPARR
"RTN","BPSREOP1",112,0)
 D CLEAN^VALM10
"RTN","BPSREOP1",113,0)
 D COLLECT^BPSREOP1(BPDFN,BPSTRT,BPEND)
"RTN","BPSREOP1",114,0)
 S VALMBCK="R"
"RTN","BPSREOP1",115,0)
 Q
"RTN","BPSREOP1",116,0)
 ;input:
"RTN","BPSREOP1",117,0)
 ;BPSPROM - prompt text
"RTN","BPSREOP1",118,0)
 ;BPSDFVL - default value (optional)
"RTN","BPSREOP1",119,0)
 ;BPMODE - N- to enter numbers, F - free text, A - free text w/o limitations
"RTN","BPSREOP1",120,0)
 ;returns:
"RTN","BPSREOP1",121,0)
 ; "response"
"RTN","BPSREOP1",122,0)
 ; or "^" for quit
"RTN","BPSREOP1",123,0)
PROMPT(BPSPROM,BPSDFVL,BPMODE,MINLEN,MAXLEN) ;
"RTN","BPSREOP1",124,0)
 N IR,X,Y,DIRUT,DIR
"RTN","BPSREOP1",125,0)
 I BPMODE="N" S DIR(0)="N^::2"
"RTN","BPSREOP1",126,0)
 I BPMODE="A" S DIR(0)="F^::2"
"RTN","BPSREOP1",127,0)
 I BPMODE="F" S DIR(0)="F^"_MINLEN_":"_MAXLEN_":2^K:(X?1"" ""."" "") X"
"RTN","BPSREOP1",128,0)
 S DIR("A")=BPSPROM
"RTN","BPSREOP1",129,0)
 I $L($G(BPSDFVL))>0 S DIR("B")=$G(BPSDFVL)
"RTN","BPSREOP1",130,0)
 D ^DIR I $D(DIRUT) Q "^"
"RTN","BPSREOP1",131,0)
 I Y["^" Q "^"
"RTN","BPSREOP1",132,0)
 Q Y
"RTN","BPSREOP1",133,0)
 ;
"RTN","BPSREOP1",134,0)
 ;Update reopen record in BPS CLAIM
"RTN","BPSREOP1",135,0)
 ;Input:
"RTN","BPSREOP1",136,0)
 ; BP02 - ien in BPS CLAIMS file
"RTN","BPSREOP1",137,0)
 ; BPCLOSED - value for CLOSED field
"RTN","BPSREOP1",138,0)
 ; BPREOPDT - reopen date/time 
"RTN","BPSREOP1",139,0)
 ; BPDUZ - user DUZ (#200 ien)
"RTN","BPSREOP1",140,0)
 ; BPCOMM - reopen comment text
"RTN","BPSREOP1",141,0)
 ;Output:
"RTN","BPSREOP1",142,0)
 ; 0^message_error - error
"RTN","BPSREOP1",143,0)
 ; 1 - success
"RTN","BPSREOP1",144,0)
UPDREOP(BP02,BPCLOSED,BPREOPDT,BPDUZ,BPCOMM) ;
"RTN","BPSREOP1",145,0)
 ;Now update ECME database
"RTN","BPSREOP1",146,0)
 N RECIENS,BPDA,BPLCK,ERRARR
"RTN","BPSREOP1",147,0)
 S RECIENS=BP02_","
"RTN","BPSREOP1",148,0)
 S BPDA(9002313.02,RECIENS,901)=BPCLOSED ;CLOSED = "NO"
"RTN","BPSREOP1",149,0)
 S BPDA(9002313.02,RECIENS,906)=BPREOPDT ;reopen date/time 
"RTN","BPSREOP1",150,0)
 S BPDA(9002313.02,RECIENS,907)=+BPDUZ ;user
"RTN","BPSREOP1",151,0)
 S BPDA(9002313.02,RECIENS,908)=BPCOMM ;comment
"RTN","BPSREOP1",152,0)
 L +^BPST(9002313.02,+BP02):10
"RTN","BPSREOP1",153,0)
 S BPLCK=$T
"RTN","BPSREOP1",154,0)
 I 'BPLCK Q "0^Locked record"  ;quit
"RTN","BPSREOP1",155,0)
 D FILE^DIE("","BPDA","ERRARR")
"RTN","BPSREOP1",156,0)
 I BPLCK L -^BPST(9002313.02,+BP02)
"RTN","BPSREOP1",157,0)
 I $D(ERRARR) Q "0^"_ERRARR("DIERR",1,"TEXT",1)
"RTN","BPSREOP1",158,0)
 Q 1
"RTN","BPSREOP1",159,0)
 ;
"RTN","BPSRES")
0^8^B50532069
"RTN","BPSRES",1,0)
BPSRES ;BHAM ISC/BEE - ECME SCREEN RESUBMIT W/EDITS ;19-MAY-06
"RTN","BPSRES",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**3**;JUN 2004;Build 20
"RTN","BPSRES",3,0)
 ;
"RTN","BPSRES",4,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","BPSRES",5,0)
 Q
"RTN","BPSRES",6,0)
 ;
"RTN","BPSRES",7,0)
 ;ECME Resubmit w/EDITS Protocol (Hidden) - Called by [BPS USER SCREEN]
"RTN","BPSRES",8,0)
 ;
"RTN","BPSRES",9,0)
RESED N BPSEL
"RTN","BPSRES",10,0)
 ;
"RTN","BPSRES",11,0)
 I '$D(@(VALMAR)) G XRESED
"RTN","BPSRES",12,0)
 D FULL^VALM1
"RTN","BPSRES",13,0)
 ;
"RTN","BPSRES",14,0)
 ;Select the claim to resubmit
"RTN","BPSRES",15,0)
 W !,"Enter the line number for the claim to be resubmitted."
"RTN","BPSRES",16,0)
 S BPSEL=$$ASKLINE("Select item","Please select a SINGLE claim only when using the Resubmit w/EDITS action option.")
"RTN","BPSRES",17,0)
 I BPSEL<1 S VALMBCK="R" G XRESED
"RTN","BPSRES",18,0)
 ;
"RTN","BPSRES",19,0)
 ;Attempt to resubmit the claim, update the content of the screen, and display it
"RTN","BPSRES",20,0)
 ;only if claim was submitted successfully
"RTN","BPSRES",21,0)
 I $$DOSELCTD(BPSEL) D REDRAW^BPSSCRUD("Updating screen for resubmitted claim...")
"RTN","BPSRES",22,0)
 E  S VALMBCK="R"
"RTN","BPSRES",23,0)
 ;
"RTN","BPSRES",24,0)
XRESED Q
"RTN","BPSRES",25,0)
 ;
"RTN","BPSRES",26,0)
 ;Attempt to Edit and Resubmit the Selected Claim
"RTN","BPSRES",27,0)
 ;
"RTN","BPSRES",28,0)
 ;   Input Value -> BPRXI - Entry with ptr to BPS TRANSACTION file
"RTN","BPSRES",29,0)
 ;
"RTN","BPSRES",30,0)
 ;  Return Value -> 0 - Claim was not resubmitted
"RTN","BPSRES",31,0)
 ;                  1 - Claim was resubmitted
"RTN","BPSRES",32,0)
 ;
"RTN","BPSRES",33,0)
DOSELCTD(BPRXI) N BP02,BP59,BPBILL,BPCLTOT,BPDFN,BPDOSDT,BPOVRIEN,BPQ,BPRXIEN,BPRXR,BPSTATUS,BPUPDFLG
"RTN","BPSRES",34,0)
 S (BPQ)=""
"RTN","BPSRES",35,0)
 S (BPCLTOT,BPUPDFLG)=0
"RTN","BPSRES",36,0)
 ;
"RTN","BPSRES",37,0)
 ;Pull the BPS TRANSACTION/BPS CLAIMS entries
"RTN","BPSRES",38,0)
 S BP59=$P(BPRXI,U,4) I BP59="" W !!,"No Initial Claim Submission Found - Data Elements are NOT Editable for Re-Submission",! G XRES
"RTN","BPSRES",39,0)
 S BP02=+$P($G(^BPST(BP59,0)),U,4) I 'BP02 W !!,"No Initial Claim Submission Found - Data Elements are NOT Editable for Re-Submission",! G XRES
"RTN","BPSRES",40,0)
 ;
"RTN","BPSRES",41,0)
 ;Write Form Feed
"RTN","BPSRES",42,0)
 W @IOF
"RTN","BPSRES",43,0)
 ;
"RTN","BPSRES",44,0)
 ;Display selected claim and ask to submit
"RTN","BPSRES",45,0)
 S BPDFN=+$P($G(^BPST(BP59,0)),U,6)
"RTN","BPSRES",46,0)
 W !,"You've chosen to RESUBMIT the following prescription for "_$E($$PATNAME^BPSSCRU2(BPDFN),1,13)
"RTN","BPSRES",47,0)
 W !,@VALMAR@(+$P(BPRXI,U,5),0)
"RTN","BPSRES",48,0)
 S BPQ=$$YESNO^BPSSCRRS("Are you sure?(Y/N)")
"RTN","BPSRES",49,0)
 I BPQ'=1 S BPQ="^" G XRES
"RTN","BPSRES",50,0)
 ;
"RTN","BPSRES",51,0)
 ;Check to make sure claim can be Resubmitted w/EDITS
"RTN","BPSRES",52,0)
 S BPRXIEN=$P(BP59,".")
"RTN","BPSRES",53,0)
 S BPRXR=+$E($P(BP59,".",2),1,4)
"RTN","BPSRES",54,0)
 I $D(^PSRX($P(BP59,".",1),"D")) W !!,"The claim: ",!,@VALMAR@(+$P(BPRXI,U,5),0),!,"cannot be Resubmitted w/EDITS because it has been deleted in Pharmacy.",! G XRES
"RTN","BPSRES",55,0)
 S BPSTATUS=$P($$CLAIMST^BPSSCRU3(BP59),U)
"RTN","BPSRES",56,0)
 I BPSTATUS["IN PROGRESS" W !!,"The claim: ",!,@VALMAR@(+$P(BPRXI,U,5),0),!,"is still In Progress and cannot be Resubmitted w/EDITS",! G XRES
"RTN","BPSRES",57,0)
 I BPSTATUS'["E REJECTED" W !!,"The claim: ",!,@VALMAR@(+$P(BPRXI,U,5),0),!,"is NOT Rejected and cannot be Resubmitted w/EDITS",! G XRES
"RTN","BPSRES",58,0)
 ;
"RTN","BPSRES",59,0)
 ;Prompt for the EDIT Information
"RTN","BPSRES",60,0)
 S BPOVRIEN=$$PROMPTS(BP59,BP02) I BPOVRIEN=-1 G XRES
"RTN","BPSRES",61,0)
 ;
"RTN","BPSRES",62,0)
 ;Retrieve DOS
"RTN","BPSRES",63,0)
 S BPDOSDT=$$DOSDATE^BPSSCRRS(BPRXIEN,BPRXR)
"RTN","BPSRES",64,0)
 ;
"RTN","BPSRES",65,0)
 ;Resubmit Claim
"RTN","BPSRES",66,0)
 S BPBILL=$$EN^BPSNCPDP(BPRXIEN,BPRXR,BPDOSDT,"ERES","","ECME RESUBMIT","",BPOVRIEN)
"RTN","BPSRES",67,0)
 ;
"RTN","BPSRES",68,0)
 ;Print Return Value Message
"RTN","BPSRES",69,0)
 W !!
"RTN","BPSRES",70,0)
 W:+BPBILL>0 "Not Processed:",!,"  "
"RTN","BPSRES",71,0)
 W $P(BPBILL,U,2)
"RTN","BPSRES",72,0)
 ;
"RTN","BPSRES",73,0)
 ;0 Prescription/Fill successfully submitted to ECME for claims processing
"RTN","BPSRES",74,0)
 ;1 ECME did not submit prescription/fill
"RTN","BPSRES",75,0)
 ;2 IB says prescription/fill is not ECME billable or the data returned from IB is not valid
"RTN","BPSRES",76,0)
 ;3 ECME closed the claim but did not submit it to the payer
"RTN","BPSRES",77,0)
 ;4 Unable to queue the ECME claim
"RTN","BPSRES",78,0)
 ;5 Invalid input
"RTN","BPSRES",79,0)
 ;
"RTN","BPSRES",80,0)
 I +BPBILL=0 D 
"RTN","BPSRES",81,0)
 . D ECMEACT^PSOBPSU1(+BPRXIEN,+BPRXR,"Claim resubmitted to 3rd party payer: ECME USER's SCREEN")
"RTN","BPSRES",82,0)
 . S BPUPDFLG=1,BPCLTOT=1
"RTN","BPSRES",83,0)
XRES I BPCLTOT W !,BPCLTOT," claim",$S(BPCLTOT'=1:"s have",1:" has")," been resubmitted.",!
"RTN","BPSRES",84,0)
 D PAUSE^VALM1
"RTN","BPSRES",85,0)
 Q BPUPDFLG
"RTN","BPSRES",86,0)
 ;
"RTN","BPSRES",87,0)
 ;Enter the EDIT information for the claim
"RTN","BPSRES",88,0)
 ;
"RTN","BPSRES",89,0)
 ;  Input Values -> BP59 - The BPS TRANSACTION entry
"RTN","BPSRES",90,0)
 ;                  BP02 - The BPS CLAIMS entry
"RTN","BPSRES",91,0)
 ;  Output Value -> BPQ  - -1 - The user chose to quit
"RTN","BPSRES",92,0)
 ;                         "" - The user completed the EDITS
"RTN","BPSRES",93,0)
PROMPTS(BP59,BP02) N %,BP300,BPFDA,BPFLD,BPOVRIEN,BPMED,BPMSG,BPPSNCD,BPPREAUT,BPQ,BPRELCD,DIC,DIR,DIROUT,DTOUT,DUOUT,X,Y
"RTN","BPSRES",94,0)
 ;
"RTN","BPSRES",95,0)
 S BPQ=""
"RTN","BPSRES",96,0)
 ;
"RTN","BPSRES",97,0)
 ;Pull Information from Claim
"RTN","BPSRES",98,0)
 S BP300=$G(^BPSC(BP02,300))
"RTN","BPSRES",99,0)
 S BPRELCD=$TR($E($P(BP300,U,6),3,99)," ")
"RTN","BPSRES",100,0)
 S BPPSNCD=$TR($E($P(BP300,U,3),3,99)," ")
"RTN","BPSRES",101,0)
 S BPPREAUT="",BPMED=0 F  S BPMED=$O(^BPSC(BP02,400,BPMED)) Q:'BPMED  D  I BPPREAUT]"" Q
"RTN","BPSRES",102,0)
 .S:BPPREAUT="" BPPREAUT=$TR($E($P($G(^BPSC(BP02,400,BPMED,460)),U,2),3,99)," ")
"RTN","BPSRES",103,0)
 ;
"RTN","BPSRES",104,0)
 W ! S DIR(0)="FO^1:1",DIR("A")="Relationship Code"
"RTN","BPSRES",105,0)
 S DIR("B")=BPRELCD
"RTN","BPSRES",106,0)
 K DIR("?")
"RTN","BPSRES",107,0)
 S DIR("?",1)="Select the relationship code that describes the relationship this patient has"
"RTN","BPSRES",108,0)
 S DIR("?",2)="to the holder of this insurance policy. The standard NCPDP Patient"
"RTN","BPSRES",109,0)
 S DIR("?",3)="Relationship Code list is shown below.  However, it is important to note"
"RTN","BPSRES",110,0)
 S DIR("?",4)="that some payers use their own set of codes for this field so the field"
"RTN","BPSRES",111,0)
 S DIR("?",5)="should be populated based upon the payer's expectations."
"RTN","BPSRES",112,0)
 S DIR("?",6)=" "
"RTN","BPSRES",113,0)
 S DIR("?",7)="Choose from:"
"RTN","BPSRES",114,0)
 S DIR("?",8)="  0   Not Specified"
"RTN","BPSRES",115,0)
 S DIR("?",9)="  1   Cardholder"
"RTN","BPSRES",116,0)
 S DIR("?",10)="  2   Spouse"
"RTN","BPSRES",117,0)
 S DIR("?",11)="  3   Child"
"RTN","BPSRES",118,0)
 S DIR("?")="  4   Other"
"RTN","BPSRES",119,0)
 D ^DIR
"RTN","BPSRES",120,0)
 I $G(DTOUT)!$G(DUOUT) S BPQ=-1 G XPROMPTS
"RTN","BPSRES",121,0)
 S BPRELCD=Y
"RTN","BPSRES",122,0)
 ;
"RTN","BPSRES",123,0)
 ;Person Code
"RTN","BPSRES",124,0)
 K DIR("?") S DIR(0)="FO^1:3",DIR("A")="Person Code",DIR("?")="Enter the Specific Person Code Assigned to the Patient by the Payer"
"RTN","BPSRES",125,0)
 S DIR("B")=BPPSNCD
"RTN","BPSRES",126,0)
 D ^DIR
"RTN","BPSRES",127,0)
 I $G(DTOUT)!$G(DUOUT) S BPQ=-1 G XPROMPTS
"RTN","BPSRES",128,0)
 S BPPSNCD=Y
"RTN","BPSRES",129,0)
 ;
"RTN","BPSRES",130,0)
 ;Pre-Authorization
"RTN","BPSRES",131,0)
 K DIR("?") S DIR(0)="FO^1:11",DIR("A")="Pre-Authorization",DIR("?")="Enter the Number Submitted by the Provider to Identify the Prior Authorization"
"RTN","BPSRES",132,0)
 S DIR("B")=BPPREAUT
"RTN","BPSRES",133,0)
 D ^DIR
"RTN","BPSRES",134,0)
 I $G(DTOUT)!$G(DUOUT) S BPQ=-1 G XPROMPTS
"RTN","BPSRES",135,0)
 S BPPREAUT=Y
"RTN","BPSRES",136,0)
 ;
"RTN","BPSRES",137,0)
 ;Ask to proceed
"RTN","BPSRES",138,0)
 W ! S BPQ=$$YESNO^BPSSCRRS("Are you sure?(Y/N)")
"RTN","BPSRES",139,0)
 I BPQ'=1 S BPQ=-1 G XPROMPTS
"RTN","BPSRES",140,0)
 ;
"RTN","BPSRES",141,0)
 ;Save into BPS NCPDP OVERRIDES (#9002313.511)
"RTN","BPSRES",142,0)
 S BPFDA(9002313.511,"+1,",.01)=BP59
"RTN","BPSRES",143,0)
 D NOW^%DTC
"RTN","BPSRES",144,0)
 S BPFDA(9002313.511,"+1,",.02)=%
"RTN","BPSRES",145,0)
 S BPFLD=$O(^BPSF(9002313.91,"B",303,"")) I BPFLD]"" S BPFDA(9002313.5111,"+2,+1,",.01)=BPFLD,BPFDA(9002313.5111,"+2,+1,",.02)=BPPSNCD
"RTN","BPSRES",146,0)
 S BPFLD=$O(^BPSF(9002313.91,"B",306,"")) I BPFLD]"" S BPFDA(9002313.5111,"+3,+1,",.01)=BPFLD,BPFDA(9002313.5111,"+3,+1,",.02)=BPRELCD
"RTN","BPSRES",147,0)
 S BPFLD=$O(^BPSF(9002313.91,"B",462,"")) I BPFLD]"" S BPFDA(9002313.5111,"+4,+1,",.01)=BPFLD,BPFDA(9002313.5111,"+4,+1,",.02)=BPPREAUT
"RTN","BPSRES",148,0)
 D UPDATE^DIE("","BPFDA","BPOVRIEN","BPMSG")
"RTN","BPSRES",149,0)
 ;
"RTN","BPSRES",150,0)
 I $D(BPMSG("DIERR")) W !!,"Could Not Save Override information into BPS NCPDP OVERRIDES FILES",! S BPQ=-1 G XPROMPTS
"RTN","BPSRES",151,0)
 ;
"RTN","BPSRES",152,0)
XPROMPTS S BPOVRIEN=$S(BPQ=-1:BPQ,$G(BPOVRIEN(1))]"":BPOVRIEN(1),1:-1)
"RTN","BPSRES",153,0)
 Q BPOVRIEN
"RTN","BPSRES",154,0)
 ;
"RTN","BPSRES",155,0)
 ;Prompt User for Claim to Resubmit (w/EDITS)
"RTN","BPSRES",156,0)
 ;
"RTN","BPSRES",157,0)
 ; Input values ->  BPROMPT - prompt string
"RTN","BPSRES",158,0)
 ;                 BPERRMES - the message to display when the user tries
"RTN","BPSRES",159,0)
 ;                           to make multi line selection (optional)
"RTN","BPSRES",160,0)
 ;                  Piece
"RTN","BPSRES",161,0)
 ;output values ->      1 - 1 = okay, <0 = errors, 0 = quit
"RTN","BPSRES",162,0)
 ;                      2 - patient ien #2
"RTN","BPSRES",163,0)
 ;                      3 - insurance ien #36
"RTN","BPSRES",164,0)
 ;                      4 - ptr to #9002313.59
"RTN","BPSRES",165,0)
 ;                      5 - 1st line for index(es) in LM "VALM" array
"RTN","BPSRES",166,0)
 ;                      6 - patient's index
"RTN","BPSRES",167,0)
 ;                      7 - claim's index
"RTN","BPSRES",168,0)
ASKLINE(BPROMPT,BPERRMES) ;
"RTN","BPSRES",169,0)
 N BPRET,BPCNT
"RTN","BPSRES",170,0)
 S BPRET="",BPCNT=0
"RTN","BPSRES",171,0)
 F  S BPRET=$$SELLINE^BPSSCRU4(BPROMPT,"C",VALMAR,"") Q:BPRET'<0  D
"RTN","BPSRES",172,0)
 . ;
"RTN","BPSRES",173,0)
 . I BPCNT<1 S BPCNT=BPCNT+1 W !
"RTN","BPSRES",174,0)
 . E  S BPCNT=0 D RE^VALM4
"RTN","BPSRES",175,0)
 . I BPRET=-1 W "Invalid line number" ; (invalid Patient summary line)"
"RTN","BPSRES",176,0)
 . I BPRET=-8 W $S($G(BPERRMES)]"":BPERRMES,1:" Invalid line number")
"RTN","BPSRES",177,0)
 . I BPRET=-4 W "Invalid line number" ; (invalid RX line)"
"RTN","BPSRES",178,0)
 . I BPRET=-2 W "Please select Patient's summary line."
"RTN","BPSRES",179,0)
 . I BPRET=-3 W "Please specify RX line."
"RTN","BPSRES",180,0)
 . I ",-1,-8,-4,-2,-3,"'[(","_BPRET_",") W "Incorrect format." ; Corrupted array (",BPRET,")"
"RTN","BPSRES",181,0)
 Q BPRET
"RTN","BPSRPT2")
0^31^B36670735
"RTN","BPSRPT2",1,0)
BPSRPT2 ;BHAM ISC/BEE - ECME REPORTS ;14-FEB-05
"RTN","BPSRPT2",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSRPT2",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","BPSRPT2",4,0)
 ;
"RTN","BPSRPT2",5,0)
 Q
"RTN","BPSRPT2",6,0)
 ;
"RTN","BPSRPT2",7,0)
 ;Save One Report Entry
"RTN","BPSRPT2",8,0)
 ;
"RTN","BPSRPT2",9,0)
 ; Input variables -> See BPSRPT0 for description
"RTN","BPSRPT2",10,0)
 ; BPTMPGL,BPDFN,BPRX,BPREF,BP59,BPENDDT,BPPHARM,BPSUMDET,BPGRPLAN,BPRLDT,BPPAYBL,BPREJFL,BPRXDRG
"RTN","BPSRPT2",11,0)
 ; 
"RTN","BPSRPT2",12,0)
SETTMP(BPTMPGL,BPDFN,BPRX,BPREF,BP59,BPBEGDT,BPENDDT,BPPHARM,BPSUMDET,BPGRPLAN,BPRLDT,BPPAYBL,BPREJFL,BPRXDRG,BPSTATUS) ;
"RTN","BPSRPT2",13,0)
 N BPCLSDT,BPDATA,BPDIV,BPFILDT,BPISSDT,BPLBLDT,BPSMSG,BPSREJ,BPREST,BPSRWR,BPTDTTM,BPTRDT
"RTN","BPSRPT2",14,0)
 ;
"RTN","BPSRPT2",15,0)
 ;Check for bad data
"RTN","BPSRPT2",16,0)
 I BPREF,$$IFREFILL^BPSRPT6(BPRX,BPREF)=0 G EXIT
"RTN","BPSRPT2",17,0)
 ;
"RTN","BPSRPT2",18,0)
 ;Retrieve Close Date
"RTN","BPSRPT2",19,0)
 S BPCLSDT=$P($$CLOSEDT(BP59),".")
"RTN","BPSRPT2",20,0)
 ;
"RTN","BPSRPT2",21,0)
 ;If NO refills 
"RTN","BPSRPT2",22,0)
 I BPREF=0 D
"RTN","BPSRPT2",23,0)
 . S BPLBLDT=$$RXLBLDT^BPSRPT6(BPRX,1)
"RTN","BPSRPT2",24,0)
 . S BPFILDT=$$RXFILDT^BPSRPT6(BPRX)
"RTN","BPSRPT2",25,0)
 . S BPISSDT=$$RXISSDT^BPSRPT6(BPRX)
"RTN","BPSRPT2",26,0)
 ;
"RTN","BPSRPT2",27,0)
 ;If Refills
"RTN","BPSRPT2",28,0)
 I BPREF>0 D
"RTN","BPSRPT2",29,0)
 . S BPLBLDT=$$REFLBLDT^BPSRPT6(BPRX,1)
"RTN","BPSRPT2",30,0)
 . S BPFILDT=$$REFFILDT^BPSRPT6(BPRX,BPREF)
"RTN","BPSRPT2",31,0)
 . S BPISSDT=$$REFISSDT^BPSRPT6(BPRX,BPREF)
"RTN","BPSRPT2",32,0)
 ;
"RTN","BPSRPT2",33,0)
 ;Get Transaction Date/Transaction Date and Time
"RTN","BPSRPT2",34,0)
 S BPTRDT=$$TRANDT(BP59,0)
"RTN","BPSRPT2",35,0)
 S BPTDTTM=$$TRANDT(BP59,1)
"RTN","BPSRPT2",36,0)
 ;
"RTN","BPSRPT2",37,0)
 ;Get Result, Message, Reject Information, and BPS Pharmacy
"RTN","BPSRPT2",38,0)
 S BPREST=$$RESULT(BP59,.BPSRWR)
"RTN","BPSRPT2",39,0)
 S BPSMSG=$$MSG(BPSRWR,.BPSMSG,BP59)
"RTN","BPSRPT2",40,0)
 S BPSREJ=$S(BPREJFL=0:"",1:$$REJECT(BPREST,.BPSREJ,BP59))
"RTN","BPSRPT2",41,0)
 S BPDIV=+$P($G(^BPST(BP59,1)),"^",7)
"RTN","BPSRPT2",42,0)
 ;
"RTN","BPSRPT2",43,0)
 ;Set up data node
"RTN","BPSRPT2",44,0)
 S BPDATA=BPRLDT_U_BPTRDT_U_BP59_U_BPRX_U_BPREF_U_BPREST_U_BPSTATUS_U_BPFILDT_U_BPISSDT_U_BPLBLDT_U_U_BPPAYBL_U_BPREJFL_U_BPRXDRG_U_BPSRWR
"RTN","BPSRPT2",45,0)
 ;
"RTN","BPSRPT2",46,0)
 ;For Totals by Date - No Insurance Sort
"RTN","BPSRPT2",47,0)
 I BPRTYPE=6 S BPGRPLAN="~"
"RTN","BPSRPT2",48,0)
 ;
"RTN","BPSRPT2",49,0)
 ;Sort by transaction date
"RTN","BPSRPT2",50,0)
 I BPRTYPE'=7 D:$$CHKDT(+$G(BPTRDT),BPBEGDT,BPENDDT)
"RTN","BPSRPT2",51,0)
 . ;
"RTN","BPSRPT2",52,0)
 . ;For Recent Transactions tack on Txn date and Time to Ins
"RTN","BPSRPT2",53,0)
 . I BPRTYPE=5 S BPGRPLAN=-BPTDTTM_"^"_BPGRPLAN
"RTN","BPSRPT2",54,0)
 . S @BPTMPGL@(BPDIV,BPGRPLAN,BPDFN,BPTRDT,BPRX,BPREF)=BPDATA
"RTN","BPSRPT2",55,0)
 ;
"RTN","BPSRPT2",56,0)
 ;Sort by close date
"RTN","BPSRPT2",57,0)
 I BPRTYPE=7 D:$$CHKDT(+$G(BPCLSDT),BPBEGDT,BPENDDT)
"RTN","BPSRPT2",58,0)
 . S @BPTMPGL@(BPDIV,BPGRPLAN,BPDFN,BPCLSDT,BPRX,BPREF)=BPDATA
"RTN","BPSRPT2",59,0)
 ;
"RTN","BPSRPT2",60,0)
EXIT Q
"RTN","BPSRPT2",61,0)
 ;
"RTN","BPSRPT2",62,0)
 ;Get Transaction date and Time
"RTN","BPSRPT2",63,0)
 ;
"RTN","BPSRPT2",64,0)
 ; Input Variables -> BP59 - ptr to BPS TRANSACTION
"RTN","BPSRPT2",65,0)
 ;                    TIME - 1 - Return DT.TM, 0 - DT
"RTN","BPSRPT2",66,0)
 ; Returned Value -> Transaction or Transaction Date.Time
"RTN","BPSRPT2",67,0)
 ; 
"RTN","BPSRPT2",68,0)
TRANDT(BP59,TIME) N X
"RTN","BPSRPT2",69,0)
 S X=$P($G(^BPST(BP59,0)),U,8)
"RTN","BPSRPT2",70,0)
 Q $S(TIME=0:X\1,1:X)
"RTN","BPSRPT2",71,0)
 ;
"RTN","BPSRPT2",72,0)
 ;Determine the Claim Close Date
"RTN","BPSRPT2",73,0)
 ;
"RTN","BPSRPT2",74,0)
 ; Input Variable -> BP59 = ptr to BPS TRANSACTIONS
"RTN","BPSRPT2",75,0)
 ; Returned Value -> CL = Claim Close Date and Time
"RTN","BPSRPT2",76,0)
 ; 
"RTN","BPSRPT2",77,0)
CLOSEDT(BP59) N CL,BP02
"RTN","BPSRPT2",78,0)
 S BP02=+$P($G(^BPST(BP59,0)),U,4)
"RTN","BPSRPT2",79,0)
 S CL=+$P($G(^BPSC(BP02,900)),U,2)
"RTN","BPSRPT2",80,0)
 Q CL
"RTN","BPSRPT2",81,0)
 ;
"RTN","BPSRPT2",82,0)
 ;Get Result
"RTN","BPSRPT2",83,0)
 ;
"RTN","BPSRPT2",84,0)
RESULT(BP59,RWR) N X
"RTN","BPSRPT2",85,0)
 I BP59 S RWR=$$CATEG^BPSOSUC(BP59)
"RTN","BPSRPT2",86,0)
 E  S RWR=""
"RTN","BPSRPT2",87,0)
 I RWR?1"E ".E D
"RTN","BPSRPT2",88,0)
 . S X=RWR
"RTN","BPSRPT2",89,0)
 . I X="E PAYABLE" S X=4
"RTN","BPSRPT2",90,0)
 . E  I X="E CAPTURED" S X=3
"RTN","BPSRPT2",91,0)
 . E  I X="E DUPLICATE" S X=2
"RTN","BPSRPT2",92,0)
 . E  I X="E REJECTED" S X=1
"RTN","BPSRPT2",93,0)
 . E  I X="E REVERSAL ACCEPTED" S X=11
"RTN","BPSRPT2",94,0)
 . E  I X="E REVERSAL REJECTED" S X=12
"RTN","BPSRPT2",95,0)
 . E  S X=0
"RTN","BPSRPT2",96,0)
 E  I RWR="PAPER" S X=9
"RTN","BPSRPT2",97,0)
 E  I RWR="PAPER REVERSAL" S X=19
"RTN","BPSRPT2",98,0)
 E  S X=15
"RTN","BPSRPT2",99,0)
 Q X
"RTN","BPSRPT2",100,0)
 ;
"RTN","BPSRPT2",101,0)
 ;Message
"RTN","BPSRPT2",102,0)
 ;
"RTN","BPSRPT2",103,0)
MSG(RWR,MSGTEXT,BP59) N BPRET
"RTN","BPSRPT2",104,0)
 S BPRET=0
"RTN","BPSRPT2",105,0)
 ; If the claim has any message text, store it
"RTN","BPSRPT2",106,0)
 I RWR?1"E ".E D
"RTN","BPSRPT2",107,0)
 . S X=$$MESSAG59(BP59,1)
"RTN","BPSRPT2",108,0)
 . I X]"" S MSGTEXT(1)=X
"RTN","BPSRPT2",109,0)
 . S X=$$MESSAG59(BP59,2)
"RTN","BPSRPT2",110,0)
 . I X]"" S MSGTEXT(2)=X
"RTN","BPSRPT2",111,0)
 . I $D(MSGTEXT) S MSGTEXT="MSGTEXT"
"RTN","BPSRPT2",112,0)
 . S BPRET=1
"RTN","BPSRPT2",113,0)
 Q BPRET
"RTN","BPSRPT2",114,0)
 ;
"RTN","BPSRPT2",115,0)
 ;Reject Text
"RTN","BPSRPT2",116,0)
 ;
"RTN","BPSRPT2",117,0)
 ; Output Variable -> BPSRTEXT,BPRET
"RTN","BPSRPT2",118,0)
 ; 
"RTN","BPSRPT2",119,0)
REJECT(RWR,BPSRTEXT,BP59) N BPRET,BPSRESP,BPSECME,BPSPOS
"RTN","BPSRPT2",120,0)
 S BPRET=0
"RTN","BPSRPT2",121,0)
 ; If it's a rejected claim, build the rejection text
"RTN","BPSRPT2",122,0)
 I RWR="E REJECTED"!(RWR="E REVERSAL REJECTED") D
"RTN","BPSRPT2",123,0)
 . D RESP59(BP59,.BPSRESP,.BPSECME) ; set BPSRESP,BPSECME pointers
"RTN","BPSRPT2",124,0)
 . D REJTEXT^BPSOS03(BPSRESP,BPSPOS,.BPSRTEXT)
"RTN","BPSRPT2",125,0)
 . ; word processing text goes into FDA(FILE,IENS,FIELD,n)=text
"RTN","BPSRPT2",126,0)
 . S BPSRTEXT=$S($D(BPSRTEXT):"REJTEXT",1:"")
"RTN","BPSRPT2",127,0)
 . S:$D(BPSRTEXT) BPRET=1
"RTN","BPSRPT2",128,0)
 Q BPRET
"RTN","BPSRPT2",129,0)
 ;
"RTN","BPSRPT2",130,0)
 ;Messages 
"RTN","BPSRPT2",131,0)
 ;
"RTN","BPSRPT2",132,0)
MESSAG59(BP59,N) N MSG,BPSRESP,BPSPOS
"RTN","BPSRPT2",133,0)
 I 'BP59 S MSG="" G XMSG59
"RTN","BPSRPT2",134,0)
 D RESP59(59,.BPSRESP,.BPSPOS) I 'BPSRESP!'BPSPOS S MSG="" G XMSG59
"RTN","BPSRPT2",135,0)
 I '$D(N) S N=0
"RTN","BPSRPT2",136,0)
 I N=1 S MSG=$$MESSAGE^BPSOS03(BPSRESP,BPSPOS,1) I 1
"RTN","BPSRPT2",137,0)
 I N=2 S MSG=$$MESSAGE^BPSOS03(BPSRESP,BPSPOS,2) I 1
"RTN","BPSRPT2",138,0)
 E  S MSG=$$MESSAGE^BPSOS03(BPSRESP,BPSPOS)
"RTN","BPSRPT2",139,0)
XMSG59 Q MSG
"RTN","BPSRPT2",140,0)
 ;
"RTN","BPSRPT2",141,0)
 ;Responds
"RTN","BPSRPT2",142,0)
RESP59(BP59,BPSRESP,BPSPOS) ;EP - caller should N BPSRESP,BPSPOS
"RTN","BPSRPT2",143,0)
 ;Input: BP59
"RTN","BPSRPT2",144,0)
 ;Output:
"RTN","BPSRPT2",145,0)
 ; BPSRESP,BPSPOS by reference
"RTN","BPSRPT2",146,0)
 I $G(^BPST(BP59,4)) D  ; reversal
"RTN","BPSRPT2",147,0)
 . S BPSRESP=$P($G(^BPST(BP59,4)),U,2)
"RTN","BPSRPT2",148,0)
 . S BPSPOS=1
"RTN","BPSRPT2",149,0)
 E  D
"RTN","BPSRPT2",150,0)
 . S BPSRESP=$P($G(^BPST(BP59,0)),U,5)
"RTN","BPSRPT2",151,0)
 . S BPSPOS=$P($G(^BPST(BP59,0)),U,9)
"RTN","BPSRPT2",152,0)
 Q
"RTN","BPSRPT2",153,0)
 ;
"RTN","BPSRPT2",154,0)
 ;Check and compare dates
"RTN","BPSRPT2",155,0)
CHKDT(BPTSTDT,BPBEGDT,BPENDDT) ;
"RTN","BPSRPT2",156,0)
 I BPTSTDT=0 Q 0
"RTN","BPSRPT2",157,0)
 I BPTSTDT'<BPBEGDT,BPTSTDT'>BPENDDT Q 1
"RTN","BPSRPT2",158,0)
 Q 0
"RTN","BPSRPT2",159,0)
 ;
"RTN","BPSRPT2",160,0)
 ;Populate passed in Array
"RTN","BPSRPT2",161,0)
 ;
"RTN","BPSRPT2",162,0)
REJTEXT(BP59,ARR) N BBX,BPSRESP,BPSPOS,A,I,X,R
"RTN","BPSRPT2",163,0)
 S BBX=$G(^BPST(BP59,0))
"RTN","BPSRPT2",164,0)
 S BPSRESP=$P(BBX,U,5)
"RTN","BPSRPT2",165,0)
 S BPSPOS=$P(BBX,U,9)
"RTN","BPSRPT2",166,0)
 S (A,I)=0
"RTN","BPSRPT2",167,0)
 I BPSRESP&BPSPOS D
"RTN","BPSRPT2",168,0)
 . K ARR
"RTN","BPSRPT2",169,0)
 . F  S A=$O(^BPSR(BPSRESP,1000,BPSPOS,511,A)) Q:'A  D
"RTN","BPSRPT2",170,0)
 . . S R=$P(^BPSR(BPSRESP,1000,BPSPOS,511,A,0),U)
"RTN","BPSRPT2",171,0)
 . . Q:R=""
"RTN","BPSRPT2",172,0)
 . . N S S S=$O(^BPSF(9002313.93,"B",R,0))
"RTN","BPSRPT2",173,0)
 . . I S S X=$TR($G(^BPSF(9002313.93,S,0)),U,":")
"RTN","BPSRPT2",174,0)
 . . E  S X=R_" unrecognized reject code"
"RTN","BPSRPT2",175,0)
 . . S I=I+1,ARR(I)=X
"RTN","BPSRPT2",176,0)
 . . K S
"RTN","BPSRPT2",177,0)
 Q I
"RTN","BPSRPT2",178,0)
 ;
"RTN","BPSRPT2",179,0)
 ;Get Claim ID
"RTN","BPSRPT2",180,0)
CLAIMID(BP59) N BP02
"RTN","BPSRPT2",181,0)
 S BP02=+$P($G(^BPST(BP59,0)),U,4)
"RTN","BPSRPT2",182,0)
 Q $P($G(^BPSC(BP02,0)),U)
"RTN","BPSRPT2",183,0)
 ;
"RTN","BPSRPT2",184,0)
RXSTANAM(BPRXSTAT) ;
"RTN","BPSRPT2",185,0)
 Q:BPRXSTAT=0 "ACT"  ; ACTIVE; 
"RTN","BPSRPT2",186,0)
 Q:BPRXSTAT=1 "NVER"  ; NON-VERIFIED; 
"RTN","BPSRPT2",187,0)
 Q:BPRXSTAT=3 "HLD"  ; HOLD; 
"RTN","BPSRPT2",188,0)
 Q:BPRXSTAT=5 "SUS"  ; SUSPENDED; 
"RTN","BPSRPT2",189,0)
 Q:BPRXSTAT=11 "EXP"  ; EXPIRED; 
"RTN","BPSRPT2",190,0)
 Q:BPRXSTAT=12 "DIS"  ; DISCONTINUED; 
"RTN","BPSRPT2",191,0)
 Q:BPRXSTAT=13 "DEL"  ; DELETED; 
"RTN","BPSRPT2",192,0)
 Q:BPRXSTAT=14 "DIS"  ; DISCONTINUED BY PROVIDER; 
"RTN","BPSRPT2",193,0)
 Q:BPRXSTAT=15 "DIS"  ; DISCONTINUED (EDIT); 
"RTN","BPSRPT2",194,0)
 Q:BPRXSTAT=16 "HLD"  ; PROVIDER HOLD; 
"RTN","BPSRPT2",195,0)
 Q:BPRXSTAT=-1 "???"
"RTN","BPSRPT2",196,0)
 Q ""
"RTN","BPSRPT2",197,0)
 ;
"RTN","BPSRPT2",198,0)
 ;Determine $Ins Paid
"RTN","BPSRPT2",199,0)
 ;
"RTN","BPSRPT2",200,0)
INSPAID(BP59) N X,RESP,POSITION
"RTN","BPSRPT2",201,0)
 S X=$G(^BPST(BP59,0))
"RTN","BPSRPT2",202,0)
 S RESP=$P(X,U,5)
"RTN","BPSRPT2",203,0)
 S POSITION=$P(X,U,9)
"RTN","BPSRPT2",204,0)
 Q $S(RESP&POSITION:$$INSPAID1^BPSOS03(RESP,POSITION),1:0)
"RTN","BPSRPT2",205,0)
 ;
"RTN","BPSRPT2",206,0)
 ;Get the Cardholder ID
"RTN","BPSRPT2",207,0)
CRDHLDID(BP59) N BP02
"RTN","BPSRPT2",208,0)
 S BP02=+$P($G(^BPST(BP59,0)),U,4)
"RTN","BPSRPT2",209,0)
 Q $P($G(^BPSC(BP02,300)),U,2)
"RTN","BPSRPT2",210,0)
 ;
"RTN","BPSRPT2",211,0)
GRPID(BP59) ;sent by IB in RX^IBNCPDP
"RTN","BPSRPT2",212,0)
 N BP02
"RTN","BPSRPT2",213,0)
 S BP02=+$P($G(^BPST(BP59,0)),U,4)
"RTN","BPSRPT2",214,0)
 Q $P($G(^BPSC(BP02,300)),U)
"RTN","BPSRPT3")
0^24^B37239882
"RTN","BPSRPT3",1,0)
BPSRPT3 ;BHAM ISC/BEE - ECME REPORTS ;14-FEB-05
"RTN","BPSRPT3",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSRPT3",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","BPSRPT3",4,0)
 ;
"RTN","BPSRPT3",5,0)
 Q
"RTN","BPSRPT3",6,0)
 ;
"RTN","BPSRPT3",7,0)
 ; Select the ECME Pharmacy or Pharmacies
"RTN","BPSRPT3",8,0)
 ; 
"RTN","BPSRPT3",9,0)
 ; Input Variable -> none
"RTN","BPSRPT3",10,0)
 ; Return Value ->   "" = Valid Entry or Entries Selected
"RTN","BPSRPT3",11,0)
 ;                                        ^ = Exit
"RTN","BPSRPT3",12,0)
 ;                                       
"RTN","BPSRPT3",13,0)
 ; Output Variable -> BPPHARM = 1 One or More Pharmacies Selected
"RTN","BPSRPT3",14,0)
 ;                          = 0 User Entered 'ALL'
"RTN","BPSRPT3",15,0)
 ;                            
"RTN","BPSRPT3",16,0)
 ; If BPPHARM = 1 then the BPPHARM array will be defined where:
"RTN","BPSRPT3",17,0)
 ;    BPPHARM(ptr) = ptr ^ BPS PHARMACY NAME and
"RTN","BPSRPT3",18,0)
 ;    ptr = Internal Pointer to BPS PHARMACIES file (#9002313.56)
"RTN","BPSRPT3",19,0)
 ;                    
"RTN","BPSRPT3",20,0)
SELPHARM() N DIC,DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT3",21,0)
 ;
"RTN","BPSRPT3",22,0)
 ;Reset BPPHARM array
"RTN","BPSRPT3",23,0)
 K BPPHARM
"RTN","BPSRPT3",24,0)
 ;
"RTN","BPSRPT3",25,0)
 ;First see if they want to enter individual divisions or ALL
"RTN","BPSRPT3",26,0)
 S DIR(0)="S^D:DIVISION;A:ALL"
"RTN","BPSRPT3",27,0)
 S DIR("A")="Select Certain Pharmacy (D)ivisions or (A)LL"
"RTN","BPSRPT3",28,0)
 S DIR("L",1)="Select one of the following:"
"RTN","BPSRPT3",29,0)
 S DIR("L",2)=""
"RTN","BPSRPT3",30,0)
 S DIR("L",3)="     D         DIVISION"
"RTN","BPSRPT3",31,0)
 S DIR("L",4)="     A         ALL"
"RTN","BPSRPT3",32,0)
 D ^DIR K DIR
"RTN","BPSRPT3",33,0)
 ;
"RTN","BPSRPT3",34,0)
 ;Check for "^" or timeout, otherwise define BPPHARM
"RTN","BPSRPT3",35,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT3",36,0)
 E  S BPPHARM=$S(Y="A":0,1:1)
"RTN","BPSRPT3",37,0)
 ;
"RTN","BPSRPT3",38,0)
 ;If division selected, ask prompt
"RTN","BPSRPT3",39,0)
 I $G(BPPHARM)=1 F  D  Q:Y="^"!(Y="") 
"RTN","BPSRPT3",40,0)
 .;
"RTN","BPSRPT3",41,0)
 .;Prompt for entry
"RTN","BPSRPT3",42,0)
 .K X S DIC(0)="QEAM",DIC=9002313.56,DIC("A")="Select ECME Pharmacy Division(s): "
"RTN","BPSRPT3",43,0)
 .W ! D ^DIC
"RTN","BPSRPT3",44,0)
 .;
"RTN","BPSRPT3",45,0)
 .;Check for "^" or timeout 
"RTN","BPSRPT3",46,0)
 .I ($G(DUOUT)=1)!($G(DTOUT)=1) K BPPHARM S Y="^" Q
"RTN","BPSRPT3",47,0)
 .;
"RTN","BPSRPT3",48,0)
 .;Check for blank entry, quit if no previous selections
"RTN","BPSRPT3",49,0)
 .I $G(X)="" S Y=$S($D(BPPHARM)>9:"",1:"^") K:Y="^" BPPHARM Q
"RTN","BPSRPT3",50,0)
 .;
"RTN","BPSRPT3",51,0)
 .;Handle Deletes
"RTN","BPSRPT3",52,0)
 .I $D(BPPHARM(+Y)) D  Q:Y="^"  I 1
"RTN","BPSRPT3",53,0)
 ..N P
"RTN","BPSRPT3",54,0)
 ..S P=Y  ;Save Original Value
"RTN","BPSRPT3",55,0)
 ..S DIR(0)="S^Y:YES;N:NO",DIR("A")="Delete "_$P(P,U,2)_" from your list?"
"RTN","BPSRPT3",56,0)
 ..S DIR("B")="NO" D ^DIR
"RTN","BPSRPT3",57,0)
 ..I ($G(DUOUT)=1)!($G(DTOUT)=1) K BPPHARM S Y="^" Q
"RTN","BPSRPT3",58,0)
 ..I Y="Y" K BPPHARM(+P),BPPHARM("B",$P(P,U,2),+P)
"RTN","BPSRPT3",59,0)
 ..S Y=P  ;Restore Original Value
"RTN","BPSRPT3",60,0)
 ..K P
"RTN","BPSRPT3",61,0)
 .E  D
"RTN","BPSRPT3",62,0)
 ..;Define new entries in BPPHARM array
"RTN","BPSRPT3",63,0)
 ..S BPPHARM(+Y)=Y
"RTN","BPSRPT3",64,0)
 ..S BPPHARM("B",$P(Y,U,2),+Y)=""
"RTN","BPSRPT3",65,0)
 .;
"RTN","BPSRPT3",66,0)
 .;Display a list of selected divisions
"RTN","BPSRPT3",67,0)
 .I $D(BPPHARM)>9 D
"RTN","BPSRPT3",68,0)
 ..N X
"RTN","BPSRPT3",69,0)
 ..W !,?2,"Selected:"
"RTN","BPSRPT3",70,0)
 ..S X="" F  S X=$O(BPPHARM("B",X)) Q:X=""  W !,?10,X
"RTN","BPSRPT3",71,0)
 ..K X
"RTN","BPSRPT3",72,0)
 .Q
"RTN","BPSRPT3",73,0)
 ;
"RTN","BPSRPT3",74,0)
 K BPPHARM("B")
"RTN","BPSRPT3",75,0)
 Q Y
"RTN","BPSRPT3",76,0)
 ;
"RTN","BPSRPT3",77,0)
 ; Display (S)ummary or (D)etail Format
"RTN","BPSRPT3",78,0)
 ; 
"RTN","BPSRPT3",79,0)
 ; Input Variable -> DFLT = 1 Summary
"RTN","BPSRPT3",80,0)
 ;                          2 Detail
"RTN","BPSRPT3",81,0)
 ;                          
"RTN","BPSRPT3",82,0)
 ; Return Value ->   1 = Summary
"RTN","BPSRPT3",83,0)
 ;                   0 = Detail
"RTN","BPSRPT3",84,0)
 ;                   ^ = Exit
"RTN","BPSRPT3",85,0)
 ;
"RTN","BPSRPT3",86,0)
SELSMDET(DFLT) N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT3",87,0)
 S DFLT=$S($G(DFLT)=1:"Summary",$G(DFLT)=0:"Detail",1:"Detail")
"RTN","BPSRPT3",88,0)
 S DIR(0)="S^S:Summary;D:Detail",DIR("A")="Display (S)ummary or (D)etail Format",DIR("B")=DFLT
"RTN","BPSRPT3",89,0)
 D ^DIR
"RTN","BPSRPT3",90,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT3",91,0)
 S Y=$S(Y="S":1,Y="D":0,1:Y)
"RTN","BPSRPT3",92,0)
 Q Y
"RTN","BPSRPT3",93,0)
 ;
"RTN","BPSRPT3",94,0)
 ; Select to Display Single (I)nsurance Company or (A)ll
"RTN","BPSRPT3",95,0)
 ;
"RTN","BPSRPT3",96,0)
 ; Input Variable -> DFLT = 1 Single Insurance
"RTN","BPSRPT3",97,0)
 ;                          0 All Insurance
"RTN","BPSRPT3",98,0)
 ;                          
"RTN","BPSRPT3",99,0)
 ; Return Value ->   ptr to #36^Insurance Company Name
"RTN","BPSRPT3",100,0)
 ;                     0 = All Insurances
"RTN","BPSRPT3",101,0)
 ;                     ^ = Exit
"RTN","BPSRPT3",102,0)
 ;
"RTN","BPSRPT3",103,0)
SELINSIN(DFLT) N DIC,DIR,DIRUT,DUOUT,INS,X,Y
"RTN","BPSRPT3",104,0)
 ;
"RTN","BPSRPT3",105,0)
 S DFLT=$S($G(DFLT)=1:"Single Insurance",1:"ALL")
"RTN","BPSRPT3",106,0)
 S DIR(0)="S^I:Single Insurance;A:ALL"
"RTN","BPSRPT3",107,0)
 S DIR("A")="Display Single (I)nsurance Company or (A)LL",DIR("B")=DFLT
"RTN","BPSRPT3",108,0)
 D ^DIR
"RTN","BPSRPT3",109,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT3",110,0)
 S INS=$S(Y="I":1,Y="A":0,1:Y)
"RTN","BPSRPT3",111,0)
 ;
"RTN","BPSRPT3",112,0)
 ;Check for "^" or timeout, otherwise define INS
"RTN","BPSRPT3",113,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S (INS,Y)="^"
"RTN","BPSRPT3",114,0)
 ;
"RTN","BPSRPT3",115,0)
 ;If single insurance selected, ask prompt
"RTN","BPSRPT3",116,0)
 I $G(INS)=1 D
"RTN","BPSRPT3",117,0)
 .;
"RTN","BPSRPT3",118,0)
 .;Prompt for entry
"RTN","BPSRPT3",119,0)
 .W ! S Y=$$SELINS^BPSRPT6()
"RTN","BPSRPT3",120,0)
 .;
"RTN","BPSRPT3",121,0)
 .;Check for "^", timeout, or blank entry
"RTN","BPSRPT3",122,0)
 .I ($G(DUOUT)=1)!($G(DTOUT)=1)!($G(X)="") S (INS,Y)="^" Q
"RTN","BPSRPT3",123,0)
 .;
"RTN","BPSRPT3",124,0)
 .;If valid entry, setup INS
"RTN","BPSRPT3",125,0)
 .I Y'="^" S INS=Y
"RTN","BPSRPT3",126,0)
 ;
"RTN","BPSRPT3",127,0)
 Q INS
"RTN","BPSRPT3",128,0)
 ;
"RTN","BPSRPT3",129,0)
 ; Display (C)MOP or (M)ail or (W)indow or (A)ll
"RTN","BPSRPT3",130,0)
 ; 
"RTN","BPSRPT3",131,0)
 ;    Input Variable -> DFLT = 4 CMOP
"RTN","BPSRPT3",132,0)
 ;                             3 Window
"RTN","BPSRPT3",133,0)
 ;                             2 Mail
"RTN","BPSRPT3",134,0)
 ;                             1 All
"RTN","BPSRPT3",135,0)
 ;                          
"RTN","BPSRPT3",136,0)
 ;    Return Value ->   4 = CMOP
"RTN","BPSRPT3",137,0)
 ;                      3 = Window
"RTN","BPSRPT3",138,0)
 ;                      2 = Mail
"RTN","BPSRPT3",139,0)
 ;                      1 = All
"RTN","BPSRPT3",140,0)
 ;                      ^ = Exit
"RTN","BPSRPT3",141,0)
 ; 
"RTN","BPSRPT3",142,0)
SELMWC(DFLT) N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT3",143,0)
 S DFLT=$S($G(DFLT)="4":"CMOP",$G(DFLT)="3":"Window",$G(DFLT)="2":"Mail",1:"ALL")
"RTN","BPSRPT3",144,0)
 S DIR(0)="S^C:CMOP;M:Mail;W:Window;A:ALL"
"RTN","BPSRPT3",145,0)
 S DIR("A")="Display (C)MOP or (M)ail or (W)indow or (A)LL",DIR("B")=DFLT
"RTN","BPSRPT3",146,0)
 D ^DIR
"RTN","BPSRPT3",147,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT3",148,0)
 S Y=$S(Y="A":1,Y="M":2,Y="W":3,Y="C":4,1:Y)
"RTN","BPSRPT3",149,0)
 Q Y
"RTN","BPSRPT3",150,0)
 ;
"RTN","BPSRPT3",151,0)
 ; Display (R)ealTime Fills or (B)ackbills or (A)LL
"RTN","BPSRPT3",152,0)
 ;
"RTN","BPSRPT3",153,0)
 ;    Input Variable -> DFLT = 3 Backbill
"RTN","BPSRPT3",154,0)
 ;                             2 Real Time Fills
"RTN","BPSRPT3",155,0)
 ;                             1 ALL
"RTN","BPSRPT3",156,0)
 ;                          
"RTN","BPSRPT3",157,0)
 ;    Return Value ->   3 = Backbill (manually)
"RTN","BPSRPT3",158,0)
 ;                      2 = Real Time Fills (automatically during FINISH)
"RTN","BPSRPT3",159,0)
 ;                      1 = ALL
"RTN","BPSRPT3",160,0)
 ;                      ^ = Exit
"RTN","BPSRPT3",161,0)
 ;
"RTN","BPSRPT3",162,0)
SELRTBCK(DFLT) N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT3",163,0)
 S DFLT=$S($G(DFLT)=2:"Real Time",$G(DFLT)=3:"Backbill",1:"ALL")
"RTN","BPSRPT3",164,0)
 S DIR(0)="S^R:Real Time Fills;B:Backbill;A:ALL"
"RTN","BPSRPT3",165,0)
 S DIR("A")="Display (R)ealTime Fills or (B)ackbills or (A)LL",DIR("B")=DFLT
"RTN","BPSRPT3",166,0)
 D ^DIR
"RTN","BPSRPT3",167,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT3",168,0)
 S Y=$S(Y="A":1,Y="R":2,Y="B":3,1:Y)
"RTN","BPSRPT3",169,0)
 Q Y
"RTN","BPSRPT3",170,0)
 ;
"RTN","BPSRPT3",171,0)
 ; Display Specific (D)rug or Drug (C)lass
"RTN","BPSRPT3",172,0)
 ; 
"RTN","BPSRPT3",173,0)
 ;    Input Variable -> DFLT = 3 Drug Class
"RTN","BPSRPT3",174,0)
 ;                             2 Drug
"RTN","BPSRPT3",175,0)
 ;                             1 ALL
"RTN","BPSRPT3",176,0)
 ;                          
"RTN","BPSRPT3",177,0)
 ;     Return Value ->   3 = Drug Class
"RTN","BPSRPT3",178,0)
 ;                       2 = Drug
"RTN","BPSRPT3",179,0)
 ;                       1 = ALL
"RTN","BPSRPT3",180,0)
 ;                       ^ = Exit
"RTN","BPSRPT3",181,0)
 ;                       
"RTN","BPSRPT3",182,0)
SELDRGAL(DFLT) N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT3",183,0)
 S DFLT=$S($G(DFLT)=2:"Drug",$G(DFLT)=3:"Drug Class",1:"ALL")
"RTN","BPSRPT3",184,0)
 S DIR(0)="S^D:Drug;C:Drug Class;A:ALL"
"RTN","BPSRPT3",185,0)
 S DIR("A")="Display Specific (D)rug or Drug (C)lass or (A)LL",DIR("B")=DFLT
"RTN","BPSRPT3",186,0)
 D ^DIR
"RTN","BPSRPT3",187,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT3",188,0)
 S Y=$S(Y="A":1,Y="D":2,Y="C":3,1:Y)
"RTN","BPSRPT3",189,0)
 Q Y
"RTN","BPSRPT3",190,0)
 ;
"RTN","BPSRPT3",191,0)
 ; Select Drug
"RTN","BPSRPT3",192,0)
 ; 
"RTN","BPSRPT3",193,0)
 ; Input Variable -> none
"RTN","BPSRPT3",194,0)
 ; 
"RTN","BPSRPT3",195,0)
 ; Return Value -> ptr = pointer to DRUG file (#50)
"RTN","BPSRPT3",196,0)
 ;                   ^ = Exit
"RTN","BPSRPT3",197,0)
 ;                   
"RTN","BPSRPT3",198,0)
SELDRG() N DIC,DIRUT,DUOUT,X,Y
"RTN","BPSRPT3",199,0)
 ;
"RTN","BPSRPT3",200,0)
 ;Prompt for entry
"RTN","BPSRPT3",201,0)
 W ! D SELDRG^BPSRPT6
"RTN","BPSRPT3",202,0)
 ;
"RTN","BPSRPT3",203,0)
 ;Check for "^", timeout, or blank entry
"RTN","BPSRPT3",204,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT3",205,0)
 ;
"RTN","BPSRPT3",206,0)
 ;Check for Valid Entry
"RTN","BPSRPT3",207,0)
 I +Y>0 S Y=+Y
"RTN","BPSRPT3",208,0)
 ;
"RTN","BPSRPT3",209,0)
 Q Y
"RTN","BPSRPT3",210,0)
 ;
"RTN","BPSRPT3",211,0)
 ; Select Drug Class
"RTN","BPSRPT3",212,0)
 ; 
"RTN","BPSRPT3",213,0)
 ; Input Variable -> none
"RTN","BPSRPT3",214,0)
 ; 
"RTN","BPSRPT3",215,0)
 ; Return Value -> ptr = pointer to VA DRUG CLASS file (#50.605)
"RTN","BPSRPT3",216,0)
 ;                   ^ = Exit
"RTN","BPSRPT3",217,0)
 ;
"RTN","BPSRPT3",218,0)
SELDRGCL() N DIC,DIRUT,DUOUT,Y
"RTN","BPSRPT3",219,0)
 ;
"RTN","BPSRPT3",220,0)
 ;Prompt for entry
"RTN","BPSRPT3",221,0)
 W ! D SELDRGC^BPSRPT6
"RTN","BPSRPT3",222,0)
 ;
"RTN","BPSRPT3",223,0)
 ;Check for "^", timeout, or blank entry
"RTN","BPSRPT3",224,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1)!($G(Y)="") S Y="^"
"RTN","BPSRPT3",225,0)
 ;
"RTN","BPSRPT3",226,0)
 Q Y
"RTN","BPSRPT3",227,0)
 ;
"RTN","BPSRPT3",228,0)
 ; Enter Date Range
"RTN","BPSRPT3",229,0)
 ;
"RTN","BPSRPT3",230,0)
 ; Input Variable -> TYPE = 7 CLOSE REPORT
"RTN","BPSRPT3",231,0)
 ;                          1-6 OTHER REPORTS
"RTN","BPSRPT3",232,0)
 ;
"RTN","BPSRPT3",233,0)
 ; Return Value -> P1^P2
"RTN","BPSRPT3",234,0)
 ; 
"RTN","BPSRPT3",235,0)
 ;           where P1 = From Date
"RTN","BPSRPT3",236,0)
 ;                    = ^ Exit
"RTN","BPSRPT3",237,0)
 ;                 P2 = To Date
"RTN","BPSRPT3",238,0)
 ;                    = blank for Exit
"RTN","BPSRPT3",239,0)
 ;                 
"RTN","BPSRPT3",240,0)
SELDATE(TYPE) N BPSIBDT,DIR,DIRUT,DTOUT,DUOUT,VAL,X,Y
"RTN","BPSRPT3",241,0)
 S TYPE=$S($G(TYPE)=7:"CLOSE",1:"TRANSACTION")
"RTN","BPSRPT3",242,0)
SELDATE1 S VAL="",DIR(0)="DA^:DT:EX",DIR("A")="START WITH "_TYPE_" DATE: ",DIR("B")="T-1"
"RTN","BPSRPT3",243,0)
 W ! D ^DIR
"RTN","BPSRPT3",244,0)
 ;
"RTN","BPSRPT3",245,0)
 ;Check for "^", timeout, or blank entry
"RTN","BPSRPT3",246,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1)!($G(X)="") S VAL="^"
"RTN","BPSRPT3",247,0)
 ;
"RTN","BPSRPT3",248,0)
 I VAL="" D
"RTN","BPSRPT3",249,0)
 .S $P(VAL,U)=Y
"RTN","BPSRPT3",250,0)
 .S DIR(0)="DA^"_VAL_":DT:EX",DIR("A")="  GO TO "_TYPE_" DATE: ",DIR("B")="T"
"RTN","BPSRPT3",251,0)
 .D ^DIR
"RTN","BPSRPT3",252,0)
 .;
"RTN","BPSRPT3",253,0)
 .;Check for "^", timeout, or blank entry
"RTN","BPSRPT3",254,0)
 .I ($G(DUOUT)=1)!($G(DTOUT)=1)!($G(X)="") S VAL="^" Q
"RTN","BPSRPT3",255,0)
 .;
"RTN","BPSRPT3",256,0)
 .;Define Entry
"RTN","BPSRPT3",257,0)
 .S $P(VAL,U,2)=Y
"RTN","BPSRPT3",258,0)
 ;
"RTN","BPSRPT3",259,0)
 Q VAL
"RTN","BPSRPT5")
0^25^B81419948
"RTN","BPSRPT5",1,0)
BPSRPT5 ;BHAM ISC/BEE - ECME REPORTS ;14-FEB-05
"RTN","BPSRPT5",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSRPT5",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","BPSRPT5",4,0)
 ;
"RTN","BPSRPT5",5,0)
 Q
"RTN","BPSRPT5",6,0)
 ;
"RTN","BPSRPT5",7,0)
 ;Routine to Display the Reports
"RTN","BPSRPT5",8,0)
 ;
"RTN","BPSRPT5",9,0)
 ;Print Report Line 1
"RTN","BPSRPT5",10,0)
 ;
"RTN","BPSRPT5",11,0)
 ; Input Variables -> BPRTYPE,BPDIV,BPGRPLAN,BPDFN,BPRX,BPREF,BPX,BPSRTDT,BPBIL,BPINS
"RTN","BPSRPT5",12,0)
 ;                    BPCOLL,BPEXCEL
"RTN","BPSRPT5",13,0)
 ; 
"RTN","BPSRPT5",14,0)
WRLINE1(BPRTYPE,BPREC,BPDIV,BPGRPLAN,BPDFN,BPRX,BPREF,BPX,BPSRTDT,BPBIL,BPINS,BPCOLL,BPEXCEL) ;
"RTN","BPSRPT5",15,0)
 ;
"RTN","BPSRPT5",16,0)
 ;Excel Output
"RTN","BPSRPT5",17,0)
 I $G(BPEXCEL) D WRLINE1^BPSRPT8(BPRTYPE,.BPREC,BPDIV,BPGRPLAN,BPDFN,BPRX,BPREF,BPX,BPSRTDT,BPBIL,BPINS,BPCOLL) Q
"RTN","BPSRPT5",18,0)
 ;
"RTN","BPSRPT5",19,0)
 ;Report Output
"RTN","BPSRPT5",20,0)
 W !,$$PATNAME^BPSRPT6(BPDFN)  ;Patient Name
"RTN","BPSRPT5",21,0)
 W ?27,"("_$$SSN4^BPSRPT6(BPDFN)_")"  ;L4SSN
"RTN","BPSRPT5",22,0)
 W ?35,$$RXNUM^BPSRPT6(BPRX)_$$COPAY^BPSRPT6(BPRX)  ;RX Number
"RTN","BPSRPT5",23,0)
 W ?47,BPREF,"/",$$ECMENUM^BPSRPT1($P(BPX,U,3)) ;Refill/ECME Number
"RTN","BPSRPT5",24,0)
 ;
"RTN","BPSRPT5",25,0)
 I (BPRTYPE=1)!(BPRTYPE=4) D  Q
"RTN","BPSRPT5",26,0)
 . W ?68,$$DATTIM^BPSRPT1(BPSRTDT)  ;Date
"RTN","BPSRPT5",27,0)
 . W ?78,$J(BPBIL,10,2),?100,$J(BPINS,10,2),?122,$S(BPCOLL]"":$J(BPCOLL,10,2),1:"")
"RTN","BPSRPT5",28,0)
 ;
"RTN","BPSRPT5",29,0)
 I BPRTYPE=2 D  Q
"RTN","BPSRPT5",30,0)
 . W ?68,$$DATTIM^BPSRPT1(BPSRTDT)  ;Date
"RTN","BPSRPT5",31,0)
 . W ?78,$$DATTIM^BPSRPT1(+BPX)
"RTN","BPSRPT5",32,0)
 . W ?91,$$MWCNAM^BPSRPT1($$MWC^BPSRPT6(BPRX,BPREF))
"RTN","BPSRPT5",33,0)
 . W ?94,$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))
"RTN","BPSRPT5",34,0)
 . W ?98,$$RXSTANAM^BPSRPT2($$RXSTATUS^BPSRPT6(BPRX,0))
"RTN","BPSRPT5",35,0)
 . W ?101,$S($P(BPX,U):"/RL",1:"/NR")
"RTN","BPSRPT5",36,0)
 I BPRTYPE=3 D  Q
"RTN","BPSRPT5",37,0)
 . W ?68,$$DATTIM^BPSRPT1(BPSRTDT)  ;Date
"RTN","BPSRPT5",38,0)
 . W ?100,$J(BPBIL,10,2),?122,$J(BPINS,10,2)
"RTN","BPSRPT5",39,0)
 ;
"RTN","BPSRPT5",40,0)
 I BPRTYPE=5 D  Q
"RTN","BPSRPT5",41,0)
 . W ?60,$$DATTIM^BPSRPT1($$TRANDT^BPSRPT2($P(BPX,U,3),1))
"RTN","BPSRPT5",42,0)
 . W ?78,$$TTYPE^BPSRPT7($P(BPX,U,4),$P(BPX,U,5))
"RTN","BPSRPT5",43,0)
 . W ?95,$$RESPONSE^BPSRPT7($P(BPX,U,4),$P(BPX,U,5))
"RTN","BPSRPT5",44,0)
 ;
"RTN","BPSRPT5",45,0)
 I BPRTYPE=7 D  Q
"RTN","BPSRPT5",46,0)
 . W ?65,$$MWCNAM^BPSRPT1($$MWC^BPSRPT6(BPRX,BPREF))
"RTN","BPSRPT5",47,0)
 . W ?68,$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))
"RTN","BPSRPT5",48,0)
 . W ?72,$$RXSTANAM^BPSRPT2($$RXSTATUS^BPSRPT6(BPRX,0))
"RTN","BPSRPT5",49,0)
 . W ?75,$S($P(BPX,U):"/RL",1:"/NR")
"RTN","BPSRPT5",50,0)
 . W ?79,$S($P(BPX,U,13):"REJ",1:"")
"RTN","BPSRPT5",51,0)
 . W ?87,$$DRGNAM^BPSRPT6($P(BPX,U,14),32)
"RTN","BPSRPT5",52,0)
 Q
"RTN","BPSRPT5",53,0)
 ;
"RTN","BPSRPT5",54,0)
 ;Print Report Line 2
"RTN","BPSRPT5",55,0)
 ;
"RTN","BPSRPT5",56,0)
 ; Input Variables -> BPRTYPE,BPX,BPRX,BPREF,BPBIL,BPGRPLAN,BPEXCEL
"RTN","BPSRPT5",57,0)
 ; 
"RTN","BPSRPT5",58,0)
WRLINE2(BPRTYPE,BPREC,BPX,BPRX,BPREF,BPBIL,BPGRPLAN,BPEXCEL,BPICNT) ;
"RTN","BPSRPT5",59,0)
 ;
"RTN","BPSRPT5",60,0)
 ;Excel Output
"RTN","BPSRPT5",61,0)
 I $G(BPEXCEL) D WRLINE2^BPSRPT8(BPRTYPE,.BPREC,BPX,BPRX,BPREF,BPBIL,BPGRPLAN) Q
"RTN","BPSRPT5",62,0)
 ;
"RTN","BPSRPT5",63,0)
 ;Report Output
"RTN","BPSRPT5",64,0)
 I (BPRTYPE=1)!(BPRTYPE=4) D  Q
"RTN","BPSRPT5",65,0)
 . W !,?4,$$DRGNAM^BPSRPT6($P(BPX,U,14),32),?47,$$DATTIM^BPSRPT1(+BPX)
"RTN","BPSRPT5",66,0)
 . W ?68,$$MWCNAM^BPSRPT1($$MWC^BPSRPT6(BPRX,BPREF))
"RTN","BPSRPT5",67,0)
 . W ?71,$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))
"RTN","BPSRPT5",68,0)
 . W ?75,$$RXSTANAM^BPSRPT2($$RXSTATUS^BPSRPT6(BPRX,0))
"RTN","BPSRPT5",69,0)
 . W ?78,$S($P(BPX,U):"/RL",1:"/NR")
"RTN","BPSRPT5",70,0)
 . W ?82,$S($P(BPX,U,13):"REJ",1:"")
"RTN","BPSRPT5",71,0)
 . I BPRTYPE=1 W ?122,$J($$BILL^BPSRPT6(BPRX,BPREF),10)
"RTN","BPSRPT5",72,0)
 ;
"RTN","BPSRPT5",73,0)
 I BPRTYPE=2 D  Q
"RTN","BPSRPT5",74,0)
 . W !,?3,$E($$CRDHLDID^BPSRPT2(+$P(BPX,U,3)),3,23)
"RTN","BPSRPT5",75,0)
 . W ?31,$E($$GRPID^BPSRPT2(+$P(BPX,U,3)),3,10)
"RTN","BPSRPT5",76,0)
 . W ?41,$J(BPBIL,10,2)
"RTN","BPSRPT5",77,0)
 . W ?54,$$QTY^BPSRPT6(BPRX,BPREF)
"RTN","BPSRPT5",78,0)
 . W ?61,$$GETNDC^BPSRPT6(BPRX,BPREF)
"RTN","BPSRPT5",79,0)
 . W ?82,$$DRGNAM^BPSRPT6($P(BPX,U,14),32)
"RTN","BPSRPT5",80,0)
 ;
"RTN","BPSRPT5",81,0)
 I BPRTYPE=3 D  Q
"RTN","BPSRPT5",82,0)
 . W !,?4,$$DRGNAM^BPSRPT6($P(BPX,U,14),32)
"RTN","BPSRPT5",83,0)
 . W ?54,$$MWCNAM^BPSRPT1($$MWC^BPSRPT6(BPRX,BPREF))
"RTN","BPSRPT5",84,0)
 . W ?57,$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))
"RTN","BPSRPT5",85,0)
 . W ?60,$$RXSTANAM^BPSRPT2($$RXSTATUS^BPSRPT6(BPRX,0))
"RTN","BPSRPT5",86,0)
 . W ?63,$S($P(BPX,U):"/RL",1:"/NR")
"RTN","BPSRPT5",87,0)
 . W ?67,$S($P(BPX,U,13):"REJ",1:"")
"RTN","BPSRPT5",88,0)
 ;
"RTN","BPSRPT5",89,0)
 I BPRTYPE=5 D  Q
"RTN","BPSRPT5",90,0)
 . W !,?4,$$DRGNAM^BPSRPT6($P(BPX,U,14),32)
"RTN","BPSRPT5",91,0)
 . W ?38,$$MWCNAM^BPSRPT1($$MWC^BPSRPT6(BPRX,BPREF))
"RTN","BPSRPT5",92,0)
 . W ?41,$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))
"RTN","BPSRPT5",93,0)
 . W ?44,$$RXSTANAM^BPSRPT2($$RXSTATUS^BPSRPT6(BPRX,0))
"RTN","BPSRPT5",94,0)
 . W ?47,$S($P(BPX,U):"/RL",1:"/NR")
"RTN","BPSRPT5",95,0)
 . W ?51,$S($P(BPX,U,13):"REJ",1:"")
"RTN","BPSRPT5",96,0)
 . I $P(BPGRPLAN,U,2)]"" W ?60,$E($P(BPGRPLAN,U,2),1,30)
"RTN","BPSRPT5",97,0)
 . W ?122,$J($$ELAPSE^BPSRPT6($P(BPX,U,3)),10)
"RTN","BPSRPT5",98,0)
 ;
"RTN","BPSRPT5",99,0)
 I BPRTYPE=7 D  Q
"RTN","BPSRPT5",100,0)
 . W !,?3,$E($$CRDHLDID^BPSRPT2(+$P(BPX,U,3)),3,23)
"RTN","BPSRPT5",101,0)
 . W ?31,$E($$GRPID^BPSRPT2(+$P(BPX,U,3)),3,10)
"RTN","BPSRPT5",102,0)
 . W ?41,$$DATTIM^BPSRPT1(+$$CLOSEDT^BPSRPT2(+$P(BPX,U,3)))
"RTN","BPSRPT5",103,0)
 . N BPCLBY S BPCLBY=$E($$CLSBY^BPSRPT6(+$P(BPX,U,3)),1,25) S:BPCLBY="" BPCLBY="BLANK"
"RTN","BPSRPT5",104,0)
 . W ?59,BPCLBY S BPCNT(BPCLBY)=$G(BPCNT(BPCLBY))+1,BPGCNT(BPCLBY)=$G(BPGCNT(BPCLBY))+1,BPICNT(BPCLBY)=$G(BPICNT(BPCLBY))+1
"RTN","BPSRPT5",105,0)
 . W ?87,$E($P($$CLRSN^BPSRPT7(+$P(BPX,U,3)),U,2),1,30)
"RTN","BPSRPT5",106,0)
 Q
"RTN","BPSRPT5",107,0)
 ;
"RTN","BPSRPT5",108,0)
 ;Print Report Line 3
"RTN","BPSRPT5",109,0)
 ;
"RTN","BPSRPT5",110,0)
 ; Input Variables -> BPRTYPE,BPX,BPEXCEL
"RTN","BPSRPT5",111,0)
 ; 
"RTN","BPSRPT5",112,0)
WRLINE3(BPRTYPE,BPREC,BPX,BPEXCEL) N BP59
"RTN","BPSRPT5",113,0)
 S BP59=+$P(BPX,U,3)
"RTN","BPSRPT5",114,0)
 ;
"RTN","BPSRPT5",115,0)
 ;Excel Output
"RTN","BPSRPT5",116,0)
 I $G(BPEXCEL) D WRLINE3^BPSRPT8(BPRTYPE,.BPREC,BPX) Q
"RTN","BPSRPT5",117,0)
 ;
"RTN","BPSRPT5",118,0)
 ;Report Output
"RTN","BPSRPT5",119,0)
 I BPRTYPE=4 D
"RTN","BPSRPT5",120,0)
 . S NP=$$CHKP(1) Q:BPQ
"RTN","BPSRPT5",121,0)
 . ;Method
"RTN","BPSRPT5",122,0)
 . I $$AUTOREV^BPSRPT1(BP59) W !,?6,"AUTO/"
"RTN","BPSRPT5",123,0)
 . E  W !,?6,"REGULAR/"
"RTN","BPSRPT5",124,0)
 . ;Return Status
"RTN","BPSRPT5",125,0)
 . I $P(BPX,U,15)["ACCEPTED" W "ACCEPTED/"
"RTN","BPSRPT5",126,0)
 . E  W "REJECTED/"
"RTN","BPSRPT5",127,0)
 . ;Reason
"RTN","BPSRPT5",128,0)
 . W $$RVSRSN^BPSRPT7(+$P(BPX,U,3))
"RTN","BPSRPT5",129,0)
 ;
"RTN","BPSRPT5",130,0)
 Q
"RTN","BPSRPT5",131,0)
 ;
"RTN","BPSRPT5",132,0)
 ;Display the Report
"RTN","BPSRPT5",133,0)
 ;
"RTN","BPSRPT5",134,0)
 ; Input Variables -> REF,BPEXCEL,BPSCR,BPRPTNAM,BPSUMDET,BPPAGE
"RTN","BPSRPT5",135,0)
 ;
"RTN","BPSRPT5",136,0)
REPORT(REF,BPEXCEL,BPSCR,BPRPTNAM,BPSUMDET,BPPAGE) N BPBIL,BPBLINE,BPCOLL,BPDFN,BPDIV,BPELTM,BPGELTM,BPGBIL,BPGINS,BPGCOLL,BPGCNT,BPGRPLAN,BPINS,BPLINES,BPREC,BPREF,BPRX,BPSRTDT,BPSTATUS,BPTBIL,BPTCOLL,BPTINS,BPX,BPSGTOT,NP,BPSDATA
"RTN","BPSRPT5",137,0)
 I '$D(@REF) D HDR^BPSRPT7(BPRTYPE,BPRPTNAM,.BPPAGE) W !,"No data meets the criteria." G XREPORT
"RTN","BPSRPT5",138,0)
 S (BPGBIL,BPGINS,BPGCOLL,BPGCNT,BPGELTM)=0
"RTN","BPSRPT5",139,0)
 S BPDIV="" F  S BPDIV=$O(@REF@(BPDIV)) Q:BPDIV=""  D  Q:BPQ
"RTN","BPSRPT5",140,0)
 .S BPGRPLAN=0 D HDR^BPSRPT7(BPRTYPE,BPRPTNAM,.BPPAGE)
"RTN","BPSRPT5",141,0)
 .N BPCNT S (BPTBIL,BPTINS,BPTCOLL,BPCNT,BPELTM)=0
"RTN","BPSRPT5",142,0)
 .F  S BPGRPLAN=$O(@REF@(BPDIV,BPGRPLAN)) Q:BPGRPLAN=""  D  Q:BPQ
"RTN","BPSRPT5",143,0)
 .. I BPSUMDET=0 D WRPLAN(BPGRPLAN) Q:BPQ
"RTN","BPSRPT5",144,0)
 .. S BPBLINE=""  ;Reset Blank Line Indicator
"RTN","BPSRPT5",145,0)
 .. N BPSCLM,BPREC,BPTOT,BPIBIL,BPICNT,BPICOL,BPIINS
"RTN","BPSRPT5",146,0)
 .. S (BPIBIL,BPICNT,BPICOL,BPIINS)=0
"RTN","BPSRPT5",147,0)
 .. S BPDFN="" F  S BPDFN=$O(@REF@(BPDIV,BPGRPLAN,BPDFN)) Q:BPDFN=""  D  Q:BPQ
"RTN","BPSRPT5",148,0)
 ... S BPSRTDT="" F  S BPSRTDT=$O(@REF@(BPDIV,BPGRPLAN,BPDFN,BPSRTDT)) Q:BPSRTDT=""  D  Q:BPQ
"RTN","BPSRPT5",149,0)
 .... S BPRX="" F  S BPRX=$O(@REF@(BPDIV,BPGRPLAN,BPDFN,BPSRTDT,BPRX)) Q:BPRX=""  D  Q:BPQ
"RTN","BPSRPT5",150,0)
 ..... S BPREF="" F  S BPREF=$O(@REF@(BPDIV,BPGRPLAN,BPDFN,BPSRTDT,BPRX,BPREF)) Q:BPREF=""  D  Q:BPQ
"RTN","BPSRPT5",151,0)
 ...... S BPX=@REF@(BPDIV,BPGRPLAN,BPDFN,BPSRTDT,BPRX,BPREF)
"RTN","BPSRPT5",152,0)
 ...... S BPCNT=BPCNT+1,BPGCNT=BPGCNT+1,BPICNT=BPICNT+1
"RTN","BPSRPT5",153,0)
 ...... I BPRTYPE=5 D
"RTN","BPSRPT5",154,0)
 ....... S BPELTM=BPELTM+$$ELAPSE^BPSRPT6($P(BPX,U,3))
"RTN","BPSRPT5",155,0)
 ....... S BPGELTM=BPGELTM+$$ELAPSE^BPSRPT6($P(BPX,U,3))
"RTN","BPSRPT5",156,0)
 ...... S BPBIL=$$BILLED^BPSRPT7($P(BPX,U,3)),BPTBIL=BPTBIL+BPBIL,BPGBIL=BPGBIL+BPBIL,BPIBIL=BPIBIL+BPBIL
"RTN","BPSRPT5",157,0)
 ...... S BPINS=$$INSPAID^BPSRPT2($P(BPX,U,3)),BPTINS=BPTINS+BPINS,BPGINS=BPGINS+BPINS,BPIINS=BPIINS+BPINS
"RTN","BPSRPT5",158,0)
 ...... S BPCOLL=$$COLLECTD^BPSRPT6(BPRX,BPREF),BPTCOLL=BPTCOLL+BPCOLL,BPGCOLL=BPGCOLL+BPCOLL,BPICOL=BPICOL+BPCOLL
"RTN","BPSRPT5",159,0)
 ...... I BPRTYPE=6 D  Q
"RTN","BPSRPT5",160,0)
 .......S BPSTATUS=$P(BPX,U,7)
"RTN","BPSRPT5",161,0)
 .......I BPSTATUS["REJECT" S $P(BPSCLM(BPSRTDT),U,3)=$P($G(BPSCLM(BPSRTDT)),U,3)+BPBIL
"RTN","BPSRPT5",162,0)
 .......I BPSTATUS["PAYABLE" S $P(BPSCLM(BPSRTDT),U,4)=$P($G(BPSCLM(BPSRTDT)),U,4)+BPBIL
"RTN","BPSRPT5",163,0)
 .......S $P(BPSCLM(BPSRTDT),U,2)=$P($G(BPSCLM(BPSRTDT)),U,2)+BPBIL
"RTN","BPSRPT5",164,0)
 .......S $P(BPSCLM(BPSRTDT),U,5)=$P($G(BPSCLM(BPSRTDT)),U,5)+BPINS
"RTN","BPSRPT5",165,0)
 .......S $P(BPSCLM(BPSRTDT),U)=$P($G(BPSCLM(BPSRTDT)),U)+1
"RTN","BPSRPT5",166,0)
 ...... ;
"RTN","BPSRPT5",167,0)
 ...... ;Display Detail Section
"RTN","BPSRPT5",168,0)
 ...... Q:BPSUMDET=1
"RTN","BPSRPT5",169,0)
 ...... S BPREC=""  ;Reset Excel Display Variable
"RTN","BPSRPT5",170,0)
 ...... I 'BPEXCEL,BPRTYPE=1,BPBLINE=1 S NP=$$CHKP(2) Q:BPQ  I BPBLINE=1 W !  ;Print blank line
"RTN","BPSRPT5",171,0)
 ...... S NP=$$CHKP(1) Q:BPQ  D WRLINE1(BPRTYPE,.BPREC,BPDIV,BPGRPLAN,BPDFN,BPRX,BPREF,BPX,BPSRTDT,BPBIL,BPINS,BPCOLL,BPEXCEL)
"RTN","BPSRPT5",172,0)
 ...... S NP=$$CHKP(1) Q:BPQ  D WRLINE2(BPRTYPE,.BPREC,BPX,BPRX,BPREF,BPBIL,BPGRPLAN,BPEXCEL,.BPICNT)
"RTN","BPSRPT5",173,0)
 ...... D WRLINE3(BPRTYPE,.BPREC,BPX,BPEXCEL)
"RTN","BPSRPT5",174,0)
 ...... I (",2,7,")[BPRTYPE,'BPEXCEL D  Q:BPQ
"RTN","BPSRPT5",175,0)
 ....... D COMMENT(+$P(BPX,U,3)) Q:BPQ
"RTN","BPSRPT5",176,0)
 ....... S NP=$$CHKP(1) Q:BPQ
"RTN","BPSRPT5",177,0)
 ....... W !,?10,"Claim ID: ",$$CLAIMID^BPSRPT2(+$P(BPX,U,3))
"RTN","BPSRPT5",178,0)
 ....... N BPSARR,BPRJCNT,BPZZ S BPRJCNT=$$REJTEXT^BPSRPT2(+$P(BPX,U,3),.BPSARR)
"RTN","BPSRPT5",179,0)
 ....... F BPZZ=1:1:BPRJCNT S NP=$$CHKP(1) Q:BPQ  W !,?10,BPSARR(BPZZ) Q:BPQ
"RTN","BPSRPT5",180,0)
 ...... I 'BPEXCEL,BPRTYPE=1 S BPBLINE=1  ;Set Blank Line Display Indicator
"RTN","BPSRPT5",181,0)
 .. I BPRTYPE=6 D PTBDT^BPSRPT7(BPDIV,BPSUMDET,.BPSCLM,.BPSGTOT)
"RTN","BPSRPT5",182,0)
 .. I 'BPQ,(",1,2,3,4,7,")[BPRTYPE,'BPEXCEL S NP=$$CHKP(5) Q:BPQ  D ITOT^BPSRPT8(BPRTYPE,BPDIV,BPGRPLAN,BPIBIL,BPIINS,BPICOL,.BPICNT)
"RTN","BPSRPT5",183,0)
 .I 'BPEXCEL,'BPQ,BPRTYPE'=6 S NP=$$CHKP(5) Q:BPQ  D TOTALS^BPSRPT7(BPRTYPE,BPDIV,BPTBIL,BPTINS,BPTCOLL,.BPCNT,BPELTM)
"RTN","BPSRPT5",184,0)
 .I 'BPEXCEL,'BPQ,$O(@REF@(BPDIV))]"" D:$G(BPSCR) PAUSE^BPSRPT1 Q:BPQ
"RTN","BPSRPT5",185,0)
 ;
"RTN","BPSRPT5",186,0)
 ;Print Grand Totals
"RTN","BPSRPT5",187,0)
 I 'BPEXCEL D
"RTN","BPSRPT5",188,0)
 .I 'BPQ,BPRTYPE=6 D PGTOT6^BPSRPT7($G(BPSGTOT))
"RTN","BPSRPT5",189,0)
 .I 'BPQ,BPRTYPE'=6 S NP=$$CHKP(5) Q:BPQ  D PGTOT^BPSRPT7(BPRTYPE,BPGBIL,BPGINS,BPGCOLL,.BPGCNT,BPGELTM)
"RTN","BPSRPT5",190,0)
 ;
"RTN","BPSRPT5",191,0)
XREPORT Q
"RTN","BPSRPT5",192,0)
 ;
"RTN","BPSRPT5",193,0)
 ;Display Comments
"RTN","BPSRPT5",194,0)
 ; 
"RTN","BPSRPT5",195,0)
 ;Input Variable: BP59 - Lookup to BPS TRANSACTION (#59)
"RTN","BPSRPT5",196,0)
 ;
"RTN","BPSRPT5",197,0)
COMMENT(BP59) N CNODE,I,J,NP
"RTN","BPSRPT5",198,0)
 S I="" F  S I=$O(^BPST(BP59,11,"B",I),-1) Q:'I  D  Q:BPQ
"RTN","BPSRPT5",199,0)
 .S NP=$$CHKP(1) Q:BPQ
"RTN","BPSRPT5",200,0)
 .S J=$O(^BPST(BP59,11,"B",I,"")) Q:J=""
"RTN","BPSRPT5",201,0)
 .S CNODE=$G(^BPST(BP59,11,J,0))
"RTN","BPSRPT5",202,0)
 .W !,?10,$$DATTIM^BPSRPT1(+$P($P(CNODE,U),"."))," - ",$P(CNODE,U,3)
"RTN","BPSRPT5",203,0)
 Q
"RTN","BPSRPT5",204,0)
 ;
"RTN","BPSRPT5",205,0)
 ;Display the Insurance
"RTN","BPSRPT5",206,0)
 ;
"RTN","BPSRPT5",207,0)
 ; Input Variable -> BPSDATA -> if 0, skip page check
"RTN","BPSRPT5",208,0)
 ;                   BPEXCEL -> 1 - Print to Excel/0 Regular Display
"RTN","BPSRPT5",209,0)
 ;
"RTN","BPSRPT5",210,0)
WRPLAN(BPGRPLAN) N INS,NP
"RTN","BPSRPT5",211,0)
 ;
"RTN","BPSRPT5",212,0)
 I BPSUMDET'=0 Q
"RTN","BPSRPT5",213,0)
 I BPEXCEL Q
"RTN","BPSRPT5",214,0)
 ;
"RTN","BPSRPT5",215,0)
 ;Skip for Recent Transactions and Totals by Date Reports
"RTN","BPSRPT5",216,0)
 I BPRTYPE=5!(BPRTYPE=6) Q
"RTN","BPSRPT5",217,0)
 ;
"RTN","BPSRPT5",218,0)
 I $G(BPSDATA) S NP=$$CHKP(5) Q:BPQ!NP
"RTN","BPSRPT5",219,0)
 ;
"RTN","BPSRPT5",220,0)
 ;Get and display the Insurance Name
"RTN","BPSRPT5",221,0)
 S INS=$E(BPGRPLAN,1,90)
"RTN","BPSRPT5",222,0)
 I INS]"" D
"RTN","BPSRPT5",223,0)
 .D ULINE("-")
"RTN","BPSRPT5",224,0)
 .W !,INS
"RTN","BPSRPT5",225,0)
 .D ULINE("-")
"RTN","BPSRPT5",226,0)
 Q
"RTN","BPSRPT5",227,0)
 ;
"RTN","BPSRPT5",228,0)
 ;Check for End of Page
"RTN","BPSRPT5",229,0)
 ;
"RTN","BPSRPT5",230,0)
 ; Input variables -> BPLINES -> Number of lines from bottom
"RTN","BPSRPT5",231,0)
 ;                    BPEXCEL -> 1 - Print to Excel/0 Regular Display
"RTN","BPSRPT5",232,0)
 ; Output variable -> BPSDATA -> 0 -> New screen, no data displayed yet
"RTN","BPSRPT5",233,0)
 ;                               1 -> Data displayed on current screen
"RTN","BPSRPT5",234,0)
 ; 
"RTN","BPSRPT5",235,0)
CHKP(BPLINES) Q:$G(BPEXCEL) 0
"RTN","BPSRPT5",236,0)
 S BPLINES=BPLINES+1
"RTN","BPSRPT5",237,0)
 I $G(BPSCR) S BPLINES=BPLINES+2
"RTN","BPSRPT5",238,0)
 I $G(BPSCR),'$G(BPSDATA) S BPSDATA=1 Q 0
"RTN","BPSRPT5",239,0)
 S BPSDATA=1
"RTN","BPSRPT5",240,0)
 I $Y>(IOSL-BPLINES) D:$G(BPSCR) PAUSE^BPSRPT1 Q:$G(BPQ) 0 D HDR^BPSRPT7(BPRTYPE,BPRPTNAM,.BPPAGE) Q 1
"RTN","BPSRPT5",241,0)
 Q 0
"RTN","BPSRPT5",242,0)
 ;
"RTN","BPSRPT5",243,0)
 ;Print one line of characters
"RTN","BPSRPT5",244,0)
 ;
"RTN","BPSRPT5",245,0)
ULINE(X) N I
"RTN","BPSRPT5",246,0)
 W ! F I=1:1:132 W $G(X,"-")
"RTN","BPSRPT5",247,0)
 Q
"RTN","BPSRPT6")
0^23^B68506243
"RTN","BPSRPT6",1,0)
BPSRPT6 ;BHAM ISC/BEE - ECME REPORTS ;14-FEB-05
"RTN","BPSRPT6",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSRPT6",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","BPSRPT6",4,0)
 ;
"RTN","BPSRPT6",5,0)
 Q
"RTN","BPSRPT6",6,0)
 ;
"RTN","BPSRPT6",7,0)
 ;Get the Insurance Company pointer and name
"RTN","BPSRPT6",8,0)
 ;
"RTN","BPSRPT6",9,0)
 ; Returned Value -> ptr^Insurance Company Name
"RTN","BPSRPT6",10,0)
 ; 
"RTN","BPSRPT6",11,0)
INSNAM(BP59) N BPIN,BPDOS,BPDFN,BPSZZ,BP36,BPX
"RTN","BPSRPT6",12,0)
 ;
"RTN","BPSRPT6",13,0)
 ;Reset Insurance
"RTN","BPSRPT6",14,0)
 S BP36=""
"RTN","BPSRPT6",15,0)
 ;
"RTN","BPSRPT6",16,0)
 ;First Pull From BPS Transactions
"RTN","BPSRPT6",17,0)
 S BPIN=+$P($G(^BPST(BP59,9)),U)
"RTN","BPSRPT6",18,0)
 I +BPIN S BP36=$P($G(^BPST(BP59,10,BPIN,0)),U,7) S:BP36]"" BP36="1^"_BP36
"RTN","BPSRPT6",19,0)
 ;
"RTN","BPSRPT6",20,0)
 ;If Not Found, look up using API
"RTN","BPSRPT6",21,0)
 I BP36="" D
"RTN","BPSRPT6",22,0)
 .S BPDOS=+$P($G(^BPST(BP59,12)),U,2)\1
"RTN","BPSRPT6",23,0)
 .I BPDOS=0 S BPDOS=+$P($G(^BPST(BP59,0)),U,8)\1
"RTN","BPSRPT6",24,0)
 .S BPDFN=+$P($G(^BPST(BP59,0)),U,6)
"RTN","BPSRPT6",25,0)
 .S BPX=$$INSUR^IBBAPI(BPDFN,BPDOS,,.BPSZZ,"1")
"RTN","BPSRPT6",26,0)
 .S BP36=$G(BPSZZ("IBBAPI","INSUR",1,1))
"RTN","BPSRPT6",27,0)
 ;
"RTN","BPSRPT6",28,0)
 ;If Not Found, put in MISSING INSURANCE
"RTN","BPSRPT6",29,0)
 I $TR(BP36,U)="" S BP36=" ^**MISSING INSURANCE**"
"RTN","BPSRPT6",30,0)
 ;
"RTN","BPSRPT6",31,0)
 Q BP36
"RTN","BPSRPT6",32,0)
 ;
"RTN","BPSRPT6",33,0)
 ;Select an Insurance Company file entry (Fileman Lookup)
"RTN","BPSRPT6",34,0)
 ;
"RTN","BPSRPT6",35,0)
 ; Returned value -> Insurance Company Name
"RTN","BPSRPT6",36,0)
 ; 
"RTN","BPSRPT6",37,0)
SELINS() N INS
"RTN","BPSRPT6",38,0)
 S INS=$$SELINSUR^IBNCPDPI("Select Insurance","")
"RTN","BPSRPT6",39,0)
 I $P(INS,U)=-1 S INS="^"
"RTN","BPSRPT6",40,0)
 E  S INS=$P(INS,U,2)
"RTN","BPSRPT6",41,0)
 Q INS
"RTN","BPSRPT6",42,0)
 ;
"RTN","BPSRPT6",43,0)
 ;Get the drug name for display
"RTN","BPSRPT6",44,0)
 ;
"RTN","BPSRPT6",45,0)
 ; Input variable ->  BP50 - Lookup to DRUG (#50)
"RTN","BPSRPT6",46,0)
 ;                   BPLEN - Length of the display field
"RTN","BPSRPT6",47,0)
 ; Returned value -> Name of the drug
"RTN","BPSRPT6",48,0)
 ; 
"RTN","BPSRPT6",49,0)
DRGNAM(BP50,BPLEN) Q $E($$DRUGDIE^BPSUTIL(+BP50,.01,"E"),1,BPLEN)
"RTN","BPSRPT6",50,0)
 ;       
"RTN","BPSRPT6",51,0)
 ;Select a DRUG file entry (Fileman Lookup)
"RTN","BPSRPT6",52,0)
 ;
"RTN","BPSRPT6",53,0)
 ; Returned Variable -> Y
"RTN","BPSRPT6",54,0)
 ; 
"RTN","BPSRPT6",55,0)
SELDRG N DIC S DIC(0)="QEAM",DIC=50,DIC("A")="Select Drug: "
"RTN","BPSRPT6",56,0)
 D DRUGDIC^BPSUTIL(.DIC)
"RTN","BPSRPT6",57,0)
 Q
"RTN","BPSRPT6",58,0)
 ;
"RTN","BPSRPT6",59,0)
 ;Get the drug class for display
"RTN","BPSRPT6",60,0)
 ;
"RTN","BPSRPT6",61,0)
 ; Input variable -> BP50605 - Lookup to VA DRUG CLASS (#50.605)
"RTN","BPSRPT6",62,0)
 ;                   BPLEN - Length of the display field
"RTN","BPSRPT6",63,0)
 ; Returned value -> Name of the drug class
"RTN","BPSRPT6",64,0)
 ;                   
"RTN","BPSRPT6",65,0)
DRGCLNAM(BP50605,BPLEN) N IEN,Y
"RTN","BPSRPT6",66,0)
 K ^TMP($J,"BPSRPT6")
"RTN","BPSRPT6",67,0)
 S Y=""
"RTN","BPSRPT6",68,0)
 I BP50605]"" D 
"RTN","BPSRPT6",69,0)
 .D C^PSN50P65(BP50605,"","BPSRPT6")
"RTN","BPSRPT6",70,0)
 .S IEN=$O(^TMP($J,"BPSRPT6",0))
"RTN","BPSRPT6",71,0)
 .I IEN]"" S Y=$E($G(^TMP($J,"BPSRPT6",IEN,1)),1,BPLEN)
"RTN","BPSRPT6",72,0)
 K ^TMP($J,"BPSRPT6")
"RTN","BPSRPT6",73,0)
 Q Y
"RTN","BPSRPT6",74,0)
 ;
"RTN","BPSRPT6",75,0)
 ;Select a VA DRUG CLASS file entry (Fileman Lookup)
"RTN","BPSRPT6",76,0)
 ;
"RTN","BPSRPT6",77,0)
SELDRGC N DIR,DIRUT,DTOUT,DUOUT,IEN,TOT,X
"RTN","BPSRPT6",78,0)
 K ^TMP($J,"BPSRPT6")
"RTN","BPSRPT6",79,0)
 ;
"RTN","BPSRPT6",80,0)
 F  D  Q:Y]""
"RTN","BPSRPT6",81,0)
 .K ^TMP($J,"BPSRPT6")
"RTN","BPSRPT6",82,0)
 .S DIR(0)="FO^1:35"
"RTN","BPSRPT6",83,0)
 .S DIR("A")="Select Drug Class"
"RTN","BPSRPT6",84,0)
 .S DIR("?")="Answer with VA DRUG CLASS CODE, or CLASSIFICATION. TYPE '??' FOR A LIST"
"RTN","BPSRPT6",85,0)
 .S DIR("??")="^D DCLIST^BPSRPT6"
"RTN","BPSRPT6",86,0)
 .D ^DIR
"RTN","BPSRPT6",87,0)
 .I ($G(DUOUT)=1)!($G(DTOUT)=1)!($G(Y)="") S Y="^" Q
"RTN","BPSRPT6",88,0)
 .S Y=$$UP^XLFSTR(Y)
"RTN","BPSRPT6",89,0)
 .D C^PSN50P65("",Y,"BPSRPT6")
"RTN","BPSRPT6",90,0)
 .;
"RTN","BPSRPT6",91,0)
 .;Pull Total Entries Found
"RTN","BPSRPT6",92,0)
 .S TOT=+$G(^TMP($J,"BPSRPT6",0))
"RTN","BPSRPT6",93,0)
 .;
"RTN","BPSRPT6",94,0)
 .;Check for no entries found
"RTN","BPSRPT6",95,0)
 .I TOT<1 W "  ??" S Y="" Q
"RTN","BPSRPT6",96,0)
 .;
"RTN","BPSRPT6",97,0)
 .;Check for Unique Entry
"RTN","BPSRPT6",98,0)
 .I TOT=1 D  Q
"RTN","BPSRPT6",99,0)
 ..S Y="",IEN=$O(^TMP($J,"BPSRPT6",0))
"RTN","BPSRPT6",100,0)
 ..I IEN]"" S Y=$G(^TMP($J,"BPSRPT6",IEN,1)) W $C(13),"Select Drug Class: ",Y
"RTN","BPSRPT6",101,0)
 .;
"RTN","BPSRPT6",102,0)
 .;Check for multiple entries - allow user to pick
"RTN","BPSRPT6",103,0)
 .I TOT>1 S Y=$$DCSEL(TOT)
"RTN","BPSRPT6",104,0)
 .I Y="^^" S Y=""
"RTN","BPSRPT6",105,0)
 .;
"RTN","BPSRPT6",106,0)
 Q
"RTN","BPSRPT6",107,0)
 ;
"RTN","BPSRPT6",108,0)
 ;List Entries in VA DRUG CLASS
"RTN","BPSRPT6",109,0)
 ;
"RTN","BPSRPT6",110,0)
DCLIST N CL,DTOUT,IEN,Y
"RTN","BPSRPT6",111,0)
 K ^TMP($J,"BPSRPT6")
"RTN","BPSRPT6",112,0)
 D C^PSN50P65("","??","BPSRPT6")
"RTN","BPSRPT6",113,0)
 ;
"RTN","BPSRPT6",114,0)
 ;First create new index - sorted by CLASSIFICATION
"RTN","BPSRPT6",115,0)
 S IEN=0 F  S IEN=$O(^TMP($J,"BPSRPT6",IEN)) Q:'IEN  D
"RTN","BPSRPT6",116,0)
 .S CL=$G(^TMP($J,"BPSRPT6",IEN,1)) Q:CL=""
"RTN","BPSRPT6",117,0)
 .S ^TMP($J,"BPSRPT6","B",CL,IEN)=$G(^TMP($J,"BPSRPT6",IEN,".01"))
"RTN","BPSRPT6",118,0)
 ;
"RTN","BPSRPT6",119,0)
 ;Now loop through and display entries
"RTN","BPSRPT6",120,0)
 S $X=0,$Y=0 W !,?3,"Choose from: ",!
"RTN","BPSRPT6",121,0)
 S (Y,CL)="" F  S CL=$O(^TMP($J,"BPSRPT6","B",CL)) Q:CL=""  D  Q:Y]""
"RTN","BPSRPT6",122,0)
 .S IEN="" F  S IEN=$O(^TMP($J,"BPSRPT6","B",CL,IEN)) Q:IEN=""  D  Q:Y]""
"RTN","BPSRPT6",123,0)
 ..W ?3,$G(^TMP($J,"BPSRPT6","B",CL,IEN)),!,?3,CL,!
"RTN","BPSRPT6",124,0)
 ..I $Y>19!'$Y D
"RTN","BPSRPT6",125,0)
 ...W ?3 R "'^' TO STOP: ",Y:$G(DTIME,300)
"RTN","BPSRPT6",126,0)
 ...E  S DTOUT=1
"RTN","BPSRPT6",127,0)
 ...W $C(13),$J("",17),$C(13)
"RTN","BPSRPT6",128,0)
 ...I ($G(DTOUT)=1)!($G(Y)="^") S Y="^" Q
"RTN","BPSRPT6",129,0)
 ...S $X=0,$Y=0
"RTN","BPSRPT6",130,0)
 ;
"RTN","BPSRPT6",131,0)
 K ^TMP($J,"BPSRPT6")
"RTN","BPSRPT6",132,0)
 Q
"RTN","BPSRPT6",133,0)
 ;
"RTN","BPSRPT6",134,0)
 ;Allow user to pick VA DRUG CLASS entry based on initial input
"RTN","BPSRPT6",135,0)
 ;
"RTN","BPSRPT6",136,0)
 ; Input variable - TOT -> Total entries placed in ^TMP($J,"BPSRPT6")
"RTN","BPSRPT6",137,0)
 ; Returned value - VA DRUG CLASSIFICATION
"RTN","BPSRPT6",138,0)
 ;
"RTN","BPSRPT6",139,0)
DCSEL(TOT) N CL,DTOUT,I,IEN,IX,Y
"RTN","BPSRPT6",140,0)
 ;
"RTN","BPSRPT6",141,0)
 ;First create new index
"RTN","BPSRPT6",142,0)
 F IX="B","N" K ^TMP($J,"BPSRPT6",IX)
"RTN","BPSRPT6",143,0)
 S Y="",IEN=0 F  S IEN=$O(^TMP($J,"BPSRPT6",IEN)) Q:'IEN  D
"RTN","BPSRPT6",144,0)
 .S CL=$G(^TMP($J,"BPSRPT6",IEN,1)) Q:CL=""
"RTN","BPSRPT6",145,0)
 .S ^TMP($J,"BPSRPT6","B",CL,IEN)=$G(^TMP($J,"BPSRPT6",IEN,".01"))
"RTN","BPSRPT6",146,0)
 ;
"RTN","BPSRPT6",147,0)
 ;Now loop through and allow one to be picked
"RTN","BPSRPT6",148,0)
 S (Y,CL)="" F  S CL=$O(^TMP($J,"BPSRPT6","B",CL)) Q:CL=""  D  Q:Y]""
"RTN","BPSRPT6",149,0)
 .S IEN="" F  S IEN=$O(^TMP($J,"BPSRPT6","B",CL,IEN)) Q:IEN=""  D  Q:Y]""
"RTN","BPSRPT6",150,0)
 ..S I=$G(I)+1 W !,?5,I,?9,$G(^TMP($J,"BPSRPT6","B",CL,IEN)),!,?3,CL
"RTN","BPSRPT6",151,0)
 ..S ^TMP($J,"BPSRPT6","N",I)=CL
"RTN","BPSRPT6",152,0)
 ..;
"RTN","BPSRPT6",153,0)
 ..;Stop after every 5 entries
"RTN","BPSRPT6",154,0)
 ..I I#5=0 I TOT>I D  Q:$G(Y)="^"!($G(Y)="^^")
"RTN","BPSRPT6",155,0)
 ...W !,"Press <RETURN> to see more, '^' to exit this list, OR"
"RTN","BPSRPT6",156,0)
 ...W !,"CHOOSE 1 - "_I R ": ",Y:DTIME S:'$T DTOUT=1
"RTN","BPSRPT6",157,0)
 ...I ($G(DTOUT)=1)!(Y="^") S Y="^^"
"RTN","BPSRPT6",158,0)
 ..;
"RTN","BPSRPT6",159,0)
 ..;Stop after last entry
"RTN","BPSRPT6",160,0)
 ..I I=TOT D
"RTN","BPSRPT6",161,0)
 ...W !,"CHOOSE 1 - "_I R ": ",Y:DTIME S:'$T DTOUT=1
"RTN","BPSRPT6",162,0)
 ..I ($G(DTOUT)=1)!(Y="^") S Y="^^"
"RTN","BPSRPT6",163,0)
 ..;
"RTN","BPSRPT6",164,0)
 ..;Check for valid entry
"RTN","BPSRPT6",165,0)
 ..I Y="^^" S Y=""
"RTN","BPSRPT6",166,0)
 ..I Y]"",'$D(^TMP($J,"BPSRPT6","N",Y)) W "  ??" S Y=""
"RTN","BPSRPT6",167,0)
 ..I Y]"",$D(^TMP($J,"BPSRPT6","N",Y)) S Y=$G(^TMP($J,"BPSRPT6","N",Y))
"RTN","BPSRPT6",168,0)
 ;
"RTN","BPSRPT6",169,0)
 Q Y
"RTN","BPSRPT6",170,0)
 ;
"RTN","BPSRPT6",171,0)
 ;Get DRUG file pointer
"RTN","BPSRPT6",172,0)
 ;       
"RTN","BPSRPT6",173,0)
 ; Return Value -> n = ptr to DRUG (#50)
"RTN","BPSRPT6",174,0)
 ;                 0 = Unknown
"RTN","BPSRPT6",175,0)
 ; 
"RTN","BPSRPT6",176,0)
GETDRUG(BPRX) Q +$P($G(^PSRX(BPRX,0)),U,6)
"RTN","BPSRPT6",177,0)
 ;
"RTN","BPSRPT6",178,0)
 ;Get VA DRUG CLASS pointer
"RTN","BPSRPT6",179,0)
 ;       
"RTN","BPSRPT6",180,0)
 ; Input Variables: BP50 - ptr to DRUG (#50)
"RTN","BPSRPT6",181,0)
 ;
"RTN","BPSRPT6",182,0)
 ; Return Value -> n = ptr to VA DRUG CLASS (#50.605)
"RTN","BPSRPT6",183,0)
 ;                 0 = Unknown
"RTN","BPSRPT6",184,0)
 ;
"RTN","BPSRPT6",185,0)
GETDRGCL(BP50) Q $$DRUGDIE^BPSUTIL(BP50,25)
"RTN","BPSRPT6",186,0)
 ;
"RTN","BPSRPT6",187,0)
 ;Determine whether claim was Mail, Window, or CMOP
"RTN","BPSRPT6",188,0)
 ;
"RTN","BPSRPT6",189,0)
 ; Input Variables: BPREF - refill # (0-No Refills,1-1st Refill, 2-2nd, ...) 
"RTN","BPSRPT6",190,0)
 ;
"RTN","BPSRPT6",191,0)
 ; Return Value -> 2 = Mail
"RTN","BPSRPT6",192,0)
 ;                 3 = Window
"RTN","BPSRPT6",193,0)
 ;                 4 = CMOP
"RTN","BPSRPT6",194,0)
 ;
"RTN","BPSRPT6",195,0)
MWC(BPRX,BPREF) N BPX,BPY
"RTN","BPSRPT6",196,0)
 S BPY=2
"RTN","BPSRPT6",197,0)
 ;
"RTN","BPSRPT6",198,0)
 ;if 1st fill check #52 (#11) MAIL/WINDOW
"RTN","BPSRPT6",199,0)
 ;if refill check refills multiple #52.1 (#2) MAIL/WINDOW
"RTN","BPSRPT6",200,0)
 I BPREF=0 S BPX=$P($G(^PSRX(BPRX,0)),U,11)
"RTN","BPSRPT6",201,0)
 E  S BPX=$P($G(^PSRX(BPRX,1,BPREF,0)),U,2)
"RTN","BPSRPT6",202,0)
 ;
"RTN","BPSRPT6",203,0)
 ; if WINDOW then 3(W)
"RTN","BPSRPT6",204,0)
 I BPX="W" Q 3
"RTN","BPSRPT6",205,0)
 ; else
"RTN","BPSRPT6",206,0)
 ;  check STATUS of RX
"RTN","BPSRPT6",207,0)
 ;  if STATUS="SUSPENSE" check 
"RTN","BPSRPT6",208,0)
 I $G(^PSRX(BPRX,"STA"))=5 D  Q BPY
"RTN","BPSRPT6",209,0)
 . ;   check #52.5
"RTN","BPSRPT6",210,0)
 . S BPX=$O(^PS(52.5,"B",BPRX,0))
"RTN","BPSRPT6",211,0)
 . ;   if CMOP INDICATOR = "P" then 2 (M)
"RTN","BPSRPT6",212,0)
 . I $P($G(^PS(52.5,BPX,0)),U,7)="P" S BPY=2 Q
"RTN","BPSRPT6",213,0)
 . ;   else (i.e. Q!X!L) 4(C)
"RTN","BPSRPT6",214,0)
 . S BPY=4
"RTN","BPSRPT6",215,0)
 ;  else 
"RTN","BPSRPT6",216,0)
 ;  check CMOP EVENTS for this 0 fill
"RTN","BPSRPT6",217,0)
 S BPY=2
"RTN","BPSRPT6",218,0)
 S BPX=0 F  S BPX=$O(^PSRX(BPRX,4,BPX)) Q:+BPX=0!(BPY=4)  D
"RTN","BPSRPT6",219,0)
 . ;  if exists for BPREF then 4("C")
"RTN","BPSRPT6",220,0)
 . I $P($G(^PSRX(BPRX,4,BPX,0)),U,3)=BPREF S BPY=4
"RTN","BPSRPT6",221,0)
 ;  else 2("M")
"RTN","BPSRPT6",222,0)
 Q BPY
"RTN","BPSRPT6",223,0)
 ;
"RTN","BPSRPT6",224,0)
 ;Get Patient Name
"RTN","BPSRPT6",225,0)
 ;
"RTN","BPSRPT6",226,0)
 ; Input variable -> BPDFN - ptr to PATIENT (#2)
"RTN","BPSRPT6",227,0)
 ; Returned value -> Patient Name (shortened)
"RTN","BPSRPT6",228,0)
 ; 
"RTN","BPSRPT6",229,0)
PATNAME(BPDFN) Q $E($P($G(^DPT(BPDFN,0)),U),1,25)
"RTN","BPSRPT6",230,0)
 ;
"RTN","BPSRPT6",231,0)
 ;Get Last 4 of SSN
"RTN","BPSRPT6",232,0)
 ;
"RTN","BPSRPT6",233,0)
 ; Input variable -> BPDFN - ptr to PATIENT (#2)
"RTN","BPSRPT6",234,0)
 ; Returned value -> Last 4 digits of patient's SSN
"RTN","BPSRPT6",235,0)
 ; 
"RTN","BPSRPT6",236,0)
SSN4(BPDFN) N X
"RTN","BPSRPT6",237,0)
 S X=$P($G(^DPT(BPDFN,0)),U,9)
"RTN","BPSRPT6",238,0)
 Q $E(X,$L(X)-3,$L(X))
"RTN","BPSRPT6",239,0)
 ;
"RTN","BPSRPT6",240,0)
 ;Get RX#
"RTN","BPSRPT6",241,0)
 ;
"RTN","BPSRPT6",242,0)
 ; Returned value -> RX#
"RTN","BPSRPT6",243,0)
 ; 
"RTN","BPSRPT6",244,0)
RXNUM(BPRX) ;
"RTN","BPSRPT6",245,0)
 Q $P($G(^PSRX(+BPRX,0)),U)
"RTN","BPSRPT6",246,0)
 ;
"RTN","BPSRPT6",247,0)
 ;Determine $Collected
"RTN","BPSRPT6",248,0)
 ;
"RTN","BPSRPT6",249,0)
 ; Returned Value -> $Collected
"RTN","BPSRPT6",250,0)
 ;
"RTN","BPSRPT6",251,0)
COLLECTD(BPRX,BPREF) N COL,RET
"RTN","BPSRPT6",252,0)
 S RET=$$BILLINFO^IBNCPDPI(BPRX,BPREF)
"RTN","BPSRPT6",253,0)
 S COL=$P(RET,U,5) I COL="0",($P(RET,U,3)=16)!($P(RET,U,3)=27) S COL=""
"RTN","BPSRPT6",254,0)
 I $P(RET,U,7)=1 S COL="N/A"
"RTN","BPSRPT6",255,0)
 Q COL
"RTN","BPSRPT6",256,0)
 ;
"RTN","BPSRPT6",257,0)
 ;Determine Bill #
"RTN","BPSRPT6",258,0)
 ;
"RTN","BPSRPT6",259,0)
 ; Returned Value -> Bill Number
"RTN","BPSRPT6",260,0)
 ;
"RTN","BPSRPT6",261,0)
BILL(BPRX,BPREF) N BILL
"RTN","BPSRPT6",262,0)
 S BILL=$P($$BILLINFO^IBNCPDPI(BPRX,BPREF),U)
"RTN","BPSRPT6",263,0)
 Q BILL
"RTN","BPSRPT6",264,0)
 ;
"RTN","BPSRPT6",265,0)
 ;Get the Closed Claim Reason
"RTN","BPSRPT6",266,0)
 ;
"RTN","BPSRPT6",267,0)
 ; Input variable -> 0 for All Closed Claim Reasons or
"RTN","BPSRPT6",268,0)
 ;                   lookup to CLAIMS TRACKING NON-BILLABLE REASONS (#356.8)
"RTN","BPSRPT6",269,0)
 ; Returned value -> ALL or the selected Closed Claim Reason
"RTN","BPSRPT6",270,0)
 ; 
"RTN","BPSRPT6",271,0)
GETCLR(RSN) ;
"RTN","BPSRPT6",272,0)
 I RSN="0" S RSN="ALL"
"RTN","BPSRPT6",273,0)
 E  S RSN=$P($G(^IBE(356.8,+RSN,0)),U)
"RTN","BPSRPT6",274,0)
 Q RSN
"RTN","BPSRPT6",275,0)
 ;
"RTN","BPSRPT6",276,0)
 ;Get the Closed By Person
"RTN","BPSRPT6",277,0)
 ;
"RTN","BPSRPT6",278,0)
 ; Returned Value -> Closed By Name
"RTN","BPSRPT6",279,0)
 ; 
"RTN","BPSRPT6",280,0)
CLSBY(BP59) N BP02,CBY,Y
"RTN","BPSRPT6",281,0)
 S BP02=+$P($G(^BPST(BP59,0)),U,4)
"RTN","BPSRPT6",282,0)
 S CBY=+$P($G(^BPSC(BP02,900)),U,3)
"RTN","BPSRPT6",283,0)
 S Y=$$GET1^DIQ(200,CBY_",",".01")
"RTN","BPSRPT6",284,0)
 Q Y
"RTN","BPSRPT6",285,0)
 ;
"RTN","BPSRPT6",286,0)
 ;Get the Claim Status
"RTN","BPSRPT6",287,0)
 ;
"RTN","BPSRPT6",288,0)
 ; Input Variables: BPREF - refill # (0-No Refills,1-1st Refill, 2-2nd, ...) 
"RTN","BPSRPT6",289,0)
 ;
"RTN","BPSRPT6",290,0)
STATUS(BPRX,BPREF) Q $$STATUS^BPSOSRX(BPRX,BPREF,0)
"RTN","BPSRPT6",291,0)
 ;
"RTN","BPSRPT6",292,0)
 ;Elapsed Time
"RTN","BPSRPT6",293,0)
 ;
"RTN","BPSRPT6",294,0)
 ; Returned Value -> TIME - Elapsed Processing Time
"RTN","BPSRPT6",295,0)
 ; 
"RTN","BPSRPT6",296,0)
ELAPSE(BP59) Q $$TIMEDIFI^BPSOSUD($P($G(^BPST(BP59,0)),U,11),$P($G(^BPST(BP59,0)),U,8))
"RTN","BPSRPT6",297,0)
 ;
"RTN","BPSRPT6",298,0)
 ;Get RX issue date
"RTN","BPSRPT6",299,0)
 ;
"RTN","BPSRPT6",300,0)
RXISSDT(BPRX) Q +$P($G(^PSRX(BPRX,0)),U,13)
"RTN","BPSRPT6",301,0)
 ;
"RTN","BPSRPT6",302,0)
 ;
"RTN","BPSRPT6",303,0)
 ;Get RX's fill date
"RTN","BPSRPT6",304,0)
RXFILDT(BPRX) Q +$P($G(^PSRX(BPRX,2)),U,2)
"RTN","BPSRPT6",305,0)
 ;
"RTN","BPSRPT6",306,0)
 ;Get label date for RX,
"RTN","BPSRPT6",307,0)
RXLBLDT(BPRX,BPDIR) N BPRET
"RTN","BPSRPT6",308,0)
 I BPDIR=0 S BPRET=$O(^PSRX(BPRX,"L",0))
"RTN","BPSRPT6",309,0)
 I BPDIR=1 S BPRET=$O(^PSRX(BPRX,"L",9999),-1)
"RTN","BPSRPT6",310,0)
 I BPRET S BPRET=$P($G(^PSRX(BPRX,"L",+BPRET,0)),U)\1
"RTN","BPSRPT6",311,0)
 Q BPRET
"RTN","BPSRPT6",312,0)
 ;
"RTN","BPSRPT6",313,0)
 ;Get label date for refills
"RTN","BPSRPT6",314,0)
 ;
"RTN","BPSRPT6",315,0)
REFLBLDT(BPRX,BPDIR) Q $$RXLBLDT(BPRX,BPDIR)
"RTN","BPSRPT6",316,0)
 ;
"RTN","BPSRPT6",317,0)
 ;Get Refill's issue date
"RTN","BPSRPT6",318,0)
 ;
"RTN","BPSRPT6",319,0)
REFISSDT(BPRX,BPREF) Q $$REFDISDT(BPRX,BPREF)
"RTN","BPSRPT6",320,0)
 ;
"RTN","BPSRPT6",321,0)
 ;Get Refill's dispense date
"RTN","BPSRPT6",322,0)
 ;
"RTN","BPSRPT6",323,0)
REFDISDT(BPRX,BPREF) Q +$P($G(^PSRX(BPRX,1,BPREF,0)),U,19)
"RTN","BPSRPT6",324,0)
 ;
"RTN","BPSRPT6",325,0)
 ;Get Refill's refill date
"RTN","BPSRPT6",326,0)
 ;
"RTN","BPSRPT6",327,0)
REFFILDT(BPRX,BPREF) Q +$P($G(^PSRX(BPRX,1,BPREF,0)),U)
"RTN","BPSRPT6",328,0)
 ;
"RTN","BPSRPT6",329,0)
 ;Get RX's release date
"RTN","BPSRPT6",330,0)
 ;
"RTN","BPSRPT6",331,0)
RXRELDT(BPRX) Q +$P($G(^PSRX(BPRX,2)),U,13)
"RTN","BPSRPT6",332,0)
 ;
"RTN","BPSRPT6",333,0)
 ;Get Refill's release date
"RTN","BPSRPT6",334,0)
 ;
"RTN","BPSRPT6",335,0)
REFRELDT(BPRX,BPREF) Q +$P($G(^PSRX(BPRX,1,BPREF,0)),U,18)
"RTN","BPSRPT6",336,0)
 ;
"RTN","BPSRPT6",337,0)
 ;See if refill exists
"RTN","BPSRPT6",338,0)
 ;
"RTN","BPSRPT6",339,0)
IFREFILL(BPRX,BPREF) Q $D(^PSRX(BPRX,1,BPREF))>0
"RTN","BPSRPT6",340,0)
 ;
"RTN","BPSRPT6",341,0)
 ;Get RX status
"RTN","BPSRPT6",342,0)
 ;
"RTN","BPSRPT6",343,0)
 ; Input Variables -> RXNUM = ptr to #52 (MODE = 0)
"RTN","BPSRPT6",344,0)
 ;                            or RX Number (MODE = 1)
"RTN","BPSRPT6",345,0)
 ;                            
"RTN","BPSRPT6",346,0)
RXSTATUS(RXNUM,MODE) ;
"RTN","BPSRPT6",347,0)
 I $G(MODE) S RXNUM=$O(^PSRX("B",RXNUM,0)) I +RXNUM=0 Q -1
"RTN","BPSRPT6",348,0)
 I '$D(^PSRX(RXNUM,"STA")) Q -1
"RTN","BPSRPT6",349,0)
 Q $G(^PSRX(RXNUM,"STA"))
"RTN","BPSRPT6",350,0)
 ;
"RTN","BPSRPT6",351,0)
 ;Return RX Quantity
"RTN","BPSRPT6",352,0)
 ;
"RTN","BPSRPT6",353,0)
QTY(BPRX,BPREF) ;
"RTN","BPSRPT6",354,0)
 I +$G(BPREF)=0 Q +$P($G(^PSRX(BPRX,0)),U,7)
"RTN","BPSRPT6",355,0)
 Q +$P($G(^PSRX(BPRX,1,BPREF,0)),U,4)
"RTN","BPSRPT6",356,0)
 ;
"RTN","BPSRPT6",357,0)
 ;Return NDC Number
"RTN","BPSRPT6",358,0)
GETNDC(BPRX,BPREF) Q $$GETNDC^PSONDCUT(BPRX,BPREF)
"RTN","BPSRPT6",359,0)
 ;
"RTN","BPSRPT6",360,0)
 ;Return Copay Status ($)
"RTN","BPSRPT6",361,0)
COPAY(BPRX) Q $S($G(^PSRX(BPRX,"IB")):"$",1:"")
"RTN","BPSRPT7")
0^26^B70034619
"RTN","BPSRPT7",1,0)
BPSRPT7 ;BHAM ISC/BEE - ECME REPORTS ;14-FEB-05
"RTN","BPSRPT7",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSRPT7",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","BPSRPT7",4,0)
 ;
"RTN","BPSRPT7",5,0)
 Q
"RTN","BPSRPT7",6,0)
 ;
"RTN","BPSRPT7",7,0)
 ;Routine to Display the Reports (Continued)
"RTN","BPSRPT7",8,0)
 ;
"RTN","BPSRPT7",9,0)
 ; Input Variables -> BPCLM = Array of report data by date
"RTN","BPSRPT7",10,0)
 ;                   BPDIV,BPSUMDET,GTOT
"RTN","BPSRPT7",11,0)
 ; Returned Value -> Cumulative Grand Totals
"RTN","BPSRPT7",12,0)
 ; 
"RTN","BPSRPT7",13,0)
PTBDT(BPDIV,BPSUMDET,BPCLM,GTOT) N DIFF,I,NP,RDT,TOT,X
"RTN","BPSRPT7",14,0)
 ;
"RTN","BPSRPT7",15,0)
 ;Loop through compiled array and display
"RTN","BPSRPT7",16,0)
 S TOT=""
"RTN","BPSRPT7",17,0)
 S RDT="" F  S RDT=$O(BPCLM(RDT)) Q:RDT=""  D  Q:BPQ
"RTN","BPSRPT7",18,0)
 .S NP=$$CHKP^BPSRPT5(1) Q:BPQ
"RTN","BPSRPT7",19,0)
 .S X=$G(BPCLM(RDT))
"RTN","BPSRPT7",20,0)
 .;
"RTN","BPSRPT7",21,0)
 .;Print Details - Report
"RTN","BPSRPT7",22,0)
 .I BPSUMDET=0,'BPEXCEL D
"RTN","BPSRPT7",23,0)
 ..W !,$$DATTIM^BPSRPT1(RDT) ;Date
"RTN","BPSRPT7",24,0)
 ..W ?15,$J(+$P(X,U),17) ;#Claims
"RTN","BPSRPT7",25,0)
 ..W ?33,$J(+$P(X,U,2),17,2)  ;Amount Submitted
"RTN","BPSRPT7",26,0)
 ..W ?51,$J(+$P(X,U,3),17,2)  ;Returned Rejected
"RTN","BPSRPT7",27,0)
 ..W ?69,$J(+$P(X,U,4),17,2)  ;Returned Payable
"RTN","BPSRPT7",28,0)
 ..W ?87,$J(+$P(X,U,5),17,2)  ;Amount to Receive
"RTN","BPSRPT7",29,0)
 ..;
"RTN","BPSRPT7",30,0)
 ..;Difference
"RTN","BPSRPT7",31,0)
 ..S DIFF=+$P(X,U,4)-$P(X,U,5)
"RTN","BPSRPT7",32,0)
 ..I DIFF<0 S DIFF="<"_$TR($J(-DIFF,15,2)," ")_">" W ?117,$J(DIFF,15)
"RTN","BPSRPT7",33,0)
 ..E  W ?116,$J(DIFF,15,2)
"RTN","BPSRPT7",34,0)
 ..;
"RTN","BPSRPT7",35,0)
 ..;Print Details - Excel
"RTN","BPSRPT7",36,0)
 .I BPSUMDET=0,BPEXCEL D
"RTN","BPSRPT7",37,0)
 ..;
"RTN","BPSRPT7",38,0)
 ..;Division
"RTN","BPSRPT7",39,0)
 ..W !,$S(BPDIV=0:"BLANK",$$DIVNAME^BPSSCRDS(BPDIV)]"":$$DIVNAME^BPSSCRDS(BPDIV),1:BPDIV),U
"RTN","BPSRPT7",40,0)
 ..W $$DATTIM^BPSRPT1(RDT),U  ;Date
"RTN","BPSRPT7",41,0)
 ..W +$P(X,U),U ;#Claims
"RTN","BPSRPT7",42,0)
 ..W $TR($J(+$P(X,U,2),17,2)," "),U  ;Amount Submitted
"RTN","BPSRPT7",43,0)
 ..W $TR($J(+$P(X,U,3),17,2)," "),U  ;Returned Rejected
"RTN","BPSRPT7",44,0)
 ..W $TR($J(+$P(X,U,4),17,2)," "),U  ;Returned Payable
"RTN","BPSRPT7",45,0)
 ..W $TR($J(+$P(X,U,5),17,2)," "),U  ;Amount to Receive
"RTN","BPSRPT7",46,0)
 ..;
"RTN","BPSRPT7",47,0)
 ..;Difference
"RTN","BPSRPT7",48,0)
 ..S DIFF=+$P(X,U,4)-$P(X,U,5)
"RTN","BPSRPT7",49,0)
 ..W $TR($J(DIFF,15,2)," ")
"RTN","BPSRPT7",50,0)
 .;
"RTN","BPSRPT7",51,0)
 .;Save Totals
"RTN","BPSRPT7",52,0)
 .F I=1:1:5 S $P(TOT,U,I)=$P(TOT,U,I)+$P(X,U,I),$P(GTOT,U,I)=$P($G(GTOT),U,I)+$P(X,U,I)
"RTN","BPSRPT7",53,0)
 ;
"RTN","BPSRPT7",54,0)
 ;Print Totals
"RTN","BPSRPT7",55,0)
 Q:BPEXCEL
"RTN","BPSRPT7",56,0)
 Q:BPQ  S NP=$$CHKP^BPSRPT5(2) Q:BPQ
"RTN","BPSRPT7",57,0)
 D ULINE^BPSRPT5("-")
"RTN","BPSRPT7",58,0)
 W !,"TOTALS"
"RTN","BPSRPT7",59,0)
 W ?15,$J(+$P(TOT,U),17)
"RTN","BPSRPT7",60,0)
 W ?33,$J(+$P(TOT,U,2),17,2)
"RTN","BPSRPT7",61,0)
 W ?51,$J(+$P(TOT,U,3),17,2)
"RTN","BPSRPT7",62,0)
 W ?69,$J(+$P(TOT,U,4),17,2)
"RTN","BPSRPT7",63,0)
 W ?87,$J(+$P(TOT,U,5),17,2)
"RTN","BPSRPT7",64,0)
 S X=$S((+$P(TOT,U,4))=0:0,1:(+$P(TOT,U,5))/(+$P(TOT,U,4)))
"RTN","BPSRPT7",65,0)
 S DIFF=+$P(TOT,U,4)-$P(TOT,U,5)
"RTN","BPSRPT7",66,0)
 I DIFF<0 S DIFF="<"_$TR($J(-DIFF,15,2)," ")_">" W ?117,$J(DIFF,15)
"RTN","BPSRPT7",67,0)
 E  W ?116,$J(DIFF,15,2)
"RTN","BPSRPT7",68,0)
 Q
"RTN","BPSRPT7",69,0)
 ;
"RTN","BPSRPT7",70,0)
 ;Print Grand Totals - Report 6
"RTN","BPSRPT7",71,0)
 ;
"RTN","BPSRPT7",72,0)
PGTOT6(GTOT) N DIFF,NP,X
"RTN","BPSRPT7",73,0)
 Q:BPQ  S NP=$$CHKP^BPSRPT5(2) Q:BPQ
"RTN","BPSRPT7",74,0)
 D ULINE^BPSRPT5("-")
"RTN","BPSRPT7",75,0)
 W !,"GRAND TOTALS"
"RTN","BPSRPT7",76,0)
 W ?15,$J(+$P(GTOT,U),17)
"RTN","BPSRPT7",77,0)
 W ?33,$J(+$P(GTOT,U,2),17,2)
"RTN","BPSRPT7",78,0)
 W ?51,$J(+$P(GTOT,U,3),17,2)
"RTN","BPSRPT7",79,0)
 W ?69,$J(+$P(GTOT,U,4),17,2)
"RTN","BPSRPT7",80,0)
 W ?87,$J(+$P(GTOT,U,5),17,2)
"RTN","BPSRPT7",81,0)
 S X=$S((+$P(GTOT,U,4))=0:0,1:(+$P(GTOT,U,5))/(+$P(GTOT,U,4)))
"RTN","BPSRPT7",82,0)
 S DIFF=+$P(GTOT,U,4)-$P(GTOT,U,5)
"RTN","BPSRPT7",83,0)
 I DIFF<0 S DIFF="<"_$TR($J(-DIFF,15,2)," ")_">" W ?117,$J(DIFF,15)
"RTN","BPSRPT7",84,0)
 E  W ?116,$J(DIFF,15,2)
"RTN","BPSRPT7",85,0)
 Q
"RTN","BPSRPT7",86,0)
 ;
"RTN","BPSRPT7",87,0)
 ;Print Grand Totals - Reports 1,2,3,4,5,7
"RTN","BPSRPT7",88,0)
 ;
"RTN","BPSRPT7",89,0)
PGTOT(BPRTYPE,BPGBIL,BPGINS,BPGCOLL,BPGCNT,BPGELTM) ;
"RTN","BPSRPT7",90,0)
 I (BPRTYPE=1)!(BPRTYPE=4) D  Q
"RTN","BPSRPT7",91,0)
 .W !!,?78,"----------",?100,"----------",?122,"----------"
"RTN","BPSRPT7",92,0)
 .W !,"GRAND TOTALS",?78,$J(BPGBIL,10,2),?100,$J(BPGINS,10,2),?122,$J(BPGCOLL,10,2)
"RTN","BPSRPT7",93,0)
 .W !,"COUNT",?78,$J(BPGCNT,10),?100,$J(BPGCNT,10),?122,$J(BPGCNT,10)
"RTN","BPSRPT7",94,0)
 .W:BPGCNT !,"MEAN",?78,$J(BPGBIL/BPGCNT,10,2),?100,$J(BPGINS/BPGCNT,10,2),?122,$J(BPGCOLL/BPGCNT,10,2)
"RTN","BPSRPT7",95,0)
 I BPRTYPE=3 D  Q
"RTN","BPSRPT7",96,0)
 .W !!,?100,"----------",?122,"----------"
"RTN","BPSRPT7",97,0)
 .W !,"GRAND TOTALS",?100,$J(BPGBIL,10,2),?122,$J(BPGINS,10,2)
"RTN","BPSRPT7",98,0)
 .W !,"COUNT",?100,$J(BPGCNT,10),?122,$J(BPGCNT,10)
"RTN","BPSRPT7",99,0)
 .W:BPGCNT !,"MEAN",?100,$J(BPGBIL/BPGCNT,10,2),?122,$J(BPGINS/BPGCNT,10,2)
"RTN","BPSRPT7",100,0)
 I BPRTYPE=2 D  Q
"RTN","BPSRPT7",101,0)
 .W !!,?41,"----------"
"RTN","BPSRPT7",102,0)
 .W !,"GRAND TOTALS",?41,$J(BPGBIL,10,2)
"RTN","BPSRPT7",103,0)
 .W !,"COUNT",?41,$J(BPGCNT,10)
"RTN","BPSRPT7",104,0)
 .W:BPGCNT !,"MEAN",?41,$J(BPGBIL/BPGCNT,10,2)
"RTN","BPSRPT7",105,0)
 I (BPRTYPE=5) D  Q
"RTN","BPSRPT7",106,0)
 .W !!,"GRAND TOTALS (ALL DIVISIONS)",?65,"---------------"
"RTN","BPSRPT7",107,0)
 .W !,"TOTAL CLAIMS",?65,$J(BPGCNT,15)
"RTN","BPSRPT7",108,0)
 .W !,"AVERAGE ELAPSED TIME PER CLAIM",?65,$J($S(BPGCNT=0:"0",1:(BPGELTM\BPGCNT)),15)
"RTN","BPSRPT7",109,0)
 I (BPRTYPE=7) D  Q
"RTN","BPSRPT7",110,0)
 .W !!,"GRAND TOTALS (ALL DIVISIONS) BY BILLER"
"RTN","BPSRPT7",111,0)
 .N BPBILR,BPDIV S BPDIV="ALL DIVISIONS"
"RTN","BPSRPT7",112,0)
 .S BPBILR="" F  S BPBILR=$O(BPGCNT(BPBILR)) Q:BPBILR=""  D  Q:BPQ
"RTN","BPSRPT7",113,0)
 ..S NP=$$CHKP^BPSRPT5(1) Q:BPQ
"RTN","BPSRPT7",114,0)
 ..W !,?3,BPBILR,?65,$J($G(BPGCNT(BPBILR)),5)
"RTN","BPSRPT7",115,0)
 .Q:$G(BPQ)
"RTN","BPSRPT7",116,0)
 .W !,?65,"-----"
"RTN","BPSRPT7",117,0)
 .W !,"CLOSED CLAIMS GRAND TOTAL",?65,$J(BPGCNT,5)
"RTN","BPSRPT7",118,0)
 ;
"RTN","BPSRPT7",119,0)
 Q
"RTN","BPSRPT7",120,0)
 ;
"RTN","BPSRPT7",121,0)
 ;Get Close Reason
"RTN","BPSRPT7",122,0)
 ;
"RTN","BPSRPT7",123,0)
 ; Input Variable -> BP59 = ptr to BPS TRANSACTIONS
"RTN","BPSRPT7",124,0)
 ; Returned Value -> Claim Close Reason
"RTN","BPSRPT7",125,0)
 ;
"RTN","BPSRPT7",126,0)
CLRSN(BP59) N BP02,CIEN,CL
"RTN","BPSRPT7",127,0)
 S CL=""
"RTN","BPSRPT7",128,0)
 S BP02=+$P($G(^BPST(BP59,0)),U,4)
"RTN","BPSRPT7",129,0)
 S CIEN=+$P($G(^BPSC(BP02,900)),U,4)
"RTN","BPSRPT7",130,0)
 I CIEN'=0 S CL=$$GETCLR^BPSRPT6(CIEN)
"RTN","BPSRPT7",131,0)
 Q CIEN_"^"_CL
"RTN","BPSRPT7",132,0)
 ;
"RTN","BPSRPT7",133,0)
 ;Get Reversal Reason
"RTN","BPSRPT7",134,0)
 ;
"RTN","BPSRPT7",135,0)
 ; Input Variable -> BP59 = ptr to BPS TRANSACTIONS
"RTN","BPSRPT7",136,0)
 ; Returned Value -> Claim Reversal Reason
"RTN","BPSRPT7",137,0)
 ;
"RTN","BPSRPT7",138,0)
RVSRSN(BP59) Q $P($G(^BPST(BP59,4)),U,4)
"RTN","BPSRPT7",139,0)
 ;
"RTN","BPSRPT7",140,0)
 ;Return the Billed Amount
"RTN","BPSRPT7",141,0)
 ;
"RTN","BPSRPT7",142,0)
BILLED(BP59) ;
"RTN","BPSRPT7",143,0)
 Q +$P($G(^BPST(BP59,5)),U,5)
"RTN","BPSRPT7",144,0)
 ;
"RTN","BPSRPT7",145,0)
 ;Return the Transaction Type - SUBMIT or REVERSAL
"RTN","BPSRPT7",146,0)
 ;
"RTN","BPSRPT7",147,0)
TTYPE(BPRX,BPREF) N BPSTATUS,TTYPE
"RTN","BPSRPT7",148,0)
 S TTYPE="SUBMIT"
"RTN","BPSRPT7",149,0)
 S BPSTATUS=$$STATUS^BPSRPT6(BPRX,BPREF)
"RTN","BPSRPT7",150,0)
 I BPSTATUS["REVERSAL" S TTYPE="REVERSAL"
"RTN","BPSRPT7",151,0)
 Q TTYPE
"RTN","BPSRPT7",152,0)
 ;
"RTN","BPSRPT7",153,0)
 ;Return the payer response
"RTN","BPSRPT7",154,0)
 ;
"RTN","BPSRPT7",155,0)
RESPONSE(BPRX,BPREF) Q $P($$STATUS^BPSRPT6(BPRX,BPREF),U)
"RTN","BPSRPT7",156,0)
 ;
"RTN","BPSRPT7",157,0)
 ;Print Report Subtotals
"RTN","BPSRPT7",158,0)
 ;
"RTN","BPSRPT7",159,0)
TOTALS(BPRTYPE,BPDIV,BPTBIL,BPTINS,BPTCOLL,BPCNT,BPELTM) ;
"RTN","BPSRPT7",160,0)
 I (BPRTYPE=1)!(BPRTYPE=4) D  Q
"RTN","BPSRPT7",161,0)
 .W !!,?78,"----------",?100,"----------",?122,"----------"
"RTN","BPSRPT7",162,0)
 .W !,"SUBTOTALS for DIV:",$E($$BPDIV(BPDIV),1,52),?78,$J(BPTBIL,10,2),?100,$J(BPTINS,10,2),?122,$J(BPTCOLL,10,2)
"RTN","BPSRPT7",163,0)
 .W !,"COUNT",?78,$J(BPCNT,10),?100,$J(BPCNT,10),?122,$J(BPCNT,10)
"RTN","BPSRPT7",164,0)
 .W:BPCNT !,"MEAN",?78,$J(BPTBIL/BPCNT,10,2),?100,$J(BPTINS/BPCNT,10,2),?122,$J(BPTCOLL/BPCNT,10,2)
"RTN","BPSRPT7",165,0)
 I BPRTYPE=3 D  Q
"RTN","BPSRPT7",166,0)
 .W !!,?100,"----------",?122,"----------"
"RTN","BPSRPT7",167,0)
 .W !,"SUBTOTALS for DIV:",$E($$BPDIV(BPDIV),1,52),?100,$J(BPTBIL,10,2),?122,$J(BPTINS,10,2)
"RTN","BPSRPT7",168,0)
 .W !,"COUNT",?100,$J(BPCNT,10),?122,$J(BPCNT,10)
"RTN","BPSRPT7",169,0)
 .W:BPCNT !,"MEAN",?100,$J(BPTBIL/BPCNT,10,2),?122,$J(BPTINS/BPCNT,10,2)
"RTN","BPSRPT7",170,0)
 I BPRTYPE=2 D  Q
"RTN","BPSRPT7",171,0)
 .W !!,?41,"----------"
"RTN","BPSRPT7",172,0)
 .W !,"SUBTOTALS for DIV:",$E($$BPDIV(BPDIV),1,22),?41,$J(BPTBIL,10,2)
"RTN","BPSRPT7",173,0)
 .W !,"COUNT",?41,$J(BPCNT,10)
"RTN","BPSRPT7",174,0)
 .W:BPCNT !,"MEAN",?41,$J(BPTBIL/BPCNT,10,2)
"RTN","BPSRPT7",175,0)
 I (BPRTYPE=5) D  Q
"RTN","BPSRPT7",176,0)
 .W !!,"SUBTOTALS for DIV: ",$E($$BPDIV(BPDIV),1,43),?65,"---------------"
"RTN","BPSRPT7",177,0)
 .W !,"TOTAL CLAIMS",?65,$J(BPCNT,15)
"RTN","BPSRPT7",178,0)
 .W !,"AVERAGE ELAPSED TIME PER CLAIM",?65,$J($S(BPCNT=0:"0",1:(BPELTM\BPCNT)),15)
"RTN","BPSRPT7",179,0)
 I (BPRTYPE=7) D  Q
"RTN","BPSRPT7",180,0)
 .W !!,"SUBTOTALS for DIV:",$E($$BPDIV(BPDIV),1,43)
"RTN","BPSRPT7",181,0)
 .N BPBILR
"RTN","BPSRPT7",182,0)
 .S BPBILR="" F  S BPBILR=$O(BPCNT(BPBILR)) Q:BPBILR=""  D  Q:BPQ
"RTN","BPSRPT7",183,0)
 ..S NP=$$CHKP^BPSRPT5(1) Q:BPQ
"RTN","BPSRPT7",184,0)
 ..W !,?3,BPBILR,?65,$J($G(BPCNT(BPBILR)),5)
"RTN","BPSRPT7",185,0)
 .Q:$G(BPQ)
"RTN","BPSRPT7",186,0)
 .W !,?65,"-----"
"RTN","BPSRPT7",187,0)
 .W !,"CLOSED CLAIMS SUBTOTAL",?65,$J(BPCNT,5)
"RTN","BPSRPT7",188,0)
 ;
"RTN","BPSRPT7",189,0)
 Q
"RTN","BPSRPT7",190,0)
 ;
"RTN","BPSRPT7",191,0)
 ;Print Report Header
"RTN","BPSRPT7",192,0)
 ; Input variables (defined in BPSRPT0) - BPPHARM,BPSUMDET,BPNOW,BPMWC,BPRTBCK,BPINSINF
"RTN","BPSRPT7",193,0)
 ;                                        BPREJCD,BPCCRSN,BPAUTREV,BPACREJ,BPQSTDRG
"RTN","BPSRPT7",194,0)
 ;                                        BPDRUG,BPDRGCL,BPRLNRL,BPSORT,BPBEGDT,BPENDDT
"RTN","BPSRPT7",195,0)
 ; Output variable - BPSDATA -> Reset to 0 to show no actual data has been printed
"RTN","BPSRPT7",196,0)
 ;                           on the screen
"RTN","BPSRPT7",197,0)
 ;                   BPPAGE -> First set in BPSRPT0
"RTN","BPSRPT7",198,0)
 ;                   BPBLINE -> Controls whether to print a blank line
"RTN","BPSRPT7",199,0)
 ;                   
"RTN","BPSRPT7",200,0)
HDR(BPRTYPE,BPRPTNAM,BPPAGE) ;
"RTN","BPSRPT7",201,0)
 ;Display Excel Header
"RTN","BPSRPT7",202,0)
 I BPEXCEL D HDR^BPSRPT8(BPRTYPE) Q
"RTN","BPSRPT7",203,0)
 ;
"RTN","BPSRPT7",204,0)
 ; Define BPPDATA - Tells whether data has been displayed for a screen
"RTN","BPSRPT7",205,0)
 S BPSDATA=0
"RTN","BPSRPT7",206,0)
 S BPBLINE=""
"RTN","BPSRPT7",207,0)
 S BPPAGE=$G(BPPAGE)+1
"RTN","BPSRPT7",208,0)
 W @IOF
"RTN","BPSRPT7",209,0)
 W "ECME "_BPRPTNAM_" "_$S(BPSUMDET=1:"SUMMARY",1:"DETAIL")_" REPORT"
"RTN","BPSRPT7",210,0)
 W ?89,"Print Date: "_$G(BPNOW)_"  Page:",$J(BPPAGE,3)
"RTN","BPSRPT7",211,0)
 W !,"DIVISION(S): ",$$GETDIVS^BPSRPT4(75,.BPPHARM)
"RTN","BPSRPT7",212,0)
 W ?93,"Fill Locations: "_$S(BPMWC=2:"M",BPMWC=3:"W",BPMWC=4:"C",1:"C,M,W")
"RTN","BPSRPT7",213,0)
 W ?116,"Fill type: "_$S(BPRTBCK=2:"RT",BPRTBCK=3:"BB",1:"RT,BB")
"RTN","BPSRPT7",214,0)
 W !,"Insurance: "_$E($S(BPINSINF=0:"ALL",1:BPINSINF),1,30)
"RTN","BPSRPT7",215,0)
 I (",2,")[BPRTYPE W ?44,"Reject Code: ",$E($$GETREJ^BPSRPT4(BPREJCD),1,28)
"RTN","BPSRPT7",216,0)
 I (",7,")[BPRTYPE W ?44,"Close Reason: ",$E($$GETCLR^BPSRPT6(BPCCRSN),1,26)
"RTN","BPSRPT7",217,0)
 I (",4,")[BPRTYPE W ?44,$J($S(BPAUTREV=0:"ALL",1:"AUTO"),4)," Reversals"
"RTN","BPSRPT7",218,0)
 I (",4,")[BPRTYPE W ?60,$J($S(BPACREJ=1:"REJECTED",BPACREJ=2:"ACCEPTED",1:"ALL"),8)," Returned Status"
"RTN","BPSRPT7",219,0)
 W ?87,"Drugs/Classes: "_$S(BPQSTDRG=2:$$DRGNAM^BPSRPT6(BPDRUG,30),BPQSTDRG=3:$E(BPDRGCL,1,30),1:"ALL")
"RTN","BPSRPT7",220,0)
 W !,$S(BPRTYPE=5:"PRESCRIPTIONS",BPRLNRL=2:"RELEASED PRESCRIPTIONS",BPRLNRL=3:"PRESCRIPTIONS (NOT RELEASED)",1:"ALL PRESCRIPTIONS")
"RTN","BPSRPT7",221,0)
 W " BY "_$S(BPRTYPE=7:"CLOSE",1:"TRANSACTION")_" DATE: "
"RTN","BPSRPT7",222,0)
 W "From "_$$DATTIM^BPSRPT1(BPBEGDT)_" through "_$$DATTIM^BPSRPT1($P(BPENDDT,"."))
"RTN","BPSRPT7",223,0)
 ;
"RTN","BPSRPT7",224,0)
 D ULINE^BPSRPT5("=") Q:$G(BPQ)
"RTN","BPSRPT7",225,0)
 D HEADLN1^BPSRPT4(BPRTYPE)
"RTN","BPSRPT7",226,0)
 D HEADLN2^BPSRPT4(BPRTYPE)
"RTN","BPSRPT7",227,0)
 D HEADLN3^BPSRPT4(BPRTYPE)
"RTN","BPSRPT7",228,0)
 D ULINE^BPSRPT5("=")
"RTN","BPSRPT7",229,0)
 ;
"RTN","BPSRPT7",230,0)
 ;Print Division
"RTN","BPSRPT7",231,0)
 I $G(BPDIV)]"" D
"RTN","BPSRPT7",232,0)
 .W !,"DIVISION: ",$S(BPDIV=0:"BLANK",BPDIV="ALL DIVISIONS":"ALL DIVISIONS",$$DIVNAME^BPSSCRDS(BPDIV)]"":$$DIVNAME^BPSSCRDS(BPDIV),1:BPDIV)
"RTN","BPSRPT7",233,0)
 .I BPRTYPE=5!(BPRTYPE=6)!(BPSUMDET=1)!(BPGRPLAN="") D ULINE^BPSRPT5("-")
"RTN","BPSRPT7",234,0)
 ;
"RTN","BPSRPT7",235,0)
 ;Print Insurance If Defined
"RTN","BPSRPT7",236,0)
 I BPSUMDET=0,$G(BPGRPLAN)]"",$G(BPGRPLAN)'=0,$G(BPGRPLAN)'="~" D WRPLAN^BPSRPT5(BPGRPLAN)
"RTN","BPSRPT7",237,0)
 Q
"RTN","BPSRPT7",238,0)
 ;
"RTN","BPSRPT7",239,0)
 ;Special Division Handling
"RTN","BPSRPT7",240,0)
 ;
"RTN","BPSRPT7",241,0)
BPDIV(BPDIV) Q $S(BPDIV=0:"BLANK",$$DIVNAME^BPSSCRDS(BPDIV)]"":$$DIVNAME^BPSSCRDS(BPDIV),1:BPDIV)
"RTN","BPSRPT8")
0^27^B73476726
"RTN","BPSRPT8",1,0)
BPSRPT8 ;BHAM ISC/BEE - ECME REPORTS ;14-FEB-05
"RTN","BPSRPT8",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSRPT8",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","BPSRPT8",4,0)
 ;
"RTN","BPSRPT8",5,0)
 Q
"RTN","BPSRPT8",6,0)
 ;
"RTN","BPSRPT8",7,0)
 ;Routine to Display the Reports in Excel
"RTN","BPSRPT8",8,0)
 ;
"RTN","BPSRPT8",9,0)
 ;Print Report Line 1
"RTN","BPSRPT8",10,0)
 ;
"RTN","BPSRPT8",11,0)
 ; Input Variable -> BPRTYPE,BPDIV,BPGRPLAN,BPDFN,BPRX,BPREF,BPX,BPSRTDT
"RTN","BPSRPT8",12,0)
 ;                   BPBIL,BPINS,BPCOLL
"RTN","BPSRPT8",13,0)
 ; 
"RTN","BPSRPT8",14,0)
WRLINE1(BPRTYPE,BPREC,BPDIV,BPGRPLAN,BPDFN,BPRX,BPREF,BPX,BPSRTDT,BPBIL,BPINS,BPCOLL) ;
"RTN","BPSRPT8",15,0)
 ;
"RTN","BPSRPT8",16,0)
 ;Division
"RTN","BPSRPT8",17,0)
 S BPREC=$S(BPDIV=0:"BLANK",$$DIVNAME^BPSSCRDS(BPDIV)]"":$$DIVNAME^BPSSCRDS(BPDIV),1:BPDIV)_U
"RTN","BPSRPT8",18,0)
 ;Insurance
"RTN","BPSRPT8",19,0)
 I BPRTYPE'=5,BPRTYPE'=6 S BPREC=BPREC_$E(BPGRPLAN,1,90)_U
"RTN","BPSRPT8",20,0)
 S BPREC=BPREC_$$PATNAME^BPSRPT6(BPDFN)_U  ;Patient Name
"RTN","BPSRPT8",21,0)
 S BPREC=BPREC_"("_$$SSN4^BPSRPT6(BPDFN)_")"_U ;L4SSN
"RTN","BPSRPT8",22,0)
 S BPREC=BPREC_$$RXNUM^BPSRPT6(BPRX)_$$COPAY^BPSRPT6(BPRX)_U ;RX Number
"RTN","BPSRPT8",23,0)
 S BPREC=BPREC_BPREF_"/"_$$ECMENUM^BPSRPT1($P(BPX,U,3))_U ;Refill/ECME Number
"RTN","BPSRPT8",24,0)
 ;
"RTN","BPSRPT8",25,0)
 I (BPRTYPE=1)!(BPRTYPE=4) D  Q
"RTN","BPSRPT8",26,0)
 . S BPREC=BPREC_$$DATTIM^BPSRPT1(BPSRTDT)_U  ;Date
"RTN","BPSRPT8",27,0)
 . S BPREC=BPREC_$TR($J(BPBIL,10,2)," ")_U ;$Billed
"RTN","BPSRPT8",28,0)
 . S BPREC=BPREC_$TR($J(BPINS,10,2)," ")_U ;$Ins. Paid
"RTN","BPSRPT8",29,0)
 . S BPREC=BPREC_$S(BPCOLL]"":$TR($J(BPCOLL,10,2)," "),1:"")_U ;$Collected
"RTN","BPSRPT8",30,0)
 ;
"RTN","BPSRPT8",31,0)
 I BPRTYPE=2 D  Q
"RTN","BPSRPT8",32,0)
 . S BPREC=BPREC_$$DATTIM^BPSRPT1(BPSRTDT)_U ;Date
"RTN","BPSRPT8",33,0)
 . S BPREC=BPREC_$$DATTIM^BPSRPT1(+BPX)_U  ;Released On
"RTN","BPSRPT8",34,0)
 . ;RX INFO
"RTN","BPSRPT8",35,0)
 . S BPREC=BPREC_$$MWCNAM^BPSRPT1($$MWC^BPSRPT6(BPRX,BPREF))_U ;Fill Location
"RTN","BPSRPT8",36,0)
 . S BPREC=BPREC_$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))_U  ;Fill Type
"RTN","BPSRPT8",37,0)
 . S BPREC=BPREC_$$RXSTANAM^BPSRPT2($$RXSTATUS^BPSRPT6(BPRX,0)) ;Status
"RTN","BPSRPT8",38,0)
 . S BPREC=BPREC_$S($P(BPX,U):"/RL",1:"/NR")_U ;RL/NR
"RTN","BPSRPT8",39,0)
 ;
"RTN","BPSRPT8",40,0)
 I BPRTYPE=3 D  Q
"RTN","BPSRPT8",41,0)
 . S BPREC=BPREC_$$DATTIM^BPSRPT1(BPSRTDT)_U ;Date
"RTN","BPSRPT8",42,0)
 . S BPREC=BPREC_$TR($J(BPBIL,10,2)," ")_U ;$Billed
"RTN","BPSRPT8",43,0)
 . S BPREC=BPREC_$TR($J(BPINS,10,2)," ")_U ;Insurance Response
"RTN","BPSRPT8",44,0)
 ;
"RTN","BPSRPT8",45,0)
 I BPRTYPE=5 D  Q
"RTN","BPSRPT8",46,0)
 . S BPREC=BPREC_$$DATTIM^BPSRPT1($$TRANDT^BPSRPT2($P(BPX,U,3),1))_U ;Completed
"RTN","BPSRPT8",47,0)
 . S BPREC=BPREC_$$TTYPE^BPSRPT7($P(BPX,U,4),$P(BPX,U,5))_U ;Trans Type
"RTN","BPSRPT8",48,0)
 . S BPREC=BPREC_$$RESPONSE^BPSRPT7($P(BPX,U,4),$P(BPX,U,5))_U ;Payer Response
"RTN","BPSRPT8",49,0)
 ;
"RTN","BPSRPT8",50,0)
 I BPRTYPE=7 D  Q
"RTN","BPSRPT8",51,0)
 . ;RX INFO
"RTN","BPSRPT8",52,0)
 . S BPREC=BPREC_$$MWCNAM^BPSRPT1($$MWC^BPSRPT6(BPRX,BPREF))_U ;Fill Location
"RTN","BPSRPT8",53,0)
 . S BPREC=BPREC_$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))_U ;Fill Type
"RTN","BPSRPT8",54,0)
 . S BPREC=BPREC_$$RXSTANAM^BPSRPT2($$RXSTATUS^BPSRPT6(BPRX,0)) ;Status
"RTN","BPSRPT8",55,0)
 . S BPREC=BPREC_$S($P(BPX,U):"/RL",1:"/NR")_U ;RL/NR
"RTN","BPSRPT8",56,0)
 . S BPREC=BPREC_$S($P(BPX,U,13):"REJ",1:"")_U
"RTN","BPSRPT8",57,0)
 . S BPREC=BPREC_$$DRGNAM^BPSRPT6($P(BPX,U,14),32)_U ;Drug
"RTN","BPSRPT8",58,0)
 Q
"RTN","BPSRPT8",59,0)
 ;
"RTN","BPSRPT8",60,0)
 ;Print Report Line 2
"RTN","BPSRPT8",61,0)
 ;
"RTN","BPSRPT8",62,0)
 ; Input Variable -> BPRTYPE,BPX,BPRX,BPREF,BPBIL,BPGRPLAN
"RTN","BPSRPT8",63,0)
 ; 
"RTN","BPSRPT8",64,0)
WRLINE2(BPRTYPE,BPREC,BPX,BPRX,BPREF,BPBIL,BPGRPLAN) ;
"RTN","BPSRPT8",65,0)
 I (BPRTYPE=1)!(BPRTYPE=4) D  Q
"RTN","BPSRPT8",66,0)
 . ;Drug, Released On
"RTN","BPSRPT8",67,0)
 . S BPREC=BPREC_$$DRGNAM^BPSRPT6($P(BPX,U,14),32)_U_$$DATTIM^BPSRPT1(+BPX)_U
"RTN","BPSRPT8",68,0)
 . ;RX INFO
"RTN","BPSRPT8",69,0)
 . S BPREC=BPREC_$$MWCNAM^BPSRPT1($$MWC^BPSRPT6(BPRX,BPREF))_U ;Fill Location
"RTN","BPSRPT8",70,0)
 . S BPREC=BPREC_$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))_U ;Fill Type
"RTN","BPSRPT8",71,0)
 . S BPREC=BPREC_$$RXSTANAM^BPSRPT2($$RXSTATUS^BPSRPT6(BPRX,0)) ;Status
"RTN","BPSRPT8",72,0)
 . S BPREC=BPREC_$S($P(BPX,U):"/RL",1:"/NR")_U ;RL/NR
"RTN","BPSRPT8",73,0)
 . S BPREC=BPREC_$S($P(BPX,U,13):"REJ",1:"")
"RTN","BPSRPT8",74,0)
 . I BPRTYPE=1 S BPREC=BPREC_U_$$BILL^BPSRPT6(BPRX,BPREF) ;Bill #
"RTN","BPSRPT8",75,0)
 ;
"RTN","BPSRPT8",76,0)
 I BPRTYPE=2 D  Q
"RTN","BPSRPT8",77,0)
 . S BPREC=BPREC_$E($$CRDHLDID^BPSRPT2(+$P(BPX,U,3)),3,23)_U ;Cardholder ID
"RTN","BPSRPT8",78,0)
 . S BPREC=BPREC_$E($$GRPID^BPSRPT2(+$P(BPX,U,3)),3,10)_U ;Group ID
"RTN","BPSRPT8",79,0)
 . S BPREC=BPREC_$TR($J(BPBIL,10,2)," ")_U ;$Billed
"RTN","BPSRPT8",80,0)
 . S BPREC=BPREC_$$QTY^BPSRPT6(BPRX,BPREF)_U ;Qty
"RTN","BPSRPT8",81,0)
 . S BPREC=BPREC_$$GETNDC^BPSRPT6(BPRX,BPREF)_U ;NDC#
"RTN","BPSRPT8",82,0)
 . S BPREC=BPREC_$$DRGNAM^BPSRPT6($P(BPX,U,14),32)_U ;Drug
"RTN","BPSRPT8",83,0)
 ;
"RTN","BPSRPT8",84,0)
 I BPRTYPE=3 D  Q
"RTN","BPSRPT8",85,0)
 . S BPREC=BPREC_$$DRGNAM^BPSRPT6($P(BPX,U,14),32)_U ;Drug
"RTN","BPSRPT8",86,0)
 . ;RX INFO
"RTN","BPSRPT8",87,0)
 . S BPREC=BPREC_$$MWCNAM^BPSRPT1($$MWC^BPSRPT6(BPRX,BPREF))_U ;Fill Location
"RTN","BPSRPT8",88,0)
 . S BPREC=BPREC_$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))_U ;Fill Type
"RTN","BPSRPT8",89,0)
 . S BPREC=BPREC_$$RXSTANAM^BPSRPT2($$RXSTATUS^BPSRPT6(BPRX,0)) ;Status
"RTN","BPSRPT8",90,0)
 . S BPREC=BPREC_$S($P(BPX,U):"/RL",1:"/NR")_U ;RL/NR
"RTN","BPSRPT8",91,0)
 . S BPREC=BPREC_$S($P(BPX,U,13):"REJ",1:"")
"RTN","BPSRPT8",92,0)
 ;
"RTN","BPSRPT8",93,0)
 I BPRTYPE=5 D  Q
"RTN","BPSRPT8",94,0)
 . S BPREC=BPREC_$$DRGNAM^BPSRPT6($P(BPX,U,14),32)_U ;Drug
"RTN","BPSRPT8",95,0)
 . ;RX INFO
"RTN","BPSRPT8",96,0)
 . S BPREC=BPREC_$$MWCNAM^BPSRPT1($$MWC^BPSRPT6(BPRX,BPREF))_U ;Fill Location
"RTN","BPSRPT8",97,0)
 . S BPREC=BPREC_$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))_U ;Fill Type
"RTN","BPSRPT8",98,0)
 . S BPREC=BPREC_$$RXSTANAM^BPSRPT2($$RXSTATUS^BPSRPT6(BPRX,0))  ;Status
"RTN","BPSRPT8",99,0)
 . S BPREC=BPREC_$S($P(BPX,U):"/RL",1:"/NR")_U ;RL/NR
"RTN","BPSRPT8",100,0)
 . S BPREC=BPREC_$S($P(BPX,U,13):"REJ",1:"")_U
"RTN","BPSRPT8",101,0)
 . I $P(BPGRPLAN,U,2)]"" S BPREC=BPREC_$E($P(BPGRPLAN,U,2),1,30) ;Insurance
"RTN","BPSRPT8",102,0)
 . S BPREC=BPREC_U_$$ELAPSE^BPSRPT6($P(BPX,U,3))  ;Elapsed Time
"RTN","BPSRPT8",103,0)
 ;
"RTN","BPSRPT8",104,0)
 I BPRTYPE=7 D  Q
"RTN","BPSRPT8",105,0)
 . S BPREC=BPREC_$E($$CRDHLDID^BPSRPT2(+$P(BPX,U,3)),3,23)_U ;Cardholder ID
"RTN","BPSRPT8",106,0)
 . S BPREC=BPREC_$E($$GRPID^BPSRPT2(+$P(BPX,U,3)),3,10)_U  ;Group ID
"RTN","BPSRPT8",107,0)
 . S BPREC=BPREC_$$DATTIM^BPSRPT1(+$$CLOSEDT^BPSRPT2(+$P(BPX,U,3)))_U ;Close Dt/Time
"RTN","BPSRPT8",108,0)
 . S BPREC=BPREC_$E($$CLSBY^BPSRPT6(+$P(BPX,U,3)),1,25)_U ;Close By
"RTN","BPSRPT8",109,0)
 . S BPREC=BPREC_$E($P($$CLRSN^BPSRPT7(+$P(BPX,U,3)),U,2),1,30)_U ;Close Reason
"RTN","BPSRPT8",110,0)
 Q
"RTN","BPSRPT8",111,0)
 ;
"RTN","BPSRPT8",112,0)
 ;Print Report Line 3
"RTN","BPSRPT8",113,0)
 ;
"RTN","BPSRPT8",114,0)
 ; Input Variable -> BPRTYPE,BPX
"RTN","BPSRPT8",115,0)
 ; 
"RTN","BPSRPT8",116,0)
WRLINE3(BPRTYPE,BPREC,BPX) N BP59,BPSARR,BPRJCNT,BPZZ
"RTN","BPSRPT8",117,0)
 S BP59=+$P(BPX,U,3)
"RTN","BPSRPT8",118,0)
 ;
"RTN","BPSRPT8",119,0)
 I (",2,7,")[BPRTYPE D  Q
"RTN","BPSRPT8",120,0)
 .S BPREC=BPREC_$$CLAIMID^BPSRPT2(BP59)_U ;Claim ID
"RTN","BPSRPT8",121,0)
 .S BPRJCNT=$$REJTEXT^BPSRPT2(BP59,.BPSARR)
"RTN","BPSRPT8",122,0)
 .F BPZZ=1:1:BPRJCNT S:BPZZ'=1 BPREC=BPREC_"," S BPREC=BPREC_$P(BPSARR(BPZZ),":")
"RTN","BPSRPT8",123,0)
 .;
"RTN","BPSRPT8",124,0)
 .;Write one record per reject/close code
"RTN","BPSRPT8",125,0)
 .F BPZZ=1:1:BPRJCNT W !,$G(BPREC),U,$P(BPSARR(BPZZ),":"),U,$P(BPSARR(BPZZ),":",2)
"RTN","BPSRPT8",126,0)
 ;
"RTN","BPSRPT8",127,0)
 I BPRTYPE=4 D
"RTN","BPSRPT8",128,0)
 . ;Method
"RTN","BPSRPT8",129,0)
 . I $$AUTOREV^BPSRPT1(BP59) S BPREC=BPREC_U_"AUTO"_U
"RTN","BPSRPT8",130,0)
 . E  S BPREC=BPREC_U_"REGULAR"_U
"RTN","BPSRPT8",131,0)
 . ;Return Status
"RTN","BPSRPT8",132,0)
 . I $P(BPX,U,15)["ACCEPTED" S BPREC=BPREC_"ACCEPTED"_U
"RTN","BPSRPT8",133,0)
 . E  S BPREC=BPREC_"REJECTED"_U
"RTN","BPSRPT8",134,0)
 . ;Reason
"RTN","BPSRPT8",135,0)
 . S BPREC=BPREC_$$RVSRSN^BPSRPT7(+$P(BPX,U,3))
"RTN","BPSRPT8",136,0)
 ;
"RTN","BPSRPT8",137,0)
 ;Write the record
"RTN","BPSRPT8",138,0)
 W !,$G(BPREC)
"RTN","BPSRPT8",139,0)
 Q
"RTN","BPSRPT8",140,0)
 ;
"RTN","BPSRPT8",141,0)
 ;Print Excel Header
"RTN","BPSRPT8",142,0)
 ;
"RTN","BPSRPT8",143,0)
HDR(BPRTYPE) ;
"RTN","BPSRPT8",144,0)
 ;
"RTN","BPSRPT8",145,0)
 ;Check if header already printed
"RTN","BPSRPT8",146,0)
 I $G(BPSDATA) Q
"RTN","BPSRPT8",147,0)
 S BPSDATA=1
"RTN","BPSRPT8",148,0)
 ;
"RTN","BPSRPT8",149,0)
 ;Division
"RTN","BPSRPT8",150,0)
 W !,"DIVISION",U
"RTN","BPSRPT8",151,0)
 ;
"RTN","BPSRPT8",152,0)
 I BPRTYPE'=5,BPRTYPE'=6 W "INSURANCE",U
"RTN","BPSRPT8",153,0)
 ;
"RTN","BPSRPT8",154,0)
 I (",1,2,3,4,5,7,")[BPRTYPE W "PATIENT NAME",U,"Pt.ID",U,"RX#",U,"REF/ECME#",U
"RTN","BPSRPT8",155,0)
 ;
"RTN","BPSRPT8",156,0)
 I (BPRTYPE=1)!(BPRTYPE=4) D  Q
"RTN","BPSRPT8",157,0)
 . W "DATE",U
"RTN","BPSRPT8",158,0)
 . W "$BILLED",U
"RTN","BPSRPT8",159,0)
 . W "$INS RESPONSE",U
"RTN","BPSRPT8",160,0)
 . W "$COLLECT",U
"RTN","BPSRPT8",161,0)
 . W "DRUG",U
"RTN","BPSRPT8",162,0)
 . W "RELEASED ON",U
"RTN","BPSRPT8",163,0)
 . W "FILL LOCATION",U
"RTN","BPSRPT8",164,0)
 . W "FILL TYPE",U
"RTN","BPSRPT8",165,0)
 . W "STATUS",U
"RTN","BPSRPT8",166,0)
 . W "REJECTED"
"RTN","BPSRPT8",167,0)
 . I BPRTYPE=1 W U,"BILL#"
"RTN","BPSRPT8",168,0)
 . I BPRTYPE=4 W U,"REVERSAL METHOD",U,"RETURN STATUS",U,"REASON"
"RTN","BPSRPT8",169,0)
 ;
"RTN","BPSRPT8",170,0)
 I BPRTYPE=2 D  Q
"RTN","BPSRPT8",171,0)
 . W "DATE",U
"RTN","BPSRPT8",172,0)
 . W "RELEASED ON",U
"RTN","BPSRPT8",173,0)
 . W "FILL LOCATION",U
"RTN","BPSRPT8",174,0)
 . W "FILL TYPE",U
"RTN","BPSRPT8",175,0)
 . W "STATUS",U
"RTN","BPSRPT8",176,0)
 . W "CARDHOLD.ID",U
"RTN","BPSRPT8",177,0)
 . W "GROUP ID",U
"RTN","BPSRPT8",178,0)
 . W "$BILLED",U
"RTN","BPSRPT8",179,0)
 . W "QTY",U
"RTN","BPSRPT8",180,0)
 . W "NDC#",U
"RTN","BPSRPT8",181,0)
 . W "DRUG",U
"RTN","BPSRPT8",182,0)
 . W "CLAIM ID",U
"RTN","BPSRPT8",183,0)
 . W "REJECT CODE(S)",U
"RTN","BPSRPT8",184,0)
 . W "REJECT CODE",U
"RTN","BPSRPT8",185,0)
 . W "REJECT EXPLANATION"
"RTN","BPSRPT8",186,0)
 ;
"RTN","BPSRPT8",187,0)
 I BPRTYPE=3 D  Q
"RTN","BPSRPT8",188,0)
 . W "DATE",U
"RTN","BPSRPT8",189,0)
 . W "$BILLED",U
"RTN","BPSRPT8",190,0)
 . W "$INS RESPONSE",U
"RTN","BPSRPT8",191,0)
 . W "DRUG",U
"RTN","BPSRPT8",192,0)
 . W "FILL LOCATION",U
"RTN","BPSRPT8",193,0)
 . W "FILL TYPE",U
"RTN","BPSRPT8",194,0)
 . W "STATUS",U
"RTN","BPSRPT8",195,0)
 . W "REJECTED"
"RTN","BPSRPT8",196,0)
 ;
"RTN","BPSRPT8",197,0)
 I BPRTYPE=5 D  Q
"RTN","BPSRPT8",198,0)
 . W "COMPLETED",U
"RTN","BPSRPT8",199,0)
 . W "TRANS TYPE",U
"RTN","BPSRPT8",200,0)
 . W "PAYER RESPONSE",U
"RTN","BPSRPT8",201,0)
 . W "DRUG",U
"RTN","BPSRPT8",202,0)
 . W "FILL LOCATION",U
"RTN","BPSRPT8",203,0)
 . W "FILL TYPE",U
"RTN","BPSRPT8",204,0)
 . W "STATUS",U
"RTN","BPSRPT8",205,0)
 . W "REJECTED",U
"RTN","BPSRPT8",206,0)
 . W "INSURANCE",U
"RTN","BPSRPT8",207,0)
 . W "ELAP TIME IN SECONDS"
"RTN","BPSRPT8",208,0)
 ;
"RTN","BPSRPT8",209,0)
 I BPRTYPE=6 D  Q
"RTN","BPSRPT8",210,0)
 .W "DATE",U
"RTN","BPSRPT8",211,0)
 .W "#CLAIMS",U
"RTN","BPSRPT8",212,0)
 .W "AMOUNT SUBMITTED",U
"RTN","BPSRPT8",213,0)
 .W "RETURNED REJECTED",U
"RTN","BPSRPT8",214,0)
 .W "RETURNED PAYABLE",U
"RTN","BPSRPT8",215,0)
 .W "AMOUNT TO RECEIVE",U
"RTN","BPSRPT8",216,0)
 .W "DIFFERENCE"
"RTN","BPSRPT8",217,0)
 ;
"RTN","BPSRPT8",218,0)
 I BPRTYPE=7 D  Q
"RTN","BPSRPT8",219,0)
 . W "FILL LOCATION",U
"RTN","BPSRPT8",220,0)
 . W "FILL TYPE",U
"RTN","BPSRPT8",221,0)
 . W "STATUS",U
"RTN","BPSRPT8",222,0)
 . W "REJECTED",U
"RTN","BPSRPT8",223,0)
 . W "DRUG",U
"RTN","BPSRPT8",224,0)
 . W "CARDHOLD.ID",U
"RTN","BPSRPT8",225,0)
 . W "GROUP ID",U
"RTN","BPSRPT8",226,0)
 . W "CLOSE DATE/TIME",U
"RTN","BPSRPT8",227,0)
 . W "CLOSED BY",U
"RTN","BPSRPT8",228,0)
 . W "CLOSE REASON",U
"RTN","BPSRPT8",229,0)
 . W "CLAIM ID",U
"RTN","BPSRPT8",230,0)
 . W "REJECT CODE(S)",U
"RTN","BPSRPT8",231,0)
 . W "REJECT CODE",U
"RTN","BPSRPT8",232,0)
 . W "REJECT EXPLANATION"
"RTN","BPSRPT8",233,0)
 Q
"RTN","BPSRPT8",234,0)
 ;
"RTN","BPSRPT8",235,0)
 ;Print Report Insurance Subtotals
"RTN","BPSRPT8",236,0)
 ;
"RTN","BPSRPT8",237,0)
ITOT(BPRTYPE,BPDIV,BPGRPLAN,BPTBIL,BPTINS,BPTCOLL,BPCNT) N BPNP
"RTN","BPSRPT8",238,0)
 I (BPRTYPE=1)!(BPRTYPE=4) D  Q
"RTN","BPSRPT8",239,0)
 .W !!,?78,"----------",?100,"----------",?122,"----------"
"RTN","BPSRPT8",240,0)
 .W !,"SUBTOTALS for INS:",$E(BPGRPLAN,1,50),?78,$J(BPTBIL,10,2),?100,$J(BPTINS,10,2),?122,$J(BPTCOLL,10,2)
"RTN","BPSRPT8",241,0)
 .W !,"COUNT",?78,$J(BPCNT,10),?100,$J(BPCNT,10),?122,$J(BPCNT,10)
"RTN","BPSRPT8",242,0)
 .W:BPCNT !,"MEAN",?78,$J(BPTBIL/BPCNT,10,2),?100,$J(BPTINS/BPCNT,10,2),?122,$J(BPTCOLL/BPCNT,10,2)
"RTN","BPSRPT8",243,0)
 I BPRTYPE=3 D  Q
"RTN","BPSRPT8",244,0)
 .W !!,?100,"----------",?122,"----------"
"RTN","BPSRPT8",245,0)
 .W !,"SUBTOTALS for INS:",$E(BPGRPLAN,1,50),?100,$J(BPTBIL,10,2),?122,$J(BPTINS,10,2)
"RTN","BPSRPT8",246,0)
 .W !,"COUNT",?100,$J(BPCNT,10),?122,$J(BPCNT,10)
"RTN","BPSRPT8",247,0)
 .W:BPCNT !,"MEAN",?100,$J(BPTBIL/BPCNT,10,2),?122,$J(BPTINS/BPCNT,10,2)
"RTN","BPSRPT8",248,0)
 I BPRTYPE=2 D  Q
"RTN","BPSRPT8",249,0)
 .W !!,?41,"----------"
"RTN","BPSRPT8",250,0)
 .W !,"SUBTOTALS for INS:",$E(BPGRPLAN,1,22),?41,$J(BPTBIL,10,2)
"RTN","BPSRPT8",251,0)
 .W !,"COUNT",?41,$J(BPCNT,10)
"RTN","BPSRPT8",252,0)
 .W:BPCNT !,"MEAN",?41,$J(BPTBIL/BPCNT,10,2)
"RTN","BPSRPT8",253,0)
 I (BPRTYPE=7) D  Q
"RTN","BPSRPT8",254,0)
 .W !!,"SUBTOTALS for INS:",$E(BPGRPLAN,1,50)
"RTN","BPSRPT8",255,0)
 .N BPBILR
"RTN","BPSRPT8",256,0)
 .S BPBILR="" F  S BPBILR=$O(BPCNT(BPBILR)) Q:BPBILR=""  D  Q:BPQ
"RTN","BPSRPT8",257,0)
 ..S BPNP=$$CHKP^BPSRPT5(1) Q:BPQ
"RTN","BPSRPT8",258,0)
 ..W !,?3,BPBILR,?65,$J($G(BPCNT(BPBILR)),5)
"RTN","BPSRPT8",259,0)
 .Q:$G(BPQ)
"RTN","BPSRPT8",260,0)
 .W !,?65,"-----"
"RTN","BPSRPT8",261,0)
 .W !,"CLOSED CLAIMS SUBTOTAL",?65,$J(BPCNT,5)
"RTN","BPSRPT8",262,0)
 ;
"RTN","BPSRPT8",263,0)
 Q
"RTN","BPSSCR02")
0^4^B44572484
"RTN","BPSSCR02",1,0)
BPSSCR02 ;BHAM ISC/SS - USER SCREEN UTILITIES ;05-APR-05
"RTN","BPSSCR02",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSSCR02",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","BPSSCR02",4,0)
 ;USER SCREEN
"RTN","BPSSCR02",5,0)
 Q
"RTN","BPSSCR02",6,0)
REVERSE ; 
"RTN","BPSSCR02",7,0)
 N BPSDFN,BPSRX
"RTN","BPSSCR02",8,0)
 D SELECT(.BPSDFN,.BPSRX)
"RTN","BPSSCR02",9,0)
 S VALMBCK="R"
"RTN","BPSSCR02",10,0)
 Q
"RTN","BPSSCR02",11,0)
 ;
"RTN","BPSSCR02",12,0)
SELECT(BPSDFN1,BPSRX1,BPSRF1,BPS59) ; Select a patient.  Returns patient IEN(s) in array
"RTN","BPSSCR02",13,0)
 N BPLN
"RTN","BPSSCR02",14,0)
 S BPLN=$$SELLINE("Select the line(s) with the paid claim(s) you wish to REVERSE","")
"RTN","BPSSCR02",15,0)
 Q
"RTN","BPSSCR02",16,0)
 ;
"RTN","BPSSCR02",17,0)
SELLINE(BPSPROM,BPSDFVL) ;
"RTN","BPSSCR02",18,0)
 N BPRET,DIR,X,Y,DIRUT
"RTN","BPSSCR02",19,0)
 S BPRET="^"
"RTN","BPSSCR02",20,0)
 W ! S DIR(0)="N^::2",DIR("A")=BPSPROM,DIR("B")=BPSDFVL D ^DIR I $D(DIRUT) Q "^"
"RTN","BPSSCR02",21,0)
 S $P(BPRET,U)=Y
"RTN","BPSSCR02",22,0)
 Q BPRET
"RTN","BPSSCR02",23,0)
 ;/**
"RTN","BPSSCR02",24,0)
 ;make array element
"RTN","BPSSCR02",25,0)
 ;BPLINE - line number in LM ARRAY (by ref)
"RTN","BPSSCR02",26,0)
 ;BPTMP - VALMAR (TMP global for LM)
"RTN","BPSSCR02",27,0)
 ;BP59 - ptr to 9002313.59
"RTN","BPSSCR02",28,0)
 ;BPLMIND - passed by ref - current patient(/insurance) index ( to make 1, 2,etc)
"RTN","BPSSCR02",29,0)
 ;BPDRIND - passed by ref - current claim level index ( to make .1, .2, .10,... .20,... )
"RTN","BPSSCR02",30,0)
 ;TMP structure gives on the screen:
"RTN","BPSSCR02",31,0)
 ;^TMP("BPSSCR",$J,"VALM","LMIND",1,0,DFN,0,0)=
"RTN","BPSSCR02",32,0)
 ;^TMP("BPSSCR",$J,"VALM",1,0)=1   BUMSTEAD,CHARLE (5444)/100-234-2345 *done* FINISHED
"RTN","BPSSCR02",33,0)
 ;BPLINE = 1
"RTN","BPSSCR02",34,0)
 ;BPLMIND=1
"RTN","BPSSCR02",35,0)
 ;on the screen:
"RTN","BPSSCR02",36,0)
 ;1   BUMSTEAD,CHARLE      (5444)   /100-234-2345 *done* FINISHED
"RTN","BPSSCR02",37,0)
 ;
"RTN","BPSSCR02",38,0)
 ;^TMP(538978189,"BPSSCR","SORT","T",1,401959.00001)=
"RTN","BPSSCR02",39,0)
 ;^TMP("BPSSCR",$J,"VALM","LMIND",1,1,DFN,401959.00001,1)=
"RTN","BPSSCR02",40,0)
 ;^TMP("BPSSCR",$J,"VALM",2,0)=  1.1   LOVASTATIN 20MG TAB
"RTN","BPSSCR02",41,0)
 ;BPLINE = 2
"RTN","BPSSCR02",42,0)
 ;BP59= 401959.00001
"RTN","BPSSCR02",43,0)
 ;on the screen:
"RTN","BPSSCR02",44,0)
 ;  1.1   LOVASTATIN 20MG TAB
"RTN","BPSSCR02",45,0)
 ;
"RTN","BPSSCR02",46,0)
 ;^TMP(538978189,"BPSSCR","SORT","T",1,501750.00011)=
"RTN","BPSSCR02",47,0)
 ;^TMP("BPSSCR",$J,"VALM","LMIND",1,2,DFN,501750.00011,2)=
"RTN","BPSSCR02",48,0)
 ;^TMP("BPSSCR",$J,"VALM",3,0)=  1.2   CIMETIDINE 300MG TAB
"RTN","BPSSCR02",49,0)
 ;BPLINE = 3
"RTN","BPSSCR02",50,0)
 ;BP59= 501750.00011
"RTN","BPSSCR02",51,0)
 ;on the screen:
"RTN","BPSSCR02",52,0)
 ;  1.2   CIMETIDINE 300MG TAB
"RTN","BPSSCR02",53,0)
 ;
"RTN","BPSSCR02",54,0)
MKARRELM(BPLINE,BPTMP,BP59,BPLMIND,BPDRIND,BPPREV) ;*/
"RTN","BPSSCR02",55,0)
 N BPSSTR,BPLNS,BPDFN,BPSTAT,BPSINSUR,BPINSDAT
"RTN","BPSSCR02",56,0)
 S BPDFN=+$P($G(^BPST(BP59,0)),U,6) ;patient's DFN
"RTN","BPSSCR02",57,0)
 S BPINSDAT=$$GETINSUR^BPSSCRU2(BP59)
"RTN","BPSSCR02",58,0)
 S BPSINSUR=+BPINSDAT ;patient's insurance IEN
"RTN","BPSSCR02",59,0)
 ;
"RTN","BPSSCR02",60,0)
 ;PATIENT SUMMARY level
"RTN","BPSSCR02",61,0)
 ; if last one was different DFN/INSURANCE combination then create a new Patient Summary level
"RTN","BPSSCR02",62,0)
 I (+$O(@BPTMP@("LMIND",BPLMIND,0,0))'=BPDFN)!(+$O(@BPTMP@("LMIND",BPLMIND,0,BPDFN,0))'=BPSINSUR) D
"RTN","BPSSCR02",63,0)
 . ;-------- first process previous patient & insurance group
"RTN","BPSSCR02",64,0)
 . ;determine patient summary statuses for the previous "patient" group
"RTN","BPSSCR02",65,0)
 . I BPLMIND>0,+BPPREV=BPLMIND D
"RTN","BPSSCR02",66,0)
 . . ;update the record for previous patient summary after we went thru all his claims
"RTN","BPSSCR02",67,0)
 . . D UPDPREV(BPTMP,BPLMIND,BPPREV)
"RTN","BPSSCR02",68,0)
 . ;process new "patient & insurance" group ------------------
"RTN","BPSSCR02",69,0)
 . S BPDRIND=0
"RTN","BPSSCR02",70,0)
 . S BPLMIND=(BPLMIND\1)+1
"RTN","BPSSCR02",71,0)
 . ;save the all necessary data for the patient & insurance to use as previous for STAT4PAT later on
"RTN","BPSSCR02",72,0)
 . S BPPREV=BPLMIND_U_BPLINE_U_BPDFN_U_$$PATINF(BPDFN,BPINSDAT)_U_BPSINSUR
"RTN","BPSSCR02",73,0)
 . S BPSSTR=$$LJ(BPLMIND,4)_$P(BPPREV,U,4)
"RTN","BPSSCR02",74,0)
 . D SAVEARR(BPTMP,BPLMIND,BPDRIND,BPDFN,0,BPLINE,BPSSTR,BPSINSUR)
"RTN","BPSSCR02",75,0)
 . S BPLINE=BPLINE+1
"RTN","BPSSCR02",76,0)
 ;
"RTN","BPSSCR02",77,0)
 ;CLAIMS level
"RTN","BPSSCR02",78,0)
 D
"RTN","BPSSCR02",79,0)
 . I +$O(@BPTMP@("LMIND",BPLMIND,BPDRIND,BPDFN,0))'=BP59 D
"RTN","BPSSCR02",80,0)
 . . S BPDRIND=BPDRIND+1
"RTN","BPSSCR02",81,0)
 . . S BPSSTR="  "_$$LJ(+$P(BPLMIND,".")_"."_BPDRIND,5)_" "_$$CLAIMINF(BP59)
"RTN","BPSSCR02",82,0)
 . . ;@debug,remove the next line after finish debugging
"RTN","BPSSCR02",83,0)
 . . ;S BPSSTR=BPSSTR_" 59:"_BP59_" DT:"_$$TRANDT^BPSSCRU2(BP59)_" DFN:"_BPDFN_" INS:"_BPSINSUR
"RTN","BPSSCR02",84,0)
 . . D SAVEARR(BPTMP,BPLMIND,BPDRIND,BPDFN,BP59,BPLINE,BPSSTR,BPSINSUR)
"RTN","BPSSCR02",85,0)
 . . S BPLINE=BPLINE+1
"RTN","BPSSCR02",86,0)
 . . N BPARR,X
"RTN","BPSSCR02",87,0)
 . . S BPLNS=$$ADDINF^BPSSCR03(BP59,.BPARR,74,"R")
"RTN","BPSSCR02",88,0)
 . . F X=1:1:BPLNS D
"RTN","BPSSCR02",89,0)
 . . . I $G(BPARR(X))="" Q
"RTN","BPSSCR02",90,0)
 . . . D SAVEARR(BPTMP,BPLMIND,BPDRIND,BPDFN,BP59,BPLINE,"      "_BPARR(X),BPSINSUR)
"RTN","BPSSCR02",91,0)
 . . . S BPLINE=BPLINE+1
"RTN","BPSSCR02",92,0)
 Q
"RTN","BPSSCR02",93,0)
 ;S BPS=BPX
"RTN","BPSSCR02",94,0)
 ;/**
"RTN","BPSSCR02",95,0)
 ;BP59
"RTN","BPSSCR02",96,0)
CLAIMINF(BP59) ;*/
"RTN","BPSSCR02",97,0)
 N BPX,BPX1
"RTN","BPSSCR02",98,0)
 S BPX1=$$RXREF^BPSSCRU2(BP59)
"RTN","BPSSCR02",99,0)
 ;S BPX=BP59_$$LJ($$DRGNAME^BPSSCRU2(BP59),22)_"  "_$$LJ($$NDC^BPSSCRU2(+BPX1,+$P(BPX1,U,2)),13)_"  "
"RTN","BPSSCR02",100,0)
 S BPX=$$LJ($$DRGNAME^BPSSCRU2(BP59),17)_"  "_$$LJ($$NDC^BPSSCRU2(+BPX1,+$P(BPX1,U,2)),13)_" "
"RTN","BPSSCR02",101,0)
 S BPX=BPX_$$LJ($$FILLDATE^BPSSCRRS(+BPX1,+$P(BPX1,U,2)),5)_" "
"RTN","BPSSCR02",102,0)
 S BPX=BPX_$$LJ($$RXNUM^BPSSCRU2(+BPX1),11)_" "_+$P(BPX1,U,2)_"/"
"RTN","BPSSCR02",103,0)
 S BPX=BPX_$$LJ($$ECMENUM^BPSSCRU2(BP59),7)_" "_$$MWCNAME^BPSSCRU2($$GETMWC^BPSSCRU2(BP59))_" "
"RTN","BPSSCR02",104,0)
 S BPX=BPX_$$RTBB^BPSSCRU2(BP59)_" "_$$RXST^BPSSCRU2(BP59)_"/"_$$RL^BPSSCRU2(BP59)
"RTN","BPSSCR02",105,0)
 Q BPX
"RTN","BPSSCR02",106,0)
 ;/**
"RTN","BPSSCR02",107,0)
 ;determine "done" and "FINISHED" status for patient/insurance group by BPLMIND in TMP global
"RTN","BPSSCR02",108,0)
STAT4PAT(BPLMIND) ;*/
"RTN","BPSSCR02",109,0)
 N BPCL,BPDFN,BP59,BPX,BPINS,BPX,BPCNT
"RTN","BPSSCR02",110,0)
 N BPPB,BPRJ,BPACRV,BPRJRV,BPSR,BPFIN,BPPRCNTG
"RTN","BPSSCR02",111,0)
 S (BPCL,BPPB,BPRJ,BPACRV,BPSR,BPRJRV)=0
"RTN","BPSSCR02",112,0)
 S BPFIN=0 ; finished by default
"RTN","BPSSCR02",113,0)
 S BPPRCNTG=0
"RTN","BPSSCR02",114,0)
 S BPCNT=0
"RTN","BPSSCR02",115,0)
 F  S BPCL=+$O(@BPTMP@("LMIND",BPLMIND,BPCL)) Q:BPCL=0  D
"RTN","BPSSCR02",116,0)
 . S BPDFN=0
"RTN","BPSSCR02",117,0)
 . F  S BPDFN=+$O(@BPTMP@("LMIND",BPLMIND,BPCL,BPDFN)) Q:BPDFN=0  D
"RTN","BPSSCR02",118,0)
 . . S BPINS="" ;can be 0 in the TMP global if insurance plan
"RTN","BPSSCR02",119,0)
 . . ;is corrupted in file ##9002313.59
"RTN","BPSSCR02",120,0)
 . . F  S BPINS=$O(@BPTMP@("LMIND",BPLMIND,BPCL,BPDFN,BPINS)) Q:BPINS=""  D
"RTN","BPSSCR02",121,0)
 . . . S BP59=0,BPINS=+BPINS
"RTN","BPSSCR02",122,0)
 . . . F  S BP59=+$O(@BPTMP@("LMIND",BPLMIND,BPCL,BPDFN,BPINS,BP59)) Q:BP59=0  D
"RTN","BPSSCR02",123,0)
 . . . . S BPCNT=BPCNT+1
"RTN","BPSSCR02",124,0)
 . . . . S BPX=$P($$CLAIMST^BPSSCRU3(BP59),U)
"RTN","BPSSCR02",125,0)
 . . . . I BPX["E PAYABLE" S BPPB=BPPB+1 ;Payable
"RTN","BPSSCR02",126,0)
 . . . . I BPX["E REJECTED" S BPRJ=BPRJ+1 ;Rejected
"RTN","BPSSCR02",127,0)
 . . . . I BPX["E REVERSAL ACCEPTED" S BPACRV=BPACRV+1 ;Accepted Reversal 
"RTN","BPSSCR02",128,0)
 . . . . I BPX["E REVERSAL REJECTED" S BPRJRV=BPRJRV+1 ;Rejected Reversal
"RTN","BPSSCR02",129,0)
 . . . . ;don't count Auto-Reversal
"RTN","BPSSCR02",130,0)
 . . . . ;I BPX["^SR^" S BPSR=BPSR+1 ; stranded
"RTN","BPSSCR02",131,0)
 . . . . S BPFIN=BPFIN+$$PRCNTG^BPSSCRU3(BP59)
"RTN","BPSSCR02",132,0)
 . . . . ;I BPFIN=1 Q "**FINISHED**"
"RTN","BPSSCR02",133,0)
 ;Q BPCNT_" "_BPPB_","_BPRJ_","_BPACRV_","_BPSR
"RTN","BPSSCR02",134,0)
 I BPCNT>0 S BPPRCNTG=(BPFIN/BPCNT)\1
"RTN","BPSSCR02",135,0)
 I BPPRCNTG=99 S BPPRCNTG="Done"
"RTN","BPSSCR02",136,0)
 E  S BPPRCNTG=BPPRCNTG_"%"
"RTN","BPSSCR02",137,0)
 S BPX="*"_BPPRCNTG_"*"
"RTN","BPSSCR02",138,0)
 I BPPB=BPCNT S BPX=BPX_" ALL payable"
"RTN","BPSSCR02",139,0)
 E  S BPX=BPX_" Pb:"_BPPB_" Rj:"_BPRJ_" AcRv:"_BPACRV_" RjRv:"_BPRJRV
"RTN","BPSSCR02",140,0)
 Q BPX
"RTN","BPSSCR02",141,0)
 ;/**
"RTN","BPSSCR02",142,0)
 ;gets the patient summary information
"RTN","BPSSCR02",143,0)
 ;input:
"RTN","BPSSCR02",144,0)
 ; BPDFN - ptr to #2
"RTN","BPSSCR02",145,0)
 ; BPINS - insurance ien^insurance name^phone 
"RTN","BPSSCR02",146,0)
 ;output:
"RTN","BPSSCR02",147,0)
 ; patient summary information
"RTN","BPSSCR02",148,0)
PATINF(BPDFN,BPINS) ;*/
"RTN","BPSSCR02",149,0)
 N X,BPINSNM
"RTN","BPSSCR02",150,0)
 S BPINSNM=$P(BPINS,U,2)
"RTN","BPSSCR02",151,0)
 S X=$$LJ^BPSSCR02($$PATNAME^BPSSCRU2(BPDFN),13) ;name
"RTN","BPSSCR02",152,0)
 S X=X_" "_$$LJ($$SSN4^BPSSCRU2(BPDFN),6) ;4digits of SSN
"RTN","BPSSCR02",153,0)
 S X=X_" "_$$LJ($S(BPINSNM="":"????",1:BPINSNM),8) ;insurance
"RTN","BPSSCR02",154,0)
 S X=X_"/"_$$LJ($P(BPINS,U,3),14) ;phone
"RTN","BPSSCR02",155,0)
 Q X
"RTN","BPSSCR02",156,0)
 ;
"RTN","BPSSCR02",157,0)
 ;/**
"RTN","BPSSCR02",158,0)
 ;creates an entry in LM array and builds a non-standard index
"RTN","BPSSCR02",159,0)
 ;BPLMIND - passed by ref - current LM index - patient_AND_insurance level 
"RTN","BPSSCR02",160,0)
 ;BPDRIND - passed by ref - current LM index  - claim level 
"RTN","BPSSCR02",161,0)
 ;BPTMP - VALMAR (TMP global for LM)
"RTN","BPSSCR02",162,0)
 ;BP59 - ptr to 9002313.59
"RTN","BPSSCR02",163,0)
 ;BPLINE - line number in LM ARRAY (by ref)
"RTN","BPSSCR02",164,0)
 ;BPSTR - string to save in ARRAY
"RTN","BPSSCR02",165,0)
 ;BPSINSUR - INSURANCE ien
"RTN","BPSSCR02",166,0)
SAVEARR(BPTMP1,BPLMIND,BPDRIND,BPDFN,BP59,BPLINE,BPSSTR,BPSINSUR) ;
"RTN","BPSSCR02",167,0)
 S @BPTMP1@("LMIND",BPLMIND,BPDRIND,BPDFN,BPSINSUR,BP59,BPLINE)=""
"RTN","BPSSCR02",168,0)
 D SET^VALM10(BPLINE,BPSSTR,BP59)
"RTN","BPSSCR02",169,0)
 Q
"RTN","BPSSCR02",170,0)
 ;left justified, blank padded
"RTN","BPSSCR02",171,0)
 ;adds spaces on right or truncates to make return string BPLEN characters long
"RTN","BPSSCR02",172,0)
 ;BPST- original string
"RTN","BPSSCR02",173,0)
 ;BPLEN - desired length
"RTN","BPSSCR02",174,0)
LJ(BPST,BPLEN) ;
"RTN","BPSSCR02",175,0)
 N BPL
"RTN","BPSSCR02",176,0)
 S BPL=BPLEN-$L(BPST)
"RTN","BPSSCR02",177,0)
 Q $E(BPST_$J("",$S(BPL<0:0,1:BPL)),1,BPLEN)
"RTN","BPSSCR02",178,0)
 ;
"RTN","BPSSCR02",179,0)
 ;right justified, blank padded
"RTN","BPSSCR02",180,0)
 ;adds spaces on left or truncates to make return string BPLEN characters long
"RTN","BPSSCR02",181,0)
 ;BPST- original string
"RTN","BPSSCR02",182,0)
 ;BPLEN - desired length
"RTN","BPSSCR02",183,0)
RJ(BPST,BPLEN)  ;
"RTN","BPSSCR02",184,0)
 S BPL=BPLEN-$L(BPST)
"RTN","BPSSCR02",185,0)
 I BPL>0 Q $J("",$S(BPL<0:0,1:BPL))_BPST
"RTN","BPSSCR02",186,0)
 Q $E(BPST,1,BPLEN)
"RTN","BPSSCR02",187,0)
 ;
"RTN","BPSSCR02",188,0)
 ;is the claim payable?
"RTN","BPSSCR02",189,0)
PAYABLE(BP59) ;
"RTN","BPSSCR02",190,0)
 I $P($$CLAIMST^BPSSCRU3(BP59),U)["E PAYABLE" Q 1
"RTN","BPSSCR02",191,0)
 Q 0
"RTN","BPSSCR02",192,0)
 ;
"RTN","BPSSCR02",193,0)
 ;is the claim rejected?
"RTN","BPSSCR02",194,0)
REJECTED(BP59) ;
"RTN","BPSSCR02",195,0)
 I $P($$CLAIMST^BPSSCRU3(BP59),U)["E REJECTED" Q 1
"RTN","BPSSCR02",196,0)
 I $P($$CLAIMST^BPSSCRU3(BP59),U)["E REVERSAL REJECTED" Q 1
"RTN","BPSSCR02",197,0)
 Q 0
"RTN","BPSSCR02",198,0)
 ;update patient summary information for the previous patient/insurance pair
"RTN","BPSSCR02",199,0)
UPDPREV(BPTMP,BPLMIND,BPPREV) ;
"RTN","BPSSCR02",200,0)
 N BPSSTR
"RTN","BPSSCR02",201,0)
 ;update the record for previous patient summary after we went thru all his claims
"RTN","BPSSCR02",202,0)
 S BPSSTR=$$LJ^BPSSCR02(BPLMIND,4)_$P(BPPREV,U,4)_" "_$$STAT4PAT^BPSSCR02(BPLMIND)
"RTN","BPSSCR02",203,0)
 D SAVEARR^BPSSCR02(BPTMP,BPLMIND,0,+$P(BPPREV,U,3),0,+$P(BPPREV,U,2),BPSSTR,+$P(BPPREV,U,5))
"RTN","BPSSCR02",204,0)
 Q
"RTN","BPSSCR02",205,0)
 ;
"RTN","BPSSCRCL")
0^5^B75932788
"RTN","BPSSCRCL",1,0)
BPSSCRCL ;BHAM ISC/SS - ECME SCREEN CLOSE CLAIMS ;05-APR-05
"RTN","BPSSCRCL",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSSCRCL",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","BPSSCRCL",4,0)
 Q
"RTN","BPSSCRCL",5,0)
 ;
"RTN","BPSSCRCL",6,0)
CLO ;entry point to close claims
"RTN","BPSSCRCL",7,0)
 N BPRET,BPSARR59
"RTN","BPSSCRCL",8,0)
 I '$D(@(VALMAR)) Q
"RTN","BPSSCRCL",9,0)
 D FULL^VALM1
"RTN","BPSSCRCL",10,0)
 W !,"Enter the line numbers for the claim(s) to be closed."
"RTN","BPSSCRCL",11,0)
 S BPRET=$$ASKLINES^BPSSCRU4("Select item(s)","C",.BPSARR59,VALMAR)
"RTN","BPSSCRCL",12,0)
 I BPRET="^" S VALMBCK="R" Q
"RTN","BPSSCRCL",13,0)
 ;close claims
"RTN","BPSSCRCL",14,0)
 ;update the content of the screen
"RTN","BPSSCRCL",15,0)
 ;only if at least one claim was closed
"RTN","BPSSCRCL",16,0)
 I $$CLOSE(.BPSARR59) D REDRAW^BPSSCRUD("Updating screen for closed claims...")
"RTN","BPSSCRCL",17,0)
 E  S VALMBCK="R"
"RTN","BPSSCRCL",18,0)
 Q
"RTN","BPSSCRCL",19,0)
 ;
"RTN","BPSSCRCL",20,0)
 ;close claims
"RTN","BPSSCRCL",21,0)
 ;input:
"RTN","BPSSCRCL",22,0)
 ; BP59ARR - array with ptrs to BPS TRANSACTION FILE
"RTN","BPSSCRCL",23,0)
 ;       BP59ARR(ien59)="ien in TMP ^ number on the user screen"
"RTN","BPSSCRCL",24,0)
 ;returns:
"RTN","BPSSCRCL",25,0)
 ; BPCLTOT - number of closed claims
"RTN","BPSSCRCL",26,0)
CLOSE(BP59ARR) ;
"RTN","BPSSCRCL",27,0)
 N BPNEWARR,BPRETV,BPREJFLG,X
"RTN","BPSSCRCL",28,0)
 N BPDFN,BP59,BPIFANY,BPQ
"RTN","BPSSCRCL",29,0)
 N BPREAS,BPCOMM,BP90ANSW,BPRCOPAY,BPRXINFO,BPCOP,BPCLTOT,BPINS,BPINSNM,BP59FRST
"RTN","BPSSCRCL",30,0)
 S BPRETV=$$MKNEWARR(.BP59ARR,.BPNEWARR,.BPINS)
"RTN","BPSSCRCL",31,0)
 S BPQ="",BPIFANY=0,BPREJFLG=1
"RTN","BPSSCRCL",32,0)
 S BPDFN=""
"RTN","BPSSCRCL",33,0)
 F  S BPDFN=$O(BPNEWARR(BPDFN)) Q:BPDFN=""  D  Q:BPQ="^"
"RTN","BPSSCRCL",34,0)
 . W !!,"You've chosen to close the following prescription(s) for",!,$E($$PATNAME^BPSSCRU2(BPDFN),1,13)_" :"
"RTN","BPSSCRCL",35,0)
 . S BP59="" F  S BP59=$O(BPNEWARR(BPDFN,BP59)) Q:BP59=""  D  Q:BPQ="^"
"RTN","BPSSCRCL",36,0)
 . . I $Y>20 D PAUSE^VALM1 W @IOF I X="^" S BPQ="^" Q
"RTN","BPSSCRCL",37,0)
 . . S BPIFANY=1,BPQ=""
"RTN","BPSSCRCL",38,0)
 . . ;I $P($G(BPNEWARR(BPDFN,BP59)),U,3)=1 W:BPREJFLG=0 ! S BPREJFLG=1
"RTN","BPSSCRCL",39,0)
 . . ;E  W:BPREJFLG=1 ! S BPREJFLG=0
"RTN","BPSSCRCL",40,0)
 . . S BPREJFLG=+$P($G(BPNEWARR(BPDFN,BP59)),U,3)
"RTN","BPSSCRCL",41,0)
 . . W !,@VALMAR@(+$G(BPNEWARR(BPDFN,BP59)),0)
"RTN","BPSSCRCL",42,0)
 . . D DISPREJ^BPSSCRU6(BP59)
"RTN","BPSSCRCL",43,0)
 . . W:BPREJFLG=0 !,"Claim NOT Rejected and cannot be Closed."
"RTN","BPSSCRCL",44,0)
 I +BPRETV=0 Q $$QUITCL()
"RTN","BPSSCRCL",45,0)
 I BPQ="^" Q $$QUITCL()
"RTN","BPSSCRCL",46,0)
 ;
"RTN","BPSSCRCL",47,0)
 W !!,"ALL Selected Rxs will be CLOSED using the same information gathered in the following prompts.",!
"RTN","BPSSCRCL",48,0)
 S BPQ=$$YESNO^BPSSCRRS("Are you sure?(Y/N)")
"RTN","BPSSCRCL",49,0)
 I BPQ'=1 Q $$QUITCL()
"RTN","BPSSCRCL",50,0)
 ;
"RTN","BPSSCRCL",51,0)
 ; ask questions for all of them
"RTN","BPSSCRCL",52,0)
 W !!
"RTN","BPSSCRCL",53,0)
 I $$ASKQUEST(+$P(BPRETV,U,2),.BPREAS,.BPCOMM,.BP90ANSW,.BPRCOPAY)'=1 Q $$QUITCL()
"RTN","BPSSCRCL",54,0)
 ;
"RTN","BPSSCRCL",55,0)
 ; check 2nd insurance
"RTN","BPSSCRCL",56,0)
 S BPQ=""
"RTN","BPSSCRCL",57,0)
 I BP90ANSW'="D" D
"RTN","BPSSCRCL",58,0)
 . S BPDFN="" F  S BPDFN=$O(BPINS(BPDFN)) Q:BPDFN=""  D  Q:BPQ="^"
"RTN","BPSSCRCL",59,0)
 . . S BPINSNM="" F  S BPINSNM=$O(BPINS(BPDFN,BPINSNM)) Q:BPINSNM=""  D  Q:BPQ="^"
"RTN","BPSSCRCL",60,0)
 . . . S BP59FRST=0
"RTN","BPSSCRCL",61,0)
 . . . S BP59=""
"RTN","BPSSCRCL",62,0)
 . . . K BPRXINFO
"RTN","BPSSCRCL",63,0)
 . . . F  S BP59=$O(BPINS(BPDFN,BPINSNM,BP59)) Q:BP59=""  D  Q:BPQ="^"
"RTN","BPSSCRCL",64,0)
 . . . . S:BP59FRST=0 BP59FRST=BP59
"RTN","BPSSCRCL",65,0)
 . . . . S BPRXINFO(BP59)=$E($G(@VALMAR@(+$G(BP59ARR(BP59)),0)),7,99)
"RTN","BPSSCRCL",66,0)
 . . . ; call CH2NDINS^BPSSCRU5 only once for all claims for this patient and insurance
"RTN","BPSSCRCL",67,0)
 . . . ; you can use one BP59FRST for the group of claims here as a parameter since 
"RTN","BPSSCRCL",68,0)
 . . . ; they all are all identical from the "patient-insurance pair" point of view
"RTN","BPSSCRCL",69,0)
 . . . D:BP59FRST>0 CH2NDINS^BPSSCRU5(BP59FRST,$E($$PATNAME^BPSSCRU2(BPDFN),1,13),BPINSNM,.BPRXINFO)
"RTN","BPSSCRCL",70,0)
 ;
"RTN","BPSSCRCL",71,0)
 I BPQ="^" Q $$QUITCL()
"RTN","BPSSCRCL",72,0)
 ;
"RTN","BPSSCRCL",73,0)
 W @IOF
"RTN","BPSSCRCL",74,0)
 ;and finally close all
"RTN","BPSSCRCL",75,0)
 S BPCLTOT=0
"RTN","BPSSCRCL",76,0)
 S BPDFN="" F  S BPDFN=$O(BPNEWARR(BPDFN)) Q:BPDFN=""  D
"RTN","BPSSCRCL",77,0)
 . S BP59="" F  S BP59=$O(BPNEWARR(BPDFN,BP59)) Q:BP59=""  D
"RTN","BPSSCRCL",78,0)
 . . I $P($G(BPNEWARR(BPDFN,BP59)),U,3)=0 Q  ;can't be closed
"RTN","BPSSCRCL",79,0)
 . . S BPCOP=0
"RTN","BPSSCRCL",80,0)
 . . I +BPRCOPAY=1,$P($G(BPNEWARR(BPDFN,BP59)),U,4)=1 S BPCOP=1 ;release copay
"RTN","BPSSCRCL",81,0)
 . . I $$CLOSEIT(BP59,$P(BPREAS,U,2),BPCOMM,BP90ANSW,BPCOP)>0 D
"RTN","BPSSCRCL",82,0)
 . . . S BPCLTOT=BPCLTOT+1
"RTN","BPSSCRCL",83,0)
 ;
"RTN","BPSSCRCL",84,0)
 W !,BPCLTOT," claim",$S(BPCLTOT'=1:"s have",1:" has")," been closed.",!
"RTN","BPSSCRCL",85,0)
 D PAUSE^VALM1
"RTN","BPSSCRCL",86,0)
 Q BPCLTOT
"RTN","BPSSCRCL",87,0)
 ;
"RTN","BPSSCRCL",88,0)
QUITCL() ;
"RTN","BPSSCRCL",89,0)
 W !!,"0 claims have been closed."
"RTN","BPSSCRCL",90,0)
 D PAUSE^VALM1
"RTN","BPSSCRCL",91,0)
 Q 0
"RTN","BPSSCRCL",92,0)
 ;/**
"RTN","BPSSCRCL",93,0)
 ;Ask all necessary questions
"RTN","BPSSCRCL",94,0)
 ;Input
"RTN","BPSSCRCL",95,0)
 ; BPRELCOP - ask release copay question
"RTN","BPSSCRCL",96,0)
 ; .BPREAZ - ptr to #356.8 ^ CLOSE REASON NAME ^ ECME FLAG ^ ECME PAPER FLAG
"RTN","BPSSCRCL",97,0)
 ; .BPCOMZ - close comment (string)
"RTN","BPSSCRCL",98,0)
 ; .BP90ANSZ - "", "D"(drop to paper) or "N" (non-billable)
"RTN","BPSSCRCL",99,0)
 ; .BPRCOPAZ - 1(Yes) or 0(No) , answer to "release copay" question
"RTN","BPSSCRCL",100,0)
 ;Output:
"RTN","BPSSCRCL",101,0)
 ; 0 - cancel process
"RTN","BPSSCRCL",102,0)
 ; ^ - emergency quit (cancel process)
"RTN","BPSSCRCL",103,0)
 ; 1 - ok, can proceed
"RTN","BPSSCRCL",104,0)
ASKQUEST(BPRELCOP,BPREAZ,BPCOMZ,BP90ANSZ,BPRCOPAZ) ;*/
"RTN","BPSSCRCL",105,0)
 S BPCOMZ=""
"RTN","BPSSCRCL",106,0)
 S BP90ANSZ=""
"RTN","BPSSCRCL",107,0)
 S BPRCOPAZ=0
"RTN","BPSSCRCL",108,0)
 ;ask the user to choose the close reason from #356.8
"RTN","BPSSCRCL",109,0)
 ;using set of close reasons in IB file 356.8
"RTN","BPSSCRCL",110,0)
 S BPREAZ=$$REASON()
"RTN","BPSSCRCL",111,0)
 I BPREAZ="^" Q "^"
"RTN","BPSSCRCL",112,0)
 I ($P(BPREAZ,U,4)=1) D  ;if has ECME PAPER FLAG
"RTN","BPSSCRCL",113,0)
 . ;ask if the claim is still billable thru paper?
"RTN","BPSSCRCL",114,0)
 . S BP90ANSZ=$$PROMPT^BPSSCRCV("S^N:NON-BILLABLE;D:DROP TO PAPER","Treat as (N)on-Billable Episode or (D)rop Bill to Paper?","")
"RTN","BPSSCRCL",115,0)
 I BP90ANSZ=-1 Q "^"
"RTN","BPSSCRCL",116,0)
 S BPCOMZ=$$COMMENT("Comment ",40)
"RTN","BPSSCRCL",117,0)
 I (BPCOMZ="^") Q "^"
"RTN","BPSSCRCL",118,0)
 I $L(BPCOMZ)>0,BPCOMZ?1" "." " S BPCOMZ=""
"RTN","BPSSCRCL",119,0)
 ;check copay
"RTN","BPSSCRCL",120,0)
 ;ask "release copay?" in all NON-BILLABLE cases, i.e. except user answered "DROP TO PAPER"
"RTN","BPSSCRCL",121,0)
 ;(even in cases when he was not asked about it)
"RTN","BPSSCRCL",122,0)
 I BP90ANSZ'="D",BPRELCOP D
"RTN","BPSSCRCL",123,0)
 . ; Ask user if s/he wants to release a copay
"RTN","BPSSCRCL",124,0)
 . S BPRCOPAZ=$$YESNO^BPSSCRRS("Release Patient CoPay(Y/N)")
"RTN","BPSSCRCL",125,0)
 I BPRCOPAZ=-1 Q "^"
"RTN","BPSSCRCL",126,0)
 ;
"RTN","BPSSCRCL",127,0)
 S BPQ=$$YESNO^BPSSCRRS("Are you sure?(Y/N)")
"RTN","BPSSCRCL",128,0)
 I BPQ=-1 Q "^" ;quit by "^"
"RTN","BPSSCRCL",129,0)
 I BPQ'=1 Q 0 ;doesn't want to proceed
"RTN","BPSSCRCL",130,0)
 Q 1 ; answers can be used
"RTN","BPSSCRCL",131,0)
 ;
"RTN","BPSSCRCL",132,0)
 ;/**
"RTN","BPSSCRCL",133,0)
 ;ask for the close reason
"RTN","BPSSCRCL",134,0)
 ;return:
"RTN","BPSSCRCL",135,0)
 ;   ptr to #356.8 ^ CLOSE REASON NAME ^ ECME FLAG ^ ECME PAPER FLAG
"RTN","BPSSCRCL",136,0)
REASON() ;
"RTN","BPSSCRCL",137,0)
 N DIC,BPREASNM,BP3568,Y
"RTN","BPSSCRCL",138,0)
 ; - Asks for REASON for Closing
"RTN","BPSSCRCL",139,0)
 S DIC="^IBE(356.8,",DIC(0)="AEQMZ"
"RTN","BPSSCRCL",140,0)
 S DIC("S")="I $P(^(0),U,2)=1"
"RTN","BPSSCRCL",141,0)
 D ^DIC
"RTN","BPSSCRCL",142,0)
 I Y=-1 Q "^"
"RTN","BPSSCRCL",143,0)
 Q +Y_U_Y(0)
"RTN","BPSSCRCL",144,0)
 ;/**
"RTN","BPSSCRCL",145,0)
 ;enter the comment
"RTN","BPSSCRCL",146,0)
 ;BPSTR  -prompt string
"RTN","BPSSCRCL",147,0)
 ;BPMLEN -maxlen
"RTN","BPSSCRCL",148,0)
COMMENT(BPSTR,BPMLEN) ;*/
"RTN","BPSSCRCL",149,0)
 N DIR,DTOUT,DUOUT,BPQ
"RTN","BPSSCRCL",150,0)
 I '$D(BPSTR) S BPSTR="Comment "
"RTN","BPSSCRCL",151,0)
 I '$D(BPMLEN) S BPMLEN=40
"RTN","BPSSCRCL",152,0)
 S DIR(0)="FO^0:250"
"RTN","BPSSCRCL",153,0)
 S DIR("A")=BPSTR
"RTN","BPSSCRCL",154,0)
 S DIR("?",1)="This response must have at least 0 characters and no more"
"RTN","BPSSCRCL",155,0)
 S DIR("?")="than "_BPMLEN_" characters and must not contain embedded uparrow"
"RTN","BPSSCRCL",156,0)
 S BPQ=0
"RTN","BPSSCRCL",157,0)
 F  D  Q:+BPQ'=0
"RTN","BPSSCRCL",158,0)
 . D ^DIR
"RTN","BPSSCRCL",159,0)
 . I $D(DUOUT)!($D(DTOUT)) S BPQ=-1 Q
"RTN","BPSSCRCL",160,0)
 . I $L(Y)'>BPMLEN S BPQ=1 Q
"RTN","BPSSCRCL",161,0)
 . W !!,"This response must have at least 0 characters and no more"
"RTN","BPSSCRCL",162,0)
 . W !,"than "_BPMLEN_" characters and must not contain embedded uparrow.",!
"RTN","BPSSCRCL",163,0)
 . S DIR("B")=$E(Y,1,BPMLEN)
"RTN","BPSSCRCL",164,0)
 Q:BPQ<0 "^"
"RTN","BPSSCRCL",165,0)
 Q Y
"RTN","BPSSCRCL",166,0)
 ;/** 
"RTN","BPSSCRCL",167,0)
 ;close the claim
"RTN","BPSSCRCL",168,0)
 ;the approach and code partially borrowed from IHS code CLOSE^BPSOS6N
"RTN","BPSSCRCL",169,0)
 ;BPSTRA - ptr to #9002313.59
"RTN","BPSSCRCL",170,0)
 ;REASON - text name of the close reason 
"RTN","BPSSCRCL",171,0)
 ;BPSCLCM - comment 
"RTN","BPSSCRCL",172,0)
 ;BPDROP:
"RTN","BPSSCRCL",173,0)
 ;  "D" - DROP BILL TO PAPER
"RTN","BPSSCRCL",174,0)
 ;  "N" - NON-BILLABLE
"RTN","BPSSCRCL",175,0)
 ;BPRELCOP - 1 (Yes) or 0 (No) release copay or not?
"RTN","BPSSCRCL",176,0)
CLOSEIT(BPSTRA,REASON,BPSCLCM,BPDROP,BPRELCOP) ;
"RTN","BPSSCRCL",177,0)
 N BPSCLA,ERROR,DA,DR,BPLCK,DIE
"RTN","BPSSCRCL",178,0)
 S BPSCLA=$$GET1^DIQ(9002313.59,BPSTRA,3,"I")
"RTN","BPSSCRCL",179,0)
 W !,"Closing Claim ",$$GET1^DIQ(9002313.02,BPSCLA,.01),"..."
"RTN","BPSSCRCL",180,0)
 S BPLCK=0
"RTN","BPSSCRCL",181,0)
 L +^BPSC(BPSCLA):0
"RTN","BPSSCRCL",182,0)
 I $T S BPLCK=1
"RTN","BPSSCRCL",183,0)
 E  W !,"       *** CLAIM ",$$GET1^DIQ(9002313.02,BPSCLA,.01)," IN USE ***" Q 0
"RTN","BPSSCRCL",184,0)
 D CLOSE^BPSBUTL(BPSCLA,BPSTRA,REASON,$S($G(BPDROP)="D":1,1:0),BPRELCOP,BPSCLCM,.ERROR)
"RTN","BPSSCRCL",185,0)
 I $D(ERROR) W "NOT OK" D DSPERR(ERROR) D  Q 0
"RTN","BPSSCRCL",186,0)
 . I BPLCK=1 L -^BPSC(BPSCLA)
"RTN","BPSSCRCL",187,0)
 S DIE="^BPSC(",DA=BPSCLA,DR="901///1;902///"_$$NOW^XLFDT()_";903///"_$G(DUZ)_";904///"_REASON_";905////"_BPDROP D ^DIE
"RTN","BPSSCRCL",188,0)
 I BPLCK=1 L -^BPSC(BPSCLA)
"RTN","BPSSCRCL",189,0)
 H 1 W "OK"
"RTN","BPSSCRCL",190,0)
 Q 1
"RTN","BPSSCRCL",191,0)
 ;
"RTN","BPSSCRCL",192,0)
DSPERR(MSG) ; Display the ERROR message
"RTN","BPSSCRCL",193,0)
 W !,"Error: *** ",MSG," ***"
"RTN","BPSSCRCL",194,0)
 Q
"RTN","BPSSCRCL",195,0)
 ;
"RTN","BPSSCRCL",196,0)
 ;/**
"RTN","BPSSCRCL",197,0)
 ;ECME has tried to submit the claim to insurance with the name BPINSNAM
"RTN","BPSSCRCL",198,0)
 ;but the claim was rejected and now we need to determine if the patient
"RTN","BPSSCRCL",199,0)
 ;has any other insurance with pharmacy coverage that can be billed for the RX
"RTN","BPSSCRCL",200,0)
 ;Input:
"RTN","BPSSCRCL",201,0)
 ; BP59 - pointer to file #9002313.59
"RTN","BPSSCRCL",202,0)
 ; BPINSNAM - insurance that have already been used by ECME
"RTN","BPSSCRCL",203,0)
 ;Output:
"RTN","BPSSCRCL",204,0)
 ; 0 - not found
"RTN","BPSSCRCL",205,0)
 ; 1 ^ Insurance Name ^ Group Number ^ Date  of service
"RTN","BPSSCRCL",206,0)
NEXTINS(BP59,BPINSNAM) ;get insurance info by the pointer of #9002313.59
"RTN","BPSSCRCL",207,0)
 N BPDOS,BPDFN,BPZZ,BP36,BPX,BPHONE,BPY,BPINSNM
"RTN","BPSSCRCL",208,0)
 N BPPHARM,BPCOORD,BPINS,BPFOUND
"RTN","BPSSCRCL",209,0)
 S BPY=0
"RTN","BPSSCRCL",210,0)
 S BPHONE=$P($G(^BPST(BP59,10,+$G(^BPST(BP59,9)),3)),U,2)
"RTN","BPSSCRCL",211,0)
 S BPDOS=+$P($G(^BPST(BP59,12)),U,2)\1
"RTN","BPSSCRCL",212,0)
 I BPDOS=0 S BPDOS=+$P($G(^BPST(BP59,0)),U,8)\1
"RTN","BPSSCRCL",213,0)
 S BPDFN=+$P($G(^BPST(BP59,0)),U,6)
"RTN","BPSSCRCL",214,0)
 ; call INSUR^IBBAPI to get information about:
"RTN","BPSSCRCL",215,0)
 ;1 = Insurance Company Name
"RTN","BPSSCRCL",216,0)
 ;7 = Coordination of Benefits (primary, secondary, tertiary)
"RTN","BPSSCRCL",217,0)
 ;15 = Pharmacy Coverage?
"RTN","BPSSCRCL",218,0)
 ;18 = Group Number
"RTN","BPSSCRCL",219,0)
 S BPX=$$INSUR^IBBAPI(BPDFN,BPDOS,,.BPZZ,"1,7,15,18")
"RTN","BPSSCRCL",220,0)
 S BP1="" F  S BP1=$O(BPZZ("IBBAPI","INSUR",BP1)) Q:+BP1=0  D
"RTN","BPSSCRCL",221,0)
 . ;get pharmacy coverage
"RTN","BPSSCRCL",222,0)
 . S BPPHARM=+$G(BPZZ("IBBAPI","INSUR",BP1,15))
"RTN","BPSSCRCL",223,0)
 I BPX<1 Q 0
"RTN","BPSSCRCL",224,0)
 D PROCINS(.BPZZ)
"RTN","BPSSCRCL",225,0)
 ;check pharmacy coverage
"RTN","BPSSCRCL",226,0)
 S BPFOUND=0 ;if found will be set to insurance node in the INSUR^IBBAPI array
"RTN","BPSSCRCL",227,0)
 S BPPHARM=1 ;look only at those with pharmacy coverage
"RTN","BPSSCRCL",228,0)
 S BPCOORD=0
"RTN","BPSSCRCL",229,0)
 F  S BPCOORD=+$O(BPZZ("RES",BPPHARM,BPCOORD)) Q:BPCOORD=0!(BPFOUND'=0)  D
"RTN","BPSSCRCL",230,0)
 . S BPINS=+$O(BPZZ("RES",BPPHARM,BPCOORD,0))
"RTN","BPSSCRCL",231,0)
 . I BPINS>0 I $P($G(BPZZ("IBBAPI","INSUR",BPINS,1)),U,2)'=BPINSNAM S BPFOUND=BPINS
"RTN","BPSSCRCL",232,0)
 I BPFOUND=0 Q 0
"RTN","BPSSCRCL",233,0)
 Q 1_U_$P($G(BPZZ("IBBAPI","INSUR",BPFOUND,1)),U,2)_U_$P($G(BPZZ("IBBAPI","INSUR",BPFOUND,18)),U)_U_BPDOS
"RTN","BPSSCRCL",234,0)
 ;
"RTN","BPSSCRCL",235,0)
 ;process insurances
"RTN","BPSSCRCL",236,0)
 ;input: local array returned by INSUR^IBBAPI
"RTN","BPSSCRCL",237,0)
 ;output: BPZZ("RES",pharmacy coverage,coordination,insurance element # in BPZZ array)
"RTN","BPSSCRCL",238,0)
PROCINS(BPZZ) ;
"RTN","BPSSCRCL",239,0)
 N BP1,BP2,BP0,BPPHONE,BPPHARM,BPCOORD
"RTN","BPSSCRCL",240,0)
 S BP1="" F  S BP1=$O(BPZZ("IBBAPI","INSUR",BP1)) Q:+BP1=0  D
"RTN","BPSSCRCL",241,0)
 . ;get pharmacy coverage
"RTN","BPSSCRCL",242,0)
 . S BPPHARM=+$G(BPZZ("IBBAPI","INSUR",BP1,15))
"RTN","BPSSCRCL",243,0)
 . ;get coordination of benefits
"RTN","BPSSCRCL",244,0)
 . S BPCOORD=+$G(BPZZ("IBBAPI","INSUR",BP1,7))
"RTN","BPSSCRCL",245,0)
 . ;create ^TMP to sort results by pharmacy coverage and coordination of benefits
"RTN","BPSSCRCL",246,0)
 . S BPZZ("RES",BPPHARM,BPCOORD,BP1)=""
"RTN","BPSSCRCL",247,0)
 Q
"RTN","BPSSCRCL",248,0)
 ;
"RTN","BPSSCRCL",249,0)
 ;------------
"RTN","BPSSCRCL",250,0)
MKNEWARR(BPARR,BPNEWARR,BPINSARR) ;
"RTN","BPSSCRCL",251,0)
 N BP59,BPREJ,BPREJCNT,BPRELCNT,BPREL,BPINS
"RTN","BPSSCRCL",252,0)
 S BPREJCNT=0,BPRELCNT=0
"RTN","BPSSCRCL",253,0)
 S BPINS=0
"RTN","BPSSCRCL",254,0)
 S BP59="" F  S BP59=$O(BPARR(BP59)) Q:BP59=""  D
"RTN","BPSSCRCL",255,0)
 . S BPREJ=0
"RTN","BPSSCRCL",256,0)
 . S BPDFN=+$P($G(^BPST(BP59,0)),U,6)
"RTN","BPSSCRCL",257,0)
 . S BPREJ=$S($P($$CLAIMST^BPSSCRU3(BP59),U)="E REJECTED":1,1:0)
"RTN","BPSSCRCL",258,0)
 . S:BPREJ BPREJCNT=BPREJCNT+1
"RTN","BPSSCRCL",259,0)
 . S BPREL=$S($P($G(^PSRX(+$P($$RXREF^BPSSCRU2(BP59),U),"IB")),U,2):1,1:0)
"RTN","BPSSCRCL",260,0)
 . S:BPREL BPRELCNT=BPRELCNT+1
"RTN","BPSSCRCL",261,0)
 . S BPNEWARR(BPDFN,BP59)=BPARR(BP59)_U_BPREJ_U_BPREL
"RTN","BPSSCRCL",262,0)
 . S BPINS=$P($$GETINSUR^BPSSCRU2(BP59),U,2)
"RTN","BPSSCRCL",263,0)
 . I BPREJ=1,$L(BPINS)>0 S BPINSARR(BPDFN,BPINS,BP59)=BPARR(BP59)
"RTN","BPSSCRCL",264,0)
 Q BPREJCNT_U_BPRELCNT
"RTN","BPSSCRCL",265,0)
 ;
"RTN","BPSSCRRS")
0^6^B20547842
"RTN","BPSSCRRS",1,0)
BPSSCRRS ;BHAM ISC/SS - ECME SCREEN RESUBMIT ;05-APR-05
"RTN","BPSSCRRS",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSSCRRS",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","BPSSCRRS",4,0)
 Q
"RTN","BPSSCRRS",5,0)
 ;IA 4702
"RTN","BPSSCRRS",6,0)
 ;
"RTN","BPSSCRRS",7,0)
RES ;
"RTN","BPSSCRRS",8,0)
 N BPRET,BPSARR59
"RTN","BPSSCRRS",9,0)
 I '$D(@(VALMAR)) Q
"RTN","BPSSCRRS",10,0)
 D FULL^VALM1
"RTN","BPSSCRRS",11,0)
 W !,"Enter the line numbers for the claim(s) to be resubmitted."
"RTN","BPSSCRRS",12,0)
 S BPRET=$$ASKLINES^BPSSCRU4("Select item(s)","C",.BPSARR59,VALMAR)
"RTN","BPSSCRRS",13,0)
 I BPRET="^" S VALMBCK="R" Q
"RTN","BPSSCRRS",14,0)
 ;go thru all selected claims and try to resubmit them separately
"RTN","BPSSCRRS",15,0)
 ;update the content of the screen and display it
"RTN","BPSSCRRS",16,0)
 ;only if at least one claim was submitted successfully
"RTN","BPSSCRRS",17,0)
 I $$RESUBMIT(.BPSARR59) D REDRAW^BPSSCRUD("Updating screen for resubmitted claims...")
"RTN","BPSSCRRS",18,0)
 E  S VALMBCK="R"
"RTN","BPSSCRRS",19,0)
 Q
"RTN","BPSSCRRS",20,0)
 ;
"RTN","BPSSCRRS",21,0)
 ;/**
"RTN","BPSSCRRS",22,0)
 ;go thru all selected claims and try to resubmit them separately
"RTN","BPSSCRRS",23,0)
 ;input:
"RTN","BPSSCRRS",24,0)
 ; RXI - array with ptrs to BPS TRANSACTION file (see ASKLINES^BPSSCRU4)
"RTN","BPSSCRRS",25,0)
 ;returns 
"RTN","BPSSCRRS",26,0)
 ; 0 - if no claims were resubmitted 
"RTN","BPSSCRRS",27,0)
 ; 1 - if at least one claim was resubmitted 
"RTN","BPSSCRRS",28,0)
RESUBMIT(RXI) ;*/
"RTN","BPSSCRRS",29,0)
 N BPRVRSED ;was successfully reversed
"RTN","BPSSCRRS",30,0)
 N BPRVNEED ;needs reversal
"RTN","BPSSCRRS",31,0)
 N BPRVWAIT ;cycles of waiting 
"RTN","BPSSCRRS",32,0)
 N BPRVRSNT ;reversal has been sent
"RTN","BPSSCRRS",33,0)
 N WHERE,DOSDATE,BILLNUM,RXIEN,RXR,BPDFN
"RTN","BPSSCRRS",34,0)
 N BP59
"RTN","BPSSCRRS",35,0)
 N UPDATFLG,BPCLTOT
"RTN","BPSSCRRS",36,0)
 N BPQ
"RTN","BPSSCRRS",37,0)
 N BPSTATUS
"RTN","BPSSCRRS",38,0)
 N REVCOUNT S REVCOUNT=0
"RTN","BPSSCRRS",39,0)
 N BPIFANY S BPIFANY=0
"RTN","BPSSCRRS",40,0)
 S BPCLTOT=0
"RTN","BPSSCRRS",41,0)
 S UPDATFLG=0
"RTN","BPSSCRRS",42,0)
 S BP59="",BPQ=""
"RTN","BPSSCRRS",43,0)
 F  S BP59=$O(RXI(BP59)) Q:BP59=""  D  Q:BPQ="^"
"RTN","BPSSCRRS",44,0)
 . I BPIFANY=0 W @IOF
"RTN","BPSSCRRS",45,0)
 . S BPIFANY=1,BPQ=""
"RTN","BPSSCRRS",46,0)
 . S BPDFN=+$P($G(^BPST(BP59,0)),U,6)
"RTN","BPSSCRRS",47,0)
 . W !,"You've chosen to RESUBMIT the following prescription for "_$E($$PATNAME^BPSSCRU2(BPDFN),1,13)
"RTN","BPSSCRRS",48,0)
 . W !,@VALMAR@(+$G(RXI(BP59)),0)
"RTN","BPSSCRRS",49,0)
 . S (BPRVNEED,BPRVRSED,BPRVWAIT,BPRVRSNT)=0
"RTN","BPSSCRRS",50,0)
 . S BPQ=$$YESNO("Are you sure?(Y/N)")
"RTN","BPSSCRRS",51,0)
 . I BPQ=-1 S BPQ="^" Q
"RTN","BPSSCRRS",52,0)
 . I BPQ'=1 Q
"RTN","BPSSCRRS",53,0)
 . S RXIEN=$P(BP59,".")
"RTN","BPSSCRRS",54,0)
 . S RXR=+$E($P(BP59,".",2),1,4)
"RTN","BPSSCRRS",55,0)
 . I BPRVNEED=1&(BPRVRSED'=1) Q  ;cannot be resubmitted
"RTN","BPSSCRRS",56,0)
 . I $D(^PSRX($P(BP59,".",1),"D")) W !!,">> Cannot Reverse or Resubmit ",!,@VALMAR@(+$G(RXI(BP59)),0),!," because it has been deleted in Pharmacy.",! Q
"RTN","BPSSCRRS",57,0)
 . S BPSTATUS=$P($$CLAIMST^BPSSCRU3(BP59),U)
"RTN","BPSSCRRS",58,0)
 . I BPSTATUS["E REVERSAL REJECTED" W !!,">> Cannot Resubmit ",!,@VALMAR@(+$G(RXI(BP59)),0),!," because the REVERSAL was rejected.",! Q
"RTN","BPSSCRRS",59,0)
 . I BPSTATUS["IN PROGRESS" W !!,">> Cannot Resubmit ",!,@VALMAR@(+$G(RXI(BP59)),0),!," because there is no response from the payer yet.",! Q
"RTN","BPSSCRRS",60,0)
 . I BPSTATUS["E REVERSAL STRANDED" W !!,">> Cannot Resubmit ",!,@VALMAR@(+$G(RXI(BP59)),0),!," because there is no response for reversal yet.",! Q
"RTN","BPSSCRRS",61,0)
 . S DOSDATE=$$DOSDATE(RXIEN,RXR)
"RTN","BPSSCRRS",62,0)
 . S BILLNUM=$$EN^BPSNCPDP(RXIEN,RXR,DOSDATE,"ERES","","ECME RESUBMIT")
"RTN","BPSSCRRS",63,0)
 . ;print return value message
"RTN","BPSSCRRS",64,0)
 . W !!
"RTN","BPSSCRRS",65,0)
 . W:+BILLNUM>0 "Not Processed:",!,"  "
"RTN","BPSSCRRS",66,0)
 . W $P(BILLNUM,U,2)
"RTN","BPSSCRRS",67,0)
 . ;0 Prescription/Fill successfully submitted to ECME for claims processing
"RTN","BPSSCRRS",68,0)
 . ;1 ECME did not submit prescription/fill
"RTN","BPSSCRRS",69,0)
 . ;2 IB says prescription/fill is not ECME billable or the data returned from IB is not valid
"RTN","BPSSCRRS",70,0)
 . ;3 ECME closed the claim but did not submit it to the payer
"RTN","BPSSCRRS",71,0)
 . ;4 Unable to queue the ECME claim
"RTN","BPSSCRRS",72,0)
 . ;5 Invalid input
"RTN","BPSSCRRS",73,0)
 . I +BILLNUM=0 D 
"RTN","BPSSCRRS",74,0)
 . . D ECMEACT^PSOBPSU1(+RXIEN,+RXR,"Claim resubmitted to 3rd party payer: ECME USER's SCREEN")
"RTN","BPSSCRRS",75,0)
 . . S UPDATFLG=1,BPCLTOT=BPCLTOT+1
"RTN","BPSSCRRS",76,0)
 W:BPIFANY=0 !,"No eligible items selected."
"RTN","BPSSCRRS",77,0)
 W !,BPCLTOT," claim",$S(BPCLTOT'=1:"s have",1:" has")," been resubmitted.",!
"RTN","BPSSCRRS",78,0)
 D PAUSE^VALM1
"RTN","BPSSCRRS",79,0)
 Q UPDATFLG
"RTN","BPSSCRRS",80,0)
 ;
"RTN","BPSSCRRS",81,0)
 ; Ask
"RTN","BPSSCRRS",82,0)
 ; Input:
"RTN","BPSSCRRS",83,0)
 ;  BPQSTR - question
"RTN","BPSSCRRS",84,0)
 ;  BPDFL - default answer
"RTN","BPSSCRRS",85,0)
 ; Output: 
"RTN","BPSSCRRS",86,0)
 ; 1 YES
"RTN","BPSSCRRS",87,0)
 ; 0 NO
"RTN","BPSSCRRS",88,0)
 ; -1 if cancelled
"RTN","BPSSCRRS",89,0)
YESNO(BPQSTR,BPDFL) ; Default - YES
"RTN","BPSSCRRS",90,0)
 N DIR,Y,DUOUT
"RTN","BPSSCRRS",91,0)
 S DIR(0)="Y"
"RTN","BPSSCRRS",92,0)
 S DIR("A")=BPQSTR
"RTN","BPSSCRRS",93,0)
 S:$L($G(BPDFL)) DIR("B")=BPDFL
"RTN","BPSSCRRS",94,0)
 D ^DIR
"RTN","BPSSCRRS",95,0)
 Q $S($G(DUOUT)!$G(DUOUT)!(Y="^"):-1,1:Y)
"RTN","BPSSCRRS",96,0)
 ;
"RTN","BPSSCRRS",97,0)
 ;Date of service
"RTN","BPSSCRRS",98,0)
 ;RXIEN - IEN in file #52
"RTN","BPSSCRRS",99,0)
 ;RXR - refill number
"RTN","BPSSCRRS",100,0)
 ;returns:
"RTN","BPSSCRRS",101,0)
 ; date of service
"RTN","BPSSCRRS",102,0)
DOSDATE(RXIEN,RXR) ;
"RTN","BPSSCRRS",103,0)
 N BPDOS,BPDT
"RTN","BPSSCRRS",104,0)
 ;try release date
"RTN","BPSSCRRS",105,0)
 S BPDOS=$$RXRLDT^PSOBPSUT(RXIEN,RXR)\1
"RTN","BPSSCRRS",106,0)
 Q:+BPDOS>0 BPDOS
"RTN","BPSSCRRS",107,0)
 ;try fill date
"RTN","BPSSCRRS",108,0)
 S BPDOS=$$RXFLDT^PSOBPSUT(RXIEN,RXR)\1
"RTN","BPSSCRRS",109,0)
 I '$G(DT) Q BPDOS
"RTN","BPSSCRRS",110,0)
 I BPDOS>0,BPDOS'>DT Q BPDOS
"RTN","BPSSCRRS",111,0)
 ;use current date (today)
"RTN","BPSSCRRS",112,0)
 Q DT\1
"RTN","BPSSCRRS",113,0)
 ;
"RTN","BPSSCRRS",114,0)
 ;To display the FILL date on the screen
"RTN","BPSSCRRS",115,0)
 ; use Date Of Service date , later on it might be changed
"RTN","BPSSCRRS",116,0)
 ;input:
"RTN","BPSSCRRS",117,0)
 ;RXIEN - IEN in file #52
"RTN","BPSSCRRS",118,0)
 ;RXR - refill number
"RTN","BPSSCRRS",119,0)
 ;returns:
"RTN","BPSSCRRS",120,0)
 ; date of service
"RTN","BPSSCRRS",121,0)
 ; or empty date if failure
"RTN","BPSSCRRS",122,0)
FILLDATE(RXIEN,RXR) ;
"RTN","BPSSCRRS",123,0)
 N DOSDT
"RTN","BPSSCRRS",124,0)
 S DOSDT=$$DOSDATE(RXIEN,RXR)
"RTN","BPSSCRRS",125,0)
 I $L(DOSDT)'=7 Q "  /  "
"RTN","BPSSCRRS",126,0)
 Q $E(DOSDT,4,5)_"/"_$E(DOSDT,6,7)
"RTN","BPSSCRRS",127,0)
 ;       
"RTN","BPSSCRU2")
0^21^B58140964
"RTN","BPSSCRU2",1,0)
BPSSCRU2 ;BHAM ISC/SS - ECME SCREEN UTILITIES ;05-APR-05
"RTN","BPSSCRU2",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSSCRU2",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","BPSSCRU2",4,0)
 ;USER SCREEN
"RTN","BPSSCRU2",5,0)
 Q
"RTN","BPSSCRU2",6,0)
 ;/**
"RTN","BPSSCRU2",7,0)
 ;Input:
"RTN","BPSSCRU2",8,0)
 ; BP59 - pointer to file #9002313.59
"RTN","BPSSCRU2",9,0)
 ;Output:
"RTN","BPSSCRU2",10,0)
 ;get filling "location" like "WINDOW/LOCALMAIL/CMOP"
"RTN","BPSSCRU2",11,0)
GETMWC(BP59) ;*/
"RTN","BPSSCRU2",12,0)
 N BP1 S BP1=$$RXREF(BP59)
"RTN","BPSSCRU2",13,0)
 Q:+BP1=0 ""
"RTN","BPSSCRU2",14,0)
 Q $$MWC($P(BP1,U),$P(BP1,U,2))
"RTN","BPSSCRU2",15,0)
 ;
"RTN","BPSSCRU2",16,0)
 ;converts numbers to letters to display on the screen
"RTN","BPSSCRU2",17,0)
 ;2-MAIL/3-WINDOW/4-CMOP
"RTN","BPSSCRU2",18,0)
MWCNAME(BPMWC) ;
"RTN","BPSSCRU2",19,0)
 Q $S(BPMWC=2:"M",BPMWC=3:"W",BPMWC=4:"C",1:"?")
"RTN","BPSSCRU2",20,0)
 ;/**
"RTN","BPSSCRU2",21,0)
 ;Input:
"RTN","BPSSCRU2",22,0)
 ; BP59 - pointer to file #9002313.59
"RTN","BPSSCRU2",23,0)
 ;Output:
"RTN","BPSSCRU2",24,0)
 ;get RX pointer in file #52 and refill number in its multiple (0 - original refill)
"RTN","BPSSCRU2",25,0)
RXREF(BP59) ;
"RTN","BPSSCRU2",26,0)
 N BPRX,BPREF
"RTN","BPSSCRU2",27,0)
 S BPRX=+$P($G(^BPST(BP59,1)),U,11) ;ptr to RX node in #52
"RTN","BPSSCRU2",28,0)
 S BPREF=+$P($G(^BPST(BP59,1)),U) ;ptr to refill multiple in #52
"RTN","BPSSCRU2",29,0)
 Q BPRX_U_BPREF
"RTN","BPSSCRU2",30,0)
 ; determines if the refill was MAIL/WINDOW/CMOP
"RTN","BPSSCRU2",31,0)
MWC(BPRX,BPREF) ;MAIL/WINDOW/CMOP
"RTN","BPSSCRU2",32,0)
 ;input:
"RTN","BPSSCRU2",33,0)
 ; BPRX ptr to #52 (RX)
"RTN","BPSSCRU2",34,0)
 ; BPREF ptr to #52.1 (refills)
"RTN","BPSSCRU2",35,0)
 ;return value:
"RTN","BPSSCRU2",36,0)
 ; 2-MAIL/3-WINDOW/4-CMOP
"RTN","BPSSCRU2",37,0)
 N BPX,BPY,BPZ S BPY=2
"RTN","BPSSCRU2",38,0)
 ;if 1st fill check #52 (#11) MAIL/WINDOW
"RTN","BPSSCRU2",39,0)
 I BPREF=0 S BPX=$P($G(^PSRX(BPRX,0)),U,11)
"RTN","BPSSCRU2",40,0)
 ;if refill check refills multiple #52.1 (#2) MAIL/WINDOW
"RTN","BPSSCRU2",41,0)
 E  S BPX=$P($G(^PSRX(BPRX,1,BPREF,0)),U,2)
"RTN","BPSSCRU2",42,0)
 ; if WINDOW then 3(W)
"RTN","BPSSCRU2",43,0)
 I BPX="W" Q 3
"RTN","BPSSCRU2",44,0)
 ; else
"RTN","BPSSCRU2",45,0)
 ;  check STATUS of RX
"RTN","BPSSCRU2",46,0)
 ;  if STATUS="SUSPENSE" check 
"RTN","BPSSCRU2",47,0)
 I $G(^PSRX(BPRX,"STA"))=5 D  Q BPY
"RTN","BPSSCRU2",48,0)
 . ;   check #52.5
"RTN","BPSSCRU2",49,0)
 . S BPX=$O(^PS(52.5,"B",BPRX,0))
"RTN","BPSSCRU2",50,0)
 . ;   if CMOP INDICATOR = "P" then 2 (M)
"RTN","BPSSCRU2",51,0)
 . S BPZ=$P($G(^PS(52.5,BPX,0)),U,7)
"RTN","BPSSCRU2",52,0)
 . I (BPZ="")!(BPZ="P") S BPY=2 Q
"RTN","BPSSCRU2",53,0)
 . ;   else (i.e. Q!X!L) 4(C)
"RTN","BPSSCRU2",54,0)
 . S BPY=4
"RTN","BPSSCRU2",55,0)
 ;  else 
"RTN","BPSSCRU2",56,0)
 ;  check CMOP EVENTS for this 0 fill
"RTN","BPSSCRU2",57,0)
 S BPY=2
"RTN","BPSSCRU2",58,0)
 S BPX=0 F  S BPX=$O(^PSRX(BPRX,4,BPX)) Q:+BPX=0!(BPY=4)  D
"RTN","BPSSCRU2",59,0)
 . ;  if exists for BPREF then 4("C")
"RTN","BPSSCRU2",60,0)
 . I $P($G(^PSRX(BPRX,4,BPX,0)),U,3)=BPREF S BPY=4
"RTN","BPSSCRU2",61,0)
 ;  else 2("M")
"RTN","BPSSCRU2",62,0)
 Q BPY
"RTN","BPSSCRU2",63,0)
 ;
"RTN","BPSSCRU2",64,0)
 ;
"RTN","BPSSCRU2",65,0)
 ;/**
"RTN","BPSSCRU2",66,0)
 ;Input:
"RTN","BPSSCRU2",67,0)
 ; BP59 - pointer to file #9002313.59
"RTN","BPSSCRU2",68,0)
 ;Output:
"RTN","BPSSCRU2",69,0)
 ; insurance ien ^ name ^ phone
"RTN","BPSSCRU2",70,0)
GETINSUR(BP59) ;get insurance info by the pointer of #9002313.59
"RTN","BPSSCRU2",71,0)
 N BPHONE,BPINSNM,BPINSID,BP57,BPINSN,BPX
"RTN","BPSSCRU2",72,0)
 S BPX=$$NAMEPHON^BPSSCRU3(BP59)
"RTN","BPSSCRU2",73,0)
 S BPINSNM=$P(BPX,U,1)
"RTN","BPSSCRU2",74,0)
 S BPHONE=$P(BPX,U,2)
"RTN","BPSSCRU2",75,0)
 ;Get a temporary ID for the insurance from ^TMP list of insurances.
"RTN","BPSSCRU2",76,0)
 ;If doesn't exist yet then create a new record in ^TMP list of insurances 
"RTN","BPSSCRU2",77,0)
 ;   for this insurance and return the ID for the record.
"RTN","BPSSCRU2",78,0)
 ;A lifetime for ^TMP list of insurances is the time period the user is using 
"RTN","BPSSCRU2",79,0)
 ;   the User Screen menu option
"RTN","BPSSCRU2",80,0)
 S BPINSID=$$CHKINSUR^BPSSCR(BPINSNM,BPHONE)
"RTN","BPSSCRU2",81,0)
 I $L(BPHONE)=0 S BPHONE=" "
"RTN","BPSSCRU2",82,0)
 I $L(BPINSNM)=0 S BPINSNM="?NODATA?"
"RTN","BPSSCRU2",83,0)
 Q BPINSID_U_BPINSNM_U_BPHONE
"RTN","BPSSCRU2",84,0)
 ;
"RTN","BPSSCRU2",85,0)
 ;/**
"RTN","BPSSCRU2",86,0)
 ;Input:
"RTN","BPSSCRU2",87,0)
 ; BP59 - pointer to file #9002313.59
"RTN","BPSSCRU2",88,0)
 ;Output:
"RTN","BPSSCRU2",89,0)
 ;transaction date
"RTN","BPSSCRU2",90,0)
TRANDT(BP59) ;
"RTN","BPSSCRU2",91,0)
 Q $P($G(^BPST(BP59,0)),U,8)\1
"RTN","BPSSCRU2",92,0)
 ;
"RTN","BPSSCRU2",93,0)
 ;/**
"RTN","BPSSCRU2",94,0)
 ;Input:
"RTN","BPSSCRU2",95,0)
 ; BP59 - pointer to file #9002313.59
"RTN","BPSSCRU2",96,0)
 ;Output:
"RTN","BPSSCRU2",97,0)
 ;ECME pharmacy division (9002313.56)
"RTN","BPSSCRU2",98,0)
DIVIS(BP59) ;
"RTN","BPSSCRU2",99,0)
 Q $P($G(^BPST(BP59,1)),U,7)
"RTN","BPSSCRU2",100,0)
 ;
"RTN","BPSSCRU2",101,0)
 ;/**
"RTN","BPSSCRU2",102,0)
 ;Input:
"RTN","BPSSCRU2",103,0)
 ; BP59 - pointer to file #9002313.59
"RTN","BPSSCRU2",104,0)
 ;Output:
"RTN","BPSSCRU2",105,0)
 ;patient's DFN (file #2)
"RTN","BPSSCRU2",106,0)
GETPATID(BP59) ;
"RTN","BPSSCRU2",107,0)
 Q $P($G(^BPST(BP59,0)),U,6)
"RTN","BPSSCRU2",108,0)
 ;
"RTN","BPSSCRU2",109,0)
 ;/**
"RTN","BPSSCRU2",110,0)
 ;determines if the RX is active 
"RTN","BPSSCRU2",111,0)
 ;Input:
"RTN","BPSSCRU2",112,0)
 ; BP59 - pointer to file #9002313.59
"RTN","BPSSCRU2",113,0)
 ;Output:
"RTN","BPSSCRU2",114,0)
 ;Active (returns 1) means : ACTIVE/NON-VERIFIED/REFILL/HOLD/DRUG INTERACTIONS/SUSPENDED
"RTN","BPSSCRU2",115,0)
 ;inactive (returns 0) means: Discontinued/deleted/expired
"RTN","BPSSCRU2",116,0)
 ;error (returns -1)
"RTN","BPSSCRU2",117,0)
ACTIVERX(BP59) ;
"RTN","BPSSCRU2",118,0)
 Q $$RXACTIVE($$RXSTATUS(+$$RXREF(BP59),0))
"RTN","BPSSCRU2",119,0)
 ;return RX status as ACT/DIS/etc
"RTN","BPSSCRU2",120,0)
RXST(BP59) ;
"RTN","BPSSCRU2",121,0)
 N BPRXREF
"RTN","BPSSCRU2",122,0)
 S BPRXREF=$$RXREF^BPSSCRU2(BP59)
"RTN","BPSSCRU2",123,0)
 ;display status ONLY if the refill is the most recent 
"RTN","BPSSCRU2",124,0)
 ;otherwise display blanks (three spaces for sorting purposes)
"RTN","BPSSCRU2",125,0)
 I +$P(BPRXREF,U,2)'=(+$$LSTRFL^PSOBPSU1(+$P(BPRXREF,U,1))) Q "***"
"RTN","BPSSCRU2",126,0)
 Q $$RXSTANAM($$RXSTATUS(+$P(BPRXREF,U,1),0))
"RTN","BPSSCRU2",127,0)
 ;/**
"RTN","BPSSCRU2",128,0)
 ;RX status
"RTN","BPSSCRU2",129,0)
 ;Input 
"RTN","BPSSCRU2",130,0)
 ; RXNUM:
"RTN","BPSSCRU2",131,0)
 ;  ien of file #52 (if MODE=0) 
"RTN","BPSSCRU2",132,0)
 ;  or RX number (if MODE=1)
"RTN","BPSSCRU2",133,0)
 ; MODE:
"RTN","BPSSCRU2",134,0)
 ;  0-ien of file #52
"RTN","BPSSCRU2",135,0)
 ;  1-RX number  
"RTN","BPSSCRU2",136,0)
 ;----------
"RTN","BPSSCRU2",137,0)
 ;Output:
"RTN","BPSSCRU2",138,0)
 ; 0    if not found
"RTN","BPSSCRU2",139,0)
 ; status set#
"RTN","BPSSCRU2",140,0)
RXSTATUS(RXNUM,MODE) ;*/
"RTN","BPSSCRU2",141,0)
 I $G(MODE) S RXNUM=$O(^PSRX("B",RXNUM,0)) I +RXNUM=0 Q -1
"RTN","BPSSCRU2",142,0)
 I '$D(^PSRX(RXNUM,"STA")) Q -1
"RTN","BPSSCRU2",143,0)
 Q $G(^PSRX(RXNUM,"STA"))
"RTN","BPSSCRU2",144,0)
 ;/**
"RTN","BPSSCRU2",145,0)
 ;if RX "valid" 
"RTN","BPSSCRU2",146,0)
RXACTIVE(BPRXSTAT) ;*/
"RTN","BPSSCRU2",147,0)
 ; 0    not valid
"RTN","BPSSCRU2",148,0)
 ; 1    valid (i.e. ACTIVE/NON-VERIFIED/REFILL/HOLD/DRUG INTERACTIONS/SUSPENDED) 
"RTN","BPSSCRU2",149,0)
 ; -1   doesn't exist
"RTN","BPSSCRU2",150,0)
 Q:BPRXSTAT<6 1  ;active
"RTN","BPSSCRU2",151,0)
 ;/**
"RTN","BPSSCRU2",152,0)
 ;RX status text
"RTN","BPSSCRU2",153,0)
RXSTANAM(BPRXSTAT) ;*/
"RTN","BPSSCRU2",154,0)
 Q:BPRXSTAT=0 "ACT"  ; ACTIVE; 
"RTN","BPSSCRU2",155,0)
 Q:BPRXSTAT=1 "NVER"  ; NON-VERIFIED; 
"RTN","BPSSCRU2",156,0)
 Q:BPRXSTAT=3 "HLD"  ; HOLD; 
"RTN","BPSSCRU2",157,0)
 Q:BPRXSTAT=5 "SUS"  ; SUSPENDED; 
"RTN","BPSSCRU2",158,0)
 Q:BPRXSTAT=11 "EXP"  ; EXPIRED; 
"RTN","BPSSCRU2",159,0)
 Q:BPRXSTAT=12 "DIS"  ; DISCONTINUED; 
"RTN","BPSSCRU2",160,0)
 Q:BPRXSTAT=13 "DEL"  ; DELETED; 
"RTN","BPSSCRU2",161,0)
 Q:BPRXSTAT=14 "DIS"  ; DISCONTINUED BY PROVIDER; 
"RTN","BPSSCRU2",162,0)
 Q:BPRXSTAT=15 "DIS"  ; DISCONTINUED (EDIT); 
"RTN","BPSSCRU2",163,0)
 Q:BPRXSTAT=16 "HLD"  ; PROVIDER HOLD; 
"RTN","BPSSCRU2",164,0)
 Q:BPRXSTAT=-1 "???"
"RTN","BPSSCRU2",165,0)
 Q ""
"RTN","BPSSCRU2",166,0)
 ;/**
"RTN","BPSSCRU2",167,0)
 ;Input:
"RTN","BPSSCRU2",168,0)
 ; BP59 - pointer to file #9002313.59
"RTN","BPSSCRU2",169,0)
 ;Output:
"RTN","BPSSCRU2",170,0)
 ;returns:
"RTN","BPSSCRU2",171,0)
 ;>0  Released
"RTN","BPSSCRU2",172,0)
 ;0   non released
"RTN","BPSSCRU2",173,0)
 ;-1  error
"RTN","BPSSCRU2",174,0)
ISRXREL(BP59) ;
"RTN","BPSSCRU2",175,0)
 N BP1
"RTN","BPSSCRU2",176,0)
 S BP1=$$REFILINF(BP59)
"RTN","BPSSCRU2",177,0)
 Q:BP1<0 -1
"RTN","BPSSCRU2",178,0)
 Q $P(BP1,U,2) ; i.e. it is non-released if there is no any release date
"RTN","BPSSCRU2",179,0)
 ;
"RTN","BPSSCRU2",180,0)
 ;release status
"RTN","BPSSCRU2",181,0)
RL(BP59) ;
"RTN","BPSSCRU2",182,0)
 Q $S($$ISRXREL(BP59)>0:"RL",1:"NR")
"RTN","BPSSCRU2",183,0)
 ;/**
"RTN","BPSSCRU2",184,0)
 ;get refill (including original refill) info by BP59
"RTN","BPSSCRU2",185,0)
 ;Input:
"RTN","BPSSCRU2",186,0)
 ; BP59 - pointer to file #9002313.59
"RTN","BPSSCRU2",187,0)
 ;Output:
"RTN","BPSSCRU2",188,0)
 ;returns:
"RTN","BPSSCRU2",189,0)
 ;on error : "-1"  
"RTN","BPSSCRU2",190,0)
 ;on success : refill# ^ release date ^label print date ^ fill date ^ issue date
"RTN","BPSSCRU2",191,0)
REFILINF(BP59) ;*/
"RTN","BPSSCRU2",192,0)
 N BP1 S BP1=$$RXREF(BP59)
"RTN","BPSSCRU2",193,0)
 N BPRX S BPRX=$P(BP1,U,1) ;ptr to #52
"RTN","BPSSCRU2",194,0)
 N BPREF S BPREF=$P(BP1,U,2) ;ptr in its refill multiple
"RTN","BPSSCRU2",195,0)
 I BPREF,$$IFREFILL(BPRX,BPREF)=0 Q -1  ;if bad data
"RTN","BPSSCRU2",196,0)
 ;original refill
"RTN","BPSSCRU2",197,0)
 I BPREF=0 Q "0"_U_$$RXRELDT(BPRX)_U_$$RXLBLDT(BPRX,1)_U_$$RXFILDT(BPRX)_U_$$RXISSDT(BPRX)
"RTN","BPSSCRU2",198,0)
 ;refill's release date
"RTN","BPSSCRU2",199,0)
 I BPREF>0 Q BPREF_U_$$REFRELDT(BPRX,BPREF)_U_$$REFLBLDT(BPRX,1)_U_$$REFFILDT(BPRX,BPREF)_U_$$REFISSDT(BPRX,BPREF)
"RTN","BPSSCRU2",200,0)
 Q -1
"RTN","BPSSCRU2",201,0)
 ;
"RTN","BPSSCRU2",202,0)
 ;-Prescriptions-----------------------
"RTN","BPSSCRU2",203,0)
 ;RX issue date
"RTN","BPSSCRU2",204,0)
RXISSDT(BPRX) ;
"RTN","BPSSCRU2",205,0)
 Q +$P($G(^PSRX(BPRX,0)),U,13)
"RTN","BPSSCRU2",206,0)
 ;
"RTN","BPSSCRU2",207,0)
 ;RX's release date
"RTN","BPSSCRU2",208,0)
RXRELDT(BPRX) ;
"RTN","BPSSCRU2",209,0)
 Q +$P($G(^PSRX(BPRX,2)),U,13)
"RTN","BPSSCRU2",210,0)
 ;
"RTN","BPSSCRU2",211,0)
 ;RX's fill date
"RTN","BPSSCRU2",212,0)
RXFILDT(BPRX) ;
"RTN","BPSSCRU2",213,0)
 Q +$P($G(^PSRX(BPRX,2)),U,2)
"RTN","BPSSCRU2",214,0)
 ;
"RTN","BPSSCRU2",215,0)
 ;get label date for RX,
"RTN","BPSSCRU2",216,0)
RXLBLDT(BPRX,BPDIR) ;
"RTN","BPSSCRU2",217,0)
 ;BPDIR=0 - the first
"RTN","BPSSCRU2",218,0)
 ;BPDIR=1 - the last
"RTN","BPSSCRU2",219,0)
 N BPRET
"RTN","BPSSCRU2",220,0)
 I BPDIR=0 S BPRET=$O(^PSRX(BPRX,"L",0))
"RTN","BPSSCRU2",221,0)
 I BPDIR=1 S BPRET=$O(^PSRX(BPRX,"L",9999),-1)
"RTN","BPSSCRU2",222,0)
 I BPRET S BPRET=$P($G(^PSRX(BPRX,"L",+BPRET,0)),U)\1
"RTN","BPSSCRU2",223,0)
 Q BPRET
"RTN","BPSSCRU2",224,0)
 ;
"RTN","BPSSCRU2",225,0)
 ;-Refills -----------------------
"RTN","BPSSCRU2",226,0)
 ;get label date for refills
"RTN","BPSSCRU2",227,0)
REFLBLDT(BPRX,BPDIR) ;
"RTN","BPSSCRU2",228,0)
 Q $$RXLBLDT(BPRX,BPDIR)
"RTN","BPSSCRU2",229,0)
 ;
"RTN","BPSSCRU2",230,0)
 ;refill's release date
"RTN","BPSSCRU2",231,0)
REFRELDT(BPRX,BPREF) ;
"RTN","BPSSCRU2",232,0)
 Q +$P($G(^PSRX(BPRX,1,BPREF,0)),U,18)
"RTN","BPSSCRU2",233,0)
 ;
"RTN","BPSSCRU2",234,0)
 ;refill's refill date
"RTN","BPSSCRU2",235,0)
REFFILDT(BPRX,BPREF) ;
"RTN","BPSSCRU2",236,0)
 Q +$P($G(^PSRX(BPRX,1,BPREF,0)),U)
"RTN","BPSSCRU2",237,0)
 ;
"RTN","BPSSCRU2",238,0)
 ;refill's issue date
"RTN","BPSSCRU2",239,0)
REFISSDT(BPRX,BPREF) ;
"RTN","BPSSCRU2",240,0)
 Q $$REFDISDT(BPRX,BPREF)
"RTN","BPSSCRU2",241,0)
 ;
"RTN","BPSSCRU2",242,0)
 ;refill's dispense date
"RTN","BPSSCRU2",243,0)
REFDISDT(BPRX,BPREF) ;
"RTN","BPSSCRU2",244,0)
 Q +$P($G(^PSRX(BPRX,1,BPREF,0)),U,19)
"RTN","BPSSCRU2",245,0)
 ;
"RTN","BPSSCRU2",246,0)
 ;if refill exists
"RTN","BPSSCRU2",247,0)
IFREFILL(BPRX,BPREF) ;
"RTN","BPSSCRU2",248,0)
 Q $D(^PSRX(BPRX,1,BPREF))>0
"RTN","BPSSCRU2",249,0)
 ;/**
"RTN","BPSSCRU2",250,0)
 ;input 
"RTN","BPSSCRU2",251,0)
 ;ptr to 9002313.59
"RTN","BPSSCRU2",252,0)
 ;output :
"RTN","BPSSCRU2",253,0)
 ; BB - back billing
"RTN","BPSSCRU2",254,0)
 ; RT - all other values in (#1201) RX ACTION field on 9002313.59
"RTN","BPSSCRU2",255,0)
RTBB(BP59) ;*/
"RTN","BPSSCRU2",256,0)
 N BPTRBB
"RTN","BPSSCRU2",257,0)
 S BPTRBB=$P($G(^BPST(BP59,12)),U)
"RTN","BPSSCRU2",258,0)
 I BPTRBB="" Q "**"
"RTN","BPSSCRU2",259,0)
 I BPTRBB="BB" Q "BB"
"RTN","BPSSCRU2",260,0)
 Q "RT"
"RTN","BPSSCRU2",261,0)
 ;
"RTN","BPSSCRU2",262,0)
 ;------------ patient's name
"RTN","BPSSCRU2",263,0)
PATNAME(BPDFN) ;
"RTN","BPSSCRU2",264,0)
 Q $E($P($G(^DPT(BPDFN,0)),U),1,15)
"RTN","BPSSCRU2",265,0)
 ;
"RTN","BPSSCRU2",266,0)
SSN4(DFN) ;last 4 SSN
"RTN","BPSSCRU2",267,0)
 N X
"RTN","BPSSCRU2",268,0)
 S X=$P($G(^DPT(DFN,0)),U,9)
"RTN","BPSSCRU2",269,0)
 Q "("_$E(X,$L(X)-3,$L(X))_")"
"RTN","BPSSCRU2",270,0)
 ;
"RTN","BPSSCRU2",271,0)
 ;get drug generic name
"RTN","BPSSCRU2",272,0)
DRGNAM(BP50) ;
"RTN","BPSSCRU2",273,0)
 ;BP50 - ptr to #50
"RTN","BPSSCRU2",274,0)
 Q $E($$DRUGDIE^BPSUTIL(BP50,.01,"E"),1,35)
"RTN","BPSSCRU2",275,0)
 ;get drug
"RTN","BPSSCRU2",276,0)
GETDRUG(BP52,BPREFN) ;
"RTN","BPSSCRU2",277,0)
 ;return value:
"RTN","BPSSCRU2",278,0)
 ; 0 - unknown
"RTN","BPSSCRU2",279,0)
 ; n - ptr to DRUG file #50
"RTN","BPSSCRU2",280,0)
 Q +$P($G(^PSRX(BP52,0)),U,6)
"RTN","BPSSCRU2",281,0)
 ;
"RTN","BPSSCRU2",282,0)
GETDRG59(BP59) ;
"RTN","BPSSCRU2",283,0)
 N BPX
"RTN","BPSSCRU2",284,0)
 S BPX=$$RXREF(BP59)
"RTN","BPSSCRU2",285,0)
 Q $$GETDRUG(+BPX,$P(BPX,U,2))
"RTN","BPSSCRU2",286,0)
 ;
"RTN","BPSSCRU2",287,0)
 ;
"RTN","BPSSCRU2",288,0)
 ;review %% for each of claims in the array 
"RTN","BPSSCRU2",289,0)
 ;and calculate "overall" "done" status
"RTN","BPSSCRU2",290,0)
 ;input:
"RTN","BPSSCRU2",291,0)
 ; BPARR59 - array of ptr to #9002313.59
"RTN","BPSSCRU2",292,0)
 ;output:
"RTN","BPSSCRU2",293,0)
 ; status
"RTN","BPSSCRU2",294,0)
FINISHST(BPARR59) ;
"RTN","BPSSCRU2",295,0)
 N BPFIN,BP59
"RTN","BPSSCRU2",296,0)
 S BPFIN=1,BP59=0
"RTN","BPSSCRU2",297,0)
 F  S BP59=$O(BPARR59(BP59)) Q:+BP59=0  D  Q:BPFIN=0
"RTN","BPSSCRU2",298,0)
 . I $$PRCNTG^BPSSCRU3(BP59)<99 S BPFIN=0
"RTN","BPSSCRU2",299,0)
 I BPFIN=1 Q "**FINISHED**"
"RTN","BPSSCRU2",300,0)
 Q ""
"RTN","BPSSCRU2",301,0)
 ;
"RTN","BPSSCRU2",302,0)
 ;/**
"RTN","BPSSCRU2",303,0)
 ;BP59 - ptr to 9002313.59
"RTN","BPSSCRU2",304,0)
 ;output :
"RTN","BPSSCRU2",305,0)
 ;ECME number 
"RTN","BPSSCRU2",306,0)
 ; 7 digits of the prescription IEN file 52
"RTN","BPSSCRU2",307,0)
 ;or 7 spaces
"RTN","BPSSCRU2",308,0)
ECMENUM(BP59) ;*/
"RTN","BPSSCRU2",309,0)
 N X
"RTN","BPSSCRU2",310,0)
 S X=$P($G(^BPST(BP59,0)),"^")
"RTN","BPSSCRU2",311,0)
 I X="" Q $$FORMAT(X,7," ",1)
"RTN","BPSSCRU2",312,0)
 Q $$FORMAT(X\1,7,"0",1)
"RTN","BPSSCRU2",313,0)
 ;
"RTN","BPSSCRU2",314,0)
 ;BPRX - ptr to #52
"RTN","BPSSCRU2",315,0)
RXNUM(BPRX) ;
"RTN","BPSSCRU2",316,0)
 Q $P($G(^PSRX(BPRX,0)),U)_$S($G(^PSRX(BPRX,"IB")):"$",1:"")
"RTN","BPSSCRU2",317,0)
 ;
"RTN","BPSSCRU2",318,0)
 ;/**
"RTN","BPSSCRU2",319,0)
 ;get NDC
"RTN","BPSSCRU2",320,0)
 ;input 
"RTN","BPSSCRU2",321,0)
 ;BPRX - ptr to #52
"RTN","BPSSCRU2",322,0)
 ;BPREF - refill # (0,1,2,3...)
"RTN","BPSSCRU2",323,0)
NDC(BPRX,BPREF) ;*/
"RTN","BPSSCRU2",324,0)
 Q $$GETNDC^PSONDCUT(BPRX,BPREF)
"RTN","BPSSCRU2",325,0)
 ;
"RTN","BPSSCRU2",326,0)
DRGNAME(BP59) ;drug name BP59 -ptr to .59 file
"RTN","BPSSCRU2",327,0)
 N BPRX,BPREF
"RTN","BPSSCRU2",328,0)
 S BPRX=+$P($G(^BPST(BP59,1)),U,11) ;ptr to RX node in #52
"RTN","BPSSCRU2",329,0)
 S BPREF=+$P($G(^BPST(BP59,1)),U) ;ptr to refill multiple in #52
"RTN","BPSSCRU2",330,0)
 Q $E($$DRGNAM^BPSSCRU2($$GETDRUG^BPSSCRU2(BPRX,BPREF)),1,23)
"RTN","BPSSCRU2",331,0)
 ;
"RTN","BPSSCRU2",332,0)
 ;is the number even?
"RTN","BPSSCRU2",333,0)
 ;1-yes
"RTN","BPSSCRU2",334,0)
 ;0 -no
"RTN","BPSSCRU2",335,0)
ISEVEN(BPNUM) ;
"RTN","BPSSCRU2",336,0)
 Q ((BPNUM/2)-(BPNUM\2))=0
"RTN","BPSSCRU2",337,0)
 ;
"RTN","BPSSCRU2",338,0)
 ;BPSTR - string to format
"RTN","BPSSCRU2",339,0)
 ;BPSMLEN - max lenght
"RTN","BPSSCRU2",340,0)
 ;BPSCHR - char to add
"RTN","BPSSCRU2",341,0)
 ;BPSLFT - 1 - add from the left, 0 - from the right
"RTN","BPSSCRU2",342,0)
FORMAT(BPSTR,BPSMLEN,BPSCHR,BPSLFT) ;
"RTN","BPSSCRU2",343,0)
 N LN S LN=$L(BPSTR)
"RTN","BPSSCRU2",344,0)
 N ZZ S ZZ=""
"RTN","BPSSCRU2",345,0)
 I LN=BPSMLEN Q BPSTR
"RTN","BPSSCRU2",346,0)
 I LN>BPSMLEN Q:BPSLFT $E(BPSTR,LN-BPSMLEN+1,9999) Q $E(BPSTR,1,BPSMLEN)
"RTN","BPSSCRU2",347,0)
 S $P(ZZ,BPSCHR,BPSMLEN-LN+1)=""
"RTN","BPSSCRU2",348,0)
 Q:BPSLFT ZZ_BPSTR
"RTN","BPSSCRU2",349,0)
 Q BPSTR_ZZ
"RTN","BPSSCRU2",350,0)
 ;
"RTN","BPSSCRU4")
0^14^B58171346
"RTN","BPSSCRU4",1,0)
BPSSCRU4 ;BHAM ISC/SS - ECME SCREEN UTILITIES ;05-APR-05
"RTN","BPSSCRU4",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSSCRU4",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","BPSSCRU4",4,0)
 ;USER SCREEN
"RTN","BPSSCRU4",5,0)
 Q
"RTN","BPSSCRU4",6,0)
 ;
"RTN","BPSSCRU4",7,0)
 ;repeatedly prompts the user for line#
"RTN","BPSSCRU4",8,0)
 ;the user should "^" to quit or enter a correct line #
"RTN","BPSSCRU4",9,0)
 ;input:
"RTN","BPSSCRU4",10,0)
 ;  BPROMPT - prompt string
"RTN","BPSSCRU4",11,0)
 ;  BPTYPE expected user's selection on level 
"RTN","BPSSCRU4",12,0)
 ;  of P-patient or C-claim or PC - both
"RTN","BPSSCRU4",13,0)
 ;  BPERRMES - optional - the message to display when the user
"RTN","BPSSCRU4",14,0)
 ;    tries to make multi line selection
"RTN","BPSSCRU4",15,0)
 ;  BPDFLT - default value for the prompt (optional)
"RTN","BPSSCRU4",16,0)
 ;output:
"RTN","BPSSCRU4",17,0)
 ;  piece 1: 
"RTN","BPSSCRU4",18,0)
 ;   1 - okay
"RTN","BPSSCRU4",19,0)
 ;   <0 - errors
"RTN","BPSSCRU4",20,0)
 ;   0 - user wants to quit
"RTN","BPSSCRU4",21,0)
 ;  piece 2: patient ien #2
"RTN","BPSSCRU4",22,0)
 ;  piece 3: insurance ien #36
"RTN","BPSSCRU4",23,0)
 ;  piece 4: ptr to #9002313.59
"RTN","BPSSCRU4",24,0)
 ;  piece 5: 1st line for index(es) in LM "VALM" array
"RTN","BPSSCRU4",25,0)
 ;  piece 6: patient's index
"RTN","BPSSCRU4",26,0)
 ;  piece 7: claim's index
"RTN","BPSSCRU4",27,0)
ASKLINE(BPROMPT,BPTYPE,BPERRMES,BPDFLT) ;
"RTN","BPSSCRU4",28,0)
 N BPRET,BPCNT
"RTN","BPSSCRU4",29,0)
 S BPRET="",BPCNT=0
"RTN","BPSSCRU4",30,0)
 F  S BPRET=$$SELLINE(BPROMPT,BPTYPE,VALMAR,$G(BPDFLT)) Q:BPRET'<0  D
"RTN","BPSSCRU4",31,0)
 . ;D RE^VALM4
"RTN","BPSSCRU4",32,0)
 . ;
"RTN","BPSSCRU4",33,0)
 . I BPCNT<1 S BPCNT=BPCNT+1 W !
"RTN","BPSSCRU4",34,0)
 . E  S BPCNT=0 D RE^VALM4
"RTN","BPSSCRU4",35,0)
 . I BPRET=-1 W " - Invalid line number" ; (invalid Patient summary line)"
"RTN","BPSSCRU4",36,0)
 . I BPRET=-8 W " - ",$S($G(BPERRMES)]"":BPERRMES,1:" Invalid line number")
"RTN","BPSSCRU4",37,0)
 . I BPRET=-4 W " - Invalid line number" ; (invalid RX line)"
"RTN","BPSSCRU4",38,0)
 . I BPRET=-2 W " - Please select Patient's summary line."
"RTN","BPSSCRU4",39,0)
 . I BPRET=-3 W " - Please specify RX line."
"RTN","BPSSCRU4",40,0)
 . I BPRET<-4 W " - Incorrect format." ; Corrupted array (",BPRET,")"
"RTN","BPSSCRU4",41,0)
 Q BPRET
"RTN","BPSSCRU4",42,0)
 ;/**
"RTN","BPSSCRU4",43,0)
 ;prompts the user for line# for various menu option of the User Screen
"RTN","BPSSCRU4",44,0)
 ;input:
"RTN","BPSSCRU4",45,0)
 ;  BPROMPT - prompt string
"RTN","BPSSCRU4",46,0)
 ;  BPTYPE - expected user's selection on level 
"RTN","BPSSCRU4",47,0)
 ;  of P-patient or C-claim or PC - both
"RTN","BPSSCRU4",48,0)
 ;  BPTMP1 - temporary global (VALMAR)
"RTN","BPSSCRU4",49,0)
 ;  BPDFLT - default value for the prompt (optional)
"RTN","BPSSCRU4",50,0)
 ;output:
"RTN","BPSSCRU4",51,0)
 ;  piece 1: 
"RTN","BPSSCRU4",52,0)
 ;   1 - okay
"RTN","BPSSCRU4",53,0)
 ;   <0 - errors
"RTN","BPSSCRU4",54,0)
 ;   0 - user wants to quit
"RTN","BPSSCRU4",55,0)
 ;  piece 2: patient ien #2
"RTN","BPSSCRU4",56,0)
 ;  piece 3: insurance ien #36
"RTN","BPSSCRU4",57,0)
 ;  piece 4: ptr to #9002313.59
"RTN","BPSSCRU4",58,0)
 ;  piece 5: 1st line for index(es) in LM "VALM" array
"RTN","BPSSCRU4",59,0)
 ;  piece 6: patient's index
"RTN","BPSSCRU4",60,0)
 ;  piece 7: claim's index
"RTN","BPSSCRU4",61,0)
SELLINE(BPROMPT,BPTYPE,BPTMP1,BPDFLT) ;*/
"RTN","BPSSCRU4",62,0)
 N BPX,BPLINE,BPPATIND,BPCLMIND
"RTN","BPSSCRU4",63,0)
 N BPDFN,BPSINSUR,BP59,BP1LN
"RTN","BPSSCRU4",64,0)
 S BPLINE=$$PROMPT(BPROMPT,$G(BPDFLT))
"RTN","BPSSCRU4",65,0)
 I BPLINE="^" Q 0
"RTN","BPSSCRU4",66,0)
 S BPPATIND=+$P(BPLINE,".")
"RTN","BPSSCRU4",67,0)
 I (BPLINE["-")!(BPLINE[",") Q -8  ;multiple line input in not allowed
"RTN","BPSSCRU4",68,0)
 I '$D(@BPTMP1@("LMIND",BPPATIND)) Q -1  ;the patient level doesn't exist
"RTN","BPSSCRU4",69,0)
 S BPCLMIND=+$P(BPLINE,".",2)
"RTN","BPSSCRU4",70,0)
 I BPTYPE="P",BPCLMIND>0 Q -2  ;P was requested but claim portion was provided
"RTN","BPSSCRU4",71,0)
 I BPTYPE="C",BPCLMIND=0 Q -3  ;C was requested but claim portion was not provided
"RTN","BPSSCRU4",72,0)
 I '$D(@BPTMP1@("LMIND",BPPATIND,BPCLMIND)) Q -4  ;the claim level doesn't exist
"RTN","BPSSCRU4",73,0)
 S BPDFN=$O(@BPTMP1@("LMIND",BPPATIND,BPCLMIND,0))
"RTN","BPSSCRU4",74,0)
 I +BPDFN=0 Q -5  ;error
"RTN","BPSSCRU4",75,0)
 S BPSINSUR=$O(@BPTMP1@("LMIND",BPPATIND,BPCLMIND,BPDFN,""))
"RTN","BPSSCRU4",76,0)
 I BPSINSUR="" Q -6  ;error
"RTN","BPSSCRU4",77,0)
 ;if fractional part was entered
"RTN","BPSSCRU4",78,0)
 I BPCLMIND>0 D  I +BP59=0 Q -7  ;error
"RTN","BPSSCRU4",79,0)
 . S BP59=$O(@BPTMP1@("LMIND",BPPATIND,BPCLMIND,BPDFN,BPSINSUR,0))
"RTN","BPSSCRU4",80,0)
 I BPCLMIND=0 S BP59=0
"RTN","BPSSCRU4",81,0)
 S BP1LN=$O(@BPTMP1@("LMIND",BPPATIND,BPCLMIND,BPDFN,BPSINSUR,BP59,0))
"RTN","BPSSCRU4",82,0)
 I +BP1LN=0 Q -7  ;error
"RTN","BPSSCRU4",83,0)
 Q "1"_U_BPDFN_U_BPSINSUR_U_BP59_U_BP1LN_U_BPPATIND_U_BPCLMIND
"RTN","BPSSCRU4",84,0)
 ;
"RTN","BPSSCRU4",85,0)
 ;input:
"RTN","BPSSCRU4",86,0)
 ;BPSPROM - prompt text
"RTN","BPSSCRU4",87,0)
 ;BPSDFVL - default value (optional)
"RTN","BPSSCRU4",88,0)
 ;returns:
"RTN","BPSSCRU4",89,0)
 ; "response^"
"RTN","BPSSCRU4",90,0)
PROMPT(BPSPROM,BPSDFVL) ;
"RTN","BPSSCRU4",91,0)
 N BPRET,DIR,X,Y,DIRUT
"RTN","BPSSCRU4",92,0)
 S BPRET="^"
"RTN","BPSSCRU4",93,0)
 S DIR(0)="F^::2",DIR("A")=BPSPROM
"RTN","BPSSCRU4",94,0)
 I $L($G(BPSDFVL))>0 S DIR("B")=$G(BPSDFVL)
"RTN","BPSSCRU4",95,0)
 D ^DIR I $D(DIRUT) Q "^"
"RTN","BPSSCRU4",96,0)
 S $P(BPRET,U)=Y
"RTN","BPSSCRU4",97,0)
 Q BPRET
"RTN","BPSSCRU4",98,0)
 ;
"RTN","BPSSCRU4",99,0)
 ;/**
"RTN","BPSSCRU4",100,0)
 ;check and process user input
"RTN","BPSSCRU4",101,0)
 ;input:
"RTN","BPSSCRU4",102,0)
 ;  BPLINE - input string
"RTN","BPSSCRU4",103,0)
 ;  BPTYPE - expected user's selection on level 
"RTN","BPSSCRU4",104,0)
 ;  of P-patient or C-claim or PC - both
"RTN","BPSSCRU4",105,0)
 ;  BPTMP1 - temporary global (VALMAR)
"RTN","BPSSCRU4",106,0)
 ;output:
"RTN","BPSSCRU4",107,0)
 ;  piece 1: 
"RTN","BPSSCRU4",108,0)
 ;   1 - okay
"RTN","BPSSCRU4",109,0)
 ;   <0 - errors
"RTN","BPSSCRU4",110,0)
 ;   0 - user wants to quit
"RTN","BPSSCRU4",111,0)
 ;  piece 2: patient ien #2
"RTN","BPSSCRU4",112,0)
 ;  piece 3: insurance ien #36
"RTN","BPSSCRU4",113,0)
 ;  piece 4: ptr to #9002313.59
"RTN","BPSSCRU4",114,0)
 ;  piece 5: 1st line for index(es) in LM "VALM" array
"RTN","BPSSCRU4",115,0)
 ;  piece 6: patient's index
"RTN","BPSSCRU4",116,0)
 ;  piece 7: claim's index
"RTN","BPSSCRU4",117,0)
CHECKLN(BPLINE,BPTYPE,BPTMP1) ;*/
"RTN","BPSSCRU4",118,0)
 N BPX,BPPATIND,BPCLMIND
"RTN","BPSSCRU4",119,0)
 N BPDFN,BPSINSUR,BP59,BP1LN
"RTN","BPSSCRU4",120,0)
 I BPLINE="^" Q 0
"RTN","BPSSCRU4",121,0)
 S BPPATIND=+$P(BPLINE,".")
"RTN","BPSSCRU4",122,0)
 I '$D(@BPTMP1@("LMIND",BPPATIND)) Q -1  ;the patient level doesn't exist
"RTN","BPSSCRU4",123,0)
 S BPCLMIND=+$P(BPLINE,".",2)
"RTN","BPSSCRU4",124,0)
 I BPTYPE="P",BPCLMIND>0 Q -2  ;P was requested but claim portion was provided
"RTN","BPSSCRU4",125,0)
 I BPTYPE="C",BPCLMIND=0 Q -3  ;C was requested but claim portion was not provided
"RTN","BPSSCRU4",126,0)
 I '$D(@BPTMP1@("LMIND",BPPATIND,BPCLMIND)) Q -4  ;the claim level doesn't exist
"RTN","BPSSCRU4",127,0)
 S BPDFN=$O(@BPTMP1@("LMIND",BPPATIND,BPCLMIND,0))
"RTN","BPSSCRU4",128,0)
 I +BPDFN=0 Q -5  ;error
"RTN","BPSSCRU4",129,0)
 S BPSINSUR=$O(@BPTMP1@("LMIND",BPPATIND,BPCLMIND,BPDFN,""))
"RTN","BPSSCRU4",130,0)
 I BPSINSUR="" Q -6  ;error
"RTN","BPSSCRU4",131,0)
 ;if fractional part was entered
"RTN","BPSSCRU4",132,0)
 I BPCLMIND>0 D  I +BP59=0 Q -7  ;error
"RTN","BPSSCRU4",133,0)
 . S BP59=$O(@BPTMP1@("LMIND",BPPATIND,BPCLMIND,BPDFN,BPSINSUR,0))
"RTN","BPSSCRU4",134,0)
 I BPCLMIND=0 S BP59=0
"RTN","BPSSCRU4",135,0)
 S BP1LN=$O(@BPTMP1@("LMIND",BPPATIND,BPCLMIND,BPDFN,BPSINSUR,BP59,0))
"RTN","BPSSCRU4",136,0)
 I +BP1LN=0 Q -7  ;error
"RTN","BPSSCRU4",137,0)
 Q "1"_U_BPDFN_U_BPSINSUR_U_BP59_U_BP1LN_U_BPPATIND_U_BPCLMIND
"RTN","BPSSCRU4",138,0)
 ;
"RTN","BPSSCRU4",139,0)
 ;
"RTN","BPSSCRU4",140,0)
 ;BPTMP = VALMAR
"RTN","BPSSCRU4",141,0)
 ;input:
"RTN","BPSSCRU4",142,0)
 ; BPROMPT - prompt text
"RTN","BPSSCRU4",143,0)
 ; BPTYPE - expected user's selection on level 
"RTN","BPSSCRU4",144,0)
 ;  of P-patient or C-claim or PC - both
"RTN","BPSSCRU4",145,0)
 ; BPTMP - temporary global (like VALMAR)
"RTN","BPSSCRU4",146,0)
 ; BPARRLN2 - to return results
"RTN","BPSSCRU4",147,0)
 ;output :
"RTN","BPSSCRU4",148,0)
 ;  1 if okay
"RTN","BPSSCRU4",149,0)
 ;  -1 -invalid format
"RTN","BPSSCRU4",150,0)
 ;  ^ - quit
"RTN","BPSSCRU4",151,0)
 ;  BPARRLN2 - Array(B59)="line# in VALM"^"PatientIndex.ClaimIndex"
"RTN","BPSSCRU4",152,0)
 ;example:
"RTN","BPSSCRU4",153,0)
 ;  BPARR(30045.00001)=134^2.34
"RTN","BPSSCRU4",154,0)
ASKLINES(BPROMPT,BPTYPE,BPARRLN2,BPTMP) ;
"RTN","BPSSCRU4",155,0)
 N BPQ,BPXLN,BPN,BPLN,BPZ
"RTN","BPSSCRU4",156,0)
 N BPL,BPCLM
"RTN","BPSSCRU4",157,0)
 N BPARRLN1,BPX1
"RTN","BPSSCRU4",158,0)
 S BPSPROM="Select item(s)"
"RTN","BPSSCRU4",159,0)
 S BPLN=$$PROMPT(BPSPROM,"")
"RTN","BPSSCRU4",160,0)
 I BPLN="^" Q "^"
"RTN","BPSSCRU4",161,0)
 S BPLN=$P(BPLN,U)
"RTN","BPSSCRU4",162,0)
 S BPQ=0
"RTN","BPSSCRU4",163,0)
 F BPN=1:1 S BPX1=$P(BPLN,",",BPN) Q:$L(BPX1)=0  D  Q:BPQ'=0
"RTN","BPSSCRU4",164,0)
 . S BPZ=$$MKINDEXS(BPX1,BPTMP,.BPARRLN1)
"RTN","BPSSCRU4",165,0)
 . I BPZ<1 S BPQ=-1
"RTN","BPSSCRU4",166,0)
 . I (BPZ=-1)!(BPZ=-2) W !,"Invalid format.",!
"RTN","BPSSCRU4",167,0)
 . I (BPZ=-3) W !,"Not a valid selection.",!
"RTN","BPSSCRU4",168,0)
 Q:BPQ=-1 -1
"RTN","BPSSCRU4",169,0)
 ;
"RTN","BPSSCRU4",170,0)
 N BPPAT,BPCLM
"RTN","BPSSCRU4",171,0)
 S BPPAT=0 F  S BPPAT=$O(BPARRLN1(BPPAT)) Q:BPPAT=""  D
"RTN","BPSSCRU4",172,0)
 . S BPCLM=0 F  S BPCLM=$O(BPARRLN1(BPPAT,BPCLM)) Q:BPCLM=""  D
"RTN","BPSSCRU4",173,0)
 . . S BP1=$G(BPARRLN1(BPPAT,BPCLM))
"RTN","BPSSCRU4",174,0)
 . . Q:$L(BP1)=0
"RTN","BPSSCRU4",175,0)
 . . S BPARRLN2(+$P(BP1,U,4))=+$P(BP1,U,5)_U_BPPAT_"."_BPCLM
"RTN","BPSSCRU4",176,0)
 Q 1
"RTN","BPSSCRU4",177,0)
 ;
"RTN","BPSSCRU4",178,0)
 ;/**
"RTN","BPSSCRU4",179,0)
 ;checks for dashes and if so then create a number of indexes for the range
"RTN","BPSSCRU4",180,0)
 ;i.e. convert all "1.2-2.3" to "1.2,1.3,1.4,2.1,2.2,2.3"
"RTN","BPSSCRU4",181,0)
 ;AND create entries in BPARR for all "right" indexes
"RTN","BPSSCRU4",182,0)
 ;input:
"RTN","BPSSCRU4",183,0)
 ;BPVAL - value to check (exmpl: "1.2-2.4")
"RTN","BPSSCRU4",184,0)
 ;BPTMP1 - global ref with data (exmpl: VALMAR)
"RTN","BPSSCRU4",185,0)
 ;BPARR - array with parsed line indexes 
"RTN","BPSSCRU4",186,0)
 ;output:
"RTN","BPSSCRU4",187,0)
 ;Exmpl:
"RTN","BPSSCRU4",188,0)
 ; BPARR(1.2)=""
"RTN","BPSSCRU4",189,0)
 ; BPARR(1.3)=""
"RTN","BPSSCRU4",190,0)
 ; ...
"RTN","BPSSCRU4",191,0)
 ; returns:
"RTN","BPSSCRU4",192,0)
 ; 1 - okay
"RTN","BPSSCRU4",193,0)
 ; <0 invalid format 
"RTN","BPSSCRU4",194,0)
MKINDEXS(BPVAL,BPTMP1,BPARR) ;
"RTN","BPSSCRU4",195,0)
 N BPFR,BPTO,BPQ,BPRET
"RTN","BPSSCRU4",196,0)
 N BPPAT,BPCLM,BPCLSTRT,BPCLEND,BPQ2
"RTN","BPSSCRU4",197,0)
 N BPFRPAT,BPTOPAT,BPFRCLM,BPTOCLM,BP1
"RTN","BPSSCRU4",198,0)
 S BPQ=0
"RTN","BPSSCRU4",199,0)
 S BPRET=1
"RTN","BPSSCRU4",200,0)
 I BPVAL'["-" D  Q BPRET
"RTN","BPSSCRU4",201,0)
 . S BPPAT=$P(BPVAL,".",1)
"RTN","BPSSCRU4",202,0)
 . I BPPAT'=+BPPAT S BPRET=-1 Q  ;invalid format, patient part is not numeric
"RTN","BPSSCRU4",203,0)
 . S BPCLM=$P(BPVAL,".",2)
"RTN","BPSSCRU4",204,0)
 . ;if only patient index
"RTN","BPSSCRU4",205,0)
 . I $L(BPCLM)=0 D  Q
"RTN","BPSSCRU4",206,0)
 . . S BPQ2=0
"RTN","BPSSCRU4",207,0)
 . . F BPCLM=1:1 D  Q:BPQ2'=0
"RTN","BPSSCRU4",208,0)
 . . . ;quit if there are no more claims for the patient
"RTN","BPSSCRU4",209,0)
 . . . S BP1=$$CHECKLN(BPPAT_"."_BPCLM,"C",BPTMP1)
"RTN","BPSSCRU4",210,0)
 . . . I BP1<1 S BPQ2=1 Q
"RTN","BPSSCRU4",211,0)
 . . . S BPARR(+BPPAT,+BPCLM)=BP1
"RTN","BPSSCRU4",212,0)
 . ;if only patient+claim index
"RTN","BPSSCRU4",213,0)
 . I BPCLM'=+BPCLM S BPRET=-2 Q  ;invalid format, claim portion is not numeric
"RTN","BPSSCRU4",214,0)
 . S BP1=$$CHECKLN(BPPAT_"."_BPCLM,"C",BPTMP1)
"RTN","BPSSCRU4",215,0)
 . I BP1<1 S BPRET=-3 Q  ;not found
"RTN","BPSSCRU4",216,0)
 . S BPARR(+BPPAT,+BPCLM)=BP1
"RTN","BPSSCRU4",217,0)
 ;********* if contains "-"
"RTN","BPSSCRU4",218,0)
 S BPFR=$P(BPVAL,"-",1)
"RTN","BPSSCRU4",219,0)
 S BPTO=$P(BPVAL,"-",2)
"RTN","BPSSCRU4",220,0)
 I BPTO["-" Q -3  ;invalid format (to many dashes)
"RTN","BPSSCRU4",221,0)
 S BPFRPAT=$P(BPFR,".",1)
"RTN","BPSSCRU4",222,0)
 S BPTOPAT=$P(BPTO,".",1)
"RTN","BPSSCRU4",223,0)
 S BPFRCLM=$P(BPFR,".",2)
"RTN","BPSSCRU4",224,0)
 I $L(BPFRCLM)=0 S BPFRCLM=1
"RTN","BPSSCRU4",225,0)
 S BPTOCLM=$P(BPTO,".",2)
"RTN","BPSSCRU4",226,0)
 I $L(BPTOCLM)=0 S BPTOCLM=999999
"RTN","BPSSCRU4",227,0)
 I BPFRPAT'=+BPFRPAT Q -1  ;invalid format, patient part is not numeric
"RTN","BPSSCRU4",228,0)
 I BPTOPAT'=+BPTOPAT Q -1  ;invalid format, patient part is not numeric
"RTN","BPSSCRU4",229,0)
 I BPFRCLM'=+BPFRCLM Q -2  ;invalid format, claim portion is not numeric
"RTN","BPSSCRU4",230,0)
 I BPTOCLM'=+BPTOCLM Q -2  ;invalid format, claim portion is not numeric
"RTN","BPSSCRU4",231,0)
 F BPPAT=BPFRPAT:1:BPTOPAT D
"RTN","BPSSCRU4",232,0)
 . I BPPAT=BPFRPAT S BPCLSTRT=BPFRCLM
"RTN","BPSSCRU4",233,0)
 . E  S BPCLSTRT=1
"RTN","BPSSCRU4",234,0)
 . I BPPAT=BPTOPAT S BPCLEND=BPTOCLM
"RTN","BPSSCRU4",235,0)
 . E  S BPCLEND=999999
"RTN","BPSSCRU4",236,0)
 . S BPQ2=0
"RTN","BPSSCRU4",237,0)
 . F BPCLM=BPCLSTRT:1:BPCLEND D  Q:BPQ2'=0
"RTN","BPSSCRU4",238,0)
 . . ;quit if there are no more claims for the patient
"RTN","BPSSCRU4",239,0)
 . . S BP1=$$CHECKLN(BPPAT_"."_BPCLM,"C",BPTMP1)
"RTN","BPSSCRU4",240,0)
 . . I BP1<1 S BPQ2=1 Q
"RTN","BPSSCRU4",241,0)
 . . S BPARR(+BPPAT,+BPCLM)=BP1
"RTN","BPSSCRU4",242,0)
 Q 1
"RTN","BPSSCRU4",243,0)
 ;
"RTN","BPSSCRU6")
0^7^B5405845
"RTN","BPSSCRU6",1,0)
BPSSCRU6 ;BHAM ISC/SS - ECME SCREEN UTILITIES ;22-MAY-06
"RTN","BPSSCRU6",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**3**;JUN 2004;Build 20
"RTN","BPSSCRU6",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","BPSSCRU6",4,0)
 ;USER SCREEN
"RTN","BPSSCRU6",5,0)
 Q
"RTN","BPSSCRU6",6,0)
 ;
"RTN","BPSSCRU6",7,0)
 ;Input:
"RTN","BPSSCRU6",8,0)
 ; BP59 - 
"RTN","BPSSCRU6",9,0)
 ;Output:
"RTN","BPSSCRU6",10,0)
 ; 
"RTN","BPSSCRU6",11,0)
DISPREJ(BP59) ;
"RTN","BPSSCRU6",12,0)
 N BPARR,BPN,BPCNT
"RTN","BPSSCRU6",13,0)
 S BPN=0
"RTN","BPSSCRU6",14,0)
 ;I (BPSTATUS["E REJECTED")!(BPSTATUS["E REVERSAL REJECTED") D
"RTN","BPSSCRU6",15,0)
 D GETRJCOD^BPSSCRU3(BP59,.BPARR,.BPN,74,"")
"RTN","BPSSCRU6",16,0)
 D WRAPLN2^BPSSCRU5(.BPN,.BPARR,$$GETMESS^BPSSCRU3(1000,504,BP59),74,"",0)
"RTN","BPSSCRU6",17,0)
 D WRAPLN2^BPSSCRU5(.BPN,.BPARR,$$GETMESS^BPSSCRU3(1000,526,BP59),74,"",0)
"RTN","BPSSCRU6",18,0)
 D WRAPLN2^BPSSCRU5(.BPN,.BPARR,$$GETMESS^BPSSCRU3(504,0,BP59),74,"",0)
"RTN","BPSSCRU6",19,0)
 I BPN=0 Q
"RTN","BPSSCRU6",20,0)
 S BPCNT=0
"RTN","BPSSCRU6",21,0)
 F  S BPCNT=$O(BPARR(BPCNT)) Q:+BPCNT=0  D
"RTN","BPSSCRU6",22,0)
 . W:$L(BPARR(BPCNT)) !,?6,BPARR(BPCNT)
"RTN","BPSSCRU6",23,0)
 Q
"RTN","BPSSCRU6",24,0)
 ;
"RTN","BPSSCRU6",25,0)
 ;return Date in specified format
"RTN","BPSSCRU6",26,0)
 ;BPDT - date in FileMan format
"RTN","BPSSCRU6",27,0)
 ;BPMODE:
"RTN","BPSSCRU6",28,0)
 ; 1- like "JUL 23, 2005"
"RTN","BPSSCRU6",29,0)
 ; 2- like "JUL 23, 2005@16:03 "
"RTN","BPSSCRU6",30,0)
 ; 3- MM/DD/YY
"RTN","BPSSCRU6",31,0)
FORMDATE(BPDT,BPMODE) ;
"RTN","BPSSCRU6",32,0)
 N Y,BPTIME,BPHR
"RTN","BPSSCRU6",33,0)
 I $G(BPDT)=0 Q ""
"RTN","BPSSCRU6",34,0)
 I BPMODE=1 S Y=BPDT\1 X ^DD("DD") Q Y
"RTN","BPSSCRU6",35,0)
 I BPMODE=2 S Y=BPDT X ^DD("DD") Q Y
"RTN","BPSSCRU6",36,0)
 I BPMODE=3 S Y=$E(BPDT,4,5)_"/"_$E(BPDT,6,7)_"/"_$E(BPDT,2,3) Q Y
"RTN","BPSSCRU6",37,0)
 Q ""
"RTN","BPSSCRU6",38,0)
 ;
"RTN","BPSSCRU6",39,0)
 ;Generic function to ask a date
"RTN","BPSSCRU6",40,0)
 ;Input:
"RTN","BPSSCRU6",41,0)
 ;BPPROMPT - prompt like "START WITH DATE: "
"RTN","BPSSCRU6",42,0)
 ;BPDFLDT - default for the prompt like "TODAY" or "T" or "T-100" or 12/12/2005
"RTN","BPSSCRU6",43,0)
 ;output:
"RTN","BPSSCRU6",44,0)
 ; 0 - nothing
"RTN","BPSSCRU6",45,0)
 ; <0 quit
"RTN","BPSSCRU6",46,0)
 ; >0 fileman date
"RTN","BPSSCRU6",47,0)
ASKDATE(BPPROMPT,BPDFLDT) ;
"RTN","BPSSCRU6",48,0)
 S %DT="AEX"
"RTN","BPSSCRU6",49,0)
 S %DT("A")=BPPROMPT,%DT("B")=BPDFLDT
"RTN","BPSSCRU6",50,0)
 D ^%DT K %DT
"RTN","BPSSCRU6",51,0)
 I Y<0 Q -1
"RTN","BPSSCRU6",52,0)
 Q +Y
"RTN","BPSSCRU6",53,0)
 ;Release date
"RTN","BPSSCRU6",54,0)
 ;RXNO - RX ien #52
"RTN","BPSSCRU6",55,0)
 ;REFNO - fill number (0=original)
"RTN","BPSSCRU6",56,0)
RELDATE(RXNO,REFNO) ;
"RTN","BPSSCRU6",57,0)
 I REFNO=0 Q $$RXRELDT^BPSSCRU2(+RXNO)
"RTN","BPSSCRU6",58,0)
 Q $$REFRELDT^BPSSCRU2(+RXNO,REFNO)
"RTN","BPSSCRU6",59,0)
 ;
"RTN","BPSSCRU6",60,0)
 ;Group name/Plan name - name originally comes from file #355.3 by BPS TRANSACTION file ien
"RTN","BPSSCRU6",61,0)
PLANNAME(BP59) ;
"RTN","BPSSCRU6",62,0)
 N BPPLNM
"RTN","BPSSCRU6",63,0)
 S BPPLNM=$P($G(^BPST(BP59,10,1,3)),U)
"RTN","BPSSCRU6",64,0)
 S:BPPLNM="" BPPLNM=$P($G(^BPST(BP59,10,1,1)),U,3)
"RTN","BPSSCRU6",65,0)
 Q BPPLNM
"RTN","BPSSCRU6",66,0)
 ;Insurance name - name originally comes from file #36 by BPS TRANSACTION file ien
"RTN","BPSSCRU6",67,0)
INSNAME(BP59) ;
"RTN","BPSSCRU6",68,0)
 Q $P($G(^BPST(BP59,10,1,0)),U,7)
"RTN","BPSSCRU6",69,0)
 ;
"RTN","BPSSCRU6",70,0)
 ;Returns close reason by ien file#356.8
"RTN","BPSSCRU6",71,0)
CLREASON(BP3568) ;
"RTN","BPSSCRU6",72,0)
 Q $P($G(^IBE(356.8,BP3568,0)),U)
"RTN","BPSSCRU6",73,0)
 ;
"RTN","BPSSCRU6",74,0)
 ;Convert YYYYMMDD to FileMan format
"RTN","BPSSCRU6",75,0)
YMD2FM(BPYMD) ;
"RTN","BPSSCRU6",76,0)
 Q ($E(BPYMD,1,4)-1700)_$E(BPYMD,5,8)
"RTN","BPSSCRU6",77,0)
 ;
"RTN","BPSSCRU6",78,0)
 ;get DRUG ien from PRESCRIPTION file
"RTN","BPSSCRU6",79,0)
DRUGIEN(BP52,BPDFN) ;
"RTN","BPSSCRU6",80,0)
 N XZ
"RTN","BPSSCRU6",81,0)
 S XZ=0
"RTN","BPSSCRU6",82,0)
 K ^TMP($J,"BPSDRUG")
"RTN","BPSSCRU6",83,0)
 D RX^PSO52API(BPDFN,"BPSDRUG",BP52,,"")
"RTN","BPSSCRU6",84,0)
 S XZ=$G(^TMP($J,"BPSDRUG",BPDFN,BP52,6))
"RTN","BPSSCRU6",85,0)
 K ^TMP($J,"BPSDRUG")
"RTN","BPSSCRU6",86,0)
 Q +$P(XZ,U)
"RTN","BPSSCRU6",87,0)
 ;
"RTN","BPSSCRU6",88,0)
 ;
"RTN","BPSSCRU6",89,0)
CONVCLID(BPCLID) ;
"RTN","BPSSCRU6",90,0)
 Q $P(BPCLID,"D2",2)
"RTN","BPSSCRU6",91,0)
 ;BPSSCRU6
"RTN","BPSUSCR4")
0^22^B10854593
"RTN","BPSUSCR4",1,0)
BPSUSCR4 ;BHAM ISC/FLS - USER SCREEN ;14-FEB-05
"RTN","BPSUSCR4",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSUSCR4",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","BPSUSCR4",4,0)
 ;
"RTN","BPSUSCR4",5,0)
 Q
"RTN","BPSUSCR4",6,0)
 ;
"RTN","BPSUSCR4",7,0)
 ; COLLECT - Compile stranded claims
"RTN","BPSUSCR4",8,0)
 ;   Input:
"RTN","BPSUSCR4",9,0)
 ;     BPARR - Date Range
"RTN","BPSUSCR4",10,0)
 ;   Output:
"RTN","BPSUSCR4",11,0)
 ;     ^TMP("BPSUSCR",$J)
"RTN","BPSUSCR4",12,0)
 ;     ^TMP($J,2)
"RTN","BPSUSCR4",13,0)
COLLECT(BPARR) ;
"RTN","BPSUSCR4",14,0)
 N TFILE,CFILE,SDT,STATUS,IEN59,VART,LSTUDT,CD0,DATA
"RTN","BPSUSCR4",15,0)
 N RX,REFILL,NAME,SSN,INSCO,FILLDT,SEQ,ITEM,MESSAGE
"RTN","BPSUSCR4",16,0)
 K BPBDT,BPEDT
"RTN","BPSUSCR4",17,0)
 K ^TMP($J),^TMP("BPSUSCR",$J)
"RTN","BPSUSCR4",18,0)
 S VALMCNT=0,TFILE=9002313.59,CFILE=9002313.02
"RTN","BPSUSCR4",19,0)
 S BPBDT=BPARR("BDT") ;start date and time
"RTN","BPSUSCR4",20,0)
 S BPEDT=BPARR("EDT") ;end date and time
"RTN","BPSUSCR4",21,0)
 ;
"RTN","BPSUSCR4",22,0)
 ; Loop through all statii from 0 to 98
"RTN","BPSUSCR4",23,0)
 S STATUS=-1
"RTN","BPSUSCR4",24,0)
 F  S STATUS=$O(^BPST("AD",STATUS)) Q:STATUS>98!(STATUS="")  D
"RTN","BPSUSCR4",25,0)
 . ; Status of 31 is Insurer Asleep - these will process when insurer wakes up
"RTN","BPSUSCR4",26,0)
 . ; Insurer asleep disabled for Phase III so these should appear on the report for now
"RTN","BPSUSCR4",27,0)
 . ;I STATUS=31 Q
"RTN","BPSUSCR4",28,0)
 . S IEN59=0
"RTN","BPSUSCR4",29,0)
 . F  S IEN59=$O(^BPST("AD",STATUS,IEN59)) Q:'IEN59  D
"RTN","BPSUSCR4",30,0)
 .. S VART=$G(^BPST(IEN59,0)) Q:VART=""
"RTN","BPSUSCR4",31,0)
 .. S LSTUDT=$$GET1^DIQ(TFILE,IEN59,7,"I")
"RTN","BPSUSCR4",32,0)
 .. I LSTUDT<BPBDT!(LSTUDT>BPEDT) Q
"RTN","BPSUSCR4",33,0)
 .. S LSTUDT=$P(LSTUDT,".",1)
"RTN","BPSUSCR4",34,0)
 .. I LSTUDT="" Q
"RTN","BPSUSCR4",35,0)
 .. S RX=$$GET1^DIQ(TFILE,IEN59,1.11)
"RTN","BPSUSCR4",36,0)
 .. S REFILL=$$GET1^DIQ(TFILE,IEN59,9)
"RTN","BPSUSCR4",37,0)
 .. S CD0=$$GET1^DIQ(TFILE,IEN59,3,"I")
"RTN","BPSUSCR4",38,0)
 .. I CD0'="" D
"RTN","BPSUSCR4",39,0)
 ... S FILLDT=$$GET1^DIQ(CFILE,CD0,401),FILLDT=$$HL7TFM^XLFDT(FILLDT)
"RTN","BPSUSCR4",40,0)
 .. I CD0="" D
"RTN","BPSUSCR4",41,0)
 ... S FILLDT=$P($G(^BPST(IEN59,12)),"^",2)
"RTN","BPSUSCR4",42,0)
 .. S NAME=$$GET1^DIQ(TFILE,IEN59,5,"E")
"RTN","BPSUSCR4",43,0)
 .. S SSN="",VART=$G(^BPST(IEN59,0))
"RTN","BPSUSCR4",44,0)
 .. I $P(VART,"^",6)]"" S SSN=$P($G(^DPT($P(VART,"^",6),0)),"^",9),SSN=$E(SSN,$L(SSN)-3,$L(SSN))
"RTN","BPSUSCR4",45,0)
 .. S INSCO=$P($G(^BPST(IEN59,10,1,0)),"^",7)
"RTN","BPSUSCR4",46,0)
 .. S ^TMP($J,1,LSTUDT,IEN59)=NAME_U_SSN_U_RX_U_REFILL_U_FILLDT_U_INSCO_U_STATUS
"RTN","BPSUSCR4",47,0)
 ;
"RTN","BPSUSCR4",48,0)
 ; Now that the data is sorted, format it and build list for display
"RTN","BPSUSCR4",49,0)
 S (SEQ,ITEM)=0
"RTN","BPSUSCR4",50,0)
 S SDT="" F  S SDT=$O(^TMP($J,1,SDT)) Q:SDT=""  D
"RTN","BPSUSCR4",51,0)
 . S IEN59="" F  S IEN59=$O(^TMP($J,1,SDT,IEN59)) Q:IEN59=""  D
"RTN","BPSUSCR4",52,0)
 .. S DATA=$G(^TMP($J,1,SDT,IEN59))
"RTN","BPSUSCR4",53,0)
 .. S LSTUDT=$$FORMAT($$FMTE^XLFDT(SDT,"5Z"),10)
"RTN","BPSUSCR4",54,0)
 .. S NAME=$$FORMAT($P(DATA,U,1),20)
"RTN","BPSUSCR4",55,0)
 .. S SSN=$$FORMAT($P(DATA,U,2),4)
"RTN","BPSUSCR4",56,0)
 .. S RX=$$FORMAT($P(DATA,U,3),12)
"RTN","BPSUSCR4",57,0)
 .. S REFILL=$J($P(DATA,U,4),2)
"RTN","BPSUSCR4",58,0)
 .. S FILLDT=$$FMTE^XLFDT($P(DATA,U,5),"5Z")
"RTN","BPSUSCR4",59,0)
 .. S INSCO=$$FORMAT($P(DATA,U,6),12)
"RTN","BPSUSCR4",60,0)
 .. S SEQ=SEQ+1
"RTN","BPSUSCR4",61,0)
 .. S ITEM=ITEM+1
"RTN","BPSUSCR4",62,0)
 .. S ^TMP("BPSUSCR",$J,SEQ,0)=$J(ITEM,3)_" "_LSTUDT_" "_NAME_" "_SSN_" "_RX_" "_REFILL_" "_FILLDT_" "_INSCO
"RTN","BPSUSCR4",63,0)
 .. S ^TMP($J,2,ITEM,IEN59)=""
"RTN","BPSUSCR4",64,0)
 .. S SEQ=SEQ+1
"RTN","BPSUSCR4",65,0)
 .. S MESSAGE=$$STATI^BPSOSU($P(DATA,U,7))
"RTN","BPSUSCR4",66,0)
 .. I $E(MESSAGE,1)="?" S MESSAGE="Unknown Status"
"RTN","BPSUSCR4",67,0)
 .. S ^TMP("BPSUSCR",$J,SEQ,0)="    In Progress - "_MESSAGE
"RTN","BPSUSCR4",68,0)
 S VALMCNT=SEQ
"RTN","BPSUSCR4",69,0)
 Q
"RTN","BPSUSCR4",70,0)
 ;
"RTN","BPSUSCR4",71,0)
FORMAT(D1,LEN) ;
"RTN","BPSUSCR4",72,0)
 N OUT
"RTN","BPSUSCR4",73,0)
 S D1=$G(D1),LEN=$G(LEN)
"RTN","BPSUSCR4",74,0)
 S D1=$$NOSPACE(D1)
"RTN","BPSUSCR4",75,0)
 S OUT=$E($E(D1,1,LEN)_$J("",LEN),1,LEN)
"RTN","BPSUSCR4",76,0)
 Q OUT
"RTN","BPSUSCR4",77,0)
NOSPACE(VAR) ;
"RTN","BPSUSCR4",78,0)
 N RTN,SEQ,I
"RTN","BPSUSCR4",79,0)
 S RTN=""
"RTN","BPSUSCR4",80,0)
 F I=1:1:$L(VAR," ") I $P(VAR," ",I)'="" S SEQ=$G(SEQ)+1,$P(RTN," ",SEQ)=$P(VAR," ",I)
"RTN","BPSUSCR4",81,0)
 Q RTN
"RTN","BPSUTIL")
0^17^B4023220
"RTN","BPSUTIL",1,0)
BPSUTIL ;BHAM ISC/FLS - General Utility functions ;06/01/2004
"RTN","BPSUTIL",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3**;JUN 2004;Build 20
"RTN","BPSUTIL",3,0)
 Q
"RTN","BPSUTIL",4,0)
DIC19 ; Convert menu item descriptions to upper case
"RTN","BPSUTIL",5,0)
 N DIC,ENT,GLO,TXT,OPT,VAR,NEW,I
"RTN","BPSUTIL",6,0)
 S DIC=19,GLO="^DIC",TXT="BPS"
"RTN","BPSUTIL",7,0)
 F  S TXT=$O(@GLO@(DIC,"B",TXT)) Q:(TXT]"BPT")!(TXT="")  D
"RTN","BPSUTIL",8,0)
 .  S ENT=$O(@GLO@(DIC,"B",TXT,""))
"RTN","BPSUTIL",9,0)
 .  S VAR=$G(@GLO@(DIC,ENT,0)) Q:VAR=""
"RTN","BPSUTIL",10,0)
 .  S OPT=$P(VAR,"^",2),NEW=OPT
"RTN","BPSUTIL",11,0)
 .  F I=1:1:$L(OPT," ") D
"RTN","BPSUTIL",12,0)
 .  .  S $P(NEW," ",I)=$$MAKEUPR($P(OPT," ",I))
"RTN","BPSUTIL",13,0)
 .  W !,"NEW ",NEW
"RTN","BPSUTIL",14,0)
 .  W !,"OLD ",OPT
"RTN","BPSUTIL",15,0)
 .  Q
"RTN","BPSUTIL",16,0)
 Q
"RTN","BPSUTIL",17,0)
 ;
"RTN","BPSUTIL",18,0)
MAKEUPR(X) ;
"RTN","BPSUTIL",19,0)
 N TST,VAL
"RTN","BPSUTIL",20,0)
 S VAL=X
"RTN","BPSUTIL",21,0)
 S TST=$$UPPER(X)
"RTN","BPSUTIL",22,0)
 I $L(TST)>2,"|THE|FOR|NOW|AND|FOR|"'[("|"_TST_"|") S $E(VAL)=$$UPPER($E(VAL))
"RTN","BPSUTIL",23,0)
 Q VAL
"RTN","BPSUTIL",24,0)
 ;
"RTN","BPSUTIL",25,0)
UPPER(X) ;
"RTN","BPSUTIL",26,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","BPSUTIL",27,0)
 ;
"RTN","BPSUTIL",28,0)
ECMEON(SITE) ; - Returns 1 if ECME is turned ON or 0 if not
"RTN","BPSUTIL",29,0)
 ; SITE - Pointer to #59 (OUTPATIENT SITE)
"RTN","BPSUTIL",30,0)
 Q:'$G(SITE) 0
"RTN","BPSUTIL",31,0)
 Q:'$D(^BPS(9002313.56,"C",SITE)) 0
"RTN","BPSUTIL",32,0)
 N PHRMIEN S PHRMIEN=$O(^BPS(9002313.56,"C",SITE,0))
"RTN","BPSUTIL",33,0)
 I PHRMIEN Q $$BPSACTV^BPSUTIL(PHRMIEN)
"RTN","BPSUTIL",34,0)
 Q 0
"RTN","BPSUTIL",35,0)
 ;
"RTN","BPSUTIL",36,0)
CMOPON(SITE) ; - Returns 1 if CMOP is turned ON for ECME or 0 if not
"RTN","BPSUTIL",37,0)
 ; SITE - Pointer to #59 (OUTPATIENT SITE)
"RTN","BPSUTIL",38,0)
 Q:'$G(SITE) 0
"RTN","BPSUTIL",39,0)
 N PHRM S PHRM=$O(^BPS(9002313.56,"C",SITE,0)) I 'PHRM Q 0
"RTN","BPSUTIL",40,0)
 Q $$GET1^DIQ(9002313.56,PHRM,1,"I")
"RTN","BPSUTIL",41,0)
 ;
"RTN","BPSUTIL",42,0)
 ;Function returns STATUS flag from BPS PHARMACIES (file #56)
"RTN","BPSUTIL",43,0)
 ; Returns '1' for active or '0' for inactive BPS Pharmacy
"RTN","BPSUTIL",44,0)
BPSACTV(BPSPHARM) ; 
"RTN","BPSUTIL",45,0)
 Q:'$G(BPSPHARM) 0
"RTN","BPSUTIL",46,0)
 Q +$P($G(^BPS(9002313.56,BPSPHARM,0)),U,10)
"RTN","BPSUTIL",47,0)
 ;
"RTN","BPSUTIL",48,0)
 ;Function to return field data from DRUG file (#50)
"RTN","BPSUTIL",49,0)
 ; Parameters
"RTN","BPSUTIL",50,0)
 ;  DRGIEN - IEN of DRUG FILE #50
"RTN","BPSUTIL",51,0)
 ;  FLDNUM - Field Number(s) (like .01)
"RTN","BPSUTIL",52,0)
 ;  INTEXT - Specifies internal or external value of returned field
"RTN","BPSUTIL",53,0)
 ;         - optional, defaults to "I"
"RTN","BPSUTIL",54,0)
 ;  DRGARR - Array to return value(s).  Optional.  Pass by reference.
"RTN","BPSUTIL",55,0)
 ;           See EN^DIQ documentation for variable DIQ
"RTN","BPSUTIL",56,0)
 ;
"RTN","BPSUTIL",57,0)
 ; Function returns field data if one field is specified.  If
"RTN","BPSUTIL",58,0)
 ;   multiple fields, the function will return "" and the field
"RTN","BPSUTIL",59,0)
 ;   values are returned in DRGARR    
"RTN","BPSUTIL",60,0)
DRUGDIE(DRGIEN,FLDNUM,INTEXT,DRGARR) ; Return field values for Drug file 
"RTN","BPSUTIL",61,0)
 I $G(DRGIEN)=""!($G(FLDNUM)="") Q ""
"RTN","BPSUTIL",62,0)
 N DIQ,PSSDIY
"RTN","BPSUTIL",63,0)
 I $G(INTEXT)'="E" S INTEXT="I"
"RTN","BPSUTIL",64,0)
 S DIQ="DRGARR",DIQ(0)=INTEXT
"RTN","BPSUTIL",65,0)
 D EN^PSSDI(50,"BPS",50,.FLDNUM,.DRGIEN,.DIQ)
"RTN","BPSUTIL",66,0)
 Q $G(DRGARR(50,DRGIEN,FLDNUM,INTEXT))
"RTN","BPSUTIL",67,0)
 ;
"RTN","BPSUTIL",68,0)
 ;Function to do lookup on DRUG file (#50)
"RTN","BPSUTIL",69,0)
 ; Paramters
"RTN","BPSUTIL",70,0)
 ;   DIC - Setup per fileman documentation for call to ^DIC
"RTN","BPSUTIL",71,0)
 ;
"RTN","BPSUTIL",72,0)
 ; Returns variables as documented for call to ^DIC except X
"RTN","BPSUTIL",73,0)
 ;   will not be returned.
"RTN","BPSUTIL",74,0)
DRUGDIC(DIC) ; Look up on DRUG FILE (#50)
"RTN","BPSUTIL",75,0)
 I '$G(DIC) Q
"RTN","BPSUTIL",76,0)
 N PSSDIY
"RTN","BPSUTIL",77,0)
 D DIC^PSSDI(50,"BPS",.DIC)
"RTN","BPSUTIL",78,0)
 Q
"RTN","BPSUTIL",79,0)
 ;
"UP",9002313.56,9002313.5601,-1)
9002313.56^OPSITE
"UP",9002313.56,9002313.5601,0)
9002313.5601
"VER")
8.0^22.0
"^DD",9002313.02,9002313.02,906,0)
REOPENED DATE/TIME^D^^900;6^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",9002313.02,9002313.02,906,3)
Enter the date and time when the claim was re-opened
"^DD",9002313.02,9002313.02,906,21,0)
^^1^1^3060523^
"^DD",9002313.02,9002313.02,906,21,1,0)
Date and time when the claim was re-opened.
"^DD",9002313.02,9002313.02,906,"DT")
3060614
"^DD",9002313.02,9002313.02,907,0)
REOPENED BY^P200'^VA(200,^900;7^Q
"^DD",9002313.02,9002313.02,907,3)
Enter the user who re-opened the claim
"^DD",9002313.02,9002313.02,907,21,0)
^^1^1^3060523^
"^DD",9002313.02,9002313.02,907,21,1,0)
The system user who re-opened the claim.
"^DD",9002313.02,9002313.02,907,"DT")
3060614
"^DD",9002313.02,9002313.02,908,0)
REOPENED COMMENT^F^^900;8^K:$L(X)>40!($L(X)<1) X
"^DD",9002313.02,9002313.02,908,3)
Enter the reason for the re-opening of the claim
"^DD",9002313.02,9002313.02,908,21,0)
^^1^1^3060614^
"^DD",9002313.02,9002313.02,908,21,1,0)
User comments for the re-opening of the claim.
"^DD",9002313.02,9002313.02,908,"DT")
3060614
"^DD",9002313.51,9002313.51,1.13,0)
NCPDP OVERRIDES^P9002313.511'^BPS(9002313.511,^1;13^Q
"^DD",9002313.51,9002313.51,1.13,3)
Enter the record that has the NCPDP override data
"^DD",9002313.51,9002313.51,1.13,21,0)
^^2^2^3060614^
"^DD",9002313.51,9002313.51,1.13,21,1,0)
This is a pointer to the BPS NCPDP OVERRIDES table, which contains the
"^DD",9002313.51,9002313.51,1.13,21,2,0)
override data for the NCPDP fields.
"^DD",9002313.51,9002313.51,1.13,"DT")
3060614
"^DD",9002313.56,9002313.56,.1,0)
STATUS^RS^1:ACTIVE;0:INACTIVE;^0;10^Q
"^DD",9002313.56,9002313.56,.1,3)
Enter '1' for active or '0' for inactive
"^DD",9002313.56,9002313.56,.1,21,0)
^^2^2^3060601^
"^DD",9002313.56,9002313.56,.1,21,1,0)
Indicates whether a BPS Pharmacy is active or inactive. If active, claims 
"^DD",9002313.56,9002313.56,.1,21,2,0)
will be processed through ECME.
"^DD",9002313.56,9002313.56,.1,"DT")
3060602
"^DD",9002313.56,9002313.56,13800,0)
OUTPATIENT SITE^9002313.5601P^^OPSITE;0
"^DD",9002313.56,9002313.5601,0)
OUTPATIENT SITE SUB-FIELD^^1^2
"^DD",9002313.56,9002313.5601,0,"NM","OUTPATIENT SITE")

"^DD",9002313.56,9002313.5601,.01,0)
OUTPATIENT SITE^MP59'X^PS(59,^0;1^I $D(^BPS(9002313.56,"C",X)) D EN^DDIOL("** This site already linked.") K X
"^DD",9002313.56,9002313.5601,.01,1,0)
^.1^^-1
"^DD",9002313.56,9002313.5601,.01,1,1,0)
9002313.5601^B
"^DD",9002313.56,9002313.5601,.01,1,1,1)
S ^BPS(9002313.56,DA(1),"OPSITE","B",$E(X,1,30),DA)=""
"^DD",9002313.56,9002313.5601,.01,1,1,2)
K ^BPS(9002313.56,DA(1),"OPSITE","B",$E(X,1,30),DA)
"^DD",9002313.56,9002313.5601,.01,1,2,0)
9002313.56^C
"^DD",9002313.56,9002313.5601,.01,1,2,1)
S ^BPS(9002313.56,"C",$E(X,1,30),DA(1),DA)=""
"^DD",9002313.56,9002313.5601,.01,1,2,2)
K ^BPS(9002313.56,"C",$E(X,1,30),DA(1),DA)
"^DD",9002313.56,9002313.5601,.01,1,2,"DT")
3010119
"^DD",9002313.56,9002313.5601,.01,3)
Enter one or more OUTPATIENT SITES to associate with this ECME Pharmacy entry.
"^DD",9002313.56,9002313.5601,.01,21,0)
^.001^2^2^3060616^^
"^DD",9002313.56,9002313.5601,.01,21,1,0)
One or more of the VISTA pharmacy package's Outpatient Sites (File 59) 
"^DD",9002313.56,9002313.5601,.01,21,2,0)
must be associated with the ECME Pharmacy entry.
"^DD",9002313.56,9002313.5601,.01,"DT")
3060621
**INSTALL NAME**
PSO*7.0*247
"BLD",6749,0)
PSO*7.0*247^OUTPATIENT PHARMACY^0^3060912^y
"BLD",6749,1,0)
^9.61A^56^56^3060808^^^
"BLD",6749,1,1,0)
This patch supports the National Council for Prescription Drug Programs (NCPDP) 
"BLD",6749,1,2,0)
standard which was adopted under the Healthcare Insurance Portability and 
"BLD",6749,1,3,0)
Accountability Act (HIPAA) for pharmacy claims. This patch is one of six to be
"BLD",6749,1,4,0)
released.  Three patches will be released in a KIDS multi-build distribution 
"BLD",6749,1,5,0)
containing: BPS*1*3, PSO*7*247, and IB*2*342.  Three patches will be released
"BLD",6749,1,6,0)
individually and they are: PRCA*4.5*247, PSX*2*62, and PSS*1*115.  There is no 
"BLD",6749,1,7,0)
recommended order to installing the stand-alone patches and they can be 
"BLD",6749,1,8,0)
installed independently of the multi-build as there is no dependency between 
"BLD",6749,1,9,0)
the multi-build distribution and the stand-alone patches.  For more specific 
"BLD",6749,1,10,0)
instructions please refer to the installation steps provided in each of the 
"BLD",6749,1,11,0)
stand-alone patches.
"BLD",6749,1,12,0)
 
"BLD",6749,1,13,0)
Enhancements included in the release of the six patches are a new option that 
"BLD",6749,1,14,0)
will enable the user to reopen a closed Electronic Claims Management Engine
"BLD",6749,1,15,0)
(ECME) claim; updates to the Rx Activity Log; and permanent storage of Claims
"BLD",6749,1,16,0)
activity information as reported by the ECME Billing Events Report.   
"BLD",6749,1,17,0)
    
"BLD",6749,1,18,0)
This patch modifies the Outpatient Pharmacy (OP) V. 7.0 application in the
"BLD",6749,1,19,0)
following areas: 
"BLD",6749,1,20,0)
 
"BLD",6749,1,21,0)
1. When the DAW CODE was edited on a released Consolidated Mail Outpatient 
"BLD",6749,1,22,0)
   Pharmacy (CMOP)  prescription it was not triggering an automatic claim 
"BLD",6749,1,23,0)
   reversal/re-submit to the third party payer. This patch corrects the 
"BLD",6749,1,24,0)
   problem. Editing the DAW CODE on a released CMOP prescription will work
"BLD",6749,1,25,0)
   similar to editing a WINDOW prescription, it will reverse/re-submit a
"BLD",6749,1,26,0)
   claim.
"BLD",6749,1,27,0)
 
"BLD",6749,1,28,0)
2. The ECME Reject section of the prescription activity log was changed in
"BLD",6749,1,29,0)
   the following ways: 
"BLD",6749,1,30,0)
   
"BLD",6749,1,31,0)
   2.1) The column header "Date/Time" was changed to "Date/Time Rcvd" because
"BLD",6749,1,32,0)
        a new column is being created (see 2.3).
"BLD",6749,1,33,0)
   2.2) "DRUG UTILIZATION REVIEW" in the "Reject" column will now display as
"BLD",6749,1,34,0)
        "DUR" for space saving purposes.
"BLD",6749,1,35,0)
   2.3) A new column is being created called "Date/Time Resolved" on the
"BLD",6749,1,36,0)
        right hand side to display the Date/Time the reject was resolved.
"BLD",6749,1,37,0)
 
"BLD",6749,1,38,0)
3. The option Third Party Payer Rejects - Worklist [PSO REJECTS WORKLIST]
"BLD",6749,1,39,0)
   is being changed to allow the user to print a label for window
"BLD",6749,1,40,0)
   prescriptions after a reject is resolved. The label print prompt will only
"BLD",6749,1,41,0)
   be available if the prescription is active and no label was printed for
"BLD",6749,1,42,0)
   the fill which reject was resolved. The following prompts will be 
"BLD",6749,1,43,0)
   presented to the user:
"BLD",6749,1,44,0)
 
"BLD",6749,1,45,0)
      Print Label? YES // YES
"BLD",6749,1,46,0)
    
"BLD",6749,1,47,0)
      Select LABEL DEVICE:
"BLD",6749,1,48,0)
 
"BLD",6749,1,49,0)
4. When the user resolved a third party reject using the 'Override Reject'
"BLD",6749,1,50,0)
   action from the Third Party Payer Rejects - Worklist [PSO REJECTS 
"BLD",6749,1,51,0)
   WORKLIST] option, the entry in the Prescription activity log 
"BLD",6749,1,52,0)
   corresponding to this event was not displaying the NCPDP override codes
"BLD",6749,1,53,0)
   entered by the user. Before this fix the comment displayed as 
"BLD",6749,1,54,0)
   'Submitted to ECME:REJECT WORKLIST-E PAYABLE'. After this patch is
"BLD",6749,1,55,0)
   installed the comment will be logged as 'Submitted to ECME:REJECT 
"BLD",6749,1,56,0)
   WORKLIST-DUR OVERRIDE CODES(NN/AS/1B)-E PAYABLE', as an example.
"BLD",6749,4,0)
^9.64PA^^
"BLD",6749,6.3)
18
"BLD",6749,"KRN",0)
^9.67PA^8989.52^19
"BLD",6749,"KRN",.4,0)
.4
"BLD",6749,"KRN",.401,0)
.401
"BLD",6749,"KRN",.402,0)
.402
"BLD",6749,"KRN",.403,0)
.403
"BLD",6749,"KRN",.5,0)
.5
"BLD",6749,"KRN",.84,0)
.84
"BLD",6749,"KRN",3.6,0)
3.6
"BLD",6749,"KRN",3.8,0)
3.8
"BLD",6749,"KRN",9.2,0)
9.2
"BLD",6749,"KRN",9.8,0)
9.8
"BLD",6749,"KRN",9.8,"NM",0)
^9.68A^13^13
"BLD",6749,"KRN",9.8,"NM",1,0)
PSOREJUT^^0^27390673
"BLD",6749,"KRN",9.8,"NM",2,0)
PSOREJU1^^0^55340266
"BLD",6749,"KRN",9.8,"NM",3,0)
PSOORED2^^0^63154079
"BLD",6749,"KRN",9.8,"NM",4,0)
PSOORED6^^0^59169980
"BLD",6749,"KRN",9.8,"NM",5,0)
PSOORAL1^^0^60154792
"BLD",6749,"KRN",9.8,"NM",6,0)
PSOREJP1^^0^63661734
"BLD",6749,"KRN",9.8,"NM",7,0)
PSOBPSUT^^0^49521138
"BLD",6749,"KRN",9.8,"NM",8,0)
PSOCSRL^^0^36467799
"BLD",6749,"KRN",9.8,"NM",9,0)
PSODISP^^0^54704509
"BLD",6749,"KRN",9.8,"NM",10,0)
PSOREJP2^^0^51774949
"BLD",6749,"KRN",9.8,"NM",11,0)
PSOLSET^^0^29903046
"BLD",6749,"KRN",9.8,"NM",12,0)
PSODISPS^^0^30402405
"BLD",6749,"KRN",9.8,"NM",13,0)
PSOORED7^^0^15934455
"BLD",6749,"KRN",9.8,"NM","B","PSOBPSUT",7)

"BLD",6749,"KRN",9.8,"NM","B","PSOCSRL",8)

"BLD",6749,"KRN",9.8,"NM","B","PSODISP",9)

"BLD",6749,"KRN",9.8,"NM","B","PSODISPS",12)

"BLD",6749,"KRN",9.8,"NM","B","PSOLSET",11)

"BLD",6749,"KRN",9.8,"NM","B","PSOORAL1",5)

"BLD",6749,"KRN",9.8,"NM","B","PSOORED2",3)

"BLD",6749,"KRN",9.8,"NM","B","PSOORED6",4)

"BLD",6749,"KRN",9.8,"NM","B","PSOORED7",13)

"BLD",6749,"KRN",9.8,"NM","B","PSOREJP1",6)

"BLD",6749,"KRN",9.8,"NM","B","PSOREJP2",10)

"BLD",6749,"KRN",9.8,"NM","B","PSOREJU1",2)

"BLD",6749,"KRN",9.8,"NM","B","PSOREJUT",1)

"BLD",6749,"KRN",19,0)
19
"BLD",6749,"KRN",19.1,0)
19.1
"BLD",6749,"KRN",101,0)
101
"BLD",6749,"KRN",409.61,0)
409.61
"BLD",6749,"KRN",771,0)
771
"BLD",6749,"KRN",870,0)
870
"BLD",6749,"KRN",8989.51,0)
8989.51
"BLD",6749,"KRN",8989.52,0)
8989.52
"BLD",6749,"KRN",8994,0)
8994
"BLD",6749,"KRN","B",.4,.4)

"BLD",6749,"KRN","B",.401,.401)

"BLD",6749,"KRN","B",.402,.402)

"BLD",6749,"KRN","B",.403,.403)

"BLD",6749,"KRN","B",.5,.5)

"BLD",6749,"KRN","B",.84,.84)

"BLD",6749,"KRN","B",3.6,3.6)

"BLD",6749,"KRN","B",3.8,3.8)

"BLD",6749,"KRN","B",9.2,9.2)

"BLD",6749,"KRN","B",9.8,9.8)

"BLD",6749,"KRN","B",19,19)

"BLD",6749,"KRN","B",19.1,19.1)

"BLD",6749,"KRN","B",101,101)

"BLD",6749,"KRN","B",409.61,409.61)

"BLD",6749,"KRN","B",771,771)

"BLD",6749,"KRN","B",870,870)

"BLD",6749,"KRN","B",8989.51,8989.51)

"BLD",6749,"KRN","B",8989.52,8989.52)

"BLD",6749,"KRN","B",8994,8994)

"BLD",6749,"QUES",0)
^9.62^^
"BLD",6749,"REQB",0)
^9.611^1^1
"BLD",6749,"REQB",1,0)
PSO*7.0*148^2
"BLD",6749,"REQB","B","PSO*7.0*148",1)

"MBREQ")
1
"PKG",134,-1)
1^1
"PKG",134,0)
OUTPATIENT PHARMACY^PSO^OUTPATIENT LABELS, PROFILE, INVENTORY, PRESCRIPTIONS
"PKG",134,22,0)
^9.49I^1^1
"PKG",134,22,1,0)
7.0^2971216^2980417^1271
"PKG",134,22,1,"PAH",1,0)
247^3060912^35199
"PKG",134,22,1,"PAH",1,1,0)
^^56^56^3060912
"PKG",134,22,1,"PAH",1,1,1,0)
This patch supports the National Council for Prescription Drug Programs (NCPDP) 
"PKG",134,22,1,"PAH",1,1,2,0)
standard which was adopted under the Healthcare Insurance Portability and 
"PKG",134,22,1,"PAH",1,1,3,0)
Accountability Act (HIPAA) for pharmacy claims. This patch is one of six to be
"PKG",134,22,1,"PAH",1,1,4,0)
released.  Three patches will be released in a KIDS multi-build distribution 
"PKG",134,22,1,"PAH",1,1,5,0)
containing: BPS*1*3, PSO*7*247, and IB*2*342.  Three patches will be released
"PKG",134,22,1,"PAH",1,1,6,0)
individually and they are: PRCA*4.5*247, PSX*2*62, and PSS*1*115.  There is no 
"PKG",134,22,1,"PAH",1,1,7,0)
recommended order to installing the stand-alone patches and they can be 
"PKG",134,22,1,"PAH",1,1,8,0)
installed independently of the multi-build as there is no dependency between 
"PKG",134,22,1,"PAH",1,1,9,0)
the multi-build distribution and the stand-alone patches.  For more specific 
"PKG",134,22,1,"PAH",1,1,10,0)
instructions please refer to the installation steps provided in each of the 
"PKG",134,22,1,"PAH",1,1,11,0)
stand-alone patches.
"PKG",134,22,1,"PAH",1,1,12,0)
 
"PKG",134,22,1,"PAH",1,1,13,0)
Enhancements included in the release of the six patches are a new option that 
"PKG",134,22,1,"PAH",1,1,14,0)
will enable the user to reopen a closed Electronic Claims Management Engine
"PKG",134,22,1,"PAH",1,1,15,0)
(ECME) claim; updates to the Rx Activity Log; and permanent storage of Claims
"PKG",134,22,1,"PAH",1,1,16,0)
activity information as reported by the ECME Billing Events Report.   
"PKG",134,22,1,"PAH",1,1,17,0)
    
"PKG",134,22,1,"PAH",1,1,18,0)
This patch modifies the Outpatient Pharmacy (OP) V. 7.0 application in the
"PKG",134,22,1,"PAH",1,1,19,0)
following areas: 
"PKG",134,22,1,"PAH",1,1,20,0)
 
"PKG",134,22,1,"PAH",1,1,21,0)
1. When the DAW CODE was edited on a released Consolidated Mail Outpatient 
"PKG",134,22,1,"PAH",1,1,22,0)
   Pharmacy (CMOP)  prescription it was not triggering an automatic claim 
"PKG",134,22,1,"PAH",1,1,23,0)
   reversal/re-submit to the third party payer. This patch corrects the 
"PKG",134,22,1,"PAH",1,1,24,0)
   problem. Editing the DAW CODE on a released CMOP prescription will work
"PKG",134,22,1,"PAH",1,1,25,0)
   similar to editing a WINDOW prescription, it will reverse/re-submit a
"PKG",134,22,1,"PAH",1,1,26,0)
   claim.
"PKG",134,22,1,"PAH",1,1,27,0)
 
"PKG",134,22,1,"PAH",1,1,28,0)
2. The ECME Reject section of the prescription activity log was changed in
"PKG",134,22,1,"PAH",1,1,29,0)
   the following ways: 
"PKG",134,22,1,"PAH",1,1,30,0)
   
"PKG",134,22,1,"PAH",1,1,31,0)
   2.1) The column header "Date/Time" was changed to "Date/Time Rcvd" because
"PKG",134,22,1,"PAH",1,1,32,0)
        a new column is being created (see 2.3).
"PKG",134,22,1,"PAH",1,1,33,0)
   2.2) "DRUG UTILIZATION REVIEW" in the "Reject" column will now display as
"PKG",134,22,1,"PAH",1,1,34,0)
        "DUR" for space saving purposes.
"PKG",134,22,1,"PAH",1,1,35,0)
   2.3) A new column is being created called "Date/Time Resolved" on the
"PKG",134,22,1,"PAH",1,1,36,0)
        right hand side to display the Date/Time the reject was resolved.
"PKG",134,22,1,"PAH",1,1,37,0)
 
"PKG",134,22,1,"PAH",1,1,38,0)
3. The option Third Party Payer Rejects - Worklist [PSO REJECTS WORKLIST]
"PKG",134,22,1,"PAH",1,1,39,0)
   is being changed to allow the user to print a label for window
"PKG",134,22,1,"PAH",1,1,40,0)
   prescriptions after a reject is resolved. The label print prompt will only
"PKG",134,22,1,"PAH",1,1,41,0)
   be available if the prescription is active and no label was printed for
"PKG",134,22,1,"PAH",1,1,42,0)
   the fill which reject was resolved. The following prompts will be 
"PKG",134,22,1,"PAH",1,1,43,0)
   presented to the user:
"PKG",134,22,1,"PAH",1,1,44,0)
 
"PKG",134,22,1,"PAH",1,1,45,0)
      Print Label? YES // YES
"PKG",134,22,1,"PAH",1,1,46,0)
    
"PKG",134,22,1,"PAH",1,1,47,0)
      Select LABEL DEVICE:
"PKG",134,22,1,"PAH",1,1,48,0)
 
"PKG",134,22,1,"PAH",1,1,49,0)
4. When the user resolved a third party reject using the 'Override Reject'
"PKG",134,22,1,"PAH",1,1,50,0)
   action from the Third Party Payer Rejects - Worklist [PSO REJECTS 
"PKG",134,22,1,"PAH",1,1,51,0)
   WORKLIST] option, the entry in the Prescription activity log 
"PKG",134,22,1,"PAH",1,1,52,0)
   corresponding to this event was not displaying the NCPDP override codes
"PKG",134,22,1,"PAH",1,1,53,0)
   entered by the user. Before this fix the comment displayed as 
"PKG",134,22,1,"PAH",1,1,54,0)
   'Submitted to ECME:REJECT WORKLIST-E PAYABLE'. After this patch is
"PKG",134,22,1,"PAH",1,1,55,0)
   installed the comment will be logged as 'Submitted to ECME:REJECT 
"PKG",134,22,1,"PAH",1,1,56,0)
   WORKLIST-DUR OVERRIDE CODES(NN/AS/1B)-E PAYABLE', as an example.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
13
"RTN","PSOBPSUT")
0^7^B49521138
"RTN","PSOBPSUT",1,0)
PSOBPSUT ;BIRM/MFR - BPS (ECME) Utilities ; 07 Jun 2005  8:39 PM
"RTN","PSOBPSUT",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247**;DEC 1997;Build 18
"RTN","PSOBPSUT",3,0)
 ;Reference to $$ECMEON^BPSUTIL supported by IA 4410
"RTN","PSOBPSUT",4,0)
 ;Reference to IBSEND^BPSECMP2 supported by IA 4411
"RTN","PSOBPSUT",5,0)
 ;Reference to $$STATUS^BPSOSRX supported by IA 4412
"RTN","PSOBPSUT",6,0)
 ;Reference to $$NDCFMT^PSSNDCUT supported by IA 4707
"RTN","PSOBPSUT",7,0)
 ;Reference to $$CLAIM^BPSBUTL supported by IA 4719
"RTN","PSOBPSUT",8,0)
 ;Reference to ^PS(55 supported by IA 2228
"RTN","PSOBPSUT",9,0)
 ;Reference to ^PSDRUG( supported by IA 221
"RTN","PSOBPSUT",10,0)
 ;Reference to ^PSDRUG("AQ" supported by IA 3165
"RTN","PSOBPSUT",11,0)
 ;
"RTN","PSOBPSUT",12,0)
ECME(RX) ; Returns "e" if Rx/Refill is Electronically Billable (3rd party)
"RTN","PSOBPSUT",13,0)
 Q $S($$STATUS^BPSOSRX(RX,$$LSTRFL^PSOBPSU1(RX))'="":"e",1:"")
"RTN","PSOBPSUT",14,0)
 ;
"RTN","PSOBPSUT",15,0)
STATUS(RX,RFL) ; Returns the Rx's ECME Status (calls STATUS^BPSOSRX)
"RTN","PSOBPSUT",16,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",17,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",18,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",19,0)
 Q $P($$STATUS^BPSOSRX(RX,RFL),"^")
"RTN","PSOBPSUT",20,0)
 ;
"RTN","PSOBPSUT",21,0)
SUBMIT(RX,RFL,IGRL,IGCMP) ; Returns whether the Rx should be submitted to ECME at the moment or not
"RTN","PSOBPSUT",22,0)
 ; Input:  (r) RX   - Rx IEN (#52) 
"RTN","PSOBPSUT",23,0)
 ;         (o) RFL  - Refill # (Def.: most recent)
"RTN","PSOBPSUT",24,0)
 ;         (o) IGRL - Ignore Release Date? (1-YES/0-NO) (Def.: 0 - NO)
"RTN","PSOBPSUT",25,0)
 ;         (o) IGCMP- Ignore CMOP/Suspense check? (1-YES/0-NO) (Def.: 0 - NO)
"RTN","PSOBPSUT",26,0)
 ;         
"RTN","PSOBPSUT",27,0)
 ; - Get the REFILL # (multiple IEN)
"RTN","PSOBPSUT",28,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",29,0)
 ; - Not the latest fill for the prescription
"RTN","PSOBPSUT",30,0)
 I RFL'=$$LSTRFL^PSOBPSU1(RX) Q 0
"RTN","PSOBPSUT",31,0)
 ; - Status not ACTIVE
"RTN","PSOBPSUT",32,0)
 I $$GET1^DIQ(52,RX,100,"I")'=0 Q 0
"RTN","PSOBPSUT",33,0)
 ; Will suspend for CMOP
"RTN","PSOBPSUT",34,0)
 I '$G(IGCMP),$$CMOP(RX,RFL) Q 0
"RTN","PSOBPSUT",35,0)
 ; - ECME turned OFF for Rx's site
"RTN","PSOBPSUT",36,0)
 I '$$ECMEON^BPSUTIL($$RXSITE(RX,RFL)) Q 0
"RTN","PSOBPSUT",37,0)
 ; - Rx is RELEASED - Do not submit
"RTN","PSOBPSUT",38,0)
 I '$G(IGRL),$$RXRLDT(RX,RFL) Q 0
"RTN","PSOBPSUT",39,0)
 ; - Future Fill/AUTO SUSPENSE ON - will suspend
"RTN","PSOBPSUT",40,0)
 I '$G(IGCMP),$$RXFLDT(RX,RFL)>DT,$$GET1^DIQ(59,$$RXSITE(RX,RFL),.16,"I") Q 0
"RTN","PSOBPSUT",41,0)
 Q 1
"RTN","PSOBPSUT",42,0)
 ;
"RTN","PSOBPSUT",43,0)
CMOP(RX,RFL) ; Returns if the Rx will be a CMOP Rx or not
"RTN","PSOBPSUT",44,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",45,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",46,0)
 ; Output: 1 - CMOP / 0 - NON-CMOP
"RTN","PSOBPSUT",47,0)
 ;
"RTN","PSOBPSUT",48,0)
 N DFN,CMOP,MAIL,MAILEXP,DRUG,WARNS,STATUS,MW,A
"RTN","PSOBPSUT",49,0)
 ; Get the REFILL # (multiple IEN)
"RTN","PSOBPSUT",50,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",51,0)
 ; MAIL=MAIL Code, MAILEXP=Mail Code Expiration Date
"RTN","PSOBPSUT",52,0)
 S CMOP=0
"RTN","PSOBPSUT",53,0)
 S DFN=$$GET1^DIQ(52,RX,2,"I"),MAIL=$$GET1^DIQ(55,DFN,.03,"I"),MAILEXP=$$GET1^DIQ(55,DFN,.05,"I")
"RTN","PSOBPSUT",54,0)
 I MAIL>1,MAILEXP=""!(MAILEXP>DT) G QCMOP
"RTN","PSOBPSUT",55,0)
 ; Get drug IEN and cheDRUG if CMOP  ,$S($G(MAILEXP)=""!($G(MAILEXP)>DT):1,1:0)
"RTN","PSOBPSUT",56,0)
 S DRUG=$$GET1^DIQ(52,RX,6,"I") G QCMOP:'DRUG,QCMOP:'$D(^PSDRUG("AQ",DRUG))
"RTN","PSOBPSUT",57,0)
 ; Not marked for O.P.
"RTN","PSOBPSUT",58,0)
 I $$GET1^DIQ(50,DRUG,63)'["O" G QCMOP
"RTN","PSOBPSUT",59,0)
 ; Drug Warning >11
"RTN","PSOBPSUT",60,0)
 S WARNS=$$GET1^DIQ(50,DRUG,8) I $L(WARNS)>11 G QCMOP
"RTN","PSOBPSUT",61,0)
 ; If tradename
"RTN","PSOBPSUT",62,0)
 I $$GET1^DIQ(52,RX,6.5)'="" G QCMOP
"RTN","PSOBPSUT",63,0)
 ; If Cancelled, Expired, Deleted, Hold
"RTN","PSOBPSUT",64,0)
 S STATUS=$$GET1^DIQ(52,RX,100,"I") I STATUS>9!(STATUS=4)!(STATUS=3) G QCMOP
"RTN","PSOBPSUT",65,0)
 ; Rx RELEASED
"RTN","PSOBPSUT",66,0)
 I $$RXRLDT^PSOBPSUT(RX,RFL) G QCMOP
"RTN","PSOBPSUT",67,0)
 ; MAIL/WINDOW
"RTN","PSOBPSUT",68,0)
 S MW=$S('RFL:$$GET1^DIQ(52,RX,11,"I"),1:$$GET1^DIQ(52.1,RFL_","_RX,2,"I"))
"RTN","PSOBPSUT",69,0)
 ; IF WINDOW/ORIGINAL/FUTURE FILL SETS MW = MAIL
"RTN","PSOBPSUT",70,0)
 I MW="W",$$RXFLDT^PSOBPSUT(RX,RFL)>DT S MW="M"
"RTN","PSOBPSUT",71,0)
 ; If not MAIL
"RTN","PSOBPSUT",72,0)
 I MW'="M" G QCMOP
"RTN","PSOBPSUT",73,0)
 S CMOP=1
"RTN","PSOBPSUT",74,0)
 ;
"RTN","PSOBPSUT",75,0)
QCMOP Q CMOP
"RTN","PSOBPSUT",76,0)
 ;
"RTN","PSOBPSUT",77,0)
RXRLDT(RX,RFL) ; Returns the Rx Release Date
"RTN","PSOBPSUT",78,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",79,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",80,0)
 ;        
"RTN","PSOBPSUT",81,0)
 ; Output:  RXRLDT - Rx Release Date
"RTN","PSOBPSUT",82,0)
 N RXRLDT
"RTN","PSOBPSUT",83,0)
 I '$G(RX) Q ""
"RTN","PSOBPSUT",84,0)
 S RXRLDT=$$GET1^DIQ(52,RX,31,"I")
"RTN","PSOBPSUT",85,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",86,0)
 I RFL S RXRLDT=$$GET1^DIQ(52.1,RFL_","_RX,17,"I")
"RTN","PSOBPSUT",87,0)
 Q RXRLDT
"RTN","PSOBPSUT",88,0)
 ;
"RTN","PSOBPSUT",89,0)
RXFLDT(RX,RFL) ; Returns the Rx Fill Date
"RTN","PSOBPSUT",90,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",91,0)
 ;         (o) RFL - Refill # (Default: most recent)      
"RTN","PSOBPSUT",92,0)
 ; Output:  RXFLDT - Rx Fill Date
"RTN","PSOBPSUT",93,0)
 N RXFLDT
"RTN","PSOBPSUT",94,0)
 I '$G(RX) Q ""
"RTN","PSOBPSUT",95,0)
 S RXFLDT=$$GET1^DIQ(52,RX,22,"I")
"RTN","PSOBPSUT",96,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",97,0)
 I RFL S RXFLDT=$$GET1^DIQ(52.1,RFL_","_RX,.01,"I")
"RTN","PSOBPSUT",98,0)
 Q RXFLDT
"RTN","PSOBPSUT",99,0)
 ;
"RTN","PSOBPSUT",100,0)
RXSUDT(RX,RFL) ; Returns the prescription/fill Suspense Date for the RX/Reject passed in
"RTN","PSOBPSUT",101,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSUT",102,0)
 ;       (o) RFL  - Refill IEN (#52.1)
"RTN","PSOBPSUT",103,0)
 ;Output: SUSPENSE DATE (External format) or <NULL>, if not suspended
"RTN","PSOBPSUT",104,0)
 ;
"RTN","PSOBPSUT",105,0)
 I $G(^PSRX(RX,"STA"))'=5 Q ""
"RTN","PSOBPSUT",106,0)
 N SURX,SURFL
"RTN","PSOBPSUT",107,0)
 S SURX=$O(^PS(52.5,"B",RX,0)) I 'SURX Q ""
"RTN","PSOBPSUT",108,0)
 I $$GET1^DIQ(52.5,SURX,.05,"I") Q ""
"RTN","PSOBPSUT",109,0)
 S SURFL=+$$GET1^DIQ(52.5,SURX,9) I RFL'=SURFL Q ""
"RTN","PSOBPSUT",110,0)
 Q $$GET1^DIQ(52.5,SURX,.02,"I")
"RTN","PSOBPSUT",111,0)
 ;
"RTN","PSOBPSUT",112,0)
RXSITE(RX,RFL) ; Returns the Rx DIVISION
"RTN","PSOBPSUT",113,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",114,0)
 ;         (o) RFL - Refill #
"RTN","PSOBPSUT",115,0)
 ; Output:  SITE - Rx Fill Date
"RTN","PSOBPSUT",116,0)
 ;        
"RTN","PSOBPSUT",117,0)
 N SITE
"RTN","PSOBPSUT",118,0)
 I '$G(RX) Q
"RTN","PSOBPSUT",119,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",120,0)
 I RFL S SITE=$$GET1^DIQ(52.1,RFL_","_RX,8,"I")
"RTN","PSOBPSUT",121,0)
 I 'RFL!'$G(SITE) S SITE=$$GET1^DIQ(52,RX,20,"I")
"RTN","PSOBPSUT",122,0)
 Q SITE
"RTN","PSOBPSUT",123,0)
 ;
"RTN","PSOBPSUT",124,0)
MANREL(RX,RFL,PID) ; ePharmacy Manual Rx Release
"RTN","PSOBPSUT",125,0)
 ;Input: (r) RX  - Rx IEN (#52)
"RTN","PSOBPSUT",126,0)
 ;       (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",127,0)
 ;       (o) PID - Displays PID/Drug/Rx in the NDC prompts
"RTN","PSOBPSUT",128,0)
 ;Output: "" (null - OK to Release) OR "^" (User entered "^", or no valid NDC on file for ePharmacy Rx)
"RTN","PSOBPSUT",129,0)
 ;       
"RTN","PSOBPSUT",130,0)
 N ACTION
"RTN","PSOBPSUT",131,0)
 ;
"RTN","PSOBPSUT",132,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",133,0)
 ;
"RTN","PSOBPSUT",134,0)
 ; - Checking for REJECTS before proceeding to Rx Release
"RTN","PSOBPSUT",135,0)
 I $$FIND^PSOREJUT(RX,RFL) D  I ACTION="Q"!(ACTION="^") W ! Q "^"
"RTN","PSOBPSUT",136,0)
 . S ACTION=$$HDLG^PSOREJU1(RX,RFL,"79,88","ED","OIQ","Q")
"RTN","PSOBPSUT",137,0)
 ;
"RTN","PSOBPSUT",138,0)
 ; - ePharmacy switch is OFF
"RTN","PSOBPSUT",139,0)
 I '$$ECMEON^BPSUTIL($$RXSITE^PSOBPSUT(RX,RFL)) Q ""
"RTN","PSOBPSUT",140,0)
 ;
"RTN","PSOBPSUT",141,0)
 ; - Not an ePharmacy Rx
"RTN","PSOBPSUT",142,0)
 I $$STATUS^PSOBPSUT(RX,RFL)="" Q ""
"RTN","PSOBPSUT",143,0)
 ;
"RTN","PSOBPSUT",144,0)
 ; - NDC editing before Rx release
"RTN","PSOBPSUT",145,0)
 S ACTION=$$CHGNDC^PSONDCUT(RX,RFL,$G(PID)) I ACTION="^" D  Q "^"
"RTN","PSOBPSUT",146,0)
 . W !!,$C(7),"A valid NDC must be entered before the Release function can be completed.",! H 1
"RTN","PSOBPSUT",147,0)
 ;
"RTN","PSOBPSUT",148,0)
 ; - Checking for OPEN/UNRESOLVED 3rd. Party Payer Rejects (After possible NDC edit)
"RTN","PSOBPSUT",149,0)
 I $$FIND^PSOREJUT(RX,RFL) D  I ACTION="Q"!(ACTION="^") W ! Q "^"
"RTN","PSOBPSUT",150,0)
 . S ACTION=$$HDLG^PSOREJU1(RX,RFL,"79,88","ED","OIQ","Q")
"RTN","PSOBPSUT",151,0)
 ;
"RTN","PSOBPSUT",152,0)
 ; - Notifying IB of a Rx RELEASE event 
"RTN","PSOBPSUT",153,0)
 D RELEASE^PSOBPSU1(RX,RFL,DUZ)
"RTN","PSOBPSUT",154,0)
 ;
"RTN","PSOBPSUT",155,0)
 Q ""
"RTN","PSOBPSUT",156,0)
 ;
"RTN","PSOBPSUT",157,0)
AUTOREL(RX,RFL,RLDT,NDC,SRC,STS,HNG) ; Sends Rx Release information to ECME/IB and updates NDC
"RTN","PSOBPSUT",158,0)
 ;                                 in the DRUG/PRESCRIPTION files
"RTN","PSOBPSUT",159,0)
 ;Input: (r) RX  - Rx IEN (#52)
"RTN","PSOBPSUT",160,0)
 ;       (o) RFL - Refill #  (Default: most recent)
"RTN","PSOBPSUT",161,0)
 ;       (r) RLDT- Release Date
"RTN","PSOBPSUT",162,0)
 ;       (r) NDC - NDC Number (Must be 11 digits)
"RTN","PSOBPSUT",163,0)
 ;       (o) SRC - SOURCE: "C" - CMOP / "A" - OPAI
"RTN","PSOBPSUT",164,0)
 ;       (o) STS - Status: (S)uccessful/(U)nsuccessful Release (Default: "S" - Successful)
"RTN","PSOBPSUT",165,0)
 ;       (o) HNG - HANG time after resubmission and before checking the status of the claim (Default: 0)
"RTN","PSOBPSUT",166,0)
 ;       
"RTN","PSOBPSUT",167,0)
 N RXNDC,SITE
"RTN","PSOBPSUT",168,0)
 ;
"RTN","PSOBPSUT",169,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",170,0)
 ;
"RTN","PSOBPSUT",171,0)
 S:'$D(STS) STS="S" S:'$D(SRC) SRC="" S HNG=+$G(HNG)
"RTN","PSOBPSUT",172,0)
 S RXNDC=$$GETNDC^PSONDCUT(RX,RFL)
"RTN","PSOBPSUT",173,0)
 ;
"RTN","PSOBPSUT",174,0)
 ; - Saves the NDC from CMOP/Automated Dispensing Machine in the Prescription file
"RTN","PSOBPSUT",175,0)
 I $$NDCFMT^PSSNDCUT(NDC)'="" D SAVNDC^PSONDCUT(RX,RFL,$$NDCFMT^PSSNDCUT(NDC),$S(SRC="C":1,1:0))
"RTN","PSOBPSUT",176,0)
 ;
"RTN","PSOBPSUT",177,0)
 ; - Not an ePharmacy Rx
"RTN","PSOBPSUT",178,0)
 I $$STATUS^PSOBPSUT(RX,RFL)="" Q ""
"RTN","PSOBPSUT",179,0)
 ;
"RTN","PSOBPSUT",180,0)
 ; - Unsuccessful Release 
"RTN","PSOBPSUT",181,0)
 I STS="U" D  Q
"RTN","PSOBPSUT",182,0)
 . D REVERSE^PSOBPSU1(RX,RFL,"CRLX",,"UNSUCCESSFUL "_$S(SRC="C":"CMOP",1:"EXT INTERFACE")_" RELEASE",1)
"RTN","PSOBPSUT",183,0)
 ;
"RTN","PSOBPSUT",184,0)
 ; - Notifying IB of a Rx RELEASE event 
"RTN","PSOBPSUT",185,0)
 D RELEASE^PSOBPSU1(RX,RFL)
"RTN","PSOBPSUT",186,0)
 ;
"RTN","PSOBPSUT",187,0)
 ; - Invalid NDC from Automated Dispensing Machine
"RTN","PSOBPSUT",188,0)
 I SRC="A",$$NDCFMT^PSSNDCUT(NDC)="" D  Q
"RTN","PSOBPSUT",189,0)
 . D REVERSE^PSOBPSU1(RX,RFL,"CRLR",,"INVALID EXT INTERFACE NDC",1,NDC)
"RTN","PSOBPSUT",190,0)
 ;
"RTN","PSOBPSUT",191,0)
 ; - Invalid NDC number for CMOP
"RTN","PSOBPSUT",192,0)
 I SRC="C",$$NDCFMT^PSSNDCUT(NDC)="" D  Q
"RTN","PSOBPSUT",193,0)
 . D REVERSE^PSOBPSU1(RX,RFL,"CRLR",,"INVALID CMOP NDC",1,NDC)
"RTN","PSOBPSUT",194,0)
 ;
"RTN","PSOBPSUT",195,0)
 ; - If NDC not equal RXNDC, issue reversal and submit new claim
"RTN","PSOBPSUT",196,0)
 I SRC="A",$$NDCFMT^PSSNDCUT(NDC)'=RXNDC D  Q
"RTN","PSOBPSUT",197,0)
 . D ECMESND^PSOBPSU1(RX,RFL,RLDT,"CRLB",$$NDCFMT^PSSNDCUT(NDC),,"AUTO RELEASE",,1,,1)
"RTN","PSOBPSUT",198,0)
 . H HNG
"RTN","PSOBPSUT",199,0)
 . ; - If new claim returned PAYABLE, save new NDC in the DRUG/PRESCRIPTION files
"RTN","PSOBPSUT",200,0)
 . I $$STATUS^PSOBPSUT(RX,RFL)="E PAYABLE" D SAVNDC^PSONDCUT(RX,RFL,$$NDCFMT^PSSNDCUT(NDC),0,1)
"RTN","PSOBPSUT",201,0)
 ;
"RTN","PSOBPSUT",202,0)
 ; - If NDC not equal RXNDC, issue reversal and submit new claim
"RTN","PSOBPSUT",203,0)
 I SRC="C",$$NDCFMT^PSSNDCUT(NDC)'=RXNDC D  Q
"RTN","PSOBPSUT",204,0)
 . ; - Reverse/Resubmit with correct NDC
"RTN","PSOBPSUT",205,0)
 . D ECMESND^PSOBPSU1(RX,RFL,RLDT,"CRLB",$$NDCFMT^PSSNDCUT(NDC),1,"CMOP RELEASE",,1,,1)
"RTN","PSOBPSUT",206,0)
 . ; - Wait for a response from the Payer for the submission above
"RTN","PSOBPSUT",207,0)
 . H HNG
"RTN","PSOBPSUT",208,0)
 . ; - If new claim returned PAYABLE, save new NDC in the DRUG/PRESCRIPTION files
"RTN","PSOBPSUT",209,0)
 . I $$STATUS^PSOBPSUT(RX,RFL)="E PAYABLE" D SAVNDC^PSONDCUT(RX,RFL,$$NDCFMT^PSSNDCUT(NDC),1,1)
"RTN","PSOBPSUT",210,0)
 ;
"RTN","PSOBPSUT",211,0)
 ; - Calls ECME api responsible for notifying IB to create a BILL
"RTN","PSOBPSUT",212,0)
 D IBSEND(RX,RFL)
"RTN","PSOBPSUT",213,0)
 ;
"RTN","PSOBPSUT",214,0)
 Q
"RTN","PSOBPSUT",215,0)
 ;
"RTN","PSOBPSUT",216,0)
IBSEND(RX,RFL) ; Rx Release: Calls ECME, which will call  IB to create a bill
"RTN","PSOBPSUT",217,0)
 ;Input: (r) RX  - Rx IEN (#52)
"RTN","PSOBPSUT",218,0)
 ;       (o) RFL - Refill #  (Default: most recent)
"RTN","PSOBPSUT",219,0)
 ;
"RTN","PSOBPSUT",220,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",221,0)
 ;
"RTN","PSOBPSUT",222,0)
 ; - ECME turned OFF for Rx's site
"RTN","PSOBPSUT",223,0)
 I '$$ECMEON^BPSUTIL($$RXSITE^PSOBPSUT(RX,RFL)) Q
"RTN","PSOBPSUT",224,0)
 ;
"RTN","PSOBPSUT",225,0)
 ; - Not an ePharmacy Rx
"RTN","PSOBPSUT",226,0)
 I $$STATUS^PSOBPSUT(RX,RFL)="" Q ""
"RTN","PSOBPSUT",227,0)
 ;
"RTN","PSOBPSUT",228,0)
 ; - Calls ECME previously reversed, re-submit the claim to the payer
"RTN","PSOBPSUT",229,0)
 I $$STATUS^PSOBPSUT(RX,RFL)="E REVERSAL ACCEPTED"!($$STATUS^PSOBPSUT(RX,RFL)="IN PROGRESS") D  Q
"RTN","PSOBPSUT",230,0)
 . D ECMESND^PSOBPSU1(RX,RFL,$$RXRLDT^PSOBPSUT(RX,RFL),"RRL")
"RTN","PSOBPSUT",231,0)
 ;
"RTN","PSOBPSUT",232,0)
 ; - Notifying ECME of a BILLING event 
"RTN","PSOBPSUT",233,0)
 I $$STATUS^PSOBPSUT(RX,RFL)="E PAYABLE" D  Q
"RTN","PSOBPSUT",234,0)
 . N PSOCLAIM S PSOCLAIM=$$CLAIM^BPSBUTL(RX,RFL)
"RTN","PSOBPSUT",235,0)
 . D IBSEND^BPSECMP2($P(PSOCLAIM,"^",2),$P(PSOCLAIM,"^",3),"BILL",DUZ)
"RTN","PSOBPSUT",236,0)
 ;
"RTN","PSOBPSUT",237,0)
 Q
"RTN","PSOBPSUT",238,0)
 ;
"RTN","PSOBPSUT",239,0)
RETRX(RX,RFL) ; - Re-transmit a claim for the prescription/fill?
"RTN","PSOBPSUT",240,0)
 ;Input: (r) RX  - Rx IEN (#52)
"RTN","PSOBPSUT",241,0)
 ;       (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",242,0)
 ;Output: 1 - Re-transmit  /  0 - Don't re-transmit
"RTN","PSOBPSUT",243,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",244,0)
 ;
"RTN","PSOBPSUT",245,0)
 I RFL Q +$$GET1^DIQ(52.1,RFL_","_RX,82,"I")
"RTN","PSOBPSUT",246,0)
 Q +$$GET1^DIQ(52,RX,82,"I")
"RTN","PSOCSRL")
0^8^B36467799
"RTN","PSOCSRL",1,0)
PSOCSRL ;BIR/BHW-release interface for control substance pkg ;7/22/94
"RTN","PSOCSRL",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**27,71,118,148,247**;DEC 1997;Build 18
"RTN","PSOCSRL",3,0)
 ;External reference to ^PSDRUG supported by DBIA 221
"RTN","PSOCSRL",4,0)
 ;External reference to ^PS(55 supported by DBIA 2228
"RTN","PSOCSRL",5,0)
 ;External reference to ^PS(59.7 supported by DBIA 694
"RTN","PSOCSRL",6,0)
 ;External reference to $$SERV^IBARX1 supported by DBIA 2245
"RTN","PSOCSRL",7,0)
EN(RXP,XTYPE,PSRH) ;
"RTN","PSOCSRL",8,0)
 N NCPDP
"RTN","PSOCSRL",9,0)
 I '$D(PSOPAR) D  G:'$D(PSOPAR) EX
"RTN","PSOCSRL",10,0)
 .D ^PSOLSET I '$D(PSOPAR) W $C(7),!!,?5,"Site Parameters must be defined to use the Release option!",! Q
"RTN","PSOCSRL",11,0)
 .S PSOCSUB=1
"RTN","PSOCSRL",12,0)
 K XFLAG D CS^PSOCMOPB(RXP) I $G(XFLAG) K XFLAG Q
"RTN","PSOCSRL",13,0)
 S Y=$G(^PS(59,PSOSITE,"IB")),PSOIBSS=$$SERV^IBARX1(+Y) I 'PSOIBSS D IBSSR^PSOUTL I 'PSOIBFL D  G EX
"RTN","PSOCSRL",14,0)
 .W $C(7),!!,"The IB SERVICE/SECTION defined in your site parameter file is not valid.",!,"You will not be able to release any medication until this is corrected!",!
"RTN","PSOCSRL",15,0)
 W !! S PSIN=+$P($G(^PS(59.7,1,49.99)),"^",2)
"RTN","PSOCSRL",16,0)
 Q:'$D(^XUSEC("PSORPH",PSRH))
"RTN","PSOCSRL",17,0)
 I '$D(^PSRX(+$G(RXP),0))!($G(RXP)']"") W !?7,$C(7),$C(7),$C(7),"   NON-EXISTENT PRESCRIPTION" G EX
"RTN","PSOCSRL",18,0)
 D:$P($G(^PS(55,+$P(^PSRX(+RXP,0),"^",2),0)),"^",6)'=2 EN^PSOHLUP($P(^PSRX(+RXP,0),"^",2))
"RTN","PSOCSRL",19,0)
 I +$P($G(^PSRX(+RXP,"STA")),"^")=13!+$P($G(^PSRX(+RXP,0)),"^",2)=0 W !?7,$C(7),$C(7),"    PRESCRIPTION IS A DELETED PERSCRIPTION NUMBER" G EX
"RTN","PSOCSRL",20,0)
 I +$P($G(^PSRX(+RXP,"STA")),"^"),$S($P(^("STA"),"^")=2:0,$P(^("STA"),"^")=5:0,$P(^("STA"),"^")=11:0,$P(^("STA"),"^")=12:0,1:1) G EX
"RTN","PSOCSRL",21,0)
 G:$G(XTYPE)]"" REF
"RTN","PSOCSRL",22,0)
ORI ;orig
"RTN","PSOCSRL",23,0)
 K LBLP,ISUF I $P(^PSRX(RXP,2),"^",13) S Y=$P(^PSRX(RXP,2),"^",13) X ^DD("DD") W !!?7,$C(7),$C(7),"ORIGINAL PRESCRIPTION WAS LAST RELEASED ON "_Y,! G EX
"RTN","PSOCSRL",24,0)
 I $P(^PSRX(RXP,2),"^",15) S RESK=$P(^(2),"^",15)  W !,"Original Fill returned to stock on "_$E(RESK,4,5)_"/"_$E(RESK,6,7)_"/"_$E(RESK,2,3),! G EX
"RTN","PSOCSRL",25,0)
 S PSOCPN=$P(^PSRX(RXP,0),"^",2),QTY=$P($G(^PSRX(RXP,0)),"^",7),QDRUG=$P(^PSRX(RXP,0),"^",6)
"RTN","PSOCSRL",26,0)
 I '$P($G(^PSRX(RXP,2)),"^",13),+$P($G(^(2)),"^",2)'<PSIN S RXFD=$P(^(2),"^",2) D  G:$G(PSOUT) EX D:$G(LBLP) UPDATE I $G(ISUF) D UPDATE
"RTN","PSOCSRL",27,0)
 .S SUPN=$O(^PS(52.5,"B",RXP,0)) I SUPN,$D(^PS(52.5,"C",RXFD,SUPN)),$G(^PS(52.5,SUPN,"P"))'=1 S ISUF=1 Q
"RTN","PSOCSRL",28,0)
 .;
"RTN","PSOCSRL",29,0)
 .F LBL=0:0 S LBL=$O(^PSRX(RXP,"L",LBL)) Q:'LBL  I '+$P(^PSRX(RXP,"L",LBL,0),"^",2),'$P(^(0),"^",5) S LBLP=1
"RTN","PSOCSRL",30,0)
 .Q:'$G(LBLP)  D ASK Q:$G(PSOUT)
"RTN","PSOCSRL",31,0)
 .;
"RTN","PSOCSRL",32,0)
 .; - Checking for OPEN/UNRESOLVED 3rd. Party Payer Rejects / NDC Editing
"RTN","PSOCSRL",33,0)
 .I $$MANREL^PSOBPSUT(RXP,0)="^" K LBLP Q
"RTN","PSOCSRL",34,0)
 .;
"RTN","PSOCSRL",35,0)
 .S:$D(^PSDRUG(QDRUG,660.1)) ^PSDRUG(QDRUG,660.1)=^PSDRUG(QDRUG,660.1)-QTY
"RTN","PSOCSRL",36,0)
 .Q:$P($G(^PSRX(RXP,2)),"^",13)
"RTN","PSOCSRL",37,0)
 .D NOW^%DTC S DIE="^PSRX(",DA=RXP,DR="31///"_%_";23///"_PSRH
"RTN","PSOCSRL",38,0)
 .D ^DIE K DIE,DR,DA,LBL
"RTN","PSOCSRL",39,0)
 .D EN^PSOHLSN1(RXP,"ZD")
"RTN","PSOCSRL",40,0)
 .; ECME - 3rd Party Billing
"RTN","PSOCSRL",41,0)
 .;
"RTN","PSOCSRL",42,0)
 .; - Notifying IB through ECME of the Rx being released
"RTN","PSOCSRL",43,0)
 .D IBSEND^PSOBPSUT(RXP,0)
"RTN","PSOCSRL",44,0)
 G EX
"RTN","PSOCSRL",45,0)
REF ;release ref or par
"RTN","PSOCSRL",46,0)
 K LBLP,ISUF,IFN D QTY S:($P($G(XTYPE),"^")="P") $P(^PSRX(RXP,"TYPE"),"^")=0
"RTN","PSOCSRL",47,0)
EX K OUT,RX2,RXFD,RESK,ISUF,SUPN,%,DIC,IFN,J,DA,DR,DIE,X,Y,RXP,REC,DIRUT,PSOCPN,PSOCPRX,PSOIBSS,PSOIBFL,PSOIBLP,PSOIBST,QDRUG,QTY,XTYPE,PSRH,Y,PSIN
"RTN","PSOCSRL",48,0)
 K DIR,DUOUT,DTOUT,LBL,LBLP,PSOUT
"RTN","PSOCSRL",49,0)
 Q
"RTN","PSOCSRL",50,0)
UPDATE I $G(ISUF) W $C(7),!!?7,$S($P(XTYPE,"^")=1:"RE",$P(XTYPE,"^")="P":"PARTIAL ",1:"ORIGINAL")_"FILL ON SUSPENSE !",!,$C(7) Q
"RTN","PSOCSRL",51,0)
 S PSOCPRX=$P(^PSRX(RXP,0),"^") D CP^PSOCP
"RTN","PSOCSRL",52,0)
 W !?7,"PRESCRIPTION NUMBER "_$P(^PSRX(RXP,0),"^")_" RELEASED"
"RTN","PSOCSRL",53,0)
 Q
"RTN","PSOCSRL",54,0)
QTY S PSOCPN=$P(^PSRX(RXP,0),"^",2),QDRUG=$P(^PSRX(RXP,0),"^",6) K LBLP
"RTN","PSOCSRL",55,0)
 D:$P($G(^PSRX(RXP,$P(XTYPE,"^"),$P(XTYPE,"^",2),0)),"^")'<PSIN  K ISUF,LBLP G:$G(PSOUT) EX
"RTN","PSOCSRL",56,0)
 .S RXFD=$E($P(^PSRX(RXP,$P(XTYPE,"^"),$P(XTYPE,"^",2),0),"^"),1,7),SUPN=$O(^PS(52.5,"B",RXP,0)) I SUPN,$D(^PS(52.5,"C",RXFD,SUPN)),$G(^PS(52.5,SUPN,"P"))'=1 S ISUF=1 D UPDATE Q
"RTN","PSOCSRL",57,0)
 .I $P(^PSRX(RXP,$P(XTYPE,"^"),$P(XTYPE,"^",2),0),"^",$S($P($G(XTYPE),"^"):18,1:19))]""!($P(^(0),"^",16)) K IFN Q
"RTN","PSOCSRL",58,0)
 .;
"RTN","PSOCSRL",59,0)
 .F LBL=0:0 S LBL=$O(^PSRX(RXP,"L",LBL)) Q:'LBL  I $P(^PSRX(RXP,"L",LBL,0),"^",2)=$S('$P(XTYPE,"^"):(99-$P(XTYPE,"^",2)),1:$P(XTYPE,"^",2)) S LBLP=1
"RTN","PSOCSRL",60,0)
 .Q:'$G(LBLP)  D ASK Q:$G(PSOUT)
"RTN","PSOCSRL",61,0)
 .;
"RTN","PSOCSRL",62,0)
 .; - Checking for OPEN/UNRESOLVED 3rd. Party Payer Rejects / NDC Editing
"RTN","PSOCSRL",63,0)
 .I XTYPE,$$MANREL^PSOBPSUT(RXP,$P(XTYPE,"^",2))="^" K LBLP Q
"RTN","PSOCSRL",64,0)
 .;
"RTN","PSOCSRL",65,0)
 .S IFN=$P(XTYPE,"^",2) S:$G(^PSDRUG(QDRUG,660.1))]"" QTY=$P(^PSRX(RXP,$P(XTYPE,"^"),$P(XTYPE,"^",2),0),"^",4),^PSDRUG(QDRUG,660.1)=^PSDRUG(QDRUG,660.1)-QTY
"RTN","PSOCSRL",66,0)
 .D NOW^%DTC S DIE="^PSRX("_RXP_","""_$P(XTYPE,"^")_""","
"RTN","PSOCSRL",67,0)
 .S DA(1)=RXP,DA=$P(XTYPE,"^",2)
"RTN","PSOCSRL",68,0)
 .S DR=$S(+XTYPE:17,1:8)_"///"_%_";"_$S(+XTYPE:4,1:.05)_"////"_PSRH
"RTN","PSOCSRL",69,0)
 .D ^DIE K DIE,DR,DA
"RTN","PSOCSRL",70,0)
 .K PSODISPP S:'$P($G(XTYPE),"^") PSODISPP=1 D EN^PSOHLSN1(RXP,"ZD") K PSODISPP
"RTN","PSOCSRL",71,0)
 .;
"RTN","PSOCSRL",72,0)
 .; - Notifying IB through ECME of the Rx being released
"RTN","PSOCSRL",73,0)
 .I XTYPE D IBSEND^PSOBPSUT(RXP,$P(XTYPE,"^",2))
"RTN","PSOCSRL",74,0)
 .;
"RTN","PSOCSRL",75,0)
 .K:+XTYPE ^PSRX("ACP",$P($G(^PSRX(RXP,0)),"^",2),$P($G(^PSRX(RXP,1,$P(XTYPE,"^",2),0)),"^"),$P(XTYPE,"^",2),RXP)
"RTN","PSOCSRL",76,0)
 .I +XTYPE,$G(IFN),'$G(ISUF) S PSOCPRX=$P(^PSRX(RXP,0),"^"),YY=$P(XTYPE,"^",2) D CP^PSOCP
"RTN","PSOCSRL",77,0)
 W:$G(IFN) !!?7,"PRESCRIPTION NUMBER "_$P(^PSRX(RXP,0),"^")_$S('+$G(XTYPE):" Partial Fill",1:" REFILL")_" #"_$P(XTYPE,"^",2)_" RELEASED"
"RTN","PSOCSRL",78,0)
 W:'$G(IFN) !!?7,$S(+$G(XTYPE):"REFILL",1:"PARTIAL")_" #"_$P(XTYPE,"^",2)_" NOT RELEASED"
"RTN","PSOCSRL",79,0)
 K IFN
"RTN","PSOCSRL",80,0)
 Q
"RTN","PSOCSRL",81,0)
ASK ;confirm
"RTN","PSOCSRL",82,0)
 W ! K DIR S DIR(0)="SA^1:YES;0:NO",DIR("B")="Yes",DIR("A",1)="Are You sure you want to release "_$S($G(XTYPE)']"":"Original ",$P(XTYPE,"^")=1:"Re",1:"Partial ")_"fill"_$S($P(XTYPE,"^",2):" #"_$P(XTYPE,"^",2),1:"")
"RTN","PSOCSRL",83,0)
 S DIR("A")="for Prescription #"_$P(^PSRX(RXP,0),"^")_": " D ^DIR K DIR
"RTN","PSOCSRL",84,0)
 S:'Y!($D(DIRUT)) PSOUT=1
"RTN","PSOCSRL",85,0)
 ;bingo board call
"RTN","PSOCSRL",86,0)
 I Y,$G(XTYPE)="",$P(^PSRX(RXP,0),"^",11)["W" S BINGRO="W",BINGNAM=$P(^PSRX(RXP,0),"^",2),BINGDIV=$P(^PSRX(RXP,2),"^",9)
"RTN","PSOCSRL",87,0)
 I Y,$G(XTYPE)["P",$P($G(^PSRX(RXP,"P",$P(XTYPE,"^",2),0)),"^",2)["W" S BINGRPR="W",BNGPDV=$P(^PSRX(RXP,"P",$P(XTYPE,"^",2),0),"^",9),BINGNAM=$P($G(^PSRX(RXP,0)),"^",2)
"RTN","PSOCSRL",88,0)
 I Y,+$G(XTYPE)=1,$P($G(^PSRX(RXP,1,$P(XTYPE,"^",2),0)),"^",2)["W" S BINGRPR="W",BNGRDV=$P(^PSRX(RXP,1,$P(XTYPE,"^",2),0),"^",9),BINGNAM=$P($G(^PSRX(RXP,0)),"^",2)
"RTN","PSOCSRL",89,0)
 I $D(DISGROUP),($D(BINGDIV)!$D(BNGPDV)!$D(BNGRDV)),($D(BINGRO)!$D(BINGRPR)) D REL^PSOBING1 K BINGNAM,BINGDIV,BINGRO,BINGRPR,BNGPDV,BNGRDV
"RTN","PSOCSRL",90,0)
 Q
"RTN","PSODISP")
0^9^B54704509
"RTN","PSODISP",1,0)
PSODISP ;BIR/SAB,PWC-MANUAL BARCODE RELEASE FUNCTION ;03/02/93
"RTN","PSODISP",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**15,71,131,156,185,148,247**;DEC 1997;Build 18
"RTN","PSODISP",3,0)
 ;Reference to $$SERV^IBARX1 supported by DBIA 2245
"RTN","PSODISP",4,0)
 ;Reference to ^PSD(58.8 supported by DBIA 1036
"RTN","PSODISP",5,0)
 ;Reference to ^PS(55 supported by DBIA 2228
"RTN","PSODISP",6,0)
 ;Reference to ^PSDRUG supported by DBIA 221
"RTN","PSODISP",7,0)
 ;Reference to ^PSDRUG("AQ" supported by DBIA 3165
"RTN","PSODISP",8,0)
 ;Reference to ^XTMP("PSA" supported by DBIA 1036
"RTN","PSODISP",9,0)
 ;Reference to ^PS(59.7 supported by DBIA 694
"RTN","PSODISP",10,0)
 ;Reference to ^DIC(19.2 supported by DBIA 1064
"RTN","PSODISP",11,0)
AC K CX,PSODA,PSODT,PSRH,DA,DR,DIE,X,X1,X2,Y,RXP,CX,PX,REC,DIR,YDT,REC,RDUZ,DIRUT,PSOCPN,PSOCPRX,YY,QDRUG,QTY,TYPE,XTYPE,DUOUT,PSOPID
"RTN","PSODISP",12,0)
 K ^UTILITY($J,"PSOHL") S PSOPID=1
"RTN","PSODISP",13,0)
 I '$D(PSOPAR) D ^PSOLSET I '$D(PSOPAR) W $C(7),!!,?5,"Site Parameters must be defined to use the Release option!",! G EXIT
"RTN","PSODISP",14,0)
 S Y=$G(^PS(59,PSOSITE,"IB")),PSOIBSS=$$SERV^IBARX1(+Y) I 'PSOIBSS D IBSSR^PSOUTL I 'PSOIBFL D   G EXIT
"RTN","PSODISP",15,0)
 .W $C(7),!!,"The IB SERVICE/SECTION defined in your site parameter file is not valid.",!,"You will not be able to release any medication until this is corrected!",!
"RTN","PSODISP",16,0)
AC1 W !! S PSIN=+$P($G(^PS(59.7,1,49.99)),"^",2)
"RTN","PSODISP",17,0)
 S DIC("S")="I $D(^XUSEC(""PSORPH"",+Y))",DIC("A")="Enter PHARMACIST: ",DIC="^VA(200,",DIC(0)="QEAM" D ^DIC G:"^"[X EXIT K DIC G:$D(DTOUT)!($D(DUOUT))!($D(DIRUT))!(Y=-1) EXIT S PSRH=+Y
"RTN","PSODISP",18,0)
 ;check for Drug Acct background job K8 & K7.1
"RTN","PSODISP",19,0)
 S X="PSA IV ALL LOCATIONS",DIC(0)="MZ",DIC=19.2 D ^DIC I Y=-1 K DIC,X,Y G BC
"RTN","PSODISP",20,0)
 I $P($G(Y(0)),U,2)>DT S PSODA=1 S:'$P($G(^XTMP("PSA",0)),U,2) $P(^(0),U,2)=DT G BC
"RTN","PSODISP",21,0)
 S X="PSA IV ALL LOCATIONS",DIC(0)="MZ",DIC=19 D ^DIC K DIC,X G:Y=-1 BC
"RTN","PSODISP",22,0)
 K DIQ,PSA S DA=+Y,DIC=19,DIQ="PSA",DR=200,DIQ(0)="IN" D EN^DIQ1
"RTN","PSODISP",23,0)
 I '$D(PSA(19,DA,200,"I")) K DIC,DA,X,Y,DIQ G BC
"RTN","PSODISP",24,0)
 I PSA(19,DA,200,"I")>DT S PSODA=1 S:'$P($G(^XTMP("PSA",0)),U,2) $P(^(0),U,2)=DT
"RTN","PSODISP",25,0)
 K PSA,DIC,DA,X,Y,DIQ
"RTN","PSODISP",26,0)
BC ;
"RTN","PSODISP",27,0)
 K MAN I $G(RXP),$D(DISGROUP),$D(BINGNAM),($D(BINGDIV)!$D(BNGPDV)!$D(BNGRDV)),($D(BINGRO)!$D(BINGRPR)) D REL^PSOBING1 K BINGNAM,BINGDIV,BINGRO,BINGRPR,BNGPDV,BNGRDV
"RTN","PSODISP",28,0)
 Q:$G(POERR)  W !! K CMOP,ISUF,DIR,LBL,LBLP S DIR("A")="Enter/Wand PRESCRIPTION number",DIR("?")="^D HELP^PSODISP",DIR(0)="FO" D ^DIR
"RTN","PSODISP",29,0)
 I $D(DIRUT)!($D(DTOUT))!($D(DUOUT)) K DIRUT,DTOUT,DUOUT G AC1
"RTN","PSODISP",30,0)
 I X'["-" D BCI W:'$G(RXP) !,"INVALID PRESCRIPTION NUMBER" G:'$G(RXP) BC S MAN=1 G BC1
"RTN","PSODISP",31,0)
 I X["-",$P(X,"-")'=$P($$SITE^VASITE(),"^",3) W !?7,$C(7),$C(7),"   INVALID STATION NUMBER !!",$C(7),$C(7),! G BC
"RTN","PSODISP",32,0)
 I X["-" S RXP=$P(X,"-",2) I '$D(^PSRX(+$G(RXP),0))!($G(RXP)']"") W !?7,$C(7),$C(7),$C(7),"   NON-EXISTENT PRESCRIPTION" G BC
"RTN","PSODISP",33,0)
 I $D(^PSRX(RXP,0)) D  G BC1
"RTN","PSODISP",34,0)
 .S PSOLOUD=1 D:$P($G(^PS(55,+$P(^PSRX(+RXP,0),"^",2),0)),"^",6)'=2 EN^PSOHLUP($P(^PSRX(+RXP,0),"^",2)) K PSOLOUD
"RTN","PSODISP",35,0)
 W !?7,$C(7),$C(7),$C(7),"   IMPROPER BARCODE FORMAT" G BC
"RTN","PSODISP",36,0)
BC1 ;
"RTN","PSODISP",37,0)
 D ICN^PSODPT(+$P(^PSRX(RXP,0),"^",2))
"RTN","PSODISP",38,0)
 I +$P($G(^PSRX(+RXP,"PKI")),"^") D  Q:$G(POERR)  G BC
"RTN","PSODISP",39,0)
 .I $G(SPEED) W !!?7,$C(7),$C(7),"Rx# "_$P(^PSRX(RXP,0),"^") S PSOLIST=4
"RTN","PSODISP",40,0)
 .W !!,?7,"UNABLE TO RELEASE - THIS ORDER MUST BE RELEASED THROUGH THE OUTPATIENT",!,?7,"RX'S [PSD OUTPATIENT] OPTION IN THE CONTROLLED SUBSTANCE MENU"
"RTN","PSODISP",41,0)
 I +$P($G(^PSRX(+RXP,"STA")),"^")=13!(+$P($G(^PSRX(+RXP,0)),"^",2)=0) W !?7,$C(7),$C(7),"    PRESCRIPTION IS A DELETED PRESCRIPTION NUMBER" Q:$G(POERR)  D DCHK G BC
"RTN","PSODISP",42,0)
 I +$P($G(^PSRX(+RXP,"STA")),"^"),$S($P(^("STA"),"^")=2:0,$P(^("STA"),"^")=5:0,$P(^("STA"),"^")=11:0,$P(^("STA"),"^")=12:0,$P(^("STA"),"^")=14:0,$P(^("STA"),"^")=15:0,1:1) D STAT^PSODISPS Q:$G(POERR)  D DCHK G BC
"RTN","PSODISP",43,0)
 ;drug stocked in Drug Acct Location?
"RTN","PSODISP",44,0)
 S PSODA(1)=$S($D(^PSD(58.8,+$O(^PSD(58.8,"AOP",+PSOSITE,0)),1,+$P(^PSRX(RXP,0),U,6))):1,1:0)
"RTN","PSODISP",45,0)
 I $P(^PSRX(RXP,2),"^",13) S Y=$P(^PSRX(RXP,2),"^",13) X ^DD("DD") S OUT=1 D  K OUT Q:$G(POERR)  D DCHK G BC
"RTN","PSODISP",46,0)
 .W !!?7,$C(7),$C(7),$S($G(SPEED):"Rx# "_$P(^PSRX(RXP,0),"^"),1:"Original prescription")_" was last released on "_Y,!?7,"Checking for unreleased refills/partials " D REF
"RTN","PSODISP",47,0)
BATCH ;
"RTN","PSODISP",48,0)
 I $P(^PSRX(RXP,2),"^",15),'$P(^(2),"^",14) S RESK=$P(^(2),"^",15)  W !!?5,"Rx# "_$P(^PSRX(RXP,0),"^")_" Original Fill returned to stock on "_$E(RESK,4,5)_"/"_$E(RESK,6,7)_"/"_$E(RESK,2,3),! G REF
"RTN","PSODISP",49,0)
 ;flag to determine if site is running HL7 v.2.4 Dispense Machines
"RTN","PSODISP",50,0)
 N PSODISP S PSODISP=$$GET1^DIQ(59,PSOSITE_",",105,"I")
"RTN","PSODISP",51,0)
 S PSOCPN=$P(^PSRX(RXP,0),"^",2),QTY=$P($G(^PSRX(RXP,0)),"^",7),QDRUG=$P(^PSRX(RXP,0),"^",6)
"RTN","PSODISP",52,0)
 ;original
"RTN","PSODISP",53,0)
 I '$P($G(^PSRX(RXP,2)),"^",13),+$P($G(^(2)),"^",2)'<PSIN S RXFD=$P(^(2),"^",2) D  D:$G(LBLP) UPDATE I $G(ISUF) D UPDATE G REF
"RTN","PSODISP",54,0)
 .S SUPN=$O(^PS(52.5,"B",RXP,0)) I SUPN,$D(^PS(52.5,"C",RXFD,SUPN)),$G(^PS(52.5,SUPN,"P"))'=1,'$P($G(^(0)),"^",5) S ISUF=1 Q
"RTN","PSODISP",55,0)
 .I $D(^PSDRUG("AQ",QDRUG)) K CMOP D OREL^PSOCMOPB(RXP) K CMOP I $G(ISUF) K ISUF,CMOP Q
"RTN","PSODISP",56,0)
 .;
"RTN","PSODISP",57,0)
 .F LBL=0:0 S LBL=$O(^PSRX(RXP,"L",LBL)) Q:'LBL  I '+$P(^PSRX(RXP,"L",LBL,0),"^",2),'$P(^(0),"^",5),$P(^(0),"^",3)'["INTERACTION" S LBLP=1
"RTN","PSODISP",58,0)
 .Q:'$G(LBLP)
"RTN","PSODISP",59,0)
 .;
"RTN","PSODISP",60,0)
 .; - Checking for OPEN/UNRESOLVED 3rd. Party Payer Rejects / NDC Editing
"RTN","PSODISP",61,0)
 .I $$MANREL^PSOBPSUT(RXP,0,$G(PSOPID))="^" K LBLP Q
"RTN","PSODISP",62,0)
 .;
"RTN","PSODISP",63,0)
 .S:$D(^PSDRUG(QDRUG,660.1)) ^PSDRUG(QDRUG,660.1)=^PSDRUG(QDRUG,660.1)-QTY
"RTN","PSODISP",64,0)
 .D NOW^%DTC S DIE="^PSRX(",DA=RXP,DR="31///"_%_";23////"_PSRH_";32.1///@;32.2///@",PSODT=% D ^DIE K DIE,DR,DA,LBL
"RTN","PSODISP",65,0)
 .;
"RTN","PSODISP",66,0)
 .; - Notifying IB through ECME of the Rx has been released
"RTN","PSODISP",67,0)
 .D IBSEND^PSOBPSUT(RXP,0)
"RTN","PSODISP",68,0)
 .;
"RTN","PSODISP",69,0)
 .D EN^PSOHLSN1(RXP,"ZD")
"RTN","PSODISP",70,0)
 .;if appropriate update ^XTMP("PSA", for Drug Acct
"RTN","PSODISP",71,0)
 .I $G(PSODA),$G(PSODA(1)),'$D(^PSRX("AR",+PSODT,+RXP,0)) S ^XTMP("PSA",+PSOSITE,+QDRUG,+DT)=$G(^XTMP("PSA",+PSOSITE,+QDRUG,+DT))+QTY
"RTN","PSODISP",72,0)
REF ;release refills and partials
"RTN","PSODISP",73,0)
 K LBLP,IFN F XTYPE=1,"P" K IFN D QTY^PSODISPS
"RTN","PSODISP",74,0)
 Q:+$G(OUT)!($G(POERR))  D DCHK
"RTN","PSODISP",75,0)
 G BC
"RTN","PSODISP",76,0)
UPDATE I $G(ISUF) W $C(7),!!?7,"Prescription "_$P(^PSRX(RXP,0),"^")_" - Original Fill on Suspense !",!,$C(7) Q
"RTN","PSODISP",77,0)
 N BFILL S BFILL=0
"RTN","PSODISP",78,0)
 S PSOCPRX=$P(^PSRX(RXP,0),"^") D CP^PSOCP
"RTN","PSODISP",79,0)
 W !?7,"Prescription Number "_$P(^PSRX(RXP,0),"^")_" Released"
"RTN","PSODISP",80,0)
 ;initialize bingo board variables
"RTN","PSODISP",81,0)
 I $G(LBLP),$P(^PSRX(RXP,0),"^",11)["W" S BINGRO="W",BINGNAM=$P(^PSRX(RXP,0),"^",2),BINGDIV=$P(^PSRX(RXP,2),"^",9)
"RTN","PSODISP",82,0)
 I $G(PSODISP)=2.4 D    ;HL7 v2.4 dispensing machines
"RTN","PSODISP",83,0)
 . F I=0:0 S SUB=$O(^PSRX(RXP,"A",I)) Q:'I  I $P(^PSRX(RXP,"A",I,0),"^",2)="N" D XMIT    ;only send release dt/time transmission for dispensed orders
"RTN","PSODISP",84,0)
 Q
"RTN","PSODISP",85,0)
EXIT ;
"RTN","PSODISP",86,0)
 K OUT,RX2,RXFD,RESK,ISUF,SUPN,%,DIC,IFN,J,DA,DR,DIE,X,X1,X2,Y,RXP,CX,PX,REC,DIR,YDT,REC,RDUZ,DIRUT,PSOCPN,PSOCPRX,PSOIBSS,PSOIBFL,PSOIBLP,PSOIBST,YY,QDRUG,QTY,TYPE,XTYPE,DUOUT,PSRH,XX,Y,PSIN,MAN,PSODISP,SUB
"RTN","PSODISP",87,0)
 Q
"RTN","PSODISP",88,0)
GETFILL ; get the fill number
"RTN","PSODISP",89,0)
 S NFLD=0,UU="" F  S UU=$O(^PSRX(+RXP,1,UU)) Q:UU=""  S:$D(^PSRX(+RXP,1,UU,0)) NFLD=NFLD+1
"RTN","PSODISP",90,0)
 Q
"RTN","PSODISP",91,0)
HELP W !!,"Wand the barcode number of the prescription or manually key in",!,"the number below the barcode or the prescription number.",!,"The barcode number should be of the format - 'NNN-NNNNNNN'"
"RTN","PSODISP",92,0)
 Q
"RTN","PSODISP",93,0)
BCI S RXP=0
"RTN","PSODISP",94,0)
RXP S RXP=$O(^PSRX("B",X,RXP)) I $P($G(^PSRX(+RXP,"STA")),"^")=13 G RXP ;GET RECORD NUMBER FROM SCRIPT NUMBER
"RTN","PSODISP",95,0)
 Q
"RTN","PSODISP",96,0)
DCHK ;checks for duplicate
"RTN","PSODISP",97,0)
 Q:'$G(MAN)
"RTN","PSODISP",98,0)
 I $D(DISGROUP),$D(BINGNAM),($D(BINGDIV)!$D(BNGPDV)!$D(BNGRDV)),($D(BINGRO)!$D(BINGRPR)) D REL^PSOBING1 K BINGNAM,BINGDIV,BINGRO,BINGRPR,BNGPDV,BNGRDV
"RTN","PSODISP",99,0)
 S RXP=$O(^PSRX("B",$P(^PSRX(RXP,0),"^"),RXP)) I 'RXP K POERR,MAN Q
"RTN","PSODISP",100,0)
 I $P($G(^PSRX(RXP,"STA")),"^")=13 G DCHK
"RTN","PSODISP",101,0)
 I $D(DISGROUP),$D(BINGNAM),($D(BINGDIV)!$D(BNGPDV)!$D(BNGRDV)),($D(BINGRO)!$D(BINGRPR)) D REL^PSOBING1 K BINGNAM,BINGDIV,BINGRO,BINGRPR,BNGPDV,BNGRDV
"RTN","PSODISP",102,0)
 W !!,"Duplicate Rx # "_$P(^PSRX(RXP,0),"^")_" found."
"RTN","PSODISP",103,0)
 S POERR=1 D BC1^PSODISP
"RTN","PSODISP",104,0)
 I $D(DISGROUP),$D(BINGNAM),($D(BINGDIV)!$D(BNGPDV)!$D(BNGRDV)),($D(BINGRO)!$D(BINGRPR)) D REL^PSOBING1 K BINGNAM,BINGDIV,BINGRO,BINGRPR,BNGPDV,BNGRDV
"RTN","PSODISP",105,0)
 G DCHK
"RTN","PSODISP",106,0)
 Q
"RTN","PSODISP",107,0)
XMIT D NOW^%DTC S PSODTM=%
"RTN","PSODISP",108,0)
 S IDGN=$P(^PSRX(+RXP,0),"^",6)
"RTN","PSODISP",109,0)
 K ^UTILITY($J,"PSOHL")
"RTN","PSODISP",110,0)
 S ^UTILITY($J,"PSOHL",1)=+RXP_"^"_IDGN_"^"_PSODTM_"^"_+$G(PDUZ)_"^0^^PSO DISP^^^"_FP_"^"_FPN
"RTN","PSODISP",111,0)
 S ZTRTN="INIT^PSORELDT",ZTDESC="EXTERNAL INTERFACE FOR RELEASE DATE/TIME",ZTIO="",ZTDTH=$H,ZTSAVE("^UTILITY($J,""PSOHL"",")="",ZTSAVE("PSOSITE")="",ZTSAVE("RXP")="",ZTSAVE("PSOLAP")="" D ^%ZTLOAD K ^UTILITY($J,"PSOHL")
"RTN","PSODISP",112,0)
 Q
"RTN","PSODISPS")
0^12^B30402405
"RTN","PSODISPS",1,0)
PSODISPS ;BIR/SAB-CONTINUATION OF RELEASE FUNCTION ;3/2/93
"RTN","PSODISPS",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**15,13,9,27,67,71,156,118,148,247**;DEC 1997;Build 18
"RTN","PSODISPS",3,0)
 ;External reference ^PS(59.7 supported by DBIA 694
"RTN","PSODISPS",4,0)
 ;External reference to ^PSDRUG("AQ" supported by DBIA 3165
"RTN","PSODISPS",5,0)
 ;External reference ^XTMP("PSA" supported by DBIA 1036
"RTN","PSODISPS",6,0)
 ;External reference $$SERV^IBARX1 supported by DBIA 2245
"RTN","PSODISPS",7,0)
 ;External reference ^PSDRUG( supported by DBIA 221
"RTN","PSODISPS",8,0)
 ;Reference to ^DIC(19.2 supported by DBIA 1064
"RTN","PSODISPS",9,0)
 ;
"RTN","PSODISPS",10,0)
QTY ; Refill Release
"RTN","PSODISPS",11,0)
 S PSOCPN=$P(^PSRX(RXP,0),"^",2),QDRUG=$P(^PSRX(RXP,0),"^",6) K LBLP
"RTN","PSODISPS",12,0)
 F YY=0:0 S YY=$O(^PSRX(RXP,XTYPE,YY)) Q:'YY  D:$P($G(^PSRX(RXP,XTYPE,YY,0)),"^")'<PSIN  K ISUF,LBLP
"RTN","PSODISPS",13,0)
 .S RXFD=$E($P(^PSRX(RXP,XTYPE,YY,0),"^"),1,7),SUPN=$O(^PS(52.5,"B",RXP,0)) I SUPN,$D(^PS(52.5,"C",RXFD,SUPN)),$G(^PS(52.5,SUPN,"P"))'=1,$G(XTYPE) S ISUF=1 Q
"RTN","PSODISPS",14,0)
 .I XTYPE=1,($D(^PSDRUG("AQ",QDRUG))) K CMOP D RREL^PSOCMOPB(RXP,YY) K CMOP Q:$G(ISUF)
"RTN","PSODISPS",15,0)
 .I $P(^PSRX(RXP,XTYPE,YY,0),"^",$S($G(XTYPE):18,1:19))]""!($P(^(0),"^",16)) K IFN Q
"RTN","PSODISPS",16,0)
 .;
"RTN","PSODISPS",17,0)
 .F LBL=0:0 S LBL=$O(^PSRX(RXP,"L",LBL)) Q:'LBL  I $P(^PSRX(RXP,"L",LBL,0),"^",2)=$S('XTYPE:(99-YY),1:YY) S LBLP=1
"RTN","PSODISPS",18,0)
 .Q:'$G(LBLP)
"RTN","PSODISPS",19,0)
 .;
"RTN","PSODISPS",20,0)
 .; - Checking for OPEN/UNRESOLVED 3rd. Party Payer Rejects / NDC Editing
"RTN","PSODISPS",21,0)
 .I XTYPE,$$MANREL^PSOBPSUT(RXP,YY,$G(PSOPID))="^" K LBLP Q
"RTN","PSODISPS",22,0)
 .;
"RTN","PSODISPS",23,0)
 .S IFN=YY S:$G(^PSDRUG(QDRUG,660.1))]"" QTY=$P(^PSRX(RXP,XTYPE,YY,0),"^",4),^PSDRUG(QDRUG,660.1)=^PSDRUG(QDRUG,660.1)-QTY
"RTN","PSODISPS",24,0)
 .K DA,DR,DIE D NOW^%DTC S DIE="^PSRX("_RXP_","""_XTYPE_""",",DA(1)=RXP
"RTN","PSODISPS",25,0)
 .S DA=YY,DR=$S(XTYPE:17,1:8)_"///"_%_";"_$S(XTYPE:4,1:.05)_"////"_PSRH
"RTN","PSODISPS",26,0)
 .S PSODT=% D ^DIE K DIE,DR,DA
"RTN","PSODISPS",27,0)
 .;
"RTN","PSODISPS",28,0)
 .; - Notifying IB through ECME of the Rx being released
"RTN","PSODISPS",29,0)
 .I XTYPE D IBSEND^PSOBPSUT(RXP,YY)
"RTN","PSODISPS",30,0)
 .;
"RTN","PSODISPS",31,0)
 .K PSODISPP S:$G(XTYPE)="P" PSODISPP=1 D EN^PSOHLSN1(RXP,"ZD") K PSODISPP
"RTN","PSODISPS",32,0)
 .K:XTYPE ^PSRX("ACP",$P($G(^PSRX(RXP,0)),"^",2),$P($G(^PSRX(RXP,1,YY,0)),"^"),YY,RXP)
"RTN","PSODISPS",33,0)
 .I XTYPE,$G(IFN),'$G(ISUF) S PSOCPRX=$P(^PSRX(RXP,0),"^") D CP^PSOCP
"RTN","PSODISPS",34,0)
 .;if appropriate update ^XTMP("PSA", for Drug Acct.
"RTN","PSODISPS",35,0)
 .I $G(PSODA),$G(PSODA(1)),'$D(^PSRX("AR",+PSODT,+RXP,YY)) D
"RTN","PSODISPS",36,0)
 ..S ^XTMP("PSA",+PSOSITE,+QDRUG,DT)=$G(^XTMP("PSA",+PSOSITE,+QDRUG,DT))+$P($G(^PSRX(RXP,XTYPE,YY,0)),"^",4)
"RTN","PSODISPS",37,0)
 .;initialize bingo board variables
"RTN","PSODISPS",38,0)
 .I $G(IFN),$P($G(^PSRX(RXP,XTYPE,IFN,0)),"^",2)["W" S BINGRPR="W",BNGPDV=$P(^PSRX(RXP,XTYPE,IFN,0),"^",9),BINGNAM=$P($G(^PSRX(RXP,0)),"^",2)
"RTN","PSODISPS",39,0)
 W:$G(IFN) !?7,"Prescription Number "_$P(^PSRX(RXP,0),"^")_$S('$G(XTYPE):" Partial Fill",1:" Refill(s)")_" Released" I $G(SPEED) G XMIT
"RTN","PSODISPS",40,0)
 W:'$G(IFN) !?7,"No "_$S($G(XTYPE):"Refill(s)",1:"Partial(s)")_" to be Released"
"RTN","PSODISPS",41,0)
XMIT I $G(PSODISP)=2.4 D  ;build an send HL7 v2.4 messages to dispense system
"RTN","PSODISPS",42,0)
 . F I=0:0 S SUB=$O(^PSRX(RXP,"A",I)) Q:'I  I $P(^PSRX(RXP,"A",I,0),"^",2)="N" D
"RTN","PSODISPS",43,0)
 .. D NOW^%DTC S PSODTM=% K ^UTILITY($J,"PSOHL")
"RTN","PSODISPS",44,0)
 .. S IDGN=$P(^PSRX(+RXP,0),"^",6),FP=$S(XTYPE=1:"R",1:"P")
"RTN","PSODISPS",45,0)
 .. S ^UTILITY($J,"PSOHL",1)=+RXP_"^"_IDGN_"^"_PSODTM_"^"_+$G(PDUZ)_"^0^^PSO DISP^^^"_FP_"^"_IFN
"RTN","PSODISPS",46,0)
 .. S ZTRTN="INIT^PSORELDT",ZTDESC="EXTERNAL INTERFACE FOR RELEASE DATE/TIME",ZTIO="",ZTDTH=$H,ZTSAVE("^UTILITY($J,""PSOHL"",")="",ZTSAVE("PSOSITE")="",ZTSAVE("RXP")="" D ^%ZTLOAD K ^UTILITY($J,"PSOHL")
"RTN","PSODISPS",47,0)
 K IFN
"RTN","PSODISPS",48,0)
 Q
"RTN","PSODISPS",49,0)
STAT S RX0=^PSRX(RXP,0),$P(RX0,"^",15)=+^("STA"),RX2=^PSRX(RXP,2),J=RXP D ^PSOFUNC
"RTN","PSODISPS",50,0)
 W !!?5,$C(7),$C(7),"Rx# "_$P(^PSRX(RXP,0),"^")_" has a status of "_ST_" and is not eligible for",!?5,"release."_$S('$D(^XUSEC("PSORPH",DUZ)):"  Please check with a Pharmacist!",1:"")
"RTN","PSODISPS",51,0)
 K RX0,ST
"RTN","PSODISPS",52,0)
 Q
"RTN","PSODISPS",53,0)
OERR I '$D(PSOPAR) D ^PSOLSET I '$D(PSOPAR) W $C(7),!!,?5,"Site Parameters must be defined to use the Release option!",! S VALMBCK="" Q
"RTN","PSODISPS",54,0)
 S VALMBCK="Q",Y=$G(^PS(59,PSOSITE,"IB")),PSOIBSS=$$SERV^IBARX1(+Y) I 'PSOIBSS D IBSSR^PSOUTL I 'PSOIBFL D  S VALMBCK="" G EX
"RTN","PSODISPS",55,0)
 .W $C(7),!!,"The IB SERVICE/SECTION defined in your site parameter file is not valid.",!,"You will not be able to release any medication until this is corrected!",!
"RTN","PSODISPS",56,0)
 W !! S PSIN=+$P($G(^PS(59.7,1,49.99)),"^",2),RXP=$P(PSOLST($P(PSLST,",",ORD)),"^",2)
"RTN","PSODISPS",57,0)
 S DIC("S")="I $D(^XUSEC(""PSORPH"",+Y))",DIC("A")="Enter PHARMACIST: ",DIC="^VA(200,",DIC(0)="QEAM" D ^DIC G:"^"[X EX K DIC G:$D(DTOUT)!($D(DUOUT))!($D(DIRUT))!(Y=-1) EX S PSRH=+Y
"RTN","PSODISPS",58,0)
 ;check for Drug Acct background job K8 & K7.1
"RTN","PSODISPS",59,0)
 S X="PSA IV ALL LOCATIONS",DIC(0)="MZ",DIC=19.2 D ^DIC I Y=-1 K DIC,X,Y G DOIT
"RTN","PSODISPS",60,0)
 I $P($G(Y(0)),U,2)>DT S PSODA=1 S:'$P($G(^XTMP("PSA",0)),U,2) $P(^(0),U,2)=DT G DOIT
"RTN","PSODISPS",61,0)
 S X="PSA IV ALL LOCATIONS",DIC(0)="MZ",DIC=19 D ^DIC K DIC,X G:Y=-1 DOIT
"RTN","PSODISPS",62,0)
 K DIQ,PSA S DA=+Y,DIC=19,DIQ="PSA",DR=200,DIQ(0)="IN" D EN^DIQ1
"RTN","PSODISPS",63,0)
 I '$D(PSA(19,DA,200,"I")) K DIC,DA,X,Y,DIQ G DOIT
"RTN","PSODISPS",64,0)
 I PSA(19,DA,200,"I")>DT S PSODA=1 S:'$P($G(^XTMP("PSA",0)),U,2) $P(^(0),U,2)=DT
"RTN","PSODISPS",65,0)
 K PSA,DIC,DA,X,Y,DIQ
"RTN","PSODISPS",66,0)
 ;
"RTN","PSODISPS",67,0)
DOIT S POERR=1 D FULL^VALM1,BC1^PSODISP
"RTN","PSODISPS",68,0)
 I $D(DISGROUP),$D(BINGNAM),($D(BINGDIV)!$D(BNGPDV)!$D(BNGRDV)),($D(BINGRO)!$D(BINGRPR)) N TM,TM1 D REL^PSOBING1 K BINGNAM,BINGDIV,BINGRO,BINGRPR,BNGPDV,BNGRDV
"RTN","PSODISPS",69,0)
EX ;
"RTN","PSODISPS",70,0)
 K OUT,RX2,RXFD,RESK,ISUF,SUPN,%,DIC,IFN,J,DA,DR,DIE,X,X1,X2,Y,RXP,CX,PX,REC,DIR,YDT,REC,RDUZ,DIRUT,PSOCPN,PSOCPRX,PSOIBSS,PSOIBFL,PSOIBLP,PSOIBST,YY,QDRUG,QTY,TYPE,XTYPE,DUOUT,PSRH,XX,Y,PSIN,POERR,SUB
"RTN","PSODISPS",71,0)
 K DIR S DIR("A",1)=" ",DIR("A")="Press Return to Continue",DIR(0)="E" D ^DIR K DIRUT,DUOUT,DTOUT,DIR S VALMBCK="R"
"RTN","PSODISPS",72,0)
 S PSORXED=1 D ^PSOBUILD,ACT^PSOORNE2 K PSORXED Q
"RTN","PSOLSET")
0^11^B29903046
"RTN","PSOLSET",1,0)
PSOLSET ;BHAM ISC/SAB - site parameter set up ;12/03/92
"RTN","PSOLSET",2,0)
VERS ;;7.0;OUTPATIENT PHARMACY;**10,22,32,40,120,247**;DEC 1997;Build 18
"RTN","PSOLSET",3,0)
 ;Reference to ^PS(59.7 supported by DBIA 694
"RTN","PSOLSET",4,0)
 ;Reference to ^PSX(550 supported by DBIA 2230
"RTN","PSOLSET",5,0)
 ;Reference to ^%ZIS(2 supported by DBIA 3435
"RTN","PSOLSET",6,0)
 ;
"RTN","PSOLSET",7,0)
 I '$D(DUZ) W !,$C(7),"DUZ Number must be defined !!",! G LEAVE
"RTN","PSOLSET",8,0)
 W !,"Outpatient Pharmacy software - Version "_$P($T(VERS),";",3)
"RTN","PSOLSET",9,0)
 I $D(^XTMP("PSO_V7 INSTALL",0)) W !!,"Outpatient Pharmacy software is being installed.  PLEASE TRY LATER!",! G LEAVE
"RTN","PSOLSET",10,0)
 S PSOBAR1="",PSOBARS=0 ;make sure we have one
"RTN","PSOLSET",11,0)
 S PSOCNT=0 F I=0:0 S I=$O(^PS(59,I)) Q:'I  S PSOCNT=PSOCNT+1,Y=I
"RTN","PSOLSET",12,0)
 G DIV1:PSOCNT W !,$C(7) S DIR("A",1)="Site parameters must be specified for at least one site."
"RTN","PSOLSET",13,0)
 S DIR("A",2)="This is usually done by the package Co-ordinator.",DIR("A")="Do you want to continue:  ",DIR("B")="YES",DIR(0)="SA^Y:YES;N:NO",DIR("?")="Enter Y to edit site parameters or N to exit." D ^DIR
"RTN","PSOLSET",14,0)
 G LEAVE:"Y"'[$E(X)
"RTN","PSOLSET",15,0)
 W ! D ^PSOSITED G PSOLSET
"RTN","PSOLSET",16,0)
DIV1 G:PSOCNT=1 DIV3 S DIR(0)="Y",DIR("?")="Enter 'Y' to select Division or 'N' to EXIT"
"RTN","PSOLSET",17,0)
DIV2 I PSOCNT>1 W ! S DIC("A")="Division: ",DIC=59,DIC(0)="AEMQ"
"RTN","PSOLSET",18,0)
 S:$G(PSOVEX)'=1 DIC("S")="I $S('$D(^PS(59,+Y,""I"")):1,'^(""I""):1,DT'>^(""I""):1,1:0)"
"RTN","PSOLSET",19,0)
 D ^DIC K DIC G:$D(DUOUT)!($D(DTOUT)) LEAVE
"RTN","PSOLSET",20,0)
 I +Y<0 W $C(7),! S DIR("A",1)="A 'DIVISION' must be selected!",DIR("A")="Do you want to try again",DIR("B")="YES" D ^DIR G:'Y LEAVE G DIV2
"RTN","PSOLSET",21,0)
DIV3 K DIR S PSOSITE=+Y W:PSOCNT>1 !!?10,"You are logged on under the ",$P(^PS(59,PSOSITE,0),"^")," division.",! S PSOPAR=$G(^PS(59,PSOSITE,1)),PSOPAR7=$G(^PS(59,PSOSITE,"IB")),PSOSYS=$G(^PS(59.7,1,40.1)) D CUTDATE^PSOFUNC
"RTN","PSOLSET",22,0)
 S PSOPINST=$P($G(^PS(59,PSOSITE,"INI")),"^")
"RTN","PSOLSET",23,0)
 S (SITE,DA)=$P(^XMB(1,1,"XUS"),"^",17),DIC="4",DIQ(0)="IE",DR=".01;99",DIQ="PSXUTIL" D EN^DIQ1 S S3=$G(PSXUTIL(4,SITE,99,"I")),S2=$G(PSXUTIL(4,SITE,.01,"E")) K DA,DIC,DIQ(0),DR
"RTN","PSOLSET",24,0)
 S PSXSYS=+$O(^PSX(550,"C",""))_"^"_$G(S3)_"^"_$G(S2),PSOINST=S3
"RTN","PSOLSET",25,0)
 K S3,S2,S1,PSXUTIL
"RTN","PSOLSET",26,0)
 I $G(PSXSYS) D
"RTN","PSOLSET",27,0)
 .K:($P($G(^PSX(550,+PSXSYS,0)),"^",2)'="A") PSXSYS
"RTN","PSOLSET",28,0)
 .S Y=$$VERSION^XPDUTL("PSO") I Y>6.0 S PSXVER=1
"RTN","PSOLSET",29,0)
 E  K PSXSYS
"RTN","PSOLSET",30,0)
 S PSODIV=$S(($P(PSOSYS,"^",2))&('$P(PSOSYS,"^",3)):0,1:1)
"RTN","PSOLSET",31,0)
 I $D(DUZ),$D(^VA(200,+DUZ,0)) S PSOCLC=DUZ
"RTN","PSOLSET",32,0)
PLBL I $P(PSOPAR,"^",8) D
"RTN","PSOLSET",33,0)
 .S %ZIS="MNQ",%ZIS("A")="Select PROFILE PRINTER: " S:$G(PSOCLBL)&($D(PSOPROP)) %ZIS("B")=PSOPROP
"RTN","PSOLSET",34,0)
 .D ^%ZIS K %ZIS,IO("Q"),IOP Q:POP  S PSOPROP=ION D ^%ZISC
"RTN","PSOLSET",35,0)
LBL S %ZIS="MNQ",%ZIS("A")="Select LABEL PRINTER: " S:$G(PSOCLBL)&($D(PSOLAP))!($G(SUSPT)) %ZIS("B")=$S($G(SUSPT):PSLION,1:PSOLAP)
"RTN","PSOLSET",36,0)
 D ^%ZIS K %ZIS,IO("Q"),IOP S:POP PSOQUIT=1 G:POP EXIT S @$S($G(SUSPT):"PSLION",1:"PSOLAP")=ION,PSOPIOST=$G(IOST(0))
"RTN","PSOLSET",37,0)
 N PSOIOS S PSOIOS=IOS D DEVBAR^PSOBMST
"RTN","PSOLSET",38,0)
 S PSOBARS=PSOBAR1]""&(PSOBAR0]"")&$P(PSOPAR,"^",19),PSOIOS=IOS D ^%ZISC
"RTN","PSOLSET",39,0)
LASK I $G(PSOPIOST),$D(^%ZIS(2,PSOPIOST,55,"B","LL")) G EXIT
"RTN","PSOLSET",40,0)
 K DIR S DIR("A")="OK to assume label alignment is correct",DIR("B")="YES",DIR(0)="Y",DIR("?")="Enter Y if labels are aligned, N if they need to be aligned." D ^DIR S:$D(DIRUT) PSOQUIT=1 G:Y!($D(DIRUT)) EXIT
"RTN","PSOLSET",41,0)
P2 S IOP=$G(PSOLAP) D ^%ZIS K IOP I POP W $C(7),!?5,"Printer is busy.",! G LASK
"RTN","PSOLSET",42,0)
 U IO(0) W !,"Align labels so that a perforation is at the top of the",!,"print head and the left side is at column zero."
"RTN","PSOLSET",43,0)
 W ! K DIR,DIRUT,DUOUT,DTOUT S DIR(0)="E" D ^DIR K DIR,DTOUT,DUOUT Q:$D(DIRUT)  D ^PSOLBLT D ^%ZISC
"RTN","PSOLSET",44,0)
 K DIRUT,DIR S DIR("A")="Is this correct",DIR("B")="YES",DIR(0)="Y",DIR("?")="Enter Y if labels are aligned correctly, N if they need to be aligned." D ^DIR S:$D(DIRUT) PSOQUIT=1 G:Y!($D(DIRUT)) EXIT
"RTN","PSOLSET",45,0)
 G P2
"RTN","PSOLSET",46,0)
LEAVE S XQUIT="" G FINAL
"RTN","PSOLSET",47,0)
Q W !?10,$C(7),"Default printer for labels must be entered." G LBL
"RTN","PSOLSET",48,0)
 ;
"RTN","PSOLSET",49,0)
EXIT D ^%ZISC Q:$G(PSOCLBL)
"RTN","PSOLSET",50,0)
 D:'$G(PSOBFLAG) GROUP K I,IOP,X,Y,%ZIS,DIC,J,DIR,X,Y,DTOUT,DIROUT,DIRUT,DUOUT Q
"RTN","PSOLSET",51,0)
 ;
"RTN","PSOLSET",52,0)
FINAL ;exit action from main menu - kill and quit
"RTN","PSOLSET",53,0)
 K SITE,PSOCP,PSNP,PSL,PRCA,PSLION,PSOPINST
"RTN","PSOLSET",54,0)
 K GROUPCNT,DISGROUP,PSOCAP,PSOINST,PSOION,PSONULBL,PSOSITE7,PFIO,PSOIOS,X,Y,PSOSYS,PSODIV,PSOPAR,PSOPAR7,PSOLAP,PSOPROP,PSOCLC,PSOCNT
"RTN","PSOLSET",55,0)
 K PSODTCUT,PSOSITE,PSOPRPAS,PSOBAR1,PSOBAR0,PSOBARS,SIG,DIR,DIRUT,DTOUT,DIROUT,DUOUT,I,%ZIS,DIC,J,PSOREL
"RTN","PSOLSET",56,0)
 Q
"RTN","PSOLSET",57,0)
GROUP ;display group
"RTN","PSOLSET",58,0)
 S GROUPCNT=0,AGROUP="" I $D(^PS(59.3,0)) F  S AGROUP=$O(^PS(59.3,"B",AGROUP)) Q:AGROUP=""  D
"RTN","PSOLSET",59,0)
 .S GROUPCNT=GROUPCNT+1 I GROUPCNT=1 S AGROUP1=AGROUP
"RTN","PSOLSET",60,0)
 S:GROUPCNT=1 GRPNME=AGROUP1,II="" G:GROUPCNT>1 GROUP1
"RTN","PSOLSET",61,0)
 Q:'$D(GRPNME)  F  S II=$O(^PS(59.3,"B",GRPNME,II)) Q:II=""  S DISGROUP=II
"RTN","PSOLSET",62,0)
 K AGROUP,AGROUP1,GRPNME,II
"RTN","PSOLSET",63,0)
 Q
"RTN","PSOLSET",64,0)
GROUP1 W ! S DIC("A")="Bingo Board Display: ",DIC=59.3,DIC(0)="AEMQZ",DIR(0)="Y",DIR("?")="Enter 'Y' to select Bingo Board Display or 'N' to EXIT"
"RTN","PSOLSET",65,0)
 S:$P($G(^PS(59,PSOSITE,1)),"^",20) DIC("B")=$P($G(^PS(59,PSOSITE,1)),"^",20)
"RTN","PSOLSET",66,0)
 D ^DIC K DIC Q:$D(DTOUT)!($D(DUOUT))
"RTN","PSOLSET",67,0)
 I +Y<0 W $C(7) S DIR("A",1)="A 'BINGO BOARD DISPLAY' should be selected!",DIR("A")="Do you want to try again",DIR("B")="YES",DIR("?")="A display group must be defined in order to run Bingo Board." D ^DIR Q:"Y"'[$E(X)  G GROUP
"RTN","PSOLSET",68,0)
 S DISGROUP=+Y
"RTN","PSOLSET",69,0)
 K DIR,DIC,AGROUP,AGROUP1,GRPNME,II
"RTN","PSOLSET",70,0)
 Q
"RTN","PSOORAL1")
0^5^B60154792
"RTN","PSOORAL1",1,0)
PSOORAL1 ;BHAM ISC/SAB - Build Listman activity logs ;11/16/92 13:11
"RTN","PSOORAL1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**71,156,148,247**;DEC 1997;Build 18
"RTN","PSOORAL1",3,0)
 N RX0,VALMCNT K DIR,DTOUT,DUOUT,DIRUT,^TMP("PSOAL",$J) S DA=$P(PSOLST(ORN),"^",2),RX0=^PSRX(DA,0),J=DA,RX2=$G(^(2)),R3=$G(^(3)),CMOP=$O(^PSRX(DA,4,0))
"RTN","PSOORAL1",4,0)
 S IEN=0,DIR(0)="LO^1:"_$S(CMOP:8,1:7),DIR("A",1)=" ",DIR("A",2)="Select Activity Log by  number",DIR("A",3)="1.  Refill      2.  Partial      3.  Activity     4.  Labels"
"RTN","PSOORAL1",5,0)
 S DIR("A")=$S(CMOP:"5.  Copay       6.  ECME         7.  CMOP Events  8.  All Logs",1:"5.  Copay       6.  ECME         7.  All Logs")
"RTN","PSOORAL1",6,0)
 S DIR("B")=$S(CMOP:8,1:7) D ^DIR S PSOELSE=+Y I +Y S Y=$S(CMOP&(Y[8):"1,2,3,4,5,6,7",'CMOP&(Y[7):"1,2,3,4,5,6",1:Y) S ACT=Y D FULL^VALM1 D
"RTN","PSOORAL1",7,0)
 .S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Rx #: "_$P(RX0,"^")_"   Original Fill Released: " I $P(RX2,"^",13) S DTT=$P(RX2,"^",13) D DAT S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_DAT K DAT,DTT
"RTN","PSOORAL1",8,0)
 .I $P(RX2,"^",15) S DTT=$P(RX2,"^",15) D DAT S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_"(Returned to Stock "_DAT_")" K DAT,DTT
"RTN","PSOORAL1",9,0)
 .S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Routing: "_$S($P(RX0,"^",11)="W":"Window",1:"Mail")_$S($P($G(^PSRX(DA,"OR1")),"^",5):"      Finished by: "_$P(^VA(200,$P(^PSRX(DA,"OR1"),"^",5),0),"^"),1:"")
"RTN","PSOORAL1",10,0)
 .D:$G(^PSRX(DA,"H"))]""&($P(PSOLST(ORN),"^",3)="HOLD") HLD^PSOORAL2
"RTN","PSOORAL1",11,0)
 .F LOG=1:1:$L(ACT,",") Q:$P(ACT,",",LOG)']""  S LBL=$P(ACT,",",LOG) D @$S(LBL=1:"RF^PSOORAL2",LBL=2:"PAR^PSOORAL2",LBL=3:"ACT",LBL=5:"COPAY",LBL=6:"ECME",LBL=7:"^PSORXVW2",1:"LBL")
"RTN","PSOORAL1",12,0)
 I 'PSOELSE S VALMBCK="" K PSOELSE Q 
"RTN","PSOORAL1",13,0)
 K ST0,RFL,RFLL,RFL1,II,J,N,PHYS,L1,DIRUT,PSDIV,PSEXDT,MED,M1,FFX,DTT,DAT,R3,RTN,SIG,STA,P1,PL,P0,Z0,Z1,EXDT,IFN,DIR,DUOUT,DTOUT,PSOELSE
"RTN","PSOORAL1",14,0)
 K LBL,I,RFDATE,%H,%I,RN,RFT
"RTN","PSOORAL1",15,0)
 S PSOAL=IEN K IEN,ACT,LBL,LOG D EN^PSOORAL S VALMBCK="R"
"RTN","PSOORAL1",16,0)
 Q
"RTN","PSOORAL1",17,0)
ACT ;activity log
"RTN","PSOORAL1",18,0)
 N CNT
"RTN","PSOORAL1",19,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=" ",IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Activity Log:"
"RTN","PSOORAL1",20,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="#   Date        Reason         Rx Ref         Initiator Of Activity",IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0),"=",79)="="
"RTN","PSOORAL1",21,0)
 I '$O(^PSRX(DA,"A",0)) S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="There's NO Activity to report" Q
"RTN","PSOORAL1",22,0)
 S CNT=0
"RTN","PSOORAL1",23,0)
 F N=0:0 S N=$O(^PSRX(DA,"A",N)) Q:'N  S P1=^(N,0),DTT=P1\1 D DAT D
"RTN","PSOORAL1",24,0)
 .I $P(P1,"^",2)="M" Q
"RTN","PSOORAL1",25,0)
 .S IEN=IEN+1,CNT=CNT+1,^TMP("PSOAL",$J,IEN,0)=CNT_"   "_DAT_"    ",$P(RN," ",15)=" ",REA=$P(P1,"^",2),REA=$F("HUCELPRWSIVDABXGKN",REA)-1
"RTN","PSOORAL1",26,0)
 .I REA D
"RTN","PSOORAL1",27,0)
 ..S STA=$P("HOLD^UNHOLD^DISCONTINUED^EDIT^RENEWED^PARTIAL^REINSTATE^REPRINT^SUSPENSE^RETURNED^INTERVENTION^DELETED^DRUG INTERACTION^PROCESSED^X-INTERFACE^PATIENT INSTR.^PKI/DEA^DISP COMPLETED^","^",REA)
"RTN","PSOORAL1",28,0)
 ..S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_STA_$E(RN,$L(STA)+1,15)
"RTN","PSOORAL1",29,0)
 .E  S $P(STA," ",15)=" ",^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_STA
"RTN","PSOORAL1",30,0)
 .K STA,RN S $P(RN," ",15)=" ",RF=+$P(P1,"^",4)
"RTN","PSOORAL1",31,0)
 .S RFT=$S(RF>0&(RF<6):"REFILL "_RF,RF=6:"PARTIAL",RF>6:"REFILL "_(RF-1),1:"ORIGINAL")
"RTN","PSOORAL1",32,0)
 .S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_RFT_$E(RN,$L(RFT)+1,15)_$S($D(^VA(200,+$P(P1,"^",3),0)):$P(^(0),"^"),1:$P(P1,"^",3))
"RTN","PSOORAL1",33,0)
 .;S:$P(P1,"^",5)]"" IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Comments: "_$P(P1,"^",5)
"RTN","PSOORAL1",34,0)
 .I $P(P1,"^",5)]"" N PSOACBRK,PSOACBRV D
"RTN","PSOORAL1",35,0)
 ..S PSOACBRV=$P(P1,"^",5)
"RTN","PSOORAL1",36,0)
 ..I $L(PSOACBRV)<71 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Comments: "_PSOACBRV Q
"RTN","PSOORAL1",37,0)
 ..I $E(PSOACBRV,1,70)'[" " S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Comments: "_$E(PSOACBRV,1,70),IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=$E(PSOACBRV,71,245) Q
"RTN","PSOORAL1",38,0)
 ..F PSOACBRK=245:-1 Q:PSOACBRK=0  I $E(PSOACBRV,PSOACBRK)=" ",PSOACBRK<71 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Comments: "_$E(PSOACBRV,1,PSOACBRK),IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=$E(PSOACBRV,PSOACBRK,245) Q
"RTN","PSOORAL1",39,0)
 .I $P($G(^PSRX(DA,"A",N,1)),"^")]"" S IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0)," ",5)=$P($G(^PSRX(DA,"A",N,1)),"^") I $P($G(^PSRX(DA,"A",N,1)),"^",2)]"" S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_":"_$P($G(^PSRX(DA,"A",N,1)),"^",2)
"RTN","PSOORAL1",40,0)
 .I $O(^PSRX(DA,"A",N,2,0)) F I=0:0 S I=$O(^PSRX(DA,"A",N,2,I)) Q:'I  S MIG=^PSRX(DA,"A",N,2,I,0) D
"RTN","PSOORAL1",41,0)
 ..F SG=1:1:$L(MIG) S:$L(^TMP("PSOAL",$J,IEN,0)_" "_$P(MIG," ",SG))>80 IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0)," ",9)=" " S:$P(MIG," ",SG)'="" ^TMP("PSOAL",$J,IEN,0)=$G(^TMP("PSOAL",$J,IEN,0))_" "_$P(MIG," ",SG)
"RTN","PSOORAL1",42,0)
 K MIG,SG,I
"RTN","PSOORAL1",43,0)
 Q
"RTN","PSOORAL1",44,0)
LBL ;label log
"RTN","PSOORAL1",45,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=" ",IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Label Log:"
"RTN","PSOORAL1",46,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="#   Date        Rx Ref                    Printed By",IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0),"=",79)="="
"RTN","PSOORAL1",47,0)
 I '$O(^PSRX(DA,"L",0)) S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="There are NO Labels printed." Q
"RTN","PSOORAL1",48,0)
 F L1=0:0 S L1=$O(^PSRX(DA,"L",L1)) Q:'L1  S LBL=^PSRX(DA,"L",L1,0),DTT=$P(^(0),"^") D DAT D
"RTN","PSOORAL1",49,0)
 .S $P(RN," ",26)=" ",IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=L1_"   "_DAT_"    ",RFT=$S($P(LBL,"^",2):"REFILL "_$P(LBL,"^",2),1:"ORIGINAL"),RFT=RFT_$E(RN,$L(RFT)+1,26)
"RTN","PSOORAL1",50,0)
 .S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_RFT_$P($G(^VA(200,$P(LBL,"^",4),0)),"^"),IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Comments: "_$P(LBL,"^",3)
"RTN","PSOORAL1",51,0)
 Q
"RTN","PSOORAL1",52,0)
 ;
"RTN","PSOORAL1",53,0)
COPAY ;Copay activity log
"RTN","PSOORAL1",54,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=" ",IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Copay Activity Log:"
"RTN","PSOORAL1",55,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="#   Date        Reason               Rx Ref         Initiator Of Activity",IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0),"=",79)="="
"RTN","PSOORAL1",56,0)
 I '$O(^PSRX(DA,"COPAY",0)) S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="There's NO Copay activity to report" Q
"RTN","PSOORAL1",57,0)
 F N=0:0 S N=$O(^PSRX(DA,"COPAY",N)) Q:'N  S P1=^(N,0),DTT=P1\1 D DAT D
"RTN","PSOORAL1",58,0)
 .S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=N_"   "_DAT_"    ",$P(RN," ",21)=" ",REA=$P(P1,"^",2),REA=$F("ARICE",REA)-1
"RTN","PSOORAL1",59,0)
 .I REA D
"RTN","PSOORAL1",60,0)
 ..S STA=$P("ANNUAL CAP REACHED^COPAY RESET^IB-INITIATED COPAY^REMOVE COPAY CHARGE^RX EDITED^","^",REA)
"RTN","PSOORAL1",61,0)
 ..S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_STA_$E(RN,$L(STA)+1,21)
"RTN","PSOORAL1",62,0)
 .E  S $P(STA," ",21)=" ",^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_STA
"RTN","PSOORAL1",63,0)
 .K STA,RN S $P(RN," ",15)=" ",RF=+$P(P1,"^",4)
"RTN","PSOORAL1",64,0)
 .S RFT=$S(RF>0:"REFILL "_RF,1:"ORIGINAL")
"RTN","PSOORAL1",65,0)
 .S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_RFT_$E(RN,$L(RFT)+1,15)_$S($D(^VA(200,+$P(P1,"^",3),0)):$P(^(0),"^"),1:$P(P1,"^",3))
"RTN","PSOORAL1",66,0)
 .S:$P(P1,"^",5)]""!($P(P1,"^",6)]"")!($P(P1,"^",7)]"") IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Comment: "_$P(P1,"^",5)
"RTN","PSOORAL1",67,0)
 .I $P(P1,"^",6)]"" S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_"  Old value="_$P(P1,"^",6)_"   New value="_$P(P1,"^",7)
"RTN","PSOORAL1",68,0)
 Q
"RTN","PSOORAL1",69,0)
 ;
"RTN","PSOORAL1",70,0)
ECME ; ECME activity log
"RTN","PSOORAL1",71,0)
 N N,P1,RFT,PSOACBRK,PSOACBRV,MIG,SG,I,NOTFND,CNT,LINE
"RTN","PSOORAL1",72,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=" ",IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="ECME Log:"
"RTN","PSOORAL1",73,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="#   Date/Time           Rx Ref          Initiator Of Activity"
"RTN","PSOORAL1",74,0)
 S IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0),"=",79)="="
"RTN","PSOORAL1",75,0)
 S NOTFND=1,I=0 F  S I=$O(^PSRX(DA,"A",I)) Q:'I  S Z=$G(^PSRX(DA,"A",I,0)) I $P(Z,"^",2)="M" S NOTFND=0 Q
"RTN","PSOORAL1",76,0)
 I NOTFND S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="There's NO ECME Activity to report" Q
"RTN","PSOORAL1",77,0)
 S CNT=0
"RTN","PSOORAL1",78,0)
 F N=0:0 S N=$O(^PSRX(DA,"A",N)) Q:'N  S P1=^(N,0) D
"RTN","PSOORAL1",79,0)
 .I $P(P1,"^",2)'="M" Q
"RTN","PSOORAL1",80,0)
 .S IEN=IEN+1,CNT=CNT+1
"RTN","PSOORAL1",81,0)
 .K STA,RN S $P(RN," ",15)=" ",RF=+$P(P1,"^",4)
"RTN","PSOORAL1",82,0)
 .S LINE=CNT,$E(LINE,5)=$$FMTE^XLFDT($P(P1,"^"),2),$E(LINE,25)=$S(RF:"REFILL "_RF,1:"ORIGINAL")
"RTN","PSOORAL1",83,0)
 .S $E(LINE,41)=$$GET1^DIQ(200,+$P(P1,"^",3),.01)
"RTN","PSOORAL1",84,0)
 .S ^TMP("PSOAL",$J,IEN,0)=LINE
"RTN","PSOORAL1",85,0)
 .I $P(P1,"^",5)]"" D
"RTN","PSOORAL1",86,0)
 ..S PSOACBRV=$P(P1,"^",5)
"RTN","PSOORAL1",87,0)
 ..I $L(PSOACBRV)<71 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Comments: "_PSOACBRV Q
"RTN","PSOORAL1",88,0)
 ..I $E(PSOACBRV,1,70)'[" " S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Comments: "_$E(PSOACBRV,1,70),IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=$E(PSOACBRV,71,245) Q
"RTN","PSOORAL1",89,0)
 ..F PSOACBRK=245:-1 Q:PSOACBRK=0  I $E(PSOACBRV,PSOACBRK)=" ",PSOACBRK<71 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Comments: "_$E(PSOACBRV,1,PSOACBRK),IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=$E(PSOACBRV,PSOACBRK,245) Q
"RTN","PSOORAL1",90,0)
 .I $O(^PSRX(DA,"A",N,2,0)) F I=0:0 S I=$O(^PSRX(DA,"A",N,2,I)) Q:'I  S MIG=^PSRX(DA,"A",N,2,I,0) D
"RTN","PSOORAL1",91,0)
 ..F SG=1:1:$L(MIG) D
"RTN","PSOORAL1",92,0)
 ...S:$L(^TMP("PSOAL",$J,IEN,0)_" "_$P(MIG," ",SG))>80 IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0)," ",9)=" "
"RTN","PSOORAL1",93,0)
 ...S:$P(MIG," ",SG)'="" ^TMP("PSOAL",$J,IEN,0)=$G(^TMP("PSOAL",$J,IEN,0))_" "_$P(MIG," ",SG)
"RTN","PSOORAL1",94,0)
 D DISPREJ
"RTN","PSOORAL1",95,0)
 Q
"RTN","PSOORAL1",96,0)
 ;
"RTN","PSOORAL1",97,0)
DISPREJ  ;
"RTN","PSOORAL1",98,0)
 N LN,SEQ,REJ,PRI,VAR,X,X1,X2,I,RFT
"RTN","PSOORAL1",99,0)
 I '$D(^PSRX(DA,"REJ")) Q
"RTN","PSOORAL1",100,0)
 S PRI="PSOAL",$P(LN,"=",80)="",SEQ=0
"RTN","PSOORAL1",101,0)
 S IEN=$G(IEN)+1,^TMP(PRI,$J,IEN,0)=" "
"RTN","PSOORAL1",102,0)
 S IEN=IEN+1,^TMP(PRI,$J,IEN,0)="ECME REJECT Log:"
"RTN","PSOORAL1",103,0)
 S IEN=IEN+1,^TMP(PRI,$J,IEN,0)="#  Date/Time Rcvd    Rx Ref    Reject Type     STATUS     Date/Time Resolved"
"RTN","PSOORAL1",104,0)
 S IEN=IEN+1,^TMP(PRI,$J,IEN,0)=LN
"RTN","PSOORAL1",105,0)
 F REJ=0:0 S REJ=$O(^PSRX(DA,"REJ",REJ)) Q:'REJ  D
"RTN","PSOORAL1",106,0)
 . S VAR=$G(^PSRX(DA,"REJ",REJ,0))
"RTN","PSOORAL1",107,0)
 . S RFT=+$P(VAR,"^",4)
"RTN","PSOORAL1",108,0)
 . S SEQ=SEQ+1,X=SEQ,$E(X,4)=$$FMTE^XLFDT($P(VAR,"^",2),2),$E(X,22)=$S(RFT:"REFILL "_RFT,1:"ORIGINAL")
"RTN","PSOORAL1",109,0)
 . S $E(X,32)=$S(+VAR=79:"REFILL TOO SOON",1:"DUR")
"RTN","PSOORAL1",110,0)
 . S $E(X,48)=$S($P(VAR,"^",5):"RESOLVED",1:"UNRESOLVED")
"RTN","PSOORAL1",111,0)
 . S:$P(VAR,"^",6) $E(X,59)=$$FMTE^XLFDT($P(VAR,"^",6),2)
"RTN","PSOORAL1",112,0)
 . ; S:$P(VAR,"^",14) $E(X,67)="(RE-OPENED)"
"RTN","PSOORAL1",113,0)
 . S IEN=IEN+1,^TMP(PRI,$J,IEN,0)=X
"RTN","PSOORAL1",114,0)
 . I $P(VAR,"^",5) D
"RTN","PSOORAL1",115,0)
 . . S IEN=IEN+1,X=$$GET1^DIQ(52.25,REJ_","_DA,12)
"RTN","PSOORAL1",116,0)
 . . S X1=$$GET1^DIQ(52.25,REJ_","_DA,13) S:X1'="" X=X1_" ("_X_")"
"RTN","PSOORAL1",117,0)
 . . F I=1:1 Q:X=""  D
"RTN","PSOORAL1",118,0)
 . . . S ^TMP(PRI,$J,IEN,0)=$S(I=1:"Comments: ",1:"          ")_$E(X,1,69)
"RTN","PSOORAL1",119,0)
 . . . S X=$E(X,70,999) S:X'="" IEN=IEN+1
"RTN","PSOORAL1",120,0)
 Q
"RTN","PSOORAL1",121,0)
 ;
"RTN","PSOORAL1",122,0)
DAT S DAT="",DTT=DTT\1 Q:DTT'?7N  S DAT=$E(DTT,4,5)_"/"_$E(DTT,6,7)_"/"_$E(DTT,2,3)
"RTN","PSOORAL1",123,0)
 Q
"RTN","PSOORED2")
0^3^B63154079
"RTN","PSOORED2",1,0)
PSOORED2 ;ISC-BHAM/SAB-edit orders from backdoor con't ;03/06/95 10:24
"RTN","PSOORED2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**2,51,46,78,102,114,117,133,159,148,247**;DEC 1997;Build 18
"RTN","PSOORED2",3,0)
 ;Reference to $$DIVNCPDP^BPSBUTL supported by IA 4719
"RTN","PSOORED2",4,0)
 ;Reference to $$ECMEON^BPSUTIL supported by IA 4410
"RTN","PSOORED2",5,0)
 ;called from psooredt. cmop edit checks.
"RTN","PSOORED2",6,0)
 Q
"RTN","PSOORED2",7,0)
ISDT D CHK K RF I $G(CMRL) W !,"Released by CMOP.  No editing allowed on Issue Date." D PAUSE^VALM1 K CMRL Q
"RTN","PSOORED2",8,0)
 S %DT="AEX",%DT(0)=-$P(^PSRX(DA,2),"^",2),Y=$P(RX0,"^",13) X ^DD("DD") S %DT("A")="ISSUE DATE: ",%DT("B")=Y D ^%DT I "^"[$E(X) K X,Y,%DT,DTOUT,DUOUT Q
"RTN","PSOORED2",9,0)
 G:Y=-1 ISDT S PSORXED("FLD",1)=Y
"RTN","PSOORED2",10,0)
 ;S DR="1///"_Y,DIE=52 D ^DIE
"RTN","PSOORED2",11,0)
 D KV K X,Y,%DT
"RTN","PSOORED2",12,0)
 Q
"RTN","PSOORED2",13,0)
FLDT D CHK K RF I $G(CMRL) W !,"Released by CMOP.  No editing allowed on Fill Date." D PAUSE^VALM1 K CMRL Q
"RTN","PSOORED2",14,0)
 D KV S Y=$P(^PSRX(DA,2),"^",2) X ^DD("DD") S DIR("A")="FILL DATE",DIR("B")=Y
"RTN","PSOORED2",15,0)
 S DIR(0)="D^"_$P(RX0,"^",13)_":"_$P(PSORXED("RX2"),"^",6)_":EX"
"RTN","PSOORED2",16,0)
 S DIR("?",1)="The earliest fill date allowed is determined by the Issue Date,",DIR("?",2)="the Fill Date cannot be before the Issue Date or past the Expiration Date."
"RTN","PSOORED2",17,0)
 S DIR("?")="Both the month and day are required." D ^DIR
"RTN","PSOORED2",18,0)
 I $D(DIRUT) D KV K PSORXED("FLD",22),X,Y Q
"RTN","PSOORED2",19,0)
 S PSORXED("FLD",22)=Y ;S DR="22R///"_Y,DIE=52 D ^DIE
"RTN","PSOORED2",20,0)
 K X,Y
"RTN","PSOORED2",21,0)
KV K DIR,DUOUT,DTOUT,DIRUT
"RTN","PSOORED2",22,0)
 Q
"RTN","PSOORED2",23,0)
CHK I $D(^PSRX("AR",+$P(PSORXED("RX2"),"^",13),PSORXED("IRXN"))) S CMRL=1 Q
"RTN","PSOORED2",24,0)
 F RF=0:0 S RF=$O(^PSRX(PSORXED("IRXN"),1,RF)) Q:'RF  I $D(^PSRX("AR",+$P(^PSRX(PSORXED("IRXN"),1,RF,0),"^",18),PSORXED("IRXN"))) S CMRL=1
"RTN","PSOORED2",25,0)
 Q
"RTN","PSOORED2",26,0)
CHK1 I +^PSRX(PSORXED("IRXN"),"STA")=5 D  Q:'$G(CMRL)
"RTN","PSOORED2",27,0)
 .S SURX=$O(^PS(52.5,PSORXED("IRXN"),0)) Q:'SURX  I $P(^PS(52.5,SURX,0),"^",7)']""!($P(^(0),"^",7)="Q") S CMRL=1
"RTN","PSOORED2",28,0)
 .E  S CMRL=0
"RTN","PSOORED2",29,0)
 F FEV=0:0 S FEV=$O(^PSRX(PSORXED("IRXN"),4,FEV)) Q:'FEV  I '$P(^PSRX(PSORXED("IRXN"),4,FEV,0),"^",3),$P(^(0),"^",4)<3 S CMRL=0
"RTN","PSOORED2",30,0)
 Q
"RTN","PSOORED2",31,0)
REF ;shows refill info
"RTN","PSOORED2",32,0)
 S RFN=0 F N=0:0 S N=$O(^PSRX(PSORXED("IRXN"),1,N)) Q:'N  S RFM=N,RFN=RFN+1
"RTN","PSOORED2",33,0)
 ;G:RFM=1 SRF 
"RTN","PSOORED2",34,0)
 W ! K DA,DR D KV S DIR(0)="Y",DIR("B")="No",DIR("A")="There "_$S(RFN>1:"are ",1:"is ")_RFN_" refill"_$S(RFN>1:"s.",1:".")_"  Do you want to edit"
"RTN","PSOORED2",35,0)
 D ^DIR D KV Q:'Y
"RTN","PSOORED2",36,0)
SRF W !!,"#  Log Date   Refill Date  Qty               Routing  Lot #       Pharmacist",! F I=1:1:80 W "="
"RTN","PSOORED2",37,0)
 F N=0:0 S N=$O(^PSRX(PSORXED("IRXN"),1,N)) Q:'N  S P1=^(N,0) D
"RTN","PSOORED2",38,0)
 .S DTT=$P(P1,"^",8)\1 D DAT S LOG=DAT,DTT=$P(P1,"^"),$P(RN," ",10)=" " D DAT
"RTN","PSOORED2",39,0)
 .W !,N_"  "_LOG_"   "_DAT_"      "_$P(P1,"^",4)_$E("               ",$L($P(P1,"^",4))+1,15)_"  "_$S($P(P1,"^",2)="M":"MAIL  ",1:"WINDOW")_"   "_$P(P1,"^",6)_$E(RN,$L($P(P1,"^",6))+1,12)
"RTN","PSOORED2",40,0)
 .W $E($S($D(^VA(200,+$P(P1,"^",5),0)):$P(^(0),"^"),1:""),1,16)
"RTN","PSOORED2",41,0)
 .S PSDIV=$S($D(^PS(59,+$P(P1,"^",9),0)):$P(^(0),"^",6),1:"Unknown") W !,"Division: "_PSDIV_$E("        ",$L(PSDIV)+1,8)_"  "
"RTN","PSOORED2",42,0)
 .W "Dispensed: "_$S($P(P1,"^",19):$E($P(P1,"^",19),4,5)_"/"_$E($P(P1,"^",19),6,7)_"/"_$E($P(P1,"^",19),2,3),1:"")_"  "
"RTN","PSOORED2",43,0)
 .S RTS=$S($P(P1,"^",16):" Returned to Stock: "_$E($P(P1,"^",16),4,5)_"/"_$E($P(P1,"^",16),6,7)_"/"_$E($P(P1,"^",16),2,3),1:" Released: "_$S($P(P1,"^",18):$E($P(P1,"^",18),4,5)_"/"_$E($P(P1,"^",18),6,7)_"/"_$E($P(P1,"^",18),2,3),1:""))
"RTN","PSOORED2",44,0)
 .W RTS W:$P(P1,"^",3)]"" !,"   Remarks: "_$P(P1,"^",3)
"RTN","PSOORED2",45,0)
 S DA(1)=PSORXED("IRXN") I RFN=1 S Y=RFM G RFM
"RTN","PSOORED2",46,0)
 W ! D KV S DIR("A")="Select a Refill",DIR(0)="NO^1:"_RFM_":0" D ^DIR Q:$D(DIRUT)
"RTN","PSOORED2",47,0)
RFM I '$D(^PSRX(PSORXED("IRXN"),1,Y,0)) W !,$C(7),"Invalid selection.",! G SRF
"RTN","PSOORED2",48,0)
 S CMRL=0 I $D(^PSRX("AR",+$P(^PSRX(PSORXED("IRXN"),1,Y,0),"^",18),PSORXED("IRXN"),Y)) S CMRL=1 G RFX
"RTN","PSOORED2",49,0)
 F FEV=0:0 S FEV=$O(^PSRX(PSORXED("IRXN"),4,FEV)) Q:'FEV  I $P(^PSRX(PSORXED("IRXN"),4,FEV,0),"^",3)=Y,$P(^(0),"^",4)<3 S CMRL=1
"RTN","PSOORED2",50,0)
RFX N RFL,NDC,DAW,FLDS,QUIT,CHGNDC,CHANGED
"RTN","PSOORED2",51,0)
 W ! S DA=Y,DIE="^PSRX("_DA(1)_",1,",DR=$S('CMRL:".01;1.1",1:"1.2:5;8")
"RTN","PSOORED2",52,0)
 D GETS^DIQ(52.1,DA_","_DA(1)_",",".01;1;1.1;8;11;81","I","FLDS")
"RTN","PSOORED2",53,0)
 S:$D(^PSRX(DA(1),1,DA,0)) PSORXED("RX1")=^PSRX(DA(1),1,DA,0),(RFED,RFL)=DA
"RTN","PSOORED2",54,0)
 D ^DIE S QUIT=$D(Y) K FEV,RFN,RFM,X,Y,DR
"RTN","PSOORED2",55,0)
 I '$G(DA) D REVERSE^PSOBPSU1(PSORXED("IRXN"),RFL,"DE",5) K CMRL,RFED D:$D(PSORX("PSOL"))&($G(DI)=.01) RFD Q
"RTN","PSOORED2",56,0)
 I 'CMRL,'QUIT S DR="1;1.2:5;8" D ^DIE S QUIT=$D(Y)
"RTN","PSOORED2",57,0)
 I '$D(^PSRX(PSORXED("IRXN"),1,RFL)) Q
"RTN","PSOORED2",58,0)
 I 'QUIT,$$STATUS^PSOBPSUT(PSORXED("IRXN"),RFL)'="" D
"RTN","PSOORED2",59,0)
 . S NDC=$$GETNDC^PSONDCUT(PSORXED("IRXN"),RFL)
"RTN","PSOORED2",60,0)
 . D EDTDAW^PSODAWUT(PSORXED("IRXN"),RFL,.DAW) I $G(DAW)="^" Q
"RTN","PSOORED2",61,0)
 . D SAVDAW^PSODAWUT(PSORXED("IRXN"),RFL,+$G(DAW))
"RTN","PSOORED2",62,0)
 . D NDC^PSODRG(PSORXED("IRXN"),RFL,,.NDC) I $G(NDC)="^",$G(NDC)="" Q
"RTN","PSOORED2",63,0)
 . I NDC'=$$GETNDC^PSONDCUT(PSORXED("IRXN"),RFL) S CHGNDC=1
"RTN","PSOORED2",64,0)
 . D SAVNDC^PSONDCUT(PSORXED("IRXN"),RFL,NDC)
"RTN","PSOORED2",65,0)
 S CHANGED=$$CHANGED(PSORXED("IRXN"),RFL,.FLDS)
"RTN","PSOORED2",66,0)
 I CHANGED D
"RTN","PSOORED2",67,0)
 . I $P(CHANGED,"^",2),'$$ECMEON^BPSUTIL($$RXSITE^PSOBPSUT(PSORXED("IRXN"),RFL)) D  Q
"RTN","PSOORED2",68,0)
 . . D REVERSE^PSOBPSU1(PSORXED("IRXN"),RFL,"DC",99,"REFILL DIVISION CHANGED",1)
"RTN","PSOORED2",69,0)
 . I $$SUBMIT^PSOBPSUT(PSORXED("IRXN"),RFL,1,1) D
"RTN","PSOORED2",70,0)
 . . N RX S RX=PSORXED("IRXN")
"RTN","PSOORED2",71,0)
 . . I '$P(CHANGED,"^",2),$$STATUS^PSOBPSUT(RX,RFL)="" Q
"RTN","PSOORED2",72,0)
 . . D ECMESND^PSOBPSU1(RX,RFL,,"ED",$$GETNDC^PSONDCUT(RX,RFL),,$S($P(CHANGED,"^",2):"REFILL DIVISION CHANGED",1:"REFILL EDITED"),,+$G(CHGNDC))
"RTN","PSOORED2",73,0)
 . . ;- Checking/Handling DUR/79 Rejects
"RTN","PSOORED2",74,0)
 . . I $$FIND^PSOREJUT(RX,RFL) S X=$$HDLG^PSOREJU1(RX,RFL,"79,88","ED","IOQ","I")
"RTN","PSOORED2",75,0)
 K DIE,CMRL,DA,DR
"RTN","PSOORED2",76,0)
 Q
"RTN","PSOORED2",77,0)
CHANGED(RX,RFL,PRIOR) ; - Check if fields have changed and should for 3rd Party Claim resubmission
"RTN","PSOORED2",78,0)
 ;Input:  (r) RX    - Rx IEN
"RTN","PSOORED2",79,0)
 ;        (r) RFL   - Refill #
"RTN","PSOORED2",80,0)
 ;        (r) PRIOR - Array with fields
"RTN","PSOORED2",81,0)
 ;Output:  CHANGED  - 0 - Not changed / 1 - Refill field changed ^ Rx Division changed (1 - YES)
"RTN","PSOORED2",82,0)
 N CHANGED,SAVED
"RTN","PSOORED2",83,0)
 S CHANGED=0 D GETS^DIQ(52.1,RFL_","_RX_",",".01;1;1.1;8;11;81","I","SAVED")
"RTN","PSOORED2",84,0)
 F I=.01,1,1.1,11,81 I $G(PRIOR(52.1,RFL_","_RX_",",I,"I"))'=$G(SAVED(52.1,RFL_","_RX_",",I,"I")) S CHANGED=1 Q
"RTN","PSOORED2",85,0)
 I $$DIVNCPDP^BPSBUTL(+$G(PRIOR(52.1,RFL_","_RX_",",8,"I")))'=$$DIVNCPDP^BPSBUTL(+$G(SAVED(52.1,RFL_","_RX_",",8,"I"))) S CHANGED="1^1"
"RTN","PSOORED2",86,0)
 Q CHANGED
"RTN","PSOORED2",87,0)
 ;
"RTN","PSOORED2",88,0)
DAT S DAT="",DTT=DTT\1 Q:DTT'?7N  S DAT=$E(DTT,4,5)_"/"_$E(DTT,6,7)_"/"_$E(DTT,2,3)
"RTN","PSOORED2",89,0)
 Q
"RTN","PSOORED2",90,0)
DIE S DIE=52 D ^DIE I $D(Y) S PSORXED("DFLG")=1
"RTN","PSOORED2",91,0)
 K DIE,DR,X,Y
"RTN","PSOORED2",92,0)
 Q
"RTN","PSOORED2",93,0)
RFD ;check for deleted refill
"RTN","PSOORED2",94,0)
 M PSOZ1("PSOL")=PSORX("PSOL") N I,J,K,PSOX2,PSOX3,PSOX9 S (I,K)=0 D
"RTN","PSOORED2",95,0)
 .F  S I=$O(PSOZ1("PSOL",I)) Q:'I!(K)  S PSOX2=PSOZ1("PSOL",I) I PSOX2[(PSORXED("IRXN")_",") S PSOX9="" D
"RTN","PSOORED2",96,0)
 ..F J=1:1 S PSOX3=$P(PSOX2,",",J) Q:'PSOX3  D
"RTN","PSOORED2",97,0)
 ...I 'K,PSOX3=PSORXED("IRXN") S K=1
"RTN","PSOORED2",98,0)
 ...E  S PSOX9=PSOX9_$S('PSOX9:"",1:",")_PSOX3
"RTN","PSOORED2",99,0)
 ..I K S:PSOX9]"" PSORX("PSOL",I)=PSOX9_"," K:PSOX9="" PSORX("PSOL",I)
"RTN","PSOORED2",100,0)
 K PSOZ1("PSOL")
"RTN","PSOORED2",101,0)
 Q
"RTN","PSOORED2",102,0)
EDTDOSE ;edit med instructions fields
"RTN","PSOORED2",103,0)
 I '$O(^PSRX(PSORXED("IRXN"),6,0)) D DOSE^PSOORED5 Q
"RTN","PSOORED2",104,0)
 D ^PSOORED3
"RTN","PSOORED2",105,0)
 Q
"RTN","PSOORED2",106,0)
UPD ;updates dosing array
"RTN","PSOORED2",107,0)
 S HENT=ENT
"RTN","PSOORED2",108,0)
UPD1 I $G(PSORXED("CONJUNCTION",(HENT+1)))]"",'$D(PSORXED("DOSE",(HENT+2))) K PSORXED("CONJUNCTION",(HENT+1)) Q
"RTN","PSOORED2",109,0)
 I $G(PSORXED("CONJUNCTION",(HENT+1)))]"" S PSORXED("CONJUNCTION",HENT)=PSORXED("CONJUNCTION",(HENT+1)) D  G UPD1
"RTN","PSOORED2",110,0)
 .K PSORXED("CONJUNCTION",(HENT+1))
"RTN","PSOORED2",111,0)
 .F  Q:'$D(PSORXED("DOSE",(HENT+2)))  D
"RTN","PSOORED2",112,0)
 ..S PSORXED("DOSE",(HENT+1))=PSORXED("DOSE",(HENT+2))
"RTN","PSOORED2",113,0)
 ..S PSORXED("DOSE ORDERED",(HENT+1))=$G(PSORXED("DOSE ORDERED",(HENT+2)))
"RTN","PSOORED2",114,0)
 ..S PSORXED("UNITS",(HENT+1))=$G(PSORXED("UNITS",(HENT+2)))
"RTN","PSOORED2",115,0)
 ..S PSORXED("NOUN",(HENT+1))=$G(PSORXED("NOUN",(HENT+2)))
"RTN","PSOORED2",116,0)
 ..S PSORXED("DURATION",(HENT+1))=$G(PSORXED("DURATION",(HENT+2)))
"RTN","PSOORED2",117,0)
 ..S PSORXED("CONJUNCTION",(HENT+1))=$G(PSORXED("CONJUNCTION",(HENT+2)))
"RTN","PSOORED2",118,0)
 ..S PSORXED("ROUTE",(HENT+1))=$G(PSORXED("ROUTE",(HENT+2)))
"RTN","PSOORED2",119,0)
 ..S PSORXED("SCHEDULE",(HENT+1))=$G(PSORXED("SCHEDULE",(HENT+2)))
"RTN","PSOORED2",120,0)
 ..S PSORXED("ODOSE",(HENT+1))=$G(PSORXED("ODOSE",(HENT+2)))
"RTN","PSOORED2",121,0)
 ..S HENT=HENT+1
"RTN","PSOORED2",122,0)
 ..I $G(PSORXED("CONJUNCTION",(HENT+2)))]"" Q
"RTN","PSOORED2",123,0)
 ..K PSORXED("UNITS",(HENT+1)),PSORXED("NOUN",(HENT+1)),PSORXED("DURATION",(HENT+1)),PSORXED("CONJUNCTION",(HENT+1)),PSORXED("ROUTE",(HENT+1)),PSORXED("SCHEDULE",(HENT+1)),PSORXED("DOSE",(HENT+1)),PSORXED("DOSE ORDERED",(HENT+1))
"RTN","PSOORED2",124,0)
 ..K PSORXED("VERB",(HENT+1)),PSORXED("ODOSE",(HENT+1))
"RTN","PSOORED2",125,0)
 S PSORXED("ENT")=HENT K HENT,SENT D EN^PSOFSIG(.PSORXED)
"RTN","PSOORED2",126,0)
 Q
"RTN","PSOORED2",127,0)
UPD2 I $G(PSORXED("CONJUNCTION",(HENT+1)))]"",'$D(PSORXED("DOSE",(HENT+2))) K PSORXED("CONJUNCTION",(HENT+1)) Q
"RTN","PSOORED2",128,0)
 I $G(PSORXED("CONJUNCTION",(HENT+1)))]"" S PSORXED("CONJUNCTION",HENT)=PSORXED("CONJUNCTION",(HENT+1)) D  G UPD1
"RTN","PSOORED2",129,0)
 .K PSORXED("CONJUNCTION",(HENT+1)) I $D(PSORXED("DOSE",(HENT+2))) D
"RTN","PSOORED2",130,0)
 ..S PSORXED("DOSE",(HENT+1))=PSORXED("DOSE",(HENT+2))
"RTN","PSOORED2",131,0)
 ..S PSORXED("DOSE ORDERED",(HENT+1))=$G(PSORXED("DOSE ORDERED",(HENT+2)))
"RTN","PSOORED2",132,0)
 ..S PSORXED("UNITS",(HENT+1))=$G(PSORXED("UNITS",(HENT+2)))
"RTN","PSOORED2",133,0)
 ..S PSORXED("NOUN",(HENT+1))=$G(PSORXED("NOUN",(HENT+2)))
"RTN","PSOORED2",134,0)
 ..S PSORXED("VERB",(HENT+1))=$G(PSORXED("VERB",(HENT+2)))
"RTN","PSOORED2",135,0)
 ..S PSORXED("DURATION",(HENT+1))=$G(PSORXED("DURATION",(HENT+2)))
"RTN","PSOORED2",136,0)
 ..S PSORXED("CONJUNCTION",(HENT+1))=$G(PSORXED("CONJUNCTION",(HENT+2)))
"RTN","PSOORED2",137,0)
 ..S PSORXED("ROUTE",(HENT+1))=$G(PSORXED("ROUTE",(HENT+2)))
"RTN","PSOORED2",138,0)
 ..S PSORXED("SCHEDULE",(HENT+1))=$G(PSORXED("SCHEDULE",(HENT+2)))
"RTN","PSOORED2",139,0)
 ..S PSORXED("ODOSE",(HENT+1))=$G(PSORXED("ODOSE",(HENT+2)))
"RTN","PSOORED2",140,0)
 ..S HENT=HENT+1
"RTN","PSOORED2",141,0)
 ..I $G(PSORXED("CONJUNCTION",(HENT+1)))]"" Q
"RTN","PSOORED2",142,0)
 ..K PSORXED("UNITS",(HENT+1)),PSORXED("NOUN",(HENT+1)),PSORXED("DURATION",(HENT+1)),PSORXED("ROUTE",(HENT+1)),PSORXED("SCHEDULE",(HENT+1)),PSORXED("DOSE",(HENT+1)),PSORXED("DOSE ORDERED",(HENT+1)),PSORXED("VERB",(HENT+1))
"RTN","PSOORED2",143,0)
 ..K PSORXED("ODOSE",(HENT+1))
"RTN","PSOORED2",144,0)
 F I=0:0 S I=$O(PSORXED("DOSE",I)) Q:'I  S SENT=$G(SENT)+1
"RTN","PSOORED2",145,0)
 S PSORXED("ENT")=SENT K HENT,SENT D EN^PSOFSIG(.PSORXED)
"RTN","PSOORED2",146,0)
 Q
"RTN","PSOORED6")
0^4^B59169980
"RTN","PSOORED6",1,0)
PSOORED6 ;BIR/SAB - edit orders from backdoor ;03/06/96
"RTN","PSOORED6",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**78,104,117,133,143,219,148,247**;DEC 1997;Build 18
"RTN","PSOORED6",3,0)
 ;External reference to ^PSDRUG supported by DBIA 221
"RTN","PSOORED6",4,0)
 ;External reference to ^PS(50.7 supported by DBIA 2223
"RTN","PSOORED6",5,0)
 ;External reference ^PS(50.606 supported by DBIA 2174
"RTN","PSOORED6",6,0)
DRG ;select drug
"RTN","PSOORED6",7,0)
 S PSORX("EDIT")=1,RX0HLD=RX0
"RTN","PSOORED6",8,0)
 S PSODRUG("IEN")=$S($G(PSODRUG("IEN"))]"":PSODRUG("IEN"),1:$P(RX0,"^",6)),PSODRUG("NAME")=$S($G(PSODRUG("NAME"))]"":PSODRUG("NAME"),1:$P(^PSDRUG($P(RX0,"^",6),0),"^"))
"RTN","PSOORED6",9,0)
 D ^PSODRG I PSODRUG("IEN")=$P(RX0,"^",6) K PSORXED("FLD",6)
"RTN","PSOORED6",10,0)
 D:PSODRUG("IEN")'=$P(RX0,"^",6)  I $G(PSORX("DFLG")) K PSORXED("FLD",6) S PSORXED("DFLG")=1 Q
"RTN","PSOORED6",11,0)
 .D POST^PSODRG
"RTN","PSOORED6",12,0)
 .I '$O(^PSRX(PSORXED("IRXN"),1,0)) S PSORXED("FLD",17)=$G(PSODRUG("COST"))
"RTN","PSOORED6",13,0)
 .I $G(PSORX("DFLG")) K PSORXED("FLD",6),PSODRUG,PSOOIFLG,PSOSIGFL,VALMSG Q
"RTN","PSOORED6",14,0)
 .D KV S DIR(0)="Y",DIR("B")="NO",DIR("A",1)="You have changed the dispense drug from",DIR("A",2)=$P(^PSDRUG($P(PSORXED("RX0"),"^",6),0),"^")_" to "_$P(^PSDRUG(PSODRUG("IEN"),0),"^")_".",DIR("A")="Do You want to Edit the SIG"
"RTN","PSOORED6",15,0)
 .D ^DIR K DIR I $D(DIRUT) S PSORX("DFLG")=1 D M1
"RTN","PSOORED6",16,0)
 .Q:$D(DIRUT)!('Y)
"RTN","PSOORED6",17,0)
 .S PSOREEDQ=1 D DOLST^PSOORED3,DOSE^PSOORED3 K PSOREEDQ
"RTN","PSOORED6",18,0)
 .I '$O(PSORXED("DOSE",0)) S PSORX("DFLG")=1 Q
"RTN","PSOORED6",19,0)
 .D:$G(PSOSIGFL) M2
"RTN","PSOORED6",20,0)
 S RX0=RX0HLD K RX0HLD I $G(PSODRUG("OI"))=$G(PSOI) D  Q
"RTN","PSOORED6",21,0)
 .D:$O(^TMP("PSORXDC",$J,0))
"RTN","PSOORED6",22,0)
 ..W !!,"This edit will discontinue the duplicate Rx & change the dispensed drug!"
"RTN","PSOORED6",23,0)
 ..K DIR,X,Y S DIR("A")="Do You Want to Proceed",DIR("B")="NO",DIR(0)="Y"
"RTN","PSOORED6",24,0)
 ..D ^DIR K DIR S:'Y!($D(DIRUT)) PSORXED("DFLG")=1 D:Y DCORD^PSONEW2
"RTN","PSOORED6",25,0)
 .Q:$G(PSORXED("DFLG"))
"RTN","PSOORED6",26,0)
 .I PSODRUG("IEN")'=$P(RX0,"^",6) D
"RTN","PSOORED6",27,0)
 ..S PSORXED("FLD",6)=PSODRUG("IEN"),PSORXED("FLD",39.2)=PSOI
"RTN","PSOORED6",28,0)
 .S:$G(PSODRUG("TRADE NAME"))]"" PSORXED("FLD",6.5)=PSODRUG("TRADE NAME")
"RTN","PSOORED6",29,0)
 .S:$G(PSODRUG("NDC"))]"" PSORXED("FLD",27)=PSODRUG("NDC")
"RTN","PSOORED6",30,0)
 .S:$G(PSODRUG("DAW"))]"" PSORXED("FLD",81)=PSODRUG("DAW")
"RTN","PSOORED6",31,0)
 W !!,"New Orderable Item selected. This edit will create a new prescription!",! D PAUSE^VALM1 S VALMSG="New Orderable Item selected. This edit will create a new prescription!" S (PSOOIFLG,PSOSIGFL)=1
"RTN","PSOORED6",32,0)
 Q
"RTN","PSOORED6",33,0)
PSOCOU ;patient counseling
"RTN","PSOORED6",34,0)
 K DIC,DIQ S DIC=52,DA=PSORXED("IRXN"),DIQ="PSORXED",DR=41 D EN^DIQ1 K DIC,DIQ
"RTN","PSOORED6",35,0)
 D KV S DIR(0)="52,41" S:$G(PSORXED(52,DA,DR))]"" DIR("B")=PSORXED(52,DA,DR) D ^DIR K DIR,PSORXED(52,DA,DR)
"RTN","PSOORED6",36,0)
 I $D(DIRUT) K PSORXED("FLD",41) D KV Q
"RTN","PSOORED6",37,0)
 S PSORXED("FLD",DR)=Y D  K DIRUT
"RTN","PSOORED6",38,0)
 .I Y D  Q
"RTN","PSOORED6",39,0)
 ..K DIC,DIQ S DIC=52,DA=PSORXED("IRXN"),DIQ="PSORXED",DR=42 D EN^DIQ1 K DIC,DIQ
"RTN","PSOORED6",40,0)
 ..K DIR,DIRUT S DIR(0)="52,42" S:$G(PSORXED(52,DA,DR))]"" DIR("B")=PSORXED(52,DA,DR) D ^DIR K DIR,PSORXED(52,DA,DR)
"RTN","PSOORED6",41,0)
 ..I $D(DIRUT) K PSORXED("FLD",41),DUOUT,DTOUT Q
"RTN","PSOORED6",42,0)
 ..S PSORXED("FLD",42)=Y
"RTN","PSOORED6",43,0)
 .S PSORXED("FLD",41)=0,PSORXED("FLD",42)="@"
"RTN","PSOORED6",44,0)
 Q
"RTN","PSOORED6",45,0)
PSOI ;select orderable item
"RTN","PSOORED6",46,0)
 W !!,"Current Orderable Item: "_$P(^PS(50.7,PSOI,0),"^")_" "_$P(^PS(50.606,$P(^(0),"^",2),0),"^")
"RTN","PSOORED6",47,0)
 S DIC("B")=$P(^PS(50.7,PSOI,0),"^"),DIC="^PS(50.7,",DIC(0)="AEMQZ"
"RTN","PSOORED6",48,0)
 S DIC("S")="I '$P(^PS(50.7,+Y,0),""^"",4)!($P(^(0),""^"",4)'<DT) N PSOF,PSOL S (PSOF,PSOL)=0 F  S PSOL=$O(^PSDRUG(""ASP"",+Y,PSOL)) Q:PSOF!'PSOL  "
"RTN","PSOORED6",49,0)
 S DIC("S")=DIC("S")_"I $P($G(^PSDRUG(PSOL,2)),U,3)[""O"",'$G(^(""I""))!($G(^(""I""))'<DT) S PSOF=1" D ^DIC I "^"[X S PSORXED("DFLG")=1 Q
"RTN","PSOORED6",50,0)
 G:Y<1 PSOI Q:PSOI=+Y
"RTN","PSOORED6",51,0)
 S PSODRUG("OI")=+Y,PSODRUG("OIN")=Y(0,0) K DIC
"RTN","PSOORED6",52,0)
 I PSOI'=PSODRUG("OI") W !!,"New Orderable Item selected. This edit will create a new prescription!",! D  K PSHOLDD Q
"RTN","PSOORED6",53,0)
 .D PAUSE^VALM1,M2
"RTN","PSOORED6",54,0)
 .S PSHOLDD=$G(PSODRUG("IEN")) K PSODRUG("IEN"),PSODRUG("NAME") S PSODRUG("DEA")="",(PSOOIFLG,PSOSIGFL)=1
"RTN","PSOORED6",55,0)
 .D DREN^PSOORNW2
"RTN","PSOORED6",56,0)
 .I $G(PSHOLDD),$G(PSODRUG("IEN")),$G(PSHOLDD)'=$G(PSODRUG("IEN")) D  Q:$G(PSORX("DFLG"))
"RTN","PSOORED6",57,0)
 ..D FULL^VALM1,POST^PSODRG S VALMBCK="R"
"RTN","PSOORED6",58,0)
 ..I $G(PSORX("DFLG")) K PSODRUG S PSODRUG("IEN")=$G(PSHOLDD),PSODRUG("NAME")=$P($G(^PSDRUG(PSODRUG("IEN"),0)),"^") K PSOOIFLG,PSOSIGFL S VALMSG=""
"RTN","PSOORED6",59,0)
 .I '$G(PSODRUG("IEN")) W !!,"DRUG NAME REQUIRED!" D 2^PSOORNW1
"RTN","PSOORED6",60,0)
 .I '$G(PSODRUG("IEN")) K PSORXED("FLD"),INDEL,^TMP($J,"INS1"),PSOSIGFL,VALMSG S PSORXED("DFLG")=1,VALMSG="Dispense Drug NOT Selected!" Q
"RTN","PSOORED6",61,0)
 .D KV S DIR(0)="Y",DIR("B")="NO",DIR("A",1)="You have changed the Orderable Item from",DIR("A",2)=$P(^PS(50.7,PSOI,0),"^")_" to "_PSODRUG("OIN")_".",DIR("A")="Do You want to Edit the SIG"
"RTN","PSOORED6",62,0)
 .D ^DIR K DIR I $D(DIRUT) K PSODRUG("OIN"),PSOOIFLG,PSOSIGFL S PSODRUG("OI")=PSOI,VALMSG="",PSORX("DFLG")=1 Q
"RTN","PSOORED6",63,0)
 .I 'Y S PSORX("DFLG")=1 Q
"RTN","PSOORED6",64,0)
 .S PSOREEDQ=1 D DOLST^PSOORED3,DOSE^PSOORED3 K PSOREEDQ
"RTN","PSOORED6",65,0)
 .I '$O(PSORXED("DOSE",0)) S PSORX("DFLG")=1 Q
"RTN","PSOORED6",66,0)
 .D:$G(PSOSIGFL) M2
"RTN","PSOORED6",67,0)
 S PSORXED("FLD",39.2)=PSOI
"RTN","PSOORED6",68,0)
 Q
"RTN","PSOORED6",69,0)
NCPDP ;Reverse previously billed Rx on an edited orderable item or drug. 
"RTN","PSOORED6",70,0)
 N RX,NPSOY
"RTN","PSOORED6",71,0)
 S RX=$G(PSORXED("IRXN")) I RX="" D
"RTN","PSOORED6",72,0)
 . S NPSOY=$O(PSONEW("OLD LAST RX#","")),NPSOY=$G(PSONEW("OLD LAST RX#",NPSOY)),RX=$O(^PSRX("B",NPSOY,RX))
"RTN","PSOORED6",73,0)
 I 'RX Q
"RTN","PSOORED6",74,0)
 D REVERSE^PSOBPSU1(RX,,"DC",7) S NCPDPFLG=0
"RTN","PSOORED6",75,0)
 Q
"RTN","PSOORED6",76,0)
UPDATE ;add new data to file
"RTN","PSOORED6",77,0)
 N RXREF,UPDATE,FLDS,CHGNDC
"RTN","PSOORED6",78,0)
 Q:'$G(PSORXED("IRXN"))
"RTN","PSOORED6",79,0)
 I $O(PSORXED("FLD",0))!($G(^TMP($J,"INS1",0))]"")!($G(INSDEL))!($O(PSORXED("ODOSE",0))) D  G:'Y UPDX
"RTN","PSOORED6",80,0)
 .K DIR,DIRUT,DTOUT,DUOUT
"RTN","PSOORED6",81,0)
 .S DIR(0)="Y",DIR("A")="Are You Sure You Want to Update Rx "_$P(^PSRX(PSORXED("IRXN"),0),"^"),DIR("B")="Yes"
"RTN","PSOORED6",82,0)
 .D ^DIR K DIR I 'Y D M1 Q
"RTN","PSOORED6",83,0)
 .I $D(^PSRX(PSORXED("IRXN"),1,0))  D
"RTN","PSOORED6",84,0)
 ..S RXREF=$P(^PSRX(PSORXED("IRXN"),0),"^",9)-$P(^PSRX(PSORXED("IRXN"),1,0),"^",4)
"RTN","PSOORED6",85,0)
 .E  S RXREF=0
"RTN","PSOORED6",86,0)
 .K X,DIRUT,DUOUT,DTOUT
"RTN","PSOORED6",87,0)
 I $D(PSORXED("FLD",39.3)) D UPDATE^PSODIAG  ;update ICD's after edit
"RTN","PSOORED6",88,0)
 ; - Retrieving fields before changes that are relevant for 3rd Party Billing
"RTN","PSOORED6",89,0)
 D GETS^DIQ(52,PSORXED("IRXN")_",","4;7;8;20;22;27;81","I","FLDS")
"RTN","PSOORED6",90,0)
 K Y S DA=PSORXED("IRXN"),DIE="^PSRX(",FLD=0
"RTN","PSOORED6",91,0)
 F  S FLD=$O(PSORXED("FLD",FLD)) Q:'FLD  D
"RTN","PSOORED6",92,0)
 .I FLD=12!(FLD=24)!(FLD=35) D  Q
"RTN","PSOORED6",93,0)
 ..I FLD=12,PSORXED("FLD",12)="@" S $P(^PSRX(DA,3),"^",7)="" Q
"RTN","PSOORED6",94,0)
 ..I FLD=12,PSORXED("FLD",12)]"" S $P(^PSRX(DA,3),"^",7)=PSORXED("FLD",12) Q
"RTN","PSOORED6",95,0)
 ..I FLD=24,PSORXED("FLD",24)="@" S $P(^PSRX(DA,2),"^",4)="" Q
"RTN","PSOORED6",96,0)
 ..I FLD=24,PSORXED("FLD",24)]"" S $P(^PSRX(DA,2),"^",4)=PSORXED("FLD",24) Q
"RTN","PSOORED6",97,0)
 ..I FLD=35,PSORXED("FLD",35)="@" S $P(^PSRX(DA,"MP"),"^")="" Q
"RTN","PSOORED6",98,0)
 ..I FLD=35,PSORXED("FLD",35)]"" S $P(^PSRX(DA,"MP"),"^")=PSORXED("FLD",35) Q
"RTN","PSOORED6",99,0)
 .I FLD=114 D  Q
"RTN","PSOORED6",100,0)
 ..I PSORXED("FLD",114)="@" K ^PSRX(DA,"INS"),^PSRX(DA,"INS1")
"RTN","PSOORED6",101,0)
 ..I PSORXED("FLD",114)'="@" D
"RTN","PSOORED6",102,0)
 ...S ^PSRX(DA,"INS")=PSORXED("FLD",114)
"RTN","PSOORED6",103,0)
 ...S X=PSORXED("FLD",114) D SIG^PSOHELP Q:$G(INS1)']""
"RTN","PSOORED6",104,0)
 ...S PSORXED("SIG",1)=$E(INS1,2,9999999) K ^PSRX(DA,"INS1")
"RTN","PSOORED6",105,0)
 ...S ^PSRX(DA,"INS1",0)="^52.0115^1^1^"_DT_"^^"
"RTN","PSOORED6",106,0)
 ...S ^PSRX(DA,"INS1",1,0)=PSORXED("SIG",1)
"RTN","PSOORED6",107,0)
 ..D DOLST^PSOORED3 K:PSORXED("FLD",114)="@" PSORXED("SIG") D EN^PSOFSIG(.PSORXED),UPDSIG^PSOORED3
"RTN","PSOORED6",108,0)
 .I FLD=27 D  Q
"RTN","PSOORED6",109,0)
 ..I PSORXED("FLD",27)'=$$GETNDC^PSONDCUT(DA,0) S CHGNDC=1
"RTN","PSOORED6",110,0)
 ..D SAVNDC^PSONDCUT(DA,0,PSORXED("FLD",27),0,1)
"RTN","PSOORED6",111,0)
 .I FLD=81 D SAVDAW^PSODAWUT(DA,0,PSORXED("FLD",81)) Q
"RTN","PSOORED6",112,0)
 .S DR=FLD_"////"_PSORXED("FLD",FLD) D ^DIE
"RTN","PSOORED6",113,0)
 .I FLD=4 D UDPROV^PSOOREDT Q
"RTN","PSOORED6",114,0)
 ;
"RTN","PSOORED6",115,0)
 ; - Re-submitting Rx to ECME due to edits
"RTN","PSOORED6",116,0)
 D RESUB^PSOORED7
"RTN","PSOORED6",117,0)
 ;
"RTN","PSOORED6",118,0)
 I $G(INSDEL) K ^PSRX(DA,"INS"),^PSRX(DA,"INS1") D DOLST^PSOORED3 K PSORXED("SIG") D EN^PSOFSIG(.PSORXED),UPDSIG^PSOORED3 G UPDX
"RTN","PSOORED6",119,0)
 I $O(^TMP($J,"INS1",0)) D
"RTN","PSOORED6",120,0)
 .K ^PSRX(DA,"INS"),^PSRX(DA,"INS1"),DD,PSORXED("SIG")
"RTN","PSOORED6",121,0)
 .F I=0:0 S I=$O(^TMP($J,"INS1",I)) Q:'I  S (PSORXED("SIG",I),^PSRX(DA,"INS1",I,0))=^TMP($J,"INS1",I,0),DD=$G(DD)+1
"RTN","PSOORED6",122,0)
 .S ^PSRX(DA,"INS1",0)=^TMP($J,"INS1",0)
"RTN","PSOORED6",123,0)
 .I DD=1 S ^PSRX(DA,"INS")=^PSRX(DA,"INS1",1,0)
"RTN","PSOORED6",124,0)
 .D DOLST^PSOORED3,EN^PSOFSIG(.PSORXED),UPDSIG^PSOORED3
"RTN","PSOORED6",125,0)
 ;
"RTN","PSOORED6",126,0)
UPDX ;
"RTN","PSOORED6",127,0)
 K DIE,DA,DR,FLD,X,Y,PSORXED("FLD"),DD,^TMP($J,"INS1")
"RTN","PSOORED6",128,0)
KV K DIR,DIRUT,DTOUT,DUOUT
"RTN","PSOORED6",129,0)
 Q
"RTN","PSOORED6",130,0)
UPD ;updates dosing array
"RTN","PSOORED6",131,0)
 S HENT=ENT
"RTN","PSOORED6",132,0)
UPD1 ;
"RTN","PSOORED6",133,0)
 I $G(PSORXED("CONJUNCTION",(HENT+1)))]"" S PSORXED("CONJUNCTION",HENT)=PSORXED("CONJUNCTION",(HENT+1)) D  G UPD
"RTN","PSOORED6",134,0)
 .K PSORXED("CONJUNCTION",(HENT+1))
"RTN","PSOORED6",135,0)
 .I $D(PSORXED("DOSE",(HENT+2))) D
"RTN","PSOORED6",136,0)
 ..S PSORXED("DOSE",(HENT+1))=PSORXED("DOSE",(HENT+2))
"RTN","PSOORED6",137,0)
 ..S PSORXED("ODOSE",(HENT+1))=$G(PSORXED("ODOSE",(HENT+2)))
"RTN","PSOORED6",138,0)
 ..S PSORXED("DOSE ORDERED",(HENT+1))=$G(PSORXED("DOSE ORDERED",(HENT+2)))
"RTN","PSOORED6",139,0)
 ..S PSORXED("UNITS",(HENT+1))=$G(PSORXED("UNITS",(HENT+2)))
"RTN","PSOORED6",140,0)
 ..S PSORXED("NOUN",(HENT+1))=$G(PSORXED("NOUN",(HENT+2)))
"RTN","PSOORED6",141,0)
 ..S PSORXED("DURATION",(HENT+1))=$G(PSORXED("DURATION",(HENT+2)))
"RTN","PSOORED6",142,0)
 ..S PSORXED("CONJUNCTION",(HENT+1))=$G(PSORXED("CONJUNCTION",(HENT+2)))
"RTN","PSOORED6",143,0)
 ..S PSORXED("ROUTE",(HENT+1))=$G(PSORXED("ROUTE",(HENT+2)))
"RTN","PSOORED6",144,0)
 ..S PSORXED("SCHEDULE",(HENT+1))=$G(PSORXED("SCHEDULE",(HENT+2)))
"RTN","PSOORED6",145,0)
 ..S PSORXED("VERB",(HENT+1))=$G(PSORXED("VERB",(HENT+2)))
"RTN","PSOORED6",146,0)
 ..K PSORXED("DOSE",(HENT+2)),PSORXED("ODOSE",(HENT+2)),PSORXED("DOSE ORDERED",(HENT+2))
"RTN","PSOORED6",147,0)
 ..K PSORXED("UNITS",(HENT+2)),PSORXED("NOUN",(HENT+2)),PSORXED("DURATION",(HENT+2)),PSORXED("ROUTE",(HENT+2)),PSORXED("SCHEDULE",(HENT+2)),PSORXED("VERB",(HENT+2))
"RTN","PSOORED6",148,0)
 .S HENT=HENT+1
"RTN","PSOORED6",149,0)
 F I=0:0 S I=$O(PSORXED("DOSE",I)) Q:'I  S SENT=$G(SENT)+1
"RTN","PSOORED6",150,0)
 Q
"RTN","PSOORED6",151,0)
 ;
"RTN","PSOORED6",152,0)
M1 D M1^PSOOREDX
"RTN","PSOORED6",153,0)
 Q
"RTN","PSOORED6",154,0)
M2 D M2^PSOOREDX
"RTN","PSOORED6",155,0)
 Q
"RTN","PSOORED7")
0^13^B15934455
"RTN","PSOORED7",1,0)
PSOORED7 ;ISC-BHAM/MFR-edit orders from backdoor con't ;03/06/95 10:24
"RTN","PSOORED7",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247**;DEC 1997;Build 18
"RTN","PSOORED7",3,0)
 ;called from psooredt. cmop edit checks.
"RTN","PSOORED7",4,0)
 ;Reference to file #50 supported by IA 221
"RTN","PSOORED7",5,0)
 ;Reference to $$ECMEON^BPSUTIL supported by IA 4410
"RTN","PSOORED7",6,0)
 ;Reference to $$DIVNCPDP^BPSBUTL supported by IA 4719
"RTN","PSOORED7",7,0)
 ;
"RTN","PSOORED7",8,0)
NOCHG S CMRL=1 D CHK1^PSOORED2 I '$G(CMRL) W !,"No editing allowed of "_$S(FLN=9:"Day Supply",FLN=10:"Quantity",1:"# of Refills")_" (CMOP)." D PAUSE^VALM1 K CMRL Q
"RTN","PSOORED7",9,0)
 K CMRL,DIC,DIQ
"RTN","PSOORED7",10,0)
 S DIC=52,DA=PSORXED("IRXN"),DIQ="PSORXED" D EN^DIQ1 K DIC,DIQ
"RTN","PSOORED7",11,0)
 S PSORXED($S(FLN=9:"DAYS SUPPLY",FLN=10:"QTY",1:"# OF REFILLS"))=PSORXED(52,DA,DR)
"RTN","PSOORED7",12,0)
 D:'$O(PSORXED("DOSE",0)) DOLST^PSOORED3
"RTN","PSOORED7",13,0)
 I FLN=9 D  Q
"RTN","PSOORED7",14,0)
 .D DAYS^PSODIR1(.PSORXED) I $G(PSORXED("DFLG")) K PSORXED("FLD",8) Q
"RTN","PSOORED7",15,0)
 .S PSORXED("FLD",8)=PSORXED("DAYS SUPPLY")
"RTN","PSOORED7",16,0)
 I FLN=10 D  Q
"RTN","PSOORED7",17,0)
 .D QTY^PSODIR1(.PSORXED) I $G(PSORXED("DFLG")) K PSORXED("FLD",7) Q
"RTN","PSOORED7",18,0)
 .S:$G(PSORXED("QTY")) PSORXED("FLD",7)=PSORXED("QTY")
"RTN","PSOORED7",19,0)
 I FLN=11 D  Q
"RTN","PSOORED7",20,0)
 .S X=$G(PSORXED("PATIENT STATUS")) S:'X X=$P(RX0,"^",3)
"RTN","PSOORED7",21,0)
 .S DIC=53,DIC(0)="QXZ" D ^DIC K DIC
"RTN","PSOORED7",22,0)
 .S:+Y PSORXED("PTST NODE")=Y(0)
"RTN","PSOORED7",23,0)
 .S:'$G(PSORXED("PATIENT STATUS")) PSORXED("PATIENT STATUS")=+Y
"RTN","PSOORED7",24,0)
 .K X,Y
"RTN","PSOORED7",25,0)
 .I $G(PSODRUG("IEN"))=$P(RX0,"^",6) K PSODRUG S X="`"_$P(RX0,"^",6),DIC=50,DIC(0)="QXZ" D ^DIC K PSOY S PSOY=Y,PSOY(0)=Y(0) D SET^PSODRG
"RTN","PSOORED7",26,0)
 .S:'$G(PSORXED("DAYS SUPPLY")) PSORXED("DAYS SUPPLY")=$P(RX0,"^",8)
"RTN","PSOORED7",27,0)
 .F I=0:0 S I=$O(^PSRX(PSORXED("IRXN"),1,I)) Q:'I  S RFTT=$G(RFTT)+1
"RTN","PSOORED7",28,0)
 .D REFILL^PSODIR1(.PSORXED) K RFTT
"RTN","PSOORED7",29,0)
 .I $G(PSORXED("DFLG")) K PSORXED("FLD",9) Q
"RTN","PSOORED7",30,0)
 .I PSORXED("# OF REFILLS")=$P(RX0,"^",9) Q
"RTN","PSOORED7",31,0)
 .S PSORXED("FLD",9)=PSORXED("# OF REFILLS")
"RTN","PSOORED7",32,0)
 Q
"RTN","PSOORED7",33,0)
VER ;checks for changes to dosing instructions
"RTN","PSOORED7",34,0)
 S ENTS=0
"RTN","PSOORED7",35,0)
 F I=0:0 S I=$O(PSORXED("DOSE",I)) Q:'I  S ENTS=$G(ENTS)+1
"RTN","PSOORED7",36,0)
 I ENTS<OLENT!(ENTS>OLENT) S PSOSIGFL=1 Q
"RTN","PSOORED7",37,0)
 F I=1:1:OLENT D:$D(^PSRX(PSORXED("IRXN"),6,I,0))
"RTN","PSOORED7",38,0)
 .I $P(^PSRX(PSORXED("IRXN"),6,I,0),"^")'=PSORXED("DOSE",I) S PSOSIGFL=1
"RTN","PSOORED7",39,0)
 .I $P(^PSRX(PSORXED("IRXN"),6,I,0),"^")=PSORXED("DOSE",I) D
"RTN","PSOORED7",40,0)
 ..I $G(PSORXED("DOSE ORDERED",I)) S:PSORXED("DOSE ORDERED",I)'=$P(^PSRX(PSORXED("IRXN"),6,I,0),"^",2) PSOSIGFL=1
"RTN","PSOORED7",41,0)
 .I $G(PSORXED("DURATION",I))]"" D
"RTN","PSOORED7",42,0)
 ..S DURATION=$S($E($P(^PSRX(PSORXED("IRXN"),6,I,0),"^",5),1)'?.N:$E($P(^PSRX(PSORXED("IRXN"),6,I,0),"^",5),2,99)_$E($P(^PSRX(PSORXED("IRXN"),6,I,0),"^",5),1),1:$P(^PSRX(PSORXED("IRXN"),6,I,0),"^",5))
"RTN","PSOORED7",43,0)
 ..I +DURATION'=+$G(PSORXED("DURATION",I)) S PSOSIGFL=1
"RTN","PSOORED7",44,0)
 .I $P(^PSRX(PSORXED("IRXN"),6,I,0),"^",6)'=$G(PSORXED("CONJUNCTION",I)) S PSOSIGFL=1
"RTN","PSOORED7",45,0)
 .I $P(^PSRX(PSORXED("IRXN"),6,I,0),"^",7)'=$G(PSORXED("ROUTE",I)) S PSOSIGFL=1
"RTN","PSOORED7",46,0)
 .I $P(^PSRX(PSORXED("IRXN"),6,I,0),"^",8)'=PSORXED("SCHEDULE",I) S PSOSIGFL=1
"RTN","PSOORED7",47,0)
 .I $G(^PSRX(PSORXED("IRXN"),6,I,1))'=$G(PSORXED("ODOSE",I)) S PSOSIGFL=1
"RTN","PSOORED7",48,0)
 K DURATION
"RTN","PSOORED7",49,0)
 Q
"RTN","PSOORED7",50,0)
 ;
"RTN","PSOORED7",51,0)
RESUB ; Resubmits 3rd party claim in case of an edit (Original)
"RTN","PSOORED7",52,0)
 N CHANGED S CHANGED=$$CHANGED(PSORXED("IRXN"),.FLDS)
"RTN","PSOORED7",53,0)
 I CHANGED D
"RTN","PSOORED7",54,0)
 . N RX S RX=PSORXED("IRXN") Q:'RX
"RTN","PSOORED7",55,0)
 . I $P(CHANGED,"^",2),'$$ECMEON^BPSUTIL($$RXSITE^PSOBPSUT(RX,0)) D  Q
"RTN","PSOORED7",56,0)
 . . D REVERSE^PSOBPSU1(RX,0,"DC",99,"RX DIVISION CHANGED",1)
"RTN","PSOORED7",57,0)
 . I $$SUBMIT^PSOBPSUT(RX,0,1,1) D
"RTN","PSOORED7",58,0)
 . . I '$P(CHANGED,"^",2),$$STATUS^PSOBPSUT(RX,0)="" Q
"RTN","PSOORED7",59,0)
 . . D ECMESND^PSOBPSU1(RX,0,,"ED",$$GETNDC^PSONDCUT(RX,0),,$S($P(CHANGED,"^",2):"RX DIVISION CHANGED",1:"RX EDITED"),,+$G(CHGNDC))
"RTN","PSOORED7",60,0)
 . . ;- Checking/Handling DUR/79 Rejects
"RTN","PSOORED7",61,0)
 . . I $$FIND^PSOREJUT(RX,0) S X=$$HDLG^PSOREJU1(RX,0,"79,88","ED","IOQ","I")
"RTN","PSOORED7",62,0)
 Q
"RTN","PSOORED7",63,0)
 ;
"RTN","PSOORED7",64,0)
CHANGED(RX,PRIOR) ; - Check if fields have changed and should for 3rd Party Claim resubmission
"RTN","PSOORED7",65,0)
 ;Input:  (r) RX    - Rx IEN
"RTN","PSOORED7",66,0)
 ;        (r) PRIOR - Array with fields
"RTN","PSOORED7",67,0)
 ;Output:  CHANGED  - 0 - Not changed / 1 - Original Rx field changed ^ Rx Division changed (1 - YES)
"RTN","PSOORED7",68,0)
 N CHANGED,SAVED
"RTN","PSOORED7",69,0)
 S CHANGED=0 D GETS^DIQ(52,RX_",","4;7;8;20;22;27;81","I","SAVED")
"RTN","PSOORED7",70,0)
 F I=4,7,8,22,27,81 D  I CHANGED Q
"RTN","PSOORED7",71,0)
 . I $G(PRIOR(52,RX_",",I,"I"))'=$G(SAVED(52,RX_",",I,"I")) S CHANGED=1 Q
"RTN","PSOORED7",72,0)
 I $$DIVNCPDP^BPSBUTL(+$G(PRIOR(52,RX_",",20,"I")))'=$$DIVNCPDP^BPSBUTL(+$G(SAVED(52,RX_",",20,"I"))) S CHANGED="1^1"
"RTN","PSOORED7",73,0)
 Q CHANGED
"RTN","PSOREJP1")
0^6^B63661734
"RTN","PSOREJP1",1,0)
PSOREJP1 ;BIRM/MFR - Third Party Reject Display Screen ;04/29/05
"RTN","PSOREJP1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247**;DEC 1997;Build 18
"RTN","PSOREJP1",3,0)
 ;Reference to File 9002313.93 - BPS NCPDP REJECT CODES supported by IA 4720
"RTN","PSOREJP1",4,0)
 ;Reference to ^PS(59.7 supported by IA 694
"RTN","PSOREJP1",5,0)
 ;Reference to ^PSDRUG("AQ" supported by IA 3165
"RTN","PSOREJP1",6,0)
 ;
"RTN","PSOREJP1",7,0)
EN(RX,REJ,CHANGE) ; Entry point
"RTN","PSOREJP1",8,0)
 ;
"RTN","PSOREJP1",9,0)
 ; - DO NOT change the IF logic below as both of them might get executed (intentional)
"RTN","PSOREJP1",10,0)
 N FILL
"RTN","PSOREJP1",11,0)
 S FILL=+$$GET1^DIQ(52.25,REJ_","_RX,5)
"RTN","PSOREJP1",12,0)
 I $$CLOSED(RX,REJ) D EN^VALM("PSO REJECT DISPLAY - RESOLVED")
"RTN","PSOREJP1",13,0)
 I '$$CLOSED(RX,REJ) D EN^VALM("PSO REJECT DISPLAY")
"RTN","PSOREJP1",14,0)
 D FULL^VALM1
"RTN","PSOREJP1",15,0)
 Q
"RTN","PSOREJP1",16,0)
 ;
"RTN","PSOREJP1",17,0)
HDR      ; - Builds the Header section
"RTN","PSOREJP1",18,0)
 N LINE1,LINE2,X
"RTN","PSOREJP1",19,0)
 S VALMHDR(1)=$$DVINFO^PSOREJU2(RX,FILL,1),VALMHDR(2)=$$PTINFO^PSOREJU2(RX,1)
"RTN","PSOREJP1",20,0)
 S VALMHDR(3)=$$RXINFO(RX,FILL,1),VALMHDR(4)=$$RXINFO(RX,FILL,2)
"RTN","PSOREJP1",21,0)
 Q
"RTN","PSOREJP1",22,0)
 ;
"RTN","PSOREJP1",23,0)
INIT ; Builds the Body  section
"RTN","PSOREJP1",24,0)
 N DATA,LINE
"RTN","PSOREJP1",25,0)
 K ^TMP("PSOREJP1",$J) S VALMCNT=0,LINE=0
"RTN","PSOREJP1",26,0)
 D GET^PSOREJU2(RX,FILL,.DATA,REJ,1)
"RTN","PSOREJP1",27,0)
 D REJ                   ; Display the REJECT Information
"RTN","PSOREJP1",28,0)
 D OTH                   ; Display the Other Rejects Information
"RTN","PSOREJP1",29,0)
 D INS                   ; Display the Insurance Information
"RTN","PSOREJP1",30,0)
 D CLS                   ; Display the Resolution Information
"RTN","PSOREJP1",31,0)
 S VALMCNT=LINE
"RTN","PSOREJP1",32,0)
 Q
"RTN","PSOREJP1",33,0)
 ;
"RTN","PSOREJP1",34,0)
REJ ; - DUR Information
"RTN","PSOREJP1",35,0)
 N TYPE,PFLDT
"RTN","PSOREJP1",36,0)
 D SETLN("REJECT Information",1,1)
"RTN","PSOREJP1",37,0)
 S TYPE=$S($G(DATA(REJ,"CODE"))=79:"79 - REFILL TOO SOON",1:"88 - DUR REJECT")
"RTN","PSOREJP1",38,0)
 D SETLN("Reject Type   : "_TYPE_" received on "_$$FMTE^XLFDT($G(DATA(REJ,"DATE/TIME"))),,,17)
"RTN","PSOREJP1",39,0)
 D SETLN("Reject Status : "_$G(DATA(REJ,"STATUS")),,,17)
"RTN","PSOREJP1",40,0)
 D SET("PAYER MESSAGE",64)
"RTN","PSOREJP1",41,0)
 D SET("REASON",64)
"RTN","PSOREJP1",42,0)
 S PFLDT=$$FMTE^XLFDT($G(DATA(REJ,"PLAN PREVIOUS FILL DATE")))
"RTN","PSOREJP1",43,0)
 D SET("DUR TEXT",64,$S(PFLDT="":1,1:0))
"RTN","PSOREJP1",44,0)
 I PFLDT'="" D SETLN("Last Fill Date: "_PFLDT_" (from payer)",,1,17)
"RTN","PSOREJP1",45,0)
 Q
"RTN","PSOREJP1",46,0)
 ;
"RTN","PSOREJP1",47,0)
OTH ; - Other Rejects Information
"RTN","PSOREJP1",48,0)
 N LST,I,RJC,J,LAST
"RTN","PSOREJP1",49,0)
 S LST=$G(DATA(REJ,"OTHER REJECTS")) I LST="" Q
"RTN","PSOREJP1",50,0)
 D SETLN()
"RTN","PSOREJP1",51,0)
 D SETLN("OTHER REJECTS",1,1)
"RTN","PSOREJP1",52,0)
 F I=1:1:$L(LST,",") S RJC=$P(LST,",",I) D
"RTN","PSOREJP1",53,0)
 . S LAST=1 F J=(I+1):1:$L(LST,",") I $P(LST,",",J)'="" S LAST=0 Q
"RTN","PSOREJP1",54,0)
 . I RJC'="" D SETLN(RJC_" - "_$$EXP(RJC),,$S(LAST:1,1:0),6)
"RTN","PSOREJP1",55,0)
 Q
"RTN","PSOREJP1",56,0)
 ;
"RTN","PSOREJP1",57,0)
INS ; - Insurance Information
"RTN","PSOREJP1",58,0)
 D SETLN()
"RTN","PSOREJP1",59,0)
 D SETLN("INSURANCE Information",1,1)
"RTN","PSOREJP1",60,0)
 D SETLN("Insurance     : "_$G(DATA(REJ,"INSURANCE NAME")),,,17)
"RTN","PSOREJP1",61,0)
 D SETLN("Contact       : "_$G(DATA(REJ,"PLAN CONTACT")),,,17)
"RTN","PSOREJP1",62,0)
 D SETLN("Group Name    : "_$G(DATA(REJ,"GROUP NAME")),,,17)
"RTN","PSOREJP1",63,0)
 D SETLN("Group Number  : "_$G(DATA(REJ,"GROUP NUMBER")),,,17)
"RTN","PSOREJP1",64,0)
 D SETLN("Cardholder ID : "_$G(DATA(REJ,"CARDHOLDER ID")),,1,17)
"RTN","PSOREJP1",65,0)
 Q
"RTN","PSOREJP1",66,0)
 ;
"RTN","PSOREJP1",67,0)
CLS ; - Resolution Information
"RTN","PSOREJP1",68,0)
 I '$$CLOSED(RX,REJ) Q
"RTN","PSOREJP1",69,0)
 D SETLN()
"RTN","PSOREJP1",70,0)
 D SETLN("RESOLUTION Information",1,1)
"RTN","PSOREJP1",71,0)
 D SETLN("Resolved By   : "_$G(DATA(REJ,"CLOSED BY")),,,17)
"RTN","PSOREJP1",72,0)
 D SETLN("Date/Time     : "_$G(DATA(REJ,"CLOSED DATE/TIME")),,,17)
"RTN","PSOREJP1",73,0)
 I $G(DATA(REJ,"CLOSE COMMENTS"))'="" D SET("CLOSE COMMENTS",64)
"RTN","PSOREJP1",74,0)
 I $G(DATA(REJ,"COD1"))'="" D SETLN("Reason for Svc: "_$$OVRX^PSOREJU1(1,$G(DATA(REJ,"COD1"))),,,17)
"RTN","PSOREJP1",75,0)
 I $G(DATA(REJ,"COD2"))'="" D SETLN("Profes. Svc   : "_$$OVRX^PSOREJU1(2,$G(DATA(REJ,"COD2"))),,,17)
"RTN","PSOREJP1",76,0)
 I $G(DATA(REJ,"COD3"))'="" D SETLN("Result of Svc : "_$$OVRX^PSOREJU1(3,$G(DATA(REJ,"COD3"))),,,17)
"RTN","PSOREJP1",77,0)
 D SETLN("Reason        : "_$G(DATA(REJ,"CLOSE REASON")),,1,17)
"RTN","PSOREJP1",78,0)
 Q
"RTN","PSOREJP1",79,0)
 ;
"RTN","PSOREJP1",80,0)
SET(FIELD,L,UND) ; Sets the lines for fields that require text wrapping
"RTN","PSOREJP1",81,0)
 N TXT,T
"RTN","PSOREJP1",82,0)
 S TXT=DATA(REJ,FIELD) I $L(TXT)'>L D SETLN($$LABEL(FIELD)_TXT,,$S($G(UND):1,1:0),80-L) Q
"RTN","PSOREJP1",83,0)
 F I=1:1 Q:TXT=""  D
"RTN","PSOREJP1",84,0)
 . I I=1 D SETLN($$LABEL(FIELD)_$E(TXT,1,L),,,80-L) S TXT=$E(TXT,L+1,999) Q
"RTN","PSOREJP1",85,0)
 . S T="",$E(T,81-L)=$E(TXT,1,L) D SETLN(T,,$S($E(TXT,L+1,999)=""&$G(UND):1,1:0),80-L) S TXT=$E(TXT,L+1,999)
"RTN","PSOREJP1",86,0)
 Q
"RTN","PSOREJP1",87,0)
 ;
"RTN","PSOREJP1",88,0)
LABEL(FIELD) ; Sets the label for the field
"RTN","PSOREJP1",89,0)
 I FIELD="REASON" Q "Reason        : "
"RTN","PSOREJP1",90,0)
 I FIELD="PAYER MESSAGE" Q "Payer Message : "
"RTN","PSOREJP1",91,0)
 I FIELD="DUR TEXT" Q "DUR Text      : "
"RTN","PSOREJP1",92,0)
 I FIELD="CLOSE COMMENTS" Q "Comments      : "
"RTN","PSOREJP1",93,0)
 Q ""
"RTN","PSOREJP1",94,0)
 ;
"RTN","PSOREJP1",95,0)
VIEW ; - Rx View hidden action
"RTN","PSOREJP1",96,0)
 N VALMCNT,TITLE
"RTN","PSOREJP1",97,0)
 I $G(PSOBACK) D  Q
"RTN","PSOREJP1",98,0)
 . S VALMSG="Not available through Backdoor!",VALMBCK="R"
"RTN","PSOREJP1",99,0)
 S TITLE=VALM("TITLE")
"RTN","PSOREJP1",100,0)
 ;
"RTN","PSOREJP1",101,0)
 ; - DO structure used to avoid losing variables RX,FILL,REJ,LINE,TITLE
"RTN","PSOREJP1",102,0)
 DO
"RTN","PSOREJP1",103,0)
 . N PSOVDA,DA,PS
"RTN","PSOREJP1",104,0)
 . S (PSOVDA,DA)=RX,PS="REJECT"
"RTN","PSOREJP1",105,0)
 . N RX,REJ,FILL,LINE,TITLE D DP^PSORXVW
"RTN","PSOREJP1",106,0)
 ;
"RTN","PSOREJP1",107,0)
 S VALMBCK="R",VALM("TITLE")=TITLE
"RTN","PSOREJP1",108,0)
 Q
"RTN","PSOREJP1",109,0)
 ;
"RTN","PSOREJP1",110,0)
EDT ; - Rx Edit hidden action
"RTN","PSOREJP1",111,0)
 N VALMCNT,TITLE
"RTN","PSOREJP1",112,0)
 I $G(PSOBACK) D  Q
"RTN","PSOREJP1",113,0)
 . S VALMSG="Not available through Backdoor!",VALMBCK="R"
"RTN","PSOREJP1",114,0)
 S TITLE=VALM("TITLE")
"RTN","PSOREJP1",115,0)
 ;
"RTN","PSOREJP1",116,0)
 ; - DO structure used to avoid losing variables RX,FILL,REJ,LINE,TITLE
"RTN","PSOREJP1",117,0)
 DO
"RTN","PSOREJP1",118,0)
 . N PSOSITE,ORN,PSOPAR,PSOLIST
"RTN","PSOREJP1",119,0)
 . S PSOSITE=$$RXSITE^PSOBPSUT(RX,FILL),ORN=RX
"RTN","PSOREJP1",120,0)
 . S PSOPAR=$G(^PS(59,PSOSITE,1)),PSOLIST(1)=ORN_","
"RTN","PSOREJP1",121,0)
 . N RX,REJ,FILL,LINE,TITLE D EPH^PSORXEDT
"RTN","PSOREJP1",122,0)
 ;
"RTN","PSOREJP1",123,0)
 K VALMBCK I $$CLOSED(RX,REJ),$D(PSOSTFLT),PSOSTFLT'="B" S CHANGE=1 Q
"RTN","PSOREJP1",124,0)
 S VALMBCK="R",VALM("TITLE")=TITLE
"RTN","PSOREJP1",125,0)
 Q
"RTN","PSOREJP1",126,0)
 ;
"RTN","PSOREJP1",127,0)
OVR ; - Override a REJECT action
"RTN","PSOREJP1",128,0)
 I $$CLOSED(RX,REJ) D  Q
"RTN","PSOREJP1",129,0)
 . S VALMSG="This Reject is marked resolved!",VALMBCK="R" W $C(7)
"RTN","PSOREJP1",130,0)
 I $$GET1^DIQ(52.25,REJ_","_RX,.01)'=88 D  Q
"RTN","PSOREJP1",131,0)
 . S VALMSG="Only DUR rejects can be overriden!",VALMBCK="R" W $C(7)
"RTN","PSOREJP1",132,0)
 N COD1,COD2,COD3
"RTN","PSOREJP1",133,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",134,0)
 S COD1=$$OVRCOD^PSOREJU1(1,$$GET1^DIQ(52.25,REJ_","_RX,14)) I COD1="^" S VALMBCK="R" Q
"RTN","PSOREJP1",135,0)
 S COD2=$$OVRCOD^PSOREJU1(2) I COD2="^" S VALMBCK="R" Q
"RTN","PSOREJP1",136,0)
 S COD3=$$OVRCOD^PSOREJU1(3) I COD3="^" S VALMBCK="R" Q
"RTN","PSOREJP1",137,0)
 ;
"RTN","PSOREJP1",138,0)
 D OVRDSP^PSOREJU1(COD1_"^"_COD2_"^"_COD3)
"RTN","PSOREJP1",139,0)
 ;
"RTN","PSOREJP1",140,0)
RES ; - Re-submit a claim action
"RTN","PSOREJP1",141,0)
 I $$CLOSED(RX,REJ) D  Q
"RTN","PSOREJP1",142,0)
 . S VALMSG="This Reject is marked resolved!",VALMBCK="R"
"RTN","PSOREJP1",143,0)
 N DIR,OVRC,RESP,ALTXT
"RTN","PSOREJP1",144,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",145,0)
 S DIR(0)="Y",DIR("A")="     Confirm? ",DIR("B")="YES"
"RTN","PSOREJP1",146,0)
 S DIR("A",1)="     When you confirm, a new claim will be submitted for"
"RTN","PSOREJP1",147,0)
 S DIR("A",2)="     the prescription and this REJECT will be marked"
"RTN","PSOREJP1",148,0)
 S DIR("A",3)="     resolved."
"RTN","PSOREJP1",149,0)
 S DIR("A",4)=" "
"RTN","PSOREJP1",150,0)
 D ^DIR I $G(Y)=0!$D(DIRUT) S VALMBCK="R" Q
"RTN","PSOREJP1",151,0)
 I $G(COD1)'="" S OVRC=$G(COD1)_"^"_$G(COD2)_"^"_$G(COD3)
"RTN","PSOREJP1",152,0)
 S ALTXT="REJECT WORKLIST"
"RTN","PSOREJP1",153,0)
 S:$G(OVRC)'="" ALTXT=ALTXT_"-DUR OVERRIDE CODES("_$TR(OVRC,"^","/")_")"
"RTN","PSOREJP1",154,0)
 D ECMESND^PSOBPSU1(RX,FILL,,"ED",$$GETNDC^PSONDCUT(RX,FILL),,,$G(OVRC),,.RESP,,ALTXT)
"RTN","PSOREJP1",155,0)
 I $G(RESP) D  Q
"RTN","PSOREJP1",156,0)
 . W !!?10,"Claim could not be submitted. Please try again later!"
"RTN","PSOREJP1",157,0)
 . W !,?10,"Reason: ",$S($P(RESP,"^",2)="":"UNKNOWN",1:$P(RESP,"^",2)),$C(7) H 2
"RTN","PSOREJP1",158,0)
 D CLOSE^PSOREJUT(RX,FILL,REJ,DUZ,1,,$G(COD1),$G(COD2),$G(COD3))
"RTN","PSOREJP1",159,0)
 ;
"RTN","PSOREJP1",160,0)
 I $$PTLBL^PSOREJP2(RX,FILL) D PRINT(RX,FILL)
"RTN","PSOREJP1",161,0)
 ; 
"RTN","PSOREJP1",162,0)
 I $D(PSOSTFLT),PSOSTFLT'="B" S CHANGE=1
"RTN","PSOREJP1",163,0)
 Q
"RTN","PSOREJP1",164,0)
 ;
"RTN","PSOREJP1",165,0)
EXIT ;
"RTN","PSOREJP1",166,0)
 K ^TMP("PSOREJP1",$J)
"RTN","PSOREJP1",167,0)
 Q
"RTN","PSOREJP1",168,0)
 ;
"RTN","PSOREJP1",169,0)
SETLN(TEXT,REV,UND,HIG) ; Sets a line to be displayed in the Body section
"RTN","PSOREJP1",170,0)
 N X
"RTN","PSOREJP1",171,0)
 S:$G(TEXT)="" $E(TEXT,80)=""
"RTN","PSOREJP1",172,0)
 S:$L(TEXT)>80 TEXT=$E(TEXT,1,80)
"RTN","PSOREJP1",173,0)
 S LINE=LINE+1,^TMP("PSOREJP1",$J,LINE,0)=$G(TEXT)
"RTN","PSOREJP1",174,0)
 ;
"RTN","PSOREJP1",175,0)
 I $G(REV) D  Q
"RTN","PSOREJP1",176,0)
 . D CNTRL^VALM10(LINE,1,$L(TEXT),IORVON,IOINORM)
"RTN","PSOREJP1",177,0)
 . I $G(UND) D CNTRL^VALM10(LINE,$L(TEXT)+1,80,IOUON,IOINORM)
"RTN","PSOREJP1",178,0)
 I $G(UND) D CNTRL^VALM10(LINE,1,80,IOUON,IOINORM)
"RTN","PSOREJP1",179,0)
 I $G(HIG) D
"RTN","PSOREJP1",180,0)
 . D CNTRL^VALM10(LINE,HIG,80,IOINHI,IOINORM)
"RTN","PSOREJP1",181,0)
 Q
"RTN","PSOREJP1",182,0)
HELP ;
"RTN","PSOREJP1",183,0)
 Q
"RTN","PSOREJP1",184,0)
 ;
"RTN","PSOREJP1",185,0)
RXINFO(RX,FILL,LINE) ; Returns header displayable Rx Information
"RTN","PSOREJP1",186,0)
 N TXT,RXINFO,LBL,CMOP,DRG
"RTN","PSOREJP1",187,0)
 I LINE=1 D
"RTN","PSOREJP1",188,0)
 . S RXINFO="Rx#      : "_$$GET1^DIQ(52,RX,.01)_"/"_FILL
"RTN","PSOREJP1",189,0)
 . S $E(RXINFO,30)="ECME#: "_$E(10000000+RX,2,8)
"RTN","PSOREJP1",190,0)
 . S $E(RXINFO,55)="Fill Date: "_$$FMTE^XLFDT($$RXFLDT^PSOBPSUT(RX,FILL))
"RTN","PSOREJP1",191,0)
 I LINE=2 D
"RTN","PSOREJP1",192,0)
 . S DRG=$$GET1^DIQ(52,RX,6,"I"),CMOP=$S($D(^PSDRUG("AQ",DRG)):1,1:0)
"RTN","PSOREJP1",193,0)
 . S RXINFO=$S(CMOP:"CMOP ",1:"")_"Drug",$E(RXINFO,10)=": "_$E($$GET1^DIQ(52,RX,6),1,43)
"RTN","PSOREJP1",194,0)
 . S $E(RXINFO,56)="NDC Code: "_$$GETNDC^PSONDCUT(RX,FILL)
"RTN","PSOREJP1",195,0)
 Q $G(RXINFO)
"RTN","PSOREJP1",196,0)
 ;
"RTN","PSOREJP1",197,0)
CLOSED(RX,REJ) ; Returns whether the REJECT is RESOLVED or NOT
"RTN","PSOREJP1",198,0)
 Q $S($$GET1^DIQ(52.25,REJ_","_RX,10)="":0,1:1)
"RTN","PSOREJP1",199,0)
 ;
"RTN","PSOREJP1",200,0)
REOPN(RX,REJ) ; Returns whether the REJECT was RE-OPENED or NOT
"RTN","PSOREJP1",201,0)
 Q $S($$GET1^DIQ(52.25,REJ_","_RX,23)="":0,1:1)
"RTN","PSOREJP1",202,0)
 ;
"RTN","PSOREJP1",203,0)
EXP(CODE) ; - Returns the explanation field (.02) for a reject code
"RTN","PSOREJP1",204,0)
 ; Input:  (r) CODE - .01 field (Code) value from file 9002313.93
"RTN","PSOREJP1",205,0)
 ; Output: .02 field (Explanation) value from file 9002313.93
"RTN","PSOREJP1",206,0)
 N DIC,X,Y
"RTN","PSOREJP1",207,0)
 S DIC=9002313.93,DIC(0)="Z",X=CODE D ^DIC
"RTN","PSOREJP1",208,0)
 Q $P($G(Y(0)),"^",2)
"RTN","PSOREJP1",209,0)
 ;
"RTN","PSOREJP1",210,0)
OUT(RX) ; - Supported call by outside PROTOCOLs to act on specific REJECTs
"RTN","PSOREJP1",211,0)
 N I,RFL,DATA,REJ,PSOBACK,VALMCNT
"RTN","PSOREJP1",212,0)
 S PSOBACK=1
"RTN","PSOREJP1",213,0)
 S (RFL,I)=0 F I=1:1 Q:'$D(^PSRX(RX,1,I))  S RFL=I
"RTN","PSOREJP1",214,0)
 S X=$$FIND^PSOREJUT(RX,RFL,.DATA) S REJ=$O(DATA(""))
"RTN","PSOREJP1",215,0)
 I '$G(REJ) S VALMSG="Invalid selection!",VALMBCK="R" Q
"RTN","PSOREJP1",216,0)
 D EN(RX,REJ) S VALMBCK="R"
"RTN","PSOREJP1",217,0)
 Q
"RTN","PSOREJP1",218,0)
 ;
"RTN","PSOREJP1",219,0)
PRINT(RX,RFL) ; Print Label for specific Rx/Fill
"RTN","PSOREJP1",220,0)
 N PPL,PSOSITE,PSOPAR,PSOSYS,PSOLAP,PSOBARS,PSOBAR0,PSOBAR1,PSOIOS,PSOBFLAG,POP,DFN,PDUZ,RXFL
"RTN","PSOREJP1",221,0)
 ;
"RTN","PSOREJP1",222,0)
 S PSOSITE=$$RXSITE^PSOBPSUT(RX,RFL),PSOPAR=^PS(59,PSOSITE,1)
"RTN","PSOREJP1",223,0)
 S DFN=$$GET1^DIQ(52,RX,2,"I"),PDUZ=DUZ,PSOSYS=$G(^PS(59.7,1,40.1))
"RTN","PSOREJP1",224,0)
 S PPL=RX I RFL S RXFL(RX)=RFL
"RTN","PSOREJP1",225,0)
DEV W ! S PSOBFLAG=1 D LBL^PSOLSET I $G(PSOQUIT) Q
"RTN","PSOREJP1",226,0)
 I $E($G(IOST),1,2)'="P-" W !!,"Device is not a printer!",$C(7) G DEV
"RTN","PSOREJP1",227,0)
 ;
"RTN","PSOREJP1",228,0)
 S IOP=PSOLAP D ^%ZIS D DQ^PSOLBL,^%ZISC
"RTN","PSOREJP1",229,0)
 Q
"RTN","PSOREJP2")
0^10^B51774949
"RTN","PSOREJP2",1,0)
PSOREJP2 ;BIRM/MFR - Third Party Rejects View/Process ;04/28/05
"RTN","PSOREJP2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247**;DEC 1997;Build 18
"RTN","PSOREJP2",3,0)
 ;Reference to ^PSSLOCK   supported by DBIA #2789
"RTN","PSOREJP2",4,0)
 ; 
"RTN","PSOREJP2",5,0)
 N PSORJSRT,PSOPTFLT,PSODRFLT,PSORXFLT,PSOBYFLD,PSOSTFLT,DIR,DIRUT,DUOUT,DTOUT
"RTN","PSOREJP2",6,0)
 N PSOINFLT
"RTN","PSOREJP2",7,0)
 S PSORJASC=1
"RTN","PSOREJP2",8,0)
 ;
"RTN","PSOREJP2",9,0)
 ; - Division/Site selection
"RTN","PSOREJP2",10,0)
 D SEL^PSOREJU1("DIVISION","^PS(59,",.PSOREJST) I $G(PSOREJST)="^" G EXIT
"RTN","PSOREJP2",11,0)
 ;
"RTN","PSOREJP2",12,0)
SEL ; - Field Selection (Patient/Drug/Rx)
"RTN","PSOREJP2",13,0)
 S DIR(0)="S^P:PATIENT;D:DRUG;R:Rx;I:INSURANCE",DIR("B")="P"
"RTN","PSOREJP2",14,0)
 S DIR("A")="By (P)atient, (D)rug, (R)x or (I)nsurance" D ^DIR I $D(DIRUT) G EXIT
"RTN","PSOREJP2",15,0)
 S PSOBYFLD=Y,DIR("B")=""
"RTN","PSOREJP2",16,0)
 ;
"RTN","PSOREJP2",17,0)
 I PSOBYFLD="P" D  I $G(PSOPTFLT)="^" G SEL
"RTN","PSOREJP2",18,0)
 . S (PSODRFLT,PSORXFLT,PSOINFLT)="ALL",PSORJSRT="DR"
"RTN","PSOREJP2",19,0)
 . D SEL^PSOREJU1("PATIENT","^DPT(",.PSOPTFLT)
"RTN","PSOREJP2",20,0)
 ;
"RTN","PSOREJP2",21,0)
 I PSOBYFLD="D" D  I $G(PSODRFLT)="^" G SEL
"RTN","PSOREJP2",22,0)
 . S (PSOPTFLT,PSORXFLT,PSOINFLT)="ALL",PSORJSRT="PA"
"RTN","PSOREJP2",23,0)
 . D SEL^PSOREJU1("DRUG","^PSDRUG(",.PSODRFLT)
"RTN","PSOREJP2",24,0)
 ;
"RTN","PSOREJP2",25,0)
 I PSOBYFLD="R" D  I $D(DUOUT)!$D(DTOUT)!'$G(PSORXFLT) G SEL
"RTN","PSOREJP2",26,0)
 . S (PSOPTFLT,PSODRFLT,PSOINFLT)="ALL",PSORJSRT="PA"
"RTN","PSOREJP2",27,0)
 . N DIC,Y,X,OK K PSOSTFLT,PSORXFLT
"RTN","PSOREJP2",28,0)
 . S DIC=52,DIC(0)="QEZA",DIC("A")="PRESCRIPTION: "
"RTN","PSOREJP2",29,0)
 . F  W ! D ^DIC D  Q:$G(OK) 
"RTN","PSOREJP2",30,0)
 . . I $D(DUOUT)!$D(DTOUT)!(X="") S OK=1 Q
"RTN","PSOREJP2",31,0)
 . . I '$O(^PSRX(+Y,"REJ",0)) D  Q
"RTN","PSOREJP2",32,0)
 . . . W !?40,"Prescription does not have rejects!",$C(7)
"RTN","PSOREJP2",33,0)
 . . S PSORXFLT=+Y,OK=1
"RTN","PSOREJP2",34,0)
 ;
"RTN","PSOREJP2",35,0)
 I PSOBYFLD="I" D  I $O(PSOINFLT(""))="" G SEL
"RTN","PSOREJP2",36,0)
 . S (PSOPTFLT,PSODRFLT,PSORXFLT)="ALL",PSORJSRT="PA"
"RTN","PSOREJP2",37,0)
 . N DIR,Y,X,OK K PSOINFLT W !
"RTN","PSOREJP2",38,0)
 . S DIR("A",1)="Enter the whole or part of the Insurance Company"
"RTN","PSOREJP2",39,0)
 . S DIR("A",2)="name for which you want to view/process REJECTS."
"RTN","PSOREJP2",40,0)
 . S DIR("A",3)=""
"RTN","PSOREJP2",41,0)
 . S DIR(0)="FO^3:30",DIR("A")="  INSURANCE"
"RTN","PSOREJP2",42,0)
 . F  D ^DIR D  Q:$G(OK) 
"RTN","PSOREJP2",43,0)
 . . I $D(DIRUT)!(X="") S OK=1 Q
"RTN","PSOREJP2",44,0)
 . . S PSOINFLT(X)="" K DIR("A") S DIR("A")="ANOTHER ONE"
"RTN","PSOREJP2",45,0)
 ;
"RTN","PSOREJP2",46,0)
 ; - Status Selection (UNRESOLVED or RESOLVED)
"RTN","PSOREJP2",47,0)
 I $G(PSOSTFLT)="" D  I $D(DIRUT) G EXIT
"RTN","PSOREJP2",48,0)
 . S DIR(0)="S^U:UNRESOLVED;R:RESOLVED;B:BOTH",DIR("B")="B"
"RTN","PSOREJP2",49,0)
 . S DIR("A")="(U)NRESOLVED, (R)RESOLVED or (B)OTH REJECT statuses" D ^DIR
"RTN","PSOREJP2",50,0)
 . S PSOSTFLT=Y
"RTN","PSOREJP2",51,0)
 ;
"RTN","PSOREJP2",52,0)
 D LST^PSOREJP0
"RTN","PSOREJP2",53,0)
 ;
"RTN","PSOREJP2",54,0)
EXIT Q
"RTN","PSOREJP2",55,0)
 ;
"RTN","PSOREJP2",56,0)
CLO      ; - Ignore a REJECT hidden action
"RTN","PSOREJP2",57,0)
 I $$CLOSED^PSOREJP1(RX,REJ) D  Q
"RTN","PSOREJP2",58,0)
 . S VALMSG="This Reject is marked resolved!",VALMBCK="R"
"RTN","PSOREJP2",59,0)
 N DIR,COM
"RTN","PSOREJP2",60,0)
 D FULL^VALM1
"RTN","PSOREJP2",61,0)
 I '$$SIG^PSOREJU1() S VALMBCK="R" Q
"RTN","PSOREJP2",62,0)
 W !
"RTN","PSOREJP2",63,0)
 S COM=$$COM^PSOREJU1() I COM="^" S VALMBCK="R" Q
"RTN","PSOREJP2",64,0)
 W !
"RTN","PSOREJP2",65,0)
 S DIR(0)="Y",DIR("A")="     Confirm? ",DIR("B")="NO"
"RTN","PSOREJP2",66,0)
 S DIR("A",1)="     When you confirm this REJECT will be marked RESOLVED."
"RTN","PSOREJP2",67,0)
 S DIR("A",2)=" "
"RTN","PSOREJP2",68,0)
 D ^DIR I $G(Y)=0!$D(DIRUT) S VALMBCK="R" Q
"RTN","PSOREJP2",69,0)
 W ?40,"[Closing..." D CLOSE^PSOREJUT(RX,FILL,REJ,DUZ,6,COM) W "OK]",!,$C(7) H 1
"RTN","PSOREJP2",70,0)
 I $D(PSOSTFLT),PSOSTFLT'="B" S CHANGE=1
"RTN","PSOREJP2",71,0)
 ;
"RTN","PSOREJP2",72,0)
 I $$PTLBL(RX,FILL) D PRINT^PSOREJP1(RX,FILL)
"RTN","PSOREJP2",73,0)
 ;
"RTN","PSOREJP2",74,0)
 Q
"RTN","PSOREJP2",75,0)
 ;
"RTN","PSOREJP2",76,0)
OPN ; - Re-open a Closed/Resolved Reject
"RTN","PSOREJP2",77,0)
 I '$$CLOSED^PSOREJP1(RX,REJ) D  Q
"RTN","PSOREJP2",78,0)
 . S VALMSG="This Reject is NOT marked resolved!",VALMBCK="R"
"RTN","PSOREJP2",79,0)
 N DIR,COM,REJDATA,NEWDATA
"RTN","PSOREJP2",80,0)
 D FULL^VALM1
"RTN","PSOREJP2",81,0)
 I '$$SIG^PSOREJU1() S VALMBCK="R" Q
"RTN","PSOREJP2",82,0)
 W !
"RTN","PSOREJP2",83,0)
 S DIR(0)="Y",DIR("A")="     Confirm? ",DIR("B")="NO"
"RTN","PSOREJP2",84,0)
 S DIR("A",1)="     When you confirm this REJECT will be marked UNRESOLVED."
"RTN","PSOREJP2",85,0)
 S DIR("A",2)=" "
"RTN","PSOREJP2",86,0)
 D ^DIR I $G(Y)=0!$D(DIRUT) S VALMBCK="R" Q
"RTN","PSOREJP2",87,0)
 ;
"RTN","PSOREJP2",88,0)
 W ?40,"[Re-opening..."
"RTN","PSOREJP2",89,0)
 K REJDATA D GET^PSOREJU2(RX,FILL,.REJDATA,REJ,1) D SETOPN^PSOREJU2(RX,REJ)
"RTN","PSOREJP2",90,0)
 K NEWDATA M NEWDATA=REJDATA(REJ) S NEWDATA("PHARMACIST")=DUZ
"RTN","PSOREJP2",91,0)
 D SAVE^PSOREJUT(RX,FILL,.NEWDATA),RETRXF^PSOREJU2(RX,FILL,0)
"RTN","PSOREJP2",92,0)
 W "OK]",!,$C(7) H 1
"RTN","PSOREJP2",93,0)
 S CHANGE=1
"RTN","PSOREJP2",94,0)
 Q
"RTN","PSOREJP2",95,0)
 ;
"RTN","PSOREJP2",96,0)
CHG ; - Change Suspense Date action
"RTN","PSOREJP2",97,0)
 I $$CLOSED^PSOREJP1(RX,REJ) D  Q
"RTN","PSOREJP2",98,0)
 . S VALMSG="This Reject is marked resolved!",VALMBCK="R" W $C(7)
"RTN","PSOREJP2",99,0)
 ;
"RTN","PSOREJP2",100,0)
 N SUSDT,PSOMSG,Y,SUSRX,%DT,DA,DIE,DR,ISSDT,EXPDT,PSOMSG
"RTN","PSOREJP2",101,0)
 ;
"RTN","PSOREJP2",102,0)
 S RFL=+$$GET1^DIQ(52.25,REJ_","_RX,5),SUSDT=$$RXSUDT^PSOBPSUT(RX,RFL)
"RTN","PSOREJP2",103,0)
 I SUSDT="" S VALMSG="Prescription is not suspended!",VALMBCK="R" W $C(7) Q
"RTN","PSOREJP2",104,0)
 I $$RXRLDT^PSOBPSUT(RX,RFL) S VALMSG="Prescription has been released already!",VALMBCK="R" W $C(7) Q
"RTN","PSOREJP2",105,0)
 D PSOL^PSSLOCK(RX) I '$G(PSOMSG) S VALMSG=$P(PSOMSG,"^",2),VALMBCK="R" W $C(7) Q
"RTN","PSOREJP2",106,0)
 ;
"RTN","PSOREJP2",107,0)
 S ISSDT=$$GET1^DIQ(52,RX,1,"I"),EXPDT=$$GET1^DIQ(52,RX,26,"I")
"RTN","PSOREJP2",108,0)
 S SUSRX=$O(^PS(52.5,"B",RX,0))
"RTN","PSOREJP2",109,0)
 ;
"RTN","PSOREJP2",110,0)
SUDT ; Asks for the new Suspense Date
"RTN","PSOREJP2",111,0)
 D FULL^VALM1 S %DT("B")=$$FMTE^XLFDT(SUSDT),%DT="EA",%DT("A")="SUSPENSE DATE: "
"RTN","PSOREJP2",112,0)
 W ! D ^%DT I Y<0!($D(DTOUT)) D PSOUL^PSSLOCK(RX) S VALMBCK="R" Q
"RTN","PSOREJP2",113,0)
 I Y<ISSDT D  G SUDT
"RTN","PSOREJP2",114,0)
 . W !!?5,"Suspense Date cannot be before Issue Date: ",$$FMTE^XLFDT(ISSDT),$C(7)
"RTN","PSOREJP2",115,0)
 I Y>EXPDT D  G SUDT
"RTN","PSOREJP2",116,0)
 . W !!?5,"Suspense Date cannot be after Expiration Date: ",$$FMTE^XLFDT(EXPDT),$C(7)
"RTN","PSOREJP2",117,0)
 S SUSDT=Y
"RTN","PSOREJP2",118,0)
 ;
"RTN","PSOREJP2",119,0)
 N DIR,DIRUT W !
"RTN","PSOREJP2",120,0)
 S DIR("A",1)="     When you confirm, this REJECT will be marked resolved. A"
"RTN","PSOREJP2",121,0)
 S DIR("A",2)="     new claim will be re-submitted to the 3rd party payer"
"RTN","PSOREJP2",122,0)
 I $$GET1^DIQ(52.5,SUSRX,3)="" D
"RTN","PSOREJP2",123,0)
 . I SUSDT>DT D
"RTN","PSOREJP2",124,0)
 . . S DIR("A",3)="     when the prescription label for this fill is printed"
"RTN","PSOREJP2",125,0)
 . . S DIR("A",4)="     from suspense on "_$$FMTE^XLFDT(SUSDT)_"."
"RTN","PSOREJP2",126,0)
 . . S DIR("A",5)=" "
"RTN","PSOREJP2",127,0)
 . . S DIR("A",6)="     Note: THE LABEL FOR THIS PRESCRIPTION FILL WILL NOT BE"
"RTN","PSOREJP2",128,0)
 . . S DIR("A",7)="           PRINTED LOCAL FROM SUSPENSE BEFORE "_$$FMTE^XLFDT(SUSDT)_"."
"RTN","PSOREJP2",129,0)
 . E  D
"RTN","PSOREJP2",130,0)
 . . S DIR("A",3)="     the next time local labels are printed from suspense."
"RTN","PSOREJP2",131,0)
 E  D
"RTN","PSOREJP2",132,0)
 . I SUSDT>DT D
"RTN","PSOREJP2",133,0)
 . . S DIR("A",3)="     when the prescription is transmitted to CMOP on "
"RTN","PSOREJP2",134,0)
 . . S DIR("A",4)="     "_$$FMTE^XLFDT(SUSDT)_"."
"RTN","PSOREJP2",135,0)
 . . S DIR("A",5)=" "
"RTN","PSOREJP2",136,0)
 . . S DIR("A",6)="     Note: THIS PRESCRIPTION FILL WILL NOT BE TRANSMITTED TO"
"RTN","PSOREJP2",137,0)
 . . S DIR("A",7)="           CMOP BEFORE "_$$FMTE^XLFDT(SUSDT)_"."
"RTN","PSOREJP2",138,0)
 . E  D
"RTN","PSOREJP2",139,0)
 . . S DIR("A",3)="     when this prescription fill is transmitted to CMOP on"
"RTN","PSOREJP2",140,0)
 . . S DIR("A",4)="     the next CMOP transmission."
"RTN","PSOREJP2",141,0)
    ;
"RTN","PSOREJP2",142,0)
 S DIR("A",$O(DIR("A",""),-1)+1)=" "
"RTN","PSOREJP2",143,0)
 S DIR(0)="Y",DIR("A")="     Confirm? ",DIR("B")="YES"
"RTN","PSOREJP2",144,0)
 D ^DIR I $G(Y)=0!$D(DIRUT) S VALMBCK="R" D PSOUL^PSSLOCK(RX) Q
"RTN","PSOREJP2",145,0)
 ;
"RTN","PSOREJP2",146,0)
 ; - Suspense/Fill Date updates
"RTN","PSOREJP2",147,0)
 I SUSDT'=$$RXSUDT^PSOBPSUT(RX,RFL) D
"RTN","PSOREJP2",148,0)
 . N DA,DIE,DR,PSOX,SFN,INDT,DEAD
"RTN","PSOREJP2",149,0)
 . S DA=SUSRX,DIE="^PS(52.5,",DR=".02///"_SUSDT D ^DIE
"RTN","PSOREJP2",150,0)
 . S SFN=SUSRX,DEAD=0,INDT=SUSDT D CHANGE^PSOSUCH1(RX,RFL)
"RTN","PSOREJP2",151,0)
 ;
"RTN","PSOREJP2",152,0)
 ; - Flagging the prescription to be re-submitted to ECME on the next CMOP/Print from Suspense
"RTN","PSOREJP2",153,0)
 D RETRXF^PSOREJU2(RX,RFL,1)
"RTN","PSOREJP2",154,0)
 W ?40,"[Closing..."
"RTN","PSOREJP2",155,0)
 D CLOSE^PSOREJUT(RX,RFL,REJ,DUZ,8,"Fill Date changed to "_$$FMTE^XLFDT(SUSDT)_". A new claim will be re-submitted on this date.")
"RTN","PSOREJP2",156,0)
 W "OK]",!,$C(7) H 1 I $D(PSOSTFLT),PSOSTFLT'="B" S CHANGE=1
"RTN","PSOREJP2",157,0)
 D PSOUL^PSSLOCK(RX)
"RTN","PSOREJP2",158,0)
 Q
"RTN","PSOREJP2",159,0)
 ;
"RTN","PSOREJP2",160,0)
PTLBL(RX,RFL) ; Returns whether the user should be prompted for 'Print Label?' or not
"RTN","PSOREJP2",161,0)
 N PTLBL,CMP,LBL
"RTN","PSOREJP2",162,0)
 I $$FIND^PSOREJUT(RX,RFL) Q 0       ; Has OPEN/UNRESOLVED 3rd pary payer reject
"RTN","PSOREJP2",163,0)
 I $$GET1^DIQ(52,RX,100,"I") Q 0     ; Rx status not ACTIVE
"RTN","PSOREJP2",164,0)
 I $$RXRLDT^PSOBPSUT(RX,RFL) Q 0     ; Rx Released
"RTN","PSOREJP2",165,0)
 ; - CMOP Rx fill?
"RTN","PSOREJP2",166,0)
 S PTLBL=1,CMP=0
"RTN","PSOREJP2",167,0)
 F  S CMP=$O(^PSRX(RX,4,CMP)) Q:'CMP  D  Q:'PTLBL
"RTN","PSOREJP2",168,0)
 . I +$$GET1^DIQ(52.01,CMP_","_RX,2,"I")=RFL S PTLBL=0
"RTN","PSOREJP2",169,0)
 I 'PTLBL Q 0
"RTN","PSOREJP2",170,0)
 ; - Label already printed for Rx fill?
"RTN","PSOREJP2",171,0)
 S LBL=0
"RTN","PSOREJP2",172,0)
 F  S LBL=$O(^PSRX(RX,"L",LBL)) Q:'LBL  D  Q:'PTLBL
"RTN","PSOREJP2",173,0)
 . I +$$GET1^DIQ(52.032,LBL_","_RX,1,"I")'=RFL Q
"RTN","PSOREJP2",174,0)
 . I $$GET1^DIQ(52.032,LBL_","_RX,4,"I") Q
"RTN","PSOREJP2",175,0)
 . I $$GET1^DIQ(52.032,LBL_","_RX,2)["INTERACTION" Q
"RTN","PSOREJP2",176,0)
 . S PTLBL=0
"RTN","PSOREJP2",177,0)
 ;
"RTN","PSOREJP2",178,0)
 I PTLBL D
"RTN","PSOREJP2",179,0)
 . N DIR,DIRUT,Y
"RTN","PSOREJP2",180,0)
 . W ! S DIR(0)="Y",DIR("A")="Print Label? ",DIR("B")="YES"
"RTN","PSOREJP2",181,0)
 . D ^DIR I $G(Y)=0!$D(DIRUT) S PTLBL=0 Q
"RTN","PSOREJP2",182,0)
 ;
"RTN","PSOREJP2",183,0)
 Q PTLBL
"RTN","PSOREJU1")
0^2^B55340266
"RTN","PSOREJU1",1,0)
PSOREJU1 ;BIRM/MFR - BPS (ECME) - Clinical Rejects Utilities (1) ;10/15/04
"RTN","PSOREJU1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247**;DEC 1997;Build 18
"RTN","PSOREJU1",3,0)
 ;Reference to File 9002313.21 - BPS NCPDP PROFESSIONAL SERVICE CODE supported by DBIA 4712
"RTN","PSOREJU1",4,0)
 ;Reference to File 9002313.22 - BPS NCPDP RESULT OF SERVICE CODE supported by DBIA 4713
"RTN","PSOREJU1",5,0)
 ;Reference to File 9002313.23 - BPS NCPDP REASON FOR SERVICE CODE supported by DBIA 4714
"RTN","PSOREJU1",6,0)
 ;
"RTN","PSOREJU1",7,0)
 ;
"RTN","PSOREJU1",8,0)
ACTION(RX,REJ,OPTS,DEF) ;
"RTN","PSOREJU1",9,0)
 ; Input:  (r) RX   - Rx IEN (#52) 
"RTN","PSOREJU1",10,0)
 ;         (r) REJ  - REJECT ID (IEN)
"RTN","PSOREJU1",11,0)
 ;         (r) OPTS - Available options ("QIO" for QUIT/IGNORE/OVERRIDE)
"RTN","PSOREJU1",12,0)
 ;         (o) DEF  - Default Option ("O", "I" or "Q")
"RTN","PSOREJU1",13,0)
 ; Output: ACTION: "I^Comments" - Ignore Reject
"RTN","PSOREJU1",14,0)
 ;                 "O^COD1^COD2^COD3" - Override with the Override codes COD1(Prof.),COD2(Reason) and COD3(Result)
"RTN","PSOREJU1",15,0)
 ;                 "Q" - Quit
"RTN","PSOREJU1",16,0)
 ;                 "^" - Up-arrow entered or timed out
"RTN","PSOREJU1",17,0)
 ;
"RTN","PSOREJU1",18,0)
 N ACTION,COM,OVR,X,DIR,DIRUT,Y
"RTN","PSOREJU1",19,0)
 ;         
"RTN","PSOREJU1",20,0)
 I '$G(RX)!'$G(REJ) Q
"RTN","PSOREJU1",21,0)
 I '$D(^PSRX(RX,"REJ",REJ)) Q
"RTN","PSOREJU1",22,0)
 ;
"RTN","PSOREJU1",23,0)
 ; - Display DUR/79 REJECT information
"RTN","PSOREJU1",24,0)
 D DISPLAY(RX,REJ)
"RTN","PSOREJU1",25,0)
 ;
"RTN","PSOREJU1",26,0)
ASK K ACTION,DIR,DIRUT
"RTN","PSOREJU1",27,0)
 S DIR(0)="SO^",DIR("A")=""
"RTN","PSOREJU1",28,0)
 S:(OPTS["O") DIR(0)=DIR(0)_"O:(O)VERRIDE - RESUBMIT WITH OVERRIDE CODES;",DIR("A")=DIR("A")_"(O)verride,"
"RTN","PSOREJU1",29,0)
 S:(OPTS["I") DIR(0)=DIR(0)_"I:(I)GNORE - FILL Rx WITHOUT CLAIM SUBMISSION;",DIR("A")=DIR("A")_"(I)gnore,"
"RTN","PSOREJU1",30,0)
 S:(OPTS["Q") DIR(0)=DIR(0)_"Q:(Q)UIT - SEND TO WORKLIST (REQUIRES INTERVENTION);",DIR("A")=DIR("A")_"(Q)uit,"
"RTN","PSOREJU1",31,0)
 S $E(DIR(0),$L(DIR(0)))="",$E(DIR("A"),$L(DIR("A")))="",DIR("??")="^D HELP^PSOREJU2("""_OPTS_""")"
"RTN","PSOREJU1",32,0)
 S:$G(DEF)'="" DIR("B")=DEF D ^DIR I $D(DIRUT) W ! Q "Q"
"RTN","PSOREJU1",33,0)
 ;
"RTN","PSOREJU1",34,0)
 ; - STOP/QUIT Action
"RTN","PSOREJU1",35,0)
 S ACTION=Y I ACTION="Q" Q ACTION
"RTN","PSOREJU1",36,0)
 ;
"RTN","PSOREJU1",37,0)
 ; - IGNORE Action 
"RTN","PSOREJU1",38,0)
 K DIR,DIRUT,X
"RTN","PSOREJU1",39,0)
 I ACTION="I" S COM=$$COM() G ASK:COM="^" G ASK:'$$SIG() S ACTION=ACTION_"^"_COM
"RTN","PSOREJU1",40,0)
 ;
"RTN","PSOREJU1",41,0)
 ; - OVERRIDE Action
"RTN","PSOREJU1",42,0)
 I ACTION="O" D  G ASK:OVR="^"
"RTN","PSOREJU1",43,0)
 . S OVR=$$OVR() S ACTION=ACTION_"^"_OVR
"RTN","PSOREJU1",44,0)
 ;
"RTN","PSOREJU1",45,0)
 Q ACTION
"RTN","PSOREJU1",46,0)
 ;
"RTN","PSOREJU1",47,0)
SIG() ; - Get electronic signature
"RTN","PSOREJU1",48,0)
 N CODE,X,X1,Y
"RTN","PSOREJU1",49,0)
 S CODE=$P($G(^VA(200,DUZ,20)),U,4),Y=0 I '$L(CODE) D  Q Y
"RTN","PSOREJU1",50,0)
 . W $C(7),!,"You do not have an electronic signature code."
"RTN","PSOREJU1",51,0)
 . W !,"Please contact your IRM office." H 2
"RTN","PSOREJU1",52,0)
 D SIG^XUSESIG S Y=(X1'="")
"RTN","PSOREJU1",53,0)
 Q Y
"RTN","PSOREJU1",54,0)
 ;
"RTN","PSOREJU1",55,0)
COM() ; - Ask for CLOSE comments
"RTN","PSOREJU1",56,0)
 K COM,DIR,DIRUT,X
"RTN","PSOREJU1",57,0)
 W ! S DIR(0)="F^3:100" S DIR("A")="Comments" D ^DIR
"RTN","PSOREJU1",58,0)
 S COM=X I $D(DIRUT) S COM="^"
"RTN","PSOREJU1",59,0)
 Q COM
"RTN","PSOREJU1",60,0)
 ;
"RTN","PSOREJU1",61,0)
OVR() ; - Ask for OVERRIDE codes
"RTN","PSOREJU1",62,0)
 N COD1,COD2,COD3,DIR,DIRUT W !
"RTN","PSOREJU1",63,0)
 S COD1=$$OVRCOD(1,$$GET1^DIQ(52.25,REJ_","_RX,14)) I COD1="^" Q "^"
"RTN","PSOREJU1",64,0)
 S COD2=$$OVRCOD(2) I COD2="^" Q "^"
"RTN","PSOREJU1",65,0)
 S COD3=$$OVRCOD(3) I COD3="^" Q "^"
"RTN","PSOREJU1",66,0)
 ;
"RTN","PSOREJU1",67,0)
 D OVRDSP^PSOREJU1(COD1_"^"_COD2_"^"_COD3) W !
"RTN","PSOREJU1",68,0)
 ;
"RTN","PSOREJU1",69,0)
 S DIR(0)="Y",DIR("A")="     Confirm? ",DIR("B")="YES"
"RTN","PSOREJU1",70,0)
 D ^DIR I $G(Y)=0!$D(DIRUT) Q "^"
"RTN","PSOREJU1",71,0)
 ;
"RTN","PSOREJU1",72,0)
 Q (COD2_"^"_COD1_"^"_COD3)
"RTN","PSOREJU1",73,0)
 ;
"RTN","PSOREJU1",74,0)
OVRDSP(LST) ; - Display the Override Codes
"RTN","PSOREJU1",75,0)
 N I W !
"RTN","PSOREJU1",76,0)
 F I=1:1:3 D
"RTN","PSOREJU1",77,0)
 . W !?5,$S(I=1:"Reason for Service Code  : ",I=2:"Professional Service Code: ",1:"Result of Service Code   : ")
"RTN","PSOREJU1",78,0)
 . W $E($$OVRX(I,$P(LST,"^",I)),1,48)
"RTN","PSOREJU1",79,0)
 Q
"RTN","PSOREJU1",80,0)
 ;
"RTN","PSOREJU1",81,0)
DISPLAY(RX,REJ,KEY) ; - Displays REJECT information
"RTN","PSOREJU1",82,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJU1",83,0)
 ;         (r) REJ - REJECT ID (IEN)
"RTN","PSOREJU1",84,0)
 ;         (o) KEY - Display "Press any KEY to continue..." (1-YES/0-NO) (Default: 0)
"RTN","PSOREJU1",85,0)
 ;         
"RTN","PSOREJU1",86,0)
 I '$G(RX)!'$G(REJ) Q
"RTN","PSOREJU1",87,0)
 I '$D(^PSRX(RX,"REJ",REJ)) Q
"RTN","PSOREJU1",88,0)
 ;
"RTN","PSOREJU1",89,0)
 N DATA,RFL,LINE,%
"RTN","PSOREJU1",90,0)
 S RFL=+$$GET1^DIQ(52.25,REJ_","_RX,5)
"RTN","PSOREJU1",91,0)
 D GET^PSOREJU2(RX,RFL,.DATA,REJ) I '$D(DATA(REJ)) Q
"RTN","PSOREJU1",92,0)
 ;
"RTN","PSOREJU1",93,0)
 W !!?16,"*** REJECT RECEIVED FROM THIRD PARTY PAYER ***"
"RTN","PSOREJU1",94,0)
 S $P(LINE,"-",74)="" W !?3,LINE
"RTN","PSOREJU1",95,0)
 W !?3,$$DVINFO^PSOREJU2(RX,RFL)
"RTN","PSOREJU1",96,0)
 W !?3,$$PTINFO^PSOREJU2(RX)
"RTN","PSOREJU1",97,0)
 W !?3,"Prescription : ",$$GET1^DIQ(52,RX,.01),"/",RFL," - ",$E($$GET1^DIQ(52,RX,6),1,20),?54,"ECME#: ",$E(RX+10000000,2,8)
"RTN","PSOREJU1",98,0)
 W !?3,"Reject Type  : ",DATA(REJ,"CODE")," - ",$S(DATA(REJ,"CODE")=79:"REFILL TOO SOON",1:"DUR REJECT")
"RTN","PSOREJU1",99,0)
 W " received on "_$$FMTE^XLFDT($G(DATA(REJ,"DATE/TIME")))
"RTN","PSOREJU1",100,0)
 I $G(DATA(REJ,"PAYER MESSAGE"))'="" W !?3,"Payer Message: " D PRT^PSOREJU2("PAYER MESSAGE",18,58)
"RTN","PSOREJU1",101,0)
 I $G(DATA(REJ,"REASON"))'="" W !?3,"Reason       : " D PRT^PSOREJU2("REASON",18,58)
"RTN","PSOREJU1",102,0)
 I $G(DATA(REJ,"DUR TEXT"))'="" W !?3,"DUR Text     : ",DATA(REJ,"DUR TEXT")
"RTN","PSOREJU1",103,0)
 W !?3,"Insurance    : ",DATA(REJ,"INSURANCE NAME"),?50,"Contact: ",DATA(REJ,"PLAN CONTACT")
"RTN","PSOREJU1",104,0)
 W !?3,"Group Name   : ",DATA(REJ,"GROUP NAME"),?45,"Group Number: ",DATA(REJ,"GROUP NUMBER")
"RTN","PSOREJU1",105,0)
 I $G(DATA(REJ,"CARDHOLDER ID"))'="" W !?3,"Cardholder ID: ",DATA(REJ,"CARDHOLDER ID")
"RTN","PSOREJU1",106,0)
 I DATA(REJ,"PLAN PREVIOUS FILL DATE")'="" D
"RTN","PSOREJU1",107,0)
 . W !?3,"Last Fill Dt.: ",DATA(REJ,"PLAN PREVIOUS FILL DATE")
"RTN","PSOREJU1",108,0)
 . W:DATA(REJ,"PLAN PREVIOUS FILL DATE")'="" "   (from payer)"
"RTN","PSOREJU1",109,0)
 W !?3,LINE,$C(7) I $G(KEY) W !?3,"Press <RETURN> to continue..." R %:DTIME W !
"RTN","PSOREJU1",110,0)
 Q
"RTN","PSOREJU1",111,0)
 ;
"RTN","PSOREJU1",112,0)
HDLG(RX,RFL,CODES,FROM,OPTS,DEF) ; - REJECT Handling
"RTN","PSOREJU1",113,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOREJU1",114,0)
 ;       (o) RFL  - Refill # (Default: most recent)
"RTN","PSOREJU1",115,0)
 ;       (r) CODES - List of REJECT CODES to be handled separated by commas (e.g. "79,88")
"RTN","PSOREJU1",116,0)
 ;       (r) FROM  - Same values as BWHERE param. in the EN^BPSNCPDP api
"RTN","PSOREJU1",117,0)
 ;       (r) OPTS  - Available options ("SIO" for STOP/IGNORE/OVERRIDE)
"RTN","PSOREJU1",118,0)
 ;       (o) DEF   - Default Option ("O", "I" or "Q")
"RTN","PSOREJU1",119,0)
 ;Output: ACTION   - "O"-Override, "I"-Ignore,"Q"-Quit,"^"-Up-arrow entered
"RTN","PSOREJU1",120,0)
 ;       
"RTN","PSOREJU1",121,0)
 N REJDATA,NEWDATA,CODE,ACTION,REJ,RSP,REJCDI S CODE=""
"RTN","PSOREJU1",122,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJU1",123,0)
 F REJCDI=1:1 S CODE=$P(CODES,",",REJCDI) Q:CODE=""  D  I ACTION="Q"!(ACTION="^") Q
"RTN","PSOREJU1",124,0)
 . S ACTION=""
"RTN","PSOREJU1",125,0)
 . I $$FIND^PSOREJUT(RX,RFL,.REJDATA,CODE) D
"RTN","PSOREJU1",126,0)
 . . S REJ=$O(REJDATA(""))
"RTN","PSOREJU1",127,0)
 . . S ACTION=$$ACTION(RX,REJ,$S(CODE=79:$TR(OPTS,"O"),1:OPTS),$G(DEF)) I ACTION="Q"!(ACTION="^") Q
"RTN","PSOREJU1",128,0)
 . . I $P(ACTION,"^")="I" D CLOSE^PSOREJUT(RX,RFL,REJ,DUZ,6,$P(ACTION,"^",2)) Q
"RTN","PSOREJU1",129,0)
 . . I $P(ACTION,"^")="O" D CLOSE^PSOREJUT(RX,RFL,REJ,DUZ,1,,$P(ACTION,"^",3),$P(ACTION,"^",2),$P(ACTION,"^",4))
"RTN","PSOREJU1",130,0)
 . . D ECMESND^PSOBPSU1(RX,RFL,,FROM,$$GETNDC^PSONDCUT(RX,RFL),,,$P(ACTION,"^",2,4),,.RESP)
"RTN","PSOREJU1",131,0)
 . . I $G(RESP) D  Q
"RTN","PSOREJU1",132,0)
 . . . W !!?10,"Claim could not be submitted. Please try again later!"
"RTN","PSOREJU1",133,0)
 . . . W !,?10,"Reason: ",$S($P(RESP,"^",2)="":"UNKNOWN",1:$P(RESP,"^",2)),$C(7)
"RTN","PSOREJU1",134,0)
 . . K NEWDATA I $$FIND^PSOREJUT(RX,RFL,.NEWDATA,CODE) D  I ACTION="Q"!(ACTION="^") Q
"RTN","PSOREJU1",135,0)
 . . . S ACTION=$$ACTION(RX,$O(NEWDATA("")),OPTS,$G(DEF)) I ACTION="Q"!(ACTION="^") Q
"RTN","PSOREJU1",136,0)
 . . . I $P(ACTION,"^")="I" D CLOSE^PSOREJUT(RX,RFL,REJ,DUZ,6,$P(ACTION,"^",2))
"RTN","PSOREJU1",137,0)
 . . . I $P(ACTION,"^")="O" D CLOSE^PSOREJUT(RX,RFL,REJ,DUZ,1,,$P(ACTION,"^",3),$P(ACTION,"^",2),$P(ACTION,"^",4))
"RTN","PSOREJU1",138,0)
 Q ACTION
"RTN","PSOREJU1",139,0)
 ;
"RTN","PSOREJU1",140,0)
OVRX(TYPE,CODE) ; - Returns the extentend code/description of the NCPDP DUR override codes
"RTN","PSOREJU1",141,0)
 ; Input: (r) TYPE  - 1 (REASON FOR SERVICE), 2 (PROFESSIONAL SERVICE) or 3 (RESULT OF SERVICE)
"RTN","PSOREJU1",142,0)
 ;        (r) CODE  - Table IEN
"RTN","PSOREJU1",143,0)
 ; Output: "CODE - DESCRIPTION"
"RTN","PSOREJU1",144,0)
 N FILE,DIC,X,Y
"RTN","PSOREJU1",145,0)
 S FILE=9002313+$S(TYPE=1:.23,TYPE=2:.21,1:.22)
"RTN","PSOREJU1",146,0)
 S DIC=FILE,X=CODE D ^DIC
"RTN","PSOREJU1",147,0)
 I TYPE=1 Q CODE_" - "_$$GET1^DIQ(9002313.23,+Y,1)
"RTN","PSOREJU1",148,0)
 I TYPE=2 Q CODE_" - "_$$GET1^DIQ(9002313.21,+Y,1)
"RTN","PSOREJU1",149,0)
 I TYPE=3 Q CODE_" - "_$$GET1^DIQ(9002313.22,+Y,1)
"RTN","PSOREJU1",150,0)
 Q ""
"RTN","PSOREJU1",151,0)
 ;
"RTN","PSOREJU1",152,0)
 ;
"RTN","PSOREJU1",153,0)
OVRCOD(TYPE,VALUE) ; - Prompt for NCPDP Override Codes
"RTN","PSOREJU1",154,0)
 N DIC,X,Y,FILE,PRPT
"RTN","PSOREJU1",155,0)
 ; 
"RTN","PSOREJU1",156,0)
 I TYPE=1 S FILE=9002313.23,PRPT="Reason for Service Code  : "
"RTN","PSOREJU1",157,0)
 I TYPE=2 S FILE=9002313.21,PRPT="Professional Service Code: "
"RTN","PSOREJU1",158,0)
 I TYPE=3 S FILE=9002313.22,PRPT="Result of Service Code   : "
"RTN","PSOREJU1",159,0)
 S DIC=FILE,DIC(0)="Z"
"RTN","PSOREJU1",160,0)
 I $G(VALUE)'="" S X=VALUE D ^DIC I Y>0 W !,PRPT,VALUE,"       ",$P(Y(0),"^",2) Q VALUE
"RTN","PSOREJU1",161,0)
 S DIC=FILE,DIC(0)="AQE",DIC("A")=PRPT
"RTN","PSOREJU1",162,0)
 D ^DIC I $D(DTOUT)!$D(DUOUT)!(Y<0) Q "^"
"RTN","PSOREJU1",163,0)
 Q $P(Y,"^",2)
"RTN","PSOREJU1",164,0)
 ;
"RTN","PSOREJU1",165,0)
SEL(FIELD,FILE,ARRAY) ; - Provides field selection (one, multiple or ALL)
"RTN","PSOREJU1",166,0)
 N DIC,DTOUT,DUOUT,QT,Y,X
"RTN","PSOREJU1",167,0)
 W !!,"You may select a single or multiple "_FIELD_"S,"
"RTN","PSOREJU1",168,0)
 W !,"or enter ^ALL to select all "_FIELD_"S.",!
"RTN","PSOREJU1",169,0)
 K ARRAY S DIC=FILE,DIC(0)="QEZAM",DIC("A")=FIELD_": "
"RTN","PSOREJU1",170,0)
 F  D ^DIC Q:X=""  D  Q:$G(QT)
"RTN","PSOREJU1",171,0)
 . I X="^ALL" K ARRAY S ARRAY="ALL",QT=1 Q
"RTN","PSOREJU1",172,0)
 . I $D(DTOUT)!$D(DUOUT) K ARRAY S ARRAY="^",QT=1 Q
"RTN","PSOREJU1",173,0)
 . W "   ",$P(Y,"^",2),$S($D(ARRAY(+Y)):"       (already selected)",1:"")
"RTN","PSOREJU1",174,0)
 . W ! S ARRAY(+Y)="",DIC("A")="ANOTHER ONE: "
"RTN","PSOREJU1",175,0)
 I '$D(ARRAY) S ARRAY="^"
"RTN","PSOREJU1",176,0)
 Q
"RTN","PSOREJU1",177,0)
 ;
"RTN","PSOREJU1",178,0)
LMREJ(RX,RFL,MSG,BCK) ; Used by ListManager hidden actions to detect unresolved 3rd Party Rejects
"RTN","PSOREJU1",179,0)
 ;Input:  (r) RX   - Rx IEN (#52)
"RTN","PSOREJU1",180,0)
 ;        (o) RFL  - Refill # (Default: most recent)
"RTN","PSOREJU1",181,0)
 ;Output: (o) MSG  - Usually this will be used to set VALMSG variable, which shoud be passed in by ref.
"RTN","PSOREJU1",182,0)
 ;        (o) BCK  - This will be used to set VALMBCK variable, which shoud be passed in by ref.
"RTN","PSOREJU1",183,0)
 ;
"RTN","PSOREJU1",184,0)
 I '$D(^PSRX(+RX)) Q 0
"RTN","PSOREJU1",185,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJU1",186,0)
 I $$FIND^PSOREJUT(RX,RFL) D  Q 1
"RTN","PSOREJU1",187,0)
 . S MSG="NOT ALLOWED! Rx has OPEN 3rd Party Payer Reject.",BCK="R" W $C(7),$C(7)
"RTN","PSOREJU1",188,0)
 Q 0
"RTN","PSOREJU1",189,0)
 ;
"RTN","PSOREJU1",190,0)
DUP(RX,RSP) ; Checks if REJECT has already been logged in the PRESCRIPTION file
"RTN","PSOREJU1",191,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJU1",192,0)
 ;         (o) RSP - Response IEN
"RTN","PSOREJU1",193,0)
 ; Output:     DUP - 1: Already logged (duplicate) 
"RTN","PSOREJU1",194,0)
 ;                   0: Not yet logged on PRESCRIPTION file
"RTN","PSOREJU1",195,0)
 N DUP,IDX S (DUP,IDX)=0
"RTN","PSOREJU1",196,0)
 F  S IDX=$O(^PSRX(RX,"REJ",IDX)) Q:'IDX  D  Q:DUP
"RTN","PSOREJU1",197,0)
 . I +RSP=+$$GET1^DIQ(52.25,IDX_","_RX,16,"I") S DUP=1
"RTN","PSOREJU1",198,0)
 Q DUP
"RTN","PSOREJU1",199,0)
 ;
"RTN","PSOREJU1",200,0)
OTH(CODE,LST) ; Removes the current Reject code from the list
"RTN","PSOREJU1",201,0)
 ; Input:  (r) CODE  - Current Reject Code (79 or 88)
"RTN","PSOREJU1",202,0)
 ;         (o) LST   - List of all Reject codes with response (comma separated)
"RTN","PSOREJU1",203,0)
 ; Output:     OTH   - List of OTHER Reject codes (w/out 79 or 88)
"RTN","PSOREJU1",204,0)
 ;
"RTN","PSOREJU1",205,0)
 N I,OTH
"RTN","PSOREJU1",206,0)
 F I=1:1:$L(LST,",") D
"RTN","PSOREJU1",207,0)
 . I $P(LST,",",I),$P(LST,",",I)'=CODE S OTH=$G(OTH)_","_$P(LST,",",I)
"RTN","PSOREJU1",208,0)
 S $E(OTH)=""
"RTN","PSOREJU1",209,0)
 Q OTH
"RTN","PSOREJU1",210,0)
 ;
"RTN","PSOREJU1",211,0)
DAT(DAT) ; - External Date
"RTN","PSOREJU1",212,0)
 S X=$$HL7TFM^XLFDT(DAT) I X<0 Q ""
"RTN","PSOREJU1",213,0)
 Q X
"RTN","PSOREJU1",214,0)
 ;
"RTN","PSOREJU1",215,0)
CLEAN(STR) ; Remove blanks from the end of a string and replaces ";" with ","
"RTN","PSOREJU1",216,0)
 N LEN F LEN=$L(STR):-1:1 Q:$E(STR,LEN)'=" "
"RTN","PSOREJU1",217,0)
 S STR=$TR(STR,";",",")
"RTN","PSOREJU1",218,0)
 Q $E(STR,1,LEN)
"RTN","PSOREJUT")
0^1^B27390673
"RTN","PSOREJUT",1,0)
PSOREJUT ;BIRM/MFR - BPS (ECME) - Clinical Rejects Utilites ; 07 Jun 2005  9:39 PM
"RTN","PSOREJUT",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247**;DEC 1997;Build 18
"RTN","PSOREJUT",3,0)
 ;Reference to DUR1^BPSNCPD3 supported by DBIA 4560
"RTN","PSOREJUT",4,0)
 ;Reference to $$ADDCOMM^BPSBUTL supported by IA 4719
"RTN","PSOREJUT",5,0)
 ;
"RTN","PSOREJUT",6,0)
SAVE(RX,RFL,REJ) ; - Saves DUR Information int he PRESRIPTION file
"RTN","PSOREJUT",7,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJUT",8,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOREJUT",9,0)
 ;         (r) REJ - Array containg information about the REJECT on the following
"RTN","PSOREJUT",10,0)
 ;                   subscripts:
"RTN","PSOREJUT",11,0)
 ;                   "CODE"   - Reject Code (79 or 88)
"RTN","PSOREJUT",12,0)
 ;                   "DATE/TIME"   - Date/Time Reject Detected
"RTN","PSOREJUT",13,0)
 ;                   "PAYER MESSAGE" - Message returned by Payer (up to 140 chars long)
"RTN","PSOREJUT",14,0)
 ;                   "REASON" - Reject Reason (up to 100 chars long)
"RTN","PSOREJUT",15,0)
 ;                   "DUR TEXT" - Payer's DUR descripiton
"RTN","PSOREJUT",16,0)
 ;                   "INSURANCE NAME" - Patient's Insurance Company Name
"RTN","PSOREJUT",17,0)
 ;                   "GROUP NAME" - Patient's Insurance Group Name
"RTN","PSOREJUT",18,0)
 ;                   "GROUP NUMBER" - Patient's Insurance Group Number
"RTN","PSOREJUT",19,0)
 ;                   "CARDHOLDER ID" - Patient's Insurance Cardholder ID
"RTN","PSOREJUT",20,0)
 ;                   "PLAN CONTACT" - Patient's Insurance Plan Contact (1-800)
"RTN","PSOREJUT",21,0)
 ;                   "PREVIOUS FILL" - Plan's Previous Fill Date
"RTN","PSOREJUT",22,0)
 ;                   "OTHER REJECTS" - Other Rejects with same Response
"RTN","PSOREJUT",23,0)
 ;                   "PHARMACIST" - Pharmacist DUZ
"RTN","PSOREJUT",24,0)
 ;                   "RESPONSE IEN" - Pointer to the RESPONSE file in ECME
"RTN","PSOREJUT",25,0)
 ;                   "REASON SVC CODE" - Reason for Service Code (pointer to BPS NCPDP REASON FOR SERVICE CODE)
"RTN","PSOREJUT",26,0)
 ;                   "RE-OPENED" - Re-Open Flag
"RTN","PSOREJUT",27,0)
 ;
"RTN","PSOREJUT",28,0)
 N %,DIC,DR,DA,X,DINUM,DD,DO,DLAYGO
"RTN","PSOREJUT",29,0)
 ;
"RTN","PSOREJUT",30,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJUT",31,0)
 ;
"RTN","PSOREJUT",32,0)
 ; - If Reject Code different than 79 or 88, Quit
"RTN","PSOREJUT",33,0)
 S REJ("CODE")=+$G(REJ("CODE")) I REJ("CODE")'=79,REJ("CODE")'=88 Q
"RTN","PSOREJUT",34,0)
 ;
"RTN","PSOREJUT",35,0)
 S REJ("PAYER MESSAGE")=$E($G(REJ("PAYER MESSAGE")),1,140),REJ("REASON")=$E($G(REJ("REASON")),1,100)
"RTN","PSOREJUT",36,0)
 S REJ("DUR TEXT")=$E($G(REJ("DUR TEXT")),1,100),REJ("GROUP NAME")=$E($G(REJ("GROUP NAME")),1,30)
"RTN","PSOREJUT",37,0)
 S REJ("INSURANCE NAME")=$E($G(REJ("INSURANCE NAME")),1,30),REJ("PLAN CONTACT")=$E($G(REJ("PLAN CONTACT")),1,30)
"RTN","PSOREJUT",38,0)
 S REJ("GROUP NUMBER")=$E($G(REJ("GROUP NUMBER")),1,30),REJ("OTHER REJECTS")=$E($G(REJ("OTHER REJECTS")),1,15)
"RTN","PSOREJUT",39,0)
 S REJ("CARDHOLDER ID")=$E($G(REJ("CARDHOLDER ID")),1,20)
"RTN","PSOREJUT",40,0)
 I $G(REJ("DATE/TIME"))="" D NOW^%DTC S REJ("DATE/TIME")=%
"RTN","PSOREJUT",41,0)
 ;
"RTN","PSOREJUT",42,0)
 S DIC="^PSRX("_RX_",""REJ"",",DA(1)=RX,DIC(0)=""
"RTN","PSOREJUT",43,0)
 S X=+$G(REJ("CODE")),DINUM=$O(^PSRX(RX,"REJ",9999),-1)+1
"RTN","PSOREJUT",44,0)
 S DIC("DR")="1///"_$G(REJ("DATE/TIME"))_";2///"_REJ("PAYER MESSAGE")_";3///"_REJ("REASON")_";4////"_$G(REJ("PHARMACIST"))_";5///"_RFL
"RTN","PSOREJUT",45,0)
 S DIC("DR")=DIC("DR")_";6///"_REJ("GROUP NAME")_";7///"_REJ("PLAN CONTACT")_";8///"_$G(REJ("PREVIOUS FILL"))
"RTN","PSOREJUT",46,0)
 S DIC("DR")=DIC("DR")_";9///0;14///"_$G(REJ("REASON SVC CODE"))_";16///"_$G(REJ("RESPONSE IEN"))
"RTN","PSOREJUT",47,0)
 S DIC("DR")=DIC("DR")_";17///"_$G(REJ("OTHER REJECTS"))_";18///"_REJ("DUR TEXT")_";20///"_REJ("INSURANCE NAME")
"RTN","PSOREJUT",48,0)
 S DIC("DR")=DIC("DR")_";21///"_REJ("GROUP NUMBER")_";22///"_REJ("CARDHOLDER ID")_";23///"_$G(REJ("RE-OPENED"))
"RTN","PSOREJUT",49,0)
 K DD,DO D FILE^DICN K DD,DO
"RTN","PSOREJUT",50,0)
 Q
"RTN","PSOREJUT",51,0)
 ;
"RTN","PSOREJUT",52,0)
CLOSE(RX,RFL,REJ,USR,REA,COM,COD1,COD2,COD3) ; - Mark a DUR/REFILL TOO SOON reject RESOLVED
"RTN","PSOREJUT",53,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJUT",54,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOREJUT",55,0)
 ;         (r) REJ - REJECT ID (IEN)
"RTN","PSOREJUT",56,0)
 ;         (o) USR - User (file #200 IEN) responsible for closing the REJECT
"RTN","PSOREJUT",57,0)
 ;         (r) REA - Reason for closing the REJECT:
"RTN","PSOREJUT",58,0)
 ;                       1:CLAIM RE-SUBMITTED
"RTN","PSOREJUT",59,0)
 ;                       2:RX ON HOLD
"RTN","PSOREJUT",60,0)
 ;                       3:RX SUSPENDED
"RTN","PSOREJUT",61,0)
 ;                       4:RX RETURNED TO STOCK
"RTN","PSOREJUT",62,0)
 ;                       5:RX DELETED
"RTN","PSOREJUT",63,0)
 ;                       6:OVERRIDEN W/OUT RE-SUBMISSION
"RTN","PSOREJUT",64,0)
 ;                      99:OTHER
"RTN","PSOREJUT",65,0)
 ;         (o) COM - Close comments manually entered by the user
"RTN","PSOREJUT",66,0)
 ;         (o) COD1 - NCPDP Reason for Service Code for overriding DUR REJECTS
"RTN","PSOREJUT",67,0)
 ;         (o) COD2 - NCPDP Professional Service Code for overriding DUR REJECTS
"RTN","PSOREJUT",68,0)
 ;         (o) COD3 - NCPDP Result of Service Code for overriding DUR REJECTS
"RTN","PSOREJUT",69,0)
 ;
"RTN","PSOREJUT",70,0)
 I '$G(RX)!'$G(REJ) Q
"RTN","PSOREJUT",71,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJUT",72,0)
 I '$D(^PSRX(RX,"REJ",REJ)) Q
"RTN","PSOREJUT",73,0)
 I $$GET1^DIQ(52.25,REJ_","_RX,5)'=+$G(RFL) Q
"RTN","PSOREJUT",74,0)
 S:'$G(REA) REA=99 S COM=$TR($G(COM),";^",",,")
"RTN","PSOREJUT",75,0)
 ;
"RTN","PSOREJUT",76,0)
 N DQ,DA,DIE,DR,X,Y
"RTN","PSOREJUT",77,0)
 D NOW^%DTC
"RTN","PSOREJUT",78,0)
 S DA(1)=RX,DA=REJ,DIE="^PSRX("_RX_",""REJ"","
"RTN","PSOREJUT",79,0)
 S DR="9///1;10///"_%_";11////"_$G(USR)_";12///"_REA_";13///"
"RTN","PSOREJUT",80,0)
 S DR=DR_COM_";14///"_$G(COD1)_";15///"_$G(COD2)_";19///"_$G(COD3)
"RTN","PSOREJUT",81,0)
 D ^DIE S X=$$ADDCOMM^BPSBUTL(RX,RFL,COM)
"RTN","PSOREJUT",82,0)
 Q
"RTN","PSOREJUT",83,0)
 ;
"RTN","PSOREJUT",84,0)
FIND(RX,RFL,REJDATA,CODE) ; - Returns whether a prescription/fill contains UNRESOLVED rejects
"RTN","PSOREJUT",85,0)
 ; Input:  (r) RX   - Rx IEN (#52) 
"RTN","PSOREJUT",86,0)
 ;         (o) RFL  - Refill # (If not passed, look original and all refills)
"RTN","PSOREJUT",87,0)
 ;         (o) CODE - Specific Reject Code to be checked
"RTN","PSOREJUT",88,0)
 ;         
"RTN","PSOREJUT",89,0)
 ; Output: 1 - Rx contains unresoveld Rejects 
"RTN","PSOREJUT",90,0)
 ;         0 - Rx does not contain unresolved Rejects
"RTN","PSOREJUT",91,0)
 ;         .REJDATA - Array containg the Reject(s) data (see 
"RTN","PSOREJUT",92,0)
 ;                    GET^PSOREJU2 for fields documentation)
"RTN","PSOREJUT",93,0)
 ;
"RTN","PSOREJUT",94,0)
 I $G(RFL),$$STATUS^PSOBPSUT(RX,RFL)="" Q 0
"RTN","PSOREJUT",95,0)
 ;
"RTN","PSOREJUT",96,0)
 K REJDATA
"RTN","PSOREJUT",97,0)
 I $G(RFL) D
"RTN","PSOREJUT",98,0)
 . D GET^PSOREJU2(RX,RFL,.REJDATA,,,$G(CODE))
"RTN","PSOREJUT",99,0)
 E  S RFL=0 D  I '$D(REJDATA) F  S RFL=$O(^PSRX(RX,1,RFL)) Q:'RFL  D  Q:$D(REJDATA)
"RTN","PSOREJUT",100,0)
 . D GET^PSOREJU2(RX,RFL,.REJDATA,,,$G(CODE))
"RTN","PSOREJUT",101,0)
 ;
"RTN","PSOREJUT",102,0)
 Q $S($D(REJDATA):1,1:0)
"RTN","PSOREJUT",103,0)
 ;
"RTN","PSOREJUT",104,0)
SYNC(RX,RFL,USR) ;
"RTN","PSOREJUT",105,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJUT",106,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOREJUT",107,0)
 ;         (o) USR - User using the system when this routine is called
"RTN","PSOREJUT",108,0)
 ;
"RTN","PSOREJUT",109,0)
 N REJ,REJS,I,IDX,CODE,DATA,TXT
"RTN","PSOREJUT",110,0)
 L +^PSRX("REJ",RX):0 Q:'$T
"RTN","PSOREJUT",111,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJUT",112,0)
 D DUR1^BPSNCPD3(RX,RFL,.REJ)
"RTN","PSOREJUT",113,0)
 K REJS S IDX=""
"RTN","PSOREJUT",114,0)
 F  S IDX=$O(REJ(IDX)) Q:IDX=""  D
"RTN","PSOREJUT",115,0)
 . S TXT=$G(REJ(IDX,"REJ CODE LST"))
"RTN","PSOREJUT",116,0)
 . F I=1:1:$L(TXT,",") D
"RTN","PSOREJUT",117,0)
 . . S CODE=+$P(TXT,",",I) I CODE'=79,CODE'=88 Q
"RTN","PSOREJUT",118,0)
 . . I $$DUP^PSOREJU1(RX,+$$CLEAN^PSOREJU1($G(REJ(IDX,"RESPONSE IEN")))) Q
"RTN","PSOREJUT",119,0)
 . . S REJS(IDX,CODE)=""
"RTN","PSOREJUT",120,0)
 I '$D(REJS) L -^PSRX("REJ",RX) Q
"RTN","PSOREJUT",121,0)
 ;
"RTN","PSOREJUT",122,0)
 S (IDX,CODE)=""
"RTN","PSOREJUT",123,0)
 F  S IDX=$O(REJS(IDX)) Q:IDX=""  D
"RTN","PSOREJUT",124,0)
 . F  S CODE=$O(REJS(IDX,CODE)) Q:CODE=""  D
"RTN","PSOREJUT",125,0)
 . . K DATA
"RTN","PSOREJUT",126,0)
 . . S DATA("DUR TEXT")=$$CLEAN^PSOREJU1($G(REJ(IDX,"DUR FREE TEXT DESC")))
"RTN","PSOREJUT",127,0)
 . . S DATA("PAYER MESSAGE")=$$CLEAN^PSOREJU1($G(REJ(IDX,"PAYER MESSAGE")))
"RTN","PSOREJUT",128,0)
 . . S DATA("CODE")=CODE
"RTN","PSOREJUT",129,0)
 . . S DATA("REASON")=$$CLEAN^PSOREJU1($G(REJ(IDX,"REASON")))
"RTN","PSOREJUT",130,0)
 . . S DATA("PHARMACIST")=$G(USR)
"RTN","PSOREJUT",131,0)
 . . S DATA("INSURANCE NAME")=$$CLEAN^PSOREJU1($G(REJ(IDX,"INSURANCE NAME")))
"RTN","PSOREJUT",132,0)
 . . S DATA("GROUP NAME")=$$CLEAN^PSOREJU1($G(REJ(IDX,"GROUP NAME")))
"RTN","PSOREJUT",133,0)
 . . S DATA("GROUP NUMBER")=$$CLEAN^PSOREJU1($G(REJ(IDX,"GROUP NUMBER")))
"RTN","PSOREJUT",134,0)
 . . S DATA("CARDHOLDER ID")=$$CLEAN^PSOREJU1($G(REJ(IDX,"CARDHOLDER ID")))
"RTN","PSOREJUT",135,0)
 . . S DATA("PLAN CONTACT")=$$CLEAN^PSOREJU1($G(REJ(IDX,"PLAN CONTACT")))
"RTN","PSOREJUT",136,0)
 . . S DATA("PREVIOUS FILL")=$$CLEAN^PSOREJU1($$DAT^PSOREJU1($G(REJ(IDX,"PREVIOUS FILL DATE"))))
"RTN","PSOREJUT",137,0)
 . . S DATA("OTHER REJECTS")=$$CLEAN^PSOREJU1($$OTH^PSOREJU1(CODE,$G(REJ(IDX,"REJ CODE LST"))))
"RTN","PSOREJUT",138,0)
 . . S DATA("RESPONSE IEN")=+$$CLEAN^PSOREJU1($G(REJ(IDX,"RESPONSE IEN")))
"RTN","PSOREJUT",139,0)
 . . S DATA("REASON SVC CODE")=$$REASON^PSOREJU2($G(REJ(IDX,"REASON")))
"RTN","PSOREJUT",140,0)
 . . D SAVE(RX,RFL,.DATA)
"RTN","PSOREJUT",141,0)
 L -^PSRX("REJ",RX)
"RTN","PSOREJUT",142,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
IB*2.0*342
"BLD",6752,0)
IB*2.0*342^INTEGRATED BILLING^0^3060912^y
"BLD",6752,1,0)
^^13^13^3060724^
"BLD",6752,1,1,0)
This patch supports the National Council for Prescription Drug Programs 
"BLD",6752,1,2,0)
(NCPDP) standard which was adopted under the Healthcare Insurance
"BLD",6752,1,3,0)
Portability and Accountability Act (HIPAA) for pharmacy claims. This patch
"BLD",6752,1,4,0)
is one of six to be released.  Three patches will be released in a KIDS
"BLD",6752,1,5,0)
multi-build distribution containing: BPS*1*3, PSO*7*247, and IB*2*342.  
"BLD",6752,1,6,0)
Three patches will be released individually and they are: PRCA*4.5*247,
"BLD",6752,1,7,0)
PSX*2*62, and PSS*1*115.
"BLD",6752,1,8,0)
 
"BLD",6752,1,9,0)
Enhancements included in the release of the six patches are a new option 
"BLD",6752,1,10,0)
that will enable the user to reopen a closed Electronic Claims Management
"BLD",6752,1,11,0)
Engine (ECME) claim; updates to the Rx Activity Log; and permanent storage
"BLD",6752,1,12,0)
of Claims activity information as reported by the ECME Billing Events
"BLD",6752,1,13,0)
Report.
"BLD",6752,4,0)
^9.64PA^366.14^1
"BLD",6752,4,366.14,0)
366.14
"BLD",6752,4,366.14,222)
y^n^f^^^^n
"BLD",6752,4,"B",366.14,366.14)

"BLD",6752,6.3)
18
"BLD",6752,"INIT")
EN^IB20P342
"BLD",6752,"KRN",0)
^9.67PA^8989.52^19
"BLD",6752,"KRN",.4,0)
.4
"BLD",6752,"KRN",.401,0)
.401
"BLD",6752,"KRN",.402,0)
.402
"BLD",6752,"KRN",.403,0)
.403
"BLD",6752,"KRN",.5,0)
.5
"BLD",6752,"KRN",.84,0)
.84
"BLD",6752,"KRN",3.6,0)
3.6
"BLD",6752,"KRN",3.8,0)
3.8
"BLD",6752,"KRN",9.2,0)
9.2
"BLD",6752,"KRN",9.8,0)
9.8
"BLD",6752,"KRN",9.8,"NM",0)
^9.68A^20^15
"BLD",6752,"KRN",9.8,"NM",5,0)
IBNCPEB^^0^25550057
"BLD",6752,"KRN",9.8,"NM",6,0)
IBNCPNB^^0^29299329
"BLD",6752,"KRN",9.8,"NM",7,0)
IBNCPEV^^0^84188155
"BLD",6752,"KRN",9.8,"NM",8,0)
IBNCPEV1^^0^20779583
"BLD",6752,"KRN",9.8,"NM",9,0)
IBNCPLOG^^0^49413338
"BLD",6752,"KRN",9.8,"NM",10,0)
IB20P342^^0^71562414
"BLD",6752,"KRN",9.8,"NM",11,0)
IBNCPUT1^^0^5230751
"BLD",6752,"KRN",9.8,"NM",13,0)
IBNCPDP3^^0^30685314
"BLD",6752,"KRN",9.8,"NM",14,0)
IBNCPDP4^^0^48050373
"BLD",6752,"KRN",9.8,"NM",15,0)
IBNCPDPE^^0^15029269
"BLD",6752,"KRN",9.8,"NM",16,0)
IBNCPDP2^^0^33216469
"BLD",6752,"KRN",9.8,"NM",17,0)
IBOCPDS^^0^59845655
"BLD",6752,"KRN",9.8,"NM",18,0)
IBEVNTP^^1^
"BLD",6752,"KRN",9.8,"NM",19,0)
IBNCPER^^1^
"BLD",6752,"KRN",9.8,"NM",20,0)
IBNCPER1^^1^
"BLD",6752,"KRN",9.8,"NM","B","IB20P342",10)

"BLD",6752,"KRN",9.8,"NM","B","IBEVNTP",18)

"BLD",6752,"KRN",9.8,"NM","B","IBNCPDP2",16)

"BLD",6752,"KRN",9.8,"NM","B","IBNCPDP3",13)

"BLD",6752,"KRN",9.8,"NM","B","IBNCPDP4",14)

"BLD",6752,"KRN",9.8,"NM","B","IBNCPDPE",15)

"BLD",6752,"KRN",9.8,"NM","B","IBNCPEB",5)

"BLD",6752,"KRN",9.8,"NM","B","IBNCPER",19)

"BLD",6752,"KRN",9.8,"NM","B","IBNCPER1",20)

"BLD",6752,"KRN",9.8,"NM","B","IBNCPEV",7)

"BLD",6752,"KRN",9.8,"NM","B","IBNCPEV1",8)

"BLD",6752,"KRN",9.8,"NM","B","IBNCPLOG",9)

"BLD",6752,"KRN",9.8,"NM","B","IBNCPNB",6)

"BLD",6752,"KRN",9.8,"NM","B","IBNCPUT1",11)

"BLD",6752,"KRN",9.8,"NM","B","IBOCPDS",17)

"BLD",6752,"KRN",19,0)
19
"BLD",6752,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",6752,"KRN",19,"NM",1,0)
IB ECME BILLING EVENTS^^0
"BLD",6752,"KRN",19,"NM","B","IB ECME BILLING EVENTS",1)

"BLD",6752,"KRN",19.1,0)
19.1
"BLD",6752,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",6752,"KRN",101,0)
101
"BLD",6752,"KRN",409.61,0)
409.61
"BLD",6752,"KRN",771,0)
771
"BLD",6752,"KRN",870,0)
870
"BLD",6752,"KRN",8989.51,0)
8989.51
"BLD",6752,"KRN",8989.52,0)
8989.52
"BLD",6752,"KRN",8994,0)
8994
"BLD",6752,"KRN","B",.4,.4)

"BLD",6752,"KRN","B",.401,.401)

"BLD",6752,"KRN","B",.402,.402)

"BLD",6752,"KRN","B",.403,.403)

"BLD",6752,"KRN","B",.5,.5)

"BLD",6752,"KRN","B",.84,.84)

"BLD",6752,"KRN","B",3.6,3.6)

"BLD",6752,"KRN","B",3.8,3.8)

"BLD",6752,"KRN","B",9.2,9.2)

"BLD",6752,"KRN","B",9.8,9.8)

"BLD",6752,"KRN","B",19,19)

"BLD",6752,"KRN","B",19.1,19.1)

"BLD",6752,"KRN","B",101,101)

"BLD",6752,"KRN","B",409.61,409.61)

"BLD",6752,"KRN","B",771,771)

"BLD",6752,"KRN","B",870,870)

"BLD",6752,"KRN","B",8989.51,8989.51)

"BLD",6752,"KRN","B",8989.52,8989.52)

"BLD",6752,"KRN","B",8994,8994)

"BLD",6752,"QUES",0)
^9.62^^
"BLD",6752,"REQB",0)
^9.611^1^1
"BLD",6752,"REQB",1,0)
IB*2.0*276^2
"BLD",6752,"REQB","B","IB*2.0*276",1)

"FIA",366.14)
IB NCPDP EVENT LOG
"FIA",366.14,0)
^IBCNR(366.14,
"FIA",366.14,0,0)
366.14D
"FIA",366.14,0,1)
y^n^f^^^^n
"FIA",366.14,0,10)

"FIA",366.14,0,11)

"FIA",366.14,0,"RLRO")

"FIA",366.14,0,"VR")
2.0^IB
"FIA",366.14,366.14)
0
"FIA",366.14,366.141)
0
"FIA",366.14,366.1412)
0
"INIT")
EN^IB20P342
"KRN",19,17314,-1)
0^1
"KRN",19,17314,0)
IB ECME BILLING EVENTS^ECME Billing Events Report^^R^^^^^^^^
"KRN",19,17314,1,0)
^^1^1^3040511^
"KRN",19,17314,1,1,0)
This option prints the ECME Billing Events Report.
"KRN",19,17314,25)
RPT^IBNCPEV
"KRN",19,17314,99.1)
59668,58218
"KRN",19,17314,"U")
ECME BILLING EVENTS REPORT
"MBREQ")
1
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",193,-1)
1^1
"PKG",193,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",193,20,0)
^9.402P^1^1
"PKG",193,20,1,0)
2^^IBAXDR
"PKG",193,20,1,1)

"PKG",193,20,"B",2,1)

"PKG",193,22,0)
^9.49I^1^1
"PKG",193,22,1,0)
2.0^2940321^2940528
"PKG",193,22,1,"PAH",1,0)
342^3060912^35203
"PKG",193,22,1,"PAH",1,1,0)
^^13^13^3060912
"PKG",193,22,1,"PAH",1,1,1,0)
This patch supports the National Council for Prescription Drug Programs 
"PKG",193,22,1,"PAH",1,1,2,0)
(NCPDP) standard which was adopted under the Healthcare Insurance
"PKG",193,22,1,"PAH",1,1,3,0)
Portability and Accountability Act (HIPAA) for pharmacy claims. This patch
"PKG",193,22,1,"PAH",1,1,4,0)
is one of six to be released.  Three patches will be released in a KIDS
"PKG",193,22,1,"PAH",1,1,5,0)
multi-build distribution containing: BPS*1*3, PSO*7*247, and IB*2*342.  
"PKG",193,22,1,"PAH",1,1,6,0)
Three patches will be released individually and they are: PRCA*4.5*247,
"PKG",193,22,1,"PAH",1,1,7,0)
PSX*2*62, and PSS*1*115.
"PKG",193,22,1,"PAH",1,1,8,0)
 
"PKG",193,22,1,"PAH",1,1,9,0)
Enhancements included in the release of the six patches are a new option 
"PKG",193,22,1,"PAH",1,1,10,0)
that will enable the user to reopen a closed Electronic Claims Management
"PKG",193,22,1,"PAH",1,1,11,0)
Engine (ECME) claim; updates to the Rx Activity Log; and permanent storage
"PKG",193,22,1,"PAH",1,1,12,0)
of Claims activity information as reported by the ECME Billing Events
"PKG",193,22,1,"PAH",1,1,13,0)
Report.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
15
"RTN","IB20P342")
0^10^B71562414
"RTN","IB20P342",1,0)
IB20P342 ;DALOI/SS - IB ECME EVNT REPORT ;01/03/2006
"RTN","IB20P342",2,0)
 ;;2.0;INTEGRATED BILLING;**342**;21-MAR-94;Build 18
"RTN","IB20P342",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IB20P342",4,0)
 ;; 
"RTN","IB20P342",5,0)
 Q
"RTN","IB20P342",6,0)
 ;
"RTN","IB20P342",7,0)
 ;move data from ^XTMP("IBNCPDP-..." to file #366.14
"RTN","IB20P342",8,0)
EN ;
"RTN","IB20P342",9,0)
 N IBDT,IBRECNO,IBDATE,IBIBDTYP,IBRET,IBTYPE,IBDTIEN,IBCALVAL
"RTN","IB20P342",10,0)
 N IBMSG1,IBMSG2
"RTN","IB20P342",11,0)
 I +$O(^IBCNR(366.14,0)) D  Q
"RTN","IB20P342",12,0)
 . D ERRMSG("Conversion of IB ECME EVNT REPORT data will not be done in this site")
"RTN","IB20P342",13,0)
 . D ERRMSG("since data have been already converted in the past.")
"RTN","IB20P342",14,0)
 . ;send e-mail about post-install completion
"RTN","IB20P342",15,0)
 . S IBMSG1="The conversion of data from the ^XTMP global array into the IB NCPDP"
"RTN","IB20P342",16,0)
 . S IBMSG2="EVENT LOG file has been skipped as the data has already been converted."
"RTN","IB20P342",17,0)
 . D SNDMAIL("IB*2.0*342 installation has been completed",IBMSG1,IBMSG2)
"RTN","IB20P342",18,0)
 S IBDT="IBNCPDP-"
"RTN","IB20P342",19,0)
 F  S IBDT=$O(^XTMP(IBDT)) Q:IBDT'["IBNCPDP-"  D
"RTN","IB20P342",20,0)
 . S IBRECNO=0
"RTN","IB20P342",21,0)
 . S IBDATE=+$P(IBDT,"-",2)
"RTN","IB20P342",22,0)
 . D BMES^XPDUTL("Add date: "_IBDATE)
"RTN","IB20P342",23,0)
 . S IBDTIEN=$$ADDDATE^IBNCPLOG(IBDATE)
"RTN","IB20P342",24,0)
 . I +IBDTIEN=0 D ERRMSG("Cannot create a DATE entry for "_IBDATE)
"RTN","IB20P342",25,0)
 . F  S IBRECNO=$O(^XTMP(IBDT,IBRECNO)) Q:+IBRECNO=0  D
"RTN","IB20P342",26,0)
 . . ;create node and .01 for events multiple
"RTN","IB20P342",27,0)
 . . I '$D(^XTMP(IBDT,IBRECNO,"CALL")) D ERRMSG(" there is no CALL node in ^XTMP") Q
"RTN","IB20P342",28,0)
 . . ;Add event (CALL) = ^XTMP(IBDT,IBRECNO,"CALL")
"RTN","IB20P342",29,0)
 . . S IBCALVAL=$G(^XTMP(IBDT,IBRECNO,"CALL"))
"RTN","IB20P342",30,0)
 . . I $$ADDEVENT(IBDATE,IBRECNO,IBCALVAL)<0 D ERRMSG(" EVENT entry wasn't created for "_IBCALVAL) Q
"RTN","IB20P342",31,0)
 . . ;quit if was not created
"RTN","IB20P342",32,0)
 . . S IBTYPE=""
"RTN","IB20P342",33,0)
 . . ;Loop through fields...
"RTN","IB20P342",34,0)
 . . F  S IBTYPE=$O(^XTMP(IBDT,IBRECNO,IBTYPE)) Q:IBTYPE=""  D
"RTN","IB20P342",35,0)
 . . . I IBTYPE="CALL" Q  ;was already created
"RTN","IB20P342",36,0)
 . . . ;fields general fields (other than IBD)
"RTN","IB20P342",37,0)
 . . . I IBTYPE="DEVICE" Q  ;we do not use DEVICE in new file
"RTN","IB20P342",38,0)
 . . . I IBTYPE'="IBD" S IBRET=$$GENFLDS(IBDT,IBRECNO,IBTYPE,IBDATE) D:+IBRET=0  Q
"RTN","IB20P342",39,0)
 . . . . D ERRMSG(" >"_IBTYPE_":"_$P(IBRET,U,2))
"RTN","IB20P342",40,0)
 . . . ;if IBD fields
"RTN","IB20P342",41,0)
 . . . S IBIBDTYP=""
"RTN","IB20P342",42,0)
 . . . F  S IBIBDTYP=$O(^XTMP(IBDT,IBRECNO,IBTYPE,IBIBDTYP)) Q:IBIBDTYP=""  D
"RTN","IB20P342",43,0)
 . . . . ; if Insurance 
"RTN","IB20P342",44,0)
 . . . . I IBIBDTYP="INS" S IBRET=$$INS(IBDT,IBRECNO,IBDATE) D:+IBRET=0  Q
"RTN","IB20P342",45,0)
 . . . . . D ERRMSG(" >>INSURANCE node was not populated")
"RTN","IB20P342",46,0)
 . . . . ; other IBD fields
"RTN","IB20P342",47,0)
 . . . . S IBRET=$$IBD(IBDT,IBRECNO,IBIBDTYP,IBDATE)
"RTN","IB20P342",48,0)
 . . . . D:+IBRET=0 ERRMSG(" >>IBD field "_IBIBDTYP_" was not populated")
"RTN","IB20P342",49,0)
 ;send e-mail about conversion completion
"RTN","IB20P342",50,0)
 S IBMSG1="The conversion of data from the ^XTMP global array into the IB NCPDP"
"RTN","IB20P342",51,0)
 S IBMSG2="EVENT LOG file has successfully completed."
"RTN","IB20P342",52,0)
 D SNDMAIL("IB*2.0*342 installation has been completed",IBMSG1,IBMSG2)
"RTN","IB20P342",53,0)
 Q
"RTN","IB20P342",54,0)
 ;process the fields common for all messages
"RTN","IB20P342",55,0)
GENFLDS(IBDT,IBRECNO,IBTYPE,IBDATE) ;
"RTN","IB20P342",56,0)
 N IBVAL,IBFLDNO,IBDTIEN,IBRETV
"RTN","IB20P342",57,0)
 S IBRETV=0
"RTN","IB20P342",58,0)
 S IBVAL=$G(^XTMP(IBDT,IBRECNO,IBTYPE))
"RTN","IB20P342",59,0)
 S IBDTIEN=+$O(^IBCNR(366.14,"B",IBDATE,0))
"RTN","IB20P342",60,0)
 Q:+IBDTIEN=0 0
"RTN","IB20P342",61,0)
 I IBTYPE="CALL" S IBFLDNO=".01" G EDITFLD
"RTN","IB20P342",62,0)
 I IBTYPE="DFN" S IBFLDNO=".03" G EDITFLD
"RTN","IB20P342",63,0)
 I IBTYPE="JOB" S IBFLDNO=".04" G EDITFLD
"RTN","IB20P342",64,0)
 I IBTYPE="TIME" S IBFLDNO=".05" G EDITFLD
"RTN","IB20P342",65,0)
 I IBTYPE="USER" S IBFLDNO=".06" G EDITFLD
"RTN","IB20P342",66,0)
 I IBTYPE="RESULT" D
"RTN","IB20P342",67,0)
 . S IBRETV=+$$FILLFLDS^IBNCPUT1(366.141,".07",IBRECNO_","_IBDTIEN,+IBVAL)
"RTN","IB20P342",68,0)
 . S IBRETV=+$$FILLFLDS^IBNCPUT1(366.141,".08",IBRECNO_","_IBDTIEN,$P(IBVAL,U,2))
"RTN","IB20P342",69,0)
 Q IBRETV
"RTN","IB20P342",70,0)
EDITFLD ;
"RTN","IB20P342",71,0)
 Q +$$FILLFLDS^IBNCPUT1(366.141,IBFLDNO,IBRECNO_","_IBDTIEN,IBVAL)
"RTN","IB20P342",72,0)
 ;---------
"RTN","IB20P342",73,0)
 ;store IBD array data
"RTN","IB20P342",74,0)
 ;input:
"RTN","IB20P342",75,0)
 ;IBDT -date node as it is in ^XTMP global, i.e. "IBNCPDP-3060214"
"RTN","IB20P342",76,0)
 ;IBRECNO -ien in [EVENTS] multiple
"RTN","IB20P342",77,0)
 ;IBIBDTYP -type subscript in IBD array (BILL, PAID, RESPONSE, etc)
"RTN","IB20P342",78,0)
 ;IBDATE -date 
"RTN","IB20P342",79,0)
 ;Output:
"RTN","IB20P342",80,0)
 ;0 -failure
"RTN","IB20P342",81,0)
 ;1^record number - success
"RTN","IB20P342",82,0)
 ;
"RTN","IB20P342",83,0)
IBD(IBDT,IBRECNO,IBIBDTYP,IBDATE) ;
"RTN","IB20P342",84,0)
 N IBVAL,IBFLDNO,IBDTIEN
"RTN","IB20P342",85,0)
 S IBVAL=$G(^XTMP(IBDT,IBRECNO,"IBD",IBIBDTYP))
"RTN","IB20P342",86,0)
 S IBDTIEN=$O(^IBCNR(366.14,"B",IBDATE,0))
"RTN","IB20P342",87,0)
 Q:+IBDTIEN=0 0
"RTN","IB20P342",88,0)
 I IBIBDTYP="AUTH #" S IBFLDNO=".11" G EDITIBD
"RTN","IB20P342",89,0)
 I IBIBDTYP="BCID" S IBFLDNO=".12" G EDITIBD
"RTN","IB20P342",90,0)
 I IBIBDTYP="CLAIMID" S IBFLDNO=".13" G EDITIBD
"RTN","IB20P342",91,0)
 I IBIBDTYP="DFN" S IBFLDNO=".14" G EDITIBD
"RTN","IB20P342",92,0)
 I IBIBDTYP="DIVISION" S IBFLDNO=".15" G EDITIBD
"RTN","IB20P342",93,0)
 I IBIBDTYP="RESPONSE" S IBFLDNO=".16" G EDITIBD
"RTN","IB20P342",94,0)
 I IBIBDTYP="REVERSAL REASON" S IBFLDNO=".17" G EDITIBD
"RTN","IB20P342",95,0)
 I IBIBDTYP="RTS-DEL" S IBFLDNO=".18" G EDITIBD
"RTN","IB20P342",96,0)
 I IBIBDTYP="STATUS" S IBFLDNO=".19" G EDITIBD
"RTN","IB20P342",97,0)
 I IBIBDTYP="RX NO" S IBFLDNO=".202" G EDITIBD
"RTN","IB20P342",98,0)
 I IBIBDTYP="FILL NUMBER" S IBFLDNO=".203" G EDITIBD
"RTN","IB20P342",99,0)
 I IBIBDTYP="DRUG" S IBFLDNO=".204" G EDITIBD
"RTN","IB20P342",100,0)
 I IBIBDTYP="NDC" S IBFLDNO=".205" G EDITIBD
"RTN","IB20P342",101,0)
 I IBIBDTYP="FILL DATE" S IBFLDNO=".206" G EDITIBD
"RTN","IB20P342",102,0)
 I IBIBDTYP="RELEASE DATE" S IBFLDNO=".207" G EDITIBD
"RTN","IB20P342",103,0)
 I IBIBDTYP="QTY" S IBFLDNO=".208" G EDITIBD
"RTN","IB20P342",104,0)
 I IBIBDTYP="DAYS SUPPLY" S IBFLDNO=".209" G EDITIBD
"RTN","IB20P342",105,0)
 I IBIBDTYP="DEA" S IBFLDNO=".21" G EDITIBD
"RTN","IB20P342",106,0)
 I IBIBDTYP="FILLED BY" S IBFLDNO=".211" G EDITIBD
"RTN","IB20P342",107,0)
 I IBIBDTYP="AO" S IBFLDNO=".401" G EDITIBD
"RTN","IB20P342",108,0)
 I IBIBDTYP="CV" S IBFLDNO=".402" G EDITIBD
"RTN","IB20P342",109,0)
 I IBIBDTYP="EC" S IBFLDNO=".403" G EDITIBD
"RTN","IB20P342",110,0)
 I IBIBDTYP="IR" S IBFLDNO=".404" G EDITIBD
"RTN","IB20P342",111,0)
 I IBIBDTYP="MST" S IBFLDNO=".405" G EDITIBD
"RTN","IB20P342",112,0)
 I IBIBDTYP="HNC" S IBFLDNO=".406" G EDITIBD
"RTN","IB20P342",113,0)
 I IBIBDTYP="SC" S IBFLDNO=".407" G EDITIBD
"RTN","IB20P342",114,0)
 I IBIBDTYP="BILL" S IBFLDNO=".301" G EDITIBD
"RTN","IB20P342",115,0)
 I IBIBDTYP="BILLED" S IBFLDNO=".302" G EDITIBD
"RTN","IB20P342",116,0)
 I IBIBDTYP="PLAN" S IBFLDNO=".303" G EDITIBD
"RTN","IB20P342",117,0)
 I IBIBDTYP="COST" S IBFLDNO=".304" G EDITIBD
"RTN","IB20P342",118,0)
 I IBIBDTYP="PAID" S IBFLDNO=".305" G EDITIBD
"RTN","IB20P342",119,0)
 I IBIBDTYP="CLOSE COMMENT" S IBFLDNO=".306" G EDITIBD
"RTN","IB20P342",120,0)
 I IBIBDTYP="CLOSE REASON" S IBFLDNO=".307" G EDITIBD
"RTN","IB20P342",121,0)
 I IBIBDTYP="DROP TO PAPER" S IBFLDNO=".308" G EDITIBD
"RTN","IB20P342",122,0)
 I IBIBDTYP="RELEASE COPAY" S IBFLDNO=".309" G EDITIBD
"RTN","IB20P342",123,0)
 I IBIBDTYP="USER" S IBFLDNO=".31" G EDITIBD
"RTN","IB20P342",124,0)
 I IBIBDTYP="PRESCRIPTION" S IBFLDNO=".201" G EDITIBD
"RTN","IB20P342",125,0)
 I IBIBDTYP="IEN" S IBFLDNO=".212" G EDITIBD
"RTN","IB20P342",126,0)
 Q 0
"RTN","IB20P342",127,0)
EDITIBD ;
"RTN","IB20P342",128,0)
 Q +$$FILLFLDS^IBNCPUT1(366.141,IBFLDNO,IBRECNO_","_IBDTIEN,IBVAL)
"RTN","IB20P342",129,0)
 ;------
"RTN","IB20P342",130,0)
 ;
"RTN","IB20P342",131,0)
 ; IBD("INS",n,1) = insurance array to bill in n order
"RTN","IB20P342",132,0)
 ;                  file 355.3 ien (group)^bin^pcn^payer sheet B1^group id^
"RTN","IB20P342",133,0)
 ;                  cardholder id^patient relationship code^
"RTN","IB20P342",134,0)
 ;                  cardholder first name^cardholder last name^
"RTN","IB20P342",135,0)
 ;                  home plan state^Payer Sheet B2^Payer Sheet B3^
"RTN","IB20P342",136,0)
 ;                  Software/Vendor Cert ID^Ins Name^
"RTN","IB20P342",137,0)
 ;                  (see RX^IBNCPDP1 for details)
"RTN","IB20P342",138,0)
 ;                  
"RTN","IB20P342",139,0)
 ;    ("INS",n,2) = dispensing fee^basis of cost determination^
"RTN","IB20P342",140,0)
 ;                  awp or tort rate or cost^gross amount due^
"RTN","IB20P342",141,0)
 ;                  administrative fee
"RTN","IB20P342",142,0)
 ;
"RTN","IB20P342",143,0)
 ;    ("INS",n,3) = group name^insurance phone number^plan ID ;
"RTN","IB20P342",144,0)
 ;
"RTN","IB20P342",145,0)
INS(IBDT,IBRECNO,IBDATE) ;
"RTN","IB20P342",146,0)
 N IBSET1,IBSET2,IBSET3,IBFLDNO,IBDTIEN,IBINSNO,RECNO,IBVAL
"RTN","IB20P342",147,0)
 S IBDTIEN=$O(^IBCNR(366.14,"B",IBDATE,0))
"RTN","IB20P342",148,0)
 Q:+IBDTIEN=0 0
"RTN","IB20P342",149,0)
 S IBINSNO=0
"RTN","IB20P342",150,0)
 F  S IBINSNO=$O(^XTMP(IBDT,IBRECNO,"IBD","INS",IBINSNO)) Q:+IBINSNO=0  D
"RTN","IB20P342",151,0)
 . S IBSET1=$G(^XTMP(IBDT,IBRECNO,"IBD","INS",IBINSNO,1))
"RTN","IB20P342",152,0)
 . S IBSET2=$G(^XTMP(IBDT,IBRECNO,"IBD","INS",IBINSNO,2))
"RTN","IB20P342",153,0)
 . S IBSET3=$G(^XTMP(IBDT,IBRECNO,"IBD","INS",IBINSNO,3))
"RTN","IB20P342",154,0)
 . ;INS  IBINSNO
"RTN","IB20P342",155,0)
 . ;  1  IBSET1
"RTN","IB20P342",156,0)
 . ;  2  IBSET2
"RTN","IB20P342",157,0)
 . ;  3  IBSET3
"RTN","IB20P342",158,0)
 . S RECNO=$$ADDINS^IBNCPLOG(IBDTIEN,IBRECNO)
"RTN","IB20P342",159,0)
 . I +RECNO=0 D ERRMSG(" >INSURANCE node was not created") Q
"RTN","IB20P342",160,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.02,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,1))
"RTN","IB20P342",161,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.03,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,2))
"RTN","IB20P342",162,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.04,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,3))
"RTN","IB20P342",163,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.05,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,4))
"RTN","IB20P342",164,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.06,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,5))
"RTN","IB20P342",165,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.07,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,6))
"RTN","IB20P342",166,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.08,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,7))
"RTN","IB20P342",167,0)
 . ;
"RTN","IB20P342",168,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.101,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,8))
"RTN","IB20P342",169,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.102,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,9))
"RTN","IB20P342",170,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.103,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,10))
"RTN","IB20P342",171,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.104,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,11))
"RTN","IB20P342",172,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.105,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,12))
"RTN","IB20P342",173,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.106,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,13))
"RTN","IB20P342",174,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.107,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,14))
"RTN","IB20P342",175,0)
 . ;
"RTN","IB20P342",176,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.201,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET2,U,1))
"RTN","IB20P342",177,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.202,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET2,U,2))
"RTN","IB20P342",178,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.203,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET2,U,3))
"RTN","IB20P342",179,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.204,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET2,U,4))
"RTN","IB20P342",180,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.205,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET2,U,5))
"RTN","IB20P342",181,0)
 . ;
"RTN","IB20P342",182,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.301,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET3,U,1))
"RTN","IB20P342",183,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.302,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET3,U,2))
"RTN","IB20P342",184,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.303,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET3,U,3))
"RTN","IB20P342",185,0)
 Q RECNO
"RTN","IB20P342",186,0)
 ;
"RTN","IB20P342",187,0)
 ;create EVENT entry in #366.14
"RTN","IB20P342",188,0)
 ;IBDATE date in FM format
"RTN","IB20P342",189,0)
 ;EVNTRECN event recno required  
"RTN","IB20P342",190,0)
 ;EVNTTYPE event type (value for .01)
"RTN","IB20P342",191,0)
 ;returns ien for the event
"RTN","IB20P342",192,0)
ADDEVENT(IBDATE,EVNTRECN,EVNTTYPE) ;
"RTN","IB20P342",193,0)
 N IBIEN,IBX
"RTN","IB20P342",194,0)
 S IBIEN=+$O(^IBCNR(366.14,"B",IBDATE,0))
"RTN","IB20P342",195,0)
 I IBIEN=0 Q -1
"RTN","IB20P342",196,0)
 Q $$INSITEM^IBNCPUT1(366.141,IBIEN,$$EXT2INT^IBNCPUT1(EVNTTYPE),EVNTRECN)
"RTN","IB20P342",197,0)
 ;
"RTN","IB20P342",198,0)
DELDATE(IBIEN) ;
"RTN","IB20P342",199,0)
 N IBPDA,ERRARR
"RTN","IB20P342",200,0)
 S IBPDA(366.14,IBIEN_",",.01)="@"
"RTN","IB20P342",201,0)
 D FILE^DIE("","IBPDA","ERRARR")
"RTN","IB20P342",202,0)
 I $D(ERRARR) Q "0^"_ERRARR("DIERR",1,"TEXT",1)
"RTN","IB20P342",203,0)
 Q 1
"RTN","IB20P342",204,0)
 ;
"RTN","IB20P342",205,0)
 ;display error message 
"RTN","IB20P342",206,0)
 ;IBERRMSG - error message text
"RTN","IB20P342",207,0)
ERRMSG(IBERRMSG) ;
"RTN","IB20P342",208,0)
 D BMES^XPDUTL(IBERRMSG)
"RTN","IB20P342",209,0)
 Q
"RTN","IB20P342",210,0)
 ;
"RTN","IB20P342",211,0)
 ;send mail to the user
"RTN","IB20P342",212,0)
SNDMAIL(IBSUBJ,IBMESS1,IBMESS2) ;
"RTN","IB20P342",213,0)
 N DIFROM ;IMPORTANT - if you send e-mail from post-install !!!
"RTN","IB20P342",214,0)
 N TMPARR,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","IB20P342",215,0)
 S TMPARR(1)=""
"RTN","IB20P342",216,0)
 S TMPARR(2)=IBMESS1
"RTN","IB20P342",217,0)
 S TMPARR(3)=IBMESS2
"RTN","IB20P342",218,0)
 S TMPARR(4)=""
"RTN","IB20P342",219,0)
 S XMSUB=IBSUBJ
"RTN","IB20P342",220,0)
 S XMDUZ="INTEGRATED BILLING PACKAGE"
"RTN","IB20P342",221,0)
 S XMTEXT="TMPARR("
"RTN","IB20P342",222,0)
 S XMY(DUZ)=""
"RTN","IB20P342",223,0)
 D ^XMD
"RTN","IB20P342",224,0)
 Q
"RTN","IB20P342",225,0)
 ;
"RTN","IB20P342",226,0)
 ;IB20P342
"RTN","IBEVNTP")
1^18
"RTN","IBNCPDP2")
0^16^B33216469
"RTN","IBNCPDP2",1,0)
IBNCPDP2 ;OAK/ELZ - PROCESSING FOR ECME RESP ;20-JUN-2003
"RTN","IBNCPDP2",2,0)
 ;;2.0;INTEGRATED BILLING;**223,276,342**;21-MAR-94;Build 18
"RTN","IBNCPDP2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBNCPDP2",4,0)
 ;
"RTN","IBNCPDP2",5,0)
 ;NCPDP PHASE III
"RTN","IBNCPDP2",6,0)
 Q
"RTN","IBNCPDP2",7,0)
 ;
"RTN","IBNCPDP2",8,0)
ECME(DFN,IBD) ; function called by STORESP^IBNCPDP
"RTN","IBNCPDP2",9,0)
 ; input - DFN - patient IEN for the prescription
"RTN","IBNCPDP2",10,0)
 ;         IBD array passed in by reference
"RTN","IBNCPDP2",11,0)
 ;      The IBD array is passed to various subroutines depending
"RTN","IBNCPDP2",12,0)
 ;      on the ePharmacy event as evaluated by IBD("STATUS")
"RTN","IBNCPDP2",13,0)
 I IBD("STATUS")="PAID" Q $$BILL(DFN,.IBD)
"RTN","IBNCPDP2",14,0)
 I IBD("STATUS")="REVERSED" Q $$REVERSE^IBNCPDP3(DFN,.IBD)
"RTN","IBNCPDP2",15,0)
 I IBD("STATUS")="CLOSED" Q $$CLOSE^IBNCPDP4(DFN,.IBD)
"RTN","IBNCPDP2",16,0)
 I IBD("STATUS")="RELEASED" Q $$RELEASE^IBNCPDP4(DFN,.IBD)
"RTN","IBNCPDP2",17,0)
 I IBD("STATUS")="SUBMITTED" Q $$SUBMIT^IBNCPDP4(DFN,.IBD)
"RTN","IBNCPDP2",18,0)
 I IBD("STATUS")="REOPEN" Q $$REOPEN^IBNCPDP4(DFN,.IBD)
"RTN","IBNCPDP2",19,0)
 D LOG("UNKNOWN")
"RTN","IBNCPDP2",20,0)
 Q "0^Cannot determine ECME event status"
"RTN","IBNCPDP2",21,0)
 ;
"RTN","IBNCPDP2",22,0)
MATCH(BCID) ;
"RTN","IBNCPDP2",23,0)
 N IBX,IBHAVE
"RTN","IBNCPDP2",24,0)
 S IBX=0,IBHAVE=0 F  S IBX=$O(^DGCR(399,"AG",BCID,IBX)) Q:'IBX  S IBHAVE=1 I '$P($G(^DGCR(399,IBX,"S")),U,16) Q
"RTN","IBNCPDP2",25,0)
 I 'IBX,IBHAVE Q ""
"RTN","IBNCPDP2",26,0)
 Q +IBX
"RTN","IBNCPDP2",27,0)
 ;
"RTN","IBNCPDP2",28,0)
 ;
"RTN","IBNCPDP2",29,0)
BILL(DFN,IBD) ; create fi bill
"RTN","IBNCPDP2",30,0)
 N IBRVCD,IBBS,IBUNITS,IBCPT,IBDIV,IBAA,IBTYPE,IBITEM,IBAMT,IBY,IBSERV,IBFAC,IBSITE,IBDRX,IB,IBCDFN,IBINS,IBIDS,IBIFN,IBDFN,PRCASV,PRCAERR,IBADT,IBRXN,IBFIL,IBTRKRN,DIE,DA,DR,IBRES,IBLOCK,IBLDT,IBNOW,IBDUZ,RCDUZ,IBPREV,IBQUERY,IBPAID,IBACT
"RTN","IBNCPDP2",31,0)
 ;
"RTN","IBNCPDP2",32,0)
 S IBDUZ=.5 ;POSTMASTER
"RTN","IBNCPDP2",33,0)
 ;I $G(IBD("FILLED BY")),$D(^VA(200,+IBD("FILLED BY"))) S IBDUZ=+IBD("FILLED BY")
"RTN","IBNCPDP2",34,0)
 S RCDUZ=IBDUZ
"RTN","IBNCPDP2",35,0)
 ;
"RTN","IBNCPDP2",36,0)
 S IBY=1,IBLOCK=0
"RTN","IBNCPDP2",37,0)
 I 'DFN S IBY="0^Missing DFN" G BILLQ
"RTN","IBNCPDP2",38,0)
 S IBAMT=+$G(IBD("BILLED")) ;FI portion of charge
"RTN","IBNCPDP2",39,0)
 I 'IBAMT S IBY="-1^Zero amount billed" G BILLQ
"RTN","IBNCPDP2",40,0)
 S IBADT=+$G(IBD("FILL DATE"),DT)
"RTN","IBNCPDP2",41,0)
 S IBRXN=+$G(IBD("PRESCRIPTION")) I 'IBRXN S IBY="0^Missing Rx IEN" G BILLQ
"RTN","IBNCPDP2",42,0)
 S IBFIL=+$G(IBD("FILL NUMBER"),-1) I IBFIL<0 S IBY="0^No fill number" G BILLQ
"RTN","IBNCPDP2",43,0)
 S IBDIV=+$G(IBD("DIVISION"))
"RTN","IBNCPDP2",44,0)
 I '$L($G(IBD("CLAIMID"))) S IBY="-1^Missing ECME Number" G BILLQ
"RTN","IBNCPDP2",45,0)
 S IBD("BCID")=(+IBD("CLAIMID"))_";"_IBADT ; The BCID#
"RTN","IBNCPDP2",46,0)
 L +^DGCR(399,"AG",IBD("BCID")):15 E  S IBY="0^Cannot lock ECME number." G BILLQ
"RTN","IBNCPDP2",47,0)
 S IBLOCK=1
"RTN","IBNCPDP2",48,0)
 S IBLDT=$G(^DGCR(399,"AG",IBD("BCID"))) ;Last time called
"RTN","IBNCPDP2",49,0)
 D NOW^%DTC S IBNOW=%
"RTN","IBNCPDP2",50,0)
 ; 2 calls in 45 sec
"RTN","IBNCPDP2",51,0)
 I $P(IBLDT,"^",2)="B" I $$FMDIFF^XLFDT(IBNOW,+IBLDT,2)<45 S IBY="0^Duplicate billing call" G BILLQ
"RTN","IBNCPDP2",52,0)
 ;
"RTN","IBNCPDP2",53,0)
 I $$MATCH(IBD("BCID")) D   ;cancel the previous bill
"RTN","IBNCPDP2",54,0)
 . N IBARR M IBARR=IBD I $$REVERSE^IBNCPDP3(DFN,.IBARR,2)
"RTN","IBNCPDP2",55,0)
 ;
"RTN","IBNCPDP2",56,0)
 ; derive minimal variables
"RTN","IBNCPDP2",57,0)
 I '$$CHECK^IBECEAU(0) S IBY="-1^IB SITE" G BILLQ
"RTN","IBNCPDP2",58,0)
 S IBSERV=$P($G(^IBE(350.1,1,0)),"^",4)
"RTN","IBNCPDP2",59,0)
 I '$$SERV^IBARX1(IBSERV) S IBY="-1^IB SERVICE" G BILLQ
"RTN","IBNCPDP2",60,0)
 I 'IBDIV S IBDIV=+$P($G(^SC(+$P($G(^PSRX(IBRXN,0)),U,5),0)),U,15)
"RTN","IBNCPDP2",61,0)
 I 'IBDIV S IBDIV=+$P($G(^IBE(350.9,1,1)),U,25) ;dflt
"RTN","IBNCPDP2",62,0)
 ; - establish a stub claim/receivable
"RTN","IBNCPDP2",63,0)
 D SET^IBR I IBY<0 G BILLQ
"RTN","IBNCPDP2",64,0)
 ;
"RTN","IBNCPDP2",65,0)
 ; set up the following variables for claim establishment:
"RTN","IBNCPDP2",66,0)
 ; .01 BILL #
"RTN","IBNCPDP2",67,0)
 ; .17 ORIG CLAIM
"RTN","IBNCPDP2",68,0)
 ; .2  AUTO?
"RTN","IBNCPDP2",69,0)
 ; .02 DFN
"RTN","IBNCPDP2",70,0)
 ; .06 TIMEFRAME
"RTN","IBNCPDP2",71,0)
 ; .07 RATE TYPE
"RTN","IBNCPDP2",72,0)
 ; .18 SC AT TIME?
"RTN","IBNCPDP2",73,0)
 ; .04 LOCATION
"RTN","IBNCPDP2",74,0)
 ; .22 DIVISION
"RTN","IBNCPDP2",75,0)
 ; .05 BILL CLASSIF  (3)
"RTN","IBNCPDP2",76,0)
 ; .03 EVT DATE (FILL DATE)
"RTN","IBNCPDP2",77,0)
 ; 151 BILL FROM
"RTN","IBNCPDP2",78,0)
 ; 152 BILL TO
"RTN","IBNCPDP2",79,0)
 ; 101 PRIMARY INS CARRIER
"RTN","IBNCPDP2",80,0)
 K IB
"RTN","IBNCPDP2",81,0)
 S (IB(.02),IBDFN)=DFN
"RTN","IBNCPDP2",82,0)
 S IB(.07)=+$$RT^IBNCPDPU(DFN)
"RTN","IBNCPDP2",83,0)
 I 'IB(.07) S IBY="-1^IB RATE TYPE" G BILLQ
"RTN","IBNCPDP2",84,0)
 ;
"RTN","IBNCPDP2",85,0)
 S IBIFN=PRCASV("ARREC")
"RTN","IBNCPDP2",86,0)
 S IB(.01)=$P(PRCASV("ARBIL"),"-",2)
"RTN","IBNCPDP2",87,0)
 S IB(.17)=""
"RTN","IBNCPDP2",88,0)
 S IB(.2)=0
"RTN","IBNCPDP2",89,0)
 S IB(.06)=1
"RTN","IBNCPDP2",90,0)
 S IB(.18)=$$SC^IBCU3(DFN)
"RTN","IBNCPDP2",91,0)
 S IB(.04)=$S(+$P($G(^DG(40.8,+IBDIV,0)),U,3):7,1:1)
"RTN","IBNCPDP2",92,0)
 S:IBDIV IB(.22)=+IBDIV
"RTN","IBNCPDP2",93,0)
 S IB(.05)=3
"RTN","IBNCPDP2",94,0)
 S (IB(.03),IB(151),IB(152))=IBADT
"RTN","IBNCPDP2",95,0)
 S IBINS=$P($G(^IBA(355.3,+$G(IBD("PLAN")),0)),"^") I IBINS S IB(101)=IBINS
"RTN","IBNCPDP2",96,0)
 ;
"RTN","IBNCPDP2",97,0)
 ; set 362.4 node to rx#^p50^days sup^fill date^qty^ndc
"RTN","IBNCPDP2",98,0)
 S IB(362.4,IBRXN,1)=IBD("RX NO")_"^"_IBD("DRUG")_"^"_IBD("DAYS SUPPLY")_"^"_IBD("FILL DATE")_"^"_IBD("QTY")_"^"_IBD("NDC")
"RTN","IBNCPDP2",99,0)
 ;
"RTN","IBNCPDP2",100,0)
 ; call the autobiller module to create the claim with a default
"RTN","IBNCPDP2",101,0)
 ; diagnosis and procedure for prescriptions
"RTN","IBNCPDP2",102,0)
 D EN^IBCD3(.IBQUERY)
"RTN","IBNCPDP2",103,0)
 D CLOSE^IBSDU(.IBQUERY)
"RTN","IBNCPDP2",104,0)
 ;
"RTN","IBNCPDP2",105,0)
 S ^DGCR(399,"AG",IBD("BCID"))=IBNOW_"^B"
"RTN","IBNCPDP2",106,0)
 S DIE="^DGCR(399,",DA=IBIFN
"RTN","IBNCPDP2",107,0)
 ; update the ECME fields
"RTN","IBNCPDP2",108,0)
 S DR="460////^S X=IBD(""BCID"")" S:$L($G(IBD("AUTH #"))) DR=DR_";461////^S X=IBD(""AUTH #"")"
"RTN","IBNCPDP2",109,0)
 D ^DIE K DA,DR,DIE
"RTN","IBNCPDP2",110,0)
 D SETCT ; Set Claims Tracking record
"RTN","IBNCPDP2",111,0)
 ;
"RTN","IBNCPDP2",112,0)
 ; IEN to 2.3121
"RTN","IBNCPDP2",113,0)
 S IBCDFN=$$PLANN^IBNCPDPU(DFN,IBD("PLAN"),IBADT)
"RTN","IBNCPDP2",114,0)
 I 'IBCDFN S IBY="-1^Plan not found in Patient's Profile." G BILLQ
"RTN","IBNCPDP2",115,0)
 ;
"RTN","IBNCPDP2",116,0)
 ; add the payer (fiscal intermediary) to the claim
"RTN","IBNCPDP2",117,0)
 S IBINS=+IBCDFN,IBCDFN=$P(IBCDFN,"^",2)
"RTN","IBNCPDP2",118,0)
 S DIE="^DGCR(399,",DA=IBIFN,DR="112////"_IBCDFN
"RTN","IBNCPDP2",119,0)
 D ^DIE K DA,DR,DIE,DGRVRCAL
"RTN","IBNCPDP2",120,0)
 ;
"RTN","IBNCPDP2",121,0)
 ; need to make sure we have computed charges.
"RTN","IBNCPDP2",122,0)
 D BILL^IBCRBC(IBIFN)
"RTN","IBNCPDP2",123,0)
 ;
"RTN","IBNCPDP2",124,0)
 ; update the authorize/print fields
"RTN","IBNCPDP2",125,0)
 S DIE="^DGCR(399,",DA=IBIFN
"RTN","IBNCPDP2",126,0)
 S DR="9////1;12////"_DT D ^DIE
"RTN","IBNCPDP2",127,0)
 K DA,DR,DIE
"RTN","IBNCPDP2",128,0)
 ;
"RTN","IBNCPDP2",129,0)
 ; pass the claim to AR
"RTN","IBNCPDP2",130,0)
 D GVAR^IBCBB,ARRAY^IBCBB1 S PRCASV("APR")=IBDUZ D ^PRCASVC6
"RTN","IBNCPDP2",131,0)
 I 'PRCASV("OKAY") S IBY="-1^Cannot establish receivable in AR." G BILLQ
"RTN","IBNCPDP2",132,0)
 D REL^PRCASVC
"RTN","IBNCPDP2",133,0)
 ;
"RTN","IBNCPDP2",134,0)
 ; update the AR status to Active
"RTN","IBNCPDP2",135,0)
 ;  D AUDITX^PRCAUDT(PRCASV("ARREC"))
"RTN","IBNCPDP2",136,0)
 S PRCASV("STATUS")=16
"RTN","IBNCPDP2",137,0)
 D STATUS^PRCASVC1
"RTN","IBNCPDP2",138,0)
 ;
"RTN","IBNCPDP2",139,0)
 ; decrease adjust bill
"RTN","IBNCPDP2",140,0)
 ; Auto decrease from service Bill#,Tran amt,person,reason,Tran date
"RTN","IBNCPDP2",141,0)
 S IBAMT=$G(^DGCR(399,IBIFN,"U1"))
"RTN","IBNCPDP2",142,0)
 S IBPAID=IBD("PAID")
"RTN","IBNCPDP2",143,0)
 D:IBAMT-IBPAID>.01
"RTN","IBNCPDP2",144,0)
 . D DEC^PRCASER1(PRCASV("ARREC"),IBAMT-IBPAID,IBDUZ,"Adjust based on ECME amount paid.",IBADT)
"RTN","IBNCPDP2",145,0)
 . I 'IBPAID S PRCASV("STATUS")=22 D STATUS^PRCASVC1 ; collected/closed
"RTN","IBNCPDP2",146,0)
 ; release copay off hold
"RTN","IBNCPDP2",147,0)
 I 'IBPAID,'$$MOREINS^IBNCPNB(DFN,IBADT) D
"RTN","IBNCPDP2",148,0)
 . S IBACT=$$RELCOPAY^IBNCPNB(DFN,IBRXN,IBFIL,0,IBADT,IBIFN)
"RTN","IBNCPDP2",149,0)
 ;if returned value IBACT=0 - we will have two attempts scheduled inside RELCOPAY
"RTN","IBNCPDP2",150,0)
 ;and if all attempts fail then e-mail will be send from RCTASK
"RTN","IBNCPDP2",151,0)
 ;if IBACT=-2 (patient exempt from RX copay) then do nothing
"RTN","IBNCPDP2",152,0)
 ;IBACT cannot be >0 or -1 if 4th parameter=0
"RTN","IBNCPDP2",153,0)
 ;
"RTN","IBNCPDP2",154,0)
 D  ; set the user in 399
"RTN","IBNCPDP2",155,0)
 . N IBI,IBT F IBI=2,5,11,13,15 S IBT(399,IBIFN_",",IBI)=IBDUZ
"RTN","IBNCPDP2",156,0)
 . D FILE^DIE("","IBT")
"RTN","IBNCPDP2",157,0)
 ;
"RTN","IBNCPDP2",158,0)
BILLQ S IBRES=$S(IBY<0:"0^"_$S($L($P(IBY,"^",2)):$P(IBY,"^",2),1:$P(IBY,"^",3)),$G(IBIFN):+IBIFN,1:IBY)
"RTN","IBNCPDP2",159,0)
 I $G(IBIFN) S IBD("BILL")=IBIFN
"RTN","IBNCPDP2",160,0)
 D LOG("BILL",IBRES)
"RTN","IBNCPDP2",161,0)
 I IBY<0 D BULL^IBNCPEB($G(DFN),.IBD,IBRES,$G(IBIFN))
"RTN","IBNCPDP2",162,0)
 I IBLOCK L -^DGCR(399,"AG",IBD("BCID"))
"RTN","IBNCPDP2",163,0)
 Q IBRES
"RTN","IBNCPDP2",164,0)
 ;
"RTN","IBNCPDP2",165,0)
 ; update claims tracking saying bill has been billed
"RTN","IBNCPDP2",166,0)
SETCT ;
"RTN","IBNCPDP2",167,0)
 S IBTRKRN=+$O(^IBT(356,"ARXFL",IBRXN,IBFIL,0))
"RTN","IBNCPDP2",168,0)
 I IBTRKRN S DIE="^IBT(356,",DA=IBTRKRN,DR=".11////^S X=IBIFN;.17///@" D ^DIE
"RTN","IBNCPDP2",169,0)
 I IBTRKRN,IBIFN D CTB^IBCDC(IBTRKRN,IBIFN)
"RTN","IBNCPDP2",170,0)
 Q
"RTN","IBNCPDP2",171,0)
 ;
"RTN","IBNCPDP2",172,0)
 ;/**
"RTN","IBNCPDP2",173,0)
 ;Log values passed into IB by outside applications
"RTN","IBNCPDP2",174,0)
 ;
"RTN","IBNCPDP2",175,0)
 ;implicit input variables/arrays :
"RTN","IBNCPDP2",176,0)
 ; IBD array with values sent to IB (see calling subroutines)
"RTN","IBNCPDP2",177,0)
 ; DFN - patient's IEN (file #2)
"RTN","IBNCPDP2",178,0)
 ; DUZ - user's IEN(file #200)
"RTN","IBNCPDP2",179,0)
 ;explicit parameters:
"RTN","IBNCPDP2",180,0)
 ; PROC - type of event as string, i.e. BILL, REJECT and so on
"RTN","IBNCPDP2",181,0)
 ; RESULT - result of the event processing, format: return_code^message
"RTN","IBNCPDP2",182,0)
LOG(PROC,RESULT) ;Store the data
"RTN","IBNCPDP2",183,0)
 D LOG^IBNCPLOG(.IBD,DFN,PROC,RESULT,$J,$$NOW^XLFDT(),+DUZ)
"RTN","IBNCPDP2",184,0)
 Q
"RTN","IBNCPDP2",185,0)
 ;
"RTN","IBNCPDP2",186,0)
 ;IBNCPDP2
"RTN","IBNCPDP3")
0^13^B30685314
"RTN","IBNCPDP3",1,0)
IBNCPDP3 ;OAK/ELZ - STORES NDC/AWP UPDATES ;20-JUN-2003
"RTN","IBNCPDP3",2,0)
 ;;2.0;INTEGRATED BILLING;**223,276,342**;21-MAR-94;Build 18
"RTN","IBNCPDP3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBNCPDP3",4,0)
 ;
"RTN","IBNCPDP3",5,0)
 ;
"RTN","IBNCPDP3",6,0)
UPAWP(IBNDC,IBAWP,IBADT) ; updates AWP prices for NDCs
"RTN","IBNCPDP3",7,0)
 ;
"RTN","IBNCPDP3",8,0)
 N IBITEM,IBCS
"RTN","IBNCPDP3",9,0)
 ;
"RTN","IBNCPDP3",10,0)
 ;
"RTN","IBNCPDP3",11,0)
 S IBCS=$P($G(^IBE(350.9,1,9)),"^",12)
"RTN","IBNCPDP3",12,0)
 I 'IBCS Q "0^Unable to find Charge Set"
"RTN","IBNCPDP3",13,0)
 ;
"RTN","IBNCPDP3",14,0)
 S IBNDC=$$NDC^IBNCPDPU(IBNDC)
"RTN","IBNCPDP3",15,0)
 ;
"RTN","IBNCPDP3",16,0)
 S IBITEM=+$$ADDBI^IBCREF("NDC",IBNDC) I IBITEM Q "0^Unable to add item"
"RTN","IBNCPDP3",17,0)
 ;
"RTN","IBNCPDP3",18,0)
 I '$$ADDCI^IBCREF(IBCS,IBITEM,IBADT,IBAWP) Q "0^Unable to add charge"
"RTN","IBNCPDP3",19,0)
 ;
"RTN","IBNCPDP3",20,0)
 Q 1
"RTN","IBNCPDP3",21,0)
 ;
"RTN","IBNCPDP3",22,0)
 ;
"RTN","IBNCPDP3",23,0)
 ;
"RTN","IBNCPDP3",24,0)
 ;
"RTN","IBNCPDP3",25,0)
REVERSE(DFN,IBD,IBAUTO) ;process reversed claims
"RTN","IBNCPDP3",26,0)
 N IBIFN,I,IB,IBIL,IBCHG,IBCRES,IBY,X,Y,DA,DIE,DR,IBADT,IBLOCK,IBLDT
"RTN","IBNCPDP3",27,0)
 N IBNOW,IBDUZ,IBCR,IBRELC,IBCC,IBPAP,IBRXN,IBFIL,IBRTS,IBARES,IBUSR
"RTN","IBNCPDP3",28,0)
 S IBDUZ=.5
"RTN","IBNCPDP3",29,0)
 ;
"RTN","IBNCPDP3",30,0)
 S IBLOCK=0
"RTN","IBNCPDP3",31,0)
 ; find bill number
"RTN","IBNCPDP3",32,0)
 I 'DFN S IBY="0^No patient" G REVQ
"RTN","IBNCPDP3",33,0)
 I '$L($G(IBD("CLAIMID"))) S IBY="0^Missing ECME Number" G REVQ
"RTN","IBNCPDP3",34,0)
 S IBADT=+$G(IBD("FILL DATE")) I 'IBADT S IBY="0^Missing Fill Date" G REVQ
"RTN","IBNCPDP3",35,0)
 S IBRXN=+$G(IBD("PRESCRIPTION")) I 'IBRXN S IBY="0^No Rx IEN" G REVQ
"RTN","IBNCPDP3",36,0)
 S IBFIL=+$G(IBD("FILL NUMBER"),-1) I IBFIL<0 S IBY="0^No fill number" G REVQ
"RTN","IBNCPDP3",37,0)
 I $E($G(IBD("RESPONSE")),1)="R" D  G REVQ:+'$G(IBRTS)
"RTN","IBNCPDP3",38,0)
 . S IBY="0^REVERSAL rejected by payer"
"RTN","IBNCPDP3",39,0)
 . S IBRTS=$$RTS(IBD("REVERSAL REASON"))
"RTN","IBNCPDP3",40,0)
 ;
"RTN","IBNCPDP3",41,0)
 S IBD("BCID")=(+IBD("CLAIMID"))_";"_IBADT ; BC ID Number
"RTN","IBNCPDP3",42,0)
 L +^DGCR(399,"AG",IBD("BCID")):15 E  S IBY="0^Cannot lock ECME number" G REVQ
"RTN","IBNCPDP3",43,0)
 S IBLOCK=1
"RTN","IBNCPDP3",44,0)
 S IBUSR=$S(+$G(IBD("USER"))=0:DUZ,1:IBD("USER"))
"RTN","IBNCPDP3",45,0)
 I $D(^DGCR(399,"AG",IBD("BCID"))) S ^(IBD("BCID"))=""
"RTN","IBNCPDP3",46,0)
 S IBIFN=$$MATCH^IBNCPDP2(IBD("BCID"))
"RTN","IBNCPDP3",47,0)
 I $D(IBD("CLOSE REASON")),'$D(IBD("DROP TO PAPER")) S IBD("DROP TO PAPER")=""
"RTN","IBNCPDP3",48,0)
 S IBCR=+$G(IBD("CLOSE REASON"))
"RTN","IBNCPDP3",49,0)
 S IBPAP=$G(IBD("DROP TO PAPER"))
"RTN","IBNCPDP3",50,0)
 S IBRELC=$G(IBD("RELEASE COPAY"))
"RTN","IBNCPDP3",51,0)
 S IBCC=$G(IBD("CLOSE COMMENT"))
"RTN","IBNCPDP3",52,0)
 D NONBR^IBNCPNB(DFN,IBRXN,IBFIL,IBADT,IBCR,IBPAP,IBRELC,IBCC,IBUSR)
"RTN","IBNCPDP3",53,0)
 I 'IBIFN S IBY="0^"_$S(IBPAP:"Dropped to paper",IBCR>1:"Set non-billable reason in CT",1:"Cannot find the bill to reverse") G REVQ
"RTN","IBNCPDP3",54,0)
 ;
"RTN","IBNCPDP3",55,0)
 F I=0,"S" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBNCPDP3",56,0)
 I IB(0)="" S IBY="0^No data in bill" G REVQ
"RTN","IBNCPDP3",57,0)
 I +$P(IB("S"),U,16),$P(IB("S"),U,17)]"" S IBY="0^Bill already cancelled" G REVQ
"RTN","IBNCPDP3",58,0)
 ;
"RTN","IBNCPDP3",59,0)
 S:'$D(IBCRES) IBCRES="ECME PRESCRIPTION REVERSED"
"RTN","IBNCPDP3",60,0)
 S DA=IBIFN,DR="16////1;19////"_IBCRES,DIE="^DGCR(399,"
"RTN","IBNCPDP3",61,0)
 D ^DIE K DA,DIE,DR
"RTN","IBNCPDP3",62,0)
 ;
"RTN","IBNCPDP3",63,0)
 ; - decrease out the receivable in AR
"RTN","IBNCPDP3",64,0)
 S IB("U1")=$G(^DGCR(399,IBIFN,"U1"))
"RTN","IBNCPDP3",65,0)
 S IBIL=$P($G(^PRCA(430,IBIFN,0)),"^")
"RTN","IBNCPDP3",66,0)
 S IBCHG=$S(IB("U1")']"":0,$P(IB("U1"),"^",1)]"":$P(IB("U1"),"^",1),1:0)
"RTN","IBNCPDP3",67,0)
 ;
"RTN","IBNCPDP3",68,0)
 S X="21^"_IBCHG_"^"_IBIL_"^"_IBDUZ_"^"_DT_"^"_IBCRES
"RTN","IBNCPDP3",69,0)
 D ^PRCASER1
"RTN","IBNCPDP3",70,0)
 S IBARES=Y
"RTN","IBNCPDP3",71,0)
 I IBARES<0 S IBY=IBARES D BULL
"RTN","IBNCPDP3",72,0)
 ;
"RTN","IBNCPDP3",73,0)
 S IBY=$S(IBARES<0:"0^"_$P(IBARES,"^",2),1:1)
"RTN","IBNCPDP3",74,0)
 ;
"RTN","IBNCPDP3",75,0)
 I IBDUZ'=DUZ D  ; set the real user
"RTN","IBNCPDP3",76,0)
 . N IBI,IBT S IBI=18,IBT(399,IBIFN_",",IBI)=IBDUZ D FILE^DIE("","IBT")
"RTN","IBNCPDP3",77,0)
 ;
"RTN","IBNCPDP3",78,0)
REVQ ; perform end of job tasks  
"RTN","IBNCPDP3",79,0)
 D LOG^IBNCPDP2($S($G(IBAUTO)=1:"AUTO REVERSE",$G(IBAUTO)=2:"BILL CANCELLED",1:"REVERSE"),IBY)
"RTN","IBNCPDP3",80,0)
 I IBLOCK L -^DGCR(399,"AG",IBD("BCID"))
"RTN","IBNCPDP3",81,0)
 I IBY=1,$G(IBIFN) S IBY=+IBIFN
"RTN","IBNCPDP3",82,0)
 Q IBY
"RTN","IBNCPDP3",83,0)
 ;
"RTN","IBNCPDP3",84,0)
RTS(IBRR) ; Return to Stock processing on Released Rx
"RTN","IBNCPDP3",85,0)
 ; input - IBRR = reversal reason
"RTN","IBNCPDP3",86,0)
 ;         IBCRSN = passed in by reference 
"RTN","IBNCPDP3",87,0)
 ; output - 0 = reversal not due to a Rx RETURN TO STOCK or Rx DELETE
"RTN","IBNCPDP3",88,0)
 ;          1 = reversal due to a Rx RETURN TO STOCK or Rx DELETE
"RTN","IBNCPDP3",89,0)
 ;          IBCRSN = charge removal reason
"RTN","IBNCPDP3",90,0)
 I IBRR'="RX RETURNED TO STOCK"&(IBRR'="RX DELETED") Q 0
"RTN","IBNCPDP3",91,0)
 N IBTRKRN,IBLOCK2,IBCMT,DA,DIE,DR
"RTN","IBNCPDP3",92,0)
 S IBTRKRN=+$O(^IBT(356,"ARXFL",IBRXN,IBFIL,0))
"RTN","IBNCPDP3",93,0)
 I 'IBTRKRN Q 0  ; CT record does not exist
"RTN","IBNCPDP3",94,0)
 I '$P($G(^IBT(356,IBTRKRN,0)),U,11) Q 0  ; BILL does not exist
"RTN","IBNCPDP3",95,0)
 S IBCRES=$$GETRSN(DFN,IBRXN,IBFIL)  ; recorded in file 399 entry
"RTN","IBNCPDP3",96,0)
 L +^IBT(356,IBTRKRN):5 S IBLOCK2=$T
"RTN","IBNCPDP3",97,0)
 S DIE="^IBT(356,",DA=IBTRKRN,IBCMT="Rx RTS - May Need Refund"
"RTN","IBNCPDP3",98,0)
 S DR="1.08////"_IBCMT
"RTN","IBNCPDP3",99,0)
 D ^DIE
"RTN","IBNCPDP3",100,0)
 I IBLOCK2 L -^IBT(356,IBTRKRN)
"RTN","IBNCPDP3",101,0)
 Q 1
"RTN","IBNCPDP3",102,0)
 ;
"RTN","IBNCPDP3",103,0)
BULL ; Generate a bulletin if there is an error in cancelling the claim.
"RTN","IBNCPDP3",104,0)
 N IBC,IBT,IBPT,IBGRP,XMDUZ,XMTEXT,XMSUB,XMY
"RTN","IBNCPDP3",105,0)
 ;
"RTN","IBNCPDP3",106,0)
 S IBPT=$$PT^IBEFUNC(DFN)
"RTN","IBNCPDP3",107,0)
 S XMSUB=$E($P(IBPT,"^"),1,14)_"  "_$P(IBPT,"^",3)_" - ERROR ENCOUNTERED"
"RTN","IBNCPDP3",108,0)
 S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
"RTN","IBNCPDP3",109,0)
 S XMY(IBDUZ)=""
"RTN","IBNCPDP3",110,0)
 S IBGRP=$P($G(^XMB(3.8,+$P($G(^IBE(350.9,1,1)),"^",7),0)),"^")
"RTN","IBNCPDP3",111,0)
 I IBGRP]"" S XMY("G."_IBGRP_"@"_^XMB("NETNAME"))=""
"RTN","IBNCPDP3",112,0)
 ;
"RTN","IBNCPDP3",113,0)
 S IBT(1)="An error occurred while cancelling the Pharmacy claim from ECME"
"RTN","IBNCPDP3",114,0)
 S IBT(2)="fiscal intermediary for the following patient:"
"RTN","IBNCPDP3",115,0)
 S IBT(3)=" " S IBC=3
"RTN","IBNCPDP3",116,0)
 D PAT^IBAERR1 ; Accepts IBDUZ
"RTN","IBNCPDP3",117,0)
 S IBC=IBC+1,IBT(IBC)="   Bill #: "_IBIL
"RTN","IBNCPDP3",118,0)
 S IBC=IBC+1,IBT(IBC)=" "
"RTN","IBNCPDP3",119,0)
 S IBC=IBC+1,IBT(IBC)="The following error was encountered:"
"RTN","IBNCPDP3",120,0)
 S IBC=IBC+1,IBT(IBC)=" "
"RTN","IBNCPDP3",121,0)
 D ERR^IBAERR1
"RTN","IBNCPDP3",122,0)
 S IBC=IBC+1,IBT(IBC)=" "
"RTN","IBNCPDP3",123,0)
 S IBC=IBC+1,IBT(IBC)="Please review the circumstances surrounding this error and decrease"
"RTN","IBNCPDP3",124,0)
 S IBC=IBC+1,IBT(IBC)="out this receivable in Accounts Receivable if necessary."
"RTN","IBNCPDP3",125,0)
 D ^XMD
"RTN","IBNCPDP3",126,0)
 Q
"RTN","IBNCPDP3",127,0)
 ;
"RTN","IBNCPDP3",128,0)
GETRSN(DFN,IBRXN,IBFIL) ;
"RTN","IBNCPDP3",129,0)
 ; retrieve charge removal reason from file 354.71
"RTN","IBNCPDP3",130,0)
 ; input - DFN,IBRXN=Rx ien,IBFIL=fill number
"RTN","IBNCPDP3",131,0)
 ; output - charge removal reason 
"RTN","IBNCPDP3",132,0)
 N IBDT,IBDA,IBXRSN,IBRXFIL,IB0
"RTN","IBNCPDP3",133,0)
 S (IBDT,IBDA)=0,IBXRSN=""
"RTN","IBNCPDP3",134,0)
 S IBRXFIL=$S('IBFIL:IBRXN,1:IBRXN_";"_IBFIL)
"RTN","IBNCPDP3",135,0)
 F  S IBDT=$O(^IBAM(354.71,"AD",DFN,IBDT)) Q:'IBDT  Q:IBXRSN]""  D
"RTN","IBNCPDP3",136,0)
 . F  S IBDA=$O(^IBAM(354.71,"AD",DFN,IBDT,IBDA)) Q:'IBDA  Q:IBXRSN]""  D
"RTN","IBNCPDP3",137,0)
 . . S IB0=^IBAM(354.71,IBDA,0)
"RTN","IBNCPDP3",138,0)
 . . Q:$P(IB0,"^",6)'[IBRXFIL
"RTN","IBNCPDP3",139,0)
 . . S IBXRSN=$$GET1^DIQ(354.71,IBDA_",",.19)
"RTN","IBNCPDP3",140,0)
 S:IBXRSN']"" IBXRSN="CHARGE REMOVAL REASON NOT FOUND"
"RTN","IBNCPDP3",141,0)
 Q "Reversal Rej, no pymt due<>"_IBXRSN
"RTN","IBNCPDP3",142,0)
 ;
"RTN","IBNCPDP3",143,0)
 ;IBNCPDP3
"RTN","IBNCPDP4")
0^14^B48050373
"RTN","IBNCPDP4",1,0)
IBNCPDP4 ;DALOI/AAT - HANDLE ECME EVENTS ;20-JUN-2003
"RTN","IBNCPDP4",2,0)
 ;;2.0;INTEGRATED BILLING;**276,342**;21-MAR-94;Build 18
"RTN","IBNCPDP4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBNCPDP4",4,0)
 ;
"RTN","IBNCPDP4",5,0)
 ;NCPDP PHASE III
"RTN","IBNCPDP4",6,0)
 Q
"RTN","IBNCPDP4",7,0)
 ;
"RTN","IBNCPDP4",8,0)
CLOSE(DFN,IBD) ; Close Claim Event
"RTN","IBNCPDP4",9,0)
 N IBADT,IBTRKR,IBTRKRN,IBRXN,IBFIL,IBEABD,IBRES,IBLOCK,IBDUZ
"RTN","IBNCPDP4",10,0)
 N IBRXTYP,IBCR,DA,DIE,DR,IBUSR
"RTN","IBNCPDP4",11,0)
 S IBDUZ=.5
"RTN","IBNCPDP4",12,0)
 S IBRES=1,IBLOCK=0
"RTN","IBNCPDP4",13,0)
 ;
"RTN","IBNCPDP4",14,0)
 I 'DFN S IBRES="0^No patient" G CLOSEQ
"RTN","IBNCPDP4",15,0)
 S IBADT=+$G(IBD("FILL DATE")) I 'IBADT S IBRES="0^No fill date" G CLOSEQ
"RTN","IBNCPDP4",16,0)
 S IBRXN=+$G(IBD("PRESCRIPTION")) I 'IBRXN S IBRES="0^No Rx IEN" G CLOSEQ
"RTN","IBNCPDP4",17,0)
 S IBFIL=+$G(IBD("FILL NUMBER"),-1) I IBFIL<0 S IBRES="0^No fill number" G CLOSEQ
"RTN","IBNCPDP4",18,0)
 S IBCR=+$G(IBD("CLOSE REASON")) I 'IBCR S IBRES="0^No close reason" G CLOSEQ
"RTN","IBNCPDP4",19,0)
 I '$L($G(IBD("CLAIMID"))) S IBRES="0^Missing ECME Number" G CLOSEQ
"RTN","IBNCPDP4",20,0)
 S IBD("BCID")=IBD("CLAIMID")_";"_IBADT
"RTN","IBNCPDP4",21,0)
 S IBUSR=$S(+$G(IBD("USER"))=0:DUZ,1:IBD("USER"))
"RTN","IBNCPDP4",22,0)
 L +^DGCR(399,"AG",IBD("BCID")):5 S IBLOCK=$T
"RTN","IBNCPDP4",23,0)
 ;
"RTN","IBNCPDP4",24,0)
 ; -- claims tracking info
"RTN","IBNCPDP4",25,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBNCPDP4",26,0)
 ; date can't be before parameters
"RTN","IBNCPDP4",27,0)
 S $P(IBTRKR,"^")=$S('$P(IBTRKR,"^",4):0,+IBTRKR&(IBADT<+IBTRKR):0,1:IBADT)
"RTN","IBNCPDP4",28,0)
 S IBTRKRN=+$O(^IBT(356,"ARXFL",IBRXN,IBFIL,0))
"RTN","IBNCPDP4",29,0)
 ;
"RTN","IBNCPDP4",30,0)
 I 'IBTRKRN S IBRES="0^CT record not found" G CLOSEQ
"RTN","IBNCPDP4",31,0)
 ;
"RTN","IBNCPDP4",32,0)
 D NONBR^IBNCPNB(DFN,IBRXN,IBFIL,IBADT,IBCR,$G(IBD("DROP TO PAPER")),$G(IBD("RELEASE COPAY")),$G(IBD("CLOSE COMMENT")),IBUSR)
"RTN","IBNCPDP4",33,0)
 ;
"RTN","IBNCPDP4",34,0)
 S DIE="^IBT(356,",DA=IBTRKRN
"RTN","IBNCPDP4",35,0)
 ; add ECME #,ECME flag, remove total charges
"RTN","IBNCPDP4",36,0)
 S DR="1.1///"_IBD("CLAIMID")_";1.11///2;.29////@"
"RTN","IBNCPDP4",37,0)
 D ^DIE
"RTN","IBNCPDP4",38,0)
 ;
"RTN","IBNCPDP4",39,0)
 S IBRES=1 ; OK
"RTN","IBNCPDP4",40,0)
CLOSEQ ;
"RTN","IBNCPDP4",41,0)
 D LOG^IBNCPDP2("CLOSE",IBRES)
"RTN","IBNCPDP4",42,0)
 I IBLOCK L -^DGCR(399,"AG",IBD("BCID"))
"RTN","IBNCPDP4",43,0)
 Q IBRES
"RTN","IBNCPDP4",44,0)
 ;
"RTN","IBNCPDP4",45,0)
 ;
"RTN","IBNCPDP4",46,0)
RELEASE(DFN,IBD) ;
"RTN","IBNCPDP4",47,0)
 N IBRES,IBADT,IBRXN,IBFIL,IBRDT,IBLOCK,IBLOCK2,IBTRKR,IBTRKRN
"RTN","IBNCPDP4",48,0)
 N IBEABD,IBNBR,DA,DIE,DR,IBUSR
"RTN","IBNCPDP4",49,0)
 S IBLOCK=0
"RTN","IBNCPDP4",50,0)
 I 'DFN S IBRES="0^No patient" G RELQ
"RTN","IBNCPDP4",51,0)
 S IBADT=+$G(IBD("FILL DATE")) I 'IBADT S IBRES="0^No fill date" G RELQ
"RTN","IBNCPDP4",52,0)
 S IBRXN=+$G(IBD("PRESCRIPTION")) I 'IBRXN S IBRES="0^No Rx IEN" G RELQ
"RTN","IBNCPDP4",53,0)
 S IBFIL=+$G(IBD("FILL NUMBER"),-1) I IBFIL<0 S IBRES="0^No fill number" G RELQ
"RTN","IBNCPDP4",54,0)
 S IBRDT=+$G(IBD("RELEASE DATE"),-1) I 'IBRDT S IBRES="0^No release date" G RELQ
"RTN","IBNCPDP4",55,0)
 I '$L($G(IBD("CLAIMID"))) S IBRES="0^Missing ECME Number" G RELQ
"RTN","IBNCPDP4",56,0)
 S IBD("BCID")=IBD("CLAIMID")_";"_IBADT
"RTN","IBNCPDP4",57,0)
 S IBUSR=$S(+$G(IBD("USER"))=0:DUZ,1:IBD("USER"))
"RTN","IBNCPDP4",58,0)
 L +^DGCR(399,"AG",IBD("BCID")):5 S IBLOCK=$T
"RTN","IBNCPDP4",59,0)
 ; -- claims tracking info
"RTN","IBNCPDP4",60,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBNCPDP4",61,0)
 ; date can't be before parameters
"RTN","IBNCPDP4",62,0)
 S $P(IBTRKR,"^")=$S('$P(IBTRKR,"^",4):0,+IBTRKR&(IBADT<+IBTRKR):0,1:IBADT)
"RTN","IBNCPDP4",63,0)
 S IBTRKRN=+$O(^IBT(356,"ARXFL",IBRXN,IBFIL,0))
"RTN","IBNCPDP4",64,0)
 I 'IBTRKRN S IBRES="0^No CT record found." G RELQ
"RTN","IBNCPDP4",65,0)
 ;
"RTN","IBNCPDP4",66,0)
 ; Remove NBR from CT and set T+60 (if not billed yet)
"RTN","IBNCPDP4",67,0)
 ; Set ECME flags in CT
"RTN","IBNCPDP4",68,0)
 ;
"RTN","IBNCPDP4",69,0)
 L +^IBT(356,IBTRKRN):5 S IBLOCK2=$T
"RTN","IBNCPDP4",70,0)
 S DIE="^IBT(356,",DA=IBTRKRN,DR=""
"RTN","IBNCPDP4",71,0)
 S IBNBR=+$P($G(^IBT(356,IBTRKRN,0)),U,19)
"RTN","IBNCPDP4",72,0)
 ; Clean up "Rx not released"
"RTN","IBNCPDP4",73,0)
 I IBNBR,$P($G(^IBE(356.8,IBNBR,0)),U)="PRESCRIPTION NOT RELEASED" S DR=DR_".19////@;",IBNBR=""
"RTN","IBNCPDP4",74,0)
 ;
"RTN","IBNCPDP4",75,0)
 ; Set EABD if no bill and no NBR
"RTN","IBNCPDP4",76,0)
 I '$P($G(^IBT(356,IBTRKRN,0)),U,11),'IBNBR D
"RTN","IBNCPDP4",77,0)
 . S IBEABD=$$EABD^IBTUTL($O(^IBE(356.6,"AC",4,0)),IBADT)
"RTN","IBNCPDP4",78,0)
 . S:'IBEABD IBEABD=DT
"RTN","IBNCPDP4",79,0)
 . S IBEABD=$$FMADD^XLFDT(IBEABD,60)
"RTN","IBNCPDP4",80,0)
 . S DR=DR_".17////^S X=IBEABD;"
"RTN","IBNCPDP4",81,0)
 ;
"RTN","IBNCPDP4",82,0)
 ; Set ECME Flags
"RTN","IBNCPDP4",83,0)
 S DR=DR_"1.1////"_IBD("CLAIMID")_";"
"RTN","IBNCPDP4",84,0)
 ; Reject status will not be set here
"RTN","IBNCPDP4",85,0)
 ;
"RTN","IBNCPDP4",86,0)
 D ^DIE
"RTN","IBNCPDP4",87,0)
 S IBFDA(356,IBTRKRN_",",1.03)=DT  ; date last edited
"RTN","IBNCPDP4",88,0)
 S IBFDA(356,IBTRKRN_",",1.04)=IBUSR   ; last edited by
"RTN","IBNCPDP4",89,0)
 D FILE^DIE("","IBFDA"),MSG^DIALOG()
"RTN","IBNCPDP4",90,0)
 I IBLOCK2 L -^IBT(356,IBTRKRN)
"RTN","IBNCPDP4",91,0)
 ; 
"RTN","IBNCPDP4",92,0)
 S IBRES=1
"RTN","IBNCPDP4",93,0)
RELQ ;
"RTN","IBNCPDP4",94,0)
 D LOG^IBNCPDP2("RELEASE",IBRES)
"RTN","IBNCPDP4",95,0)
 I IBLOCK L -^DGCR(399,"AG",IBD("BCID"))
"RTN","IBNCPDP4",96,0)
 Q IBRES
"RTN","IBNCPDP4",97,0)
 ;
"RTN","IBNCPDP4",98,0)
SUBMIT(DFN,IBD) ;
"RTN","IBNCPDP4",99,0)
 N IBRES,IBLOCK,IBADT,IBRXN,IBFIL,IBRDT,IBNBR,IBFLAG,IBTRKR,IBTRKRN
"RTN","IBNCPDP4",100,0)
 N IBRESP,DA,DIE,DR,IBUSR
"RTN","IBNCPDP4",101,0)
 S IBLOCK=0
"RTN","IBNCPDP4",102,0)
 I 'DFN S IBRES="0^No patient" G SUBQ
"RTN","IBNCPDP4",103,0)
 S IBADT=+$G(IBD("FILL DATE")) I 'IBADT S IBRES="0^No fill date" G SUBQ
"RTN","IBNCPDP4",104,0)
 S IBRXN=+$G(IBD("PRESCRIPTION")) I 'IBRXN S IBRES="0^No Rx IEN" G SUBQ
"RTN","IBNCPDP4",105,0)
 S IBFIL=+$G(IBD("FILL NUMBER"),-1) I IBFIL<0 S IBRES="0^No fill number" G SUBQ
"RTN","IBNCPDP4",106,0)
 S IBRESP=$G(IBD("RESPONSE")) I IBRESP="" S IBRES="0^No response from the payer" G SUBQ
"RTN","IBNCPDP4",107,0)
 S IBRDT=+$G(IBD("RELEASE DATE"),-1)
"RTN","IBNCPDP4",108,0)
 I '$L($G(IBD("CLAIMID"))) S IBRES="0^Missing ECME Number" G SUBQ
"RTN","IBNCPDP4",109,0)
 S IBD("BCID")=IBD("CLAIMID")_";"_IBADT
"RTN","IBNCPDP4",110,0)
 S IBUSR=$S(+$G(IBD("USER"))=0:DUZ,1:IBD("USER"))
"RTN","IBNCPDP4",111,0)
 L +^DGCR(399,"AG",IBD("BCID")):5 S IBLOCK=$T
"RTN","IBNCPDP4",112,0)
 ;
"RTN","IBNCPDP4",113,0)
 ; -- claims tracking info
"RTN","IBNCPDP4",114,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBNCPDP4",115,0)
 ; date can't be before parameters
"RTN","IBNCPDP4",116,0)
 S $P(IBTRKR,"^")=$S('$P(IBTRKR,"^",4):0,+IBTRKR&(IBADT<+IBTRKR):0,1:IBADT)
"RTN","IBNCPDP4",117,0)
 S IBTRKRN=+$O(^IBT(356,"ARXFL",IBRXN,IBFIL,0))
"RTN","IBNCPDP4",118,0)
 ;
"RTN","IBNCPDP4",119,0)
 ; If the Rx is not released - set NBR in CT
"RTN","IBNCPDP4",120,0)
 I 'IBRDT,'$P($G(^IBT(356,IBTRKRN,0)),U,19) D NONBR^IBNCPNB(DFN,IBRXN,IBFIL,IBADT,"PRESCRIPTION NOT RELEASED","","","",IBUSR)
"RTN","IBNCPDP4",121,0)
 ;
"RTN","IBNCPDP4",122,0)
 ; If the Rx is released - clean up NBR in CT
"RTN","IBNCPDP4",123,0)
 I IBRDT,$P($G(^IBE(356.8,+$P($G(^IBT(356,IBTRKRN,0)),U,19),0)),U)="PRESCRIPTION NOT RELEASED" D NONBR^IBNCPNB(DFN,IBRXN,IBFIL,IBADT,"","","","",IBUSR)
"RTN","IBNCPDP4",124,0)
 ; Set ECME fields in CT
"RTN","IBNCPDP4",125,0)
 S DIE="^IBT(356,",DA=IBTRKRN
"RTN","IBNCPDP4",126,0)
 S IBFLAG=$S(IBRESP["REJECT":1,1:0)
"RTN","IBNCPDP4",127,0)
 S DR="1.1///"_IBD("CLAIMID")_";1.11///"_IBFLAG
"RTN","IBNCPDP4",128,0)
 D ^DIE
"RTN","IBNCPDP4",129,0)
 S IBRES=1
"RTN","IBNCPDP4",130,0)
SUBQ ;
"RTN","IBNCPDP4",131,0)
 D LOG^IBNCPDP2("SUBMIT",IBRES)
"RTN","IBNCPDP4",132,0)
 I IBLOCK L -^DGCR(399,"AG",IBD("BCID"))
"RTN","IBNCPDP4",133,0)
 Q IBRES
"RTN","IBNCPDP4",134,0)
 ;
"RTN","IBNCPDP4",135,0)
 ;
"RTN","IBNCPDP4",136,0)
REOPEN(DFN,IBD) ;
"RTN","IBNCPDP4",137,0)
 N IBRES,IBADT,IBRXN,IBFIL,IBRDT,IBLOCK,IBLOCK2,IBTRKRN
"RTN","IBNCPDP4",138,0)
 N IBEABD,IBNBR,DA,DIE,DR,IBUSR,IBEABD
"RTN","IBNCPDP4",139,0)
 S (IBLOCK,IBLOCK2)=0
"RTN","IBNCPDP4",140,0)
 I 'DFN S IBRES="0^No patient" G REOPQ
"RTN","IBNCPDP4",141,0)
 S IBADT=+$G(IBD("FILL DATE")) I 'IBADT S IBRES="0^No fill date" G REOPQ
"RTN","IBNCPDP4",142,0)
 S IBRXN=+$G(IBD("PRESCRIPTION")) I 'IBRXN S IBRES="0^No Rx IEN" G REOPQ
"RTN","IBNCPDP4",143,0)
 S IBFIL=+$G(IBD("FILL NUMBER"),-1) I IBFIL<0 S IBRES="0^No fill number" G REOPQ
"RTN","IBNCPDP4",144,0)
 I '$L($G(IBD("CLAIMID"))) S IBRES="0^Missing ECME Number" G REOPQ
"RTN","IBNCPDP4",145,0)
 S IBRDT=$$RXRLDT^PSOBPSUT(IBRXN,IBFIL)  ; release date (if null is returned then Rx is not released)
"RTN","IBNCPDP4",146,0)
 S IBD("BCID")=IBD("CLAIMID")_";"_IBADT
"RTN","IBNCPDP4",147,0)
 S IBUSR=$S(+$G(IBD("USER"))=0:DUZ,1:IBD("USER"))
"RTN","IBNCPDP4",148,0)
 L +^DGCR(399,"AG",IBD("BCID")):5 S IBLOCK=$T
"RTN","IBNCPDP4",149,0)
 ;
"RTN","IBNCPDP4",150,0)
 S IBTRKRN=+$O(^IBT(356,"ARXFL",IBRXN,IBFIL,0))  ;get the claim entry associated with the Rx fill (or refill)
"RTN","IBNCPDP4",151,0)
 L +^IBT(356,IBTRKRN):5 S IBLOCK2=$T
"RTN","IBNCPDP4",152,0)
 S DIE="^IBT(356,",DA=IBTRKRN
"RTN","IBNCPDP4",153,0)
 ;
"RTN","IBNCPDP4",154,0)
 I IBRDT D   ; if Rx released assign earliest autobill date 
"RTN","IBNCPDP4",155,0)
 . S IBEABD=$$EABD^IBTUTL($O(^IBE(356.6,"AC",4,0)),IBADT)
"RTN","IBNCPDP4",156,0)
 . S:'IBEABD IBEABD=DT
"RTN","IBNCPDP4",157,0)
 . S IBEABD=$$FMADD^XLFDT(IBEABD,60)
"RTN","IBNCPDP4",158,0)
 ;
"RTN","IBNCPDP4",159,0)
 N IBFDA
"RTN","IBNCPDP4",160,0)
 S IBFDA(356,IBTRKRN_",",.19)=$S('IBRDT:$O(^IBE(356.8,"B","PRESCRIPTION NOT RELEASED","")),1:"@")  ;non-billable reason
"RTN","IBNCPDP4",161,0)
 D FILE^DIE("","IBFDA"),MSG^DIALOG()
"RTN","IBNCPDP4",162,0)
 K IBFDA
"RTN","IBNCPDP4",163,0)
 S IBFDA(356,IBTRKRN_",",.17)=$S('IBRDT:"@",1:IBEABD)  ; earliest autobill date
"RTN","IBNCPDP4",164,0)
 S IBFDA(356,IBTRKRN_",",1.08)="@"  ;additional comments
"RTN","IBNCPDP4",165,0)
 S IBFDA(356,IBTRKRN_",",1.11)=0   ; reject flag - reset to "no"
"RTN","IBNCPDP4",166,0)
 S IBFDA(356,IBTRKRN_",",1.03)=DT  ; date last edited
"RTN","IBNCPDP4",167,0)
 S IBFDA(356,IBTRKRN_",",1.04)=IBUSR   ; last edited by
"RTN","IBNCPDP4",168,0)
 D FILE^DIE("","IBFDA"),MSG^DIALOG()
"RTN","IBNCPDP4",169,0)
 ; 
"RTN","IBNCPDP4",170,0)
 S IBRES=1
"RTN","IBNCPDP4",171,0)
REOPQ ;
"RTN","IBNCPDP4",172,0)
 D LOG^IBNCPDP2("REOPEN",IBRES)
"RTN","IBNCPDP4",173,0)
 I IBLOCK L -^DGCR(399,"AG",IBD("BCID"))
"RTN","IBNCPDP4",174,0)
 I IBLOCK2 L -^IBT(356,IBTRKRN)
"RTN","IBNCPDP4",175,0)
 Q IBRES
"RTN","IBNCPDP4",176,0)
 ;IBNCPDP4
"RTN","IBNCPDPE")
0^15^B15029269
"RTN","IBNCPDPE",1,0)
IBNCPDPE ;DALOI/AAT - NCPDP BILLING EVENTS REPORT ;10-JUN-2003
"RTN","IBNCPDPE",2,0)
 ;;2.0;INTEGRATED BILLING;**276,342**;21-MAR-94;Build 18
"RTN","IBNCPDPE",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBNCPDPE",4,0)
 ;
"RTN","IBNCPDPE",5,0)
DATE ;
"RTN","IBNCPDPE",6,0)
 S (IBBDT,IBEDT)=DT
"RTN","IBNCPDPE",7,0)
 S %DT="AEX"
"RTN","IBNCPDPE",8,0)
 S %DT("A")="START WITH DATE: ",%DT("B")="TODAY"
"RTN","IBNCPDPE",9,0)
 D ^%DT K %DT
"RTN","IBNCPDPE",10,0)
 I Y<0 S IBQ=1 Q
"RTN","IBNCPDPE",11,0)
 S IBBDT=+Y
"RTN","IBNCPDPE",12,0)
 S %DT="AEX"
"RTN","IBNCPDPE",13,0)
 S %DT("A")="GO TO DATE: ",%DT("B")="TODAY"
"RTN","IBNCPDPE",14,0)
 D ^%DT K %DT
"RTN","IBNCPDPE",15,0)
 I Y<0 S IBQ=1 Q
"RTN","IBNCPDPE",16,0)
 S IBEDT=+Y
"RTN","IBNCPDPE",17,0)
 Q
"RTN","IBNCPDPE",18,0)
 ;
"RTN","IBNCPDPE",19,0)
MODE ;
"RTN","IBNCPDPE",20,0)
 N DIR,DIC,DIRUT,DUOUT
"RTN","IBNCPDPE",21,0)
 S (IBM1,IBM2,IBM3)="A"
"RTN","IBNCPDPE",22,0)
 S DIR(0)="S^P:SINGLE PATIENT;R:SINGLE RX;E:SINGLE ECME #;A:ALL ACTIVITY"
"RTN","IBNCPDPE",23,0)
 S DIR("A")="SINGLE (P)ATIENT, SINGLE (R)X, SINGLE (E)CME #, (A)LL ACTIVITY"
"RTN","IBNCPDPE",24,0)
 S DIR("B")="ALL"
"RTN","IBNCPDPE",25,0)
 D ^DIR K DIR I $D(DIRUT) S IBQ=1 Q
"RTN","IBNCPDPE",26,0)
 S IBM1=Y
"RTN","IBNCPDPE",27,0)
 I IBM1="P" S DIC="^DPT(",DIC(0)="AEQMN" D ^DIC Q:$D(DUOUT)  S IBPAT=$S(Y>0:+Y,1:0) I 'IBPAT W "   ALL" S IBM1="A"
"RTN","IBNCPDPE",28,0)
 I IBM1="R" S DIC="^PSRX(",DIC(0)="AEQMN" D ^DIC Q:$D(DUOUT)  S IBRX=$S(Y>0:+Y,1:0) I 'IBRX W "   ALL" S IBM1="A"
"RTN","IBNCPDPE",29,0)
 I IBM1="E" S DIR(0)="FO^7:7^I X'?1.7N W !!,""Cannot contain alpha characters"" K X",DIR("A")="Enter ECME #" D ^DIR Q:$D(DUOUT)  S IBECME=$S(+Y>0:Y,1:0) I 'IBECME W "   ALL" S IBM1="A"
"RTN","IBNCPDPE",30,0)
 S IBM2="B"
"RTN","IBNCPDPE",31,0)
 ; if "All"
"RTN","IBNCPDPE",32,0)
 I IBM1="A" D  Q:IBQ
"RTN","IBNCPDPE",33,0)
 .S DIR(0)="S^E:ECME BILLABLE;N:NON ECME BILLABLE;B:BOTH"
"RTN","IBNCPDPE",34,0)
 .S DIR("A")="(E)CME BILLABLE;(N)ON ECME BILLABLE;(B)OTH"
"RTN","IBNCPDPE",35,0)
 .S DIR("B")="BOTH"
"RTN","IBNCPDPE",36,0)
 .D ^DIR K DIR I $D(DIRUT) S IBQ=1 Q
"RTN","IBNCPDPE",37,0)
 .S IBM2=Y
"RTN","IBNCPDPE",38,0)
 ;
"RTN","IBNCPDPE",39,0)
 ;Mail/Window/CMOP?
"RTN","IBNCPDPE",40,0)
 S DIR(0)="S^M:MAIL;W:WINDOW;C:CMOP;A:ALL"
"RTN","IBNCPDPE",41,0)
 S DIR("A")="(M)AIL, (W)INDOW, (C)CMOP, (A)LL"
"RTN","IBNCPDPE",42,0)
 S DIR("B")="ALL"
"RTN","IBNCPDPE",43,0)
 D ^DIR K DIR I $D(DIRUT) S IBQ=1 Q
"RTN","IBNCPDPE",44,0)
 S IBM3=Y
"RTN","IBNCPDPE",45,0)
 ;
"RTN","IBNCPDPE",46,0)
 S DIR(0)="S^S:SUMMARY REPORT;D:DETAILED REPORT"
"RTN","IBNCPDPE",47,0)
 S DIR("A")="(S)UMMARY REPORT, (D)ETAILED REPORT"
"RTN","IBNCPDPE",48,0)
 S DIR("B")="SUMMARY REPORT"
"RTN","IBNCPDPE",49,0)
 D ^DIR K DIR I $D(DIRUT) S IBQ=1 Q
"RTN","IBNCPDPE",50,0)
 S IBDTL=($E(Y)="D")
"RTN","IBNCPDPE",51,0)
 Q
"RTN","IBNCPDPE",52,0)
 ;
"RTN","IBNCPDPE",53,0)
TESTDATA() ;
"RTN","IBNCPDPE",54,0)
 N Y
"RTN","IBNCPDPE",55,0)
 S Y=$$HAVEDATA()
"RTN","IBNCPDPE",56,0)
 I 'Y W !!,"No data found in the specified period.",!
"RTN","IBNCPDPE",57,0)
 Q Y
"RTN","IBNCPDPE",58,0)
 ;
"RTN","IBNCPDPE",59,0)
HAVEDATA() ;
"RTN","IBNCPDPE",60,0)
 N Z
"RTN","IBNCPDPE",61,0)
 I $D(^IBCNR(366.14,"B",IBBDT)) Q 1
"RTN","IBNCPDPE",62,0)
 S Z=+$O(^IBCNR(366.14,"B",IBBDT))
"RTN","IBNCPDPE",63,0)
 I Z=0 Q 0
"RTN","IBNCPDPE",64,0)
 I Z>IBEDT Q 0
"RTN","IBNCPDPE",65,0)
 Q 1
"RTN","IBNCPDPE",66,0)
 ;
"RTN","IBNCPDPE",67,0)
DEVICE ;
"RTN","IBNCPDPE",68,0)
 N DIR,DIRUT,POP,ZTRTN,ZTIO,ZTSAVE,ZTDESC,%ZIS,ZTSK
"RTN","IBNCPDPE",69,0)
 S %ZIS="QM"
"RTN","IBNCPDPE",70,0)
 W ! D ^%ZIS
"RTN","IBNCPDPE",71,0)
 I POP S IBQ=1 Q
"RTN","IBNCPDPE",72,0)
 S IBSCR=$S($E($G(IOST),1,2)="C-":1,1:0)
"RTN","IBNCPDPE",73,0)
 ;
"RTN","IBNCPDPE",74,0)
 I $D(IO("Q")) D  S IBQ=1
"RTN","IBNCPDPE",75,0)
 . S ZTRTN="START^IBNCPEV"
"RTN","IBNCPDPE",76,0)
 . S ZTIO=ION
"RTN","IBNCPDPE",77,0)
 . S ZTSAVE("IB*")=""
"RTN","IBNCPDPE",78,0)
 . S ZTDESC="IB ECME BILLING EVENTS REPORT"
"RTN","IBNCPDPE",79,0)
 . D ^%ZTLOAD
"RTN","IBNCPDPE",80,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","IBNCPDPE",81,0)
 . D HOME^%ZIS
"RTN","IBNCPDPE",82,0)
 U IO
"RTN","IBNCPDPE",83,0)
 Q
"RTN","IBNCPDPE",84,0)
 ;------ added for the User screen --------
"RTN","IBNCPDPE",85,0)
 ;User Screen Entry point (to call from ECME User Screen)
"RTN","IBNCPDPE",86,0)
 ;IBMODE:
"RTN","IBNCPDPE",87,0)
 ; P-patient
"RTN","IBNCPDPE",88,0)
 ; R-Rx
"RTN","IBNCPDPE",89,0)
 ;IBVAL - patient DFN or RX ien (#52)
"RTN","IBNCPDPE",90,0)
 ;
"RTN","IBNCPDPE",91,0)
USRSCREN(IBMODE,IBVAL) ;
"RTN","IBNCPDPE",92,0)
 Q:$$PFSSON^IBNCPDPI()  ;quit if PFSS is ON
"RTN","IBNCPDPE",93,0)
 N IBPAT,IBRX,IBBDT,IBEDT,Y,IBM1,IBM2,IBM3,IBQ,IBSCR,IBPAGE,IBDTL
"RTN","IBNCPDPE",94,0)
 S (IBPAT,IBRX,IBQ,IBSCR,IBPAGE,IBDTL)=0
"RTN","IBNCPDPE",95,0)
 S IBM1=IBMODE
"RTN","IBNCPDPE",96,0)
 I IBM1="P" S IBPAT=+IBVAL
"RTN","IBNCPDPE",97,0)
 I IBM1="R" S IBRX=+IBVAL
"RTN","IBNCPDPE",98,0)
 ;date
"RTN","IBNCPDPE",99,0)
 F  D DATE Q:IBQ  Q:$$TESTDATA
"RTN","IBNCPDPE",100,0)
 Q:IBQ
"RTN","IBNCPDPE",101,0)
 D MODE2 Q:IBQ
"RTN","IBNCPDPE",102,0)
 D DEVICE Q:IBQ
"RTN","IBNCPDPE",103,0)
 ;D START^IBNCPER
"RTN","IBNCPDPE",104,0)
 D START^IBNCPEV
"RTN","IBNCPDPE",105,0)
 D ^%ZISC
"RTN","IBNCPDPE",106,0)
 I IBQ W !,"Cancelled"
"RTN","IBNCPDPE",107,0)
 Q
"RTN","IBNCPDPE",108,0)
 ;
"RTN","IBNCPDPE",109,0)
MODE2 ;
"RTN","IBNCPDPE",110,0)
 N DIR,DIC,DIRUT,DUOUT
"RTN","IBNCPDPE",111,0)
 S (IBM1,IBM2,IBM3)="A"
"RTN","IBNCPDPE",112,0)
 S IBM2="B"
"RTN","IBNCPDPE",113,0)
 ;
"RTN","IBNCPDPE",114,0)
 ;Mail/Window/CMOP?
"RTN","IBNCPDPE",115,0)
 S DIR(0)="S^M:MAIL;W:WINDOW;C:CMOP;A:ALL"
"RTN","IBNCPDPE",116,0)
 S DIR("A")="(M)AIL, (W)INDOW, (C)CMOP, (A)LL"
"RTN","IBNCPDPE",117,0)
 S DIR("B")="ALL"
"RTN","IBNCPDPE",118,0)
 D ^DIR K DIR I $D(DIRUT) S IBQ=1 Q
"RTN","IBNCPDPE",119,0)
 S IBM3=Y
"RTN","IBNCPDPE",120,0)
 ;
"RTN","IBNCPDPE",121,0)
 S DIR(0)="S^S:SUMMARY REPORT;D:DETAILED REPORT"
"RTN","IBNCPDPE",122,0)
 S DIR("A")="(S)UMMARY REPORT, (D)ETAILED REPORT"
"RTN","IBNCPDPE",123,0)
 S DIR("B")="SUMMARY REPORT"
"RTN","IBNCPDPE",124,0)
 D ^DIR K DIR I $D(DIRUT) S IBQ=1 Q
"RTN","IBNCPDPE",125,0)
 S IBDTL=($E(Y)="D")
"RTN","IBNCPDPE",126,0)
 Q
"RTN","IBNCPDPE",127,0)
 ;IBNCPDPE
"RTN","IBNCPEB")
0^5^B25550057
"RTN","IBNCPEB",1,0)
IBNCPEB ;WOIFO/AAT - BULLETINS FOR NCPDP ;05-NOV-04
"RTN","IBNCPEB",2,0)
 ;;2.0;INTEGRATED BILLING;**276,342**;21-MAR-94;Build 18
"RTN","IBNCPEB",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBNCPEB",4,0)
 Q
"RTN","IBNCPEB",5,0)
 ;
"RTN","IBNCPEB",6,0)
BULL(DFN,IBD,IBERR,IBIFN) ;Process NCPDP Error Messages.
"RTN","IBNCPEB",7,0)
 N IBC,IBT,IBPT,XMSUB,XMY,XMTEXT,XMDUZ,IBMSGT,IBI,IBGRP,IBDUZ,IBRXNO
"RTN","IBNCPEB",8,0)
 ; Input: same as RX^IBNCPDP2()
"RTN","IBNCPEB",9,0)
 ;
"RTN","IBNCPEB",10,0)
 S IBDUZ=$G(IBD("FILLED BY"))
"RTN","IBNCPEB",11,0)
 S IBRXNO=$G(IBD("RX NO"),"UNKNOWN")
"RTN","IBNCPEB",12,0)
 S IBPT=$$PT^IBEFUNC(DFN)
"RTN","IBNCPEB",13,0)
 S XMSUB="NCPDP BILLING ERROR - RX #"_IBRXNO
"RTN","IBNCPEB",14,0)
 S IBC=0
"RTN","IBNCPEB",15,0)
 D T("An error occurred while creating IB Third Party Bill for RX #"_IBRXNO)
"RTN","IBNCPEB",16,0)
 I $G(IBIFN) D T("IB Bill #"_$P($G(^DGCR(399,+IBIFN,0)),U)_" created with errors.")
"RTN","IBNCPEB",17,0)
 D T()
"RTN","IBNCPEB",18,0)
 D T("The following error was encountered: "_$P(IBERR,U,2))
"RTN","IBNCPEB",19,0)
 D T()
"RTN","IBNCPEB",20,0)
 D T("      Patient: "_$S($L(IBPT):$P(IBPT,U)_"       Pt. ID: "_$P(IBPT,U,2),1:"Not Defined"))
"RTN","IBNCPEB",21,0)
 D T(" Rx filled by: "_$P($G(^VA(200,+IBDUZ,0)),U))
"RTN","IBNCPEB",22,0)
 D T(" Prescription: "_IBRXNO)
"RTN","IBNCPEB",23,0)
 D T("  Fill Number: "_$G(IBD("FILL NUMBER")))
"RTN","IBNCPEB",24,0)
 D T("    Fill Date: "_$G(IBD("FILL DATE")))
"RTN","IBNCPEB",25,0)
 D T("   Group Plan: "_$P($G(^IBA(355.3,+$G(IBD("PLAN")),0)),U)_"  (IEN="_+$G(IBD("PLAN"))_")")
"RTN","IBNCPEB",26,0)
 D T("         Drug: "_$P($G(^PSDRUG(+$G(IBD("DRUG")),0)),U))
"RTN","IBNCPEB",27,0)
 D T("Amount Billed: "_$J($G(IBD("BILLED")),5,2))
"RTN","IBNCPEB",28,0)
 D T("  Amount Paid: "_$J($G(IBD("PAID")),5,2))
"RTN","IBNCPEB",29,0)
 D T()
"RTN","IBNCPEB",30,0)
 D T("Please review the circumstances surrounding this error and make necessary")
"RTN","IBNCPEB",31,0)
 D T("corrections.")
"RTN","IBNCPEB",32,0)
 S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
"RTN","IBNCPEB",33,0)
 S XMY("G.IB ERROR")=""
"RTN","IBNCPEB",34,0)
 D ZXMD
"RTN","IBNCPEB",35,0)
 Q
"RTN","IBNCPEB",36,0)
 ;
"RTN","IBNCPEB",37,0)
 ;call mailman in background (using taskman)
"RTN","IBNCPEB",38,0)
ZXMD ;
"RTN","IBNCPEB",39,0)
 N ZTIO,ZTRTN,ZTDTH,ZTSAVE,ZTDESC
"RTN","IBNCPEB",40,0)
 N %,%H,%I,X
"RTN","IBNCPEB",41,0)
 D NOW^%DTC
"RTN","IBNCPEB",42,0)
 S ZTIO="",ZTDTH=%,ZTDESC="NCPDP BILLING ERROR BULLETIN"
"RTN","IBNCPEB",43,0)
 S ZTSAVE("IBT*")="",ZTSAVE("XM*")=""
"RTN","IBNCPEB",44,0)
 S ZTRTN="^XMD"
"RTN","IBNCPEB",45,0)
 D ^%ZTLOAD
"RTN","IBNCPEB",46,0)
 Q
"RTN","IBNCPEB",47,0)
 ;
"RTN","IBNCPEB",48,0)
T(IBTXT) ; Add text to the message
"RTN","IBNCPEB",49,0)
 S IBC=IBC+1,IBT(IBC)=$G(IBTXT," ")
"RTN","IBNCPEB",50,0)
 Q
"RTN","IBNCPEB",51,0)
 ;
"RTN","IBNCPEB",52,0)
 ;-------------------------
"RTN","IBNCPEB",53,0)
 ;Release charges off hold bulletin
"RTN","IBNCPEB",54,0)
RELBUL(DFN,IBRX,IBFIL,IBADT,IBACT,IBCR,IBCC,IBIFN,IBRETR) ;
"RTN","IBNCPEB",55,0)
 ; Input:
"RTN","IBNCPEB",56,0)
 ;   DFN - Patient
"RTN","IBNCPEB",57,0)
 ;   IBRX - Rx IEN
"RTN","IBNCPEB",58,0)
 ;   IBFIL - Refill#
"RTN","IBNCPEB",59,0)
 ;   IBADT - Fill date
"RTN","IBNCPEB",60,0)
 ;   IBACT
"RTN","IBNCPEB",61,0)
 ;    -1  if ^IBR error - when the charge was sent to AR
"RTN","IBNCPEB",62,0)
 ;    0   == charge was not found 
"RTN","IBNCPEB",63,0)
 ;   IBCR - Close Reason code (.01 of BPS CLOSE REASON)
"RTN","IBNCPEB",64,0)
 ;   IBCC - Close Reason Comment
"RTN","IBNCPEB",65,0)
 ;   IBIFN - 3rd party bill IEN
"RTN","IBNCPEB",66,0)
 ;   IBRETR - attempt # after which a bulletion was sent
"RTN","IBNCPEB",67,0)
 N IBT,IBC,IBGRP,XMSUB,XMDUZ,XMY,XMTEXT,VAERR,VADM,X,VA
"RTN","IBNCPEB",68,0)
 N IBNAME,IBAGE,IBPID,IBBID,IBRXN
"RTN","IBNCPEB",69,0)
 D DEM^VADPT ; get patient demographic data
"RTN","IBNCPEB",70,0)
 I VAERR K VADM
"RTN","IBNCPEB",71,0)
 S IBNAME=$$PR($G(VADM(1)),26)
"RTN","IBNCPEB",72,0)
 S IBAGE=$$PR($G(VADM(4)),3)
"RTN","IBNCPEB",73,0)
 S IBPID=$G(VA("PID"))
"RTN","IBNCPEB",74,0)
 S IBBID=$G(VA("BID"))
"RTN","IBNCPEB",75,0)
 S XMSUB=$E(IBNAME,1,8)_"("_IBBID_")"_" PATIENT CHRG NOT RELEASED"_"-"_$E($$MCDIV(IBRX,IBFIL),1,11)
"RTN","IBNCPEB",76,0)
 ;
"RTN","IBNCPEB",77,0)
 S IBC=0
"RTN","IBNCPEB",78,0)
 ;include a standard CHRG NOT RELEASED text
"RTN","IBNCPEB",79,0)
 D T("The following charge has not been released from HOLD. Copay was not released")
"RTN","IBNCPEB",80,0)
 D T("due to technical problems"_$S($G(IBACT)=-1:" with passing the payment to AR.",1:"."))
"RTN","IBNCPEB",81,0)
 D T("Please review manually and release if necessary.")
"RTN","IBNCPEB",82,0)
 ;if release of copay attempt was due to claim closing process - include a close reason
"RTN","IBNCPEB",83,0)
 I IBCR D T("Note: the e-pharmacy claim was closed by OPECC as '"_$$REASON^IBNCPDPU(IBCR)_"'")
"RTN","IBNCPEB",84,0)
 I $G(IBCC)'="" D T("Additional comment: "_IBCC)
"RTN","IBNCPEB",85,0)
 D T()
"RTN","IBNCPEB",86,0)
 D T("Name: "_IBNAME_"   Age    : "_IBAGE_"       Pt. ID: "_IBPID)
"RTN","IBNCPEB",87,0)
 S IBRXN=$P($G(^PSRX(IBRX,0)),U)
"RTN","IBNCPEB",88,0)
 D T("Rx #: "_$$PR(IBRXN_$S(IBFIL:" ("_IBFIL_")",1:""),28)_" Fill Dt: "_$$DAT1^IBOUTL(IBADT))
"RTN","IBNCPEB",89,0)
 D T()
"RTN","IBNCPEB",90,0)
 D:$G(IBRETR)>0 T("Attempts to release a copay from hold: "_$G(IBRETR))
"RTN","IBNCPEB",91,0)
 ;D CHRG
"RTN","IBNCPEB",92,0)
 ; Transmit mail
"RTN","IBNCPEB",93,0)
 S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
"RTN","IBNCPEB",94,0)
 S IBGRP=$P($G(^XMB(3.8,+$P($G(^IBE(350.9,1,0)),U,11),0)),U)
"RTN","IBNCPEB",95,0)
 I IBGRP]"" S XMY("G."_IBGRP_"@"_^XMB("NETNAME"))=""
"RTN","IBNCPEB",96,0)
 D ^XMD
"RTN","IBNCPEB",97,0)
 Q
"RTN","IBNCPEB",98,0)
 ;
"RTN","IBNCPEB",99,0)
CHRG ; gets charge data and sets up charge lines
"RTN","IBNCPEB",100,0)
 N IBTYP,IBFR,IBTO,IBX,IBX1,IBRXN,IBRF,IENS
"RTN","IBNCPEB",101,0)
 S IBX=$G(^IB(IBACT,0))
"RTN","IBNCPEB",102,0)
 S IBX1=$G(^IB(IBACT,1))
"RTN","IBNCPEB",103,0)
 S IBFR=$$DAT1^IBOUTL($S($P(IBX,U,14)'="":($P(IBX,U,14)),1:$P(IBX1,U,2)))
"RTN","IBNCPEB",104,0)
 S IBTO=$$DAT1^IBOUTL($S($P(IBX,U,15)'="":($P(IBX,U,15)),1:$P(IBX1,U,2)))
"RTN","IBNCPEB",105,0)
 S IBRXN=$P($G(^PSRX(IBRX,0)),U) ;$P($P(IBX,U,8),"-")
"RTN","IBNCPEB",106,0)
 S IBTYP=$P(IBX,U,3)
"RTN","IBNCPEB",107,0)
 S:IBTYP IBTYP=$P($G(^IBE(350.1,IBTYP,0)),U,3)
"RTN","IBNCPEB",108,0)
 S:IBTYP IBTYP=$P($$CATN^PRCAFN(IBTYP),U,2)
"RTN","IBNCPEB",109,0)
 D T("Type: "_$$PR(IBTYP,28)_" Amount : $"_$J(+$P(IBX,U,7),0,2))
"RTN","IBNCPEB",110,0)
 D T("From: "_$$PR(IBFR,28)_" To     : "_IBTO)
"RTN","IBNCPEB",111,0)
 D T("Rx #: "_$$PR(IBRXN_$S(IBFIL:" ("_IBFIL_")",1:""),28)_" Fill Dt: "_$$DAT1^IBOUTL(IBADT))
"RTN","IBNCPEB",112,0)
 D T()
"RTN","IBNCPEB",113,0)
 D T("REFERENCE NUMBER : "_$P(IBX,U))
"RTN","IBNCPEB",114,0)
 D T("FIRST PARTY BILL : "_$P(IBX,U,11))
"RTN","IBNCPEB",115,0)
 I $G(IBIFN) D T("THIRD PARTY BILL : "_$P($G(^PRCA(430,+IBIFN,0)),U))
"RTN","IBNCPEB",116,0)
 Q
"RTN","IBNCPEB",117,0)
 ;
"RTN","IBNCPEB",118,0)
PR(STR,LEN) ; pad right
"RTN","IBNCPEB",119,0)
 N B S STR=$E(STR,1,LEN),$P(B," ",LEN-$L(STR))=" "
"RTN","IBNCPEB",120,0)
 Q STR_$G(B)
"RTN","IBNCPEB",121,0)
 ;
"RTN","IBNCPEB",122,0)
 ;MC Division for the IB
"RTN","IBNCPEB",123,0)
MCDIV(IBRX,IBFIL) ; Get MC DIVISION name from the Rx/Fill
"RTN","IBNCPEB",124,0)
 N IBDIV,IBINST,IBMCDIV,IBNAM,IBUNK
"RTN","IBNCPEB",125,0)
 S IBUNK="DIV UNKNWN"
"RTN","IBNCPEB",126,0)
 ; outpatient division
"RTN","IBNCPEB",127,0)
 I 'IBFIL S IBDIV=+$P($G(^PSRX(IBRX,2)),U,9)
"RTN","IBNCPEB",128,0)
 E  S IBDIV=+$P($G(^PSRX(IBRX,1,IBFIL,0)),U,9)
"RTN","IBNCPEB",129,0)
 I 'IBDIV Q IBUNK
"RTN","IBNCPEB",130,0)
 ; related institution
"RTN","IBNCPEB",131,0)
 S IBINST=+$P($G(^PS(59,IBDIV,"INI")),U) Q:'IBINST IBUNK
"RTN","IBNCPEB",132,0)
 S IBMCDIV=+$O(^DG(40.8,"AD",IBINST,0)) ; medical center division
"RTN","IBNCPEB",133,0)
 I 'IBMCDIV Q IBUNK
"RTN","IBNCPEB",134,0)
 S IBNAM=$P($G(^DG(40.8,IBMCDIV,0)),U)
"RTN","IBNCPEB",135,0)
 Q $S(IBNAM="":IBUNK,1:IBNAM)
"RTN","IBNCPEB",136,0)
 ;
"RTN","IBNCPEB",137,0)
 ;IBNCPEB
"RTN","IBNCPER")
1^19
"RTN","IBNCPER1")
1^20
"RTN","IBNCPEV")
0^7^B84188155
"RTN","IBNCPEV",1,0)
IBNCPEV ;DALOI/SS - NCPDP BILLING EVENTS REPORT ;21-MAR-2006
"RTN","IBNCPEV",2,0)
 ;;2.0;INTEGRATED BILLING;**342**;21-MAR-94;Build 18
"RTN","IBNCPEV",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBNCPEV",4,0)
 ;
"RTN","IBNCPEV",5,0)
 Q
"RTN","IBNCPEV",6,0)
RPT ;
"RTN","IBNCPEV",7,0)
 ;
"RTN","IBNCPEV",8,0)
 N IBPAT,IBRX,IBBDT,IBEDT,Y,IBM1,IBM2,IBM3,IBQ,IBSCR,IBPAGE,IBDTL
"RTN","IBNCPEV",9,0)
 N IBECME
"RTN","IBNCPEV",10,0)
 D SETVARS^IBNCPEV1
"RTN","IBNCPEV",11,0)
 Q:IBQ
"RTN","IBNCPEV",12,0)
 D START
"RTN","IBNCPEV",13,0)
 D ^%ZISC
"RTN","IBNCPEV",14,0)
 I IBQ W !,"Cancelled"
"RTN","IBNCPEV",15,0)
 Q
"RTN","IBNCPEV",16,0)
 ;
"RTN","IBNCPEV",17,0)
START ;
"RTN","IBNCPEV",18,0)
 N REF,IBFROM,IBTO,IBI,IBN,IBRX1,IBFN,IBNDX,IB1ST,IBNUM,X,IBSC,IBNB
"RTN","IBNCPEV",19,0)
 N Z,Z1
"RTN","IBNCPEV",20,0)
 ;Constants
"RTN","IBNCPEV",21,0)
 S IBSC="STATUS CHECK",IBNB="Not ECME billable: ",IBNDX="IBNCPDP-"
"RTN","IBNCPEV",22,0)
 ;get the first date
"RTN","IBNCPEV",23,0)
 S IBFROM=$O(^IBCNR(366.14,"B",IBBDT-1)) Q:+IBFROM=0
"RTN","IBNCPEV",24,0)
 ;get the last date
"RTN","IBNCPEV",25,0)
 S IBTO=$O(^IBCNR(366.14,"B",IBEDT+1),-1) Q:+IBTO=0
"RTN","IBNCPEV",26,0)
 ;
"RTN","IBNCPEV",27,0)
 S REF=$NA(^TMP($J,"IBNCPDPE"))
"RTN","IBNCPEV",28,0)
 ;
"RTN","IBNCPEV",29,0)
 K @REF
"RTN","IBNCPEV",30,0)
 ;
"RTN","IBNCPEV",31,0)
 I +$G(IBECME) S IBRX=$$GETRX^IBNCPEV1(IBECME,IBFROM,IBTO) I 'IBRX  W !!,"No data found for the specified date range and ECME #" Q  ; no match with ECME #
"RTN","IBNCPEV",32,0)
 ;collect
"RTN","IBNCPEV",33,0)
 N IBDTIEN,IBRXIEN,IBZ0,IBZ1,IBZ2,IBDFN,IBEVNT
"RTN","IBNCPEV",34,0)
 S IBI=IBFROM-1
"RTN","IBNCPEV",35,0)
 F  S IBI=$O(^IBCNR(366.14,"B",IBI)) Q:+IBI=0  Q:IBI>IBTO  D
"RTN","IBNCPEV",36,0)
 . S IBDTIEN=$O(^IBCNR(366.14,"B",IBI,0))
"RTN","IBNCPEV",37,0)
 . S IBN=0 F  S IBN=$O(^IBCNR(366.14,IBDTIEN,1,IBN)) Q:+IBN=0  D
"RTN","IBNCPEV",38,0)
 . . S IBZ0=$G(^IBCNR(366.14,IBDTIEN,1,IBN,0))
"RTN","IBNCPEV",39,0)
 . . S IBDFN=+$P(IBZ0,U,3)
"RTN","IBNCPEV",40,0)
 . . Q:IBDFN=0
"RTN","IBNCPEV",41,0)
 . . S IBEVNT=$$GET1^DIQ(366.141,IBN_","_IBDTIEN_",",.01)
"RTN","IBNCPEV",42,0)
 . . S IBZ2=$G(^IBCNR(366.14,IBDTIEN,1,IBN,2))
"RTN","IBNCPEV",43,0)
 . . S IBRXIEN=$P(IBZ2,U,12)
"RTN","IBNCPEV",44,0)
 . . I IBRXIEN="" S IBRXIEN=$P(IBZ2,U,1)
"RTN","IBNCPEV",45,0)
 . . I IBPAT,IBDFN'=IBPAT Q
"RTN","IBNCPEV",46,0)
 . . I IBRX,IBRXIEN'=IBRX Q
"RTN","IBNCPEV",47,0)
 . . I $$RXNUM(IBDFN,IBRXIEN)="" Q
"RTN","IBNCPEV",48,0)
 . . I IBM2="E",IBEVNT[IBSC,'$P(IBZ0,U,7) Q
"RTN","IBNCPEV",49,0)
 . . I IBM2="N",IBEVNT'[IBSC Q
"RTN","IBNCPEV",50,0)
 . . I IBM2="N",IBEVNT[IBSC,$P(IBZ0,U,7) Q
"RTN","IBNCPEV",51,0)
 . . I IBM3'="A",IBM3'=$$RXWMC^IBNCPRR(+IBRXIEN) Q
"RTN","IBNCPEV",52,0)
 . . S @REF@(+IBRXIEN,+$P(IBZ2,U,3),IBDTIEN,IBN)=""
"RTN","IBNCPEV",53,0)
 ;
"RTN","IBNCPEV",54,0)
 I '$D(@REF) W !!,"No data found for the specified input criteria" Q
"RTN","IBNCPEV",55,0)
 ;print
"RTN","IBNCPEV",56,0)
 S IBNUM=0
"RTN","IBNCPEV",57,0)
 U IO D HDR
"RTN","IBNCPEV",58,0)
 S IBRX1="" F  S IBRX1=$O(@REF@(IBRX1)) Q:IBRX1=""  D  Q:IBQ
"RTN","IBNCPEV",59,0)
 .S IBFN="" F  S IBFN=$O(@REF@(IBRX1,IBFN)) Q:IBFN=""  D  Q:IBQ
"RTN","IBNCPEV",60,0)
 ..S IB1ST=1
"RTN","IBNCPEV",61,0)
 ..S IBI="" F  S IBI=$O(@REF@(IBRX1,IBFN,IBI)) Q:IBI=""  D  Q:IBQ
"RTN","IBNCPEV",62,0)
 ...S IBN="" F  S IBN=$O(@REF@(IBRX1,IBFN,IBI,IBN)) Q:IBN=""  D  Q:IBQ
"RTN","IBNCPEV",63,0)
 ....N IBZ,IBD1,IBD2,IBD3,IBD4,IBINS,IBY
"RTN","IBNCPEV",64,0)
 ....;load main
"RTN","IBNCPEV",65,0)
 ....S IBZ=$G(^IBCNR(366.14,IBI,1,IBN,0))
"RTN","IBNCPEV",66,0)
 ....;load IBD array
"RTN","IBNCPEV",67,0)
 ....S IBD1=$G(^IBCNR(366.14,IBI,1,IBN,1))
"RTN","IBNCPEV",68,0)
 ....S IBD2=$G(^IBCNR(366.14,IBI,1,IBN,2))
"RTN","IBNCPEV",69,0)
 ....S IBD3=$G(^IBCNR(366.14,IBI,1,IBN,3))
"RTN","IBNCPEV",70,0)
 ....S IBD4=$G(^IBCNR(366.14,IBI,1,IBN,4))
"RTN","IBNCPEV",71,0)
 ....S IBY=0
"RTN","IBNCPEV",72,0)
 ....;load insurance multiple
"RTN","IBNCPEV",73,0)
 ....F  S IBY=$O(^IBCNR(366.14,IBI,1,IBN,5,IBY)) Q:+IBY=0  D
"RTN","IBNCPEV",74,0)
 .....S IBINS(IBY,0)=$G(^IBCNR(366.14,IBI,1,IBN,5,IBY,0))
"RTN","IBNCPEV",75,0)
 .....S IBINS(IBY,1)=$G(^IBCNR(366.14,IBI,1,IBN,5,IBY,1))
"RTN","IBNCPEV",76,0)
 .....S IBINS(IBY,2)=$G(^IBCNR(366.14,IBI,1,IBN,5,IBY,2))
"RTN","IBNCPEV",77,0)
 .....S IBINS(IBY,3)=$G(^IBCNR(366.14,IBI,1,IBN,5,IBY,3))
"RTN","IBNCPEV",78,0)
 ....;
"RTN","IBNCPEV",79,0)
 ....I IB1ST D  Q:IBQ
"RTN","IBNCPEV",80,0)
 .....S IBNUM=IBNUM+1 I IBNUM>1 D ULINE("-") Q:IBQ
"RTN","IBNCPEV",81,0)
 .....D CHKP Q:IBQ
"RTN","IBNCPEV",82,0)
 .....W !,IBNUM," ",?4,$$RXNUM(+$P(IBZ,U,3),IBRX1)," ",?12,IBFN," ",?16,$$DAT(+$P(IBD2,U,6)) ;RX# Fill# Fiil_date
"RTN","IBNCPEV",83,0)
 .....W " ",?28,$E($$PAT(+$P(IBZ,U,3)),1,21)," ",?50,$E($$DRUG(+$P(IBZ,U,3),IBRX1),1,30)
"RTN","IBNCPEV",84,0)
 .....S IB1ST=0
"RTN","IBNCPEV",85,0)
 ....N IND S IND=6
"RTN","IBNCPEV",86,0)
 ....D CHKP Q:IBQ
"RTN","IBNCPEV",87,0)
 ....S IBEVNT=$$GET1^DIQ(366.141,IBN_","_IBI_",",.01)
"RTN","IBNCPEV",88,0)
 ....W !,?IND,$$EVNT(IBEVNT)," ",?16,$$TIM($P(IBZ,U,5)),?31," Status:",$E($$STAT(IBEVNT,$P(IBZ,U,7)_U_$P(IBZ,U,8),$P(IBD3,U,7),$P(IBD3,U,1)),1,40)
"RTN","IBNCPEV",89,0)
 ....Q:'IBDTL  ; no details
"RTN","IBNCPEV",90,0)
 ....I IBEVNT="BILL" D DBILL Q
"RTN","IBNCPEV",91,0)
 ....I IBEVNT="REJECT" D DREJ Q
"RTN","IBNCPEV",92,0)
 ....I IBEVNT["REVERSE" D DREV Q
"RTN","IBNCPEV",93,0)
 ....I IBEVNT["SUBMIT" D DSUB Q
"RTN","IBNCPEV",94,0)
 ....I IBEVNT["CLOSE" D DCLO Q
"RTN","IBNCPEV",95,0)
 ....I IBEVNT["REOPEN" D REOPEN^IBNCPEV1 Q
"RTN","IBNCPEV",96,0)
 ....I IBEVNT["RELEASE" D DREL Q
"RTN","IBNCPEV",97,0)
 ....I IBEVNT[IBSC D DSTAT^IBNCPEV1(.IBD2,.IBD3,.IBD4,.IBINS) Q
"RTN","IBNCPEV",98,0)
 ....I IBEVNT["BILL CANCELLED" D BCANC Q
"RTN","IBNCPEV",99,0)
 I IBSCR,'IBQ W !,"End of report, press RETURN to continue." R X:DTIME
"RTN","IBNCPEV",100,0)
 K @REF
"RTN","IBNCPEV",101,0)
 Q
"RTN","IBNCPEV",102,0)
 ;
"RTN","IBNCPEV",103,0)
 ;provides STATUS information 
"RTN","IBNCPEV",104,0)
 ;
"RTN","IBNCPEV",105,0)
STAT(X,RES,CR,IBIFN) ;
"RTN","IBNCPEV",106,0)
 N IBSC
"RTN","IBNCPEV",107,0)
 N IBNL
"RTN","IBNCPEV",108,0)
 S IBSC="STATUS CHECK"
"RTN","IBNCPEV",109,0)
 S IBNL="Plan not linked to the Payer"
"RTN","IBNCPEV",110,0)
 I X[IBSC,RES[IBNB S RES="0^"_$P(RES,IBNB,2)
"RTN","IBNCPEV",111,0)
 I X[IBSC,RES[IBNL S RES="0^Plan not linked" ; shorten too long line
"RTN","IBNCPEV",112,0)
 I X[IBSC,'RES,RES["Non-Billable in CT" Q $P(RES,U,2)
"RTN","IBNCPEV",113,0)
 I X[IBSC Q $S(RES:"",1:"non-")_"ECME Billable"_$S(RES:"",$P(RES,U,2)="":"",1:", "_$P(RES,U,2))
"RTN","IBNCPEV",114,0)
 I X="BILL",'RES,IBIFN Q "Bill "_$$BILL(IBIFN)_" created with ERRORs"
"RTN","IBNCPEV",115,0)
 I X="BILL",'RES Q "Error: "_$P(RES,U,2)
"RTN","IBNCPEV",116,0)
 I X="BILL" Q "Bill# "_$$BILL(+RES)_" created"
"RTN","IBNCPEV",117,0)
 I X["REVERSE",$G(CR)=7,RES=1 Q "set N/B Reason: Rx deleted, no Bill to cancel."
"RTN","IBNCPEV",118,0)
 I X["REVERSE" Q $S(RES=1:"success",RES>1:"Bill# "_$$BILL(+RES)_" cancelled",'RES:"ECME Claim reversed, no Bill to cancel",1:$P(RES,U,2))
"RTN","IBNCPEV",119,0)
 I 'RES Q $P(RES,U,2)
"RTN","IBNCPEV",120,0)
 Q "OK"
"RTN","IBNCPEV",121,0)
 ;
"RTN","IBNCPEV",122,0)
 ;BILL section
"RTN","IBNCPEV",123,0)
 ;input params IBD*, IBZ, IBINS*
"RTN","IBNCPEV",124,0)
DBILL ;
"RTN","IBNCPEV",125,0)
 I '$P(IBZ,U,7),$L($P(IBZ,U,8)),$P(IBD3,U,1) D CHKP Q:IBQ  W !?10,"ERROR DESCRIPTION: ",$P(IBZ,U,8)
"RTN","IBNCPEV",126,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",127,0)
 D SUBHDR
"RTN","IBNCPEV",128,0)
 I $P(IBD1,U,5) D CHKP Q:IBQ  W !?10,"DIVISION: ",$P($G(^DG(40.8,+$P(IBD1,U,5),0)),U)
"RTN","IBNCPEV",129,0)
 I $P(IBD2,U,4) D CHKP Q:IBQ  W !?10,"DRUG:",$$DRUGAPI^IBNCPEV1(+$P(IBD2,U,4),.01)
"RTN","IBNCPEV",130,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",131,0)
 W !,?10,"NDC:",$S($P(IBD2,U,5):$P(IBD2,U,5),1:"No"),", QTY:",$S($P(IBD2,U,8):$P(IBD2,U,8),1:"No"),", DAYS SUPPLY:",$S($P(IBD2,U,9):$P(IBD2,U,9),1:"No"),", "
"RTN","IBNCPEV",132,0)
 W "BILLED:",$J($P(IBD3,U,2),0,2),", "
"RTN","IBNCPEV",133,0)
 W "PAID:",$J($P(IBD3,U,5),0,2)
"RTN","IBNCPEV",134,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",135,0)
 W !?10,"PLAN:",$P($G(^IBA(355.3,+$P(IBD3,U,3),0)),U,3),", INSURANCE: ",$P($G(^DIC(36,+$G(^IBA(355.3,+$P(IBD3,U,3),0)),0)),U)
"RTN","IBNCPEV",136,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",137,0)
 D DISPUSR
"RTN","IBNCPEV",138,0)
 Q
"RTN","IBNCPEV",139,0)
 ;
"RTN","IBNCPEV",140,0)
 ;reject section
"RTN","IBNCPEV",141,0)
DREJ ;
"RTN","IBNCPEV",142,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",143,0)
 D SUBHDR
"RTN","IBNCPEV",144,0)
 I +$P(IBD3,U,3) D CHKP Q:IBQ  W !?10,"PLAN:",$P($G(^IBA(355.3,+$P(IBD3,U,3),0)),U,3),", INSURANCE: ",$P($G(^DIC(36,+$G(^IBA(355.3,+$P(IBD3,U,3),0)),0)),U)
"RTN","IBNCPEV",145,0)
 D CLRS Q:IBQ
"RTN","IBNCPEV",146,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",147,0)
 D DISPUSR
"RTN","IBNCPEV",148,0)
 Q
"RTN","IBNCPEV",149,0)
 ;close
"RTN","IBNCPEV",150,0)
DCLO ;
"RTN","IBNCPEV",151,0)
 D DREJ
"RTN","IBNCPEV",152,0)
 Q
"RTN","IBNCPEV",153,0)
 ;submit
"RTN","IBNCPEV",154,0)
DSUB ;
"RTN","IBNCPEV",155,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",156,0)
 D SUBHDR
"RTN","IBNCPEV",157,0)
 I $L($P(IBD1,U,6)) D CHKP W !?10,"PAYER RESPONSE: ",$P(IBD1,U,6)
"RTN","IBNCPEV",158,0)
 I $L($P(IBD3,U,3)) D CHKP Q:IBQ  W !?10,"PLAN:",$P($G(^IBA(355.3,+$P(IBD3,U,3),0)),U,3),", INSURANCE: ",$P($G(^DIC(36,+$G(^IBA(355.3,+$P(IBD3,U,3),0)),0)),U)
"RTN","IBNCPEV",159,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",160,0)
 D DISPUSR
"RTN","IBNCPEV",161,0)
 Q
"RTN","IBNCPEV",162,0)
 ;release
"RTN","IBNCPEV",163,0)
DREL ;
"RTN","IBNCPEV",164,0)
 D DREJ
"RTN","IBNCPEV",165,0)
 Q
"RTN","IBNCPEV",166,0)
 ;reverse
"RTN","IBNCPEV",167,0)
DREV ;
"RTN","IBNCPEV",168,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",169,0)
 D SUBHDR
"RTN","IBNCPEV",170,0)
 I $L($P(IBD1,U,6)),$E($P(IBD1,U,6),1)'="A"&($E($P(IBD1,U,6),1)'="R") S $P(IBD1,U,6)=""  ; only display accepted and rejected on REVERSALS
"RTN","IBNCPEV",171,0)
 I $L($P(IBD1,U,6)) D CHKP W !?10,"PAYER RESPONSE: ",$P(IBD1,U,6)
"RTN","IBNCPEV",172,0)
 I $L($P(IBD3,U,3)) D CHKP Q:IBQ  W !?10,"PLAN:",$P($G(^IBA(355.3,+$P(IBD3,U,3),0)),U,3),", INSURANCE: ",$P($G(^DIC(36,+$G(^IBA(355.3,+$P(IBD3,U,3),0)),0)),U)
"RTN","IBNCPEV",173,0)
 D CLRS Q:IBQ
"RTN","IBNCPEV",174,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",175,0)
 D DISPUSR
"RTN","IBNCPEV",176,0)
 W !?10,"REVERSAL REASON:",$P(IBD1,U,7)
"RTN","IBNCPEV",177,0)
 Q
"RTN","IBNCPEV",178,0)
 ;
"RTN","IBNCPEV",179,0)
BCANC ; bill cancellation generated by auto-reversal (duplicate bill)
"RTN","IBNCPEV",180,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",181,0)
 W !?10,"SYSTEM FOUND DUPLICATE BILL WHILE PROCESSING CLAIM"
"RTN","IBNCPEV",182,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",183,0)
 D DISPUSR
"RTN","IBNCPEV",184,0)
 Q
"RTN","IBNCPEV",185,0)
 ;
"RTN","IBNCPEV",186,0)
 ;
"RTN","IBNCPEV",187,0)
RELT(X) I X W ",",?45,"RELEASE DATE:",$$TIM(X)
"RTN","IBNCPEV",188,0)
 Q
"RTN","IBNCPEV",189,0)
CLRS ;
"RTN","IBNCPEV",190,0)
 N TX,PP,RC
"RTN","IBNCPEV",191,0)
 S TX="CLOSE REASON"
"RTN","IBNCPEV",192,0)
 S PP="DROP TO PAPER"
"RTN","IBNCPEV",193,0)
 S RC="RELEASE COPAY"
"RTN","IBNCPEV",194,0)
 I $P(IBD3,U,7)'="" D CHKP Q:IBQ  W !?10,TX,":",$$REASON^IBNCPDPU($P(IBD3,U,7)) W:$P(IBD3,U,8) ", ",PP W:$P(IBD3,U,9) ", ",RC
"RTN","IBNCPEV",195,0)
 S TX="CLOSE COMMENT"
"RTN","IBNCPEV",196,0)
 I $L($P(IBD3,U,6))>2 D CHKP Q:IBQ  W !?10,"COMMENT:",$P(IBD3,U,6)
"RTN","IBNCPEV",197,0)
 Q
"RTN","IBNCPEV",198,0)
 ;
"RTN","IBNCPEV",199,0)
HDR ;header
"RTN","IBNCPEV",200,0)
 W @IOF S IBPAGE=IBPAGE+1 W ?72,"PAGE ",IBPAGE
"RTN","IBNCPEV",201,0)
 W !,?15,"BILLING ECME EVENTS ON ",$$DAT(IBBDT)
"RTN","IBNCPEV",202,0)
 I IBBDT'=IBEDT W " TO ",$$DAT(IBEDT)
"RTN","IBNCPEV",203,0)
 W "  (",$S(IBDTL:"DETAILED",1:"SUMMARY"),")"
"RTN","IBNCPEV",204,0)
 W !?15
"RTN","IBNCPEV",205,0)
 I IBM1="R" W "SINGLE PRESCRIPTION - ",$$RXNUM($$GETDFN^IBNCPEV1(IBRX),IBRX),"  "
"RTN","IBNCPEV",206,0)
 I IBM1="P" W "SINGLE PATIENT - ",$P($G(^DPT(IBPAT,0)),U),"  "
"RTN","IBNCPEV",207,0)
 I IBM1="E" W "SINGLE ECME # - ",IBECME
"RTN","IBNCPEV",208,0)
 I IBM2="E" W "ECME BILLABLE RX  "
"RTN","IBNCPEV",209,0)
 I IBM2="N" W "NON ECME BILLABLE RX  "
"RTN","IBNCPEV",210,0)
 I IBM3'="A",IBM1'="R" W $S(IBM3="M":"MAIL",IBM3="C":"CMOP",1:"WINDOW")_" PRESCRIPTIONS ONLY"
"RTN","IBNCPEV",211,0)
 W !,?4," RX#   FILL  DATE       PATIENT NAME",?55,"DRUG"
"RTN","IBNCPEV",212,0)
 N I W ! F I=1:1:80 W "="
"RTN","IBNCPEV",213,0)
 Q
"RTN","IBNCPEV",214,0)
 ;
"RTN","IBNCPEV",215,0)
ULINE(X) ;line
"RTN","IBNCPEV",216,0)
 D CHKP Q:IBQ
"RTN","IBNCPEV",217,0)
 N I W ! F I=1:1:80 W $G(X,"-")
"RTN","IBNCPEV",218,0)
 Q
"RTN","IBNCPEV",219,0)
CHKP ;Check for EOP
"RTN","IBNCPEV",220,0)
 N Y
"RTN","IBNCPEV",221,0)
 I $Y>(IOSL-4) D:IBSCR PAUSE Q:IBQ  D HDR
"RTN","IBNCPEV",222,0)
 Q
"RTN","IBNCPEV",223,0)
DAT(X,Y) Q $$DAT1^IBOUTL(X,.Y)
"RTN","IBNCPEV",224,0)
TIM(X) N IBT ;time
"RTN","IBNCPEV",225,0)
 S IBT=$$DAT1^IBOUTL(X,1) I $L(IBT," ")<3 Q IBT
"RTN","IBNCPEV",226,0)
 I $P(IBT," ",3)="pm" S IBT=$P(IBT," ",1,2)_"p" Q IBT
"RTN","IBNCPEV",227,0)
 I $P(IBT," ",3)="am" S IBT=$P(IBT," ",1,2)_"a" Q IBT
"RTN","IBNCPEV",228,0)
 Q IBT
"RTN","IBNCPEV",229,0)
 ;
"RTN","IBNCPEV",230,0)
USR(X) ;
"RTN","IBNCPEV",231,0)
 I $D(^VA(200,+X,0)) Q $P(^(0),U)
"RTN","IBNCPEV",232,0)
 Q X
"RTN","IBNCPEV",233,0)
 ;
"RTN","IBNCPEV",234,0)
PAT(DFN) ;
"RTN","IBNCPEV",235,0)
 Q $P($G(^DPT(DFN,0),"?"),"^")
"RTN","IBNCPEV",236,0)
BILL(BN) ;
"RTN","IBNCPEV",237,0)
 Q $P($G(^DGCR(399,BN,0),"?"),"^")
"RTN","IBNCPEV",238,0)
ARBILL(BN) ;
"RTN","IBNCPEV",239,0)
 Q $P($G(^PRCA(430,BN,0),"?"),"^")
"RTN","IBNCPEV",240,0)
 ;/*
"RTN","IBNCPEV",241,0)
 ;Returns 
"RTN","IBNCPEV",242,0)
 ;return DRUG name (#50,.01)
"RTN","IBNCPEV",243,0)
 ;IBDFN - IEN in PATIENT file #2
"RTN","IBNCPEV",244,0)
 ;IBRX - IEN in PRESCRIPTION file #52
"RTN","IBNCPEV",245,0)
DRUG(IBDFN,IBRX) ;
"RTN","IBNCPEV",246,0)
 I +$G(IBDFN)=0 Q ""
"RTN","IBNCPEV",247,0)
 N X1
"RTN","IBNCPEV",248,0)
 K ^TMP($J,"IBNCPDP52")
"RTN","IBNCPEV",249,0)
 D RX^PSO52API(IBDFN,"IBNCPDP52",IBRX,"",0)
"RTN","IBNCPEV",250,0)
 S X1=+$G(^TMP($J,"IBNCPDP52",IBDFN,IBRX,6))
"RTN","IBNCPEV",251,0)
 K ^TMP($J,"IBNCPDP52")
"RTN","IBNCPEV",252,0)
 I X1=0 Q ""
"RTN","IBNCPEV",253,0)
 Q $$DRUGNAM^IBNCPEV1(X1)
"RTN","IBNCPEV",254,0)
 ;
"RTN","IBNCPEV",255,0)
EVNT(X) ;Transl
"RTN","IBNCPEV",256,0)
 I X="BILL" Q "BILLING"
"RTN","IBNCPEV",257,0)
 I X="REVERSE" Q "REVERSAL"
"RTN","IBNCPEV",258,0)
 I X="AUTO REVERSE" Q "REVERSAL(A)"
"RTN","IBNCPEV",259,0)
 I X["RELEASE" Q "RELEASE"
"RTN","IBNCPEV",260,0)
 I X["SUBMIT" Q "SUBMIT"
"RTN","IBNCPEV",261,0)
 I X["CLOSE" Q "CLOSE"
"RTN","IBNCPEV",262,0)
 I X[IBSC Q "FINISH"  ;IBSC = "STATUS CHECK"
"RTN","IBNCPEV",263,0)
 Q X
"RTN","IBNCPEV",264,0)
 ;
"RTN","IBNCPEV",265,0)
BOCD(X) ;Basis of Cost Determ
"RTN","IBNCPEV",266,0)
 I +X=7 Q "USUAL & CUSTOMARY"
"RTN","IBNCPEV",267,0)
 I +X=1 Q "AWP"
"RTN","IBNCPEV",268,0)
 I +X=5 Q "COST CALCULATIONS"
"RTN","IBNCPEV",269,0)
 Q X
"RTN","IBNCPEV",270,0)
 ;
"RTN","IBNCPEV",271,0)
PAUSE ;
"RTN","IBNCPEV",272,0)
 N X U IO(0) W !,"Press RETURN to continue, '^' to exit:" R X:DTIME S:'$T X="^" S:X["^" IBQ=1
"RTN","IBNCPEV",273,0)
 U IO
"RTN","IBNCPEV",274,0)
 Q
"RTN","IBNCPEV",275,0)
 ;
"RTN","IBNCPEV",276,0)
SUBHDR ;
"RTN","IBNCPEV",277,0)
 W !?10,"ECME# ",$P(IBD1,U,3),",",?25,"FILL DATE:",$$DAT($P(IBD2,U,6))
"RTN","IBNCPEV",278,0)
 D RELT($P(IBD2,U,7))
"RTN","IBNCPEV",279,0)
 Q
"RTN","IBNCPEV",280,0)
DISPUSR ;
"RTN","IBNCPEV",281,0)
 W !?10,"USER:",$$USR(+$P(IBD3,U,10))
"RTN","IBNCPEV",282,0)
 Q
"RTN","IBNCPEV",283,0)
 ;
"RTN","IBNCPEV",284,0)
RXNUM1(RXIEN,FLDNUM) ;
"RTN","IBNCPEV",285,0)
 N IBARR,DA,DIC,DR,DIQ
"RTN","IBNCPEV",286,0)
 S DIQ(0)="E",DIC=52
"RTN","IBNCPEV",287,0)
 S DR=FLDNUM,DA=RXIEN,DIQ="IBARR"
"RTN","IBNCPEV",288,0)
 D EN^DIQ1
"RTN","IBNCPEV",289,0)
 Q $G(IBARR(52,RXIEN,FLDNUM,"E"))
"RTN","IBNCPEV",290,0)
 ;
"RTN","IBNCPEV",291,0)
 ;/*
"RTN","IBNCPEV",292,0)
 ;Returns RX number (external value: #52,.01)
"RTN","IBNCPEV",293,0)
 ;IBDFN - IEN in PATIENT file #2
"RTN","IBNCPEV",294,0)
 ;IBRX - IEN in PRESCRIPTION file #52
"RTN","IBNCPEV",295,0)
RXNUM(IBDFN,IBRX) ;*/
"RTN","IBNCPEV",296,0)
 Q $$RXNUM1(IBRX,.01)
"RTN","IBNCPEV",297,0)
 ;
"RTN","IBNCPEV",298,0)
 ;IBNCPEV
"RTN","IBNCPEV1")
0^8^B20779583
"RTN","IBNCPEV1",1,0)
IBNCPEV1 ;DALOI/SS - NCPDP BILLING EVENTS REPORT ;21-MAR-2006
"RTN","IBNCPEV1",2,0)
 ;;2.0;INTEGRATED BILLING;**342**;21-MAR-94;Build 18
"RTN","IBNCPEV1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBNCPEV1",4,0)
 ;
"RTN","IBNCPEV1",5,0)
 ;IA# 10155 is used to read ^DD(file,field,0) node
"RTN","IBNCPEV1",6,0)
 Q
"RTN","IBNCPEV1",7,0)
 ;
"RTN","IBNCPEV1",8,0)
SETVARS ;
"RTN","IBNCPEV1",9,0)
 S (IBECME,IBPAT,IBRX,IBQ,IBSCR,IBPAGE,IBDTL)=0
"RTN","IBNCPEV1",10,0)
 ;date
"RTN","IBNCPEV1",11,0)
 F  D DATE^IBNCPDPE Q:IBQ  Q:$$TESTDATA^IBNCPDPE
"RTN","IBNCPEV1",12,0)
 Q:IBQ
"RTN","IBNCPEV1",13,0)
 D MODE^IBNCPDPE Q:IBQ
"RTN","IBNCPEV1",14,0)
 D DEVICE^IBNCPDPE Q:IBQ
"RTN","IBNCPEV1",15,0)
 Q
"RTN","IBNCPEV1",16,0)
 ;
"RTN","IBNCPEV1",17,0)
 ;/**
"RTN","IBNCPEV1",18,0)
 ; input - 
"RTN","IBNCPEV1",19,0)
 ;   IBECMENO = ECME #
"RTN","IBNCPEV1",20,0)
 ;   IBST = start date (FM format)
"RTN","IBNCPEV1",21,0)
 ;   IBEND = end date (FM format)
"RTN","IBNCPEV1",22,0)
 ; output - returns internal entry number of file #52 for the earliest date within the date range
"RTN","IBNCPEV1",23,0)
GETRX(IBECMENO,IBST,IBEND) ; get ien of file 52 from #366.14
"RTN","IBNCPEV1",24,0)
 ; array from where the ECME BILLING EVENTS report gets its data
"RTN","IBNCPEV1",25,0)
 ;  This subroutine is called when the user enters an ECME# as
"RTN","IBNCPEV1",26,0)
 ;  part of the search criteria
"RTN","IBNCPEV1",27,0)
 N IBDATE,IBNO,IBIEN
"RTN","IBNCPEV1",28,0)
 S IBDATE=+$O(^IBCNR(366.14,"E",IBECMENO,IBST-1))
"RTN","IBNCPEV1",29,0)
 I IBDATE=0 Q 0
"RTN","IBNCPEV1",30,0)
 I IBDATE>IBEND Q 0
"RTN","IBNCPEV1",31,0)
 S IBNO=+$O(^IBCNR(366.14,"E",IBECMENO,IBDATE,0))
"RTN","IBNCPEV1",32,0)
 I IBNO=0 Q 0
"RTN","IBNCPEV1",33,0)
 S IBIEN=$O(^IBCNR(366.14,"B",IBDATE,0))
"RTN","IBNCPEV1",34,0)
 Q +$P($G(^IBCNR(366.14,IBIEN,1,IBNO,2)),U)
"RTN","IBNCPEV1",35,0)
 ;
"RTN","IBNCPEV1",36,0)
 ;/**
"RTN","IBNCPEV1",37,0)
 ;finish
"RTN","IBNCPEV1",38,0)
 ;input:
"RTN","IBNCPEV1",39,0)
 ;IBD2 - node ^IBCNR(366.14,D0,1,D1,2)
"RTN","IBNCPEV1",40,0)
 ;IBD3 - node ^IBCNR(366.14,D0,1,D1,3)
"RTN","IBNCPEV1",41,0)
 ;IBD4 - node ^IBCNR(366.14,D0,1,D1,4)
"RTN","IBNCPEV1",42,0)
 ;IBINS - multiple of ^IBCNR(366.14,D0,1,D1,5)
"RTN","IBNCPEV1",43,0)
DSTAT(IBD2,IBD3,IBD4,IBINS) ;
"RTN","IBNCPEV1",44,0)
 N IBX,IBT,IBSC,IB1ST,IBNXT,IBEXMPV
"RTN","IBNCPEV1",45,0)
 S IB1ST=1
"RTN","IBNCPEV1",46,0)
 D CHKP^IBNCPEV Q:IBQ
"RTN","IBNCPEV1",47,0)
 W !?10,"ELIGIBILITY: "
"RTN","IBNCPEV1",48,0)
 F IBX=2:1 S IBT=$P($T(EXEMPT+IBX^IBNCPDP1),";",3),IBSC=$P(IBT,U,2) Q:IBSC=""  S IBEXMPV=$$EXMPFLDS(IBSC,IBD4) D:IBEXMPV]""  Q:IBQ
"RTN","IBNCPEV1",49,0)
 . I 'IB1ST W "," I $X>70 D CHKP^IBNCPEV Q:IBQ  W !?10 S IB1ST=1
"RTN","IBNCPEV1",50,0)
 . W " ",IBSC,":",$S(IBEXMPV:"Yes",IBEXMPV=0:"No",1:"?") S IB1ST=0
"RTN","IBNCPEV1",51,0)
 Q:IBQ
"RTN","IBNCPEV1",52,0)
 I $P(IBD2,U,4) D CHKP^IBNCPEV Q:IBQ  W !?10,"DRUG:",$$DRUGNAM(+$P(IBD2,U,4))
"RTN","IBNCPEV1",53,0)
 D CHKP^IBNCPEV Q:IBQ  W !?10
"RTN","IBNCPEV1",54,0)
 W "NDC:",$S($P(IBD2,U,5):$P(IBD2,U,5),1:"No"),", QTY:",$S($P(IBD2,U,8):$P(IBD2,U,8),1:"No"),", COST:",$S($P(IBD3,U,4):$P(IBD3,U,4),1:"No")
"RTN","IBNCPEV1",55,0)
 I $P(IBD2,U,10)]"" W ", DEA:",$P(IBD2,U,10)
"RTN","IBNCPEV1",56,0)
 S IBX=0,IBNXT=0 F  S IBX=$O(IBINS(IBX)) Q:'IBX  D  Q:IBQ  S IBNXT=1
"RTN","IBNCPEV1",57,0)
 .N Y S Y=$P(IBINS(IBX,0),U,2,8) W:'Y "@@@@" Q:'Y
"RTN","IBNCPEV1",58,0)
 .I IBNXT D CHKP^IBNCPEV Q:IBQ  W !?10,"-----------"
"RTN","IBNCPEV1",59,0)
 .D CHKP^IBNCPEV Q:IBQ  W !?10
"RTN","IBNCPEV1",60,0)
 .W "PLAN:",$P($G(^IBA(355.3,+Y,0)),U,3),"  "
"RTN","IBNCPEV1",61,0)
 .W "INSURANCE: ",$P($G(^DIC(36,+$G(^IBA(355.3,+Y,0)),0)),U)
"RTN","IBNCPEV1",62,0)
 .D CHKP^IBNCPEV Q:IBQ  W !?10 S IB1ST=1
"RTN","IBNCPEV1",63,0)
 .I $P(Y,U,2)]"" W "BIN:",$P(Y,U,2) S IB1ST=0
"RTN","IBNCPEV1",64,0)
 .I $P(Y,U,3)]"" W:'IB1ST ", " W "PCN:",$P(Y,U,3) S IB1ST=0
"RTN","IBNCPEV1",65,0)
 .I $P(Y,U,4)]"" W:'IB1ST ", " W "PAYER SHEET B1:",$P(Y,U,4) S IB1ST=0
"RTN","IBNCPEV1",66,0)
 .D CHKP^IBNCPEV Q:IBQ  W !?10 S IB1ST=1
"RTN","IBNCPEV1",67,0)
 .S Y=IBINS(IBX,1)
"RTN","IBNCPEV1",68,0)
 .I $P(Y,U,4)]"" W "PAYER SHEET B2:",$P(Y,U,4) S IB1ST=0
"RTN","IBNCPEV1",69,0)
 .I $P(Y,U,5)]"" W:'IB1ST ", " W "PAYER SHEET B3:",$P(Y,U,5)
"RTN","IBNCPEV1",70,0)
 .;S Y=$G(Z1("INS",IBX,2)) Q:Y=""
"RTN","IBNCPEV1",71,0)
 .S Y=IBINS(IBX,2) Q:Y=""
"RTN","IBNCPEV1",72,0)
 .D CHKP^IBNCPEV Q:IBQ  W !?10 S IB1ST=1
"RTN","IBNCPEV1",73,0)
 .I $P(Y,U)]"" W "DISPENSING FEE:",$P(Y,U) S IB1ST=0
"RTN","IBNCPEV1",74,0)
 .I $P(Y,U,2)]"" W:'IB1ST ", " W "BASIS OF COST DETERM:",$$BOCD^IBNCPEV($P(Y,U,2)) S IB1ST=0
"RTN","IBNCPEV1",75,0)
 .D CHKP^IBNCPEV Q:IBQ  W !?10 S IB1ST=1
"RTN","IBNCPEV1",76,0)
 .I $P(Y,U,3)]"" W "COST:",$J($P(Y,U,3),0,2) S IB1ST=0
"RTN","IBNCPEV1",77,0)
 .I $P(Y,U,4)]"" W:'IB1ST ", " W "GROSS AMT DUE:",$J($P(Y,U,4),0,2) S IB1ST=0
"RTN","IBNCPEV1",78,0)
 .I $P(Y,U,5)]"" W:'IB1ST ", " W "ADMIN FEE:",$J($P(Y,U,5),0,2)
"RTN","IBNCPEV1",79,0)
 Q:IBQ
"RTN","IBNCPEV1",80,0)
 ;
"RTN","IBNCPEV1",81,0)
 D CHKP^IBNCPEV Q:IBQ
"RTN","IBNCPEV1",82,0)
 W !?10,"USER:",$$USR^IBNCPEV(+$P(IBD3,U,10))
"RTN","IBNCPEV1",83,0)
 Q
"RTN","IBNCPEV1",84,0)
 ;
"RTN","IBNCPEV1",85,0)
 ;get Exemption status by name
"RTN","IBNCPEV1",86,0)
 ;IBEXMP - exemption (like "AO","EC", etc)
"RTN","IBNCPEV1",87,0)
 ;IBNODE - node ^IBCNR(366.14,D0,1,D1,4)
"RTN","IBNCPEV1",88,0)
EXMPFLDS(IBEXMP,IBNODE) ;
"RTN","IBNCPEV1",89,0)
 Q:IBEXMP="AO" $P(IBNODE,U,1)
"RTN","IBNCPEV1",90,0)
 Q:IBEXMP="CV" $P(IBNODE,U,2)
"RTN","IBNCPEV1",91,0)
 Q:IBEXMP="EC" $P(IBNODE,U,3)
"RTN","IBNCPEV1",92,0)
 Q:IBEXMP="IR" $P(IBNODE,U,4)
"RTN","IBNCPEV1",93,0)
 Q:IBEXMP="MST" $P(IBNODE,U,5)
"RTN","IBNCPEV1",94,0)
 Q:IBEXMP="HNC" $P(IBNODE,U,6)
"RTN","IBNCPEV1",95,0)
 Q:IBEXMP="SC" $P(IBNODE,U,7)
"RTN","IBNCPEV1",96,0)
 Q ""
"RTN","IBNCPEV1",97,0)
 ;returns DFN from file #366.14 by prescription ien of file #50
"RTN","IBNCPEV1",98,0)
GETDFN(IBRX) ;
"RTN","IBNCPEV1",99,0)
 N IB1,IB2
"RTN","IBNCPEV1",100,0)
 S IB1=+$O(^IBCNR(366.14,"I",IBRX,0))
"RTN","IBNCPEV1",101,0)
 I IB1=0 Q 0
"RTN","IBNCPEV1",102,0)
 S IB2=+$O(^IBCNR(366.14,"I",IBRX,IB1,0))
"RTN","IBNCPEV1",103,0)
 I IB2=0 Q 0
"RTN","IBNCPEV1",104,0)
 Q +$P($G(^IBCNR(366.14,IB1,1,IB2,0)),U,3)
"RTN","IBNCPEV1",105,0)
 ;
"RTN","IBNCPEV1",106,0)
 ;return DRUG name (#50,.01)
"RTN","IBNCPEV1",107,0)
 ;IBX1 - ien in file #50
"RTN","IBNCPEV1",108,0)
DRUGNAM(IBX1) ;
"RTN","IBNCPEV1",109,0)
 ;Q $P($G(^PSDRUG(IBX1,0)),U)
"RTN","IBNCPEV1",110,0)
 N X
"RTN","IBNCPEV1",111,0)
 K ^TMP($J,"IBNCPDP50")
"RTN","IBNCPEV1",112,0)
 D DATA^PSS50(IBX1,"","","","","IBNCPDP50")
"RTN","IBNCPEV1",113,0)
 S X=$G(^TMP($J,"IBNCPDP50",IBX1,.01))
"RTN","IBNCPEV1",114,0)
 K ^TMP($J,"IBNCPDP50")
"RTN","IBNCPEV1",115,0)
 Q X
"RTN","IBNCPEV1",116,0)
 ;
"RTN","IBNCPEV1",117,0)
DRUGAPI(DRUGIEN,FLDNUM) ;
"RTN","IBNCPEV1",118,0)
 ;return a DRUG's field value
"RTN","IBNCPEV1",119,0)
 ;input:
"RTN","IBNCPEV1",120,0)
 ; DRUGIEN - ien #50
"RTN","IBNCPEV1",121,0)
 ; FLDNUM - field number (like .01)
"RTN","IBNCPEV1",122,0)
 ;output:
"RTN","IBNCPEV1",123,0)
 ; returned value that contains the external value of the specified field
"RTN","IBNCPEV1",124,0)
 N IBARR,DIQ,DIC
"RTN","IBNCPEV1",125,0)
 S DIQ="IBARR",DIQ(0)="E",DIC=50
"RTN","IBNCPEV1",126,0)
 D EN^PSSDI(50,"IB",DIC,.FLDNUM,.DRUGIEN,.DIQ)
"RTN","IBNCPEV1",127,0)
 Q $G(IBARR(50,DRUGIEN,FLDNUM,"E"))
"RTN","IBNCPEV1",128,0)
 ;
"RTN","IBNCPEV1",129,0)
 ;reopen
"RTN","IBNCPEV1",130,0)
REOPEN ;
"RTN","IBNCPEV1",131,0)
 D CHKP^IBNCPEV Q:IBQ
"RTN","IBNCPEV1",132,0)
 D SUBHDR^IBNCPEV
"RTN","IBNCPEV1",133,0)
 I +$P(IBD3,U,3) D CHKP^IBNCPEV Q:IBQ  W !?10,"PLAN:",$P($G(^IBA(355.3,+$P(IBD3,U,3),0)),U,3),", INSURANCE: ",$P($G(^DIC(36,+$G(^IBA(355.3,+$P(IBD3,U,3),0)),0)),U)
"RTN","IBNCPEV1",134,0)
 I $L($P(IBD3,U,6))>2 D CHKP^IBNCPEV Q:IBQ  W !?10,"REOPEN COMMENTS:",$P(IBD3,U,6)
"RTN","IBNCPEV1",135,0)
 D CHKP^IBNCPEV Q:IBQ
"RTN","IBNCPEV1",136,0)
 D DISPUSR^IBNCPEV
"RTN","IBNCPEV1",137,0)
 Q
"RTN","IBNCPEV1",138,0)
 ;IBNCPEV1
"RTN","IBNCPLOG")
0^9^B49413338
"RTN","IBNCPLOG",1,0)
IBNCPLOG ;BHAM ISC/SS - IB ECME EVNT REPORT ;22-MAR-2006
"RTN","IBNCPLOG",2,0)
 ;;2.0;INTEGRATED BILLING;**342**;21-MAR-94;Build 18
"RTN","IBNCPLOG",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBNCPLOG",4,0)
 ;
"RTN","IBNCPLOG",5,0)
 ;store data related to the IB calls made by ECME package in the file #366.14
"RTN","IBNCPLOG",6,0)
 ;input:
"RTN","IBNCPLOG",7,0)
 ;.IBIBD - (by referrence) IBD array with parameter sent to IB by ECME
"RTN","IBNCPLOG",8,0)
 ;DFN patient's ien
"RTN","IBNCPLOG",9,0)
 ;IBPROC - type of event. i.e. content of CALL such as BILL, REJECT and so on
"RTN","IBNCPLOG",10,0)
 ;IBRESULT - (optional) result of the event processing, format: return_code^message
"RTN","IBNCPLOG",11,0)
 ;IBJOB - (optional) job, default = $J
"RTN","IBNCPLOG",12,0)
 ;IBDTTM - (optional) datetime, default = "NOW" 
"RTN","IBNCPLOG",13,0)
 ;IBUSR - (optional) user ID, default = DUZ
"RTN","IBNCPLOG",14,0)
 ;output:
"RTN","IBNCPLOG",15,0)
 ;none
"RTN","IBNCPLOG",16,0)
LOG(IBIBD,DFN,IBPROC,IBRESULT,IBJOB,IBDTTM,IBUSR) ;Store the data
"RTN","IBNCPLOG",17,0)
 N NDX,Z,REF,IBDATE,IBDTIEN,IBEVNIEN,IBIBDTYP,IBRETV
"RTN","IBNCPLOG",18,0)
 S IBRESULT=$G(IBRESULT)
"RTN","IBNCPLOG",19,0)
 ;
"RTN","IBNCPLOG",20,0)
 I '$G(IBJOB) S IBJOB=$J
"RTN","IBNCPLOG",21,0)
 I '$G(IBDTTM) S IBDTTM=$$NOW^XLFDT()
"RTN","IBNCPLOG",22,0)
 I '$G(IBUSR) S IBUSR=+DUZ
"RTN","IBNCPLOG",23,0)
 ;       
"RTN","IBNCPLOG",24,0)
 S IBDATE=DT
"RTN","IBNCPLOG",25,0)
 S IBDTIEN=+$O(^IBCNR(366.14,"B",IBDATE,0))
"RTN","IBNCPLOG",26,0)
 L +^IBCNR(366.14):30 E  Q
"RTN","IBNCPLOG",27,0)
 I IBDTIEN=0 S IBDTIEN=+$$ADDDATE(IBDATE)
"RTN","IBNCPLOG",28,0)
 ;create an event
"RTN","IBNCPLOG",29,0)
 S IBEVNIEN=$$NEWEVENT(IBDTIEN,IBPROC)
"RTN","IBNCPLOG",30,0)
 L -^IBCNR(366.14)
"RTN","IBNCPLOG",31,0)
 I IBEVNIEN=0 W !,"New event creation Error : LOG^IBNCPLOG",! Q
"RTN","IBNCPLOG",32,0)
 ;
"RTN","IBNCPLOG",33,0)
 I +$$FILLFLDS^IBNCPUT1(366.141,".03",IBEVNIEN_","_IBDTIEN,DFN) ;DFN
"RTN","IBNCPLOG",34,0)
 I +$$FILLFLDS^IBNCPUT1(366.141,".04",IBEVNIEN_","_IBDTIEN,IBJOB) ;JOB
"RTN","IBNCPLOG",35,0)
 I +$$FILLFLDS^IBNCPUT1(366.141,".05",IBEVNIEN_","_IBDTIEN,IBDTTM) ;DATETIME
"RTN","IBNCPLOG",36,0)
 I +$$FILLFLDS^IBNCPUT1(366.141,".06",IBEVNIEN_","_IBDTIEN,DUZ) ;USER
"RTN","IBNCPLOG",37,0)
 I IBRESULT'="" D
"RTN","IBNCPLOG",38,0)
 . S IBRETV=+$$FILLFLDS^IBNCPUT1(366.141,".07",IBEVNIEN_","_IBDTIEN,+IBRESULT) ;RESULT
"RTN","IBNCPLOG",39,0)
 . S IBRETV=+$$FILLFLDS^IBNCPUT1(366.141,".08",IBEVNIEN_","_IBDTIEN,$P(IBRESULT,U,2)) ;RESULT MESSAGE
"RTN","IBNCPLOG",40,0)
 ;store IBIBD array
"RTN","IBNCPLOG",41,0)
 S IBIBDTYP=""
"RTN","IBNCPLOG",42,0)
 F  S IBIBDTYP=$O(IBIBD(IBIBDTYP)) Q:IBIBDTYP=""  D
"RTN","IBNCPLOG",43,0)
 . D IBD(IBDTIEN,IBEVNIEN,IBIBDTYP,$G(IBIBD(IBIBDTYP)))
"RTN","IBNCPLOG",44,0)
 ;store "INS" node of IBIBD array
"RTN","IBNCPLOG",45,0)
 I $D(IBIBD("INS")) I $$INS(.IBIBD,IBDTIEN,IBEVNIEN)
"RTN","IBNCPLOG",46,0)
 Q
"RTN","IBNCPLOG",47,0)
 ;
"RTN","IBNCPLOG",48,0)
 ;store IBD array data 
"RTN","IBNCPLOG",49,0)
 ;IBDTIEN -  ien on top [DATE] level  
"RTN","IBNCPLOG",50,0)
 ;IBRECNO - ien in [EVENTS] multiple
"RTN","IBNCPLOG",51,0)
 ;IBIBDTYP - type subscript in IBD array (BILL, PAID, RESPONSE, etc)
"RTN","IBNCPLOG",52,0)
 ;IBVAL - value to store
"RTN","IBNCPLOG",53,0)
IBD(IBDTIEN,IBRECNO,IBIBDTYP,IBVAL) ;
"RTN","IBNCPLOG",54,0)
 N IBFLDNO
"RTN","IBNCPLOG",55,0)
 ;W !," - ",IBRECNO," ",IBIBDTYP," = ",IBVAL
"RTN","IBNCPLOG",56,0)
 ;free text like "WEBMD: PAID"
"RTN","IBNCPLOG",57,0)
 I IBIBDTYP="AUTH #" S IBFLDNO=".11",IBVAL=$E(IBVAL,1,30) G EDITIBD
"RTN","IBNCPLOG",58,0)
 ;free text like "0504597;3051229"
"RTN","IBNCPLOG",59,0)
 I IBIBDTYP="BCID" S IBFLDNO=".12" G EDITIBD
"RTN","IBNCPLOG",60,0)
 ;7 digits ECME number - identifier (stored as a text - might have leading zeroes)
"RTN","IBNCPLOG",61,0)
 I IBIBDTYP="CLAIMID" S IBFLDNO=".13" G EDITIBD
"RTN","IBNCPLOG",62,0)
 ;pointer to file #2
"RTN","IBNCPLOG",63,0)
 I IBIBDTYP="DFN" S IBFLDNO=".14" G EDITIBD
"RTN","IBNCPLOG",64,0)
 ;pointer to file #40.8
"RTN","IBNCPLOG",65,0)
 I IBIBDTYP="DIVISION" S IBFLDNO=".15" G EDITIBD
"RTN","IBNCPLOG",66,0)
 ;free text
"RTN","IBNCPLOG",67,0)
 I IBIBDTYP="RESPONSE" S IBFLDNO=".16",IBVAL=$E(IBVAL,1,20) G EDITIBD
"RTN","IBNCPLOG",68,0)
 ;free text
"RTN","IBNCPLOG",69,0)
 I IBIBDTYP="REVERSAL REASON" S IBFLDNO=".17",IBVAL=$E(IBVAL,1,40) G EDITIBD
"RTN","IBNCPLOG",70,0)
 ;1 digit number
"RTN","IBNCPLOG",71,0)
 I IBIBDTYP="RTS-DEL" S IBFLDNO=".18" G EDITIBD
"RTN","IBNCPLOG",72,0)
 ;free text 
"RTN","IBNCPLOG",73,0)
 I IBIBDTYP="STATUS" S IBFLDNO=".19",IBVAL=$E(IBVAL,1,20) G EDITIBD
"RTN","IBNCPLOG",74,0)
 ;Prescription number as a text, might have alpha characters (external value, this is not IEN)
"RTN","IBNCPLOG",75,0)
 I IBIBDTYP="RX NO" S IBFLDNO=".202",IBVAL=$E(IBVAL,1,20) G EDITIBD
"RTN","IBNCPLOG",76,0)
 ;0 - original, 1,2,3,... - refill number
"RTN","IBNCPLOG",77,0)
 I IBIBDTYP="FILL NUMBER" S IBFLDNO=".203" G EDITIBD
"RTN","IBNCPLOG",78,0)
 ;internal identifier number for a DRUG
"RTN","IBNCPLOG",79,0)
 I IBIBDTYP="DRUG" S IBFLDNO=".204" G EDITIBD
"RTN","IBNCPLOG",80,0)
 I IBIBDTYP="NDC" S IBFLDNO=".205" G EDITIBD
"RTN","IBNCPLOG",81,0)
 I IBIBDTYP="FILL DATE" S IBFLDNO=".206" G EDITIBD
"RTN","IBNCPLOG",82,0)
 I IBIBDTYP="RELEASE DATE" S IBFLDNO=".207" G EDITIBD
"RTN","IBNCPLOG",83,0)
 I IBIBDTYP="QTY" S IBFLDNO=".208" G EDITIBD
"RTN","IBNCPLOG",84,0)
 I IBIBDTYP="DAYS SUPPLY" S IBFLDNO=".209" G EDITIBD
"RTN","IBNCPLOG",85,0)
 I IBIBDTYP="DEA" S IBFLDNO=".21" G EDITIBD
"RTN","IBNCPLOG",86,0)
 I IBIBDTYP="FILLED BY" S IBFLDNO=".211" G EDITIBD
"RTN","IBNCPLOG",87,0)
 I IBIBDTYP="AO" S IBFLDNO=".401" G EDITIBD
"RTN","IBNCPLOG",88,0)
 I IBIBDTYP="CV" S IBFLDNO=".402" G EDITIBD
"RTN","IBNCPLOG",89,0)
 I IBIBDTYP="EC" S IBFLDNO=".403" G EDITIBD
"RTN","IBNCPLOG",90,0)
 I IBIBDTYP="IR" S IBFLDNO=".404" G EDITIBD
"RTN","IBNCPLOG",91,0)
 I IBIBDTYP="MST" S IBFLDNO=".405" G EDITIBD
"RTN","IBNCPLOG",92,0)
 I IBIBDTYP="HNC" S IBFLDNO=".406" G EDITIBD
"RTN","IBNCPLOG",93,0)
 I IBIBDTYP="SC" S IBFLDNO=".407" G EDITIBD
"RTN","IBNCPLOG",94,0)
 I IBIBDTYP="BILL" S IBFLDNO=".301" G EDITIBD
"RTN","IBNCPLOG",95,0)
 I IBIBDTYP="BILLED" S IBFLDNO=".302" G EDITIBD
"RTN","IBNCPLOG",96,0)
 I IBIBDTYP="PLAN" S IBFLDNO=".303" G EDITIBD
"RTN","IBNCPLOG",97,0)
 I IBIBDTYP="COST" S IBFLDNO=".304" G EDITIBD
"RTN","IBNCPLOG",98,0)
 I IBIBDTYP="PAID" S IBFLDNO=".305" G EDITIBD
"RTN","IBNCPLOG",99,0)
 I IBIBDTYP="CLOSE COMMENT" S IBFLDNO=".306" G EDITIBD
"RTN","IBNCPLOG",100,0)
 I IBIBDTYP="REOPEN COMMENT" S IBFLDNO=".306" G EDITIBD
"RTN","IBNCPLOG",101,0)
 I IBIBDTYP="CLOSE REASON" S IBFLDNO=".307" G EDITIBD
"RTN","IBNCPLOG",102,0)
 I IBIBDTYP="DROP TO PAPER" S IBFLDNO=".308" G EDITIBD
"RTN","IBNCPLOG",103,0)
 I IBIBDTYP="RELEASE COPAY" S IBFLDNO=".309" G EDITIBD
"RTN","IBNCPLOG",104,0)
 I IBIBDTYP="USER" S IBFLDNO=".31" G EDITIBD
"RTN","IBNCPLOG",105,0)
 I IBIBDTYP="PRESCRIPTION" S IBFLDNO=".201" G EDITIBD
"RTN","IBNCPLOG",106,0)
 I IBIBDTYP="IEN" S IBFLDNO=".212" G EDITIBD
"RTN","IBNCPLOG",107,0)
 Q 0
"RTN","IBNCPLOG",108,0)
EDITIBD ;
"RTN","IBNCPLOG",109,0)
 Q +$$FILLFLDS^IBNCPUT1(366.141,IBFLDNO,IBRECNO_","_IBDTIEN,IBVAL)
"RTN","IBNCPLOG",110,0)
 ;------
"RTN","IBNCPLOG",111,0)
 ;to store IBD("INS") array data
"RTN","IBNCPLOG",112,0)
 ;input:
"RTN","IBNCPLOG",113,0)
 ;IBDARR - IBD array by reference
"RTN","IBNCPLOG",114,0)
 ;IBDTIEN -  ien on top [DATE] level  
"RTN","IBNCPLOG",115,0)
 ;IBRECNO - ien in [EVENTS] multiple
"RTN","IBNCPLOG",116,0)
 ;output:
"RTN","IBNCPLOG",117,0)
 ; record number if success
"RTN","IBNCPLOG",118,0)
 ; 0 if failure
"RTN","IBNCPLOG",119,0)
INS(IBDARR,IBDTIEN,IBRECNO) ;
"RTN","IBNCPLOG",120,0)
 N IBSET1,IBSET2,IBSET3,IBFLDNO,IBINSNO,RECNO,IBVAL
"RTN","IBNCPLOG",121,0)
 S IBINSNO=0
"RTN","IBNCPLOG",122,0)
 F  S IBINSNO=$O(IBDARR("INS",IBINSNO)) Q:+IBINSNO=0  D
"RTN","IBNCPLOG",123,0)
 . S IBSET1=$G(IBDARR("INS",IBINSNO,1))
"RTN","IBNCPLOG",124,0)
 . S IBSET2=$G(IBDARR("INS",IBINSNO,2))
"RTN","IBNCPLOG",125,0)
 . S IBSET3=$G(IBDARR("INS",IBINSNO,3))
"RTN","IBNCPLOG",126,0)
 . S RECNO=$$ADDINS(IBDTIEN,IBRECNO)
"RTN","IBNCPLOG",127,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.02,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,1))
"RTN","IBNCPLOG",128,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.03,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,2))
"RTN","IBNCPLOG",129,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.04,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,3))
"RTN","IBNCPLOG",130,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.05,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,4))
"RTN","IBNCPLOG",131,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.06,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,5))
"RTN","IBNCPLOG",132,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.07,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,6))
"RTN","IBNCPLOG",133,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.08,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,7))
"RTN","IBNCPLOG",134,0)
 . ;
"RTN","IBNCPLOG",135,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.101,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,8))
"RTN","IBNCPLOG",136,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.102,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,9))
"RTN","IBNCPLOG",137,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.103,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,10))
"RTN","IBNCPLOG",138,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.104,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,11))
"RTN","IBNCPLOG",139,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.105,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,12))
"RTN","IBNCPLOG",140,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.106,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,13))
"RTN","IBNCPLOG",141,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.107,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET1,U,14))
"RTN","IBNCPLOG",142,0)
 . ;
"RTN","IBNCPLOG",143,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.201,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET2,U,1))
"RTN","IBNCPLOG",144,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.202,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET2,U,2))
"RTN","IBNCPLOG",145,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.203,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET2,U,3))
"RTN","IBNCPLOG",146,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.204,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET2,U,4))
"RTN","IBNCPLOG",147,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.205,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET2,U,5))
"RTN","IBNCPLOG",148,0)
 . ;
"RTN","IBNCPLOG",149,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.301,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET3,U,1))
"RTN","IBNCPLOG",150,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.302,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET3,U,2))
"RTN","IBNCPLOG",151,0)
 . I +$$FILLFLDS^IBNCPUT1(366.1412,.303,RECNO_","_IBRECNO_","_IBDTIEN,$P(IBSET3,U,3))
"RTN","IBNCPLOG",152,0)
 Q RECNO
"RTN","IBNCPLOG",153,0)
 ;create top level entry in #366.14
"RTN","IBNCPLOG",154,0)
 ;input:
"RTN","IBNCPLOG",155,0)
 ; IBDATE - date in FileMan format
"RTN","IBNCPLOG",156,0)
 ;output
"RTN","IBNCPLOG",157,0)
 ; returns ien created
"RTN","IBNCPLOG",158,0)
ADDDATE(IBDATE) ;
"RTN","IBNCPLOG",159,0)
 N IBIEN
"RTN","IBNCPLOG",160,0)
 S IBIEN=+$O(^IBCNR(366.14,"B",IBDATE,0))
"RTN","IBNCPLOG",161,0)
 I IBIEN>0 Q IBIEN
"RTN","IBNCPLOG",162,0)
 I $$INSITEM^IBNCPUT1(366.14,"",IBDATE,"")
"RTN","IBNCPLOG",163,0)
 Q +$O(^IBCNR(366.14,"B",IBDATE,0))
"RTN","IBNCPLOG",164,0)
 ;
"RTN","IBNCPLOG",165,0)
 ;create EVENT entry in #366.14
"RTN","IBNCPLOG",166,0)
 ;input:
"RTN","IBNCPLOG",167,0)
 ;IBIEN - ien on top [DATE] level  
"RTN","IBNCPLOG",168,0)
 ;EVNTTYPE event type (value for .01)
"RTN","IBNCPLOG",169,0)
 ;returns ien for the event
"RTN","IBNCPLOG",170,0)
 ;or 0 if failed
"RTN","IBNCPLOG",171,0)
NEWEVENT(IBIEN,EVNTTYPE) ;
"RTN","IBNCPLOG",172,0)
 N EVNTRECN
"RTN","IBNCPLOG",173,0)
 S EVNTRECN=$$INSITEM^IBNCPUT1(366.141,IBIEN,$$EXT2INT^IBNCPUT1(EVNTTYPE),"","")
"RTN","IBNCPLOG",174,0)
 I EVNTRECN>0 Q EVNTRECN
"RTN","IBNCPLOG",175,0)
 Q 0
"RTN","IBNCPLOG",176,0)
 ;
"RTN","IBNCPLOG",177,0)
 ;add insurance node
"RTN","IBNCPLOG",178,0)
 ;IBDTIEN - ien on top [DATE] level 
"RTN","IBNCPLOG",179,0)
 ;IBEVIEN - ien in [EVENTS] multiple
"RTN","IBNCPLOG",180,0)
 ;returns : 
"RTN","IBNCPLOG",181,0)
 ; new ien in INSURANCE multiple 
"RTN","IBNCPLOG",182,0)
ADDINS(IBDTIEN,IBEVIEN) ;
"RTN","IBNCPLOG",183,0)
 N IBX,IBX2
"RTN","IBNCPLOG",184,0)
 F IBX=1:1:99999 I '$D(^IBCNR(366.14,IBDTIEN,1,IBEVIEN,5,IBX)) D  Q
"RTN","IBNCPLOG",185,0)
 . S IBX2=$$INSITEM^IBNCPUT1(366.1412,IBEVIEN_","_IBDTIEN,IBX,IBX)
"RTN","IBNCPLOG",186,0)
 Q +$O(^IBCNR(366.14,IBDTIEN,1,IBEVIEN,5,"B",IBX,0))
"RTN","IBNCPLOG",187,0)
 ;
"RTN","IBNCPNB")
0^6^B29299329
"RTN","IBNCPNB",1,0)
IBNCPNB ;OAK/ELZ - UTILITIES FOR NCPCP ;24-JUN-2003
"RTN","IBNCPNB",2,0)
 ;;2.0;INTEGRATED BILLING;**276,342**;21-MAR-94;Build 18
"RTN","IBNCPNB",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBNCPNB",4,0)
 ;
"RTN","IBNCPNB",5,0)
 ;NCPDP PHASE III
"RTN","IBNCPNB",6,0)
 Q
"RTN","IBNCPNB",7,0)
 ;
"RTN","IBNCPNB",8,0)
 ;
"RTN","IBNCPNB",9,0)
NONBR(DFN,IBRX,IBFIL,IBADT,IBCR,IBPAP,IBRC,IBCC,IBUSER) ; Set non-billable reason to CT
"RTN","IBNCPNB",10,0)
 ; input:
"RTN","IBNCPNB",11,0)
 ;    DFN - Patient
"RTN","IBNCPNB",12,0)
 ;    IBRX - Rx IEN
"RTN","IBNCPNB",13,0)
 ;    IBFIL - fill#
"RTN","IBNCPNB",14,0)
 ;    IBADT - fill date
"RTN","IBNCPNB",15,0)
 ;    IBCR - Close Claim Reason (#356.8)
"RTN","IBNCPNB",16,0)
 ;    IBPAP - Autobillable flag (billable (1) / non-billable (0) flag)
"RTN","IBNCPNB",17,0)
 ;    IBRC - Release Copay (entered by OPECC)
"RTN","IBNCPNB",18,0)
 ;    IBCC - Close Reason Comment (entered by OPECC)
"RTN","IBNCPNB",19,0)
 ;    IBUSER - DUZ of user triggering the billing event
"RTN","IBNCPNB",20,0)
 N IBTRKRN,DIE,IBRESN,DR,DA,IBRMARK,IBLOCK,IBEABD,IBEABD,IBACT,IBFDA
"RTN","IBNCPNB",21,0)
 ; update claims tracking
"RTN","IBNCPNB",22,0)
 S IBTRKRN=+$O(^IBT(356,"ARXFL",IBRX,IBFIL,0))
"RTN","IBNCPNB",23,0)
 I 'IBTRKRN D  ; if it doesn't exist - create it
"RTN","IBNCPNB",24,0)
 . N IBTRKR
"RTN","IBNCPNB",25,0)
 . S IBTRKR=$G(^IBE(350.9,1,6)) ; claims tracking info
"RTN","IBNCPNB",26,0)
 . ; date can't be before parameters
"RTN","IBNCPNB",27,0)
 . S $P(IBTRKR,U)=$S('$P(IBTRKR,U,4):0,+IBTRKR&(IBADT<+IBTRKR):0,1:IBADT)
"RTN","IBNCPNB",28,0)
 . I 'IBTRKR Q  ; CT Disabled
"RTN","IBNCPNB",29,0)
 . D CT^IBNCPDPU(DFN,IBRX,IBFIL,IBADT,$G(IBCR))
"RTN","IBNCPNB",30,0)
 . S IBTRKRN=+$O(^IBT(356,"ARXFL",IBRX,IBFIL,0))
"RTN","IBNCPNB",31,0)
 I 'IBTRKRN Q  ; CT disabled
"RTN","IBNCPNB",32,0)
 L +^IBT(356,IBTRKRN):10 S IBLOCK=$T
"RTN","IBNCPNB",33,0)
 S DIE="^IBT(356,",DA=IBTRKRN
"RTN","IBNCPNB",34,0)
 ;
"RTN","IBNCPNB",35,0)
 ;
"RTN","IBNCPNB",36,0)
 ; if Billable - set EABD+60
"RTN","IBNCPNB",37,0)
 I '$G(IBCR) D  G NONBRQ
"RTN","IBNCPNB",38,0)
 .Q:$$GET1^DIQ(356,IBTRKRN_",",.19,"I")  ;quit if non-billable
"RTN","IBNCPNB",39,0)
 .S IBEABD=$$EABD^IBTUTL($O(^IBE(356.6,"AC",4,0)),IBADT)
"RTN","IBNCPNB",40,0)
 .I IBEABD S IBEABD=$$FMADD^XLFDT(IBEABD,60)
"RTN","IBNCPNB",41,0)
 .S DR=".17////^S X=IBEABD" D ^DIE
"RTN","IBNCPNB",42,0)
 ;
"RTN","IBNCPNB",43,0)
 ; if still billable, set the EABD.
"RTN","IBNCPNB",44,0)
 ; 
"RTN","IBNCPNB",45,0)
 ; Don't check for the 2nd insurance in Phase 3 --
"RTN","IBNCPNB",46,0)
 ; allow the claim to become non-billable, ECME has already warned
"RTN","IBNCPNB",47,0)
 ; the user and provided information about the 2nd insurance
"RTN","IBNCPNB",48,0)
 ; in the User Screen
"RTN","IBNCPNB",49,0)
 ; I IBPAP!$$MOREINS(DFN,IBADT) D  G NONBRQ
"RTN","IBNCPNB",50,0)
 ; 
"RTN","IBNCPNB",51,0)
 I IBPAP D  G NONBRQ
"RTN","IBNCPNB",52,0)
 . S IBEABD=$$EABD^IBTUTL($O(^IBE(356.6,"AC",4,0)),IBADT)
"RTN","IBNCPNB",53,0)
 . I IBEABD<DT S IBEABD=DT
"RTN","IBNCPNB",54,0)
 . S DR=".19///@" D ^DIE ; it re-sets .17 (trigger in #356)
"RTN","IBNCPNB",55,0)
 . S DR=".17////^S X=IBEABD"
"RTN","IBNCPNB",56,0)
 . S IBRMARK=$$REASON^IBNCPDPU(IBCR)
"RTN","IBNCPNB",57,0)
 . I IBCC'="" S IBRMARK=IBRMARK_"; "_IBCC
"RTN","IBNCPNB",58,0)
 . I $L($G(IBCC))>2 S DR=DR_";1.08////^S X=$E(IBRMARK,1,80)"
"RTN","IBNCPNB",59,0)
 . D ^DIE
"RTN","IBNCPNB",60,0)
 ;
"RTN","IBNCPNB",61,0)
 ; set non-billable reason
"RTN","IBNCPNB",62,0)
 S IBRMARK=$$REASON^IBNCPDPU(IBCR)
"RTN","IBNCPNB",63,0)
 I IBRMARK="" S IBRMARK="OTHER" S IBCC="Unknown NBR '"_IBCR_"'. "_$G(IBCC)
"RTN","IBNCPNB",64,0)
 S DR=".19///"_IBRMARK
"RTN","IBNCPNB",65,0)
 I $L($G(IBCC))>2 S DR=DR_";1.08////^S X=$E(IBCC,1,80)"
"RTN","IBNCPNB",66,0)
 D ^DIE
"RTN","IBNCPNB",67,0)
 ;
"RTN","IBNCPNB",68,0)
NONBRQ ;
"RTN","IBNCPNB",69,0)
 I $G(IBRC) D  ; Release Copay
"RTN","IBNCPNB",70,0)
 . S IBACT=+$$RELCOPAY(DFN,IBRX,IBFIL,1,IBADT,0) ; release copay charges off hold
"RTN","IBNCPNB",71,0)
 . ;if 0 (not found on HOLD) we will have one more attempt, it was scheduled inside RELCOPAY
"RTN","IBNCPNB",72,0)
 . ; so doesn't make sense to send "NOT RELEASED" e-mail
"RTN","IBNCPNB",73,0)
 . ; if the 2nd attempt fails then e-mail will be send from RCTASK
"RTN","IBNCPNB",74,0)
 . ;we send e-mail only if -1 i.e. if charge was found on hold but 
"RTN","IBNCPNB",75,0)
 . ; ^IBR gave an error when we tried to release it
"RTN","IBNCPNB",76,0)
 . I IBACT=-1 D RELBUL^IBNCPEB(DFN,IBRX,IBFIL,IBADT,IBACT,IBCR,$G(IBCC),0,1)
"RTN","IBNCPNB",77,0)
 . ;if -2 (there is no copay) then do nothing
"RTN","IBNCPNB",78,0)
 S IBFDA(356,IBTRKRN_",",1.03)=DT  ; date last edited
"RTN","IBNCPNB",79,0)
 S IBFDA(356,IBTRKRN_",",1.04)=IBUSER   ; last edited by
"RTN","IBNCPNB",80,0)
 D FILE^DIE("","IBFDA"),MSG^DIALOG()
"RTN","IBNCPNB",81,0)
 I IBLOCK L -^IBT(356,IBTRKRN)
"RTN","IBNCPNB",82,0)
 Q
"RTN","IBNCPNB",83,0)
 ;
"RTN","IBNCPNB",84,0)
 ;
"RTN","IBNCPNB",85,0)
RELCOPAY(DFN,IBRX,IBFIL,IBRETRY,IBADT,IBIFN) ; Release copay charges on hold
"RTN","IBNCPNB",86,0)
 ; Input:
"RTN","IBNCPNB",87,0)
 ;    DFN - Patient IEN
"RTN","IBNCPNB",88,0)
 ;    IBRX - Rx IEN
"RTN","IBNCPNB",89,0)
 ;    IBFIL - fill/refill #
"RTN","IBNCPNB",90,0)
 ;    IBRETRY - retry flag
"RTN","IBNCPNB",91,0)
 ;    IBADT - fill date
"RTN","IBNCPNB",92,0)
 ;    IBIFN - 3rd party bill IEN
"RTN","IBNCPNB",93,0)
 ; output:
"RTN","IBNCPNB",94,0)
 ;    -2  == there is no any copay
"RTN","IBNCPNB",95,0)
 ;    -1^error code if unsuccessful  == if ^IBR error
"RTN","IBNCPNB",96,0)
 ;    0   == charge was not found (and depends on IBRETRY another attempt can be scheduled)
"RTN","IBNCPNB",97,0)
 ;    >0  == charge was released from HOLD
"RTN","IBNCPNB",98,0)
 ; this procedure will be called if the Payer agreed to pay 0.00
"RTN","IBNCPNB",99,0)
 ; or the claim was closed as non-billable by the OPECC.
"RTN","IBNCPNB",100,0)
 ; if patient exempt from RX copay then there is nothing to release from HOLD - quit
"RTN","IBNCPNB",101,0)
 I +$$RXEXMT^IBARXEU0(DFN,IBADT)=1 Q -2
"RTN","IBNCPNB",102,0)
 N IBACT,IBZ,IBFOUND,IBX,IBSEQNO,IBNOS,Y,IBDUZ,RCDUZ
"RTN","IBNCPNB",103,0)
 ; Schedule the task to speed up the whole process
"RTN","IBNCPNB",104,0)
 I 'IBRETRY D RCTASK(DFN,IBRX,IBFIL,+IBRETRY,IBADT,IBIFN) Q 0
"RTN","IBNCPNB",105,0)
 S IBFOUND=0
"RTN","IBNCPNB",106,0)
 S IBACT="A" F  S IBACT=$O(^IB("AH",DFN,IBACT),-1) Q:'IBACT  D  Q:IBFOUND
"RTN","IBNCPNB",107,0)
 . S IBZ=$G(^IB(IBACT,0)) Q:IBZ=""
"RTN","IBNCPNB",108,0)
 . S IBX=$P(IBZ,U,4)
"RTN","IBNCPNB",109,0)
 . I +IBX'=52 Q  ; not an Rx
"RTN","IBNCPNB",110,0)
 . I +$P(IBX,":",2)'=IBRX Q  ; other Rx
"RTN","IBNCPNB",111,0)
 . I +$P(IBX,":",3)'=IBFIL Q  ; other fill
"RTN","IBNCPNB",112,0)
 . S IBFOUND=IBACT
"RTN","IBNCPNB",113,0)
 I 'IBFOUND D RCTASK(DFN,IBRX,IBFIL,+$G(IBRETRY),IBADT,IBIFN) Q 0
"RTN","IBNCPNB",114,0)
 S IBSEQNO=1,IBNOS=IBFOUND
"RTN","IBNCPNB",115,0)
 S IBDUZ=$P($G(^IB(IBFOUND,1)),U) ; who entered the copay charge?
"RTN","IBNCPNB",116,0)
 S RCDUZ=IBDUZ
"RTN","IBNCPNB",117,0)
 D ^IBR I Y<0 Q Y
"RTN","IBNCPNB",118,0)
 Q IBFOUND
"RTN","IBNCPNB",119,0)
 ;
"RTN","IBNCPNB",120,0)
 ;Called by TaskMan
"RTN","IBNCPNB",121,0)
RELCRG ;
"RTN","IBNCPNB",122,0)
 N IBACT
"RTN","IBNCPNB",123,0)
 S IBACT=+$$RELCOPAY(DFN,IBRX,IBFIL,IBRETRY,IBADT,IBIFN)
"RTN","IBNCPNB",124,0)
 ;if 0 (not found on HOLD) we will have another attempt
"RTN","IBNCPNB",125,0)
 ;we send e-mail only if -1 (^IBR error)
"RTN","IBNCPNB",126,0)
 I IBACT=-1 D RELBUL^IBNCPEB(DFN,IBRX,IBFIL,IBADT,IBACT,0,"",IBIFN,IBRETRY)
"RTN","IBNCPNB",127,0)
 ;
"RTN","IBNCPNB",128,0)
 Q
"RTN","IBNCPNB",129,0)
 ;
"RTN","IBNCPNB",130,0)
 ;Schedule Release Copay
"RTN","IBNCPNB",131,0)
RCTASK(DFN,IBRX,IBFIL,IBRETRY,IBADT,IBIFN) ;
"RTN","IBNCPNB",132,0)
 N I,ZTRTN,ZTSAVE,ZTDESC,ZTDTH,ZTIO
"RTN","IBNCPNB",133,0)
 S IBRETRY=IBRETRY+1
"RTN","IBNCPNB",134,0)
 I IBRETRY>2 D  Q  ; Only two extra attempts
"RTN","IBNCPNB",135,0)
 . ;if all attempts were unsuccessful then send e-mail, set IBACT=0 since we do not have it
"RTN","IBNCPNB",136,0)
 . D RELBUL^IBNCPEB(DFN,IBRX,IBFIL,IBADT,0,0,"",IBIFN,2)
"RTN","IBNCPNB",137,0)
 S ZTRTN="RELCRG^IBNCPNB"
"RTN","IBNCPNB",138,0)
 F I="DFN","IBRX","IBFIL","IBRETRY","IBADT","IBIFN" S ZTSAVE(I)=""
"RTN","IBNCPNB",139,0)
 S ZTDESC="RELEASE COPAY RX IEN# "_IBRX
"RTN","IBNCPNB",140,0)
 S ZTIO=""
"RTN","IBNCPNB",141,0)
 S ZTDTH=$$HADD^XLFDT($H,0,0,0,$S(IBRETRY=1:10,1:600))
"RTN","IBNCPNB",142,0)
 D ^%ZTLOAD
"RTN","IBNCPNB",143,0)
 Q
"RTN","IBNCPNB",144,0)
 ;
"RTN","IBNCPNB",145,0)
 ;
"RTN","IBNCPNB",146,0)
 ; does the pat have >1 billable insur with pharm coverage?
"RTN","IBNCPNB",147,0)
MOREINS(DFN,IBADT) ;
"RTN","IBNCPNB",148,0)
 ; DFN - ptr to the patient
"RTN","IBNCPNB",149,0)
 ; IBADT - the effective date
"RTN","IBNCPNB",150,0)
 N IBANY,IBX,IBINS,IBT,IBRES,IBCAT
"RTN","IBNCPNB",151,0)
 S IBRES=0 ; No by default
"RTN","IBNCPNB",152,0)
 S IBCAT=$O(^IBE(355.31,"B","PHARMACY",0))
"RTN","IBNCPNB",153,0)
 ; -- look up insurance for patient
"RTN","IBNCPNB",154,0)
 D ALL^IBCNS1(DFN,"IBINS",1,IBADT,1)
"RTN","IBNCPNB",155,0)
 S IBX=0 F  S IBX=$O(IBINS("S",IBX)) Q:'IBX  D  Q:IBRES>1
"RTN","IBNCPNB",156,0)
 . S IBT=0 F  S IBT=$O(IBINS("S",IBX,IBT)) Q:'IBT  D  Q:IBRES>1
"RTN","IBNCPNB",157,0)
 . . N IBPL
"RTN","IBNCPNB",158,0)
 . . S IBPL=+$P($G(IBINS(IBT,0)),U,18) Q:'IBPL
"RTN","IBNCPNB",159,0)
 . . I '$$PLCOV^IBCNSU3(IBPL,IBADT,IBCAT) Q
"RTN","IBNCPNB",160,0)
 . . S IBRES=IBRES+1
"RTN","IBNCPNB",161,0)
 ;
"RTN","IBNCPNB",162,0)
 Q (IBRES>1)
"RTN","IBNCPNB",163,0)
 ;
"RTN","IBNCPNB",164,0)
 ;IBNCPNB
"RTN","IBNCPUT1")
0^11^B5230751
"RTN","IBNCPUT1",1,0)
IBNCPUT1 ;BHAM ISC/SS - IB NCPDP UTILITIES ;22-MAR-2006
"RTN","IBNCPUT1",2,0)
 ;;2.0;INTEGRATED BILLING;**342**;21-MAR-94;Build 18
"RTN","IBNCPUT1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBNCPUT1",4,0)
 ;
"RTN","IBNCPUT1",5,0)
 ;Utilities for NPCDP
"RTN","IBNCPUT1",6,0)
 ;/**
"RTN","IBNCPUT1",7,0)
 ;Creates a new entry (or node for multiple with .01 field)
"RTN","IBNCPUT1",8,0)
 ;
"RTN","IBNCPUT1",9,0)
 ;IBFILE - subfile# (9002313.59111) for comment
"RTN","IBNCPUT1",10,0)
 ;IBIEN - ien of the parent file entry in which the new subfile entry will be inserted
"RTN","IBNCPUT1",11,0)
 ;IBVAL01 - .01 value for the new entry
"RTN","IBNCPUT1",12,0)
 ;NEWRECNO -(optional) specify IEN if you want specific value
"RTN","IBNCPUT1",13,0)
 ; Note: "" then the system will assign the entry number itself.
"RTN","IBNCPUT1",14,0)
 ;IBFLGS - FLAGS parameter for UPDATE^DIE
"RTN","IBNCPUT1",15,0)
 ;Examples
"RTN","IBNCPUT1",16,0)
 ;top level:
"RTN","IBNCPUT1",17,0)
 ; D INSITEM(366.14,"",IBDATE,"")
"RTN","IBNCPUT1",18,0)
 ; D INSITEM(366.14,"",IBDATE,45)
"RTN","IBNCPUT1",19,0)
 ; 
"RTN","IBNCPUT1",20,0)
 ;1st level multiple:
"RTN","IBNCPUT1",21,0)
 ; subfile number = #366.141
"RTN","IBNCPUT1",22,0)
 ; parent file #366.14 entry number = 345
"RTN","IBNCPUT1",23,0)
 ; D INSITEM(366.141,345,"SUBMIT","")
"RTN","IBNCPUT1",24,0)
 ; to create mupltiple entry with particular entry number = 23
"RTN","IBNCPUT1",25,0)
 ; D INSITEM(366.141,345,"SUBMIT",23)
"RTN","IBNCPUT1",26,0)
 ;
"RTN","IBNCPUT1",27,0)
 ;2nd level multiple
"RTN","IBNCPUT1",28,0)
 ;parent file #366.14 entry number = 234
"RTN","IBNCPUT1",29,0)
 ;parent multiple entry number = 55
"RTN","IBNCPUT1",30,0)
 ;create mupltiple entry INSURANCE
"RTN","IBNCPUT1",31,0)
 ; D INSITEM(366.1412,"55,234","INS","")
"RTN","IBNCPUT1",32,0)
 ; results in :
"RTN","IBNCPUT1",33,0)
 ; ^IBCNR(366.14,234,1,55,5,0)=^366.1412PA^1^1
"RTN","IBNCPUT1",34,0)
 ; ^IBCNR(366.14,234,1,55,5,1,0)=INS
"RTN","IBNCPUT1",35,0)
 ; ^IBCNR(366.14,234,1,55,5,"B","INS",1)=
"RTN","IBNCPUT1",36,0)
 ;  (DD node for this muptiple =5 ) 
"RTN","IBNCPUT1",37,0)
 ;  
"RTN","IBNCPUT1",38,0)
 ;output :
"RTN","IBNCPUT1",39,0)
 ; positive number - record # created
"RTN","IBNCPUT1",40,0)
 ; <=0 - failure
"RTN","IBNCPUT1",41,0)
 ;  See description above
"RTN","IBNCPUT1",42,0)
INSITEM(IBFILE,IBIEN,IBVAL01,NEWRECNO,IBFLGS) ;*/
"RTN","IBNCPUT1",43,0)
 N IBSSI,IBIENS,IBFDA,IBERR
"RTN","IBNCPUT1",44,0)
 I '$G(NEWRECNO) N NEWRECNO S NEWRECNO=$G(NEWRECNO)
"RTN","IBNCPUT1",45,0)
 I IBIEN'="" S IBIENS="+1,"_IBIEN_"," I $L(NEWRECNO)>0 S IBSSI(1)=+NEWRECNO
"RTN","IBNCPUT1",46,0)
 I IBIEN="" S IBIENS="+1," I $L(NEWRECNO)>0 S IBSSI(1)=+NEWRECNO
"RTN","IBNCPUT1",47,0)
 S IBFDA(IBFILE,IBIENS,.01)=IBVAL01
"RTN","IBNCPUT1",48,0)
 D UPDATE^DIE($G(IBFLGS),"IBFDA","IBSSI","IBERR")
"RTN","IBNCPUT1",49,0)
 I $D(IBERR) D BMES^XPDUTL(IBERR("DIERR",1,"TEXT",1)) Q -1  ;D BMES^XPDUTL(IBERR("DIERR",1,"TEXT",1)) 
"RTN","IBNCPUT1",50,0)
 Q +$G(IBSSI(1))
"RTN","IBNCPUT1",51,0)
 ;
"RTN","IBNCPUT1",52,0)
 ;
"RTN","IBNCPUT1",53,0)
 ;fill fields
"RTN","IBNCPUT1",54,0)
 ;Input:
"RTN","IBNCPUT1",55,0)
 ;FILENO file number
"RTN","IBNCPUT1",56,0)
 ;FLDNO field number
"RTN","IBNCPUT1",57,0)
 ;RECIEN ien string 
"RTN","IBNCPUT1",58,0)
 ;NEWVAL new value to file
"RTN","IBNCPUT1",59,0)
 ;Output:
"RTN","IBNCPUT1",60,0)
 ;0^ NEWVAL^error if failure
"RTN","IBNCPUT1",61,0)
 ;1^ NEWVAL if success
"RTN","IBNCPUT1",62,0)
FILLFLDS(FILENO,FLDNO,RECIEN,NEWVAL) ;
"RTN","IBNCPUT1",63,0)
 N RECIENS,FDA,ERRARR
"RTN","IBNCPUT1",64,0)
 S RECIENS=RECIEN_","
"RTN","IBNCPUT1",65,0)
 S FDA(FILENO,RECIENS,FLDNO)=NEWVAL
"RTN","IBNCPUT1",66,0)
 D FILE^DIE("","FDA","ERRARR")
"RTN","IBNCPUT1",67,0)
 I $D(ERRARR) Q "0^"_NEWVAL_"^"_ERRARR("DIERR",1,"TEXT",1)
"RTN","IBNCPUT1",68,0)
 Q "1^"_NEWVAL
"RTN","IBNCPUT1",69,0)
 ;
"RTN","IBNCPUT1",70,0)
 ;convert external value of the field EVENT TYPE to its internal value
"RTN","IBNCPUT1",71,0)
 ;IA# 10155
"RTN","IBNCPUT1",72,0)
EXT2INT(IBEXTRN) ;
"RTN","IBNCPUT1",73,0)
 N IBDD,IBZ,IBCNT,IBINTERN
"RTN","IBNCPUT1",74,0)
 S IBINTERN=-1
"RTN","IBNCPUT1",75,0)
 S IBDD=$P($G(^DD(366.141,.01,0)),U,3) ;IA# 10155
"RTN","IBNCPUT1",76,0)
 F IBCNT=1:1 S IBZ=$P(IBDD,";",IBCNT) Q:IBZ=""  D  Q:IBINTERN'<0
"RTN","IBNCPUT1",77,0)
 . I $P(IBZ,":",2)=IBEXTRN S IBINTERN=+IBZ
"RTN","IBNCPUT1",78,0)
 Q:IBINTERN<0 0  ;treat as UNKNOWN
"RTN","IBNCPUT1",79,0)
 Q IBINTERN
"RTN","IBNCPUT1",80,0)
 ;IBNCPUT1
"RTN","IBOCPDS")
0^17^B59845655
"RTN","IBOCPDS",1,0)
IBOCPDS ;ALB/ARH - CLERK PRODUCTIVITY REPORT (SUMMARY) ;10/8/91
"RTN","IBOCPDS",2,0)
 ;;2.0;INTEGRATED BILLING;**44,118,155,342**;21-MAR-94;Build 18
"RTN","IBOCPDS",3,0)
 ;
"RTN","IBOCPDS",4,0)
EN ; - Get parameters then run the report.
"RTN","IBOCPDS",5,0)
 D ORDER^IBOCPD I IBQUIT G EXIT
"RTN","IBOCPDS",6,0)
 D HOME^%ZIS
"RTN","IBOCPDS",7,0)
 S IBHDR="CLERK PRODUCTIVITY SUMMARY REPORT" W @IOF,?22,IBHDR,!!
"RTN","IBOCPDS",8,0)
 S IBFLD="Date "_$S(IBORDER="E":"Entered",IBORDER="A":"Authorized",1:"First Printed")
"RTN","IBOCPDS",9,0)
 D RANGE^IBOCPD I IBQUIT G EXIT
"RTN","IBOCPDS",10,0)
 ;
"RTN","IBOCPDS",11,0)
 ; - Print without clerks' names?
"RTN","IBOCPDS",12,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("?")="^D HLP^IBOCPDS" W !
"RTN","IBOCPDS",13,0)
 S DIR("A")="Do you want to print the summary without the clerks' names"
"RTN","IBOCPDS",14,0)
 D ^DIR K DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G EXIT
"RTN","IBOCPDS",15,0)
 S IBNCLK=+Y K DIR,DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBOCPDS",16,0)
 ;
"RTN","IBOCPDS",17,0)
DEV ; - Get the device.
"RTN","IBOCPDS",18,0)
 W !!,"Report requires 132 columns."
"RTN","IBOCPDS",19,0)
 S %ZIS="QM",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS G:POP EXIT
"RTN","IBOCPDS",20,0)
 I $D(IO("Q")) S ZTRTN="ENT^IBOCPDS",ZTDESC="Clerk Productivity Summary Report",ZTSAVE("IB*")="" D ^%ZTLOAD K IO("Q") G EXIT
"RTN","IBOCPDS",21,0)
 U IO
"RTN","IBOCPDS",22,0)
 ;***
"RTN","IBOCPDS",23,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBOCPDS" D T1^%ZOSV ;stop rt clock
"RTN","IBOCPDS",24,0)
 ;
"RTN","IBOCPDS",25,0)
ENT ; - Find, save, and print the data that satisfies the search parameters
"RTN","IBOCPDS",26,0)
 ;   entry for tasked jobs.
"RTN","IBOCPDS",27,0)
 ;***
"RTN","IBOCPDS",28,0)
 ;S XRTL=$ZU(0),XRTN="IBOCPDS-2" D T0^%ZOSV ;start rt clock
"RTN","IBOCPDS",29,0)
 K ^TMP("IB",$J),IBMRAUSR
"RTN","IBOCPDS",30,0)
 S IBCDT=IBBEG-.001,IBE=IBEND+.3,U="^",IBQUIT=0
"RTN","IBOCPDS",31,0)
 S IBINDX=$S(IBORDER="E":"APD",IBORDER="A":"APD3",1:"AP")
"RTN","IBOCPDS",32,0)
 F  S IBCDT=$O(^DGCR(399,IBINDX,IBCDT)) Q:IBCDT=""!(IBCDT>IBE)!IBQUIT  S IFN=0 D  S IBQUIT=$$STOP
"RTN","IBOCPDS",33,0)
 .F  S IFN=$O(^DGCR(399,IBINDX,IBCDT,IFN)) Q:'IFN  D FILE
"RTN","IBOCPDS",34,0)
 ;
"RTN","IBOCPDS",35,0)
 ; 5/28/04 - esg - MRA project - patch 155 - get MRA request data
"RTN","IBOCPDS",36,0)
 ;
"RTN","IBOCPDS",37,0)
 S IBCDT=IBBEG-.001,IBE=IBEND+.3
"RTN","IBOCPDS",38,0)
 F  S IBCDT=$O(^DGCR(399,"APM",IBCDT)) Q:'IBCDT!(IBCDT>IBE)!IBQUIT  D
"RTN","IBOCPDS",39,0)
 . S IBQUIT=$$STOP Q:IBQUIT
"RTN","IBOCPDS",40,0)
 . S IFN=0
"RTN","IBOCPDS",41,0)
 . F  S IFN=$O(^DGCR(399,"APM",IBCDT,IFN)) Q:'IFN  D FILEMRA
"RTN","IBOCPDS",42,0)
 . Q
"RTN","IBOCPDS",43,0)
 ;
"RTN","IBOCPDS",44,0)
 I $D(^TMP("IB",$J)),'IBQUIT D PRINT
"RTN","IBOCPDS",45,0)
 ;
"RTN","IBOCPDS",46,0)
EXIT ; - Clean up and quit.
"RTN","IBOCPDS",47,0)
 K ^TMP("IB",$J)
"RTN","IBOCPDS",48,0)
 ;***
"RTN","IBOCPDS",49,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBOCPDS" D T1^%ZOSV ;stop rt clock
"RTN","IBOCPDS",50,0)
 I $D(ZTQUEUED) Q
"RTN","IBOCPDS",51,0)
 K IBE,IBBEG,IBBEGE,IBCANC,IBEND,IBENDE,IBCDT,IFN,IBRT,IBCLK,IBNCLK,IBCT
"RTN","IBOCPDS",52,0)
 K IBTD,IBNODE,IBPGN,IBLN,IBHDR,IBINDX,IBFLD,IBQUIT,IBORDER,IBI,X,Y
"RTN","IBOCPDS",53,0)
 K DTOUT,DUOUT,DIRUT,DIROUT,IBMRAUSR
"RTN","IBOCPDS",54,0)
 D ^%ZISC
"RTN","IBOCPDS",55,0)
 Q
"RTN","IBOCPDS",56,0)
 ;
"RTN","IBOCPDS",57,0)
FILE ; - Save the data in sorted order in a temporary file.
"RTN","IBOCPDS",58,0)
 S IBRT=$P($G(^DGCR(399,IFN,0)),U,7) I 'IBRT Q
"RTN","IBOCPDS",59,0)
 S IBCLK=$P($G(^VA(200,+$P($G(^DGCR(399,IFN,"S")),U,$S(IBORDER="E":2,IBORDER="A":11,IBORDER="P":13,1:0)),0)),U) I IBCLK="" Q
"RTN","IBOCPDS",60,0)
 S IBTD=$P($G(^DGCR(399,IFN,"U1")),U,1)-$P($G(^DGCR(399,IFN,"U1")),U,2)
"RTN","IBOCPDS",61,0)
 S IBCANC=($P(^DGCR(399,IFN,0),U,13)=7)
"RTN","IBOCPDS",62,0)
 S IBNODE=$G(^TMP("IB",$J)),$P(^($J),U,1,4)=($P(IBNODE,U,1)+1)_U_($P(IBNODE,U,2)+IBTD)_U_($P(IBNODE,U,3)+$S('IBCANC:0,1:1))_U_($P(IBNODE,U,4)+$S('IBCANC:0,1:IBTD))
"RTN","IBOCPDS",63,0)
 S IBNODE=$G(^TMP("IB",$J,IBCLK)),$P(^(IBCLK),U,1,4)=($P(IBNODE,U,1)+1)_U_($P(IBNODE,U,2)+IBTD)_U_($P(IBNODE,U,3)+$S('IBCANC:0,1:1))_U_($P(IBNODE,U,4)+$S('IBCANC:0,1:IBTD))
"RTN","IBOCPDS",64,0)
 S IBNODE=$G(^TMP("IB",$J,IBCLK,IBRT)),$P(^(IBRT),U,1,4)=($P(IBNODE,U,1)+1)_U_($P(IBNODE,U,2)+IBTD)_U_($P(IBNODE,U,3)+$S('IBCANC:0,1:1))_U_($P(IBNODE,U,4)+$S('IBCANC:0,1:IBTD))
"RTN","IBOCPDS",65,0)
 S IBNODE=$G(^TMP("IB",$J,"~~")),$P(^("~~"),U,1,4)=($P(IBNODE,U,1)+1)_U_($P(IBNODE,U,2)+IBTD)_U_($P(IBNODE,U,3)+$S('IBCANC:0,1:1))_U_($P(IBNODE,U,4)+$S('IBCANC:0,1:IBTD))
"RTN","IBOCPDS",66,0)
 S IBNODE=$G(^TMP("IB",$J,"~~",IBRT)),$P(^(IBRT),U,1,4)=($P(IBNODE,U,1)+1)_U_($P(IBNODE,U,2)+IBTD)_U_($P(IBNODE,U,3)+$S('IBCANC:0,1:1))_U_($P(IBNODE,U,4)+$S('IBCANC:0,1:IBTD))
"RTN","IBOCPDS",67,0)
 ;
"RTN","IBOCPDS",68,0)
 ; 7/26/04 - ESG - MRA Project - Capture division data for MRA authorizer user
"RTN","IBOCPDS",69,0)
 I IBCLK["AUTHORIZER,IB MRA"!(IBCLK["POSTMASTER")  D
"RTN","IBOCPDS",70,0)
 . N DIV
"RTN","IBOCPDS",71,0)
 . S DIV=+$P($G(^DGCR(399,IFN,0)),U,22)    ; division pointer
"RTN","IBOCPDS",72,0)
 . S DIV=$P($G(^DG(40.8,DIV,0)),U,1)       ; division name
"RTN","IBOCPDS",73,0)
 . I DIV="" S DIV="~UNKNOWN"
"RTN","IBOCPDS",74,0)
 . S IBNODE=$G(IBMRAUSR(IBCLK,IBRT,DIV))
"RTN","IBOCPDS",75,0)
 . S $P(IBMRAUSR(IBCLK,IBRT,DIV),U,1,4)=($P(IBNODE,U,1)+1)_U_($P(IBNODE,U,2)+IBTD)_U_($P(IBNODE,U,3)+$S('IBCANC:0,1:1))_U_($P(IBNODE,U,4)+$S('IBCANC:0,1:IBTD))
"RTN","IBOCPDS",76,0)
 . Q
"RTN","IBOCPDS",77,0)
 Q
"RTN","IBOCPDS",78,0)
 ;
"RTN","IBOCPDS",79,0)
FILEMRA ; Capture and file MRA data into the scratch global
"RTN","IBOCPDS",80,0)
 ; 9/9/03 - ESG - MRA Project
"RTN","IBOCPDS",81,0)
 NEW IBRT,IBTD,MRAUSR,IBNODE
"RTN","IBOCPDS",82,0)
 S IBRT=$P($G(^DGCR(399,IFN,0)),U,7) I 'IBRT G FMX
"RTN","IBOCPDS",83,0)
 S IBTD=$P($G(^DGCR(399,IFN,"U1")),U,1)-$P($G(^DGCR(399,IFN,"U1")),U,2)
"RTN","IBOCPDS",84,0)
 S MRAUSR=+$P($G(^DGCR(399,IFN,"S")),U,8)
"RTN","IBOCPDS",85,0)
 I 'MRAUSR G FMX
"RTN","IBOCPDS",86,0)
 S MRAUSR=$P($G(^VA(200,MRAUSR,0)),U,1)
"RTN","IBOCPDS",87,0)
 I MRAUSR="" G FMX
"RTN","IBOCPDS",88,0)
 S IBNODE=$G(^TMP("IB",$J)),$P(^($J),U,5,6)=($P(IBNODE,U,5)+1)_U_($P(IBNODE,U,6)+IBTD)
"RTN","IBOCPDS",89,0)
 S IBNODE=$G(^TMP("IB",$J,MRAUSR)),$P(^(MRAUSR),U,5,6)=($P(IBNODE,U,5)+1)_U_($P(IBNODE,U,6)+IBTD)
"RTN","IBOCPDS",90,0)
 S IBNODE=$G(^TMP("IB",$J,MRAUSR,IBRT)),$P(^(IBRT),U,5,6)=($P(IBNODE,U,5)+1)_U_($P(IBNODE,U,6)+IBTD)
"RTN","IBOCPDS",91,0)
 S IBNODE=$G(^TMP("IB",$J,"~~")),$P(^("~~"),U,5,6)=($P(IBNODE,U,5)+1)_U_($P(IBNODE,U,6)+IBTD)
"RTN","IBOCPDS",92,0)
 S IBNODE=$G(^TMP("IB",$J,"~~",IBRT)),$P(^(IBRT),U,5,6)=($P(IBNODE,U,5)+1)_U_($P(IBNODE,U,6)+IBTD)
"RTN","IBOCPDS",93,0)
 ;
"RTN","IBOCPDS",94,0)
FMX ;
"RTN","IBOCPDS",95,0)
 Q
"RTN","IBOCPDS",96,0)
 ;
"RTN","IBOCPDS",97,0)
 ;
"RTN","IBOCPDS",98,0)
PRINT ; - Print the report from the temp sort file to the appropriate device.
"RTN","IBOCPDS",99,0)
 N IBT,IBH1,L1,L2,T1,T2,T3,T4,T5,T6
"RTN","IBOCPDS",100,0)
 S IBCLK="",IBPGN=0
"RTN","IBOCPDS",101,0)
 S L1=7        ; length of count fields
"RTN","IBOCPDS",102,0)
 S L2=13       ; length of dollar amount fields
"RTN","IBOCPDS",103,0)
 S T1=50       ; tab stop 1 - total count
"RTN","IBOCPDS",104,0)
 S T2=59       ; tab stop 2 - total dollar amount
"RTN","IBOCPDS",105,0)
 S T3=78       ; tab stop 3 - cancelled count
"RTN","IBOCPDS",106,0)
 S T4=87       ; tab stop 4 - cancelled dollar amount
"RTN","IBOCPDS",107,0)
 S T5=106      ; tab stop 5 - MRA request count
"RTN","IBOCPDS",108,0)
 S T6=115      ; tab stop 6 - MRA request dollar amount
"RTN","IBOCPDS",109,0)
 D HDR F  S IBCLK=$O(^TMP("IB",$J,IBCLK)) Q:IBCLK=""!(IBQUIT)  D LINE
"RTN","IBOCPDS",110,0)
 S IBT=$G(^TMP("IB",$J)) I IBQUIT Q
"RTN","IBOCPDS",111,0)
 W !!,"TOTAL:",?T1,$J(+$P(IBT,U,1),L1),?T2,$J($P(IBT,U,2),L2,2),?T3,$J(+$P(IBT,U,3),L1),?T4,$J($P(IBT,U,4),L2,2),?T5,$J(+$P(IBT,U,5),L1),?T6,$J($P(IBT,U,6),L2,2),!
"RTN","IBOCPDS",112,0)
 D NOTE^IBOCPD,PAUSE
"RTN","IBOCPDS",113,0)
 Q
"RTN","IBOCPDS",114,0)
 ;
"RTN","IBOCPDS",115,0)
LINE ; - Print all data for a particular clerk.
"RTN","IBOCPDS",116,0)
 N IBT,DIV
"RTN","IBOCPDS",117,0)
 S IBLN=IBLN+1 I IBNCLK S IBCT=$G(IBCT)+1
"RTN","IBOCPDS",118,0)
 I IBCLK'="~~" W !,$S(IBNCLK:"CLERK #"_IBCT,1:$E(IBCLK,1,25))
"RTN","IBOCPDS",119,0)
 E  W !,"RATE TYPE TOTALS"
"RTN","IBOCPDS",120,0)
 S IBRT="" F  S IBRT=$O(^TMP("IB",$J,IBCLK,IBRT)) Q:IBRT=""!(IBQUIT)  D  Q:IBQUIT  S IBLN=IBLN+1 I IBLN>(IOSL-7) D PAUSE,HDR:'IBQUIT
"RTN","IBOCPDS",121,0)
 . S IBT=$G(^TMP("IB",$J,IBCLK,IBRT))
"RTN","IBOCPDS",122,0)
 . W ?30,$E($P(^DGCR(399.3,IBRT,0),U,1),1,20),?T1,$J(+$P(IBT,U,1),L1),?T2,$J($P(IBT,U,2),L2,2),?T3,$J(+$P(IBT,U,3),L1),?T4,$J($P(IBT,U,4),L2,2)
"RTN","IBOCPDS",123,0)
 . W ?T5,$J(+$P(IBT,U,5),L1),?T6,$J($P(IBT,U,6),L2,2),!
"RTN","IBOCPDS",124,0)
 . ; divisional display
"RTN","IBOCPDS",125,0)
 . I '$D(IBMRAUSR(IBCLK,IBRT)) Q
"RTN","IBOCPDS",126,0)
 . W ?T1,"  -----",?T2,"  -----------",?T3,"  -----",?T4,"  -----------",?T5,"  -----",?T6,"  -----------"
"RTN","IBOCPDS",127,0)
 . S DIV=""
"RTN","IBOCPDS",128,0)
 . F  S DIV=$O(IBMRAUSR(IBCLK,IBRT,DIV)) Q:DIV=""!IBQUIT  D
"RTN","IBOCPDS",129,0)
 .. S IBLN=IBLN+1 I IBLN>(IOSL-7) D PAUSE,HDR:'IBQUIT
"RTN","IBOCPDS",130,0)
 .. I IBQUIT Q
"RTN","IBOCPDS",131,0)
 .. S IBT=$G(IBMRAUSR(IBCLK,IBRT,DIV))
"RTN","IBOCPDS",132,0)
 .. W !?7,DIV,?T1,$J(+$P(IBT,U,1),L1),?T2,$J($P(IBT,U,2),L2,2),?T3,$J(+$P(IBT,U,3),L1),?T4,$J($P(IBT,U,4),L2,2),?T5,$J(+$P(IBT,U,5),L1),?T6,$J($P(IBT,U,6),L2,2)
"RTN","IBOCPDS",133,0)
 .. Q
"RTN","IBOCPDS",134,0)
 . I IBQUIT Q
"RTN","IBOCPDS",135,0)
 . W !
"RTN","IBOCPDS",136,0)
 . Q
"RTN","IBOCPDS",137,0)
 ;
"RTN","IBOCPDS",138,0)
 I IBQUIT Q
"RTN","IBOCPDS",139,0)
 W ?T1,"  -----",?T2,"  -----------",?T3,"  -----",?T4,"  -----------"
"RTN","IBOCPDS",140,0)
 W ?T5,"  -----",?T6,"  -----------"
"RTN","IBOCPDS",141,0)
 S IBT=$G(^TMP("IB",$J,IBCLK))
"RTN","IBOCPDS",142,0)
 W !,?30,"SUBTOTAL:",?T1,$J(+$P(IBT,U,1),L1),?T2,$J($P(IBT,U,2),L2,2),?T3,$J(+$P(IBT,U,3),L1),?T4,$J($P(IBT,U,4),L2,2)
"RTN","IBOCPDS",143,0)
 W ?T5,$J(+$P(IBT,U,5),L1),?T6,$J($P(IBT,U,6),L2,2),!
"RTN","IBOCPDS",144,0)
 S IBLN=IBLN+2
"RTN","IBOCPDS",145,0)
 Q
"RTN","IBOCPDS",146,0)
 ;
"RTN","IBOCPDS",147,0)
HDR ; - Print the report header.
"RTN","IBOCPDS",148,0)
 N IBH1,IBH2
"RTN","IBOCPDS",149,0)
 S IBQUIT=$$STOP Q:IBQUIT  S IBPGN=IBPGN+1,IBLN=7
"RTN","IBOCPDS",150,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S IBCDT=$P(Y,"@",1)_"  "_$P(Y,"@",2)
"RTN","IBOCPDS",151,0)
 I IBPGN>1!($E(IOST,1,2)["C-") W @IOF
"RTN","IBOCPDS",152,0)
 S IBH1=$S(IBORDER="E":"ENTERED",IBORDER="A":"AUTHORIZED",1:"FIRST PRINTED")
"RTN","IBOCPDS",153,0)
 W "CLERK PRODUCTIVITY SUMMARY FOR BILLS ",IBH1," ",IBBEGE," - ",IBENDE I IOM<85 W !
"RTN","IBOCPDS",154,0)
 S IBH2=$S(IBORDER'="P":IBH1,1:"PRINTED") S:IBORDER="E" IBH1="ENTERED/EDITED"
"RTN","IBOCPDS",155,0)
 W ?(IOM-30),IBCDT,?(IOM-8),"PAGE ",IBPGN,!
"RTN","IBOCPDS",156,0)
 W !,?T1,"---",$S(IBORDER'="A":"-",1:""),"TOTAL ",IBH2,"---",$S(IBORDER'="A":"--",1:""),?T3,"-",$S(IBORDER'="A":"-",1:""),IBH2," CANCELLED-",$S(IBORDER'="A":"--",1:"")
"RTN","IBOCPDS",157,0)
 W ?T5,"-----MRA REQUESTS-----"
"RTN","IBOCPDS",158,0)
 W !,IBH1," BY",?30,"RATE TYPE",?T1,$J("COUNT",L1),?T2,$J("AMOUNT",L2),?T3,$J("COUNT",L1),?T4,$J("AMOUNT",L2)
"RTN","IBOCPDS",159,0)
 W ?T5,$J("COUNT",L1),?T6,$J("AMOUNT",L2),!
"RTN","IBOCPDS",160,0)
 S IBI="",$P(IBI,"-",IOM+1)="" W IBI,!
"RTN","IBOCPDS",161,0)
 Q
"RTN","IBOCPDS",162,0)
 ;
"RTN","IBOCPDS",163,0)
PAUSE ; - Pause at end of screen if beeing displayed on a terminal.
"RTN","IBOCPDS",164,0)
 Q:$E(IOST,1,2)'["C-"
"RTN","IBOCPDS",165,0)
 S DIR(0)="E" D ^DIR K DIR
"RTN","IBOCPDS",166,0)
 I $D(DUOUT)!($D(DIRUT)) S IBQUIT=1
"RTN","IBOCPDS",167,0)
 Q
"RTN","IBOCPDS",168,0)
 ;
"RTN","IBOCPDS",169,0)
STOP() ; - Determine if user has requested the queued report to stop.
"RTN","IBOCPDS",170,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !,"***TASK STOPPED BY USER***"
"RTN","IBOCPDS",171,0)
 Q +$G(ZTSTOP)
"RTN","IBOCPDS",172,0)
 ;
"RTN","IBOCPDS",173,0)
HLP ; - "Do you want to print..." prompt.
"RTN","IBOCPDS",174,0)
 W !!,"Select: '<CR>' to print the summary with the clerks' actual names"
"RTN","IBOCPDS",175,0)
 W !?11,"'Y' to print the summary with an identifier ('CLERK #xxx')"
"RTN","IBOCPDS",176,0)
 W !?15,"in place of the clerks' names",!?11,"'^' to quit"
"RTN","IBOCPDS",177,0)
 Q
"VER")
8.0^22.0
"^DD",366.14,366.14,0)
FIELD^^1^2
"^DD",366.14,366.14,0,"DDA")
N
"^DD",366.14,366.14,0,"DT")
3060620
"^DD",366.14,366.14,0,"IX","B",366.14,.01)

"^DD",366.14,366.14,0,"IX","D",366.141,.03)

"^DD",366.14,366.14,0,"IX","E",366.141,.13)

"^DD",366.14,366.14,0,"IX","I",366.141,.201)

"^DD",366.14,366.14,0,"IX","I",366.141,.212)

"^DD",366.14,366.14,0,"IX","R",366.141,.202)

"^DD",366.14,366.14,0,"IX","U",366.141,.06)

"^DD",366.14,366.14,0,"NM","IB NCPDP EVENT LOG")

"^DD",366.14,366.14,0,"VRPK")
IB
"^DD",366.14,366.14,.01,0)
DATE^RD^^0;1^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",366.14,366.14,.01,1,0)
^.1
"^DD",366.14,366.14,.01,1,1,0)
366.14^B
"^DD",366.14,366.14,.01,1,1,1)
S ^IBCNR(366.14,"B",$E(X,1,30),DA)=""
"^DD",366.14,366.14,.01,1,1,2)
K ^IBCNR(366.14,"B",$E(X,1,30),DA)
"^DD",366.14,366.14,.01,3)
Represents the date when specific ePharmacy billing events occurred for an outpatient claim.
"^DD",366.14,366.14,.01,21,0)
^^2^2^3060621^
"^DD",366.14,366.14,.01,21,1,0)
This date is populated by the IB software That supports the processing of
"^DD",366.14,366.14,.01,21,2,0)
ePharmacy Billing events for outpatient claims.
"^DD",366.14,366.14,.01,"DT")
3060621
"^DD",366.14,366.14,1,0)
EVENT^366.141SA^^1;0
"^DD",366.14,366.14,1,21,0)
^^2^2^3060621^
"^DD",366.14,366.14,1,21,1,0)
This multiple contains 1 to many records by Event type that can occur on 
"^DD",366.14,366.14,1,21,2,0)
a given date for 1 to many outpatient prescription claims.
"^DD",366.14,366.14,1,23,0)
^^4^4^3060621^
"^DD",366.14,366.14,1,23,1,0)
The records in this sub-file are stored by sequence or as they occur in 
"^DD",366.14,366.14,1,23,2,0)
time for a given date.  This sub-file is updated when one of the 2 
"^DD",366.14,366.14,1,23,3,0)
functions, $$RX^IBNCPDP or $$STORES^IBNCPDP are invoked by the calling 
"^DD",366.14,366.14,1,23,4,0)
application when processing ePharmacy related billing events.
"^DD",366.14,366.14,1,"DT")
3060316
"^DD",366.14,366.141,0)
EVENT SUB-FIELD^^.08^46
"^DD",366.14,366.141,0,"DT")
3060620
"^DD",366.14,366.141,0,"IX","B",366.141,.01)

"^DD",366.14,366.141,0,"NM","EVENT")

"^DD",366.14,366.141,0,"UP")
366.14
"^DD",366.14,366.141,.01,0)
EVENT TYPE^RS^0:UNKNOWN;1:BILLABLE STATUS CHECK;2:SUBMIT;3:BILL;4:RELEASE;5:REVERSE;6:CLOSE;7:REOPEN;^0;1^Q
"^DD",366.14,366.141,.01,1,0)
^.1
"^DD",366.14,366.141,.01,1,1,0)
366.141^B
"^DD",366.14,366.141,.01,1,1,1)
S ^IBCNR(366.14,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",366.14,366.141,.01,1,1,2)
K ^IBCNR(366.14,DA(1),1,"B",$E(X,1,30),DA)
"^DD",366.14,366.141,.01,3)
Pharmacy event types
"^DD",366.14,366.141,.01,21,0)
^^2^2^3060621^
"^DD",366.14,366.141,.01,21,1,0)
The event types represent the various ePharmacy billing events during the 
"^DD",366.14,366.141,.01,21,2,0)
processing of outpatient Rx claims.
"^DD",366.14,366.141,.01,"DT")
3060621
"^DD",366.14,366.141,.03,0)
PATIENT^P2'^DPT(^0;3^Q
"^DD",366.14,366.141,.03,1,0)
^.1
"^DD",366.14,366.141,.03,1,1,0)
366.14^D
"^DD",366.14,366.141,.03,1,1,1)
S ^IBCNR(366.14,"D",$E(X,1,30),DA(1),DA)=""
"^DD",366.14,366.141,.03,1,1,2)
K ^IBCNR(366.14,"D",$E(X,1,30),DA(1),DA)
"^DD",366.14,366.141,.03,1,1,"DT")
3060307
"^DD",366.14,366.141,.03,3)
Internally populated by the IB application (not entered by the user).
"^DD",366.14,366.141,.03,21,0)
^^1^1^3060621^^
"^DD",366.14,366.141,.03,21,1,0)
PATIENT on the Rx claim
"^DD",366.14,366.141,.03,"DT")
3060621
"^DD",366.14,366.141,.04,0)
JOB^NJ9,0^^0;4^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",366.14,366.141,.04,3)
Type a Number between 0 and 999999999, 0 Decimal Digits
"^DD",366.14,366.141,.04,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.04,21,1,0)
The job number of the job currently executing
"^DD",366.14,366.141,.04,"DT")
3060620
"^DD",366.14,366.141,.05,0)
TIME^D^^0;5^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",366.14,366.141,.05,1,0)
^.1^^0
"^DD",366.14,366.141,.05,3)
Enter date and time
"^DD",366.14,366.141,.05,21,0)
^^1^1^3060620^^
"^DD",366.14,366.141,.05,21,1,0)
Date and time of the event
"^DD",366.14,366.141,.05,"DT")
3060620
"^DD",366.14,366.141,.06,0)
ePHARMACY USER^P200'^VA(200,^0;6^Q
"^DD",366.14,366.141,.06,1,0)
^.1
"^DD",366.14,366.141,.06,1,1,0)
366.14^U
"^DD",366.14,366.141,.06,1,1,1)
S ^IBCNR(366.14,"U",$E(X,1,30),DA(1),DA)=""
"^DD",366.14,366.141,.06,1,1,2)
K ^IBCNR(366.14,"U",$E(X,1,30),DA(1),DA)
"^DD",366.14,366.141,.06,1,1,"DT")
3060307
"^DD",366.14,366.141,.06,3)

"^DD",366.14,366.141,.06,21,0)
^^4^4^3060621^
"^DD",366.14,366.141,.06,21,1,0)
System user who triggered the e-pharmacy event. This can be the system
"^DD",366.14,366.141,.06,21,2,0)
user who enters prescription or makes billing operation on e-pharmacy
"^DD",366.14,366.141,.06,21,3,0)
claims. It also can be POSTMASTER if the operation (like claims
"^DD",366.14,366.141,.06,21,4,0)
auto-reversal process) was performed by a background job.
"^DD",366.14,366.141,.06,23,0)
^^1^1^3060620^
"^DD",366.14,366.141,.06,23,1,0)
NEW PERSON file #200 internal entry number
"^DD",366.14,366.141,.06,"DT")
3060621
"^DD",366.14,366.141,.07,0)
RESULT^NJ5,0^^0;7^K:+X'=X!(X>99999)!(X<-99999)!(X?.E1"."1N.N) X
"^DD",366.14,366.141,.07,3)
Type a Number between -99999 and 99999, 0 Decimal Digits
"^DD",366.14,366.141,.07,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.07,21,1,0)
Result of the event processing - return code
"^DD",366.14,366.141,.07,"DT")
3060620
"^DD",366.14,366.141,.08,0)
RESULT MESSAGE^F^^0;8^K:$L(X)>40!($L(X)<1) X
"^DD",366.14,366.141,.08,3)
Answer must be 1-40 characters in length.
"^DD",366.14,366.141,.08,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.08,21,1,0)
Result of the event processing - message
"^DD",366.14,366.141,.08,"DT")
3060620
"^DD",366.14,366.141,.11,0)
AUTH #^F^^1;1^K:$L(X)>30!($L(X)<1) X
"^DD",366.14,366.141,.11,3)
Answer must be 1-30 characters in length.
"^DD",366.14,366.141,.11,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.11,21,1,0)
ECME approval/authorization number
"^DD",366.14,366.141,.11,"DT")
3060620
"^DD",366.14,366.141,.12,0)
BCID^F^^1;2^K:$L(X)>30!($L(X)<1) X
"^DD",366.14,366.141,.12,3)
Answer must be 1-30 characters in length.
"^DD",366.14,366.141,.12,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.12,21,1,0)
Prescription/Service Reference Number and Fill Date divided by semicolon
"^DD",366.14,366.141,.12,23,0)
^^4^4^3060620^
"^DD",366.14,366.141,.12,23,1,0)
Prescription/Service Reference Number;Fill Date
"^DD",366.14,366.141,.12,23,2,0)
Where:
"^DD",366.14,366.141,.12,23,3,0)
Prescription/Service Ref  Number is 7 digits
"^DD",366.14,366.141,.12,23,4,0)
Fill Date is 8 digits in YYYYMMDD format
"^DD",366.14,366.141,.12,"DT")
3060620
"^DD",366.14,366.141,.13,0)
CLAIMID^F^^1;3^K:$L(X)>7!($L(X)<7) X
"^DD",366.14,366.141,.13,1,0)
^.1
"^DD",366.14,366.141,.13,1,1,0)
366.14^E^MUMPS
"^DD",366.14,366.141,.13,1,1,1)
S ^IBCNR(366.14,"E",$E(X,1,30),$G(^IBCNR(366.14,DA(1),0)),DA)=""
"^DD",366.14,366.141,.13,1,1,2)
K ^IBCNR(366.14,"E",$E(X,1,30),$G(^IBCNR(366.14,DA(1),0)),DA)
"^DD",366.14,366.141,.13,1,1,"DT")
3060308
"^DD",366.14,366.141,.13,3)
Answer must be 7 characters in length.
"^DD",366.14,366.141,.13,21,0)
^.001^1^1^3060308^^^
"^DD",366.14,366.141,.13,21,1,0)
7 digits ECME number with leading zero(s)
"^DD",366.14,366.141,.13,"DT")
3060308
"^DD",366.14,366.141,.14,0)
PATIENT IN IBD^P2'^DPT(^1;4^Q
"^DD",366.14,366.141,.14,3)

"^DD",366.14,366.141,.14,21,0)
^.001^2^2^3060620^^^
"^DD",366.14,366.141,.14,21,1,0)
PATIENT identifier passed in IBD ARRAY when outside application calls
"^DD",366.14,366.141,.14,21,2,0)
$$STORESP^IBNCPDP (IA #4299)
"^DD",366.14,366.141,.14,23,0)
^^2^2^3060620^
"^DD",366.14,366.141,.14,23,1,0)
Pointer to PATIENT file #2 passed into $$STORESP^IBNCPDP in "DFN" node of
"^DD",366.14,366.141,.14,23,2,0)
IBD array.
"^DD",366.14,366.141,.14,"DT")
3060620
"^DD",366.14,366.141,.15,0)
DIVISION^P40.8'^DG(40.8,^1;5^Q
"^DD",366.14,366.141,.15,3)
Select a division
"^DD",366.14,366.141,.15,21,0)
^.001^1^1^3060317^^
"^DD",366.14,366.141,.15,21,1,0)
Division identifier
"^DD",366.14,366.141,.15,"DT")
3060620
"^DD",366.14,366.141,.16,0)
RESPONSE^F^^1;6^K:$L(X)>20!($L(X)<1) X
"^DD",366.14,366.141,.16,3)
Answer must be 1-20 characters in length.
"^DD",366.14,366.141,.16,21,0)
^^5^5^3060620^^
"^DD",366.14,366.141,.16,21,1,0)
Response from the payer:
"^DD",366.14,366.141,.16,21,2,0)
ACCEPTED
"^DD",366.14,366.141,.16,21,3,0)
PAYABLE
"^DD",366.14,366.141,.16,21,4,0)
REJECTED
"^DD",366.14,366.141,.16,21,5,0)
DUPLICATE
"^DD",366.14,366.141,.16,"DT")
3060620
"^DD",366.14,366.141,.17,0)
REVERSAL REASON^F^^1;7^K:$L(X)>40!($L(X)<1) X
"^DD",366.14,366.141,.17,3)
Answer must be 1-40 characters in length.
"^DD",366.14,366.141,.17,21,0)
^^1^1^3060214^
"^DD",366.14,366.141,.17,21,1,0)
Reversal reason
"^DD",366.14,366.141,.17,"DT")
3060214
"^DD",366.14,366.141,.18,0)
RTS-DEL^NJ2,0^^1;8^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",366.14,366.141,.18,3)
Type a Number between 0 and 99, 0 Decimal Digits
"^DD",366.14,366.141,.18,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.18,21,1,0)
Return to Stock-Delete status
"^DD",366.14,366.141,.18,"DT")
3060620
"^DD",366.14,366.141,.19,0)
STATUS^F^^1;9^K:$L(X)>20!($L(X)<1) X
"^DD",366.14,366.141,.19,3)
Answer must be 1-20 characters in length.
"^DD",366.14,366.141,.19,21,0)
^^2^2^3060620^
"^DD",366.14,366.141,.19,21,1,0)
Bill status - one of the following values: "PAID","REJECTED","REVERSED", 
"^DD",366.14,366.141,.19,21,2,0)
"CLOSED", "RELEASED", or "SUBMITTED"
"^DD",366.14,366.141,.19,"DT")
3060620
"^DD",366.14,366.141,.201,0)
PRESCRIPTION^P52'^PSRX(^2;1^Q
"^DD",366.14,366.141,.201,1,0)
^.1
"^DD",366.14,366.141,.201,1,1,0)
366.14^I
"^DD",366.14,366.141,.201,1,1,1)
S ^IBCNR(366.14,"I",$E(X,1,30),DA(1),DA)=""
"^DD",366.14,366.141,.201,1,1,2)
K ^IBCNR(366.14,"I",$E(X,1,30),DA(1),DA)
"^DD",366.14,366.141,.201,1,1,"DT")
3060307
"^DD",366.14,366.141,.201,3)
Enter a prescription
"^DD",366.14,366.141,.201,21,0)
^^2^2^3060620^
"^DD",366.14,366.141,.201,21,1,0)
Pointer TO PRESCRIPTION FILE (#52) as passed into $$STORESP^ IBNCPDP (IA 
"^DD",366.14,366.141,.201,21,2,0)
# 4299) in "PRESCRIPTION" node
"^DD",366.14,366.141,.201,"DT")
3060620
"^DD",366.14,366.141,.202,0)
RX NO^F^^2;2^K:$L(X)>20!($L(X)<1) X
"^DD",366.14,366.141,.202,1,0)
^.1
"^DD",366.14,366.141,.202,1,1,0)
366.14^R
"^DD",366.14,366.141,.202,1,1,1)
S ^IBCNR(366.14,"R",$E(X,1,30),DA(1),DA)=""
"^DD",366.14,366.141,.202,1,1,2)
K ^IBCNR(366.14,"R",$E(X,1,30),DA(1),DA)
"^DD",366.14,366.141,.202,1,1,"DT")
3060307
"^DD",366.14,366.141,.202,3)
Answer must be 1-20 characters in length.
"^DD",366.14,366.141,.202,21,0)
^^2^2^3060620^
"^DD",366.14,366.141,.202,21,1,0)
RX Number from file #52 passed into $$STORESP^IBNCPDP (IA # 4299) in
"^DD",366.14,366.141,.202,21,2,0)
the "RX NO" node
"^DD",366.14,366.141,.202,"DT")
3060620
"^DD",366.14,366.141,.203,0)
FILL NUMBER^NJ5,0^^2;3^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",366.14,366.141,.203,3)
Type a Number between 0 and 99999, 0 Decimal Digits
"^DD",366.14,366.141,.203,21,0)
^^3^3^3060620^^
"^DD",366.14,366.141,.203,21,1,0)
Refill #
"^DD",366.14,366.141,.203,21,2,0)
0 - for original refill
"^DD",366.14,366.141,.203,21,3,0)
1...n - for other refills
"^DD",366.14,366.141,.203,"DT")
3060620
"^DD",366.14,366.141,.204,0)
DRUG^F^^2;4^K:$L(X)>50!($L(X)<1) X
"^DD",366.14,366.141,.204,3)
Answer must be 1-50 characters in length.
"^DD",366.14,366.141,.204,21,0)
^^1^1^3060621^
"^DD",366.14,366.141,.204,21,1,0)
Prescription Drug on the claim
"^DD",366.14,366.141,.204,"DT")
3060621
"^DD",366.14,366.141,.205,0)
NDC^F^^2;5^K:$L(X)>15!($L(X)<1) X
"^DD",366.14,366.141,.205,3)
Answer must be 1-15 characters in length.
"^DD",366.14,366.141,.205,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.205,21,1,0)
National Drug Code number
"^DD",366.14,366.141,.205,"DT")
3060620
"^DD",366.14,366.141,.206,0)
FILL DATE^D^^2;6^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",366.14,366.141,.206,3)
Rx fill/refill date
"^DD",366.14,366.141,.206,21,0)
^^1^1^3060621^
"^DD",366.14,366.141,.206,21,1,0)
Original fill/refill fill date of the outpatient pharmacy Rx.
"^DD",366.14,366.141,.206,"DT")
3060621
"^DD",366.14,366.141,.207,0)
RELEASE DATE^D^^2;7^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",366.14,366.141,.207,3)
Date of Rx release
"^DD",366.14,366.141,.207,21,0)
^^2^2^3060621^
"^DD",366.14,366.141,.207,21,1,0)
Rx release date in FileMan format. The field is populated only if the Rx 
"^DD",366.14,366.141,.207,21,2,0)
was released.
"^DD",366.14,366.141,.207,"DT")
3060621
"^DD",366.14,366.141,.208,0)
QTY^NJ10,3^^2;8^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."4N.N) X
"^DD",366.14,366.141,.208,3)
Type a Number between 0 and 999999, 3 Decimal Digits
"^DD",366.14,366.141,.208,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.208,21,1,0)
RX quantity
"^DD",366.14,366.141,.208,23,0)
^^1^1^3060620^
"^DD",366.14,366.141,.208,23,1,0)
RX Quantity
"^DD",366.14,366.141,.208,"DT")
3060620
"^DD",366.14,366.141,.209,0)
DAYS SUPPLY^NJ6,0^^2;9^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",366.14,366.141,.209,3)
Type a Number between 0 and 999999, 0 Decimal Digits
"^DD",366.14,366.141,.209,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.209,21,1,0)
RX Days Supply
"^DD",366.14,366.141,.209,"DT")
3060620
"^DD",366.14,366.141,.21,0)
DEA^F^^2;10^K:$L(X)>10!($L(X)<1) X
"^DD",366.14,366.141,.21,3)
Answer must be 1-10 characters in length.
"^DD",366.14,366.141,.21,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.21,21,1,0)
Drug Enforcement Agency number
"^DD",366.14,366.141,.21,"DT")
3060620
"^DD",366.14,366.141,.211,0)
FILLED BY^P200'^VA(200,^2;11^Q
"^DD",366.14,366.141,.211,3)
Enter a user who filled RX
"^DD",366.14,366.141,.211,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.211,21,1,0)
Person, who filled the RX refill.
"^DD",366.14,366.141,.211,23,0)
^^1^1^3060620^
"^DD",366.14,366.141,.211,23,1,0)
Pointer to the NEW PERSON FILE (#200)
"^DD",366.14,366.141,.211,"DT")
3060620
"^DD",366.14,366.141,.212,0)
RX #^P52'^PSRX(^2;12^Q
"^DD",366.14,366.141,.212,1,0)
^.1
"^DD",366.14,366.141,.212,1,1,0)
366.14^I
"^DD",366.14,366.141,.212,1,1,1)
S ^IBCNR(366.14,"I",$E(X,1,30),DA(1),DA)=""
"^DD",366.14,366.141,.212,1,1,2)
K ^IBCNR(366.14,"I",$E(X,1,30),DA(1),DA)
"^DD",366.14,366.141,.212,1,1,"DT")
3060307
"^DD",366.14,366.141,.212,3)
Enter a prescription
"^DD",366.14,366.141,.212,21,0)
^^2^2^3060620^
"^DD",366.14,366.141,.212,21,1,0)
Pointer TO PRESCRIPTION FILE (#52) as passed into $$RX^IBNCPDP (IA # 
"^DD",366.14,366.141,.212,21,2,0)
4299) in "IEN" node
"^DD",366.14,366.141,.212,"DT")
3060621
"^DD",366.14,366.141,.301,0)
BILL^P399'^DGCR(399,^3;1^Q
"^DD",366.14,366.141,.301,3)
Enter IB bill
"^DD",366.14,366.141,.301,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.301,21,1,0)
IB bill
"^DD",366.14,366.141,.301,23,0)
^^1^1^3060620^
"^DD",366.14,366.141,.301,23,1,0)
Pointer TO BILL/CLAIMS FILE (#399)
"^DD",366.14,366.141,.301,"DT")
3060620
"^DD",366.14,366.141,.302,0)
BILLED^NJ11,2^^3;2^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>99999999)!(X<0) X
"^DD",366.14,366.141,.302,3)
Type a Dollar Amount between 0 and 99999999, 2 Decimal Digits
"^DD",366.14,366.141,.302,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.302,21,1,0)
Amount billed to the insurance
"^DD",366.14,366.141,.302,"DT")
3060620
"^DD",366.14,366.141,.303,0)
PLAN^P355.3'^IBA(355.3,^3;3^Q
"^DD",366.14,366.141,.303,3)
Enter a group plan
"^DD",366.14,366.141,.303,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.303,21,1,0)
Group insurance plan
"^DD",366.14,366.141,.303,"DT")
3060620
"^DD",366.14,366.141,.304,0)
COST^NJ12,4^^3;4^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."5N.N) X
"^DD",366.14,366.141,.304,3)
Type a Number between 0 and 9999999, 4 Decimal Digits
"^DD",366.14,366.141,.304,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.304,21,1,0)
Cost - dollar amount per Dispensed Unit
"^DD",366.14,366.141,.304,"DT")
3060620
"^DD",366.14,366.141,.305,0)
PAID BY INSURANCE^NJ10,2^^3;5^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
"^DD",366.14,366.141,.305,3)
Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
"^DD",366.14,366.141,.305,21,0)
^^1^1^3060620^^^
"^DD",366.14,366.141,.305,21,1,0)
Amount paid by the Insurance
"^DD",366.14,366.141,.305,"DT")
3060620
"^DD",366.14,366.141,.306,0)
CLOSE/REOPEN COMMENT^F^^3;6^K:$L(X)>70!($L(X)<1) X
"^DD",366.14,366.141,.306,3)
Answer must be 1-70 characters in length.
"^DD",366.14,366.141,.306,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.306,21,1,0)
Close or reopen comment
"^DD",366.14,366.141,.306,"DT")
3060620
"^DD",366.14,366.141,.307,0)
CLOSE REASON^P356.8'^IBE(356.8,^3;7^Q
"^DD",366.14,366.141,.307,3)
Select a close reason
"^DD",366.14,366.141,.307,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.307,21,1,0)
Close reason
"^DD",366.14,366.141,.307,"DT")
3060620
"^DD",366.14,366.141,.308,0)
DROP TO PAPER^NJ7,0^^3;8^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",366.14,366.141,.308,3)
Type a Number between 0 and 9999999, 0 Decimal Digits
"^DD",366.14,366.141,.308,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.308,21,1,0)
Drop to Paper flag. 
"^DD",366.14,366.141,.308,23,0)
^^2^2^3060620^
"^DD",366.14,366.141,.308,23,1,0)
1 (TRUE) for certain Close Claim Reasons indicates that the closed 
"^DD",366.14,366.141,.308,23,2,0)
episode still may be "dropped to paper" - passed to the Autobiller.
"^DD",366.14,366.141,.308,"DT")
3060620
"^DD",366.14,366.141,.309,0)
RELEASE COPAY^NJ7,0^^3;9^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",366.14,366.141,.309,3)
Type a Number between 0 and 9999999, 0 Decimal Digits
"^DD",366.14,366.141,.309,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.309,21,1,0)
Release Copay flag.
"^DD",366.14,366.141,.309,23,0)
^^1^1^3060620^
"^DD",366.14,366.141,.309,23,1,0)
1 (TRUE) indicates that the patients copay should be released off hold.
"^DD",366.14,366.141,.309,"DT")
3060620
"^DD",366.14,366.141,.31,0)
ECME USER IN IBD^P200'^VA(200,^3;10^Q
"^DD",366.14,366.141,.31,3)

"^DD",366.14,366.141,.31,21,0)
^^6^6^3060620^
"^DD",366.14,366.141,.31,21,1,0)
System user who triggered the ECME event and whose identifier was 
"^DD",366.14,366.141,.31,21,2,0)
passed in IBD ARRAY when outside application calls $$STORESP^IBNCPDP (IA
"^DD",366.14,366.141,.31,21,3,0)
#4299). This can be the system user who enters prescription or makes
"^DD",366.14,366.141,.31,21,4,0)
billing operation on e-pharmacy claims. It also can be POSTMASTER if the
"^DD",366.14,366.141,.31,21,5,0)
operation (like claims auto-reversal process) was performed by a
"^DD",366.14,366.141,.31,21,6,0)
background job.
"^DD",366.14,366.141,.31,23,0)
^^1^1^3060620^
"^DD",366.14,366.141,.31,23,1,0)
System User's ID as is passed inside IBD array into IB APIs.
"^DD",366.14,366.141,.31,"DT")
3060620
"^DD",366.14,366.141,.401,0)
AO^S^0:NO;1:YES;^4;1^Q
"^DD",366.14,366.141,.401,3)
Enter Agent Orange indicator
"^DD",366.14,366.141,.401,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.401,21,1,0)
Agent Orange indicator
"^DD",366.14,366.141,.401,"DT")
3060620
"^DD",366.14,366.141,.402,0)
CV^S^0:NO;1:YES;^4;2^Q
"^DD",366.14,366.141,.402,3)
Enter Combat Veteran indicator
"^DD",366.14,366.141,.402,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.402,21,1,0)
Combat Veteran indicator
"^DD",366.14,366.141,.402,"DT")
3060620
"^DD",366.14,366.141,.403,0)
EC^S^0:NO;1:YES;^4;3^Q
"^DD",366.14,366.141,.403,3)
Enter Environment Contaminant exposure indicator
"^DD",366.14,366.141,.403,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.403,21,1,0)
Environment Contaminant exposure indicator
"^DD",366.14,366.141,.403,"DT")
3060620
"^DD",366.14,366.141,.404,0)
IR^S^0:NO;1:YES;^4;4^Q
"^DD",366.14,366.141,.404,3)
Enter Ionizing radiation exposure indicator
"^DD",366.14,366.141,.404,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.404,21,1,0)
Ionizing radiation exposure indicator
"^DD",366.14,366.141,.404,"DT")
3060620
"^DD",366.14,366.141,.405,0)
MST^S^0:NO;1:YES;^4;5^Q
"^DD",366.14,366.141,.405,3)
Enter Military Sexual trauma indicator
"^DD",366.14,366.141,.405,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.405,21,1,0)
Military Sexual trauma indicator
"^DD",366.14,366.141,.405,"DT")
3060620
"^DD",366.14,366.141,.406,0)
HNC^S^0:NO;1:YES;^4;6^Q
"^DD",366.14,366.141,.406,3)
Enter Head/neck cancer indicator
"^DD",366.14,366.141,.406,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.406,21,1,0)
Head/neck cancer indicator
"^DD",366.14,366.141,.406,"DT")
3060620
"^DD",366.14,366.141,.407,0)
SC^S^0:NO;1:YES;^4;7^Q
"^DD",366.14,366.141,.407,3)
Enter Service Connected indicator
"^DD",366.14,366.141,.407,21,0)
^^1^1^3060620^
"^DD",366.14,366.141,.407,21,1,0)
Service Connected indicator
"^DD",366.14,366.141,.407,"DT")
3060620
"^DD",366.14,366.141,2,0)
INSURANCE^366.1412A^^5;0
"^DD",366.14,366.141,2,21,0)
^.001^1^1^3060620^^
"^DD",366.14,366.141,2,21,1,0)
Insurance data
"^DD",366.14,366.141,2,23,0)
^^2^2^3060620^
"^DD",366.14,366.141,2,23,1,0)
Insurance data stored in "INS" node of the array which is passed into 
"^DD",366.14,366.141,2,23,2,0)
$$RX^IBNCPDP API (IA #4299)
"^DD",366.14,366.1412,0)
INSURANCE SUB-FIELD^^.07^23
"^DD",366.14,366.1412,0,"DT")
3060620
"^DD",366.14,366.1412,0,"IX","B",366.1412,.01)

"^DD",366.14,366.1412,0,"NM","INSURANCE")

"^DD",366.14,366.1412,0,"UP")
366.141
"^DD",366.14,366.1412,.01,0)
INSURANCE^NJ3,0^^0;1^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",366.14,366.1412,.01,1,0)
^.1
"^DD",366.14,366.1412,.01,1,1,0)
366.1412^B
"^DD",366.14,366.1412,.01,1,1,1)
S ^IBCNR(366.14,DA(2),1,DA(1),5,"B",$E(X,1,30),DA)=""
"^DD",366.14,366.1412,.01,1,1,2)
K ^IBCNR(366.14,DA(2),1,DA(1),5,"B",$E(X,1,30),DA)
"^DD",366.14,366.1412,.01,3)
Type a Number between 0 and 999, 0 Decimal Digits
"^DD",366.14,366.1412,.01,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.01,21,1,0)
Sequential number for patients insurances.
"^DD",366.14,366.1412,.01,"DT")
3060620
"^DD",366.14,366.1412,.02,0)
GROUP INSURANCE PLAN^P355.3'^IBA(355.3,^0;2^Q
"^DD",366.14,366.1412,.02,3)
Enter Group Insurance Plan
"^DD",366.14,366.1412,.02,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.02,21,1,0)
Group Insurance Plan
"^DD",366.14,366.1412,.02,"DT")
3060620
"^DD",366.14,366.1412,.03,0)
BIN^F^^0;3^K:$L(X)>10!($L(X)<1) X
"^DD",366.14,366.1412,.03,3)
Answer must be 1-10 characters in length
"^DD",366.14,366.1412,.03,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.03,21,1,0)
Bank Identification Number
"^DD",366.14,366.1412,.03,"DT")
3060620
"^DD",366.14,366.1412,.04,0)
PCN^F^^0;4^K:$L(X)>16!($L(X)<1) X
"^DD",366.14,366.1412,.04,3)
Answer must be 1-16 characters in length.
"^DD",366.14,366.1412,.04,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.04,21,1,0)
Processor Control Number
"^DD",366.14,366.1412,.04,"DT")
3060620
"^DD",366.14,366.1412,.05,0)
PAYER SHEET B1^F^^0;5^K:$L(X)>20!($L(X)<1) X
"^DD",366.14,366.1412,.05,3)
Answer must be 1-20 characters in length.
"^DD",366.14,366.1412,.05,21,0)
^^1^1^3060620^^
"^DD",366.14,366.1412,.05,21,1,0)
Payer sheet B1
"^DD",366.14,366.1412,.05,"DT")
3060620
"^DD",366.14,366.1412,.06,0)
GROUP ID^F^^0;6^K:$L(X)>15!($L(X)<1) X
"^DD",366.14,366.1412,.06,3)
Answer must be 1-15 characters in length.
"^DD",366.14,366.1412,.06,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.06,21,1,0)
Group ID
"^DD",366.14,366.1412,.06,"DT")
3060620
"^DD",366.14,366.1412,.07,0)
CARDHOLDER ID^F^^0;7^K:$L(X)>20!($L(X)<1) X
"^DD",366.14,366.1412,.07,3)
Answer must be 1-20 characters in length.
"^DD",366.14,366.1412,.07,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.07,21,1,0)
Cardholder ID
"^DD",366.14,366.1412,.07,"DT")
3060620
"^DD",366.14,366.1412,.08,0)
PATIENT RELATIONSHIP CODE^NJ2,0^^0;8^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",366.14,366.1412,.08,3)
Type a Number between 0 and 99, 0 Decimal Digits
"^DD",366.14,366.1412,.08,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.08,21,1,0)
Patient Relationship code
"^DD",366.14,366.1412,.08,"DT")
3060620
"^DD",366.14,366.1412,.101,0)
CARDHOLDER FIRST NAME^F^^1;1^K:$L(X)>25!($L(X)<1) X
"^DD",366.14,366.1412,.101,3)
Answer must be 1-25 characters in length.
"^DD",366.14,366.1412,.101,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.101,21,1,0)
Cardholder First Name
"^DD",366.14,366.1412,.101,"DT")
3060620
"^DD",366.14,366.1412,.102,0)
CARDHOLDER LAST NAME^F^^1;2^K:$L(X)>35!($L(X)<1) X
"^DD",366.14,366.1412,.102,3)
Answer must be 1-35 characters in length.
"^DD",366.14,366.1412,.102,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.102,21,1,0)
Cardholder Last Name
"^DD",366.14,366.1412,.102,"DT")
3060620
"^DD",366.14,366.1412,.103,0)
STATE^P5'^DIC(5,^1;3^Q
"^DD",366.14,366.1412,.103,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.103,21,1,0)
State
"^DD",366.14,366.1412,.103,"DT")
3060620
"^DD",366.14,366.1412,.104,0)
PAYER SHEET B2^F^^1;4^K:$L(X)>20!($L(X)<1) X
"^DD",366.14,366.1412,.104,3)
Answer must be 1-20 characters in length.
"^DD",366.14,366.1412,.104,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.104,21,1,0)
Payer sheet B2
"^DD",366.14,366.1412,.104,"DT")
3060620
"^DD",366.14,366.1412,.105,0)
PAYER SHEET B3^F^^1;5^K:$L(X)>20!($L(X)<1) X
"^DD",366.14,366.1412,.105,3)
Answer must be 1-20 characters in length.
"^DD",366.14,366.1412,.105,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.105,21,1,0)
Payer sheet B3
"^DD",366.14,366.1412,.105,"DT")
3060620
"^DD",366.14,366.1412,.106,0)
SOFTWARE/VENDOR CERT ID^F^^1;6^K:$L(X)>20!($L(X)<1) X
"^DD",366.14,366.1412,.106,3)
Answer must be 1-20 characters in length.
"^DD",366.14,366.1412,.106,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.106,21,1,0)
Software/Vendor Certification ID
"^DD",366.14,366.1412,.106,"DT")
3060620
"^DD",366.14,366.1412,.107,0)
INSURANCE NAME^F^^1;7^K:$L(X)>50!($L(X)<1) X
"^DD",366.14,366.1412,.107,3)
Answer must be 1-50 characters in length.
"^DD",366.14,366.1412,.107,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.107,21,1,0)
Insurance Name
"^DD",366.14,366.1412,.107,"DT")
3060620
"^DD",366.14,366.1412,.201,0)
DISPENSING FEE^NJ10,2^^2;1^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
"^DD",366.14,366.1412,.201,3)
Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
"^DD",366.14,366.1412,.201,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.201,21,1,0)
Dispensing Fee Submitted
"^DD",366.14,366.1412,.201,"DT")
3060620
"^DD",366.14,366.1412,.202,0)
BASIS OF COST DETERMINATION^F^^2;2^K:$L(X)>4!($L(X)<1) X
"^DD",366.14,366.1412,.202,3)
Answer must be 1-4 characters in length.
"^DD",366.14,366.1412,.202,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.202,21,1,0)
Basis of Cost Determination
"^DD",366.14,366.1412,.202,23,0)
^^4^4^3060217^
"^DD",366.14,366.1412,.202,23,1,0)
for basis of cost determination the following is used:
"^DD",366.14,366.1412,.202,23,2,0)
"07" would be sent for Usual & Customary
"^DD",366.14,366.1412,.202,23,3,0)
"01" would be sent for AWP
"^DD",366.14,366.1412,.202,23,4,0)
"05" would be sent for Cost calculations
"^DD",366.14,366.1412,.202,"DT")
3060620
"^DD",366.14,366.1412,.203,0)
AWP OR TORT RATE OR COST^NJ10,2^^2;3^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
"^DD",366.14,366.1412,.203,3)
Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
"^DD",366.14,366.1412,.203,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.203,21,1,0)
Average Wholesale Price OR Tort dollar amount rate OR Cost amount
"^DD",366.14,366.1412,.203,"DT")
3060620
"^DD",366.14,366.1412,.204,0)
GROSS AMOUNT DUE^NJ10,2^^2;4^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
"^DD",366.14,366.1412,.204,3)
Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
"^DD",366.14,366.1412,.204,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.204,21,1,0)
Gross Amount Due. Base price plus Dispense fee/Administrative fee.
"^DD",366.14,366.1412,.204,"DT")
3060620
"^DD",366.14,366.1412,.205,0)
ADMINISTRATIVE FEE^NJ10,2^^2;5^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
"^DD",366.14,366.1412,.205,3)
Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
"^DD",366.14,366.1412,.205,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.205,21,1,0)
Administrative Fee
"^DD",366.14,366.1412,.205,"DT")
3060620
"^DD",366.14,366.1412,.301,0)
GROUP NAME^F^^3;1^K:$L(X)>20!($L(X)<1) X
"^DD",366.14,366.1412,.301,3)
Answer must be 1-20 characters in length.
"^DD",366.14,366.1412,.301,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.301,21,1,0)
Group Name
"^DD",366.14,366.1412,.301,"DT")
3060620
"^DD",366.14,366.1412,.302,0)
INSURANCE PHONE NUMBER^F^^3;2^K:$L(X)>20!($L(X)<1) X
"^DD",366.14,366.1412,.302,3)
Answer must be 1-20 characters in length.
"^DD",366.14,366.1412,.302,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.302,21,1,0)
Insurance Phone Number
"^DD",366.14,366.1412,.302,"DT")
3060620
"^DD",366.14,366.1412,.303,0)
PLAN ID^F^^3;3^K:$L(X)>50!($L(X)<1) X
"^DD",366.14,366.1412,.303,3)
Answer must be 1-50 characters in length.
"^DD",366.14,366.1412,.303,21,0)
^^1^1^3060620^
"^DD",366.14,366.1412,.303,21,1,0)
Plan ID
"^DD",366.14,366.1412,.303,"DT")
3060620
"^DIC",366.14,366.14,0)
IB NCPDP EVENT LOG^366.14
"^DIC",366.14,366.14,0,"GL")
^IBCNR(366.14,
"^DIC",366.14,366.14,"%",0)
^1.005^^0
"^DIC",366.14,366.14,"%D",0)
^1.001^10^10^3060621^^
"^DIC",366.14,366.14,"%D",1,0)
This file contains data which are passed into IB NCPDP APIs by outside 
"^DIC",366.14,366.14,"%D",2,0)
applications - E CLAIMS MGMT ENGINE and OUTPATIENT PHARMACY  (see IA # 
"^DIC",366.14,366.14,"%D",3,0)
4299). Data stored in this file are used for IB ECME EVENT report to
"^DIC",366.14,366.14,"%D",4,0)
provide details about E-Pharmacy claims processing and about communication
"^DIC",366.14,366.14,"%D",5,0)
details between IB and the applications listed above. The data in this
"^DIC",366.14,366.14,"%D",6,0)
file is populated internally by the IB application (data not directly
"^DIC",366.14,366.14,"%D",7,0)
entered by the user).
"^DIC",366.14,366.14,"%D",8,0)
 
"^DIC",366.14,366.14,"%D",9,0)
Per VHA Directive 10-93-142, this file definition should not be 
"^DIC",366.14,366.14,"%D",10,0)
modified.  
"^DIC",366.14,"B","IB NCPDP EVENT LOG",366.14)

**END**
**END**
