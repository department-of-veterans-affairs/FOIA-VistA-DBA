KIDS Distribution saved on Jun 19, 2000@08:59:17
Clinical Reminders version 1.5 build; 06/19/2000
**KIDS**:CLINICAL REMINDERS 1.5^

**INSTALL NAME**
CLINICAL REMINDERS 1.5
"BLD",2382,0)
CLINICAL REMINDERS 1.5^CLINICAL REMINDERS^0^3000619^y
"BLD",2382,1,0)
^9.61A^2^2^3000519^^^^
"BLD",2382,1,1,0)
This build installs Clinical Reminders V1.5 as a separate package from the
"BLD",2382,1,2,0)
Patient Care Encounter (PCE) package. 
"BLD",2382,4,0)
^9.64PA^9999999.64^17
"BLD",2382,4,800,0)
800
"BLD",2382,4,800,222)
y^y^f^^n^^y^o^n
"BLD",2382,4,801.41,0)
801.41
"BLD",2382,4,801.41,222)
y^y^f^^y^^y^r^n
"BLD",2382,4,801.41,224)
I $E(^PXRMD(801.41,Y,0),1,4)="PXRM"
"BLD",2382,4,801.42,0)
801.42
"BLD",2382,4,801.42,222)
y^y^f^^y^^y^o^n
"BLD",2382,4,801.43,0)
801.43
"BLD",2382,4,801.43,222)
y^y^f^^y^^n
"BLD",2382,4,801.45,0)
801.45
"BLD",2382,4,801.45,222)
y^y^f^^y^^y^o^n
"BLD",2382,4,801.9,0)
801.9
"BLD",2382,4,801.9,222)
y^y^f^^y^^y^r^n
"BLD",2382,4,801.95,0)
801.95
"BLD",2382,4,801.95,222)
y^y^f^^^^n
"BLD",2382,4,810.1,0)
810.1
"BLD",2382,4,810.1,222)
y^y^f^^^^n
"BLD",2382,4,811.2,0)
811.2
"BLD",2382,4,811.2,222)
y^y^f^^n^^y^r^n
"BLD",2382,4,811.2,224)
I $P(^PXD(811.2,Y,0),U,1)["VA-"
"BLD",2382,4,811.3,0)
811.3
"BLD",2382,4,811.3,222)
y^y^f^^^^n
"BLD",2382,4,811.4,0)
811.4
"BLD",2382,4,811.4,222)
y^y^f^^n^^y^r^n
"BLD",2382,4,811.4,224)
I $P(^PXRMD(811.4,Y,0),U,1)["VA-"
"BLD",2382,4,811.5,0)
811.5
"BLD",2382,4,811.5,222)
y^y^f^^y^PXRM NATIONAL TERMS^y^o^n
"BLD",2382,4,811.5,224)
I $P(^PXRMD(811.5,Y,0),U,2)="N"
"BLD",2382,4,811.6,0)
811.6
"BLD",2382,4,811.6,222)
y^y^f^^n^PXRM NATIONAL TERM SPONSORS^y^o^n
"BLD",2382,4,811.6,224)
I $P(^PXRMD(811.6,Y,0),U,2)="N"
"BLD",2382,4,811.7,0)
811.7
"BLD",2382,4,811.7,222)
y^y^f^^^^n
"BLD",2382,4,811.9,0)
811.9
"BLD",2382,4,811.9,222)
y^y^f^^y^^y^r^n
"BLD",2382,4,811.9,224)
I $P(^PXD(811.9,Y,0),U,1)["VA-"
"BLD",2382,4,8989.51,0)
8989.51
"BLD",2382,4,8989.51,222)
n^n^f^^y^^y^r^n
"BLD",2382,4,8989.51,224)
I $E(^(0),1,4)="PXRM"
"BLD",2382,4,9999999.64,0)
9999999.64
"BLD",2382,4,9999999.64,222)
n^n^f^^y^PXRM HEP C HEALTH FACTORS^y^o^n
"BLD",2382,4,"B",800,800)

"BLD",2382,4,"B",801.41,801.41)

"BLD",2382,4,"B",801.42,801.42)

"BLD",2382,4,"B",801.43,801.43)

"BLD",2382,4,"B",801.45,801.45)

"BLD",2382,4,"B",801.9,801.9)

"BLD",2382,4,"B",801.95,801.95)

"BLD",2382,4,"B",810.1,810.1)

"BLD",2382,4,"B",811.2,811.2)

"BLD",2382,4,"B",811.3,811.3)

"BLD",2382,4,"B",811.4,811.4)

"BLD",2382,4,"B",811.5,811.5)

"BLD",2382,4,"B",811.6,811.6)

"BLD",2382,4,"B",811.7,811.7)

"BLD",2382,4,"B",811.9,811.9)

"BLD",2382,4,"B",8989.51,8989.51)

"BLD",2382,4,"B",9999999.64,9999999.64)

"BLD",2382,"INI")
PRE^PXRMV1I
"BLD",2382,"INIT")
POST^PXRMV1I
"BLD",2382,"KRN",0)
^9.67PA^19^18
"BLD",2382,"KRN",.4,0)
.4
"BLD",2382,"KRN",.4,"NM",0)
^9.68A^30^27
"BLD",2382,"KRN",.4,"NM",1,0)
PXRM DIALOG ELEMENT    FILE #801.41^801.41^0
"BLD",2382,"KRN",.4,"NM",2,0)
PXRM DIALOG GROUP    FILE #801.41^801.41^0
"BLD",2382,"KRN",.4,"NM",3,0)
PXRM DIALOG PROMPT    FILE #801.41^801.41^0
"BLD",2382,"KRN",.4,"NM",4,0)
PXRM FINDING ITEM PARAMETERS    FILE #801.43^801.43^0
"BLD",2382,"KRN",.4,"NM",5,0)
PXRM FINDING TYPE PARAMETERS    FILE #801.45^801.45^0
"BLD",2382,"KRN",.4,"NM",6,0)
PXRM HEALTH FACTOR RESOLUTIONS    FILE #801.95^801.95^0
"BLD",2382,"KRN",.4,"NM",8,0)
PXRM REMINDER CATEGORIES    FILE #811.7^811.7^0
"BLD",2382,"KRN",.4,"NM",9,0)
PXRM REMINDER DIALOG    FILE #801.41^801.41^0
"BLD",2382,"KRN",.4,"NM",12,0)
PXRM RESOLUTIONS (GENERAL)    FILE #801.9^801.9^0
"BLD",2382,"KRN",.4,"NM",13,0)
PXRM RESOLUTIONS (LOCAL)    FILE #801.9^801.9^0
"BLD",2382,"KRN",.4,"NM",14,0)
PXRM RESOLUTIONS (NATIONAL)    FILE #801.9^801.9^0
"BLD",2382,"KRN",.4,"NM",15,0)
PXRM SUMMARY LIST    FILE #811.9^811.9^0
"BLD",2382,"KRN",.4,"NM",16,0)
PXRM TAXONOMY DIALOG    FILE #811.2^811.2^0
"BLD",2382,"KRN",.4,"NM",17,0)
PXRM TERM INQUIRY    FILE #811.5^811.5^0
"BLD",2382,"KRN",.4,"NM",18,0)
PXRM TAXONOMY INQUIRY    FILE #811.2^811.2^0
"BLD",2382,"KRN",.4,"NM",19,0)
PXRM DEFINITION INQUIRY    FILE #811.9^811.9^0
"BLD",2382,"KRN",.4,"NM",20,0)
PXRM DIALOG FORCED VALUE    FILE #801.41^801.41^0
"BLD",2382,"KRN",.4,"NM",21,0)
PXRM TAXONOMY LIST    FILE #811.2^811.2^0
"BLD",2382,"KRN",.4,"NM",22,0)
PXRM TAXONOMY LIST HEADER    FILE #811.2^811.2^0
"BLD",2382,"KRN",.4,"NM",23,0)
PX LIST PCE TAXONOMY    FILE #811.2^811.2^1^
"BLD",2382,"KRN",.4,"NM",24,0)
PXRM CF LIST HEADER    FILE #811.4^811.4^0
"BLD",2382,"KRN",.4,"NM",25,0)
PXRM COMPUTED FINDING LIST    FILE #811.4^811.4^0
"BLD",2382,"KRN",.4,"NM",26,0)
PXRM DEFINITION LIST    FILE #811.9^811.9^0
"BLD",2382,"KRN",.4,"NM",27,0)
PXRM TERM LIST    FILE #811.5^811.5^0
"BLD",2382,"KRN",.4,"NM",28,0)
PXRM RESULT ELEMENT    FILE #801.41^801.41^0
"BLD",2382,"KRN",.4,"NM",29,0)
PXRM RESULT GROUP    FILE #801.41^801.41^0
"BLD",2382,"KRN",.4,"NM",30,0)
PX HS/RPT PARAMETERS PRINT    FILE #815^815^0
"BLD",2382,"KRN",.4,"NM","B","PX HS/RPT PARAMETERS PRINT    FILE #815",30)

"BLD",2382,"KRN",.4,"NM","B","PX LIST PCE TAXONOMY    FILE #811.2",23)

"BLD",2382,"KRN",.4,"NM","B","PXRM CF LIST HEADER    FILE #811.4",24)

"BLD",2382,"KRN",.4,"NM","B","PXRM COMPUTED FINDING LIST    FILE #811.4",25)

"BLD",2382,"KRN",.4,"NM","B","PXRM DEFINITION INQUIRY    FILE #811.9",19)

"BLD",2382,"KRN",.4,"NM","B","PXRM DEFINITION LIST    FILE #811.9",26)

"BLD",2382,"KRN",.4,"NM","B","PXRM DIALOG ELEMENT    FILE #801.41",1)

"BLD",2382,"KRN",.4,"NM","B","PXRM DIALOG FORCED VALUE    FILE #801.41",20)

"BLD",2382,"KRN",.4,"NM","B","PXRM DIALOG GROUP    FILE #801.41",2)

"BLD",2382,"KRN",.4,"NM","B","PXRM DIALOG PROMPT    FILE #801.41",3)

"BLD",2382,"KRN",.4,"NM","B","PXRM FINDING ITEM PARAMETERS    FILE #801.43",4)

"BLD",2382,"KRN",.4,"NM","B","PXRM FINDING TYPE PARAMETERS    FILE #801.45",5)

"BLD",2382,"KRN",.4,"NM","B","PXRM HEALTH FACTOR RESOLUTIONS    FILE #801.95",6)

"BLD",2382,"KRN",.4,"NM","B","PXRM REMINDER CATEGORIES    FILE #811.7",8)

"BLD",2382,"KRN",.4,"NM","B","PXRM REMINDER DIALOG    FILE #801.41",9)

"BLD",2382,"KRN",.4,"NM","B","PXRM RESOLUTIONS (GENERAL)    FILE #801.9",12)

"BLD",2382,"KRN",.4,"NM","B","PXRM RESOLUTIONS (LOCAL)    FILE #801.9",13)

"BLD",2382,"KRN",.4,"NM","B","PXRM RESOLUTIONS (NATIONAL)    FILE #801.9",14)

"BLD",2382,"KRN",.4,"NM","B","PXRM RESULT ELEMENT    FILE #801.41",28)

"BLD",2382,"KRN",.4,"NM","B","PXRM RESULT GROUP    FILE #801.41",29)

"BLD",2382,"KRN",.4,"NM","B","PXRM SUMMARY LIST    FILE #811.9",15)

"BLD",2382,"KRN",.4,"NM","B","PXRM TAXONOMY DIALOG    FILE #811.2",16)

"BLD",2382,"KRN",.4,"NM","B","PXRM TAXONOMY INQUIRY    FILE #811.2",18)

"BLD",2382,"KRN",.4,"NM","B","PXRM TAXONOMY LIST    FILE #811.2",21)

"BLD",2382,"KRN",.4,"NM","B","PXRM TAXONOMY LIST HEADER    FILE #811.2",22)

"BLD",2382,"KRN",.4,"NM","B","PXRM TERM INQUIRY    FILE #811.5",17)

"BLD",2382,"KRN",.4,"NM","B","PXRM TERM LIST    FILE #811.5",27)

"BLD",2382,"KRN",.401,0)
.401
"BLD",2382,"KRN",.401,"NM",0)
^9.68A^4^4
"BLD",2382,"KRN",.401,"NM",1,0)
PXRM REMINDERS LIST    FILE #811.9^811.9^0
"BLD",2382,"KRN",.401,"NM",2,0)
PXRM NATIONAL TERMS    FILE #811.5^811.5^0
"BLD",2382,"KRN",.401,"NM",3,0)
PXRM NATIONAL TERM SPONSORS    FILE #811.6^811.6^0
"BLD",2382,"KRN",.401,"NM",4,0)
PXRM HEP C HEALTH FACTORS    FILE #9999999.64^9999999.64^0
"BLD",2382,"KRN",.401,"NM","B","PXRM HEP C HEALTH FACTORS    FILE #9999999.64",4)

"BLD",2382,"KRN",.401,"NM","B","PXRM NATIONAL TERM SPONSORS    FILE #811.6",3)

"BLD",2382,"KRN",.401,"NM","B","PXRM NATIONAL TERMS    FILE #811.5",2)

"BLD",2382,"KRN",.401,"NM","B","PXRM REMINDERS LIST    FILE #811.9",1)

"BLD",2382,"KRN",.402,0)
.402
"BLD",2382,"KRN",.402,"NM",0)
^9.68A^10^10
"BLD",2382,"KRN",.402,"NM",1,0)
PXRM EDIT ELEMENT    FILE #801.41^801.41^0
"BLD",2382,"KRN",.402,"NM",2,0)
PXRM EDIT GROUP    FILE #801.41^801.41^0
"BLD",2382,"KRN",.402,"NM",3,0)
PXRM EDIT PROMPT    FILE #801.41^801.41^0
"BLD",2382,"KRN",.402,"NM",4,0)
PXRM EDIT REMINDER DIALOG    FILE #801.41^801.41^0
"BLD",2382,"KRN",.402,"NM",5,0)
PXRM EDIT REMINDER TERM    FILE #811.5^811.5^0
"BLD",2382,"KRN",.402,"NM",6,0)
PXRM EDIT FORCED VALUE    FILE #801.41^801.41^0
"BLD",2382,"KRN",.402,"NM",7,0)
PXRM RESULT ELEMENT    FILE #801.41^801.41^0
"BLD",2382,"KRN",.402,"NM",8,0)
PXRM RESULT GROUP    FILE #801.41^801.41^0
"BLD",2382,"KRN",.402,"NM",9,0)
PXRM EDIT NATIONAL TERM    FILE #811.5^811.5^0
"BLD",2382,"KRN",.402,"NM",10,0)
PXRM EDIT REMINDER CF    FILE #811.4^811.4^0
"BLD",2382,"KRN",.402,"NM","B","PXRM EDIT ELEMENT    FILE #801.41",1)

"BLD",2382,"KRN",.402,"NM","B","PXRM EDIT FORCED VALUE    FILE #801.41",6)

"BLD",2382,"KRN",.402,"NM","B","PXRM EDIT GROUP    FILE #801.41",2)

"BLD",2382,"KRN",.402,"NM","B","PXRM EDIT NATIONAL TERM    FILE #811.5",9)

"BLD",2382,"KRN",.402,"NM","B","PXRM EDIT PROMPT    FILE #801.41",3)

"BLD",2382,"KRN",.402,"NM","B","PXRM EDIT REMINDER CF    FILE #811.4",10)

"BLD",2382,"KRN",.402,"NM","B","PXRM EDIT REMINDER DIALOG    FILE #801.41",4)

"BLD",2382,"KRN",.402,"NM","B","PXRM EDIT REMINDER TERM    FILE #811.5",5)

"BLD",2382,"KRN",.402,"NM","B","PXRM RESULT ELEMENT    FILE #801.41",7)

"BLD",2382,"KRN",.402,"NM","B","PXRM RESULT GROUP    FILE #801.41",8)

"BLD",2382,"KRN",.403,0)
.403
"BLD",2382,"KRN",.5,0)
.5
"BLD",2382,"KRN",.84,0)
.84
"BLD",2382,"KRN",3.6,0)
3.6
"BLD",2382,"KRN",3.8,0)
3.8
"BLD",2382,"KRN",9.2,0)
9.2
"BLD",2382,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",2382,"KRN",9.8,0)
9.8
"BLD",2382,"KRN",9.8,"NM",0)
^9.68A^216^177
"BLD",2382,"KRN",9.8,"NM",1,0)
PXRM^^0^B16714926
"BLD",2382,"KRN",9.8,"NM",6,0)
PXRMAGE^^0^B16403632
"BLD",2382,"KRN",9.8,"NM",7,0)
PXRMBMI^^0^B1531334
"BLD",2382,"KRN",9.8,"NM",8,0)
PXRMBXTL^^0^B19741860
"BLD",2382,"KRN",9.8,"NM",9,0)
PXRMCAT^^0^B12709564
"BLD",2382,"KRN",9.8,"NM",10,0)
PXRMCF^^0^B9296279
"BLD",2382,"KRN",9.8,"NM",12,0)
PXRMCLST^^0^B23161852
"BLD",2382,"KRN",9.8,"NM",14,0)
PXRMDATE^^0^B20715080
"BLD",2382,"KRN",9.8,"NM",15,0)
PXRMDBL1^^0^B7118914
"BLD",2382,"KRN",9.8,"NM",16,0)
PXRMDBL2^^0^B60350408
"BLD",2382,"KRN",9.8,"NM",17,0)
PXRMDBL3^^0^B22572184
"BLD",2382,"KRN",9.8,"NM",18,0)
PXRMDBLD^^0^B65352402
"BLD",2382,"KRN",9.8,"NM",19,0)
PXRMDD41^^0^B2195798
"BLD",2382,"KRN",9.8,"NM",20,0)
PXRMDEDT^^0^B62802101
"BLD",2382,"KRN",9.8,"NM",21,0)
PXRMDEV^^0^B6772416
"BLD",2382,"KRN",9.8,"NM",23,0)
PXRMDGOP^^1^
"BLD",2382,"KRN",9.8,"NM",24,0)
PXRMDGPT^^0^B44361803
"BLD",2382,"KRN",9.8,"NM",25,0)
PXRMDHLP^^0^B100219467
"BLD",2382,"KRN",9.8,"NM",26,0)
PXRMDISC^^0^B721143
"BLD",2382,"KRN",9.8,"NM",27,0)
PXRMDLG^^0^B37369528
"BLD",2382,"KRN",9.8,"NM",28,0)
PXRMDLG1^^0^B56185870
"BLD",2382,"KRN",9.8,"NM",29,0)
PXRMDLL^^0^B64936165
"BLD",2382,"KRN",9.8,"NM",30,0)
PXRMDLLA^^0^B63222363
"BLD",2382,"KRN",9.8,"NM",31,0)
PXRMDLST^^0^B18143519
"BLD",2382,"KRN",9.8,"NM",32,0)
PXRMDP1^^1^
"BLD",2382,"KRN",9.8,"NM",33,0)
PXRMDRCL^^0^B10490578
"BLD",2382,"KRN",9.8,"NM",34,0)
PXRMDRUG^^0^B25703563
"BLD",2382,"KRN",9.8,"NM",35,0)
PXRMEDIT^^0^B666443
"BLD",2382,"KRN",9.8,"NM",36,0)
PXRMEDU^^0^B11694460
"BLD",2382,"KRN",9.8,"NM",37,0)
PXRMERRH^^0^B8652648
"BLD",2382,"KRN",9.8,"NM",38,0)
PXRMEVFI^^0^B2770131
"BLD",2382,"KRN",9.8,"NM",39,0)
PXRMEX^^0^B2316563
"BLD",2382,"KRN",9.8,"NM",40,0)
PXRMEXAM^^0^B11311238
"BLD",2382,"KRN",9.8,"NM",41,0)
PXRMEXCF^^0^B11163181
"BLD",2382,"KRN",9.8,"NM",42,0)
PXRMEXFI^^0^B17607147
"BLD",2382,"KRN",9.8,"NM",43,0)
PXRMEXHF^^0^B12207563
"BLD",2382,"KRN",9.8,"NM",44,0)
PXRMEXIR^^0^B31485126
"BLD",2382,"KRN",9.8,"NM",45,0)
PXRMEXIS^^0^B4217982
"BLD",2382,"KRN",9.8,"NM",46,0)
PXRMEXIU^^0^B22695590
"BLD",2382,"KRN",9.8,"NM",47,0)
PXRMEXLC^^0^B19689637
"BLD",2382,"KRN",9.8,"NM",48,0)
PXRMEXMH^^0^B12021370
"BLD",2382,"KRN",9.8,"NM",49,0)
PXRMEXMM^^0^B6082837
"BLD",2382,"KRN",9.8,"NM",50,0)
PXRMEXMR^^0^B8067735
"BLD",2382,"KRN",9.8,"NM",51,0)
PXRMEXPR^^0^B28046398
"BLD",2382,"KRN",9.8,"NM",52,0)
PXRMEXPU^^0^B17412564
"BLD",2382,"KRN",9.8,"NM",53,0)
PXRMEXSR^^0^B16558240
"BLD",2382,"KRN",9.8,"NM",54,0)
PXRMFIND^^0^B12943621
"BLD",2382,"KRN",9.8,"NM",55,0)
PXRMFIP^^0^B34790458
"BLD",2382,"KRN",9.8,"NM",56,0)
PXRMFLST^^0^B4258469
"BLD",2382,"KRN",9.8,"NM",58,0)
PXRMFOUT^^0^B9376421
"BLD",2382,"KRN",9.8,"NM",59,0)
PXRMFPAR^^0^B16760377
"BLD",2382,"KRN",9.8,"NM",60,0)
PXRMGEDT^^0^B14988049
"BLD",2382,"KRN",9.8,"NM",61,0)
PXRMGEN^^0^B4714370
"BLD",2382,"KRN",9.8,"NM",62,0)
PXRMGPRT^^1^
"BLD",2382,"KRN",9.8,"NM",63,0)
PXRMHF^^0^B41007988
"BLD",2382,"KRN",9.8,"NM",65,0)
PXRMHL7^^0^B1687555
"BLD",2382,"KRN",9.8,"NM",66,0)
PXRMICD9^^0^B25453
"BLD",2382,"KRN",9.8,"NM",67,0)
PXRMIMM^^0^B14558994
"BLD",2382,"KRN",9.8,"NM",69,0)
PXRMINTR^^0^B21931694
"BLD",2382,"KRN",9.8,"NM",70,0)
PXRMLAB^^0^B12421557
"BLD",2382,"KRN",9.8,"NM",71,0)
PXRMLIST^^0^B4829801
"BLD",2382,"KRN",9.8,"NM",72,0)
PXRMLOG^^0^B32978752
"BLD",2382,"KRN",9.8,"NM",73,0)
PXRMLOGX^^0^B22147578
"BLD",2382,"KRN",9.8,"NM",74,0)
PXRMMEAS^^0^B12309387
"BLD",2382,"KRN",9.8,"NM",75,0)
PXRMMH^^0^B25095557
"BLD",2382,"KRN",9.8,"NM",77,0)
PXRMOPT^^0^B43916689
"BLD",2382,"KRN",9.8,"NM",78,0)
PXRMORDR^^0^B13880203
"BLD",2382,"KRN",9.8,"NM",81,0)
PXRMPINF^^0^B7007544
"BLD",2382,"KRN",9.8,"NM",82,0)
PXRMPROB^^0^B15280542
"BLD",2382,"KRN",9.8,"NM",85,0)
PXRMPT^^0^B30144377
"BLD",2382,"KRN",9.8,"NM",86,0)
PXRMPTL^^0^B21604015
"BLD",2382,"KRN",9.8,"NM",88,0)
PXRMRAD^^0^B16758889
"BLD",2382,"KRN",9.8,"NM",90,0)
PXRMRCPT^^0^B6605839
"BLD",2382,"KRN",9.8,"NM",92,0)
PXRMREDF^^0^B8705075
"BLD",2382,"KRN",9.8,"NM",93,0)
PXRMREDT^^0^B25825167
"BLD",2382,"KRN",9.8,"NM",94,0)
PXRMRESN^^0^B15821887
"BLD",2382,"KRN",9.8,"NM",95,0)
PXRMRIN2^^0^B47459976
"BLD",2382,"KRN",9.8,"NM",96,0)
PXRMRIN3^^0^B17224260
"BLD",2382,"KRN",9.8,"NM",97,0)
PXRMINQ^^0^B5852632
"BLD",2382,"KRN",9.8,"NM",98,0)
PXRMRLST^^0^B15804134
"BLD",2382,"KRN",9.8,"NM",99,0)
PXRMRPCA^^0^B57349923
"BLD",2382,"KRN",9.8,"NM",100,0)
PXRMRPCB^^0^B8604836
"BLD",2382,"KRN",9.8,"NM",101,0)
PXRMRPCC^^0^B7686945
"BLD",2382,"KRN",9.8,"NM",102,0)
PXRMRUTL^^0^B4605017
"BLD",2382,"KRN",9.8,"NM",103,0)
PXRMSAPG^^0^B979716
"BLD",2382,"KRN",9.8,"NM",104,0)
PXRMSEDT^^0^B4700922
"BLD",2382,"KRN",9.8,"NM",105,0)
PXRMSEL^^0^B75482842
"BLD",2382,"KRN",9.8,"NM",106,0)
PXRMSHF^^0^B9649986
"BLD",2382,"KRN",9.8,"NM",107,0)
PXRMSKIN^^0^B13147073
"BLD",2382,"KRN",9.8,"NM",108,0)
PXRMSLST^^0^B5428659
"BLD",2382,"KRN",9.8,"NM",111,0)
PXRMTDLG^^0^B13709603
"BLD",2382,"KRN",9.8,"NM",112,0)
PXRMTEDT^^0^B2487466
"BLD",2382,"KRN",9.8,"NM",113,0)
PXRMTERM^^0^B13670091
"BLD",2382,"KRN",9.8,"NM",118,0)
PXRMTMED^^0^B1080449
"BLD",2382,"KRN",9.8,"NM",125,0)
PXRMUNIQ^^1^
"BLD",2382,"KRN",9.8,"NM",126,0)
PXRMUTIL^^0^B13426441
"BLD",2382,"KRN",9.8,"NM",127,0)
PXRMV1I^^0^B43556104
"BLD",2382,"KRN",9.8,"NM",128,0)
PXRMV1IA^^0^B58204063
"BLD",2382,"KRN",9.8,"NM",129,0)
PXRMV1ID^^0^B18209527
"BLD",2382,"KRN",9.8,"NM",130,0)
PXRMV1IE^^0^B2637503
"BLD",2382,"KRN",9.8,"NM",131,0)
PXRMVAL^^0^B18423492
"BLD",2382,"KRN",9.8,"NM",132,0)
PXRMVALC^^0^B59679283
"BLD",2382,"KRN",9.8,"NM",133,0)
PXRMVALU^^0^B17713005
"BLD",2382,"KRN",9.8,"NM",135,0)
PXRMVCPT^^0^B5658756
"BLD",2382,"KRN",9.8,"NM",137,0)
PXRMVPOV^^0^B10937454
"BLD",2382,"KRN",9.8,"NM",138,0)
PXRMVSIT^^0^B1684422
"BLD",2382,"KRN",9.8,"NM",140,0)
PXRMXAP^^0^B9712118
"BLD",2382,"KRN",9.8,"NM",141,0)
PXRMXBSY^^0^B409130
"BLD",2382,"KRN",9.8,"NM",142,0)
PXRMXD^^0^B27921076
"BLD",2382,"KRN",9.8,"NM",143,0)
PXRMXDUT^^0^B26957605
"BLD",2382,"KRN",9.8,"NM",144,0)
PXRMXGPR^^0^B40554816
"BLD",2382,"KRN",9.8,"NM",145,0)
PXRMXGUT^^0^B4111687
"BLD",2382,"KRN",9.8,"NM",146,0)
PXRMXPR^^0^B33220916
"BLD",2382,"KRN",9.8,"NM",147,0)
PXRMXQUE^^0^B628112
"BLD",2382,"KRN",9.8,"NM",148,0)
PXRMXSC^^0^B3705933
"BLD",2382,"KRN",9.8,"NM",149,0)
PXRMXSD^^0^B49552963
"BLD",2382,"KRN",9.8,"NM",150,0)
PXRMXSE^^0^B5299205
"BLD",2382,"KRN",9.8,"NM",151,0)
PXRMXSEL^^0^B49664240
"BLD",2382,"KRN",9.8,"NM",152,0)
PXRMXSEO^^0^B60742403
"BLD",2382,"KRN",9.8,"NM",153,0)
PXRMXSU^^0^B48308402
"BLD",2382,"KRN",9.8,"NM",154,0)
PXRMXT^^0^B32498304
"BLD",2382,"KRN",9.8,"NM",155,0)
PXRMXTA^^0^B26592421
"BLD",2382,"KRN",9.8,"NM",156,0)
PXRMXTD^^0^B9270235
"BLD",2382,"KRN",9.8,"NM",157,0)
PXRMXTF^^0^B18964952
"BLD",2382,"KRN",9.8,"NM",158,0)
PXRMXTU^^0^B26455099
"BLD",2382,"KRN",9.8,"NM",165,0)
PXRMVPTR^^0^B358969
"BLD",2382,"KRN",9.8,"NM",166,0)
PXRMPDEM^^0^B569516
"BLD",2382,"KRN",9.8,"NM",167,0)
PXRMPCIN^^0^B492767
"BLD",2382,"KRN",9.8,"NM",168,0)
PXRMEXCS^^0^B1444553
"BLD",2382,"KRN",9.8,"NM",169,0)
PXRMDLGX^^1^
"BLD",2382,"KRN",9.8,"NM",170,0)
PXRMDLGY^^1^
"BLD",2382,"KRN",9.8,"NM",171,0)
PXRMSEL1^^0^B47548904
"BLD",2382,"KRN",9.8,"NM",172,0)
PXRMDGEN^^0^B10287853
"BLD",2382,"KRN",9.8,"NM",173,0)
PXRMDLGZ^^0^B35338101
"BLD",2382,"KRN",9.8,"NM",174,0)
PXRMDLGH^^0^B22294169
"BLD",2382,"KRN",9.8,"NM",175,0)
PXRMLFNF^^0^B2763090
"BLD",2382,"KRN",9.8,"NM",176,0)
PXRMDCPY^^0^B32769091
"BLD",2382,"KRN",9.8,"NM",177,0)
PXRMVX^^1^
"BLD",2382,"KRN",9.8,"NM",178,0)
PXRMVX01^^1^
"BLD",2382,"KRN",9.8,"NM",179,0)
PXRMCFED^^0^B1041960
"BLD",2382,"KRN",9.8,"NM",180,0)
PXRMSEL2^^0^B30162434
"BLD",2382,"KRN",9.8,"NM",181,0)
PXRMDLR^^0^B11433691
"BLD",2382,"KRN",9.8,"NM",182,0)
PXRMDLG2^^0^B13714087
"BLD",2382,"KRN",9.8,"NM",183,0)
PXRMTAX^^0^B27834336
"BLD",2382,"KRN",9.8,"NM",184,0)
PXRMCODE^^0^B598400
"BLD",2382,"KRN",9.8,"NM",185,0)
PXRMV1IG^^0^B9351631
"BLD",2382,"KRN",9.8,"NM",186,0)
PXRMXX^^0^B9171319
"BLD",2382,"KRN",9.8,"NM",187,0)
PXRM16RI^^1^
"BLD",2382,"KRN",9.8,"NM",188,0)
PXRM16TI^^1^
"BLD",2382,"KRN",9.8,"NM",189,0)
PXRMAFOP^^1^
"BLD",2382,"KRN",9.8,"NM",190,0)
PXRMCFOP^^1^
"BLD",2382,"KRN",9.8,"NM",191,0)
PXRMHFOP^^1^
"BLD",2382,"KRN",9.8,"NM",192,0)
PXRMOBES^^1^
"BLD",2382,"KRN",9.8,"NM",193,0)
PXRMP16I^^1^
"BLD",2382,"KRN",9.8,"NM",194,0)
PXRMP53I^^1^
"BLD",2382,"KRN",9.8,"NM",195,0)
PXRMPROC^^1^
"BLD",2382,"KRN",9.8,"NM",196,0)
PXRMPROP^^1^
"BLD",2382,"KRN",9.8,"NM",197,0)
PXRMRAOP^^1^
"BLD",2382,"KRN",9.8,"NM",198,0)
PXRMSTDC^^1^
"BLD",2382,"KRN",9.8,"NM",199,0)
PXRMTAXP^^1^
"BLD",2382,"KRN",9.8,"NM",200,0)
PXRMTF^^1^
"BLD",2382,"KRN",9.8,"NM",201,0)
PXRMTGOP^^1^
"BLD",2382,"KRN",9.8,"NM",202,0)
PXRMTP^^1^
"BLD",2382,"KRN",9.8,"NM",203,0)
PXRMTPA^^1^
"BLD",2382,"KRN",9.8,"NM",204,0)
PXRMTYPE^^1^
"BLD",2382,"KRN",9.8,"NM",205,0)
PXRMVCOP^^1^
"BLD",2382,"KRN",9.8,"NM",206,0)
PXRMVPOP^^1^
"BLD",2382,"KRN",9.8,"NM",207,0)
PXRMRINQ^^1^
"BLD",2382,"KRN",9.8,"NM",208,0)
PXRMRDAT^^1^
"BLD",2382,"KRN",9.8,"NM",209,0)
PXRMWCHK^^1^
"BLD",2382,"KRN",9.8,"NM",210,0)
PXRMV1X^^0^B831404
"BLD",2382,"KRN",9.8,"NM",211,0)
PXRMV1X1^^0^B388824
"BLD",2382,"KRN",9.8,"NM",212,0)
PXRMTXST^^1^
"BLD",2382,"KRN",9.8,"NM",213,0)
PXRMTXXR^^1^
"BLD",2382,"KRN",9.8,"NM",214,0)
PXRMTFOP^^1^
"BLD",2382,"KRN",9.8,"NM",215,0)
PXRMV1IH^^0^B6916454
"BLD",2382,"KRN",9.8,"NM",216,0)
PXRMCOPY^^0^B12348906
"BLD",2382,"KRN",9.8,"NM","B","PXRM",1)

"BLD",2382,"KRN",9.8,"NM","B","PXRM16RI",187)

"BLD",2382,"KRN",9.8,"NM","B","PXRM16TI",188)

"BLD",2382,"KRN",9.8,"NM","B","PXRMAFOP",189)

"BLD",2382,"KRN",9.8,"NM","B","PXRMAGE",6)

"BLD",2382,"KRN",9.8,"NM","B","PXRMBMI",7)

"BLD",2382,"KRN",9.8,"NM","B","PXRMBXTL",8)

"BLD",2382,"KRN",9.8,"NM","B","PXRMCAT",9)

"BLD",2382,"KRN",9.8,"NM","B","PXRMCF",10)

"BLD",2382,"KRN",9.8,"NM","B","PXRMCFED",179)

"BLD",2382,"KRN",9.8,"NM","B","PXRMCFOP",190)

"BLD",2382,"KRN",9.8,"NM","B","PXRMCLST",12)

"BLD",2382,"KRN",9.8,"NM","B","PXRMCODE",184)

"BLD",2382,"KRN",9.8,"NM","B","PXRMCOPY",216)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDATE",14)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDBL1",15)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDBL2",16)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDBL3",17)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDBLD",18)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDCPY",176)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDD41",19)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDEDT",20)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDEV",21)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDGEN",172)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDGOP",23)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDGPT",24)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDHLP",25)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDISC",26)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDLG",27)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDLG1",28)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDLG2",182)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDLGH",174)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDLGX",169)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDLGY",170)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDLGZ",173)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDLL",29)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDLLA",30)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDLR",181)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDLST",31)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDP1",32)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDRCL",33)

"BLD",2382,"KRN",9.8,"NM","B","PXRMDRUG",34)

"BLD",2382,"KRN",9.8,"NM","B","PXRMEDIT",35)

"BLD",2382,"KRN",9.8,"NM","B","PXRMEDU",36)

"BLD",2382,"KRN",9.8,"NM","B","PXRMERRH",37)

"BLD",2382,"KRN",9.8,"NM","B","PXRMEVFI",38)

"BLD",2382,"KRN",9.8,"NM","B","PXRMEX",39)

"BLD",2382,"KRN",9.8,"NM","B","PXRMEXAM",40)

"BLD",2382,"KRN",9.8,"NM","B","PXRMEXCF",41)

"BLD",2382,"KRN",9.8,"NM","B","PXRMEXCS",168)

"BLD",2382,"KRN",9.8,"NM","B","PXRMEXFI",42)

"BLD",2382,"KRN",9.8,"NM","B","PXRMEXHF",43)

"BLD",2382,"KRN",9.8,"NM","B","PXRMEXIR",44)

"BLD",2382,"KRN",9.8,"NM","B","PXRMEXIS",45)

"BLD",2382,"KRN",9.8,"NM","B","PXRMEXIU",46)

"BLD",2382,"KRN",9.8,"NM","B","PXRMEXLC",47)

"BLD",2382,"KRN",9.8,"NM","B","PXRMEXMH",48)

"BLD",2382,"KRN",9.8,"NM","B","PXRMEXMM",49)

"BLD",2382,"KRN",9.8,"NM","B","PXRMEXMR",50)

"BLD",2382,"KRN",9.8,"NM","B","PXRMEXPR",51)

"BLD",2382,"KRN",9.8,"NM","B","PXRMEXPU",52)

"BLD",2382,"KRN",9.8,"NM","B","PXRMEXSR",53)

"BLD",2382,"KRN",9.8,"NM","B","PXRMFIND",54)

"BLD",2382,"KRN",9.8,"NM","B","PXRMFIP",55)

"BLD",2382,"KRN",9.8,"NM","B","PXRMFLST",56)

"BLD",2382,"KRN",9.8,"NM","B","PXRMFOUT",58)

"BLD",2382,"KRN",9.8,"NM","B","PXRMFPAR",59)

"BLD",2382,"KRN",9.8,"NM","B","PXRMGEDT",60)

"BLD",2382,"KRN",9.8,"NM","B","PXRMGEN",61)

"BLD",2382,"KRN",9.8,"NM","B","PXRMGPRT",62)

"BLD",2382,"KRN",9.8,"NM","B","PXRMHF",63)

"BLD",2382,"KRN",9.8,"NM","B","PXRMHFOP",191)

"BLD",2382,"KRN",9.8,"NM","B","PXRMHL7",65)

"BLD",2382,"KRN",9.8,"NM","B","PXRMICD9",66)

"BLD",2382,"KRN",9.8,"NM","B","PXRMIMM",67)

"BLD",2382,"KRN",9.8,"NM","B","PXRMINQ",97)

"BLD",2382,"KRN",9.8,"NM","B","PXRMINTR",69)

"BLD",2382,"KRN",9.8,"NM","B","PXRMLAB",70)

"BLD",2382,"KRN",9.8,"NM","B","PXRMLFNF",175)

"BLD",2382,"KRN",9.8,"NM","B","PXRMLIST",71)

"BLD",2382,"KRN",9.8,"NM","B","PXRMLOG",72)

"BLD",2382,"KRN",9.8,"NM","B","PXRMLOGX",73)

"BLD",2382,"KRN",9.8,"NM","B","PXRMMEAS",74)

"BLD",2382,"KRN",9.8,"NM","B","PXRMMH",75)

"BLD",2382,"KRN",9.8,"NM","B","PXRMOBES",192)

"BLD",2382,"KRN",9.8,"NM","B","PXRMOPT",77)

"BLD",2382,"KRN",9.8,"NM","B","PXRMORDR",78)

"BLD",2382,"KRN",9.8,"NM","B","PXRMP16I",193)

"BLD",2382,"KRN",9.8,"NM","B","PXRMP53I",194)

"BLD",2382,"KRN",9.8,"NM","B","PXRMPCIN",167)

"BLD",2382,"KRN",9.8,"NM","B","PXRMPDEM",166)

"BLD",2382,"KRN",9.8,"NM","B","PXRMPINF",81)

"BLD",2382,"KRN",9.8,"NM","B","PXRMPROB",82)

"BLD",2382,"KRN",9.8,"NM","B","PXRMPROC",195)

"BLD",2382,"KRN",9.8,"NM","B","PXRMPROP",196)

"BLD",2382,"KRN",9.8,"NM","B","PXRMPT",85)

"BLD",2382,"KRN",9.8,"NM","B","PXRMPTL",86)

"BLD",2382,"KRN",9.8,"NM","B","PXRMRAD",88)

"BLD",2382,"KRN",9.8,"NM","B","PXRMRAOP",197)

"BLD",2382,"KRN",9.8,"NM","B","PXRMRCPT",90)

"BLD",2382,"KRN",9.8,"NM","B","PXRMRDAT",208)

"BLD",2382,"KRN",9.8,"NM","B","PXRMREDF",92)

"BLD",2382,"KRN",9.8,"NM","B","PXRMREDT",93)

"BLD",2382,"KRN",9.8,"NM","B","PXRMRESN",94)

"BLD",2382,"KRN",9.8,"NM","B","PXRMRIN2",95)

"BLD",2382,"KRN",9.8,"NM","B","PXRMRIN3",96)

"BLD",2382,"KRN",9.8,"NM","B","PXRMRINQ",207)

"BLD",2382,"KRN",9.8,"NM","B","PXRMRLST",98)

"BLD",2382,"KRN",9.8,"NM","B","PXRMRPCA",99)

"BLD",2382,"KRN",9.8,"NM","B","PXRMRPCB",100)

"BLD",2382,"KRN",9.8,"NM","B","PXRMRPCC",101)

"BLD",2382,"KRN",9.8,"NM","B","PXRMRUTL",102)

"BLD",2382,"KRN",9.8,"NM","B","PXRMSAPG",103)

"BLD",2382,"KRN",9.8,"NM","B","PXRMSEDT",104)

"BLD",2382,"KRN",9.8,"NM","B","PXRMSEL",105)

"BLD",2382,"KRN",9.8,"NM","B","PXRMSEL1",171)

"BLD",2382,"KRN",9.8,"NM","B","PXRMSEL2",180)

"BLD",2382,"KRN",9.8,"NM","B","PXRMSHF",106)

"BLD",2382,"KRN",9.8,"NM","B","PXRMSKIN",107)

"BLD",2382,"KRN",9.8,"NM","B","PXRMSLST",108)

"BLD",2382,"KRN",9.8,"NM","B","PXRMSTDC",198)

"BLD",2382,"KRN",9.8,"NM","B","PXRMTAX",183)

"BLD",2382,"KRN",9.8,"NM","B","PXRMTAXP",199)

"BLD",2382,"KRN",9.8,"NM","B","PXRMTDLG",111)

"BLD",2382,"KRN",9.8,"NM","B","PXRMTEDT",112)

"BLD",2382,"KRN",9.8,"NM","B","PXRMTERM",113)

"BLD",2382,"KRN",9.8,"NM","B","PXRMTF",200)

"BLD",2382,"KRN",9.8,"NM","B","PXRMTFOP",214)

"BLD",2382,"KRN",9.8,"NM","B","PXRMTGOP",201)

"BLD",2382,"KRN",9.8,"NM","B","PXRMTMED",118)

"BLD",2382,"KRN",9.8,"NM","B","PXRMTP",202)

"BLD",2382,"KRN",9.8,"NM","B","PXRMTPA",203)

"BLD",2382,"KRN",9.8,"NM","B","PXRMTXST",212)

"BLD",2382,"KRN",9.8,"NM","B","PXRMTXXR",213)

"BLD",2382,"KRN",9.8,"NM","B","PXRMTYPE",204)

"BLD",2382,"KRN",9.8,"NM","B","PXRMUNIQ",125)

"BLD",2382,"KRN",9.8,"NM","B","PXRMUTIL",126)

"BLD",2382,"KRN",9.8,"NM","B","PXRMV1I",127)

"BLD",2382,"KRN",9.8,"NM","B","PXRMV1IA",128)

"BLD",2382,"KRN",9.8,"NM","B","PXRMV1ID",129)

"BLD",2382,"KRN",9.8,"NM","B","PXRMV1IE",130)

"BLD",2382,"KRN",9.8,"NM","B","PXRMV1IG",185)

"BLD",2382,"KRN",9.8,"NM","B","PXRMV1IH",215)

"BLD",2382,"KRN",9.8,"NM","B","PXRMV1X",210)

"BLD",2382,"KRN",9.8,"NM","B","PXRMV1X1",211)

"BLD",2382,"KRN",9.8,"NM","B","PXRMVAL",131)

"BLD",2382,"KRN",9.8,"NM","B","PXRMVALC",132)

"BLD",2382,"KRN",9.8,"NM","B","PXRMVALU",133)

"BLD",2382,"KRN",9.8,"NM","B","PXRMVCOP",205)

"BLD",2382,"KRN",9.8,"NM","B","PXRMVCPT",135)

"BLD",2382,"KRN",9.8,"NM","B","PXRMVPOP",206)

"BLD",2382,"KRN",9.8,"NM","B","PXRMVPOV",137)

"BLD",2382,"KRN",9.8,"NM","B","PXRMVPTR",165)

"BLD",2382,"KRN",9.8,"NM","B","PXRMVSIT",138)

"BLD",2382,"KRN",9.8,"NM","B","PXRMVX",177)

"BLD",2382,"KRN",9.8,"NM","B","PXRMVX01",178)

"BLD",2382,"KRN",9.8,"NM","B","PXRMWCHK",209)

"BLD",2382,"KRN",9.8,"NM","B","PXRMXAP",140)

"BLD",2382,"KRN",9.8,"NM","B","PXRMXBSY",141)

"BLD",2382,"KRN",9.8,"NM","B","PXRMXD",142)

"BLD",2382,"KRN",9.8,"NM","B","PXRMXDUT",143)

"BLD",2382,"KRN",9.8,"NM","B","PXRMXGPR",144)

"BLD",2382,"KRN",9.8,"NM","B","PXRMXGUT",145)

"BLD",2382,"KRN",9.8,"NM","B","PXRMXPR",146)

"BLD",2382,"KRN",9.8,"NM","B","PXRMXQUE",147)

"BLD",2382,"KRN",9.8,"NM","B","PXRMXSC",148)

"BLD",2382,"KRN",9.8,"NM","B","PXRMXSD",149)

"BLD",2382,"KRN",9.8,"NM","B","PXRMXSE",150)

"BLD",2382,"KRN",9.8,"NM","B","PXRMXSEL",151)

"BLD",2382,"KRN",9.8,"NM","B","PXRMXSEO",152)

"BLD",2382,"KRN",9.8,"NM","B","PXRMXSU",153)

"BLD",2382,"KRN",9.8,"NM","B","PXRMXT",154)

"BLD",2382,"KRN",9.8,"NM","B","PXRMXTA",155)

"BLD",2382,"KRN",9.8,"NM","B","PXRMXTD",156)

"BLD",2382,"KRN",9.8,"NM","B","PXRMXTF",157)

"BLD",2382,"KRN",9.8,"NM","B","PXRMXTU",158)

"BLD",2382,"KRN",9.8,"NM","B","PXRMXX",186)

"BLD",2382,"KRN",19,0)
19
"BLD",2382,"KRN",19,"NM",0)
^9.68A^71^66
"BLD",2382,"KRN",19,"NM",1,0)
PXRM (IN)/ACTIVATE REMINDERS^^0
"BLD",2382,"KRN",19,"NM",2,0)
PXRM (IN)/ACTIVATE TAXONOMIES^^0
"BLD",2382,"KRN",19,"NM",3,0)
PXRM CATEGORY EDIT/INQUIRE^^0
"BLD",2382,"KRN",19,"NM",4,0)
PXRM CPRS COVER SHEET LIST^^0
"BLD",2382,"KRN",19,"NM",5,0)
PXRM CPRS LOOKUP CATEGORIES^^0
"BLD",2382,"KRN",19,"NM",6,0)
PXRM DEFINITION INQUIRY^^0
"BLD",2382,"KRN",19,"NM",10,0)
PXRM DIALOG MANAGEMENT^^0
"BLD",2382,"KRN",19,"NM",11,0)
PXRM FINDING ITEM PARAMETERS^^0
"BLD",2382,"KRN",19,"NM",12,0)
PXRM FINDING TYPE PARAMETERS^^0
"BLD",2382,"KRN",19,"NM",13,0)
PXRM HEALTH FACTOR RESOLUTIONS^^0
"BLD",2382,"KRN",19,"NM",14,0)
PXRM INFO ONLY^^0
"BLD",2382,"KRN",19,"NM",15,0)
PXRM MANAGERS MENU^^0
"BLD",2382,"KRN",19,"NM",16,0)
PXRM OTHER SUPPORTING MENUS^^0
"BLD",2382,"KRN",19,"NM",17,0)
PXRM PARAMETER EDIT^^0
"BLD",2382,"KRN",19,"NM",18,0)
PXRM REMINDER DEFINITION COPY^^1^
"BLD",2382,"KRN",19,"NM",19,0)
PXRM REMINDER DEFINITION EDIT^^1^
"BLD",2382,"KRN",19,"NM",20,0)
PXRM REMINDER EXCHANGE^^0
"BLD",2382,"KRN",19,"NM",21,0)
PXRM REMINDER MANAGEMENT^^0
"BLD",2382,"KRN",19,"NM",23,0)
PXRM REMINDER REPORTS^^0
"BLD",2382,"KRN",19,"NM",24,0)
PXRM REMINDER TEST^^0
"BLD",2382,"KRN",19,"NM",25,0)
PXRM REMINDER TYPES LOGIC^^1^
"BLD",2382,"KRN",19,"NM",26,0)
PXRM REMINDERS DUE^^0
"BLD",2382,"KRN",19,"NM",27,0)
PXRM REMINDERS LIST^^1^
"BLD",2382,"KRN",19,"NM",28,0)
PXRM RESOLUTION EDIT/INQUIRE^^0
"BLD",2382,"KRN",19,"NM",29,0)
PXRM TAXONOMY COPY^^0
"BLD",2382,"KRN",19,"NM",30,0)
PXRM TAXONOMY DIALOG^^0
"BLD",2382,"KRN",19,"NM",31,0)
PXRM TAXONOMY EDIT^^0
"BLD",2382,"KRN",19,"NM",32,0)
PXRM TAXONOMY INQUIRY^^0
"BLD",2382,"KRN",19,"NM",33,0)
PXRM TAXONOMY LIST^^0
"BLD",2382,"KRN",19,"NM",34,0)
PXRM TAXONOMY MANAGEMENT^^0
"BLD",2382,"KRN",19,"NM",35,0)
PXRM TERM COPY^^0
"BLD",2382,"KRN",19,"NM",36,0)
PXRM TERM EDIT^^0
"BLD",2382,"KRN",19,"NM",37,0)
PXRM TERM INQUIRY^^0
"BLD",2382,"KRN",19,"NM",38,0)
PXRM TERM MANAGEMENT^^0
"BLD",2382,"KRN",19,"NM",39,0)
PXRM DIALOG/REMINDER LINK^^1^
"BLD",2382,"KRN",19,"NM",40,0)
PXRM DIALOG/COMPONENT EDIT^^0
"BLD",2382,"KRN",19,"NM",41,0)
PXRM DIALOG PARAMETERS^^0
"BLD",2382,"KRN",19,"NM",42,0)
PXRM REMINDER INQUIRY^^1^
"BLD",2382,"KRN",19,"NM",43,0)
PXRM PROGRESS NOTE HEADERS^^0
"BLD",2382,"KRN",19,"NM",44,0)
PXRM DIALOG GENERATE^^1^
"BLD",2382,"KRN",19,"NM",45,0)
PXRM DIALOG EDIT^^1^
"BLD",2382,"KRN",19,"NM",46,0)
PXRM DIALOG EDIT/INQUIRY^^1^
"BLD",2382,"KRN",19,"NM",47,0)
PXRM DEFINITION COPY^^0
"BLD",2382,"KRN",19,"NM",48,0)
PXRM DEFINITION EDIT^^0
"BLD",2382,"KRN",19,"NM",49,0)
PXRM CF MANAGEMENT^^0
"BLD",2382,"KRN",19,"NM",50,0)
PXRM COMPUTED FINDING EDIT^^0
"BLD",2382,"KRN",19,"NM",51,0)
PXRM COMPUTED FINDING LIST^^0
"BLD",2382,"KRN",19,"NM",52,0)
PXRM DEFINITION LIST^^0
"BLD",2382,"KRN",19,"NM",53,0)
PXRM TERM LIST^^0
"BLD",2382,"KRN",19,"NM",54,0)
PXTT TABLE MAINTENANCE^^4^
"BLD",2382,"KRN",19,"NM",55,0)
PX PCE COORDINATOR MENU^^4^
"BLD",2382,"KRN",19,"NM",56,0)
GMTS COORDINATOR^^4^
"BLD",2382,"KRN",19,"NM",58,0)
ORCM QUICK ORDERS^^4^
"BLD",2382,"KRN",19,"NM",59,0)
PXRM GUI REMINDERS ACTIVE^^0
"BLD",2382,"KRN",19,"NM",60,0)
PXRM MENTAL HEALTH ACTIVE^^0
"BLD",2382,"KRN",19,"NM",61,0)
PXRM CPRS CONFIGURATION^^0
"BLD",2382,"KRN",19,"NM",62,0)
PX HS DISCLAIMER EDIT^^1^
"BLD",2382,"KRN",19,"NM",63,0)
PX HS/RPT PARAMETERS PRINT^^0
"BLD",2382,"KRN",19,"NM",64,0)
PX HS/RPT PARAMETER MENU^^0
"BLD",2382,"KRN",19,"NM",65,0)
PXRM INFO^^1^
"BLD",2382,"KRN",19,"NM",66,0)
PXRM REMINDER COPY^^1^
"BLD",2382,"KRN",19,"NM",67,0)
PXRM REMINDER EDIT^^1^
"BLD",2382,"KRN",19,"NM",68,0)
PXRM RESOLUTION EDIT^^1^
"BLD",2382,"KRN",19,"NM",69,0)
PXRMX REMINDERS DUE^^1^
"BLD",2382,"KRN",19,"NM",70,0)
PX REPORT PARAMETER EDIT^^4^
"BLD",2382,"KRN",19,"NM",71,0)
IBDF PRINT BLNK ENCOUNTER FORM^^4^
"BLD",2382,"KRN",19,"NM","B","GMTS COORDINATOR",56)

"BLD",2382,"KRN",19,"NM","B","IBDF PRINT BLNK ENCOUNTER FORM",71)

"BLD",2382,"KRN",19,"NM","B","ORCM QUICK ORDERS",58)

"BLD",2382,"KRN",19,"NM","B","PX HS DISCLAIMER EDIT",62)

"BLD",2382,"KRN",19,"NM","B","PX HS/RPT PARAMETER MENU",64)

"BLD",2382,"KRN",19,"NM","B","PX HS/RPT PARAMETERS PRINT",63)

"BLD",2382,"KRN",19,"NM","B","PX PCE COORDINATOR MENU",55)

"BLD",2382,"KRN",19,"NM","B","PX REPORT PARAMETER EDIT",70)

"BLD",2382,"KRN",19,"NM","B","PXRM (IN)/ACTIVATE REMINDERS",1)

"BLD",2382,"KRN",19,"NM","B","PXRM (IN)/ACTIVATE TAXONOMIES",2)

"BLD",2382,"KRN",19,"NM","B","PXRM CATEGORY EDIT/INQUIRE",3)

"BLD",2382,"KRN",19,"NM","B","PXRM CF MANAGEMENT",49)

"BLD",2382,"KRN",19,"NM","B","PXRM COMPUTED FINDING EDIT",50)

"BLD",2382,"KRN",19,"NM","B","PXRM COMPUTED FINDING LIST",51)

"BLD",2382,"KRN",19,"NM","B","PXRM CPRS CONFIGURATION",61)

"BLD",2382,"KRN",19,"NM","B","PXRM CPRS COVER SHEET LIST",4)

"BLD",2382,"KRN",19,"NM","B","PXRM CPRS LOOKUP CATEGORIES",5)

"BLD",2382,"KRN",19,"NM","B","PXRM DEFINITION COPY",47)

"BLD",2382,"KRN",19,"NM","B","PXRM DEFINITION EDIT",48)

"BLD",2382,"KRN",19,"NM","B","PXRM DEFINITION INQUIRY",6)

"BLD",2382,"KRN",19,"NM","B","PXRM DEFINITION LIST",52)

"BLD",2382,"KRN",19,"NM","B","PXRM DIALOG EDIT",45)

"BLD",2382,"KRN",19,"NM","B","PXRM DIALOG EDIT/INQUIRY",46)

"BLD",2382,"KRN",19,"NM","B","PXRM DIALOG GENERATE",44)

"BLD",2382,"KRN",19,"NM","B","PXRM DIALOG MANAGEMENT",10)

"BLD",2382,"KRN",19,"NM","B","PXRM DIALOG PARAMETERS",41)

"BLD",2382,"KRN",19,"NM","B","PXRM DIALOG/COMPONENT EDIT",40)

"BLD",2382,"KRN",19,"NM","B","PXRM DIALOG/REMINDER LINK",39)

"BLD",2382,"KRN",19,"NM","B","PXRM FINDING ITEM PARAMETERS",11)

"BLD",2382,"KRN",19,"NM","B","PXRM FINDING TYPE PARAMETERS",12)

"BLD",2382,"KRN",19,"NM","B","PXRM GUI REMINDERS ACTIVE",59)

"BLD",2382,"KRN",19,"NM","B","PXRM HEALTH FACTOR RESOLUTIONS",13)

"BLD",2382,"KRN",19,"NM","B","PXRM INFO",65)

"BLD",2382,"KRN",19,"NM","B","PXRM INFO ONLY",14)

"BLD",2382,"KRN",19,"NM","B","PXRM MANAGERS MENU",15)

"BLD",2382,"KRN",19,"NM","B","PXRM MENTAL HEALTH ACTIVE",60)

"BLD",2382,"KRN",19,"NM","B","PXRM OTHER SUPPORTING MENUS",16)

"BLD",2382,"KRN",19,"NM","B","PXRM PARAMETER EDIT",17)

"BLD",2382,"KRN",19,"NM","B","PXRM PROGRESS NOTE HEADERS",43)

"BLD",2382,"KRN",19,"NM","B","PXRM REMINDER COPY",66)

"BLD",2382,"KRN",19,"NM","B","PXRM REMINDER DEFINITION COPY",18)

"BLD",2382,"KRN",19,"NM","B","PXRM REMINDER DEFINITION EDIT",19)

"BLD",2382,"KRN",19,"NM","B","PXRM REMINDER EDIT",67)

"BLD",2382,"KRN",19,"NM","B","PXRM REMINDER EXCHANGE",20)

"BLD",2382,"KRN",19,"NM","B","PXRM REMINDER INQUIRY",42)

"BLD",2382,"KRN",19,"NM","B","PXRM REMINDER MANAGEMENT",21)

"BLD",2382,"KRN",19,"NM","B","PXRM REMINDER REPORTS",23)

"BLD",2382,"KRN",19,"NM","B","PXRM REMINDER TEST",24)

"BLD",2382,"KRN",19,"NM","B","PXRM REMINDER TYPES LOGIC",25)

"BLD",2382,"KRN",19,"NM","B","PXRM REMINDERS DUE",26)

"BLD",2382,"KRN",19,"NM","B","PXRM REMINDERS LIST",27)

"BLD",2382,"KRN",19,"NM","B","PXRM RESOLUTION EDIT",68)

"BLD",2382,"KRN",19,"NM","B","PXRM RESOLUTION EDIT/INQUIRE",28)

"BLD",2382,"KRN",19,"NM","B","PXRM TAXONOMY COPY",29)

"BLD",2382,"KRN",19,"NM","B","PXRM TAXONOMY DIALOG",30)

"BLD",2382,"KRN",19,"NM","B","PXRM TAXONOMY EDIT",31)

"BLD",2382,"KRN",19,"NM","B","PXRM TAXONOMY INQUIRY",32)

"BLD",2382,"KRN",19,"NM","B","PXRM TAXONOMY LIST",33)

"BLD",2382,"KRN",19,"NM","B","PXRM TAXONOMY MANAGEMENT",34)

"BLD",2382,"KRN",19,"NM","B","PXRM TERM COPY",35)

"BLD",2382,"KRN",19,"NM","B","PXRM TERM EDIT",36)

"BLD",2382,"KRN",19,"NM","B","PXRM TERM INQUIRY",37)

"BLD",2382,"KRN",19,"NM","B","PXRM TERM LIST",53)

"BLD",2382,"KRN",19,"NM","B","PXRM TERM MANAGEMENT",38)

"BLD",2382,"KRN",19,"NM","B","PXRMX REMINDERS DUE",69)

"BLD",2382,"KRN",19,"NM","B","PXTT TABLE MAINTENANCE",54)

"BLD",2382,"KRN",19.1,0)
19.1
"BLD",2382,"KRN",101,0)
101
"BLD",2382,"KRN",101,"NM",0)
^9.68A^59^57
"BLD",2382,"KRN",101,"NM",1,0)
PXRM DIALOG COPY^^0
"BLD",2382,"KRN",101,"NM",2,0)
PXRM DIALOG DETAILS^^0
"BLD",2382,"KRN",101,"NM",3,0)
PXRM DIALOG EDIT^^0
"BLD",2382,"KRN",101,"NM",4,0)
PXRM DIALOG EDIT INQUIRY^^0
"BLD",2382,"KRN",101,"NM",5,0)
PXRM DIALOG ELEMENT EDIT^^1^
"BLD",2382,"KRN",101,"NM",6,0)
PXRM DIALOG EXIT^^0
"BLD",2382,"KRN",101,"NM",7,0)
PXRM DIALOG MENU^^0
"BLD",2382,"KRN",101,"NM",8,0)
PXRM DIALOG SELECTION MENU^^1^
"BLD",2382,"KRN",101,"NM",9,0)
PXRM DIALOG TEST^^1^
"BLD",2382,"KRN",101,"NM",10,0)
PXRM DIALOG VIEW^^1^
"BLD",2382,"KRN",101,"NM",11,0)
PXRM EXCH MENU^^0
"BLD",2382,"KRN",101,"NM",12,0)
PXRM EXCH QUIT^^0
"BLD",2382,"KRN",101,"NM",13,0)
PXRM FINDING GENERAL MENU^^0
"BLD",2382,"KRN",101,"NM",14,0)
PXRM FINDING SELECTION MENU^^0
"BLD",2382,"KRN",101,"NM",15,0)
PXRM GENERAL EDIT^^0
"BLD",2382,"KRN",101,"NM",16,0)
PXRM GENERAL EXIT^^0
"BLD",2382,"KRN",101,"NM",17,0)
PXRM GENERAL INQUIRY^^0
"BLD",2382,"KRN",101,"NM",18,0)
PXRM GENERAL MENU^^0
"BLD",2382,"KRN",101,"NM",19,0)
PXRM HANDLE HOST FILE^^0
"BLD",2382,"KRN",101,"NM",20,0)
PXRM HANDLE MAIL MESSAGE^^0
"BLD",2382,"KRN",101,"NM",21,0)
PXRM INSTALL REMINDER COMPONENTS^^0
"BLD",2382,"KRN",101,"NM",22,0)
PXRM INSTALLATION SUMMARY^^0
"BLD",2382,"KRN",101,"NM",23,0)
PXRM LIST COMPONENTS^^0
"BLD",2382,"KRN",101,"NM",24,0)
PXRM LIST REMINDERS^^0
"BLD",2382,"KRN",101,"NM",25,0)
PXRM MAIL REMINDER^^0
"BLD",2382,"KRN",101,"NM",26,0)
PXRM PATIENT DATA CHANGE^^0
"BLD",2382,"KRN",101,"NM",27,0)
PXRM RECEIVE HL7^^0
"BLD",2382,"KRN",101,"NM",28,0)
PXRM REMINDER DETAILS^^0
"BLD",2382,"KRN",101,"NM",29,0)
PXRM REMINDER INQUIRY^^0
"BLD",2382,"KRN",101,"NM",30,0)
PXRM SAVE REMINDER^^0
"BLD",2382,"KRN",101,"NM",31,0)
PXRM SELECT HOST FILE^^0
"BLD",2382,"KRN",101,"NM",32,0)
PXRM SELECT MESSAGE^^0
"BLD",2382,"KRN",101,"NM",33,0)
PXRM SELECT RESOLUTION^^0
"BLD",2382,"KRN",101,"NM",34,0)
PXRM SELECTION ADD^^0
"BLD",2382,"KRN",101,"NM",35,0)
PXRM SELECTION EXIT^^0
"BLD",2382,"KRN",101,"NM",36,0)
PXRM SELECTION ITEM^^0
"BLD",2382,"KRN",101,"NM",37,0)
PXRM SELECTION LIST^^1^
"BLD",2382,"KRN",101,"NM",38,0)
PXRM SELECTION MENU^^0
"BLD",2382,"KRN",101,"NM",39,0)
PXRM SELECTION VIEW^^1^
"BLD",2382,"KRN",101,"NM",40,0)
PXRM DIALOG/REMINDER MENU^^0
"BLD",2382,"KRN",101,"NM",41,0)
PXRM DIALOG SELECTION MENU (CV)^^1^
"BLD",2382,"KRN",101,"NM",43,0)
PXRM SELECTION VIEW (LR)^^0
"BLD",2382,"KRN",101,"NM",44,0)
PXRM SELECTION VIEW (AR)^^0
"BLD",2382,"KRN",101,"NM",45,0)
PXRM SELECTION VIEW TOGGLE^^0
"BLD",2382,"KRN",101,"NM",47,0)
PXRM DIALOG HISTORY^^0
"BLD",2382,"KRN",101,"NM",48,0)
PXRM DIALOG ADD^^0
"BLD",2382,"KRN",101,"NM",49,0)
PXRM DIALOG LINK^^0
"BLD",2382,"KRN",101,"NM",50,0)
PXRM DIALOG SELECTION ITEM^^0
"BLD",2382,"KRN",101,"NM",51,0)
PXRM SELECTION VIEW (CV)^^0
"BLD",2382,"KRN",101,"NM",52,0)
PXRM DIALOG SELECTION MENU (DLGE)^^0
"BLD",2382,"KRN",101,"NM",53,0)
PXRM DIALOG SELECTION MENU (DLG)^^0
"BLD",2382,"KRN",101,"NM",54,0)
PXRM SELECTION PRINT ALL^^0
"BLD",2382,"KRN",101,"NM",55,0)
PXRM SELECTION VIEW (DV)^^1^
"BLD",2382,"KRN",101,"NM",56,0)
PXRM SELECTION VIEW (RV)^^1^
"BLD",2382,"KRN",101,"NM",57,0)
PXRM DIALOG COPY COMPONENT^^0
"BLD",2382,"KRN",101,"NM",58,0)
PXRM DIALOG P/N TEXT^^0
"BLD",2382,"KRN",101,"NM",59,0)
PXRM DIALOG TEXT^^0
"BLD",2382,"KRN",101,"NM","B","PXRM DIALOG ADD",48)

"BLD",2382,"KRN",101,"NM","B","PXRM DIALOG COPY",1)

"BLD",2382,"KRN",101,"NM","B","PXRM DIALOG COPY COMPONENT",57)

"BLD",2382,"KRN",101,"NM","B","PXRM DIALOG DETAILS",2)

"BLD",2382,"KRN",101,"NM","B","PXRM DIALOG EDIT",3)

"BLD",2382,"KRN",101,"NM","B","PXRM DIALOG EDIT INQUIRY",4)

"BLD",2382,"KRN",101,"NM","B","PXRM DIALOG ELEMENT EDIT",5)

"BLD",2382,"KRN",101,"NM","B","PXRM DIALOG EXIT",6)

"BLD",2382,"KRN",101,"NM","B","PXRM DIALOG HISTORY",47)

"BLD",2382,"KRN",101,"NM","B","PXRM DIALOG LINK",49)

"BLD",2382,"KRN",101,"NM","B","PXRM DIALOG MENU",7)

"BLD",2382,"KRN",101,"NM","B","PXRM DIALOG P/N TEXT",58)

"BLD",2382,"KRN",101,"NM","B","PXRM DIALOG SELECTION ITEM",50)

"BLD",2382,"KRN",101,"NM","B","PXRM DIALOG SELECTION MENU",8)

"BLD",2382,"KRN",101,"NM","B","PXRM DIALOG SELECTION MENU (CV)",41)

"BLD",2382,"KRN",101,"NM","B","PXRM DIALOG SELECTION MENU (DLG)",53)

"BLD",2382,"KRN",101,"NM","B","PXRM DIALOG SELECTION MENU (DLGE)",52)

"BLD",2382,"KRN",101,"NM","B","PXRM DIALOG TEST",9)

"BLD",2382,"KRN",101,"NM","B","PXRM DIALOG TEXT",59)

"BLD",2382,"KRN",101,"NM","B","PXRM DIALOG VIEW",10)

"BLD",2382,"KRN",101,"NM","B","PXRM DIALOG/REMINDER MENU",40)

"BLD",2382,"KRN",101,"NM","B","PXRM EXCH MENU",11)

"BLD",2382,"KRN",101,"NM","B","PXRM EXCH QUIT",12)

"BLD",2382,"KRN",101,"NM","B","PXRM FINDING GENERAL MENU",13)

"BLD",2382,"KRN",101,"NM","B","PXRM FINDING SELECTION MENU",14)

"BLD",2382,"KRN",101,"NM","B","PXRM GENERAL EDIT",15)

"BLD",2382,"KRN",101,"NM","B","PXRM GENERAL EXIT",16)

"BLD",2382,"KRN",101,"NM","B","PXRM GENERAL INQUIRY",17)

"BLD",2382,"KRN",101,"NM","B","PXRM GENERAL MENU",18)

"BLD",2382,"KRN",101,"NM","B","PXRM HANDLE HOST FILE",19)

"BLD",2382,"KRN",101,"NM","B","PXRM HANDLE MAIL MESSAGE",20)

"BLD",2382,"KRN",101,"NM","B","PXRM INSTALL REMINDER COMPONENTS",21)

"BLD",2382,"KRN",101,"NM","B","PXRM INSTALLATION SUMMARY",22)

"BLD",2382,"KRN",101,"NM","B","PXRM LIST COMPONENTS",23)

"BLD",2382,"KRN",101,"NM","B","PXRM LIST REMINDERS",24)

"BLD",2382,"KRN",101,"NM","B","PXRM MAIL REMINDER",25)

"BLD",2382,"KRN",101,"NM","B","PXRM PATIENT DATA CHANGE",26)

"BLD",2382,"KRN",101,"NM","B","PXRM RECEIVE HL7",27)

"BLD",2382,"KRN",101,"NM","B","PXRM REMINDER DETAILS",28)

"BLD",2382,"KRN",101,"NM","B","PXRM REMINDER INQUIRY",29)

"BLD",2382,"KRN",101,"NM","B","PXRM SAVE REMINDER",30)

"BLD",2382,"KRN",101,"NM","B","PXRM SELECT HOST FILE",31)

"BLD",2382,"KRN",101,"NM","B","PXRM SELECT MESSAGE",32)

"BLD",2382,"KRN",101,"NM","B","PXRM SELECT RESOLUTION",33)

"BLD",2382,"KRN",101,"NM","B","PXRM SELECTION ADD",34)

"BLD",2382,"KRN",101,"NM","B","PXRM SELECTION EXIT",35)

"BLD",2382,"KRN",101,"NM","B","PXRM SELECTION ITEM",36)

"BLD",2382,"KRN",101,"NM","B","PXRM SELECTION LIST",37)

"BLD",2382,"KRN",101,"NM","B","PXRM SELECTION MENU",38)

"BLD",2382,"KRN",101,"NM","B","PXRM SELECTION PRINT ALL",54)

"BLD",2382,"KRN",101,"NM","B","PXRM SELECTION VIEW",39)

"BLD",2382,"KRN",101,"NM","B","PXRM SELECTION VIEW (AR)",44)

"BLD",2382,"KRN",101,"NM","B","PXRM SELECTION VIEW (CV)",51)

"BLD",2382,"KRN",101,"NM","B","PXRM SELECTION VIEW (DV)",55)

"BLD",2382,"KRN",101,"NM","B","PXRM SELECTION VIEW (LR)",43)

"BLD",2382,"KRN",101,"NM","B","PXRM SELECTION VIEW (RV)",56)

"BLD",2382,"KRN",101,"NM","B","PXRM SELECTION VIEW TOGGLE",45)

"BLD",2382,"KRN",409.61,0)
409.61
"BLD",2382,"KRN",409.61,"NM",0)
^9.68A^12^12
"BLD",2382,"KRN",409.61,"NM",1,0)
PXRM DIALOG LIST^^0
"BLD",2382,"KRN",409.61,"NM",2,0)
PXRM DIALOG MAIN HELP^^0
"BLD",2382,"KRN",409.61,"NM",3,0)
PXRM EX HOST FILE^^0
"BLD",2382,"KRN",409.61,"NM",4,0)
PXRM EX INSTALL SUMMARY^^0
"BLD",2382,"KRN",409.61,"NM",5,0)
PXRM EX LIST COMPONENTS^^0
"BLD",2382,"KRN",409.61,"NM",6,0)
PXRM EX MAILMAN MESSAGE^^0
"BLD",2382,"KRN",409.61,"NM",7,0)
PXRM EX MAIN HELP^^0
"BLD",2382,"KRN",409.61,"NM",8,0)
PXRM FINDING PARAMETER LIST^^0
"BLD",2382,"KRN",409.61,"NM",9,0)
PXRM GENERAL EDIT/LIST^^0
"BLD",2382,"KRN",409.61,"NM",10,0)
PXRM REMINDER EXCHANGE^^0
"BLD",2382,"KRN",409.61,"NM",11,0)
PXRM SELECTION^^0
"BLD",2382,"KRN",409.61,"NM",12,0)
PXRM DIALOG HISTORY^^0
"BLD",2382,"KRN",409.61,"NM","B","PXRM DIALOG HISTORY",12)

"BLD",2382,"KRN",409.61,"NM","B","PXRM DIALOG LIST",1)

"BLD",2382,"KRN",409.61,"NM","B","PXRM DIALOG MAIN HELP",2)

"BLD",2382,"KRN",409.61,"NM","B","PXRM EX HOST FILE",3)

"BLD",2382,"KRN",409.61,"NM","B","PXRM EX INSTALL SUMMARY",4)

"BLD",2382,"KRN",409.61,"NM","B","PXRM EX LIST COMPONENTS",5)

"BLD",2382,"KRN",409.61,"NM","B","PXRM EX MAILMAN MESSAGE",6)

"BLD",2382,"KRN",409.61,"NM","B","PXRM EX MAIN HELP",7)

"BLD",2382,"KRN",409.61,"NM","B","PXRM FINDING PARAMETER LIST",8)

"BLD",2382,"KRN",409.61,"NM","B","PXRM GENERAL EDIT/LIST",9)

"BLD",2382,"KRN",409.61,"NM","B","PXRM REMINDER EXCHANGE",10)

"BLD",2382,"KRN",409.61,"NM","B","PXRM SELECTION",11)

"BLD",2382,"KRN",771,0)
771
"BLD",2382,"KRN",869.2,0)
869.2
"BLD",2382,"KRN",869.2,"NM",0)
^9.68A^^
"BLD",2382,"KRN",870,0)
870
"BLD",2382,"KRN",870,"NM",0)
^9.68A^^
"BLD",2382,"KRN",8994,0)
8994
"BLD",2382,"KRN",8994,"NM",0)
^9.68A^^0
"BLD",2382,"KRN","B",.4,.4)

"BLD",2382,"KRN","B",.401,.401)

"BLD",2382,"KRN","B",.402,.402)

"BLD",2382,"KRN","B",.403,.403)

"BLD",2382,"KRN","B",.5,.5)

"BLD",2382,"KRN","B",.84,.84)

"BLD",2382,"KRN","B",3.6,3.6)

"BLD",2382,"KRN","B",3.8,3.8)

"BLD",2382,"KRN","B",9.2,9.2)

"BLD",2382,"KRN","B",9.8,9.8)

"BLD",2382,"KRN","B",19,19)

"BLD",2382,"KRN","B",19.1,19.1)

"BLD",2382,"KRN","B",101,101)

"BLD",2382,"KRN","B",409.61,409.61)

"BLD",2382,"KRN","B",771,771)

"BLD",2382,"KRN","B",869.2,869.2)

"BLD",2382,"KRN","B",870,870)

"BLD",2382,"KRN","B",8994,8994)

"BLD",2382,"QUES",0)
^9.62^^
"BLD",2382,"REQB",0)
^9.611^8^6
"BLD",2382,"REQB",1,0)
OR*3.0*48^2
"BLD",2382,"REQB",2,0)
TIU*1.0*47^2
"BLD",2382,"REQB",3,0)
XU*8.0*120^2
"BLD",2382,"REQB",5,0)
GMPL*2.0*19^2
"BLD",2382,"REQB",7,0)
DI*22.0*31^2
"BLD",2382,"REQB",8,0)
GMPL*2.0*23^2
"BLD",2382,"REQB","B","DI*22.0*31",7)

"BLD",2382,"REQB","B","GMPL*2.0*19",5)

"BLD",2382,"REQB","B","GMPL*2.0*23",8)

"BLD",2382,"REQB","B","OR*3.0*48",1)

"BLD",2382,"REQB","B","TIU*1.0*47",2)

"BLD",2382,"REQB","B","XU*8.0*120",3)

"DATA",800,1,0)
1^^
"DATA",800,1,1,0)
^800.04^1^1
"DATA",800,1,1,1,0)
http://vaww.va.gov/publ/direc/health/handbook/1120-2hk.htm
"DATA",800,1,"DISC1",0)
^800.01^5^5^3000607^^^^
"DATA",800,1,"DISC1",1,0)
The following disease screening, immunization and patient education
"DATA",800,1,"DISC1",2,0)
recommendations are offered as guidelines to assist in your practice.
"DATA",800,1,"DISC1",3,0)
These are only recommendations, not practice standards.  The appropriate
"DATA",800,1,"DISC1",4,0)
utilization of these for your individual patient must be based on clinical
"DATA",800,1,"DISC1",5,0)
judgment and the patient's current status.
"DATA",800,1,"MGFE")

"DATA",801.41,1,0)
PXRM COMMENT^^^P^^^^
"DATA",801.41,1,2)
^^^Comment:
"DATA",801.41,1,10,0)
^801.412IA^^0
"DATA",801.41,1,99)
3000508.121608
"DATA",801.41,2,0)
PXRM LEVEL OF UNDERSTANDING^^^P^^^^
"DATA",801.41,2,1)
^^^4^^
"DATA",801.41,2,2)
^^^Level of Understanding:
"DATA",801.41,2,99)
3000508.121608
"DATA",801.41,40,0)
PXRM VISIT DATE^^^P^^^^
"DATA",801.41,40,2)
^^^Date:
"DATA",801.41,40,99)
3000508.121608
"DATA",801.41,41,0)
PXRM OUTSIDE LOCATION^^^P^^^^
"DATA",801.41,41,2)
^^^Location:
"DATA",801.41,41,99)
3000508.121608
"DATA",801.41,42,0)
PXRM CONTRAINDICATED^^^P^^^^
"DATA",801.41,42,1)
^^^7^^
"DATA",801.41,42,2)
^^^Contraindicated:
"DATA",801.41,42,99)
3000508.121608
"DATA",801.41,43,0)
PXRM SERIES^^^P^^^^
"DATA",801.41,43,1)
^^^7^^
"DATA",801.41,43,2)
^^^Series:
"DATA",801.41,43,99)
3000508.121608
"DATA",801.41,44,0)
PXRM REACTION^^^P^^^^
"DATA",801.41,44,1)
^^^7^^
"DATA",801.41,44,2)
^^^Reaction:
"DATA",801.41,44,99)
3000508.121608
"DATA",801.41,48,0)
PXRM RESULT (EXAM)^^^P^^^^
"DATA",801.41,48,1)
^^^5^^^
"DATA",801.41,48,2)
^^^Exam Result:
"DATA",801.41,48,99)
3000508.121608
"DATA",801.41,62,0)
PXRM PRIMARY DIAGNOSIS^^^P
"DATA",801.41,62,1)
^^^17^^^
"DATA",801.41,62,2)
^^^Primary Diagnosis
"DATA",801.41,62,99)
3000508.121608
"DATA",801.41,64,0)
PXRM QUANTITY^^^P
"DATA",801.41,64,1)
^^^18^^
"DATA",801.41,64,2)
1^^^Quantity:
"DATA",801.41,64,99)
3000508.121608
"DATA",801.41,67,0)
PXRM RESULT (SKIN TEST)^^^P
"DATA",801.41,67,1)
^^^13^^
"DATA",801.41,67,2)
^^^Result:
"DATA",801.41,67,99)
3000508.121608
"DATA",801.41,68,0)
PXRM READING^^^P
"DATA",801.41,68,1)
^^^13^^
"DATA",801.41,68,2)
^^^Reading:
"DATA",801.41,68,99)
3000508.121608
"DATA",801.41,86,0)
PXRM REFUSED^^^F
"DATA",801.41,86,1)
^^^4^^^
"DATA",801.41,86,2)
^REFUSED
"DATA",801.41,86,99)
3000508.121608
"DATA",801.41,87,0)
PXRM REPEAT CONTRAINDICATED^^^F
"DATA",801.41,87,1)
^^^7^^^
"DATA",801.41,87,2)
^YES
"DATA",801.41,87,99)
3000508.121608
"DATA",801.41,88,0)
PXRM LEVEL OF SEVERITY^^^P
"DATA",801.41,88,1)
^^^6^^
"DATA",801.41,88,2)
H^MO^^Level of Severity:
"DATA",801.41,88,99)
3000508.121608
"DATA",801.41,89,0)
PXRM ADD TO PROBLEM LIST^^^P
"DATA",801.41,89,1)
^^^17^^
"DATA",801.41,89,2)
^^1^Add to Problem List
"DATA",801.41,89,99)
3000508.121608
"DATA",801.41,100,0)
PXRM AUDC RESULT ELEMENT 1^^^T^^^^^^^^^I SCORE<4
"DATA",801.41,100,35,0)
^801.4135^1^1^3000609^^^^
"DATA",801.41,100,35,1,0)
An alcohol screening test (AUDIT-C) was negative (score=|SCORE|).
"DATA",801.41,101,0)
PXRM AUDC RESULT ELEMENT 2^^^T^^^^^^^^^I SCORE>3
"DATA",801.41,101,35,0)
^801.4135^1^1^3000308^^
"DATA",801.41,101,35,1,0)
An alcohol screening test (AUDIT-C ) was positive (score=|SCORE|).
"DATA",801.41,102,0)
PXRM AUDIT RESULT ELEMENT 1^^^T^^^^^^^^^I SCORE<8
"DATA",801.41,102,35,0)
^801.4135^1^1^3000308^^^
"DATA",801.41,102,35,1,0)
An alcohol screening test (AUDIT) was negative (score=|SCORE|).
"DATA",801.41,103,0)
PXRM AUDIT RESULT ELEMENT 2^^^T^^^^^^^^^I SCORE>7
"DATA",801.41,103,35,0)
^801.4135^1^1^3000308^^^^
"DATA",801.41,103,35,1,0)
An alcohol screening test (AUDIT) was positive (score=|SCORE|).
"DATA",801.41,104,0)
PXRM BDI RESULT ELEMENT 1^^^T^^^^^^^^^I SCORE<10
"DATA",801.41,104,35,0)
^801.4135^2^2^3000308^^^
"DATA",801.41,104,35,1,0)
The Beck Depression Inventory suggests minimal or no mood disorder
"DATA",801.41,104,35,2,0)
(score=|SCORE|).
"DATA",801.41,105,0)
PXRM BDI RESULT ELEMENT 2^^^T^^^^^^^^^I (SCORE>9)&(SCORE<17)
"DATA",801.41,105,35,0)
^801.4135^1^1^3000308^^^^
"DATA",801.41,105,35,1,0)
The Beck Depression Inventory suggests mild mood disorder (score=|SCORE|).
"DATA",801.41,106,0)
PXRM BDI RESULT ELEMENT 3^^^T^^^^^^^^^I (SCORE>16)&(SCORE<30)
"DATA",801.41,106,35,0)
^801.4135^2^2^3000308^^^
"DATA",801.41,106,35,1,0)
The Beck Depression Inventory suggests moderate mood disorder
"DATA",801.41,106,35,2,0)
(score=|SCORE|).
"DATA",801.41,107,0)
PXRM BDI RESULT ELEMENT 4^^^T^^^^^^^^^I SCORE>29
"DATA",801.41,107,35,0)
^801.4135^2^2^3000308^^
"DATA",801.41,107,35,1,0)
The Beck Depression Inventory suggests severe mood disorder
"DATA",801.41,107,35,2,0)
(score=|SCORE|).
"DATA",801.41,108,0)
PXRM CAGE RESULT ELEMENT 1^^^T^^^^^^^^^I SCORE<2
"DATA",801.41,108,35,0)
^801.4135^1^1^3000327^^^^
"DATA",801.41,108,35,1,0)
An alcohol screening test (CAGE) was negative (score=|SCORE|).
"DATA",801.41,109,0)
PXRM CAGE RESULT ELEMENT 2^^^T^^^^^^^^^I SCORE>1
"DATA",801.41,109,35,0)
^801.4135^1^1^3000308^^^^
"DATA",801.41,109,35,1,0)
An alcohol screening test (CAGE) was positive (score=|SCORE|).
"DATA",801.41,110,0)
PXRM DOM80 RESULT ELEMENT 1^^^T^^^^^^^^^I SCORE=0
"DATA",801.41,110,35,0)
^801.4135^1^1^3000308^^^
"DATA",801.41,110,35,1,0)
A mood disorder screening test (DOM80) was negative.
"DATA",801.41,111,0)
PXRM DOM80 RESULT ELEMENT 2^^^T^^^^^^^^^I SCORE=1
"DATA",801.41,111,35,0)
^801.4135^1^1^3000308^^^
"DATA",801.41,111,35,1,0)
A mood disorder screening test (DOM80) was positive.
"DATA",801.41,112,0)
PXRM DOMG RESULT ELEMENT 1^^^T^^^^^^^^^I SCORE<4
"DATA",801.41,112,35,0)
^801.4135^1^1^3000308^^^
"DATA",801.41,112,35,1,0)
A mood disorder screening test (DOMG) was negative (score=|SCORE|).
"DATA",801.41,113,0)
PXRM DOMG RESULT ELEMENT 2^^^T^^^^^^^^^I SCORE>3
"DATA",801.41,113,35,0)
^801.4135^1^1^3000308^^^
"DATA",801.41,113,35,1,0)
A mood disorder screening test (DOMG) was positive (score=|SCORE|).
"DATA",801.41,114,0)
PXRM MISS RESULT ELEMENT 1^^^T^^^^^^^^^I SCORE<107
"DATA",801.41,114,35,0)
^801.4135^2^2^3000308^^^
"DATA",801.41,114,35,1,0)
This patient endorsed fewer items on a screening test for PTSD than is
"DATA",801.41,114,35,2,0)
typical of Vietnam veterans diagnosed with PTSD (MISS score = |SCORE|).
"DATA",801.41,115,0)
PXRM MISS RESULT ELEMENT 2^^^T^^^^^^^^^I SCORE>106
"DATA",801.41,115,35,0)
^801.4135^2^2^3000308^^
"DATA",801.41,115,35,1,0)
This patient endorsed a number of items on a screening test for PTSD that
"DATA",801.41,115,35,2,0)
is typical of Vietnam veterans diagnosed with PTSD (MISS score = |SCORE|).
"DATA",801.41,116,0)
PXRM ZUNG RESULT ELEMENT 1^^^T^^^^^^^^^I SCORE<33
"DATA",801.41,116,35,0)
^801.4135^2^2^3000308^^^
"DATA",801.41,116,35,1,0)
A mood disorder screening test (ZUNG) was in the low range (score =
"DATA",801.41,116,35,2,0)
|SCORE|).
"DATA",801.41,117,0)
PXRM ZUNG RESULT ELEMENT 2^^^T^^^^^^^^^I (SCORE>32)&(SCORE<51)
"DATA",801.41,117,35,0)
^801.4135^2^2^3000308^^
"DATA",801.41,117,35,1,0)
A mood disorder screening test (ZUNG) was in the medium range (score =
"DATA",801.41,117,35,2,0)
|SCORE|).
"DATA",801.41,118,0)
PXRM ZUNG RESULT ELEMENT 3^^^T^^^^^^^^^I SCORE>50
"DATA",801.41,118,35,0)
^801.4135^2^2^3000308^^
"DATA",801.41,118,35,1,0)
A mood disorder screening test (ZUNG) was in the high range (score =
"DATA",801.41,118,35,2,0)
|SCORE|).
"DATA",801.41,119,0)
PXRM AIMS RESULT ELEMENT 1^^^T^^^^^^^^^
"DATA",801.41,119,35,0)
^801.4135^22^22^3000609^^^^
"DATA",801.41,119,35,1,0)
The patient was evaluated for symptoms of tardive dyskinesia using the
"DATA",801.41,119,35,2,0)
AIMS.
"DATA",801.41,119,35,3,0)
  Total score for items 1-7:           |SCORE|
"DATA",801.41,119,35,4,0)
  Number of items rated "mild":        |SUM2|
"DATA",801.41,119,35,5,0)
  Number of items rated "moderate":    |SUM3|
"DATA",801.41,119,35,6,0)
  Number of items rated "severe":      |SUM4|
"DATA",801.41,119,35,7,0)
 
"DATA",801.41,119,35,8,0)
Facial and oral movements:
"DATA",801.41,119,35,9,0)
  Muscles of facial expression                   |R1|
"DATA",801.41,119,35,10,0)
  Lips and perioral area                         |R2|
"DATA",801.41,119,35,11,0)
  Jaw                                            |R3|
"DATA",801.41,119,35,12,0)
  Tongue                                         |R4|
"DATA",801.41,119,35,13,0)
 
"DATA",801.41,119,35,14,0)
Extremity movements:
"DATA",801.41,119,35,15,0)
  Upper (arms, wrists, hands, fingers)           |R5|
"DATA",801.41,119,35,16,0)
  Lower (legs, knees, ankles, toes)              |R6|
"DATA",801.41,119,35,17,0)
 
"DATA",801.41,119,35,18,0)
Trunk movements:
"DATA",801.41,119,35,19,0)
  Neck, shoulders, hips                          |R7|
"DATA",801.41,119,35,20,0)
 
"DATA",801.41,119,35,21,0)
Global judgments:
"DATA",801.41,119,35,22,0)
  Severity of abnormal movements                 |R8|
"DATA",801.41,200,0)
PXRM AUDIT RESULT GROUP^^^S
"DATA",801.41,200,10,0)
^801.412IA^2^2
"DATA",801.41,200,10,1,0)
1^102
"DATA",801.41,200,10,2,0)
2^103
"DATA",801.41,200,99)
3000508.121608
"DATA",801.41,201,0)
PXRM AUDC RESULT GROUP^^^S
"DATA",801.41,201,10,0)
^801.412IA^2^2
"DATA",801.41,201,10,1,0)
1^100
"DATA",801.41,201,10,2,0)
2^101
"DATA",801.41,201,99)
3000508.121608
"DATA",801.41,202,0)
PXRM BDI RESULT GROUP^^^S
"DATA",801.41,202,10,0)
^801.412IA^4^4
"DATA",801.41,202,10,1,0)
1^104
"DATA",801.41,202,10,2,0)
2^105
"DATA",801.41,202,10,3,0)
3^106
"DATA",801.41,202,10,4,0)
4^107
"DATA",801.41,202,99)
3000508.121608
"DATA",801.41,203,0)
PXRM CAGE RESULT GROUP^^^S
"DATA",801.41,203,10,0)
^801.412IA^2^2
"DATA",801.41,203,10,1,0)
1^108
"DATA",801.41,203,10,2,0)
2^109
"DATA",801.41,203,99)
3000508.121608
"DATA",801.41,204,0)
PXRM DOM80 RESULT GROUP^^^S
"DATA",801.41,204,10,0)
^801.412IA^2^2
"DATA",801.41,204,10,1,0)
1^110
"DATA",801.41,204,10,2,0)
2^111
"DATA",801.41,204,99)
3000508.121608
"DATA",801.41,205,0)
PXRM DOMG RESULT GROUP^^^S
"DATA",801.41,205,10,0)
^801.412IA^2^2
"DATA",801.41,205,10,1,0)
1^112
"DATA",801.41,205,10,2,0)
2^113
"DATA",801.41,205,99)
3000508.121608
"DATA",801.41,206,0)
PXRM MISS RESULT GROUP^^^S
"DATA",801.41,206,10,0)
^801.412IA^2^2
"DATA",801.41,206,10,1,0)
1^114
"DATA",801.41,206,10,2,0)
2^115
"DATA",801.41,206,99)
3000508.121608
"DATA",801.41,207,0)
PXRM ZUNG RESULT GROUP^^^S
"DATA",801.41,207,10,0)
^801.412IA^3^3
"DATA",801.41,207,10,1,0)
1^116
"DATA",801.41,207,10,2,0)
2^117
"DATA",801.41,207,10,3,0)
3^118
"DATA",801.41,207,99)
3000508.121608
"DATA",801.41,208,0)
PXRM AIMS RESULT GROUP^^^S^^^^^^^^^^^208
"DATA",801.41,208,2)
^^
"DATA",801.41,208,10,0)
^801.412IA^1^1
"DATA",801.41,208,10,1,0)
1^119
"DATA",801.41,208,99)
3000508.121608
"DATA",801.42,1,0)
COM^COM
"DATA",801.42,1,2,0)
^801.422P^4^2
"DATA",801.42,1,2,4,0)
1
"DATA",801.42,2,0)
VST_LOC
"DATA",801.42,2,1,0)
^^3^3^2991028^^
"DATA",801.42,2,1,1,0)
This is the Visit Outside Location GUI Process.  This process will be used
"DATA",801.42,2,1,2,0)
when the item checked off in the GUI reflects historical information is
"DATA",801.42,2,1,3,0)
being entered.
"DATA",801.42,2,2,0)
^801.422P^1^1
"DATA",801.42,2,2,1,0)
41
"DATA",801.42,3,0)
VST_DATE
"DATA",801.42,3,1,0)
^^2^2^2991028^
"DATA",801.42,3,1,1,0)
This is the GUI process for Visit Date.  The Visit Date is required to be
"DATA",801.42,3,1,2,0)
entered if the item checked off represents a historical entry.
"DATA",801.42,3,2,0)
^801.422P^1^1
"DATA",801.42,3,2,1,0)
40
"DATA",801.42,4,0)
CPT_QTY^CPT^
"DATA",801.42,4,1,0)
^^1^1^2991028^^
"DATA",801.42,4,1,1,0)
This is GUI process for the CPT Quantity prompt.
"DATA",801.42,4,2,0)
^801.422P^1^1
"DATA",801.42,4,2,1,0)
64
"DATA",801.42,5,0)
POV_PRIM^POV
"DATA",801.42,5,1,0)
^^1^1^2991201^^
"DATA",801.42,5,1,1,0)
This is the GUI process for the prompt for primary diagnosis.
"DATA",801.42,5,2,0)
^801.422P^1^1
"DATA",801.42,5,2,1,0)
62
"DATA",801.42,6,0)
POV_ADD^PL
"DATA",801.42,6,1,0)
^^2^2^2991210^^
"DATA",801.42,6,1,1,0)
This is the GUI Process that will cause a diagnosis to be added to the
"DATA",801.42,6,1,2,0)
Problem List.
"DATA",801.42,6,2,0)
^801.422P^1^1
"DATA",801.42,6,2,1,0)
89
"DATA",801.42,7,0)
XAM_RES^XAM^
"DATA",801.42,7,1,0)
^^1^1^2991028^
"DATA",801.42,7,1,1,0)
This is the GUI process that will handle the Exam RESULTS prompt.
"DATA",801.42,7,2,0)
^801.422P^1^1
"DATA",801.42,7,2,1,0)
48
"DATA",801.42,8,0)
SK_RES^SK^
"DATA",801.42,8,2,0)
^801.422P^1^1
"DATA",801.42,8,2,1,0)
67
"DATA",801.42,9,0)
SK_READ^SK
"DATA",801.42,9,2,0)
^801.422P^1^1
"DATA",801.42,9,2,1,0)
68
"DATA",801.42,10,0)
HF_LVL^HF
"DATA",801.42,10,2,0)
^801.422P^1^1
"DATA",801.42,10,2,1,0)
88
"DATA",801.42,11,0)
IMM_SER^IMM
"DATA",801.42,11,2,0)
^801.422P^1^1
"DATA",801.42,11,2,1,0)
43
"DATA",801.42,12,0)
IMM_RCTN^IMM
"DATA",801.42,12,2,0)
^801.422P^1^1
"DATA",801.42,12,2,1,0)
44
"DATA",801.42,13,0)
PED_LVL^PED
"DATA",801.42,13,2,0)
^801.422P^2^2
"DATA",801.42,13,2,1,0)
2
"DATA",801.42,13,2,2,0)
86
"DATA",801.42,14,0)
IMM_CNTR^IMM
"DATA",801.42,14,2,0)
^801.422P^2^2
"DATA",801.42,14,2,1,0)
42
"DATA",801.42,14,2,2,0)
87
"DATA",801.42,15,0)
CPT_PRIM^CPT
"DATA",801.42,15,2,0)
^801.422P^1^1
"DATA",801.42,15,2,1,0)
63
"DATA",801.42,16,0)
VST^VST
"DATA",801.42,16,1,0)
^^1^1^2991028^
"DATA",801.42,16,1,1,0)
This GUI Process results in a visit record passed to PCE.
"DATA",801.42,17,0)
CPT^CPT^ICPT(
"DATA",801.42,18,0)
POV^POV^ICD9(
"DATA",801.42,19,0)
XAM^XAM^AUTTEXAM(
"DATA",801.42,20,0)
IMM^IMM^AUTTIM(
"DATA",801.42,21,0)
PED^PED^AUTTEDT(
"DATA",801.42,22,0)
HF^^AUTTHF(
"DATA",801.42,22,1,0)
^^1^1^2991101^
"DATA",801.42,22,1,1,0)
This represents the Health Factor file entries.
"DATA",801.42,22,2,0)
^801.422P
"DATA",801.42,23,0)
VIT^^GMRD(120.51,
"DATA",801.42,23,1,0)
^^1^1^2991101^
"DATA",801.42,23,1,1,0)
This represents the Vital Sign GUI process.
"DATA",801.42,24,0)
Q^^ORD(101.41,
"DATA",801.42,24,1,0)
^^2^2^2991101^
"DATA",801.42,24,1,1,0)
This represents the process for placing an order defined in the Order
"DATA",801.42,24,1,2,0)
Dialog file.
"DATA",801.42,25,0)
T^^PXD(811.2,
"DATA",801.42,25,1,0)
^^1^1^2991101^
"DATA",801.42,25,1,1,0)
This represents the process for generic taxonomy processing.
"DATA",801.42,26,0)
MH^^YTT(601,
"DATA",801.42,26,1,0)
^^1^1^2991101^
"DATA",801.42,26,1,1,0)
This represents the process for taking mental health tests.
"DATA",801.42,27,0)
SK^^AUTTSK(
"DATA",801.42,27,1,0)
^^1^1^2991101^
"DATA",801.42,27,1,1,0)
This is the GUI process for skin test findings.
"DATA",801.45,4,0)
ED^21^^
"DATA",801.45,4,1,0)
^801.451P^3^3
"DATA",801.45,4,1,1,0)
1^^^^
"DATA",801.45,4,1,1,3)
Patient had
"DATA",801.45,4,1,1,4)
at this encounter.
"DATA",801.45,4,1,1,5,0)
^801.4515P^3^2
"DATA",801.45,4,1,1,5,2,0)
2
"DATA",801.45,4,1,1,5,3,0)
1^^^
"DATA",801.45,4,1,2,0)
2^^^^
"DATA",801.45,4,1,2,3)
Patient received
"DATA",801.45,4,1,2,4)
previously at another facility.
"DATA",801.45,4,1,2,5,0)
^801.4515P^4^3
"DATA",801.45,4,1,2,5,2,0)
40^1
"DATA",801.45,4,1,2,5,3,0)
1
"DATA",801.45,4,1,2,5,4,0)
41
"DATA",801.45,4,1,3,0)
4^^^^
"DATA",801.45,4,1,3,3)
Patient declined
"DATA",801.45,4,1,3,4)
at this encounter.
"DATA",801.45,4,1,3,5,0)
^801.4515P^2^2
"DATA",801.45,4,1,3,5,1,0)
86
"DATA",801.45,4,1,3,5,2,0)
1
"DATA",801.45,5,0)
EX^19^^
"DATA",801.45,5,1,0)
^801.451P^2^2
"DATA",801.45,5,1,1,0)
1^^^^
"DATA",801.45,5,1,1,3)
Patient had
"DATA",801.45,5,1,1,4)
exam at this encounter.
"DATA",801.45,5,1,1,5,0)
^801.4515P^3^2
"DATA",801.45,5,1,1,5,2,0)
48^1^^^Result of Exam:^^
"DATA",801.45,5,1,1,5,3,0)
1
"DATA",801.45,5,1,2,0)
2^^^^
"DATA",801.45,5,1,2,3)
Patient had
"DATA",801.45,5,1,2,4)
previously.
"DATA",801.45,5,1,2,5,0)
^801.4515P^5^4
"DATA",801.45,5,1,2,5,2,0)
48
"DATA",801.45,5,1,2,5,3,0)
40^1
"DATA",801.45,5,1,2,5,4,0)
41^
"DATA",801.45,5,1,2,5,5,0)
1
"DATA",801.45,6,0)
HF^22^^
"DATA",801.45,6,1,0)
^801.451P^4^4
"DATA",801.45,6,1,1,0)
5^^^^
"DATA",801.45,6,1,1,3)
Patient had
"DATA",801.45,6,1,1,4)
recorded.
"DATA",801.45,6,1,1,5,0)
^801.4515P^1^1
"DATA",801.45,6,1,1,5,1,0)
1
"DATA",801.45,6,1,2,0)
1^^^^
"DATA",801.45,6,1,2,3)
Patient had
"DATA",801.45,6,1,2,4)
recorded.
"DATA",801.45,6,1,2,5,0)
^801.4515P^1^1
"DATA",801.45,6,1,2,5,1,0)
1
"DATA",801.45,6,1,3,0)
2^^^^
"DATA",801.45,6,1,3,3)
Patient had
"DATA",801.45,6,1,3,4)
recorded.
"DATA",801.45,6,1,3,5,0)
^801.4515P^4^3
"DATA",801.45,6,1,3,5,2,0)
40^1
"DATA",801.45,6,1,3,5,3,0)
41
"DATA",801.45,6,1,3,5,4,0)
1
"DATA",801.45,6,1,4,0)
4^^^^
"DATA",801.45,6,1,4,3)
Patient had
"DATA",801.45,6,1,4,4)
recorded.
"DATA",801.45,6,1,4,5,0)
^801.4515P^1^1
"DATA",801.45,6,1,4,5,1,0)
1^^1
"DATA",801.45,7,0)
IM^20^^
"DATA",801.45,7,1,0)
^801.451P^3^3
"DATA",801.45,7,1,1,0)
1^^^^
"DATA",801.45,7,1,1,3)
Patient received
"DATA",801.45,7,1,1,4)
at this encounter.
"DATA",801.45,7,1,1,5,0)
^801.4515P^5^4
"DATA",801.45,7,1,1,5,2,0)
43
"DATA",801.45,7,1,1,5,3,0)
42
"DATA",801.45,7,1,1,5,4,0)
44
"DATA",801.45,7,1,1,5,5,0)
1
"DATA",801.45,7,1,2,0)
2^^^^
"DATA",801.45,7,1,2,3)
Patient indicated
"DATA",801.45,7,1,2,4)
was received at another facility.
"DATA",801.45,7,1,2,5,0)
^801.4515P^5^4
"DATA",801.45,7,1,2,5,2,0)
42
"DATA",801.45,7,1,2,5,3,0)
40^1
"DATA",801.45,7,1,2,5,4,0)
41
"DATA",801.45,7,1,2,5,5,0)
1
"DATA",801.45,7,1,3,0)
12^^^^
"DATA",801.45,7,1,3,3)
Patient indicates a history of contraindication
"DATA",801.45,7,1,3,4)
.
"DATA",801.45,7,1,3,5,0)
^801.4515P^7^6
"DATA",801.45,7,1,3,5,2,0)
43
"DATA",801.45,7,1,3,5,3,0)
87
"DATA",801.45,7,1,3,5,4,0)
44
"DATA",801.45,7,1,3,5,5,0)
40
"DATA",801.45,7,1,3,5,6,0)
41
"DATA",801.45,7,1,3,5,7,0)
1
"DATA",801.45,13,0)
ST^27^^
"DATA",801.45,13,1,0)
^801.451P^2^2
"DATA",801.45,13,1,1,0)
1^^^^
"DATA",801.45,13,1,1,3)
Patient had
"DATA",801.45,13,1,1,4)
skin test at this encounter.
"DATA",801.45,13,1,1,5,0)
^801.4515P^4^3
"DATA",801.45,13,1,1,5,2,0)
67
"DATA",801.45,13,1,1,5,3,0)
68
"DATA",801.45,13,1,1,5,4,0)
1
"DATA",801.45,13,1,2,0)
2^^^^
"DATA",801.45,13,1,2,3)
Patient had
"DATA",801.45,13,1,2,4)
skin test at another facility.
"DATA",801.45,13,1,2,5,0)
^801.4515P^6^5
"DATA",801.45,13,1,2,5,2,0)
67
"DATA",801.45,13,1,2,5,3,0)
68
"DATA",801.45,13,1,2,5,4,0)
40^1
"DATA",801.45,13,1,2,5,5,0)
41
"DATA",801.45,13,1,2,5,6,0)
1
"DATA",801.45,15,0)
VM^23^^
"DATA",801.45,15,1,0)
^801.451P^1^1
"DATA",801.45,15,1,1,0)
1^^^^
"DATA",801.45,15,1,1,3)
Patient
"DATA",801.45,15,1,1,4)
recorded.
"DATA",801.45,16,0)
OI^24^^
"DATA",801.45,16,1,0)
^801.451P^1^1
"DATA",801.45,16,1,1,0)
3^^^^
"DATA",801.45,16,1,1,3)
Order for
"DATA",801.45,16,1,1,4)
placed.
"DATA",801.45,17,0)
POV^18^
"DATA",801.45,17,1,0)
^801.451P^2^2
"DATA",801.45,17,1,1,0)
1^^^^1
"DATA",801.45,17,1,1,3)
Diagnosis recorded at encounter
"DATA",801.45,17,1,1,4)
.
"DATA",801.45,17,1,1,5,0)
^801.4515P^4^3
"DATA",801.45,17,1,1,5,2,0)
62
"DATA",801.45,17,1,1,5,3,0)
1
"DATA",801.45,17,1,1,5,4,0)
89
"DATA",801.45,17,1,2,0)
2^^^^1
"DATA",801.45,17,1,2,3)
History of Diagnosis
"DATA",801.45,17,1,2,4)
.
"DATA",801.45,17,1,2,5,0)
^801.4515P^6^5
"DATA",801.45,17,1,2,5,2,0)
40^1
"DATA",801.45,17,1,2,5,3,0)
41
"DATA",801.45,17,1,2,5,4,0)
1
"DATA",801.45,17,1,2,5,5,0)
62
"DATA",801.45,17,1,2,5,6,0)
89
"DATA",801.45,18,0)
CPT^17^
"DATA",801.45,18,1,0)
^801.451P^2^2
"DATA",801.45,18,1,1,0)
1^1^^^
"DATA",801.45,18,1,1,4)
done.
"DATA",801.45,18,1,1,5,0)
^801.4515P^2^2
"DATA",801.45,18,1,1,5,1,0)
64
"DATA",801.45,18,1,1,5,2,0)
1
"DATA",801.45,18,1,2,0)
2^^^^
"DATA",801.45,18,1,2,4)
previously done.
"DATA",801.45,18,1,2,5,0)
^801.4515P^5^4
"DATA",801.45,18,1,2,5,2,0)
64
"DATA",801.45,18,1,2,5,3,0)
40^1
"DATA",801.45,18,1,2,5,4,0)
41
"DATA",801.45,18,1,2,5,5,0)
1^
"DATA",801.9,1,0)
DONE AT ENCOUNTER^DONE^DONE^^^1^^
"DATA",801.9,1,1,0)
^^2^2^3000222^
"DATA",801.9,1,1,1,0)
Nationally distributed status to denote done at encounter. Used by the
"DATA",801.9,1,1,2,0)
reminder evaluation process and not to be deleted.
"DATA",801.9,1,10,0)
^801.9001P^^0
"DATA",801.9,2,0)
DONE ELSEWHERE (HISTORICAL)^DONE ELSEWHERE^DONE ELSEWHERE^^^1^^
"DATA",801.9,2,1,0)
^^2^2^3000222^
"DATA",801.9,2,1,1,0)
Nationally distributed status to denote done elsewhere. Used by the
"DATA",801.9,2,1,2,0)
reminder evaluation process and not to be deleted.
"DATA",801.9,3,0)
ORDERED^ORDERED^ORDERED^^^1^^
"DATA",801.9,3,1,0)
^^2^2^3000222^
"DATA",801.9,3,1,1,0)
Nationally distributed status to denote ordered. Used by the reminder
"DATA",801.9,3,1,2,0)
evaluation process and not to be deleted.
"DATA",801.9,3,10,0)
^801.9001P^^0
"DATA",801.9,4,0)
PATIENT REFUSED^REFUSED^REFUSED^^^1^^
"DATA",801.9,4,1,0)
^^2^2^3000222^
"DATA",801.9,4,1,1,0)
Nationally distributed status to denote patient refused. Used by the
"DATA",801.9,4,1,2,0)
reminder evaluation process and not to be deleted.
"DATA",801.9,4,10,0)
^801.9001P^^0
"DATA",801.9,5,0)
OTHER^OTHER^OTHER^^^1^^
"DATA",801.9,5,1,0)
^801.901^2^2^3000531^^^^
"DATA",801.9,5,1,1,0)
Nationally distributed status to denote reminder does not apply.
"DATA",801.9,5,1,2,0)
Used by the reminder evaluation process and not to be deleted.
"DATA",801.9,5,10,0)
^801.9001P^^0
"DATA",801.9,12,0)
CONTRAINDICATED^CONTRA^CONTRA^^^1
"DATA",801.9,12,1,0)
^^2^2^2990929^
"DATA",801.9,12,1,1,0)
Nationally distributed status to denote contraindication. Used by the
"DATA",801.9,12,1,2,0)
reminder evaluation process and not to be deleted.
"DATA",801.9,12,10,0)
^801.9001P^^0
"DATA",811.2,1,0)
VA-HYPERTENSION^Hypertension codes
"DATA",811.2,1,21,0)
^811.22101^1^1
"DATA",811.2,1,21,1,0)
401.0^405.99^80
"DATA",811.2,1,80,0)
^811.22102^1^1
"DATA",811.2,1,80,1,0)
401.0^405.99
"DATA",811.2,1,"SDX",0)
^811.23102PI^39^39
"DATA",811.2,1,"SDX",1,0)
9032
"DATA",811.2,1,"SDX",2,0)
2476
"DATA",811.2,1,"SDX",3,0)
2477
"DATA",811.2,1,"SDX",4,0)
9033
"DATA",811.2,1,"SDX",5,0)
2478
"DATA",811.2,1,"SDX",6,0)
9034
"DATA",811.2,1,"SDX",7,0)
2479
"DATA",811.2,1,"SDX",8,0)
9035
"DATA",811.2,1,"SDX",9,0)
2480
"DATA",811.2,1,"SDX",10,0)
9036
"DATA",811.2,1,"SDX",11,0)
12429
"DATA",811.2,1,"SDX",12,0)
12430
"DATA",811.2,1,"SDX",13,0)
2481
"DATA",811.2,1,"SDX",14,0)
12431
"DATA",811.2,1,"SDX",15,0)
12432
"DATA",811.2,1,"SDX",16,0)
2482
"DATA",811.2,1,"SDX",17,0)
12433
"DATA",811.2,1,"SDX",18,0)
12434
"DATA",811.2,1,"SDX",19,0)
9037
"DATA",811.2,1,"SDX",20,0)
12435
"DATA",811.2,1,"SDX",21,0)
12436
"DATA",811.2,1,"SDX",22,0)
12437
"DATA",811.2,1,"SDX",23,0)
12438
"DATA",811.2,1,"SDX",24,0)
2483
"DATA",811.2,1,"SDX",25,0)
12439
"DATA",811.2,1,"SDX",26,0)
12440
"DATA",811.2,1,"SDX",27,0)
12441
"DATA",811.2,1,"SDX",28,0)
12442
"DATA",811.2,1,"SDX",29,0)
2484
"DATA",811.2,1,"SDX",30,0)
12443
"DATA",811.2,1,"SDX",31,0)
12444
"DATA",811.2,1,"SDX",32,0)
12445
"DATA",811.2,1,"SDX",33,0)
12446
"DATA",811.2,1,"SDX",34,0)
2485
"DATA",811.2,1,"SDX",35,0)
2486
"DATA",811.2,1,"SDX",36,0)
2487
"DATA",811.2,1,"SDX",37,0)
2488
"DATA",811.2,1,"SDX",38,0)
2489
"DATA",811.2,1,"SDX",39,0)
2490
"DATA",811.2,2,0)
VA-HEPATITIS C INFECTION^HEP C CODES
"DATA",811.2,2,21,0)
^811.22101^1^1
"DATA",811.2,2,21,1,0)
V02.62
"DATA",811.2,2,80,0)
^811.22102^5^5
"DATA",811.2,2,80,1,0)
V02.62^
"DATA",811.2,2,80,2,0)
070.41
"DATA",811.2,2,80,3,0)
070.51
"DATA",811.2,2,80,4,0)
070.44
"DATA",811.2,2,80,5,0)
070.54
"DATA",811.2,4,0)
VA-COLORECTAL CA^Colorectal cancer codes^Colorectal cancer codes
"DATA",811.2,4,21,0)
^811.22101^3^3
"DATA",811.2,4,21,1,0)
154.0^154.8^80
"DATA",811.2,4,21,2,0)
197.5^197.5^80
"DATA",811.2,4,21,3,0)
230.3^230.4^80
"DATA",811.2,4,80,0)
^811.22102^3^3
"DATA",811.2,4,80,1,0)
154.0^154.8
"DATA",811.2,4,80,2,0)
197.5^197.5
"DATA",811.2,4,80,3,0)
230.3^230.4
"DATA",811.2,4,"SDX",0)
^811.23102PI^8^8
"DATA",811.2,4,"SDX",1,0)
8609
"DATA",811.2,4,"SDX",2,0)
251
"DATA",811.2,4,"SDX",3,0)
252
"DATA",811.2,4,"SDX",4,0)
253
"DATA",811.2,4,"SDX",5,0)
254
"DATA",811.2,4,"SDX",6,0)
433
"DATA",811.2,4,"SDX",7,0)
751
"DATA",811.2,4,"SDX",8,0)
752
"DATA",811.2,5,0)
VA-CERVICAL CA/ABNORMAL PAP^Cervical ca/abnormal pap codes
"DATA",811.2,5,21,0)
^811.22101^4^4
"DATA",811.2,5,21,1,0)
180^180.9^80
"DATA",811.2,5,21,2,0)
198.82^198.82^80
"DATA",811.2,5,21,3,0)
233.1^233.3^80
"DATA",811.2,5,21,4,0)
795.0^795.0^80
"DATA",811.2,5,80,0)
^811.22102^4^4
"DATA",811.2,5,80,1,0)
180.0^180.9
"DATA",811.2,5,80,2,0)
198.82^198.82
"DATA",811.2,5,80,3,0)
233.1^233.3
"DATA",811.2,5,80,4,0)
795.0^795.0
"DATA",811.2,5,"SDX",0)
^811.23102PI^9^9
"DATA",811.2,5,"SDX",1,0)
8628
"DATA",811.2,5,"SDX",2,0)
344
"DATA",811.2,5,"SDX",3,0)
345
"DATA",811.2,5,"SDX",4,0)
346
"DATA",811.2,5,"SDX",5,0)
445
"DATA",811.2,5,"SDX",6,0)
771
"DATA",811.2,5,"SDX",7,0)
772
"DATA",811.2,5,"SDX",8,0)
773
"DATA",811.2,5,"SDX",9,0)
9796
"DATA",811.2,6,0)
VA-HYSTERECTOMY^Hysterectomy codes
"DATA",811.2,6,21,0)
^811.22101^1^1
"DATA",811.2,6,21,1,0)
68.3^68.9^80.1
"DATA",811.2,6,80.1,0)
^811.22103^1^1
"DATA",811.2,6,80.1,1,0)
68.3^68.9
"DATA",811.2,8,0)
VA-PROSTATE CA^Prostate cancer codes
"DATA",811.2,8,21,0)
^811.22101^3^3
"DATA",811.2,8,21,1,0)
185^185^80
"DATA",811.2,8,21,2,0)
198.82^198.82^80
"DATA",811.2,8,21,3,0)
233.4^233.4^80
"DATA",811.2,8,80,0)
^811.22102^3^3
"DATA",811.2,8,80,1,0)
185.^185.
"DATA",811.2,8,80,2,0)
198.82^198.82
"DATA",811.2,8,80,3,0)
233.4^233.4
"DATA",811.2,8,"SDX",0)
^811.23102PI^3^3
"DATA",811.2,8,"SDX",1,0)
8633
"DATA",811.2,8,"SDX",2,0)
445
"DATA",811.2,8,"SDX",3,0)
774
"DATA",811.2,9,0)
VA-HIGH RISK FOR FLU/PNEUMONIA^Flu/pneumonia risk codes
"DATA",811.2,9,21,0)
^811.22101^17^14
"DATA",811.2,9,21,1,0)
493.0^493.91^80
"DATA",811.2,9,21,2,0)
496^496^80
"DATA",811.2,9,21,3,0)
250.00^250.9^80
"DATA",811.2,9,21,4,0)
429.2^429.2^80
"DATA",811.2,9,21,5,0)
428.0^428.9^80
"DATA",811.2,9,21,6,0)
491.0^491.9^80
"DATA",811.2,9,21,7,0)
044.9^044.9^80
"DATA",811.2,9,21,8,0)
042.0^043.9^80
"DATA",811.2,9,21,9,0)
V42.0^V42.0^80
"DATA",811.2,9,21,10,0)
585^585^80
"DATA",811.2,9,21,11,0)
V58.1^V58.1^80
"DATA",811.2,9,21,12,0)
V66.2^V66.2^80
"DATA",811.2,9,21,14,0)
99.52^99.52^80.1
"DATA",811.2,9,21,17,0)
V67.2^V67.2^80
"DATA",811.2,9,80,0)
^811.22102^13^13
"DATA",811.2,9,80,1,0)
493.00^493.91
"DATA",811.2,9,80,2,0)
496.^496.
"DATA",811.2,9,80,3,0)
250.00^250.90
"DATA",811.2,9,80,4,0)
429.2^429.2
"DATA",811.2,9,80,5,0)
428.0^428.9
"DATA",811.2,9,80,6,0)
491.0^491.9
"DATA",811.2,9,80,7,0)
044.9^044.9
"DATA",811.2,9,80,8,0)
042.0^043.9
"DATA",811.2,9,80,9,0)
V42.0^V42.0
"DATA",811.2,9,80,10,0)
585.^585.
"DATA",811.2,9,80,11,0)
V58.1^V58.1
"DATA",811.2,9,80,12,0)
V66.2^V66.2
"DATA",811.2,9,80,13,0)
V67.2^V67.2
"DATA",811.2,9,"SDX",0)
^811.23102PI^72^72
"DATA",811.2,9,"SDX",1,0)
12316
"DATA",811.2,9,"SDX",2,0)
12317
"DATA",811.2,9,"SDX",3,0)
12318
"DATA",811.2,9,"SDX",4,0)
12319
"DATA",811.2,9,"SDX",5,0)
12320
"DATA",811.2,9,"SDX",6,0)
12321
"DATA",811.2,9,"SDX",7,0)
12322
"DATA",811.2,9,"SDX",8,0)
12323
"DATA",811.2,9,"SDX",9,0)
12324
"DATA",811.2,9,"SDX",10,0)
12326
"DATA",811.2,9,"SDX",11,0)
8718
"DATA",811.2,9,"SDX",12,0)
851
"DATA",811.2,9,"SDX",13,0)
12827
"DATA",811.2,9,"SDX",14,0)
12828
"DATA",811.2,9,"SDX",15,0)
8719
"DATA",811.2,9,"SDX",16,0)
852
"DATA",811.2,9,"SDX",17,0)
12829
"DATA",811.2,9,"SDX",18,0)
12830
"DATA",811.2,9,"SDX",19,0)
8720
"DATA",811.2,9,"SDX",20,0)
853
"DATA",811.2,9,"SDX",21,0)
12831
"DATA",811.2,9,"SDX",22,0)
12832
"DATA",811.2,9,"SDX",23,0)
8721
"DATA",811.2,9,"SDX",24,0)
854
"DATA",811.2,9,"SDX",25,0)
12833
"DATA",811.2,9,"SDX",26,0)
12834
"DATA",811.2,9,"SDX",27,0)
8722
"DATA",811.2,9,"SDX",28,0)
855
"DATA",811.2,9,"SDX",29,0)
12835
"DATA",811.2,9,"SDX",30,0)
12836
"DATA",811.2,9,"SDX",31,0)
8723
"DATA",811.2,9,"SDX",32,0)
856
"DATA",811.2,9,"SDX",33,0)
12837
"DATA",811.2,9,"SDX",34,0)
12838
"DATA",811.2,9,"SDX",35,0)
8724
"DATA",811.2,9,"SDX",36,0)
857
"DATA",811.2,9,"SDX",37,0)
12839
"DATA",811.2,9,"SDX",38,0)
12840
"DATA",811.2,9,"SDX",39,0)
8725
"DATA",811.2,9,"SDX",40,0)
858
"DATA",811.2,9,"SDX",41,0)
12841
"DATA",811.2,9,"SDX",42,0)
12842
"DATA",811.2,9,"SDX",43,0)
8726
"DATA",811.2,9,"SDX",44,0)
859
"DATA",811.2,9,"SDX",45,0)
12843
"DATA",811.2,9,"SDX",46,0)
12844
"DATA",811.2,9,"SDX",47,0)
8727
"DATA",811.2,9,"SDX",48,0)
9061
"DATA",811.2,9,"SDX",49,0)
2567
"DATA",811.2,9,"SDX",50,0)
2568
"DATA",811.2,9,"SDX",51,0)
2570
"DATA",811.2,9,"SDX",52,0)
9121
"DATA",811.2,9,"SDX",53,0)
2755
"DATA",811.2,9,"SDX",54,0)
2756
"DATA",811.2,9,"SDX",55,0)
12633
"DATA",811.2,9,"SDX",56,0)
12634
"DATA",811.2,9,"SDX",57,0)
2757
"DATA",811.2,9,"SDX",58,0)
2758
"DATA",811.2,9,"SDX",59,0)
9123
"DATA",811.2,9,"SDX",60,0)
2760
"DATA",811.2,9,"SDX",61,0)
9124
"DATA",811.2,9,"SDX",62,0)
2761
"DATA",811.2,9,"SDX",63,0)
12481
"DATA",811.2,9,"SDX",64,0)
12482
"DATA",811.2,9,"SDX",65,0)
9125
"DATA",811.2,9,"SDX",66,0)
2762
"DATA",811.2,9,"SDX",67,0)
9128
"DATA",811.2,9,"SDX",68,0)
9243
"DATA",811.2,9,"SDX",69,0)
11514
"DATA",811.2,9,"SDX",70,0)
11629
"DATA",811.2,9,"SDX",71,0)
11696
"DATA",811.2,9,"SDX",72,0)
11704
"DATA",811.2,10,0)
VA-TB/POSITIVE PPD^Positive PPD codes
"DATA",811.2,10,21,0)
^811.22101^2^2
"DATA",811.2,10,21,1,0)
010.0^018.9^80
"DATA",811.2,10,21,2,0)
795.5^795.5^80
"DATA",811.2,10,80,0)
^811.22102^2^2
"DATA",811.2,10,80,1,0)
010.00^018.90
"DATA",811.2,10,80,2,0)
795.5^795.5
"DATA",811.2,10,"SDX",0)
^811.23102IP^415^415
"DATA",811.2,10,"SDX",1,0)
7682
"DATA",811.2,10,"SDX",2,0)
7683
"DATA",811.2,10,"SDX",3,0)
7684
"DATA",811.2,10,"SDX",4,0)
7685
"DATA",811.2,10,"SDX",5,0)
7686
"DATA",811.2,10,"SDX",6,0)
7687
"DATA",811.2,10,"SDX",7,0)
7688
"DATA",811.2,10,"SDX",8,0)
7689
"DATA",811.2,10,"SDX",9,0)
7690
"DATA",811.2,10,"SDX",10,0)
7691
"DATA",811.2,10,"SDX",11,0)
7692
"DATA",811.2,10,"SDX",12,0)
7693
"DATA",811.2,10,"SDX",13,0)
7694
"DATA",811.2,10,"SDX",14,0)
7695
"DATA",811.2,10,"SDX",15,0)
7696
"DATA",811.2,10,"SDX",16,0)
7697
"DATA",811.2,10,"SDX",17,0)
7698
"DATA",811.2,10,"SDX",18,0)
7699
"DATA",811.2,10,"SDX",19,0)
7700
"DATA",811.2,10,"SDX",20,0)
7701
"DATA",811.2,10,"SDX",21,0)
7702
"DATA",811.2,10,"SDX",22,0)
7703
"DATA",811.2,10,"SDX",23,0)
7704
"DATA",811.2,10,"SDX",24,0)
7705
"DATA",811.2,10,"SDX",25,0)
7706
"DATA",811.2,10,"SDX",26,0)
7707
"DATA",811.2,10,"SDX",27,0)
7708
"DATA",811.2,10,"SDX",28,0)
7709
"DATA",811.2,10,"SDX",29,0)
7710
"DATA",811.2,10,"SDX",30,0)
7711
"DATA",811.2,10,"SDX",31,0)
7712
"DATA",811.2,10,"SDX",32,0)
7713
"DATA",811.2,10,"SDX",33,0)
7714
"DATA",811.2,10,"SDX",34,0)
7715
"DATA",811.2,10,"SDX",35,0)
7716
"DATA",811.2,10,"SDX",36,0)
7717
"DATA",811.2,10,"SDX",37,0)
7718
"DATA",811.2,10,"SDX",38,0)
7719
"DATA",811.2,10,"SDX",39,0)
7720
"DATA",811.2,10,"SDX",40,0)
7721
"DATA",811.2,10,"SDX",41,0)
7722
"DATA",811.2,10,"SDX",42,0)
7723
"DATA",811.2,10,"SDX",43,0)
7724
"DATA",811.2,10,"SDX",44,0)
7725
"DATA",811.2,10,"SDX",45,0)
7726
"DATA",811.2,10,"SDX",46,0)
7727
"DATA",811.2,10,"SDX",47,0)
7728
"DATA",811.2,10,"SDX",48,0)
7729
"DATA",811.2,10,"SDX",49,0)
7730
"DATA",811.2,10,"SDX",50,0)
7731
"DATA",811.2,10,"SDX",51,0)
7732
"DATA",811.2,10,"SDX",52,0)
7733
"DATA",811.2,10,"SDX",53,0)
7734
"DATA",811.2,10,"SDX",54,0)
7735
"DATA",811.2,10,"SDX",55,0)
7736
"DATA",811.2,10,"SDX",56,0)
7737
"DATA",811.2,10,"SDX",57,0)
7738
"DATA",811.2,10,"SDX",58,0)
7739
"DATA",811.2,10,"SDX",59,0)
7740
"DATA",811.2,10,"SDX",60,0)
7741
"DATA",811.2,10,"SDX",61,0)
7742
"DATA",811.2,10,"SDX",62,0)
7743
"DATA",811.2,10,"SDX",63,0)
7744
"DATA",811.2,10,"SDX",64,0)
7745
"DATA",811.2,10,"SDX",65,0)
7746
"DATA",811.2,10,"SDX",66,0)
7747
"DATA",811.2,10,"SDX",67,0)
7748
"DATA",811.2,10,"SDX",68,0)
7749
"DATA",811.2,10,"SDX",69,0)
7750
"DATA",811.2,10,"SDX",70,0)
7751
"DATA",811.2,10,"SDX",71,0)
7752
"DATA",811.2,10,"SDX",72,0)
7753
"DATA",811.2,10,"SDX",73,0)
7754
"DATA",811.2,10,"SDX",74,0)
7755
"DATA",811.2,10,"SDX",75,0)
7756
"DATA",811.2,10,"SDX",76,0)
7757
"DATA",811.2,10,"SDX",77,0)
7758
"DATA",811.2,10,"SDX",78,0)
7759
"DATA",811.2,10,"SDX",79,0)
7760
"DATA",811.2,10,"SDX",80,0)
7761
"DATA",811.2,10,"SDX",81,0)
7762
"DATA",811.2,10,"SDX",82,0)
7763
"DATA",811.2,10,"SDX",83,0)
7764
"DATA",811.2,10,"SDX",84,0)
7765
"DATA",811.2,10,"SDX",85,0)
7766
"DATA",811.2,10,"SDX",86,0)
7767
"DATA",811.2,10,"SDX",87,0)
7768
"DATA",811.2,10,"SDX",88,0)
7769
"DATA",811.2,10,"SDX",89,0)
7770
"DATA",811.2,10,"SDX",90,0)
7771
"DATA",811.2,10,"SDX",91,0)
7772
"DATA",811.2,10,"SDX",92,0)
7773
"DATA",811.2,10,"SDX",93,0)
7774
"DATA",811.2,10,"SDX",94,0)
7775
"DATA",811.2,10,"SDX",95,0)
7776
"DATA",811.2,10,"SDX",96,0)
7777
"DATA",811.2,10,"SDX",97,0)
7778
"DATA",811.2,10,"SDX",98,0)
7779
"DATA",811.2,10,"SDX",99,0)
7780
"DATA",811.2,10,"SDX",100,0)
7781
"DATA",811.2,10,"SDX",101,0)
7782
"DATA",811.2,10,"SDX",102,0)
7783
"DATA",811.2,10,"SDX",103,0)
7784
"DATA",811.2,10,"SDX",104,0)
7785
"DATA",811.2,10,"SDX",105,0)
7786
"DATA",811.2,10,"SDX",106,0)
7787
"DATA",811.2,10,"SDX",107,0)
7788
"DATA",811.2,10,"SDX",108,0)
7789
"DATA",811.2,10,"SDX",109,0)
7790
"DATA",811.2,10,"SDX",110,0)
7791
"DATA",811.2,10,"SDX",111,0)
7792
"DATA",811.2,10,"SDX",112,0)
7793
"DATA",811.2,10,"SDX",113,0)
7794
"DATA",811.2,10,"SDX",114,0)
7795
"DATA",811.2,10,"SDX",115,0)
7796
"DATA",811.2,10,"SDX",116,0)
7797
"DATA",811.2,10,"SDX",117,0)
7798
"DATA",811.2,10,"SDX",118,0)
7799
"DATA",811.2,10,"SDX",119,0)
7800
"DATA",811.2,10,"SDX",120,0)
7801
"DATA",811.2,10,"SDX",121,0)
7802
"DATA",811.2,10,"SDX",122,0)
7803
"DATA",811.2,10,"SDX",123,0)
7804
"DATA",811.2,10,"SDX",124,0)
7805
"DATA",811.2,10,"SDX",125,0)
7806
"DATA",811.2,10,"SDX",126,0)
7807
"DATA",811.2,10,"SDX",127,0)
7808
"DATA",811.2,10,"SDX",128,0)
7809
"DATA",811.2,10,"SDX",129,0)
7810
"DATA",811.2,10,"SDX",130,0)
7811
"DATA",811.2,10,"SDX",131,0)
7812
"DATA",811.2,10,"SDX",132,0)
7813
"DATA",811.2,10,"SDX",133,0)
7814
"DATA",811.2,10,"SDX",134,0)
7815
"DATA",811.2,10,"SDX",135,0)
7816
"DATA",811.2,10,"SDX",136,0)
7817
"DATA",811.2,10,"SDX",137,0)
7818
"DATA",811.2,10,"SDX",138,0)
7819
"DATA",811.2,10,"SDX",139,0)
7820
"DATA",811.2,10,"SDX",140,0)
7821
"DATA",811.2,10,"SDX",141,0)
7822
"DATA",811.2,10,"SDX",142,0)
7823
"DATA",811.2,10,"SDX",143,0)
7824
"DATA",811.2,10,"SDX",144,0)
7825
"DATA",811.2,10,"SDX",145,0)
7826
"DATA",811.2,10,"SDX",146,0)
7827
"DATA",811.2,10,"SDX",147,0)
7828
"DATA",811.2,10,"SDX",148,0)
7829
"DATA",811.2,10,"SDX",149,0)
7830
"DATA",811.2,10,"SDX",150,0)
7831
"DATA",811.2,10,"SDX",151,0)
7832
"DATA",811.2,10,"SDX",152,0)
7833
"DATA",811.2,10,"SDX",153,0)
7834
"DATA",811.2,10,"SDX",154,0)
7835
"DATA",811.2,10,"SDX",155,0)
7836
"DATA",811.2,10,"SDX",156,0)
7837
"DATA",811.2,10,"SDX",157,0)
7838
"DATA",811.2,10,"SDX",158,0)
7839
"DATA",811.2,10,"SDX",159,0)
7840
"DATA",811.2,10,"SDX",160,0)
7841
"DATA",811.2,10,"SDX",161,0)
7842
"DATA",811.2,10,"SDX",162,0)
7843
"DATA",811.2,10,"SDX",163,0)
7844
"DATA",811.2,10,"SDX",164,0)
7845
"DATA",811.2,10,"SDX",165,0)
7846
"DATA",811.2,10,"SDX",166,0)
7847
"DATA",811.2,10,"SDX",167,0)
7848
"DATA",811.2,10,"SDX",168,0)
7849
"DATA",811.2,10,"SDX",169,0)
7850
"DATA",811.2,10,"SDX",170,0)
7851
"DATA",811.2,10,"SDX",171,0)
7852
"DATA",811.2,10,"SDX",172,0)
7853
"DATA",811.2,10,"SDX",173,0)
7854
"DATA",811.2,10,"SDX",174,0)
7855
"DATA",811.2,10,"SDX",175,0)
7856
"DATA",811.2,10,"SDX",176,0)
7857
"DATA",811.2,10,"SDX",177,0)
7858
"DATA",811.2,10,"SDX",178,0)
7859
"DATA",811.2,10,"SDX",179,0)
7860
"DATA",811.2,10,"SDX",180,0)
7861
"DATA",811.2,10,"SDX",181,0)
7862
"DATA",811.2,10,"SDX",182,0)
7863
"DATA",811.2,10,"SDX",183,0)
7864
"DATA",811.2,10,"SDX",184,0)
7865
"DATA",811.2,10,"SDX",185,0)
7866
"DATA",811.2,10,"SDX",186,0)
7867
"DATA",811.2,10,"SDX",187,0)
7868
"DATA",811.2,10,"SDX",188,0)
7869
"DATA",811.2,10,"SDX",189,0)
7870
"DATA",811.2,10,"SDX",190,0)
7871
"DATA",811.2,10,"SDX",191,0)
7872
"DATA",811.2,10,"SDX",192,0)
7873
"DATA",811.2,10,"SDX",193,0)
7874
"DATA",811.2,10,"SDX",194,0)
7875
"DATA",811.2,10,"SDX",195,0)
7876
"DATA",811.2,10,"SDX",196,0)
7877
"DATA",811.2,10,"SDX",197,0)
7878
"DATA",811.2,10,"SDX",198,0)
7879
"DATA",811.2,10,"SDX",199,0)
7880
"DATA",811.2,10,"SDX",200,0)
7881
"DATA",811.2,10,"SDX",201,0)
7882
"DATA",811.2,10,"SDX",202,0)
7883
"DATA",811.2,10,"SDX",203,0)
7884
"DATA",811.2,10,"SDX",204,0)
7885
"DATA",811.2,10,"SDX",205,0)
7886
"DATA",811.2,10,"SDX",206,0)
7887
"DATA",811.2,10,"SDX",207,0)
7888
"DATA",811.2,10,"SDX",208,0)
7889
"DATA",811.2,10,"SDX",209,0)
7890
"DATA",811.2,10,"SDX",210,0)
7891
"DATA",811.2,10,"SDX",211,0)
7892
"DATA",811.2,10,"SDX",212,0)
7893
"DATA",811.2,10,"SDX",213,0)
7894
"DATA",811.2,10,"SDX",214,0)
7895
"DATA",811.2,10,"SDX",215,0)
7896
"DATA",811.2,10,"SDX",216,0)
7897
"DATA",811.2,10,"SDX",217,0)
7898
"DATA",811.2,10,"SDX",218,0)
7899
"DATA",811.2,10,"SDX",219,0)
7900
"DATA",811.2,10,"SDX",220,0)
7901
"DATA",811.2,10,"SDX",221,0)
7902
"DATA",811.2,10,"SDX",222,0)
7903
"DATA",811.2,10,"SDX",223,0)
7904
"DATA",811.2,10,"SDX",224,0)
7905
"DATA",811.2,10,"SDX",225,0)
7906
"DATA",811.2,10,"SDX",226,0)
7907
"DATA",811.2,10,"SDX",227,0)
7908
"DATA",811.2,10,"SDX",228,0)
7909
"DATA",811.2,10,"SDX",229,0)
7910
"DATA",811.2,10,"SDX",230,0)
7911
"DATA",811.2,10,"SDX",231,0)
7912
"DATA",811.2,10,"SDX",232,0)
7913
"DATA",811.2,10,"SDX",233,0)
7914
"DATA",811.2,10,"SDX",234,0)
7915
"DATA",811.2,10,"SDX",235,0)
7916
"DATA",811.2,10,"SDX",236,0)
7917
"DATA",811.2,10,"SDX",237,0)
7918
"DATA",811.2,10,"SDX",238,0)
7919
"DATA",811.2,10,"SDX",239,0)
7920
"DATA",811.2,10,"SDX",240,0)
7921
"DATA",811.2,10,"SDX",241,0)
7922
"DATA",811.2,10,"SDX",242,0)
7923
"DATA",811.2,10,"SDX",243,0)
7924
"DATA",811.2,10,"SDX",244,0)
7925
"DATA",811.2,10,"SDX",245,0)
7926
"DATA",811.2,10,"SDX",246,0)
7927
"DATA",811.2,10,"SDX",247,0)
7928
"DATA",811.2,10,"SDX",248,0)
7929
"DATA",811.2,10,"SDX",249,0)
7930
"DATA",811.2,10,"SDX",250,0)
7931
"DATA",811.2,10,"SDX",251,0)
7932
"DATA",811.2,10,"SDX",252,0)
7933
"DATA",811.2,10,"SDX",253,0)
7934
"DATA",811.2,10,"SDX",254,0)
7935
"DATA",811.2,10,"SDX",255,0)
7936
"DATA",811.2,10,"SDX",256,0)
7937
"DATA",811.2,10,"SDX",257,0)
7938
"DATA",811.2,10,"SDX",258,0)
7939
"DATA",811.2,10,"SDX",259,0)
7940
"DATA",811.2,10,"SDX",260,0)
7941
"DATA",811.2,10,"SDX",261,0)
7942
"DATA",811.2,10,"SDX",262,0)
7943
"DATA",811.2,10,"SDX",263,0)
7944
"DATA",811.2,10,"SDX",264,0)
7945
"DATA",811.2,10,"SDX",265,0)
7946
"DATA",811.2,10,"SDX",266,0)
7947
"DATA",811.2,10,"SDX",267,0)
7948
"DATA",811.2,10,"SDX",268,0)
7949
"DATA",811.2,10,"SDX",269,0)
7950
"DATA",811.2,10,"SDX",270,0)
7951
"DATA",811.2,10,"SDX",271,0)
7952
"DATA",811.2,10,"SDX",272,0)
7953
"DATA",811.2,10,"SDX",273,0)
7954
"DATA",811.2,10,"SDX",274,0)
7955
"DATA",811.2,10,"SDX",275,0)
7956
"DATA",811.2,10,"SDX",276,0)
7957
"DATA",811.2,10,"SDX",277,0)
7958
"DATA",811.2,10,"SDX",278,0)
7959
"DATA",811.2,10,"SDX",279,0)
7960
"DATA",811.2,10,"SDX",280,0)
7961
"DATA",811.2,10,"SDX",281,0)
7962
"DATA",811.2,10,"SDX",282,0)
7963
"DATA",811.2,10,"SDX",283,0)
7964
"DATA",811.2,10,"SDX",284,0)
7965
"DATA",811.2,10,"SDX",285,0)
7966
"DATA",811.2,10,"SDX",286,0)
7967
"DATA",811.2,10,"SDX",287,0)
7968
"DATA",811.2,10,"SDX",288,0)
7969
"DATA",811.2,10,"SDX",289,0)
7970
"DATA",811.2,10,"SDX",290,0)
7971
"DATA",811.2,10,"SDX",291,0)
7972
"DATA",811.2,10,"SDX",292,0)
7973
"DATA",811.2,10,"SDX",293,0)
7974
"DATA",811.2,10,"SDX",294,0)
7975
"DATA",811.2,10,"SDX",295,0)
7976
"DATA",811.2,10,"SDX",296,0)
7977
"DATA",811.2,10,"SDX",297,0)
7978
"DATA",811.2,10,"SDX",298,0)
7979
"DATA",811.2,10,"SDX",299,0)
7980
"DATA",811.2,10,"SDX",300,0)
7981
"DATA",811.2,10,"SDX",301,0)
7982
"DATA",811.2,10,"SDX",302,0)
7983
"DATA",811.2,10,"SDX",303,0)
7984
"DATA",811.2,10,"SDX",304,0)
7985
"DATA",811.2,10,"SDX",305,0)
7986
"DATA",811.2,10,"SDX",306,0)
7987
"DATA",811.2,10,"SDX",307,0)
7988
"DATA",811.2,10,"SDX",308,0)
7989
"DATA",811.2,10,"SDX",309,0)
7990
"DATA",811.2,10,"SDX",310,0)
7991
"DATA",811.2,10,"SDX",311,0)
7992
"DATA",811.2,10,"SDX",312,0)
7993
"DATA",811.2,10,"SDX",313,0)
7994
"DATA",811.2,10,"SDX",314,0)
7995
"DATA",811.2,10,"SDX",315,0)
7996
"DATA",811.2,10,"SDX",316,0)
7997
"DATA",811.2,10,"SDX",317,0)
7998
"DATA",811.2,10,"SDX",318,0)
7999
"DATA",811.2,10,"SDX",319,0)
8000
"DATA",811.2,10,"SDX",320,0)
8001
"DATA",811.2,10,"SDX",321,0)
8002
"DATA",811.2,10,"SDX",322,0)
8003
"DATA",811.2,10,"SDX",323,0)
8004
"DATA",811.2,10,"SDX",324,0)
8005
"DATA",811.2,10,"SDX",325,0)
8006
"DATA",811.2,10,"SDX",326,0)
8007
"DATA",811.2,10,"SDX",327,0)
8008
"DATA",811.2,10,"SDX",328,0)
8009
"DATA",811.2,10,"SDX",329,0)
8010
"DATA",811.2,10,"SDX",330,0)
8011
"DATA",811.2,10,"SDX",331,0)
8012
"DATA",811.2,10,"SDX",332,0)
8013
"DATA",811.2,10,"SDX",333,0)
8014
"DATA",811.2,10,"SDX",334,0)
8015
"DATA",811.2,10,"SDX",335,0)
8016
"DATA",811.2,10,"SDX",336,0)
8017
"DATA",811.2,10,"SDX",337,0)
8018
"DATA",811.2,10,"SDX",338,0)
8019
"DATA",811.2,10,"SDX",339,0)
8020
"DATA",811.2,10,"SDX",340,0)
8021
"DATA",811.2,10,"SDX",341,0)
8022
"DATA",811.2,10,"SDX",342,0)
8023
"DATA",811.2,10,"SDX",343,0)
8024
"DATA",811.2,10,"SDX",344,0)
8025
"DATA",811.2,10,"SDX",345,0)
8026
"DATA",811.2,10,"SDX",346,0)
8027
"DATA",811.2,10,"SDX",347,0)
8028
"DATA",811.2,10,"SDX",348,0)
8029
"DATA",811.2,10,"SDX",349,0)
8030
"DATA",811.2,10,"SDX",350,0)
8031
"DATA",811.2,10,"SDX",351,0)
8032
"DATA",811.2,10,"SDX",352,0)
8033
"DATA",811.2,10,"SDX",353,0)
8034
"DATA",811.2,10,"SDX",354,0)
8035
"DATA",811.2,10,"SDX",355,0)
8036
"DATA",811.2,10,"SDX",356,0)
8037
"DATA",811.2,10,"SDX",357,0)
8038
"DATA",811.2,10,"SDX",358,0)
8039
"DATA",811.2,10,"SDX",359,0)
8040
"DATA",811.2,10,"SDX",360,0)
8041
"DATA",811.2,10,"SDX",361,0)
8042
"DATA",811.2,10,"SDX",362,0)
8043
"DATA",811.2,10,"SDX",363,0)
8044
"DATA",811.2,10,"SDX",364,0)
8045
"DATA",811.2,10,"SDX",365,0)
8046
"DATA",811.2,10,"SDX",366,0)
8047
"DATA",811.2,10,"SDX",367,0)
8048
"DATA",811.2,10,"SDX",368,0)
8049
"DATA",811.2,10,"SDX",369,0)
8050
"DATA",811.2,10,"SDX",370,0)
8051
"DATA",811.2,10,"SDX",371,0)
8052
"DATA",811.2,10,"SDX",372,0)
8053
"DATA",811.2,10,"SDX",373,0)
8054
"DATA",811.2,10,"SDX",374,0)
8055
"DATA",811.2,10,"SDX",375,0)
8056
"DATA",811.2,10,"SDX",376,0)
8057
"DATA",811.2,10,"SDX",377,0)
8058
"DATA",811.2,10,"SDX",378,0)
8059
"DATA",811.2,10,"SDX",379,0)
8060
"DATA",811.2,10,"SDX",380,0)
8061
"DATA",811.2,10,"SDX",381,0)
8062
"DATA",811.2,10,"SDX",382,0)
8063
"DATA",811.2,10,"SDX",383,0)
8064
"DATA",811.2,10,"SDX",384,0)
8065
"DATA",811.2,10,"SDX",385,0)
8066
"DATA",811.2,10,"SDX",386,0)
8067
"DATA",811.2,10,"SDX",387,0)
8068
"DATA",811.2,10,"SDX",388,0)
8069
"DATA",811.2,10,"SDX",389,0)
8070
"DATA",811.2,10,"SDX",390,0)
8071
"DATA",811.2,10,"SDX",391,0)
8072
"DATA",811.2,10,"SDX",392,0)
8073
"DATA",811.2,10,"SDX",393,0)
8074
"DATA",811.2,10,"SDX",394,0)
8075
"DATA",811.2,10,"SDX",395,0)
8076
"DATA",811.2,10,"SDX",396,0)
8077
"DATA",811.2,10,"SDX",397,0)
8078
"DATA",811.2,10,"SDX",398,0)
8079
"DATA",811.2,10,"SDX",399,0)
8080
"DATA",811.2,10,"SDX",400,0)
8081
"DATA",811.2,10,"SDX",401,0)
8082
"DATA",811.2,10,"SDX",402,0)
8083
"DATA",811.2,10,"SDX",403,0)
8084
"DATA",811.2,10,"SDX",404,0)
8085
"DATA",811.2,10,"SDX",405,0)
8086
"DATA",811.2,10,"SDX",406,0)
8087
"DATA",811.2,10,"SDX",407,0)
8088
"DATA",811.2,10,"SDX",408,0)
8089
"DATA",811.2,10,"SDX",409,0)
8090
"DATA",811.2,10,"SDX",410,0)
8091
"DATA",811.2,10,"SDX",411,0)
8092
"DATA",811.2,10,"SDX",412,0)
8093
"DATA",811.2,10,"SDX",413,0)
8094
"DATA",811.2,10,"SDX",414,0)
8095
"DATA",811.2,10,"SDX",415,0)
5554
"DATA",811.2,11,0)
VA-HIGH RISK FOR TB^TB risk codes
"DATA",811.2,11,21,0)
^811.22101^5^5
"DATA",811.2,11,21,1,0)
044.9^044.9^80
"DATA",811.2,11,21,2,0)
042.0^043.9^80
"DATA",811.2,11,21,3,0)
V60.0^V60.0^80
"DATA",811.2,11,21,4,0)
303.0^304.90^80
"DATA",811.2,11,21,5,0)
305.0^305.0^80
"DATA",811.2,11,80,0)
^811.22102^5^5
"DATA",811.2,11,80,1,0)
044.9^044.9
"DATA",811.2,11,80,2,0)
042.0^043.9
"DATA",811.2,11,80,3,0)
V60.0^V60.0
"DATA",811.2,11,80,4,0)
303.00^304.90
"DATA",811.2,11,80,5,0)
305.00^305.00
"DATA",811.2,11,"SDX",0)
^811.23102PI^67^67
"DATA",811.2,11,"SDX",1,0)
12316
"DATA",811.2,11,"SDX",2,0)
12317
"DATA",811.2,11,"SDX",3,0)
12318
"DATA",811.2,11,"SDX",4,0)
12319
"DATA",811.2,11,"SDX",5,0)
12320
"DATA",811.2,11,"SDX",6,0)
12321
"DATA",811.2,11,"SDX",7,0)
12322
"DATA",811.2,11,"SDX",8,0)
12323
"DATA",811.2,11,"SDX",9,0)
12324
"DATA",811.2,11,"SDX",10,0)
12326
"DATA",811.2,11,"SDX",11,0)
8814
"DATA",811.2,11,"SDX",12,0)
1283
"DATA",811.2,11,"SDX",13,0)
1284
"DATA",811.2,11,"SDX",14,0)
1285
"DATA",811.2,11,"SDX",15,0)
8815
"DATA",811.2,11,"SDX",16,0)
1286
"DATA",811.2,11,"SDX",17,0)
1287
"DATA",811.2,11,"SDX",18,0)
1288
"DATA",811.2,11,"SDX",19,0)
8816
"DATA",811.2,11,"SDX",20,0)
1289
"DATA",811.2,11,"SDX",21,0)
1290
"DATA",811.2,11,"SDX",22,0)
1291
"DATA",811.2,11,"SDX",23,0)
12027
"DATA",811.2,11,"SDX",24,0)
8817
"DATA",811.2,11,"SDX",25,0)
1292
"DATA",811.2,11,"SDX",26,0)
1293
"DATA",811.2,11,"SDX",27,0)
1294
"DATA",811.2,11,"SDX",28,0)
11981
"DATA",811.2,11,"SDX",29,0)
11982
"DATA",811.2,11,"SDX",30,0)
11983
"DATA",811.2,11,"SDX",31,0)
11984
"DATA",811.2,11,"SDX",32,0)
11985
"DATA",811.2,11,"SDX",33,0)
11986
"DATA",811.2,11,"SDX",34,0)
8818
"DATA",811.2,11,"SDX",35,0)
1295
"DATA",811.2,11,"SDX",36,0)
1296
"DATA",811.2,11,"SDX",37,0)
1297
"DATA",811.2,11,"SDX",38,0)
8819
"DATA",811.2,11,"SDX",39,0)
1298
"DATA",811.2,11,"SDX",40,0)
1299
"DATA",811.2,11,"SDX",41,0)
11988
"DATA",811.2,11,"SDX",42,0)
1300
"DATA",811.2,11,"SDX",43,0)
8820
"DATA",811.2,11,"SDX",44,0)
1301
"DATA",811.2,11,"SDX",45,0)
1302
"DATA",811.2,11,"SDX",46,0)
1303
"DATA",811.2,11,"SDX",47,0)
11987
"DATA",811.2,11,"SDX",48,0)
8821
"DATA",811.2,11,"SDX",49,0)
1304
"DATA",811.2,11,"SDX",50,0)
1305
"DATA",811.2,11,"SDX",51,0)
1306
"DATA",811.2,11,"SDX",52,0)
11989
"DATA",811.2,11,"SDX",53,0)
8822
"DATA",811.2,11,"SDX",54,0)
1307
"DATA",811.2,11,"SDX",55,0)
1308
"DATA",811.2,11,"SDX",56,0)
1309
"DATA",811.2,11,"SDX",57,0)
8823
"DATA",811.2,11,"SDX",58,0)
1310
"DATA",811.2,11,"SDX",59,0)
1311
"DATA",811.2,11,"SDX",60,0)
1312
"DATA",811.2,11,"SDX",61,0)
8824
"DATA",811.2,11,"SDX",62,0)
1313
"DATA",811.2,11,"SDX",63,0)
1314
"DATA",811.2,11,"SDX",64,0)
1315
"DATA",811.2,11,"SDX",65,0)
8825
"DATA",811.2,11,"SDX",66,0)
8826
"DATA",811.2,11,"SDX",67,0)
11644
"DATA",811.2,15,0)
VA-FLEXISIGMOIDOSCOPY^Flexisigmoidoscopy codes
"DATA",811.2,15,21,0)
^811.22101^2^2
"DATA",811.2,15,21,1,0)
45.24^45.24^80.1
"DATA",811.2,15,21,2,0)
45330^45385^81
"DATA",811.2,15,80.1,0)
^811.22103^1^1
"DATA",811.2,15,80.1,1,0)
45.24^45.24
"DATA",811.2,15,81,0)
^811.22104^1^1
"DATA",811.2,15,81,1,0)
45330^45385
"DATA",811.2,15,"SPR",0)
^811.23104PI^24^24
"DATA",811.2,15,"SPR",1,0)
45330
"DATA",811.2,15,"SPR",2,0)
45331
"DATA",811.2,15,"SPR",3,0)
45332
"DATA",811.2,15,"SPR",4,0)
45333
"DATA",811.2,15,"SPR",5,0)
45334
"DATA",811.2,15,"SPR",6,0)
45336
"DATA",811.2,15,"SPR",7,0)
45337
"DATA",811.2,15,"SPR",8,0)
45338
"DATA",811.2,15,"SPR",9,0)
45339
"DATA",811.2,15,"SPR",10,0)
45355
"DATA",811.2,15,"SPR",11,0)
45360
"DATA",811.2,15,"SPR",12,0)
45365
"DATA",811.2,15,"SPR",13,0)
45367
"DATA",811.2,15,"SPR",14,0)
45368
"DATA",811.2,15,"SPR",15,0)
45369
"DATA",811.2,15,"SPR",16,0)
45370
"DATA",811.2,15,"SPR",17,0)
45372
"DATA",811.2,15,"SPR",18,0)
45378
"DATA",811.2,15,"SPR",19,0)
45379
"DATA",811.2,15,"SPR",20,0)
45380
"DATA",811.2,15,"SPR",21,0)
45382
"DATA",811.2,15,"SPR",22,0)
45383
"DATA",811.2,15,"SPR",23,0)
45384
"DATA",811.2,15,"SPR",24,0)
45385
"DATA",811.2,16,0)
VA-MAMMOGRAM/SCREEN^Mammogram/screening CPT codes^Mammogram
"DATA",811.2,16,21,0)
^811.22101^2^2
"DATA",811.2,16,21,1,0)
76090^76092^81
"DATA",811.2,16,21,2,0)
V76.1^V76.1^80
"DATA",811.2,16,80,0)
^811.22102^1^1
"DATA",811.2,16,80,1,0)
V76.1^V76.1
"DATA",811.2,16,81,0)
^811.22104^1^1
"DATA",811.2,16,81,1,0)
76090^76092
"DATA",811.2,16,"SDX",0)
^811.23102IP^1^1
"DATA",811.2,16,"SDX",1,0)
11778
"DATA",811.2,16,"SDZ")
^Record Current Diagnosis^Record Prior Diagnosis
"DATA",811.2,16,"SPR",0)
^811.23104IP^3^3
"DATA",811.2,16,"SPR",1,0)
76090
"DATA",811.2,16,"SPR",2,0)
76091
"DATA",811.2,16,"SPR",3,0)
76092
"DATA",811.2,16,"SPZ")
^Record Current Procedure^Previous Procedure
"DATA",811.2,17,0)
VA-ALCOHOL ABUSE^Alcohol abuse codes
"DATA",811.2,17,21,0)
^811.22101^11^11
"DATA",811.2,17,21,1,0)
291^291.9^80
"DATA",811.2,17,21,2,0)
303^303.93^80
"DATA",811.2,17,21,3,0)
305^305.03^80
"DATA",811.2,17,21,4,0)
571^571.3^80
"DATA",811.2,17,21,5,0)
760.71^760.71^80
"DATA",811.2,17,21,6,0)
790.3^790.3^80
"DATA",811.2,17,21,7,0)
980.0^980.0^80
"DATA",811.2,17,21,8,0)
357.5^357.5^80
"DATA",811.2,17,21,9,0)
425.5^425.5^80
"DATA",811.2,17,21,10,0)
535.3^535.31^80
"DATA",811.2,17,21,11,0)
V11.3^V11.3^80
"DATA",811.2,17,80,0)
^811.22102^11^11
"DATA",811.2,17,80,1,0)
291.0^291.9
"DATA",811.2,17,80,2,0)
303.00^303.93
"DATA",811.2,17,80,3,0)
305.00^305.03
"DATA",811.2,17,80,4,0)
571.0^571.3
"DATA",811.2,17,80,5,0)
760.71^760.71
"DATA",811.2,17,80,6,0)
790.3^790.3
"DATA",811.2,17,80,7,0)
980.0^980.0
"DATA",811.2,17,80,8,0)
357.5^357.5
"DATA",811.2,17,80,9,0)
425.5^425.5
"DATA",811.2,17,80,10,0)
535.3^535.31
"DATA",811.2,17,80,11,0)
V11.3^V11.3
"DATA",811.2,17,"SDX",0)
^811.23102PI^^0
"DATA",811.2,17,"SPR",0)
^811.23104PI
"DATA",811.2,18,0)
VA-BREAST TUMOR^+HX breast tumor ICD9 codes
"DATA",811.2,18,21,0)
^811.22101^16^16
"DATA",811.2,18,21,1,0)
174^174.9^80
"DATA",811.2,18,21,2,0)
198.81^198.81^80
"DATA",811.2,18,21,3,0)
238.3^238.3^80
"DATA",811.2,18,21,4,0)
239.3^239.3^80
"DATA",811.2,18,21,5,0)
233.0^233.0^80
"DATA",811.2,18,21,6,0)
217^217^80
"DATA",811.2,18,21,7,0)
610^610.9^80
"DATA",811.2,18,21,8,0)
611^611^80
"DATA",811.2,18,21,9,0)
611.5^611.5^80
"DATA",811.2,18,21,10,0)
611.71^611.72^80
"DATA",811.2,18,21,11,0)
611.9^611.9^80
"DATA",811.2,18,21,12,0)
675.1^675.14^80
"DATA",811.2,18,21,13,0)
757.6^757.6^80
"DATA",811.2,18,21,14,0)
922.0^922.0^80
"DATA",811.2,18,21,15,0)
793.8^793.8^80
"DATA",811.2,18,21,16,0)
V10.3^V10.3^80
"DATA",811.2,18,80,0)
^811.22102^32^32
"DATA",811.2,18,80,1,0)
174.0^174.9
"DATA",811.2,18,80,2,0)
198.81^198.81
"DATA",811.2,18,80,3,0)
238.3^238.3
"DATA",811.2,18,80,4,0)
239.3^239.3
"DATA",811.2,18,80,5,0)
233.0^233.0
"DATA",811.2,18,80,6,0)
217.^217.
"DATA",811.2,18,80,7,0)
610.0^610.9
"DATA",811.2,18,80,8,0)
611.0^611.0
"DATA",811.2,18,80,9,0)
611.5^611.5
"DATA",811.2,18,80,10,0)
611.71^611.72
"DATA",811.2,18,80,11,0)
611.9^611.9
"DATA",811.2,18,80,12,0)
675.10^675.14
"DATA",811.2,18,80,13,0)
757.6^757.6
"DATA",811.2,18,80,14,0)
922.0^922.0
"DATA",811.2,18,80,15,0)
793.8^793.8
"DATA",811.2,18,80,16,0)
V10.3^V10.3
"DATA",811.2,18,80,17,0)
174.0^174.9
"DATA",811.2,18,80,18,0)
198.81^198.81
"DATA",811.2,18,80,19,0)
238.3^238.3
"DATA",811.2,18,80,20,0)
239.3^239.3
"DATA",811.2,18,80,21,0)
233.0^233.0
"DATA",811.2,18,80,22,0)
217.^217.
"DATA",811.2,18,80,23,0)
610.0^610.9
"DATA",811.2,18,80,24,0)
611.0^611.0
"DATA",811.2,18,80,25,0)
611.5^611.5
"DATA",811.2,18,80,26,0)
611.71^611.72
"DATA",811.2,18,80,27,0)
611.9^611.9
"DATA",811.2,18,80,28,0)
675.10^675.14
"DATA",811.2,18,80,29,0)
757.6^757.6
"DATA",811.2,18,80,30,0)
922.0^922.0
"DATA",811.2,18,80,31,0)
793.8^793.8
"DATA",811.2,18,80,32,0)
V10.3^V10.3
"DATA",811.2,18,"SDX",0)
^811.23102PI^35^35
"DATA",811.2,18,"SDX",1,0)
8625
"DATA",811.2,18,"SDX",2,0)
335
"DATA",811.2,18,"SDX",3,0)
336
"DATA",811.2,18,"SDX",4,0)
337
"DATA",811.2,18,"SDX",5,0)
338
"DATA",811.2,18,"SDX",6,0)
339
"DATA",811.2,18,"SDX",7,0)
340
"DATA",811.2,18,"SDX",8,0)
341
"DATA",811.2,18,"SDX",9,0)
342
"DATA",811.2,18,"SDX",10,0)
444
"DATA",811.2,18,"SDX",11,0)
8681
"DATA",811.2,18,"SDX",12,0)
8697
"DATA",811.2,18,"SDX",13,0)
809
"DATA",811.2,18,"SDX",14,0)
818
"DATA",811.2,18,"SDX",15,0)
9271
"DATA",811.2,18,"SDX",16,0)
3222
"DATA",811.2,18,"SDX",17,0)
3223
"DATA",811.2,18,"SDX",18,0)
3224
"DATA",811.2,18,"SDX",19,0)
3225
"DATA",811.2,18,"SDX",20,0)
3226
"DATA",811.2,18,"SDX",21,0)
3227
"DATA",811.2,18,"SDX",22,0)
9272
"DATA",811.2,18,"SDX",23,0)
3232
"DATA",811.2,18,"SDX",24,0)
3234
"DATA",811.2,18,"SDX",25,0)
3235
"DATA",811.2,18,"SDX",26,0)
3238
"DATA",811.2,18,"SDX",27,0)
9555
"DATA",811.2,18,"SDX",28,0)
4022
"DATA",811.2,18,"SDX",29,0)
4023
"DATA",811.2,18,"SDX",30,0)
4024
"DATA",811.2,18,"SDX",31,0)
4025
"DATA",811.2,18,"SDX",32,0)
5239
"DATA",811.2,18,"SDX",33,0)
5528
"DATA",811.2,18,"SDX",34,0)
10052
"DATA",811.2,18,"SDX",35,0)
11300
"DATA",811.2,19,0)
VA-MASTECTOMY^Mastectomy codes
"DATA",811.2,19,21,0)
^811.22101^10^10
"DATA",811.2,19,21,1,0)
85.23^85.23^80.1
"DATA",811.2,19,21,2,0)
85.41^85.48^80.1
"DATA",811.2,19,21,3,0)
19140^19140^81
"DATA",811.2,19,21,4,0)
19160^19160^81
"DATA",811.2,19,21,5,0)
19162^19162^81
"DATA",811.2,19,21,6,0)
19180^19180^81
"DATA",811.2,19,21,7,0)
19182^19182^81
"DATA",811.2,19,21,8,0)
19200^19200^81
"DATA",811.2,19,21,9,0)
19220^19220^81
"DATA",811.2,19,21,10,0)
T1950^T1999^81
"DATA",811.2,19,80.1,0)
^811.22103^2^2
"DATA",811.2,19,80.1,1,0)
85.23^85.23
"DATA",811.2,19,80.1,2,0)
85.41^85.48
"DATA",811.2,19,81,0)
^811.22104^8^8
"DATA",811.2,19,81,1,0)
19140^19140
"DATA",811.2,19,81,2,0)
19160^19160
"DATA",811.2,19,81,3,0)
19162^19162
"DATA",811.2,19,81,4,0)
19180^19180
"DATA",811.2,19,81,5,0)
19182^19182
"DATA",811.2,19,81,6,0)
19200^19200
"DATA",811.2,19,81,7,0)
19220^19220
"DATA",811.2,19,81,8,0)
T1950^T1999
"DATA",811.2,19,"SPR",0)
^811.23104PI^34^34
"DATA",811.2,19,"SPR",1,0)
19140
"DATA",811.2,19,"SPR",2,0)
19160
"DATA",811.2,19,"SPR",3,0)
19162
"DATA",811.2,19,"SPR",4,0)
19180
"DATA",811.2,19,"SPR",5,0)
19182
"DATA",811.2,19,"SPR",6,0)
19200
"DATA",811.2,19,"SPR",7,0)
19220
"DATA",811.2,19,"SPR",8,0)
102666
"DATA",811.2,19,"SPR",9,0)
102667
"DATA",811.2,19,"SPR",10,0)
102668
"DATA",811.2,19,"SPR",11,0)
102669
"DATA",811.2,19,"SPR",12,0)
102670
"DATA",811.2,19,"SPR",13,0)
102671
"DATA",811.2,19,"SPR",14,0)
102672
"DATA",811.2,19,"SPR",15,0)
102673
"DATA",811.2,19,"SPR",16,0)
102674
"DATA",811.2,19,"SPR",17,0)
102675
"DATA",811.2,19,"SPR",18,0)
102676
"DATA",811.2,19,"SPR",19,0)
102677
"DATA",811.2,19,"SPR",20,0)
102678
"DATA",811.2,19,"SPR",21,0)
102679
"DATA",811.2,19,"SPR",22,0)
102680
"DATA",811.2,19,"SPR",23,0)
102681
"DATA",811.2,19,"SPR",24,0)
102682
"DATA",811.2,19,"SPR",25,0)
102683
"DATA",811.2,19,"SPR",26,0)
102684
"DATA",811.2,19,"SPR",27,0)
102685
"DATA",811.2,19,"SPR",28,0)
102686
"DATA",811.2,19,"SPR",29,0)
102687
"DATA",811.2,19,"SPR",30,0)
102688
"DATA",811.2,19,"SPR",31,0)
102689
"DATA",811.2,19,"SPR",32,0)
102690
"DATA",811.2,19,"SPR",33,0)
102691
"DATA",811.2,19,"SPR",34,0)
102692
"DATA",811.2,20,0)
VA-OBESITY^Obesity codes
"DATA",811.2,20,21,0)
^811.22101^6^6
"DATA",811.2,20,21,1,0)
278.0^278.01^80
"DATA",811.2,20,21,2,0)
783.1^783.1^80
"DATA",811.2,20,21,3,0)
43842^43842^81
"DATA",811.2,20,21,4,0)
43846^43846^81
"DATA",811.2,20,21,5,0)
44131^44131^81
"DATA",811.2,20,21,6,0)
99078^99078^81
"DATA",811.2,20,80,0)
^811.22102^2^2
"DATA",811.2,20,80,1,0)
278.0^278.01
"DATA",811.2,20,80,2,0)
783.1^783.1
"DATA",811.2,20,81,0)
^811.22104^4^4
"DATA",811.2,20,81,1,0)
43842^43842
"DATA",811.2,20,81,2,0)
43846^43846
"DATA",811.2,20,81,3,0)
44131^44131
"DATA",811.2,20,81,4,0)
99078^99078
"DATA",811.2,20,"SDX",0)
^811.23102PI^4^4
"DATA",811.2,20,"SDX",1,0)
8756
"DATA",811.2,20,"SDX",2,0)
13154
"DATA",811.2,20,"SDX",3,0)
13155
"DATA",811.2,20,"SDX",4,0)
5436
"DATA",811.2,20,"SPR",0)
^811.23104PI^4^4
"DATA",811.2,20,"SPR",1,0)
43842
"DATA",811.2,20,"SPR",2,0)
43846
"DATA",811.2,20,"SPR",3,0)
44131
"DATA",811.2,20,"SPR",4,0)
99078
"DATA",811.2,21,0)
VA-NUTRITION^Nutrition codes
"DATA",811.2,21,21,0)
^811.22101^18^18
"DATA",811.2,21,21,1,0)
260^260^80
"DATA",811.2,21,21,2,0)
261^261^80
"DATA",811.2,21,21,3,0)
263^263.2^80
"DATA",811.2,21,21,4,0)
263.8^263.8^80
"DATA",811.2,21,21,5,0)
263.9^263.9^80
"DATA",811.2,21,21,6,0)
264^264.9^80
"DATA",811.2,21,21,7,0)
265^265.2^80
"DATA",811.2,21,21,8,0)
266^266.9^80
"DATA",811.2,21,21,9,0)
267^267^80
"DATA",811.2,21,21,10,0)
268^268.9^80
"DATA",811.2,21,21,11,0)
269^269.9^80
"DATA",811.2,21,21,12,0)
281.1^281.11^80
"DATA",811.2,21,21,13,0)
783.0^783.4^80
"DATA",811.2,21,21,14,0)
377.33^377.33^80
"DATA",811.2,21,21,15,0)
425.7^425.7^80
"DATA",811.2,21,21,16,0)
760.4^760.4^80
"DATA",811.2,21,21,17,0)
783.6^783.9^80
"DATA",811.2,21,21,18,0)
V69.1^V69.1
"DATA",811.2,21,80,0)
^811.22102^18^18
"DATA",811.2,21,80,1,0)
260.^260.
"DATA",811.2,21,80,2,0)
261.^261.
"DATA",811.2,21,80,3,0)
263.0^263.2
"DATA",811.2,21,80,4,0)
263.8^263.8
"DATA",811.2,21,80,5,0)
263.9^263.9
"DATA",811.2,21,80,6,0)
264.0^264.9
"DATA",811.2,21,80,7,0)
265.0^265.2
"DATA",811.2,21,80,8,0)
266.0^266.9
"DATA",811.2,21,80,9,0)
267.^267.
"DATA",811.2,21,80,10,0)
268.0^268.9
"DATA",811.2,21,80,11,0)
269.0^269.9
"DATA",811.2,21,80,12,0)
281.1^281.11
"DATA",811.2,21,80,13,0)
783.0^783.4
"DATA",811.2,21,80,14,0)
377.33^377.33
"DATA",811.2,21,80,15,0)
425.7^425.7
"DATA",811.2,21,80,16,0)
760.4^760.4
"DATA",811.2,21,80,17,0)
783.6^783.9
"DATA",811.2,21,80,18,0)
V69.1^V69.1
"DATA",811.2,21,"SDX",0)
^811.23102PI^49^49
"DATA",811.2,21,"SDX",1,0)
8737
"DATA",811.2,21,"SDX",2,0)
8738
"DATA",811.2,21,"SDX",3,0)
8740
"DATA",811.2,21,"SDX",4,0)
910
"DATA",811.2,21,"SDX",5,0)
911
"DATA",811.2,21,"SDX",6,0)
912
"DATA",811.2,21,"SDX",7,0)
913
"DATA",811.2,21,"SDX",8,0)
8741
"DATA",811.2,21,"SDX",9,0)
914
"DATA",811.2,21,"SDX",10,0)
915
"DATA",811.2,21,"SDX",11,0)
916
"DATA",811.2,21,"SDX",12,0)
917
"DATA",811.2,21,"SDX",13,0)
918
"DATA",811.2,21,"SDX",14,0)
919
"DATA",811.2,21,"SDX",15,0)
920
"DATA",811.2,21,"SDX",16,0)
921
"DATA",811.2,21,"SDX",17,0)
922
"DATA",811.2,21,"SDX",18,0)
8742
"DATA",811.2,21,"SDX",19,0)
923
"DATA",811.2,21,"SDX",20,0)
924
"DATA",811.2,21,"SDX",21,0)
8743
"DATA",811.2,21,"SDX",22,0)
925
"DATA",811.2,21,"SDX",23,0)
926
"DATA",811.2,21,"SDX",24,0)
927
"DATA",811.2,21,"SDX",25,0)
8744
"DATA",811.2,21,"SDX",26,0)
8745
"DATA",811.2,21,"SDX",27,0)
928
"DATA",811.2,21,"SDX",28,0)
929
"DATA",811.2,21,"SDX",29,0)
930
"DATA",811.2,21,"SDX",30,0)
8746
"DATA",811.2,21,"SDX",31,0)
931
"DATA",811.2,21,"SDX",32,0)
932
"DATA",811.2,21,"SDX",33,0)
933
"DATA",811.2,21,"SDX",34,0)
934
"DATA",811.2,21,"SDX",35,0)
935
"DATA",811.2,21,"SDX",36,0)
1019
"DATA",811.2,21,"SDX",37,0)
11844
"DATA",811.2,21,"SDX",38,0)
11845
"DATA",811.2,21,"SDX",39,0)
2191
"DATA",811.2,21,"SDX",40,0)
2537
"DATA",811.2,21,"SDX",41,0)
5263
"DATA",811.2,21,"SDX",42,0)
9778
"DATA",811.2,21,"SDX",43,0)
5436
"DATA",811.2,21,"SDX",44,0)
5437
"DATA",811.2,21,"SDX",45,0)
5438
"DATA",811.2,21,"SDX",46,0)
5439
"DATA",811.2,21,"SDX",47,0)
5441
"DATA",811.2,21,"SDX",48,0)
5442
"DATA",811.2,21,"SDX",49,0)
13144
"DATA",811.2,22,0)
VA-TOBACCO USE^Tobacco use codes^Patient has a history of tobacco use.
"DATA",811.2,22,21,0)
^811.22101^3^3
"DATA",811.2,22,21,1,0)
305.1^305.1^80
"DATA",811.2,22,21,2,0)
305.10^305.11^80
"DATA",811.2,22,21,3,0)
V15.82^V15.82^80
"DATA",811.2,22,80,0)
^811.22102^3^3
"DATA",811.2,22,80,1,0)
305.1^305.1
"DATA",811.2,22,80,2,0)
305.10^305.11
"DATA",811.2,22,80,3,0)
V15.82^V15.82
"DATA",811.2,22,"SDX",0)
^811.23102PI^4^4
"DATA",811.2,22,"SDX",1,0)
8827
"DATA",811.2,22,"SDX",2,0)
12287
"DATA",811.2,22,"SDX",3,0)
1322
"DATA",811.2,22,"SDX",4,0)
13090
"DATA",811.2,22,"SDZ")
^Diagnosis this encounter^Prior diagnosis^^^
"DATA",811.2,23,0)
VA-HYPERTENSION SCREEN^Hypertension screen codes
"DATA",811.2,23,21,0)
^811.22101^3^2
"DATA",811.2,23,21,1,0)
V81.1^V81.1^80
"DATA",811.2,23,21,3,0)
80060^80060^81
"DATA",811.2,23,80,0)
^811.22102^1^1
"DATA",811.2,23,80,1,0)
V81.1^V81.1
"DATA",811.2,23,81,0)
^811.22104^1^1
"DATA",811.2,23,81,1,0)
80060^80060
"DATA",811.2,23,"SDX",0)
^811.23102PI^1^1
"DATA",811.2,23,"SDX",1,0)
11814
"DATA",811.2,23,"SPR",0)
^811.23104PI^1^1
"DATA",811.2,23,"SPR",1,0)
80060
"DATA",811.2,24,0)
VA-CHOLESTEROL^Cholesterol codes
"DATA",811.2,24,21,0)
^811.22101^5^5
"DATA",811.2,24,21,1,0)
G0054^G0054^81
"DATA",811.2,24,21,2,0)
83718^83721^81
"DATA",811.2,24,21,3,0)
80061^80061^81
"DATA",811.2,24,21,4,0)
82465^82470^81
"DATA",811.2,24,21,5,0)
83700^83705^81
"DATA",811.2,24,81,0)
^811.22104^5^5
"DATA",811.2,24,81,1,0)
G0054^G0054
"DATA",811.2,24,81,2,0)
83718^83721
"DATA",811.2,24,81,3,0)
80061^80061
"DATA",811.2,24,81,4,0)
82465^82470
"DATA",811.2,24,81,5,0)
83700^83705
"DATA",811.2,24,"SPR",0)
^811.23104PI^10^10
"DATA",811.2,24,"SPR",1,0)
80061
"DATA",811.2,24,"SPR",2,0)
82465
"DATA",811.2,24,"SPR",3,0)
82470
"DATA",811.2,24,"SPR",4,0)
83700
"DATA",811.2,24,"SPR",5,0)
83705
"DATA",811.2,24,"SPR",6,0)
83718
"DATA",811.2,24,"SPR",7,0)
83719
"DATA",811.2,24,"SPR",8,0)
83720
"DATA",811.2,24,"SPR",9,0)
83721
"DATA",811.2,24,"SPR",10,0)
104437
"DATA",811.2,25,0)
VA-PNEUMOCOCCAL VACCINE^Pneumococcal vaccine codes
"DATA",811.2,25,21,0)
^811.22101^5^5
"DATA",811.2,25,21,1,0)
99.55^99.55^80.1
"DATA",811.2,25,21,2,0)
99.59^99.59^80.1
"DATA",811.2,25,21,3,0)
G0009^G0009^81
"DATA",811.2,25,21,4,0)
90732^90732^81
"DATA",811.2,25,21,5,0)
V06.6^V06.6^80
"DATA",811.2,25,80,0)
^811.22102^1^1
"DATA",811.2,25,80,1,0)
V06.6^V06.6
"DATA",811.2,25,80.1,0)
^811.22103^2^2
"DATA",811.2,25,80.1,1,0)
99.55^99.55
"DATA",811.2,25,80.1,2,0)
99.59^99.59
"DATA",811.2,25,81,0)
^811.22104^2^2
"DATA",811.2,25,81,1,0)
G0009^G0009
"DATA",811.2,25,81,2,0)
90732^90732
"DATA",811.2,25,"SDX",0)
^811.23102PI^1^1
"DATA",811.2,25,"SDX",1,0)
13074
"DATA",811.2,25,"SDZ")
^Current Diagnosis for Pneumococcal Vaccine^Prior Diagnosis for Pneumococcal Vaccine
"DATA",811.2,25,"SPR",0)
^811.23104PI^2^2
"DATA",811.2,25,"SPR",1,0)
90732
"DATA",811.2,25,"SPR",2,0)
104193
"DATA",811.2,25,"SPZ")
^Just testing current proc^Prior Procedure
"DATA",811.2,26,0)
VA-PSA^PSA codes
"DATA",811.2,26,21,0)
^811.22101^1^1
"DATA",811.2,26,21,1,0)
84153^84153^81
"DATA",811.2,26,81,0)
^811.22104^1^1
"DATA",811.2,26,81,1,0)
84153^84153
"DATA",811.2,26,"SPR",0)
^811.23104PI^1^1
"DATA",811.2,26,"SPR",1,0)
84153
"DATA",811.2,27,0)
VA-FOBT^Fecal occult blood test codes^FOBT Procedure
"DATA",811.2,27,21,0)
^811.22101^1^1
"DATA",811.2,27,21,1,0)
82270^82270^81
"DATA",811.2,27,81,0)
^811.22104^1^1
"DATA",811.2,27,81,1,0)
82270^82270
"DATA",811.2,27,"SDZ")
^FOBT^FOBT done elsewhere
"DATA",811.2,27,"SPR",0)
^811.23104PI^1^1
"DATA",811.2,27,"SPR",1,0)
82270
"DATA",811.2,27,"SPZ")
^FOBT^FOBT done elsewhere
"DATA",811.2,28,0)
VA-DIABETES^Diabetic diagnosis codes
"DATA",811.2,28,21,0)
^811.22101^1^1
"DATA",811.2,28,21,1,0)
250^250.9^80
"DATA",811.2,28,80,0)
^811.22102^1^1
"DATA",811.2,28,80,1,0)
250.00^250.90
"DATA",811.2,28,"SDX",0)
^811.23102PI^37^37
"DATA",811.2,28,"SDX",1,0)
8718
"DATA",811.2,28,"SDX",2,0)
851
"DATA",811.2,28,"SDX",3,0)
12827
"DATA",811.2,28,"SDX",4,0)
12828
"DATA",811.2,28,"SDX",5,0)
8719
"DATA",811.2,28,"SDX",6,0)
852
"DATA",811.2,28,"SDX",7,0)
12829
"DATA",811.2,28,"SDX",8,0)
12830
"DATA",811.2,28,"SDX",9,0)
8720
"DATA",811.2,28,"SDX",10,0)
853
"DATA",811.2,28,"SDX",11,0)
12831
"DATA",811.2,28,"SDX",12,0)
12832
"DATA",811.2,28,"SDX",13,0)
8721
"DATA",811.2,28,"SDX",14,0)
854
"DATA",811.2,28,"SDX",15,0)
12833
"DATA",811.2,28,"SDX",16,0)
12834
"DATA",811.2,28,"SDX",17,0)
8722
"DATA",811.2,28,"SDX",18,0)
855
"DATA",811.2,28,"SDX",19,0)
12835
"DATA",811.2,28,"SDX",20,0)
12836
"DATA",811.2,28,"SDX",21,0)
8723
"DATA",811.2,28,"SDX",22,0)
856
"DATA",811.2,28,"SDX",23,0)
12837
"DATA",811.2,28,"SDX",24,0)
12838
"DATA",811.2,28,"SDX",25,0)
8724
"DATA",811.2,28,"SDX",26,0)
857
"DATA",811.2,28,"SDX",27,0)
12839
"DATA",811.2,28,"SDX",28,0)
12840
"DATA",811.2,28,"SDX",29,0)
8725
"DATA",811.2,28,"SDX",30,0)
858
"DATA",811.2,28,"SDX",31,0)
12841
"DATA",811.2,28,"SDX",32,0)
12842
"DATA",811.2,28,"SDX",33,0)
8726
"DATA",811.2,28,"SDX",34,0)
859
"DATA",811.2,28,"SDX",35,0)
12843
"DATA",811.2,28,"SDX",36,0)
12844
"DATA",811.2,28,"SDX",37,0)
8727
"DATA",811.2,29,0)
VA-TETANUS DIPHTHERIA^Tetanus and diphtheria codes
"DATA",811.2,29,21,0)
^811.22101^7^7
"DATA",811.2,29,21,1,0)
90700^90703^81
"DATA",811.2,29,21,2,0)
90711^90711^81
"DATA",811.2,29,21,3,0)
90718^90721^81
"DATA",811.2,29,21,4,0)
99.36^99.38^80.1
"DATA",811.2,29,21,5,0)
V03.5^V03.5^80
"DATA",811.2,29,21,6,0)
V03.7^V03.7^80
"DATA",811.2,29,21,7,0)
V06.1^V06.5^80
"DATA",811.2,29,80,0)
^811.22102^3^3
"DATA",811.2,29,80,1,0)
V03.5^V03.5
"DATA",811.2,29,80,2,0)
V03.7^V03.7
"DATA",811.2,29,80,3,0)
V06.1^V06.5
"DATA",811.2,29,80.1,0)
^811.22103^1^1
"DATA",811.2,29,80.1,1,0)
99.36^99.38
"DATA",811.2,29,81,0)
^811.22104^3^3
"DATA",811.2,29,81,1,0)
90700^90703
"DATA",811.2,29,81,2,0)
90711^90711
"DATA",811.2,29,81,3,0)
90718^90721
"DATA",811.2,29,"SDX",0)
^811.23102PI^7^7
"DATA",811.2,29,"SDX",1,0)
11253
"DATA",811.2,29,"SDX",2,0)
11255
"DATA",811.2,29,"SDX",3,0)
11273
"DATA",811.2,29,"SDX",4,0)
11274
"DATA",811.2,29,"SDX",5,0)
11275
"DATA",811.2,29,"SDX",6,0)
11276
"DATA",811.2,29,"SDX",7,0)
13073
"DATA",811.2,29,"SPR",0)
^811.23104PI^9^9
"DATA",811.2,29,"SPR",1,0)
90700
"DATA",811.2,29,"SPR",2,0)
90701
"DATA",811.2,29,"SPR",3,0)
90702
"DATA",811.2,29,"SPR",4,0)
90703
"DATA",811.2,29,"SPR",5,0)
90711
"DATA",811.2,29,"SPR",6,0)
90718
"DATA",811.2,29,"SPR",7,0)
90719
"DATA",811.2,29,"SPR",8,0)
90720
"DATA",811.2,29,"SPR",9,0)
90721
"DATA",811.2,30,0)
VA-CERVICAL CANCER SCREEN^Cervical cancer screen codes
"DATA",811.2,30,21,0)
^811.22101^6^6
"DATA",811.2,30,21,1,0)
Q0091^Q0091^81
"DATA",811.2,30,21,2,0)
V76.2^V76.2^80
"DATA",811.2,30,21,3,0)
Q0060^Q0061^81
"DATA",811.2,30,21,4,0)
P3000^P3001^81
"DATA",811.2,30,21,5,0)
88150^88150^81
"DATA",811.2,30,21,6,0)
91.46^91.46^80.1
"DATA",811.2,30,80,0)
^811.22102^1^1
"DATA",811.2,30,80,1,0)
V76.2^V76.2
"DATA",811.2,30,80.1,0)
^811.22103^1^1
"DATA",811.2,30,80.1,1,0)
91.46^91.46
"DATA",811.2,30,81,0)
^811.22104^4^4
"DATA",811.2,30,81,1,0)
Q0091^Q0091
"DATA",811.2,30,81,2,0)
Q0060^Q0061
"DATA",811.2,30,81,3,0)
P3000^P3001
"DATA",811.2,30,81,4,0)
88150^88150
"DATA",811.2,30,"SDX",0)
^811.23102PI^1^1
"DATA",811.2,30,"SDX",1,0)
11779
"DATA",811.2,30,"SPR",0)
^811.23104PI^6^6
"DATA",811.2,30,"SPR",1,0)
88150
"DATA",811.2,30,"SPR",2,0)
103855
"DATA",811.2,30,"SPR",3,0)
103856
"DATA",811.2,30,"SPR",4,0)
103710
"DATA",811.2,30,"SPR",5,0)
103711
"DATA",811.2,30,"SPR",6,0)
103863
"DATA",811.2,31,0)
VA-COLORECTAL CANCER SCREEN^Rectal cancer screen codes
"DATA",811.2,31,21,0)
^811.22101^1^1
"DATA",811.2,31,21,1,0)
V76.41^V76.41^80
"DATA",811.2,31,80,0)
^811.22102^1^1
"DATA",811.2,31,80,1,0)
V76.41^V76.41
"DATA",811.2,31,"SDX",0)
^811.23102PI^1^1
"DATA",811.2,31,"SDX",1,0)
11781
"DATA",811.2,32,0)
VA-EXERCISE COUNSELING^Exercise counseling codes^
"DATA",811.2,32,21,0)
^811.22101^1^1
"DATA",811.2,32,21,1,0)
V65.41^V65.41^80
"DATA",811.2,32,80,0)
^811.22102^1^1
"DATA",811.2,32,80,1,0)
V65.41^V65.41
"DATA",811.2,32,"SDX",0)
^811.23102PI^3^3
"DATA",811.2,32,"SDX",1,0)
13137
"DATA",811.2,32,"SDX",2,0)
11690
"DATA",811.2,32,"SDX",3,0)
11688
"DATA",811.2,32,"SDZ")
^This encounter^Previous encounter
"DATA",811.2,33,0)
VA-INFLUENZA IMMUNIZATION^Influenza immunization codes
"DATA",811.2,33,21,0)
^811.22101^6^5
"DATA",811.2,33,21,1,0)
V04.8^V04.8^80
"DATA",811.2,33,21,2,0)
90724^90724^81
"DATA",811.2,33,21,4,0)
Q0034^Q0034^81
"DATA",811.2,33,21,5,0)
G0008^G0008^81
"DATA",811.2,33,21,6,0)
99.52^99.52^80.1
"DATA",811.2,33,80,0)
^811.22102^1^1
"DATA",811.2,33,80,1,0)
V04.8^V04.8
"DATA",811.2,33,80.1,0)
^811.22103^1^1
"DATA",811.2,33,80.1,1,0)
99.52^99.52
"DATA",811.2,33,81,0)
^811.22104^4^4
"DATA",811.2,33,81,1,0)
90724^90724
"DATA",811.2,33,81,2,0)
Q0034^Q0034
"DATA",811.2,33,81,3,0)
G0008^G0008
"DATA",811.2,33,81,4,0)
90658^90660
"DATA",811.2,33,"SDX",0)
^811.23102PI^1^1
"DATA",811.2,33,"SDX",1,0)
11266
"DATA",811.2,33,"SPR",0)
^811.23104PI^6^6
"DATA",811.2,33,"SPR",1,0)
90658
"DATA",811.2,33,"SPR",2,0)
90659
"DATA",811.2,33,"SPR",3,0)
90660
"DATA",811.2,33,"SPR",4,0)
90724
"DATA",811.2,33,"SPR",5,0)
104192
"DATA",811.2,33,"SPR",6,0)
103549
"DATA",811.2,34,0)
VA-ALCOHOLISM SCREENING^Alcoholism screening codes
"DATA",811.2,34,21,0)
^811.22101^1^1
"DATA",811.2,34,21,1,0)
V79.1^V79.1^80
"DATA",811.2,34,80,0)
^811.22102^1^1
"DATA",811.2,34,80,1,0)
V79.1^V79.1
"DATA",811.2,34,"SDX",0)
^811.23102PI^1^1
"DATA",811.2,34,"SDX",1,0)
11804
"DATA",811.2,35,0)
VA-SAFETY COUNSELING^Safety counseling codes
"DATA",811.2,35,21,0)
^811.22101^1^1
"DATA",811.2,35,21,1,0)
V65.43^V65.43^80
"DATA",811.2,35,80,0)
^811.22102^1^1
"DATA",811.2,35,80,1,0)
V65.43^V65.43
"DATA",811.2,35,"SDX",0)
^811.23102PI^1^1
"DATA",811.2,35,"SDX",1,0)
13139
"DATA",811.2,36,0)
VA-WEIGHT AND NUTRITION SCREEN^Weight/nutr. screen codes
"DATA",811.2,36,21,0)
^811.22101^2^2
"DATA",811.2,36,21,1,0)
V65.3^V65.3^80
"DATA",811.2,36,21,2,0)
V77.8^V77.9^80
"DATA",811.2,36,80,0)
^811.22102^2^2
"DATA",811.2,36,80,1,0)
V65.3^V65.3
"DATA",811.2,36,80,2,0)
V77.8^V77.9
"DATA",811.2,36,"SDX",0)
^811.23102IP^3^3
"DATA",811.2,36,"SDX",1,0)
11689
"DATA",811.2,36,"SDX",2,0)
11795
"DATA",811.2,36,"SDX",3,0)
11796
"DATA",811.4,1,0)
VA-BMI^PXRMBMI^BMI^BMI
"DATA",811.4,1,1,0)
^811.41^10^10^3000419^^
"DATA",811.4,1,1,1,0)
The VA-BMI computed finding calculates the patient's body mass index.  The
"DATA",811.4,1,1,2,0)
value returned which can be used in the CONDITION field of the findings is
"DATA",811.4,1,1,3,0)
the body mass index value.
"DATA",811.4,1,1,4,0)
 
"DATA",811.4,1,1,5,0)
An example of using the VA-BMI computed findins is as follows:
"DATA",811.4,1,1,6,0)
1)  Create a finding in a reminder that is the VA-BMI computed finding.
"DATA",811.4,1,1,7,0)
2)  Add logic in the CONDITION field to check for a particular BMI value:
"DATA",811.4,1,1,8,0)
"I V>25"
"DATA",811.4,1,1,9,0)
3)  This finding will be evaluated to true for patients with a BMI that is
"DATA",811.4,1,1,10,0)
greater than or equal to 25.
"DATA",811.4,2,0)
VA-DATE OF BIRTH^PXRMPDEM^DOB^Date of Birth
"DATA",811.4,2,1,0)
^811.41^6^6^3000419^^
"DATA",811.4,2,1,1,0)
The VA-DATE OF BIRTH gets the value of the patient's date of birth in
"DATA",811.4,2,1,2,0)
FileMan format.  This computed finding can be used to check for patients
"DATA",811.4,2,1,3,0)
who have been born since a specified data in a reminder.  The CONDITION
"DATA",811.4,2,1,4,0)
for a finding could use the date of birth in a format similar to the
"DATA",811.4,2,1,5,0)
following: "I V>yyymmdd" where yyy=the targeted year-1700 (e.g.,
"DATA",811.4,2,1,6,0)
for patients born after 1948 the CONDITION would be "I V>2480000".
"DATA",811.4,3,0)
VA-DATE OF DEATH^PXRMPDEM^DOD^Date of Death
"DATA",811.4,4,0)
VA-PRIMARY CARE PROVIDER^PXRMPCIN^PROVIDER^PCMM Primary Care Provider
"DATA",811.4,4,1,0)
^^3^3^3000419^
"DATA",811.4,4,1,1,0)
Patient's primary care provider.  This is the name field from the NEW
"DATA",811.4,4,1,2,0)
PERSON file (#200).  If no primary care provider has been assigned, this
"DATA",811.4,4,1,3,0)
will be null.
"DATA",811.4,5,0)
VA-PRIMARY CARE TEAM^PXRMPCIN^TEAM^PCMM Primary Care Team
"DATA",811.4,5,1,0)
^^1^1^3000419^
"DATA",811.4,5,1,1,0)
 
"DATA",811.4,6,0)
VA-RACE^PXRMPDEM^RACE^Race
"DATA",811.4,6,1,0)
^^2^2^3000419^
"DATA",811.4,6,1,1,0)
Patient's race.  This will correspond to one of the entries in the name
"DATA",811.4,6,1,2,0)
field of the RACE file (#10).  These will be in the form IEN^RACE
"DATA",811.5,1,0)
DECLINED HEP C RISK ASSESSMENT^N^1^3000424^3000607
"DATA",811.5,1,1,0)
^^3^3^3000511^
"DATA",811.5,1,1,1,0)
This term represents patient declined or refused to have the Hepatitis C
"DATA",811.5,1,1,2,0)
Risk Assessment . Add any health factors or other finding items that your
"DATA",811.5,1,1,3,0)
local site uses to represent this term.
"DATA",811.5,1,20,0)
^811.52V^^0
"DATA",811.5,2,0)
NO RISK FACTORS FOR HEP C^N^1^3000424
"DATA",811.5,2,1,0)
^811.51^3^3^3000510^^
"DATA",811.5,2,1,1,0)
This term represents patient findings that indicate the patient has no
"DATA",811.5,2,1,2,0)
risk factors related to Hepatitis C. Add any health factors or other
"DATA",811.5,2,1,3,0)
finding items that your local site uses to represent this term.
"DATA",811.5,2,20,0)
^811.52V^^0
"DATA",811.5,3,0)
PREV POSITIVE TEST FOR HEP C^N^1^3000424^
"DATA",811.5,3,1,0)
^811.51^4^4^3000510^^^
"DATA",811.5,3,1,1,0)
This term represents a known positive test result for hepatitis C based on
"DATA",811.5,3,1,2,0)
historical information that is not available from the local Laboratory
"DATA",811.5,3,1,3,0)
package data. Add any health factors or other finding items that your
"DATA",811.5,3,1,4,0)
local site uses to represent this term.
"DATA",811.5,3,20,0)
^811.52V^^0
"DATA",811.5,4,0)
RISK FACTOR FOR HEPATITIS C^N^1^3000424
"DATA",811.5,4,1,0)
^811.51^3^3^3000510^^
"DATA",811.5,4,1,1,0)
This term represents findings that indicate the patient has risk factors
"DATA",811.5,4,1,2,0)
for Hepatitis C. Add any health factors or other finding items that your
"DATA",811.5,4,1,3,0)
local site uses to represent this term.  
"DATA",811.5,4,20,0)
^811.52V^^0
"DATA",811.5,5,0)
HEP C VIRUS ANTIBODY POSITIVE^N^1^3000504
"DATA",811.5,5,1,0)
^^7^7^3000510^
"DATA",811.5,5,1,1,0)
This term represents positive test results on laboratory tests for
"DATA",811.5,5,1,2,0)
Hepatitis C virus antibody. Add the local hepatitis C virus antibody
"DATA",811.5,5,1,3,0)
laboratory tests as findings for this term. Include the CONDITION field to
"DATA",811.5,5,1,4,0)
check for the positive result value.
"DATA",811.5,5,1,5,0)
 
"DATA",811.5,5,1,6,0)
Findings can also be added for other lab tests that indicate the patient
"DATA",811.5,5,1,7,0)
has Hepatitis C, such as viral load. 
"DATA",811.5,6,0)
HEP C VIRUS ANTIBODY NEGATIVE^N^1^3000504^3000609
"DATA",811.5,6,1,0)
^^4^4^3000510^
"DATA",811.5,6,1,1,0)
This term represents negative test results on laboratory tests for
"DATA",811.5,6,1,2,0)
Hepatitis C virus antibody.  Add the local hepatitis C virus antibody
"DATA",811.5,6,1,3,0)
laboratory tests as findings for this term. Include the CONDITION field to
"DATA",811.5,6,1,4,0)
check for the negative result value.
"DATA",811.5,7,0)
HEPATITIS C INFECTION^N^1^3000504
"DATA",811.5,7,1,0)
^811.51^1^1^3000511^^^^
"DATA",811.5,7,1,1,0)
This term represents patient diagnosed with Hepatitis C infection.
"DATA",811.5,7,20,0)
^811.52V^^0
"DATA",811.6,1,0)
INFECTIOUS DISEASES PROGRAM OFFICE, VAHQ^N^^^
"DATA",811.9,1,0)
VA-BREAST EXAM^2^Breast Exam^0M^^^^^F
"DATA",811.9,1,1,0)
^^5^5^2960611^^^
"DATA",811.9,1,1,1,0)
A breast exam is due yearly for females 40 and older. If the female has a
"DATA",811.9,1,1,2,0)
history of breast cancer, check for ongoing follow-up yearly.
"DATA",811.9,1,1,3,0)
 
"DATA",811.9,1,1,4,0)
This reminder is based on guidelines defined by the Ambulatory Care Expert
"DATA",811.9,1,1,5,0)
Panel.
"DATA",811.9,1,2,0)
^^14^14^2960611^^
"DATA",811.9,1,2,1,0)
If this reminder is not going to be used at your facility, the INACTIVE
"DATA",811.9,1,2,2,0)
FLAG should be set to inactive.
"DATA",811.9,1,2,3,0)
 
"DATA",811.9,1,2,4,0)
Review the taxonomy findings definition being used to represent breast
"DATA",811.9,1,2,5,0)
cancer. Use the List Taxonomy Items option to see the coded values defined
"DATA",811.9,1,2,6,0)
for the taxonomy.  If a taxonomy needs modifications, copy the taxonomy
"DATA",811.9,1,2,7,0)
and make appropriate modifications to the new taxonomy item.
"DATA",811.9,1,2,8,0)
 
"DATA",811.9,1,2,9,0)
Check the Exam file entries referenced and make modifications as needed 
"DATA",811.9,1,2,10,0)
for local representation of exams.
"DATA",811.9,1,2,11,0)
 
"DATA",811.9,1,2,12,0)
If any changes to the reminder definition are needed, copy this reminder
"DATA",811.9,1,2,13,0)
to a new reminder for your sites use, and make the appropriate
"DATA",811.9,1,2,14,0)
modifications.
"DATA",811.9,1,3,0)
^811.94P^2^1
"DATA",811.9,1,3,2,0)
9999999.15
"DATA",811.9,1,3,2,1,0)
^^4^4^2960812^^^^
"DATA",811.9,1,3,2,1,1,0)
The Exam file is used to identify any exams that indicate a breast exam.
"DATA",811.9,1,3,2,1,2,0)
The initial set of Exam entires includes "BREAST", which should be set up
"DATA",811.9,1,3,2,1,3,0)
as a selection item for this file criteria, or create a new entry in the
"DATA",811.9,1,3,2,1,4,0)
exam file and identify it as a selection item here.
"DATA",811.9,1,3,2,2,0)
^811.944V^1^1
"DATA",811.9,1,3,2,2,1,0)
6;AUTTEXAM(
"DATA",811.9,1,3,2,4,0)
^^2^2^2960812^^^^
"DATA",811.9,1,3,2,4,1,0)
Date of last breast exam unknown.  Please document last exam or perform
"DATA",811.9,1,3,2,4,2,0)
today.
"DATA",811.9,1,4,0)
^811.95P^1^1
"DATA",811.9,1,4,1,0)
18
"DATA",811.9,1,7,0)
^811.97^1^1
"DATA",811.9,1,7,1,0)
1Y^40
"DATA",811.9,1,20,0)
^811.902V^2^2
"DATA",811.9,1,20,1,0)
6;AUTTEXAM(^^^^^!^^
"DATA",811.9,1,20,1,2,0)
^^2^2^2990726
"DATA",811.9,1,20,1,2,1,0)
Date of last breast exam unknown.  Please document last exam or perform
"DATA",811.9,1,20,1,2,2,0)
today.
"DATA",811.9,1,20,2,0)
18;PXD(811.2,^^^^^^^^^^
"DATA",811.9,1,31)
(SEX)&(AGE)
"DATA",811.9,1,32)
0^
"DATA",811.9,1,35)
(0)!FI(1)
"DATA",811.9,1,36)
1^1
"DATA",811.9,1,40)
0^
"DATA",811.9,1,42)
1^2
"DATA",811.9,2,0)
VA-*PROBLEM DRINKING SCREEN^1^Problem Drinking Screen^1M^2
"DATA",811.9,2,1,0)
^^21^21^2970224^
"DATA",811.9,2,1,1,0)
The "VA-*Problem Drinking Screening" education reminder is based on the
"DATA",811.9,2,1,2,0)
following "Problem Drinking and Alcohol Moderation Counseling" guidelines
"DATA",811.9,2,1,3,0)
specified in the VHA HANDBOOK 1101.8, APPENDIX A.
"DATA",811.9,2,1,4,0)
 
"DATA",811.9,2,1,5,0)
    Target Conditions: Problem drinking, alcohol dependence,
"DATA",811.9,2,1,6,0)
                       medical complications of alcohol use,
"DATA",811.9,2,1,7,0)
                       accidents and violence.
"DATA",811.9,2,1,8,0)
 
"DATA",811.9,2,1,9,0)
    Target Group:      Outpatient experiencing medical or social problems
"DATA",811.9,2,1,10,0)
                       attributable to alcohol use.
"DATA",811.9,2,1,11,0)
 
"DATA",811.9,2,1,12,0)
    Recommendation:    Primary care clinicians should routinely ask their
"DATA",811.9,2,1,13,0)
                       patients to describe their use of alcohol.
"DATA",811.9,2,1,14,0)
                       High risk patients (3 or more drinks daily)  
"DATA",811.9,2,1,15,0)
                       should be referred for counseling.
"DATA",811.9,2,1,16,0)
 
"DATA",811.9,2,1,17,0)
    Goals for FY 2000: 100% of VHA facilities have an alcohol treatment
"DATA",811.9,2,1,18,0)
                       program or access to one. 75% of primary
"DATA",811.9,2,1,19,0)
                       care providers should screen for alcohol
"DATA",811.9,2,1,20,0)
                       problems yearly and provide counseling and
"DATA",811.9,2,1,21,0)
                       referral as needed.
"DATA",811.9,2,2,0)
^^18^18^2970206^^^
"DATA",811.9,2,2,1,0)
If this reminder is not going to be used at your facility, the INACTIVE
"DATA",811.9,2,2,2,0)
FLAG should be set to inactive.
"DATA",811.9,2,2,3,0)
 
"DATA",811.9,2,2,4,0)
This reminder represents the minimum criteria for checking if the
"DATA",811.9,2,2,5,0)
patient has been screened for problem drinking.  The "VA-ALCOHOL ABUSE
"DATA",811.9,2,2,6,0)
SCREENING" education topic is the result finding that will satisfy this
"DATA",811.9,2,2,7,0)
reminder.
"DATA",811.9,2,2,8,0)
 
"DATA",811.9,2,2,9,0)
The Ambulatory Care EP recommends a variation on this reminder represented
"DATA",811.9,2,2,10,0)
in the "VA-ALCOHOL ABUSE EDUCATION" reminder. This reminder includes a
"DATA",811.9,2,2,11,0)
check for a diagnoses documented for the patient that would indicate the
"DATA",811.9,2,2,12,0)
patient has a problem related to alcohol abuse.  It also references all of
"DATA",811.9,2,2,13,0)
the alcohol abuse education topics that are distributed by PCE, which
"DATA",811.9,2,2,14,0)
could satisfy the reminder. 
"DATA",811.9,2,2,15,0)
 
"DATA",811.9,2,2,16,0)
Please review both of these reminder definitions, choose one of them to
"DATA",811.9,2,2,17,0)
use.  If local modifications need to be made, copy the preferred reminder
"DATA",811.9,2,2,18,0)
to a new reminder and make your reminder modifications.
"DATA",811.9,2,3,0)
^811.94P^2^1
"DATA",811.9,2,3,2,0)
9999999.09
"DATA",811.9,2,3,2,1,0)
^^8^8^2970206^^^^
"DATA",811.9,2,3,2,1,1,0)
The Education Topic related to "Alcohol Abuse Screening education" should
"DATA",811.9,2,3,2,1,2,0)
be specified in the target result items.  The target result items will be
"DATA",811.9,2,3,2,1,3,0)
used to determine when, and if the education/screening is due.
"DATA",811.9,2,3,2,1,4,0)
 
"DATA",811.9,2,3,2,1,5,0)
If the Alcohol Abuse Screening education topic related to "Alcohol Abuse"
"DATA",811.9,2,3,2,1,6,0)
screening has been documented for the patient, the latest education will
"DATA",811.9,2,3,2,1,7,0)
be displayed in the Health Summary Clinical Maintenance component,
"DATA",811.9,2,3,2,1,8,0)
otherwise the reminder will be "DUE NOW".
"DATA",811.9,2,3,2,2,0)
^811.944V^1^1
"DATA",811.9,2,3,2,2,1,0)
10;AUTTEDT(
"DATA",811.9,2,4,0)
^811.95P^1^1
"DATA",811.9,2,4,1,0)
34^^^^^1
"DATA",811.9,2,6,0)
^811.911P^2^2
"DATA",811.9,2,6,1,0)
59^^^0Y^^^&'
"DATA",811.9,2,6,2,0)
60
"DATA",811.9,2,7,0)
^811.97^1^1
"DATA",811.9,2,7,1,0)
1Y
"DATA",811.9,2,7,1,1,0)
^^1^1^2970206^
"DATA",811.9,2,7,1,1,1,0)
Screen for alcohol problems yearly for all patients.
"DATA",811.9,2,20,0)
^811.902V^4^4
"DATA",811.9,2,20,1,0)
10;AUTTEDT(^^^^^!^^
"DATA",811.9,2,20,2,0)
34;PXD(811.2,^^^^^!^^^^^
"DATA",811.9,2,20,3,0)
59;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,2,20,4,0)
60;AUTTHF(^^^^^^^^^^
"DATA",811.9,2,31)
(SEX)&(AGE)&'FI(3)
"DATA",811.9,2,32)
1^3
"DATA",811.9,2,35)
(0)!FI(1)!FI(2)
"DATA",811.9,2,36)
2^1;2
"DATA",811.9,2,40)
1^3
"DATA",811.9,2,42)
1^4
"DATA",811.9,3,0)
VA-BLOOD PRESSURE CHECK^4^Blood Pressure Check^3M^5
"DATA",811.9,3,1,0)
^^11^11^2970421^^^
"DATA",811.9,3,1,1,0)
BP due yearly for patients with no DX of hypertension, any age.
"DATA",811.9,3,1,2,0)
BP due at all visits for patients with DX of hypertension or
"DATA",811.9,3,1,3,0)
cardiovascular disease, any age.
"DATA",811.9,3,1,4,0)
 
"DATA",811.9,3,1,5,0)
The VA-Blood Pressure Check reminder is based on baseline guidelines
"DATA",811.9,3,1,6,0)
defined by the Ambulatory Care Expert Panel and depends on your site
"DATA",811.9,3,1,7,0)
entering Blood Pressure measurement values into the "Vital Measurement"
"DATA",811.9,3,1,8,0)
file.  This reminder is different than the VA-HYPERTENSION SCREEN
"DATA",811.9,3,1,9,0)
reminder which is an Education type reminder which simply checks for the
"DATA",811.9,3,1,10,0)
existence of a Hypertension Screening being asked, and not whether the
"DATA",811.9,3,1,11,0)
Blood pressure value is documented.
"DATA",811.9,3,2,0)
^^9^9^2970211^^
"DATA",811.9,3,2,1,0)
Review the Taxonomy definition for hypertension and cardiovascular disease
"DATA",811.9,3,2,2,0)
in the PCE Taxonomy file.  Use the taxonomies as distributed or copy a new
"DATA",811.9,3,2,3,0)
taxonomy for local use and make the appropriate modifications. 
"DATA",811.9,3,2,4,0)
 
"DATA",811.9,3,2,5,0)
Either accept the VA- reminder definition or create a local reminder
"DATA",811.9,3,2,6,0)
definition by copying the VA- reminder definition to a local reminder.
"DATA",811.9,3,2,7,0)
 
"DATA",811.9,3,2,8,0)
BP for Blood Pressure should be named as the Result Findings item from
"DATA",811.9,3,2,9,0)
the Vital Type file.
"DATA",811.9,3,3,0)
^811.94P^1^1
"DATA",811.9,3,3,1,0)
120.51
"DATA",811.9,3,3,1,1,0)
^^1^1^2970211^^^^
"DATA",811.9,3,3,1,1,1,0)
The Vital Type file is used to identify BP (Blood Pressure) type entries.
"DATA",811.9,3,3,1,2,0)
^811.944V^1^1
"DATA",811.9,3,3,1,2,1,0)
1;GMRD(120.51,
"DATA",811.9,3,3,1,4,0)
^^1^1^2970211^
"DATA",811.9,3,3,1,4,1,0)
Vitals: Date of last Vitals blood pressure measurement unknown.
"DATA",811.9,3,4,0)
^811.95P^2^2
"DATA",811.9,3,4,1,0)
1^^^1D^1
"DATA",811.9,3,4,1,1,0)
^^2^2^2990222^^^^
"DATA",811.9,3,4,1,1,1,0)
History of hypertension on record. BP due every visit in patients
"DATA",811.9,3,4,1,1,2,0)
with HTN.
"DATA",811.9,3,4,1,2,0)
^^1^1^2990222^^^^
"DATA",811.9,3,4,1,2,1,0)
No HX of HTN on file.  No HX of hypertension presumed.
"DATA",811.9,3,4,2,0)
23^^^2Y^^1
"DATA",811.9,3,7,0)
^811.97^1^1
"DATA",811.9,3,7,1,0)
2Y
"DATA",811.9,3,20,0)
^811.902V^3^3
"DATA",811.9,3,20,1,0)
1;GMRD(120.51,^^^^^!^^
"DATA",811.9,3,20,1,2,0)
^^1^1^2990726
"DATA",811.9,3,20,1,2,1,0)
Vitals: Date of last Vitals blood pressure measurement unknown.
"DATA",811.9,3,20,2,0)
1;PXD(811.2,^^^1D^1^^^^^^
"DATA",811.9,3,20,2,1,0)
^^2^2^2990726
"DATA",811.9,3,20,2,1,1,0)
History of hypertension on record. BP due every visit in patients
"DATA",811.9,3,20,2,1,2,0)
with HTN.
"DATA",811.9,3,20,2,2,0)
^^1^1^2990726
"DATA",811.9,3,20,2,2,1,0)
No HX of HTN on file.  No HX of hypertension presumed.
"DATA",811.9,3,20,3,0)
23;PXD(811.2,^^^2Y^^!^^^^^
"DATA",811.9,3,31)
(SEX)&(AGE)
"DATA",811.9,3,32)
0^
"DATA",811.9,3,35)
(0)!FI(1)!FI(3)
"DATA",811.9,3,36)
2^1;3
"DATA",811.9,3,40)
2^2;3
"DATA",811.9,3,42)
0^
"DATA",811.9,4,0)
VA-*BREAST CANCER SCREEN^5^Breast Cancer Screen^1M^4^^^S^F
"DATA",811.9,4,1,0)
^^15^15^2970602^^^
"DATA",811.9,4,1,1,0)
Mammogram should be given every 2 years to female patients, ages 50-69.
"DATA",811.9,4,1,2,0)
 
"DATA",811.9,4,1,3,0)
The "VA-*Breast Cancer Screen" reminder is based on the following "Breast
"DATA",811.9,4,1,4,0)
Cancer Detection" guidelines specified in the VHA HANDBOOK 1101.8,
"DATA",811.9,4,1,5,0)
APPENDIX A.
"DATA",811.9,4,1,6,0)
 
"DATA",811.9,4,1,7,0)
     Target Condition: Early detection of breast cancer.
"DATA",811.9,4,1,8,0)
 
"DATA",811.9,4,1,9,0)
     Target Group:     All women ages 50-69.
"DATA",811.9,4,1,10,0)
 
"DATA",811.9,4,1,11,0)
     Recommendation:   All women ages 50-69 should receive a mammogram
"DATA",811.9,4,1,12,0)
                       every two years.
"DATA",811.9,4,1,13,0)
 
"DATA",811.9,4,1,14,0)
     Goals for FY2000: At least 60% of women ages 50-69 have received a
"DATA",811.9,4,1,15,0)
                       mammogram within the preceding two years.
"DATA",811.9,4,2,0)
^^11^11^2970602^^^^
"DATA",811.9,4,2,1,0)
The findings for mammogram screening are based on defining CPT codes
"DATA",811.9,4,2,2,0)
and V-codes from the ICD Diagnosis file that represent mammograms and
"DATA",811.9,4,2,3,0)
mammogram screening in a taxonomy for Mammogram/Screen.  The CPT codes are
"DATA",811.9,4,2,4,0)
used to search the Radiology procedures in the Radiology package, as well
"DATA",811.9,4,2,5,0)
as checks for existence of a CPT code in the V CPT file.  The V-codes are
"DATA",811.9,4,2,6,0)
used to search the Problem List, V POV (problems of visits), and Inpatient
"DATA",811.9,4,2,7,0)
Diagnosis PTF files.
"DATA",811.9,4,2,8,0)
 
"DATA",811.9,4,2,9,0)
The reminder will be "DUE NOW" until a procedure or diagnosis (V-code) is
"DATA",811.9,4,2,10,0)
documented to reflect a mammogram/screening done at a current encounter or
"DATA",811.9,4,2,11,0)
a historical encounter within the past two years.
"DATA",811.9,4,4,0)
^811.95P^1^1
"DATA",811.9,4,4,1,0)
16^50^69^2Y^^1
"DATA",811.9,4,4,1,1,0)
^^1^1^2970602^^^
"DATA",811.9,4,4,1,1,1,0)
History of mammogram/screen on file.
"DATA",811.9,4,4,1,2,0)
^^1^1^2970602^^^
"DATA",811.9,4,4,1,2,1,0)
Date of last mammogram/screen unknown. 
"DATA",811.9,4,6,0)
^811.911P^2^2
"DATA",811.9,4,6,1,0)
42^^^0Y^^^&'
"DATA",811.9,4,6,2,0)
43
"DATA",811.9,4,7,0)
^811.97^1^1
"DATA",811.9,4,7,1,0)
2Y^50^69
"DATA",811.9,4,7,1,1,0)
^^1^1^2970602^^^^
"DATA",811.9,4,7,1,1,1,0)
All women ages 50-69 should receive a mammogram every two years. 
"DATA",811.9,4,20,0)
^811.902V^3^3
"DATA",811.9,4,20,1,0)
16;PXD(811.2,^50^69^2Y^^!^^^^^
"DATA",811.9,4,20,1,1,0)
^^2^2^2990726
"DATA",811.9,4,20,1,1,1,0)
History of mammogram/screen on file.
"DATA",811.9,4,20,1,1,2,0)
with HTN.
"DATA",811.9,4,20,1,2,0)
^^1^1^2990726
"DATA",811.9,4,20,1,2,1,0)
Date of last mammogram/screen unknown. 
"DATA",811.9,4,20,2,0)
42;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,4,20,3,0)
43;AUTTHF(^^^^^^^^^^
"DATA",811.9,4,31)
(SEX)&(AGE)&'FI(2)
"DATA",811.9,4,32)
1^2
"DATA",811.9,4,35)
(0)!FI(1)
"DATA",811.9,4,36)
1^1
"DATA",811.9,4,40)
2^1;2
"DATA",811.9,4,42)
1^3
"DATA",811.9,5,0)
VA-*HYPERTENSION SCREEN^4^Hypertension Detection^3M^5
"DATA",811.9,5,1,0)
^^15^15^2970224^
"DATA",811.9,5,1,1,0)
BP due every two years to detect hypertension. 
"DATA",811.9,5,1,2,0)
 
"DATA",811.9,5,1,3,0)
This VA-*HYPERTENSION SCREEN reminder is defined based on the following
"DATA",811.9,5,1,4,0)
"Hypertension Detection" guidelines specified in the VHA HANDBOOK 1101.8,
"DATA",811.9,5,1,5,0)
APPENDIX A.
"DATA",811.9,5,1,6,0)
 
"DATA",811.9,5,1,7,0)
    Target Condition: Hypertension, Cardiovascular Disease
"DATA",811.9,5,1,8,0)
 
"DATA",811.9,5,1,9,0)
    Target Group: General outpatient population
"DATA",811.9,5,1,10,0)
 
"DATA",811.9,5,1,11,0)
    Recommendation: Check blood pressure at least once every two years
"DATA",811.9,5,1,12,0)
    for all Primary Care clinic patients.
"DATA",811.9,5,1,13,0)
 
"DATA",811.9,5,1,14,0)
    Goal for FY2000: 90% of Primary Care clinic patients have had their
"DATA",811.9,5,1,15,0)
    blood pressure checked in the past two years.
"DATA",811.9,5,2,0)
^^17^17^2970206^^^
"DATA",811.9,5,2,1,0)
If this reminder is not going to be used at your facility, the INACTIVE
"DATA",811.9,5,2,2,0)
FLAG should be set to inactive.
"DATA",811.9,5,2,3,0)
 
"DATA",811.9,5,2,4,0)
This reminder represents the minimum criteria for checking if the patient
"DATA",811.9,5,2,5,0)
has received a blood pressure check.  As distributed, the reminder checks
"DATA",811.9,5,2,6,0)
for an ICD Diagnosis or a CPT procedure code representing "Hypertension
"DATA",811.9,5,2,7,0)
Screen", or a record of a blood pressure (BP) in the Vitals/Measurements
"DATA",811.9,5,2,8,0)
package.
"DATA",811.9,5,2,9,0)
 
"DATA",811.9,5,2,10,0)
The Ambulatory Care EP recommends a variation on this reminder
"DATA",811.9,5,2,11,0)
represented in the "VA-BLOOD PRESSURE CHECK" reminder.  This reminder
"DATA",811.9,5,2,12,0)
includes an alteration of the blood pressure reminder guidelines when the
"DATA",811.9,5,2,13,0)
patient has a history of hypertension on file.
"DATA",811.9,5,2,14,0)
 
"DATA",811.9,5,2,15,0)
Please review both of these reminder definitions, choose one of them to
"DATA",811.9,5,2,16,0)
use.  If local modifications need to be made, copy the preferred reminder
"DATA",811.9,5,2,17,0)
to a new reminder and make your reminder modifications.
"DATA",811.9,5,3,0)
^811.94P^1^1
"DATA",811.9,5,3,1,0)
120.51
"DATA",811.9,5,3,1,1,0)
^^1^1^2970206^^^^
"DATA",811.9,5,3,1,1,1,0)
The Vital Type file is used to identify BP  (Blood Pressure) type entries.
"DATA",811.9,5,3,1,2,0)
^811.944V^1^1
"DATA",811.9,5,3,1,2,1,0)
1;GMRD(120.51,
"DATA",811.9,5,3,1,4,0)
^^1^1^2970206^
"DATA",811.9,5,3,1,4,1,0)
Vitals: Date of last Vitals BP Measurement unknown.
"DATA",811.9,5,4,0)
^811.95P^1^1
"DATA",811.9,5,4,1,0)
23^^^2Y^^1
"DATA",811.9,5,4,1,2,0)
^^1^1^2970206^^^
"DATA",811.9,5,4,1,2,1,0)
Date of last ICD or CPT coded hypertension screen unknown.
"DATA",811.9,5,7,0)
^811.97^1^1
"DATA",811.9,5,7,1,0)
2Y
"DATA",811.9,5,20,0)
^811.902V^2^2
"DATA",811.9,5,20,1,0)
1;GMRD(120.51,^^^^^!^^
"DATA",811.9,5,20,1,2,0)
^^1^1^2990726
"DATA",811.9,5,20,1,2,1,0)
Vitals: Date of last Vitals BP Measurement unknown.
"DATA",811.9,5,20,2,0)
23;PXD(811.2,^^^2Y^^!^^^^^
"DATA",811.9,5,20,2,2,0)
^^1^1^2990726
"DATA",811.9,5,20,2,2,1,0)
Date of last ICD or CPT coded hypertension screen unknown.
"DATA",811.9,5,31)
(SEX)&(AGE)
"DATA",811.9,5,32)
0^
"DATA",811.9,5,35)
(0)!FI(1)!FI(2)
"DATA",811.9,5,36)
2^1;2
"DATA",811.9,5,40)
1^2
"DATA",811.9,5,42)
0^
"DATA",811.9,6,0)
VA-*COLORECTAL CANCER SCREEN (FOBT)^2^Fecal Occult Blood Test^1M^6^^^
"DATA",811.9,6,1,0)
^^21^21^2970224^
"DATA",811.9,6,1,1,0)
Fecal occult blood test due every year for patients ages 50 and older, or
"DATA",811.9,6,1,2,0)
5 years after the last Sigmoidoscopy.  The 5 years is a conservative
"DATA",811.9,6,1,3,0)
period recommended by a blue ribbon panel publishing their findings in the
"DATA",811.9,6,1,4,0)
February 1997 issue of "Gastroenterology" magazine. 
"DATA",811.9,6,1,5,0)
  
"DATA",811.9,6,1,6,0)
This VA-*COLORECTAL CANCER SCREEN - FOBT reminder is based on the
"DATA",811.9,6,1,7,0)
"Colorectal Cancer Detection" guidelines specified in the VHA HANDBOOK
"DATA",811.9,6,1,8,0)
1101.8, APPENDIX A.
"DATA",811.9,6,1,9,0)
 
"DATA",811.9,6,1,10,0)
    Target Condition: Early detection of colon cancer or its predecessors.
"DATA",811.9,6,1,11,0)
 
"DATA",811.9,6,1,12,0)
    Target Group: All persons ages 50 and older.
"DATA",811.9,6,1,13,0)
 
"DATA",811.9,6,1,14,0)
    Recommendation: All persons age 50 and older should receive an annual
"DATA",811.9,6,1,15,0)
    fecal occult blood test or undergo a sigmoidoscopy examination
"DATA",811.9,6,1,16,0)
    (periodicity unspecified).
"DATA",811.9,6,1,17,0)
 
"DATA",811.9,6,1,18,0)
    Goals for FY 2000: For persons age 50 and older: 50 percent of those
"DATA",811.9,6,1,19,0)
    enrolled in primary care clinics have received fecal occult blood
"DATA",811.9,6,1,20,0)
    testing within the preceding year and 40 percent have received at
"DATA",811.9,6,1,21,0)
    least one proctosigmoidoscopy examination in their lifetime.
"DATA",811.9,6,2,0)
^^25^25^2970421^^^
"DATA",811.9,6,2,1,0)
This reminder is based on Taxonomy Findings from FOBT, "or" SIG cancer
"DATA",811.9,6,2,2,0)
screening, "and" FOBT exam results recorded from a clinic encounter as
"DATA",811.9,6,2,3,0)
an EXAM. See the definition for VA-*COLORECTAL CANCER SCREEN (SIG.)
"DATA",811.9,6,2,4,0)
also. These two reminders work together for assessing cancer screening. 
"DATA",811.9,6,2,5,0)
 
"DATA",811.9,6,2,6,0)
The FOBT is due annually, unless a SIG is found. The SIG found changes the
"DATA",811.9,6,2,7,0)
frequency to due once in a lifetime (99Y) according to the M-2 document,
"DATA",811.9,6,2,8,0)
but a more conservative approach is encouraged by the National Center for
"DATA",811.9,6,2,9,0)
Health Promotion to use 5 years (5Y).  The SIG found changes the frequency
"DATA",811.9,6,2,10,0)
to due every 5 years for patients 50 and older (note the rank of 2). After
"DATA",811.9,6,2,11,0)
a SIG has been received by the patient, if the clinician determines the
"DATA",811.9,6,2,12,0)
FOBT should be given to this patient again annually, the FOBT can be
"DATA",811.9,6,2,13,0)
activated again by entering the Health Factor "ACTIVATE FOBT CANCER
"DATA",811.9,6,2,14,0)
SCREEN" for the patient (Note the rank of 1).
"DATA",811.9,6,2,15,0)
 
"DATA",811.9,6,2,16,0)
Check the Taxonomy Findings entries representing Fecal Occult Blood Test
"DATA",811.9,6,2,17,0)
and VA-FLEXISIGMOIDOSCOPY. The taxonomies represent coded standard entries
"DATA",811.9,6,2,18,0)
in the CPT file and ICD Operation/Procedure file.  If one of these
"DATA",811.9,6,2,19,0)
taxonomies need modification, copy the taxonomy to a new taxonomy for your
"DATA",811.9,6,2,20,0)
site, and make the appropriate modifications. THAN, copy the reminder to a
"DATA",811.9,6,2,21,0)
new reminder to add your local sites modifications.
"DATA",811.9,6,2,22,0)
 
"DATA",811.9,6,2,23,0)
This reminder cannot make use of the Laboratory package data at this time
"DATA",811.9,6,2,24,0)
because the Occult Blood results are Microbiology tests that do not
"DATA",811.9,6,2,25,0)
reflect the Laboratory Test done, or the related CPT code.
"DATA",811.9,6,3,0)
^811.94P^1^1
"DATA",811.9,6,3,1,0)
9999999.15
"DATA",811.9,6,3,1,1,0)
^^6^6^2970212^^^^
"DATA",811.9,6,3,1,1,1,0)
If your site has clinicians performing fecal occult blood tests in their
"DATA",811.9,6,3,1,1,2,0)
clinics, this test can be captured as an EXAM with normal and abnormal
"DATA",811.9,6,3,1,1,3,0)
results by using the FOBT(CLINIC) EXAM in PCE's EXAM file.
"DATA",811.9,6,3,1,1,4,0)
 
"DATA",811.9,6,3,1,1,5,0)
If your site only uses CPT codes, than this EXAM result will not be found,
"DATA",811.9,6,3,1,1,6,0)
but the reminder can still be used based on the Taxonomy Findings.
"DATA",811.9,6,3,1,2,0)
^811.944V^1^1
"DATA",811.9,6,3,1,2,1,0)
660001;AUTTEXAM(
"DATA",811.9,6,4,0)
^811.95P^3^3
"DATA",811.9,6,4,1,0)
27^^^^^1
"DATA",811.9,6,4,2,0)
15^50^^5Y^2^1
"DATA",811.9,6,4,2,1,0)
^^1^1^2970211^
"DATA",811.9,6,4,2,1,1,0)
FOBT due 5 years after the last sigmoidoscopy.
"DATA",811.9,6,4,3,0)
31
"DATA",811.9,6,4.2,0)
^^1^1^2970212^^^^
"DATA",811.9,6,4.2,1,0)
Date of last FOBT or SIG, unknown. 
"DATA",811.9,6,6,0)
^811.911P^2^2
"DATA",811.9,6,6,1,0)
49^^^^^^&'
"DATA",811.9,6,6,2,0)
50^50^^1Y^1
"DATA",811.9,6,7,0)
^811.97^1^1
"DATA",811.9,6,7,1,0)
1Y^50
"DATA",811.9,6,20,0)
^811.902V^6^6
"DATA",811.9,6,20,1,0)
660001;AUTTEXAM(^^^^^!^^
"DATA",811.9,6,20,2,0)
27;PXD(811.2,^^^^^!^^^^^
"DATA",811.9,6,20,3,0)
15;PXD(811.2,^50^^5Y^2^!^^^^^
"DATA",811.9,6,20,3,1,0)
^^1^1^2990726
"DATA",811.9,6,20,3,1,1,0)
FOBT due 5 years after the last sigmoidoscopy.
"DATA",811.9,6,20,4,0)
31;PXD(811.2,^^^^^^^^^^
"DATA",811.9,6,20,5,0)
49;AUTTHF(^^^^^^&'^^^^
"DATA",811.9,6,20,6,0)
50;AUTTHF(^50^^1Y^1^^^^^^
"DATA",811.9,6,31)
(SEX)&(AGE)&'FI(5)
"DATA",811.9,6,32)
1^5
"DATA",811.9,6,35)
(0)!FI(1)!FI(2)!FI(3)
"DATA",811.9,6,36)
3^1;2;3
"DATA",811.9,6,40)
2^3;6
"DATA",811.9,6,42)
1^4
"DATA",811.9,6,51)

"DATA",811.9,7,0)
VA-*CHOLESTEROL SCREEN (F)^7^Cholesterol Screen (Female)^3M^7^^^S^F
"DATA",811.9,7,1,0)
^^14^14^2970423^^^
"DATA",811.9,7,1,1,0)
This Cholesterol screen reminder for females is based on the following
"DATA",811.9,7,1,2,0)
"Hyperlipidemia Detection" guidelines specified in the "VHA HANDBOOK
"DATA",811.9,7,1,3,0)
1101.8, APPENDIX A.
"DATA",811.9,7,1,4,0)
 
"DATA",811.9,7,1,5,0)
    Target Conditions: Cardiovascular Disease.
"DATA",811.9,7,1,6,0)
 
"DATA",811.9,7,1,7,0)
    Target Group: Females 45-65.
"DATA",811.9,7,1,8,0)
 
"DATA",811.9,7,1,9,0)
    Recommendation: Check total cholesterol level within the past
"DATA",811.9,7,1,10,0)
    five years.
"DATA",811.9,7,1,11,0)
 
"DATA",811.9,7,1,12,0)
    Goal for FY 2000: 75% of females ages 45-65 Primary Care clinic
"DATA",811.9,7,1,13,0)
    patients have had a blood cholesterol level check within the past
"DATA",811.9,7,1,14,0)
    five years.
"DATA",811.9,7,2,0)
^^13^13^2970421^^^^
"DATA",811.9,7,2,1,0)
As distributed, this reminder is based on CPT codes which represent
"DATA",811.9,7,2,2,0)
cholesterol tests the patient has had documented in PCE.  These may be CPT
"DATA",811.9,7,2,3,0)
codes for cholesterol done by the Laboratory Service, or a historical
"DATA",811.9,7,2,4,0)
encounter documented to show when the cholesterol test was last given to
"DATA",811.9,7,2,5,0)
the patient.
"DATA",811.9,7,2,6,0)
 
"DATA",811.9,7,2,7,0)
Copy this reminder to a new reminder for your site. Add the Laboratory
"DATA",811.9,7,2,8,0)
Tests that represent a cholesterol level check in the Result Findings
"DATA",811.9,7,2,9,0)
multiple.
"DATA",811.9,7,2,10,0)
 
"DATA",811.9,7,2,11,0)
PLEASE NOTE: Your local version of this reminder will include the search
"DATA",811.9,7,2,12,0)
based on the local ancillary Lab package results, it is possible that 5
"DATA",811.9,7,2,13,0)
years worth of patient lab history are not on record.
"DATA",811.9,7,3,0)
^811.94P^1^1
"DATA",811.9,7,3,1,0)
60
"DATA",811.9,7,3,1,1,0)
^^3^3^2970211^^^^
"DATA",811.9,7,3,1,1,1,0)
The Laboratory Test file is used to identify CHOLESTEROL lab tests.
"DATA",811.9,7,3,1,1,2,0)
Define Selection Item entries below that should be used for checking the
"DATA",811.9,7,3,1,1,3,0)
DHCP Lab results for Cholesterol values.
"DATA",811.9,7,3,1,4,0)
^^1^1^2970211^
"DATA",811.9,7,3,1,4,1,0)
LAB: Date of last cholesterol test unknown.
"DATA",811.9,7,4,0)
^811.95P^1^1
"DATA",811.9,7,4,1,0)
24^^^^^1
"DATA",811.9,7,6,0)
^811.911P^2^2
"DATA",811.9,7,6,1,0)
48^^^0Y^^^&'
"DATA",811.9,7,6,2,0)
46
"DATA",811.9,7,7,0)
^811.97^1^1
"DATA",811.9,7,7,1,0)
5Y^45^65
"DATA",811.9,7,7,1,1,0)
^^1^1^2970131^^^^
"DATA",811.9,7,7,1,1,1,0)
Check total cholesterol every 5 years for women ages 45-65.
"DATA",811.9,7,7,1,2,0)
^^1^1^2970131^^
"DATA",811.9,7,7,1,2,1,0)
Cholesterol not indicated for women under 45, or over 65.
"DATA",811.9,7,20,0)
^811.902V^3^3
"DATA",811.9,7,20,1,0)
24;PXD(811.2,^^^^^!^^^^^
"DATA",811.9,7,20,2,0)
48;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,7,20,3,0)
46;AUTTHF(^^^^^^^^^^
"DATA",811.9,7,31)
(SEX)&(AGE)&'FI(2)
"DATA",811.9,7,32)
1^2
"DATA",811.9,7,35)
(0)!FI(1)
"DATA",811.9,7,36)
1^1
"DATA",811.9,7,40)
1^2
"DATA",811.9,7,42)
1^3
"DATA",811.9,8,0)
VA-*INFLUENZA IMMUNIZATION^3^Influenza Immunization^1M^8
"DATA",811.9,8,1,0)
^^13^13^2970224^
"DATA",811.9,8,1,1,0)
The "VA-*Influenza Immunization" reminder is based on the following
"DATA",811.9,8,1,2,0)
"Influenza Immunization" guidelines specified in the VHA HANDBOOK 1101.8,
"DATA",811.9,8,1,3,0)
APPENDIX A.
"DATA",811.9,8,1,4,0)
 
"DATA",811.9,8,1,5,0)
    Target Condition: Influenza and its complications.
"DATA",811.9,8,1,6,0)
  
"DATA",811.9,8,1,7,0)
    Target Group: Outpatients age 65 and older.
"DATA",811.9,8,1,8,0)
 
"DATA",811.9,8,1,9,0)
    Recommendation: Influenza vaccine should be administered annually in
"DATA",811.9,8,1,10,0)
    the late fall to all persons age 65 and older.
"DATA",811.9,8,1,11,0)
 
"DATA",811.9,8,1,12,0)
    Goal for FY 2000: 60% of those persons over age 65 have received
"DATA",811.9,8,1,13,0)
    influenza vaccine in the past year.
"DATA",811.9,8,2,0)
^^17^17^2970206^^
"DATA",811.9,8,2,1,0)
If this reminder is not going to be used at your facility, the INACTIVE
"DATA",811.9,8,2,2,0)
FLAG should be set to inactive.
"DATA",811.9,8,2,3,0)
 
"DATA",811.9,8,2,4,0)
This reminder represents the minimum criteria for checking if the patient
"DATA",811.9,8,2,5,0)
has received an influenza immunization. As distributed, the reminder
"DATA",811.9,8,2,6,0)
checks for an "Influenza" immunization in the V Immunization file or its
"DATA",811.9,8,2,7,0)
CPT code equivalent in the V CPT file.
"DATA",811.9,8,2,8,0)
 
"DATA",811.9,8,2,9,0)
The Ambulatory Care EP recommends a variation on this reminder
"DATA",811.9,8,2,10,0)
represented in the "VA-INFLUENZA VACCINE" reminder.  This reminder
"DATA",811.9,8,2,11,0)
includes an alteration of the influenza reminder guidelines when the
"DATA",811.9,8,2,12,0)
patient has a diagnosis which could cause the patient to be at a high
"DATA",811.9,8,2,13,0)
risk for flu or pneumonia.
"DATA",811.9,8,2,14,0)
 
"DATA",811.9,8,2,15,0)
Please review both of these reminder definitions, choose one of them to
"DATA",811.9,8,2,16,0)
use.  If local modifications need to be made, copy the preferred reminder
"DATA",811.9,8,2,17,0)
to a new reminder and make your reminder modifications.
"DATA",811.9,8,3,0)
^811.94P^2^1
"DATA",811.9,8,3,2,0)
9999999.14
"DATA",811.9,8,3,2,1,0)
^^2^2^2970206^^^^
"DATA",811.9,8,3,2,1,1,0)
The immunization file identifies all immunizations to check that represent
"DATA",811.9,8,3,2,1,2,0)
INFLUENZA immunizations.
"DATA",811.9,8,3,2,2,0)
^811.944V^1^1
"DATA",811.9,8,3,2,2,1,0)
12;AUTTIMM(
"DATA",811.9,8,4,0)
^811.95P^1^1
"DATA",811.9,8,4,1,0)
33^^^^^1
"DATA",811.9,8,6,0)
^811.911P^2^2
"DATA",811.9,8,6,1,0)
55^^^0Y^^^&'
"DATA",811.9,8,6,2,0)
56
"DATA",811.9,8,7,0)
^811.97^1^1
"DATA",811.9,8,7,1,0)
1Y^65
"DATA",811.9,8,7,1,1,0)
^^1^1^2970206^^^^
"DATA",811.9,8,7,1,1,1,0)
Influenza vaccine due yearly in patients ages 65 and older.
"DATA",811.9,8,7,1,2,0)
^^1^1^2970206^
"DATA",811.9,8,7,1,2,1,0)
Influenza vaccine not indicated for patients under 65.
"DATA",811.9,8,20,0)
^811.902V^4^4
"DATA",811.9,8,20,1,0)
12;AUTTIMM(^^^^^!^^
"DATA",811.9,8,20,2,0)
33;PXD(811.2,^^^^^!^^^^^
"DATA",811.9,8,20,3,0)
55;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,8,20,4,0)
56;AUTTHF(^^^^^^^^^^
"DATA",811.9,8,31)
(SEX)&(AGE)&'FI(3)
"DATA",811.9,8,32)
1^3
"DATA",811.9,8,35)
(0)!FI(1)!FI(2)
"DATA",811.9,8,36)
2^1;2
"DATA",811.9,8,40)
1^3
"DATA",811.9,8,42)
1^4
"DATA",811.9,9,0)
VA-*WEIGHT AND NUTRITION SCREEN^1^Weight and Nutrition Screen^1M^9
"DATA",811.9,9,1,0)
^^23^23^2970421^^
"DATA",811.9,9,1,1,0)
This VA-*WEIGHT AND NUTRITION SCREEN reminder is based on the following
"DATA",811.9,9,1,2,0)
"Weight Control and Nutrition Counseling" guidelines defined in the
"DATA",811.9,9,1,3,0)
VHA HANDBOOK 1101.8, APPENDIX A.
"DATA",811.9,9,1,4,0)
 
"DATA",811.9,9,1,5,0)
    Target condition: Obesity and associated conditions.
"DATA",811.9,9,1,6,0)
 
"DATA",811.9,9,1,7,0)
    Target Group: General outpatient population.
"DATA",811.9,9,1,8,0)
 
"DATA",811.9,9,1,9,0)
    Recommendation: Primary care clinicians should provide their patients
"DATA",811.9,9,1,10,0)
    with periodic counseling or referral for counseling regarding dietary
"DATA",811.9,9,1,11,0)
    intake of calories, fat (especially saturated fat), cholesterol, and
"DATA",811.9,9,1,12,0)
    fiber.  A nutrition counseling service should be available at each VHA
"DATA",811.9,9,1,13,0)
    facility.
"DATA",811.9,9,1,14,0)
 
"DATA",811.9,9,1,15,0)
    Goals for FY 2000: Reduce dietary fat intake to an average of 30 of
"DATA",811.9,9,1,16,0)
    calories and saturated fats to less than 10%. Increase complex
"DATA",811.9,9,1,17,0)
    carbohydrate and fiber-containing foods in the diet to 5 or more daily
"DATA",811.9,9,1,18,0)
    servings for vegetables and fruits and 6 or more daily servings for
"DATA",811.9,9,1,19,0)
    grain products. Reduce overweight to a prevalence of no more than 20%
"DATA",811.9,9,1,20,0)
    among people age 20 and older.  Women should be encouraged to consume
"DATA",811.9,9,1,21,0)
    1000 mg/day of calcium until menopause and 1500 mg/day thereafter.
"DATA",811.9,9,1,22,0)
    100% of VHA facilities should have formal nutrition counseling
"DATA",811.9,9,1,23,0)
    available for outpatients.
"DATA",811.9,9,2,0)
^^17^17^2970206^^
"DATA",811.9,9,2,1,0)
If this reminder is not going to be used at your facility, the INACTIVE
"DATA",811.9,9,2,2,0)
FLAG should be set to inactive.
"DATA",811.9,9,2,3,0)
 
"DATA",811.9,9,2,4,0)
This reminder represents the minimum criteria for checking if the patient
"DATA",811.9,9,2,5,0)
has received a weight and nutrition screen. The "VA-NUTRITION/WEIGHT
"DATA",811.9,9,2,6,0)
SCREENING" education topic is the result finding that will satisfy this
"DATA",811.9,9,2,7,0)
reminder.
"DATA",811.9,9,2,8,0)
 
"DATA",811.9,9,2,9,0)
The Ambulatory Care EP recommends a variation on this reminder
"DATA",811.9,9,2,10,0)
represented in the "VA-NUTRITION/OBESITY EDUCATION" reminder.  This
"DATA",811.9,9,2,11,0)
reminder includes a check for nutrition education, in addition to
"DATA",811.9,9,2,12,0)
the screening.  It also includes target conditions for patients who have
"DATA",811.9,9,2,13,0)
nutrition or obesity related diagnoses or health factors on file.
"DATA",811.9,9,2,14,0)
 
"DATA",811.9,9,2,15,0)
Please review both of these reminder definitions, choose one of them to
"DATA",811.9,9,2,16,0)
use.  If local modifications need to be made, copy the preferred reminder
"DATA",811.9,9,2,17,0)
to a new reminder and make your reminder modifications.
"DATA",811.9,9,3,0)
^811.94P^1^1
"DATA",811.9,9,3,1,0)
9999999.09
"DATA",811.9,9,3,1,1,0)
^^2^2^2970206^^^
"DATA",811.9,9,3,1,1,1,0)
The education topic for this reminder is limited to the
"DATA",811.9,9,3,1,1,2,0)
VA-NUTRITION/WEIGHT SCREENING entry.
"DATA",811.9,9,3,1,2,0)
^811.944V^1^1
"DATA",811.9,9,3,1,2,1,0)
12;AUTTEDT(
"DATA",811.9,9,4,0)
^811.95P^1^1
"DATA",811.9,9,4,1,0)
36^^^^^1
"DATA",811.9,9,6,0)
^811.911P^2^2
"DATA",811.9,9,6,1,0)
67^^^0Y^^^&'
"DATA",811.9,9,6,2,0)
68
"DATA",811.9,9,7,0)
^811.97^1^1
"DATA",811.9,9,7,1,0)
1Y
"DATA",811.9,9,7,1,1,0)
^^1^1^2970206^
"DATA",811.9,9,7,1,1,1,0)
Weight and Nutrition screen due yearly for all patients.
"DATA",811.9,9,20,0)
^811.902V^4^4
"DATA",811.9,9,20,1,0)
12;AUTTEDT(^^^^^!^^
"DATA",811.9,9,20,2,0)
36;PXD(811.2,^^^^^!^^^^^
"DATA",811.9,9,20,3,0)
67;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,9,20,4,0)
68;AUTTHF(^^^^^^^^^^
"DATA",811.9,9,31)
(SEX)&(AGE)&'FI(3)
"DATA",811.9,9,32)
1^3
"DATA",811.9,9,35)
(0)!FI(1)!FI(2)
"DATA",811.9,9,36)
2^1;2
"DATA",811.9,9,40)
1^3
"DATA",811.9,9,42)
1^4
"DATA",811.9,10,0)
VA-*PNEUMOCOCCAL VACCINE^3^Pneumovax^3M^10
"DATA",811.9,10,1,0)
^^13^13^2970422^^
"DATA",811.9,10,1,1,0)
This "VA-*PNEUMOCOCCAL VACCINE" reminder is defined based on the
"DATA",811.9,10,1,2,0)
following "Pneumococcal Vaccine" guidelines specified in the VHA HANDBOOK
"DATA",811.9,10,1,3,0)
1101.8, APPENDIX A.
"DATA",811.9,10,1,4,0)
 
"DATA",811.9,10,1,5,0)
    Target Condition: Pneumococcal pneumonia.
"DATA",811.9,10,1,6,0)
 
"DATA",811.9,10,1,7,0)
    Target Group: Outpatients age 65 and older.
"DATA",811.9,10,1,8,0)
 
"DATA",811.9,10,1,9,0)
    Recommendation: All persons age 65 and older should receive one
"DATA",811.9,10,1,10,0)
    vaccination with pneumococcal vaccine in their lifetime.
"DATA",811.9,10,1,11,0)
 
"DATA",811.9,10,1,12,0)
    Goal for FY 2000: 80% of individuals 65 and older have received
"DATA",811.9,10,1,13,0)
    pneumococcal vaccine.
"DATA",811.9,10,2,0)
^^14^14^2970424^^^^
"DATA",811.9,10,2,1,0)
If this reminder is not going to be used at your facility, the INACTIVE
"DATA",811.9,10,2,2,0)
FLAG should be set to inactive.
"DATA",811.9,10,2,3,0)
 
"DATA",811.9,10,2,4,0)
This reminder represents the minimum criteria for checking if the
"DATA",811.9,10,2,5,0)
pneumococcal vaccine has been given to the patient.  
"DATA",811.9,10,2,6,0)
 
"DATA",811.9,10,2,7,0)
The Ambulatory Care EP recommends a variation on this reminder represented
"DATA",811.9,10,2,8,0)
in the "VA-PNEUMOVAX" reminder, which includes a check for diagnoses
"DATA",811.9,10,2,9,0)
documented for the patient that would indicate the pneumococcal vaccine
"DATA",811.9,10,2,10,0)
should be given to the patient regardless of the patients age.
"DATA",811.9,10,2,11,0)
 
"DATA",811.9,10,2,12,0)
Please review both of these reminder definitions, choose one of them to
"DATA",811.9,10,2,13,0)
use.  If local modifications need to be made, copy the preferred reminder
"DATA",811.9,10,2,14,0)
to a new reminder and make your reminder modifications.
"DATA",811.9,10,3,0)
^811.94P^2^1
"DATA",811.9,10,3,2,0)
9999999.14
"DATA",811.9,10,3,2,1,0)
^^3^3^2970206^^^^
"DATA",811.9,10,3,2,1,1,0)
The Immunization File identifies all immunizations that represent 
"DATA",811.9,10,3,2,1,2,0)
PNEUMOCOCCAL immunizations.  Any immunizations for PNEUMONIA should be
"DATA",811.9,10,3,2,1,3,0)
specified as selection items for this criteria.
"DATA",811.9,10,3,2,2,0)
^811.944V^1^1
"DATA",811.9,10,3,2,2,1,0)
19;AUTTIMM(
"DATA",811.9,10,4,0)
^811.95P^1^1
"DATA",811.9,10,4,1,0)
25^^^^^1
"DATA",811.9,10,6,0)
^811.911P^2^2
"DATA",811.9,10,6,1,0)
57^^^0Y^^^&'
"DATA",811.9,10,6,2,0)
58
"DATA",811.9,10,7,0)
^811.97^1^1
"DATA",811.9,10,7,1,0)
99Y^65
"DATA",811.9,10,7,1,1,0)
^^1^1^2970206^^^^
"DATA",811.9,10,7,1,1,1,0)
Pneumovax due once for patients 65 and over.
"DATA",811.9,10,20,0)
^811.902V^4^4
"DATA",811.9,10,20,1,0)
19;AUTTIMM(^^^^^!^^
"DATA",811.9,10,20,2,0)
25;PXD(811.2,^^^^^!^^^^^
"DATA",811.9,10,20,3,0)
57;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,10,20,4,0)
58;AUTTHF(^^^^^^^^^^
"DATA",811.9,10,31)
(SEX)&(AGE)&'FI(3)
"DATA",811.9,10,32)
1^3
"DATA",811.9,10,35)
(0)!FI(1)!FI(2)
"DATA",811.9,10,36)
2^1;2
"DATA",811.9,10,40)
1^3
"DATA",811.9,10,42)
1^4
"DATA",811.9,11,0)
VA-*SEATBELT AND ACCIDENT SCREEN^1^Seatbelt and Accident Screen^1M^11
"DATA",811.9,11,1,0)
^^19^19^2970422^^^
"DATA",811.9,11,1,1,0)
Seatbelt and accident education given yearly to all patients.
"DATA",811.9,11,1,2,0)
 
"DATA",811.9,11,1,3,0)
This "VA-*SEATBELT AND ACCIDENT SCREEN" reminder is based on the
"DATA",811.9,11,1,4,0)
"Seatbelt Use and Accident Avoidance Counseling" guideline specified in
"DATA",811.9,11,1,5,0)
the VHA HANDBOOK 1101.8, APPENDIX A. 
"DATA",811.9,11,1,6,0)
 
"DATA",811.9,11,1,7,0)
    Target Condition: Motor vehicle associated injuries.
"DATA",811.9,11,1,8,0)
 
"DATA",811.9,11,1,9,0)
    Target Group: General Outpatient population.
"DATA",811.9,11,1,10,0)
 
"DATA",811.9,11,1,11,0)
    Recommendation: All patients should be urged to use seatbelts in
"DATA",811.9,11,1,12,0)
    automobiles, wear helmets when riding bicycles or motorcycles, and to
"DATA",811.9,11,1,13,0)
    refrain from driving after drinking.
"DATA",811.9,11,1,14,0)
 
"DATA",811.9,11,1,15,0)
    Goal for FY 2000: 85% of Veterans report regular use of seatbelts in
"DATA",811.9,11,1,16,0)
    automobiles. 80% of motorcyclists and 50% of bicyclists report use of
"DATA",811.9,11,1,17,0)
    helmets. 50% of primary care providers routinely provide
"DATA",811.9,11,1,18,0)
    age-appropriate counseling on safety precautions to prevent
"DATA",811.9,11,1,19,0)
    unintentional injury.
"DATA",811.9,11,2,0)
^^16^16^2970422^^^^
"DATA",811.9,11,2,1,0)
If this reminder is not going to be used at your facility, the INACTIVE
"DATA",811.9,11,2,2,0)
FLAG should be set to inactive.
"DATA",811.9,11,2,3,0)
 
"DATA",811.9,11,2,4,0)
This reminder represents the minimum criteria for checking if the
"DATA",811.9,11,2,5,0)
patient has had seatbelt and accident screening.  The "VA-SEAT BELT USE
"DATA",811.9,11,2,6,0)
SCREENING" education topic is the result finding that will satisfy this
"DATA",811.9,11,2,7,0)
reminder.
"DATA",811.9,11,2,8,0)
 
"DATA",811.9,11,2,9,0)
The Ambulatory Care EP recommends a variation on this reminder,
"DATA",811.9,11,2,10,0)
represented in the "VA-SEATBELT EDUCATION" reminder. This reminder
"DATA",811.9,11,2,11,0)
includes a check for seatbelt use education given to the patient, in
"DATA",811.9,11,2,12,0)
addition to the screening.
"DATA",811.9,11,2,13,0)
 
"DATA",811.9,11,2,14,0)
Please review both of these reminder definitions, choose one of them to
"DATA",811.9,11,2,15,0)
use.  If local modifications need to be made, copy the preferred reminder
"DATA",811.9,11,2,16,0)
to a new reminder and make your reminder modifications.
"DATA",811.9,11,3,0)
^811.94P^1^1
"DATA",811.9,11,3,1,0)
9999999.09
"DATA",811.9,11,3,1,1,0)
^^2^2^2970422^^^^
"DATA",811.9,11,3,1,1,1,0)
The Education Topics identify education topics for seatbelt screening.
"DATA",811.9,11,3,1,1,2,0)
These topics should be identifed as Target Result Finding Items.
"DATA",811.9,11,3,1,2,0)
^811.944V^1^1
"DATA",811.9,11,3,1,2,1,0)
13;AUTTEDT(
"DATA",811.9,11,4,0)
^811.95P^1^1
"DATA",811.9,11,4,1,0)
35^^^^^1
"DATA",811.9,11,6,0)
^811.911P^2^2
"DATA",811.9,11,6,1,0)
61^^^0Y^^^&'
"DATA",811.9,11,6,2,0)
62
"DATA",811.9,11,7,0)
^811.97^1^1
"DATA",811.9,11,7,1,0)
1Y
"DATA",811.9,11,7,1,1,0)
^^1^1^2970422^^
"DATA",811.9,11,7,1,1,1,0)
Seatbelt education due yearly for all patients.
"DATA",811.9,11,20,0)
^811.902V^4^4
"DATA",811.9,11,20,1,0)
13;AUTTEDT(^^^^^!^^
"DATA",811.9,11,20,2,0)
35;PXD(811.2,^^^^^!^^^^^
"DATA",811.9,11,20,3,0)
61;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,11,20,4,0)
62;AUTTHF(^^^^^^^^^^
"DATA",811.9,11,31)
(SEX)&(AGE)&'FI(3)
"DATA",811.9,11,32)
1^3
"DATA",811.9,11,35)
(0)!FI(1)!FI(2)
"DATA",811.9,11,36)
2^1;2
"DATA",811.9,11,40)
1^3
"DATA",811.9,11,42)
1^4
"DATA",811.9,12,0)
VA-*TETANUS DIPHTHERIA IMMUNIZATION^3^Tetanus Diphtheria (TD-Adult)^6M^12
"DATA",811.9,12,1,0)
^^15^15^2970421^^^^
"DATA",811.9,12,1,1,0)
TD booster given to all adult patients every ten years.
"DATA",811.9,12,1,2,0)
 
"DATA",811.9,12,1,3,0)
This reminder is based on "Tetanus and Diphtheria Immunization"
"DATA",811.9,12,1,4,0)
guidelines specified in VHA HANDBOOK 1101.8, APPENDIX A.
"DATA",811.9,12,1,5,0)
 
"DATA",811.9,12,1,6,0)
Target Condition: Infection with tetanus and diphtheria.
"DATA",811.9,12,1,7,0)
 
"DATA",811.9,12,1,8,0)
Target Group: General outpatient population.
"DATA",811.9,12,1,9,0)
 
"DATA",811.9,12,1,10,0)
Recommendation: A tetanus and diphtheria (TD) toxoid booster should be
"DATA",811.9,12,1,11,0)
administered every ten years throughout adult life.  This is commonly
"DATA",811.9,12,1,12,0)
offered at each half decade (e.g. ages 45,55,65).
"DATA",811.9,12,1,13,0)
 
"DATA",811.9,12,1,14,0)
Goal for FY 2000: 50% of individuals have received a tetanus immunization
"DATA",811.9,12,1,15,0)
booster in the past ten years.
"DATA",811.9,12,2,0)
^^13^13^2970421^^^^
"DATA",811.9,12,2,1,0)
If this reminder is not going to be used at your facility, the INACTIVE
"DATA",811.9,12,2,2,0)
FLAG should be set to inactive.
"DATA",811.9,12,2,3,0)
 
"DATA",811.9,12,2,4,0)
This reminder represents the minimum criteria for checking if the patient
"DATA",811.9,12,2,5,0)
has been screened for tetanus diphtheria immunization. The "TETANUS
"DATA",811.9,12,2,6,0)
DIPHTHERIA (TD-ADULT)" and "TETANUS TOXOID" immunizations or their CPT
"DATA",811.9,12,2,7,0)
equivalent are the result finding that will satisfy this reminder.
"DATA",811.9,12,2,8,0)
 
"DATA",811.9,12,2,9,0)
The Ambulatory Care EP endorses this reminder as it is defined.
"DATA",811.9,12,2,10,0)
 
"DATA",811.9,12,2,11,0)
If any modifications to the reminder definition are needed, copy the
"DATA",811.9,12,2,12,0)
reminder to a new reminder for your site's use, and make the appropriate
"DATA",811.9,12,2,13,0)
modifications.
"DATA",811.9,12,3,0)
^811.94P^1^1
"DATA",811.9,12,3,1,0)
9999999.14
"DATA",811.9,12,3,1,1,0)
^^6^6^2970421^^^^
"DATA",811.9,12,3,1,1,1,0)
The Immunization file is used to define all immunizations representing
"DATA",811.9,12,3,1,1,2,0)
TETANUS immunizations.
"DATA",811.9,12,3,1,1,3,0)
  
"DATA",811.9,12,3,1,1,4,0)
Specify TETANUS DIPHTHERIA (TD-ADULT) and TETANUS TOXOID and any other
"DATA",811.9,12,3,1,1,5,0)
immunizations representing Tetanus as selection items for this file
"DATA",811.9,12,3,1,1,6,0)
criteria.
"DATA",811.9,12,3,1,2,0)
^811.944V^2^2
"DATA",811.9,12,3,1,2,1,0)
2;AUTTIMM(
"DATA",811.9,12,3,1,2,2,0)
4;AUTTIMM(
"DATA",811.9,12,4,0)
^811.95P^1^1
"DATA",811.9,12,4,1,0)
29^^^^^1
"DATA",811.9,12,6,0)
^811.911P^2^2
"DATA",811.9,12,6,1,0)
63^^^0Y^^^&'
"DATA",811.9,12,6,2,0)
64
"DATA",811.9,12,7,0)
^811.97^1^1
"DATA",811.9,12,7,1,0)
10Y^18
"DATA",811.9,12,7,1,1,0)
^^1^1^2970421^^^^
"DATA",811.9,12,7,1,1,1,0)
TD booster due every ten years throughout adult life.
"DATA",811.9,12,20,0)
^811.902V^5^5
"DATA",811.9,12,20,1,0)
2;AUTTIMM(^^^^^!^^
"DATA",811.9,12,20,2,0)
4;AUTTIMM(^^^^^!^^
"DATA",811.9,12,20,3,0)
29;PXD(811.2,^^^^^!^^^^^
"DATA",811.9,12,20,4,0)
63;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,12,20,5,0)
64;AUTTHF(^^^^^^^^^^
"DATA",811.9,12,31)
(SEX)&(AGE)&'FI(4)
"DATA",811.9,12,32)
1^4
"DATA",811.9,12,35)
(0)!FI(1)!FI(2)!FI(3)
"DATA",811.9,12,36)
3^1;2;3
"DATA",811.9,12,40)
1^4
"DATA",811.9,12,42)
1^5
"DATA",811.9,13,0)
VA-*TOBACCO USE SCREEN^1^Tobacco Use Screen^1M^13
"DATA",811.9,13,1,0)
^^16^16^2970421^^
"DATA",811.9,13,1,1,0)
This reminder is based on "Tobacco Use Counseling" guidelines specified
"DATA",811.9,13,1,2,0)
in the VHA HANDBOOK 1101.8, APPENDIX A.
"DATA",811.9,13,1,3,0)
 
"DATA",811.9,13,1,4,0)
    Target Conditions: Cancer, pulmonary and cardiovascular disease.
"DATA",811.9,13,1,5,0)
 
"DATA",811.9,13,1,6,0)
    Target Group: Outpatients who use tobacco.
"DATA",811.9,13,1,7,0)
 
"DATA",811.9,13,1,8,0)
    Recommendation: Tobacco use cessation counseling should be offered
"DATA",811.9,13,1,9,0)
    annually to all who use tobacco on a regular basis.
"DATA",811.9,13,1,10,0)
 
"DATA",811.9,13,1,11,0)
    Goals for FY 2000: 100% of VHA facilities have an intensive smoking
"DATA",811.9,13,1,12,0)
    cessation program (or access to one) which includes appropriate
"DATA",811.9,13,1,13,0)
    pharmacological treatment. 75% of primary care providers routinely
"DATA",811.9,13,1,14,0)
    advise cessation and provide assistance and follow-up for all their
"DATA",811.9,13,1,15,0)
    patients who use tobacco. Reduce cigarette smoking to a prevalence
"DATA",811.9,13,1,16,0)
    of no more than 15% among people age 20 and over.
"DATA",811.9,13,2,0)
^^16^16^2970421^^^^
"DATA",811.9,13,2,1,0)
If this reminder is not going to be used at your facility, the INACTIVE
"DATA",811.9,13,2,2,0)
FLAG should be set to inactive.
"DATA",811.9,13,2,3,0)
 
"DATA",811.9,13,2,4,0)
This reminder represents the minimum criteria for checking if the patient
"DATA",811.9,13,2,5,0)
has received a tobacco use screen. The "VA-TOBACCO USE SCREENING"
"DATA",811.9,13,2,6,0)
education topic is the result finding that will satisfy this reminder.
"DATA",811.9,13,2,7,0)
 
"DATA",811.9,13,2,8,0)
The Ambulatory Care EP recommends a variation on this reminder
"DATA",811.9,13,2,9,0)
represented in the "VA-TOBACCO EDUCATION" reminder.  This reminder
"DATA",811.9,13,2,10,0)
includes a check for smoking cessation education, in addition to the
"DATA",811.9,13,2,11,0)
screening.  It also includes target conditions for patients who have
"DATA",811.9,13,2,12,0)
tobacco related diagnoses or health factors on file.
"DATA",811.9,13,2,13,0)
 
"DATA",811.9,13,2,14,0)
Please review both of these reminder definitions, choose one of them to
"DATA",811.9,13,2,15,0)
use.  If local modifications need to be made, copy the preferred reminder
"DATA",811.9,13,2,16,0)
to a new reminder and make your reminder modifications.
"DATA",811.9,13,3,0)
^811.94P^2^1
"DATA",811.9,13,3,2,0)
9999999.09
"DATA",811.9,13,3,2,1,0)
^^2^2^2970206^^^^
"DATA",811.9,13,3,2,1,1,0)
The Education Topics file defines topics which represent Tobacco Use
"DATA",811.9,13,3,2,1,2,0)
Screening.
"DATA",811.9,13,3,2,2,0)
^811.944V^1^1
"DATA",811.9,13,3,2,2,1,0)
14;AUTTEDT(
"DATA",811.9,13,3,2,4,0)
^^2^2^2970206^^^^
"DATA",811.9,13,3,2,4,1,0)
No history of tobacco use screen on file.  Please evaluate tobacco use and
"DATA",811.9,13,3,2,4,2,0)
educate if currently in use.
"DATA",811.9,13,6,0)
^811.911P^2^2
"DATA",811.9,13,6,1,0)
65^^^0Y^^^&'
"DATA",811.9,13,6,2,0)
66
"DATA",811.9,13,7,0)
^811.97^1^1
"DATA",811.9,13,7,1,0)
1Y
"DATA",811.9,13,7,1,1,0)
^^1^1^2970206^
"DATA",811.9,13,7,1,1,1,0)
Tobacco use screen due yearly for all ages.
"DATA",811.9,13,20,0)
^811.902V^3^3
"DATA",811.9,13,20,1,0)
14;AUTTEDT(^^^^^!^^
"DATA",811.9,13,20,1,2,0)
^^2^2^2990726
"DATA",811.9,13,20,1,2,1,0)
No history of tobacco use screen on file.  Please evaluate tobacco use and
"DATA",811.9,13,20,1,2,2,0)
educate if currently in use.
"DATA",811.9,13,20,2,0)
65;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,13,20,3,0)
66;AUTTHF(^^^^^^^^^^
"DATA",811.9,13,31)
(SEX)&(AGE)&'FI(2)
"DATA",811.9,13,32)
1^2
"DATA",811.9,13,35)
(0)!FI(1)
"DATA",811.9,13,36)
1^1
"DATA",811.9,13,40)
1^2
"DATA",811.9,13,42)
1^3
"DATA",811.9,14,0)
VA-*FITNESS AND EXERCISE SCREEN^1^Exercise Education^1M^14
"DATA",811.9,14,1,0)
^^20^20^2970421^^
"DATA",811.9,14,1,1,0)
Exercise education given yearly to all patients.
"DATA",811.9,14,1,2,0)
 
"DATA",811.9,14,1,3,0)
This VA-*FITNESS AND EXERCISE SCREEN reminder is based on the following
"DATA",811.9,14,1,4,0)
"Physical Activity Counseling" guidelines specified in the VHA HANDBOOK
"DATA",811.9,14,1,5,0)
1101.8, APPENDIX A.
"DATA",811.9,14,1,6,0)
 
"DATA",811.9,14,1,7,0)
    Target Conditions: Cardiovascular disease, physical function.
"DATA",811.9,14,1,8,0)
 
"DATA",811.9,14,1,9,0)
    Target Group: General outpatient population.
"DATA",811.9,14,1,10,0)
 
"DATA",811.9,14,1,11,0)
    Recommendation: Primary care clinicians should encourage all
"DATA",811.9,14,1,12,0)
    individuals to engage in a program of physical activity tailored to
"DATA",811.9,14,1,13,0)
    their health status and personal life style.
"DATA",811.9,14,1,14,0)
 
"DATA",811.9,14,1,15,0)
    Goals for FY 2000: 50% of primary care providers routinely counsel
"DATA",811.9,14,1,16,0)
    their patients regarding frequency, duration, type and intensity of
"DATA",811.9,14,1,17,0)
    physical activity. 30% of Veterans engage in regular moderate
"DATA",811.9,14,1,18,0)
    physical activity for at least 30 minutes three times a week. 
"DATA",811.9,14,1,19,0)
    20% of Veterans engage in vigorous activity that promotes
"DATA",811.9,14,1,20,0)
    cardiorespiratory fitness.
"DATA",811.9,14,2,0)
^^3^3^2970421^^^^
"DATA",811.9,14,2,1,0)
To modify this reminder from its distributed definition, copy the reminder
"DATA",811.9,14,2,2,0)
to a new reminder and then make the modifications necessary to define your
"DATA",811.9,14,2,3,0)
sites guideline.
"DATA",811.9,14,3,0)
^811.94P^1^1
"DATA",811.9,14,3,1,0)
9999999.09
"DATA",811.9,14,3,1,1,0)
^^2^2^2970206^^^^
"DATA",811.9,14,3,1,1,1,0)
The Education Topic is used to identify topics that are related to 
"DATA",811.9,14,3,1,1,2,0)
EXERCISE screening.
"DATA",811.9,14,3,1,2,0)
^811.944V^1^1
"DATA",811.9,14,3,1,2,1,0)
11;AUTTEDT(
"DATA",811.9,14,4,0)
^811.95P^1^1
"DATA",811.9,14,4,1,0)
32^^^^^1
"DATA",811.9,14,6,0)
^811.911P^2^2
"DATA",811.9,14,6,1,0)
53^^^0Y^^^&'
"DATA",811.9,14,6,2,0)
54
"DATA",811.9,14,7,0)
^811.97^1^1
"DATA",811.9,14,7,1,0)
1Y
"DATA",811.9,14,20,0)
^811.902V^4^4
"DATA",811.9,14,20,1,0)
11;AUTTEDT(^^^^^!^^
"DATA",811.9,14,20,2,0)
32;PXD(811.2,^^^^^!^^^^^
"DATA",811.9,14,20,3,0)
53;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,14,20,4,0)
54;AUTTHF(^^^^^^^^^^
"DATA",811.9,14,31)
(SEX)&(AGE)&'FI(3)
"DATA",811.9,14,32)
1^3
"DATA",811.9,14,35)
(0)!FI(1)!FI(2)
"DATA",811.9,14,36)
2^1;2
"DATA",811.9,14,40)
1^3
"DATA",811.9,14,42)
1^4
"DATA",811.9,15,0)
VA-*COLORECTAL CANCER SCREEN (SIG.)^2^Flexisigmoidoscopy^1M^15
"DATA",811.9,15,1,0)
^^22^22^2970313^^
"DATA",811.9,15,1,1,0)
At least one sigmoidoscopy examination in their lifetime for patients age
"DATA",811.9,15,1,2,0)
50 and older, or a fecal occult blood test yearly.  This reminder uses 5
"DATA",811.9,15,1,3,0)
years, rather than 99Y for "ONCE" as originally published in the VA
"DATA",811.9,15,1,4,0)
Guidelines.  The 5 years is a conservative period recommended by a blue
"DATA",811.9,15,1,5,0)
ribbon panel publishing their findings in the February 1997 issue of
"DATA",811.9,15,1,6,0)
"Gastroenterology" magazine.
"DATA",811.9,15,1,7,0)
 
"DATA",811.9,15,1,8,0)
This reminder is based on the "Colorectal Cancer Detection" guidelines
"DATA",811.9,15,1,9,0)
specified in the VHA HANDBOOK, APPENDIX A.
"DATA",811.9,15,1,10,0)
 
"DATA",811.9,15,1,11,0)
    Target Condition: Early detection of colon cancer or its predecessors.
"DATA",811.9,15,1,12,0)
 
"DATA",811.9,15,1,13,0)
    Target Group: All persons ages 50 and older.
"DATA",811.9,15,1,14,0)
 
"DATA",811.9,15,1,15,0)
    Recommendation: All persons age 50 and older should receive an annual
"DATA",811.9,15,1,16,0)
    fecal occult blood test or undergo a sigmoidoscopy examination
"DATA",811.9,15,1,17,0)
    (periodicity unspecified).
"DATA",811.9,15,1,18,0)
 
"DATA",811.9,15,1,19,0)
    Goals for FY 2000: For persons age 50 and older, 50 percent of those
"DATA",811.9,15,1,20,0)
    enrolled in primary care clinics have received fecal occult blood
"DATA",811.9,15,1,21,0)
    testing within the preceding year and 40 percent have received at
"DATA",811.9,15,1,22,0)
    least one proctosigmoidosopy examination in their lifetime.
"DATA",811.9,15,2,0)
^^20^20^2970424^^^
"DATA",811.9,15,2,1,0)
The next time a SIG is due is 1 year from the last FOBT, or 5 years from
"DATA",811.9,15,2,2,0)
the last SIG.
"DATA",811.9,15,2,3,0)
 
"DATA",811.9,15,2,4,0)
The reminder type is EXAM, and the Baseline AGE RANGE and FREQUENCY is 50
"DATA",811.9,15,2,5,0)
and older and 1Y - so that the SIG will be due a year from the last FOBT
"DATA",811.9,15,2,6,0)
done in the clinic.  The AGE RANGE and FREQUENCY are modified to 50 and
"DATA",811.9,15,2,7,0)
older and 5Y if a prior SIG has been received by the patient.  The Rank
"DATA",811.9,15,2,8,0)
of 2, on the VA-FLEXISIGMOIDOSCOPY taxonomy match fields, will cause a
"DATA",811.9,15,2,9,0)
match of a SIG to take precedence over the FOBT findings to establish when
"DATA",811.9,15,2,10,0)
the SIG is due again.  If the most recent health factor finding, between
"DATA",811.9,15,2,11,0)
INACTIVATE and ACTIVATE is INACTIVATE with its rank of 1, the reminder
"DATA",811.9,15,2,12,0)
will be "N/A" (not applicable to the patient), and the frequency is 0Y.
"DATA",811.9,15,2,13,0)
 
"DATA",811.9,15,2,14,0)
Check the Taxonomy Findings entries representing flexisigimoidoscopy and
"DATA",811.9,15,2,15,0)
FOBT procedures. This represents coded standard entries in the CPT file
"DATA",811.9,15,2,16,0)
and ICD Operation/Procedure file.  If the taxonomies need modification,
"DATA",811.9,15,2,17,0)
copy the taxonomy to a new taxonomy for your site, and make the
"DATA",811.9,15,2,18,0)
appropriate modifications.  Then, copy this reminder to a new reminder for
"DATA",811.9,15,2,19,0)
your local sites modifications, and change the Taxonomy Findings to use
"DATA",811.9,15,2,20,0)
the new taxonomies.
"DATA",811.9,15,3,0)
^811.94P^1^1
"DATA",811.9,15,3,1,0)
9999999.15
"DATA",811.9,15,3,1,1,0)
^^3^3^2970313^^^^
"DATA",811.9,15,3,1,1,1,0)
The EXAM result findings help to identify when the last FOBT(CLINIC)
"DATA",811.9,15,3,1,1,2,0)
procedure was done.  The SIG would be due a year from the last FOBT if a
"DATA",811.9,15,3,1,1,3,0)
SIG had not been received by the patient in his lifetime.
"DATA",811.9,15,3,1,2,0)
^811.944V^1^1
"DATA",811.9,15,3,1,2,1,0)
660001;AUTTEXAM(
"DATA",811.9,15,4,0)
^811.95P^3^3
"DATA",811.9,15,4,1,0)
15^50^^5Y^2^1
"DATA",811.9,15,4,2,0)
27^50^^1Y^3^1
"DATA",811.9,15,4,3,0)
31
"DATA",811.9,15,4.2,0)
^^1^1^2970212^^^^
"DATA",811.9,15,4.2,1,0)
Date of last SIG or FOBT unknown.
"DATA",811.9,15,6,0)
^811.911P^2^2
"DATA",811.9,15,6,1,0)
51^50^^0Y^1^^&'
"DATA",811.9,15,6,2,0)
52
"DATA",811.9,15,7,0)
^811.97^1^1
"DATA",811.9,15,7,1,0)
1Y^50
"DATA",811.9,15,7,1,1,0)
^^1^1^2970212^
"DATA",811.9,15,7,1,1,1,0)
SIG due every 5 years for patients 50 and older, or FOBT annually.
"DATA",811.9,15,7,1,2,0)
^^1^1^2970212^^^^
"DATA",811.9,15,7,1,2,1,0)
Flexisigmoidoscopy not indicted for patients under 50.
"DATA",811.9,15,20,0)
^811.902V^6^6
"DATA",811.9,15,20,1,0)
660001;AUTTEXAM(^^^^^!^^
"DATA",811.9,15,20,2,0)
15;PXD(811.2,^50^^5Y^2^!^^^^^
"DATA",811.9,15,20,3,0)
27;PXD(811.2,^50^^1Y^3^!^^^^^
"DATA",811.9,15,20,4,0)
31;PXD(811.2,^^^^^^^^^^
"DATA",811.9,15,20,5,0)
51;AUTTHF(^50^^0Y^1^^&'^^^^
"DATA",811.9,15,20,6,0)
52;AUTTHF(^^^^^^^^^^
"DATA",811.9,15,31)
(SEX)&(AGE)&'FI(5)
"DATA",811.9,15,32)
1^5
"DATA",811.9,15,35)
(0)!FI(1)!FI(2)!FI(3)
"DATA",811.9,15,36)
3^1;2;3
"DATA",811.9,15,40)
3^2;3;5
"DATA",811.9,15,42)
2^4;6
"DATA",811.9,16,0)
VA-*CERVICAL CANCER SCREEN^5^Pap Smear^^16^^^S^F
"DATA",811.9,16,1,0)
^^15^15^2970224^
"DATA",811.9,16,1,1,0)
This reminder is based on the "Cervical Cancer Detection" guidelines
"DATA",811.9,16,1,2,0)
specified in the VHA HANDBOOK 1101.8, APPENDIX A. 
"DATA",811.9,16,1,3,0)
 
"DATA",811.9,16,1,4,0)
    Target Condition: Early detection of cervical cancer.
"DATA",811.9,16,1,5,0)
 
"DATA",811.9,16,1,6,0)
    Target Group: Women age 65 and under.
"DATA",811.9,16,1,7,0)
 
"DATA",811.9,16,1,8,0)
    Recommendation: Papanicolaou (Pap) smear testing is recommended for
"DATA",811.9,16,1,9,0)
    all sexually active women every three years until age 65.  Pap testing
"DATA",811.9,16,1,10,0)
    may be discontinued after age 65 if previous smears have been
"DATA",811.9,16,1,11,0)
    consistently normal.
"DATA",811.9,16,1,12,0)
 
"DATA",811.9,16,1,13,0)
    Goal for FY 2000: 95% of women have received at least one Pap test in
"DATA",811.9,16,1,14,0)
    their lifetime and 85% of women age 65 and under received one in the
"DATA",811.9,16,1,15,0)
    past three years.
"DATA",811.9,16,2,0)
^^1^1^2970211^^^^
"DATA",811.9,16,2,1,0)
Copy the reminder to a new reminder for your local site modifications.
"DATA",811.9,16,4,0)
^811.95P^1^1
"DATA",811.9,16,4,1,0)
30^^^^^1
"DATA",811.9,16,4,1,2,0)
^^1^1^2970211^
"DATA",811.9,16,4,1,2,1,0)
No record of cervical cancer screen taxonomy on file
"DATA",811.9,16,6,0)
^811.911P^2^2
"DATA",811.9,16,6,1,0)
44^^^0Y^^^&'
"DATA",811.9,16,6,2,0)
47
"DATA",811.9,16,7,0)
^811.97^1^1
"DATA",811.9,16,7,1,0)
3Y^^65
"DATA",811.9,16,7,1,1,0)
^^2^2^2970131^^
"DATA",811.9,16,7,1,1,1,0)
Women ages 65 and younger should receive a cervical cancer screen every 3
"DATA",811.9,16,7,1,1,2,0)
years.
"DATA",811.9,16,7,1,2,0)
^^1^1^2970131^^
"DATA",811.9,16,7,1,2,1,0)
Pap smear screen not indicated for women over 65.
"DATA",811.9,16,20,0)
^811.902V^3^3
"DATA",811.9,16,20,1,0)
30;PXD(811.2,^^^^^!^^^^^
"DATA",811.9,16,20,1,2,0)
^^1^1^2990726
"DATA",811.9,16,20,1,2,1,0)
No record of cervical cancer screen taxonomy on file
"DATA",811.9,16,20,2,0)
44;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,16,20,3,0)
47;AUTTHF(^^^^^^^^^^
"DATA",811.9,16,31)
(SEX)&(AGE)&'FI(2)
"DATA",811.9,16,32)
1^2
"DATA",811.9,16,35)
(0)!FI(1)
"DATA",811.9,16,36)
1^1
"DATA",811.9,16,40)
1^2
"DATA",811.9,16,42)
1^3
"DATA",811.9,17,0)
VA-DIABETIC EYE EXAM^2^Diabetic Eye Exam^1M
"DATA",811.9,17,1,0)
^^2^2^2970211^^^^
"DATA",811.9,17,1,1,0)
Patients with the VA-DIABETES taxonomy should have a diabetic eye exam
"DATA",811.9,17,1,2,0)
done yearly.
"DATA",811.9,17,2,0)
^^3^3^2970211^^^^
"DATA",811.9,17,2,1,0)
This reminder is based on the Diabetic Eye Exam reminder from the New
"DATA",811.9,17,2,2,0)
York VAMC which was designed to meet the guidelines defined by the PACT
"DATA",811.9,17,2,3,0)
panel.  Additional input came from the Saginaw VAMC.
"DATA",811.9,17,3,0)
^811.94P^1^1
"DATA",811.9,17,3,1,0)
9999999.15
"DATA",811.9,17,3,1,2,0)
^811.944V^1^1
"DATA",811.9,17,3,1,2,1,0)
3;AUTTEXAM(
"DATA",811.9,17,4,0)
^811.95P^1^1
"DATA",811.9,17,4,1,0)
28^^^1Y^^^&
"DATA",811.9,17,4,1,1,0)
^^1^1^2970211^^^
"DATA",811.9,17,4,1,1,1,0)
Diabetic eye exam required annually for all diabetic patients.
"DATA",811.9,17,4,1,2,0)
^^1^1^2970211^^^
"DATA",811.9,17,4,1,2,1,0)
No history of diabetes on file.
"DATA",811.9,17,7,0)
^811.97^1^1
"DATA",811.9,17,7,1,0)
0Y
"DATA",811.9,17,20,0)
^811.902V^2^2
"DATA",811.9,17,20,1,0)
3;AUTTEXAM(^^^^^!^^
"DATA",811.9,17,20,2,0)
28;PXD(811.2,^^^1Y^^^&^^^^
"DATA",811.9,17,20,2,1,0)
^^2^2^2990726
"DATA",811.9,17,20,2,1,1,0)
Diabetic eye exam required annually for all diabetic patients.
"DATA",811.9,17,20,2,1,2,0)
with HTN.
"DATA",811.9,17,20,2,2,0)
^^1^1^2990726
"DATA",811.9,17,20,2,2,1,0)
No history of diabetes on file.
"DATA",811.9,17,31)
(SEX)&(AGE)&FI(2)
"DATA",811.9,17,32)
1^2
"DATA",811.9,17,35)
(0)!FI(1)
"DATA",811.9,17,36)
1^1
"DATA",811.9,17,40)
1^2
"DATA",811.9,17,42)
0^
"DATA",811.9,18,0)
VA-DIABETIC FOOT CARE ED.^1^Diabetic Foot Care Education^1M
"DATA",811.9,18,1,0)
^^2^2^2970212^^^^
"DATA",811.9,18,1,1,0)
Patients with the VA-DIABETES taxonomy should have a diabetic foot care
"DATA",811.9,18,1,2,0)
education done yearly.
"DATA",811.9,18,2,0)
^^3^3^2970212^^^^
"DATA",811.9,18,2,1,0)
This reminder is based on the Diabetic care reminders from the New
"DATA",811.9,18,2,2,0)
York VAMC which were designed to meet the guidelines defined by the PACT
"DATA",811.9,18,2,3,0)
panel.  Additional input came from the Saginaw VAMC.
"DATA",811.9,18,3,0)
^811.94P^1^1
"DATA",811.9,18,3,1,0)
9999999.09
"DATA",811.9,18,4,0)
^811.95P^1^1
"DATA",811.9,18,4,1,0)
28^^^1Y^^^&
"DATA",811.9,18,4,1,1,0)
^^1^1^2970212^^^^
"DATA",811.9,18,4,1,1,1,0)
Diabetic foot care education required annually for all diabetic patients.
"DATA",811.9,18,4,1,2,0)
^^1^1^2970212^^^^
"DATA",811.9,18,4,1,2,1,0)
No history of diabetes on file.
"DATA",811.9,18,7,0)
^811.97^1^1
"DATA",811.9,18,7,1,0)
0Y
"DATA",811.9,18,20,0)
^811.902V^1^1
"DATA",811.9,18,20,1,0)
28;PXD(811.2,^^^1Y^^^&^^^^
"DATA",811.9,18,20,1,1,0)
^^2^2^2990726
"DATA",811.9,18,20,1,1,1,0)
Diabetic foot care education required annually for all diabetic patients.
"DATA",811.9,18,20,1,1,2,0)
with HTN.
"DATA",811.9,18,20,1,2,0)
^^1^1^2990726
"DATA",811.9,18,20,1,2,1,0)
No history of diabetes on file.
"DATA",811.9,18,31)
(SEX)&(AGE)&FI(1)
"DATA",811.9,18,32)
1^1
"DATA",811.9,18,36)
0^
"DATA",811.9,18,40)
1^1
"DATA",811.9,18,42)
0^
"DATA",811.9,18,51)

"DATA",811.9,19,0)
VA-MAMMOGRAM^8^Mammogram^1M^4^^^S^F
"DATA",811.9,19,1,0)
^^12^12^2970421^^^^
"DATA",811.9,19,1,1,0)
Mammogram should be given every 2 years to female patients, ages 50-69
"DATA",811.9,19,1,2,0)
with no DX of breast cancer, and yearly for women with a history of breast
"DATA",811.9,19,1,3,0)
cancer or breast tumors, ages 35 - 69.
"DATA",811.9,19,1,4,0)
 
"DATA",811.9,19,1,5,0)
This reminder is based on guidelines provided by the Ambulatory Care
"DATA",811.9,19,1,6,0)
Expert Panel.  The expert panel recommends a study for patients with "high
"DATA",811.9,19,1,7,0)
risk for breast cancer" to occur every 1 to 2 years. A conservative 1 year
"DATA",811.9,19,1,8,0)
is defined in this reminder definition.
"DATA",811.9,19,1,9,0)
 
"DATA",811.9,19,1,10,0)
This reminder also supports the "Breast Cancer Detection" reminder defined
"DATA",811.9,19,1,11,0)
in the "Guidelines for Health Promotion and Disease Prevention", M-2, Part
"DATA",811.9,19,1,12,0)
IV, Chapter 9.
"DATA",811.9,19,2,0)
^^10^10^2970421^^^^
"DATA",811.9,19,2,1,0)
The findings for mammogram are based on defining the CPT codes
"DATA",811.9,19,2,2,0)
representing mammograms in a taxonomy for Mammograms.  The CPT codes are
"DATA",811.9,19,2,3,0)
used to search the Radiology procedures in the Radiology package, as well
"DATA",811.9,19,2,4,0)
as checks for existence of a CPT code in the  V CPT file.
"DATA",811.9,19,2,5,0)
 
"DATA",811.9,19,2,6,0)
Check the taxonomy findings definition for breast cancer and breast tumor.
"DATA",811.9,19,2,7,0)
Copy the taxonomies and make modifications if needed.
"DATA",811.9,19,2,8,0)
 
"DATA",811.9,19,2,9,0)
If any changes were needed in the findings, copy this reminder to a site
"DATA",811.9,19,2,10,0)
defined reminder item and make the appropriate modifications.
"DATA",811.9,19,4,0)
^811.95P^2^2
"DATA",811.9,19,4,1,0)
16^^^^^1
"DATA",811.9,19,4,2,0)
18^35^69^1Y^^0
"DATA",811.9,19,4,2,1,0)
^^2^2^2970528^^^^
"DATA",811.9,19,4,2,1,1,0)
History of breast cancer or breast tumor on file. Due yearly for patients
"DATA",811.9,19,4,2,1,2,0)
ages 35-69.
"DATA",811.9,19,6,0)
^811.911P^2^2
"DATA",811.9,19,6,1,0)
42^^^0Y^^^&'
"DATA",811.9,19,6,2,0)
43
"DATA",811.9,19,7,0)
^811.97^2^1
"DATA",811.9,19,7,2,0)
2Y^50^69
"DATA",811.9,19,7,2,1,0)
^^1^1^2970227^^^^
"DATA",811.9,19,7,2,1,1,0)
Women ages 50-69 should receive a mammogram every two years.
"DATA",811.9,19,20,0)
^811.902V^4^4
"DATA",811.9,19,20,1,0)
16;PXD(811.2,^^^^^!^^^^^
"DATA",811.9,19,20,2,0)
18;PXD(811.2,^35^69^1Y^^^^^^^
"DATA",811.9,19,20,2,1,0)
^^2^2^2990726
"DATA",811.9,19,20,2,1,1,0)
History of breast cancer or breast tumor on file. Due yearly for patients
"DATA",811.9,19,20,2,1,2,0)
ages 35-69.
"DATA",811.9,19,20,3,0)
42;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,19,20,4,0)
43;AUTTHF(^^^^^^^^^^
"DATA",811.9,19,31)
(SEX)&(AGE)&'FI(3)
"DATA",811.9,19,32)
1^3
"DATA",811.9,19,35)
(0)!FI(1)
"DATA",811.9,19,36)
1^1
"DATA",811.9,19,40)
2^2;3
"DATA",811.9,19,42)
1^4
"DATA",811.9,20,0)
VA-PAP SMEAR^5^Pap Smear^^16^^^S^F
"DATA",811.9,20,1,0)
^^10^10^2970422^^^^
"DATA",811.9,20,1,1,0)
Pap smear/pelvic exam every three years for female patients, age 65 and
"DATA",811.9,20,1,2,0)
under, with no DX of cervical cancer or abnormal pap smear and no previous
"DATA",811.9,20,1,3,0)
abnormal pap smear lab test.
"DATA",811.9,20,1,4,0)
 
"DATA",811.9,20,1,5,0)
If patient has had hysterectomy for benign disease, no pap smear is
"DATA",811.9,20,1,6,0)
indicated.
"DATA",811.9,20,1,7,0)
 
"DATA",811.9,20,1,8,0)
This reminder is based on the Ambulatory Care EP and supports the
"DATA",811.9,20,1,9,0)
"Cervical Cancer Screen" guidelines specified in the "Guidelines for
"DATA",811.9,20,1,10,0)
Health Promotion and Disease Prevention", M-2, Part IV, Chapter 9.
"DATA",811.9,20,2,0)
^^9^9^2970211^^^^
"DATA",811.9,20,2,1,0)
Check the Taxonomy Findings representing history of hysterectomy for
"DATA",811.9,20,2,2,0)
benign disease, and history of cervical cancer or abnormal PAP.
"DATA",811.9,20,2,3,0)
If these taxonomies need modifications, copy each to a new taxonomy for
"DATA",811.9,20,2,4,0)
your local site, and make the appropriate modifications.
"DATA",811.9,20,2,5,0)
 
"DATA",811.9,20,2,6,0)
Define Health Factors that may represent Sexual Activity.  To add new
"DATA",811.9,20,2,7,0)
Health Factors use the PCE Table Maintenance option.  
"DATA",811.9,20,2,8,0)
 
"DATA",811.9,20,2,9,0)
Copy the reminder to a new reminder for your local site modifications.
"DATA",811.9,20,4,0)
^811.95P^3^3
"DATA",811.9,20,4,1,0)
6^^^0Y^^^&'
"DATA",811.9,20,4,1,1,0)
^^1^1^2970422^^^
"DATA",811.9,20,4,1,1,1,0)
Pap not indicated in women with HX hysterectomy for benign disease.
"DATA",811.9,20,4,1,2,0)
^^1^1^2970422^^^
"DATA",811.9,20,4,1,2,1,0)
No HX of hysterectomy - presumed no such HX.
"DATA",811.9,20,4,2,0)
5^^^0Y^^^&'
"DATA",811.9,20,4,2,1,0)
^^2^2^2970422^^^^
"DATA",811.9,20,4,2,1,1,0)
Patient has HX of cervical cancer. Please verify appropriate TX & F/U is
"DATA",811.9,20,4,2,1,2,0)
ongoing.
"DATA",811.9,20,4,2,2,0)
^^1^1^2970422^^^^
"DATA",811.9,20,4,2,2,1,0)
No HX of cervical cancer on file - no HX cervical cancer presumed.
"DATA",811.9,20,4,3,0)
30^^^^^1
"DATA",811.9,20,4,3,2,0)
^^1^1^2970422^^^^
"DATA",811.9,20,4,3,2,1,0)
Date of last cervical cancer screen taxonomy unknown.
"DATA",811.9,20,6,0)
^811.911P^2^2
"DATA",811.9,20,6,1,0)
44^^^0Y^^^&'
"DATA",811.9,20,6,2,0)
47
"DATA",811.9,20,7,0)
^811.97^1^1
"DATA",811.9,20,7,1,0)
3Y^^65
"DATA",811.9,20,7,1,1,0)
^^1^1^2970211^
"DATA",811.9,20,7,1,1,1,0)
Pap smear/pelvic exam due every 3 years for women ages 65 and younger.
"DATA",811.9,20,7,1,2,0)
^^1^1^2970211^^
"DATA",811.9,20,7,1,2,1,0)
Pap smear screen not indicated for women over 65.
"DATA",811.9,20,20,0)
^811.902V^5^5
"DATA",811.9,20,20,1,0)
6;PXD(811.2,^^^0Y^^^&'^^^^
"DATA",811.9,20,20,1,1,0)
^^2^2^2990726
"DATA",811.9,20,20,1,1,1,0)
Pap not indicated in women with HX hysterectomy for benign disease.
"DATA",811.9,20,20,1,1,2,0)
with HTN.
"DATA",811.9,20,20,1,2,0)
^^1^1^2990726
"DATA",811.9,20,20,1,2,1,0)
No HX of hysterectomy - presumed no such HX.
"DATA",811.9,20,20,2,0)
5;PXD(811.2,^^^0Y^^^&'^^^^
"DATA",811.9,20,20,2,1,0)
^^2^2^2990726
"DATA",811.9,20,20,2,1,1,0)
Patient has HX of cervical cancer. Please verify appropriate TX & F/U is
"DATA",811.9,20,20,2,1,2,0)
ongoing.
"DATA",811.9,20,20,2,2,0)
^^1^1^2990726
"DATA",811.9,20,20,2,2,1,0)
No HX of cervical cancer on file - no HX cervical cancer presumed.
"DATA",811.9,20,20,3,0)
30;PXD(811.2,^^^^^!^^^^^
"DATA",811.9,20,20,3,2,0)
^^1^1^2990726
"DATA",811.9,20,20,3,2,1,0)
Date of last cervical cancer screen taxonomy unknown.
"DATA",811.9,20,20,4,0)
44;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,20,20,5,0)
47;AUTTHF(^^^^^^^^^^
"DATA",811.9,20,31)
(SEX)&(AGE)&'FI(1)&'FI(2)&'FI(4)
"DATA",811.9,20,32)
3^1;2;4
"DATA",811.9,20,35)
(0)!FI(3)
"DATA",811.9,20,36)
1^3
"DATA",811.9,20,40)
3^1;2;4
"DATA",811.9,20,42)
1^5
"DATA",811.9,21,0)
VA-DIGITAL RECTAL (PROSTATE) EXAM^2^Digital Rectal (Prostate) Exam^0M^^^^^M
"DATA",811.9,21,1,0)
^^5^5^2970421^^^
"DATA",811.9,21,1,1,0)
Digital rectal (Prostate) exam should be given yearly to male patients
"DATA",811.9,21,1,2,0)
ages 40-75 with no DX of prostate cancer.
"DATA",811.9,21,1,3,0)
 
"DATA",811.9,21,1,4,0)
This reminder is based on guidelines defined by the Ambulatory Care Expert
"DATA",811.9,21,1,5,0)
Panel.
"DATA",811.9,21,2,0)
^^10^10^2970421^^^^
"DATA",811.9,21,2,1,0)
Check the Taxonomy Findings entries representing HX of Prostate Cancer.
"DATA",811.9,21,2,2,0)
If this taxonomy needs modification, copy the taxonomy to a new taxonomy
"DATA",811.9,21,2,3,0)
for your site, and make the appropriate modifications.
"DATA",811.9,21,2,4,0)
 
"DATA",811.9,21,2,5,0)
Check the Result Findings EXAM entry representing Digital rectal exam.
"DATA",811.9,21,2,6,0)
Make modifications to the EXAM file via the PCE Table Maintenance option.
"DATA",811.9,21,2,7,0)
 
"DATA",811.9,21,2,8,0)
If any modifications were required based on the checks above, then copy
"DATA",811.9,21,2,9,0)
the reminder definition to a new reminder, and make the appropriate
"DATA",811.9,21,2,10,0)
modifications to the reminder to reflect your site's guidelines.
"DATA",811.9,21,3,0)
^811.94P^1^1
"DATA",811.9,21,3,1,0)
9999999.15
"DATA",811.9,21,3,1,1,0)
^^7^7^2960812^^^
"DATA",811.9,21,3,1,1,1,0)
The target result findings are based on the V EXAM file and any patient
"DATA",811.9,21,3,1,1,2,0)
findings that represent an digitial rectal exam was done. 
"DATA",811.9,21,3,1,1,3,0)
 
"DATA",811.9,21,3,1,1,4,0)
Check the EXAM file for all entries which will represent the rectal exam.
"DATA",811.9,21,3,1,1,5,0)
 
"DATA",811.9,21,3,1,1,6,0)
If this reminder needs modifications for site use, copy the reminder and
"DATA",811.9,21,3,1,1,7,0)
make the appropriate changes to the new reminder.
"DATA",811.9,21,3,1,2,0)
^811.944V^1^1
"DATA",811.9,21,3,1,2,1,0)
13;AUTTEXAM(
"DATA",811.9,21,3,1,4,0)
^^1^1^2960812^^^
"DATA",811.9,21,3,1,4,1,0)
Date of last rectal exam not on file.
"DATA",811.9,21,4,0)
^811.95P^1^1
"DATA",811.9,21,4,1,0)
8
"DATA",811.9,21,4,1,1,0)
^^2^2^2970421^^^^
"DATA",811.9,21,4,1,1,1,0)
Patient known to have HX of prostate cancer.  Please verify appropriate TX
"DATA",811.9,21,4,1,1,2,0)
and F/U is ongoing.
"DATA",811.9,21,7,0)
^811.97^2^1
"DATA",811.9,21,7,2,0)
1Y^40^75
"DATA",811.9,21,20,0)
^811.902V^2^2
"DATA",811.9,21,20,1,0)
13;AUTTEXAM(^^^^^!^^
"DATA",811.9,21,20,1,2,0)
^^1^1^2990726
"DATA",811.9,21,20,1,2,1,0)
Date of last rectal exam not on file.
"DATA",811.9,21,20,2,0)
8;PXD(811.2,^^^^^^^^^^
"DATA",811.9,21,20,2,1,0)
^^2^2^2990726
"DATA",811.9,21,20,2,1,1,0)
Patient known to have HX of prostate cancer.  Please verify appropriate TX
"DATA",811.9,21,20,2,1,2,0)
and F/U is ongoing.
"DATA",811.9,21,31)
(SEX)&(AGE)
"DATA",811.9,21,32)
0^
"DATA",811.9,21,35)
(0)!FI(1)
"DATA",811.9,21,36)
1^1
"DATA",811.9,21,40)
0^
"DATA",811.9,21,42)
1^2
"DATA",811.9,22,0)
VA-NUTRITION/OBESITY EDUCATION^1^Nutrition/Obesity Education^1M^9
"DATA",811.9,22,1,0)
^811.92^9^9^3000405^^^^
"DATA",811.9,22,1,1,0)
Given yearly to patients of any age who have a history of a nutrition disorder
"DATA",811.9,22,1,2,0)
or a history of obesity.  Also given to patients who are considered obese
"DATA",811.9,22,1,3,0)
based on a Body Mass Index greater than 27, which represents weight
"DATA",811.9,22,1,4,0)
greater than 120% of Ideal Body Weight.
"DATA",811.9,22,1,5,0)
 
"DATA",811.9,22,1,6,0)
This reminder is based on guidelines defined by the Ambulatory Care Expert
"DATA",811.9,22,1,7,0)
Panel. This reminder also supports the "Weight Control and Nutrition
"DATA",811.9,22,1,8,0)
Counseling" guidelines defined in the "Guidelines for Health Promotion and
"DATA",811.9,22,1,9,0)
Disease Prevention", M-2, Part IV, Chapter 9.
"DATA",811.9,22,2,0)
^811.93^11^11^3000405^^
"DATA",811.9,22,2,1,0)
The most recent taxonomy finding within a taxonomy is presented for
"DATA",811.9,22,2,2,0)
clinical information.
"DATA",811.9,22,2,3,0)
 
"DATA",811.9,22,2,4,0)
The most recent health factor finding within a health factor
"DATA",811.9,22,2,5,0)
category is presented for clinical information. If all 6 of the health
"DATA",811.9,22,2,6,0)
factors that are from the NUTRITION health factor category were found for
"DATA",811.9,22,2,7,0)
the patient, only the most recent health factor within the "NUTRITION"
"DATA",811.9,22,2,8,0)
health factor category would be used by the reminder.  Since the activate
"DATA",811.9,22,2,9,0)
and inactivate health factors are defined under the "REMINDER CATEGORY"
"DATA",811.9,22,2,10,0)
they are evaluated and the most recent of these two factors would also be
"DATA",811.9,22,2,11,0)
used by the reminder.
"DATA",811.9,22,3,0)
^811.94P^1^1
"DATA",811.9,22,3,1,0)
9999999.09
"DATA",811.9,22,3,1,1,0)
^811.941^3^3^3000405^^^^
"DATA",811.9,22,3,1,1,1,0)
This reminder is defined to include result finding items in the EDUCATION
"DATA",811.9,22,3,1,1,2,0)
TOPICS file.  The education topics should include Nuturition/Obesity
"DATA",811.9,22,3,1,1,3,0)
Education topics and screening topics. 
"DATA",811.9,22,3,1,2,0)
^811.944V^2^2
"DATA",811.9,22,3,1,2,1,0)
371;AUTTEDT(
"DATA",811.9,22,3,1,2,2,0)
12;AUTTEDT(
"DATA",811.9,22,4,0)
^811.95P^3^3
"DATA",811.9,22,4,1,0)
20
"DATA",811.9,22,4,1,1,0)
^^1^1^2970422^^^^
"DATA",811.9,22,4,1,1,1,0)
Patient has a history of obesity.
"DATA",811.9,22,4,1,2,0)
^^1^1^2970422^^
"DATA",811.9,22,4,1,2,1,0)
No HX of obesity on file.
"DATA",811.9,22,4,2,0)
21
"DATA",811.9,22,4,2,1,0)
^^1^1^2970422^^^^
"DATA",811.9,22,4,2,1,1,0)
Patient has a history of a nutrition disorder.
"DATA",811.9,22,4,2,2,0)
^^1^1^2970422^^^^
"DATA",811.9,22,4,2,2,1,0)
No HX of nutrition disorder on file.
"DATA",811.9,22,4,3,0)
36^^^^^1
"DATA",811.9,22,6,0)
^811.911P^8^8
"DATA",811.9,22,6,1,0)
25
"DATA",811.9,22,6,2,0)
26
"DATA",811.9,22,6,3,0)
27
"DATA",811.9,22,6,4,0)
28
"DATA",811.9,22,6,5,0)
29
"DATA",811.9,22,6,6,0)
30
"DATA",811.9,22,6,7,0)
67^^^^^^&'
"DATA",811.9,22,6,8,0)
68
"DATA",811.9,22,7,0)
^811.97^1^1
"DATA",811.9,22,7,1,0)
1Y
"DATA",811.9,22,7,1,1,0)
^811.973^1^1^3000405^^^
"DATA",811.9,22,7,1,1,1,0)
Weight and Nutrition education due yearly for all ages.
"DATA",811.9,22,10,0)
^811.9001^1^1
"DATA",811.9,22,10,1,0)
OBESE;PXRMOBES^^^^Calculate BMI>27
"DATA",811.9,22,20,0)
^811.902V^14^14
"DATA",811.9,22,20,1,0)
371;AUTTEDT(^^^^^!^^
"DATA",811.9,22,20,2,0)
12;AUTTEDT(^^^^^!^^
"DATA",811.9,22,20,3,0)
20;PXD(811.2,^^^^^^^^^^
"DATA",811.9,22,20,3,1,0)
^^2^2^2990726
"DATA",811.9,22,20,3,1,1,0)
Patient has a history of obesity.
"DATA",811.9,22,20,3,1,2,0)
and F/U is ongoing.
"DATA",811.9,22,20,3,2,0)
^^1^1^2990726
"DATA",811.9,22,20,3,2,1,0)
No HX of obesity on file.
"DATA",811.9,22,20,4,0)
21;PXD(811.2,^^^^^^^^^^
"DATA",811.9,22,20,4,1,0)
^^1^1^3000406^
"DATA",811.9,22,20,4,1,1,0)
Patient has a history of a nutrition disorder.
"DATA",811.9,22,20,4,2,0)
^811.9025^1^1^3000406^
"DATA",811.9,22,20,4,2,1,0)
No HX of nutrition disorder on file.
"DATA",811.9,22,20,5,0)
36;PXD(811.2,^^^^^!^^^^^
"DATA",811.9,22,20,6,0)
25;AUTTHF(^^^^^^^^^^
"DATA",811.9,22,20,7,0)
26;AUTTHF(^^^^^^^^^^
"DATA",811.9,22,20,8,0)
27;AUTTHF(^^^^^^^^^^
"DATA",811.9,22,20,9,0)
28;AUTTHF(^^^^^^^^^^
"DATA",811.9,22,20,10,0)
29;AUTTHF(^^^^^^^^^^
"DATA",811.9,22,20,11,0)
30;AUTTHF(^^^^^^^^^^
"DATA",811.9,22,20,12,0)
67;AUTTHF(^^^^^^&'^^^^
"DATA",811.9,22,20,13,0)
68;AUTTHF(^^^^^^^^^^
"DATA",811.9,22,20,14,0)
1;PXRMD(811.4,^^^^^^&^^^^I V>27
"DATA",811.9,22,20,14,1,0)
^^1^1^3000405^
"DATA",811.9,22,20,14,1,1,0)
Patient's BMI is greater than 27.
"DATA",811.9,22,31)
(SEX)&(AGE)&'FI(12)&FI(14)
"DATA",811.9,22,32)
2^12;14
"DATA",811.9,22,35)
(0)!FI(1)!FI(2)!FI(5)
"DATA",811.9,22,36)
3^1;2;5
"DATA",811.9,22,40)
0^
"DATA",811.9,22,42)
9^3;4;6;7;8;9;10;11;13
"DATA",811.9,23,0)
VA-*CHOLESTEROL SCREEN (M)^7^Cholesterol Screen (Male)^3M^23^^^S^M
"DATA",811.9,23,1,0)
^^13^13^2970224^
"DATA",811.9,23,1,1,0)
This Cholesterol screen reminder for males is based on the following
"DATA",811.9,23,1,2,0)
"Hyperlipidemia Detection" guidelines specified in the VHA HANDBOOK
"DATA",811.9,23,1,3,0)
1101.8, APPENDIX A.
"DATA",811.9,23,1,4,0)
 
"DATA",811.9,23,1,5,0)
    Target Conditions: Cardiovascular Disease.
"DATA",811.9,23,1,6,0)
 
"DATA",811.9,23,1,7,0)
    Target Group: Males ages 35-65.
"DATA",811.9,23,1,8,0)
 
"DATA",811.9,23,1,9,0)
    Recommendation: Check total cholesterol level within the past
"DATA",811.9,23,1,10,0)
    five years.
"DATA",811.9,23,1,11,0)
 
"DATA",811.9,23,1,12,0)
    Goal for FY 2000: 75% of males ages 35-65 Primary Care clinic patients
"DATA",811.9,23,1,13,0)
    have had a blood cholesterol level check within the past five years.
"DATA",811.9,23,2,0)
^^13^13^2970211^^^^
"DATA",811.9,23,2,1,0)
As distributed, this reminder is based on CPT codes which represent
"DATA",811.9,23,2,2,0)
cholesterol tests the patient has had documented in PCE.  These may be CPT
"DATA",811.9,23,2,3,0)
codes for cholesterol done by the Laboratory Service, or a historical
"DATA",811.9,23,2,4,0)
encounter documented to show when the cholesterol test was last given to
"DATA",811.9,23,2,5,0)
the patient.
"DATA",811.9,23,2,6,0)
 
"DATA",811.9,23,2,7,0)
Copy this reminder to a new reminder for your site. Add the Laboratory
"DATA",811.9,23,2,8,0)
Tests that represent a cholesterol level check in the Result Findings
"DATA",811.9,23,2,9,0)
multiple.
"DATA",811.9,23,2,10,0)
 
"DATA",811.9,23,2,11,0)
PLEASE NOTE: Your local version of this reminder will include the search
"DATA",811.9,23,2,12,0)
based on the local ancillary Lab package results, it is possible that 5
"DATA",811.9,23,2,13,0)
years worth of patient lab history are not on record.
"DATA",811.9,23,3,0)
^811.94P^1^1
"DATA",811.9,23,3,1,0)
60
"DATA",811.9,23,3,1,1,0)
^^3^3^2970211^^^^
"DATA",811.9,23,3,1,1,1,0)
The Laboratory Test file is used to identify CHOLESTEROL lab tests.
"DATA",811.9,23,3,1,1,2,0)
Define Selection Item entries below that should be used for checking the
"DATA",811.9,23,3,1,1,3,0)
DHCP Lab results for Cholesterol values.
"DATA",811.9,23,3,1,4,0)
^^1^1^2970211^
"DATA",811.9,23,3,1,4,1,0)
LAB: Date of last cholesterol test unknown.
"DATA",811.9,23,4,0)
^811.95P^1^1
"DATA",811.9,23,4,1,0)
24^^^^^1
"DATA",811.9,23,6,0)
^811.911P^2^2
"DATA",811.9,23,6,1,0)
48^^^0Y^^^&'
"DATA",811.9,23,6,2,0)
46
"DATA",811.9,23,7,0)
^811.97^1^1
"DATA",811.9,23,7,1,0)
5Y^35^65
"DATA",811.9,23,7,1,1,0)
^^1^1^2970211^^^^
"DATA",811.9,23,7,1,1,1,0)
Check total cholesterol every 5 years for men ages 35-65.
"DATA",811.9,23,20,0)
^811.902V^3^3
"DATA",811.9,23,20,1,0)
24;PXD(811.2,^^^^^!^^^^^
"DATA",811.9,23,20,2,0)
48;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,23,20,3,0)
46;AUTTHF(^^^^^^^^^^
"DATA",811.9,23,31)
(SEX)&(AGE)&'FI(2)
"DATA",811.9,23,32)
1^2
"DATA",811.9,23,35)
(0)!FI(1)
"DATA",811.9,23,36)
1^1
"DATA",811.9,23,40)
1^2
"DATA",811.9,23,42)
1^3
"DATA",811.9,24,0)
VA-FECAL OCCULT BLOOD TEST^2^Fecal Occult Blood Test^1M^6
"DATA",811.9,24,1,0)
^^9^9^2970421^^^^
"DATA",811.9,24,1,1,0)
Fecal occult blood test due every year for patients ages 50 and older with
"DATA",811.9,24,1,2,0)
no DX of colorectal cancer.  This reminder conservatively recommends that
"DATA",811.9,24,1,3,0)
if a sigmoidoscopy was received, the next fecal occult blood test would be
"DATA",811.9,24,1,4,0)
due a year later.
"DATA",811.9,24,1,5,0)
  
"DATA",811.9,24,1,6,0)
This reminder is based on guidelines provided by the Ambulatory Care
"DATA",811.9,24,1,7,0)
Expert Panel.  It also satisfies the "Colorectal Cancer Screen - FOBT"
"DATA",811.9,24,1,8,0)
guidelines specified in the "Guidelines for Health Promotion and Disease
"DATA",811.9,24,1,9,0)
Prevention", M-2, Part IV, Chapter 9.
"DATA",811.9,24,2,0)
^^18^18^2970421^^^
"DATA",811.9,24,2,1,0)
This reminder depends on Exam findings where an FOBT is completed in the
"DATA",811.9,24,2,2,0)
clinic, or on Taxonomy Findings representing FOBT.
"DATA",811.9,24,2,3,0)
 
"DATA",811.9,24,2,4,0)
Check the Taxonomy Findings entries representing HX of Colorectal Cancer.
"DATA",811.9,24,2,5,0)
If this taxonomy needs modification, copy the taxonomy to a new taxonomy
"DATA",811.9,24,2,6,0)
for your site, and make the appropriate modifications.
"DATA",811.9,24,2,7,0)
 
"DATA",811.9,24,2,8,0)
Check the Taxonomy Findings entries representing Fecal Occult Blood Test.
"DATA",811.9,24,2,9,0)
This represents coded standard entries in the CPT file and ICD
"DATA",811.9,24,2,10,0)
Operation/Procedure file.  If this taxonomy needs modification, copy the
"DATA",811.9,24,2,11,0)
taxonomy to a new taxonomy for your site, and make the appropriate
"DATA",811.9,24,2,12,0)
modifications.
"DATA",811.9,24,2,13,0)
 
"DATA",811.9,24,2,14,0)
Copy the reminder to a new reminder for your local site's modifications.
"DATA",811.9,24,2,15,0)
 
"DATA",811.9,24,2,16,0)
NOTE:  The Laboratory data is not available use in the reminder.  When the
"DATA",811.9,24,2,17,0)
lab package begins passing CPT codes for fecal occult blood tests to PCE,
"DATA",811.9,24,2,18,0)
this reminder is ready to make use of the information.
"DATA",811.9,24,3,0)
^811.94P^1^1
"DATA",811.9,24,3,1,0)
9999999.15
"DATA",811.9,24,3,1,1,0)
^^8^8^2970211^
"DATA",811.9,24,3,1,1,1,0)
Identify all exams which represent Fecal Occult Blood tests done by the
"DATA",811.9,24,3,1,1,2,0)
clinic in the Target Result Findings Item multiple.
"DATA",811.9,24,3,1,1,3,0)
 
"DATA",811.9,24,3,1,1,4,0)
FOBT's CPT codes are defined in the VA-FOBT taxonomy and Sigmoidoscopy CPT
"DATA",811.9,24,3,1,1,5,0)
codes are defined in the VA-FLEXISIGMOIDOSCOPY taxonomy.  Since the
"DATA",811.9,24,3,1,1,6,0)
taxonomies are defined separately, the most recent finding from both
"DATA",811.9,24,3,1,1,7,0)
taxonomies will be presented in the clinical maintenance component of the
"DATA",811.9,24,3,1,1,8,0)
health summary.
"DATA",811.9,24,3,1,2,0)
^811.944V^1^1
"DATA",811.9,24,3,1,2,1,0)
660001;AUTTEXAM(
"DATA",811.9,24,4,0)
^811.95P^3^3
"DATA",811.9,24,4,1,0)
4^^^0Y^^^&'
"DATA",811.9,24,4,1,1,0)
^^2^2^2970424^^^^
"DATA",811.9,24,4,1,1,1,0)
Patient known to have HX of colorectal cancer.  Please verify appropriate
"DATA",811.9,24,4,1,1,2,0)
TX & F/U is ongoing.
"DATA",811.9,24,4,1,2,0)
^^1^1^2970424^^^^
"DATA",811.9,24,4,1,2,1,0)
No HX of colorectal cancer on file - presumed no HX.
"DATA",811.9,24,4,2,0)
27^^^^^1
"DATA",811.9,24,4,3,0)
15^^^^^1
"DATA",811.9,24,6,0)
^811.911P^2^2
"DATA",811.9,24,6,1,0)
49^^^0Y^^^&'
"DATA",811.9,24,6,2,0)
50
"DATA",811.9,24,7,0)
^811.97^1^1
"DATA",811.9,24,7,1,0)
1Y^50
"DATA",811.9,24,20,0)
^811.902V^6^6
"DATA",811.9,24,20,1,0)
660001;AUTTEXAM(^^^^^!^^
"DATA",811.9,24,20,2,0)
4;PXD(811.2,^^^0Y^^^&'^^^^
"DATA",811.9,24,20,2,1,0)
^^2^2^2990726
"DATA",811.9,24,20,2,1,1,0)
Patient known to have HX of colorectal cancer.  Please verify appropriate
"DATA",811.9,24,20,2,1,2,0)
TX & F/U is ongoing.
"DATA",811.9,24,20,2,2,0)
^^1^1^2990726
"DATA",811.9,24,20,2,2,1,0)
No HX of colorectal cancer on file - presumed no HX.
"DATA",811.9,24,20,3,0)
27;PXD(811.2,^^^^^!^^^^^
"DATA",811.9,24,20,4,0)
15;PXD(811.2,^^^^^!^^^^^
"DATA",811.9,24,20,5,0)
49;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,24,20,6,0)
50;AUTTHF(^^^^^^^^^^
"DATA",811.9,24,31)
(SEX)&(AGE)&'FI(2)&'FI(5)
"DATA",811.9,24,32)
2^2;5
"DATA",811.9,24,35)
(0)!FI(1)!FI(3)!FI(4)
"DATA",811.9,24,36)
3^1;3;4
"DATA",811.9,24,40)
2^2;5
"DATA",811.9,24,42)
1^6
"DATA",811.9,24,51)

"DATA",811.9,25,0)
VA-FLEXISIGMOIDOSCOPY^5^Flexisigmoidoscopy^1M^15
"DATA",811.9,25,1,0)
^^7^7^2970421^^^^
"DATA",811.9,25,1,1,0)
Flexisigmoidoscopy every 5 years for patients age 50 and older, with no DX
"DATA",811.9,25,1,2,0)
of colorectal cancer.
"DATA",811.9,25,1,3,0)
 
"DATA",811.9,25,1,4,0)
This reminder is based on guidelines provided by the Ambulatory Care
"DATA",811.9,25,1,5,0)
Expert Panel and satisfies the sigmoidoscopy requirements for the
"DATA",811.9,25,1,6,0)
"Colorectal Cancer Detection" guidelines specified in the "Guidelines for
"DATA",811.9,25,1,7,0)
Health Promotion and Disease Prevention", M-2, Part IV, Chapter 9.
"DATA",811.9,25,2,0)
^^11^11^2970424^^^^
"DATA",811.9,25,2,1,0)
Check the Taxonomy Findings entries representing HX of Colorectal
"DATA",811.9,25,2,2,0)
Cancer. If this taxonomy needs modification, copy the taxonomy to a new
"DATA",811.9,25,2,3,0)
taxonomy for your site, and make the appropriate modifications.
"DATA",811.9,25,2,4,0)
 
"DATA",811.9,25,2,5,0)
Check the Taxonomy Findings entries representing flexisigimoidoscopy
"DATA",811.9,25,2,6,0)
procedures. This represents coded standard entries in the CPT file and ICD
"DATA",811.9,25,2,7,0)
Operation/Procedure file.  If this taxonomy needs modification, copy
"DATA",811.9,25,2,8,0)
the taxonomy to a new taxonomy for your site, and make the
"DATA",811.9,25,2,9,0)
appropriate modifications.
"DATA",811.9,25,2,10,0)
 
"DATA",811.9,25,2,11,0)
Copy the reminder to a new reminder for your local sites modifications.
"DATA",811.9,25,4,0)
^811.95P^2^2
"DATA",811.9,25,4,1,0)
15
"DATA",811.9,25,4,1,2,0)
^^1^1^2960208^
"DATA",811.9,25,4,1,2,1,0)
No flexisigmoidoscopy "CPT" or "ICD O/P" on file. 
"DATA",811.9,25,4,2,0)
4
"DATA",811.9,25,4,2,1,0)
^^1^1^2970421^^^^
"DATA",811.9,25,4,2,1,1,0)
Patient has HX of colorectal cancer.  More detailed F/U indicated.
"DATA",811.9,25,6,0)
^811.911P^2^2
"DATA",811.9,25,6,1,0)
51^^^0Y^^^&'
"DATA",811.9,25,6,2,0)
52
"DATA",811.9,25,7,0)
^811.97^1^1
"DATA",811.9,25,7,1,0)
5Y^50
"DATA",811.9,25,7,1,2,0)
^^1^1^2970212^^^^
"DATA",811.9,25,7,1,2,1,0)
Flexisigmoidoscopy not indicted for patients under 50.
"DATA",811.9,25,20,0)
^811.902V^4^4
"DATA",811.9,25,20,1,0)
15;PXD(811.2,^^^^^^^^^^
"DATA",811.9,25,20,1,2,0)
^^1^1^2990726
"DATA",811.9,25,20,1,2,1,0)
No flexisigmoidoscopy "CPT" or "ICD O/P" on file. 
"DATA",811.9,25,20,2,0)
4;PXD(811.2,^^^^^^^^^^
"DATA",811.9,25,20,2,1,0)
^^2^2^2990726
"DATA",811.9,25,20,2,1,1,0)
Patient has HX of colorectal cancer.  More detailed F/U indicated.
"DATA",811.9,25,20,2,1,2,0)
ongoing.
"DATA",811.9,25,20,3,0)
51;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,25,20,4,0)
52;AUTTHF(^^^^^^^^^^
"DATA",811.9,25,31)
(SEX)&(AGE)&'FI(3)
"DATA",811.9,25,32)
1^3
"DATA",811.9,25,36)
0^
"DATA",811.9,25,40)
1^3
"DATA",811.9,25,42)
3^1;2;4
"DATA",811.9,26,0)
VA-INFLUENZA VACCINE^3^Influenza Vaccine ^1M^8^1^3000104.1548
"DATA",811.9,26,1,0)
^^9^9^2970422^^^^
"DATA",811.9,26,1,1,0)
Influenza vaccine given yearly for patients ages 65 and older, and
"DATA",811.9,26,1,2,0)
for patients of any age with a history of any of the following: asthma,
"DATA",811.9,26,1,3,0)
COPD, DM, ASVCD, CHG, chronic bronchitis, HIV positive or AIDS, renal
"DATA",811.9,26,1,4,0)
transplant, or cancer chemotherapy.
"DATA",811.9,26,1,5,0)
 
"DATA",811.9,26,1,6,0)
This reminder is defined based on guidelines from the Ambulatory Care
"DATA",811.9,26,1,7,0)
Expert Panel.  It also supports the "Influenza Immunization" guidelines
"DATA",811.9,26,1,8,0)
specified in the "Guidelines for Health Promotion and Disease Prevention",
"DATA",811.9,26,1,9,0)
M-2, Part IV, Chapter 9.
"DATA",811.9,26,2,0)
^^5^5^2970421^^^^
"DATA",811.9,26,2,1,0)
Check the Taxonomy Findings representing High Risk for Flu/Pneumonia. If
"DATA",811.9,26,2,2,0)
this taxonomy needs modification, copy the taxonomy to a new taxonomy for
"DATA",811.9,26,2,3,0)
your site, and make the appropriate modifications.
"DATA",811.9,26,2,4,0)
 
"DATA",811.9,26,2,5,0)
Copy the reminder to a new reminder for your local sites modifications.
"DATA",811.9,26,3,0)
^811.94P^2^1
"DATA",811.9,26,3,2,0)
9999999.14
"DATA",811.9,26,3,2,1,0)
^^2^2^2970211^^^^
"DATA",811.9,26,3,2,1,1,0)
The immunization file identifies all immunizations to check that represent
"DATA",811.9,26,3,2,1,2,0)
INFLUENZA immunizations.
"DATA",811.9,26,3,2,2,0)
^811.944V^1^1
"DATA",811.9,26,3,2,2,1,0)
12;AUTTIMM(
"DATA",811.9,26,4,0)
^811.95P^2^2
"DATA",811.9,26,4,1,0)
9^^^1Y
"DATA",811.9,26,4,1,1,0)
^^2^2^2970422^^^^
"DATA",811.9,26,4,1,1,1,0)
Flu shot due yearly in patients any age that have a high risk for flu or
"DATA",811.9,26,4,1,1,2,0)
pneumonia.
"DATA",811.9,26,4,2,0)
33^^^^^1
"DATA",811.9,26,6,0)
^811.911P^2^2
"DATA",811.9,26,6,1,0)
55^^^0Y^^^&'
"DATA",811.9,26,6,2,0)
56
"DATA",811.9,26,7,0)
^811.97^1^1
"DATA",811.9,26,7,1,0)
1Y^65
"DATA",811.9,26,7,1,1,0)
^^1^1^2970211^^^^
"DATA",811.9,26,7,1,1,1,0)
Influenza vaccine due yearly in patients ages 65 and older.
"DATA",811.9,26,20,0)
^811.902V^5^5
"DATA",811.9,26,20,1,0)
12;AUTTIMM(^^^^^!^^
"DATA",811.9,26,20,2,0)
9;PXD(811.2,^^^1Y^^^^^^^
"DATA",811.9,26,20,2,1,0)
^^2^2^2990726
"DATA",811.9,26,20,2,1,1,0)
Flu shot due yearly in patients any age that have a high risk for flu or
"DATA",811.9,26,20,2,1,2,0)
pneumonia.
"DATA",811.9,26,20,3,0)
33;PXD(811.2,^^^^^!^^^^^
"DATA",811.9,26,20,4,0)
55;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,26,20,5,0)
56;AUTTHF(^^^^^^^^^^
"DATA",811.9,26,31)
(SEX)&(AGE)&'FI(4)
"DATA",811.9,26,32)
1^4
"DATA",811.9,26,35)
(0)!FI(1)!FI(3)
"DATA",811.9,26,36)
2^1;3
"DATA",811.9,26,40)
2^2;4
"DATA",811.9,26,42)
1^5
"DATA",811.9,26,51)

"DATA",811.9,27,0)
VA-HEP C RISK ASSESSMENT^^Hepatitis C Risk Assessment^^^^^^
"DATA",811.9,27,1,0)
^^3^3^3000510^
"DATA",811.9,27,1,1,0)
Assess all patients for hepatitis C risk factors once. Patients with a
"DATA",811.9,27,1,2,0)
previous laboratory test for hepatitis C or a previous diagnosis of
"DATA",811.9,27,1,3,0)
hepatitis C do not require further risk assessment.
"DATA",811.9,27,2,0)
^^62^62^3000510^
"DATA",811.9,27,2,1,0)
This reminder is based on a policy letter published by the Under Secretary
"DATA",811.9,27,2,2,0)
of Health (USH) in June 1998.  The USH directed that "all patients will be
"DATA",811.9,27,2,3,0)
evaluated with respect to risk factors" for HCV. Clinicians are required
"DATA",811.9,27,2,4,0)
to record this assessment in the patients' medical records.  Based on risk
"DATA",811.9,27,2,5,0)
factors, antibody testing should be used according to an algorithm
"DATA",811.9,27,2,6,0)
included in the policy letter. 
"DATA",811.9,27,2,7,0)
 
"DATA",811.9,27,2,8,0)
According to the VHA Chief Consultant for its Acute Care Strategic Health
"DATA",811.9,27,2,9,0)
Care Group, the USH intends that each patient seeking care in a VHA
"DATA",811.9,27,2,10,0)
facility will be screened for HCV risk factors.  VISN officials were
"DATA",811.9,27,2,11,0)
advised of this mandate.
"DATA",811.9,27,2,12,0)
 
"DATA",811.9,27,2,13,0)
BEFORE USING THIS REMINDER, sites need to use the Reminder Term
"DATA",811.9,27,2,14,0)
Management option to define the local findings that are used to
"DATA",811.9,27,2,15,0)
represent the national reminder terms:
"DATA",811.9,27,2,16,0)
 
"DATA",811.9,27,2,17,0)
   RISK FACTOR FOR HEPATITIS C
"DATA",811.9,27,2,18,0)
     This term is released with the health factor RISK FACTOR FOR
"DATA",811.9,27,2,19,0)
     HEPATITIS C.  Add any local findings that represent this term to the
"DATA",811.9,27,2,20,0)
     terms findings.
"DATA",811.9,27,2,21,0)
 
"DATA",811.9,27,2,22,0)
   NO RISK FACTORS FOR HEP C
"DATA",811.9,27,2,23,0)
     This term is released with the health factor NO RISK FACTORS FOR HEP
"DATA",811.9,27,2,24,0)
     C.  Add any local findings that represent this term to the terms
"DATA",811.9,27,2,25,0)
     findings.
"DATA",811.9,27,2,26,0)
 
"DATA",811.9,27,2,27,0)
   DECLINED HEP C RISK ASSESSMENT 
"DATA",811.9,27,2,28,0)
     This term is released with the health factor NO RISK FACTORS FOR HEP
"DATA",811.9,27,2,29,0)
     C.  Add any local findings that represent this term to the terms
"DATA",811.9,27,2,30,0)
     findings.
"DATA",811.9,27,2,31,0)
 
"DATA",811.9,27,2,32,0)
   PREV POSITIVE TEST FOR HEP C
"DATA",811.9,27,2,33,0)
     This term is released with the health factor PREV POSITIVE TEST FOR
"DATA",811.9,27,2,34,0)
     HEP C. Add any local findings that represent this term to the terms
"DATA",811.9,27,2,35,0)
     findings. This term may be used to document historical positive
"DATA",811.9,27,2,36,0)
     tests completed outside the facility.
"DATA",811.9,27,2,37,0)
 
"DATA",811.9,27,2,38,0)
   HEPATITIS C VIRUS ANTIBODY POSITIVE
"DATA",811.9,27,2,39,0)
     Add local HCVAb lab tests with a condition to check for a positive
"DATA",811.9,27,2,40,0)
     result. An example of the condition field might be: I V="positive"
"DATA",811.9,27,2,41,0)
     or I (V["P")!(V["p"). The text used in the I V="text" condition will
"DATA",811.9,27,2,42,0)
     depend on how the local lab package stores the HCVAb lab result.
"DATA",811.9,27,2,43,0)
     Other lab tests that indicate the patient has Hepatitis C, such as
"DATA",811.9,27,2,44,0)
     viral load test, may also be included as findings for this term.
"DATA",811.9,27,2,45,0)
 
"DATA",811.9,27,2,46,0)
   HEPATITIS C VIRUS ANTIBODY NEGATIVE
"DATA",811.9,27,2,47,0)
     Add local HCVAb lab tests with a condition to check for a negative
"DATA",811.9,27,2,48,0)
     result. An example of the condition field might be: I V="negative"
"DATA",811.9,27,2,49,0)
     or I (V["N")!(V["n"). The text used in the I V="text" condition will
"DATA",811.9,27,2,50,0)
     depend on how the local lab package stores the HCVAb lab result.
"DATA",811.9,27,2,51,0)
     Other lab tests that indicate the patient has Hepatitis C, such as
"DATA",811.9,27,2,52,0)
     viral load test, may also be included as findings for this term.
"DATA",811.9,27,2,53,0)
 
"DATA",811.9,27,2,54,0)
   HEPATITIS C INFECTION
"DATA",811.9,27,2,55,0)
     This term is released with the reminder taxonomy VA-HEPATITIS C
"DATA",811.9,27,2,56,0)
     INFECTION.  Note:  This taxonomy can be copied and modified for
"DATA",811.9,27,2,57,0)
     local changes. (e.g. To eliminate using problem list diagnosis from
"DATA",811.9,27,2,58,0)
     the findings, use the new PATIENT DATA SOURCE field to control where
"DATA",811.9,27,2,59,0)
     to look for the HEPATITIS C INFECTION diagnosis.  Alternatively you
"DATA",811.9,27,2,60,0)
     can define an expiration period to consider the diagnosis valid.)
"DATA",811.9,27,2,61,0)
     Add any other local findings that represent this term as the
"DATA",811.9,27,2,62,0)
     findings for the term.
"DATA",811.9,27,3,0)
^811.94P^^0
"DATA",811.9,27,6,0)
^811.911P^^0
"DATA",811.9,27,7,0)
^811.97^1^1
"DATA",811.9,27,7,1,0)
99Y
"DATA",811.9,27,9)

"DATA",811.9,27,20,0)
^811.902V^7^7
"DATA",811.9,27,20,1,0)
3;PXRMD(811.5,^^^^^!^^^
"DATA",811.9,27,20,2,0)
4;PXRMD(811.5,^^^^^!^^^
"DATA",811.9,27,20,3,0)
2;PXRMD(811.5,^^^^^!^^^
"DATA",811.9,27,20,4,0)
1;PXRMD(811.5,^^^^^!^^^
"DATA",811.9,27,20,5,0)
5;PXRMD(811.5,^^^^^!^
"DATA",811.9,27,20,6,0)
6;PXRMD(811.5,^^^^^!^
"DATA",811.9,27,20,7,0)
7;PXRMD(811.5,^^^^^!^
"DATA",811.9,27,31)
(SEX)&(AGE)
"DATA",811.9,27,32)
0^
"DATA",811.9,27,35)
(0)!FI(1)!FI(2)!FI(3)!FI(4)!FI(5)!FI(6)!FI(7)
"DATA",811.9,27,36)
7^1;2;3;4;5;6;7
"DATA",811.9,27,40)
0^
"DATA",811.9,27,42)
0^
"DATA",811.9,27,50,0)
^811.9002^^0
"DATA",811.9,27,66,0)
^811.966^12^12^3000510^^^^
"DATA",811.9,27,66,1,0)
Patients should be assessed once for any one of the following risk factors
"DATA",811.9,27,66,2,0)
in the past or present:
"DATA",811.9,27,66,3,0)
   1.  Blood/Blood product prior to 1992
"DATA",811.9,27,66,4,0)
   2.  Illicit injected drug use
"DATA",811.9,27,66,5,0)
   3.  Unequivocal blood exposure
"DATA",811.9,27,66,6,0)
   4.  Multiple sexual partners
"DATA",811.9,27,66,7,0)
   5.  Hemodialysis
"DATA",811.9,27,66,8,0)
   6.  Tatoo/repeated body piercing
"DATA",811.9,27,66,9,0)
   7.  Intranasal cocaine use
"DATA",811.9,27,66,10,0)
   8.  Unexplained liver disease
"DATA",811.9,27,66,11,0)
   9.  Unexplained abnormal ALT value
"DATA",811.9,27,66,12,0)
  10.  Intemperate alcohol use.
"DATA",811.9,28,0)
VA-PNEUMOVAX^3^Pneumovax^3M^10
"DATA",811.9,28,1,0)
^^9^9^2990402
"DATA",811.9,28,1,1,0)
Pneumovax given once to patients 65 and over, and to patients of any
"DATA",811.9,28,1,2,0)
age with a history of any of the following diagnoses: asthma, COPD,
"DATA",811.9,28,1,3,0)
DM, ASCVD, CHG, chronic bronchitis, HIV positive or AIDS, renal
"DATA",811.9,28,1,4,0)
transplant, or cancer chemotherapy.
"DATA",811.9,28,1,5,0)
 
"DATA",811.9,28,1,6,0)
This reminder is defined based on guidelines from the Ambulatory
"DATA",811.9,28,1,7,0)
Care Expert Panel.  It also supports the "Pneumococcal Vaccine" guidelines
"DATA",811.9,28,1,8,0)
specified in the "Guidelines for Health Promotion and Disease Prevention",
"DATA",811.9,28,1,9,0)
M-2, Part IV, Chapter 9.
"DATA",811.9,28,2,0)
^^8^8^2990402
"DATA",811.9,28,2,1,0)
If this reminder is not going to be used at your facility, the INACTIVE
"DATA",811.9,28,2,2,0)
FLAG should be set to inactive.
"DATA",811.9,28,2,3,0)
 
"DATA",811.9,28,2,4,0)
Check the Taxonomy Findings representing High Risk for Flu/Pneumonia.
"DATA",811.9,28,2,5,0)
If the taxonomy needs modification, copy the taxonomy to a new taxonomy
"DATA",811.9,28,2,6,0)
for your site, and make the appropriate modifications.
"DATA",811.9,28,2,7,0)
 
"DATA",811.9,28,2,8,0)
Copy the reminder to a new reminder for your local sites modifications.
"DATA",811.9,28,3,0)
^811.94P^1^1
"DATA",811.9,28,3,1,0)
9999999.14
"DATA",811.9,28,3,1,1,0)
^^3^3^2990402
"DATA",811.9,28,3,1,1,1,0)
The Immunization File identifies all immunizations that represent 
"DATA",811.9,28,3,1,1,2,0)
PNEUMOCOCCAL immunizations.  Any immunizations for PNEUMONIA should be
"DATA",811.9,28,3,1,1,3,0)
specified as selection items for this criteria.
"DATA",811.9,28,3,1,2,0)
^811.944V^1^1
"DATA",811.9,28,3,1,2,1,0)
19;AUTTIMM(
"DATA",811.9,28,4,0)
^811.95P^2^2
"DATA",811.9,28,4,1,0)
9^^^99Y
"DATA",811.9,28,4,1,1,0)
^^1^1^2990402
"DATA",811.9,28,4,1,1,1,0)
Pneumovax due once in high risk patients.
"DATA",811.9,28,4,1,2,0)
^^1^1^2990402
"DATA",811.9,28,4,1,2,1,0)
No high risk DX for flu/pneumonia on file. Presumed low risk.
"DATA",811.9,28,4,2,0)
25^^^^^1
"DATA",811.9,28,6,0)
^811.911P^2^2
"DATA",811.9,28,6,1,0)
57^^^0Y^^^&'
"DATA",811.9,28,6,2,0)
58
"DATA",811.9,28,7,0)
^811.97^1^1
"DATA",811.9,28,7,1,0)
99Y^65
"DATA",811.9,28,7,1,1,0)
^^1^1^2990402
"DATA",811.9,28,7,1,1,1,0)
Pneumovax due once for patients 65 and over.
"DATA",811.9,28,20,0)
^811.902V^5^5
"DATA",811.9,28,20,1,0)
19;AUTTIMM(^^^^^!^^
"DATA",811.9,28,20,2,0)
9;PXD(811.2,^^^99Y^^^^^^^
"DATA",811.9,28,20,2,1,0)
^^2^2^2990726
"DATA",811.9,28,20,2,1,1,0)
Pneumovax due once in high risk patients.
"DATA",811.9,28,20,2,1,2,0)
pneumonia.
"DATA",811.9,28,20,2,2,0)
^^1^1^2990726
"DATA",811.9,28,20,2,2,1,0)
No high risk DX for flu/pneumonia on file. Presumed low risk.
"DATA",811.9,28,20,3,0)
25;PXD(811.2,^^^^^!^^^^^
"DATA",811.9,28,20,4,0)
57;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,28,20,5,0)
58;AUTTHF(^^^^^^^^^^
"DATA",811.9,28,31)
(SEX)&(AGE)&'FI(4)
"DATA",811.9,28,32)
1^4
"DATA",811.9,28,35)
(0)!FI(1)!FI(3)
"DATA",811.9,28,36)
2^1;3
"DATA",811.9,28,40)
2^2;4
"DATA",811.9,28,42)
1^5
"DATA",811.9,29,0)
VA-PPD^6^PPD^1M
"DATA",811.9,29,1,0)
^^6^6^2970424^^^^
"DATA",811.9,29,1,1,0)
PPD given yearly to patients of any age who have a "High risk DX for TB";
"DATA",811.9,29,1,2,0)
such as HIV positive or AIDS, homelessness, or alcohol abuse who do not
"DATA",811.9,29,1,3,0)
have a DX of tuberculosis and no prior positive TB skin test.
"DATA",811.9,29,1,4,0)
 
"DATA",811.9,29,1,5,0)
This reminder is based on guidelines provided by the Ambulatory Care
"DATA",811.9,29,1,6,0)
Expert Panel.
"DATA",811.9,29,2,0)
^^8^8^2970211^^^^
"DATA",811.9,29,2,1,0)
Check the Taxonomy Findings representing High Risk for TB.  If this
"DATA",811.9,29,2,2,0)
taxonomy needs modification, copy the taxonomy to a new taxonomy for your
"DATA",811.9,29,2,3,0)
site, and make the appropriate modifications.
"DATA",811.9,29,2,4,0)
 
"DATA",811.9,29,2,5,0)
Define health factors which may represent high risk for TB in the Health
"DATA",811.9,29,2,6,0)
Factors file via the PCE Table Maintenance options.
"DATA",811.9,29,2,7,0)
 
"DATA",811.9,29,2,8,0)
Copy the reminder to a new reminder for your local site modifications.
"DATA",811.9,29,3,0)
^811.94P^2^1
"DATA",811.9,29,3,2,0)
9999999.28
"DATA",811.9,29,3,2,1,0)
^^2^2^2970211^^^^
"DATA",811.9,29,3,2,1,1,0)
The Skin Test file includes all skin tests for TB.  These skin tests
"DATA",811.9,29,3,2,1,2,0)
should be identifed as the Target Result File Items.
"DATA",811.9,29,3,2,2,0)
^811.944V^1^1
"DATA",811.9,29,3,2,2,1,0)
2;AUTTSK(
"DATA",811.9,29,3,2,4,0)
^^1^1^2970211^^^^
"DATA",811.9,29,3,2,4,1,0)
Last date of PPD not known.
"DATA",811.9,29,4,0)
^811.95P^2^2
"DATA",811.9,29,4,1,0)
11^^^1Y^^^&
"DATA",811.9,29,4,1,1,0)
^^1^1^2970211^^^^
"DATA",811.9,29,4,1,1,1,0)
Patient has high risk for TB diagnosis, PPD due yearly.
"DATA",811.9,29,4,1,2,0)
^^1^1^2970211^^
"DATA",811.9,29,4,1,2,1,0)
Patient may be low risk for TB, where PPD may not be indicated.
"DATA",811.9,29,4,2,0)
10^^^0Y^^^&'
"DATA",811.9,29,4,2,1,0)
^^1^1^2970422^^^^
"DATA",811.9,29,4,2,1,1,0)
Patient has HX of TB or positive PPD diagnosis.
"DATA",811.9,29,4,2,2,0)
^^1^1^2970422^^^^
"DATA",811.9,29,4,2,2,1,0)
No HX of TB or positive PPD diagnosis on file.
"DATA",811.9,29,7,0)
^811.97^1^1
"DATA",811.9,29,7,1,0)
0Y
"DATA",811.9,29,20,0)
^811.902V^3^3
"DATA",811.9,29,20,1,0)
2;AUTTSK(^^^^^!^^
"DATA",811.9,29,20,1,2,0)
^^2^2^2990726
"DATA",811.9,29,20,1,2,1,0)
Last date of PPD not known.
"DATA",811.9,29,20,1,2,2,0)
educate if currently in use.
"DATA",811.9,29,20,2,0)
11;PXD(811.2,^^^1Y^^^&^^^^
"DATA",811.9,29,20,2,1,0)
^^2^2^2990726
"DATA",811.9,29,20,2,1,1,0)
Patient has high risk for TB diagnosis, PPD due yearly.
"DATA",811.9,29,20,2,1,2,0)
pneumonia.
"DATA",811.9,29,20,2,2,0)
^^1^1^2990726
"DATA",811.9,29,20,2,2,1,0)
Patient may be low risk for TB, where PPD may not be indicated.
"DATA",811.9,29,20,3,0)
10;PXD(811.2,^^^0Y^^^&'^^^^
"DATA",811.9,29,20,3,1,0)
^^2^2^2990726
"DATA",811.9,29,20,3,1,1,0)
Patient has HX of TB or positive PPD diagnosis.
"DATA",811.9,29,20,3,1,2,0)
ongoing.
"DATA",811.9,29,20,3,2,0)
^^1^1^2990726
"DATA",811.9,29,20,3,2,1,0)
No HX of TB or positive PPD diagnosis on file.
"DATA",811.9,29,31)
(SEX)&(AGE)&FI(2)&'FI(3)
"DATA",811.9,29,32)
2^2;3
"DATA",811.9,29,35)
(0)!FI(1)
"DATA",811.9,29,36)
1^1
"DATA",811.9,29,40)
2^2;3
"DATA",811.9,29,42)
0^
"DATA",811.9,30,0)
VA-TOBACCO EDUCATION^1^Tobacco Cessation Education^1M^13
"DATA",811.9,30,1,0)
^^10^10^2991007^^^^
"DATA",811.9,30,1,1,0)
Tobacco use cessation education should be offered annually to any patient
"DATA",811.9,30,1,2,0)
who has a diagnosis or health factor associated with chronic tobacco use.
"DATA",811.9,30,1,3,0)
 
"DATA",811.9,30,1,4,0)
This reminder is based on guidelines defined by the Ambulatory Care Expert
"DATA",811.9,30,1,5,0)
Panel and satisfies the "Smoking and Tobacco Use Counseling" guidelines
"DATA",811.9,30,1,6,0)
specified in the "Guidelines for Health Promotion and Disease
"DATA",811.9,30,1,7,0)
Prevention",M-2, Part IV, Chapter 9. 
"DATA",811.9,30,1,8,0)
 
"DATA",811.9,30,1,9,0)
Modifications to these guidelines for your local site may be reflected in
"DATA",811.9,30,1,10,0)
a new reminder definition.
"DATA",811.9,30,2,0)
^^9^9^2991007^^^^
"DATA",811.9,30,2,1,0)
Check the ICD Diagnosis entries defined in the PCE Taxonomy file for
"DATA",811.9,30,2,2,0)
VA-TOBACCO USE.  Reflect any changes in a new taxonomy definition.
"DATA",811.9,30,2,3,0)
 
"DATA",811.9,30,2,4,0)
Check/Modify the health factors defined within the Tobacco category in the
"DATA",811.9,30,2,5,0)
Health Factors file. The Health Factors file can be modified using the PCE
"DATA",811.9,30,2,6,0)
Table Maintenance options.
"DATA",811.9,30,2,7,0)
 
"DATA",811.9,30,2,8,0)
If the reminder needs modifications, copy it and modify the new
"DATA",811.9,30,2,9,0)
reminder to meet local site guidelines.
"DATA",811.9,30,3,0)
^811.94P^2^1
"DATA",811.9,30,3,2,0)
9999999.09
"DATA",811.9,30,3,2,1,0)
^^3^3^2991007^^^^
"DATA",811.9,30,3,2,1,1,0)
The Education Topics file includes topics which represent Smoking
"DATA",811.9,30,3,2,1,2,0)
education/screening. Specify Smoking Cessation education/screening
"DATA",811.9,30,3,2,1,3,0)
topics as Target Result File Items for this reminder.
"DATA",811.9,30,3,2,2,0)
^811.944V^2^2
"DATA",811.9,30,3,2,2,1,0)
14;AUTTEDT(
"DATA",811.9,30,3,2,2,2,0)
369;AUTTEDT(
"DATA",811.9,30,3,2,4,0)
^^2^2^2991007^^^^
"DATA",811.9,30,3,2,4,1,0)
No history of tobacco education/screen on file.  Please evaluate tobacco
"DATA",811.9,30,3,2,4,2,0)
use and educate if currently in use.
"DATA",811.9,30,4,0)
^811.95P^1^1
"DATA",811.9,30,4,1,0)
22
"DATA",811.9,30,4,1,1,0)
^^1^1^2990224^^^^
"DATA",811.9,30,4,1,1,1,0)
Patient has a history of tobacco use.
"DATA",811.9,30,4,1,2,0)
^^3^3^2990224^^^^
"DATA",811.9,30,4,1,2,1,0)
No history of tobacco use found. Presumed to be former or current smoker.
"DATA",811.9,30,4,1,2,2,0)
Please indicate via health factor (Lifetime non-smoker, or other health
"DATA",811.9,30,4,1,2,3,0)
factor) if the tobacco education is not indicated.
"DATA",811.9,30,4.2,0)
0
"DATA",811.9,30,6,0)
^811.911P^11^10
"DATA",811.9,30,6,1,0)
31
"DATA",811.9,30,6,1,2,0)
^^1^1^2960228^^
"DATA",811.9,30,6,1,2,1,0)
No history of smoking found.
"DATA",811.9,30,6,2,0)
32
"DATA",811.9,30,6,2,2,0)
^^1^1^2960228^^^
"DATA",811.9,30,6,2,2,1,0)
Patient has no history of secondary smoke inhalation.
"DATA",811.9,30,6,4,0)
5^^^0Y^^^&'
"DATA",811.9,30,6,4,1,0)
^^1^1^2970131^^^^
"DATA",811.9,30,6,4,1,1,0)
Patient is lifetime non-smoker, tobacco education not indicated.
"DATA",811.9,30,6,5,0)
2
"DATA",811.9,30,6,6,0)
3
"DATA",811.9,30,6,7,0)
37^^^0Y^^^&'
"DATA",811.9,30,6,7,1,0)
^^1^1^2970131^^
"DATA",811.9,30,6,7,1,1,0)
Patient is lifetime non-tobacco user, tobacco education not indicated.
"DATA",811.9,30,6,8,0)
38
"DATA",811.9,30,6,9,0)
33
"DATA",811.9,30,6,10,0)
39^^^^^1
"DATA",811.9,30,6,11,0)
65^^^^^^&'
"DATA",811.9,30,7,0)
^811.97^1^1
"DATA",811.9,30,7,1,0)
1Y
"DATA",811.9,30,20,0)
^811.902V^13^13
"DATA",811.9,30,20,1,0)
14;AUTTEDT(^^^^^!^^
"DATA",811.9,30,20,1,2,0)
^^2^2^3000203^
"DATA",811.9,30,20,1,2,1,0)
No history of tobacco education/screen on file.  Please evaluate tobacco
"DATA",811.9,30,20,1,2,2,0)
use and educate if currently in use.
"DATA",811.9,30,20,2,0)
369;AUTTEDT(^^^^^!^^
"DATA",811.9,30,20,2,2,0)
^^2^2^2990726
"DATA",811.9,30,20,2,2,1,0)
No history of tobacco education/screen on file.  Please evaluate tobacco
"DATA",811.9,30,20,2,2,2,0)
use and educate if currently in use.
"DATA",811.9,30,20,3,0)
22;PXD(811.2,^^^^^^^^^^
"DATA",811.9,30,20,3,1,0)
^^2^2^2990726
"DATA",811.9,30,20,3,1,1,0)
Patient has a history of tobacco use.
"DATA",811.9,30,20,3,1,2,0)
pneumonia.
"DATA",811.9,30,20,3,2,0)
^^3^3^2990726
"DATA",811.9,30,20,3,2,1,0)
No history of tobacco use found. Presumed to be former or current smoker.
"DATA",811.9,30,20,3,2,2,0)
Please indicate via health factor (Lifetime non-smoker, or other health
"DATA",811.9,30,20,3,2,3,0)
factor) if the tobacco education is not indicated.
"DATA",811.9,30,20,4,0)
31;AUTTHF(^^^^^^^^^^
"DATA",811.9,30,20,4,2,0)
^^1^1^2990726
"DATA",811.9,30,20,4,2,1,0)
No history of smoking found.
"DATA",811.9,30,20,5,0)
32;AUTTHF(^^^^^^^^^^
"DATA",811.9,30,20,5,2,0)
^^1^1^2990726
"DATA",811.9,30,20,5,2,1,0)
Patient has no history of secondary smoke inhalation.
"DATA",811.9,30,20,6,0)
5;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,30,20,6,1,0)
^^1^1^2990726
"DATA",811.9,30,20,6,1,1,0)
Patient is lifetime non-smoker, tobacco education not indicated.
"DATA",811.9,30,20,7,0)
2;AUTTHF(^^^^^^^^^^
"DATA",811.9,30,20,8,0)
3;AUTTHF(^^^^^^^^^^
"DATA",811.9,30,20,9,0)
37;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,30,20,9,1,0)
^^1^1^2990726
"DATA",811.9,30,20,9,1,1,0)
Patient is lifetime non-tobacco user, tobacco education not indicated.
"DATA",811.9,30,20,10,0)
38;AUTTHF(^^^^^^^^^^
"DATA",811.9,30,20,11,0)
33;AUTTHF(^^^^^^^^^^
"DATA",811.9,30,20,12,0)
39;AUTTHF(^^^^^!^^^^^
"DATA",811.9,30,20,13,0)
65;AUTTHF(^^^^^^&'^^^^
"DATA",811.9,30,31)
(SEX)&(AGE)&'FI(6)&'FI(9)&'FI(13)
"DATA",811.9,30,32)
3^6;9;13
"DATA",811.9,30,35)
(0)!FI(1)!FI(2)!FI(12)
"DATA",811.9,30,36)
3^1;2;12
"DATA",811.9,30,40)
2^6;9
"DATA",811.9,30,42)
7^3;4;5;7;8;10;11
"DATA",811.9,31,0)
VA-ALCOHOL ABUSE EDUCATION^1^Alcohol Abuse Education^1M^2
"DATA",811.9,31,1,0)
^^9^9^2970211^^^^
"DATA",811.9,31,1,1,0)
The VA-Alcohol Abuse Education reminder is based on guidelines defined by
"DATA",811.9,31,1,2,0)
the Ambulatory Care Expert Panel.  This reminder includes the alcohol
"DATA",811.9,31,1,3,0)
abuse screening criteria to meet the "VA-*Problem Drinking Screening"
"DATA",811.9,31,1,4,0)
reminder and more education criteria and diagnosis evaluation to determine
"DATA",811.9,31,1,5,0)
the need for the reminder.
"DATA",811.9,31,1,6,0)
 
"DATA",811.9,31,1,7,0)
This reminder is an "education" type reminder.  It relies on an active
"DATA",811.9,31,1,8,0)
EDUCATION TOPIC (representing Alcohol Abuse education or screening) and
"DATA",811.9,31,1,9,0)
use of PCE TAXONOMY and HEALTH FACTORS related to alcohol abuse.
"DATA",811.9,31,3,0)
^811.94P^2^1
"DATA",811.9,31,3,2,0)
9999999.09
"DATA",811.9,31,3,2,1,0)
^^7^7^2970211^^^^
"DATA",811.9,31,3,2,1,1,0)
The Education Topics related to "Alcohol Abuse education" should be
"DATA",811.9,31,3,2,1,2,0)
specified in the target result items.  The target result items will be
"DATA",811.9,31,3,2,1,3,0)
used to determine when, and if the education is due.
"DATA",811.9,31,3,2,1,4,0)
 
"DATA",811.9,31,3,2,1,5,0)
If one of the education topics related to "Alcohol Abuse" education has
"DATA",811.9,31,3,2,1,6,0)
been given to the patient, the latest education will be displayed in the
"DATA",811.9,31,3,2,1,7,0)
Health Summary Clinical Maintenance component.
"DATA",811.9,31,3,2,2,0)
^811.944V^9^9
"DATA",811.9,31,3,2,2,1,0)
339;AUTTEDT(
"DATA",811.9,31,3,2,2,2,0)
348;AUTTEDT(
"DATA",811.9,31,3,2,2,3,0)
349;AUTTEDT(
"DATA",811.9,31,3,2,2,4,0)
347;AUTTEDT(
"DATA",811.9,31,3,2,2,5,0)
350;AUTTEDT(
"DATA",811.9,31,3,2,2,6,0)
352;AUTTEDT(
"DATA",811.9,31,3,2,2,7,0)
340;AUTTEDT(
"DATA",811.9,31,3,2,2,8,0)
351;AUTTEDT(
"DATA",811.9,31,3,2,2,9,0)
10;AUTTEDT(
"DATA",811.9,31,4,0)
^811.95P^2^2
"DATA",811.9,31,4,1,0)
17
"DATA",811.9,31,4,2,0)
34^^^^^1
"DATA",811.9,31,6,0)
^811.911P^7^7
"DATA",811.9,31,6,1,0)
13
"DATA",811.9,31,6,2,0)
14
"DATA",811.9,31,6,3,0)
15
"DATA",811.9,31,6,4,0)
16
"DATA",811.9,31,6,5,0)
17
"DATA",811.9,31,6,6,0)
18
"DATA",811.9,31,6,7,0)
19
"DATA",811.9,31,7,0)
^811.97^1^1
"DATA",811.9,31,7,1,0)
1Y
"DATA",811.9,31,7,1,1,0)
^^1^1^2970211^^
"DATA",811.9,31,7,1,1,1,0)
Alcohol abuse education due yearly for all ages.
"DATA",811.9,31,20,0)
^811.902V^18^18
"DATA",811.9,31,20,1,0)
339;AUTTEDT(^^^^^!^^
"DATA",811.9,31,20,2,0)
348;AUTTEDT(^^^^^!^^
"DATA",811.9,31,20,3,0)
349;AUTTEDT(^^^^^!^^
"DATA",811.9,31,20,4,0)
347;AUTTEDT(^^^^^!^^
"DATA",811.9,31,20,5,0)
350;AUTTEDT(^^^^^!^^
"DATA",811.9,31,20,6,0)
352;AUTTEDT(^^^^^!^^
"DATA",811.9,31,20,7,0)
340;AUTTEDT(^^^^^!^^
"DATA",811.9,31,20,8,0)
351;AUTTEDT(^^^^^!^^
"DATA",811.9,31,20,9,0)
10;AUTTEDT(^^^^^!^^
"DATA",811.9,31,20,10,0)
17;PXD(811.2,^^^^^^^^^^
"DATA",811.9,31,20,11,0)
34;PXD(811.2,^^^^^!^^^^^
"DATA",811.9,31,20,12,0)
13;AUTTHF(^^^^^^^^^^
"DATA",811.9,31,20,13,0)
14;AUTTHF(^^^^^^^^^^
"DATA",811.9,31,20,14,0)
15;AUTTHF(^^^^^^^^^^
"DATA",811.9,31,20,15,0)
16;AUTTHF(^^^^^^^^^^
"DATA",811.9,31,20,16,0)
17;AUTTHF(^^^^^^^^^^
"DATA",811.9,31,20,17,0)
18;AUTTHF(^^^^^^^^^^
"DATA",811.9,31,20,18,0)
19;AUTTHF(^^^^^^^^^^
"DATA",811.9,31,31)
(SEX)&(AGE)
"DATA",811.9,31,32)
0^
"DATA",811.9,31,35)
(0)!FI(1)!FI(2)!FI(3)!FI(4)!FI(5)!FI(6)!FI(7)!FI(8)!FI(9)!FI(11)
"DATA",811.9,31,36)
10^1;2;3;4;5;6;7;8;9;11
"DATA",811.9,31,40)
0^
"DATA",811.9,31,42)
8^10;12;13;14;15;16;17;18
"DATA",811.9,32,0)
VA-EXERCISE EDUCATION^1^Exercise Education^1M^14
"DATA",811.9,32,1,0)
^^6^6^2970211^^^^
"DATA",811.9,32,1,1,0)
Exercise education given yearly to all patients.
"DATA",811.9,32,1,2,0)
 
"DATA",811.9,32,1,3,0)
This reminder is based on guidelines defined by the Ambulatory Care Expert
"DATA",811.9,32,1,4,0)
Panel.  It also supports the following "Fitness and Exercise Counseling"
"DATA",811.9,32,1,5,0)
guidelines specified in the "Guidelines for Health Promotion and Disease
"DATA",811.9,32,1,6,0)
Prevention",M-2, Part IV, Chapter 9.
"DATA",811.9,32,2,0)
^^15^15^2970211^
"DATA",811.9,32,2,1,0)
Findings to satisfy this reminder are defined in Education Topics and via
"DATA",811.9,32,2,2,0)
coded values defined in the VA-EXERCISE COUNSELING taxonomy.
"DATA",811.9,32,2,3,0)
 
"DATA",811.9,32,2,4,0)
This reminder can be inactivated for a patient by using the INACTIVATE
"DATA",811.9,32,2,5,0)
EXERCISE SCREEN health factor.
"DATA",811.9,32,2,6,0)
 
"DATA",811.9,32,2,7,0)
Check the Education Topics defined in the Results Findings multiple.  Does
"DATA",811.9,32,2,8,0)
your site need to identify new education topics in the Education Topics
"DATA",811.9,32,2,9,0)
file to represent Exercise Education? 
"DATA",811.9,32,2,10,0)
 
"DATA",811.9,32,2,11,0)
To update the education topics, use the PCE Table Maintenance options.
"DATA",811.9,32,2,12,0)
 
"DATA",811.9,32,2,13,0)
To modify this reminder from its distributed definition, copy the reminder
"DATA",811.9,32,2,14,0)
to a new reminder and then make the modifications necessary to define your
"DATA",811.9,32,2,15,0)
sites guideline.
"DATA",811.9,32,3,0)
^811.94P^1^1
"DATA",811.9,32,3,1,0)
9999999.09
"DATA",811.9,32,3,1,1,0)
^^2^2^2970211^^
"DATA",811.9,32,3,1,1,1,0)
The Education Topic is used to identify topics that are related to
"DATA",811.9,32,3,1,1,2,0)
EXERCISE education/screening.
"DATA",811.9,32,3,1,2,0)
^811.944V^2^2
"DATA",811.9,32,3,1,2,1,0)
363;AUTTEDT(
"DATA",811.9,32,3,1,2,2,0)
11;AUTTEDT(
"DATA",811.9,32,4,0)
^811.95P^1^1
"DATA",811.9,32,4,1,0)
32^^^^^1
"DATA",811.9,32,6,0)
^811.911P^2^2
"DATA",811.9,32,6,1,0)
53^^^0Y^^^&'
"DATA",811.9,32,6,2,0)
54
"DATA",811.9,32,7,0)
^811.97^1^1
"DATA",811.9,32,7,1,0)
1Y
"DATA",811.9,32,7,1,1,0)
^^1^1^2970211^
"DATA",811.9,32,7,1,1,1,0)
Exercise education due yearly for all ages.
"DATA",811.9,32,20,0)
^811.902V^5^5
"DATA",811.9,32,20,1,0)
363;AUTTEDT(^^^^^!^^
"DATA",811.9,32,20,2,0)
11;AUTTEDT(^^^^^!^^
"DATA",811.9,32,20,3,0)
32;PXD(811.2,^^^^^!^^^^^
"DATA",811.9,32,20,4,0)
53;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,32,20,5,0)
54;AUTTHF(^^^^^^^^^^
"DATA",811.9,32,31)
(SEX)&(AGE)&'FI(4)
"DATA",811.9,32,32)
1^4
"DATA",811.9,32,35)
(0)!FI(1)!FI(2)!FI(3)
"DATA",811.9,32,36)
3^1;2;3
"DATA",811.9,32,40)
1^4
"DATA",811.9,32,42)
1^5
"DATA",811.9,33,0)
VA-SEATBELT EDUCATION^1^Seat Belt Education^1M^11
"DATA",811.9,33,1,0)
^^20^20^2970423^^^
"DATA",811.9,33,1,1,0)
Seat belt education given yearly to all patients.
"DATA",811.9,33,1,2,0)
 
"DATA",811.9,33,1,3,0)
This reminder is based on guidelines defined by the Ambulatory Care Expert
"DATA",811.9,33,1,4,0)
Panel and is further supported by the "Seatbelt Use and Accident Avoidance
"DATA",811.9,33,1,5,0)
Counseling" guideline specified in the "Guidelines for Health Promotion
"DATA",811.9,33,1,6,0)
and Disease Prevention", M-2, Part IV, Chapter 9.
"DATA",811.9,33,1,7,0)
 
"DATA",811.9,33,1,8,0)
    Target Condition: Motor vehicle associated injuries.
"DATA",811.9,33,1,9,0)
 
"DATA",811.9,33,1,10,0)
    Target Group: General Outpatient population.
"DATA",811.9,33,1,11,0)
 
"DATA",811.9,33,1,12,0)
    Recommendation: All patients should be urged to use seatbelts in
"DATA",811.9,33,1,13,0)
    automobiles, wear helmets when riding bicycles or motorcycles, and to
"DATA",811.9,33,1,14,0)
    refrain from driving after drinking.
"DATA",811.9,33,1,15,0)
 
"DATA",811.9,33,1,16,0)
    Goal for FY 2000: 85% of Veterans report regular use of seatbelts in
"DATA",811.9,33,1,17,0)
    automobiles. 80% of motorcyclists and 50% of bicyclists report use of
"DATA",811.9,33,1,18,0)
    helmets. 50% of primary care providers routinely provide
"DATA",811.9,33,1,19,0)
    age-appropriate counseling on safety precautions to prevent
"DATA",811.9,33,1,20,0)
    unintentional injury.
"DATA",811.9,33,2,0)
^^17^17^2970211^^
"DATA",811.9,33,2,1,0)
If this reminder is not going to be used at your facility, the INACTIVE
"DATA",811.9,33,2,2,0)
FLAG should be set to inactive.
"DATA",811.9,33,2,3,0)
 
"DATA",811.9,33,2,4,0)
The VA-SEAT BELT EDUCATION" reminder is a variation of the "VA-SEAT BELT
"DATA",811.9,33,2,5,0)
AND ACCIDENT SCREEN" reminder.  The VA-SEAT BELT EDUCATION" reminder is
"DATA",811.9,33,2,6,0)
recommended by the Ambulatory Care EP to check for seat belt use education
"DATA",811.9,33,2,7,0)
given to the patient, in addition to the screening.
"DATA",811.9,33,2,8,0)
 
"DATA",811.9,33,2,9,0)
Please review both of these related reminder definitions, choose one of
"DATA",811.9,33,2,10,0)
them to use.  If local modifications need to be made, copy the preferred
"DATA",811.9,33,2,11,0)
reminder to a new reminder and make your reminder modifications.
"DATA",811.9,33,2,12,0)
 
"DATA",811.9,33,2,13,0)
It may be useful to add Health Factors that indicate whether the patient
"DATA",811.9,33,2,14,0)
is still driving, rides motorcycles, or rides bicycles for local site use.
"DATA",811.9,33,2,15,0)
This would involve adding new Health Factors to the Health Factor file
"DATA",811.9,33,2,16,0)
(#9999999.64) and then adding the Health Factors to a local site
"DATA",811.9,33,2,17,0)
definition of the seat belt reminder.
"DATA",811.9,33,3,0)
^811.94P^1^1
"DATA",811.9,33,3,1,0)
9999999.09
"DATA",811.9,33,3,1,1,0)
^^2^2^2970211^^^^
"DATA",811.9,33,3,1,1,1,0)
The Education Topics identify education topics for seat belt education.
"DATA",811.9,33,3,1,1,2,0)
These topics should be identifed as Target Result Finding Items.
"DATA",811.9,33,3,1,2,0)
^811.944V^3^2
"DATA",811.9,33,3,1,2,2,0)
345;AUTTEDT(
"DATA",811.9,33,3,1,2,3,0)
13;AUTTEDT(
"DATA",811.9,33,4,0)
^811.95P^1^1
"DATA",811.9,33,4,1,0)
35^^^^^1
"DATA",811.9,33,6,0)
^811.911P^2^2
"DATA",811.9,33,6,1,0)
61^^^0Y^^^&'
"DATA",811.9,33,6,2,0)
62
"DATA",811.9,33,7,0)
^811.97^1^1
"DATA",811.9,33,7,1,0)
1Y
"DATA",811.9,33,7,1,1,0)
^^1^1^2970211^
"DATA",811.9,33,7,1,1,1,0)
Seat belt education due yearly for all ages.
"DATA",811.9,33,20,0)
^811.902V^5^5
"DATA",811.9,33,20,1,0)
345;AUTTEDT(^^^^^!^^
"DATA",811.9,33,20,2,0)
13;AUTTEDT(^^^^^!^^
"DATA",811.9,33,20,3,0)
35;PXD(811.2,^^^^^!^^^^^
"DATA",811.9,33,20,4,0)
61;AUTTHF(^^^0Y^^^&'^^^^
"DATA",811.9,33,20,5,0)
62;AUTTHF(^^^^^^^^^^
"DATA",811.9,33,31)
(SEX)&(AGE)&'FI(4)
"DATA",811.9,33,32)
1^4
"DATA",811.9,33,35)
(0)!FI(1)!FI(2)!FI(3)
"DATA",811.9,33,36)
3^1;2;3
"DATA",811.9,33,40)
1^4
"DATA",811.9,33,42)
1^5
"DATA",811.9,34,0)
VA-ADVANCED DIRECTIVES EDUCATION^1^Advanced Directives Education^0M
"DATA",811.9,34,1,0)
^^1^1^2960611^^^^
"DATA",811.9,34,1,1,0)
Advanced directives information given to all patients once.
"DATA",811.9,34,2,0)
^^40^40^2960611^
"DATA",811.9,34,2,1,0)
This reminder is distributed with the PCE package.  The source of this
"DATA",811.9,34,2,2,0)
reminder definition is the Ambulatory Care Expert Panel.  It is based on
"DATA",811.9,34,2,3,0)
feedback from facilities wanting to track Advanced Directive Education.
"DATA",811.9,34,2,4,0)
 
"DATA",811.9,34,2,5,0)
This reminder is an education type reminder.  It relies on an active
"DATA",811.9,34,2,6,0)
education topic entry representing the Advanced Directives education in
"DATA",811.9,34,2,7,0)
the Education Topics file. 
"DATA",811.9,34,2,8,0)
 
"DATA",811.9,34,2,9,0)
This reminder will be considered "DUE NOW" if there is no patient
"DATA",811.9,34,2,10,0)
education entry for advanced directive education in the "V Patient Ed."
"DATA",811.9,34,2,11,0)
file.  The V Patient Ed. File summarizes the patient education provided by
"DATA",811.9,34,2,12,0)
clinicians at an encounter/visit.
"DATA",811.9,34,2,13,0)
 
"DATA",811.9,34,2,14,0)
By recording the education topic given at an encounter via a scanned
"DATA",811.9,34,2,15,0)
encounter form (or other interface to PCE), the reminder will be
"DATA",811.9,34,2,16,0)
considered "not indicated". Historical patient education for advanced
"DATA",811.9,34,2,17,0)
directives can be recorded in the PCE User Interface to make the reminder
"DATA",811.9,34,2,18,0)
not indicated.
"DATA",811.9,34,2,19,0)
 
"DATA",811.9,34,2,20,0)
The Clinical Maintenance component in the Health Summary will display the
"DATA",811.9,34,2,21,0)
latest date on record where advanced directive education/screening was
"DATA",811.9,34,2,22,0)
provided to the patient.
"DATA",811.9,34,2,23,0)
 
"DATA",811.9,34,2,24,0)
Initial installation comment:
"DATA",811.9,34,2,25,0)
 
"DATA",811.9,34,2,26,0)
The PCE package is distributed with a preliminary set of education
"DATA",811.9,34,2,27,0)
topics, which includes the VA-ADVANCED DIRECTIVES, and VA-ADVANCED
"DATA",811.9,34,2,28,0)
DIRECTIVES SCREENING entries. 
"DATA",811.9,34,2,29,0)
 
"DATA",811.9,34,2,30,0)
The VA-ADVANCED DIRECTIVES education is defined as this reminders
"DATA",811.9,34,2,31,0)
education topic, in lieu of additional/other Advanced Directive education
"DATA",811.9,34,2,32,0)
topics you might want to create and activate at your site.
"DATA",811.9,34,2,33,0)
 
"DATA",811.9,34,2,34,0)
The VA-ADVANCED DIRECTIVES SCREENING education is defined to help track
"DATA",811.9,34,2,35,0)
the fact that an inquiry or screening was made to determine if the
"DATA",811.9,34,2,36,0)
patient needed Advanced Directive education/counseling.  
"DATA",811.9,34,2,37,0)
 
"DATA",811.9,34,2,38,0)
If this reminder is used at your site, you may want to add at a minimum,
"DATA",811.9,34,2,39,0)
these two education topics on an encounter form for those clinics who
"DATA",811.9,34,2,40,0)
would be addressing this reminder.
"DATA",811.9,34,3,0)
^811.94P^1^1
"DATA",811.9,34,3,1,0)
9999999.09
"DATA",811.9,34,3,1,1,0)
^^3^3^2960812^^^^
"DATA",811.9,34,3,1,1,1,0)
The patient education topics criteria should specify the education topic
"DATA",811.9,34,3,1,1,2,0)
entries that indicate Advanced Directive EDUCATION/SCREENING has been
"DATA",811.9,34,3,1,1,3,0)
provided.
"DATA",811.9,34,3,1,2,0)
^811.944V^2^2
"DATA",811.9,34,3,1,2,1,0)
338;AUTTEDT(
"DATA",811.9,34,3,1,2,2,0)
9;AUTTEDT(
"DATA",811.9,34,3,1,4,0)
^^1^1^2960812^^
"DATA",811.9,34,3,1,4,1,0)
No record of Advanced Directives education/screening on file.
"DATA",811.9,34,7,0)
^811.97^1^1
"DATA",811.9,34,7,1,0)
99Y
"DATA",811.9,34,20,0)
^811.902V^2^2
"DATA",811.9,34,20,1,0)
338;AUTTEDT(^^^^^!^^
"DATA",811.9,34,20,1,2,0)
^^1^1^2990726
"DATA",811.9,34,20,1,2,1,0)
No record of Advanced Directives education/screening on file.
"DATA",811.9,34,20,2,0)
9;AUTTEDT(^^^^^!^^
"DATA",811.9,34,20,2,2,0)
^^1^1^2990726
"DATA",811.9,34,20,2,2,1,0)
No record of Advanced Directives education/screening on file.
"DATA",811.9,34,31)
(SEX)&(AGE)
"DATA",811.9,34,32)
0^
"DATA",811.9,34,35)
(0)!FI(1)!FI(2)
"DATA",811.9,34,36)
2^1;2
"DATA",811.9,34,40)
0^
"DATA",811.9,34,42)
0^
"DATA",811.9,35,0)
VA-BREAST SELF EXAM EDUCATION^1^Breast Self Exam Education^0M^^^^^F
"DATA",811.9,35,1,0)
^^7^7^2960611^^
"DATA",811.9,35,1,1,0)
The breast self exam education is due yearly for females.  If the female has
"DATA",811.9,35,1,2,0)
a history of breast cancer, check for ongoing follow-up yearly. If the
"DATA",811.9,35,1,3,0)
female has a history of a mastectomy, check for appropriateness of breast
"DATA",811.9,35,1,4,0)
self exam education.
"DATA",811.9,35,1,5,0)
 
"DATA",811.9,35,1,6,0)
This reminder is based on guidelines defined by the Ambulatory Care Expert
"DATA",811.9,35,1,7,0)
Panel.
"DATA",811.9,35,2,0)
^^14^14^2970421^^^^
"DATA",811.9,35,2,1,0)
The findings for breast self exam are based on the definition
"DATA",811.9,35,2,2,0)
of an education topic in the EDUCATION TOPICS file.  Check the result
"DATA",811.9,35,2,3,0)
findings file for breast self exam entry which is distributed with this
"DATA",811.9,35,2,4,0)
reminder.  If new education topics need to be added, use the PCE Table
"DATA",811.9,35,2,5,0)
Maintenance options, and then copy this reminder, and make the
"DATA",811.9,35,2,6,0)
modifications to the result findings to reference the education topics
"DATA",811.9,35,2,7,0)
defined for your site.
"DATA",811.9,35,2,8,0)
 
"DATA",811.9,35,2,9,0)
Check the taxonomy findings definitions for breast cancer, breast
"DATA",811.9,35,2,10,0)
tumor, and mastectomy. Copy the taxonomies and make modifications if
"DATA",811.9,35,2,11,0)
needed.
"DATA",811.9,35,2,12,0)
 
"DATA",811.9,35,2,13,0)
If any changes are needed in the findings definitions, copy this reminder
"DATA",811.9,35,2,14,0)
to a site defined reminder item and make the appropriate modifications.
"DATA",811.9,35,3,0)
^811.94P^1^1
"DATA",811.9,35,3,1,0)
9999999.09
"DATA",811.9,35,3,1,1,0)
^^2^2^2960812^^^^
"DATA",811.9,35,3,1,1,1,0)
The Education Topics file contains the Education topics that can be identified
"DATA",811.9,35,3,1,1,2,0)
as Selection Items indicating SELF BREAST EXAM education.
"DATA",811.9,35,3,1,2,0)
^811.944V^1^1
"DATA",811.9,35,3,1,2,1,0)
368;AUTTEDT(
"DATA",811.9,35,3,1,4,0)
^^1^1^2960812^^
"DATA",811.9,35,3,1,4,1,0)
Date of last breast self exam education not known.
"DATA",811.9,35,4,0)
^811.95P^2^2
"DATA",811.9,35,4,1,0)
18
"DATA",811.9,35,4,1,1,0)
^^2^2^2970421^^^^
"DATA",811.9,35,4,1,1,1,0)
Patient known to have HX of breast tumor or breast cancer.  Please verify
"DATA",811.9,35,4,1,1,2,0)
appropriate TX and F/U is ongoing yearly.
"DATA",811.9,35,4,1,2,0)
^^1^1^2970421^^
"DATA",811.9,35,4,1,2,1,0)
No HX breast cancer presumed.
"DATA",811.9,35,4,2,0)
19
"DATA",811.9,35,4,2,1,0)
^^2^2^2970421^^^^
"DATA",811.9,35,4,2,1,1,0)
This patient has had a mastectomy.  If appropriate for this patient, please
"DATA",811.9,35,4,2,1,2,0)
provide Breast Self Exam Education.
"DATA",811.9,35,4.1,0)
^^2^2^2970421^^
"DATA",811.9,35,4.1,1,0)
Patient has a HX of breast cancer or other breast disease that might
"DATA",811.9,35,4.1,2,0)
complicate breast self exam.
"DATA",811.9,35,6,0)
^811.911P^3^3
"DATA",811.9,35,6,1,0)
20
"DATA",811.9,35,6,2,0)
22
"DATA",811.9,35,6,3,0)
23
"DATA",811.9,35,7,0)
^811.97^1^1
"DATA",811.9,35,7,1,0)
1Y
"DATA",811.9,35,20,0)
^811.902V^6^6
"DATA",811.9,35,20,1,0)
368;AUTTEDT(^^^^^!^^
"DATA",811.9,35,20,1,2,0)
^^1^1^2990726
"DATA",811.9,35,20,1,2,1,0)
Date of last breast self exam education not known.
"DATA",811.9,35,20,2,0)
18;PXD(811.2,^^^^^^^^^^
"DATA",811.9,35,20,2,1,0)
^^2^2^2990726
"DATA",811.9,35,20,2,1,1,0)
Patient known to have HX of breast tumor or breast cancer.  Please verify
"DATA",811.9,35,20,2,1,2,0)
appropriate TX and F/U is ongoing yearly.
"DATA",811.9,35,20,2,2,0)
^^3^3^2990726
"DATA",811.9,35,20,2,2,1,0)
No HX breast cancer presumed.
"DATA",811.9,35,20,2,2,2,0)
Please indicate via health factor (Lifetime non-smoker, or other health
"DATA",811.9,35,20,2,2,3,0)
factor) if the tobacco education is not indicated.
"DATA",811.9,35,20,3,0)
19;PXD(811.2,^^^^^^^^^^
"DATA",811.9,35,20,3,1,0)
^^2^2^2990726
"DATA",811.9,35,20,3,1,1,0)
This patient has had a mastectomy.  If appropriate for this patient, please
"DATA",811.9,35,20,3,1,2,0)
provide Breast Self Exam Education.
"DATA",811.9,35,20,4,0)
20;AUTTHF(^^^^^^^^^^
"DATA",811.9,35,20,5,0)
22;AUTTHF(^^^^^^^^^^
"DATA",811.9,35,20,6,0)
23;AUTTHF(^^^^^^^^^^
"DATA",811.9,35,31)
(SEX)&(AGE)
"DATA",811.9,35,32)
0^
"DATA",811.9,35,35)
(0)!FI(1)
"DATA",811.9,35,36)
1^1
"DATA",811.9,35,40)
0^
"DATA",811.9,35,42)
5^2;3;4;5;6
"DATA",811.9,36,0)
VA-WEIGHT^4^Weight^1M
"DATA",811.9,36,1,0)
^811.92^1^1^3000519^^^^
"DATA",811.9,36,1,1,0)
The patient's weight should be documented yearly.
"DATA",811.9,36,2,0)
^811.93^2^2^3000519^^^^
"DATA",811.9,36,2,1,0)
This reminder is based on guidelines defined by the Ambulatory Care Expert
"DATA",811.9,36,2,2,0)
Panel.
"DATA",811.9,36,3,0)
^811.94P^1^1
"DATA",811.9,36,3,1,0)
120.51
"DATA",811.9,36,3,1,2,0)
^811.944V^1^1
"DATA",811.9,36,3,1,2,1,0)
9;GMRD(120.51,
"DATA",811.9,36,3,1,4,0)
^811.946^1^1^3000519^^^^
"DATA",811.9,36,3,1,4,1,0)
No weight measurement on record, please record now.
"DATA",811.9,36,7,0)
^811.97^1^1
"DATA",811.9,36,7,1,0)
1Y
"DATA",811.9,36,20,0)
^811.902V^1^1
"DATA",811.9,36,20,1,0)
9;GMRD(120.51,^^^^^!^^
"DATA",811.9,36,20,1,2,0)
^811.9025^1^1^3000519^
"DATA",811.9,36,20,1,2,1,0)
No weight measurement on record, please record now.
"DATA",811.9,36,31)
(SEX)&(AGE)
"DATA",811.9,36,32)
0^
"DATA",811.9,36,35)
(0)!FI(1)
"DATA",811.9,36,36)
1^1
"DATA",811.9,36,40)
0^
"DATA",811.9,36,42)
0^
"DATA",811.9,37,0)
VA-PSA^7^PSA^0M^^^^^M
"DATA",811.9,37,1,0)
^^5^5^2971028^^^^
"DATA",811.9,37,1,1,0)
Prostate specific antigen, PSA, due yearly for men ages 50-75, who do not
"DATA",811.9,37,1,2,0)
have a history of prostate cancer.
"DATA",811.9,37,1,3,0)
 
"DATA",811.9,37,1,4,0)
This reminder is based on guidelines defined by the Ambulatory Care Expert
"DATA",811.9,37,1,5,0)
Panel.
"DATA",811.9,37,2,0)
^^8^8^2971028^^^^
"DATA",811.9,37,2,1,0)
Check the Taxonomy Findings entries representing HX of prostate cancer.  If
"DATA",811.9,37,2,2,0)
this taxonomy needs modification, copy the taxonomy to a new taxonomy
"DATA",811.9,37,2,3,0)
for your site, and make the appropriate modifications.
"DATA",811.9,37,2,4,0)
 
"DATA",811.9,37,2,5,0)
Copy the reminder to a new reminder for your local sites modifications.
"DATA",811.9,37,2,6,0)
 
"DATA",811.9,37,2,7,0)
Use the new reminder to update the Result Findings Laboratory Test entry
"DATA",811.9,37,2,8,0)
representing PSA tests.
"DATA",811.9,37,3,0)
^811.94P^1^1
"DATA",811.9,37,3,1,0)
60
"DATA",811.9,37,3,1,1,0)
^^5^5^2971028^^^^
"DATA",811.9,37,3,1,1,1,0)
The Result Finding Items should be defined as the Laboratory Test names
"DATA",811.9,37,3,1,1,2,0)
that represent PSA laboratory tests.  When distributed, this will be
"DATA",811.9,37,3,1,1,3,0)
blank.  Copy this reminder to a local reminder and add the laboratory
"DATA",811.9,37,3,1,1,4,0)
tests for PSA.  If used as distributed, the PSA test will only be found if
"DATA",811.9,37,3,1,1,5,0)
it is in the V CPT file as a CPT code.
"DATA",811.9,37,3,1,4,0)
^^2^2^2971028^^^^
"DATA",811.9,37,3,1,4,1,0)
Date of last PSA not on file.  Please order test or document historical
"DATA",811.9,37,3,1,4,2,0)
encounter activity.
"DATA",811.9,37,4,0)
^811.95P^1^1
"DATA",811.9,37,4,1,0)
8^^^0Y
"DATA",811.9,37,4,1,1,0)
^^2^2^2971028^^^^
"DATA",811.9,37,4,1,1,1,0)
Patient known to have HX of prostate cancer.  Please verify appropriate TX
"DATA",811.9,37,4,1,1,2,0)
and follow-up is ongoing.
"DATA",811.9,37,7,0)
^811.97^1^1
"DATA",811.9,37,7,1,0)
1Y^50^75
"DATA",811.9,37,20,0)
^811.902V^1^1
"DATA",811.9,37,20,1,0)
8;PXD(811.2,^^^0Y^^^^^^^
"DATA",811.9,37,20,1,1,0)
^^2^2^2990726
"DATA",811.9,37,20,1,1,1,0)
Patient known to have HX of prostate cancer.  Please verify appropriate TX
"DATA",811.9,37,20,1,1,2,0)
and follow-up is ongoing.
"DATA",811.9,37,31)
(SEX)&(AGE)
"DATA",811.9,37,32)
0^
"DATA",811.9,37,36)
0^
"DATA",811.9,37,40)
1^1
"DATA",811.9,37,42)
0^
"DATA",811.9,38,0)
VA-NATIONAL EPI DB UPDATE^^National Hepatitis Extract
"DATA",811.9,38,1,0)
^811.92^242^242^3000607^^^
"DATA",811.9,38,1,1,0)
This reminder is used to extract data that will be sent to the national
"DATA",811.9,38,1,2,0)
EPI database.  The data extracted includes Hepatitis A, B, and C data
"DATA",811.9,38,1,3,0)
related to laboratory tests and medications administered.  This reminder
"DATA",811.9,38,1,4,0)
is not for daily clinical care.  It is used by an EPI batch job to
"DATA",811.9,38,1,5,0)
identify new data to be sent to the AAC EPI national database.  
"DATA",811.9,38,1,6,0)
 
"DATA",811.9,38,1,7,0)
What defines the patient cohort the reminder applies to:
"DATA",811.9,38,1,8,0)
Patients with positive test results will have the laboratory and
"DATA",811.9,38,1,9,0)
medication information in this reminder sent to the EPI DB.
"DATA",811.9,38,1,10,0)
For example, If a patient has HAV Ab positive, HAV IgM Ab positive,  or
"DATA",811.9,38,1,11,0)
HAV IgG positive, then these tests plus SGOT and SGPT results will be sent
"DATA",811.9,38,1,12,0)
to the EPI DB.   If a patient is currently receiving Hepatitis treatment
"DATA",811.9,38,1,13,0)
medications the medication information will be sent to the National EPI
"DATA",811.9,38,1,14,0)
DB.
"DATA",811.9,38,1,15,0)
 
"DATA",811.9,38,1,16,0)
What resolves this reminder:
"DATA",811.9,38,1,17,0)
This reminder will consider any of the medications and laboratory tests as
"DATA",811.9,38,1,18,0)
resolutions to the reminder.  This will allow counts to run reports
"DATA",811.9,38,1,19,0)
identifying patients that have data updating the EPI National DB.
"DATA",811.9,38,1,20,0)
 
"DATA",811.9,38,1,21,0)
-----------------------------------------------------------------
"DATA",811.9,38,1,22,0)
Hepatitis Medications:
"DATA",811.9,38,1,23,0)
 
"DATA",811.9,38,1,24,0)
All patients receiving one of the medications below will have medication
"DATA",811.9,38,1,25,0)
information sent to the EPI DB.
"DATA",811.9,38,1,26,0)
 
"DATA",811.9,38,1,27,0)
  Data collected for Hepatitis treatment is based on the following
"DATA",811.9,38,1,28,0)
  national reminder terms (source of terms is VA GENERIC drug file):
"DATA",811.9,38,1,29,0)
  INTERFERON ALFA-2A
"DATA",811.9,38,1,30,0)
  INTERFERON ALFA-2B     
"DATA",811.9,38,1,31,0)
  INTERFERON ALFA-2B/RIBAVIRIN
"DATA",811.9,38,1,32,0)
    This medication is for combination therapy.  (May need to look for the
"DATA",811.9,38,1,33,0)
    presence of the 2 medication prescriptions administered at the same
"DATA",811.9,38,1,34,0)
    time.
"DATA",811.9,38,1,35,0)
  INTERFERON ALFA-3N     
"DATA",811.9,38,1,36,0)
  INTERFERON ALFACON-1
"DATA",811.9,38,1,37,0)
  INTERFERON BETA-1A
"DATA",811.9,38,1,38,0)
  INTERFERON BETA-1B
"DATA",811.9,38,1,39,0)
  RIBAVIRIN           
"DATA",811.9,38,1,40,0)
 
"DATA",811.9,38,1,41,0)
-----------------------------------------------------------------
"DATA",811.9,38,1,42,0)
 
"DATA",811.9,38,1,43,0)
Hepatitis A (Reference #15 in EPI DB)
"DATA",811.9,38,1,44,0)
 
"DATA",811.9,38,1,45,0)
Data collected for Hepatitis A is based on the following national reminder
"DATA",811.9,38,1,46,0)
terms which are both patient cohort and resolution findings in the
"DATA",811.9,38,1,47,0)
reminder:
"DATA",811.9,38,1,48,0)
 
"DATA",811.9,38,1,49,0)
        HAV Ab positive         Hepatitis A virus antibody total positive
"DATA",811.9,38,1,50,0)
        HAV IgM Ab positive     Hepatitis A virus antibody immunoglobulin
"DATA",811.9,38,1,51,0)
                                                M positive
"DATA",811.9,38,1,52,0)
        HAV  IgG positive       Hepatitis A virus antibody immunoglobulin
"DATA",811.9,38,1,53,0)
                                        G positive
"DATA",811.9,38,1,54,0)
 
"DATA",811.9,38,1,55,0)
If one of the Hepatitis A laboratory results collected is positive, the
"DATA",811.9,38,1,56,0)
following laboratory tests will be extracted as additional information.
"DATA",811.9,38,1,57,0)
        BILIRUBIN                       Bilirubin total
"DATA",811.9,38,1,58,0)
      ??
"DATA",811.9,38,1,59,0)
National Lab Test entries for Bilirubin that need clarification of
"DATA",811.9,38,1,60,0)
whether to use as separate terms or rolled up to the BILIRUBIN term.
"DATA",811.9,38,1,61,0)
       Select WKLD CODE PROCEDURE: BILIRUBIN
"DATA",811.9,38,1,62,0)
 
"DATA",811.9,38,1,63,0)
      ??   BILIRUBIN CONJUGATED  Bilirubin Conjugated     81003.0000
"DATA",811.9,38,1,64,0)
      ??   BILIRUBIN DIRECT  Bilirubin Direct     82249.0000
"DATA",811.9,38,1,65,0)
      ??   BILIRUBIN STICK  Bilirubin Stick     81174.0000
"DATA",811.9,38,1,66,0)
           BILIRUBIN TOTAL  Bilirubin Total     82250.0000
"DATA",811.9,38,1,67,0)
           BILIRUBIN TOTAL AND DIRECT  Bilirubin Total and Direct
"DATA",811.9,38,1,68,0)
82251.0000
"DATA",811.9,38,1,69,0)
       ??  BILIRUBIN UNCONJUGATED  Bilirubin Unconjugated     81008.0000
"DATA",811.9,38,1,70,0)
 
"DATA",811.9,38,1,71,0)
Background:
"DATA",811.9,38,1,72,0)
One of the goals of the Healthy People 2000 and 2010 initiatives of the
"DATA",811.9,38,1,73,0)
Department of Health and Human Services is to decrease certain infectious
"DATA",811.9,38,1,74,0)
diseases, especially those that are vaccine preventable.  Acute infection
"DATA",811.9,38,1,75,0)
with Hepatitis A is one such disease that has specific objectives present
"DATA",811.9,38,1,76,0)
in the Healthy People objectives.
"DATA",811.9,38,1,77,0)
 
"DATA",811.9,38,1,78,0)
The purpose of surveillance for this disease is to record all cases as
"DATA",811.9,38,1,79,0)
diagnosed by the laboratory.  A positive laboratory test for the presence
"DATA",811.9,38,1,80,0)
of Hepatitis A virus is needed.  Usually this criterion is met by presence
"DATA",811.9,38,1,81,0)
of antibodies to the Hepatitis A virus.  In particular, the IgM antibody
"DATA",811.9,38,1,82,0)
against hepatitis A is the test most commonly used for determining acute
"DATA",811.9,38,1,83,0)
hepatitis A infection.  There are other antibody tests available for
"DATA",811.9,38,1,84,0)
Hepatitis A.  These tests usually indicate past infection with hepatitis A
"DATA",811.9,38,1,85,0)
(or in some circumstances may indicate evidence of previous vaccination);
"DATA",811.9,38,1,86,0)
usually the IgG antibody against Hepatitis A, OR the Total antibody
"DATA",811.9,38,1,87,0)
against Hepatitis A (a test that does not discriminate between IgM or IgG,
"DATA",811.9,38,1,88,0)
but can show evidence of exposure) are the tests done for this purpose.
"DATA",811.9,38,1,89,0)
 
"DATA",811.9,38,1,90,0)
The Infectious Disease Program Office, VAHQ, is looking for the presence
"DATA",811.9,38,1,91,0)
of any positive antibody to Hepatitis A, whether it be recorded as "weakly
"DATA",811.9,38,1,92,0)
positive," "strongly positive," "positive," or "present."  If other
"DATA",811.9,38,1,93,0)
phrases are used to describe a test result, one should be able to
"DATA",811.9,38,1,94,0)
differentiate responses upon entry in the term findings via the Condition
"DATA",811.9,38,1,95,0)
field. As an example, the words "present" and "not present" might be used
"DATA",811.9,38,1,96,0)
to designate "positive" vs. "negative";  however, they would not allow
"DATA",811.9,38,1,97,0)
retrieval of only the positive cases as both phrases contain the word,
"DATA",811.9,38,1,98,0)
"present." Also, numerical values of results are not readily useable.  All
"DATA",811.9,38,1,99,0)
of the lab tests against hepatitis A need to be defined as findings for
"DATA",811.9,38,1,100,0)
the national reminder terms with the conditions that identify the positive
"DATA",811.9,38,1,101,0)
laboratory test results.
"DATA",811.9,38,1,102,0)
 
"DATA",811.9,38,1,103,0)
Also, some facilities will use ICD-9 coding and problem lists as a means
"DATA",811.9,38,1,104,0)
to abstract data on the Hepatitis A disease.  The ICD-9 coding and problem
"DATA",811.9,38,1,105,0)
list data should not be used with the Hepatitis reminder terms unless the
"DATA",811.9,38,1,106,0)
sites have reviewed the accuracy of the problem list and ICD9 data.
"DATA",811.9,38,1,107,0)
 
"DATA",811.9,38,1,108,0)
The data for the national EPI DB is based on abstracting laboratory
"DATA",811.9,38,1,109,0)
confirmed cases of acute Hepatitis A disease.
"DATA",811.9,38,1,110,0)
 
"DATA",811.9,38,1,111,0)
--------------------------------------------------------------------
"DATA",811.9,38,1,112,0)
 
"DATA",811.9,38,1,113,0)
Hepatitis B EPI National Roll-up Reminder (Reference #16 in EPI DB)
"DATA",811.9,38,1,114,0)
Data collected for Hepatitis B is based on the following national reminder
"DATA",811.9,38,1,115,0)
terms which define the patient cohort and the resolution findings:
"DATA",811.9,38,1,116,0)
        HBs Ag positive         Hepatitis B surface antigen positive
"DATA",811.9,38,1,117,0)
        HBc Ab IgM positive     Hepatitis B core antibody immunoglobulin  
"DATA",811.9,38,1,118,0)
                                                M positive
"DATA",811.9,38,1,119,0)
        HBs Ab                  Hepatitis B surface antibody positive
"DATA",811.9,38,1,120,0)
        HBe Ag                  Hepatitis B e antigen positive 
"DATA",811.9,38,1,121,0)
 
"DATA",811.9,38,1,122,0)
Background:
"DATA",811.9,38,1,123,0)
One of the goals of the Healthy People 2000 and 2010 initiatives of the
"DATA",811.9,38,1,124,0)
Department of Health and Human Services is to decrease certain infectious
"DATA",811.9,38,1,125,0)
diseases, especially those that are vaccine preventable.  Acute and
"DATA",811.9,38,1,126,0)
chronic infection with Hepatitis B is one such disease that has specific
"DATA",811.9,38,1,127,0)
objectives present in the Healthy People objectives.
"DATA",811.9,38,1,128,0)
 
"DATA",811.9,38,1,129,0)
Both acute and chronic disease have significant morbidity and can
"DATA",811.9,38,1,130,0)
contribute to mortality.  Further, infection with hepatitis B can
"DATA",811.9,38,1,131,0)
complicate the medical course of persons with other liver ailments.  As
"DATA",811.9,38,1,132,0)
such, surveillance for both acute and chronic disease is important.  In
"DATA",811.9,38,1,133,0)
order for the VHA to do surveillance for these diseases, we are looking
"DATA",811.9,38,1,134,0)
for laboratory evidence of  infection with hepatitis B.  This laboratory
"DATA",811.9,38,1,135,0)
evidence of infection includes the following standard serological markers:
"DATA",811.9,38,1,136,0)
        Presence of the hepatitis B surface antigen
"DATA",811.9,38,1,137,0)
        Presence of antibodies against the Hepatitis B core antigen (in
"DATA",811.9,38,1,138,0)
particular, the IgM antibody)
"DATA",811.9,38,1,139,0)
        Presence of antibodies against the Hepatitis B surface antigen
"DATA",811.9,38,1,140,0)
        Presence of the hepatitis B e antigen.
"DATA",811.9,38,1,141,0)
 
"DATA",811.9,38,1,142,0)
These are not all of the tests that can be done for hepatitis B, but they
"DATA",811.9,38,1,143,0)
are the ones likely to pick up acute cases (new) or those chronic cases
"DATA",811.9,38,1,144,0)
that are likely to be infectious to other persons.  Please list only those
"DATA",811.9,38,1,145,0)
tests at your facility that are in keeping with what addresses the EPI
"DATA",811.9,38,1,146,0)
Hepatitis B target data-acute cases, or those cases likely to be
"DATA",811.9,38,1,147,0)
infectious to others.  
"DATA",811.9,38,1,148,0)
 
"DATA",811.9,38,1,149,0)
Note:  There are advanced polymerase chain reaction (PCR) based tests that
"DATA",811.9,38,1,150,0)
can measure the amount of virus in the bloodstream;  these are not done at
"DATA",811.9,38,1,151,0)
all sites and have not yet been FDA approved.  As such, these PCR tests
"DATA",811.9,38,1,152,0)
will not be used for case determination.
"DATA",811.9,38,1,153,0)
 
"DATA",811.9,38,1,154,0)
------------------------------------------------------------
"DATA",811.9,38,1,155,0)
Hepatitis C updates for EPI DB
"DATA",811.9,38,1,156,0)
Data collected for Hepatitis C is based on the following national reminder
"DATA",811.9,38,1,157,0)
terms:
"DATA",811.9,38,1,158,0)
        Laboratory tests:
"DATA",811.9,38,1,159,0)
                HAV Ab negative
"DATA",811.9,38,1,160,0)
                HAV Ab positive
"DATA",811.9,38,1,161,0)
 
"DATA",811.9,38,1,162,0)
If the laboratory tests are available regardless of the result, the
"DATA",811.9,38,1,163,0)
laboratory test will be considered as satisfying the risk assessment
"DATA",811.9,38,1,164,0)
requirement. 
"DATA",811.9,38,1,165,0)
 
"DATA",811.9,38,1,166,0)
If a positive HAV Ab positive test is found, the following test results
"DATA",811.9,38,1,167,0)
will be captured for information purposes:
"DATA",811.9,38,1,168,0)
 
"DATA",811.9,38,1,169,0)
                SGOT
"DATA",811.9,38,1,170,0)
                SGPT
"DATA",811.9,38,1,171,0)
 
"DATA",811.9,38,1,172,0)
        Diagnosis:
"DATA",811.9,38,1,173,0)
The existence of the diagnosis of Hepatitis C may be used to satisfy risk
"DATA",811.9,38,1,174,0)
assessment, but this should only be used if the site is comfortable with
"DATA",811.9,38,1,175,0)
the accuracy of the problem list information.  Use the "HEPATITIS C
"DATA",811.9,38,1,176,0)
DIAGNOSIS" reminder to check patients that have a positive Hepatitis C
"DATA",811.9,38,1,177,0)
test, and have the problem list updated accordingly.
"DATA",811.9,38,1,178,0)
 
"DATA",811.9,38,1,179,0)
It is important to try to find out what differences there are in those
"DATA",811.9,38,1,180,0)
persons who are positive for Hepatitis C antibody as opposed to those who
"DATA",811.9,38,1,181,0)
do not have Hepatitis C antibody present.  Therefore, please review those
"DATA",811.9,38,1,182,0)
results that you have designated to be placed into the Hepatitis C
"DATA",811.9,38,1,183,0)
Antibody Positive portion of the EPI.  Be sure that they truly meet the
"DATA",811.9,38,1,184,0)
definition, as noted in this Reminder definition and the related Reminder
"DATA",811.9,38,1,185,0)
Term definitions.
"DATA",811.9,38,1,186,0)
 
"DATA",811.9,38,1,187,0)
All the results of Hepatitis C antibody testing that are not considered
"DATA",811.9,38,1,188,0)
"positive" need to be mapped as negative.  Therefore, all of the
"DATA",811.9,38,1,189,0)
hepatitis C results that your facility reports will be mapped to either
"DATA",811.9,38,1,190,0)
the hepatitis C Antibody Positive file or the Not Positive for Hepatitis C
"DATA",811.9,38,1,191,0)
Antibody File.  Not positive terms may include "negative,"
"DATA",811.9,38,1,192,0)
"indeterminant," "indeterminate," "undetectable."  As with the Hepatitis C
"DATA",811.9,38,1,193,0)
Antibody Positive component, be sure that phrases that truly differentiate
"DATA",811.9,38,1,194,0)
results are used (e.g. the results of "present" and "not present" are not
"DATA",811.9,38,1,195,0)
truly differentiated by computer retrieval as both contain the word
"DATA",811.9,38,1,196,0)
"present").
"DATA",811.9,38,1,197,0)
 
"DATA",811.9,38,1,198,0)
--------------------------------------------------------------------
"DATA",811.9,38,1,199,0)
Risk Assessment for Hepatitis C:
"DATA",811.9,38,1,200,0)
 
"DATA",811.9,38,1,201,0)
The HEP C RISK ASSESSMENT reminder gathers the national EPI data related
"DATA",811.9,38,1,202,0)
to risk assessment.
"DATA",811.9,38,1,203,0)
Data collected for Hepatitis C is based on the following national reminder
"DATA",811.9,38,1,204,0)
terms:
"DATA",811.9,38,1,205,0)
        Health Factors for:
"DATA",811.9,38,1,206,0)
                Previous positive test result
"DATA",811.9,38,1,207,0)
                No Risk Factors
"DATA",811.9,38,1,208,0)
                Risk Factors
"DATA",811.9,38,1,209,0)
                Declined Hep C Assessment
"DATA",811.9,38,1,210,0)
 
"DATA",811.9,38,1,211,0)
        Laboratory tests:
"DATA",811.9,38,1,212,0)
                HAV Ab negative
"DATA",811.9,38,1,213,0)
                HAV Ab positive
"DATA",811.9,38,1,214,0)
 
"DATA",811.9,38,1,215,0)
If the HAV Ab laboratory tests are available regardless of the result, the
"DATA",811.9,38,1,216,0)
laboratory test will be considered as satisfying the risk assessment
"DATA",811.9,38,1,217,0)
requirement. 
"DATA",811.9,38,1,218,0)
 
"DATA",811.9,38,1,219,0)
        Diagnosis:
"DATA",811.9,38,1,220,0)
The existence of the diagnosis of Hepatitis C may be used with CAUTION
"DATA",811.9,38,1,221,0)
to satisfy risk assessment, but this should only be used if the site is
"DATA",811.9,38,1,222,0)
comfortable with the accuracy of the problem list information.  
"DATA",811.9,38,1,223,0)
 
"DATA",811.9,38,1,224,0)
NOTE: You could create a "HEPATITIS C DIAGNOSIS" reminder to check
"DATA",811.9,38,1,225,0)
patients that have a positive Hepatitis C test and have the problem
"DATA",811.9,38,1,226,0)
list updated accordingly. Correct problem list entries that are erroneous
"DATA",811.9,38,1,227,0)
if you plan on using the diagnosis data in the reminder.
"DATA",811.9,38,1,228,0)
 
"DATA",811.9,38,1,229,0)
Options available at sites to manage use of Diagnosis:
"DATA",811.9,38,1,230,0)
      1) Remove the Hepatitis C Infection Taxonomy from the findings
"DATA",811.9,38,1,231,0)
multiple in the reminder term to disable use of any diagnosis as reliable
"DATA",811.9,38,1,232,0)
data.
"DATA",811.9,38,1,233,0)
      2) Set the Expiration Period to indicate a period of time to
"DATA",811.9,38,1,234,0)
consider the diagnosis as valid in the reminder terms finding item for the
"DATA",811.9,38,1,235,0)
Hepatitis C Infection Taxonomy.  (e.g., consider a diagnosis recorded in
"DATA",811.9,38,1,236,0)
the last year as a valid diagnosis to identify a risk assessed patient.)
"DATA",811.9,38,1,237,0)
      3) Copy the Hepatitis C Infection taxonomy and change the taxonomy
"DATA",811.9,38,1,238,0)
to indicate the patient sources which can be used to correctly reflect
"DATA",811.9,38,1,239,0)
risk assessed patient. (e.g., only use inpatient diagnosis, or encounter
"DATA",811.9,38,1,240,0)
diagnosis over the last 6 months or 1 year.)  Then replace taxonomy
"DATA",811.9,38,1,241,0)
finding in the term with the new taxonomy.
"DATA",811.9,38,1,242,0)
     4) Inactivate the distributed Hepatitis C Infection Taxonomy
"DATA",811.9,38,7,0)
^811.97^1^1
"DATA",811.9,38,7,1,0)
1M
"DATA",811.9,38,20,0)
^811.902V^20^20
"DATA",811.9,38,20,1,0)
5;PXRMD(811.5,^^^^^^!
"DATA",811.9,38,20,2,0)
6;PXRMD(811.5,^^^^^^!
"DATA",811.9,38,20,3,0)
8;PXRMD(811.5,
"DATA",811.9,38,20,4,0)
9;PXRMD(811.5,
"DATA",811.9,38,20,5,0)
10;PXRMD(811.5,^^^^^^!
"DATA",811.9,38,20,6,0)
11;PXRMD(811.5,^^^^^^!
"DATA",811.9,38,20,7,0)
12;PXRMD(811.5,^^^^^^!
"DATA",811.9,38,20,8,0)
13;PXRMD(811.5,^^^^^^!
"DATA",811.9,38,20,9,0)
14;PXRMD(811.5,^^^^^^!
"DATA",811.9,38,20,10,0)
15;PXRMD(811.5,^^^^^^!
"DATA",811.9,38,20,11,0)
16;PXRMD(811.5,^^^^^^!
"DATA",811.9,38,20,12,0)
17;PXRMD(811.5,^^^^^^!
"DATA",811.9,38,20,13,0)
18;PXRMD(811.5,^^^^^^!
"DATA",811.9,38,20,14,0)
19;PXRMD(811.5,^^^^^^!
"DATA",811.9,38,20,15,0)
20;PXRMD(811.5,^^^^^^!
"DATA",811.9,38,20,16,0)
21;PXRMD(811.5,
"DATA",811.9,38,20,17,0)
24;PXRMD(811.5,^^^^^^!
"DATA",811.9,38,20,18,0)
22;PXRMD(811.5,^^^^^^!
"DATA",811.9,38,20,19,0)
23;PXRMD(811.5,^^^^^^!
"DATA",811.9,38,20,20,0)
25;PXRMD(811.5,^^^^^^!
"DATA",811.9,38,31)
(SEX)&(AGE)!FI(1)!FI(2)!FI(5)!FI(6)!FI(7)!FI(8)!FI(9)!FI(10)!FI(11)!FI(12)!FI(13)!FI(14)!FI(15)!FI(17)!FI(18)!FI(19)!FI(20)
"DATA",811.9,38,32)
17^1;2;5;6;7;8;9;10;11;12;13;14;15;17;18;19;20
"DATA",811.9,38,35)

"DATA",811.9,38,36)
0^
"DATA",811.9,38,40)
0^
"DATA",811.9,38,42)
3^3;4;16
"DATA",811.9,38,60,0)
^811.9003^2^2^3000601^^
"DATA",811.9,38,60,1,0)
This patient has Hepatitis data that will be rolled up to the national EPI
"DATA",811.9,38,60,2,0)
data base.
"DATA",811.9,38,61,0)
^811.961^1^1^3000601^^
"DATA",811.9,38,61,1,0)
This patient has no Hepatitis data to send to the national EPI data base.
"DATA",811.9,43,0)
VA-DIABETIC FOOT EXAM^2^Diabetic Foot Exam^1M
"DATA",811.9,43,1,0)
^^2^2^2970211^^
"DATA",811.9,43,1,1,0)
Patients with the VA-DIABETES taxonomy should have a complete foot exam
"DATA",811.9,43,1,2,0)
done yearly.
"DATA",811.9,43,2,0)
^^3^3^2970211^^
"DATA",811.9,43,2,1,0)
This reminder is based on the Diabetic Foot Exam reminder from the New
"DATA",811.9,43,2,2,0)
York VAMC which was designed to meet the guidelines defined by the PACT
"DATA",811.9,43,2,3,0)
panel.  Additional input came from the Saginaw VAMC.
"DATA",811.9,43,3,0)
^811.94P^1^1
"DATA",811.9,43,3,1,0)
9999999.15
"DATA",811.9,43,3,1,2,0)
^811.944V^1^1
"DATA",811.9,43,3,1,2,1,0)
28;AUTTEXAM(
"DATA",811.9,43,4,0)
^811.95P^1^1
"DATA",811.9,43,4,1,0)
28^^^1Y^^^&
"DATA",811.9,43,4,1,1,0)
^^1^1^2970211^
"DATA",811.9,43,4,1,1,1,0)
Complete foot exam required annually for all diabetic patients.
"DATA",811.9,43,4,1,2,0)
^^1^1^2970211^
"DATA",811.9,43,4,1,2,1,0)
No history of diabetes on file.
"DATA",811.9,43,7,0)
^811.97^1^1
"DATA",811.9,43,7,1,0)
0Y
"DATA",811.9,43,20,0)
^811.902V^2^2
"DATA",811.9,43,20,1,0)
28;AUTTEXAM(^^^^^!^^
"DATA",811.9,43,20,2,0)
28;PXD(811.2,^^^1Y^^^&^^^^
"DATA",811.9,43,20,2,1,0)
^^2^2^2990726
"DATA",811.9,43,20,2,1,1,0)
Complete foot exam required annually for all diabetic patients.
"DATA",811.9,43,20,2,1,2,0)
and follow-up is ongoing.
"DATA",811.9,43,20,2,2,0)
^^3^3^2990726
"DATA",811.9,43,20,2,2,1,0)
No history of diabetes on file.
"DATA",811.9,43,20,2,2,2,0)
Please indicate via health factor (Lifetime non-smoker, or other health
"DATA",811.9,43,20,2,2,3,0)
factor) if the tobacco education is not indicated.
"DATA",811.9,43,31)
(SEX)&(AGE)&FI(2)
"DATA",811.9,43,32)
1^2
"DATA",811.9,43,35)
(0)!FI(1)
"DATA",811.9,43,36)
1^1
"DATA",811.9,43,40)
1^2
"DATA",811.9,43,42)
0^
"DATA",811.9,43,51)

"DATA",8989.51,4650,0)
PXRM CPRS LOOKUP CATEGORIES^Reminder Categories for Lookup^1^Display Sequence^Reminder Category
"DATA",8989.51,4650,1)
P^811.7^Enter the Reminder Categories available in reminder processing.
"DATA",8989.51,4650,6)
N^^Enter a sequential number for identifying the category.
"DATA",8989.51,4650,20,0)
^^2^2^2990831^^^
"DATA",8989.51,4650,20,1,0)
Returns an array of reminder categories which can then be used within GUI
"DATA",8989.51,4650,20,2,0)
reminder processing.
"DATA",8989.51,4650,30,0)
^8989.513I^6^6
"DATA",8989.51,4650,30,1,0)
1^200
"DATA",8989.51,4650,30,2,0)
2^44
"DATA",8989.51,4650,30,3,0)
3^49
"DATA",8989.51,4650,30,4,0)
4^4
"DATA",8989.51,4650,30,5,0)
5^4.2
"DATA",8989.51,4650,30,6,0)
6^9.4
"DATA",8989.51,4657,0)
PXRM GUI REMINDERS ACTIVE^Reminders Active^0^^REMINDERS ACTIVE
"DATA",8989.51,4657,1)
S^0:NO;1:YES^Are Interactive Reminders Active (0=No, 1=Yes)
"DATA",8989.51,4657,20,0)
^^1^1^2991115^
"DATA",8989.51,4657,20,1,0)
Indicate if Interactive Reminders are Active.  Enter 0 (No) or 1 (Yes).
"DATA",8989.51,4657,30,0)
^8989.513I^3^3
"DATA",8989.51,4657,30,1,0)
1^200
"DATA",8989.51,4657,30,2,0)
2^4
"DATA",8989.51,4657,30,3,0)
3^4.2
"DATA",8989.51,4662,0)
PXRM PROGRESS NOTE HEADERS^Progress Note Header^0^^PROGRESS NOTE HEADER
"DATA",8989.51,4662,1)
F
"DATA",8989.51,4662,30,0)
^8989.513I^6^6
"DATA",8989.51,4662,30,1,0)
1^200
"DATA",8989.51,4662,30,2,0)
2^44
"DATA",8989.51,4662,30,3,0)
3^49
"DATA",8989.51,4662,30,4,0)
4^4
"DATA",8989.51,4662,30,5,0)
5^4.2
"DATA",8989.51,4662,30,6,0)
6^9.4
"DATA",8989.51,4674,0)
PXRM MENTAL HEALTH ACTIVE^Mental Health Active^0^^MENTAL HEALTH ACTIVE
"DATA",8989.51,4674,1)
S^0:NO;1:YES^Are Interactive Mental Health Reminders Active (0=No, 1=Yes) 
"DATA",8989.51,4674,20,0)
^^1^1^3000309^
"DATA",8989.51,4674,20,1,0)
Interactive Mental Health Reminders are Active.  Enter 0 (No) or 1 (Yes).
"DATA",8989.51,4674,30,0)
^8989.513I^3^3
"DATA",8989.51,4674,30,1,0)
1^200
"DATA",8989.51,4674,30,2,0)
2^4
"DATA",8989.51,4674,30,3,0)
3^4.2
"DATA",9999999.64,69,0)
HEPATITIS C^^^^^^^Y^^C
"DATA",9999999.64,70,0)
RISK FACTOR FOR HEPATITIS C^^69^^^^^Y^^F
"DATA",9999999.64,71,0)
PREV POS TEST FOR HEP C^^69^^^^^Y^^F
"DATA",9999999.64,72,0)
DECLINED HEP C RISK ASSESSMENT^^69^^^^^Y^^F
"DATA",9999999.64,73,0)
NO RISK FACTORS FOR HEP C^^69^^^^^^^F
"FIA",800)
CLINICAL REMINDER PARAMETERS
"FIA",800,0)
^PXRM(800,
"FIA",800,0,0)
800O
"FIA",800,0,1)
y^y^f^^n^^y^o^n
"FIA",800,0,10)

"FIA",800,0,11)

"FIA",800,0,"RLRO")

"FIA",800,0,"VR")
1.5^CLINICAL REMINDERS
"FIA",800,800)
0
"FIA",800,800.01)
0
"FIA",800,800.02)
0
"FIA",800,800.04)
0
"FIA",800,800.41)
0
"FIA",801.41)
REMINDER DIALOG
"FIA",801.41,0)
^PXRMD(801.41,
"FIA",801.41,0,0)
801.41IO
"FIA",801.41,0,1)
y^y^f^^y^^y^r^n
"FIA",801.41,0,10)

"FIA",801.41,0,11)
I $E(^PXRMD(801.41,Y,0),1,4)="PXRM"
"FIA",801.41,0,"RLRO")

"FIA",801.41,0,"VR")
1.5^CLINICAL REMINDERS
"FIA",801.41,801.41)
0
"FIA",801.41,801.4118)
0
"FIA",801.41,801.412)
0
"FIA",801.41,801.4125)
0
"FIA",801.41,801.4135)
0
"FIA",801.42)
REMINDER GUI PROCESS
"FIA",801.42,0)
^PXRMD(801.42,
"FIA",801.42,0,0)
801.42O
"FIA",801.42,0,1)
y^y^f^^y^^y^o^n
"FIA",801.42,0,10)

"FIA",801.42,0,11)

"FIA",801.42,0,"RLRO")

"FIA",801.42,0,"VR")
1.5^CLINICAL REMINDERS
"FIA",801.42,801.42)
0
"FIA",801.42,801.421)
0
"FIA",801.42,801.422)
0
"FIA",801.43)
REMINDER FINDING ITEM PARAMETER
"FIA",801.43,0)
^PXRMD(801.43,
"FIA",801.43,0,0)
801.43O
"FIA",801.43,0,1)
y^y^f^^y^^n
"FIA",801.43,0,10)

"FIA",801.43,0,11)

"FIA",801.43,0,"RLRO")

"FIA",801.43,0,"VR")
1.5^CLINICAL REMINDERS
"FIA",801.43,801.43)
0
"FIA",801.45)
REMINDER FINDING TYPE PARAMETER
"FIA",801.45,0)
^PXRMD(801.45,
"FIA",801.45,0,0)
801.45IO
"FIA",801.45,0,1)
y^y^f^^y^^y^o^n
"FIA",801.45,0,10)

"FIA",801.45,0,11)

"FIA",801.45,0,"RLRO")

"FIA",801.45,0,"VR")
1.5^CLINICAL REMINDERS
"FIA",801.45,801.45)
0
"FIA",801.45,801.451)
0
"FIA",801.45,801.4515)
0
"FIA",801.9)
REMINDER RESOLUTION STATUS
"FIA",801.9,0)
^PXRMD(801.9,
"FIA",801.9,0,0)
801.9O
"FIA",801.9,0,1)
y^y^f^^y^^y^r^n
"FIA",801.9,0,10)

"FIA",801.9,0,11)

"FIA",801.9,0,"RLRO")

"FIA",801.9,0,"VR")
1.5^CLINICAL REMINDERS
"FIA",801.9,801.9)
0
"FIA",801.9,801.9001)
0
"FIA",801.9,801.901)
0
"FIA",801.95)
HEALTH FACTOR RESOLUTION
"FIA",801.95,0)
^PXRMD(801.95,
"FIA",801.95,0,0)
801.95PO
"FIA",801.95,0,1)
y^y^f^^^^n
"FIA",801.95,0,10)

"FIA",801.95,0,11)

"FIA",801.95,0,"RLRO")

"FIA",801.95,0,"VR")
1.5^CLINICAL REMINDERS
"FIA",801.95,801.95)
0
"FIA",801.95,801.9501)
0
"FIA",810.1)
REMINDER REPORT TEMPLATE
"FIA",810.1,0)
^PXRMPT(810.1,
"FIA",810.1,0,0)
810.1IO
"FIA",810.1,0,1)
y^y^f^^^^n
"FIA",810.1,0,10)

"FIA",810.1,0,11)

"FIA",810.1,0,"RLRO")

"FIA",810.1,0,"VR")
1.5^CLINICAL REMINDERS
"FIA",810.1,810.1)
0
"FIA",810.1,810.11)
0
"FIA",810.1,810.111)
0
"FIA",810.1,810.112)
0
"FIA",810.1,810.12)
0
"FIA",810.1,810.13)
0
"FIA",810.1,810.14)
0
"FIA",810.1,810.16)
0
"FIA",810.1,810.17)
0
"FIA",810.1,810.18)
0
"FIA",810.1,810.19)
0
"FIA",811.2)
REMINDER TAXONOMY
"FIA",811.2,0)
^PXD(811.2,
"FIA",811.2,0,0)
811.2IO
"FIA",811.2,0,1)
y^y^f^^n^^y^r^n
"FIA",811.2,0,10)

"FIA",811.2,0,11)
I $P(^PXD(811.2,Y,0),U,1)["VA-"
"FIA",811.2,0,"RLRO")

"FIA",811.2,0,"VR")
1.5^CLINICAL REMINDERS
"FIA",811.2,811.2)
0
"FIA",811.2,811.22101)
0
"FIA",811.2,811.22102)
0
"FIA",811.2,811.22103)
0
"FIA",811.2,811.22104)
0
"FIA",811.2,811.23102)
0
"FIA",811.2,811.23104)
0
"FIA",811.3)
EXPANDED TAXONOMIES
"FIA",811.3,0)
^PXD(811.3,
"FIA",811.3,0,0)
811.3OP
"FIA",811.3,0,1)
y^y^f^^^^n
"FIA",811.3,0,10)

"FIA",811.3,0,11)

"FIA",811.3,0,"RLRO")

"FIA",811.3,0,"VR")
1.5^CLINICAL REMINDERS
"FIA",811.3,811.3)
0
"FIA",811.3,811.31)
0
"FIA",811.3,811.32)
0
"FIA",811.3,811.371)
0
"FIA",811.3,811.381)
0
"FIA",811.4)
REMINDER COMPUTED FINDINGS
"FIA",811.4,0)
^PXRMD(811.4,
"FIA",811.4,0,0)
811.4O
"FIA",811.4,0,1)
y^y^f^^n^^y^r^n
"FIA",811.4,0,10)

"FIA",811.4,0,11)
I $P(^PXRMD(811.4,Y,0),U,1)["VA-"
"FIA",811.4,0,"RLRO")

"FIA",811.4,0,"VR")
1.5^CLINICAL REMINDERS
"FIA",811.4,811.4)
0
"FIA",811.4,811.41)
0
"FIA",811.5)
REMINDER TERM
"FIA",811.5,0)
^PXRMD(811.5,
"FIA",811.5,0,0)
811.5O
"FIA",811.5,0,1)
y^y^f^^y^PXRM NATIONAL TERMS^y^o^n
"FIA",811.5,0,10)

"FIA",811.5,0,11)
I $P(^PXRMD(811.5,Y,0),U,2)="N"
"FIA",811.5,0,"RLRO")
^DIBT(462,1)
"FIA",811.5,0,"VR")
1.5^CLINICAL REMINDERS
"FIA",811.5,811.5)
0
"FIA",811.5,811.51)
0
"FIA",811.5,811.52)
0
"FIA",811.6)
REMINDER TERM SPONSOR
"FIA",811.6,0)
^PXRMD(811.6,
"FIA",811.6,0,0)
811.6
"FIA",811.6,0,1)
y^y^f^^n^PXRM NATIONAL TERM SPONSORS^y^o^n
"FIA",811.6,0,10)

"FIA",811.6,0,11)
I $P(^PXRMD(811.6,Y,0),U,2)="N"
"FIA",811.6,0,"RLRO")
^DIBT(463,1)
"FIA",811.6,0,"VR")
1.5^CLINICAL REMINDERS
"FIA",811.6,811.6)
0
"FIA",811.7)
REMINDER CATEGORY
"FIA",811.7,0)
^PXRMD(811.7,
"FIA",811.7,0,0)
811.7O
"FIA",811.7,0,1)
y^y^f^^^^n
"FIA",811.7,0,10)

"FIA",811.7,0,11)

"FIA",811.7,0,"RLRO")

"FIA",811.7,0,"VR")
1.5^CLINICAL REMINDERS
"FIA",811.7,811.7)
0
"FIA",811.7,811.701)
0
"FIA",811.7,811.71)
0
"FIA",811.7,811.72)
0
"FIA",811.9)
REMINDER DEFINITION
"FIA",811.9,0)
^PXD(811.9,
"FIA",811.9,0,0)
811.9
"FIA",811.9,0,1)
y^y^f^^y^^y^r^n
"FIA",811.9,0,10)

"FIA",811.9,0,11)
I $P(^PXD(811.9,Y,0),U,1)["VA-"
"FIA",811.9,0,"RLRO")

"FIA",811.9,0,"VR")
1.5^CLINICAL REMINDERS
"FIA",811.9,811.9)
0
"FIA",811.9,811.9001)
0
"FIA",811.9,811.90015)
0
"FIA",811.9,811.90016)
0
"FIA",811.9,811.9002)
0
"FIA",811.9,811.90021)
0
"FIA",811.9,811.9003)
0
"FIA",811.9,811.902)
0
"FIA",811.9,811.9024)
0
"FIA",811.9,811.9025)
0
"FIA",811.9,811.911)
0
"FIA",811.9,811.9110111)
0
"FIA",811.9,811.9110112)
0
"FIA",811.9,811.9114)
0
"FIA",811.9,811.9115)
0
"FIA",811.9,811.92)
0
"FIA",811.9,811.93)
0
"FIA",811.9,811.94)
0
"FIA",811.9,811.941)
0
"FIA",811.9,811.944)
0
"FIA",811.9,811.945)
0
"FIA",811.9,811.946)
0
"FIA",811.9,811.95)
0
"FIA",811.9,811.95051)
0
"FIA",811.9,811.95052)
0
"FIA",811.9,811.954)
0
"FIA",811.9,811.955)
0
"FIA",811.9,811.961)
0
"FIA",811.9,811.965)
0
"FIA",811.9,811.966)
0
"FIA",811.9,811.97)
0
"FIA",811.9,811.973)
0
"FIA",811.9,811.974)
0
"FIA",8989.51)
PARAMETER DEFINITION
"FIA",8989.51,0)
^XTV(8989.51,
"FIA",8989.51,0,0)
8989.51I
"FIA",8989.51,0,1)
n^n^f^^y^^y^r^n
"FIA",8989.51,0,10)

"FIA",8989.51,0,11)
I $E(^(0),1,4)="PXRM"
"FIA",8989.51,0,"RLRO")

"FIA",8989.51,0,"VR")
1.5^CLINICAL REMINDERS
"FIA",8989.51,8989.51)
0
"FIA",8989.51,8989.512)
0
"FIA",8989.51,8989.513)
0
"FIA",9999999.64)
HEALTH FACTORS
"FIA",9999999.64,0)
^AUTTHF(
"FIA",9999999.64,0,0)
9999999.64I
"FIA",9999999.64,0,1)
n^n^f^^y^PXRM HEP C HEALTH FACTORS^y^o^n
"FIA",9999999.64,0,10)

"FIA",9999999.64,0,11)

"FIA",9999999.64,0,"RLRO")
^DIBT(464,1)
"FIA",9999999.64,0,"VR")
1.5^CLINICAL REMINDERS
"FIA",9999999.64,9999999.64)
0
"FIA",9999999.64,9999999.641101)
0
"FRV1",801.41,"2,1",4)
ED
"FRV1",801.41,"2,1",4,"F")
;PXRMD(801.45,
"FRV1",801.41,"200,10,1,0",2)
PXRM AUDIT RESULT ELEMENT 1
"FRV1",801.41,"200,10,1,0",2,"F")
;PXRMD(801.41,
"FRV1",801.41,"200,10,2,0",2)
PXRM AUDIT RESULT ELEMENT 2
"FRV1",801.41,"200,10,2,0",2,"F")
;PXRMD(801.41,
"FRV1",801.41,"201,10,1,0",2)
PXRM AUDC RESULT ELEMENT 1
"FRV1",801.41,"201,10,1,0",2,"F")
;PXRMD(801.41,
"FRV1",801.41,"201,10,2,0",2)
PXRM AUDC RESULT ELEMENT 2
"FRV1",801.41,"201,10,2,0",2,"F")
;PXRMD(801.41,
"FRV1",801.41,"202,10,1,0",2)
PXRM BDI RESULT ELEMENT 1
"FRV1",801.41,"202,10,1,0",2,"F")
;PXRMD(801.41,
"FRV1",801.41,"202,10,2,0",2)
PXRM BDI RESULT ELEMENT 2
"FRV1",801.41,"202,10,2,0",2,"F")
;PXRMD(801.41,
"FRV1",801.41,"202,10,3,0",2)
PXRM BDI RESULT ELEMENT 3
"FRV1",801.41,"202,10,3,0",2,"F")
;PXRMD(801.41,
"FRV1",801.41,"202,10,4,0",2)
PXRM BDI RESULT ELEMENT 4
"FRV1",801.41,"202,10,4,0",2,"F")
;PXRMD(801.41,
"FRV1",801.41,"203,10,1,0",2)
PXRM CAGE RESULT ELEMENT 1
"FRV1",801.41,"203,10,1,0",2,"F")
;PXRMD(801.41,
"FRV1",801.41,"203,10,2,0",2)
PXRM CAGE RESULT ELEMENT 2
"FRV1",801.41,"203,10,2,0",2,"F")
;PXRMD(801.41,
"FRV1",801.41,"204,10,1,0",2)
PXRM DOM80 RESULT ELEMENT 1
"FRV1",801.41,"204,10,1,0",2,"F")
;PXRMD(801.41,
"FRV1",801.41,"204,10,2,0",2)
PXRM DOM80 RESULT ELEMENT 2
"FRV1",801.41,"204,10,2,0",2,"F")
;PXRMD(801.41,
"FRV1",801.41,"205,10,1,0",2)
PXRM DOMG RESULT ELEMENT 1
"FRV1",801.41,"205,10,1,0",2,"F")
;PXRMD(801.41,
"FRV1",801.41,"205,10,2,0",2)
PXRM DOMG RESULT ELEMENT 2
"FRV1",801.41,"205,10,2,0",2,"F")
;PXRMD(801.41,
"FRV1",801.41,"206,10,1,0",2)
PXRM MISS RESULT ELEMENT 1
"FRV1",801.41,"206,10,1,0",2,"F")
;PXRMD(801.41,
"FRV1",801.41,"206,10,2,0",2)
PXRM MISS RESULT ELEMENT 2
"FRV1",801.41,"206,10,2,0",2,"F")
;PXRMD(801.41,
"FRV1",801.41,"207,10,1,0",2)
PXRM ZUNG RESULT ELEMENT 1
"FRV1",801.41,"207,10,1,0",2,"F")
;PXRMD(801.41,
"FRV1",801.41,"207,10,2,0",2)
PXRM ZUNG RESULT ELEMENT 2
"FRV1",801.41,"207,10,2,0",2,"F")
;PXRMD(801.41,
"FRV1",801.41,"207,10,3,0",2)
PXRM ZUNG RESULT ELEMENT 3
"FRV1",801.41,"207,10,3,0",2,"F")
;PXRMD(801.41,
"FRV1",801.41,"208,0",15)
PXRM AIMS RESULT GROUP
"FRV1",801.41,"208,0",15,"F")
;PXRMD(801.41,
"FRV1",801.41,"208,10,1,0",2)
PXRM AIMS RESULT ELEMENT 1
"FRV1",801.41,"208,10,1,0",2,"F")
;PXRMD(801.41,
"FRV1",801.41,"42,1",4)
IM
"FRV1",801.41,"42,1",4,"F")
;PXRMD(801.45,
"FRV1",801.41,"43,1",4)
IM
"FRV1",801.41,"43,1",4,"F")
;PXRMD(801.45,
"FRV1",801.41,"44,1",4)
IM
"FRV1",801.41,"44,1",4,"F")
;PXRMD(801.45,
"FRV1",801.41,"48,1",4)
EX
"FRV1",801.41,"48,1",4,"F")
;PXRMD(801.45,
"FRV1",801.41,"62,1",4)
POV
"FRV1",801.41,"62,1",4,"F")
;PXRMD(801.45,
"FRV1",801.41,"64,1",4)
CPT
"FRV1",801.41,"64,1",4,"F")
;PXRMD(801.45,
"FRV1",801.41,"67,1",4)
ST
"FRV1",801.41,"67,1",4,"F")
;PXRMD(801.45,
"FRV1",801.41,"68,1",4)
ST
"FRV1",801.41,"68,1",4,"F")
;PXRMD(801.45,
"FRV1",801.41,"86,1",4)
ED
"FRV1",801.41,"86,1",4,"F")
;PXRMD(801.45,
"FRV1",801.41,"87,1",4)
IM
"FRV1",801.41,"87,1",4,"F")
;PXRMD(801.45,
"FRV1",801.41,"88,1",4)
HF
"FRV1",801.41,"88,1",4,"F")
;PXRMD(801.45,
"FRV1",801.41,"89,1",4)
POV
"FRV1",801.41,"89,1",4,"F")
;PXRMD(801.45,
"FRV1",801.45,"13,0",2)
SK
"FRV1",801.45,"13,0",2,"F")
;PXRMD(801.42,
"FRV1",801.45,"15,0",2)
VIT
"FRV1",801.45,"15,0",2,"F")
;PXRMD(801.42,
"FRV1",801.45,"16,0",2)
Q
"FRV1",801.45,"16,0",2,"F")
;PXRMD(801.42,
"FRV1",801.45,"17,0",2)
POV
"FRV1",801.45,"17,0",2,"F")
;PXRMD(801.42,
"FRV1",801.45,"18,0",2)
CPT
"FRV1",801.45,"18,0",2,"F")
;PXRMD(801.42,
"FRV1",801.45,"4,0",2)
PED
"FRV1",801.45,"4,0",2,"F")
;PXRMD(801.42,
"FRV1",801.45,"5,0",2)
XAM
"FRV1",801.45,"5,0",2,"F")
;PXRMD(801.42,
"FRV1",801.45,"6,0",2)
HF
"FRV1",801.45,"6,0",2,"F")
;PXRMD(801.42,
"FRV1",801.45,"7,0",2)
IMM
"FRV1",801.45,"7,0",2,"F")
;PXRMD(801.42,
"FRV1",811.5,"1,0",3)
INFECTIOUS DISEASES PROGRAM OFFICE, VAHQ
"FRV1",811.5,"1,0",3,"F")
;PXRMD(811.6,
"FRV1",811.5,"2,0",3)
INFECTIOUS DISEASES PROGRAM OFFICE, VAHQ
"FRV1",811.5,"2,0",3,"F")
;PXRMD(811.6,
"FRV1",811.5,"3,0",3)
INFECTIOUS DISEASES PROGRAM OFFICE, VAHQ
"FRV1",811.5,"3,0",3,"F")
;PXRMD(811.6,
"FRV1",811.5,"4,0",3)
INFECTIOUS DISEASES PROGRAM OFFICE, VAHQ
"FRV1",811.5,"4,0",3,"F")
;PXRMD(811.6,
"FRV1",811.5,"5,0",3)
INFECTIOUS DISEASES PROGRAM OFFICE, VAHQ
"FRV1",811.5,"5,0",3,"F")
;PXRMD(811.6,
"FRV1",811.5,"6,0",3)
INFECTIOUS DISEASES PROGRAM OFFICE, VAHQ
"FRV1",811.5,"6,0",3,"F")
;PXRMD(811.6,
"FRV1",811.5,"7,0",3)
INFECTIOUS DISEASES PROGRAM OFFICE, VAHQ
"FRV1",811.5,"7,0",3,"F")
;PXRMD(811.6,
"FRV1",811.9,"1,0",2)
EXAMINATION
"FRV1",811.9,"1,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"10,0",2)
IMMUNIZATION
"FRV1",811.9,"10,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"10,0",5)
VA-*PNEUMOCOCCAL VACCINE
"FRV1",811.9,"10,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"11,0",2)
EDUCATION
"FRV1",811.9,"11,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"11,0",5)
VA-*SEATBELT AND ACCIDENT SCREEN
"FRV1",811.9,"11,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"12,0",2)
IMMUNIZATION
"FRV1",811.9,"12,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"12,0",5)
VA-*TETANUS DIPHTHERIA IMMUNIZATION
"FRV1",811.9,"12,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"13,0",2)
EDUCATION
"FRV1",811.9,"13,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"13,0",5)
VA-*TOBACCO USE SCREEN
"FRV1",811.9,"13,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"14,0",2)
EDUCATION
"FRV1",811.9,"14,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"14,0",5)
VA-*FITNESS AND EXERCISE SCREEN
"FRV1",811.9,"14,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"15,0",2)
EXAMINATION
"FRV1",811.9,"15,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"15,0",5)
VA-*COLORECTAL CANCER SCREEN (SIG.)
"FRV1",811.9,"15,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"16,0",2)
PROCEDURE
"FRV1",811.9,"16,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"16,0",5)
VA-*CERVICAL CANCER SCREEN
"FRV1",811.9,"16,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"17,0",2)
EXAMINATION
"FRV1",811.9,"17,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"18,0",2)
EDUCATION
"FRV1",811.9,"18,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"19,0",2)
RADIOLOGY PROCEDURE
"FRV1",811.9,"19,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"19,0",5)
VA-*BREAST CANCER SCREEN
"FRV1",811.9,"19,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"2,0",2)
EDUCATION
"FRV1",811.9,"2,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"2,0",5)
VA-*PROBLEM DRINKING SCREEN
"FRV1",811.9,"2,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"20,0",2)
PROCEDURE
"FRV1",811.9,"20,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"20,0",5)
VA-*CERVICAL CANCER SCREEN
"FRV1",811.9,"20,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"21,0",2)
EXAMINATION
"FRV1",811.9,"21,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"22,0",2)
EDUCATION
"FRV1",811.9,"22,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"22,0",5)
VA-*WEIGHT AND NUTRITION SCREEN
"FRV1",811.9,"22,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"23,0",2)
LABORATORY TEST
"FRV1",811.9,"23,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"23,0",5)
VA-*CHOLESTEROL SCREEN (M)
"FRV1",811.9,"23,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"24,0",2)
EXAMINATION
"FRV1",811.9,"24,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"24,0",5)
VA-*COLORECTAL CANCER SCREEN (FOBT)
"FRV1",811.9,"24,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"25,0",2)
PROCEDURE
"FRV1",811.9,"25,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"25,0",5)
VA-*COLORECTAL CANCER SCREEN (SIG.)
"FRV1",811.9,"25,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"26,0",2)
IMMUNIZATION
"FRV1",811.9,"26,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"26,0",5)
VA-*INFLUENZA IMMUNIZATION
"FRV1",811.9,"26,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"28,0",2)
IMMUNIZATION
"FRV1",811.9,"28,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"28,0",5)
VA-*PNEUMOCOCCAL VACCINE
"FRV1",811.9,"28,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"29,0",2)
SKIN TEST
"FRV1",811.9,"29,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"3,0",2)
MEASUREMENT
"FRV1",811.9,"3,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"3,0",5)
VA-*HYPERTENSION SCREEN
"FRV1",811.9,"3,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"30,0",2)
EDUCATION
"FRV1",811.9,"30,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"30,0",5)
VA-*TOBACCO USE SCREEN
"FRV1",811.9,"30,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"31,0",2)
EDUCATION
"FRV1",811.9,"31,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"31,0",5)
VA-*PROBLEM DRINKING SCREEN
"FRV1",811.9,"31,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"32,0",2)
EDUCATION
"FRV1",811.9,"32,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"32,0",5)
VA-*FITNESS AND EXERCISE SCREEN
"FRV1",811.9,"32,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"33,0",2)
EDUCATION
"FRV1",811.9,"33,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"33,0",5)
VA-*SEATBELT AND ACCIDENT SCREEN
"FRV1",811.9,"33,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"34,0",2)
EDUCATION
"FRV1",811.9,"34,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"35,0",2)
EDUCATION
"FRV1",811.9,"35,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"36,0",2)
MEASUREMENT
"FRV1",811.9,"36,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"37,0",2)
LABORATORY TEST
"FRV1",811.9,"37,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"4,0",2)
PROCEDURE
"FRV1",811.9,"4,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"4,0",5)
VA-*BREAST CANCER SCREEN
"FRV1",811.9,"4,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"43,0",2)
EXAMINATION
"FRV1",811.9,"43,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"5,0",2)
MEASUREMENT
"FRV1",811.9,"5,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"5,0",5)
VA-*HYPERTENSION SCREEN
"FRV1",811.9,"5,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"6,0",2)
EXAMINATION
"FRV1",811.9,"6,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"6,0",5)
VA-*COLORECTAL CANCER SCREEN (FOBT)
"FRV1",811.9,"6,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"7,0",2)
LABORATORY TEST
"FRV1",811.9,"7,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"7,0",5)
VA-*CHOLESTEROL SCREEN (F)
"FRV1",811.9,"7,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"8,0",2)
IMMUNIZATION
"FRV1",811.9,"8,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"8,0",5)
VA-*INFLUENZA IMMUNIZATION
"FRV1",811.9,"8,0",5,"F")
;PXD(811.9,
"FRV1",811.9,"9,0",2)
EDUCATION
"FRV1",811.9,"9,0",2,"F")
;PXD(811.8,
"FRV1",811.9,"9,0",5)
VA-*WEIGHT AND NUTRITION SCREEN
"FRV1",811.9,"9,0",5,"F")
;PXD(811.9,
"FRV1",9999999.64,"70,0",3)
HEPATITIS C
"FRV1",9999999.64,"70,0",3,"F")
;AUTTHF(
"FRV1",9999999.64,"71,0",3)
HEPATITIS C
"FRV1",9999999.64,"71,0",3,"F")
;AUTTHF(
"FRV1",9999999.64,"72,0",3)
HEPATITIS C
"FRV1",9999999.64,"72,0",3,"F")
;AUTTHF(
"FRV1",9999999.64,"73,0",3)
HEPATITIS C
"FRV1",9999999.64,"73,0",3,"F")
;AUTTHF(
"FRV1K",801.41,"200,10,1,0",2)
B
"FRV1K",801.41,"200,10,1,0",2,1)
PXRM AUDIT RESULT ELEMENT 1
"FRV1K",801.41,"200,10,2,0",2)
B
"FRV1K",801.41,"200,10,2,0",2,1)
PXRM AUDIT RESULT ELEMENT 2
"FRV1K",801.41,"201,10,1,0",2)
B
"FRV1K",801.41,"201,10,1,0",2,1)
PXRM AUDC RESULT ELEMENT 1
"FRV1K",801.41,"201,10,2,0",2)
B
"FRV1K",801.41,"201,10,2,0",2,1)
PXRM AUDC RESULT ELEMENT 2
"FRV1K",801.41,"202,10,1,0",2)
B
"FRV1K",801.41,"202,10,1,0",2,1)
PXRM BDI RESULT ELEMENT 1
"FRV1K",801.41,"202,10,2,0",2)
B
"FRV1K",801.41,"202,10,2,0",2,1)
PXRM BDI RESULT ELEMENT 2
"FRV1K",801.41,"202,10,3,0",2)
B
"FRV1K",801.41,"202,10,3,0",2,1)
PXRM BDI RESULT ELEMENT 3
"FRV1K",801.41,"202,10,4,0",2)
B
"FRV1K",801.41,"202,10,4,0",2,1)
PXRM BDI RESULT ELEMENT 4
"FRV1K",801.41,"203,10,1,0",2)
B
"FRV1K",801.41,"203,10,1,0",2,1)
PXRM CAGE RESULT ELEMENT 1
"FRV1K",801.41,"203,10,2,0",2)
B
"FRV1K",801.41,"203,10,2,0",2,1)
PXRM CAGE RESULT ELEMENT 2
"FRV1K",801.41,"204,10,1,0",2)
B
"FRV1K",801.41,"204,10,1,0",2,1)
PXRM DOM80 RESULT ELEMENT 1
"FRV1K",801.41,"204,10,2,0",2)
B
"FRV1K",801.41,"204,10,2,0",2,1)
PXRM DOM80 RESULT ELEMENT 2
"FRV1K",801.41,"205,10,1,0",2)
B
"FRV1K",801.41,"205,10,1,0",2,1)
PXRM DOMG RESULT ELEMENT 1
"FRV1K",801.41,"205,10,2,0",2)
B
"FRV1K",801.41,"205,10,2,0",2,1)
PXRM DOMG RESULT ELEMENT 2
"FRV1K",801.41,"206,10,1,0",2)
B
"FRV1K",801.41,"206,10,1,0",2,1)
PXRM MISS RESULT ELEMENT 1
"FRV1K",801.41,"206,10,2,0",2)
B
"FRV1K",801.41,"206,10,2,0",2,1)
PXRM MISS RESULT ELEMENT 2
"FRV1K",801.41,"207,10,1,0",2)
B
"FRV1K",801.41,"207,10,1,0",2,1)
PXRM ZUNG RESULT ELEMENT 1
"FRV1K",801.41,"207,10,2,0",2)
B
"FRV1K",801.41,"207,10,2,0",2,1)
PXRM ZUNG RESULT ELEMENT 2
"FRV1K",801.41,"207,10,3,0",2)
B
"FRV1K",801.41,"207,10,3,0",2,1)
PXRM ZUNG RESULT ELEMENT 3
"FRV1K",801.41,"208,0",15)
B
"FRV1K",801.41,"208,0",15,1)
PXRM AIMS RESULT GROUP
"FRV1K",801.41,"208,10,1,0",2)
B
"FRV1K",801.41,"208,10,1,0",2,1)
PXRM AIMS RESULT ELEMENT 1
"FRV1K",811.5,"1,0",3)
B
"FRV1K",811.5,"1,0",3,1)
INFECTIOUS DISEASES PROGRAM OFFICE, VAHQ
"FRV1K",811.5,"2,0",3)
B
"FRV1K",811.5,"2,0",3,1)
INFECTIOUS DISEASES PROGRAM OFFICE, VAHQ
"FRV1K",811.5,"3,0",3)
B
"FRV1K",811.5,"3,0",3,1)
INFECTIOUS DISEASES PROGRAM OFFICE, VAHQ
"FRV1K",811.5,"4,0",3)
B
"FRV1K",811.5,"4,0",3,1)
INFECTIOUS DISEASES PROGRAM OFFICE, VAHQ
"FRV1K",811.5,"5,0",3)
B
"FRV1K",811.5,"5,0",3,1)
INFECTIOUS DISEASES PROGRAM OFFICE, VAHQ
"FRV1K",811.5,"6,0",3)
B
"FRV1K",811.5,"6,0",3,1)
INFECTIOUS DISEASES PROGRAM OFFICE, VAHQ
"FRV1K",811.5,"7,0",3)
B
"FRV1K",811.5,"7,0",3,1)
INFECTIOUS DISEASES PROGRAM OFFICE, VAHQ
"FRV1K",811.9,"10,0",5)
B
"FRV1K",811.9,"10,0",5,1)
VA-*PNEUMOCOCCAL VACCINE
"FRV1K",811.9,"11,0",5)
B
"FRV1K",811.9,"11,0",5,1)
VA-*SEATBELT AND ACCIDENT SCREEN
"FRV1K",811.9,"12,0",5)
B
"FRV1K",811.9,"12,0",5,1)
VA-*TETANUS DIPHTHERIA IMMUNIZATION
"FRV1K",811.9,"13,0",5)
B
"FRV1K",811.9,"13,0",5,1)
VA-*TOBACCO USE SCREEN
"FRV1K",811.9,"14,0",5)
B
"FRV1K",811.9,"14,0",5,1)
VA-*FITNESS AND EXERCISE SCREEN
"FRV1K",811.9,"15,0",5)
B
"FRV1K",811.9,"15,0",5,1)
VA-*COLORECTAL CANCER SCREEN (SIG.)
"FRV1K",811.9,"16,0",5)
B
"FRV1K",811.9,"16,0",5,1)
VA-*CERVICAL CANCER SCREEN
"FRV1K",811.9,"19,0",5)
B
"FRV1K",811.9,"19,0",5,1)
VA-*BREAST CANCER SCREEN
"FRV1K",811.9,"2,0",5)
B
"FRV1K",811.9,"2,0",5,1)
VA-*PROBLEM DRINKING SCREEN
"FRV1K",811.9,"20,0",5)
B
"FRV1K",811.9,"20,0",5,1)
VA-*CERVICAL CANCER SCREEN
"FRV1K",811.9,"22,0",5)
B
"FRV1K",811.9,"22,0",5,1)
VA-*WEIGHT AND NUTRITION SCREEN
"FRV1K",811.9,"23,0",5)
B
"FRV1K",811.9,"23,0",5,1)
VA-*CHOLESTEROL SCREEN (M)
"FRV1K",811.9,"24,0",5)
B
"FRV1K",811.9,"24,0",5,1)
VA-*COLORECTAL CANCER SCREEN (FOBT)
"FRV1K",811.9,"25,0",5)
B
"FRV1K",811.9,"25,0",5,1)
VA-*COLORECTAL CANCER SCREEN (SIG.)
"FRV1K",811.9,"26,0",5)
B
"FRV1K",811.9,"26,0",5,1)
VA-*INFLUENZA IMMUNIZATION
"FRV1K",811.9,"28,0",5)
B
"FRV1K",811.9,"28,0",5,1)
VA-*PNEUMOCOCCAL VACCINE
"FRV1K",811.9,"3,0",5)
B
"FRV1K",811.9,"3,0",5,1)
VA-*HYPERTENSION SCREEN
"FRV1K",811.9,"30,0",5)
B
"FRV1K",811.9,"30,0",5,1)
VA-*TOBACCO USE SCREEN
"FRV1K",811.9,"31,0",5)
B
"FRV1K",811.9,"31,0",5,1)
VA-*PROBLEM DRINKING SCREEN
"FRV1K",811.9,"32,0",5)
B
"FRV1K",811.9,"32,0",5,1)
VA-*FITNESS AND EXERCISE SCREEN
"FRV1K",811.9,"33,0",5)
B
"FRV1K",811.9,"33,0",5,1)
VA-*SEATBELT AND ACCIDENT SCREEN
"FRV1K",811.9,"4,0",5)
B
"FRV1K",811.9,"4,0",5,1)
VA-*BREAST CANCER SCREEN
"FRV1K",811.9,"5,0",5)
B
"FRV1K",811.9,"5,0",5,1)
VA-*HYPERTENSION SCREEN
"FRV1K",811.9,"6,0",5)
B
"FRV1K",811.9,"6,0",5,1)
VA-*COLORECTAL CANCER SCREEN (FOBT)
"FRV1K",811.9,"7,0",5)
B
"FRV1K",811.9,"7,0",5,1)
VA-*CHOLESTEROL SCREEN (F)
"FRV1K",811.9,"8,0",5)
B
"FRV1K",811.9,"8,0",5,1)
VA-*INFLUENZA IMMUNIZATION
"FRV1K",811.9,"9,0",5)
B
"FRV1K",811.9,"9,0",5,1)
VA-*WEIGHT AND NUTRITION SCREEN
"INI")
PRE^PXRMV1I
"INIT")
POST^PXRMV1I
"IX",801.41,801.41,"B",0)
801.41^B^B Cross-reference^R^^F^IR^I^801.41^^^^^LS
"IX",801.41,801.41,"B",.1,0)
^^1^1^3000404^
"IX",801.41,801.41,"B",.1,1,0)
This is the "B" cross-reference redone as a new style cross reference.
"IX",801.41,801.41,"B",1)
S ^PXRMD(801.41,"B",$E(X,1,63),DA)=""
"IX",801.41,801.41,"B",2)
K ^PXRMD(801.41,"B",$E(X,1,63),DA)
"IX",801.41,801.41,"B",2.5)
K ^PXRMD(801.41,"B")
"IX",801.41,801.41,"B",11.1,0)
^.114IA^1^1
"IX",801.41,801.41,"B",11.1,1,0)
1^F^801.41^.01^63^1^F
"IX",801.41,801.41,"B",11.1,1,3)

"IX",801.9,801.9,"AC",0)
801.9^AC^Local to National Status pointers^R^^F^IR^W^801.9001^^^^^S
"IX",801.9,801.9,"AC",.1,0)
^^2^2^3000204^
"IX",801.9,801.9,"AC",.1,1,0)
This index holds pointers from local resolution codes to national
"IX",801.9,801.9,"AC",.1,2,0)
resolution codes. These pointers are created when a local code is added.
"IX",801.9,801.9,"AC",1)
S ^PXRMD(801.9,"AC",X,DA(1),DA)=""
"IX",801.9,801.9,"AC",2)
K ^PXRMD(801.9,"AC",X,DA(1),DA)
"IX",801.9,801.9,"AC",2.5)
K ^PXRMD(801.9,"AC")
"IX",801.9,801.9,"AC",11.1,0)
^.114IA^1^1
"IX",801.9,801.9,"AC",11.1,1,0)
1^F^801.9001^.01^^1^F
"IX",801.9,801.9,"ACP",0)
801.9^ACP^Remove pointers to deleted local statuses from the sub-status multiple.^MU^^F^IR^I^801.9^^^^^A
"IX",801.9,801.9,"ACP",.1,0)
^^4^4^3000613^
"IX",801.9,801.9,"ACP",.1,1,0)
When a local status is deleted the ACP cross reference is used to remove
"IX",801.9,801.9,"ACP",.1,2,0)
the local status from the sub-status multiple on the related national
"IX",801.9,801.9,"ACP",.1,3,0)
status. To determine the national status to which the local status belongs
"IX",801.9,801.9,"ACP",.1,4,0)
the AC index is used.
"IX",801.9,801.9,"ACP",1)
Q
"IX",801.9,801.9,"ACP",2)
D KILLAC^PXRMSEDT Q
"IX",801.9,801.9,"ACP",11.1,0)
^.114IA^1^1
"IX",801.9,801.9,"ACP",11.1,1,0)
1^F^801.9^.01^30^1^F
"IX",811.2,811.2,"B",0)
811.2^B^New style B cross-reference^R^^F^IR^I^811.2^^^^^LS
"IX",811.2,811.2,"B",1)
S ^PXD(811.2,"B",$E(X,1,35),DA)=""
"IX",811.2,811.2,"B",2)
K ^PXD(811.2,"B",$E(X,1,35),DA)
"IX",811.2,811.2,"B",2.5)
K ^PXD(811.2,"B")
"IX",811.2,811.2,"B",11.1,0)
^.114IA^1^1
"IX",811.2,811.2,"B",11.1,1,0)
1^F^811.2^.01^35^1^F
"IX",811.2,811.2,"B",11.1,1,3)

"IX",811.2,811.22102,"AD",0)
811.22102^AD^Whenever ICD9 entries are edited rebuild expanded taxonomy^MU^^R^IR^I^811.22102^^^^^A
"IX",811.2,811.22102,"AD",1)
D TAXEDIT^PXRMTAX(DA(1),"")
"IX",811.2,811.22102,"AD",2)
D TAXEDIT^PXRMTAX(DA(1),DA)
"IX",811.2,811.22102,"AD",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.2,811.22102,"AD",2.5)
D TAXKILL^PXRMTAX(DA(1))
"IX",811.2,811.22102,"AD",11.1,0)
^.114IA^2^2
"IX",811.2,811.22102,"AD",11.1,1,0)
1^F^811.22102^.01^^^F
"IX",811.2,811.22102,"AD",11.1,2,0)
2^F^811.22102^1^^^F
"IX",811.2,811.22103,"AC",0)
811.22103^AC^Whenever ICD0 entries are changed rebuild the expanded taxonomy^MU^^R^IR^I^811.22103^^^^^A
"IX",811.2,811.22103,"AC",1)
D TAXEDIT^PXRMTAX(DA(1),"")
"IX",811.2,811.22103,"AC",2)
D TAXEDIT^PXRMTAX(DA(1),DA)
"IX",811.2,811.22103,"AC",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.2,811.22103,"AC",2.5)
D TAXKILL^PXRMTAX(DA(1))
"IX",811.2,811.22103,"AC",11.1,0)
^.114IA^2^2
"IX",811.2,811.22103,"AC",11.1,1,0)
1^F^811.22103^.01^^^F
"IX",811.2,811.22103,"AC",11.1,2,0)
2^F^811.22103^1^^^F
"IX",811.2,811.22104,"AE",0)
811.22104^AE^Whenever CPT entries are changed rebuild the expanded taxonomy^MU^^R^IR^I^811.22104^^^^^A
"IX",811.2,811.22104,"AE",1)
D TAXEDIT^PXRMTAX(DA(1),"")
"IX",811.2,811.22104,"AE",2)
D TAXEDIT^PXRMTAX(DA(1),DA)
"IX",811.2,811.22104,"AE",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.2,811.22104,"AE",2.5)
D TAXKILL^PXRMTAX(DA(1))
"IX",811.2,811.22104,"AE",11.1,0)
^.114IA^2^2
"IX",811.2,811.22104,"AE",11.1,1,0)
1^F^811.22104^.01^^^F
"IX",811.2,811.22104,"AE",11.1,2,0)
2^F^811.22104^1^^^F
"IX",811.3,811.31,"ICD9P",0)
811.31^ICD9P^ICD9 cross-reference^R^^F^IR^I^811.31^^^^^LS
"IX",811.3,811.31,"ICD9P",1)
S ^PXD(811.3,DA(1),80,"ICD9P",X,DA)=""
"IX",811.3,811.31,"ICD9P",2)
K ^PXD(811.3,DA(1),80,"ICD9P",X,DA)
"IX",811.3,811.31,"ICD9P",2.5)
K ^PXD(811.3,DA(1),80,"ICD9P")
"IX",811.3,811.31,"ICD9P",11.1,0)
^.114IA^1^1
"IX",811.3,811.31,"ICD9P",11.1,1,0)
1^F^811.31^.01^^1^F
"IX",811.3,811.32,"ICD0P",0)
811.32^ICD0P^ICD0 cross-reference^R^^F^IR^I^811.32^^^^^LS
"IX",811.3,811.32,"ICD0P",1)
S ^PXD(811.3,DA(1),80.1,"ICD0P",X,DA)=""
"IX",811.3,811.32,"ICD0P",2)
K ^PXD(811.3,DA(1),80.1,"ICD0P",X,DA)
"IX",811.3,811.32,"ICD0P",2.5)
K ^PXD(811.3,DA(1),80.1,"ICD0P")
"IX",811.3,811.32,"ICD0P",11.1,0)
^.114IA^1^1
"IX",811.3,811.32,"ICD0P",11.1,1,0)
1^F^811.32^.01^^1^F
"IX",811.3,811.371,"RCPTP",0)
811.371^RCPTP^ICPT pointer for radiology procedures^R^^F^IR^I^811.371^^^^^LS
"IX",811.3,811.371,"RCPTP",1)
S ^PXD(811.3,DA(1),71,"RCPTP",X,DA)=""
"IX",811.3,811.371,"RCPTP",2)
K ^PXD(811.3,DA(1),71,"RCPTP",X,DA)
"IX",811.3,811.371,"RCPTP",2.5)
K ^PXD(811.3,DA(1),71,"RCPTP")
"IX",811.3,811.371,"RCPTP",11.1,0)
^.114IA^1^1
"IX",811.3,811.371,"RCPTP",11.1,1,0)
1^F^811.371^1^^1^F
"IX",811.3,811.371,"RCPTP",11.1,1,3)

"IX",811.3,811.381,"ICPTP",0)
811.381^ICPTP^Pointer to ICPT entries^R^^F^IR^I^811.381^^^^^LS
"IX",811.3,811.381,"ICPTP",1)
S ^PXD(811.3,DA(1),81,"ICPTP",X,DA)=""
"IX",811.3,811.381,"ICPTP",2)
K ^PXD(811.3,DA(1),81,"ICPTP",X,DA)
"IX",811.3,811.381,"ICPTP",2.5)
K ^PXD(811.3,DA(1),81,"ICPTP")
"IX",811.3,811.381,"ICPTP",11.1,0)
^.114IA^1^1
"IX",811.3,811.381,"ICPTP",11.1,1,0)
1^F^811.381^.01^^1^F
"IX",811.3,811.381,"ICPTP",11.1,1,3)

"IX",811.4,811.4,"B",0)
811.4^B^New style B cross-reference^R^^F^IR^I^811.4^^^^^LS
"IX",811.4,811.4,"B",1)
S ^PXRMD(811.4,"B",$E(X,1,30),DA)=""
"IX",811.4,811.4,"B",2)
K ^PXRMD(811.4,"B",$E(X,1,30),DA)
"IX",811.4,811.4,"B",2.5)
K ^PXRMD(811.4,"B")
"IX",811.4,811.4,"B",11.1,0)
^.114IA^1^1
"IX",811.4,811.4,"B",11.1,1,0)
1^F^811.4^.01^30^1^F
"IX",811.4,811.4,"B",11.1,1,3)

"IX",811.5,811.5,"B",0)
811.5^B^New style B cross-reference^R^^F^IR^I^811.5^^^^^LS
"IX",811.5,811.5,"B",1)
S ^PXRMD(811.5,"B",$E(X,1,64),DA)=""
"IX",811.5,811.5,"B",2)
K ^PXRMD(811.5,"B",$E(X,1,64),DA)
"IX",811.5,811.5,"B",2.5)
K ^PXRMD(811.5,"B")
"IX",811.5,811.5,"B",11.1,0)
^.114IA^1^1
"IX",811.5,811.5,"B",11.1,1,0)
1^F^811.5^.01^64^1^F
"IX",811.5,811.5,"B",11.1,1,3)

"IX",811.5,811.5,"D",0)
811.5^D^New look-up on term type.^R^^F^IR^I^811.5^^^^^LS
"IX",811.5,811.5,"D",1)
S ^PXRMD(811.5,"D",X,DA)=""
"IX",811.5,811.5,"D",2)
K ^PXRMD(811.5,"D",X,DA)
"IX",811.5,811.5,"D",2.5)
K ^PXRMD(811.5,"D")
"IX",811.5,811.5,"D",11.1,0)
^.114IA^1^1
"IX",811.5,811.5,"D",11.1,1,0)
1^F^811.5^.02^^1^F
"IX",811.5,811.5,"D",11.1,1,3)

"IX",811.6,811.6,"B",0)
811.6^B^This is a new style B cross-reference^R^^F^IR^I^811.6^^^^^LS
"IX",811.6,811.6,"B",1)
S ^PXRMD(811.6,"B",$E(X,1,64),DA)=""
"IX",811.6,811.6,"B",2)
K ^PXRMD(811.6,"B",$E(X,1,64),DA)
"IX",811.6,811.6,"B",2.5)
K ^PXRMD(811.6,"B")
"IX",811.6,811.6,"B",11.1,0)
^.114IA^1^1
"IX",811.6,811.6,"B",11.1,1,0)
1^F^811.6^.01^64^1^F
"IX",811.7,811.7,"B",0)
811.7^B^New style B cross-reference^R^^F^IR^I^811.7^^^^^LS
"IX",811.7,811.7,"B",1)
S ^PXRMD(811.7,"B",$E(X,1,35),DA)=""
"IX",811.7,811.7,"B",2)
K ^PXRMD(811.7,"B",$E(X,1,35),DA)
"IX",811.7,811.7,"B",2.5)
K ^PXRMD(811.7,"B")
"IX",811.7,811.7,"B",11.1,0)
^.114IA^1^1
"IX",811.7,811.7,"B",11.1,1,0)
1^F^811.7^.01^35^1^F
"IX",811.7,811.7,"B",11.1,1,3)

"IX",811.9,811.9,"AE",0)
811.9^AE^Build the internal patient cohort logic^MU^^F^I^I^811.9^^^^^A
"IX",811.9,811.9,"AE",.1,0)
^^1^1^3000110^
"IX",811.9,811.9,"AE",.1,1,0)
This cross-reference builds the internal patient cohort logic.
"IX",811.9,811.9,"AE",1)
D CPPCLS^PXRMLOGX(DA,X),BLDINFL^PXRMLOGX(DA)
"IX",811.9,811.9,"AE",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.9,"AE",2)
D BLDPCLS^PXRMLOGX(DA),BLDINFL^PXRMLOGX(DA)
"IX",811.9,811.9,"AE",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.9,"AE",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"AE",11.1,1,0)
1^F^811.9^30^^^F
"IX",811.9,811.9,"AF",0)
811.9^AF^Cross-reference for building internal resolution logic^MU^^F^I^I^811.9^^^^^A
"IX",811.9,811.9,"AF",.1,0)
^^1^1^3000110^
"IX",811.9,811.9,"AF",.1,1,0)
This cross-reference builds the internal resolution logic.
"IX",811.9,811.9,"AF",1)
D CPRESLS^PXRMLOGX(DA,X),BLDINFL^PXRMLOGX(DA)
"IX",811.9,811.9,"AF",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.9,"AF",2)
D BLDRESLS^PXRMLOGX(DA),BLDINFL^PXRMLOGX(DA)
"IX",811.9,811.9,"AF",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.9,"AF",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"AF",11.1,1,0)
1^F^811.9^34^^^F
"IX",811.9,811.9,"B",0)
811.9^B^B cross-reference^R^^F^IR^I^811.9^^^^^LS
"IX",811.9,811.9,"B",.1,0)
^^1^1^3000222^
"IX",811.9,811.9,"B",.1,1,0)
This is the "B" cross-reference redone as a new style cross-reference.
"IX",811.9,811.9,"B",1)
S ^PXD(811.9,"B",$E(X,1,35),DA)=""
"IX",811.9,811.9,"B",2)
K ^PXD(811.9,"B",$E(X,1,35),DA)
"IX",811.9,811.9,"B",2.5)
K ^PXD(811.9,"B")
"IX",811.9,811.9,"B",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"B",11.1,1,0)
1^F^811.9^.01^35^1^F
"IX",811.9,811.9,"B",11.1,1,3)

"IX",811.9,811.9,"D",0)
811.9^D^Look up by Print Name^R^^F^IR^I^811.9^^^^^LS
"IX",811.9,811.9,"D",.1,0)
^^1^1^3000216^
"IX",811.9,811.9,"D",.1,1,0)
This cross-reference is used for look-up by the reminder's Print Name.
"IX",811.9,811.9,"D",1)
S ^PXD(811.9,"D",$E(X,1,35),DA)=""
"IX",811.9,811.9,"D",2)
K ^PXD(811.9,"D",$E(X,1,35),DA)
"IX",811.9,811.9,"D",2.5)
K ^PXD(811.9,"D")
"IX",811.9,811.9,"D",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"D",11.1,1,0)
1^F^811.9^1.2^35^1^F
"IX",811.9,811.902,"AE",0)
811.902^AE^Build all logic strings^MU^^R^IR^I^811.902^^^^^A
"IX",811.9,811.902,"AE",1)
D BLDALL^PXRMLOGX(DA(1),"")
"IX",811.9,811.902,"AE",2)
D BLDALL^PXRMLOGX(DA(1),DA)
"IX",811.9,811.902,"AE",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AE",11.1,0)
^.114IA^1^1
"IX",811.9,811.902,"AE",11.1,1,0)
1^F^811.902^.01^^1^F
"IX",811.9,811.902,"AE",11.1,1,3)

"IX",811.9,811.902,"AF",0)
811.902^AF^Check for rebuild of age findings list^MU^^R^I^I^811.902^^^^^A
"IX",811.9,811.902,"AF",.1,0)
^^2^2^2990924^
"IX",811.9,811.902,"AF",.1,1,0)
When MINIMUM AGE, MAXIMUM AGE, or REMINDER FREQUENCY are changed then
"IX",811.9,811.902,"AF",.1,2,0)
rebuild the age findings list.
"IX",811.9,811.902,"AF",1)
D BLDAFL^PXRMLOGX(DA(1),"")
"IX",811.9,811.902,"AF",1.4)
S X=1 I $$DELNXR^PXRMLOGX(.X2) S X=0
"IX",811.9,811.902,"AF",2)
D BLDAFL^PXRMLOGX(DA(1),DA)
"IX",811.9,811.902,"AF",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AF",11.1,0)
^.114IA^4^3
"IX",811.9,811.902,"AF",11.1,2,0)
1^F^811.902^1^^^F
"IX",811.9,811.902,"AF",11.1,3,0)
2^F^811.902^2^^^F
"IX",811.9,811.902,"AF",11.1,4,0)
3^F^811.902^3^^^F
"IX",811.9,811.902,"AG",0)
811.902^AG^Check for rebuild of resolution findings list^MU^^R^I^I^811.902^^^^^A
"IX",811.9,811.902,"AG",.1,0)
^^2^2^2990924^
"IX",811.9,811.902,"AG",.1,1,0)
When USE IN RESOLUTION LOGIC is changed then rebuild the resolution
"IX",811.9,811.902,"AG",.1,2,0)
findings list.
"IX",811.9,811.902,"AG",1)
D BLDRESLS^PXRMLOGX(DA(1),"")
"IX",811.9,811.902,"AG",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.902,"AG",2)
D BLDRESLS^PXRMLOGX(DA(1),DA)
"IX",811.9,811.902,"AG",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AG",11.1,0)
^.114IA^3^1
"IX",811.9,811.902,"AG",11.1,3,0)
1^F^811.902^7^^^F
"IX",811.9,811.902,"AH",0)
811.902^AH^Check for rebuild of patient cohort findings list^MU^^R^I^I^811.902^^^^^A
"IX",811.9,811.902,"AH",.1,0)
^^2^2^2990924^
"IX",811.9,811.902,"AH",.1,1,0)
Whenever USE IN PATIENT COHORT LOGIC is changed rebuild the patient cohort
"IX",811.9,811.902,"AH",.1,2,0)
logic list.
"IX",811.9,811.902,"AH",1)
D BLDPCLS^PXRMLOGX(DA(1),"")
"IX",811.9,811.902,"AH",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.902,"AH",2)
D BLDPCLS^PXRMLOGX(DA(1),DA)
"IX",811.9,811.902,"AH",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AH",11.1,0)
^.114IA^2^1
"IX",811.9,811.902,"AH",11.1,2,0)
1^F^811.902^8^^^F
"IX",811.9,811.902,"AI",0)
811.902^AI^Check for rebuild of information findings list^MU^^R^I^I^811.902^^^^^A
"IX",811.9,811.902,"AI",.1,0)
^^3^3^2990924^
"IX",811.9,811.902,"AI",.1,1,0)
Whenever any of the following changes rebuild the information findings list:
"IX",811.9,811.902,"AI",.1,2,0)
MINIMUM AGE, MAXIMUM AGE, REMINDER FREQUENCY, USE IN RESOLUTION LOGIC,
"IX",811.9,811.902,"AI",.1,3,0)
USE IN PATIENT COHORT LOGIC
"IX",811.9,811.902,"AI",1)
D BLDINFL^PXRMLOGX(DA(1),"")
"IX",811.9,811.902,"AI",1.4)
S X=1 I $$DELNXR^PXRMLOGX(.X2) S X=0
"IX",811.9,811.902,"AI",2)
D BLDINFL^PXRMLOGX(DA(1),DA)
"IX",811.9,811.902,"AI",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AI",11.1,0)
^.114IA^7^6
"IX",811.9,811.902,"AI",11.1,2,0)
1^F^811.902^1^^^F
"IX",811.9,811.902,"AI",11.1,3,0)
2^F^811.902^1^^^F
"IX",811.9,811.902,"AI",11.1,4,0)
3^F^811.902^2^^^F
"IX",811.9,811.902,"AI",11.1,5,0)
4^F^811.902^3^^^F
"IX",811.9,811.902,"AI",11.1,6,0)
5^F^811.902^7^^^F
"IX",811.9,811.902,"AI",11.1,7,0)
6^F^811.902^8^^^F
"KEY",801.41,801.41,"A",0)
801.41^A^P^30
"KEY",801.41,801.41,"A",2,0)
^.312IA^1^1
"KEY",801.41,801.41,"A",2,1,0)
.01^801.41^1
"KEY",811.2,811.2,"A",0)
811.2^A^P^39
"KEY",811.2,811.2,"A",2,0)
^.312IA^1^1
"KEY",811.2,811.2,"A",2,1,0)
.01^811.2^1
"KEY",811.4,811.4,"A",0)
811.4^A^P^41
"KEY",811.4,811.4,"A",2,0)
^.312IA^1^1
"KEY",811.4,811.4,"A",2,1,0)
.01^811.4^1
"KEY",811.5,811.5,"A",0)
811.5^A^P^44
"KEY",811.5,811.5,"A",2,0)
^.312IA^1^1
"KEY",811.5,811.5,"A",2,1,0)
.01^811.5^1
"KEY",811.6,811.6,"A",0)
811.6^A^P^20
"KEY",811.6,811.6,"A",2,0)
^.312IA^1^1
"KEY",811.6,811.6,"A",2,1,0)
.01^811.6^1
"KEY",811.7,811.7,"A",0)
811.7^A^P^42
"KEY",811.7,811.7,"A",2,0)
^.312IA^1^1
"KEY",811.7,811.7,"A",2,1,0)
.01^811.7^1
"KEY",811.9,811.9,"B",0)
811.9^B^P^19
"KEY",811.9,811.9,"B",2,0)
^.312IA^1^1
"KEY",811.9,811.9,"B",2,1,0)
.01^811.9^1
"KEYPTR",801.41,801.41,"A")
801.41^B
"KEYPTR",811.2,811.2,"A")
811.2^B
"KEYPTR",811.4,811.4,"A")
811.4^B
"KEYPTR",811.5,811.5,"A")
811.5^B
"KEYPTR",811.6,811.6,"A")
811.6^B
"KEYPTR",811.7,811.7,"A")
811.7^B
"KEYPTR",811.9,811.9,"B")
811.9^B
"KRN",.4,699,-1)
0^30
"KRN",.4,699,0)
PX HS/RPT PARAMETERS PRINT^3000509.1442^^815^^^3000509
"KRN",.4,699,"F",1)
"PARAMETERS related to HEALTH SUMMARY";C1~"-------------------------------------";C1~
"KRN",.4,699,"F",2)
"The Health Summary reminder disclaimer is now managed using the PXRM";C1~
"KRN",.4,699,"F",3)
"PARAMETER EDIT option. View the reminder disclaimer by printing a Health";C1~"Summary with one of the following reminder components:";C1~
"KRN",.4,699,"F",4)
"   Reminders Due component";C1~"   Clinical Mainenance component";C1~"   Clinical Summary component";C1~"PARAMETERS related to PCE REPORTS";C1;S2~
"KRN",.4,699,"F",5)
"----------------------------------";C1~"Report ER Clinic Names:";C1;S1~801,.01;X;C5;S1~"Report Glucose Names:";C1;S1~802,.01;X;C5;S1~
"KRN",.4,699,"F",6)
"Report Cholesterol Names:";C1;S1~803,.01;X;C5;S1~"Report LDL Cholesterol Names:";C1;S1~804,.01;X;C5;S1~"Report HBA1C Names:";C1;S1~805,.01;X;C5;S1~
"KRN",.4,699,"H")
PCE HS/RPT PARAMETERS PRINT
"KRN",.4,700,-1)
0^15
"KRN",.4,700,0)
PXRM SUMMARY LIST^2960419.1351^^811.9^^^2990630
"KRN",.4,700,"F",2)
.01;C1;S1~1;X;C50;L25~2,.01;X;C5~
"KRN",.4,700,"H")
PCE REMINDER/MAINTENANCE ITEM LIST
"KRN",.4,948,-1)
0^19
"KRN",.4,948,0)
PXRM DEFINITION INQUIRY^3000509.1656^@^811.9^^@^3000616
"KRN",.4,948,"%D",0)
^^2^2^3000505^
"KRN",.4,948,"%D",1,0)
This template will print the contents of the reminder definition that will
"KRN",.4,948,"%D",2,0)
be used to evaluate the reminder with Clinical Reminders 1.5.  
"KRN",.4,948,"F",1)
.01;C1;X~"No.";C36~0;C41;X~1.6;C55;X~"--------------------------------------------";C1~"Print Name:";C1;S1~1.2;C31;X~"Related VA-* Reminder:";C1;S1~
"KRN",.4,948,"F",2)
1.4;C31;X~"Reminder Dialog:";C1;S1~51;C31;X~"Priority:";C1;S1~1.91;C31;X;L~"Reminder Description:";C1;S1~2,.01;C5;X;S1~"Technical Description:";C1;S1~
"KRN",.4,948,"F",3)
3,.01;C5;X;S1~"Baseline Frequency:";C1;S2~"Do In Advance Time Frame:";R31;S1~D DUEWI^PXRMPT;X;Z;"D DUEWI^PXRMPT"~"Sex Specific:";C1;R31~1.9~
"KRN",.4,948,"F",4)
"Ignore on N/A:";C1;R31~1.8~"Frequency for Age Range:";C1;R31~7,D AFREQ^PXRMPT;X;Z;"D AFREQ^PXRMPT"~7,"Match Text:";C1;R31~7,3,.01~
"KRN",.4,948,"F",5)
7,"No Match Text:";C1;R31~7,4,.01;~"Findings:";C1;S2~20,"Finding Item:";S1;R31~20,.01~20,D GENIEN^PXRMPT;X;Z;"D GENIEN^PXRMPT"~
"KRN",.4,948,"F",6)
20,"Finding Type:";C1;R31~20,D FTYPE^PXRMPT;X;C34;Z;"D FTYPE^PXRMPT"~20,"Match Frequency/Age:";C1;R31~20,D GENFREQ^PXRMPT;X;Z;"D GENFREQ^PXRMPT"~
"KRN",.4,948,"F",7)
20,"Found Text:";C1;R31~20,4,.01~20,"Not Found Text:";C1;R31~20,5,.01~20,"Rank Frequency:";C1;R31~20,6;L~20,"Use in Resolution Logic:";C1;R31~20,7~
"KRN",.4,948,"F",8)
20,"Use in Patient Cohort Logic:";C1;R31~20,8~20,"Effective Period:";C1;R31~20,9~20,"Use Inactive Problems:";C1;R31~20,10~
"KRN",.4,948,"F",9)
20,"Within Category Rank:";C1;R31~20,11;L~20,"Condition:";C1;R31~20,12~20,"MH Scale:";C1;R31~20,13~"General Patient Cohort Found Text:";C1;S1~
"KRN",.4,948,"F",10)
60,.01;C5~"General Patient Cohort Not Found Text:";C1;S1~61,.01;C5~"General Resolution Found Text:";C1;S1~65,.01;C5~
"KRN",.4,948,"F",11)
"General Resolution Not Found Text:";C1;S1~66,.01;C5~D DISLOG^PXRMPTL;S1;X;Z;"D DISLOG^PXRMPTL"~"Web Sites:";C1;S2~50,"Web Site URL:";S1;C2~50,.01~
"KRN",.4,948,"F",12)
50,"Web Site Title:";S1;C2~50,.02~50,"";S1~50,1,.01~
"KRN",.4,948,"H")
CLINICAL REMINDER DEFINITION LIST
"KRN",.4,949,-1)
0^8
"KRN",.4,949,0)
PXRM REMINDER CATEGORIES^3000505.1644^@^811.7^^@^3000505
"KRN",.4,949,"F",1)
"Category :";C1;S1~.01;C12;X~"Category Description:";C1;S1~"";C1~1,.01;C5;X;S1~"Reminders:";C1;S1~D REM^PXRMCLST;X;Z;"D REM^PXRMCLST"~"";C1;S1~
"KRN",.4,949,"F",2)
10,D DSP^PXRMCLST;X;Z;"D DSP^PXRMCLST"~10,"";C1;S1~"";C1;S1~
"KRN",.4,949,"H")
REMINDER CATEGORY LIST
"KRN",.4,950,-1)
0^9
"KRN",.4,950,0)
PXRM REMINDER DIALOG^3000505.1703^@^801.41^^@^3000517
"KRN",.4,950,"%D",0)
^^1^1^2991020^
"KRN",.4,950,"%D",1,0)
Dialog template used by both PXRM DIALOG EDIT and PXRM DIALOG INQUIRE/EDIT
"KRN",.4,950,"F",1)
"";C1;~"DIALOG NAME: ";C3;S1~.01;C19;X~3;C55;L20;X~"Type: ";C10~4;C19;X;L21~"Associated reminder: ";C10;S1~2;C32;X;L25~"Autogenerated: ";C16~
"KRN",.4,950,"F",2)
99.1;C32;X;L25~"Latest Change: ";C16~99;C32;X;L25~"DIALOG COMPONENTS:";C1;R24;S1~10,"Sequence:";C1;R24;S1~10,.01;L2~10,"Element/Group:";C1;R24~
"KRN",.4,950,"F",3)
10,2;L35~10,"Text:";C20~10,D PROMPT^PXRMDLST;X;Z;"D PROMPT^PXRMDLST"~"";C1;S2~
"KRN",.4,950,"H")
REMINDER DIALOG LIST
"KRN",.4,951,-1)
0^12
"KRN",.4,951,0)
PXRM RESOLUTIONS (GENERAL)^3000505.1656^@^801.9^^@^3000505
"KRN",.4,951,"F",1)
"Resolution Status:";C1;S1~.01;C21;X~"Resolution Type:";C3;S1~D TYP^PXRMSLST;X;Z;"D TYP^PXRMSLST"~"Resolution Status Description:";C1;S1~1,.01;C5;X;S1~
"KRN",.4,951,"F",2)
"Related National Status:";C4;S2~D NAT^PXRMSLST;X;Z;"D NAT^PXRMSLST"~"Abbreviated Name:";C11~.02;C30;X;~"Report Column Headings:";C5;~.03;C30;X;~
"KRN",.4,951,"F",3)
"Inactive Flag:";C14;~.04;C30;X;~"Creator:";C20;~.05;C30;X;~"";C1;S2~"Local Resolution Statuses:";C1;S2~10,.01;C5;X;~"";C1;S2~
"KRN",.4,951,"H")
REMINDER RESOLUTION STATUS LIST
"KRN",.4,952,-1)
0^14
"KRN",.4,952,0)
PXRM RESOLUTIONS (NATIONAL)^2991014.0946^@^801.9^^@^3000511
"KRN",.4,952,"F",1)
"National Resolution Status:";C1;S1~.01;C30;X~"Resolution Status Description:";C1;S1~1,.01;C5;X;S1~"Abbreviated Name:";C11;S2~.02;C30;X;~
"KRN",.4,952,"F",2)
"Report Column Headings:";C5;~.03;C30;X;~"Inactive Flag:";C14;~.04;C30;X;~"Local Resolution Statuses:";C1;S2~10,.01;C5;X;~"";C1;S2~
"KRN",.4,952,"H")
REMINDER RESOLUTION STATUS LIST
"KRN",.4,953,-1)
0^13
"KRN",.4,953,0)
PXRM RESOLUTIONS (LOCAL)^3000505.1656^@^801.9^^@^3000511
"KRN",.4,953,"F",1)
"Resolution Status:";C1;S1~.01;C21;X~"Resolution Status Description:";C1;S1~1,.01;C5;X;S1~"Related National Status:";C4;S2~
"KRN",.4,953,"F",2)
D NAT^PXRMSLST;X;Z;"D NAT^PXRMSLST"~"Abbreviated Name:";C11~.02;C30;X;~"Report Column Headings:";C5;~.03;C30;X;~"Inactive Flag:";C14;~.04;C30;X;~
"KRN",.4,953,"F",3)
"Creator:";C20;~.05;C30;X;~"";C1;S2~
"KRN",.4,953,"H")
REMINDER RESOLUTION STATUS LIST
"KRN",.4,954,-1)
0^5
"KRN",.4,954,0)
PXRM FINDING TYPE PARAMETERS^3000307.1605^@^801.45^^@^3000615
"KRN",.4,954,"F",1)
"";C1;S1~"FINDING ID AND TYPE:";C1~.01;L5~D FDES^PXRMFLST;L30;Z;"D FDES^PXRMFLST"~"-------------------";C1~"Related GUI Process: ";C1;S1~.02;X;L35~
"KRN",.4,954,"F",2)
1,"Resolution Status: ";C1;S1~1,.01;C21;X;L35~1,"Prefix text: ";C7;S1~1,3;C21;X;L35~1,"Suffix text: ";C7~1,4;C21;X;L35~1,"Disabled: ";C10~
"KRN",.4,954,"F",3)
1,1;C21;X;L35~1,"API for Sentence: ";C2~1,5,"Prompt: ";C22;S1~1,5,.01;C31;X;L35~1,5,"Sequence: ";C20~1,5,3;C31;X;L35~1,5,"Mandatory Prompt: ";C12~
"KRN",.4,954,"F",4)
1,5,1;C31;X;L35~1,5,"Prompt Disabled: ";C13~1,5,2;C31;X;L35~1,5,"Override Caption: ";C12~1,5,4;X;C31~1,5,"Start New Line: ";C14~1,5,5;X;C31~
"KRN",.4,954,"F",5)
1,5,"Exclude from PN: ";C13~1,5,6;X;C31~1,"";C1;S2~
"KRN",.4,954,"H")
REMINDER FINDING TYPE PARAMETER LIST
"KRN",.4,955,-1)
0^1
"KRN",.4,955,0)
PXRM DIALOG ELEMENT^3000508.1551^@^801.41^^@^3000609
"KRN",.4,955,"F",1)
"";C1~"Name:";C1;R22;S1~.01;L35~3;C65;L10;X~"Type:";C1;R22~4;L21~"Autogenerated:";C1;R22~99.1;L25~"Latest Change:";C1;R22~99;L25~"Used by:";C1;R22~
"KRN",.4,955,"F",2)
D USE^PXRMDLST(D0,24,"");X;Z;"D USE^PXRMDLST(D0,24,"")"~"Dialog Text:";C1;R22;S1~25,.01~"Alternate P/N Text:";C1;R22~35,.01~"Exclude from P/N:";C1;R22~
"KRN",.4,955,"F",3)
23~"Resolution type:";C1;R22~13~"Finding Item:";C1;R22~15~"Vital Prompt Caption:";C1;R22~24~"Orderable item:";C1;R22~
"KRN",.4,955,"F",4)
D ORDER^PXRMDLST;X;Z;"D ORDER^PXRMDLST"~"Suppress Checkbox:";C1;R22~51~"Exclude Mental Health ";C1;R22~"Test Text from P/N:";C1;R22~54~
"KRN",.4,955,"F",5)
"ADDITIONAL FINDINGS:";C1;R22~18,"Finding item:";C1;R22~18,.01;L35~"Result Element/Group:";C1;R22~55;L40~"ELEMENT COMPONENTS:";C1;R24;S1~
"KRN",.4,955,"F",6)
10,"Sequence:";C1;R24;S1~10,.01;L2~10,"Additional prompt:";C1;R24~10,2;L35~10,"Prompt caption:";C10~10,D PROMPT^PXRMDLST;X;C27;Z;"D PROMPT^PXRMDLST"~
"KRN",.4,955,"F",7)
10,"Override caption: ";C8~10,6;X;C27~10,"Start new line: ";C10~10,7;X;C27~10,"Exclude from P/N: ";C8~10,8;X;C27~10,"Required: ";C16~10,9;X;C27~
"KRN",.4,955,"F",8)
"";C1;S1~
"KRN",.4,955,"H")
REMINDER DIALOG LIST
"KRN",.4,956,-1)
0^2
"KRN",.4,956,0)
PXRM DIALOG GROUP^3000503.1024^@^801.41^^@^3000505
"KRN",.4,956,"F",1)
"";C1;~"Name:";C1;R31~.01;L35~3;C55;L10;X~"Resolution type:";C1;R31;S1~13~"Finding item:";C1;R31~15~"Vital Prompt Caption:";C1;R31~24~
"KRN",.4,956,"F",2)
"Group Caption:";C1;R31~5~"Box around the Components:";C1;R31~6~"Share common prompts:";C1;R31~8~"Multiple Selection:";C1;R31~9~
"KRN",.4,956,"F",3)
"Hide/Show Group:";C1;R31~50~"No. of Indents:";C1;R31~7;L2~"Indent Progress Note Text:";C1;R31~52~"Dialog text:";C1;R31~25,.01~
"KRN",.4,956,"F",4)
"Alternate P/N text:";C1;R31~35,.01~"Exclude from PN:";C1;R31~23~"Suppress Checkbox:";C1;R31~51~"ADDITIONAL FINDINGS:";C1;R31~
"KRN",.4,956,"F",5)
18,"Finding item:";C1;R31~18,.01;L35~"GROUP COMPONENTS:";C1;R31;S1~10,"Sequence:";C1;R31;S1~10,.01;L2~10,"Dialog Element:";C1;R31~10,2;C34;L35~
"KRN",.4,956,"H")
REMINDER DIALOG LIST
"KRN",.4,957,-1)
0^3
"KRN",.4,957,0)
PXRM DIALOG PROMPT^2991126.1438^@^801.41^^@^3000510
"KRN",.4,957,"F",1)
"";C1~"Name:";C1;R29;S1~.01;L35~"Disabled:";C1;R29~3;L35~"Prompt Caption:";C1;R29~24~"Exclude from P/N:";C1;R29~23~"Default value:";C1;R29~21;L35~
"KRN",.4,957,"F",2)
"Used only for finding type:";C1;R29~14~
"KRN",.4,957,"H")
REMINDER DIALOG LIST
"KRN",.4,958,-1)
0^4
"KRN",.4,958,0)
PXRM FINDING ITEM PARAMETERS^3000307.1701^@^801.43^^@^3000428
"KRN",.4,958,"F",1)
"";C1~"NAME: ";C1;R18~.01;L35~"Finding Item: ";C1;R18~.02;L35~"Disabled: ";C1;R18~.03;L35~"Dialog Element: ";C1;R18~.04;L45~"";C1;S1~
"KRN",.4,958,"H")
REMINDER FINDING ITEM PARAMETER LIST
"KRN",.4,959,-1)
0^6
"KRN",.4,959,0)
PXRM HEALTH FACTOR RESOLUTIONS^3000307.1703^@^801.95^^@^3000505
"KRN",.4,959,"F",1)
"";C1~"HEALTH FACTOR NAME: ";R20;C1~.01~"Resolution Status: ";R20;C1~.02,.01~"";C1;S1~
"KRN",.4,959,"H")
REMINDER HEALTH FACTOR RESOLUTION LIST
"KRN",.4,960,-1)
0^16
"KRN",.4,960,0)
PXRM TAXONOMY DIALOG^3000503.1727^@^811.2^^@^3000503
"KRN",.4,960,"F",1)
"";C1~"TAXONOMY NAME:";C1;S1~.01;C20~"Taxonomy Dialog Header Text:";C1;S1~.03;C30;X~"----  Diagnosis (DX)  ----";C1;S1~"Current Visit Header Text:";C4~
"KRN",.4,960,"F",2)
3107;C32;X~"Historical Visit Header Text:";C1~3108;C32;X~"Selectable Diagnoses";C1;S1~
"KRN",.4,960,"F",3)
3102,D TDES^PXRMTDLG(80,D0,D1);X;C1;Z;"D TDES^PXRMTDLG(80,D0,D1)"~3102,2;C60;X~"----  Procedure (PR)  ----";C1;S1~"Current Visit Header Text:";C4~
"KRN",.4,960,"F",4)
3111;C32;X~"Historical Visit Header Text:";C1~3112;C32;X~"Selectable Procedures";C1;S1~
"KRN",.4,960,"F",5)
3104,D TDES^PXRMTDLG(81,D0,D1);X;C1;Z;"D TDES^PXRMTDLG(81,D0,D1)"~3104,2;C60;X~"Dialog Generate Parameter (DX):";C1;S1~3106;C40;X~
"KRN",.4,960,"F",6)
"Dialog Generate Parameter (PR):";C1;~3110;C40;X~"";C1;S2~
"KRN",.4,960,"H")
REMINDER TAXONOMY LIST
"KRN",.4,961,-1)
0^17
"KRN",.4,961,0)
PXRM TERM INQUIRY^3000508.1102^@^811.5^^@^3000609
"KRN",.4,961,"%D",0)
^^1^1^3000505^
"KRN",.4,961,"%D",1,0)
This template prints a single reminder term definition.
"KRN",.4,961,"F",1)
K PXRMFVPL;X;Z;"K PXRMFVPL"~.01;C1;X~"No.";C64~0;C67;X;L11~"----------------------------------------------------------------------------";C1~
"KRN",.4,961,"F",2)
"Term Type: ";C1~.02;C26;X~"Sponsor: ";C1~.03;C26;X~"Date Created: ";C1~.04;C26;X~"Last Modified: ";C1~.05;C26;X~"Description: ";C1;S1~1,.01;C5;X~
"KRN",.4,961,"F",3)
"Findings: ";C1;S1~20,"Finding Item: ";C1;R26~20,.01;X~20,D TRMIEN^PXRMPT;X;Z;"D TRMIEN^PXRMPT"~20,"Finding Type: ";C1;R26~
"KRN",.4,961,"F",4)
20,D TFTYPE^PXRMPT;X;Z;"D TFTYPE^PXRMPT"~20,"Effective Period: ";C1;R26~20,9;X~20,"Use Inactive Problems: ";C1;R26~20,10;X~
"KRN",.4,961,"F",5)
20,"Within Category Rank: ";C1;R26~20,11;X~20,"Condition: ";C1;R26~20,12;X~20,"MH Scale: ";C1;R26~20,13;X~20," ";C1;S1~" ";C1;S1~
"KRN",.4,961,"H")
REMINDER TERM LIST
"KRN",.4,962,-1)
0^18
"KRN",.4,962,0)
PXRM TAXONOMY INQUIRY^3000404.0915^@^811.2^^@^3000614
"KRN",.4,962,"F",1)
.01;C1;S1;X~1.6;C55;;X~"-----------------------------------";C1~"Brief Description:";C1;S1~.02;C5;X~"Patient Data Source:";C1;S1~4;C5;X~
"KRN",.4,962,"F",2)
"Use Inactive Problems:";C1;S1~10;C5;X~"ICD9 Codes:";C1;S1~2102,"Range ";C5;S1~2102,.01;C12;X~2102,"-"~2102,1;X~
"KRN",.4,962,"F",3)
2102,D ICD9LIST^PXRMPT;Z;"D ICD9LIST^PXRMPT"~"ICD0 Codes:";C1;S2~2103,"Range ";C5;S1~2103,.01;C12;X~2103,"-"~2103,1;X~
"KRN",.4,962,"F",4)
2103,D ICD0LIST^PXRMPT;Z;"D ICD0LIST^PXRMPT"~"CPT Codes:";C1;S2~2104,"Range ";C5;S1~2104,.01;C12;X~2104,"-"~2104,1;X~
"KRN",.4,962,"F",5)
2104,D ICPTLIST^PXRMPT;Z;"D ICPTLIST^PXRMPT"~
"KRN",.4,962,"H")
REMINDER TAXONOMY LIST
"KRN",.4,964,-1)
0^20
"KRN",.4,964,0)
PXRM DIALOG FORCED VALUE^2991126.1437^@^801.41^^@^3000505
"KRN",.4,964,"F",1)
"";C1~"Name:";C1;R29;S1~.01;L35~"Disabled:";C1;R29~3;L35~"Forced value:";C1;R29~22;L35~"Used only for finding type:";C1;R29~14~
"KRN",.4,964,"H")
REMINDER DIALOG LIST
"KRN",.4,968,-1)
0^22
"KRN",.4,968,0)
PXRM TAXONOMY LIST HEADER^2991220.1238^@^811.2^^@^3000411
"KRN",.4,968,"F",1)
"REMINDER TAXONOMY LIST";C1~" ";S1~"ICD9 RANGE";C12;X~"ICD0 RANGE";C32;X~"CPT RANGE";C53;X~"NAME";C1;X~"LOW";C10;X~"HIGH";C20;X~"LOW";C30;X~
"KRN",.4,968,"F",2)
"HIGH";C40;X~"LOW";C50;X~"HIGH";C60;X~"--------------------------------------------------------------------------";C1~
"KRN",.4,968,"H")
@
"KRN",.4,968,"SUB")
1
"KRN",.4,969,-1)
0^21
"KRN",.4,969,0)
PXRM TAXONOMY LIST^3000322.1426^@^811.2^^@^3000411
"KRN",.4,969,"F",1)
.01;C1;S1~D TAXLIST^PXRMPT;Z;"D TAXLIST^PXRMPT"~
"KRN",.4,969,"H")
[PXRM TAXONOMY LIST HEADER]
"KRN",.4,969,"SUB")
1
"KRN",.4,973,-1)
0^25
"KRN",.4,973,0)
PXRM COMPUTED FINDING LIST^3000128.1354^@^811.4^^@^3000519
"KRN",.4,973,"F",1)
.01;C1~.04;C31;L30~.03;C62~.02;C71~
"KRN",.4,973,"H")
[PXRM CF LIST HEADER]
"KRN",.4,973,"SUB")
1
"KRN",.4,974,-1)
0^24
"KRN",.4,974,0)
PXRM CF LIST HEADER^3000128.1407^@^811.4^^@^3000519
"KRN",.4,974,"F",1)
"REMINDER COMPUTED FINDING LIST";C1~" ";S1~"ENTRY";C62;S1~"NAME";C1~"PRINT NAME";C31~"POINT";C62~"ROUTINE";C71~
"KRN",.4,974,"F",2)
"---------------------------------------------------------------------------";C1~
"KRN",.4,974,"H")
REMINDER COMPUTED FINDINGS LIST
"KRN",.4,974,"SUB")
1
"KRN",.4,976,-1)
0^26
"KRN",.4,976,0)
PXRM DEFINITION LIST^3000229.0934^@^811.9^^@^3000601
"KRN",.4,976,"%D",0)
^^1^1^3000229^^
"KRN",.4,976,"%D",1,0)
Print template for reminder definition list.
"KRN",.4,976,"F",1)
"-----------------------------------";C1;S1~"Name:";C1~.01;C14;X~1.6;C55;X~"Print Name:";C1~1.2;C14;X~"Priority:";C1;S1~1.91;C14;X;L~
"KRN",.4,976,"F",2)
"Reminder Description:";C1;S1~2,.01;C5;X;S1~"Findings:";C1;S1~20,"Finding Item:";C3~20,.01;""~20,D GENIEN^PXRMPT;X;Z;"D GENIEN^PXRMPT"~
"KRN",.4,976,"F",3)
D DISLOG^PXRMPTL;"";S1;Z;"D DISLOG^PXRMPTL"~
"KRN",.4,976,"H")
REMINDER DEFINITION LIST
"KRN",.4,976,"SUB")
1
"KRN",.4,977,-1)
0^28
"KRN",.4,977,0)
PXRM RESULT ELEMENT^3000229.1602^@^801.41^^@^3000609
"KRN",.4,977,"F",1)
"";C1~"Name:";C1;R20;S1~.01;L35~"Type:";C1;R20~4;L21~"Result Condition:";C1;R20~53;L40~"P/N Text:";C1;R20~35,.01~"";C1;S1~
"KRN",.4,977,"H")
REMINDER DIALOG LIST
"KRN",.4,978,-1)
0^29
"KRN",.4,978,0)
PXRM RESULT GROUP^3000225.1024^@^801.41^^@^3000609
"KRN",.4,978,"F",1)
"";C1;~"Name:";C1;R31~.01;L35~"Type:";C1;R31~4;L35~"Exclude from PN:";C1;R31~23~"GROUP COMPONENTS:";C1;R18;S1~10,"Sequence:";C1;R18;S1~10,.01;L2~
"KRN",.4,978,"F",2)
10,"Result Element:";C1;R18~10,D OUT^PXRMDLR(X);Z;"D OUT^PXRMDLR(X)"~"";C1;S1~
"KRN",.4,978,"H")
REMINDER DIALOG LIST
"KRN",.4,979,-1)
0^27
"KRN",.4,979,0)
PXRM TERM LIST^3000508.1513^@^811.5^^@^3000515
"KRN",.4,979,"%D",0)
^^1^1^3000505^
"KRN",.4,979,"%D",1,0)
This print template is used to list reminder terms.
"KRN",.4,979,"F",1)
.01;C1;X~"Term Type:";C5~.02;C19;X;L10~"Date Added:";C5~.04;C19;X~"Sponsored by:";C5~.03;X;C19;L59~"Description:";C5~1,.01;C19;X~"Findings:";C5~
"KRN",.4,979,"F",2)
20,.01;C19;L59;X~" ";C5~
"KRN",.4,979,"H")
REMINDER TERM LIST
"KRN",.4,984,-1)
1^23
"KRN",.4,984,0)
PX LIST PCE TAXONOMY    FILE #811.2
"KRN",.401,312,-1)
0^1
"KRN",.401,312,0)
PXRM REMINDERS LIST^2960430.1318^^811.9^^^2991108
"KRN",.401,312,2,0)
^.4014^1^1
"KRN",.401,312,2,1,0)
811.9^.01^NAME^#^^^^^^4
"KRN",.401,312,2,1,"F")
@z^A
"KRN",.401,312,2,1,"GET")
S DISX(1)=$P($G(^PXD(811.9,D0,0)),U,1)
"KRN",.401,312,2,1,"IX")
^PXD(811.9,"B",^PXD(811.9,^2
"KRN",.401,312,2,1,"QCON")
I (DISX(1)]]"@z")&(DISX(1)']]"zzzzzzzz")
"KRN",.401,312,2,1,"T")
zzzzzzzz^zzzzzzzz
"KRN",.401,312,2,1,"TXT")
NAME from A to zzzzzzzz
"KRN",.401,312,2,"B",811.9,1)

"KRN",.401,312,"%D",0)
^^2^2^2960729^^^
"KRN",.401,312,"%D",1,0)
This sorts the reminders by their Name and page breaks when the name
"KRN",.401,312,"%D",2,0)
changes.
"KRN",.401,462,-1)
0^2
"KRN",.401,462,0)
PXRM NATIONAL TERMS^3000508.1254^@^811.5^^@^3000508
"KRN",.401,462,"%D",0)
^^2^2^3000508^
"KRN",.401,462,"%D",1,0)
This search template contains the names of the reminder terms distributed
"KRN",.401,462,"%D",2,0)
with the Clinical Reminders 1.5 package.
"KRN",.401,462,"DC",1)
.02^="N"
"KRN",.401,462,"DIS",0)
I $P($G(^PXRMD(811.5,D0,0)),U,2)="N"
"KRN",.401,462,"DL")
1
"KRN",.401,462,"DL",0)
^1^
"KRN",.401,462,"O",0)
^
"KRN",.401,462,"O",1,0)
TERM TYPE EQUALS "N"^National
"KRN",.401,462,"QR")
3000508.125511^7
"KRN",.401,463,-1)
0^3
"KRN",.401,463,0)
PXRM NATIONAL TERM SPONSORS^3000508.1325^@^811.6^^@^3000508
"KRN",.401,463,"%D",0)
^.4012^2^2^3000508^
"KRN",.401,463,"%D",1,0)
This search template contains the term sponsors that are distributed
"KRN",.401,463,"%D",2,0)
nationally.
"KRN",.401,463,"DC",1)
.02^="N"
"KRN",.401,463,"DIS",0)
I $P($G(^PXRMD(811.6,D0,0)),U,2)="N"
"KRN",.401,463,"DL")
1
"KRN",.401,463,"DL",0)
^1^
"KRN",.401,463,"O",0)
^
"KRN",.401,463,"O",1,0)
SPONSOR TYPE EQUALS "N"^National
"KRN",.401,463,"QR")
3000508.132555^1
"KRN",.401,464,-1)
0^4
"KRN",.401,464,0)
PXRM HEP C HEALTH FACTORS^3000510.1307^@^9999999.64^^@^3000510
"KRN",.401,464,"%D",0)
^.4012^2^2^3000510^^
"KRN",.401,464,"%D",1,0)
This sort template contains the list of 5 health factors that represent
"KRN",.401,464,"%D",2,0)
Hepatitis C risk assessment.
"KRN",.401,464,"DA")
DIS("A1",
"KRN",.401,464,"DC",1)
.01^="NO RISK FACTORS FOR HEP C"
"KRN",.401,464,"DC",2)
.01^="RISK FACTOR FOR HEPATITIS C"
"KRN",.401,464,"DC",3)
.01^="PREV POS TEST FOR HEP C"
"KRN",.401,464,"DC",4)
.01^="DECLINED HEP C RISK ASSESSMENT"
"KRN",.401,464,"DC",5)
.01^="HEPATITIS C"
"KRN",.401,464,"DIS",1)
I $P($G(^AUTTHF(D0,0)),U,1)="NO RISK FACTORS FOR HEP C"
"KRN",.401,464,"DIS",2)
I $P($G(^AUTTHF(D0,0)),U,1)="RISK FACTOR FOR HEPATITIS C"
"KRN",.401,464,"DIS",3)
I $P($G(^AUTTHF(D0,0)),U,1)="PREV POS TEST FOR HEP C"
"KRN",.401,464,"DIS",4)
I $P($G(^AUTTHF(D0,0)),U,1)="DECLINED HEP C RISK ASSESSMENT"
"KRN",.401,464,"DIS",5)
I $P($G(^AUTTHF(D0,0)),U,1)="HEPATITIS C"
"KRN",.401,464,"DL")
5
"KRN",.401,464,"DL",0)

"KRN",.401,464,"DL",1)
^1^
"KRN",.401,464,"DL",2)
^2^
"KRN",.401,464,"DL",3)
^3^
"KRN",.401,464,"DL",4)
^4^
"KRN",.401,464,"DL",5)
^5^
"KRN",.401,464,"O",0)
^
"KRN",.401,464,"O",1,0)
FACTOR EQUALS "NO RISK FACTORS FOR HEP C"
"KRN",.401,464,"O",2,0)
 Or FACTOR EQUALS "RISK FACTOR FOR HEPATITIS C"
"KRN",.401,464,"O",3,0)
 Or FACTOR EQUALS "PREV POS TEST FOR HEP C"
"KRN",.401,464,"O",4,0)
 Or FACTOR EQUALS "DECLINED HEP C RISK ASSESSMENT"
"KRN",.401,464,"O",5,0)
 Or FACTOR EQUALS "HEPATITIS C"
"KRN",.401,464,"QR")
3000510.130829^5
"KRN",.402,1305,-1)
0^3
"KRN",.402,1305,0)
PXRM EDIT PROMPT^2991216.1034^@^801.41^^@^3000615
"KRN",.402,1305,"DR",1,801.41)
I $G(DINUSE)=1 S Y=3;.01Prompt NAME~;3DISABLE Prompt~;24;23;21;14RESTRICTED TO FINDING TYPE~;
"KRN",.402,1306,-1)
0^1
"KRN",.402,1306,0)
PXRM EDIT ELEMENT^3000503.1011^@^801.41^^@^3000615
"KRN",.402,1306,"DR",1,801.41)
I $G(DINUSE)=1 S Y=3;.01;3;13;15;S:X'["YTT(601" Y=25 S:X["GMRD(120.51" Y=24;54;S Y=25;24VITALS PROMPT CAPTION~;25;35;23;51;18;55;10;
"KRN",.402,1306,"DR",2,801.4118)
.01;
"KRN",.402,1306,"DR",2,801.412)
.01;2ADDITIONAL PROMPT/FORCED VALUE~;6;7;8;9;
"KRN",.402,1321,-1)
0^4
"KRN",.402,1321,0)
PXRM EDIT REMINDER DIALOG^2991216.1643^@^801.41^^@^3000615
"KRN",.402,1321,"DR",1,801.41)
.01;3;2;10;
"KRN",.402,1321,"DR",2,801.412)
.01;2DIALOG ELEMENT/GROUP~;
"KRN",.402,1322,-1)
0^2
"KRN",.402,1322,0)
PXRM EDIT GROUP^3000503.101^@^801.41^^@^3000616
"KRN",.402,1322,"DR",1,801.41)
I $G(DINUSE)=1 S Y=3;.01;3;13;15;I X'["GMRD(120.51" S Y=5;24VITALS PROMPT CAPTION~;5GROUP CAPTION~;6PUT A BOX AROUND THE GROUP~;8SHARE COMMON PROMPTS~;9MULTIPLE SELECTION~;50;25GROUP HEADER DIALOG TEXT~;
"KRN",.402,1322,"DR",1,801.41,1)
35GROUP HEADER ALTERNATE P/N TEXT~;23;51;7;52;18;10;
"KRN",.402,1322,"DR",2,801.4118)
.01;
"KRN",.402,1322,"DR",2,801.412)
.01;2DIALOG ELEMENT~;
"KRN",.402,1324,-1)
0^5
"KRN",.402,1324,0)
PXRM EDIT REMINDER TERM^3000508.1635^@^811.5^^@^3000616
"KRN",.402,1324,"DIAB",6,0,811.5,0)
.04///TODAY
"KRN",.402,1324,"DIAB",10,0,811.5,0)
.05///TODAY
"KRN",.402,1324,"DR",1,811.5)
.01;S DIC("S")="I Y'=""N""";.02;S:$P(^PXRMD(811.5,D0,0),"^",4) Y="@1";Q;.04///^S X=DT;S Y="@2";@1;Q;.05///^S X=DT;@2;1;20;
"KRN",.402,1324,"DR",2,811.52)
.01:13;
"KRN",.402,1325,-1)
0^6
"KRN",.402,1325,0)
PXRM EDIT FORCED VALUE^2991216.1032^@^801.41^^@^3000428
"KRN",.402,1325,"DR",1,801.41)
I $G(DINUSE)=1 S Y=3;.01Forced value NAME~;3DISABLE Forced value~;22;14RESTRICTED TO FINDING TYPE~;
"KRN",.402,1334,-1)
0^10
"KRN",.402,1334,0)
PXRM EDIT REMINDER CF^3000126.1459^@^811.4^^@^3000616
"KRN",.402,1334,"%D",0)
^^1^1^3000126^
"KRN",.402,1334,"%D",1,0)
Edit template for REMINDER COMPUTED FINDINGS.
"KRN",.402,1334,"DIAB",1,0,811.4,0)
ALL
"KRN",.402,1334,"DR",1,811.4)
.01:.04
"KRN",.402,1336,-1)
0^7
"KRN",.402,1336,0)
PXRM RESULT ELEMENT^3000503.1035^@^801.41^^@^3000609
"KRN",.402,1336,"DR",1,801.41)
I $G(DINUSE)=1 S Y=53;.01;53;35PROGRESS NOTE TEXT~;
"KRN",.402,1337,-1)
0^8
"KRN",.402,1337,0)
PXRM RESULT GROUP^3000418.102^@^801.41^^@^3000609
"KRN",.402,1337,"DR",1,801.41)
I $G(DINUSE)=1 S Y=23;.01;23;10;
"KRN",.402,1337,"DR",2,801.412)
.01;2;
"KRN",.402,1339,-1)
0^9
"KRN",.402,1339,0)
PXRM EDIT NATIONAL TERM^3000508.1212^@^811.5^^@^3000609
"KRN",.402,1339,"DIAB",1,1,811.52,0)
ALL
"KRN",.402,1339,"DIAB",3,0,811.5,0)
.05///TODAY
"KRN",.402,1339,"DR",1,811.5)
20;Q;.05///^S X=DT;
"KRN",.402,1339,"DR",2,811.52)
.01:13
"KRN",19,1988,-1)
4^56
"KRN",19,1988,0)
GMTS COORDINATOR
"KRN",19,4647,-1)
4^71
"KRN",19,4647,0)
IBDF PRINT BLNK ENCOUNTER FORM
"KRN",19,5302,-1)
4^54
"KRN",19,5302,0)
PXTT TABLE MAINTENANCE
"KRN",19,5322,-1)
4^55
"KRN",19,5322,0)
PX PCE COORDINATOR MENU
"KRN",19,5417,-1)
0^48
"KRN",19,5417,0)
PXRM DEFINITION EDIT^Add/Edit Reminder Definition^^R^^^^^^^^CLINICAL REMINDERS^^^
"KRN",19,5417,1,0)
^19.06^18^18^3000313^^
"KRN",19,5417,1,1,0)
This option is used to edit the Clinical Reminder Definitions. Several
"KRN",19,5417,1,2,0)
predefined reminder definitions were distributed with the PCE package
"KRN",19,5417,1,3,0)
based on the Ambulatory Care EP Preventative Health Maintenance
"KRN",19,5417,1,4,0)
Guidelines.
"KRN",19,5417,1,5,0)
 
"KRN",19,5417,1,6,0)
Nationally distributed reminder definitions items all have a "VA-"
"KRN",19,5417,1,7,0)
prefix. VA- for Ambulatory Care EP reminders and VA-* for National
"KRN",19,5417,1,8,0)
Center for Health Promotion reminders. To alter a VA- prefixed reminder
"KRN",19,5417,1,9,0)
item, first copy it to a different name and then edit the reminder
"KRN",19,5417,1,10,0)
definition to reflect your site's requirements for the reminder.
"KRN",19,5417,1,11,0)
 
"KRN",19,5417,1,12,0)
Sites may change anything in a local reminder definition to meet their
"KRN",19,5417,1,13,0)
needs. Findings at each site may require modification to represent
"KRN",19,5417,1,14,0)
local use of clinical data.
"KRN",19,5417,1,15,0)
 
"KRN",19,5417,1,16,0)
The distributed reminder definitions "Technical Description" will give
"KRN",19,5417,1,17,0)
help to the coordinator for ensuring the reminder definition is
"KRN",19,5417,1,18,0)
modified to reflect local guidelines for reminders.
"KRN",19,5417,15)

"KRN",19,5417,20)

"KRN",19,5417,25)
PXRMREDT
"KRN",19,5417,30)

"KRN",19,5417,31)

"KRN",19,5417,33)

"KRN",19,5417,34)

"KRN",19,5417,50)

"KRN",19,5417,51)

"KRN",19,5417,"U")
ADD/EDIT REMINDER DEFINITION
"KRN",19,5419,-1)
0^6
"KRN",19,5419,0)
PXRM DEFINITION INQUIRY^Inquire about Reminder Definition^^R^^^^^^^y^CLINICAL REMINDERS
"KRN",19,5419,1,0)
^^2^2^3000313^
"KRN",19,5419,1,1,0)
Allows a user to display a clinical reminder definition in an easy
"KRN",19,5419,1,2,0)
to read format.
"KRN",19,5419,25)
REM^PXRMINQ
"KRN",19,5419,"U")
INQUIRE ABOUT REMINDER DEFINIT
"KRN",19,5421,-1)
0^33
"KRN",19,5421,0)
PXRM TAXONOMY LIST^List Taxonomy Definitions^^P^^^^^^^y^CLINICAL REMINDERS^^1
"KRN",19,5421,1,0)
^^8^8^2991220^^^^
"KRN",19,5421,1,1,0)
This option lists the current definitions of all the taxonomies defined
"KRN",19,5421,1,2,0)
in the REMINDER TAXONOMY file. The REMINDER TAXONOMY file is used to
"KRN",19,5421,1,3,0)
define a range of coded values from ICD Diagnosis codes, ICD
"KRN",19,5421,1,4,0)
Operation/Procedures codes, and CPT codes that can be viewed as being
"KRN",19,5421,1,5,0)
part of a clinical category (taxonomy). Each entry has a low value and
"KRN",19,5421,1,6,0)
a high value. The software will search for matches on all the codes
"KRN",19,5421,1,7,0)
between the low and high values inclusive. If there is a match then the
"KRN",19,5421,1,8,0)
taxonomy finding will be true for the patient.
"KRN",19,5421,20)
K DA,DIC,DIE,DR
"KRN",19,5421,25)

"KRN",19,5421,60)
PXD(811.2,
"KRN",19,5421,62)
0
"KRN",19,5421,63)
[PXRM TAXONOMY LIST]
"KRN",19,5421,64)
NAME
"KRN",19,5421,65)
A
"KRN",19,5421,66)
zzzzzz
"KRN",19,5421,67)

"KRN",19,5421,"U")
LIST TAXONOMY DEFINITIONS
"KRN",19,5423,-1)
0^29
"KRN",19,5423,0)
PXRM TAXONOMY COPY^Copy Taxonomy Item^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,5423,1,0)
^^10^10^2960520^^
"KRN",19,5423,1,1,0)
This option allows the user to copy an existing taxonomy definition into a
"KRN",19,5423,1,2,0)
new taxonomy entry in the PCE Taxonomy file (#811.2).  The original
"KRN",19,5423,1,3,0)
taxonomy to be copied is selected first.  If the original taxonomy is
"KRN",19,5423,1,4,0)
prefixed with "VA-", the "VA-" will be stripped off the name automatically
"KRN",19,5423,1,5,0)
to create the name for the new taxonomy entry.  The new name must be
"KRN",19,5423,1,6,0)
unique.  If the new name is not unique, the user must enter a unique name
"KRN",19,5423,1,7,0)
for the new taxonomy entry.  If no name is provided, the new entry will
"KRN",19,5423,1,8,0)
not be created.  Once a new name is defined for the new taxonomy entry,
"KRN",19,5423,1,9,0)
the new taxonomy entry can be edited to reflect the local taxonomy
"KRN",19,5423,1,10,0)
definition.
"KRN",19,5423,25)
COPYTAX^PXRMCOPY
"KRN",19,5423,"U")
COPY TAXONOMY ITEM
"KRN",19,5424,-1)
0^32
"KRN",19,5424,0)
PXRM TAXONOMY INQUIRY^Inquire about Taxonomy Item^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,5424,1,0)
^^3^3^2960520^
"KRN",19,5424,1,1,0)
This option provides a detailed report of a Taxonomy item's definition,
"KRN",19,5424,1,2,0)
with a list of the actual ICD codes that will meet the taxonomy definition
"KRN",19,5424,1,3,0)
from the ICD Diagnosis and ICD Operation/Procedure files
"KRN",19,5424,25)
TAX^PXRMINQ
"KRN",19,5424,"U")
INQUIRE ABOUT TAXONOMY ITEM
"KRN",19,5425,-1)
0^24
"KRN",19,5425,0)
PXRM REMINDER TEST^Reminder Test^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,5425,25)
DEV^PXRMDEV
"KRN",19,5425,"U")
REMINDER TEST
"KRN",19,5432,-1)
4^70
"KRN",19,5432,0)
PX REPORT PARAMETER EDIT
"KRN",19,5438,-1)
0^63
"KRN",19,5438,0)
PX HS/RPT PARAMETERS PRINT^PCE HS/RPT Parameters Print^^P^^^^^^^y^PCE PATIENT CARE ENCOUNTER
"KRN",19,5438,1,0)
^^4^4^3000509^
"KRN",19,5438,1,1,0)
This option prints the current PCE Parameter definitions that are used by
"KRN",19,5438,1,2,0)
some of the PCE Reports. A brief explanation is included about editing and
"KRN",19,5438,1,3,0)
viewing health summary disclaimers that are now managed from the Clinical
"KRN",19,5438,1,4,0)
Reminders package.
"KRN",19,5438,60)
PX(815,
"KRN",19,5438,61)

"KRN",19,5438,62)
0
"KRN",19,5438,63)
[PX HS/RPT PARAMETERS PRINT]
"KRN",19,5438,64)
[PX PARAMETERS PRINT]
"KRN",19,5438,"U")
PCE HS/RPT PARAMETERS PRINT
"KRN",19,5439,-1)
0^64
"KRN",19,5439,0)
PX HS/RPT PARAMETER MENU^PCE HS/RPT Parameter Menu^^M^^^^^^^^
"KRN",19,5439,1,0)
^^11^11^3000509^
"KRN",19,5439,1,1,0)
This menu option contains print and edit options for PCE fields related to
"KRN",19,5439,1,2,0)
the PCE Reports module.  
"KRN",19,5439,1,3,0)
 
"KRN",19,5439,1,4,0)
Use the print option to see what the current definition is for these
"KRN",19,5439,1,5,0)
fields.  
"KRN",19,5439,1,6,0)
 
"KRN",19,5439,1,7,0)
The report edit option allows your site to specify which clinics in file
"KRN",19,5439,1,8,0)
44 represent "Emergency Room" clinics, and what Lab tests from file 60
"KRN",19,5439,1,9,0)
should be used for looking up patient data for Glucose, Cholesterol, LDL
"KRN",19,5439,1,10,0)
Cholesterol and HBA1C lab results.  These fields are used by the following
"KRN",19,5439,1,11,0)
reports:  Caseload Profile by Clinic, and Patient Activity by Clinic.
"KRN",19,5439,10,0)
^19.01IP^3^2
"KRN",19,5439,10,1,0)
5438^PRNT^1
"KRN",19,5439,10,1,"^")
PX HS/RPT PARAMETERS PRINT
"KRN",19,5439,10,3,0)
5432^RPT^10
"KRN",19,5439,10,3,"^")
PX REPORT PARAMETER EDIT
"KRN",19,5439,99)
58203,50813
"KRN",19,5439,"U")
PCE HS/RPT PARAMETER MENU
"KRN",19,5441,-1)
0^47
"KRN",19,5441,0)
PXRM DEFINITION COPY^Copy Reminder Definition^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,5441,1,0)
^19.06^11^11^3000608^^^^
"KRN",19,5441,1,1,0)
This option allows the user to copy an existing reminder definition
"KRN",19,5441,1,2,0)
into a new reminder definition in the Clinical Reminder Definition file
"KRN",19,5441,1,3,0)
(#811.9). The original reminder definition to be copied is selected
"KRN",19,5441,1,4,0)
first.  If the original reminder definition is prefixed with "VA-", the
"KRN",19,5441,1,5,0)
"VA-" will be stripped off the name automatically to create the name
"KRN",19,5441,1,6,0)
for the new reminder definition. The new name must be unique.  If the
"KRN",19,5441,1,7,0)
new name is not unique, the user must enter a unique name for the new
"KRN",19,5441,1,8,0)
reminder definition entry. If no name is provided, the new entry will
"KRN",19,5441,1,9,0)
not be created.  Once a new name is defined for the new reminder
"KRN",19,5441,1,10,0)
definition, the new reminder definition can be edited to reflect the
"KRN",19,5441,1,11,0)
local reminder definition.
"KRN",19,5441,25)
COPYREM^PXRMCOPY
"KRN",19,5441,"U")
COPY REMINDER DEFINITION
"KRN",19,5442,-1)
0^31
"KRN",19,5442,0)
PXRM TAXONOMY EDIT^Edit Taxonomy Item^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,5442,1,0)
^^8^8^3000313^
"KRN",19,5442,1,1,0)
 This option is used to edit the PCE Taxonomy Item definitions.  There
"KRN",19,5442,1,2,0)
have been several predefined taxonomy items that are distributed with the
"KRN",19,5442,1,3,0)
PCE package based on the Ambulatory Care EP Preventative Health
"KRN",19,5442,1,4,0)
Maintenance Guidelines.
"KRN",19,5442,1,5,0)
 
"KRN",19,5442,1,6,0)
The distributed taxonomy items all have a "VA-" prefix.  To alter a VA-
"KRN",19,5442,1,7,0)
prefixed taxonomy item, first copy it to a different name and then edit
"KRN",19,5442,1,8,0)
the taxonomy to reflect your site's definition for the taxonomy.
"KRN",19,5442,25)
PXRMTEDT
"KRN",19,5442,"U")
EDIT TAXONOMY ITEM
"KRN",19,5445,-1)
0^1
"KRN",19,5445,0)
PXRM (IN)/ACTIVATE REMINDERS^Activate/Inactivate Reminders^^E^^^^^^^n^CLINICAL REMINDERS
"KRN",19,5445,1,0)
^^1^1^2960730^^
"KRN",19,5445,1,1,0)
This option is used to make reminders active or inactive.
"KRN",19,5445,10.1)
Activate/Inactivate Reminders
"KRN",19,5445,30)
PXD(811.9,
"KRN",19,5445,31)
QAMEZ
"KRN",19,5445,50)
PXD(811.9,
"KRN",19,5445,51)
1.6
"KRN",19,5445,"U")
ACTIVATE/INACTIVATE REMINDERS
"KRN",19,5446,-1)
0^2
"KRN",19,5446,0)
PXRM (IN)/ACTIVATE TAXONOMIES^Activate/Inactivate Taxonomies^^E^^^^^^^n^CLINICAL REMINDERS
"KRN",19,5446,1,0)
^^2^2^2960730^
"KRN",19,5446,1,1,0)
This option allows you to activate/inactivate taxonomies.
"KRN",19,5446,1,2,0)

"KRN",19,5446,30)
PXD(811.2,
"KRN",19,5446,31)
QAMEZ
"KRN",19,5446,50)
PXD(811.2,
"KRN",19,5446,51)
1.6
"KRN",19,5446,"U")
ACTIVATE/INACTIVATE TAXONOMIES
"KRN",19,6449,-1)
4^58
"KRN",19,6449,0)
ORCM QUICK ORDERS
"KRN",19,7700,-1)
0^20
"KRN",19,7700,0)
PXRM REMINDER EXCHANGE^Reminder Exchange^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,7700,1,0)
^^2^2^2980925^^
"KRN",19,7700,1,1,0)
This option allows sites to exchange reminder definitions via MailMan
"KRN",19,7700,1,2,0)
messages and host files.
"KRN",19,7700,25)
EN^PXRMEX
"KRN",19,7700,"U")
REMINDER EXCHANGE
"KRN",19,7709,-1)
0^26
"KRN",19,7709,0)
PXRM REMINDERS DUE^Reminders Due Report^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,7709,1,0)
^^16^16^2990721^
"KRN",19,7709,1,1,0)
For a selected reminder the report lists any reminders which are currently 
"KRN",19,7709,1,2,0)
due. Available report options are: 
"KRN",19,7709,1,3,0)
 
"KRN",19,7709,1,4,0)
- Individual Patient
"KRN",19,7709,1,5,0)
- Hospital Location  (all patients with encounters)
"KRN",19,7709,1,6,0)
- OE/RR Team (all patients in team)
"KRN",19,7709,1,7,0)
- PCMM Provider (all practitioner patients)
"KRN",19,7709,1,8,0)
- PCMM Team (all patients in team)
"KRN",19,7709,1,9,0)
 
"KRN",19,7709,1,10,0)
A SUMMARY report  displays totals of how many patients of those selected 
"KRN",19,7709,1,11,0)
have reminders due. 
"KRN",19,7709,1,12,0)
 
"KRN",19,7709,1,13,0)
Alternatively, a DETAILED report displays patients with reminders due in 
"KRN",19,7709,1,14,0)
alphabetical order. The report displays for each patient the date the 
"KRN",19,7709,1,15,0)
reminder is due, the date the reminder was last done and next appointment 
"KRN",19,7709,1,16,0)
date. The detailed report also (optionally) lists all future appointments.
"KRN",19,7709,25)
PXRMXD
"KRN",19,7709,"U")
REMINDERS DUE REPORT
"KRN",19,7710,-1)
0^23
"KRN",19,7710,0)
PXRM REMINDER REPORTS^Reminder Reports^^M^^^^^^^^CLINICAL REMINDERS
"KRN",19,7710,1,0)
^19.06^3^3^3000313^^
"KRN",19,7710,1,1,0)
This is a menu of Clinical Reminder reports that clinicians can use for
"KRN",19,7710,1,2,0)
summary and detailed level information about patients' reminders due and 
"KRN",19,7710,1,3,0)
satisfied. 
"KRN",19,7710,10,0)
^19.01IP^1^1
"KRN",19,7710,10,1,0)
7709^D^1
"KRN",19,7710,10,1,"^")
PXRM REMINDERS DUE
"KRN",19,7710,99)
57853,36333
"KRN",19,7710,"U")
REMINDER REPORTS
"KRN",19,7789,-1)
0^28
"KRN",19,7789,0)
PXRM RESOLUTION EDIT/INQUIRE^Reminder Resolution Statuses^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,7789,1,0)
^^1^1^2990805^^
"KRN",19,7789,1,1,0)
This option lists the hierarchy of resolution status values used by CPRS.
"KRN",19,7789,25)
PXRMRESN
"KRN",19,7789,"U")
REMINDER RESOLUTION STATUSES
"KRN",19,7790,-1)
0^3
"KRN",19,7790,0)
PXRM CATEGORY EDIT/INQUIRE^Add/Edit Reminder Categories^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,7790,1,0)
^^4^4^2991202^
"KRN",19,7790,1,1,0)
Reminder categories used by CPRS GUI may be added or changed.
"KRN",19,7790,1,2,0)
 
"KRN",19,7790,1,3,0)
A reminder category may contain a list of reminders and/or other
"KRN",19,7790,1,4,0)
sub-categories.
"KRN",19,7790,25)
PXRMCAT
"KRN",19,7790,"U")
ADD/EDIT REMINDER CATEGORIES
"KRN",19,7803,-1)
0^17
"KRN",19,7803,0)
PXRM PARAMETER EDIT^Edit Finding Parameters^^E^^^^^^^^CLINICAL REMINDERS^^1^1
"KRN",19,7803,1,0)
^^2^2^2990805^^^^
"KRN",19,7803,1,1,0)
This option is used to modify the finding parameter file which used in the
"KRN",19,7803,1,2,0)
option 'Create Dialog from Reminder Definition'.
"KRN",19,7803,15)
K DLAYGO
"KRN",19,7803,20)
K DLAYGO
"KRN",19,7803,30)
PXRMD(801.45,
"KRN",19,7803,31)
AEMQ
"KRN",19,7803,32)
Select FINDING TYPE to edit:
"KRN",19,7803,34)

"KRN",19,7803,50)
PXRMD(801.45,
"KRN",19,7803,51)
1
"KRN",19,7803,52)

"KRN",19,7803,"U")
EDIT FINDING PARAMETERS
"KRN",19,7807,-1)
0^10
"KRN",19,7807,0)
PXRM DIALOG MANAGEMENT^Dialog Management^^M^^^^^^^^CLINICAL REMINDERS^n
"KRN",19,7807,1,0)
^^2^2^3000313^
"KRN",19,7807,1,1,0)
This menu allows maintenance of the parameters used by CPRS for reminder
"KRN",19,7807,1,2,0)
dialog processing.
"KRN",19,7807,10,0)
^19.01IP^19^2
"KRN",19,7807,10,18,0)
7963^DI^9
"KRN",19,7807,10,18,"^")
PXRM DIALOG/COMPONENT EDIT
"KRN",19,7807,10,19,0)
7972^DP^1
"KRN",19,7807,10,19,"^")
PXRM DIALOG PARAMETERS
"KRN",19,7807,25)

"KRN",19,7807,99)
58064,42177
"KRN",19,7807,"U")
DIALOG MANAGEMENT
"KRN",19,7815,-1)
0^12
"KRN",19,7815,0)
PXRM FINDING TYPE PARAMETERS^General Finding Type Parameters^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,7815,1,0)
^^14^14^3000313^
"KRN",19,7815,1,1,0)
This option allows display of the finding type parameters file used in
"KRN",19,7815,1,2,0)
generating reminder dialogs. There is limited edit on this file to allow
"KRN",19,7815,1,3,0)
customization of prefix and suffix text. Parameters may also be disabled
"KRN",19,7815,1,4,0)
if not required at your site.
"KRN",19,7815,1,5,0)
 
"KRN",19,7815,1,6,0)
The file is structured by finding type and within that resolution status.
"KRN",19,7815,1,7,0)
Reminder dialog generated will include a question (dialog element) for
"KRN",19,7815,1,8,0)
each resolution type enabled in the finding type parameter file. The
"KRN",19,7815,1,9,0)
question text is constructed as prefix_finding item name_suffix.
"KRN",19,7815,1,10,0)
 
"KRN",19,7815,1,11,0)
Health factors are treated slightly differently. Health factors are linked
"KRN",19,7815,1,12,0)
to resolution statuses by the PXRM HEALTH FACTOR RESOLUTIONS option. For
"KRN",19,7815,1,13,0)
reminders with health factors questions are only generated if there is a
"KRN",19,7815,1,14,0)
resolution mapping AND an enabled finding type parameter.
"KRN",19,7815,25)
PXRMFIND
"KRN",19,7815,"U")
GENERAL FINDING TYPE PARAMETER
"KRN",19,7819,-1)
0^11
"KRN",19,7819,0)
PXRM FINDING ITEM PARAMETERS^Finding Item Parameters^^R^^^^^^^^CLINICAL REMINDERS^^^
"KRN",19,7819,1,0)
^^8^8^2991003^^
"KRN",19,7819,1,1,0)
If a reminder finding item will always be resolved by the same question
"KRN",19,7819,1,2,0)
(dialog element) or set of questions (dialog group) then an entry should
"KRN",19,7819,1,3,0)
be made in the finding item parameter file linking the reminder finding
"KRN",19,7819,1,4,0)
item to the dialog element or group.
"KRN",19,7819,1,5,0)
 
"KRN",19,7819,1,6,0)
When a reminder dialog is generated it will include the questions defined
"KRN",19,7819,1,7,0)
in this file (applicable to the findings on the reminder) instead of
"KRN",19,7819,1,8,0)
generating dialog using the finding type parameters file.
"KRN",19,7819,15)

"KRN",19,7819,20)

"KRN",19,7819,25)
PXRMFIP
"KRN",19,7819,30)

"KRN",19,7819,31)

"KRN",19,7819,32)

"KRN",19,7819,33)

"KRN",19,7819,34)

"KRN",19,7819,50)

"KRN",19,7819,51)

"KRN",19,7819,"U")
FINDING ITEM PARAMETERS
"KRN",19,7891,-1)
0^13
"KRN",19,7891,0)
PXRM HEALTH FACTOR RESOLUTIONS^Health Factor Resolutions^^R^^^^^^^^CLINICAL REMINDERS^^^
"KRN",19,7891,1,0)
^^8^8^3000216^^^^
"KRN",19,7891,1,1,0)
Health factors must be mapped to resolution codes using this option if
"KRN",19,7891,1,2,0)
they are to be included in reminder dialog generated.
"KRN",19,7891,1,3,0)
 
"KRN",19,7891,1,4,0)
Reminder dialog generation creates a question (dialog element) in the
"KRN",19,7891,1,5,0)
reminder dialog for each resolution status entered in this file against
"KRN",19,7891,1,6,0)
the health factor. Question text and additional prompts are derived from
"KRN",19,7891,1,7,0)
the finding parameters file and may be modified by option PXRM FINDING
"KRN",19,7891,1,8,0)
PARAMETERS.
"KRN",19,7891,15)

"KRN",19,7891,20)

"KRN",19,7891,25)
PXRMSHF
"KRN",19,7891,30)

"KRN",19,7891,31)

"KRN",19,7891,32)

"KRN",19,7891,50)

"KRN",19,7891,51)

"KRN",19,7891,"U")
HEALTH FACTOR RESOLUTIONS
"KRN",19,7899,-1)
0^21
"KRN",19,7899,0)
PXRM REMINDER MANAGEMENT^Reminder Management^^M^^^^^^^^
"KRN",19,7899,1,0)
^^2^2^3000313^
"KRN",19,7899,1,1,0)
This menu allows maintenance of the parameters used by CPRS for reminder
"KRN",19,7899,1,2,0)
processing.
"KRN",19,7899,10,0)
^19.01IP^5^5
"KRN",19,7899,10,1,0)
7993^RL^5
"KRN",19,7899,10,1,"^")
PXRM DEFINITION LIST
"KRN",19,7899,10,2,0)
5419^RI^10
"KRN",19,7899,10,2,"^")
PXRM DEFINITION INQUIRY
"KRN",19,7899,10,3,0)
5417^RE^15
"KRN",19,7899,10,3,"^")
PXRM DEFINITION EDIT
"KRN",19,7899,10,4,0)
5441^RC^20
"KRN",19,7899,10,4,"^")
PXRM DEFINITION COPY
"KRN",19,7899,10,5,0)
5445^RA^25
"KRN",19,7899,10,5,"^")
PXRM (IN)/ACTIVATE REMINDERS
"KRN",19,7899,99)
58133,37515
"KRN",19,7899,99.1)
58055,22330
"KRN",19,7899,"U")
REMINDER MANAGEMENT
"KRN",19,7900,-1)
0^34
"KRN",19,7900,0)
PXRM TAXONOMY MANAGEMENT^Taxonomy Management^^M^^^^^^^^
"KRN",19,7900,1,0)
^^2^2^3000313^
"KRN",19,7900,1,1,0)
This menu allows maintenance of the parameters used by CPRS for reminder
"KRN",19,7900,1,2,0)
taxonomy processing.
"KRN",19,7900,10,0)
^19.01IP^4^4
"KRN",19,7900,10,1,0)
5421^TL^5
"KRN",19,7900,10,1,"^")
PXRM TAXONOMY LIST
"KRN",19,7900,10,2,0)
5424^TI^10
"KRN",19,7900,10,2,"^")
PXRM TAXONOMY INQUIRY
"KRN",19,7900,10,3,0)
5442^TE^15
"KRN",19,7900,10,3,"^")
PXRM TAXONOMY EDIT
"KRN",19,7900,10,4,0)
5423^TC^20
"KRN",19,7900,10,4,"^")
PXRM TAXONOMY COPY
"KRN",19,7900,99)
58008,36623
"KRN",19,7900,"U")
TAXONOMY MANAGEMENT
"KRN",19,7901,-1)
0^14
"KRN",19,7901,0)
PXRM INFO ONLY^Reminder Information Only Menu^^M^^^^^^^^
"KRN",19,7901,1,0)
^19.06^2^2^3000313^^
"KRN",19,7901,1,1,0)
Provides information only options for users who need information about
"KRN",19,7901,1,2,0)
reminders but do not need the ability to make changes.
"KRN",19,7901,10,0)
^19.01IP^8^8
"KRN",19,7901,10,1,0)
7993^RL^5
"KRN",19,7901,10,1,"^")
PXRM DEFINITION LIST
"KRN",19,7901,10,2,0)
5419^RI^10
"KRN",19,7901,10,2,"^")
PXRM DEFINITION INQUIRY
"KRN",19,7901,10,3,0)
5421^TL^15
"KRN",19,7901,10,3,"^")
PXRM TAXONOMY LIST
"KRN",19,7901,10,4,0)
5424^TI^20
"KRN",19,7901,10,4,"^")
PXRM TAXONOMY INQUIRY
"KRN",19,7901,99)
58133,38091
"KRN",19,7901,"U")
REMINDER INFORMATION ONLY MENU
"KRN",19,7902,-1)
0^16
"KRN",19,7902,0)
PXRM OTHER SUPPORTING MENUS^Other Supporting Menus^^M^^^^^^^^
"KRN",19,7902,1,0)
^19.06^2^2^3000424^^^^
"KRN",19,7902,1,1,0)
This menu allows maintenance of the PCE and reminder parameters used by
"KRN",19,7902,1,2,0)
CPRS for reminder processing.
"KRN",19,7902,10,0)
^19.01IP^5^5
"KRN",19,7902,10,1,0)
5302^TM^5
"KRN",19,7902,10,1,"^")
PXTT TABLE MAINTENANCE
"KRN",19,7902,10,2,0)
5322^PC^10
"KRN",19,7902,10,2,"^")
PX PCE COORDINATOR MENU
"KRN",19,7902,10,3,0)
1988^HS^15
"KRN",19,7902,10,3,"^")
GMTS COORDINATOR
"KRN",19,7902,10,4,0)
4647^EF^20
"KRN",19,7902,10,4,"^")
IBDF PRINT BLNK ENCOUNTER FORM
"KRN",19,7902,10,5,0)
6449^QO^25
"KRN",19,7902,10,5,"^")
ORCM QUICK ORDERS
"KRN",19,7902,99)
58240,48510
"KRN",19,7902,"U")
OTHER SUPPORTING MENUS
"KRN",19,7903,-1)
0^4
"KRN",19,7903,0)
PXRM CPRS COVER SHEET LIST^CPRS Cover Sheet Reminder List^^A^^^^^^^^^^1
"KRN",19,7903,1,0)
^^2^2^3000313^
"KRN",19,7903,1,1,0)
This option allows a user to modify the default reminder list displayed on
"KRN",19,7903,1,2,0)
the cover sheet.
"KRN",19,7903,20)
D EDITPAR^XPAREDIT("ORQQPX SEARCH ITEMS")
"KRN",19,7903,"U")
CPRS COVER SHEET REMINDER LIST
"KRN",19,7904,-1)
0^15
"KRN",19,7904,0)
PXRM MANAGERS MENU^Reminder Managers Menu^^M^^^^^^^^
"KRN",19,7904,1,0)
^19.06^2^2^3000420^^
"KRN",19,7904,1,1,0)
This option provides functions for all aspects of Clinical Reminder
"KRN",19,7904,1,2,0)
management.
"KRN",19,7904,10,0)
^19.01IP^11^11
"KRN",19,7904,10,1,0)
7710^RP^5
"KRN",19,7904,10,1,"^")
PXRM REMINDER REPORTS
"KRN",19,7904,10,2,0)
7700^RX^10
"KRN",19,7904,10,2,"^")
PXRM REMINDER EXCHANGE
"KRN",19,7904,10,3,0)
7899^RM^15
"KRN",19,7904,10,3,"^")
PXRM REMINDER MANAGEMENT
"KRN",19,7904,10,4,0)
7900^TXM^20
"KRN",19,7904,10,4,"^")
PXRM TAXONOMY MANAGEMENT
"KRN",19,7904,10,5,0)
7901^INFO^30
"KRN",19,7904,10,5,"^")
PXRM INFO ONLY
"KRN",19,7904,10,6,0)
7902^OS^35
"KRN",19,7904,10,6,"^")
PXRM OTHER SUPPORTING MENUS
"KRN",19,7904,10,7,0)
7807^DM^25
"KRN",19,7904,10,7,"^")
PXRM DIALOG MANAGEMENT
"KRN",19,7904,10,8,0)
7941^TRM^22
"KRN",19,7904,10,8,"^")
PXRM TERM MANAGEMENT
"KRN",19,7904,10,9,0)
5425^RT^35
"KRN",19,7904,10,9,"^")
PXRM REMINDER TEST
"KRN",19,7904,10,10,0)
7985^CF^23
"KRN",19,7904,10,10,"^")
PXRM CF MANAGEMENT
"KRN",19,7904,10,11,0)
8069^CP^24
"KRN",19,7904,10,11,"^")
PXRM CPRS CONFIGURATION
"KRN",19,7904,99)
58184,51837
"KRN",19,7904,99.1)
58232,33025
"KRN",19,7904,"U")
REMINDER MANAGERS MENU
"KRN",19,7922,-1)
0^5
"KRN",19,7922,0)
PXRM CPRS LOOKUP CATEGORIES^CPRS Lookup Categories^^A^^^^^^^^CLINICAL REMINDERS^^1
"KRN",19,7922,1,0)
^^6^6^3000403^
"KRN",19,7922,1,1,0)
This option allows a user to modify the "Reminder Categories for Lookup"
"KRN",19,7922,1,2,0)
CPRS parameter.  This parameter defines reminder categories to display in
"KRN",19,7922,1,3,0)
the "reminders available" window and the note tabs' reminder drawer under
"KRN",19,7922,1,4,0)
"OTHER". The reminders that are defined in the categories are available to
"KRN",19,7922,1,5,0)
the CPRS GUI user to selectively evaluate and process. They are not
"KRN",19,7922,1,6,0)
automatically evaluated when the cover sheet is built.
"KRN",19,7922,20)
D EDITPAR^XPAREDIT("PXRM CPRS LOOKUP CATEGORIES")
"KRN",19,7922,"U")
CPRS LOOKUP CATEGORIES
"KRN",19,7936,-1)
0^30
"KRN",19,7936,0)
PXRM TAXONOMY DIALOG^Taxonomy Dialog Parameters^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,7936,1,0)
^^11^11^2991203^^^^
"KRN",19,7936,1,1,0)
The dialog for a taxonomy finding is created from the fields in this
"KRN",19,7936,1,2,0)
option each time the reminder dialog is passed to CPRS or viewed through
"KRN",19,7936,1,3,0)
the reminder dialog option. Changes may be made through this option to:
"KRN",19,7936,1,4,0)
 
"KRN",19,7936,1,5,0)
Taxonomy header question
"KRN",19,7936,1,6,0)
Current/Historical procedure questions
"KRN",19,7936,1,7,0)
Current/Historical diagnosis questions
"KRN",19,7936,1,8,0)
Selectable codes (ICD9/CPT) and user modified descriptions
"KRN",19,7936,1,9,0)
 
"KRN",19,7936,1,10,0)
DX/PR parameters allowing for individual questions for each code (rather
"KRN",19,7936,1,11,0)
than presenting codes as a checklist box).
"KRN",19,7936,25)
PXRMTDLG
"KRN",19,7936,"U")
TAXONOMY DIALOG PARAMETERS
"KRN",19,7938,-1)
0^35
"KRN",19,7938,0)
PXRM TERM COPY^Copy Reminder Term^^R^^^^^^^^
"KRN",19,7938,1,0)
^^2^2^2991108^
"KRN",19,7938,1,1,0)
This option allows a user to copy an existing reminder term into a new
"KRN",19,7938,1,2,0)
one. The new term must have a unique name.
"KRN",19,7938,25)
COPYTERM^PXRMCOPY
"KRN",19,7938,"U")
COPY REMINDER TERM
"KRN",19,7939,-1)
0^36
"KRN",19,7939,0)
PXRM TERM EDIT^Reminder Term Edit^^R^^^^^^^^
"KRN",19,7939,1,0)
^^1^1^2991108^
"KRN",19,7939,1,1,0)
This option is used to edit reminder terms.
"KRN",19,7939,25)
PXRMTMED
"KRN",19,7939,"U")
REMINDER TERM EDIT
"KRN",19,7940,-1)
0^37
"KRN",19,7940,0)
PXRM TERM INQUIRY^Inquire about Reminder Term^^R^^^^^^^^
"KRN",19,7940,1,0)
^^2^2^2991108^
"KRN",19,7940,1,1,0)
This option allows a user to display the contents of a reminder term in
"KRN",19,7940,1,2,0)
an easy to read format.
"KRN",19,7940,25)
TERM^PXRMINQ
"KRN",19,7940,"U")
INQUIRE ABOUT REMINDER TERM
"KRN",19,7941,-1)
0^38
"KRN",19,7941,0)
PXRM TERM MANAGEMENT^Reminder Term Management^^M^^^^^^^^
"KRN",19,7941,1,0)
^^2^2^3000313^
"KRN",19,7941,1,1,0)
This menu allows maintenance of the parameters used by CPRS for reminder
"KRN",19,7941,1,2,0)
term processing.
"KRN",19,7941,10,0)
^19.01IP^4^4
"KRN",19,7941,10,1,0)
8012^TL^5
"KRN",19,7941,10,1,"^")
PXRM TERM LIST
"KRN",19,7941,10,2,0)
7940^TI^10
"KRN",19,7941,10,2,"^")
PXRM TERM INQUIRY
"KRN",19,7941,10,3,0)
7939^TE^15
"KRN",19,7941,10,3,"^")
PXRM TERM EDIT
"KRN",19,7941,10,4,0)
7938^TC^20
"KRN",19,7941,10,4,"^")
PXRM TERM COPY
"KRN",19,7941,99)
58155,54392
"KRN",19,7941,"U")
REMINDER TERM MANAGEMENT
"KRN",19,7963,-1)
0^40
"KRN",19,7963,0)
PXRM DIALOG/COMPONENT EDIT^Reminder Dialogs^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,7963,1,0)
^^57^57^3000313^
"KRN",19,7963,1,1,0)
Dialog file entries may be created or amended with this option. The
"KRN",19,7963,1,2,0)
initial display is by dialog type. Use the CV option to switch between
"KRN",19,7963,1,3,0)
dialog types. Possible dialog types are:
"KRN",19,7963,1,4,0)
 
"KRN",19,7963,1,5,0)
             R - Reminder Dialog
"KRN",19,7963,1,6,0)
             G - Dialog Group
"KRN",19,7963,1,7,0)
             E - Dialog Element 
"KRN",19,7963,1,8,0)
             P - Prompt
"KRN",19,7963,1,9,0)
             F - Forced Value
"KRN",19,7963,1,10,0)
     
"KRN",19,7963,1,11,0)
Reminder dialogs are linked to reminders by a field (REMINDER DIALOG) on
"KRN",19,7963,1,12,0)
the reminder definition. The reminder dialog may be executed by CPRS if
"KRN",19,7963,1,13,0)
the reminder is due or applicable. 
"KRN",19,7963,1,14,0)
      
"KRN",19,7963,1,15,0)
A reminder dialog contains questions (dialog elements) and/or groups of
"KRN",19,7963,1,16,0)
questions (dialog groups) which are related to the reminder findings.
"KRN",19,7963,1,17,0)
      
"KRN",19,7963,1,18,0)
Dialog groups can contain one or more questions (dialog elements).
"KRN",19,7963,1,19,0)
      
"KRN",19,7963,1,20,0)
Each question (dialog element) may have a number of additional prompts
"KRN",19,7963,1,21,0)
(e.g. date, location) or forced values.
"KRN",19,7963,1,22,0)
 
"KRN",19,7963,1,23,0)
Reminder Dialogs
"KRN",19,7963,1,24,0)
----------------
"KRN",19,7963,1,25,0)
New reminder dialogs can be created using option:
"KRN",19,7963,1,26,0)
 
"KRN",19,7963,1,27,0)
          AD - Add Dialog
"KRN",19,7963,1,28,0)
 
"KRN",19,7963,1,29,0)
The reminder dialog may be created manually or auto generated from the
"KRN",19,7963,1,30,0)
reminder definition using the General Finding Type Parameters.
"KRN",19,7963,1,31,0)
 
"KRN",19,7963,1,32,0)
An existing reminder dialog may be selected. Options available are:
"KRN",19,7963,1,33,0)
      
"KRN",19,7963,1,34,0)
          CO - Copy a reminder dialog
"KRN",19,7963,1,35,0)
          DD - Display details of dialog elements for this reminder dialog
"KRN",19,7963,1,36,0)
          DP - View progress note text in an approximation to the GUI
"KRN",19,7963,1,37,0)
          ED - Edit/Delete reminder dialog. This allows adding or deletion
"KRN",19,7963,1,38,0)
               of questions (dialog elements) to be included in the
"KRN",19,7963,1,39,0)
               dialog.
"KRN",19,7963,1,40,0)
          EE - Element edit. This allows changes to the individual
"KRN",19,7963,1,41,0)
               questions (dialog elements) and additional prompts (dialog
"KRN",19,7963,1,42,0)
               prompts)
"KRN",19,7963,1,43,0)
          INQ- Print reminder dialog definition (and related reminder
"KRN",19,7963,1,44,0)
               finding)
"KRN",19,7963,1,45,0)
          RI - Reminder inquiry
"KRN",19,7963,1,46,0)
      
"KRN",19,7963,1,47,0)
The edit options allow changes to the selected reminder dialog. When
"KRN",19,7963,1,48,0)
making changes to dialog elements and prompts it should be remembered that
"KRN",19,7963,1,49,0)
dialog elements and prompts may be used in more than one reminder dialog.
"KRN",19,7963,1,50,0)
      
"KRN",19,7963,1,51,0)
Changing one reminder dialog may affect others.
"KRN",19,7963,1,52,0)
 
"KRN",19,7963,1,53,0)
Other Dialog Types
"KRN",19,7963,1,54,0)
------------------
"KRN",19,7963,1,55,0)
 
"KRN",19,7963,1,56,0)
Additional prompts, forced values, dialog elements and dialog groups may
"KRN",19,7963,1,57,0)
be edited or printed
"KRN",19,7963,25)
START^PXRMDLGZ
"KRN",19,7963,"U")
REMINDER DIALOGS
"KRN",19,7972,-1)
0^41
"KRN",19,7972,0)
PXRM DIALOG PARAMETERS^Dialog Parameters^^M^^^^^^^^CLINICAL REMINDERS
"KRN",19,7972,1,0)
^^7^7^3000313^
"KRN",19,7972,1,1,0)
This menu allows maintenance of parameters used in dialog generation:
"KRN",19,7972,1,2,0)
 
"KRN",19,7972,1,3,0)
RS - Resolution Statuses
"KRN",19,7972,1,4,0)
FP - Finding Type Parameters
"KRN",19,7972,1,5,0)
FI - Finding Item Parameters   
"KRN",19,7972,1,6,0)
HR - Health Factor Resolutions
"KRN",19,7972,1,7,0)
TD - Taxonomy Dialogs
"KRN",19,7972,10,0)
^19.01IP^5^5
"KRN",19,7972,10,1,0)
7789^RS^1
"KRN",19,7972,10,1,"^")
PXRM RESOLUTION EDIT/INQUIRE
"KRN",19,7972,10,2,0)
7815^FP^3
"KRN",19,7972,10,2,"^")
PXRM FINDING TYPE PARAMETERS
"KRN",19,7972,10,3,0)
7819^FI^4
"KRN",19,7972,10,3,"^")
PXRM FINDING ITEM PARAMETERS
"KRN",19,7972,10,4,0)
7891^HR^2
"KRN",19,7972,10,4,"^")
PXRM HEALTH FACTOR RESOLUTIONS
"KRN",19,7972,10,5,0)
7936^TD^5
"KRN",19,7972,10,5,"^")
PXRM TAXONOMY DIALOG
"KRN",19,7972,99)
58064,42120
"KRN",19,7972,"U")
DIALOG PARAMETERS
"KRN",19,7974,-1)
0^43
"KRN",19,7974,0)
PXRM PROGRESS NOTE HEADERS^Progress Note Headers^^A^^^^^^^^CLINICAL REMINDERS^^1
"KRN",19,7974,1,0)
^^2^2^3000110^
"KRN",19,7974,1,1,0)
The header inserted into the progress note when processing a reminder may
"KRN",19,7974,1,2,0)
be modified for user, location, service.
"KRN",19,7974,20)
D EDITPAR^XPAREDIT("PXRM PROGRESS NOTE HEADERS")
"KRN",19,7974,"U")
PROGRESS NOTE HEADERS
"KRN",19,7984,-1)
0^51
"KRN",19,7984,0)
PXRM COMPUTED FINDING LIST^Reminder Computed Finding List ^^P^^^^^^^y^CLINICAL REMINDERS^^1
"KRN",19,7984,1,0)
^^1^1^3000128^^
"KRN",19,7984,1,1,0)
This option lists the computed findings that are defined at a site.
"KRN",19,7984,20)
K DA,DIC,DIE,DR
"KRN",19,7984,60)
PXRMD(811.4,
"KRN",19,7984,62)
0
"KRN",19,7984,63)
[PXRM COMPUTED FINDING LIST]
"KRN",19,7984,64)
NAME
"KRN",19,7984,65)
A
"KRN",19,7984,66)
zzzzzz
"KRN",19,7984,"U")
REMINDER COMPUTED FINDING LIST
"KRN",19,7985,-1)
0^49
"KRN",19,7985,0)
PXRM CF MANAGEMENT^Reminder Computed Finding Management^^M^^^^^^^y^CLINICAL REMINDERS
"KRN",19,7985,1,0)
^^1^1^3000128^^^
"KRN",19,7985,1,1,0)
This option provides tools for management of reminder computed findings.
"KRN",19,7985,10,0)
^19.01IP^2^2
"KRN",19,7985,10,1,0)
7984^CFL^5
"KRN",19,7985,10,1,"^")
PXRM COMPUTED FINDING LIST
"KRN",19,7985,10,2,0)
7986^CFE^10
"KRN",19,7985,10,2,"^")
PXRM COMPUTED FINDING EDIT
"KRN",19,7985,99)
58101,52509
"KRN",19,7985,"U")
REMINDER COMPUTED FINDING MANA
"KRN",19,7986,-1)
0^50
"KRN",19,7986,0)
PXRM COMPUTED FINDING EDIT^Reminder Computed Finding Edit^^R^^^^^^^^CLINICAL REMINDERS^^
"KRN",19,7986,1,0)
^19.06^2^2^3000616^^^^
"KRN",19,7986,1,1,0)
This option provides for editing of computed finding entries in the
"KRN",19,7986,1,2,0)
REMINDER COMPUTED FINDINGS file.
"KRN",19,7986,20)

"KRN",19,7986,25)
PXRMCFED
"KRN",19,7986,99)
58101,51615
"KRN",19,7986,"U")
REMINDER COMPUTED FINDING EDIT
"KRN",19,7993,-1)
0^52
"KRN",19,7993,0)
PXRM DEFINITION LIST^List Reminder Definitions^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,7993,1,0)
^^2^2^3000229^
"KRN",19,7993,1,1,0)
This option provides a brief summary of selected Clinical Reminder
"KRN",19,7993,1,2,0)
definitions.
"KRN",19,7993,25)
LIST^PXRMRLST
"KRN",19,7993,"U")
LIST REMINDER DEFINITIONS
"KRN",19,8012,-1)
0^53
"KRN",19,8012,0)
PXRM TERM LIST^List Reminder Terms^^P^^^^^^^y^CLINICAL REMINDERS^^1
"KRN",19,8012,1,0)
^19.06^1^1^3000322^^
"KRN",19,8012,1,1,0)
This option is used to give a brief listing of reminder terms.
"KRN",19,8012,20)
K DA,DIC,DIE,DR
"KRN",19,8012,60)
PXRMD(811.5,
"KRN",19,8012,62)
0
"KRN",19,8012,63)
[PXRM TERM LIST]
"KRN",19,8012,64)
NAME
"KRN",19,8012,65)
A
"KRN",19,8012,66)
zzzzzz
"KRN",19,8012,"U")
LIST REMINDER TERMS
"KRN",19,8040,-1)
0^60
"KRN",19,8040,0)
PXRM MENTAL HEALTH ACTIVE^Mental Health Dialogs Active^^A^^^^^^^^^^1
"KRN",19,8040,1,0)
^^4^4^3000404^
"KRN",19,8040,1,1,0)
This option allows a user to modify the "Mental Health Active" CPRS
"KRN",19,8040,1,2,0)
parameter.  You can activate mental health dialogs for reminder resolution
"KRN",19,8040,1,3,0)
processing at a user, division, or system level. When activated for a
"KRN",19,8040,1,4,0)
level, mental health tests in a reminder dialog can be performed.
"KRN",19,8040,20)
D EDITPAR^XPAREDIT("PXRM MENTAL HEALTH ACTIVE")
"KRN",19,8040,"U")
MENTAL HEALTH DIALOGS ACTIVE
"KRN",19,8041,-1)
0^59
"KRN",19,8041,0)
PXRM GUI REMINDERS ACTIVE^Reminder GUI Resolution Active^^A^^^^^^^^^^1
"KRN",19,8041,1,0)
^^6^6^3000404^
"KRN",19,8041,1,1,0)
This option allows a user to modify the "Reminders Active" CPRS
"KRN",19,8041,1,2,0)
parameter. You can activate GUI reminder resolution processing at a user,
"KRN",19,8041,1,3,0)
division, or system level. When activated for a level, a reminders drawer
"KRN",19,8041,1,4,0)
is available on the notes tab for selecting reminders. When a reminder is
"KRN",19,8041,1,5,0)
selected, a dialog box opens with the reminders' dialog for point and
"KRN",19,8041,1,6,0)
click resolution processing.
"KRN",19,8041,20)
D EDITPAR^XPAREDIT("PXRM GUI REMINDERS ACTIVE")
"KRN",19,8041,"U")
REMINDER GUI RESOLUTION ACTIVE
"KRN",19,8069,-1)
0^61
"KRN",19,8069,0)
PXRM CPRS CONFIGURATION^CPRS Reminder Configuration^^M^^^^^^^^CLINICAL REMINDERS
"KRN",19,8069,1,0)
^^2^2^3000420^
"KRN",19,8069,1,1,0)
This menu allows maintenance of the reminder parameters used by CPRS for
"KRN",19,8069,1,2,0)
reminder processing.
"KRN",19,8069,10,0)
^19.01IP^6^6
"KRN",19,8069,10,1,0)
7903^CS^15
"KRN",19,8069,10,1,"^")
PXRM CPRS COVER SHEET LIST
"KRN",19,8069,10,2,0)
7922^CL^10
"KRN",19,8069,10,2,"^")
PXRM CPRS LOOKUP CATEGORIES
"KRN",19,8069,10,3,0)
7790^CA^5
"KRN",19,8069,10,3,"^")
PXRM CATEGORY EDIT/INQUIRE
"KRN",19,8069,10,4,0)
7974^PN^25
"KRN",19,8069,10,4,"^")
PXRM PROGRESS NOTE HEADERS
"KRN",19,8069,10,5,0)
8040^MH^20
"KRN",19,8069,10,5,"^")
PXRM MENTAL HEALTH ACTIVE
"KRN",19,8069,10,6,0)
8041^RA^30
"KRN",19,8069,10,6,"^")
PXRM GUI REMINDERS ACTIVE
"KRN",19,8069,99)
58184,51724
"KRN",19,8069,"U")
CPRS REMINDER CONFIGURATION
"KRN",19,8086,-1)
1^18
"KRN",19,8086,0)
PXRM REMINDER DEFINITION COPY
"KRN",19,8087,-1)
1^19
"KRN",19,8087,0)
PXRM REMINDER DEFINITION EDIT
"KRN",19,8088,-1)
1^25
"KRN",19,8088,0)
PXRM REMINDER TYPES LOGIC
"KRN",19,8089,-1)
1^27
"KRN",19,8089,0)
PXRM REMINDERS LIST
"KRN",19,8090,-1)
1^39
"KRN",19,8090,0)
PXRM DIALOG/REMINDER LINK
"KRN",19,8091,-1)
1^42
"KRN",19,8091,0)
PXRM REMINDER INQUIRY
"KRN",19,8092,-1)
1^44
"KRN",19,8092,0)
PXRM DIALOG GENERATE
"KRN",19,8093,-1)
1^45
"KRN",19,8093,0)
PXRM DIALOG EDIT
"KRN",19,8094,-1)
1^46
"KRN",19,8094,0)
PXRM DIALOG EDIT/INQUIRY
"KRN",19,8095,-1)
1^62
"KRN",19,8095,0)
PX HS DISCLAIMER EDIT
"KRN",19,8096,-1)
1^65
"KRN",19,8096,0)
PXRM INFO
"KRN",19,8097,-1)
1^66
"KRN",19,8097,0)
PXRM REMINDER COPY
"KRN",19,8098,-1)
1^67
"KRN",19,8098,0)
PXRM REMINDER EDIT
"KRN",19,8099,-1)
1^68
"KRN",19,8099,0)
PXRM RESOLUTION EDIT
"KRN",19,8100,-1)
1^69
"KRN",19,8100,0)
PXRMX REMINDERS DUE
"KRN",101,5342,-1)
0^11
"KRN",101,5342,0)
PXRM EXCH MENU^Reminder Exchange Menu^^M^^^^^^^^
"KRN",101,5342,1,0)
^^1^1^2980323^^^
"KRN",101,5342,1,1,0)
This protocol menu is the main menu for the PXRM REMINDER EXCHANGE option.
"KRN",101,5342,4)
40^^^PXRM EXCHANGE IDENTIFIER
"KRN",101,5342,10,0)
^101.01PA^8^8
"KRN",101,5342,10,1,0)
5343^LR^11^
"KRN",101,5342,10,1,"^")
PXRM LIST REMINDERS
"KRN",101,5342,10,3,0)
5345^RI^12^
"KRN",101,5342,10,3,"^")
PXRM REMINDER INQUIRY
"KRN",101,5342,10,4,0)
5344^QU^31^
"KRN",101,5342,10,4,"^")
PXRM EXCH QUIT
"KRN",101,5342,10,5,0)
5346^MR^13^
"KRN",101,5342,10,5,"^")
PXRM MAIL REMINDER
"KRN",101,5342,10,6,0)
5350^SM^22^
"KRN",101,5342,10,6,"^")
PXRM SELECT MESSAGE
"KRN",101,5342,10,7,0)
5352^SR^14^
"KRN",101,5342,10,7,"^")
PXRM SAVE REMINDER
"KRN",101,5342,10,8,0)
5353^SH^21^
"KRN",101,5342,10,8,"^")
PXRM SELECT HOST FILE
"KRN",101,5342,15)
D PEXIT^PXRMEX
"KRN",101,5342,20)

"KRN",101,5342,26)
D SHOW^VALM
"KRN",101,5342,28)
Select Action:
"KRN",101,5342,99)
57959,58409
"KRN",101,5343,-1)
0^24
"KRN",101,5343,0)
PXRM LIST REMINDERS^List Reminders^^A^^^^^^^^
"KRN",101,5343,1,0)
^^1^1^2980130^
"KRN",101,5343,1,1,0)
This protocol builds a list of all the reminders defined at a site.
"KRN",101,5343,2,0)
^101.02A^1^1
"KRN",101,5343,2,1,0)
LR
"KRN",101,5343,2,"B","LR",1)

"KRN",101,5343,4)
^^^PXRM REM LIST
"KRN",101,5343,5)
^
"KRN",101,5343,10,0)
^101.01PA^0^0
"KRN",101,5343,15)

"KRN",101,5343,20)
D LIST^PXRMLIST
"KRN",101,5343,26)

"KRN",101,5343,28)

"KRN",101,5343,99)
57798,39143
"KRN",101,5344,-1)
0^12
"KRN",101,5344,0)
PXRM EXCH QUIT^Quit^^A^^^^^^^^
"KRN",101,5344,1,0)
^^2^2^2980130^^
"KRN",101,5344,1,1,0)
This protocol provides the actions for the quit option on the main
"KRN",101,5344,1,2,0)
Reminder Exchange screen.
"KRN",101,5344,4)
^^^Reminder Exchange Quit
"KRN",101,5344,20)
D EXIT^PXRMEX
"KRN",101,5344,99)
57798,39143
"KRN",101,5345,-1)
0^29
"KRN",101,5345,0)
PXRM REMINDER INQUIRY^Reminder Inquiry^^A^^^^^^^^
"KRN",101,5345,1,0)
^^2^2^2980130^
"KRN",101,5345,1,1,0)
This protocol displays a reminder inquiry, which is a listing of a complete
"KRN",101,5345,1,2,0)
reminder definition.
"KRN",101,5345,15)
S VALMBCK="R"
"KRN",101,5345,20)
D REM^PXRMINQ
"KRN",101,5345,26)

"KRN",101,5345,28)

"KRN",101,5345,99)
57798,39143
"KRN",101,5346,-1)
0^25
"KRN",101,5346,0)
PXRM MAIL REMINDER^Mail Reminder^^A^^^^^^^^
"KRN",101,5346,1,0)
^^3^3^2990120^^
"KRN",101,5346,1,1,0)
This protocol prompts for a reminder definition to mail. It then
"KRN",101,5346,1,2,0)
creates the packed reminder definition, puts it into a MailMan message
"KRN",101,5346,1,3,0)
and mails it.
"KRN",101,5346,4)
^^^MR
"KRN",101,5346,15)
S VALMBCK="R"
"KRN",101,5346,20)
D EN^PXRMEXMR
"KRN",101,5346,99)
57798,39143
"KRN",101,5347,-1)
0^21
"KRN",101,5347,0)
PXRM INSTALL REMINDER COMPONENTS^Install Reminder Components^^A^^^^^^^^
"KRN",101,5347,1,0)
^^2^2^2981222^^^
"KRN",101,5347,1,1,0)
The protocol provides the action to install a reminder and its
"KRN",101,5347,1,2,0)
components from a packed reminder definition.
"KRN",101,5347,2,0)
^101.02A^2^1
"KRN",101,5347,2,2,0)
IR
"KRN",101,5347,2,"B","IR",2)

"KRN",101,5347,20)
D INSTALL^PXRMEXIR
"KRN",101,5347,29)
6
"KRN",101,5347,99)
57798,39143
"KRN",101,5348,-1)
0^20
"KRN",101,5348,0)
PXRM HANDLE MAIL MESSAGE^Handle Reminder Exchange MailMan Message^^M^^^^^^^^
"KRN",101,5348,1,0)
^^2^2^2990120^^^
"KRN",101,5348,1,1,0)
This menu protocol provides the menu of options on the screen for
"KRN",101,5348,1,2,0)
processing MailMan messages that contain packed reminder definitions.
"KRN",101,5348,10,0)
^101.01PA^3^3
"KRN",101,5348,10,1,0)
5349^LC^5^
"KRN",101,5348,10,1,"^")
PXRM LIST COMPONENTS
"KRN",101,5348,10,2,0)
5347^IR^10^
"KRN",101,5348,10,2,"^")
PXRM INSTALL REMINDER COMPONENTS
"KRN",101,5348,10,3,0)
5351^IS^15^
"KRN",101,5348,10,3,"^")
PXRM INSTALLATION SUMMARY
"KRN",101,5348,26)
D SHOW^VALM
"KRN",101,5348,99)
58049,41420
"KRN",101,5349,-1)
0^23
"KRN",101,5349,0)
PXRM LIST COMPONENTS^List Reminder Components ^^A^^^^^^^^
"KRN",101,5349,1,0)
^^2^2^2990723^^^
"KRN",101,5349,1,1,0)
This protocol is used to display the list of reminder components in a packed
"KRN",101,5349,1,2,0)
reminder definition.
"KRN",101,5349,2,0)
^101.02A^1^1
"KRN",101,5349,2,1,0)
LC
"KRN",101,5349,2,"B","LC",1)

"KRN",101,5349,15)
S VALMBCK="R"
"KRN",101,5349,20)
D EN^VALM("PXRM EX LIST COMPONENTS")
"KRN",101,5349,26)

"KRN",101,5349,99)
57798,39143
"KRN",101,5350,-1)
0^32
"KRN",101,5350,0)
PXRM SELECT MESSAGE^Select MailMan Message^^A^^^^^^^^
"KRN",101,5350,1,0)
^^2^2^2980130^
"KRN",101,5350,1,1,0)
This protocol allows the user to select a message from the list of MailMan
"KRN",101,5350,1,2,0)
messages containing packed reminder definitions.
"KRN",101,5350,2,0)
^101.02A^1^1
"KRN",101,5350,2,1,0)
SM
"KRN",101,5350,2,"B","SM",1)

"KRN",101,5350,20)
D SELMESS^PXRMEXMM
"KRN",101,5350,99)
57798,39143
"KRN",101,5351,-1)
0^22
"KRN",101,5351,0)
PXRM INSTALLATION SUMMARY^Reminder Component Installation Summary^^A^^^^^^^^
"KRN",101,5351,1,0)
^^2^2^2981222^^
"KRN",101,5351,1,1,0)
This action protocol displays the installation summary information for
"KRN",101,5351,1,2,0)
the installation of a packed reminder definition.
"KRN",101,5351,2,0)
^101.02A^1^1
"KRN",101,5351,2,1,0)
IS
"KRN",101,5351,2,"B","IS",1)

"KRN",101,5351,20)
D DS^PXRMEXIS
"KRN",101,5351,99)
57798,39143
"KRN",101,5352,-1)
0^30
"KRN",101,5352,0)
PXRM SAVE REMINDER^Save Reminder to Host File^^A^^^^^^^^
"KRN",101,5352,1,0)
^^3^3^2980319^^
"KRN",101,5352,1,1,0)
This protocol prompts for a reminder definition to save. It then
"KRN",101,5352,1,2,0)
creates the packed reminder definition, puts it into a host file, whose
"KRN",101,5352,1,3,0)
name the user has input.
"KRN",101,5352,4)
^^^SR
"KRN",101,5352,15)
S VALMBCK="R"
"KRN",101,5352,20)
D EN^PXRMEXSR
"KRN",101,5352,99)
57798,39143
"KRN",101,5353,-1)
0^31
"KRN",101,5353,0)
PXRM SELECT HOST FILE^Select Host File^^A^^^^^^^^
"KRN",101,5353,.1)

"KRN",101,5353,1,0)
^^2^2^2980323^^^
"KRN",101,5353,1,1,0)
This protocol allows the user to select a host file containing a packed
"KRN",101,5353,1,2,0)
reminder definition.
"KRN",101,5353,2,0)
^101.02A^2^1
"KRN",101,5353,2,2,0)
SH
"KRN",101,5353,2,"B","SH",2)

"KRN",101,5353,20)
D SELHF^PXRMEXHF
"KRN",101,5353,99)
57798,39143
"KRN",101,5354,-1)
0^19
"KRN",101,5354,0)
PXRM HANDLE HOST FILE^Handle Reminder Exchange Host File^^M^^^^^^^^
"KRN",101,5354,1,0)
^^2^2^2980324^^
"KRN",101,5354,1,1,0)
This menu protocol provides the menu of options on the screen for
"KRN",101,5354,1,2,0)
processing host files that contain packed reminder definitions.
"KRN",101,5354,10,0)
^101.01PA^3^3
"KRN",101,5354,10,1,0)
5349^LC^5^
"KRN",101,5354,10,1,"^")
PXRM LIST COMPONENTS
"KRN",101,5354,10,2,0)
5347^IR^10^
"KRN",101,5354,10,2,"^")
PXRM INSTALL REMINDER COMPONENTS
"KRN",101,5354,10,3,0)
5351^IS^15^
"KRN",101,5354,10,3,"^")
PXRM INSTALLATION SUMMARY
"KRN",101,5354,26)
D SHOW^VALM
"KRN",101,5354,99)
58049,38987
"KRN",101,5355,-1)
0^26
"KRN",101,5355,0)
PXRM PATIENT DATA CHANGE^PXRM PATIENT DATA CHANGE^^A^^^^^^^^
"KRN",101,5355,1,0)
^^2^2^2981113^^
"KRN",101,5355,1,1,0)
This protocol is to be called by other protocol event points whenever
"KRN",101,5355,1,2,0)
patient data, that can effect clinical reminder evaluation, has changed.
"KRN",101,5355,20)
D DATACHG^PXRMPINF
"KRN",101,5355,99)
57798,41010
"KRN",101,5422,-1)
0^27
"KRN",101,5422,0)
PXRM RECEIVE HL7^Read HL7 strings^^A^^^^^^^^
"KRN",101,5422,20)
D HL7^PXRMHL7(.XQORMSG)
"KRN",101,5422,99)
57887,53741
"KRN",101,5427,-1)
0^2
"KRN",101,5427,0)
PXRM DIALOG DETAILS^Detailed Display^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5427,1,0)
^^1^1^2991005^^^^
"KRN",101,5427,1,1,0)
Basic lists of dialog items.
"KRN",101,5427,2,0)
^101.02A^6^2
"KRN",101,5427,2,5,0)
DD
"KRN",101,5427,2,6,0)
@
"KRN",101,5427,2,"B","@",6)

"KRN",101,5427,2,"B","DD",5)

"KRN",101,5427,4)
^^^
"KRN",101,5427,15)
S VALMBG=1
"KRN",101,5427,20)
D BUILD^PXRMDLG(0)
"KRN",101,5427,99)
58086,34170
"KRN",101,5428,-1)
0^7
"KRN",101,5428,0)
PXRM DIALOG MENU^Dialog Menu^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,5428,4)
25^^^
"KRN",101,5428,10,0)
^101.01PA^12^8
"KRN",101,5428,10,1,0)
5427^DD^2^
"KRN",101,5428,10,1,"^")
PXRM DIALOG DETAILS
"KRN",101,5428,10,2,0)
5429^QU^9^
"KRN",101,5428,10,2,"^")
PXRM DIALOG EXIT
"KRN",101,5428,10,5,0)
5432^DP^3^
"KRN",101,5428,10,5,"^")
PXRM DIALOG P/N TEXT
"KRN",101,5428,10,6,0)
5435^ED^5^
"KRN",101,5428,10,6,"^")
PXRM DIALOG EDIT
"KRN",101,5428,10,8,0)
5489^RI^8^
"KRN",101,5428,10,8,"^")
PXRM REMINDER DETAILS
"KRN",101,5428,10,9,0)
5438^INQ^7^
"KRN",101,5428,10,9,"^")
PXRM GENERAL INQUIRY
"KRN",101,5428,10,10,0)
5595^CO^1^
"KRN",101,5428,10,10,"^")
PXRM DIALOG COPY
"KRN",101,5428,10,12,0)
5599^DT^4^
"KRN",101,5428,10,12,"^")
PXRM DIALOG TEXT
"KRN",101,5428,15)
D PEXIT^PXRMDLG
"KRN",101,5428,26)
D SHOW^VALM
"KRN",101,5428,28)
Select Action: 
"KRN",101,5428,30)
Q
"KRN",101,5428,99)
58118,36132
"KRN",101,5429,-1)
0^6
"KRN",101,5429,0)
PXRM DIALOG EXIT^Quit^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5429,2,0)
^101.02A^2^2
"KRN",101,5429,2,1,0)
Q
"KRN",101,5429,2,2,0)
QU
"KRN",101,5429,2,"B","Q",1)

"KRN",101,5429,2,"B","QU",2)

"KRN",101,5429,15)
D EXIT^PXRMDLG
"KRN",101,5429,99)
57918,55085
"KRN",101,5432,-1)
0^58
"KRN",101,5432,0)
PXRM DIALOG P/N TEXT^Progress Note Text^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5432,2,0)
^101.02A^1^1
"KRN",101,5432,2,1,0)
DP
"KRN",101,5432,2,"B","DP",1)

"KRN",101,5432,4)
^^^
"KRN",101,5432,15)

"KRN",101,5432,20)
D BUILD^PXRMDLG(4)
"KRN",101,5432,99)
58078,34367
"KRN",101,5435,-1)
0^3
"KRN",101,5435,0)
PXRM DIALOG EDIT^Edit/Delete Dialog^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5435,2,0)
^101.02A^^0
"KRN",101,5435,4)
^^^
"KRN",101,5435,10,0)
^101.01PA^^0
"KRN",101,5435,15)
S VALMBG=1
"KRN",101,5435,20)
D EDIT^PXRMDEDT("R",PXRMDIEN) D:$G(VALMBCK)'="Q" BUILD^PXRMDLG(PXRMMODE)
"KRN",101,5435,29)

"KRN",101,5435,99)
58118,31464
"KRN",101,5437,-1)
0^16
"KRN",101,5437,0)
PXRM GENERAL EXIT^Quit^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5437,2,0)
^101.02A^2^2
"KRN",101,5437,2,1,0)
Q
"KRN",101,5437,2,2,0)
QU
"KRN",101,5437,2,"B","Q",1)

"KRN",101,5437,2,"B","QU",2)

"KRN",101,5437,4)
25
"KRN",101,5437,15)
D EXIT^PXRMGEN
"KRN",101,5437,99)
57925,52689
"KRN",101,5438,-1)
0^17
"KRN",101,5438,0)
PXRM GENERAL INQUIRY^Inquiry/Print^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5438,2,0)
^101.02A^3^3
"KRN",101,5438,2,1,0)
I
"KRN",101,5438,2,2,0)
IN
"KRN",101,5438,2,3,0)
INQ
"KRN",101,5438,2,"B","I",1)

"KRN",101,5438,2,"B","IN",2)

"KRN",101,5438,2,"B","INQ",3)

"KRN",101,5438,15)

"KRN",101,5438,20)
D INQUIRE^PXRMGEN
"KRN",101,5438,99)
58003,61890
"KRN",101,5439,-1)
0^15
"KRN",101,5439,0)
PXRM GENERAL EDIT^Edit^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5439,2,0)
^101.02A^2^1
"KRN",101,5439,2,2,0)
ED
"KRN",101,5439,2,"B","ED",2)

"KRN",101,5439,20)
D EDIT^PXRMGEDT(PXRMGTYP,IEN,0)
"KRN",101,5439,99)
57925,52177
"KRN",101,5440,-1)
0^18
"KRN",101,5440,0)
PXRM GENERAL MENU^General Menu^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,5440,4)
25
"KRN",101,5440,10,0)
^101.01PA^4^3
"KRN",101,5440,10,1,0)
5439^ED^1^
"KRN",101,5440,10,1,"^")
PXRM GENERAL EDIT
"KRN",101,5440,10,3,0)
5437^QU^3^
"KRN",101,5440,10,3,"^")
PXRM GENERAL EXIT
"KRN",101,5440,10,4,0)
5438^INQ^2^
"KRN",101,5440,10,4,"^")
PXRM GENERAL INQUIRY
"KRN",101,5440,15)
D PEXIT^PXRMGEN
"KRN",101,5440,26)
D SHOW^VALM
"KRN",101,5440,28)
Select Action: 
"KRN",101,5440,99)
58006,38071
"KRN",101,5474,-1)
0^36
"KRN",101,5474,0)
PXRM SELECTION ITEM^Select an Item^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5474,1,0)
^^2^2^2990927^
"KRN",101,5474,1,1,0)
This protocol is used by the list PXRM SELECTION. The protocol is set-up
"KRN",101,5474,1,2,0)
by the ENTRY action in this list.
"KRN",101,5474,15)

"KRN",101,5474,20)
D SEL^PXRMSEL
"KRN",101,5474,99)
58001,47329
"KRN",101,5475,-1)
0^54
"KRN",101,5475,0)
PXRM SELECTION PRINT ALL^List/Print All^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5475,2,0)
^101.02A^3^1
"KRN",101,5475,2,3,0)
PT
"KRN",101,5475,2,"B","PT",3)

"KRN",101,5475,4)
25
"KRN",101,5475,15)

"KRN",101,5475,20)
D LIST^PXRMSEL
"KRN",101,5475,99)
58078,33216
"KRN",101,5476,-1)
0^38
"KRN",101,5476,0)
PXRM SELECTION MENU^Selection Menu^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,5476,1,0)
^^2^2^3000105^^^^
"KRN",101,5476,1,1,0)
Menu protocol for list PXRM SELECTION. Allows selection or list all.
"KRN",101,5476,1,2,0)
Modified by INIT^PXRMSEL to include PXRM SELECTION ITEM also.
"KRN",101,5476,4)
25
"KRN",101,5476,10,0)
^101.01PA^3^3
"KRN",101,5476,10,1,0)
5475^PT^2^
"KRN",101,5476,10,1,"^")
PXRM SELECTION PRINT ALL
"KRN",101,5476,10,2,0)
5477^QU^3^
"KRN",101,5476,10,2,"^")
PXRM SELECTION EXIT
"KRN",101,5476,10,3,0)
5490^AD^1^
"KRN",101,5476,10,3,"^")
PXRM SELECTION ADD
"KRN",101,5476,15)
D PEXIT^PXRMSEL
"KRN",101,5476,26)
D SHOW^VALM
"KRN",101,5476,28)
Select Item: 
"KRN",101,5476,99)
58083,44614
"KRN",101,5477,-1)
0^35
"KRN",101,5477,0)
PXRM SELECTION EXIT^Quit^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5477,2,0)
^101.02A^2^2
"KRN",101,5477,2,1,0)
Q
"KRN",101,5477,2,2,0)
QU
"KRN",101,5477,2,"B","Q",1)

"KRN",101,5477,2,"B","QU",2)

"KRN",101,5477,4)
25
"KRN",101,5477,15)
D EXIT^PXRMSEL
"KRN",101,5477,99)
57946,43494
"KRN",101,5485,-1)
0^13
"KRN",101,5485,0)
PXRM FINDING GENERAL MENU^Finding Parameter Menu^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,5485,4)
25
"KRN",101,5485,10,0)
^101.01PA^3^2
"KRN",101,5485,10,2,0)
5437^QU^3^
"KRN",101,5485,10,2,"^")
PXRM GENERAL EXIT
"KRN",101,5485,10,3,0)
5438^INQ^1^
"KRN",101,5485,10,3,"^")
PXRM GENERAL INQUIRY
"KRN",101,5485,15)
D PEXIT^PXRMFPAR
"KRN",101,5485,26)
D SHOW^VALM
"KRN",101,5485,28)
Select Action: 
"KRN",101,5485,99)
58007,48637
"KRN",101,5486,-1)
0^33
"KRN",101,5486,0)
PXRM SELECT RESOLUTION^Select Status to Edit: ^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5486,1,0)
^^2^2^2990928^^^
"KRN",101,5486,1,1,0)
This is protocol used by list PXRM FINDING PARAMETER LIST. The protocol is
"KRN",101,5486,1,2,0)
set up by the INIT action in this list.
"KRN",101,5486,10,0)
^101.01PA
"KRN",101,5486,15)

"KRN",101,5486,20)
D SEL^PXRMFPAR
"KRN",101,5486,99)
57978,62578
"KRN",101,5489,-1)
0^28
"KRN",101,5489,0)
PXRM REMINDER DETAILS^Reminder Inquiry^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5489,1,0)
^^2^2^2991005^^
"KRN",101,5489,1,1,0)
This protocol displays a reminder inquiry, which is a listing of a
"KRN",101,5489,1,2,0)
complete reminder definition.
"KRN",101,5489,2,0)
^101.02A^3^1
"KRN",101,5489,2,3,0)
RI
"KRN",101,5489,2,"B","RI",3)

"KRN",101,5489,15)
S VALMBG=1
"KRN",101,5489,20)
D BUILD^PXRMDLG(3)
"KRN",101,5489,99)
58078,34081
"KRN",101,5490,-1)
0^34
"KRN",101,5490,0)
PXRM SELECTION ADD^Add^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5490,2,0)
^101.02A^2^2
"KRN",101,5490,2,1,0)
A
"KRN",101,5490,2,2,0)
AD
"KRN",101,5490,2,"B","A",1)

"KRN",101,5490,2,"B","AD",2)

"KRN",101,5490,15)
S VALMBG=1
"KRN",101,5490,20)
D ADD^PXRMSEL
"KRN",101,5490,99)
57985,50655
"KRN",101,5500,-1)
0^57
"KRN",101,5500,0)
PXRM DIALOG COPY COMPONENT^Copy Dialog^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5500,15)
S VALMBG=1,VALMBCK="R"
"KRN",101,5500,20)
D COPY^PXRMSEL
"KRN",101,5500,99)
57987,47851
"KRN",101,5501,-1)
0^14
"KRN",101,5501,0)
PXRM FINDING SELECTION MENU^^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,5501,1,0)
^^3^3^3000105^^^^
"KRN",101,5501,1,1,0)
Menu protocol for list PXRM SELECTION for finding type parameters. Allows
"KRN",101,5501,1,2,0)
selection or list all.  Modified by INIT^PXRMSEL to include PXRM SELECTION
"KRN",101,5501,1,3,0)
ITEM also.
"KRN",101,5501,4)
25
"KRN",101,5501,10,0)
^101.01PA^2^2
"KRN",101,5501,10,1,0)
5475^PT^1^
"KRN",101,5501,10,1,"^")
PXRM SELECTION PRINT ALL
"KRN",101,5501,10,2,0)
5477^QU^3^
"KRN",101,5501,10,2,"^")
PXRM SELECTION EXIT
"KRN",101,5501,15)
D PEXIT^PXRMGEN
"KRN",101,5501,26)
D SHOW^VALM
"KRN",101,5501,99)
58083,63356
"KRN",101,5502,-1)
0^52
"KRN",101,5502,0)
PXRM DIALOG SELECTION MENU (DLGE)^Dialog Selection Menu^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,5502,1,0)
^^1^1^3000111^^^^
"KRN",101,5502,1,1,0)
Special menu protocol for list PXRM SELECTION. Only used for dialog edit.
"KRN",101,5502,4)
25
"KRN",101,5502,10,0)
^101.01PA^6^6
"KRN",101,5502,10,1,0)
5490^AD^1^
"KRN",101,5502,10,1,"^")
PXRM SELECTION ADD
"KRN",101,5502,10,2,0)
5500^CO^2^
"KRN",101,5502,10,2,"^")
PXRM DIALOG COPY COMPONENT
"KRN",101,5502,10,3,0)
5503^CV^3^
"KRN",101,5502,10,3,"^")
PXRM SELECTION VIEW (CV)
"KRN",101,5502,10,4,0)
5475^PT^5^
"KRN",101,5502,10,4,"^")
PXRM SELECTION PRINT ALL
"KRN",101,5502,10,5,0)
5477^QU^6^
"KRN",101,5502,10,5,"^")
PXRM SELECTION EXIT
"KRN",101,5502,10,6,0)
5545^INQ^5^
"KRN",101,5502,10,6,"^")
PXRM DIALOG EDIT INQUIRY
"KRN",101,5502,15)
D PEXIT^PXRMGEN
"KRN",101,5502,26)
D SHOW^VALM
"KRN",101,5502,99)
58084,61497
"KRN",101,5503,-1)
0^51
"KRN",101,5503,0)
PXRM SELECTION VIEW (CV)^Change View^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5503,1,0)
^^1^1^2991222^^^
"KRN",101,5503,1,1,0)
Used in dialog edit only.
"KRN",101,5503,2,0)
^101.02A^^0
"KRN",101,5503,15)
S VALMBG=1
"KRN",101,5503,20)
D CHNG^PXRMSEL
"KRN",101,5503,99)
58000,62477
"KRN",101,5545,-1)
0^4
"KRN",101,5545,0)
PXRM DIALOG EDIT INQUIRY^Inquiry/Print^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5545,2,0)
^101.02A^3^3
"KRN",101,5545,2,1,0)
I
"KRN",101,5545,2,2,0)
IN
"KRN",101,5545,2,3,0)
INQ
"KRN",101,5545,2,"B","I",1)

"KRN",101,5545,2,"B","IN",2)

"KRN",101,5545,2,"B","INQ",3)

"KRN",101,5545,15)
S VALMBCK="R"
"KRN",101,5545,20)
D INQ1^PXRMDLST
"KRN",101,5545,99)
58003,63299
"KRN",101,5550,-1)
0^53
"KRN",101,5550,0)
PXRM DIALOG SELECTION MENU (DLG)^Selection Menu^^M^^^^^^^^
"KRN",101,5550,1,0)
^^2^2^3000105^^^^
"KRN",101,5550,1,1,0)
Menu protocol for list PXRM SELECTION. Allows selection, list all or
"KRN",101,5550,1,2,0)
change view. Modified by INIT^PXRMSEL to include PXRM SELECTION ITEM also.
"KRN",101,5550,4)
25
"KRN",101,5550,10,0)
^101.01PA^6^5
"KRN",101,5550,10,1,0)
5475^PT^3^
"KRN",101,5550,10,1,"^")
PXRM SELECTION PRINT ALL
"KRN",101,5550,10,2,0)
5490^AD^1^^^Add Reminder Dialog
"KRN",101,5550,10,2,"^")
PXRM SELECTION ADD
"KRN",101,5550,10,3,0)
5477^QU^6^
"KRN",101,5550,10,3,"^")
PXRM SELECTION EXIT
"KRN",101,5550,10,4,0)
5503^CV^2^
"KRN",101,5550,10,4,"^")
PXRM SELECTION VIEW (CV)
"KRN",101,5550,10,6,0)
5589^RN^5^
"KRN",101,5550,10,6,"^")
PXRM SELECTION VIEW TOGGLE
"KRN",101,5550,15)
D PEXIT^PXRMSEL
"KRN",101,5550,26)
D SHOW^VALM
"KRN",101,5550,28)
Select Item:
"KRN",101,5550,99)
58083,52469
"KRN",101,5575,-1)
0^40
"KRN",101,5575,0)
PXRM DIALOG/REMINDER MENU^^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,5575,1,0)
^^1^1^3000105^^^^
"KRN",101,5575,1,1,0)
Menu protocol for list PXRM SELECTION. Allows link reminder or quit.
"KRN",101,5575,4)
25^5
"KRN",101,5575,10,0)
^101.01PA^10^5
"KRN",101,5575,10,2,0)
5477^QU^6^
"KRN",101,5575,10,2,"^")
PXRM SELECTION EXIT
"KRN",101,5575,10,4,0)
5582^AR^2^
"KRN",101,5575,10,4,"^")
PXRM SELECTION VIEW (AR)
"KRN",101,5575,10,6,0)
5584^LR^4^
"KRN",101,5575,10,6,"^")
PXRM SELECTION VIEW (LR)
"KRN",101,5575,10,9,0)
5589^RN^5^
"KRN",101,5575,10,9,"^")
PXRM SELECTION VIEW TOGGLE
"KRN",101,5575,10,10,0)
5503^CV^3^
"KRN",101,5575,10,10,"^")
PXRM SELECTION VIEW (CV)
"KRN",101,5575,15)
D PEXIT^PXRMSEL
"KRN",101,5575,26)
D SHOW^VALM
"KRN",101,5575,99)
58078,37868
"KRN",101,5582,-1)
0^44
"KRN",101,5582,0)
PXRM SELECTION VIEW (AR)^All reminders^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5582,1,0)
^^1^1^2991230^^^
"KRN",101,5582,1,1,0)
Used in dialog link only. Reminders by name.
"KRN",101,5582,20)
D CHNGR^PXRMSEL("A")
"KRN",101,5582,99)
58062,58237
"KRN",101,5584,-1)
0^43
"KRN",101,5584,0)
PXRM SELECTION VIEW (LR)^Linked Reminders^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5584,1,0)
^^1^1^2991230^^^
"KRN",101,5584,1,1,0)
Used in reminder link only. Linked reminders by name.
"KRN",101,5584,20)
D CHNGR^PXRMSEL("L")
"KRN",101,5584,99)
58064,38410
"KRN",101,5589,-1)
0^45
"KRN",101,5589,0)
PXRM SELECTION VIEW TOGGLE^Name/Print Name^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5589,1,0)
^^1^1^2991230^^^^
"KRN",101,5589,1,1,0)
Toggle between reminder name and print name.
"KRN",101,5589,20)
D CHNGV^PXRMSEL
"KRN",101,5589,99)
58072,55261
"KRN",101,5590,-1)
0^47
"KRN",101,5590,0)
PXRM DIALOG HISTORY^Dialog History Menu^^M^^^^^^^^CLINICAL REMINDERS
"KRN",101,5590,4)
35
"KRN",101,5590,10,0)
^101.01PA^6^3
"KRN",101,5590,10,3,0)
5429^QU^4^
"KRN",101,5590,10,3,"^")
PXRM DIALOG EXIT
"KRN",101,5590,10,5,0)
5592^LR^2^
"KRN",101,5590,10,5,"^")
PXRM DIALOG LINK
"KRN",101,5590,10,6,0)
5591^AD^1^
"KRN",101,5590,10,6,"^")
PXRM DIALOG ADD
"KRN",101,5590,15)
D PEXIT^PXRMDLGH
"KRN",101,5590,20)

"KRN",101,5590,26)
D SHOW^VALM
"KRN",101,5590,28)
Select Action:
"KRN",101,5590,99)
58171,38139
"KRN",101,5591,-1)
0^48
"KRN",101,5591,0)
PXRM DIALOG ADD^Autogenerate Dialog^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5591,2,0)
^101.02A^1^1
"KRN",101,5591,2,1,0)
AD
"KRN",101,5591,2,"B","AD",1)

"KRN",101,5591,15)
D INIT^PXRMDLGH
"KRN",101,5591,20)
D ADD^PXRMDBLD(PXRMITEM)
"KRN",101,5591,99)
58171,38051
"KRN",101,5592,-1)
0^49
"KRN",101,5592,0)
PXRM DIALOG LINK^Link Reminder^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5592,2,0)
^101.02A^2^1
"KRN",101,5592,2,2,0)
LR
"KRN",101,5592,2,"B","LR",2)

"KRN",101,5592,15)
D INIT^PXRMDLGH
"KRN",101,5592,20)
D RLINK^PXRMDLGZ(PXRMITEM)
"KRN",101,5592,99)
58072,60037
"KRN",101,5594,-1)
0^50
"KRN",101,5594,0)
PXRM DIALOG SELECTION ITEM^Select an Element^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5594,1,0)
^^2^2^3000113^^^
"KRN",101,5594,1,1,0)
This protocol is used by the list PXRM DIALOG LISTS. The protocol is
"KRN",101,5594,1,2,0)
set-up by the ENTRY action in this list.
"KRN",101,5594,20)
D SEL^PXRMDLG,BUILD^PXRMDLG(PXRMMODE)
"KRN",101,5594,99)
58086,59802
"KRN",101,5595,-1)
0^1
"KRN",101,5595,0)
PXRM DIALOG COPY^Copy Dialog^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5595,1,0)
^^1^1^3000113^^
"KRN",101,5595,1,1,0)
Copy current reminder dialog.
"KRN",101,5595,4)
^^^
"KRN",101,5595,15)
S VALMBG=1
"KRN",101,5595,20)
D COPYS^PXRMSEL
"KRN",101,5595,99)
58086,35083
"KRN",101,5599,-1)
0^59
"KRN",101,5599,0)
PXRM DIALOG TEXT^Dialog Text^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5599,2,0)
^101.02A^1^1
"KRN",101,5599,2,1,0)
DT
"KRN",101,5599,2,"B","DT",1)

"KRN",101,5599,15)

"KRN",101,5599,20)
D BUILD^PXRMDLG(1)
"KRN",101,5599,99)
58113,46233
"KRN",101,5654,-1)
1^5
"KRN",101,5654,0)
PXRM DIALOG ELEMENT EDIT
"KRN",101,5655,-1)
1^8
"KRN",101,5655,0)
PXRM DIALOG SELECTION MENU
"KRN",101,5656,-1)
1^9
"KRN",101,5656,0)
PXRM DIALOG TEST
"KRN",101,5657,-1)
1^10
"KRN",101,5657,0)
PXRM DIALOG VIEW
"KRN",101,5658,-1)
1^37
"KRN",101,5658,0)
PXRM SELECTION LIST
"KRN",101,5659,-1)
1^39
"KRN",101,5659,0)
PXRM SELECTION VIEW
"KRN",101,5660,-1)
1^41
"KRN",101,5660,0)
PXRM DIALOG SELECTION MENU (CV)
"KRN",101,5661,-1)
1^55
"KRN",101,5661,0)
PXRM SELECTION VIEW (DV)
"KRN",101,5662,-1)
1^56
"KRN",101,5662,0)
PXRM SELECTION VIEW (RV)
"KRN",409.61,728,-1)
0^10
"KRN",409.61,728,0)
PXRM REMINDER EXCHANGE^1^^80^5^14^0^1^^PXRM EXCH MENU^Clinical Reminder Exchange^1^^1
"KRN",409.61,728,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,728,"ARRAY")
 ^TMP("PXRMEXLR",$J)
"KRN",409.61,728,"COL",0)
^409.621^3^3
"KRN",409.61,728,"COL",1,0)
RNAME^5^30^
"KRN",409.61,728,"COL",2,0)
PNAME^45^30^
"KRN",409.61,728,"COL",3,0)
INACTIVE^73^8^^^0
"KRN",409.61,728,"COL","AIDENT",0,3)

"KRN",409.61,728,"COL","B","INACTIVE",3)

"KRN",409.61,728,"COL","B","PNAME",2)

"KRN",409.61,728,"COL","B","RNAME",1)

"KRN",409.61,728,"FNL")
D EXIT^PXRMEX
"KRN",409.61,728,"HDR")
D HDR^PXRMEX
"KRN",409.61,728,"HLP")
D HELP^PXRMEX
"KRN",409.61,728,"INIT")
D INIT^PXRMEX
"KRN",409.61,729,-1)
0^6
"KRN",409.61,729,0)
PXRM EX MAILMAN MESSAGE^1^^80^5^14^0^1^^PXRM HANDLE MAIL MESSAGE^Process Mailman Message^1^^1
"KRN",409.61,729,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,729,"ARRAY")
 ^TMP("PXRMEXTXT",$J)
"KRN",409.61,729,"COL",0)
^409.621^1^1
"KRN",409.61,729,"COL",1,0)
HEADER^2^30^Reminder Summary
"KRN",409.61,729,"COL","B","HEADER",1)

"KRN",409.61,729,"FNL")
D EXIT^PXRMEXMM
"KRN",409.61,729,"HDR")
D HDR^PXRMEXMM
"KRN",409.61,729,"HLP")
D HELP^PXRMEXMM
"KRN",409.61,729,"INIT")

"KRN",409.61,730,-1)
0^5
"KRN",409.61,730,0)
PXRM EX LIST COMPONENTS^2^^80^5^14^^1^^^Reminder Components
"KRN",409.61,730,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,730,"ARRAY")
 ^TMP("PXRMEXLC",$J)
"KRN",409.61,730,"COL",0)
^409.621^5^5
"KRN",409.61,730,"COL",1,0)
COMPONENT^2^10^Component
"KRN",409.61,730,"COL",2,0)
FILE^14^5^File
"KRN",409.61,730,"COL",3,0)
ENTRY^21^5^Entry
"KRN",409.61,730,"COL",4,0)
EXISTS^74^6^Exists
"KRN",409.61,730,"COL",5,0)
CATEGORY^61^8^
"KRN",409.61,730,"COL","B","CATEGORY",5)

"KRN",409.61,730,"COL","B","COMPONENT",1)

"KRN",409.61,730,"COL","B","ENTRY",3)

"KRN",409.61,730,"COL","B","EXISTS",4)

"KRN",409.61,730,"COL","B","FILE",2)

"KRN",409.61,730,"INIT")
D LC^PXRMEXLC
"KRN",409.61,731,-1)
0^7
"KRN",409.61,731,0)
PXRM EX MAIN HELP^2^^80^3^20^^1^^^Reminder Exchange Main Help
"KRN",409.61,731,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,731,"ARRAY")
 ^TMP("PXRMEXMH",$J)
"KRN",409.61,731,"FNL")

"KRN",409.61,731,"HDR")

"KRN",409.61,731,"INIT")
D LOAD^PXRMEXMH
"KRN",409.61,732,-1)
0^4
"KRN",409.61,732,0)
PXRM EX INSTALL SUMMARY^2^^132^5^14^^1^^^Installation Summary
"KRN",409.61,732,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,732,"ARRAY")
 ^TMP("PXRMEXIS",$J)
"KRN",409.61,732,"COL",0)
^409.621^4^4
"KRN",409.61,732,"COL",1,0)
COMPONENT^2^10^Component
"KRN",409.61,732,"COL",2,0)
NAME^14^4^Name
"KRN",409.61,732,"COL",3,0)
ACTION^54^6^Action
"KRN",409.61,732,"COL",4,0)
NEW NAME^63^8^New Name
"KRN",409.61,732,"COL","B","ACTION",3)

"KRN",409.61,732,"COL","B","COMPONENT",1)

"KRN",409.61,732,"COL","B","NAME",2)

"KRN",409.61,732,"COL","B","NEW NAME",4)

"KRN",409.61,732,"HDR")
D HDR^PXRMEXIS
"KRN",409.61,733,-1)
0^3
"KRN",409.61,733,0)
PXRM EX HOST FILE^1^^80^5^14^0^1^^PXRM HANDLE HOST FILE^Process Host File^1^^1
"KRN",409.61,733,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,733,"ARRAY")
 ^TMP("PXRMEXTXT",$J)
"KRN",409.61,733,"COL",0)
^409.621^1^1
"KRN",409.61,733,"COL",1,0)
HEADER^2^30^Reminder Summary
"KRN",409.61,733,"COL","B","HEADER",1)

"KRN",409.61,733,"FNL")
D EXIT^PXRMEXHF
"KRN",409.61,733,"HDR")
D HDR^PXRMEXHF
"KRN",409.61,733,"HLP")
D HELP^PXRMEXHF
"KRN",409.61,746,-1)
0^1
"KRN",409.61,746,0)
PXRM DIALOG LIST^1^^120^4^19^0^1^^PXRM DIALOG MENU^Dialog Edit List^1^^1
"KRN",409.61,746,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,746,"ARRAY")
 ^TMP("PXRMDLG",$J)
"KRN",409.61,746,"COL",0)
^409.621^3^3
"KRN",409.61,746,"COL",1,0)
HEADER1^2^30
"KRN",409.61,746,"COL",2,0)
HEADER2^16^50
"KRN",409.61,746,"COL",3,0)
HEADER3^73^8
"KRN",409.61,746,"COL","B","HEADER1",1)

"KRN",409.61,746,"COL","B","HEADER2",2)

"KRN",409.61,746,"COL","B","HEADER3",3)

"KRN",409.61,746,"FNL")
D EXIT^PXRMDLG
"KRN",409.61,746,"HDR")
D HDR^PXRMDLG
"KRN",409.61,746,"HLP")
D HELP^PXRMDLG
"KRN",409.61,746,"INIT")
D INIT^PXRMDLG
"KRN",409.61,748,-1)
0^9
"KRN",409.61,748,0)
PXRM GENERAL EDIT/LIST^1^^120^5^20^0^1^^PXRM GENERAL MENU^Edit List^1^^1
"KRN",409.61,748,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,748,"ARRAY")
 ^TMP("PXRMGEN",$J)
"KRN",409.61,748,"COL",0)
^409.621^3^3
"KRN",409.61,748,"COL",1,0)
HEADER1^2^25
"KRN",409.61,748,"COL",2,0)
HEADER2^30^40
"KRN",409.61,748,"COL",3,0)
HEADER3^72^8^
"KRN",409.61,748,"COL","B","HEADER1",1)

"KRN",409.61,748,"COL","B","HEADER2",2)

"KRN",409.61,748,"COL","B","HEADER3",3)

"KRN",409.61,748,"FNL")
D EXIT^PXRMGEN
"KRN",409.61,748,"HDR")
D HDR^PXRMGEN
"KRN",409.61,748,"HLP")
D HELP^PXRMGEN
"KRN",409.61,748,"INIT")
D INIT^PXRMGEN
"KRN",409.61,754,-1)
0^11
"KRN",409.61,754,0)
PXRM SELECTION^1^^120^5^20^0^1^^PXRM SELECTION MENU^Selection List^1^^1
"KRN",409.61,754,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,754,"ARRAY")
 ^TMP("PXRMSEL",$J)
"KRN",409.61,754,"COL",0)
^409.621^3^3
"KRN",409.61,754,"COL",1,0)
HEADER1^1^5
"KRN",409.61,754,"COL",2,0)
HEADER2^7^65
"KRN",409.61,754,"COL",3,0)
HEADER3^72^40
"KRN",409.61,754,"COL","B","HEADER1",1)

"KRN",409.61,754,"COL","B","HEADER2",2)

"KRN",409.61,754,"COL","B","HEADER3",3)

"KRN",409.61,754,"FNL")
D EXIT^PXRMSEL
"KRN",409.61,754,"HDR")
D HDR^PXRMSEL
"KRN",409.61,754,"HLP")
D HELP^PXRMSEL
"KRN",409.61,754,"INIT")
D INIT^PXRMSEL
"KRN",409.61,756,-1)
0^8
"KRN",409.61,756,0)
PXRM FINDING PARAMETER LIST^1^^120^5^20^0^1^^PXRM FINDING GENERAL MENU^Finding Type Parameter List^1^^1
"KRN",409.61,756,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,756,"ARRAY")
 ^TMP("PXRMFP",$J)
"KRN",409.61,756,"COL",0)
^409.621^3^3
"KRN",409.61,756,"COL",1,0)
HEADER1^3^24
"KRN",409.61,756,"COL",2,0)
HEADER2^30^40
"KRN",409.61,756,"COL",3,0)
HEADER3^72^8
"KRN",409.61,756,"COL","B","HEADER1",1)

"KRN",409.61,756,"COL","B","HEADER2",2)

"KRN",409.61,756,"COL","B","HEADER3",3)

"KRN",409.61,756,"FNL")
D EXIT^PXRMFPAR
"KRN",409.61,756,"HDR")
D HDR^PXRMFPAR
"KRN",409.61,756,"HLP")
D HELP^PXRMFPAR
"KRN",409.61,756,"INIT")
D INIT^PXRMFPAR
"KRN",409.61,765,-1)
0^2
"KRN",409.61,765,0)
PXRM DIALOG MAIN HELP^2^^80^3^20^^1
"KRN",409.61,765,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,765,"ARRAY")
 ^TMP("PXRMDHLP",$J)
"KRN",409.61,765,"INIT")
D LOAD^PXRMDHLP
"KRN",409.61,771,-1)
0^12
"KRN",409.61,771,0)
PXRM DIALOG HISTORY^1^^120^4^19^0^1^^PXRM DIALOG HISTORY^Dialog Selection List^1^^1
"KRN",409.61,771,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,771,"ARRAY")
 ^TMP("PXRMDLG",$J)
"KRN",409.61,771,"COL",0)
^409.621^4^4
"KRN",409.61,771,"COL",1,0)
HEADER1^1^5^ Item
"KRN",409.61,771,"COL",2,0)
HEADER2^7^33^Dialog Name
"KRN",409.61,771,"COL",3,0)
HEADER3^40^20^Latest Update
"KRN",409.61,771,"COL",4,0)
HEADER4^60^20^Linked Reminders
"KRN",409.61,771,"COL","B","HEADER1",1)

"KRN",409.61,771,"COL","B","HEADER2",2)

"KRN",409.61,771,"COL","B","HEADER3",3)

"KRN",409.61,771,"COL","B","HEADER4",4)

"KRN",409.61,771,"FNL")
D EXIT^PXRMDLGH
"KRN",409.61,771,"HDR")
D HDR^PXRMDLGH
"KRN",409.61,771,"HLP")
D HELP^PXRMDLGH
"KRN",409.61,771,"INIT")
D INIT^PXRMDLGH
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PGL",801.41,0,2,2)
SOURCE REMINDER^P811.9'^PXD(811.9,^0;2^Q
"PGL",801.41,0,15,55)
RESULT GROUP/ELEMENT^*P801.41'^PXRMD(801.41,^0;15^S DIC("S")="I ""ST""[$P(^(0),U,4)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",801.41,1,3,13)
RESOLUTION TYPE^P801.9'^PXRMD(801.9,^1;3^Q
"PGL",801.41,1,4,14)
FINDING TYPE^P801.45'^PXRMD(801.45,^1;4^Q
"PGL",801.41,1,5,15)
FINDING ITEM^V^^1;5^Q
"PGL",801.41,1,7,17)
ORDERABLE ITEM^P101.43'^ORD(101.43,^1;7^Q
"PGL",801.41,99,3,99.2)
CHANGED BY^P200'^VA(200,^99;3^Q
"PGL",801.41,99,4,99.3)
AUTO GENERATED BY^P200'^VA(200,^99;4^Q
"PGL",801.412,0,2,2)
ITEM^R*P801.41'^PXRMD(801.41,^0;2^D SCREEN^PXRMDD41 D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",801.45,0,2,.02)
RELATED GUI PROCESS^P801.42'^PXRMD(801.42,^0;2^Q
"PGL",801.9,0,5,.05)
CREATOR^P200'^VA(200,^0;5^Q
"PGL",811.5,0,3,.03)
SPONSOR^P811.6^PXRMD(811.6,^0;3^Q
"PGL",811.9,0,2,1)
REMINDER TYPE^P811.8'^PXD(811.8,^0;2^Q
"PGL",811.9,0,5,1.4)
RELATED REMINDER GUIDELINE^*P811.9^PXD(811.9,^0;5^S DIC("S")="I $E($P(^(0),U,1),1,4)=""VA-*""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",811.9,51,1,51)
LINKED REMINDER DIALOG^*P801.41'^PXRMD(801.41,^51;1^S DIC("S")="I $P(^(0),U,4)=""R""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",9999999.64,0,3,.03)
CATEGORY^R*P9999999.64'^AUTTHF(^0;3^S DIC("S")="I $P(^(0),U,10)'=""F""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PKG",364,-1)
1^1
"PKG",364,0)
CLINICAL REMINDERS^PXRM^Clinical Reminders^^^3000614
"PKG",364,5)
SALT LAKE CITY
"PKG",364,7)
^^I
"PKG",364,22,0)
^9.49I^1^1
"PKG",364,22,1,0)
1.5^3000619
"PKG",364,22,1,1,0)
^^2^2^3000619
"PKG",364,22,1,1,1,0)
This build installs Clinical Reminders V1.5 as a separate package from the
"PKG",364,22,1,1,2,0)
Patient Care Encounter (PCE) package. 
"PKG",364,"VERSION")
1.5
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
177
"RTN","PXRM")
0^1^B16714926
"RTN","PXRM",1,0)
PXRM ; SLC/PKR - Clinical Reminders entry points. ; 06/07/2000
"RTN","PXRM",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRM",3,0)
 ;
"RTN","PXRM",4,0)
 ;=======================================================================
"RTN","PXRM",5,0)
MAIN(DFN,PXRMITEM,PXRHM,NODISC) ;Main driver for clinical reminders.
"RTN","PXRM",6,0)
 ;INPUT  DFN - Pointer to Patient File (#2)
"RTN","PXRM",7,0)
 ;       PXRMITEM - The reminder to evaluate. This is the internal
"RTN","PXRM",8,0)
 ;       entry number in file #811.9.
"RTN","PXRM",9,0)
 ;       PXRHM - Flag to indicate level of information requested.
"RTN","PXRM",10,0)
 ;         0 - Reminders DUE NOW only (CLINICAL REMINDERS DUE
"RTN","PXRM",11,0)
 ;             HS component)
"RTN","PXRM",12,0)
 ;         1 - All Reminders with Next and Last Information
"RTN","PXRM",13,0)
 ;             (CLINICAL REMINDERS SUMMARY HS component)
"RTN","PXRM",14,0)
 ;         5 - Health Maintenance (CLINICAL REMINDERS MAINTENANCE
"RTN","PXRM",15,0)
 ;              HS component)
"RTN","PXRM",16,0)
 ;        NODISC - (optional) if this is true then the disclaimer
"RTN","PXRM",17,0)
 ;                 will not be loaded.
"RTN","PXRM",18,0)
 ;
"RTN","PXRM",19,0)
 ;OUTPUT  ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)=STATUS_U_DUE DATE_U_LAST DONE
"RTN","PXRM",20,0)
 ;        where PXRMRNAM is the PRINT NAME or if it is undefined then
"RTN","PXRM",21,0)
 ;        it is the NAME.
"RTN","PXRM",22,0)
 ;        For the Clinical Maintenance component, PXRHM=5, there is 
"RTN","PXRM",23,0)
 ;        subsequent output of the form
"RTN","PXRM",24,0)
 ;        ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM,"TXT",N)=TEXT
"RTN","PXRM",25,0)
 ;        where N is a number and TEXT is a text string.
"RTN","PXRM",26,0)
 ;
"RTN","PXRM",27,0)
 ;        If NODISC is false or not present then the disclaimer will
"RTN","PXRM",28,0)
 ;        be loaded into ^TMP("PXRM",$J,"DISC",N).
"RTN","PXRM",29,0)
 ;
"RTN","PXRM",30,0)
 ;        The calling application can display the contents of these
"RTN","PXRM",31,0)
 ;        two ^TMP arrays as it chooses. The caller should also make
"RTN","PXRM",32,0)
 ;        sure the ^TMP globals are killed before it exits.
"RTN","PXRM",33,0)
 ;
"RTN","PXRM",34,0)
 ;These are the reminder evaluation "global" variables.
"RTN","PXRM",35,0)
 N PXRMAGE,PXRMDOB,PXRMDFN,PXRMDOD,PXRMPID,PXRMRNAM,PXRMRACE,PXRMSEX
"RTN","PXRM",36,0)
 N PXRMSSN,PXRMTXEV
"RTN","PXRM",37,0)
 S PXRMPID="PXRM"_PXRMITEM_$$NOW^XLFDT
"RTN","PXRM",38,0)
 ;
"RTN","PXRM",39,0)
 ;Set the error handler to the PXRMERRH routine. Use the new style of
"RTN","PXRM",40,0)
 ;error trapping.
"RTN","PXRM",41,0)
 N $ES,$ET
"RTN","PXRM",42,0)
 S $ET="D ERRHDLR^PXRMERRH"
"RTN","PXRM",43,0)
 ;
"RTN","PXRM",44,0)
 ;Initialize the working array.
"RTN","PXRM",45,0)
 K ^TMP(PXRMPID,$J)
"RTN","PXRM",46,0)
 ;
"RTN","PXRM",47,0)
 ;Establish the main findings evaluation variables.
"RTN","PXRM",48,0)
 N DUE,DUEDATE,FIEVAL,FREQ,PCLOGIC,RESDATE,RESLOGIC
"RTN","PXRM",49,0)
 S (DUE,DUEDATE,FREQ,RESDATE)=0
"RTN","PXRM",50,0)
 S (PCLOGIC,RESLOGIC)=""
"RTN","PXRM",51,0)
 ;
"RTN","PXRM",52,0)
 ;Make sure the reminder exists.
"RTN","PXRM",53,0)
 I '$D(^PXD(811.9,PXRMITEM)) D  G EXIT
"RTN","PXRM",54,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","NO REMINDER")="ITEM "_$G(PXRMITEM)_" IS NOT A VALID REMINDER ITEM"
"RTN","PXRM",55,0)
 ;
"RTN","PXRM",56,0)
 N D00
"RTN","PXRM",57,0)
 S D00=^PXD(811.9,PXRMITEM,0)
"RTN","PXRM",58,0)
 S PXRMRNAM=$P(D00,U,3)
"RTN","PXRM",59,0)
 ;If the print name is null use the .01.
"RTN","PXRM",60,0)
 I PXRMRNAM="" S PXRMRNAM=$P(D00,U,1)
"RTN","PXRM",61,0)
 ;
"RTN","PXRM",62,0)
 ;Make sure the reminder is active.
"RTN","PXRM",63,0)
 I $P(D00,U,6) D  G OUTPUT
"RTN","PXRM",64,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","INACTIVE")="The reminder "_PXRMRNAM_" was inactivated "_$$FMTE^XLFDT($P(D00,U,7),5)
"RTN","PXRM",65,0)
 I $L(PXRMRNAM)=0 S PXRMRNAM=$P($G(^PXD(811.9,PXRMITEM,0)),U,1)
"RTN","PXRM",66,0)
 ;
"RTN","PXRM",67,0)
 ;Establish the patient demographic information. This call defines
"RTN","PXRM",68,0)
 ;PXRMDFN and locks that patient cache.
"RTN","PXRM",69,0)
 N TEMP
"RTN","PXRM",70,0)
 S TEMP=$$DEM^PXRMPINF(DFN)
"RTN","PXRM",71,0)
 I TEMP="NO PATIENT" D  G EXIT
"RTN","PXRM",72,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","PATIENT","NO PAT")="DFN "_DFN_" IS NOT A VALID PATIENT"
"RTN","PXRM",73,0)
 . S PCLOGIC=0
"RTN","PXRM",74,0)
 I TEMP="NO LOCK" D  G OUTPUT
"RTN","PXRM",75,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","PATIENT","NO LOCK")="NO LOCK"
"RTN","PXRM",76,0)
 . S PCLOGIC=0
"RTN","PXRM",77,0)
 ;
"RTN","PXRM",78,0)
 ;Check for a date of death.
"RTN","PXRM",79,0)
 I $L(PXRMDOD)>0 D
"RTN","PXRM",80,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","DEAD")=""
"RTN","PXRM",81,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"DEAD")="Patient is deceased."
"RTN","PXRM",82,0)
 ;
"RTN","PXRM",83,0)
 ;If the component is CR and the patient is deceased we are done.
"RTN","PXRM",84,0)
 I PXRHM=0,$L(PXRMDOD)>0 G OUTPUT
"RTN","PXRM",85,0)
 ;
"RTN","PXRM",86,0)
 ;Check for a sex specific reminder.
"RTN","PXRM",87,0)
 N SEXOK
"RTN","PXRM",88,0)
 S SEXOK=$$SEX^PXRMLOG
"RTN","PXRM",89,0)
 ;If the patient is the wrong sex then don't do anything else.
"RTN","PXRM",90,0)
 I 'SEXOK D  G OUTPUT
"RTN","PXRM",91,0)
 . S PCLOGIC=0
"RTN","PXRM",92,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","SEX")=""
"RTN","PXRM",93,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","SEX")="Patient is the wrong sex!"
"RTN","PXRM",94,0)
 ;
"RTN","PXRM",95,0)
 ;Evaluate the findings.
"RTN","PXRM",96,0)
 D EVAL^PXRMEVFI(DFN,.FIEVAL)
"RTN","PXRM",97,0)
 ;
"RTN","PXRM",98,0)
 ;Evaluate the Patient Cohort Logic.
"RTN","PXRM",99,0)
 D EVALPCL^PXRMLOG(.FREQ,.PCLOGIC,.FIEVAL)
"RTN","PXRM",100,0)
 ;
"RTN","PXRM",101,0)
 ;Evaluate the resolution logic and get the last resolution date.
"RTN","PXRM",102,0)
 D EVALRESL^PXRMLOG(.RESDATE,.RESLOGIC,.FIEVAL)
"RTN","PXRM",103,0)
 ;
"RTN","PXRM",104,0)
 ;If the reminder is applicable calculate the due date.
"RTN","PXRM",105,0)
 I PCLOGIC D DUE^PXRMDATE(RESDATE,FREQ,.DUE,.DUEDATE)
"RTN","PXRM",106,0)
 ;
"RTN","PXRM",107,0)
OUTPUT ;Prepare the final output.
"RTN","PXRM",108,0)
 D FINAL^PXRMFOUT(PCLOGIC,RESLOGIC,DUE,DUEDATE,RESDATE,FREQ,.FIEVAL)
"RTN","PXRM",109,0)
 ;
"RTN","PXRM",110,0)
 ;Unlock the patient cache
"RTN","PXRM",111,0)
EXIT I $D(PXRMDFN) D UNLOCKPC^PXRMPINF(PXRMDFN)
"RTN","PXRM",112,0)
 ;
"RTN","PXRM",113,0)
 ;Kill the working arrays unless this was a development run.
"RTN","PXRM",114,0)
 I $D(PXRMDEV) D
"RTN","PXRM",115,0)
 . S PXRMID=PXRMPID
"RTN","PXRM",116,0)
 . M FIEV=FIEVAL
"RTN","PXRM",117,0)
 . S FIEV("DFN")=DFN
"RTN","PXRM",118,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"REMINDER NAME")=$G(PXRMRNAM)
"RTN","PXRM",119,0)
 E  K ^TMP(PXRMPID,$J)
"RTN","PXRM",120,0)
 ;
"RTN","PXRM",121,0)
 ;If this was called from the FIDATA entry point then load FIEVAL
"RTN","PXRM",122,0)
 ;into the FINDINGS array.
"RTN","PXRM",123,0)
 I $G(PXRMFDAT) D
"RTN","PXRM",124,0)
 . M FINDINGS=FIEVAL
"RTN","PXRM",125,0)
 ;
"RTN","PXRM",126,0)
 ;I NODISC is true then don't load the disclaimer.
"RTN","PXRM",127,0)
 I $G(NODISC) Q
"RTN","PXRM",128,0)
 ;If there is any data in ^TMP("PXRHM",$J) then set up the disclaimer.
"RTN","PXRM",129,0)
 I $D(^TMP("PXRHM",$J)) D LOAD^PXRMDISC
"RTN","PXRM",130,0)
 ;
"RTN","PXRM",131,0)
 Q
"RTN","PXRM",132,0)
 ;
"RTN","PXRM",133,0)
 ;=======================================================================
"RTN","PXRM",134,0)
DATE(DFN,PXRMITEM,PXRHM,NODISC,FUTDATE) ;Evaluate reminder PXRMITEM on a date
"RTN","PXRM",135,0)
 ;in the future.
"RTN","PXRM",136,0)
 N PXRMDATE
"RTN","PXRM",137,0)
 S PXRMDATE=FUTDATE
"RTN","PXRM",138,0)
 D MAIN(DFN,PXRMITEM,PXRHM,NODISC)
"RTN","PXRM",139,0)
 Q
"RTN","PXRM",140,0)
 ;
"RTN","PXRM",141,0)
 ;=======================================================================
"RTN","PXRM",142,0)
FIDATA(DFN,PXRMITEM,FINDINGS) ;Return the finding evaluation array to the
"RTN","PXRM",143,0)
 ;caller in the array FINDINGS. The caller should use the form
"RTN","PXRM",144,0)
 ;D FIDATE^PXRM(DFN,PXRMITEM,.FINDINGS)
"RTN","PXRM",145,0)
 ;The elements of the FINDINGS array will correspond to the
"RTN","PXRM",146,0)
 ;findings in the reminder definition. For finding N FINDINGS(N)
"RTN","PXRM",147,0)
 ;will be 0 if the finding is false and 1 if it is true. For
"RTN","PXRM",148,0)
 ;true findings there will be additional elements. The exact set
"RTN","PXRM",149,0)
 ;of additional elements will depend of the type of finding.
"RTN","PXRM",150,0)
 ;Some typical examples are:
"RTN","PXRM",151,0)
 ;FINDINGS(N)=1
"RTN","PXRM",152,0)
 ;FINDINGS(N,"DATE")=FileMan date
"RTN","PXRM",153,0)
 ;FINDINGS(N,"FINDING")=variable pointer to the finding
"RTN","PXRM",154,0)
 ;FINDINGS(N,"SOURCE")=variable pointer to the data source
"RTN","PXRM",155,0)
 ;FINDINGS(N,"VALUE")=value of the finding, for example the
"RTN","PXRM",156,0)
 ;                    value of a lab test
"RTN","PXRM",157,0)
 ;
"RTN","PXRM",158,0)
 N PXRMFDAT
"RTN","PXRM",159,0)
 S PXRMFDAT=1
"RTN","PXRM",160,0)
 D MAIN(DFN,PXRMITEM,0,1)
"RTN","PXRM",161,0)
 K ^TMP("PXRM",$J),^TMP("PXRHM",$J)
"RTN","PXRM",162,0)
 Q
"RTN","PXRM",163,0)
 ;
"RTN","PXRM",164,0)
 ;=======================================================================
"RTN","PXRM",165,0)
INACTIVE(PXRMITEM) ;Return the INACTIVE FLAG, which has a value of 1
"RTN","PXRM",166,0)
 ;if the reminder is inactive.
"RTN","PXRM",167,0)
 I '$D(^PXD(811.9,PXRMITEM)) Q 1
"RTN","PXRM",168,0)
 Q $P(^PXD(811.9,PXRMITEM,0),U,6)
"RTN","PXRM",169,0)
 ;
"RTN","PXRM16RI")
1^187
"RTN","PXRM16TI")
1^188
"RTN","PXRMAFOP")
1^189
"RTN","PXRMAGE")
0^6^B16403632
"RTN","PXRMAGE",1,0)
PXRMAGE ; SLC/PKR - Utilities for age calculations. ;05/11/2000
"RTN","PXRMAGE",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMAGE",3,0)
 ;
"RTN","PXRMAGE",4,0)
 ;=======================================================================
"RTN","PXRMAGE",5,0)
AGE(DOB,DATE) ;Given a date of birth and a date return the age on that date.
"RTN","PXRMAGE",6,0)
 ;Both dates should be in VA Fileman format.
"RTN","PXRMAGE",7,0)
 Q (DATE-DOB)\10000
"RTN","PXRMAGE",8,0)
 ;
"RTN","PXRMAGE",9,0)
 ;=======================================================================
"RTN","PXRMAGE",10,0)
AGECHECK(AGE,MINAGE,MAXAGE) ;Given an AGE, MINimumAGE, and MAXimumAGE
"RTN","PXRMAGE",11,0)
 ;return true if age lies within the range.
"RTN","PXRMAGE",12,0)
 ;Special values of NULL or 0 mean there are no limits.
"RTN","PXRMAGE",13,0)
 ;
"RTN","PXRMAGE",14,0)
 S MAXAGE=+MAXAGE
"RTN","PXRMAGE",15,0)
 S MINAGE=+MINAGE
"RTN","PXRMAGE",16,0)
 ;See if too old.
"RTN","PXRMAGE",17,0)
 I (AGE>MAXAGE)&(MAXAGE>0) Q 0
"RTN","PXRMAGE",18,0)
 ;
"RTN","PXRMAGE",19,0)
 ;See if too young.
"RTN","PXRMAGE",20,0)
 I MINAGE=0 Q 1
"RTN","PXRMAGE",21,0)
 I AGE<MINAGE Q 0
"RTN","PXRMAGE",22,0)
 Q 1
"RTN","PXRMAGE",23,0)
 ;
"RTN","PXRMAGE",24,0)
 ;=======================================================================
"RTN","PXRMAGE",25,0)
FMTAGE(MINAGE,MAXAGE) ;Format the minimum age and maximum age for display.
"RTN","PXRMAGE",26,0)
 N STR
"RTN","PXRMAGE",27,0)
 I $L(MINAGE)!$L(MAXAGE) D
"RTN","PXRMAGE",28,0)
 . I $L(MINAGE)&$L(MAXAGE) S STR=" for ages "_MINAGE_" to "_MAXAGE Q
"RTN","PXRMAGE",29,0)
 . I $L(MINAGE) S STR=" for ages "_MINAGE_" and older" Q
"RTN","PXRMAGE",30,0)
 . I $L(MAXAGE) S STR=" for ages "_MAXAGE_" and younger" Q
"RTN","PXRMAGE",31,0)
 E  S STR=" for all ages"
"RTN","PXRMAGE",32,0)
 Q STR
"RTN","PXRMAGE",33,0)
 ;
"RTN","PXRMAGE",34,0)
 ;=======================================================================
"RTN","PXRMAGE",35,0)
FMTFREQ(FREQ) ;Format the frequency for display.
"RTN","PXRMAGE",36,0)
 ;This is based on FREQ^PXRMPT.
"RTN","PXRMAGE",37,0)
 N STR
"RTN","PXRMAGE",38,0)
 I +FREQ=0 S STR=FREQ_" - Not Indicated" Q STR
"RTN","PXRMAGE",39,0)
 I FREQ?1"99Y" S STR="99Y - Once"
"RTN","PXRMAGE",40,0)
 E  S STR=+FREQ_($S(FREQ["D":" day",FREQ["M":" month",FREQ["Y":" year",1:""))_$S(+FREQ>1:"s",1:"")
"RTN","PXRMAGE",41,0)
 Q STR
"RTN","PXRMAGE",42,0)
 ;
"RTN","PXRMAGE",43,0)
 ;=======================================================================
"RTN","PXRMAGE",44,0)
MMF(MINAGE,MAXAGE,FREQ,FIEVAL) ;Set the baseline minimum age, maximum
"RTN","PXRMAGE",45,0)
 ;age, and frequency.  If there are multiple intervals they cannot
"RTN","PXRMAGE",46,0)
 ;overlap.
"RTN","PXRMAGE",47,0)
 N FR,IC,INDEX,MATCH,MAXA,MINA,NAR,TEMP
"RTN","PXRMAGE",48,0)
 ;
"RTN","PXRMAGE",49,0)
 ;Initialize MINAGE, MAXAGE, and FREQ.
"RTN","PXRMAGE",50,0)
 S (MINAGE,MAXAGE,FREQ)=""
"RTN","PXRMAGE",51,0)
 ;
"RTN","PXRMAGE",52,0)
 S IC=0
"RTN","PXRMAGE",53,0)
 S NAR=0
"RTN","PXRMAGE",54,0)
 F  S IC=$O(^PXD(811.9,PXRMITEM,7,IC)) Q:+IC=0  D
"RTN","PXRMAGE",55,0)
 . S NAR=NAR+1
"RTN","PXRMAGE",56,0)
 . S TEMP=$G(^PXD(811.9,PXRMITEM,7,IC,0))
"RTN","PXRMAGE",57,0)
 . S FR(NAR)=$$UP^XLFSTR($P(TEMP,U,1))
"RTN","PXRMAGE",58,0)
 . S MINA(NAR)=$P(TEMP,U,2)
"RTN","PXRMAGE",59,0)
 . S MAXA(NAR)=$P(TEMP,U,3)
"RTN","PXRMAGE",60,0)
 . S INDEX(NAR)=IC
"RTN","PXRMAGE",61,0)
 . S FIEVAL("AGE",IC)=0
"RTN","PXRMAGE",62,0)
 ;
"RTN","PXRMAGE",63,0)
 ;Make sure that none of the age ranges overlap.
"RTN","PXRMAGE",64,0)
 I $$OVERLAP(NAR,.MINA,.MAXA) Q
"RTN","PXRMAGE",65,0)
 ;
"RTN","PXRMAGE",66,0)
 ;Look for an age range match.
"RTN","PXRMAGE",67,0)
 S FREQ="0Y"
"RTN","PXRMAGE",68,0)
 S MATCH=0
"RTN","PXRMAGE",69,0)
 F IC=1:1:NAR Q:MATCH  D
"RTN","PXRMAGE",70,0)
 . I $$AGECHECK(PXRMAGE,MINA(IC),MAXA(IC)) D
"RTN","PXRMAGE",71,0)
 .. S MATCH=1
"RTN","PXRMAGE",72,0)
 .. S MINAGE=MINA(IC)
"RTN","PXRMAGE",73,0)
 .. S MAXAGE=MAXA(IC)
"RTN","PXRMAGE",74,0)
 .. S FREQ=FR(IC)
"RTN","PXRMAGE",75,0)
 .. S FIEVAL("AGE",INDEX(IC))=1
"RTN","PXRMAGE",76,0)
 Q
"RTN","PXRMAGE",77,0)
 ;
"RTN","PXRMAGE",78,0)
 ;=======================================================================
"RTN","PXRMAGE",79,0)
MNMT(NLINES,FIEVAL) ;Output the AGE match/no match text.
"RTN","PXRMAGE",80,0)
 N IC,IND,LC,TEXT
"RTN","PXRMAGE",81,0)
 I '$D(FIEVAL("AGE")) Q
"RTN","PXRMAGE",82,0)
 S IC=""
"RTN","PXRMAGE",83,0)
 F  S IC=$O(FIEVAL("AGE",IC)) Q:IC=""  D
"RTN","PXRMAGE",84,0)
 . I FIEVAL("AGE",IC)=1 S IND=1
"RTN","PXRMAGE",85,0)
 . E  S IND=2
"RTN","PXRMAGE",86,0)
 . S LC=0
"RTN","PXRMAGE",87,0)
 . F  S LC=$O(^PXD(811.9,PXRMITEM,7,IC,IND,LC)) Q:LC=""  D
"RTN","PXRMAGE",88,0)
 .. S TEXT=$G(^PXD(811.9,PXRMITEM,7,IC,IND,LC,0))
"RTN","PXRMAGE",89,0)
 .. D ADDTXT^PXRMOPT(.NLINES,TEXT)
"RTN","PXRMAGE",90,0)
 . I $D(PXRMDEV) D
"RTN","PXRMAGE",91,0)
 .. N DES,UID
"RTN","PXRMAGE",92,0)
 .. S DES="AGE"_IC_IND
"RTN","PXRMAGE",93,0)
 .. S UID=DES_$$NTOAN^PXRMUTIL(LC)
"RTN","PXRMAGE",94,0)
 .. S ^TMP(PXRMPID,$J,PXRMITEM,UID)=FIEVAL("AGE",IC)
"RTN","PXRMAGE",95,0)
 Q
"RTN","PXRMAGE",96,0)
 ;
"RTN","PXRMAGE",97,0)
 ;=======================================================================
"RTN","PXRMAGE",98,0)
OVERLAP(NAR,MINA,MAXA) ;Check age ranges for overlap.  Return an error message
"RTN","PXRMAGE",99,0)
 ;if an overlap is found.
"RTN","PXRMAGE",100,0)
 I NAR'>1 Q 0
"RTN","PXRMAGE",101,0)
 N IC,IN,JC,MAXI,MAXJ,MINI,MINJ,OVRLAP
"RTN","PXRMAGE",102,0)
 S OVRLAP=0
"RTN","PXRMAGE",103,0)
 F IC=1:1:NAR-1 D
"RTN","PXRMAGE",104,0)
 . S MAXI=MAXA(IC)
"RTN","PXRMAGE",105,0)
 . I MAXI="" S MAXI=1000
"RTN","PXRMAGE",106,0)
 . S MINI=MINA(IC)
"RTN","PXRMAGE",107,0)
 . I MINI="" S MINI=0
"RTN","PXRMAGE",108,0)
 . F JC=IC+1:1:NAR D
"RTN","PXRMAGE",109,0)
 .. S MAXJ=MAXA(JC)
"RTN","PXRMAGE",110,0)
 .. I MAXJ="" S MAXJ=1000
"RTN","PXRMAGE",111,0)
 .. S MINJ=MINA(JC)
"RTN","PXRMAGE",112,0)
 .. I MINJ="" S MINJ=0
"RTN","PXRMAGE",113,0)
 .. S IN=0
"RTN","PXRMAGE",114,0)
 .. I (MINJ'<MINI)&(MINJ'>MAXI) S IN=1
"RTN","PXRMAGE",115,0)
 .. I (MAXJ'<MINI)&(MAXJ'>MAXI) S IN=1
"RTN","PXRMAGE",116,0)
 .. I IN D
"RTN","PXRMAGE",117,0)
 ... S OVRLAP=OVRLAP+1
"RTN","PXRMAGE",118,0)
 ... S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","AGE OVERLAP",OVRLAP)=MINA(IC)_" to "_MAXA(IC)_" and "_MINA(JC)_" to "_MAXA(JC)
"RTN","PXRMAGE",119,0)
 I OVRLAP>1 S OVRLAP=1
"RTN","PXRMAGE",120,0)
 Q OVRLAP
"RTN","PXRMAGE",121,0)
 ;
"RTN","PXRMAGE",122,0)
 ;=======================================================================
"RTN","PXRMAGE",123,0)
RESTORE(SOURCE,INDEX,FREQ,MINAGE,MAXAGE) ;Restore FREQ, MINAGE, and
"RTN","PXRMAGE",124,0)
 ;MAXAGE back to the original form.
"RTN","PXRMAGE",125,0)
 N IND,TEMP
"RTN","PXRMAGE",126,0)
 I SOURCE="CFIND" D
"RTN","PXRMAGE",127,0)
 . S IND=$O(^PXD(811.9,PXRMITEM,10,"B",INDEX,""))
"RTN","PXRMAGE",128,0)
 . S TEMP=^PXD(811.9,PXRMITEM,10,IND,0)
"RTN","PXRMAGE",129,0)
 ;
"RTN","PXRMAGE",130,0)
 I SOURCE="HFIND" D
"RTN","PXRMAGE",131,0)
 . S IND=$O(^PXD(811.9,PXRMITEM,6,"B",INDEX,""))
"RTN","PXRMAGE",132,0)
 . S TEMP=^PXD(811.9,PXRMITEM,6,IND,0)
"RTN","PXRMAGE",133,0)
 ;
"RTN","PXRMAGE",134,0)
 I SOURCE="TFIND" D
"RTN","PXRMAGE",135,0)
 . S IND=$O(^PXD(811.9,PXRMITEM,4,"B",INDEX,""))
"RTN","PXRMAGE",136,0)
 . S TEMP=^PXD(811.9,PXRMITEM,4,IND,0)
"RTN","PXRMAGE",137,0)
 ;
"RTN","PXRMAGE",138,0)
 S MINAGE=$P(TEMP,U,2)
"RTN","PXRMAGE",139,0)
 S MAXAGE=$P(TEMP,U,3)
"RTN","PXRMAGE",140,0)
 S FREQ=$P(TEMP,U,4)
"RTN","PXRMAGE",141,0)
 Q
"RTN","PXRMAGE",142,0)
 ;
"RTN","PXRMBMI")
0^7^B1531334
"RTN","PXRMBMI",1,0)
PXRMBMI ; SLC/PKR - This is an example of a computed finding. ;05/18/2000
"RTN","PXRMBMI",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMBMI",3,0)
 ;
"RTN","PXRMBMI",4,0)
 ;=======================================================================
"RTN","PXRMBMI",5,0)
BMI(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding to return the BMI.
"RTN","PXRMBMI",6,0)
 N BMI,DATA,HDATE,GMRVSTR,IEN,INVDATE,WDATA,WDATE
"RTN","PXRMBMI",7,0)
 ;Get the height and weight.
"RTN","PXRMBMI",8,0)
 S GMRVSTR="HT;WT;"
"RTN","PXRMBMI",9,0)
 S GMRVSTR(0)=U_U_1_U_0
"RTN","PXRMBMI",10,0)
 K ^UTILITY($J,"GMRVD")
"RTN","PXRMBMI",11,0)
 D EN1^GMRVUT0
"RTN","PXRMBMI",12,0)
 ;Find the most recent entry for height.
"RTN","PXRMBMI",13,0)
 I $D(^UTILITY($J,"GMRVD","HT")) D
"RTN","PXRMBMI",14,0)
 . S INVDATE=$O(^UTILITY($J,"GMRVD","HT",""))
"RTN","PXRMBMI",15,0)
 . S HDATE=$$FMDFINVL^PXRMDATE(INVDATE,0)
"RTN","PXRMBMI",16,0)
 E  D
"RTN","PXRMBMI",17,0)
 . S HDATE=0
"RTN","PXRMBMI",18,0)
 ;Find the most recent entry for weight.
"RTN","PXRMBMI",19,0)
 I $D(^UTILITY($J,"GMRVD","WT")) D
"RTN","PXRMBMI",20,0)
 . S INVDATE=$O(^UTILITY($J,"GMRVD","WT",""))
"RTN","PXRMBMI",21,0)
 . S WDATE=$$FMDFINVL^PXRMDATE(INVDATE,0)
"RTN","PXRMBMI",22,0)
 . S IEN=$O(^UTILITY($J,"GMRVD","WT",INVDATE,""))
"RTN","PXRMBMI",23,0)
 . S WDATA=$G(^UTILITY($J,"GMRVD","WT",INVDATE,IEN))
"RTN","PXRMBMI",24,0)
 E  D
"RTN","PXRMBMI",25,0)
 . S WDATE=0
"RTN","PXRMBMI",26,0)
 . S WDATA=""
"RTN","PXRMBMI",27,0)
 ;Use the oldest date of the two.
"RTN","PXRMBMI",28,0)
 S DATE=$$MIN^XLFMTH(HDATE,WDATE)
"RTN","PXRMBMI",29,0)
 S BMI=$P(WDATA,U,14)
"RTN","PXRMBMI",30,0)
 S TEST=1
"RTN","PXRMBMI",31,0)
 I BMI="" S VALUE="?"
"RTN","PXRMBMI",32,0)
 E  S VALUE=BMI
"RTN","PXRMBMI",33,0)
 K ^UTILITY($J,"GMRVD")
"RTN","PXRMBMI",34,0)
 Q
"RTN","PXRMBMI",35,0)
 ;
"RTN","PXRMBXTL")
0^8^B19741860
"RTN","PXRMBXTL",1,0)
PXRMBXTL ; SLC/PKR,PJH - Build expanded taxonomies. ;05/18/2000
"RTN","PXRMBXTL",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMBXTL",3,0)
 ;
"RTN","PXRMBXTL",4,0)
 ;=======================================================================
"RTN","PXRMBXTL",5,0)
CHECK(TAXIEN,KI) ;Check for expanded taxonomy, make sure it is current,
"RTN","PXRMBXTL",6,0)
 ;build or rebuild if necessary.
"RTN","PXRMBXTL",7,0)
 N DATEBLT,ICD0SUM,ICD9SUM,ICPTDATE,REBUILD,TEMP,TEMP0
"RTN","PXRMBXTL",8,0)
 ;
"RTN","PXRMBXTL",9,0)
 S TEMP=$G(^PXD(811.3,TAXIEN,0))
"RTN","PXRMBXTL",10,0)
 ;
"RTN","PXRMBXTL",11,0)
 ;See if the expanded taxonomy should be rebuilt.
"RTN","PXRMBXTL",12,0)
 S REBUILD=0
"RTN","PXRMBXTL",13,0)
 ;Check the date built, if it is 0 then rebuild.
"RTN","PXRMBXTL",14,0)
 S DATEBLT=+$P(TEMP,U,2)
"RTN","PXRMBXTL",15,0)
 I DATEBLT=0 S REBUILD=1
"RTN","PXRMBXTL",16,0)
 ;
"RTN","PXRMBXTL",17,0)
 ;Check for changes in the ICD0 file.
"RTN","PXRMBXTL",18,0)
 I 'REBUILD D
"RTN","PXRMBXTL",19,0)
 . S ICD0SUM=+$P(TEMP,U,4)
"RTN","PXRMBXTL",20,0)
 . S TEMP0=^ICD0(0)
"RTN","PXRMBXTL",21,0)
 . I (ICD0SUM)'=(+$P(TEMP0,U,3)+$P(TEMP0,U,4)) S REBUILD=1
"RTN","PXRMBXTL",22,0)
 ;
"RTN","PXRMBXTL",23,0)
 ;Check for changes in the ICD9 file.
"RTN","PXRMBXTL",24,0)
 I 'REBUILD D
"RTN","PXRMBXTL",25,0)
 . S ICD9SUM=+$P(TEMP,U,6)
"RTN","PXRMBXTL",26,0)
 . S TEMP0=^ICD9(0)
"RTN","PXRMBXTL",27,0)
 . I (ICD9SUM)'=(+$P(TEMP0,U,3)+$P(TEMP0,U,4)) S REBUILD=1
"RTN","PXRMBXTL",28,0)
 ;
"RTN","PXRMBXTL",29,0)
 ;Check for changes in the ICPT file.
"RTN","PXRMBXTL",30,0)
 I 'REBUILD D
"RTN","PXRMBXTL",31,0)
 . S ICPTDATE=$P(TEMP,U,8)
"RTN","PXRMBXTL",32,0)
 . I ICPTDATE'=$$CPTDIST^ICPTAPIU S REBUILD=1
"RTN","PXRMBXTL",33,0)
 ;
"RTN","PXRMBXTL",34,0)
 I REBUILD D
"RTN","PXRMBXTL",35,0)
 . I $D(^PXD(811.3,TAXIEN)) D DELEXTL(TAXIEN)
"RTN","PXRMBXTL",36,0)
 . D LOCKXTL(TAXIEN)
"RTN","PXRMBXTL",37,0)
 . D EXPAND(TAXIEN,KI)
"RTN","PXRMBXTL",38,0)
 . D ULOCKXTL(TAXIEN)
"RTN","PXRMBXTL",39,0)
 Q
"RTN","PXRMBXTL",40,0)
 ;
"RTN","PXRMBXTL",41,0)
 ;=======================================================================
"RTN","PXRMBXTL",42,0)
DELEXTL(TAXIEN) ;Delete an expanded taxonomy.
"RTN","PXRMBXTL",43,0)
 D LOCKXTL(TAXIEN)
"RTN","PXRMBXTL",44,0)
 N DA,DIK
"RTN","PXRMBXTL",45,0)
 S DIK="^PXD(811.3,"
"RTN","PXRMBXTL",46,0)
 S DA=TAXIEN
"RTN","PXRMBXTL",47,0)
 D ^DIK
"RTN","PXRMBXTL",48,0)
 D ULOCKXTL(TAXIEN)
"RTN","PXRMBXTL",49,0)
 Q
"RTN","PXRMBXTL",50,0)
 ;
"RTN","PXRMBXTL",51,0)
 ;=======================================================================
"RTN","PXRMBXTL",52,0)
EXPAND(TAXIEN,KI) ;Build an expanded taxonomy. If KI is defined then
"RTN","PXRMBXTL",53,0)
 ;entry KI is being deleted so skip it.
"RTN","PXRMBXTL",54,0)
 N DATEBLT,HIGH,ICD0SUM,ICD9SUM,ICPTDATE,IND,LOW
"RTN","PXRMBXTL",55,0)
 N NICD0,NICD9,NICPT,NRCPT,TEMP
"RTN","PXRMBXTL",56,0)
 S DATEBLT=$$NOW^XLFDT
"RTN","PXRMBXTL",57,0)
 S $P(^PXD(811.3,TAXIEN,0),U,1)=TAXIEN
"RTN","PXRMBXTL",58,0)
 S $P(^PXD(811.3,TAXIEN,0),U,2)=DATEBLT
"RTN","PXRMBXTL",59,0)
 ;
"RTN","PXRMBXTL",60,0)
 S (IND,NICD0)=0
"RTN","PXRMBXTL",61,0)
 F  S IND=$O(^PXD(811.2,TAXIEN,80.1,IND)) Q:+IND=0  D
"RTN","PXRMBXTL",62,0)
 . I KI=IND Q
"RTN","PXRMBXTL",63,0)
 . S TEMP=^PXD(811.2,TAXIEN,80.1,IND,0)
"RTN","PXRMBXTL",64,0)
 . S LOW=$P(TEMP,U,1)
"RTN","PXRMBXTL",65,0)
 . S HIGH=$P(TEMP,U,2)
"RTN","PXRMBXTL",66,0)
 . I HIGH="" S HIGH=LOW
"RTN","PXRMBXTL",67,0)
 . D ICD0(LOW,HIGH,.NICD0)
"RTN","PXRMBXTL",68,0)
 S TEMP=^ICD0(0)
"RTN","PXRMBXTL",69,0)
 S ICD0SUM=+$P(TEMP,U,3)+$P(TEMP,U,4)
"RTN","PXRMBXTL",70,0)
 S $P(^PXD(811.3,TAXIEN,0),U,3)=NICD0
"RTN","PXRMBXTL",71,0)
 S $P(^PXD(811.3,TAXIEN,0),U,4)=ICD0SUM
"RTN","PXRMBXTL",72,0)
 ;
"RTN","PXRMBXTL",73,0)
 S (IND,NICD9)=0
"RTN","PXRMBXTL",74,0)
 F  S IND=$O(^PXD(811.2,TAXIEN,80,IND)) Q:+IND=0  D
"RTN","PXRMBXTL",75,0)
 . I KI=IND Q
"RTN","PXRMBXTL",76,0)
 . S TEMP=^PXD(811.2,TAXIEN,80,IND,0)
"RTN","PXRMBXTL",77,0)
 . S LOW=$P(TEMP,U,1)
"RTN","PXRMBXTL",78,0)
 . S HIGH=$P(TEMP,U,2)
"RTN","PXRMBXTL",79,0)
 . I HIGH="" S HIGH=LOW
"RTN","PXRMBXTL",80,0)
 . D ICD9(LOW,HIGH,.NICD9)
"RTN","PXRMBXTL",81,0)
 S TEMP=^ICD9(0)
"RTN","PXRMBXTL",82,0)
 S ICD9SUM=+$P(TEMP,U,3)+$P(TEMP,U,4)
"RTN","PXRMBXTL",83,0)
 S $P(^PXD(811.3,TAXIEN,0),U,5)=NICD9
"RTN","PXRMBXTL",84,0)
 S $P(^PXD(811.3,TAXIEN,0),U,6)=ICD9SUM
"RTN","PXRMBXTL",85,0)
 ;
"RTN","PXRMBXTL",86,0)
 S (IND,NICPT,NRCPT)=0
"RTN","PXRMBXTL",87,0)
 F  S IND=$O(^PXD(811.2,TAXIEN,81,IND)) Q:+IND=0  D
"RTN","PXRMBXTL",88,0)
 . I KI=IND Q
"RTN","PXRMBXTL",89,0)
 . S TEMP=^PXD(811.2,TAXIEN,81,IND,0)
"RTN","PXRMBXTL",90,0)
 . S LOW=$P(TEMP,U,1)
"RTN","PXRMBXTL",91,0)
 . S HIGH=$P(TEMP,U,2)
"RTN","PXRMBXTL",92,0)
 . I HIGH="" S HIGH=LOW
"RTN","PXRMBXTL",93,0)
 . D ICPT(LOW,HIGH,.NICPT,.NRCPT)
"RTN","PXRMBXTL",94,0)
 S ICPTDATE=$$CPTDIST^ICPTAPIU
"RTN","PXRMBXTL",95,0)
 S $P(^PXD(811.3,TAXIEN,0),U,7)=NICPT
"RTN","PXRMBXTL",96,0)
 S $P(^PXD(811.3,TAXIEN,0),U,8)=ICPTDATE
"RTN","PXRMBXTL",97,0)
 S $P(^PXD(811.3,TAXIEN,0),U,9)=NRCPT
"RTN","PXRMBXTL",98,0)
 ;
"RTN","PXRMBXTL",99,0)
 ;Build the cross-references
"RTN","PXRMBXTL",100,0)
 N DA,DIK
"RTN","PXRMBXTL",101,0)
 S DIK="^PXD(811.3,"
"RTN","PXRMBXTL",102,0)
 S DA=TAXIEN
"RTN","PXRMBXTL",103,0)
 D IX1^DIK
"RTN","PXRMBXTL",104,0)
 Q
"RTN","PXRMBXTL",105,0)
 ;
"RTN","PXRMBXTL",106,0)
 ;=======================================================================
"RTN","PXRMBXTL",107,0)
ICD0(LOW,HIGH,NICD0) ;Build the list of internal entries for ICD0
"RTN","PXRMBXTL",108,0)
 ;(File 80.1).
"RTN","PXRMBXTL",109,0)
 N END,IEN,IND
"RTN","PXRMBXTL",110,0)
 S IND=LOW_" "
"RTN","PXRMBXTL",111,0)
 S END=HIGH_" "
"RTN","PXRMBXTL",112,0)
 F  Q:(IND]END)!(+IND>+END)!(IND="")  D
"RTN","PXRMBXTL",113,0)
 . S IEN=$O(^ICD0("BA",IND,""))
"RTN","PXRMBXTL",114,0)
 . I +IEN>0 D
"RTN","PXRMBXTL",115,0)
 .. S NICD0=NICD0+1
"RTN","PXRMBXTL",116,0)
 .. S ^PXD(811.3,TAXIEN,80.1,NICD0,0)=IEN
"RTN","PXRMBXTL",117,0)
 . S IND=$O(^ICD0("BA",IND))
"RTN","PXRMBXTL",118,0)
 Q
"RTN","PXRMBXTL",119,0)
 ;
"RTN","PXRMBXTL",120,0)
 ;=======================================================================
"RTN","PXRMBXTL",121,0)
ICD9(LOW,HIGH,NICD9) ;Build the list of internal entries for ICD9
"RTN","PXRMBXTL",122,0)
 ;(File 80).
"RTN","PXRMBXTL",123,0)
 N END,IEN,IND
"RTN","PXRMBXTL",124,0)
 S IND=LOW_" "
"RTN","PXRMBXTL",125,0)
 S END=HIGH_" "
"RTN","PXRMBXTL",126,0)
 F  Q:(IND]END)!(+IND>+END)!(IND="")  D
"RTN","PXRMBXTL",127,0)
 . S IEN=$O(^ICD9("BA",IND,""))
"RTN","PXRMBXTL",128,0)
 . I +IEN>0 D
"RTN","PXRMBXTL",129,0)
 .. S NICD9=NICD9+1
"RTN","PXRMBXTL",130,0)
 .. S ^PXD(811.3,TAXIEN,80,NICD9,0)=IEN
"RTN","PXRMBXTL",131,0)
 . S IND=$O(^ICD9("BA",IND))
"RTN","PXRMBXTL",132,0)
 Q
"RTN","PXRMBXTL",133,0)
 ;
"RTN","PXRMBXTL",134,0)
 ;=======================================================================
"RTN","PXRMBXTL",135,0)
ICPT(LOW,HIGH,NICPT,NRCPT) ;Build the list of internal entries
"RTN","PXRMBXTL",136,0)
 ;for ICPT (File 81).
"RTN","PXRMBXTL",137,0)
 N IEN,IND,RADIEN
"RTN","PXRMBXTL",138,0)
 S IND=LOW
"RTN","PXRMBXTL",139,0)
 F  Q:(IND]HIGH)!(+IND>+HIGH)!(IND="")  D
"RTN","PXRMBXTL",140,0)
 . S IEN=$O(^ICPT("B",IND,""))
"RTN","PXRMBXTL",141,0)
 . I +IEN>0 D
"RTN","PXRMBXTL",142,0)
 .. S NICPT=NICPT+1
"RTN","PXRMBXTL",143,0)
 .. S ^PXD(811.3,TAXIEN,81,NICPT,0)=IEN
"RTN","PXRMBXTL",144,0)
 ..;Determine if this is a radiology procedure.
"RTN","PXRMBXTL",145,0)
 .. S RADIEN=+$O(^RAMIS(71,"D",IEN,""))
"RTN","PXRMBXTL",146,0)
 .. I RADIEN>0 D
"RTN","PXRMBXTL",147,0)
 ... S NRCPT=NRCPT+1
"RTN","PXRMBXTL",148,0)
 ... S ^PXD(811.3,TAXIEN,71,NRCPT,0)=IEN_U_RADIEN
"RTN","PXRMBXTL",149,0)
 . S IND=$O(^ICPT("B",IND))
"RTN","PXRMBXTL",150,0)
 Q
"RTN","PXRMBXTL",151,0)
 ;
"RTN","PXRMBXTL",152,0)
 ;=======================================================================
"RTN","PXRMBXTL",153,0)
LOCKXTL(TAXIEN) ;Lock the expanded taxonomy entry.
"RTN","PXRMBXTL",154,0)
 N IND,LOCK
"RTN","PXRMBXTL",155,0)
 S LOCK=0
"RTN","PXRMBXTL",156,0)
 F IND=1:1:30 Q:LOCK  D
"RTN","PXRMBXTL",157,0)
 . L +^PXD(811.3,TAXIEN):1
"RTN","PXRMBXTL",158,0)
 . S LOCK=$T
"RTN","PXRMBXTL",159,0)
 ;If we can't get lock generate an error and quit. PXRMLOCK is
"RTN","PXRMBXTL",160,0)
 ;undefined so writing it will cause the error.
"RTN","PXRMBXTL",161,0)
 I 'LOCK D
"RTN","PXRMBXTL",162,0)
 . W !,"Could not get lock for expanded taxonomy ",TAXIEN
"RTN","PXRMBXTL",163,0)
 . W PXRMLOCK
"RTN","PXRMBXTL",164,0)
 Q
"RTN","PXRMBXTL",165,0)
 ;
"RTN","PXRMBXTL",166,0)
 ;=======================================================================
"RTN","PXRMBXTL",167,0)
ULOCKXTL(TAXIEN) ;Unlock the expanded taxonomy.
"RTN","PXRMBXTL",168,0)
 L -^PXD(811.3,TAXIEN)
"RTN","PXRMBXTL",169,0)
 Q
"RTN","PXRMBXTL",170,0)
 ;
"RTN","PXRMCAT")
0^9^B12709564
"RTN","PXRMCAT",1,0)
PXRMCAT ; SLC/PJH - Edit/Inquire reminder categories ;04/04/2000
"RTN","PXRMCAT",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMCAT",3,0)
 ;
"RTN","PXRMCAT",4,0)
 ;Called by option PXRM REMINDER CATEGORIES
"RTN","PXRMCAT",5,0)
 ;
"RTN","PXRMCAT",6,0)
START N DIC,PXRMHD,PXRMCAT,PXRMGTYP,Y
"RTN","PXRMCAT",7,0)
SELECT ;General selection
"RTN","PXRMCAT",8,0)
 S PXRMHD="Reminder Categories",PXRMGTYP="RCAT",PXRMCAT=""
"RTN","PXRMCAT",9,0)
 D START^PXRMSEL(PXRMHD,PXRMGTYP,"PXRMCAT")
"RTN","PXRMCAT",10,0)
 ;Should return a value
"RTN","PXRMCAT",11,0)
 I PXRMCAT D  G SELECT
"RTN","PXRMCAT",12,0)
 .S PXRMHD="REMINDER CATEGORY NAME:"
"RTN","PXRMCAT",13,0)
 .;Listman option
"RTN","PXRMCAT",14,0)
 .D START^PXRMGEN(PXRMHD,PXRMGTYP,PXRMCAT)
"RTN","PXRMCAT",15,0)
END Q
"RTN","PXRMCAT",16,0)
 ;
"RTN","PXRMCAT",17,0)
 ;Build Category Inquiry array
"RTN","PXRMCAT",18,0)
 ;----------------------------
"RTN","PXRMCAT",19,0)
BUILD(ARRAY,D0) ;
"RTN","PXRMCAT",20,0)
 N D1,IC,LEVEL,SEQ,TAB,TXT
"RTN","PXRMCAT",21,0)
 ;Category Description
"RTN","PXRMCAT",22,0)
 S LEVEL=5 D DES
"RTN","PXRMCAT",23,0)
 ;Reminders
"RTN","PXRMCAT",24,0)
 S LEVEL=0 D REM
"RTN","PXRMCAT",25,0)
 ;Sub-category .. D0=IEN OF PARENT D1=NODE NUMBER IN 10 OF CHILD 
"RTN","PXRMCAT",26,0)
 S D1=0
"RTN","PXRMCAT",27,0)
 F  S D1=$O(^PXRMD(811.7,D0,10,D1)) Q:'D1  D GETLST(D0,D1,0)
"RTN","PXRMCAT",28,0)
 Q
"RTN","PXRMCAT",29,0)
 ;
"RTN","PXRMCAT",30,0)
 ;Build display for selected category - Called from PXRMGEN
"RTN","PXRMCAT",31,0)
 ;---------------------------------------------------------
"RTN","PXRMCAT",32,0)
CAT(PXRMCAT) ;
"RTN","PXRMCAT",33,0)
 N DATA,DARRAY,SUB
"RTN","PXRMCAT",34,0)
 S VALMCNT=0 K ^TMP("PXRMGENS",$J),^TMP("PXRMGEN",$J)
"RTN","PXRMCAT",35,0)
 ;
"RTN","PXRMCAT",36,0)
 ;Format headings to include category name
"RTN","PXRMCAT",37,0)
 S HEADER=PXRMHD_" "_$P(^PXRMD(811.7,PXRMCAT,0),U)
"RTN","PXRMCAT",38,0)
 ;
"RTN","PXRMCAT",39,0)
 ;Build Reminder Category Display
"RTN","PXRMCAT",40,0)
 D BUILD(.DARRAY,PXRMCAT) M ^TMP("PXRMGENS",$J)=DARRAY
"RTN","PXRMCAT",41,0)
 ; 
"RTN","PXRMCAT",42,0)
 ;Put the list into the array List Manager is using.
"RTN","PXRMCAT",43,0)
 S SUB="",VALMCNT=0
"RTN","PXRMCAT",44,0)
 F  S SUB=$O(^TMP("PXRMGENS",$J,SUB)) Q:SUB=""  D
"RTN","PXRMCAT",45,0)
 .S DATA=$G(^TMP("PXRMGENS",$J,SUB))
"RTN","PXRMCAT",46,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMCAT",47,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)=DATA
"RTN","PXRMCAT",48,0)
 K ^TMP("PXRMGENS",$J)
"RTN","PXRMCAT",49,0)
 ;Create headings
"RTN","PXRMCAT",50,0)
 D CHGCAP^VALM("HEADER1","")
"RTN","PXRMCAT",51,0)
 D CHGCAP^VALM("HEADER2","")
"RTN","PXRMCAT",52,0)
 D CHGCAP^VALM("HEADER3","")
"RTN","PXRMCAT",53,0)
 Q
"RTN","PXRMCAT",54,0)
 ;
"RTN","PXRMCAT",55,0)
 ;Category description
"RTN","PXRMCAT",56,0)
 ;--------------------
"RTN","PXRMCAT",57,0)
DES ;array.
"RTN","PXRMCAT",58,0)
 N DIWF,DIWL,DIWR,SUB
"RTN","PXRMCAT",59,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMCAT",60,0)
 K ^UTILITY($J,"W")
"RTN","PXRMCAT",61,0)
 S SUB=0
"RTN","PXRMCAT",62,0)
 F  S SUB=$O(^PXRMD(811.7,D0,1,SUB)) Q:SUB=""  D
"RTN","PXRMCAT",63,0)
 .S X=$G(^PXRMD(811.7,D0,1,SUB,0))
"RTN","PXRMCAT",64,0)
 .D ^DIWP
"RTN","PXRMCAT",65,0)
 S ARRAY(1)="Category Description:",IC=1
"RTN","PXRMCAT",66,0)
 F  S SUB=$O(^UTILITY($J,"W",0,SUB)) Q:SUB=""  D
"RTN","PXRMCAT",67,0)
 .S IC=IC+1,ARRAY(IC)=$J("",LEVEL)_^UTILITY($J,"W",0,SUB,0)
"RTN","PXRMCAT",68,0)
 K ^UTILITY($J,"W")
"RTN","PXRMCAT",69,0)
 Q
"RTN","PXRMCAT",70,0)
 ;
"RTN","PXRMCAT",71,0)
 ;Get list of sub-categories
"RTN","PXRMCAT",72,0)
 ;--------------------------
"RTN","PXRMCAT",73,0)
GETLST(D0,D1,LEVEL) ;
"RTN","PXRMCAT",74,0)
 N CHILD,DATA,NAME,PXRMIEN,PXRMCAT,SEQ,SUB,TEMP
"RTN","PXRMCAT",75,0)
 ;Determine if this subcategory has children
"RTN","PXRMCAT",76,0)
 S DATA=$G(^PXRMD(811.7,D0,10,D1,0)) Q:DATA=""
"RTN","PXRMCAT",77,0)
 S PXRMCAT=$P(DATA,U) Q:PXRMCAT=""
"RTN","PXRMCAT",78,0)
 S NAME=$G(^PXRMD(811.7,PXRMCAT,0)) I NAME="" S NAME=PXRMCAT
"RTN","PXRMCAT",79,0)
 I LEVEL=0 S IC=IC+1,ARRAY(IC)=""
"RTN","PXRMCAT",80,0)
 S IC=IC+1,ARRAY(IC)=$J("",LEVEL)_"Sub-category: "_NAME
"RTN","PXRMCAT",81,0)
 ;Increment tab
"RTN","PXRMCAT",82,0)
 S LEVEL=LEVEL+5
"RTN","PXRMCAT",83,0)
 ;Don't allow > 4 levels
"RTN","PXRMCAT",84,0)
 I LEVEL>20 S IC=IC+1,ARRAY(IC)=$J("",LEVEL)_"Further levels" Q
"RTN","PXRMCAT",85,0)
 ;Save details of reminders for this category
"RTN","PXRMCAT",86,0)
 D REM
"RTN","PXRMCAT",87,0)
 ;Sort Sub-Categories for this category into display order
"RTN","PXRMCAT",88,0)
 S SUB=0 K TEMP
"RTN","PXRMCAT",89,0)
 F  S SUB=$O(^PXRMD(811.7,PXRMCAT,10,SUB)) Q:SUB=""  D
"RTN","PXRMCAT",90,0)
 .S DATA=$G(^PXRMD(811.7,PXRMCAT,10,SUB,0)) Q:DATA=""
"RTN","PXRMCAT",91,0)
 .S SEQ=$P(DATA,U,2),TEMP(SEQ)=SUB
"RTN","PXRMCAT",92,0)
 ;
"RTN","PXRMCAT",93,0)
 ;Process sub-sub categories in the same manner
"RTN","PXRMCAT",94,0)
 S SEQ=""
"RTN","PXRMCAT",95,0)
 F  S SEQ=$O(TEMP(SEQ)) Q:SEQ=""  D
"RTN","PXRMCAT",96,0)
 .S SUB=TEMP(SEQ)
"RTN","PXRMCAT",97,0)
 .D GETLST(PXRMCAT,SUB,LEVEL)
"RTN","PXRMCAT",98,0)
 Q
"RTN","PXRMCAT",99,0)
 ;
"RTN","PXRMCAT",100,0)
 ;Reminders for this category
"RTN","PXRMCAT",101,0)
 ;---------------------------
"RTN","PXRMCAT",102,0)
REM S SUB=0 K TEMP
"RTN","PXRMCAT",103,0)
 ;Sort Reminders from this category into display sequence
"RTN","PXRMCAT",104,0)
 F  S SUB=$O(^PXRMD(811.7,PXRMCAT,2,SUB)) Q:SUB=""  D
"RTN","PXRMCAT",105,0)
 .S DATA=$G(^PXRMD(811.7,PXRMCAT,2,SUB,0)) Q:DATA=""
"RTN","PXRMCAT",106,0)
 .S PXRMIEN=$P(DATA,U) Q:PXRMIEN=""
"RTN","PXRMCAT",107,0)
 .S SEQ=$P(DATA,U,2)
"RTN","PXRMCAT",108,0)
 .S DATA=$G(^PXD(811.9,PXRMIEN,0)) Q:DATA=""
"RTN","PXRMCAT",109,0)
 .S NAME=$P(DATA,U) I NAME="" S NAME="Unknown"
"RTN","PXRMCAT",110,0)
 .S TEMP(SEQ_0)=NAME
"RTN","PXRMCAT",111,0)
 ;
"RTN","PXRMCAT",112,0)
 I LEVEL=0,$O(TEMP("")) S IC=IC+1,ARRAY(IC)=""
"RTN","PXRMCAT",113,0)
 ;
"RTN","PXRMCAT",114,0)
 ;Re-save reminders in output array for display
"RTN","PXRMCAT",115,0)
 S SEQ=""
"RTN","PXRMCAT",116,0)
 F  S SEQ=$O(TEMP(SEQ)) Q:SEQ=""  D
"RTN","PXRMCAT",117,0)
 .S IC=IC+1
"RTN","PXRMCAT",118,0)
 .S ARRAY(IC)=$J("",LEVEL)_"Sequence: "_$J(SEQ/10,2)_"   Reminder: "_TEMP(SEQ)
"RTN","PXRMCAT",119,0)
 Q
"RTN","PXRMCF")
0^10^B9296279
"RTN","PXRMCF",1,0)
PXRMCF ; SLC/PKR - Handle computed findings. ;03/20/2000
"RTN","PXRMCF",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMCF",3,0)
 ;
"RTN","PXRMCF",4,0)
 ;=======================================================================
"RTN","PXRMCF",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate computed findings.
"RTN","PXRMCF",6,0)
 N CFIEN,FIND0,FINDING
"RTN","PXRMCF",7,0)
 S CFIEN=""
"RTN","PXRMCF",8,0)
 F  S CFIEN=$O(^PXD(811.9,PXRMITEM,20,"E","PXRMD(811.4,",CFIEN)) Q:+CFIEN=0  D
"RTN","PXRMCF",9,0)
 . S FINDING=""
"RTN","PXRMCF",10,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","PXRMD(811.4,",CFIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMCF",11,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMCF",12,0)
 .. D FIEVAL(DFN,CFIEN,FIND0,"",FINDING,.FIEVAL)
"RTN","PXRMCF",13,0)
 Q
"RTN","PXRMCF",14,0)
 ;
"RTN","PXRMCF",15,0)
 ;=======================================================================
"RTN","PXRMCF",16,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate computed finding terms.
"RTN","PXRMCF",17,0)
 N CFIEN,FIND0,LFIEVAL,TFIND0,TFINDING
"RTN","PXRMCF",18,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMCF",19,0)
 S CFIEN=""
"RTN","PXRMCF",20,0)
 F  S CFIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","PXRMD(811.4,",CFIEN)) Q:+CFIEN=0  D
"RTN","PXRMCF",21,0)
 . S TFINDING=""
"RTN","PXRMCF",22,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","PXRMD(811.4,",CFIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMCF",23,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMCF",24,0)
 .. D FIEVAL(DFN,CFIEN,FIND0,TFIND0,TFINDING,.TFIEVAL)
"RTN","PXRMCF",25,0)
 Q
"RTN","PXRMCF",26,0)
 ;
"RTN","PXRMCF",27,0)
 ;=======================================================================
"RTN","PXRMCF",28,0)
FIEVAL(DFN,CFIEN,FIND0,TFIND0,FINDING,FIEVAL) ;
"RTN","PXRMCF",29,0)
 N CONVAL,DATE,ROUTINE,TEMP,TEST,TEXT,VALID,VALUE
"RTN","PXRMCF",30,0)
 S FIEVAL(FINDING,"FINDING")=CFIEN_";PXRMD(811.4,"
"RTN","PXRMCF",31,0)
 S TEMP=^PXRMD(811.4,CFIEN,0)
"RTN","PXRMCF",32,0)
 S FIEVAL(FINDING,"SOURCE")=$P(TEMP,U,1)
"RTN","PXRMCF",33,0)
 S ROUTINE=$P(TEMP,U,3)_"^"_$P(TEMP,U,2)_"(DFN,.TEST,.DATE,.VALUE,.TEXT)"
"RTN","PXRMCF",34,0)
 S (TEST,DATE,VALUE,TEXT)=""
"RTN","PXRMCF",35,0)
 D @ROUTINE
"RTN","PXRMCF",36,0)
 S FIEVAL(FINDING)=TEST
"RTN","PXRMCF",37,0)
 S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMCF",38,0)
 I $L(VALUE)>0 S FIEVAL(FINDING,"VALUE")=VALUE
"RTN","PXRMCF",39,0)
 I $L(TEXT)>0 S FIEVAL(FINDING,"TEXT")=TEXT
"RTN","PXRMCF",40,0)
 ;If the finding is false we are done.
"RTN","PXRMCF",41,0)
 I 'TEST Q
"RTN","PXRMCF",42,0)
 ;
"RTN","PXRMCF",43,0)
 ;Determine if the finding has expired.
"RTN","PXRMCF",44,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMCF",45,0)
 I 'VALID D  Q
"RTN","PXRMCF",46,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMCF",47,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMCF",48,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMCF",49,0)
 S CONVAL=$$COND^PXRMUTIL(FIND0,TFIND0,VALUE)
"RTN","PXRMCF",50,0)
 I CONVAL'="" D
"RTN","PXRMCF",51,0)
 . I CONVAL D
"RTN","PXRMCF",52,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMCF",53,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMCF",54,0)
 . E  D
"RTN","PXRMCF",55,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMCF",56,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMCF",57,0)
 Q
"RTN","PXRMCF",58,0)
 ;
"RTN","PXRMCF",59,0)
 ;=======================================================================
"RTN","PXRMCF",60,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMCF",61,0)
 ;maintenance output.
"RTN","PXRMCF",62,0)
 N DATA,DATE,FI,PNAME,TEMP,VALUE
"RTN","PXRMCF",63,0)
 S FI=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMCF",64,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMCF",65,0)
 S VALUE=$G(FIEVAL(FINDING,"VALUE"))
"RTN","PXRMCF",66,0)
 I +DATE>0 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMCF",67,0)
 E  S TEMP=""
"RTN","PXRMCF",68,0)
 S TEMP=TEMP_" Computed Finding: "
"RTN","PXRMCF",69,0)
 S PNAME=$P(^PXRMD(811.4,FI,0),U,4)
"RTN","PXRMCF",70,0)
 S TEMP=TEMP_PNAME
"RTN","PXRMCF",71,0)
 I $L(VALUE)>0 D
"RTN","PXRMCF",72,0)
 . S TEMP=TEMP_"; value - "_VALUE
"RTN","PXRMCF",73,0)
 ;If there is text append it.
"RTN","PXRMCF",74,0)
 I $D(FIEVAL(FINDING,"TEXT"))>0 S TEMP=TEMP_"; "_FIEVAL(FINDING,"TEXT")
"RTN","PXRMCF",75,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMCF",76,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMCF",77,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMCF",78,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMCF",79,0)
 S NLINES=NLINES+1
"RTN","PXRMCF",80,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMCF",81,0)
 I $D(PXRMDEV) D
"RTN","PXRMCF",82,0)
 . N UID
"RTN","PXRMCF",83,0)
 . S UID="CF "_PNAME
"RTN","PXRMCF",84,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMCF",85,0)
 Q
"RTN","PXRMCF",86,0)
 ;
"RTN","PXRMCFED")
0^179^B1041960
"RTN","PXRMCFED",1,0)
PXRMCFED ; SLC/PKR - Edit a reminder computed finding. ;06/16/2000
"RTN","PXRMCFED",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMCFED",3,0)
 ;
"RTN","PXRMCFED",4,0)
 ;=======================================================================
"RTN","PXRMCFED",5,0)
 N DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMCFED",6,0)
GETNAME ;Get the name of the computed finding to edit.
"RTN","PXRMCFED",7,0)
 K DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMCFED",8,0)
 S DIC="^PXRMD(811.4,"
"RTN","PXRMCFED",9,0)
 S DIC(0)="AEMQL"
"RTN","PXRMCFED",10,0)
 S DIC("A")="Select Reminder Computed Finding: "
"RTN","PXRMCFED",11,0)
 S DIC("S")="I $S(Y'<100000:1,(Y<100000)&($G(PXRMINST)=1)&(DUZ(0)=""@""):1,1:0)"
"RTN","PXRMCFED",12,0)
 S DLAYGO=811.4
"RTN","PXRMCFED",13,0)
 ;Set the starting place for additions.
"RTN","PXRMCFED",14,0)
 D SETSTART^PXRMCOPY(DIC,1)
"RTN","PXRMCFED",15,0)
 W !
"RTN","PXRMCFED",16,0)
 D ^DIC
"RTN","PXRMCFED",17,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMCFED",18,0)
 I Y=-1 G END
"RTN","PXRMCFED",19,0)
 S DA=$P(Y,U,1)
"RTN","PXRMCFED",20,0)
 D EDIT(DIC,DA)
"RTN","PXRMCFED",21,0)
 G GETNAME
"RTN","PXRMCFED",22,0)
END ;
"RTN","PXRMCFED",23,0)
 ;Reset starting place.
"RTN","PXRMCFED",24,0)
 D SETSTART^PXRMCOPY(DIC,0)
"RTN","PXRMCFED",25,0)
 Q
"RTN","PXRMCFED",26,0)
 ;
"RTN","PXRMCFED",27,0)
 ;=======================================================================
"RTN","PXRMCFED",28,0)
EDIT(ROOT,DA) ;
"RTN","PXRMCFED",29,0)
 N DIE,DR,DIDEL
"RTN","PXRMCFED",30,0)
 S DIE=ROOT,DIDEL=811.4
"RTN","PXRMCFED",31,0)
 S DR="[PXRM EDIT REMINDER CF]"
"RTN","PXRMCFED",32,0)
 D ^DIE
"RTN","PXRMCFED",33,0)
 Q
"RTN","PXRMCFED",34,0)
 ;
"RTN","PXRMCFOP")
1^190
"RTN","PXRMCLST")
0^12^B23161852
"RTN","PXRMCLST",1,0)
PXRMCLST ; SLC/PJH - List Reminder Categories ;03/09/2000
"RTN","PXRMCLST",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMCLST",3,0)
 ;
"RTN","PXRMCLST",4,0)
 ;List all categories (for protocol PXRM SELECTION LIST)
"RTN","PXRMCLST",5,0)
 ;-------------------
"RTN","PXRMCLST",6,0)
ALL N BY,DC,DHD,DIC,FLDS,FR,L,LOGIC,NOW,TO,Y
"RTN","PXRMCLST",7,0)
 S Y=1
"RTN","PXRMCLST",8,0)
 D SET
"RTN","PXRMCLST",9,0)
 S DIC="^PXRMD(811.7,"
"RTN","PXRMCLST",10,0)
 S BY=".01"
"RTN","PXRMCLST",11,0)
 S FR=""
"RTN","PXRMCLST",12,0)
 S TO=""
"RTN","PXRMCLST",13,0)
 S DHD="W ?0 D HED^PXRMCLST"
"RTN","PXRMCLST",14,0)
 D DISP
"RTN","PXRMCLST",15,0)
 Q
"RTN","PXRMCLST",16,0)
 ;
"RTN","PXRMCLST",17,0)
 ;DISPLAY (Display from FLDS array)
"RTN","PXRMCLST",18,0)
 ;-------
"RTN","PXRMCLST",19,0)
DISP S L=0,FLDS="[PXRM REMINDER CATEGORIES]"
"RTN","PXRMCLST",20,0)
 D EN1^DIP
"RTN","PXRMCLST",21,0)
 Q
"RTN","PXRMCLST",22,0)
 ;
"RTN","PXRMCLST",23,0)
 ;Build list of sub-categories
"RTN","PXRMCLST",24,0)
 ;----------------------------
"RTN","PXRMCLST",25,0)
DSP N ARRAY,IC,SEQ,TAB,TXT
"RTN","PXRMCLST",26,0)
 ;
"RTN","PXRMCLST",27,0)
 ; D0=IEN OF PARENT D1=NODE NUMBER IN 10 OF CHILD 
"RTN","PXRMCLST",28,0)
 ;
"RTN","PXRMCLST",29,0)
 S IC=0 D GETLST(D0,D1,0)
"RTN","PXRMCLST",30,0)
 ;Display list of sub-categories
"RTN","PXRMCLST",31,0)
 S IC=0
"RTN","PXRMCLST",32,0)
 F  S IC=$O(ARRAY(IC)) Q:IC=""  D
"RTN","PXRMCLST",33,0)
 .S TAB=$P(ARRAY(IC),U),TXT=$P(ARRAY(IC),U,2)
"RTN","PXRMCLST",34,0)
 .W !,?TAB,TXT
"RTN","PXRMCLST",35,0)
 Q
"RTN","PXRMCLST",36,0)
 ;
"RTN","PXRMCLST",37,0)
 ;Get list of sub-categories
"RTN","PXRMCLST",38,0)
 ;--------------------------
"RTN","PXRMCLST",39,0)
GETLST(D0,D1,LEVEL) ;
"RTN","PXRMCLST",40,0)
 N CHILD,DATA,NAME,PXRMIEN,PXRMCAT,SEQ,SUB,TEMP
"RTN","PXRMCLST",41,0)
 ;Determine if this subcategory has children
"RTN","PXRMCLST",42,0)
 S DATA=$G(^PXRMD(811.7,D0,10,D1,0)) Q:DATA=""
"RTN","PXRMCLST",43,0)
 S PXRMCAT=$P(DATA,U) Q:PXRMCAT=""
"RTN","PXRMCLST",44,0)
 S NAME=$G(^PXRMD(811.7,PXRMCAT,0)) I NAME="" S NAME=PXRMCAT
"RTN","PXRMCLST",45,0)
 S IC=IC+1,ARRAY(IC)=LEVEL_U_"Sub-category: "_NAME
"RTN","PXRMCLST",46,0)
 ;Increment tab
"RTN","PXRMCLST",47,0)
 S LEVEL=LEVEL+5
"RTN","PXRMCLST",48,0)
 ;Don't allow > 4 levels
"RTN","PXRMCLST",49,0)
 I LEVEL>20 S IC=IC+1,ARRAY(IC)=LEVEL_U_"Further levels" Q
"RTN","PXRMCLST",50,0)
 ;
"RTN","PXRMCLST",51,0)
 ;Sort Reminders from this category into display sequence
"RTN","PXRMCLST",52,0)
 S SUB=0 K TEMP
"RTN","PXRMCLST",53,0)
 F  S SUB=$O(^PXRMD(811.7,PXRMCAT,2,SUB)) Q:SUB=""  D
"RTN","PXRMCLST",54,0)
 .S DATA=$G(^PXRMD(811.7,PXRMCAT,2,SUB,0)) Q:DATA=""
"RTN","PXRMCLST",55,0)
 .S PXRMIEN=$P(DATA,U) Q:PXRMIEN=""
"RTN","PXRMCLST",56,0)
 .S SEQ=$P(DATA,U,2)
"RTN","PXRMCLST",57,0)
 .S DATA=$G(^PXD(811.9,PXRMIEN,0)) Q:DATA=""
"RTN","PXRMCLST",58,0)
 .S NAME=$P(DATA,U) I NAME="" S NAME="Unknown"
"RTN","PXRMCLST",59,0)
 .S TEMP(SEQ)=NAME
"RTN","PXRMCLST",60,0)
 ;
"RTN","PXRMCLST",61,0)
 ;Re-save reminders in output array for display
"RTN","PXRMCLST",62,0)
 S SEQ=""
"RTN","PXRMCLST",63,0)
 F  S SEQ=$O(TEMP(SEQ)) Q:SEQ=""  D
"RTN","PXRMCLST",64,0)
 .S IC=IC+1
"RTN","PXRMCLST",65,0)
 .S ARRAY(IC)=LEVEL_U_"Sequence: "_$J(SEQ,2)_"  Reminder: "_TEMP(SEQ)
"RTN","PXRMCLST",66,0)
 ;
"RTN","PXRMCLST",67,0)
 ;Sort Sub-Categories for this category into display order
"RTN","PXRMCLST",68,0)
 S SUB=0 K TEMP
"RTN","PXRMCLST",69,0)
 F  S SUB=$O(^PXRMD(811.7,PXRMCAT,10,SUB)) Q:SUB=""  D
"RTN","PXRMCLST",70,0)
 .S DATA=$G(^PXRMD(811.7,PXRMCAT,10,SUB,0)) Q:DATA=""
"RTN","PXRMCLST",71,0)
 .S SEQ=$P(DATA,U,2),TEMP(SEQ)=SUB
"RTN","PXRMCLST",72,0)
 ;
"RTN","PXRMCLST",73,0)
 ;Process sub-sub categories in the same manner
"RTN","PXRMCLST",74,0)
 S SEQ=""
"RTN","PXRMCLST",75,0)
 F  S SEQ=$O(TEMP(SEQ)) Q:SEQ=""  D
"RTN","PXRMCLST",76,0)
 .S SUB=TEMP(SEQ)
"RTN","PXRMCLST",77,0)
 .D GETLST(PXRMCAT,SUB,LEVEL)
"RTN","PXRMCLST",78,0)
 Q
"RTN","PXRMCLST",79,0)
 ;
"RTN","PXRMCLST",80,0)
 ;Display Header (see DHD variable)
"RTN","PXRMCLST",81,0)
 ;--------------
"RTN","PXRMCLST",82,0)
HED N TEMP,TEXTLEN,TEXTHED,TEXTUND
"RTN","PXRMCLST",83,0)
 S TEXTHED="REMINDER CATEGORY LIST"
"RTN","PXRMCLST",84,0)
 S TEXTUND=$TR($J("",IOM)," ","-")
"RTN","PXRMCLST",85,0)
 S TEMP=NOW_"  Page "_DC
"RTN","PXRMCLST",86,0)
 S TEXTLEN=$L(TEMP)
"RTN","PXRMCLST",87,0)
 W TEXTHED
"RTN","PXRMCLST",88,0)
 W ?(IOM-TEXTLEN),TEMP
"RTN","PXRMCLST",89,0)
 W !,TEXTUND,!!
"RTN","PXRMCLST",90,0)
 Q
"RTN","PXRMCLST",91,0)
 ;
"RTN","PXRMCLST",92,0)
 ;Inquire/Print Option (for protocol PXRM GENERAL INQUIRE/PRINT)
"RTN","PXRMCLST",93,0)
 ;--------------------
"RTN","PXRMCLST",94,0)
INQ(Y) N BY,DC,DHD,DIC,FLDS,FR,L,LOGIC,NOW,TO
"RTN","PXRMCLST",95,0)
 S DIC="^PXRMD(811.7,"
"RTN","PXRMCLST",96,0)
 S DIC(0)="AEMQ"
"RTN","PXRMCLST",97,0)
 D SET
"RTN","PXRMCLST",98,0)
 D DISP
"RTN","PXRMCLST",99,0)
 Q
"RTN","PXRMCLST",100,0)
 ;
"RTN","PXRMCLST",101,0)
 ;Input Transforms for edit option PXRM REMINDER CATEGORY EDIT #811.7
"RTN","PXRMCLST",102,0)
 ;-------------------------------------------------------------------
"RTN","PXRMCLST",103,0)
BADITEM(X,DA1) ;Subcategory
"RTN","PXRMCLST",104,0)
 I X=DA1 Q 1
"RTN","PXRMCLST",105,0)
 Q '$$PARENTOK(DA1,X)
"RTN","PXRMCLST",106,0)
 ;
"RTN","PXRMCLST",107,0)
KILLAC ;This only applies if deleting a sub-category
"RTN","PXRMCLST",108,0)
 I '$D(^PXRMD(811.7,DA)) Q
"RTN","PXRMCLST",109,0)
 ;
"RTN","PXRMCLST",110,0)
 N SUB,MAS
"RTN","PXRMCLST",111,0)
 S MAS=""
"RTN","PXRMCLST",112,0)
 ;Get the parent categories for this sub sub-category, quit if none
"RTN","PXRMCLST",113,0)
 F  S MAS=$O(^PXRMD(811.7,"AC",DA,MAS)) Q:MAS=""  D
"RTN","PXRMCLST",114,0)
 .;Get sub category position in the parent, quit if none
"RTN","PXRMCLST",115,0)
 .S SUB=$O(^PXRMD(811.7,"AC",DA,MAS,"")) Q:SUB=""
"RTN","PXRMCLST",116,0)
 .;
"RTN","PXRMCLST",117,0)
 .;Kill the sub category on the parent category
"RTN","PXRMCLST",118,0)
 .N DIC,DIK,DA S DIK="^PXRMD(811.7,MAS,10,",DA(1)=MAS,DA=SUB D ^DIK
"RTN","PXRMCLST",119,0)
 .;Cross reference on SUBCATEGORY field kills the AC index entry
"RTN","PXRMCLST",120,0)
 Q
"RTN","PXRMCLST",121,0)
 ;
"RTN","PXRMCLST",122,0)
PARENTOK(PARENT,ITEM) ;Returns true if category is already in tree
"RTN","PXRMCLST",123,0)
 N IDX,OK
"RTN","PXRMCLST",124,0)
 S IDX=0,OK=1
"RTN","PXRMCLST",125,0)
 F  S IDX=$O(^PXRMD(811.7,"AC",PARENT,IDX)) Q:'IDX  D  Q:'OK
"RTN","PXRMCLST",126,0)
 .I IDX=ITEM S OK=0 Q
"RTN","PXRMCLST",127,0)
 .S OK=$$PARENTOK(IDX,ITEM)
"RTN","PXRMCLST",128,0)
 Q OK
"RTN","PXRMCLST",129,0)
 ;
"RTN","PXRMCLST",130,0)
 ;Reminders for this category
"RTN","PXRMCLST",131,0)
 ;---------------------------
"RTN","PXRMCLST",132,0)
REM N ARRAY,DATA,IC,NAME,PXRMIEN,SEQ,TEMP
"RTN","PXRMCLST",133,0)
 ;
"RTN","PXRMCLST",134,0)
 ; D0=IEN OF CATEGORY 
"RTN","PXRMCLST",135,0)
 ;
"RTN","PXRMCLST",136,0)
 S SUB=0
"RTN","PXRMCLST",137,0)
 ;Sort Reminders from this category into display sequence
"RTN","PXRMCLST",138,0)
 F  S SUB=$O(^PXRMD(811.7,D0,2,SUB)) Q:SUB=""  D
"RTN","PXRMCLST",139,0)
 .S DATA=$G(^PXRMD(811.7,D0,2,SUB,0)) Q:DATA=""
"RTN","PXRMCLST",140,0)
 .S PXRMIEN=$P(DATA,U) Q:PXRMIEN=""
"RTN","PXRMCLST",141,0)
 .S SEQ=$P(DATA,U,2)
"RTN","PXRMCLST",142,0)
 .S DATA=$G(^PXD(811.9,PXRMIEN,0)) Q:DATA=""
"RTN","PXRMCLST",143,0)
 .S NAME=$P(DATA,U) I NAME="" S NAME="Unknown"
"RTN","PXRMCLST",144,0)
 .S TEMP(SEQ_0)=NAME
"RTN","PXRMCLST",145,0)
 ;
"RTN","PXRMCLST",146,0)
 I $O(TEMP(""))="" W ! Q
"RTN","PXRMCLST",147,0)
 ;
"RTN","PXRMCLST",148,0)
 ;Re-save reminders in output array for display
"RTN","PXRMCLST",149,0)
 S SEQ="",IC=0
"RTN","PXRMCLST",150,0)
 F  S SEQ=$O(TEMP(SEQ)) Q:SEQ=""  D
"RTN","PXRMCLST",151,0)
 .S IC=IC+1
"RTN","PXRMCLST",152,0)
 .S ARRAY(IC)="Sequence: "_$J(SEQ/10,2)_"   Reminder: "_TEMP(SEQ)
"RTN","PXRMCLST",153,0)
 ;
"RTN","PXRMCLST",154,0)
 S IC=0
"RTN","PXRMCLST",155,0)
 F  S IC=$O(ARRAY(IC)) Q:IC=""  D
"RTN","PXRMCLST",156,0)
 .W !,ARRAY(IC)
"RTN","PXRMCLST",157,0)
 Q
"RTN","PXRMCLST",158,0)
 ;
"RTN","PXRMCLST",159,0)
SETAC Q
"RTN","PXRMCLST",160,0)
 ;
"RTN","PXRMCLST",161,0)
 ;Verify Reminder/Category display order is unique
"RTN","PXRMCLST",162,0)
 ;RECORD 2=Reminder 10=Sub-category
"RTN","PXRMCLST",163,0)
UNIQUE(X,DA1,DA,RECORD) ;
"RTN","PXRMCLST",164,0)
 N SUB,DATA,SEQ,TEMP
"RTN","PXRMCLST",165,0)
 S SUB=0
"RTN","PXRMCLST",166,0)
 F  S SUB=$O(^PXRMD(811.7,DA1,RECORD,SUB)) Q:'SUB  D
"RTN","PXRMCLST",167,0)
 .Q:SUB=DA
"RTN","PXRMCLST",168,0)
 .S SEQ=$P($G(^PXRMD(811.7,DA1,RECORD,SUB,0)),U,2)
"RTN","PXRMCLST",169,0)
 .I SEQ'="" S TEMP(SEQ)=""
"RTN","PXRMCLST",170,0)
 I $D(TEMP(X)) W "  Sequence number already used " Q 0
"RTN","PXRMCLST",171,0)
 Q 1
"RTN","PXRMCLST",172,0)
 ;
"RTN","PXRMCLST",173,0)
SET ;Setup all the variables
"RTN","PXRMCLST",174,0)
 ; Set Date for Header
"RTN","PXRMCLST",175,0)
 S NOW=$$NOW^XLFDT
"RTN","PXRMCLST",176,0)
 S NOW=$$FMTE^XLFDT(NOW,"1P")
"RTN","PXRMCLST",177,0)
 ;
"RTN","PXRMCLST",178,0)
 ;These variables need to be setup every time because DIP kills them.
"RTN","PXRMCLST",179,0)
 S BY="NUMBER"
"RTN","PXRMCLST",180,0)
 S (FR,TO)=+$P(Y,U,1)
"RTN","PXRMCLST",181,0)
 S DHD="W ?0 D HED^PXRMCLST"
"RTN","PXRMCLST",182,0)
 ;
"RTN","PXRMCLST",183,0)
 Q
"RTN","PXRMCODE")
0^184^B598400
"RTN","PXRMCODE",1,0)
PXRMCODE ; SLC/PKR - Routines for handling standard coded items. ;04/03/2000
"RTN","PXRMCODE",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMCODE",3,0)
 ;
"RTN","PXRMCODE",4,0)
 ;=======================================================================
"RTN","PXRMCODE",5,0)
VCICD0 ;This is the screen for ICD0 codes, subfile 811.22102.
"RTN","PXRMCODE",6,0)
 I '$D(X) Q
"RTN","PXRMCODE",7,0)
 N RETVAL
"RTN","PXRMCODE",8,0)
 S RETVAL=$$CODE^PXRMVAL(X,80.1)
"RTN","PXRMCODE",9,0)
 I '(+RETVAL) D
"RTN","PXRMCODE",10,0)
 . D EN^DDIOL($P(RETVAL,U,4))
"RTN","PXRMCODE",11,0)
 . K X
"RTN","PXRMCODE",12,0)
 Q
"RTN","PXRMCODE",13,0)
 ;
"RTN","PXRMCODE",14,0)
 ;=======================================================================
"RTN","PXRMCODE",15,0)
VCICD9 ;This is the screen for ICD9 codes subfile 811.22103.
"RTN","PXRMCODE",16,0)
 I '$D(X) Q
"RTN","PXRMCODE",17,0)
 N RETVAL
"RTN","PXRMCODE",18,0)
 S RETVAL=$$CODE^PXRMVAL(X,80)
"RTN","PXRMCODE",19,0)
 I '(+RETVAL) D
"RTN","PXRMCODE",20,0)
 . D EN^DDIOL($P(RETVAL,U,4))
"RTN","PXRMCODE",21,0)
 . K X
"RTN","PXRMCODE",22,0)
 Q
"RTN","PXRMCODE",23,0)
 ;
"RTN","PXRMCODE",24,0)
 ;=======================================================================
"RTN","PXRMCODE",25,0)
VCICPT ;This is the screen for CPT codes subfile 811.22104.
"RTN","PXRMCODE",26,0)
 I '$D(X) Q
"RTN","PXRMCODE",27,0)
 N RETVAL
"RTN","PXRMCODE",28,0)
 S RETVAL=$$CODE^PXRMVAL(X,81)
"RTN","PXRMCODE",29,0)
 I '(+RETVAL) D
"RTN","PXRMCODE",30,0)
 . D EN^DDIOL($P(RETVAL,U,4))
"RTN","PXRMCODE",31,0)
 . K X
"RTN","PXRMCODE",32,0)
 Q
"RTN","PXRMCODE",33,0)
 ;
"RTN","PXRMCOPY")
0^216^B12348906
"RTN","PXRMCOPY",1,0)
PXRMCOPY ; SLC/PKR,PJH - Copy various reminder files. ;06/15/2000
"RTN","PXRMCOPY",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMCOPY",3,0)
 ;
"RTN","PXRMCOPY",4,0)
 ;=======================================================================
"RTN","PXRMCOPY",5,0)
COPY(PROMPT,ROOT,WHAT) ;Copy an entry of ROOT into a new entry.
"RTN","PXRMCOPY",6,0)
 N DIROUT,DTOUT,DUOUT,PXRMSNUM
"RTN","PXRMCOPY",7,0)
 S PXRMSNUM=+$P($$SITE^VASITE,U,3)
"RTN","PXRMCOPY",8,0)
 I $L(PXRMSNUM)'=3 W !,"You must have a 3-digit primary station number in order to use this option, See IRM!" Q
"RTN","PXRMCOPY",9,0)
 ;
"RTN","PXRMCOPY",10,0)
 F  D GETORGR Q:$D(DIROUT)  Q:$D(DTOUT)
"RTN","PXRMCOPY",11,0)
 Q
"RTN","PXRMCOPY",12,0)
 ;
"RTN","PXRMCOPY",13,0)
 ;=======================================================================
"RTN","PXRMCOPY",14,0)
GETORGR ;Look-up logic to get and copy source entry to destination.
"RTN","PXRMCOPY",15,0)
 N DA,DIE,DIC,DIK,DIR,FDA,FIELDLEN
"RTN","PXRMCOPY",16,0)
 N IENN,IENO,IENS,MSG,NAME,ORGNAME,X,Y
"RTN","PXRMCOPY",17,0)
 S DIC=ROOT,DIC(0)="AEQ",DIC("A")=PROMPT
"RTN","PXRMCOPY",18,0)
 W !
"RTN","PXRMCOPY",19,0)
 D ^DIC
"RTN","PXRMCOPY",20,0)
 I $D(DUOUT)!$D(DTOUT) S DIROUT="" Q
"RTN","PXRMCOPY",21,0)
 S IENO=$P(Y,U,1)
"RTN","PXRMCOPY",22,0)
 I IENO=-1 S DIROUT="" Q
"RTN","PXRMCOPY",23,0)
 ;
"RTN","PXRMCOPY",24,0)
 ;Set the starting place for additions.
"RTN","PXRMCOPY",25,0)
 D SETSTART^PXRMCOPY(DIC,1)
"RTN","PXRMCOPY",26,0)
 S IENN=$$GETFOIEN(ROOT)
"RTN","PXRMCOPY",27,0)
 D MERGE(IENN,IENO,ROOT)
"RTN","PXRMCOPY",28,0)
 ;
"RTN","PXRMCOPY",29,0)
 ;Get the new name.
"RTN","PXRMCOPY",30,0)
 S ORGNAME=$P(@(ROOT_IENO_",0)"),U,1)
"RTN","PXRMCOPY",31,0)
 S FILE=$$FNFR^PXRMUTIL(ROOT)
"RTN","PXRMCOPY",32,0)
 S FIELDLEN=$$GET1^DID(FILE,.01,"","FIELD LENGTH")
"RTN","PXRMCOPY",33,0)
 S DIR(0)="F"_U_"3:"_FIELDLEN_U_"K:(X?.N)!'(X'?1P.E) X"
"RTN","PXRMCOPY",34,0)
 S DIR("A")="PLEASE ENTER A UNIQUE NAME"
"RTN","PXRMCOPY",35,0)
GETNAM D ^DIR
"RTN","PXRMCOPY",36,0)
 I $D(DIRUT) D DELETE(ROOT,IENN) Q
"RTN","PXRMCOPY",37,0)
 S NAME=Y
"RTN","PXRMCOPY",38,0)
 ;
"RTN","PXRMCOPY",39,0)
 ;Make sure the new name is valid.
"RTN","PXRMCOPY",40,0)
 I '$$VNAME^PXRMINTR(NAME,FILE) G GETNAM
"RTN","PXRMCOPY",41,0)
 ;
"RTN","PXRMCOPY",42,0)
 ;Change to the new name.
"RTN","PXRMCOPY",43,0)
 S IENS=IENN_","
"RTN","PXRMCOPY",44,0)
 S FDA(FILE,IENS,.01)=NAME
"RTN","PXRMCOPY",45,0)
 I FILE=811.5 S FDA(FILE,IENS,.02)="L"
"RTN","PXRMCOPY",46,0)
 K MSG
"RTN","PXRMCOPY",47,0)
 D FILE^DIE("","FDA","MSG")
"RTN","PXRMCOPY",48,0)
 ;Check to make sure the name was not a duplicate.
"RTN","PXRMCOPY",49,0)
 I $G(MSG("DIERR",1))=740 D  G GETNAM
"RTN","PXRMCOPY",50,0)
 . W !,NAME," is not a unique name!"
"RTN","PXRMCOPY",51,0)
 ;
"RTN","PXRMCOPY",52,0)
 ;Reindex the cross-references.
"RTN","PXRMCOPY",53,0)
 S DIK=ROOT,DA=IENN
"RTN","PXRMCOPY",54,0)
 D IX^DIK
"RTN","PXRMCOPY",55,0)
 W !
"RTN","PXRMCOPY",56,0)
 ;
"RTN","PXRMCOPY",57,0)
 ;Tell the user what has happened and allow for editing of the new item.
"RTN","PXRMCOPY",58,0)
 S DIR(0)="Y"
"RTN","PXRMCOPY",59,0)
 S DIR("A")="Do you want to edit it now"
"RTN","PXRMCOPY",60,0)
 S DIR("A",1)="The original "_WHAT_" "_ORGNAME_" has been copied into "_NAME_"."
"RTN","PXRMCOPY",61,0)
 D ^DIR Q:$D(DIRUT)
"RTN","PXRMCOPY",62,0)
 I Y D EDIT^PXRMEDIT(ROOT,IENN)
"RTN","PXRMCOPY",63,0)
 E  D SETSTART^PXRMCOPY(DIC,0)
"RTN","PXRMCOPY",64,0)
 Q
"RTN","PXRMCOPY",65,0)
 ;
"RTN","PXRMCOPY",66,0)
 ;=======================================================================
"RTN","PXRMCOPY",67,0)
COPYREM ;Copy a reminder item into the site's range of IENS.
"RTN","PXRMCOPY",68,0)
 N PROMPT,ROOT,WHAT
"RTN","PXRMCOPY",69,0)
 S WHAT="reminder"
"RTN","PXRMCOPY",70,0)
 S ROOT="^PXD(811.9,"
"RTN","PXRMCOPY",71,0)
 S PROMPT="Select the reminder item to copy: "
"RTN","PXRMCOPY",72,0)
 D COPY(PROMPT,ROOT,WHAT)
"RTN","PXRMCOPY",73,0)
 Q
"RTN","PXRMCOPY",74,0)
 ;
"RTN","PXRMCOPY",75,0)
 ;=======================================================================
"RTN","PXRMCOPY",76,0)
COPYTAX ;Copy a taxonomy item into the site's range of IENS.
"RTN","PXRMCOPY",77,0)
 N PROMPT,ROOT,WHAT
"RTN","PXRMCOPY",78,0)
 S WHAT="taxonomy"
"RTN","PXRMCOPY",79,0)
 S ROOT="^PXD(811.2,"
"RTN","PXRMCOPY",80,0)
 S PROMPT="Select the taxonomy item to copy: "
"RTN","PXRMCOPY",81,0)
 D COPY(PROMPT,ROOT,WHAT)
"RTN","PXRMCOPY",82,0)
 Q
"RTN","PXRMCOPY",83,0)
 ;
"RTN","PXRMCOPY",84,0)
 ;=======================================================================
"RTN","PXRMCOPY",85,0)
COPYTERM ;Copy a reminder term into the site's range of IENS.
"RTN","PXRMCOPY",86,0)
 N PROMPT,ROOT,WHAT
"RTN","PXRMCOPY",87,0)
 S WHAT="reminder term"
"RTN","PXRMCOPY",88,0)
 S ROOT="^PXRMD(811.5,"
"RTN","PXRMCOPY",89,0)
 S PROMPT="Select the reminder term to copy: "
"RTN","PXRMCOPY",90,0)
 D COPY(PROMPT,ROOT,WHAT)
"RTN","PXRMCOPY",91,0)
 Q
"RTN","PXRMCOPY",92,0)
 ;
"RTN","PXRMCOPY",93,0)
 ;=======================================================================
"RTN","PXRMCOPY",94,0)
DELETE(DIK,DA) ;Delete the entry just added. 
"RTN","PXRMCOPY",95,0)
 D ^DIK
"RTN","PXRMCOPY",96,0)
 W !!,"New entry not created due to invalid name!",!
"RTN","PXRMCOPY",97,0)
 Q
"RTN","PXRMCOPY",98,0)
 ;
"RTN","PXRMCOPY",99,0)
 ;=======================================================================
"RTN","PXRMCOPY",100,0)
GETFOIEN(ROOT) ;Return the first open IEN in ROOT. This should be called
"RTN","PXRMCOPY",101,0)
 ;after a call to SETSTART.
"RTN","PXRMCOPY",102,0)
 N ENTRY,NIEN,OIEN
"RTN","PXRMCOPY",103,0)
 S ENTRY=ROOT_0_")"
"RTN","PXRMCOPY",104,0)
 S OIEN=$P(@ENTRY,U,3)
"RTN","PXRMCOPY",105,0)
 S ENTRY=ROOT_OIEN_")"
"RTN","PXRMCOPY",106,0)
 F  S NIEN=$O(@ENTRY) Q:+(NIEN-OIEN)>1  Q:+NIEN'>0  S OIEN=NIEN,ENTRY=ROOT_NIEN_")"
"RTN","PXRMCOPY",107,0)
 Q OIEN+1
"RTN","PXRMCOPY",108,0)
 ;
"RTN","PXRMCOPY",109,0)
 ;=======================================================================
"RTN","PXRMCOPY",110,0)
MERGE(IENN,IENO,ROOT) ;Use MERGE to copy ROOT(IENO into ROOT(IENN.
"RTN","PXRMCOPY",111,0)
 N DEST,SOURCE
"RTN","PXRMCOPY",112,0)
 S DEST=ROOT_IENN_")"
"RTN","PXRMCOPY",113,0)
 ;Lock the file before merging.
"RTN","PXRMCOPY",114,0)
 L +@DEST:10
"RTN","PXRMCOPY",115,0)
 S SOURCE=ROOT_IENO_")"
"RTN","PXRMCOPY",116,0)
 M @DEST=@SOURCE
"RTN","PXRMCOPY",117,0)
 ;Unlock the file
"RTN","PXRMCOPY",118,0)
 L -@DEST
"RTN","PXRMCOPY",119,0)
 Q
"RTN","PXRMCOPY",120,0)
 ;
"RTN","PXRMCOPY",121,0)
 ;=======================================================================
"RTN","PXRMCOPY",122,0)
SETSTART(ROOT,NAT) ;Set the starting value to add new entries. The
"RTN","PXRMCOPY",123,0)
 ;national number space is 1 to 99999. Site number spaces are XXX001
"RTN","PXRMCOPY",124,0)
 ;to XXX999 where XXX is the site number.
"RTN","PXRMCOPY",125,0)
 N CUR,ENTRY
"RTN","PXRMCOPY",126,0)
 S ENTRY=ROOT_"0)"
"RTN","PXRMCOPY",127,0)
 I NAT,$G(PXRMINST)=1,DUZ(0)="@"  S $P(@ENTRY,U,3)=1
"RTN","PXRMCOPY",128,0)
 E  S $P(@ENTRY,U,3)=+($P($$SITE^VASITE,U,3)_"001")
"RTN","PXRMCOPY",129,0)
 Q
"RTN","PXRMCOPY",130,0)
 ;
"RTN","PXRMDATE")
0^14^B20715080
"RTN","PXRMDATE",1,0)
PXRMDATE ; SLC/PKR - Clinical Reminders date utilities. ;05/18/2000
"RTN","PXRMDATE",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDATE",3,0)
 ;
"RTN","PXRMDATE",4,0)
 ;=======================================================================
"RTN","PXRMDATE",5,0)
DUE(RESDATE,FREQ,DUE,DUEDATE) ;Determine if the reminder is
"RTN","PXRMDATE",6,0)
 ;due now. Compute the due date.  This will be the date of the
"RTN","PXRMDATE",7,0)
 ;resolution finding + the reminder frequency. Subtract the due in
"RTN","PXRMDATE",8,0)
 ;advance time to see if the reminder should be marked as due.
"RTN","PXRMDATE",9,0)
 ;
"RTN","PXRMDATE",10,0)
 N DATE,DIAT,DIATOK,LDATE,TDDUE,TODAY
"RTN","PXRMDATE",11,0)
 I FREQ="" D  Q
"RTN","PXRMDATE",12,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","INCMPLT")="Incomplete reminder definition see the Clinical Reminder coordinator."
"RTN","PXRMDATE",13,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","FREQ")="No reminder frequency - cannot compute due date!"
"RTN","PXRMDATE",14,0)
 ;
"RTN","PXRMDATE",15,0)
 ;If the final frequency is 0Y then the reminder is not due.
"RTN","PXRMDATE",16,0)
 I FREQ="0Y" D  Q
"RTN","PXRMDATE",17,0)
 . S DUE=0
"RTN","PXRMDATE",18,0)
 . S DUEDATE=""
"RTN","PXRMDATE",19,0)
 ;
"RTN","PXRMDATE",20,0)
 I RESDATE["X" S LDATE=0
"RTN","PXRMDATE",21,0)
 E  S LDATE=+RESDATE
"RTN","PXRMDATE",22,0)
 S TODAY=$$NOW
"RTN","PXRMDATE",23,0)
 S DUE=""
"RTN","PXRMDATE",24,0)
 I LDATE=0 D  Q
"RTN","PXRMDATE",25,0)
 . S DUE="DUE NOW"
"RTN","PXRMDATE",26,0)
 . S DUEDATE="DUE NOW"
"RTN","PXRMDATE",27,0)
 ;
"RTN","PXRMDATE",28,0)
 S DATE=$$FULLDATE(LDATE)
"RTN","PXRMDATE",29,0)
 S DUEDATE=$$NEWDATE(DATE,FREQ)
"RTN","PXRMDATE",30,0)
 ;
"RTN","PXRMDATE",31,0)
 ;If the due date is less than or equal to today's date the reminder
"RTN","PXRMDATE",32,0)
 ;is due.
"RTN","PXRMDATE",33,0)
 I DUEDATE'>TODAY D  Q
"RTN","PXRMDATE",34,0)
 . S DUE="DUE NOW"
"RTN","PXRMDATE",35,0)
 ;
"RTN","PXRMDATE",36,0)
 S DIAT="-"_$P($G(^PXD(811.9,PXRMITEM,0)),U,4)
"RTN","PXRMDATE",37,0)
 I (+DIAT)=0 D
"RTN","PXRMDATE",38,0)
 . S DIATOK=0
"RTN","PXRMDATE",39,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"WARNING","DIAT")="Warning no do in advance time"
"RTN","PXRMDATE",40,0)
 E  S DIATOK=1
"RTN","PXRMDATE",41,0)
 ;
"RTN","PXRMDATE",42,0)
 I DIATOK S TDDUE=$$NEWDATE(DUEDATE,DIAT)
"RTN","PXRMDATE",43,0)
 E  S TDDUE=DUEDATE
"RTN","PXRMDATE",44,0)
 I TDDUE'>TODAY S DUE="DUE SOON"
"RTN","PXRMDATE",45,0)
 E  S DUE="RESOLVED"
"RTN","PXRMDATE",46,0)
 Q
"RTN","PXRMDATE",47,0)
 ;
"RTN","PXRMDATE",48,0)
 ;=======================================================================
"RTN","PXRMDATE",49,0)
EDATE(DATE) ;Check for an historical (event) date, format as appropriate.
"RTN","PXRMDATE",50,0)
 N TEMP
"RTN","PXRMDATE",51,0)
 S TEMP=$$FMTE^XLFDT(DATE,"5D")
"RTN","PXRMDATE",52,0)
 I DATE["E" S TEMP=TEMP_" (E)"
"RTN","PXRMDATE",53,0)
 Q TEMP
"RTN","PXRMDATE",54,0)
 ;
"RTN","PXRMDATE",55,0)
 ;=======================================================================
"RTN","PXRMDATE",56,0)
FMDFINVL(INVDT,DATE) ;Convert an inverse date (LABORATORY format
"RTN","PXRMDATE",57,0)
 ;9999999-date) to Fileman format.
"RTN","PXRMDATE",58,0)
 I $L(INVDT)=0 Q INVDT
"RTN","PXRMDATE",59,0)
 N TEMP
"RTN","PXRMDATE",60,0)
 S TEMP=9999999-INVDT
"RTN","PXRMDATE",61,0)
 ;If DATE is TRUE return only the date portion.
"RTN","PXRMDATE",62,0)
 I DATE S TEMP=$P(TEMP,".",1)
"RTN","PXRMDATE",63,0)
 Q TEMP
"RTN","PXRMDATE",64,0)
 ;
"RTN","PXRMDATE",65,0)
 ;=======================================================================
"RTN","PXRMDATE",66,0)
FMDFINVR(INVDT,DATE) ;Convert an inverse date (RADIOLOGY format
"RTN","PXRMDATE",67,0)
 ;9999999.9999-date) to Fileman format.
"RTN","PXRMDATE",68,0)
 I $L(INVDT)=0 Q INVDT
"RTN","PXRMDATE",69,0)
 N TEMP
"RTN","PXRMDATE",70,0)
 S TEMP=9999999.9999-INVDT
"RTN","PXRMDATE",71,0)
 ;If DATE is TRUE return only the date portion.
"RTN","PXRMDATE",72,0)
 I DATE S TEMP=$P(TEMP,".",1)
"RTN","PXRMDATE",73,0)
 Q TEMP
"RTN","PXRMDATE",74,0)
 ;
"RTN","PXRMDATE",75,0)
 ;=======================================================================
"RTN","PXRMDATE",76,0)
FULLDATE(DATE) ;See if DATE is a full date, i.e., it has a month and
"RTN","PXRMDATE",77,0)
 ;a day. If the month is missing assume Jan. If the day is missing
"RTN","PXRMDATE",78,0)
 ;assume the first. Issue a warning so the user knows what happened.  
"RTN","PXRMDATE",79,0)
 ;We assume the date is in Fileman format.
"RTN","PXRMDATE",80,0)
 N DAY,MISSING,MONTH,TDATE,YEAR
"RTN","PXRMDATE",81,0)
 S TDATE=DATE
"RTN","PXRMDATE",82,0)
 S MISSING=0
"RTN","PXRMDATE",83,0)
 S DAY=$E(DATE,6,7)
"RTN","PXRMDATE",84,0)
 S MONTH=$E(DATE,4,5)
"RTN","PXRMDATE",85,0)
 S YEAR=$E(DATE,1,3)
"RTN","PXRMDATE",86,0)
 I +DAY=0 D
"RTN","PXRMDATE",87,0)
 . S DAY=1
"RTN","PXRMDATE",88,0)
 . S MISSING=1
"RTN","PXRMDATE",89,0)
 . S ^TMP("PXRM",$J,"WA","INFO",PXRMITEM,"NO DAY")="Encounter date missing day, using the first for the date due calculation."
"RTN","PXRMDATE",90,0)
 I +MONTH=0 D
"RTN","PXRMDATE",91,0)
 . S MONTH=1
"RTN","PXRMDATE",92,0)
 . S MISSING=1
"RTN","PXRMDATE",93,0)
 . S ^TMP("PXRM",$J,"WA","INFO",PXRMITEM,"NO MONTH")="Encounter date missing month, using January for the date due calculation."
"RTN","PXRMDATE",94,0)
 I MISSING D
"RTN","PXRMDATE",95,0)
 . S TDATE=(YEAR*1E4)+(MONTH*1E2)+DAY
"RTN","PXRMDATE",96,0)
 . I DATE["E" S TDATE=TDATE_"E"
"RTN","PXRMDATE",97,0)
 Q TDATE
"RTN","PXRMDATE",98,0)
 ;
"RTN","PXRMDATE",99,0)
 ;=======================================================================
"RTN","PXRMDATE",100,0)
INVFFMDL(DT,DATE) ;Convert a Fileman date to its inverse (LABORATORY
"RTN","PXRMDATE",101,0)
 ;format 9999999-date) to Fileman format.
"RTN","PXRMDATE",102,0)
 I $L(DT)=0 Q DT
"RTN","PXRMDATE",103,0)
 N TEMP
"RTN","PXRMDATE",104,0)
 S TEMP=9999999-DT
"RTN","PXRMDATE",105,0)
 ;If DATE is true the return only the date portion.
"RTN","PXRMDATE",106,0)
 I DATE S TEMP=$P(TEMP,".",1)
"RTN","PXRMDATE",107,0)
 Q TEMP
"RTN","PXRMDATE",108,0)
 ;
"RTN","PXRMDATE",109,0)
 ;=======================================================================
"RTN","PXRMDATE",110,0)
FRQINDAY(FREQ) ;Given a frequency in the form ND, NM, or NY where N is a
"RTN","PXRMDATE",111,0)
 ;number and D stands for days, M for months, and Y for years return
"RTN","PXRMDATE",112,0)
 ;the value in days.
"RTN","PXRMDATE",113,0)
 N CODE,LEN,MULT,NUM
"RTN","PXRMDATE",114,0)
 S LEN=$L(FREQ)
"RTN","PXRMDATE",115,0)
 S NUM=$E(FREQ,1,LEN-1)
"RTN","PXRMDATE",116,0)
 S CODE=$E(FREQ,LEN,LEN)
"RTN","PXRMDATE",117,0)
 S MULT=1.0
"RTN","PXRMDATE",118,0)
 I CODE="M" S MULT=30.42
"RTN","PXRMDATE",119,0)
 I CODE="Y" S MULT=365.25
"RTN","PXRMDATE",120,0)
 Q +(MULT*NUM)
"RTN","PXRMDATE",121,0)
 ;
"RTN","PXRMDATE",122,0)
 ;=======================================================================
"RTN","PXRMDATE",123,0)
NDAYS(INT) ;Given an interval in the form ND, NM, or NY where D stands
"RTN","PXRMDATE",124,0)
 ;for days, M for months, and Y for years convert to days and return
"RTN","PXRMDATE",125,0)
 ;that value. 
"RTN","PXRMDATE",126,0)
 N LEN,NUM,UNIT
"RTN","PXRMDATE",127,0)
 S LEN=$L(INT)
"RTN","PXRMDATE",128,0)
 I LEN=0 Q 0
"RTN","PXRMDATE",129,0)
 S NUM=$E(INT,1,LEN-1)
"RTN","PXRMDATE",130,0)
 S UNIT=$E(INT,LEN)
"RTN","PXRMDATE",131,0)
 I UNIT="D" Q NUM
"RTN","PXRMDATE",132,0)
 I UNIT="M" Q 30.42*NUM
"RTN","PXRMDATE",133,0)
 I UNIT="Y" Q 365.25*NUM
"RTN","PXRMDATE",134,0)
 Q INT
"RTN","PXRMDATE",135,0)
 ;
"RTN","PXRMDATE",136,0)
 ;=======================================================================
"RTN","PXRMDATE",137,0)
NEWDATE(VADATE,OFFSET) ;Given a date in VA Fileman format (VADATE) and an
"RTN","PXRMDATE",138,0)
 ;offset of the form NY, NM, ND where N is a number and Y stands for
"RTN","PXRMDATE",139,0)
 ;years, M for months, and D for days return the new date in VA Fileman
"RTN","PXRMDATE",140,0)
 ;format. 
"RTN","PXRMDATE",141,0)
 N LEN,NEWDATE,NUM,UNIT
"RTN","PXRMDATE",142,0)
 S LEN=$L(OFFSET)
"RTN","PXRMDATE",143,0)
 S NUM=+$E(OFFSET,1,LEN-1)
"RTN","PXRMDATE",144,0)
 S UNIT=$E(OFFSET,LEN)
"RTN","PXRMDATE",145,0)
 I UNIT="D" G DAY
"RTN","PXRMDATE",146,0)
 I UNIT="M" G MONTH
"RTN","PXRMDATE",147,0)
 I UNIT="Y" G YEAR
"RTN","PXRMDATE",148,0)
 ;Unknown unit just return the original date
"RTN","PXRMDATE",149,0)
 Q VADATE
"RTN","PXRMDATE",150,0)
DAY ;
"RTN","PXRMDATE",151,0)
 S NEWDATE=+$$FMADD^XLFDT(VADATE,NUM)
"RTN","PXRMDATE",152,0)
 Q NEWDATE
"RTN","PXRMDATE",153,0)
MONTH ;
"RTN","PXRMDATE",154,0)
 ;Convert the months to days and then add the days using the DAY code.
"RTN","PXRMDATE",155,0)
 ;Multiply the number of months by the average number of days in a month.
"RTN","PXRMDATE",156,0)
 S NUM=30.42*NUM
"RTN","PXRMDATE",157,0)
 G DAY
"RTN","PXRMDATE",158,0)
 Q
"RTN","PXRMDATE",159,0)
YEAR ;
"RTN","PXRMDATE",160,0)
 Q VADATE+(10000*NUM)
"RTN","PXRMDATE",161,0)
 ;
"RTN","PXRMDATE",162,0)
 ;=======================================================================
"RTN","PXRMDATE",163,0)
NOW() ;If PXRMDATE has a date return it, otherwise return the current date.
"RTN","PXRMDATE",164,0)
 N NOW
"RTN","PXRMDATE",165,0)
 I +$G(PXRMDATE)>0 S NOW=PXRMDATE
"RTN","PXRMDATE",166,0)
 E  S NOW=$$NOW^XLFDT
"RTN","PXRMDATE",167,0)
 Q NOW
"RTN","PXRMDATE",168,0)
 ;
"RTN","PXRMDATE",169,0)
 ;=======================================================================
"RTN","PXRMDATE",170,0)
VALID(FIND0,TFINDO,DATE) ;Given the date determine if the finding is
"RTN","PXRMDATE",171,0)
 ;valid. FIND0 is the 0 node of the finding multiple, TFIND0 is the
"RTN","PXRMDATE",172,0)
 ;0 node of the term finding.
"RTN","PXRMDATE",173,0)
 N EFP,EXPDATE,VALID
"RTN","PXRMDATE",174,0)
 S EFP=$P(TFIND0,U,8)
"RTN","PXRMDATE",175,0)
 I EFP="" S EFP=$P(FIND0,U,8)
"RTN","PXRMDATE",176,0)
 S VALID=1
"RTN","PXRMDATE",177,0)
 I EFP'="" D
"RTN","PXRMDATE",178,0)
 . S EXPDATE=$$NEWDATE(DATE,EFP)
"RTN","PXRMDATE",179,0)
 . I $$NOW>EXPDATE S VALID=0
"RTN","PXRMDATE",180,0)
 Q VALID
"RTN","PXRMDATE",181,0)
 ;
"RTN","PXRMDATE",182,0)
 ;=======================================================================
"RTN","PXRMDATE",183,0)
VDATE(VIEN) ;Given a visit ien return the visit date.
"RTN","PXRMDATE",184,0)
 N DATE
"RTN","PXRMDATE",185,0)
 I +VIEN>0 S DATE=$P($G(^AUPNVSIT(VIEN,0)),U,1)
"RTN","PXRMDATE",186,0)
 E  S DATE=0
"RTN","PXRMDATE",187,0)
 I $L(DATE)=0 S DATE=0
"RTN","PXRMDATE",188,0)
 ;Check for historical encounter.
"RTN","PXRMDATE",189,0)
 I $$ISHIST^PXRMVSIT(VIEN) D
"RTN","PXRMDATE",190,0)
 . S DATE=DATE_"E"
"RTN","PXRMDATE",191,0)
 Q DATE
"RTN","PXRMDATE",192,0)
 ;
"RTN","PXRMDBL1")
0^15^B7118914
"RTN","PXRMDBL1",1,0)
PXRMDBL1 ; SLC/PJH - Reminder Dialog Generation. ;04/19/2000
"RTN","PXRMDBL1",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDBL1",3,0)
 ;
"RTN","PXRMDBL1",4,0)
 ;Build Reminder Dialog
"RTN","PXRMDBL1",5,0)
 ;---------------------
"RTN","PXRMDBL1",6,0)
BUILD(REM,NAME,ARRAY) ;
"RTN","PXRMDBL1",7,0)
 ;Lock the entire file
"RTN","PXRMDBL1",8,0)
 L +^PXRMD(801.41):30
"RTN","PXRMDBL1",9,0)
 E  W !!,?5,"Another user is editing this file, try later" H 4 Q
"RTN","PXRMDBL1",10,0)
 ;
"RTN","PXRMDBL1",11,0)
 N ACNT,ASUB,ATXT,CNT,DATA,DIEN,DNAME,DNODE,FGLOB,FITEM,FNODE,FSUB,FTYP
"RTN","PXRMDBL1",12,0)
 N INAME,MIEN,MSUB,PNAME,RESN,RNAME,RNODE,RPRE,RREQ,RSHORT,RSUB,RSUF
"RTN","PXRMDBL1",13,0)
 N TDMOD,TDPAR,TDX,TITEM,TPMOD,TPPAR,TPR,TSEQ,TSUB,TTYP
"RTN","PXRMDBL1",14,0)
 N TDHTXT,TDTXT,TPHTXT,TPTXT
"RTN","PXRMDBL1",15,0)
 N WPTXT,DSET,DSHORT
"RTN","PXRMDBL1",16,0)
 W !!,"Building dialog  - "_NAME
"RTN","PXRMDBL1",17,0)
 ;
"RTN","PXRMDBL1",18,0)
 ;Upper and lower case transforms
"RTN","PXRMDBL1",19,0)
 N LOWER,UPPER
"RTN","PXRMDBL1",20,0)
 S LOWER="abcdefghijklmnopqrstuvwxyz"
"RTN","PXRMDBL1",21,0)
 S UPPER="ABCDEFGHIJKLMNOPQRSTUVWXYZ"
"RTN","PXRMDBL1",22,0)
 ;
"RTN","PXRMDBL1",23,0)
 ;Build index of finding type to globals
"RTN","PXRMDBL1",24,0)
 N DEF,DEF1,DEF2 D DEF^PXRMRUTL(.DEF,.DEF1,.DEF2)
"RTN","PXRMDBL1",25,0)
 ;
"RTN","PXRMDBL1",26,0)
 ;Save name for use in building SET
"RTN","PXRMDBL1",27,0)
 S DSET(1)=NAME
"RTN","PXRMDBL1",28,0)
 ;
"RTN","PXRMDBL1",29,0)
 ;Get findings for this reminder
"RTN","PXRMDBL1",30,0)
 S FSUB=0,CNT=0
"RTN","PXRMDBL1",31,0)
 F  S FSUB=$O(^PXD(811.9,REM,20,FSUB)) Q:'FSUB  D
"RTN","PXRMDBL1",32,0)
 .S DATA=$G(^PXD(811.9,REM,20,FSUB,0)) Q:DATA=""
"RTN","PXRMDBL1",33,0)
 .;Single finding
"RTN","PXRMDBL1",34,0)
 .S RESN=$P(DATA,U)
"RTN","PXRMDBL1",35,0)
 .I $P(RESN,";",2)'="PXRMD(811.5," D FIND^PXRMDBL2(DATA) Q
"RTN","PXRMDBL1",36,0)
 .;Terms - 1st check finding item dialog file
"RTN","PXRMDBL1",37,0)
 .I $D(^PXRMD(801.43,"AC",RESN)) D  Q:DIEN
"RTN","PXRMDBL1",38,0)
 ..S DIEN=$$OK(RESN) Q:'DIEN
"RTN","PXRMDBL1",39,0)
 ..;Create array used to build reminder dialog
"RTN","PXRMDBL1",40,0)
 ..S CNT=CNT+1,ARRAY(CNT)=801.43_U_DIEN
"RTN","PXRMDBL1",41,0)
 ..;test
"RTN","PXRMDBL1",42,0)
 ..W !!,CNT,?5,"Finding item dialog "_$$FNAM(RESN)
"RTN","PXRMDBL1",43,0)
 .;Else process all the term findings
"RTN","PXRMDBL1",44,0)
 .S MIEN=$P($P(DATA,U),";") Q:'MIEN
"RTN","PXRMDBL1",45,0)
 .S MSUB=0
"RTN","PXRMDBL1",46,0)
 .F  S MSUB=$O(^PXRMD(811.5,MIEN,20,MSUB)) Q:'MSUB  D
"RTN","PXRMDBL1",47,0)
 ..S DATA=$G(^PXRMD(811.5,MIEN,20,MSUB,0)) Q:DATA=""
"RTN","PXRMDBL1",48,0)
 ..D FIND^PXRMDBL2(DATA)
"RTN","PXRMDBL1",49,0)
 ;
"RTN","PXRMDBL1",50,0)
 ;Update dialog file from FDA
"RTN","PXRMDBL1",51,0)
 D ^PXRMDBL3
"RTN","PXRMDBL1",52,0)
 ;Unlock the file
"RTN","PXRMDBL1",53,0)
 L -^PXRMD(801.41)
"RTN","PXRMDBL1",54,0)
 Q
"RTN","PXRMDBL1",55,0)
 ;
"RTN","PXRMDBL1",56,0)
 ;Get Finding Item name
"RTN","PXRMDBL1",57,0)
 ;---------------------
"RTN","PXRMDBL1",58,0)
FNAM(FIND) ;
"RTN","PXRMDBL1",59,0)
 N DATA,GLOB,NAME,NODE
"RTN","PXRMDBL1",60,0)
 S NAME="Unknown"
"RTN","PXRMDBL1",61,0)
 S NODE=$O(^PXRMD(801.43,"AC",FIND,"")) Q:'NODE NAME
"RTN","PXRMDBL1",62,0)
 S DATA=$G(^PXRMD(801.43,NODE,0)) Q:DATA="" NAME
"RTN","PXRMDBL1",63,0)
 I $P(DATA,U)'="" S NAME=$P(DATA,U)
"RTN","PXRMDBL1",64,0)
 S GLOB=$P($P(FIND,U),";",2) S:GLOB]"" NAME=$G(DEF1(GLOB))_" - "_NAME
"RTN","PXRMDBL1",65,0)
 Q NAME
"RTN","PXRMDBL1",66,0)
 ;
"RTN","PXRMDBL1",67,0)
 ;Checks if an enabled finding item dialog exists
"RTN","PXRMDBL1",68,0)
 ;-----------------------------------------------
"RTN","PXRMDBL1",69,0)
OK(FIND) ;
"RTN","PXRMDBL1",70,0)
 N DATA,DIEN,DTYP,NODE
"RTN","PXRMDBL1",71,0)
 S NODE=$O(^PXRMD(801.43,"AC",FIND,"")) Q:'NODE 0
"RTN","PXRMDBL1",72,0)
 S DATA=$G(^PXRMD(801.43,NODE,0)) Q:DATA="" 0
"RTN","PXRMDBL1",73,0)
 ;Ignore disabled entries
"RTN","PXRMDBL1",74,0)
 I $P(DATA,U,3) Q 0
"RTN","PXRMDBL1",75,0)
 ;Ignore finding item dialogs no longer valid
"RTN","PXRMDBL1",76,0)
 S DIEN=$P(DATA,U,4) Q:DIEN="" 0
"RTN","PXRMDBL1",77,0)
 S DATA=$G(^PXRMD(801.41,DIEN,0)) Q:DATA="" 0
"RTN","PXRMDBL1",78,0)
 ;Ignore disabled dialogs
"RTN","PXRMDBL1",79,0)
 I $P(DATA,U,3)=1 Q 0
"RTN","PXRMDBL1",80,0)
 ;Return dialog ien
"RTN","PXRMDBL1",81,0)
 Q DIEN
"RTN","PXRMDBL2")
0^16^B60350408
"RTN","PXRMDBL2",1,0)
PXRMDBL2 ; SLC/PJH - Reminder Dialog Generation. ;05/08/2000
"RTN","PXRMDBL2",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDBL2",3,0)
 ;
"RTN","PXRMDBL2",4,0)
 ;Process individual finding
"RTN","PXRMDBL2",5,0)
 ;--------------------------
"RTN","PXRMDBL2",6,0)
FIND(DATA) ;
"RTN","PXRMDBL2",7,0)
 ;Determine finding type
"RTN","PXRMDBL2",8,0)
 S FGLOB=$P($P(DATA,U),";",2) Q:FGLOB=""
"RTN","PXRMDBL2",9,0)
 S FITEM=$P(DATA,";") Q:FITEM=""
"RTN","PXRMDBL2",10,0)
 S FTYP=$G(DEF1(FGLOB)) Q:FTYP=""
"RTN","PXRMDBL2",11,0)
 ;Get resolution item (same as finding item)
"RTN","PXRMDBL2",12,0)
 S RESN=$P(DATA,U)
"RTN","PXRMDBL2",13,0)
 ;Mental Health Test
"RTN","PXRMDBL2",14,0)
 I FTYP="MH" Q:'$$MHOK^PXRMDBL3(FITEM)
"RTN","PXRMDBL2",15,0)
 ;Check if an entry exists in the finding item dialog file
"RTN","PXRMDBL2",16,0)
 I $D(^PXRMD(801.43,"AC",RESN)) D  Q:DIEN
"RTN","PXRMDBL2",17,0)
 .S DIEN=$$OK(RESN) Q:'DIEN
"RTN","PXRMDBL2",18,0)
 .;Create entry in array used to build reminder dialog
"RTN","PXRMDBL2",19,0)
 .S CNT=CNT+1,ARRAY(CNT)=801.43_U_DIEN
"RTN","PXRMDBL2",20,0)
 .;test
"RTN","PXRMDBL2",21,0)
 .W !!,CNT,?5,"Finding item dialog "_$$FNAM(RESN)
"RTN","PXRMDBL2",22,0)
 ;
"RTN","PXRMDBL2",23,0)
 ;Determine names/text for non-taxonomy/orderable item findings
"RTN","PXRMDBL2",24,0)
 I (FTYP'="TX")&(FTYP'="OI") D
"RTN","PXRMDBL2",25,0)
 .I FTYP="ED" S INAME=$$NAME(FGLOB,FITEM,4)
"RTN","PXRMDBL2",26,0)
 .I FTYP="VM" S INAME=$$NAME(FGLOB,FITEM,1)
"RTN","PXRMDBL2",27,0)
 .I (FTYP'="ED")&(FTYP'="VM") S INAME=$$NAME(FGLOB,FITEM,2)
"RTN","PXRMDBL2",28,0)
 .;Dialog item name root
"RTN","PXRMDBL2",29,0)
 .S DNAME=FTYP_" "_INAME
"RTN","PXRMDBL2",30,0)
 .;Create array entry for each resolution defined in #801.45
"RTN","PXRMDBL2",31,0)
 .D RESOL(FTYP,0)
"RTN","PXRMDBL2",32,0)
 ;
"RTN","PXRMDBL2",33,0)
 ;Determine names/text for orderable item findings
"RTN","PXRMDBL2",34,0)
 I FTYP="OI" D
"RTN","PXRMDBL2",35,0)
 .S INAME=$$NAME(FGLOB,FITEM,1)
"RTN","PXRMDBL2",36,0)
 .;Dialog item name root
"RTN","PXRMDBL2",37,0)
 .S DNAME=FTYP_" "_INAME
"RTN","PXRMDBL2",38,0)
 .;Create array entry
"RTN","PXRMDBL2",39,0)
 .D RESOL(FTYP,0)
"RTN","PXRMDBL2",40,0)
 ;
"RTN","PXRMDBL2",41,0)
 ;Determine names/text for taxonomy findings
"RTN","PXRMDBL2",42,0)
 I FTYP="TX" S INAME=$$NAME(FGLOB,FITEM,2) D TAXON
"RTN","PXRMDBL2",43,0)
 Q
"RTN","PXRMDBL2",44,0)
 ;
"RTN","PXRMDBL2",45,0)
 ;Get Finding Item name
"RTN","PXRMDBL2",46,0)
 ;---------------------
"RTN","PXRMDBL2",47,0)
FNAM(FIND) ;
"RTN","PXRMDBL2",48,0)
 N DATA,NAME,NODE
"RTN","PXRMDBL2",49,0)
 S NAME="Unknown"
"RTN","PXRMDBL2",50,0)
 S NODE=$O(^PXRMD(801.43,"AC",FIND,"")) Q:'NODE NAME
"RTN","PXRMDBL2",51,0)
 S DATA=$G(^PXRMD(801.43,NODE,0)) Q:DATA="" NAME
"RTN","PXRMDBL2",52,0)
 I $P(DATA,U)'="" S NAME=$P(DATA,U)
"RTN","PXRMDBL2",53,0)
 S GLOB=$P($P(FIND,U),";",2) S:GLOB]"" NAME=$G(DEF1(GLOB))_" - "_NAME
"RTN","PXRMDBL2",54,0)
 Q NAME
"RTN","PXRMDBL2",55,0)
 ;
"RTN","PXRMDBL2",56,0)
 ;additional prompts in 801.45
"RTN","PXRMDBL2",57,0)
 ;----------------------------
"RTN","PXRMDBL2",58,0)
FPROMPT(FNODE,RSUB,CNT,ARRAY) ;
"RTN","PXRMDBL2",59,0)
 ;Get all additional fields for this resolution type
"RTN","PXRMDBL2",60,0)
 N RDATA,REXC,ROVR,RREQ,RSNL
"RTN","PXRMDBL2",61,0)
 S ASUB=0,ACNT=0
"RTN","PXRMDBL2",62,0)
 F  S ASUB=$O(^PXRMD(801.45,FNODE,1,RSUB,5,ASUB)) Q:'ASUB  D
"RTN","PXRMDBL2",63,0)
 .S RDATA=$G(^PXRMD(801.45,FNODE,1,RSUB,5,ASUB,0)) Q:RDATA=""
"RTN","PXRMDBL2",64,0)
 .;Ignore if disabled
"RTN","PXRMDBL2",65,0)
 .I $P(RDATA,U,3)=1 Q
"RTN","PXRMDBL2",66,0)
 .S DNODE=$P(RDATA,U) Q:DNODE=""
"RTN","PXRMDBL2",67,0)
 .S ATXT=$P($G(^PXRMD(801.41,DNODE,0)),U) Q:ATXT=""
"RTN","PXRMDBL2",68,0)
 .S REXC=$P(RDATA,U,7),RSNL=$P(RDATA,U,6)
"RTN","PXRMDBL2",69,0)
 .S ROVR=$P(RDATA,U,5),RREQ=$P(RDATA,U,2)
"RTN","PXRMDBL2",70,0)
 .;S ATXT=$TR(ATXT,UPPER,LOWER)
"RTN","PXRMDBL2",71,0)
 .S ACNT=ACNT+1
"RTN","PXRMDBL2",72,0)
 .S ARRAY(CNT,ACNT)=DNODE_U_ROVR_U_RSNL_U_REXC_U_RREQ
"RTN","PXRMDBL2",73,0)
 Q
"RTN","PXRMDBL2",74,0)
 ;
"RTN","PXRMDBL2",75,0)
 ;Health Factor Resolutions
"RTN","PXRMDBL2",76,0)
 ;-------------------------
"RTN","PXRMDBL2",77,0)
HF(RNODE) ;
"RTN","PXRMDBL2",78,0)
 ;Defined in #801.95
"RTN","PXRMDBL2",79,0)
 I $D(^PXRMD(801.95,$P(RESN,";"),1,"B",RNODE)) Q 1
"RTN","PXRMDBL2",80,0)
 ;Check for local statuses if this is a national code (restricted edit)
"RTN","PXRMDBL2",81,0)
 N FOUND,LSUB S FOUND=0,LSUB=""
"RTN","PXRMDBL2",82,0)
 I $P($G(^PXRMD(801.9,RNODE,0)),U,6)=1 D
"RTN","PXRMDBL2",83,0)
 .F  S LSUB=$O(^PXRMD(801.9,RNODE,10,"B",LSUB)) Q:'LSUB  D  Q:FOUND
"RTN","PXRMDBL2",84,0)
 ..S:$D(^PXRMD(801.95,$P(RESN,";"),1,"B",LSUB)) FOUND=1
"RTN","PXRMDBL2",85,0)
 Q FOUND
"RTN","PXRMDBL2",86,0)
 ;
"RTN","PXRMDBL2",87,0)
 ;Returns item name
"RTN","PXRMDBL2",88,0)
 ;-----------------
"RTN","PXRMDBL2",89,0)
NAME(FGLOB,FITEM,POSN) ;
"RTN","PXRMDBL2",90,0)
 N NAME
"RTN","PXRMDBL2",91,0)
 S FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDBL2",92,0)
 S NAME=$P($G(@FGLOB),U,POSN)
"RTN","PXRMDBL2",93,0)
 I NAME]"" D
"RTN","PXRMDBL2",94,0)
 .I FGLOB["ICD9(" S NAME=NAME_" ("_$P($G(@FGLOB),U)_")"
"RTN","PXRMDBL2",95,0)
 .I FGLOB["ICPT(" S NAME=$P($G(@FGLOB),U)_"  "_$TR(NAME,LOWER,UPPER)
"RTN","PXRMDBL2",96,0)
 I NAME="" S NAME=$P($G(@FGLOB),U)
"RTN","PXRMDBL2",97,0)
 I NAME="" S NAME=FITEM
"RTN","PXRMDBL2",98,0)
 Q NAME
"RTN","PXRMDBL2",99,0)
 ;
"RTN","PXRMDBL2",100,0)
 ;Checks if an enabled finding item dialog exists
"RTN","PXRMDBL2",101,0)
 ;-----------------------------------------------
"RTN","PXRMDBL2",102,0)
OK(FIND) ;
"RTN","PXRMDBL2",103,0)
 N DATA,DIEN,DTYP,NODE
"RTN","PXRMDBL2",104,0)
 S NODE=$O(^PXRMD(801.43,"AC",FIND,"")) Q:'NODE 0
"RTN","PXRMDBL2",105,0)
 S DATA=$G(^PXRMD(801.43,NODE,0)) Q:DATA="" 0
"RTN","PXRMDBL2",106,0)
 ;Ignore disabled entries
"RTN","PXRMDBL2",107,0)
 I $P(DATA,U,3) Q 0
"RTN","PXRMDBL2",108,0)
 ;Ignore finding item dialogs no longer valid
"RTN","PXRMDBL2",109,0)
 S DIEN=$P(DATA,U,4) Q:DIEN="" 0
"RTN","PXRMDBL2",110,0)
 S DATA=$G(^PXRMD(801.41,DIEN,0)) Q:DATA="" 0
"RTN","PXRMDBL2",111,0)
 ;Ignore disabled dialogs
"RTN","PXRMDBL2",112,0)
 I $P(DATA,U,3)=1 Q 0
"RTN","PXRMDBL2",113,0)
 ;Return dialog ien
"RTN","PXRMDBL2",114,0)
 Q DIEN
"RTN","PXRMDBL2",115,0)
 ;
"RTN","PXRMDBL2",116,0)
 ;Create array for each resolution status
"RTN","PXRMDBL2",117,0)
 ;---------------------------------------
"RTN","PXRMDBL2",118,0)
RESOL(TYP,TAX) ;
"RTN","PXRMDBL2",119,0)
 ; Predefined fields :
"RTN","PXRMDBL2",120,0)
 ; PNAME - text used in prompt
"RTN","PXRMDBL2",121,0)
 ; DNAME - text used in dialog item name
"RTN","PXRMDBL2",122,0)
 ; RESN  - finding item
"RTN","PXRMDBL2",123,0)
 ;
"RTN","PXRMDBL2",124,0)
 ; Taxonomies  TYP=CPT or POV and TAX=1 or 0
"RTN","PXRMDBL2",125,0)
 ; Others      TAX=0 (ie: 1 prompt per code)
"RTN","PXRMDBL2",126,0)
 ;
"RTN","PXRMDBL2",127,0)
 ;Get parameter file node for this finding type
"RTN","PXRMDBL2",128,0)
 S FNODE=$O(^PXRMD(801.45,"B",TYP,"")) Q:FNODE=""
"RTN","PXRMDBL2",129,0)
 ;Get each resolution type for this finding type
"RTN","PXRMDBL2",130,0)
 S RSUB=0
"RTN","PXRMDBL2",131,0)
 F  S RSUB=$O(^PXRMD(801.45,FNODE,1,RSUB)) Q:'RSUB  D
"RTN","PXRMDBL2",132,0)
 .;Check if resolution type is disabled
"RTN","PXRMDBL2",133,0)
 .I $P($G(^PXRMD(801.45,FNODE,1,RSUB,0)),U,2)=1 Q
"RTN","PXRMDBL2",134,0)
 .;Construct name for this resolution type
"RTN","PXRMDBL2",135,0)
 .S RNODE=$P($G(^PXRMD(801.45,FNODE,1,RSUB,0)),U),RNAME=""
"RTN","PXRMDBL2",136,0)
 .I RNODE S RNAME=$P($G(^PXRMD(801.9,RNODE,0)),U,2)
"RTN","PXRMDBL2",137,0)
 .I RNAME="" S RNAME=$P($G(^PXRMD(801.9,RNODE,0)),U)
"RTN","PXRMDBL2",138,0)
 .;Validate resolution
"RTN","PXRMDBL2",139,0)
 .I TYP="HF" Q:'$$HF(RNODE)
"RTN","PXRMDBL2",140,0)
 .;test
"RTN","PXRMDBL2",141,0)
 .W !
"RTN","PXRMDBL2",142,0)
 .;Create arrays
"RTN","PXRMDBL2",143,0)
 .S CNT=CNT+1
"RTN","PXRMDBL2",144,0)
 .;Convert dialog item name to UC
"RTN","PXRMDBL2",145,0)
 .S DNAME=$TR(DNAME,LOWER,UPPER)
"RTN","PXRMDBL2",146,0)
 .;Truncate the item name - without finesse
"RTN","PXRMDBL2",147,0)
 .S DSHORT=DNAME_" "_RNAME
"RTN","PXRMDBL2",148,0)
 .I $L(DSHORT)>63 S DSHORT=$E(DNAME,1,53)_" "_$E(RNAME,1,9)
"RTN","PXRMDBL2",149,0)
 .;Dialog item name,resolution status and finding item
"RTN","PXRMDBL2",150,0)
 .I TYP'="OI" S ARRAY(CNT)=DSHORT_U_RNODE_U_RESN_U
"RTN","PXRMDBL2",151,0)
 .;For orderable items the finding field is empty
"RTN","PXRMDBL2",152,0)
 .I TYP="OI" S ARRAY(CNT)=DSHORT_U_RNODE_U_U_$P(RESN,";")
"RTN","PXRMDBL2",153,0)
 .;Append prefix and suffix if NOT a condensed taxonomy
"RTN","PXRMDBL2",154,0)
 .S PNAME=INAME
"RTN","PXRMDBL2",155,0)
 .I 'TAX D
"RTN","PXRMDBL2",156,0)
 ..;Prefix text
"RTN","PXRMDBL2",157,0)
 ..S RPRE=$G(^PXRMD(801.45,FNODE,1,RSUB,3)) I RPRE]"" S RPRE=RPRE_" "
"RTN","PXRMDBL2",158,0)
 ..;Suffix text
"RTN","PXRMDBL2",159,0)
 ..S RSUF=$G(^PXRMD(801.45,FNODE,1,RSUB,4))
"RTN","PXRMDBL2",160,0)
 ..I (RSUF]"")&($E(RSUF)'=".") S RSUF=" "_RSUF
"RTN","PXRMDBL2",161,0)
 ..;Prompt text
"RTN","PXRMDBL2",162,0)
 ..S PNAME=RPRE_$TR(INAME,UPPER,LOWER)_RSUF
"RTN","PXRMDBL2",163,0)
 ..;Convert first character
"RTN","PXRMDBL2",164,0)
 ..S $E(PNAME)=$TR($E(PNAME),LOWER,UPPER)
"RTN","PXRMDBL2",165,0)
 .;Prompt text
"RTN","PXRMDBL2",166,0)
 .S WPTXT(CNT,1)=PNAME
"RTN","PXRMDBL2",167,0)
 .;test
"RTN","PXRMDBL2",168,0)
 .W !,CNT,?5,WPTXT(CNT,1)
"RTN","PXRMDBL2",169,0)
 .;Additional prompts from general finding parameters
"RTN","PXRMDBL2",170,0)
 .D FPROMPT(FNODE,RSUB,CNT,.ARRAY)
"RTN","PXRMDBL2",171,0)
 Q
"RTN","PXRMDBL2",172,0)
 ;
"RTN","PXRMDBL2",173,0)
 ;Taxonomy Dialog in #801.2
"RTN","PXRMDBL2",174,0)
 ;-------------------------
"RTN","PXRMDBL2",175,0)
TAXON S TDPAR=$G(^PXD(811.2,FITEM,"SDZ")),TDTXT="",TDHTXT=""
"RTN","PXRMDBL2",176,0)
 S TPPAR=$G(^PXD(811.2,FITEM,"SDZ")),TPTXT="",TPHTXT=""
"RTN","PXRMDBL2",177,0)
 S TDMOD=$P(TDPAR,U,1),TPMOD=$P(TPPAR,U,1)
"RTN","PXRMDBL2",178,0)
 ;Check what type of taxonomy codes exist
"RTN","PXRMDBL2",179,0)
 S TDX=$O(^PXD(811.2,FITEM,80,0))
"RTN","PXRMDBL2",180,0)
 S TPR=$O(^PXD(811.2,FITEM,81,0))
"RTN","PXRMDBL2",181,0)
 ;
"RTN","PXRMDBL2",182,0)
 ;If taxonomy is to be presented as checkbox(s)
"RTN","PXRMDBL2",183,0)
 I ('TDMOD)!('TPMOD) D
"RTN","PXRMDBL2",184,0)
 .S DNAME=FTYP_" "_INAME
"RTN","PXRMDBL2",185,0)
 .;Create arrays
"RTN","PXRMDBL2",186,0)
 .S CNT=CNT+1
"RTN","PXRMDBL2",187,0)
 .;Convert dialog item name to UC
"RTN","PXRMDBL2",188,0)
 .S DNAME=$TR(DNAME,LOWER,UPPER)
"RTN","PXRMDBL2",189,0)
 .;Truncate the item name - without finesse
"RTN","PXRMDBL2",190,0)
 .S DSHORT=DNAME
"RTN","PXRMDBL2",191,0)
 .I $L(DSHORT)>40 S DSHORT=$E(DNAME,1,40)
"RTN","PXRMDBL2",192,0)
 .;Dialog item name and finding item
"RTN","PXRMDBL2",193,0)
 .S ARRAY(CNT)=DSHORT_U_U_RESN
"RTN","PXRMDBL2",194,0)
 .;Prompt text
"RTN","PXRMDBL2",195,0)
 .S WPTXT(CNT,1)=INAME
"RTN","PXRMDBL2",196,0)
 .;test
"RTN","PXRMDBL2",197,0)
 .W !!,CNT,?5,WPTXT(CNT,1)
"RTN","PXRMDBL2",198,0)
 ; 
"RTN","PXRMDBL2",199,0)
 ;Individual Diagnoses
"RTN","PXRMDBL2",200,0)
 I TDX,TDMOD D
"RTN","PXRMDBL2",201,0)
 .S TSEQ=0,TTYP="POV"
"RTN","PXRMDBL2",202,0)
 .F  S TSEQ=$O(^PXD(811.2,FITEM,"SDX","B",TSEQ)) Q:'TSEQ  D
"RTN","PXRMDBL2",203,0)
 ..S TSUB=$O(^PXD(811.2,FITEM,"SDX","B",TSEQ,"")) Q:'TSUB
"RTN","PXRMDBL2",204,0)
 ..S DATA=$G(^PXD(811.2,FITEM,"SDX",TSUB,0)) Q:DATA=""
"RTN","PXRMDBL2",205,0)
 ..S TITEM=$P(DATA,U) Q:'TITEM
"RTN","PXRMDBL2",206,0)
 ..;Ignore if disabled
"RTN","PXRMDBL2",207,0)
 ..Q:$P(DATA,U,3)=1
"RTN","PXRMDBL2",208,0)
 ..;Resolution becomes the diagnosis
"RTN","PXRMDBL2",209,0)
 ..S RESN=TITEM_";ICD9("
"RTN","PXRMDBL2",210,0)
 ..;Take prompt from user defined text
"RTN","PXRMDBL2",211,0)
 ..S INAME=$P(DATA,U,2)
"RTN","PXRMDBL2",212,0)
 ..;Otherwise use name of diagnosis
"RTN","PXRMDBL2",213,0)
 ..S INAME=$G(^ICD9(TITEM,1))
"RTN","PXRMDBL2",214,0)
 ..I INAME="" S FGLOB="ICD9(",INAME=$$NAME(FGLOB,TITEM,3)
"RTN","PXRMDBL2",215,0)
 ..;Dialog Item name root
"RTN","PXRMDBL2",216,0)
 ..S DNAME="POV "_INAME
"RTN","PXRMDBL2",217,0)
 ..;Create array entry for each resolution defined in #801.45
"RTN","PXRMDBL2",218,0)
 ..D RESOL(TTYP,0)
"RTN","PXRMDBL2",219,0)
 ;
"RTN","PXRMDBL2",220,0)
 ;Individual Procedures
"RTN","PXRMDBL2",221,0)
 I TPR,TPMOD D
"RTN","PXRMDBL2",222,0)
 .S TSEQ=0,TTYP="CPT"
"RTN","PXRMDBL2",223,0)
 .F  S TSEQ=$O(^PXD(811.2,FITEM,"SPR","B",TSEQ)) Q:'TSEQ  D
"RTN","PXRMDBL2",224,0)
 ..S TSUB=$O(^PXD(811.2,FITEM,"SPR","B",TSEQ,"")) Q:'TSUB
"RTN","PXRMDBL2",225,0)
 ..S DATA=$G(^PXD(811.2,FITEM,"SPR",TSUB,0)) Q:DATA=""
"RTN","PXRMDBL2",226,0)
 ..S TITEM=$P(DATA,U) Q:'TITEM
"RTN","PXRMDBL2",227,0)
 ..;Ignore if disabled
"RTN","PXRMDBL2",228,0)
 ..Q:$P(DATA,U,3)=1
"RTN","PXRMDBL2",229,0)
 ..;Resolution becomes the procedure
"RTN","PXRMDBL2",230,0)
 ..S RESN=TITEM_";ICPT("
"RTN","PXRMDBL2",231,0)
 ..;Take prompt from user defined text
"RTN","PXRMDBL2",232,0)
 ..S INAME=$P(DATA,U,2)
"RTN","PXRMDBL2",233,0)
 ..;Otherwise use name of procedure
"RTN","PXRMDBL2",234,0)
 ..I INAME="" S FGLOB="ICPT(",INAME=$$NAME(FGLOB,TITEM,2)
"RTN","PXRMDBL2",235,0)
 ..;Dialog Item name root
"RTN","PXRMDBL2",236,0)
 ..S DNAME="CPT "_INAME
"RTN","PXRMDBL2",237,0)
 ..;Create array entry for each resolution defined in #801.45
"RTN","PXRMDBL2",238,0)
 ..D RESOL(TTYP,0)
"RTN","PXRMDBL2",239,0)
 Q
"RTN","PXRMDBL3")
0^17^B22572184
"RTN","PXRMDBL3",1,0)
PXRMDBL3 ; SLC/PJH - Reminder Dialog Generation. (overflow) ;06/08/2000
"RTN","PXRMDBL3",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDBL3",3,0)
 ;
"RTN","PXRMDBL3",4,0)
 ; Called from PXRMDBL1
"RTN","PXRMDBL3",5,0)
 ;
"RTN","PXRMDBL3",6,0)
 ;Set number range for site
"RTN","PXRMDBL3",7,0)
START D SETSTART^PXRMDCPY("^PXRMD(801.41,",0)
"RTN","PXRMDBL3",8,0)
 ;Update dialog file for individual dialog items
"RTN","PXRMDBL3",9,0)
 D UPDATE(.ARRAY,.WPTXT,"E")
"RTN","PXRMDBL3",10,0)
 ;Create reminder dialog
"RTN","PXRMDBL3",11,0)
 D UPDATE(.DSET,"","R")
"RTN","PXRMDBL3",12,0)
 ;
"RTN","PXRMDBL3",13,0)
 W !!,"Dialog build complete" H 3
"RTN","PXRMDBL3",14,0)
END Q
"RTN","PXRMDBL3",15,0)
 ;
"RTN","PXRMDBL3",16,0)
 ;Error Handler
"RTN","PXRMDBL3",17,0)
 ;-------------
"RTN","PXRMDBL3",18,0)
ERR(DESC) ;
"RTN","PXRMDBL3",19,0)
 N ERROR,IC,REF
"RTN","PXRMDBL3",20,0)
 S ERROR(1)="Unable to update dialog file : "_DESC
"RTN","PXRMDBL3",21,0)
 S ERROR(2)="Error in UPDATE^DIE, needs further investigation"
"RTN","PXRMDBL3",22,0)
 ;Move MSG into ERROR
"RTN","PXRMDBL3",23,0)
 S REF="MSG"
"RTN","PXRMDBL3",24,0)
 F IC=3:1 S REF=$Q(@REF) Q:REF=""  S ERROR(IC)=REF_"="_@REF
"RTN","PXRMDBL3",25,0)
 ;Screen message
"RTN","PXRMDBL3",26,0)
 D BMES^XPDUTL(.ERROR)
"RTN","PXRMDBL3",27,0)
 Q
"RTN","PXRMDBL3",28,0)
 ;
"RTN","PXRMDBL3",29,0)
 ;Check if dialog element already exists
"RTN","PXRMDBL3",30,0)
 ;--------------------------------------
"RTN","PXRMDBL3",31,0)
EXISTS(NAME) ;
"RTN","PXRMDBL3",32,0)
 N IEN S IEN=$O(^PXRMD(801.41,"B",NAME,""))
"RTN","PXRMDBL3",33,0)
 I IEN S DSET(1,CNT*5)=IEN Q 1
"RTN","PXRMDBL3",34,0)
 Q 0
"RTN","PXRMDBL3",35,0)
 ;
"RTN","PXRMDBL3",36,0)
 ;Mental Health
"RTN","PXRMDBL3",37,0)
 ;-------------
"RTN","PXRMDBL3",38,0)
MHOK(IEN) ;
"RTN","PXRMDBL3",39,0)
 N RNAME,TEST,YT S YT=""
"RTN","PXRMDBL3",40,0)
 ;Convert ien to name
"RTN","PXRMDBL3",41,0)
 S YT("CODE")=$P($G(^YTT(601,IEN,0)),U)
"RTN","PXRMDBL3",42,0)
 ;Quit if no code found
"RTN","PXRMDBL3",43,0)
 I YT("CODE")="" Q 0
"RTN","PXRMDBL3",44,0)
 ;Check if this is an allowable GUI test
"RTN","PXRMDBL3",45,0)
 I (YT("CODE")'="GAF"),($P($G(^YTT(601.6,IEN,0)),U,4)'="Y") Q 0
"RTN","PXRMDBL3",46,0)
 ;Get details of test
"RTN","PXRMDBL3",47,0)
 D SHOWALL^YTAPI3(.TEST,.YT)
"RTN","PXRMDBL3",48,0)
 ;Check if valid
"RTN","PXRMDBL3",49,0)
 I TEST(1)["[ERROR]" Q 0
"RTN","PXRMDBL3",50,0)
 ;
"RTN","PXRMDBL3",51,0)
 S DNAME=FTYP_" "_YT("CODE")
"RTN","PXRMDBL3",52,0)
 ;Create arrays
"RTN","PXRMDBL3",53,0)
 S CNT=CNT+1
"RTN","PXRMDBL3",54,0)
 ;Convert dialog item name to UC
"RTN","PXRMDBL3",55,0)
 S DNAME=$TR(DNAME,LOWER,UPPER)
"RTN","PXRMDBL3",56,0)
 ;Truncate the item name - without finesse
"RTN","PXRMDBL3",57,0)
 S DSHORT=DNAME
"RTN","PXRMDBL3",58,0)
 I $L(DSHORT)>40 S DSHORT=$E(DNAME,1,40)
"RTN","PXRMDBL3",59,0)
 ;Dialog item name, finding item and result 
"RTN","PXRMDBL3",60,0)
 S ARRAY(CNT)=DSHORT_U_U_RESN_U
"RTN","PXRMDBL3",61,0)
 ;Result group name
"RTN","PXRMDBL3",62,0)
 S RNAME="PXRM "_YT("CODE")_" RESULT GROUP"
"RTN","PXRMDBL3",63,0)
 ;Result pointer
"RTN","PXRMDBL3",64,0)
 S $P(ARRAY(CNT),U,7)=$O(^PXRMD(801.41,"B",RNAME,""))
"RTN","PXRMDBL3",65,0)
 ;If aims exclude from p/n
"RTN","PXRMDBL3",66,0)
 I YT("CODE")="AIMS" S $P(ARRAY(CNT),U,6)=1
"RTN","PXRMDBL3",67,0)
 ;Prompt text
"RTN","PXRMDBL3",68,0)
 S WPTXT(CNT,1)=YT("CODE")_" (Mental Health Instrument)"
"RTN","PXRMDBL3",69,0)
 ;test
"RTN","PXRMDBL3",70,0)
 W !!,CNT,?5,WPTXT(CNT,1)
"RTN","PXRMDBL3",71,0)
 Q 1
"RTN","PXRMDBL3",72,0)
 ;
"RTN","PXRMDBL3",73,0)
 ;Sub-routine to update dialog file #801.41
"RTN","PXRMDBL3",74,0)
 ;-----------------------------------------
"RTN","PXRMDBL3",75,0)
UPDATE(INP,WPTXT,DTYPE) ;
"RTN","PXRMDBL3",76,0)
 N CNT,DATA,DESC,IEN,STRING,SUB,TEXT
"RTN","PXRMDBL3",77,0)
 N FDA,FDAIEN,MSG
"RTN","PXRMDBL3",78,0)
 ;Get each dialog line in turn
"RTN","PXRMDBL3",79,0)
 S STRING="Updating "_$S(DTYPE="E":"Dialog Elements",1:"Reminder Dialog")
"RTN","PXRMDBL3",80,0)
 D BMES^XPDUTL(STRING)
"RTN","PXRMDBL3",81,0)
 ;
"RTN","PXRMDBL3",82,0)
 ;Create FDA for each entry in array
"RTN","PXRMDBL3",83,0)
 S CNT=""
"RTN","PXRMDBL3",84,0)
 F  S CNT=$O(INP(CNT)) Q:CNT=""  D  Q:$D(MSG)
"RTN","PXRMDBL3",85,0)
 .;If finding is a finding item parameter no need to build an element
"RTN","PXRMDBL3",86,0)
 .I DTYPE="E",$P(INP(CNT),U)=801.43 D  Q
"RTN","PXRMDBL3",87,0)
 ..S DSET(1,CNT)=$P(INP(CNT),U,2)
"RTN","PXRMDBL3",88,0)
 .;Build FDA array
"RTN","PXRMDBL3",89,0)
 .K FDAIEN,FDA
"RTN","PXRMDBL3",90,0)
 .;If existing element and not in replace mode don't update FDA
"RTN","PXRMDBL3",91,0)
 .I DTYPE="E",'PXRMREPL Q:$$EXISTS($P(INP(CNT),U))
"RTN","PXRMDBL3",92,0)
 .;Name
"RTN","PXRMDBL3",93,0)
 .S FDA(801.41,"?+1,",.01)=$P(INP(CNT),U)
"RTN","PXRMDBL3",94,0)
 .;Dialog type
"RTN","PXRMDBL3",95,0)
 .S FDA(801.41,"?+1,",4)=DTYPE
"RTN","PXRMDBL3",96,0)
 .;Prompt text/finding entries
"RTN","PXRMDBL3",97,0)
 .I DTYPE="E" D
"RTN","PXRMDBL3",98,0)
 ..S FDA(801.41,"?+1,",13)=$P(INP(CNT),U,2)
"RTN","PXRMDBL3",99,0)
 ..S FDA(801.41,"?+1,",15)=$P(INP(CNT),U,3)
"RTN","PXRMDBL3",100,0)
 ..S FDA(801.41,"?+1,",17)=$P(INP(CNT),U,4)
"RTN","PXRMDBL3",101,0)
 ..S FDA(801.41,"?+1,",25)="WPTXT("_CNT_")"
"RTN","PXRMDBL3",102,0)
 ..;MH fields (exclude from P/N and results pointer)
"RTN","PXRMDBL3",103,0)
 ..S:$P(INP(CNT),U,6) FDA(801.41,"?+1,",54)=$P(INP(CNT),U,6)
"RTN","PXRMDBL3",104,0)
 ..S:$P(INP(CNT),U,7) FDA(801.41,"?+1,",55)=$P(INP(CNT),U,7)
"RTN","PXRMDBL3",105,0)
 .;Reminder dialog associated reminder/DISABLE
"RTN","PXRMDBL3",106,0)
 .I DTYPE="R" D
"RTN","PXRMDBL3",107,0)
 ..S FDA(801.41,"?+1,",2)=REM
"RTN","PXRMDBL3",108,0)
 ..I PXRMENAB'="Y" S FDA(801.41,"?+1,",3)="DISABLED AT AUTO GENERATE"
"RTN","PXRMDBL3",109,0)
 .;Dialog items point to prompts and actions, Sets point to dialog items
"RTN","PXRMDBL3",110,0)
 .N ACNT,SUB
"RTN","PXRMDBL3",111,0)
 .;S ACNT=0,SUB=2
"RTN","PXRMDBL3",112,0)
 .S ACNT=0,SUB=1
"RTN","PXRMDBL3",113,0)
 .F  S ACNT=$O(INP(CNT,ACNT)) Q:ACNT=""  D
"RTN","PXRMDBL3",114,0)
 ..S SUB=SUB+1,FDA(801.412,"?+"_SUB_",?+1,",.01)=ACNT
"RTN","PXRMDBL3",115,0)
 ..S FDA(801.412,"?+"_SUB_",?+1,",2)=$P(INP(CNT,ACNT),U)
"RTN","PXRMDBL3",116,0)
 ..S FDA(801.412,"?+"_SUB_",?+1,",6)=$P(INP(CNT,ACNT),U,2)
"RTN","PXRMDBL3",117,0)
 ..S FDA(801.412,"?+"_SUB_",?+1,",7)=$P(INP(CNT,ACNT),U,3)
"RTN","PXRMDBL3",118,0)
 ..S FDA(801.412,"?+"_SUB_",?+1,",8)=$P(INP(CNT,ACNT),U,4)
"RTN","PXRMDBL3",119,0)
 ..S FDA(801.412,"?+"_SUB_",?+1,",9)=$P(INP(CNT,ACNT),U,5)
"RTN","PXRMDBL3",120,0)
 .;Update #801.41
"RTN","PXRMDBL3",121,0)
 .D UPDATE^DIE("","FDA","FDAIEN","MSG")
"RTN","PXRMDBL3",122,0)
 .I $D(MSG) D ERR($G(INP(CNT))) Q
"RTN","PXRMDBL3",123,0)
 .;Save IEN of dialog created/used for later use in building dialog set 
"RTN","PXRMDBL3",124,0)
 .I DTYPE="E" S DSET(1,CNT*5)=FDAIEN(1)
"RTN","PXRMDBL3",125,0)
 .;Auto Generate date - set direct because of conflict with PXRMDD41
"RTN","PXRMDBL3",126,0)
 .S $P(^PXRMD(801.41,FDAIEN(1),99),U,1,2)=U_$$NOW^XLFDT
"RTN","PXRMDBL3",127,0)
 .;Insert link to reminder
"RTN","PXRMDBL3",128,0)
 .I DTYPE="R",PXRMLINK="Y" D
"RTN","PXRMDBL3",129,0)
 ..S $P(^PXD(811.9,REM,51),U)=FDAIEN(1),^PXD(811.9,"AG",FDAIEN(1),REM)=""
"RTN","PXRMDBL3",130,0)
 Q
"RTN","PXRMDBLD")
0^18^B65352402
"RTN","PXRMDBLD",1,0)
PXRMDBLD ; SLC/PJH - Reminder Dialog Generation. ;04/07/2000
"RTN","PXRMDBLD",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDBLD",3,0)
 ;
"RTN","PXRMDBLD",4,0)
 ;Called from PXRMGEDT
"RTN","PXRMDBLD",5,0)
 ;
"RTN","PXRMDBLD",6,0)
START N ANS,DIC,DNAME,LIT,LIT1,MSG,NAME,REDO,REM,RLNK,RNAME,ORY
"RTN","PXRMDBLD",7,0)
 N PXRMENAB,PXRMLINK,PXRMREPL,PXRMREM
"RTN","PXRMDBLD",8,0)
 ;Prompt for auto or manual addition
"RTN","PXRMDBLD",9,0)
 S ANS="" D ASK(.ANS) Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMDBLD",10,0)
 ;Auto
"RTN","PXRMDBLD",11,0)
 I ANS="Y" D AUTO Q
"RTN","PXRMDBLD",12,0)
 ;Manual
"RTN","PXRMDBLD",13,0)
 I ANS'="Y" D ADD^PXRMDEDT
"RTN","PXRMDBLD",14,0)
END Q
"RTN","PXRMDBLD",15,0)
 ;
"RTN","PXRMDBLD",16,0)
 ;Called by protocol PXRM DIALOG ADD
"RTN","PXRMDBLD",17,0)
 ;----------------------------------
"RTN","PXRMDBLD",18,0)
ADD(PXRMITEM) ;
"RTN","PXRMDBLD",19,0)
 N ANS,DNAME,DTOUT,DUOUT
"RTN","PXRMDBLD",20,0)
 S VALMBCK="R"
"RTN","PXRMDBLD",21,0)
 W IORESET
"RTN","PXRMDBLD",22,0)
 W !,PXRMHD
"RTN","PXRMDBLD",23,0)
 S DNAME=""
"RTN","PXRMDBLD",24,0)
 D ASK^PXRMDBLD(.ANS) Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDBLD",25,0)
 I ANS="Y" D AUTOP(PXRMITEM) Q
"RTN","PXRMDBLD",26,0)
 Q
"RTN","PXRMDBLD",27,0)
 ;
"RTN","PXRMDBLD",28,0)
 ;Ask autogenerate/manual
"RTN","PXRMDBLD",29,0)
 ;-----------------------
"RTN","PXRMDBLD",30,0)
ASK(YESNO) ;
"RTN","PXRMDBLD",31,0)
 N X,Y,TEXT,DIR
"RTN","PXRMDBLD",32,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDBLD",33,0)
 S DIR(0)="YA0"
"RTN","PXRMDBLD",34,0)
 S DIR("A")="GENERATE DIALOG AUTOMATICALLY: "
"RTN","PXRMDBLD",35,0)
 S DIR("B")="Y"
"RTN","PXRMDBLD",36,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMDBLD",37,0)
 S DIR("??")=U_"D HELP^PXRMDBLD(1)"
"RTN","PXRMDBLD",38,0)
 D ^DIR K DIR
"RTN","PXRMDBLD",39,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDBLD",40,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDBLD",41,0)
 S YESNO=$E(Y(0))
"RTN","PXRMDBLD",42,0)
 Q
"RTN","PXRMDBLD",43,0)
 ;
"RTN","PXRMDBLD",44,0)
 ;Source reminder for auto-generate
"RTN","PXRMDBLD",45,0)
 ;---------------------------------
"RTN","PXRMDBLD",46,0)
AUTO S DIC("A")="SELECT REMINDER TO GENERATE DIALOG FROM: "
"RTN","PXRMDBLD",47,0)
 S LIT1="You must select a reminder!"
"RTN","PXRMDBLD",48,0)
 D SEL(811.9,"AEQMZ",.PXRMREM)
"RTN","PXRMDBLD",49,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDBLD",50,0)
 S REM=$P(PXRMREM(1),U),DNAME=""
"RTN","PXRMDBLD",51,0)
 ;Display related dialogs
"RTN","PXRMDBLD",52,0)
 D DISP(REM)
"RTN","PXRMDBLD",53,0)
 ;Promt for type of generate
"RTN","PXRMDBLD",54,0)
 D AUTOP(REM)
"RTN","PXRMDBLD",55,0)
 Q
"RTN","PXRMDBLD",56,0)
 ;
"RTN","PXRMDBLD",57,0)
 ;Autogenerate prompts
"RTN","PXRMDBLD",58,0)
 ;--------------------
"RTN","PXRMDBLD",59,0)
AUTOP(REM) ;
"RTN","PXRMDBLD",60,0)
 S RNAME=$P($G(^PXD(811.9,REM,0)),U)
"RTN","PXRMDBLD",61,0)
 F  D  Q:$D(DUOUT)!$D(DTOUT)!(DNAME]"")
"RTN","PXRMDBLD",62,0)
 .N X,Y,DIR
"RTN","PXRMDBLD",63,0)
 .K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDBLD",64,0)
 .S DIR(0)="F"_U_"3:40"_U_"K:(X?.N)!'(X'?1P.E) X"
"RTN","PXRMDBLD",65,0)
 .S DIR("A")="ENTER A UNIQUE DIALOG NAME"
"RTN","PXRMDBLD",66,0)
 .S DIR("B")=RNAME
"RTN","PXRMDBLD",67,0)
 .S DIR("?")="Select a unique name for the generated dialog."
"RTN","PXRMDBLD",68,0)
 .S DIR("??")=U_"D HELP^PXRMDBLD(6)"
"RTN","PXRMDBLD",69,0)
 .D ^DIR K DIR
"RTN","PXRMDBLD",70,0)
 .I $D(DIROUT) S DTOUT=1
"RTN","PXRMDBLD",71,0)
 .I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDBLD",72,0)
 .I Y["""" D EN^DDIOL(" name cannot contain quotes!") Q
"RTN","PXRMDBLD",73,0)
 .;Choose to override existing reminder dialog
"RTN","PXRMDBLD",74,0)
 .I $D(^PXRMD(801.41,"B",Y)) Q:'$$OVER(Y)  D
"RTN","PXRMDBLD",75,0)
 ..;Delete existing reminder dialog
"RTN","PXRMDBLD",76,0)
 ..N DA,DIK
"RTN","PXRMDBLD",77,0)
 ..S DA=$O(^PXRMD(801.41,"B",Y,"")) Q:'DA
"RTN","PXRMDBLD",78,0)
 ..;If this is the linked reminder clear it
"RTN","PXRMDBLD",79,0)
 ..I $P($G(^PXD(811.9,REM,51)),U)=DA S $P(^PXD(811.9,REM,51),U)=""
"RTN","PXRMDBLD",80,0)
 ..N Y S DIK="^PXRMD(801.41," D ^DIK
"RTN","PXRMDBLD",81,0)
 .;Option to LINK DIALOG to REMINDER if reminder is not linked already
"RTN","PXRMDBLD",82,0)
 .S RLNK=$P($G(^PXD(811.9,REM,51)),U),PXRMLINK=0
"RTN","PXRMDBLD",83,0)
 .I 'RLNK D LINK(.PXRMLINK) Q:$D(DTOUT)!$D(DUOUT) 
"RTN","PXRMDBLD",84,0)
 .;Option to enable dialog
"RTN","PXRMDBLD",85,0)
 .D ENABLE(.PXRMENAB) Q:$D(DTOUT)!$D(DUOUT) 
"RTN","PXRMDBLD",86,0)
 .;Option to replace existing dialog elements
"RTN","PXRMDBLD",87,0)
 .D REPL(.PXRMREPL) Q:$D(DTOUT)!$D(DUOUT) 
"RTN","PXRMDBLD",88,0)
 .;Use name entered
"RTN","PXRMDBLD",89,0)
 .S DNAME=Y
"RTN","PXRMDBLD",90,0)
 ;
"RTN","PXRMDBLD",91,0)
 Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMDBLD",92,0)
 ;Build dialog
"RTN","PXRMDBLD",93,0)
 N CHECK D BUILD^PXRMDBL1(REM,DNAME,.CHECK)
"RTN","PXRMDBLD",94,0)
 Q
"RTN","PXRMDBLD",95,0)
 ;
"RTN","PXRMDBLD",96,0)
 ;Display dialogs autogenerated from this reminder
"RTN","PXRMDBLD",97,0)
 ;------------------------------------------------
"RTN","PXRMDBLD",98,0)
DISP(RIEN) ;
"RTN","PXRMDBLD",99,0)
 N ARRAY,DSUB,FIRST
"RTN","PXRMDBLD",100,0)
 ;Get Autogenerated dialogs
"RTN","PXRMDBLD",101,0)
 S FIRST=1,DSUB=""
"RTN","PXRMDBLD",102,0)
 F  S DSUB=$O(^PXRMD(801.41,"AG",RIEN,DSUB)) Q:'DSUB  D
"RTN","PXRMDBLD",103,0)
 .I FIRST W !!,"Associated Dialogs:" S FIRST=0
"RTN","PXRMDBLD",104,0)
 .W ?25,$P($G(^PXRMD(801.41,DSUB,0)),U),!
"RTN","PXRMDBLD",105,0)
 Q
"RTN","PXRMDBLD",106,0)
 ;
"RTN","PXRMDBLD",107,0)
 ;Disable generated dialog 
"RTN","PXRMDBLD",108,0)
 ;------------------------
"RTN","PXRMDBLD",109,0)
ENABLE(YESNO) ;
"RTN","PXRMDBLD",110,0)
 N X,Y,TEXT,DIR
"RTN","PXRMDBLD",111,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDBLD",112,0)
 S DIR(0)="YA0"
"RTN","PXRMDBLD",113,0)
 S DIR("A")="ENABLE DIALOG: "
"RTN","PXRMDBLD",114,0)
 S DIR("B")="NO"
"RTN","PXRMDBLD",115,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMDBLD",116,0)
 S DIR("??")=U_"D HELP^PXRMDBLD(4)"
"RTN","PXRMDBLD",117,0)
 D ^DIR K DIR
"RTN","PXRMDBLD",118,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDBLD",119,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDBLD",120,0)
 S YESNO=$E(Y(0))
"RTN","PXRMDBLD",121,0)
 Q
"RTN","PXRMDBLD",122,0)
 ;
"RTN","PXRMDBLD",123,0)
 ;Link dialog to reminder 
"RTN","PXRMDBLD",124,0)
 ;-----------------------
"RTN","PXRMDBLD",125,0)
LINK(YESNO) ;
"RTN","PXRMDBLD",126,0)
 N X,Y,TEXT,DIR
"RTN","PXRMDBLD",127,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDBLD",128,0)
 S DIR(0)="YA0"
"RTN","PXRMDBLD",129,0)
 S DIR("A")="LINK DIALOG TO REMINDER: "
"RTN","PXRMDBLD",130,0)
 S DIR("B")="YES"
"RTN","PXRMDBLD",131,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMDBLD",132,0)
 S DIR("??")=U_"D HELP^PXRMDBLD(5)"
"RTN","PXRMDBLD",133,0)
 D ^DIR K DIR
"RTN","PXRMDBLD",134,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDBLD",135,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDBLD",136,0)
 S YESNO=$E(Y(0))
"RTN","PXRMDBLD",137,0)
 Q
"RTN","PXRMDBLD",138,0)
 ;
"RTN","PXRMDBLD",139,0)
 ;Option to override existing dialog
"RTN","PXRMDBLD",140,0)
 ;----------------------------------
"RTN","PXRMDBLD",141,0)
OVER(DNAME) ;
"RTN","PXRMDBLD",142,0)
 N DIR,X,Y
"RTN","PXRMDBLD",143,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","PXRMDBLD",144,0)
 S DIR("A")="OVERWRITE EXISTING REMINDER DIALOG "
"RTN","PXRMDBLD",145,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMDBLD",146,0)
 S DIR("??")=U_"D HELP^PXRMDBLD(2)"
"RTN","PXRMDBLD",147,0)
 D ^DIR K DIR
"RTN","PXRMDBLD",148,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDBLD",149,0)
 I $D(DTOUT)!($D(DUOUT)) Q 0
"RTN","PXRMDBLD",150,0)
 Q $S(Y(0)="YES":1,1:0)
"RTN","PXRMDBLD",151,0)
 ;
"RTN","PXRMDBLD",152,0)
 ;Option to replace existing dialog elements
"RTN","PXRMDBLD",153,0)
 ;------------------------------------------
"RTN","PXRMDBLD",154,0)
REPL(INP) ;
"RTN","PXRMDBLD",155,0)
 N DIR,X,Y
"RTN","PXRMDBLD",156,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","PXRMDBLD",157,0)
 S DIR("A")="REPLACE ANY EXISTING DIALOG ELEMENTS"
"RTN","PXRMDBLD",158,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMDBLD",159,0)
 S DIR("??")=U_"D HELP^PXRMDBLD(3)"
"RTN","PXRMDBLD",160,0)
 D ^DIR K DIR
"RTN","PXRMDBLD",161,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDBLD",162,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDBLD",163,0)
 S INP=$S(Y(0)="YES":1,1:0)
"RTN","PXRMDBLD",164,0)
 Q
"RTN","PXRMDBLD",165,0)
 ;
"RTN","PXRMDBLD",166,0)
 ;Reminder selection
"RTN","PXRMDBLD",167,0)
 ;------------------
"RTN","PXRMDBLD",168,0)
SEL(FILE,MODE,ARRAY) ;
"RTN","PXRMDBLD",169,0)
 N X,Y,CNT
"RTN","PXRMDBLD",170,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDBLD",171,0)
 S CNT=0
"RTN","PXRMDBLD",172,0)
 W !
"RTN","PXRMDBLD",173,0)
 F  D  Q:$D(DTOUT)  Q:$D(DUOUT)  Q:CNT>0  Q:(Y=-1)&(CNT>0)
"RTN","PXRMDBLD",174,0)
 .S DIC=FILE,DIC(0)=MODE
"RTN","PXRMDBLD",175,0)
 .D ^DIC
"RTN","PXRMDBLD",176,0)
 .I X=(U_U) S DTOUT=1
"RTN","PXRMDBLD",177,0)
 .I '$D(DTOUT),('$D(DUOUT)) D
"RTN","PXRMDBLD",178,0)
 ..I +Y'=-1 D  Q
"RTN","PXRMDBLD",179,0)
 ...S CNT=CNT+1,ARRAY(CNT)=Y_U_Y(0,0)_U_$P(Y(0),U,3)
"RTN","PXRMDBLD",180,0)
 ..W:CNT=0 !,LIT1
"RTN","PXRMDBLD",181,0)
 .K DIC
"RTN","PXRMDBLD",182,0)
 Q
"RTN","PXRMDBLD",183,0)
 ;
"RTN","PXRMDBLD",184,0)
 ;General help text routine.
"RTN","PXRMDBLD",185,0)
 ;--------------------------
"RTN","PXRMDBLD",186,0)
HELP(CALL) ;
"RTN","PXRMDBLD",187,0)
 N HTEXT
"RTN","PXRMDBLD",188,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMDBLD",189,0)
 S DIWF="C75",DIWL=0,DIWR=75
"RTN","PXRMDBLD",190,0)
 ;
"RTN","PXRMDBLD",191,0)
 I CALL=1 D
"RTN","PXRMDBLD",192,0)
 .S HTEXT(1)="Enter Yes to generate reminder dialog automatically for a"
"RTN","PXRMDBLD",193,0)
 .S HTEXT(2)="selected reminder. Enter No to create a reminder dialog"
"RTN","PXRMDBLD",194,0)
 .S HTEXT(3)="using the standard fileman edit."
"RTN","PXRMDBLD",195,0)
 I CALL=2 D
"RTN","PXRMDBLD",196,0)
 .S HTEXT(1)="Enter Yes to replace the existing reminder dialog."
"RTN","PXRMDBLD",197,0)
 .S HTEXT(2)="Enter No to return and enter an alternative dialog name."
"RTN","PXRMDBLD",198,0)
 I CALL=3 D
"RTN","PXRMDBLD",199,0)
 .S HTEXT(1)="For each FINDING ITEM on the reminder a dialog element"
"RTN","PXRMDBLD",200,0)
 .S HTEXT(2)="will be created. A separate DIALOG ELEMENT is created for"
"RTN","PXRMDBLD",201,0)
 .S HTEXT(3)="each enabled RESOLUTION STATUS in the FINDING TYPE"
"RTN","PXRMDBLD",202,0)
 .S HTEXT(4)="PARAMETERS for this finding type. The dialog element is"
"RTN","PXRMDBLD",203,0)
 .S HTEXT(5)="unique for finding type, finding item name and resolution"
"RTN","PXRMDBLD",204,0)
 .S HTEXT(6)="status name."
"RTN","PXRMDBLD",205,0)
 .S HTEXT(7)="e.g. VM WEIGHT DONE will be generated for the finding item"
"RTN","PXRMDBLD",206,0)
 .S HTEXT(8)="     vitals measurement/weight."
"RTN","PXRMDBLD",207,0)
 .S HTEXT(9)=""
"RTN","PXRMDBLD",208,0)
 .S HTEXT(10)="Enter Yes to rebuild all dialog elements used by this"
"RTN","PXRMDBLD",209,0)
 .S HTEXT(11)="reminder overwriting any existing modifications."
"RTN","PXRMDBLD",210,0)
 .S HTEXT(12)=""
"RTN","PXRMDBLD",211,0)
 .S HTEXT(13)="Enter No to use existing dialog elements if they exist."
"RTN","PXRMDBLD",212,0)
 .S HTEXT(14)="New dialog elements will be created if they don't already"
"RTN","PXRMDBLD",213,0)
 .S HTEXT(15)="exist."
"RTN","PXRMDBLD",214,0)
 I CALL=4 D
"RTN","PXRMDBLD",215,0)
 .S HTEXT(1)="Enter Yes to create a dialog enabled for use in CPRS."
"RTN","PXRMDBLD",216,0)
 .S HTEXT(2)="Enter No to create a dialog disabled for CPRS."
"RTN","PXRMDBLD",217,0)
 I CALL=5 D
"RTN","PXRMDBLD",218,0)
 .S HTEXT(1)="If the source reminder is not linked to any other dialog"
"RTN","PXRMDBLD",219,0)
 .S HTEXT(2)="enter Yes to link the reminder to the generated dialog."
"RTN","PXRMDBLD",220,0)
 .S HTEXT(3)="Enter No if no link should be made."
"RTN","PXRMDBLD",221,0)
 I CALL=6 D
"RTN","PXRMDBLD",222,0)
 .S HTEXT(1)="Enter the name of the dialog. The default is the reminder"
"RTN","PXRMDBLD",223,0)
 .S HTEXT(2)="name. If the name of an existing dialog is specified the"
"RTN","PXRMDBLD",224,0)
 .S HTEXT(3)="option to override the existing dialog will be given."
"RTN","PXRMDBLD",225,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDBLD",226,0)
 S IC=""
"RTN","PXRMDBLD",227,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMDBLD",228,0)
 . S X=HTEXT(IC)
"RTN","PXRMDBLD",229,0)
 . D ^DIWP
"RTN","PXRMDBLD",230,0)
 W !
"RTN","PXRMDBLD",231,0)
 S IC=0
"RTN","PXRMDBLD",232,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMDBLD",233,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMDBLD",234,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDBLD",235,0)
 W !
"RTN","PXRMDBLD",236,0)
 Q
"RTN","PXRMDCPY")
0^176^B32769091
"RTN","PXRMDCPY",1,0)
PXRMDCPY ; SLC/PJH - Copy dialog files. ;06/08/2000
"RTN","PXRMDCPY",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDCPY",3,0)
 ;
"RTN","PXRMDCPY",4,0)
 ;Called by label from PXRMDEDT
"RTN","PXRMDCPY",5,0)
 ;
"RTN","PXRMDCPY",6,0)
 ;Yes/No prompts
"RTN","PXRMDCPY",7,0)
 ;--------------
"RTN","PXRMDCPY",8,0)
ASK(YESNO,TEXT,HLP) ;
"RTN","PXRMDCPY",9,0)
 N X,Y,DIR
"RTN","PXRMDCPY",10,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDCPY",11,0)
 S DIR(0)="YA0"
"RTN","PXRMDCPY",12,0)
 S DIR("A")=TEXT
"RTN","PXRMDCPY",13,0)
 S DIR("B")="Y"
"RTN","PXRMDCPY",14,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMDCPY",15,0)
 S DIR("??")=U_"D HELP^PXRMDEDT(HLP)"
"RTN","PXRMDCPY",16,0)
 D ^DIR K DIR
"RTN","PXRMDCPY",17,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDCPY",18,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDCPY",19,0)
 S YESNO=$E(Y(0))
"RTN","PXRMDCPY",20,0)
 Q
"RTN","PXRMDCPY",21,0)
 ;
"RTN","PXRMDCPY",22,0)
 ;Copy any dialog
"RTN","PXRMDCPY",23,0)
 ;---------------
"RTN","PXRMDCPY",24,0)
ANY W IORESET
"RTN","PXRMDCPY",25,0)
 N DIC,DUOUT,DTOUT,DIROUT,DIRUT,SIEN,IENN,IENO,X,Y
"RTN","PXRMDCPY",26,0)
 N PROMPT,PXRMSNUM,ROOT,WHAT
"RTN","PXRMDCPY",27,0)
 S PXRMSNUM=$$SNUM Q:'PXRMSNUM
"RTN","PXRMDCPY",28,0)
 S WHAT="dialog",ROOT="^PXRMD(801.41,",PROMPT="Select the dialog to copy: "
"RTN","PXRMDCPY",29,0)
 ;
"RTN","PXRMDCPY",30,0)
 S DIC=ROOT,DIC(0)="AEQ",DIC("A")=PROMPT
"RTN","PXRMDCPY",31,0)
 W !
"RTN","PXRMDCPY",32,0)
 D ^DIC
"RTN","PXRMDCPY",33,0)
 I $D(DUOUT)!$D(DTOUT) S DIROUT="" Q
"RTN","PXRMDCPY",34,0)
 S IENO=$P(Y,U,1) I IENO=-1 S DIROUT="" Q
"RTN","PXRMDCPY",35,0)
 ;
"RTN","PXRMDCPY",36,0)
 ;Copy the dialog
"RTN","PXRMDCPY",37,0)
 D COPY(IENO,.IENN,0) Q:$D(DUOUT)
"RTN","PXRMDCPY",38,0)
 ;
"RTN","PXRMDCPY",39,0)
 ;update process id index in #801.42
"RTN","PXRMDCPY",40,0)
 I "PF"[$P(@(ROOT_IENN_",0)"),U,4) D
"RTN","PXRMDCPY",41,0)
 .N SUB S SUB=$O(^PXRMD(801.42,"AB",IENO,"")) Q:'SUB
"RTN","PXRMDCPY",42,0)
 .N FDA,FDAIEN,MSG
"RTN","PXRMDCPY",43,0)
 .S FDA(801.42,"?1,",.01)=$P($G(^PXRMD(801.42,SUB,0)),U)
"RTN","PXRMDCPY",44,0)
 .S FDA(801.422,"?+2,?1,",.01)=IENN
"RTN","PXRMDCPY",45,0)
 .S FDAIEN(1)=SUB
"RTN","PXRMDCPY",46,0)
 .D UPDATE^DIE("","FDA","FDAIEN","MSG")
"RTN","PXRMDCPY",47,0)
 .I $D(MSG) D ERR($P($G(^PXRMD(801.42,SUB,0)),U))
"RTN","PXRMDCPY",48,0)
 ;
"RTN","PXRMDCPY",49,0)
 Q
"RTN","PXRMDCPY",50,0)
 ;
"RTN","PXRMDCPY",51,0)
 ;Copy original dialog
"RTN","PXRMDCPY",52,0)
 ;--------------------
"RTN","PXRMDCPY",53,0)
COPY(IENO,IENN,RDIEN) ;
"RTN","PXRMDCPY",54,0)
 D SETSTART^PXRMDCPY(ROOT,1)
"RTN","PXRMDCPY",55,0)
 S IENN=PXRMSNUM_"000001"
"RTN","PXRMDCPY",56,0)
 S IENN=$$GETFOIEN(ROOT,IENN)
"RTN","PXRMDCPY",57,0)
 D MERGE(IENN,IENO,ROOT) Q:$D(DUOUT)
"RTN","PXRMDCPY",58,0)
 ;
"RTN","PXRMDCPY",59,0)
 N DA,DIE,DIK,DIR,DR,NAME,ORGNAME,X
"RTN","PXRMDCPY",60,0)
 S ORGNAME=$P(@(ROOT_IENO_",0)"),U,1),NAME=""
"RTN","PXRMDCPY",61,0)
 ;Get the new name.
"RTN","PXRMDCPY",62,0)
 F  D  Q:$D(DTOUT)!$D(DUOUT)  Q:NAME]""
"RTN","PXRMDCPY",63,0)
 .S DIR(0)="F"_U_"3:63"_U_"K:(X?.N)!'(X'?1P.E) X"
"RTN","PXRMDCPY",64,0)
 .S DIR("A")="ENTER A UNIQUE NAME"
"RTN","PXRMDCPY",65,0)
 .;If  give a default name
"RTN","PXRMDCPY",66,0)
 .S:RDIEN DIR("B")=$$NAME(IENO,ORGNAME)
"RTN","PXRMDCPY",67,0)
 .D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDCPY",68,0)
 .I Y["""" D EN^DDIOL(" name cannot contain quotes!") Q
"RTN","PXRMDCPY",69,0)
 .I $$UNIQNAME(Y,ROOT) S NAME=Y Q
"RTN","PXRMDCPY",70,0)
 .D EN^DDIOL(" is not a unique name!")
"RTN","PXRMDCPY",71,0)
 ;
"RTN","PXRMDCPY",72,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDCPY",73,0)
 ;
"RTN","PXRMDCPY",74,0)
 ;Store the unique name
"RTN","PXRMDCPY",75,0)
 S DR=".01///^S X=NAME",DIE=ROOT,DA=IENN
"RTN","PXRMDCPY",76,0)
 D ^DIE
"RTN","PXRMDCPY",77,0)
 ;
"RTN","PXRMDCPY",78,0)
 ;Reindex the cross-references.
"RTN","PXRMDCPY",79,0)
 S DIK=ROOT,DA=IENN
"RTN","PXRMDCPY",80,0)
 D IX^DIK
"RTN","PXRMDCPY",81,0)
 ;
"RTN","PXRMDCPY",82,0)
 W !!,"Completed copy of '"_ORGNAME_"'"
"RTN","PXRMDCPY",83,0)
 W !,"into '"_NAME_"'",! H 2
"RTN","PXRMDCPY",84,0)
 ;
"RTN","PXRMDCPY",85,0)
 Q
"RTN","PXRMDCPY",86,0)
 ;
"RTN","PXRMDCPY",87,0)
 ;Delete the entry just added
"RTN","PXRMDCPY",88,0)
 ;--------------------------- 
"RTN","PXRMDCPY",89,0)
DELETE S DIK=ROOT,DA=IENN D ^DIK
"RTN","PXRMDCPY",90,0)
 W !!,"New entry not created due to invalid name!",!
"RTN","PXRMDCPY",91,0)
 Q
"RTN","PXRMDCPY",92,0)
 ;
"RTN","PXRMDCPY",93,0)
 ;Error Handler
"RTN","PXRMDCPY",94,0)
 ;-------------
"RTN","PXRMDCPY",95,0)
ERR(DESC) ;
"RTN","PXRMDCPY",96,0)
 N ERROR,IC,REF
"RTN","PXRMDCPY",97,0)
 S ERROR(1)="Unable to update GUI PROCESS file : "_DESC
"RTN","PXRMDCPY",98,0)
 S ERROR(2)="Error in UPDATE^DIE, needs further investigation"
"RTN","PXRMDCPY",99,0)
 ;Move MSG into ERROR
"RTN","PXRMDCPY",100,0)
 S REF="MSG"
"RTN","PXRMDCPY",101,0)
 F IC=3:1 S REF=$Q(@REF) Q:REF=""  S ERROR(IC)=REF_"="_@REF
"RTN","PXRMDCPY",102,0)
 ;Screen message
"RTN","PXRMDCPY",103,0)
 D BMES^XPDUTL(.ERROR)
"RTN","PXRMDCPY",104,0)
 Q
"RTN","PXRMDCPY",105,0)
 ;
"RTN","PXRMDCPY",106,0)
 ;Given ROOT and a starting IEN (SIEN) return the first
"RTN","PXRMDCPY",107,0)
 ;-----------------------------------------------------
"RTN","PXRMDCPY",108,0)
GETFOIEN(ROOT,SIEN) ;
"RTN","PXRMDCPY",109,0)
 ;open IEN in ROOT
"RTN","PXRMDCPY",110,0)
 N ENTRY,NIEN,OIEN
"RTN","PXRMDCPY",111,0)
 S OIEN=SIEN-1
"RTN","PXRMDCPY",112,0)
 S ENTRY=ROOT_OIEN_")"
"RTN","PXRMDCPY",113,0)
 F  S NIEN=$O(@ENTRY) Q:+(NIEN-OIEN)>1  Q:+NIEN'>0  S OIEN=NIEN,ENTRY=ROOT_NIEN_")"
"RTN","PXRMDCPY",114,0)
 Q OIEN+1
"RTN","PXRMDCPY",115,0)
 ;
"RTN","PXRMDCPY",116,0)
 ;Use MERGE to copy ROOT(IENO into ROOT(IENN
"RTN","PXRMDCPY",117,0)
 ;------------------------------------------
"RTN","PXRMDCPY",118,0)
MERGE(IENN,IENO,ROOT) ;
"RTN","PXRMDCPY",119,0)
 N DEST,SOURCE
"RTN","PXRMDCPY",120,0)
 ;
"RTN","PXRMDCPY",121,0)
 S DEST=ROOT_IENN_")"
"RTN","PXRMDCPY",122,0)
 ;Lock the file before merging.
"RTN","PXRMDCPY",123,0)
 L +@DEST:10
"RTN","PXRMDCPY",124,0)
 E  W !,"Another user is editing this file, try later" H 2 S DUOUT=1 Q
"RTN","PXRMDCPY",125,0)
 S SOURCE=ROOT_IENO_")"
"RTN","PXRMDCPY",126,0)
 M @DEST=@SOURCE
"RTN","PXRMDCPY",127,0)
 ;Unlock the file
"RTN","PXRMDCPY",128,0)
 L -@DEST
"RTN","PXRMDCPY",129,0)
 Q
"RTN","PXRMDCPY",130,0)
 ;
"RTN","PXRMDCPY",131,0)
 ;Get default name
"RTN","PXRMDCPY",132,0)
 ;----------------
"RTN","PXRMDCPY",133,0)
NAME(IEN,ORG) ;
"RTN","PXRMDCPY",134,0)
 N CNT,NAME,PREV
"RTN","PXRMDCPY",135,0)
 ;
"RTN","PXRMDCPY",136,0)
 S PREV=0
"RTN","PXRMDCPY",137,0)
 I $E(ORG,$L(ORG))=")",ORG[" (" D
"RTN","PXRMDCPY",138,0)
 .S PREV=+$P(ORG," (",2) S:PREV>0 ORG=$P(ORG," (",1)
"RTN","PXRMDCPY",139,0)
 F CNT=PREV+1:1 S NAME=ORG_" ("_CNT_")" Q:'$D(^PXRMD(801.41,"B",NAME))
"RTN","PXRMDCPY",140,0)
 Q NAME
"RTN","PXRMDCPY",141,0)
 ;
"RTN","PXRMDCPY",142,0)
 ;Copy selected dialog element OR reminder dialog
"RTN","PXRMDCPY",143,0)
 ;-----------------------------------------------
"RTN","PXRMDCPY",144,0)
SEL(IENO,RDIEN) ;
"RTN","PXRMDCPY",145,0)
 W IORESET S VALMBCK="R"
"RTN","PXRMDCPY",146,0)
 N ANS,IENN,PROMPT,PXRMSNUM,ROOT,TEXT,WHAT
"RTN","PXRMDCPY",147,0)
 S PXRMSNUM=$$SNUM Q:'PXRMSNUM
"RTN","PXRMDCPY",148,0)
 S WHAT="dialog element"
"RTN","PXRMDCPY",149,0)
 S ROOT="^PXRMD(801.41,"
"RTN","PXRMDCPY",150,0)
 S PROMPT="Select the dialog to copy: "
"RTN","PXRMDCPY",151,0)
 S TEXT=$P($G(^PXRMD(801.41,IENO,0)),U)
"RTN","PXRMDCPY",152,0)
 ;
"RTN","PXRMDCPY",153,0)
 I RDIEN S TEXT="COPY AND REPLACE '"_TEXT_"'  "
"RTN","PXRMDCPY",154,0)
 I 'RDIEN S TEXT="COPY REMINDER DIALOG '"_TEXT_"'  "
"RTN","PXRMDCPY",155,0)
 D ASK(.ANS,TEXT,2) Q:$D(DUOUT)!$D(DTOUT)  Q:ANS'="Y"
"RTN","PXRMDCPY",156,0)
 ;Copy
"RTN","PXRMDCPY",157,0)
 D COPY(IENO,.IENN,RDIEN) Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMDCPY",158,0)
 ;Replace dialog element in reminder dialog
"RTN","PXRMDCPY",159,0)
 I RDIEN D
"RTN","PXRMDCPY",160,0)
 .N DR,DA,DIE
"RTN","PXRMDCPY",161,0)
 .S DA=$O(^PXRMD(801.41,RDIEN,10,"D",IENO,"")) Q:'DA
"RTN","PXRMDCPY",162,0)
 .S DA(1)=RDIEN
"RTN","PXRMDCPY",163,0)
 .S DR="2///"_IENN
"RTN","PXRMDCPY",164,0)
 .S DIE=ROOT_RDIEN_",10,"
"RTN","PXRMDCPY",165,0)
 .D ^DIE
"RTN","PXRMDCPY",166,0)
 .W !,"Replaced element'"_$P(@(ROOT_IENO_",0)"),U)_"'"
"RTN","PXRMDCPY",167,0)
 .W !,"with '"_$P(@(ROOT_IENN_",0)"),U)_"'"
"RTN","PXRMDCPY",168,0)
 .W !,"on this dialog.",!
"RTN","PXRMDCPY",169,0)
 ;
"RTN","PXRMDCPY",170,0)
 N DIR
"RTN","PXRMDCPY",171,0)
 S DIR(0)="YAO"
"RTN","PXRMDCPY",172,0)
 S DIR("A")="Do you want to edit now  "
"RTN","PXRMDCPY",173,0)
 S DIR("B")="Y"
"RTN","PXRMDCPY",174,0)
 D ^DIR
"RTN","PXRMDCPY",175,0)
 I $D(DIRUT) S DUOUT=1 Q
"RTN","PXRMDCPY",176,0)
 I $E(Y(0))'="Y" S DUOUT=1 Q
"RTN","PXRMDCPY",177,0)
 W !
"RTN","PXRMDCPY",178,0)
 ;Quit screen for edit = yes
"RTN","PXRMDCPY",179,0)
 S:'RDIEN VALMBCK="Q"
"RTN","PXRMDCPY",180,0)
 ;Reset dialog element ien
"RTN","PXRMDCPY",181,0)
 S:RDIEN IENO=IENN
"RTN","PXRMDCPY",182,0)
 Q
"RTN","PXRMDCPY",183,0)
 ;
"RTN","PXRMDCPY",184,0)
 ;Set dialog numberspace
"RTN","PXRMDCPY",185,0)
 ;----------------------
"RTN","PXRMDCPY",186,0)
SETSTART(ROOT,NAT) ;Set the starting value to add new entries. The
"RTN","PXRMDCPY",187,0)
 ;national number space is 1 to 99999. Site number spaces are XXX000001
"RTN","PXRMDCPY",188,0)
 ;to XXX999999 where XXX is the site number.
"RTN","PXRMDCPY",189,0)
 N CUR,ENTRY
"RTN","PXRMDCPY",190,0)
 S ENTRY=ROOT_"0)"
"RTN","PXRMDCPY",191,0)
 I NAT,$G(PXRMINST)=1,DUZ(0)="@" D
"RTN","PXRMDCPY",192,0)
 . S $P(@ENTRY,U,3)=1
"RTN","PXRMDCPY",193,0)
 E  D
"RTN","PXRMDCPY",194,0)
 . S CUR=$P(@ENTRY,U,3)
"RTN","PXRMDCPY",195,0)
 . I CUR<100000000 S $P(@ENTRY,U,3)=+($P($$SITE^VASITE,U,3)_"000001")
"RTN","PXRMDCPY",196,0)
 Q
"RTN","PXRMDCPY",197,0)
 ;
"RTN","PXRMDCPY",198,0)
 ;Get ien for inserts
"RTN","PXRMDCPY",199,0)
 ;-------------------
"RTN","PXRMDCPY",200,0)
SNUM() S PXRMSNUM=+$P($$SITE^VASITE,U,3)
"RTN","PXRMDCPY",201,0)
 I $L(PXRMSNUM)'=3 D
"RTN","PXRMDCPY",202,0)
 .W !,"You must have a 3-digit primary station number in order to use this option, See IRM!"
"RTN","PXRMDCPY",203,0)
 .S PXRMSNUM=""
"RTN","PXRMDCPY",204,0)
 Q PXRMSNUM
"RTN","PXRMDCPY",205,0)
 ;
"RTN","PXRMDCPY",206,0)
 ;Return TRUE (1) if NAME is unique 
"RTN","PXRMDCPY",207,0)
 ;---------------------------------
"RTN","PXRMDCPY",208,0)
UNIQNAME(NAME,ROOT) ;
"RTN","PXRMDCPY",209,0)
 N RETVAL,REF
"RTN","PXRMDCPY",210,0)
 S RETVAL=1,REF=ROOT_"""B"""_","_""""_NAME_""""_")"
"RTN","PXRMDCPY",211,0)
 I $D(@REF) S RETVAL=0
"RTN","PXRMDCPY",212,0)
 Q RETVAL
"RTN","PXRMDD41")
0^19^B2195798
"RTN","PXRMDD41",1,0)
PXRMDD41 ; SLC/PJH Reminder Dialog file calls ;04/17/2000
"RTN","PXRMDD41",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDD41",3,0)
 ;
"RTN","PXRMDD41",4,0)
 ;copied from ORDD41 for dialog reminders
"RTN","PXRMDD41",5,0)
 ;
"RTN","PXRMDD41",6,0)
 ;
"RTN","PXRMDD41",7,0)
KILL(DLG) ;
"RTN","PXRMDD41",8,0)
 Q
"RTN","PXRMDD41",9,0)
 ;
"RTN","PXRMDD41",10,0)
 ; Update audit trail when ITEMS changed
"RTN","PXRMDD41",11,0)
REDOX I $D(^PXRMD(801.41,+$G(DA(1)),0)) S $P(^(99),U)=$$NOW^XLFDT
"RTN","PXRMDD41",12,0)
 Q
"RTN","PXRMDD41",13,0)
 ;
"RTN","PXRMDD41",14,0)
SCREEN ;validate dialog type
"RTN","PXRMDD41",15,0)
 Q:'$G(DA(1))
"RTN","PXRMDD41",16,0)
 N PXRMMTYP
"RTN","PXRMDD41",17,0)
 S PXRMMTYP=$P($G(^PXRMD(801.41,DA(1),0)),U,4)
"RTN","PXRMDD41",18,0)
 ;MH results and Reminder dialogs dissallowed
"RTN","PXRMDD41",19,0)
 S DIC("S")="I ""RST""'[$P(^(0),U,4)"
"RTN","PXRMDD41",20,0)
 ;Dialog elements can only contain prompts/forced values
"RTN","PXRMDD41",21,0)
 I PXRMMTYP="E" S DIC("S")="I ""FP""[$P(^(0),U,4)"
"RTN","PXRMDD41",22,0)
 ;Reminder dialogs can contain only Elements and Groups
"RTN","PXRMDD41",23,0)
 I PXRMMTYP="R" S DIC("S")="I ""EG""[$P(^(0),U,4)"
"RTN","PXRMDD41",24,0)
 ;MH Result Groups can only contain MH Result Elementss
"RTN","PXRMDD41",25,0)
 I PXRMMTYP="S" S DIC("S")="I ""T""=$P(^(0),U,4)"
"RTN","PXRMDD41",26,0)
 Q
"RTN","PXRMDD41",27,0)
 ;
"RTN","PXRMDD41",28,0)
 ; UPDATE last amend date
"RTN","PXRMDD41",29,0)
SET(DLG) ;
"RTN","PXRMDD41",30,0)
 S $P(^PXRMD(801.41,DLG,99),U)=$$NOW^XLFDT
"RTN","PXRMDD41",31,0)
 Q
"RTN","PXRMDD41",32,0)
 ;
"RTN","PXRMDD41",33,0)
 ; -- Ck menu tree to ensure new item is not an ancestor
"RTN","PXRMDD41",34,0)
 ;    Input Xform for Item field #2 of Items subfile #801.412
"RTN","PXRMDD41",35,0)
 ;      expecting DA, DA(1), X from FileMan
"RTN","PXRMDD41",36,0)
TREE ;
"RTN","PXRMDD41",37,0)
 D SCREEN
"RTN","PXRMDD41",38,0)
 N PXRMDDA,PXRMDD S PXRMDDA=DA(1)
"RTN","PXRMDD41",39,0)
 K:X=PXRMDDA X D TREE1
"RTN","PXRMDD41",40,0)
 Q
"RTN","PXRMDD41",41,0)
 ; -- Look for X in ancestors
"RTN","PXRMDD41",42,0)
TREE1 F PXRMDD=0:0 Q:'$D(X)  S PXRMDD=$O(^PXRMD(801.41,"AD",PXRMDDA,PXRMDD)) Q:PXRMDD'>0  K:X=PXRMDD X Q:'$D(X)  D TREE2
"RTN","PXRMDD41",43,0)
 Q
"RTN","PXRMDD41",44,0)
 ; Back up another level
"RTN","PXRMDD41",45,0)
TREE2 N PXRMDDA S PXRMDDA=PXRMDD N PXRMDD D TREE1
"RTN","PXRMDD41",46,0)
 Q
"RTN","PXRMDEDT")
0^20^B62802101
"RTN","PXRMDEDT",1,0)
PXRMDEDT ; SLC/PJH - Edit PXRM reminder dialog. ;06/08/2000
"RTN","PXRMDEDT",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDEDT",3,0)
 ;
"RTN","PXRMDEDT",4,0)
 ;Used by protocol PXRM SELECTION ADD/PXRM GENERAL ADD
"RTN","PXRMDEDT",5,0)
 ;
"RTN","PXRMDEDT",6,0)
 ;Add Dialog
"RTN","PXRMDEDT",7,0)
 ;----------
"RTN","PXRMDEDT",8,0)
ADD N DA,DIC,Y,DTOUT,DUOUT,DTYP,DLAYGO,HED
"RTN","PXRMDEDT",9,0)
 S HED="ADD DIALOG"
"RTN","PXRMDEDT",10,0)
 W IORESET
"RTN","PXRMDEDT",11,0)
 F  D  Q:$D(DTOUT)
"RTN","PXRMDEDT",12,0)
 .S DIC="^PXRMD(801.41,"
"RTN","PXRMDEDT",13,0)
 .;Set the starting place for additions.
"RTN","PXRMDEDT",14,0)
 .D SETSTART^PXRMDCPY(DIC,0)
"RTN","PXRMDEDT",15,0)
 .S DIC(0)="AELMQ",DLAYGO=801.41
"RTN","PXRMDEDT",16,0)
 .S DIC("A")="Select DIALOG to add: "
"RTN","PXRMDEDT",17,0)
 .S DIC("DR")="4///"_$G(PXRMDTYP)
"RTN","PXRMDEDT",18,0)
 .D ^DIC
"RTN","PXRMDEDT",19,0)
 .I $D(DUOUT) S DTOUT=1
"RTN","PXRMDEDT",20,0)
 .I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMDEDT",21,0)
 .I Y=-1 K DIC S DTOUT=1 Q
"RTN","PXRMDEDT",22,0)
 .I $P(Y,U,3)'=1 W !,"This dialog name already exists" Q
"RTN","PXRMDEDT",23,0)
 .S DA=$P(Y,U,1)
"RTN","PXRMDEDT",24,0)
 .;Determine dialog type
"RTN","PXRMDEDT",25,0)
 .S DTYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",26,0)
 .;Enter dialog type if a new entry
"RTN","PXRMDEDT",27,0)
 .I DTYP="" D  Q:$D(Y)
"RTN","PXRMDEDT",28,0)
 ..N DIE,DR
"RTN","PXRMDEDT",29,0)
 ..S DIE=801.41,DR=4
"RTN","PXRMDEDT",30,0)
 ..D ^DIE
"RTN","PXRMDEDT",31,0)
 .;
"RTN","PXRMDEDT",32,0)
 .;Edit Dialog
"RTN","PXRMDEDT",33,0)
 .D EDIT(DTYP,DA)
"RTN","PXRMDEDT",34,0)
 Q
"RTN","PXRMDEDT",35,0)
 ;
"RTN","PXRMDEDT",36,0)
 ;Delete a line from the reminder dialog
"RTN","PXRMDEDT",37,0)
 ;--------------------------------------
"RTN","PXRMDEDT",38,0)
DEL(DIEN,PXRMDIEN) ;
"RTN","PXRMDEDT",39,0)
 N DA,DIK
"RTN","PXRMDEDT",40,0)
 S DA(1)=PXRMDIEN,DA=$O(^PXRMD(801.41,PXRMDIEN,10,"D",DIEN,"")) Q:'DA
"RTN","PXRMDEDT",41,0)
 S DIK="^PXRMD(801.41,"_DA(1)_",10,"
"RTN","PXRMDEDT",42,0)
 D ^DIK
"RTN","PXRMDEDT",43,0)
 Q
"RTN","PXRMDEDT",44,0)
 ;
"RTN","PXRMDEDT",45,0)
 ;called by protocol PXRM DIALOG EDIT
"RTN","PXRMDEDT",46,0)
 ;-----------------------------------
"RTN","PXRMDEDT",47,0)
EDIT(TYP,DA) ;
"RTN","PXRMDEDT",48,0)
 Q:'$$LOCK(DA)
"RTN","PXRMDEDT",49,0)
 W IORESET
"RTN","PXRMDEDT",50,0)
 N DIC,DIDEL,DIE,DR,DTOUT,DUOUT,DINUSE,ODA,Y
"RTN","PXRMDEDT",51,0)
 S DIE="^PXRMD(801.41,",DIDEL=801.41,DINUSE=0,ODA=DA
"RTN","PXRMDEDT",52,0)
 ;Prevent deletion of unused PXRM prompts
"RTN","PXRMDEDT",53,0)
 I $E($G(^PXRMD(801.41,DA,0)),1,4)="PXRM" S DINUSE=1
"RTN","PXRMDEDT",54,0)
 ;Reminder Dialog
"RTN","PXRMDEDT",55,0)
 I TYP="R" S DR="[PXRM EDIT REMINDER DIALOG]"
"RTN","PXRMDEDT",56,0)
 ;Dialog Element
"RTN","PXRMDEDT",57,0)
 I TYP="E" S DR="[PXRM EDIT ELEMENT]"
"RTN","PXRMDEDT",58,0)
 ;Additional Prompt
"RTN","PXRMDEDT",59,0)
 I TYP="P" S DR="[PXRM EDIT PROMPT]"
"RTN","PXRMDEDT",60,0)
 ;Forced Value
"RTN","PXRMDEDT",61,0)
 I TYP="F" S DR="[PXRM EDIT FORCED VALUE]"
"RTN","PXRMDEDT",62,0)
 ;Dialog Group (Finding item dialog)
"RTN","PXRMDEDT",63,0)
 I TYP="G" S DR="[PXRM EDIT GROUP]"
"RTN","PXRMDEDT",64,0)
 ;Result Group
"RTN","PXRMDEDT",65,0)
 I TYP="S" S DR="[PXRM RESULT GROUP]"
"RTN","PXRMDEDT",66,0)
 ;Result Element
"RTN","PXRMDEDT",67,0)
 I TYP="T" S DR="[PXRM RESULT ELEMENT]"
"RTN","PXRMDEDT",68,0)
 ;
"RTN","PXRMDEDT",69,0)
 I "GEPF"[TYP D
"RTN","PXRMDEDT",70,0)
 .I '$D(^PXRMD(801.41,"AD",DA)) W !,"Not used by any other dialog",! Q
"RTN","PXRMDEDT",71,0)
 .I PXRMGTYP'="DLG" S DINUSE=1 Q
"RTN","PXRMDEDT",72,0)
 .I PXRMGTYP="DLG" D  Q
"RTN","PXRMDEDT",73,0)
 ..N SUB
"RTN","PXRMDEDT",74,0)
 ..S SUB=0
"RTN","PXRMDEDT",75,0)
 ..F  S SUB=$O(^PXRMD(801.41,"AD",SUB)) Q:'SUB  Q:DINUSE  D
"RTN","PXRMDEDT",76,0)
 ...I SUB'=PXRMDIEN S DINUSE=1
"RTN","PXRMDEDT",77,0)
 I DINUSE D
"RTN","PXRMDEDT",78,0)
 .W !,"CURRENT DIALOG ELEMENT/GROUP NAME: "_$P($G(^PXRMD(801.41,DA,0)),U)
"RTN","PXRMDEDT",79,0)
 .S DIE("NO^")="OUTOK"
"RTN","PXRMDEDT",80,0)
 .I TYP="S" Q
"RTN","PXRMDEDT",81,0)
 .I PXRMGTYP="DLGE" W !,"Used by:" D USE^PXRMDLST(DA,10,"")
"RTN","PXRMDEDT",82,0)
 .I PXRMGTYP'="DLGE" W !,"Used by:" D USE^PXRMDLST(DA,10,PXRMDIEN)
"RTN","PXRMDEDT",83,0)
 ;
"RTN","PXRMDEDT",84,0)
 ;Edit dialog then unlock
"RTN","PXRMDEDT",85,0)
 D ^DIE,UNLOCK(ODA)
"RTN","PXRMDEDT",86,0)
 ;Deleted ???
"RTN","PXRMDEDT",87,0)
 I '$D(DA) D:$D(PXRMDIEN) PURGE(PXRMDIEN) S VALMBCK="Q" Q
"RTN","PXRMDEDT",88,0)
 ;Redisplay changes (reminder dialog option only)
"RTN","PXRMDEDT",89,0)
 I PXRMGTYP="DLG",TYP="R" D
"RTN","PXRMDEDT",90,0)
 .;Get name of reminder dialog again
"RTN","PXRMDEDT",91,0)
 .S Y=$P($G(^PXRMD(801.41,DA,0)),U)
"RTN","PXRMDEDT",92,0)
 .;Format headings to include dialog name
"RTN","PXRMDEDT",93,0)
 .S PXRMHD="REMINDER DIALOG NAME: "_$P(Y,U)
"RTN","PXRMDEDT",94,0)
 .;Check if the set is disable and add to header if disabled
"RTN","PXRMDEDT",95,0)
 .I $P(^PXRMD(801.41,DA,0),U,3)]"" S PXRMHD=PXRMHD_" (DISABLED)"
"RTN","PXRMDEDT",96,0)
 .;Reset header in case name has changed
"RTN","PXRMDEDT",97,0)
 .S HEADER=PXRMHD,VALMHDR(1)=HEADER
"RTN","PXRMDEDT",98,0)
 Q
"RTN","PXRMDEDT",99,0)
 ;
"RTN","PXRMDEDT",100,0)
 ;Add SINGLE dialog element (protovol PXRM DIALOG SELECTION ITEM)
"RTN","PXRMDEDT",101,0)
 ;-------------------------
"RTN","PXRMDEDT",102,0)
ESEL(PXRMDIEN,SEL) ;
"RTN","PXRMDEDT",103,0)
 N DA,DIC,DLAYGO,DNEW,DTOUT,DUOUT,DTYP,Y
"RTN","PXRMDEDT",104,0)
 ;
"RTN","PXRMDEDT",105,0)
 S DIC="^PXRMD(801.41,"
"RTN","PXRMDEDT",106,0)
 S DLAYGO="801.41"
"RTN","PXRMDEDT",107,0)
 ;Set the starting place for additions.
"RTN","PXRMDEDT",108,0)
 D SETSTART^PXRMDCPY(DIC,0)
"RTN","PXRMDEDT",109,0)
 S DIC(0)="AEMQL"
"RTN","PXRMDEDT",110,0)
 S DIC("A")="Select new DIALOG ELEMENT: "
"RTN","PXRMDEDT",111,0)
 S DIC("S")="I ""EG""[$P(^PXRMD(801.41,Y,0),U,4)"
"RTN","PXRMDEDT",112,0)
 S DIC("DR")="4///E"
"RTN","PXRMDEDT",113,0)
 W !
"RTN","PXRMDEDT",114,0)
 D ^DIC
"RTN","PXRMDEDT",115,0)
 I $D(DUOUT) S DTOUT=1
"RTN","PXRMDEDT",116,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMDEDT",117,0)
 I Y=-1 K DIC S DTOUT=1 Q
"RTN","PXRMDEDT",118,0)
 S DA=$P(Y,U,1) Q:'DA
"RTN","PXRMDEDT",119,0)
 S DNEW=$P(Y,U,3)
"RTN","PXRMDEDT",120,0)
 ;Add to dialog
"RTN","PXRMDEDT",121,0)
 D EADD(SEL,DA,PXRMDIEN)
"RTN","PXRMDEDT",122,0)
 ;Determine dialog type
"RTN","PXRMDEDT",123,0)
 S DTYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",124,0)
 ;
"RTN","PXRMDEDT",125,0)
 ;Edit Dialog
"RTN","PXRMDEDT",126,0)
 I DNEW D EDIT(DTYP,DA)
"RTN","PXRMDEDT",127,0)
 Q
"RTN","PXRMDEDT",128,0)
 ;
"RTN","PXRMDEDT",129,0)
 ;Update dialog component multiple
"RTN","PXRMDEDT",130,0)
 ;--------------------------------
"RTN","PXRMDEDT",131,0)
EADD(SEL,NSUB,PXRMDIEN) ;
"RTN","PXRMDEDT",132,0)
 N DA,DATA,NEXT
"RTN","PXRMDEDT",133,0)
 S DATA=$G(^PXRMD(801.41,PXRMDIEN,10,0)),NEXT=$P(DATA,U,3)+1
"RTN","PXRMDEDT",134,0)
 S DA=NSUB,DA(1)=PXRMDIEN
"RTN","PXRMDEDT",135,0)
 S ^PXRMD(801.41,PXRMDIEN,10,NEXT,0)=SEL_U_DA_"^^^^^^^"
"RTN","PXRMDEDT",136,0)
 ;Update next slot
"RTN","PXRMDEDT",137,0)
 S $P(DATA,U,4)=$P(DATA,U,4)+1,$P(DATA,U,3)=NEXT
"RTN","PXRMDEDT",138,0)
 S ^PXRMD(801.41,PXRMDIEN,10,0)=DATA
"RTN","PXRMDEDT",139,0)
 ;Re-index
"RTN","PXRMDEDT",140,0)
 N DIK,DA S DIK="^PXRMD(801.41,",DA=PXRMDIEN
"RTN","PXRMDEDT",141,0)
 D IX^DIK
"RTN","PXRMDEDT",142,0)
 Q
"RTN","PXRMDEDT",143,0)
 ;
"RTN","PXRMDEDT",144,0)
 ;Edit individual element (protocol PXRM DIALOG SELECTION ITEM)
"RTN","PXRMDEDT",145,0)
 ;-----------------------
"RTN","PXRMDEDT",146,0)
IND(DIEN) ;
"RTN","PXRMDEDT",147,0)
 W IORESET
"RTN","PXRMDEDT",148,0)
 N DIC,DIDEL,DR,DTOUT,DUOUT,DINUSE,HED,Y
"RTN","PXRMDEDT",149,0)
 W !,"CURRENT DIALOG ELEMENT NAME: "_$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMDEDT",150,0)
 ;Ask what to do with it
"RTN","PXRMDEDT",151,0)
 N ANS D PROMPT(.ANS) Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDEDT",152,0)
 ;Delete line
"RTN","PXRMDEDT",153,0)
 I ANS="D" D DEL(DIEN,PXRMDIEN) Q
"RTN","PXRMDEDT",154,0)
 ;Copy and Replace option
"RTN","PXRMDEDT",155,0)
 I ANS="C" D SEL^PXRMDCPY(.DIEN,PXRMDIEN) Q:$D(DTOUT)!$D(DUOUT) 
"RTN","PXRMDEDT",156,0)
 ;Determine if a taxonomy dialog
"RTN","PXRMDEDT",157,0)
 N FIND
"RTN","PXRMDEDT",158,0)
 S FIND=$P($G(^PXRMD(801.41,IEN,1)),U,5),VALMBCK="R"
"RTN","PXRMDEDT",159,0)
 ;Edit taxomomy dialog
"RTN","PXRMDEDT",160,0)
 I $P(FIND,";",2)="PXD(811.2," D EDIT^PXRMGEDT("DTAX",$P(FIND,";"),0) Q
"RTN","PXRMDEDT",161,0)
 ;Determine dialog type
"RTN","PXRMDEDT",162,0)
 S DTYP=$P($G(^PXRMD(801.41,DIEN,0)),U,4) Q:DTYP=""
"RTN","PXRMDEDT",163,0)
 ;Option to change an element to a group
"RTN","PXRMDEDT",164,0)
 I DTYP="E" D NTYP(.DTYP) Q:$D(DUOUT)!$D(DTOUT)  D:DTYP="G"
"RTN","PXRMDEDT",165,0)
 .S $P(^PXRMD(801.41,DIEN,0),U,4)=DTYP
"RTN","PXRMDEDT",166,0)
 .W !,"Dialog element changed to a dialog group"
"RTN","PXRMDEDT",167,0)
 ;Edit Element
"RTN","PXRMDEDT",168,0)
 D EDIT(DTYP,DIEN)
"RTN","PXRMDEDT",169,0)
 Q
"RTN","PXRMDEDT",170,0)
 ;
"RTN","PXRMDEDT",171,0)
 ;Change Dialog Element Type
"RTN","PXRMDEDT",172,0)
 ;--------------------------
"RTN","PXRMDEDT",173,0)
NTYP(TYP) ;
"RTN","PXRMDEDT",174,0)
 N X,Y,DIR K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDEDT",175,0)
 S DIR(0)="SA"_U_"E:Element;"
"RTN","PXRMDEDT",176,0)
 S DIR(0)=DIR(0)_"G:Group;"
"RTN","PXRMDEDT",177,0)
 S DIR("A")="Dialog Element Type: "
"RTN","PXRMDEDT",178,0)
 S DIR("B")="E"
"RTN","PXRMDEDT",179,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMDEDT",180,0)
 S DIR("??")=U_"D HELP^PXRMDEDT(3)"
"RTN","PXRMDEDT",181,0)
 D ^DIR K DIR
"RTN","PXRMDEDT",182,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDEDT",183,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDEDT",184,0)
 S TYP=Y
"RTN","PXRMDEDT",185,0)
 Q
"RTN","PXRMDEDT",186,0)
 ;
"RTN","PXRMDEDT",187,0)
 ;Select Dialog Element Action
"RTN","PXRMDEDT",188,0)
 ;----------------------------
"RTN","PXRMDEDT",189,0)
PROMPT(ANS) ;
"RTN","PXRMDEDT",190,0)
 N X,Y,DIR K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDEDT",191,0)
 S DIR(0)="S"_U_"E:Edit;"
"RTN","PXRMDEDT",192,0)
 S DIR(0)=DIR(0)_"C:Copy and Replace current element;"
"RTN","PXRMDEDT",193,0)
 S DIR(0)=DIR(0)_"D:Delete element from this dialog;"
"RTN","PXRMDEDT",194,0)
 S DIR("A")="Select Dialog Element Action"
"RTN","PXRMDEDT",195,0)
 S DIR("B")="E"
"RTN","PXRMDEDT",196,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMDEDT",197,0)
 S DIR("??")=U_"D HELP^PXRMDEDT(1)"
"RTN","PXRMDEDT",198,0)
 D ^DIR K DIR
"RTN","PXRMDEDT",199,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDEDT",200,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDEDT",201,0)
 S ANS=Y
"RTN","PXRMDEDT",202,0)
 Q
"RTN","PXRMDEDT",203,0)
 ;
"RTN","PXRMDEDT",204,0)
 ;Clear pointers from the reminder file and process ID file
"RTN","PXRMDEDT",205,0)
 ;---------------------------------------------------------
"RTN","PXRMDEDT",206,0)
PURGE(DIEN) ;
"RTN","PXRMDEDT",207,0)
 ;Purge pointers to this dialog from reminder file
"RTN","PXRMDEDT",208,0)
 N RIEN
"RTN","PXRMDEDT",209,0)
 S RIEN=0
"RTN","PXRMDEDT",210,0)
 F  S RIEN=$O(^PXD(811.9,"AG",DIEN,RIEN)) Q:'RIEN  D
"RTN","PXRMDEDT",211,0)
 .K ^PXD(811.9,RIEN,51),^PXD(811.9,"AG",DIEN,RIEN)
"RTN","PXRMDEDT",212,0)
 ;
"RTN","PXRMDEDT",213,0)
 ;Purge forced values/additional promts from process id file
"RTN","PXRMDEDT",214,0)
 N DA,DIK,GIEN,GNODE
"RTN","PXRMDEDT",215,0)
 S GIEN=$O(^PXRMD(801.42,"AB",DIEN,"")) Q:'GIEN  S GNODE=""
"RTN","PXRMDEDT",216,0)
 F  S GNODE=$O(^PXRMD(801.42,"AB",DIEN,GIEN,GNODE)) Q:'GNODE  D
"RTN","PXRMDEDT",217,0)
 .S DA=GNODE,DA(1)=GIEN,DIK="^PXRMD(801.42,"_DA(1)_",2,"
"RTN","PXRMDEDT",218,0)
 .D ^DIK
"RTN","PXRMDEDT",219,0)
 Q
"RTN","PXRMDEDT",220,0)
 ;
"RTN","PXRMDEDT",221,0)
 ;General help text routine. Write out the text in the HTEXT array.
"RTN","PXRMDEDT",222,0)
HELP(CALL) ;
"RTN","PXRMDEDT",223,0)
 N HTEXT
"RTN","PXRMDEDT",224,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMDEDT",225,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMDEDT",226,0)
 ;
"RTN","PXRMDEDT",227,0)
 I CALL=1 D
"RTN","PXRMDEDT",228,0)
 .S HTEXT(1)="Select E to edit dialog element. If you wish to create"
"RTN","PXRMDEDT",229,0)
 .S HTEXT(2)="a new dialog element just for this reminder dialog select"
"RTN","PXRMDEDT",230,0)
 .S HTEXT(3)="C to copy and replace the current element. Select D to"
"RTN","PXRMDEDT",231,0)
 .S HTEXT(4)="delete the sequence number/element from the dialog."
"RTN","PXRMDEDT",232,0)
 I CALL=2 D
"RTN","PXRMDEDT",233,0)
 .S HTEXT(1)="Enter Y to copy the current dialog element to a new name"
"RTN","PXRMDEDT",234,0)
 .S HTEXT(2)="and then use this new element in the reminder dialog."
"RTN","PXRMDEDT",235,0)
 I CALL=3 D
"RTN","PXRMDEDT",236,0)
 .S HTEXT(1)="Enter G to change the current dialog element into a dialog"
"RTN","PXRMDEDT",237,0)
 .S HTEXT(2)="group so that additional elements can be added. Enter E to"
"RTN","PXRMDEDT",238,0)
 .S HTEXT(3)="leave the type of the dialog element unchanged."
"RTN","PXRMDEDT",239,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDEDT",240,0)
 S IC=""
"RTN","PXRMDEDT",241,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMDEDT",242,0)
 . S X=HTEXT(IC)
"RTN","PXRMDEDT",243,0)
 . D ^DIWP
"RTN","PXRMDEDT",244,0)
 W !
"RTN","PXRMDEDT",245,0)
 S IC=0
"RTN","PXRMDEDT",246,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMDEDT",247,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMDEDT",248,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDEDT",249,0)
 W !
"RTN","PXRMDEDT",250,0)
 Q
"RTN","PXRMDEDT",251,0)
 ;
"RTN","PXRMDEDT",252,0)
LOCK(DA) ;Lock the record
"RTN","PXRMDEDT",253,0)
 L +^PXRMD(801.41,DA):0 I  Q 1
"RTN","PXRMDEDT",254,0)
 E  W !!,?5,"Another user is editing this file, try later" H 2 Q 0
"RTN","PXRMDEDT",255,0)
 ;
"RTN","PXRMDEDT",256,0)
 ;
"RTN","PXRMDEDT",257,0)
UNLOCK(DA) ;Unlock the record
"RTN","PXRMDEDT",258,0)
 L -^PXRMD(801.41,DA)
"RTN","PXRMDEDT",259,0)
 Q
"RTN","PXRMDEV")
0^21^B6772416
"RTN","PXRMDEV",1,0)
PXRMDEV ; SLC/PKR - This is a driver for testing Clinical Reminders. ;05/18/2000
"RTN","PXRMDEV",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDEV",3,0)
 ;
"RTN","PXRMDEV",4,0)
 ;=======================================================================
"RTN","PXRMDEV",5,0)
DEB ;Prompt for DFN,PXRMITEM,PXRMHM
"RTN","PXRMDEV",6,0)
 N AGE,DFN,DIROUT,DTOUT,DUOUT,PXRMITEM,PXRHM,REF,SEX,X,Y
"RTN","PXRMDEV",7,0)
 S DIR(0)="LA"_U_"0"
"RTN","PXRMDEV",8,0)
 S DIR("A")="Enter DFN,PXRMITEM,PXRHM: "
"RTN","PXRMDEV",9,0)
 D ^DIR
"RTN","PXRMDEV",10,0)
 I $D(DIROUT)!$D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",11,0)
 S DFN=$P(X,",",1),PXRMITEM=$P(X,",",2),PXRHM=$P(X,",",3)
"RTN","PXRMDEV",12,0)
 D DOREM
"RTN","PXRMDEV",13,0)
 K DIRUT,DTOUT,DUOUT
"RTN","PXRMDEV",14,0)
 Q
"RTN","PXRMDEV",15,0)
 ;
"RTN","PXRMDEV",16,0)
 ;=======================================================================
"RTN","PXRMDEV",17,0)
DEV ;Prompt for patient and reminder by name.
"RTN","PXRMDEV",18,0)
 N AGE,DFN,DIC,DIR,DTOUT,DUOUT,PXRMITEM,PXRHM,REF,SEX,X,Y
"RTN","PXRMDEV",19,0)
 S DIC=2,DIC("A")="Select Patient: "
"RTN","PXRMDEV",20,0)
 S DIC(0)="AEQMZ"
"RTN","PXRMDEV",21,0)
 D ^DIC
"RTN","PXRMDEV",22,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",23,0)
 S DFN=+$P(Y,U,1)
"RTN","PXRMDEV",24,0)
 S DIC=811.9,DIC("A")="Select Reminder: "
"RTN","PXRMDEV",25,0)
 D ^DIC
"RTN","PXRMDEV",26,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",27,0)
 S PXRMITEM=+$P(Y,U,1)
"RTN","PXRMDEV",28,0)
 ;
"RTN","PXRMDEV",29,0)
 S PXRHM=5
"RTN","PXRMDEV",30,0)
 ;
"RTN","PXRMDEV",31,0)
 D DOREM
"RTN","PXRMDEV",32,0)
 Q
"RTN","PXRMDEV",33,0)
 ;
"RTN","PXRMDEV",34,0)
 ;=======================================================================
"RTN","PXRMDEV",35,0)
DEVD ;Prompt for patient and reminder by name and evaluation date.
"RTN","PXRMDEV",36,0)
 N AGE,DFN,DIC,PXRMDATE,PXRMITEM,PXRHM,REF,SEX,X,Y
"RTN","PXRMDEV",37,0)
 S DIC=2,DIC("A")="Select Patient: "
"RTN","PXRMDEV",38,0)
 S DIC(0)="AEQMZ"
"RTN","PXRMDEV",39,0)
 D ^DIC
"RTN","PXRMDEV",40,0)
 S DFN=+$P(Y,U,1)
"RTN","PXRMDEV",41,0)
 S DIC=811.9,DIC("A")="Select Reminder: "
"RTN","PXRMDEV",42,0)
 D ^DIC
"RTN","PXRMDEV",43,0)
 K DTOUT,DUOUT
"RTN","PXRMDEV",44,0)
 S PXRMITEM=+$P(Y,U,1)
"RTN","PXRMDEV",45,0)
 ;
"RTN","PXRMDEV",46,0)
 S PXRHM=5
"RTN","PXRMDEV",47,0)
 ;
"RTN","PXRMDEV",48,0)
 N X,Y
"RTN","PXRMDEV",49,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDEV",50,0)
 S DIR(0)="DA^"_DT_"::EFTX"
"RTN","PXRMDEV",51,0)
 S DIR("A")="Enter date for reminder evalution: "
"RTN","PXRMDEV",52,0)
 S DIR("B")=$$FMTE^XLFDT($$DT^XLFDT,"D")
"RTN","PXRMDEV",53,0)
 S DIR("?")="This must be a future date."
"RTN","PXRMDEV",54,0)
 W !
"RTN","PXRMDEV",55,0)
 D ^DIR K DIR
"RTN","PXRMDEV",56,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDEV",57,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDEV",58,0)
 S PXRMDATE=Y
"RTN","PXRMDEV",59,0)
 ;
"RTN","PXRMDEV",60,0)
 D DOREM
"RTN","PXRMDEV",61,0)
 Q
"RTN","PXRMDEV",62,0)
 ;
"RTN","PXRMDEV",63,0)
 ;=======================================================================
"RTN","PXRMDEV",64,0)
DOREM ;Do the reminder
"RTN","PXRMDEV",65,0)
 ;PXRMDEV is defined so that PXRM will not kill the working array.
"RTN","PXRMDEV",66,0)
 ;This lets us examine it below.
"RTN","PXRMDEV",67,0)
 N FIEV,PXRMDEV,PXRMID
"RTN","PXRMDEV",68,0)
 S PXRMDEV=1
"RTN","PXRMDEV",69,0)
 I +$G(PXRMDATE)>0 D DATE^PXRM(DFN,PXRMITEM,PXRHM,1,PXRMDATE)
"RTN","PXRMDEV",70,0)
 I +$G(PXRMDATE)=0 D MAIN^PXRM(DFN,PXRMITEM,PXRHM,1)
"RTN","PXRMDEV",71,0)
 ;
"RTN","PXRMDEV",72,0)
 W !!,"The elements of the FIEV array are:"
"RTN","PXRMDEV",73,0)
 S REF="FIEV"
"RTN","PXRMDEV",74,0)
 D AWRITE^PXRMUTIL(REF)
"RTN","PXRMDEV",75,0)
 ;
"RTN","PXRMDEV",76,0)
 W !!,"The elements of the ^TMP(PXRMID,$J) array are:"
"RTN","PXRMDEV",77,0)
 S REF="^TMP(PXRMID,$J)"
"RTN","PXRMDEV",78,0)
 D AWRITE^PXRMUTIL(REF)
"RTN","PXRMDEV",79,0)
 ;
"RTN","PXRMDEV",80,0)
 W !!,"The elements of the ^TMP(""PXRHM"",$J) array are:"
"RTN","PXRMDEV",81,0)
 S REF="^TMP(""PXRHM"",$J)"
"RTN","PXRMDEV",82,0)
 D AWRITE^PXRMUTIL(REF)
"RTN","PXRMDEV",83,0)
 ;
"RTN","PXRMDEV",84,0)
 K PXRMTEXT
"RTN","PXRMDEV",85,0)
 K ^TMP("PXRM",$J)
"RTN","PXRMDEV",86,0)
 K ^TMP("PXRHM",$J)
"RTN","PXRMDEV",87,0)
 K ^TMP(PXRMID,$J)
"RTN","PXRMDEV",88,0)
 Q
"RTN","PXRMDGEN")
0^172^B10287853
"RTN","PXRMDGEN",1,0)
PXRMDGEN ; SLC/PKR - Handle VA GENERIC drug findings. ;05/18/2000
"RTN","PXRMDGEN",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDGEN",3,0)
 ;
"RTN","PXRMDGEN",4,0)
 ;=======================================================================
"RTN","PXRMDGEN",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate VA GENERIC (file #50.6) findings.
"RTN","PXRMDGEN",6,0)
 N FIND0,FINDING,VAGIEN
"RTN","PXRMDGEN",7,0)
 S VAGIEN=""
"RTN","PXRMDGEN",8,0)
 F  S VAGIEN=$O(^PXD(811.9,PXRMITEM,20,"E","PSNDF(50.6,",VAGIEN)) Q:+VAGIEN=0  D
"RTN","PXRMDGEN",9,0)
 . S FINDING=""
"RTN","PXRMDGEN",10,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","PSNDF(50.6,",VAGIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMDGEN",11,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMDGEN",12,0)
 .. D FIEVAL(DFN,VAGIEN,FIND0,"",FINDING,.FIEVAL)
"RTN","PXRMDGEN",13,0)
 Q
"RTN","PXRMDGEN",14,0)
 ;
"RTN","PXRMDGEN",15,0)
 ;=======================================================================
"RTN","PXRMDGEN",16,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate VA GENERIC (file #50.6) terms.
"RTN","PXRMDGEN",17,0)
 N FIND0,TFIND0,TFINDING,VAGIEN
"RTN","PXRMDGEN",18,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMDGEN",19,0)
 S VAGIEN=""
"RTN","PXRMDGEN",20,0)
 F  S VAGIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","PSNDF(50.6,",VAGIEN)) Q:+VAGIEN=0  D
"RTN","PXRMDGEN",21,0)
 . S TFINDING=""
"RTN","PXRMDGEN",22,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","PSNDF(50.6,",VAGIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMDGEN",23,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMDGEN",24,0)
 .. D FIEVAL(DFN,VAGIEN,FIND0,TFIND0,TFINDING,.TFIEVAL)
"RTN","PXRMDGEN",25,0)
 Q
"RTN","PXRMDGEN",26,0)
 ;
"RTN","PXRMDGEN",27,0)
 ;=======================================================================
"RTN","PXRMDGEN",28,0)
FIEVAL(DFN,VAGIEN,FIND0,TFIND0,FINDING,FIEVAL) ;
"RTN","PXRMDGEN",29,0)
 N DRUG,DRUGIEN,DSUP,LDATE,RDATE,STATUS,VAGEN,VALID
"RTN","PXRMDGEN",30,0)
 S VAGEN=$$VAGN^PSNAPIS(VAGIEN)
"RTN","PXRMDGEN",31,0)
 ;Use the "AND" cross-reference on file 50 to find all drugs in this
"RTN","PXRMDGEN",32,0)
 ;generic group.
"RTN","PXRMDGEN",33,0)
 S DATE=0
"RTN","PXRMDGEN",34,0)
 S DRUGIEN=0
"RTN","PXRMDGEN",35,0)
 F  S DRUGIEN=$O(^PSDRUG("AND",VAGIEN,DRUGIEN)) Q:+DRUGIEN=0  D
"RTN","PXRMDGEN",36,0)
 . S DRUG=$$GET1^DIQ(50,DRUGIEN,.01)
"RTN","PXRMDGEN",37,0)
 . D LDATE^PXRMDRUG(DFN,DRUG,.DSUP,.LDATE,.RDATE,.STATUS)
"RTN","PXRMDGEN",38,0)
 . I LDATE>DATE D
"RTN","PXRMDGEN",39,0)
 .. S DATE=LDATE
"RTN","PXRMDGEN",40,0)
 .. S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMDGEN",41,0)
 .. S FIEVAL(FINDING,"DRUG")=DRUG
"RTN","PXRMDGEN",42,0)
 .. S FIEVAL(FINDING,"DSUP")=DSUP
"RTN","PXRMDGEN",43,0)
 .. S FIEVAL(FINDING,"RDATE")=RDATE
"RTN","PXRMDGEN",44,0)
 .. S FIEVAL(FINDING,"STATUS")=STATUS
"RTN","PXRMDGEN",45,0)
 ;If the last date is 0 then there is no release date and the finding
"RTN","PXRMDGEN",46,0)
 ;is false.
"RTN","PXRMDGEN",47,0)
 I +DATE=0 D  Q
"RTN","PXRMDGEN",48,0)
 . K FIEVAL(FINDING)
"RTN","PXRMDGEN",49,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMDGEN",50,0)
 ;Save the rest of the finding information.
"RTN","PXRMDGEN",51,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMDGEN",52,0)
 S FIEVAL(FINDING,"GENERIC")=VAGEN
"RTN","PXRMDGEN",53,0)
 S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMDGEN",54,0)
 S FIEVAL(FINDING,"FINDING")=VAGIEN_";PSNDF(50.6,"
"RTN","PXRMDGEN",55,0)
 ;Determine if the finding has expired.
"RTN","PXRMDGEN",56,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMDGEN",57,0)
 I 'VALID D
"RTN","PXRMDGEN",58,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMDGEN",59,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMDGEN",60,0)
 Q
"RTN","PXRMDGEN",61,0)
 ;
"RTN","PXRMDGEN",62,0)
 ;=======================================================================
"RTN","PXRMDGEN",63,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMDGEN",64,0)
 ;maintenance output.
"RTN","PXRMDGEN",65,0)
 N DATE,DRUG,TEMP,VAGEN
"RTN","PXRMDGEN",66,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMDGEN",67,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMDGEN",68,0)
 S TEMP=TEMP_" VA GENERIC Drug: "
"RTN","PXRMDGEN",69,0)
 S VAGEN=FIEVAL(FINDING,"GENERIC")
"RTN","PXRMDGEN",70,0)
 S TEMP=TEMP_VAGEN
"RTN","PXRMDGEN",71,0)
 S DRUG=FIEVAL(FINDING,"DRUG")
"RTN","PXRMDGEN",72,0)
 S TEMP=TEMP_" (Drug: "_DRUG_")"
"RTN","PXRMDGEN",73,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMDGEN",74,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMDGEN",75,0)
 S NLINES=NLINES+1
"RTN","PXRMDGEN",76,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDGEN",77,0)
 S TEMP="Status: "_FIEVAL(FINDING,"STATUS")
"RTN","PXRMDGEN",78,0)
 I $D(FIEVAL(FINDING,"RDATE")) S TEMP=TEMP_" Last fill date:"_$$EDATE^PXRMDATE(FIEVAL(FINDING,"RDATE"))
"RTN","PXRMDGEN",79,0)
 I $D(FIEVAL(FINDING,"DSUP")) S TEMP=TEMP_" Days supply:"_FIEVAL(FINDING,"DSUP")
"RTN","PXRMDGEN",80,0)
 S NLINES=NLINES+1
"RTN","PXRMDGEN",81,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDGEN",82,0)
 I $D(PXRMDEV) D
"RTN","PXRMDGEN",83,0)
 . N UID
"RTN","PXRMDGEN",84,0)
 . S UID="VA GENERIC DRUG "_VAGEN
"RTN","PXRMDGEN",85,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMDGEN",86,0)
 Q
"RTN","PXRMDGEN",87,0)
 ;
"RTN","PXRMDGOP")
1^23
"RTN","PXRMDGPT")
0^24^B44361803
"RTN","PXRMDGPT",1,0)
PXRMDGPT ; SLC/PKR - Code to handle DGPT (Patient Treatment File) data. ;05/18/2000
"RTN","PXRMDGPT",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDGPT",3,0)
 ;
"RTN","PXRMDGPT",4,0)
 ;=======================================================================
"RTN","PXRMDGPT",5,0)
ADDICD9(IEN,D070,DATE,INVDATE) ;Get ICD9 codes from D070=DGPT(D0,70).
"RTN","PXRMDGPT",6,0)
 N DATA,ICD9P
"RTN","PXRMDGPT",7,0)
 S DATA=IEN_U_U_DATE
"RTN","PXRMDGPT",8,0)
 S ICD9P=$P(D070,U,10) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P_U_"DXLS"
"RTN","PXRMDGPT",9,0)
 S ICD9P=$P(D070,U,11) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P_U_"P"
"RTN","PXRMDGPT",10,0)
 S ICD9P=$P(D070,U,16) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P
"RTN","PXRMDGPT",11,0)
 S ICD9P=$P(D070,U,17) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P
"RTN","PXRMDGPT",12,0)
 S ICD9P=$P(D070,U,18) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P
"RTN","PXRMDGPT",13,0)
 S ICD9P=$P(D070,U,19) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P
"RTN","PXRMDGPT",14,0)
 S ICD9P=$P(D070,U,20) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P
"RTN","PXRMDGPT",15,0)
 S ICD9P=$P(D070,U,21) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P
"RTN","PXRMDGPT",16,0)
 S ICD9P=$P(D070,U,22) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P
"RTN","PXRMDGPT",17,0)
 S ICD9P=$P(D070,U,23) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P
"RTN","PXRMDGPT",18,0)
 S ICD9P=$P(D070,U,24) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P
"RTN","PXRMDGPT",19,0)
 Q
"RTN","PXRMDGPT",20,0)
 ;
"RTN","PXRMDGPT",21,0)
 ;=======================================================================
"RTN","PXRMDGPT",22,0)
BLDPC0(DFN) ;Check and if necessary build the PTF ICD0 patient cache.
"RTN","PXRMDGPT",23,0)
 N DATE,ICD0P,IEN,INVDATE,NPATIEN,PIEN,SIEN
"RTN","PXRMDGPT",24,0)
 I '$D(^XTMP(PXRMDFN,"DGPTICD0","NPATIEN")) D
"RTN","PXRMDGPT",25,0)
 . K ^TMP($J,"DGPTICD0"),^XTMP(PXRMDFN,"DGPTICD0")
"RTN","PXRMDGPT",26,0)
 .;In DGPTICD0 we store the ICD0 ien in the first piece, the DGPT ien
"RTN","PXRMDGPT",27,0)
 .;it came from in the second piece, and the date in the third piece.
"RTN","PXRMDGPT",28,0)
 . S IEN=""
"RTN","PXRMDGPT",29,0)
 . F  S IEN=$O(^DGPT("B",DFN,IEN)) Q:IEN=""  D
"RTN","PXRMDGPT",30,0)
 .. S ICD0P=""
"RTN","PXRMDGPT",31,0)
 .. F  S ICD0P=$O(^DGPT(IEN,"S","AO",ICD0P)) Q:ICD0P=""  D
"RTN","PXRMDGPT",32,0)
 ... S SIEN=$O(^DGPT(IEN,"S","AO",ICD0P,""))
"RTN","PXRMDGPT",33,0)
 ... S DATE=$P($G(^DGPT(IEN,"S",SIEN,0)),U,1)
"RTN","PXRMDGPT",34,0)
 ... S INVDATE=$$INVFFMDL^PXRMDATE(DATE,1)
"RTN","PXRMDGPT",35,0)
 ... S ^TMP($J,"DGPTICD0",ICD0P,INVDATE)=IEN_U_U_DATE_U_ICD0P
"RTN","PXRMDGPT",36,0)
 ..;
"RTN","PXRMDGPT",37,0)
 ..;This cross-ref gets the second set of ICD0 operation/procedure codes.
"RTN","PXRMDGPT",38,0)
 .. S ICD0P=""
"RTN","PXRMDGPT",39,0)
 .. F  S ICD0P=$O(^DGPT(IEN,"AP",ICD0P)) Q:ICD0P=""  D
"RTN","PXRMDGPT",40,0)
 ... S DATE=$P(^DGPT(IEN,0),U,2)
"RTN","PXRMDGPT",41,0)
 ... S INVDATE=$$INVFFMDL^PXRMDATE(DATE,1)
"RTN","PXRMDGPT",42,0)
 ... S ^TMP($J,"DGPTICD0",ICD0P,INVDATE)=IEN_U_U_DATE_U_ICD0P
"RTN","PXRMDGPT",43,0)
 ..;
"RTN","PXRMDGPT",44,0)
 ..;This cross-ref gets the third set of ICD0 operation/procedure codes.
"RTN","PXRMDGPT",45,0)
 .. S ICD0P=""
"RTN","PXRMDGPT",46,0)
 .. F  S ICD0P=$O(^DGPT(IEN,"P","AP6",ICD0P)) Q:ICD0P=""  D
"RTN","PXRMDGPT",47,0)
 ... S PIEN=$O(^DGPT(IEN,"P","AP6",ICD0P,""))
"RTN","PXRMDGPT",48,0)
 ... S DATE=$P($G(^DGPT(IEN,"P",PIEN,0)),U,1)
"RTN","PXRMDGPT",49,0)
 ... S INVDATE=$$INVFFMDL^PXRMDATE(DATE,1)
"RTN","PXRMDGPT",50,0)
 ... S ^TMP($J,"DGPTICD0",ICD0P,INVDATE)=IEN_U_U_DATE_U_ICD0P
"RTN","PXRMDGPT",51,0)
 .;
"RTN","PXRMDGPT",52,0)
 .;Build the list of most recent entries.
"RTN","PXRMDGPT",53,0)
 . S NPATIEN=0
"RTN","PXRMDGPT",54,0)
 . S ICD0P=""
"RTN","PXRMDGPT",55,0)
 . F  S ICD0P=$O(^TMP($J,"DGPTICD0",ICD0P)) Q:ICD0P=""  D
"RTN","PXRMDGPT",56,0)
 .. S NPATIEN=NPATIEN+1
"RTN","PXRMDGPT",57,0)
 .. S INVDATE=$O(^TMP($J,"DGPTICD0",ICD0P,""))
"RTN","PXRMDGPT",58,0)
 .. S ^XTMP(PXRMDFN,"DGPTICD0",ICD0P,INVDATE)=^TMP($J,"DGPTICD0",ICD0P,INVDATE)
"RTN","PXRMDGPT",59,0)
 . S ^XTMP(PXRMDFN,"DGPTICD0","NPATIEN")=NPATIEN
"RTN","PXRMDGPT",60,0)
 . K ^TMP($J,"DGPTICD0")
"RTN","PXRMDGPT",61,0)
 E  S NPATIEN=^XTMP(PXRMDFN,"DGPTICD0","NPATIEN")
"RTN","PXRMDGPT",62,0)
 Q NPATIEN
"RTN","PXRMDGPT",63,0)
 ;
"RTN","PXRMDGPT",64,0)
 ;=======================================================================
"RTN","PXRMDGPT",65,0)
BLDPC9(DFN) ;Check and if necessary build the PTF ICD9 patient cache.
"RTN","PXRMDGPT",66,0)
 N D070,DATE,ICD9P,IEN,INVDATE,NPATIEN
"RTN","PXRMDGPT",67,0)
 I '$D(^XTMP(PXRMDFN,"DGPTICD9","NPATIEN")) D
"RTN","PXRMDGPT",68,0)
 . K ^TMP($J,"DGPTICD9"),^XTMP(PXRMDFN,"DGPTICD9")
"RTN","PXRMDGPT",69,0)
 . S IEN=""
"RTN","PXRMDGPT",70,0)
 . F  S IEN=$O(^DGPT("B",DFN,IEN)) Q:IEN=""  D
"RTN","PXRMDGPT",71,0)
 .. S D070=$G(^DGPT(IEN,70))
"RTN","PXRMDGPT",72,0)
 .. S DATE=$P($G(^DGPT(IEN,70)),U,1)
"RTN","PXRMDGPT",73,0)
 ..;If there is no discharge date then use the admission date.
"RTN","PXRMDGPT",74,0)
 .. I $L(DATE)=0 S DATE=$P($G(^DGPT(IEN,0)),U,2)
"RTN","PXRMDGPT",75,0)
 .. S INVDATE=$$INVFFMDL^PXRMDATE(DATE,1)
"RTN","PXRMDGPT",76,0)
 .. D ADDICD9(IEN,D070,DATE,INVDATE)
"RTN","PXRMDGPT",77,0)
 .;
"RTN","PXRMDGPT",78,0)
 .;Build the list of most recent entries.
"RTN","PXRMDGPT",79,0)
 . S NPATIEN=0
"RTN","PXRMDGPT",80,0)
 . S ICD9P=""
"RTN","PXRMDGPT",81,0)
 . F  S ICD9P=$O(^TMP($J,"DGPTICD9",ICD9P)) Q:ICD9P=""  D
"RTN","PXRMDGPT",82,0)
 .. S NPATIEN=NPATIEN+1
"RTN","PXRMDGPT",83,0)
 .. S INVDATE=$O(^TMP($J,"DGPTICD9",ICD9P,""))
"RTN","PXRMDGPT",84,0)
 .. S ^XTMP(PXRMDFN,"DGPTICD9",ICD9P,INVDATE)=^TMP($J,"DGPTICD9",ICD9P,INVDATE)
"RTN","PXRMDGPT",85,0)
 . S ^XTMP(PXRMDFN,"DGPTICD9","NPATIEN")=NPATIEN
"RTN","PXRMDGPT",86,0)
 . K ^TMP($J,"DGPTICD9")
"RTN","PXRMDGPT",87,0)
 E  S NPATIEN=^XTMP(PXRMDFN,"DGPTICD9","NPATIEN")
"RTN","PXRMDGPT",88,0)
 Q NPATIEN
"RTN","PXRMDGPT",89,0)
 ;
"RTN","PXRMDGPT",90,0)
 ;=======================================================================
"RTN","PXRMDGPT",91,0)
EVALICD0(DFN,TAXIEN,FLIST) ;Match patient PTF ICD0 entries.
"RTN","PXRMDGPT",92,0)
 N FIRST,ICD0P,INVDATE,LAST,NPATIEN,TLIST
"RTN","PXRMDGPT",93,0)
 ;
"RTN","PXRMDGPT",94,0)
 S NPATIEN=$$BLDPC0(DFN)
"RTN","PXRMDGPT",95,0)
 I NPATIEN=0 Q
"RTN","PXRMDGPT",96,0)
 ;Get the first and last entry in the patient cache, use this for the
"RTN","PXRMDGPT",97,0)
 ;match limits.
"RTN","PXRMDGPT",98,0)
 S FIRST=$O(^XTMP(PXRMDFN,"DGPTICD0",""))
"RTN","PXRMDGPT",99,0)
 S LAST=$O(^XTMP(PXRMDFN,"DGPTICD0","NPATIEN"),-1)
"RTN","PXRMDGPT",100,0)
 S ICD0P=FIRST-1
"RTN","PXRMDGPT",101,0)
 F  S ICD0P=$O(^PXD(811.3,TAXIEN,80.1,"ICD0P",ICD0P)) Q:(ICD0P>LAST)!(ICD0P="")  D
"RTN","PXRMDGPT",102,0)
 . S INVDATE=+$O(^XTMP(PXRMDFN,"DGPTICD0",ICD0P,""))
"RTN","PXRMDGPT",103,0)
 . I INVDATE>0 D
"RTN","PXRMDGPT",104,0)
 .. S TLIST(INVDATE)=$G(^XTMP(PXRMDFN,"DGPTICD0",ICD0P,INVDATE))
"RTN","PXRMDGPT",105,0)
 ;Return the most recent entry only.
"RTN","PXRMDGPT",106,0)
 S INVDATE=$O(TLIST(""))
"RTN","PXRMDGPT",107,0)
 ;If there are no entries we are done.
"RTN","PXRMDGPT",108,0)
 I INVDATE="" Q
"RTN","PXRMDGPT",109,0)
 S FLIST(INVDATE,"DGPTICD0")=TLIST(INVDATE)
"RTN","PXRMDGPT",110,0)
 Q
"RTN","PXRMDGPT",111,0)
 ;
"RTN","PXRMDGPT",112,0)
 ;=======================================================================
"RTN","PXRMDGPT",113,0)
EVALICD9(DFN,TAXIEN,FLIST) ;Match patient PTF ICD9 entries.
"RTN","PXRMDGPT",114,0)
 N ANY,DXLS,FIRST,ICD9P,INVDATE,LAST,NPATIEN,PDS,PDST,PRIN,TEMP,TLIST
"RTN","PXRMDGPT",115,0)
 ;
"RTN","PXRMDGPT",116,0)
 S NPATIEN=$$BLDPC9(DFN)
"RTN","PXRMDGPT",117,0)
 I NPATIEN=0 Q
"RTN","PXRMDGPT",118,0)
 ;See if we are looking for DXLS or principal only.
"RTN","PXRMDGPT",119,0)
 S PDS=$P(^PXD(811.2,TAXIEN,0),U,4)
"RTN","PXRMDGPT",120,0)
 I PDS["DXLS" S DXLS=1
"RTN","PXRMDGPT",121,0)
 E  S DXLS=0
"RTN","PXRMDGPT",122,0)
 I PDS["PR" S PRIN=1
"RTN","PXRMDGPT",123,0)
 E  S PRIN=0
"RTN","PXRMDGPT",124,0)
 I ('DXLS)&('PRIN) S ANY=1
"RTN","PXRMDGPT",125,0)
 E  S ANY=0
"RTN","PXRMDGPT",126,0)
 ;Get the first and last entry in the patient cache, use this for the
"RTN","PXRMDGPT",127,0)
 ;match limits.
"RTN","PXRMDGPT",128,0)
 S FIRST=$O(^XTMP(PXRMDFN,"DGPTICD9",""))
"RTN","PXRMDGPT",129,0)
 S LAST=$O(^XTMP(PXRMDFN,"DGPTICD9","NPATIEN"),-1)
"RTN","PXRMDGPT",130,0)
 S ICD9P=FIRST-1
"RTN","PXRMDGPT",131,0)
 F  S ICD9P=$O(^PXD(811.3,TAXIEN,80,"ICD9P",ICD9P)) Q:(ICD9P>LAST)!(ICD9P="")  D
"RTN","PXRMDGPT",132,0)
 . S INVDATE=+$O(^XTMP(PXRMDFN,"DGPTICD9",ICD9P,""))
"RTN","PXRMDGPT",133,0)
 . I INVDATE>0 D
"RTN","PXRMDGPT",134,0)
 .. S TEMP=^XTMP(PXRMDFN,"DGPTICD9",ICD9P,INVDATE)
"RTN","PXRMDGPT",135,0)
 .. I ANY S TLIST(INVDATE)=TEMP
"RTN","PXRMDGPT",136,0)
 .. E  D
"RTN","PXRMDGPT",137,0)
 ... S PDST=$P(TEMP,U,5)
"RTN","PXRMDGPT",138,0)
 ... I (DXLS),(PDST="DXLS") S TLIST(INVDATE)=TEMP
"RTN","PXRMDGPT",139,0)
 ... I (PRIN),(PDST="P") S TLIST(INVDATE)=TEMP
"RTN","PXRMDGPT",140,0)
 ;Return the most recent entry only.
"RTN","PXRMDGPT",141,0)
 S INVDATE=$O(TLIST(""))
"RTN","PXRMDGPT",142,0)
 ;If there are no entries we are done.
"RTN","PXRMDGPT",143,0)
 I INVDATE="" Q
"RTN","PXRMDGPT",144,0)
 S FLIST(INVDATE,"DGPTICD9")=TLIST(INVDATE)
"RTN","PXRMDGPT",145,0)
 Q
"RTN","PXRMDGPT",146,0)
 ;
"RTN","PXRMDGPT",147,0)
 ;======================================================================
"RTN","PXRMDGPT",148,0)
OUTICD0(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMDGPT",149,0)
 ;maintenance output.
"RTN","PXRMDGPT",150,0)
 N D0,FIEN,ICD0ZN,PROC,TEMP,VDATE
"RTN","PXRMDGPT",151,0)
 S FIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMDGPT",152,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMDGPT",153,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMDGPT",154,0)
 S TEMP=TEMP_" Hospitalization Procedure: "
"RTN","PXRMDGPT",155,0)
 S D0=$P(FIEVAL(FINDING,"CODEP"),";",1)
"RTN","PXRMDGPT",156,0)
 S ICD0ZN=$G(^ICD0(D0,0))
"RTN","PXRMDGPT",157,0)
 S CODE=$P(ICD0ZN,U,1)
"RTN","PXRMDGPT",158,0)
 S PROC=$P(ICD0ZN,U,4)
"RTN","PXRMDGPT",159,0)
 S TEMP=TEMP_CODE_" "_PROC
"RTN","PXRMDGPT",160,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMDGPT",161,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMDGPT",162,0)
 S NLINES=NLINES+1
"RTN","PXRMDGPT",163,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDGPT",164,0)
 I $D(PXRMDEV) D
"RTN","PXRMDGPT",165,0)
 . N UID
"RTN","PXRMDGPT",166,0)
 . S UID="ICD0DGPT "_CODE
"RTN","PXRMDGPT",167,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"CODE")=CODE
"RTN","PXRMDGPT",168,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"DATE")=VDATE
"RTN","PXRMDGPT",169,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"PROC")=PROC
"RTN","PXRMDGPT",170,0)
 Q
"RTN","PXRMDGPT",171,0)
 ;
"RTN","PXRMDGPT",172,0)
 ;======================================================================
"RTN","PXRMDGPT",173,0)
OUTICD9(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMDGPT",174,0)
 ;maintenance output.
"RTN","PXRMDGPT",175,0)
 N DIAG,FIEN,ICD9P,ICD9ZN,TEMP,VDATE
"RTN","PXRMDGPT",176,0)
 S FIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMDGPT",177,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMDGPT",178,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMDGPT",179,0)
 S TEMP=TEMP_" Hospitalization Diagnosis: "
"RTN","PXRMDGPT",180,0)
 S ICD9P=FIEVAL(FINDING,"CODEP")
"RTN","PXRMDGPT",181,0)
 S ICD9ZN=$$GET0^PXRMICD9(ICD9P)
"RTN","PXRMDGPT",182,0)
 S CODE=$P(ICD9ZN,U,1)
"RTN","PXRMDGPT",183,0)
 S DIAG=$P(ICD9ZN,U,3)
"RTN","PXRMDGPT",184,0)
 S TEMP=TEMP_CODE_" "_DIAG
"RTN","PXRMDGPT",185,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMDGPT",186,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMDGPT",187,0)
 S NLINES=NLINES+1
"RTN","PXRMDGPT",188,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDGPT",189,0)
 I $D(PXRMDEV) D
"RTN","PXRMDGPT",190,0)
 . N UID
"RTN","PXRMDGPT",191,0)
 . S UID="ICD9DGPT "_CODE
"RTN","PXRMDGPT",192,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"CODE")=CODE
"RTN","PXRMDGPT",193,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"DATE")=VDATE
"RTN","PXRMDGPT",194,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"DIAG")=DIAG
"RTN","PXRMDGPT",195,0)
 Q
"RTN","PXRMDGPT",196,0)
 ;
"RTN","PXRMDHLP")
0^25^B100219467
"RTN","PXRMDHLP",1,0)
PXRMDHLP ; SLC/PJH - Reminder dialog main help. ;04/19/2000
"RTN","PXRMDHLP",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDHLP",3,0)
 ;
"RTN","PXRMDHLP",4,0)
 ; Entry action for list PXRM DIALOG MAIN HELP 
"RTN","PXRMDHLP",5,0)
 ;
"RTN","PXRMDHLP",6,0)
LOAD N DONE,IND,TEXT
"RTN","PXRMDHLP",7,0)
 S DONE=0
"RTN","PXRMDHLP",8,0)
 K ^TMP("PXRMDHLP",$J)
"RTN","PXRMDHLP",9,0)
 S VALMCNT=0
"RTN","PXRMDHLP",10,0)
 F IND=1:1 Q:DONE  D
"RTN","PXRMDHLP",11,0)
 . S TEXT=$P($T(@PXRMTAG+IND),";",3)
"RTN","PXRMDHLP",12,0)
 . I TEXT="**End Text**" S DONE=1 Q
"RTN","PXRMDHLP",13,0)
 . S VALMCNT=VALMCNT+1
"RTN","PXRMDHLP",14,0)
 . S ^TMP("PXRMDHLP",$J,VALMCNT,0)=TEXT
"RTN","PXRMDHLP",15,0)
 S ^TMP("PXRMDHLP",$J,"VALMCNT")=VALMCNT
"RTN","PXRMDHLP",16,0)
 Q
"RTN","PXRMDHLP",17,0)
 ;
"RTN","PXRMDHLP",18,0)
RCAT ;Help text
"RTN","PXRMDHLP",19,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",20,0)
 ;;
"RTN","PXRMDHLP",21,0)
 ;;#   Select Item
"RTN","PXRMDHLP",22,0)
 ;;    Display, edit, delete or print a reminder category.
"RTN","PXRMDHLP",23,0)
 ;;
"RTN","PXRMDHLP",24,0)
 ;;AD  Add
"RTN","PXRMDHLP",25,0)
 ;;    Add a new reminder category.
"RTN","PXRMDHLP",26,0)
 ;;
"RTN","PXRMDHLP",27,0)
 ;;PT  List Categories
"RTN","PXRMDHLP",28,0)
 ;;    Print a list of all the reminder categories defined in the
"RTN","PXRMDHLP",29,0)
 ;;    current UCI.
"RTN","PXRMDHLP",30,0)
 ;;
"RTN","PXRMDHLP",31,0)
 ;;QU  Quit
"RTN","PXRMDHLP",32,0)
 ;;**End Text**
"RTN","PXRMDHLP",33,0)
 ;
"RTN","PXRMDHLP",34,0)
DLG ;Help text
"RTN","PXRMDHLP",35,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",36,0)
 ;;
"RTN","PXRMDHLP",37,0)
 ;;#   Select Item
"RTN","PXRMDHLP",38,0)
 ;;    Display, edit, delete or print a reminder dialog.
"RTN","PXRMDHLP",39,0)
 ;;
"RTN","PXRMDHLP",40,0)
 ;;AD  Add
"RTN","PXRMDHLP",41,0)
 ;;    Add a new REMINDER DIALOG. The dialog may be either autogenerated
"RTN","PXRMDHLP",42,0)
 ;;    from the dialog definition or input manually.
"RTN","PXRMDHLP",43,0)
 ;;
"RTN","PXRMDHLP",44,0)
 ;;CV  Change View
"RTN","PXRMDHLP",45,0)
 ;;    The initial display is of reminder dialogs only. This may be
"RTN","PXRMDHLP",46,0)
 ;;    changed to display:
"RTN","PXRMDHLP",47,0)
 ;;          
"RTN","PXRMDHLP",48,0)
 ;;    additional prompts, forced values, dialog elements,
"RTN","PXRMDHLP",49,0)
 ;;    dialog groups, result groups or result elements.
"RTN","PXRMDHLP",50,0)
 ;;  
"RTN","PXRMDHLP",51,0)
 ;;    A display by reminder may also be selected. 
"RTN","PXRMDHLP",52,0)
 ;;
"RTN","PXRMDHLP",53,0)
 ;;PT  List
"RTN","PXRMDHLP",54,0)
 ;;    Print a list of all the reminder dialogs that are defined in the
"RTN","PXRMDHLP",55,0)
 ;;    current UCI.
"RTN","PXRMDHLP",56,0)
 ;;
"RTN","PXRMDHLP",57,0)
 ;;RN  Name/Print Name
"RTN","PXRMDHLP",58,0)
 ;;    Toggle reminder name and reminder print name.
"RTN","PXRMDHLP",59,0)
 ;;
"RTN","PXRMDHLP",60,0)
 ;;QU  Quit
"RTN","PXRMDHLP",61,0)
 ;;**End Text**
"RTN","PXRMDHLP",62,0)
 ;
"RTN","PXRMDHLP",63,0)
DLGE ;Help text
"RTN","PXRMDHLP",64,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",65,0)
 ;;
"RTN","PXRMDHLP",66,0)
 ;;#   Select Item
"RTN","PXRMDHLP",67,0)
 ;;    Display, edit, delete or print a dialog.
"RTN","PXRMDHLP",68,0)
 ;;
"RTN","PXRMDHLP",69,0)
 ;;AD  Add
"RTN","PXRMDHLP",70,0)
 ;;    Add a new dialog. Elements or Groups may be created.
"RTN","PXRMDHLP",71,0)
 ;;
"RTN","PXRMDHLP",72,0)
 ;;CO  Copy Dialog
"RTN","PXRMDHLP",73,0)
 ;;    Copy a selected dialog to a new name.
"RTN","PXRMDHLP",74,0)
 ;;
"RTN","PXRMDHLP",75,0)
 ;;CV  Change View
"RTN","PXRMDHLP",76,0)
 ;;    Change display to a different dialog type:
"RTN","PXRMDHLP",77,0)
 ;;      
"RTN","PXRMDHLP",78,0)
 ;;    dialog elements, additional prompts, forced values,
"RTN","PXRMDHLP",79,0)
 ;;    dialog groups, result groups, result elements or 
"RTN","PXRMDHLP",80,0)
 ;;    reminder dialogs. 
"RTN","PXRMDHLP",81,0)
 ;;
"RTN","PXRMDHLP",82,0)
 ;;    A display by reminder may also be selected. 
"RTN","PXRMDHLP",83,0)
 ;;
"RTN","PXRMDHLP",84,0)
 ;;INQ Inquiry/Print
"RTN","PXRMDHLP",85,0)
 ;;    Print details for a selected dialog.
"RTN","PXRMDHLP",86,0)
 ;;    (restricted to dialog type in the current view)
"RTN","PXRMDHLP",87,0)
 ;;    
"RTN","PXRMDHLP",88,0)
 ;;PT  List All
"RTN","PXRMDHLP",89,0)
 ;;    Print a list of all dialogs of this type defined in the current
"RTN","PXRMDHLP",90,0)
 ;;    UCI.
"RTN","PXRMDHLP",91,0)
 ;;
"RTN","PXRMDHLP",92,0)
 ;;QU  Quit
"RTN","PXRMDHLP",93,0)
 ;;**End Text**
"RTN","PXRMDHLP",94,0)
 ;
"RTN","PXRMDHLP",95,0)
DLGR ;Help text
"RTN","PXRMDHLP",96,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",97,0)
 ;;
"RTN","PXRMDHLP",98,0)
 ;;#   Select Item
"RTN","PXRMDHLP",99,0)
 ;;    Select reminder to view dialogs for the reminder.
"RTN","PXRMDHLP",100,0)
 ;;
"RTN","PXRMDHLP",101,0)
 ;;AR  All Reminders
"RTN","PXRMDHLP",102,0)
 ;;    View all reminders.
"RTN","PXRMDHLP",103,0)
 ;;
"RTN","PXRMDHLP",104,0)
 ;;CV  Change View
"RTN","PXRMDHLP",105,0)
 ;;    The initial display is of reminders in name order. This may be
"RTN","PXRMDHLP",106,0)
 ;;    changed to a display of:
"RTN","PXRMDHLP",107,0)
 ;;          
"RTN","PXRMDHLP",108,0)
 ;;    reminder dialogs, additional prompts, forced values,
"RTN","PXRMDHLP",109,0)
 ;;    dialog groups, dialog elements, result groups or result elements.
"RTN","PXRMDHLP",110,0)
 ;;
"RTN","PXRMDHLP",111,0)
 ;;LR  Linked Reminders
"RTN","PXRMDHLP",112,0)
 ;;    View only reminders linked to dialogs.
"RTN","PXRMDHLP",113,0)
 ;;
"RTN","PXRMDHLP",114,0)
 ;;RN  Name/Print Name
"RTN","PXRMDHLP",115,0)
 ;;    Toggle reminder name and reminder print name.
"RTN","PXRMDHLP",116,0)
 ;;
"RTN","PXRMDHLP",117,0)
 ;;QU  Quit
"RTN","PXRMDHLP",118,0)
 ;;**End Text**
"RTN","PXRMDHLP",119,0)
 ;
"RTN","PXRMDHLP",120,0)
DTAX ;Help text
"RTN","PXRMDHLP",121,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",122,0)
 ;;
"RTN","PXRMDHLP",123,0)
 ;;#   Select Item
"RTN","PXRMDHLP",124,0)
 ;;    Display, edit or print dialog for this taxonomy.
"RTN","PXRMDHLP",125,0)
 ;;
"RTN","PXRMDHLP",126,0)
 ;;PT  List All
"RTN","PXRMDHLP",127,0)
 ;;    Print a list of all taxonomy dialogs defined in the
"RTN","PXRMDHLP",128,0)
 ;;    current UCI.
"RTN","PXRMDHLP",129,0)
 ;;
"RTN","PXRMDHLP",130,0)
 ;;QU  Quit
"RTN","PXRMDHLP",131,0)
 ;;**End Text**
"RTN","PXRMDHLP",132,0)
 ;
"RTN","PXRMDHLP",133,0)
RESN ;Help text
"RTN","PXRMDHLP",134,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",135,0)
 ;;
"RTN","PXRMDHLP",136,0)
 ;;#   Select Item
"RTN","PXRMDHLP",137,0)
 ;;    Display, edit or print a reminder resolution.
"RTN","PXRMDHLP",138,0)
 ;;
"RTN","PXRMDHLP",139,0)
 ;;AD  Add
"RTN","PXRMDHLP",140,0)
 ;;    Add a new LOCAL reminder resolution.
"RTN","PXRMDHLP",141,0)
 ;;
"RTN","PXRMDHLP",142,0)
 ;;PT  List All
"RTN","PXRMDHLP",143,0)
 ;;    Print a list of all the reminder resolutions defined in the
"RTN","PXRMDHLP",144,0)
 ;;    current UCI.
"RTN","PXRMDHLP",145,0)
 ;;
"RTN","PXRMDHLP",146,0)
 ;;QU  Quit
"RTN","PXRMDHLP",147,0)
 ;;**End Text**
"RTN","PXRMDHLP",148,0)
 ;
"RTN","PXRMDHLP",149,0)
SHFR ;Help text
"RTN","PXRMDHLP",150,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",151,0)
 ;;
"RTN","PXRMDHLP",152,0)
 ;;#   Select Item
"RTN","PXRMDHLP",153,0)
 ;;    Display, edit or print a health factor resolution.
"RTN","PXRMDHLP",154,0)
 ;;
"RTN","PXRMDHLP",155,0)
 ;;AD  Add
"RTN","PXRMDHLP",156,0)
 ;;    Add a new health factor resolution or select a reminder and
"RTN","PXRMDHLP",157,0)
 ;;    add or modify resolution statuses for each health factor finding
"RTN","PXRMDHLP",158,0)
 ;;    on the reminder. 
"RTN","PXRMDHLP",159,0)
 ;;
"RTN","PXRMDHLP",160,0)
 ;;PT  List All
"RTN","PXRMDHLP",161,0)
 ;;    Print a list of all health factor resolutions defined in the
"RTN","PXRMDHLP",162,0)
 ;;    current UCI.
"RTN","PXRMDHLP",163,0)
 ;;
"RTN","PXRMDHLP",164,0)
 ;;QU  Quit
"RTN","PXRMDHLP",165,0)
 ;;**End Text**
"RTN","PXRMDHLP",166,0)
 ;
"RTN","PXRMDHLP",167,0)
FIP ;Help text
"RTN","PXRMDHLP",168,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",169,0)
 ;;
"RTN","PXRMDHLP",170,0)
 ;;#   Select Item
"RTN","PXRMDHLP",171,0)
 ;;    Display, edit or print a finding item parameter.
"RTN","PXRMDHLP",172,0)
 ;;
"RTN","PXRMDHLP",173,0)
 ;;AD  Add
"RTN","PXRMDHLP",174,0)
 ;;    Add a new finding item parameter.
"RTN","PXRMDHLP",175,0)
 ;;
"RTN","PXRMDHLP",176,0)
 ;;PT  List All
"RTN","PXRMDHLP",177,0)
 ;;    Print a list of all finding item parameters defined in the
"RTN","PXRMDHLP",178,0)
 ;;    current UCI.
"RTN","PXRMDHLP",179,0)
 ;;
"RTN","PXRMDHLP",180,0)
 ;;QU  Quit
"RTN","PXRMDHLP",181,0)
 ;;**End Text**
"RTN","PXRMDHLP",182,0)
 ;
"RTN","PXRMDHLP",183,0)
FPAR ;Help text
"RTN","PXRMDHLP",184,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",185,0)
 ;;
"RTN","PXRMDHLP",186,0)
 ;;#   Select Item
"RTN","PXRMDHLP",187,0)
 ;;    Display, edit or print parameters for this finding type.
"RTN","PXRMDHLP",188,0)
 ;;
"RTN","PXRMDHLP",189,0)
 ;;PT  List All
"RTN","PXRMDHLP",190,0)
 ;;    Print a list of all finding type parameters defined in the
"RTN","PXRMDHLP",191,0)
 ;;    current UCI.
"RTN","PXRMDHLP",192,0)
 ;;
"RTN","PXRMDHLP",193,0)
 ;;QU  Quit
"RTN","PXRMDHLP",194,0)
 ;;**End Text**
"RTN","PXRMDHLP",195,0)
 Q
"RTN","PXRMDHLP",196,0)
 ;
"RTN","PXRMDHLP",197,0)
GRCAT ;General Help text
"RTN","PXRMDHLP",198,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",199,0)
 ;;
"RTN","PXRMDHLP",200,0)
 ;;ED  Edit
"RTN","PXRMDHLP",201,0)
 ;;    Edit or delete this reminder category.
"RTN","PXRMDHLP",202,0)
 ;;
"RTN","PXRMDHLP",203,0)
 ;;INQ Inquiry/Print
"RTN","PXRMDHLP",204,0)
 ;;    Print details of this reminder category.
"RTN","PXRMDHLP",205,0)
 ;;
"RTN","PXRMDHLP",206,0)
 ;;QU  Quit
"RTN","PXRMDHLP",207,0)
 ;;**End Text**
"RTN","PXRMDHLP",208,0)
 ;
"RTN","PXRMDHLP",209,0)
GDLG ;General Help text
"RTN","PXRMDHLP",210,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",211,0)
 ;;
"RTN","PXRMDHLP",212,0)
 ;;#   Select Sequence
"RTN","PXRMDHLP",213,0)
 ;;    To edit,delete or add a dialog element for this reminder dialog.
"RTN","PXRMDHLP",214,0)
 ;;
"RTN","PXRMDHLP",215,0)
 ;;CO  Copy Dialog
"RTN","PXRMDHLP",216,0)
 ;;    Copy this reminder dialog to a new name.
"RTN","PXRMDHLP",217,0)
 ;;
"RTN","PXRMDHLP",218,0)
 ;;DD  Detailed Display
"RTN","PXRMDHLP",219,0)
 ;;    Display dialog element names and resolution detail for this
"RTN","PXRMDHLP",220,0)
 ;;    reminder dialog.
"RTN","PXRMDHLP",221,0)
 ;;
"RTN","PXRMDHLP",222,0)
 ;;DP  Progress Note Text
"RTN","PXRMDHLP",223,0)
 ;;    Display text that will be entered in the progress note.
"RTN","PXRMDHLP",224,0)
 ;;
"RTN","PXRMDHLP",225,0)
 ;;DT  Dialog Text (default)
"RTN","PXRMDHLP",226,0)
 ;;    Display the dialog text as it should appear in CPRS.
"RTN","PXRMDHLP",227,0)
 ;;
"RTN","PXRMDHLP",228,0)
 ;;ED  Edit/Delete Dialog
"RTN","PXRMDHLP",229,0)
 ;;    Edit or delete this reminder dialog. Allows addition and deletion
"RTN","PXRMDHLP",230,0)
 ;;    of existing dialog elements from this reminder dialog. Allows the
"RTN","PXRMDHLP",231,0)
 ;;    sequence numbers to be changed. Also enable/disable dialog.
"RTN","PXRMDHLP",232,0)
 ;;
"RTN","PXRMDHLP",233,0)
 ;;INQ Inquiry/Print
"RTN","PXRMDHLP",234,0)
 ;;    Print details of this reminder dialog.
"RTN","PXRMDHLP",235,0)
 ;;
"RTN","PXRMDHLP",236,0)
 ;;RI  Reminder Inquiry
"RTN","PXRMDHLP",237,0)
 ;;    Display details of the associated reminder.
"RTN","PXRMDHLP",238,0)
 ;;
"RTN","PXRMDHLP",239,0)
 ;;QU  Quit
"RTN","PXRMDHLP",240,0)
 ;;**End Text**
"RTN","PXRMDHLP",241,0)
 ;;
"RTN","PXRMDHLP",242,0)
GDLGH ;General Help text
"RTN","PXRMDHLP",243,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",244,0)
 ;;
"RTN","PXRMDHLP",245,0)
 ;;AD  Autogenerate Dialog
"RTN","PXRMDHLP",246,0)
 ;;    Generate a reminder dialog for the current reminder.
"RTN","PXRMDHLP",247,0)
 ;;
"RTN","PXRMDHLP",248,0)
 ;;LR  Link Reminder
"RTN","PXRMDHLP",249,0)
 ;;    Link the current reminder to a reminder dialog.
"RTN","PXRMDHLP",250,0)
 ;;
"RTN","PXRMDHLP",251,0)
 ;;QU  Quit
"RTN","PXRMDHLP",252,0)
 ;;**End Text**
"RTN","PXRMDHLP",253,0)
 ;;
"RTN","PXRMDHLP",254,0)
GDTAX ;General Help text
"RTN","PXRMDHLP",255,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",256,0)
 ;;
"RTN","PXRMDHLP",257,0)
 ;;ED  Edit
"RTN","PXRMDHLP",258,0)
 ;;    Edit taxonomy dialog fields.
"RTN","PXRMDHLP",259,0)
 ;;
"RTN","PXRMDHLP",260,0)
 ;;INQ Inquiry/Print
"RTN","PXRMDHLP",261,0)
 ;;    Print details of dialog for the taxonomy.
"RTN","PXRMDHLP",262,0)
 ;;
"RTN","PXRMDHLP",263,0)
 ;;QU  Quit
"RTN","PXRMDHLP",264,0)
 ;;**End Text**
"RTN","PXRMDHLP",265,0)
 ;
"RTN","PXRMDHLP",266,0)
GRESN ;General Help text
"RTN","PXRMDHLP",267,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",268,0)
 ;;
"RTN","PXRMDHLP",269,0)
 ;;ED  Edit
"RTN","PXRMDHLP",270,0)
 ;;    Edit or delete this resolution status.
"RTN","PXRMDHLP",271,0)
 ;;
"RTN","PXRMDHLP",272,0)
 ;;INQ Inquiry/Print
"RTN","PXRMDHLP",273,0)
 ;;    Print details of this resolution status.
"RTN","PXRMDHLP",274,0)
 ;;
"RTN","PXRMDHLP",275,0)
 ;;QU  Quit
"RTN","PXRMDHLP",276,0)
 ;;**End Text**
"RTN","PXRMDHLP",277,0)
 ;
"RTN","PXRMDHLP",278,0)
GSHFR ;General Help text
"RTN","PXRMDHLP",279,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",280,0)
 ;;
"RTN","PXRMDHLP",281,0)
 ;;ED  Edit
"RTN","PXRMDHLP",282,0)
 ;;    Edit or delete the resolution status(s) for this health factor.
"RTN","PXRMDHLP",283,0)
 ;;
"RTN","PXRMDHLP",284,0)
 ;;INQ Inquiry/Print
"RTN","PXRMDHLP",285,0)
 ;;    Print details of this health factor's resolution statuses.
"RTN","PXRMDHLP",286,0)
 ;;
"RTN","PXRMDHLP",287,0)
 ;;QU  Quit
"RTN","PXRMDHLP",288,0)
 ;;**End Text**
"RTN","PXRMDHLP",289,0)
 ;
"RTN","PXRMDHLP",290,0)
GFIP ;General Help text
"RTN","PXRMDHLP",291,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",292,0)
 ;;
"RTN","PXRMDHLP",293,0)
 ;;ED  Edit
"RTN","PXRMDHLP",294,0)
 ;;    Edit or delete this finding item parameter.
"RTN","PXRMDHLP",295,0)
 ;;
"RTN","PXRMDHLP",296,0)
 ;;INQ Inquiry/Print
"RTN","PXRMDHLP",297,0)
 ;;    Print details of this finding item parameter.
"RTN","PXRMDHLP",298,0)
 ;;
"RTN","PXRMDHLP",299,0)
 ;;QU  Quit
"RTN","PXRMDHLP",300,0)
 ;;**End Text**
"RTN","PXRMDHLP",301,0)
 ;
"RTN","PXRMDHLP",302,0)
GFPAR ;General Help text
"RTN","PXRMDHLP",303,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",304,0)
 ;;
"RTN","PXRMDHLP",305,0)
 ;;#   Select Resolution Status to edit
"RTN","PXRMDHLP",306,0)
 ;;    Disable/Enable the selected resolution status or modify the
"RTN","PXRMDHLP",307,0)
 ;;    prefix and suffix text.
"RTN","PXRMDHLP",308,0)
 ;;
"RTN","PXRMDHLP",309,0)
 ;;INQ Inquiry/Print
"RTN","PXRMDHLP",310,0)
 ;;    Print details of this finding parameter.
"RTN","PXRMDHLP",311,0)
 ;;
"RTN","PXRMDHLP",312,0)
 ;;QU  Quit
"RTN","PXRMDHLP",313,0)
 ;;**End Text**
"RTN","PXRMDHLP",314,0)
 Q
"RTN","PXRMDISC")
0^26^B721143
"RTN","PXRMDISC",1,0)
PXRMDISC ; SLC/PKR - Return the reminder disclaimer in ^TMP. ;05/28/1999
"RTN","PXRMDISC",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDISC",3,0)
 ;
"RTN","PXRMDISC",4,0)
LOAD ;If the Site Reminder Disclaimer is empty then return the Distributed
"RTN","PXRMDISC",5,0)
 ;Reminder disclaimer.
"RTN","PXRMDISC",6,0)
 ;If the disclaimer is already loaded don't do anything.
"RTN","PXRMDISC",7,0)
 I $D(^TMP("PXRM",$J,"DISC")) Q
"RTN","PXRMDISC",8,0)
 N DIWF,DIWL,DIWR,IND,LC,X
"RTN","PXRMDISC",9,0)
 D DIWPS^PXRMUTIL(.DIWF,.DIWL,.DIWR)
"RTN","PXRMDISC",10,0)
 I $D(^PXRM(800,1,"DISC2"))>0 S IND="DISC2"
"RTN","PXRMDISC",11,0)
 E  S IND="DISC1"
"RTN","PXRMDISC",12,0)
 S LC=0
"RTN","PXRMDISC",13,0)
 F  S LC=$O(^PXRM(800,1,IND,LC)) Q:LC=""  D
"RTN","PXRMDISC",14,0)
 . S X=$G(^PXRM(800,1,IND,LC,0))
"RTN","PXRMDISC",15,0)
 . D ^DIWP
"RTN","PXRMDISC",16,0)
 ;
"RTN","PXRMDISC",17,0)
 ;Put the formatted text into ^TMP("PXRM",$J,"DISC",...)
"RTN","PXRMDISC",18,0)
 S LC=0
"RTN","PXRMDISC",19,0)
 F  S LC=$O(^UTILITY($J,"W",0,LC)) Q:LC=""  D
"RTN","PXRMDISC",20,0)
 . S ^TMP("PXRM",$J,"DISC",LC)=^UTILITY($J,"W",0,LC,0)
"RTN","PXRMDISC",21,0)
 D DIWPK^PXRMUTIL
"RTN","PXRMDISC",22,0)
 Q
"RTN","PXRMDLG")
0^27^B37369528
"RTN","PXRMDLG",1,0)
PXRMDLG ; SLC/PJH - Reminder Dialog Edit/Inquiry ;05/09/2000
"RTN","PXRMDLG",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDLG",3,0)
 ;
"RTN","PXRMDLG",4,0)
 ;Labels called from list 'PXRM DIALOG LIST'
"RTN","PXRMDLG",5,0)
 ;
"RTN","PXRMDLG",6,0)
EXIT ;Exit code
"RTN","PXRMDLG",7,0)
 D CLEAN^VALM10
"RTN","PXRMDLG",8,0)
 D FULL^VALM1
"RTN","PXRMDLG",9,0)
 S VALMBCK="Q"
"RTN","PXRMDLG",10,0)
 K ^TMP("PXRMDLG",$J)
"RTN","PXRMDLG",11,0)
 Q
"RTN","PXRMDLG",12,0)
 ;
"RTN","PXRMDLG",13,0)
HDR ; Header code
"RTN","PXRMDLG",14,0)
 S VALMHDR(1)=PXRMHD
"RTN","PXRMDLG",15,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMDLG",16,0)
 Q
"RTN","PXRMDLG",17,0)
 ;
"RTN","PXRMDLG",18,0)
HELP ;Help code
"RTN","PXRMDLG",19,0)
 N ORU,ORUPRMT,XQORM,PXRMTAG S PXRMTAG="GDLG"
"RTN","PXRMDLG",20,0)
 D EN^VALM("PXRM DIALOG MAIN HELP")
"RTN","PXRMDLG",21,0)
 Q
"RTN","PXRMDLG",22,0)
 ;
"RTN","PXRMDLG",23,0)
INIT ;Init
"RTN","PXRMDLG",24,0)
 S VALMCNT=0
"RTN","PXRMDLG",25,0)
 ;Load details of dialog set
"RTN","PXRMDLG",26,0)
 D BUILD(1)
"RTN","PXRMDLG",27,0)
 Q
"RTN","PXRMDLG",28,0)
 ;
"RTN","PXRMDLG",29,0)
PEXIT ;PXRM DIALOG MENU protocol exit code
"RTN","PXRMDLG",30,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMDLG",31,0)
 ;Reset after page up or down
"RTN","PXRMDLG",32,0)
 D XQORM
"RTN","PXRMDLG",33,0)
 Q
"RTN","PXRMDLG",34,0)
 ;
"RTN","PXRMDLG",35,0)
 ;Other Subroutines
"RTN","PXRMDLG",36,0)
 ;
"RTN","PXRMDLG",37,0)
 ;Build workfile (protocols PXRM DIALOG VIEW/LIST)
"RTN","PXRMDLG",38,0)
BUILD(VIEW) ;Clear existing file
"RTN","PXRMDLG",39,0)
 S PXRMMODE=VIEW,VALMCNT=0,VALMBG=1,VALMBCK="R" K ^TMP("PXRMDLG",$J)
"RTN","PXRMDLG",40,0)
 ;Headers
"RTN","PXRMDLG",41,0)
 S DNAM=$P($G(^PXRMD(801.41,PXRMDIEN,0)),U)
"RTN","PXRMDLG",42,0)
 I $P($G(^PXRMD(801.41,PXRMDIEN,0)),U,3)]"" D
"RTN","PXRMDLG",43,0)
 .S DNAM=DNAM_" (DISABLED - "_$P($G(^PXRMD(801.41,PXRMDIEN,0)),U,3)_")"
"RTN","PXRMDLG",44,0)
 S PXRMHD="REMINDER DIALOG NAME: "_DNAM
"RTN","PXRMDLG",45,0)
 D HDR
"RTN","PXRMDLG",46,0)
 ;Reminder Inquiry
"RTN","PXRMDLG",47,0)
 I VIEW=3 D REMD S PXRMOPT=0 D XQORM Q
"RTN","PXRMDLG",48,0)
 ;
"RTN","PXRMDLG",49,0)
 N DATA,DGRP,DHED,FGLOB,FIEN,FITEM,FNAME,FNUM,FTYP,RESULT,RESNM
"RTN","PXRMDLG",50,0)
 N OIEN,ONAME,ONUM,PDIS,PIEN,PNAME,PTXT,PTYP,RIEN,RNAME,SEQ,SUB
"RTN","PXRMDLG",51,0)
 ;Build list of finding items
"RTN","PXRMDLG",52,0)
 N DEF,DEF1,DEF2 D DEF^PXRMRUTL(.DEF,.DEF1,.DEF2)
"RTN","PXRMDLG",53,0)
 ;
"RTN","PXRMDLG",54,0)
 S SEQ=0
"RTN","PXRMDLG",55,0)
 ;Get each sequence number
"RTN","PXRMDLG",56,0)
 F  S SEQ=$O(^PXRMD(801.41,PXRMDIEN,10,"B",SEQ)) Q:'SEQ  D
"RTN","PXRMDLG",57,0)
 .;Determine subscript
"RTN","PXRMDLG",58,0)
 .S SUB=$O(^PXRMD(801.41,PXRMDIEN,10,"B",SEQ,"")) Q:'SUB
"RTN","PXRMDLG",59,0)
 .;Get ien of prompt/component
"RTN","PXRMDLG",60,0)
 .S PIEN=$P($G(^PXRMD(801.41,PXRMDIEN,10,SUB,0)),U,2) Q:'PIEN
"RTN","PXRMDLG",61,0)
 .;Check if this is a dialog group
"RTN","PXRMDLG",62,0)
 .S DGRP=0 I $P($G(^PXRMD(801.41,PIEN,0)),U,4)="G" S DGRP=1
"RTN","PXRMDLG",63,0)
 .S DHED=$S(DGRP:"Dialog elements:    ",1:"Additional prompts: ")
"RTN","PXRMDLG",64,0)
 .;Save seq/description/disabled
"RTN","PXRMDLG",65,0)
 .I 'VIEW D
"RTN","PXRMDLG",66,0)
 ..D DETAIL^PXRMDLG2(PIEN)
"RTN","PXRMDLG",67,0)
 ..;Create headings
"RTN","PXRMDLG",68,0)
 ..D CHGCAP^VALM("HEADER1","Sequence")
"RTN","PXRMDLG",69,0)
 ..D CHGCAP^VALM("HEADER2","Dialog Details")
"RTN","PXRMDLG",70,0)
 ..D CHGCAP^VALM("HEADER3","Disabled")
"RTN","PXRMDLG",71,0)
 ..;If DN requested build prompt/additional prompt details
"RTN","PXRMDLG",72,0)
 .I VIEW D 
"RTN","PXRMDLG",73,0)
 ..D VIEW^PXRMDLG1(PIEN,VIEW)
"RTN","PXRMDLG",74,0)
 ..;Create headings
"RTN","PXRMDLG",75,0)
 ..D CHGCAP^VALM("HEADER1","Sequence")
"RTN","PXRMDLG",76,0)
 ..I VIEW=1 D CHGCAP^VALM("HEADER2","Dialog Text")
"RTN","PXRMDLG",77,0)
 ..I VIEW=4 D CHGCAP^VALM("HEADER2","Progress Note Text")
"RTN","PXRMDLG",78,0)
 ..D CHGCAP^VALM("HEADER3"," ")
"RTN","PXRMDLG",79,0)
 .;Final linefeed
"RTN","PXRMDLG",80,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG",81,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG",82,0)
 ;Allow for sequence number being greater than VALMCNT
"RTN","PXRMDLG",83,0)
 I $O(^TMP("PXRMDLG",$J,"IDX",""),-1)>VALMCNT D
"RTN","PXRMDLG",84,0)
 .N IC S IC=VALMCNT
"RTN","PXRMDLG",85,0)
 .S VALMCNT=$O(^TMP("PXRMDLG",$J,"IDX",""),-1)
"RTN","PXRMDLG",86,0)
 .F IC=IC+1:1:VALMCNT S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG",87,0)
 ;If no lines default to 15
"RTN","PXRMDLG",88,0)
 I VALMCNT<15 D  S VALMCNT=15
"RTN","PXRMDLG",89,0)
 .N IC F IC=VALMCNT+1:1:15 S ^TMP("PXRMDLG",$J,IC,0)=$J("",79)
"RTN","PXRMDLG",90,0)
 S ^TMP("PXRMDLG",$J,"VALMCNT")=VALMCNT
"RTN","PXRMDLG",91,0)
 ;Menu reset
"RTN","PXRMDLG",92,0)
 S PXRMOPT=1 D XQORM
"RTN","PXRMDLG",93,0)
 Q
"RTN","PXRMDLG",94,0)
 ;
"RTN","PXRMDLG",95,0)
 ;Find description for dialog type
"RTN","PXRMDLG",96,0)
LIT(INP) ;
"RTN","PXRMDLG",97,0)
 Q:INP="G" "Dialog group: "
"RTN","PXRMDLG",98,0)
 Q:INP="F" "Forced value: "
"RTN","PXRMDLG",99,0)
 Q:INP="P" "Prompt: "
"RTN","PXRMDLG",100,0)
 Q:INP="E" "Dialog element: "
"RTN","PXRMDLG",101,0)
 Q "???"
"RTN","PXRMDLG",102,0)
 ;
"RTN","PXRMDLG",103,0)
 ;Finding description
"RTN","PXRMDLG",104,0)
DESC(FIEN) ;
"RTN","PXRMDLG",105,0)
 ;Determine finding type
"RTN","PXRMDLG",106,0)
 S FGLOB=$P(FIEN,";",2) Q:FGLOB=""
"RTN","PXRMDLG",107,0)
 S FITEM=$P(FIEN,";") Q:FITEM=""
"RTN","PXRMDLG",108,0)
 ;Diagnosis POV
"RTN","PXRMDLG",109,0)
 I FGLOB["ICD9" D  Q
"RTN","PXRMDLG",110,0)
 .S FTYP="DIAGNOSIS",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG",111,0)
 .S FNAME=$P($G(@FGLOB),U,3)_" ["_FITEM_"]"
"RTN","PXRMDLG",112,0)
 ;Procedure CPT
"RTN","PXRMDLG",113,0)
 I FGLOB["ICPT" D  Q
"RTN","PXRMDLG",114,0)
 .S FTYP="PROCEDURE",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG",115,0)
 .S FNAME=$P($G(@FGLOB),U,2)_" ["_FITEM_"]"
"RTN","PXRMDLG",116,0)
 ;Quick order
"RTN","PXRMDLG",117,0)
 I FGLOB["ORD(101.41" D  Q
"RTN","PXRMDLG",118,0)
 .S FTYP="QUICK ORDER",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG",119,0)
 .S FNAME=$P($G(@FGLOB),U,2)_" ["_FITEM_"]"
"RTN","PXRMDLG",120,0)
 ;Short name for finding type
"RTN","PXRMDLG",121,0)
 S FTYP=$G(DEF1(FGLOB)) Q:FTYP=""
"RTN","PXRMDLG",122,0)
 S FNUM=" ["_FTYP_"("_FITEM_")]"
"RTN","PXRMDLG",123,0)
 ;Long name
"RTN","PXRMDLG",124,0)
 S FTYP=$G(DEF2(FTYP))
"RTN","PXRMDLG",125,0)
 S FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG",126,0)
 S FNAME=$P($G(@FGLOB),U,1)
"RTN","PXRMDLG",127,0)
 I FNAME="" S FNAME=$P($G(@FGLOB),U)
"RTN","PXRMDLG",128,0)
 I FNAME]"" S FNAME=FNAME_FNUM Q
"RTN","PXRMDLG",129,0)
 S FNAME=FITEM
"RTN","PXRMDLG",130,0)
 Q
"RTN","PXRMDLG",131,0)
 ;
"RTN","PXRMDLG",132,0)
 ;Reminder Details
"RTN","PXRMDLG",133,0)
REMD N ARRAY,SUB
"RTN","PXRMDLG",134,0)
 D CHGCAP^VALM("HEADER1","Reminder Inquiry")
"RTN","PXRMDLG",135,0)
 D CHGCAP^VALM("HEADER2","")
"RTN","PXRMDLG",136,0)
 I 'PXRMITEM D  Q
"RTN","PXRMDLG",137,0)
 .S ^TMP("PXRMDLG",$J,2,0)=" *This dialog is not linked to a reminder*"
"RTN","PXRMDLG",138,0)
 D BUILD^PXRMRIN2(.ARRAY,PXRMITEM)
"RTN","PXRMDLG",139,0)
 D CHGCAP^VALM("HEADER3","")
"RTN","PXRMDLG",140,0)
 S SUB=0
"RTN","PXRMDLG",141,0)
 F  S SUB=$O(ARRAY(SUB)) Q:'SUB  D
"RTN","PXRMDLG",142,0)
 .S VALMCNT=SUB
"RTN","PXRMDLG",143,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=ARRAY(VALMCNT)
"RTN","PXRMDLG",144,0)
 Q
"RTN","PXRMDLG",145,0)
 ;
"RTN","PXRMDLG",146,0)
SEL ;PXRM DIALOG SELECTION ITEM validation
"RTN","PXRMDLG",147,0)
 N ERR,IEN,SEL
"RTN","PXRMDLG",148,0)
 S VALMBCK="",SEL=+$P(XQORNOD(0),"=",2)
"RTN","PXRMDLG",149,0)
 ;Invalid selection
"RTN","PXRMDLG",150,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("IDX",SEL))) D  Q
"RTN","PXRMDLG",151,0)
 .N ANS,DTOUT,DUOUT,Y
"RTN","PXRMDLG",152,0)
 .W IORESET S VALMBCK="R"
"RTN","PXRMDLG",153,0)
 .D XASK^PXRMDLG(.ANS) Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDLG",154,0)
 .I ANS'="Y" W $C(7),!,SEL_" is not an existing sequence number." H 2 Q
"RTN","PXRMDLG",155,0)
 .D ESEL^PXRMDEDT(PXRMDIEN,SEL)
"RTN","PXRMDLG",156,0)
 ;Valid selection
"RTN","PXRMDLG",157,0)
 S IEN=$O(@VALMAR@("IDX",SEL,"")) Q:'IEN
"RTN","PXRMDLG",158,0)
 ;Copy/Delete/Edit dialog element
"RTN","PXRMDLG",159,0)
 D IND^PXRMDEDT(IEN)
"RTN","PXRMDLG",160,0)
 Q
"RTN","PXRMDLG",161,0)
 ;
"RTN","PXRMDLG",162,0)
XQORM I PXRMOPT=1 D
"RTN","PXRMDLG",163,0)
 .S XQORM("#")=$O(^ORD(101,"B","PXRM DIALOG SELECTION ITEM",0))_U_"1:99"
"RTN","PXRMDLG",164,0)
 .S XQORM("A")="Select Sequence: "
"RTN","PXRMDLG",165,0)
 Q
"RTN","PXRMDLG",166,0)
 ;
"RTN","PXRMDLG",167,0)
 ;Add sequence number
"RTN","PXRMDLG",168,0)
 ;-------------------
"RTN","PXRMDLG",169,0)
XASK(YESNO) ;
"RTN","PXRMDLG",170,0)
 N X,Y,TEXT,DIR
"RTN","PXRMDLG",171,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDLG",172,0)
 S DIR(0)="YA0"
"RTN","PXRMDLG",173,0)
 S DIR("A")="ARE YOU ADDING "_SEL_" AS A NEW SEQUENCE NUMBER: "
"RTN","PXRMDLG",174,0)
 S DIR("B")="N"
"RTN","PXRMDLG",175,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMDLG",176,0)
 S DIR("??")=U_"D XHLP^PXRMDLG(1)"
"RTN","PXRMDLG",177,0)
 D ^DIR K DIR
"RTN","PXRMDLG",178,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDLG",179,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDLG",180,0)
 S YESNO=$E(Y(0))
"RTN","PXRMDLG",181,0)
 Q
"RTN","PXRMDLG",182,0)
 ;
"RTN","PXRMDLG",183,0)
 ;
"RTN","PXRMDLG",184,0)
 ;General help text routine.
"RTN","PXRMDLG",185,0)
 ;--------------------------
"RTN","PXRMDLG",186,0)
XHLP(CALL) ;
"RTN","PXRMDLG",187,0)
 N HTEXT
"RTN","PXRMDLG",188,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMDLG",189,0)
 S DIWF="C75",DIWL=0,DIWR=75
"RTN","PXRMDLG",190,0)
 ;
"RTN","PXRMDLG",191,0)
 I CALL=1 D
"RTN","PXRMDLG",192,0)
 .S HTEXT(1)="Enter Yes to if you are adding a new sequence number or"
"RTN","PXRMDLG",193,0)
 .S HTEXT(2)="dialog element to this reminder dialog."
"RTN","PXRMDLG",194,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDLG",195,0)
 S IC=""
"RTN","PXRMDLG",196,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMDLG",197,0)
 . S X=HTEXT(IC)
"RTN","PXRMDLG",198,0)
 . D ^DIWP
"RTN","PXRMDLG",199,0)
 W !
"RTN","PXRMDLG",200,0)
 S IC=0
"RTN","PXRMDLG",201,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMDLG",202,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMDLG",203,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDLG",204,0)
 W !
"RTN","PXRMDLG",205,0)
 Q
"RTN","PXRMDLG1")
0^28^B56185870
"RTN","PXRMDLG1",1,0)
PXRMDLG1 ; SLC/PJH - Reminder Dialog Edit/Inquiry (overflow) ;05/18/2000
"RTN","PXRMDLG1",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDLG1",3,0)
 ;
"RTN","PXRMDLG1",4,0)
 ;Get selectable codes for a taxonomy
"RTN","PXRMDLG1",5,0)
 ;-----------------------------------
"RTN","PXRMDLG1",6,0)
CODES(FILE,TIEN) ;
"RTN","PXRMDLG1",7,0)
 N CODES,CODE,DESC,DTEXT,SUB,TAB,TEXT
"RTN","PXRMDLG1",8,0)
 ;Display text
"RTN","PXRMDLG1",9,0)
 S TEXT="Selectable codes: ",TAB=18
"RTN","PXRMDLG1",10,0)
 ;Get array
"RTN","PXRMDLG1",11,0)
 D CODES^PXRMDLLA(FILE,TIEN,.CODES)
"RTN","PXRMDLG1",12,0)
 ;Move results into workfile
"RTN","PXRMDLG1",13,0)
 S SUB=""
"RTN","PXRMDLG1",14,0)
 F  S SUB=$O(CODES(SUB)) Q:SUB=""  D
"RTN","PXRMDLG1",15,0)
 .S CODE=$P(CODES(SUB),U,2),DESC=$P(CODES(SUB),U,3)
"RTN","PXRMDLG1",16,0)
 .S DTEXT=CODE_$J("",7-$L(CODE))_DESC
"RTN","PXRMDLG1",17,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",18,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_$G(TEXT)_DTEXT
"RTN","PXRMDLG1",19,0)
 .S TEXT=$J("",TAB)
"RTN","PXRMDLG1",20,0)
 Q
"RTN","PXRMDLG1",21,0)
 ;
"RTN","PXRMDLG1",22,0)
 ;Either dialog text or P/N text
"RTN","PXRMDLG1",23,0)
 ;------------------------------
"RTN","PXRMDLG1",24,0)
TSUB(IEN,VIEW) ;
"RTN","PXRMDLG1",25,0)
 ;Dialog View uses Dialog text
"RTN","PXRMDLG1",26,0)
 I VIEW=1 Q 25
"RTN","PXRMDLG1",27,0)
 ;P/N View uses P/N TEXT if defined
"RTN","PXRMDLG1",28,0)
 I $D(^PXRMD(801.41,IEN,35)) Q 35
"RTN","PXRMDLG1",29,0)
 ;Otherwise Dialog Text
"RTN","PXRMDLG1",30,0)
 Q 25
"RTN","PXRMDLG1",31,0)
 ;
"RTN","PXRMDLG1",32,0)
 ;Progress note text (DP)
"RTN","PXRMDLG1",33,0)
 ;-----------------------
"RTN","PXRMDLG1",34,0)
VIEW(IEN,VIEW) ;
"RTN","PXRMDLG1",35,0)
 N DCAP,TSUB
"RTN","PXRMDLG1",36,0)
 ;Dialog Group process
"RTN","PXRMDLG1",37,0)
 I DGRP D  Q
"RTN","PXRMDLG1",38,0)
 .N DATA,DGBEG,DGIEN,DGSEQ,DGSUB
"RTN","PXRMDLG1",39,0)
 .;Update index
"RTN","PXRMDLG1",40,0)
 .S ^TMP("PXRMDLG",$J,"IDX",SEQ,IEN)=""
"RTN","PXRMDLG1",41,0)
 .;Get GROUP text
"RTN","PXRMDLG1",42,0)
 .S DGSUB=0,DGBEG=$J(SEQ,3),TSUB=$$TSUB(IEN,VIEW)
"RTN","PXRMDLG1",43,0)
 .F  S DGSUB=$O(^PXRMD(801.41,IEN,TSUB,DGSUB)) Q:'DGSUB  D
"RTN","PXRMDLG1",44,0)
 ..S DTXT=$G(^PXRMD(801.41,IEN,TSUB,DGSUB,0))
"RTN","PXRMDLG1",45,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",46,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=DGBEG_$J("",12)_DTXT,DGBEG=$J("",3)
"RTN","PXRMDLG1",47,0)
 .;Get additional prompts
"RTN","PXRMDLG1",48,0)
 .D PROMPT(IEN,0,"","")
"RTN","PXRMDLG1",49,0)
 .;Group caption text
"RTN","PXRMDLG1",50,0)
 .S DTXT=$P($G(^PXRMD(801.41,IEN,0)),U,5),DCAP=" [group caption]"
"RTN","PXRMDLG1",51,0)
 .I DTXT="" S DCAP="[no caption for this group]"
"RTN","PXRMDLG1",52,0)
 .;Text of caption
"RTN","PXRMDLG1",53,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",54,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=DGBEG_$J("",12)_DTXT_DCAP,DGBEG=$J("",3)
"RTN","PXRMDLG1",55,0)
 .;Get dialog group sub-elements
"RTN","PXRMDLG1",56,0)
 .S SUB=0
"RTN","PXRMDLG1",57,0)
 .F  S SUB=$O(^PXRMD(801.41,IEN,10,SUB)) Q:'SUB  D
"RTN","PXRMDLG1",58,0)
 ..S DGIEN=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U,2) Q:'DGIEN
"RTN","PXRMDLG1",59,0)
 ..S DGSEQ=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U)
"RTN","PXRMDLG1",60,0)
 ..S DGBEG=$J(SEQ,3)_"."_DGSEQ
"RTN","PXRMDLG1",61,0)
 ..;Get Resolution/Finding details
"RTN","PXRMDLG1",62,0)
 ..S FIEN=$P($G(^PXRMD(801.41,DGIEN,1)),U,5)
"RTN","PXRMDLG1",63,0)
 ..;If taxonomy generate 
"RTN","PXRMDLG1",64,0)
 ..I $P(FIEN,";",2)="PXD(811.2," D TAX(FIEN,DGBEG,DGIEN) Q
"RTN","PXRMDLG1",65,0)
 ..;Otherwise get text from dialog element
"RTN","PXRMDLG1",66,0)
 ..S DGSUB=0,TSUB=$$TSUB(DGIEN,VIEW)
"RTN","PXRMDLG1",67,0)
 ..F  S DGSUB=$O(^PXRMD(801.41,DGIEN,TSUB,DGSUB)) Q:'DGSUB  D
"RTN","PXRMDLG1",68,0)
 ...S DTXT=$G(^PXRMD(801.41,DGIEN,TSUB,DGSUB,0))
"RTN","PXRMDLG1",69,0)
 ...S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",70,0)
 ...S ^TMP("PXRMDLG",$J,VALMCNT,0)=DGBEG_$J("",10)_DTXT,DGBEG=$J("",5)
"RTN","PXRMDLG1",71,0)
 ...;Get additional prompts
"RTN","PXRMDLG1",72,0)
 ..D PROMPT(DGIEN,0,"","")
"RTN","PXRMDLG1",73,0)
 ..;Final linefeed
"RTN","PXRMDLG1",74,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",75,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG1",76,0)
 ;
"RTN","PXRMDLG1",77,0)
 N TAX,SUB
"RTN","PXRMDLG1",78,0)
 ;Get Resolution/Finding details
"RTN","PXRMDLG1",79,0)
 S DATA=$G(^PXRMD(801.41,IEN,1)),FIEN=$P(DATA,U,5),TAX=0
"RTN","PXRMDLG1",80,0)
 ;Mental Health
"RTN","PXRMDLG1",81,0)
 I $P(FIEN,";",2)="YTT(601," D MENTAL(FIEN) Q
"RTN","PXRMDLG1",82,0)
 ;Check if taxonomy
"RTN","PXRMDLG1",83,0)
 I $P(FIEN,";",2)="PXD(811.2," S TAX=1
"RTN","PXRMDLG1",84,0)
 ;If a taxonomy use the dialog text from taxonomy file
"RTN","PXRMDLG1",85,0)
 I TAX D TAX(FIEN,SEQ,IEN) Q
"RTN","PXRMDLG1",86,0)
 ;If not a taxonomy use dialog file
"RTN","PXRMDLG1",87,0)
 I 'TAX D  Q
"RTN","PXRMDLG1",88,0)
 .S TSUB=$$TSUB(IEN,VIEW)
"RTN","PXRMDLG1",89,0)
 .S DTXT=$G(^PXRMD(801.41,IEN,TSUB,1,0))
"RTN","PXRMDLG1",90,0)
 .;Text of the first prompt
"RTN","PXRMDLG1",91,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",92,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J(SEQ,3)_$J("",12)_DTXT
"RTN","PXRMDLG1",93,0)
 .S ^TMP("PXRMDLG",$J,"IDX",SEQ,IEN)=""
"RTN","PXRMDLG1",94,0)
 .;Text or subsequent lines
"RTN","PXRMDLG1",95,0)
 .S SUB=1
"RTN","PXRMDLG1",96,0)
 .F  S SUB=$O(^PXRMD(801.41,IEN,TSUB,SUB)) Q:'SUB  D
"RTN","PXRMDLG1",97,0)
 ..S DTXT=$G(^PXRMD(801.41,IEN,TSUB,SUB,0))
"RTN","PXRMDLG1",98,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",99,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_DTXT
"RTN","PXRMDLG1",100,0)
 .;Get additional prompts
"RTN","PXRMDLG1",101,0)
 .D PROMPT(IEN,0,"","")
"RTN","PXRMDLG1",102,0)
 ;
"RTN","PXRMDLG1",103,0)
 Q
"RTN","PXRMDLG1",104,0)
 ;
"RTN","PXRMDLG1",105,0)
 ;additional prompts in 801.45
"RTN","PXRMDLG1",106,0)
 ;----------------------------
"RTN","PXRMDLG1",107,0)
FPROMPT(FNODE,RSUB,CNT,ARRAY) ;
"RTN","PXRMDLG1",108,0)
 ;Get all additional fields for this resolution type
"RTN","PXRMDLG1",109,0)
 S ASUB=0,ACNT=0
"RTN","PXRMDLG1",110,0)
 F  S ASUB=$O(^PXRMD(801.45,FNODE,1,RSUB,5,ASUB)) Q:'ASUB  D
"RTN","PXRMDLG1",111,0)
 .S DNODE=$G(^PXRMD(801.45,FNODE,1,RSUB,5,ASUB,0)) Q:DNODE=""
"RTN","PXRMDLG1",112,0)
 .;Ignore if disabled
"RTN","PXRMDLG1",113,0)
 .I $P(DNODE,U,3)=1 Q
"RTN","PXRMDLG1",114,0)
 .S DNODE=$P(DNODE,U) Q:DNODE=""
"RTN","PXRMDLG1",115,0)
 .S ATXT=$P($G(^PXRMD(801.41,DNODE,0)),U) Q:ATXT=""
"RTN","PXRMDLG1",116,0)
 .;S ATXT=$TR(ATXT,UPPER,LOWER)
"RTN","PXRMDLG1",117,0)
 .S ACNT=ACNT+1
"RTN","PXRMDLG1",118,0)
 .S ARRAY(CNT,ACNT)=DNODE
"RTN","PXRMDLG1",119,0)
 Q
"RTN","PXRMDLG1",120,0)
 ;
"RTN","PXRMDLG1",121,0)
 ;Mental Healt Instrument
"RTN","PXRMDLG1",122,0)
 ;-----------------------
"RTN","PXRMDLG1",123,0)
MENTAL(RESN) ;
"RTN","PXRMDLG1",124,0)
 N ARRAY,CNT,SUB,TXT,TYP,YT,YIEN,YNAM,YSEQ
"RTN","PXRMDLG1",125,0)
 S YIEN=$P(RESN,";") Q:'YIEN
"RTN","PXRMDLG1",126,0)
 S YNAM=$P($G(^YTT(601,YIEN,0)),U) Q:YNAM=""
"RTN","PXRMDLG1",127,0)
 S YT("CODE")=YNAM
"RTN","PXRMDLG1",128,0)
 ;Get test details
"RTN","PXRMDLG1",129,0)
 D SHOWALL^YTAPI3(.ARRAY,.YT)
"RTN","PXRMDLG1",130,0)
 ;Quit if invalid test
"RTN","PXRMDLG1",131,0)
 I ARRAY(1)["[ERROR]" Q
"RTN","PXRMDLG1",132,0)
 ;Get Name
"RTN","PXRMDLG1",133,0)
 S TXT=$G(ARRAY(2)),TXT=$P(TXT,U)_" : "_$P(TXT,U,2)
"RTN","PXRMDLG1",134,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",135,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J(SEQ,3)_$J("",12)_TXT
"RTN","PXRMDLG1",136,0)
 S ^TMP("PXRMDLG",$J,"IDX",SEQ,IEN)=""
"RTN","PXRMDLG1",137,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",138,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG1",139,0)
 ;Get caption
"RTN","PXRMDLG1",140,0)
 S SUB=0
"RTN","PXRMDLG1",141,0)
 F  S SUB=$O(ARRAY(1,"I",SUB)) Q:'SUB  D
"RTN","PXRMDLG1",142,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",143,0)
 .S TXT=$J("",15)_ARRAY(1,"I",SUB)
"RTN","PXRMDLG1",144,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=TXT
"RTN","PXRMDLG1",145,0)
 ;
"RTN","PXRMDLG1",146,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",147,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG1",148,0)
 S CNT=0
"RTN","PXRMDLG1",149,0)
 F  S CNT=$O(ARRAY(CNT)) Q:CNT=""  D
"RTN","PXRMDLG1",150,0)
 .S YSEQ=$J(SEQ,3)_"."_CNT,SUB=0
"RTN","PXRMDLG1",151,0)
 .;Get question
"RTN","PXRMDLG1",152,0)
 .F  S SUB=$O(ARRAY(CNT,"T",SUB)) Q:'SUB  D
"RTN","PXRMDLG1",153,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",154,0)
 ..S TXT=YSEQ_$J("",15-$L(YSEQ))_ARRAY(CNT,"T",SUB),YSEQ=""
"RTN","PXRMDLG1",155,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=TXT
"RTN","PXRMDLG1",156,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",157,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG1",158,0)
 Q
"RTN","PXRMDLG1",159,0)
 ;
"RTN","PXRMDLG1",160,0)
 ;additional prompts in the dialog file
"RTN","PXRMDLG1",161,0)
 ;-------------------------------------
"RTN","PXRMDLG1",162,0)
PROMPT(IEN,TAB,TEXT,DGRP) ;
"RTN","PXRMDLG1",163,0)
 N DATA,DDIS,DGSEQ,DSUB,DTITLE,DTXT,DTYP,SEQ,SUB
"RTN","PXRMDLG1",164,0)
 S SEQ=0
"RTN","PXRMDLG1",165,0)
 F  S SEQ=$O(^PXRMD(801.41,IEN,10,"B",SEQ)) Q:'SEQ  D
"RTN","PXRMDLG1",166,0)
 .S SUB=$O(^PXRMD(801.41,IEN,10,"B",SEQ,"")) Q:'SUB
"RTN","PXRMDLG1",167,0)
 .S DSUB=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U,2) Q:'DSUB
"RTN","PXRMDLG1",168,0)
 .S DATA=$G(^PXRMD(801.41,DSUB,0)) Q:DATA=""
"RTN","PXRMDLG1",169,0)
 .S DNAME=$P(DATA,U),DDIS=$P(DATA,U,3),DTYP=$P(DATA,U,4)
"RTN","PXRMDLG1",170,0)
 .I VIEW,('DGRP),(DTYP'="P") Q
"RTN","PXRMDLG1",171,0)
 .I ('VIEW),('DGRP),("FP"'[DTYP) Q
"RTN","PXRMDLG1",172,0)
 .S:VIEW DDIS=""
"RTN","PXRMDLG1",173,0)
 .I DTYP="F" S DNAME=DNAME_" (forced value)"
"RTN","PXRMDLG1",174,0)
 .I DGRP D
"RTN","PXRMDLG1",175,0)
 ..S DGSEQ=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U)
"RTN","PXRMDLG1",176,0)
 ..S DNAME=DGSEQ_$J("",3-$L(DGSEQ))_DNAME
"RTN","PXRMDLG1",177,0)
 .I TAB=0,DTYP="P" D
"RTN","PXRMDLG1",178,0)
 ..;Override prompt caption
"RTN","PXRMDLG1",179,0)
 ..S DTITLE=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U,6)
"RTN","PXRMDLG1",180,0)
 ..I DTITLE="" S DTITLE=$P($G(^PXRMD(801.41,DSUB,2)),U,4)
"RTN","PXRMDLG1",181,0)
 ..S DNAME=$J("",3)_DTITLE
"RTN","PXRMDLG1",182,0)
 .I TAB=0,DTYP="F" S DNAME=$J("",3)_DNAME
"RTN","PXRMDLG1",183,0)
 .S DNAME=$J("",15)_$G(TEXT)_DNAME
"RTN","PXRMDLG1",184,0)
 .S:DDIS]"" DNAME=DNAME_$J("",72-$L(DNAME))_DDIS
"RTN","PXRMDLG1",185,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",186,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=DNAME
"RTN","PXRMDLG1",187,0)
 .S TEXT=$J("",TAB)
"RTN","PXRMDLG1",188,0)
 Q
"RTN","PXRMDLG1",189,0)
 ;
"RTN","PXRMDLG1",190,0)
 ;
"RTN","PXRMDLG1",191,0)
 ;Taxonomy Questions
"RTN","PXRMDLG1",192,0)
 ;------------------
"RTN","PXRMDLG1",193,0)
TAX(FIEN,SEQ,DIEN) ;
"RTN","PXRMDLG1",194,0)
 N ARRAY,CNT,TIEN,TSEQ
"RTN","PXRMDLG1",195,0)
 S TIEN=$P(FIEN,";") Q:TIEN=""
"RTN","PXRMDLG1",196,0)
 ;Get associated codes
"RTN","PXRMDLG1",197,0)
 D TAX^PXRMDLL(TIEN,.ARRAY)
"RTN","PXRMDLG1",198,0)
 ;Taxonomy header
"RTN","PXRMDLG1",199,0)
 S TSEQ=SEQ I $L(SEQ)<3 S TSEQ=$J(SEQ,3)_"  "
"RTN","PXRMDLG1",200,0)
 S CNT=0,VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",201,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=TSEQ_$J("",15-$L(TSEQ))_ARRAY
"RTN","PXRMDLG1",202,0)
 S ^TMP("PXRMDLG",$J,"IDX",SEQ,DIEN)=""
"RTN","PXRMDLG1",203,0)
 ;Dialog and Procedure entries
"RTN","PXRMDLG1",204,0)
 F  S CNT=$O(ARRAY(CNT)) Q:CNT=""  D
"RTN","PXRMDLG1",205,0)
 .S TSEQ=$J(SEQ,3)_"."_CNT
"RTN","PXRMDLG1",206,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",207,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=TSEQ_$J("",15-$L(TSEQ))_$P(ARRAY(CNT),U)
"RTN","PXRMDLG1",208,0)
 .D CODES($P(ARRAY(CNT),U,2),TIEN)
"RTN","PXRMDLG1",209,0)
 .;Get additional prompts (from finding parameter file)
"RTN","PXRMDLG1",210,0)
 .D TPROMPT(ARRAY(CNT),0,"")
"RTN","PXRMDLG1",211,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",212,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG1",213,0)
 Q
"RTN","PXRMDLG1",214,0)
 ;
"RTN","PXRMDLG1",215,0)
 ;additional prompts for a taxonomy
"RTN","PXRMDLG1",216,0)
 ;---------------------------------
"RTN","PXRMDLG1",217,0)
TPROMPT(DATA,TAB,TEXT) ;
"RTN","PXRMDLG1",218,0)
 N FNODE,FTYP,RSUB,SEQ,DSUB,DTXT,DTYP
"RTN","PXRMDLG1",219,0)
 ;Finding type
"RTN","PXRMDLG1",220,0)
 S FTYP=$P(DATA,U,4) Q:FTYP=""
"RTN","PXRMDLG1",221,0)
 ;Get parameter file node for this finding type
"RTN","PXRMDLG1",222,0)
 S FNODE=$O(^PXRMD(801.45,"B",FTYP,"")) Q:FNODE=""
"RTN","PXRMDLG1",223,0)
 ;Resolution type
"RTN","PXRMDLG1",224,0)
 S RSUB=$P(DATA,U,3) Q:'RSUB
"RTN","PXRMDLG1",225,0)
 ;Get details from  parameter file 
"RTN","PXRMDLG1",226,0)
 D FPROMPT(FNODE,RSUB,CNT,.ARRAY)
"RTN","PXRMDLG1",227,0)
 S SEQ=0
"RTN","PXRMDLG1",228,0)
 F  S SEQ=$O(ARRAY(CNT,SEQ)) Q:'SEQ  D
"RTN","PXRMDLG1",229,0)
 .S DSUB=ARRAY(CNT,SEQ) Q:'DSUB
"RTN","PXRMDLG1",230,0)
 .S DNAME=$P($G(^PXRMD(801.41,DSUB,0)),U)
"RTN","PXRMDLG1",231,0)
 .S DTYP=$P($G(^PXRMD(801.41,DSUB,0)),U,4)
"RTN","PXRMDLG1",232,0)
 .I DTYP="F" S DNAME=DNAME_" (forced value)"
"RTN","PXRMDLG1",233,0)
 .I TAB=0,DTYP="F" S DNAME=$J("",3)_DNAME
"RTN","PXRMDLG1",234,0)
 .I TAB=0,DTYP="P" S DNAME=$J("",3)_$P($G(^PXRMD(801.41,DSUB,2)),U,4)
"RTN","PXRMDLG1",235,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",236,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_$G(TEXT)_DNAME
"RTN","PXRMDLG1",237,0)
 .S TEXT=$J("",TAB)
"RTN","PXRMDLG1",238,0)
 Q
"RTN","PXRMDLG2")
0^182^B13714087
"RTN","PXRMDLG2",1,0)
PXRMDLG2 ; SLC/PJH - Reminder Dialog Edit/Inquiry ;05/08/2000
"RTN","PXRMDLG2",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDLG2",3,0)
 ;
"RTN","PXRMDLG2",4,0)
 ;Find description for dialog type
"RTN","PXRMDLG2",5,0)
LIT(INP) ;
"RTN","PXRMDLG2",6,0)
 Q:INP="G" "Dialog group: "
"RTN","PXRMDLG2",7,0)
 Q:INP="F" "Forced value: "
"RTN","PXRMDLG2",8,0)
 Q:INP="P" "Prompt: "
"RTN","PXRMDLG2",9,0)
 Q:INP="E" "Dialog element: "
"RTN","PXRMDLG2",10,0)
 Q "???"
"RTN","PXRMDLG2",11,0)
 ;
"RTN","PXRMDLG2",12,0)
 ;Additional Findings
"RTN","PXRMDLG2",13,0)
ADD(DIEN) ;
"RTN","PXRMDLG2",14,0)
 N FIND,FSUB,FTYP,FNAME,FNUM
"RTN","PXRMDLG2",15,0)
 S FSUB=0
"RTN","PXRMDLG2",16,0)
 F  S FSUB=$O(^PXRMD(801.41,DIEN,3,FSUB)) Q:'FSUB  D
"RTN","PXRMDLG2",17,0)
 .S FIND=$P($G(^PXRMD(801.41,DIEN,3,FSUB,0)),U) Q:FIND=""
"RTN","PXRMDLG2",18,0)
 .S FNAME="" D DESC(FIND) Q:FNAME=""
"RTN","PXRMDLG2",19,0)
 .S FNAME="Additional Finding: "_FNAME
"RTN","PXRMDLG2",20,0)
 .;Save additional finding name
"RTN","PXRMDLG2",21,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG2",22,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_FNAME
"RTN","PXRMDLG2",23,0)
 Q
"RTN","PXRMDLG2",24,0)
 ;Finding description
"RTN","PXRMDLG2",25,0)
DESC(FIEN) ;
"RTN","PXRMDLG2",26,0)
 ;Determine finding type
"RTN","PXRMDLG2",27,0)
 S FGLOB=$P(FIEN,";",2) Q:FGLOB=""
"RTN","PXRMDLG2",28,0)
 S FITEM=$P(FIEN,";") Q:FITEM=""
"RTN","PXRMDLG2",29,0)
 ;Diagnosis POV
"RTN","PXRMDLG2",30,0)
 I FGLOB["ICD9" D  Q
"RTN","PXRMDLG2",31,0)
 .S FTYP="DIAGNOSIS",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG2",32,0)
 .S FNAME=$P($G(@FGLOB),U,3)_" ["_FITEM_"]"
"RTN","PXRMDLG2",33,0)
 ;Procedure CPT
"RTN","PXRMDLG2",34,0)
 I FGLOB["ICPT" D  Q
"RTN","PXRMDLG2",35,0)
 .S FTYP="PROCEDURE",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG2",36,0)
 .S FNAME=$P($G(@FGLOB),U,2)_" ["_FITEM_"]"
"RTN","PXRMDLG2",37,0)
 ;Quick order
"RTN","PXRMDLG2",38,0)
 I FGLOB["ORD(101.41" D  Q
"RTN","PXRMDLG2",39,0)
 .S FTYP="QUICK ORDER",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG2",40,0)
 .S FNAME=$P($G(@FGLOB),U,2)_" ["_FITEM_"]"
"RTN","PXRMDLG2",41,0)
 ;Short name for finding type
"RTN","PXRMDLG2",42,0)
 S FTYP=$G(DEF1(FGLOB)) Q:FTYP=""
"RTN","PXRMDLG2",43,0)
 S FNUM=" ["_FTYP_"("_FITEM_")]"
"RTN","PXRMDLG2",44,0)
 ;Long name
"RTN","PXRMDLG2",45,0)
 S FTYP=$G(DEF2(FTYP))
"RTN","PXRMDLG2",46,0)
 S FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG2",47,0)
 S FNAME=$P($G(@FGLOB),U,1)
"RTN","PXRMDLG2",48,0)
 I FNAME="" S FNAME=$P($G(@FGLOB),U)
"RTN","PXRMDLG2",49,0)
 I FNAME]"" S FNAME=FNAME_FNUM Q
"RTN","PXRMDLG2",50,0)
 S FNAME=FITEM
"RTN","PXRMDLG2",51,0)
 Q
"RTN","PXRMDLG2",52,0)
 ;
"RTN","PXRMDLG2",53,0)
 ;Dialog Details (DD)
"RTN","PXRMDLG2",54,0)
DETAIL(PIEN) ;
"RTN","PXRMDLG2",55,0)
 ;Get prompt data
"RTN","PXRMDLG2",56,0)
 S DATA=$G(^PXRMD(801.41,PIEN,0))
"RTN","PXRMDLG2",57,0)
 ;Extract name, type and disabled
"RTN","PXRMDLG2",58,0)
 S PNAME=$P(DATA,U),PDIS=$P(DATA,U,3),PTYP=$P(DATA,U,4),PTYP=$$LIT(PTYP)
"RTN","PXRMDLG2",59,0)
 ;Result (if any)
"RTN","PXRMDLG2",60,0)
 S RESULT=$P(DATA,U,15)
"RTN","PXRMDLG2",61,0)
 I RESULT S RESNM=$P($G(^PXRMD(801.41,RESULT,0)),U)
"RTN","PXRMDLG2",62,0)
 ;Get Resolution/Finding details
"RTN","PXRMDLG2",63,0)
 S DATA=$G(^PXRMD(801.41,PIEN,1)),RIEN=$P(DATA,U,3),FIEN=$P(DATA,U,5)
"RTN","PXRMDLG2",64,0)
 ;Resolution status name (assume this is a set)
"RTN","PXRMDLG2",65,0)
 S RNAME="???"
"RTN","PXRMDLG2",66,0)
 I RIEN S RNAME=$P($G(^PXRMD(801.9,RIEN,0)),U) S:RNAME="" RNAME="???"
"RTN","PXRMDLG2",67,0)
 ;Set Default display values
"RTN","PXRMDLG2",68,0)
 S FNAME="???",FTYP="???",ONAME="???"
"RTN","PXRMDLG2",69,0)
 ;For quick orders get the orderable item
"RTN","PXRMDLG2",70,0)
 I RNAME="ORDERED" D
"RTN","PXRMDLG2",71,0)
 .S FTYP="QUICK ORDER",FNAME="*QUICK ORDER MISSING*"
"RTN","PXRMDLG2",72,0)
 .S OIEN=$P($G(^PXRMD(801.41,PIEN,1)),U,7) Q:'OIEN
"RTN","PXRMDLG2",73,0)
 .S FGLOB="^ORD(101.43,"_OIEN_",0)"
"RTN","PXRMDLG2",74,0)
 .S ONAME=$P($G(@FGLOB),U)_" ["_OIEN_"]"
"RTN","PXRMDLG2",75,0)
 ;Description of finding
"RTN","PXRMDLG2",76,0)
 D DESC(FIEN)
"RTN","PXRMDLG2",77,0)
 ;
"RTN","PXRMDLG2",78,0)
 S RNAME="Resolution: "_RNAME
"RTN","PXRMDLG2",79,0)
 S FTYP="Finding type: "_FTYP
"RTN","PXRMDLG2",80,0)
 S FNAME="Finding item: "_FNAME
"RTN","PXRMDLG2",81,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLG2",82,0)
 S PTXT=$J(SEQ,3)_$J("",12)_PTYP_PNAME
"RTN","PXRMDLG2",83,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=PTXT_$J("",72-$L(PTXT))_PDIS
"RTN","PXRMDLG2",84,0)
 S ^TMP("PXRMDLG",$J,"IDX",SEQ,PIEN)=""
"RTN","PXRMDLG2",85,0)
 ;Save resolution
"RTN","PXRMDLG2",86,0)
 I ('DGRP),(FTYP'["TAXONOMY"),(FTYP'["MENTAL HEALTH") D
"RTN","PXRMDLG2",87,0)
 .I RNAME'["???" D
"RTN","PXRMDLG2",88,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLG2",89,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_RNAME
"RTN","PXRMDLG2",90,0)
 .I FTYP["QUICK ORDER" D
"RTN","PXRMDLG2",91,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLG2",92,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_"Orderable item: "_ONAME
"RTN","PXRMDLG2",93,0)
 I ('DGRP) D
"RTN","PXRMDLG2",94,0)
 .;Save finding type
"RTN","PXRMDLG2",95,0)
 .I FTYP'["???" D
"RTN","PXRMDLG2",96,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLG2",97,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_FTYP
"RTN","PXRMDLG2",98,0)
 ;Save finding name
"RTN","PXRMDLG2",99,0)
 I ('DGRP),(FNAME'["???") D
"RTN","PXRMDLG2",100,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG2",101,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_FNAME
"RTN","PXRMDLG2",102,0)
 ;Additional Findings
"RTN","PXRMDLG2",103,0)
 I (FTYP'["TAXONOMY"),(FTYP'["MENTAL HEALTH") D ADD(PIEN)
"RTN","PXRMDLG2",104,0)
 ;Result group/element (mental health)
"RTN","PXRMDLG2",105,0)
 I RESULT D
"RTN","PXRMDLG2",106,0)
 .;Save result details
"RTN","PXRMDLG2",107,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG2",108,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_"Result name: "_RESNM
"RTN","PXRMDLG2",109,0)
 ;Get additional prompts/dialog group elements
"RTN","PXRMDLG2",110,0)
 D PROMPT^PXRMDLG1(PIEN,20,DHED,DGRP)
"RTN","PXRMDLG2",111,0)
 Q
"RTN","PXRMDLGH")
0^174^B22294169
"RTN","PXRMDLGH",1,0)
PXRMDLGH ; SLC/PJH - Reminder Dialog History ;03/09/2000
"RTN","PXRMDLGH",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDLGH",3,0)
 ;
"RTN","PXRMDLGH",4,0)
 ;Called from PXRMDLGZ
"RTN","PXRMDLGH",5,0)
 ;
"RTN","PXRMDLGH",6,0)
START(PXRMITEM,PXRMDIEN,PXRMNAM) ;
"RTN","PXRMDLGH",7,0)
 N PXRMLINK,PXRMREAD,PXRMSRC,PXRMVARM
"RTN","PXRMDLGH",8,0)
 N VALM,VALMAR,VALMBCK,VALMBG,VALMCNT,VALMHDR,VALMSG,X,XMZ
"RTN","PXRMDLGH",9,0)
 S X="IORESET",PXRMLINK=$P($G(^PXD(811.9,PXRMITEM,51)),U),PXRMDIEN=""
"RTN","PXRMDLGH",10,0)
 D ENDR^%ZISS,EN^VALM("PXRM DIALOG HISTORY")
"RTN","PXRMDLGH",11,0)
 W IORESET
"RTN","PXRMDLGH",12,0)
 D KILL^%ZISS
"RTN","PXRMDLGH",13,0)
 Q
"RTN","PXRMDLGH",14,0)
 ;
"RTN","PXRMDLGH",15,0)
 ;Labels called from list 'PXRM DIALOG HISTORY'
"RTN","PXRMDLGH",16,0)
 ;
"RTN","PXRMDLGH",17,0)
EXIT ;Exit code
"RTN","PXRMDLGH",18,0)
 D CLEAN^VALM10,FULL^VALM1
"RTN","PXRMDLGH",19,0)
 S VALMBCK="Q"
"RTN","PXRMDLGH",20,0)
 K ^TMP("PXRMDLGH",$J)
"RTN","PXRMDLGH",21,0)
 Q
"RTN","PXRMDLGH",22,0)
 ;
"RTN","PXRMDLGH",23,0)
HDR ; Header code
"RTN","PXRMDLGH",24,0)
 S VALMHDR(1)=PXRMHD
"RTN","PXRMDLGH",25,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMDLGH",26,0)
 Q
"RTN","PXRMDLGH",27,0)
 ;
"RTN","PXRMDLGH",28,0)
HELP ;Help code
"RTN","PXRMDLGH",29,0)
 N ORU,ORUPRMT,XQORM,PXRMTAG
"RTN","PXRMDLGH",30,0)
 S PXRMTAG="GDLGH"
"RTN","PXRMDLGH",31,0)
 D EN^VALM("PXRM DIALOG MAIN HELP")
"RTN","PXRMDLGH",32,0)
 Q
"RTN","PXRMDLGH",33,0)
 ;
"RTN","PXRMDLGH",34,0)
INIT ;Init
"RTN","PXRMDLGH",35,0)
 S VALMCNT=0
"RTN","PXRMDLGH",36,0)
 ;Get linked dialog
"RTN","PXRMDLGH",37,0)
 S PXRMLINK=$P($G(^PXD(811.9,PXRMITEM,51)),U)
"RTN","PXRMDLGH",38,0)
 ;Allow element selection
"RTN","PXRMDLGH",39,0)
 S PXRMOPT=1
"RTN","PXRMDLGH",40,0)
 ;Load details of reminder dialog
"RTN","PXRMDLGH",41,0)
 D BUILD(PXRMITEM,PXRMLINK)
"RTN","PXRMDLGH",42,0)
 ;Reset Menu
"RTN","PXRMDLGH",43,0)
 D XQORM
"RTN","PXRMDLGH",44,0)
 Q
"RTN","PXRMDLGH",45,0)
 ;
"RTN","PXRMDLGH",46,0)
PEXIT ;PXRM DIALOG HISTORY MENU protocol exit code
"RTN","PXRMDLGH",47,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMDLGH",48,0)
 D XQORM
"RTN","PXRMDLGH",49,0)
 Q
"RTN","PXRMDLGH",50,0)
 ;
"RTN","PXRMDLGH",51,0)
 ;Other Subroutines
"RTN","PXRMDLGH",52,0)
 ;
"RTN","PXRMDLGH",53,0)
 ;Build workfile (Entry action for protocol PXRM DIALOG HISTORY)
"RTN","PXRMDLGH",54,0)
BUILD(PXRMITEM,PXRMLINK) ;
"RTN","PXRMDLGH",55,0)
 ;
"RTN","PXRMDLGH",56,0)
 N ARRAY,DARRAY,DDAT,DIEN,DNAM,DSEQ,FIRST,HDR,RIEN,RNAM,TXT
"RTN","PXRMDLGH",57,0)
 ;Clear existing file
"RTN","PXRMDLGH",58,0)
 S VALMCNT=0,VALMBCK="R",FIRST=1,DSEQ=0 K ^TMP("PXRMDLG",$J)
"RTN","PXRMDLGH",59,0)
 ;Get the linked dialog first
"RTN","PXRMDLGH",60,0)
 I PXRMLINK D
"RTN","PXRMDLGH",61,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLGH",62,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLGH",63,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLGH",64,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)="This reminder is linked to dialog:"
"RTN","PXRMDLGH",65,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLGH",66,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLGH",67,0)
 .D SET(PXRMITEM,PXRMLINK)
"RTN","PXRMDLGH",68,0)
 .;Get list of other reminders and display
"RTN","PXRMDLGH",69,0)
 .D OTHER(PXRMLINK),OLST("")
"RTN","PXRMDLGH",70,0)
 ;
"RTN","PXRMDLGH",71,0)
 ;Then other dialogs generated from this reminder (ALPHA order)
"RTN","PXRMDLGH",72,0)
 S DIEN=""
"RTN","PXRMDLGH",73,0)
 F  S DIEN=$O(^PXRMD(801.41,"AG",PXRMITEM,DIEN)) Q:'DIEN  D
"RTN","PXRMDLGH",74,0)
 .Q:DIEN=PXRMLINK
"RTN","PXRMDLGH",75,0)
 .S DNAM=$P($G(^PXRMD(801.41,DIEN,0)),U) Q:DNAM=""
"RTN","PXRMDLGH",76,0)
 .S DARRAY(DNAM)=DIEN
"RTN","PXRMDLGH",77,0)
 ;
"RTN","PXRMDLGH",78,0)
 S DNAM="",HDR=1
"RTN","PXRMDLGH",79,0)
 F  S DNAM=$O(DARRAY(DNAM)) Q:DNAM=""  D
"RTN","PXRMDLGH",80,0)
 .S DIEN=DARRAY(DNAM) Q:'DIEN
"RTN","PXRMDLGH",81,0)
 .S RIEN=$P($G(^PXD(811.9,DIEN,51)),U),FIRST=1
"RTN","PXRMDLGH",82,0)
 .;Get list of other reminders
"RTN","PXRMDLGH",83,0)
 .D OTHER(DIEN)
"RTN","PXRMDLGH",84,0)
 .;Other dialogs header
"RTN","PXRMDLGH",85,0)
 .I HDR D
"RTN","PXRMDLGH",86,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLGH",87,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLGH",88,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLGH",89,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)="Other dialogs generated from this reminder:"
"RTN","PXRMDLGH",90,0)
 ..S VALMCNT=VALMCNT+1,HDR=0
"RTN","PXRMDLGH",91,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLGH",92,0)
 .;If this reminder isn't linked display the one that is
"RTN","PXRMDLGH",93,0)
 .I 'RIEN D
"RTN","PXRMDLGH",94,0)
 ..N RNAM
"RTN","PXRMDLGH",95,0)
 ..S RNAM=$O(ARRAY("")) Q:RNAM=""
"RTN","PXRMDLGH",96,0)
 ..S RIEN=$G(ARRAY(RNAM)) S:RIEN FIRST=0
"RTN","PXRMDLGH",97,0)
 .;Dialog detail
"RTN","PXRMDLGH",98,0)
 .D SET(RIEN,DIEN)
"RTN","PXRMDLGH",99,0)
 .;Additional reminder detail
"RTN","PXRMDLGH",100,0)
 .S:FIRST RIEN="" D OLST(RIEN)
"RTN","PXRMDLGH",101,0)
 ;
"RTN","PXRMDLGH",102,0)
 I VALMCNT=0 D
"RTN","PXRMDLGH",103,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLGH",104,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)="    * NO DIALOGS DEFINED *"
"RTN","PXRMDLGH",105,0)
 ;
"RTN","PXRMDLGH",106,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLGH",107,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLGH",108,0)
 S ^TMP("PXRMDLG",$J,"VALMCNT")=VALMCNT
"RTN","PXRMDLGH",109,0)
 ;
"RTN","PXRMDLGH",110,0)
 Q
"RTN","PXRMDLGH",111,0)
 ;
"RTN","PXRMDLGH",112,0)
OTHER(DIEN) ;Other reminders linked to this dialog
"RTN","PXRMDLGH",113,0)
 N DLG,DNAM,RNAM,RSUB
"RTN","PXRMDLGH",114,0)
 ;Linked reminders
"RTN","PXRMDLGH",115,0)
 S RNAM="" K ARRAY
"RTN","PXRMDLGH",116,0)
 F  S RNAM=$O(^PXD(811.9,"B",RNAM)) Q:RNAM=""  D
"RTN","PXRMDLGH",117,0)
 .S RSUB=$O(^PXD(811.9,"B",RNAM,"")) Q:'RSUB
"RTN","PXRMDLGH",118,0)
 .S DLG=$P($G(^PXD(811.9,RSUB,51)),U) Q:DLG'=DIEN
"RTN","PXRMDLGH",119,0)
 .S RNAM=$P($G(^PXD(811.9,RSUB,0)),U) Q:RNAM=""
"RTN","PXRMDLGH",120,0)
 .S ARRAY(RNAM)=RSUB
"RTN","PXRMDLGH",121,0)
 Q
"RTN","PXRMDLGH",122,0)
 ;
"RTN","PXRMDLGH",123,0)
OLST(REM) ;List Other Reminders
"RTN","PXRMDLGH",124,0)
 N RNAM
"RTN","PXRMDLGH",125,0)
 S RNAM=""
"RTN","PXRMDLGH",126,0)
 F  S RNAM=$O(ARRAY(RNAM)) Q:RNAM=""  D
"RTN","PXRMDLGH",127,0)
 .Q:ARRAY(RNAM)=REM  Q:ARRAY(RNAM)=PXRMITEM
"RTN","PXRMDLGH",128,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLGH",129,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",59)_RNAM
"RTN","PXRMDLGH",130,0)
 Q
"RTN","PXRMDLGH",131,0)
 ;
"RTN","PXRMDLGH",132,0)
SET(RIEN,DIEN) ;
"RTN","PXRMDLGH",133,0)
 N RNAM,DNAM,DDAT
"RTN","PXRMDLGH",134,0)
 S RNAM="*NONE*",DSEQ=DSEQ+1
"RTN","PXRMDLGH",135,0)
 ;Dialog details
"RTN","PXRMDLGH",136,0)
 S DNAM=$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMDLGH",137,0)
 S DDAT=$P($G(^PXRMD(801.41,DIEN,99)),U,1)
"RTN","PXRMDLGH",138,0)
 S:DDAT="" DDAT=$P($G(^PXRMD(801.41,DIEN,99)),U,2)
"RTN","PXRMDLGH",139,0)
 S DDAT=$$FMTE^XLFDT(DDAT,"1D")
"RTN","PXRMDLGH",140,0)
 ;Reminder details
"RTN","PXRMDLGH",141,0)
 I RIEN D
"RTN","PXRMDLGH",142,0)
 .S RNAM=$P($G(^PXD(811.9,RIEN,0)),U)
"RTN","PXRMDLGH",143,0)
 ;Update display
"RTN","PXRMDLGH",144,0)
 S TXT=$J(DSEQ,4)_"  "_$E(DNAM,1,32)_$J("",32-$L(DNAM))
"RTN","PXRMDLGH",145,0)
 S TXT=TXT_" "_DDAT_$J("",20-$L(DDAT))_RNAM
"RTN","PXRMDLGH",146,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLGH",147,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=TXT
"RTN","PXRMDLGH",148,0)
 S ^TMP("PXRMDLG",$J,"IDX",DSEQ,DIEN)=""
"RTN","PXRMDLGH",149,0)
 Q
"RTN","PXRMDLGH",150,0)
 ;
"RTN","PXRMDLGH",151,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM SELECTION ITEM",0))_U_"1:"_VALMCNT
"RTN","PXRMDLGH",152,0)
 S XQORM("A")="Select Item: "
"RTN","PXRMDLGH",153,0)
 Q
"RTN","PXRMDLGX")
1^169
"RTN","PXRMDLGY")
1^170
"RTN","PXRMDLGZ")
0^173^B35338101
"RTN","PXRMDLGZ",1,0)
PXRMDLGZ ; SLC/PJH - Link reminder to dialog. ;04/04/2000
"RTN","PXRMDLGZ",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDLGZ",3,0)
 ;
"RTN","PXRMDLGZ",4,0)
 ;Called by option PXRM DIALOG/COMPONENT EDIT
"RTN","PXRMDLGZ",5,0)
 ;
"RTN","PXRMDLGZ",6,0)
START N BY,DATA,DDES,DHD,DIC,DNAM,DTYP,FLDS,FR,L,LOGIC,NOW,PNAM,TO,Y
"RTN","PXRMDLGZ",7,0)
 N PXRMBG,PXRMHD,PXRMDIEN,PXRMGTYP,PXRMDTYP,PXRMITEM,PXRMMODE,PXRMNAME
"RTN","PXRMDLGZ",8,0)
 N PXRMOPT,PXRMTEMP,PXRMTITL,PXRMVIEW
"RTN","PXRMDLGZ",9,0)
 ;Refresh on return
"RTN","PXRMDLGZ",10,0)
 S VALMBCK="R"
"RTN","PXRMDLGZ",11,0)
 ;Default is display dialog elements
"RTN","PXRMDLGZ",12,0)
 S PXRMDTYP="R",PXRMGTYP="DLGR",PXRMOPT=0,PXRMVIEW="AN"
"RTN","PXRMDLGZ",13,0)
 ;Select dialog for display
"RTN","PXRMDLGZ",14,0)
 F  D  Q:'PXRMTEMP
"RTN","PXRMDLGZ",15,0)
 .S PXRMTEMP=""
"RTN","PXRMDLGZ",16,0)
 .D START^PXRMSEL(.PXRMHD,.PXRMGTYP,"PXRMTEMP") Q:'PXRMTEMP
"RTN","PXRMDLGZ",17,0)
 .N X S X="IORESET"
"RTN","PXRMDLGZ",18,0)
 .D ENDR^%ZISS,@(PXRMGTYP_"("_PXRMTEMP_")")
"RTN","PXRMDLGZ",19,0)
END Q
"RTN","PXRMDLGZ",20,0)
 ;
"RTN","PXRMDLGZ",21,0)
 ;Reminder View
"RTN","PXRMDLGZ",22,0)
 ;-------------
"RTN","PXRMDLGZ",23,0)
DLGR(PXRMITEM) ;
"RTN","PXRMDLGZ",24,0)
 N PXRMDIEN
"RTN","PXRMDLGZ",25,0)
 ;Format headings to include reminder and name
"RTN","PXRMDLGZ",26,0)
 S DATA=$G(^PXD(811.9,PXRMITEM,0)),RNAM=$P(DATA,U),PNAM=$P(DATA,U,3)
"RTN","PXRMDLGZ",27,0)
 S PXRMHD="REMINDER NAME: "_RNAM
"RTN","PXRMDLGZ",28,0)
 ;
"RTN","PXRMDLGZ",29,0)
 ;Dialog History
"RTN","PXRMDLGZ",30,0)
 F  D  Q:'PXRMDIEN
"RTN","PXRMDLGZ",31,0)
 .D START^PXRMDLGH(PXRMITEM,.PXRMDIEN,"PXRMDIEN") Q:'PXRMDIEN
"RTN","PXRMDLGZ",32,0)
 .N PXRMHD,VALMBCK,VALMBG,VALMSG,X,XMZ
"RTN","PXRMDLGZ",33,0)
 .S DNAM=$P($G(^PXRMD(801.41,PXRMDIEN,0)),U)
"RTN","PXRMDLGZ",34,0)
 .I $P($G(^PXRMD(801.41,PXRMDIEN,0)),U,3)]"" S DNAM=DNAM_" (DISABLED)"
"RTN","PXRMDLGZ",35,0)
 .S PXRMHD="REMINDER DIALOG NAME: "_DNAM
"RTN","PXRMDLGZ",36,0)
 .S X="IORESET"
"RTN","PXRMDLGZ",37,0)
 .D ENDR^%ZISS,EN^VALM("PXRM DIALOG LIST")
"RTN","PXRMDLGZ",38,0)
 .W IORESET
"RTN","PXRMDLGZ",39,0)
 .D KILL^%ZISS
"RTN","PXRMDLGZ",40,0)
 Q
"RTN","PXRMDLGZ",41,0)
 ;
"RTN","PXRMDLGZ",42,0)
 ;Edit element/prompt/group
"RTN","PXRMDLGZ",43,0)
 ;-------------------------
"RTN","PXRMDLGZ",44,0)
DLGE(PXRMDIEN) ;
"RTN","PXRMDLGZ",45,0)
 S PXRMHD="Dialog Name: ",PXRMDIEN=PXRMTEMP
"RTN","PXRMDLGZ",46,0)
 ;Format headings to include dialog name
"RTN","PXRMDLGZ",47,0)
 S DATA=$G(^PXRMD(801.41,PXRMDIEN,0)),DDES=$P(DATA,U),DTYP=$P(DATA,U,4)
"RTN","PXRMDLGZ",48,0)
 S PXRMHD=PXRMHD_" "_DDES W PXRMHD,!
"RTN","PXRMDLGZ",49,0)
 ;Edit selected dialog
"RTN","PXRMDLGZ",50,0)
 D EDIT^PXRMDEDT(DTYP,PXRMDIEN)
"RTN","PXRMDLGZ",51,0)
 Q
"RTN","PXRMDLGZ",52,0)
 ;
"RTN","PXRMDLGZ",53,0)
 ;Reminder dialog view
"RTN","PXRMDLGZ",54,0)
 ;--------------------
"RTN","PXRMDLGZ",55,0)
DLG(PXRMDIEN) ;
"RTN","PXRMDLGZ",56,0)
 S PXRMDIEN=PXRMTEMP
"RTN","PXRMDLGZ",57,0)
 S PXRMNAME=$P($G(^PXRMD(801.41,PXRMDIEN,0)),U)
"RTN","PXRMDLGZ",58,0)
 S PXRMITEM=$P($G(^PXRMD(801.41,PXRMDIEN,0)),U,2)
"RTN","PXRMDLGZ",59,0)
 ;Format headings to include dialog name
"RTN","PXRMDLGZ",60,0)
 S PXRMHD=PXRMHD_PXRMNAME
"RTN","PXRMDLGZ",61,0)
 ;Check if the set is disable and add to header if disabled
"RTN","PXRMDLGZ",62,0)
 I $P(^PXRMD(801.41,PXRMDIEN,0),U,3)]"" S PXRMHD=PXRMHD_" (DISABLED)"
"RTN","PXRMDLGZ",63,0)
 ;Listman option
"RTN","PXRMDLGZ",64,0)
 D EN^VALM("PXRM DIALOG LIST")
"RTN","PXRMDLGZ",65,0)
 W IORESET
"RTN","PXRMDLGZ",66,0)
 D KILL^%ZISS
"RTN","PXRMDLGZ",67,0)
 Q
"RTN","PXRMDLGZ",68,0)
 ;
"RTN","PXRMDLGZ",69,0)
 ;Other subroutines
"RTN","PXRMDLGZ",70,0)
 ;
"RTN","PXRMDLGZ",71,0)
 ;Ask update or no
"RTN","PXRMDLGZ",72,0)
 ;----------------
"RTN","PXRMDLGZ",73,0)
ASK(YESNO) ;
"RTN","PXRMDLGZ",74,0)
 N X,Y,TEXT,DIR
"RTN","PXRMDLGZ",75,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDLGZ",76,0)
 S DIR(0)="YA0"
"RTN","PXRMDLGZ",77,0)
 S DIR("A")="LINK THIS REMINDER TO DIALOG - "_$P(PXRMHD,": ",2)_": "
"RTN","PXRMDLGZ",78,0)
 S DIR("B")="Y"
"RTN","PXRMDLGZ",79,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMDLGZ",80,0)
 S DIR("??")=U_"D HLP^PXRMDLGY(1)"
"RTN","PXRMDLGZ",81,0)
 D ^DIR K DIR
"RTN","PXRMDLGZ",82,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDLGZ",83,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDLGZ",84,0)
 S YESNO=$E(Y(0))
"RTN","PXRMDLGZ",85,0)
 Q
"RTN","PXRMDLGZ",86,0)
 ;
"RTN","PXRMDLGZ",87,0)
 ;Display dialogs autogenerated from this reminder
"RTN","PXRMDLGZ",88,0)
 ;------------------------------------------------
"RTN","PXRMDLGZ",89,0)
DISP(RIEN) ;
"RTN","PXRMDLGZ",90,0)
 N ARRAY,DSUB,FIRST
"RTN","PXRMDLGZ",91,0)
 ;Get OTHER dialogs
"RTN","PXRMDLGZ",92,0)
 S FIRST=1,DSUB=""
"RTN","PXRMDLGZ",93,0)
 F  S DSUB=$O(^PXRMD(801.41,"AG",RIEN,DSUB)) Q:'DSUB  D
"RTN","PXRMDLGZ",94,0)
 .W !
"RTN","PXRMDLGZ",95,0)
 .D:FIRST
"RTN","PXRMDLGZ",96,0)
 ..W "DIALOGS ALREADY GENERATED FROM THIS REMINDER:",!! S FIRST=0
"RTN","PXRMDLGZ",97,0)
 .W ?20,$P($G(^PXRMD(801.41,DSUB,0)),U)
"RTN","PXRMDLGZ",98,0)
 ;
"RTN","PXRMDLGZ",99,0)
 I 'FIRST W !
"RTN","PXRMDLGZ",100,0)
 ;
"RTN","PXRMDLGZ",101,0)
 Q
"RTN","PXRMDLGZ",102,0)
 ;
"RTN","PXRMDLGZ",103,0)
 ;Display linked reminders
"RTN","PXRMDLGZ",104,0)
 ;------------------------
"RTN","PXRMDLGZ",105,0)
DISPL(DIEN) ;
"RTN","PXRMDLGZ",106,0)
 N ARRAY,DLG,RSUB,FIRST,RNAM
"RTN","PXRMDLGZ",107,0)
 S RSUB=$P($G(^PXRMD(801.41,DIEN,0)),U,2)
"RTN","PXRMDLGZ",108,0)
 I RSUB W !!,"SOURCE REMINDER: "_$P($G(^PXD(811.9,RSUB,0)),U)
"RTN","PXRMDLGZ",109,0)
 ;Linked reminders
"RTN","PXRMDLGZ",110,0)
 S FIRST=1,RNAM=""
"RTN","PXRMDLGZ",111,0)
 F  S RNAM=$O(^PXD(811.9,"B",RNAM)) Q:RNAM=""  D
"RTN","PXRMDLGZ",112,0)
 .S RSUB=$O(^PXD(811.9,"B",RNAM,"")) Q:'RSUB
"RTN","PXRMDLGZ",113,0)
 .S DLG=$P($G(^PXD(811.9,RSUB,51)),U) Q:DLG'=DIEN
"RTN","PXRMDLGZ",114,0)
 .W ! I FIRST W !,"REMINDERS ALREADY LINKED TO THIS DIALOG:",!! S FIRST=0
"RTN","PXRMDLGZ",115,0)
 .W ?18,$P($G(^PXD(811.9,RSUB,0)),U)
"RTN","PXRMDLGZ",116,0)
 Q
"RTN","PXRMDLGZ",117,0)
 ;
"RTN","PXRMDLGZ",118,0)
 ;Link a dialog (called by protocol PXRM DIALOG/REMINDER LINK)
"RTN","PXRMDLGZ",119,0)
 ;-------------
"RTN","PXRMDLGZ",120,0)
LINK(DIEN) ;
"RTN","PXRMDLGZ",121,0)
 F  D  Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDLGZ",122,0)
 .W IORESET
"RTN","PXRMDLGZ",123,0)
 .S VALMBCK="R"
"RTN","PXRMDLGZ",124,0)
 .;Display linked reminders
"RTN","PXRMDLGZ",125,0)
 .D DISPL(DIEN)
"RTN","PXRMDLGZ",126,0)
 .;
"RTN","PXRMDLGZ",127,0)
 .N ANS,DIC,DIR,DLG,LIT1,PNAME,PXRMREM,REM
"RTN","PXRMDLGZ",128,0)
 .S DIC("A")="SELECT A REMINDER TO LINK OR CHANGE: "
"RTN","PXRMDLGZ",129,0)
 .S LIT1="You must select a reminder!"
"RTN","PXRMDLGZ",130,0)
 .D SEL(811.9,"AEQMZ",.PXRMREM)
"RTN","PXRMDLGZ",131,0)
 .Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDLGZ",132,0)
 .S REM=$P(PXRMREM(1),U),PNAME=$P(PXRMREM(1),U,3)
"RTN","PXRMDLGZ",133,0)
 .I PNAME]"" W !!,"REMINDER PRINT NAME: "_PNAME,!
"RTN","PXRMDLGZ",134,0)
 .;Display related dialogs
"RTN","PXRMDLGZ",135,0)
 .D DISP(REM)
"RTN","PXRMDLGZ",136,0)
 .;Check if already linked
"RTN","PXRMDLGZ",137,0)
 .S DLG=$P($G(^PXD(811.9,REM,51)),U)
"RTN","PXRMDLGZ",138,0)
 .;Reconfirm to link reminder
"RTN","PXRMDLGZ",139,0)
 .I 'DLG S ANS="" D ASK(.ANS) Q:ANS'="Y"
"RTN","PXRMDLGZ",140,0)
 .;
"RTN","PXRMDLGZ",141,0)
 .N DA,DR,DIE
"RTN","PXRMDLGZ",142,0)
 .;Edit selected reminder
"RTN","PXRMDLGZ",143,0)
 .S DA=REM
"RTN","PXRMDLGZ",144,0)
 .;Settup local variables
"RTN","PXRMDLGZ",145,0)
 .S DIE="^PXD(811.9,",DR=51
"RTN","PXRMDLGZ",146,0)
 .;If no link force entry
"RTN","PXRMDLGZ",147,0)
 .I 'DLG S DR=DR_"///"_PXRMNAME
"RTN","PXRMDLGZ",148,0)
 .D ^DIE
"RTN","PXRMDLGZ",149,0)
 Q
"RTN","PXRMDLGZ",150,0)
 ;
"RTN","PXRMDLGZ",151,0)
 ;Link a Reminder (called by protocol PXRM DIALOG LINK)
"RTN","PXRMDLGZ",152,0)
 ;---------------
"RTN","PXRMDLGZ",153,0)
RLINK(REM) ;
"RTN","PXRMDLGZ",154,0)
 N DLG
"RTN","PXRMDLGZ",155,0)
 ;Re-display reminder name
"RTN","PXRMDLGZ",156,0)
 W IORESET
"RTN","PXRMDLGZ",157,0)
 W !,PXRMHD
"RTN","PXRMDLGZ",158,0)
 ;
"RTN","PXRMDLGZ",159,0)
 N DA,DR,DIE
"RTN","PXRMDLGZ",160,0)
 ;Edit selected reminder
"RTN","PXRMDLGZ",161,0)
 S DA=REM
"RTN","PXRMDLGZ",162,0)
 ;Settup local variables
"RTN","PXRMDLGZ",163,0)
 S DIE="^PXD(811.9,",DR=51
"RTN","PXRMDLGZ",164,0)
 ;If no link force entry
"RTN","PXRMDLGZ",165,0)
 D ^DIE
"RTN","PXRMDLGZ",166,0)
 Q
"RTN","PXRMDLGZ",167,0)
 ;
"RTN","PXRMDLGZ",168,0)
 ;General help text routine.
"RTN","PXRMDLGZ",169,0)
 ;--------------------------
"RTN","PXRMDLGZ",170,0)
HLP(CALL) ;
"RTN","PXRMDLGZ",171,0)
 N HTEXT
"RTN","PXRMDLGZ",172,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMDLGZ",173,0)
 S DIWF="C75",DIWL=0,DIWR=75
"RTN","PXRMDLGZ",174,0)
 ;
"RTN","PXRMDLGZ",175,0)
 I CALL=1 D
"RTN","PXRMDLGZ",176,0)
 .S HTEXT(1)="Enter Yes to link reminder to this dialog."
"RTN","PXRMDLGZ",177,0)
 I CALL=2 D
"RTN","PXRMDLGZ",178,0)
 .S HTEXT(1)="Enter Yes to link reminder to this dialog."
"RTN","PXRMDLGZ",179,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDLGZ",180,0)
 S IC=""
"RTN","PXRMDLGZ",181,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMDLGZ",182,0)
 . S X=HTEXT(IC)
"RTN","PXRMDLGZ",183,0)
 . D ^DIWP
"RTN","PXRMDLGZ",184,0)
 W !
"RTN","PXRMDLGZ",185,0)
 S IC=0
"RTN","PXRMDLGZ",186,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMDLGZ",187,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMDLGZ",188,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDLGZ",189,0)
 W !
"RTN","PXRMDLGZ",190,0)
 Q
"RTN","PXRMDLGZ",191,0)
 ;
"RTN","PXRMDLGZ",192,0)
 ;Reminder selection
"RTN","PXRMDLGZ",193,0)
 ;------------------
"RTN","PXRMDLGZ",194,0)
SEL(FILE,MODE,ARRAY) ;
"RTN","PXRMDLGZ",195,0)
 N X,Y,CNT
"RTN","PXRMDLGZ",196,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDLGZ",197,0)
 S CNT=0
"RTN","PXRMDLGZ",198,0)
 W !
"RTN","PXRMDLGZ",199,0)
 F  D  Q:$D(DTOUT)  Q:$D(DUOUT)  Q:CNT>0  Q:(Y=-1)&(CNT>0)
"RTN","PXRMDLGZ",200,0)
 .S DIC=FILE,DIC(0)=MODE
"RTN","PXRMDLGZ",201,0)
 .D ^DIC
"RTN","PXRMDLGZ",202,0)
 .I X=(U_U) S DTOUT=1
"RTN","PXRMDLGZ",203,0)
 .I '$D(DTOUT),('$D(DUOUT)) D
"RTN","PXRMDLGZ",204,0)
 ..I +Y'=-1 D  Q
"RTN","PXRMDLGZ",205,0)
 ...S CNT=CNT+1,ARRAY(CNT)=Y_U_Y(0,0)_U_$P(Y(0),U,3)
"RTN","PXRMDLGZ",206,0)
 ..W:CNT=0 !,LIT1
"RTN","PXRMDLGZ",207,0)
 .K DIC
"RTN","PXRMDLGZ",208,0)
 Q
"RTN","PXRMDLGZ",209,0)
 ;
"RTN","PXRMDLGZ",210,0)
 ;Input transform for FINDING ITEM in 801.41
"RTN","PXRMDLGZ",211,0)
XINP(X) ;Taxonomy findings are not allowed for dialog groups
"RTN","PXRMDLGZ",212,0)
 I $P(X,";",2)="PXD(811.2,",$P($G(^PXRMD(801.41,DA,0)),U,4)="G" D  Q 0
"RTN","PXRMDLGZ",213,0)
 .W *7,!,"A taxonomy cannot be entered as the finding item for a group"
"RTN","PXRMDLGZ",214,0)
 ;Only applies to MH
"RTN","PXRMDLGZ",215,0)
 I $P(X,";",2)'="YTT(601," Q 1
"RTN","PXRMDLGZ",216,0)
 ;GAF
"RTN","PXRMDLGZ",217,0)
 I $P($G(^YTT(601,$P(X,";"),0)),U)="GAF" Q 1
"RTN","PXRMDLGZ",218,0)
 ;Check if a VALID GUI test
"RTN","PXRMDLGZ",219,0)
 I $P($G(^YTT(601.6,$P(X,";"),0)),U,4)="Y" Q 1
"RTN","PXRMDLGZ",220,0)
 ;else
"RTN","PXRMDLGZ",221,0)
 W *7,!,"This test is not appropriate for the GUI",!
"RTN","PXRMDLGZ",222,0)
 Q 0
"RTN","PXRMDLL")
0^29^B64936165
"RTN","PXRMDLL",1,0)
PXRMDLL ;SLC/PJH - REMINDER DIALOG LOADER ;05/18/2000
"RTN","PXRMDLL",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDLL",3,0)
 ;
"RTN","PXRMDLL",4,0)
OK(DIEN) ;Check if mental health test is for GUI
"RTN","PXRMDLL",5,0)
 I 'DFIEN Q 0
"RTN","PXRMDLL",6,0)
 I $P($G(^YTT(601.6,DFIEN,0)),U,4)="Y" Q 1
"RTN","PXRMDLL",7,0)
 I $P($G(^YTT(601,DFIEN,0)),U)="GAF" Q 1
"RTN","PXRMDLL",8,0)
 Q 0
"RTN","PXRMDLL",9,0)
 ;
"RTN","PXRMDLL",10,0)
TXT ;Format text
"RTN","PXRMDLL",11,0)
 N NULL
"RTN","PXRMDLL",12,0)
 S TEXT=DTXT(SUB),NULL=0
"RTN","PXRMDLL",13,0)
 I ($E(TEXT)=" ")!(TEXT="") S NULL=1
"RTN","PXRMDLL",14,0)
 I LAST,'NULL S TEXT="<br>"_TEXT
"RTN","PXRMDLL",15,0)
 S LAST=0 I NULL S TEXT="<br>"_TEXT,LAST=1
"RTN","PXRMDLL",16,0)
 Q
"RTN","PXRMDLL",17,0)
 ; 
"RTN","PXRMDLL",18,0)
EXP(TIEN,DITEM,DSUB) ;Expand taxonomy codes
"RTN","PXRMDLL",19,0)
 N ACNT,AHIS,ATYP,ARRAY,CODES,CNT,DPCE,DTAX
"RTN","PXRMDLL",20,0)
 ;Get taxonomy file details
"RTN","PXRMDLL",21,0)
 D TAX(TIEN,.ARRAY)
"RTN","PXRMDLL",22,0)
 ;
"RTN","PXRMDLL",23,0)
 ;Buid dialog from the returned array
"RTN","PXRMDLL",24,0)
 ;
"RTN","PXRMDLL",25,0)
 ;Main Taxonomy prompt
"RTN","PXRMDLL",26,0)
 S DTXT=ARRAY
"RTN","PXRMDLL",27,0)
 S OCNT=OCNT+1
"RTN","PXRMDLL",28,0)
 S ORY(OCNT)=1_U_DITEM_U_DSUB_U_"S"_U_DEXC
"RTN","PXRMDLL",29,0)
 ;Default group indents and selection entry
"RTN","PXRMDLL",30,0)
 S $P(ORY(OCNT),U,16)=2,$P(ORY(OCNT),U,18)=2
"RTN","PXRMDLL",31,0)
 S OCNT=OCNT+1
"RTN","PXRMDLL",32,0)
 S ORY(OCNT)=2_U_DITEM_U_DSUB_U_DTXT
"RTN","PXRMDLL",33,0)
 ;
"RTN","PXRMDLL",34,0)
 ;Taxonomy CPT/POV resolution prompts
"RTN","PXRMDLL",35,0)
 S ACNT=""
"RTN","PXRMDLL",36,0)
 F  S ACNT=$O(ARRAY(ACNT)) Q:ACNT=""  D
"RTN","PXRMDLL",37,0)
 .;Prompt text
"RTN","PXRMDLL",38,0)
 .S DTXT=$P(ARRAY(ACNT),U),DPCE=$P(ARRAY(ACNT),U,4)
"RTN","PXRMDLL",39,0)
 .;Historical/Current flag
"RTN","PXRMDLL",40,0)
 .S AHIS=0 I $P(ARRAY(ACNT),U,3)=2 S AHIS=1
"RTN","PXRMDLL",41,0)
 .;CPT/POV
"RTN","PXRMDLL",42,0)
 .S ATYP="POV" I $P(ARRAY(ACNT),U,2)=81 S ATYP="CPT"
"RTN","PXRMDLL",43,0)
 .;Initial display
"RTN","PXRMDLL",44,0)
 .S DHIDE=0,DCHECK=0,DDIS=0
"RTN","PXRMDLL",45,0)
 .;Construct ien for this level
"RTN","PXRMDLL",46,0)
 .S DTAX=DSUB_"."_ACNT
"RTN","PXRMDLL",47,0)
 .S OCNT=OCNT+1
"RTN","PXRMDLL",48,0)
 .S ORY(OCNT)=1_U_DITEM_U_DTAX_U_"T"_U_DEXC_U_U_ATYP_U_AHIS
"RTN","PXRMDLL",49,0)
 .S OCNT=OCNT+1
"RTN","PXRMDLL",50,0)
 .S ORY(OCNT)=2_U_DITEM_U_DTAX_U_DTXT
"RTN","PXRMDLL",51,0)
 Q
"RTN","PXRMDLL",52,0)
 ;
"RTN","PXRMDLL",53,0)
GROUP(DIEN,DSUB) ;Dialog group
"RTN","PXRMDLL",54,0)
 N DATA,DBOX,DCAP,DCHK,DENTRY,DEXC,DGIEN,DGRP,DGSEQ,DGSUB,DHIDE,DIND
"RTN","PXRMDLL",55,0)
 N DINDPN,DMHEX,DRESL,DSHARE,SUB
"RTN","PXRMDLL",56,0)
 ;Group caption text
"RTN","PXRMDLL",57,0)
 S DATA=$G(^PXRMD(801.41,DIEN,0))
"RTN","PXRMDLL",58,0)
 S DCAP=$P(DATA,U,5),DBOX=$P(DATA,U,6),DIND=$P(DATA,U,7)
"RTN","PXRMDLL",59,0)
 S DSHARE=$P(DATA,U,8),DENTRY=$P(DATA,U,9),DHIDE=$P(DATA,U,10)
"RTN","PXRMDLL",60,0)
 S DINDPN=$P(DATA,U,12) S:DINDPN="" DINDPN=0
"RTN","PXRMDLL",61,0)
 S DBOX=$S(DBOX="Y":1,1:"")
"RTN","PXRMDLL",62,0)
 ;group header is display only if SUPPRESS CHECKBOX
"RTN","PXRMDLL",63,0)
 S DCHK="S" I ('DHIDE)&(DSUPP) S DCHK="D",DHIDE=0
"RTN","PXRMDLL",64,0)
 ;Default group setting to hide
"RTN","PXRMDLL",65,0)
 I DHIDE="" S DHIDE=1
"RTN","PXRMDLL",66,0)
 ;
"RTN","PXRMDLL",67,0)
 S DEXC=$P($G(^PXRMD(801.41,DIEN,2)),U,3)
"RTN","PXRMDLL",68,0)
 ;
"RTN","PXRMDLL",69,0)
 S OCNT=OCNT+1,ORY(OCNT)=1_U_DIEN_U_DSUB_U_DCHK_U_DEXC
"RTN","PXRMDLL",70,0)
 S $P(ORY(OCNT),U,15)=DHIDE,$P(ORY(OCNT),U,16)=DIND
"RTN","PXRMDLL",71,0)
 S $P(ORY(OCNT),U,17)=DSHARE,$P(ORY(OCNT),U,18)=DENTRY
"RTN","PXRMDLL",72,0)
 S $P(ORY(OCNT),U,19)=DBOX,$P(ORY(OCNT),U,20)=DCAP
"RTN","PXRMDLL",73,0)
 S $P(ORY(OCNT),U,21)=DINDPN
"RTN","PXRMDLL",74,0)
 ;Create type 2 records if if here is additional group text
"RTN","PXRMDLL",75,0)
 N LAST,TEXT
"RTN","PXRMDLL",76,0)
 S SUB=0,LAST=0 F  S SUB=$O(DTXT(SUB)) Q:'SUB  D
"RTN","PXRMDLL",77,0)
 .D TXT
"RTN","PXRMDLL",78,0)
 .S OCNT=OCNT+1,ORY(OCNT)=2_U_DIEN_U_DSUB_U_TEXT
"RTN","PXRMDLL",79,0)
 ;Get dialog group sub-elements
"RTN","PXRMDLL",80,0)
 N DTYP,DSUPP,DDIS S DGSEQ=0
"RTN","PXRMDLL",81,0)
 F  S DGSEQ=$O(^PXRMD(801.41,DIEN,10,"B",DGSEQ)) Q:'DGSEQ  D
"RTN","PXRMDLL",82,0)
 .S DGSUB=$O(^PXRMD(801.41,DIEN,10,"B",DGSEQ,"")) Q:'DGSUB
"RTN","PXRMDLL",83,0)
 .S DATA=$G(^PXRMD(801.41,DIEN,10,DGSUB,0))
"RTN","PXRMDLL",84,0)
 .S DGIEN=$P(DATA,U,2) Q:'DGIEN
"RTN","PXRMDLL",85,0)
 .S DEXC=$P($G(^PXRMD(801.41,DIEN,2)),U,3)
"RTN","PXRMDLL",86,0)
 .K DTXT S SUB=0 F  S SUB=$O(^PXRMD(801.41,DGIEN,25,SUB)) Q:'SUB  D
"RTN","PXRMDLL",87,0)
 ..S DTXT(SUB)=$G(^PXRMD(801.41,DGIEN,25,SUB,0))
"RTN","PXRMDLL",88,0)
 .;Check if element is disabled/invalid
"RTN","PXRMDLL",89,0)
 .S DATA=$G(^PXRMD(801.41,DGIEN,0)) Q:DATA=""  Q:$P(DATA,U,3)]""
"RTN","PXRMDLL",90,0)
 .S DTYP=$P(DATA,U,4),DSUPP=$P(DATA,U,11) Q:"EG"'[DTYP
"RTN","PXRMDLL",91,0)
 .S DMHEX=$P(DATA,U,14),DRESL=$P(DATA,U,15)
"RTN","PXRMDLL",92,0)
 .S DRES=$P($G(^PXRMD(801.41,DGIEN,1)),U,3)
"RTN","PXRMDLL",93,0)
 .;Done Elsewhere (historical)
"RTN","PXRMDLL",94,0)
 .S DHIS=0 S:DRES=2 DHIS=1
"RTN","PXRMDLL",95,0)
 .S DFIND=$P($G(^PXRMD(801.41,DGIEN,1)),U,5)
"RTN","PXRMDLL",96,0)
 .S DFIEN=$P(DFIND,";"),DFTYP=$P(DFIND,";",2)
"RTN","PXRMDLL",97,0)
 .S DPCE="" I DFTYP'="" S DPCE=$G(DARRAY(DFTYP))
"RTN","PXRMDLL",98,0)
 .;If mental Health ignore if not GUI
"RTN","PXRMDLL",99,0)
 .I DPCE="MH" Q:'$$OK(DFIEN)
"RTN","PXRMDLL",100,0)
 .S DGRP=DSUB_"."_DGSUB
"RTN","PXRMDLL",101,0)
 .;Taxonomy codes need expanding
"RTN","PXRMDLL",102,0)
 .I DPCE="T" D EXP(DFIEN,DGIEN,DGRP) Q
"RTN","PXRMDLL",103,0)
 .;Translate vitals ien to PCE code - This will need a DBIA
"RTN","PXRMDLL",104,0)
 .I DPCE="VIT" S DFIEN=$$GET1^DIQ(120.51,DFIEN,7,"E")
"RTN","PXRMDLL",105,0)
 .;Embedded Dialog Group
"RTN","PXRMDLL",106,0)
 .I DTYP="G" D GROUP(DGIEN,DGRP) Q
"RTN","PXRMDLL",107,0)
 .S DDIS="S" I DSUPP=1 S DDIS="D"
"RTN","PXRMDLL",108,0)
 .S DGRP=DSUB_"."_DGSUB,OCNT=OCNT+1
"RTN","PXRMDLL",109,0)
 .S ORY(OCNT)=1_U_DGIEN_U_DGRP_U_DDIS_U_DEXC_U_U_U_DHIS_U_DMHEX_U_DRESL
"RTN","PXRMDLL",110,0)
 .N LAST,TEXT
"RTN","PXRMDLL",111,0)
 .S SUB=0,LAST=0 F  S SUB=$O(DTXT(SUB)) Q:'SUB  D
"RTN","PXRMDLL",112,0)
 ..D TXT
"RTN","PXRMDLL",113,0)
 ..S OCNT=OCNT+1,ORY(OCNT)=2_U_DGIEN_U_DGRP_U_TEXT
"RTN","PXRMDLL",114,0)
 Q
"RTN","PXRMDLL",115,0)
 ;
"RTN","PXRMDLL",116,0)
LOAD(DIEN) ;Load dialog questions into array
"RTN","PXRMDLL",117,0)
 N DARRAY,DATA,DITEM,DFIND,DFIEN,DFTYP,DPCE,DRES,DSEQ,DSUB,DTXT,DTYP,OCNT
"RTN","PXRMDLL",118,0)
 N DDIS,DEXC,DHIDE,DCHECK,DDIS,DHIS,DMHEX,DRESL,DSUPP,SUB
"RTN","PXRMDLL",119,0)
 ;Check Status of dialog
"RTN","PXRMDLL",120,0)
 S DATA=$G(^PXRMD(801.41,DIEN,0)) Q:DATA=""
"RTN","PXRMDLL",121,0)
 ;If disabled ignore
"RTN","PXRMDLL",122,0)
 I $P(DATA,U,3)]"" Q
"RTN","PXRMDLL",123,0)
 ;Ignore if not a reminder dialog
"RTN","PXRMDLL",124,0)
 I $P(DATA,U,4)'="R" Q
"RTN","PXRMDLL",125,0)
 ;
"RTN","PXRMDLL",126,0)
 ;List of PCE codes
"RTN","PXRMDLL",127,0)
 S DARRAY("AUTTEDT(")="PED"
"RTN","PXRMDLL",128,0)
 S DARRAY("AUTTEXAM(")="XAM"
"RTN","PXRMDLL",129,0)
 S DARRAY("AUTTHF(")="HF"
"RTN","PXRMDLL",130,0)
 S DARRAY("AUTTIMM(")="IMM"
"RTN","PXRMDLL",131,0)
 S DARRAY("AUTTSK(")="SK"
"RTN","PXRMDLL",132,0)
 S DARRAY("GMRD(120.51,")="VIT"
"RTN","PXRMDLL",133,0)
 S DARRAY("ORD(101.41,")="Q"
"RTN","PXRMDLL",134,0)
 S DARRAY("YTT(601,")="MH"
"RTN","PXRMDLL",135,0)
 S DARRAY("ICD9(")="POV"
"RTN","PXRMDLL",136,0)
 S DARRAY("ICPT(")="CPT"
"RTN","PXRMDLL",137,0)
 S DARRAY("PXD(811.2,")="T"
"RTN","PXRMDLL",138,0)
 ;
"RTN","PXRMDLL",139,0)
 ;Get elements for the dialog
"RTN","PXRMDLL",140,0)
 S DSEQ=0,OCNT=0
"RTN","PXRMDLL",141,0)
 F  S DSEQ=$O(^PXRMD(801.41,DIEN,10,"B",DSEQ)) Q:'DSEQ  D
"RTN","PXRMDLL",142,0)
 .S DSUB=$O(^PXRMD(801.41,DIEN,10,"B",DSEQ,"")) Q:'DSUB
"RTN","PXRMDLL",143,0)
 .S DATA=$G(^PXRMD(801.41,DIEN,10,DSUB,0))
"RTN","PXRMDLL",144,0)
 .S DITEM=$P(DATA,U,2) Q:DITEM=""
"RTN","PXRMDLL",145,0)
 .;Ignore disabled elements
"RTN","PXRMDLL",146,0)
 .S DATA=$G(^PXRMD(801.41,DITEM,0)) Q:DATA=""  Q:$P(DATA,U,3)]""
"RTN","PXRMDLL",147,0)
 .S DTYP=$P(DATA,U,4),DSUPP=$P(DATA,U,11)
"RTN","PXRMDLL",148,0)
 .S DMHEX=$P(DATA,U,14),DRESL=$P(DATA,U,15)
"RTN","PXRMDLL",149,0)
 .K DTXT S SUB=0
"RTN","PXRMDLL",150,0)
 .F  S SUB=$O(^PXRMD(801.41,DITEM,25,SUB)) Q:'SUB  D
"RTN","PXRMDLL",151,0)
 ..S DTXT(SUB)=$G(^PXRMD(801.41,DITEM,25,SUB,0))
"RTN","PXRMDLL",152,0)
 .S DRES=$P($G(^PXRMD(801.41,DITEM,1)),U,3)
"RTN","PXRMDLL",153,0)
 .S DFIND=$P($G(^PXRMD(801.41,DITEM,1)),U,5)
"RTN","PXRMDLL",154,0)
 .S DFIEN=$P(DFIND,";"),DFTYP=$P(DFIND,";",2)
"RTN","PXRMDLL",155,0)
 .S DPCE="" I DFTYP'="" S DPCE=$G(DARRAY(DFTYP))
"RTN","PXRMDLL",156,0)
 .;If mental Health ignore if not GUI
"RTN","PXRMDLL",157,0)
 .I DPCE="MH" Q:'$$OK(DFIEN)
"RTN","PXRMDLL",158,0)
 .;Exclude from PN
"RTN","PXRMDLL",159,0)
 .S DEXC=$P($G(^PXRMD(801.41,DITEM,2)),U,3)
"RTN","PXRMDLL",160,0)
 .;Taxonomy codes need expanding
"RTN","PXRMDLL",161,0)
 .I DPCE="T" D EXP(DFIEN,DITEM,DSUB) Q
"RTN","PXRMDLL",162,0)
 .;Translate vitals ien to PCE code - This will need a DBIA
"RTN","PXRMDLL",163,0)
 .I DPCE="VIT" S DFIEN=$P($G(^GMRD(120.51,DFIEN,0)),U,7)
"RTN","PXRMDLL",164,0)
 .;Done Elsewhere (historical)
"RTN","PXRMDLL",165,0)
 .S DHIS=0 S:$P($G(^PXRMD(801.41,DITEM,1)),U,3)=2 DHIS=1
"RTN","PXRMDLL",166,0)
 .;Dialog Group
"RTN","PXRMDLL",167,0)
 .I DTYP="G" D GROUP(DITEM,DSUB) Q
"RTN","PXRMDLL",168,0)
 .;Dialog type/text and resolution 
"RTN","PXRMDLL",169,0)
 .S OCNT=OCNT+1,DDIS="S"
"RTN","PXRMDLL",170,0)
 .I DSUPP=1 S DDIS="D"
"RTN","PXRMDLL",171,0)
 .S ORY(OCNT)=1_U_DITEM_U_DSUB_U_DDIS_U_DEXC_U_U_U_DHIS_U_DMHEX_U_DRESL
"RTN","PXRMDLL",172,0)
 .N LAST,TEXT
"RTN","PXRMDLL",173,0)
 .S SUB=0,LAST=0 F  S SUB=$O(DTXT(SUB)) Q:'SUB  D
"RTN","PXRMDLL",174,0)
 ..D TXT
"RTN","PXRMDLL",175,0)
 ..S OCNT=OCNT+1,ORY(OCNT)=2_U_DITEM_U_DSUB_U_TEXT
"RTN","PXRMDLL",176,0)
 Q
"RTN","PXRMDLL",177,0)
 ;
"RTN","PXRMDLL",178,0)
TAX(TXIEN,ARRAY) ;Return list of resolutions/codes for taxonomy
"RTN","PXRMDLL",179,0)
 N CNT,DTXT,FNODE,RSUB,TDX,TNAME,TPAR,TPR,TYP
"RTN","PXRMDLL",180,0)
 N TCUR,TDTXT,TDHTXT,THIS,TPTXT,TPHTXT
"RTN","PXRMDLL",181,0)
 ;
"RTN","PXRMDLL",182,0)
 ;Get taxonomy name
"RTN","PXRMDLL",183,0)
 S TNAME=$P($G(^PXD(811.2,TXIEN,0)),U,1)
"RTN","PXRMDLL",184,0)
 ;
"RTN","PXRMDLL",185,0)
 ;Check what type of taxonomy codes exist
"RTN","PXRMDLL",186,0)
 S TDX=$$TOK^PXRMDLLA(TXIEN,"SDX")
"RTN","PXRMDLL",187,0)
 S TPR=$$TOK^PXRMDLLA(TXIEN,"SPR")
"RTN","PXRMDLL",188,0)
 ;
"RTN","PXRMDLL",189,0)
 ;Taxonomy dialog text
"RTN","PXRMDLL",190,0)
 S DTXT=$P($G(^PXD(811.2,TXIEN,0)),U,3)
"RTN","PXRMDLL",191,0)
 ;default to taxonomy description if null
"RTN","PXRMDLL",192,0)
 I DTXT="" S DTXT=$P($G(^PXD(811.2,TXIEN,0)),U,2)
"RTN","PXRMDLL",193,0)
 ;default to taxonomy name if null
"RTN","PXRMDLL",194,0)
 I DTXT="" S DTXT=$P($G(^PXD(811.2,TXIEN,0)),U,1)
"RTN","PXRMDLL",195,0)
 ;
"RTN","PXRMDLL",196,0)
 S CNT=0,ARRAY=DTXT
"RTN","PXRMDLL",197,0)
 ;
"RTN","PXRMDLL",198,0)
 ;Diagnoses
"RTN","PXRMDLL",199,0)
 I TDX D
"RTN","PXRMDLL",200,0)
 .;Diagnosis texts
"RTN","PXRMDLL",201,0)
 .S TPAR=$G(^PXD(811.2,TXIEN,"SDZ"))
"RTN","PXRMDLL",202,0)
 .;Get parameter file node for this finding type
"RTN","PXRMDLL",203,0)
 .S FNODE=$O(^PXRMD(801.45,"B","POV","")) Q:FNODE=""
"RTN","PXRMDLL",204,0)
 .;check if finding parameters are disabled
"RTN","PXRMDLL",205,0)
 .S TCUR=$P($G(^PXRMD(801.45,FNODE,1,1,0)),U,2)
"RTN","PXRMDLL",206,0)
 .S THIS=$P($G(^PXRMD(801.45,FNODE,1,2,0)),U,2)
"RTN","PXRMDLL",207,0)
 .;get category text (diagnoses)
"RTN","PXRMDLL",208,0)
 .I 'TCUR D  ; Current
"RTN","PXRMDLL",209,0)
 ..S TDTXT=$P(TPAR,U,2) S:TDTXT="" TDTXT=TNAME
"RTN","PXRMDLL",210,0)
 ..S CNT=CNT+1,ARRAY(CNT)=TDTXT_U_80_U_1_U_"POV"
"RTN","PXRMDLL",211,0)
 .I 'THIS D  ; Historical
"RTN","PXRMDLL",212,0)
 ..S TDHTXT=$P(TPAR,U,3) S:TDHTXT="" TDHTXT=TNAME_" (HISTORICAL)"
"RTN","PXRMDLL",213,0)
 ..S CNT=CNT+1,ARRAY(CNT)=TDHTXT_U_80_U_2_U_"POV"
"RTN","PXRMDLL",214,0)
 ;Procedures
"RTN","PXRMDLL",215,0)
 I TPR D
"RTN","PXRMDLL",216,0)
 .;Procedure texts
"RTN","PXRMDLL",217,0)
 .S TPAR=$G(^PXD(811.2,TXIEN,"SPZ"))
"RTN","PXRMDLL",218,0)
 .;Get parameter file node for this finding type
"RTN","PXRMDLL",219,0)
 .S FNODE=$O(^PXRMD(801.45,"B","CPT","")) Q:FNODE=""
"RTN","PXRMDLL",220,0)
 .;check if finding parameters are disabled
"RTN","PXRMDLL",221,0)
 .S TCUR=$P($G(^PXRMD(801.45,FNODE,1,1,0)),U,2)
"RTN","PXRMDLL",222,0)
 .S THIS=$P($G(^PXRMD(801.45,FNODE,1,2,0)),U,2)
"RTN","PXRMDLL",223,0)
 .;get category text (procedures)
"RTN","PXRMDLL",224,0)
 .I 'TCUR D  ; Current
"RTN","PXRMDLL",225,0)
 ..S TPTXT=$P(TPAR,U,2) S:TPTXT="" TPTXT=TNAME
"RTN","PXRMDLL",226,0)
 ..S CNT=CNT+1,ARRAY(CNT)=TPTXT_U_81_U_1_U_"CPT"
"RTN","PXRMDLL",227,0)
 .I 'THIS D  ; Historical
"RTN","PXRMDLL",228,0)
 ..S TPHTXT=$P(TPAR,U,3) S:TPHTXT="" TPHTXT=TNAME_" (HISTORICAL)"
"RTN","PXRMDLL",229,0)
 ..S CNT=CNT+1,ARRAY(CNT)=TPHTXT_U_81_U_2_U_"CPT"
"RTN","PXRMDLL",230,0)
 ;
"RTN","PXRMDLL",231,0)
 Q
"RTN","PXRMDLLA")
0^30^B63222363
"RTN","PXRMDLLA",1,0)
PXRMDLLA ;SLC/PJH - REMINDER DIALOG LOADER ;05/18/2000
"RTN","PXRMDLLA",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDLLA",3,0)
 ;
"RTN","PXRMDLLA",4,0)
CODE(DFIEN,DFTYP) ;
"RTN","PXRMDLLA",5,0)
 Q:DFIEN="" ""
"RTN","PXRMDLLA",6,0)
 Q:DFTYP["ICD9" $P($G(^ICD9(DFIEN,0)),U)
"RTN","PXRMDLLA",7,0)
 Q:DFTYP["ICPT" $P($G(^ICPT(DFIEN,0)),U)
"RTN","PXRMDLLA",8,0)
 Q ""
"RTN","PXRMDLLA",9,0)
 ;
"RTN","PXRMDLLA",10,0)
CODES(FILE,TXIEN,ARRAY) ;Return list of selectable codes from taxonomy file
"RTN","PXRMDLLA",11,0)
 N CNT,CODE,DATA,IEN,TEXT,NODE,SUB
"RTN","PXRMDLLA",12,0)
 S SUB=0,CNT=0,NODE=$S(FILE=80:"SDX",FILE=81:"SPR")
"RTN","PXRMDLLA",13,0)
 F  S SUB=$O(^PXD(811.2,TXIEN,NODE,SUB)) Q:'SUB  D
"RTN","PXRMDLLA",14,0)
 .S DATA=$G(^PXD(811.2,TXIEN,NODE,SUB,0)) Q:DATA=""
"RTN","PXRMDLLA",15,0)
 .;Ignore if disabled
"RTN","PXRMDLLA",16,0)
 .I $P(DATA,U,3)=1 Q
"RTN","PXRMDLLA",17,0)
 .;Get ien of code
"RTN","PXRMDLLA",18,0)
 .S IEN=$P(DATA,U) Q:IEN=""
"RTN","PXRMDLLA",19,0)
 .;Translate ien to code
"RTN","PXRMDLLA",20,0)
 .I FILE=80 S CODE=$P($G(^ICD9(IEN,0)),U)
"RTN","PXRMDLLA",21,0)
 .I FILE=81 S CODE=$P($G(^ICPT(IEN,0)),U)
"RTN","PXRMDLLA",22,0)
 .;Ignore invalid codes
"RTN","PXRMDLLA",23,0)
 .Q:'$$CODE^PXRMVAL(CODE,FILE)
"RTN","PXRMDLLA",24,0)
 .;Set display text from taxonomy selectable code text
"RTN","PXRMDLLA",25,0)
 .S TEXT=$P(DATA,U,2)
"RTN","PXRMDLLA",26,0)
 .;otherwise use icd9/cpt description
"RTN","PXRMDLLA",27,0)
 .I TEXT="",FILE=80 S TEXT=$G(^ICD9(IEN,1))
"RTN","PXRMDLLA",28,0)
 .I TEXT="",FILE=80 S TEXT=$P($G(^ICD9(IEN,0)),U,3)
"RTN","PXRMDLLA",29,0)
 .I TEXT="",FILE=81 S TEXT=$P($G(^ICPT(IEN,0)),U,2)
"RTN","PXRMDLLA",30,0)
 .S CNT=CNT+1,ARRAY(CNT)=IEN_U_CODE_U_TEXT
"RTN","PXRMDLLA",31,0)
 Q
"RTN","PXRMDLLA",32,0)
 ;
"RTN","PXRMDLLA",33,0)
EXP(TIEN,DCUR,DTTYP) ;Expand taxonomy codes
"RTN","PXRMDLLA",34,0)
 N CODES,CNT,FILE,LIT,CAT
"RTN","PXRMDLLA",35,0)
 S FILE=$S(DTTYP="POV":80,DTTYP="CPT":81,1:"") Q:'FILE
"RTN","PXRMDLLA",36,0)
 S LIT="Selectable "_$S(FILE=80:"Diagnoses:",1:"Procedures:")
"RTN","PXRMDLLA",37,0)
 S CAT=$P($G(^PXD(811.2,TIEN,0)),U)
"RTN","PXRMDLLA",38,0)
 ;
"RTN","PXRMDLLA",39,0)
 S OCNT=OCNT+1
"RTN","PXRMDLLA",40,0)
 S ORY(OCNT)=3_U_DITEM_U_U_DTTYP_U_U_U_U_U_CAT_U_LIT
"RTN","PXRMDLLA",41,0)
 ;Get selectable codes
"RTN","PXRMDLLA",42,0)
 D CODES(FILE,TIEN,.CODES)
"RTN","PXRMDLLA",43,0)
 S CNT=0
"RTN","PXRMDLLA",44,0)
 ;Save selectable codes as type 5 records
"RTN","PXRMDLLA",45,0)
 F  S CNT=$O(CODES(CNT)) Q:'CNT  D
"RTN","PXRMDLLA",46,0)
 .S OCNT=OCNT+1,ORY(OCNT)=5_U_DITEM_U_U_DTTYP_U_U_CODES(CNT)
"RTN","PXRMDLLA",47,0)
 Q
"RTN","PXRMDLLA",48,0)
 ;
"RTN","PXRMDLLA",49,0)
FREC(DFIEN,DFTYP) ;Build type 3 record
"RTN","PXRMDLLA",50,0)
 ;Dialog type/text and resolution  
"RTN","PXRMDLLA",51,0)
 S DNAM=$$NAME(DFIEN,DFTYP),DCOD=$$CODE(DFIEN,DFTYP)
"RTN","PXRMDLLA",52,0)
 ;Translate vitals ien to PCE code - This will need a DBIA
"RTN","PXRMDLLA",53,0)
 I DPCE="VIT" D
"RTN","PXRMDLLA",54,0)
 .S DFIEN=$$GET1^DIQ(120.51,DFIEN,7,"E")
"RTN","PXRMDLLA",55,0)
 .;Vitals Caption
"RTN","PXRMDLLA",56,0)
 .S DVIT=$P($G(^PXRMD(801.41,DITEM,2)),U,4)
"RTN","PXRMDLLA",57,0)
 I DFTYP]"" D
"RTN","PXRMDLLA",58,0)
 .S OCNT=OCNT+1
"RTN","PXRMDLLA",59,0)
 .S ORY(OCNT)=3_U_DITEM_U_U_DPCE_U_DEXC_U_DFIEN_U_DCOD_U_DNAM_U_U_DVIT
"RTN","PXRMDLLA",60,0)
 .;Get order type for orderable items
"RTN","PXRMDLLA",61,0)
 .S:DPCE="Q" $P(ORY(OCNT),U,11)=$P($G(^ORD(101.41,DFIEN,0)),U,4)
"RTN","PXRMDLLA",62,0)
 .;If mental health check if a GAF score
"RTN","PXRMDLLA",63,0)
 .I DPCE="MH",DFIEN D
"RTN","PXRMDLLA",64,0)
 ..I $P($G(^YTT(601,DFIEN,0)),U)="GAF" S $P(ORY(OCNT),U,12)=1
"RTN","PXRMDLLA",65,0)
 Q
"RTN","PXRMDLLA",66,0)
 ;
"RTN","PXRMDLLA",67,0)
GUI(IEN) ;Work out prompt type for PCE
"RTN","PXRMDLLA",68,0)
 Q:IEN="" ""
"RTN","PXRMDLLA",69,0)
 N SUB S SUB=$O(^PXRMD(801.42,"AB",IEN,""))
"RTN","PXRMDLLA",70,0)
 Q:'SUB ""
"RTN","PXRMDLLA",71,0)
 Q $P($G(^PXRMD(801.42,SUB,0)),U)
"RTN","PXRMDLLA",72,0)
 ;
"RTN","PXRMDLLA",73,0)
LOAD(DITEM,DCUR,DTTYP) ;Load dialog questions into array
"RTN","PXRMDLLA",74,0)
 N DARRAY,DCOD,DEXC,DFIND,DFIEN,DFTYP,DNAM,DPCE,DRES,DSEQ,DSUB,DTYP,OCNT
"RTN","PXRMDLLA",75,0)
 N DVIT
"RTN","PXRMDLLA",76,0)
 ;
"RTN","PXRMDLLA",77,0)
 ;Build list of PCE codes
"RTN","PXRMDLLA",78,0)
 S DARRAY("AUTTEDT(")="PED"
"RTN","PXRMDLLA",79,0)
 S DARRAY("AUTTEXAM(")="XAM"
"RTN","PXRMDLLA",80,0)
 S DARRAY("AUTTHF(")="HF"
"RTN","PXRMDLLA",81,0)
 S DARRAY("AUTTIMM(")="IMM"
"RTN","PXRMDLLA",82,0)
 S DARRAY("AUTTSK(")="SK"
"RTN","PXRMDLLA",83,0)
 ;
"RTN","PXRMDLLA",84,0)
 S DARRAY("GMRD(120.51,")="VIT"
"RTN","PXRMDLLA",85,0)
 S DARRAY("ORD(101.41,")="Q"
"RTN","PXRMDLLA",86,0)
 S DARRAY("YTT(601,")="MH"
"RTN","PXRMDLLA",87,0)
 ;
"RTN","PXRMDLLA",88,0)
 S DARRAY("ICD9(")="POV"
"RTN","PXRMDLLA",89,0)
 S DARRAY("ICPT(")="CPT"
"RTN","PXRMDLLA",90,0)
 ;
"RTN","PXRMDLLA",91,0)
 S DARRAY("PXD(811.2,")="T" ;dialog cpt/pov is generated from taxonomy
"RTN","PXRMDLLA",92,0)
 ;
"RTN","PXRMDLLA",93,0)
 ;Get the dialog element
"RTN","PXRMDLLA",94,0)
 S OCNT=0,DTYP=$P($G(^PXRMD(801.41,DITEM,0)),U,4)
"RTN","PXRMDLLA",95,0)
 ;Finding detail
"RTN","PXRMDLLA",96,0)
 S DRES=$P($G(^PXRMD(801.41,DITEM,1)),U,3)
"RTN","PXRMDLLA",97,0)
 S DFIND=$P($G(^PXRMD(801.41,DITEM,1)),U,5)
"RTN","PXRMDLLA",98,0)
 S DFIEN=$P(DFIND,";"),DFTYP=$P(DFIND,";",2)
"RTN","PXRMDLLA",99,0)
 S DPCE="",DVIT="" I DFTYP'="" S DPCE=$G(DARRAY(DFTYP))
"RTN","PXRMDLLA",100,0)
 ;Exclude from P/N
"RTN","PXRMDLLA",101,0)
 S DEXC=$P($G(^PXRMD(801.41,DITEM,2)),U,3)
"RTN","PXRMDLLA",102,0)
 ;
"RTN","PXRMDLLA",103,0)
 ;Non taxonomy codes (3 - finding record)
"RTN","PXRMDLLA",104,0)
 I DPCE'="T" D FREC(DFIEN,DFTYP)
"RTN","PXRMDLLA",105,0)
 ;
"RTN","PXRMDLLA",106,0)
 ;Taxonomy codes need expanding (3 - finding record)
"RTN","PXRMDLLA",107,0)
 I DPCE="T" D EXP(DFIEN,DCUR,DTTYP)
"RTN","PXRMDLLA",108,0)
 ;
"RTN","PXRMDLLA",109,0)
 ;Prompt details (4 - prompt records)
"RTN","PXRMDLLA",110,0)
 N ARRAY,DTITLE,DREQ,DSEQ,DSUB,DTYP
"RTN","PXRMDLLA",111,0)
 ;If not a taxonomy get prompts from dialog file
"RTN","PXRMDLLA",112,0)
 I DPCE'="T" D PROTH(DITEM)
"RTN","PXRMDLLA",113,0)
 ;If a taxonomy get details from general finding parameters (CPT/POV)
"RTN","PXRMDLLA",114,0)
 I DPCE="T" D
"RTN","PXRMDLLA",115,0)
 .;Quit if finding type not passed
"RTN","PXRMDLLA",116,0)
 .Q:DTTYP=""
"RTN","PXRMDLLA",117,0)
 .N RSUB,FNODE
"RTN","PXRMDLLA",118,0)
 .;Get parameter file node for this finding type
"RTN","PXRMDLLA",119,0)
 .S FNODE=$O(^PXRMD(801.45,"B",DTTYP,"")) Q:FNODE=""
"RTN","PXRMDLLA",120,0)
 .;Derive resolution from line ien 1=done 2=done elsewhere
"RTN","PXRMDLLA",121,0)
 .S RSUB=DCUR+1 I (RSUB<1)!(RSUB>2) Q
"RTN","PXRMDLLA",122,0)
 .;Get details from 811.5
"RTN","PXRMDLLA",123,0)
 .D PRTAX(FNODE,RSUB)
"RTN","PXRMDLLA",124,0)
 ;Return array of type 4 records
"RTN","PXRMDLLA",125,0)
 S DSEQ=""
"RTN","PXRMDLLA",126,0)
 F  S DSEQ=$O(ARRAY(DSEQ)) Q:'DSEQ  D
"RTN","PXRMDLLA",127,0)
 .S OCNT=OCNT+1
"RTN","PXRMDLLA",128,0)
 .S ORY(OCNT)=4_U_DITEM_U_DSEQ_U_ARRAY(DSEQ)
"RTN","PXRMDLLA",129,0)
 ;
"RTN","PXRMDLLA",130,0)
 ;Get progress note text if defined
"RTN","PXRMDLLA",131,0)
 I DPCE'="T" D:'DEXC PTXT(DITEM)
"RTN","PXRMDLLA",132,0)
 ;Additional findings
"RTN","PXRMDLLA",133,0)
 N FASUB
"RTN","PXRMDLLA",134,0)
 S FASUB=0
"RTN","PXRMDLLA",135,0)
 F  S FASUB=$O(^PXRMD(801.41,DITEM,3,FASUB)) Q:'FASUB  D
"RTN","PXRMDLLA",136,0)
 .S DFIND=$P($G(^PXRMD(801.41,DITEM,3,FASUB,0)),U)
"RTN","PXRMDLLA",137,0)
 .S DFIEN=$P(DFIND,";"),DFTYP=$P(DFIND,";",2) Q:DFTYP=""  Q:DFIEN=""
"RTN","PXRMDLLA",138,0)
 .S DVIT="",DPCE=$G(DARRAY(DFTYP))
"RTN","PXRMDLLA",139,0)
 .I DPCE'="" D FREC(DFIEN,DFTYP)
"RTN","PXRMDLLA",140,0)
 Q
"RTN","PXRMDLLA",141,0)
 ;
"RTN","PXRMDLLA",142,0)
 ;Returns item name
"RTN","PXRMDLLA",143,0)
NAME(DFIEN,DFTYP) ;
"RTN","PXRMDLLA",144,0)
 Q:DFTYP="" ""
"RTN","PXRMDLLA",145,0)
 Q:DFIEN="" ""
"RTN","PXRMDLLA",146,0)
 N NAME,FGLOB,POSN,POS2
"RTN","PXRMDLLA",147,0)
 I DFTYP["ICD9" S NAME=$P($G(^ICD9(DFIEN,1)),U) Q:NAME]"" NAME
"RTN","PXRMDLLA",148,0)
 S POSN=2,POS2=1 S:DFTYP["AUTTEDT" POSN=4 S:DFTYP["ICD" POSN=3
"RTN","PXRMDLLA",149,0)
 S FGLOB=U_DFTYP_DFIEN_",0)"
"RTN","PXRMDLLA",150,0)
 S NAME=$P($G(@FGLOB),U,POSN)
"RTN","PXRMDLLA",151,0)
 I NAME="" S NAME=$P($G(@FGLOB),U)
"RTN","PXRMDLLA",152,0)
 I NAME="" S NAME=DFIEN
"RTN","PXRMDLLA",153,0)
 Q NAME
"RTN","PXRMDLLA",154,0)
 ;
"RTN","PXRMDLLA",155,0)
PROTH(IEN) ; Additional prompts defined in 801.41
"RTN","PXRMDLLA",156,0)
 N DDATA,DDEF,DIEN,DEXC,DGUI,DNAME,DOVR,DREQ,DSEQ,DSNL,DSUB,DTXT,DTYP
"RTN","PXRMDLLA",157,0)
 S DSEQ=0
"RTN","PXRMDLLA",158,0)
 F  S DSEQ=$O(^PXRMD(801.41,IEN,10,"B",DSEQ)) Q:'DSEQ  D
"RTN","PXRMDLLA",159,0)
 .;Get prompts in sequence
"RTN","PXRMDLLA",160,0)
 .S DSUB=$O(^PXRMD(801.41,IEN,10,"B",DSEQ,"")) Q:'DSUB
"RTN","PXRMDLLA",161,0)
 .;Prompt ien
"RTN","PXRMDLLA",162,0)
 .S DIEN=$P($G(^PXRMD(801.41,IEN,10,DSUB,0)),U,2) Q:'DIEN
"RTN","PXRMDLLA",163,0)
 .;Ignore disabled components, and those that are not prompts
"RTN","PXRMDLLA",164,0)
 .Q:($P($G(^PXRMD(801.41,DIEN,0)),U,3)]"")!($P($G(^(0)),U,4)'="P")
"RTN","PXRMDLLA",165,0)
 .;Set defaults to null
"RTN","PXRMDLLA",166,0)
 .S DDEF="",DEXC="",DREQ="",DSNL=""
"RTN","PXRMDLLA",167,0)
 .;Prompt name and GUI process (quit if null)
"RTN","PXRMDLLA",168,0)
 .S DNAME=$P($G(^PXRMD(801.41,DIEN,0)),U),DGUI=$$GUI(DIEN)
"RTN","PXRMDLLA",169,0)
 .;Type Prompt or Forced
"RTN","PXRMDLLA",170,0)
 .S DTYP=$P($G(^PXRMD(801.41,DIEN,0)),U,4)
"RTN","PXRMDLLA",171,0)
 .I "PF"[DTYP D
"RTN","PXRMDLLA",172,0)
 ..;Required/Prompt caption
"RTN","PXRMDLLA",173,0)
 ..S DDATA=$G(^PXRMD(801.41,DIEN,2)),DTXT=$P(DDATA,U,4)
"RTN","PXRMDLLA",174,0)
 ..;Default value or forced value
"RTN","PXRMDLLA",175,0)
 ..S:DTYP="P" DDEF=$P(DDATA,U) S:DTYP="F" DDEF=$P(DDATA,U,2)
"RTN","PXRMDLLA",176,0)
 ..;Override caption/start new line/exclude PN from dialog file
"RTN","PXRMDLLA",177,0)
 ..S DDATA=$G(^PXRMD(801.41,IEN,10,DSUB,0)),DREQ=$P(DDATA,U,9)
"RTN","PXRMDLLA",178,0)
 ..S DOVR=$P(DDATA,U,6),DSNL=$P(DDATA,U,7),DEXC=$P(DDATA,U,8)
"RTN","PXRMDLLA",179,0)
 ..S DNAME=DTXT I DOVR]"" S DNAME=DOVR
"RTN","PXRMDLLA",180,0)
 ..;Convert date to fileman format
"RTN","PXRMDLLA",181,0)
 ..I DGUI="VST_DATE",DDEF["T" S DDEF=$$DT^XLFDT()
"RTN","PXRMDLLA",182,0)
 .S ARRAY(DSEQ)=DGUI_U_DEXC_U_DDEF_U_DTYP_U_DNAME_U_DSNL_U_DREQ
"RTN","PXRMDLLA",183,0)
 Q
"RTN","PXRMDLLA",184,0)
 ;
"RTN","PXRMDLLA",185,0)
PRTAX(FNODE,RSUB) ;Get all additional fields for this resolution type
"RTN","PXRMDLLA",186,0)
 N ACNT,ASUB
"RTN","PXRMDLLA",187,0)
 N DDATA,DDEF,DEXC,DGUI,DNAME,DREQ,DSEQ,DSUB,DTYP
"RTN","PXRMDLLA",188,0)
 S ASUB=0,DSEQ=0
"RTN","PXRMDLLA",189,0)
 F  S ASUB=$O(^PXRMD(801.45,FNODE,1,RSUB,5,ASUB)) Q:'ASUB  D
"RTN","PXRMDLLA",190,0)
 .S DDATA=$G(^PXRMD(801.45,FNODE,1,RSUB,5,ASUB,0)) Q:DDATA=""
"RTN","PXRMDLLA",191,0)
 .;Ignore if disabled
"RTN","PXRMDLLA",192,0)
 .I $P(DDATA,U,3)=1 Q
"RTN","PXRMDLLA",193,0)
 .S DSUB=$P(DDATA,U) Q:DDATA=""
"RTN","PXRMDLLA",194,0)
 .S DSEQ=DSEQ+1
"RTN","PXRMDLLA",195,0)
 .;Set defaults to null
"RTN","PXRMDLLA",196,0)
 .S DDEF="",DEXC="",DREQ="",DSNL=""
"RTN","PXRMDLLA",197,0)
 .;Prompt name and GUI process (quit if null)
"RTN","PXRMDLLA",198,0)
 .S DNAME=$P($G(^PXRMD(801.41,DSUB,0)),U),DGUI=$$GUI(DSUB)
"RTN","PXRMDLLA",199,0)
 .;Type Prompt or Forced
"RTN","PXRMDLLA",200,0)
 .S DTYP=$P($G(^PXRMD(801.41,DSUB,0)),U,4)
"RTN","PXRMDLLA",201,0)
 .I DTYP="P" D
"RTN","PXRMDLLA",202,0)
 ..S DREQ=$P(DDATA,U,2),DTXT=$P($G(^PXRMD(801.41,DSUB,2)),U,4)
"RTN","PXRMDLLA",203,0)
 ..;Override caption/start new line/exclude from PN from finding type 
"RTN","PXRMDLLA",204,0)
 ..S DOVR=$P(DDATA,U,5),DSNL=$P(DDATA,U,6),DEXC=$P(DDATA,U,7)
"RTN","PXRMDLLA",205,0)
 ..S DNAME=DTXT I DOVR]"" S DNAME=DOVR
"RTN","PXRMDLLA",206,0)
 ..;Required/Prompt caption
"RTN","PXRMDLLA",207,0)
 ..S DDATA=$G(^PXRMD(801.41,DSUB,2))
"RTN","PXRMDLLA",208,0)
 .S ARRAY(DSEQ)=DGUI_U_DEXC_U_DDEF_U_DTYP_U_DNAME_U_DSNL_U_DREQ
"RTN","PXRMDLLA",209,0)
 Q
"RTN","PXRMDLLA",210,0)
 ;
"RTN","PXRMDLLA",211,0)
PTXT(ITEM) ;Get progress note (WP) text for type 6 records
"RTN","PXRMDLLA",212,0)
 N LAST,NULL,SUB,TEXT S SUB=0,LAST=0
"RTN","PXRMDLLA",213,0)
 F  S SUB=$O(^PXRMD(801.41,ITEM,35,SUB)) Q:'SUB  D
"RTN","PXRMDLLA",214,0)
 .S TEXT=$G(^PXRMD(801.41,ITEM,35,SUB,0))
"RTN","PXRMDLLA",215,0)
 .S NULL=0 I (TEXT="")!($E(TEXT)=" ") S NULL=1
"RTN","PXRMDLLA",216,0)
 .I LAST,'NULL S TEXT="<br>"_TEXT
"RTN","PXRMDLLA",217,0)
 .S LAST=0 I NULL S TEXT="<br>"_TEXT,LAST=1
"RTN","PXRMDLLA",218,0)
 .S OCNT=OCNT+1,ORY(OCNT)=6_U_ITEM_U_U_TEXT
"RTN","PXRMDLLA",219,0)
 Q
"RTN","PXRMDLLA",220,0)
 ;
"RTN","PXRMDLLA",221,0)
TOK(TIEN,TYPE) ;Check if selectable codes exist
"RTN","PXRMDLLA",222,0)
 N DATA,FOUND,SUB
"RTN","PXRMDLLA",223,0)
 S FOUND=0,SUB=0
"RTN","PXRMDLLA",224,0)
 F  S SUB=$O(^PXD(811.2,TIEN,TYPE,SUB)) Q:'SUB  D  Q:FOUND
"RTN","PXRMDLLA",225,0)
 .S DATA=$G(^PXD(811.2,TIEN,TYPE,SUB,0)) Q:DATA=""
"RTN","PXRMDLLA",226,0)
 .;Ignore disabled codes
"RTN","PXRMDLLA",227,0)
 .I '$P(DATA,U,3) S FOUND=1
"RTN","PXRMDLLA",228,0)
 Q FOUND
"RTN","PXRMDLLA",229,0)
 ;
"RTN","PXRMDLLA",230,0)
TEST(ORY,DITEM,DCUR,DTTYP) ;
"RTN","PXRMDLLA",231,0)
 D LOAD(DITEM,DCUR,DTTYP)
"RTN","PXRMDLLA",232,0)
 Q
"RTN","PXRMDLR")
0^181^B11433691
"RTN","PXRMDLR",1,0)
PXRMDLR ;SLC/PJH - DIALOG RESULTS LOADER ;06/09/2000
"RTN","PXRMDLR",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDLR",3,0)
 ;
"RTN","PXRMDLR",4,0)
 ;Build score related P/N text from score and result group
"RTN","PXRMDLR",5,0)
 ; 
"RTN","PXRMDLR",6,0)
 ;If not found
"RTN","PXRMDLR",7,0)
 I '$G(RESULT) S ORY(1)="-1^no results for this test" Q
"RTN","PXRMDLR",8,0)
 ;
"RTN","PXRMDLR",9,0)
 N ARRAY,ERROR,INSERT,OK,SCORE,SUB,YT
"RTN","PXRMDLR",10,0)
 ;
"RTN","PXRMDLR",11,0)
 S ERROR=0
"RTN","PXRMDLR",12,0)
 ;
"RTN","PXRMDLR",13,0)
 ;Get score using API
"RTN","PXRMDLR",14,0)
 I ORES("CODE")'="DOM80" D  Q:ERROR
"RTN","PXRMDLR",15,0)
 .M YT=ORES
"RTN","PXRMDLR",16,0)
 .D PREVIEW^YTAPI4(.ARRAY,.YT)
"RTN","PXRMDLR",17,0)
 .I ARRAY(1)'="[DATA]" S ORY(1)="-1^"_ARRAY(1)_ARRAY(2),ERROR=1 Q
"RTN","PXRMDLR",18,0)
 .S SUB=0,OK=0
"RTN","PXRMDLR",19,0)
 .F  S SUB=$O(ARRAY(SUB)) Q:'SUB  D  Q:OK
"RTN","PXRMDLR",20,0)
 ..I $P(ARRAY(SUB),U)="S1" S SCORE=$P(ARRAY(SUB),U,3),OK=1
"RTN","PXRMDLR",21,0)
 .I 'OK S ORY(1)="-1^[ERROR] no score returned",ERROR=1 Q
"RTN","PXRMDLR",22,0)
 ;
"RTN","PXRMDLR",23,0)
 ;Except for DOM80
"RTN","PXRMDLR",24,0)
 I ORES("CODE")="DOM80" D
"RTN","PXRMDLR",25,0)
 .I $E(ORES("R1"))="Y" S SCORE=1 Q
"RTN","PXRMDLR",26,0)
 .I $E(ORES("R1"),2,3)="YY",($E(ORES("R1"),4)>1) S SCORE=1 Q
"RTN","PXRMDLR",27,0)
 .S SCORE=0
"RTN","PXRMDLR",28,0)
 ;
"RTN","PXRMDLR",29,0)
 S INSERT("SCORE")=SCORE
"RTN","PXRMDLR",30,0)
 ;
"RTN","PXRMDLR",31,0)
 ;For AIMS special formatting is required 
"RTN","PXRMDLR",32,0)
 I ORES("CODE")="AIMS" D
"RTN","PXRMDLR",33,0)
 .N CNT,LITS,RESP,SUM
"RTN","PXRMDLR",34,0)
 .S LITS(0)="none",LITS(1)="minimal",LITS(2)="mild",LITS(3)="moderate"
"RTN","PXRMDLR",35,0)
 .S LITS(4)="severe",SUM(2)=0,SUM(3)=0,SUM(4)=0
"RTN","PXRMDLR",36,0)
 .F CNT=1:1 S RESP=$E(ORES("R1"),CNT) Q:RESP=""  D
"RTN","PXRMDLR",37,0)
 ..S INSERT("R"_CNT)=$G(LITS(RESP))
"RTN","PXRMDLR",38,0)
 ..I (CNT<8),(234[RESP) S SUM(RESP)=SUM(RESP)+1
"RTN","PXRMDLR",39,0)
 .F CNT=2,3,4 S INSERT("SUM"_CNT)=SUM(CNT)
"RTN","PXRMDLR",40,0)
 ;
"RTN","PXRMDLR",41,0)
 ;Load dialog results into ORY array
"RTN","PXRMDLR",42,0)
 N DATA,DITEM,DSEQ,DSUB,DTYP,INS,SEP,TEXT
"RTN","PXRMDLR",43,0)
 ;Get the result elements
"RTN","PXRMDLR",44,0)
 S DSEQ=0,OCNT=0
"RTN","PXRMDLR",45,0)
 F  S DSEQ=$O(^PXRMD(801.41,RESULT,10,"B",DSEQ)) Q:'DSEQ  D
"RTN","PXRMDLR",46,0)
 .S DSUB=$O(^PXRMD(801.41,RESULT,10,"B",DSEQ,"")) Q:'DSUB
"RTN","PXRMDLR",47,0)
 .S DITEM=$P($G(^PXRMD(801.41,RESULT,10,DSUB,0)),U,2) Q:'DITEM
"RTN","PXRMDLR",48,0)
 .;Get the result element
"RTN","PXRMDLR",49,0)
 .S DTYP=$P($G(^PXRMD(801.41,DITEM,0)),U,4) Q:DTYP'="T"
"RTN","PXRMDLR",50,0)
 .;Get the result element condition
"RTN","PXRMDLR",51,0)
 .S DCON=$P($G(^PXRMD(801.41,DITEM,0)),U,13)
"RTN","PXRMDLR",52,0)
 .;Skip if condition not satisfied
"RTN","PXRMDLR",53,0)
 .I DCON'="" S DCON=$TR(DCON,"~"," ") Q:'$$TRUE(SCORE,DCON)
"RTN","PXRMDLR",54,0)
 .;Get progress note text if defined
"RTN","PXRMDLR",55,0)
 .N LAST,NULL,SUB,TEXT S SUB=0,LAST=0
"RTN","PXRMDLR",56,0)
 .F  S SUB=$O(^PXRMD(801.41,DITEM,35,SUB)) Q:'SUB  D
"RTN","PXRMDLR",57,0)
 ..;Insert score into text (if neccessary)
"RTN","PXRMDLR",58,0)
 ..S TEXT=$G(^PXRMD(801.41,DITEM,35,SUB,0))
"RTN","PXRMDLR",59,0)
 ..S NULL=0 I ($E(TEXT)=" ")!(TEXT="") S NULL=1
"RTN","PXRMDLR",60,0)
 ..;Add line breaks if is or preceded by blank line or starts with space
"RTN","PXRMDLR",61,0)
 ..I ('NULL),LAST S TEXT="<br>"_TEXT
"RTN","PXRMDLR",62,0)
 ..S LAST=0 I NULL S TEXT="<br>"_TEXT,LAST=1
"RTN","PXRMDLR",63,0)
 ..;Check for inserts - note there may be embedded TIU markers too
"RTN","PXRMDLR",64,0)
 ..N INS
"RTN","PXRMDLR",65,0)
 ..S INS=""
"RTN","PXRMDLR",66,0)
 ..F  S INS=$O(INSERT(INS)) Q:INS=""  D
"RTN","PXRMDLR",67,0)
 ...S SEP="|"_INS_"|" I '$F(TEXT,SEP) Q
"RTN","PXRMDLR",68,0)
 ...S TEXT=$P(TEXT,SEP)_$G(INSERT(INS))_$P(TEXT,SEP,2,99)
"RTN","PXRMDLR",69,0)
 ..S OCNT=OCNT+1,ORY(OCNT)=7_U_TEXT
"RTN","PXRMDLR",70,0)
 Q
"RTN","PXRMDLR",71,0)
 ;
"RTN","PXRMDLR",72,0)
OUT(DATA) ;Display element details
"RTN","PXRMDLR",73,0)
 N DITEM S DITEM=$P(DATA,U,2) Q:'DITEM
"RTN","PXRMDLR",74,0)
 W $P($G(^PXRMD(801.41,DITEM,0)),U)
"RTN","PXRMDLR",75,0)
 W !,$J("Element Condition:  ",19)
"RTN","PXRMDLR",76,0)
 W $TR($P($G(^PXRMD(801.41,DITEM,0)),U,13),"~"," ")
"RTN","PXRMDLR",77,0)
 W !,$J("Element text:",17)
"RTN","PXRMDLR",78,0)
 ;Get progress note text if defined
"RTN","PXRMDLR",79,0)
 N SUB,TEXT S SUB=0
"RTN","PXRMDLR",80,0)
 F  S SUB=$O(^PXRMD(801.41,DITEM,35,SUB)) Q:'SUB  D
"RTN","PXRMDLR",81,0)
 .S TEXT=$G(^PXRMD(801.41,DITEM,35,SUB,0)) W !,?5,TEXT
"RTN","PXRMDLR",82,0)
 Q
"RTN","PXRMDLR",83,0)
 ;
"RTN","PXRMDLR",84,0)
TRUE(V,COND) ; Check if value meets element condition
"RTN","PXRMDLR",85,0)
 X COND I  Q 1
"RTN","PXRMDLR",86,0)
 Q 0
"RTN","PXRMDLST")
0^31^B18143519
"RTN","PXRMDLST",1,0)
PXRMDLST ; SLC/PJH - Reminder Dialog Inquiry ;05/30/2000
"RTN","PXRMDLST",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDLST",3,0)
 ;
"RTN","PXRMDLST",4,0)
 ;
"RTN","PXRMDLST",5,0)
START N BY,DC,DHD,DIC,EXPAND,FLDS,FR,L,LIT,LOGIC,NOW,TO,Y
"RTN","PXRMDLST",6,0)
 N PXRMFIEN,PXRMHD
"RTN","PXRMDLST",7,0)
 ;
"RTN","PXRMDLST",8,0)
 S LIT="ALL DIALOGS"
"RTN","PXRMDLST",9,0)
 I PXRMDTYP="R" S LIT="REMINDER DIALOGS"
"RTN","PXRMDLST",10,0)
 I PXRMDTYP="P" S LIT="DIALOG PROMPTS"
"RTN","PXRMDLST",11,0)
 I PXRMDTYP="F" S LIT="DIALOG FORCED VALUES"
"RTN","PXRMDLST",12,0)
 I PXRMDTYP="E" S LIT="DIALOG ELEMENTS"
"RTN","PXRMDLST",13,0)
 I PXRMDTYP="G" S LIT="DIALOG GROUPS"
"RTN","PXRMDLST",14,0)
 ;
"RTN","PXRMDLST",15,0)
 ;DIC is killed by DIP.
"RTN","PXRMDLST",16,0)
SELECT S DIC="^PXRMD(801.41,"
"RTN","PXRMDLST",17,0)
 S DIC(0)="AEMQ"
"RTN","PXRMDLST",18,0)
 S DIC("A")="Select Dialog Definition: "
"RTN","PXRMDLST",19,0)
 ;Current dialog type only
"RTN","PXRMDLST",20,0)
 S DIC("S")="I $P(^(0),U,4)=PXRMDTYP"
"RTN","PXRMDLST",21,0)
 D ^DIC
"RTN","PXRMDLST",22,0)
 I Y'=-1 D  G SELECT
"RTN","PXRMDLST",23,0)
 .;^DIP options
"RTN","PXRMDLST",24,0)
 .D SET
"RTN","PXRMDLST",25,0)
 .D DISP
"RTN","PXRMDLST",26,0)
END Q
"RTN","PXRMDLST",27,0)
 ;
"RTN","PXRMDLST",28,0)
 ;List all (for protocol PXRM SELECTION LIST)
"RTN","PXRMDLST",29,0)
 ;--------
"RTN","PXRMDLST",30,0)
ALL N BY,DC,DHD,DIC,DIS,FLDS,FR,L,LIT,LOGIC,NOW,TO,Y
"RTN","PXRMDLST",31,0)
 S LIT="ALL DIALOGS"
"RTN","PXRMDLST",32,0)
 I PXRMDTYP="R" S LIT="REMINDER DIALOGS"
"RTN","PXRMDLST",33,0)
 I PXRMDTYP="P" S LIT="DIALOG PROMPTS"
"RTN","PXRMDLST",34,0)
 I PXRMDTYP="E" S LIT="DIALOG ELEMENTS"
"RTN","PXRMDLST",35,0)
 I PXRMDTYP="G" S LIT="DIALOG GROUPS"
"RTN","PXRMDLST",36,0)
 I PXRMDTYP="F" S LIT="DIALOG FORCED VALUES"
"RTN","PXRMDLST",37,0)
 I $G(PXRMGTYP)="DLG" S LIT="REMINDER DIALOGS"
"RTN","PXRMDLST",38,0)
 S Y=1
"RTN","PXRMDLST",39,0)
 D SET
"RTN","PXRMDLST",40,0)
 S DIC="^PXRMD(801.41,"
"RTN","PXRMDLST",41,0)
 ;
"RTN","PXRMDLST",42,0)
 I PXRMDTYP'="A" S DIS(0)="I $P($G(^PXRMD(801.41,D0,0)),U,4)=PXRMDTYP"
"RTN","PXRMDLST",43,0)
 S BY=".01"
"RTN","PXRMDLST",44,0)
 S FR=""
"RTN","PXRMDLST",45,0)
 S TO=""
"RTN","PXRMDLST",46,0)
 S DHD="W ?0 D HED^PXRMDLST"
"RTN","PXRMDLST",47,0)
 D DISP
"RTN","PXRMDLST",48,0)
 Q
"RTN","PXRMDLST",49,0)
 ;
"RTN","PXRMDLST",50,0)
 ;Inquire/Print Option (for protocol PXRM GENERAL INQUIRE/PRINT)
"RTN","PXRMDLST",51,0)
 ;--------------------
"RTN","PXRMDLST",52,0)
INQ(Y) N BY,DC,DHD,DIC,FLDS,FR,L,LOGIC,NOW,TO
"RTN","PXRMDLST",53,0)
 S DIC="^PXRMD(801.41,"
"RTN","PXRMDLST",54,0)
 S DIC(0)="AEMQ"
"RTN","PXRMDLST",55,0)
 D SET
"RTN","PXRMDLST",56,0)
 D DISP
"RTN","PXRMDLST",57,0)
 Q
"RTN","PXRMDLST",58,0)
 ;
"RTN","PXRMDLST",59,0)
 ;Inquiry/Print for dialog edit (for protocol PXRM DIALOG SELECTION INQ)
"RTN","PXRMDLST",60,0)
 ;-----------------------------
"RTN","PXRMDLST",61,0)
INQ1 W IORESET
"RTN","PXRMDLST",62,0)
 D START
"RTN","PXRMDLST",63,0)
 Q
"RTN","PXRMDLST",64,0)
 ;
"RTN","PXRMDLST",65,0)
 ;
"RTN","PXRMDLST",66,0)
 ;Display using print templates
"RTN","PXRMDLST",67,0)
 ;-----------------------------
"RTN","PXRMDLST",68,0)
DISP S L=0,FLDS="[PXRM REMINDER DIALOG]"
"RTN","PXRMDLST",69,0)
 I PXRMDTYP="E" S FLDS="[PXRM DIALOG ELEMENT]"
"RTN","PXRMDLST",70,0)
 I PXRMDTYP="F" S FLDS="[PXRM DIALOG FORCED VALUE]"
"RTN","PXRMDLST",71,0)
 I PXRMDTYP="G" S FLDS="[PXRM DIALOG GROUP]"
"RTN","PXRMDLST",72,0)
 I PXRMDTYP="P" S FLDS="[PXRM DIALOG PROMPT]"
"RTN","PXRMDLST",73,0)
 I PXRMDTYP="S" S FLDS="[PXRM RESULT GROUP]"
"RTN","PXRMDLST",74,0)
 I PXRMDTYP="T" S FLDS="[PXRM RESULT ELEMENT]"
"RTN","PXRMDLST",75,0)
 ;
"RTN","PXRMDLST",76,0)
 D EN1^DIP
"RTN","PXRMDLST",77,0)
 Q
"RTN","PXRMDLST",78,0)
 ;
"RTN","PXRMDLST",79,0)
 ;Header
"RTN","PXRMDLST",80,0)
 ;------
"RTN","PXRMDLST",81,0)
HED N TEMP,TEXTLEN,TEXTHED,TEXTUND
"RTN","PXRMDLST",82,0)
 S TEXTHED="REMINDER DIALOG INQUIRY"
"RTN","PXRMDLST",83,0)
 S TEXTUND=$TR($J("",IOM)," ","-")
"RTN","PXRMDLST",84,0)
 S TEMP=NOW_"  Page "_DC
"RTN","PXRMDLST",85,0)
 S TEXTLEN=$L(TEMP)
"RTN","PXRMDLST",86,0)
 W TEXTHED
"RTN","PXRMDLST",87,0)
 W ?(IOM-TEXTLEN),TEMP
"RTN","PXRMDLST",88,0)
 W !,TEXTUND,!!
"RTN","PXRMDLST",89,0)
 Q
"RTN","PXRMDLST",90,0)
 ;
"RTN","PXRMDLST",91,0)
 ;Get question text
"RTN","PXRMDLST",92,0)
 ;-----------------
"RTN","PXRMDLST",93,0)
PROMPT N DTYP,FIRST,NODE,SUB,LINE,TAB
"RTN","PXRMDLST",94,0)
 S SUB=$P(X,U,2) Q:SUB=""
"RTN","PXRMDLST",95,0)
 S DTYP=$P($G(^PXRMD(801.41,SUB,0)),U,4) Q:DTYP=""
"RTN","PXRMDLST",96,0)
 ;Dialog element
"RTN","PXRMDLST",97,0)
 I DTYP="E" D  Q
"RTN","PXRMDLST",98,0)
 .S NODE=0,FIRST=1,TAB=26
"RTN","PXRMDLST",99,0)
 .F  S NODE=$O(^PXRMD(801.41,SUB,25,NODE)) Q:'NODE  D
"RTN","PXRMDLST",100,0)
 ..S LINE=$G(^PXRMD(801.41,SUB,25,NODE,0))
"RTN","PXRMDLST",101,0)
 ..I 'FIRST W !
"RTN","PXRMDLST",102,0)
 ..I FIRST,$L(LINE)>50 W ! S TAB=2
"RTN","PXRMDLST",103,0)
 ..W ?TAB,LINE
"RTN","PXRMDLST",104,0)
 ;Prompt/Forced Value
"RTN","PXRMDLST",105,0)
 I "FP"[DTYP W $P($G(^PXRMD(801.41,SUB,2)),U,4)
"RTN","PXRMDLST",106,0)
 Q
"RTN","PXRMDLST",107,0)
 ;
"RTN","PXRMDLST",108,0)
SET ;Setup all the variables
"RTN","PXRMDLST",109,0)
 ; Set Date for Header
"RTN","PXRMDLST",110,0)
 S NOW=$$NOW^XLFDT
"RTN","PXRMDLST",111,0)
 S NOW=$$FMTE^XLFDT(NOW,"1P")
"RTN","PXRMDLST",112,0)
 ;
"RTN","PXRMDLST",113,0)
 ;These variables need to be setup every time because DIP kills them.
"RTN","PXRMDLST",114,0)
 S BY="NUMBER"
"RTN","PXRMDLST",115,0)
 S (FR,TO)=+$P(Y,U,1)
"RTN","PXRMDLST",116,0)
 S DHD="W ?0 D HED^PXRMDLST"
"RTN","PXRMDLST",117,0)
 ;
"RTN","PXRMDLST",118,0)
 Q
"RTN","PXRMDLST",119,0)
 ;
"RTN","PXRMDLST",120,0)
 ;Orderable item
"RTN","PXRMDLST",121,0)
 ;--------------
"RTN","PXRMDLST",122,0)
ORDER I '$G(D0) Q
"RTN","PXRMDLST",123,0)
 N QNAM,QORDER,RIEN,RNAM
"RTN","PXRMDLST",124,0)
 S RIEN=$P($G(^PXRMD(801.41,D0,1)),U,3),RNAM=""
"RTN","PXRMDLST",125,0)
 I RIEN S RNAM=$P($G(^PXRMD(801.9,RIEN,0)),U)
"RTN","PXRMDLST",126,0)
 I RNAM'="ORDERED" W ?24,"N/A" Q
"RTN","PXRMDLST",127,0)
 S QORDER=$P($G(^PXRMD(801.41,D0,1)),U,7)
"RTN","PXRMDLST",128,0)
 I 'QORDER W ?24,"None" Q
"RTN","PXRMDLST",129,0)
 S QNAM=$P($G(^ORD(101.43,QORDER,0)),U) I QNAM="" S QNAM="Unknown"
"RTN","PXRMDLST",130,0)
 W ?24,QNAM," (OI["_QORDER_"])"
"RTN","PXRMDLST",131,0)
 Q
"RTN","PXRMDLST",132,0)
 ;
"RTN","PXRMDLST",133,0)
 ;Dialog ELEMENT pointed to by REMINDER DIALOGS/GROUPS
"RTN","PXRMDLST",134,0)
 ;----------------------------------------------------
"RTN","PXRMDLST",135,0)
USE(DIEN,TAB,CUR) ;
"RTN","PXRMDLST",136,0)
 Q:'$G(DIEN)
"RTN","PXRMDLST",137,0)
 N DSUB,DENAM,DETYP,DTLIT,DMES
"RTN","PXRMDLST",138,0)
 S DSUB=0
"RTN","PXRMDLST",139,0)
 F  S DSUB=$O(^PXRMD(801.41,"AD",DIEN,DSUB)) Q:'DSUB  D
"RTN","PXRMDLST",140,0)
 .S DATA=$G(^PXRMD(801.41,DSUB,0)) Q:DATA=""
"RTN","PXRMDLST",141,0)
 .S DENAM=$P(DATA,U) Q:DENAM=""
"RTN","PXRMDLST",142,0)
 .S DETYP=$P(DATA,U,4) Q:DETYP=""
"RTN","PXRMDLST",143,0)
 .S DTLIT="??",DMES="" S:CUR=DSUB DMES="Current "
"RTN","PXRMDLST",144,0)
 .I DETYP="R" S DTLIT="Reminder Dialog"
"RTN","PXRMDLST",145,0)
 .I DETYP="G" S DTLIT="Dialog Group"
"RTN","PXRMDLST",146,0)
 .I DETYP="E" S DTLIT="Dialog Element"
"RTN","PXRMDLST",147,0)
 .I DETYP="S" S DTLIT="Result Group"
"RTN","PXRMDLST",148,0)
 .W ?TAB,DENAM_" ("_DMES_DTLIT_")",!
"RTN","PXRMDLST",149,0)
 Q
"RTN","PXRMDP1")
1^32
"RTN","PXRMDRCL")
0^33^B10490578
"RTN","PXRMDRCL",1,0)
PXRMDRCL ; SLC/PKR - Handle VA DRUG CLASS findings. ;05/09/2000
"RTN","PXRMDRCL",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDRCL",3,0)
 ;
"RTN","PXRMDRCL",4,0)
 ;=======================================================================
"RTN","PXRMDRCL",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate drug class (file #50.605) findings.
"RTN","PXRMDRCL",6,0)
 N DRCLIEN,FIND0,FINDING
"RTN","PXRMDRCL",7,0)
 S DRCLIEN=""
"RTN","PXRMDRCL",8,0)
 F  S DRCLIEN=$O(^PXD(811.9,PXRMITEM,20,"E","PS(50.605,",DRCLIEN)) Q:+DRCLIEN=0  D
"RTN","PXRMDRCL",9,0)
 . S FINDING=""
"RTN","PXRMDRCL",10,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","PS(50.605,",DRCLIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMDRCL",11,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMDRCL",12,0)
 .. D FIEVAL(DFN,DRCLIEN,FIND0,"",FINDING,.FIEVAL)
"RTN","PXRMDRCL",13,0)
 Q
"RTN","PXRMDRCL",14,0)
 ;
"RTN","PXRMDRCL",15,0)
 ;=======================================================================
"RTN","PXRMDRCL",16,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate drug class (file #50.605) terms.
"RTN","PXRMDRCL",17,0)
 N DRCLIEN,FIND0,TFIND0,TFINDING
"RTN","PXRMDRCL",18,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMDRCL",19,0)
 S DRCLIEN=""
"RTN","PXRMDRCL",20,0)
 F  S DRCLIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","PS(50.605,",DRCLIEN)) Q:+DRCLIEN=0  D
"RTN","PXRMDRCL",21,0)
 . S TFINDING=""
"RTN","PXRMDRCL",22,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","PS(50.605,",DRCLIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMDRCL",23,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMDRCL",24,0)
 .. D FIEVAL(DFN,DRCLIEN,FIND0,TFIND0,TFINDING,.TFIEVAL)
"RTN","PXRMDRCL",25,0)
 Q
"RTN","PXRMDRCL",26,0)
 ;
"RTN","PXRMDRCL",27,0)
 ;=======================================================================
"RTN","PXRMDRCL",28,0)
FIEVAL(DFN,DRCLIEN,FIND0,TFIND0,FINDING,FIEVAL) ;
"RTN","PXRMDRCL",29,0)
 N DATE,DRUGCLAS,DRUG,DRUGIEN,DSUP,LDATE,RDATE,STATUS,VALID
"RTN","PXRMDRCL",30,0)
 S DRUGCLAS=$$CLASS2^PSNAPIS(DRCLIEN)
"RTN","PXRMDRCL",31,0)
 ;Use the "VAC" cross-reference on file 50 to find all drugs in this
"RTN","PXRMDRCL",32,0)
 ;class
"RTN","PXRMDRCL",33,0)
 S DATE=0
"RTN","PXRMDRCL",34,0)
 S DRUGIEN=0
"RTN","PXRMDRCL",35,0)
 F  S DRUGIEN=$O(^PSDRUG("VAC",DRCLIEN,DRUGIEN)) Q:+DRUGIEN=0  D
"RTN","PXRMDRCL",36,0)
 . S DRUG=$$GET1^DIQ(50,DRUGIEN,.01)
"RTN","PXRMDRCL",37,0)
 . D LDATE^PXRMDRUG(DFN,DRUG,.DSUP,.LDATE,.RDATE,.STATUS)
"RTN","PXRMDRCL",38,0)
 . I LDATE>DATE D
"RTN","PXRMDRCL",39,0)
 .. S DATE=LDATE
"RTN","PXRMDRCL",40,0)
 .. S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMDRCL",41,0)
 .. S FIEVAL(FINDING,"DRUG")=DRUG
"RTN","PXRMDRCL",42,0)
 .. S FIEVAL(FINDING,"DSUP")=DSUP
"RTN","PXRMDRCL",43,0)
 .. S FIEVAL(FINDING,"RDATE")=RDATE
"RTN","PXRMDRCL",44,0)
 .. S FIEVAL(FINDING,"STATUS")=STATUS
"RTN","PXRMDRCL",45,0)
 ;If the last date is 0 then there is no release date and the finding
"RTN","PXRMDRCL",46,0)
 ;is false.
"RTN","PXRMDRCL",47,0)
 I +DATE=0 D  Q
"RTN","PXRMDRCL",48,0)
 . K FIEVAL(FINDING)
"RTN","PXRMDRCL",49,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMDRCL",50,0)
 ;Save the rest of the finding information.
"RTN","PXRMDRCL",51,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMDRCL",52,0)
 S FIEVAL(FINDING,"DRUG CLASS")=DRUGCLAS
"RTN","PXRMDRCL",53,0)
 S FIEVAL(FINDING,"FINDING")=DRCLIEN_";PS(50.605,"
"RTN","PXRMDRCL",54,0)
 ;Determine if the finding has expired.
"RTN","PXRMDRCL",55,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMDRCL",56,0)
 I 'VALID D
"RTN","PXRMDRCL",57,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMDRCL",58,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMDRCL",59,0)
 Q
"RTN","PXRMDRCL",60,0)
 ;
"RTN","PXRMDRCL",61,0)
 ;=======================================================================
"RTN","PXRMDRCL",62,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMDRCL",63,0)
 ;maintenance output.
"RTN","PXRMDRCL",64,0)
 N DATE,DRUG,DRUGCLAS,TEMP
"RTN","PXRMDRCL",65,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMDRCL",66,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMDRCL",67,0)
 S TEMP=TEMP_" Drug Class: "
"RTN","PXRMDRCL",68,0)
 S DRUGCLAS=FIEVAL(FINDING,"DRUG CLASS")
"RTN","PXRMDRCL",69,0)
 S TEMP=TEMP_$P(DRUGCLAS,U,1)_"-"_$P(DRUGCLAS,U,2)
"RTN","PXRMDRCL",70,0)
 S DRUG=FIEVAL(FINDING,"DRUG")
"RTN","PXRMDRCL",71,0)
 S TEMP=TEMP_" (Drug: "_DRUG_")"
"RTN","PXRMDRCL",72,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMDRCL",73,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMDRCL",74,0)
 S NLINES=NLINES+1
"RTN","PXRMDRCL",75,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDRCL",76,0)
 S TEMP="Status: "_FIEVAL(FINDING,"STATUS")
"RTN","PXRMDRCL",77,0)
 I $D(FIEVAL(FINDING,"RDATE")) S TEMP=TEMP_" Last fill date:"_$$EDATE^PXRMDATE(FIEVAL(FINDING,"RDATE"))
"RTN","PXRMDRCL",78,0)
 I $D(FIEVAL(FINDING,"DSUP")) S TEMP=TEMP_" Days supply:"_FIEVAL(FINDING,"DSUP")
"RTN","PXRMDRCL",79,0)
 S NLINES=NLINES+1
"RTN","PXRMDRCL",80,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDRCL",81,0)
 I $D(PXRMDEV) D
"RTN","PXRMDRCL",82,0)
 . N UID
"RTN","PXRMDRCL",83,0)
 . S UID="DRUG CLASS "_DRUGCLAS
"RTN","PXRMDRCL",84,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMDRCL",85,0)
 Q
"RTN","PXRMDRCL",86,0)
 ;
"RTN","PXRMDRUG")
0^34^B25703563
"RTN","PXRMDRUG",1,0)
PXRMDRUG ; SLC/PKR - Handle drug findings. ;05/18/2000
"RTN","PXRMDRUG",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMDRUG",3,0)
 ;
"RTN","PXRMDRUG",4,0)
 ;=======================================================================
"RTN","PXRMDRUG",5,0)
BLDCACHE(DFN) ;Build the patient drug cache.
"RTN","PXRMDRUG",6,0)
 N PXRMDFN S PXRMDFN="PXRMDFN"_DFN
"RTN","PXRMDRUG",7,0)
 K ^TMP("PS",$J),^XTMP(PXRMDFN,"PSDRUG")
"RTN","PXRMDRUG",8,0)
 N DRUG,DRUGIEN,IND,ORDER,POI,TEMP
"RTN","PXRMDRUG",9,0)
 D OCL^PSOORRL(DFN,"","")
"RTN","PXRMDRUG",10,0)
 S IND=0
"RTN","PXRMDRUG",11,0)
 F  S IND=$O(^TMP("PS",$J,IND)) Q:+IND=0  D
"RTN","PXRMDRUG",12,0)
 . S TEMP=^TMP("PS",$J,IND,0)
"RTN","PXRMDRUG",13,0)
 . S ORDER=$P(TEMP,U,1)
"RTN","PXRMDRUG",14,0)
 . I $L(ORDER)=0 Q
"RTN","PXRMDRUG",15,0)
 . S DRUG=$P(TEMP,U,2)
"RTN","PXRMDRUG",16,0)
 .;Look for DRUG file entries, if not there then probably pharmacy
"RTN","PXRMDRUG",17,0)
 .;orderable item.
"RTN","PXRMDRUG",18,0)
 . I $L(DRUG)=0 S DRUGIEN=0
"RTN","PXRMDRUG",19,0)
 . E  S DRUGIEN=+$O(^PSDRUG("B",DRUG,""))
"RTN","PXRMDRUG",20,0)
 . I DRUGIEN>0 S ^XTMP(PXRMDFN,"PSDRUG",DRUG,ORDER)=""
"RTN","PXRMDRUG",21,0)
 . E  S POI(ORDER)=""
"RTN","PXRMDRUG",22,0)
 K ^TMP("PS",$J)
"RTN","PXRMDRUG",23,0)
 ;Process the pharmacy orderable item list.
"RTN","PXRMDRUG",24,0)
 S ORDER=""
"RTN","PXRMDRUG",25,0)
 F  S ORDER=$O(POI(ORDER)) Q:ORDER=""  D
"RTN","PXRMDRUG",26,0)
 . D OEL^PSOORRL(DFN,ORDER)
"RTN","PXRMDRUG",27,0)
 . I '$D(^TMP("PS",$J,"DD")) K ^TMP("PS",$J) Q
"RTN","PXRMDRUG",28,0)
 . S IND=0
"RTN","PXRMDRUG",29,0)
 . F  S IND=$O(^TMP("PS",$J,"DD",IND)) Q:+IND=0  D
"RTN","PXRMDRUG",30,0)
 .. S DRUGIEN=$P(^TMP("PS",$J,"DD",IND,0),U,1)
"RTN","PXRMDRUG",31,0)
 .. S DRUG=$P(^PSDRUG(DRUGIEN,0),U,1)
"RTN","PXRMDRUG",32,0)
 .. S ^XTMP(PXRMDFN,"PSDRUG",DRUG,ORDER)=""
"RTN","PXRMDRUG",33,0)
 . K ^TMP("PS",$J)
"RTN","PXRMDRUG",34,0)
 K ^TMP("PS",$J)
"RTN","PXRMDRUG",35,0)
 Q
"RTN","PXRMDRUG",36,0)
 ;
"RTN","PXRMDRUG",37,0)
 ;=======================================================================
"RTN","PXRMDRUG",38,0)
EVALFI(DFN,FIEVAL) ;Evaluate drug (file #50) findings.
"RTN","PXRMDRUG",39,0)
 N DRUGIEN,FIND0,FINDING
"RTN","PXRMDRUG",40,0)
 S DRUGIEN=""
"RTN","PXRMDRUG",41,0)
 F  S DRUGIEN=$O(^PXD(811.9,PXRMITEM,20,"E","PSDRUG(",DRUGIEN)) Q:+DRUGIEN=0  D
"RTN","PXRMDRUG",42,0)
 . S FINDING=""
"RTN","PXRMDRUG",43,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","PSDRUG(",DRUGIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMDRUG",44,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMDRUG",45,0)
 .. D FIEVAL(DFN,DRUGIEN,FIND0,"",FINDING,.FIEVAL)
"RTN","PXRMDRUG",46,0)
 Q
"RTN","PXRMDRUG",47,0)
 ;
"RTN","PXRMDRUG",48,0)
 ;=======================================================================
"RTN","PXRMDRUG",49,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate drug (file #50) terms.
"RTN","PXRMDRUG",50,0)
 N DRUGIEN,FIND0,TFIND0,TFINDING
"RTN","PXRMDRUG",51,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMDRUG",52,0)
 S DRUGIEN=""
"RTN","PXRMDRUG",53,0)
 F  S DRUGIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","PSDRUG(",DRUGIEN)) Q:+DRUGIEN=0  D
"RTN","PXRMDRUG",54,0)
 . S TFINDING=""
"RTN","PXRMDRUG",55,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","PSDRUG(",DRUGIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMDRUG",56,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMDRUG",57,0)
 .. D FIEVAL(DFN,DRUGIEN,FIND0,TFIND0,FINDING,.TFIEVAL)
"RTN","PXRMDRUG",58,0)
 Q
"RTN","PXRMDRUG",59,0)
 ;
"RTN","PXRMDRUG",60,0)
 ;=======================================================================
"RTN","PXRMDRUG",61,0)
FIEVAL(DFN,DRUGIEN,FIND0,TFIND0,FINDING,FIEVAL) ;
"RTN","PXRMDRUG",62,0)
 N DRUG,DSUP,LDATE,RDATE,STATUS,VALID
"RTN","PXRMDRUG",63,0)
 S DRUG=$P(^PSDRUG(DRUGIEN,0),U,1)
"RTN","PXRMDRUG",64,0)
 D LDATE(DFN,DRUG,.DSUP,.LDATE,.RDATE,.STATUS)
"RTN","PXRMDRUG",65,0)
 ;If the last date is 0 then there is no release date and the finding
"RTN","PXRMDRUG",66,0)
 ;is false.
"RTN","PXRMDRUG",67,0)
 I +LDATE=0 S FIEVAL(FINDING)=0 Q
"RTN","PXRMDRUG",68,0)
 ;Save the rest of the finding information.
"RTN","PXRMDRUG",69,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMDRUG",70,0)
 S FIEVAL(FINDING,"DATE")=LDATE
"RTN","PXRMDRUG",71,0)
 S FIEVAL(FINDING,"DRUG")=DRUG
"RTN","PXRMDRUG",72,0)
 S FIEVAL(FINDING,"DSUP")=DSUP
"RTN","PXRMDRUG",73,0)
 S FIEVAL(FINDING,"RDATE")=RDATE
"RTN","PXRMDRUG",74,0)
 S FIEVAL(FINDING,"STATUS")=STATUS
"RTN","PXRMDRUG",75,0)
 S FIEVAL(FINDING,"FINDING")=DRUGIEN_";PSDRUG("
"RTN","PXRMDRUG",76,0)
 ;Determine if the finding has expired.
"RTN","PXRMDRUG",77,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,LDATE)
"RTN","PXRMDRUG",78,0)
 I 'VALID D
"RTN","PXRMDRUG",79,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMDRUG",80,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMDRUG",81,0)
 Q
"RTN","PXRMDRUG",82,0)
 ;
"RTN","PXRMDRUG",83,0)
 ;=======================================================================
"RTN","PXRMDRUG",84,0)
LDATE(DFN,DRUG,DSUP,LDATE,RDATE,STATUS) ;Return last date patient is on drug,
"RTN","PXRMDRUG",85,0)
 ;refill date, days supply, and status.
"RTN","PXRMDRUG",86,0)
 N IND,NUM,ORDER,TDATE,TRDATE,TDSUP
"RTN","PXRMDRUG",87,0)
 I '$D(^XTMP(PXRMDFN,"PSDRUG")) D BLDCACHE(DFN)
"RTN","PXRMDRUG",88,0)
 I '$D(^XTMP(PXRMDFN,"PSDRUG",DRUG))="" S FIEVAL(FINDING)=0 Q 0
"RTN","PXRMDRUG",89,0)
 S (LDATE,DSUP,RDATE)=0
"RTN","PXRMDRUG",90,0)
 S ORDER=""
"RTN","PXRMDRUG",91,0)
 F  S ORDER=$O(^XTMP(PXRMDFN,"PSDRUG",DRUG,ORDER)) Q:ORDER=""  D
"RTN","PXRMDRUG",92,0)
 . K ^TMP("PS",$J)
"RTN","PXRMDRUG",93,0)
 . D OEL^PSOORRL(DFN,ORDER)
"RTN","PXRMDRUG",94,0)
 .;Make sure we got something back before continuing.
"RTN","PXRMDRUG",95,0)
 . I '$D(^TMP("PS",$J)) Q
"RTN","PXRMDRUG",96,0)
 . S STATUS=$P(^TMP("PS",$J,0),U,6)
"RTN","PXRMDRUG",97,0)
 . S TRDATE=+$P($G(^TMP("PS",$J,"RXN",0)),U,2)
"RTN","PXRMDRUG",98,0)
 . S TDSUP=+$P(^TMP("PS",$J,0),U,7)
"RTN","PXRMDRUG",99,0)
 . S TDATE=+$$FMADD^XLFDT(TRDATE,TDSUP)
"RTN","PXRMDRUG",100,0)
 . I TDATE>LDATE D
"RTN","PXRMDRUG",101,0)
 .. S LDATE=TDATE
"RTN","PXRMDRUG",102,0)
 .. S DSUP=TDSUP
"RTN","PXRMDRUG",103,0)
 .. S RDATE=TRDATE
"RTN","PXRMDRUG",104,0)
 .;Check for refills.
"RTN","PXRMDRUG",105,0)
 . S NUM=+$P($G(^TMP("PS",$J,"REF",0)),U,1)
"RTN","PXRMDRUG",106,0)
 . F IND=1:1:NUM D
"RTN","PXRMDRUG",107,0)
 .. S TRDATE=+$P($G(^TMP("PS",$J,"REF",IND,0)),U,1)
"RTN","PXRMDRUG",108,0)
 .. S TDSUP=+$P($G(^TMP("PS",$J,"REF",IND,0)),U,2)
"RTN","PXRMDRUG",109,0)
 .. S TDATE=+$$FMADD^XLFDT(TRDATE,TDSUP)
"RTN","PXRMDRUG",110,0)
 .. I TDATE>LDATE D
"RTN","PXRMDRUG",111,0)
 ... S LDATE=TDATE
"RTN","PXRMDRUG",112,0)
 ... S DSUP=TDSUP
"RTN","PXRMDRUG",113,0)
 ... S RDATE=TRDATE
"RTN","PXRMDRUG",114,0)
 .;Check for partial refill
"RTN","PXRMDRUG",115,0)
 . S NUM=+$P($G(^TMP("PS",$J,"PAR",0)),U,1)
"RTN","PXRMDRUG",116,0)
 . F IND=1:1:NUM D
"RTN","PXRMDRUG",117,0)
 .. S TRDATE=+$P($G(^TMP("PS",$J,"PAR",IND,0)),U,1)
"RTN","PXRMDRUG",118,0)
 .. S TDSUP=+$P($G(^TMP("PS",$J,"PAR",IND,0)),U,2)
"RTN","PXRMDRUG",119,0)
 .. S TDATE=+$$FMADD^XLFDT(TRDATE,TDSUP)
"RTN","PXRMDRUG",120,0)
 .. I TDATE>LDATE D
"RTN","PXRMDRUG",121,0)
 ... S LDATE=TDATE
"RTN","PXRMDRUG",122,0)
 ... S DSUP=TDSUP
"RTN","PXRMDRUG",123,0)
 ... S RDATE=TRDATE
"RTN","PXRMDRUG",124,0)
 K ^TMP("PS",$J)
"RTN","PXRMDRUG",125,0)
 Q
"RTN","PXRMDRUG",126,0)
 ;
"RTN","PXRMDRUG",127,0)
 ;=======================================================================
"RTN","PXRMDRUG",128,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMDRUG",129,0)
 ;maintenance output.
"RTN","PXRMDRUG",130,0)
 N DATE,DRUG,TEMP
"RTN","PXRMDRUG",131,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMDRUG",132,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMDRUG",133,0)
 S TEMP=TEMP_" Drug: "
"RTN","PXRMDRUG",134,0)
 S DRUG=FIEVAL(FINDING,"DRUG")
"RTN","PXRMDRUG",135,0)
 S TEMP=TEMP_DRUG
"RTN","PXRMDRUG",136,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMDRUG",137,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMDRUG",138,0)
 S NLINES=NLINES+1
"RTN","PXRMDRUG",139,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDRUG",140,0)
 S TEMP="Status: "_FIEVAL(FINDING,"STATUS")
"RTN","PXRMDRUG",141,0)
 I $D(FIEVAL(FINDING,"RDATE")) S TEMP=TEMP_" Last fill date:"_$$EDATE^PXRMDATE(FIEVAL(FINDING,"RDATE"))
"RTN","PXRMDRUG",142,0)
 I $D(FIEVAL(FINDING,"DSUP")) S TEMP=TEMP_" Days supply:"_FIEVAL(FINDING,"DSUP")
"RTN","PXRMDRUG",143,0)
 S NLINES=NLINES+1
"RTN","PXRMDRUG",144,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDRUG",145,0)
 I $D(PXRMDEV) D
"RTN","PXRMDRUG",146,0)
 . N UID
"RTN","PXRMDRUG",147,0)
 . S UID="DRUG "_DRUG
"RTN","PXRMDRUG",148,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMDRUG",149,0)
 Q
"RTN","PXRMDRUG",150,0)
 ;
"RTN","PXRMEDIT")
0^35^B666443
"RTN","PXRMEDIT",1,0)
PXRMEDIT ; SLC/PKR - Clinical Reminder edit driver. ;05/18/2000
"RTN","PXRMEDIT",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMEDIT",3,0)
 ;
"RTN","PXRMEDIT",4,0)
EDIT(ROOT,IENN) ;Call the appropriate edit routine.
"RTN","PXRMEDIT",5,0)
 ;Taxonomy
"RTN","PXRMEDIT",6,0)
 I ROOT="^PXD(811.2," D EDIT^PXRMTEDT(ROOT,IENN) Q
"RTN","PXRMEDIT",7,0)
 ;
"RTN","PXRMEDIT",8,0)
 ;Reminder term
"RTN","PXRMEDIT",9,0)
 I ROOT="^PXRMD(811.5," D EDIT^PXRMTMED(ROOT,IENN) Q
"RTN","PXRMEDIT",10,0)
 ;
"RTN","PXRMEDIT",11,0)
 ;Reminder
"RTN","PXRMEDIT",12,0)
 I ROOT="^PXD(811.9," D
"RTN","PXRMEDIT",13,0)
 .;Build list of finding types for finding edit
"RTN","PXRMEDIT",14,0)
 . N DEF,DEF1,DEF2 D DEF^PXRMRUTL(.DEF,.DEF1,.DEF2)
"RTN","PXRMEDIT",15,0)
 .;Edit reminder
"RTN","PXRMEDIT",16,0)
 . D ALL^PXRMREDT(ROOT,IENN) Q
"RTN","PXRMEDIT",17,0)
 Q
"RTN","PXRMEDIT",18,0)
 ;
"RTN","PXRMEDU")
0^36^B11694460
"RTN","PXRMEDU",1,0)
PXRMEDU ; SLC/PKR - Handle education findings. ;06/09/2000
"RTN","PXRMEDU",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMEDU",3,0)
 ;
"RTN","PXRMEDU",4,0)
 ;=======================================================================
"RTN","PXRMEDU",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate education findings.
"RTN","PXRMEDU",6,0)
 N EDUIEN,FIND0,FINDING,INVDATE
"RTN","PXRMEDU",7,0)
 S EDUIEN=""
"RTN","PXRMEDU",8,0)
 F  S EDUIEN=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTEDT(",EDUIEN)) Q:+EDUIEN=0  D
"RTN","PXRMEDU",9,0)
 . S INVDATE=$O(^AUPNVPED("AA",DFN,EDUIEN,""))
"RTN","PXRMEDU",10,0)
 . S FINDING=""
"RTN","PXRMEDU",11,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTEDT(",EDUIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMEDU",12,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMEDU",13,0)
 .. D FIEVAL(DFN,EDUIEN,INVDATE,FIND0,"",FINDING,.FIEVAL)
"RTN","PXRMEDU",14,0)
 Q
"RTN","PXRMEDU",15,0)
 ;
"RTN","PXRMEDU",16,0)
 ;=======================================================================
"RTN","PXRMEDU",17,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate education terms.
"RTN","PXRMEDU",18,0)
 N EDUIEN,FIND0,INVDATE,TFIND0,TFINDING
"RTN","PXRMEDU",19,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMEDU",20,0)
 S EDUIEN=""
"RTN","PXRMEDU",21,0)
 F  S EDUIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTEDT(",EDUIEN)) Q:+EDUIEN=0  D
"RTN","PXRMEDU",22,0)
 . S INVDATE=$O(^AUPNVPED("AA",DFN,EDUIEN,""))
"RTN","PXRMEDU",23,0)
 . S TFINDING=""
"RTN","PXRMEDU",24,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTEDT(",EDUIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMEDU",25,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMEDU",26,0)
 .. D FIEVAL(DFN,EDUIEN,INVDATE,FIND0,TFIND0,TFINDING,.TFIEVAL)
"RTN","PXRMEDU",27,0)
 Q
"RTN","PXRMEDU",28,0)
 ;
"RTN","PXRMEDU",29,0)
 ;=======================================================================
"RTN","PXRMEDU",30,0)
FIEVAL(DFN,EDUIEN,INVDATE,FIND0,TFIND0,FINDING,FIEVAL) ;
"RTN","PXRMEDU",31,0)
 N CONVAL,DATE,IEN,IND,LOU,TEMP,VALID,VIEN
"RTN","PXRMEDU",32,0)
 I INVDATE="" S FIEVAL(FINDING)=0 Q
"RTN","PXRMEDU",33,0)
 S IEN=$O(^AUPNVPED("AA",DFN,EDUIEN,INVDATE,""))
"RTN","PXRMEDU",34,0)
 S TEMP=$G(^AUPNVPED(IEN,0))
"RTN","PXRMEDU",35,0)
 S LOU=$P(TEMP,U,6)
"RTN","PXRMEDU",36,0)
 S VIEN=$P(TEMP,U,3)
"RTN","PXRMEDU",37,0)
 S DATE=$$VDATE^PXRMDATE(VIEN)
"RTN","PXRMEDU",38,0)
 ;Save the rest of the finding information.
"RTN","PXRMEDU",39,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMEDU",40,0)
 S FIEVAL(FINDING,"FINDING")=EDUIEN_";AUTTEDT("
"RTN","PXRMEDU",41,0)
 S FIEVAL(FINDING,"SOURCE")=IEN_";AUPNVPED("
"RTN","PXRMEDU",42,0)
 S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMEDU",43,0)
 S FIEVAL(FINDING,"LEVEL OF UNDERSTANDING")=LOU
"RTN","PXRMEDU",44,0)
 S FIEVAL(FINDING,"VALUE")=LOU
"RTN","PXRMEDU",45,0)
 S FIEVAL(FINDING,"VIEN")=VIEN
"RTN","PXRMEDU",46,0)
 ;Determine if the finding has expired.
"RTN","PXRMEDU",47,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMEDU",48,0)
 I 'VALID D  Q
"RTN","PXRMEDU",49,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMEDU",50,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMEDU",51,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMEDU",52,0)
 S CONVAL=$$COND^PXRMUTIL(FIND0,TFIND0,LOU)
"RTN","PXRMEDU",53,0)
 I CONVAL'="" D
"RTN","PXRMEDU",54,0)
 . I CONVAL D
"RTN","PXRMEDU",55,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMEDU",56,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMEDU",57,0)
 . E  D
"RTN","PXRMEDU",58,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMEDU",59,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMEDU",60,0)
 Q
"RTN","PXRMEDU",61,0)
 ;
"RTN","PXRMEDU",62,0)
 ;=======================================================================
"RTN","PXRMEDU",63,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMEDU",64,0)
 ;maintenance output.
"RTN","PXRMEDU",65,0)
 N EDUIEN,EM,FIEN,IND,PNAME,LOU,TEMP,VDATE
"RTN","PXRMEDU",66,0)
 S EDUIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMEDU",67,0)
 S FIEN=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMEDU",68,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMEDU",69,0)
 S LOU=$G(FIEVAL(FINDING,"VALUE"))
"RTN","PXRMEDU",70,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMEDU",71,0)
 S TEMP=TEMP_" Education: "
"RTN","PXRMEDU",72,0)
 S IND=$P(^AUPNVPED(EDUIEN,0),U,1)
"RTN","PXRMEDU",73,0)
 S PNAME=$P(^AUTTEDT(FIEN,0),U,4)
"RTN","PXRMEDU",74,0)
 I $L(PNAME)'>0 S PNAME=$P(^AUTTEDT(FIEN,0),U,1)
"RTN","PXRMEDU",75,0)
 S TEMP=TEMP_PNAME
"RTN","PXRMEDU",76,0)
 I $L(LOU)>0 D
"RTN","PXRMEDU",77,0)
 . S TEMP=TEMP_"; level of understanding - "
"RTN","PXRMEDU",78,0)
 . S TEMP=TEMP_$$EXTERNAL^DILFD(9000010.16,.06,"",LOU,.EM)
"RTN","PXRMEDU",79,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMEDU",80,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMEDU",81,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMEDU",82,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMEDU",83,0)
 S NLINES=NLINES+1
"RTN","PXRMEDU",84,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMEDU",85,0)
 I $D(PXRMDEV) D
"RTN","PXRMEDU",86,0)
 . N UID
"RTN","PXRMEDU",87,0)
 . S UID="EDUCATION "_PNAME
"RTN","PXRMEDU",88,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMEDU",89,0)
 ;
"RTN","PXRMEDU",90,0)
 ;For historical encounters display the location and comments.
"RTN","PXRMEDU",91,0)
 I VDATE["E" D
"RTN","PXRMEDU",92,0)
 . N INDEX,VIEN
"RTN","PXRMEDU",93,0)
 . S INDEX="EDU-"_PNAME
"RTN","PXRMEDU",94,0)
 . S VIEN=FIEVAL(FINDING,"VIEN")
"RTN","PXRMEDU",95,0)
 . D HLCV^PXRMVSIT(.NLINES,.TEXT,VIEN,INDEX)
"RTN","PXRMEDU",96,0)
 Q
"RTN","PXRMEDU",97,0)
 ;
"RTN","PXRMERRH")
0^37^B8652648
"RTN","PXRMERRH",1,0)
PXRMERRH ; SLC/PKR - Error handling routines. ;05/18/2000
"RTN","PXRMERRH",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMERRH",3,0)
 ;
"RTN","PXRMERRH",4,0)
 ;======================================================================
"RTN","PXRMERRH",5,0)
ERRHDLR ;PXRM error handler. Send a MailMan message to the mail group defined
"RTN","PXRMERRH",6,0)
 ;by the site and put the error in the error trap.
"RTN","PXRMERRH",7,0)
 N ERROR,MGIEN,MGROUP,NL,REMINDER,XMDUZ,XMSUB,XMY,XMZ
"RTN","PXRMERRH",8,0)
 ;
"RTN","PXRMERRH",9,0)
 ;Save the error then put it in the error trap, this saves the correct
"RTN","PXRMERRH",10,0)
 ;last global reference.
"RTN","PXRMERRH",11,0)
 S ERROR=$$EC^%ZOSV
"RTN","PXRMERRH",12,0)
 D ^%ZTER
"RTN","PXRMERRH",13,0)
 ;
"RTN","PXRMERRH",14,0)
 ;If this is a test run write out the error.
"RTN","PXRMERRH",15,0)
 I $D(PXRMDEV) W !,ERROR
"RTN","PXRMERRH",16,0)
 ;
"RTN","PXRMERRH",17,0)
 ;Make the sender the Postmaster.
"RTN","PXRMERRH",18,0)
 S XMDUZ=0.5
"RTN","PXRMERRH",19,0)
 S XMSUB="ERROR EVALUATING CLINICAL REMINDER"
"RTN","PXRMERRH",20,0)
 ;
"RTN","PXRMERRH",21,0)
RETRY ;Get the message number.
"RTN","PXRMERRH",22,0)
 D XMZ^XMA2
"RTN","PXRMERRH",23,0)
 I XMZ<1 G RETRY
"RTN","PXRMERRH",24,0)
 ;
"RTN","PXRMERRH",25,0)
 ;Load the message
"RTN","PXRMERRH",26,0)
 S ^XMB(3.9,XMZ,2,1,0)="The following error occurred:"
"RTN","PXRMERRH",27,0)
 S ^XMB(3.9,XMZ,2,2,0)=ERROR
"RTN","PXRMERRH",28,0)
 I +$G(PXRMITEM)>0 S REMINDER=$P(^PXD(811.9,PXRMITEM,0),U,1)
"RTN","PXRMERRH",29,0)
 E  D
"RTN","PXRMERRH",30,0)
 . S PXRMITEM=999999
"RTN","PXRMERRH",31,0)
 . S REMINDER="?"
"RTN","PXRMERRH",32,0)
 S ^XMB(3.9,XMZ,2,3,0)="While evaluating reminder "_REMINDER
"RTN","PXRMERRH",33,0)
 S ^XMB(3.9,XMZ,2,4,0)="For patient DFN="_DFN
"RTN","PXRMERRH",34,0)
 S ^XMB(3.9,XMZ,2,5,0)="The time of the error was "_$$FMTE^XLFDT($$NOW^XLFDT,"5Y")
"RTN","PXRMERRH",35,0)
 S ^XMB(3.9,XMZ,2,6,0)="See the error trap for complete details."
"RTN","PXRMERRH",36,0)
 S NL=6
"RTN","PXRMERRH",37,0)
 ;Look for specific error text to append to the message.
"RTN","PXRMERRH",38,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP")) D
"RTN","PXRMERRH",39,0)
 . N ESOURCE,IND
"RTN","PXRMERRH",40,0)
 . S ESOURCE=""
"RTN","PXRMERRH",41,0)
 . F  S ESOURCE=$O(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP",ESOURCE)) Q:ESOURCE=""  D
"RTN","PXRMERRH",42,0)
 .. S IND=0
"RTN","PXRMERRH",43,0)
 .. F  S IND=$O(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP",ESOURCE,IND)) Q:IND=""  D
"RTN","PXRMERRH",44,0)
 ... S NL=NL+1
"RTN","PXRMERRH",45,0)
 ... S ^XMB(3.9,XMZ,2,NL,0)=^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP",ESOURCE,IND)
"RTN","PXRMERRH",46,0)
 ;
"RTN","PXRMERRH",47,0)
 ;Send the message to the site defined mailgroup.
"RTN","PXRMERRH",48,0)
 S MGIEN=$G(^PXRM(800,1,"MGFE"))
"RTN","PXRMERRH",49,0)
 ;If the mailgroup has not been defined send the message to the user.
"RTN","PXRMERRH",50,0)
 I MGIEN="" D
"RTN","PXRMERRH",51,0)
 . S MGROUP=DUZ
"RTN","PXRMERRH",52,0)
 . S NL=NL+1,^XMB(3.9,XMZ,2,NL,0)=" "
"RTN","PXRMERRH",53,0)
 . S NL=NL+1,^XMB(3.9,XMZ,2,NL,0)="You received this message because your IRM has not set up a mailgroup"
"RTN","PXRMERRH",54,0)
 . S NL=NL+1,^XMB(3.9,XMZ,2,NL,0)="to receive Clinical Reminder errors; please notify them."
"RTN","PXRMERRH",55,0)
 . S ^XMB(3.9,XMZ,2,0)="^3.92^"_+NL_U_+NL_U_DT
"RTN","PXRMERRH",56,0)
 E  S MGROUP="G."_$$GET1^DIQ(3.8,MGIEN,.01)
"RTN","PXRMERRH",57,0)
 ;
"RTN","PXRMERRH",58,0)
 S XMY(MGROUP)=""
"RTN","PXRMERRH",59,0)
 D ENT1^XMD
"RTN","PXRMERRH",60,0)
 ;
"RTN","PXRMERRH",61,0)
 ;Mark that an error occured.
"RTN","PXRMERRH",62,0)
 I PXRMITEM=999999 Q
"RTN","PXRMERRH",63,0)
 S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP")=""
"RTN","PXRMERRH",64,0)
 N PCLOGIC,DUE,DUEDATE,RESDATE,FREQ,FIEVAL
"RTN","PXRMERRH",65,0)
 S (PCLOGIC,DUE,DUEDATE,RESDATE,FREQ)=""
"RTN","PXRMERRH",66,0)
 D FINAL^PXRMFOUT(PCLOGIC,DUE,DUEDATE,RESDATE,FREQ,.FIEVAL)
"RTN","PXRMERRH",67,0)
 ;
"RTN","PXRMERRH",68,0)
 ;Set the first line of ^TMP("PXRHM") to ERROR.
"RTN","PXRMERRH",69,0)
 S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)="ERROR"
"RTN","PXRMERRH",70,0)
 ;
"RTN","PXRMERRH",71,0)
 ;Clean up.
"RTN","PXRMERRH",72,0)
 D EXIT^PXRM
"RTN","PXRMERRH",73,0)
 ;
"RTN","PXRMERRH",74,0)
 ;Unwind the stack.
"RTN","PXRMERRH",75,0)
 D UNWIND^%ZTER
"RTN","PXRMERRH",76,0)
 Q
"RTN","PXRMERRH",77,0)
 ;
"RTN","PXRMEVFI")
0^38^B2770131
"RTN","PXRMEVFI",1,0)
PXRMEVFI ; SLC/PKR - Driver for findings evaluation. ;03/23/2000
"RTN","PXRMEVFI",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMEVFI",3,0)
 ;
"RTN","PXRMEVFI",4,0)
 ;=======================================================================
"RTN","PXRMEVFI",5,0)
EVAL(DFN,FIEVAL) ;Evaluate the findings by group using the "E"
"RTN","PXRMEVFI",6,0)
 ;cross-reference.
"RTN","PXRMEVFI",7,0)
 N FTYPE
"RTN","PXRMEVFI",8,0)
 S FTYPE=""
"RTN","PXRMEVFI",9,0)
 F  S FTYPE=$O(^PXD(811.9,PXRMITEM,20,"E",FTYPE)) Q:FTYPE=""  D
"RTN","PXRMEVFI",10,0)
 . I FTYPE="AUTTEDT(" D EVALFI^PXRMEDU(DFN,.FIEVAL) Q
"RTN","PXRMEVFI",11,0)
 . I FTYPE="AUTTEXAM(" D EVALFI^PXRMEXAM(DFN,.FIEVAL) Q
"RTN","PXRMEVFI",12,0)
 . I FTYPE="AUTTHF(" D EVALFI^PXRMHF(DFN,.FIEVAL) Q
"RTN","PXRMEVFI",13,0)
 . I FTYPE="AUTTIMM(" D EVALFI^PXRMIMM(DFN,.FIEVAL) Q
"RTN","PXRMEVFI",14,0)
 . I FTYPE="AUTTSK(" D EVALFI^PXRMSKIN(DFN,.FIEVAL) Q
"RTN","PXRMEVFI",15,0)
 . I FTYPE="GMRD(120.51," D EVALFI^PXRMMEAS(DFN,.FIEVAL) Q
"RTN","PXRMEVFI",16,0)
 . I FTYPE="LAB(60," D EVALFI^PXRMLAB(DFN,.FIEVAL) Q
"RTN","PXRMEVFI",17,0)
 . I FTYPE="ORD(101.43," D EVALFI^PXRMORDR(DFN,.FIEVAL) Q
"RTN","PXRMEVFI",18,0)
 . I FTYPE="PXD(811.2," D EVALFI^PXRMTAX(DFN,.FIEVAL) Q
"RTN","PXRMEVFI",19,0)
 . I FTYPE="PXRMD(811.4," D EVALFI^PXRMCF(DFN,.FIEVAL) Q
"RTN","PXRMEVFI",20,0)
 . I FTYPE="PXRMD(811.5," D EVALFI^PXRMTERM(DFN,.FIEVAL) Q
"RTN","PXRMEVFI",21,0)
 . I FTYPE="PS(50.605," D EVALFI^PXRMDRCL(DFN,.FIEVAL) Q
"RTN","PXRMEVFI",22,0)
 . I FTYPE="PSDRUG(" D EVALFI^PXRMDRUG(DFN,.FIEVAL) Q
"RTN","PXRMEVFI",23,0)
 . I FTYPE="PSNDF(50.6," D EVALFI^PXRMDGEN(DFN,.FIEVAL) Q
"RTN","PXRMEVFI",24,0)
 . I FTYPE="RAMIS(71," D EVALFI^PXRMRAD(DFN,.FIEVAL) Q
"RTN","PXRMEVFI",25,0)
 . I FTYPE="YTT(601," D EVALFI^PXRMMH(DFN,.FIEVAL) Q
"RTN","PXRMEVFI",26,0)
 Q
"RTN","PXRMEVFI",27,0)
 ;
"RTN","PXRMEX")
0^39^B2316563
"RTN","PXRMEX",1,0)
PXRMEX ;SLC/PKR - Clinical Reminder Exchange Main Routine. ;02/25/1999
"RTN","PXRMEX",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMEX",3,0)
 ;======================================================================
"RTN","PXRMEX",4,0)
EN ;Main entry point for PXRM EXCHANGE
"RTN","PXRMEX",5,0)
 N PXRMREAD,PXRMSRC,PXRMVARM
"RTN","PXRMEX",6,0)
 ;PXRMREAD is the name of the function that reads the packed reminder
"RTN","PXRMEX",7,0)
 ;definition. It is set according to whether we will be using a MailMan
"RTN","PXRMEX",8,0)
 ;message or a Host File. The set is done in the routine where the
"RTN","PXRMEX",9,0)
 ;message or host file is selected. 
"RTN","PXRMEX",10,0)
 ;PXRMSRC is defined to be "MM" or "HFILE" according to whether
"RTN","PXRMEX",11,0)
 ;the packed reminder definition source is a MailMan message or
"RTN","PXRMEX",12,0)
 ;a host file.
"RTN","PXRMEX",13,0)
 ;PXRMRVARM is set to true if the reminder being installed is a VA-
"RTN","PXRMEX",14,0)
 ;reminder.
"RTN","PXRMEX",15,0)
 N VALMBCK,VALMSG,X,XMZ
"RTN","PXRMEX",16,0)
 S X="IORESET"
"RTN","PXRMEX",17,0)
 D ENDR^%ZISS
"RTN","PXRMEX",18,0)
 D EN^VALM("PXRM REMINDER EXCHANGE")
"RTN","PXRMEX",19,0)
 W IORESET
"RTN","PXRMEX",20,0)
 D KILL^%ZISS
"RTN","PXRMEX",21,0)
 Q
"RTN","PXRMEX",22,0)
 ;
"RTN","PXRMEX",23,0)
 ;======================================================================
"RTN","PXRMEX",24,0)
EXIT ;Exit code
"RTN","PXRMEX",25,0)
 D CLEAN^VALM10
"RTN","PXRMEX",26,0)
 D FULL^VALM1
"RTN","PXRMEX",27,0)
 S VALMBCK="Q"
"RTN","PXRMEX",28,0)
 K ^TMP("PXRMEX",$J)
"RTN","PXRMEX",29,0)
 K ^TMP("PXRMEXHF",$J)
"RTN","PXRMEX",30,0)
 K ^TMP("PXRMEXIS",$J)
"RTN","PXRMEX",31,0)
 K ^TMP("PXRMEXLC",$J)
"RTN","PXRMEX",32,0)
 K ^TMP("PXRMEXLR",$J)
"RTN","PXRMEX",33,0)
 K ^TMP("PXRMEXMH",$J)
"RTN","PXRMEX",34,0)
 K ^TMP("PXRMEXMM",$J)
"RTN","PXRMEX",35,0)
 K ^TMP("PXRMEXTXT",$J)
"RTN","PXRMEX",36,0)
 Q
"RTN","PXRMEX",37,0)
 ;
"RTN","PXRMEX",38,0)
 ;======================================================================
"RTN","PXRMEX",39,0)
HDR ; Header code
"RTN","PXRMEX",40,0)
 S VALMHDR(1)="Clinical Reminder Exchange Menu."
"RTN","PXRMEX",41,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEX",42,0)
 Q
"RTN","PXRMEX",43,0)
 ;
"RTN","PXRMEX",44,0)
 ;======================================================================
"RTN","PXRMEX",45,0)
HELP ;Help code
"RTN","PXRMEX",46,0)
 ;The following variables have to be newed so that when we return
"RTN","PXRMEX",47,0)
 ;from the help display they will be defined.
"RTN","PXRMEX",48,0)
 N ORU,ORUPRMT,XQORM
"RTN","PXRMEX",49,0)
 D EN^VALM("PXRM EX MAIN HELP")
"RTN","PXRMEX",50,0)
 Q
"RTN","PXRMEX",51,0)
 ;
"RTN","PXRMEX",52,0)
 ;======================================================================
"RTN","PXRMEX",53,0)
INIT ;Init
"RTN","PXRMEX",54,0)
 S VALMCNT=0
"RTN","PXRMEX",55,0)
 Q
"RTN","PXRMEX",56,0)
 ;
"RTN","PXRMEX",57,0)
 ;======================================================================
"RTN","PXRMEX",58,0)
PEXIT ;PXRM EXCH MENU protocol exit code
"RTN","PXRMEX",59,0)
 S:'$D(VALMBCK) VALMBCK="R"
"RTN","PXRMEX",60,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMEX",61,0)
 Q
"RTN","PXRMEX",62,0)
 ;
"RTN","PXRMEXAM")
0^40^B11311238
"RTN","PXRMEXAM",1,0)
PXRMEXAM ; SLC/PKR - Handle examination findings. ;04/17/2000
"RTN","PXRMEXAM",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMEXAM",3,0)
 ;
"RTN","PXRMEXAM",4,0)
 ;=======================================================================
"RTN","PXRMEXAM",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate exam findings.
"RTN","PXRMEXAM",6,0)
 N EXAMIEN,INVDATE,FIND0,FINDING
"RTN","PXRMEXAM",7,0)
 S EXAMIEN=""
"RTN","PXRMEXAM",8,0)
 F  S EXAMIEN=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTEXAM(",EXAMIEN)) Q:+EXAMIEN=0  D
"RTN","PXRMEXAM",9,0)
 . S INVDATE=$O(^AUPNVXAM("AA",DFN,EXAMIEN,""))
"RTN","PXRMEXAM",10,0)
 . S FINDING=""
"RTN","PXRMEXAM",11,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTEXAM(",EXAMIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMEXAM",12,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMEXAM",13,0)
 .. D FIEVAL(DFN,EXAMIEN,INVDATE,FIND0,"",FINDING,.FIEVAL)
"RTN","PXRMEXAM",14,0)
 Q
"RTN","PXRMEXAM",15,0)
 ;
"RTN","PXRMEXAM",16,0)
 ;=======================================================================
"RTN","PXRMEXAM",17,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate exam terms.
"RTN","PXRMEXAM",18,0)
 N EXAMIEN,FIND0,INVDATE,LFIEVAL,TFIND0,TFINDING
"RTN","PXRMEXAM",19,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMEXAM",20,0)
 S EXAMIEN=""
"RTN","PXRMEXAM",21,0)
 F  S EXAMIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTEXAM(",EXAMIEN)) Q:+EXAMIEN=0  D
"RTN","PXRMEXAM",22,0)
 . S INVDATE=$O(^AUPNVXAM("AA",DFN,EXAMIEN,""))
"RTN","PXRMEXAM",23,0)
 . S TFINDING=""
"RTN","PXRMEXAM",24,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTEXAM(",EXAMIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMEXAM",25,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMEXAM",26,0)
 .. D FIEVAL(DFN,EXAMIEN,INVDATE,FIND0,TFIND0,TFINDING,.TFIEVAL)
"RTN","PXRMEXAM",27,0)
 Q
"RTN","PXRMEXAM",28,0)
 ;
"RTN","PXRMEXAM",29,0)
 ;=======================================================================
"RTN","PXRMEXAM",30,0)
FIEVAL(DFN,EXAMIEN,INVDATE,FIND0,TFIND0,FINDING,FIEVAL) ;
"RTN","PXRMEXAM",31,0)
 N CONVAL,DATE,IEN,IND,RSLT,TEMP,VALID,VIEN
"RTN","PXRMEXAM",32,0)
 I INVDATE="" S FIEVAL(FINDING)=0 Q
"RTN","PXRMEXAM",33,0)
 S IEN=$O(^AUPNVXAM("AA",DFN,EXAMIEN,INVDATE,""))
"RTN","PXRMEXAM",34,0)
 S TEMP=$G(^AUPNVXAM(IEN,0))
"RTN","PXRMEXAM",35,0)
 S RSLT=$P(TEMP,U,4)
"RTN","PXRMEXAM",36,0)
 S VIEN=$P(TEMP,U,3)
"RTN","PXRMEXAM",37,0)
 S DATE=$$VDATE^PXRMDATE(VIEN)
"RTN","PXRMEXAM",38,0)
 ;Save the rest of the finding information.
"RTN","PXRMEXAM",39,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMEXAM",40,0)
 S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMEXAM",41,0)
 S FIEVAL(FINDING,"FINDING")=EXAMIEN_";AUTTEXAM("
"RTN","PXRMEXAM",42,0)
 S FIEVAL(FINDING,"SOURCE")=IEN_";AUPNVXAM("
"RTN","PXRMEXAM",43,0)
 S FIEVAL(FINDING,"RESULT")=RSLT
"RTN","PXRMEXAM",44,0)
 S FIEVAL(FINDING,"VALUE")=RSLT
"RTN","PXRMEXAM",45,0)
 S FIEVAL(FINDING,"VIEN")=VIEN
"RTN","PXRMEXAM",46,0)
 ;Determine if the finding has expired.
"RTN","PXRMEXAM",47,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMEXAM",48,0)
 I 'VALID D  Q
"RTN","PXRMEXAM",49,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMEXAM",50,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMEXAM",51,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMEXAM",52,0)
 S CONVAL=$$COND^PXRMUTIL(FIND0,TFIND0,RSLT)
"RTN","PXRMEXAM",53,0)
 I CONVAL'="" D
"RTN","PXRMEXAM",54,0)
 . I CONVAL D
"RTN","PXRMEXAM",55,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMEXAM",56,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMEXAM",57,0)
 . E  D
"RTN","PXRMEXAM",58,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMEXAM",59,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMEXAM",60,0)
 Q
"RTN","PXRMEXAM",61,0)
 ;
"RTN","PXRMEXAM",62,0)
 ;=======================================================================
"RTN","PXRMEXAM",63,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMEXAM",64,0)
 ;maintenance output.
"RTN","PXRMEXAM",65,0)
 N EXAMIEN,EM,FIEN,IND,PNAME,RSLT,TEMP,VDATE
"RTN","PXRMEXAM",66,0)
 S EXAMIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMEXAM",67,0)
 S FIEN=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMEXAM",68,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMEXAM",69,0)
 S RSLT=$G(FIEVAL(FINDING,"VALUE"))
"RTN","PXRMEXAM",70,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMEXAM",71,0)
 S TEMP=TEMP_" Exam: "
"RTN","PXRMEXAM",72,0)
 S IND=$P(^AUPNVXAM(EXAMIEN,0),U,1)
"RTN","PXRMEXAM",73,0)
 S PNAME=$P(^AUTTEXAM(FIEN,0),U,1)
"RTN","PXRMEXAM",74,0)
 S TEMP=TEMP_PNAME
"RTN","PXRMEXAM",75,0)
 I $L(RSLT)>0 D
"RTN","PXRMEXAM",76,0)
 . S TEMP=TEMP_"; result - "
"RTN","PXRMEXAM",77,0)
 . S TEMP=TEMP_$$EXTERNAL^DILFD(9000010.13,.04,"",RSLT,.EM)
"RTN","PXRMEXAM",78,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMEXAM",79,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMEXAM",80,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMEXAM",81,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMEXAM",82,0)
 S NLINES=NLINES+1
"RTN","PXRMEXAM",83,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMEXAM",84,0)
 I $D(PXRMDEV) D
"RTN","PXRMEXAM",85,0)
 . N UID
"RTN","PXRMEXAM",86,0)
 . S UID="EXAM "_PNAME
"RTN","PXRMEXAM",87,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMEXAM",88,0)
 ;
"RTN","PXRMEXAM",89,0)
 ;For historical encounters display the location and comments.
"RTN","PXRMEXAM",90,0)
 I VDATE["E" D
"RTN","PXRMEXAM",91,0)
 . N INDEX,VIEN
"RTN","PXRMEXAM",92,0)
 . S INDEX="EXAM-"_PNAME
"RTN","PXRMEXAM",93,0)
 . S VIEN=FIEVAL(FINDING,"VIEN")
"RTN","PXRMEXAM",94,0)
 . D HLCV^PXRMVSIT(.NLINES,.TEXT,VIEN,INDEX)
"RTN","PXRMEXAM",95,0)
 Q
"RTN","PXRMEXAM",96,0)
 ;
"RTN","PXRMEXCF")
0^41^B11163181
"RTN","PXRMEXCF",1,0)
PXRMEXCF ;SLC/PKR - Utilities for computed findings. ;12/29/1998
"RTN","PXRMEXCF",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMEXCF",3,0)
 ;======================================================================
"RTN","PXRMEXCF",4,0)
ENTRY(CODE) ;CODE is a line from a routine. Examine it and determine if it
"RTN","PXRMEXCF",5,0)
 ;is an entry point. If it is return the entry point, otherwise return
"RTN","PXRMEXCF",6,0)
 ;the empty string.
"RTN","PXRMEXCF",7,0)
 N EP,P1,TEMP
"RTN","PXRMEXCF",8,0)
 S EP=""
"RTN","PXRMEXCF",9,0)
 S P1=$P(CODE," ",1)
"RTN","PXRMEXCF",10,0)
 I P1'="" D
"RTN","PXRMEXCF",11,0)
 . I $E(P1,$L(P1))'=")" Q
"RTN","PXRMEXCF",12,0)
 . S TEMP=$P(P1,"(",1)
"RTN","PXRMEXCF",13,0)
 . I TEMP'="" S EP=TEMP
"RTN","PXRMEXCF",14,0)
 Q EP
"RTN","PXRMEXCF",15,0)
 ;
"RTN","PXRMEXCF",16,0)
 ;======================================================================
"RTN","PXRMEXCF",17,0)
EXISTS(ROUTINE) ;Return true if routine ROUTINE exists.
"RTN","PXRMEXCF",18,0)
 I ROUTINE="" Q 0
"RTN","PXRMEXCF",19,0)
 N X
"RTN","PXRMEXCF",20,0)
 S X=ROUTINE
"RTN","PXRMEXCF",21,0)
 X ^%ZOSF("TEST")
"RTN","PXRMEXCF",22,0)
 I $T Q 1
"RTN","PXRMEXCF",23,0)
 Q 0
"RTN","PXRMEXCF",24,0)
 ;
"RTN","PXRMEXCF",25,0)
 ;======================================================================
"RTN","PXRMEXCF",26,0)
GETRACT(NAME,ATTR,NEWNAME,NAMECHG) ;Get the action for a routine.
"RTN","PXRMEXCF",27,0)
 N ACTION,CHOICES,EXISTS,MSG,X,Y
"RTN","PXRMEXCF",28,0)
 ;See if this entry is already defined.
"RTN","PXRMEXCF",29,0)
CHK ;
"RTN","PXRMEXCF",30,0)
 S NEWNAME=""
"RTN","PXRMEXCF",31,0)
 S ATTR("NAME")=NAME
"RTN","PXRMEXCF",32,0)
 S EXISTS=$$EXISTS^PXRMEXCF(NAME)
"RTN","PXRMEXCF",33,0)
 S CHOICES="CIQS"
"RTN","PXRMEXCF",34,0)
 I EXISTS D
"RTN","PXRMEXCF",35,0)
 . W !!,ATTR("FILE NAME")," entry ",NAME," already EXISTS, what do you want to do?"
"RTN","PXRMEXCF",36,0)
 . S DIR("B")="S"
"RTN","PXRMEXCF",37,0)
 . S ACTION=$$GETACT^PXRMEXIU(CHOICES)
"RTN","PXRMEXCF",38,0)
 E  D
"RTN","PXRMEXCF",39,0)
 . W !!,ATTR("FILE NAME")," entry ",NAME," is NEW, what do you want to do?"
"RTN","PXRMEXCF",40,0)
 . S DIR("B")="I"
"RTN","PXRMEXCF",41,0)
 . S ACTION=$$GETACT^PXRMEXIU(CHOICES)
"RTN","PXRMEXCF",42,0)
 ;
"RTN","PXRMEXCF",43,0)
 I ACTION="Q" Q ACTION
"RTN","PXRMEXCF",44,0)
 ;
"RTN","PXRMEXCF",45,0)
 I ACTION="C" D
"RTN","PXRMEXCF",46,0)
 . S NEWNAME=$$GETUNAME^PXRMEXIU(.ATTR)
"RTN","PXRMEXCF",47,0)
 . I NEWNAME="" S ACTION="S"
"RTN","PXRMEXCF",48,0)
 ;
"RTN","PXRMEXCF",49,0)
 I (ACTION="I")&(EXISTS) D
"RTN","PXRMEXCF",50,0)
 .;If the action is overwrite double check that is what the user
"RTN","PXRMEXCF",51,0)
 .;really wants to do.
"RTN","PXRMEXCF",52,0)
 . K X,Y
"RTN","PXRMEXCF",53,0)
 . S DIR(0)="Y"_U_"A"
"RTN","PXRMEXCF",54,0)
 . S DIR("A")="Are you sure you want to overwrite"
"RTN","PXRMEXCF",55,0)
 . S DIR("B")="N"
"RTN","PXRMEXCF",56,0)
 . D ^DIR K DIR
"RTN","PXRMEXCF",57,0)
 . I 'Y S ACTION="S"
"RTN","PXRMEXCF",58,0)
 ;
"RTN","PXRMEXCF",59,0)
 ;If the action is to replace get the entry point and routine.
"RTN","PXRMEXCF",60,0)
 I (ACTION="P")&($G(ATTR("FILE NAME"))="COMPUTED FINDING") D
"RTN","PXRMEXCF",61,0)
 . S NEWNAME=$$GETRPL
"RTN","PXRMEXCF",62,0)
 . I NEWNAME="" S ACTION="S"
"RTN","PXRMEXCF",63,0)
 ;
"RTN","PXRMEXCF",64,0)
 ;Make sure there is no ambiguity as to which file the entry belongs
"RTN","PXRMEXCF",65,0)
 ;in when the entry is a variable pointer as in the case of Targets.
"RTN","PXRMEXCF",66,0)
 S NAMECHG(ATTR("811.9 PTR"),NAME)=$G(ATTR("FILE NUMBER"))_"~"_$G(ATTR("FILE NAME"))_"~"_NEWNAME
"RTN","PXRMEXCF",67,0)
 ;
"RTN","PXRMEXCF",68,0)
 ;Save what was done for the installation summary.
"RTN","PXRMEXCF",69,0)
 S ^TMP("PXRMEX",$J,"INSTALL",ATTR("FILE NAME"),NAME,ACTION)=NEWNAME
"RTN","PXRMEXCF",70,0)
 Q ACTION
"RTN","PXRMEXCF",71,0)
 ;
"RTN","PXRMEXCF",72,0)
 ;======================================================================
"RTN","PXRMEXCF",73,0)
GETRPL() ;Get a replacement for a computed finding.
"RTN","PXRMEXCF",74,0)
 N ENTRY,REPCF,ROUTINE
"RTN","PXRMEXCF",75,0)
 S REPCF=""
"RTN","PXRMEXCF",76,0)
PRMPT W !,"Enter the replacement computed finding in the form ENTRY;ROUTINE"
"RTN","PXRMEXCF",77,0)
 S REPCF=$$GETNAME^PXRMEXIU(5,17)
"RTN","PXRMEXCF",78,0)
 I REPCF="" Q REPCF
"RTN","PXRMEXCF",79,0)
 S ENTRY=$P(REPCF,";",1)
"RTN","PXRMEXCF",80,0)
 S ROUTINE=$P(REPCF,";",2)
"RTN","PXRMEXCF",81,0)
 I (ENTRY="")!(ROUTINE="") G PRMPT
"RTN","PXRMEXCF",82,0)
 ;
"RTN","PXRMEXCF",83,0)
 ;Make sure this is a valid routine.
"RTN","PXRMEXCF",84,0)
 W !
"RTN","PXRMEXCF",85,0)
 I '$$EXISTS(ROUTINE) D  G PRMPT
"RTN","PXRMEXCF",86,0)
 . W !,"Routine ",ROUTINE," does not exist, try again"
"RTN","PXRMEXCF",87,0)
 ;Make sure this is a valid entry.
"RTN","PXRMEXCF",88,0)
 I '$$VENTRY(ENTRY,ROUTINE) D  G PRMPT
"RTN","PXRMEXCF",89,0)
 . W !,ENTRY," is not a valid entry point in routine ",ROUTINE,", try again"
"RTN","PXRMEXCF",90,0)
 Q REPCF
"RTN","PXRMEXCF",91,0)
 ;
"RTN","PXRMEXCF",92,0)
 ;======================================================================
"RTN","PXRMEXCF",93,0)
MATCH(LFA01,ORIGNAME) ;See if the original name matches the .01 element
"RTN","PXRMEXCF",94,0)
 ;in LFA.
"RTN","PXRMEXCF",95,0)
 N ROUTINE
"RTN","PXRMEXCF",96,0)
 S ROUTINE=$P(LFA01,";",2)
"RTN","PXRMEXCF",97,0)
 ;Make sure the original routine names are the same
"RTN","PXRMEXCF",98,0)
 I ROUTINE=ORIGNAME Q 1
"RTN","PXRMEXCF",99,0)
 E  Q 0
"RTN","PXRMEXCF",100,0)
 ;
"RTN","PXRMEXCF",101,0)
 ;======================================================================
"RTN","PXRMEXCF",102,0)
NAMECHG(LFA01) ;Do name change stuff for computed findings.
"RTN","PXRMEXCF",103,0)
 W !!,"Replace computed finding ",LFA01," with ?"
"RTN","PXRMEXCF",104,0)
 N NEWCF
"RTN","PXRMEXCF",105,0)
 S NEWCF=$$GETRPL
"RTN","PXRMEXCF",106,0)
 Q NEWCF
"RTN","PXRMEXCF",107,0)
 ;
"RTN","PXRMEXCF",108,0)
 ;======================================================================
"RTN","PXRMEXCF",109,0)
VENTRY(ENTRY,ROUTINE) ;Determine if ENTRY is a valid entry point in ROUTINE.
"RTN","PXRMEXCF",110,0)
 N LINE
"RTN","PXRMEXCF",111,0)
 S LINE=$T(@ENTRY^@ROUTINE)
"RTN","PXRMEXCF",112,0)
 I LINE="" Q 0
"RTN","PXRMEXCF",113,0)
 E  Q 1
"RTN","PXRMEXCF",114,0)
 ;
"RTN","PXRMEXCS")
0^168^B1444553
"RTN","PXRMEXCS",1,0)
PXRMEXCS ; SLC/PKR - Routines to compute checksums. ;12/21/1999
"RTN","PXRMEXCS",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMEXCS",3,0)
 ;======================================================================
"RTN","PXRMEXCS",4,0)
HFCS(PXRMPRLC) ;Return checksum for host file.
"RTN","PXRMEXCS",5,0)
 N CS,IND,LINE
"RTN","PXRMEXCS",6,0)
 S CS=0
"RTN","PXRMEXCS",7,0)
 F IND=2:1:PXRMPRLC D
"RTN","PXRMEXCS",8,0)
 . S LINE=^TMP("PXRMEXHF",$J,IND,0)
"RTN","PXRMEXCS",9,0)
 . S CS=CS+$$LINECS(IND,LINE)
"RTN","PXRMEXCS",10,0)
 Q CS
"RTN","PXRMEXCS",11,0)
 ;
"RTN","PXRMEXCS",12,0)
 ;======================================================================
"RTN","PXRMEXCS",13,0)
LINECS(LINENUM,STRING) ;Return checksum of line number LINEUM whose contents
"RTN","PXRMEXCS",14,0)
 ;is string.
"RTN","PXRMEXCS",15,0)
 N CS,IND,LEN
"RTN","PXRMEXCS",16,0)
 S CS=0
"RTN","PXRMEXCS",17,0)
 S LEN=$L(STRING)
"RTN","PXRMEXCS",18,0)
 F IND=1:1:LEN D
"RTN","PXRMEXCS",19,0)
 . S CS=CS+($A(STRING,IND)*(LINENUM+IND))
"RTN","PXRMEXCS",20,0)
 Q CS
"RTN","PXRMEXCS",21,0)
 ;
"RTN","PXRMEXCS",22,0)
 ;======================================================================
"RTN","PXRMEXCS",23,0)
MMCS(PXRMPRLC,XMZ) ;Return checksum for MailMan message.
"RTN","PXRMEXCS",24,0)
 N CS,IND,LINE
"RTN","PXRMEXCS",25,0)
 S CS=0
"RTN","PXRMEXCS",26,0)
 F IND=2:1:PXRMPRLC D
"RTN","PXRMEXCS",27,0)
 . S LINE=^XMB(3.9,XMZ,2,IND,0)
"RTN","PXRMEXCS",28,0)
 . S CS=CS+$$LINECS(IND,LINE)
"RTN","PXRMEXCS",29,0)
 Q CS
"RTN","PXRMEXCS",30,0)
 ;
"RTN","PXRMEXCS",31,0)
 ;======================================================================
"RTN","PXRMEXCS",32,0)
PRDCS(PXRMPRLC,PXRMPRD) ;Return checksum for packed reminder definition.
"RTN","PXRMEXCS",33,0)
 N CS,IND,LINE
"RTN","PXRMEXCS",34,0)
 S CS=0
"RTN","PXRMEXCS",35,0)
 F IND=2:1:PXRMPRLC D
"RTN","PXRMEXCS",36,0)
 . S LINE=PXRMPRD(IND,0)
"RTN","PXRMEXCS",37,0)
 . S CS=CS+$$LINECS(IND,LINE)
"RTN","PXRMEXCS",38,0)
 Q CS
"RTN","PXRMEXCS",39,0)
 ;
"RTN","PXRMEXCS",40,0)
 ;======================================================================
"RTN","PXRMEXCS",41,0)
ROUTINE(RA) ;Return checksum for a routine loaded in array RA. RA has the
"RTN","PXRMEXCS",42,0)
 ;form created by ^%ZOSF("LOAD") i.e, RA(1,0) ... RA(N,0).
"RTN","PXRMEXCS",43,0)
 N CS,IND,LINE
"RTN","PXRMEXCS",44,0)
 S (CS,IND)=0
"RTN","PXRMEXCS",45,0)
 F  S IND=$O(RA(IND)) Q:+IND=0  D
"RTN","PXRMEXCS",46,0)
 . S CS=CS+$$LINECS(IND,RA(IND,0))
"RTN","PXRMEXCS",47,0)
 Q CS
"RTN","PXRMEXCS",48,0)
 ;
"RTN","PXRMEXFI")
0^42^B17607147
"RTN","PXRMEXFI",1,0)
PXRMEXFI ;SLC/PKR - Utilities for files. ;05/19/2000
"RTN","PXRMEXFI",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMEXFI",3,0)
 ;======================================================================
"RTN","PXRMEXFI",4,0)
EXISTS(ATTR) ;Check if entry NAME exists in file FILENUM. Return
"RTN","PXRMEXFI",5,0)
 ;the IEN if it does, 0 otherwise. This function is a replacement for
"RTN","PXRMEXFI",6,0)
 ;FIND1^DIC which fails if $L(NAME)>30.
"RTN","PXRMEXFI",7,0)
 ;Use FIND^DIC to get a list of every entry that matches then check
"RTN","PXRMEXFI",8,0)
 ;for the correct one.
"RTN","PXRMEXFI",9,0)
 I ATTR("NAME")="" Q 0
"RTN","PXRMEXFI",10,0)
 N IEN,IND,ENTRY,FILENUM,LIST,MSG,NAME,NFOUND
"RTN","PXRMEXFI",11,0)
 S FILENUM=ATTR("FILE NUMBER")
"RTN","PXRMEXFI",12,0)
 S NAME=ATTR("NAME")
"RTN","PXRMEXFI",13,0)
 S IEN=0
"RTN","PXRMEXFI",14,0)
 D FIND^DIC(FILENUM,"","","",NAME,"*","","","","LIST","MSG")
"RTN","PXRMEXFI",15,0)
 S NFOUND=$P(+$G(LIST("DILIST",0)),U,1)
"RTN","PXRMEXFI",16,0)
 F IND=1:1:NFOUND D
"RTN","PXRMEXFI",17,0)
 . I NAME=LIST("DILIST",1,IND) S IEN=LIST("DILIST",2,IND) Q
"RTN","PXRMEXFI",18,0)
 Q IEN
"RTN","PXRMEXFI",19,0)
 ;
"RTN","PXRMEXFI",20,0)
 ;======================================================================
"RTN","PXRMEXFI",21,0)
FOKTI(FILENUM,MSG) ;Check if it is ok to install this FILE.
"RTN","PXRMEXFI",22,0)
 N OK
"RTN","PXRMEXFI",23,0)
 S OK=1
"RTN","PXRMEXFI",24,0)
 ;
"RTN","PXRMEXFI",25,0)
 ;If the filenum is null then this is a computed finding.
"RTN","PXRMEXFI",26,0)
 I FILENUM="" Q OK
"RTN","PXRMEXFI",27,0)
 ;
"RTN","PXRMEXFI",28,0)
 ;Lab tests not handled yet.
"RTN","PXRMEXFI",29,0)
 I FILENUM=60 D  Q OK
"RTN","PXRMEXFI",30,0)
 . S OK=0
"RTN","PXRMEXFI",31,0)
 . S MSG="(Currently, cannot install laboratory tests)"
"RTN","PXRMEXFI",32,0)
 ;
"RTN","PXRMEXFI",33,0)
 ;Radilogy procedure not allowed.
"RTN","PXRMEXFI",34,0)
 I FILENUM=71 D  Q OK
"RTN","PXRMEXFI",35,0)
 . S OK=0
"RTN","PXRMEXFI",36,0)
 . S MSG="Radiology procedures cannot be installed"
"RTN","PXRMEXFI",37,0)
 ;
"RTN","PXRMEXFI",38,0)
 ;Sites cannot create entries in GMRV VITAL TYPE.
"RTN","PXRMEXFI",39,0)
 I FILENUM=120.51 D  Q OK
"RTN","PXRMEXFI",40,0)
 . S OK=0
"RTN","PXRMEXFI",41,0)
 . S MSG="Sites cannot create new entries in GMRV VITAL TYPE"
"RTN","PXRMEXFI",42,0)
 ;
"RTN","PXRMEXFI",43,0)
 Q OK
"RTN","PXRMEXFI",44,0)
 ;
"RTN","PXRMEXFI",45,0)
 ;======================================================================
"RTN","PXRMEXFI",46,0)
GETFACT(NAME,ATTR,NEWNAME,NAMECHG) ;Get the action for a file or routine.
"RTN","PXRMEXFI",47,0)
 N ACTION,CHOICES,MSG,SIEN,X,Y
"RTN","PXRMEXFI",48,0)
 ;See if this entry is already defined.
"RTN","PXRMEXFI",49,0)
CHK ;
"RTN","PXRMEXFI",50,0)
 S NEWNAME=""
"RTN","PXRMEXFI",51,0)
 S ATTR("NAME")=NAME
"RTN","PXRMEXFI",52,0)
 I $$FOKTI($G(ATTR("FILE NUMBER")),.MSG) D
"RTN","PXRMEXFI",53,0)
 . S CHOICES="CIQS"
"RTN","PXRMEXFI",54,0)
 E  S CHOICES=""
"RTN","PXRMEXFI",55,0)
 S CHOICES=$$EINSCH^PXRMEXIU(CHOICES,.ATTR)
"RTN","PXRMEXFI",56,0)
 S SIEN=$$EXISTS^PXRMEXFI(.ATTR)
"RTN","PXRMEXFI",57,0)
 I SIEN D
"RTN","PXRMEXFI",58,0)
 . W !!,ATTR("FILE NAME")," entry ",NAME," already EXISTS, what do you want to do?"
"RTN","PXRMEXFI",59,0)
 . I $D(MSG) W !,MSG
"RTN","PXRMEXFI",60,0)
 . S DIR("B")="S"
"RTN","PXRMEXFI",61,0)
 . S ACTION=$$GETACT^PXRMEXIU(CHOICES)
"RTN","PXRMEXFI",62,0)
 E  D
"RTN","PXRMEXFI",63,0)
 . W !!,ATTR("FILE NAME")," entry ",NAME," is NEW, what do you want to do?"
"RTN","PXRMEXFI",64,0)
 . I $D(MSG) W !,MSG
"RTN","PXRMEXFI",65,0)
 . S DIR("B")="I"
"RTN","PXRMEXFI",66,0)
 . S ACTION=$$GETACT^PXRMEXIU(CHOICES)
"RTN","PXRMEXFI",67,0)
 ;
"RTN","PXRMEXFI",68,0)
 I ACTION="Q" Q ACTION
"RTN","PXRMEXFI",69,0)
 I ACTION="C" D
"RTN","PXRMEXFI",70,0)
 . S NEWNAME=$$GETUNAME^PXRMEXIU(.ATTR)
"RTN","PXRMEXFI",71,0)
 . I NEWNAME="" S ACTION="S"
"RTN","PXRMEXFI",72,0)
 ;
"RTN","PXRMEXFI",73,0)
 I (ACTION="I")&(+SIEN>0) D
"RTN","PXRMEXFI",74,0)
 .;If the action is overwrite double check that is what the user
"RTN","PXRMEXFI",75,0)
 .;really wants to do.
"RTN","PXRMEXFI",76,0)
 . K X,Y
"RTN","PXRMEXFI",77,0)
 . S DIR(0)="Y"_U_"A"
"RTN","PXRMEXFI",78,0)
 . S DIR("A")="Are you sure you want to overwrite"
"RTN","PXRMEXFI",79,0)
 . S DIR("B")="N"
"RTN","PXRMEXFI",80,0)
 . D ^DIR K DIR
"RTN","PXRMEXFI",81,0)
 . I (Y)&('$D(ATTR("ROUTINE"))) D
"RTN","PXRMEXFI",82,0)
 .. S ATTR("IEN")=SIEN
"RTN","PXRMEXFI",83,0)
 .. N DA,DIK
"RTN","PXRMEXFI",84,0)
 .. S DIK=$$ROOT^DILFD(ATTR("FILE NUMBER"))
"RTN","PXRMEXFI",85,0)
 .. S DA=SIEN
"RTN","PXRMEXFI",86,0)
 .. D ^DIK
"RTN","PXRMEXFI",87,0)
 ;
"RTN","PXRMEXFI",88,0)
 ;Make sure there is no ambiguity as to which file the entry belongs
"RTN","PXRMEXFI",89,0)
 ;in when the entry is a variable pointer as in the case of Targets.
"RTN","PXRMEXFI",90,0)
 S NAMECHG(ATTR("811.9 PTR"),NAME)=$G(ATTR("FILE NUMBER"))_"~"_$G(ATTR("FILE NAME"))_"~"_NEWNAME
"RTN","PXRMEXFI",91,0)
 ;
"RTN","PXRMEXFI",92,0)
 ;Save what was done for the installation summary.
"RTN","PXRMEXFI",93,0)
 S ^TMP("PXRMEX",$J,"INSTALL",ATTR("FILE NAME"),NAME,ACTION)=NEWNAME
"RTN","PXRMEXFI",94,0)
 Q ACTION
"RTN","PXRMEXFI",95,0)
 ;
"RTN","PXRMEXFI",96,0)
 ;======================================================================
"RTN","PXRMEXFI",97,0)
MATCH(LFA01,ORIGNAME) ;Do name change stuff for files. Quit
"RTN","PXRMEXFI",98,0)
 ;and return false if we don't have the right element of LFA.
"RTN","PXRMEXFI",99,0)
 I LFA01=ORIGNAME Q 1
"RTN","PXRMEXFI",100,0)
 E  Q 0
"RTN","PXRMEXFI",101,0)
 ;
"RTN","PXRMEXFI",102,0)
 ;======================================================================
"RTN","PXRMEXFI",103,0)
NAMECHG(LFA01,FATTR) ;Do name change stuff for files.
"RTN","PXRMEXFI",104,0)
 N IEN,NEWNAME
"RTN","PXRMEXFI",105,0)
 W !!,"Replace ",FATTR("FILE NAME")," entry ",LFA01," with ?"
"RTN","PXRMEXFI",106,0)
 ;If the action is to replace get the entry.
"RTN","PXRMEXFI",107,0)
 N DIC,DTOUT,DUOUT,STR
"RTN","PXRMEXFI",108,0)
 S DIC=$$ROOT^DILFD(FATTR("FILE NUMBER"))
"RTN","PXRMEXFI",109,0)
 S DIC(0)="AEMQ"
"RTN","PXRMEXFI",110,0)
 S DIC("A")="Select "_FATTR("FILE NAME")_" entry: "
"RTN","PXRMEXFI",111,0)
 S DIC("S")="S STR=Y_"";""_DIC_"";1"" I $$VLAB^PXRMINTR(STR)"
"RTN","PXRMEXFI",112,0)
 W !
"RTN","PXRMEXFI",113,0)
 D ^DIC
"RTN","PXRMEXFI",114,0)
 I ($D(DTOUT))!($D(DUOUT)) Q ""
"RTN","PXRMEXFI",115,0)
 S FATTR("IEN")=$P(Y,U,1)
"RTN","PXRMEXFI",116,0)
 ;
"RTN","PXRMEXFI",117,0)
 S NEWNAME=$$RSLVPTR(.FATTR)
"RTN","PXRMEXFI",118,0)
 Q NEWNAME
"RTN","PXRMEXFI",119,0)
 ;
"RTN","PXRMEXFI",120,0)
 ;======================================================================
"RTN","PXRMEXFI",121,0)
RSLVPTR(FATTR) ;Resolve the pointer so there is no ambiguity.
"RTN","PXRMEXFI",122,0)
 S FATTR("NEW NAME")=$S($G(FATTR("TYPE"))="VARIABLE-POINTER":FATTR("FILE NAME")_".`"_FATTR("IEN"),$G(FATTR("TYPE"))="POINTER":"`"_FATTR("IEN"),1:FATTR("NAME"))
"RTN","PXRMEXFI",123,0)
 Q FATTR("NEW NAME")
"RTN","PXRMEXFI",124,0)
 ;
"RTN","PXRMEXFI",125,0)
 ;======================================================================
"RTN","PXRMEXFI",126,0)
SETATTR(FILE,ATTR) ;Set the file attributes for the file FILE.
"RTN","PXRMEXFI",127,0)
 N MSG
"RTN","PXRMEXFI",128,0)
 S ATTR("FILE NUMBER")=FILE
"RTN","PXRMEXFI",129,0)
 S ATTR("FILE NAME")=$$GET1^DID(FILE,"","","NAME","","MSG")
"RTN","PXRMEXFI",130,0)
 ;This call gets the field length.
"RTN","PXRMEXFI",131,0)
 D FIELD^DID(FILE,.01,"","FIELD LENGTH","ATTR","MSG")
"RTN","PXRMEXFI",132,0)
 S ATTR("MIN FIELD LENGTH")=3
"RTN","PXRMEXFI",133,0)
 ;This read of DD is covered by DBIA 2023.
"RTN","PXRMEXFI",134,0)
 S ATTR("811.9 PTR")=$O(^DD(FILE,0,"PT",811.89))
"RTN","PXRMEXFI",135,0)
 Q
"RTN","PXRMEXFI",136,0)
 ;
"RTN","PXRMEXHF")
0^43^B12207563
"RTN","PXRMEXHF",1,0)
PXRMEXHF ;SLC/PKR - Routines to select and deal with host files. ;12/23/1998
"RTN","PXRMEXHF",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMEXHF",3,0)
 ;======================================================================
"RTN","PXRMEXHF",4,0)
EXIT ; Exit code
"RTN","PXRMEXHF",5,0)
 D CLEAN^VALM10
"RTN","PXRMEXHF",6,0)
 D FULL^VALM1
"RTN","PXRMEXHF",7,0)
 S VALMBCK="R"
"RTN","PXRMEXHF",8,0)
 K PRDTMP
"RTN","PXRMEXHF",9,0)
 K ^TMP("PXRMEXTXT",$J)
"RTN","PXRMEXHF",10,0)
 Q
"RTN","PXRMEXHF",11,0)
 ;
"RTN","PXRMEXHF",12,0)
 ;======================================================================
"RTN","PXRMEXHF",13,0)
GETHF() ;Get the host file.
"RTN","PXRMEXHF",14,0)
 ;Clean up all the  ^TMP arrays before starting a new message.
"RTN","PXRMEXHF",15,0)
 K ^TMP("PXRMEX",$J)
"RTN","PXRMEXHF",16,0)
 K ^TMP("PXRMEXIS",$J)
"RTN","PXRMEXHF",17,0)
 K ^TMP("PXRMEXLC",$J)
"RTN","PXRMEXHF",18,0)
 K ^TMP("PXRMEXLR",$J)
"RTN","PXRMEXHF",19,0)
 K ^TMP("PXRMEXMH",$J)
"RTN","PXRMEXHF",20,0)
 K ^TMP("PXRMEXTXT",$J)
"RTN","PXRMEXHF",21,0)
 ;
"RTN","PXRMEXHF",22,0)
 ;Build a list of all .PRD files in the current directory.
"RTN","PXRMEXHF",23,0)
 N FILESPEC,FILELIST,PATH
"RTN","PXRMEXHF",24,0)
 S FILESPEC("*.PRD")=""
"RTN","PXRMEXHF",25,0)
 S PATH=$$PWD^%ZISH
"RTN","PXRMEXHF",26,0)
 N DIR,X,Y
"RTN","PXRMEXHF",27,0)
 K DIRUT,DTOUT,DUOUT
"RTN","PXRMEXHF",28,0)
 S DIR(0)="FAU"_U_"1:32"
"RTN","PXRMEXHF",29,0)
 S DIR("A")="Enter a path: "
"RTN","PXRMEXHF",30,0)
 S DIR("B")=PATH
"RTN","PXRMEXHF",31,0)
 S DIR("?",1)="A complete host file consists of a path, file name, and extension"
"RTN","PXRMEXHF",32,0)
 S DIR("?")="The default path is "_PATH
"RTN","PXRMEXHF",33,0)
 D ^DIR K DIR
"RTN","PXRMEXHF",34,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXHF",35,0)
 I $D(DTOUT)!($D(DUOUT)) Q ""
"RTN","PXRMEXHF",36,0)
 S PATH=Y
"RTN","PXRMEXHF",37,0)
 S Y=$$LIST^%ZISH(PATH,"FILESPEC","FILELIST")
"RTN","PXRMEXHF",38,0)
 I Y D
"RTN","PXRMEXHF",39,0)
 . W !,"The following PRD files were found in ",PATH
"RTN","PXRMEXHF",40,0)
 . S FILE=""
"RTN","PXRMEXHF",41,0)
 . F  S FILE=$O(FILELIST(FILE)) Q:FILE=""  D
"RTN","PXRMEXHF",42,0)
 .. W !,?2,FILE
"RTN","PXRMEXHF",43,0)
 E  W !,"No PRD files were found in path ",PATH
"RTN","PXRMEXHF",44,0)
 ;
"RTN","PXRMEXHF",45,0)
 K DIRUT,DTOUT,DUOUT
"RTN","PXRMEXHF",46,0)
 S DIR(0)="FAOU"_U_"1:32"
"RTN","PXRMEXHF",47,0)
 S DIR("A")="Enter a file name: "
"RTN","PXRMEXHF",48,0)
 S DIR("?",1)="A file name has the format NAME.EXTENSION, the default extension is PRD"
"RTN","PXRMEXHF",49,0)
 S DIR("?",2)="Therefore if you type in FILE for the file name, the host file will be"
"RTN","PXRMEXHF",50,0)
 S DIR("?")="  "_PATH_"FILE.PRD"
"RTN","PXRMEXHF",51,0)
 D ^DIR K DIR
"RTN","PXRMEXHF",52,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXHF",53,0)
 I $D(DTOUT)!($D(DUOUT)) Q ""
"RTN","PXRMEXHF",54,0)
 S FILE=Y
"RTN","PXRMEXHF",55,0)
 ;Add the default extension if there isn't one.
"RTN","PXRMEXHF",56,0)
 I FILE'["." S FILE=FILE_".PRD"
"RTN","PXRMEXHF",57,0)
 Q PATH_U_FILE
"RTN","PXRMEXHF",58,0)
 ;
"RTN","PXRMEXHF",59,0)
 ;======================================================================
"RTN","PXRMEXHF",60,0)
HDR ; Header code
"RTN","PXRMEXHF",61,0)
 S VALMHDR(1)=$G(PATH)_$G(FILE)
"RTN","PXRMEXHF",62,0)
 Q
"RTN","PXRMEXHF",63,0)
 ;
"RTN","PXRMEXHF",64,0)
 ;======================================================================
"RTN","PXRMEXHF",65,0)
HELP ; Help code
"RTN","PXRMEXHF",66,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","PXRMEXHF",67,0)
 Q
"RTN","PXRMEXHF",68,0)
 ;
"RTN","PXRMEXHF",69,0)
 ;======================================================================
"RTN","PXRMEXHF",70,0)
SELHF ;Select a host file for possible install.
"RTN","PXRMEXHF",71,0)
 ;Get the path and file name.
"RTN","PXRMEXHF",72,0)
 N FILE,PATH,PRDTMP,TEMP,Y
"RTN","PXRMEXHF",73,0)
 D CLEAR^VALM1
"RTN","PXRMEXHF",74,0)
 S TEMP=$$GETHF
"RTN","PXRMEXHF",75,0)
 I TEMP=-1 S VALMBCK="R" Q
"RTN","PXRMEXHF",76,0)
 S PATH=$P(TEMP,U,1)
"RTN","PXRMEXHF",77,0)
 S FILE=$P(TEMP,U,2)
"RTN","PXRMEXHF",78,0)
 ;
"RTN","PXRMEXHF",79,0)
 ;Copy the host file to a temporary global
"RTN","PXRMEXHF",80,0)
 I $P(FILE,".",1)="" Q
"RTN","PXRMEXHF",81,0)
 S Y=$$FTG^%ZISH(PATH,FILE,$NA(PRDTMP(1,0)),1)
"RTN","PXRMEXHF",82,0)
 I Y=0 D  Q
"RTN","PXRMEXHF",83,0)
 . W !,"Could not open host file ",PATH,FILE
"RTN","PXRMEXHF",84,0)
 . H 1
"RTN","PXRMEXHF",85,0)
 ;
"RTN","PXRMEXHF",86,0)
 ;Check the first line to make sure it is a packed reminder.
"RTN","PXRMEXHF",87,0)
 S LINE=$G(PRDTMP(1,0))
"RTN","PXRMEXHF",88,0)
 I LINE'="**PACKED REMINDER DEFINITION**" D  Q
"RTN","PXRMEXHF",89,0)
 . W !,"This host file does not contain a packed reminder definition"
"RTN","PXRMEXHF",90,0)
 . S VALMBCK="R"
"RTN","PXRMEXHF",91,0)
 . H 1
"RTN","PXRMEXHF",92,0)
 ;Load the text array
"RTN","PXRMEXHF",93,0)
 N COMP
"RTN","PXRMEXHF",94,0)
 S PRDTMP("LINE#")=0
"RTN","PXRMEXHF",95,0)
 F  S LINE=$$READHF Q:LINE=""  D
"RTN","PXRMEXHF",96,0)
 . I LINE["**START**" S COMP=$P(LINE,U,2) D
"RTN","PXRMEXHF",97,0)
 .. I COMP="TEXT" D TEXT
"RTN","PXRMEXHF",98,0)
 ;
"RTN","PXRMEXHF",99,0)
 ;Set the name of the reader routine.
"RTN","PXRMEXHF",100,0)
 S PXRMREAD="$$READHF^PXRMEXHF"
"RTN","PXRMEXHF",101,0)
 S PXRMSRC="HFILE"
"RTN","PXRMEXHF",102,0)
 S PRDTMP("LINE#")=0
"RTN","PXRMEXHF",103,0)
 S PRDTMP("HOST FILE")=PATH_FILE
"RTN","PXRMEXHF",104,0)
 ;
"RTN","PXRMEXHF",105,0)
 ;Start the list manager.
"RTN","PXRMEXHF",106,0)
 D EN^VALM("PXRM EX HOST FILE")
"RTN","PXRMEXHF",107,0)
 Q
"RTN","PXRMEXHF",108,0)
 ;
"RTN","PXRMEXHF",109,0)
 ;======================================================================
"RTN","PXRMEXHF",110,0)
READHF() ;Read lines from PRDTMP, this contains a copy of the host file.
"RTN","PXRMEXHF",111,0)
 ;This works like READ^XMGAPI1 so we can use them interchangeably.
"RTN","PXRMEXHF",112,0)
 S PRDTMP("LINE#")=PRDTMP("LINE#")+1
"RTN","PXRMEXHF",113,0)
 Q $G(PRDTMP(PRDTMP("LINE#"),0))
"RTN","PXRMEXHF",114,0)
 ;
"RTN","PXRMEXHF",115,0)
 ;======================================================================
"RTN","PXRMEXHF",116,0)
TEXT ;Read and process the message text.
"RTN","PXRMEXHF",117,0)
 N LC,LINE
"RTN","PXRMEXHF",118,0)
 S LC=0
"RTN","PXRMEXHF",119,0)
 F  S LINE=$$READHF Q:LINE["**END**"  D
"RTN","PXRMEXHF",120,0)
 . S LC=LC+1
"RTN","PXRMEXHF",121,0)
 . S ^TMP("PXRMEXTXT",$J,LC,0)=$P(LINE,"~",2)
"RTN","PXRMEXHF",122,0)
 S VALMCNT=LC
"RTN","PXRMEXHF",123,0)
 ;See if this is a VA- reminder.
"RTN","PXRMEXHF",124,0)
 I $P(^TMP("PXRMEXTXT",$J,1,0),":",2)["VA-" S PXRMVARM=1
"RTN","PXRMEXHF",125,0)
 E  S PXRMVARM=0
"RTN","PXRMEXHF",126,0)
 Q
"RTN","PXRMEXHF",127,0)
 ;
"RTN","PXRMEXIR")
0^44^B31485126
"RTN","PXRMEXIR",1,0)
PXRMEXIR ;SLC/PKR - Routines to unpack reminder definitions. ;04/10/2000
"RTN","PXRMEXIR",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMEXIR",3,0)
 ;======================================================================
"RTN","PXRMEXIR",4,0)
CF(NAMECHG) ;Read and process computed findings.  
"RTN","PXRMEXIR",5,0)
 N ACTION,ATTR,DATA,DONE,INDICES,LINE,LN,NEWRTN,ROUTINE,OLDRTN
"RTN","PXRMEXIR",6,0)
 S ATTR("FILE NAME")="COMPUTED FINDING"
"RTN","PXRMEXIR",7,0)
 S ATTR("FIELD LENGTH")=8
"RTN","PXRMEXIR",8,0)
 S ATTR("MIN FIELD LENGTH")=3
"RTN","PXRMEXIR",9,0)
 S ATTR("811.9 PTR")=811.9001
"RTN","PXRMEXIR",10,0)
 S ACTION=""
"RTN","PXRMEXIR",11,0)
 S LN=0
"RTN","PXRMEXIR",12,0)
 S DONE=0
"RTN","PXRMEXIR",13,0)
 S @("LINE="_PXRMREAD)
"RTN","PXRMEXIR",14,0)
 I LINE["**END**" Q
"RTN","PXRMEXIR",15,0)
 S INDICES=$P(LINE,"~",1)
"RTN","PXRMEXIR",16,0)
 S ROUTINE=$P(INDICES,";",1)
"RTN","PXRMEXIR",17,0)
 S OLDRTN=ROUTINE
"RTN","PXRMEXIR",18,0)
 S ATTR("ROUTINE")=ROUTINE
"RTN","PXRMEXIR",19,0)
 S LN=$P(INDICES,";",2)
"RTN","PXRMEXIR",20,0)
 S DATA=$P(LINE,"~",2)
"RTN","PXRMEXIR",21,0)
 S ^TMP($J,LN,0)=DATA
"RTN","PXRMEXIR",22,0)
 F  Q:DONE  S @("LINE="_PXRMREAD) D
"RTN","PXRMEXIR",23,0)
 . S INDICES=$P(LINE,U,1)
"RTN","PXRMEXIR",24,0)
 . S ROUTINE=$P(INDICES,";",1)
"RTN","PXRMEXIR",25,0)
 .;When ROUTINE is no longer equal to OLDRTN we have read in the current
"RTN","PXRMEXIR",26,0)
 .;entry, now decide what to do with it.
"RTN","PXRMEXIR",27,0)
 . I ROUTINE'=OLDRTN D
"RTN","PXRMEXIR",28,0)
 .. ;Get the action
"RTN","PXRMEXIR",29,0)
 .. S ACTION=$$GETRACT^PXRMEXCF(ATTR("ROUTINE"),.ATTR,.NEWRTN,.NAMECHG)
"RTN","PXRMEXIR",30,0)
 .. I ACTION="Q" S (DONE,STOPACT)=1 Q
"RTN","PXRMEXIR",31,0)
 .. S OLDRTN=ROUTINE
"RTN","PXRMEXIR",32,0)
 .. S LN=0
"RTN","PXRMEXIR",33,0)
 .. I (ACTION="C")!(ACTION="O")!(ACTION="I") D
"RTN","PXRMEXIR",34,0)
 ... N DIE,XCN
"RTN","PXRMEXIR",35,0)
 ... S DIE="^TMP($J,"
"RTN","PXRMEXIR",36,0)
 ... S XCN=0
"RTN","PXRMEXIR",37,0)
 ... S X=ATTR("NAME")
"RTN","PXRMEXIR",38,0)
 ... X ^%ZOSF("SAVE")
"RTN","PXRMEXIR",39,0)
 .. S ATTR("ROUTINE")=ROUTINE
"RTN","PXRMEXIR",40,0)
 .. K ^TMP($J)
"RTN","PXRMEXIR",41,0)
 . I LINE["**END**" S DONE=1 Q
"RTN","PXRMEXIR",42,0)
 . S LN=LN+1
"RTN","PXRMEXIR",43,0)
 . S DATA=$P(LINE,"~",2)
"RTN","PXRMEXIR",44,0)
 . S ^TMP($J,LN,0)=DATA
"RTN","PXRMEXIR",45,0)
 K ^TMP($J)
"RTN","PXRMEXIR",46,0)
 Q
"RTN","PXRMEXIR",47,0)
 ;
"RTN","PXRMEXIR",48,0)
 ;======================================================================
"RTN","PXRMEXIR",49,0)
FILE(NAMECHG) ;Read and process a file entry.
"RTN","PXRMEXIR",50,0)
 N ACTION,ATTR,DATA,DONE,IEN,IDENT,INDICES,FIELD,FILENUM
"RTN","PXRMEXIR",51,0)
 N LFA,LINE,MSG,NEW01,NUM,NUMC,PXRMINST,SIEN,WPLCNT,WPTMP
"RTN","PXRMEXIR",52,0)
 S ACTION=""
"RTN","PXRMEXIR",53,0)
 S DONE=0
"RTN","PXRMEXIR",54,0)
 S NUMC=""
"RTN","PXRMEXIR",55,0)
 F  Q:DONE  S @("LINE="_PXRMREAD) D
"RTN","PXRMEXIR",56,0)
 . S INDICES=$P(LINE,"~",1)
"RTN","PXRMEXIR",57,0)
 . S DATA=$P(LINE,"~",2)
"RTN","PXRMEXIR",58,0)
 . S NUM=+$P(INDICES,";",1)
"RTN","PXRMEXIR",59,0)
 . I NUMC="" S NUMC=NUM
"RTN","PXRMEXIR",60,0)
 . S FILENUM=$P(INDICES,";",2)
"RTN","PXRMEXIR",61,0)
 . S IEN=$P(INDICES,";",3)
"RTN","PXRMEXIR",62,0)
 . S FIELD=$P(INDICES,";",4)
"RTN","PXRMEXIR",63,0)
 . I '$D(ATTR) D SETATTR^PXRMEXFI(FILENUM,.ATTR)
"RTN","PXRMEXIR",64,0)
 . I '$D(IDENT),FIELD=.01 D
"RTN","PXRMEXIR",65,0)
 .. S IDENT("FILENUM")=FILENUM
"RTN","PXRMEXIR",66,0)
 .. S IDENT("IEN")=IEN
"RTN","PXRMEXIR",67,0)
 .. S IDENT(.01)=DATA
"RTN","PXRMEXIR",68,0)
 .;When NUM is no longer equal to NUMC we have read in the current
"RTN","PXRMEXIR",69,0)
 .;entry, now decide what to do with it.
"RTN","PXRMEXIR",70,0)
 . I (NUM'=NUMC) D
"RTN","PXRMEXIR",71,0)
 .. S NEW01=""
"RTN","PXRMEXIR",72,0)
 .. S ACTION=$$GETFACT^PXRMEXFI(IDENT(.01),.ATTR,.NEW01,.NAMECHG)
"RTN","PXRMEXIR",73,0)
 .. I ACTION="Q" S (DONE,STOPACT)=1 Q
"RTN","PXRMEXIR",74,0)
 .. I NEW01'="" D
"RTN","PXRMEXIR",75,0)
 ... S LFA(IDENT("FILENUM"),IDENT("IEN"),.01)=NEW01
"RTN","PXRMEXIR",76,0)
 ..;If the incoming file name contains "VA-" and the action is
"RTN","PXRMEXIR",77,0)
 ..;install allow it.
"RTN","PXRMEXIR",78,0)
 .. I (ATTR("NAME")["VA-")&(ACTION="I") S PXRMINST=1
"RTN","PXRMEXIR",79,0)
 .. I ((ACTION="C")!(ACTION="I")) D UPDATE(.LFA,.NAMECHG,.ATTR)
"RTN","PXRMEXIR",80,0)
 .. K ATTR,IDENT,LFA,PXRMINST
"RTN","PXRMEXIR",81,0)
 .. S IDENT("FILENUM")=FILENUM
"RTN","PXRMEXIR",82,0)
 .. S IDENT("IEN")=IEN
"RTN","PXRMEXIR",83,0)
 .. S IDENT(.01)=DATA
"RTN","PXRMEXIR",84,0)
 .. S NUMC=NUM
"RTN","PXRMEXIR",85,0)
 . I LINE["**END**" S DONE=1 Q
"RTN","PXRMEXIR",86,0)
 . S LFA(FILENUM,IEN,FIELD)=DATA
"RTN","PXRMEXIR",87,0)
 . I LINE["WP-start" D
"RTN","PXRMEXIR",88,0)
 .. S LFA(FILENUM,IEN,FIELD)="WPTMP("_+IEN_","_+FIELD_")"
"RTN","PXRMEXIR",89,0)
 .. S WPLCNT=$P(LINE,"~",3)
"RTN","PXRMEXIR",90,0)
 .. D WORDPROC(+IEN,+FIELD,WPLCNT)
"RTN","PXRMEXIR",91,0)
 Q
"RTN","PXRMEXIR",92,0)
 ;
"RTN","PXRMEXIR",93,0)
 ;======================================================================
"RTN","PXRMEXIR",94,0)
INSTALL ;Install a packed reminder definition.
"RTN","PXRMEXIR",95,0)
 ;Get the message number
"RTN","PXRMEXIR",96,0)
 D CLEAR^VALM1
"RTN","PXRMEXIR",97,0)
 I '$D(PXRMSRC) S VALMBCK="R" Q
"RTN","PXRMEXIR",98,0)
 ;
"RTN","PXRMEXIR",99,0)
 I PXRMSRC="HFILE" S PRDTMP("LINE#")=0
"RTN","PXRMEXIR",100,0)
 ;
"RTN","PXRMEXIR",101,0)
 ;Delete the previous installation summary.
"RTN","PXRMEXIR",102,0)
 K ^TMP("PXRMEX",$J,"INSTALL")
"RTN","PXRMEXIR",103,0)
 K ^TMP("PXRMEXIS",$J)
"RTN","PXRMEXIR",104,0)
 ;
"RTN","PXRMEXIR",105,0)
 ;Process the packed reminder definition.
"RTN","PXRMEXIR",106,0)
 D PROCESS
"RTN","PXRMEXIR",107,0)
 ;See if we should quit the install
"RTN","PXRMEXIR",108,0)
 I $G(VALMQUIT) S VALMBCK="Q"
"RTN","PXRMEXIR",109,0)
 E  S VALMBCK="R"
"RTN","PXRMEXIR",110,0)
 Q
"RTN","PXRMEXIR",111,0)
 ;
"RTN","PXRMEXIR",112,0)
 ;======================================================================
"RTN","PXRMEXIR",113,0)
PROCESS ;Read and process the packed reminder definition.
"RTN","PXRMEXIR",114,0)
 N COMP,LINE,NAMECHG,STOPACT
"RTN","PXRMEXIR",115,0)
 ;NAMECHG needs to be global to everything called by PROCESS so all
"RTN","PXRMEXIR",116,0)
 ;name changes can be resolved.
"RTN","PXRMEXIR",117,0)
 ;STOPACT is global also, it gets set in NAMECHG^PXRMEXIU, and provides
"RTN","PXRMEXIR",118,0)
 ;a way to stop processing.
"RTN","PXRMEXIR",119,0)
 S PRDTMP("LINE#")=0
"RTN","PXRMEXIR",120,0)
 F  S @("LINE="_PXRMREAD) Q:(LINE="")!($D(STOPACT))  D
"RTN","PXRMEXIR",121,0)
 . I LINE["**START**" S COMP=$P(LINE,U,2) D
"RTN","PXRMEXIR",122,0)
 .. I COMP="CF" D  Q
"RTN","PXRMEXIR",123,0)
 ... W !!,"------------------------- PROCESSING COMPUTED FINDINGS -------------------------"
"RTN","PXRMEXIR",124,0)
 ... D CF(.NAMECHG)
"RTN","PXRMEXIR",125,0)
 .. I COMP="HF" D  Q
"RTN","PXRMEXIR",126,0)
 ... W !!,"-------------------------- PROCESSING HEALTH FACTORS ---------------------------"
"RTN","PXRMEXIR",127,0)
 ... D FILE(.NAMECHG)
"RTN","PXRMEXIR",128,0)
 .. I COMP="TAX" D  Q
"RTN","PXRMEXIR",129,0)
 ... W !!,"---------------------------- PROCESSING TAXONOMIES -----------------------------"
"RTN","PXRMEXIR",130,0)
 ... D FILE(.NAMECHG)
"RTN","PXRMEXIR",131,0)
 .. I COMP="TARGET" D  Q
"RTN","PXRMEXIR",132,0)
 ... W !,"------------------------------ PROCESSING TARGETS ------------------------------"
"RTN","PXRMEXIR",133,0)
 ... D FILE(.NAMECHG)
"RTN","PXRMEXIR",134,0)
 .. ;The reminder definition must come last so pointers can be resolved.
"RTN","PXRMEXIR",135,0)
 .. I COMP="RDEF" D  Q
"RTN","PXRMEXIR",136,0)
 ... W !!,"------------------------ PROCESSING REMINDER DEFINITION ------------------------"
"RTN","PXRMEXIR",137,0)
 ... D FILE(.NAMECHG)
"RTN","PXRMEXIR",138,0)
 F  S @("LINE="_PXRMREAD) Q:LINE=""
"RTN","PXRMEXIR",139,0)
 ;If the user wants to quit set all the variables.
"RTN","PXRMEXIR",140,0)
 I $G(STOPACT)="Q" S (XQORPOP,XQORQUIT,VALMQUIT)=1
"RTN","PXRMEXIR",141,0)
 Q
"RTN","PXRMEXIR",142,0)
 ;
"RTN","PXRMEXIR",143,0)
 ;======================================================================
"RTN","PXRMEXIR",144,0)
UPDATE(LFA,NAMECHG,ATTR) ;Make the file update.
"RTN","PXRMEXIR",145,0)
 ;Process the local file array and create the input for UPDATE^DIE.
"RTN","PXRMEXIR",146,0)
 N I1N,I2,FDA,FDAIEN,LIENS,MSG,NUM
"RTN","PXRMEXIR",147,0)
 ;If were are overwriting then the IEN will be in ATTR("IEN"). This is
"RTN","PXRMEXIR",148,0)
 ;set in GETFACT^PXRMEXFI
"RTN","PXRMEXIR",149,0)
 S FDAIEN(1)=$G(ATTR("IEN"))
"RTN","PXRMEXIR",150,0)
 S LIENS="+0,"
"RTN","PXRMEXIR",151,0)
 S NUM=0
"RTN","PXRMEXIR",152,0)
 F  S NUM=$O(LFA(NUM)) Q:NUM=""  D
"RTN","PXRMEXIR",153,0)
 . I NUM=811.9 D NAMECHG^PXRMEXIU(NUM,.LFA,.NAMECHG)
"RTN","PXRMEXIR",154,0)
 ;
"RTN","PXRMEXIR",155,0)
 I $D(STOPACT) Q
"RTN","PXRMEXIR",156,0)
 ;
"RTN","PXRMEXIR",157,0)
 ;Make any required edits to LFA
"RTN","PXRMEXIR",158,0)
 D EDITLFA^PXRMEXIU(.LFA)
"RTN","PXRMEXIR",159,0)
 ;
"RTN","PXRMEXIR",160,0)
 ;Convert LFA to the FDA form
"RTN","PXRMEXIR",161,0)
 D CONTOFDA^PXRMEXPU(.LFA,.FDA)
"RTN","PXRMEXIR",162,0)
 D UPDATE^DIE("E","FDA","FDAIEN","MSG")
"RTN","PXRMEXIR",163,0)
 I $D(MSG) D
"RTN","PXRMEXIR",164,0)
 . W !,"The update failed, UPDATE^DIE returned the following error message:"
"RTN","PXRMEXIR",165,0)
 . D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMEXIR",166,0)
 . W !!,ATTR("FILE NAME")," entry ",ATTR("NAME")," did not get installed!"
"RTN","PXRMEXIR",167,0)
 . W !,"Examine the above error message for the reason.",!
"RTN","PXRMEXIR",168,0)
 . H 2
"RTN","PXRMEXIR",169,0)
 ;If the reminder definition installed successfully convert it.
"RTN","PXRMEXIR",170,0)
 I '$D(MSG) D
"RTN","PXRMEXIR",171,0)
 . N REDO,REMINDER
"RTN","PXRMEXIR",172,0)
 . S REMINDER=FDAIEN(1)
"RTN","PXRMEXIR",173,0)
 . S REDO=1
"RTN","PXRMEXIR",174,0)
 . D COMP^PXRMV1I Q:$D(MSG)
"RTN","PXRMEXIR",175,0)
 . D RBLD^PXRMV1IA
"RTN","PXRMEXIR",176,0)
 Q
"RTN","PXRMEXIR",177,0)
 ;
"RTN","PXRMEXIR",178,0)
 ;======================================================================
"RTN","PXRMEXIR",179,0)
WORDPROC(I1,I2,WPLCNT) ;Load WPTMP with the word processing field
"RTN","PXRMEXIR",180,0)
 ;
"RTN","PXRMEXIR",181,0)
 N I3,LINE
"RTN","PXRMEXIR",182,0)
 F I3=1:1:WPLCNT D
"RTN","PXRMEXIR",183,0)
 . S @("LINE="_PXRMREAD)
"RTN","PXRMEXIR",184,0)
 . S WPTMP(I1,I2,I3)=$P(LINE,"~",2)
"RTN","PXRMEXIR",185,0)
 Q
"RTN","PXRMEXIR",186,0)
 ;
"RTN","PXRMEXIS")
0^45^B4217982
"RTN","PXRMEXIS",1,0)
PXRMEXIS ;SLC/PKR - Routines for installation summary. ;12/29/1998
"RTN","PXRMEXIS",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMEXIS",3,0)
 ;======================================================================
"RTN","PXRMEXIS",4,0)
CS ;Read and process the summary created during the install.
"RTN","PXRMEXIS",5,0)
 N ACTION,COMP,DATA,NAME,NEWNAME
"RTN","PXRMEXIS",6,0)
 S VALMCNT=0
"RTN","PXRMEXIS",7,0)
 S COMP=""
"RTN","PXRMEXIS",8,0)
 F  S COMP=$O(^TMP("PXRMEX",$J,"INSTALL",COMP)) Q:COMP=""  D
"RTN","PXRMEXIS",9,0)
 . S VALMCNT=VALMCNT+1
"RTN","PXRMEXIS",10,0)
 . S ^TMP("PXRMEXIS",$J,VALMCNT,0)=""
"RTN","PXRMEXIS",11,0)
 . S VALMCNT=VALMCNT+1
"RTN","PXRMEXIS",12,0)
 . S ^TMP("PXRMEXIS",$J,VALMCNT,0)=COMP
"RTN","PXRMEXIS",13,0)
 . S NAME=""
"RTN","PXRMEXIS",14,0)
 . F  S NAME=$O(^TMP("PXRMEX",$J,"INSTALL",COMP,NAME)) Q:NAME=""  D
"RTN","PXRMEXIS",15,0)
 .. S ACTION=""
"RTN","PXRMEXIS",16,0)
 .. F  S ACTION=$O(^TMP("PXRMEX",$J,"INSTALL",COMP,NAME,ACTION)) Q:ACTION=""  D
"RTN","PXRMEXIS",17,0)
 ... S NEWNAME=^TMP("PXRMEX",$J,"INSTALL",COMP,NAME,ACTION)
"RTN","PXRMEXIS",18,0)
 ... S DATA=NAME_U_ACTION_U_NEWNAME
"RTN","PXRMEXIS",19,0)
 ... S VALMCNT=VALMCNT+1
"RTN","PXRMEXIS",20,0)
 ... S ^TMP("PXRMEXIS",$J,VALMCNT,0)=$$FMTDATA(DATA)
"RTN","PXRMEXIS",21,0)
 S ^TMP("PXRMEXIS",$J,"VALMCNT")=VALMCNT
"RTN","PXRMEXIS",22,0)
 Q
"RTN","PXRMEXIS",23,0)
 ;
"RTN","PXRMEXIS",24,0)
 ;======================================================================
"RTN","PXRMEXIS",25,0)
DS ;Display the install summary.
"RTN","PXRMEXIS",26,0)
 ;First make sure there has been an install to summarize.
"RTN","PXRMEXIS",27,0)
 I '$D(^TMP("PXRMEX",$J,"INSTALL")) D  G DSLM
"RTN","PXRMEXIS",28,0)
 . S VALMCNT=1
"RTN","PXRMEXIS",29,0)
 . S ^TMP("PXRMEXIS",$J,VALMCNT,0)="There is no installation to summarize!"
"RTN","PXRMEXIS",30,0)
 ;
"RTN","PXRMEXIS",31,0)
 I $D(^TMP("PXRMEXIS",$J,"VALMCNT")) S VALMCNT=^TMP("PXRMEXIS",$J,"VALMCNT")
"RTN","PXRMEXIS",32,0)
 E  D CS
"RTN","PXRMEXIS",33,0)
DSLM D EN^VALM("PXRM EX INSTALL SUMMARY")
"RTN","PXRMEXIS",34,0)
 S VALMBCK="R"
"RTN","PXRMEXIS",35,0)
 Q
"RTN","PXRMEXIS",36,0)
 ;
"RTN","PXRMEXIS",37,0)
 ;======================================================================
"RTN","PXRMEXIS",38,0)
FMTDATA(DATA) ;Return DATA in a string formatted for display.
"RTN","PXRMEXIS",39,0)
 N NSTI,TEMP
"RTN","PXRMEXIS",40,0)
 S TEMP=$$INSCHR^PXRMEXLC(13," ")_$P(DATA,U,1)
"RTN","PXRMEXIS",41,0)
 S NSTI=56-$L(TEMP)
"RTN","PXRMEXIS",42,0)
 S TEMP=TEMP_$$INSCHR^PXRMEXLC(NSTI," ")_$P(DATA,U,2)
"RTN","PXRMEXIS",43,0)
 S TEMP=TEMP_$$INSCHR^PXRMEXLC(5," ")_$P(DATA,U,3)
"RTN","PXRMEXIS",44,0)
 Q TEMP
"RTN","PXRMEXIS",45,0)
 ;
"RTN","PXRMEXIS",46,0)
 ;======================================================================
"RTN","PXRMEXIS",47,0)
HDR ;Setup the header
"RTN","PXRMEXIS",48,0)
 S VALMHDR(1)="Install Action Codes:"
"RTN","PXRMEXIS",49,0)
 S VALMHDR(2)="  C=Copy to new name, I=Install/Overwrite, P=Replace, S=Skip"
"RTN","PXRMEXIS",50,0)
 Q
"RTN","PXRMEXIS",51,0)
 ;
"RTN","PXRMEXIU")
0^46^B22695590
"RTN","PXRMEXIU",1,0)
PXRMEXIU ;SLC/PKR - Utilities for unpacking reminder definitions. ;02/16/1999
"RTN","PXRMEXIU",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMEXIU",3,0)
 ;======================================================================
"RTN","PXRMEXIU",4,0)
EDITLFA(LFA) ;Edit LFA.
"RTN","PXRMEXIU",5,0)
 N IEN,FILE
"RTN","PXRMEXIU",6,0)
 S FILE=$O(LFA(""))
"RTN","PXRMEXIU",7,0)
 ;If the health factor is a category its category pointer should be
"RTN","PXRMEXIU",8,0)
 ;null.
"RTN","PXRMEXIU",9,0)
 I FILE=9999999.64 D
"RTN","PXRMEXIU",10,0)
 . S IEN=$O(LFA(FILE,""))
"RTN","PXRMEXIU",11,0)
 . I LFA(FILE,IEN,.1)="CATEGORY" K LFA(FILE,IEN,.03)
"RTN","PXRMEXIU",12,0)
 Q
"RTN","PXRMEXIU",13,0)
 ;
"RTN","PXRMEXIU",14,0)
 ;======================================================================
"RTN","PXRMEXIU",15,0)
EINSCH(CHOICES,ATTR) ;Edit the possible install choices. If this is a
"RTN","PXRMEXIU",16,0)
 ;VA- reminder then don't allow the replace option, except for
"RTN","PXRMEXIU",17,0)
 ;laboratory targets.
"RTN","PXRMEXIU",18,0)
 N CL
"RTN","PXRMEXIU",19,0)
 S CL=CHOICES
"RTN","PXRMEXIU",20,0)
 I $G(PXRMVARM) D
"RTN","PXRMEXIU",21,0)
 . I $G(ATTR("FILE NUMBER"))'=60 S CL=$TR(CL,"R","")
"RTN","PXRMEXIU",22,0)
 Q CL
"RTN","PXRMEXIU",23,0)
 ;
"RTN","PXRMEXIU",24,0)
 ;======================================================================
"RTN","PXRMEXIU",25,0)
GETACT(CHOICES) ;Get the action
"RTN","PXRMEXIU",26,0)
 ;If CHOICES is empty the only action is skip.
"RTN","PXRMEXIU",27,0)
 I CHOICES="" Q "S"
"RTN","PXRMEXIU",28,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXIU",29,0)
 S DIR(0)="S"_U
"RTN","PXRMEXIU",30,0)
 I CHOICES["C" S DIR(0)=DIR(0)_"C:Create a new entry by copying to a new name"
"RTN","PXRMEXIU",31,0)
 I CHOICES["D" S DIR(0)=DIR(0)_";D:Delete from the reminder definition"
"RTN","PXRMEXIU",32,0)
 I CHOICES["I" S DIR(0)=DIR(0)_";I:Install or Overwrite the current entry"
"RTN","PXRMEXIU",33,0)
 I CHOICES["P" S DIR(0)=DIR(0)_";P:Replace (in the reminder definition) with an existing entry"
"RTN","PXRMEXIU",34,0)
 I CHOICES["Q" S DIR(0)=DIR(0)_";Q:Quit the install"
"RTN","PXRMEXIU",35,0)
 I CHOICES["R" S DIR(0)=DIR(0)_";R:Restart"
"RTN","PXRMEXIU",36,0)
 I CHOICES["S" S DIR(0)=DIR(0)_";S:Skip, do not install this entry"
"RTN","PXRMEXIU",37,0)
 D ^DIR K DIR
"RTN","PXRMEXIU",38,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXIU",39,0)
 I $D(DTOUT)!($D(DUOUT)) S Y="S"
"RTN","PXRMEXIU",40,0)
 Q Y
"RTN","PXRMEXIU",41,0)
 ;
"RTN","PXRMEXIU",42,0)
 ;======================================================================
"RTN","PXRMEXIU",43,0)
GETNAME(MIN,MAX) ;Get a name to use.
"RTN","PXRMEXIU",44,0)
 N X,Y
"RTN","PXRMEXIU",45,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMEXIU",46,0)
 S DIR(0)="FAOU"_U_MIN_":"_MAX
"RTN","PXRMEXIU",47,0)
 S DIR("A")="Input the new name: "
"RTN","PXRMEXIU",48,0)
 D ^DIR K DIR
"RTN","PXRMEXIU",49,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXIU",50,0)
 I $D(DTOUT)!($D(DUOUT)) Q ""
"RTN","PXRMEXIU",51,0)
 Q Y
"RTN","PXRMEXIU",52,0)
 ;
"RTN","PXRMEXIU",53,0)
 ;======================================================================
"RTN","PXRMEXIU",54,0)
GETUNAME(ATTR) ;Get a unique name to use.
"RTN","PXRMEXIU",55,0)
 N IEN,NEWNAME
"RTN","PXRMEXIU",56,0)
GNEW ;
"RTN","PXRMEXIU",57,0)
 S NEWNAME=$$GETNAME(ATTR("MIN FIELD LENGTH"),ATTR("FIELD LENGTH"))
"RTN","PXRMEXIU",58,0)
 S ATTR("NAME")=NEWNAME
"RTN","PXRMEXIU",59,0)
 I (ATTR("FILE NAME")="COMPUTED FINDING") S IEN=$$EXISTS^PXRMEXCF(ATTR("NAME"))
"RTN","PXRMEXIU",60,0)
 E  S IEN=$$EXISTS^PXRMEXFI(.ATTR)
"RTN","PXRMEXIU",61,0)
 I +IEN>0 D  G GNEW
"RTN","PXRMEXIU",62,0)
 . W !,ATTR("FILE NAME")," entry ",NEWNAME," already exists try another one."
"RTN","PXRMEXIU",63,0)
 Q NEWNAME
"RTN","PXRMEXIU",64,0)
 ;
"RTN","PXRMEXIU",65,0)
 ;======================================================================
"RTN","PXRMEXIU",66,0)
NAMECHG(FILE,LFA,NAMECHG) ;Check for name changes that need to be handled,
"RTN","PXRMEXIU",67,0)
 ;only have to worry about this for file 811.9. Change the name of
"RTN","PXRMEXIU",68,0)
 ;components in the reminder definition to their new names and make
"RTN","PXRMEXIU",69,0)
 ;sure entries are properly resolved.
"RTN","PXRMEXIU",70,0)
 I FILE'=811.9 Q
"RTN","PXRMEXIU",71,0)
 N ACTION,CHOICES,FATTR,IEN,IND,JND,LFA01,MATCH,NAME,NAMEREF,NEWNAME
"RTN","PXRMEXIU",72,0)
 N ORIGNAME,TYPE
"RTN","PXRMEXIU",73,0)
 S IND=811.9
"RTN","PXRMEXIU",74,0)
 F  S IND=$O(NAMECHG(IND)) Q:(IND="")!($D(STOPACT))  D
"RTN","PXRMEXIU",75,0)
 . K FATTR
"RTN","PXRMEXIU",76,0)
 . D FIELD^DID(IND,.01,"","TYPE","FATTR")
"RTN","PXRMEXIU",77,0)
 . S ORIGNAME=""
"RTN","PXRMEXIU",78,0)
 . F  S ORIGNAME=$O(NAMECHG(IND,ORIGNAME)) Q:(ORIGNAME="")!($D(STOPACT))  D
"RTN","PXRMEXIU",79,0)
 .. S NAMEREF=NAMECHG(IND,ORIGNAME)
"RTN","PXRMEXIU",80,0)
 .. S NAME=$P(NAMEREF,"~",3)
"RTN","PXRMEXIU",81,0)
 .. I NAME="" S NAME=ORIGNAME
"RTN","PXRMEXIU",82,0)
 .. S FATTR("NAME")=NAME
"RTN","PXRMEXIU",83,0)
 .. S FATTR("FILE NUMBER")=$P(NAMEREF,"~",1)
"RTN","PXRMEXIU",84,0)
 .. S FATTR("FILE NAME")=$P(NAMEREF,"~",2)
"RTN","PXRMEXIU",85,0)
 .. I FATTR("FILE NAME")="COMPUTED FINDING" S TYPE="CF"
"RTN","PXRMEXIU",86,0)
 .. E  S TYPE="FILE"
"RTN","PXRMEXIU",87,0)
 .. S JND=""
"RTN","PXRMEXIU",88,0)
 .. F  S JND=$O(LFA(IND,JND)) Q:(JND="")!($D(STOPACT))  D
"RTN","PXRMEXIU",89,0)
 ... K NEWNAME
"RTN","PXRMEXIU",90,0)
 ... S LFA01=LFA(IND,JND,.01)
"RTN","PXRMEXIU",91,0)
 ... I TYPE="CF" S MATCH=$$MATCH^PXRMEXCF(LFA01,ORIGNAME)
"RTN","PXRMEXIU",92,0)
 ... E  S MATCH=$$MATCH^PXRMEXFI(LFA01,ORIGNAME)
"RTN","PXRMEXIU",93,0)
 ... I 'MATCH Q
"RTN","PXRMEXIU",94,0)
 ... I TYPE="CF" S FATTR("IEN")=$$VENTRY^PXRMEXCF($P(LFA01,";",1),$P(LFA01,";",2))
"RTN","PXRMEXIU",95,0)
 ... E  S FATTR("IEN")=$$EXISTS^PXRMEXFI(.FATTR)
"RTN","PXRMEXIU",96,0)
 ...;
"RTN","PXRMEXIU",97,0)
 ...;If the entry exists resolve the pointer.
"RTN","PXRMEXIU",98,0)
 ... I (FATTR("IEN")>0)&(FATTR("FILE NAME")'="COMPUTED FINDING") D
"RTN","PXRMEXIU",99,0)
 .... S NEWNAME=$$RSLVPTR^PXRMEXFI(.FATTR)
"RTN","PXRMEXIU",100,0)
 .... S LFA(IND,JND,.01)=$$STRREP^PXRMUTIL(LFA(IND,JND,.01),LFA01,NEWNAME)
"RTN","PXRMEXIU",101,0)
 ...;
"RTN","PXRMEXIU",102,0)
 ...;If the entry does not exist find out what to do.
"RTN","PXRMEXIU",103,0)
 ... I FATTR("IEN")=0 D
"RTN","PXRMEXIU",104,0)
 .... W !!,FATTR("FILE NAME")," reminder component ",LFA01," does not exist"
"RTN","PXRMEXIU",105,0)
 .... S CHOICES="DPQR"
"RTN","PXRMEXIU",106,0)
 .... S CHOICES=$$EINSCH^PXRMEXIU(CHOICES,.FATTR)
"RTN","PXRMEXIU",107,0)
 .... S ACTION=$$GETACT(CHOICES)
"RTN","PXRMEXIU",108,0)
 .... I ACTION="P" D
"RTN","PXRMEXIU",109,0)
 ..... I TYPE="CF" S NEWNAME=$$NAMECHG^PXRMEXCF(LFA01)
"RTN","PXRMEXIU",110,0)
 ..... E  S NEWNAME=$$NAMECHG^PXRMEXFI(LFA01,.FATTR)
"RTN","PXRMEXIU",111,0)
 ..... S LFA(IND,JND,.01)=$$STRREP^PXRMUTIL(LFA(IND,JND,.01),LFA01,NEWNAME)
"RTN","PXRMEXIU",112,0)
 ..... S ^TMP("PXRMEX",$J,"INSTALL",FATTR("FILE NAME"),LFA01,"P")=NEWNAME
"RTN","PXRMEXIU",113,0)
 ..... I NEWNAME="" S ACTION="Q"
"RTN","PXRMEXIU",114,0)
 .... I ACTION="D" D
"RTN","PXRMEXIU",115,0)
 ..... K LFA(IND,JND)
"RTN","PXRMEXIU",116,0)
 .....;Delete overrides everything so get rid of any previous entries
"RTN","PXRMEXIU",117,0)
 ..... K ^TMP("PXRMEX",$J,"INSTALL",FATTR("FILE NAME"),NAME)
"RTN","PXRMEXIU",118,0)
 ..... S ^TMP("PXRMEX",$J,"INSTALL",FATTR("FILE NAME"),NAME,"D")=""
"RTN","PXRMEXIU",119,0)
 .... I (ACTION="Q")!(ACTION="R") S STOPACT=ACTION
"RTN","PXRMEXIU",120,0)
 Q
"RTN","PXRMEXIU",121,0)
 ;
"RTN","PXRMEXLC")
0^47^B19689637
"RTN","PXRMEXLC",1,0)
PXRMEXLC ;SLC/PKR - Routines to list reminder components. ;01/20/1999
"RTN","PXRMEXLC",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMEXLC",3,0)
 ;======================================================================
"RTN","PXRMEXLC",4,0)
CF(COMPNT) ;Read and process computed findings.  
"RTN","PXRMEXLC",5,0)
 N DATA,EP,EPLIST,INDICES,RLIST,ROUTINE
"RTN","PXRMEXLC",6,0)
 ;Build a list of the routines.
"RTN","PXRMEXLC",7,0)
 F  S @("LINE="_PXRMREAD) Q:LINE["**END**"  D
"RTN","PXRMEXLC",8,0)
 . S INDICES=$P(LINE,"~",1)
"RTN","PXRMEXLC",9,0)
 . S DATA=$P(LINE,"~",2)
"RTN","PXRMEXLC",10,0)
 . S ROUTINE=$P(INDICES,";",1)
"RTN","PXRMEXLC",11,0)
 . S RLIST(ROUTINE)=""
"RTN","PXRMEXLC",12,0)
 . S EP=$$ENTRY^PXRMEXCF(DATA)
"RTN","PXRMEXLC",13,0)
 . I EP'="" S EPLIST(ROUTINE,EP)=""
"RTN","PXRMEXLC",14,0)
 ;
"RTN","PXRMEXLC",15,0)
 ;Process the routine list.
"RTN","PXRMEXLC",16,0)
 S ROUTINE=""
"RTN","PXRMEXLC",17,0)
 F  S ROUTINE=$O(RLIST(ROUTINE)) Q:ROUTINE=""  D
"RTN","PXRMEXLC",18,0)
 . I $$EXISTS^PXRMEXCF(ROUTINE) S EXISTS="X"
"RTN","PXRMEXLC",19,0)
 . E  S EXISTS=""
"RTN","PXRMEXLC",20,0)
 . S VALMCNT=VALMCNT+1
"RTN","PXRMEXLC",21,0)
 . S LCA(COMPNT,"ROUTINE",VALMCNT)=ROUTINE_U_EXISTS
"RTN","PXRMEXLC",22,0)
 . S EP=""
"RTN","PXRMEXLC",23,0)
 . F  S EP=$O(EPLIST(ROUTINE,EP)) Q:EP=""  D
"RTN","PXRMEXLC",24,0)
 .. S VALMCNT=VALMCNT+1
"RTN","PXRMEXLC",25,0)
 .. S LCA(COMPNT,"ROUTINE",VALMCNT)=$$INSCHR(10," ")_EP
"RTN","PXRMEXLC",26,0)
 Q
"RTN","PXRMEXLC",27,0)
 ;
"RTN","PXRMEXLC",28,0)
 ;======================================================================
"RTN","PXRMEXLC",29,0)
FILE(COMPNT) ;Read and process a file entry.
"RTN","PXRMEXLC",30,0)
 N ACTION,ATTR,CAT,DATA,ENTRY,EXISTS,IEN,INDICES,FIELD,FILE
"RTN","PXRMEXLC",31,0)
 N LINE,NUM
"RTN","PXRMEXLC",32,0)
 F  S @("LINE="_PXRMREAD) Q:LINE["**END**"  D
"RTN","PXRMEXLC",33,0)
 . S INDICES=$P(LINE,"~",1)
"RTN","PXRMEXLC",34,0)
 . S IEN=$P(INDICES,";",3)
"RTN","PXRMEXLC",35,0)
 . S FIELD=$P(INDICES,";",4)
"RTN","PXRMEXLC",36,0)
 . S DATA=$P(LINE,"~",2)
"RTN","PXRMEXLC",37,0)
 . I (FIELD=.01)&($L(IEN,",")=2) D
"RTN","PXRMEXLC",38,0)
 .. S ATTR("NAME")=DATA
"RTN","PXRMEXLC",39,0)
 .. S NUM=$P(INDICES,";",1)
"RTN","PXRMEXLC",40,0)
 .. S FILE=$P(INDICES,";",2)
"RTN","PXRMEXLC",41,0)
 .. D SETATTR^PXRMEXFI(FILE,.ATTR)
"RTN","PXRMEXLC",42,0)
 .. I $$EXISTS^PXRMEXFI(.ATTR) S EXISTS="X"
"RTN","PXRMEXLC",43,0)
 .. E  S EXISTS=""
"RTN","PXRMEXLC",44,0)
 .. S VALMCNT=VALMCNT+1
"RTN","PXRMEXLC",45,0)
 .. S LCA(COMPNT,ATTR("FILE NAME"),VALMCNT)=DATA_U_EXISTS
"RTN","PXRMEXLC",46,0)
 . I (FILE=9999999.64)&(FIELD=.1) D
"RTN","PXRMEXLC",47,0)
 .. I DATA="CATEGORY" S CAT="X"
"RTN","PXRMEXLC",48,0)
 .. E  S CAT=""
"RTN","PXRMEXLC",49,0)
 .. S LCA(COMPNT,ATTR("FILE NAME"),VALMCNT)=LCA(COMPNT,ATTR("FILE NAME"),VALMCNT)_U_CAT
"RTN","PXRMEXLC",50,0)
 Q
"RTN","PXRMEXLC",51,0)
 ;
"RTN","PXRMEXLC",52,0)
 ;======================================================================
"RTN","PXRMEXLC",53,0)
FMTDATA(DATA) ;Return DATA in a string formatted for display.
"RTN","PXRMEXLC",54,0)
 N NSTI,TEMP
"RTN","PXRMEXLC",55,0)
 S TEMP=$$INSCHR(20," ")_$P(DATA,U,1)
"RTN","PXRMEXLC",56,0)
 S NSTI=65-$L(TEMP)
"RTN","PXRMEXLC",57,0)
 S TEMP=TEMP_$$INSCHR(NSTI," ")_$P(DATA,U,3)
"RTN","PXRMEXLC",58,0)
 S NSTI=75-$L(TEMP)
"RTN","PXRMEXLC",59,0)
 S TEMP=TEMP_$$INSCHR(NSTI," ")_$P(DATA,U,2)
"RTN","PXRMEXLC",60,0)
 Q TEMP
"RTN","PXRMEXLC",61,0)
 ;
"RTN","PXRMEXLC",62,0)
 ;======================================================================
"RTN","PXRMEXLC",63,0)
INSCHR(NUM,CHR) ;Return a string of NUM characters (CHR).
"RTN","PXRMEXLC",64,0)
 N IND,TEMP
"RTN","PXRMEXLC",65,0)
 S TEMP=""
"RTN","PXRMEXLC",66,0)
 I NUM<1 Q TEMP
"RTN","PXRMEXLC",67,0)
 F IND=1:1:NUM S TEMP=TEMP_CHR
"RTN","PXRMEXLC",68,0)
 Q TEMP
"RTN","PXRMEXLC",69,0)
 ;
"RTN","PXRMEXLC",70,0)
 ;======================================================================
"RTN","PXRMEXLC",71,0)
LC ;List the components in a reminder definition.
"RTN","PXRMEXLC",72,0)
 ;Decide if the packed reminder definition is in a MailMan message
"RTN","PXRMEXLC",73,0)
 ;or a host file.
"RTN","PXRMEXLC",74,0)
 N LCA,XMZ
"RTN","PXRMEXLC",75,0)
 I PXRMSRC="MM" D
"RTN","PXRMEXLC",76,0)
 . S XMZ=+$P($G(^TMP("PXRMEX",$J,"MESSAGE")),U,1)
"RTN","PXRMEXLC",77,0)
 . I '$D(^XMB(3.7,"M",XMZ)) D  Q
"RTN","PXRMEXLC",78,0)
 .. W !,XMZ," is not a valid message number."
"RTN","PXRMEXLC",79,0)
 . S VALMHDR(1)="Reminder components in MailMan message "_XMZ
"RTN","PXRMEXLC",80,0)
 I PXRMSRC="HFILE" D
"RTN","PXRMEXLC",81,0)
 . S PRDTMP("LINE#")=0
"RTN","PXRMEXLC",82,0)
 . S XMZ=$J
"RTN","PXRMEXLC",83,0)
 . S VALMHDR(1)="Reminder components in host file "_PRDTMP("HOST FILE")
"RTN","PXRMEXLC",84,0)
 ;
"RTN","PXRMEXLC",85,0)
 ;See if the ^TMP array is already built for this reminder definition.
"RTN","PXRMEXLC",86,0)
 I $D(^TMP("PXRMEXLC",$J,"PRD",XMZ)) D  Q
"RTN","PXRMEXLC",87,0)
 . S VALMCNT=^TMP("PXRMEXLC",$J,"PRD",XMZ)
"RTN","PXRMEXLC",88,0)
 S VALMCNT=0
"RTN","PXRMEXLC",89,0)
 N COMP,COMPNT,DATA,LINE,NAME
"RTN","PXRMEXLC",90,0)
 F  S @("LINE="_PXRMREAD) Q:LINE=""  D
"RTN","PXRMEXLC",91,0)
 . I LINE["**START**" S COMP=$P(LINE,U,2) D
"RTN","PXRMEXLC",92,0)
 .. I COMP="CF" D  Q
"RTN","PXRMEXLC",93,0)
 ... S COMPNT="Computed Findings"
"RTN","PXRMEXLC",94,0)
 ... D CF(COMPNT)
"RTN","PXRMEXLC",95,0)
 .. I COMP="HF" D  Q
"RTN","PXRMEXLC",96,0)
 ... S COMPNT="Health Factor"
"RTN","PXRMEXLC",97,0)
 ... D FILE(COMPNT)
"RTN","PXRMEXLC",98,0)
 .. I COMP="TAX" D  Q
"RTN","PXRMEXLC",99,0)
 ... S COMPNT="Taxonomy"
"RTN","PXRMEXLC",100,0)
 ... D FILE(COMPNT)
"RTN","PXRMEXLC",101,0)
 .. I COMP="TARGET" D  Q
"RTN","PXRMEXLC",102,0)
 ... S COMPNT="Target"
"RTN","PXRMEXLC",103,0)
 ... D FILE(COMPNT)
"RTN","PXRMEXLC",104,0)
 .. I COMP="RDEF" D  Q
"RTN","PXRMEXLC",105,0)
 ...;The $C(127) is used so the reminder definition always comes last.
"RTN","PXRMEXLC",106,0)
 ... S COMPNT=$C(127)_"Reminder Definition"
"RTN","PXRMEXLC",107,0)
 ... D FILE(COMPNT)
"RTN","PXRMEXLC",108,0)
 F  S @("LINE="_PXRMREAD) Q:LINE=""
"RTN","PXRMEXLC",109,0)
 ;Put LCA into ^TMP("PXRMEXLC",$J) for the template to display.
"RTN","PXRMEXLC",110,0)
 N IND,ENTRY,FILE,TEMP
"RTN","PXRMEXLC",111,0)
 S VALMCNT=0
"RTN","PXRMEXLC",112,0)
 S COMPNT=""
"RTN","PXRMEXLC",113,0)
 F  S COMPNT=$O(LCA(COMPNT)) Q:COMPNT=""  D
"RTN","PXRMEXLC",114,0)
 . S VALMCNT=VALMCNT+1
"RTN","PXRMEXLC",115,0)
 . S ^TMP("PXRMEXLC",$J,VALMCNT,0)=" "
"RTN","PXRMEXLC",116,0)
 . S TEMP=COMPNT
"RTN","PXRMEXLC",117,0)
 . S VALMCNT=VALMCNT+1
"RTN","PXRMEXLC",118,0)
 . I COMPNT="Health Factor" S TEMP=TEMP_$$INSCHR(48," ")_"Category"
"RTN","PXRMEXLC",119,0)
 . S ^TMP("PXRMEXLC",$J,VALMCNT,0)=TEMP
"RTN","PXRMEXLC",120,0)
 . S FILE=""
"RTN","PXRMEXLC",121,0)
 . F  S FILE=$O(LCA(COMPNT,FILE)) Q:FILE=""  D
"RTN","PXRMEXLC",122,0)
 .. S VALMCNT=VALMCNT+1
"RTN","PXRMEXLC",123,0)
 .. S TEMP=$$INSCHR(13," ")_FILE
"RTN","PXRMEXLC",124,0)
 .. I COMPNT="Computed Findings" S TEMP=TEMP_$$INSCHR(10," ")_"Entry Point"
"RTN","PXRMEXLC",125,0)
 .. S ^TMP("PXRMEXLC",$J,VALMCNT,0)=TEMP
"RTN","PXRMEXLC",126,0)
 .. S IND=0
"RTN","PXRMEXLC",127,0)
 .. F  S IND=$O(LCA(COMPNT,FILE,IND)) Q:IND=""  D
"RTN","PXRMEXLC",128,0)
 ... S VALMCNT=VALMCNT+1
"RTN","PXRMEXLC",129,0)
 ... S DATA=LCA(COMPNT,FILE,IND)
"RTN","PXRMEXLC",130,0)
 ... S ^TMP("PXRMEXLC",$J,VALMCNT,0)=$$FMTDATA(DATA)
"RTN","PXRMEXLC",131,0)
 S ^TMP("PXRMEXLC",$J,"PRD",XMZ)=VALMCNT
"RTN","PXRMEXLC",132,0)
 Q
"RTN","PXRMEXLC",133,0)
 ;
"RTN","PXRMEXMH")
0^48^B12021370
"RTN","PXRMEXMH",1,0)
PXRMEXMH ;SLC/PKR - Clinical Reminder Exchange main help. ;11/28/97
"RTN","PXRMEXMH",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMEXMH",3,0)
 ;======================================================================
"RTN","PXRMEXMH",4,0)
LOAD ;If necessary load the help text into the ^TMP array.
"RTN","PXRMEXMH",5,0)
 ;Check if the help text has already been loaded.
"RTN","PXRMEXMH",6,0)
 I $D(^TMP("PXRMEXMH",$J,"VALMCNT")) D  Q
"RTN","PXRMEXMH",7,0)
 . S VALMCNT=^TMP("PXRMEXMH",$J,"VALMCNT")
"RTN","PXRMEXMH",8,0)
 ;
"RTN","PXRMEXMH",9,0)
 N DONE,IND,TEXT
"RTN","PXRMEXMH",10,0)
 S DONE=0
"RTN","PXRMEXMH",11,0)
 S VALMCNT=0
"RTN","PXRMEXMH",12,0)
 F IND=1:1 Q:DONE  D
"RTN","PXRMEXMH",13,0)
 . S TEXT=$P($T(TEXT+IND),";",3)
"RTN","PXRMEXMH",14,0)
 . I TEXT="**End Text**" S DONE=1 Q
"RTN","PXRMEXMH",15,0)
 . S VALMCNT=VALMCNT+1
"RTN","PXRMEXMH",16,0)
 . S ^TMP("PXRMEXMH",$J,VALMCNT,0)=TEXT
"RTN","PXRMEXMH",17,0)
 S ^TMP("PXRMEXMH",$J,"VALMCNT")=VALMCNT
"RTN","PXRMEXMH",18,0)
 Q
"RTN","PXRMEXMH",19,0)
 ;
"RTN","PXRMEXMH",20,0)
 ;======================================================================
"RTN","PXRMEXMH",21,0)
TEXT ;Help text
"RTN","PXRMEXMH",22,0)
 ;;The following actions are available:
"RTN","PXRMEXMH",23,0)
 ;;
"RTN","PXRMEXMH",24,0)
 ;;LR  List Reminders
"RTN","PXRMEXMH",25,0)
 ;;    Display a list of all the reminders that are defined in the
"RTN","PXRMEXMH",26,0)
 ;;    current UCI.
"RTN","PXRMEXMH",27,0)
 ;;
"RTN","PXRMEXMH",28,0)
 ;;RI  Reminder Inquiry
"RTN","PXRMEXMH",29,0)
 ;;    Display the reminder definition for the selected reminder.
"RTN","PXRMEXMH",30,0)
 ;;
"RTN","PXRMEXMH",31,0)
 ;;MR  Mail Reminder
"RTN","PXRMEXMH",32,0)
 ;;    Pack the selected reminder definition and all of its components
"RTN","PXRMEXMH",33,0)
 ;;    into a MailMan message. You will be prompted to input a reminder
"RTN","PXRMEXMH",34,0)
 ;;    description. This should contain information that will help
"RTN","PXRMEXMH",35,0)
 ;;    the recipients of the message decide if this reminder definition
"RTN","PXRMEXMH",36,0)
 ;;    is of interest to them.
"RTN","PXRMEXMH",37,0)
 ;;
"RTN","PXRMEXMH",38,0)
 ;;SR  Save Reminder to Host File
"RTN","PXRMEXMH",39,0)
 ;;    Pack the selected reminder definition and all of its components
"RTN","PXRMEXMH",40,0)
 ;;    into a host file. You will be prompted to input a reminder
"RTN","PXRMEXMH",41,0)
 ;;    description. This should contain information that will help
"RTN","PXRMEXMH",42,0)
 ;;    the recipients of the message decide if this reminder definition
"RTN","PXRMEXMH",43,0)
 ;;    is of interest to them.
"RTN","PXRMEXMH",44,0)
 ;;
"RTN","PXRMEXMH",45,0)
 ;;SH  Select Host File
"RTN","PXRMEXMH",46,0)
 ;;    Select a host file that contains a packed reminder
"RTN","PXRMEXMH",47,0)
 ;;    definition. Once a valid host file has been selected control
"RTN","PXRMEXMH",48,0)
 ;;    will transfer to a screen that will display the reminder
"RTN","PXRMEXMH",49,0)
 ;;    description. The actions on this screen include displaying a
"RTN","PXRMEXMH",50,0)
 ;;    list of all the reminder components in the packed reminder
"RTN","PXRMEXMH",51,0)
 ;;    definition and installation of the components.
"RTN","PXRMEXMH",52,0)
 ;;
"RTN","PXRMEXMH",53,0)
 ;;SM  Select MailMan Message
"RTN","PXRMEXMH",54,0)
 ;;    Select a MailMan message that contains a packed reminder
"RTN","PXRMEXMH",55,0)
 ;;    definition. Once a valid message has been selected control
"RTN","PXRMEXMH",56,0)
 ;;    will transfer to a screen that will display the reminder
"RTN","PXRMEXMH",57,0)
 ;;    description. The actions on this screen include displaying a
"RTN","PXRMEXMH",58,0)
 ;;    list of all the reminder components in the packed reminder
"RTN","PXRMEXMH",59,0)
 ;;    definition and installation of the components.
"RTN","PXRMEXMH",60,0)
 ;;
"RTN","PXRMEXMH",61,0)
 ;;QU  Quit
"RTN","PXRMEXMH",62,0)
 ;;**End Text**
"RTN","PXRMEXMH",63,0)
 Q
"RTN","PXRMEXMH",64,0)
 ;
"RTN","PXRMEXMM")
0^49^B6082837
"RTN","PXRMEXMM",1,0)
PXRMEXMM ;SLC/PKR - Routines to select and deal with MailMan messages. ;03/17/1999
"RTN","PXRMEXMM",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMEXMM",3,0)
 ;======================================================================
"RTN","PXRMEXMM",4,0)
EXIT ; Exit code
"RTN","PXRMEXMM",5,0)
 D CLEAN^VALM10
"RTN","PXRMEXMM",6,0)
 D FULL^VALM1
"RTN","PXRMEXMM",7,0)
 S VALMBCK="R"
"RTN","PXRMEXMM",8,0)
 K ^TMP("PXRMEXTXT",$J)
"RTN","PXRMEXMM",9,0)
 Q
"RTN","PXRMEXMM",10,0)
 ;
"RTN","PXRMEXMM",11,0)
 ;======================================================================
"RTN","PXRMEXMM",12,0)
GETMESSN() ;Get the message number.
"RTN","PXRMEXMM",13,0)
 N TEMP,WBN,X,Y
"RTN","PXRMEXMM",14,0)
 K DIRUT,DTOUT,DUOUT
"RTN","PXRMEXMM",15,0)
 ;Clean up all the  ^TMP arrays before starting a new message.
"RTN","PXRMEXMM",16,0)
 K ^TMP("PXRMEX",$J)
"RTN","PXRMEXMM",17,0)
 K ^TMP("PXRMEXIS",$J)
"RTN","PXRMEXMM",18,0)
 K ^TMP("PXRMEXLC",$J)
"RTN","PXRMEXMM",19,0)
 K ^TMP("PXRMEXLR",$J)
"RTN","PXRMEXMM",20,0)
 K ^TMP("PXRMEXMH",$J)
"RTN","PXRMEXMM",21,0)
 K ^TMP("PXRMEXTXT",$J)
"RTN","PXRMEXMM",22,0)
 ;
"RTN","PXRMEXMM",23,0)
 S DIC("A")="Select a MailMan message: "
"RTN","PXRMEXMM",24,0)
 S DIC=3.9
"RTN","PXRMEXMM",25,0)
 S DIC(0)="EQ"
"RTN","PXRMEXMM",26,0)
 S X="Packed reminder def."
"RTN","PXRMEXMM",27,0)
 ;Look in every mailbox except WASTE.
"RTN","PXRMEXMM",28,0)
 S WBN=$$BSKT^XMAD2("WASTE",DUZ)
"RTN","PXRMEXMM",29,0)
 S DIC("S")="I $D(^XMB(3.7,""M"",+Y,DUZ))&'$D(^XMB(3.7,""M"",+Y,DUZ,WBN))"
"RTN","PXRMEXMM",30,0)
 S DIC("W")="N SAVEY S SAVEY=+Y N Y S TEMP=$$NET^XMRENT(+SAVEY) W !,""         "",$P(TEMP,U,3),$P(TEMP,U,1),!"
"RTN","PXRMEXMM",31,0)
 W !
"RTN","PXRMEXMM",32,0)
 D ^DIC K DIC
"RTN","PXRMEXMM",33,0)
 I X=(U_U) S DTOUT=1
"RTN","PXRMEXMM",34,0)
 I $D(DTOUT)!($D(DUOUT)) Q -1
"RTN","PXRMEXMM",35,0)
 Q Y
"RTN","PXRMEXMM",36,0)
 ;
"RTN","PXRMEXMM",37,0)
 ;======================================================================
"RTN","PXRMEXMM",38,0)
HDR ; Header code
"RTN","PXRMEXMM",39,0)
 I +$G(XMZ)>0 S VALMHDR(1)=$$SUBGET^XMGAPI0(XMZ)
"RTN","PXRMEXMM",40,0)
 Q
"RTN","PXRMEXMM",41,0)
 ;
"RTN","PXRMEXMM",42,0)
 ;======================================================================
"RTN","PXRMEXMM",43,0)
HELP ; Help code
"RTN","PXRMEXMM",44,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","PXRMEXMM",45,0)
 Q
"RTN","PXRMEXMM",46,0)
 ;
"RTN","PXRMEXMM",47,0)
 ;======================================================================
"RTN","PXRMEXMM",48,0)
SELMESS ;Select a message for possible install.
"RTN","PXRMEXMM",49,0)
 ;Get the message number
"RTN","PXRMEXMM",50,0)
 N MESSN
"RTN","PXRMEXMM",51,0)
 D CLEAR^VALM1
"RTN","PXRMEXMM",52,0)
 S MESSN=$$GETMESSN
"RTN","PXRMEXMM",53,0)
 I MESSN=-1 S VALMBCK="R" Q
"RTN","PXRMEXMM",54,0)
 ;
"RTN","PXRMEXMM",55,0)
 S XMZ=$P(MESSN,U,1)
"RTN","PXRMEXMM",56,0)
 ;Check the first line to make sure it is a packed reminder.
"RTN","PXRMEXMM",57,0)
 S LINE=$$READ^XMGAPI1
"RTN","PXRMEXMM",58,0)
 I LINE'="**PACKED REMINDER DEFINITION**" D  Q
"RTN","PXRMEXMM",59,0)
 . W !,"This message is not a packed reminder definition"
"RTN","PXRMEXMM",60,0)
 . S VALMBCK="R"
"RTN","PXRMEXMM",61,0)
 . F  S LINE=$$READ^XMGAPI1 Q:LINE=""
"RTN","PXRMEXMM",62,0)
 . H 1
"RTN","PXRMEXMM",63,0)
 S ^TMP("PXRMEX",$J,"MESSAGE")=MESSN
"RTN","PXRMEXMM",64,0)
 ;Load the text array
"RTN","PXRMEXMM",65,0)
 N COMP
"RTN","PXRMEXMM",66,0)
 F  S LINE=$$READ^XMGAPI1 Q:LINE=""  D
"RTN","PXRMEXMM",67,0)
 . I LINE["**START**" S COMP=$P(LINE,U,2) D
"RTN","PXRMEXMM",68,0)
 .. I COMP="TEXT" D TEXT
"RTN","PXRMEXMM",69,0)
 ;
"RTN","PXRMEXMM",70,0)
 ;Set the name of the reader routine.
"RTN","PXRMEXMM",71,0)
 S PXRMREAD="$$READ^XMGAPI1"
"RTN","PXRMEXMM",72,0)
 S PXRMSRC="MM"
"RTN","PXRMEXMM",73,0)
 ;
"RTN","PXRMEXMM",74,0)
 ;Start the list manager.
"RTN","PXRMEXMM",75,0)
 D EN^VALM("PXRM EX MAILMAN MESSAGE")
"RTN","PXRMEXMM",76,0)
 Q
"RTN","PXRMEXMM",77,0)
 ;
"RTN","PXRMEXMM",78,0)
 ;======================================================================
"RTN","PXRMEXMM",79,0)
TEXT ;Read and process the message text.
"RTN","PXRMEXMM",80,0)
 N LC,LINE
"RTN","PXRMEXMM",81,0)
 S LC=0
"RTN","PXRMEXMM",82,0)
 F  S LINE=$$READ^XMGAPI1 Q:LINE["**END**"  D
"RTN","PXRMEXMM",83,0)
 . S LC=LC+1
"RTN","PXRMEXMM",84,0)
 . S ^TMP("PXRMEXTXT",$J,LC,0)=$P(LINE,"~",2)
"RTN","PXRMEXMM",85,0)
 S VALMCNT=LC
"RTN","PXRMEXMM",86,0)
 ;See if this is a VA- reminder.
"RTN","PXRMEXMM",87,0)
 I $P(^TMP("PXRMEXTXT",$J,1,0),":",2)["VA-" S PXRMVARM=1
"RTN","PXRMEXMM",88,0)
 E  S PXRMVARM=0
"RTN","PXRMEXMM",89,0)
 Q
"RTN","PXRMEXMM",90,0)
 ;
"RTN","PXRMEXMR")
0^50^B8067735
"RTN","PXRMEXMR",1,0)
PXRMEXMR ;SLC/PKR - Clinical Reminders main driver for mailing reminder definitions. ;04/10/2000
"RTN","PXRMEXMR",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMEXMR",3,0)
 ;======================================================================
"RTN","PXRMEXMR",4,0)
EN ;Get the reminder to mail.
"RTN","PXRMEXMR",5,0)
 W !,"Creation of packed reminders has been temporarily disabled."
"RTN","PXRMEXMR",6,0)
 H 2
"RTN","PXRMEXMR",7,0)
 Q
"RTN","PXRMEXMR",8,0)
 N RTM
"RTN","PXRMEXMR",9,0)
 S RTM=$$GETREM^PXRMEXPU("mail")
"RTN","PXRMEXMR",10,0)
 I RTM=-1 Q
"RTN","PXRMEXMR",11,0)
 ;
"RTN","PXRMEXMR",12,0)
 ;Create the packed reminder definition. It will be in ^TMP(PXRMEXPR,$J
"RTN","PXRMEXMR",13,0)
 D PACK^PXRMEXPR(RTM)
"RTN","PXRMEXMR",14,0)
 ;
"RTN","PXRMEXMR",15,0)
 ;Mail the packed reminder definition.
"RTN","PXRMEXMR",16,0)
 D MAILREM(RTM)
"RTN","PXRMEXMR",17,0)
 Q
"RTN","PXRMEXMR",18,0)
 ;
"RTN","PXRMEXMR",19,0)
 ;======================================================================
"RTN","PXRMEXMR",20,0)
LOADXMB(XMZ) ;Load the ^TMP("PXRMEXPR",$J array into ^XMB as described
"RTN","PXRMEXMR",21,0)
 ;in the MailMan Programmer Reference manual.
"RTN","PXRMEXMR",22,0)
 N DTEST,IND1,IND2,IND3,IND4,IND5,IND6,LC,TEMP
"RTN","PXRMEXMR",23,0)
 S LC=1
"RTN","PXRMEXMR",24,0)
 S ^XMB(3.9,XMZ,2,LC,0)="**PACKED REMINDER DEFINITION**"
"RTN","PXRMEXMR",25,0)
 F IND1="TEXT","TARGET","CF","HF","TAX","RDEF" D
"RTN","PXRMEXMR",26,0)
 . I '$D(^TMP("PXRMEXPR",$J,IND1)) Q
"RTN","PXRMEXMR",27,0)
 . S LC=LC+1
"RTN","PXRMEXMR",28,0)
 . S ^XMB(3.9,XMZ,2,LC,0)="**START**"_U_IND1
"RTN","PXRMEXMR",29,0)
 . S IND2=""
"RTN","PXRMEXMR",30,0)
 . F  S IND2=$O(^TMP("PXRMEXPR",$J,IND1,IND2)) Q:IND2=""  D
"RTN","PXRMEXMR",31,0)
 .. S IND3=""
"RTN","PXRMEXMR",32,0)
 .. F  S IND3=$O(^TMP("PXRMEXPR",$J,IND1,IND2,IND3)) Q:IND3=""  D
"RTN","PXRMEXMR",33,0)
 ... I $D(^TMP("PXRMEXPR",$J,IND1,IND2,IND3))#10 D
"RTN","PXRMEXMR",34,0)
 .... S LC=LC+1
"RTN","PXRMEXMR",35,0)
 .... S ^XMB(3.9,XMZ,2,LC,0)=$$INDDAT^PXRMEXPU(IND1,IND2,IND3)
"RTN","PXRMEXMR",36,0)
 ... S IND4=""
"RTN","PXRMEXMR",37,0)
 ... F  S IND4=$O(^TMP("PXRMEXPR",$J,IND1,IND2,IND3,IND4)) Q:IND4=""  D
"RTN","PXRMEXMR",38,0)
 .... I $D(^TMP("PXRMEXPR",$J,IND1,IND2,IND3,IND4))#10 D
"RTN","PXRMEXMR",39,0)
 ..... S LC=LC+1
"RTN","PXRMEXMR",40,0)
 ..... S ^XMB(3.9,XMZ,2,LC,0)=$$INDDAT^PXRMEXPU(IND1,IND2,IND3,IND4)
"RTN","PXRMEXMR",41,0)
 .... S IND5=""
"RTN","PXRMEXMR",42,0)
 .... F  S IND5=$O(^TMP("PXRMEXPR",$J,IND1,IND2,IND3,IND4,IND5)) Q:IND5=""  D
"RTN","PXRMEXMR",43,0)
 ..... I $D(^TMP("PXRMEXPR",$J,IND1,IND2,IND3,IND4,IND5))#10 D
"RTN","PXRMEXMR",44,0)
 ...... S LC=LC+1
"RTN","PXRMEXMR",45,0)
 ...... S ^XMB(3.9,XMZ,2,LC,0)=$$INDDAT^PXRMEXPU(IND1,IND2,IND3,IND4,IND5)
"RTN","PXRMEXMR",46,0)
 ..... S IND6=""
"RTN","PXRMEXMR",47,0)
 ..... F  S IND6=$O(^TMP("PXRMEXPR",$J,IND1,IND2,IND3,IND4,IND5,IND6)) Q:IND6=""  D
"RTN","PXRMEXMR",48,0)
 ...... S LC=LC+1
"RTN","PXRMEXMR",49,0)
 ...... S ^XMB(3.9,XMZ,2,LC,0)=$$INDDAT^PXRMEXPU(IND1,IND2,IND3,IND4,IND5,IND6)
"RTN","PXRMEXMR",50,0)
 . S LC=LC+1
"RTN","PXRMEXMR",51,0)
 . S ^XMB(3.9,XMZ,2,LC,0)="**END**"
"RTN","PXRMEXMR",52,0)
 W !,"Total lines in packed reminder definition = ",LC
"RTN","PXRMEXMR",53,0)
 W !,"Local message number ",XMZ
"RTN","PXRMEXMR",54,0)
 S ^XMB(3.9,XMZ,2,0)="^3.92^"_LC_"^"_LC_"^"_DT
"RTN","PXRMEXMR",55,0)
 Q
"RTN","PXRMEXMR",56,0)
 ;
"RTN","PXRMEXMR",57,0)
 ;======================================================================
"RTN","PXRMEXMR",58,0)
MAILREM(RTM) ;Mail the packed reminder definition.
"RTN","PXRMEXMR",59,0)
 N MESS,TEMP,XMSUB,XMTEXT
"RTN","PXRMEXMR",60,0)
 S XMSUB="Packed reminder def. for "_$P(RTM,U,2)
"RTN","PXRMEXMR",61,0)
 S TEMP=$$SUBCHK^XMGAPI0(XMSUB,0)
"RTN","PXRMEXMR",62,0)
 I $P(TEMP,U,1)'="" S XMSUB=$E(XMSUB,1,65)
"RTN","PXRMEXMR",63,0)
RETRY ;
"RTN","PXRMEXMR",64,0)
 D XMZ^XMA2
"RTN","PXRMEXMR",65,0)
 I XMZ<1 G RETRY
"RTN","PXRMEXMR",66,0)
 ;
"RTN","PXRMEXMR",67,0)
 D LOADXMB(XMZ)
"RTN","PXRMEXMR",68,0)
 ;
"RTN","PXRMEXMR",69,0)
 ;Make the message information only.
"RTN","PXRMEXMR",70,0)
 S $P(^XMB(3.9,XMZ,0),U,12)="Y"
"RTN","PXRMEXMR",71,0)
 ;
"RTN","PXRMEXMR",72,0)
 ;Get a list of who to send it to and send it.
"RTN","PXRMEXMR",73,0)
 D ENT2^XMD
"RTN","PXRMEXMR",74,0)
 ;
"RTN","PXRMEXMR",75,0)
 ;Write out the message number
"RTN","PXRMEXMR",76,0)
 S VALMHDR(1)=XMSUB
"RTN","PXRMEXMR",77,0)
 S VALMHDR(2)="saved in local message number "_XMZ
"RTN","PXRMEXMR",78,0)
 ;
"RTN","PXRMEXMR",79,0)
 ;Kill the packed reminder temp.
"RTN","PXRMEXMR",80,0)
 K ^TMP("PXRMEXPR",$J)
"RTN","PXRMEXMR",81,0)
 Q
"RTN","PXRMEXMR",82,0)
 ;
"RTN","PXRMEXPR")
0^51^B28046398
"RTN","PXRMEXPR",1,0)
PXRMEXPR ;SLC/PKR - Routines to create packed reminder definitions. ;04/10/2000
"RTN","PXRMEXPR",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMEXPR",3,0)
 ;======================================================================
"RTN","PXRMEXPR",4,0)
PACK(RTM) ;Create the packed reminder, store it in ^TMP("PXRMEXPR,$J)
"RTN","PXRMEXPR",5,0)
 Q
"RTN","PXRMEXPR",6,0)
 ;Save the source information
"RTN","PXRMEXPR",7,0)
 D PUTSRC(RTM)
"RTN","PXRMEXPR",8,0)
 ;
"RTN","PXRMEXPR",9,0)
 ;Let the user input text that describes the reminder.
"RTN","PXRMEXPR",10,0)
 D GETTEXT
"RTN","PXRMEXPR",11,0)
 ;
"RTN","PXRMEXPR",12,0)
 ;Combine the source and input text into the "TEXT" array.
"RTN","PXRMEXPR",13,0)
 D BLDTEXT
"RTN","PXRMEXPR",14,0)
 ;
"RTN","PXRMEXPR",15,0)
 ;Build lists of the various reminder components.
"RTN","PXRMEXPR",16,0)
 N CF,GETSERR,HF,RIEN,TAX
"RTN","PXRMEXPR",17,0)
 S RIEN=$P(RTM,U,1)
"RTN","PXRMEXPR",18,0)
 ;Reminder definition
"RTN","PXRMEXPR",19,0)
 D GETREM(RIEN)
"RTN","PXRMEXPR",20,0)
 ;
"RTN","PXRMEXPR",21,0)
 ;Targets
"RTN","PXRMEXPR",22,0)
 D GETTARG(RIEN)
"RTN","PXRMEXPR",23,0)
 ;
"RTN","PXRMEXPR",24,0)
 ;Taxonomies
"RTN","PXRMEXPR",25,0)
 D GETFIND(RIEN,.TAX,4)
"RTN","PXRMEXPR",26,0)
 D PUTFIND(.TAX,"811.2","^TMP(""PXRMEXPR"",$J,""TAX"",")
"RTN","PXRMEXPR",27,0)
 ;
"RTN","PXRMEXPR",28,0)
 ;Health Factors
"RTN","PXRMEXPR",29,0)
 D GETFIND(RIEN,.HF,6)
"RTN","PXRMEXPR",30,0)
 D GETHFCAT(.HF)
"RTN","PXRMEXPR",31,0)
 D PUTFIND(.HF,"9999999.64","^TMP(""PXRMEXPR"",$J,""HF"",")
"RTN","PXRMEXPR",32,0)
 ;
"RTN","PXRMEXPR",33,0)
 ;Computed Findings
"RTN","PXRMEXPR",34,0)
 D GETFIND(RIEN,.CF,10)
"RTN","PXRMEXPR",35,0)
 D PUTCF(.CF)
"RTN","PXRMEXPR",36,0)
 ;
"RTN","PXRMEXPR",37,0)
 ;If storing of any of the components failed kill the packed definition
"RTN","PXRMEXPR",38,0)
 ;because it is incomplete.
"RTN","PXRMEXPR",39,0)
 I $G(GETSERR) K ^TMP("PXRMEXPR",$J)
"RTN","PXRMEXPR",40,0)
 Q
"RTN","PXRMEXPR",41,0)
 ;
"RTN","PXRMEXPR",42,0)
 ;======================================================================
"RTN","PXRMEXPR",43,0)
BLDTEXT ;Combine the source information and the users input into the "TEXT"
"RTN","PXRMEXPR",44,0)
 ;array.
"RTN","PXRMEXPR",45,0)
 N IC,IND
"RTN","PXRMEXPR",46,0)
 S (IC,IND)=0
"RTN","PXRMEXPR",47,0)
 F  S IC=$O(^TMP("PXRMEXPR",$J,"SRC",IC)) Q:+IC=0  D
"RTN","PXRMEXPR",48,0)
 . S IND=IND+1
"RTN","PXRMEXPR",49,0)
 . S ^TMP("PXRMEXPR",$J,"TEXT",1,IND)=^TMP("PXRMEXPR",$J,"SRC",IC)
"RTN","PXRMEXPR",50,0)
 ;
"RTN","PXRMEXPR",51,0)
 S IC=0
"RTN","PXRMEXPR",52,0)
 F  S IC=$O(^TMP("PXRMEXPR",$J,"TXT",1,IC)) Q:+IC=0  D
"RTN","PXRMEXPR",53,0)
 . S IND=IND+1
"RTN","PXRMEXPR",54,0)
 . S ^TMP("PXRMEXPR",$J,"TEXT",1,IND)=^TMP("PXRMEXPR",$J,"TXT",1,IC,0)
"RTN","PXRMEXPR",55,0)
 Q
"RTN","PXRMEXPR",56,0)
 ;
"RTN","PXRMEXPR",57,0)
 ;======================================================================
"RTN","PXRMEXPR",58,0)
GETFIND(RIEN,FINDING,FIND) ;Build list of findings targets.
"RTN","PXRMEXPR",59,0)
 N IND,JND
"RTN","PXRMEXPR",60,0)
 S (IND,JND)=0
"RTN","PXRMEXPR",61,0)
 F  S IND=$O(^PXD(811.9,RIEN,FIND,IND)) Q:+IND'>0  D
"RTN","PXRMEXPR",62,0)
 . S JND=$P(^PXD(811.9,RIEN,FIND,IND,0),U,1)
"RTN","PXRMEXPR",63,0)
 . S FINDING(JND)=JND
"RTN","PXRMEXPR",64,0)
 Q
"RTN","PXRMEXPR",65,0)
 ;
"RTN","PXRMEXPR",66,0)
 ;======================================================================
"RTN","PXRMEXPR",67,0)
GETHFCAT(HF) ;Go through the list of health factors in HF and make sure
"RTN","PXRMEXPR",68,0)
 ;all the necessary categories are included in the list of health
"RTN","PXRMEXPR",69,0)
 ;factors in the packed reminder definition.
"RTN","PXRMEXPR",70,0)
 N CAT,IND,NHF,TEMP
"RTN","PXRMEXPR",71,0)
 S IND=0
"RTN","PXRMEXPR",72,0)
 F  S IND=$O(HF(IND)) Q:+IND=0  D
"RTN","PXRMEXPR",73,0)
 . S CAT=$P(^AUTTHF(IND,0),U,3)
"RTN","PXRMEXPR",74,0)
 . I CAT'="" S HF(CAT)="C"
"RTN","PXRMEXPR",75,0)
 ;Reorder the list so categories come first.
"RTN","PXRMEXPR",76,0)
 S NHF=0
"RTN","PXRMEXPR",77,0)
 S IND=0
"RTN","PXRMEXPR",78,0)
 F  S IND=$O(HF(IND)) Q:+IND=0  D
"RTN","PXRMEXPR",79,0)
 . I HF(IND)="C" D
"RTN","PXRMEXPR",80,0)
 .. S NHF=NHF+1
"RTN","PXRMEXPR",81,0)
 .. S TEMP(NHF)=IND
"RTN","PXRMEXPR",82,0)
 .. K HF(IND)
"RTN","PXRMEXPR",83,0)
 S IND=0
"RTN","PXRMEXPR",84,0)
 F  S IND=$O(HF(IND)) Q:+IND=0  D
"RTN","PXRMEXPR",85,0)
 . S NHF=NHF+1
"RTN","PXRMEXPR",86,0)
 . S TEMP(NHF)=IND
"RTN","PXRMEXPR",87,0)
 K HF
"RTN","PXRMEXPR",88,0)
 F IND=1:1:NHF D
"RTN","PXRMEXPR",89,0)
 . S HF(IND)=TEMP(IND)
"RTN","PXRMEXPR",90,0)
 Q
"RTN","PXRMEXPR",91,0)
 ;
"RTN","PXRMEXPR",92,0)
 ;======================================================================
"RTN","PXRMEXPR",93,0)
GETREM(RIEN) ;Save the reminder definition.
"RTN","PXRMEXPR",94,0)
 N DEST,IEN,MSG
"RTN","PXRMEXPR",95,0)
 S IEN=RIEN_","
"RTN","PXRMEXPR",96,0)
 S DEST="^TMP(""PXRMEXPR"",$J,""RDEF"",1,"
"RTN","PXRMEXPR",97,0)
 D GETS^DIQ(811.9,IEN,"**","",DEST,"MSG")
"RTN","PXRMEXPR",98,0)
 I $D(MSG) D
"RTN","PXRMEXPR",99,0)
 . N ETEXT
"RTN","PXRMEXPR",100,0)
 . S ETEXT="GETS^DIQ failed for the reminder definition, it returned the following error message:"
"RTN","PXRMEXPR",101,0)
 . D GETSERR(ETEXT,.MSG)
"RTN","PXRMEXPR",102,0)
 Q
"RTN","PXRMEXPR",103,0)
 ;
"RTN","PXRMEXPR",104,0)
 ;======================================================================
"RTN","PXRMEXPR",105,0)
GETSERR(TEXT,MSG) ;
"RTN","PXRMEXPR",106,0)
 W !,TEXT
"RTN","PXRMEXPR",107,0)
 D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMEXPR",108,0)
 H 2
"RTN","PXRMEXPR",109,0)
 S GETSERR=1
"RTN","PXRMEXPR",110,0)
 Q
"RTN","PXRMEXPR",111,0)
 ;
"RTN","PXRMEXPR",112,0)
 ;======================================================================
"RTN","PXRMEXPR",113,0)
GETTARG(RIEN) ;Build the list of targets.
"RTN","PXRMEXPR",114,0)
 N DEST,FDEST,FNUM,IEN,IND,JND,MSG,TARGET
"RTN","PXRMEXPR",115,0)
 S IND=0
"RTN","PXRMEXPR",116,0)
 S DEST="^TMP(""PXRMEXPR"",$J,""TARGET"","
"RTN","PXRMEXPR",117,0)
 F  S IND=$O(^PXD(811.9,RIEN,3,IND)) Q:+IND'>0  D
"RTN","PXRMEXPR",118,0)
 . S FNUM=^PXD(811.9,RIEN,3,IND,0)
"RTN","PXRMEXPR",119,0)
 . S JND=0
"RTN","PXRMEXPR",120,0)
 . F  S JND=$O(^PXD(811.9,RIEN,3,IND,2,JND)) Q:+JND'>0  D
"RTN","PXRMEXPR",121,0)
 .. S FDEST=DEST_IND_JND_","
"RTN","PXRMEXPR",122,0)
 .. S TARGET=$G(^PXD(811.9,RIEN,3,IND,2,JND,0))
"RTN","PXRMEXPR",123,0)
 .. S IEN=$P(TARGET,";",1)_","
"RTN","PXRMEXPR",124,0)
 .. D GETS^DIQ(FNUM,IEN,"**","",FDEST,"MSG")
"RTN","PXRMEXPR",125,0)
 .. I $D(MSG) D
"RTN","PXRMEXPR",126,0)
 ... N ETEXT
"RTN","PXRMEXPR",127,0)
 ... S ETEXT="GETS^DIQ failed for the target, it returned the following error message:"
"RTN","PXRMEXPR",128,0)
 ... D GETSERR(ETEXT,.MSG)
"RTN","PXRMEXPR",129,0)
 Q
"RTN","PXRMEXPR",130,0)
 ;
"RTN","PXRMEXPR",131,0)
 ;======================================================================
"RTN","PXRMEXPR",132,0)
GETTEXT ;Let the user input text that describes the reminder.
"RTN","PXRMEXPR",133,0)
 N DIC,DWLW,DWPK
"RTN","PXRMEXPR",134,0)
 S DIC="^TMP(""PXRMEXPR"",$J,""TXT"",1,"
"RTN","PXRMEXPR",135,0)
 S DWLW=72
"RTN","PXRMEXPR",136,0)
 S DWPK=1
"RTN","PXRMEXPR",137,0)
 W !,"Enter a description of the reminder you are sending." H 1
"RTN","PXRMEXPR",138,0)
 D EN^DIWE
"RTN","PXRMEXPR",139,0)
 Q
"RTN","PXRMEXPR",140,0)
 ;
"RTN","PXRMEXPR",141,0)
 ;======================================================================
"RTN","PXRMEXPR",142,0)
PUTCF(CF) ;Save computed findings routines.
"RTN","PXRMEXPR",143,0)
 N DIF,IEN,IND,TEMP,X,XCNP
"RTN","PXRMEXPR",144,0)
 ;Eliminate redundant copies of any routines.
"RTN","PXRMEXPR",145,0)
 S IND=""
"RTN","PXRMEXPR",146,0)
 F  S IND=$O(CF(IND)) Q:IND=""  D
"RTN","PXRMEXPR",147,0)
 . S X=$P(CF(IND),";",2)
"RTN","PXRMEXPR",148,0)
 . S TEMP(X)=""
"RTN","PXRMEXPR",149,0)
 S X=""
"RTN","PXRMEXPR",150,0)
 F  S X=$O(TEMP(X)) Q:X=""  D
"RTN","PXRMEXPR",151,0)
 .;Make sure the routine exists.
"RTN","PXRMEXPR",152,0)
 . X ^%ZOSF("TEST")
"RTN","PXRMEXPR",153,0)
 . I $T D
"RTN","PXRMEXPR",154,0)
 .. S DIF="^TMP(""PXRMEXPR"",$J,""CF"","""_X_""","
"RTN","PXRMEXPR",155,0)
 .. S XCNP=0
"RTN","PXRMEXPR",156,0)
 .. X ^%ZOSF("LOAD")
"RTN","PXRMEXPR",157,0)
 . E  D
"RTN","PXRMEXPR",158,0)
 .. W !,"Warning could not find computed finding routine ",X
"RTN","PXRMEXPR",159,0)
 .. H 2
"RTN","PXRMEXPR",160,0)
 Q
"RTN","PXRMEXPR",161,0)
 ;
"RTN","PXRMEXPR",162,0)
 ;======================================================================
"RTN","PXRMEXPR",163,0)
PUTFIND(FINDING,FILE,DEST) ;Save file type findings.
"RTN","PXRMEXPR",164,0)
 N FDEST,IEN,IND,MSG
"RTN","PXRMEXPR",165,0)
 S IND=0
"RTN","PXRMEXPR",166,0)
 F  S IND=$O(FINDING(IND)) Q:IND=""  D
"RTN","PXRMEXPR",167,0)
 . S IEN=FINDING(IND)_","
"RTN","PXRMEXPR",168,0)
 . S FDEST=DEST_IND_","
"RTN","PXRMEXPR",169,0)
 . D GETS^DIQ(FILE,IEN,"**","",FDEST,"MSG")
"RTN","PXRMEXPR",170,0)
 . I $D(MSG) D
"RTN","PXRMEXPR",171,0)
 .. N ETEXT
"RTN","PXRMEXPR",172,0)
 .. S ETEXT="GETS^DIQ failed for file "_FILE_", it returned the following error message:"
"RTN","PXRMEXPR",173,0)
 .. D GETSERR(ETEXT,.MSG)
"RTN","PXRMEXPR",174,0)
 Q
"RTN","PXRMEXPR",175,0)
 ;
"RTN","PXRMEXPR",176,0)
 ;======================================================================
"RTN","PXRMEXPR",177,0)
PUTSRC(RTM) ;Save the source information
"RTN","PXRMEXPR",178,0)
 N LOC
"RTN","PXRMEXPR",179,0)
 S LOC=$$SITE^VASITE
"RTN","PXRMEXPR",180,0)
 S ^TMP("PXRMEXPR",$J,"SRC",1)="Packed reminder definition for: "_$P(RTM,U,2)
"RTN","PXRMEXPR",181,0)
 S ^TMP("PXRMEXPR",$J,"SRC",2)="From: "_$P(^VA(200,DUZ,0),U,1)_" at "_$P(LOC,U,2)
"RTN","PXRMEXPR",182,0)
 S ^TMP("PXRMEXPR",$J,"SRC",3)="Date: "_$$FMTE^XLFDT($$NOW^XLFDT,"5D")
"RTN","PXRMEXPR",183,0)
 S ^TMP("PXRMEXPR",$J,"SRC",4)=" "
"RTN","PXRMEXPR",184,0)
 S ^TMP("PXRMEXPR",$J,"SRC",5)=" "
"RTN","PXRMEXPR",185,0)
 Q
"RTN","PXRMEXPR",186,0)
 ;
"RTN","PXRMEXPU")
0^52^B17412564
"RTN","PXRMEXPU",1,0)
PXRMEXPU ;SLC/PKR - Utilities for packing and unpacking reminder definitions to a host file. ;03/16/1999
"RTN","PXRMEXPU",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMEXPU",3,0)
 ;======================================================================
"RTN","PXRMEXPU",4,0)
CONTOFDA(LFA,FDA) ;Convert the array LFA, which has indices returned
"RTN","PXRMEXPU",5,0)
 ;by GETS^DIQ to the FDA form required by UPDATE^DIE.
"RTN","PXRMEXPU",6,0)
 ;Note column numbering goes from right to left.
"RTN","PXRMEXPU",7,0)
 N CFI,CNT,ICA,IENS,IND,INDEX,FILENUM
"RTN","PXRMEXPU",8,0)
 N LFHA,LOOP,NASC,NUM,NUMFILES,PFI,TEMP,UP
"RTN","PXRMEXPU",9,0)
 ;Build the list of unique indices.
"RTN","PXRMEXPU",10,0)
 S FILENUM=""
"RTN","PXRMEXPU",11,0)
 F  S FILENUM=$O(LFA(FILENUM)) Q:FILENUM=""  D
"RTN","PXRMEXPU",12,0)
 . S INDEX=""
"RTN","PXRMEXPU",13,0)
 . F  S INDEX=$O(LFA(FILENUM,INDEX)) Q:INDEX=""  D
"RTN","PXRMEXPU",14,0)
 .. S IENS(FILENUM,INDEX)=INDEX
"RTN","PXRMEXPU",15,0)
 ;Get the linear file hierarchy array.
"RTN","PXRMEXPU",16,0)
 S NUMFILES=$$FHA(.IENS,.LFHA)
"RTN","PXRMEXPU",17,0)
 ;Convert the IENS to the adding form.
"RTN","PXRMEXPU",18,0)
 S NUM=0
"RTN","PXRMEXPU",19,0)
 F LOOP=1:1:NUMFILES D
"RTN","PXRMEXPU",20,0)
 . S FILENUM=LFHA(LOOP)
"RTN","PXRMEXPU",21,0)
 . S NASC=$$GBLUP(FILENUM,.UP)
"RTN","PXRMEXPU",22,0)
 . S INDEX=""
"RTN","PXRMEXPU",23,0)
 . F  S INDEX=$O(IENS(FILENUM,INDEX)) Q:INDEX=""  D
"RTN","PXRMEXPU",24,0)
 .. S TEMP=IENS(FILENUM,INDEX)
"RTN","PXRMEXPU",25,0)
 .. S CNT=$L(TEMP,",")-1
"RTN","PXRMEXPU",26,0)
 .. I CNT'=NASC D  Q
"RTN","PXRMEXPU",27,0)
 ... W !,"Severe error in CONTOFDA^PXRMEXPU submit a NOIS!"
"RTN","PXRMEXPU",28,0)
 .. S CFI=$P(TEMP,",",1)
"RTN","PXRMEXPU",29,0)
 .. S PFI=$P(TEMP,",",2,NASC)
"RTN","PXRMEXPU",30,0)
 .. I '$D(ICA(FILENUM,INDEX)) D
"RTN","PXRMEXPU",31,0)
 ... S NUM=NUM+1
"RTN","PXRMEXPU",32,0)
 ... S ICA(FILENUM,INDEX)="+"_NUM_","
"RTN","PXRMEXPU",33,0)
 .. I PFI'="" D
"RTN","PXRMEXPU",34,0)
 ... S FILE=UP(FILENUM,2)
"RTN","PXRMEXPU",35,0)
 ... S PFI=PFI_","
"RTN","PXRMEXPU",36,0)
 ... S ICA(FILENUM,INDEX)=ICA(FILENUM,INDEX)_$G(IENS(FILE,PFI))
"RTN","PXRMEXPU",37,0)
 .. S IENS(FILENUM,INDEX)=ICA(FILENUM,INDEX)
"RTN","PXRMEXPU",38,0)
 ;Build the FDA.
"RTN","PXRMEXPU",39,0)
 S FILENUM=""
"RTN","PXRMEXPU",40,0)
 F  S FILENUM=$O(LFA(FILENUM)) Q:FILENUM=""  D
"RTN","PXRMEXPU",41,0)
 . S INDEX=""
"RTN","PXRMEXPU",42,0)
 . F  S INDEX=$O(LFA(FILENUM,INDEX)) Q:INDEX=""  D
"RTN","PXRMEXPU",43,0)
 .. S IND=IENS(FILENUM,INDEX)
"RTN","PXRMEXPU",44,0)
 .. S NUM=""
"RTN","PXRMEXPU",45,0)
 .. F  S NUM=$O(LFA(FILENUM,INDEX,NUM)) Q:NUM=""  D
"RTN","PXRMEXPU",46,0)
 ... S FDA(FILENUM,IND,NUM)=LFA(FILENUM,INDEX,NUM)
"RTN","PXRMEXPU",47,0)
 Q
"RTN","PXRMEXPU",48,0)
 ;
"RTN","PXRMEXPU",49,0)
 ;======================================================================
"RTN","PXRMEXPU",50,0)
FHA(IENS,LFHA) ;Build the file hierarchy. The first index of IENS is the
"RTN","PXRMEXPU",51,0)
 ;file number.
"RTN","PXRMEXPU",52,0)
 N IND,FHA,FILE,FNUM,LEVEL,NUM,TOP,UP
"RTN","PXRMEXPU",53,0)
 S FNUM=""
"RTN","PXRMEXPU",54,0)
 F  S FNUM=$O(IENS(FNUM)) Q:FNUM=""  D
"RTN","PXRMEXPU",55,0)
 . S NASC=$$GBLUP(FNUM,.UP)
"RTN","PXRMEXPU",56,0)
 . S TOP=UP(FNUM,NASC)
"RTN","PXRMEXPU",57,0)
 . S LEVEL=0
"RTN","PXRMEXPU",58,0)
 . F IND=NASC:-1:1 D
"RTN","PXRMEXPU",59,0)
 .. S LEVEL=LEVEL+1
"RTN","PXRMEXPU",60,0)
 .. S FILE=UP(FNUM,IND)
"RTN","PXRMEXPU",61,0)
 .. S FHA(TOP,LEVEL,FILE)=""
"RTN","PXRMEXPU",62,0)
 ;Build the linear file hirearchy array. This is just a list of the
"RTN","PXRMEXPU",63,0)
 ;file numbers in the correct order.
"RTN","PXRMEXPU",64,0)
 S NUM=0
"RTN","PXRMEXPU",65,0)
 S TOP=""
"RTN","PXRMEXPU",66,0)
 F  S TOP=$O(FHA(TOP)) Q:TOP=""  D
"RTN","PXRMEXPU",67,0)
 . S LEVEL=0
"RTN","PXRMEXPU",68,0)
 . F  S LEVEL=$O(FHA(TOP,LEVEL)) Q:LEVEL=""  D
"RTN","PXRMEXPU",69,0)
 .. S FILENUM=""
"RTN","PXRMEXPU",70,0)
 .. F  S FILENUM=$O(FHA(TOP,LEVEL,FILENUM)) Q:FILENUM=""  D
"RTN","PXRMEXPU",71,0)
 ... S NUM=NUM+1
"RTN","PXRMEXPU",72,0)
 ... S LFHA(NUM)=FILENUM
"RTN","PXRMEXPU",73,0)
 Q NUM
"RTN","PXRMEXPU",74,0)
 ;
"RTN","PXRMEXPU",75,0)
 ;======================================================================
"RTN","PXRMEXPU",76,0)
GBLUP(FILENUM,ARRAY) ;Return all the ascendant files to file FILENUM in
"RTN","PXRMEXPU",77,0)
 ;ARRAY. The data is returned in ARRAY as follows:
"RTN","PXRMEXPU",78,0)
 ;ARRAY(FILENUM,1)=FILENUM
"RTN","PXRMEXPU",79,0)
 ;ARRAY(FILENUM,2)=FILENUM(I-1)
"RTN","PXRMEXPU",80,0)
 ;...
"RTN","PXRMEXPU",81,0)
 ;ARRAY(FILENUM,N)=FILENUM(I-N)  this is the top level file.
"RTN","PXRMEXPU",82,0)
 ;
"RTN","PXRMEXPU",83,0)
 N FILE,NASC
"RTN","PXRMEXPU",84,0)
 K ARRAY
"RTN","PXRMEXPU",85,0)
 S NASC=0
"RTN","PXRMEXPU",86,0)
 S ARRAY(FILENUM,1)=FILENUM
"RTN","PXRMEXPU",87,0)
 S FILE=FILENUM
"RTN","PXRMEXPU",88,0)
 F  Q:FILE=""  D
"RTN","PXRMEXPU",89,0)
 . S NASC=NASC+1
"RTN","PXRMEXPU",90,0)
 . S ARRAY(FILENUM,NASC)=FILE
"RTN","PXRMEXPU",91,0)
 . S FILE=$G(^DD(FILE,0,"UP"))
"RTN","PXRMEXPU",92,0)
 Q NASC
"RTN","PXRMEXPU",93,0)
 ;
"RTN","PXRMEXPU",94,0)
 ;======================================================================
"RTN","PXRMEXPU",95,0)
GETREM(ACTION) ;Get the reminder to save.
"RTN","PXRMEXPU",96,0)
 N DIC,Y
"RTN","PXRMEXPU",97,0)
 S DIC="^PXD(811.9,"
"RTN","PXRMEXPU",98,0)
 S DIC(0)="AEMQ"
"RTN","PXRMEXPU",99,0)
 S DIC("A")="Select Reminder Definition to "_ACTION_": "
"RTN","PXRMEXPU",100,0)
 D ^DIC
"RTN","PXRMEXPU",101,0)
 G:Y=-1 END
"RTN","PXRMEXPU",102,0)
END ;
"RTN","PXRMEXPU",103,0)
 Q Y
"RTN","PXRMEXPU",104,0)
 ;
"RTN","PXRMEXPU",105,0)
 ;======================================================================
"RTN","PXRMEXPU",106,0)
INDDAT(NAME,I1,I2,I3,I4,I5,I6) ;Return the indices in the first piece and the
"RTN","PXRMEXPU",107,0)
 ;actual data in the second. We use "~" as the separator since data
"RTN","PXRMEXPU",108,0)
 ;may contain "^".
"RTN","PXRMEXPU",109,0)
 N DATA,INDS,WPLCNT
"RTN","PXRMEXPU",110,0)
 S INDS=I1
"RTN","PXRMEXPU",111,0)
 I $D(I2) S INDS=INDS_";"_I2
"RTN","PXRMEXPU",112,0)
 E  S DATA=^TMP("PXRMEXPR",$J,NAME,I1) G RET
"RTN","PXRMEXPU",113,0)
 ;
"RTN","PXRMEXPU",114,0)
 I $D(I3) S INDS=INDS_";"_I3
"RTN","PXRMEXPU",115,0)
 E  S DATA=^TMP("PXRMEXPR",$J,NAME,I1,I2) G RET
"RTN","PXRMEXPU",116,0)
 ;
"RTN","PXRMEXPU",117,0)
 I $D(I4) S INDS=INDS_";"_I4
"RTN","PXRMEXPU",118,0)
 E  S DATA=^TMP("PXRMEXPR",$J,NAME,I1,I2,I3) G RET
"RTN","PXRMEXPU",119,0)
 ;
"RTN","PXRMEXPU",120,0)
 I $D(I5) S INDS=INDS_";"_I5
"RTN","PXRMEXPU",121,0)
 E  S DATA=^TMP("PXRMEXPR",$J,NAME,I1,I2,I3,I4) G RET
"RTN","PXRMEXPU",122,0)
 ;
"RTN","PXRMEXPU",123,0)
 I $D(I6) D
"RTN","PXRMEXPU",124,0)
 . S INDS=INDS_";"_I6
"RTN","PXRMEXPU",125,0)
 . S DATA=^TMP("PXRMEXPR",$J,NAME,I1,I2,I3,I4,I5,I6)
"RTN","PXRMEXPU",126,0)
 E  S DATA=^TMP("PXRMEXPR",$J,NAME,I1,I2,I3,I4,I5)
"RTN","PXRMEXPU",127,0)
 ;Check for word-processing fields.
"RTN","PXRMEXPU",128,0)
RET I $E(DATA,1,5)="^TMP(" D
"RTN","PXRMEXPU",129,0)
 . I DATA=@DATA D
"RTN","PXRMEXPU",130,0)
 .;Count the number of lines in the word processing node.
"RTN","PXRMEXPU",131,0)
 . S WPLCNT=$O(^TMP("PXRMEXPR",$J,IND1,IND2,IND3,IND4,IND5,IND6),-1)
"RTN","PXRMEXPU",132,0)
 . S DATA="WP-start"_"~"_WPLCNT
"RTN","PXRMEXPU",133,0)
 Q INDS_"~"_DATA
"RTN","PXRMEXPU",134,0)
 ;
"RTN","PXRMEXPU",135,0)
 ;======================================================================
"RTN","PXRMEXPU",136,0)
UPDIND(DIQIND,LIENS) ;Replace the index returned by GETS^DIQ with
"RTN","PXRMEXPU",137,0)
 ;the form required by UPDATE^DIE.
"RTN","PXRMEXPU",138,0)
 ;
"RTN","PXRMEXPU",139,0)
 N LSEQN,NUMIENS,NUMIND,NUMTOGET,UPDIND
"RTN","PXRMEXPU",140,0)
 ;
"RTN","PXRMEXPU",141,0)
 ;Determine the number of indices in DIQIND.
"RTN","PXRMEXPU",142,0)
 S NUMIND=$L(DIQIND,",")-1
"RTN","PXRMEXPU",143,0)
 S NUMTOGET=NUMIND-1
"RTN","PXRMEXPU",144,0)
 S NUMIENS=$L(LIENS,",")
"RTN","PXRMEXPU",145,0)
 S LSEQN=+LIENS+1
"RTN","PXRMEXPU",146,0)
 S UPDIND="+"_LSEQN_","
"RTN","PXRMEXPU",147,0)
 I NUMTOGET>0 S UPDIND=UPDIND_$P(LIENS,",",(NUMIENS-NUMTOGET),NUMIENS)
"RTN","PXRMEXPU",148,0)
 S LIENS=UPDIND
"RTN","PXRMEXPU",149,0)
 Q UPDIND
"RTN","PXRMEXPU",150,0)
 ;
"RTN","PXRMEXSR")
0^53^B16558240
"RTN","PXRMEXSR",1,0)
PXRMEXSR ;SLC/PKR -Clinical Reminders main driver for saving reminder definitions to a host file. ;04/10/2000
"RTN","PXRMEXSR",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMEXSR",3,0)
 ;======================================================================
"RTN","PXRMEXSR",4,0)
EN ;Get the reminder to save.
"RTN","PXRMEXSR",5,0)
 W !,"Creation of packed reminders has been temporarily disabled."
"RTN","PXRMEXSR",6,0)
 H 2
"RTN","PXRMEXSR",7,0)
 Q
"RTN","PXRMEXSR",8,0)
 N RTM
"RTN","PXRMEXSR",9,0)
 S RTM=$$GETREM^PXRMEXPU("save")
"RTN","PXRMEXSR",10,0)
 I RTM=-1 Q
"RTN","PXRMEXSR",11,0)
 ;
"RTN","PXRMEXSR",12,0)
 ;Get the name of a host file to save it in.
"RTN","PXRMEXSR",13,0)
 N FILE,HFNAME,PATH
"RTN","PXRMEXSR",14,0)
GETHF ;As a default set the path to the current directory.
"RTN","PXRMEXSR",15,0)
 S PATH=$$PWD^%ZISH
"RTN","PXRMEXSR",16,0)
 N DIR,X,Y
"RTN","PXRMEXSR",17,0)
 K DIRUT,DTOUT,DUOUT
"RTN","PXRMEXSR",18,0)
 S DIR(0)="FAU"_U_"1:32"
"RTN","PXRMEXSR",19,0)
 S DIR("A")="Enter a path: "
"RTN","PXRMEXSR",20,0)
 S DIR("B")=PATH
"RTN","PXRMEXSR",21,0)
 S DIR("?",1)="A complete host file consists of a path, file name, and extension"
"RTN","PXRMEXSR",22,0)
 S DIR("?")="The default path is "_PATH
"RTN","PXRMEXSR",23,0)
 D ^DIR K DIR
"RTN","PXRMEXSR",24,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXSR",25,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMEXSR",26,0)
 S PATH=Y
"RTN","PXRMEXSR",27,0)
 K DIRUT,DTOUT,DUOUT
"RTN","PXRMEXSR",28,0)
 S DIR(0)="FAU"_U_"1:32"
"RTN","PXRMEXSR",29,0)
 S DIR("A")="Enter a file name: "
"RTN","PXRMEXSR",30,0)
 S DIR("?",1)="A file name has the format NAME.EXTENSION, the default extension is PRD"
"RTN","PXRMEXSR",31,0)
 S DIR("?",2)="Therefore if you type in FILE for the file name, the host file will be"
"RTN","PXRMEXSR",32,0)
 S DIR("?")="  "_PATH_"FILE.PRD"
"RTN","PXRMEXSR",33,0)
 D ^DIR K DIR
"RTN","PXRMEXSR",34,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXSR",35,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMEXSR",36,0)
 S FILE=Y
"RTN","PXRMEXSR",37,0)
 ;Add the default extension if there isn't one.
"RTN","PXRMEXSR",38,0)
 I FILE'["." S FILE=FILE_".PRD"
"RTN","PXRMEXSR",39,0)
 S HFNAME=PATH_FILE
"RTN","PXRMEXSR",40,0)
 K DIRUT,DTOUT,DUOUT
"RTN","PXRMEXSR",41,0)
 S DIR(0)="YAO"
"RTN","PXRMEXSR",42,0)
 S DIR("A")="Will save reminder to host file "_HFNAME_"?: "
"RTN","PXRMEXSR",43,0)
 S DIR("B")="Y"
"RTN","PXRMEXSR",44,0)
 D ^DIR K DIR
"RTN","PXRMEXSR",45,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMEXSR",46,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMEXSR",47,0)
 I 'Y G GETHF
"RTN","PXRMEXSR",48,0)
 ;
"RTN","PXRMEXSR",49,0)
 ;Create the packed reminder definition. It will be in ^TMP(PXRMEXPR,$J
"RTN","PXRMEXSR",50,0)
 D PACK^PXRMEXPR(RTM)
"RTN","PXRMEXSR",51,0)
 ;
"RTN","PXRMEXSR",52,0)
 ;Save the packed reminder definition.
"RTN","PXRMEXSR",53,0)
 D SAVEREM(RTM,PATH,FILE,HFNAME)
"RTN","PXRMEXSR",54,0)
 Q
"RTN","PXRMEXSR",55,0)
 ;
"RTN","PXRMEXSR",56,0)
 ;======================================================================
"RTN","PXRMEXSR",57,0)
LOADHF(HFNAME) ;Load the ^TMP("PXRMEXPR",$J array into another temporary
"RTN","PXRMEXSR",58,0)
 ;global so it can be saved as a host file in the proper format.
"RTN","PXRMEXSR",59,0)
 N DTEST,IND1,IND2,IND3,IND4,IND5,IND6,LC,TEMP
"RTN","PXRMEXSR",60,0)
 S LC=1
"RTN","PXRMEXSR",61,0)
 S ^TMP("PXRMEXHF",$J,LC,0)="**PACKED REMINDER DEFINITION**"
"RTN","PXRMEXSR",62,0)
 F IND1="TEXT","TARGET","CF","HF","TAX","RDEF" D
"RTN","PXRMEXSR",63,0)
 . I '$D(^TMP("PXRMEXPR",$J,IND1)) Q
"RTN","PXRMEXSR",64,0)
 . S LC=LC+1
"RTN","PXRMEXSR",65,0)
 . S ^TMP("PXRMEXHF",$J,LC,0)="**START**"_U_IND1
"RTN","PXRMEXSR",66,0)
 . S IND2=""
"RTN","PXRMEXSR",67,0)
 . F  S IND2=$O(^TMP("PXRMEXPR",$J,IND1,IND2)) Q:IND2=""  D
"RTN","PXRMEXSR",68,0)
 .. S IND3=""
"RTN","PXRMEXSR",69,0)
 .. F  S IND3=$O(^TMP("PXRMEXPR",$J,IND1,IND2,IND3)) Q:IND3=""  D
"RTN","PXRMEXSR",70,0)
 ... I $D(^TMP("PXRMEXPR",$J,IND1,IND2,IND3))#10 D
"RTN","PXRMEXSR",71,0)
 .... S LC=LC+1
"RTN","PXRMEXSR",72,0)
 .... S ^TMP("PXRMEXHF",$J,LC,0)=$$INDDAT^PXRMEXPU(IND1,IND2,IND3)
"RTN","PXRMEXSR",73,0)
 ... S IND4=""
"RTN","PXRMEXSR",74,0)
 ... F  S IND4=$O(^TMP("PXRMEXPR",$J,IND1,IND2,IND3,IND4)) Q:IND4=""  D
"RTN","PXRMEXSR",75,0)
 .... I $D(^TMP("PXRMEXPR",$J,IND1,IND2,IND3,IND4))#10 D
"RTN","PXRMEXSR",76,0)
 ..... S LC=LC+1
"RTN","PXRMEXSR",77,0)
 ..... S ^TMP("PXRMEXHF",$J,LC,0)=$$INDDAT^PXRMEXPU(IND1,IND2,IND3,IND4)
"RTN","PXRMEXSR",78,0)
 .... S IND5=""
"RTN","PXRMEXSR",79,0)
 .... F  S IND5=$O(^TMP("PXRMEXPR",$J,IND1,IND2,IND3,IND4,IND5)) Q:IND5=""  D
"RTN","PXRMEXSR",80,0)
 ..... I $D(^TMP("PXRMEXPR",$J,IND1,IND2,IND3,IND4,IND5))#10 D
"RTN","PXRMEXSR",81,0)
 ...... S LC=LC+1
"RTN","PXRMEXSR",82,0)
 ...... S ^TMP("PXRMEXHF",$J,LC,0)=$$INDDAT^PXRMEXPU(IND1,IND2,IND3,IND4,IND5)
"RTN","PXRMEXSR",83,0)
 ..... S IND6=""
"RTN","PXRMEXSR",84,0)
 ..... F  S IND6=$O(^TMP("PXRMEXPR",$J,IND1,IND2,IND3,IND4,IND5,IND6)) Q:IND6=""  D
"RTN","PXRMEXSR",85,0)
 ...... S LC=LC+1
"RTN","PXRMEXSR",86,0)
 ...... S ^TMP("PXRMEXHF",$J,LC,0)=$$INDDAT^PXRMEXPU(IND1,IND2,IND3,IND4,IND5,IND6)
"RTN","PXRMEXSR",87,0)
 . S LC=LC+1
"RTN","PXRMEXSR",88,0)
 . S ^TMP("PXRMEXHF",$J,LC,0)="**END**"
"RTN","PXRMEXSR",89,0)
 W !,"Total lines in packed reminder definition = ",LC
"RTN","PXRMEXSR",90,0)
 W !,"Host file name: ",HFNAME
"RTN","PXRMEXSR",91,0)
 H 2
"RTN","PXRMEXSR",92,0)
 Q
"RTN","PXRMEXSR",93,0)
 ;
"RTN","PXRMEXSR",94,0)
 ;======================================================================
"RTN","PXRMEXSR",95,0)
SAVEREM(RTM,PATH,FILE,HFNAME) ;Save the packed reminder definition.
"RTN","PXRMEXSR",96,0)
 N RET,TEMP
"RTN","PXRMEXSR",97,0)
 ;
"RTN","PXRMEXSR",98,0)
 S VALMHDR(1)="Packed reminder def. for "_$P(RTM,U,2)
"RTN","PXRMEXSR",99,0)
 S VALMHDR(2)="saved in host file "_HFNAME
"RTN","PXRMEXSR",100,0)
 ;
"RTN","PXRMEXSR",101,0)
 ;If anything went wrong creating the packed reminder definition then
"RTN","PXRMEXSR",102,0)
 ;^TMP("PXRMEXPR",$J) will not exist. If this is the case quit.
"RTN","PXRMEXSR",103,0)
 I '$D(^TMP("PXRMEXPR",$J)) D  Q
"RTN","PXRMEXSR",104,0)
 . S VALMHDR(2)="failed it was not saved!"
"RTN","PXRMEXSR",105,0)
 ;
"RTN","PXRMEXSR",106,0)
 D LOADHF(HFNAME)
"RTN","PXRMEXSR",107,0)
 ;
"RTN","PXRMEXSR",108,0)
 ;Write the host file.
"RTN","PXRMEXSR",109,0)
 S RET=$$GTF^%ZISH($NA(^TMP("PXRMEXHF",$J,1,0)),3,PATH,FILE)
"RTN","PXRMEXSR",110,0)
 I RET=0 D
"RTN","PXRMEXSR",111,0)
 . W !,"Write to host file ",HFNAME," failed"
"RTN","PXRMEXSR",112,0)
 . S VALMHDR(2)="failed it was not saved!"
"RTN","PXRMEXSR",113,0)
 ;
"RTN","PXRMEXSR",114,0)
 ;Kill the packed reminder temps.
"RTN","PXRMEXSR",115,0)
 K ^TMP("PXRMEXHF",$J)
"RTN","PXRMEXSR",116,0)
 K ^TMP("PXRMEXPR",$J)
"RTN","PXRMEXSR",117,0)
 Q
"RTN","PXRMEXSR",118,0)
 ;
"RTN","PXRMFIND")
0^54^B12943621
"RTN","PXRMFIND",1,0)
PXRMFIND ; SLC/PJH - Edit/Inquire finding type parameters ;01/21/2000
"RTN","PXRMFIND",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMFIND",3,0)
 ;
"RTN","PXRMFIND",4,0)
START N DIC,FTYP,PXRMGTYP,PXRMHD,PXRMFIEN,PXRMFSUB,Y
"RTN","PXRMFIND",5,0)
 ;Get lists of finding types for display
"RTN","PXRMFIND",6,0)
 N DEF,DEF1,DEF2 D DEF^PXRMRUTL(.DEF,.DEF1,.DEF2)
"RTN","PXRMFIND",7,0)
SELECT ;General selection
"RTN","PXRMFIND",8,0)
 S PXRMHD="Finding Type Parameters",PXRMFIEN="",PXRMGTYP="FPAR"
"RTN","PXRMFIND",9,0)
 D START^PXRMSEL(PXRMHD,PXRMGTYP,"PXRMFIEN")
"RTN","PXRMFIND",10,0)
 ;Should return a value
"RTN","PXRMFIND",11,0)
 I PXRMFIEN D  G SELECT
"RTN","PXRMFIND",12,0)
 .;Format headings to include category name
"RTN","PXRMFIND",13,0)
 .S PXRMHD="FINDING TYPE PARAMETER NAME: "
"RTN","PXRMFIND",14,0)
 .S FTYP=$P(^PXRMD(801.45,PXRMFIEN,0),U)
"RTN","PXRMFIND",15,0)
 .I FTYP="POV" S PXRMHD=PXRMHD_FTYP_" - Diagnosis (Taxonomy)"
"RTN","PXRMFIND",16,0)
 .I FTYP="CPT" S PXRMHD=PXRMHD_FTYP_" - Procedure (Taxonomy)"
"RTN","PXRMFIND",17,0)
 .I $D(DEF2(FTYP)) S PXRMHD=PXRMHD_FTYP_" - "_DEF2(FTYP)
"RTN","PXRMFIND",18,0)
 .;Install option allows extended edit/add/delete
"RTN","PXRMFIND",19,0)
 .I $G(PXRMINST)=1 D START^PXRMGEN(PXRMHD,PXRMGTYP,PXRMFIEN) Q
"RTN","PXRMFIND",20,0)
 .;Otherwise limited edit options
"RTN","PXRMFIND",21,0)
 .F  D  Q:'PXRMFSUB
"RTN","PXRMFIND",22,0)
 ..S PXRMFSUB="" D START^PXRMFPAR(PXRMHD,PXRMFIEN)
"RTN","PXRMFIND",23,0)
 ..I PXRMFSUB D
"RTN","PXRMFIND",24,0)
 ...N X
"RTN","PXRMFIND",25,0)
 ...S X="IORESET"
"RTN","PXRMFIND",26,0)
 ...D ENDR^%ZISS
"RTN","PXRMFIND",27,0)
 ...D EDIT^PXRMGEDT(PXRMGTYP,PXRMFSUB,1)
"RTN","PXRMFIND",28,0)
END Q
"RTN","PXRMFIND",29,0)
 ;
"RTN","PXRMFIND",30,0)
 ;Called from PXRM SELECTION LIST
"RTN","PXRMFIND",31,0)
 ;-------------------------------
"RTN","PXRMFIND",32,0)
FPAR N ACNT,ADES,AIEN,ASUB,ATYP,DATA,LCT,PTXT,RDES,RDIS,RIEN,STRING,STXT,SUB
"RTN","PXRMFIND",33,0)
 S VALMCNT=0 K ^TMP("PXRMGENS",$J),^TMP("PXRMGEN",$J)
"RTN","PXRMFIND",34,0)
 S SUB=0
"RTN","PXRMFIND",35,0)
 ;Loop through all the resolution statuses
"RTN","PXRMFIND",36,0)
 F  S SUB=$O(^PXRMD(801.45,IEN,1,SUB)) Q:'SUB  D
"RTN","PXRMFIND",37,0)
 .;Get ien for resolution status
"RTN","PXRMFIND",38,0)
 .S RIEN=$P($G(^PXRMD(801.45,IEN,1,SUB,0)),U) Q:RIEN=""
"RTN","PXRMFIND",39,0)
 .;Get description
"RTN","PXRMFIND",40,0)
 .S RDES=$P($G(^PXRMD(801.9,RIEN,0)),U) I RDES="" S RDES=RIEN
"RTN","PXRMFIND",41,0)
 .;Get Prefix and suffix text
"RTN","PXRMFIND",42,0)
 .S PTXT=$E($G(^PXRMD(801.45,IEN,1,SUB,3)),1,40)
"RTN","PXRMFIND",43,0)
 .S STXT=$E($G(^PXRMD(801.45,IEN,1,SUB,4)),1,40)
"RTN","PXRMFIND",44,0)
 .;Get disabled flag
"RTN","PXRMFIND",45,0)
 .S RDIS=$P($G(^PXRMD(801.45,IEN,1,SUB,0)),U,2)
"RTN","PXRMFIND",46,0)
 .S RDIS=$S(RDIS=1:"Disabled",1:"Enabled")
"RTN","PXRMFIND",47,0)
 .;Save Resolution in alpha order
"RTN","PXRMFIND",48,0)
 .S ^TMP("PXRMGENS",$J,RDES)=SUB_U_PTXT_U_STXT_U_RDIS
"RTN","PXRMFIND",49,0)
 ;
"RTN","PXRMFIND",50,0)
 ;Put the list into the array List Manager is using.
"RTN","PXRMFIND",51,0)
 S RDES="",LCT=0
"RTN","PXRMFIND",52,0)
 S VALMCNT=0
"RTN","PXRMFIND",53,0)
 F  S RDES=$O(^TMP("PXRMGENS",$J,RDES)) Q:RDES=""  D
"RTN","PXRMFIND",54,0)
 .S DATA=$G(^TMP("PXRMGENS",$J,RDES))
"RTN","PXRMFIND",55,0)
 .S SUB=$P(DATA,U),PTXT=$P(DATA,U,2),STXT=$P(DATA,U,3),RDIS=$P(DATA,U,4)
"RTN","PXRMFIND",56,0)
 .S VALMCNT=VALMCNT+1,LCT=LCT+1
"RTN","PXRMFIND",57,0)
 .S STRING=LCT_" "_RDES_$J("",(27-$L(RDES)))_PTXT_"/"
"RTN","PXRMFIND",58,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)=STRING_$J("",71-$L(STRING))_RDIS
"RTN","PXRMFIND",59,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMFIND",60,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)=$J("",29)_"/"_STXT
"RTN","PXRMFIND",61,0)
 .S ^TMP("PXRMGEN",$J,"VALMCNT")=VALMCNT
"RTN","PXRMFIND",62,0)
 .;Then get the additional prompts/forced values
"RTN","PXRMFIND",63,0)
 .S ASUB=0,ACNT=0
"RTN","PXRMFIND",64,0)
 .F  S ASUB=$O(^PXRMD(801.45,IEN,1,SUB,5,ASUB)) Q:'ASUB  D
"RTN","PXRMFIND",65,0)
 ..;Get prompt ien
"RTN","PXRMFIND",66,0)
 ..S AIEN=$P($G(^PXRMD(801.45,IEN,1,SUB,5,ASUB,0)),U) Q:AIEN=""
"RTN","PXRMFIND",67,0)
 ..;Get description and type from dialog file
"RTN","PXRMFIND",68,0)
 ..S DATA=$G(^PXRMD(801.41,AIEN,0))
"RTN","PXRMFIND",69,0)
 ..S ADES=$P(DATA,U) I ADES="" S ADES=AIEN
"RTN","PXRMFIND",70,0)
 ..S ATYP="" I $P(DATA,U,4)="F" S ATYP=" (forced value)"
"RTN","PXRMFIND",71,0)
 ..S VALMCNT=VALMCNT+1,ACNT=ACNT+1
"RTN","PXRMFIND",72,0)
 ..S ^TMP("PXRMGEN",$J,VALMCNT,0)=$J("",29)_ACNT_"] "_ADES_ATYP
"RTN","PXRMFIND",73,0)
 .;Final linefeed
"RTN","PXRMFIND",74,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMFIND",75,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMFIND",76,0)
 .S ^TMP("PXRMGEN",$J,"VALMCNT")=VALMCNT
"RTN","PXRMFIND",77,0)
 K ^TMP("PXRMGENS",$J)
"RTN","PXRMFIND",78,0)
 ;Create headings
"RTN","PXRMFIND",79,0)
 D CHGCAP^VALM("HEADER1","Resolution Status")
"RTN","PXRMFIND",80,0)
 D CHGCAP^VALM("HEADER2","Prefix//Suffix & Prompts/Values/Actions")
"RTN","PXRMFIND",81,0)
 D CHGCAP^VALM("HEADER3","Status")
"RTN","PXRMFIND",82,0)
 Q
"RTN","PXRMFIP")
0^55^B34790458
"RTN","PXRMFIP",1,0)
PXRMFIP ; SLC/PJH - Edit/Inquire Finding Item Parameters ;03/09/2000
"RTN","PXRMFIP",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMFIP",3,0)
 ;
"RTN","PXRMFIP",4,0)
 ;General selection
"RTN","PXRMFIP",5,0)
START N DIC,PXRMGTYP,PXRMHD,Y
"RTN","PXRMFIP",6,0)
SELECT ;Get lists of finding types for display
"RTN","PXRMFIP",7,0)
 N DEF,DEF1,DEF2 D DEF^PXRMRUTL(.DEF,.DEF1,.DEF2)
"RTN","PXRMFIP",8,0)
 S PXRMHD="Finding Item Parameters",PXRMFIP="",PXRMGTYP="FIP"
"RTN","PXRMFIP",9,0)
 D START^PXRMSEL(PXRMHD,PXRMGTYP,"PXRMFIP")
"RTN","PXRMFIP",10,0)
 ;Should return a value
"RTN","PXRMFIP",11,0)
 I PXRMFIP D  G SELECT
"RTN","PXRMFIP",12,0)
 .S PXRMHD="FINDING ITEM PARAMETER NAME:"
"RTN","PXRMFIP",13,0)
 .;Listman option
"RTN","PXRMFIP",14,0)
 .D START^PXRMGEN(PXRMHD,PXRMGTYP,PXRMFIP)
"RTN","PXRMFIP",15,0)
 ;
"RTN","PXRMFIP",16,0)
END Q
"RTN","PXRMFIP",17,0)
 ;
"RTN","PXRMFIP",18,0)
 ;List all finding item parameters (for protocol PXRM SELECTION LIST)
"RTN","PXRMFIP",19,0)
 ;--------------------------------
"RTN","PXRMFIP",20,0)
ALL N BY,DC,DHD,DIC,FLDS,FR,L,LOGIC,NOW,TO,Y
"RTN","PXRMFIP",21,0)
 S Y=1
"RTN","PXRMFIP",22,0)
 D SET
"RTN","PXRMFIP",23,0)
 S DIC="^PXRMD(801.43,"
"RTN","PXRMFIP",24,0)
 S BY=".01"
"RTN","PXRMFIP",25,0)
 S FR=""
"RTN","PXRMFIP",26,0)
 S TO=""
"RTN","PXRMFIP",27,0)
 S DHD="W ?0 D HED^PXRMFIP"
"RTN","PXRMFIP",28,0)
 D DISP
"RTN","PXRMFIP",29,0)
 Q
"RTN","PXRMFIP",30,0)
 ;
"RTN","PXRMFIP",31,0)
 ;Inquire/Print Option (for protocol PXRM GENERAL INQUIRE/PRINT)
"RTN","PXRMFIP",32,0)
 ;--------------------
"RTN","PXRMFIP",33,0)
INQ(Y) N BY,DC,DHD,DIC,FLDS,FR,L,LOGIC,NOW,TO
"RTN","PXRMFIP",34,0)
 S DIC="^PXRMD(801.43,"
"RTN","PXRMFIP",35,0)
 S DIC(0)="AEMQ"
"RTN","PXRMFIP",36,0)
 D SET
"RTN","PXRMFIP",37,0)
 D DISP
"RTN","PXRMFIP",38,0)
 Q
"RTN","PXRMFIP",39,0)
 ;
"RTN","PXRMFIP",40,0)
 ;Display Header (see DHD variable)
"RTN","PXRMFIP",41,0)
 ;--------------
"RTN","PXRMFIP",42,0)
HED N TEMP,TEXTLEN,TEXTHED,TEXTUND
"RTN","PXRMFIP",43,0)
 S TEXTHED="FINDING ITEM PARAMETER LIST"
"RTN","PXRMFIP",44,0)
 S TEXTUND=$TR($J("",IOM)," ","-")
"RTN","PXRMFIP",45,0)
 S TEMP=NOW_"  Page "_DC
"RTN","PXRMFIP",46,0)
 S TEXTLEN=$L(TEMP)
"RTN","PXRMFIP",47,0)
 W TEXTHED
"RTN","PXRMFIP",48,0)
 W ?(IOM-TEXTLEN),TEMP
"RTN","PXRMFIP",49,0)
 W !,TEXTUND,!!
"RTN","PXRMFIP",50,0)
 Q
"RTN","PXRMFIP",51,0)
 ;
"RTN","PXRMFIP",52,0)
 ;DISPLAY (Display from FLDS array)
"RTN","PXRMFIP",53,0)
 ;-------
"RTN","PXRMFIP",54,0)
DISP S L=0,FLDS="[PXRM FINDING ITEM PARAMETERS]"
"RTN","PXRMFIP",55,0)
 D EN1^DIP
"RTN","PXRMFIP",56,0)
 Q
"RTN","PXRMFIP",57,0)
 ;
"RTN","PXRMFIP",58,0)
SET ;Setup all the variables
"RTN","PXRMFIP",59,0)
 ; Set Date for Header
"RTN","PXRMFIP",60,0)
 S NOW=$$NOW^XLFDT
"RTN","PXRMFIP",61,0)
 S NOW=$$FMTE^XLFDT(NOW,"1P")
"RTN","PXRMFIP",62,0)
 ;
"RTN","PXRMFIP",63,0)
 ;These variables need to be setup every time because DIP kills them.
"RTN","PXRMFIP",64,0)
 S BY="NUMBER"
"RTN","PXRMFIP",65,0)
 S (FR,TO)=+$P(Y,U,1)
"RTN","PXRMFIP",66,0)
 S DHD="W ?0 D HED^PXRMFIP"
"RTN","PXRMFIP",67,0)
 ;
"RTN","PXRMFIP",68,0)
 Q
"RTN","PXRMFIP",69,0)
 ;
"RTN","PXRMFIP",70,0)
 ;Build display for selected finding item parametr - Called from PXRMGEN
"RTN","PXRMFIP",71,0)
 ;----------------------------------------------------------------------
"RTN","PXRMFIP",72,0)
FIP(PXRMFIP) ;
"RTN","PXRMFIP",73,0)
 N DATA,DDIS,DNAM,DIEN,DHED,DTYP,FDES,FDIS,FITEM,FGLOB,FLIT,FSUB,FTYP
"RTN","PXRMFIP",74,0)
 N HED1,HED2,LCT,SUB
"RTN","PXRMFIP",75,0)
 S VALMCNT=0 K ^TMP("PXRMGENS",$J),^TMP("PXRMGEN",$J)
"RTN","PXRMFIP",76,0)
 ;Format headings to include finding item parameter name
"RTN","PXRMFIP",77,0)
 S DATA=$G(^PXRMD(801.43,PXRMFIP,0)),FDES=$P(DATA,U),FDIS=$P(DATA,U,3)
"RTN","PXRMFIP",78,0)
 S HEADER=PXRMHD_" "_FDES_"  ("_$S(FDIS:"DISABLED",1:"ENABLED")_")"
"RTN","PXRMFIP",79,0)
 ;Dialog ien
"RTN","PXRMFIP",80,0)
 S DATA=$G(^PXRMD(801.43,PXRMFIP,0)),DIEN=$P(DATA,U,4)
"RTN","PXRMFIP",81,0)
 ;Finding Item
"RTN","PXRMFIP",82,0)
 S FITEM=$P(DATA,U,2),FTYP=$P(FITEM,";",2),FSUB=$P(FITEM,";")
"RTN","PXRMFIP",83,0)
 S FLIT="??",FDES=$P(DATA,U)
"RTN","PXRMFIP",84,0)
 I FTYP]"" S FTYP=$G(DEF1(FTYP)) S:FTYP="" FTYP="??"
"RTN","PXRMFIP",85,0)
 I FSUB,FTYP'="??" D
"RTN","PXRMFIP",86,0)
 .S FLIT=FTYP_"("_FSUB_")",FGLOB=U_$P(FITEM,";",2)_FSUB_",0)"
"RTN","PXRMFIP",87,0)
 .S FDES=$P($G(@FGLOB),U) I FDES="" S FDES="??"
"RTN","PXRMFIP",88,0)
 S HED1="Finding Type: "_FLIT
"RTN","PXRMFIP",89,0)
 S HED2="Finding Item: "_FDES
"RTN","PXRMFIP",90,0)
 ;Dialog details 
"RTN","PXRMFIP",91,0)
 I DIEN S DATA=$G(^PXRMD(801.41,DIEN,0))
"RTN","PXRMFIP",92,0)
 ;Unknown pointer
"RTN","PXRMFIP",93,0)
 I ('DIEN)!(DATA="") D  Q
"RTN","PXRMFIP",94,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMFIP",95,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)="Bad Pointer to Dialog File"
"RTN","PXRMFIP",96,0)
 .S ^TMP("PXRMGEN",$J,"VALMCNT")=VALMCNT
"RTN","PXRMFIP",97,0)
 ;Dialog type, name and disabled flag
"RTN","PXRMFIP",98,0)
 S DTYP=$P(DATA,U,4)
"RTN","PXRMFIP",99,0)
 S DHED=$S(DTYP="G":"Group",DTYP="E":"Element",1:"??")
"RTN","PXRMFIP",100,0)
 ;
"RTN","PXRMFIP",101,0)
 ;Dialog Element Details
"RTN","PXRMFIP",102,0)
 I DTYP="E" D ELEMENT(DIEN,"")
"RTN","PXRMFIP",103,0)
 ;
"RTN","PXRMFIP",104,0)
 ;Dialog Group Details
"RTN","PXRMFIP",105,0)
 I DTYP="G" D
"RTN","PXRMFIP",106,0)
 .S DDIS=$P(DATA,U,3),DNAM=$P(DATA,U)
"RTN","PXRMFIP",107,0)
 .S DNAM=DNAM_"  ("_$S(DDIS:"DISABLED",1:"ENABLED")_")"
"RTN","PXRMFIP",108,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMFIP",109,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMFIP",110,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMFIP",111,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)="Dialog Group: "_DNAM
"RTN","PXRMFIP",112,0)
 .S ^TMP("PXRMGEN",$J,"VALMCNT")=VALMCNT
"RTN","PXRMFIP",113,0)
 .;
"RTN","PXRMFIP",114,0)
 .N DSEQ,EIEN,SUB S SUB=0
"RTN","PXRMFIP",115,0)
 .;Loop through group for elements
"RTN","PXRMFIP",116,0)
 .F  S SUB=$O(^PXRMD(801.41,DIEN,10,SUB)) Q:'SUB  D
"RTN","PXRMFIP",117,0)
 ..S DATA=$G(^PXRMD(801.41,DIEN,10,SUB,0)) Q:DATA=""
"RTN","PXRMFIP",118,0)
 ..S DSEQ=$P(DATA,U) Q:'DSEQ  S EIEN=$P(DATA,U,2) Q:'EIEN
"RTN","PXRMFIP",119,0)
 ..;Save dialog elements in sequence order
"RTN","PXRMFIP",120,0)
 ..S ^TMP("PXRMGENS",$J,DSEQ)=EIEN
"RTN","PXRMFIP",121,0)
 .;
"RTN","PXRMFIP",122,0)
 .;Put the list into the array List Manager is using.
"RTN","PXRMFIP",123,0)
 .S DSEQ="",LCT=0
"RTN","PXRMFIP",124,0)
 .F  S DSEQ=$O(^TMP("PXRMGENS",$J,DSEQ)) Q:DSEQ=""  D
"RTN","PXRMFIP",125,0)
 ..S EIEN=$G(^TMP("PXRMGENS",$J,DSEQ)) Q:'EIEN
"RTN","PXRMFIP",126,0)
 ..D ELEMENT(EIEN,DSEQ)
"RTN","PXRMFIP",127,0)
 .;Final linefeed
"RTN","PXRMFIP",128,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMFIP",129,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMFIP",130,0)
 .S ^TMP("PXRMGEN",$J,"VALMCNT")=VALMCNT
"RTN","PXRMFIP",131,0)
 ;
"RTN","PXRMFIP",132,0)
 K ^TMP("PXRMGENS",$J)
"RTN","PXRMFIP",133,0)
 ;Create headings
"RTN","PXRMFIP",134,0)
 D CHGCAP^VALM("HEADER1",HED1)
"RTN","PXRMFIP",135,0)
 D CHGCAP^VALM("HEADER2",HED2)
"RTN","PXRMFIP",136,0)
 D CHGCAP^VALM("HEADER3","")
"RTN","PXRMFIP",137,0)
 Q
"RTN","PXRMFIP",138,0)
 ;
"RTN","PXRMFIP",139,0)
 ;Dialog Element Details
"RTN","PXRMFIP",140,0)
 ;----------------------
"RTN","PXRMFIP",141,0)
ELEMENT(DIEN,DSEQ) ;
"RTN","PXRMFIP",142,0)
 N DATA,DNAM,DDIS,DTXT,TSUB,TXT
"RTN","PXRMFIP",143,0)
 S DATA=$G(^PXRMD(801.41,DIEN,0)) Q:DATA=""
"RTN","PXRMFIP",144,0)
 S DDIS=$P(DATA,U,3),DNAM=$P(DATA,U)
"RTN","PXRMFIP",145,0)
 S DNAM=DNAM_"  ("_$S(DDIS:"DISABLED",1:"ENABLED")_")"
"RTN","PXRMFIP",146,0)
 S TXT="Dialog Element: "_DNAM
"RTN","PXRMFIP",147,0)
 I DSEQ S TXT=$J(DSEQ,2)_") "_TXT
"RTN","PXRMFIP",148,0)
 I 'DSEQ S TXT="    "_TXT
"RTN","PXRMFIP",149,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMFIP",150,0)
 S ^TMP("PXRMGEN",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMFIP",151,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMFIP",152,0)
 S ^TMP("PXRMGEN",$J,VALMCNT,0)=TXT
"RTN","PXRMFIP",153,0)
 S ^TMP("PXRMGEN",$J,"VALMCNT")=VALMCNT
"RTN","PXRMFIP",154,0)
 ;Dialog Text
"RTN","PXRMFIP",155,0)
 S TSUB=0,TXT="    Dialog Text: "
"RTN","PXRMFIP",156,0)
 F  S TSUB=$O(^PXRMD(801.41,DIEN,25,TSUB)) Q:'TSUB  D
"RTN","PXRMFIP",157,0)
 .S DTXT=$G(^PXRMD(801.41,DIEN,25,TSUB,0))
"RTN","PXRMFIP",158,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMFIP",159,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)=TXT_DTXT
"RTN","PXRMFIP",160,0)
 .S ^TMP("PXRMGEN",$J,"VALMCNT")=VALMCNT,TXT=$J("",17)
"RTN","PXRMFIP",161,0)
 ;Additional prompts/forced values
"RTN","PXRMFIP",162,0)
 N ACNT,ADES,AIEN,ASUB,ATYP,DATA
"RTN","PXRMFIP",163,0)
 S ASUB=0,ACNT=0,TXT="    Additional Prompts: "
"RTN","PXRMFIP",164,0)
 F  S ASUB=$O(^PXRMD(801.41,DIEN,10,ASUB)) Q:'ASUB  D
"RTN","PXRMFIP",165,0)
 .;Get prompt ien
"RTN","PXRMFIP",166,0)
 .S AIEN=$P($G(^PXRMD(801.41,DIEN,10,ASUB,0)),U,2) Q:AIEN=""
"RTN","PXRMFIP",167,0)
 .;Get description and type from dialog file
"RTN","PXRMFIP",168,0)
 .S DATA=$G(^PXRMD(801.41,AIEN,0))
"RTN","PXRMFIP",169,0)
 .S ADES=$P(DATA,U) I ADES="" S ADES=AIEN
"RTN","PXRMFIP",170,0)
 .S ATYP="" I $P(DATA,U,4)="F" S ATYP=" (forced value)"
"RTN","PXRMFIP",171,0)
 .S VALMCNT=VALMCNT+1,ACNT=ACNT+1
"RTN","PXRMFIP",172,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)=TXT_ADES_ATYP,TXT=$J("",24)
"RTN","PXRMFIP",173,0)
 .S ^TMP("PXRMGEN",$J,"VALMCNT")=VALMCNT
"RTN","PXRMFIP",174,0)
 I ACNT=0 D
"RTN","PXRMFIP",175,0)
 .S VALMCNT=VALMCNT+1,ACNT=ACNT+1
"RTN","PXRMFIP",176,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)=TXT_"*NONE*"
"RTN","PXRMFIP",177,0)
 .S ^TMP("PXRMGEN",$J,"VALMCNT")=VALMCNT
"RTN","PXRMFIP",178,0)
 Q
"RTN","PXRMFLST")
0^56^B4258469
"RTN","PXRMFLST",1,0)
PXRMFLST ; SLC/PJH - List Resolution Statuses ;03/09/2000
"RTN","PXRMFLST",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMFLST",3,0)
 ;
"RTN","PXRMFLST",4,0)
 ;List selected finding type parameter
"RTN","PXRMFLST",5,0)
 ;------------------------------------
"RTN","PXRMFLST",6,0)
START N BY,DC,DHD,DIC,FLDS,FR,L,LOGIC,MODE,NOW,TO,Y
"RTN","PXRMFLST",7,0)
 ;Get lists of finding types for display
"RTN","PXRMFLST",8,0)
 N DEF,DEF1,DEF2 D DEF^PXRMRUTL(.DEF,.DEF1,.DEF2)
"RTN","PXRMFLST",9,0)
 ;
"RTN","PXRMFLST",10,0)
SELECT S MODE=""
"RTN","PXRMFLST",11,0)
 S DIC="^PXRMD(801.45,"
"RTN","PXRMFLST",12,0)
 S DIC(0)="AEMQ"
"RTN","PXRMFLST",13,0)
 S DIC("A")="Select Finding Type: "
"RTN","PXRMFLST",14,0)
 D ^DIC
"RTN","PXRMFLST",15,0)
 I Y'=-1 D  G SELECT
"RTN","PXRMFLST",16,0)
 .D SET
"RTN","PXRMFLST",17,0)
 .D DISP
"RTN","PXRMFLST",18,0)
END Q
"RTN","PXRMFLST",19,0)
 ;
"RTN","PXRMFLST",20,0)
 ;List all statuses
"RTN","PXRMFLST",21,0)
 ;-----------------
"RTN","PXRMFLST",22,0)
ALL N BY,DC,DHD,DIC,FLDS,FR,L,LOGIC,MODE,NOW,TO,Y
"RTN","PXRMFLST",23,0)
 S Y=1,MODE="GENERAL"
"RTN","PXRMFLST",24,0)
 ;Get lists of finding types for display
"RTN","PXRMFLST",25,0)
 N DEF,DEF1,DEF2 D DEF^PXRMRUTL(.DEF,.DEF1,.DEF2)
"RTN","PXRMFLST",26,0)
 ; Set Date for Header
"RTN","PXRMFLST",27,0)
 S NOW=$$NOW^XLFDT
"RTN","PXRMFLST",28,0)
 S NOW=$$FMTE^XLFDT(NOW,"1P")
"RTN","PXRMFLST",29,0)
 D SET
"RTN","PXRMFLST",30,0)
 S DIC="^PXRMD(801.45,"
"RTN","PXRMFLST",31,0)
 S BY=".01"
"RTN","PXRMFLST",32,0)
 S FR="",TO=""
"RTN","PXRMFLST",33,0)
 S DHD="W ?0 D HED^PXRMFLST"
"RTN","PXRMFLST",34,0)
 D DISP
"RTN","PXRMFLST",35,0)
 Q
"RTN","PXRMFLST",36,0)
 ;
"RTN","PXRMFLST",37,0)
 ;Inquire/Print Option (for protocol PXRM GENERAL INQUIRE/PRINT)
"RTN","PXRMFLST",38,0)
 ;--------------------
"RTN","PXRMFLST",39,0)
INQ(Y) N BY,DC,DHD,DIC,FLDS,FR,L,LOGIC,MODE,NOW,TO
"RTN","PXRMFLST",40,0)
 ;Get lists of finding types for display
"RTN","PXRMFLST",41,0)
 N DEF,DEF1,DEF2 D DEF^PXRMRUTL(.DEF,.DEF1,.DEF2)
"RTN","PXRMFLST",42,0)
 S MODE=""
"RTN","PXRMFLST",43,0)
 S DIC="^PXRMD(801.45,"
"RTN","PXRMFLST",44,0)
 S DIC(0)="AEMQ"
"RTN","PXRMFLST",45,0)
 D SET
"RTN","PXRMFLST",46,0)
 D DISP
"RTN","PXRMFLST",47,0)
 Q
"RTN","PXRMFLST",48,0)
 ;
"RTN","PXRMFLST",49,0)
HED ; Display Header (see DHD variable)
"RTN","PXRMFLST",50,0)
 N TEMP,TEXTLEN,TEXTHED,TEXTUND
"RTN","PXRMFLST",51,0)
 S TEXTHED="RESOLUTION STATUS LIST"
"RTN","PXRMFLST",52,0)
 S TEXTUND=$TR($J("",IOM)," ","-")
"RTN","PXRMFLST",53,0)
 S TEMP=NOW_"  Page "_DC
"RTN","PXRMFLST",54,0)
 S TEXTLEN=$L(TEMP)
"RTN","PXRMFLST",55,0)
 W TEXTHED
"RTN","PXRMFLST",56,0)
 W ?(IOM-TEXTLEN),TEMP
"RTN","PXRMFLST",57,0)
 W !,TEXTUND,!!
"RTN","PXRMFLST",58,0)
 Q
"RTN","PXRMFLST",59,0)
 ;
"RTN","PXRMFLST",60,0)
DISP ;DISPLAY (Display from FLDS array)
"RTN","PXRMFLST",61,0)
 S L=0,FLDS="[PXRM FINDING TYPE PARAMETERS]"
"RTN","PXRMFLST",62,0)
 D EN1^DIP
"RTN","PXRMFLST",63,0)
 Q
"RTN","PXRMFLST",64,0)
 ;
"RTN","PXRMFLST",65,0)
SET ;Setup all the variables
"RTN","PXRMFLST",66,0)
 ;
"RTN","PXRMFLST",67,0)
 ; Set Date for Header
"RTN","PXRMFLST",68,0)
 S NOW=$$NOW^XLFDT
"RTN","PXRMFLST",69,0)
 S NOW=$$FMTE^XLFDT(NOW,"1P")
"RTN","PXRMFLST",70,0)
 ;
"RTN","PXRMFLST",71,0)
 ;These variables need to be setup every time because DIP kills them.
"RTN","PXRMFLST",72,0)
 S BY="NUMBER"
"RTN","PXRMFLST",73,0)
 S (FR,TO)=+$P(Y,U,1)
"RTN","PXRMFLST",74,0)
 S DHD="W ?0 D HED^PXRMFLST"
"RTN","PXRMFLST",75,0)
 ;
"RTN","PXRMFLST",76,0)
 Q
"RTN","PXRMFLST",77,0)
 ;
"RTN","PXRMFLST",78,0)
FDES N X S X=$P($G(^PXRMD(801.45,D0,0)),U) Q:X="" 
"RTN","PXRMFLST",79,0)
 I X="POV" W "(DIAGNOSIS)" Q
"RTN","PXRMFLST",80,0)
 I X="CPT" W "(PROCEDURE)" Q
"RTN","PXRMFLST",81,0)
 W "("_$G(DEF2(X))_")"
"RTN","PXRMFLST",82,0)
 Q
"RTN","PXRMFOUT")
0^58^B9376421
"RTN","PXRMFOUT",1,0)
PXRMFOUT ; SLC/PKR - Prepare the final reminder output. ;05/03/2000
"RTN","PXRMFOUT",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMFOUT",3,0)
 ;
"RTN","PXRMFOUT",4,0)
 ;=======================================================================
"RTN","PXRMFOUT",5,0)
FINAL(PCLOGIC,RESLOGIC,DUE,DUEDATE,RESDATE,FREQ,FIEVAL) ;
"RTN","PXRMFOUT",6,0)
 ;Produce the final output.
"RTN","PXRMFOUT",7,0)
 ; 
"RTN","PXRMFOUT",8,0)
 ;Temporarily set CMB=CM
"RTN","PXRMFOUT",9,0)
 I PXRHM=4 S PXRHM=5
"RTN","PXRMFOUT",10,0)
 ;
"RTN","PXRMFOUT",11,0)
 ;If the component is CR (Reminders Due) and the reminder is not due
"RTN","PXRMFOUT",12,0)
 ;we are done.
"RTN","PXRMFOUT",13,0)
 I (PXRHM=0)&(DUE'["DUE") Q
"RTN","PXRMFOUT",14,0)
 ;
"RTN","PXRMFOUT",15,0)
 N NOOUTPUT
"RTN","PXRMFOUT",16,0)
 S NOOUTPUT=0
"RTN","PXRMFOUT",17,0)
 ;If the reminder is N/A do the N/A part for the summary and maintenance
"RTN","PXRMFOUT",18,0)
 ;components. If the component is DUE we are done.
"RTN","PXRMFOUT",19,0)
 I ('PCLOGIC)&(PXRHM'=0) D NA(.NOOUTPUT,RESDATE)
"RTN","PXRMFOUT",20,0)
 I NOOUTPUT Q
"RTN","PXRMFOUT",21,0)
 ;
"RTN","PXRMFOUT",22,0)
 ;If the reminder is applicable produce the due information.
"RTN","PXRMFOUT",23,0)
 I PCLOGIC D DUE(DUE,DUEDATE,RESDATE,FREQ)
"RTN","PXRMFOUT",24,0)
 ;
"RTN","PXRMFOUT",25,0)
 ;Produce the clinical maintenance output.
"RTN","PXRMFOUT",26,0)
 I PXRHM=5 D OUTPUT^PXRMOPT(PCLOGIC,RESLOGIC,RESDATE,.FIEVAL)
"RTN","PXRMFOUT",27,0)
 ;
"RTN","PXRMFOUT",28,0)
 ;If there is any information stored in ^TMP("PXRHM") Health Summary
"RTN","PXRMFOUT",29,0)
 ;will not display it unless ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM) has
"RTN","PXRMFOUT",30,0)
 ;data in it.
"RTN","PXRMFOUT",31,0)
 I $D(^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM))=10 S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)=" "
"RTN","PXRMFOUT",32,0)
 Q
"RTN","PXRMFOUT",33,0)
 ;
"RTN","PXRMFOUT",34,0)
 ;=======================================================================
"RTN","PXRMFOUT",35,0)
DUE(DUE,DUEDATE,RESDATE,FREQ) ;Create the due information.
"RTN","PXRMFOUT",36,0)
 ;
"RTN","PXRMFOUT",37,0)
 N LDATE,LDATEF,TEMP,TXT
"RTN","PXRMFOUT",38,0)
 ;
"RTN","PXRMFOUT",39,0)
 I RESDATE["E" S LDATEF=+RESDATE_U_"E"
"RTN","PXRMFOUT",40,0)
 I RESDATE["X" D
"RTN","PXRMFOUT",41,0)
 . S LDATEF=+RESDATE_U_"X"
"RTN","PXRMFOUT",42,0)
 . S LDATE=0
"RTN","PXRMFOUT",43,0)
 E  S LDATE=+RESDATE
"RTN","PXRMFOUT",44,0)
 I (+RESDATE)'>0 S LDATEF="unknown"
"RTN","PXRMFOUT",45,0)
 I '$D(LDATEF) S LDATEF=LDATE
"RTN","PXRMFOUT",46,0)
 ;
"RTN","PXRMFOUT",47,0)
 ;Immunizations may be marked as contraindicated. If that is the case
"RTN","PXRMFOUT",48,0)
 ;they are never due.
"RTN","PXRMFOUT",49,0)
 I $G(^TMP(PXRMPID,$J,"CONTRAINDICATED"))=1 D  Q
"RTN","PXRMFOUT",50,0)
 . S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)="NEVER"_U_DUEDATE_U_LDATEF
"RTN","PXRMFOUT",51,0)
 ;
"RTN","PXRMFOUT",52,0)
 ;A reminder frequency of 0Y is a special case that means never show as
"RTN","PXRMFOUT",53,0)
 ;due.
"RTN","PXRMFOUT",54,0)
 I (FREQ="0Y") D  Q
"RTN","PXRMFOUT",55,0)
 . S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)="N/A"_U_U_LDATEF
"RTN","PXRMFOUT",56,0)
 ;
"RTN","PXRMFOUT",57,0)
 ;A reminder frequency of 99Y means do once in a lifetime. In this
"RTN","PXRMFOUT",58,0)
 ;case display null for the due date.
"RTN","PXRMFOUT",59,0)
 I 
"RTN","PXRMFOUT",60,0)
 I (LDATE>0)&(FREQ="99Y") D  Q
"RTN","PXRMFOUT",61,0)
 . S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)="DONE"_U_""_U_LDATEF
"RTN","PXRMFOUT",62,0)
 ;
"RTN","PXRMFOUT",63,0)
 S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)=DUE_U_DUEDATE_U_LDATEF
"RTN","PXRMFOUT",64,0)
 Q
"RTN","PXRMFOUT",65,0)
 ;
"RTN","PXRMFOUT",66,0)
 ;=======================================================================
"RTN","PXRMFOUT",67,0)
NA(NOOUTPUT,RESDATE) ;The reminder is N/A.
"RTN","PXRMFOUT",68,0)
 ;
"RTN","PXRMFOUT",69,0)
 S NOOUTPUT=1
"RTN","PXRMFOUT",70,0)
 ;
"RTN","PXRMFOUT",71,0)
 ;Get the IGNORE ON N/A information.
"RTN","PXRMFOUT",72,0)
 N IGNORE
"RTN","PXRMFOUT",73,0)
 S IGNORE=$P(^PXD(811.9,PXRMITEM,0),U,8)
"RTN","PXRMFOUT",74,0)
 ;
"RTN","PXRMFOUT",75,0)
 ;If the reminder is N/A and the ignore wildcard is set we are done.
"RTN","PXRMFOUT",76,0)
 I ($D(^TMP(PXRMPID,$J,PXRMITEM,"N/A")))&(IGNORE["*") Q
"RTN","PXRMFOUT",77,0)
 ;
"RTN","PXRMFOUT",78,0)
 ;Look for specific ignore codes.
"RTN","PXRMFOUT",79,0)
 I ($D(^TMP(PXRMPID,$J,PXRMITEM,"N/A","AGE")))&(IGNORE["A") Q
"RTN","PXRMFOUT",80,0)
 I ($D(^TMP(PXRMPID,$J,PXRMITEM,"N/A","INACTIVE")))&(IGNORE["I") Q
"RTN","PXRMFOUT",81,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"N/A","INACTIVE")) D  Q
"RTN","PXRMFOUT",82,0)
 . S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)=""
"RTN","PXRMFOUT",83,0)
 . S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM,"TXT",1)=^TMP(PXRMPID,$J,PXRMITEM,"N/A","INACTIVE")
"RTN","PXRMFOUT",84,0)
 I ($D(^TMP(PXRMPID,$J,PXRMITEM,"N/A","RACE")))&(IGNORE["R") Q
"RTN","PXRMFOUT",85,0)
 I ($D(^TMP(PXRMPID,$J,PXRMITEM,"N/A","SEX")))&(IGNORE["S") Q
"RTN","PXRMFOUT",86,0)
 ;
"RTN","PXRMFOUT",87,0)
 ;If we got to here there are no ignore codes so return the N/A
"RTN","PXRMFOUT",88,0)
 ;information and turn the output on.
"RTN","PXRMFOUT",89,0)
 N DDATE
"RTN","PXRMFOUT",90,0)
 I RESDATE["E" S DDATE=+RESDATE_U_"E"
"RTN","PXRMFOUT",91,0)
 I RESDATE["X" S DDATE=+RESDATE_U_"X"
"RTN","PXRMFOUT",92,0)
 I '$D(DDATE) S DDATE=+RESDATE
"RTN","PXRMFOUT",93,0)
 I DDATE=0 S DDATE=""
"RTN","PXRMFOUT",94,0)
 S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)="N/A"_U_U_DDATE
"RTN","PXRMFOUT",95,0)
 S NOOUTPUT=0
"RTN","PXRMFOUT",96,0)
 Q
"RTN","PXRMFOUT",97,0)
 ;
"RTN","PXRMFPAR")
0^59^B16760377
"RTN","PXRMFPAR",1,0)
PXRMFPAR ; SLC/PJH - PXRM Finding Type Parameter Edit/Inquiry; 01/21/2000
"RTN","PXRMFPAR",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMFPAR",3,0)
 ;
"RTN","PXRMFPAR",4,0)
 ;Labels called from list 'PXRM FINDING PARAMETER LIST'
"RTN","PXRMFPAR",5,0)
 ;
"RTN","PXRMFPAR",6,0)
START(HEADER,IEN) ;
"RTN","PXRMFPAR",7,0)
 N PXRMREAD,PXRMSRC,PXRMVARM
"RTN","PXRMFPAR",8,0)
 N VALM,VAKMAR,VALMBCK,VALMBG,VALMCNT,VALMHDR,VALMSG,X,XMZ
"RTN","PXRMFPAR",9,0)
 S X="IORESET"
"RTN","PXRMFPAR",10,0)
 D ENDR^%ZISS
"RTN","PXRMFPAR",11,0)
 D EN^VALM("PXRM FINDING PARAMETER LIST")
"RTN","PXRMFPAR",12,0)
 W IORESET
"RTN","PXRMFPAR",13,0)
 D KILL^%ZISS
"RTN","PXRMFPAR",14,0)
 Q
"RTN","PXRMFPAR",15,0)
 ;
"RTN","PXRMFPAR",16,0)
EXIT ;Exit code
"RTN","PXRMFPAR",17,0)
 D CLEAN^VALM10
"RTN","PXRMFPAR",18,0)
 D FULL^VALM1
"RTN","PXRMFPAR",19,0)
 S VALMBCK="Q"
"RTN","PXRMFPAR",20,0)
 K ^TMP("PXRMFP",$J)
"RTN","PXRMFPAR",21,0)
 Q
"RTN","PXRMFPAR",22,0)
 ;
"RTN","PXRMFPAR",23,0)
HDR ; Header code
"RTN","PXRMFPAR",24,0)
 S VALMHDR(1)=HEADER
"RTN","PXRMFPAR",25,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMFPAR",26,0)
 Q
"RTN","PXRMFPAR",27,0)
 ;
"RTN","PXRMFPAR",28,0)
HELP ;Help code
"RTN","PXRMFPAR",29,0)
 N ORU,ORUPRMT,XQORM,PXRMTAG S PXRMTAG="G"_PXRMGTYP
"RTN","PXRMFPAR",30,0)
 D EN^VALM("PXRM DIALOG MAIN HELP")
"RTN","PXRMFPAR",31,0)
 Q
"RTN","PXRMFPAR",32,0)
 ;
"RTN","PXRMFPAR",33,0)
INIT ;Init
"RTN","PXRMFPAR",34,0)
 S VALMCNT=0
"RTN","PXRMFPAR",35,0)
 D BUILD
"RTN","PXRMFPAR",36,0)
 D XQORM
"RTN","PXRMFPAR",37,0)
 Q
"RTN","PXRMFPAR",38,0)
 ;
"RTN","PXRMFPAR",39,0)
 ;Load details
"RTN","PXRMFPAR",40,0)
BUILD N ACNT,ADES,AIEN,ASUB,ATYP,DATA,LCT,PTXT,RDES,RDIS,RIEN,STRING,STXT,SUB
"RTN","PXRMFPAR",41,0)
 S VALMCNT=0 K ^TMP("PXRMFPS",$J),^TMP("PXRMFP",$J)
"RTN","PXRMFPAR",42,0)
 S SUB=0
"RTN","PXRMFPAR",43,0)
 ;Loop through all the resolution statuses
"RTN","PXRMFPAR",44,0)
 F  S SUB=$O(^PXRMD(801.45,IEN,1,SUB)) Q:'SUB  D
"RTN","PXRMFPAR",45,0)
 .;Get ien for resolution status
"RTN","PXRMFPAR",46,0)
 .S RIEN=$P($G(^PXRMD(801.45,IEN,1,SUB,0)),U) Q:RIEN=""
"RTN","PXRMFPAR",47,0)
 .;Get description
"RTN","PXRMFPAR",48,0)
 .S RDES=$P($G(^PXRMD(801.9,RIEN,0)),U) I RDES="" S RDES=RIEN
"RTN","PXRMFPAR",49,0)
 .;Get Prefix and suffix text
"RTN","PXRMFPAR",50,0)
 .S PTXT=$E($G(^PXRMD(801.45,IEN,1,SUB,3)),1,40)
"RTN","PXRMFPAR",51,0)
 .S STXT=$E($G(^PXRMD(801.45,IEN,1,SUB,4)),1,40)
"RTN","PXRMFPAR",52,0)
 .;Get disabled flag
"RTN","PXRMFPAR",53,0)
 .S RDIS=$P($G(^PXRMD(801.45,IEN,1,SUB,0)),U,2)
"RTN","PXRMFPAR",54,0)
 .S RDIS=$S(RDIS=1:"Disabled",1:"Enabled")
"RTN","PXRMFPAR",55,0)
 .;Save Resolution in alpha order
"RTN","PXRMFPAR",56,0)
 .S ^TMP("PXRMFPS",$J,RDES)=SUB_U_PTXT_U_STXT_U_RDIS
"RTN","PXRMFPAR",57,0)
 ;
"RTN","PXRMFPAR",58,0)
 ;Put the list into the array List Manager is using.
"RTN","PXRMFPAR",59,0)
 S RDES="",LCT=0
"RTN","PXRMFPAR",60,0)
 S VALMCNT=0
"RTN","PXRMFPAR",61,0)
 F  S RDES=$O(^TMP("PXRMFPS",$J,RDES)) Q:RDES=""  D
"RTN","PXRMFPAR",62,0)
 .S DATA=$G(^TMP("PXRMFPS",$J,RDES))
"RTN","PXRMFPAR",63,0)
 .S SUB=$P(DATA,U),PTXT=$P(DATA,U,2),STXT=$P(DATA,U,3),RDIS=$P(DATA,U,4)
"RTN","PXRMFPAR",64,0)
 .S LCT=LCT+1,VALMCNT=VALMCNT+1
"RTN","PXRMFPAR",65,0)
 .S STRING=LCT_" "_RDES_$J("",(27-$L(RDES)))_PTXT_"/"
"RTN","PXRMFPAR",66,0)
 .S ^TMP("PXRMFP",$J,VALMCNT,0)=STRING_$J("",71-$L(STRING))_RDIS
"RTN","PXRMFPAR",67,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMFPAR",68,0)
 .S ^TMP("PXRMFP",$J,VALMCNT,0)=$J("",29)_"/"_STXT
"RTN","PXRMFPAR",69,0)
 .S ^TMP("PXRMFP",$J,"VALMCNT")=VALMCNT
"RTN","PXRMFPAR",70,0)
 .S ^TMP("PXRMFP",$J,"IDX",LCT,SUB)=""
"RTN","PXRMFPAR",71,0)
 .;Then get the additional prompts/forced values
"RTN","PXRMFPAR",72,0)
 .S ASUB=0,ACNT=0
"RTN","PXRMFPAR",73,0)
 .F  S ASUB=$O(^PXRMD(801.45,IEN,1,SUB,5,ASUB)) Q:'ASUB  D
"RTN","PXRMFPAR",74,0)
 ..;Get prompt ien
"RTN","PXRMFPAR",75,0)
 ..S AIEN=$P($G(^PXRMD(801.45,IEN,1,SUB,5,ASUB,0)),U) Q:AIEN=""
"RTN","PXRMFPAR",76,0)
 ..;Get description and type from dialog file
"RTN","PXRMFPAR",77,0)
 ..S DATA=$G(^PXRMD(801.41,AIEN,0))
"RTN","PXRMFPAR",78,0)
 ..S ADES=$P(DATA,U) I ADES="" S ADES=AIEN
"RTN","PXRMFPAR",79,0)
 ..S ATYP="" I $P(DATA,U,4)="F" S ATYP=" (forced value)"
"RTN","PXRMFPAR",80,0)
 ..S VALMCNT=VALMCNT+1,ACNT=ACNT+1
"RTN","PXRMFPAR",81,0)
 ..S ^TMP("PXRMFP",$J,VALMCNT,0)=$J("",29)_ACNT_"] "_ADES_ATYP
"RTN","PXRMFPAR",82,0)
 .;Final linefeed
"RTN","PXRMFPAR",83,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMFPAR",84,0)
 .S ^TMP("PXRMFP",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMFPAR",85,0)
 .S ^TMP("PXRMFP",$J,"VALMCNT")=VALMCNT
"RTN","PXRMFPAR",86,0)
 K ^TMP("PXRMFPS",$J)
"RTN","PXRMFPAR",87,0)
 ;Create headings
"RTN","PXRMFPAR",88,0)
 D CHGCAP^VALM("HEADER1","Resolution Status")
"RTN","PXRMFPAR",89,0)
 D CHGCAP^VALM("HEADER2","Prefix//Suffix & Prompts/Values/Actions")
"RTN","PXRMFPAR",90,0)
 D CHGCAP^VALM("HEADER3","Status")
"RTN","PXRMFPAR",91,0)
 Q
"RTN","PXRMFPAR",92,0)
 ;
"RTN","PXRMFPAR",93,0)
PEXIT ;PXRM GENERAL MENU protocol exit code
"RTN","PXRMFPAR",94,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMFPAR",95,0)
 D XQORM
"RTN","PXRMFPAR",96,0)
 Q
"RTN","PXRMFPAR",97,0)
 ;
"RTN","PXRMFPAR",98,0)
SEL ;PXRM SELECT RESOLUTION validation
"RTN","PXRMFPAR",99,0)
 N ERR,IEN,SEL
"RTN","PXRMFPAR",100,0)
 S VALMBCK="",SEL=+$P(XQORNOD(0),"=",2)
"RTN","PXRMFPAR",101,0)
 ;Invalid selection
"RTN","PXRMFPAR",102,0)
 I '$D(@VALMAR@("IDX",SEL)) D  Q
"RTN","PXRMFPAR",103,0)
 .W $C(7),!,SEL_" is not a valid item number." H 2
"RTN","PXRMFPAR",104,0)
 .S VALMBCK="R"
"RTN","PXRMFPAR",105,0)
 ;Valid selection
"RTN","PXRMFPAR",106,0)
 S IEN=$O(@VALMAR@("IDX",SEL,""))
"RTN","PXRMFPAR",107,0)
 I IEN D 
"RTN","PXRMFPAR",108,0)
 .S VALMBCK="Q",PXRMFSUB=IEN
"RTN","PXRMFPAR",109,0)
 Q
"RTN","PXRMFPAR",110,0)
 ;
"RTN","PXRMFPAR",111,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM SELECT RESOLUTION",0))_U_"1:"_VALMCNT
"RTN","PXRMFPAR",112,0)
 S XQORM("A")="Select number of Resolution Status to Edit: "
"RTN","PXRMFPAR",113,0)
 Q
"RTN","PXRMGEDT")
0^60^B14988049
"RTN","PXRMGEDT",1,0)
PXRMGEDT ; SLC/PJH - PXRM General Edit/Add. ;06/09/2000
"RTN","PXRMGEDT",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMGEDT",3,0)
 ;
"RTN","PXRMGEDT",4,0)
 ;
"RTN","PXRMGEDT",5,0)
 ;Called from protocol PXRM SELECTION ADD
"RTN","PXRMGEDT",6,0)
 ;
"RTN","PXRMGEDT",7,0)
ADD(TYP) ;
"RTN","PXRMGEDT",8,0)
 N DIC,DIDEL,DLAYGO,DTOUT,DUOUT,FILE,HED,PXRMHD,X,Y
"RTN","PXRMGEDT",9,0)
 W IORESET
"RTN","PXRMGEDT",10,0)
 ;
"RTN","PXRMGEDT",11,0)
 ;Ignore finding type parameters
"RTN","PXRMGEDT",12,0)
 I "FPAR"=TYP D DUMMY^PXRMRUTL H 1 Q
"RTN","PXRMGEDT",13,0)
 ;
"RTN","PXRMGEDT",14,0)
 ;Edit dialog
"RTN","PXRMGEDT",15,0)
 I "DLGE"=TYP D ADD^PXRMDEDT Q
"RTN","PXRMGEDT",16,0)
 ;
"RTN","PXRMGEDT",17,0)
 ;Allow auto generate of reminder dialogs
"RTN","PXRMGEDT",18,0)
 I TYP["DLG" D ^PXRMDBLD Q
"RTN","PXRMGEDT",19,0)
 ;
"RTN","PXRMGEDT",20,0)
 ;Finding Item Parameter
"RTN","PXRMGEDT",21,0)
 I TYP="FIP" S FILE="801.43",HED="FINDING ITEM PARAMETER"
"RTN","PXRMGEDT",22,0)
 ;
"RTN","PXRMGEDT",23,0)
 ;Reminder Category
"RTN","PXRMGEDT",24,0)
 I TYP="RCAT" S FILE="811.7",HED="REMINDER CATEGORY"
"RTN","PXRMGEDT",25,0)
 ;
"RTN","PXRMGEDT",26,0)
 ;Resolution Status
"RTN","PXRMGEDT",27,0)
 I TYP="RESN" S FILE="801.9",HED="RESOLUTION STATUS"
"RTN","PXRMGEDT",28,0)
 ;
"RTN","PXRMGEDT",29,0)
 ;Health Factor Resolution
"RTN","PXRMGEDT",30,0)
 I TYP="SHFR" S FILE="801.95",HED="HEALTH FACTOR"
"RTN","PXRMGEDT",31,0)
 ;
"RTN","PXRMGEDT",32,0)
 F  D  Q:(X="")!$D(DUOUT)!$D(DTOUT)
"RTN","PXRMGEDT",33,0)
 .S DIC=FILE,DLAYGO=DIC,DIDEL=DIC,DIC(0)="QAELX"
"RTN","PXRMGEDT",34,0)
 .S DIC("A")="Select new "_HED_" name: "
"RTN","PXRMGEDT",35,0)
 .I TYP="SHFR" S DIC(0)="QAEL"
"RTN","PXRMGEDT",36,0)
 .D ^DIC Q:X=""
"RTN","PXRMGEDT",37,0)
 .I X=(U_U) S DTOUT=1
"RTN","PXRMGEDT",38,0)
 .I Y=-1 S DUOUT=1 W !,"Details not saved",! Q
"RTN","PXRMGEDT",39,0)
 .Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMGEDT",40,0)
 .;Check if exists
"RTN","PXRMGEDT",41,0)
 .I ($P(Y,U,3)'=1) W !,"already exists" Q
"RTN","PXRMGEDT",42,0)
 .S DA=$P(Y,U)
"RTN","PXRMGEDT",43,0)
 .;Edit resolution status
"RTN","PXRMGEDT",44,0)
 .I TYP="RESN" D EDIT^PXRMSEDT("^PXRMD(801.9,",DA)
"RTN","PXRMGEDT",45,0)
 .;Edit others
"RTN","PXRMGEDT",46,0)
 .I TYP'="RESN" D EDIT(TYP,DA,1)
"RTN","PXRMGEDT",47,0)
 .S DUOUT=1
"RTN","PXRMGEDT",48,0)
 Q
"RTN","PXRMGEDT",49,0)
 ;
"RTN","PXRMGEDT",50,0)
DIE(HDR,FILE) ;Lock and edit
"RTN","PXRMGEDT",51,0)
 I FILE=801.45 W "ED - EDIT "_HDR,!!,PXRMHD,!
"RTN","PXRMGEDT",52,0)
 ;Display resolution details if finding type parameter edit
"RTN","PXRMGEDT",53,0)
 I FILE=801.45,$G(PXRMINST)'=1 D
"RTN","PXRMGEDT",54,0)
 .N RSUB,RNAM
"RTN","PXRMGEDT",55,0)
 .S RSUB=$P($G(^PXRMD(801.45,PXRMFIEN,1,PXRMFSUB,0)),U) Q:'RSUB
"RTN","PXRMGEDT",56,0)
 .S RNAM=$P($G(^PXRMD(801.9,RSUB,0)),U)
"RTN","PXRMGEDT",57,0)
 .S:RNAM="" RNAM=RSUB W "RESOLUTION STATUS : ",RNAM
"RTN","PXRMGEDT",58,0)
 D:$$LOCK(FILE) ^DIE,UNLOCK(FILE)
"RTN","PXRMGEDT",59,0)
 Q
"RTN","PXRMGEDT",60,0)
 ;
"RTN","PXRMGEDT",61,0)
 ;Called by protocol PXRM GENERAL EDIT
"RTN","PXRMGEDT",62,0)
 ;------------------------------------
"RTN","PXRMGEDT",63,0)
EDIT(TYP,DA,ADD) ;
"RTN","PXRMGEDT",64,0)
 N DIC,DIDEL,DIE,DR,DTOUT,DUOUT,Y
"RTN","PXRMGEDT",65,0)
 W IORESET
"RTN","PXRMGEDT",66,0)
 S VALMBCK="R"
"RTN","PXRMGEDT",67,0)
 ;
"RTN","PXRMGEDT",68,0)
 ;Taxonomy Dialog
"RTN","PXRMGEDT",69,0)
 I TYP="DTAX" D
"RTN","PXRMGEDT",70,0)
 .I $$TLOCK(811.2,DA) D  D TUNLOCK(811.2,DA)
"RTN","PXRMGEDT",71,0)
 ..N DIE,DR
"RTN","PXRMGEDT",72,0)
 ..S DIE="^PXD(811.2,"
"RTN","PXRMGEDT",73,0)
 ..;
"RTN","PXRMGEDT",74,0)
 ..W !,"Dialog Text Fields"
"RTN","PXRMGEDT",75,0)
 ..S DR=".03;3107;3108;3111;3112"
"RTN","PXRMGEDT",76,0)
 ..D ^DIE
"RTN","PXRMGEDT",77,0)
 ..I $D(Y) Q
"RTN","PXRMGEDT",78,0)
 ..;
"RTN","PXRMGEDT",79,0)
 ..W !!,"Dialog Selectable codes"
"RTN","PXRMGEDT",80,0)
 ..S DR="3102;3104"
"RTN","PXRMGEDT",81,0)
 ..D ^DIE
"RTN","PXRMGEDT",82,0)
 ..I $D(Y) Q
"RTN","PXRMGEDT",83,0)
 ..;
"RTN","PXRMGEDT",84,0)
 ..W !!,"Dialog Generation Parameters"
"RTN","PXRMGEDT",85,0)
 ..S DR="3106;3110"
"RTN","PXRMGEDT",86,0)
 ..D ^DIE
"RTN","PXRMGEDT",87,0)
 ;
"RTN","PXRMGEDT",88,0)
 ;Finding Item Parameter
"RTN","PXRMGEDT",89,0)
 I TYP="FIP" D
"RTN","PXRMGEDT",90,0)
 .S DIE="^PXRMD(801.43,",DR=".01;.02;.03;.04",DIDEL=801.43
"RTN","PXRMGEDT",91,0)
 .D DIE("FINDING ITEM PARAMETER",801.43)
"RTN","PXRMGEDT",92,0)
 ;
"RTN","PXRMGEDT",93,0)
 ;Finding Type Parameter
"RTN","PXRMGEDT",94,0)
 I TYP="FPAR" D
"RTN","PXRMGEDT",95,0)
 .;Programmer mode
"RTN","PXRMGEDT",96,0)
 .S:$G(PXRMINST)=1 DR=1,DR(2,801.451)="1;3;4;5",DIE="^PXRMD(801.45,"
"RTN","PXRMGEDT",97,0)
 .;Site mode
"RTN","PXRMGEDT",98,0)
 .I $G(PXRMINST)'=1 D
"RTN","PXRMGEDT",99,0)
 ..S DR="1;3;4;5",DIE="^PXRMD(801.45,PXRMFIEN,1,",DA(1)=PXRMFIEN
"RTN","PXRMGEDT",100,0)
 ..S DR(2,801.4515)="2;4;5;6;1"
"RTN","PXRMGEDT",101,0)
 .D DIE("FINDING TYPE PARAMETER",801.45)
"RTN","PXRMGEDT",102,0)
 ;
"RTN","PXRMGEDT",103,0)
 ;Reminder Category
"RTN","PXRMGEDT",104,0)
 I TYP="RCAT" D
"RTN","PXRMGEDT",105,0)
 .S DIE="^PXRMD(811.7,",DR=".01;1;2;10",DIDEL=811.7
"RTN","PXRMGEDT",106,0)
 .D DIE("CATEGORY",811.7)
"RTN","PXRMGEDT",107,0)
 ;
"RTN","PXRMGEDT",108,0)
 ;Resolution Status
"RTN","PXRMGEDT",109,0)
 I TYP="RESN" D
"RTN","PXRMGEDT",110,0)
 .I $$LOCK(801.9) D EDIT^PXRMSEDT("^PXRMD(801.9,",.DA),UNLOCK(811.9)
"RTN","PXRMGEDT",111,0)
 ;
"RTN","PXRMGEDT",112,0)
 ;Health Factor Resolution
"RTN","PXRMGEDT",113,0)
 I TYP="SHFR" D
"RTN","PXRMGEDT",114,0)
 .S DIE="^PXRMD(801.95,",DR=".01;.02",DIDEL=801.95
"RTN","PXRMGEDT",115,0)
 .D DIE("HEALTH FACTOR RESOLUTIONS",811.7)
"RTN","PXRMGEDT",116,0)
 ;
"RTN","PXRMGEDT",117,0)
 ;Skip rebuild if editting taxonomy called from dialog edit
"RTN","PXRMGEDT",118,0)
 I PXRMGTYP["DLG" Q
"RTN","PXRMGEDT",119,0)
 ;
"RTN","PXRMGEDT",120,0)
 ;Deleted ???
"RTN","PXRMGEDT",121,0)
 I '$D(DA) S VALMBCK="Q" Q
"RTN","PXRMGEDT",122,0)
 ;Redisplay changes
"RTN","PXRMGEDT",123,0)
 I 'ADD D BUILD^PXRMGEN
"RTN","PXRMGEDT",124,0)
 Q
"RTN","PXRMGEDT",125,0)
 ;
"RTN","PXRMGEDT",126,0)
 ;
"RTN","PXRMGEDT",127,0)
LOCK(FILE) ;Lock the entire file
"RTN","PXRMGEDT",128,0)
 L +^PXRMD(FILE):0 I  Q 1
"RTN","PXRMGEDT",129,0)
 E  W !!,?5,"Another user is editing this file, try later" H 2 Q 0
"RTN","PXRMGEDT",130,0)
 ;
"RTN","PXRMGEDT",131,0)
 ;
"RTN","PXRMGEDT",132,0)
UNLOCK(FILE) ;Unlock the file
"RTN","PXRMGEDT",133,0)
 L -^PXRMD(FILE)
"RTN","PXRMGEDT",134,0)
 Q
"RTN","PXRMGEDT",135,0)
 ;
"RTN","PXRMGEDT",136,0)
TLOCK(FILE,DA) ;Lock the record
"RTN","PXRMGEDT",137,0)
 L +^PXD(FILE,DA):0 I  Q 1
"RTN","PXRMGEDT",138,0)
 E  W !!,?5,"Another user is editing this file, try later" H 2 Q 0
"RTN","PXRMGEDT",139,0)
 ;
"RTN","PXRMGEDT",140,0)
 ;
"RTN","PXRMGEDT",141,0)
TUNLOCK(FILE,DA) ;Unlock the record
"RTN","PXRMGEDT",142,0)
 L -^PXD(FILE,DA)
"RTN","PXRMGEDT",143,0)
 Q
"RTN","PXRMGEN")
0^61^B4714370
"RTN","PXRMGEN",1,0)
PXRMGEN ; SLC/PJH - PXRM General Edit/Inquiry ;01/21/2000
"RTN","PXRMGEN",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMGEN",3,0)
 ;
"RTN","PXRMGEN",4,0)
 ;Labels called from list 'PXRM GENERAL EDIT/LIST'
"RTN","PXRMGEN",5,0)
 ;
"RTN","PXRMGEN",6,0)
START(HEADER,PXRMGTYP,IEN) ;
"RTN","PXRMGEN",7,0)
 N PXRMREAD,PXRMSRC,PXRMVARM
"RTN","PXRMGEN",8,0)
 N VALM,VALMAR,VALMBCK,VALMBG,VALMCNT,VALMHDR,VALMSG,X,XMZ
"RTN","PXRMGEN",9,0)
 S X="IORESET"
"RTN","PXRMGEN",10,0)
 D ENDR^%ZISS,EN^VALM("PXRM GENERAL EDIT/LIST")
"RTN","PXRMGEN",11,0)
 W IORESET
"RTN","PXRMGEN",12,0)
 D KILL^%ZISS
"RTN","PXRMGEN",13,0)
 Q
"RTN","PXRMGEN",14,0)
 ;
"RTN","PXRMGEN",15,0)
EXIT ;Exit code
"RTN","PXRMGEN",16,0)
 D CLEAN^VALM10,FULL^VALM1
"RTN","PXRMGEN",17,0)
 S VALMBCK="Q"
"RTN","PXRMGEN",18,0)
 K ^TMP("PXRMGEN",$J)
"RTN","PXRMGEN",19,0)
 Q
"RTN","PXRMGEN",20,0)
 ;
"RTN","PXRMGEN",21,0)
HDR ; Header code
"RTN","PXRMGEN",22,0)
 S VALMHDR(1)=HEADER
"RTN","PXRMGEN",23,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMGEN",24,0)
 Q
"RTN","PXRMGEN",25,0)
 ;
"RTN","PXRMGEN",26,0)
HELP ;Help code
"RTN","PXRMGEN",27,0)
 N ORU,ORUPRMT,XQORM,PXRMTAG S PXRMTAG="G"_PXRMGTYP
"RTN","PXRMGEN",28,0)
 D EN^VALM("PXRM DIALOG MAIN HELP")
"RTN","PXRMGEN",29,0)
 Q
"RTN","PXRMGEN",30,0)
 ;
"RTN","PXRMGEN",31,0)
INIT ;Init
"RTN","PXRMGEN",32,0)
 S VALMCNT=0
"RTN","PXRMGEN",33,0)
 D BUILD
"RTN","PXRMGEN",34,0)
 Q
"RTN","PXRMGEN",35,0)
 ;
"RTN","PXRMGEN",36,0)
 ;Load details (also called from edit PXRMGEDIT)
"RTN","PXRMGEN",37,0)
BUILD I PXRMGTYP="DTAX" D DTAX^PXRMTDLG(PXRMTIEN)
"RTN","PXRMGEN",38,0)
 I PXRMGTYP="FIP" D FIP^PXRMFIP(PXRMFIP)
"RTN","PXRMGEN",39,0)
 I PXRMGTYP="FPAR" D FPAR^PXRMFIND
"RTN","PXRMGEN",40,0)
 I PXRMGTYP="RCAT" D CAT^PXRMCAT(PXRMCAT)
"RTN","PXRMGEN",41,0)
 I PXRMGTYP="RESN" D RESN^PXRMRESN(PXRMRESN)
"RTN","PXRMGEN",42,0)
 I PXRMGTYP="SHFR" D SHFR^PXRMSHF(PXRMSHF)
"RTN","PXRMGEN",43,0)
 ;Reset Header
"RTN","PXRMGEN",44,0)
 D HDR
"RTN","PXRMGEN",45,0)
 Q
"RTN","PXRMGEN",46,0)
 ;
"RTN","PXRMGEN",47,0)
INQUIRE W IORESET
"RTN","PXRMGEN",48,0)
 I PXRMGTYP="DTAX" D INQ^PXRMTDLG(PXRMTIEN)
"RTN","PXRMGEN",49,0)
 I PXRMGTYP="RCAT" D INQ^PXRMCLST(PXRMCAT)
"RTN","PXRMGEN",50,0)
 I PXRMGTYP="DLG" D INQ^PXRMDLST(PXRMDIEN)
"RTN","PXRMGEN",51,0)
 I PXRMGTYP="DLGR" D INQ^PXRMDLST(PXRMDIEN)
"RTN","PXRMGEN",52,0)
 I PXRMGTYP="FIP" D INQ^PXRMFIP(PXRMFIP)
"RTN","PXRMGEN",53,0)
 I PXRMGTYP="FPAR" D INQ^PXRMFLST(PXRMFIEN)
"RTN","PXRMGEN",54,0)
 I PXRMGTYP="RESN" D INQ^PXRMSLST(PXRMRESN)
"RTN","PXRMGEN",55,0)
 I PXRMGTYP="SHFR" D INQ^PXRMSHF(PXRMSHF)
"RTN","PXRMGEN",56,0)
 ;
"RTN","PXRMGEN",57,0)
 N DIR S DIR(0)="E" D ^DIR
"RTN","PXRMGEN",58,0)
 ;
"RTN","PXRMGEN",59,0)
 S VALMBCK="R"
"RTN","PXRMGEN",60,0)
 Q
"RTN","PXRMGEN",61,0)
 ;
"RTN","PXRMGEN",62,0)
PEXIT ;PXRM GENERAL MENU protocol exit code
"RTN","PXRMGEN",63,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMGEN",64,0)
 Q
"RTN","PXRMGPRT")
1^62
"RTN","PXRMHF")
0^63^B41007988
"RTN","PXRMHF",1,0)
PXRMHF ; SLC/PKR - Handle Health Factor findings. ;06/09/2000
"RTN","PXRMHF",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMHF",3,0)
 ;
"RTN","PXRMHF",4,0)
 ;=======================================================================
"RTN","PXRMHF",5,0)
BLDPC(DFN) ;Build a list of Health Factors associated with this patient,
"RTN","PXRMHF",6,0)
 ;keep only the most recent of each.
"RTN","PXRMHF",7,0)
 N CAT,DATE,IEN,INVDATE,HFIND,NPATHF,TEMP,TYPE,VIEN
"RTN","PXRMHF",8,0)
 I '$D(^XTMP(PXRMDFN,"HF","NPATHF")) D
"RTN","PXRMHF",9,0)
 . K ^XTMP(PXRMDFN,"HF")
"RTN","PXRMHF",10,0)
 . S NPATHF=0
"RTN","PXRMHF",11,0)
 . S HFIND=""
"RTN","PXRMHF",12,0)
 . F  S HFIND=$O(^AUPNVHF("AA",DFN,HFIND)) Q:HFIND=""  D
"RTN","PXRMHF",13,0)
 .. S INVDATE=$O(^AUPNVHF("AA",DFN,HFIND,""))
"RTN","PXRMHF",14,0)
 .. S IEN=$O(^AUPNVHF("AA",DFN,HFIND,INVDATE,""))
"RTN","PXRMHF",15,0)
 .. S VIEN=$P(^AUPNVHF(IEN,0),U,3)
"RTN","PXRMHF",16,0)
 .. S DATE=$$VDATE^PXRMDATE(VIEN)
"RTN","PXRMHF",17,0)
 .. S TEMP=$G(^AUTTHF(HFIND,0))
"RTN","PXRMHF",18,0)
 .. S TYPE=$P(TEMP,U,10)
"RTN","PXRMHF",19,0)
 .. I TYPE="C" S CAT=HFIND
"RTN","PXRMHF",20,0)
 .. E  S CAT=$P(^AUTTHF(HFIND,0),U,3)
"RTN","PXRMHF",21,0)
 ..;If the category is null then setup the error text.
"RTN","PXRMHF",22,0)
 .. I CAT="" S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP","HF",1)="Health factor "_$P(TEMP,U,1)_" does not have a category."
"RTN","PXRMHF",23,0)
 .. S NPATHF=NPATHF+1
"RTN","PXRMHF",24,0)
 ..;Store the heath factor, its category, the entry in AUPNVHF,
"RTN","PXRMHF",25,0)
 ..;the visit, and the date.
"RTN","PXRMHF",26,0)
 .. S ^XTMP(PXRMDFN,"HF",CAT,INVDATE,HFIND)=IEN_U_VIEN_U_DATE
"RTN","PXRMHF",27,0)
 . S ^XTMP(PXRMDFN,"HF","NPATHF")=NPATHF
"RTN","PXRMHF",28,0)
 E  S NPATHF=^XTMP(PXRMDFN,"HF","NPATHF")
"RTN","PXRMHF",29,0)
 Q NPATHF
"RTN","PXRMHF",30,0)
 ;
"RTN","PXRMHF",31,0)
 ;=======================================================================
"RTN","PXRMHF",32,0)
EVALFI(DFN,FIEVAL) ;Evaluate health factor findings.
"RTN","PXRMHF",33,0)
 ;Setup an array of health factors for matching.
"RTN","PXRMHF",34,0)
 N CAT,HFIEN,FIHF,FINDING,NPATHF,WCR
"RTN","PXRMHF",35,0)
 ;
"RTN","PXRMHF",36,0)
 S NPATHF=$$BLDPC(DFN)
"RTN","PXRMHF",37,0)
 ;If the patient has no health factors set all health factor findings
"RTN","PXRMHF",38,0)
 ;to false and quit.
"RTN","PXRMHF",39,0)
 I NPATHF=0 D  Q
"RTN","PXRMHF",40,0)
 . S HFIEN=""
"RTN","PXRMHF",41,0)
 . F  S HFIEN=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTHF(",HFIEN)) Q:+HFIEN=0  D
"RTN","PXRMHF",42,0)
 .. S FINDING=""
"RTN","PXRMHF",43,0)
 .. F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTHF(",HFIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMHF",44,0)
 ... S FIEVAL(FINDING)=0
"RTN","PXRMHF",45,0)
 ;
"RTN","PXRMHF",46,0)
 S HFIEN=""
"RTN","PXRMHF",47,0)
 ;Build the list of health factor findings for this reminder.
"RTN","PXRMHF",48,0)
 F  S HFIEN=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTHF(",HFIEN)) Q:+HFIEN=0  D
"RTN","PXRMHF",49,0)
 . S CAT=$P(^AUTTHF(HFIEN,0),U,3)
"RTN","PXRMHF",50,0)
 . S FINDING=""
"RTN","PXRMHF",51,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTHF(",HFIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMHF",52,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMHF",53,0)
 ..;Get the Within Category Rank
"RTN","PXRMHF",54,0)
 .. S WCR=$P(^PXD(811.9,PXRMITEM,20,FINDING,0),U,10)
"RTN","PXRMHF",55,0)
 .. I WCR="" S WCR=9999
"RTN","PXRMHF",56,0)
 .. S FIHF(CAT,HFIEN,WCR)=FINDING
"RTN","PXRMHF",57,0)
 ;
"RTN","PXRMHF",58,0)
 D MPHF(DFN,.FIHF,.FIEVAL)
"RTN","PXRMHF",59,0)
 Q
"RTN","PXRMHF",60,0)
 ;
"RTN","PXRMHF",61,0)
 ;=======================================================================
"RTN","PXRMHF",62,0)
EVALTERM(DFN,FINDING,TERMIEN,TERMEVAL) ;Evaluate health factor terms.
"RTN","PXRMHF",63,0)
 N CAT,HFIEN,FIHF,NPATHF,TERMHF,TFINDING,WCR
"RTN","PXRMHF",64,0)
 ;
"RTN","PXRMHF",65,0)
 S NPATHF=$$BLDPC(DFN)
"RTN","PXRMHF",66,0)
 ;If the patient has no health factors set all health factor
"RTN","PXRMHF",67,0)
 ;findings to false and quit.
"RTN","PXRMHF",68,0)
 I NPATHF=0 D  Q
"RTN","PXRMHF",69,0)
 . S HFIEN=""
"RTN","PXRMHF",70,0)
 . F  S HFIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTHF(",HFIEN)) Q:+HFIEN=0  D
"RTN","PXRMHF",71,0)
 .. S TFINDING=""
"RTN","PXRMHF",72,0)
 .. F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTHF(",HFIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMHF",73,0)
 ... S TERMEVAL(TFINDING)=0
"RTN","PXRMHF",74,0)
 ;
"RTN","PXRMHF",75,0)
 S HFIEN=""
"RTN","PXRMHF",76,0)
 ;Build the list of health factor findings for this term.
"RTN","PXRMHF",77,0)
 F  S HFIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTHF(",HFIEN)) Q:+HFIEN=0  D
"RTN","PXRMHF",78,0)
 . S CAT=$P(^AUTTHF(HFIEN,0),U,3)
"RTN","PXRMHF",79,0)
 . S TFINDING=""
"RTN","PXRMHF",80,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTHF(",HFIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMHF",81,0)
 .. S TERMEVAL(TFINDING)=0
"RTN","PXRMHF",82,0)
 ..;Get the Within Category Rank, look at the term finding level first.
"RTN","PXRMHF",83,0)
 .. S WCR=$P(^PXRMD(811.5,TERMIEN,20,TFINDING,0),U,10)
"RTN","PXRMHF",84,0)
 .. I WCR="" S WCR=$P(^PXD(811.9,PXRMITEM,20,FINDING,0),U,10)
"RTN","PXRMHF",85,0)
 .. I WCR="" S WCR=9999
"RTN","PXRMHF",86,0)
 .. S TERMHF(CAT,HFIEN,WCR)=FINDING_U_TERMIEN_U_TFINDING
"RTN","PXRMHF",87,0)
 ;
"RTN","PXRMHF",88,0)
 D MPHF(DFN,.TERMHF,.TERMEVAL)
"RTN","PXRMHF",89,0)
 Q
"RTN","PXRMHF",90,0)
 ;
"RTN","PXRMHF",91,0)
 ;=======================================================================
"RTN","PXRMHF",92,0)
MPHF(DFN,FIHF,FIEVAL) ;Find the matches.
"RTN","PXRMHF",93,0)
 N CONVAL,CAT,DATE,DONE,F0,FIND0,HFIEN,INVDATE,LEVEL,SORTLIST
"RTN","PXRMHF",94,0)
 N TEMP,TF0,TFIND0,VALID,WCR
"RTN","PXRMHF",95,0)
 S CAT=0
"RTN","PXRMHF",96,0)
 F  S CAT=$O(^XTMP(PXRMDFN,"HF",CAT)) Q:+CAT=0  D
"RTN","PXRMHF",97,0)
 . I '$D(FIHF(CAT)) Q
"RTN","PXRMHF",98,0)
 .;Have a category get health factors.
"RTN","PXRMHF",99,0)
 . S INVDATE=0
"RTN","PXRMHF",100,0)
 . F  S INVDATE=$O(^XTMP(PXRMDFN,"HF",CAT,INVDATE)) Q:INVDATE=""  D
"RTN","PXRMHF",101,0)
 .. S HFIEN=0
"RTN","PXRMHF",102,0)
 .. F  S HFIEN=$O(^XTMP(PXRMDFN,"HF",CAT,INVDATE,HFIEN)) Q:HFIEN=""  D
"RTN","PXRMHF",103,0)
 ... I '$D(FIHF(CAT,HFIEN)) Q
"RTN","PXRMHF",104,0)
 ... S WCR=$O(FIHF(CAT,HFIEN,""))
"RTN","PXRMHF",105,0)
 ... S SORTLIST(CAT,INVDATE,WCR,HFIEN)=""
"RTN","PXRMHF",106,0)
 ;Process SORTLIST the first factor in the category will be true
"RTN","PXRMHF",107,0)
 ;the others false unless WCR=0 in which case it is treated as an
"RTN","PXRMHF",108,0)
 ;individual finding.
"RTN","PXRMHF",109,0)
 S CAT=0
"RTN","PXRMHF",110,0)
 F  S CAT=$O(SORTLIST(CAT)) Q:CAT=""  D
"RTN","PXRMHF",111,0)
 . S DONE=0
"RTN","PXRMHF",112,0)
 . S INVDATE=0
"RTN","PXRMHF",113,0)
 . F  S INVDATE=$O(SORTLIST(CAT,INVDATE)) Q:(INVDATE="")!(DONE)  D
"RTN","PXRMHF",114,0)
 .. S WCR=""
"RTN","PXRMHF",115,0)
 .. F  S WCR=$O(SORTLIST(CAT,INVDATE,WCR)) Q:(WCR="")!(DONE)  D
"RTN","PXRMHF",116,0)
 ... S HFIEN=""
"RTN","PXRMHF",117,0)
 ... F  S HFIEN=$O(SORTLIST(CAT,INVDATE,WCR,HFIEN)) Q:(HFIEN="")!(DONE)  D
"RTN","PXRMHF",118,0)
 ....;If this is a term finding it will be the third piece.
"RTN","PXRMHF",119,0)
 .... S F0=$P(FIHF(CAT,HFIEN,WCR),U,1)
"RTN","PXRMHF",120,0)
 .... S TF0=$P(FIHF(CAT,HFIEN,WCR),U,3)
"RTN","PXRMHF",121,0)
 .... I TF0="" S FINDING=F0
"RTN","PXRMHF",122,0)
 .... E  S FINDING=TF0
"RTN","PXRMHF",123,0)
 .... S TEMP=^XTMP(PXRMDFN,"HF",CAT,INVDATE,HFIEN)
"RTN","PXRMHF",124,0)
 .... S FIEVAL(FINDING)=1
"RTN","PXRMHF",125,0)
 .... S (DATE,FIEVAL(FINDING,"DATE"))=$P(TEMP,U,3)
"RTN","PXRMHF",126,0)
 .... S FIEVAL(FINDING,"FINDING")=HFIEN_";AUTTHF("
"RTN","PXRMHF",127,0)
 .... S FIEVAL(FINDING,"SOURCE")=$P(TEMP,U,1)_";AUPNVHF("
"RTN","PXRMHF",128,0)
 .... S FIEVAL(FINDING,"VIEN")=$P(TEMP,U,2)
"RTN","PXRMHF",129,0)
 ....;The value is the level/severity.
"RTN","PXRMHF",130,0)
 .... S LEVEL=$P(^AUPNVHF($P(TEMP,U,1),0),U,5)
"RTN","PXRMHF",131,0)
 .... S FIEVAL(FINDING,"LEVEL")=LEVEL
"RTN","PXRMHF",132,0)
 .... S FIEVAL(FINDING,"VALUE")=LEVEL
"RTN","PXRMHF",133,0)
 ....;If there is an condition for this finding evaluate it.
"RTN","PXRMHF",134,0)
 .... S FIND0=^PXD(811.9,PXRMITEM,20,F0,0)
"RTN","PXRMHF",135,0)
 .... I TF0="" S TFIND0=""
"RTN","PXRMHF",136,0)
 .... E  S TFIND0=^PXRMD(811.5,$P(FIHF(CAT,HFIEN,WCR),U,2),20,TF0,0)
"RTN","PXRMHF",137,0)
 ....;Determine if the finding has expired.
"RTN","PXRMHF",138,0)
 ....S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMHF",139,0)
 ....I 'VALID D  Q
"RTN","PXRMHF",140,0)
 ..... S FIEVAL(FINDING)=0
"RTN","PXRMHF",141,0)
 ..... S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMHF",142,0)
 .... S CONVAL=$$COND^PXRMUTIL(FIND0,TFIND0,LEVEL)
"RTN","PXRMHF",143,0)
 .... I CONVAL'="" D
"RTN","PXRMHF",144,0)
 ..... I CONVAL D
"RTN","PXRMHF",145,0)
 ...... S FIEVAL(FINDING)=CONVAL
"RTN","PXRMHF",146,0)
 ...... S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMHF",147,0)
 ..... E  D
"RTN","PXRMHF",148,0)
 ...... K FIEVAL(FINDING)
"RTN","PXRMHF",149,0)
 ...... S FIEVAL(FINDING)=0
"RTN","PXRMHF",150,0)
 .... I WCR>0 S DONE=1
"RTN","PXRMHF",151,0)
 Q
"RTN","PXRMHF",152,0)
 ;
"RTN","PXRMHF",153,0)
 ;=======================================================================
"RTN","PXRMHF",154,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMHF",155,0)
 ;maintenance output.
"RTN","PXRMHF",156,0)
 N EM,FIEN,PNAME,LEVEL,TEMP,VDATE
"RTN","PXRMHF",157,0)
 S FIEN=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMHF",158,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMHF",159,0)
 S LEVEL=$G(FIEVAL(FINDING,"VALUE"))
"RTN","PXRMHF",160,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMHF",161,0)
 S TEMP=TEMP_" Health Factor: "
"RTN","PXRMHF",162,0)
 S PNAME=$P(^AUTTHF(FIEN,0),U,1)
"RTN","PXRMHF",163,0)
 S TEMP=TEMP_PNAME
"RTN","PXRMHF",164,0)
 I $L(LEVEL)>0 D
"RTN","PXRMHF",165,0)
 . S TEMP=TEMP_"; level/severity - "
"RTN","PXRMHF",166,0)
 . S TEMP=TEMP_$$EXTERNAL^DILFD(9000010.23,.04,"",LEVEL,.EM)
"RTN","PXRMHF",167,0)
 ;If the health factor has expired add "EXPIRED"
"RTN","PXRMHF",168,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMHF",169,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMHF",170,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMHF",171,0)
 S NLINES=NLINES+1
"RTN","PXRMHF",172,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMHF",173,0)
 I $D(PXRMDEV) D
"RTN","PXRMHF",174,0)
 . N UID
"RTN","PXRMHF",175,0)
 . S UID="HEALTH FACTOR "_PNAME
"RTN","PXRMHF",176,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMHF",177,0)
 ;
"RTN","PXRMHF",178,0)
 ;For historical encounters display the location and comments.
"RTN","PXRMHF",179,0)
 I VDATE["E" D
"RTN","PXRMHF",180,0)
 . N INDEX,VIEN
"RTN","PXRMHF",181,0)
 . S INDEX="HF-"_PNAME
"RTN","PXRMHF",182,0)
 . S VIEN=FIEVAL(FINDING,"VIEN")
"RTN","PXRMHF",183,0)
 . D HLCV^PXRMVSIT(.NLINES,.TEXT,VIEN,INDEX)
"RTN","PXRMHF",184,0)
 Q
"RTN","PXRMHF",185,0)
 ;
"RTN","PXRMHFOP")
1^191
"RTN","PXRMHL7")
0^65^B1687555
"RTN","PXRMHL7",1,0)
PXRMHL7 ; SLC/PKR - HL7 message handler. ;06/29/1999
"RTN","PXRMHL7",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMHL7",3,0)
 ;This is based on the code in ORM.
"RTN","PXRMHL7",4,0)
 ;
"RTN","PXRMHL7",5,0)
 ;=======================================================================
"RTN","PXRMHL7",6,0)
HL7(HL7MSG) ;Main entry point for handling HL7 messages.
"RTN","PXRMHL7",7,0)
 N DFN,MSG,MSH,PKG,PXRMDFN
"RTN","PXRMHL7",8,0)
 S MSG=$S($L($G(HL7MSG)):HL7MSG,1:"HL7MSG")
"RTN","PXRMHL7",9,0)
 I '$O(@MSG@(0)) Q
"RTN","PXRMHL7",10,0)
 S MSH=0
"RTN","PXRMHL7",11,0)
 F  S MSH=$O(@MSG@(MSH)) Q:MSH'>0  Q:$E(@MSG@(MSH),1,3)="MSH"
"RTN","PXRMHL7",12,0)
 ;Get the patient
"RTN","PXRMHL7",13,0)
 S DFN=$$PID(MSH,MSG)
"RTN","PXRMHL7",14,0)
 S PXRMDFN="PXRMDFN"_DFN
"RTN","PXRMHL7",15,0)
 ;Get the package
"RTN","PXRMHL7",16,0)
 S PKG=$$PKG($P(@MSG@(MSH),"|",3))
"RTN","PXRMHL7",17,0)
 I PKG="PS" D KILLPC^PXRMPINF(PXRMDFN)
"RTN","PXRMHL7",18,0)
 Q
"RTN","PXRMHL7",19,0)
 ;
"RTN","PXRMHL7",20,0)
 ;=======================================================================
"RTN","PXRMHL7",21,0)
PID(MSH,MSG) ;Process the PID segment and return the DFN.
"RTN","PXRMHL7",22,0)
 N DFN,DONE,IND,SEG
"RTN","PXRMHL7",23,0)
 S DONE=0
"RTN","PXRMHL7",24,0)
 S IND=MSH
"RTN","PXRMHL7",25,0)
 F  S IND=$O(@MSG@(IND)) Q:(IND'>0)!(DONE)  D
"RTN","PXRMHL7",26,0)
 . S SEG=$E(@MSG@(IND),1,3)
"RTN","PXRMHL7",27,0)
 . I SEG="PID" D  Q
"RTN","PXRMHL7",28,0)
 .. S DFN=+$P(@MSG@(IND),"|",4)
"RTN","PXRMHL7",29,0)
 .. S DONE=1
"RTN","PXRMHL7",30,0)
 Q DFN
"RTN","PXRMHL7",31,0)
 ;
"RTN","PXRMHL7",32,0)
 ;=======================================================================
"RTN","PXRMHL7",33,0)
PKG(NAME) ;Return the package namespace.
"RTN","PXRMHL7",34,0)
 I NAME="CONSULTS" Q "GMRC"
"RTN","PXRMHL7",35,0)
 I NAME="DIETETICS" Q "FH"
"RTN","PXRMHL7",36,0)
 I NAME="LABORATORY" Q "LR"
"RTN","PXRMHL7",37,0)
 I NAME="PHARMACY" Q "PS"
"RTN","PXRMHL7",38,0)
 I NAME="PROCEDURES" Q "GMRC"
"RTN","PXRMHL7",39,0)
 I NAME="ORDER ENTRY" Q "ORG"
"RTN","PXRMHL7",40,0)
 I NAME="RADIOLOGY"!(NAME="IMAGING") Q "RA"
"RTN","PXRMHL7",41,0)
 Q ""
"RTN","PXRMHL7",42,0)
 ;
"RTN","PXRMICD9")
0^66^B25453
"RTN","PXRMICD9",1,0)
PXRMICD9 ; SLC/PKR - Return an ICD9 zero node. ;05/05/1999
"RTN","PXRMICD9",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMICD9",3,0)
 ;
"RTN","PXRMICD9",4,0)
GET0(IEN) ;Return the ICD9 0 node for this IEN.
"RTN","PXRMICD9",5,0)
 ;This read is covered by DBIA 10082.
"RTN","PXRMICD9",6,0)
 Q $G(^ICD9(IEN,0))
"RTN","PXRMICD9",7,0)
 ;
"RTN","PXRMIMM")
0^67^B14558994
"RTN","PXRMIMM",1,0)
PXRMIMM ; SLC/PKR - Handle immunization findings. ;04/17/2000
"RTN","PXRMIMM",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMIMM",3,0)
 ;
"RTN","PXRMIMM",4,0)
 ;=======================================================================
"RTN","PXRMIMM",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate immunization findings.
"RTN","PXRMIMM",6,0)
 N FIND0,FINDING,IMMIEN,INVDATE
"RTN","PXRMIMM",7,0)
 S IMMIEN=""
"RTN","PXRMIMM",8,0)
 F  S IMMIEN=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTIMM(",IMMIEN)) Q:+IMMIEN=0  D
"RTN","PXRMIMM",9,0)
 . S INVDATE=$O(^AUPNVIMM("AA",DFN,IMMIEN,""))
"RTN","PXRMIMM",10,0)
 . S FINDING=""
"RTN","PXRMIMM",11,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTIMM(",IMMIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMIMM",12,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMIMM",13,0)
 .. D FIEVAL(DFN,IMMIEN,INVDATE,FIND0,"",FINDING,.FIEVAL)
"RTN","PXRMIMM",14,0)
 Q
"RTN","PXRMIMM",15,0)
 ;
"RTN","PXRMIMM",16,0)
 ;=======================================================================
"RTN","PXRMIMM",17,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate immunization terms.
"RTN","PXRMIMM",18,0)
 N FIEVAL,FIND0,IMMIEN,INVDATE,TFIND0,TFINDING
"RTN","PXRMIMM",19,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMIMM",20,0)
 S IMMIEN=""
"RTN","PXRMIMM",21,0)
 F  S IMMIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTIMM(",IMMIEN)) Q:+IMMIEN=0  D
"RTN","PXRMIMM",22,0)
 . S INVDATE=$O(^AUPNVIMM("AA",DFN,IMMIEN,""))
"RTN","PXRMIMM",23,0)
 . S TFINDING=""
"RTN","PXRMIMM",24,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTIMM(",IMMIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMIMM",25,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMIMM",26,0)
 .. D FIEVAL(DFN,IMMIEN,INVDATE,FIND0,TFIND0,TFINDING,.TFIEVAL)
"RTN","PXRMIMM",27,0)
 Q
"RTN","PXRMIMM",28,0)
 ;
"RTN","PXRMIMM",29,0)
 ;=======================================================================
"RTN","PXRMIMM",30,0)
FIEVAL(DFN,IMMIEN,INVDATE,FIND0,TFIND0,FINDING,FIEVAL) ;
"RTN","PXRMIMM",31,0)
 N CONVAL,CONTRA,DATE,IEN,IND,REACTION,SERIES
"RTN","PXRMIMM",32,0)
 N TEMP,VALID,VIEN
"RTN","PXRMIMM",33,0)
 I INVDATE="" S FIEVAL(FINDING)=0 Q
"RTN","PXRMIMM",34,0)
 S IEN=$O(^AUPNVIMM("AA",DFN,IMMIEN,INVDATE,""))
"RTN","PXRMIMM",35,0)
 S TEMP=$G(^AUPNVIMM(IEN,0))
"RTN","PXRMIMM",36,0)
 S REACTION=$P(TEMP,U,6)
"RTN","PXRMIMM",37,0)
 S SERIES=$P(TEMP,U,4)
"RTN","PXRMIMM",38,0)
 S VIEN=$P(TEMP,U,3)
"RTN","PXRMIMM",39,0)
 S CONTRA=+$P(TEMP,U,7)
"RTN","PXRMIMM",40,0)
 S DATE=$$VDATE^PXRMDATE(VIEN)
"RTN","PXRMIMM",41,0)
 ;Save the rest of the finding information.
"RTN","PXRMIMM",42,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMIMM",43,0)
 S FIEVAL(FINDING,"CONTRAINDICATED")=CONTRA
"RTN","PXRMIMM",44,0)
 S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMIMM",45,0)
 S FIEVAL(FINDING,"FINDING")=IMMIEN_";AUTTIMM("
"RTN","PXRMIMM",46,0)
 S FIEVAL(FINDING,"REACTION")=REACTION
"RTN","PXRMIMM",47,0)
 S FIEVAL(FINDING,"SOURCE")=IEN_";AUPNVIMM("
"RTN","PXRMIMM",48,0)
 S FIEVAL(FINDING,"SERIES")=SERIES
"RTN","PXRMIMM",49,0)
 S FIEVAL(FINDING,"VALUE")=SERIES
"RTN","PXRMIMM",50,0)
 S FIEVAL(FINDING,"VIEN")=VIEN
"RTN","PXRMIMM",51,0)
 ;Determine if the finding has expired.
"RTN","PXRMIMM",52,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMIMM",53,0)
 I 'VALID D  Q
"RTN","PXRMIMM",54,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMIMM",55,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMIMM",56,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMIMM",57,0)
 S CONVAL=$$COND^PXRMUTIL(FIND0,TFIND0,SERIES)
"RTN","PXRMIMM",58,0)
 I CONVAL'="" D
"RTN","PXRMIMM",59,0)
 . I CONVAL D
"RTN","PXRMIMM",60,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMIMM",61,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMIMM",62,0)
 . E  D
"RTN","PXRMIMM",63,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMIMM",64,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMIMM",65,0)
 I CONTRA S ^TMP(PXRMPID,$J,PXRMITEM,"CONTRAINDICATED")=1
"RTN","PXRMIMM",66,0)
 Q
"RTN","PXRMIMM",67,0)
 ;
"RTN","PXRMIMM",68,0)
 ;=======================================================================
"RTN","PXRMIMM",69,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMIMM",70,0)
 ;maintenance output.
"RTN","PXRMIMM",71,0)
 N IMMIEN,EM,FIEN,IND,PNAME,REACTION,SERIES,TEMP,VDATE
"RTN","PXRMIMM",72,0)
 S IMMIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMIMM",73,0)
 S FIEN=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMIMM",74,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMIMM",75,0)
 S REACTION=$G(FIEVAL(FINDING,"REACTION"))
"RTN","PXRMIMM",76,0)
 S SERIES=$G(FIEVAL(FINDING,"VALUE"))
"RTN","PXRMIMM",77,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMIMM",78,0)
 S TEMP=TEMP_" Immunization: "
"RTN","PXRMIMM",79,0)
 S IND=$P(^AUPNVIMM(IMMIEN,0),U,1)
"RTN","PXRMIMM",80,0)
 S PNAME=$P(^AUTTIMM(FIEN,0),U,1)
"RTN","PXRMIMM",81,0)
 S TEMP=TEMP_PNAME
"RTN","PXRMIMM",82,0)
 I $L(SERIES)>0 D
"RTN","PXRMIMM",83,0)
 . S TEMP=TEMP_"; series - "
"RTN","PXRMIMM",84,0)
 . S TEMP=TEMP_$$EXTERNAL^DILFD(9000010.11,.04,"",SERIES,.EM)
"RTN","PXRMIMM",85,0)
 I $L(REACTION)>0 D
"RTN","PXRMIMM",86,0)
 . S TEMP=TEMP_"; reaction - "
"RTN","PXRMIMM",87,0)
 . S TEMP=TEMP_$$EXTERNAL^DILFD(9000010.11,.06,"",REACTION,.EM)
"RTN","PXRMIMM",88,0)
 I FIEVAL(FINDING,"CONTRAINDICATED") D
"RTN","PXRMIMM",89,0)
 . S TEMP=TEMP_" - CONTRAINDICATED"
"RTN","PXRMIMM",90,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMIMM",91,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMIMM",92,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMIMM",93,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMIMM",94,0)
 S NLINES=NLINES+1
"RTN","PXRMIMM",95,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMIMM",96,0)
 I $D(PXRMDEV) D
"RTN","PXRMIMM",97,0)
 . N UID
"RTN","PXRMIMM",98,0)
 . S UID="IMM "_PNAME
"RTN","PXRMIMM",99,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMIMM",100,0)
 ;
"RTN","PXRMIMM",101,0)
 ;For historical encounters display the location and comments.
"RTN","PXRMIMM",102,0)
 I VDATE["E" D
"RTN","PXRMIMM",103,0)
 . N INDEX,VIEN
"RTN","PXRMIMM",104,0)
 . S INDEX="IMM-"_PNAME
"RTN","PXRMIMM",105,0)
 . S VIEN=FIEVAL(FINDING,"VIEN")
"RTN","PXRMIMM",106,0)
 . D HLCV^PXRMVSIT(.NLINES,.TEXT,VIEN,INDEX)
"RTN","PXRMIMM",107,0)
 Q
"RTN","PXRMIMM",108,0)
 ;
"RTN","PXRMINQ")
0^97^B5852632
"RTN","PXRMINQ",1,0)
PXRMINQ ; SLC/PKR - Clinical Reminder inquiry routines. ;05/18/2000
"RTN","PXRMINQ",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMINQ",3,0)
 ;
"RTN","PXRMINQ",4,0)
 ;======================================================================
"RTN","PXRMINQ",5,0)
DISP(DIC,FLDS) ;Display detail.
"RTN","PXRMINQ",6,0)
 N L
"RTN","PXRMINQ",7,0)
 S L=0
"RTN","PXRMINQ",8,0)
 D EN1^DIP
"RTN","PXRMINQ",9,0)
 Q
"RTN","PXRMINQ",10,0)
 ;
"RTN","PXRMINQ",11,0)
 ;======================================================================
"RTN","PXRMINQ",12,0)
HEADER(TEXT) ;Display Header (see DHD variable).
"RTN","PXRMINQ",13,0)
 N TEMP,TEXTLEN,TEXTUND
"RTN","PXRMINQ",14,0)
 S TEXTUND=$TR($J("",IOM)," ","-")
"RTN","PXRMINQ",15,0)
 S TEMP=NOW_"  Page "_DC
"RTN","PXRMINQ",16,0)
 S TEXTLEN=$L(TEMP)
"RTN","PXRMINQ",17,0)
 W TEXT
"RTN","PXRMINQ",18,0)
 W ?(IOM-TEXTLEN),TEMP
"RTN","PXRMINQ",19,0)
 W !,TEXTUND,!!
"RTN","PXRMINQ",20,0)
 Q
"RTN","PXRMINQ",21,0)
 ;
"RTN","PXRMINQ",22,0)
 ;======================================================================
"RTN","PXRMINQ",23,0)
REM ;Do reminder inquiry.
"RTN","PXRMINQ",24,0)
 N BY,DC,DHD,FLDS,FROM,IENN,NOW,PXRMFVPL,PXRMROOT,TO
"RTN","PXRMINQ",25,0)
 ;Build the finding variable pointer information.
"RTN","PXRMINQ",26,0)
 D BLDLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMINQ",27,0)
 S FLDS="[PXRM DEFINITION INQUIRY]"
"RTN","PXRMINQ",28,0)
 S IENN=0
"RTN","PXRMINQ",29,0)
 S PXRMROOT="^PXD(811.9,"
"RTN","PXRMINQ",30,0)
 F  Q:IENN=-1  D
"RTN","PXRMINQ",31,0)
 . S IENN=$$SELECT(PXRMROOT,"Select Reminder Definition: ")
"RTN","PXRMINQ",32,0)
 . I IENN=-1 Q
"RTN","PXRMINQ",33,0)
 . D SET(IENN,"REMINDER DEFINITION INQUIRY")
"RTN","PXRMINQ",34,0)
 . D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",35,0)
 Q
"RTN","PXRMINQ",36,0)
 ;
"RTN","PXRMINQ",37,0)
 ;======================================================================
"RTN","PXRMINQ",38,0)
SELECT(ROOT,PROMPT) ;Select the entry.
"RTN","PXRMINQ",39,0)
 N DIC,Y
"RTN","PXRMINQ",40,0)
 S DIC=ROOT
"RTN","PXRMINQ",41,0)
 S DIC(0)="AEMQ"
"RTN","PXRMINQ",42,0)
 S DIC("A")=PROMPT
"RTN","PXRMINQ",43,0)
 D ^DIC
"RTN","PXRMINQ",44,0)
 Q Y
"RTN","PXRMINQ",45,0)
 ;
"RTN","PXRMINQ",46,0)
 ;======================================================================
"RTN","PXRMINQ",47,0)
SET(Y,TEXT) ;Set data for the header.
"RTN","PXRMINQ",48,0)
 S NOW=$$NOW^XLFDT
"RTN","PXRMINQ",49,0)
 S NOW=$$FMTE^XLFDT(NOW,"1P")
"RTN","PXRMINQ",50,0)
 ;
"RTN","PXRMINQ",51,0)
 ;These variables need to be setup every time because DIP kills them.
"RTN","PXRMINQ",52,0)
 S BY="NUMBER"
"RTN","PXRMINQ",53,0)
 S (FR,TO)=+$P(Y,U,1)
"RTN","PXRMINQ",54,0)
 S DHD="W ?0 D HEADER^PXRMINQ("""_TEXT_""")"
"RTN","PXRMINQ",55,0)
 Q
"RTN","PXRMINQ",56,0)
 ;
"RTN","PXRMINQ",57,0)
 ;======================================================================
"RTN","PXRMINQ",58,0)
TAX ;Do taxonomy inquiry.
"RTN","PXRMINQ",59,0)
 N BY,DC,DHD,FLDS,FROM,IENN,NOW,PXRMFVPL,PXRMROOT,TO
"RTN","PXRMINQ",60,0)
 S FLDS="[PXRM TAXONOMY INQUIRY]"
"RTN","PXRMINQ",61,0)
 S IENN=0
"RTN","PXRMINQ",62,0)
 S PXRMROOT="^PXD(811.2,"
"RTN","PXRMINQ",63,0)
 F  Q:IENN=-1  D
"RTN","PXRMINQ",64,0)
 . S IENN=$$SELECT(PXRMROOT,"Select Reminder Taxonomy: ")
"RTN","PXRMINQ",65,0)
 . I IENN=-1 Q
"RTN","PXRMINQ",66,0)
 . D SET(IENN,"REMINDER TAXONOMY INQUIRY")
"RTN","PXRMINQ",67,0)
 . D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",68,0)
 Q
"RTN","PXRMINQ",69,0)
 ;
"RTN","PXRMINQ",70,0)
 ;======================================================================
"RTN","PXRMINQ",71,0)
TERM ;Do term inquiry.
"RTN","PXRMINQ",72,0)
 N BY,DC,DHD,FLDS,FROM,IENN,NOW,PXRMFVPL,PXRMROOT,TO
"RTN","PXRMINQ",73,0)
 ;Build the finding variable pointer information
"RTN","PXRMINQ",74,0)
 D BLDLIST^PXRMVPTR(811.52,.01,.PXRMFVPL)
"RTN","PXRMINQ",75,0)
 S FLDS="[PXRM TERM INQUIRY]"
"RTN","PXRMINQ",76,0)
 S IENN=0
"RTN","PXRMINQ",77,0)
 S PXRMROOT="^PXRMD(811.5,"
"RTN","PXRMINQ",78,0)
 F  Q:IENN=-1  D
"RTN","PXRMINQ",79,0)
 . S IENN=$$SELECT(PXRMROOT,"Select Reminder Term: ")
"RTN","PXRMINQ",80,0)
 . I IENN=-1 Q
"RTN","PXRMINQ",81,0)
 . D SET(IENN,"REMINDER TERM INQUIRY")
"RTN","PXRMINQ",82,0)
 . D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",83,0)
 Q
"RTN","PXRMINQ",84,0)
 ;
"RTN","PXRMINTR")
0^69^B21931694
"RTN","PXRMINTR",1,0)
PXRMINTR ; SLC/PKR - Input transforms for Clinical Reminders. ;06/13/2000
"RTN","PXRMINTR",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMINTR",3,0)
 ;
"RTN","PXRMINTR",4,0)
 ;=======================================================================
"RTN","PXRMINTR",5,0)
VCOND(X) ;Make sure X is a valid CONDITION.
"RTN","PXRMINTR",6,0)
 I '$D(X) Q
"RTN","PXRMINTR",7,0)
 ;The CONDITION must start with "I ".
"RTN","PXRMINTR",8,0)
 I $E(X,1,2)'="I " D  Q
"RTN","PXRMINTR",9,0)
 . K X
"RTN","PXRMINTR",10,0)
 . D EN^DDIOL("CONDITION must start with ""I"" followed by a single space")
"RTN","PXRMINTR",11,0)
 N COND,CS,RS
"RTN","PXRMINTR",12,0)
 ;Find the condition and the left and right sides.
"RTN","PXRMINTR",13,0)
 S (CS,RS)=""
"RTN","PXRMINTR",14,0)
 F COND="=",">","<","[","]" Q:CS'=""  D
"RTN","PXRMINTR",15,0)
 . S RS=$P(X,COND,2)
"RTN","PXRMINTR",16,0)
 . I RS'="" S CS=COND
"RTN","PXRMINTR",17,0)
 I CS="" D  Q
"RTN","PXRMINTR",18,0)
 . K X
"RTN","PXRMINTR",19,0)
 . D EN^DDIOL("CONDITION must use a conditional operator i.e., =, >, <, [, or ]")
"RTN","PXRMINTR",20,0)
 ;As a safety measure everything after the "I " cannot contain space
"RTN","PXRMINTR",21,0)
 ;or ^.
"RTN","PXRMINTR",22,0)
 S RS=$E(X,3,$L(X))
"RTN","PXRMINTR",23,0)
 S RS=$TR(RS," ^","~")
"RTN","PXRMINTR",24,0)
 S X="I "_RS
"RTN","PXRMINTR",25,0)
 D ^DIM
"RTN","PXRMINTR",26,0)
 I '$D(X) D EN^DDIOL("This is not a valid CONDITION")
"RTN","PXRMINTR",27,0)
 Q
"RTN","PXRMINTR",28,0)
 ;
"RTN","PXRMINTR",29,0)
 ;=======================================================================
"RTN","PXRMINTR",30,0)
VFINDING(X) ;Check X to see if it is a valid finding. This is the input
"RTN","PXRMINTR",31,0)
 ;transform on the .01 field of the reminder findings multiple. Data
"RTN","PXRMINTR",32,0)
 ;element 811.902,.01.
"RTN","PXRMINTR",33,0)
 ;Include stubs for all possible finding types in case we need input
"RTN","PXRMINTR",34,0)
 ;transforms on them.
"RTN","PXRMINTR",35,0)
 ;I X["AUTTEDT(" Q 1
"RTN","PXRMINTR",36,0)
 ;I X["AUTTEXAM(" Q 1
"RTN","PXRMINTR",37,0)
 I X["AUTTHF(" Q $$VHF(X)
"RTN","PXRMINTR",38,0)
 ;I X["AUTTIMM(" Q 1
"RTN","PXRMINTR",39,0)
 ;I X["AUTTSK(" Q 1
"RTN","PXRMINTR",40,0)
 ;I X["GMRD(120.51," Q 1
"RTN","PXRMINTR",41,0)
 I X["LAB(60," Q $$VLAB(X)
"RTN","PXRMINTR",42,0)
 ;I X["ORD(101.43," Q 1
"RTN","PXRMINTR",43,0)
 I X["PXD(811.2," Q $$VTAX(X)
"RTN","PXRMINTR",44,0)
 ;I X["PXRMD(811.4," Q 1
"RTN","PXRMINTR",45,0)
 ;I X["PXRMD(811.5," Q 1
"RTN","PXRMINTR",46,0)
 ;I X["PS(50.605," Q 1
"RTN","PXRMINTR",47,0)
 ;I X["PSDRUG(" Q 1
"RTN","PXRMINTR",48,0)
 ;I X["PSNDF(50.6," Q 1
"RTN","PXRMINTR",49,0)
 ;I X["RAMIS(71," Q 1
"RTN","PXRMINTR",50,0)
 I X["YTT(601," Q $$VMH(X)
"RTN","PXRMINTR",51,0)
 Q 1
"RTN","PXRMINTR",52,0)
 ;
"RTN","PXRMINTR",53,0)
 ;=======================================================================
"RTN","PXRMINTR",54,0)
VHF(X) ;Check for valid health factor findings. It must be a factor, not
"RTN","PXRMINTR",55,0)
 ;a category.
"RTN","PXRMINTR",56,0)
 N CAT,IEN,TEMP,TYPE
"RTN","PXRMINTR",57,0)
 S IEN=$P(X,";",1)
"RTN","PXRMINTR",58,0)
 S TEMP=$G(^AUTTHF(IEN,0))
"RTN","PXRMINTR",59,0)
 S TYPE=$P(TEMP,U,10)
"RTN","PXRMINTR",60,0)
 I TYPE="C" D  Q 0
"RTN","PXRMINTR",61,0)
 . D EN^DDIOL("Category health factors cannot be used in reminder definitions!")
"RTN","PXRMINTR",62,0)
 I TYPE'="F" D  Q 0
"RTN","PXRMINTR",63,0)
 . D EN^DDIOL("Only factor health factors can be used in reminder definitions!")
"RTN","PXRMINTR",64,0)
 ;Make sure that the health factor has a category.
"RTN","PXRMINTR",65,0)
 S CAT=$P(TEMP,U,3)
"RTN","PXRMINTR",66,0)
 I CAT="" D  Q 0
"RTN","PXRMINTR",67,0)
 . D EN^DDIOL("Factor health factors must have a category!")
"RTN","PXRMINTR",68,0)
 Q 1
"RTN","PXRMINTR",69,0)
 ;
"RTN","PXRMINTR",70,0)
 ;=======================================================================
"RTN","PXRMINTR",71,0)
VIGNAC(X) ;Check X to see if it contains valid IGNORE ON N/A codes.
"RTN","PXRMINTR",72,0)
 ;This is part of the input transform for this field. The length of the
"RTN","PXRMINTR",73,0)
 ;IGNORE ON N/A field is 8 characters. The valid codes are:
"RTN","PXRMINTR",74,0)
 ;   A - age
"RTN","PXRMINTR",75,0)
 ;   I - inactive
"RTN","PXRMINTR",76,0)
 ;   R - race
"RTN","PXRMINTR",77,0)
 ;   S - sex
"RTN","PXRMINTR",78,0)
 ;   * - wildcard matches anything.
"RTN","PXRMINTR",79,0)
 N LEN
"RTN","PXRMINTR",80,0)
 S LEN=$L(X)
"RTN","PXRMINTR",81,0)
 I (LEN>8)!(LEN<1) Q 0
"RTN","PXRMINTR",82,0)
 ;
"RTN","PXRMINTR",83,0)
 N TEMP,TEXT
"RTN","PXRMINTR",84,0)
 S TEMP=X
"RTN","PXRMINTR",85,0)
 S TEMP=$TR(TEMP,"A","")
"RTN","PXRMINTR",86,0)
 S TEMP=$TR(TEMP,"I","")
"RTN","PXRMINTR",87,0)
 S TEMP=$TR(TEMP,"R","")
"RTN","PXRMINTR",88,0)
 S TEMP=$TR(TEMP,"S","")
"RTN","PXRMINTR",89,0)
 S TEMP=$TR(TEMP,"*","")
"RTN","PXRMINTR",90,0)
 ;At this point TEMP should be NULL,if it is not then there are
"RTN","PXRMINTR",91,0)
 ;bad codes.
"RTN","PXRMINTR",92,0)
 S LEN=$L(TEMP)
"RTN","PXRMINTR",93,0)
 I LEN=1 D  Q 0
"RTN","PXRMINTR",94,0)
 . S TEXT=TEMP_" is not a valid IGNORE ON N/A code!"
"RTN","PXRMINTR",95,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",96,0)
 I LEN>1 D  Q 0
"RTN","PXRMINTR",97,0)
 . S TEXT=TEMP_" are not valid IGNORE ON N/A codes!"
"RTN","PXRMINTR",98,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",99,0)
 Q 1
"RTN","PXRMINTR",100,0)
 ;
"RTN","PXRMINTR",101,0)
 ;=======================================================================
"RTN","PXRMINTR",102,0)
VLAB(X) ;Check for valid lab findings. They must be in the
"RTN","PXRMINTR",103,0)
 ;chemistry/hematology node and are not a panel.
"RTN","PXRMINTR",104,0)
 I X'["LAB(60" Q 1
"RTN","PXRMINTR",105,0)
 N LAB0,LABTEST,TEST,WARN
"RTN","PXRMINTR",106,0)
 S LABTEST=$P(X,";",1)
"RTN","PXRMINTR",107,0)
 S LAB0=^LAB(60,LABTEST,0)
"RTN","PXRMINTR",108,0)
 S WARN='+$P(X,";",3)
"RTN","PXRMINTR",109,0)
 I $P(LAB0,U,4)'["CH" D  Q 0
"RTN","PXRMINTR",110,0)
 . I WARN D
"RTN","PXRMINTR",111,0)
 .. S TEXT(1)=$P(LAB0,U,1)_" is not a ""CH"" subscript lab, cannot be used for a reminder!"
"RTN","PXRMINTR",112,0)
 .. S TEXT(2)="Contact your Lab ADPAC for help"
"RTN","PXRMINTR",113,0)
 .. D EN^DDIOL(.TEXT)
"RTN","PXRMINTR",114,0)
 I $P($P(LAB0,U,5),";",2)="" D  Q 0
"RTN","PXRMINTR",115,0)
 . I WARN D
"RTN","PXRMINTR",116,0)
 .. S TEXT(1)=$P(LAB0,U,1)_" is a lab panel, cannot be used for a reminder!"
"RTN","PXRMINTR",117,0)
 .. S TEXT(2)="Contact your Lab ADPAC for help"
"RTN","PXRMINTR",118,0)
 .. D EN^DDIOL(.TEXT)
"RTN","PXRMINTR",119,0)
 Q 1
"RTN","PXRMINTR",120,0)
 ;
"RTN","PXRMINTR",121,0)
 ;=======================================================================
"RTN","PXRMINTR",122,0)
VMH(X) ;The site must have the routine YTAPI installed in order to use
"RTN","PXRMINTR",123,0)
 ;mental health instrument findings.
"RTN","PXRMINTR",124,0)
 N EXISTS
"RTN","PXRMINTR",125,0)
 S EXISTS=$$EXISTS^PXRMEXCF("YTAPI")
"RTN","PXRMINTR",126,0)
 I EXISTS Q 1
"RTN","PXRMINTR",127,0)
 N TEXT
"RTN","PXRMINTR",128,0)
 S TEXT(1)="Your site does not have the routine YTAPI installed."
"RTN","PXRMINTR",129,0)
 S TEXT(2)="It is required in order to use Mental Instrument findings."
"RTN","PXRMINTR",130,0)
 S TEXT(3)="The routine was originally released in patch YS*5.01*53."
"RTN","PXRMINTR",131,0)
 S TEXT(4)=" "
"RTN","PXRMINTR",132,0)
 D EN^DDIOL(.TEXT)
"RTN","PXRMINTR",133,0)
 Q 0
"RTN","PXRMINTR",134,0)
 ;
"RTN","PXRMINTR",135,0)
 ;=======================================================================
"RTN","PXRMINTR",136,0)
VNAME(NAME,FILE) ;Check for valid .01 value.
"RTN","PXRMINTR",137,0)
 ;For files 811.2, 811.4 and 811.9 the name cannot start with VA-
"RTN","PXRMINTR",138,0)
 ;unless this is a national reminder.
"RTN","PXRMINTR",139,0)
 N STEXT,TEXT,VALID
"RTN","PXRMINTR",140,0)
 S VALID=1
"RTN","PXRMINTR",141,0)
 I (FILE=811.2)!(FILE=811.4)!(FILE=811.9) D
"RTN","PXRMINTR",142,0)
 . S STEXT=$E(NAME,1,3)
"RTN","PXRMINTR",143,0)
 . I (STEXT="VA-"),(($G(PXRMINST)'=1)!(DUZ(0)'="@")) D
"RTN","PXRMINTR",144,0)
 .. S TEXT=NAME_" cannot start with ""VA-"", reserved for national distribution!"
"RTN","PXRMINTR",145,0)
 .. D EN^DDIOL(TEXT)
"RTN","PXRMINTR",146,0)
 .. H 2
"RTN","PXRMINTR",147,0)
 .. S VALID=0
"RTN","PXRMINTR",148,0)
 Q VALID
"RTN","PXRMINTR",149,0)
 ;
"RTN","PXRMINTR",150,0)
 ;=======================================================================
"RTN","PXRMINTR",151,0)
VTAX(X) ;Make sure the taxonomy is active.
"RTN","PXRMINTR",152,0)
 N IEN,INACTIVE
"RTN","PXRMINTR",153,0)
 S IEN=$P(X,";",1)
"RTN","PXRMINTR",154,0)
 S INACTIVE=$P(^PXD(811.2,IEN,0),U,6)
"RTN","PXRMINTR",155,0)
 I INACTIVE D  Q 0
"RTN","PXRMINTR",156,0)
 . D EN^DDIOL("This taxonomy is inactive and cannot be selected.")
"RTN","PXRMINTR",157,0)
 E  Q 1
"RTN","PXRMINTR",158,0)
 ;
"RTN","PXRMINTR",159,0)
 ;=======================================================================
"RTN","PXRMINTR",160,0)
VTPER(X) ;Check for valid time period. They must be of the form NS,
"RTN","PXRMINTR",161,0)
 ; where N is a number and S is D for days, M for months, or Y for years.
"RTN","PXRMINTR",162,0)
 N LEN
"RTN","PXRMINTR",163,0)
 S X=$$UP^XLFSTR(X)
"RTN","PXRMINTR",164,0)
 S LEN=$L(X)
"RTN","PXRMINTR",165,0)
 I (LEN>5)!(LEN<2) Q 0
"RTN","PXRMINTR",166,0)
 I ((X'?1N.N1"D")&(X'?1N.N1"M")&(X'?1N.N1"Y")) Q 0
"RTN","PXRMINTR",167,0)
 Q 1
"RTN","PXRMINTR",168,0)
 ;
"RTN","PXRMLAB")
0^70^B12421557
"RTN","PXRMLAB",1,0)
PXRMLAB ; SLC/PKR - Handle laboratory test findings. ;05/18/2000
"RTN","PXRMLAB",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMLAB",3,0)
 ;
"RTN","PXRMLAB",4,0)
 ;=======================================================================
"RTN","PXRMLAB",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate laboratory test findings.
"RTN","PXRMLAB",6,0)
 N FIND0,FINDING,LABIEN
"RTN","PXRMLAB",7,0)
 S LABIEN=""
"RTN","PXRMLAB",8,0)
 F  S LABIEN=$O(^PXD(811.9,PXRMITEM,20,"E","LAB(60,",LABIEN)) Q:+LABIEN=0  D
"RTN","PXRMLAB",9,0)
 . S FINDING=""
"RTN","PXRMLAB",10,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","LAB(60,",LABIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMLAB",11,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMLAB",12,0)
 .. D FIEVAL(DFN,LABIEN,FIND0,"",FINDING,.FIEVAL)
"RTN","PXRMLAB",13,0)
 Q
"RTN","PXRMLAB",14,0)
 ;
"RTN","PXRMLAB",15,0)
 ;=======================================================================
"RTN","PXRMLAB",16,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate laboratory test terms.
"RTN","PXRMLAB",17,0)
 N FIND0,LABIEN,LFIEVAL,TFIND0,TFINDING
"RTN","PXRMLAB",18,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMLAB",19,0)
 S LABIEN=""
"RTN","PXRMLAB",20,0)
 F  S LABIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","LAB(60,",LABIEN)) Q:+LABIEN=0  D
"RTN","PXRMLAB",21,0)
 . S TFINDING=""
"RTN","PXRMLAB",22,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","LAB(60,",LABIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMLAB",23,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMLAB",24,0)
 .. D FIEVAL(DFN,LABIEN,FIND0,TFIND0,TFINDING,.TFIEVAL)
"RTN","PXRMLAB",25,0)
 Q
"RTN","PXRMLAB",26,0)
 ;
"RTN","PXRMLAB",27,0)
 ;=======================================================================
"RTN","PXRMLAB",28,0)
FIEVAL(DFN,LABIEN,FIND0,TFIND0,FINDING,FIEVAL) ;
"RTN","PXRMLAB",29,0)
 N CONVAL,DATA,DATE,IEN,IND,INVDATE,LRT
"RTN","PXRMLAB",30,0)
 N SEQ,RESULT,STATUS,VALID,VALUE
"RTN","PXRMLAB",31,0)
 K ^TMP("LRRR",$J)
"RTN","PXRMLAB",32,0)
 D RR^LR7OR1(DFN,"","","","CH",LABIEN,"",1)
"RTN","PXRMLAB",33,0)
 S INVDATE=$O(^TMP("LRRR",$J,DFN,"CH",""))
"RTN","PXRMLAB",34,0)
 I INVDATE="" S FIEVAL(FINDING)=0 K ^TMP("LRRR",$J) Q
"RTN","PXRMLAB",35,0)
 ;Order the results putting cancelled or pending last.
"RTN","PXRMLAB",36,0)
 S INVDATE=""
"RTN","PXRMLAB",37,0)
 F  S INVDATE=$O(^TMP("LRRR",$J,DFN,"CH",INVDATE)) Q:+INVDATE=0  D
"RTN","PXRMLAB",38,0)
 . S SEQ=""
"RTN","PXRMLAB",39,0)
 . F  S SEQ=$O(^TMP("LRRR",$J,DFN,"CH",INVDATE,SEQ)) Q:+SEQ=0  D
"RTN","PXRMLAB",40,0)
 .. S DATA=^TMP("LRRR",$J,DFN,"CH",INVDATE,SEQ)
"RTN","PXRMLAB",41,0)
 .. S RESULT=$P(DATA,U,2)
"RTN","PXRMLAB",42,0)
 .. I (RESULT="canc")!(RESULT="pending") S STATUS=1
"RTN","PXRMLAB",43,0)
 .. E  S STATUS=0
"RTN","PXRMLAB",44,0)
 .. S LRT(STATUS,INVDATE)=DATA
"RTN","PXRMLAB",45,0)
 K ^TMP("LRRR",$J)
"RTN","PXRMLAB",46,0)
 ;Process the list.
"RTN","PXRMLAB",47,0)
 S STATUS=""
"RTN","PXRMLAB",48,0)
 S STATUS=$O(LRT(STATUS))
"RTN","PXRMLAB",49,0)
 I STATUS'=0 S FIEVAL(FINDING)=0 Q
"RTN","PXRMLAB",50,0)
 S INVDATE=$O(LRT(STATUS,INVDATE))
"RTN","PXRMLAB",51,0)
 S DATE=$$FMDFINVL^PXRMDATE(INVDATE,0)
"RTN","PXRMLAB",52,0)
 ;Save the rest of the finding information.
"RTN","PXRMLAB",53,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMLAB",54,0)
 S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMLAB",55,0)
 S FIEVAL(FINDING,"FINDING")=LABIEN_";LAB(60,"
"RTN","PXRMLAB",56,0)
 S DATA=LRT(STATUS,INVDATE)
"RTN","PXRMLAB",57,0)
 S FIEVAL(FINDING,"DATA")=DATA
"RTN","PXRMLAB",58,0)
 S VALUE=$P(DATA,U,2)
"RTN","PXRMLAB",59,0)
 S FIEVAL(FINDING,"RESULT")=$P(DATA,U,2)
"RTN","PXRMLAB",60,0)
 S FIEVAL(FINDING,"VALUE")=FIEVAL(FINDING,"RESULT")
"RTN","PXRMLAB",61,0)
 ;Determine if the finding has expired.
"RTN","PXRMLAB",62,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMLAB",63,0)
 I 'VALID D  Q
"RTN","PXRMLAB",64,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMLAB",65,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMLAB",66,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMLAB",67,0)
 S CONVAL=$$COND^PXRMUTIL(FIND0,TFIND0,FIEVAL(FINDING,"VALUE"))
"RTN","PXRMLAB",68,0)
 I CONVAL'="" D
"RTN","PXRMLAB",69,0)
 . I CONVAL D
"RTN","PXRMLAB",70,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMLAB",71,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMLAB",72,0)
 . E  D
"RTN","PXRMLAB",73,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMLAB",74,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMLAB",75,0)
 Q
"RTN","PXRMLAB",76,0)
 ;
"RTN","PXRMLAB",77,0)
 ;=======================================================================
"RTN","PXRMLAB",78,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMLAB",79,0)
 ;maintenance output.
"RTN","PXRMLAB",80,0)
 N DATA,DATE,LABIEN,PNAME,TEMP,VALUE
"RTN","PXRMLAB",81,0)
 S DATA=FIEVAL(FINDING,"DATA")
"RTN","PXRMLAB",82,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMLAB",83,0)
 S VALUE=$G(FIEVAL(FINDING,"VALUE"))
"RTN","PXRMLAB",84,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMLAB",85,0)
 S TEMP=TEMP_" Laboratory test: "
"RTN","PXRMLAB",86,0)
 S PNAME=$P(DATA,U,10)
"RTN","PXRMLAB",87,0)
 I $L(PNAME)=0 S PNAME=$P(DATA,U,15)
"RTN","PXRMLAB",88,0)
 S TEMP=TEMP_PNAME
"RTN","PXRMLAB",89,0)
 I $L(VALUE)>0 D
"RTN","PXRMLAB",90,0)
 . S TEMP=TEMP_"; value - "
"RTN","PXRMLAB",91,0)
 . S TEMP=TEMP_VALUE
"RTN","PXRMLAB",92,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMLAB",93,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMLAB",94,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMLAB",95,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMLAB",96,0)
 S NLINES=NLINES+1
"RTN","PXRMLAB",97,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMLAB",98,0)
 I $D(PXRMDEV) D
"RTN","PXRMLAB",99,0)
 . N UID
"RTN","PXRMLAB",100,0)
 . S UID="LAB "_PNAME
"RTN","PXRMLAB",101,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMLAB",102,0)
 Q
"RTN","PXRMLAB",103,0)
 ;
"RTN","PXRMLFNF")
0^175^B2763090
"RTN","PXRMLFNF",1,0)
PXRMLFNF ;SLC/PKR - Routines for logic found/not found text. ;05/18/2000
"RTN","PXRMLFNF",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMLFNF",3,0)
 ;
"RTN","PXRMLFNF",4,0)
 ;=======================================================================
"RTN","PXRMLFNF",5,0)
FNFTXT(NLINES,TEXT,DFN,DES,FNFTR) ;Process the logic found not found text.
"RTN","PXRMLFNF",6,0)
 N LC,TA,X,UID,VSTR
"RTN","PXRMLFNF",7,0)
 K ^TMP("TIUBOIL",$J)
"RTN","PXRMLFNF",8,0)
 D BLRPLT^TIUSRVD(.TA,"",DFN,"",FNFTR)
"RTN","PXRMLFNF",9,0)
 D DIWPK^PXRMUTIL
"RTN","PXRMLFNF",10,0)
 S LC=0
"RTN","PXRMLFNF",11,0)
 F LC=1:1:$P(^TMP("TIUBOIL",$J,0),U,3) D
"RTN","PXRMLFNF",12,0)
 . S X=$G(^TMP("TIUBOIL",$J,LC,0))
"RTN","PXRMLFNF",13,0)
 . D ^DIWP
"RTN","PXRMLFNF",14,0)
 S LC=0
"RTN","PXRMLFNF",15,0)
 F  S LC=$O(^UTILITY($J,"W",0,LC)) Q:LC=""  D
"RTN","PXRMLFNF",16,0)
 . S NLINES=NLINES+1
"RTN","PXRMLFNF",17,0)
 . S TEXT(NLINES)=^UTILITY($J,"W",0,LC,0)
"RTN","PXRMLFNF",18,0)
 . I $D(PXRMDEV) D
"RTN","PXRMLFNF",19,0)
 .. S UID=DES_$$NTOAN^PXRMUTIL(LC)
"RTN","PXRMLFNF",20,0)
 .. S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEXT(NLINES)
"RTN","PXRMLFNF",21,0)
 D DIWPK^PXRMUTIL
"RTN","PXRMLFNF",22,0)
 K ^TMP("TIUBOIL",$J)
"RTN","PXRMLFNF",23,0)
 Q
"RTN","PXRMLFNF",24,0)
 ;
"RTN","PXRMLFNF",25,0)
 ;=======================================================================
"RTN","PXRMLFNF",26,0)
PCL(NLINES,TEXT,DFN,PCLOGIC) ;Output Patient Cohort Logic found/not found
"RTN","PXRMLFNF",27,0)
 ;text.
"RTN","PXRMLFNF",28,0)
 N DES,FNFTR,FOUND
"RTN","PXRMLFNF",29,0)
 S FOUND=$P(PCLOGIC,U,1)
"RTN","PXRMLFNF",30,0)
 I FOUND D
"RTN","PXRMLFNF",31,0)
 . S FNFTR="^PXD(811.9,"_PXRMITEM_",60)"
"RTN","PXRMLFNF",32,0)
 . S DES="PCL_FOUND"
"RTN","PXRMLFNF",33,0)
 E  D
"RTN","PXRMLFNF",34,0)
 . S FNFTR="^PXD(811.9,"_PXRMITEM_",61)"
"RTN","PXRMLFNF",35,0)
 . S DES="PCL_NOT FOUND"
"RTN","PXRMLFNF",36,0)
 D FNFTXT(.NLINES,.TEXT,DFN,DES,FNFTR)
"RTN","PXRMLFNF",37,0)
 Q
"RTN","PXRMLFNF",38,0)
 ;
"RTN","PXRMLFNF",39,0)
 ;=======================================================================
"RTN","PXRMLFNF",40,0)
RESL(NLINES,TEXT,DFN,RESLOGIC) ;Output Resolution Logic found/not found text.
"RTN","PXRMLFNF",41,0)
 N DES,FNFTR,FOUND
"RTN","PXRMLFNF",42,0)
 S FOUND=$P(RESLOGIC,U,1)
"RTN","PXRMLFNF",43,0)
 I FOUND D
"RTN","PXRMLFNF",44,0)
 . S FNFTR="^PXD(811.9,"_PXRMITEM_",65)"
"RTN","PXRMLFNF",45,0)
 . S DES="RES_FOUND"
"RTN","PXRMLFNF",46,0)
 E  D
"RTN","PXRMLFNF",47,0)
 . S FNFTR="^PXD(811.9,"_PXRMITEM_",66)"
"RTN","PXRMLFNF",48,0)
 . S DES="RES_NOT FOUND"
"RTN","PXRMLFNF",49,0)
 D FNFTXT(.NLINES,.TEXT,DFN,DES,FNFTR)
"RTN","PXRMLFNF",50,0)
 S FOUND=$P(RESLOGIC,U,1)
"RTN","PXRMLFNF",51,0)
 Q
"RTN","PXRMLFNF",52,0)
 ;
"RTN","PXRMLIST")
0^71^B4829801
"RTN","PXRMLIST",1,0)
PXRMLIST ; SLC/PKR - Clinical Reminders build a list of defined reminders. ;11/25/1998
"RTN","PXRMLIST",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMLIST",3,0)
 ;Used in the reminder exchange utility.
"RTN","PXRMLIST",4,0)
 ;======================================================================
"RTN","PXRMLIST",5,0)
FORMAT(REMINDER) ;Format the reminder name and print name.
"RTN","PXRMLIST",6,0)
 N IND,LEN,TEMP
"RTN","PXRMLIST",7,0)
 S TEMP=$P(REMINDER,U,1)
"RTN","PXRMLIST",8,0)
 S LEN=$L(TEMP)
"RTN","PXRMLIST",9,0)
 F IND=LEN+1:1:40 S TEMP=TEMP_" "
"RTN","PXRMLIST",10,0)
 S TEMP=TEMP_$P(REMINDER,U,3)
"RTN","PXRMLIST",11,0)
 Q TEMP
"RTN","PXRMLIST",12,0)
 ;
"RTN","PXRMLIST",13,0)
 ;======================================================================
"RTN","PXRMLIST",14,0)
LIST ;Build a list of the name and print name of all defined reminders.
"RTN","PXRMLIST",15,0)
 I $D(^TMP("PXRMEXLR",$J,"VALMCNT")) S VALMCNT=^TMP("PXRMEXLR",$J,"VALMCNT")
"RTN","PXRMLIST",16,0)
 E  D
"RTN","PXRMLIST",17,0)
 . K ^TMP("PXRMEXOR",$J)
"RTN","PXRMLIST",18,0)
 . N ARO,INACTIVE,IND,REMINDER
"RTN","PXRMLIST",19,0)
 . S ARO=$$QUERYAO
"RTN","PXRMLIST",20,0)
 . S ^TMP("PXRMEXLR",$J,"ARO")=ARO
"RTN","PXRMLIST",21,0)
 . S INACTIVE=""
"RTN","PXRMLIST",22,0)
 .;Build the list of reminders in alphabetical order.
"RTN","PXRMLIST",23,0)
 . S IND=0
"RTN","PXRMLIST",24,0)
 . F  S IND=$O(^PXD(811.9,IND)) Q:+IND'>0  D
"RTN","PXRMLIST",25,0)
 .. S REMINDER=^PXD(811.9,IND,0)
"RTN","PXRMLIST",26,0)
 .. S INACTIVE=$P(REMINDER,U,6)
"RTN","PXRMLIST",27,0)
 .. I ARO D
"RTN","PXRMLIST",28,0)
 ... I 'INACTIVE S ^TMP("PXRMEXOR",$J,$$FORMAT(REMINDER))=0
"RTN","PXRMLIST",29,0)
 .. E  S ^TMP("PXRMEXOR",$J,$$FORMAT(REMINDER))=INACTIVE
"RTN","PXRMLIST",30,0)
 .;Put the list into the array List Manager is using.
"RTN","PXRMLIST",31,0)
 . S REMINDER=""
"RTN","PXRMLIST",32,0)
 . S VALMCNT=0
"RTN","PXRMLIST",33,0)
 . F  S REMINDER=$O(^TMP("PXRMEXOR",$J,REMINDER)) Q:REMINDER=""  D
"RTN","PXRMLIST",34,0)
 .. S INACTIVE=^TMP("PXRMEXOR",$J,REMINDER)
"RTN","PXRMLIST",35,0)
 .. I INACTIVE S REMINDER=$$MRKINACT(REMINDER)
"RTN","PXRMLIST",36,0)
 .. S VALMCNT=VALMCNT+1
"RTN","PXRMLIST",37,0)
 .. S ^TMP("PXRMEXLR",$J,VALMCNT,0)=REMINDER
"RTN","PXRMLIST",38,0)
 . S ^TMP("PXRMEXLR",$J,"VALMCNT")=VALMCNT
"RTN","PXRMLIST",39,0)
 K ^TMP("PXRMEXOR",$J)
"RTN","PXRMLIST",40,0)
 D CHGCAP^VALM("RNAME","Reminder Name")
"RTN","PXRMLIST",41,0)
 D CHGCAP^VALM("PNAME","Print Name")
"RTN","PXRMLIST",42,0)
 I '$G(^TMP("PXRMEXLR",$J,"ARO")) D CHGCAP^VALM("INACTIVE","Inactive")
"RTN","PXRMLIST",43,0)
 Q
"RTN","PXRMLIST",44,0)
 ;
"RTN","PXRMLIST",45,0)
 ;======================================================================
"RTN","PXRMLIST",46,0)
MRKINACT(TEXT) ;Append the inactive mark to TEXT in column 77.
"RTN","PXRMLIST",47,0)
 N IC,NSPA
"RTN","PXRMLIST",48,0)
 S NSPA=77-$L(TEXT)
"RTN","PXRMLIST",49,0)
 F IC=1:1:NSPA S TEXT=TEXT_" "
"RTN","PXRMLIST",50,0)
 S TEXT=TEXT_"X"
"RTN","PXRMLIST",51,0)
 Q TEXT
"RTN","PXRMLIST",52,0)
 ;
"RTN","PXRMLIST",53,0)
 ;======================================================================
"RTN","PXRMLIST",54,0)
QUERYAO() ;See if the user wants only active reminders listed.
"RTN","PXRMLIST",55,0)
 N X,Y
"RTN","PXRMLIST",56,0)
 K DIRUT,DTOUT,DUOUT
"RTN","PXRMLIST",57,0)
 S DIR(0)="YA"
"RTN","PXRMLIST",58,0)
 S DIR("A")="List active reminders only? "
"RTN","PXRMLIST",59,0)
 S DIR("B")="Y"
"RTN","PXRMLIST",60,0)
 W !
"RTN","PXRMLIST",61,0)
 D ^DIR K DIR
"RTN","PXRMLIST",62,0)
 Q Y
"RTN","PXRMLIST",63,0)
 ;
"RTN","PXRMLOG")
0^72^B32978752
"RTN","PXRMLOG",1,0)
PXRMLOG ; SLC/PKR - Clinical Reminders logic routines. ;05/18/2000
"RTN","PXRMLOG",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMLOG",3,0)
 ;
"RTN","PXRMLOG",4,0)
 ;=======================================================================
"RTN","PXRMLOG",5,0)
EVALPCL(FREQ,PCLOGIC,FIEVAL) ;Evaluate the Patient Cohort Logic.
"RTN","PXRMLOG",6,0)
 ;Determine the applicable frequency age range set.
"RTN","PXRMLOG",7,0)
 ;Get the baseline
"RTN","PXRMLOG",8,0)
 N MAXAGE,MINAGE
"RTN","PXRMLOG",9,0)
 N AGEFI,IND,FINDING,FLIST,FREQDAY,NUMAFI
"RTN","PXRMLOG",10,0)
 N RANKAR,RANK,RANKFI,TEMP
"RTN","PXRMLOG",11,0)
 D MMF^PXRMAGE(.MINAGE,.MAXAGE,.FREQ,.FIEVAL)
"RTN","PXRMLOG",12,0)
 ;If there is no match with any of the baseline values FREQ=-1.
"RTN","PXRMLOG",13,0)
 ;
"RTN","PXRMLOG",14,0)
 ;See if any findings override the baseline.
"RTN","PXRMLOG",15,0)
 S TEMP=$G(^PXD(811.9,PXRMITEM,40))
"RTN","PXRMLOG",16,0)
 S NUMAFI=+$P(TEMP,U,1)
"RTN","PXRMLOG",17,0)
 ;If there are no age findings use the baseline.
"RTN","PXRMLOG",18,0)
 I NUMAFI=0 G ACHK
"RTN","PXRMLOG",19,0)
 S FLIST=$P(TEMP,U,2)
"RTN","PXRMLOG",20,0)
 F IND=1:1:NUMAFI D
"RTN","PXRMLOG",21,0)
 . S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",22,0)
 . I (FIEVAL(FINDING))&('$D(FIEVAL(FINDING,"EXPIRED"))) D
"RTN","PXRMLOG",23,0)
 .. S TEMP=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMLOG",24,0)
 .. S RANK=+$P(TEMP,U,5)
"RTN","PXRMLOG",25,0)
 .. I RANK=0 S RANK=9999
"RTN","PXRMLOG",26,0)
 .. S FREQDAY=$$FRQINDAY^PXRMDATE($P(TEMP,U,4))
"RTN","PXRMLOG",27,0)
 ..;If there is no frequency with this rank ignore it.
"RTN","PXRMLOG",28,0)
 .. I FREQDAY>0 S RANKAR(RANK,FREQDAY,FINDING)=""
"RTN","PXRMLOG",29,0)
 ;If there was a ranking use it otherwise use the greatest frequency.
"RTN","PXRMLOG",30,0)
 I '$D(RANKAR) G ACHK
"RTN","PXRMLOG",31,0)
 S RANK=0
"RTN","PXRMLOG",32,0)
 S RANK=+$O(RANKAR(RANK))
"RTN","PXRMLOG",33,0)
 S FREQDAY=+$O(RANKAR(RANK,""))
"RTN","PXRMLOG",34,0)
 S FINDING=+$O(RANKAR(RANK,FREQDAY,""))
"RTN","PXRMLOG",35,0)
 I FINDING>0 D
"RTN","PXRMLOG",36,0)
 . S TEMP=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMLOG",37,0)
 . S FREQ=$P(TEMP,U,4)
"RTN","PXRMLOG",38,0)
 . S MINAGE=$P(TEMP,U,2)
"RTN","PXRMLOG",39,0)
 . S MAXAGE=$P(TEMP,U,3)
"RTN","PXRMLOG",40,0)
 .;Remove the baseline age findings since they have been overridden.
"RTN","PXRMLOG",41,0)
 . K FIEVAL("AGE")
"RTN","PXRMLOG",42,0)
ACHK ;
"RTN","PXRMLOG",43,0)
 I (FREQ="")!(FREQ=-1) D
"RTN","PXRMLOG",44,0)
 . S AGEFI=0
"RTN","PXRMLOG",45,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","AGE")="There is no reminder frequency!"
"RTN","PXRMLOG",46,0)
 E  S AGEFI=$$AGECHECK^PXRMAGE(PXRMAGE,MINAGE,MAXAGE)
"RTN","PXRMLOG",47,0)
 I 'AGEFI D
"RTN","PXRMLOG",48,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","AGE")=""
"RTN","PXRMLOG",49,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","AGE")="Patient does not meet any age criteria!"
"RTN","PXRMLOG",50,0)
 E  D
"RTN","PXRMLOG",51,0)
 .;Save the final frequency and age range for display.
"RTN","PXRMLOG",52,0)
 . ;S TEMP="Final Frequency and Age Range used: "_$$FMTFREQ^PXRMAGE(FREQ)_$$FMTAGE^PXRMAGE(MINAGE,MAXAGE)_"."
"RTN","PXRMLOG",53,0)
 . S TEMP="Due every "_$$FMTFREQ^PXRMAGE(FREQ)_$$FMTAGE^PXRMAGE(MINAGE,MAXAGE)_"."
"RTN","PXRMLOG",54,0)
 .;Use the z so this will be the last of the info text.
"RTN","PXRMLOG",55,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"zFREQARNG")=TEMP
"RTN","PXRMLOG",56,0)
 ;
"RTN","PXRMLOG",57,0)
 ;Evaluate the patient cohort logic
"RTN","PXRMLOG",58,0)
 N NUM,PCLOG,PCLSTR,SEXFI,TEST
"RTN","PXRMLOG",59,0)
 S SEXFI=1
"RTN","PXRMLOG",60,0)
 S TEMP=$G(^PXD(811.9,PXRMITEM,32))
"RTN","PXRMLOG",61,0)
 S NUM=+$P(TEMP,U,1)
"RTN","PXRMLOG",62,0)
 S (PCLOG,PCLSTR)=^PXD(811.9,PXRMITEM,31)
"RTN","PXRMLOG",63,0)
 S PCLOG=$$STRREP^PXRMUTIL(PCLOG,"SEX",SEXFI)
"RTN","PXRMLOG",64,0)
 S PCLOG=$$STRREP^PXRMUTIL(PCLOG,"AGE",AGEFI)
"RTN","PXRMLOG",65,0)
 S FLIST=$P(TEMP,U,2)
"RTN","PXRMLOG",66,0)
 F IND=1:1:NUM D
"RTN","PXRMLOG",67,0)
 . S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",68,0)
 . S TEMP="FI("_FINDING_")"
"RTN","PXRMLOG",69,0)
 . S PCLOG=$$STRREP^PXRMUTIL(PCLOG,TEMP,FIEVAL(FINDING))
"RTN","PXRMLOG",70,0)
 I @PCLOG
"RTN","PXRMLOG",71,0)
 S TEST=$T
"RTN","PXRMLOG",72,0)
 ;Check for a dead patient.
"RTN","PXRMLOG",73,0)
 I +$G(^XTMP(PXRMDFN,"DOD"))>0 S PCLOGIC=0_U_PCLSTR_U_PCLOG
"RTN","PXRMLOG",74,0)
 E  S PCLOGIC=TEST_U_PCLSTR_U_PCLOG
"RTN","PXRMLOG",75,0)
 I $D(PXRMDEV) S ^TMP(PXRMPID,$J,PXRMITEM,"PATIENT COHORT LOGIC")=PCLOGIC
"RTN","PXRMLOG",76,0)
 Q
"RTN","PXRMLOG",77,0)
 ;
"RTN","PXRMLOG",78,0)
 ;=======================================================================
"RTN","PXRMLOG",79,0)
EVALRESL(RESDATE,RESLOGIC,FIEVAL) ;Evaluate the Resolution Logic.
"RTN","PXRMLOG",80,0)
 N DATE,IND,FINDING,FIV,FLIST,NUM,RESLOG,RESLSTR,TEST
"RTN","PXRMLOG",81,0)
 S TEMP=$G(^PXD(811.9,PXRMITEM,36))
"RTN","PXRMLOG",82,0)
 S NUM=+$P(TEMP,U,1)
"RTN","PXRMLOG",83,0)
 I NUM=0 Q
"RTN","PXRMLOG",84,0)
 S (RESLOG,RESLSTR)=^PXD(811.9,PXRMITEM,35)
"RTN","PXRMLOG",85,0)
 S FLIST=$P(TEMP,U,2)
"RTN","PXRMLOG",86,0)
 F IND=1:1:NUM D
"RTN","PXRMLOG",87,0)
 . S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",88,0)
 . S DATE(IND)=+$G(FIEVAL(FINDING,"DATE"))
"RTN","PXRMLOG",89,0)
 . I $D(FIEVAL(FINDING,"EXPIRED")) S DATE(IND)=DATE(IND)_"X"
"RTN","PXRMLOG",90,0)
 . S TEMP="FI("_FINDING_")"
"RTN","PXRMLOG",91,0)
 . S RESLOG=$$STRREP^PXRMUTIL(RESLOG,TEMP,FIEVAL(FINDING))
"RTN","PXRMLOG",92,0)
 I @RESLOG
"RTN","PXRMLOG",93,0)
 S TEST=$T
"RTN","PXRMLOG",94,0)
 S RESLOGIC=TEST_U_RESLSTR_U_RESLOG
"RTN","PXRMLOG",95,0)
 I $D(PXRMDEV) S ^TMP(PXRMPID,$J,PXRMITEM,"RESOLUTION LOGIC")=RESLOGIC
"RTN","PXRMLOG",96,0)
 S RESDATE=""
"RTN","PXRMLOG",97,0)
 ;If the reminder was resolved save the resolution date.
"RTN","PXRMLOG",98,0)
 I TEST D  Q
"RTN","PXRMLOG",99,0)
 . F IND=1:1:NUM D
"RTN","PXRMLOG",100,0)
 ..;Make sure no expired finding dates are used.
"RTN","PXRMLOG",101,0)
 .. I DATE(IND)["X" Q
"RTN","PXRMLOG",102,0)
 .. I +DATE(IND)>+RESDATE S RESDATE=DATE(IND)
"RTN","PXRMLOG",103,0)
 ;
"RTN","PXRMLOG",104,0)
 ;If the reminder was not resolved because of an expired finding
"RTN","PXRMLOG",105,0)
 ;find and save the expired resolution date for display.
"RTN","PXRMLOG",106,0)
 S RESLOG=RESLSTR
"RTN","PXRMLOG",107,0)
 F IND=1:1:NUM D
"RTN","PXRMLOG",108,0)
 . S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",109,0)
 . S FIV=FIEVAL(FINDING)
"RTN","PXRMLOG",110,0)
 . S DATE(IND)=+$G(FIEVAL(FINDING,"DATE"))
"RTN","PXRMLOG",111,0)
 . I $D(FIEVAL(FINDING,"EXPIRED")) D
"RTN","PXRMLOG",112,0)
 .. S FIV=1
"RTN","PXRMLOG",113,0)
 .. S DATE(IND)=DATE(IND)_"X"
"RTN","PXRMLOG",114,0)
 . S TEMP="FI("_FINDING_")"
"RTN","PXRMLOG",115,0)
 . S RESLOG=$$STRREP^PXRMUTIL(RESLOG,TEMP,FIV)
"RTN","PXRMLOG",116,0)
 I @RESLOG
"RTN","PXRMLOG",117,0)
 S TEST=$T
"RTN","PXRMLOG",118,0)
 I TEST D
"RTN","PXRMLOG",119,0)
 . F IND=1:1:NUM D
"RTN","PXRMLOG",120,0)
 .. I +DATE(IND)>+RESDATE S RESDATE=DATE(IND)
"RTN","PXRMLOG",121,0)
 Q
"RTN","PXRMLOG",122,0)
 ;
"RTN","PXRMLOG",123,0)
 ;=======================================================================
"RTN","PXRMLOG",124,0)
SEX() ;Return FALSE (0) if the patient is the wrong sex for
"RTN","PXRMLOG",125,0)
 ; the reminder, TRUE (1) is the patient is the right sex.
"RTN","PXRMLOG",126,0)
 N REMSEX
"RTN","PXRMLOG",127,0)
 S REMSEX=$P($G(^PXD(811.9,PXRMITEM,0)),U,9)
"RTN","PXRMLOG",128,0)
 I ($P(PXRMSEX,U,1)=REMSEX)!(REMSEX="") Q 1
"RTN","PXRMLOG",129,0)
 E  D  Q 0
"RTN","PXRMLOG",130,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","SEX")=""
"RTN","PXRMLOG",131,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","SEX")="Patient is the wrong sex!"
"RTN","PXRMLOG",132,0)
 Q
"RTN","PXRMLOG",133,0)
 ;
"RTN","PXRMLOG",134,0)
 ;=======================================================================
"RTN","PXRMLOG",135,0)
VALID(LOGSTR,MINLEN,MAXLEN) ;Make sure that LOGSTR is a valid logic string.
"RTN","PXRMLOG",136,0)
 ;This is called by the input transform for PATIENT COHORT LOGIC and RESOLUTION LOGIC.
"RTN","PXRMLOG",137,0)
 ;Return 1 if LOGSTR is ok.
"RTN","PXRMLOG",138,0)
 ;
"RTN","PXRMLOG",139,0)
 I LOGSTR="" Q 0
"RTN","PXRMLOG",140,0)
 ;
"RTN","PXRMLOG",141,0)
 ;Check the length.
"RTN","PXRMLOG",142,0)
 N LEN
"RTN","PXRMLOG",143,0)
 S LEN=$L(LOGSTR)
"RTN","PXRMLOG",144,0)
 I (LEN<MINLEN)!(LEN>MAXLEN) Q 0
"RTN","PXRMLOG",145,0)
 ;
"RTN","PXRMLOG",146,0)
 ;Use the FileMan code validator to check the code.
"RTN","PXRMLOG",147,0)
 N X
"RTN","PXRMLOG",148,0)
 S X="S Y="_$TR(LOGSTR,";","")
"RTN","PXRMLOG",149,0)
 D ^DIM
"RTN","PXRMLOG",150,0)
 I $D(X)=0 D  Q 0
"RTN","PXRMLOG",151,0)
 . S TEXT(1)="LOGIC string: "_LOGSTR
"RTN","PXRMLOG",152,0)
 . S TEXT(2)="contains invalid MUMPS code!"
"RTN","PXRMLOG",153,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMLOG",154,0)
 ;
"RTN","PXRMLOG",155,0)
 N IC,IND,SE,SS,TEXT,TS,TSTSTR,VALID,VLE
"RTN","PXRMLOG",156,0)
 ;Make sure the entries in LOGSTR correspond with components in
"RTN","PXRMLOG",157,0)
 ;the reminder definition.
"RTN","PXRMLOG",158,0)
 S TSTSTR=LOGSTR
"RTN","PXRMLOG",159,0)
 ;Replace the Boolean operators with the standard separator.
"RTN","PXRMLOG",160,0)
 S TSTSTR=$$STRREP^PXRMUTIL(TSTSTR,"&'",U)
"RTN","PXRMLOG",161,0)
 S TSTSTR=$$STRREP^PXRMUTIL(TSTSTR,"&",U)
"RTN","PXRMLOG",162,0)
 S TSTSTR=$$STRREP^PXRMUTIL(TSTSTR,"!'",U)
"RTN","PXRMLOG",163,0)
 S TSTSTR=$$STRREP^PXRMUTIL(TSTSTR,"!",U)
"RTN","PXRMLOG",164,0)
 S VALID=1
"RTN","PXRMLOG",165,0)
 S LEN=$L(TSTSTR,U)
"RTN","PXRMLOG",166,0)
 F IC=1:1:LEN D
"RTN","PXRMLOG",167,0)
 . S VLE=0
"RTN","PXRMLOG",168,0)
 . S TS=$P(TSTSTR,U,IC)
"RTN","PXRMLOG",169,0)
 .;
"RTN","PXRMLOG",170,0)
 . S SS=$F(TS,"FI(")
"RTN","PXRMLOG",171,0)
 . I SS>0 D
"RTN","PXRMLOG",172,0)
 .. S VLE=1
"RTN","PXRMLOG",173,0)
 .. S SE=$F(TS,")")-2
"RTN","PXRMLOG",174,0)
 .. S IND=$E(TS,SS,SE)
"RTN","PXRMLOG",175,0)
 .. I '$D(^PXD(811.9,DA,20,IND)) D
"RTN","PXRMLOG",176,0)
 ... S TEXT="FI("_IND_") is not in this reminder definition!"
"RTN","PXRMLOG",177,0)
 ... D EN^DDIOL(TEXT)
"RTN","PXRMLOG",178,0)
 ... S VALID=0
"RTN","PXRMLOG",179,0)
 .;
"RTN","PXRMLOG",180,0)
 .;Now check for other valid logic elements.
"RTN","PXRMLOG",181,0)
 . I 'VLE D
"RTN","PXRMLOG",182,0)
 .. I TS["AGE" S VLE=1
"RTN","PXRMLOG",183,0)
 .. I TS["SEX" S VLE=1
"RTN","PXRMLOG",184,0)
 . I 'VLE D
"RTN","PXRMLOG",185,0)
 .. S TEXT=TS_" is not a valid logic element!"
"RTN","PXRMLOG",186,0)
 .. D EN^DDIOL(TEXT)
"RTN","PXRMLOG",187,0)
 .. S VALID=0
"RTN","PXRMLOG",188,0)
 ;
"RTN","PXRMLOG",189,0)
 Q VALID
"RTN","PXRMLOG",190,0)
 ;
"RTN","PXRMLOGX")
0^73^B22147578
"RTN","PXRMLOGX",1,0)
PXRMLOGX ; SLC/PKR - Clinical Reminders cross-reference logic routines. ;05/18/2000
"RTN","PXRMLOGX",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMLOGX",3,0)
 ;
"RTN","PXRMLOGX",4,0)
 ;=======================================================================
"RTN","PXRMLOGX",5,0)
BLDAFL(IEN,KI) ;Build a list of findings that can change the
"RTN","PXRMLOGX",6,0)
 ;frequency age range set. This is called by FileMan whenever the
"RTN","PXRMLOGX",7,0)
 ;minimum age, maximum age, or frequency fields of the findings
"RTN","PXRMLOGX",8,0)
 ;multiple are edited.
"RTN","PXRMLOGX",9,0)
 N FREQ,FLIST,IND,NUM
"RTN","PXRMLOGX",10,0)
 S FLIST=""
"RTN","PXRMLOGX",11,0)
 S (IND,NUM)=0
"RTN","PXRMLOGX",12,0)
 F  S IND=$O(^PXD(811.9,IEN,20,IND)) Q:+IND=0  D
"RTN","PXRMLOGX",13,0)
 .;If an entry is being deleted skip it.
"RTN","PXRMLOGX",14,0)
 . I IND=$G(KI) Q
"RTN","PXRMLOGX",15,0)
 . S FREQ=$P(^PXD(811.9,IEN,20,IND,0),U,4)
"RTN","PXRMLOGX",16,0)
 . I FREQ'="" D
"RTN","PXRMLOGX",17,0)
 .. S NUM=NUM+1
"RTN","PXRMLOGX",18,0)
 .. I NUM>1 S FLIST=FLIST_";"
"RTN","PXRMLOGX",19,0)
 .. S FLIST=FLIST_IND
"RTN","PXRMLOGX",20,0)
 S ^PXD(811.9,IEN,40)=NUM_U_FLIST
"RTN","PXRMLOGX",21,0)
 Q
"RTN","PXRMLOGX",22,0)
 ;
"RTN","PXRMLOGX",23,0)
 ;=======================================================================
"RTN","PXRMLOGX",24,0)
BLDALL(IEN,KI) ;Build all the findings lists.
"RTN","PXRMLOGX",25,0)
 I '$D(^PXD(811.9,IEN)) Q
"RTN","PXRMLOGX",26,0)
 D BLDPCLS^PXRMLOGX(IEN,KI)
"RTN","PXRMLOGX",27,0)
 D BLDRESLS^PXRMLOGX(IEN,KI)
"RTN","PXRMLOGX",28,0)
 D BLDAFL^PXRMLOGX(IEN,KI)
"RTN","PXRMLOGX",29,0)
 D BLDINFL^PXRMLOGX(IEN,KI)
"RTN","PXRMLOGX",30,0)
 Q
"RTN","PXRMLOGX",31,0)
 ;
"RTN","PXRMLOGX",32,0)
 ;=======================================================================
"RTN","PXRMLOGX",33,0)
BLDINFL(IEN,KI) ;Build the list of findings that are information only.
"RTN","PXRMLOGX",34,0)
 ;This is called by the routines that build the resolution findings
"RTN","PXRMLOGX",35,0)
 ;list, the patient cohort findings list, and the age finding list.
"RTN","PXRMLOGX",36,0)
 N FIA,FLIST,IND,NUM,TEMP
"RTN","PXRMLOGX",37,0)
 S IND=0
"RTN","PXRMLOGX",38,0)
 F  S IND=$O(^PXD(811.9,IEN,20,IND)) Q:+IND=0  D
"RTN","PXRMLOGX",39,0)
 .;If an entry is being deleted skip it.
"RTN","PXRMLOGX",40,0)
 . I IND=$G(KI) Q
"RTN","PXRMLOGX",41,0)
 . S FIA(IND)=""
"RTN","PXRMLOGX",42,0)
 ;Remove the patient cohort findings.
"RTN","PXRMLOGX",43,0)
 S TEMP=$G(^PXD(811.9,IEN,32))
"RTN","PXRMLOGX",44,0)
 S NUM=+$P(TEMP,U,1)
"RTN","PXRMLOGX",45,0)
 S FLIST=$P(TEMP,U,2)
"RTN","PXRMLOGX",46,0)
 F IND=1:1:NUM D
"RTN","PXRMLOGX",47,0)
 . S TEMP=$P(FLIST,";",IND)
"RTN","PXRMLOGX",48,0)
 . I $D(FIA(TEMP)) K FIA(TEMP)
"RTN","PXRMLOGX",49,0)
 ;Remove the resolution findings.
"RTN","PXRMLOGX",50,0)
 S TEMP=$G(^PXD(811.9,IEN,36))
"RTN","PXRMLOGX",51,0)
 S NUM=+$P(TEMP,U,1)
"RTN","PXRMLOGX",52,0)
 S FLIST=$P(TEMP,U,2)
"RTN","PXRMLOGX",53,0)
 F IND=1:1:NUM D
"RTN","PXRMLOGX",54,0)
 . S TEMP=$P(FLIST,";",IND)
"RTN","PXRMLOGX",55,0)
 . I $D(FIA(TEMP)) K FIA(TEMP)
"RTN","PXRMLOGX",56,0)
 ;Remove the age findings.
"RTN","PXRMLOGX",57,0)
 S TEMP=$G(^PXD(811.9,IEN,40))
"RTN","PXRMLOGX",58,0)
 S NUM=+$P(TEMP,U,1)
"RTN","PXRMLOGX",59,0)
 S FLIST=$P(TEMP,U,2)
"RTN","PXRMLOGX",60,0)
 F IND=1:1:NUM D
"RTN","PXRMLOGX",61,0)
 . S TEMP=$P(FLIST,";",IND)
"RTN","PXRMLOGX",62,0)
 . I $D(FIA(TEMP)) K FIA(TEMP)
"RTN","PXRMLOGX",63,0)
 ;What is left is the information findings.
"RTN","PXRMLOGX",64,0)
 S FLIST=""
"RTN","PXRMLOGX",65,0)
 S (IND,NUM)=0
"RTN","PXRMLOGX",66,0)
 F  S IND=$O(FIA(IND)) Q:IND=""  D
"RTN","PXRMLOGX",67,0)
 . S NUM=NUM+1
"RTN","PXRMLOGX",68,0)
 . I NUM>1 S FLIST=FLIST_";"
"RTN","PXRMLOGX",69,0)
 . S FLIST=FLIST_IND
"RTN","PXRMLOGX",70,0)
 S ^PXD(811.9,IEN,42)=NUM_U_FLIST
"RTN","PXRMLOGX",71,0)
 Q
"RTN","PXRMLOGX",72,0)
 ;
"RTN","PXRMLOGX",73,0)
 ;=======================================================================
"RTN","PXRMLOGX",74,0)
BLDPCLS(IEN,KI) ;Build the Internal Patient Cohort Logic string for a
"RTN","PXRMLOGX",75,0)
 ;reminder. This is called by FileMan whenever the USE IN PATIENT COHORT
"RTN","PXRMLOGX",76,0)
 ;LOGIC field is edited or the user defined Patient Cohort Logic is
"RTN","PXRMLOGX",77,0)
 ;killed. Also builds the patient cohort logic list.
"RTN","PXRMLOGX",78,0)
 ;If there is a user defined PATIENT COHORT LOGIC then don't do anything.
"RTN","PXRMLOGX",79,0)
 I $L($G(^PXD(811.9,IEN,30,0)))>0 Q
"RTN","PXRMLOGX",80,0)
 N FLIST,IND,NUM,PCLOG,TEMP,UPCLOG
"RTN","PXRMLOGX",81,0)
 S PCLOG="(SEX)&(AGE)"
"RTN","PXRMLOGX",82,0)
 S FLIST=""
"RTN","PXRMLOGX",83,0)
 S (IND,NUM)=0
"RTN","PXRMLOGX",84,0)
 F  S IND=$O(^PXD(811.9,IEN,20,IND)) Q:+IND=0  D
"RTN","PXRMLOGX",85,0)
 .;If an entry is being deleted skip it.
"RTN","PXRMLOGX",86,0)
 . I IND=$G(KI) Q
"RTN","PXRMLOGX",87,0)
 . S TEMP=^PXD(811.9,IEN,20,IND,0)
"RTN","PXRMLOGX",88,0)
 . S UPCLOG=$P(TEMP,U,7)
"RTN","PXRMLOGX",89,0)
 . I UPCLOG'="" D
"RTN","PXRMLOGX",90,0)
 .. S PCLOG=PCLOG_UPCLOG_"FI("_IND_")"
"RTN","PXRMLOGX",91,0)
 .. S NUM=NUM+1
"RTN","PXRMLOGX",92,0)
 .. I NUM>1 S FLIST=FLIST_";"
"RTN","PXRMLOGX",93,0)
 .. S FLIST=FLIST_IND
"RTN","PXRMLOGX",94,0)
 ;Save the internal string and the findings list.
"RTN","PXRMLOGX",95,0)
 S ^PXD(811.9,IEN,31)=PCLOG
"RTN","PXRMLOGX",96,0)
 S ^PXD(811.9,IEN,32)=NUM_U_FLIST
"RTN","PXRMLOGX",97,0)
 Q
"RTN","PXRMLOGX",98,0)
 ;
"RTN","PXRMLOGX",99,0)
 ;=======================================================================
"RTN","PXRMLOGX",100,0)
BLDRESLS(IEN,KI) ;Build the Internal Resolution Logic string for a
"RTN","PXRMLOGX",101,0)
 ;reminder. This is called by FileMan whenever the USE IN RESOLUTION
"RTN","PXRMLOGX",102,0)
 ;LOGIC field is edited or the user defined Resolution Logic is killed.
"RTN","PXRMLOGX",103,0)
 ;If there is a user defined RESOLUTION LOGIC then don't do
"RTN","PXRMLOGX",104,0)
 ;anything.
"RTN","PXRMLOGX",105,0)
 I $L($G(^PXD(811.9,IEN,34)))>0 Q
"RTN","PXRMLOGX",106,0)
 N FLIST,IND,NUM,RESLOG,TEMP,URESLOG
"RTN","PXRMLOGX",107,0)
 S (FLIST,RESLOG)=""
"RTN","PXRMLOGX",108,0)
 S (IND,NUM)=0
"RTN","PXRMLOGX",109,0)
 F  S IND=$O(^PXD(811.9,IEN,20,IND)) Q:+IND=0  D
"RTN","PXRMLOGX",110,0)
 .;If an entry is being deleted skip it.
"RTN","PXRMLOGX",111,0)
 . I IND=$G(KI) Q
"RTN","PXRMLOGX",112,0)
 . S TEMP=^PXD(811.9,IEN,20,IND,0)
"RTN","PXRMLOGX",113,0)
 . S URESLOG=$P(TEMP,U,6)
"RTN","PXRMLOGX",114,0)
 . I URESLOG'="" D
"RTN","PXRMLOGX",115,0)
 .. S RESLOG=RESLOG_URESLOG_"FI("_IND_")"
"RTN","PXRMLOGX",116,0)
 .. S NUM=NUM+1
"RTN","PXRMLOGX",117,0)
 .. I NUM>1 S FLIST=FLIST_";"
"RTN","PXRMLOGX",118,0)
 .. S FLIST=FLIST_IND
"RTN","PXRMLOGX",119,0)
 ;Save as the internal string and the findings list.
"RTN","PXRMLOGX",120,0)
 I RESLOG="" S ^PXD(811.9,IEN,35)=""
"RTN","PXRMLOGX",121,0)
 E  D
"RTN","PXRMLOGX",122,0)
 . S TEMP=$E(RESLOG,1,1)
"RTN","PXRMLOGX",123,0)
 . I TEMP="&" S ^PXD(811.9,IEN,35)="(1)"_RESLOG
"RTN","PXRMLOGX",124,0)
 . I TEMP="!" S ^PXD(811.9,IEN,35)="(0)"_RESLOG
"RTN","PXRMLOGX",125,0)
 S ^PXD(811.9,IEN,36)=NUM_U_FLIST
"RTN","PXRMLOGX",126,0)
 Q
"RTN","PXRMLOGX",127,0)
 ;
"RTN","PXRMLOGX",128,0)
 ;=======================================================================
"RTN","PXRMLOGX",129,0)
CPPCLS(IEN,X) ;Copy the user input Patient Cohort Logic string to the
"RTN","PXRMLOGX",130,0)
 ;Internal Patient Cohort Logic string.
"RTN","PXRMLOGX",131,0)
 S ^PXD(811.9,IEN,31)=X
"RTN","PXRMLOGX",132,0)
 ;Get the list of findings.
"RTN","PXRMLOGX",133,0)
 N FLIST,IND,NFI,NUM,T1,T2
"RTN","PXRMLOGX",134,0)
 S NFI=$L(X,"FI(")
"RTN","PXRMLOGX",135,0)
 S FLIST=""
"RTN","PXRMLOGX",136,0)
 S NUM=0
"RTN","PXRMLOGX",137,0)
 F IND=2:1:NFI D
"RTN","PXRMLOGX",138,0)
 . S T1=$P(X,"FI(",IND)
"RTN","PXRMLOGX",139,0)
 . S T2=$P(T1,")",1)
"RTN","PXRMLOGX",140,0)
 . S NUM=NUM+1
"RTN","PXRMLOGX",141,0)
 . I NUM>1 S FLIST=FLIST_";"
"RTN","PXRMLOGX",142,0)
 . S FLIST=FLIST_T2
"RTN","PXRMLOGX",143,0)
 S ^PXD(811.9,IEN,32)=NUM_U_FLIST
"RTN","PXRMLOGX",144,0)
 Q
"RTN","PXRMLOGX",145,0)
 ;
"RTN","PXRMLOGX",146,0)
 ;=======================================================================
"RTN","PXRMLOGX",147,0)
CPRESLS(IEN,X) ;Copy the user input Resolution Logic string to the
"RTN","PXRMLOGX",148,0)
 ;Internal Resolution Logic string.
"RTN","PXRMLOGX",149,0)
 S ^PXD(811.9,DA,35)=X
"RTN","PXRMLOGX",150,0)
 ;Build the list of findings
"RTN","PXRMLOGX",151,0)
 N NFI,NUM,FLIST,T1,T2
"RTN","PXRMLOGX",152,0)
 S NFI=$L(X,"FI(")
"RTN","PXRMLOGX",153,0)
 S FLIST=""
"RTN","PXRMLOGX",154,0)
 S NUM=0
"RTN","PXRMLOGX",155,0)
 F IND=2:1:NFI D
"RTN","PXRMLOGX",156,0)
 . S T1=$P(X,"FI(",IND)
"RTN","PXRMLOGX",157,0)
 . S T2=$P(T1,")",1)
"RTN","PXRMLOGX",158,0)
 . S NUM=NUM+1
"RTN","PXRMLOGX",159,0)
 . I NUM>1 S FLIST=FLIST_";"
"RTN","PXRMLOGX",160,0)
 . S FLIST=FLIST_T2
"RTN","PXRMLOGX",161,0)
 S ^PXD(811.9,IEN,36)=NUM_U_FLIST
"RTN","PXRMLOGX",162,0)
 Q
"RTN","PXRMLOGX",163,0)
 ;
"RTN","PXRMLOGX",164,0)
 ;=======================================================================
"RTN","PXRMLOGX",165,0)
DELNXR(X2) ;For a new style cross-reference check X2 to determine
"RTN","PXRMLOGX",166,0)
 ;if a delete is being done. If it is a delete all the X2 elements will
"RTN","PXRMLOGX",167,0)
 ;be null.
"RTN","PXRMLOGX",168,0)
 N IND,X2NULL
"RTN","PXRMLOGX",169,0)
 S X2NULL=1
"RTN","PXRMLOGX",170,0)
 S IND=0
"RTN","PXRMLOGX",171,0)
 F  S IND=$O(X2(IND)) Q:(+IND=0)!('X2NULL)  D
"RTN","PXRMLOGX",172,0)
 . I X2(IND)'="" S X2NULL=0
"RTN","PXRMLOGX",173,0)
 Q X2NULL
"RTN","PXRMLOGX",174,0)
 ;
"RTN","PXRMLOGX",175,0)
 ;=======================================================================
"RTN","PXRMLOGX",176,0)
EDITNXR(X1,X2) ;For a new style cross-reference check X1 and X2 to determine
"RTN","PXRMLOGX",177,0)
 ;if an edit is being done.
"RTN","PXRMLOGX",178,0)
 N ADD,AREDIFF,EDIT,IND,X1NULL,X2NULL
"RTN","PXRMLOGX",179,0)
 S AREDIFF=0
"RTN","PXRMLOGX",180,0)
 S (X1NULL,X2NULL)=1
"RTN","PXRMLOGX",181,0)
 S IND=0
"RTN","PXRMLOGX",182,0)
 F  S IND=$O(X1(IND)) Q:+IND=0  D
"RTN","PXRMLOGX",183,0)
 . I X1(IND)'="" S X1NULL=0
"RTN","PXRMLOGX",184,0)
 . I X2(IND)'="" S X2NULL=0
"RTN","PXRMLOGX",185,0)
 . I X1(IND)'=X2(IND) S AREDIFF=1
"RTN","PXRMLOGX",186,0)
 I X1NULL&'X2NULL S ADD=1
"RTN","PXRMLOGX",187,0)
 E  S ADD=0
"RTN","PXRMLOGX",188,0)
 I 'X1NULL&'X2NULL&AREDIFF S EDIT=1
"RTN","PXRMLOGX",189,0)
 E  S EDIT=0
"RTN","PXRMLOGX",190,0)
 Q (ADD!EDIT)
"RTN","PXRMLOGX",191,0)
 ;
"RTN","PXRMMEAS")
0^74^B12309387
"RTN","PXRMMEAS",1,0)
PXRMMEAS ; SLC/PKR - Handle measurement findings. ;06/09/2000
"RTN","PXRMMEAS",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMMEAS",3,0)
 ;
"RTN","PXRMMEAS",4,0)
 ;=======================================================================
"RTN","PXRMMEAS",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate vitals/measurement findings.
"RTN","PXRMMEAS",6,0)
 ;Use the most recent measurement.
"RTN","PXRMMEAS",7,0)
 N FIND0,FINDING,MTYPE
"RTN","PXRMMEAS",8,0)
 S MTYPE=""
"RTN","PXRMMEAS",9,0)
 F  S MTYPE=$O(^PXD(811.9,PXRMITEM,20,"E","GMRD(120.51,",MTYPE)) Q:+MTYPE=0  D
"RTN","PXRMMEAS",10,0)
 . S FINDING=""
"RTN","PXRMMEAS",11,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","GMRD(120.51,",MTYPE,FINDING)) Q:+FINDING=0  D
"RTN","PXRMMEAS",12,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMMEAS",13,0)
 .. D FIEVAL(DFN,MTYPE,FIND0,"",FINDING,.FIEVAL)
"RTN","PXRMMEAS",14,0)
 Q
"RTN","PXRMMEAS",15,0)
 ;
"RTN","PXRMMEAS",16,0)
 ;=======================================================================
"RTN","PXRMMEAS",17,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate vitals/measurement terms.
"RTN","PXRMMEAS",18,0)
 ;Use the most recent measurement.
"RTN","PXRMMEAS",19,0)
 N FIND0,MTYPE,TFIND0,TFINDING
"RTN","PXRMMEAS",20,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMMEAS",21,0)
 S MTYPE=""
"RTN","PXRMMEAS",22,0)
 F  S MTYPE=$O(^PXRMD(811.5,TERMIEN,20,"E","GMRD(120.51,",MTYPE)) Q:+MTYPE=0  D
"RTN","PXRMMEAS",23,0)
 . S TFINDING=""
"RTN","PXRMMEAS",24,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","GMRD(120.51,",MTYPE,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMMEAS",25,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMMEAS",26,0)
 .. D FIEVAL(DFN,MTYPE,FIND0,TFIND0,TFINDING,.TFIEVAL)
"RTN","PXRMMEAS",27,0)
 Q
"RTN","PXRMMEAS",28,0)
 ;
"RTN","PXRMMEAS",29,0)
 ;=======================================================================
"RTN","PXRMMEAS",30,0)
FIEVAL(DFN,MTYPE,FIND0,TFIND0,FINDING,FIEVAL) ;
"RTN","PXRMMEAS",31,0)
 ;Use the most recent measurement.
"RTN","PXRMMEAS",32,0)
 N ABBR,CONVAL,DATA,DATE,ERR,GMRVSTR,IC,IEN,INVDATE
"RTN","PXRMMEAS",33,0)
 N MNAME,RATE,VALID
"RTN","PXRMMEAS",34,0)
 K ^UTILITY($J,"GMRVD")
"RTN","PXRMMEAS",35,0)
 ;Setup for the GMSVUT0 call.
"RTN","PXRMMEAS",36,0)
 S ABBR=$$GET1^DIQ(120.51,MTYPE,1,"","","","ERR")
"RTN","PXRMMEAS",37,0)
 S GMRVSTR=ABBR
"RTN","PXRMMEAS",38,0)
 S GMRVSTR(0)=U_U_1_U_1
"RTN","PXRMMEAS",39,0)
 D EN1^GMRVUT0
"RTN","PXRMMEAS",40,0)
 ;Find the latest entry for this measurement type.
"RTN","PXRMMEAS",41,0)
 I $D(^UTILITY($J,"GMRVD")) D
"RTN","PXRMMEAS",42,0)
 . S (IEN,INVDATE)=""
"RTN","PXRMMEAS",43,0)
 . S INVDATE=$O(^UTILITY($J,"GMRVD",INVDATE))
"RTN","PXRMMEAS",44,0)
 . I INVDATE="" S FIEVAL(FINDING)=0
"RTN","PXRMMEAS",45,0)
 . S IEN=$O(^UTILITY($J,"GMRVD",INVDATE,ABBR,IEN))
"RTN","PXRMMEAS",46,0)
 . S DATA=^UTILITY($J,"GMRVD",INVDATE,ABBR,IEN)
"RTN","PXRMMEAS",47,0)
 . S RATE=$P(DATA,U,8)
"RTN","PXRMMEAS",48,0)
 E  S FIEVAL(FINDING)=0
"RTN","PXRMMEAS",49,0)
 K ^UTILITY($J,"GMRVD")
"RTN","PXRMMEAS",50,0)
 ;
"RTN","PXRMMEAS",51,0)
 I $G(FIEVAL(FINDING))=0 Q
"RTN","PXRMMEAS",52,0)
 S DATE=$P($G(DATA),U,1)
"RTN","PXRMMEAS",53,0)
 ;Save the rest of the finding information.
"RTN","PXRMMEAS",54,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMMEAS",55,0)
 S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMMEAS",56,0)
 S FIEVAL(FINDING,"FINDING")=MTYPE_";GMRD(120.51,"
"RTN","PXRMMEAS",57,0)
 S FIEVAL(FINDING,"SOURCE")=IEN_";GMRV(120.5,"
"RTN","PXRMMEAS",58,0)
 S FIEVAL(FINDING,"DATA")=DATA
"RTN","PXRMMEAS",59,0)
 S FIEVAL(FINDING,"RATE")=RATE
"RTN","PXRMMEAS",60,0)
 S FIEVAL(FINDING,"VALUE")=RATE
"RTN","PXRMMEAS",61,0)
 ;Determine if the finding has expired.
"RTN","PXRMMEAS",62,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMMEAS",63,0)
 I 'VALID D  Q
"RTN","PXRMMEAS",64,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMMEAS",65,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMMEAS",66,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMMEAS",67,0)
 S CONVAL=$$COND^PXRMUTIL(FIND0,TFIND0,RATE)
"RTN","PXRMMEAS",68,0)
 I CONVAL'="" D
"RTN","PXRMMEAS",69,0)
 . I CONVAL D
"RTN","PXRMMEAS",70,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMMEAS",71,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMMEAS",72,0)
 . E  D
"RTN","PXRMMEAS",73,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMMEAS",74,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMMEAS",75,0)
 Q
"RTN","PXRMMEAS",76,0)
 ;
"RTN","PXRMMEAS",77,0)
 ;=======================================================================
"RTN","PXRMMEAS",78,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMMEAS",79,0)
 ;maintenance output.
"RTN","PXRMMEAS",80,0)
 N DATA,DATE,EM,FIEN,MNAME,MTYPE,RATE,TEMP
"RTN","PXRMMEAS",81,0)
 S FIEN=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMMEAS",82,0)
 S DATA=FIEVAL(FINDING,"DATA")
"RTN","PXRMMEAS",83,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMMEAS",84,0)
 S RATE=$G(FIEVAL(FINDING,"VALUE"))
"RTN","PXRMMEAS",85,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMMEAS",86,0)
 S TEMP=TEMP_" Measurement: "
"RTN","PXRMMEAS",87,0)
 S MTYPE=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMMEAS",88,0)
 S MNAME=$$GET1^DIQ(120.51,MTYPE,.01,"","","","ERR")
"RTN","PXRMMEAS",89,0)
 S TEMP=TEMP_MNAME
"RTN","PXRMMEAS",90,0)
 I $L(RATE)>0 D
"RTN","PXRMMEAS",91,0)
 . S TEMP=TEMP_"; rate - "
"RTN","PXRMMEAS",92,0)
 . S TEMP=TEMP_RATE
"RTN","PXRMMEAS",93,0)
 ;Check for abnormal measurement.
"RTN","PXRMMEAS",94,0)
 S TEMP=TEMP_$P(DATA,U,12)
"RTN","PXRMMEAS",95,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMMEAS",96,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMMEAS",97,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMMEAS",98,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMMEAS",99,0)
 S NLINES=NLINES+1
"RTN","PXRMMEAS",100,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMMEAS",101,0)
 I $D(PXRMDEV) D
"RTN","PXRMMEAS",102,0)
 . N UID
"RTN","PXRMMEAS",103,0)
 . S UID="MEAS "_MNAME
"RTN","PXRMMEAS",104,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMMEAS",105,0)
 Q
"RTN","PXRMMEAS",106,0)
 ;
"RTN","PXRMMH")
0^75^B25095557
"RTN","PXRMMH",1,0)
PXRMMH ; SLC/PKR - Handle mental health findings. ;06/09/2000
"RTN","PXRMMH",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMMH",3,0)
 ;
"RTN","PXRMMH",4,0)
 ;=======================================================================
"RTN","PXRMMH",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate mental health instrument findings.
"RTN","PXRMMH",6,0)
 N FIND0,FINDING,MHIEN,YS
"RTN","PXRMMH",7,0)
 S YS("DFN")=DFN
"RTN","PXRMMH",8,0)
 S YS("LIMIT")=1
"RTN","PXRMMH",9,0)
 S MHIEN=""
"RTN","PXRMMH",10,0)
 F  S MHIEN=$O(^PXD(811.9,PXRMITEM,20,"E","YTT(601,",MHIEN)) Q:+MHIEN=0  D
"RTN","PXRMMH",11,0)
 . S FINDING=""
"RTN","PXRMMH",12,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","YTT(601,",MHIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMMH",13,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMMH",14,0)
 .. D FIEVAL(DFN,MHIEN,FIND0,"",FINDING,.FIEVAL,.YS)
"RTN","PXRMMH",15,0)
 Q
"RTN","PXRMMH",16,0)
 ;
"RTN","PXRMMH",17,0)
 ;=======================================================================
"RTN","PXRMMH",18,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate mental health instrument terms.
"RTN","PXRMMH",19,0)
 N FIND0,MHIEN,TFIND0,TFINDING,YS
"RTN","PXRMMH",20,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMMH",21,0)
 S YS("DFN")=DFN
"RTN","PXRMMH",22,0)
 S YS("LIMIT")=1
"RTN","PXRMMH",23,0)
 S MHIEN=""
"RTN","PXRMMH",24,0)
 F  S MHIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","YTT(601,",MHIEN)) Q:+MHIEN=0  D
"RTN","PXRMMH",25,0)
 . S TFINDING=""
"RTN","PXRMMH",26,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","YTT(601,",MHIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMMH",27,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMMH",28,0)
 .. D FIEVAL(DFN,MHIEN,FIND0,TFIND0,TFINDING,.TFIEVAL,.YS)
"RTN","PXRMMH",29,0)
 Q
"RTN","PXRMMH",30,0)
 ;
"RTN","PXRMMH",31,0)
 ;=======================================================================
"RTN","PXRMMH",32,0)
FIEVAL(DFN,MHIEN,FIND0,TFIND0,FINDING,FIEVAL,YS) ;
"RTN","PXRMMH",33,0)
 N CONVAL,MHTEST,SCALE,SCNAME,SCORE,TEMP,TSCORE
"RTN","PXRMMH",34,0)
 N X,Y,VALID,YSDATA,YTT0
"RTN","PXRMMH",35,0)
 S YTT0=^YTT(601,MHIEN,0)
"RTN","PXRMMH",36,0)
 S MHTEST=$P(YTT0,U,1)
"RTN","PXRMMH",37,0)
 S SCALE=$P(TFIND0,U,12)
"RTN","PXRMMH",38,0)
 I SCALE="" S SCALE=$P(FIND0,U,12)
"RTN","PXRMMH",39,0)
 S YS("CODE")=MHTEST
"RTN","PXRMMH",40,0)
 ;The scale can be either the name or the number.
"RTN","PXRMMH",41,0)
 I (SCALE'=""),(+SCALE=0) D
"RTN","PXRMMH",42,0)
 . S SCALE=$O(^YTT(601,MHIEN,"S","C",SCALE,""))
"RTN","PXRMMH",43,0)
 S YS("DFN")=DFN
"RTN","PXRMMH",44,0)
 S YS("SCALE")=SCALE
"RTN","PXRMMH",45,0)
 K YSDATA
"RTN","PXRMMH",46,0)
 D LISTONE^YTAPI(.YSDATA,.YS)
"RTN","PXRMMH",47,0)
 ;The most recent results will be in YSDATA(2)
"RTN","PXRMMH",48,0)
 S TEMP=$G(YSDATA(2))
"RTN","PXRMMH",49,0)
 S X=$P(TEMP,U,1)
"RTN","PXRMMH",50,0)
 I (X="")!(X="no psych pt") S FIEVAL(FINDING)=0 Q
"RTN","PXRMMH",51,0)
 ;Save the rest of the finding information.
"RTN","PXRMMH",52,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMMH",53,0)
 S FIEVAL(FINDING,"DATE")=$P(TEMP,U,1)
"RTN","PXRMMH",54,0)
 S DATE=$P(TEMP,U,1)
"RTN","PXRMMH",55,0)
 S FIEVAL(FINDING,"FINDING")=MHIEN_";YTT(601,"
"RTN","PXRMMH",56,0)
 S FIEVAL(FINDING,"SCALE")=SCALE
"RTN","PXRMMH",57,0)
 S FIEVAL(FINDING,"TEST")=MHTEST
"RTN","PXRMMH",58,0)
 ;Determine if the finding has expired.
"RTN","PXRMMH",59,0)
  S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMMH",60,0)
  I 'VALID D  Q
"RTN","PXRMMH",61,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMMH",62,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMMH",63,0)
 ;If a scale was specified save the scoring information and check
"RTN","PXRMMH",64,0)
 ;for an action.
"RTN","PXRMMH",65,0)
 I SCALE'="" D
"RTN","PXRMMH",66,0)
 . S FIEVAL(FINDING,"SCNAME")=$P(TEMP,U,4)
"RTN","PXRMMH",67,0)
 . S SCORE=$P(TEMP,U,5)
"RTN","PXRMMH",68,0)
 . S FIEVAL(FINDING,"SCORE")=SCORE
"RTN","PXRMMH",69,0)
 . S FIEVAL(FINDING,"VALUE")=SCORE
"RTN","PXRMMH",70,0)
 . S TSCORE=$P(TEMP,U,6)
"RTN","PXRMMH",71,0)
 . I TSCORE'="" S FIEVAL(FINDING,"TSCORE")=TSCORE
"RTN","PXRMMH",72,0)
 .;If there is a condition for this finding evaluate it.
"RTN","PXRMMH",73,0)
 . S CONVAL=$$COND^PXRMUTIL(FIND0,TFIND0,SCORE)
"RTN","PXRMMH",74,0)
 . I CONVAL'="" D
"RTN","PXRMMH",75,0)
 .. I CONVAL D
"RTN","PXRMMH",76,0)
 ... S FIEVAL(FINDING)=CONVAL
"RTN","PXRMMH",77,0)
 ... S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMMH",78,0)
 .. E  D
"RTN","PXRMMH",79,0)
 ... K FIEVAL(FINDING)
"RTN","PXRMMH",80,0)
 ... S FIEVAL(FINDING)=0
"RTN","PXRMMH",81,0)
 Q
"RTN","PXRMMH",82,0)
 ;
"RTN","PXRMMH",83,0)
 ;=======================================================================
"RTN","PXRMMH",84,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMMH",85,0)
 ;maintenance output.
"RTN","PXRMMH",86,0)
 N DATE,MHTEST,TEMP
"RTN","PXRMMH",87,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMMH",88,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMMH",89,0)
 S TEMP=TEMP_" Mental Health Instrument: "
"RTN","PXRMMH",90,0)
 S MHTEST=FIEVAL(FINDING,"TEST")
"RTN","PXRMMH",91,0)
 S TEMP=TEMP_MHTEST
"RTN","PXRMMH",92,0)
 ;If there is scoring information give it.
"RTN","PXRMMH",93,0)
 I $D(FIEVAL(FINDING,"SCNAME")) D
"RTN","PXRMMH",94,0)
 . S TEMP=TEMP_"; Scale name - "_FIEVAL(FINDING,"SCNAME")
"RTN","PXRMMH",95,0)
 . I $D(FIEVAL(FINDING,"VALUE")) S TEMP=TEMP_"; Raw score - "_FIEVAL(FINDING,"VALUE")
"RTN","PXRMMH",96,0)
 . I $D(FIEVAL(FINDING,"TSCORE")) S TEMP=TEMP_" Transformed score - "_FIEVAL(FINDING,"TSCORE")
"RTN","PXRMMH",97,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMMH",98,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMMH",99,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMMH",100,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMMH",101,0)
 S NLINES=NLINES+1
"RTN","PXRMMH",102,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMMH",103,0)
 I $D(PXRMDEV) D
"RTN","PXRMMH",104,0)
 . N UID
"RTN","PXRMMH",105,0)
 . S UID="MHTEST "_MHTEST
"RTN","PXRMMH",106,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMMH",107,0)
 Q
"RTN","PXRMMH",108,0)
 ;
"RTN","PXRMMH",109,0)
 ;=======================================================================
"RTN","PXRMMH",110,0)
SCHELP(MHIEN) ;Xecutable help for MH SCALE
"RTN","PXRMMH",111,0)
 N IND,JND,NUM,SCALE,TEMP,TEMP1
"RTN","PXRMMH",112,0)
 I MHIEN=0 D  Q
"RTN","PXRMMH",113,0)
 . S SCALE(1)="This is not a valid Mental Health finding, selecting an MH scale does"
"RTN","PXRMMH",114,0)
 . S SCALE(2)="not make sense"
"RTN","PXRMMH",115,0)
 . D EN^DDIOL(.SCALE)
"RTN","PXRMMH",116,0)
 S SCALE(1)="SCALE NUMBER  SCALE NAME"
"RTN","PXRMMH",117,0)
 S SCALE(2)="------------------------"
"RTN","PXRMMH",118,0)
 S IND=0
"RTN","PXRMMH",119,0)
 S JND=2
"RTN","PXRMMH",120,0)
 F  S IND=$O(^YTT(601,MHIEN,"S",IND)) Q:+IND=0  D
"RTN","PXRMMH",121,0)
 . S TEMP=^YTT(601,MHIEN,"S",IND,0)
"RTN","PXRMMH",122,0)
 . S JND=JND+1
"RTN","PXRMMH",123,0)
 . S TEMP1=$P(TEMP,U,1)
"RTN","PXRMMH",124,0)
 . S NUM=6-$L(TEMP1)
"RTN","PXRMMH",125,0)
 . S SCALE(JND)=$$INSCHR^PXRMEXLC(NUM," ")_TEMP1_"        "_$P(TEMP,U,2)
"RTN","PXRMMH",126,0)
 D EN^DDIOL(.SCALE)
"RTN","PXRMMH",127,0)
 Q
"RTN","PXRMMH",128,0)
 ;
"RTN","PXRMMH",129,0)
 ;=======================================================================
"RTN","PXRMMH",130,0)
SCHELPF ;Xecutable help for MH SCALE in 811.9 findings.
"RTN","PXRMMH",131,0)
 N FIND0,MHIEN
"RTN","PXRMMH",132,0)
 S FIND0=^PXD(811.9,DA(1),20,DA,0)
"RTN","PXRMMH",133,0)
 I FIND0["YTT(601" S MHIEN=$P(FIND0,";",1)
"RTN","PXRMMH",134,0)
 E  S MHIEN=0
"RTN","PXRMMH",135,0)
 D SCHELP(MHIEN)
"RTN","PXRMMH",136,0)
 Q
"RTN","PXRMMH",137,0)
 ;
"RTN","PXRMMH",138,0)
 ;=======================================================================
"RTN","PXRMMH",139,0)
SCHELPT ;Xecutable help for MH SCALE in 811.5 findings.
"RTN","PXRMMH",140,0)
 N MHIEN,TFIND0
"RTN","PXRMMH",141,0)
 S TFIND0=^PXRMD(811.5,DA(1),20,DA,0)
"RTN","PXRMMH",142,0)
 I TFIND0["YTT(601" S MHIEN=$P(TFIND0,";",1)
"RTN","PXRMMH",143,0)
 E  S MHIEN=0
"RTN","PXRMMH",144,0)
 D SCHELP(MHIEN)
"RTN","PXRMMH",145,0)
 Q
"RTN","PXRMMH",146,0)
 ;
"RTN","PXRMMH",147,0)
 ;=======================================================================
"RTN","PXRMMH",148,0)
VSCALE(FIND0) ;Make sure that mental health scale is valid.
"RTN","PXRMMH",149,0)
 ;Either the scale number or the scale name can be used.
"RTN","PXRMMH",150,0)
 N MHIEN,MHTEST
"RTN","PXRMMH",151,0)
 S MHTEST=$P(FIND0,U,1)
"RTN","PXRMMH",152,0)
 S MHIEN=$P(MHTEST,";",1)
"RTN","PXRMMH",153,0)
 I +X>0 D
"RTN","PXRMMH",154,0)
 . I '$D(^YTT(601,MHIEN,"S",X)) K X
"RTN","PXRMMH",155,0)
 E  D
"RTN","PXRMMH",156,0)
 . S SCALE=$O(^YTT(601,MHIEN,"S","C",X,""))
"RTN","PXRMMH",157,0)
 . I SCALE="" K X
"RTN","PXRMMH",158,0)
 Q
"RTN","PXRMMH",159,0)
 ;
"RTN","PXRMMH",160,0)
 ;=======================================================================
"RTN","PXRMMH",161,0)
VSCALEF ;Make sure that mental health scale is valid for a finding.
"RTN","PXRMMH",162,0)
 I X="" Q
"RTN","PXRMMH",163,0)
 N FIND0
"RTN","PXRMMH",164,0)
 S FIND0=^PXD(811.9,DA(1),20,DA,0)
"RTN","PXRMMH",165,0)
 D VSCALE(FIND0)
"RTN","PXRMMH",166,0)
 Q
"RTN","PXRMMH",167,0)
 ;
"RTN","PXRMMH",168,0)
 ;=======================================================================
"RTN","PXRMMH",169,0)
VSCALET ;Make sure that mental health scale is valid for a term finding.
"RTN","PXRMMH",170,0)
 I X="" Q
"RTN","PXRMMH",171,0)
 N TFIND0
"RTN","PXRMMH",172,0)
 S TFIND0=^PXRMD(811.5,DA(1),20,DA,0)
"RTN","PXRMMH",173,0)
 D VSCALE(TFIND0)
"RTN","PXRMMH",174,0)
 Q
"RTN","PXRMMH",175,0)
 ;
"RTN","PXRMOBES")
1^192
"RTN","PXRMOPT")
0^77^B43916689
"RTN","PXRMOPT",1,0)
PXRMOPT ; SLC/PKR - Prepare the final reminder output. ;05/03/2000
"RTN","PXRMOPT",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMOPT",3,0)
 ;
"RTN","PXRMOPT",4,0)
 ;=======================================================================
"RTN","PXRMOPT",5,0)
ACTFT() ;Add the standard "condition false" text to the output string.
"RTN","PXRMOPT",6,0)
 ;Q " - VALUE DOES NOT MEET CRITERIA"
"RTN","PXRMOPT",7,0)
 Q ""
"RTN","PXRMOPT",8,0)
 ;
"RTN","PXRMOPT",9,0)
 ;=======================================================================
"RTN","PXRMOPT",10,0)
ADDTXT(NTXT,TXT) ;
"RTN","PXRMOPT",11,0)
 I $L(TXT)>DIWR D
"RTN","PXRMOPT",12,0)
 . N IC,X
"RTN","PXRMOPT",13,0)
 . D DIWPK^PXRMUTIL
"RTN","PXRMOPT",14,0)
 . S X=TXT
"RTN","PXRMOPT",15,0)
 . D ^DIWP
"RTN","PXRMOPT",16,0)
 . S IC=0
"RTN","PXRMOPT",17,0)
 . F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMOPT",18,0)
 .. S NTXT=NTXT+1
"RTN","PXRMOPT",19,0)
 .. S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM,"TXT",NTXT)=^UTILITY($J,"W",0,IC,0)
"RTN","PXRMOPT",20,0)
 . D DIWPK^PXRMUTIL
"RTN","PXRMOPT",21,0)
 E  D
"RTN","PXRMOPT",22,0)
 . S NTXT=NTXT+1
"RTN","PXRMOPT",23,0)
 . S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM,"TXT",NTXT)=TXT
"RTN","PXRMOPT",24,0)
 Q
"RTN","PXRMOPT",25,0)
 ;
"RTN","PXRMOPT",26,0)
 ;=======================================================================
"RTN","PXRMOPT",27,0)
FERROR(NTXT) ; Check for a fatal error and output a message.
"RTN","PXRMOPT",28,0)
 I '$D(^TMP(PXRMPID,$J,PXRMITEM,"FERROR")) Q 0
"RTN","PXRMOPT",29,0)
 N ERROR,TEXT
"RTN","PXRMOPT",30,0)
 ;Error trap
"RTN","PXRMOPT",31,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP")) D
"RTN","PXRMOPT",32,0)
 . S TEXT="There was an error processing this reminder, it could not be properly evaluated, see the error trap."
"RTN","PXRMOPT",33,0)
 . D ADDTXT(.NTXT,TEXT)
"RTN","PXRMOPT",34,0)
 ;Reminder errors
"RTN","PXRMOPT",35,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","NO REMINDER")) D
"RTN","PXRMOPT",36,0)
 . S TEXT=^TMP(PXRMPID,$J,PXRMITEM,"FERROR","NO REMINDER")
"RTN","PXRMOPT",37,0)
 . D ADDTXT(.NTXT,TEXT)
"RTN","PXRMOPT",38,0)
 ;
"RTN","PXRMOPT",39,0)
 ;Patient errors
"RTN","PXRMOPT",40,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","PATIENT")) D
"RTN","PXRMOPT",41,0)
 . S ERROR=$O(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","PATIENT",""))
"RTN","PXRMOPT",42,0)
 . I ERROR="NOPAT" S TEXT=^TMP(PXRMPID,$J,PXRMITEM,"FERROR","PATIENT","NOPAT")
"RTN","PXRMOPT",43,0)
 . I ERROR="NO LOCK" S TEXT="COULD NOT GET A LOCK FOR PATIENT "_DFN_" TRY AGAIN"
"RTN","PXRMOPT",44,0)
 . D ADDTXT(.NTXT,TEXT)
"RTN","PXRMOPT",45,0)
 Q 1
"RTN","PXRMOPT",46,0)
 ;
"RTN","PXRMOPT",47,0)
 ;=======================================================================
"RTN","PXRMOPT",48,0)
FNFTXT(NLINES,TEXT,DFN,FINDING,FIEVAL) ;Load the finding found not found text.
"RTN","PXRMOPT",49,0)
 N DES,FI,FNFTR,FOUND,LC,TA,X,UID,VSTR
"RTN","PXRMOPT",50,0)
 S FOUND=FIEVAL(FINDING)
"RTN","PXRMOPT",51,0)
 I $D(FIEVAL(FINDING,"VIEN")) D
"RTN","PXRMOPT",52,0)
 . N TEMP,VDATE,VLOC,VSC
"RTN","PXRMOPT",53,0)
 . S TEMP=^AUPNVSIT(FIEVAL(FINDING,"VIEN"),0)
"RTN","PXRMOPT",54,0)
 . S VDATE=$P(TEMP,U,1)
"RTN","PXRMOPT",55,0)
 . S VLOC=$P(TEMP,U,6)
"RTN","PXRMOPT",56,0)
 . S VSC=$P(TEMP,U,7)
"RTN","PXRMOPT",57,0)
 . S VSTR=VLOC_";"_VDATE_";"_VSC
"RTN","PXRMOPT",58,0)
 E  S VSTR=""
"RTN","PXRMOPT",59,0)
 I FOUND S FI=1,DES="FINDING "_FINDING_"_FOUND"
"RTN","PXRMOPT",60,0)
 E  S FI=2,DES="FINDING "_FINDING_" NOT_FOUND"
"RTN","PXRMOPT",61,0)
 S FNFTR="^PXD(811.9,"_PXRMITEM_",20,"_FINDING_","_FI_")"
"RTN","PXRMOPT",62,0)
 K ^TMP("TIUBOIL",$J)
"RTN","PXRMOPT",63,0)
 D BLRPLT^TIUSRVD(.TA,"",DFN,VSTR,FNFTR)
"RTN","PXRMOPT",64,0)
 D DIWPK^PXRMUTIL
"RTN","PXRMOPT",65,0)
 S LC=0
"RTN","PXRMOPT",66,0)
 F LC=1:1:$P(^TMP("TIUBOIL",$J,0),U,3) D
"RTN","PXRMOPT",67,0)
 . S X=$G(^TMP("TIUBOIL",$J,LC,0))
"RTN","PXRMOPT",68,0)
 . D ^DIWP
"RTN","PXRMOPT",69,0)
 S LC=0
"RTN","PXRMOPT",70,0)
 F  S LC=$O(^UTILITY($J,"W",0,LC)) Q:LC=""  D
"RTN","PXRMOPT",71,0)
 . S NLINES=NLINES+1
"RTN","PXRMOPT",72,0)
 . S TEXT(NLINES)=^UTILITY($J,"W",0,LC,0)
"RTN","PXRMOPT",73,0)
 . I $D(PXRMDEV) D
"RTN","PXRMOPT",74,0)
 .. S UID=DES_$$NTOAN^PXRMUTIL(LC)
"RTN","PXRMOPT",75,0)
 .. S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEXT(NLINES)
"RTN","PXRMOPT",76,0)
 D DIWPK^PXRMUTIL
"RTN","PXRMOPT",77,0)
 K ^TMP("TIUBOIL",$J)
"RTN","PXRMOPT",78,0)
 Q
"RTN","PXRMOPT",79,0)
 ;
"RTN","PXRMOPT",80,0)
 ;=======================================================================
"RTN","PXRMOPT",81,0)
INFO(NTXT) ;Output INFO text. An INFO node has the structure:
"RTN","PXRMOPT",82,0)
 ;(PXRMPID,$J,PXRMITEM,"INFO",DESCRIPTION)=TEXT
"RTN","PXRMOPT",83,0)
 N DES,TXT
"RTN","PXRMOPT",84,0)
 ;We don't put errors or warnings into the final output, they are for debugging
"RTN","PXRMOPT",85,0)
 ;new reminders.
"RTN","PXRMOPT",86,0)
 S DES=""
"RTN","PXRMOPT",87,0)
 F  S DES=$O(^TMP(PXRMPID,$J,PXRMITEM,"INFO",DES)) Q:DES=""  D
"RTN","PXRMOPT",88,0)
 . I (DES'="ERROR")&(DES'="WARNING") D
"RTN","PXRMOPT",89,0)
 .. S TXT=^TMP(PXRMPID,$J,PXRMITEM,"INFO",DES)
"RTN","PXRMOPT",90,0)
 .. D ADDTXT(.NTXT,TXT)
"RTN","PXRMOPT",91,0)
 Q
"RTN","PXRMOPT",92,0)
 ;
"RTN","PXRMOPT",93,0)
 ;=======================================================================
"RTN","PXRMOPT",94,0)
OUTPUT(PCLOGIC,RESLOGIC,RESDATE,FIEVAL) ;Prepare the clinical maintenance
"RTN","PXRMOPT",95,0)
 ; output.
"RTN","PXRMOPT",96,0)
 ;
"RTN","PXRMOPT",97,0)
 ;Establish the formatting parameters.
"RTN","PXRMOPT",98,0)
 N DIWF,DIWL,DIWR
"RTN","PXRMOPT",99,0)
 D DIWPS^PXRMUTIL(.DIWF,.DIWL,.DIWR)
"RTN","PXRMOPT",100,0)
 ;
"RTN","PXRMOPT",101,0)
 N AGE,IC,IND,INFO,FIDATA,FINDING,FLIST,FTYPE
"RTN","PXRMOPT",102,0)
 N HDR,NHDR,NLINES,NTXT,NUM,PCL,RES,TEMP,TYPE,TEXT
"RTN","PXRMOPT",103,0)
 ;Process the findings in the order: patient cohort, resolution,
"RTN","PXRMOPT",104,0)
 ;age, and informational.
"RTN","PXRMOPT",105,0)
 S NTXT=0
"RTN","PXRMOPT",106,0)
 ;Check for a fatal error
"RTN","PXRMOPT",107,0)
 I $$FERROR(.NTXT) Q
"RTN","PXRMOPT",108,0)
 ;Check for a dead patient
"RTN","PXRMOPT",109,0)
 I +$G(^XTMP(PXRMDFN,"DOD"))>0 D
"RTN","PXRMOPT",110,0)
 . S TEXT="Patient is deceased, date of death: "_$P(^XTMP(PXRMDFN,"DOD"),U,2)
"RTN","PXRMOPT",111,0)
 . D ADDTXT(.NTXT,TEXT)
"RTN","PXRMOPT",112,0)
 M FIDATA=FIEVAL
"RTN","PXRMOPT",113,0)
 S RES=$G(^PXD(811.9,PXRMITEM,36))_U_"RES"
"RTN","PXRMOPT",114,0)
 S PCL=$G(^PXD(811.9,PXRMITEM,32))_U_"PCL"
"RTN","PXRMOPT",115,0)
 S AGE=$G(^PXD(811.9,PXRMITEM,40))_U_"AGE"
"RTN","PXRMOPT",116,0)
 S INFO=$G(^PXD(811.9,PXRMITEM,42))_U_"INFO"
"RTN","PXRMOPT",117,0)
 F TYPE=PCL,RES,AGE,INFO D
"RTN","PXRMOPT",118,0)
 . S (NHDR,NLINES)=0
"RTN","PXRMOPT",119,0)
 . S NUM=+$P(TYPE,U,1)
"RTN","PXRMOPT",120,0)
 . S FLIST=$P(TYPE,U,2)
"RTN","PXRMOPT",121,0)
 . F IND=1:1:NUM D
"RTN","PXRMOPT",122,0)
 .. S FINDING=$P(FLIST,";",IND)
"RTN","PXRMOPT",123,0)
 ..;Make sure each finding is processed only once.
"RTN","PXRMOPT",124,0)
 .. I '$D(FIDATA(FINDING)) Q
"RTN","PXRMOPT",125,0)
 ..;
"RTN","PXRMOPT",126,0)
 ..;If there are no nodes below the top all we need to do is the
"RTN","PXRMOPT",127,0)
 ..;found not found text.
"RTN","PXRMOPT",128,0)
 .. I $D(FIEVAL(FINDING))=1 G FNF
"RTN","PXRMOPT",129,0)
 ..;
"RTN","PXRMOPT",130,0)
 .. S TEMP=FIEVAL(FINDING,"FINDING")
"RTN","PXRMOPT",131,0)
 .. S FTYPE=$P(TEMP,";",2)
"RTN","PXRMOPT",132,0)
 .. I $D(FIEVAL(FINDING,"TERM")) D OUTPUT^PXRMTERM(.NLINES,.TEXT,FINDING,.FIEVAL)
"RTN","PXRMOPT",133,0)
 .. I FTYPE="AUTTEDT(" D OUTPUT^PXRMEDU(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",134,0)
 .. I FTYPE="AUTTEXAM(" D OUTPUT^PXRMEXAM(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",135,0)
 .. I FTYPE="AUTTHF(" D OUTPUT^PXRMHF(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",136,0)
 .. I FTYPE="AUTTIMM(" D OUTPUT^PXRMIMM(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",137,0)
 .. I FTYPE="AUTTSK(" D OUTPUT^PXRMSKIN(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",138,0)
 .. I FTYPE="GMRD(120.51," D OUTPUT^PXRMMEAS(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",139,0)
 .. I FTYPE="LAB(60," D OUTPUT^PXRMLAB(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",140,0)
 .. I FTYPE="ORD(101.43," D OUTPUT^PXRMORDR(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",141,0)
 .. I FTYPE="PS(50.605," D OUTPUT^PXRMDRCL(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",142,0)
 .. I FTYPE="PSDRUG(" D OUTPUT^PXRMDRUG(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",143,0)
 .. I FTYPE="PSNDF(50.6," D OUTPUT^PXRMDGEN(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",144,0)
 .. I FTYPE="PXD(811.2," D OUTPUT^PXRMTAX(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",145,0)
 .. I FTYPE="PXRMD(811.4," D OUTPUT^PXRMCF(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",146,0)
 .. I FTYPE="RAMIS(71," D OUTPUT^PXRMRAD(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",147,0)
 .. I FTYPE="YTT(601," D OUTPUT^PXRMMH(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",148,0)
 ..;
"RTN","PXRMOPT",149,0)
FNF .. D FNFTXT(.NLINES,.TEXT,DFN,FINDING,.FIEVAL)
"RTN","PXRMOPT",150,0)
 ..;Make sure each finding is processed only once.
"RTN","PXRMOPT",151,0)
 .. K FIDATA(FINDING)
"RTN","PXRMOPT",152,0)
 .;If there was some text do the header.
"RTN","PXRMOPT",153,0)
 . S FTYPE=$P(TYPE,U,3)
"RTN","PXRMOPT",154,0)
 . I FTYPE="PCL" D PCL^PXRMLFNF(.NLINES,.TEXT,DFN,PCLOGIC)
"RTN","PXRMOPT",155,0)
 . I FTYPE="RES" D RESL^PXRMLFNF(.NLINES,.TEXT,DFN,RESLOGIC)
"RTN","PXRMOPT",156,0)
 .;
"RTN","PXRMOPT",157,0)
 . I (FTYPE="PCL") D
"RTN","PXRMOPT",158,0)
 .. S NHDR=2
"RTN","PXRMOPT",159,0)
 .. S HDR(1)=" "
"RTN","PXRMOPT",160,0)
 .. S HDR(2)="Applicable: "_$G(^TMP(PXRMPID,$J,PXRMITEM,"zFREQARNG"))
"RTN","PXRMOPT",161,0)
 .;
"RTN","PXRMOPT",162,0)
 . I (FTYPE="RES")&(+RESDATE>0) D
"RTN","PXRMOPT",163,0)
 .. S NHDR=2
"RTN","PXRMOPT",164,0)
 .. S HDR(1)=" "
"RTN","PXRMOPT",165,0)
 .. S HDR(2)="Resolution: Last done "_$$EDATE^PXRMDATE(RESDATE)
"RTN","PXRMOPT",166,0)
 .;
"RTN","PXRMOPT",167,0)
 . I (FTYPE="AGE")&(NLINES>0) D
"RTN","PXRMOPT",168,0)
 .. S NHDR=2
"RTN","PXRMOPT",169,0)
 .. S HDR(1)=" "
"RTN","PXRMOPT",170,0)
 .. S HDR(2)="Age:  "
"RTN","PXRMOPT",171,0)
 .;
"RTN","PXRMOPT",172,0)
 . I (FTYPE="INFO")&(NLINES>0) D
"RTN","PXRMOPT",173,0)
 .. S NHDR=2
"RTN","PXRMOPT",174,0)
 .. S HDR(1)=" "
"RTN","PXRMOPT",175,0)
 .. S HDR(2)="Information:  "
"RTN","PXRMOPT",176,0)
 .;
"RTN","PXRMOPT",177,0)
 . F IC=1:1:NHDR D ADDTXT(.NTXT,HDR(IC))
"RTN","PXRMOPT",178,0)
 . F IC=1:1:NLINES D ADDTXT(.NTXT,TEXT(IC))
"RTN","PXRMOPT",179,0)
 ;
"RTN","PXRMOPT",180,0)
 ;Output the AGE match/no match text.
"RTN","PXRMOPT",181,0)
 D MNMT^PXRMAGE(.NTXT,.FIEVAL)
"RTN","PXRMOPT",182,0)
 ;Output INFO nodes
"RTN","PXRMOPT",183,0)
 D INFO(.NTXT)
"RTN","PXRMOPT",184,0)
 Q
"RTN","PXRMOPT",185,0)
 ;
"RTN","PXRMORDR")
0^78^B13880203
"RTN","PXRMORDR",1,0)
PXRMORDR ; SLC/PKR - Handle order findings. ;06/09/2000
"RTN","PXRMORDR",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMORDR",3,0)
 ;
"RTN","PXRMORDR",4,0)
 ;=======================================================================
"RTN","PXRMORDR",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate radiology findings.
"RTN","PXRMORDR",6,0)
 N FIND0,FINDING,ORDER
"RTN","PXRMORDR",7,0)
 ;Go through the orders.
"RTN","PXRMORDR",8,0)
 S ORDER=""
"RTN","PXRMORDR",9,0)
 F  S ORDER=$O(^PXD(811.9,PXRMITEM,20,"E","ORD(101.43,",ORDER)) Q:+ORDER=0  D
"RTN","PXRMORDR",10,0)
 . S FINDING=""
"RTN","PXRMORDR",11,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","ORD(101.43,",ORDER,FINDING)) Q:+FINDING=0  D
"RTN","PXRMORDR",12,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMORDR",13,0)
 .. D FIEVAL(DFN,FIND0,"",FINDING,.FIEVAL,ORDER)
"RTN","PXRMORDR",14,0)
 Q
"RTN","PXRMORDR",15,0)
 ;
"RTN","PXRMORDR",16,0)
 ;=======================================================================
"RTN","PXRMORDR",17,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate radiology terms.
"RTN","PXRMORDR",18,0)
 N FIND0,ORDER,TFIND0,TFINDING
"RTN","PXRMORDR",19,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMORDR",20,0)
 ;Go through the orders.
"RTN","PXRMORDR",21,0)
 S ORDER=""
"RTN","PXRMORDR",22,0)
 F  S ORDER=$O(^PXRMD(811.5,TERMIEN,20,"E","ORD(101.43,",ORDER)) Q:+ORDER=0  D
"RTN","PXRMORDR",23,0)
 . S TFINDING=""
"RTN","PXRMORDR",24,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","ORD(101.43,",ORDER,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMORDR",25,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMORDR",26,0)
 .. D FIEVAL(DFN,FIND0,TFIND0,TFINDING,.TFIEVAL,ORDER)
"RTN","PXRMORDR",27,0)
 Q
"RTN","PXRMORDR",28,0)
 ;
"RTN","PXRMORDR",29,0)
 ;=======================================================================
"RTN","PXRMORDR",30,0)
FIEVAL(DFN,FIND0,TFIND0,FINDING,FIEVAL,ORDER) ;
"RTN","PXRMORDR",31,0)
 N ADATE,CONVAL,DATE,IND,ORINFO,PDATE
"RTN","PXRMORDR",32,0)
 N SIND,STATUS,TEMP,VALID
"RTN","PXRMORDR",33,0)
 ;
"RTN","PXRMORDR",34,0)
 S FIEVAL(FINDING)=0
"RTN","PXRMORDR",35,0)
 ;Get the matches
"RTN","PXRMORDR",36,0)
 K ORINFO
"RTN","PXRMORDR",37,0)
 D LATEST^ORX8(DFN,ORDER,.ORINFO)
"RTN","PXRMORDR",38,0)
 ;If ORINFO=0 the patient has never had this order.
"RTN","PXRMORDR",39,0)
 I ORINFO=0 Q
"RTN","PXRMORDR",40,0)
 S STATUS=""
"RTN","PXRMORDR",41,0)
 ;First look for orders with a status of pending or active. By
"RTN","PXRMORDR",42,0)
 ;default these will make the finding true. Get the start date.
"RTN","PXRMORDR",43,0)
 S PDATE=+$P($G(ORINFO(5)),U,4)
"RTN","PXRMORDR",44,0)
 S ADATE=+$P($G(ORINFO(6)),U,4)
"RTN","PXRMORDR",45,0)
 I (PDATE>0)&(PDATE>ADATE) D
"RTN","PXRMORDR",46,0)
 . S FIEVAL(FINDING)=1
"RTN","PXRMORDR",47,0)
 . S FIEVAL(FINDING,"FINDING")=ORDER_";ORD(101.43,"
"RTN","PXRMORDR",48,0)
 . S FIEVAL(FINDING,"DATE")=PDATE
"RTN","PXRMORDR",49,0)
 . S STATUS=$P(ORINFO(5),U,7)
"RTN","PXRMORDR",50,0)
 . S SIND=5
"RTN","PXRMORDR",51,0)
 I (ADATE>0)&(ADATE'<PDATE) D
"RTN","PXRMORDR",52,0)
 . S FIEVAL(FINDING)=1
"RTN","PXRMORDR",53,0)
 . S FIEVAL(FINDING,"FINDING")=ORDER_";ORD(101.43,"
"RTN","PXRMORDR",54,0)
 . S FIEVAL(FINDING,"DATE")=ADATE
"RTN","PXRMORDR",55,0)
 . S STATUS=$P(ORINFO(6),U,7)
"RTN","PXRMORDR",56,0)
 . S SIND=6
"RTN","PXRMORDR",57,0)
 ;If no pending or active status were found use the one with the
"RTN","PXRMORDR",58,0)
 ;most recent date.
"RTN","PXRMORDR",59,0)
 I 'FIEVAL(FINDING) D
"RTN","PXRMORDR",60,0)
 . S (DATE,IND)=0
"RTN","PXRMORDR",61,0)
 . F  S IND=$O(ORINFO(IND)) Q:+IND=0  D
"RTN","PXRMORDR",62,0)
 .. S TEMP=+$P(ORINFO(IND),U,4)
"RTN","PXRMORDR",63,0)
 .. I TEMP>DATE D
"RTN","PXRMORDR",64,0)
 ... S DATE=TEMP
"RTN","PXRMORDR",65,0)
 ... S STATUS=$P(ORINFO(IND),U,7)
"RTN","PXRMORDR",66,0)
 ... S SIND=IND
"RTN","PXRMORDR",67,0)
 . S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMORDR",68,0)
 . S FIEVAL(FINDING,"FINDING")=ORDER_";ORD(101.43,"
"RTN","PXRMORDR",69,0)
 ;Save the rest of the finding information.
"RTN","PXRMORDR",70,0)
 I STATUS'="" D
"RTN","PXRMORDR",71,0)
 . S FIEVAL(FINDING,"STATUS")=STATUS
"RTN","PXRMORDR",72,0)
 . S FIEVAL(FINDING,"VALUE")=STATUS
"RTN","PXRMORDR",73,0)
 S TEMP=ORINFO(SIND)
"RTN","PXRMORDR",74,0)
 S FIEVAL(FINDING,"ORIEN")=$P(TEMP,U,1)
"RTN","PXRMORDR",75,0)
 S FIEVAL(FINDING,"ORDERED BY")=$P(TEMP,U,2)
"RTN","PXRMORDR",76,0)
 S FIEVAL(FINDING,"LOCATION")=$P(TEMP,U,6)
"RTN","PXRMORDR",77,0)
 ;Determine if the finding has expired.
"RTN","PXRMORDR",78,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,FIEVAL(FINDING,"DATE"))
"RTN","PXRMORDR",79,0)
 I 'VALID D
"RTN","PXRMORDR",80,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMORDR",81,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMORDR",82,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMORDR",83,0)
 S CONVAL=$$COND^PXRMUTIL(FIND0,TFIND0,FIEVAL(FINDING,"VALUE"))
"RTN","PXRMORDR",84,0)
 I CONVAL'="" D
"RTN","PXRMORDR",85,0)
 . I CONVAL D
"RTN","PXRMORDR",86,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMORDR",87,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMORDR",88,0)
 . E  D
"RTN","PXRMORDR",89,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMORDR",90,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMORDR",91,0)
 Q
"RTN","PXRMORDR",92,0)
 ;
"RTN","PXRMORDR",93,0)
 ;=======================================================================
"RTN","PXRMORDR",94,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMORDR",95,0)
 ;maintenance output.
"RTN","PXRMORDR",96,0)
 N D0,DATE,NAME,OI,TEMP
"RTN","PXRMORDR",97,0)
 S OI=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMORDR",98,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMORDR",99,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMORDR",100,0)
 S TEMP=TEMP_" Orderable Item: "
"RTN","PXRMORDR",101,0)
 S D0=^ORD(101.43,OI,0)
"RTN","PXRMORDR",102,0)
 S NAME=$P(D0,U,1)
"RTN","PXRMORDR",103,0)
 S TEMP=TEMP_NAME
"RTN","PXRMORDR",104,0)
 S TEMP=TEMP_"; status:  "_FIEVAL(FINDING,"STATUS")
"RTN","PXRMORDR",105,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMORDR",106,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMORDR",107,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMORDR",108,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMORDR",109,0)
 S NLINES=NLINES+1
"RTN","PXRMORDR",110,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMORDR",111,0)
 I $D(PXRMDEV) D
"RTN","PXRMORDR",112,0)
 . N UID
"RTN","PXRMORDR",113,0)
 . S UID="ORDER "_NAME
"RTN","PXRMORDR",114,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMORDR",115,0)
 Q
"RTN","PXRMORDR",116,0)
 ;
"RTN","PXRMP16I")
1^193
"RTN","PXRMP53I")
1^194
"RTN","PXRMPCIN")
0^167^B492767
"RTN","PXRMPCIN",1,0)
PXRMPCIN ; SLC/PKR - Computed findings for primary care info. ;01/18/2000
"RTN","PXRMPCIN",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMPCIN",3,0)
 ;
"RTN","PXRMPCIN",4,0)
 ;=======================================================================
"RTN","PXRMPCIN",5,0)
PROVIDER(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for a patient's
"RTN","PXRMPCIN",6,0)
 ;primary care provider. Value is the name which is the .01 node
"RTN","PXRMPCIN",7,0)
 ;of file #200 the NEW PERSON file.
"RTN","PXRMPCIN",8,0)
 N PP
"RTN","PXRMPCIN",9,0)
 S DATE=DT
"RTN","PXRMPCIN",10,0)
 S PP=$P($$OUTPTPR^SDUTL3(DFN,DT),U,2)
"RTN","PXRMPCIN",11,0)
 I PP="" S TEST=0
"RTN","PXRMPCIN",12,0)
 E  D
"RTN","PXRMPCIN",13,0)
 . S TEST=1
"RTN","PXRMPCIN",14,0)
 . S VALUE=PP
"RTN","PXRMPCIN",15,0)
 Q
"RTN","PXRMPCIN",16,0)
 ;
"RTN","PXRMPCIN",17,0)
 ;=======================================================================
"RTN","PXRMPCIN",18,0)
TEAM(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for a patient's primary
"RTN","PXRMPCIN",19,0)
 ;care team. Value is the name which is the .01 node
"RTN","PXRMPCIN",20,0)
 ;of file 404.51 the TEAM file.
"RTN","PXRMPCIN",21,0)
 N PT
"RTN","PXRMPCIN",22,0)
 S DATE=DT
"RTN","PXRMPCIN",23,0)
 S PT=$P($$OUTPTTM^SDUTL3(DFN,DT),U,2)
"RTN","PXRMPCIN",24,0)
 I PT="" S TEST=0
"RTN","PXRMPCIN",25,0)
 E  D
"RTN","PXRMPCIN",26,0)
 . S TEST=1
"RTN","PXRMPCIN",27,0)
 . S VALUE=PT
"RTN","PXRMPCIN",28,0)
 Q
"RTN","PXRMPCIN",29,0)
 ;
"RTN","PXRMPDEM")
0^166^B569516
"RTN","PXRMPDEM",1,0)
PXRMPDEM ; SLC/PKR - Computed findings for patient demographics. ;01/13/2000
"RTN","PXRMPDEM",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMPDEM",3,0)
 ;
"RTN","PXRMPDEM",4,0)
 ;=======================================================================
"RTN","PXRMPDEM",5,0)
DOB(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for checking a patient's
"RTN","PXRMPDEM",6,0)
 ;date of birth.
"RTN","PXRMPDEM",7,0)
 S DATE=DT
"RTN","PXRMPDEM",8,0)
 I PXRMDOB="" S TEST=0
"RTN","PXRMPDEM",9,0)
 E  D
"RTN","PXRMPDEM",10,0)
 . S TEST=1
"RTN","PXRMPDEM",11,0)
 . S VALUE=PXRMDOB
"RTN","PXRMPDEM",12,0)
 Q
"RTN","PXRMPDEM",13,0)
 ;
"RTN","PXRMPDEM",14,0)
 ;=======================================================================
"RTN","PXRMPDEM",15,0)
DOD(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for checking a patient's
"RTN","PXRMPDEM",16,0)
 ;date of death.
"RTN","PXRMPDEM",17,0)
 S DATE=DT
"RTN","PXRMPDEM",18,0)
 I PXRMDOD="" S TEST=0
"RTN","PXRMPDEM",19,0)
 E  D
"RTN","PXRMPDEM",20,0)
 . S TEST=1
"RTN","PXRMPDEM",21,0)
 . S VALUE=PXRMDOD
"RTN","PXRMPDEM",22,0)
 Q
"RTN","PXRMPDEM",23,0)
 ;
"RTN","PXRMPDEM",24,0)
 ;=======================================================================
"RTN","PXRMPDEM",25,0)
RACE(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for checking a patient's race.
"RTN","PXRMPDEM",26,0)
 S DATE=DT
"RTN","PXRMPDEM",27,0)
 I PXRMRACE="" S TEST=0
"RTN","PXRMPDEM",28,0)
 E  D
"RTN","PXRMPDEM",29,0)
 . S TEST=1
"RTN","PXRMPDEM",30,0)
 . S VALUE=$P(PXRMRACE,U,2)
"RTN","PXRMPDEM",31,0)
 Q
"RTN","PXRMPDEM",32,0)
 ;
"RTN","PXRMPINF")
0^81^B7007544
"RTN","PXRMPINF",1,0)
PXRMPINF ; SLC/PKR - Routines relating to patient information. ;06/09/2000
"RTN","PXRMPINF",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMPINF",3,0)
 ;
"RTN","PXRMPINF",4,0)
 ;=======================================================================
"RTN","PXRMPINF",5,0)
DATACHG ;This entry point is called whenever patient data has changed.
"RTN","PXRMPINF",6,0)
 ;It is attached to the following event points:
"RTN","PXRMPINF",7,0)
 ;PXK VISIT DATA EVENT
"RTN","PXRMPINF",8,0)
 ;
"RTN","PXRMPINF",9,0)
 N DFN,PXRMDFN
"RTN","PXRMPINF",10,0)
 S DFN=""
"RTN","PXRMPINF",11,0)
 ;Look for PXK VISIT DATA EVENT data.
"RTN","PXRMPINF",12,0)
 I $D(^TMP("PXKCO",$J)) D
"RTN","PXRMPINF",13,0)
 . N DATA,IEN,NODE,VISIT
"RTN","PXRMPINF",14,0)
 . S VISIT=$O(^TMP("PXKCO",$J,""))
"RTN","PXRMPINF",15,0)
 . S IEN=$O(^TMP("PXKCO",$J,VISIT,"VST",""))
"RTN","PXRMPINF",16,0)
 . S NODE=$O(^TMP("PXKCO",$J,VISIT,"VST",IEN,""))
"RTN","PXRMPINF",17,0)
 . S DATA=$G(^TMP("PXKCO",$J,VISIT,"VST",IEN,NODE,"AFTER"))
"RTN","PXRMPINF",18,0)
 . I DATA="" S DATA=$G(^TMP("PXKCO",$J,VISIT,"VST",IEN,NODE,"BEFORE"))
"RTN","PXRMPINF",19,0)
 . S DFN=$P(DATA,U,5)
"RTN","PXRMPINF",20,0)
 ;
"RTN","PXRMPINF",21,0)
 S PXRMDFN="PXRMDFN"_DFN
"RTN","PXRMPINF",22,0)
 D KILLPC(PXRMDFN)
"RTN","PXRMPINF",23,0)
 Q
"RTN","PXRMPINF",24,0)
 ;
"RTN","PXRMPINF",25,0)
 ;=======================================================================
"RTN","PXRMPINF",26,0)
DEM(DFN) ;Load the patient demographics.
"RTN","PXRMPINF",27,0)
 I $L(DFN)'>0 Q "NO PATIENT"
"RTN","PXRMPINF",28,0)
 N DATEBLT,EXPDATE,NOW,PATIENT,TEMP
"RTN","PXRMPINF",29,0)
 S PXRMDFN="PXRMDFN"_DFN
"RTN","PXRMPINF",30,0)
 ;Since the Kernel Installation Guide suggests running XUTL once every
"RTN","PXRMPINF",31,0)
 ;7 days we need to check for expired patient caches.
"RTN","PXRMPINF",32,0)
 S TEMP=$G(^XTMP(PXRMDFN,0))
"RTN","PXRMPINF",33,0)
 S DATEBLT=+$P(TEMP,U,2)
"RTN","PXRMPINF",34,0)
 S EXPDATE=+$P(TEMP,U,1)
"RTN","PXRMPINF",35,0)
 ;If the patient's problem list has been modified since the cache was
"RTN","PXRMPINF",36,0)
 ;last built kill it.
"RTN","PXRMPINF",37,0)
 S NOW=$$NOW^XLFDT
"RTN","PXRMPINF",38,0)
 I (NOW>EXPDATE)!((+$$MOD^GMPLUTL3(DFN))>(DATEBLT)) D KILLPC(PXRMDFN)
"RTN","PXRMPINF",39,0)
 ;
"RTN","PXRMPINF",40,0)
 I '$$LOCKPC(PXRMDFN) Q "NO LOCK"
"RTN","PXRMPINF",41,0)
 I $D(^XTMP(PXRMDFN,0)) D
"RTN","PXRMPINF",42,0)
 . S PATIENT=^XTMP(PXRMDFN,"PATIENT")
"RTN","PXRMPINF",43,0)
 . S PXRMSSN=^XTMP(PXRMDFN,"SSN")
"RTN","PXRMPINF",44,0)
 . S PXRMDOB=^XTMP(PXRMDFN,"DOB")
"RTN","PXRMPINF",45,0)
 . S PXRMAGE=^XTMP(PXRMDFN,"AGE")
"RTN","PXRMPINF",46,0)
 . S PXRMSEX=^XTMP(PXRMDFN,"SEX")
"RTN","PXRMPINF",47,0)
 . S PXRMDOD=^XTMP(PXRMDFN,"DOD")
"RTN","PXRMPINF",48,0)
 . S PXRMRACE=^XTMP(PXRMDFN,"RACE")
"RTN","PXRMPINF",49,0)
 E  D
"RTN","PXRMPINF",50,0)
 . D DEM^VADPT
"RTN","PXRMPINF",51,0)
 . S (PATIENT,^XTMP(PXRMDFN,"PATIENT"))=VADM(1)
"RTN","PXRMPINF",52,0)
 . S (PXRMSSN,^XTMP(PXRMDFN,"SSN"))=VADM(2)
"RTN","PXRMPINF",53,0)
 . S (PXRMDOB,^XTMP(PXRMDFN,"DOB"))=$P(VADM(3),U,1)
"RTN","PXRMPINF",54,0)
 . S (PXRMAGE,^XTMP(PXRMDFN,"AGE"))=VADM(4)
"RTN","PXRMPINF",55,0)
 . S (PXRMSEX,^XTMP(PXRMDFN,"SEX"))=VADM(5)
"RTN","PXRMPINF",56,0)
 . S (PXRMDOD,^XTMP(PXRMDFN,"DOD"))=$P(VADM(6),U,1)
"RTN","PXRMPINF",57,0)
 . S (PXRMRACE,^XTMP(PXRMDFN,"RACE"))=$P(VADM(8),U,2)
"RTN","PXRMPINF",58,0)
 . D KVA^VADPT
"RTN","PXRMPINF",59,0)
 . S ^XTMP(PXRMDFN,0)=(NOW+1)_U_NOW_U_"PXRM PATIENT DATA CACHE"
"RTN","PXRMPINF",60,0)
 ;If PXRMDATE has a value then the reminder is evaluated as if PXRMDATE
"RTN","PXRMPINF",61,0)
 ;is the current date.
"RTN","PXRMPINF",62,0)
 I +$G(PXRMDATE)>0 D
"RTN","PXRMPINF",63,0)
 . S PXRMAGE=$$AGE^PXRMAGE(PXRMDOB,PXRMDATE)
"RTN","PXRMPINF",64,0)
 I $L(PATIENT)'>0 Q "NO PATIENT"
"RTN","PXRMPINF",65,0)
 E  Q 1
"RTN","PXRMPINF",66,0)
 ;
"RTN","PXRMPINF",67,0)
 ;=======================================================================
"RTN","PXRMPINF",68,0)
KILLPC(PXRMDFN) ;Kill the patient cache.
"RTN","PXRMPINF",69,0)
 N LOCK
"RTN","PXRMPINF",70,0)
 S LOCK=$$LOCKPC(PXRMDFN)
"RTN","PXRMPINF",71,0)
 I LOCK D
"RTN","PXRMPINF",72,0)
 . K ^XTMP(PXRMDFN)
"RTN","PXRMPINF",73,0)
 . D UNLOCKPC(PXRMDFN)
"RTN","PXRMPINF",74,0)
 Q
"RTN","PXRMPINF",75,0)
 ;
"RTN","PXRMPINF",76,0)
 ;=======================================================================
"RTN","PXRMPINF",77,0)
LOCKPC(PXRMDFN) ;Lock the patient cache.
"RTN","PXRMPINF",78,0)
 N IND,LOCK
"RTN","PXRMPINF",79,0)
 S LOCK=0
"RTN","PXRMPINF",80,0)
 F IND=1:1:30 Q:LOCK  D
"RTN","PXRMPINF",81,0)
 . L +^XTMP(PXRMDFN):1
"RTN","PXRMPINF",82,0)
 . S LOCK=$T
"RTN","PXRMPINF",83,0)
 Q LOCK
"RTN","PXRMPINF",84,0)
 ;
"RTN","PXRMPINF",85,0)
 ;=======================================================================
"RTN","PXRMPINF",86,0)
UNLOCKPC(PXRMDFN) ;Unlock the patient cache.
"RTN","PXRMPINF",87,0)
 L -^XTMP(PXRMDFN)
"RTN","PXRMPINF",88,0)
 Q
"RTN","PXRMPINF",89,0)
 ;
"RTN","PXRMPROB")
0^82^B15280542
"RTN","PXRMPROB",1,0)
PXRMPROB ; SLC/PKR - Code to treat items from the Problem List. ;05/18/2000
"RTN","PXRMPROB",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMPROB",3,0)
 ;
"RTN","PXRMPROB",4,0)
 ;=======================================================================
"RTN","PXRMPROB",5,0)
BLDPC(DFN) ;Check and if necessary build the Problem List patient cache.
"RTN","PXRMPROB",6,0)
 N DATE,ICD9P,INVDATE,INVDT,NPATIEN,PROBIEN,TEMP
"RTN","PXRMPROB",7,0)
 N GMPLCOND,GMPLDLM,GMPLICD,GMPLLEX,GMPLODAT,GMPLPNAM,GMPLPRIO,GMPLPRV
"RTN","PXRMPROB",8,0)
 N GMPLSTAT,GMPLTXT,GMPLXDAT
"RTN","PXRMPROB",9,0)
 ;If the patient's problem list was modified since the cache was
"RTN","PXRMPROB",10,0)
 ;last built the cache will have been killed in PXRMPINF.
"RTN","PXRMPROB",11,0)
 I '$D(^XTMP(PXRMDFN,"PROB","NPATIEN")) D
"RTN","PXRMPROB",12,0)
 . K ^XTMP(PXRMDFN,"PROB")
"RTN","PXRMPROB",13,0)
 . S INVDT=$$INVFFMDL^PXRMDATE(DT,1)
"RTN","PXRMPROB",14,0)
 . S PROBIEN=""
"RTN","PXRMPROB",15,0)
 . F  S PROBIEN=$O(^AUPNPROB("AC",DFN,PROBIEN)) Q:PROBIEN=""  D
"RTN","PXRMPROB",16,0)
 .. D CALL2^GMPLUTL3(PROBIEN)
"RTN","PXRMPROB",17,0)
 .. I (GMPLCOND="H")!(GMPLCOND="") Q
"RTN","PXRMPROB",18,0)
 .. S INVDATE=$$INVFFMDL^PXRMDATE(GMPLDLM,1)
"RTN","PXRMPROB",19,0)
 ..;If the problem is chronic use today's date instead of the
"RTN","PXRMPROB",20,0)
 ..;date last modified.
"RTN","PXRMPROB",21,0)
 .. I GMPLPRIO="C" D
"RTN","PXRMPROB",22,0)
 ... S DATE=DT
"RTN","PXRMPROB",23,0)
 ... S INVDATE=INVDT
"RTN","PXRMPROB",24,0)
 .. E  S DATE=GMPLDLM
"RTN","PXRMPROB",25,0)
 .. S ^TMP($J,"PROB",GMPLICD,INVDATE)=PROBIEN_U_U_DATE_U_GMPLICD_U_GMPLSTAT
"RTN","PXRMPROB",26,0)
 .;
"RTN","PXRMPROB",27,0)
 .;Build the list of most recent entries.
"RTN","PXRMPROB",28,0)
 . S NPATIEN=0
"RTN","PXRMPROB",29,0)
 . S ICD9P=""
"RTN","PXRMPROB",30,0)
 . F  S ICD9P=$O(^TMP($J,"PROB",ICD9P)) Q:ICD9P=""  D
"RTN","PXRMPROB",31,0)
 .. S INVDATE=$O(^TMP($J,"PROB",ICD9P,""))
"RTN","PXRMPROB",32,0)
 .. S NPATIEN=NPATIEN+1
"RTN","PXRMPROB",33,0)
 .. S TEMP=^TMP($J,"PROB",ICD9P,INVDATE)
"RTN","PXRMPROB",34,0)
 .. S ^XTMP(PXRMDFN,"PROB",ICD9P,INVDATE)=TEMP
"RTN","PXRMPROB",35,0)
 . S ^XTMP(PXRMDFN,"PROB","NPATIEN")=NPATIEN
"RTN","PXRMPROB",36,0)
 . K ^TMP($J,"PROB")
"RTN","PXRMPROB",37,0)
 E  S NPATIEN=^XTMP(PXRMDFN,"PROB","NPATIEN")
"RTN","PXRMPROB",38,0)
 Q NPATIEN
"RTN","PXRMPROB",39,0)
 ;
"RTN","PXRMPROB",40,0)
 ;=======================================================================
"RTN","PXRMPROB",41,0)
EVAL(DFN,FIND0,TFIND0,TAXIEN,FLIST) ;Evaluate Problem List entries.
"RTN","PXRMPROB",42,0)
 N FIRST,ICD9P,INVDATE,LAST,NPATIEN,TAX0,TLIST,USEINP
"RTN","PXRMPROB",43,0)
 S NPATIEN=$$BLDPC(DFN)
"RTN","PXRMPROB",44,0)
 I NPATIEN=0 Q
"RTN","PXRMPROB",45,0)
 ;Get the first and last entry in the patient cache, use this for the
"RTN","PXRMPROB",46,0)
 ;match limits.
"RTN","PXRMPROB",47,0)
 S FIRST=$O(^XTMP(PXRMDFN,"PROB",""))
"RTN","PXRMPROB",48,0)
 S LAST=$O(^XTMP(PXRMDFN,"PROB","NPATIEN"),-1)
"RTN","PXRMPROB",49,0)
 S ICD9P=FIRST-1
"RTN","PXRMPROB",50,0)
 F  S ICD9P=$O(^PXD(811.3,TAXIEN,80,"ICD9P",ICD9P)) Q:(ICD9P>LAST)!(ICD9P="")  D
"RTN","PXRMPROB",51,0)
 . S INVDATE=+$O(^XTMP(PXRMDFN,"PROB",ICD9P,""))
"RTN","PXRMPROB",52,0)
 . I INVDATE>0 D
"RTN","PXRMPROB",53,0)
 .. S TLIST(INVDATE)=$G(^XTMP(PXRMDFN,"PROB",ICD9P,INVDATE))
"RTN","PXRMPROB",54,0)
 S INVDATE=$O(TLIST(""))
"RTN","PXRMPROB",55,0)
 ;If there are no entries we are done.
"RTN","PXRMPROB",56,0)
 I INVDATE="" Q
"RTN","PXRMPROB",57,0)
 S TAX0=^PXD(811.2,TAXIEN,0)
"RTN","PXRMPROB",58,0)
 S USEINP=$P(TAX0,U,9)
"RTN","PXRMPROB",59,0)
 I USEINP="" S USEINP=$P(TFIND0,U,9)
"RTN","PXRMPROB",60,0)
 I USEINP="" S USEINP=$P(FIND0,U,9)
"RTN","PXRMPROB",61,0)
 ;If Use Inactive Problems is true return the most recent entry no
"RTN","PXRMPROB",62,0)
 ;matter what the status. If it is false return the most recent
"RTN","PXRMPROB",63,0)
 ;active entry.
"RTN","PXRMPROB",64,0)
 I 'USEINP D
"RTN","PXRMPROB",65,0)
 . N DONE,STATUS
"RTN","PXRMPROB",66,0)
 . S DONE=0
"RTN","PXRMPROB",67,0)
 . S INVDATE=""
"RTN","PXRMPROB",68,0)
 . F  S INVDATE=$O(TLIST(INVDATE)) Q:(DONE)!(INVDATE="")  D
"RTN","PXRMPROB",69,0)
 .. S STATUS=$P(TLIST(INVDATE),U,5)
"RTN","PXRMPROB",70,0)
 .. I STATUS="A" D
"RTN","PXRMPROB",71,0)
 ... S FLIST(INVDATE,"AUPNPROB")=TLIST(INVDATE)
"RTN","PXRMPROB",72,0)
 ... S DONE=1
"RTN","PXRMPROB",73,0)
 E  S FLIST(INVDATE,"AUPNPROB")=TLIST(INVDATE)
"RTN","PXRMPROB",74,0)
 Q
"RTN","PXRMPROB",75,0)
 ;
"RTN","PXRMPROB",76,0)
 ;======================================================================
"RTN","PXRMPROB",77,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMPROB",78,0)
 ;maintenance output. The Problem List information is:  DATE, ICD9 IEN, 
"RTN","PXRMPROB",79,0)
 ;ICD9 CODE, PROVIDER NARRATIVE.
"RTN","PXRMPROB",80,0)
 N EM,D0,DIAG,FIEN,ICD9P,ICD9ZN,PN,PRIORITY,TEMP,VDATE
"RTN","PXRMPROB",81,0)
 S FIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMPROB",82,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMPROB",83,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMPROB",84,0)
 S TEMP=TEMP_" Problem Diagnosis: "
"RTN","PXRMPROB",85,0)
 S D0=$G(^AUPNPROB(FIEN,0))
"RTN","PXRMPROB",86,0)
 S ICD9P=FIEVAL(FINDING,"CODEP")
"RTN","PXRMPROB",87,0)
 S ICD9ZN=$$GET0^PXRMICD9(ICD9P)
"RTN","PXRMPROB",88,0)
 S CODE=$P(ICD9ZN,U,1)
"RTN","PXRMPROB",89,0)
 S DIAG=$P(ICD9ZN,U,3)
"RTN","PXRMPROB",90,0)
 S TEMP=TEMP_CODE_" "_DIAG
"RTN","PXRMPROB",91,0)
 S PRIORITY=$G(FIEVAL(FINDING,"PRIORITY"))
"RTN","PXRMPROB",92,0)
 I $L(PRIORITY)>0 D
"RTN","PXRMPROB",93,0)
 . S TEMP=TEMP_" ("_$$EXTERNAL^DILFD(9000011,1.14,"",PRIORITY,.EM)_") "
"RTN","PXRMPROB",94,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMPROB",95,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMPROB",96,0)
 ;If the Problem is inactive add "INACTIVE PROBLEM"
"RTN","PXRMPROB",97,0)
 I $D(FIEVAL(FINDING,"INACTIVE")) S TEMP=TEMP_" - INACTIVE PROBLEM"
"RTN","PXRMPROB",98,0)
 S NLINES=NLINES+1
"RTN","PXRMPROB",99,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMPROB",100,0)
 S PN=$P(D0,U,5)
"RTN","PXRMPROB",101,0)
 S PN=$P(^AUTNPOV(PN,0),U,1)
"RTN","PXRMPROB",102,0)
 I ($L(PN)>0)&(PN'=DIAG) D
"RTN","PXRMPROB",103,0)
 . S NLINES=NLINES+1
"RTN","PXRMPROB",104,0)
 . S TEXT(NLINES)="  Prov. Narr. - "_PN
"RTN","PXRMPROB",105,0)
 I $D(PXRMDEV) D
"RTN","PXRMPROB",106,0)
 . N UID
"RTN","PXRMPROB",107,0)
 . S UID="ICD9PROB "_CODE
"RTN","PXRMPROB",108,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"CODE")=CODE
"RTN","PXRMPROB",109,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"DATE")=VDATE
"RTN","PXRMPROB",110,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"DIAG")=DIAG
"RTN","PXRMPROB",111,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"PN")=PN
"RTN","PXRMPROB",112,0)
 Q
"RTN","PXRMPROB",113,0)
 ;
"RTN","PXRMPROC")
1^195
"RTN","PXRMPROP")
1^196
"RTN","PXRMPT")
0^85^B30144377
"RTN","PXRMPT",1,0)
PXRMPT ; SLC/DLT,PJH,PKR - Routines for reminder print templates ;05/30/2000
"RTN","PXRMPT",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMPT",3,0)
 ;
"RTN","PXRMPT",4,0)
 ;======================================================================
"RTN","PXRMPT",5,0)
AFREQ ; Print baseline FREQUENCY/AGE RANGE.
"RTN","PXRMPT",6,0)
 N PXAMAX,PXAMIN,PXF,PXF0,PXW
"RTN","PXRMPT",7,0)
 S PXF0=$G(^PXD(811.9,D0,7,D1,0))
"RTN","PXRMPT",8,0)
 S PXF=$P(PXF0,U,1)
"RTN","PXRMPT",9,0)
 S PXAMIN=$P(PXF0,U,2)
"RTN","PXRMPT",10,0)
 S PXAMAX=$P(PXF0,U,3)
"RTN","PXRMPT",11,0)
 I PXF="" S PXW="  MISSING FREQUENCY"
"RTN","PXRMPT",12,0)
 S PXW="  "_$$FREQ(PXF)
"RTN","PXRMPT",13,0)
 S PXW=PXW_$$FMTAGE^PXRMAGE(PXAMIN,PXAMAX)
"RTN","PXRMPT",14,0)
 W PXW
"RTN","PXRMPT",15,0)
 Q
"RTN","PXRMPT",16,0)
 ;
"RTN","PXRMPT",17,0)
 ;======================================================================
"RTN","PXRMPT",18,0)
DUEWI ;Print DO WITHIN time frame
"RTN","PXRMPT",19,0)
 N PXF,PXW
"RTN","PXRMPT",20,0)
 S PXF=$P($G(^PXD(811.9,D0,0)),U,4)
"RTN","PXRMPT",21,0)
 I (PXF="")!(+PXF=0) W "  Wait until actually DUE" Q
"RTN","PXRMPT",22,0)
 S PXW=$$FREQ(PXF)
"RTN","PXRMPT",23,0)
 W "  Do if DUE within "_PXW
"RTN","PXRMPT",24,0)
 Q
"RTN","PXRMPT",25,0)
 ;
"RTN","PXRMPT",26,0)
 ;======================================================================
"RTN","PXRMPT",27,0)
FREQ(FREQ) ;Format frequency.
"RTN","PXRMPT",28,0)
 N STR
"RTN","PXRMPT",29,0)
 I +FREQ=0 S STR=FREQ_" - Not Indicated" Q STR
"RTN","PXRMPT",30,0)
 I FREQ?1"99Y" S STR="99Y - Once"
"RTN","PXRMPT",31,0)
 E  S STR=+FREQ_($S(FREQ?1N.N1"D":" day",FREQ?1N.N1"M":" month",FREQ?1N.N1"Y":" year",1:""))_$S(+FREQ>1:"s",1:"")
"RTN","PXRMPT",32,0)
 Q STR
"RTN","PXRMPT",33,0)
 ;
"RTN","PXRMPT",34,0)
 ;======================================================================
"RTN","PXRMPT",35,0)
FTYPE ;Print finding type.
"RTN","PXRMPT",36,0)
 N F0,IEN,FTYPE,ROOT,VPTR
"RTN","PXRMPT",37,0)
 S ROOT="^PXD(811.9,D0,20,D1,0)"
"RTN","PXRMPT",38,0)
 Q:'$D(@ROOT)
"RTN","PXRMPT",39,0)
 S F0=@ROOT
"RTN","PXRMPT",40,0)
 S VPTR=$P(F0,U,1)
"RTN","PXRMPT",41,0)
 S IEN=$P(VPTR,";",1)
"RTN","PXRMPT",42,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPT",43,0)
 I '$D(PXRMFVPL) N PXRMFPVL D BLDLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMPT",44,0)
 S VPTR=PXRMFVPL(ROOT)
"RTN","PXRMPT",45,0)
 S FTYPE=$P(VPTR,U,2)
"RTN","PXRMPT",46,0)
 W FTYPE
"RTN","PXRMPT",47,0)
 Q
"RTN","PXRMPT",48,0)
 ;
"RTN","PXRMPT",49,0)
 ;======================================================================
"RTN","PXRMPT",50,0)
GENFREQ ;Print age range frequency set for findings.
"RTN","PXRMPT",51,0)
 N PXF0,PXF,PXW,PXAMIN,PXAMAX
"RTN","PXRMPT",52,0)
 S PXF0=^PXD(811.9,D0,20,D1,0)
"RTN","PXRMPT",53,0)
 S PXF=$P(PXF0,U,4)
"RTN","PXRMPT",54,0)
 S PXAMIN=$P(PXF0,U,2)
"RTN","PXRMPT",55,0)
 S PXAMAX=$P(PXF0,U,3)
"RTN","PXRMPT",56,0)
 I PXF="" Q
"RTN","PXRMPT",57,0)
 S PXW="  "_$$FREQ(PXF)
"RTN","PXRMPT",58,0)
 S PXW=PXW_$$FMTAGE^PXRMAGE(PXAMIN,PXAMAX)
"RTN","PXRMPT",59,0)
 W PXW
"RTN","PXRMPT",60,0)
 Q
"RTN","PXRMPT",61,0)
 ;
"RTN","PXRMPT",62,0)
 ;======================================================================
"RTN","PXRMPT",63,0)
GENIEN ;Print internal entry number for findings.
"RTN","PXRMPT",64,0)
 N F0,IEN,PREFIX,ROOT,VPTR
"RTN","PXRMPT",65,0)
 S ROOT="^PXD(811.9,D0,20,D1,0)"
"RTN","PXRMPT",66,0)
 S F0=@ROOT
"RTN","PXRMPT",67,0)
 S VPTR=$P(F0,U,1)
"RTN","PXRMPT",68,0)
 S IEN=$P(VPTR,";",1)
"RTN","PXRMPT",69,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPT",70,0)
 I '$D(PXRMFVPL) N PXRMFPVL D BLDLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMPT",71,0)
 S VPTR=PXRMFVPL(ROOT)
"RTN","PXRMPT",72,0)
 S PREFIX=$P(VPTR,U,4)
"RTN","PXRMPT",73,0)
 W " (FI("_+D1_")="_PREFIX_"("_IEN_"))"
"RTN","PXRMPT",74,0)
 Q
"RTN","PXRMPT",75,0)
 ;
"RTN","PXRMPT",76,0)
 ;======================================================================
"RTN","PXRMPT",77,0)
ICD0LIST ;Print expanded list of ICD0 codes.
"RTN","PXRMPT",78,0)
 N CODE,END,IEN,IND,LOW,HIGH,TEMP,TEXT
"RTN","PXRMPT",79,0)
 S TEMP=^PXD(811.2,D0,80.1,D1,0)
"RTN","PXRMPT",80,0)
 S LOW=$P(TEMP,U,1)
"RTN","PXRMPT",81,0)
 S HIGH=$P(TEMP,U,2)
"RTN","PXRMPT",82,0)
 I HIGH="" S HIGH=LOW
"RTN","PXRMPT",83,0)
 W !!,?6,"Code",?16,"ICD Operation/Procedure"
"RTN","PXRMPT",84,0)
 W !,?6,"----",?16,"-----------------------"
"RTN","PXRMPT",85,0)
 S IND=LOW_" "
"RTN","PXRMPT",86,0)
 S END=HIGH_" "
"RTN","PXRMPT",87,0)
 F  Q:(IND]END)!(+IND>+END)!(IND="")  D
"RTN","PXRMPT",88,0)
 . S CODE=$TR(IND," ","")
"RTN","PXRMPT",89,0)
 . S IEN=$O(^ICD0("BA",IND,""))
"RTN","PXRMPT",90,0)
 . I +IEN>0 S TEXT=$P($G(^ICD9(IEN,0)),U,3)
"RTN","PXRMPT",91,0)
 . E  S TEXT="Unknown"
"RTN","PXRMPT",92,0)
 . S IND=$O(^ICD0("BA",IND))
"RTN","PXRMPT",93,0)
 . W !,?6,CODE,?16,TEXT
"RTN","PXRMPT",94,0)
 Q
"RTN","PXRMPT",95,0)
 ;
"RTN","PXRMPT",96,0)
 ;======================================================================
"RTN","PXRMPT",97,0)
ICD9LIST ;Print expanded list of ICD9 codes.
"RTN","PXRMPT",98,0)
 N CODE,END,IEN,IND,LOW,HIGH,TEMP,TEXT
"RTN","PXRMPT",99,0)
 S TEMP=^PXD(811.2,D0,80,D1,0)
"RTN","PXRMPT",100,0)
 S LOW=$P(TEMP,U,1)
"RTN","PXRMPT",101,0)
 S HIGH=$P(TEMP,U,2)
"RTN","PXRMPT",102,0)
 I HIGH="" S HIGH=LOW
"RTN","PXRMPT",103,0)
 W !!,?6,"Code",?16,"ICD Diagnosis"
"RTN","PXRMPT",104,0)
 W !,?6,"----",?16,"-------------"
"RTN","PXRMPT",105,0)
 S IND=LOW_" "
"RTN","PXRMPT",106,0)
 S END=HIGH_" "
"RTN","PXRMPT",107,0)
 F  Q:(IND]END)!(+IND>+END)!(IND="")  D
"RTN","PXRMPT",108,0)
 . S CODE=$TR(IND," ","")
"RTN","PXRMPT",109,0)
 . S IEN=$O(^ICD9("BA",IND,""))
"RTN","PXRMPT",110,0)
 . I +IEN>0 S TEXT=$P($G(^ICD9(IEN,0)),U,3)
"RTN","PXRMPT",111,0)
 . E  S TEXT="Unknown"
"RTN","PXRMPT",112,0)
 . S IND=$O(^ICD9("BA",IND))
"RTN","PXRMPT",113,0)
 . W !,?6,CODE,?16,TEXT
"RTN","PXRMPT",114,0)
 Q
"RTN","PXRMPT",115,0)
 ;
"RTN","PXRMPT",116,0)
 ;======================================================================
"RTN","PXRMPT",117,0)
ICPTLIST ;Print expanded list of CPT codes.
"RTN","PXRMPT",118,0)
 N CODE,END,IEN,IND,LOW,HIGH,TEMP,TEXT
"RTN","PXRMPT",119,0)
 S TEMP=^PXD(811.2,D0,81,D1,0)
"RTN","PXRMPT",120,0)
 S LOW=$P(TEMP,U,1)
"RTN","PXRMPT",121,0)
 S HIGH=$P(TEMP,U,2)
"RTN","PXRMPT",122,0)
 I HIGH="" S HIGH=LOW
"RTN","PXRMPT",123,0)
 W !!,?6,"Code",?16,"CPT Short Name"
"RTN","PXRMPT",124,0)
 W !,?6,"----",?16,"--------------"
"RTN","PXRMPT",125,0)
 S IND=LOW
"RTN","PXRMPT",126,0)
 S END=HIGH
"RTN","PXRMPT",127,0)
 F  Q:(IND]END)!(+IND>+END)!(IND="")  D
"RTN","PXRMPT",128,0)
 . S CODE=$TR(IND," ","")
"RTN","PXRMPT",129,0)
 . S IEN=$O(^ICPT("B",IND,""))
"RTN","PXRMPT",130,0)
 . I +IEN>0 D
"RTN","PXRMPT",131,0)
 .. S TEMP=$$CPT^ICPTCOD(IEN)
"RTN","PXRMPT",132,0)
 .. S TEXT=$P(TEMP,U,3)
"RTN","PXRMPT",133,0)
 . E  S TEXT="Unknown"
"RTN","PXRMPT",134,0)
 . S IND=$O(^ICPT("B",IND))
"RTN","PXRMPT",135,0)
 . W !,?6,CODE,?16,TEXT
"RTN","PXRMPT",136,0)
 Q
"RTN","PXRMPT",137,0)
 ;
"RTN","PXRMPT",138,0)
 ;======================================================================
"RTN","PXRMPT",139,0)
TAXLIST ;Taxonomy list.
"RTN","PXRMPT",140,0)
 N CODES,CPT,CPTLIST,ICD0,ICD0LIST,ICD9,ICD9LIST,IND,NCODES
"RTN","PXRMPT",141,0)
 S (IC,IND)=0
"RTN","PXRMPT",142,0)
 F  S IND=+$O(^PXD(811.2,D0,80,IND)) Q:IND=0  D
"RTN","PXRMPT",143,0)
 . S IC=IC+1
"RTN","PXRMPT",144,0)
 . S CODES=^PXD(811.2,D0,80,IND,0)
"RTN","PXRMPT",145,0)
 . S ICD9LIST(IC)=CODES
"RTN","PXRMPT",146,0)
 S NCODES=IC
"RTN","PXRMPT",147,0)
 ;
"RTN","PXRMPT",148,0)
 S (IC,IND)=0
"RTN","PXRMPT",149,0)
 F  S IND=+$O(^PXD(811.2,D0,80.1,IND)) Q:IND=0  D
"RTN","PXRMPT",150,0)
 . S IC=IC+1
"RTN","PXRMPT",151,0)
 . S CODES=^PXD(811.2,D0,80.1,IND,0)
"RTN","PXRMPT",152,0)
 . S ICD0LIST(IC)=CODES
"RTN","PXRMPT",153,0)
 S NCODES=$$MAX^XLFMTH(NCODES,IC)
"RTN","PXRMPT",154,0)
 ;
"RTN","PXRMPT",155,0)
 S (IC,IND)=0
"RTN","PXRMPT",156,0)
 F  S IND=+$O(^PXD(811.2,D0,81,IND)) Q:IND=0  D
"RTN","PXRMPT",157,0)
 . S IC=IC+1
"RTN","PXRMPT",158,0)
 . S CODES=^PXD(811.2,D0,81,IND,0)
"RTN","PXRMPT",159,0)
 . S CPTLIST(IC)=CODES
"RTN","PXRMPT",160,0)
 S NCODES=$$MAX^XLFMTH(NCODES,IC)
"RTN","PXRMPT",161,0)
 ;Print the list.
"RTN","PXRMPT",162,0)
 F IC=1:1:NCODES D
"RTN","PXRMPT",163,0)
 . S ICD9=$G(ICD9LIST(IC))
"RTN","PXRMPT",164,0)
 . S ICD0=$G(ICD0LIST(IC))
"RTN","PXRMPT",165,0)
 . S CPT=$G(CPTLIST(IC))
"RTN","PXRMPT",166,0)
 . W !,?9,$P(ICD9,U,1),?19,$P(ICD9,U,2)
"RTN","PXRMPT",167,0)
 . W ?29,$P(ICD0,U,1),?39,$P(ICD0,U,2)
"RTN","PXRMPT",168,0)
 . W ?49,$P(CPT,U,1),?59,$P(CPT,U,2)
"RTN","PXRMPT",169,0)
 Q
"RTN","PXRMPT",170,0)
 ;
"RTN","PXRMPT",171,0)
 ;====================================================================
"RTN","PXRMPT",172,0)
TFTYPE ;Print Term finding type
"RTN","PXRMPT",173,0)
 N FO,IEN,FTYPE,ROOT,VPTR
"RTN","PXRMPT",174,0)
 S ROOT="^PXRMD(811.5,D0,20,D1,0)"
"RTN","PXRMPT",175,0)
 Q:'$D(@ROOT)
"RTN","PXRMPT",176,0)
 S FO=@ROOT
"RTN","PXRMPT",177,0)
 S VPTR=$P(FO,U,1)
"RTN","PXRMPT",178,0)
 S IEN=$P(VPTR,";",1)
"RTN","PXRMPT",179,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPT",180,0)
 I '$D(PXRMFVPL) N PXRMFPVL D BLDLIST^PXRMVPTR(811.52,.01,.PXRMFVPL)
"RTN","PXRMPT",181,0)
 S VPTR=PXRMFVPL(ROOT)
"RTN","PXRMPT",182,0)
 S FTYPE=$P(VPTR,U,2)
"RTN","PXRMPT",183,0)
 W FTYPE
"RTN","PXRMPT",184,0)
 Q
"RTN","PXRMPT",185,0)
 ;
"RTN","PXRMPT",186,0)
 ;======================================================================
"RTN","PXRMPT",187,0)
TRMIEN ;Print internal entry number for TERM findings.
"RTN","PXRMPT",188,0)
 N FO,IEN,PREFIX,ROOT,VPTR
"RTN","PXRMPT",189,0)
 S ROOT="^PXRMD(811.5,D0,20,D1,0)"
"RTN","PXRMPT",190,0)
 S FO=@ROOT
"RTN","PXRMPT",191,0)
 S VPTR=$P(FO,U,1)
"RTN","PXRMPT",192,0)
 S IEN=$P(VPTR,";",1)
"RTN","PXRMPT",193,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPT",194,0)
 I '$D(PXRMFPVL) N PXRMFPVL D BLDLIST^PXRMVPTR(811.52,.01,.PXRMFVPL)
"RTN","PXRMPT",195,0)
 S VPTR=PXRMFVPL(ROOT)
"RTN","PXRMPT",196,0)
 S PREFIX=$P(VPTR,U,4)
"RTN","PXRMPT",197,0)
 W " (FI("_+D1_")="_PREFIX_"("_IEN_"))"
"RTN","PXRMPT",198,0)
 Q
"RTN","PXRMPT",199,0)
 ;
"RTN","PXRMPTL")
0^86^B21604015
"RTN","PXRMPTL",1,0)
PXRMPTL ; SLC/DLT,PKR,PJH - Print Clinical Reminders logic ; 04/23/2000
"RTN","PXRMPTL",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMPTL",3,0)
 ;
"RTN","PXRMPTL",4,0)
 ;=======================================================================
"RTN","PXRMPTL",5,0)
ARRFMT(START,END,NE,INARRAY,OUTARRAY) ;Format array INARRAY so that
"RTN","PXRMPTL",6,0)
 ;it fits between START and END. Put each "formatted" piece into
"RTN","PXRMPTL",7,0)
 ;OUTARRAY and return the number of lines.
"RTN","PXRMPTL",8,0)
 N IC,LINNUM,MAXLEN,SLEN
"RTN","PXRMPTL",9,0)
 K OUTARRAY
"RTN","PXRMPTL",10,0)
 S MAXLEN=END-START+1
"RTN","PXRMPTL",11,0)
 S OUTARRAY(1)=""
"RTN","PXRMPTL",12,0)
 S LINNUM=1
"RTN","PXRMPTL",13,0)
 F IC=1:1:NE D
"RTN","PXRMPTL",14,0)
 . S SLEN=$L(OUTARRAY(LINNUM))+$L(INARRAY(IC))
"RTN","PXRMPTL",15,0)
 . I SLEN>MAXLEN D
"RTN","PXRMPTL",16,0)
 .. S LINNUM=LINNUM+1
"RTN","PXRMPTL",17,0)
 .. S OUTARRAY(LINNUM)=INARRAY(IC)
"RTN","PXRMPTL",18,0)
 . E  S OUTARRAY(LINNUM)=OUTARRAY(LINNUM)_INARRAY(IC)
"RTN","PXRMPTL",19,0)
 Q LINNUM
"RTN","PXRMPTL",20,0)
 ;
"RTN","PXRMPTL",21,0)
 ;=======================================================================
"RTN","PXRMPTL",22,0)
BLDFLST(FL) ;Build the list of findings defined for this reminder.
"RTN","PXRMPTL",23,0)
 N IC,TEMP,GLOB,SUB,NAME
"RTN","PXRMPTL",24,0)
 ;Build a list of findings.
"RTN","PXRMPTL",25,0)
 S IC=0
"RTN","PXRMPTL",26,0)
 F  S IC=$O(^PXD(811.9,RITEM,20,IC)) Q:+IC=0  D
"RTN","PXRMPTL",27,0)
 . S TEMP=$P(^PXD(811.9,RITEM,20,IC,0),U)
"RTN","PXRMPTL",28,0)
 . S GLOB=$P(TEMP,";",2),SUB=$P(TEMP,";")
"RTN","PXRMPTL",29,0)
 . S NAME=$P($G(@(U_GLOB_SUB_",0)")),U)
"RTN","PXRMPTL",30,0)
 . S FL(IC)=NAME
"RTN","PXRMPTL",31,0)
 Q
"RTN","PXRMPTL",32,0)
 ;
"RTN","PXRMPTL",33,0)
 ;=======================================================================
"RTN","PXRMPTL",34,0)
DISLOG ;Display the APPLY LOGIG.
"RTN","PXRMPTL",35,0)
 ;Determine if this is a default adhoc logic or user modified logic
"RTN","PXRMPTL",36,0)
 N PXF
"RTN","PXRMPTL",37,0)
 S PXF=$L($G(^PXD(811.9,D0,30)))
"RTN","PXRMPTL",38,0)
 I 'PXF W "Default PATIENT COHORT LOGIC to see if the Reminder applies to a patient:"
"RTN","PXRMPTL",39,0)
 E  W "Customized PATIENT COHORT LOGIC to see if the Reminder applies to a patient:"
"RTN","PXRMPTL",40,0)
 ;
"RTN","PXRMPTL",41,0)
 N BOOLOP,RITEM
"RTN","PXRMPTL",42,0)
 S RITEM=D0
"RTN","PXRMPTL",43,0)
 ;
"RTN","PXRMPTL",44,0)
 ;Establish the list of boolean operators that can be used in the logic
"RTN","PXRMPTL",45,0)
 ;string.
"RTN","PXRMPTL",46,0)
 S BOOLOP="'!&"
"RTN","PXRMPTL",47,0)
 ;
"RTN","PXRMPTL",48,0)
 ;Build the lists of findings for this reminder.
"RTN","PXRMPTL",49,0)
 N FL
"RTN","PXRMPTL",50,0)
 D BLDFLST(.FL)
"RTN","PXRMPTL",51,0)
 ;
"RTN","PXRMPTL",52,0)
 N ELOGSTR,IND,NEE,LOGSTR,NLOGLIN,PARRAY,TEND,TSTART
"RTN","PXRMPTL",53,0)
 S TSTART=1
"RTN","PXRMPTL",54,0)
 S TEND=75
"RTN","PXRMPTL",55,0)
 ;
"RTN","PXRMPTL",56,0)
 ;Get the user cohort logic string.
"RTN","PXRMPTL",57,0)
 S LOGSTR=$G(^PXD(811.9,RITEM,30))
"RTN","PXRMPTL",58,0)
 ;Otherwise use internal cohort logic
"RTN","PXRMPTL",59,0)
 I LOGSTR="" S LOGSTR=$G(^PXD(811.9,RITEM,31))
"RTN","PXRMPTL",60,0)
 ;
"RTN","PXRMPTL",61,0)
 ;Remove any (0)! and (1)& entries
"RTN","PXRMPTL",62,0)
 S LOGSTR=$$REMOVE(LOGSTR)
"RTN","PXRMPTL",63,0)
 ;
"RTN","PXRMPTL",64,0)
 S NLOGLIN=$$STRFMT(TSTART,TEND,LOGSTR,BOOLOP,.PARRAY)
"RTN","PXRMPTL",65,0)
 F IND=1:1:NLOGLIN D
"RTN","PXRMPTL",66,0)
 . W !,?5,PARRAY(IND)
"RTN","PXRMPTL",67,0)
 ;
"RTN","PXRMPTL",68,0)
 S NEE=$$ELOGSTR(LOGSTR,.ELOGSTR,.FL,BOOLOP)
"RTN","PXRMPTL",69,0)
 ;Format the expanded logic string.
"RTN","PXRMPTL",70,0)
 S NLOGLIN=$$ARRFMT(TSTART,TEND,NEE,.ELOGSTR,.PARRAY)
"RTN","PXRMPTL",71,0)
 ;
"RTN","PXRMPTL",72,0)
 W !!,"Expanded Patient Cohort Logic:"
"RTN","PXRMPTL",73,0)
 F IND=1:1:NLOGLIN D
"RTN","PXRMPTL",74,0)
 . W !,?5,PARRAY(IND)
"RTN","PXRMPTL",75,0)
 ;
"RTN","PXRMPTL",76,0)
 W !!
"RTN","PXRMPTL",77,0)
 S PXF=$L($G(^PXD(811.9,RITEM,34)))
"RTN","PXRMPTL",78,0)
 I 'PXF W "Default RESOLUTION LOGIC defines findings which can resolve the Reminder:"
"RTN","PXRMPTL",79,0)
 E  W "Customized RESOLUTION LOGIC defines findings which can resolve the Reminder:"
"RTN","PXRMPTL",80,0)
 ;
"RTN","PXRMPTL",81,0)
 ;Get user resolution logic string
"RTN","PXRMPTL",82,0)
 S LOGSTR=$G(^PXD(811.9,RITEM,34))
"RTN","PXRMPTL",83,0)
 ;Otherwise use internal resolution logic
"RTN","PXRMPTL",84,0)
 I LOGSTR="" S LOGSTR=$G(^PXD(811.9,RITEM,35))
"RTN","PXRMPTL",85,0)
 ;
"RTN","PXRMPTL",86,0)
 ;Remove any (0)! and (1)& entries
"RTN","PXRMPTL",87,0)
 S LOGSTR=$$REMOVE(LOGSTR)
"RTN","PXRMPTL",88,0)
 ;
"RTN","PXRMPTL",89,0)
 S NLOGLIN=$$STRFMT(TSTART,TEND,LOGSTR,BOOLOP,.PARRAY)
"RTN","PXRMPTL",90,0)
 F IND=1:1:NLOGLIN D
"RTN","PXRMPTL",91,0)
 . W !,?5,PARRAY(IND)
"RTN","PXRMPTL",92,0)
 ;
"RTN","PXRMPTL",93,0)
 S NEE=$$ELOGSTR(LOGSTR,.ELOGSTR,.FL,BOOLOP)
"RTN","PXRMPTL",94,0)
 ;Format the expanded logic string.
"RTN","PXRMPTL",95,0)
 S NLOGLIN=$$ARRFMT(TSTART,TEND,NEE,.ELOGSTR,.PARRAY)
"RTN","PXRMPTL",96,0)
 ;
"RTN","PXRMPTL",97,0)
 W !!,"Expanded Resolution Logic:"
"RTN","PXRMPTL",98,0)
 F IND=1:1:NLOGLIN D
"RTN","PXRMPTL",99,0)
 . W !,?5,PARRAY(IND)
"RTN","PXRMPTL",100,0)
 Q
"RTN","PXRMPTL",101,0)
 ;
"RTN","PXRMPTL",102,0)
 ;=======================================================================
"RTN","PXRMPTL",103,0)
ELOGSTR(LOGSTR,ELOGSTR,FL,SEP) ;Expand the logic string use SEP as a
"RTN","PXRMPTL",104,0)
 ;separator. Return the number of elements.
"RTN","PXRMPTL",105,0)
 N END,IC,IND,NEE,START,TEMP
"RTN","PXRMPTL",106,0)
 S NEE=1
"RTN","PXRMPTL",107,0)
 S ELOGSTR(NEE)=""
"RTN","PXRMPTL",108,0)
 ;Break the logic string into pieces using SEP.
"RTN","PXRMPTL",109,0)
 F IC=1:1:$L(LOGSTR) D
"RTN","PXRMPTL",110,0)
 . S TEMP=$E(LOGSTR,IC)
"RTN","PXRMPTL",111,0)
 . I SEP[TEMP D
"RTN","PXRMPTL",112,0)
 .. S NEE=NEE+1
"RTN","PXRMPTL",113,0)
 .. S ELOGSTR(NEE)=TEMP
"RTN","PXRMPTL",114,0)
 .. S NEE=NEE+1
"RTN","PXRMPTL",115,0)
 .. S ELOGSTR(NEE)=""
"RTN","PXRMPTL",116,0)
 . E  S ELOGSTR(NEE)=ELOGSTR(NEE)_TEMP
"RTN","PXRMPTL",117,0)
 ;Substitute the names for the finding indices.
"RTN","PXRMPTL",118,0)
 F IC=1:1:NEE D
"RTN","PXRMPTL",119,0)
 . I ELOGSTR(IC)["FI" D
"RTN","PXRMPTL",120,0)
 .. S TEMP=ELOGSTR(IC)
"RTN","PXRMPTL",121,0)
 .. S START=$F(TEMP,"FI(")
"RTN","PXRMPTL",122,0)
 .. S END=$F(TEMP,")",START)-2
"RTN","PXRMPTL",123,0)
 .. S IND=$E(TEMP,START,END)
"RTN","PXRMPTL",124,0)
 .. S TEMP=$G(FL(IND)) I TEMP="" Q
"RTN","PXRMPTL",125,0)
 .. S ELOGSTR(IC)=$$STRREP^PXRMUTIL(ELOGSTR(IC),IND,TEMP)
"RTN","PXRMPTL",126,0)
 Q NEE
"RTN","PXRMPTL",127,0)
 ;
"RTN","PXRMPTL",128,0)
 ;======================================================================
"RTN","PXRMPTL",129,0)
STRFMT(START,END,STRING,SEP,OUTARRAY) ;Format string STRING so that
"RTN","PXRMPTL",130,0)
 ;it fits between START and END. Put each "formatted" piece into
"RTN","PXRMPTL",131,0)
 ;OUTARRAY and return the number of lines.
"RTN","PXRMPTL",132,0)
 N MAXLEN,SLEN
"RTN","PXRMPTL",133,0)
 K OUTARRAY
"RTN","PXRMPTL",134,0)
 S MAXLEN=END-START+1
"RTN","PXRMPTL",135,0)
 S SLEN=$L(STRING)
"RTN","PXRMPTL",136,0)
 I SLEN'>MAXLEN D  Q 1
"RTN","PXRMPTL",137,0)
 . S OUTARRAY(1)=STRING
"RTN","PXRMPTL",138,0)
 ;
"RTN","PXRMPTL",139,0)
 N CHAR,IC,LINNUM,NE,TARRAY,TEMP
"RTN","PXRMPTL",140,0)
 ;Break string into pieces using SEP.
"RTN","PXRMPTL",141,0)
 S LINNUM=0
"RTN","PXRMPTL",142,0)
 S TEMP=""
"RTN","PXRMPTL",143,0)
 F IC=1:1:SLEN D
"RTN","PXRMPTL",144,0)
 . S CHAR=$E(STRING,IC,IC)
"RTN","PXRMPTL",145,0)
 . S TEMP=TEMP_CHAR
"RTN","PXRMPTL",146,0)
 . I SEP[CHAR D
"RTN","PXRMPTL",147,0)
 .. S LINNUM=LINNUM+1
"RTN","PXRMPTL",148,0)
 .. S TARRAY(LINNUM)=TEMP
"RTN","PXRMPTL",149,0)
 .. S TEMP=""
"RTN","PXRMPTL",150,0)
 S LINNUM=LINNUM+1
"RTN","PXRMPTL",151,0)
 S TARRAY(LINNUM)=TEMP
"RTN","PXRMPTL",152,0)
 S NE=LINNUM
"RTN","PXRMPTL",153,0)
 ;
"RTN","PXRMPTL",154,0)
 ;Load the output array.
"RTN","PXRMPTL",155,0)
 S OUTARRAY(1)=""
"RTN","PXRMPTL",156,0)
 S LINNUM=1
"RTN","PXRMPTL",157,0)
 F IC=1:1:NE D
"RTN","PXRMPTL",158,0)
 . S SLEN=$L(OUTARRAY(LINNUM))+$L(TARRAY(IC))
"RTN","PXRMPTL",159,0)
 . I SLEN>MAXLEN D
"RTN","PXRMPTL",160,0)
 .. S LINNUM=LINNUM+1
"RTN","PXRMPTL",161,0)
 .. S OUTARRAY(LINNUM)=TARRAY(IC)
"RTN","PXRMPTL",162,0)
 . E  S OUTARRAY(LINNUM)=OUTARRAY(LINNUM)_TARRAY(IC)
"RTN","PXRMPTL",163,0)
 Q LINNUM
"RTN","PXRMPTL",164,0)
 ;
"RTN","PXRMPTL",165,0)
 ;======================================================================
"RTN","PXRMPTL",166,0)
REMOVE(STRING) ;Remove leading (n) entries
"RTN","PXRMPTL",167,0)
 I ($E(STRING,1,4)="(0)!")!($E(STRING,1,4)="(1)&") S $E(STRING,1,4)=""
"RTN","PXRMPTL",168,0)
 Q STRING
"RTN","PXRMRAD")
0^88^B16758889
"RTN","PXRMRAD",1,0)
PXRMRAD ; SLC/PKR - Handle radiology findings. ;05/19/2000
"RTN","PXRMRAD",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMRAD",3,0)
 ;
"RTN","PXRMRAD",4,0)
 ;=======================================================================
"RTN","PXRMRAD",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate radiology findings.
"RTN","PXRMRAD",6,0)
 N FIND0,FINDING,RADPROC
"RTN","PXRMRAD",7,0)
 ;Build a list of radiology procedures.
"RTN","PXRMRAD",8,0)
 S RADPROC=""
"RTN","PXRMRAD",9,0)
 F  S RADPROC=$O(^PXD(811.9,PXRMITEM,20,"E","RAMIS(71,",RADPROC)) Q:+RADPROC=0  D
"RTN","PXRMRAD",10,0)
 . S FINDING=""
"RTN","PXRMRAD",11,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","RAMIS(71,",RADPROC,FINDING)) Q:+FINDING=0  D
"RTN","PXRMRAD",12,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,0)
"RTN","PXRMRAD",13,0)
 .. D FIEVAL(DFN,RADPROC,FIND0,"",FINDING,.FIEVAL)
"RTN","PXRMRAD",14,0)
 Q
"RTN","PXRMRAD",15,0)
 ;
"RTN","PXRMRAD",16,0)
 ;=======================================================================
"RTN","PXRMRAD",17,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate radiology terms.
"RTN","PXRMRAD",18,0)
 N FIND0,RADPROC,TFIND0,TFINDING
"RTN","PXRMRAD",19,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMRAD",20,0)
 ;Build a list of radiology procedures.
"RTN","PXRMRAD",21,0)
 S RADPROC=""
"RTN","PXRMRAD",22,0)
 F  S RADPROC=$O(^PXRMD(811.5,TERMIEN,20,"E","RAMIS(71,",RADPROC)) Q:+RADPROC=0  D
"RTN","PXRMRAD",23,0)
 . S TFINDING=""
"RTN","PXRMRAD",24,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","RAMIS(71,",RADPROC,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMRAD",25,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMRAD",26,0)
 .. D FIEVAL(DFN,RADPROC,FIND0,TFIND0,TFINDING,.TFIEVAL)
"RTN","PXRMRAD",27,0)
 Q
"RTN","PXRMRAD",28,0)
 ;
"RTN","PXRMRAD",29,0)
 ;=======================================================================
"RTN","PXRMRAD",30,0)
FIEVAL(DFN,RADPROC,FIND0,TFIND0,FINDING,FIEVAL) ;
"RTN","PXRMRAD",31,0)
 N DATE,RADPTIEN,STATUS,TEMP,VALID
"RTN","PXRMRAD",32,0)
 S FIEVAL(FINDING)=0
"RTN","PXRMRAD",33,0)
 ;Get the matches
"RTN","PXRMRAD",34,0)
 D CLIN^RAO7PC2(DFN,RADPROC)
"RTN","PXRMRAD",35,0)
 ;If this is an unknown radiology patient we are done.
"RTN","PXRMRAD",36,0)
 I $G(^TMP($J,"RADPROC"))["Invalid" G DONE
"RTN","PXRMRAD",37,0)
 ;
"RTN","PXRMRAD",38,0)
 S RADPTIEN=$O(^TMP($J,"RADPROC",""))
"RTN","PXRMRAD",39,0)
 ;STATUS can be "CANCELLED", "COMPLETE", "IN PROGRESS", or "NONE".
"RTN","PXRMRAD",40,0)
 ;Ignore any that are cancelled.
"RTN","PXRMRAD",41,0)
 S STATUS=""
"RTN","PXRMRAD",42,0)
 F  S STATUS=$O(^TMP($J,"RADPROC",RADPTIEN,RADPROC,STATUS)) Q:STATUS=""  D
"RTN","PXRMRAD",43,0)
 . I (STATUS="NONE") Q
"RTN","PXRMRAD",44,0)
 .;If there is a "COMPLETE" status make sure we save it only.
"RTN","PXRMRAD",45,0)
 . I 'FIEVAL(FINDING) S FIEVAL(FINDING,"STATUS")=STATUS
"RTN","PXRMRAD",46,0)
 . I (STATUS="CANCELLED") D
"RTN","PXRMRAD",47,0)
 .. S FIEVAL(FINDING,"DATA")=^TMP($J,"RADPROC",RADPTIEN,RADPROC,STATUS)
"RTN","PXRMRAD",48,0)
 .. S FIEVAL(FINDING,"DATE")=$P(FIEVAL(FINDING,"DATA"),U,1)
"RTN","PXRMRAD",49,0)
 . I STATUS="COMPLETE" D
"RTN","PXRMRAD",50,0)
 .. S FIEVAL(FINDING)=1
"RTN","PXRMRAD",51,0)
 .. S FIEVAL(FINDING,"DATA")=^TMP($J,"RADPROC",RADPTIEN,RADPROC,STATUS)
"RTN","PXRMRAD",52,0)
 .. S (FIEVAL(FINDING,"DATE"),DATE)=$P(FIEVAL(FINDING,"DATA"),U,1)
"RTN","PXRMRAD",53,0)
 .;Save information about an "IN PROGRESS" procedure if it is more
"RTN","PXRMRAD",54,0)
 .;recent than the completed one or there is not a completed one.
"RTN","PXRMRAD",55,0)
 . I STATUS="IN PROGRESS" D
"RTN","PXRMRAD",56,0)
 .. S TEMP=^TMP($J,"RADPROC",RADPTIEN,RADPROC,STATUS)
"RTN","PXRMRAD",57,0)
 .. S DATE=$P(TEMP,U,1)
"RTN","PXRMRAD",58,0)
 .. I DATE>+$G(FIEVAL(FINDING,"DATE")) D
"RTN","PXRMRAD",59,0)
 ... I 'FIEVAL(FINDING) S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMRAD",60,0)
 ... S FIEVAL(FINDING,"IN PROGRESS")=TEMP
"RTN","PXRMRAD",61,0)
 . S FIEVAL(FINDING,"FINDING")=RADPROC_";RAMIS(71,"
"RTN","PXRMRAD",62,0)
 ;Determine if the finding has expired.
"RTN","PXRMRAD",63,0)
 I FIEVAL(FINDING) D
"RTN","PXRMRAD",64,0)
 . S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,FIEVAL(FINDING,"DATE"))
"RTN","PXRMRAD",65,0)
 . I 'VALID D
"RTN","PXRMRAD",66,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMRAD",67,0)
 .. S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMRAD",68,0)
DONE K ^TMP($J,"RADPROC")
"RTN","PXRMRAD",69,0)
 Q
"RTN","PXRMRAD",70,0)
 ;
"RTN","PXRMRAD",71,0)
 ;=======================================================================
"RTN","PXRMRAD",72,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMRAD",73,0)
 ;maintenance output.
"RTN","PXRMRAD",74,0)
 N CPT,CPTDATA,CODE,D0,DATE,NAME,RADPROC,SNAME,TEMP
"RTN","PXRMRAD",75,0)
 S RADPROC=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMRAD",76,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMRAD",77,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMRAD",78,0)
 S TEMP=TEMP_" Radiology Procedure: "
"RTN","PXRMRAD",79,0)
 S D0=^RAMIS(71,RADPROC,0)
"RTN","PXRMRAD",80,0)
 S NAME=$P(D0,U,1)
"RTN","PXRMRAD",81,0)
 S CPT=$P(D0,U,9)
"RTN","PXRMRAD",82,0)
 S CPTDATA=$$CPT^ICPTCOD(CPT)
"RTN","PXRMRAD",83,0)
 S CODE=$P(CPTDATA,U,2)
"RTN","PXRMRAD",84,0)
 S SNAME=$P(CPTDATA,U,3)
"RTN","PXRMRAD",85,0)
 S TEMP=TEMP_CODE_" ("_NAME_")"
"RTN","PXRMRAD",86,0)
 S TEMP=TEMP_" - "_SNAME
"RTN","PXRMRAD",87,0)
 S TEMP=TEMP_"; status:  "_FIEVAL(FINDING,"STATUS")
"RTN","PXRMRAD",88,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMRAD",89,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMRAD",90,0)
 S NLINES=NLINES+1
"RTN","PXRMRAD",91,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMRAD",92,0)
 I $D(PXRMDEV) D
"RTN","PXRMRAD",93,0)
 . N UID
"RTN","PXRMRAD",94,0)
 . S UID="RAD "_NAME
"RTN","PXRMRAD",95,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMRAD",96,0)
 ;
"RTN","PXRMRAD",97,0)
 ;If there is an "IN PROGRESS" as well as complete procedure and
"RTN","PXRMRAD",98,0)
 ;the "IN PROGRESS" is newer than the complete show some information
"RTN","PXRMRAD",99,0)
 ;on it.
"RTN","PXRMRAD",100,0)
 I (FIEVAL(FINDING))&($D(FIEVAL(FINDING,"IN PROGRESS"))) D
"RTN","PXRMRAD",101,0)
 . N IPDATE,STATUS
"RTN","PXRMRAD",102,0)
 . S IPDATE=$P(FIEVAL(FINDING,"IN PROGRESS"),U,1)
"RTN","PXRMRAD",103,0)
 . I IPDATE>DATE D
"RTN","PXRMRAD",104,0)
 .. S STATUS=$P(FIEVAL(FINDING,"IN PROGRESS"),U,2)
"RTN","PXRMRAD",105,0)
 .. S TEMP="This procedure is also in progress."
"RTN","PXRMRAD",106,0)
 .. S TEMP=TEMP_" "_$$EDATE^PXRMDATE(IPDATE)
"RTN","PXRMRAD",107,0)
 .. S TEMP=TEMP_" status:  "_STATUS
"RTN","PXRMRAD",108,0)
 .. S NLINES=NLINES+1
"RTN","PXRMRAD",109,0)
 .. S TEXT(NLINES)=TEMP
"RTN","PXRMRAD",110,0)
 Q
"RTN","PXRMRAD",111,0)
 ;
"RTN","PXRMRAOP")
1^197
"RTN","PXRMRCPT")
0^90^B6605839
"RTN","PXRMRCPT",1,0)
PXRMRCPT ; SLC/PKR - Code to handle radiology CPT data. ;05/19/2000
"RTN","PXRMRCPT",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMRCPT",3,0)
 ;
"RTN","PXRMRCPT",4,0)
 ;=======================================================================
"RTN","PXRMRCPT",5,0)
EVAL(DFN,TAXIEN,FLIST) ;Find all the entries for this patient in the
"RTN","PXRMRCPT",6,0)
 ;radiology file based on CPT codes.
"RTN","PXRMRCPT",7,0)
 N CODE,DATE,RADPTIEN,RADPROC,RCPTP,STATUS,TEMP,TLIST
"RTN","PXRMRCPT",8,0)
 ;Make a list of radiology procedures from CPT taxonomy entries.
"RTN","PXRMRCPT",9,0)
 S RCPTP=$O(^PXD(811.3,TAXIEN,71,"RCPTP",""))
"RTN","PXRMRCPT",10,0)
 I RCPTP="" Q
"RTN","PXRMRCPT",11,0)
 K ^TMP($J,"RADPROC")
"RTN","PXRMRCPT",12,0)
 S RADPROC=RCPTP
"RTN","PXRMRCPT",13,0)
 F  S RCPTP=$O(^PXD(811.3,TAXIEN,71,"RCPTP",RCPTP)) Q:+RCPTP=0  D
"RTN","PXRMRCPT",14,0)
 . S RADPROC=RADPROC_U_RCPTP
"RTN","PXRMRCPT",15,0)
 D CLIN^RAO7PC2(DFN,RADPROC)
"RTN","PXRMRCPT",16,0)
 ;If this is an unknown radiology patient we are done.
"RTN","PXRMRCPT",17,0)
 I $G(^TMP($J,"RADPROC"))["Invalid" Q
"RTN","PXRMRCPT",18,0)
 ;
"RTN","PXRMRCPT",19,0)
 ;Process the list.
"RTN","PXRMRCPT",20,0)
 ;STATUS can be "CANCELLED", "COMPLETE", "IN PROGRESS", or "NONE".
"RTN","PXRMRCPT",21,0)
 S RADPTIEN=$O(^TMP($J,"RADPROC",""))
"RTN","PXRMRCPT",22,0)
 ;Ignore any that are cancelled.
"RTN","PXRMRCPT",23,0)
 S RADPROC=""
"RTN","PXRMRCPT",24,0)
 F  S RADPROC=$O(^TMP($J,"RADPROC",RADPTIEN,RADPROC)) Q:RADPROC=""  D
"RTN","PXRMRCPT",25,0)
 . S STATUS=""
"RTN","PXRMRCPT",26,0)
 . F  S STATUS=$O(^TMP($J,"RADPROC",RADPTIEN,RADPROC,STATUS)) Q:STATUS=""  D
"RTN","PXRMRCPT",27,0)
 .. I (STATUS="NONE")!(STATUS="CANCELLED") Q
"RTN","PXRMRCPT",28,0)
 .. S TEMP=^TMP($J,"RADPROC",RADPTIEN,RADPROC,STATUS)
"RTN","PXRMRCPT",29,0)
 .. S DATE=$P(TEMP,U,1)
"RTN","PXRMRCPT",30,0)
 .. S INVDATE=$$INVFFMDL^PXRMDATE(DATE,1)
"RTN","PXRMRCPT",31,0)
 .. S TLIST(STATUS,INVDATE,RADPROC)=TEMP
"RTN","PXRMRCPT",32,0)
 I '$D(TLIST("COMPLETE")) Q
"RTN","PXRMRCPT",33,0)
 S INVDATE=$O(TLIST("COMPLETE",""))
"RTN","PXRMRCPT",34,0)
 S RADPROC=$O(TLIST("COMPLETE",INVDATE,""))
"RTN","PXRMRCPT",35,0)
 S TEMP=TLIST("COMPLETE",INVDATE,RADPROC)
"RTN","PXRMRCPT",36,0)
 S CODE=$P(^RAMIS(71,RADPROC,0),U,9)
"RTN","PXRMRCPT",37,0)
 S FLIST(INVDATE,"RADPT")=RADPROC_U_U_$P(TEMP,U,1)_U_CODE_U_$P(TEMP,U,2,4)
"RTN","PXRMRCPT",38,0)
 K ^TMP($J,"RADPROC")
"RTN","PXRMRCPT",39,0)
 Q
"RTN","PXRMRCPT",40,0)
 ;
"RTN","PXRMRCPT",41,0)
 ;======================================================================
"RTN","PXRMRCPT",42,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMRCPT",43,0)
 ;maintenance output. The VCPT information is:  DATE, ICPT CODE,
"RTN","PXRMRCPT",44,0)
 ;SHORT NAME, PROVIDER NARRATIVE.
"RTN","PXRMRCPT",45,0)
 N CODE,CPT,CPTDATA,DATE,ICPTP,FIEN,RADPROC,TEMP
"RTN","PXRMRCPT",46,0)
 S FIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMRCPT",47,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMRCPT",48,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMRCPT",49,0)
 S TEMP=TEMP_" Radiology Procedure: "
"RTN","PXRMRCPT",50,0)
 S ICPTP=FIEVAL(FINDING,"CODEP")
"RTN","PXRMRCPT",51,0)
 S CPTDATA=$$CPT^ICPTCOD(ICPTP)
"RTN","PXRMRCPT",52,0)
 S CODE=$P(CPTDATA,U,2)
"RTN","PXRMRCPT",53,0)
 S SNAME=$P(CPTDATA,U,3)
"RTN","PXRMRCPT",54,0)
 S RADPROC=$P(^RAMIS(71,FIEN,0),U,1)
"RTN","PXRMRCPT",55,0)
 S TEMP=TEMP_RADPROC
"RTN","PXRMRCPT",56,0)
 S TEMP=TEMP_"-CPT: "_CODE
"RTN","PXRMRCPT",57,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMRCPT",58,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMRCPT",59,0)
 S NLINES=NLINES+1
"RTN","PXRMRCPT",60,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMRCPT",61,0)
 I $D(PXRMDEV) D
"RTN","PXRMRCPT",62,0)
 . N UID
"RTN","PXRMRCPT",63,0)
 . S UID="RADPROC "_ICPTP
"RTN","PXRMRCPT",64,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"DATE")=DATE
"RTN","PXRMRCPT",65,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"PROCECURE")=RADPROC
"RTN","PXRMRCPT",66,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"CODE")=CODE
"RTN","PXRMRCPT",67,0)
 Q
"RTN","PXRMRCPT",68,0)
 ;
"RTN","PXRMRDAT")
1^208
"RTN","PXRMREDF")
0^92^B8705075
"RTN","PXRMREDF",1,0)
PXRMREDF ; SLC/PJH - Edit PXRM reminder findings. ;06/16/2000
"RTN","PXRMREDF",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMREDF",3,0)
 ;
"RTN","PXRMREDF",4,0)
 ; Called by PXRMREDT
"RTN","PXRMREDF",5,0)
 ;
"RTN","PXRMREDF",6,0)
SET S:'$D(^PXD(811.9,DA,20,0)) ^PXD(811.9,DA,20,0)="^811.902V" Q
"RTN","PXRMREDF",7,0)
 ;
"RTN","PXRMREDF",8,0)
 ;Edit Findings (excludes Terms)
"RTN","PXRMREDF",9,0)
 ;------------------------------
"RTN","PXRMREDF",10,0)
FIND D SET ; Check if node defined
"RTN","PXRMREDF",11,0)
 F  D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMREDF",12,0)
 .;Display list of existing findings
"RTN","PXRMREDF",13,0)
 .W !!,"Findings"
"RTN","PXRMREDF",14,0)
 .D DSPALL
"RTN","PXRMREDF",15,0)
 .;Edit findings
"RTN","PXRMREDF",16,0)
 .D FEDIT(DA) Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMREDF",17,0)
 .;Update list with term modifications
"RTN","PXRMREDF",18,0)
 .D LIST^PXRMREDT(.LIST)
"RTN","PXRMREDF",19,0)
 K DUOUT,DTOUT
"RTN","PXRMREDF",20,0)
 Q
"RTN","PXRMREDF",21,0)
 ;
"RTN","PXRMREDF",22,0)
 ;Display ALL findings
"RTN","PXRMREDF",23,0)
 ;--------------------
"RTN","PXRMREDF",24,0)
DSPALL N SUB,FIRST S FIRST=1,SUB="",SUB1=""
"RTN","PXRMREDF",25,0)
 F  S SUB=$O(LIST(SUB)) Q:SUB=""  D
"RTN","PXRMREDF",26,0)
 .S SUB1=0
"RTN","PXRMREDF",27,0)
 .F  S SUB1=$O(LIST(SUB,SUB1)) Q:SUB1=""  D
"RTN","PXRMREDF",28,0)
 ..I FIRST S FIRST=0 W !!,"Choose from:",!
"RTN","PXRMREDF",29,0)
 ..W SUB
"RTN","PXRMREDF",30,0)
 ..W ?8,SUB1,!
"RTN","PXRMREDF",31,0)
 I FIRST W !!,"Reminder has no findings",!
"RTN","PXRMREDF",32,0)
 ;Update list
"RTN","PXRMREDF",33,0)
 D LIST^PXRMREDT(.LIST)
"RTN","PXRMREDF",34,0)
 Q
"RTN","PXRMREDF",35,0)
 ;
"RTN","PXRMREDF",36,0)
 ;Display findings for file type selected
"RTN","PXRMREDF",37,0)
 ;---------------------------------------
"RTN","PXRMREDF",38,0)
DSP(TYPE) ;
"RTN","PXRMREDF",39,0)
 N SUB,FIRST S FIRST=1,SUB=""
"RTN","PXRMREDF",40,0)
 F  S SUB=$O(LIST(TYPE,SUB)) Q:SUB=""  D
"RTN","PXRMREDF",41,0)
 .I FIRST S FIRST=0 W !!,"Choose from:",!
"RTN","PXRMREDF",42,0)
 .W SUB
"RTN","PXRMREDF",43,0)
 .W !
"RTN","PXRMREDF",44,0)
 I FIRST W !!,"Reminder has no "_$G(DEF2(TYPE))_" findings",!
"RTN","PXRMREDF",45,0)
 Q
"RTN","PXRMREDF",46,0)
 ;
"RTN","PXRMREDF",47,0)
 ;Edit individual FINDING entry
"RTN","PXRMREDF",48,0)
 ;-----------------------------
"RTN","PXRMREDF",49,0)
FEDIT(IEN) ;
"RTN","PXRMREDF",50,0)
 N DA,DIC,DIE,DUOUT,DR,GLOB,Y
"RTN","PXRMREDF",51,0)
 S DA(1)=IEN
"RTN","PXRMREDF",52,0)
 S DIC="^PXD(811.9,"_IEN_",20,"
"RTN","PXRMREDF",53,0)
 S DIC(0)="QEAL"
"RTN","PXRMREDF",54,0)
 S DIC("A")="Select FINDING: "
"RTN","PXRMREDF",55,0)
 S DIC("P")="811.902V"
"RTN","PXRMREDF",56,0)
 D ^DIC I Y=-1 S DTOUT=1 Q
"RTN","PXRMREDF",57,0)
 S DIE=DIC K DIC
"RTN","PXRMREDF",58,0)
 S DA=+Y,GLOB=$P($P(Y,U,2),";",2) Q:GLOB=""
"RTN","PXRMREDF",59,0)
 S TYPE=$G(DEF1(GLOB))
"RTN","PXRMREDF",60,0)
 ;Finding record fields
"RTN","PXRMREDF",61,0)
 S DR=".01;1;2;3;4;5;6;7;8;9"
"RTN","PXRMREDF",62,0)
 ;Taxonomy - use inactive problems
"RTN","PXRMREDF",63,0)
 I TYPE="TX" S DR=DR_";10"
"RTN","PXRMREDF",64,0)
 ;Health Factor - within category rank
"RTN","PXRMREDF",65,0)
 I TYPE="HF" S DR=DR_";11"
"RTN","PXRMREDF",66,0)
 ;Condition (not used for Taxonomies, Drugs or Radiology)
"RTN","PXRMREDF",67,0)
 I "DC;DG;DR;TX;RP"'[TYPE S DR=DR_";12"
"RTN","PXRMREDF",68,0)
 ;Mental Health - scale
"RTN","PXRMREDF",69,0)
 I TYPE="MH" S DR=DR_";13"
"RTN","PXRMREDF",70,0)
 ;
"RTN","PXRMREDF",71,0)
 ;Edit finding record
"RTN","PXRMREDF",72,0)
 D ^DIE
"RTN","PXRMREDF",73,0)
 Q
"RTN","PXRMREDF",74,0)
 ;
"RTN","PXRMREDF",75,0)
 ;General help text routine
"RTN","PXRMREDF",76,0)
 ;-------------------------
"RTN","PXRMREDF",77,0)
HELP(CALL) ;
"RTN","PXRMREDF",78,0)
 N HTEXT
"RTN","PXRMREDF",79,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMREDF",80,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMREDF",81,0)
 ;
"RTN","PXRMREDF",82,0)
 I CALL=1 D
"RTN","PXRMREDF",83,0)
 .S HTEXT(1)="Select the type of finding you wish to change or add."
"RTN","PXRMREDF",84,0)
 .S HTEXT(2)="Type '?' for a list of the available finding types."
"RTN","PXRMREDF",85,0)
 I CALL=2 D
"RTN","PXRMREDF",86,0)
 .S HTEXT(1)="Select section of the reminder you wish to edit or 'All'"
"RTN","PXRMREDF",87,0)
 .S HTEXT(2)="to step through all sections of the reminder definition."
"RTN","PXRMREDF",88,0)
 ;
"RTN","PXRMREDF",89,0)
 K ^UTILITY($J,"W")
"RTN","PXRMREDF",90,0)
 S IC=""
"RTN","PXRMREDF",91,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMREDF",92,0)
 . S X=HTEXT(IC)
"RTN","PXRMREDF",93,0)
 . D ^DIWP
"RTN","PXRMREDF",94,0)
 W !
"RTN","PXRMREDF",95,0)
 S IC=0
"RTN","PXRMREDF",96,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMREDF",97,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMREDF",98,0)
 K ^UTILITY($J,"W")
"RTN","PXRMREDF",99,0)
 W !
"RTN","PXRMREDF",100,0)
 Q
"RTN","PXRMREDT")
0^93^B25825167
"RTN","PXRMREDT",1,0)
PXRMREDT ; SLC/PKR,PJH - Edit PXRM reminder definition. ;06/09/2000
"RTN","PXRMREDT",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMREDT",3,0)
 ;
"RTN","PXRMREDT",4,0)
 ;=======================================================================
"RTN","PXRMREDT",5,0)
 ;Build list of finding file definitions.
"RTN","PXRMREDT",6,0)
 N DEF,DEF1,DEF2
"RTN","PXRMREDT",7,0)
 D DEF^PXRMRUTL(.DEF,.DEF1,.DEF2)
"RTN","PXRMREDT",8,0)
 ;
"RTN","PXRMREDT",9,0)
 N DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMREDT",10,0)
 S DIC="^PXD(811.9,"
"RTN","PXRMREDT",11,0)
 S DIC(0)="AEMQL"
"RTN","PXRMREDT",12,0)
 S DIC("A")="Select Reminder Definition: "
"RTN","PXRMREDT",13,0)
 S DIC("S")="I $S(Y'<100000:1,(Y<100000)&($G(PXRMINST)=1)&(DUZ(0)=""@""):1,1:0)"
"RTN","PXRMREDT",14,0)
 S DLAYGO=811.9
"RTN","PXRMREDT",15,0)
GETNAME ;Get the name of the reminder definition to edit.
"RTN","PXRMREDT",16,0)
 ;Set the starting place for additions.
"RTN","PXRMREDT",17,0)
 D SETSTART^PXRMCOPY(DIC,1)
"RTN","PXRMREDT",18,0)
 W !
"RTN","PXRMREDT",19,0)
 D ^DIC
"RTN","PXRMREDT",20,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMREDT",21,0)
 I Y=-1 G END
"RTN","PXRMREDT",22,0)
 S DA=$P(Y,U,1)
"RTN","PXRMREDT",23,0)
 D ALL(DIC,DA)
"RTN","PXRMREDT",24,0)
 G GETNAME
"RTN","PXRMREDT",25,0)
END ;
"RTN","PXRMREDT",26,0)
 ;Reset starting place.
"RTN","PXRMREDT",27,0)
 D SETSTART^PXRMCOPY(DIC,0)
"RTN","PXRMREDT",28,0)
 Q
"RTN","PXRMREDT",29,0)
 ;
"RTN","PXRMREDT",30,0)
 ;=======================================================================
"RTN","PXRMREDT",31,0)
 ;Select section of reminder to edit, also called at ALL by PXRMEDIT.
"RTN","PXRMREDT",32,0)
 ;----------------------------------
"RTN","PXRMREDT",33,0)
ALL(DIC,DA) ;
"RTN","PXRMREDT",34,0)
 ;Get list of findings/terms for reminder
"RTN","PXRMREDT",35,0)
 N BLDLOGIC,LIST,TYPE,FILE,LIST,OPTION
"RTN","PXRMREDT",36,0)
 S BLDLOGIC=0
"RTN","PXRMREDT",37,0)
 D LIST(.LIST)
"RTN","PXRMREDT",38,0)
 ;If this is a new reminder enter all fields
"RTN","PXRMREDT",39,0)
 I $P(Y,U,3)=1 D EDIT(DIC,DA) Q 
"RTN","PXRMREDT",40,0)
 ;Otherwise choose fields to edit
"RTN","PXRMREDT",41,0)
 F  D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMREDT",42,0)
 .D OPTION Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMREDT",43,0)
 .;All details
"RTN","PXRMREDT",44,0)
 .I OPTION="A" D
"RTN","PXRMREDT",45,0)
 .. S BLDLOGIC=1
"RTN","PXRMREDT",46,0)
 .. D EDIT(DIC,DA)
"RTN","PXRMREDT",47,0)
 .;Settup local variables
"RTN","PXRMREDT",48,0)
 .N DIE,DR S DIE=DIC N DIC
"RTN","PXRMREDT",49,0)
 .;Descriptions
"RTN","PXRMREDT",50,0)
 .I OPTION="G" D
"RTN","PXRMREDT",51,0)
 ..D GEN
"RTN","PXRMREDT",52,0)
 .;Baseline Frequency
"RTN","PXRMREDT",53,0)
 .I OPTION="B" D
"RTN","PXRMREDT",54,0)
 ..S BLDLOGIC=1
"RTN","PXRMREDT",55,0)
 ..D BASE
"RTN","PXRMREDT",56,0)
 .;Findings
"RTN","PXRMREDT",57,0)
 .I OPTION="F"  D
"RTN","PXRMREDT",58,0)
 ..S BLDLOGIC=1
"RTN","PXRMREDT",59,0)
 ..D FIND
"RTN","PXRMREDT",60,0)
 .;Logic
"RTN","PXRMREDT",61,0)
 .I OPTION="L" D
"RTN","PXRMREDT",62,0)
 ..S BLDLOGIC=1
"RTN","PXRMREDT",63,0)
 ..D LOGIC
"RTN","PXRMREDT",64,0)
 .;Dialog
"RTN","PXRMREDT",65,0)
 .I OPTION="D" D
"RTN","PXRMREDT",66,0)
 ..D DIALOG
"RTN","PXRMREDT",67,0)
 .;Web addresses
"RTN","PXRMREDT",68,0)
 .I OPTION="W" D
"RTN","PXRMREDT",69,0)
 ..D WEB
"RTN","PXRMREDT",70,0)
 .;If necessary build the internal logic strings.
"RTN","PXRMREDT",71,0)
 .I BLDLOGIC D
"RTN","PXRMREDT",72,0)
 ..D BLDALL^PXRMLOGX(DA,"")
"RTN","PXRMREDT",73,0)
 Q
"RTN","PXRMREDT",74,0)
 ;
"RTN","PXRMREDT",75,0)
 ;Reminder Edit
"RTN","PXRMREDT",76,0)
 ;-------------
"RTN","PXRMREDT",77,0)
EDIT(ROOT,DA) ;
"RTN","PXRMREDT",78,0)
 N DIC,DIDEL,DIE,DR,TAX
"RTN","PXRMREDT",79,0)
 S DIE=ROOT,DIDEL=811.9
"RTN","PXRMREDT",80,0)
 ;
"RTN","PXRMREDT",81,0)
 ;Edit the fields in the same order they are printed by a reminder
"RTN","PXRMREDT",82,0)
 ;inquiry.
"RTN","PXRMREDT",83,0)
 ;Reminder name
"RTN","PXRMREDT",84,0)
 W !!
"RTN","PXRMREDT",85,0)
 S DR=".01"
"RTN","PXRMREDT",86,0)
 D ^DIE
"RTN","PXRMREDT",87,0)
 ;If DA is undefined then the entry was deleted and we are done.
"RTN","PXRMREDT",88,0)
 I '$D(DA) S DTOUT=1 Q
"RTN","PXRMREDT",89,0)
 I $D(Y) S DTOUT=1 Q
"RTN","PXRMREDT",90,0)
 ;
"RTN","PXRMREDT",91,0)
 ;Other fields
"RTN","PXRMREDT",92,0)
 D GEN Q:$D(Y)
"RTN","PXRMREDT",93,0)
 D BASE Q:$D(Y)
"RTN","PXRMREDT",94,0)
 D FIND Q:$D(Y)
"RTN","PXRMREDT",95,0)
 D LOGIC Q:$D(Y)
"RTN","PXRMREDT",96,0)
 D DIALOG Q:$D(Y)
"RTN","PXRMREDT",97,0)
 D WEB Q:$D(Y)
"RTN","PXRMREDT",98,0)
 Q
"RTN","PXRMREDT",99,0)
 ;
"RTN","PXRMREDT",100,0)
GEN ;Print name
"RTN","PXRMREDT",101,0)
 W !!
"RTN","PXRMREDT",102,0)
 S DR="1.2"
"RTN","PXRMREDT",103,0)
 D ^DIE
"RTN","PXRMREDT",104,0)
 I $D(Y) Q
"RTN","PXRMREDT",105,0)
 ;
"RTN","PXRMREDT",106,0)
 ;Related VA-* reminder
"RTN","PXRMREDT",107,0)
 W !!
"RTN","PXRMREDT",108,0)
 S DR="1.4"
"RTN","PXRMREDT",109,0)
 D ^DIE
"RTN","PXRMREDT",110,0)
 I $D(Y) Q
"RTN","PXRMREDT",111,0)
 ;
"RTN","PXRMREDT",112,0)
 ;Inactive flag
"RTN","PXRMREDT",113,0)
 W !!
"RTN","PXRMREDT",114,0)
 S DR="1.6"
"RTN","PXRMREDT",115,0)
 D ^DIE
"RTN","PXRMREDT",116,0)
 I $D(Y) Q
"RTN","PXRMREDT",117,0)
 ;
"RTN","PXRMREDT",118,0)
 ;Reminder description
"RTN","PXRMREDT",119,0)
 W !!
"RTN","PXRMREDT",120,0)
 S DR="2"
"RTN","PXRMREDT",121,0)
 D ^DIE
"RTN","PXRMREDT",122,0)
 I $D(Y) Q
"RTN","PXRMREDT",123,0)
 ;
"RTN","PXRMREDT",124,0)
 ;Technical description
"RTN","PXRMREDT",125,0)
 W !!
"RTN","PXRMREDT",126,0)
 S DR="3"
"RTN","PXRMREDT",127,0)
 D ^DIE
"RTN","PXRMREDT",128,0)
 ;
"RTN","PXRMREDT",129,0)
 ;Priority
"RTN","PXRMREDT",130,0)
 W !!
"RTN","PXRMREDT",131,0)
 S DR="1.91"
"RTN","PXRMREDT",132,0)
 D ^DIE
"RTN","PXRMREDT",133,0)
 Q
"RTN","PXRMREDT",134,0)
 ;
"RTN","PXRMREDT",135,0)
BASE W !!,"Baseline Frequency"
"RTN","PXRMREDT",136,0)
 ;Do in advance time frame
"RTN","PXRMREDT",137,0)
 S DR=1.3
"RTN","PXRMREDT",138,0)
 D ^DIE
"RTN","PXRMREDT",139,0)
 I $D(Y) Q
"RTN","PXRMREDT",140,0)
 ;
"RTN","PXRMREDT",141,0)
 ;Sex specific
"RTN","PXRMREDT",142,0)
 S DR=1.9
"RTN","PXRMREDT",143,0)
 D ^DIE
"RTN","PXRMREDT",144,0)
 I $D(Y) Q
"RTN","PXRMREDT",145,0)
 ;
"RTN","PXRMREDT",146,0)
 ;Ignore on N/A
"RTN","PXRMREDT",147,0)
 S DR=1.8
"RTN","PXRMREDT",148,0)
 D ^DIE
"RTN","PXRMREDT",149,0)
 I $D(Y) Q
"RTN","PXRMREDT",150,0)
 ;
"RTN","PXRMREDT",151,0)
 W !!,"Baseline frequency age range set"
"RTN","PXRMREDT",152,0)
 S DR="7"
"RTN","PXRMREDT",153,0)
 D ^DIE
"RTN","PXRMREDT",154,0)
 Q
"RTN","PXRMREDT",155,0)
 ;
"RTN","PXRMREDT",156,0)
FIND ;Edit findings (multiple)
"RTN","PXRMREDT",157,0)
 D FIND^PXRMREDF
"RTN","PXRMREDT",158,0)
 Q
"RTN","PXRMREDT",159,0)
 ;
"RTN","PXRMREDT",160,0)
LOGIC W !!,"Patient Cohort and Resolution Logic"
"RTN","PXRMREDT",161,0)
 S DR="30T;60T;61T;34T;65T;66T"
"RTN","PXRMREDT",162,0)
 D ^DIE
"RTN","PXRMREDT",163,0)
 ;Make sure the Patient Cohort Logic at least contains the default.
"RTN","PXRMREDT",164,0)
 I $G(^PXD(811.9,DA,31))="" S ^PXD(811.9,DA,31)="(SEX)&(AGE)"
"RTN","PXRMREDT",165,0)
 Q
"RTN","PXRMREDT",166,0)
 ;
"RTN","PXRMREDT",167,0)
DIALOG W !!,"Reminder Dialog"
"RTN","PXRMREDT",168,0)
 S DR="51"
"RTN","PXRMREDT",169,0)
 D ^DIE
"RTN","PXRMREDT",170,0)
 Q
"RTN","PXRMREDT",171,0)
 ;
"RTN","PXRMREDT",172,0)
WEB W !!,"Web Addresses for Reminder Information"
"RTN","PXRMREDT",173,0)
 S DR="50"
"RTN","PXRMREDT",174,0)
 D ^DIE
"RTN","PXRMREDT",175,0)
 Q
"RTN","PXRMREDT",176,0)
 ;
"RTN","PXRMREDT",177,0)
 ;Choose which part of Reminder to edit
"RTN","PXRMREDT",178,0)
 ;-------------------------------------
"RTN","PXRMREDT",179,0)
OPTION N X,Y,DIR,IC,IND
"RTN","PXRMREDT",180,0)
 ;Display warning message if un-mapped terms exist
"RTN","PXRMREDT",181,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMREDT",182,0)
 S DIR(0)="SO"_U
"RTN","PXRMREDT",183,0)
 S DIR(0)=DIR(0)_"A:All reminder details;"
"RTN","PXRMREDT",184,0)
 S DIR(0)=DIR(0)_"G:General;"
"RTN","PXRMREDT",185,0)
 S DIR(0)=DIR(0)_"B:Baseline Frequency;"
"RTN","PXRMREDT",186,0)
 S DIR(0)=DIR(0)_"F:Findings;"
"RTN","PXRMREDT",187,0)
 S DIR(0)=DIR(0)_"L:Logic;"
"RTN","PXRMREDT",188,0)
 S DIR(0)=DIR(0)_"D:Reminder Dialog;"
"RTN","PXRMREDT",189,0)
 S DIR(0)=DIR(0)_"W:Web Addresses;"
"RTN","PXRMREDT",190,0)
 S DIR("A")="Select section to edit"
"RTN","PXRMREDT",191,0)
 S DIR("?")="Select which section of the reminder you wish to edit."
"RTN","PXRMREDT",192,0)
 S DIR("??")="^D HELP^PXRMREDF(2)"
"RTN","PXRMREDT",193,0)
 D ^DIR K DIR
"RTN","PXRMREDT",194,0)
 I Y="" S DUOUT=1 Q
"RTN","PXRMREDT",195,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMREDT",196,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMREDT",197,0)
 S OPTION=Y
"RTN","PXRMREDT",198,0)
 Q
"RTN","PXRMREDT",199,0)
 ;
"RTN","PXRMREDT",200,0)
 ;Get full list of findings
"RTN","PXRMREDT",201,0)
 ;-------------------------
"RTN","PXRMREDT",202,0)
LIST(ARRAY) ;
"RTN","PXRMREDT",203,0)
 N TYPE,DATA,GLOB,IEN,NAME,NODE,SUB
"RTN","PXRMREDT",204,0)
 ;Clear passed arrays
"RTN","PXRMREDT",205,0)
 K ARRAY
"RTN","PXRMREDT",206,0)
 ;Build cross reference global to file number
"RTN","PXRMREDT",207,0)
 ;Get each finding
"RTN","PXRMREDT",208,0)
 S SUB=0 F  S SUB=$O(^PXD(811.9,DA,20,SUB)) Q:'SUB  D
"RTN","PXRMREDT",209,0)
 .S DATA=$G(^PXD(811.9,DA,20,SUB,0)) I DATA="" Q
"RTN","PXRMREDT",210,0)
 .;Determine global and global ien
"RTN","PXRMREDT",211,0)
 .S NODE=$P(DATA,U),GLOB=$P(NODE,";",2),IEN=$P(NODE,";")
"RTN","PXRMREDT",212,0)
 .;Ignore null entries
"RTN","PXRMREDT",213,0)
 .I (GLOB="")!(IEN="") Q
"RTN","PXRMREDT",214,0)
 .;Work out the file type
"RTN","PXRMREDT",215,0)
 .S TYPE=$G(DEF1(GLOB)) Q:TYPE=""
"RTN","PXRMREDT",216,0)
 .S NAME=$P($G(@(U_GLOB_IEN_",0)")),U)
"RTN","PXRMREDT",217,0)
 .S ARRAY(TYPE,NAME)=""
"RTN","PXRMREDT",218,0)
 Q
"RTN","PXRMRESN")
0^94^B15821887
"RTN","PXRMRESN",1,0)
PXRMRESN ; SLC/PJH - Edit/Inquire resolution statuses ;03/17/2000
"RTN","PXRMRESN",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMRESN",3,0)
 ;
"RTN","PXRMRESN",4,0)
START N DIC,PXRMGTYP,PXRMHD,PXRMRESN,Y
"RTN","PXRMRESN",5,0)
 ;Select reminder category for display
"RTN","PXRMRESN",6,0)
SELECT ;General selection
"RTN","PXRMRESN",7,0)
 S PXRMHD="Reminder Resolution Status",PXRMGTYP="RESN",PXRMRESN=""
"RTN","PXRMRESN",8,0)
 D START^PXRMSEL(PXRMHD,PXRMGTYP,"PXRMRESN")
"RTN","PXRMRESN",9,0)
 ;Should return a value
"RTN","PXRMRESN",10,0)
 I PXRMRESN D  G SELECT
"RTN","PXRMRESN",11,0)
 .S PXRMHD="REMINDER RESOLUTION STATUS NAME:"
"RTN","PXRMRESN",12,0)
 .;Listman option
"RTN","PXRMRESN",13,0)
 .D START^PXRMGEN(PXRMHD,PXRMGTYP,PXRMRESN)
"RTN","PXRMRESN",14,0)
 ;
"RTN","PXRMRESN",15,0)
END Q
"RTN","PXRMRESN",16,0)
 ;
"RTN","PXRMRESN",17,0)
 ;REMINDER RESOLUTION STATUSES #801.9
"RTN","PXRMRESN",18,0)
 ;-----------------------------------
"RTN","PXRMRESN",19,0)
 ;Temporary list of STATUSES
"RTN","PXRMRESN",20,0)
DISP N CNT,CODE,DES,SUB,TXT
"RTN","PXRMRESN",21,0)
 W #,"REMINDER RESOLUTION STATUS SELECTION",!
"RTN","PXRMRESN",22,0)
 S CODE="",CNT=0
"RTN","PXRMRESN",23,0)
 F  S CODE=$O(^PXRMD(801.9,"B",CODE)) Q:CODE=""  D
"RTN","PXRMRESN",24,0)
 .S CNT=CNT+1
"RTN","PXRMRESN",25,0)
 .W !,CODE
"RTN","PXRMRESN",26,0)
 W !
"RTN","PXRMRESN",27,0)
 Q
"RTN","PXRMRESN",28,0)
 ;
"RTN","PXRMRESN",29,0)
 ;Build display for selected status - Called from PXRMGEN
"RTN","PXRMRESN",30,0)
 ;---------------------------------------------------------
"RTN","PXRMRESN",31,0)
RESN(PXRMRESN) ;
"RTN","PXRMRESN",32,0)
 N DATA,DARRAY,SUB
"RTN","PXRMRESN",33,0)
 S VALMCNT=0 K ^TMP("PXRMGENS",$J),^TMP("PXRMGEN",$J)
"RTN","PXRMRESN",34,0)
 ;
"RTN","PXRMRESN",35,0)
 ;Format headings to include resolution name
"RTN","PXRMRESN",36,0)
 S HEADER=PXRMHD_" "_$P(^PXRMD(801.9,PXRMRESN,0),U)
"RTN","PXRMRESN",37,0)
 ;
"RTN","PXRMRESN",38,0)
 ;Build Reminder Resolution Status Display
"RTN","PXRMRESN",39,0)
 D BUILD(.DARRAY,PXRMRESN) M ^TMP("PXRMGENS",$J)=DARRAY
"RTN","PXRMRESN",40,0)
 ; 
"RTN","PXRMRESN",41,0)
 ;Put the list into the array List Manager is using.
"RTN","PXRMRESN",42,0)
 S SUB=""
"RTN","PXRMRESN",43,0)
 S VALMCNT=0
"RTN","PXRMRESN",44,0)
 F  S SUB=$O(^TMP("PXRMGENS",$J,SUB)) Q:SUB=""  D
"RTN","PXRMRESN",45,0)
 .S DATA=$G(^TMP("PXRMGENS",$J,SUB))
"RTN","PXRMRESN",46,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMRESN",47,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)=DATA
"RTN","PXRMRESN",48,0)
 S ^TMP("PXRMGEN",$J,"VALMCNT")=VALMCNT
"RTN","PXRMRESN",49,0)
 K ^TMP("PXRMGENS",$J)
"RTN","PXRMRESN",50,0)
 ;Create headings
"RTN","PXRMRESN",51,0)
 D CHGCAP^VALM("HEADER1","")
"RTN","PXRMRESN",52,0)
 D CHGCAP^VALM("HEADER2","")
"RTN","PXRMRESN",53,0)
 D CHGCAP^VALM("HEADER3","")
"RTN","PXRMRESN",54,0)
 Q
"RTN","PXRMRESN",55,0)
 ;
"RTN","PXRMRESN",56,0)
 ;Build Resolution Status Inquiry array
"RTN","PXRMRESN",57,0)
 ;-------------------------------------
"RTN","PXRMRESN",58,0)
BUILD(ARRAY,D0) ;
"RTN","PXRMRESN",59,0)
 N DIWF,DIWL,DIWR,IC,SUB,TAB,TXT,X
"RTN","PXRMRESN",60,0)
 N ABBR,COL,CREA,DATA,DESC,FOUND,INACT,REST
"RTN","PXRMRESN",61,0)
 S DIWF="C70",DIWL=0,DIWR=70,IC=0
"RTN","PXRMRESN",62,0)
 K ^UTILITY($J,"W")
"RTN","PXRMRESN",63,0)
 ;Get Resolution status details
"RTN","PXRMRESN",64,0)
 S DATA=$G(^PXRMD(801.9,D0,0))
"RTN","PXRMRESN",65,0)
 S DESC=$P(DATA,U),ABBR=$P(DATA,U,2),COL=$P(DATA,U,3),INACT=$P(DATA,U,4)
"RTN","PXRMRESN",66,0)
 S CREA=$P(DATA,U,5),REST=$P(DATA,U,6)
"RTN","PXRMRESN",67,0)
 ;
"RTN","PXRMRESN",68,0)
 ;Resolution Status
"RTN","PXRMRESN",69,0)
 S TXT="Resolution Status: "_DESC
"RTN","PXRMRESN",70,0)
 ;Restricted edit is same as National
"RTN","PXRMRESN",71,0)
 S:REST TXT="National "_TXT D SET(0,TXT,1)
"RTN","PXRMRESN",72,0)
 ;
"RTN","PXRMRESN",73,0)
 S TXT="Resolution Status Description" D SET(0,TXT,0)
"RTN","PXRMRESN",74,0)
 ;Get Resolution Status description
"RTN","PXRMRESN",75,0)
 S SUB=0,TAB=0,FOUND=0
"RTN","PXRMRESN",76,0)
 F  S SUB=$O(^PXRMD(801.9,D0,1,SUB)) Q:SUB=""  D
"RTN","PXRMRESN",77,0)
 .S X=$G(^PXRMD(801.9,D0,1,SUB,0))
"RTN","PXRMRESN",78,0)
 .D ^DIWP
"RTN","PXRMRESN",79,0)
 F  S SUB=$O(^UTILITY($J,"W",0,SUB)) Q:SUB=""  D
"RTN","PXRMRESN",80,0)
 .D SET(5,^UTILITY($J,"W",0,SUB,0),0) S FOUND=1
"RTN","PXRMRESN",81,0)
 K ^UTILITY($J,"W")
"RTN","PXRMRESN",82,0)
 ;Display no description message
"RTN","PXRMRESN",83,0)
 I 'FOUND S TXT="*NONE*" D SET(5,TXT,0)
"RTN","PXRMRESN",84,0)
 D SET(0,"",1)
"RTN","PXRMRESN",85,0)
 ;
"RTN","PXRMRESN",86,0)
 ;Related National Status from cross reference
"RTN","PXRMRESN",87,0)
 I 'REST D
"RTN","PXRMRESN",88,0)
 .;Get national code from cross reference
"RTN","PXRMRESN",89,0)
 .N IEN S IEN=$O(^PXRMD(801.9,"AC",D0,""))
"RTN","PXRMRESN",90,0)
 .;If none allocated say so
"RTN","PXRMRESN",91,0)
 .I 'IEN S TXT="***UNDEFINED***"
"RTN","PXRMRESN",92,0)
 .;Get name of national status and display
"RTN","PXRMRESN",93,0)
 .I IEN S TXT=$P($G(^PXRMD(801.9,IEN,0)),U)
"RTN","PXRMRESN",94,0)
 .S TXT="Related National Status:  "_TXT D SET(3,TXT,0)
"RTN","PXRMRESN",95,0)
 ;
"RTN","PXRMRESN",96,0)
 ;Abbreviated Name
"RTN","PXRMRESN",97,0)
 S TXT="Abbreviated name:  "_ABBR D SET(10,TXT,0)
"RTN","PXRMRESN",98,0)
 ;Report Column Headings
"RTN","PXRMRESN",99,0)
 S TXT="Report Column Headings:  "_ABBR D SET(4,TXT,0)
"RTN","PXRMRESN",100,0)
 ;Inactive flag
"RTN","PXRMRESN",101,0)
 S TXT="Inactive Flag:  "_$S(INACT:"INACTIVE",1:"") D SET(13,TXT,0)
"RTN","PXRMRESN",102,0)
 ;Creator for local codes
"RTN","PXRMRESN",103,0)
 I CREA,'REST D
"RTN","PXRMRESN",104,0)
 .S TXT="Creator:  "_$P($G(^VA(200,CREA,0)),U) D SET(19,TXT,0)
"RTN","PXRMRESN",105,0)
 ;Local Resolution Statuses
"RTN","PXRMRESN",106,0)
 I REST D
"RTN","PXRMRESN",107,0)
 .N LARRAY,LIEN S SUB=0,FOUND=0
"RTN","PXRMRESN",108,0)
 .F  S SUB=$O(^PXRMD(801.9,D0,10,SUB)) Q:'SUB  D
"RTN","PXRMRESN",109,0)
 ..S LIEN=$P($G(^PXRMD(801.9,D0,10,SUB,0)),U)
"RTN","PXRMRESN",110,0)
 ..I LIEN S LARRAY(LIEN)="",FOUND=1
"RTN","PXRMRESN",111,0)
 .S TXT="Local Resolution Statuses:" D SET(0,"",1),SET(0,TXT,0)
"RTN","PXRMRESN",112,0)
 .I 'FOUND S TXT="*NONE*" D SET(5,TXT,0) Q 
"RTN","PXRMRESN",113,0)
 .S LIEN="" F  S LIEN=$O(LARRAY(LIEN)) Q:'LIEN  D
"RTN","PXRMRESN",114,0)
 ..S TXT=$P($G(^PXRMD(801.9,LIEN,0)),U) D SET(4,TXT,0)
"RTN","PXRMRESN",115,0)
 Q
"RTN","PXRMRESN",116,0)
 ;
"RTN","PXRMRESN",117,0)
 ;Save local array
"RTN","PXRMRESN",118,0)
 ;----------------
"RTN","PXRMRESN",119,0)
SET(TAB,TXT,LF) ;
"RTN","PXRMRESN",120,0)
 ;Save main line
"RTN","PXRMRESN",121,0)
 S IC=IC+1,ARRAY(IC)=$J("",TAB)_TXT
"RTN","PXRMRESN",122,0)
 ;Additional line feeds
"RTN","PXRMRESN",123,0)
 I LF D
"RTN","PXRMRESN",124,0)
 .N CNT F CNT=1:1:LF S IC=IC+1,ARRAY(IC)=$J("",79)
"RTN","PXRMRESN",125,0)
 Q
"RTN","PXRMRIN2")
0^95^B47459976
"RTN","PXRMRIN2",1,0)
PXRMRIN2 ; SLC/PJH,PKR - Clinical Reminder Inquiry ;04/18/2000
"RTN","PXRMRIN2",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMRIN2",3,0)
 ;
"RTN","PXRMRIN2",4,0)
 ; Entry point is BUILD - called by PXRMDLG/PXRMRPCC
"RTN","PXRMRIN2",5,0)
 ;  
"RTN","PXRMRIN2",6,0)
 ; Commonly used routines at top
"RTN","PXRMRIN2",7,0)
 ;--------------------------------
"RTN","PXRMRIN2",8,0)
LF(LF) N CNT F CNT=1:1:LF S IC=IC+1,ARRAY(IC)=$J("",79)
"RTN","PXRMRIN2",9,0)
 Q
"RTN","PXRMRIN2",10,0)
 ;
"RTN","PXRMRIN2",11,0)
SET(TAB,TXT,LF) ;
"RTN","PXRMRIN2",12,0)
 ;Save main line
"RTN","PXRMRIN2",13,0)
 S IC=IC+1,ARRAY(IC)=$J("",TAB)_TXT
"RTN","PXRMRIN2",14,0)
 ;Additional line feeds
"RTN","PXRMRIN2",15,0)
 D:$G(LF) LF(LF)
"RTN","PXRMRIN2",16,0)
 Q
"RTN","PXRMRIN2",17,0)
 ;
"RTN","PXRMRIN2",18,0)
FSET(TXT,FLD,LF,INDENT) ;
"RTN","PXRMRIN2",19,0)
 Q:(FLD=" ")!(FLD="")
"RTN","PXRMRIN2",20,0)
 S FLD="  "_$G(FLD)
"RTN","PXRMRIN2",21,0)
 ;Save main line
"RTN","PXRMRIN2",22,0)
 I $G(INDENT) S TXT=$J("",28-$L(TXT))_TXT_FLD
"RTN","PXRMRIN2",23,0)
 I '$G(INDENT) S TXT=TXT_$J("",28-$L(TXT))_FLD
"RTN","PXRMRIN2",24,0)
 S IC=IC+1,ARRAY(IC)=TXT
"RTN","PXRMRIN2",25,0)
 ;Additional line feeds
"RTN","PXRMRIN2",26,0)
 D:$G(LF) LF(LF)
"RTN","PXRMRIN2",27,0)
 Q
"RTN","PXRMRIN2",28,0)
 ;
"RTN","PXRMRIN2",29,0)
DESC(IEN,NODE) ;Reminder WP fields
"RTN","PXRMRIN2",30,0)
 N DIWF,DIWL,DIWR,FOUND,SUB,X
"RTN","PXRMRIN2",31,0)
 S SUB=0,FOUND=0,DIWF="C75",DIWL=0,DIWR=75
"RTN","PXRMRIN2",32,0)
 F  S SUB=$O(^PXD(811.9,IEN,NODE,SUB)) Q:SUB=""  D
"RTN","PXRMRIN2",33,0)
 .S X=$G(^PXD(811.9,IEN,NODE,SUB,0))
"RTN","PXRMRIN2",34,0)
 .D ^DIWP
"RTN","PXRMRIN2",35,0)
 F  S SUB=$O(^UTILITY($J,"W",0,SUB)) Q:SUB=""  D
"RTN","PXRMRIN2",36,0)
 .D SET(5,^UTILITY($J,"W",0,SUB,0),0) S FOUND=1
"RTN","PXRMRIN2",37,0)
 K ^UTILITY($J,"W")
"RTN","PXRMRIN2",38,0)
 S TXT="" I 'FOUND S TXT="*NONE*"
"RTN","PXRMRIN2",39,0)
 D SET(5,TXT,0)
"RTN","PXRMRIN2",40,0)
 Q
"RTN","PXRMRIN2",41,0)
 ;
"RTN","PXRMRIN2",42,0)
TEXT(IEN,NODE,FILE,TXT,TYP) ;Frequency for age match/finding found text
"RTN","PXRMRIN2",43,0)
 N DIWF,DIWL,DIWR,SUB,X
"RTN","PXRMRIN2",44,0)
 S SUB=0,DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMRIN2",45,0)
 F  S SUB=$O(^PXD(811.9,IEN,FILE,NODE,TYP,SUB)) Q:SUB=""  D
"RTN","PXRMRIN2",46,0)
 .S X=$G(^PXD(811.9,IEN,FILE,NODE,TYP,SUB,0))
"RTN","PXRMRIN2",47,0)
 .D ^DIWP
"RTN","PXRMRIN2",48,0)
 F  S SUB=$O(^UTILITY($J,"W",0,SUB)) Q:SUB=""  D
"RTN","PXRMRIN2",49,0)
 .D FSET(TXT,^UTILITY($J,"W",0,SUB,0),0,1) S TXT=""
"RTN","PXRMRIN2",50,0)
 ;None Found
"RTN","PXRMRIN2",51,0)
 I TXT]"" D FSET(TXT,"",0,1)
"RTN","PXRMRIN2",52,0)
 K ^UTILITY($J,"W")
"RTN","PXRMRIN2",53,0)
 Q
"RTN","PXRMRIN2",54,0)
 ;
"RTN","PXRMRIN2",55,0)
 ; Other routine in alpha order
"RTN","PXRMRIN2",56,0)
 ;------------------------------
"RTN","PXRMRIN2",57,0)
AFREQ(D0,D1) ; AGE FINDINGS freq
"RTN","PXRMRIN2",58,0)
 N PXF0,PXF,PXW,PXAMIN,PXAMAX
"RTN","PXRMRIN2",59,0)
 S PXF0=$G(^PXD(811.9,D0,7,D1,0)),PXF=$P(PXF0,U,1)
"RTN","PXRMRIN2",60,0)
 S PXAMIN=$P(PXF0,U,2),PXAMAX=$P(PXF0,U,3)
"RTN","PXRMRIN2",61,0)
 S PXW=PXF
"RTN","PXRMRIN2",62,0)
 I PXF="" S PXW="MISSING FREQUENCY"
"RTN","PXRMRIN2",63,0)
 E  D FREQ,AGE
"RTN","PXRMRIN2",64,0)
 Q PXW
"RTN","PXRMRIN2",65,0)
 ;
"RTN","PXRMRIN2",66,0)
AGE ; format age range data
"RTN","PXRMRIN2",67,0)
 I $L(PXAMIN)!$L(PXAMAX) D
"RTN","PXRMRIN2",68,0)
 . I $L(PXAMIN)&$L(PXAMAX) S PXW=PXW_" for ages "_PXAMIN_" to "_PXAMAX Q
"RTN","PXRMRIN2",69,0)
 . I $L(PXAMIN) S PXW=PXW_" for ages "_PXAMIN_" and older" Q
"RTN","PXRMRIN2",70,0)
 . I $L(PXAMAX) S PXW=PXW_" for ages "_PXAMAX_" and younger" Q
"RTN","PXRMRIN2",71,0)
 E  S PXW=PXW_" for all ages"
"RTN","PXRMRIN2",72,0)
 Q
"RTN","PXRMRIN2",73,0)
 ;
"RTN","PXRMRIN2",74,0)
BUILD(ARRAY,IEN) ; Build reminder inquiry array
"RTN","PXRMRIN2",75,0)
 N DATA,FLD,FPTR,FTYP,IC,LIT,SUB,TXT
"RTN","PXRMRIN2",76,0)
 ;Finding type 
"RTN","PXRMRIN2",77,0)
 N DEF,DEF1,DEF2 D DEF^PXRMRUTL(.DEF,.DEF1,.DEF2)
"RTN","PXRMRIN2",78,0)
 ;
"RTN","PXRMRIN2",79,0)
 S IC=0
"RTN","PXRMRIN2",80,0)
 ;Reminder number
"RTN","PXRMRIN2",81,0)
 S TXT="NUMBER: "_IEN
"RTN","PXRMRIN2",82,0)
 D SET(0,TXT,1)
"RTN","PXRMRIN2",83,0)
 ;Reminder name
"RTN","PXRMRIN2",84,0)
 S DATA=$G(^PXD(811.9,IEN,0))
"RTN","PXRMRIN2",85,0)
 S FLD=$P(DATA,U),LIT=$TR($J("",$L(FLD))," ","-")
"RTN","PXRMRIN2",86,0)
 D SET(0,FLD),SET(0,LIT,1)
"RTN","PXRMRIN2",87,0)
 ;Print Name
"RTN","PXRMRIN2",88,0)
 S TXT="Print name: ",FLD=$P(DATA,U,3) D FSET(TXT,FLD,1)
"RTN","PXRMRIN2",89,0)
 ;Related VA-* Reminder
"RTN","PXRMRIN2",90,0)
 S FLD=$P(DATA,U,5)
"RTN","PXRMRIN2",91,0)
 S:FLD FLD=$P($G(^PXD(811.9,FLD,0)),U) S:FLD="" FLD="*NONE*"
"RTN","PXRMRIN2",92,0)
 S TXT="Related VA-* Reminder: " D FSET(TXT,FLD,1)
"RTN","PXRMRIN2",93,0)
 ;Reminder Dialog
"RTN","PXRMRIN2",94,0)
 S FLD=$P($G(^PXD(811.9,IEN,51)),U)
"RTN","PXRMRIN2",95,0)
 S:FLD FLD=$P($G(^PXRMD(801.41,FLD,0)),U) S:FLD="" FLD="*NONE*"
"RTN","PXRMRIN2",96,0)
 S TXT="Reminder Dialog: " D FSET(TXT,FLD,1)
"RTN","PXRMRIN2",97,0)
 ;Priority
"RTN","PXRMRIN2",98,0)
 S TXT="Priority:",FLD=$P(DATA,U,10)
"RTN","PXRMRIN2",99,0)
 S FLD=$S(FLD=1:"HIGH",FLD=2:"MEDIUM",1:"LOW") D FSET(TXT,FLD,1)
"RTN","PXRMRIN2",100,0)
 ;Reminder Description
"RTN","PXRMRIN2",101,0)
 S TXT="Reminder Description:" D SET(0,TXT)
"RTN","PXRMRIN2",102,0)
 D DESC(IEN,1)
"RTN","PXRMRIN2",103,0)
 ;Technical Description
"RTN","PXRMRIN2",104,0)
 S TXT="Technical Description:" D SET(0,TXT)
"RTN","PXRMRIN2",105,0)
 D DESC(IEN,2),SET(0,"")
"RTN","PXRMRIN2",106,0)
 ;Baseline Frequency
"RTN","PXRMRIN2",107,0)
 S TXT="Baseline Frequency:" D SET(0,TXT)
"RTN","PXRMRIN2",108,0)
 ;Do In Advance Time Frame
"RTN","PXRMRIN2",109,0)
 S TXT="Do In Advance Time Frame:",FLD=$$DUEWI(IEN)
"RTN","PXRMRIN2",110,0)
 D FSET(TXT,FLD,0,1)
"RTN","PXRMRIN2",111,0)
 ;Sex Specific
"RTN","PXRMRIN2",112,0)
 S TXT="Sex Specific:",FLD=$P(DATA,U,9) D FSET(TXT,FLD,0,1)
"RTN","PXRMRIN2",113,0)
 ;Ignore on N/A
"RTN","PXRMRIN2",114,0)
 S TXT="Ignore on N/A:",FLD=$P(DATA,U,8) D FSET(TXT,FLD,1,1)
"RTN","PXRMRIN2",115,0)
 ;
"RTN","PXRMRIN2",116,0)
 ;Frequencies
"RTN","PXRMRIN2",117,0)
 S SUB=0
"RTN","PXRMRIN2",118,0)
 F  S SUB=$O(^PXD(811.9,IEN,7,SUB)) Q:'SUB  D
"RTN","PXRMRIN2",119,0)
 .;Frequency for Age Range
"RTN","PXRMRIN2",120,0)
 .S TXT="Frequency for Age Range:",FLD=$$AFREQ(IEN,SUB)
"RTN","PXRMRIN2",121,0)
 .D FSET(TXT,FLD,0,1)
"RTN","PXRMRIN2",122,0)
 .;Match Text
"RTN","PXRMRIN2",123,0)
 .S TXT="Match Text:" D TEXT(IEN,SUB,7,TXT,1)
"RTN","PXRMRIN2",124,0)
 .;No Match Text
"RTN","PXRMRIN2",125,0)
 .S TXT="No Match Text:" D TEXT(IEN,SUB,7,TXT,2)
"RTN","PXRMRIN2",126,0)
 .D SET(0,"")
"RTN","PXRMRIN2",127,0)
 ;
"RTN","PXRMRIN2",128,0)
 ;Findings
"RTN","PXRMRIN2",129,0)
 S TXT="Findings:" D SET(0,TXT,1)
"RTN","PXRMRIN2",130,0)
 ;
"RTN","PXRMRIN2",131,0)
 S SUB=0
"RTN","PXRMRIN2",132,0)
 F  S SUB=$O(^PXD(811.9,IEN,20,SUB)) Q:'SUB  D
"RTN","PXRMRIN2",133,0)
 .S DATA=$G(^PXD(811.9,IEN,20,SUB,0)),FPTR=$P(DATA,U)
"RTN","PXRMRIN2",134,0)
 .;Finding Item
"RTN","PXRMRIN2",135,0)
 .S TXT="Finding Item:" D FITEM(FPTR) ; Returns FTYP and FLD
"RTN","PXRMRIN2",136,0)
 .D FSET(TXT,FLD,0,1)
"RTN","PXRMRIN2",137,0)
 .;Finding Type
"RTN","PXRMRIN2",138,0)
 .S TXT="Finding Type:" D FSET(TXT,FTYP,0,1)
"RTN","PXRMRIN2",139,0)
 .;"Match Frequency/Age
"RTN","PXRMRIN2",140,0)
 .S TXT="Match Frequency/Age:",FLD=$$GENFREQ(IEN,SUB)
"RTN","PXRMRIN2",141,0)
 .D FSET(TXT,FLD,0,1)
"RTN","PXRMRIN2",142,0)
 .;Found Text
"RTN","PXRMRIN2",143,0)
 .S TXT="Found Text:" D TEXT(IEN,SUB,20,TXT,1)
"RTN","PXRMRIN2",144,0)
 .;Not Found Text
"RTN","PXRMRIN2",145,0)
 .S TXT="Not Found Text:" D TEXT(IEN,SUB,20,TXT,2)
"RTN","PXRMRIN2",146,0)
 .;Rank Frequency
"RTN","PXRMRIN2",147,0)
 .S TXT="Rank Frequency:",FLD=$P(DATA,U,5) D FSET(TXT,FLD,0,1)
"RTN","PXRMRIN2",148,0)
 .;Use in Resolution Logic
"RTN","PXRMRIN2",149,0)
 .S TXT="Use in Resolution Logic:",FLD=$P(DATA,U,6),FLD=$$LOGIC(FLD)
"RTN","PXRMRIN2",150,0)
 .D FSET(TXT,FLD,0,1)
"RTN","PXRMRIN2",151,0)
 .;Use in Patient Cohort Logic
"RTN","PXRMRIN2",152,0)
 .S TXT="Use in Patient Cohort Logic:",FLD=$P(DATA,U,7),FLD=$$LOGIC(FLD)
"RTN","PXRMRIN2",153,0)
 .D FSET(TXT,FLD,0,1)
"RTN","PXRMRIN2",154,0)
 .;Effective Period
"RTN","PXRMRIN2",155,0)
 .S TXT="Effective Period:",FLD=$P(DATA,U,8) D FSET(TXT,FLD,0,1)
"RTN","PXRMRIN2",156,0)
 .;Use Inactive Problems
"RTN","PXRMRIN2",157,0)
 .S TXT="Use Inactive Problems:",FLD=$P(DATA,U,9)
"RTN","PXRMRIN2",158,0)
 .S:FLD=1 FLD="YES" D FSET(TXT,FLD,0,1)
"RTN","PXRMRIN2",159,0)
 .;Within Category Rank
"RTN","PXRMRIN2",160,0)
 .S TXT="Within Category Rank:",FLD=$P(DATA,U,10) D FSET(TXT,FLD,0,1)
"RTN","PXRMRIN2",161,0)
 .;Condition
"RTN","PXRMRIN2",162,0)
 .S TXT="Condition:",FLD=$P(DATA,U,11) D FSET(TXT,FLD,0,1)
"RTN","PXRMRIN2",163,0)
 .;MH Scale
"RTN","PXRMRIN2",164,0)
 .S TXT="MH Scale:",FLD=$P(DATA,U,12) D FSET(TXT,FLD,1,1)
"RTN","PXRMRIN2",165,0)
 .;Line Feed
"RTN","PXRMRIN2",166,0)
 .D LF(1)
"RTN","PXRMRIN2",167,0)
 ;Logic
"RTN","PXRMRIN2",168,0)
 D DISLOG^PXRMRIN3(IEN)
"RTN","PXRMRIN2",169,0)
 Q
"RTN","PXRMRIN2",170,0)
 ;
"RTN","PXRMRIN2",171,0)
DUEWI(D0) ; DO WITHIN time frame
"RTN","PXRMRIN2",172,0)
 N PXF,PXW
"RTN","PXRMRIN2",173,0)
 S PXF=$P($G(^PXD(811.9,D0,0)),U,4)
"RTN","PXRMRIN2",174,0)
 I PXF="" Q "Wait until actually DUE"
"RTN","PXRMRIN2",175,0)
 I +PXF=0 Q PXF_" - Wait until actually DUE"
"RTN","PXRMRIN2",176,0)
 I +PXF>0 D FREQ
"RTN","PXRMRIN2",177,0)
 Q "Do if DUE within "_PXW
"RTN","PXRMRIN2",178,0)
 ;
"RTN","PXRMRIN2",179,0)
FITEM(FPTR) ; finding item
"RTN","PXRMRIN2",180,0)
 N FGLOB,FITEM
"RTN","PXRMRIN2",181,0)
 S FGLOB=$P(FPTR,";",2),FITEM=$P(FPTR,";")
"RTN","PXRMRIN2",182,0)
 S FTYP=$$FTYP(FGLOB) I FTYP="UNKNOWN" S FLD=FPTR Q
"RTN","PXRMRIN2",183,0)
 ;Get finding item description
"RTN","PXRMRIN2",184,0)
 S FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMRIN2",185,0)
 S FLD=$P($G(@FGLOB),U,1)
"RTN","PXRMRIN2",186,0)
 I FLD="" S FLD=$P($G(@FGLOB),U)
"RTN","PXRMRIN2",187,0)
 S FLD=FLD_" (FI("_+SUB_")="_DEF1($P(FPTR,";",2))_"("_FITEM_"))"
"RTN","PXRMRIN2",188,0)
 Q
"RTN","PXRMRIN2",189,0)
 ;
"RTN","PXRMRIN2",190,0)
FTYP(POINTER) ; finding type
"RTN","PXRMRIN2",191,0)
 Q:POINTER="" "UNKNOWN"
"RTN","PXRMRIN2",192,0)
 Q:$G(DEF1(POINTER))="" "UNKNOWN"
"RTN","PXRMRIN2",193,0)
 Q:$G(DEF2(DEF1(POINTER)))="" "UNKNOWN"
"RTN","PXRMRIN2",194,0)
 Q DEF2(DEF1(POINTER))
"RTN","PXRMRIN2",195,0)
 ;
"RTN","PXRMRIN2",196,0)
FREQ ; format frequency and age range
"RTN","PXRMRIN2",197,0)
 I +PXF=0 S PXW=PXF_" - Not Indicated" Q
"RTN","PXRMRIN2",198,0)
 I PXF?1"99Y" S PXW="99Y - Once"
"RTN","PXRMRIN2",199,0)
 E  S PXW=+PXF_($S(PXF?1N.N1"D":" day",PXF?1N.N1"M":" month",PXF?1N.N1"Y":" year",1:""))_$S(+PXF>1:"s",1:"")
"RTN","PXRMRIN2",200,0)
 Q
"RTN","PXRMRIN2",201,0)
 ;
"RTN","PXRMRIN2",202,0)
GENFREQ(D0,D1) ; frequency
"RTN","PXRMRIN2",203,0)
 N PXF0,PXF,PXW,PXAMIN,PXAMAX
"RTN","PXRMRIN2",204,0)
 S PXF0=^PXD(811.9,D0,20,D1,0)
"RTN","PXRMRIN2",205,0)
 S PXF=$P(PXF0,U,4),PXAMIN=$P(PXF0,U,2),PXAMAX=$P(PXF0,U,3)
"RTN","PXRMRIN2",206,0)
 I PXF="" S PXW="No change in frequency on match"
"RTN","PXRMRIN2",207,0)
 I PXF]"" D FREQ,AGE
"RTN","PXRMRIN2",208,0)
 Q PXW
"RTN","PXRMRIN2",209,0)
 ;
"RTN","PXRMRIN2",210,0)
LOGIC(FLD) ;Resolution/Cohort logic
"RTN","PXRMRIN2",211,0)
 I FLD="!" Q "OR"
"RTN","PXRMRIN2",212,0)
 I FLD="&" Q "AND"
"RTN","PXRMRIN2",213,0)
 I FLD="!'" Q "OR NOT"
"RTN","PXRMRIN2",214,0)
 I FLD="&'" Q "AND NOT"
"RTN","PXRMRIN2",215,0)
 Q " "
"RTN","PXRMRIN3")
0^96^B17224260
"RTN","PXRMRIN3",1,0)
PXRMRIN3 ; SLC/PJH - Print Clinical Reminders logic ; 05/19/2000
"RTN","PXRMRIN3",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMRIN3",3,0)
 ;
"RTN","PXRMRIN3",4,0)
 ;=======================================================================
"RTN","PXRMRIN3",5,0)
DISLOG(D0) ;Display the APPLY LOGIG.
"RTN","PXRMRIN3",6,0)
 ;Determine if this is a default adhoc logic or user modified logic
"RTN","PXRMRIN3",7,0)
 N PXF,TXT
"RTN","PXRMRIN3",8,0)
 S PXF=$L($G(^PXD(811.9,D0,30)))
"RTN","PXRMRIN3",9,0)
 I 'PXF S TXT="Default PATIENT COHORT LOGIC to see if the Reminder applies to a patient:"
"RTN","PXRMRIN3",10,0)
 E  S TXT="Customized PATIENT COHORT LOGIC to see if the Reminder applies to a patient:"
"RTN","PXRMRIN3",11,0)
 D SET(0,TXT)
"RTN","PXRMRIN3",12,0)
 ;
"RTN","PXRMRIN3",13,0)
 N BOOLOP,RITEM
"RTN","PXRMRIN3",14,0)
 S RITEM=D0
"RTN","PXRMRIN3",15,0)
 ;
"RTN","PXRMRIN3",16,0)
 ;Establish the list of boolean operators that can be used in the logic
"RTN","PXRMRIN3",17,0)
 ;string.
"RTN","PXRMRIN3",18,0)
 S BOOLOP="'!&"
"RTN","PXRMRIN3",19,0)
 ;
"RTN","PXRMRIN3",20,0)
 ;Build the lists of findings for this reminder.
"RTN","PXRMRIN3",21,0)
 N FL
"RTN","PXRMRIN3",22,0)
 D BLDFLST^PXRMPTL(.FL)
"RTN","PXRMRIN3",23,0)
 ;
"RTN","PXRMRIN3",24,0)
 N ELOGSTR,IND,NEE,LOGSTR,NLOGLIN,PARRAY,TEND,TSTART
"RTN","PXRMRIN3",25,0)
 S TSTART=1
"RTN","PXRMRIN3",26,0)
 S TEND=75
"RTN","PXRMRIN3",27,0)
 ;
"RTN","PXRMRIN3",28,0)
 ;Get the user cohort logic string.
"RTN","PXRMRIN3",29,0)
 S LOGSTR=$G(^PXD(811.9,RITEM,30))
"RTN","PXRMRIN3",30,0)
 ;Otherwise use internal cohort logic
"RTN","PXRMRIN3",31,0)
 I LOGSTR="" S LOGSTR=$G(^PXD(811.9,RITEM,31))
"RTN","PXRMRIN3",32,0)
 ;
"RTN","PXRMRIN3",33,0)
 ;Remove any (0)! and (1)& entries
"RTN","PXRMRIN3",34,0)
 S LOGSTR=$$REMOVE(LOGSTR)
"RTN","PXRMRIN3",35,0)
 ;
"RTN","PXRMRIN3",36,0)
 S NLOGLIN=$$STRFMT(TSTART,TEND,LOGSTR,BOOLOP,.PARRAY)
"RTN","PXRMRIN3",37,0)
 F IND=1:1:NLOGLIN D
"RTN","PXRMRIN3",38,0)
 .D SET(5,PARRAY(IND))
"RTN","PXRMRIN3",39,0)
 ;
"RTN","PXRMRIN3",40,0)
 S NEE=$$ELOGSTR(LOGSTR,.ELOGSTR,.FL,BOOLOP)
"RTN","PXRMRIN3",41,0)
 ;Format the expanded logic string.
"RTN","PXRMRIN3",42,0)
 S NLOGLIN=$$ARRFMT^PXRMPTL(TSTART,TEND,NEE,.ELOGSTR,.PARRAY)
"RTN","PXRMRIN3",43,0)
 ;
"RTN","PXRMRIN3",44,0)
 D SET(0,"Expanded Patient Cohort Logic:",2)
"RTN","PXRMRIN3",45,0)
 F IND=1:1:NLOGLIN D
"RTN","PXRMRIN3",46,0)
 .D SET(5,PARRAY(IND))
"RTN","PXRMRIN3",47,0)
 ;
"RTN","PXRMRIN3",48,0)
 S PXF=$L($G(^PXD(811.9,RITEM,34)))
"RTN","PXRMRIN3",49,0)
 I 'PXF S TXT="Default RESOLUTION LOGIC defines findings which can resolve the Reminder:"
"RTN","PXRMRIN3",50,0)
 E  S TXT="Customized RESOLUTION LOGIC defines findings which can resolve the Reminder:"
"RTN","PXRMRIN3",51,0)
 D SET(0,TXT,2)
"RTN","PXRMRIN3",52,0)
 ;
"RTN","PXRMRIN3",53,0)
 ;Get user resolution logic string
"RTN","PXRMRIN3",54,0)
 S LOGSTR=$G(^PXD(811.9,RITEM,34))
"RTN","PXRMRIN3",55,0)
 ;Otherwise use internal resolution logic
"RTN","PXRMRIN3",56,0)
 I LOGSTR="" S LOGSTR=$G(^PXD(811.9,RITEM,35))
"RTN","PXRMRIN3",57,0)
 ;
"RTN","PXRMRIN3",58,0)
 ;Remove any (0)! and (1)& entries
"RTN","PXRMRIN3",59,0)
 S LOGSTR=$$REMOVE(LOGSTR)
"RTN","PXRMRIN3",60,0)
 ;
"RTN","PXRMRIN3",61,0)
 S NLOGLIN=$$STRFMT(TSTART,TEND,LOGSTR,BOOLOP,.PARRAY)
"RTN","PXRMRIN3",62,0)
 F IND=1:1:NLOGLIN D
"RTN","PXRMRIN3",63,0)
 .D SET(5,PARRAY(IND))
"RTN","PXRMRIN3",64,0)
 ;
"RTN","PXRMRIN3",65,0)
 S NEE=$$ELOGSTR(LOGSTR,.ELOGSTR,.FL,BOOLOP)
"RTN","PXRMRIN3",66,0)
 ;Format the expanded logic string.
"RTN","PXRMRIN3",67,0)
 S NLOGLIN=$$ARRFMT^PXRMPTL(TSTART,TEND,NEE,.ELOGSTR,.PARRAY)
"RTN","PXRMRIN3",68,0)
 ;
"RTN","PXRMRIN3",69,0)
 D SET(0,"Expanded Resolution Logic:",2)
"RTN","PXRMRIN3",70,0)
 F IND=1:1:NLOGLIN D
"RTN","PXRMRIN3",71,0)
 .D SET(5,PARRAY(IND))
"RTN","PXRMRIN3",72,0)
 Q
"RTN","PXRMRIN3",73,0)
 ;
"RTN","PXRMRIN3",74,0)
 ;=======================================================================
"RTN","PXRMRIN3",75,0)
ELOGSTR(LOGSTR,ELOGSTR,FL,SEP) ;Expand the logic string use SEP as a
"RTN","PXRMRIN3",76,0)
 ;separator. Return the number of elements.
"RTN","PXRMRIN3",77,0)
 N END,IC,IND,NEE,START,TEMP
"RTN","PXRMRIN3",78,0)
 S NEE=1
"RTN","PXRMRIN3",79,0)
 S ELOGSTR(NEE)=""
"RTN","PXRMRIN3",80,0)
 ;Break the logic string into pieces using SEP.
"RTN","PXRMRIN3",81,0)
 F IC=1:1:$L(LOGSTR) D
"RTN","PXRMRIN3",82,0)
 . S TEMP=$E(LOGSTR,IC)
"RTN","PXRMRIN3",83,0)
 . I SEP[TEMP D
"RTN","PXRMRIN3",84,0)
 .. S NEE=NEE+1
"RTN","PXRMRIN3",85,0)
 .. S ELOGSTR(NEE)=TEMP
"RTN","PXRMRIN3",86,0)
 .. S NEE=NEE+1
"RTN","PXRMRIN3",87,0)
 .. S ELOGSTR(NEE)=""
"RTN","PXRMRIN3",88,0)
 . E  S ELOGSTR(NEE)=ELOGSTR(NEE)_TEMP
"RTN","PXRMRIN3",89,0)
 ;Substitute the names for the finding indices.
"RTN","PXRMRIN3",90,0)
 F IC=1:1:NEE D
"RTN","PXRMRIN3",91,0)
 . I ELOGSTR(IC)["FI" D
"RTN","PXRMRIN3",92,0)
 .. S TEMP=ELOGSTR(IC)
"RTN","PXRMRIN3",93,0)
 .. S START=$F(TEMP,"FI(")
"RTN","PXRMRIN3",94,0)
 .. S END=$F(TEMP,")",START)-2
"RTN","PXRMRIN3",95,0)
 .. S IND=$E(TEMP,START,END)
"RTN","PXRMRIN3",96,0)
 .. S TEMP=$G(FL(IND)) I TEMP="" Q
"RTN","PXRMRIN3",97,0)
 .. S ELOGSTR(IC)=$$STRREP^PXRMUTIL(ELOGSTR(IC),IND,TEMP)
"RTN","PXRMRIN3",98,0)
 Q NEE
"RTN","PXRMRIN3",99,0)
 ;
"RTN","PXRMRIN3",100,0)
 ;======================================================================
"RTN","PXRMRIN3",101,0)
STRFMT(START,END,STRING,SEP,OUTARRAY) ;Format string STRING so that
"RTN","PXRMRIN3",102,0)
 ;it fits between START and END. Put each "formatted" piece into
"RTN","PXRMRIN3",103,0)
 ;OUTARRAY and return the number of lines.
"RTN","PXRMRIN3",104,0)
 N MAXLEN,SLEN
"RTN","PXRMRIN3",105,0)
 K OUTARRAY
"RTN","PXRMRIN3",106,0)
 S MAXLEN=END-START+1
"RTN","PXRMRIN3",107,0)
 S SLEN=$L(STRING)
"RTN","PXRMRIN3",108,0)
 I SLEN'>MAXLEN D  Q 1
"RTN","PXRMRIN3",109,0)
 . S OUTARRAY(1)=STRING
"RTN","PXRMRIN3",110,0)
 ;
"RTN","PXRMRIN3",111,0)
 N CHAR,IC,LINNUM,NE,TARRAY,TEMP
"RTN","PXRMRIN3",112,0)
 ;Break string into pieces using SEP.
"RTN","PXRMRIN3",113,0)
 S LINNUM=0
"RTN","PXRMRIN3",114,0)
 S TEMP=""
"RTN","PXRMRIN3",115,0)
 F IC=1:1:SLEN D
"RTN","PXRMRIN3",116,0)
 . S CHAR=$E(STRING,IC,IC)
"RTN","PXRMRIN3",117,0)
 . S TEMP=TEMP_CHAR
"RTN","PXRMRIN3",118,0)
 . I SEP[CHAR D
"RTN","PXRMRIN3",119,0)
 .. S LINNUM=LINNUM+1
"RTN","PXRMRIN3",120,0)
 .. S TARRAY(LINNUM)=TEMP
"RTN","PXRMRIN3",121,0)
 .. S TEMP=""
"RTN","PXRMRIN3",122,0)
 S LINNUM=LINNUM+1
"RTN","PXRMRIN3",123,0)
 S TARRAY(LINNUM)=TEMP
"RTN","PXRMRIN3",124,0)
 S NE=LINNUM
"RTN","PXRMRIN3",125,0)
 ;
"RTN","PXRMRIN3",126,0)
 ;Load the output array.
"RTN","PXRMRIN3",127,0)
 S OUTARRAY(1)=""
"RTN","PXRMRIN3",128,0)
 S LINNUM=1
"RTN","PXRMRIN3",129,0)
 F IC=1:1:NE D
"RTN","PXRMRIN3",130,0)
 . S SLEN=$L(OUTARRAY(LINNUM))+$L(TARRAY(IC))
"RTN","PXRMRIN3",131,0)
 . I SLEN>MAXLEN D
"RTN","PXRMRIN3",132,0)
 .. S LINNUM=LINNUM+1
"RTN","PXRMRIN3",133,0)
 .. S OUTARRAY(LINNUM)=TARRAY(IC)
"RTN","PXRMRIN3",134,0)
 . E  S OUTARRAY(LINNUM)=OUTARRAY(LINNUM)_TARRAY(IC)
"RTN","PXRMRIN3",135,0)
 Q LINNUM
"RTN","PXRMRIN3",136,0)
 ;
"RTN","PXRMRIN3",137,0)
 ;======================================================================
"RTN","PXRMRIN3",138,0)
REMOVE(STRING) ;Remove leading (n) entries
"RTN","PXRMRIN3",139,0)
 I ($E(STRING,1,4)="(0)!")!($E(STRING,1,4)="(1)&") S $E(STRING,1,4)=""
"RTN","PXRMRIN3",140,0)
 Q STRING
"RTN","PXRMRIN3",141,0)
 ;
"RTN","PXRMRIN3",142,0)
 ;======================================================================
"RTN","PXRMRIN3",143,0)
SET(TAB,TXT,LF) ;
"RTN","PXRMRIN3",144,0)
 ;Prior line feeds
"RTN","PXRMRIN3",145,0)
 I $G(LF) D
"RTN","PXRMRIN3",146,0)
 .N CNT F CNT=1:1:LF S IC=IC+1,ARRAY(IC)=$J("",79)
"RTN","PXRMRIN3",147,0)
 ;Save main line
"RTN","PXRMRIN3",148,0)
 S IC=IC+1,ARRAY(IC)=$J("",TAB)_TXT
"RTN","PXRMRIN3",149,0)
 Q
"RTN","PXRMRINQ")
1^207
"RTN","PXRMRLST")
0^98^B15804134
"RTN","PXRMRLST",1,0)
PXRMRLST ; SLC/PKR - Clinical Reminder list option routine ;05/19/2000
"RTN","PXRMRLST",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMRLST",3,0)
 ;
"RTN","PXRMRLST",4,0)
 ;===================================================================== 
"RTN","PXRMRLST",5,0)
 ;Build the criteria for which reminders to list.
"RTN","PXRMRLST",6,0)
LIST N ALL,CRITERIA,DIR,IND,LOCAL,LPREFIX,NCRIT,PREFIX,SORT,STATUS,X,Y
"RTN","PXRMRLST",7,0)
START S (ALL,LOCAL,NCRIT)=0
"RTN","PXRMRLST",8,0)
 S (PREFIX,STATUS)=""
"RTN","PXRMRLST",9,0)
 ;
"RTN","PXRMRLST",10,0)
ALLQ K DIR,DIRUT,DTOUT,DUOUT
"RTN","PXRMRLST",11,0)
 S DIR(0)="YAO"
"RTN","PXRMRLST",12,0)
 S DIR("A")="List all reminders? "
"RTN","PXRMRLST",13,0)
 S DIR("B")="Y"
"RTN","PXRMRLST",14,0)
 W !
"RTN","PXRMRLST",15,0)
 D ^DIR
"RTN","PXRMRLST",16,0)
 I $D(DTOUT)!($D(DIROUT)) Q
"RTN","PXRMRLST",17,0)
 I $D(DUOUT) Q
"RTN","PXRMRLST",18,0)
 S ALL=Y
"RTN","PXRMRLST",19,0)
 S NCRIT=NCRIT+1
"RTN","PXRMRLST",20,0)
 S CRITERIA(NCRIT)=DIR("A")_" "_Y(0)
"RTN","PXRMRLST",21,0)
 I ALL G ACTIVEQ
"RTN","PXRMRLST",22,0)
 ;
"RTN","PXRMRLST",23,0)
LOCALQ K DIR,DIRUT,DTOUT,DUOUT
"RTN","PXRMRLST",24,0)
 S DIR(0)="YAO"
"RTN","PXRMRLST",25,0)
 S DIR("A")="List all local reminders? "
"RTN","PXRMRLST",26,0)
 S DIR("B")="Y"
"RTN","PXRMRLST",27,0)
 W !
"RTN","PXRMRLST",28,0)
 D ^DIR
"RTN","PXRMRLST",29,0)
 I $D(DTOUT)!($D(DIROUT)) Q
"RTN","PXRMRLST",30,0)
 I $D(DUOUT) G ALLQ
"RTN","PXRMRLST",31,0)
 S LOCAL=Y
"RTN","PXRMRLST",32,0)
 S NCRIT=NCRIT+1
"RTN","PXRMRLST",33,0)
 S CRITERIA(NCRIT)=DIR("A")_" "_Y(0)
"RTN","PXRMRLST",34,0)
 I LOCAL G ACTIVEQ
"RTN","PXRMRLST",35,0)
 ;
"RTN","PXRMRLST",36,0)
PREFIXQ K DIR,DIRUT,DTOUT,DUOUT
"RTN","PXRMRLST",37,0)
 S PREFIX=""
"RTN","PXRMRLST",38,0)
 S DIR(0)="FAO"_U_"1:30"
"RTN","PXRMRLST",39,0)
 S DIR("A")="List only reminders starting with (prefix)? "
"RTN","PXRMRLST",40,0)
 S DIR("B")="VA-"
"RTN","PXRMRLST",41,0)
 W !
"RTN","PXRMRLST",42,0)
 D ^DIR
"RTN","PXRMRLST",43,0)
 I $D(DTOUT)!($D(DIROUT)) Q
"RTN","PXRMRLST",44,0)
 I $D(DUOUT) G LOCALQ
"RTN","PXRMRLST",45,0)
 S PREFIX=Y
"RTN","PXRMRLST",46,0)
 S LPREFIX=$L(Y)
"RTN","PXRMRLST",47,0)
 S NCRIT=NCRIT+1
"RTN","PXRMRLST",48,0)
 S CRITERIA(NCRIT)=DIR("A")_" "_PREFIX
"RTN","PXRMRLST",49,0)
 ;
"RTN","PXRMRLST",50,0)
ACTIVEQ K DIR,DIRUT,DTOUT,DUOUT
"RTN","PXRMRLST",51,0)
 S DIR(0)="SAO"_U_"A:Active;I:Inactive;B:Both"
"RTN","PXRMRLST",52,0)
 S DIR("A")="List Active (A), Inactive (I), Both (B)? "
"RTN","PXRMRLST",53,0)
 S DIR("B")="B"
"RTN","PXRMRLST",54,0)
 W !
"RTN","PXRMRLST",55,0)
 D ^DIR
"RTN","PXRMRLST",56,0)
 I $D(DTOUT)!($D(DIROUT)) Q
"RTN","PXRMRLST",57,0)
 I $D(DUOUT) G START
"RTN","PXRMRLST",58,0)
 S STATUS=Y
"RTN","PXRMRLST",59,0)
 S NCRIT=NCRIT+1
"RTN","PXRMRLST",60,0)
 S CRITERIA(NCRIT)=DIR("A")_" "_Y(0)
"RTN","PXRMRLST",61,0)
 ;
"RTN","PXRMRLST",62,0)
SORTQ K DIR,DIRUT,DTOUT,DUOUT
"RTN","PXRMRLST",63,0)
 S SORT="N"
"RTN","PXRMRLST",64,0)
 S DIR(0)="SAO"_U_"N:Name (.01);P:Print name"
"RTN","PXRMRLST",65,0)
 S DIR("A")="Sort list by Name (N), Print Name (P)? "
"RTN","PXRMRLST",66,0)
 S DIR("B")="N"
"RTN","PXRMRLST",67,0)
 W !
"RTN","PXRMRLST",68,0)
 D ^DIR
"RTN","PXRMRLST",69,0)
 I $D(DTOUT)!($D(DIROUT)) Q
"RTN","PXRMRLST",70,0)
 S SORT=Y_U_Y(0)
"RTN","PXRMRLST",71,0)
 S NCRIT=NCRIT+1
"RTN","PXRMRLST",72,0)
 S CRITERIA(NCRIT)=DIR("A")_" "_Y(0)
"RTN","PXRMRLST",73,0)
 ;
"RTN","PXRMRLST",74,0)
 ;Make sure the criteria are ok.
"RTN","PXRMRLST",75,0)
 W !!,"A reminder list will be created using the following criteria:"
"RTN","PXRMRLST",76,0)
 F IND=1:1:NCRIT D
"RTN","PXRMRLST",77,0)
 . W !,?2,CRITERIA(IND)
"RTN","PXRMRLST",78,0)
 ;
"RTN","PXRMRLST",79,0)
 K CRITERIA
"RTN","PXRMRLST",80,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","PXRMRLST",81,0)
 S DIR(0)="YAO"
"RTN","PXRMRLST",82,0)
 S DIR("A")="Is this correct? "
"RTN","PXRMRLST",83,0)
 S DIR("B")="Y"
"RTN","PXRMRLST",84,0)
 W !
"RTN","PXRMRLST",85,0)
 D ^DIR
"RTN","PXRMRLST",86,0)
 I $D(DTOUT)!($D(DIROUT)) Q
"RTN","PXRMRLST",87,0)
 I $D(DUOUT) G START
"RTN","PXRMRLST",88,0)
 I 'Y G START
"RTN","PXRMRLST",89,0)
 ;
"RTN","PXRMRLST",90,0)
 ;Build the list of reminders based on the input critera.
"RTN","PXRMRLST",91,0)
 N IEN,NAME,NODE0,SFUN
"RTN","PXRMRLST",92,0)
 ;Setup the screening function to use
"RTN","PXRMRLST",93,0)
 I ALL S SFUN="$$ALLS(NODE0,STATUS)"
"RTN","PXRMRLST",94,0)
 I LOCAL S SFUN="$$LOCALS(NODE0,STATUS)"
"RTN","PXRMRLST",95,0)
 I $L(PREFIX)>0 S SFUN="$$PREFIXS(NODE0,STATUS,PREFIX,LPREFIX)"
"RTN","PXRMRLST",96,0)
 K ^TMP($J)
"RTN","PXRMRLST",97,0)
 S IEN=0
"RTN","PXRMRLST",98,0)
 F  S IEN=$O(^PXD(811.9,IEN)) Q:+IEN=0  D
"RTN","PXRMRLST",99,0)
 . S NODE0=^PXD(811.9,IEN,0)
"RTN","PXRMRLST",100,0)
 . I @SFUN S ^TMP($J,IEN)=""
"RTN","PXRMRLST",101,0)
 ;Print the list
"RTN","PXRMRLST",102,0)
 N BY,DIC,FLDS,FR,L,PXRMFVPL,PXRMROOT,TO
"RTN","PXRMRLST",103,0)
 D BLDLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMRLST",104,0)
 S (DIC,PXRMROOT)="^PXD(811.9,"
"RTN","PXRMRLST",105,0)
 S FLDS="[PXRM DEFINITION LIST]"
"RTN","PXRMRLST",106,0)
 S L=0
"RTN","PXRMRLST",107,0)
 S L(0)=1
"RTN","PXRMRLST",108,0)
 I $P(SORT,U,1)="N" S BY=.01
"RTN","PXRMRLST",109,0)
 I $P(SORT,U,1)="P" S BY=1.2
"RTN","PXRMRLST",110,0)
 S BY(0)="^TMP($J,"
"RTN","PXRMRLST",111,0)
 S (FR,TO)=""
"RTN","PXRMRLST",112,0)
 D EN1^DIP
"RTN","PXRMRLST",113,0)
 K ^TMP($J)
"RTN","PXRMRLST",114,0)
 Q
"RTN","PXRMRLST",115,0)
 ;
"RTN","PXRMRLST",116,0)
 ;===================================================================== 
"RTN","PXRMRLST",117,0)
ALLS(NODE0,STATUS) ;Screen based on all reminders and status.
"RTN","PXRMRLST",118,0)
 I STATUS="B" Q 1
"RTN","PXRMRLST",119,0)
 N INFLAG
"RTN","PXRMRLST",120,0)
 S INFLAG=$P(NODE0,U,6)
"RTN","PXRMRLST",121,0)
 I (STATUS="A")&('INFLAG) Q 1
"RTN","PXRMRLST",122,0)
 I (STATUS="I")&(INFLAG) Q 1
"RTN","PXRMRLST",123,0)
 Q 0
"RTN","PXRMRLST",124,0)
 ;
"RTN","PXRMRLST",125,0)
 ;===================================================================== 
"RTN","PXRMRLST",126,0)
LOCALS(NODE0,STATUS) ;Screen based on all local reminders and status.
"RTN","PXRMRLST",127,0)
 N NAME
"RTN","PXRMRLST",128,0)
 S NAME=$P(NODE0,U,1)
"RTN","PXRMRLST",129,0)
 I NAME["VA-" Q 0
"RTN","PXRMRLST",130,0)
 I STATUS="B" Q 1
"RTN","PXRMRLST",131,0)
 N INFLAG
"RTN","PXRMRLST",132,0)
 S INFLAG=$P(NODE0,U,6)
"RTN","PXRMRLST",133,0)
 I (STATUS="A")&('INFLAG) Q 1
"RTN","PXRMRLST",134,0)
 I (STATUS="I")&(INFLAG) Q 1
"RTN","PXRMRLST",135,0)
 Q 0
"RTN","PXRMRLST",136,0)
 ;
"RTN","PXRMRLST",137,0)
 ;===================================================================== 
"RTN","PXRMRLST",138,0)
PREFIXS(NODE0,STATUS,PREFIX,LPREFIX) ;Screen based on .01 prefix and status.
"RTN","PXRMRLST",139,0)
 N NAME,PRE
"RTN","PXRMRLST",140,0)
 S NAME=$P(NODE0,U,1)
"RTN","PXRMRLST",141,0)
 S PRE=$E(NAME,1,LPREFIX)
"RTN","PXRMRLST",142,0)
 I PRE'=PREFIX Q 0
"RTN","PXRMRLST",143,0)
 I STATUS="B" Q 1
"RTN","PXRMRLST",144,0)
 N INFLAG
"RTN","PXRMRLST",145,0)
 S INFLAG=$P(NODE0,U,6)
"RTN","PXRMRLST",146,0)
 I (STATUS="A")&('INFLAG) Q 1
"RTN","PXRMRLST",147,0)
 I (STATUS="I")&(INFLAG) Q 1
"RTN","PXRMRLST",148,0)
 Q 0
"RTN","PXRMRLST",149,0)
 ;
"RTN","PXRMRPCA")
0^99^B57349923
"RTN","PXRMRPCA",1,0)
PXRMRPCA ; SLC/PJH - Functions returning REMINDER data ;06/14/2000
"RTN","PXRMRPCA",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMRPCA",3,0)
 Q
"RTN","PXRMRPCA",4,0)
 ;
"RTN","PXRMRPCA",5,0)
ALL(ORY) ;All active reminders
"RTN","PXRMRPCA",6,0)
 ;print name^ien
"RTN","PXRMRPCA",7,0)
 N ARR,DATA,NAME,ORREM,OCNT,SUB
"RTN","PXRMRPCA",8,0)
 S ORREM=0
"RTN","PXRMRPCA",9,0)
 F  S ORREM=$O(^PXD(811.9,ORREM)) Q:'ORREM  D
"RTN","PXRMRPCA",10,0)
 .S DATA=$G(^PXD(811.9,ORREM,0)) Q:DATA=""
"RTN","PXRMRPCA",11,0)
 .;Skip inactive reminders
"RTN","PXRMRPCA",12,0)
 .I $P(DATA,U,6) Q
"RTN","PXRMRPCA",13,0)
 .;Skip reminders with no name
"RTN","PXRMRPCA",14,0)
 .S NAME=$P(DATA,U,3) I NAME="" Q
"RTN","PXRMRPCA",15,0)
 .;Sort by name
"RTN","PXRMRPCA",16,0)
 .S ARR(NAME_U_ORREM)=""
"RTN","PXRMRPCA",17,0)
 ; Build output arrray
"RTN","PXRMRPCA",18,0)
 S SUB="",OCNT=0
"RTN","PXRMRPCA",19,0)
 F  S SUB=$O(ARR(SUB)) Q:SUB=""  D
"RTN","PXRMRPCA",20,0)
 .S OCNT=OCNT+1
"RTN","PXRMRPCA",21,0)
 .S ORY(OCNT)=SUB
"RTN","PXRMRPCA",22,0)
 Q
"RTN","PXRMRPCA",23,0)
 ;
"RTN","PXRMRPCA",24,0)
APPL(ORY,ORPT,ORLOC) ;Applicable reminders for cover sheet
"RTN","PXRMRPCA",25,0)
 ;format file 811.9 ien^reminder print name^date due^last occur^prty^due.
"RTN","PXRMRPCA",26,0)
 N ORSRV,TMPLST,ERR,ORI,ORJ,ORIEN,ORTXT,ORX,ORLASTDT,ORDUEDT
"RTN","PXRMRPCA",27,0)
 N ORDUE,ORPRI,ORSTA,PASS
"RTN","PXRMRPCA",28,0)
 S ORJ=0
"RTN","PXRMRPCA",29,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","PXRMRPCA",30,0)
 I ORLOC S PASS="USR^LOC.`"_$G(ORLOC)_"^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",31,0)
 I 'ORLOC S PASS="USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",32,0)
 D GETLST^XPAR(.TMPLST,PASS,"ORQQPX SEARCH ITEMS","Q",.ERR) ; DBIA 3076
"RTN","PXRMRPCA",33,0)
 I ERR>0 S ORY(1)=U_"Error: "_$P(ERR,U,2) Q
"RTN","PXRMRPCA",34,0)
 D AVAL(.TMPLST,2) ;Evaluate reminders
"RTN","PXRMRPCA",35,0)
 Q
"RTN","PXRMRPCA",36,0)
 ;
"RTN","PXRMRPCA",37,0)
ALIST(ORY,ORPT,LIST) ;Evaluate specific reminders
"RTN","PXRMRPCA",38,0)
 N ORSRV,ORI,ORJ,ORIEN,ORTXT,ORX,ORLASTDT,ORDUEDT,ORLOC
"RTN","PXRMRPCA",39,0)
 N ORDUE,ORPRI,ORSTA
"RTN","PXRMRPCA",40,0)
 S ORJ=0
"RTN","PXRMRPCA",41,0)
 D AVAL(.LIST,1)
"RTN","PXRMRPCA",42,0)
 Q
"RTN","PXRMRPCA",43,0)
 ;
"RTN","PXRMRPCA",44,0)
AVAL(ARRAY,POS) ;Evaluate array of reminders
"RTN","PXRMRPCA",45,0)
 S ORI=0 F  S ORI=$O(ARRAY(ORI)) Q:'ORI  D
"RTN","PXRMRPCA",46,0)
 .S ORIEN=$P(ARRAY(ORI),U,POS)
"RTN","PXRMRPCA",47,0)
 .K ^TMP("PXRHM",$J)
"RTN","PXRMRPCA",48,0)
 .;Evaluate reminder
"RTN","PXRMRPCA",49,0)
 .D MAIN^PXRM(ORPT,ORIEN,1,1)
"RTN","PXRMRPCA",50,0)
 .;Not applicable is default
"RTN","PXRMRPCA",51,0)
 .S ORDUE=2 D  Q:ORTXT=""
"RTN","PXRMRPCA",52,0)
 ..S ORTXT="",ORTXT=$O(^TMP("PXRHM",$J,ORIEN,ORTXT)) Q:ORTXT=""
"RTN","PXRMRPCA",53,0)
 ..;Exclude dead patients from applicable
"RTN","PXRMRPCA",54,0)
 ..I $G(^XTMP("PXRMDFN"_ORPT,"DOD"))'="" Q
"RTN","PXRMRPCA",55,0)
 ..;Determine status
"RTN","PXRMRPCA",56,0)
 ..S ORX=^TMP("PXRHM",$J,ORIEN,ORTXT) Q:ORX=""
"RTN","PXRMRPCA",57,0)
 ..S ORSTA=$P(ORX,U)
"RTN","PXRMRPCA",58,0)
 ..;Ignore reminders that are not applicable
"RTN","PXRMRPCA",59,0)
 ..I (ORSTA=" ")!(ORSTA["NEVER")!(ORSTA="N/A")!(ORSTA="ERROR") Q
"RTN","PXRMRPCA",60,0)
 ..;Differentiate due and applicable
"RTN","PXRMRPCA",61,0)
 ..S ORDUE=0 I ORSTA["DUE" S ORDUE=1
"RTN","PXRMRPCA",62,0)
 ..;Get next due and last done dates 
"RTN","PXRMRPCA",63,0)
 ..S ORDUEDT=$P(ORX,U,2),ORLASTDT=$P(ORX,U,3)
"RTN","PXRMRPCA",64,0)
 ..S ORLASTDT=$S(+$G(ORLASTDT)>0:ORLASTDT,1:"")  ;null if not a date
"RTN","PXRMRPCA",65,0)
 ..;Reminder priority
"RTN","PXRMRPCA",66,0)
 ..S ORPRI=$P($G(^PXD(811.9,ORIEN,0)),U,10)
"RTN","PXRMRPCA",67,0)
 ..;Default is 2 for medium
"RTN","PXRMRPCA",68,0)
 ..I ORPRI="" S ORPRI=2
"RTN","PXRMRPCA",69,0)
 ..S ORJ=ORJ+1
"RTN","PXRMRPCA",70,0)
 ..S ORY(ORJ)=ORIEN_U_ORTXT_U_ORDUEDT_U_ORLASTDT_U_ORPRI_U_ORDUE_U_$$DLG(ORIEN)
"RTN","PXRMRPCA",71,0)
 .;Save not applicables also (IF a valid reminder)
"RTN","PXRMRPCA",72,0)
 .I ORDUE=2 D
"RTN","PXRMRPCA",73,0)
 ..S ORJ=ORJ+1
"RTN","PXRMRPCA",74,0)
 ..S ORY(ORJ)=ORIEN_U_ORTXT_U_U_U_U_ORDUE_U_$$DLG(ORIEN)
"RTN","PXRMRPCA",75,0)
 K ^TMP("PXRHM",$J)
"RTN","PXRMRPCA",76,0)
 Q
"RTN","PXRMRPCA",77,0)
 ;
"RTN","PXRMRPCA",78,0)
CATEGORY(ORY,ORPT,ORLOC) ;Reminder Categories
"RTN","PXRMRPCA",79,0)
 ;type^name^ien^parent^child^etc
"RTN","PXRMRPCA",80,0)
 N ERR,IC,ORSRV,PASS,TEMPLST
"RTN","PXRMRPCA",81,0)
 ;Get user's service 
"RTN","PXRMRPCA",82,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","PXRMRPCA",83,0)
 ;Build list of locations and services required
"RTN","PXRMRPCA",84,0)
 I ORLOC S PASS="USR^LOC.`"_$G(ORLOC)_"^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",85,0)
 I 'ORLOC S PASS="USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",86,0)
 ;
"RTN","PXRMRPCA",87,0)
 ;Get list of categories from GUI parameters file
"RTN","PXRMRPCA",88,0)
 D GETLST^XPAR(.TMPLST,PASS,"PXRM CPRS LOOKUP CATEGORIES","Q",.ERR)
"RTN","PXRMRPCA",89,0)
 ;If error return error type
"RTN","PXRMRPCA",90,0)
 I ERR>0 S ORY(1)=U_"Error: "_$P(ERR,U,2) Q
"RTN","PXRMRPCA",91,0)
 ;
"RTN","PXRMRPCA",92,0)
 ;For each category build tree of reminders/subcategories
"RTN","PXRMRPCA",93,0)
 N CNT,DSP,LEVEL,ORCAT,UNIQ
"RTN","PXRMRPCA",94,0)
 S CNT="",IC=0,LEVEL=0
"RTN","PXRMRPCA",95,0)
 ;unique number within the array - for level 0 = display sequence 
"RTN","PXRMRPCA",96,0)
 S UNIQ=TMPLST
"RTN","PXRMRPCA",97,0)
 ;For each category in 'PXRM CPRS LOOKUP CATEGORIES'
"RTN","PXRMRPCA",98,0)
 F  S CNT=$O(TMPLST(CNT)) Q:'CNT  D
"RTN","PXRMRPCA",99,0)
 .;Get display sequence and ctegory ien
"RTN","PXRMRPCA",100,0)
 .S DSP=$P(TMPLST(CNT),U),ORCAT=$P(TMPLST(CNT),U,2)
"RTN","PXRMRPCA",101,0)
 .;Add category and associated reminders/subcategories to output array
"RTN","PXRMRPCA",102,0)
 .D GETLST(0,ORCAT,0,DSP)
"RTN","PXRMRPCA",103,0)
 Q
"RTN","PXRMRPCA",104,0)
 ;
"RTN","PXRMRPCA",105,0)
DLG(REM) ;Dialog check
"RTN","PXRMRPCA",106,0)
 N DATA,DIEN,DOK
"RTN","PXRMRPCA",107,0)
 S DIEN=$P($G(^PXD(811.9,REM,51)),U) Q:'DIEN 0
"RTN","PXRMRPCA",108,0)
 S DATA=$G(^PXRMD(801.41,DIEN,0))
"RTN","PXRMRPCA",109,0)
 I $P(DATA,U,4)="R",$P(DATA,U,3)="" Q 1
"RTN","PXRMRPCA",110,0)
 Q 0
"RTN","PXRMRPCA",111,0)
 ;
"RTN","PXRMRPCA",112,0)
GETLST(D0,D1,LEVEL,PARENT) ;Add to output array
"RTN","PXRMRPCA",113,0)
 N DATA,NAME,ORREM,ORSCAT,PCAT,SEQ,SUB,TEMP
"RTN","PXRMRPCA",114,0)
 ;Get category ien if this is a sub-category
"RTN","PXRMRPCA",115,0)
 S PCAT=0 I LEVEL>0 D  Q:ORSCAT=""  S UNIQ=UNIQ+1,PARENT=UNIQ
"RTN","PXRMRPCA",116,0)
 .S ORSCAT=$P($G(^PXRMD(811.7,D0,10,D1,0)),U),PCAT=PARENT
"RTN","PXRMRPCA",117,0)
 ;Otherwise use passed ien
"RTN","PXRMRPCA",118,0)
 I LEVEL=0 S ORSCAT=D1
"RTN","PXRMRPCA",119,0)
 ;Get category name
"RTN","PXRMRPCA",120,0)
 S NAME=$G(^PXRMD(811.7,ORSCAT,0)) I NAME="" Q
"RTN","PXRMRPCA",121,0)
 ;
"RTN","PXRMRPCA",122,0)
 ;Create category entry in output array
"RTN","PXRMRPCA",123,0)
 ;unique number^type^name^parent^reminder ien
"RTN","PXRMRPCA",124,0)
 ;
"RTN","PXRMRPCA",125,0)
 S IC=IC+1,ORY(IC)=PARENT_U_"C"_U_NAME_U_PCAT_U
"RTN","PXRMRPCA",126,0)
 ;Increment tab
"RTN","PXRMRPCA",127,0)
 S LEVEL=LEVEL+1
"RTN","PXRMRPCA",128,0)
 ;
"RTN","PXRMRPCA",129,0)
 ;Sort Reminders from this category into display sequence
"RTN","PXRMRPCA",130,0)
 S SUB=0 K TEMP
"RTN","PXRMRPCA",131,0)
 F  S SUB=$O(^PXRMD(811.7,ORSCAT,2,SUB)) Q:SUB=""  D
"RTN","PXRMRPCA",132,0)
 .S DATA=$G(^PXRMD(811.7,ORSCAT,2,SUB,0)) Q:DATA=""
"RTN","PXRMRPCA",133,0)
 .S ORREM=$P(DATA,U) Q:ORREM=""
"RTN","PXRMRPCA",134,0)
 .S SEQ=$P(DATA,U,2)_0
"RTN","PXRMRPCA",135,0)
 .;Skip inactive reminders
"RTN","PXRMRPCA",136,0)
 .S DATA=$G(^PXD(811.9,ORREM,0)) Q:DATA=""  Q:$P(DATA,U,6)
"RTN","PXRMRPCA",137,0)
 .S NAME=$P(DATA,U) I NAME="" S NAME="Unknown"
"RTN","PXRMRPCA",138,0)
 .;or printname
"RTN","PXRMRPCA",139,0)
 .S NAME=$P(DATA,U,3)
"RTN","PXRMRPCA",140,0)
 .S TEMP(SEQ)=NAME_U_ORREM
"RTN","PXRMRPCA",141,0)
 ;
"RTN","PXRMRPCA",142,0)
 ;Re-save reminders in output array for display
"RTN","PXRMRPCA",143,0)
 ;unique number^type^name^parent^reminder ien
"RTN","PXRMRPCA",144,0)
 ;
"RTN","PXRMRPCA",145,0)
 S SEQ=""
"RTN","PXRMRPCA",146,0)
 F  S SEQ=$O(TEMP(SEQ)) Q:SEQ=""  D
"RTN","PXRMRPCA",147,0)
 .S NAME=$P(TEMP(SEQ),U),ORREM=$P(TEMP(SEQ),U,2)
"RTN","PXRMRPCA",148,0)
 .S UNIQ=UNIQ+1
"RTN","PXRMRPCA",149,0)
 .S IC=IC+1,ORY(IC)=UNIQ_U_"R"_U_NAME_U_PARENT_U_ORREM_U_$$DLG(ORREM)
"RTN","PXRMRPCA",150,0)
 ;
"RTN","PXRMRPCA",151,0)
 ;Sort Sub-Categories for this category into display order
"RTN","PXRMRPCA",152,0)
 S SUB=0 K TEMP
"RTN","PXRMRPCA",153,0)
 F  S SUB=$O(^PXRMD(811.7,ORSCAT,10,SUB)) Q:SUB=""  D
"RTN","PXRMRPCA",154,0)
 .S DATA=$G(^PXRMD(811.7,ORSCAT,10,SUB,0)) Q:DATA=""
"RTN","PXRMRPCA",155,0)
 .S SEQ=$P(DATA,U,2),TEMP(SEQ)=SUB
"RTN","PXRMRPCA",156,0)
 ;
"RTN","PXRMRPCA",157,0)
 ;Process sub-sub categories in the same manner
"RTN","PXRMRPCA",158,0)
 S SEQ=""
"RTN","PXRMRPCA",159,0)
 F  S SEQ=$O(TEMP(SEQ)) Q:SEQ=""  D
"RTN","PXRMRPCA",160,0)
 .S SUB=TEMP(SEQ)
"RTN","PXRMRPCA",161,0)
 .D GETLST(ORSCAT,SUB,LEVEL,PARENT)
"RTN","PXRMRPCA",162,0)
 Q
"RTN","PXRMRPCA",163,0)
 ;
"RTN","PXRMRPCA",164,0)
LIST(ORY,ORPT,ORLOC) ;Reminders for this patient location (not evaluated)
"RTN","PXRMRPCA",165,0)
 ;format file 811.9 ien
"RTN","PXRMRPCA",166,0)
 N ORSRV,TMPLST,ERR,ORI,ORJ,ORIEN,ORTXT,ORX,ORLASTDT,ORDUEDT
"RTN","PXRMRPCA",167,0)
 N CNT,ORIEN,ORDUE,ORPRI,ORSTA,PASS,SUB
"RTN","PXRMRPCA",168,0)
 S ORJ=0
"RTN","PXRMRPCA",169,0)
 ;
"RTN","PXRMRPCA",170,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","PXRMRPCA",171,0)
 I ORLOC S PASS="USR^LOC.`"_$G(ORLOC)_"^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",172,0)
 I 'ORLOC S PASS="USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",173,0)
 D GETLST^XPAR(.TMPLST,PASS,"ORQQPX SEARCH ITEMS","Q",.ERR) ; DBIA 3076
"RTN","PXRMRPCA",174,0)
 I ERR>0 S ORY(1)=U_"Error: "_$P(ERR,U,2) Q
"RTN","PXRMRPCA",175,0)
 ;
"RTN","PXRMRPCA",176,0)
 S CNT=0,SUB=""
"RTN","PXRMRPCA",177,0)
 F  S SUB=$O(TMPLST(SUB)) Q:'SUB  D
"RTN","PXRMRPCA",178,0)
 .S ORIEN=$P(TMPLST(SUB),U,2) Q:'ORIEN  Q:'$D(^PXD(811.9,ORIEN,0))
"RTN","PXRMRPCA",179,0)
 .S CNT=CNT+1,ORY(CNT)=ORIEN
"RTN","PXRMRPCA",180,0)
 Q
"RTN","PXRMRPCA",181,0)
 ;
"RTN","PXRMRPCA",182,0)
REMDET(ORY,ORPT,ORIEN) ;return detail for a pt's clinical reminder
"RTN","PXRMRPCA",183,0)
 ; ORY - return array
"RTN","PXRMRPCA",184,0)
 ; ORPT - patient DFN
"RTN","PXRMRPCA",185,0)
 ; ORIEN - clinical reminder (811.9 ien)
"RTN","PXRMRPCA",186,0)
 K ^TMP("PXRHM",$J)
"RTN","PXRMRPCA",187,0)
 D MAIN^PXRM(ORPT,ORIEN,5,1)     ; 5 returns all reminder info
"RTN","PXRMRPCA",188,0)
 N CR,I,J,ORTXT,SCT,STA,STA1,STA2,STA3 S I=1,J=0
"RTN","PXRMRPCA",189,0)
 S ORTXT="",ORTXT=$O(^TMP("PXRHM",$J,ORIEN,ORTXT)) Q:ORTXT=""
"RTN","PXRMRPCA",190,0)
 S STA=$G(^TMP("PXRHM",$J,ORIEN,ORTXT)) I STA'="" D
"RTN","PXRMRPCA",191,0)
 .S STA(1)=$P(STA,U),STA(2)=$P(STA,U,2),STA(3)=$P(STA,U,3)
"RTN","PXRMRPCA",192,0)
 .F SCT=1,2,3 I STA(SCT) S STA(SCT)=$$FMTE^XLFDT(STA(SCT),"5D")
"RTN","PXRMRPCA",193,0)
 .S ORY(I)="  --STATUS--  --DUE DATE--  --LAST DONE--",I=I+1
"RTN","PXRMRPCA",194,0)
 .S ORY(I)=$J(STA(1),10)_$J(STA(2),13)_$J(STA(3),14),I=I+1
"RTN","PXRMRPCA",195,0)
 F  S J=$O(^TMP("PXRHM",$J,ORIEN,ORTXT,"TXT",J)) Q:J=""  D
"RTN","PXRMRPCA",196,0)
 .S ORY(I)=^TMP("PXRHM",$J,ORIEN,ORTXT,"TXT",J),I=I+1
"RTN","PXRMRPCA",197,0)
 K ^TMP("PXRHM",$J)
"RTN","PXRMRPCA",198,0)
 Q
"RTN","PXRMRPCA",199,0)
 ;
"RTN","PXRMRPCA",200,0)
WEB(ORY,ORRM) ;web page call
"RTN","PXRMRPCA",201,0)
 ;web site description^address
"RTN","PXRMRPCA",202,0)
 N ADDR,CNT,DATA,DESC,LINE,SUB,TITLE,TXT,UNIQ
"RTN","PXRMRPCA",203,0)
 S DESC="",CNT=0,UNIQ=0
"RTN","PXRMRPCA",204,0)
 ;Get the reminder specific web sites in alpha order
"RTN","PXRMRPCA",205,0)
 I ORRM]"" D
"RTN","PXRMRPCA",206,0)
 .F  S DESC=$O(^PXD(811.9,ORRM,50,"B",DESC)) Q:DESC=""  D
"RTN","PXRMRPCA",207,0)
 ..S SUB=$O(^PXD(811.9,ORRM,50,"B",DESC,"")) Q:'SUB
"RTN","PXRMRPCA",208,0)
 ..S ADDR=$P($G(^PXD(811.9,ORRM,50,SUB,0)),U) Q:ADDR=""
"RTN","PXRMRPCA",209,0)
 ..S TITLE=$P($G(^PXD(811.9,ORRM,50,SUB,0)),U,2)
"RTN","PXRMRPCA",210,0)
 ..S UNIQ=UNIQ+1,CNT=CNT+1,ORY(CNT)=1_U_UNIQ_U_ADDR_U_TITLE,LINE=0
"RTN","PXRMRPCA",211,0)
 ..F  S LINE=$O(^PXD(811.9,ORRM,50,SUB,1,LINE)) Q:'LINE  D
"RTN","PXRMRPCA",212,0)
 ...S TXT=$G(^PXD(811.9,ORRM,50,SUB,1,LINE,0)) Q:TXT=""
"RTN","PXRMRPCA",213,0)
 ...S CNT=CNT+1,ORY(CNT)=2_U_UNIQ_U_TXT
"RTN","PXRMRPCA",214,0)
 ;Get the general web sites in alpha order
"RTN","PXRMRPCA",215,0)
 F  S DESC=$O(^PXRM(800,1,1,"B",DESC)) Q:DESC=""  D
"RTN","PXRMRPCA",216,0)
 .S SUB=$O(^PXRM(800,1,1,"B",DESC,"")) Q:'SUB
"RTN","PXRMRPCA",217,0)
 .S ADDR=$P($G(^PXRM(800,1,1,SUB,0)),U) Q:ADDR=""
"RTN","PXRMRPCA",218,0)
 .S TITLE=$P($G(^PXRM(800,1,1,SUB,0)),U,2)
"RTN","PXRMRPCA",219,0)
 .S UNIQ=UNIQ+1,CNT=CNT+1,ORY(CNT)=1_U_UNIQ_U_ADDR_U_TITLE,LINE=0
"RTN","PXRMRPCA",220,0)
 .F  S LINE=$O(^PXRM(800,1,1,SUB,1,LINE)) Q:'LINE  D
"RTN","PXRMRPCA",221,0)
 ..S TXT=$G(^PXRM(800,1,1,SUB,1,LINE,0)) Q:TXT=""
"RTN","PXRMRPCA",222,0)
 ..S CNT=CNT+1,ORY(CNT)=2_U_UNIQ_U_TXT
"RTN","PXRMRPCA",223,0)
 Q
"RTN","PXRMRPCB")
0^100^B8604836
"RTN","PXRMRPCB",1,0)
PXRMRPCB ; SLC/PJH - Functions returning REMINDER data ;01/03/2000
"RTN","PXRMRPCB",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMRPCB",3,0)
 Q
"RTN","PXRMRPCB",4,0)
 ;
"RTN","PXRMRPCB",5,0)
EDL(ORY,OREM) ;return list of education topics for a reminder
"RTN","PXRMRPCB",6,0)
 ; ien^name^print name
"RTN","PXRMRPCB",7,0)
 ;
"RTN","PXRMRPCB",8,0)
 N DATA,EDIEN,EDNAME,EDPNAM,FIND,ELIST,OCNT,SUB
"RTN","PXRMRPCB",9,0)
 S SUB=0,OCNT=0
"RTN","PXRMRPCB",10,0)
 F  S SUB=$O(^PXD(811.9,OREM,20,SUB)) Q:'SUB  D
"RTN","PXRMRPCB",11,0)
 .S FIND=$P($G(^PXD(811.9,OREM,20,SUB,0)),U)
"RTN","PXRMRPCB",12,0)
 .I $P(FIND,";",2)="AUTTEDT(" D EDTP(FIND) Q
"RTN","PXRMRPCB",13,0)
 .I $P(FIND,";",2)="PXRMD(811.5," D EDTERM($P(FIND,";")) Q
"RTN","PXRMRPCB",14,0)
 Q
"RTN","PXRMRPCB",15,0)
 ;
"RTN","PXRMRPCB",16,0)
EDTERM(TERM) ;Get any education topics on the reminder term
"RTN","PXRMRPCB",17,0)
 N TSUB,TFIND
"RTN","PXRMRPCB",18,0)
 S TSUB=0
"RTN","PXRMRPCB",19,0)
 F  S TSUB=$O(^PXRMD(811.5,TERM,20,TSUB)) Q:'TSUB  D
"RTN","PXRMRPCB",20,0)
 .S TFIND=$P($G(^PXRMD(811.5,TERM,20,TSUB,0)),U) Q:TFIND=""
"RTN","PXRMRPCB",21,0)
 .I $P(TFIND,U)["AUTTEDT(" D EDTP(TFIND)
"RTN","PXRMRPCB",22,0)
 Q
"RTN","PXRMRPCB",23,0)
 ;
"RTN","PXRMRPCB",24,0)
EDTP(FIND) ;Get education topic name
"RTN","PXRMRPCB",25,0)
 S EDIEN=$P(FIND,";") Q:'EDIEN  Q:$D(ELIST(EDIEN))  S ELIST(EDIEN)=""
"RTN","PXRMRPCB",26,0)
 S DATA=$G(^AUTTEDT(EDIEN,0)) Q:DATA=""
"RTN","PXRMRPCB",27,0)
 S EDPNAM=$P(DATA,U,4),EDNAME=$P(DATA,U)
"RTN","PXRMRPCB",28,0)
 S OCNT=OCNT+1,ORY(OCNT)=EDIEN_U_EDNAME_U_EDPNAM
"RTN","PXRMRPCB",29,0)
 Q 
"RTN","PXRMRPCB",30,0)
 ;
"RTN","PXRMRPCB",31,0)
EDU(ORY,OREDU) ;return education details in WP format
"RTN","PXRMRPCB",32,0)
 ; display text only
"RTN","PXRMRPCB",33,0)
 ;
"RTN","PXRMRPCB",34,0)
 N DIC,DR,DA,DIQ
"RTN","PXRMRPCB",35,0)
 K ^UTILITY("DIQ1",$J)
"RTN","PXRMRPCB",36,0)
 S DR=".01;.04;11;12"
"RTN","PXRMRPCB",37,0)
 S DIC=9999999.09
"RTN","PXRMRPCB",38,0)
 S DA=OREDU
"RTN","PXRMRPCB",39,0)
 S DIQ(0)="EN"
"RTN","PXRMRPCB",40,0)
 D EN^DIQ1
"RTN","PXRMRPCB",41,0)
 ;
"RTN","PXRMRPCB",42,0)
 ; Construct output array
"RTN","PXRMRPCB",43,0)
 N OCNT,SUB,SUB1,LIT,IC,LITS
"RTN","PXRMRPCB",44,0)
 S DIC=9999999.09,OCNT=0
"RTN","PXRMRPCB",45,0)
 S LITS="NAME : ;PRINT NAME : ;EDUCATIONAL OUTCOME : ;"
"RTN","PXRMRPCB",46,0)
 S LITS=LITS_"EDUCATIONAL STANDARDS : "
"RTN","PXRMRPCB",47,0)
 F IC=1:1 S SUB=$P(DR,";",IC),LIT=$P(LITS,";",IC) Q:SUB=""  D
"RTN","PXRMRPCB",48,0)
 .S SUB1="",OCNT=OCNT+1,ORY(OCNT)=" "
"RTN","PXRMRPCB",49,0)
 .I IC>2 S ORY(OCNT+1)=LIT,LIT="",OCNT=OCNT+2,ORY(OCNT)=" "
"RTN","PXRMRPCB",50,0)
 .F  S SUB1=$O(^UTILITY("DIQ1",$J,DIC,OREDU,SUB,SUB1)) Q:SUB1=""  D
"RTN","PXRMRPCB",51,0)
 ..S OCNT=OCNT+1
"RTN","PXRMRPCB",52,0)
 ..S ORY(OCNT)=LIT_$G(^UTILITY("DIQ1",$J,DIC,OREDU,SUB,SUB1))
"RTN","PXRMRPCB",53,0)
 ..S LIT=""
"RTN","PXRMRPCB",54,0)
 K ^UTILITY("DIQ1",$J)
"RTN","PXRMRPCB",55,0)
 Q
"RTN","PXRMRPCB",56,0)
 ;
"RTN","PXRMRPCB",57,0)
EDS(ORY,OREDU) ;return education subtopics
"RTN","PXRMRPCB",58,0)
 ; ien^name^sub-topic sequence number
"RTN","PXRMRPCB",59,0)
 ;
"RTN","PXRMRPCB",60,0)
 N DIC,DR,DA,DATA,DIQ,NODE,NULL,OCNT,REF,SUB,TEMP
"RTN","PXRMRPCB",61,0)
 N EDIEN,EDNAME,EDSEQ,EDPNAM
"RTN","PXRMRPCB",62,0)
 S NULL=1,OCNT=0
"RTN","PXRMRPCB",63,0)
 K ^UTILITY("DIQ1",$J)
"RTN","PXRMRPCB",64,0)
 F NODE=1:1 D  Q:EDIEN=""
"RTN","PXRMRPCB",65,0)
 .S REF=9999999.091001
"RTN","PXRMRPCB",66,0)
 .S DR=10
"RTN","PXRMRPCB",67,0)
 .S DA(REF)=NODE
"RTN","PXRMRPCB",68,0)
 .S DR(REF)=".01;3"
"RTN","PXRMRPCB",69,0)
 .S DIC=9999999.09
"RTN","PXRMRPCB",70,0)
 .S DA=OREDU
"RTN","PXRMRPCB",71,0)
 .S DIQ(0)="EIN"
"RTN","PXRMRPCB",72,0)
 .D EN^DIQ1
"RTN","PXRMRPCB",73,0)
 .S EDIEN=$G(^UTILITY("DIQ1",$J,REF,NODE,.01,"I"))
"RTN","PXRMRPCB",74,0)
 .I EDIEN="" K ^UTILITY("DIQ1",$J) Q
"RTN","PXRMRPCB",75,0)
 .S EDNAME=$G(^UTILITY("DIQ1",$J,REF,NODE,.01,"E"))
"RTN","PXRMRPCB",76,0)
 .S EDSEQ=$G(^UTILITY("DIQ1",$J,REF,NODE,3,"E")) S:EDSEQ="" EDSEQ=" "
"RTN","PXRMRPCB",77,0)
 .S EDPNAM=$P($G(^AUTTEDT(EDIEN,0)),U,4)
"RTN","PXRMRPCB",78,0)
 .S TEMP(EDSEQ,EDIEN)=EDIEN_U_EDNAME_U_EDPNAM_U_EDSEQ
"RTN","PXRMRPCB",79,0)
 .K ^UTILITY("DIQ1",$J)
"RTN","PXRMRPCB",80,0)
 ;Output array in sequence order
"RTN","PXRMRPCB",81,0)
 S EDSEQ=""
"RTN","PXRMRPCB",82,0)
 F  S EDSEQ=$O(TEMP(EDSEQ)) Q:EDSEQ=""  D
"RTN","PXRMRPCB",83,0)
 .S EDIEN=""
"RTN","PXRMRPCB",84,0)
 .F  S EDIEN=$O(TEMP(EDSEQ,EDIEN)) Q:EDIEN=""  D
"RTN","PXRMRPCB",85,0)
 ..S OCNT=OCNT+1,ORY(OCNT)=TEMP(EDSEQ,EDIEN)
"RTN","PXRMRPCB",86,0)
 Q
"RTN","PXRMRPCC")
0^101^B7686945
"RTN","PXRMRPCC",1,0)
PXRMRPCC ;SLC/PJH - PXRM REMINDER DIALOG ;04/11/2000
"RTN","PXRMRPCC",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMRPCC",3,0)
 ;
"RTN","PXRMRPCC",4,0)
ACTIVE(ORY,ORREM) ;Check if active dialog exist for reminders
"RTN","PXRMRPCC",5,0)
 ;
"RTN","PXRMRPCC",6,0)
 ; input parameter ORREM is array of reminder ien [.01#811.9]
"RTN","PXRMRPCC",7,0)
 N DDIS,DIEN,OCNT,RIEN,RSTA
"RTN","PXRMRPCC",8,0)
 S OCNT=0,RIEN=0
"RTN","PXRMRPCC",9,0)
 ;Get reminder ien from array
"RTN","PXRMRPCC",10,0)
 F  S RIEN=$O(ORREM(RIEN)) Q:'RIEN  D
"RTN","PXRMRPCC",11,0)
 .;Dialog ien for reminder
"RTN","PXRMRPCC",12,0)
 .S DIEN=$P($G(^PXD(811.9,RIEN,51)),U),RSTA=0
"RTN","PXRMRPCC",13,0)
 .;Dialog status
"RTN","PXRMRPCC",14,0)
 .I DIEN S DDIS=$P($G(^PXRMD(801.41,DIEN,0)),U,3)
"RTN","PXRMRPCC",15,0)
 .;If dialog and dialog not disabled
"RTN","PXRMRPCC",16,0)
 .I DIEN,DDIS="" S RSTA=1
"RTN","PXRMRPCC",17,0)
 .;Return reminder and if active dialog exists
"RTN","PXRMRPCC",18,0)
 .S OCNT=OCNT+1,ORY(OCNT)=RIEN_U_RSTA
"RTN","PXRMRPCC",19,0)
 Q
"RTN","PXRMRPCC",20,0)
 ;
"RTN","PXRMRPCC",21,0)
 ;
"RTN","PXRMRPCC",22,0)
DIALOG(ORY,ORREM) ;Load reminder dialog associated with the reminder
"RTN","PXRMRPCC",23,0)
 ;
"RTN","PXRMRPCC",24,0)
 ; input parameter ORREM - reminder ien [.01,#811.9]
"RTN","PXRMRPCC",25,0)
 ;
"RTN","PXRMRPCC",26,0)
 N DATA,DIEN
"RTN","PXRMRPCC",27,0)
 S DIEN=$G(^PXD(811.9,ORREM,51))
"RTN","PXRMRPCC",28,0)
 ;
"RTN","PXRMRPCC",29,0)
 ;Quit if no dialog for this reminder
"RTN","PXRMRPCC",30,0)
 I 'DIEN S ORY(1)="-1^no dialog for this reminder" Q
"RTN","PXRMRPCC",31,0)
 ;
"RTN","PXRMRPCC",32,0)
 ;Check if a reminder dialog and enabled
"RTN","PXRMRPCC",33,0)
 S DATA=$G(^PXRMD(801.41,DIEN,0))
"RTN","PXRMRPCC",34,0)
 ;
"RTN","PXRMRPCC",35,0)
 I $P(DATA,U,4)'="R" S ORY(1)="-1^reminder dialog invalid" Q
"RTN","PXRMRPCC",36,0)
 ;
"RTN","PXRMRPCC",37,0)
 I $P(DATA,U,3) S ORY(1)="-1^reminder dialog disabled" Q
"RTN","PXRMRPCC",38,0)
 ;
"RTN","PXRMRPCC",39,0)
 ;Load dialog lines into local array
"RTN","PXRMRPCC",40,0)
 D LOAD^PXRMDLL(DIEN)
"RTN","PXRMRPCC",41,0)
 Q
"RTN","PXRMRPCC",42,0)
 ;
"RTN","PXRMRPCC",43,0)
HDR(ORY,ORLOC) ;Progress Note Header by location/service/user
"RTN","PXRMRPCC",44,0)
 N ORSRV,PASS
"RTN","PXRMRPCC",45,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","PXRMRPCC",46,0)
 S PASS=DUZ_";VA(200,"
"RTN","PXRMRPCC",47,0)
 I +$G(ORLOC) S PASS=PASS_"^LOC.`"_ORLOC
"RTN","PXRMRPCC",48,0)
 I ORSRV S PASS=PASS_"^SRV.`"_+$G(ORSRV)
"RTN","PXRMRPCC",49,0)
 S ORY=$$GET^XPAR(PASS_"^DIV^SYS^PKG","PXRM PROGRESS NOTE HEADERS",1,"Q")
"RTN","PXRMRPCC",50,0)
 Q
"RTN","PXRMRPCC",51,0)
 ;
"RTN","PXRMRPCC",52,0)
PROMPT(ORY,ORDLG,ORDCUR,ORFTYP) ;Load additional prompts for a dialog element
"RTN","PXRMRPCC",53,0)
 ;
"RTN","PXRMRPCC",54,0)
 ; input parameters
"RTN","PXRMRPCC",55,0)
 ;
"RTN","PXRMRPCC",56,0)
 ; ORDLG  - dialog element ien [.01,#801.41]
"RTN","PXRMRPCC",57,0)
 ; ORDCUR - 0 = current, 1 = Historical for taxonomies only
"RTN","PXRMRPCC",58,0)
 ; ORFTYP - finding type (CPT/POV) for taxonomies only
"RTN","PXRMRPCC",59,0)
 ;
"RTN","PXRMRPCC",60,0)
 ; These fields can be found in the output array of DIALOG^PXRMRPCC
"RTN","PXRMRPCC",61,0)
 ;
"RTN","PXRMRPCC",62,0)
 D LOAD^PXRMDLLA(ORDLG,ORDCUR,$G(ORFTYP))
"RTN","PXRMRPCC",63,0)
 Q 
"RTN","PXRMRPCC",64,0)
 ;
"RTN","PXRMRPCC",65,0)
RES(ORY,ORREM) ; Reminder Resources/Inquiry
"RTN","PXRMRPCC",66,0)
 ;
"RTN","PXRMRPCC",67,0)
 ; input parameter ORREM - reminder ien [.01,#811.9]
"RTN","PXRMRPCC",68,0)
 ;
"RTN","PXRMRPCC",69,0)
 D BUILD^PXRMRIN2(.ORY,ORREM)
"RTN","PXRMRPCC",70,0)
 Q
"RTN","PXRMRPCC",71,0)
 ;
"RTN","PXRMRPCC",72,0)
MH(ORY,OTEST) ; Mental Health dialog
"RTN","PXRMRPCC",73,0)
 ;
"RTN","PXRMRPCC",74,0)
 ; Input mental health instrument NAME
"RTN","PXRMRPCC",75,0)
 ;
"RTN","PXRMRPCC",76,0)
 N YS,ARRAY S YS("CODE")=OTEST D SHOWALL^YTAPI3(.ARRAY,.YS) ; DBIA 2895
"RTN","PXRMRPCC",77,0)
 ;
"RTN","PXRMRPCC",78,0)
 N FNODE,FSUB,IC,NODE,OCNT,SUB
"RTN","PXRMRPCC",79,0)
 S SUB="ARRAY",OCNT=0
"RTN","PXRMRPCC",80,0)
 F  S SUB=$Q(@SUB) Q:SUB=""  D
"RTN","PXRMRPCC",81,0)
 .S FSUB=$P($P(SUB,"(",2),")"),FNODE=""
"RTN","PXRMRPCC",82,0)
 .F IC=1:1 S NODE=$P(FSUB,",",IC) Q:NODE=""  D
"RTN","PXRMRPCC",83,0)
 ..I $E(NODE)="""" S NODE=$P(NODE,"""",2)
"RTN","PXRMRPCC",84,0)
 ..S $P(FNODE,";",IC)=NODE
"RTN","PXRMRPCC",85,0)
 .Q:FNODE=""
"RTN","PXRMRPCC",86,0)
 .S OCNT=OCNT+1,ORY(OCNT)=FNODE_U_@SUB
"RTN","PXRMRPCC",87,0)
 Q
"RTN","PXRMRPCC",88,0)
 ;
"RTN","PXRMRPCC",89,0)
MHR(ORY,RESULT,ORES) ; Mental Health score and P/N text
"RTN","PXRMRPCC",90,0)
 ;
"RTN","PXRMRPCC",91,0)
 ; Input MH result IEN and mental health instrument response
"RTN","PXRMRPCC",92,0)
 ;
"RTN","PXRMRPCC",93,0)
 D ^PXRMDLR
"RTN","PXRMRPCC",94,0)
 ;
"RTN","PXRMRPCC",95,0)
 Q
"RTN","PXRMRPCC",96,0)
 ;
"RTN","PXRMRPCC",97,0)
MHS(ORY,YS) ; Mental Health save response
"RTN","PXRMRPCC",98,0)
 ;
"RTN","PXRMRPCC",99,0)
 ; Input mental health instrument response
"RTN","PXRMRPCC",100,0)
 N ARRAY
"RTN","PXRMRPCC",101,0)
 D SAVEIT^YTAPI1(.ARRAY,.YS) ; DBIA 2893
"RTN","PXRMRPCC",102,0)
 I ARRAY(1)'="[DATA]" S ORY(1)="-1^"_ARRAY(1)_ARRAY(2)
"RTN","PXRMRPCC",103,0)
 I ARRAY(1)="[DATA]" S ORY(1)=ARRAY(1)_ARRAY(2)
"RTN","PXRMRPCC",104,0)
 Q
"RTN","PXRMRUTL")
0^102^B4605017
"RTN","PXRMRUTL",1,0)
PXRMRUTL ; SLC/PJH - Reminder utilities. ;01/24/2000
"RTN","PXRMRUTL",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMRUTL",3,0)
 ;
"RTN","PXRMRUTL",4,0)
 ;
"RTN","PXRMRUTL",5,0)
 ;Store file details used by findings in array form
"RTN","PXRMRUTL",6,0)
 ;-------------------------------------------------
"RTN","PXRMRUTL",7,0)
DEF(DEF,DEF1,DEF2) ;
"RTN","PXRMRUTL",8,0)
 N DATA,DESC,FILE,GSUB,LIST,SEQ,TYPE
"RTN","PXRMRUTL",9,0)
 ;Get variable pointer details from data dictionary
"RTN","PXRMRUTL",10,0)
 D BLDLIST^PXRMVPTR("811.902",".01",.LIST)
"RTN","PXRMRUTL",11,0)
 ;
"RTN","PXRMRUTL",12,0)
 S GSUB="",DEF=0
"RTN","PXRMRUTL",13,0)
 F  S GSUB=$O(LIST(GSUB)) Q:GSUB=""  D
"RTN","PXRMRUTL",14,0)
 .S DATA=$G(LIST(GSUB)) Q:DATA=""
"RTN","PXRMRUTL",15,0)
 .S FILE=$P(DATA,U),DESC=$P(DATA,U,2),SEQ=$P(DATA,U,3),TYPE=$P(DATA,U,4)
"RTN","PXRMRUTL",16,0)
 .Q:(FILE="")!(TYPE="")!(SEQ="")!(DESC="")
"RTN","PXRMRUTL",17,0)
 .;Save number of files (using sequence number)
"RTN","PXRMRUTL",18,0)
 .I SEQ>DEF S DEF=SEQ
"RTN","PXRMRUTL",19,0)
 .;Save file type and description in sequence (used in DIR prompt)
"RTN","PXRMRUTL",20,0)
 .S DEF(SEQ)=TYPE_":"_DESC
"RTN","PXRMRUTL",21,0)
 .;Build index to file type from global reference
"RTN","PXRMRUTL",22,0)
 .S DEF1(GSUB)=TYPE
"RTN","PXRMRUTL",23,0)
 .;Build Index to description from file type
"RTN","PXRMRUTL",24,0)
 .S DEF2(TYPE)=DESC
"RTN","PXRMRUTL",25,0)
 .;Build Index to file number from file type
"RTN","PXRMRUTL",26,0)
 .S DEF2(TYPE,1)=FILE
"RTN","PXRMRUTL",27,0)
 Q
"RTN","PXRMRUTL",28,0)
 ;
"RTN","PXRMRUTL",29,0)
DUMMY W !!,"This option is not yet available",!!,*7 H 1
"RTN","PXRMRUTL",30,0)
 Q
"RTN","PXRMRUTL",31,0)
 ;
"RTN","PXRMRUTL",32,0)
TEST(ARRAY,DIEN) ;Dialog test
"RTN","PXRMRUTL",33,0)
 D LOAD^PXRMDLL(DIEN) M ARRAY=ORY
"RTN","PXRMRUTL",34,0)
 ;
"RTN","PXRMRUTL",35,0)
 N DSEQ,DIEN,DCUR,DSUB,DTTYP,OCNT,SUB,ARRAYN
"RTN","PXRMRUTL",36,0)
 S OCNT=$O(ARRAY(""),-1)+1,ARRAY(OCNT)=$J("",79)
"RTN","PXRMRUTL",37,0)
 S OCNT=OCNT+1,ARRAY(OCNT)="Additional prompts"
"RTN","PXRMRUTL",38,0)
 S OCNT=OCNT+1,ARRAY(OCNT)=$J("",79)
"RTN","PXRMRUTL",39,0)
 S SUB=""
"RTN","PXRMRUTL",40,0)
 F  S SUB=$O(ORY(SUB)) Q:'SUB  D
"RTN","PXRMRUTL",41,0)
 .I $P(ORY(SUB),U)'=1 Q
"RTN","PXRMRUTL",42,0)
 .S DIEN=$P(ORY(SUB),U,2),DSEQ=$P(ORY(SUB),U,3)
"RTN","PXRMRUTL",43,0)
 .S DTTYP=$P(ORY(SUB),U,7),DCUR=$P(ORY(SUB),U,8)
"RTN","PXRMRUTL",44,0)
 .;Ignore group headers
"RTN","PXRMRUTL",45,0)
 .Q:DCUR="D"
"RTN","PXRMRUTL",46,0)
 .K ARRAYN D TEST^PXRMDLLA(.ARRAYN,DIEN,DCUR,DTTYP)
"RTN","PXRMRUTL",47,0)
 .S DSUB=""
"RTN","PXRMRUTL",48,0)
 .F  S DSUB=$O(ARRAYN(DSUB)) Q:'DSUB  D
"RTN","PXRMRUTL",49,0)
 ..S OCNT=OCNT+1,ARRAY(OCNT)=ARRAYN(DSUB)
"RTN","PXRMRUTL",50,0)
 .S OCNT=OCNT+1,ARRAY(OCNT)=$J("",79)
"RTN","PXRMRUTL",51,0)
 Q
"RTN","PXRMSAPG")
0^103^B979716
"RTN","PXRMSAPG",1,0)
PXRMSAPG ; SLC/PKR - Set Clinical Reminders application group. ;05/17/2000
"RTN","PXRMSAPG",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMSAPG",3,0)
 ;===============================================================
"RTN","PXRMSAPG",4,0)
SAPP ;
"RTN","PXRMSAPG",5,0)
 D BMES^XPDUTL("Add ""PXRS"" Application Group to file 80, 80.1, 81")
"RTN","PXRMSAPG",6,0)
 D MES^XPDUTL("This is done only if it is not already there.")
"RTN","PXRMSAPG",7,0)
 N DA,DD,DIC,DO,FN
"RTN","PXRMSAPG",8,0)
 F FN=80,80.1,81 I '$D(^DIC(FN,"%","B","PXRS")) D
"RTN","PXRMSAPG",9,0)
 . S DIC="^DIC("_FN_",""%"","
"RTN","PXRMSAPG",10,0)
 . S DIC(0)="L"
"RTN","PXRMSAPG",11,0)
 . S DA(1)=FN
"RTN","PXRMSAPG",12,0)
 . S X="PXRS"
"RTN","PXRMSAPG",13,0)
 . S DIC("P")=$P(^DD(1,10,0),"^",2)
"RTN","PXRMSAPG",14,0)
 . D FILE^DICN
"RTN","PXRMSAPG",15,0)
 . K DA,DD,DIC,DO
"RTN","PXRMSAPG",16,0)
 . D:+Y>0 BMES^XPDUTL("Adding ""PXRS"" Application Group to ^DIC("_FN_",")
"RTN","PXRMSAPG",17,0)
 Q
"RTN","PXRMSAPG",18,0)
 ;
"RTN","PXRMSEDT")
0^104^B4700922
"RTN","PXRMSEDT",1,0)
PXRMSEDT ; SLC/PJH - Edit a reminder resolution status ;05/11/2000
"RTN","PXRMSEDT",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMSEDT",3,0)
 ;
"RTN","PXRMSEDT",4,0)
 ;Called from PXRMGEDT
"RTN","PXRMSEDT",5,0)
 ;
"RTN","PXRMSEDT",6,0)
 ;Edit/Delete resolution status
"RTN","PXRMSEDT",7,0)
 ;-----------------------------
"RTN","PXRMSEDT",8,0)
EDIT(ROOT,DA) ;
"RTN","PXRMSEDT",9,0)
 N DIC,DIE,DR,LIEN,TAX,NATIONAL,DIDEL
"RTN","PXRMSEDT",10,0)
 S DIE=ROOT,LIEN=DA
"RTN","PXRMSEDT",11,0)
 ;
"RTN","PXRMSEDT",12,0)
 ;Check if this is a restricted edit status (i.e. national status)
"RTN","PXRMSEDT",13,0)
 S NATIONAL=+$P($G(^PXRMD(801.9,DA,0)),U,6)
"RTN","PXRMSEDT",14,0)
 ;
"RTN","PXRMSEDT",15,0)
 ;If national status only allow entry of sub-status or inactive
"RTN","PXRMSEDT",16,0)
 I NATIONAL S DR="10;.04"
"RTN","PXRMSEDT",17,0)
 ; 
"RTN","PXRMSEDT",18,0)
 ;Otherwise do not allow entry of restricted edit or sub-status
"RTN","PXRMSEDT",19,0)
 I 'NATIONAL S DR=".01;1;.02;.03;.04;.05///"_DUZ S DIDEL=801.9
"RTN","PXRMSEDT",20,0)
 ;
"RTN","PXRMSEDT",21,0)
 D ^DIE Q:$D(Y)  I '$D(DA) S VALMBCK="Q" Q
"RTN","PXRMSEDT",22,0)
 ;
"RTN","PXRMSEDT",23,0)
 ;If a local status - warning if not allocated to a national status
"RTN","PXRMSEDT",24,0)
 Q:NATIONAL  Q:$D(^PXRMD(801.9,"AC",DA))
"RTN","PXRMSEDT",25,0)
 ;Select National code
"RTN","PXRMSEDT",26,0)
 W !!,"This resolution status must be linked to a national status",!
"RTN","PXRMSEDT",27,0)
 N DA,DIC
"RTN","PXRMSEDT",28,0)
 S DIC="^PXRMD(801.9,"
"RTN","PXRMSEDT",29,0)
 S DIC(0)="AEMQ"
"RTN","PXRMSEDT",30,0)
 S DIC("S")="I $P(^(0),U,6)=1"
"RTN","PXRMSEDT",31,0)
 S DIC("A")="SELECT NATIONAL RESOLUTION STATUS: "
"RTN","PXRMSEDT",32,0)
 ;Get the next name.
"RTN","PXRMSEDT",33,0)
 D ^DIC
"RTN","PXRMSEDT",34,0)
 S:Y=-1 DUOUT=1 Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMSEDT",35,0)
 ;Update sub-status field in national status
"RTN","PXRMSEDT",36,0)
 N FDA,FDAIEN,MSG
"RTN","PXRMSEDT",37,0)
 S FDA(801.9001,"+2,"_+Y_",",.01)=LIEN
"RTN","PXRMSEDT",38,0)
 D UPDATE^DIE("S","FDA","FDAIEN","MSG")
"RTN","PXRMSEDT",39,0)
 I $D(MSG) D ERR
"RTN","PXRMSEDT",40,0)
 Q
"RTN","PXRMSEDT",41,0)
 ;
"RTN","PXRMSEDT",42,0)
 ;Error Messages from UPDATE^DIE
"RTN","PXRMSEDT",43,0)
 ;------------------------------
"RTN","PXRMSEDT",44,0)
ERR N IC,ERROR,REF
"RTN","PXRMSEDT",45,0)
 ;Move MSG into ERROR
"RTN","PXRMSEDT",46,0)
 S REF="MSG",ERROR(1)="Error in UPDATE^DIE, needs further investigation"
"RTN","PXRMSEDT",47,0)
 F IC=2:1 S REF=$Q(@REF) Q:REF=""  S ERROR(IC)=REF_"="_@REF
"RTN","PXRMSEDT",48,0)
 ;Screen message
"RTN","PXRMSEDT",49,0)
 D BMES^XPDUTL(.ERROR)
"RTN","PXRMSEDT",50,0)
 Q
"RTN","PXRMSEDT",51,0)
 ;
"RTN","PXRMSEDT",52,0)
KILLAC ;This only applies if deleting a sub-status
"RTN","PXRMSEDT",53,0)
 I '$D(^PXRMD(801.9,DA)) Q
"RTN","PXRMSEDT",54,0)
 ;
"RTN","PXRMSEDT",55,0)
 N SUB,NAT
"RTN","PXRMSEDT",56,0)
 ;Get the national status for this sub status, quit if none
"RTN","PXRMSEDT",57,0)
 S NAT=""
"RTN","PXRMSEDT",58,0)
 F  S NAT=$O(^PXRMD(801.9,"AC",DA,NAT)) Q:NAT=""  D
"RTN","PXRMSEDT",59,0)
 .;Get sub status position in the national code, quit if none
"RTN","PXRMSEDT",60,0)
 .S SUB=$O(^PXRMD(801.9,"AC",DA,NAT,"")) Q:SUB=""
"RTN","PXRMSEDT",61,0)
 .;Kill the sub-status on the national code
"RTN","PXRMSEDT",62,0)
 .N DIC,DIK,DA S DIK="^PXRMD(801.9,NAT,10,",DA(1)=NAT,DA=SUB D ^DIK
"RTN","PXRMSEDT",63,0)
 Q
"RTN","PXRMSEL")
0^105^B75482842
"RTN","PXRMSEL",1,0)
PXRMSEL ; SLC/PJH - PXRM Selection ;04/26/2000
"RTN","PXRMSEL",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMSEL",3,0)
 ;
"RTN","PXRMSEL",4,0)
 ;Selection screen for all dialog files
"RTN","PXRMSEL",5,0)
 ;
"RTN","PXRMSEL",6,0)
START(HEADER,PXRMGTYP,PXRMNAM) ;
"RTN","PXRMSEL",7,0)
 N PXRMREAD,PXRMSHD,PXRMSRC,PXRMVARM
"RTN","PXRMSEL",8,0)
 N VALM,VALMAR,VALMBCK,VALMBG,VALMCNT,VALMHDR,VALMSG,X,XMZ
"RTN","PXRMSEL",9,0)
 S X="IORESET"
"RTN","PXRMSEL",10,0)
 D ENDR^%ZISS,EN^VALM("PXRM SELECTION")
"RTN","PXRMSEL",11,0)
 W IORESET
"RTN","PXRMSEL",12,0)
 D KILL^%ZISS
"RTN","PXRMSEL",13,0)
 Q
"RTN","PXRMSEL",14,0)
 ;
"RTN","PXRMSEL",15,0)
 ;Labels called from list 'PXRM SELECTION'
"RTN","PXRMSEL",16,0)
 ;
"RTN","PXRMSEL",17,0)
 ;Add new entry
"RTN","PXRMSEL",18,0)
ADD ;
"RTN","PXRMSEL",19,0)
 N ANS,ARRAY,ARRAYN,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMSEL",20,0)
 ;Health factor resolutions
"RTN","PXRMSEL",21,0)
 I PXRMGTYP="SHFR" D  Q:$D(DTOUT)!$D(DUOUT)  Q:ANS="A"
"RTN","PXRMSEL",22,0)
 .D ^PXRMSEL2 S:$D(DUOUT) VALMBCK="R"
"RTN","PXRMSEL",23,0)
 ;Add entry
"RTN","PXRMSEL",24,0)
 D ADD^PXRMGEDT(PXRMGTYP),INIT
"RTN","PXRMSEL",25,0)
 Q
"RTN","PXRMSEL",26,0)
 ;
"RTN","PXRMSEL",27,0)
 ;Copy any dialog
"RTN","PXRMSEL",28,0)
COPY D ANY^PXRMDCPY
"RTN","PXRMSEL",29,0)
 D:PXRMGTYP="DLGE" INIT
"RTN","PXRMSEL",30,0)
 Q
"RTN","PXRMSEL",31,0)
 ;
"RTN","PXRMSEL",32,0)
 ;Copy selected reminder dialog
"RTN","PXRMSEL",33,0)
COPYS N DIC,DUOUT,DTOUT,DIROUT,DIRUT,X,Y
"RTN","PXRMSEL",34,0)
 D SEL^PXRMDCPY(PXRMDIEN,"")
"RTN","PXRMSEL",35,0)
 Q
"RTN","PXRMSEL",36,0)
 ;
"RTN","PXRMSEL",37,0)
 ;Change dialog view
"RTN","PXRMSEL",38,0)
CHNG K PXRMBG D SEL^PXRMSEL2(.PXRMDTYP),INIT
"RTN","PXRMSEL",39,0)
 Q
"RTN","PXRMSEL",40,0)
 ;
"RTN","PXRMSEL",41,0)
 ;Change reminder view
"RTN","PXRMSEL",42,0)
CHNGR(VIEW) ;
"RTN","PXRMSEL",43,0)
 S $E(PXRMVIEW)=VIEW K PXRMBG
"RTN","PXRMSEL",44,0)
 D INIT
"RTN","PXRMSEL",45,0)
 Q
"RTN","PXRMSEL",46,0)
 ;
"RTN","PXRMSEL",47,0)
 ;Toggle view name/print name 
"RTN","PXRMSEL",48,0)
CHNGV N VIEW
"RTN","PXRMSEL",49,0)
 S VIEW=$E(PXRMVIEW,2)
"RTN","PXRMSEL",50,0)
 I VIEW="P" S $E(PXRMVIEW,2)="N"
"RTN","PXRMSEL",51,0)
 I VIEW="N" S $E(PXRMVIEW,2)="P"
"RTN","PXRMSEL",52,0)
 D INIT
"RTN","PXRMSEL",53,0)
 Q
"RTN","PXRMSEL",54,0)
 ;
"RTN","PXRMSEL",55,0)
 ;Change between dialog view and reminder view
"RTN","PXRMSEL",56,0)
DIDL(VIEW) ;
"RTN","PXRMSEL",57,0)
 K PXRMBG S PXRMGTYP=VIEW
"RTN","PXRMSEL",58,0)
 D INIT
"RTN","PXRMSEL",59,0)
 Q
"RTN","PXRMSEL",60,0)
 ;
"RTN","PXRMSEL",61,0)
EXIT ;Exit code
"RTN","PXRMSEL",62,0)
 D CLEAN^VALM10,FULL^VALM1
"RTN","PXRMSEL",63,0)
 S VALMBCK="Q"
"RTN","PXRMSEL",64,0)
 K ^TMP("PXRMSEL",$J)
"RTN","PXRMSEL",65,0)
 Q
"RTN","PXRMSEL",66,0)
 ;
"RTN","PXRMSEL",67,0)
HDR ; Header code
"RTN","PXRMSEL",68,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMSEL",69,0)
 ;Non-Dialog options
"RTN","PXRMSEL",70,0)
 I PXRMGTYP'["DLG" S VALMHDR(1)=HEADER Q
"RTN","PXRMSEL",71,0)
 ;Dialog Options
"RTN","PXRMSEL",72,0)
 S VALM("TITLE")=PXRMHD,VALMHDR(1)=PXRMSHD
"RTN","PXRMSEL",73,0)
 Q
"RTN","PXRMSEL",74,0)
 ;
"RTN","PXRMSEL",75,0)
HELP ;Help code
"RTN","PXRMSEL",76,0)
 N ORU,ORUPRMT,XQORM,PXRMTAG S PXRMTAG=PXRMGTYP
"RTN","PXRMSEL",77,0)
 D EN^VALM("PXRM DIALOG MAIN HELP")
"RTN","PXRMSEL",78,0)
 S VALMBCK="R"
"RTN","PXRMSEL",79,0)
 Q
"RTN","PXRMSEL",80,0)
 ;
"RTN","PXRMSEL",81,0)
INIT ;Init
"RTN","PXRMSEL",82,0)
 D CLEAN^VALM10
"RTN","PXRMSEL",83,0)
 S VALMCNT=0
"RTN","PXRMSEL",84,0)
 D BUILD
"RTN","PXRMSEL",85,0)
 D XQORM
"RTN","PXRMSEL",86,0)
 ;
"RTN","PXRMSEL",87,0)
 ;Set header and title for dialog options
"RTN","PXRMSEL",88,0)
 I PXRMGTYP["DLG" D
"RTN","PXRMSEL",89,0)
 .S PXRMHD="Dialog List",PXRMSHD="DIALOG VIEW ("
"RTN","PXRMSEL",90,0)
 .I PXRMGTYP="DLGE" D
"RTN","PXRMSEL",91,0)
 ..I PXRMDTYP="E" S PXRMSHD=PXRMSHD_"DIALOG ELEMENTS)"
"RTN","PXRMSEL",92,0)
 ..I PXRMDTYP="F" S PXRMSHD=PXRMSHD_"FORCED VALUES)"
"RTN","PXRMSEL",93,0)
 ..I PXRMDTYP="G" S PXRMSHD=PXRMSHD_"DIALOG GROUPS)"
"RTN","PXRMSEL",94,0)
 ..I PXRMDTYP="P" S PXRMSHD=PXRMSHD_"ADDITIONAL PROMPTS)"
"RTN","PXRMSEL",95,0)
 ..I PXRMDTYP="S" S PXRMSHD=PXRMSHD_"RESULT GROUPS)"
"RTN","PXRMSEL",96,0)
 ..I PXRMDTYP="T" S PXRMSHD=PXRMSHD_"RESULT ELEMENT)"
"RTN","PXRMSEL",97,0)
 .I PXRMGTYP="DLG" D
"RTN","PXRMSEL",98,0)
 ..S PXRMSHD=PXRMSHD_"REMINDER DIALOGS - "
"RTN","PXRMSEL",99,0)
 ..I $E(PXRMVIEW,2)="N" S PXRMSHD=PXRMSHD_"SOURCE REMINDER NAME)"
"RTN","PXRMSEL",100,0)
 ..I $E(PXRMVIEW,2)="P" S PXRMSHD=PXRMSHD_"SOURCE REMINDER PRINT NAME)"
"RTN","PXRMSEL",101,0)
 .I PXRMGTYP="DLGR" D
"RTN","PXRMSEL",102,0)
 ..S PXRMSHD="REMINDER VIEW ("
"RTN","PXRMSEL",103,0)
 ..I PXRMVIEW="AN" S PXRMSHD=PXRMSHD_"ALL REMINDERS BY NAME)"
"RTN","PXRMSEL",104,0)
 ..I PXRMVIEW="AP" S PXRMSHD=PXRMSHD_"ALL REMINDERS BY PRINT NAME)"
"RTN","PXRMSEL",105,0)
 ..I PXRMVIEW="LN" S PXRMSHD=PXRMSHD_"LINKED REMINDERS BY NAME)"
"RTN","PXRMSEL",106,0)
 ..I PXRMVIEW="LP" S PXRMSHD=PXRMSHD_"LINKED REMINDERS BY PRINT NAME)"
"RTN","PXRMSEL",107,0)
 ..;Restore original place
"RTN","PXRMSEL",108,0)
 ..S:$G(PXRMBG) VALMBG=PXRMBG
"RTN","PXRMSEL",109,0)
 .S VALMHDR(1)=PXRMSHD,VALM("TITLE")=PXRMHD
"RTN","PXRMSEL",110,0)
 ;
"RTN","PXRMSEL",111,0)
 S VALMBCK="R"
"RTN","PXRMSEL",112,0)
 Q
"RTN","PXRMSEL",113,0)
 ;
"RTN","PXRMSEL",114,0)
 ;
"RTN","PXRMSEL",115,0)
BUILD ;Build selection list
"RTN","PXRMSEL",116,0)
 ;
"RTN","PXRMSEL",117,0)
 D ^PXRMSEL1
"RTN","PXRMSEL",118,0)
 Q
"RTN","PXRMSEL",119,0)
 ;
"RTN","PXRMSEL",120,0)
LIST ;List All option
"RTN","PXRMSEL",121,0)
 W IORESET
"RTN","PXRMSEL",122,0)
 I PXRMGTYP["DLG" D ALL^PXRMDLST
"RTN","PXRMSEL",123,0)
 I PXRMGTYP="DTAX" D ALL^PXRMTDLG
"RTN","PXRMSEL",124,0)
 I PXRMGTYP="FIP" D ALL^PXRMFIP
"RTN","PXRMSEL",125,0)
 I PXRMGTYP="FPAR" D ALL^PXRMFLST
"RTN","PXRMSEL",126,0)
 I PXRMGTYP="RCAT" D ALL^PXRMCLST
"RTN","PXRMSEL",127,0)
 I PXRMGTYP="RESN" D ALL^PXRMSLST
"RTN","PXRMSEL",128,0)
 I PXRMGTYP="SHFR" D ALL^PXRMSHF
"RTN","PXRMSEL",129,0)
 ;
"RTN","PXRMSEL",130,0)
 N DIR S DIR(0)="E" D ^DIR
"RTN","PXRMSEL",131,0)
 ; 
"RTN","PXRMSEL",132,0)
 D XQORM
"RTN","PXRMSEL",133,0)
 S VALMBCK="R"
"RTN","PXRMSEL",134,0)
 Q
"RTN","PXRMSEL",135,0)
 ;
"RTN","PXRMSEL",136,0)
PEXIT ;PXRM SELECTION MENU protocol exit code
"RTN","PXRMSEL",137,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMSEL",138,0)
 ;Reset after page up/down etc
"RTN","PXRMSEL",139,0)
 D XQORM
"RTN","PXRMSEL",140,0)
 Q
"RTN","PXRMSEL",141,0)
 ;
"RTN","PXRMSEL",142,0)
SEL ;PXRM SELECT ITEM validation
"RTN","PXRMSEL",143,0)
 N ERR,IEN,SEL
"RTN","PXRMSEL",144,0)
 S VALMBCK="",SEL=+$P(XQORNOD(0),"=",2)
"RTN","PXRMSEL",145,0)
 ;Invalid selection
"RTN","PXRMSEL",146,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("IDX",SEL))) D  Q
"RTN","PXRMSEL",147,0)
 .W $C(7),!,SEL_" is not a valid item number." H 2
"RTN","PXRMSEL",148,0)
 .S VALMBCK="R"
"RTN","PXRMSEL",149,0)
 ;Valid selection
"RTN","PXRMSEL",150,0)
 S IEN=$O(@VALMAR@("IDX",SEL,"")) Q:'IEN
"RTN","PXRMSEL",151,0)
 S VALMBCK="Q",@PXRMNAM=IEN
"RTN","PXRMSEL",152,0)
 ;Save place - reminder link only
"RTN","PXRMSEL",153,0)
 I PXRMGTYP="DLGR" S PXRMBG=VALMBG
"RTN","PXRMSEL",154,0)
 Q
"RTN","PXRMSEL",155,0)
 ;
"RTN","PXRMSEL",156,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM SELECTION ITEM",0))_U_"1:"_VALMCNT
"RTN","PXRMSEL",157,0)
 S XQORM("A")="Select Item: "
"RTN","PXRMSEL",158,0)
 ;For finding type parameters dissallow add option
"RTN","PXRMSEL",159,0)
 I ((PXRMGTYP="FPAR")&(+$G(PXRMINST)=0))!(PXRMGTYP="DTAX") D
"RTN","PXRMSEL",160,0)
 .N FMENU
"RTN","PXRMSEL",161,0)
 .S FMENU=$O(^ORD(101,"B","PXRM FINDING SELECTION MENU",0))_";ORD(101,"
"RTN","PXRMSEL",162,0)
 .I FMENU S XQORM("HIJACK")=FMENU
"RTN","PXRMSEL",163,0)
 ;For dialog edit allow extra options
"RTN","PXRMSEL",164,0)
 I PXRMGTYP="DLGE" D
"RTN","PXRMSEL",165,0)
 .N FMENU
"RTN","PXRMSEL",166,0)
 .S FMENU=$O(^ORD(101,"B","PXRM DIALOG SELECTION MENU (DLGE)",0))_";ORD(101,"
"RTN","PXRMSEL",167,0)
 .I FMENU S XQORM("HIJACK")=FMENU
"RTN","PXRMSEL",168,0)
 ;For reminder dialog edit allow change view
"RTN","PXRMSEL",169,0)
 I PXRMGTYP="DLG" D
"RTN","PXRMSEL",170,0)
 .N FMENU
"RTN","PXRMSEL",171,0)
 .S FMENU=$O(^ORD(101,"B","PXRM DIALOG SELECTION MENU (DLG)",0))_";ORD(101,"
"RTN","PXRMSEL",172,0)
 .I FMENU S XQORM("HIJACK")=FMENU
"RTN","PXRMSEL",173,0)
 ;Reminder to dialog link
"RTN","PXRMSEL",174,0)
 I PXRMGTYP="DLGR" D
"RTN","PXRMSEL",175,0)
 .N FMENU
"RTN","PXRMSEL",176,0)
 .S FMENU=$O(^ORD(101,"B","PXRM DIALOG/REMINDER MENU",0))_";ORD(101,"
"RTN","PXRMSEL",177,0)
 .I FMENU S XQORM("HIJACK")=FMENU
"RTN","PXRMSEL",178,0)
 Q
"RTN","PXRMSEL",179,0)
 ;
"RTN","PXRMSEL",180,0)
 ;Select single HF or all HF's for the reminder
"RTN","PXRMSEL",181,0)
 ;---------------------------------------------
"RTN","PXRMSEL",182,0)
ZOPT(TYPE) ;
"RTN","PXRMSEL",183,0)
 N X,Y
"RTN","PXRMSEL",184,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMSEL",185,0)
 S DIR(0)="S"_U_"I:Individual Health Factor;"
"RTN","PXRMSEL",186,0)
 S DIR(0)=DIR(0)_"A:All Health Factors for a Selected Reminder;"
"RTN","PXRMSEL",187,0)
 S DIR("A")="SELECTION OPTION"
"RTN","PXRMSEL",188,0)
 S DIR("B")="I"
"RTN","PXRMSEL",189,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMSEL",190,0)
 S DIR("??")=U_"D ZHELP^PXRMSEL(1)"
"RTN","PXRMSEL",191,0)
 D ^DIR K DIR
"RTN","PXRMSEL",192,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMSEL",193,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMSEL",194,0)
 S TYPE=Y
"RTN","PXRMSEL",195,0)
 Q
"RTN","PXRMSEL",196,0)
 ;
"RTN","PXRMSEL",197,0)
 ;Reminder selection
"RTN","PXRMSEL",198,0)
 ;------------------
"RTN","PXRMSEL",199,0)
ZREM(ARRAY) ;
"RTN","PXRMSEL",200,0)
 N X,Y,CNT,FSUB,FHF,FIND,FNAM,FOUND,REM
"RTN","PXRMSEL",201,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMSEL",202,0)
 S FOUND=0
"RTN","PXRMSEL",203,0)
 W !
"RTN","PXRMSEL",204,0)
 F  D  Q:$D(DTOUT)  Q:$D(DUOUT)  Q:FOUND
"RTN","PXRMSEL",205,0)
 .S DIC=811.9,DIC(0)="AEMQZ"
"RTN","PXRMSEL",206,0)
 .D ^DIC K DIC S:X=(U_U) DTOUT=1 Q:$D(DTOUT)!$D(DUOUT)!(+Y=-1)
"RTN","PXRMSEL",207,0)
 .;Reminder ien
"RTN","PXRMSEL",208,0)
 .S REM=$P(Y,U) Q:'REM
"RTN","PXRMSEL",209,0)
 .;Get health factor findings on this reminder
"RTN","PXRMSEL",210,0)
 .S FSUB=0
"RTN","PXRMSEL",211,0)
 .F  S FSUB=$O(^PXD(811.9,REM,20,FSUB)) Q:'FSUB  D
"RTN","PXRMSEL",212,0)
 ..S FIND=$P($G(^PXD(811.9,REM,20,FSUB,0)),U)
"RTN","PXRMSEL",213,0)
 ..Q:$P(FIND,";",2)'="AUTTHF("
"RTN","PXRMSEL",214,0)
 ..S FHF=$P(FIND,";") Q:'FHF
"RTN","PXRMSEL",215,0)
 ..S FNAM=$P($G(^AUTTHF(FHF,0)),U) Q:FNAM=""
"RTN","PXRMSEL",216,0)
 ..;Save array used by PXRMGEDT
"RTN","PXRMSEL",217,0)
 ..S FOUND=FOUND+1
"RTN","PXRMSEL",218,0)
 ..S ARRAY(FNAM)=FHF,ARRAYN(FHF)=""
"RTN","PXRMSEL",219,0)
 .I 'FOUND W !!,"No health factor findings on this reminder",! Q
"RTN","PXRMSEL",220,0)
 .S FNAM=""
"RTN","PXRMSEL",221,0)
 .W !!,"HEALTH FACTORS:",!
"RTN","PXRMSEL",222,0)
 .F  S FNAM=$O(ARRAY(FNAM)) Q:FNAM=""  D
"RTN","PXRMSEL",223,0)
 ..S FHF=$P(ARRAY(FNAM),U)
"RTN","PXRMSEL",224,0)
 ..W !,FNAM W:$D(^PXRMD(801.95,FHF,0)) " (Resolution defined)"
"RTN","PXRMSEL",225,0)
 .W !
"RTN","PXRMSEL",226,0)
 Q
"RTN","PXRMSEL",227,0)
 ;
"RTN","PXRMSEL",228,0)
 ;Reminders Health Factors
"RTN","PXRMSEL",229,0)
 ;------------------------
"RTN","PXRMSEL",230,0)
ZSKIP N ANS,FNAM,FHF,EXISTS,TEXT
"RTN","PXRMSEL",231,0)
 S FNAM=""
"RTN","PXRMSEL",232,0)
 F  S FNAM=$O(ARRAY(FNAM)) Q:FNAM=""  D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMSEL",233,0)
 .S FHF=ARRAY(FNAM),EXISTS=$D(^PXRMD(801.95,FHF,0))
"RTN","PXRMSEL",234,0)
 .I 'EXISTS S TEXT="ADD resolution status for "_FNAM_": "
"RTN","PXRMSEL",235,0)
 .I EXISTS S TEXT="MODIFY resolution status for "_FNAM_": "
"RTN","PXRMSEL",236,0)
 .;Option to ADD/MODIFY
"RTN","PXRMSEL",237,0)
 .D ZASK(.ANS,TEXT) Q:$D(DTOUT)!$D(DUOUT)  Q:(ANS'="Y")
"RTN","PXRMSEL",238,0)
 .;Force entry of HF into 801.95
"RTN","PXRMSEL",239,0)
 .I 'EXISTS D
"RTN","PXRMSEL",240,0)
 ..N DA,DIC,DIK,DR
"RTN","PXRMSEL",241,0)
 ..;Store the unique name
"RTN","PXRMSEL",242,0)
 ..S DR=".01///"_FNAM,DIE="^PXRMD(801.95,",DA=FHF
"RTN","PXRMSEL",243,0)
 ..D ^DIE
"RTN","PXRMSEL",244,0)
 ..;Reindex the cross-references.
"RTN","PXRMSEL",245,0)
 ..S DIK="^PXRMD(801.95,",DA=FHF
"RTN","PXRMSEL",246,0)
 ..D IX^DIK
"RTN","PXRMSEL",247,0)
 .;Edit
"RTN","PXRMSEL",248,0)
 .D EDIT^PXRMGEDT(PXRMGTYP,FHF,1)
"RTN","PXRMSEL",249,0)
 Q
"RTN","PXRMSEL",250,0)
 ;
"RTN","PXRMSEL",251,0)
 ;Ask ADD/MODIFY or not
"RTN","PXRMSEL",252,0)
 ;---------------------
"RTN","PXRMSEL",253,0)
ZASK(YESNO,TEXT) ;
"RTN","PXRMSEL",254,0)
 N X,Y,DIR
"RTN","PXRMSEL",255,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMSEL",256,0)
 S DIR(0)="YA0"
"RTN","PXRMSEL",257,0)
 S DIR("A")=TEXT
"RTN","PXRMSEL",258,0)
 S DIR("B")="N"
"RTN","PXRMSEL",259,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMSEL",260,0)
 S DIR("??")=U_"D ZHELP^PXRMSEL(2)"
"RTN","PXRMSEL",261,0)
 D ^DIR K DIR
"RTN","PXRMSEL",262,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMSEL",263,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMSEL",264,0)
 S YESNO=$E(Y(0))
"RTN","PXRMSEL",265,0)
 Q
"RTN","PXRMSEL",266,0)
 ;
"RTN","PXRMSEL",267,0)
 ;General help text routine.
"RTN","PXRMSEL",268,0)
 ;--------------------------
"RTN","PXRMSEL",269,0)
ZHELP(CALL) ;
"RTN","PXRMSEL",270,0)
 N HTEXT
"RTN","PXRMSEL",271,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMSEL",272,0)
 S DIWF="C75",DIWL=0,DIWR=75
"RTN","PXRMSEL",273,0)
 ;
"RTN","PXRMSEL",274,0)
 I CALL=1 D
"RTN","PXRMSEL",275,0)
 .S HTEXT(1)="Enter I to select an individual health factor. Enter A to"
"RTN","PXRMSEL",276,0)
 .S HTEXT(2)="process all health factor findings on a selected reminder."
"RTN","PXRMSEL",277,0)
 I CALL=2 D
"RTN","PXRMSEL",278,0)
 .S HTEXT(1)="Enter Yes to enter resolution status for this health"
"RTN","PXRMSEL",279,0)
 .S HTEXT(2)="factor. Enter No to continue to the next health factor."
"RTN","PXRMSEL",280,0)
 K ^UTILITY($J,"W")
"RTN","PXRMSEL",281,0)
 S IC=""
"RTN","PXRMSEL",282,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMSEL",283,0)
 . S X=HTEXT(IC)
"RTN","PXRMSEL",284,0)
 . D ^DIWP
"RTN","PXRMSEL",285,0)
 W !
"RTN","PXRMSEL",286,0)
 S IC=0
"RTN","PXRMSEL",287,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMSEL",288,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMSEL",289,0)
 K ^UTILITY($J,"W")
"RTN","PXRMSEL",290,0)
 W !
"RTN","PXRMSEL",291,0)
 Q
"RTN","PXRMSEL1")
0^171^B47548904
"RTN","PXRMSEL1",1,0)
PXRMSEL1 ; SLC/PJH - PXRM Selection ;04/04/2000
"RTN","PXRMSEL1",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMSEL1",3,0)
 ;
"RTN","PXRMSEL1",4,0)
 ; Called by PXRMSEL
"RTN","PXRMSEL1",5,0)
 ;
"RTN","PXRMSEL1",6,0)
BUILD ;Build selection list
"RTN","PXRMSEL1",7,0)
 ;
"RTN","PXRMSEL1",8,0)
 D CHGCAP^VALM("HEADER1"," Item")
"RTN","PXRMSEL1",9,0)
 ;Reminder Dialog
"RTN","PXRMSEL1",10,0)
 I PXRMGTYP="DLG" D  Q
"RTN","PXRMSEL1",11,0)
 .N CODE,DATA,DDIS,PXRMDIEN,PXRMDNAM,PXRMITEM,PXRMRNAM,TXT,TYP
"RTN","PXRMSEL1",12,0)
 .S CODE="",VALMCNT=0
"RTN","PXRMSEL1",13,0)
 .F  S CODE=$O(^PXRMD(801.41,"B",CODE)) Q:CODE=""  D
"RTN","PXRMSEL1",14,0)
 ..;Get Dialog detail
"RTN","PXRMSEL1",15,0)
 ..S PXRMDIEN=$O(^PXRMD(801.41,"B",CODE,"")) Q:'PXRMDIEN
"RTN","PXRMSEL1",16,0)
 ..S DATA=$G(^PXRMD(801.41,PXRMDIEN,0)) Q:$P(DATA,U,4)'="R"
"RTN","PXRMSEL1",17,0)
 ..S PXRMDNAM=$P(DATA,U),PXRMRNAM="",DDIS=0
"RTN","PXRMSEL1",18,0)
 ..I $P(DATA,U,3)]"" S DDIS=1
"RTN","PXRMSEL1",19,0)
 ..I $O(^PXD(811.9,"AG",PXRMDIEN,"")),DDIS=0 S DDIS=2
"RTN","PXRMSEL1",20,0)
 ..S PXRMITEM=$P($G(^PXRMD(801.41,PXRMDIEN,0)),U,2)
"RTN","PXRMSEL1",21,0)
 ..I PXRMITEM D
"RTN","PXRMSEL1",22,0)
 ...I $E(PXRMVIEW,2)="N" S PXRMRNAM=$P($G(^PXD(811.9,PXRMITEM,0)),U)
"RTN","PXRMSEL1",23,0)
 ...I $E(PXRMVIEW,2)="P" S PXRMRNAM=$P($G(^PXD(811.9,PXRMITEM,0)),U,3)
"RTN","PXRMSEL1",24,0)
 ..S PXRMDNAM=$E(PXRMDNAM,1,39),PXRMRNAM=$E(PXRMRNAM,1,39)
"RTN","PXRMSEL1",25,0)
 ..S:PXRMRNAM="" PXRMRNAM="*NONE*"
"RTN","PXRMSEL1",26,0)
 ..S TXT=PXRMDNAM_$J("",40-$L(PXRMDNAM))_PXRMRNAM
"RTN","PXRMSEL1",27,0)
 ..S VALMCNT=VALMCNT+1,TXT=$J(VALMCNT,4)_"  "_TXT
"RTN","PXRMSEL1",28,0)
 ..S TXT=$E(TXT,1,71)_$J("",71-$L(TXT))
"RTN","PXRMSEL1",29,0)
 ..S TXT=TXT_" "_$S(DDIS=1:"Disabled",DDIS=2:"Linked",1:"")
"RTN","PXRMSEL1",30,0)
 ..D SET^VALM10(VALMCNT,TXT,PXRMDIEN)
"RTN","PXRMSEL1",31,0)
 .D CHGCAP^VALM("HEADER2","Reminder Dialog Name"_$J("",20)_"Source Reminder")
"RTN","PXRMSEL1",32,0)
 .D CHGCAP^VALM("HEADER3"," Status")
"RTN","PXRMSEL1",33,0)
 ;
"RTN","PXRMSEL1",34,0)
 ;All dialogs types
"RTN","PXRMSEL1",35,0)
 I PXRMGTYP="DLGE" D  Q
"RTN","PXRMSEL1",36,0)
 .N CODE,DATA,DDIS,DTYP,PXRMDIEN,PXRMDNAM,PXRMITEM,TXT
"RTN","PXRMSEL1",37,0)
 .S CODE="",VALMCNT=0,VALMBG=1
"RTN","PXRMSEL1",38,0)
 .F  S CODE=$O(^PXRMD(801.41,"B",CODE)) Q:CODE=""  D
"RTN","PXRMSEL1",39,0)
 ..;Get Dialog detail
"RTN","PXRMSEL1",40,0)
 ..S PXRMDIEN=$O(^PXRMD(801.41,"B",CODE,"")) Q:'PXRMDIEN
"RTN","PXRMSEL1",41,0)
 ..S DATA=$G(^PXRMD(801.41,PXRMDIEN,0)),DTYP=$P(DATA,U,4)
"RTN","PXRMSEL1",42,0)
 ..I PXRMDTYP'="A" Q:DTYP'=PXRMDTYP
"RTN","PXRMSEL1",43,0)
 ..Q:DTYP="R"
"RTN","PXRMSEL1",44,0)
 ..S PXRMDNAM=$P(DATA,U),DDIS=0 I $P(DATA,U,3)]"" S DDIS=1
"RTN","PXRMSEL1",45,0)
 ..S PXRMITEM=$O(^PXD(811.9,"AG",PXRMDIEN,""))
"RTN","PXRMSEL1",46,0)
 ..I PXRMITEM,DDIS=0 S DDIS=2
"RTN","PXRMSEL1",47,0)
 ..S PXRMDNAM=$E(PXRMDNAM,1,39)
"RTN","PXRMSEL1",48,0)
 ..S TXT=PXRMDNAM_$J("",40-$L(PXRMDNAM))_$$LIT(DTYP)
"RTN","PXRMSEL1",49,0)
 ..S VALMCNT=VALMCNT+1,TXT=$J(VALMCNT,4)_"  "_TXT
"RTN","PXRMSEL1",50,0)
 ..S TXT=$E(TXT,1,71)_$J("",71-$L(TXT))
"RTN","PXRMSEL1",51,0)
 ..S TXT=TXT_$S(DDIS=1:"Disabled",1:"")
"RTN","PXRMSEL1",52,0)
 ..D SET^VALM10(VALMCNT,TXT,PXRMDIEN)
"RTN","PXRMSEL1",53,0)
 .D CHGCAP^VALM("HEADER2","Dialog Name"_$J("",29)_"Dialog type")
"RTN","PXRMSEL1",54,0)
 .D CHGCAP^VALM("HEADER3","Status")
"RTN","PXRMSEL1",55,0)
 ;
"RTN","PXRMSEL1",56,0)
 ;Link reminders to dialogs
"RTN","PXRMSEL1",57,0)
 I PXRMGTYP="DLGR" D  Q
"RTN","PXRMSEL1",58,0)
 .N CODE,DATA,DDIS,DTYP,DIEN,DNAM,MODE,PNAM,RIEN,RNAM,SUB,TXT,TYPE
"RTN","PXRMSEL1",59,0)
 .S CODE="",VALMCNT=0,VALMBG=1,MODE=$E(PXRMVIEW,2),TYPE=$E(PXRMVIEW)
"RTN","PXRMSEL1",60,0)
 .S SUB=$S(MODE="P":"D",1:"B")
"RTN","PXRMSEL1",61,0)
 .F  S CODE=$O(^PXD(811.9,SUB,CODE)) Q:CODE=""  D
"RTN","PXRMSEL1",62,0)
 ..;Get Dialog detail
"RTN","PXRMSEL1",63,0)
 ..S RIEN=""
"RTN","PXRMSEL1",64,0)
 ..F  S RIEN=$O(^PXD(811.9,SUB,CODE,RIEN)) Q:'RIEN  D
"RTN","PXRMSEL1",65,0)
 ...S DATA=$G(^PXD(811.9,RIEN,0)) Q:DATA=""
"RTN","PXRMSEL1",66,0)
 ...S RNAM=$P(DATA,U),PNAM=$P(DATA,U,3)
"RTN","PXRMSEL1",67,0)
 ...S DIEN=$P($G(^PXD(811.9,RIEN,51)),U)
"RTN","PXRMSEL1",68,0)
 ...I TYPE="L" Q:'DIEN
"RTN","PXRMSEL1",69,0)
 ...I MODE="P" S:PNAM]"" RNAM=PNAM
"RTN","PXRMSEL1",70,0)
 ...S RNAM=$E(RNAM,1,34),DNAM="",DDIS=2
"RTN","PXRMSEL1",71,0)
 ...D:DIEN
"RTN","PXRMSEL1",72,0)
 ....S DATA=$G(^PXRMD(801.41,DIEN,0)),DDIS=0
"RTN","PXRMSEL1",73,0)
 ....S DNAM=$P(DATA,U) I $P(DATA,U,3)]"" S DDIS=1
"RTN","PXRMSEL1",74,0)
 ....S DNAM=$E(DNAM,1,27) I DNAM="" S DNAM="??"
"RTN","PXRMSEL1",75,0)
 ...S TXT=RNAM_$J("",35-$L(RNAM))
"RTN","PXRMSEL1",76,0)
 ...S TXT=TXT_DNAM_$J("",28-$L(DNAM))
"RTN","PXRMSEL1",77,0)
 ...S VALMCNT=VALMCNT+1,TXT=$J(VALMCNT,4)_"  "_TXT
"RTN","PXRMSEL1",78,0)
 ...S TXT=$E(TXT,1,71)_$J("",71-$L(TXT))
"RTN","PXRMSEL1",79,0)
 ...S TXT=TXT_$S(DDIS=1:"Disabled",1:"")
"RTN","PXRMSEL1",80,0)
 ...D SET^VALM10(VALMCNT,TXT,RIEN)
"RTN","PXRMSEL1",81,0)
 .I MODE="N" S TXT="Reminder Name"_$J("",22)
"RTN","PXRMSEL1",82,0)
 .I MODE="P" S TXT="Reminder Print Name"_$J("",16)
"RTN","PXRMSEL1",83,0)
 .S TXT=TXT_"Linked Dialog Name & Dialog St"
"RTN","PXRMSEL1",84,0)
 .D CHGCAP^VALM("HEADER2",TXT)
"RTN","PXRMSEL1",85,0)
 .D CHGCAP^VALM("HEADER3","atus")
"RTN","PXRMSEL1",86,0)
 ;
"RTN","PXRMSEL1",87,0)
 ;Finding item parameters
"RTN","PXRMSEL1",88,0)
 I PXRMGTYP="FIP" D  Q
"RTN","PXRMSEL1",89,0)
 .N CODE,DATA,DNAM,DSUB,IEN,FDIS,FSUB,FITEM,FLIT,FTYP,TXT
"RTN","PXRMSEL1",90,0)
 .S CODE="",VALMCNT=0
"RTN","PXRMSEL1",91,0)
 .F  S CODE=$O(^PXRMD(801.43,"B",CODE)) Q:CODE=""  D
"RTN","PXRMSEL1",92,0)
 ..S IEN=$O(^PXRMD(801.43,"B",CODE,""))
"RTN","PXRMSEL1",93,0)
 ..S DATA=$G(^PXRMD(801.43,IEN,0)),TXT=$E($P(DATA,U),1,39)
"RTN","PXRMSEL1",94,0)
 ..S FITEM=$P(DATA,U,2),FTYP=$P(FITEM,";",2),FSUB=$P(FITEM,";")
"RTN","PXRMSEL1",95,0)
 ..I FTYP]"" S FTYP=$G(DEF1(FTYP)) S:FTYP="" FTYP="??"
"RTN","PXRMSEL1",96,0)
 ..S FLIT="??" I FSUB S FLIT=FTYP_"("_FSUB_")"
"RTN","PXRMSEL1",97,0)
 ..S VALMCNT=VALMCNT+1,TXT=$J(VALMCNT,4)_"  "_FTYP_"-"_TXT
"RTN","PXRMSEL1",98,0)
 ..S DSUB=$P(DATA,U,4),DNAM="",FDIS=$P(DATA,U,3)
"RTN","PXRMSEL1",99,0)
 ..I DSUB S DNAM=$P($G(^PXRMD(801.41,DSUB,0)),U)
"RTN","PXRMSEL1",100,0)
 ..S TXT=TXT_$J("",40-$L(TXT))_DNAM
"RTN","PXRMSEL1",101,0)
 ..S TXT=$E(TXT,1,71)_$J("",71-$L(TXT))_$S(FDIS=1:"Disabled",1:"Enabled")
"RTN","PXRMSEL1",102,0)
 ..D SET^VALM10(VALMCNT,TXT,IEN)
"RTN","PXRMSEL1",103,0)
 .D CHGCAP^VALM("HEADER2","Finding Item Type & Name"_$J("",10)_"Dialog Group/Element")
"RTN","PXRMSEL1",104,0)
 .D CHGCAP^VALM("HEADER3","Status")
"RTN","PXRMSEL1",105,0)
 ;
"RTN","PXRMSEL1",106,0)
 ;Finding Type Parameters
"RTN","PXRMSEL1",107,0)
 I PXRMGTYP="FPAR" D
"RTN","PXRMSEL1",108,0)
 .N CODE,FDES,TXT,IEN
"RTN","PXRMSEL1",109,0)
 .S CODE="",VALMCNT=0
"RTN","PXRMSEL1",110,0)
 .F  S CODE=$O(^PXRMD(801.45,"B",CODE)) Q:CODE=""  D
"RTN","PXRMSEL1",111,0)
 ..I CODE="POV" S FDES="DIAGNOSIS (POV)"
"RTN","PXRMSEL1",112,0)
 ..I CODE="CPT" S FDES="PROCEDURE (CPT)"
"RTN","PXRMSEL1",113,0)
 ..I $D(DEF2(CODE)) S FDES=DEF2(CODE)
"RTN","PXRMSEL1",114,0)
 ..;S VALMCNT=VALMCNT+1,TXT=$J(VALMCNT,4)_"  "_CODE_$J("",5-$L(CODE))_FDES
"RTN","PXRMSEL1",115,0)
 ..S VALMCNT=VALMCNT+1,TXT=$J(VALMCNT,4)_"  "_FDES
"RTN","PXRMSEL1",116,0)
 ..S IEN=$O(^PXRMD(801.45,"B",CODE,""))
"RTN","PXRMSEL1",117,0)
 ..D SET^VALM10(VALMCNT,TXT,IEN)
"RTN","PXRMSEL1",118,0)
 .D CHGCAP^VALM("HEADER2","Finding Type Parameter")
"RTN","PXRMSEL1",119,0)
 ;
"RTN","PXRMSEL1",120,0)
 ;Reminder Categories
"RTN","PXRMSEL1",121,0)
 I PXRMGTYP="RCAT" D  Q
"RTN","PXRMSEL1",122,0)
 .N CODE,DATA,TXT,IEN
"RTN","PXRMSEL1",123,0)
 .S CODE="",VALMCNT=0
"RTN","PXRMSEL1",124,0)
 .F  S CODE=$O(^PXRMD(811.7,"B",CODE)) Q:CODE=""  D
"RTN","PXRMSEL1",125,0)
 ..S IEN=$O(^PXRMD(811.7,"B",CODE,""))
"RTN","PXRMSEL1",126,0)
 ..S DATA=$G(^PXRMD(811.7,IEN,0)),TXT=$P(DATA,U)
"RTN","PXRMSEL1",127,0)
 ..S VALMCNT=VALMCNT+1,TXT=$J(VALMCNT,4)_"  "_TXT
"RTN","PXRMSEL1",128,0)
 ..D SET^VALM10(VALMCNT,TXT,IEN)
"RTN","PXRMSEL1",129,0)
 .D CHGCAP^VALM("HEADER2","Reminder Category")
"RTN","PXRMSEL1",130,0)
 ;
"RTN","PXRMSEL1",131,0)
 ;Taxonomy
"RTN","PXRMSEL1",132,0)
 I PXRMGTYP="DTAX" D  Q
"RTN","PXRMSEL1",133,0)
 .N CODE,DATA,TXT,IEN
"RTN","PXRMSEL1",134,0)
 .S CODE="",VALMCNT=0
"RTN","PXRMSEL1",135,0)
 .F  S CODE=$O(^PXD(811.2,"B",CODE)) Q:CODE=""  D
"RTN","PXRMSEL1",136,0)
 ..S IEN=$O(^PXD(811.2,"B",CODE,""))
"RTN","PXRMSEL1",137,0)
 ..S DATA=$G(^PXD(811.2,IEN,0)),TXT=$P(DATA,U)
"RTN","PXRMSEL1",138,0)
 ..S VALMCNT=VALMCNT+1,TXT=$J(VALMCNT,4)_"  "_TXT
"RTN","PXRMSEL1",139,0)
 ..D SET^VALM10(VALMCNT,TXT,IEN)
"RTN","PXRMSEL1",140,0)
 .D CHGCAP^VALM("HEADER2","Reminder Taxonomy")
"RTN","PXRMSEL1",141,0)
 ;
"RTN","PXRMSEL1",142,0)
 ;Resolution Statuses
"RTN","PXRMSEL1",143,0)
 I PXRMGTYP="RESN" D  Q
"RTN","PXRMSEL1",144,0)
 .N CODE,DATA,HED,IEN,TXT,TYP
"RTN","PXRMSEL1",145,0)
 .S CODE="",VALMCNT=0
"RTN","PXRMSEL1",146,0)
 .F  S CODE=$O(^PXRMD(801.9,"B",CODE)) Q:CODE=""  D
"RTN","PXRMSEL1",147,0)
 ..S IEN=$O(^PXRMD(801.9,"B",CODE,""))
"RTN","PXRMSEL1",148,0)
 ..S DATA=$G(^PXRMD(801.9,IEN,0))
"RTN","PXRMSEL1",149,0)
 ..S TXT=$E($P(DATA,U),1,39),TYP=$P(DATA,U,6)
"RTN","PXRMSEL1",150,0)
 ..S VALMCNT=VALMCNT+1,TXT=$J(VALMCNT,4)_"  "_TXT
"RTN","PXRMSEL1",151,0)
 ..S TXT=TXT_$J("",40-$L(TXT))_$S(TYP=1:"NATIONAL",1:"LOCAL")
"RTN","PXRMSEL1",152,0)
 ..D SET^VALM10(VALMCNT,TXT,IEN)
"RTN","PXRMSEL1",153,0)
 .S HED="Reminder Resolution Status        National/Local"
"RTN","PXRMSEL1",154,0)
 .D CHGCAP^VALM("HEADER2",HED)
"RTN","PXRMSEL1",155,0)
 ;
"RTN","PXRMSEL1",156,0)
 ;Health Factor Resolutions
"RTN","PXRMSEL1",157,0)
 I PXRMGTYP="SHFR" D  Q
"RTN","PXRMSEL1",158,0)
 .N CODE,DARRAY,DATA,HCNT,IEN,RNAM,SUB,TXT
"RTN","PXRMSEL1",159,0)
 .S IEN=0
"RTN","PXRMSEL1",160,0)
 .F  S IEN=$O(^PXRMD(801.95,IEN)) Q:'IEN  D
"RTN","PXRMSEL1",161,0)
 ..S DATA=$G(^AUTTHF(IEN,0)),TXT=$E($P(DATA,U),1,39) Q:TXT=""
"RTN","PXRMSEL1",162,0)
 ..S DARRAY(TXT)=IEN
"RTN","PXRMSEL1",163,0)
 .S CODE="",VALMCNT=0,HCNT=0
"RTN","PXRMSEL1",164,0)
 .F  S CODE=$O(DARRAY(CODE)) Q:CODE=""  D
"RTN","PXRMSEL1",165,0)
 ..S IEN=DARRAY(CODE)
"RTN","PXRMSEL1",166,0)
 ..S DATA=$G(^AUTTHF(IEN,0))
"RTN","PXRMSEL1",167,0)
 ..S VALMCNT=VALMCNT+1,HCNT=HCNT+1,TXT=$J(VALMCNT,4)_"  "_CODE
"RTN","PXRMSEL1",168,0)
 ..S SUB=$O(^PXRMD(801.95,IEN,1,"B",0))
"RTN","PXRMSEL1",169,0)
 ..S RNAM="" I SUB S RNAM=$P($G(^PXRMD(801.9,SUB,0)),U)
"RTN","PXRMSEL1",170,0)
 ..S TXT=TXT_$J("",40-$L(TXT))_RNAM
"RTN","PXRMSEL1",171,0)
 ..F  S SUB=$O(^PXRMD(801.95,IEN,1,"B",SUB)) Q:'SUB  D
"RTN","PXRMSEL1",172,0)
 ...S RNAM=$P($G(^PXRMD(801.9,SUB,0)),U)
"RTN","PXRMSEL1",173,0)
 ...S TXT=TXT_"/"_RNAM
"RTN","PXRMSEL1",174,0)
 ..D SET^VALM10(VALMCNT,TXT,IEN)
"RTN","PXRMSEL1",175,0)
 .D CHGCAP^VALM("HEADER2","Health Factors"_$J("",20)_"Resolution Status")
"RTN","PXRMSEL1",176,0)
 ;
"RTN","PXRMSEL1",177,0)
 Q
"RTN","PXRMSEL1",178,0)
 ;
"RTN","PXRMSEL1",179,0)
LIT(INP) ;Dialog type description
"RTN","PXRMSEL1",180,0)
 Q:INP="E" "Dialog Element"
"RTN","PXRMSEL1",181,0)
 Q:INP="F" "Forced Value"
"RTN","PXRMSEL1",182,0)
 Q:INP="G" "Dialog Group"
"RTN","PXRMSEL1",183,0)
 Q:INP="P" "Additional Prompt"
"RTN","PXRMSEL1",184,0)
 Q:INP="R" "Reminder Dialog"
"RTN","PXRMSEL1",185,0)
 Q:INP="S" "Result Group"
"RTN","PXRMSEL1",186,0)
 Q:INP="T" "Result Element"
"RTN","PXRMSEL1",187,0)
 Q "???"
"RTN","PXRMSEL2")
0^180^B30162434
"RTN","PXRMSEL2",1,0)
PXRMSEL2 ; SLC/PJH - PXRM Selection ;04/16/2000
"RTN","PXRMSEL2",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMSEL2",3,0)
 ;
"RTN","PXRMSEL2",4,0)
 ; Called from PXRMSEL
"RTN","PXRMSEL2",5,0)
 ;
"RTN","PXRMSEL2",6,0)
 ;Select Health factors requiring resolutions
"RTN","PXRMSEL2",7,0)
 ;-------------------------------------------
"RTN","PXRMSEL2",8,0)
START W IORESET
"RTN","PXRMSEL2",9,0)
 ;Select to edit individual or reminder's Health Factors
"RTN","PXRMSEL2",10,0)
 D OPT(.ANS) Q:$D(DTOUT)!$D(DUOUT)  Q:ANS="I"
"RTN","PXRMSEL2",11,0)
 ;Select Reminder
"RTN","PXRMSEL2",12,0)
 S DIC("A")="SELECT REMINDER: "
"RTN","PXRMSEL2",13,0)
 S LIT1="You must select a reminder!"
"RTN","PXRMSEL2",14,0)
 D REM(.ARRAY) Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMSEL2",15,0)
 ;Scan health factors
"RTN","PXRMSEL2",16,0)
 D SKIP
"RTN","PXRMSEL2",17,0)
 ;Rebuild listman screen
"RTN","PXRMSEL2",18,0)
 D INIT^PXRMSEL
"RTN","PXRMSEL2",19,0)
 Q
"RTN","PXRMSEL2",20,0)
 ;
"RTN","PXRMSEL2",21,0)
 ;Ask ADD/MODIFY or not
"RTN","PXRMSEL2",22,0)
 ;---------------------
"RTN","PXRMSEL2",23,0)
ASK(YESNO,TEXT) ;
"RTN","PXRMSEL2",24,0)
 N X,Y,DIR
"RTN","PXRMSEL2",25,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMSEL2",26,0)
 S DIR(0)="YA0"
"RTN","PXRMSEL2",27,0)
 S DIR("A")=TEXT
"RTN","PXRMSEL2",28,0)
 S DIR("B")="N"
"RTN","PXRMSEL2",29,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMSEL2",30,0)
 S DIR("??")=U_"D ZHELP^PXRMSEL(2)"
"RTN","PXRMSEL2",31,0)
 D ^DIR K DIR
"RTN","PXRMSEL2",32,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMSEL2",33,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMSEL2",34,0)
 S YESNO=$E(Y(0))
"RTN","PXRMSEL2",35,0)
 Q
"RTN","PXRMSEL2",36,0)
 ;
"RTN","PXRMSEL2",37,0)
 ;Select single HF or all HF's for the reminder
"RTN","PXRMSEL2",38,0)
 ;---------------------------------------------
"RTN","PXRMSEL2",39,0)
OPT(TYPE) ;
"RTN","PXRMSEL2",40,0)
 N X,Y
"RTN","PXRMSEL2",41,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMSEL2",42,0)
 S DIR(0)="S"_U_"I:Individual Health Factor;"
"RTN","PXRMSEL2",43,0)
 S DIR(0)=DIR(0)_"A:All Health Factors for a Selected Reminder;"
"RTN","PXRMSEL2",44,0)
 S DIR("A")="SELECTION OPTION"
"RTN","PXRMSEL2",45,0)
 S DIR("B")="I"
"RTN","PXRMSEL2",46,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMSEL2",47,0)
 S DIR("??")=U_"D ZHELP^PXRMSEL(1)"
"RTN","PXRMSEL2",48,0)
 D ^DIR K DIR
"RTN","PXRMSEL2",49,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMSEL2",50,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMSEL2",51,0)
 S TYPE=Y
"RTN","PXRMSEL2",52,0)
 Q
"RTN","PXRMSEL2",53,0)
 ;
"RTN","PXRMSEL2",54,0)
 ;Reminder selection
"RTN","PXRMSEL2",55,0)
 ;------------------
"RTN","PXRMSEL2",56,0)
REM(ARRAY) ;
"RTN","PXRMSEL2",57,0)
 N X,Y,CNT,FSUB,FHF,FIND,FNAM,FOUND,REM
"RTN","PXRMSEL2",58,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMSEL2",59,0)
 S FOUND=0
"RTN","PXRMSEL2",60,0)
 W !
"RTN","PXRMSEL2",61,0)
 F  D  Q:$D(DTOUT)  Q:$D(DUOUT)  Q:FOUND
"RTN","PXRMSEL2",62,0)
 .S DIC=811.9,DIC(0)="AEMQZ"
"RTN","PXRMSEL2",63,0)
 .D ^DIC K DIC S:X=(U_U) DTOUT=1 Q:$D(DTOUT)!$D(DUOUT)!(+Y=-1)
"RTN","PXRMSEL2",64,0)
 .;Reminder ien
"RTN","PXRMSEL2",65,0)
 .S REM=$P(Y,U) Q:'REM
"RTN","PXRMSEL2",66,0)
 .;Get health factor findings on this reminder
"RTN","PXRMSEL2",67,0)
 .S FSUB=0
"RTN","PXRMSEL2",68,0)
 .F  S FSUB=$O(^PXD(811.9,REM,20,FSUB)) Q:'FSUB  D
"RTN","PXRMSEL2",69,0)
 ..S FIND=$P($G(^PXD(811.9,REM,20,FSUB,0)),U)
"RTN","PXRMSEL2",70,0)
 ..Q:$P(FIND,";",2)'="AUTTHF("
"RTN","PXRMSEL2",71,0)
 ..S FHF=$P(FIND,";") Q:'FHF
"RTN","PXRMSEL2",72,0)
 ..S FNAM=$P($G(^AUTTHF(FHF,0)),U) Q:FNAM=""
"RTN","PXRMSEL2",73,0)
 ..;Save array used by PXRMGEDT
"RTN","PXRMSEL2",74,0)
 ..S FOUND=FOUND+1
"RTN","PXRMSEL2",75,0)
 ..S ARRAY(FNAM)=FHF,ARRAYN(FHF)=""
"RTN","PXRMSEL2",76,0)
 .I 'FOUND W !!,"No health factor findings on this reminder",! Q
"RTN","PXRMSEL2",77,0)
 .S FNAM=""
"RTN","PXRMSEL2",78,0)
 .W !!,"HEALTH FACTORS:",!
"RTN","PXRMSEL2",79,0)
 .F  S FNAM=$O(ARRAY(FNAM)) Q:FNAM=""  D
"RTN","PXRMSEL2",80,0)
 ..S FHF=$P(ARRAY(FNAM),U)
"RTN","PXRMSEL2",81,0)
 ..W !,FNAM W:$D(^PXRMD(801.95,FHF,0)) " (Resolution defined)"
"RTN","PXRMSEL2",82,0)
 .W !
"RTN","PXRMSEL2",83,0)
 Q
"RTN","PXRMSEL2",84,0)
 ;
"RTN","PXRMSEL2",85,0)
 ;Dialog type selection
"RTN","PXRMSEL2",86,0)
 ;---------------------
"RTN","PXRMSEL2",87,0)
SEL(TYPE) ;
"RTN","PXRMSEL2",88,0)
 W IORESET
"RTN","PXRMSEL2",89,0)
 N X,Y,DIR
"RTN","PXRMSEL2",90,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMSEL2",91,0)
 S DIR(0)="S"_U_"D:Reminder Dialogs;"
"RTN","PXRMSEL2",92,0)
 S DIR(0)=DIR(0)_"E:Dialog Elements;"
"RTN","PXRMSEL2",93,0)
 S DIR(0)=DIR(0)_"F:Forced Values;"
"RTN","PXRMSEL2",94,0)
 S DIR(0)=DIR(0)_"G:Dialog Groups;"
"RTN","PXRMSEL2",95,0)
 S DIR(0)=DIR(0)_"P:Additional Prompts;"
"RTN","PXRMSEL2",96,0)
 S DIR(0)=DIR(0)_"R:Reminders;"
"RTN","PXRMSEL2",97,0)
 S DIR(0)=DIR(0)_"RG:Result Group (Mental Health);"
"RTN","PXRMSEL2",98,0)
 S DIR(0)=DIR(0)_"RE:Result Element (Mental Health);"
"RTN","PXRMSEL2",99,0)
 S DIR("A")="TYPE OF VIEW"
"RTN","PXRMSEL2",100,0)
 S DIR("B")="R"
"RTN","PXRMSEL2",101,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMSEL2",102,0)
 S DIR("??")=U_"D HELP^PXRMSEL2(3)"
"RTN","PXRMSEL2",103,0)
 D ^DIR K DIR
"RTN","PXRMSEL2",104,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMSEL2",105,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMSEL2",106,0)
 S TYPE=Y
"RTN","PXRMSEL2",107,0)
 ;Change display type
"RTN","PXRMSEL2",108,0)
 S PXRMGTYP=$S(TYPE="D":"DLG",TYPE="R":"DLGR",1:"DLGE")
"RTN","PXRMSEL2",109,0)
 I TYPE'="R" D
"RTN","PXRMSEL2",110,0)
 .I TYPE="D" S PXRMDTYP="R" Q
"RTN","PXRMSEL2",111,0)
 .I TYPE="RG" S PXRMDTYP="S" Q
"RTN","PXRMSEL2",112,0)
 .I TYPE="RE" S PXRMDTYP="T" Q
"RTN","PXRMSEL2",113,0)
 .S PXRMDTYP=TYPE
"RTN","PXRMSEL2",114,0)
 Q
"RTN","PXRMSEL2",115,0)
 ;
"RTN","PXRMSEL2",116,0)
 ;Reminders Health Factors
"RTN","PXRMSEL2",117,0)
 ;------------------------
"RTN","PXRMSEL2",118,0)
SKIP N ANS,FNAM,FHF,EXISTS,TEXT
"RTN","PXRMSEL2",119,0)
 S FNAM=""
"RTN","PXRMSEL2",120,0)
 F  S FNAM=$O(ARRAY(FNAM)) Q:FNAM=""  D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMSEL2",121,0)
 .S FHF=ARRAY(FNAM),EXISTS=$D(^PXRMD(801.95,FHF,0))
"RTN","PXRMSEL2",122,0)
 .I 'EXISTS S TEXT="ADD resolution status for "_FNAM_": "
"RTN","PXRMSEL2",123,0)
 .I EXISTS S TEXT="MODIFY resolution status for "_FNAM_": "
"RTN","PXRMSEL2",124,0)
 .;Option to ADD/MODIFY
"RTN","PXRMSEL2",125,0)
 .D ASK(.ANS,TEXT) Q:$D(DTOUT)!$D(DUOUT)  Q:(ANS'="Y")
"RTN","PXRMSEL2",126,0)
 .;Force entry of HF into 801.95
"RTN","PXRMSEL2",127,0)
 .I 'EXISTS D
"RTN","PXRMSEL2",128,0)
 ..N DA,DIC,DIK,DR
"RTN","PXRMSEL2",129,0)
 ..;Store the unique name
"RTN","PXRMSEL2",130,0)
 ..S DR=".01///"_FNAM,DIE="^PXRMD(801.95,",DA=FHF
"RTN","PXRMSEL2",131,0)
 ..D ^DIE
"RTN","PXRMSEL2",132,0)
 ..;Reindex the cross-references.
"RTN","PXRMSEL2",133,0)
 ..S DIK="^PXRMD(801.95,",DA=FHF
"RTN","PXRMSEL2",134,0)
 ..D IX^DIK
"RTN","PXRMSEL2",135,0)
 .;Edit
"RTN","PXRMSEL2",136,0)
 .D EDIT^PXRMGEDT(PXRMGTYP,FHF,1)
"RTN","PXRMSEL2",137,0)
 Q
"RTN","PXRMSEL2",138,0)
 ;
"RTN","PXRMSEL2",139,0)
 ;General help text routine.
"RTN","PXRMSEL2",140,0)
 ;--------------------------
"RTN","PXRMSEL2",141,0)
HELP(CALL) ;
"RTN","PXRMSEL2",142,0)
 N HTEXT
"RTN","PXRMSEL2",143,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMSEL2",144,0)
 S DIWF="C75",DIWL=0,DIWR=75
"RTN","PXRMSEL2",145,0)
 ;
"RTN","PXRMSEL2",146,0)
 I CALL=1 D
"RTN","PXRMSEL2",147,0)
 .S HTEXT(1)="Enter I to select an individual health factor. Enter A to"
"RTN","PXRMSEL2",148,0)
 .S HTEXT(2)="process all health factor findings on a selected reminder."
"RTN","PXRMSEL2",149,0)
 I CALL=2 D
"RTN","PXRMSEL2",150,0)
 .S HTEXT(1)="Enter Yes to enter resolution status for this health"
"RTN","PXRMSEL2",151,0)
 .S HTEXT(2)="factor. Enter No to continue to the next health factor."
"RTN","PXRMSEL2",152,0)
 I CALL=3 D
"RTN","PXRMSEL2",153,0)
 .S HTEXT(1)="Select the type of view to be displayed. You may view"
"RTN","PXRMSEL2",154,0)
 .S HTEXT(2)="either reminders or selected dialog types."
"RTN","PXRMSEL2",155,0)
 K ^UTILITY($J,"W")
"RTN","PXRMSEL2",156,0)
 S IC=""
"RTN","PXRMSEL2",157,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMSEL2",158,0)
 . S X=HTEXT(IC)
"RTN","PXRMSEL2",159,0)
 . D ^DIWP
"RTN","PXRMSEL2",160,0)
 W !
"RTN","PXRMSEL2",161,0)
 S IC=0
"RTN","PXRMSEL2",162,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMSEL2",163,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMSEL2",164,0)
 K ^UTILITY($J,"W")
"RTN","PXRMSEL2",165,0)
 W !
"RTN","PXRMSEL2",166,0)
 Q
"RTN","PXRMSHF")
0^106^B9649986
"RTN","PXRMSHF",1,0)
PXRMSHF ; SLC/PJH - Edit/Inquire Health Factor Resolutions ;03/17/2000
"RTN","PXRMSHF",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMSHF",3,0)
 ;
"RTN","PXRMSHF",4,0)
START N DIC,PXRMGTYP,PXRMHD,PXRMSHF,Y
"RTN","PXRMSHF",5,0)
SELECT ;General selection
"RTN","PXRMSHF",6,0)
 S PXRMHD="Health Factor Resolutions",PXRMGTYP="SHFR",PXRMSHF=""
"RTN","PXRMSHF",7,0)
 D START^PXRMSEL(PXRMHD,PXRMGTYP,"PXRMSHF")
"RTN","PXRMSHF",8,0)
 ;Should return a value
"RTN","PXRMSHF",9,0)
 I PXRMSHF D  G SELECT
"RTN","PXRMSHF",10,0)
 .S PXRMHD="HEALTH FACTOR NAME:"
"RTN","PXRMSHF",11,0)
 .;Listman option
"RTN","PXRMSHF",12,0)
 .D START^PXRMGEN(PXRMHD,PXRMGTYP,PXRMSHF)
"RTN","PXRMSHF",13,0)
 ;
"RTN","PXRMSHF",14,0)
END Q
"RTN","PXRMSHF",15,0)
 ;
"RTN","PXRMSHF",16,0)
 ;List all HF resolutions (for protocol PXRM SELECTION LIST)
"RTN","PXRMSHF",17,0)
 ;-----------------------
"RTN","PXRMSHF",18,0)
ALL N BY,DC,DHD,DIC,FLDS,FR,L,LOGIC,NOW,TO,Y
"RTN","PXRMSHF",19,0)
 S Y=1
"RTN","PXRMSHF",20,0)
 D SET
"RTN","PXRMSHF",21,0)
 S DIC="^PXRMD(801.95,"
"RTN","PXRMSHF",22,0)
 S BY=".01"
"RTN","PXRMSHF",23,0)
 S FR=""
"RTN","PXRMSHF",24,0)
 S TO=""
"RTN","PXRMSHF",25,0)
 S DHD="W ?0 D HED^PXRMSHF"
"RTN","PXRMSHF",26,0)
 D DISP
"RTN","PXRMSHF",27,0)
 Q
"RTN","PXRMSHF",28,0)
 ;
"RTN","PXRMSHF",29,0)
 ;Inquire/Print Option (for protocol PXRM GENERAL INQUIRE/PRINT)
"RTN","PXRMSHF",30,0)
 ;--------------------
"RTN","PXRMSHF",31,0)
INQ(Y) N BY,DC,DHD,DIC,FLDS,FR,L,LOGIC,NOW,TO
"RTN","PXRMSHF",32,0)
 S DIC="^PXRMD(801.95,"
"RTN","PXRMSHF",33,0)
 S DIC(0)="AEMQ"
"RTN","PXRMSHF",34,0)
 D SET
"RTN","PXRMSHF",35,0)
 D DISP
"RTN","PXRMSHF",36,0)
 Q
"RTN","PXRMSHF",37,0)
 ;
"RTN","PXRMSHF",38,0)
 ;Display Header (see DHD variable)
"RTN","PXRMSHF",39,0)
 ;--------------
"RTN","PXRMSHF",40,0)
HED N TEMP,TEXTLEN,TEXTHED,TEXTUND
"RTN","PXRMSHF",41,0)
 S TEXTHED="HEALTH FACTOR RESOLUTION LIST"
"RTN","PXRMSHF",42,0)
 S TEXTUND=$TR($J("",IOM)," ","-")
"RTN","PXRMSHF",43,0)
 S TEMP=NOW_"  Page "_DC
"RTN","PXRMSHF",44,0)
 S TEXTLEN=$L(TEMP)
"RTN","PXRMSHF",45,0)
 W TEXTHED
"RTN","PXRMSHF",46,0)
 W ?(IOM-TEXTLEN),TEMP
"RTN","PXRMSHF",47,0)
 W !,TEXTUND,!!
"RTN","PXRMSHF",48,0)
 Q
"RTN","PXRMSHF",49,0)
 ;
"RTN","PXRMSHF",50,0)
 ;DISPLAY (Display from FLDS array)
"RTN","PXRMSHF",51,0)
 ;-------
"RTN","PXRMSHF",52,0)
DISP S L=0,FLDS="[PXRM HEALTH FACTOR RESOLUTIONS]"
"RTN","PXRMSHF",53,0)
 D EN1^DIP
"RTN","PXRMSHF",54,0)
 Q
"RTN","PXRMSHF",55,0)
 ;
"RTN","PXRMSHF",56,0)
SET ;Setup all the variables
"RTN","PXRMSHF",57,0)
 ; Set Date for Header
"RTN","PXRMSHF",58,0)
 S NOW=$$NOW^XLFDT
"RTN","PXRMSHF",59,0)
 S NOW=$$FMTE^XLFDT(NOW,"1P")
"RTN","PXRMSHF",60,0)
 ;
"RTN","PXRMSHF",61,0)
 ;These variables need to be setup every time because DIP kills them.
"RTN","PXRMSHF",62,0)
 S BY="NUMBER"
"RTN","PXRMSHF",63,0)
 S (FR,TO)=+$P(Y,U,1)
"RTN","PXRMSHF",64,0)
 S DHD="W ?0 D HED^PXRMSHF"
"RTN","PXRMSHF",65,0)
 ;
"RTN","PXRMSHF",66,0)
 Q
"RTN","PXRMSHF",67,0)
 ;
"RTN","PXRMSHF",68,0)
 ;Build display for selected HF - Called from PXRMGEN
"RTN","PXRMSHF",69,0)
 ;---------------------------------------------------
"RTN","PXRMSHF",70,0)
SHFR(PXRMSHFR) ;
"RTN","PXRMSHF",71,0)
 N DATA,DARRAY,SUB
"RTN","PXRMSHF",72,0)
 S VALMCNT=0 K ^TMP("PXRMGENS",$J),^TMP("PXRMGEN",$J)
"RTN","PXRMSHF",73,0)
 ;
"RTN","PXRMSHF",74,0)
 ;Format headings to include Health Factor name
"RTN","PXRMSHF",75,0)
 S HEADER=PXRMHD_" "_$P(^AUTTHF(PXRMSHF,0),U)_" - HF("_PXRMSHF_")"
"RTN","PXRMSHF",76,0)
 ;
"RTN","PXRMSHF",77,0)
 ;Build HF Resolutions Display
"RTN","PXRMSHF",78,0)
 D BUILD(.DARRAY,PXRMSHFR)
"RTN","PXRMSHF",79,0)
 Q
"RTN","PXRMSHF",80,0)
 ;
"RTN","PXRMSHF",81,0)
 ;Build Health Factor Resolutions Inquiry array
"RTN","PXRMSHF",82,0)
 ;---------------------------------------------
"RTN","PXRMSHF",83,0)
BUILD(ARRAY,D0) ;
"RTN","PXRMSHF",84,0)
 N DATA,LCT,RDES,RIEN,SUB
"RTN","PXRMSHF",85,0)
 S VALMCNT=0 K ^TMP("PXRMGENS",$J),^TMP("PXRMGEN",$J)
"RTN","PXRMSHF",86,0)
 ;
"RTN","PXRMSHF",87,0)
 S SUB=0
"RTN","PXRMSHF",88,0)
 ;Loop through all the resolution statuses
"RTN","PXRMSHF",89,0)
 F  S SUB=$O(^PXRMD(801.95,IEN,1,SUB)) Q:'SUB  D
"RTN","PXRMSHF",90,0)
 .;Get ien for resolution status
"RTN","PXRMSHF",91,0)
 .S RIEN=$P($G(^PXRMD(801.95,IEN,1,SUB,0)),U) Q:RIEN=""
"RTN","PXRMSHF",92,0)
 .;Get description
"RTN","PXRMSHF",93,0)
 .S RDES=$P($G(^PXRMD(801.9,RIEN,0)),U) I RDES="" S RDES=RIEN
"RTN","PXRMSHF",94,0)
 .;Save Resolution in alpha order
"RTN","PXRMSHF",95,0)
 .S ^TMP("PXRMGENS",$J,RDES)=SUB
"RTN","PXRMSHF",96,0)
 ;
"RTN","PXRMSHF",97,0)
 ;Put the list into the array List Manager is using.
"RTN","PXRMSHF",98,0)
 S RDES="",LCT=0
"RTN","PXRMSHF",99,0)
 S VALMCNT=0
"RTN","PXRMSHF",100,0)
 F  S RDES=$O(^TMP("PXRMGENS",$J,RDES)) Q:RDES=""  D
"RTN","PXRMSHF",101,0)
 .S DATA=$G(^TMP("PXRMGENS",$J,RDES))
"RTN","PXRMSHF",102,0)
 .S VALMCNT=VALMCNT+1,LCT=LCT+1
"RTN","PXRMSHF",103,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)=" "_RDES
"RTN","PXRMSHF",104,0)
 .S ^TMP("PXRMGEN",$J,"VALMCNT")=VALMCNT
"RTN","PXRMSHF",105,0)
 K ^TMP("PXRMGENS",$J)
"RTN","PXRMSHF",106,0)
 ;Create headings
"RTN","PXRMSHF",107,0)
 D CHGCAP^VALM("HEADER1","Resolution Status")
"RTN","PXRMSHF",108,0)
 D CHGCAP^VALM("HEADER2","")
"RTN","PXRMSHF",109,0)
 D CHGCAP^VALM("HEADER3","")
"RTN","PXRMSHF",110,0)
 Q
"RTN","PXRMSKIN")
0^107^B13147073
"RTN","PXRMSKIN",1,0)
PXRMSKIN ; SLC/PKR - Handle skin test findings. ;06/09/2000
"RTN","PXRMSKIN",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMSKIN",3,0)
 ;
"RTN","PXRMSKIN",4,0)
 ;=======================================================================
"RTN","PXRMSKIN",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate skin test findings.
"RTN","PXRMSKIN",6,0)
 N FIND0,FINDING,INVDATE,SKINIEN
"RTN","PXRMSKIN",7,0)
 S SKINIEN=""
"RTN","PXRMSKIN",8,0)
 F  S SKINIEN=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTSK(",SKINIEN)) Q:+SKINIEN=0  D
"RTN","PXRMSKIN",9,0)
 . S INVDATE=$O(^AUPNVSK("AA",DFN,SKINIEN,""))
"RTN","PXRMSKIN",10,0)
 . S FINDING=""
"RTN","PXRMSKIN",11,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTSK(",SKINIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMSKIN",12,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMSKIN",13,0)
 .. D FIEVAL(DFN,SKINIEN,INVDATE,FIND0,"",FINDING,.FIEVAL)
"RTN","PXRMSKIN",14,0)
 Q
"RTN","PXRMSKIN",15,0)
 ;
"RTN","PXRMSKIN",16,0)
 ;=======================================================================
"RTN","PXRMSKIN",17,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate skin test terms.
"RTN","PXRMSKIN",18,0)
 N FIND0,INVDATE,LFIEVAL,TFIND0,TFINDING,SKINIEN
"RTN","PXRMSKIN",19,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMSKIN",20,0)
 S SKINIEN=""
"RTN","PXRMSKIN",21,0)
 F  S SKINIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTSK(",SKINIEN)) Q:+SKINIEN=0  D
"RTN","PXRMSKIN",22,0)
 . S INVDATE=$O(^AUPNVSK("AA",DFN,SKINIEN,""))
"RTN","PXRMSKIN",23,0)
 . S TFINDING=""
"RTN","PXRMSKIN",24,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTSK(",SKINIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMSKIN",25,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMSKIN",26,0)
 .. D FIEVAL(DFN,SKINIEN,INVDATE,FIND0,TFIND0,TFINDING,.TFIEVAL)
"RTN","PXRMSKIN",27,0)
 Q
"RTN","PXRMSKIN",28,0)
 ;
"RTN","PXRMSKIN",29,0)
 ;=======================================================================
"RTN","PXRMSKIN",30,0)
FIEVAL(DFN,SKINIEN,INVDATE,FIND0,TFIND0,FINDING,FIEVAL) ;
"RTN","PXRMSKIN",31,0)
 N CONVAL,DATE,IEN,IND,READING,RESULTS
"RTN","PXRMSKIN",32,0)
 N TEMP,VALID,VIEN
"RTN","PXRMSKIN",33,0)
 I INVDATE="" S FIEVAL(FINDING)=0 Q
"RTN","PXRMSKIN",34,0)
 S IEN=$O(^AUPNVSK("AA",DFN,SKINIEN,INVDATE,""))
"RTN","PXRMSKIN",35,0)
 S TEMP=$G(^AUPNVSK(IEN,0))
"RTN","PXRMSKIN",36,0)
 S RESULTS=$P(TEMP,U,4)
"RTN","PXRMSKIN",37,0)
 S READING=$P(TEMP,U,5)
"RTN","PXRMSKIN",38,0)
 S VIEN=$P(TEMP,U,3)
"RTN","PXRMSKIN",39,0)
 S DATE=$$VDATE^PXRMDATE(VIEN)
"RTN","PXRMSKIN",40,0)
 ;Save the rest of the finding information.
"RTN","PXRMSKIN",41,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMSKIN",42,0)
 S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMSKIN",43,0)
 S FIEVAL(FINDING,"FINDING")=SKINIEN_";AUTTSK("
"RTN","PXRMSKIN",44,0)
 S FIEVAL(FINDING,"SOURCE")=IEN_";AUPNVSK("
"RTN","PXRMSKIN",45,0)
 S FIEVAL(FINDING,"READING")=READING
"RTN","PXRMSKIN",46,0)
 S FIEVAL(FINDING,"RESULTS")=RESULTS
"RTN","PXRMSKIN",47,0)
 S FIEVAL(FINDING,"VALUE")=RESULTS
"RTN","PXRMSKIN",48,0)
 S FIEVAL(FINDING,"VIEN")=VIEN
"RTN","PXRMSKIN",49,0)
 ;Determine if the finding has expired.
"RTN","PXRMSKIN",50,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMSKIN",51,0)
 I 'VALID D  Q
"RTN","PXRMSKIN",52,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMSKIN",53,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMSKIN",54,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMSKIN",55,0)
 S CONVAL=$$COND^PXRMUTIL(FIND0,TFIND0,RESULTS)
"RTN","PXRMSKIN",56,0)
 I CONVAL'="" D
"RTN","PXRMSKIN",57,0)
 . I CONVAL D
"RTN","PXRMSKIN",58,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMSKIN",59,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMSKIN",60,0)
 . E  D
"RTN","PXRMSKIN",61,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMSKIN",62,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMSKIN",63,0)
 Q
"RTN","PXRMSKIN",64,0)
 ;
"RTN","PXRMSKIN",65,0)
 ;=======================================================================
"RTN","PXRMSKIN",66,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMSKIN",67,0)
 ;maintenance output.
"RTN","PXRMSKIN",68,0)
 N EM,FIEN,IND,PNAME,READING,RESULTS,SKINIEN,TEMP,VDATE
"RTN","PXRMSKIN",69,0)
 S SKINIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMSKIN",70,0)
 S FIEN=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMSKIN",71,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMSKIN",72,0)
 S READING=$G(FIEVAL(FINDING,"READING"))
"RTN","PXRMSKIN",73,0)
 S RESULTS=$G(FIEVAL(FINDING,"RESULTS"))
"RTN","PXRMSKIN",74,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMSKIN",75,0)
 S TEMP=TEMP_" Skin Test: "
"RTN","PXRMSKIN",76,0)
 S IND=$P(^AUPNVSK(SKINIEN,0),U,1)
"RTN","PXRMSKIN",77,0)
 S PNAME=$P(^AUTTSK(FIEN,0),U,1)
"RTN","PXRMSKIN",78,0)
 S TEMP=TEMP_PNAME
"RTN","PXRMSKIN",79,0)
 I $L(RESULTS)>0 D
"RTN","PXRMSKIN",80,0)
 . S TEMP=TEMP_"; results - "
"RTN","PXRMSKIN",81,0)
 . S TEMP=TEMP_$$EXTERNAL^DILFD(9000010.12,.04,"",RESULTS,.EM)
"RTN","PXRMSKIN",82,0)
 I $L(READING)>0 D
"RTN","PXRMSKIN",83,0)
 . S TEMP=TEMP_"; reading - "
"RTN","PXRMSKIN",84,0)
 . S TEMP=TEMP_$$EXTERNAL^DILFD(9000010.12,.05,"",READING,.EM)
"RTN","PXRMSKIN",85,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMSKIN",86,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMSKIN",87,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMSKIN",88,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMSKIN",89,0)
 S NLINES=NLINES+1
"RTN","PXRMSKIN",90,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMSKIN",91,0)
 I $D(PXRMDEV) D
"RTN","PXRMSKIN",92,0)
 . N UID
"RTN","PXRMSKIN",93,0)
 . S UID="SKIN "_PNAME
"RTN","PXRMSKIN",94,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMSKIN",95,0)
 ;
"RTN","PXRMSKIN",96,0)
 ;For historical encounters display the location and comments.
"RTN","PXRMSKIN",97,0)
 I VDATE["E" D
"RTN","PXRMSKIN",98,0)
 . N INDEX,VIEN
"RTN","PXRMSKIN",99,0)
 . S INDEX="SKIK-"_PNAME
"RTN","PXRMSKIN",100,0)
 . S VIEN=FIEVAL(FINDING,"VIEN")
"RTN","PXRMSKIN",101,0)
 . D HLCV^PXRMVSIT(.NLINES,.TEXT,VIEN,INDEX)
"RTN","PXRMSKIN",102,0)
 Q
"RTN","PXRMSKIN",103,0)
 ;
"RTN","PXRMSLST")
0^108^B5428659
"RTN","PXRMSLST",1,0)
PXRMSLST ; SLC/PJH - List Resolution Statuses ;03/09/2000
"RTN","PXRMSLST",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMSLST",3,0)
 ;
"RTN","PXRMSLST",4,0)
 ;List selected status
"RTN","PXRMSLST",5,0)
 ;--------------------
"RTN","PXRMSLST",6,0)
START N BY,DC,DHD,DIC,FLDS,FR,L,LOGIC,MODE,NOW,TO,Y
"RTN","PXRMSLST",7,0)
 ;
"RTN","PXRMSLST",8,0)
SELECT S MODE=""
"RTN","PXRMSLST",9,0)
 S DIC="^PXRMD(801.9,"
"RTN","PXRMSLST",10,0)
 S DIC(0)="AEMQ"
"RTN","PXRMSLST",11,0)
 S DIC("A")="Select Resolution Status: "
"RTN","PXRMSLST",12,0)
 D ^DIC
"RTN","PXRMSLST",13,0)
 I Y'=-1 D  G SELECT
"RTN","PXRMSLST",14,0)
 .D SET
"RTN","PXRMSLST",15,0)
 .D DISP
"RTN","PXRMSLST",16,0)
END Q
"RTN","PXRMSLST",17,0)
 ;
"RTN","PXRMSLST",18,0)
 ;List all statuses
"RTN","PXRMSLST",19,0)
 ;-----------------
"RTN","PXRMSLST",20,0)
ALL N BY,DC,DHD,DIC,FLDS,FR,L,LOGIC,MODE,NOW,TO,Y
"RTN","PXRMSLST",21,0)
 S Y=1,MODE="GENERAL"
"RTN","PXRMSLST",22,0)
 D SET
"RTN","PXRMSLST",23,0)
 S DIC="^PXRMD(801.9,"
"RTN","PXRMSLST",24,0)
 S BY=".01"
"RTN","PXRMSLST",25,0)
 S FR=""
"RTN","PXRMSLST",26,0)
 S TO=""
"RTN","PXRMSLST",27,0)
 S DHD="W ?0 D HED^PXRMSLST"
"RTN","PXRMSLST",28,0)
 D DISP
"RTN","PXRMSLST",29,0)
 Q
"RTN","PXRMSLST",30,0)
 ;
"RTN","PXRMSLST",31,0)
 ;Inquire/Print Option (for protocol PXRM GENERAL INQUIRE/PRINT)
"RTN","PXRMSLST",32,0)
 ;--------------------
"RTN","PXRMSLST",33,0)
INQ(Y) N BY,DC,DHD,DIC,FLDS,FR,L,LOGIC,MODE,NOW,TO
"RTN","PXRMSLST",34,0)
 S MODE=""
"RTN","PXRMSLST",35,0)
 S DIC="^PXRMD(801.9,"
"RTN","PXRMSLST",36,0)
 S DIC(0)="AEMQ"
"RTN","PXRMSLST",37,0)
 D SET
"RTN","PXRMSLST",38,0)
 D DISP
"RTN","PXRMSLST",39,0)
 Q
"RTN","PXRMSLST",40,0)
 ;
"RTN","PXRMSLST",41,0)
HED ; Display Header (see DHD variable)
"RTN","PXRMSLST",42,0)
 N TEMP,TEXTLEN,TEXTHED,TEXTUND
"RTN","PXRMSLST",43,0)
 S TEXTHED="RESOLUTION STATUS LIST"
"RTN","PXRMSLST",44,0)
 S TEXTUND=$TR($J("",IOM)," ","-")
"RTN","PXRMSLST",45,0)
 S TEMP=NOW_"  Page "_DC
"RTN","PXRMSLST",46,0)
 S TEXTLEN=$L(TEMP)
"RTN","PXRMSLST",47,0)
 W TEXTHED
"RTN","PXRMSLST",48,0)
 W ?(IOM-TEXTLEN),TEMP
"RTN","PXRMSLST",49,0)
 W !,TEXTUND,!!
"RTN","PXRMSLST",50,0)
 Q
"RTN","PXRMSLST",51,0)
 ;
"RTN","PXRMSLST",52,0)
DISP ;DISPLAY (Display from FLDS array)
"RTN","PXRMSLST",53,0)
 S L=0
"RTN","PXRMSLST",54,0)
 D EN1^DIP
"RTN","PXRMSLST",55,0)
 Q
"RTN","PXRMSLST",56,0)
 ;
"RTN","PXRMSLST",57,0)
 ;Work out national resolution status
"RTN","PXRMSLST",58,0)
NAT N NAT
"RTN","PXRMSLST",59,0)
 ;Ignore national codes
"RTN","PXRMSLST",60,0)
 I +$P($G(^PXRMD(801.9,+D0,0)),U,6) W ?29,"N/A" Q
"RTN","PXRMSLST",61,0)
 ;Get national code from cross reference
"RTN","PXRMSLST",62,0)
 S NAT=$O(^PXRMD(801.9,"AC",D0,""))
"RTN","PXRMSLST",63,0)
 ;If none allocated say so
"RTN","PXRMSLST",64,0)
 I NAT="" W ?29,"***UNDEFINED***" Q
"RTN","PXRMSLST",65,0)
 ;Get name of national status and display
"RTN","PXRMSLST",66,0)
 S DATA=$P($G(^PXRMD(801.9,NAT,0)),U)
"RTN","PXRMSLST",67,0)
 W ?29,DATA
"RTN","PXRMSLST",68,0)
 Q
"RTN","PXRMSLST",69,0)
 ;
"RTN","PXRMSLST",70,0)
SET ;Setup all the variables
"RTN","PXRMSLST",71,0)
 N NATIONAL
"RTN","PXRMSLST",72,0)
 ;
"RTN","PXRMSLST",73,0)
 ; Set Date for Header
"RTN","PXRMSLST",74,0)
 S NOW=$$NOW^XLFDT
"RTN","PXRMSLST",75,0)
 S NOW=$$FMTE^XLFDT(NOW,"1P")
"RTN","PXRMSLST",76,0)
 ;
"RTN","PXRMSLST",77,0)
 ;These variables need to be setup every time because DIP kills them.
"RTN","PXRMSLST",78,0)
 S BY="NUMBER"
"RTN","PXRMSLST",79,0)
 S (FR,TO)=+$P(Y,U,1)
"RTN","PXRMSLST",80,0)
 S DHD="W ?0 D HED^PXRMSLST"
"RTN","PXRMSLST",81,0)
 ;
"RTN","PXRMSLST",82,0)
 ;If the status is resticted edit then this is a national code
"RTN","PXRMSLST",83,0)
 S NATIONAL=+$P($G(^PXRMD(801.9,+Y,0)),U,6)
"RTN","PXRMSLST",84,0)
 ;
"RTN","PXRMSLST",85,0)
 ;General display used by list function
"RTN","PXRMSLST",86,0)
 I MODE="GENERAL" S FLDS="[PXRM RESOLUTIONS (GENERAL)]" Q
"RTN","PXRMSLST",87,0)
 ;National status display
"RTN","PXRMSLST",88,0)
 I NATIONAL S FLDS="[PXRM RESOLUTIONS (NATIONAL)]" Q
"RTN","PXRMSLST",89,0)
 ;Local Status display
"RTN","PXRMSLST",90,0)
 I 'NATIONAL S FLDS="[PXRM RESOLUTIONS (LOCAL)]" Q
"RTN","PXRMSLST",91,0)
 Q
"RTN","PXRMSLST",92,0)
 ;
"RTN","PXRMSLST",93,0)
 ;Resolution type
"RTN","PXRMSLST",94,0)
TYP I +$P($G(^PXRMD(801.9,+D0,0)),U,6) W ?20,"NATIONAL" Q
"RTN","PXRMSLST",95,0)
 W ?20,"LOCAL"
"RTN","PXRMSLST",96,0)
 Q
"RTN","PXRMSTDC")
1^198
"RTN","PXRMTAX")
0^183^B27834336
"RTN","PXRMTAX",1,0)
PXRMTAX ; SLC/PKR - Handle taxonomy finding. ;05/19/2000
"RTN","PXRMTAX",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMTAX",3,0)
 ;
"RTN","PXRMTAX",4,0)
 ;=======================================================================
"RTN","PXRMTAX",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate taxonomy findings.
"RTN","PXRMTAX",6,0)
 N FIND0,FINDING,TAXIEN
"RTN","PXRMTAX",7,0)
 S TAXIEN=""
"RTN","PXRMTAX",8,0)
 F  S TAXIEN=$O(^PXD(811.9,PXRMITEM,20,"E","PXD(811.2,",TAXIEN)) Q:+TAXIEN=0  D
"RTN","PXRMTAX",9,0)
 . S FINDING=""
"RTN","PXRMTAX",10,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","PXD(811.2,",TAXIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMTAX",11,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMTAX",12,0)
 .. D FIEVAL(DFN,TAXIEN,FIND0,"",FINDING,.FIEVAL)
"RTN","PXRMTAX",13,0)
 Q
"RTN","PXRMTAX",14,0)
 ;
"RTN","PXRMTAX",15,0)
 ;=======================================================================
"RTN","PXRMTAX",16,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate taxonomy findings in terms.
"RTN","PXRMTAX",17,0)
 N FIND0,TAXIEN,TFIND0,TFINDING
"RTN","PXRMTAX",18,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMTAX",19,0)
 S TAXIEN=""
"RTN","PXRMTAX",20,0)
 F  S TAXIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","PXD(811.2,",TAXIEN)) Q:+TAXIEN=0  D
"RTN","PXRMTAX",21,0)
 . S TFINDING=""
"RTN","PXRMTAX",22,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","PXD(811.2,",TAXIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMTAX",23,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMTAX",24,0)
 .. D FIEVAL(DFN,TAXIEN,FIND0,TFIND0,TFINDING,.TFIEVAL)
"RTN","PXRMTAX",25,0)
 Q
"RTN","PXRMTAX",26,0)
 ;
"RTN","PXRMTAX",27,0)
 ;=======================================================================
"RTN","PXRMTAX",28,0)
FIEVAL(DFN,TAXIEN,FIND0,TFIND0,FINDING,FIEVAL) ;
"RTN","PXRMTAX",29,0)
 ;Make sure the taxonomy has been expanded and the expansion is current.
"RTN","PXRMTAX",30,0)
 D CHECK^PXRMBXTL(TAXIEN,"")
"RTN","PXRMTAX",31,0)
 N DATE,ENS,FLIST,INS,INVDATE,NICD0,NICD9,NICPT,NRCPT,PDS,PLS
"RTN","PXRMTAX",32,0)
 N RAS,SOURCE,STATUS,TEMP,TSORT,VALID,VIEN
"RTN","PXRMTAX",33,0)
 ;Setup the Patient Data Source control variables.
"RTN","PXRMTAX",34,0)
 S PDS=$P(^PXD(811.2,TAXIEN,0),U,4)
"RTN","PXRMTAX",35,0)
 I PDS["EN" S ENS=1
"RTN","PXRMTAX",36,0)
 E  S ENS=0
"RTN","PXRMTAX",37,0)
 I PDS["IN" S INS=1
"RTN","PXRMTAX",38,0)
 E  S INS=0
"RTN","PXRMTAX",39,0)
 I PDS["PL" S PLS=1
"RTN","PXRMTAX",40,0)
 E  S PLS=0
"RTN","PXRMTAX",41,0)
 I PDS["RA" S RAS=1
"RTN","PXRMTAX",42,0)
 E  S RAS=0
"RTN","PXRMTAX",43,0)
 ;The default is to search all locations.
"RTN","PXRMTAX",44,0)
 I PDS="" S (ENS,INS,PLS,RAS)=1
"RTN","PXRMTAX",45,0)
 S TEMP=$G(^PXD(811.3,TAXIEN,0))
"RTN","PXRMTAX",46,0)
 S NICD0=+$P(TEMP,U,3)
"RTN","PXRMTAX",47,0)
 I (NICD0>0)&(INS) D
"RTN","PXRMTAX",48,0)
 . D EVALICD0^PXRMDGPT(DFN,TAXIEN,.FLIST)
"RTN","PXRMTAX",49,0)
 S NICD9=+$P(TEMP,U,5)
"RTN","PXRMTAX",50,0)
 I NICD9>0 D
"RTN","PXRMTAX",51,0)
 . I INS D EVALICD9^PXRMDGPT(DFN,TAXIEN,.FLIST)
"RTN","PXRMTAX",52,0)
 . I PLS D EVAL^PXRMPROB(DFN,FIND0,TFIND0,TAXIEN,.FLIST)
"RTN","PXRMTAX",53,0)
 . I ENS D EVAL^PXRMVPOV(DFN,TAXIEN,.FLIST)
"RTN","PXRMTAX",54,0)
 S NICPT=+$P(TEMP,U,7)
"RTN","PXRMTAX",55,0)
 I (NICPT>0)&(ENS) D
"RTN","PXRMTAX",56,0)
 . D EVAL^PXRMVCPT(DFN,TAXIEN,.FLIST)
"RTN","PXRMTAX",57,0)
 S NRCPT=+$P(TEMP,U,9)
"RTN","PXRMTAX",58,0)
 I (NRCPT>0)&(RAS) D
"RTN","PXRMTAX",59,0)
 . D EVAL^PXRMRCPT(DFN,TAXIEN,.FLIST)
"RTN","PXRMTAX",60,0)
 ;Process the found list. Return the most recent non expired result.
"RTN","PXRMTAX",61,0)
 ;If there are no non-expired results return the most recent expired.
"RTN","PXRMTAX",62,0)
 ;The found list data is
"RTN","PXRMTAX",63,0)
 ;FLIST(INVDATE,SOURCE)=SOURCE IEN_U_VISIT IEN_U_DATE_U_CODE PTR_U_
"RTN","PXRMTAX",64,0)
 ;whatever is unique for this finding type.
"RTN","PXRMTAX",65,0)
 ;If the finding is not related to a visit then visit ien will be null.
"RTN","PXRMTAX",66,0)
 S INVDATE=""
"RTN","PXRMTAX",67,0)
 F  S INVDATE=$O(FLIST(INVDATE)) Q:+INVDATE=0  D
"RTN","PXRMTAX",68,0)
 . S SOURCE=""
"RTN","PXRMTAX",69,0)
 . F  S SOURCE=$O(FLIST(INVDATE,SOURCE)) Q:SOURCE=""  D
"RTN","PXRMTAX",70,0)
 .. S DATE=$P(FLIST(INVDATE,SOURCE),U,3)
"RTN","PXRMTAX",71,0)
 ..;Determine if the finding has expired.
"RTN","PXRMTAX",72,0)
 .. S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMTAX",73,0)
 ..;Set status=0 for a true finding for sorting.
"RTN","PXRMTAX",74,0)
 .. I VALID S STATUS=0
"RTN","PXRMTAX",75,0)
 .. E  S STATUS=1
"RTN","PXRMTAX",76,0)
 .. S TSORT(STATUS,INVDATE,SOURCE)=""
"RTN","PXRMTAX",77,0)
 ;Look for the most recent true finding.
"RTN","PXRMTAX",78,0)
 S STATUS=0
"RTN","PXRMTAX",79,0)
 S INVDATE=+$O(TSORT(STATUS,""))
"RTN","PXRMTAX",80,0)
 I INVDATE=0 D
"RTN","PXRMTAX",81,0)
 . S STATUS=1
"RTN","PXRMTAX",82,0)
 . S INVDATE=+$O(TSORT(STATUS,""))
"RTN","PXRMTAX",83,0)
 I INVDATE>0 D
"RTN","PXRMTAX",84,0)
 . I STATUS=1 D
"RTN","PXRMTAX",85,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMTAX",86,0)
 .. S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMTAX",87,0)
 . E  S FIEVAL(FINDING)=1
"RTN","PXRMTAX",88,0)
 . S SOURCE=$O(TSORT(STATUS,INVDATE,""))
"RTN","PXRMTAX",89,0)
 . S TEMP=FLIST(INVDATE,SOURCE)
"RTN","PXRMTAX",90,0)
 . S FIEVAL(FINDING,"DATE")=$P(TEMP,U,3)
"RTN","PXRMTAX",91,0)
 . S FIEVAL(FINDING,"CODEP")=$P(TEMP,U,4)
"RTN","PXRMTAX",92,0)
 . S FIEVAL(FINDING,"FINDING")=TAXIEN_";PXD(811.2,"
"RTN","PXRMTAX",93,0)
 . S FIEVAL(FINDING,"SOURCE")=$P(TEMP,U,1)_";"_SOURCE
"RTN","PXRMTAX",94,0)
 . S VIEN=$P(TEMP,U,2)
"RTN","PXRMTAX",95,0)
 . I VIEN'="" S FIEVAL(FINDING,"VIEN")=VIEN
"RTN","PXRMTAX",96,0)
 E  S FIEVAL(FINDING)=0
"RTN","PXRMTAX",97,0)
 Q
"RTN","PXRMTAX",98,0)
 ;
"RTN","PXRMTAX",99,0)
 ;=======================================================================
"RTN","PXRMTAX",100,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMTAX",101,0)
 ;maintenance output.
"RTN","PXRMTAX",102,0)
 N SROOT
"RTN","PXRMTAX",103,0)
 S SROOT=$P(FIEVAL(FINDING,"SOURCE"),";",2)
"RTN","PXRMTAX",104,0)
 I SROOT["AUPNVCPT" D OUTPUT^PXRMVCPT(.NLINES,.TEXT,FINDING,.FIEVAL) Q
"RTN","PXRMTAX",105,0)
 I SROOT["AUPNPROB" D OUTPUT^PXRMPROB(.NLINES,.TEXT,FINDING,.FIEVAL) Q
"RTN","PXRMTAX",106,0)
 I SROOT["AUPNVPOV" D OUTPUT^PXRMVPOV(.NLINES,.TEXT,FINDING,.FIEVAL) Q
"RTN","PXRMTAX",107,0)
 I SROOT["DGPTICD0" D OUTICD0^PXRMDGPT(.NLINES,.TEXT,FINDING,.FIEVAL) Q
"RTN","PXRMTAX",108,0)
 I SROOT["DGPTICD9" D OUTICD9^PXRMDGPT(.NLINES,.TEXT,FINDING,.FIEVAL) Q
"RTN","PXRMTAX",109,0)
 I SROOT["RADPT" D OUTPUT^PXRMRCPT(.NLINES,.TEXT,FINDING,.FIEVAL) Q
"RTN","PXRMTAX",110,0)
 Q
"RTN","PXRMTAX",111,0)
 ;
"RTN","PXRMTAX",112,0)
 ;=======================================================================
"RTN","PXRMTAX",113,0)
PDSXHELP ;Taxonomy field Patient Data Source executable help.
"RTN","PXRMTAX",114,0)
 N TEXT
"RTN","PXRMTAX",115,0)
 S TEXT(1)="This is a list of comma separated patient data sources."
"RTN","PXRMTAX",116,0)
 S TEXT(2)="You may use any combination of valid entries."
"RTN","PXRMTAX",117,0)
 S TEXT(3)="Valid entries are:"
"RTN","PXRMTAX",118,0)
 S TEXT(4)="  IN - inpatient from PTF"
"RTN","PXRMTAX",119,0)
 S TEXT(5)="  INDXLS - inpatient DXLS diagnosis only"
"RTN","PXRMTAX",120,0)
 S TEXT(6)="  INPR - inpatient primary diagnosis  only"
"RTN","PXRMTAX",121,0)
 S TEXT(7)="  EN - encounter PCE data"
"RTN","PXRMTAX",122,0)
 S TEXT(8)="  ENPR - encounter PCE data primary diagnosis only"
"RTN","PXRMTAX",123,0)
 S TEXT(9)="  PL - Problem List"
"RTN","PXRMTAX",124,0)
 S TEXT(10)="  RA - radiology CPT only"
"RTN","PXRMTAX",125,0)
 S TEXT(11)="  "
"RTN","PXRMTAX",126,0)
 D EN^DDIOL(.TEXT)
"RTN","PXRMTAX",127,0)
 Q
"RTN","PXRMTAX",128,0)
 ;
"RTN","PXRMTAX",129,0)
 ;=======================================================================
"RTN","PXRMTAX",130,0)
TAXEDIT(TAXIEN,KI) ;Whenever a taxonony item is edited rebuild the expanded
"RTN","PXRMTAX",131,0)
 ;taxonomy
"RTN","PXRMTAX",132,0)
 D DELEXTL^PXRMBXTL(TAXIEN)
"RTN","PXRMTAX",133,0)
 D CHECK^PXRMBXTL(TAXIEN,KI)
"RTN","PXRMTAX",134,0)
 Q
"RTN","PXRMTAX",135,0)
 ;
"RTN","PXRMTAX",136,0)
 ;=======================================================================
"RTN","PXRMTAX",137,0)
TAXKILL(TAXIEN) ;Called whenever a taxonony item is killed.
"RTN","PXRMTAX",138,0)
 D DELEXTL^PXRMBXTL(TAXIEN)
"RTN","PXRMTAX",139,0)
 Q
"RTN","PXRMTAX",140,0)
 ;
"RTN","PXRMTAX",141,0)
 ;=======================================================================
"RTN","PXRMTAX",142,0)
VPDS ;Taxonomy field Patient Data Source input transform. Check for valid
"RTN","PXRMTAX",143,0)
 ;patient data sources.
"RTN","PXRMTAX",144,0)
 N IND,NSOURCE,PDS,TEXT,VALID
"RTN","PXRMTAX",145,0)
 S VALID=1
"RTN","PXRMTAX",146,0)
 S X=$$UP^XLFSTR(X)
"RTN","PXRMTAX",147,0)
 S NSOURCE=$L(X,",")
"RTN","PXRMTAX",148,0)
 F IND=1:1:NSOURCE D
"RTN","PXRMTAX",149,0)
 . S PDS=$P(X,",",IND)
"RTN","PXRMTAX",150,0)
 .;Check for valid source abbreviations.
"RTN","PXRMTAX",151,0)
 . I PDS="IN" Q
"RTN","PXRMTAX",152,0)
 . I PDS="INDXLS" Q
"RTN","PXRMTAX",153,0)
 . I PDS="INPR" Q
"RTN","PXRMTAX",154,0)
 . I PDS="EN" Q
"RTN","PXRMTAX",155,0)
 . I PDS="ENPR" Q
"RTN","PXRMTAX",156,0)
 . I PDS="PL" Q
"RTN","PXRMTAX",157,0)
 . I PDS="RA" Q
"RTN","PXRMTAX",158,0)
 . S VALID=0
"RTN","PXRMTAX",159,0)
 . S TEXT=PDS_" is not a valid Patient Data Source"
"RTN","PXRMTAX",160,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMTAX",161,0)
 I 'VALID K X
"RTN","PXRMTAX",162,0)
 Q
"RTN","PXRMTAX",163,0)
 ;
"RTN","PXRMTAXP")
1^199
"RTN","PXRMTDLG")
0^111^B13709603
"RTN","PXRMTDLG",1,0)
PXRMTDLG ; SLC/PJH - Edit/Inquire Taxonomy Dialog ;05/03/2000
"RTN","PXRMTDLG",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMTDLG",3,0)
 ;
"RTN","PXRMTDLG",4,0)
 ;Called by option PXRM TAXONOMY DIALOG
"RTN","PXRMTDLG",5,0)
 ;
"RTN","PXRMTDLG",6,0)
START N DIC,PXRMGTYP,PXRMHD,PXRMTIEN,Y
"RTN","PXRMTDLG",7,0)
SELECT ;General selection
"RTN","PXRMTDLG",8,0)
 S PXRMHD="Taxonomy Dialog",PXRMGTYP="DTAX",PXRMTIEN=""
"RTN","PXRMTDLG",9,0)
 D START^PXRMSEL(PXRMHD,PXRMGTYP,"PXRMTIEN")
"RTN","PXRMTDLG",10,0)
 ;Should return a value
"RTN","PXRMTDLG",11,0)
 I PXRMTIEN D  G SELECT
"RTN","PXRMTDLG",12,0)
 .S PXRMHD="TAXONOMY NAME:"
"RTN","PXRMTDLG",13,0)
 .;Listman option
"RTN","PXRMTDLG",14,0)
 .D START^PXRMGEN(PXRMHD,PXRMGTYP,PXRMTIEN)
"RTN","PXRMTDLG",15,0)
 ;
"RTN","PXRMTDLG",16,0)
END Q
"RTN","PXRMTDLG",17,0)
 ;
"RTN","PXRMTDLG",18,0)
 ;List all Taxonomy Dialogs (for protocol PXRM SELECTION LIST)
"RTN","PXRMTDLG",19,0)
 ;-------------------------
"RTN","PXRMTDLG",20,0)
ALL N BY,DC,DHD,DIC,FLDS,FR,L,LOGIC,NOW,TO,Y
"RTN","PXRMTDLG",21,0)
 S Y=1
"RTN","PXRMTDLG",22,0)
 D SET
"RTN","PXRMTDLG",23,0)
 S DIC="^PXD(811.2,"
"RTN","PXRMTDLG",24,0)
 S BY=".01"
"RTN","PXRMTDLG",25,0)
 S FR=""
"RTN","PXRMTDLG",26,0)
 S TO=""
"RTN","PXRMTDLG",27,0)
 S DHD="W ?0 D HED^PXRMTDLG"
"RTN","PXRMTDLG",28,0)
 D DISP
"RTN","PXRMTDLG",29,0)
 Q
"RTN","PXRMTDLG",30,0)
 ;
"RTN","PXRMTDLG",31,0)
 ;Inquire/Print Option (for protocol PXRM GENERAL INQUIRE/PRINT)
"RTN","PXRMTDLG",32,0)
 ;--------------------
"RTN","PXRMTDLG",33,0)
INQ(Y) N BY,DC,DHD,DIC,FLDS,FR,L,LOGIC,NOW,TO
"RTN","PXRMTDLG",34,0)
 S DIC="^PXD(811.2,"
"RTN","PXRMTDLG",35,0)
 S DIC(0)="AEMQ"
"RTN","PXRMTDLG",36,0)
 D SET
"RTN","PXRMTDLG",37,0)
 D DISP
"RTN","PXRMTDLG",38,0)
 Q
"RTN","PXRMTDLG",39,0)
 ;
"RTN","PXRMTDLG",40,0)
 ;Display Header (see DHD variable)
"RTN","PXRMTDLG",41,0)
 ;--------------
"RTN","PXRMTDLG",42,0)
HED N TEMP,TEXTLEN,TEXTHED,TEXTUND
"RTN","PXRMTDLG",43,0)
 S TEXTHED="TAXONOMY DIALOG LIST"
"RTN","PXRMTDLG",44,0)
 S TEXTUND=$TR($J("",IOM)," ","-")
"RTN","PXRMTDLG",45,0)
 S TEMP=NOW_"  Page "_DC
"RTN","PXRMTDLG",46,0)
 S TEXTLEN=$L(TEMP)
"RTN","PXRMTDLG",47,0)
 W TEXTHED
"RTN","PXRMTDLG",48,0)
 W ?(IOM-TEXTLEN),TEMP
"RTN","PXRMTDLG",49,0)
 W !,TEXTUND,!!
"RTN","PXRMTDLG",50,0)
 Q
"RTN","PXRMTDLG",51,0)
 ;
"RTN","PXRMTDLG",52,0)
 ;DISPLAY (Display from FLDS array)
"RTN","PXRMTDLG",53,0)
 ;-------
"RTN","PXRMTDLG",54,0)
DISP S L=0,FLDS="[PXRM TAXONOMY DIALOG]"
"RTN","PXRMTDLG",55,0)
 D EN1^DIP
"RTN","PXRMTDLG",56,0)
 Q
"RTN","PXRMTDLG",57,0)
 ;
"RTN","PXRMTDLG",58,0)
SET ;Setup all the variables
"RTN","PXRMTDLG",59,0)
 ; Set Date for Header
"RTN","PXRMTDLG",60,0)
 S NOW=$$NOW^XLFDT
"RTN","PXRMTDLG",61,0)
 S NOW=$$FMTE^XLFDT(NOW,"1P")
"RTN","PXRMTDLG",62,0)
 ;
"RTN","PXRMTDLG",63,0)
 ;These variables need to be setup every time because DIP kills them.
"RTN","PXRMTDLG",64,0)
 S BY="NUMBER"
"RTN","PXRMTDLG",65,0)
 S (FR,TO)=+$P(Y,U,1)
"RTN","PXRMTDLG",66,0)
 S DHD="W ?0 D HED^PXRMTDLG"
"RTN","PXRMTDLG",67,0)
 ;
"RTN","PXRMTDLG",68,0)
 Q
"RTN","PXRMTDLG",69,0)
 ;
"RTN","PXRMTDLG",70,0)
 ;Build display for selected taxonomy - Called from PXRMGEN
"RTN","PXRMTDLG",71,0)
 ;---------------------------------------------------------
"RTN","PXRMTDLG",72,0)
DTAX(TIEN) ;
"RTN","PXRMTDLG",73,0)
 N ARRAY,CNT,SEQ,TSEQ
"RTN","PXRMTDLG",74,0)
 S VALMCNT=0 K ^TMP("PXRMGEN",$J)
"RTN","PXRMTDLG",75,0)
 ;Format headings to include taxonomy name
"RTN","PXRMTDLG",76,0)
 S HEADER=PXRMHD_" "_$P(^PXD(811.2,TIEN,0),U)
"RTN","PXRMTDLG",77,0)
 ;Get associated codes
"RTN","PXRMTDLG",78,0)
 D TAX^PXRMDLL(TIEN,.ARRAY)
"RTN","PXRMTDLG",79,0)
 ;Taxonomy header
"RTN","PXRMTDLG",80,0)
 S SEQ=1,TSEQ=$J(SEQ,3)_"  "
"RTN","PXRMTDLG",81,0)
 S CNT=0,VALMCNT=VALMCNT+1
"RTN","PXRMTDLG",82,0)
 S ^TMP("PXRMGEN",$J,VALMCNT,0)=TSEQ_$J("",15-$L(TSEQ))_ARRAY
"RTN","PXRMTDLG",83,0)
 ;Dialog and Procedure entries
"RTN","PXRMTDLG",84,0)
 F  S CNT=$O(ARRAY(CNT)) Q:CNT=""  D
"RTN","PXRMTDLG",85,0)
 .S TSEQ=$J(SEQ,3)_"."_CNT
"RTN","PXRMTDLG",86,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMTDLG",87,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)=TSEQ_$J("",15-$L(TSEQ))_$P(ARRAY(CNT),U)
"RTN","PXRMTDLG",88,0)
 .D CODES($P(ARRAY(CNT),U,2),TIEN)
"RTN","PXRMTDLG",89,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMTDLG",90,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMTDLG",91,0)
 ;Create headings
"RTN","PXRMTDLG",92,0)
 D CHGCAP^VALM("HEADER1","Taxonomy Dialog")
"RTN","PXRMTDLG",93,0)
 D CHGCAP^VALM("HEADER2","")
"RTN","PXRMTDLG",94,0)
 D CHGCAP^VALM("HEADER3","")
"RTN","PXRMTDLG",95,0)
 Q
"RTN","PXRMTDLG",96,0)
 ;
"RTN","PXRMTDLG",97,0)
 ;Selectable codes
"RTN","PXRMTDLG",98,0)
 ;----------------
"RTN","PXRMTDLG",99,0)
CODES(FILE,TIEN) ;
"RTN","PXRMTDLG",100,0)
 N CODES,CODE,DESC,DTEXT,SUB,TAB,TEXT
"RTN","PXRMTDLG",101,0)
 ;Display text
"RTN","PXRMTDLG",102,0)
 S TEXT="Selectable codes: ",TAB=18
"RTN","PXRMTDLG",103,0)
 ;Get array
"RTN","PXRMTDLG",104,0)
 D CODES^PXRMDLLA(FILE,TIEN,.CODES)
"RTN","PXRMTDLG",105,0)
 ;Move results into workfile
"RTN","PXRMTDLG",106,0)
 S SUB=""
"RTN","PXRMTDLG",107,0)
 F  S SUB=$O(CODES(SUB)) Q:SUB=""  D
"RTN","PXRMTDLG",108,0)
 .S CODE=$P(CODES(SUB),U,2),DESC=$P(CODES(SUB),U,3)
"RTN","PXRMTDLG",109,0)
 .S DTEXT=CODE_$J("",7-$L(CODE))_DESC
"RTN","PXRMTDLG",110,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMTDLG",111,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)=$J("",15)_$G(TEXT)_DTEXT
"RTN","PXRMTDLG",112,0)
 .S TEXT=$J("",TAB)
"RTN","PXRMTDLG",113,0)
 Q
"RTN","PXRMTDLG",114,0)
 ;
"RTN","PXRMTDLG",115,0)
 ;Display selectable codes - called from print template
"RTN","PXRMTDLG",116,0)
 ;-----------------------------------------------------
"RTN","PXRMTDLG",117,0)
TDES(FILE,D0,D1) ;
"RTN","PXRMTDLG",118,0)
 N CNT,CODE,DATA,IEN,TEXT,NODE
"RTN","PXRMTDLG",119,0)
 S NODE=$S(FILE=80:"SDX",FILE=81:"SPR")
"RTN","PXRMTDLG",120,0)
 S DATA=$G(^PXD(811.2,D0,NODE,D1,0)) Q:DATA=""
"RTN","PXRMTDLG",121,0)
 ;Get ien of code
"RTN","PXRMTDLG",122,0)
 S IEN=$P(DATA,U) Q:IEN=""
"RTN","PXRMTDLG",123,0)
 ;Translate ien to code
"RTN","PXRMTDLG",124,0)
 I FILE=80 S CODE=$P($G(^ICD9(IEN,0)),U)
"RTN","PXRMTDLG",125,0)
 I FILE=81 S CODE=$P($G(^ICPT(IEN,0)),U)
"RTN","PXRMTDLG",126,0)
 ;Set display text from taxonomy selectable code text
"RTN","PXRMTDLG",127,0)
 S TEXT=$P(DATA,U,2)
"RTN","PXRMTDLG",128,0)
 ;otherwise use icd9/cpt description
"RTN","PXRMTDLG",129,0)
 I TEXT="",FILE=80 S TEXT=$G(^ICD9(IEN,1))
"RTN","PXRMTDLG",130,0)
 I TEXT="",FILE=80 S TEXT=$P($G(^ICD9(IEN,0)),U,3)
"RTN","PXRMTDLG",131,0)
 I TEXT="",FILE=81 S TEXT=$P($G(^ICPT(IEN,0)),U,2)
"RTN","PXRMTDLG",132,0)
 S TEXT=" "_$E(TEXT,1,40)_$J("",40-$L(TEXT))
"RTN","PXRMTDLG",133,0)
 W $J(CODE,10)_TEXT
"RTN","PXRMTDLG",134,0)
 Q
"RTN","PXRMTEDT")
0^112^B2487466
"RTN","PXRMTEDT",1,0)
PXRMTEDT ; SLC/PKR - Edit a taxonomy item. ;06/16/2000
"RTN","PXRMTEDT",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMTEDT",3,0)
 ;
"RTN","PXRMTEDT",4,0)
 ;=======================================================================
"RTN","PXRMTEDT",5,0)
 N DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMTEDT",6,0)
GETNAME ;Get the name of the reminder taxonomy to edit.
"RTN","PXRMTEDT",7,0)
 K DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMTEDT",8,0)
 S DIC="^PXD(811.2,"
"RTN","PXRMTEDT",9,0)
 S DIC(0)="AEMQL"
"RTN","PXRMTEDT",10,0)
 S DIC("A")="Select Reminder Taxonomy: "
"RTN","PXRMTEDT",11,0)
 S DIC("S")="I $S(Y'<100000:1,(Y<100000)&($G(PXRMINST)=1)&(DUZ(0)=""@""):1,1:0)"
"RTN","PXRMTEDT",12,0)
 S DLAYGO=811.2
"RTN","PXRMTEDT",13,0)
 ;Set the starting place for additions.
"RTN","PXRMTEDT",14,0)
 D SETSTART^PXRMCOPY(DIC,1)
"RTN","PXRMTEDT",15,0)
 W !
"RTN","PXRMTEDT",16,0)
 D ^DIC
"RTN","PXRMTEDT",17,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMTEDT",18,0)
 I Y=-1 G END
"RTN","PXRMTEDT",19,0)
 S DA=$P(Y,U,1)
"RTN","PXRMTEDT",20,0)
 D EDIT(DIC,DA)
"RTN","PXRMTEDT",21,0)
 G GETNAME
"RTN","PXRMTEDT",22,0)
END ;
"RTN","PXRMTEDT",23,0)
 ;Reset starting place.
"RTN","PXRMTEDT",24,0)
 D SETSTART^PXRMCOPY(DIC,0)
"RTN","PXRMTEDT",25,0)
 Q
"RTN","PXRMTEDT",26,0)
 ;
"RTN","PXRMTEDT",27,0)
 ;=======================================================================
"RTN","PXRMTEDT",28,0)
EDIT(ROOT,DA) ;
"RTN","PXRMTEDT",29,0)
 N DIE,DR,DIDEL
"RTN","PXRMTEDT",30,0)
 S DIE=ROOT,DIDEL=811.2
"RTN","PXRMTEDT",31,0)
 W !!,"General Taxonomy Data"
"RTN","PXRMTEDT",32,0)
 S DR=".01"
"RTN","PXRMTEDT",33,0)
 D ^DIE
"RTN","PXRMTEDT",34,0)
 ;If DA is undefined that the entry was deleted.
"RTN","PXRMTEDT",35,0)
 I '$D(DA) Q
"RTN","PXRMTEDT",36,0)
 I $D(Y) Q
"RTN","PXRMTEDT",37,0)
 ;
"RTN","PXRMTEDT",38,0)
 S DR=".02"
"RTN","PXRMTEDT",39,0)
 D ^DIE
"RTN","PXRMTEDT",40,0)
 I '$D(DA) Q
"RTN","PXRMTEDT",41,0)
 I $D(Y) Q
"RTN","PXRMTEDT",42,0)
 ;
"RTN","PXRMTEDT",43,0)
 S DR="4"
"RTN","PXRMTEDT",44,0)
 D ^DIE
"RTN","PXRMTEDT",45,0)
 I '$D(DA) Q
"RTN","PXRMTEDT",46,0)
 I $D(Y) Q
"RTN","PXRMTEDT",47,0)
 ;
"RTN","PXRMTEDT",48,0)
 S DR="10"
"RTN","PXRMTEDT",49,0)
 D ^DIE
"RTN","PXRMTEDT",50,0)
 I '$D(DA) Q
"RTN","PXRMTEDT",51,0)
 I $D(Y) Q
"RTN","PXRMTEDT",52,0)
 ;
"RTN","PXRMTEDT",53,0)
 S DR="1.6"
"RTN","PXRMTEDT",54,0)
 D ^DIE
"RTN","PXRMTEDT",55,0)
 I '$D(DA) Q
"RTN","PXRMTEDT",56,0)
 I $D(Y) Q
"RTN","PXRMTEDT",57,0)
 ;
"RTN","PXRMTEDT",58,0)
 W !!,"ICD0 Range of Coded Values"
"RTN","PXRMTEDT",59,0)
 S DR="2103"
"RTN","PXRMTEDT",60,0)
 D ^DIE
"RTN","PXRMTEDT",61,0)
 I $D(Y) Q
"RTN","PXRMTEDT",62,0)
 ;
"RTN","PXRMTEDT",63,0)
 W !!,"ICD9 Range of Coded Values"
"RTN","PXRMTEDT",64,0)
 S DR="2102"
"RTN","PXRMTEDT",65,0)
 D ^DIE
"RTN","PXRMTEDT",66,0)
 I $D(Y) Q
"RTN","PXRMTEDT",67,0)
 ;
"RTN","PXRMTEDT",68,0)
 W !!,"CPT Range of Coded Values"
"RTN","PXRMTEDT",69,0)
 S DR="2104"
"RTN","PXRMTEDT",70,0)
 D ^DIE
"RTN","PXRMTEDT",71,0)
 I $D(Y) Q
"RTN","PXRMTEDT",72,0)
 Q
"RTN","PXRMTERM")
0^113^B13670091
"RTN","PXRMTERM",1,0)
PXRMTERM ; SLC/PKR - Handle reminder terms. ;06/16/2000
"RTN","PXRMTERM",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMTERM",3,0)
 ;
"RTN","PXRMTERM",4,0)
 ;=======================================================================
"RTN","PXRMTERM",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate reminder terms.
"RTN","PXRMTERM",6,0)
 N FINDING,EXP,IND,INVDATE,STATUS,TERMIEN,TFIEVAL,TSORT
"RTN","PXRMTERM",7,0)
 S TERMIEN=""
"RTN","PXRMTERM",8,0)
 F  S TERMIEN=$O(^PXD(811.9,PXRMITEM,20,"E","PXRMD(811.5,",TERMIEN)) Q:+TERMIEN=0  D
"RTN","PXRMTERM",9,0)
 . S FINDING=""
"RTN","PXRMTERM",10,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","PXRMD(811.5,",TERMIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMTERM",11,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMTERM",12,0)
 .. K TFIEVAL,TSORT
"RTN","PXRMTERM",13,0)
 .. D EVALTERM(DFN,FINDING,TERMIEN,.TFIEVAL)
"RTN","PXRMTERM",14,0)
 ..;Use the most recent of the true term findings as the value for the
"RTN","PXRMTERM",15,0)
 ..;finding. If there are no true ones use the most recent expired.
"RTN","PXRMTERM",16,0)
 .. S IND=0
"RTN","PXRMTERM",17,0)
 .. F  S IND=$O(TFIEVAL(IND)) Q:+IND=0  D
"RTN","PXRMTERM",18,0)
 ... S INVDATE=$$FMDFINVL^PXRMDATE(+$G(TFIEVAL(IND,"DATE")),1)
"RTN","PXRMTERM",19,0)
 ...;Set STATUS=0 for a true finding.
"RTN","PXRMTERM",20,0)
 ... I TFIEVAL(IND) S (STATUS,EXP)=0
"RTN","PXRMTERM",21,0)
 ... E  D
"RTN","PXRMTERM",22,0)
 .... S STATUS=1
"RTN","PXRMTERM",23,0)
 ....;Check for expired finding.
"RTN","PXRMTERM",24,0)
 .... I $D(TFIEVAL(IND,"EXPIRED")) S EXP=1
"RTN","PXRMTERM",25,0)
 .... E  S EXP=0
"RTN","PXRMTERM",26,0)
 ... S TSORT(STATUS,EXP,INVDATE,IND)=""
"RTN","PXRMTERM",27,0)
 .. ;First look for the most recent true finding.
"RTN","PXRMTERM",28,0)
 .. S INVDATE=+$O(TSORT(0,0,0))
"RTN","PXRMTERM",29,0)
 .. I INVDATE>0 S IND=$O(TSORT(0,0,INVDATE,""))
"RTN","PXRMTERM",30,0)
 ..;No true finding, look for the most recent expired finding.
"RTN","PXRMTERM",31,0)
 .. I IND="" D
"RTN","PXRMTERM",32,0)
 ... S INVDATE=+$O(TSORT(1,1,0))
"RTN","PXRMTERM",33,0)
 ... I INVDATE>0 S IND=$O(TSORT(1,1,INVDATE,""))
"RTN","PXRMTERM",34,0)
 .. I +IND>0 D
"RTN","PXRMTERM",35,0)
 ... M FIEVAL(FINDING)=TFIEVAL(IND)
"RTN","PXRMTERM",36,0)
 ... S FIEVAL(FINDING,"TERM")=^PXRMD(811.5,TERMIEN,0)
"RTN","PXRMTERM",37,0)
 Q
"RTN","PXRMTERM",38,0)
 ;
"RTN","PXRMTERM",39,0)
 ;=======================================================================
"RTN","PXRMTERM",40,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate all the findings in a term.
"RTN","PXRMTERM",41,0)
 ;Use the "E" cross-reference just like the finding evaluation.
"RTN","PXRMTERM",42,0)
 I '$D(^PXRMD(811.5,TERMIEN,20,"E")) D  Q
"RTN","PXRMTERM",43,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"WARNING","NOFI")="Warning no findings items in reminder term "_$P(^PXRMD(811.5,TERMIEN,0),U,1)
"RTN","PXRMTERM",44,0)
 N FTYPE
"RTN","PXRMTERM",45,0)
 S FTYPE=""
"RTN","PXRMTERM",46,0)
 F  S FTYPE=$O(^PXRMD(811.5,TERMIEN,20,"E",FTYPE)) Q:FTYPE=""  D
"RTN","PXRMTERM",47,0)
 . I FTYPE="AUTTEDT(" D EVALTERM^PXRMEDU(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",48,0)
 . I FTYPE="AUTTEXAM(" D EVALTERM^PXRMEXAM(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",49,0)
 . I FTYPE="AUTTHF(" D EVALTERM^PXRMHF(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",50,0)
 . I FTYPE="AUTTIMM(" D EVALTERM^PXRMIMM(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",51,0)
 . I FTYPE="AUTTSK(" D EVALTERM^PXRMSKIN(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",52,0)
 . I FTYPE="GMRD(120.51," D EVALTERM^PXRMMEAS(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",53,0)
 . I FTYPE="LAB(60," D EVALTERM^PXRMLAB(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",54,0)
 . I FTYPE="ORD(101.43," D EVALTERM^PXRMORDR(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",55,0)
 . I FTYPE="PXD(811.2," D EVALTERM^PXRMTAX(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",56,0)
 . I FTYPE="PXRMD(811.4," D EVALTERM^PXRMCF(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",57,0)
 . I FTYPE="PXRMD(811.5," D EVALTERM^PXRMTERM(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",58,0)
 . I FTYPE="PS(50.605," D EVALTERM^PXRMDRCL(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",59,0)
 . I FTYPE="PSDRUG(" D EVALTERM^PXRMDRUG(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",60,0)
 . I FTYPE="PSNDF(50.6," D EVALTERM^PXRMDGEN(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",61,0)
 . I FTYPE="RAMIS(71," D EVALTERM^PXRMRAD(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",62,0)
 . I FTYPE="YTT(601," D EVALTERM^PXRMMH(DFN,FINDING,TERMIEN,.TFIEVAL) Q
"RTN","PXRMTERM",63,0)
 Q
"RTN","PXRMTERM",64,0)
 ;
"RTN","PXRMTERM",65,0)
 ;=======================================================================
"RTN","PXRMTERM",66,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMTERM",67,0)
 ;maintenance output.
"RTN","PXRMTERM",68,0)
 N TEMP
"RTN","PXRMTERM",69,0)
 S TEMP="Reminder Term: "_$P(FIEVAL(FINDING,"TERM"),U,1)
"RTN","PXRMTERM",70,0)
 S NLINES=NLINES+1
"RTN","PXRMTERM",71,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMTERM",72,0)
 Q
"RTN","PXRMTERM",73,0)
 ;
"RTN","PXRMTF")
1^200
"RTN","PXRMTFOP")
1^214
"RTN","PXRMTGOP")
1^201
"RTN","PXRMTMED")
0^118^B1080449
"RTN","PXRMTMED",1,0)
PXRMTMED ; SLC/PKR/PJH - Edit a reminder term. ;06/16/2000
"RTN","PXRMTMED",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMTMED",3,0)
 ;
"RTN","PXRMTMED",4,0)
 ;=======================================================================
"RTN","PXRMTMED",5,0)
 N DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMTMED",6,0)
GETNAME ;Get the name of the term to edit.
"RTN","PXRMTMED",7,0)
 K DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMTMED",8,0)
 S DIC="^PXRMD(811.5,"
"RTN","PXRMTMED",9,0)
 S DIC(0)="AEMQL"
"RTN","PXRMTMED",10,0)
 S DIC("A")="Select Reminder Term: "
"RTN","PXRMTMED",11,0)
 S DLAYGO=811.5
"RTN","PXRMTMED",12,0)
 ;Set the starting place for additions.
"RTN","PXRMTMED",13,0)
 D SETSTART^PXRMCOPY(DIC,1)
"RTN","PXRMTMED",14,0)
 W !
"RTN","PXRMTMED",15,0)
 D ^DIC
"RTN","PXRMTMED",16,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMTMED",17,0)
 I Y=-1 G END
"RTN","PXRMTMED",18,0)
 S DA=$P(Y,U,1)
"RTN","PXRMTMED",19,0)
 D EDIT(DIC,DA)
"RTN","PXRMTMED",20,0)
 G GETNAME
"RTN","PXRMTMED",21,0)
END ;
"RTN","PXRMTMED",22,0)
 ;Reset starting place.
"RTN","PXRMTMED",23,0)
 D SETSTART^PXRMCOPY(DIC,0)
"RTN","PXRMTMED",24,0)
 Q
"RTN","PXRMTMED",25,0)
 ;
"RTN","PXRMTMED",26,0)
 ;=======================================================================
"RTN","PXRMTMED",27,0)
EDIT(ROOT,DA) ;
"RTN","PXRMTMED",28,0)
 N DIE,DR,TTYP,DIDEL
"RTN","PXRMTMED",29,0)
 S TTYP=$P($G(^PXRMD(811.5,DA,0)),U,2)
"RTN","PXRMTMED",30,0)
 S DIE=ROOT,DR="[PXRM EDIT REMINDER TERM]",DIDEL=811.5
"RTN","PXRMTMED",31,0)
 I TTYP="N" S DR="[PXRM EDIT NATIONAL TERM]"
"RTN","PXRMTMED",32,0)
 D ^DIE
"RTN","PXRMTMED",33,0)
 Q
"RTN","PXRMTMED",34,0)
 ;
"RTN","PXRMTP")
1^202
"RTN","PXRMTPA")
1^203
"RTN","PXRMTXST")
1^212
"RTN","PXRMTXXR")
1^213
"RTN","PXRMTYPE")
1^204
"RTN","PXRMUNIQ")
1^125
"RTN","PXRMUTIL")
0^126^B13426441
"RTN","PXRMUTIL",1,0)
PXRMUTIL ; SLC/PKR - Utility routines for use by PXRM. ;06/09/2000
"RTN","PXRMUTIL",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMUTIL",3,0)
 ;
"RTN","PXRMUTIL",4,0)
 ;=======================================================================
"RTN","PXRMUTIL",5,0)
ANTON(ANUM) ;Convert an alphabetic number to its decimal form. This is the
"RTN","PXRMUTIL",6,0)
 ;inverse of NTOAN.
"RTN","PXRMUTIL",7,0)
 N INT
"RTN","PXRMUTIL",8,0)
 S INT("A")=0,INT("B")=1,INT("C")=2,INT("D")=3,INT("E")=4,INT("F")=5
"RTN","PXRMUTIL",9,0)
 S INT("G")=6,INT("H")=7,INT("I")=8,INT("J")=9,INT("K")=10,INT("L")=11
"RTN","PXRMUTIL",10,0)
 S INT("M")=12,INT("N")=13,INT("O")=14,INT("P")=15,INT("Q")=16
"RTN","PXRMUTIL",11,0)
 S INT("R")=17,INT("S")=18,INT("T")=19,INT("U")=20,INT("V")=21
"RTN","PXRMUTIL",12,0)
 S INT("W")=22,INT("X")=23,INT("Y")=24,INT("Z")=25
"RTN","PXRMUTIL",13,0)
 ;
"RTN","PXRMUTIL",14,0)
 N LEN,NUMBR,P26,PWR
"RTN","PXRMUTIL",15,0)
 S LEN=$L(ANUM),NUMBER=0,P26=1
"RTN","PXRMUTIL",16,0)
 F DC=LEN:-1:1 D
"RTN","PXRMUTIL",17,0)
 . S DIGIT=$E(ANUM,DC)
"RTN","PXRMUTIL",18,0)
 . S NUMBER=NUMBER+(P26*INT(DIGIT))
"RTN","PXRMUTIL",19,0)
 . S P26=26*P26
"RTN","PXRMUTIL",20,0)
 Q NUMBER
"RTN","PXRMUTIL",21,0)
 ;
"RTN","PXRMUTIL",22,0)
 ;=======================================================================
"RTN","PXRMUTIL",23,0)
AWRITE(REF) ;Write all the descendants of the array reference.
"RTN","PXRMUTIL",24,0)
 ;REF is the starting array reference, for example A or ^TMP("PXRM",$J).
"RTN","PXRMUTIL",25,0)
 N DONE,IC,IND,LEN,PROOT,ROOT,START,TEMP
"RTN","PXRMUTIL",26,0)
 I REF="" Q
"RTN","PXRMUTIL",27,0)
 S PROOT=$P(REF,")",1)
"RTN","PXRMUTIL",28,0)
 ;Build the root so we can tell when we are done.
"RTN","PXRMUTIL",29,0)
 S TEMP=$NA(@REF)
"RTN","PXRMUTIL",30,0)
 S ROOT=$P(TEMP,")",1)
"RTN","PXRMUTIL",31,0)
 S REF=$Q(@REF)
"RTN","PXRMUTIL",32,0)
 I REF'[ROOT Q
"RTN","PXRMUTIL",33,0)
 S DONE=0
"RTN","PXRMUTIL",34,0)
 F IC=0:0 Q:(REF="")!(DONE)  D
"RTN","PXRMUTIL",35,0)
 . S START=$F(REF,ROOT)
"RTN","PXRMUTIL",36,0)
 . S LEN=$L(REF)
"RTN","PXRMUTIL",37,0)
 . S IND=$E(REF,START,LEN)
"RTN","PXRMUTIL",38,0)
 . W !,PROOT_IND,"=",@REF
"RTN","PXRMUTIL",39,0)
 . S REF=$Q(@REF)
"RTN","PXRMUTIL",40,0)
 . I REF'[ROOT S DONE=1
"RTN","PXRMUTIL",41,0)
 Q
"RTN","PXRMUTIL",42,0)
 ;
"RTN","PXRMUTIL",43,0)
 ;=======================================================================
"RTN","PXRMUTIL",44,0)
COND(FIND0,TFIND0,V) ;Evaluate the finding condition. TFIND0 will be defined
"RTN","PXRMUTIL",45,0)
 ;if this is being called from a term evaluation. V is the value.
"RTN","PXRMUTIL",46,0)
 N COND,CONVAL
"RTN","PXRMUTIL",47,0)
 S CONVAL=""
"RTN","PXRMUTIL",48,0)
 S COND=$P(TFIND0,U,11)
"RTN","PXRMUTIL",49,0)
 I COND="" S COND=$P(FIND0,U,11)
"RTN","PXRMUTIL",50,0)
 I $L(COND)>0 D
"RTN","PXRMUTIL",51,0)
 . S V=$TR(V," ","~")
"RTN","PXRMUTIL",52,0)
 . X COND
"RTN","PXRMUTIL",53,0)
 . S CONVAL=$T
"RTN","PXRMUTIL",54,0)
 Q CONVAL
"RTN","PXRMUTIL",55,0)
 ;
"RTN","PXRMUTIL",56,0)
 ;=======================================================================
"RTN","PXRMUTIL",57,0)
DIWPS(DIWF,DIWL,DIWR) ;Setup the formatting for the DIWP call. The variables
"RTN","PXRMUTIL",58,0)
 ;should be NEWED by the caller.
"RTN","PXRMUTIL",59,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMUTIL",60,0)
DIWPK ;
"RTN","PXRMUTIL",61,0)
 K ^UTILITY($J,"W")
"RTN","PXRMUTIL",62,0)
 Q
"RTN","PXRMUTIL",63,0)
 ;
"RTN","PXRMUTIL",64,0)
 ;=======================================================================
"RTN","PXRMUTIL",65,0)
FNFR(ROOT) ;Given the root of a file return the file number.
"RTN","PXRMUTIL",66,0)
 Q +$P(@(ROOT_"0)"),U,2)
"RTN","PXRMUTIL",67,0)
 ;
"RTN","PXRMUTIL",68,0)
 ;=======================================================================
"RTN","PXRMUTIL",69,0)
MATCH(N1,ARRAY1,KEY1,N2,ARRAY2,KEY2,NMAT,MARRAY) ;Given two sorted
"RTN","PXRMUTIL",70,0)
 ;arrays look for matches between the KEY1 piece of ARRAY1 and the KEY2
"RTN","PXRMUTIL",71,0)
 ;piece of ARRAY2. Return ARRAY1_U_ARRAY2 matches in MARRAY.
"RTN","PXRMUTIL",72,0)
 ;Initialize the number of matches to 0.
"RTN","PXRMUTIL",73,0)
 S NMAT=0
"RTN","PXRMUTIL",74,0)
 I (N1'>0)!(N2'>0) Q
"RTN","PXRMUTIL",75,0)
 N A1,A2,IC,JC
"RTN","PXRMUTIL",76,0)
 S (IC,JC)=1
"RTN","PXRMUTIL",77,0)
ML ;
"RTN","PXRMUTIL",78,0)
 S A1=$P(@ARRAY1@(IC),U,KEY1),A2=$P(@ARRAY2@(JC),U,KEY2)
"RTN","PXRMUTIL",79,0)
 I A1=A2 D  Q:IC>N1  Q:JC>N2  G ML
"RTN","PXRMUTIL",80,0)
 . S NMAT=NMAT+1
"RTN","PXRMUTIL",81,0)
 . S @MARRAY@(NMAT)=@ARRAY1@(IC)_U_@ARRAY2@(JC)
"RTN","PXRMUTIL",82,0)
 . S IC=IC+1,JC=JC+1
"RTN","PXRMUTIL",83,0)
 I A1<A2 S IC=IC+1 Q:IC>N1  G ML
"RTN","PXRMUTIL",84,0)
 S JC=JC+1 Q:JC>N2  G ML
"RTN","PXRMUTIL",85,0)
 Q
"RTN","PXRMUTIL",86,0)
 ;
"RTN","PXRMUTIL",87,0)
 ;=======================================================================
"RTN","PXRMUTIL",88,0)
NTOAN(NUMBER) ;Given an integer N return an alphabetic string that can be
"RTN","PXRMUTIL",89,0)
 ;used for sorting. This will be modulus 26. For example N=0 returns
"RTN","PXRMUTIL",90,0)
 ;A, N=26 returns BA etc.
"RTN","PXRMUTIL",91,0)
 N ALPH
"RTN","PXRMUTIL",92,0)
 S ALPH(0)="A",ALPH(1)="B",ALPH(2)="C",ALPH(3)="D",ALPH(4)="E"
"RTN","PXRMUTIL",93,0)
 S ALPH(5)="F",ALPH(6)="G",ALPH(7)="H",ALPH(8)="I",ALPH(9)="J"
"RTN","PXRMUTIL",94,0)
 S ALPH(10)="K",ALPH(11)="L",ALPH(12)="M",ALPH(13)="N",ALPH(14)="O"
"RTN","PXRMUTIL",95,0)
 S ALPH(15)="P",ALPH(16)="Q",ALPH(17)="R",ALPH(18)="S",ALPH(19)="T"
"RTN","PXRMUTIL",96,0)
 S ALPH(20)="U",ALPH(21)="V",ALPH(22)="W",ALPH(23)="X",ALPH(24)="Y"
"RTN","PXRMUTIL",97,0)
 S ALPH(25)="Z"
"RTN","PXRMUTIL",98,0)
 ;
"RTN","PXRMUTIL",99,0)
 N ANUM,DIGIT,NUM,P26,PC,PWR
"RTN","PXRMUTIL",100,0)
 S ANUM="",NUM=NUMBER,PWR=0
"RTN","PXRMUTIL",101,0)
 S P26(PWR)=1
"RTN","PXRMUTIL",102,0)
 F PWR=1:1 S P26(PWR)=26*P26(PWR-1) I P26(PWR)>NUMBER Q
"RTN","PXRMUTIL",103,0)
 S PWR=PWR-1
"RTN","PXRMUTIL",104,0)
 F PC=PWR:-1:0 D
"RTN","PXRMUTIL",105,0)
 . S DIGIT=NUM\P26(PC)
"RTN","PXRMUTIL",106,0)
 . S ANUM=ANUM_ALPH(DIGIT)
"RTN","PXRMUTIL",107,0)
 . S NUM=NUM-(DIGIT*P26(PC))
"RTN","PXRMUTIL",108,0)
 Q ANUM
"RTN","PXRMUTIL",109,0)
 ;
"RTN","PXRMUTIL",110,0)
 ;=======================================================================
"RTN","PXRMUTIL",111,0)
SORT(N,ARRAY,KEY) ;Sort an ARRAY with N elements into ascending order,
"RTN","PXRMUTIL",112,0)
 ;return the number of unique elements. KEY is the piece of ARRAY on
"RTN","PXRMUTIL",113,0)
 ;which to base the sort. The default is the first piece.
"RTN","PXRMUTIL",114,0)
 ;
"RTN","PXRMUTIL",115,0)
 I (N'>0)!(N=1) Q N
"RTN","PXRMUTIL",116,0)
 N IC,IND,TEMP
"RTN","PXRMUTIL",117,0)
 I '$D(KEY) S KEY=1
"RTN","PXRMUTIL",118,0)
 F IC=1:1:N D
"RTN","PXRMUTIL",119,0)
 . S TEMP=@ARRAY@(IC)
"RTN","PXRMUTIL",120,0)
 . S ^TMP($J,"SORT",$P(TEMP,U,KEY))=TEMP
"RTN","PXRMUTIL",121,0)
 S IND=""
"RTN","PXRMUTIL",122,0)
 F IC=1:1 S IND=$O(^TMP($J,"SORT",IND)) Q:IND=""  D
"RTN","PXRMUTIL",123,0)
 . S @ARRAY@(IC)=^TMP($J,"SORT",IND)
"RTN","PXRMUTIL",124,0)
 K ^TMP($J,"SORT")
"RTN","PXRMUTIL",125,0)
 ;Get rid of any redundant elements.
"RTN","PXRMUTIL",126,0)
 F IND=IC:1:N K @ARRAY@(IND)
"RTN","PXRMUTIL",127,0)
 Q IC-1
"RTN","PXRMUTIL",128,0)
 ;
"RTN","PXRMUTIL",129,0)
 ;=======================================================================
"RTN","PXRMUTIL",130,0)
STRREP(STRING,TS,RS) ;Replace every occurence of the target string (TS)
"RTN","PXRMUTIL",131,0)
 ;in STRING with the replacement string (RS).
"RTN","PXRMUTIL",132,0)
 ;Example 9.19 (page 220) in "The Complete Mumps" by John Lewkowicz:
"RTN","PXRMUTIL",133,0)
 ;  F  Q:STRING'[TS  S STRING=$P(STRING,TS)_RS_$P(STRING,TS,2,999)
"RTN","PXRMUTIL",134,0)
 ;fails if any portion of the target string is contained in the with
"RTN","PXRMUTIL",135,0)
 ;string. Therefore a more elaborate version is required.
"RTN","PXRMUTIL",136,0)
 ;
"RTN","PXRMUTIL",137,0)
 N IND,NPCS,STR
"RTN","PXRMUTIL",138,0)
 I STRING'[TS Q STRING
"RTN","PXRMUTIL",139,0)
 ;Count the number of pieces using the target string as the delimiter.
"RTN","PXRMUTIL",140,0)
 S NPCS=$L(STRING,TS)
"RTN","PXRMUTIL",141,0)
 ;Extract the pieces and concatenate RS
"RTN","PXRMUTIL",142,0)
 S STR=""
"RTN","PXRMUTIL",143,0)
 F IND=1:1:NPCS-1 S STR=STR_$P(STRING,TS,IND)_RS
"RTN","PXRMUTIL",144,0)
 S STR=STR_$P(STRING,TS,NPCS)
"RTN","PXRMUTIL",145,0)
 Q STR
"RTN","PXRMUTIL",146,0)
 ;
"RTN","PXRMV1I")
0^127^B43556104
"RTN","PXRMV1I",1,0)
PXRMV1I ; SLC/PJH,PKR - Inits for new REMINDER package. ;06/08/2000
"RTN","PXRMV1I",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMV1I",3,0)
 ;
"RTN","PXRMV1I",4,0)
 Q
"RTN","PXRMV1I",5,0)
 ;
"RTN","PXRMV1I",6,0)
 ;------------------------
"RTN","PXRMV1I",7,0)
BLDLSTR ;Make sure all the logic strings get built.
"RTN","PXRMV1I",8,0)
 D BMES^XPDUTL("Building logic strings")
"RTN","PXRMV1I",9,0)
 N IEN
"RTN","PXRMV1I",10,0)
 S IEN=0
"RTN","PXRMV1I",11,0)
 F  S IEN=$O(^PXD(811.9,IEN)) Q:+IEN=0  D
"RTN","PXRMV1I",12,0)
 . I $P(^PXD(811.9,IEN,0),U,1)["VA-" Q
"RTN","PXRMV1I",13,0)
 . D BLDPCLS^PXRMLOGX(IEN,"")
"RTN","PXRMV1I",14,0)
 . D BLDRESLS^PXRMLOGX(IEN,"")
"RTN","PXRMV1I",15,0)
 . D BLDAFL^PXRMLOGX(IEN,"")
"RTN","PXRMV1I",16,0)
 . D BLDINFL^PXRMLOGX(IEN,"")
"RTN","PXRMV1I",17,0)
 Q
"RTN","PXRMV1I",18,0)
 ;
"RTN","PXRMV1I",19,0)
 ;----------------------------------------------------------------
"RTN","PXRMV1I",20,0)
CHECK(ROUTINE) ;Search for routine entry point in the new computed findings
"RTN","PXRMV1I",21,0)
 ;file
"RTN","PXRMV1I",22,0)
 N SUB,TAG,FOUND
"RTN","PXRMV1I",23,0)
 S SUB=0,FOUND=""
"RTN","PXRMV1I",24,0)
 F  S SUB=$O(^PXRMD(811.4,SUB)) Q:'SUB  D  Q:FOUND]""
"RTN","PXRMV1I",25,0)
 .S TAG=$P($G(^PXRMD(811.4,SUB,0)),U,2,3)
"RTN","PXRMV1I",26,0)
 .I $P(TAG,U,2)_";"_$P(TAG,U)=ROUTINE S FOUND=SUB
"RTN","PXRMV1I",27,0)
 Q FOUND
"RTN","PXRMV1I",28,0)
 ;
"RTN","PXRMV1I",29,0)
 ;--------------------------------------
"RTN","PXRMV1I",30,0)
COMP ;Computed findings - set up file #811.4
"RTN","PXRMV1I",31,0)
 N ARRAY,DATA,DESC,IEN,STRING,SUB,TAG,FDA,FDAIEN
"RTN","PXRMV1I",32,0)
 ;Get each reminder in turn
"RTN","PXRMV1I",33,0)
 S STRING="Building Computed Findings file"
"RTN","PXRMV1I",34,0)
 D BMES^XPDUTL(STRING)
"RTN","PXRMV1I",35,0)
 ;Make sure any converted computed findings go into the site's
"RTN","PXRMV1I",36,0)
 ;number space.
"RTN","PXRMV1I",37,0)
 D SETSTART^PXRMCOPY("^PXRMD(811.4,",0)
"RTN","PXRMV1I",38,0)
 S IEN=0
"RTN","PXRMV1I",39,0)
 F  S IEN=$O(^PXD(811.9,IEN)) Q:'IEN  D
"RTN","PXRMV1I",40,0)
 .;Skip VA- reminders
"RTN","PXRMV1I",41,0)
 .I $P(^PXD(811.9,IEN,0),U,1)["VA-" Q
"RTN","PXRMV1I",42,0)
 .I $D(REDO) Q:IEN'=REMINDER
"RTN","PXRMV1I",43,0)
 .S SUB=0
"RTN","PXRMV1I",44,0)
 .;Get computed findings records
"RTN","PXRMV1I",45,0)
 .F  S SUB=$O(^PXD(811.9,IEN,10,SUB)) Q:'SUB  D
"RTN","PXRMV1I",46,0)
 ..S DATA=$G(^PXD(811.9,IEN,10,SUB,0)) Q:DATA=""
"RTN","PXRMV1I",47,0)
 ..;Extract description and routine entry point
"RTN","PXRMV1I",48,0)
 ..S TAG=$P(DATA,U),DESC=$P(DATA,U,5)
"RTN","PXRMV1I",49,0)
 ..;Ignore null Computed findings
"RTN","PXRMV1I",50,0)
 ..I TAG="" Q
"RTN","PXRMV1I",51,0)
 ..;Default null name to routine name
"RTN","PXRMV1I",52,0)
 ..I DESC="" S DESC=TAG
"RTN","PXRMV1I",53,0)
 ..;Create ARRAY of routine entry points
"RTN","PXRMV1I",54,0)
 ..;(using first short description found)
"RTN","PXRMV1I",55,0)
 ..I '$D(ARRAY(TAG)) S ARRAY(TAG)=DESC Q
"RTN","PXRMV1I",56,0)
 ..;If already set-up ignore
"RTN","PXRMV1I",57,0)
 ..I ARRAY(TAG)=DESC Q
"RTN","PXRMV1I",58,0)
 ..;Otherwise log duplication
"RTN","PXRMV1I",59,0)
 ..S STRING="The following CF's use the same routine"
"RTN","PXRMV1I",60,0)
 ..D BMES^XPDUTL(STRING)
"RTN","PXRMV1I",61,0)
 ..D BMES^XPDUTL(ARRAY(TAG)_" (retained)")
"RTN","PXRMV1I",62,0)
 ..D BMES^XPDUTL(DESC_" (replaced)")
"RTN","PXRMV1I",63,0)
 ;
"RTN","PXRMV1I",64,0)
 ;Create FDA for each entry in ARRAY
"RTN","PXRMV1I",65,0)
 S TAG=""
"RTN","PXRMV1I",66,0)
 F  S TAG=$O(ARRAY(TAG)) Q:TAG=""  D  Q:$D(MSG)
"RTN","PXRMV1I",67,0)
 .S DESC=ARRAY(TAG)
"RTN","PXRMV1I",68,0)
 .;Check if entry already exists
"RTN","PXRMV1I",69,0)
 .I $$CHECK(TAG) D  Q
"RTN","PXRMV1I",70,0)
 ..S STRING="Skipping update - CF "_DESC
"RTN","PXRMV1I",71,0)
 ..D BMES^XPDUTL(STRING)
"RTN","PXRMV1I",72,0)
 .;Build FDA array
"RTN","PXRMV1I",73,0)
 .K FDAIEN,FDA
"RTN","PXRMV1I",74,0)
 .;Description
"RTN","PXRMV1I",75,0)
 .S FDA(811.4,"+1,",.01)=DESC
"RTN","PXRMV1I",76,0)
 .;Routine
"RTN","PXRMV1I",77,0)
 .S FDA(811.4,"+1,",.02)=$P(TAG,";",2)
"RTN","PXRMV1I",78,0)
 .;Entry Point
"RTN","PXRMV1I",79,0)
 .S FDA(811.4,"+1,",.03)=$P(TAG,";")
"RTN","PXRMV1I",80,0)
 .;Print name, default to the .01 field
"RTN","PXRMV1I",81,0)
 .S FDA(811.4,"+1,",.04)=DESC
"RTN","PXRMV1I",82,0)
 .D UPDATE^DIE("","FDA","FDAIEN","MSG")
"RTN","PXRMV1I",83,0)
 .I $D(MSG) D ERR
"RTN","PXRMV1I",84,0)
 Q
"RTN","PXRMV1I",85,0)
 ;
"RTN","PXRMV1I",86,0)
 ;------------------------
"RTN","PXRMV1I",87,0)
DELCF ;Delete any existing entries in the computed findings file.
"RTN","PXRMV1I",88,0)
 ;Skip those in a site number space. This will apply to test
"RTN","PXRMV1I",89,0)
 ;sites only.
"RTN","PXRMV1I",90,0)
 N DA,DIK,SNUMS
"RTN","PXRMV1I",91,0)
 S SNUMS=100000
"RTN","PXRMV1I",92,0)
 S DIK="^PXRMD(811.4,"
"RTN","PXRMV1I",93,0)
 S DA=0
"RTN","PXRMV1I",94,0)
 F  S DA=$O(^PXRMD(811.4,DA)) Q:(+DA=0)!(+DA>SNUMS)  D
"RTN","PXRMV1I",95,0)
 . D ^DIK
"RTN","PXRMV1I",96,0)
 Q
"RTN","PXRMV1I",97,0)
 ;
"RTN","PXRMV1I",98,0)
 ;------------------------
"RTN","PXRMV1I",99,0)
DELDD ;Delete data dictionaries
"RTN","PXRMV1I",100,0)
 N DIU,FILENUM
"RTN","PXRMV1I",101,0)
 S DIU(0)=""
"RTN","PXRMV1I",102,0)
 F FILENUM=800,801.41,801.42,801.43,801.45,801.9,801.95,810.1,811.2,811.3,811.4,811.5,811.6,811.7,811.9 D
"RTN","PXRMV1I",103,0)
 . S DIU=FILENUM
"RTN","PXRMV1I",104,0)
 . D EN^DIU2
"RTN","PXRMV1I",105,0)
 Q
"RTN","PXRMV1I",106,0)
 ;
"RTN","PXRMV1I",107,0)
 ;------------------------
"RTN","PXRMV1I",108,0)
DELMH ;Delete any existing MH result entries in dialog file.
"RTN","PXRMV1I",109,0)
 ;Skip those in a site number space. This will apply to test
"RTN","PXRMV1I",110,0)
 ;sites only.
"RTN","PXRMV1I",111,0)
 N DA,DIK,DTYP,SNUMS
"RTN","PXRMV1I",112,0)
 S SNUMS=100000
"RTN","PXRMV1I",113,0)
 S DIK="^PXRMD(801.41,"
"RTN","PXRMV1I",114,0)
 S DA=0
"RTN","PXRMV1I",115,0)
 F  S DA=$O(^PXRMD(801.41,DA)) Q:(+DA=0)!(+DA>SNUMS)  D
"RTN","PXRMV1I",116,0)
 .;Dialog type
"RTN","PXRMV1I",117,0)
 .S DTYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMV1I",118,0)
 .;Delete only result groups and result elements
"RTN","PXRMV1I",119,0)
 .I (DTYP="T")!(DTYP="S") D ^DIK
"RTN","PXRMV1I",120,0)
 Q
"RTN","PXRMV1I",121,0)
 ;
"RTN","PXRMV1I",122,0)
 ;------------------------
"RTN","PXRMV1I",123,0)
DELORD ;Delete obsolete reminder definitions.
"RTN","PXRMV1I",124,0)
 N DA,DIK
"RTN","PXRMV1I",125,0)
 S DIK="^PXD(811.9,"
"RTN","PXRMV1I",126,0)
 S DA=+$O(^PXD(811.9,"B","VA-*SEAT BELT AND ACCIDENT SCREEN",""))
"RTN","PXRMV1I",127,0)
 I DA>0 D ^DIK
"RTN","PXRMV1I",128,0)
 S DA=+$O(^PXD(811.9,"B","VA-SEAT BELT EDUCATION",""))
"RTN","PXRMV1I",129,0)
 I DA>0 D ^DIK
"RTN","PXRMV1I",130,0)
 S DA=+$O(^PXD(811.9,"B","VA-*TETANUS DIPTHERIA IMMUNIZATION",""))
"RTN","PXRMV1I",131,0)
 I DA>0 D ^DIK
"RTN","PXRMV1I",132,0)
 Q
"RTN","PXRMV1I",133,0)
 ;
"RTN","PXRMV1I",134,0)
 ;------------------------
"RTN","PXRMV1I",135,0)
DELXTAX ;Delete all expanded taxonomies
"RTN","PXRMV1I",136,0)
 N DA,DIK
"RTN","PXRMV1I",137,0)
 S DIK="^PXD(811.3,"
"RTN","PXRMV1I",138,0)
 S DA=0
"RTN","PXRMV1I",139,0)
 F  S DA=$O(^PXD(811.3,DA)) Q:+DA=0  D
"RTN","PXRMV1I",140,0)
 . D ^DIK
"RTN","PXRMV1I",141,0)
 Q
"RTN","PXRMV1I",142,0)
 ;
"RTN","PXRMV1I",143,0)
 ;----------------------------------
"RTN","PXRMV1I",144,0)
DPCACHE ;Delete any existing patient caches
"RTN","PXRMV1I",145,0)
 N IND
"RTN","PXRMV1I",146,0)
 S IND="PXRMDFN"
"RTN","PXRMV1I",147,0)
 F  S IND=$O(^XTMP(IND)) Q:IND'["PXRMDFN"  D
"RTN","PXRMV1I",148,0)
 . K ^XTMP(IND)
"RTN","PXRMV1I",149,0)
 Q
"RTN","PXRMV1I",150,0)
 ;
"RTN","PXRMV1I",151,0)
 ;-------------
"RTN","PXRMV1I",152,0)
ERR ;Error Handler
"RTN","PXRMV1I",153,0)
 N ERROR,IC,REF
"RTN","PXRMV1I",154,0)
 S ERROR(1)="Unable to convert computed finding : "_DESC
"RTN","PXRMV1I",155,0)
 S ERROR(2)="Reminder conversion abandoned"
"RTN","PXRMV1I",156,0)
 S ERROR(3)="Error in UPDATE^DIE, needs further investigation"
"RTN","PXRMV1I",157,0)
 ;Move MSG into ERROR
"RTN","PXRMV1I",158,0)
 S REF="MSG"
"RTN","PXRMV1I",159,0)
 F IC=4:1 S REF=$Q(@REF) Q:REF=""  S ERROR(IC)=REF_"="_@REF
"RTN","PXRMV1I",160,0)
 ;Screen message
"RTN","PXRMV1I",161,0)
 D BMES^XPDUTL(.ERROR)
"RTN","PXRMV1I",162,0)
 ;Mail Message
"RTN","PXRMV1I",163,0)
 D ERR^PXRMV1IE(.ERROR)
"RTN","PXRMV1I",164,0)
 Q
"RTN","PXRMV1I",165,0)
 ;
"RTN","PXRMV1I",166,0)
 ;----------------------------------
"RTN","PXRMV1I",167,0)
NEWB ;Get ready for new style B cross-references.
"RTN","PXRMV1I",168,0)
 N FILE
"RTN","PXRMV1I",169,0)
 F FILE=801.41,811.9 D
"RTN","PXRMV1I",170,0)
 . D RMDUP^PXRMV1IG(FILE)
"RTN","PXRMV1I",171,0)
 . D TMPB^PXRMV1IG(FILE)
"RTN","PXRMV1I",172,0)
 Q
"RTN","PXRMV1I",173,0)
 ;
"RTN","PXRMV1I",174,0)
 ;----------------------------------
"RTN","PXRMV1I",175,0)
PARM ;Copy site disclaimer from PCE file
"RTN","PXRMV1I",176,0)
 S STRING="Saving site disclaimer"
"RTN","PXRMV1I",177,0)
 D BMES^XPDUTL(STRING)
"RTN","PXRMV1I",178,0)
 M ^PXRM(800,1,"DISC2")=^PX(815,1,"HS2")
"RTN","PXRMV1I",179,0)
 Q
"RTN","PXRMV1I",180,0)
 ;
"RTN","PXRMV1I",181,0)
 ;-------------------------------------
"RTN","PXRMV1I",182,0)
PRE ;These are the pre-installation actions
"RTN","PXRMV1I",183,0)
 ;Get ready for new style B cross-references.
"RTN","PXRMV1I",184,0)
 D NEWB
"RTN","PXRMV1I",185,0)
 ;Save inactive statuses of VA reminders
"RTN","PXRMV1I",186,0)
 D INSAV^PXRMV1IG
"RTN","PXRMV1I",187,0)
 ;Rename menu options
"RTN","PXRMV1I",188,0)
 D CHANGE^PXRMV1IG
"RTN","PXRMV1I",189,0)
 ;Delete any existing entries in the computed findings file.
"RTN","PXRMV1I",190,0)
 D DELCF
"RTN","PXRMV1I",191,0)
 ;Delete any existing MH test result groups or elements
"RTN","PXRMV1I",192,0)
 D DELMH
"RTN","PXRMV1I",193,0)
 ;Delete data dictionaries for all files with a new DD or DD changes.
"RTN","PXRMV1I",194,0)
 D DELDD
"RTN","PXRMV1I",195,0)
 Q
"RTN","PXRMV1I",196,0)
 ;
"RTN","PXRMV1I",197,0)
 ;---------------------------------------
"RTN","PXRMV1I",198,0)
POST ;These are the post-installation actions
"RTN","PXRMV1I",199,0)
 N MSG
"RTN","PXRMV1I",200,0)
 ;Parameters
"RTN","PXRMV1I",201,0)
 D PARM
"RTN","PXRMV1I",202,0)
 ;Parameter Definitions
"RTN","PXRMV1I",203,0)
 D ^PXRMV1X
"RTN","PXRMV1I",204,0)
 ;Computed Findings
"RTN","PXRMV1I",205,0)
 D COMP Q:$D(MSG)
"RTN","PXRMV1I",206,0)
 ;Reminders
"RTN","PXRMV1I",207,0)
 D RBLD^PXRMV1IA Q:$D(MSG)
"RTN","PXRMV1I",208,0)
 D DELXTAX
"RTN","PXRMV1I",209,0)
 D DPCACHE
"RTN","PXRMV1I",210,0)
 ;Taxonomy selectable codes
"RTN","PXRMV1I",211,0)
 D ^PXRMV1ID
"RTN","PXRMV1I",212,0)
 ;Make sure all the logic strings get built.
"RTN","PXRMV1I",213,0)
 D BLDLSTR
"RTN","PXRMV1I",214,0)
 ;Rebuild indexes.
"RTN","PXRMV1I",215,0)
 D REINDEX
"RTN","PXRMV1I",216,0)
 ;Make sure no spurious duplicate entries were created with the
"RTN","PXRMV1I",217,0)
 ;new B cross-reference.
"RTN","PXRMV1I",218,0)
 D RMDUP
"RTN","PXRMV1I",219,0)
 ;Delete obsolete reminder definitions.
"RTN","PXRMV1I",220,0)
 D DELORD
"RTN","PXRMV1I",221,0)
 ;Restore VA reminder inactive statuses.
"RTN","PXRMV1I",222,0)
 D INRES^PXRMV1IG
"RTN","PXRMV1I",223,0)
 ;Connect the findings to the terms for the VA-HEP C RISK ASSESSMENT
"RTN","PXRMV1I",224,0)
 ;reminder
"RTN","PXRMV1I",225,0)
 D CTERMS^PXRMV1IH
"RTN","PXRMV1I",226,0)
 ;Set starting ien to site number space.
"RTN","PXRMV1I",227,0)
 D SETSTART
"RTN","PXRMV1I",228,0)
 Q
"RTN","PXRMV1I",229,0)
 ;
"RTN","PXRMV1I",230,0)
 ;------------------------
"RTN","PXRMV1I",231,0)
REDO ;Reset Selected Reminders
"RTN","PXRMV1I",232,0)
 N MSG,PXRMREM,REDO,REMINDER
"RTN","PXRMV1I",233,0)
 D REM(.PXRMREM)
"RTN","PXRMV1I",234,0)
 S REMINDER=$P($G(PXRMREM(1)),U)
"RTN","PXRMV1I",235,0)
 I REMINDER D
"RTN","PXRMV1I",236,0)
 . S REDO=1
"RTN","PXRMV1I",237,0)
 . D COMP Q:$D(MSG)
"RTN","PXRMV1I",238,0)
 . D RBLD^PXRMV1IA
"RTN","PXRMV1I",239,0)
 Q
"RTN","PXRMV1I",240,0)
 ;
"RTN","PXRMV1I",241,0)
 ;------------------
"RTN","PXRMV1I",242,0)
REINDEX ;Rebuild all cross-references that have been changed to the new style
"RTN","PXRMV1I",243,0)
 N FILE
"RTN","PXRMV1I",244,0)
 F FILE=801.41,811.2,811.4,811.5,811.6,811.7,811.9 D
"RTN","PXRMV1I",245,0)
 . D REINDEX^PXRMV1IG(FILE)
"RTN","PXRMV1I",246,0)
 Q
"RTN","PXRMV1I",247,0)
 ;
"RTN","PXRMV1I",248,0)
 ;------------------
"RTN","PXRMV1I",249,0)
REM(REM) ;Reminder Selection
"RTN","PXRMV1I",250,0)
 N LIT,LIT1,DIC
"RTN","PXRMV1I",251,0)
 S DIC("A")="REMINDER to convert: "
"RTN","PXRMV1I",252,0)
 S LIT1="You must select a reminder!"
"RTN","PXRMV1I",253,0)
 D SEL(811.9,"AEQMZ",.REM)
"RTN","PXRMV1I",254,0)
 Q
"RTN","PXRMV1I",255,0)
 ;
"RTN","PXRMV1I",256,0)
 ;-------------------------
"RTN","PXRMV1I",257,0)
RMDUP ;Remove duplicate entries
"RTN","PXRMV1I",258,0)
 N FILE
"RTN","PXRMV1I",259,0)
 F FILE=801.41,811.9 D
"RTN","PXRMV1I",260,0)
 . D RMDUP^PXRMV1IG(FILE)
"RTN","PXRMV1I",261,0)
 Q
"RTN","PXRMV1I",262,0)
 ;
"RTN","PXRMV1I",263,0)
 ;Repeated Prompt using DIC
"RTN","PXRMV1I",264,0)
 ;-------------------------
"RTN","PXRMV1I",265,0)
SEL(FILE,MODE,ARRAY) ;
"RTN","PXRMV1I",266,0)
 N X,Y,CNT
"RTN","PXRMV1I",267,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMV1I",268,0)
 S CNT=0
"RTN","PXRMV1I",269,0)
 W !
"RTN","PXRMV1I",270,0)
 F  D  Q:$D(DTOUT)  Q:$D(DUOUT)  Q:CNT>0  Q:(Y=-1)&(CNT>0)
"RTN","PXRMV1I",271,0)
 .S DIC=FILE,DIC(0)=MODE
"RTN","PXRMV1I",272,0)
 .D ^DIC
"RTN","PXRMV1I",273,0)
 .I X=(U_U) S DTOUT=1
"RTN","PXRMV1I",274,0)
 .I '$D(DTOUT),('$D(DUOUT)) D
"RTN","PXRMV1I",275,0)
 ..I +Y'=-1 D  Q
"RTN","PXRMV1I",276,0)
 ...S CNT=CNT+1,ARRAY(CNT)=Y_U_Y(0,0)_U_$P(Y(0),U,3)
"RTN","PXRMV1I",277,0)
 ..W:CNT=0 !,LIT1
"RTN","PXRMV1I",278,0)
 .K DIC
"RTN","PXRMV1I",279,0)
 Q
"RTN","PXRMV1I",280,0)
 ;-------------------------
"RTN","PXRMV1I",281,0)
SETSTART ;Set starting ien to site number space.
"RTN","PXRMV1I",282,0)
 N FILE,ROOT
"RTN","PXRMV1I",283,0)
 F FILE=811.2,811.4,811.5,811.6,811.9 D
"RTN","PXRMV1I",284,0)
 . S ROOT=$$ROOT^DILFD(FILE)
"RTN","PXRMV1I",285,0)
 . D SETSTART^PXRMCOPY(ROOT,0)
"RTN","PXRMV1I",286,0)
 F FILE=801.41 D
"RTN","PXRMV1I",287,0)
 . S ROOT=$$ROOT^DILFD(FILE)
"RTN","PXRMV1I",288,0)
 . D SETSTART^PXRMDCPY(ROOT,0)
"RTN","PXRMV1I",289,0)
 Q
"RTN","PXRMV1I",290,0)
 ;
"RTN","PXRMV1IA")
0^128^B58204063
"RTN","PXRMV1IA",1,0)
PXRMV1IA ; SLC/PJH - Inits for new REMINDER package. ;04/10/2000
"RTN","PXRMV1IA",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMV1IA",3,0)
 ;
"RTN","PXRMV1IA",4,0)
 Q
"RTN","PXRMV1IA",5,0)
 ;
"RTN","PXRMV1IA",6,0)
 ;Copy Health Factor findings, Target Findings, Taxonomies
"RTN","PXRMV1IA",7,0)
 ;to new sub-file FINDINGS 
"RTN","PXRMV1IA",8,0)
 ;---------------------------------------------------------
"RTN","PXRMV1IA",9,0)
RBLD N CNT,DATA,IEN,FDAIEN,FDA,IND,MAP,NAME,PXRMCVRT,STRING
"RTN","PXRMV1IA",10,0)
 N SUB,SUB1,SUB2,WPTMP
"RTN","PXRMV1IA",11,0)
 S PXRMCVRT=1
"RTN","PXRMV1IA",12,0)
 ; Get each reminder in turn
"RTN","PXRMV1IA",13,0)
 S IEN=0
"RTN","PXRMV1IA",14,0)
 F  S IEN=$O(^PXD(811.9,IEN)) Q:'IEN  D  Q:$D(MSG)
"RTN","PXRMV1IA",15,0)
 .I $D(REDO) Q:IEN'=REMINDER
"RTN","PXRMV1IA",16,0)
 .K MAP,WPTMP
"RTN","PXRMV1IA",17,0)
 .S NAME=$P($G(^PXD(811.9,IEN,0)),U)
"RTN","PXRMV1IA",18,0)
 .;For testing
"RTN","PXRMV1IA",19,0)
 .;Skip VA-reminders - these will be broadcast
"RTN","PXRMV1IA",20,0)
 .I '$D(PXRMINST)&(NAME["VA-") Q
"RTN","PXRMV1IA",21,0)
 .;If reminder is converted skip - unless called from REDO^PXRMV1I
"RTN","PXRMV1IA",22,0)
 .I $$CONVDONE(IEN),'$D(REDO) D  Q
"RTN","PXRMV1IA",23,0)
 ..S STRING="Skipping conversion - reminder "_NAME
"RTN","PXRMV1IA",24,0)
 ..D BMES^XPDUTL(" "),BMES^XPDUTL(STRING)
"RTN","PXRMV1IA",25,0)
 .;Remove existing entries
"RTN","PXRMV1IA",26,0)
 .D RMONE(IEN)
"RTN","PXRMV1IA",27,0)
 .;Build FDA array
"RTN","PXRMV1IA",28,0)
 .K FDAIEN,FDA
"RTN","PXRMV1IA",29,0)
 .S FDAIEN(1)=IEN,CNT=1
"RTN","PXRMV1IA",30,0)
 .S FDA(811.9,"?1,",.01)="`"_IEN
"RTN","PXRMV1IA",31,0)
 .S STRING="Converting findings in reminder "_NAME
"RTN","PXRMV1IA",32,0)
 .D BMES^XPDUTL(" "),BMES^XPDUTL(STRING)
"RTN","PXRMV1IA",33,0)
 .;Target findings 
"RTN","PXRMV1IA",34,0)
 .D TARG(3)
"RTN","PXRMV1IA",35,0)
 .;Taxonomies
"RTN","PXRMV1IA",36,0)
 .D FIND(4)
"RTN","PXRMV1IA",37,0)
 .;Health Factor findings
"RTN","PXRMV1IA",38,0)
 .D FIND(6)
"RTN","PXRMV1IA",39,0)
 .;Computed findings
"RTN","PXRMV1IA",40,0)
 .D FIND(10)
"RTN","PXRMV1IA",41,0)
 .;Apply logic conversion
"RTN","PXRMV1IA",42,0)
 .D APPL(811.9,30)
"RTN","PXRMV1IA",43,0)
 .;Update ^PXD(811.9
"RTN","PXRMV1IA",44,0)
 .D UPDATE^DIE("S","FDA","FDAIEN","MSG")
"RTN","PXRMV1IA",45,0)
 .I $D(MSG) D ERR
"RTN","PXRMV1IA",46,0)
 Q
"RTN","PXRMV1IA",47,0)
 ;
"RTN","PXRMV1IA",48,0)
 ;Save Target findings to FDA
"RTN","PXRMV1IA",49,0)
 ;---------------------------
"RTN","PXRMV1IA",50,0)
TARG(TYP) ;
"RTN","PXRMV1IA",51,0)
 N IND,SUB1,DATA
"RTN","PXRMV1IA",52,0)
 S IND=0
"RTN","PXRMV1IA",53,0)
 F  S IND=$O(^PXD(811.9,IEN,3,IND)) Q:'IND  D
"RTN","PXRMV1IA",54,0)
 .;Target result finding item => findings item
"RTN","PXRMV1IA",55,0)
 .S SUB1=0
"RTN","PXRMV1IA",56,0)
 .F  S SUB1=$O(^PXD(811.9,IEN,3,IND,2,SUB1)) Q:'SUB1  D
"RTN","PXRMV1IA",57,0)
 ..S DATA=$G(^PXD(811.9,IEN,3,IND,2,SUB1,0)) Q:DATA=""
"RTN","PXRMV1IA",58,0)
 ..S CNT=CNT+1,FDA(811.902,"+"_CNT_",?1,",.01)=DATA
"RTN","PXRMV1IA",59,0)
 ..;Target result found text => finding found text 
"RTN","PXRMV1IA",60,0)
 ..D WFDA(3,3,811.902,4)
"RTN","PXRMV1IA",61,0)
 ..;Target result not found text => finding not found text
"RTN","PXRMV1IA",62,0)
 ..D WFDA(3,4,811.902,5)
"RTN","PXRMV1IA",63,0)
 ..; Default 'Use in resolution logic' to OR
"RTN","PXRMV1IA",64,0)
 ..D DFDA(811.902,7,"!")
"RTN","PXRMV1IA",65,0)
 Q
"RTN","PXRMV1IA",66,0)
 ;
"RTN","PXRMV1IA",67,0)
 ;Save other findings to FDA
"RTN","PXRMV1IA",68,0)
 ;--------------------------
"RTN","PXRMV1IA",69,0)
FIND(TYP) ;
"RTN","PXRMV1IA",70,0)
 N INC,IND,POINTER,OFFSET
"RTN","PXRMV1IA",71,0)
 ;Computed findings record has an extra field (short desc.)
"RTN","PXRMV1IA",72,0)
 ;INC is used to amend the PIECE variable when extracting CF data
"RTN","PXRMV1IA",73,0)
 S INC=0
"RTN","PXRMV1IA",74,0)
 ; Taxonomies
"RTN","PXRMV1IA",75,0)
 I TYP=4 S POINTER="PXD(811.2,"
"RTN","PXRMV1IA",76,0)
 ; Health Factors
"RTN","PXRMV1IA",77,0)
 I TYP=6 S POINTER="AUTTHF("
"RTN","PXRMV1IA",78,0)
 ; Computed Findings
"RTN","PXRMV1IA",79,0)
 I TYP=10 S POINTER="PXRMD(811.4,",INC=1
"RTN","PXRMV1IA",80,0)
 ;Move data entries into FDA
"RTN","PXRMV1IA",81,0)
 S IND=0
"RTN","PXRMV1IA",82,0)
 F  S IND=$O(^PXD(811.9,IEN,TYP,IND)) Q:'IND  D
"RTN","PXRMV1IA",83,0)
 .;pointer => findings item
"RTN","PXRMV1IA",84,0)
 .D SFDA(TYP,1,811.902,.01,POINTER)
"RTN","PXRMV1IA",85,0)
 .;Minimum age => minimum age
"RTN","PXRMV1IA",86,0)
 .D SFDA(TYP,2,811.902,1)
"RTN","PXRMV1IA",87,0)
 .;Maximum age => maximum age
"RTN","PXRMV1IA",88,0)
 .D SFDA(TYP,3,811.902,2)
"RTN","PXRMV1IA",89,0)
 .;Reminder frequency => reminder frequency
"RTN","PXRMV1IA",90,0)
 .D SFDA(TYP,4,811.902,3)
"RTN","PXRMV1IA",91,0)
 .;found text => finding found text 
"RTN","PXRMV1IA",92,0)
 .D WFDA(TYP,1,811.902,4)
"RTN","PXRMV1IA",93,0)
 .;not found text => finding not found text
"RTN","PXRMV1IA",94,0)
 .D WFDA(TYP,2,811.902,5)
"RTN","PXRMV1IA",95,0)
 .;Rank frequency => rank frequency
"RTN","PXRMV1IA",96,0)
 .D SFDA(TYP,5+INC,811.902,6)
"RTN","PXRMV1IA",97,0)
 .;Use in date due => use in resolution logic (YES becomes OR) 
"RTN","PXRMV1IA",98,0)
 .D SFDA(TYP,6+INC,811.902,7)
"RTN","PXRMV1IA",99,0)
 .;Use in apply logic => use in patient cohort logic
"RTN","PXRMV1IA",100,0)
 .D SFDA(TYP,7+INC,811.902,8)
"RTN","PXRMV1IA",101,0)
 .;Effective period => effective period
"RTN","PXRMV1IA",102,0)
 .D SFDA(TYP,8+INC,811.902,9)
"RTN","PXRMV1IA",103,0)
 .;Use inactive problems => use inactive problems
"RTN","PXRMV1IA",104,0)
 .D SFDA(TYP,9+INC,811.902,10)
"RTN","PXRMV1IA",105,0)
 Q
"RTN","PXRMV1IA",106,0)
 ;
"RTN","PXRMV1IA",107,0)
 ;Insert Defaults for new fields
"RTN","PXRMV1IA",108,0)
 ;------------------------------
"RTN","PXRMV1IA",109,0)
DFDA(FILE,FIELD,DATA) ;
"RTN","PXRMV1IA",110,0)
 S FDA(FILE,"+"_CNT_",?1,",FIELD)=DATA
"RTN","PXRMV1IA",111,0)
 Q
"RTN","PXRMV1IA",112,0)
 ;
"RTN","PXRMV1IA",113,0)
 ;Store multiple field entries in FDA
"RTN","PXRMV1IA",114,0)
 ;-----------------------------------
"RTN","PXRMV1IA",115,0)
MFDA(INODE,IND1,FILE,FIELD) ;
"RTN","PXRMV1IA",116,0)
 ;
"RTN","PXRMV1IA",117,0)
 ;Requires IEN and IND defined
"RTN","PXRMV1IA",118,0)
 ;
"RTN","PXRMV1IA",119,0)
 N SUB1,DATA S SUB1=0
"RTN","PXRMV1IA",120,0)
 ; Assemble fields into FDA array
"RTN","PXRMV1IA",121,0)
 F  S SUB1=$O(^PXD(811.9,IEN,INODE,IND,IND1,SUB1)) Q:'SUB1  D
"RTN","PXRMV1IA",122,0)
 .S DATA=$G(^PXD(811.9,IEN,INODE,IND,IND1,SUB1,0)) Q:DATA=""
"RTN","PXRMV1IA",123,0)
 .S CNT=CNT+1,FDA(FILE,"+"_CNT_",?1,",FIELD)=DATA
"RTN","PXRMV1IA",124,0)
 Q
"RTN","PXRMV1IA",125,0)
 ;
"RTN","PXRMV1IA",126,0)
 ;Store single field entries in FDA
"RTN","PXRMV1IA",127,0)
 ;---------------------------------
"RTN","PXRMV1IA",128,0)
SFDA(INODE,PIECE,FILE,FIELD,POINTER) ;
"RTN","PXRMV1IA",129,0)
 ;
"RTN","PXRMV1IA",130,0)
 ;Requires IEN and IND defined
"RTN","PXRMV1IA",131,0)
 ;
"RTN","PXRMV1IA",132,0)
 N DATA
"RTN","PXRMV1IA",133,0)
 S DATA=$G(^PXD(811.9,IEN,INODE,IND,0)) Q:DATA=""
"RTN","PXRMV1IA",134,0)
 ;Extract data item from string
"RTN","PXRMV1IA",135,0)
 S DATA=$P(DATA,U,PIECE)
"RTN","PXRMV1IA",136,0)
 ;If computed finding convert ROUTINE to CF IEN
"RTN","PXRMV1IA",137,0)
 I PIECE=1,INODE=10 S DATA=$$CHECK(DATA) Q:DATA=""
"RTN","PXRMV1IA",138,0)
 ;The first piece must be converted to a variable pointer
"RTN","PXRMV1IA",139,0)
 I PIECE=1 D
"RTN","PXRMV1IA",140,0)
 .S CNT=CNT+1
"RTN","PXRMV1IA",141,0)
 .;Build mapping for Apply logic conversion
"RTN","PXRMV1IA",142,0)
 .I TYP'=10 S MAP(TYP,DATA)=CNT-1
"RTN","PXRMV1IA",143,0)
 .;For CF's store actual routine name
"RTN","PXRMV1IA",144,0)
 .I TYP=10 D
"RTN","PXRMV1IA",145,0)
 ..N PROG,REF S REF=$P($G(^PXRMD(811.4,DATA,0)),U,2,3) Q:REF=""
"RTN","PXRMV1IA",146,0)
 ..S PROG=$P(REF,U,2)_";"_$P(REF,U)
"RTN","PXRMV1IA",147,0)
 ..S MAP(TYP,PROG)=CNT-1
"RTN","PXRMV1IA",148,0)
 .;Assemble pointer
"RTN","PXRMV1IA",149,0)
 .S DATA=DATA_";"_POINTER
"RTN","PXRMV1IA",150,0)
 ;If Use in Date Due (Resolution) field - convert 1 to OR and 0 to null
"RTN","PXRMV1IA",151,0)
 I FIELD=7 S DATA=$S(DATA=1:"!",1:"")
"RTN","PXRMV1IA",152,0)
 ;Store in FDA
"RTN","PXRMV1IA",153,0)
 S FDA(FILE,"+"_CNT_",?1,",FIELD)=DATA
"RTN","PXRMV1IA",154,0)
 Q
"RTN","PXRMV1IA",155,0)
 ;
"RTN","PXRMV1IA",156,0)
 ;Store WP entries in array WPTMP (create pointer from FDA)
"RTN","PXRMV1IA",157,0)
 ;-------------------------------
"RTN","PXRMV1IA",158,0)
WFDA(INODE,IND1,FILE,FIELD) ;
"RTN","PXRMV1IA",159,0)
 ;
"RTN","PXRMV1IA",160,0)
 ;Requires IEN,IND and TYP defined
"RTN","PXRMV1IA",161,0)
 ;
"RTN","PXRMV1IA",162,0)
 N SUB1,DATA,FOUND
"RTN","PXRMV1IA",163,0)
 S SUB1=0,FOUND=0
"RTN","PXRMV1IA",164,0)
 ; Assemble fields into FDA array
"RTN","PXRMV1IA",165,0)
 F  S SUB1=$O(^PXD(811.9,IEN,INODE,IND,IND1,SUB1)) Q:'SUB1  D
"RTN","PXRMV1IA",166,0)
 .S DATA=$G(^PXD(811.9,IEN,INODE,IND,IND1,SUB1,0)) Q:DATA=""
"RTN","PXRMV1IA",167,0)
 .S:'FOUND FOUND=1
"RTN","PXRMV1IA",168,0)
 .S WPTMP(TYP,IND,IND1,SUB1)=DATA
"RTN","PXRMV1IA",169,0)
 I FOUND D
"RTN","PXRMV1IA",170,0)
 .S FDA(FILE,"+"_CNT_",?1,",FIELD)="WPTMP("_TYP_","_IND_","_IND1_")"
"RTN","PXRMV1IA",171,0)
 Q
"RTN","PXRMV1IA",172,0)
 ;
"RTN","PXRMV1IA",173,0)
 ;Convert Apply logic
"RTN","PXRMV1IA",174,0)
 ;-------------------
"RTN","PXRMV1IA",175,0)
APPL(FILE,FIELD) ;
"RTN","PXRMV1IA",176,0)
 ;
"RTN","PXRMV1IA",177,0)
 ; Requires IEN and MAP array
"RTN","PXRMV1IA",178,0)
 ;
"RTN","PXRMV1IA",179,0)
 N DATA,CONV,NSUB,SUB,STR
"RTN","PXRMV1IA",180,0)
 ;Get existing apply logic
"RTN","PXRMV1IA",181,0)
 S DATA=$G(^PXD(811.9,IEN,9)) Q:DATA=""
"RTN","PXRMV1IA",182,0)
 ;Search for CF(nn),HF(nn) or TF(nn) entries and replace with FI(nnn)
"RTN","PXRMV1IA",183,0)
 ;
"RTN","PXRMV1IA",184,0)
 N TYP,TXT,DONE
"RTN","PXRMV1IA",185,0)
 F TYP=4,6,10 D
"RTN","PXRMV1IA",186,0)
 .I TYP=4 S TXT="TF("
"RTN","PXRMV1IA",187,0)
 .I TYP=6 S TXT="HF("
"RTN","PXRMV1IA",188,0)
 .I TYP=10 S TXT="CF("
"RTN","PXRMV1IA",189,0)
 .S DONE=0
"RTN","PXRMV1IA",190,0)
 .F  D  Q:DONE
"RTN","PXRMV1IA",191,0)
 ..I (TYP=4)!(TYP=6) D  Q:DONE
"RTN","PXRMV1IA",192,0)
 ...S SUB=+$P(DATA,TXT,2) I 'SUB S DONE=1
"RTN","PXRMV1IA",193,0)
 ..I TYP=10 D  Q:DONE
"RTN","PXRMV1IA",194,0)
 ...S SUB=$P($P(DATA,TXT,2),")") I SUB="" S DONE=1
"RTN","PXRMV1IA",195,0)
 ..S NSUB=+$G(MAP(TYP,SUB))
"RTN","PXRMV1IA",196,0)
 ..I SUB="OBESE;PXRMOBES" S NSUB=+$G(MAP(TYP,"BMI;PXRMBMI"))
"RTN","PXRMV1IA",197,0)
 ..S STR=TXT_SUB_")"
"RTN","PXRMV1IA",198,0)
 ..I NSUB S DATA=$P(DATA,STR)_"FI("_NSUB_")"_$P(DATA,STR,2,99)
"RTN","PXRMV1IA",199,0)
 ..I 'NSUB S DATA=$P(DATA,STR)_"FI(NOT FOUND)"_$P(DATA,STR,2,99)
"RTN","PXRMV1IA",200,0)
 ;
"RTN","PXRMV1IA",201,0)
 ;Give warning if unable to convert
"RTN","PXRMV1IA",202,0)
 I DATA["NOT FOUND" D  Q
"RTN","PXRMV1IA",203,0)
 .N ERROR
"RTN","PXRMV1IA",204,0)
 .S ERROR(1)="Reminder : "_$P($G(^PXD(811.9,IEN,0)),U)
"RTN","PXRMV1IA",205,0)
 .S ERROR(2)="Unable to convert APPLY LOGIC due to finding not found"
"RTN","PXRMV1IA",206,0)
 .S ERROR(3)="APPLY LOGIC :"
"RTN","PXRMV1IA",207,0)
 .S ERROR(4)=$G(^PXD(811.9,IEN,9))
"RTN","PXRMV1IA",208,0)
 .S ERROR(5)="COHORT LOGIC:"
"RTN","PXRMV1IA",209,0)
 .S ERROR(6)=DATA
"RTN","PXRMV1IA",210,0)
 .;Screen message
"RTN","PXRMV1IA",211,0)
 .D BMES^XPDUTL(.ERROR)
"RTN","PXRMV1IA",212,0)
 .;Mail message
"RTN","PXRMV1IA",213,0)
 .D ERR^PXRMV1IE(.ERROR)
"RTN","PXRMV1IA",214,0)
 ;
"RTN","PXRMV1IA",215,0)
 ;Save modified apply logic in new field - cohort logic
"RTN","PXRMV1IA",216,0)
 S FDA(FILE,"?1,",FIELD)=DATA
"RTN","PXRMV1IA",217,0)
 Q
"RTN","PXRMV1IA",218,0)
 ;
"RTN","PXRMV1IA",219,0)
 ;Remove FINDING entries for one reminder
"RTN","PXRMV1IA",220,0)
 ;---------------------------------------
"RTN","PXRMV1IA",221,0)
RMONE(IEN) ;
"RTN","PXRMV1IA",222,0)
 N DA,IND,NAME
"RTN","PXRMV1IA",223,0)
 S NAME=$P(^PXD(811.9,IEN,0),U,1)
"RTN","PXRMV1IA",224,0)
 S DA(1)=IEN
"RTN","PXRMV1IA",225,0)
 S IND=""
"RTN","PXRMV1IA",226,0)
 F  S IND=$O(^PXD(811.9,IEN,20,"B",IND)) Q:IND=""  D
"RTN","PXRMV1IA",227,0)
 .S DA=0
"RTN","PXRMV1IA",228,0)
 .F  S DA=$O(^PXD(811.9,IEN,20,"B",IND,DA)) Q:+DA=0  D
"RTN","PXRMV1IA",229,0)
 ..S DIK="^PXD(811.9,"_IEN_","_20_"," D ^DIK
"RTN","PXRMV1IA",230,0)
 Q
"RTN","PXRMV1IA",231,0)
 ;
"RTN","PXRMV1IA",232,0)
 ;See if conversion has already been done
"RTN","PXRMV1IA",233,0)
 ;---------------------------------------
"RTN","PXRMV1IA",234,0)
CONVDONE(IEN) ;
"RTN","PXRMV1IA",235,0)
 ;If no finding entries exist conversion has not been done
"RTN","PXRMV1IA",236,0)
 I +$D(^PXD(811.9,IEN,20))=0 Q 0
"RTN","PXRMV1IA",237,0)
 Q 1
"RTN","PXRMV1IA",238,0)
 ;Count finding file entries
"RTN","PXRMV1IA",239,0)
 ;N FIND,IC
"RTN","PXRMV1IA",240,0)
 ;S FIND=0,IC=0
"RTN","PXRMV1IA",241,0)
 ;F  S IC=$O(^PXD(811.9,IEN,20,IC)) Q:'IC  D
"RTN","PXRMV1IA",242,0)
 ;.S FIND=FIND+1
"RTN","PXRMV1IA",243,0)
 ;;Count Target Findings
"RTN","PXRMV1IA",244,0)
 ;N SUB,PRIOR
"RTN","PXRMV1IA",245,0)
 ;S PRIOR=0,SUB=0
"RTN","PXRMV1IA",246,0)
 ;F  S SUB=$O(^PXD(811.9,IEN,3,SUB)) Q:'SUB  D
"RTN","PXRMV1IA",247,0)
 ;.S IC=0
"RTN","PXRMV1IA",248,0)
 ;.F  S IC=$O(^PXD(811.9,IEN,3,SUB,2,IC)) Q:'IC  D
"RTN","PXRMV1IA",249,0)
 ;..S PRIOR=PRIOR+1
"RTN","PXRMV1IA",250,0)
 ;;Count Taxonomies,Health Factors and Computed Findings
"RTN","PXRMV1IA",251,0)
 ;F SUB=4,6,10 D
"RTN","PXRMV1IA",252,0)
 ;.S IC=0
"RTN","PXRMV1IA",253,0)
 ;.F  S IC=$O(^PXD(811.9,IEN,SUB,IC)) Q:'IC  D
"RTN","PXRMV1IA",254,0)
 ;..S PRIOR=PRIOR+1
"RTN","PXRMV1IA",255,0)
 ;;Check if count of findings matches prior entries conversion complete
"RTN","PXRMV1IA",256,0)
 ;I PRIOR=0 Q 1
"RTN","PXRMV1IA",257,0)
 ;I (PRIOR>0)&(PRIOR=FIND) Q 1
"RTN","PXRMV1IA",258,0)
 ;Otherwise not complete and must be re-run
"RTN","PXRMV1IA",259,0)
 Q 0
"RTN","PXRMV1IA",260,0)
 ;
"RTN","PXRMV1IA",261,0)
 ;Search for routine entry point in the new computed findings file
"RTN","PXRMV1IA",262,0)
 ;----------------------------------------------------------------
"RTN","PXRMV1IA",263,0)
CHECK(ROUTINE) ;
"RTN","PXRMV1IA",264,0)
 N BMI,SUB,TAG,FOUND
"RTN","PXRMV1IA",265,0)
 ;Convert PXRMOBES to VA-BMI
"RTN","PXRMV1IA",266,0)
 S BMI=$O(^PXRMD(811.4,"B","VA-BMI",""))
"RTN","PXRMV1IA",267,0)
 I (ROUTINE="OBESE;PXRMOBES"),BMI Q BMI
"RTN","PXRMV1IA",268,0)
 ;Otherwise get ien of CF
"RTN","PXRMV1IA",269,0)
 S SUB=0,FOUND=""
"RTN","PXRMV1IA",270,0)
 F  S SUB=$O(^PXRMD(811.4,SUB)) Q:'SUB  D  Q:FOUND]""
"RTN","PXRMV1IA",271,0)
 .S TAG=$P($G(^PXRMD(811.4,SUB,0)),U,2,3)
"RTN","PXRMV1IA",272,0)
 .I $P(TAG,U,2)_";"_$P(TAG,U)=ROUTINE S FOUND=SUB
"RTN","PXRMV1IA",273,0)
 Q FOUND
"RTN","PXRMV1IA",274,0)
 ;
"RTN","PXRMV1IA",275,0)
 ;Error Handler
"RTN","PXRMV1IA",276,0)
 ;-------------
"RTN","PXRMV1IA",277,0)
ERR N ERROR,IC,REF
"RTN","PXRMV1IA",278,0)
 S ERROR(1)="Unable to convert reminder : "_$P($G(^PXD(811.9,IEN,0)),U)
"RTN","PXRMV1IA",279,0)
 S ERROR(2)="Error in UPDATE^DIE, needs further investigation"
"RTN","PXRMV1IA",280,0)
 ;Move MSG into ERROR
"RTN","PXRMV1IA",281,0)
 S REF="MSG"
"RTN","PXRMV1IA",282,0)
 F IC=3:1 S REF=$Q(@REF) Q:REF=""  S ERROR(IC)=REF_"="_@REF
"RTN","PXRMV1IA",283,0)
 ;Screen message
"RTN","PXRMV1IA",284,0)
 D BMES^XPDUTL(.ERROR)
"RTN","PXRMV1IA",285,0)
 ;Mail Message
"RTN","PXRMV1IA",286,0)
 D ERR^PXRMV1IE(.ERROR)
"RTN","PXRMV1IA",287,0)
 Q
"RTN","PXRMV1ID")
0^129^B18209527
"RTN","PXRMV1ID",1,0)
PXRMV1ID ; SLC/PJH - Build selectable code lists ;10/25/1999
"RTN","PXRMV1ID",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMV1ID",3,0)
 ;
"RTN","PXRMV1ID",4,0)
 ;Implementation utility
"RTN","PXRMV1ID",5,0)
 ;----------------------
"RTN","PXRMV1ID",6,0)
START ;Lock entire taxonomy file
"RTN","PXRMV1ID",7,0)
 I $$LOCK D
"RTN","PXRMV1ID",8,0)
 .D BMES^XPDUTL("Generating selectable codes from taxonomy file")
"RTN","PXRMV1ID",9,0)
 .K ^TMP("PXRM",$J)
"RTN","PXRMV1ID",10,0)
 .N TAXIND
"RTN","PXRMV1ID",11,0)
 .S TAXIND=0
"RTN","PXRMV1ID",12,0)
 .F  S TAXIND=$O(^PXD(811.2,TAXIND)) Q:'TAXIND  D
"RTN","PXRMV1ID",13,0)
 ..;Remove any existing entries
"RTN","PXRMV1ID",14,0)
 ..D DEL(TAXIND)
"RTN","PXRMV1ID",15,0)
 ..;Build new list of selectable codes
"RTN","PXRMV1ID",16,0)
 ..D BCL(TAXIND)
"RTN","PXRMV1ID",17,0)
 .D BMES^XPDUTL("Generation completed")
"RTN","PXRMV1ID",18,0)
 D UNLOCK
"RTN","PXRMV1ID",19,0)
 Q
"RTN","PXRMV1ID",20,0)
 ;
"RTN","PXRMV1ID",21,0)
 ;Build the list of codes for one taxonomy
"RTN","PXRMV1ID",22,0)
 ;----------------------------------------
"RTN","PXRMV1ID",23,0)
BCL(TAXIND) ;
"RTN","PXRMV1ID",24,0)
 N CODELIST,IC,FINDING,FILE,HIGH,LOW,NCE,TEMP
"RTN","PXRMV1ID",25,0)
 ;
"RTN","PXRMV1ID",26,0)
 ;Setup file names for indirection, these will hold the taxonomy lists.
"RTN","PXRMV1ID",27,0)
 N ICD9IEN,ICPTIEN
"RTN","PXRMV1ID",28,0)
 S ICD9IEN="^TMP(""PXRM"",$J,""ICD9IEN"")"
"RTN","PXRMV1ID",29,0)
 S ICPTIEN="^TMP(""PXRM"",$J,""ICPTIEN"")"
"RTN","PXRMV1ID",30,0)
 ;
"RTN","PXRMV1ID",31,0)
 S NCE=0
"RTN","PXRMV1ID",32,0)
 F FILE=80,81 D
"RTN","PXRMV1ID",33,0)
 .S IC=0
"RTN","PXRMV1ID",34,0)
 .F  S IC=$O(^PXD(811.2,TAXIND,FILE,IC)) Q:+IC=0  D
"RTN","PXRMV1ID",35,0)
 ..S TEMP=$G(^PXD(811.2,TAXIND,FILE,IC,0))
"RTN","PXRMV1ID",36,0)
 ..;Append the taxonomy and finding information to CODELIST.
"RTN","PXRMV1ID",37,0)
 ..S NCE=NCE+1
"RTN","PXRMV1ID",38,0)
 ..S CODELIST(NCE)=TEMP_U_FILE
"RTN","PXRMV1ID",39,0)
 ;CODELIST is LOW_U_HIGH_U_FILE
"RTN","PXRMV1ID",40,0)
 ;Go through the standard coded list and get the file IEN for each entry.
"RTN","PXRMV1ID",41,0)
 F IC=1:1:NCE D
"RTN","PXRMV1ID",42,0)
 .S LOW=$P(CODELIST(IC),U,1)
"RTN","PXRMV1ID",43,0)
 .S HIGH=$P(CODELIST(IC),U,2)
"RTN","PXRMV1ID",44,0)
 .S FILE=$P(CODELIST(IC),U,3)
"RTN","PXRMV1ID",45,0)
 .I FILE=80 D ICD9(LOW,HIGH) Q
"RTN","PXRMV1ID",46,0)
 .I FILE=81 D ICPT(LOW,HIGH) Q
"RTN","PXRMV1ID",47,0)
 ;
"RTN","PXRMV1ID",48,0)
 ;Store the results.
"RTN","PXRMV1ID",49,0)
 D STORE(TAXIND)
"RTN","PXRMV1ID",50,0)
 K ^TMP("PXRM",$J,"ICD9IEN")
"RTN","PXRMV1ID",51,0)
 K ^TMP("PXRM",$J,"ICPTIEN")
"RTN","PXRMV1ID",52,0)
 Q
"RTN","PXRMV1ID",53,0)
 ;
"RTN","PXRMV1ID",54,0)
 ;=======================================================================
"RTN","PXRMV1ID",55,0)
DEL(TAXIND) ;Delete existing entry
"RTN","PXRMV1ID",56,0)
 K ^PXD(811.2,TAXIND,"SDX")
"RTN","PXRMV1ID",57,0)
 K ^PXD(811.2,TAXIND,"SPR")
"RTN","PXRMV1ID",58,0)
 Q
"RTN","PXRMV1ID",59,0)
 ;
"RTN","PXRMV1ID",60,0)
 ;Build the list of internal entries for ICD9 (File 80)
"RTN","PXRMV1ID",61,0)
 ;-----------------------------------------------------
"RTN","PXRMV1ID",62,0)
ICD9(LOW,HIGH) ;
"RTN","PXRMV1ID",63,0)
 N END,IEN,IND
"RTN","PXRMV1ID",64,0)
 S IND=LOW_" "
"RTN","PXRMV1ID",65,0)
 S END=HIGH_" "
"RTN","PXRMV1ID",66,0)
 F  Q:(IND]END)!(+IND>+END)!(IND="")  D
"RTN","PXRMV1ID",67,0)
 .S IEN=$O(^ICD9("BA",IND,""))
"RTN","PXRMV1ID",68,0)
 .I (+IEN>0),$$CODE^PXRMVAL($TR(IND," "),80) D
"RTN","PXRMV1ID",69,0)
 ..S ^TMP("PXRM",$J,"ICD9IEN",IND)=IEN
"RTN","PXRMV1ID",70,0)
 .S IND=$O(^ICD9("BA",IND))
"RTN","PXRMV1ID",71,0)
 Q
"RTN","PXRMV1ID",72,0)
 ;
"RTN","PXRMV1ID",73,0)
 ;Build the list of internal entries for ICPT (File 81)
"RTN","PXRMV1ID",74,0)
 ;-----------------------------------------------------
"RTN","PXRMV1ID",75,0)
ICPT(LOW,HIGH) ;
"RTN","PXRMV1ID",76,0)
 N IEN,IND
"RTN","PXRMV1ID",77,0)
 S IND=LOW
"RTN","PXRMV1ID",78,0)
 F  Q:(IND]HIGH)!(+IND>+HIGH)!(IND="")  D
"RTN","PXRMV1ID",79,0)
 .S IEN=$O(^ICPT("B",IND,""))
"RTN","PXRMV1ID",80,0)
 .I (+IEN>0),$$CODE^PXRMVAL($TR(IND," "),81) D
"RTN","PXRMV1ID",81,0)
 ..S ^TMP("PXRM",$J,"ICPTIEN",IND)=IEN
"RTN","PXRMV1ID",82,0)
 .S IND=$O(^ICPT("B",IND))
"RTN","PXRMV1ID",83,0)
 Q
"RTN","PXRMV1ID",84,0)
 ;
"RTN","PXRMV1ID",85,0)
 ;Lock the taxonomy file
"RTN","PXRMV1ID",86,0)
LOCK() N IND,LOCK
"RTN","PXRMV1ID",87,0)
 S LOCK=0
"RTN","PXRMV1ID",88,0)
 F IND=1:1:30 Q:LOCK  D
"RTN","PXRMV1ID",89,0)
 .L +^PXD(811.2):1
"RTN","PXRMV1ID",90,0)
 .S LOCK=$T
"RTN","PXRMV1ID",91,0)
 ;If we can't get lock generate an error and quit.
"RTN","PXRMV1ID",92,0)
 I 'LOCK D  Q 0
"RTN","PXRMV1ID",93,0)
 .D BMES^XPDUTL("Could not get lock for taxonomy file ")
"RTN","PXRMV1ID",94,0)
 Q 1
"RTN","PXRMV1ID",95,0)
 ;
"RTN","PXRMV1ID",96,0)
 ;Store selectable codes in taxonomy
"RTN","PXRMV1ID",97,0)
 ;----------------------------------
"RTN","PXRMV1ID",98,0)
STORE(TAXIND) ;
"RTN","PXRMV1ID",99,0)
 K ^TMP("PXRMV1ID",$J)
"RTN","PXRMV1ID",100,0)
 N FDA,FDAIEN,FITEM,I2N,IEN,IND,MSG,NAME,SEQ,SUB,TEMP
"RTN","PXRMV1ID",101,0)
 ;
"RTN","PXRMV1ID",102,0)
 S NAME=$P(^PXD(811.2,TAXIND,0),U)
"RTN","PXRMV1ID",103,0)
 ;
"RTN","PXRMV1ID",104,0)
 S FDAIEN(1)=TAXIND
"RTN","PXRMV1ID",105,0)
 ;
"RTN","PXRMV1ID",106,0)
 S SUB="",IND=1,SEQ=0
"RTN","PXRMV1ID",107,0)
 F  S SUB=$O(^TMP("PXRM",$J,"ICD9IEN",SUB)) Q:SUB=""  D
"RTN","PXRMV1ID",108,0)
 .S IEN=^TMP("PXRM",$J,"ICD9IEN",SUB)
"RTN","PXRMV1ID",109,0)
 .S IND=IND+1,SEQ=SEQ+1
"RTN","PXRMV1ID",110,0)
 .S I2N="+"_IND_","_FDAIEN(1)_","
"RTN","PXRMV1ID",111,0)
 .S ^TMP("PXRMV1ID",$J,811.23102,I2N,.01)=IEN
"RTN","PXRMV1ID",112,0)
 .;S ^TMP("PXRMV1ID",$J,811.23102,I2N,.01)=SEQ
"RTN","PXRMV1ID",113,0)
 .;S ^TMP("PXRMV1ID",$J,811.23102,I2N,1)=IEN
"RTN","PXRMV1ID",114,0)
 .;S ^TMP("PXRMV1ID",$J,811.23102,I2N,3)=1
"RTN","PXRMV1ID",115,0)
 ;
"RTN","PXRMV1ID",116,0)
 S SEQ=0
"RTN","PXRMV1ID",117,0)
 F  S SUB=$O(^TMP("PXRM",$J,"ICPTIEN",SUB)) Q:SUB=""  D
"RTN","PXRMV1ID",118,0)
 .S IEN=^TMP("PXRM",$J,"ICPTIEN",SUB)
"RTN","PXRMV1ID",119,0)
 .S IND=IND+1,SEQ=SEQ+1
"RTN","PXRMV1ID",120,0)
 .S I2N="+"_IND_","_FDAIEN(1)_","
"RTN","PXRMV1ID",121,0)
 .S ^TMP("PXRMV1ID",$J,811.23104,I2N,.01)=IEN
"RTN","PXRMV1ID",122,0)
 .;S ^TMP("PXRMV1ID",$J,811.23104,I2N,.01)=SEQ
"RTN","PXRMV1ID",123,0)
 .;S ^TMP("PXRMV1ID",$J,811.23104,I2N,1)=IEN
"RTN","PXRMV1ID",124,0)
 .;S ^TMP("PXRMV1ID",$J,811.23104,I2N,3)=1
"RTN","PXRMV1ID",125,0)
 ;
"RTN","PXRMV1ID",126,0)
 ;None found
"RTN","PXRMV1ID",127,0)
 I IND=1 Q
"RTN","PXRMV1ID",128,0)
 ;
"RTN","PXRMV1ID",129,0)
 S TEMP="^TMP(""PXRMV1ID"","_$J_")"
"RTN","PXRMV1ID",130,0)
 D UPDATE^DIE("",TEMP,"FDAIEN","MSG")
"RTN","PXRMV1ID",131,0)
 I $D(MSG) D ERR
"RTN","PXRMV1ID",132,0)
 K ^TMP("PXRMV1ID",$J)
"RTN","PXRMV1ID",133,0)
 Q
"RTN","PXRMV1ID",134,0)
 ;
"RTN","PXRMV1ID",135,0)
 ;Unlock the taxonomy
"RTN","PXRMV1ID",136,0)
 ;-------------------
"RTN","PXRMV1ID",137,0)
UNLOCK L -^PXD(811.2)
"RTN","PXRMV1ID",138,0)
 Q
"RTN","PXRMV1ID",139,0)
 ;
"RTN","PXRMV1ID",140,0)
 ;Error Handler
"RTN","PXRMV1ID",141,0)
 ;-------------
"RTN","PXRMV1ID",142,0)
ERR N ERROR,IC,REF
"RTN","PXRMV1ID",143,0)
 S ERROR(1)="Unable to build selectable codes for taxonomy : "
"RTN","PXRMV1ID",144,0)
 S ERROR(2)=NAME
"RTN","PXRMV1ID",145,0)
 S ERROR(3)="Error in UPDATE^DIE, needs further investigation"
"RTN","PXRMV1ID",146,0)
 ;Move MSG into ERROR
"RTN","PXRMV1ID",147,0)
 S REF="MSG"
"RTN","PXRMV1ID",148,0)
 F IC=4:1 S REF=$Q(@REF) Q:REF=""  S ERROR(IC)=REF_"="_@REF
"RTN","PXRMV1ID",149,0)
 ;Screen message
"RTN","PXRMV1ID",150,0)
 D BMES^XPDUTL(.ERROR)
"RTN","PXRMV1ID",151,0)
 ;Mail Message
"RTN","PXRMV1ID",152,0)
 D ERR^PXRMV1IE(.ERROR)
"RTN","PXRMV1ID",153,0)
 Q
"RTN","PXRMV1IE")
0^130^B2637503
"RTN","PXRMV1IE",1,0)
PXRMV1IE ; SLC/PJH - Error handling routines. ;06/02/1999
"RTN","PXRMV1IE",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMV1IE",3,0)
 ;
"RTN","PXRMV1IE",4,0)
 ;======================================================================
"RTN","PXRMV1IE",5,0)
ERR(ERROR) ;
"RTN","PXRMV1IE",6,0)
 ;Send a MailMan message to the mail group defined by the site
"RTN","PXRMV1IE",7,0)
 N IC,MGIEN,MGROUP,SUB,XMSUB,XMY,XMZ
"RTN","PXRMV1IE",8,0)
 ;;
"RTN","PXRMV1IE",9,0)
 S XMSUB="Error in Reminder Conversion"
"RTN","PXRMV1IE",10,0)
 ;
"RTN","PXRMV1IE",11,0)
 ;Get the message number
"RTN","PXRMV1IE",12,0)
 F  D XMZ^XMA2 Q:XMZ>0
"RTN","PXRMV1IE",13,0)
 ;
"RTN","PXRMV1IE",14,0)
 ;Load the message
"RTN","PXRMV1IE",15,0)
 S ^XMB(3.9,XMZ,2,1,0)="The time of the error was "_$$FMTE^XLFDT($$NOW^XLFDT,"5Y")
"RTN","PXRMV1IE",16,0)
 ;
"RTN","PXRMV1IE",17,0)
 S SUB=""
"RTN","PXRMV1IE",18,0)
 F IC=3:1 S SUB=$O(ERROR(SUB)) Q:SUB=""  D
"RTN","PXRMV1IE",19,0)
 .S ^XMB(3.9,XMZ,2,IC,0)=ERROR(SUB)
"RTN","PXRMV1IE",20,0)
 ;
"RTN","PXRMV1IE",21,0)
 S ^XMB(3.9,XMZ,2,0)="^3.92^"_+6_U_+6_U_DT
"RTN","PXRMV1IE",22,0)
 ;
"RTN","PXRMV1IE",23,0)
 ;Send the message to the site defined mailgroup.
"RTN","PXRMV1IE",24,0)
 S MGIEN=$G(^PXRM(800,1,"MGFE"))
"RTN","PXRMV1IE",25,0)
 ;If the mailgroup has not been defined send the message to the user.
"RTN","PXRMV1IE",26,0)
 I MGIEN="" D
"RTN","PXRMV1IE",27,0)
 . S MGROUP=DUZ
"RTN","PXRMV1IE",28,0)
 . S ^XMB(3.9,XMZ,2,IC,0)=" "
"RTN","PXRMV1IE",29,0)
 . S ^XMB(3.9,XMZ,2,IC+1,0)="You received this message because your IRM has not setup a mailgroup to receive"
"RTN","PXRMV1IE",30,0)
 . S ^XMB(3.9,XMZ,2,IC+2,0)="Clinical Reminder errors, please notify them."
"RTN","PXRMV1IE",31,0)
 E  S MGROUP="G."_$$GET1^DIQ(3.8,MGIEN,.01)
"RTN","PXRMV1IE",32,0)
 ;
"RTN","PXRMV1IE",33,0)
 S MGROUP=MGROUP_"@"_^XMB("NETNAME")
"RTN","PXRMV1IE",34,0)
 S XMY(MGROUP)=""
"RTN","PXRMV1IE",35,0)
 D ENT1^XMD
"RTN","PXRMV1IE",36,0)
 Q
"RTN","PXRMV1IG")
0^185^B9351631
"RTN","PXRMV1IG",1,0)
PXRMV1IG ; SLC/PKR - Inits for new REMINDER package (globals).;05/19/2000
"RTN","PXRMV1IG",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMV1IG",3,0)
 ;
"RTN","PXRMV1IG",4,0)
 ;These routines are used to help converting from old style B
"RTN","PXRMV1IG",5,0)
 ;cross-references to new style full length cross-references.
"RTN","PXRMV1IG",6,0)
 ;
"RTN","PXRMV1IG",7,0)
 ;=======================================================================
"RTN","PXRMV1IG",8,0)
REINDEX(FILE) ;Rebuild all cross-references in a file.
"RTN","PXRMV1IG",9,0)
 ;the second entry is the duplicate.
"RTN","PXRMV1IG",10,0)
 N DIK,TEXT
"RTN","PXRMV1IG",11,0)
 S TEXT="Rebuilding cross-references in file # "_FILE
"RTN","PXRMV1IG",12,0)
 D BMES^XPDUTL(TEXT)
"RTN","PXRMV1IG",13,0)
 S DIK=$$ROOT^DILFD(FILE)
"RTN","PXRMV1IG",14,0)
 I DIK="" Q
"RTN","PXRMV1IG",15,0)
 D IXALL^DIK
"RTN","PXRMV1IG",16,0)
 Q
"RTN","PXRMV1IG",17,0)
 ;
"RTN","PXRMV1IG",18,0)
 ;=======================================================================
"RTN","PXRMV1IG",19,0)
RMDUP(FILE) ;Remove any duplicate entries from file number FILE. We assume
"RTN","PXRMV1IG",20,0)
 ;the second entry is the duplicate.
"RTN","PXRMV1IG",21,0)
 N DA,DIK,IEN1,IEN2,NAME,NAME1,NAME2,ROOT,ROOTB,TEMP,TEMP1,TEXT
"RTN","PXRMV1IG",22,0)
 S TEXT="Checking for duplicate entries in file # "_FILE
"RTN","PXRMV1IG",23,0)
 D BMES^XPDUTL(TEXT)
"RTN","PXRMV1IG",24,0)
 S ROOT=$$ROOT^DILFD(FILE)
"RTN","PXRMV1IG",25,0)
 I ROOT="" Q
"RTN","PXRMV1IG",26,0)
 S DIK=ROOT
"RTN","PXRMV1IG",27,0)
 S ROOTB=ROOT_"""B"","
"RTN","PXRMV1IG",28,0)
 S NAME=""
"RTN","PXRMV1IG",29,0)
 S TEMP=ROOTB_""""_NAME_""")"
"RTN","PXRMV1IG",30,0)
 F  S NAME=$O(@TEMP) Q:NAME=""  D
"RTN","PXRMV1IG",31,0)
 . S TEMP=ROOTB_""""_NAME_""")"
"RTN","PXRMV1IG",32,0)
 . S TEMP1=ROOTB_""""_NAME_""","""")"
"RTN","PXRMV1IG",33,0)
 . S IEN1=$O(@TEMP1)
"RTN","PXRMV1IG",34,0)
 . S TEMP1=ROOTB_""""_NAME_""","_IEN1_")"
"RTN","PXRMV1IG",35,0)
 . S IEN2=$O(@TEMP1)
"RTN","PXRMV1IG",36,0)
 . I +IEN2>0 D
"RTN","PXRMV1IG",37,0)
 .. S TEMP1=ROOT_IEN1_",0)"
"RTN","PXRMV1IG",38,0)
 .. S NAME1=$P(@TEMP1,U,1)
"RTN","PXRMV1IG",39,0)
 .. S TEMP1=ROOT_IEN2_",0)"
"RTN","PXRMV1IG",40,0)
 .. S NAME2=$P(@TEMP1,U,1)
"RTN","PXRMV1IG",41,0)
 .. I NAME1=NAME2 D
"RTN","PXRMV1IG",42,0)
 ... S TEXT="Removing duplicate entry "_IEN2_" for "_NAME
"RTN","PXRMV1IG",43,0)
 ... D BMES^XPDUTL(TEXT)
"RTN","PXRMV1IG",44,0)
 ... S DA=IEN2
"RTN","PXRMV1IG",45,0)
 ...;Kill nodes 4,6,10, and 20 so none of the cross-references are fired.
"RTN","PXRMV1IG",46,0)
 ... I FILE=811.9 D
"RTN","PXRMV1IG",47,0)
 .... K ^PXD(811.9,IEN2,4)
"RTN","PXRMV1IG",48,0)
 .... K ^PXD(811.9,IEN2,6)
"RTN","PXRMV1IG",49,0)
 .... K ^PXD(811.9,IEN2,10)
"RTN","PXRMV1IG",50,0)
 .... K ^PXD(811.9,IEN2,20)
"RTN","PXRMV1IG",51,0)
 ... D ^DIK
"RTN","PXRMV1IG",52,0)
 Q
"RTN","PXRMV1IG",53,0)
 ;
"RTN","PXRMV1IG",54,0)
 ;=======================================================================
"RTN","PXRMV1IG",55,0)
TMPB(FILE) ;Delete the old B cross-reference and build a new temporary
"RTN","PXRMV1IG",56,0)
 ;full length one so the install will find matches. FILE is the file
"RTN","PXRMV1IG",57,0)
 ;number.
"RTN","PXRMV1IG",58,0)
 N BXREF,IEN,NAME,ROOT,ROOTB,TEMP
"RTN","PXRMV1IG",59,0)
 S ROOT=$$ROOT^DILFD(FILE)
"RTN","PXRMV1IG",60,0)
 I ROOT="" Q
"RTN","PXRMV1IG",61,0)
 S ROOTB=ROOT_"""B"")"
"RTN","PXRMV1IG",62,0)
 ;Delete the old B.
"RTN","PXRMV1IG",63,0)
 K @ROOTB
"RTN","PXRMV1IG",64,0)
 S ROOTB=ROOT_"""B"","""
"RTN","PXRMV1IG",65,0)
 S IEN=0
"RTN","PXRMV1IG",66,0)
 F  S ENTRY=ROOT_IEN_")",IEN=$O(@ENTRY) Q:+IEN=0  D
"RTN","PXRMV1IG",67,0)
 . S TEMP=ROOT_IEN_",0)"
"RTN","PXRMV1IG",68,0)
 . S NAME=$P(@TEMP,U,1)
"RTN","PXRMV1IG",69,0)
 . S BXREF=ROOTB_NAME_""","_IEN_")"
"RTN","PXRMV1IG",70,0)
 . S @(BXREF)=""
"RTN","PXRMV1IG",71,0)
 Q
"RTN","PXRMV1IG",72,0)
 ;
"RTN","PXRMV1IG",73,0)
 ;=======================================================================
"RTN","PXRMV1IG",74,0)
INSAV ;Save inactive status of VA Reminders to file
"RTN","PXRMV1IG",75,0)
 N NAME,SUB
"RTN","PXRMV1IG",76,0)
 K ^TMP("PXRMV1IG",$J)
"RTN","PXRMV1IG",77,0)
 S NAME="VA"
"RTN","PXRMV1IG",78,0)
 F  S NAME=$O(^PXD(811.9,"B",NAME)) Q:$E(NAME,1,3)'="VA-"  D
"RTN","PXRMV1IG",79,0)
 .S SUB=$O(^PXD(811.9,"B",NAME,"")) Q:'SUB  Q:'$D(^PXD(811.9,SUB,0))
"RTN","PXRMV1IG",80,0)
 .S ^TMP("PXRMV1IG",$J,NAME)=$P($G(^PXD(811.9,SUB,0)),U,6)
"RTN","PXRMV1IG",81,0)
 Q
"RTN","PXRMV1IG",82,0)
 ;
"RTN","PXRMV1IG",83,0)
 ;=======================================================================
"RTN","PXRMV1IG",84,0)
INRES ;Restore inactive status of VA reminders
"RTN","PXRMV1IG",85,0)
 N NAME,SUB,STA
"RTN","PXRMV1IG",86,0)
 S NAME=""
"RTN","PXRMV1IG",87,0)
 F  S NAME=$O(^TMP("PXRMV1IG",$J,NAME)) Q:NAME=""  D
"RTN","PXRMV1IG",88,0)
 .S STA=$G(^TMP("PXRMV1IG",$J,NAME))
"RTN","PXRMV1IG",89,0)
 .S SUB=$O(^PXD(811.9,"B",NAME,"")) Q:'SUB
"RTN","PXRMV1IG",90,0)
 .S:$D(^PXD(811.9,SUB,0)) $P(^PXD(811.9,SUB,0),U,6)=STA
"RTN","PXRMV1IG",91,0)
 K ^TMP("PXRMV1IG",$J)
"RTN","PXRMV1IG",92,0)
 Q
"RTN","PXRMV1IG",93,0)
 ;
"RTN","PXRMV1IG",94,0)
 ;=======================================================================
"RTN","PXRMV1IG",95,0)
CHANGE ;Rename old menu entries so they get overwritten
"RTN","PXRMV1IG",96,0)
 D CHGNAM("PXRM REMINDER MENU","PXRM MANAGERS MENU")
"RTN","PXRMV1IG",97,0)
 Q
"RTN","PXRMV1IG",98,0)
 ;
"RTN","PXRMV1IG",99,0)
 ;=======================================================================
"RTN","PXRMV1IG",100,0)
CHGNAM(OLD,NEW) ;Change option name
"RTN","PXRMV1IG",101,0)
 ;Skip if the new entry already exists
"RTN","PXRMV1IG",102,0)
 I $D(^DIC(19,"B",NEW)) Q
"RTN","PXRMV1IG",103,0)
 ;Rename option
"RTN","PXRMV1IG",104,0)
 N DA,DIE,DR,X
"RTN","PXRMV1IG",105,0)
 S DA=$O(^DIC(19,"B",OLD,"")) Q:'DA
"RTN","PXRMV1IG",106,0)
 S DIE="^DIC(19,",DR=".01///^S X=NEW"
"RTN","PXRMV1IG",107,0)
 D ^DIE
"RTN","PXRMV1IG",108,0)
 Q
"RTN","PXRMV1IH")
0^215^B6916454
"RTN","PXRMV1IH",1,0)
PXRMV1IH ; SLC/PKR - Inits for new REMINDER package (globals).;05/19/2000
"RTN","PXRMV1IH",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMV1IH",3,0)
 ;
"RTN","PXRMV1IH",4,0)
 ;These routines are for properly setting up the
"RTN","PXRMV1IH",5,0)
 ; VA-HEP C RISK ASSESSMENT reminder.
"RTN","PXRMV1IH",6,0)
 ;
"RTN","PXRMV1IH",7,0)
 ;=======================================================================
"RTN","PXRMV1IH",8,0)
CTERMS ;Connect the terms to findings.
"RTN","PXRMV1IH",9,0)
 N REMIEN,TERMLIST
"RTN","PXRMV1IH",10,0)
 S REMIEN=$O(^PXD(811.9,"B","VA-HEP C RISK ASSESSMENT",""))
"RTN","PXRMV1IH",11,0)
 D TERMLIST(REMIEN,.TERMLIST)
"RTN","PXRMV1IH",12,0)
 D HFTERMS(REMIEN,.TERMLIST)
"RTN","PXRMV1IH",13,0)
 D TAXTERMS(REMIEN,.TERMLIST)
"RTN","PXRMV1IH",14,0)
 Q
"RTN","PXRMV1IH",15,0)
 ;
"RTN","PXRMV1IH",16,0)
 ;=======================================================================
"RTN","PXRMV1IH",17,0)
HFTERMS(REMIEN,TERMLIST) ;Connect terms using health factors.
"RTN","PXRMV1IH",18,0)
 N FDA,FDAIEN,HFIEN
"RTN","PXRMV1IH",19,0)
 S HFIEN=$O(^AUTTHF("B","DECLINED HEP C RISK ASSESSMENT",""))
"RTN","PXRMV1IH",20,0)
 S FDAIEN(1)=TERMLIST("DECLINED HEP C RISK ASSESSMENT")
"RTN","PXRMV1IH",21,0)
 S FDA(811.5,"?1,",.01)="DECLINED HEP C RISK ASSESSMENT"
"RTN","PXRMV1IH",22,0)
 S FDA(811.5,"?1,",.02)="N"
"RTN","PXRMV1IH",23,0)
 S FDA(811.52,"?+2,?1,",.01)=HFIEN_";AUTTHF("
"RTN","PXRMV1IH",24,0)
 D UPDATE(.FDA,.FDAIEN)
"RTN","PXRMV1IH",25,0)
 ;
"RTN","PXRMV1IH",26,0)
 S HFIEN=$O(^AUTTHF("B","NO RISK FACTORS FOR HEP C",""))
"RTN","PXRMV1IH",27,0)
 K FDA,FDAIEN
"RTN","PXRMV1IH",28,0)
 S FDAIEN(1)=TERMLIST("NO RISK FACTORS FOR HEP C")
"RTN","PXRMV1IH",29,0)
 S FDA(811.5,"?1,",.01)="NO RISK FACTORS FOR HEP C"
"RTN","PXRMV1IH",30,0)
 S FDA(811.5,"?1,",.02)="N"
"RTN","PXRMV1IH",31,0)
 S FDA(811.52,"?+2,?1,",.01)=HFIEN_";AUTTHF("
"RTN","PXRMV1IH",32,0)
 D UPDATE(.FDA,.FDAIEN)
"RTN","PXRMV1IH",33,0)
 ;
"RTN","PXRMV1IH",34,0)
 S HFIEN=$O(^AUTTHF("B","PREV POS TEST FOR HEP C",""))
"RTN","PXRMV1IH",35,0)
 K FDA,FDAIEN
"RTN","PXRMV1IH",36,0)
 S FDAIEN(1)=TERMLIST("PREV POSITIVE TEST FOR HEP C")
"RTN","PXRMV1IH",37,0)
 S FDA(811.5,"?1,",.01)="PREV POSITIVE TEST FOR HEP C"
"RTN","PXRMV1IH",38,0)
 S FDA(811.5,"?1,",.02)="N"
"RTN","PXRMV1IH",39,0)
 S FDA(811.52,"?+2,?1,",.01)=HFIEN_";AUTTHF("
"RTN","PXRMV1IH",40,0)
 D UPDATE(.FDA,.FDAIEN)
"RTN","PXRMV1IH",41,0)
 ;
"RTN","PXRMV1IH",42,0)
 S HFIEN=$O(^AUTTHF("B","RISK FACTOR FOR HEPATITIS C",""))
"RTN","PXRMV1IH",43,0)
 K FDA,FDAIEN
"RTN","PXRMV1IH",44,0)
 S FDAIEN(1)=TERMLIST("RISK FACTOR FOR HEPATITIS C")
"RTN","PXRMV1IH",45,0)
 S FDA(811.5,"?1,",.01)="RISK FACTOR FOR HEPATITIS C"
"RTN","PXRMV1IH",46,0)
 S FDA(811.5,"?1,",.02)="N"
"RTN","PXRMV1IH",47,0)
 S FDA(811.52,"?+2,?1,",.01)=HFIEN_";AUTTHF("
"RTN","PXRMV1IH",48,0)
 D UPDATE(.FDA,.FDAIEN)
"RTN","PXRMV1IH",49,0)
 Q
"RTN","PXRMV1IH",50,0)
 ;
"RTN","PXRMV1IH",51,0)
 ;=======================================================================
"RTN","PXRMV1IH",52,0)
TAXTERMS(REMIEN,TERMLIST) ;Connect terms using taxonomies.
"RTN","PXRMV1IH",53,0)
 N FDA,FDAIEN,TAXIEN
"RTN","PXRMV1IH",54,0)
 S TAXIEN=$O(^PXD(811.2,"B","VA-HEPATITIS C INFECTION",""))
"RTN","PXRMV1IH",55,0)
 S FDAIEN(1)=TERMLIST("HEPATITIS C INFECTION")
"RTN","PXRMV1IH",56,0)
 S FDA(811.5,"?1,",.01)="HEPATITIS C INFECTION"
"RTN","PXRMV1IH",57,0)
 S FDA(811.5,"?1,",.02)="N"
"RTN","PXRMV1IH",58,0)
 S FDA(811.52,"?+2,?1,",.01)=TAXIEN_";PXD(811.2,"
"RTN","PXRMV1IH",59,0)
 D UPDATE(.FDA,.FDAIEN)
"RTN","PXRMV1IH",60,0)
 Q
"RTN","PXRMV1IH",61,0)
 ;
"RTN","PXRMV1IH",62,0)
 ;=======================================================================
"RTN","PXRMV1IH",63,0)
TERMLIST(REMIEN,TERMLIST) ;Build the list of terms in the reminder.
"RTN","PXRMV1IH",64,0)
 N TERM,TERMNAME
"RTN","PXRMV1IH",65,0)
 S TERM=""
"RTN","PXRMV1IH",66,0)
 F  S TERM=$O(^PXD(811.9,REMIEN,20,"E","PXRMD(811.5,",TERM)) Q:+TERM=0  D
"RTN","PXRMV1IH",67,0)
 . S TERMNAME=$P(^PXRMD(811.5,TERM,0),U,1)
"RTN","PXRMV1IH",68,0)
 . S TERMLIST(TERMNAME)=TERM
"RTN","PXRMV1IH",69,0)
 Q
"RTN","PXRMV1IH",70,0)
 ;
"RTN","PXRMV1IH",71,0)
 ;=======================================================================
"RTN","PXRMV1IH",72,0)
UPDATE(FDA,FDAIEN) ;Do the update.
"RTN","PXRMV1IH",73,0)
 N MSG
"RTN","PXRMV1IH",74,0)
 D UPDATE^DIE("","FDA","FDAIEN","MSG")
"RTN","PXRMV1IH",75,0)
 Q
"RTN","PXRMV1IH",76,0)
 ;
"RTN","PXRMV1X")
0^210^B831404
"RTN","PXRMV1X",1,0)
PXRMV1X ; SLC/PJH - Export Package Level Parameters ; 05/08/2000
"RTN","PXRMV1X",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMV1X",3,0)
 ;;
"RTN","PXRMV1X",4,0)
MAIN ; main (initial) parameter transport routine
"RTN","PXRMV1X",5,0)
 K ^TMP($J,"XPARRSTR")
"RTN","PXRMV1X",6,0)
 N ENT,IDX,ROOT,REF,VAL,I
"RTN","PXRMV1X",7,0)
 S ROOT=$NAME(^TMP($J,"XPARRSTR")),ROOT=$E(ROOT,1,$L(ROOT)-1)_","
"RTN","PXRMV1X",8,0)
 D ^PXRMV1X1
"RTN","PXRMV1X",9,0)
XX2 S IDX=0,ENT="PKG."_"CLINICAL REMINDERS"
"RTN","PXRMV1X",10,0)
 F  S IDX=$O(^TMP($J,"XPARRSTR",IDX)) Q:'IDX  D
"RTN","PXRMV1X",11,0)
 . N PAR,INST,VAL,ERR
"RTN","PXRMV1X",12,0)
 . S PAR=$P(^TMP($J,"XPARRSTR",IDX,"KEY"),U),INST=$P(^("KEY"),U,2)
"RTN","PXRMV1X",13,0)
 . M VAL=^TMP($J,"XPARRSTR",IDX,"VAL")
"RTN","PXRMV1X",14,0)
 . D EN^XPAR(ENT,PAR,INST,.VAL,.ERR)
"RTN","PXRMV1X",15,0)
 K ^TMP($J,"XPARRSTR")
"RTN","PXRMV1X",16,0)
 Q
"RTN","PXRMV1X1")
0^211^B388824
"RTN","PXRMV1X1",1,0)
PXRMV1X1 ; SLC/PJH - Export Parameter Definitions; 05/08/2000
"RTN","PXRMV1X1",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMV1X1",3,0)
 ;;
"RTN","PXRMV1X1",4,0)
LOAD ; load data into ^TMP (expects ROOT to be defined)
"RTN","PXRMV1X1",5,0)
 S I=1 F  S REF=$T(DATA+I) Q:REF=""  S VAL=$T(DATA+I+1) D
"RTN","PXRMV1X1",6,0)
 . S I=I+2,REF=$P(REF,";",3,999),VAL=$P(VAL,";",3,999)
"RTN","PXRMV1X1",7,0)
 . S @(ROOT_REF)=VAL
"RTN","PXRMV1X1",8,0)
 Q
"RTN","PXRMV1X1",9,0)
DATA ; parameter data
"RTN","PXRMV1X1",10,0)
 ;;4302,"KEY")
"RTN","PXRMV1X1",11,0)
 ;;PXRM PROGRESS NOTE HEADERS^1
"RTN","PXRMV1X1",12,0)
 ;;4302,"VAL")
"RTN","PXRMV1X1",13,0)
 ;;CLINICAL REMINDER ACTIVITY
"RTN","PXRMVAL")
0^131^B18423492
"RTN","PXRMVAL",1,0)
PXRMVAL ; SLC/KER - Validate Codes (ICD/ICP/CPT main)    ; 05/16/2000
"RTN","PXRMVAL",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMVAL",3,0)
 ;   
"RTN","PXRMVAL",4,0)
 ; This routine checks the both format of a classification code
"RTN","PXRMVAL",5,0)
 ; (pattern matching) and the value of a classification code
"RTN","PXRMVAL",6,0)
 ; provided by a user. Both the format and the value of the
"RTN","PXRMVAL",7,0)
 ; users input must be valid for this routine to return a "true"
"RTN","PXRMVAL",8,0)
 ; condition (1). If either the format or the value is not valid
"RTN","PXRMVAL",9,0)
 ; this routine will return a false condition (0) and the reason
"RTN","PXRMVAL",10,0)
 ; (error) the code was not found to be valid.
"RTN","PXRMVAL",11,0)
 ;   
"RTN","PXRMVAL",12,0)
 ; Entry Points
"RTN","PXRMVAL",13,0)
 ;   
"RTN","PXRMVAL",14,0)
 ;    EN^PXRMVAL                                     Standard Lookup
"RTN","PXRMVAL",15,0)
 ;    ============================================================
"RTN","PXRMVAL",16,0)
 ;   
"RTN","PXRMVAL",17,0)
 ;             Optional input:
"RTN","PXRMVAL",18,0)
 ;   
"RTN","PXRMVAL",19,0)
 ;                X     classification code (ICD/CPT)
"RTN","PXRMVAL",20,0)
 ;   
"RTN","PXRMVAL",21,0)
 ;               DIC    global root/#
"RTN","PXRMVAL",22,0)
 ;   
"RTN","PXRMVAL",23,0)
 ;                      If X equals      then DIC should be set to
"RTN","PXRMVAL",24,0)
 ;                      ------------------------------------------
"RTN","PXRMVAL",25,0)
 ;                      ICD diagnosis         ^ICD9( or 80
"RTN","PXRMVAL",26,0)
 ;                      ICD procedure         ^ICD0( or 80.1
"RTN","PXRMVAL",27,0)
 ;                      CPT procedure         ^ICPT( or 81
"RTN","PXRMVAL",28,0)
 ;   
"RTN","PXRMVAL",29,0)
 ;   
"RTN","PXRMVAL",30,0)
 ;   
"RTN","PXRMVAL",31,0)
 ;    $$CODE^PXRMVAL(<code>,<file>)               Extrinsic Function
"RTN","PXRMVAL",32,0)
 ;    ============================================================
"RTN","PXRMVAL",33,0)
 ;   
"RTN","PXRMVAL",34,0)
 ;             Mandatory input:
"RTN","PXRMVAL",35,0)
 ;   
"RTN","PXRMVAL",36,0)
 ;              <code>  classification code (ICD/CPT), may be null
"RTN","PXRMVAL",37,0)
 ;   
"RTN","PXRMVAL",38,0)
 ;              <file>  file number or global root
"RTN","PXRMVAL",39,0)
 ;   
"RTN","PXRMVAL",40,0)
 ;                      If X equals      then DIC should be set to
"RTN","PXRMVAL",41,0)
 ;                      ------------------------------------------
"RTN","PXRMVAL",42,0)
 ;                      ICD diagnosis         ^ICD9( or 80
"RTN","PXRMVAL",43,0)
 ;                      ICD procedure         ^ICD0( or 80.1
"RTN","PXRMVAL",44,0)
 ;                      CPT procedure         ^ICPT( or 81
"RTN","PXRMVAL",45,0)
 ;                      HCPCS procedure       ^ICPT( or 81
"RTN","PXRMVAL",46,0)
 ;   
"RTN","PXRMVAL",47,0)
 ;   
"RTN","PXRMVAL",48,0)
 ;   
"RTN","PXRMVAL",49,0)
 ; EN^PXRMVAL returns the variable Y and 
"RTN","PXRMVAL",50,0)
 ; $$CODE^PXRMVAL returns a value in the
"RTN","PXRMVAL",51,0)
 ; form of:
"RTN","PXRMVAL",52,0)
 ;   
"RTN","PXRMVAL",53,0)
 ;          <validity>^<input code>^<output code>^<error>^<file>^
"RTN","PXRMVAL",54,0)
 ;          <root>^<type>^<input IEN>^<input inactive flag>^
"RTN","PXRMVAL",55,0)
 ;          <output IEN>^<output inactive flag>^<description>
"RTN","PXRMVAL",56,0)
 ;   
"RTN","PXRMVAL",57,0)
 ;           1  Validity      1=valid   0=invalid
"RTN","PXRMVAL",58,0)
 ;           2  Input code    Code entered by user (input)
"RTN","PXRMVAL",59,0)
 ;           3  Output code   Code (after transformation, output)
"RTN","PXRMVAL",60,0)
 ;           4  Error         Error text
"RTN","PXRMVAL",61,0)
 ;           5  File #        File number used to check code
"RTN","PXRMVAL",62,0)
 ;           6  Root          Global root (location)
"RTN","PXRMVAL",63,0)
 ;           7  Type          Type of code checked (ICD, CPT)
"RTN","PXRMVAL",64,0)
 ;           8  Input IEN     Entry number of input code
"RTN","PXRMVAL",65,0)
 ;           9  Input flag    ""=active  1=inactive
"RTN","PXRMVAL",66,0)
 ;          10  Output IEN    Entry number of output code
"RTN","PXRMVAL",67,0)
 ;          11  Output flag   ""=active  1=inactive
"RTN","PXRMVAL",68,0)
 ;          12  Name          Descriptive name of Coded entry
"RTN","PXRMVAL",69,0)
 ;   
"RTN","PXRMVAL",70,0)
 ;   
"RTN","PXRMVAL",71,0)
 ; If X (code) or DIC (file) do not exist, then the user will be
"RTN","PXRMVAL",72,0)
 ; prompted for the missing data.
"RTN","PXRMVAL",73,0)
 ;   
"RTN","PXRMVAL",74,0)
EN ; Validate a code format (ICD or CPT)
"RTN","PXRMVAL",75,0)
 K Y N FI,TY,OX S FI=$G(DIC) S (OX,X)=$G(X) N DIC S DIC=$G(FI) D FD S Y="0^"_OX_"^"_X_"^Unknown error"
"RTN","PXRMVAL",76,0)
 ;   Quit if no code provided
"RTN","PXRMVAL",77,0)
 S:'$L(X) (OX,X)=$$SO I '$L(X) S Y="0^"_OX_"^"_X_"^No ICD/CPT code provided" Q
"RTN","PXRMVAL",78,0)
 ;   Quit if no file provided
"RTN","PXRMVAL",79,0)
 I $G(DIC)="" S DIC=$G(FI) D FD I '$L(DIC) S DIC=$$FI(OX) D FD
"RTN","PXRMVAL",80,0)
 I '$L(DIC)!(DIC="^")!(DIC="^^") S Y="0^"_OX_"^"_X_"^No classification code file provided (DIC)" Q
"RTN","PXRMVAL",81,0)
 ;   Quit if no file found
"RTN","PXRMVAL",82,0)
 S TY=$$TYPE^PXRMVALU(X,DIC),FI=$G(@(DIC_"0)")) I '$L(FI) S Y="0^"_OX_"^"_X_"^No "_TY_" file found^^^" Q
"RTN","PXRMVAL",83,0)
 S FI=$S(DIC["ICD9":80,DIC["ICD0":80.1,DIC["ICPT":81,1:0) I FI=0 S Y="0^"_OX_"^"_X_"^No "_TY_" file found^^^" Q
"RTN","PXRMVAL",84,0)
 ; Validate code
"RTN","PXRMVAL",85,0)
 S Y=$$VAL(FI,X) Q
"RTN","PXRMVAL",86,0)
 ;   
"RTN","PXRMVAL",87,0)
CODE(X,DIC) ; Extrinsic Function to check code format and value
"RTN","PXRMVAL",88,0)
 S X=$G(X),DIC=$G(DIC) N Y D EN S X=Y Q X
"RTN","PXRMVAL",89,0)
 ;   
"RTN","PXRMVAL",90,0)
VAL(X,Y) ; Validate code
"RTN","PXRMVAL",91,0)
 N FILENUM,CODE S FILENUM=$G(X),CODE=$G(Y)
"RTN","PXRMVAL",92,0)
 Q:+($G(FILENUM))=80 $$ICD^PXRMVALC(CODE)
"RTN","PXRMVAL",93,0)
 Q:+($G(FILENUM))=80.1 $$ICP^PXRMVALC(CODE)
"RTN","PXRMVAL",94,0)
 Q:+($G(FILENUM))=81 $$CPT^PXRMVALC(CODE)
"RTN","PXRMVAL",95,0)
 Q "0^"_CODE_"^"_CODE_"^Unidentified code type"
"RTN","PXRMVAL",96,0)
 ;   
"RTN","PXRMVAL",97,0)
SO(X) ; Prompt user for source code (CODE)
"RTN","PXRMVAL",98,0)
 N DIR,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","PXRMVAL",99,0)
 S X=$G(X),DIR(0)="FAO^3:7"
"RTN","PXRMVAL",100,0)
 S DIR("A")="Enter a classification code:  "
"RTN","PXRMVAL",101,0)
 S:$L(X)>4&($L(X)<8) DIR("B")=X
"RTN","PXRMVAL",102,0)
 D ^DIR S X=Y S:$D(DTOUT)!($D(DUOUT))!($D(DIRUT))!($D(DIROUT)) X=""
"RTN","PXRMVAL",103,0)
 Q X
"RTN","PXRMVAL",104,0)
 ;   
"RTN","PXRMVAL",105,0)
FI(SO) ; Prompt user for file (FI,DIC)
"RTN","PXRMVAL",106,0)
 N DIC,DO,DLAYGO,DINUM,X,Y,DTOUT,DUOUT,FILEDEF,FILENM
"RTN","PXRMVAL",107,0)
 S SO=$G(SO) S FILEDEF=""  S:$L(SO) FILEDEF=$$FILE^PXRMVALU(SO)
"RTN","PXRMVAL",108,0)
 S FILENM=$$FN(+FILEDEF),FILEDEF=$S($L(FILENM):FILENM,1:"")
"RTN","PXRMVAL",109,0)
 S:$L(FILEDEF) DIC("B")=FILEDEF S DIC("A")="Enter classification code file:  "
"RTN","PXRMVAL",110,0)
 S:$L($G(SO)) DIC("A")="Enter classification file for code """_SO_""":  "
"RTN","PXRMVAL",111,0)
 S DIC("S")="I +Y=80!(+Y=80.1)!(+Y=81)"
"RTN","PXRMVAL",112,0)
 S DIC="^DIC(",DIC(0)="AEMQ" D ^DIC S SO=+($G(Y)) S:SO'>0 SO="" Q SO
"RTN","PXRMVAL",113,0)
 ;   
"RTN","PXRMVAL",114,0)
FD ; File and file root based on DIC
"RTN","PXRMVAL",115,0)
 S:'$L(DIC) (FI,DIC)="" Q:'$L(DIC)
"RTN","PXRMVAL",116,0)
 I $L($$GL(+DIC)),+($$DD(+DIC))>0 D  Q
"RTN","PXRMVAL",117,0)
 . S FI=+DIC,DIC=$$GL(+DIC) S:FI'=80&(FI'=80.1)&(FI'=81) (FI,DIC)=""
"RTN","PXRMVAL",118,0)
 I $E(DIC,1)="^",$L($P(DIC,"^",2)),$P(DIC,"^",2)["(",$L(DIC,"^")=2,$D(@(DIC_"0)")) D  Q
"RTN","PXRMVAL",119,0)
 . S FI=+($P($G(@(DIC_"0)")),"^",2)) S:FI'=80&(FI'=80.1)&(FI'=81) (FI,DIC)=""
"RTN","PXRMVAL",120,0)
 S (FI,DIC)="" Q
"RTN","PXRMVAL",121,0)
DD(X) ; DD Exist?  (DBIA 2052)
"RTN","PXRMVAL",122,0)
 N PXRMF S X=+($G(X)) Q:X=0 ""
"RTN","PXRMVAL",123,0)
 D FIELD^DID(X,.01,"N","LABEL","PXRMF") S X=$S($L($G(PXRMF("LABEL"))):1,1:0) Q X
"RTN","PXRMVAL",124,0)
GL(X) ; Global Location (DBIA 2052)
"RTN","PXRMVAL",125,0)
 N PXRMF S X=+($G(X)) Q:X=0 "" D FILE^DID(X,"N","GLOBAL NAME","PXRMF") S X=$G(PXRMF("GLOBAL NAME")) Q X
"RTN","PXRMVAL",126,0)
FN(X) ; File Name (DBIA 2052)
"RTN","PXRMVAL",127,0)
 N PXRMF S X=+($G(X)) Q:X=0 "" D FILE^DID(X,"N","NAME","PXRMF") S X=$G(PXRMF("NAME")) Q X
"RTN","PXRMVALC")
0^132^B59679283
"RTN","PXRMVALC",1,0)
PXRMVALC ; SLC/KR Validate Codes (format/value)    ; 05/16/2000
"RTN","PXRMVALC",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMVALC",3,0)
 Q
"RTN","PXRMVALC",4,0)
 ;   
"RTN","PXRMVALC",5,0)
 ; Entry points (extrinsic functions)
"RTN","PXRMVALC",6,0)
 ;   
"RTN","PXRMVALC",7,0)
 ;     ICD^PXRMVALC(<code>)   Validate ICD-9-CM Diagnosis Code
"RTN","PXRMVALC",8,0)
 ;     ICP^PXRMVALC(<code>)   Validate ICD-9-CM Procedure Code
"RTN","PXRMVALC",9,0)
 ;     CPT^PXRMVALC(<code>)   Validate CPT-4 Procedure Code
"RTN","PXRMVALC",10,0)
 ;   
"RTN","PXRMVALC",11,0)
 ;  All entry points return:
"RTN","PXRMVALC",12,0)
 ;  
"RTN","PXRMVALC",13,0)
 ;    <validity>^<input>^<output>^<error>^<file #>^<global root>^
"RTN","PXRMVALC",14,0)
 ;    <type of code>^<input IEN>^<input flag>^<output IEN>^
"RTN","PXRMVALC",15,0)
 ;    <output flag>^<description>
"RTN","PXRMVALC",16,0)
 ;   
"RTN","PXRMVALC",17,0)
ICD(X) ; Validate ICD-9-CM Diagnosis Code from file 80
"RTN","PXRMVALC",18,0)
 S X=$G(X),U="^" N CHR,CHKD,CIN,CODE,COUT,DIC,ERR,ES,EXP,FNUM,FORM,IENI,IENO,IFIN,IFOUT,NAME,NUMERIC,PAT,TY,VAL,Y
"RTN","PXRMVALC",19,0)
 S VAL=1,FNUM=80,DIC="ICD9(",(IFIN,IFOUT,NAME)="",CIN=$TR(X,"""",""),U="^"
"RTN","PXRMVALC",20,0)
 S FORM=$S($E(X,1)="E":2,$E(X,1)="V":3,$E(X,1)?1N:1,1:1),TY=$S(FORM=2:"ICD ""E"" code",FORM=3:"ICD ""V"" code",FORM=1:"ICD code",1:"ICD code")
"RTN","PXRMVALC",21,0)
 S ERR="Valid "_TY,CHKD=$S(FORM=2:"ICD-9-CM ""E"" external cause code",FORM=3:"ICD-9-CM ""V"" health factor code",FORM=1:"ICD-9-CM diagnosis code",1:"ICD-9-CM code")
"RTN","PXRMVALC",22,0)
 S PAT=$S(FORM=2:"ENNN.nn",FORM=3:"VNN.nn",FORM=1:"NNN.nn",1:"ENNN.nn, VNN.nn or NNN.nn")
"RTN","PXRMVALC",23,0)
 ; Code transformation
"RTN","PXRMVALC",24,0)
 S CODE=X S:CODE'["." CODE=CODE_"."
"RTN","PXRMVALC",25,0)
 S:FORM=1&($L($P(CODE,".",1))=1)&(+($P(CODE,".",1))>0) $P(CODE,".",1)="00"_$P(CODE,".",1) S:FORM=1&($L($P(CODE,".",1))=2)&(+($P(CODE,".",1))>0) $P(CODE,".",1)="0"_$P(CODE,".",1) S X=CODE
"RTN","PXRMVALC",26,0)
 S CODE=$P(CODE,".",1,2),CODE=$$NEXT^PXRMVALU(CODE,80),COUT=CODE,(IENI,IENO)=""
"RTN","PXRMVALC",27,0)
 I $D(^ICD9("BA")),$D(^ICD9("BA",(COUT_" "))) D
"RTN","PXRMVALC",28,0)
 . S IENO=+($O(^ICD9("BA",(COUT_" "),0))),NAME=$P($G(^ICD9(+IENO,0)),U,3),IFOUT=$P($G(^ICD9(+IENO,0)),U,9)
"RTN","PXRMVALC",29,0)
 S ES="Invalid "_TY_" format "
"RTN","PXRMVALC",30,0)
 ; Format
"RTN","PXRMVALC",31,0)
 ;    not enough digits
"RTN","PXRMVALC",32,0)
 I $E(CIN,1)="E",$L($P($E(CIN,2,$L(CIN)),".",1))<3 D ERR((ES_"(not enough digits, "_PAT_")")) G AQ
"RTN","PXRMVALC",33,0)
 I $E(CIN,1)?1N,$L($P(CIN,".",1))<3 D ERR((ES_"(not enough digits, "_PAT_")")) G AQ
"RTN","PXRMVALC",34,0)
 I $E(CIN,1)="V",$L($P($E(CIN,2,$L(CIN)),".",1))<2 D ERR((ES_"(not enough digits, "_PAT_")")) G AQ
"RTN","PXRMVALC",35,0)
 ;    too many digits
"RTN","PXRMVALC",36,0)
 I $E(CIN,1)="E",$L($P($E(CIN,2,$L(CIN)),".",1))>3 D ERR((ES_"(too many digits, "_PAT_")")) G AQ
"RTN","PXRMVALC",37,0)
 I $E(CIN,1)?1N,$L($P(CIN,".",1))>3 D ERR((ES_"(too many digits, "_PAT_")")) G AQ
"RTN","PXRMVALC",38,0)
 I $E(CIN,1)="V",$L($P($E(CIN,2,$L(CIN)),".",1))>2 D ERR((ES_"(too many digits, "_PAT_")")) G AQ
"RTN","PXRMVALC",39,0)
 ;    missing decimal point
"RTN","PXRMVALC",40,0)
 I CIN'["." D ERR((ES_"(missing decimal point "_PAT_")")) G AQ
"RTN","PXRMVALC",41,0)
 ;    to many decimal points
"RTN","PXRMVALC",42,0)
 I $L(CIN,".")>2 D ERR((ES_"(too many decimal points "_PAT_")")) G AQ
"RTN","PXRMVALC",43,0)
 ;    to many decimal places
"RTN","PXRMVALC",44,0)
 I $L($P(CIN,".",2))>2 D ERR((ES_"(too many decimals places, "_PAT_")")) G AQ
"RTN","PXRMVALC",45,0)
 ;    non-numeric decimal
"RTN","PXRMVALC",46,0)
 I $P(CIN,".",2)'?2N&($P(CIN,".",2)'?1N)&($P(CIN,".",2)'="") D ERR((ES_"(non-numeric decimal, "_PAT_")")) G AQ
"RTN","PXRMVALC",47,0)
 ;    invalid pattern
"RTN","PXRMVALC",48,0)
 I $E(CIN,1)="E",$P(CIN,".",1)'?1U3N D ERR((ES_"("_PAT_")")) G AQ
"RTN","PXRMVALC",49,0)
 I $E(CIN,1)="V",$P(CIN,".",1)'?1U2N D ERR((ES_"("_PAT_")")) G AQ
"RTN","PXRMVALC",50,0)
 I $E(CIN,1)?1N,$P(CIN,".",1)'?3N D ERR((ES_"("_PAT_")")) G AQ
"RTN","PXRMVALC",51,0)
 ; Value
"RTN","PXRMVALC",52,0)
 ;    not found
"RTN","PXRMVALC",53,0)
 I $D(^ICD9("BA")),'$D(^ICD9("BA",(CIN_" "))) D  G AQ
"RTN","PXRMVALC",54,0)
 . N TC D ERR((TY_" not found in the ICD-9 file (#80)"))
"RTN","PXRMVALC",55,0)
 . S TC=COUT S:'$L(TC) TC=CIN I $E(TC,$L(TC))="0" D
"RTN","PXRMVALC",56,0)
 . . N SC,COUT S (SC,COUT)=TC F  S TC=$E(TC,1,($L(TC)-1)) S:$D(^ICD9("BA",(TC_" "))) SC=TC Q:$E(TC,$L(TC))'="0"!(SC'=COUT)  Q:TC=""
"RTN","PXRMVALC",57,0)
 . . S TC="" S:SC'=COUT TC=SC
"RTN","PXRMVALC",58,0)
 . S:$L(TC) COUT=TC
"RTN","PXRMVALC",59,0)
 . S:$D(^ICD9("BA",(CIN_"0 "))) COUT=CIN_"0"
"RTN","PXRMVALC",60,0)
 . I $D(^ICD9("BA")),$D(^ICD9("BA",(COUT_" "))) D
"RTN","PXRMVALC",61,0)
 . . S IENO=+($O(^ICD9("BA",(COUT_" "),0))),NAME=$P($G(^ICD9(+IENO,0)),U,3),IFOUT=$P($G(^ICD9(+IENO,0)),U,9)
"RTN","PXRMVALC",62,0)
 ;    found
"RTN","PXRMVALC",63,0)
 I $D(^ICD9("BA")),$D(^ICD9("BA",(CIN_" "))) D  G AQ
"RTN","PXRMVALC",64,0)
 . D ERR(("Valid "_TY)) S VAL=1,IENI=+($O(^ICD9("BA",(CIN_" "),0)))
"RTN","PXRMVALC",65,0)
 . S NAME=$P($G(^ICD9(+IENI,0)),U,3),IFIN=$P($G(^ICD9(+IENI,0)),U,9) S:(+(IFOUT)+(IFIN))>0 ERR="Inactive "_TY
"RTN","PXRMVALC",66,0)
 G AQ
"RTN","PXRMVALC",67,0)
 ;   
"RTN","PXRMVALC",68,0)
ICP(X) ; Validate ICD-9-CM Procedure Code from file 80.1
"RTN","PXRMVALC",69,0)
 S X=$G(X),U="^" N CHR,CHKD,CIN,CODE,COUT,DIC,ERR,ES,EXP,FNUM,FORM,IENI,IENO,IFIN,IFOUT,NAME,NUMERIC,PAT,TY,VAL,Y
"RTN","PXRMVALC",70,0)
 S FNUM=80.1,DIC="ICD0(",VAL=1,(NAME,IFIN,IFOUT)="",CIN=$TR(X,"""","")
"RTN","PXRMVALC",71,0)
 ; Code transformation
"RTN","PXRMVALC",72,0)
 S CODE=X,TY="ICD Procedure code",PAT="NN.nn",CHKD=TY S:CODE'["." CODE=CODE_"." S:$L($P(CODE,".",1))=1 CODE="0"_CODE S CODE=$$NEXT^PXRMVALU(CODE,80.1),COUT=CODE
"RTN","PXRMVALC",73,0)
 S VAL=1,ERR="Valid "_TY I $D(^ICD0("BA")),$D(^ICD0("BA",(CODE_" "))) S IENO=+($O(^ICD0("BA",(CODE_" "),0))),NAME=$P($G(^ICD0(+IENO,0)),U,4),IFOUT=$P($G(^ICD0(+IENO,0)),U,9)
"RTN","PXRMVALC",74,0)
 S ES="Invalid "_TY_" format "
"RTN","PXRMVALC",75,0)
 ; Format
"RTN","PXRMVALC",76,0)
 ;    not enough digits
"RTN","PXRMVALC",77,0)
 I $L($P(CIN,".",1))<2 D ERR((ES_"(not enough digits, "_PAT_")")) G AQ
"RTN","PXRMVALC",78,0)
 ;    too many digits
"RTN","PXRMVALC",79,0)
 I $L($P(CIN,".",1))>2 D ERR((ES_"(too many digits, "_PAT_")")) G AQ
"RTN","PXRMVALC",80,0)
 ;    missing decimal point
"RTN","PXRMVALC",81,0)
 I CIN'["." D ERR((ES_"(missing decimal point "_PAT_")")) G AQ
"RTN","PXRMVALC",82,0)
 ;    too many decimal points
"RTN","PXRMVALC",83,0)
 I $L(CIN,".")>2 D ERR((ES_"(too many decimal points "_PAT_")")) G AQ
"RTN","PXRMVALC",84,0)
 ;    too many decimal places
"RTN","PXRMVALC",85,0)
 I $L($P(CIN,".",2))>2 D ERR((ES_"(too many decimals places, "_PAT_")")) G AQ
"RTN","PXRMVALC",86,0)
 ;    non-numeric decimal
"RTN","PXRMVALC",87,0)
 I $P(CIN,".",2)'?2N&($P(CIN,".",2)'?1N)&($P(CIN,".",2)'="") D ERR((ES_"(non-numeric decimal, "_PAT_")")) G AQ
"RTN","PXRMVALC",88,0)
 ;    invalid pattern
"RTN","PXRMVALC",89,0)
 I $P(CIN,".",1)'?2N D ERR((ES_"("_PAT_")")) G AQ
"RTN","PXRMVALC",90,0)
 ; Value
"RTN","PXRMVALC",91,0)
 ;    not found
"RTN","PXRMVALC",92,0)
 I $D(^ICD0("BA")),'$D(^ICD0("BA",(CIN_" "))) D  G AQ
"RTN","PXRMVALC",93,0)
 . N TC D ERR((TY_" not found in the ICD-9 file (#80.1)")) S COUT=""
"RTN","PXRMVALC",94,0)
 . S TC=COUT S:'$L(TC) TC=CIN I $E(TC,$L(TC))="0" D
"RTN","PXRMVALC",95,0)
 . . N SC,COUT S (SC,COUT)=TC F  S TC=$E(TC,1,($L(TC)-1)) S:$D(^ICD0("BA",(TC_" "))) SC=TC Q:$E(TC,$L(TC))'="0"!(SC'=COUT)  Q:TC=""
"RTN","PXRMVALC",96,0)
 . . S TC="" S:SC'=COUT TC=SC
"RTN","PXRMVALC",97,0)
 . S:$L(TC) COUT=TC
"RTN","PXRMVALC",98,0)
 . S:$D(^ICD0("BA",(CIN_"0 "))) COUT=CIN_"0"
"RTN","PXRMVALC",99,0)
 . I $D(^ICD0("BA")),$D(^ICD0("BA",(COUT_" "))) D
"RTN","PXRMVALC",100,0)
 . . S IENO=+($O(^ICD0("BA",(COUT_" "),0))),NAME=$P($G(^ICD0(+IENO,0)),U,3),IFOUT=$P($G(^ICD0(+IENO,0)),U,9)
"RTN","PXRMVALC",101,0)
 ;    found
"RTN","PXRMVALC",102,0)
 I $D(^ICD0("BA")),$D(^ICD0("BA",(CIN_" "))) D  G AQ
"RTN","PXRMVALC",103,0)
 . S VAL=1,ERR="Valid "_TY,IENI=+($O(^ICD0("BA",(CIN_" "),0)))
"RTN","PXRMVALC",104,0)
 . S NAME=$P($G(^ICD0(+IENI,0)),U,4),IFIN=$P($G(^ICD0(+IENI,0)),U,9) S:(+(IFOUT)+(IFIN))>0 ERR="Inactive "_TY
"RTN","PXRMVALC",105,0)
 G AQ
"RTN","PXRMVALC",106,0)
 ;            
"RTN","PXRMVALC",107,0)
CPT(X) ; Validate CPT-4 Procedure Code from file 81
"RTN","PXRMVALC",108,0)
 S X=$G(X),U="^"
"RTN","PXRMVALC",109,0)
 N CHR,CHKD,CIN,CODE,COUT,DIC,ERR,ES,EXP,FNUM,FORM,IENI,IENO,IFIN,IFOUT
"RTN","PXRMVALC",110,0)
 N NAME,NUMERIC,PAT,STATUS,TEMP,TY,VAL,Y
"RTN","PXRMVALC",111,0)
 S VAL=1,FNUM=81,DIC="ICPT(",(IFIN,IFOUT,NAME)="",CIN=$TR(X,"""",""),U="^",FORM=$S($E(X,1)?1N:1,$E(X,1)?1U:2,1:1)
"RTN","PXRMVALC",112,0)
 S TY=$S(FORM=1:"CPT-4 code",FORM=2:"HCPCS code",1:"Procedure code")
"RTN","PXRMVALC",113,0)
 S CHKD=$S(FORM=1:"CPT-4 procedure code",FORM=2:"HCPCS procedure code",1:"CPT-4 procedure code")
"RTN","PXRMVALC",114,0)
 S PAT=$S(FORM=1:"NNNNN",FORM=2:"UNNNN",1:"NNNNN or UNNNN")
"RTN","PXRMVALC",115,0)
 S ES="Invalid "_TY_" format "
"RTN","PXRMVALC",116,0)
 ; Code transformation
"RTN","PXRMVALC",117,0)
 ;    HCPCS
"RTN","PXRMVALC",118,0)
 S CODE=X I FORM=2 D
"RTN","PXRMVALC",119,0)
 . N CHR,NUMERIC S CHR=$E(CODE,1),NUMERIC=$E(CODE,2,$L(CODE))
"RTN","PXRMVALC",120,0)
 . S NUMERIC=$TR(NUMERIC,"~!@#$%^&*()_-+=[{]};:\|,./?<>QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm","0000000000000000000000000000000000000000000000000000000000000000000000000000000000")
"RTN","PXRMVALC",121,0)
 . F  Q:$E(NUMERIC,1)'="0"  S NUMERIC=$E(NUMERIC,2,$L(NUMERIC))
"RTN","PXRMVALC",122,0)
 . S NUMERIC=+NUMERIC F  Q:$L(NUMERIC)>3  S NUMERIC="0"_NUMERIC
"RTN","PXRMVALC",123,0)
 . S CODE=CHR_NUMERIC
"RTN","PXRMVALC",124,0)
 ;    CPT-4
"RTN","PXRMVALC",125,0)
 I FORM=1 D
"RTN","PXRMVALC",126,0)
 . N NUMERIC S NUMERIC=CODE,NUMERIC=$TR(NUMERIC,"~!@#$%^&*()_-+=[{]};:\|,./?<>QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm","0000000000000000000000000000000000000000000000000000000000000000000000000000000000")
"RTN","PXRMVALC",127,0)
 . I +NUMERIC>0,$E(NUMERIC,1)'="0",$L(NUMERIC)<5 F  Q:$L(NUMERIC)=5  S NUMERIC="0"_NUMERIC
"RTN","PXRMVALC",128,0)
 . I +NUMERIC>0,$E(NUMERIC,1)="0",$L(NUMERIC)<5 F  Q:$L(NUMERIC)=5  S NUMERIC=NUMERIC_"0"
"RTN","PXRMVALC",129,0)
 . F  Q:$E(NUMERIC,1)'="0"  S NUMERIC=$E(NUMERIC,2,$L(NUMERIC))
"RTN","PXRMVALC",130,0)
 . S NUMERIC=+NUMERIC F  Q:$L(NUMERIC)>4  S NUMERIC="0"_NUMERIC
"RTN","PXRMVALC",131,0)
 . S CODE=NUMERIC
"RTN","PXRMVALC",132,0)
 S CODE=$$NEXT^PXRMVALU(CODE,81),COUT=CODE S (IENI,IENO)=""
"RTN","PXRMVALC",133,0)
 I $L(COUT),$D(^ICPT("B")),$D(^ICPT("B",COUT)) D
"RTN","PXRMVALC",134,0)
 . S IENO=+($O(^ICPT("B",COUT,0)))
"RTN","PXRMVALC",135,0)
 . S TEMP=$$CPT^ICPTCOD(IENO)
"RTN","PXRMVALC",136,0)
 . S NAME=$P(TEMP,U,3)
"RTN","PXRMVALC",137,0)
 . S STATUS=$P(TEMP,U,7)
"RTN","PXRMVALC",138,0)
 . S IFOUT=$S(STATUS:"",1:1)
"RTN","PXRMVALC",139,0)
 ; Format
"RTN","PXRMVALC",140,0)
 ;    not enough characters
"RTN","PXRMVALC",141,0)
 I $L(CIN)<5 D ERR((ES_"(not enough characters)")) G AQ
"RTN","PXRMVALC",142,0)
 ;    too many characters
"RTN","PXRMVALC",143,0)
 I $L(CIN)>5 D ERR((ES_"(too many characters)")) G AQ
"RTN","PXRMVALC",144,0)
 ;    invalid pattern
"RTN","PXRMVALC",145,0)
 ;       CPT-4
"RTN","PXRMVALC",146,0)
 I $E(CIN,1)?1N,CIN'?5N D ERR((ES_"("_PAT_")")) G AQ
"RTN","PXRMVALC",147,0)
 ;       HCPCS
"RTN","PXRMVALC",148,0)
 I $E(CIN,1)?1U,CIN'?1U4N D ERR((ES_"("_PAT_")")) G AQ
"RTN","PXRMVALC",149,0)
 I CIN'?5N&(CIN'?1U.4N) D ERR(("Invalid code format (NNNNN or UNNNN)")) G AQ
"RTN","PXRMVALC",150,0)
 ; Value
"RTN","PXRMVALC",151,0)
 ;    not found
"RTN","PXRMVALC",152,0)
 I $D(^ICPT("B")),'$D(^ICPT("B",CIN)) D ERR((TY_" not found in the CPT file (#81)")) S COUT="" G AQ
"RTN","PXRMVALC",153,0)
 ;    found
"RTN","PXRMVALC",154,0)
 I $D(^ICPT("B")),$D(^ICPT("B",CIN)) D  G AQ
"RTN","PXRMVALC",155,0)
 . S VAL=1,ERR="Valid "_TY,IENI=+($O(^ICPT("B",CIN,0)))
"RTN","PXRMVALC",156,0)
 . S TEMP=$$CPT^ICPTCOD(IENO)
"RTN","PXRMVALC",157,0)
 . S NAME=$P(TEMP,U,3)
"RTN","PXRMVALC",158,0)
 . S STATUS=$P(TEMP,U,7)
"RTN","PXRMVALC",159,0)
 . S IFIN=$S(STATUS:"",1:1)
"RTN","PXRMVALC",160,0)
 . S:(+(IFOUT)+(IFIN))>0 ERR="Inactive "_TY
"RTN","PXRMVALC",161,0)
 G AQ
"RTN","PXRMVALC",162,0)
AQ ; Assemble output string and quit
"RTN","PXRMVALC",163,0)
 S X=$G(VAL)_U_$G(CIN)_U_$G(COUT)_U_$G(ERR)_U_FNUM
"RTN","PXRMVALC",164,0)
 S X=X_U_DIC_U_$G(CHKD)_U_$G(IENI)_U_$G(IFIN)_U_$G(IENO)_U_$G(IFOUT)_U_$G(NAME)
"RTN","PXRMVALC",165,0)
 F  Q:$E(X,$L(X))'="^"  S X=$E(X,1,($L(X)-1))
"RTN","PXRMVALC",166,0)
 Q X
"RTN","PXRMVALC",167,0)
ERR(X) S VAL=0,ERR=$G(X) Q
"RTN","PXRMVALU")
0^133^B17713005
"RTN","PXRMVALU",1,0)
PXRMVALU ; SLC/KER - Validate Codes (utility)    ; 05/16/2000
"RTN","PXRMVALU",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMVALU",3,0)
 ;
"RTN","PXRMVALU",4,0)
 Q
"RTN","PXRMVALU",5,0)
FILE(X) ; Get File
"RTN","PXRMVALU",6,0)
 ;   
"RTN","PXRMVALU",7,0)
 ; Requires:
"RTN","PXRMVALU",8,0)
 ;   
"RTN","PXRMVALU",9,0)
 ;           X       in the form of a classification code
"RTN","PXRMVALU",10,0)
 ;   
"RTN","PXRMVALU",11,0)
 ; Returns:
"RTN","PXRMVALU",12,0)
 ;   
"RTN","PXRMVALU",13,0)
 ;          <file #>^<DIC>^<code type>
"RTN","PXRMVALU",14,0)
 ;   
"RTN","PXRMVALU",15,0)
 S X=$G(X) Q:'$L(X) "80^ICD9(^ICD-9-CM diagnostic code"
"RTN","PXRMVALU",16,0)
 N FI,DIC,TYPE S (FI,DIC,TYPE)=""
"RTN","PXRMVALU",17,0)
 I +X>0 D  Q (FI_"^"_DIC_"^"_TYPE)
"RTN","PXRMVALU",18,0)
 . I $L($P(X,".",1))>3,X'["." S FI=81,DIC="ICPT(",TYPE="CPT-4 procedure code" Q
"RTN","PXRMVALU",19,0)
 . I $L($P(X,".",1))>2 S FI=80,DIC="ICD9(",TYPE="ICD-9-CM diagnosis code" Q
"RTN","PXRMVALU",20,0)
 . I $L($P(X,".",1))'>2 D
"RTN","PXRMVALU",21,0)
 . . N I,OK,SEARCH,CONTROL S SEARCH=$E(X,1,($L(X)-1))_$C($A($E(X,$L(X)))-1)_"~",CONTROL=X
"RTN","PXRMVALU",22,0)
 . . S OK=0 F I=1:1 D  Q:OK=1!($L($P(SEARCH,".",1))>3)
"RTN","PXRMVALU",23,0)
 . . . I $O(^ICD9("BA",(SEARCH_" ")))=(CONTROL_" ") D  Q
"RTN","PXRMVALU",24,0)
 . . . . S OK=1,FI=80,DIC="ICD9(",TYPE="ICD-9-CM diagnosis code" Q 
"RTN","PXRMVALU",25,0)
 . . . I $O(^ICD0("BA",(SEARCH_" ")))=(CONTROL_" ") D  Q
"RTN","PXRMVALU",26,0)
 . . . . S OK=1,FI=80.1,DIC="ICD9(",TYPE="ICD-9-CM procedure code" Q
"RTN","PXRMVALU",27,0)
 . . . S SEARCH="0"_SEARCH,CONTROL="0"_CONTROL
"RTN","PXRMVALU",28,0)
 . . I 'OK S SEARCH=$E(X,1,($L(X)-1))_$C($A($E(X,$L(X)))-1)_"~",CONTROL=X F I=1:1 D  Q:OK=1!($L($P(SEARCH,".",1))>3)
"RTN","PXRMVALU",29,0)
 . . . I $P($O(^ICD9("BA",(SEARCH_" "))),".",1)=$P(CONTROL,".",1),+($P($O(^ICD9("BA",(SEARCH_" "))),".",2))=0,+($P(CONTROL,".",2))=0 D  Q
"RTN","PXRMVALU",30,0)
 . . . . S OK=1,FI=80,DIC="ICD9(",TYPE="ICD-9-CM diagnosis code" Q 
"RTN","PXRMVALU",31,0)
 . . . I $P($O(^ICD0("BA",(SEARCH_" "))),".",1)=$P(CONTROL,".",1),+($P($O(^ICD0("BA",(SEARCH_" "))),".",2))=0,+($P(CONTROL,".",2))=0 D  Q
"RTN","PXRMVALU",32,0)
 . . . . S OK=1,FI=80.1,DIC="ICD9(",TYPE="ICD-9-CM procedure code" Q
"RTN","PXRMVALU",33,0)
 . . . S SEARCH="0"_SEARCH,CONTROL="0"_CONTROL
"RTN","PXRMVALU",34,0)
 . S:TYPE="" FI=80,DIC="ICD9(",TYPE="ICD-9-CM diagnosis code"
"RTN","PXRMVALU",35,0)
 I +X=0 D  Q (FI_"^"_DIC_"^"_TYPE)
"RTN","PXRMVALU",36,0)
 . I $L($P(X,".",1))>4,X'["." S FI=81,DIC="ICPT(",TYPE="HCPCS procedure code" Q
"RTN","PXRMVALU",37,0)
 . I X["-" S FI=81,DIC="ICPT(",TYPE="HCPCS procedure code" Q
"RTN","PXRMVALU",38,0)
 . I $E(X,1)="E",X["." S FI=80,DIC="ICD9(",TYPE="ICD-9-CM ""E"" code (external causes)" Q
"RTN","PXRMVALU",39,0)
 . I $E(X,1)="E",$L($E(X,2,$L(X)))=3 S FI=80,DIC="ICD9(",TYPE="ICD-9-CM ""E"" code (external causes)" Q
"RTN","PXRMVALU",40,0)
 . I $E(X,1)="V",X["." S FI=80,DIC="ICD9(",TYPE="ICD-9-CM ""V"" code (health factors)" Q
"RTN","PXRMVALU",41,0)
 . I $E(X,1)="V",$L($E(X,2,$L(X)))=2 S FI=80,DIC="ICD9(",TYPE="ICD-9-CM ""V"" code (health factors)" Q
"RTN","PXRMVALU",42,0)
 . S FI=80,DIC="ICD9(",TYPE="ICD-9-CM diagnosis code"
"RTN","PXRMVALU",43,0)
 Q "80^ICD9(^ICD-9-CM diagnostic code"
"RTN","PXRMVALU",44,0)
TYPE(X,Y) ; Code type
"RTN","PXRMVALU",45,0)
 ;
"RTN","PXRMVALU",46,0)
 ; Requires:
"RTN","PXRMVALU",47,0)
 ;   
"RTN","PXRMVALU",48,0)
 ;           X       in the form of a classification code
"RTN","PXRMVALU",49,0)
 ;           Y       file number or global root
"RTN","PXRMVALU",50,0)
 ;   
"RTN","PXRMVALU",51,0)
 ; Returns:
"RTN","PXRMVALU",52,0)
 ;   
"RTN","PXRMVALU",53,0)
 ;         <type>    free text string description of code type
"RTN","PXRMVALU",54,0)
 ;   
"RTN","PXRMVALU",55,0)
 ;                   ICD-9-CM diagnosis
"RTN","PXRMVALU",56,0)
 ;                   ICD-9-CM "E" external causes
"RTN","PXRMVALU",57,0)
 ;                   ICD-9-CM "V" health factors
"RTN","PXRMVALU",58,0)
 ;                   ICD-9-CM procedures
"RTN","PXRMVALU",59,0)
 ;                   CPT-4 procedures
"RTN","PXRMVALU",60,0)
 ;                   HCPCS procedures
"RTN","PXRMVALU",61,0)
 ;   
"RTN","PXRMVALU",62,0)
 N TYPE,FI,CO S FI=$G(Y),CO=$G(X),TYPE="" S:+CO>0&(FI=80!(FI["ICD9")) TYPE="ICD-9-CM diagnosis" S:$E(CO,1)="E"&(FI=80!(FI["ICD9")) TYPE="ICD-9-CM ""E"" external causes"
"RTN","PXRMVALU",63,0)
 S:$E(CO,1)="V"&(FI=80!(FI["ICD9")) TYPE="ICD-9-CM ""V"" health factors" S:+CO>0&(FI=80.1!(FI["ICD0")) TYPE="ICD-9-CM procedures"
"RTN","PXRMVALU",64,0)
 S:+CO>0&(FI=81!(FI["ICPT")) TYPE="CPT-4 procedures" S:+CO=0&(FI=81!(FI["ICPT")) TYPE="HCPCS procedures"
"RTN","PXRMVALU",65,0)
 S X=TYPE Q X
"RTN","PXRMVALU",66,0)
NEXT(X,FILE) ; Next code in file
"RTN","PXRMVALU",67,0)
 ;
"RTN","PXRMVALU",68,0)
 ; Requires:
"RTN","PXRMVALU",69,0)
 ;   
"RTN","PXRMVALU",70,0)
 ;           X       in the form of a classification code
"RTN","PXRMVALU",71,0)
 ;           FILE    file number
"RTN","PXRMVALU",72,0)
 ;   
"RTN","PXRMVALU",73,0)
 ; Returns:
"RTN","PXRMVALU",74,0)
 ;   
"RTN","PXRMVALU",75,0)
 ;         <code>    Next code found in file
"RTN","PXRMVALU",76,0)
 ;               
"RTN","PXRMVALU",77,0)
 N NCODE,NEXT S FILE=+($G(FILE)),X=$$TRIM($G(X)) Q:X="" ""
"RTN","PXRMVALU",78,0)
 I FILE=80 D  Q X
"RTN","PXRMVALU",79,0)
 . Q:$D(^ICD9("BA",X_" "))  S NEXT=$$TRIM($O(^ICD9("BA",(X_" ")))) I $E(NEXT,1,$L(X))=X S X=NEXT Q
"RTN","PXRMVALU",80,0)
 . S:$E(NEXT,1,$L(X))'=X X=""
"RTN","PXRMVALU",81,0)
 I FILE=80.1 D  Q X
"RTN","PXRMVALU",82,0)
 . Q:$D(^ICD0("BA",X_" "))  S NEXT=$$TRIM($O(^ICD0("BA",(X_" ")))) I $E(NEXT,1,$L(X))=X S X=NEXT Q
"RTN","PXRMVALU",83,0)
 . S:$E(NEXT,1,$L(X))'=X X=""
"RTN","PXRMVALU",84,0)
 I FILE=81 D  Q X
"RTN","PXRMVALU",85,0)
 . S NCODE=X I +NCODE>0,$E(NCODE,1)'="0",$L(NCODE)<5 F  Q:$L(NCODE)=5  S NCODE="0"_NCODE
"RTN","PXRMVALU",86,0)
 . S:$D(^ICPT("B",NCODE)) X=NCODE Q:$D(^ICPT("B",X))  S NEXT=$$TRIM($O(^ICPT("B",NCODE))) I $E(NEXT,1,$L(X))=X S X=NEXT Q
"RTN","PXRMVALU",87,0)
 . S:$E(NEXT,1,$L(X))'=X X=""
"RTN","PXRMVALU",88,0)
 Q X
"RTN","PXRMVALU",89,0)
TRIM(X) ; Trim leading/trailing spaces
"RTN","PXRMVALU",90,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","PXRMVALU",91,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","PXRMVALU",92,0)
 Q X
"RTN","PXRMVCOP")
1^205
"RTN","PXRMVCPT")
0^135^B5658756
"RTN","PXRMVCPT",1,0)
PXRMVCPT ; SLC/PKR - Code to handle VCPT data. ;05/19/2000
"RTN","PXRMVCPT",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMVCPT",3,0)
 ;
"RTN","PXRMVCPT",4,0)
 ;=======================================================================
"RTN","PXRMVCPT",5,0)
EVAL(DFN,TAXIEN,FLIST) ;Evaluate V CPT entries.
"RTN","PXRMVCPT",6,0)
 N FIRST,ICPTP,INVDATE,LAST,TLIST,VCPTIEN,VDATE,VIEN
"RTN","PXRMVCPT",7,0)
 I '$D(^AUPNVCPT("AA",DFN)) Q
"RTN","PXRMVCPT",8,0)
 ;Get the first and last entry in the patient cache, use this for the
"RTN","PXRMVCPT",9,0)
 ;match limits.
"RTN","PXRMVCPT",10,0)
 S FIRST=$O(^AUPNVCPT("AA",DFN,""))
"RTN","PXRMVCPT",11,0)
 S LAST=$O(^AUPNVCPT("AA",DFN,""),-1)
"RTN","PXRMVCPT",12,0)
 S ICPTP=FIRST-1
"RTN","PXRMVCPT",13,0)
 F  S ICPTP=$O(^PXD(811.3,TAXIEN,81,"ICPTP",ICPTP)) Q:(ICPTP>LAST)!(ICPTP="")  D
"RTN","PXRMVCPT",14,0)
 . S INVDATE=+$O(^AUPNVCPT("AA",DFN,ICPTP,""))
"RTN","PXRMVCPT",15,0)
 . I INVDATE>0 D
"RTN","PXRMVCPT",16,0)
 .. S VCPTIEN=$O(^AUPNVCPT("AA",DFN,ICPTP,INVDATE,""))
"RTN","PXRMVCPT",17,0)
 .. S VIEN=$P(^AUPNVCPT(VCPTIEN,0),U,3)
"RTN","PXRMVCPT",18,0)
 .. S VDATE=$$VDATE^PXRMDATE(VIEN)
"RTN","PXRMVCPT",19,0)
 .. S TLIST(INVDATE)=VCPTIEN_U_VIEN_U_VDATE_U_ICPTP
"RTN","PXRMVCPT",20,0)
 ;Return the most recent entry only.
"RTN","PXRMVCPT",21,0)
 S INVDATE=$O(TLIST(""))
"RTN","PXRMVCPT",22,0)
 ;If there are no entries we are done.
"RTN","PXRMVCPT",23,0)
 I INVDATE="" Q
"RTN","PXRMVCPT",24,0)
 S FLIST(INVDATE,"AUPNVCPT")=TLIST(INVDATE)
"RTN","PXRMVCPT",25,0)
 Q
"RTN","PXRMVCPT",26,0)
 ;
"RTN","PXRMVCPT",27,0)
 ;======================================================================
"RTN","PXRMVCPT",28,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMVCPT",29,0)
 ;maintenance output. The VCPT information is:  DATE, ICPT CODE,
"RTN","PXRMVCPT",30,0)
 ;SHORT NAME, PROVIDER NARRATIVE.
"RTN","PXRMVCPT",31,0)
 N CODE,CPT,CPTDATA,D0,ICPTP,FIEN,PN,SNAME,TEMP,VDATE
"RTN","PXRMVCPT",32,0)
 S FIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMVCPT",33,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMVCPT",34,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMVCPT",35,0)
 S TEMP=TEMP_" Encounter Procedure: "
"RTN","PXRMVCPT",36,0)
 S D0=$G(^AUPNVCPT(FIEN,0))
"RTN","PXRMVCPT",37,0)
 S ICPTP=FIEVAL(FINDING,"CODEP")
"RTN","PXRMVCPT",38,0)
 S CPTDATA=$$CPT^ICPTCOD(ICPTP)
"RTN","PXRMVCPT",39,0)
 S CODE=$P(CPTDATA,U,2)
"RTN","PXRMVCPT",40,0)
 S SNAME=$P(CPTDATA,U,3)
"RTN","PXRMVCPT",41,0)
 S TEMP=TEMP_CODE
"RTN","PXRMVCPT",42,0)
 S TEMP=TEMP_"-"_SNAME
"RTN","PXRMVCPT",43,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMVCPT",44,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMVCPT",45,0)
 S NLINES=NLINES+1
"RTN","PXRMVCPT",46,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMVCPT",47,0)
 S PN=$P(D0,U,4)
"RTN","PXRMVCPT",48,0)
 S PN=$P(^AUTNPOV(PN,0),U,1)
"RTN","PXRMVCPT",49,0)
 I ($L(PN)>0)&(PN'=SNAME) D
"RTN","PXRMVCPT",50,0)
 . S NLINES=NLINES+1
"RTN","PXRMVCPT",51,0)
 . S TEXT(NLINES)="  Prov. Narr. - "_PN
"RTN","PXRMVCPT",52,0)
 I $D(PXRMDEV) D
"RTN","PXRMVCPT",53,0)
 . N UID
"RTN","PXRMVCPT",54,0)
 . S UID="CPTVCPT "_ICPTP
"RTN","PXRMVCPT",55,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"DATE")=VDATE
"RTN","PXRMVCPT",56,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"CODE")=CODE
"RTN","PXRMVCPT",57,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"PN")=PN
"RTN","PXRMVCPT",58,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"SNAME")=SNAME
"RTN","PXRMVCPT",59,0)
 ;
"RTN","PXRMVCPT",60,0)
 ;For historical encounters display the location and comments.
"RTN","PXRMVCPT",61,0)
 I VDATE["E" D
"RTN","PXRMVCPT",62,0)
 . N INDEX,VIEN
"RTN","PXRMVCPT",63,0)
 . S INDEX="CPTVCPT-"_CODE
"RTN","PXRMVCPT",64,0)
 . S VIEN=FIEVAL(FINDING,"VIEN")
"RTN","PXRMVCPT",65,0)
 . D HLCV^PXRMVSIT(.NLINES,.TEXT,VIEN,INDEX)
"RTN","PXRMVCPT",66,0)
 Q
"RTN","PXRMVCPT",67,0)
 ;
"RTN","PXRMVPOP")
1^206
"RTN","PXRMVPOV")
0^137^B10937454
"RTN","PXRMVPOV",1,0)
PXRMVPOV ; SLC/PKR - Code to handle VPOV ;05/19/2000
"RTN","PXRMVPOV",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMVPOV",3,0)
 ;
"RTN","PXRMVPOV",4,0)
 ;======================================================================
"RTN","PXRMVPOV",5,0)
BLDPC(DFN) ;Check and if necessary build the V POV patient cache.
"RTN","PXRMVPOV",6,0)
 N ICD9P,IEN,INVDATE,NPATIEN,PS,TEMP,VIEN,VDATE,VPOVIEN
"RTN","PXRMVPOV",7,0)
 I '$D(^XTMP(PXRMDFN,"VPOV","NPATIEN")) D
"RTN","PXRMVPOV",8,0)
 . K ^TMP($J,"VPOV"),^XTMP(PXRMDFN,"VPOV")
"RTN","PXRMVPOV",9,0)
 . S INVDATE=""
"RTN","PXRMVPOV",10,0)
 . F  S INVDATE=$O(^AUPNVPOV("AA",DFN,INVDATE)) Q:INVDATE=""  D
"RTN","PXRMVPOV",11,0)
 .. S VPOVIEN=""
"RTN","PXRMVPOV",12,0)
 .. F  S VPOVIEN=$O(^AUPNVPOV("AA",DFN,INVDATE,VPOVIEN)) Q:VPOVIEN=""  D
"RTN","PXRMVPOV",13,0)
 ... S TEMP=$G(^AUPNVPOV(VPOVIEN,0))
"RTN","PXRMVPOV",14,0)
 ... S ICD9P=$P(TEMP,U,1)
"RTN","PXRMVPOV",15,0)
 ... S VIEN=$P(TEMP,U,3)
"RTN","PXRMVPOV",16,0)
 ... S PS=$P(TEMP,U,12)
"RTN","PXRMVPOV",17,0)
 ... S VDATE=$$VDATE^PXRMDATE(VIEN)
"RTN","PXRMVPOV",18,0)
 ... S ^TMP($J,"VPOV",ICD9P,INVDATE)=VPOVIEN_U_VIEN_U_VDATE_U_ICD9P_U_PS
"RTN","PXRMVPOV",19,0)
 .;Build the list of most recent entries.
"RTN","PXRMVPOV",20,0)
 . S NPATIEN=0
"RTN","PXRMVPOV",21,0)
 . S ICD9P=""
"RTN","PXRMVPOV",22,0)
 . F  S ICD9P=$O(^TMP($J,"VPOV",ICD9P)) Q:ICD9P=""  D
"RTN","PXRMVPOV",23,0)
 .. S NPATIEN=NPATIEN+1
"RTN","PXRMVPOV",24,0)
 .. S INVDATE=$O(^TMP($J,"VPOV",ICD9P,""))
"RTN","PXRMVPOV",25,0)
 .. S ^XTMP(PXRMDFN,"VPOV",ICD9P,INVDATE)=^TMP($J,"VPOV",ICD9P,INVDATE)
"RTN","PXRMVPOV",26,0)
 . S ^XTMP(PXRMDFN,"VPOV","NPATIEN")=NPATIEN
"RTN","PXRMVPOV",27,0)
 . K ^TMP($J,"VPOV")
"RTN","PXRMVPOV",28,0)
 E  S NPATIEN=^XTMP(PXRMDFN,"VPOV","NPATIEN")
"RTN","PXRMVPOV",29,0)
 Q NPATIEN
"RTN","PXRMVPOV",30,0)
 ;
"RTN","PXRMVPOV",31,0)
 ;======================================================================
"RTN","PXRMVPOV",32,0)
EVAL(DFN,TAXIEN,FLIST) ;Evaluate V POV entries.
"RTN","PXRMVPOV",33,0)
 N FIRST,ICD9P,INVDATE,LAST,NPATIEN,PDS,TEMP,TLIST
"RTN","PXRMVPOV",34,0)
 ;
"RTN","PXRMVPOV",35,0)
 S NPATIEN=$$BLDPC(DFN)
"RTN","PXRMVPOV",36,0)
 I NPATIEN=0 Q
"RTN","PXRMVPOV",37,0)
 ;See if we are looking for primary only. The code is "P" for primary.
"RTN","PXRMVPOV",38,0)
 I $P(^PXD(811.2,TAXIEN,0),U,4)["ENPR" S PDS="P"
"RTN","PXRMVPOV",39,0)
 E  S PDS=""
"RTN","PXRMVPOV",40,0)
 ;Get the first and last entry in the patient cache, use this for the
"RTN","PXRMVPOV",41,0)
 ;match limits.
"RTN","PXRMVPOV",42,0)
 S FIRST=$O(^XTMP(PXRMDFN,"VPOV",""))
"RTN","PXRMVPOV",43,0)
 S LAST=$O(^XTMP(PXRMDFN,"VPOV","NPATIEN"),-1)
"RTN","PXRMVPOV",44,0)
 S ICD9P=FIRST-1
"RTN","PXRMVPOV",45,0)
 F  S ICD9P=$O(^PXD(811.3,TAXIEN,80,"ICD9P",ICD9P)) Q:(ICD9P>LAST)!(ICD9P="")  D
"RTN","PXRMVPOV",46,0)
 . S INVDATE=+$O(^XTMP(PXRMDFN,"VPOV",ICD9P,""))
"RTN","PXRMVPOV",47,0)
 . I INVDATE>0 D
"RTN","PXRMVPOV",48,0)
 .. S TEMP=^XTMP(PXRMDFN,"VPOV",ICD9P,INVDATE)
"RTN","PXRMVPOV",49,0)
 .. I (PDS="")!(PDS=$P(TEMP,U,5)) S TLIST(INVDATE)=TEMP
"RTN","PXRMVPOV",50,0)
 ;Return the most recent entry only.
"RTN","PXRMVPOV",51,0)
 S INVDATE=$O(TLIST(""))
"RTN","PXRMVPOV",52,0)
 ;If there are no entries we are done.
"RTN","PXRMVPOV",53,0)
 I INVDATE="" Q
"RTN","PXRMVPOV",54,0)
 S FLIST(INVDATE,"AUPNVPOV")=TLIST(INVDATE)
"RTN","PXRMVPOV",55,0)
 Q
"RTN","PXRMVPOV",56,0)
 ;
"RTN","PXRMVPOV",57,0)
 ;======================================================================
"RTN","PXRMVPOV",58,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMVPOV",59,0)
 ;maintenance output. The VPOV information is:  DATE, ICD9 IEN, 
"RTN","PXRMVPOV",60,0)
 ;ICD9 CODE, MODIFIER, PROVIDER NARRATIVE.
"RTN","PXRMVPOV",61,0)
 N CODE,D0,DIAG,FIEN,ICD9P,ICD9ZN,PN,TEMP,VDATE
"RTN","PXRMVPOV",62,0)
 S FIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMVPOV",63,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMVPOV",64,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMVPOV",65,0)
 S TEMP=TEMP_" Encounter Diagnosis: "
"RTN","PXRMVPOV",66,0)
 S ICD9P=FIEVAL(FINDING,"CODEP")
"RTN","PXRMVPOV",67,0)
 S D0=$G(^AUPNVPOV(FIEN,0))
"RTN","PXRMVPOV",68,0)
 S ICD9ZN=$$GET0^PXRMICD9(ICD9P)
"RTN","PXRMVPOV",69,0)
 S CODE=$P(ICD9ZN,U,1)
"RTN","PXRMVPOV",70,0)
 S DIAG=$P(ICD9ZN,U,3)
"RTN","PXRMVPOV",71,0)
 S TEMP=TEMP_CODE_" "_DIAG
"RTN","PXRMVPOV",72,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMVPOV",73,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMVPOV",74,0)
 S NLINES=NLINES+1
"RTN","PXRMVPOV",75,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMVPOV",76,0)
 S PN=$P(D0,U,4)
"RTN","PXRMVPOV",77,0)
 S PN=$P(^AUTNPOV(PN,0),U,1)
"RTN","PXRMVPOV",78,0)
 I ($L(PN)>0)&(PN'=DIAG) D
"RTN","PXRMVPOV",79,0)
 . S NLINES=NLINES+1
"RTN","PXRMVPOV",80,0)
 . S TEXT(NLINES)="  Prov. Narr. - "_PN
"RTN","PXRMVPOV",81,0)
 I $D(PXRMDEV) D
"RTN","PXRMVPOV",82,0)
 . N UID
"RTN","PXRMVPOV",83,0)
 . S UID="ICD9VPOV "_CODE
"RTN","PXRMVPOV",84,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"CODE")=CODE
"RTN","PXRMVPOV",85,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"DATE")=VDATE
"RTN","PXRMVPOV",86,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"DIAG")=DIAG
"RTN","PXRMVPOV",87,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"PN")=PN
"RTN","PXRMVPOV",88,0)
 ;
"RTN","PXRMVPOV",89,0)
 ;For historical encounters display the location and comments.
"RTN","PXRMVPOV",90,0)
 I VDATE["E" D
"RTN","PXRMVPOV",91,0)
 . N INDEX,VIEN
"RTN","PXRMVPOV",92,0)
 . S INDEX="ICD9VPOV-"_DIAG
"RTN","PXRMVPOV",93,0)
 . S VIEN=FIEVAL(FINDING,"VIEN")
"RTN","PXRMVPOV",94,0)
 . D HLCV^PXRMVSIT(.NLINES,.TEXT,VIEN,INDEX)
"RTN","PXRMVPOV",95,0)
 Q
"RTN","PXRMVPOV",96,0)
 ;
"RTN","PXRMVPTR")
0^165^B358969
"RTN","PXRMVPTR",1,0)
PXRMVPTR ; SLC/PKR - Routines for dealing with variable pointers. ; 11/23/1999
"RTN","PXRMVPTR",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMVPTR",3,0)
 ;
"RTN","PXRMVPTR",4,0)
 ;=======================================================================
"RTN","PXRMVPTR",5,0)
BLDLIST(FILE,FIELD,LIST) ;Build a list of variable pointer information
"RTN","PXRMVPTR",6,0)
 ;indexed by file number, field, and root.
"RTN","PXRMVPTR",7,0)
 N FN,IND,ROOT,TEMP
"RTN","PXRMVPTR",8,0)
 S IND=0
"RTN","PXRMVPTR",9,0)
 F  S IND=$O(^DD(FILE,FIELD,"V",IND)) Q:+IND=0  D
"RTN","PXRMVPTR",10,0)
 . S TEMP=^DD(FILE,FIELD,"V",IND,0)
"RTN","PXRMVPTR",11,0)
 . S FN=$P(TEMP,U,1)
"RTN","PXRMVPTR",12,0)
 . S ROOT=$$ROOT^DILFD(FN)
"RTN","PXRMVPTR",13,0)
 . S ROOT=$P(ROOT,"^",2)
"RTN","PXRMVPTR",14,0)
 . S LIST(ROOT)=TEMP
"RTN","PXRMVPTR",15,0)
 Q
"RTN","PXRMVPTR",16,0)
 ;
"RTN","PXRMVSIT")
0^138^B1684422
"RTN","PXRMVSIT",1,0)
PXRMVSIT ; SLC/PKR - Visit related info for reminders. ;04/19/2000
"RTN","PXRMVSIT",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMVSIT",3,0)
 ;
"RTN","PXRMVSIT",4,0)
 ;=======================================================================
"RTN","PXRMVSIT",5,0)
HLCV(NLINES,TEXT,VIEN,INDEX) ;Display location and comment for historical
"RTN","PXRMVSIT",6,0)
 ;encounters associated with the V files.
"RTN","PXRMVSIT",7,0)
 N COMMENT,FACILITY,LOCATION
"RTN","PXRMVSIT",8,0)
 S FACILITY=$P($G(^AUPNVSIT(VIEN,0)),U,6)
"RTN","PXRMVSIT",9,0)
 I FACILITY'="" S LOCATION=$$GET1^DIQ(4,FACILITY,.01)_"  "_FACILITY
"RTN","PXRMVSIT",10,0)
 E  S LOCATION=$G(^AUPNVSIT(VIEN,22))
"RTN","PXRMVSIT",11,0)
 I $L(LOCATION)>0 D
"RTN","PXRMVSIT",12,0)
 . S NLINES=NLINES+1
"RTN","PXRMVSIT",13,0)
 . S TEXT(NLINES)="   Historical Encounter Location: "_LOCATION
"RTN","PXRMVSIT",14,0)
 I $D(^AUPNVSIT(VIEN,811)) D
"RTN","PXRMVSIT",15,0)
 . S COMMENT=^AUPNVSIT(VIEN,811)
"RTN","PXRMVSIT",16,0)
 . S NLINES=NLINES+1
"RTN","PXRMVSIT",17,0)
 . S TEXT(NLINES)="   Comment:  "_COMMENT
"RTN","PXRMVSIT",18,0)
 . I $D(PXRMDEV) D
"RTN","PXRMVSIT",19,0)
 .. N UID
"RTN","PXRMVSIT",20,0)
 .. S UID="HEINFO VISIT "_VIEN
"RTN","PXRMVSIT",21,0)
 .. S ^TMP(PXRMPID,$J,PXRMITEM,UID,INDEX,"COMMENT")=$G(COMMENT)
"RTN","PXRMVSIT",22,0)
 .. S ^TMP(PXRMPID,$J,PXRMITEM,UID,INDEX,"LOCATION")=$G(LOCATION)
"RTN","PXRMVSIT",23,0)
 Q
"RTN","PXRMVSIT",24,0)
 ;
"RTN","PXRMVSIT",25,0)
 ;=======================================================================
"RTN","PXRMVSIT",26,0)
ISHIST(VIEN) ;Return true if the encounter was historical.
"RTN","PXRMVSIT",27,0)
 I $P($G(^AUPNVSIT(VIEN,0)),U,7)="E" Q 1
"RTN","PXRMVSIT",28,0)
 E  Q 0
"RTN","PXRMVSIT",29,0)
 ;
"RTN","PXRMVX")
1^177
"RTN","PXRMVX01")
1^178
"RTN","PXRMWCHK")
1^209
"RTN","PXRMXAP")
0^140^B9712118
"RTN","PXRMXAP",1,0)
PXRMXAP ; SLC/PJH - Reminder Reports APIs;04/28/1999
"RTN","PXRMXAP",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMXAP",3,0)
 ;
"RTN","PXRMXAP",4,0)
 ; Called from PXRMSU
"RTN","PXRMXAP",5,0)
 ;
"RTN","PXRMXAP",6,0)
FACT ;Check PCMM Team ^SCTM(404.51 for facility ; DBIA 2795
"RTN","PXRMXAP",7,0)
 S DIC("S")=DIC("S")_",$D(PXRMFACN(+$P(^(0),U,7)))"
"RTN","PXRMXAP",8,0)
 Q
"RTN","PXRMXAP",9,0)
 ;
"RTN","PXRMXAP",10,0)
LOCN(ARRAY) ;Check for mixed inpatient/outpatient locations ; DBIA 10040
"RTN","PXRMXAP",11,0)
 N IC,IEN,MIXED,TYPE
"RTN","PXRMXAP",12,0)
 S IC=0,MIXED=0,TYPE=0
"RTN","PXRMXAP",13,0)
 F  S IC=$O(ARRAY(IC)) Q:IC=""  D  Q:MIXED
"RTN","PXRMXAP",14,0)
 .S IEN=$P(ARRAY(IC),U,2) Q:IEN=""
"RTN","PXRMXAP",15,0)
 .I TYPE=0,$D(^SC(IEN,42)) S TYPE="INPATIENT" Q
"RTN","PXRMXAP",16,0)
 .I TYPE=0,'$D(^SC(IEN,42)) S TYPE="OUTPATIENT" Q
"RTN","PXRMXAP",17,0)
 .I TYPE="INPATIENT",'$D(^SC(IEN,42)) S MIXED=1 Q
"RTN","PXRMXAP",18,0)
 .I TYPE="OUTPATIENT",$D(^SC(IEN,42)) S MIXED=1 Q
"RTN","PXRMXAP",19,0)
 Q MIXED
"RTN","PXRMXAP",20,0)
 ;
"RTN","PXRMXAP",21,0)
 ; Called from PXRMSEO
"RTN","PXRMXAP",22,0)
 ;
"RTN","PXRMXAP",23,0)
FAC(TIEN) ; Get Facility for the PCMM Team ; DBIA 2795
"RTN","PXRMXAP",24,0)
 Q $P($G(^SCTM(404.51,TIEN,0)),U,7)
"RTN","PXRMXAP",25,0)
 ;
"RTN","PXRMXAP",26,0)
PCASSIGN(DFN) ; Assigned to Provider as Primary Care ; DBIA 1916
"RTN","PXRMXAP",27,0)
 N PCVAR,PC S PC=0
"RTN","PXRMXAP",28,0)
 S PCVAR=$$OUTPTPR^SDUTL3(DFN)
"RTN","PXRMXAP",29,0)
 I PCVAR]"" S:$P(PCVAR,U)=PCM PC=1
"RTN","PXRMXAP",30,0)
 Q PC
"RTN","PXRMXAP",31,0)
 ; 
"RTN","PXRMXAP",32,0)
PTTM(TIEN,SCERR) ; Build list of Teams Patients ; DBIA 1916
"RTN","PXRMXAP",33,0)
 Q $$PTTM^SCAPMC(TIEN,"SCDT","^TMP($J,""PCM"")",.SCERR)
"RTN","PXRMXAP",34,0)
 ;
"RTN","PXRMXAP",35,0)
PTPR(PIEN,PXRMREP) ; Build list of practitioners patients ; DBIA 1916
"RTN","PXRMXAP",36,0)
 N SCERRD,OK
"RTN","PXRMXAP",37,0)
 S OK=$$PTPR^SCAPMC(PIEN,"SCDT","","","^TMP($J,""PCM"")",.SCERRD)
"RTN","PXRMXAP",38,0)
 ;
"RTN","PXRMXAP",39,0)
 ; Determine Associated Clinic from Team Position/Team Position Assign
"RTN","PXRMXAP",40,0)
 I PXRMREP="D" D
"RTN","PXRMXAP",41,0)
 .N SUB,SCTP,SCTPA,DCLN
"RTN","PXRMXAP",42,0)
 .S SUB=0
"RTN","PXRMXAP",43,0)
 .F  S SUB=$O(^TMP($J,"PCM",SUB)) Q:'SUB  D
"RTN","PXRMXAP",44,0)
 ..S SCTP=$P(^TMP($J,"PCM",SUB),U,3) Q:SCTP=""
"RTN","PXRMXAP",45,0)
 ..S SCTPA=$P($G(^SCPT(404.43,SCTP,0)),U,2) Q:SCTPA=""  ; DBIA 2811
"RTN","PXRMXAP",46,0)
 ..S DCLN=$P($G(^SCTM(404.57,SCTPA,0)),U,9) ; DBIA 2810
"RTN","PXRMXAP",47,0)
 ..S $P(^TMP($J,"PCM",SUB),U,7)=DCLN
"RTN","PXRMXAP",48,0)
 Q
"RTN","PXRMXAP",49,0)
 ;
"RTN","PXRMXAP",50,0)
 ; Called from PXRMXD/PXRMYD
"RTN","PXRMXAP",51,0)
 ;
"RTN","PXRMXAP",52,0)
INP(INP,PXRMLOCN) ;
"RTN","PXRMXAP",53,0)
 ;If selected locations check for wards ; DBIA 10040
"RTN","PXRMXAP",54,0)
 N LOC,WARD
"RTN","PXRMXAP",55,0)
 S LOC="",WARD=0
"RTN","PXRMXAP",56,0)
 ; All locations must be wards for the prompt to display
"RTN","PXRMXAP",57,0)
 F  S LOC=$O(PXRMLOCN(LOC)) Q:LOC=""  D  Q:'WARD
"RTN","PXRMXAP",58,0)
 .S WARD=0 I $D(^SC(LOC,42)) S WARD=1
"RTN","PXRMXAP",59,0)
 Q WARD
"RTN","PXRMXAP",60,0)
 ;
"RTN","PXRMXAP",61,0)
 ; Called from PXRMXSEL/PXRMYSEL
"RTN","PXRMXAP",62,0)
 ;
"RTN","PXRMXAP",63,0)
FACL(LOCIEN) ; Get locations facility ; DBIA 2804
"RTN","PXRMXAP",64,0)
 Q $P($G(^SC(LOCIEN,0)),U,4)
"RTN","PXRMXAP",65,0)
 ;
"RTN","PXRMXAP",66,0)
WARD(LOCIEN,ARRAY) ;Get list of patients if location is a ward ;DBIA 10035
"RTN","PXRMXAP",67,0)
 N WARDIEN,WARDNAM,DFN
"RTN","PXRMXAP",68,0)
 S WARDIEN=$G(^SC(LOCIEN,42)) Q:WARDIEN=""
"RTN","PXRMXAP",69,0)
 S WARDNAM=$P($G(^DIC(42,WARDIEN,0)),U) Q:WARDNAM=""
"RTN","PXRMXAP",70,0)
 S DFN=""
"RTN","PXRMXAP",71,0)
 F  S DFN=$O(^DPT("CN",WARDNAM,DFN)) Q:DFN=""  S ARRAY(DFN)=""
"RTN","PXRMXAP",72,0)
 Q
"RTN","PXRMXAP",73,0)
 ;
"RTN","PXRMXAP",74,0)
ADM(LOCIEN,ARRAY,BD,ED) ;Get list of admissions to ward ; DBIA 10040,1480
"RTN","PXRMXAP",75,0)
 N WARDIEN,DA,DATA,DFN
"RTN","PXRMXAP",76,0)
 S WARDIEN=$G(^SC(LOCIEN,42)) Q:WARDIEN=""
"RTN","PXRMXAP",77,0)
 F  S BD=$O(^DGPM("ATT1",BD)) Q:BD>ED  Q:BD=""  D
"RTN","PXRMXAP",78,0)
 .S DA=""
"RTN","PXRMXAP",79,0)
 .F  S DA=$O(^DGPM("ATT1",BD,DA)) Q:DA=""  D
"RTN","PXRMXAP",80,0)
 ..S DATA=$G(^DGPM(DA,0)) Q:DATA=""
"RTN","PXRMXAP",81,0)
 ..I $P(DATA,U,6)'=WARDIEN Q
"RTN","PXRMXAP",82,0)
 ..S DFN=$P(DATA,U,3) Q:DFN=""
"RTN","PXRMXAP",83,0)
 ..S ARRAY(DFN)=""
"RTN","PXRMXAP",84,0)
 Q
"RTN","PXRMXAP",85,0)
 ;
"RTN","PXRMXAP",86,0)
LCHL(INP,ARRAY) ;Get list of all inpatient or outpatient locations ; DBIA 10040
"RTN","PXRMXAP",87,0)
 N HLOCIEN,NAME,IC
"RTN","PXRMXAP",88,0)
 S HLOCIEN=0,IC=0
"RTN","PXRMXAP",89,0)
 F  S HLOCIEN=$O(^SC(HLOCIEN)) Q:'HLOCIEN  D
"RTN","PXRMXAP",90,0)
 .;Outpatient report ignores wards - HA
"RTN","PXRMXAP",91,0)
 .I INP=0,$D(^SC(HLOCIEN,42)) Q
"RTN","PXRMXAP",92,0)
 .;Inpatient report includes only wards - HAI
"RTN","PXRMXAP",93,0)
 .I INP=1,'$D(^SC(HLOCIEN,42)) Q
"RTN","PXRMXAP",94,0)
 .S NAME=$P($G(^SC(HLOCIEN,0)),U) I NAME="" Q
"RTN","PXRMXAP",95,0)
 .;Build array (BOOKMARK - 26 April)
"RTN","PXRMXAP",96,0)
 .S IC=IC+1,PXRMLCHL(IC)=NAME_U_HLOCIEN,PXRMLOCN(HLOCIEN)=IC
"RTN","PXRMXAP",97,0)
 Q
"RTN","PXRMXBSY")
0^141^B409130
"RTN","PXRMXBSY",1,0)
PXRMXBSY ; SLC/PJH - Let the user know the computer is busy. ;03/31/1999
"RTN","PXRMXBSY",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMXBSY",3,0)
 ;
"RTN","PXRMXBSY",4,0)
 ;=======================================================================
"RTN","PXRMXBSY",5,0)
INIT(SPINCNT) ;Initialize the busy display components.
"RTN","PXRMXBSY",6,0)
 S SPINCNT=0
"RTN","PXRMXBSY",7,0)
 Q
"RTN","PXRMXBSY",8,0)
 ;
"RTN","PXRMXBSY",9,0)
 ;=======================================================================
"RTN","PXRMXBSY",10,0)
DONE(DTEXT) ;Write out the done message.
"RTN","PXRMXBSY",11,0)
 W @IOBS,DTEXT,!
"RTN","PXRMXBSY",12,0)
 Q
"RTN","PXRMXBSY",13,0)
 ;
"RTN","PXRMXBSY",14,0)
 ;=======================================================================
"RTN","PXRMXBSY",15,0)
SPIN(SPINTEXT,SPINCNT) ;Move the spinner.
"RTN","PXRMXBSY",16,0)
 N QUAD
"RTN","PXRMXBSY",17,0)
 I SPINCNT=0 W !!,SPINTEXT,"  "
"RTN","PXRMXBSY",18,0)
 S SPINCNT=SPINCNT+1
"RTN","PXRMXBSY",19,0)
 S QUAD=SPINCNT#8
"RTN","PXRMXBSY",20,0)
 I QUAD=1 W @IOBS,"|"
"RTN","PXRMXBSY",21,0)
 I QUAD=3 W @IOBS,"/"
"RTN","PXRMXBSY",22,0)
 I QUAD=5 W @IOBS,"-"
"RTN","PXRMXBSY",23,0)
 I QUAD=7 W @IOBS,"\"
"RTN","PXRMXBSY",24,0)
 Q
"RTN","PXRMXD")
0^142^B27921076
"RTN","PXRMXD",1,0)
PXRMXD ; SLC/PJH - Reminder Due reports DRIVER ;03/07/2000
"RTN","PXRMXD",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMXD",3,0)
 ; 
"RTN","PXRMXD",4,0)
 ; Refer SRS 3.2.1.5 - template for Reminders Due/Satisfied Report
"RTN","PXRMXD",5,0)
 ;
"RTN","PXRMXD",6,0)
 ;
"RTN","PXRMXD",7,0)
START ; Arrays and strings
"RTN","PXRMXD",8,0)
 N PXRMIOD,PXRMXJB,PXRMXST,PXRMOPT,PXRMQUE,PXRMXTMP,PXRMSEL
"RTN","PXRMXD",9,0)
 N PXRMFAC,PXRMFACN,PXRMSCAT,PXRMSRT
"RTN","PXRMXD",10,0)
 ; Addenda
"RTN","PXRMXD",11,0)
 N PXRMOTM,PXRMPAT,PXRMPCM,PXRMPRV,PXRMTMP,PXRMREM
"RTN","PXRMXD",12,0)
 N PXRMCS,PXRMCSN,PXRMLOCN,PXRMLCHL,PXRMLCSC,PXRMCGRP,PXRMCGRN
"RTN","PXRMXD",13,0)
 ; Counters
"RTN","PXRMXD",14,0)
 N NFAC,NPAT,NPCM,NOTM,NPRV,NREM,NCS,NHL,NCGRP
"RTN","PXRMXD",15,0)
 ; Flags and Dates
"RTN","PXRMXD",16,0)
 N PXRMFD,PXRMSDT,PXRMBDT,PXRMEDT,PXRMREP,PXRMPRIM,PXRMFUT
"RTN","PXRMXD",17,0)
 N PXRMRT,PXRMTMP,TITLE
"RTN","PXRMXD",18,0)
 ;
"RTN","PXRMXD",19,0)
 S PXRMRT="PXRMX",PXRMTYP="X"
"RTN","PXRMXD",20,0)
 ;
"RTN","PXRMXD",21,0)
 S PXRMXJB=$J
"RTN","PXRMXD",22,0)
 S PXRMXST=$$NOW^XLFDT
"RTN","PXRMXD",23,0)
 S PXRMXTMP=PXRMRT_PXRMXJB_PXRMXST
"RTN","PXRMXD",24,0)
 S ^XTMP(PXRMXTMP,0)=$$FMADD^XLFDT(DT,7)_U_DT_U_"PXRM Reminder Due Report"
"RTN","PXRMXD",25,0)
 ;
"RTN","PXRMXD",26,0)
 ;
"RTN","PXRMXD",27,0)
 ;Check for existing report templates
"RTN","PXRMXD",28,0)
REP D ^PXRMXT
"RTN","PXRMXD",29,0)
 I $D(DTOUT)!$D(DUOUT) G EXIT
"RTN","PXRMXD",30,0)
 ;Run report from template details
"RTN","PXRMXD",31,0)
 I PXRMTMP'="" D  G:$D(DUOUT)&'$D(DTOUT) REP Q
"RTN","PXRMXD",32,0)
 .D START^PXRMXTA("JOB^PXRMXD")
"RTN","PXRMXD",33,0)
 ;
"RTN","PXRMXD",34,0)
 ;Select sample criteria
"RTN","PXRMXD",35,0)
SEL D SELECT^PXRMXSD(.PXRMSEL)
"RTN","PXRMXD",36,0)
 I $D(DTOUT) G EXIT
"RTN","PXRMXD",37,0)
 I $D(DUOUT) G:PXRMTMP="" EXIT G REP
"RTN","PXRMXD",38,0)
 ;
"RTN","PXRMXD",39,0)
FAC ;Get the facility list.
"RTN","PXRMXD",40,0)
 I "IPO"'[PXRMSEL D  G:$D(DTOUT) EXIT G:$D(DUOUT) SEL
"RTN","PXRMXD",41,0)
 .D FACILITY^PXRMXSU(.PXRMFAC)
"RTN","PXRMXD",42,0)
 ;
"RTN","PXRMXD",43,0)
OPT ;Variable prompts
"RTN","PXRMXD",44,0)
 ;
"RTN","PXRMXD",45,0)
 ;Get Patient list
"RTN","PXRMXD",46,0)
 I PXRMSEL="I" K PXRMPAT D PAT^PXRMXSU(.PXRMPAT)
"RTN","PXRMXD",47,0)
 ;Get OE/RRteam list
"RTN","PXRMXD",48,0)
 I PXRMSEL="O" K PXRMOTM D OERR^PXRMXSU(.PXRMOTM)
"RTN","PXRMXD",49,0)
 ;Get PCMM team
"RTN","PXRMXD",50,0)
 I PXRMSEL="T" K PXRMPCM D PCMM^PXRMXSU(.PXRMPCM)
"RTN","PXRMXD",51,0)
 ;Get provider list
"RTN","PXRMXD",52,0)
 I PXRMSEL="P" K PXRMPRV D PROV^PXRMXSU(.PXRMPRV)
"RTN","PXRMXD",53,0)
 ;Get the location list.
"RTN","PXRMXD",54,0)
 I PXRMSEL="L" K PXRMCS,PXRMCSN,PXRMLOCN,PXRMLCHL,PXRMCGRP,PXRMCGRN D
"RTN","PXRMXD",55,0)
 .D LOC^PXRMXSU("Determine encounter counts for","HS")
"RTN","PXRMXD",56,0)
 I $D(DTOUT) G EXIT
"RTN","PXRMXD",57,0)
 I $D(DUOUT) G:"IPO"[PXRMSEL SEL G FAC
"RTN","PXRMXD",58,0)
 ;
"RTN","PXRMXD",59,0)
 ; Primary Provider or All (PCMM Provider only)
"RTN","PXRMXD",60,0)
PRIME I PXRMSEL="P" D  G:$D(DTOUT) EXIT G:$D(DUOUT) OPT
"RTN","PXRMXD",61,0)
 .D PRIME^PXRMXSD(.PXRMPRIM)
"RTN","PXRMXD",62,0)
 ;
"RTN","PXRMXD",63,0)
DR ; Get the date range.
"RTN","PXRMXD",64,0)
 S PXRMFD="P"
"RTN","PXRMXD",65,0)
 ; No prompt if individual patients selected
"RTN","PXRMXD",66,0)
 ; Single dates only if PCMM teams/providers and OE/RR teams selected
"RTN","PXRMXD",67,0)
 ; Choice of previous/future date range if location selected
"RTN","PXRMXD",68,0)
 ;
"RTN","PXRMXD",69,0)
 ; Prior encounters/future appointments (location only)
"RTN","PXRMXD",70,0)
PREV I PXRMSEL="L" D PREV^PXRMXSD(.PXRMFD) G:$D(DTOUT) EXIT G:$D(DUOUT) OPT
"RTN","PXRMXD",71,0)
 ; Date range input (location only)
"RTN","PXRMXD",72,0)
 I PXRMSEL="L" D  G:$D(DTOUT) EXIT G:$D(DUOUT) PREV
"RTN","PXRMXD",73,0)
 .I PXRMFD="P" D PDR^PXRMXDUT(.PXRMBDT,.PXRMEDT,"ENCOUNTER")
"RTN","PXRMXD",74,0)
 .I PXRMFD="F" D FDR^PXRMXDUT(.PXRMBDT,.PXRMEDT,"APPOINTMENT")
"RTN","PXRMXD",75,0)
 .I PXRMFD="A" D PDR^PXRMXDUT(.PXRMBDT,.PXRMEDT,"ADMISSION")
"RTN","PXRMXD",76,0)
 .I PXRMFD="C" S PXRMBDT=DT,PXRMEDT=DT
"RTN","PXRMXD",77,0)
 ; Due Effective Date
"RTN","PXRMXD",78,0)
DUE D SDR^PXRMXDUT(.PXRMSDT) G:$D(DTOUT) EXIT
"RTN","PXRMXD",79,0)
 I $D(DUOUT) G:PXRMSEL="L" PREV G OPT
"RTN","PXRMXD",80,0)
 ;
"RTN","PXRMXD",81,0)
SCAT ;Get the service categories.
"RTN","PXRMXD",82,0)
 I PXRMSEL="L",PXRMFD="P" D
"RTN","PXRMXD",83,0)
 .D SCAT^PXRMXSC
"RTN","PXRMXD",84,0)
 .I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMXD",85,0)
 I $D(DTOUT) G EXIT
"RTN","PXRMXD",86,0)
 I $D(DUOUT) G DUE
"RTN","PXRMXD",87,0)
 ;
"RTN","PXRMXD",88,0)
TYP ;Determine type of report (detail/summary)
"RTN","PXRMXD",89,0)
 S PXRMREP="S"
"RTN","PXRMXD",90,0)
 D REP^PXRMXSD(.PXRMREP)
"RTN","PXRMXD",91,0)
 I $D(DTOUT) G EXIT
"RTN","PXRMXD",92,0)
 I $D(DUOUT) G SCAT
"RTN","PXRMXD",93,0)
 ;
"RTN","PXRMXD",94,0)
FUT ;For detailed report give option to display future appointments
"RTN","PXRMXD",95,0)
 S PXRMFUT="N"
"RTN","PXRMXD",96,0)
 I PXRMREP="D" D  G:$D(DTOUT) EXIT G:$D(DUOUT) TYP
"RTN","PXRMXD",97,0)
 .D FUTURE^PXRMXSD(.PXRMFUT)
"RTN","PXRMXD",98,0)
 ;
"RTN","PXRMXD",99,0)
SRT ;For detailed report give option to sort by appointment date
"RTN","PXRMXD",100,0)
 S PXRMSRT="N"
"RTN","PXRMXD",101,0)
 I PXRMREP="D",(PXRMSEL'="I") D  G:$D(DTOUT) EXIT G:$D(DUOUT) FUT
"RTN","PXRMXD",102,0)
 .D SRT^PXRMXSD(.PXRMSRT)
"RTN","PXRMXD",103,0)
 ;
"RTN","PXRMXD",104,0)
REM ;Reminder Type
"RTN","PXRMXD",105,0)
 K PXRMREM
"RTN","PXRMXD",106,0)
 ; Original reminder call
"RTN","PXRMXD",107,0)
 D REM^PXRMXSU(.PXRMREM)
"RTN","PXRMXD",108,0)
 I $D(DTOUT) G EXIT
"RTN","PXRMXD",109,0)
 I $D(DUOUT) G:(PXRMREP="D")&(PXRMSEL="I") FUT G:PXRMREP="D" SRT G TYP
"RTN","PXRMXD",110,0)
 ;
"RTN","PXRMXD",111,0)
SAV ;Option to create a new report template
"RTN","PXRMXD",112,0)
 I PXRMTMP="" D ^PXRMXTU G:$D(DTOUT) EXIT G:$D(DUOUT) REM
"RTN","PXRMXD",113,0)
 ;
"RTN","PXRMXD",114,0)
 ;Determine whether the report should be queued.
"RTN","PXRMXD",115,0)
JOB N %ZIS S %ZIS="QM"
"RTN","PXRMXD",116,0)
 W !
"RTN","PXRMXD",117,0)
 D ^%ZIS
"RTN","PXRMXD",118,0)
 I POP G EXIT
"RTN","PXRMXD",119,0)
 S PXRMIOD=ION_";"_IOST_";"_IOM_";"_IOSL
"RTN","PXRMXD",120,0)
 S PXRMQUE=$G(IO("Q"))
"RTN","PXRMXD",121,0)
 ;
"RTN","PXRMXD",122,0)
 I PXRMQUE D 
"RTN","PXRMXD",123,0)
 . ;Queue the report.
"RTN","PXRMXD",124,0)
 . N DESC,IODEV,ROUTINE,ZTDTH
"RTN","PXRMXD",125,0)
 . S DESC="Reminder Due Report - sort"
"RTN","PXRMXD",126,0)
 . S IODEV=""
"RTN","PXRMXD",127,0)
 . S ROUTINE="^PXRMXSE"
"RTN","PXRMXD",128,0)
 . S ^XTMP(PXRMXTMP,"SORTZTSK")=$$QUE^PXRMXQUE(DESC,IODEV,ROUTINE,"SAVE^PXRMXD")
"RTN","PXRMXD",129,0)
 .;
"RTN","PXRMXD",130,0)
 . S DESC="Reminder Due Report - print"
"RTN","PXRMXD",131,0)
 . S IODEV=PXRMIOD
"RTN","PXRMXD",132,0)
 . S ROUTINE="^PXRMXPR"
"RTN","PXRMXD",133,0)
 . S ZTDTH="@"
"RTN","PXRMXD",134,0)
 . S ^XTMP(PXRMXTMP,"PRZTSK")=$$QUE^PXRMXQUE(DESC,IODEV,ROUTINE,"SAVE^PXRMXD")
"RTN","PXRMXD",135,0)
 I 'PXRMQUE D ^PXRMXSE
"RTN","PXRMXD",136,0)
 Q
"RTN","PXRMXD",137,0)
 ;=======================================================================
"RTN","PXRMXD",138,0)
 ;
"RTN","PXRMXD",139,0)
EXIT ;Clean things up.
"RTN","PXRMXD",140,0)
 D EXIT^PXRMXGUT
"RTN","PXRMXD",141,0)
 Q
"RTN","PXRMXD",142,0)
 ;
"RTN","PXRMXD",143,0)
 ;=======================================================================
"RTN","PXRMXD",144,0)
SAVE ;Save the variables for queing.
"RTN","PXRMXD",145,0)
 S ZTSAVE("PXRMBDT")="",ZTSAVE("PXRMEDT")="",ZTSAVE("PXRMSDT")=""
"RTN","PXRMXD",146,0)
 S ZTSAVE("PXRMCS(")="",ZTSAVE("NCS")=""
"RTN","PXRMXD",147,0)
 S ZTSAVE("PXRMCGRP(")="",ZTSAVE("NCGRP")=""
"RTN","PXRMXD",148,0)
 S ZTSAVE("PXRMFAC(")="",ZTSAVE("NFAC")=""
"RTN","PXRMXD",149,0)
 S ZTSAVE("PXRMFACN(")=""
"RTN","PXRMXD",150,0)
 S ZTSAVE("PXRMFUT")=""
"RTN","PXRMXD",151,0)
 S ZTSAVE("PXRMFD")=""
"RTN","PXRMXD",152,0)
 S ZTSAVE("PXRMIOD")=""
"RTN","PXRMXD",153,0)
 S ZTSAVE("PXRMLCHL(")="",ZTSAVE("NHL")=""
"RTN","PXRMXD",154,0)
 S ZTSAVE("PXRMLCSC")=""
"RTN","PXRMXD",155,0)
 S ZTSAVE("PXRMPRIM")=""
"RTN","PXRMXD",156,0)
 S ZTSAVE("PXRMQUE")=""
"RTN","PXRMXD",157,0)
 S ZTSAVE("PXRMREP")=""
"RTN","PXRMXD",158,0)
 S ZTSAVE("PXRMRT")=""
"RTN","PXRMXD",159,0)
 S ZTSAVE("PXRMSCAT")=""
"RTN","PXRMXD",160,0)
 S ZTSAVE("PXRMSEL")=""
"RTN","PXRMXD",161,0)
 S ZTSAVE("PXRMSRT")=""
"RTN","PXRMXD",162,0)
 S ZTSAVE("PXRMTMP")=""
"RTN","PXRMXD",163,0)
 S ZTSAVE("PXRMXTMP")=""
"RTN","PXRMXD",164,0)
 ; Time initiated
"RTN","PXRMXD",165,0)
 S ZTSAVE("PXRMXST")=""
"RTN","PXRMXD",166,0)
 ; New selection criteria
"RTN","PXRMXD",167,0)
 S ZTSAVE("PXRMOTM(")="",ZTSAVE("NOTM")=""
"RTN","PXRMXD",168,0)
 S ZTSAVE("PXRMPRV(")="",ZTSAVE("NPRV")=""
"RTN","PXRMXD",169,0)
 S ZTSAVE("PXRMPAT(")="",ZTSAVE("NPAT")=""
"RTN","PXRMXD",170,0)
 S ZTSAVE("PXRMPCM(")="",ZTSAVE("NPCM")=""
"RTN","PXRMXD",171,0)
 S ZTSAVE("PXRMREM(")="",ZTSAVE("NREM")=""
"RTN","PXRMXD",172,0)
 ; Arrays by IEN
"RTN","PXRMXD",173,0)
 S ZTSAVE("PXRMLOCN(")=""
"RTN","PXRMXD",174,0)
 S ZTSAVE("PXRMCSN(")=""
"RTN","PXRMXD",175,0)
 S ZTSAVE("PXRMCGRN(")=""
"RTN","PXRMXD",176,0)
 Q
"RTN","PXRMXDUT")
0^143^B26957605
"RTN","PXRMXDUT",1,0)
PXRMXDUT ; SLC/PJH - Date utilities for reminder reports. ;04/24/2000
"RTN","PXRMXDUT",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMXDUT",3,0)
 ;
"RTN","PXRMXDUT",4,0)
BDHELP(HTEXT,TYPE) ;Write the beginning date help.
"RTN","PXRMXDUT",5,0)
 I $D(HTEXT) D HELP(.HTEXT)
"RTN","PXRMXDUT",6,0)
 I '$D(HTEXT) D
"RTN","PXRMXDUT",7,0)
 . N BDHTEXT
"RTN","PXRMXDUT",8,0)
 . S BDHTEXT(1)="This is the beginning date for "_TYPE_" to be included in the creation of"
"RTN","PXRMXDUT",9,0)
 . S BDHTEXT(2)="this report."
"RTN","PXRMXDUT",10,0)
 . D HELP^PXRMXDUT(.BDHTEXT)
"RTN","PXRMXDUT",11,0)
 Q
"RTN","PXRMXDUT",12,0)
 ;
"RTN","PXRMXDUT",13,0)
EDHELP(HTEXT,TYPE) ;Write the ending date help.
"RTN","PXRMXDUT",14,0)
 I $D(HTEXT) D HELP(.HTEXT)
"RTN","PXRMXDUT",15,0)
 I '$D(HTEXT) D
"RTN","PXRMXDUT",16,0)
 . N EDHTEXT
"RTN","PXRMXDUT",17,0)
 . S EDHTEXT(1)="This is the ending date for "_TYPE_" to be included in the creation"
"RTN","PXRMXDUT",18,0)
 . S EDHTEXT(2)="of this report."
"RTN","PXRMXDUT",19,0)
 . D HELP^PXRMXDUT(.EDHTEXT)
"RTN","PXRMXDUT",20,0)
 Q
"RTN","PXRMXDUT",21,0)
 ;
"RTN","PXRMXDUT",22,0)
SDHELP(HTEXT) ;Write the single date help.
"RTN","PXRMXDUT",23,0)
 I $D(HTEXT) D HELP(.HTEXT)
"RTN","PXRMXDUT",24,0)
 I '$D(HTEXT) D
"RTN","PXRMXDUT",25,0)
 . N SDHTEXT
"RTN","PXRMXDUT",26,0)
 . S SDHTEXT(1)="This is the date for the report"
"RTN","PXRMXDUT",27,0)
 . D HELP^PXRMXDUT(.SDHTEXT)
"RTN","PXRMXDUT",28,0)
 Q
"RTN","PXRMXDUT",29,0)
 ;
"RTN","PXRMXDUT",30,0)
FDR(BDATE,EDATE,TYPE,BHTEXT,EHTEXT) ;Get a future date range.
"RTN","PXRMXDUT",31,0)
FBDATE ;Select the beginning date.
"RTN","PXRMXDUT",32,0)
 N X,Y,DIR
"RTN","PXRMXDUT",33,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXDUT",34,0)
 S DIR(0)="DA^"_DT_"::EFTX"
"RTN","PXRMXDUT",35,0)
 S DIR("A")="Enter "_TYPE_" BEGINNING DATE: "
"RTN","PXRMXDUT",36,0)
 S DIR("B")=$$FMTE^XLFDT($$DT^XLFDT,"D")
"RTN","PXRMXDUT",37,0)
 S DIR("?")="This must be a future date. For detailed help type ??"
"RTN","PXRMXDUT",38,0)
 S DIR("??")=U_"D BDHELP^PXRMXDUT(.BHTEXT,TYPE)"
"RTN","PXRMXDUT",39,0)
 W !
"RTN","PXRMXDUT",40,0)
 D ^DIR K DIR
"RTN","PXRMXDUT",41,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXDUT",42,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXDUT",43,0)
 S BDATE=Y
"RTN","PXRMXDUT",44,0)
 I $E(Y,6,7)="00" W $C(7),"  ?? Enter exact date" G FBDATE
"RTN","PXRMXDUT",45,0)
 ;
"RTN","PXRMXDUT",46,0)
FEDATE ;Select the ending date.
"RTN","PXRMXDUT",47,0)
 S DIR(0)="DA^"_BDATE_"::ETFX"
"RTN","PXRMXDUT",48,0)
 S DIR("A")="Enter "_TYPE_" ENDING DATE: "
"RTN","PXRMXDUT",49,0)
 S DIR("?")="This must be a future date and not before "_$$FMTE^XLFDT(BDATE,"D")_". For detailed help type ??"
"RTN","PXRMXDUT",50,0)
 S DIR("??")=U_"D EDHELP^PXRMXDUT(.EHTEXT,TYPE)"
"RTN","PXRMXDUT",51,0)
 D ^DIR K DIR
"RTN","PXRMXDUT",52,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXDUT",53,0)
 I $D(DTOUT) Q
"RTN","PXRMXDUT",54,0)
 I $D(DUOUT) G FBDATE
"RTN","PXRMXDUT",55,0)
 S EDATE=Y
"RTN","PXRMXDUT",56,0)
 I $E(Y,6,7)="00" W $C(7),"  ?? Enter exact date" G FEDATE
"RTN","PXRMXDUT",57,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXDUT",58,0)
 Q
"RTN","PXRMXDUT",59,0)
 ;
"RTN","PXRMXDUT",60,0)
GDR(BDATE,EDATE,TYPE,BHTEXT,EHTEXT) ;Get a general date range.
"RTN","PXRMXDUT",61,0)
GBDATE ;Select the beginning date.
"RTN","PXRMXDUT",62,0)
 N X,Y,DIR
"RTN","PXRMXDUT",63,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXDUT",64,0)
 S DIR(0)="DA^::ETX"
"RTN","PXRMXDUT",65,0)
 S DIR("A")="Enter "_TYPE_" BEGINNING DATE: "
"RTN","PXRMXDUT",66,0)
 S DIR("?")="This must be a date. For detailed help type ??"
"RTN","PXRMXDUT",67,0)
 S DIR("??")=U_"D BDHELP^PXRMXDUT(.BHTEXT,TYPE)"
"RTN","PXRMXDUT",68,0)
 W !
"RTN","PXRMXDUT",69,0)
 D ^DIR K DIR
"RTN","PXRMXDUT",70,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXDUT",71,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXDUT",72,0)
 S BDATE=Y
"RTN","PXRMXDUT",73,0)
 I $E(Y,6,7)="00" W $C(7),"  ?? Enter exact date" G GBDATE
"RTN","PXRMXDUT",74,0)
 ;
"RTN","PXRMXDUT",75,0)
GEDATE ;Select the ending date.
"RTN","PXRMXDUT",76,0)
 S DIR(0)="DA^"_BDATE_"::ETX"
"RTN","PXRMXDUT",77,0)
 S DIR("A")="Enter "_TYPE_" ENDING DATE: "
"RTN","PXRMXDUT",78,0)
 S DIR("?")="This must be a date and not before "_$$FMTE^XLFDT(BDATE,"D")_". For detailed help type ??"
"RTN","PXRMXDUT",79,0)
 S DIR("??")=U_"D EDHELP^PXRMXDUT(.EHTEXT,TYPE)"
"RTN","PXRMXDUT",80,0)
 D ^DIR K DIR
"RTN","PXRMXDUT",81,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXDUT",82,0)
 I $D(DTOUT) Q
"RTN","PXRMXDUT",83,0)
 I $D(DUOUT) G GBDATE
"RTN","PXRMXDUT",84,0)
 S EDATE=Y
"RTN","PXRMXDUT",85,0)
 I $E(Y,6,7)="00" W $C(7),"  ?? Enter exact date" G GEDATE
"RTN","PXRMXDUT",86,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXDUT",87,0)
 Q
"RTN","PXRMXDUT",88,0)
 ;
"RTN","PXRMXDUT",89,0)
HELP(HTEXT) ;General help text routine. Write out the text in the HTEXT
"RTN","PXRMXDUT",90,0)
 ;array.
"RTN","PXRMXDUT",91,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMXDUT",92,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMXDUT",93,0)
 K ^UTILITY($J,"W")
"RTN","PXRMXDUT",94,0)
 S IC=""
"RTN","PXRMXDUT",95,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMXDUT",96,0)
 . S X=HTEXT(IC)
"RTN","PXRMXDUT",97,0)
 . D ^DIWP
"RTN","PXRMXDUT",98,0)
 W !
"RTN","PXRMXDUT",99,0)
 S IC=0
"RTN","PXRMXDUT",100,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMXDUT",101,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMXDUT",102,0)
 K ^UTILITY($J,"W")
"RTN","PXRMXDUT",103,0)
 W !
"RTN","PXRMXDUT",104,0)
 N %DT,MODE
"RTN","PXRMXDUT",105,0)
 S MODE=$G(TYPE),%DT="F",%DT(0)=DT
"RTN","PXRMXDUT",106,0)
 I (MODE="ADMISSION")!(MODE="ENCOUNTER") S %DT="P",%DT(0)=-DT
"RTN","PXRMXDUT",107,0)
 D HELP^%DTC
"RTN","PXRMXDUT",108,0)
 Q
"RTN","PXRMXDUT",109,0)
 ;
"RTN","PXRMXDUT",110,0)
PDR(BDATE,EDATE,TYPE,BHTEXT,EXTEXT) ;Get a past date range.
"RTN","PXRMXDUT",111,0)
PBDATE ;Select the beginning date.
"RTN","PXRMXDUT",112,0)
 N X,Y,DIR
"RTN","PXRMXDUT",113,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXDUT",114,0)
 S DIR(0)="D^:"_DT_":EPTX"
"RTN","PXRMXDUT",115,0)
 S DIR("A")="Enter "_TYPE_" BEGINNING DATE"
"RTN","PXRMXDUT",116,0)
 S DIR("?")="This must be a past date. For detailed help type ??"
"RTN","PXRMXDUT",117,0)
 S DIR("??")=U_"D BDHELP^PXRMXDUT(.BHTEXT,TYPE)"
"RTN","PXRMXDUT",118,0)
 W !
"RTN","PXRMXDUT",119,0)
 D ^DIR K DIR
"RTN","PXRMXDUT",120,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXDUT",121,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXDUT",122,0)
 S BDATE=Y
"RTN","PXRMXDUT",123,0)
 I $E(Y,6,7)="00" W $C(7),"  ?? Enter exact date" G PBDATE
"RTN","PXRMXDUT",124,0)
 ;
"RTN","PXRMXDUT",125,0)
PEDATE ;Select the ending date.
"RTN","PXRMXDUT",126,0)
 S DIR(0)="DA^"_BDATE_":"_DT_":EPTX"
"RTN","PXRMXDUT",127,0)
 S DIR("A")="Enter "_TYPE_" ENDING DATE: "
"RTN","PXRMXDUT",128,0)
 S DIR("?")="This must be a past date, but not before "_$$FMTE^XLFDT(BDATE,"D")_". For detailed help type ??"
"RTN","PXRMXDUT",129,0)
 S DIR("??")=U_"D EDHELP^PXRMXDUT(.EHTEXT,TYPE)"
"RTN","PXRMXDUT",130,0)
 D ^DIR K DIR
"RTN","PXRMXDUT",131,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXDUT",132,0)
 I $D(DTOUT) Q
"RTN","PXRMXDUT",133,0)
 I $D(DUOUT) G PBDATE
"RTN","PXRMXDUT",134,0)
 S EDATE=Y
"RTN","PXRMXDUT",135,0)
 I $E(Y,6,7)="00" W $C(7),"  ?? Enter exact date" G PEDATE
"RTN","PXRMXDUT",136,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXDUT",137,0)
 Q
"RTN","PXRMXDUT",138,0)
 ;
"RTN","PXRMXDUT",139,0)
SDR(SDATE,BHTEXT,EHTEXT) ;Get a date.
"RTN","PXRMXDUT",140,0)
SBDATE ;Select the date.
"RTN","PXRMXDUT",141,0)
 N X,Y,DIR
"RTN","PXRMXDUT",142,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXDUT",143,0)
 S DIR(0)="DA^"_DT_"::EFTX"
"RTN","PXRMXDUT",144,0)
 S DIR("A")="Enter EFFECTIVE DUE DATE: "
"RTN","PXRMXDUT",145,0)
 S DIR("B")=$$FMTE^XLFDT($$DT^XLFDT,"D")
"RTN","PXRMXDUT",146,0)
 S DIR("?")="This must be today or a future date. For detailed help type ??"
"RTN","PXRMXDUT",147,0)
 S DIR("??")=U_"D SDHELP^PXRMXDUT(.BHTEXT)"
"RTN","PXRMXDUT",148,0)
 W !
"RTN","PXRMXDUT",149,0)
 D ^DIR K DIR
"RTN","PXRMXDUT",150,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXDUT",151,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXDUT",152,0)
 I $E(Y,6,7)="00" W $C(7),"  ?? Enter exact date" G SBDATE
"RTN","PXRMXDUT",153,0)
 S SDATE=Y
"RTN","PXRMXDUT",154,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXDUT",155,0)
 Q
"RTN","PXRMXGPR")
0^144^B40554816
"RTN","PXRMXGPR",1,0)
PXRMXGPR ; SLC/PJH - Reminder Due print calls ;01/24/2000
"RTN","PXRMXGPR",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMXGPR",3,0)
 ;
"RTN","PXRMXGPR",4,0)
 ;Called from PXRMXPR
"RTN","PXRMXGPR",5,0)
 ;
"RTN","PXRMXGPR",6,0)
 ;Print Selection criteria
"RTN","PXRMXGPR",7,0)
 ;------------------------
"RTN","PXRMXGPR",8,0)
HEAD(PSTART) ;
"RTN","PXRMXGPR",9,0)
 I "LT"[PXRMSEL W !,?PSTART,"Facility: ",FACPNAME
"RTN","PXRMXGPR",10,0)
 I "PTO"[PXRMSEL W !,?PSTART,"Reminders "_PXRMTX_" for ",NAM
"RTN","PXRMXGPR",11,0)
 I PXRMSEL="L" W !,?PSTART,"Reminders "_PXRMTX_" "_SD_" - ",NAM
"RTN","PXRMXGPR",12,0)
 I PXRMSEL="L" D
"RTN","PXRMXGPR",13,0)
 .I "PF"[PXRMFD W " for ",BD," to ",ED
"RTN","PXRMXGPR",14,0)
 .I PXRMFD="A" W " admissions from ",BD," to ",ED
"RTN","PXRMXGPR",15,0)
 .I PXRMFD="C" W " for current inpatients"
"RTN","PXRMXGPR",16,0)
 I PXRMSEL'="L" W " for ",SD
"RTN","PXRMXGPR",17,0)
 W:PXRMSEL="I" !
"RTN","PXRMXGPR",18,0)
 Q
"RTN","PXRMXGPR",19,0)
 ;
"RTN","PXRMXGPR",20,0)
 ;Set up literals for display
"RTN","PXRMXGPR",21,0)
 ;---------------------------
"RTN","PXRMXGPR",22,0)
LITS I PXRMSEL="I" S PXRMFLD="Individual Patients"
"RTN","PXRMXGPR",23,0)
 I PXRMSEL="P" S PXRMFLD="PCMM Provider"
"RTN","PXRMXGPR",24,0)
 I PXRMSEL="O" S PXRMFLD="OE/RR Team"
"RTN","PXRMXGPR",25,0)
 I PXRMSEL="T" S PXRMFLD="PCMM Team"
"RTN","PXRMXGPR",26,0)
 I PXRMSEL="L" D
"RTN","PXRMXGPR",27,0)
 .S PXRMFLD="Location"
"RTN","PXRMXGPR",28,0)
 .I $P(PXRMLCSC,U)="HS" S DES="Selected Hospital Locations"
"RTN","PXRMXGPR",29,0)
 .I $P(PXRMLCSC,U)="HA" S DES="All Outpatient Locations"
"RTN","PXRMXGPR",30,0)
 .I $P(PXRMLCSC,U)="HAI" S DES="All Inpatient Locations"
"RTN","PXRMXGPR",31,0)
 .I $P(PXRMLCSC,U)="CS" S DES="Selected Clinic Stops"
"RTN","PXRMXGPR",32,0)
 .I $P(PXRMLCSC,U)="CA" S DES="All Clinic Stops"
"RTN","PXRMXGPR",33,0)
 .I $P(PXRMLCSC,U)="GS" S DES="Selected Clinic Groups"
"RTN","PXRMXGPR",34,0)
 .I PXRMFD="P" S DES=DES_" (Prior Encounters)"
"RTN","PXRMXGPR",35,0)
 .I PXRMFD="F" S DES=DES_" (Future Appoints.)"
"RTN","PXRMXGPR",36,0)
 .I PXRMFD="A" S DES=DES_" (Admissions)"
"RTN","PXRMXGPR",37,0)
 .I PXRMFD="C" S DES=DES_" (Current Inpatients)"
"RTN","PXRMXGPR",38,0)
 I PXRMSEL="P" D
"RTN","PXRMXGPR",39,0)
 .I PXRMPRIM="A" S CDES="All patients on list"
"RTN","PXRMXGPR",40,0)
 .I PXRMPRIM="P" S CDES="Primary care assigned patients only"
"RTN","PXRMXGPR",41,0)
 Q
"RTN","PXRMXGPR",42,0)
 ;
"RTN","PXRMXGPR",43,0)
 ;Output the provider report criteria
"RTN","PXRMXGPR",44,0)
 ;-----------------------------------
"RTN","PXRMXGPR",45,0)
CRIT(PSTART) ;
"RTN","PXRMXGPR",46,0)
 N UNDL
"RTN","PXRMXGPR",47,0)
 S UNDL=$TR($J("",79)," ","_") D LITS
"RTN","PXRMXGPR",48,0)
 W !?(PSTART-8),"Report Criteria:"
"RTN","PXRMXGPR",49,0)
 I PXRMTMP'="" W !?PSTART,"Report Title:",?32,$P(PXRMTMP,U,3)
"RTN","PXRMXGPR",50,0)
 W !?PSTART,"Patient Sample:",?32,PXRMFLD
"RTN","PXRMXGPR",51,0)
 I PXRMSEL'="L" W !,?PSTART,PXRMFLD,":" D DISP
"RTN","PXRMXGPR",52,0)
 I PXRMSEL="L" D
"RTN","PXRMXGPR",53,0)
 .W !?PSTART,PXRMFLD,":",?32,DES
"RTN","PXRMXGPR",54,0)
 .I $E(PXRMLCSC,2)'="A" W ! D DISP
"RTN","PXRMXGPR",55,0)
 D CHECK(6)
"RTN","PXRMXGPR",56,0)
 I PXRMREP="D" D
"RTN","PXRMXGPR",57,0)
 .W !,?PSTART,"Reminder:",?32,RDES
"RTN","PXRMXGPR",58,0)
 .;Display future appointments for Reminder Due report only
"RTN","PXRMXGPR",59,0)
 .I PXRMRT="PXRMX" W !,?PSTART,"Appointments:" D
"RTN","PXRMXGPR",60,0)
 ..I PXRMFUT="Y" W ?32,"All Future Appointments"
"RTN","PXRMXGPR",61,0)
 ..I PXRMFUT="N" W ?32,"Next Appointment only"
"RTN","PXRMXGPR",62,0)
 I PXRMSEL="P" W !,?PSTART,"All/Primary:",?32,CDES
"RTN","PXRMXGPR",63,0)
 I PXRMSEL="L" D
"RTN","PXRMXGPR",64,0)
 .W !?PSTART,"Date Range:",?32
"RTN","PXRMXGPR",65,0)
 .I "PAF"[PXRMFD W BD," to ",ED Q
"RTN","PXRMXGPR",66,0)
 .I PXRMFD="C" W "not applicable" Q
"RTN","PXRMXGPR",67,0)
 W !?PSTART,"Effective Due Date :",?32,SD
"RTN","PXRMXGPR",68,0)
 W !?PSTART,"Date run:",?32,RD
"RTN","PXRMXGPR",69,0)
 I PXRMTMP'="" W !?PSTART,"Template Name:",?32,$P(PXRMTMP,U,2)
"RTN","PXRMXGPR",70,0)
 I $D(PXRMSCAT),PXRMFD="P" D OSCAT(PXRMSCAT,PSTART)
"RTN","PXRMXGPR",71,0)
 W !,UNDL,!
"RTN","PXRMXGPR",72,0)
 Q
"RTN","PXRMXGPR",73,0)
 ;
"RTN","PXRMXGPR",74,0)
 ;Display selected teams/providers
"RTN","PXRMXGPR",75,0)
 ;--------------------------------
"RTN","PXRMXGPR",76,0)
DISP N IC
"RTN","PXRMXGPR",77,0)
 S IC=""
"RTN","PXRMXGPR",78,0)
 I PXRMSEL="P" F  S IC=$O(PXRMPRV(IC)) Q:IC=""  D
"RTN","PXRMXGPR",79,0)
 .W:IC>1 ! W ?32,$P(PXRMPRV(IC),U,2) D TEST(.PXRMPRV)
"RTN","PXRMXGPR",80,0)
 I PXRMSEL="T" F  S IC=$O(PXRMPCM(IC)) Q:IC=""  D
"RTN","PXRMXGPR",81,0)
 .W:IC>1 ! W ?32,$P(PXRMPCM(IC),U,2) D TEST(.PXRMPCM)
"RTN","PXRMXGPR",82,0)
 I PXRMSEL="O" F  S IC=$O(PXRMOTM(IC)) Q:IC=""  D
"RTN","PXRMXGPR",83,0)
 .W:IC>1 ! W ?32,$P(PXRMOTM(IC),U,3) D TEST(.PXRMOTM)
"RTN","PXRMXGPR",84,0)
 I PXRMSEL="I" F  S IC=$O(PXRMPAT(IC)) Q:IC=""  D
"RTN","PXRMXGPR",85,0)
 .W:IC>1 ! W ?32,$P(PXRMPAT(IC),U,2)
"RTN","PXRMXGPR",86,0)
 .D CHECK(3)
"RTN","PXRMXGPR",87,0)
 I PXRMSEL="L" D
"RTN","PXRMXGPR",88,0)
 .I $E(PXRMLCSC)="H" F  S IC=$O(PXRMLCHL(IC)) Q:IC=""  D
"RTN","PXRMXGPR",89,0)
 ..W:IC>1 ! W ?32,$P(PXRMLCHL(IC),U) D TEST(.PXRMLCHL)
"RTN","PXRMXGPR",90,0)
 .I $E(PXRMLCSC)="C" F  S IC=$O(PXRMCS(IC)) Q:IC=""  D
"RTN","PXRMXGPR",91,0)
 ..W:IC>1 ! W ?32,$P(PXRMCS(IC),U)," ",$P(PXRMCS(IC),U,3)
"RTN","PXRMXGPR",92,0)
 ..D TEST(.PXRMCS)
"RTN","PXRMXGPR",93,0)
 .I $E(PXRMLCSC)="G" F  S IC=$O(PXRMCGRP(IC)) Q:IC=""  D
"RTN","PXRMXGPR",94,0)
 ..W:IC>1 ! W ?32,$P(PXRMCGRP(IC),U)," ",$P(PXRMCGRP(IC),U,2)
"RTN","PXRMXGPR",95,0)
 ..D TEST(.PXRMCGRP)
"RTN","PXRMXGPR",96,0)
 Q
"RTN","PXRMXGPR",97,0)
 ;
"RTN","PXRMXGPR",98,0)
 ;Output the service categories
"RTN","PXRMXGPR",99,0)
 ;-----------------------------
"RTN","PXRMXGPR",100,0)
OSCAT(SCL,PSTART) ;
"RTN","PXRMXGPR",101,0)
 N IC,CSTART,EM,SC,SCTEXT
"RTN","PXRMXGPR",102,0)
 S CSTART=PSTART+3
"RTN","PXRMXGPR",103,0)
 W !,?PSTART,"Service categories:",?32,SCL
"RTN","PXRMXGPR",104,0)
 F IC=1:1:$L(SCL) D
"RTN","PXRMXGPR",105,0)
 .S SC=$E(SCL,IC,IC)
"RTN","PXRMXGPR",106,0)
 .S SCTEXT=$$EXTERNAL^DILFD(9000010,.07,"",SC,.EM)
"RTN","PXRMXGPR",107,0)
 .W !,?CSTART,SC," - ",SCTEXT
"RTN","PXRMXGPR",108,0)
 .D CHECK(3)
"RTN","PXRMXGPR",109,0)
 Q
"RTN","PXRMXGPR",110,0)
 ;
"RTN","PXRMXGPR",111,0)
 ;If necessary, write the header
"RTN","PXRMXGPR",112,0)
 ;------------------------------
"RTN","PXRMXGPR",113,0)
COL(NEWPAGE) ;
"RTN","PXRMXGPR",114,0)
 I NEWPAGE D PAGE Q:DONE
"RTN","PXRMXGPR",115,0)
 D CHECK(0) Q:DONE
"RTN","PXRMXGPR",116,0)
 D HEAD(0)
"RTN","PXRMXGPR",117,0)
 I PXRMREP="D" D
"RTN","PXRMXGPR",118,0)
 .W !!,$P(PXRMREM(1),U,4),":  ",COUNT
"RTN","PXRMXGPR",119,0)
 .W:COUNT>1 " patients have reminder "_PXRMTX
"RTN","PXRMXGPR",120,0)
 .W:COUNT=1 " patient has reminder "_PXRMTX
"RTN","PXRMXGPR",121,0)
 N IC F IC=0:1:2 W !,?PXRMT(IC),PXRMH(IC)
"RTN","PXRMXGPR",122,0)
 S HEAD=0
"RTN","PXRMXGPR",123,0)
 Q
"RTN","PXRMXGPR",124,0)
 ;
"RTN","PXRMXGPR",125,0)
 ;form feed to new page
"RTN","PXRMXGPR",126,0)
 ;---------------------
"RTN","PXRMXGPR",127,0)
PAGE I ($E(IOST)="C")&(IO=IO(0))&(PAGE>0) D
"RTN","PXRMXGPR",128,0)
 .S DIR(0)="E"
"RTN","PXRMXGPR",129,0)
 .W !
"RTN","PXRMXGPR",130,0)
 .D ^DIR K DIR
"RTN","PXRMXGPR",131,0)
 I $D(DUOUT)!($D(DTOUT))!($D(DIROUT)) S DONE=1 Q
"RTN","PXRMXGPR",132,0)
 W:$D(IOF) @IOF
"RTN","PXRMXGPR",133,0)
 S PAGE=PAGE+1,FIRST=0
"RTN","PXRMXGPR",134,0)
 I $E(IOST)="C",IO=IO(0) W @IOF
"RTN","PXRMXGPR",135,0)
 E  W !
"RTN","PXRMXGPR",136,0)
 N TEMP,TEXTLEN
"RTN","PXRMXGPR",137,0)
 S TEMP=$$NOW^XLFDT,TEMP=$$FMTE^XLFDT(TEMP,"P")
"RTN","PXRMXGPR",138,0)
 S TEMP=TEMP_"  Page "_PAGE
"RTN","PXRMXGPR",139,0)
 S TEXTLEN=$L(TEMP)
"RTN","PXRMXGPR",140,0)
 W ?(IOM-TEXTLEN),TEMP
"RTN","PXRMXGPR",141,0)
 S TEXTLEN=$L(PXRMOPT)
"RTN","PXRMXGPR",142,0)
 I TEXTLEN>0 D
"RTN","PXRMXGPR",143,0)
 .W !!
"RTN","PXRMXGPR",144,0)
 .W ?((IOM-TEXTLEN)/2),PXRMOPT
"RTN","PXRMXGPR",145,0)
 Q
"RTN","PXRMXGPR",146,0)
 ;
"RTN","PXRMXGPR",147,0)
 ;count of patients in sample
"RTN","PXRMXGPR",148,0)
 ;---------------------------
"RTN","PXRMXGPR",149,0)
TOTAL I (PXRMRT="PXRMX")!(PXRMREP="S") W !
"RTN","PXRMXGPR",150,0)
 N LIT S LIT=" patient."
"RTN","PXRMXGPR",151,0)
 I TOTAL>1 S LIT=" patients."
"RTN","PXRMXGPR",152,0)
 W !,"Report run on "_TOTAL_LIT
"RTN","PXRMXGPR",153,0)
 I PXRMREP="D" D
"RTN","PXRMXGPR",154,0)
 .S LIT=" patient."
"RTN","PXRMXGPR",155,0)
 .I APPL>1 S LIT=" patients."
"RTN","PXRMXGPR",156,0)
 .W !,"Applicable to "_APPL_LIT
"RTN","PXRMXGPR",157,0)
 Q
"RTN","PXRMXGPR",158,0)
 ;
"RTN","PXRMXGPR",159,0)
 ;Null report prints if no patients found
"RTN","PXRMXGPR",160,0)
 ;---------------------------------------
"RTN","PXRMXGPR",161,0)
NULL I PXRMSEL="L" D
"RTN","PXRMXGPR",162,0)
 .I PXRMFD="P" W !!,"No patient visits found"
"RTN","PXRMXGPR",163,0)
 .I PXRMFD="A" W !!,"No patient admissions found"
"RTN","PXRMXGPR",164,0)
 .I PXRMFD="C" W !!,"No current inpatient found"
"RTN","PXRMXGPR",165,0)
 .I PXRMFD="F" W !!,"No patient appointments found"
"RTN","PXRMXGPR",166,0)
 I PXRMSEL="P" W !!,"No patients found for provider(s) selected"
"RTN","PXRMXGPR",167,0)
 I "OT"[PXRMSEL W !!,"No patients found for team(s) selected"
"RTN","PXRMXGPR",168,0)
 Q
"RTN","PXRMXGPR",169,0)
 ;
"RTN","PXRMXGPR",170,0)
 ;Null report if no patients due/satisfied - detailed report only
"RTN","PXRMXGPR",171,0)
 ;---------------------------------------------------------------
"RTN","PXRMXGPR",172,0)
NONE D PAGE
"RTN","PXRMXGPR",173,0)
 D HEAD(0)
"RTN","PXRMXGPR",174,0)
 W !!,"No patients with reminders "_PXRMTX
"RTN","PXRMXGPR",175,0)
 Q
"RTN","PXRMXGPR",176,0)
 ;
"RTN","PXRMXGPR",177,0)
 ;Report missed locations if report is partially successful
"RTN","PXRMXGPR",178,0)
 ;---------------------------------------------------------
"RTN","PXRMXGPR",179,0)
MATCH(PSTART) ;
"RTN","PXRMXGPR",180,0)
 N SUB
"RTN","PXRMXGPR",181,0)
 D CHECK(5) Q:DONE
"RTN","PXRMXGPR",182,0)
 N LIT S LIT=PXRMFLD
"RTN","PXRMXGPR",183,0)
 I PXRMSEL="L",$E(PXRMLCSC)="G" S LIT="Clinic Group"
"RTN","PXRMXGPR",184,0)
 W !!?PSTART,"The following ",LIT,"(s) had no patients selected",!
"RTN","PXRMXGPR",185,0)
 S SUB=""
"RTN","PXRMXGPR",186,0)
 F  S SUB=$O(MISSED(SUB)) Q:SUB=""  D
"RTN","PXRMXGPR",187,0)
 .D CHECK(3) Q:DONE
"RTN","PXRMXGPR",188,0)
 .W !?PSTART+10,SUB
"RTN","PXRMXGPR",189,0)
 Q
"RTN","PXRMXGPR",190,0)
 ;
"RTN","PXRMXGPR",191,0)
 ;Check for match on location
"RTN","PXRMXGPR",192,0)
 ;---------------------------
"RTN","PXRMXGPR",193,0)
TEST(ARRAY) ;
"RTN","PXRMXGPR",194,0)
 D CHECK(3) Q:DONE
"RTN","PXRMXGPR",195,0)
 N SUB
"RTN","PXRMXGPR",196,0)
 I $D(^XTMP(PXRMXTMP,"MARKED AS FOUND",IC)) Q
"RTN","PXRMXGPR",197,0)
 S MATCH=1
"RTN","PXRMXGPR",198,0)
 I PXRMSEL'="L" S SUB=$P(ARRAY(IC),U,2)
"RTN","PXRMXGPR",199,0)
 I PXRMSEL="L" S SUB=$P(ARRAY(IC),U,1)
"RTN","PXRMXGPR",200,0)
 I PXRMSEL="L",$E(PXRMLCSC)="C" S SUB=SUB_" "_$P(ARRAY(IC),U,3)
"RTN","PXRMXGPR",201,0)
 I PXRMSEL="L",$E(PXRMLCSC)="G" S SUB=SUB_" "_$P(ARRAY(IC),U,2)
"RTN","PXRMXGPR",202,0)
 S MISSED(SUB)=""
"RTN","PXRMXGPR",203,0)
 Q
"RTN","PXRMXGPR",204,0)
 ;
"RTN","PXRMXGPR",205,0)
 ;Check for page throw
"RTN","PXRMXGPR",206,0)
 ;--------------------
"RTN","PXRMXGPR",207,0)
CHECK(CNT) ;
"RTN","PXRMXGPR",208,0)
 I $Y>(IOSL-BMARG-CNT) D PAGE
"RTN","PXRMXGPR",209,0)
 Q
"RTN","PXRMXGUT")
0^145^B4111687
"RTN","PXRMXGUT",1,0)
PXRMXGUT ; SLC/PJH - General utilities for reminder reports;03/31/1999
"RTN","PXRMXGUT",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMXGUT",3,0)
 ;
"RTN","PXRMXGUT",4,0)
 ;=======================================================================
"RTN","PXRMXGUT",5,0)
EOR ;End of report display.
"RTN","PXRMXGUT",6,0)
 I $E(IOST)="C",IO=IO(0) D
"RTN","PXRMXGUT",7,0)
 . S DIR(0)="EA"
"RTN","PXRMXGUT",8,0)
 . S DIR("A")="End of the report. Press ENTER/RETURN to continue..."
"RTN","PXRMXGUT",9,0)
 . W !
"RTN","PXRMXGUT",10,0)
 . D ^DIR K DIR
"RTN","PXRMXGUT",11,0)
 Q
"RTN","PXRMXGUT",12,0)
 ;
"RTN","PXRMXGUT",13,0)
 ;=======================================================================
"RTN","PXRMXGUT",14,0)
EXIT ;Clean things up.
"RTN","PXRMXGUT",15,0)
 D ^%ZISC
"RTN","PXRMXGUT",16,0)
 D HOME^%ZIS
"RTN","PXRMXGUT",17,0)
 K IO("Q")
"RTN","PXRMXGUT",18,0)
 K DIRUT,DTOUT,DUOUT,POP
"RTN","PXRMXGUT",19,0)
 K POP
"RTN","PXRMXGUT",20,0)
 K ZTREQ
"RTN","PXRMXGUT",21,0)
 I $D(ZTSK) D KILL^%ZTLOAD
"RTN","PXRMXGUT",22,0)
 K ZTSK,ZTQUEUED
"RTN","PXRMXGUT",23,0)
 K ^TMP(PXRMXTMP)
"RTN","PXRMXGUT",24,0)
 K ^XTMP(PXRMXTMP)
"RTN","PXRMXGUT",25,0)
 K ^TMP($J)
"RTN","PXRMXGUT",26,0)
 K ^TMP("PXRMX",$J)
"RTN","PXRMXGUT",27,0)
 Q
"RTN","PXRMXGUT",28,0)
 ;
"RTN","PXRMXGUT",29,0)
 ;=======================================================================
"RTN","PXRMXGUT",30,0)
VLIST(SLIST,LIST,MESSAGE) ;Make sure all the elements of LIST are in
"RTN","PXRMXGUT",31,0)
 ;SLIST.  If they are, then LIST is valid.  The elements of LIST can be
"RTN","PXRMXGUT",32,0)
 ;separated by commas and spaces.
"RTN","PXRMXGUT",33,0)
 N IC,LE,LEN,VALID
"RTN","PXRMXGUT",34,0)
 S LIST=$TR(LIST,",","")
"RTN","PXRMXGUT",35,0)
 S LIST=$TR(LIST," ","")
"RTN","PXRMXGUT",36,0)
 ;Make the test case insensitive.
"RTN","PXRMXGUT",37,0)
 S SLIST=$$UP^XLFSTR(SLIST)
"RTN","PXRMXGUT",38,0)
 S LIST=$$UP^XLFSTR(LIST)
"RTN","PXRMXGUT",39,0)
 S VALID=1
"RTN","PXRMXGUT",40,0)
 S LEN=$L(LIST)
"RTN","PXRMXGUT",41,0)
 I LEN=0 D
"RTN","PXRMXGUT",42,0)
 . W !,"The list is empty!"
"RTN","PXRMXGUT",43,0)
 . S VALID=0
"RTN","PXRMXGUT",44,0)
 F IC=1:1:LEN D
"RTN","PXRMXGUT",45,0)
 . S LE=$E(LIST,IC,IC)
"RTN","PXRMXGUT",46,0)
 . I SLIST'[LE D
"RTN","PXRMXGUT",47,0)
 .. W !,LE,MESSAGE
"RTN","PXRMXGUT",48,0)
 .. S VALID=0
"RTN","PXRMXGUT",49,0)
 Q VALID
"RTN","PXRMXGUT",50,0)
 ;
"RTN","PXRMXGUT",51,0)
 ;=======================================================================
"RTN","PXRMXGUT",52,0)
USTRINS(STRING,CHAR) ;Given a string, which is assumed to be in alphabetical
"RTN","PXRMXGUT",53,0)
 ;order and a character which is not already in the string insert the
"RTN","PXRMXGUT",54,0)
 ;character into the string in alphabetical order. For example:
"RTN","PXRMXGUT",55,0)
 ;STRING CHAR RETURNS
"RTN","PXRMXGUT",56,0)
 ;CEQ     A    ACEQ
"RTN","PXRMXGUT",57,0)
 ;CEQ     E    CEQ
"RTN","PXRMXGUT",58,0)
 ;CEQ     F    CEFQ
"RTN","PXRMXGUT",59,0)
 ;CEQ     T    CEQT
"RTN","PXRMXGUT",60,0)
 ;
"RTN","PXRMXGUT",61,0)
 N CH1,CH2,DONE,IC,LEN,STR
"RTN","PXRMXGUT",62,0)
 S LEN=$L(STRING)
"RTN","PXRMXGUT",63,0)
 ;Special case of empty STRING.
"RTN","PXRMXGUT",64,0)
 I LEN=0 Q CHAR
"RTN","PXRMXGUT",65,0)
 ;
"RTN","PXRMXGUT",66,0)
 S DONE=0
"RTN","PXRMXGUT",67,0)
 S STR=""
"RTN","PXRMXGUT",68,0)
 S CH1=$E(STRING,1,1)
"RTN","PXRMXGUT",69,0)
 I (CH1]CHAR) S STR=STR_CHAR_CH1,DONE=1
"RTN","PXRMXGUT",70,0)
 E  S STR=STR_CH1
"RTN","PXRMXGUT",71,0)
 I CH1=CHAR S DONE=1
"RTN","PXRMXGUT",72,0)
 ;
"RTN","PXRMXGUT",73,0)
 ;Special case of STRING of length 1.
"RTN","PXRMXGUT",74,0)
 I (LEN=1)&('DONE) S STR=STR_CHAR,DONE=1
"RTN","PXRMXGUT",75,0)
 ;
"RTN","PXRMXGUT",76,0)
 F IC=2:1:LEN D
"RTN","PXRMXGUT",77,0)
 . S CH2=$E(STRING,IC,IC)
"RTN","PXRMXGUT",78,0)
 . I DONE S STR=STR_CH2
"RTN","PXRMXGUT",79,0)
 . E  D
"RTN","PXRMXGUT",80,0)
 .. I (CHAR]CH1)&(CH2]CHAR) S STR=STR_CHAR_CH2,DONE=1
"RTN","PXRMXGUT",81,0)
 .. E  S STR=STR_CH2
"RTN","PXRMXGUT",82,0)
 .. I CH2=CHAR S DONE=1
"RTN","PXRMXGUT",83,0)
 .. S CH1=CH2
"RTN","PXRMXGUT",84,0)
 ;
"RTN","PXRMXGUT",85,0)
 ;If we made it all the way through the loop and we are still not
"RTN","PXRMXGUT",86,0)
 ;done then append CHAR.
"RTN","PXRMXGUT",87,0)
 I ('DONE) S STR=STR_CHAR
"RTN","PXRMXGUT",88,0)
 Q STR
"RTN","PXRMXGUT",89,0)
 ;
"RTN","PXRMXPR")
0^146^B33220916
"RTN","PXRMXPR",1,0)
PXRMXPR ; SLC/PJH - Print Reminder Due report. ;03/16/2000
"RTN","PXRMXPR",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMXPR",3,0)
 ;
"RTN","PXRMXPR",4,0)
 ; Called/Jobbed after PXRMXSE
"RTN","PXRMXPR",5,0)
 ;
"RTN","PXRMXPR",6,0)
START N BMARG,C1S,C2S,C3S,C1HS,C2HS,C3HS,DONE,HEAD
"RTN","PXRMXPR",7,0)
 N INDENT,PAGE,MOD,DES,ADES,CDES,RDES,SDES,MATCH,MISSED
"RTN","PXRMXPR",8,0)
 ;
"RTN","PXRMXPR",9,0)
 N PXRMOPT,PXRMFLD,PXRMHDR,PXRMHDRS,PXRMT,PXRMH
"RTN","PXRMXPR",10,0)
 N BD,ED,SD,RD
"RTN","PXRMXPR",11,0)
 ;
"RTN","PXRMXPR",12,0)
 N PXRMTX
"RTN","PXRMXPR",13,0)
 S PXRMTX="due"
"RTN","PXRMXPR",14,0)
 ;
"RTN","PXRMXPR",15,0)
 ; Format Date Range
"RTN","PXRMXPR",16,0)
 I PXRMSEL="L" D
"RTN","PXRMXPR",17,0)
 .S BD=$$FMTE^XLFDT(PXRMBDT,"5D")
"RTN","PXRMXPR",18,0)
 .S ED=$$FMTE^XLFDT(PXRMEDT,"5D")
"RTN","PXRMXPR",19,0)
 ; Format due effective date
"RTN","PXRMXPR",20,0)
 S SD=$$FMTE^XLFDT(PXRMSDT,"5D")
"RTN","PXRMXPR",21,0)
 ; Format run date
"RTN","PXRMXPR",22,0)
 S RD=$$FMTE^XLFDT(PXRMXST,"5P")
"RTN","PXRMXPR",23,0)
 ;
"RTN","PXRMXPR",24,0)
 ;Allow the task to be cleaned up upon successful completion.
"RTN","PXRMXPR",25,0)
 S ZTREQ="@"
"RTN","PXRMXPR",26,0)
 ;
"RTN","PXRMXPR",27,0)
 U IO
"RTN","PXRMXPR",28,0)
 S DONE=0,MATCH=0
"RTN","PXRMXPR",29,0)
 ;
"RTN","PXRMXPR",30,0)
 ;Setup initial formatting parameters.
"RTN","PXRMXPR",31,0)
 S INDENT=3
"RTN","PXRMXPR",32,0)
 S BMARG=2,PAGE=0,HEAD=1
"RTN","PXRMXPR",33,0)
 ;
"RTN","PXRMXPR",34,0)
 ;
"RTN","PXRMXPR",35,0)
 I +$G(XQY)>0 N XQOPT D OP^XQCHK
"RTN","PXRMXPR",36,0)
 S PXRMOPT=$P($G(XQOPT),U,2)
"RTN","PXRMXPR",37,0)
 I ($L(PXRMOPT)>0)&(PXRMOPT'["Clinical") S PXRMOPT="Clinical "_PXRMOPT
"RTN","PXRMXPR",38,0)
 I PXRMREP="D" D
"RTN","PXRMXPR",39,0)
 .S RDES=$P(PXRMREM(1),U,2)
"RTN","PXRMXPR",40,0)
 .S PXRMOPT=PXRMOPT_" - Detailed Report"
"RTN","PXRMXPR",41,0)
 .N IC F IC=0,3,4 S PXRMH(IC)="",PXRMT(IC)=0
"RTN","PXRMXPR",42,0)
 .S PXRMH(1)="Date Due    Last Done   Next Appt"
"RTN","PXRMXPR",43,0)
 .S PXRMH(2)="--------    ---------   ---------"
"RTN","PXRMXPR",44,0)
 .F IC=1,2 S PXRMT(IC)=40
"RTN","PXRMXPR",45,0)
 .S ADES="Next Appointment only"
"RTN","PXRMXPR",46,0)
 .I PXRMFUT="Y" S ADES="All Future Appointments"
"RTN","PXRMXPR",47,0)
 .S SDES="Sorted by Patient Name"
"RTN","PXRMXPR",48,0)
 .I PXRMSRT="Y" S SDES="Sorted by Appointment Date"
"RTN","PXRMXPR",49,0)
 I PXRMREP="S" D
"RTN","PXRMXPR",50,0)
 .S PXRMOPT=PXRMOPT_" - Summary Report"
"RTN","PXRMXPR",51,0)
 .S PXRMH(0)="# Patients with Reminders",PXRMT(0)=50
"RTN","PXRMXPR",52,0)
 .S PXRMH(1)="Applicable           Due"
"RTN","PXRMXPR",53,0)
 .S PXRMH(2)="----------           ---"
"RTN","PXRMXPR",54,0)
 .N IC F IC=1,2 S PXRMT(IC)=50
"RTN","PXRMXPR",55,0)
 .S PXRMH(3)="Denominator"
"RTN","PXRMXPR",56,0)
 .S PXRMH(4)="-----------"
"RTN","PXRMXPR",57,0)
 .F IC=3,4 S PXRMT(IC)=0
"RTN","PXRMXPR",58,0)
 ;
"RTN","PXRMXPR",59,0)
 ;Print Criteria Page
"RTN","PXRMXPR",60,0)
 D PAGE^PXRMXGPR G:DONE EXIT
"RTN","PXRMXPR",61,0)
 D CRIT^PXRMXGPR(10) G:DONE EXIT
"RTN","PXRMXPR",62,0)
 ;
"RTN","PXRMXPR",63,0)
 ;Kill items marked as found
"RTN","PXRMXPR",64,0)
 K ^XTMP(PXRMXTMP,"MARKED AS FOUND")
"RTN","PXRMXPR",65,0)
 ;
"RTN","PXRMXPR",66,0)
 ;Setup the final formatting parameters.
"RTN","PXRMXPR",67,0)
 S C1HS=INDENT+3
"RTN","PXRMXPR",68,0)
 S C1S=0
"RTN","PXRMXPR",69,0)
 S C2HS=C1S+2
"RTN","PXRMXPR",70,0)
 S C2S=C2HS
"RTN","PXRMXPR",71,0)
 S C3HS=C2HS+5
"RTN","PXRMXPR",72,0)
 S C3S=C3HS
"RTN","PXRMXPR",73,0)
 S HEAD=1
"RTN","PXRMXPR",74,0)
 S INDENT=10
"RTN","PXRMXPR",75,0)
 ;
"RTN","PXRMXPR",76,0)
 ; Update last run date 
"RTN","PXRMXPR",77,0)
 I $G(PXRMTMP)'="" D UPD^PXRMXTU
"RTN","PXRMXPR",78,0)
 ;
"RTN","PXRMXPR",79,0)
 ; Get report detail from ^XTMP
"RTN","PXRMXPR",80,0)
 N PNAM,SUB,DFN,BID,NAM,FAC,MOD,SRT,TOTAL,APPL,FACPNAME,PX
"RTN","PXRMXPR",81,0)
 ; Set subroutine label from report format
"RTN","PXRMXPR",82,0)
 S MOD="SUMARY" I PXRMREP="D" S MOD="DETAIL"
"RTN","PXRMXPR",83,0)
 ;
"RTN","PXRMXPR",84,0)
 S FAC=0,PX="PXRM"
"RTN","PXRMXPR",85,0)
 F  S FAC=$O(^XTMP(PXRMXTMP,PX,FAC)) Q:FAC=""  Q:DONE  D
"RTN","PXRMXPR",86,0)
 .;Get facility name for Location and PCMM team report
"RTN","PXRMXPR",87,0)
 .I "TL"[PXRMSEL D
"RTN","PXRMXPR",88,0)
 ..S FACPNAME=$P(PXRMFACN(FAC),U,1)_"  "_$P(PXRMFACN(FAC),U,2)
"RTN","PXRMXPR",89,0)
 .;Report from ^XTMP - label MOD is DETAIL/SUMARY
"RTN","PXRMXPR",90,0)
 .S (PNAM,SUB,NAM,SRT)=""
"RTN","PXRMXPR",91,0)
 .I PXRMSEL="I" S SUB="PATIENT" D @MOD Q:DONE
"RTN","PXRMXPR",92,0)
 .I PXRMSEL'="I" D
"RTN","PXRMXPR",93,0)
 ..;Sort internal IENs into alpha order
"RTN","PXRMXPR",94,0)
 ..D XSORT
"RTN","PXRMXPR",95,0)
 ..F  S SRT=$O(^TMP($J,"SORT",SRT)) Q:SRT=""  Q:DONE  D
"RTN","PXRMXPR",96,0)
 ...S SUB=$G(^TMP($J,"SORT",SRT)) D @MOD
"RTN","PXRMXPR",97,0)
 ;
"RTN","PXRMXPR",98,0)
 ; Null report if no patients selected
"RTN","PXRMXPR",99,0)
 I ('DONE),$O(^XTMP(PXRMXTMP,PX,""))="" D NULL^PXRMXGPR G EXIT
"RTN","PXRMXPR",100,0)
 ; Report selected patient sample with no patients
"RTN","PXRMXPR",101,0)
 I MATCH D MATCH^PXRMXGPR(0)
"RTN","PXRMXPR",102,0)
 ;
"RTN","PXRMXPR",103,0)
EXIT D EXIT^PXRMXGUT
"RTN","PXRMXPR",104,0)
 D EOR^PXRMXGUT
"RTN","PXRMXPR",105,0)
 Q
"RTN","PXRMXPR",106,0)
 ;
"RTN","PXRMXPR",107,0)
 ;Report by Patient
"RTN","PXRMXPR",108,0)
 ;-----------------
"RTN","PXRMXPR",109,0)
DETAIL N JJ,VA,DATE,COUNT,DDAT
"RTN","PXRMXPR",110,0)
 ;
"RTN","PXRMXPR",111,0)
 N DDUE,DDONE,DNEXT,FDAT1,FDAT2,FDAT3
"RTN","PXRMXPR",112,0)
 ;
"RTN","PXRMXPR",113,0)
 S NAM=$G(^XTMP(PXRMXTMP,PX,FAC,SUB)),HEAD=1
"RTN","PXRMXPR",114,0)
 S COUNT=$P(NAM,U,2),TOTAL=$P(NAM,U,3),APPL=$P(NAM,U,4),NAM=$P(NAM,U,1)
"RTN","PXRMXPR",115,0)
 S DDAT="",JJ=0
"RTN","PXRMXPR",116,0)
 ; Get list of patients for each appointment date
"RTN","PXRMXPR",117,0)
 F  S DDAT=$O(^XTMP(PXRMXTMP,PX,FAC,SUB,DDAT)) Q:DDAT=""  Q:DONE  D PAT
"RTN","PXRMXPR",118,0)
 ;
"RTN","PXRMXPR",119,0)
 ; No patients due
"RTN","PXRMXPR",120,0)
 I JJ=0 D:'DONE NONE^PXRMXGPR
"RTN","PXRMXPR",121,0)
 ; Total patients
"RTN","PXRMXPR",122,0)
 D:'DONE TOTAL^PXRMXGPR
"RTN","PXRMXPR",123,0)
 Q
"RTN","PXRMXPR",124,0)
 ;
"RTN","PXRMXPR",125,0)
 ;Extract and print patient detail
"RTN","PXRMXPR",126,0)
 ;--------------------------------
"RTN","PXRMXPR",127,0)
PAT F  S PNAM=$O(^XTMP(PXRMXTMP,PX,FAC,SUB,DDAT,PNAM)) Q:PNAM=""  Q:DONE  D
"RTN","PXRMXPR",128,0)
 .S JJ=JJ+1
"RTN","PXRMXPR",129,0)
 .;Format print line
"RTN","PXRMXPR",130,0)
 .S (BID,FDAT1,FDAT2,FDAT3)="" I PNAM'["No patients found" D 
"RTN","PXRMXPR",131,0)
 ..S FDAT2="N/A",FDAT3="None"
"RTN","PXRMXPR",132,0)
 ..S DFN=$G(^XTMP(PXRMXTMP,PX,FAC,SUB,DDAT,PNAM))
"RTN","PXRMXPR",133,0)
 ..S DDUE=$P(DFN,U,2),DDONE=$P(DFN,U,3),DNEXT=$P(DFN,U,4),DFN=$P(DFN,U,1)
"RTN","PXRMXPR",134,0)
 ..S BID="("_$P($G(^XTMP("PXRMDFN"_DFN,"SSN")),"-",3)_")"
"RTN","PXRMXPR",135,0)
 ..S FDAT1=$$FMTE^XLFDT(DDUE,"5D")
"RTN","PXRMXPR",136,0)
 ..I DDONE S FDAT2=$$FMTE^XLFDT(DDONE,"5D")
"RTN","PXRMXPR",137,0)
 ..I DNEXT S FDAT3=$$FMTE^XLFDT(DNEXT,"5D")
"RTN","PXRMXPR",138,0)
 .;Print
"RTN","PXRMXPR",139,0)
 .D CHECK Q:DONE
"RTN","PXRMXPR",140,0)
 .W !,JJ,?5,$E(PNAM,1,24)," ",BID,?40,FDAT1,?52,FDAT2,?64,FDAT3
"RTN","PXRMXPR",141,0)
 .;---
"RTN","PXRMXPR",142,0)
 .; Future Appointments
"RTN","PXRMXPR",143,0)
 .I PXRMFUT="Y" D
"RTN","PXRMXPR",144,0)
 ..D SDA^VADPT
"RTN","PXRMXPR",145,0)
 ..N SUB,ADAT,ALOC,ATYP
"RTN","PXRMXPR",146,0)
 ..S SUB=0
"RTN","PXRMXPR",147,0)
 ..F  S SUB=$O(^UTILITY("VASD",$J,SUB)) Q:SUB=""  D
"RTN","PXRMXPR",148,0)
 ...S ADAT=$P(^UTILITY("VASD",$J,SUB,"I"),U)
"RTN","PXRMXPR",149,0)
 ...S ALOC=$P(^UTILITY("VASD",$J,SUB,"E"),U,2)
"RTN","PXRMXPR",150,0)
 ...S ATYP=$P(^UTILITY("VASD",$J,SUB,"E"),U,3)
"RTN","PXRMXPR",151,0)
 ...S ADAT=$$FMTE^XLFDT(ADAT,"5")
"RTN","PXRMXPR",152,0)
 ...D CHECK
"RTN","PXRMXPR",153,0)
 ...W !,ADAT,?18,$E(ALOC,1,25),?58,$E(ATYP,1,21)
"RTN","PXRMXPR",154,0)
 ..K ^UTILITY("VASD",$J)
"RTN","PXRMXPR",155,0)
 Q
"RTN","PXRMXPR",156,0)
 ;
"RTN","PXRMXPR",157,0)
 ;Summary by Reminder
"RTN","PXRMXPR",158,0)
 ;------------------
"RTN","PXRMXPR",159,0)
SUMARY N JJ,EVAL,DUE,RNAM,ITEM,COUNT
"RTN","PXRMXPR",160,0)
 ;
"RTN","PXRMXPR",161,0)
 S NAM=$G(^XTMP(PXRMXTMP,PX,FAC,SUB)),HEAD=1
"RTN","PXRMXPR",162,0)
 S TOTAL=$P(NAM,U,3),COUNT=$P(NAM,U,2),NAM=$P(NAM,U,1)
"RTN","PXRMXPR",163,0)
 ;Get reminders in alpha order
"RTN","PXRMXPR",164,0)
 F JJ=1:1:NREM D  Q:DONE
"RTN","PXRMXPR",165,0)
 .S ITEM=$P(PXRMREM(JJ),U,1),RNAM=$P(PXRMREM(JJ),U,4)
"RTN","PXRMXPR",166,0)
 .S:RNAM="" RNAM="no print name found"
"RTN","PXRMXPR",167,0)
 .; zero lines will be printed 
"RTN","PXRMXPR",168,0)
 .S DUE=$G(^XTMP(PXRMXTMP,PX,FAC,SUB,ITEM))
"RTN","PXRMXPR",169,0)
 .S EVAL=+$P(DUE,U,1),DUE=+$P(DUE,U,2)
"RTN","PXRMXPR",170,0)
 .;Print
"RTN","PXRMXPR",171,0)
 .D CHECK Q:DONE
"RTN","PXRMXPR",172,0)
 .W !,JJ,?5,RNAM,?48,$J(EVAL,10),?63,$J(DUE,10)
"RTN","PXRMXPR",173,0)
 .Q
"RTN","PXRMXPR",174,0)
 D:'DONE TOTAL^PXRMXGPR
"RTN","PXRMXPR",175,0)
 Q
"RTN","PXRMXPR",176,0)
 ;
"RTN","PXRMXPR",177,0)
 ;Check line count before writing line
"RTN","PXRMXPR",178,0)
 ;------------------------------------
"RTN","PXRMXPR",179,0)
CHECK I ($Y>(IOSL-BMARG-3))!(HEAD=1) D COL^PXRMXGPR(1)
"RTN","PXRMXPR",180,0)
 Q
"RTN","PXRMXPR",181,0)
 ;
"RTN","PXRMXPR",182,0)
 ;Sort internal numbers into Alpha order
"RTN","PXRMXPR",183,0)
 ;--------------------------------------
"RTN","PXRMXPR",184,0)
XSORT N SUB,NAM
"RTN","PXRMXPR",185,0)
 K ^TMP($J,"SORT")
"RTN","PXRMXPR",186,0)
 S SUB=""
"RTN","PXRMXPR",187,0)
 F  S SUB=$O(^XTMP(PXRMXTMP,PX,FAC,SUB)) Q:SUB=""  D
"RTN","PXRMXPR",188,0)
 .S NAM=$P(^XTMP(PXRMXTMP,PX,FAC,SUB),U)
"RTN","PXRMXPR",189,0)
 .I NAM="" S NAM=SUB
"RTN","PXRMXPR",190,0)
 .S ^TMP($J,"SORT",NAM)=SUB
"RTN","PXRMXPR",191,0)
 Q
"RTN","PXRMXQUE")
0^147^B628112
"RTN","PXRMXQUE",1,0)
PXRMXQUE ; SLC/PJH - Reminder reports general queuing routine. ;06/09/1999
"RTN","PXRMXQUE",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMXQUE",3,0)
 ;
"RTN","PXRMXQUE",4,0)
QUE(DESC,IODEV,ROUTINE,SAVE) ;Queue a task.
"RTN","PXRMXQUE",5,0)
 ;
"RTN","PXRMXQUE",6,0)
 N ZTSAVE,ZTRTN,ZTIO,ZTDESC
"RTN","PXRMXQUE",7,0)
 D @SAVE
"RTN","PXRMXQUE",8,0)
 S ZTDESC=DESC
"RTN","PXRMXQUE",9,0)
 S ZTIO=IODEV
"RTN","PXRMXQUE",10,0)
 S ZTRTN=ROUTINE
"RTN","PXRMXQUE",11,0)
 D ^%ZTLOAD
"RTN","PXRMXQUE",12,0)
 I $D(ZTSK)=0 W !!,DESC," cancelled"
"RTN","PXRMXQUE",13,0)
 E  W !!,DESC," has been queued, task number ",ZTSK
"RTN","PXRMXQUE",14,0)
 Q $G(ZTSK)
"RTN","PXRMXQUE",15,0)
 ;
"RTN","PXRMXQUE",16,0)
 ;=======================================================================
"RTN","PXRMXQUE",17,0)
REQUE(DESC,ROUTINE,TASK) ;Reque a task.
"RTN","PXRMXQUE",18,0)
 N ZTSAVE,ZTRTN,ZTIO,ZTDESC
"RTN","PXRMXQUE",19,0)
 S ZTDESC=DESC
"RTN","PXRMXQUE",20,0)
 S ZTRTN=ROUTINE
"RTN","PXRMXQUE",21,0)
 S ZTSK=TASK
"RTN","PXRMXQUE",22,0)
 D REQ^%ZTLOAD
"RTN","PXRMXQUE",23,0)
 Q
"RTN","PXRMXSC")
0^148^B3705933
"RTN","PXRMXSC",1,0)
PXRMXSC ; SLC/PJH - Reminder reports service category selection ;03/31/1999
"RTN","PXRMXSC",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMXSC",3,0)
 ;
"RTN","PXRMXSC",4,0)
SCAT ;Get the list of service categories.
"RTN","PXRMXSC",5,0)
 N DIR,DIEA,IC,JC,NSC,PCESVC,SCA,VALID,X,Y
"RTN","PXRMXSC",6,0)
 K DIRUT,DTOUT,DUOUT
"RTN","PXRMXSC",7,0)
 ;Build a list of allowed service categories. PCE uses a subset of the
"RTN","PXRMXSC",8,0)
 ;categories in the file.  These are stored in PCESVC.
"RTN","PXRMXSC",9,0)
 S PCESVC="AHITSEDX"
"RTN","PXRMXSC",10,0)
 D HELP^DIE(9000010,"",.07,"S","SCA")
"RTN","PXRMXSC",11,0)
 S NSC=SCA("DIHELP")
"RTN","PXRMXSC",12,0)
 S DIR("?")=" "
"RTN","PXRMXSC",13,0)
 S DIR("?",1)="The possible service categories for the report are:"
"RTN","PXRMXSC",14,0)
 S JC=0
"RTN","PXRMXSC",15,0)
 F IC=2:1:NSC D
"RTN","PXRMXSC",16,0)
 . S X=$P(SCA("DIHELP",IC)," ",1)
"RTN","PXRMXSC",17,0)
 . I PCESVC[X D
"RTN","PXRMXSC",18,0)
 .. S JC=JC+1
"RTN","PXRMXSC",19,0)
 .. S DIR("?",JC)=SCA("DIHELP",IC)
"RTN","PXRMXSC",20,0)
 S NSC=JC
"RTN","PXRMXSC",21,0)
 S DIR("??")=U_"D SCATHELP^PXRMXSC"
"RTN","PXRMXSC",22,0)
SCATP ;
"RTN","PXRMXSC",23,0)
 S DIR(0)="FU"_U_"1:"_NSC
"RTN","PXRMXSC",24,0)
 S DIR("A")="Select SERVICE CATEGORIES"
"RTN","PXRMXSC",25,0)
 S DIR("B")="AI"
"RTN","PXRMXSC",26,0)
 W !
"RTN","PXRMXSC",27,0)
 D ^DIR K DIR
"RTN","PXRMXSC",28,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSC",29,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSC",30,0)
 ;Make sure we have a valid list.
"RTN","PXRMXSC",31,0)
 S VALID=$$VLIST^PXRMXGUT(PCESVC,Y," is an invalid service category!")
"RTN","PXRMXSC",32,0)
 I 'VALID G SCATP
"RTN","PXRMXSC",33,0)
 S PXRMSCAT=$$UP^XLFSTR(Y)
"RTN","PXRMXSC",34,0)
 Q
"RTN","PXRMXSC",35,0)
 ;
"RTN","PXRMXSC",36,0)
SCATHELP ;?? help for service categories.
"RTN","PXRMXSC",37,0)
 W !!,"Enter the letter(s) corresponding to the desired service category or categories."
"RTN","PXRMXSC",38,0)
 W !,"For example AHTE would allow only encounters with service categories of"
"RTN","PXRMXSC",39,0)
 W !,"ambulatory, hospitalization, telecommunications, and event (historical) to be included."
"RTN","PXRMXSC",40,0)
 Q
"RTN","PXRMXSC",41,0)
 ;
"RTN","PXRMXSD")
0^149^B49552963
"RTN","PXRMXSD",1,0)
PXRMXSD ; SLC/PJH - Reminder Reports DIR Prompts;06/21/1999
"RTN","PXRMXSD",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMXSD",3,0)
 ;
"RTN","PXRMXSD",4,0)
 ;Called by PXRMXD/PXRMYD (driver)
"RTN","PXRMXSD",5,0)
 ;
"RTN","PXRMXSD",6,0)
 ;Patient Sample Selection
"RTN","PXRMXSD",7,0)
 ;------------------------
"RTN","PXRMXSD",8,0)
SELECT(TYPE) ;
"RTN","PXRMXSD",9,0)
 N X,Y,DIR
"RTN","PXRMXSD",10,0)
SEL0 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSD",11,0)
 S DIR(0)="S"_U_"I:Individual Patient;"
"RTN","PXRMXSD",12,0)
 S DIR(0)=DIR(0)_"L:Location;"
"RTN","PXRMXSD",13,0)
 S DIR(0)=DIR(0)_"O:OE/RR Team;"
"RTN","PXRMXSD",14,0)
 S DIR(0)=DIR(0)_"P:PCMM Provider;"
"RTN","PXRMXSD",15,0)
 S DIR(0)=DIR(0)_"T:PCMM Team;"
"RTN","PXRMXSD",16,0)
 S DIR("A")="PATIENT SAMPLE"
"RTN","PXRMXSD",17,0)
 S DIR("B")="L"
"RTN","PXRMXSD",18,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMXSD",19,0)
 S DIR("??")=U_"D HELP^PXRMXSD(1)"
"RTN","PXRMXSD",20,0)
 D ^DIR K DIR
"RTN","PXRMXSD",21,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSD",22,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSD",23,0)
 S TYPE=Y
"RTN","PXRMXSD",24,0)
 Q
"RTN","PXRMXSD",25,0)
 ;
"RTN","PXRMXSD",26,0)
 ;
"RTN","PXRMXSD",27,0)
 ;Report type selection
"RTN","PXRMXSD",28,0)
 ;---------------------
"RTN","PXRMXSD",29,0)
REP(TYPE) ;
"RTN","PXRMXSD",30,0)
 N X,Y,DIR
"RTN","PXRMXSD",31,0)
 S NREM=0
"RTN","PXRMXSD",32,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSD",33,0)
 S DIR(0)="S"_U_"D:Detailed;"
"RTN","PXRMXSD",34,0)
 S DIR(0)=DIR(0)_"S:Summary;"
"RTN","PXRMXSD",35,0)
 S DIR("A")="TYPE OF REPORT"
"RTN","PXRMXSD",36,0)
 S DIR("B")="S"
"RTN","PXRMXSD",37,0)
 I PXRMSEL="I" S DIR("B")="D"
"RTN","PXRMXSD",38,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMXSD",39,0)
 S DIR("??")=U_"D HELP^PXRMXSD(2)"
"RTN","PXRMXSD",40,0)
 D ^DIR K DIR
"RTN","PXRMXSD",41,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSD",42,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSD",43,0)
 S TYPE=Y
"RTN","PXRMXSD",44,0)
 Q
"RTN","PXRMXSD",45,0)
 ;
"RTN","PXRMXSD",46,0)
 ;
"RTN","PXRMXSD",47,0)
 ;Future Appts/Prior Encounters selection
"RTN","PXRMXSD",48,0)
 ;---------------------------------------
"RTN","PXRMXSD",49,0)
PREV(TYPE) ;
"RTN","PXRMXSD",50,0)
 N X,Y,DIR,PXRMINP
"RTN","PXRMXSD",51,0)
 S NREM=0,PXRMINP=0
"RTN","PXRMXSD",52,0)
 ;For all inpatient locations default is automatic
"RTN","PXRMXSD",53,0)
 I $P(PXRMLCSC,U)="HAI" S PXRMINP=1
"RTN","PXRMXSD",54,0)
 ;For selected locations check if all locations are wards
"RTN","PXRMXSD",55,0)
 I $P(PXRMLCSC,U)="HS" S PXRMINP=$$INP^PXRMXAP(PXRMLCSC,.PXRMLOCN)
"RTN","PXRMXSD",56,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSD",57,0)
 I 'PXRMINP D
"RTN","PXRMXSD",58,0)
 .S DIR(0)="S"_U_"P:Previous Encounters;"
"RTN","PXRMXSD",59,0)
 .S DIR(0)=DIR(0)_"F:Future Appointments;"
"RTN","PXRMXSD",60,0)
 .S DIR("A")="PREVIOUS ENCOUNTERS OR FUTURE APPOINTMENTS"
"RTN","PXRMXSD",61,0)
 .S DIR("B")="P"
"RTN","PXRMXSD",62,0)
 .S DIR("??")=U_"D HELP^PXRMXSD(3)"
"RTN","PXRMXSD",63,0)
 I PXRMINP D
"RTN","PXRMXSD",64,0)
 .S DIR(0)="S"_U_"A:Admissions to Location in date range;"
"RTN","PXRMXSD",65,0)
 .S DIR(0)=DIR(0)_"C:Current Inpatients;"
"RTN","PXRMXSD",66,0)
 .S DIR("A")="CURRENT INPATIENTS OR ADMISSIONS"
"RTN","PXRMXSD",67,0)
 .S DIR("B")="C"
"RTN","PXRMXSD",68,0)
 .S DIR("??")=U_"D HELP^PXRMXSD(7)"
"RTN","PXRMXSD",69,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMXSD",70,0)
 D ^DIR K DIR
"RTN","PXRMXSD",71,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSD",72,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSD",73,0)
 S TYPE=Y
"RTN","PXRMXSD",74,0)
 Q
"RTN","PXRMXSD",75,0)
 ;
"RTN","PXRMXSD",76,0)
 ;Primary Provider patients only or All
"RTN","PXRMXSD",77,0)
 ;-------------------------------------
"RTN","PXRMXSD",78,0)
PRIME(TYPE) ;
"RTN","PXRMXSD",79,0)
 N X,Y,DIR
"RTN","PXRMXSD",80,0)
 S NREM=0
"RTN","PXRMXSD",81,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSD",82,0)
 S DIR(0)="S"_U_"P:Primary care assigned patients only;"
"RTN","PXRMXSD",83,0)
 S DIR(0)=DIR(0)_"A:All patients on list;"
"RTN","PXRMXSD",84,0)
 S DIR("A")="PRIMARY CARE ONLY OR ALL"
"RTN","PXRMXSD",85,0)
 S DIR("B")="P"
"RTN","PXRMXSD",86,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMXSD",87,0)
 S DIR("??")=U_"D HELP^PXRMXSD(4)"
"RTN","PXRMXSD",88,0)
 D ^DIR K DIR
"RTN","PXRMXSD",89,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSD",90,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSD",91,0)
 S TYPE=Y
"RTN","PXRMXSD",92,0)
 Q
"RTN","PXRMXSD",93,0)
 ;
"RTN","PXRMXSD",94,0)
 ; Option to display all future appointments on detail report
"RTN","PXRMXSD",95,0)
 ; ----------------------------------------------------------
"RTN","PXRMXSD",96,0)
FUTURE(YESNO) ;
"RTN","PXRMXSD",97,0)
 N X,Y,DIR,TEXT
"RTN","PXRMXSD",98,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSD",99,0)
 S DIR(0)="YA0"
"RTN","PXRMXSD",100,0)
 S DIR("A")="Display All Future Appointments: "
"RTN","PXRMXSD",101,0)
 S DIR("B")="N"
"RTN","PXRMXSD",102,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMXSD",103,0)
 S DIR("??")=U_"D HELP^PXRMXSD(5)"
"RTN","PXRMXSD",104,0)
 W !
"RTN","PXRMXSD",105,0)
 D ^DIR K DIR
"RTN","PXRMXSD",106,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSD",107,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSD",108,0)
 S YESNO=$E(Y(0))
"RTN","PXRMXSD",109,0)
 Q
"RTN","PXRMXSD",110,0)
 ;
"RTN","PXRMXSD",111,0)
 ; Option to sort by next appointment date on detail report
"RTN","PXRMXSD",112,0)
 ; --------------------------------------------------------
"RTN","PXRMXSD",113,0)
SRT(YESNO) ;
"RTN","PXRMXSD",114,0)
 N X,Y,TEXT,DIR
"RTN","PXRMXSD",115,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSD",116,0)
 S DIR(0)="YA0"
"RTN","PXRMXSD",117,0)
 S DIR("A")="Sort by Next Appointment date: "
"RTN","PXRMXSD",118,0)
 S DIR("B")="N"
"RTN","PXRMXSD",119,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMXSD",120,0)
 S DIR("??")=U_"D HELP^PXRMXSD(6)"
"RTN","PXRMXSD",121,0)
 W !
"RTN","PXRMXSD",122,0)
 D ^DIR K DIR
"RTN","PXRMXSD",123,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSD",124,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSD",125,0)
 S YESNO=$E(Y(0))
"RTN","PXRMXSD",126,0)
 Q
"RTN","PXRMXSD",127,0)
 ;
"RTN","PXRMXSD",128,0)
 ;=======================================================================
"RTN","PXRMXSD",129,0)
 ;General help text routine. Write out the text in the HTEXT array.
"RTN","PXRMXSD",130,0)
HELP(CALL) ;
"RTN","PXRMXSD",131,0)
 N HTEXT
"RTN","PXRMXSD",132,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMXSD",133,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMXSD",134,0)
 ;
"RTN","PXRMXSD",135,0)
 I CALL=1 D
"RTN","PXRMXSD",136,0)
 .S HTEXT(1)="Summary reports total the number of reminders applicable "
"RTN","PXRMXSD",137,0)
 .S HTEXT(2)="and due for the above patient samples."
"RTN","PXRMXSD",138,0)
 .S HTEXT(3)="Detailed reports list patients with reminders due in "
"RTN","PXRMXSD",139,0)
 .S HTEXT(4)="name order or by appointment date."
"RTN","PXRMXSD",140,0)
 I CALL=2 D
"RTN","PXRMXSD",141,0)
 .S HTEXT(1)="DETAILED reports list in alpha order patients in the"
"RTN","PXRMXSD",142,0)
 .S HTEXT(2)="selected patient sample with reminders due."
"RTN","PXRMXSD",143,0)
 .S HTEXT(3)="SUMMARY reports give totals of reminders due for the"
"RTN","PXRMXSD",144,0)
 .S HTEXT(4)="selected patient sample."
"RTN","PXRMXSD",145,0)
 I CALL=3 D
"RTN","PXRMXSD",146,0)
 .S HTEXT(1)="PREVIOUS will report on patients who visited the selected"
"RTN","PXRMXSD",147,0)
 .S HTEXT(2)="locations in the date range specified"
"RTN","PXRMXSD",148,0)
 .S HTEXT(3)="FUTURE will report on patients who have appointments at"
"RTN","PXRMXSD",149,0)
 .S HTEXT(4)="selected locations in the date range specified."
"RTN","PXRMXSD",150,0)
 I CALL=4 D
"RTN","PXRMXSD",151,0)
 .S HTEXT(1)="PRIMARY CARE ONLY excludes patients who are not assigned"
"RTN","PXRMXSD",152,0)
 .S HTEXT(2)="to the PCMM team as primary care."
"RTN","PXRMXSD",153,0)
 I CALL=5 D
"RTN","PXRMXSD",154,0)
 .S HTEXT(1)="Selecting Y will display all future appointments for"
"RTN","PXRMXSD",155,0)
 .S HTEXT(2)="patients with reminders due. Selecting N will display"
"RTN","PXRMXSD",156,0)
 .S HTEXT(3)="for patients with due reminders only the next appointment"
"RTN","PXRMXSD",157,0)
 .I PXRMSEL="L" D
"RTN","PXRMXSD",158,0)
 ..S HTEXT(4)="AT THE SELECTED LOCATION"
"RTN","PXRMXSD",159,0)
 I CALL=6 D
"RTN","PXRMXSD",160,0)
 .S HTEXT(1)="Selecting Y will display patients with reminders in"
"RTN","PXRMXSD",161,0)
 .S HTEXT(2)="appointment date order. Selecting N will display patients"
"RTN","PXRMXSD",162,0)
 .S HTEXT(3)="with reminders in patient name order."
"RTN","PXRMXSD",163,0)
 I CALL=7 D
"RTN","PXRMXSD",164,0)
 .S HTEXT(1)="ADMISSIONS will report on inpatients admitted in the"
"RTN","PXRMXSD",165,0)
 .S HTEXT(2)="selected locations in the date range specified. "
"RTN","PXRMXSD",166,0)
 .S HTEXT(3)="CURRENT INPATIENTS will report on inpatients currently at"
"RTN","PXRMXSD",167,0)
 .S HTEXT(4)="selected locations."
"RTN","PXRMXSD",168,0)
 I CALL=8 D
"RTN","PXRMXSD",169,0)
 .S HTEXT(1)="Reports for ALL OUTPATIENT LOCATIONS, ALL INPATIENT LOCATIONS and ALL "
"RTN","PXRMXSD",170,0)
 .S HTEXT(2)="CLINIC STOPS produce a combined list of reminders due for"
"RTN","PXRMXSD",171,0)
 .S HTEXT(3)="for all locations in each facility selected."
"RTN","PXRMXSD",172,0)
 .S HTEXT(4)=""
"RTN","PXRMXSD",173,0)
 .S HTEXT(5)="Reports for SELECTED HOSPITAL LOCATIONS, SELECTED CLINIC STOPS and"
"RTN","PXRMXSD",174,0)
 .S HTEXT(6)="SELECTED CLINIC GROUPS list reminders due by location for "
"RTN","PXRMXSD",175,0)
 .S HTEXT(7)="each location selected."
"RTN","PXRMXSD",176,0)
 K ^UTILITY($J,"W")
"RTN","PXRMXSD",177,0)
 S IC=""
"RTN","PXRMXSD",178,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMXSD",179,0)
 . S X=HTEXT(IC)
"RTN","PXRMXSD",180,0)
 . D ^DIWP
"RTN","PXRMXSD",181,0)
 W !
"RTN","PXRMXSD",182,0)
 S IC=0
"RTN","PXRMXSD",183,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMXSD",184,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMXSD",185,0)
 K ^UTILITY($J,"W")
"RTN","PXRMXSD",186,0)
 W !
"RTN","PXRMXSD",187,0)
 Q
"RTN","PXRMXSE")
0^150^B5299205
"RTN","PXRMXSE",1,0)
PXRMXSE ; SLC/PJH - Build Patient lists for Reminder Due report;01/24/2000
"RTN","PXRMXSE",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMXSE",3,0)
 ;
"RTN","PXRMXSE",4,0)
 ; Called/jobbed from PXRMXD
"RTN","PXRMXSE",5,0)
 ;
"RTN","PXRMXSE",6,0)
 ; Input - PXRMSEL,PXRMXTMP
"RTN","PXRMXSE",7,0)
 ;         PXRM*
"RTN","PXRMXSE",8,0)
 ; Output- ^XTMP(PXRMXTMP
"RTN","PXRMXSE",9,0)
 ;
"RTN","PXRMXSE",10,0)
 ;
"RTN","PXRMXSE",11,0)
START N ITEM,LIT,TOTAL,TODAY,ZTSTOP,BUSY
"RTN","PXRMXSE",12,0)
 S TOTAL=0,ZTSTOP="",TODAY=$$DT^XLFDT-.0001
"RTN","PXRMXSE",13,0)
 ;
"RTN","PXRMXSE",14,0)
 ; For the detail report there is only one reminder
"RTN","PXRMXSE",15,0)
 I PXRMREP="D" D
"RTN","PXRMXSE",16,0)
 .S ITEM=$P(PXRMREM(1),U,1),LIT=$P(PXRMREM(1),U,4)
"RTN","PXRMXSE",17,0)
 .I LIT="" S LIT="no print name found"
"RTN","PXRMXSE",18,0)
 ;
"RTN","PXRMXSE",19,0)
 K ^TMP($J),^TMP(PXRMRT,$J)
"RTN","PXRMXSE",20,0)
 ;
"RTN","PXRMXSE",21,0)
 I '(PXRMQUE!$D(IO("S"))) D INIT^PXRMXBSY(.BUSY)
"RTN","PXRMXSE",22,0)
 ;
"RTN","PXRMXSE",23,0)
 ;OE/RR team selected (PXRMOTM)
"RTN","PXRMXSE",24,0)
 ;-------------------
"RTN","PXRMXSE",25,0)
 I PXRMSEL="O" D OERR^PXRMXSEO
"RTN","PXRMXSE",26,0)
 ; 
"RTN","PXRMXSE",27,0)
 ;PCMM team selected (PXRMPCM)
"RTN","PXRMXSE",28,0)
 ;------------------
"RTN","PXRMXSE",29,0)
 I PXRMSEL="T" D PCMMT^PXRMXSEO
"RTN","PXRMXSE",30,0)
 ;
"RTN","PXRMXSE",31,0)
 ;Location selected (PXRMlc)
"RTN","PXRMXSE",32,0)
 ;-----------------
"RTN","PXRMXSE",33,0)
 I PXRMSEL="L" D  G:ZTSTOP=1 EXIT
"RTN","PXRMXSE",34,0)
 .;Prior Visits - build patient list in ^TMP
"RTN","PXRMXSE",35,0)
 .I PXRMFD="P" D VISITS^PXRMXSEL
"RTN","PXRMXSE",36,0)
 .;Current Inpatients
"RTN","PXRMXSE",37,0)
 .I PXRMFD="C" D INP^PXRMXSEL
"RTN","PXRMXSE",38,0)
 .;Inpatient Admissions
"RTN","PXRMXSE",39,0)
 .I PXRMFD="A" D ADM^PXRMXSEL
"RTN","PXRMXSE",40,0)
 .;Future Appointments - build patient list in ^TMP
"RTN","PXRMXSE",41,0)
 .I PXRMFD="F" D APPTS^PXRMXSEL
"RTN","PXRMXSE",42,0)
 .;End task requested
"RTN","PXRMXSE",43,0)
 .Q:ZTSTOP=1
"RTN","PXRMXSE",44,0)
 .;Update ^XTMP from ^TMP
"RTN","PXRMXSE",45,0)
 .I '(PXRMQUE!$D(IO("S"))) D INIT^PXRMXBSY(.BUSY)
"RTN","PXRMXSE",46,0)
 .D XTMP^PXRMXSEO
"RTN","PXRMXSE",47,0)
 ;
"RTN","PXRMXSE",48,0)
 ;PCMM provider selected (PXRMPRV)
"RTN","PXRMXSE",49,0)
 ;----------------------
"RTN","PXRMXSE",50,0)
 I PXRMSEL="P" D PCMMP^PXRMXSEO
"RTN","PXRMXSE",51,0)
 ;
"RTN","PXRMXSE",52,0)
 ;Individual Patients selected (PXRMPAT)
"RTN","PXRMXSE",53,0)
 ;----------------------------
"RTN","PXRMXSE",54,0)
 I PXRMSEL="I" D IND^PXRMXSEO
"RTN","PXRMXSE",55,0)
 ;
"RTN","PXRMXSE",56,0)
 K ^TMP($J),^TMP(PXRMRT,$J)
"RTN","PXRMXSE",57,0)
 ;
"RTN","PXRMXSE",58,0)
DONE ;
"RTN","PXRMXSE",59,0)
 ;Sorting is done.
"RTN","PXRMXSE",60,0)
 I '(PXRMQUE!$D(IO("S"))) D DONE^PXRMXBSY("done")
"RTN","PXRMXSE",61,0)
 ;
"RTN","PXRMXSE",62,0)
 ;
"RTN","PXRMXSE",63,0)
 ;Print the report information.
"RTN","PXRMXSE",64,0)
 I PXRMQUE D 
"RTN","PXRMXSE",65,0)
 .;Start the printing that was queued but not scheduled.
"RTN","PXRMXSE",66,0)
 .N DESC,ROUTINE,TASK,ZTDTH
"RTN","PXRMXSE",67,0)
 .S ROUTINE="^PXRMXPR"
"RTN","PXRMXSE",68,0)
 .S DESC="Reminder Due Report - print"
"RTN","PXRMXSE",69,0)
 .S ZTDTH=$$NOW^XLFDT
"RTN","PXRMXSE",70,0)
 .S TASK=^XTMP(PXRMXTMP,"PRZTSK")
"RTN","PXRMXSE",71,0)
 .D REQUE^PXRMXQUE(DESC,ROUTINE,TASK)
"RTN","PXRMXSE",72,0)
 I 'PXRMQUE D ^PXRMXPR
"RTN","PXRMXSE",73,0)
 Q
"RTN","PXRMXSE",74,0)
 ;
"RTN","PXRMXSE",75,0)
 ;End Task requested
"RTN","PXRMXSE",76,0)
EXIT D EXIT^PXRMXGUT
"RTN","PXRMXSE",77,0)
 Q
"RTN","PXRMXSEL")
0^151^B49664240
"RTN","PXRMXSEL",1,0)
PXRMXSEL ; SLC/PJH - Process Visits/Appts Reminder Due report;08/23/1999
"RTN","PXRMXSEL",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMXSEL",3,0)
 ;
"RTN","PXRMXSEL",4,0)
 ; Called from PXRMXSE
"RTN","PXRMXSEL",5,0)
 ;
"RTN","PXRMXSEL",6,0)
 ;Update ^TMP("PXRMX"
"RTN","PXRMXSEL",7,0)
 ;-------------------
"RTN","PXRMXSEL",8,0)
TMP(INP) ;
"RTN","PXRMXSEL",9,0)
 S ^TMP("PXRMX",$J,FACILITY,NAM,DFN)=INP
"RTN","PXRMXSEL",10,0)
 Q
"RTN","PXRMXSEL",11,0)
 ;
"RTN","PXRMXSEL",12,0)
 ;Mark location as found
"RTN","PXRMXSEL",13,0)
 ;----------------------
"RTN","PXRMXSEL",14,0)
MARK S ^XTMP(PXRMXTMP,"MARKED AS FOUND",IC)=""
"RTN","PXRMXSEL",15,0)
 Q
"RTN","PXRMXSEL",16,0)
 ;
"RTN","PXRMXSEL",17,0)
 ;Build list of Current inpatients
"RTN","PXRMXSEL",18,0)
 ;--------------------------------
"RTN","PXRMXSEL",19,0)
INP N FACILITY,HLOCIEN,IC,NAM,DFN,FOUND
"RTN","PXRMXSEL",20,0)
 ;Default for HA/HAI options
"RTN","PXRMXSEL",21,0)
 S NAM="All Locations"
"RTN","PXRMXSEL",22,0)
 ;For all wards build temporary array
"RTN","PXRMXSEL",23,0)
 I $E(PXRMLCSC,2)="A" N PXRMLCHL,PXRMLOCN D LCHL^PXRMXAP(1,.PXRMLCHL)
"RTN","PXRMXSEL",24,0)
 ;Get Current inpatients for each selected location
"RTN","PXRMXSEL",25,0)
 F IC=1:1 Q:'$D(PXRMLCHL(IC))  D
"RTN","PXRMXSEL",26,0)
 .S HLOCIEN=$P(PXRMLCHL(IC),U,2) Q:HLOCIEN=""
"RTN","PXRMXSEL",27,0)
 .S FACILITY=$$FACL^PXRMXAP(HLOCIEN) Q:FACILITY=""
"RTN","PXRMXSEL",28,0)
 .Q:'$D(PXRMFACN(FACILITY))
"RTN","PXRMXSEL",29,0)
 .;Get WARDIEN,WARDNAM and return DFN's in PATS
"RTN","PXRMXSEL",30,0)
 .N PATS D WARD^PXRMXAP(HLOCIEN,.PATS)
"RTN","PXRMXSEL",31,0)
 .;Split selected location report by location
"RTN","PXRMXSEL",32,0)
 .I $E(PXRMLCSC,2)="S" S NAM=$P(PXRMLCHL(IC),U)
"RTN","PXRMXSEL",33,0)
 .;Build ^TMP for selected patients 
"RTN","PXRMXSEL",34,0)
 .S DFN="",FOUND=0
"RTN","PXRMXSEL",35,0)
 .F  S DFN=$O(PATS(DFN)) Q:DFN=""  D TMP(HLOCIEN) I 'FOUND S FOUND=1
"RTN","PXRMXSEL",36,0)
 .I FOUND D MARK
"RTN","PXRMXSEL",37,0)
 Q
"RTN","PXRMXSEL",38,0)
 ;
"RTN","PXRMXSEL",39,0)
 ;Build list of inpatients admissions
"RTN","PXRMXSEL",40,0)
 ;-----------------------------------
"RTN","PXRMXSEL",41,0)
ADM N FACILITY,HLOCIEN,IC,NAM,DFN,FOUND,BD,ED
"RTN","PXRMXSEL",42,0)
 ;Default for HA/HAI options
"RTN","PXRMXSEL",43,0)
 S NAM="All Locations"
"RTN","PXRMXSEL",44,0)
 ;For all wards build temporary array
"RTN","PXRMXSEL",45,0)
 I $E(PXRMLCSC,2)="A" N PXRMLCHL,PXRMLOCN D LCHL^PXRMXAP(1,.PXRMLCHL)
"RTN","PXRMXSEL",46,0)
 ;Get admissions for each selected location
"RTN","PXRMXSEL",47,0)
 F IC=1:1 Q:'$D(PXRMLCHL(IC))  D
"RTN","PXRMXSEL",48,0)
 .S HLOCIEN=$P(PXRMLCHL(IC),U,2) Q:HLOCIEN=""
"RTN","PXRMXSEL",49,0)
 .S FACILITY=$$FACL^PXRMXAP(HLOCIEN) Q:FACILITY=""
"RTN","PXRMXSEL",50,0)
 .Q:'$D(PXRMFACN(FACILITY))
"RTN","PXRMXSEL",51,0)
 .; Get admissions from patient movements and return DFN's in PATS
"RTN","PXRMXSEL",52,0)
 .S BD=PXRMBDT-.0001
"RTN","PXRMXSEL",53,0)
 .S ED=PXRMEDT+.2359
"RTN","PXRMXSEL",54,0)
 .N PATS D ADM^PXRMXAP(HLOCIEN,.PATS,BD,ED)
"RTN","PXRMXSEL",55,0)
 .;Split selected location report by location
"RTN","PXRMXSEL",56,0)
 .I $E(PXRMLCSC,2)="S" S NAM=$P(PXRMLCHL(IC),U)
"RTN","PXRMXSEL",57,0)
 .;Build ^TMP for selected patients 
"RTN","PXRMXSEL",58,0)
 .S DFN="",FOUND=0
"RTN","PXRMXSEL",59,0)
 .F  S DFN=$O(PATS(DFN)) Q:DFN=""  D TMP(HLOCIEN) I 'FOUND S FOUND=1
"RTN","PXRMXSEL",60,0)
 .I FOUND D MARK
"RTN","PXRMXSEL",61,0)
 Q
"RTN","PXRMXSEL",62,0)
 ;
"RTN","PXRMXSEL",63,0)
 ;Scan visit file to build list of patients
"RTN","PXRMXSEL",64,0)
 ;-----------------------------------------
"RTN","PXRMXSEL",65,0)
VISITS N BD,CLINIEN,ED,HLOCIEN,HLOCNAM,FOUND,FACILITY,CGRPIEN
"RTN","PXRMXSEL",66,0)
 N PRVCNT,PRVIEN,VIEN,VISIT,IC
"RTN","PXRMXSEL",67,0)
 N DFN,PNAM,NAM
"RTN","PXRMXSEL",68,0)
 S NAM="All Locations"
"RTN","PXRMXSEL",69,0)
 ;
"RTN","PXRMXSEL",70,0)
 S BD=PXRMBDT-.0001
"RTN","PXRMXSEL",71,0)
 S ED=PXRMEDT+.2359
"RTN","PXRMXSEL",72,0)
 ;Get Date ; DBIA 2028
"RTN","PXRMXSEL",73,0)
 F  S BD=$O(^AUPNVSIT("B",BD)) Q:BD>ED  Q:BD=""  Q:ZTSTOP=1  D
"RTN","PXRMXSEL",74,0)
 .;Display busy 
"RTN","PXRMXSEL",75,0)
 .I '(PXRMQUE!$D(IO("S"))) D SPIN^PXRMXBSY("Sorting Encounters",.BUSY)
"RTN","PXRMXSEL",76,0)
 .S VIEN=0
"RTN","PXRMXSEL",77,0)
 .;Get individual visit
"RTN","PXRMXSEL",78,0)
 .F  S VIEN=$O(^AUPNVSIT("B",BD,VIEN)) Q:VIEN=""  Q:ZTSTOP=1  D
"RTN","PXRMXSEL",79,0)
 ..;Check if stop task requested
"RTN","PXRMXSEL",80,0)
 ..I $$S^%ZTLOAD S ZTSTOP=1 Q
"RTN","PXRMXSEL",81,0)
 ..D SCREEN
"RTN","PXRMXSEL",82,0)
 Q
"RTN","PXRMXSEL",83,0)
 ;
"RTN","PXRMXSEL",84,0)
 ;Screen Individual Visit
"RTN","PXRMXSEL",85,0)
 ;-----------------------
"RTN","PXRMXSEL",86,0)
SCREEN S VISIT=$G(^AUPNVSIT(VIEN,0)) Q:VISIT=""
"RTN","PXRMXSEL",87,0)
 ;Facility
"RTN","PXRMXSEL",88,0)
 S FACILITY=$P(VISIT,U,6) S:FACILITY="" FACILITY=+$P($$SITE^VASITE,U,3)
"RTN","PXRMXSEL",89,0)
 Q:FACILITY=""  Q:'$D(PXRMFACN(FACILITY))
"RTN","PXRMXSEL",90,0)
 ;
"RTN","PXRMXSEL",91,0)
 ;Service categories (ex-PXRR)
"RTN","PXRMXSEL",92,0)
 I PXRMSCAT'[$P(VISIT,U,7) Q
"RTN","PXRMXSEL",93,0)
 ;
"RTN","PXRMXSEL",94,0)
 S FOUND=0
"RTN","PXRMXSEL",95,0)
 ;
"RTN","PXRMXSEL",96,0)
 ;Selected Clinic stops
"RTN","PXRMXSEL",97,0)
 I PXRMSEL="L",($E(PXRMLCSC)="C") D  Q:'FOUND
"RTN","PXRMXSEL",98,0)
 .S CLINIEN=$P(VISIT,U,8) Q:CLINIEN=""
"RTN","PXRMXSEL",99,0)
 .I $P(PXRMLCSC,U,1)="CS" D  Q:'FOUND
"RTN","PXRMXSEL",100,0)
 ..S IC=$G(PXRMCSN(CLINIEN)) Q:IC=""
"RTN","PXRMXSEL",101,0)
 ..;Mark the clinic as matched
"RTN","PXRMXSEL",102,0)
 ..S FOUND=1 D MARK
"RTN","PXRMXSEL",103,0)
 ..S HLOCNAM=$P(^DIC(40.7,CLINIEN,0),U,1)_U_CLINIEN ; DBIA 557
"RTN","PXRMXSEL",104,0)
 ..S NAM=$P(HLOCNAM,U,1)_" "_$P(PXRMCS(IC),U,3)
"RTN","PXRMXSEL",105,0)
 .S FOUND=1
"RTN","PXRMXSEL",106,0)
 ;
"RTN","PXRMXSEL",107,0)
 ;Selected Clinic Groups
"RTN","PXRMXSEL",108,0)
 I PXRMSEL="L",($E(PXRMLCSC)="G") D  Q:'FOUND
"RTN","PXRMXSEL",109,0)
 .S HLOCIEN=$P(VISIT,U,22) Q:HLOCIEN=""
"RTN","PXRMXSEL",110,0)
 .; Check if location is in clinic group ; DBIA 2804
"RTN","PXRMXSEL",111,0)
 .S CGRPIEN=$P($G(^SC(HLOCIEN,0)),U,31) Q:CGRPIEN=""
"RTN","PXRMXSEL",112,0)
 .I $P(PXRMLCSC,U,1)="GS" D  Q:'FOUND
"RTN","PXRMXSEL",113,0)
 ..S IC=$G(PXRMCGRN(CGRPIEN)) Q:IC=""
"RTN","PXRMXSEL",114,0)
 ..;Mark the clinic as matched
"RTN","PXRMXSEL",115,0)
 ..S FOUND=1 D MARK
"RTN","PXRMXSEL",116,0)
 ..S HLOCNAM=$P(^SC(HLOCIEN,0),U,1)_U_HLOCIEN
"RTN","PXRMXSEL",117,0)
 ..S NAM=$P(HLOCNAM,U,1)
"RTN","PXRMXSEL",118,0)
 .S FOUND=1
"RTN","PXRMXSEL",119,0)
 ;
"RTN","PXRMXSEL",120,0)
 ;Selected Locations
"RTN","PXRMXSEL",121,0)
 I PXRMSEL="L",($E(PXRMLCSC)="H") D  Q:'FOUND
"RTN","PXRMXSEL",122,0)
 .S HLOCIEN=$P(VISIT,U,22) Q:HLOCIEN=""
"RTN","PXRMXSEL",123,0)
 .;All inpatient locations - location must be a ward
"RTN","PXRMXSEL",124,0)
 .I $P(PXRMLCSC,U)="HAI" S:$D(^SC(HLOCIEN,42)) FOUND=1 Q
"RTN","PXRMXSEL",125,0)
 .;All outpatient locations - location must cannot be a ward
"RTN","PXRMXSEL",126,0)
 .I $P(PXRMLCSC,U)="HA" S:'$D(^SC(HLOCIEN,42)) FOUND=1 Q
"RTN","PXRMXSEL",127,0)
 .;Selected locations
"RTN","PXRMXSEL",128,0)
 .I $P(PXRMLCSC,U,1)="HS" D  Q:'FOUND
"RTN","PXRMXSEL",129,0)
 ..S IC=$G(PXRMLOCN(HLOCIEN)) Q:IC=""
"RTN","PXRMXSEL",130,0)
 ..;Mark the location as matched
"RTN","PXRMXSEL",131,0)
 ..S FOUND=1 D MARK
"RTN","PXRMXSEL",132,0)
 ..S CLINIEN=$P(^SC(HLOCIEN,0),U,7)
"RTN","PXRMXSEL",133,0)
 ..S HLOCNAM=$P(^SC(HLOCIEN,0),U,1)_U_HLOCIEN
"RTN","PXRMXSEL",134,0)
 ..S NAM=$P(HLOCNAM,U,1)
"RTN","PXRMXSEL",135,0)
 .S FOUND=1
"RTN","PXRMXSEL",136,0)
 ;
"RTN","PXRMXSEL",137,0)
 S DFN=$P(VISIT,U,5)
"RTN","PXRMXSEL",138,0)
 ;Build patient list in ^TMP
"RTN","PXRMXSEL",139,0)
 I $E(PXRMLCSC)="C" D TMP(CLINIEN)
"RTN","PXRMXSEL",140,0)
 I $E(PXRMLCSC)="G" D TMP(CGRPIEN)
"RTN","PXRMXSEL",141,0)
 I $E(PXRMLCSC)="H" D TMP(HLOCIEN)
"RTN","PXRMXSEL",142,0)
 Q
"RTN","PXRMXSEL",143,0)
 ;
"RTN","PXRMXSEL",144,0)
 ;Scan Future Appointments
"RTN","PXRMXSEL",145,0)
 ;------------------------
"RTN","PXRMXSEL",146,0)
APPTS N II,IC,HLOCIEN,CLINIEN,BD,ED,NAM,FACILITY,DFN,PNAM
"RTN","PXRMXSEL",147,0)
 S NAM="All Locations"
"RTN","PXRMXSEL",148,0)
 ;
"RTN","PXRMXSEL",149,0)
 ;If all locations/clinics selected
"RTN","PXRMXSEL",150,0)
 I $E(PXRMLCSC,2)="A" D
"RTN","PXRMXSEL",151,0)
 .S HLOCIEN=0
"RTN","PXRMXSEL",152,0)
 .F  S HLOCIEN=$O(^SC(HLOCIEN)) Q:'HLOCIEN  D  Q:ZTSTOP=1  ; DBIA 2804
"RTN","PXRMXSEL",153,0)
 ..I $E(PXRMLCSC)="C" D
"RTN","PXRMXSEL",154,0)
 ...S CLINIEN=$P(^SC(HLOCIEN,0),U,7)
"RTN","PXRMXSEL",155,0)
 ..D SC
"RTN","PXRMXSEL",156,0)
 ;If selected locations
"RTN","PXRMXSEL",157,0)
 I $P(PXRMLCSC,U,1)="HS" D  Q:ZTSTOP=1
"RTN","PXRMXSEL",158,0)
 .F IC=1:1:NHL D
"RTN","PXRMXSEL",159,0)
 ..S HLOCIEN=$P(PXRMLCHL(IC),U,2)
"RTN","PXRMXSEL",160,0)
 ..S NAM=$P(^SC(HLOCIEN,0),U,1)
"RTN","PXRMXSEL",161,0)
 ..D SC
"RTN","PXRMXSEL",162,0)
 ;If selected clinics
"RTN","PXRMXSEL",163,0)
 I $P(PXRMLCSC,U,1)="CS" D
"RTN","PXRMXSEL",164,0)
 .F IC=1:1:NCS D  Q:ZTSTOP=1
"RTN","PXRMXSEL",165,0)
 ..S CLINIEN=$P(PXRMCS(IC),U,2)
"RTN","PXRMXSEL",166,0)
 ..S NAM=$P(^DIC(40.7,CLINIEN,0),U)_" "_$P(PXRMCS(IC),U,3)
"RTN","PXRMXSEL",167,0)
 ..S HLOCIEN=0
"RTN","PXRMXSEL",168,0)
 ..;Get all Locations for this CLINIC STOP
"RTN","PXRMXSEL",169,0)
 ..F  S HLOCIEN=$O(^SC(HLOCIEN)) Q:'HLOCIEN  D
"RTN","PXRMXSEL",170,0)
 ...;Get appointments for the location
"RTN","PXRMXSEL",171,0)
 ...I $P(^SC(HLOCIEN,0),U,7)=CLINIEN D SC
"RTN","PXRMXSEL",172,0)
 ;If selected clinic groups
"RTN","PXRMXSEL",173,0)
 I $P(PXRMLCSC,U,1)="GS" D
"RTN","PXRMXSEL",174,0)
 .F IC=1:1:NCGRP D  Q:ZTSTOP=1
"RTN","PXRMXSEL",175,0)
 ..S CGRPIEN=$P(PXRMCGRP(IC),U)
"RTN","PXRMXSEL",176,0)
 ..S HLOCIEN=0
"RTN","PXRMXSEL",177,0)
 ..;Get all Locations for this CLINIC GROUP
"RTN","PXRMXSEL",178,0)
 ..F  S HLOCIEN=$O(^SC(HLOCIEN)) Q:'HLOCIEN  D
"RTN","PXRMXSEL",179,0)
 ...S NAM=$P(^SC(HLOCIEN,0),U,1)
"RTN","PXRMXSEL",180,0)
 ...;Get appointments for the location
"RTN","PXRMXSEL",181,0)
 ...I $P(^SC(HLOCIEN,0),U,31)=CGRPIEN D SC
"RTN","PXRMXSEL",182,0)
 Q
"RTN","PXRMXSEL",183,0)
 ;
"RTN","PXRMXSEL",184,0)
 ;Appointments for date amd location selected
"RTN","PXRMXSEL",185,0)
 ;-------------------------------------------
"RTN","PXRMXSEL",186,0)
SC N FIRST
"RTN","PXRMXSEL",187,0)
 S BD=PXRMBDT-.0001,ED=PXRMEDT+.2359,FIRST=1
"RTN","PXRMXSEL",188,0)
 F  S BD=$O(^SC(HLOCIEN,"S",BD)) Q:(BD>ED)!(BD="")  D
"RTN","PXRMXSEL",189,0)
 .I '(PXRMQUE!$D(IO("S"))) D SPIN^PXRMXBSY("Sorting appointments",.BUSY)
"RTN","PXRMXSEL",190,0)
 .S II=0
"RTN","PXRMXSEL",191,0)
 .F  S II=$O(^SC(HLOCIEN,"S",BD,1,II)) Q:+II=0  D  Q:ZTSTOP=1
"RTN","PXRMXSEL",192,0)
 ..;End task requested
"RTN","PXRMXSEL",193,0)
 ..I $$S^%ZTLOAD S ZTSTOP=1 Q
"RTN","PXRMXSEL",194,0)
 ..;Ignore cancelled/rescheduled appointments
"RTN","PXRMXSEL",195,0)
 ..I $P(^SC(HLOCIEN,"S",BD,1,II,0),U,9)="C" Q
"RTN","PXRMXSEL",196,0)
 ..S DFN=$P(^SC(HLOCIEN,"S",BD,1,II,0),U,1)
"RTN","PXRMXSEL",197,0)
 ..;Mark location/clinic stop as matched
"RTN","PXRMXSEL",198,0)
 ..I $E(PXRMLCSC,1,2)="HS" S $P(PXRMLCHL(IC),U,5)="M"
"RTN","PXRMXSEL",199,0)
 ..I $E(PXRMLCSC,1,2)="CS" S $P(PXRMCS(IC),U,5)="M"
"RTN","PXRMXSEL",200,0)
 ..I $E(PXRMLCSC,1,2)="GS" S $P(PXRMCGRP(IC),U,5)="M"
"RTN","PXRMXSEL",201,0)
 ..;Build patient list
"RTN","PXRMXSEL",202,0)
 ..S FACILITY=$P(^SC(HLOCIEN,0),U,4)
"RTN","PXRMXSEL",203,0)
 ..I FACILITY="" S FACILITY=+$P($$SITE^VASITE,U,3)
"RTN","PXRMXSEL",204,0)
 ..Q:FACILITY=""  Q:'$D(PXRMFACN(FACILITY))
"RTN","PXRMXSEL",205,0)
 ..I $E(PXRMLCSC,2)="S",FIRST D MARK S FIRST=0
"RTN","PXRMXSEL",206,0)
 ..I $E(PXRMLCSC)="C" D TMP(CLINIEN)
"RTN","PXRMXSEL",207,0)
 ..I $E(PXRMLCSC)="G" D TMP(CGRPIEN)
"RTN","PXRMXSEL",208,0)
 ..I $E(PXRMLCSC)="H" D TMP(HLOCIEN)
"RTN","PXRMXSEL",209,0)
 Q
"RTN","PXRMXSEO")
0^152^B60742403
"RTN","PXRMXSEO",1,0)
PXRMXSEO ; SLC/PJH - Build Patient list SUBROUTINES;04/13/2000
"RTN","PXRMXSEO",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMXSEO",3,0)
 ;
"RTN","PXRMXSEO",4,0)
 ; Called by label from PXRMXSE
"RTN","PXRMXSEO",5,0)
 ;
"RTN","PXRMXSEO",6,0)
 ;OE/RR team selected (PXRMOTM)
"RTN","PXRMXSEO",7,0)
 ;-------------------
"RTN","PXRMXSEO",8,0)
OERR N II,NAM,OTM
"RTN","PXRMXSEO",9,0)
 S II=""
"RTN","PXRMXSEO",10,0)
 ;Get patient list for each team
"RTN","PXRMXSEO",11,0)
 F  S II=$O(PXRMOTM(II)) Q:II=""  D
"RTN","PXRMXSEO",12,0)
 .N LIST
"RTN","PXRMXSEO",13,0)
 .S OTM=$P(PXRMOTM(II),U),NAM=$P(PXRMOTM(II),U,2)
"RTN","PXRMXSEO",14,0)
 .;Build list of patients for OE/RR team ; DBIA 2692
"RTN","PXRMXSEO",15,0)
 .D TEAMPTS^ORQPTQ1(.LIST,OTM)
"RTN","PXRMXSEO",16,0)
 .I LIST(1)["No patients found" Q
"RTN","PXRMXSEO",17,0)
 .M ^TMP($J,"OTM")=LIST
"RTN","PXRMXSEO",18,0)
 .D UPD("OTM","OTM")
"RTN","PXRMXSEO",19,0)
 .D MARK
"RTN","PXRMXSEO",20,0)
 Q
"RTN","PXRMXSEO",21,0)
 ; 
"RTN","PXRMXSEO",22,0)
 ;PCMM team selected (PXRMPCM)
"RTN","PXRMXSEO",23,0)
 ;------------------
"RTN","PXRMXSEO",24,0)
PCMMT N SCDT,LIST,SCERR,SCLIST,II,PCM,NAM,PNAM,OK
"RTN","PXRMXSEO",25,0)
 S SCDT("BEGIN")=PXRMSDT,SCDT("END")=PXRMSDT
"RTN","PXRMXSEO",26,0)
 ;Include patient if in team on any day in range
"RTN","PXRMXSEO",27,0)
 S SCDT("INCL")=0
"RTN","PXRMXSEO",28,0)
 S II=""
"RTN","PXRMXSEO",29,0)
 ;Get patient list for each team
"RTN","PXRMXSEO",30,0)
 F  S II=$O(PXRMPCM(II)) Q:II=""  D
"RTN","PXRMXSEO",31,0)
 .S PCM=$P(PXRMPCM(II),U),NAM=$P(PXRMPCM(II),U,2)
"RTN","PXRMXSEO",32,0)
 .S OK=$$PTTM^PXRMXAP(PCM,.SCERR) Q:'OK
"RTN","PXRMXSEO",33,0)
 .I $O(^TMP($J,"PCM",0))="" Q
"RTN","PXRMXSEO",34,0)
 .D DUP ; Remove duplicate entries
"RTN","PXRMXSEO",35,0)
 .D UPD("PCM","PCM")
"RTN","PXRMXSEO",36,0)
 .D MARK
"RTN","PXRMXSEO",37,0)
 Q
"RTN","PXRMXSEO",38,0)
 ;
"RTN","PXRMXSEO",39,0)
 ;PCMM provider selected (PXRMPRV)
"RTN","PXRMXSEO",40,0)
 ;----------------------
"RTN","PXRMXSEO",41,0)
PCMMP N SCDT,LIST,SCERR,SCLIST,II,PCM,NAM,PNAM,OK
"RTN","PXRMXSEO",42,0)
 S SCDT("BEGIN")=PXRMSDT,SCDT("END")=PXRMSDT
"RTN","PXRMXSEO",43,0)
 ;Include patient if in team on any day in range
"RTN","PXRMXSEO",44,0)
 S SCDT("INCL")=0
"RTN","PXRMXSEO",45,0)
 S II=""
"RTN","PXRMXSEO",46,0)
 ;Get patient list for each PROVIDER
"RTN","PXRMXSEO",47,0)
 F  S II=$O(PXRMPRV(II)) Q:II=""  D
"RTN","PXRMXSEO",48,0)
 .S PCM=$P(PXRMPRV(II),U),NAM=$P(PXRMPRV(II),U,2)
"RTN","PXRMXSEO",49,0)
 .;Get patients for practs. roles - excluding assoc clinics
"RTN","PXRMXSEO",50,0)
 .N SCTEAM D PTPR^PXRMXAP(PCM,PXRMREP)
"RTN","PXRMXSEO",51,0)
 .I $O(^TMP($J,"PCM",0))="" Q
"RTN","PXRMXSEO",52,0)
 .D DUP ; Remove duplicate entries
"RTN","PXRMXSEO",53,0)
 .;Save in ^TMP in alpha order within team number (internal)
"RTN","PXRMXSEO",54,0)
 .D UPD("PCM","PCM")
"RTN","PXRMXSEO",55,0)
 .D MARK
"RTN","PXRMXSEO",56,0)
 Q
"RTN","PXRMXSEO",57,0)
 ;
"RTN","PXRMXSEO",58,0)
 ;Individual Patients selected (PXRMPAT)
"RTN","PXRMXSEO",59,0)
 ;----------------------------
"RTN","PXRMXSEO",60,0)
IND N DUMMY,LIST,NAM
"RTN","PXRMXSEO",61,0)
 S (DUMMY,NAM)="PATIENT"
"RTN","PXRMXSEO",62,0)
 M ^TMP($J,"PAT")=PXRMPAT
"RTN","PXRMXSEO",63,0)
 D UPD("DUMMY","PAT")
"RTN","PXRMXSEO",64,0)
 Q
"RTN","PXRMXSEO",65,0)
 ;
"RTN","PXRMXSEO",66,0)
 ;Process ^TMP patients for PXRMSEL="L"
"RTN","PXRMXSEO",67,0)
 ;------------------------------------- 
"RTN","PXRMXSEO",68,0)
XTMP N SUB,TEMP,PX
"RTN","PXRMXSEO",69,0)
 S SUB="NAM",TEMP=0,PX="PXRM"
"RTN","PXRMXSEO",70,0)
 N DFN,PNAM,FACILITY,NAM,DDUE,DNEXT,DLAST,DDAT
"RTN","PXRMXSEO",71,0)
 S FACILITY="",DDAT="N/A"
"RTN","PXRMXSEO",72,0)
 F  S FACILITY=$O(^TMP(PXRMRT,$J,FACILITY)) Q:FACILITY=""  D
"RTN","PXRMXSEO",73,0)
 .S NAM=""
"RTN","PXRMXSEO",74,0)
 .F  S NAM=$O(^TMP(PXRMRT,$J,FACILITY,NAM)) Q:NAM=""  D
"RTN","PXRMXSEO",75,0)
 ..S DFN=""
"RTN","PXRMXSEO",76,0)
 ..F  S DFN=$O(^TMP(PXRMRT,$J,FACILITY,NAM,DFN)) Q:DFN=""  D
"RTN","PXRMXSEO",77,0)
 ...;Ignore test patients SSN=000-00-...
"RTN","PXRMXSEO",78,0)
 ...I $P($G(^XTMP("PXRMDFN"_DFN,"SSN")),"-",2,3)="000-00" Q
"RTN","PXRMXSEO",79,0)
 ...S TEMP=TEMP+1
"RTN","PXRMXSEO",80,0)
 ...I '(PXRMQUE!$D(IO("S"))) D
"RTN","PXRMXSEO",81,0)
 ....D SPIN^PXRMXBSY("Evaluating Reminders",.BUSY)
"RTN","PXRMXSEO",82,0)
 ...I PXRMREP="D" D SDET
"RTN","PXRMXSEO",83,0)
 ...I PXRMREP="S" D SSUM
"RTN","PXRMXSEO",84,0)
 Q
"RTN","PXRMXSEO",85,0)
 ;
"RTN","PXRMXSEO",86,0)
 ;
"RTN","PXRMXSEO",87,0)
 ;Transfer patient lists in ^TMP into ^XTMP
"RTN","PXRMXSEO",88,0)
 ;-----------------------------------------
"RTN","PXRMXSEO",89,0)
UPD(SUB,SUB1) ;
"RTN","PXRMXSEO",90,0)
 N JJ,DFN,PNAM,PAT,FACILITY,PX
"RTN","PXRMXSEO",91,0)
 N DDUE,DLAST,DNEXT,DDAT,DCLN
"RTN","PXRMXSEO",92,0)
 ;Ignore facilities
"RTN","PXRMXSEO",93,0)
 S FACILITY="FACILITY",DDAT="N/A"
"RTN","PXRMXSEO",94,0)
 ;Except for PCMM team report
"RTN","PXRMXSEO",95,0)
 I PXRMSEL="T" S FACILITY=$$FAC^PXRMXAP(@SUB1)
"RTN","PXRMXSEO",96,0)
 ;
"RTN","PXRMXSEO",97,0)
 S PAT="0",PX="PXRM"
"RTN","PXRMXSEO",98,0)
 F JJ=1:1 S PAT=$O(^TMP($J,SUB1,PAT)) Q:'PAT  D
"RTN","PXRMXSEO",99,0)
 .I '(PXRMQUE!$D(IO("S"))) D
"RTN","PXRMXSEO",100,0)
 ..D SPIN^PXRMXBSY("Evaluating reminders",.BUSY)
"RTN","PXRMXSEO",101,0)
 .S DFN=$P(^TMP($J,SUB1,PAT),U),PNAM=$P(^TMP($J,SUB1,PAT),U,2)
"RTN","PXRMXSEO",102,0)
 .;Ignore test patients SSN=000-00-...
"RTN","PXRMXSEO",103,0)
 .I (PXRMSEL'="I"),$P($G(^XTMP("PXRMDFN"_DFN,"SSN")),"-",2,3)="000-00" Q
"RTN","PXRMXSEO",104,0)
 .;For provider reports check if assigned as primary
"RTN","PXRMXSEO",105,0)
 .I PXRMSEL="P",PXRMPRIM="P",($$PCASSIGN^PXRMXAP(DFN)'=1) Q
"RTN","PXRMXSEO",106,0)
 .;For detailed provider report get assoc clinic
"RTN","PXRMXSEO",107,0)
 .I PXRMSEL="P",PXRMREP="D" S DCLN=$P(^TMP($J,SUB1,PAT),U,7)
"RTN","PXRMXSEO",108,0)
 .D:PXRMREP="D" SDET
"RTN","PXRMXSEO",109,0)
 .D:PXRMREP="S" SSUM
"RTN","PXRMXSEO",110,0)
 K ^TMP($J,SUB1)
"RTN","PXRMXSEO",111,0)
 Q
"RTN","PXRMXSEO",112,0)
 ;
"RTN","PXRMXSEO",113,0)
 ;
"RTN","PXRMXSEO",114,0)
 ;Detailed report
"RTN","PXRMXSEO",115,0)
 ;---------------
"RTN","PXRMXSEO",116,0)
SDET I $G(^XTMP(PXRMXTMP,PX,FACILITY,@SUB))="" D
"RTN","PXRMXSEO",117,0)
 .S ^XTMP(PXRMXTMP,PX,FACILITY,@SUB)=NAM
"RTN","PXRMXSEO",118,0)
 ;Applicable
"RTN","PXRMXSEO",119,0)
 N APPL,STATUS S APPL=0,STATUS=""
"RTN","PXRMXSEO",120,0)
 ;Check if due and/or applicable (active reminder for live patient)
"RTN","PXRMXSEO",121,0)
 I $P($G(^PXD(811.9,ITEM,0)),U,6)'=1 D
"RTN","PXRMXSEO",122,0)
 .D DATE^PXRM(DFN,ITEM,1,1,PXRMSDT)
"RTN","PXRMXSEO",123,0)
 .;Quit if nothing returned
"RTN","PXRMXSEO",124,0)
 .S STATUS=$P($G(^TMP("PXRHM",$J,ITEM,LIT)),U) Q:STATUS=""
"RTN","PXRMXSEO",125,0)
 .;Exclude dead patients from appicable
"RTN","PXRMXSEO",126,0)
 .I $G(^XTMP("PXRMDFN"_DFN,"DOD"))'="" Q
"RTN","PXRMXSEO",127,0)
 .;Add any that aren't N/A, Ignore on N/A or NEVER to applicable total
"RTN","PXRMXSEO",128,0)
 .I (STATUS'=" ")&(STATUS'["NEVER")&(STATUS'["N/A")&(STATUS'="ERROR") S APPL=1
"RTN","PXRMXSEO",129,0)
 ;
"RTN","PXRMXSEO",130,0)
 ;If DUE NOW save details
"RTN","PXRMXSEO",131,0)
 I STATUS["DUE NOW" D
"RTN","PXRMXSEO",132,0)
 .S DDUE=$P($G(^TMP("PXRHM",$J,ITEM,LIT)),U,2)
"RTN","PXRMXSEO",133,0)
 .S DLAST=$P($G(^TMP("PXRHM",$J,ITEM,LIT)),U,3)
"RTN","PXRMXSEO",134,0)
 .;Next appointment for location or clinic
"RTN","PXRMXSEO",135,0)
 .I PXRMSEL="L" D
"RTN","PXRMXSEO",136,0)
 ..I $E(PXRMLCSC,2)'="A" D DNEXT($G(^TMP("PXRMX",$J,FACILITY,NAM,DFN)))
"RTN","PXRMXSEO",137,0)
 ..I $E(PXRMLCSC,2)="A" D DNEXT("")
"RTN","PXRMXSEO",138,0)
 ..S PNAM=$G(^XTMP("PXRMDFN"_DFN,"PATIENT"))
"RTN","PXRMXSEO",139,0)
 ..; Allow for cache being rebuilt for another user
"RTN","PXRMXSEO",140,0)
 ..I PNAM="" S PNAM=" "
"RTN","PXRMXSEO",141,0)
 .;Next appointment date at any location
"RTN","PXRMXSEO",142,0)
 .I PXRMSEL'="L" D
"RTN","PXRMXSEO",143,0)
 ..;For detailed provider report get next appoint. for assoc. clinic
"RTN","PXRMXSEO",144,0)
 ..I PXRMREP="D",PXRMSEL="P" S DNEXT="" D:DCLN'="" DNEXT(DCLN) Q
"RTN","PXRMXSEO",145,0)
 ..;Otherwise get next appointment for centre
"RTN","PXRMXSEO",146,0)
 ..D DNEXT("")
"RTN","PXRMXSEO",147,0)
 .;Sort by next appointment date
"RTN","PXRMXSEO",148,0)
 .I PXRMSRT="Y" S DDAT=$P(DNEXT,".") S:DDAT="" DDAT="NONE"
"RTN","PXRMXSEO",149,0)
 .;Save entry in ^XTMP
"RTN","PXRMXSEO",150,0)
 .S ^XTMP(PXRMXTMP,PX,FACILITY,@SUB,DDAT,PNAM)=DFN_U_DDUE_U_DLAST_U_DNEXT
"RTN","PXRMXSEO",151,0)
 .;Total of reminders overdue
"RTN","PXRMXSEO",152,0)
 .N CNT
"RTN","PXRMXSEO",153,0)
 .S CNT=$P(^XTMP(PXRMXTMP,PX,FACILITY,@SUB),U,2)
"RTN","PXRMXSEO",154,0)
 .S $P(^XTMP(PXRMXTMP,PX,FACILITY,@SUB),U,2)=CNT+1
"RTN","PXRMXSEO",155,0)
 ;Total of patients checked/applicable
"RTN","PXRMXSEO",156,0)
 N CNT
"RTN","PXRMXSEO",157,0)
 S CNT=$P(^XTMP(PXRMXTMP,PX,FACILITY,@SUB),U,3)
"RTN","PXRMXSEO",158,0)
 S $P(^XTMP(PXRMXTMP,PX,FACILITY,@SUB),U,3)=CNT+1
"RTN","PXRMXSEO",159,0)
 S CNT=$P(^XTMP(PXRMXTMP,PX,FACILITY,@SUB),U,4)
"RTN","PXRMXSEO",160,0)
 S $P(^XTMP(PXRMXTMP,PX,FACILITY,@SUB),U,4)=CNT+APPL
"RTN","PXRMXSEO",161,0)
 K ^TMP("PXRM",$J),^TMP("PXRHM",$J)
"RTN","PXRMXSEO",162,0)
 Q
"RTN","PXRMXSEO",163,0)
 ;
"RTN","PXRMXSEO",164,0)
 ;Find next appointment date
"RTN","PXRMXSEO",165,0)
 ;--------------------------
"RTN","PXRMXSEO",166,0)
DNEXT(IEN) ;
"RTN","PXRMXSEO",167,0)
 N FOUND
"RTN","PXRMXSEO",168,0)
 S DNEXT=TODAY,FOUND=0
"RTN","PXRMXSEO",169,0)
 F  S DNEXT=$O(^DPT(DFN,"S",DNEXT)) Q:DNEXT=""  D  Q:FOUND  ; DBIA 1301
"RTN","PXRMXSEO",170,0)
 .;Ignore cancelled appointments
"RTN","PXRMXSEO",171,0)
 .I $P($G(^DPT(DFN,"S",DNEXT,0)),U,2)["C" Q
"RTN","PXRMXSEO",172,0)
 .I (IEN>0),(+$P($G(^DPT(DFN,"S",DNEXT,0)),U)'=IEN) Q
"RTN","PXRMXSEO",173,0)
 .S FOUND=1
"RTN","PXRMXSEO",174,0)
 Q
"RTN","PXRMXSEO",175,0)
 ;
"RTN","PXRMXSEO",176,0)
 ;Summary report
"RTN","PXRMXSEO",177,0)
 ;--------------
"RTN","PXRMXSEO",178,0)
SSUM N CNT,INAM
"RTN","PXRMXSEO",179,0)
 S (ITEM,CNT)=""
"RTN","PXRMXSEO",180,0)
 ;Check each reminder in the list
"RTN","PXRMXSEO",181,0)
 F  S CNT=$O(PXRMREM(CNT)) Q:CNT=""  D
"RTN","PXRMXSEO",182,0)
 .S ITEM=$P(PXRMREM(CNT),U,1)
"RTN","PXRMXSEO",183,0)
 .S LIT=$P(PXRMREM(CNT),U,4) S:LIT="" LIT="no print name found"
"RTN","PXRMXSEO",184,0)
 .D SSUMX
"RTN","PXRMXSEO",185,0)
 ;Total of patients
"RTN","PXRMXSEO",186,0)
 I $G(^XTMP(PXRMXTMP,PX,FACILITY,@SUB))="" D
"RTN","PXRMXSEO",187,0)
 .S ^XTMP(PXRMXTMP,PX,FACILITY,@SUB)=NAM
"RTN","PXRMXSEO",188,0)
 N CNT
"RTN","PXRMXSEO",189,0)
 S CNT=$P($G(^XTMP(PXRMXTMP,PX,FACILITY,@SUB)),U,3)
"RTN","PXRMXSEO",190,0)
 S $P(^XTMP(PXRMXTMP,PX,FACILITY,@SUB),U,3)=CNT+1
"RTN","PXRMXSEO",191,0)
 Q
"RTN","PXRMXSEO",192,0)
 ; 
"RTN","PXRMXSEO",193,0)
 ;Evaluate reminders for patient
"RTN","PXRMXSEO",194,0)
 ;------------------------------
"RTN","PXRMXSEO",195,0)
SSUMX N DUE,EVAL S DUE=0,EVAL=0
"RTN","PXRMXSEO",196,0)
 ;Check if due (active reminders only)
"RTN","PXRMXSEO",197,0)
 I $P($G(^PXD(811.9,ITEM,0)),U,6)'=1 D
"RTN","PXRMXSEO",198,0)
 .;Evaluate reminder
"RTN","PXRMXSEO",199,0)
 .D DATE^PXRM(DFN,ITEM,1,1,PXRMSDT)
"RTN","PXRMXSEO",200,0)
 .;Quit if nothing returned
"RTN","PXRMXSEO",201,0)
 .I $G(^TMP("PXRHM",$J,ITEM,LIT))="" Q
"RTN","PXRMXSEO",202,0)
 .;Exclude dead patients from applicable
"RTN","PXRMXSEO",203,0)
 .I $G(^XTMP("PXRMDFN"_DFN,"DOD"))'="" Q
"RTN","PXRMXSEO",204,0)
 .;Extract status
"RTN","PXRMXSEO",205,0)
 .N STATUS S STATUS=$P($G(^TMP("PXRHM",$J,ITEM,LIT)),U)
"RTN","PXRMXSEO",206,0)
 .;Add dues to totals of reminders due and reminders applicable
"RTN","PXRMXSEO",207,0)
 .I STATUS["DUE NOW" S DUE=1,EVAL=1 Q
"RTN","PXRMXSEO",208,0)
 .;Add any that aren't N/A, Ignore on N/A,ERROR or NEVER to applicable total
"RTN","PXRMXSEO",209,0)
 .I (STATUS'=" ")&(STATUS'["NEVER")&(STATUS'="N/A")&(STATUS'="ERROR") S EVAL=1
"RTN","PXRMXSEO",210,0)
 ;
"RTN","PXRMXSEO",211,0)
 ;Update XTMP - Total of reminders due
"RTN","PXRMXSEO",212,0)
 N CNT
"RTN","PXRMXSEO",213,0)
 S CNT=$P($G(^XTMP(PXRMXTMP,PX,FACILITY,@SUB,ITEM)),U,1)
"RTN","PXRMXSEO",214,0)
 S $P(^XTMP(PXRMXTMP,PX,FACILITY,@SUB,ITEM),U,1)=CNT+EVAL
"RTN","PXRMXSEO",215,0)
 ;Total of reminders evaluated
"RTN","PXRMXSEO",216,0)
 S CNT=$P($G(^XTMP(PXRMXTMP,PX,FACILITY,@SUB,ITEM)),U,2)
"RTN","PXRMXSEO",217,0)
 S $P(^XTMP(PXRMXTMP,PX,FACILITY,@SUB,ITEM),U,2)=CNT+DUE
"RTN","PXRMXSEO",218,0)
 K ^TMP("PXRM",$J),^TMP("PXRHM",$J)
"RTN","PXRMXSEO",219,0)
 Q
"RTN","PXRMXSEO",220,0)
 ;
"RTN","PXRMXSEO",221,0)
 ;Remove duplicate patient entries
"RTN","PXRMXSEO",222,0)
 ;--------------------------------
"RTN","PXRMXSEO",223,0)
DUP N CNT,DFN,SUB
"RTN","PXRMXSEO",224,0)
 S CNT=0,SUB="PXRMSEO"
"RTN","PXRMXSEO",225,0)
 K ^TMP($J,SUB)
"RTN","PXRMXSEO",226,0)
 F  S CNT=$O(^TMP($J,"PCM",CNT)) Q:'CNT  D
"RTN","PXRMXSEO",227,0)
 .S DFN=$P(^TMP($J,"PCM",CNT),U)
"RTN","PXRMXSEO",228,0)
 .I $D(^TMP($J,SUB,DFN)) K ^TMP($J,"PCM",CNT) Q
"RTN","PXRMXSEO",229,0)
 .S ^TMP($J,SUB,DFN)=""
"RTN","PXRMXSEO",230,0)
 Q
"RTN","PXRMXSEO",231,0)
 ;
"RTN","PXRMXSEO",232,0)
 ;Mark selected item as found
"RTN","PXRMXSEO",233,0)
 ;---------------------------
"RTN","PXRMXSEO",234,0)
MARK S ^XTMP(PXRMXTMP,"MARKED AS FOUND",II)=""
"RTN","PXRMXSEO",235,0)
 Q
"RTN","PXRMXSU")
0^153^B48308402
"RTN","PXRMXSU",1,0)
PXRMXSU ; SLC/PJH - Reminder Reports DIC Prompts;07/16/1999
"RTN","PXRMXSU",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMXSU",3,0)
 ;
"RTN","PXRMXSU",4,0)
 ;Called by PXRMXD/YD
"RTN","PXRMXSU",5,0)
 ;
"RTN","PXRMXSU",6,0)
 ;Repeated Prompt using DIC
"RTN","PXRMXSU",7,0)
 ;-------------------------
"RTN","PXRMXSU",8,0)
SEL(FILE,MODE,CNT,ARRAY,RPT,CHECK) ;
"RTN","PXRMXSU",9,0)
 ;
"RTN","PXRMXSU",10,0)
 ; RPT   = D - detailed report only allows one reminder
"RTN","PXRMXSU",11,0)
 ; CHECK = number or null - validation of facility
"RTN","PXRMXSU",12,0)
 ;
"RTN","PXRMXSU",13,0)
 N X,Y,ARRAYN
"RTN","PXRMXSU",14,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSU",15,0)
 S CNT=0
"RTN","PXRMXSU",16,0)
 W !
"RTN","PXRMXSU",17,0)
 F  D  Q:$D(DTOUT)  Q:$D(DUOUT)  Q:RPT="D"&(CNT>0)  Q:(Y=-1)&(CNT>0)
"RTN","PXRMXSU",18,0)
 .S DIC=FILE,DIC(0)=MODE
"RTN","PXRMXSU",19,0)
 .; Set up ^DIC("S") for duplicate check
"RTN","PXRMXSU",20,0)
 .S DIC("S")="I '$D(ARRAYN(+Y))"
"RTN","PXRMXSU",21,0)
 .I CHECK=1 D FACT^PXRMXAP
"RTN","PXRMXSU",22,0)
 .I CHECK=2 S DIC("S")=DIC("S")_",'(+$P(^(0),U,6))"
"RTN","PXRMXSU",23,0)
 .I CNT>0 S DIC("A")=LIT
"RTN","PXRMXSU",24,0)
 .D ^DIC
"RTN","PXRMXSU",25,0)
 .I X=(U_U) S DTOUT=1
"RTN","PXRMXSU",26,0)
 .I '$D(DTOUT),('$D(DUOUT)) D
"RTN","PXRMXSU",27,0)
 ..I +Y'=-1 D  Q
"RTN","PXRMXSU",28,0)
 ...I $D(ARRAYN(+Y)) W !,"Error - Duplicate entry" Q
"RTN","PXRMXSU",29,0)
 ...S CNT=CNT+1,ARRAY(CNT)=Y_U_Y(0,0)_U_$P(Y(0),U,3)
"RTN","PXRMXSU",30,0)
 ...S ARRAYN(+Y)=""
"RTN","PXRMXSU",31,0)
 ..W:CNT=0 !,LIT1
"RTN","PXRMXSU",32,0)
 .K DIC
"RTN","PXRMXSU",33,0)
 Q
"RTN","PXRMXSU",34,0)
 ;
"RTN","PXRMXSU",35,0)
 ;Establish the LOCATION criteria
"RTN","PXRMXSU",36,0)
LOC(ADEF,BDEF) ;
"RTN","PXRMXSU",37,0)
 N X,Y,DIR
"RTN","PXRMXSU",38,0)
LOC0 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSU",39,0)
 S DIR(0)="S"_U_"HA:All Outpatient Locations;"
"RTN","PXRMXSU",40,0)
 S DIR(0)=DIR(0)_"HAI:All Inpatient Locations;"
"RTN","PXRMXSU",41,0)
 S DIR(0)=DIR(0)_"HS:Selected Hospital Locations;"
"RTN","PXRMXSU",42,0)
 S DIR(0)=DIR(0)_"CA:All Clinic Stops(with encounters);"
"RTN","PXRMXSU",43,0)
 S DIR(0)=DIR(0)_"CS:Selected Clinic Stops;"
"RTN","PXRMXSU",44,0)
 S DIR(0)=DIR(0)_"GS:Selected Clinic Groups;"
"RTN","PXRMXSU",45,0)
 S DIR("A")=ADEF
"RTN","PXRMXSU",46,0)
 S DIR("B")=BDEF
"RTN","PXRMXSU",47,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMXSU",48,0)
 S DIR("??")=U_"D HELP^PXRMXSD(8)"
"RTN","PXRMXSU",49,0)
 D ^DIR K DIR
"RTN","PXRMXSU",50,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXSU",51,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSU",52,0)
 S PXRMLCSC=Y_U_Y(0)
"RTN","PXRMXSU",53,0)
 ;If locations are to be selected individually get the list.
"RTN","PXRMXSU",54,0)
 I Y="HS" D HLOC Q:$D(DTOUT)  G:$D(DUOUT) LOC0
"RTN","PXRMXSU",55,0)
 I Y="CS" D CSTOP Q:$D(DTOUT)  G:$D(DUOUT) LOC0
"RTN","PXRMXSU",56,0)
 I Y="GS" D CGRP(.PXRMCGRP) Q:$D(DTOUT)  G:$D(DUOUT) LOC0
"RTN","PXRMXSU",57,0)
 Q
"RTN","PXRMXSU",58,0)
 ;
"RTN","PXRMXSU",59,0)
 ;Build a list of hospital locations
"RTN","PXRMXSU",60,0)
HLOC N IEN,SC,X,Y,CHECK
"RTN","PXRMXSU",61,0)
 K DTOUT,DUOUT
"RTN","PXRMXSU",62,0)
 S NHL=0
"RTN","PXRMXSU",63,0)
 S DIC("A")="LOCATION: "
"RTN","PXRMXSU",64,0)
 W !
"RTN","PXRMXSU",65,0)
 F  D  Q:$D(DTOUT)  Q:$D(DUOUT)  Q:(Y=-1)&(NHL>0)
"RTN","PXRMXSU",66,0)
 .S DIC="^SC("
"RTN","PXRMXSU",67,0)
 .S DIC(0)="AEQMZ"
"RTN","PXRMXSU",68,0)
 .I NHL>0 S DIC("A")="Select another LOCATION: "
"RTN","PXRMXSU",69,0)
 .D ^DIC
"RTN","PXRMXSU",70,0)
 .I X=(U_U) S DTOUT=1
"RTN","PXRMXSU",71,0)
 .I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSU",72,0)
 .I +Y'=-1 D
"RTN","PXRMXSU",73,0)
 ..S IEN=$P(Y,U,1)
"RTN","PXRMXSU",74,0)
 ..;Check Facility code
"RTN","PXRMXSU",75,0)
 ..N FACILITY S FACILITY=$$FACL^PXRMXAP(IEN)
"RTN","PXRMXSU",76,0)
 ..I FACILITY="" W !,"Location has no facility code" Q
"RTN","PXRMXSU",77,0)
 ..I '$D(PXRMFACN(FACILITY)) D  Q
"RTN","PXRMXSU",78,0)
 ...W !,"Location has a different facility code" Q
"RTN","PXRMXSU",79,0)
 ..;Check for duplicates
"RTN","PXRMXSU",80,0)
 ..I (NHL>0),$$DUP(IEN,.PXRMLCHL) W !,"Error - Duplicate entry" Q
"RTN","PXRMXSU",81,0)
 ..S NHL=NHL+1
"RTN","PXRMXSU",82,0)
 ..;Get the stop code.
"RTN","PXRMXSU",83,0)
 ..S X=$P(^SC(IEN,0),U,7)
"RTN","PXRMXSU",84,0)
 ..S SC="Unknown" I +X>0 S SC=$P(^DIC(40.7,X,0),U,2) ; DBIA 557
"RTN","PXRMXSU",85,0)
 ..I $L(SC)=0 S SC="Unknown"
"RTN","PXRMXSU",86,0)
 ..;Save the external form of the name, then IEN, and the stop code.
"RTN","PXRMXSU",87,0)
 ..S PXRMLCHL(NHL)=$P(Y(0,0),U,1)_U_IEN_U_SC
"RTN","PXRMXSU",88,0)
 ..;Check for mixed inpatient and outpatient locations
"RTN","PXRMXSU",89,0)
 ..I (NHL>1),$D(CHECK)=0 D
"RTN","PXRMXSU",90,0)
 ...Q:'$$LOCN^PXRMXAP(.PXRMLCHL)
"RTN","PXRMXSU",91,0)
 ...W !,"Inpatient and Outpatient locations have been selected"
"RTN","PXRMXSU",92,0)
 ...S CHECK="DONE"
"RTN","PXRMXSU",93,0)
 .K DIC
"RTN","PXRMXSU",94,0)
 .I (NHL=0)&(+Y=-1) W !,"You must select a hospital location!"
"RTN","PXRMXSU",95,0)
 ;
"RTN","PXRMXSU",96,0)
 I $D(DUOUT)!($D(DTOUT)) Q
"RTN","PXRMXSU",97,0)
 ;Sort the hospital location list into alphabetical order.
"RTN","PXRMXSU",98,0)
 S NHL=$$SORT(NHL,"PXRMLCHL",2)
"RTN","PXRMXSU",99,0)
 ;Build array by IEN
"RTN","PXRMXSU",100,0)
 S IC=""
"RTN","PXRMXSU",101,0)
 F  S IC=$O(PXRMLCHL(IC)) Q:IC=""  D
"RTN","PXRMXSU",102,0)
 .S PXRMLOCN($P(PXRMLCHL(IC),U,2))=IC
"RTN","PXRMXSU",103,0)
 Q
"RTN","PXRMXSU",104,0)
 ;---
"RTN","PXRMXSU",105,0)
FACILITY(SEL) ;Select facility (COPIED EX- PXRR)
"RTN","PXRMXSU",106,0)
 N IC,STATION,X,Y,DIC
"RTN","PXRMXSU",107,0)
 K DIRUT,DTOUT,DUOUT
"RTN","PXRMXSU",108,0)
 S NFAC=0
"RTN","PXRMXSU",109,0)
 S DIC("B")=+$P($$SITE^VASITE,U,3)
"RTN","PXRMXSU",110,0)
 S DIC("A")="Select FACILITY: "
"RTN","PXRMXSU",111,0)
 W !
"RTN","PXRMXSU",112,0)
 F  D  Q:$D(DTOUT)  Q:$D(DUOUT)  Q:(Y=-1)&(NFAC>0)
"RTN","PXRMXSU",113,0)
 .S DIC=4
"RTN","PXRMXSU",114,0)
 .S DIC(0)="AEMQZ"
"RTN","PXRMXSU",115,0)
 .I NFAC>0 S DIC("A")="Select another FACILITY: "
"RTN","PXRMXSU",116,0)
 .D ^DIC
"RTN","PXRMXSU",117,0)
 .I X=(U_U) S DTOUT=1
"RTN","PXRMXSU",118,0)
 .I '$D(DTOUT),('$D(DUOUT)),+Y'=-1 D
"RTN","PXRMXSU",119,0)
 ..S NFAC=NFAC+1,PXRMFAC(NFAC)=Y_U_Y(0,0)
"RTN","PXRMXSU",120,0)
 .K DIC
"RTN","PXRMXSU",121,0)
 ;
"RTN","PXRMXSU",122,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMXSU",123,0)
 ;;Save the facility names and station.
"RTN","PXRMXSU",124,0)
 F IC=1:1:NFAC D
"RTN","PXRMXSU",125,0)
 .S X=$P(PXRMFAC(IC),U,1)
"RTN","PXRMXSU",126,0)
 .S STATION=$P($G(^DIC(4,X,99)),U,1)
"RTN","PXRMXSU",127,0)
 .S PXRMFACN(X)=$P(PXRMFAC(IC),U,2)_U_STATION
"RTN","PXRMXSU",128,0)
 ;Sort the facility list into alphabetical order.
"RTN","PXRMXSU",129,0)
 S NFAC=$$SORT(NFAC,"PXRMFAC",2)
"RTN","PXRMXSU",130,0)
 Q
"RTN","PXRMXSU",131,0)
 ; ---
"RTN","PXRMXSU",132,0)
CGRP(TEMP) ; Clinic Group Selection
"RTN","PXRMXSU",133,0)
 N LIT,LIT1,DIC
"RTN","PXRMXSU",134,0)
 S DIC("A")="Select CLINIC GROUP: "
"RTN","PXRMXSU",135,0)
 S LIT="Select another CLINIC GROUP: "
"RTN","PXRMXSU",136,0)
 S LIT1="You must select a clinic group!"
"RTN","PXRMXSU",137,0)
 D SEL(409.67,"AEQMZ",.NOTM,.TEMP,"","")
"RTN","PXRMXSU",138,0)
 ;Build array by IEN
"RTN","PXRMXSU",139,0)
 S NCGRP=0 N IC S IC=""
"RTN","PXRMXSU",140,0)
 F  S IC=$O(PXRMCGRP(IC)) Q:IC=""  D
"RTN","PXRMXSU",141,0)
 .S PXRMCGRN($P(PXRMCGRP(IC),U,1))=IC,NCGRP=IC
"RTN","PXRMXSU",142,0)
 Q
"RTN","PXRMXSU",143,0)
 ; ---
"RTN","PXRMXSU",144,0)
PCMM(TEMP) ; PCMM teams
"RTN","PXRMXSU",145,0)
 N LIT,LIT1,DIC
"RTN","PXRMXSU",146,0)
 S DIC("A")="Select PCMM TEAM: "
"RTN","PXRMXSU",147,0)
 S LIT="Select another PCMM TEAM: ",LIT1="You must select a team!"
"RTN","PXRMXSU",148,0)
 D SEL(404.51,"AEQMZ",.NOTM,.TEMP,"",1)
"RTN","PXRMXSU",149,0)
 Q
"RTN","PXRMXSU",150,0)
 ; ---
"RTN","PXRMXSU",151,0)
OERR(TEAM) ; OE/RR teams
"RTN","PXRMXSU",152,0)
 N LIT,LIT1,DIC
"RTN","PXRMXSU",153,0)
 S DIC("A")="Select TEAM: "
"RTN","PXRMXSU",154,0)
 S LIT="Select another TEAM: ",LIT1="You must select a team!"
"RTN","PXRMXSU",155,0)
 D SEL(100.21,"AEQMZ",.NOTM,.TEAM,"","")
"RTN","PXRMXSU",156,0)
 Q
"RTN","PXRMXSU",157,0)
 ; ---
"RTN","PXRMXSU",158,0)
REM(REM) ;Reminders selection
"RTN","PXRMXSU",159,0)
 N LIT,LIT1,DIC
"RTN","PXRMXSU",160,0)
 S DIC("A")="Select REMINDER: "
"RTN","PXRMXSU",161,0)
 S LIT="Select another REMINDER: ",LIT1="You must select a reminder!"
"RTN","PXRMXSU",162,0)
 D SEL(811.9,"AEQMZ",.NREM,.REM,PXRMREP,2)
"RTN","PXRMXSU",163,0)
 Q
"RTN","PXRMXSU",164,0)
 ; ---
"RTN","PXRMXSU",165,0)
PAT(VAR) ; Patient select
"RTN","PXRMXSU",166,0)
 N LIT,LIT1,DIC
"RTN","PXRMXSU",167,0)
 S DIC("A")="Select PATIENT: "
"RTN","PXRMXSU",168,0)
 S LIT="Select another PATIENT: ",LIT1="You must select a patient!"
"RTN","PXRMXSU",169,0)
 D SEL(2,"AEQMZ",.NPAT,.VAR,"","")
"RTN","PXRMXSU",170,0)
 ;Sort the patient list into ascending order.
"RTN","PXRMXSU",171,0)
 S NPAT=$$SORT(NPAT,"VAR")
"RTN","PXRMXSU",172,0)
 Q
"RTN","PXRMXSU",173,0)
 ; ---
"RTN","PXRMXSU",174,0)
PROV(PRV) ;Build a list of selected providers.
"RTN","PXRMXSU",175,0)
 N LIT,LIT1,DIC
"RTN","PXRMXSU",176,0)
 S DIC("A")="Select PROVIDER: "
"RTN","PXRMXSU",177,0)
 S LIT="Select another PROVIDER: ",LIT1="You must select a provider!"
"RTN","PXRMXSU",178,0)
 D SEL(200,"AEQMZ",.NPRV,.PRV,"","")
"RTN","PXRMXSU",179,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXSU",180,0)
 ;Sort the provider list into ascending order.
"RTN","PXRMXSU",181,0)
 S NPRV=$$SORT(NPRV,"PRV")
"RTN","PXRMXSU",182,0)
 Q
"RTN","PXRMXSU",183,0)
 ; ---
"RTN","PXRMXSU",184,0)
CSTOP ;Get a list of clinic stop codes.
"RTN","PXRMXSU",185,0)
 N LIT,LIT1,DIC,X,Y
"RTN","PXRMXSU",186,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXSU",187,0)
 S DIC("A")="Select CLINIC STOP: "
"RTN","PXRMXSU",188,0)
 S LIT="Select another CLINIC STOP: "
"RTN","PXRMXSU",189,0)
 S LIT1="You must select a clinic stop!"
"RTN","PXRMXSU",190,0)
 S NCS=0
"RTN","PXRMXSU",191,0)
 W !
"RTN","PXRMXSU",192,0)
 F  D  Q:$D(DTOUT)  Q:$D(DUOUT)  Q:(Y=-1)&(NCS>0)
"RTN","PXRMXSU",193,0)
 .S DIC=40.7,DIC(0)="AEMQZ"
"RTN","PXRMXSU",194,0)
 .I NCS>0 S DIC("A")=LIT
"RTN","PXRMXSU",195,0)
 .D ^DIC
"RTN","PXRMXSU",196,0)
 .I X=(U_U) S DTOUT=1
"RTN","PXRMXSU",197,0)
 .I '$D(DTOUT),('$D(DUOUT)) D
"RTN","PXRMXSU",198,0)
 ..I +Y'=-1 D  Q
"RTN","PXRMXSU",199,0)
 ...S NCS=NCS+1
"RTN","PXRMXSU",200,0)
 ...;Save the external form of the name, the IEN, and the stop code.
"RTN","PXRMXSU",201,0)
 ...S PXRMCS(NCS)=$P(Y(0,0),U,1)_U_$P(Y,U,1)_U_$P(Y(0),U,2)
"RTN","PXRMXSU",202,0)
 ..W:NCS=0 !,LIT1
"RTN","PXRMXSU",203,0)
 ;Sort the clinic stop list into alphabetical order.
"RTN","PXRMXSU",204,0)
 S NCS=$$SORT(NCS,"PXRMCS",2)
"RTN","PXRMXSU",205,0)
 ;Build array by IEN
"RTN","PXRMXSU",206,0)
 S IC=""
"RTN","PXRMXSU",207,0)
 F  S IC=$O(PXRMCS(IC)) Q:IC=""  D
"RTN","PXRMXSU",208,0)
 .S PXRMCSN($P(PXRMCS(IC),U,2))=IC
"RTN","PXRMXSU",209,0)
 Q
"RTN","PXRMXSU",210,0)
 ; ---
"RTN","PXRMXSU",211,0)
SORT(N,ARRAY,KEY)       ;Sort an ARRAY with N elements 
"RTN","PXRMXSU",212,0)
 ;return the number of unique elements.  KEY is the piece of ARRAY on
"RTN","PXRMXSU",213,0)
 ;which to base the sort.  The default is the first piece.
"RTN","PXRMXSU",214,0)
 ;
"RTN","PXRMXSU",215,0)
 I (N'>0)!(N=1) Q N
"RTN","PXRMXSU",216,0)
 N IC,IND
"RTN","PXRMXSU",217,0)
 I '$D(KEY) S KEY=1
"RTN","PXRMXSU",218,0)
 F IC=1:1:N S ^TMP($J,"SORT",$P(@ARRAY@(IC),U,KEY))=@ARRAY@(IC)
"RTN","PXRMXSU",219,0)
 S IND=""
"RTN","PXRMXSU",220,0)
 F IC=1:1 S IND=$O(^TMP($J,"SORT",IND)) Q:IND=""  D
"RTN","PXRMXSU",221,0)
 .S @ARRAY@(IC)=^TMP($J,"SORT",IND)
"RTN","PXRMXSU",222,0)
 K ^TMP($J,"SORT")
"RTN","PXRMXSU",223,0)
 Q IC-1
"RTN","PXRMXSU",224,0)
 ;
"RTN","PXRMXSU",225,0)
 ;Check for duplicate entries
"RTN","PXRMXSU",226,0)
DUP(VALUE,ARRAY) ;
"RTN","PXRMXSU",227,0)
 N IC,DUP
"RTN","PXRMXSU",228,0)
 S IC=0,DUP=0
"RTN","PXRMXSU",229,0)
 F  S IC=$O(ARRAY(IC)) Q:IC=""  D  Q:DUP
"RTN","PXRMXSU",230,0)
 .I $P(ARRAY(IC),U,2)=VALUE S DUP=1
"RTN","PXRMXSU",231,0)
 Q DUP
"RTN","PXRMXT")
0^154^B32498304
"RTN","PXRMXT",1,0)
PXRMXT ; SLC/PJH - Reminder Reports Template Load ;02/15/2000
"RTN","PXRMXT",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMXT",3,0)
 ; 
"RTN","PXRMXT",4,0)
 ; Called from PXRMYD,PXRMXD
"RTN","PXRMXT",5,0)
 ;
"RTN","PXRMXT",6,0)
 ;Select Template
"RTN","PXRMXT",7,0)
 ;---------------
"RTN","PXRMXT",8,0)
START N X,Y,CNT,FOUND,PXRMFLD,DIC,MSG
"RTN","PXRMXT",9,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXT",10,0)
 S PXRMTMP="",FOUND=0
"RTN","PXRMXT",11,0)
 ;
"RTN","PXRMXT",12,0)
 ;Check if any templates exist for this report type
"RTN","PXRMXT",13,0)
 Q:'$$FIND(PXRMTYP)
"RTN","PXRMXT",14,0)
 ;
"RTN","PXRMXT",15,0)
 ;Select template required
"RTN","PXRMXT",16,0)
 W !
"RTN","PXRMXT",17,0)
 S CNT=0,DIC=810.1,DIC(0)="AEQMZ"
"RTN","PXRMXT",18,0)
 S DIC("A")="Select an existing REPORT TEMPLATE or return to continue:"
"RTN","PXRMXT",19,0)
 S DIC("S")="I $P(^PXRMPT(810.1,+Y,0),U,3)=PXRMTYP"
"RTN","PXRMXT",20,0)
 D ^DIC
"RTN","PXRMXT",21,0)
 I X=(U_U) S DTOUT=1
"RTN","PXRMXT",22,0)
 I '$D(DTOUT),('$D(DUOUT)) D
"RTN","PXRMXT",23,0)
 .I +Y'=-1 D  Q
"RTN","PXRMXT",24,0)
 ..S CNT=CNT+1,ARRAY(CNT)=Y_U_Y(0,0)_U_$P(Y(0),U,3)
"RTN","PXRMXT",25,0)
 K DIC
"RTN","PXRMXT",26,0)
 ;
"RTN","PXRMXT",27,0)
 ;Load template into local array
"RTN","PXRMXT",28,0)
 I (+Y'=-1)&('$D(DTOUT))&('$D(DUOUT)) D
"RTN","PXRMXT",29,0)
 .L +^PXRMPT(810.1,$P(Y,U)):0
"RTN","PXRMXT",30,0)
 .E  W !!?5,"Another user is editing this entry." S DUOUT=1 Q
"RTN","PXRMXT",31,0)
 .;Load template into an array
"RTN","PXRMXT",32,0)
 .S PXRMTMP=Y_U_$P(Y(0),U,2) D LOAD
"RTN","PXRMXT",33,0)
 .L -^PXRMPT(810.1,$P(PXRMTMP,U))
"RTN","PXRMXT",34,0)
 .;Exit if problem loading template
"RTN","PXRMXT",35,0)
 .I $D(MSG) S DTOUT=1 Q
"RTN","PXRMXT",36,0)
 .;Display Template information
"RTN","PXRMXT",37,0)
 .D:'$D(MSG) ^PXRMXTD
"RTN","PXRMXT",38,0)
 ;
"RTN","PXRMXT",39,0)
EXIT Q
"RTN","PXRMXT",40,0)
 ;
"RTN","PXRMXT",41,0)
 ;Check if any templates exist for this report type
"RTN","PXRMXT",42,0)
 ;-------------------------------------------------
"RTN","PXRMXT",43,0)
FIND(TYP) ;
"RTN","PXRMXT",44,0)
 N SUB,FOUND
"RTN","PXRMXT",45,0)
 S SUB=0,FOUND=0
"RTN","PXRMXT",46,0)
 F  S SUB=$O(^PXRMPT(810.1,SUB)) Q:'SUB  D  Q:FOUND
"RTN","PXRMXT",47,0)
 .I $P($G(^PXRMPT(810.1,SUB,0)),U,3)=TYP S FOUND=1
"RTN","PXRMXT",48,0)
 Q FOUND
"RTN","PXRMXT",49,0)
 ;
"RTN","PXRMXT",50,0)
 ;
"RTN","PXRMXT",51,0)
 ;Load variables from report template (both INT and EXT)
"RTN","PXRMXT",52,0)
 ;------------------------------------------------------
"RTN","PXRMXT",53,0)
LOAD N ARRAY
"RTN","PXRMXT",54,0)
 D GETS^DIQ(810.1,$P(PXRMTMP,U),"**","IER","ARRAY","MSG")
"RTN","PXRMXT",55,0)
 I $D(MSG) D  Q
"RTN","PXRMXT",56,0)
 .W !!,"File read failed, GETS^DIQ returned the following error message:"
"RTN","PXRMXT",57,0)
 .N IC S IC="MSG"
"RTN","PXRMXT",58,0)
 .F  S IC=$Q(@IC) Q:IC=""  W !,IC,"=",@IC
"RTN","PXRMXT",59,0)
 .W !,"Examine the above error message for the reason.",!
"RTN","PXRMXT",60,0)
 .H 2
"RTN","PXRMXT",61,0)
 ;
"RTN","PXRMXT",62,0)
 N SUB,SUB1,ORDER
"RTN","PXRMXT",63,0)
 ;
"RTN","PXRMXT",64,0)
 S SUB1=$O(ARRAY(810.1,""))
"RTN","PXRMXT",65,0)
 F SUB="PXRMTYP","PXRMSEL","PXRMREP","PXRMPRIM","PXRMFD","PXRMFUT" D
"RTN","PXRMXT",66,0)
 .S @SUB=$G(ARRAY(810.1,SUB1,SUB,"I"))
"RTN","PXRMXT",67,0)
 ;
"RTN","PXRMXT",68,0)
 ;Location Selection criteria
"RTN","PXRMXT",69,0)
 S PXRMLCSC=ARRAY(810.1,SUB1,"PXRMLCSC","I")
"RTN","PXRMXT",70,0)
 ;
"RTN","PXRMXT",71,0)
 ;Reminders Due fields only
"RTN","PXRMXT",72,0)
 F SUB="PXRMFD" D
"RTN","PXRMXT",73,0)
 .S @SUB=$G(ARRAY(810.1,SUB1,SUB,"I"))
"RTN","PXRMXT",74,0)
 ;
"RTN","PXRMXT",75,0)
 S PXRMFLD=$G(ARRAY(810.1,SUB1,"PXRMSEL","E"))
"RTN","PXRMXT",76,0)
 S RUN=$G(ARRAY(810.1,SUB1,"RUN","E"))
"RTN","PXRMXT",77,0)
 ;Update name if template has been renamed
"RTN","PXRMXT",78,0)
 S $P(PXRMTMP,U,2)=$G(ARRAY(810.1,SUB1,"NAME","E"))
"RTN","PXRMXT",79,0)
 S TITLE=$G(ARRAY(810.1,SUB1,"TITLE","E")),$P(PXRMTMP,U,3)=TITLE
"RTN","PXRMXT",80,0)
 ;
"RTN","PXRMXT",81,0)
 ;Clear multiple field arrays
"RTN","PXRMXT",82,0)
 K PXRMREM,PXRMPAT,PXRMPRV,PXRMOTM,PXRMFAC,PXRMLCHL,PXRMCS,PXRMCGRP
"RTN","PXRMXT",83,0)
 K PXRMFACN,PXRMCSN,PXRMCGRN
"RTN","PXRMXT",84,0)
 ;
"RTN","PXRMXT",85,0)
 ;Load Multiple fields
"RTN","PXRMXT",86,0)
 D SUB(.PXRMREM,810.12,"REMINDER",1)
"RTN","PXRMXT",87,0)
 ;Load Patients
"RTN","PXRMXT",88,0)
 D SUB(.PXRMPAT,810.16,"PATIENT",1)
"RTN","PXRMXT",89,0)
 ;Load Providers
"RTN","PXRMXT",90,0)
 D SUB(.PXRMPRV,810.14,"PROVIDER",1)
"RTN","PXRMXT",91,0)
 ;Load OE/RR Teams
"RTN","PXRMXT",92,0)
 D SUB(.PXRMOTM,810.17,"OERR TEAM",1)
"RTN","PXRMXT",93,0)
 ;Load PCMM Teams
"RTN","PXRMXT",94,0)
 D SUB(.PXRMPCM,810.18,"PCMM TEAM",1)
"RTN","PXRMXT",95,0)
 ;Load Facility codes
"RTN","PXRMXT",96,0)
 D SUB(.PXRMFAC,810.13,"FACILITY",1)
"RTN","PXRMXT",97,0)
 ;Load Hospital Location codes
"RTN","PXRMXT",98,0)
 D SUB(.PXRMLCHL,810.11,"LOCATION",2)
"RTN","PXRMXT",99,0)
 ;Load Clinic Stop codes
"RTN","PXRMXT",100,0)
 D SUB(.PXRMCS,810.111,"STOP CODE",2)
"RTN","PXRMXT",101,0)
 ;Load Clinic Groups
"RTN","PXRMXT",102,0)
 D SUB(.PXRMCGRP,810.112,"CLINIC GROUP",1)
"RTN","PXRMXT",103,0)
 ;
"RTN","PXRMXT",104,0)
 ;Build PXRMFACN/PXRMLOCN array IEN's and counters NHL/NFAC
"RTN","PXRMXT",105,0)
 D NUM
"RTN","PXRMXT",106,0)
 ;
"RTN","PXRMXT",107,0)
 ;Build Service Category string (held as array in PXRMPT to allow edit)
"RTN","PXRMXT",108,0)
 I PXRMSEL="L" S PXRMSCAT=$$STR(810.19,"SERVICE")
"RTN","PXRMXT",109,0)
 ;
"RTN","PXRMXT",110,0)
 ;Add Descriptions for Reminders
"RTN","PXRMXT",111,0)
 D DES(.PXRMREM,"^PXD(811.9",4)
"RTN","PXRMXT",112,0)
 ;Add Descriptions for Teams
"RTN","PXRMXT",113,0)
 D DES(.PXRMOTM,"^OR(100.21",3)
"RTN","PXRMXT",114,0)
 ;Add Display Codes for Stops
"RTN","PXRMXT",115,0)
 D CODE(.PXRMCS,"^DIC(40.7",3)
"RTN","PXRMXT",116,0)
 ;
"RTN","PXRMXT",117,0)
 ;Sort Reminders into display order
"RTN","PXRMXT",118,0)
 D SORT(.PXRMREM,.ORDER)
"RTN","PXRMXT",119,0)
 Q
"RTN","PXRMXT",120,0)
 ;
"RTN","PXRMXT",121,0)
 ;
"RTN","PXRMXT",122,0)
 ;Extract INTernal and EXTernal format from ARRAY
"RTN","PXRMXT",123,0)
 ;-----------------------------------------------
"RTN","PXRMXT",124,0)
SUB(OUTPUT,SUB,VAR,ORD) ; 
"RTN","PXRMXT",125,0)
 K OUTPUT
"RTN","PXRMXT",126,0)
 N IC,INT,EXT,SUB1,DISP
"RTN","PXRMXT",127,0)
 S SUB1="",IC=0
"RTN","PXRMXT",128,0)
 F  S SUB1=$O(ARRAY(SUB,SUB1)) Q:SUB1=""  D
"RTN","PXRMXT",129,0)
 .S INT=$P($G(ARRAY(SUB,SUB1,VAR,"I")),";")
"RTN","PXRMXT",130,0)
 .S EXT=$G(ARRAY(SUB,SUB1,VAR,"E"))
"RTN","PXRMXT",131,0)
 .S IC=IC+1
"RTN","PXRMXT",132,0)
 .I ORD=1 S OUTPUT(IC)=INT_U_EXT
"RTN","PXRMXT",133,0)
 .I ORD'=1 S OUTPUT(IC)=EXT_U_INT
"RTN","PXRMXT",134,0)
 .I VAR'="REMINDER" Q
"RTN","PXRMXT",135,0)
 .;Get display order
"RTN","PXRMXT",136,0)
 .S DISP=$G(ARRAY(SUB,SUB1,"DISPLAY ORDER","I"))
"RTN","PXRMXT",137,0)
 .;Store in PXRMREM for display
"RTN","PXRMXT",138,0)
 .S OUTPUT(IC)=OUTPUT(IC)_U_DISP
"RTN","PXRMXT",139,0)
 .;Put reminders with no sequence number last
"RTN","PXRMXT",140,0)
 .I DISP="" S DISP=99
"RTN","PXRMXT",141,0)
 .;Create order array for sorting entries later
"RTN","PXRMXT",142,0)
 .S ORDER(DISP,IC)=""
"RTN","PXRMXT",143,0)
 ; Update counter and save display order
"RTN","PXRMXT",144,0)
 I VAR="REMINDER" S NREM=IC
"RTN","PXRMXT",145,0)
 Q
"RTN","PXRMXT",146,0)
 ;
"RTN","PXRMXT",147,0)
 ;Extract INTernal format from ARRAY and build string
"RTN","PXRMXT",148,0)
 ;---------------------------------------------------
"RTN","PXRMXT",149,0)
STR(SUB,VAR) ; 
"RTN","PXRMXT",150,0)
 N IC,INT,SUB1
"RTN","PXRMXT",151,0)
 S SUB1="",IC=0,@VAR=""
"RTN","PXRMXT",152,0)
 F  S SUB1=$O(ARRAY(SUB,SUB1)) Q:SUB1=""  D
"RTN","PXRMXT",153,0)
 .S INT=$P($G(ARRAY(SUB,SUB1,VAR,"I")),";")
"RTN","PXRMXT",154,0)
 .S @VAR=@VAR_INT
"RTN","PXRMXT",155,0)
 Q @VAR
"RTN","PXRMXT",156,0)
 ;
"RTN","PXRMXT",157,0)
 ;Build array PXRMFACN and NFAC
"RTN","PXRMXT",158,0)
 ;-----------------------------
"RTN","PXRMXT",159,0)
NUM N IC,FACN,FACNAM
"RTN","PXRMXT",160,0)
 K PXRMLOCN,PXRMCSN,PXRMCGRN,PXRMFACN
"RTN","PXRMXT",161,0)
 S IC=""
"RTN","PXRMXT",162,0)
 F  S IC=$O(PXRMFAC(IC)) Q:IC=""  D
"RTN","PXRMXT",163,0)
 .S FACN=$P(PXRMFAC(IC),U),FACNAM=$P(PXRMFAC(IC),U,2)
"RTN","PXRMXT",164,0)
 .S PXRMFACN(FACN)=FACNAM_U_FACN,NFAC=IC
"RTN","PXRMXT",165,0)
 ; Build Array PXRMLOCN and NHL
"RTN","PXRMXT",166,0)
 N LOCN
"RTN","PXRMXT",167,0)
 F  S IC=$O(PXRMLCHL(IC)) Q:IC=""  D
"RTN","PXRMXT",168,0)
 .S LOCN=$P(PXRMLCHL(IC),U,2)
"RTN","PXRMXT",169,0)
 .S PXRMLOCN(LOCN)=IC,NHL=IC
"RTN","PXRMXT",170,0)
 ; Build Array PXRMCSN and NCS
"RTN","PXRMXT",171,0)
 N CSN
"RTN","PXRMXT",172,0)
 F  S IC=$O(PXRMCS(IC)) Q:IC=""  D
"RTN","PXRMXT",173,0)
 .S CSN=$P(PXRMCS(IC),U,2)
"RTN","PXRMXT",174,0)
 .S PXRMCSN(CSN)=IC,NCS=IC
"RTN","PXRMXT",175,0)
 ; Build Array PXRMCGRN and NCGRP
"RTN","PXRMXT",176,0)
 N GRPN
"RTN","PXRMXT",177,0)
 F  S IC=$O(PXRMCGRP(IC)) Q:IC=""  D
"RTN","PXRMXT",178,0)
 .S GRPN=$P(PXRMCGRP(IC),U,1)
"RTN","PXRMXT",179,0)
 .S PXRMCGRN(GRPN)=IC,NCGRP=IC
"RTN","PXRMXT",180,0)
 Q
"RTN","PXRMXT",181,0)
 ;
"RTN","PXRMXT",182,0)
 ;Add print name to OUTPUT array
"RTN","PXRMXT",183,0)
 ;-------------------------------
"RTN","PXRMXT",184,0)
DES(OUTPUT,GLOB,POSN) ;
"RTN","PXRMXT",185,0)
 N IC,IEN,DES
"RTN","PXRMXT",186,0)
 S IC=""
"RTN","PXRMXT",187,0)
 F  S IC=$O(OUTPUT(IC)) Q:IC=""  D
"RTN","PXRMXT",188,0)
 .S IEN=$P(OUTPUT(IC),U,1)
"RTN","PXRMXT",189,0)
 .X "S DES=$P($G("_GLOB_",IEN,0)),U,3)"
"RTN","PXRMXT",190,0)
 .S $P(OUTPUT(IC),U,POSN)=DES
"RTN","PXRMXT",191,0)
 Q
"RTN","PXRMXT",192,0)
 ;
"RTN","PXRMXT",193,0)
 ;Add stop code to OUTPUT array
"RTN","PXRMXT",194,0)
 ;-------------------------------
"RTN","PXRMXT",195,0)
CODE(OUTPUT,GLOB,POSN) ;
"RTN","PXRMXT",196,0)
 N IC,IEN,CODE
"RTN","PXRMXT",197,0)
 S IC=""
"RTN","PXRMXT",198,0)
 F  S IC=$O(OUTPUT(IC)) Q:IC=""  D
"RTN","PXRMXT",199,0)
 .S IEN=$P(OUTPUT(IC),U,2)
"RTN","PXRMXT",200,0)
 .X "S CODE=$P($G("_GLOB_",IEN,0)),U,2)"
"RTN","PXRMXT",201,0)
 .S $P(OUTPUT(IC),U,POSN)=CODE
"RTN","PXRMXT",202,0)
 Q
"RTN","PXRMXT",203,0)
 ;
"RTN","PXRMXT",204,0)
 ;Sort reminders into display order (allow for duplicates)
"RTN","PXRMXT",205,0)
 ;--------------------------------------------------------
"RTN","PXRMXT",206,0)
SORT(INPUT,ORDER) ;
"RTN","PXRMXT",207,0)
 N IC,DISP,OUTPUT,IC1
"RTN","PXRMXT",208,0)
 S DISP="",IC1=0
"RTN","PXRMXT",209,0)
 F  S DISP=$O(ORDER(DISP)) Q:DISP=""  D
"RTN","PXRMXT",210,0)
 .S IC=""
"RTN","PXRMXT",211,0)
 .F  S IC=$O(ORDER(DISP,IC)) Q:IC=""  D
"RTN","PXRMXT",212,0)
 ..S IC1=IC1+1,OUTPUT(IC1)=INPUT(IC)
"RTN","PXRMXT",213,0)
 ; Move results back
"RTN","PXRMXT",214,0)
 K INPUT M INPUT=OUTPUT
"RTN","PXRMXT",215,0)
 Q
"RTN","PXRMXTA")
0^155^B26592421
"RTN","PXRMXTA",1,0)
PXRMXTA ; SLC/PJH - Reminder Reports Template Edit ;04/25/2000 
"RTN","PXRMXTA",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMXTA",3,0)
 ; 
"RTN","PXRMXTA",4,0)
 ; Called from PXRMYD,PXRMXD
"RTN","PXRMXTA",5,0)
 ;
"RTN","PXRMXTA",6,0)
 ;Edit selected template or run report
"RTN","PXRMXTA",7,0)
 ;-------------------------------------
"RTN","PXRMXTA",8,0)
START(ROUTINE) ;
"RTN","PXRMXTA",9,0)
 N PXRMASK,PXRMEDIT,PXRMCOPY,MSG,DIC
"RTN","PXRMXTA",10,0)
 S PXRMCOPY="N",PXRMEDIT="N"
"RTN","PXRMXTA",11,0)
 ;Option to edit/copy template
"RTN","PXRMXTA",12,0)
USE D ASK(.PXRMASK) Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMXTA",13,0)
 ;Option to edit template
"RTN","PXRMXTA",14,0)
 I PXRMASK="Y" D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMXTA",15,0)
 .;Template edit and redisplay
"RTN","PXRMXTA",16,0)
 .D LOCK Q:$D(DUOUT)
"RTN","PXRMXTA",17,0)
 .D EDIT,UNLOCK
"RTN","PXRMXTA",18,0)
 .;Rollback changes on exit
"RTN","PXRMXTA",19,0)
 .I $D(DUOUT)!$D(DTOUT) D  Q
"RTN","PXRMXTA",20,0)
 ..D ROLL^PXRMXTF
"RTN","PXRMXTA",21,0)
 .;If all the templates have been deleted exit report
"RTN","PXRMXTA",22,0)
 .I '$$FIND^PXRMXT(PXRMTYP) S DTOUT=1 Q
"RTN","PXRMXTA",23,0)
 .;Check if template has been deleted 
"RTN","PXRMXTA",24,0)
 .I '$D(DA) S DUOUT=1 Q
"RTN","PXRMXTA",25,0)
 .;Sort out the filing
"RTN","PXRMXTA",26,0)
 .D ^PXRMXTF I $D(MSG) S DUOUT=1 Q
"RTN","PXRMXTA",27,0)
 ;
"RTN","PXRMXTA",28,0)
 ;Date range input (location only)
"RTN","PXRMXTA",29,0)
DAT I PXRMSEL="L" D  Q:$D(DTOUT)  G:$D(DUOUT) USE
"RTN","PXRMXTA",30,0)
 .I PXRMFD="P" D PDR^PXRMXDUT(.PXRMBDT,.PXRMEDT,"ENCOUNTER")
"RTN","PXRMXTA",31,0)
 .I PXRMFD="F" D FDR^PXRMXDUT(.PXRMBDT,.PXRMEDT,"APPOINTMENT")
"RTN","PXRMXTA",32,0)
 .I PXRMFD="A" D PDR^PXRMXDUT(.PXRMBDT,.PXRMEDT,"ADMISSION")
"RTN","PXRMXTA",33,0)
 .I PXRMFD="C" S PXRMBDT=DT,PXRMEDT=DT
"RTN","PXRMXTA",34,0)
 ;Due Effective Date
"RTN","PXRMXTA",35,0)
EFF D SDR^PXRMXDUT(.PXRMSDT) Q:$D(DTOUT)
"RTN","PXRMXTA",36,0)
 I $D(DUOUT) G:PXRMSEL="L" DAT G USE
"RTN","PXRMXTA",37,0)
 ;
"RTN","PXRMXTA",38,0)
 ;Reminders Due sort and appointment date options
"RTN","PXRMXTA",39,0)
 I PXRMRT="PXRMX" D FUT Q:$D(DTOUT)  G:$D(DUOUT) EFF
"RTN","PXRMXTA",40,0)
 ;Initiate report
"RTN","PXRMXTA",41,0)
 D @ROUTINE
"RTN","PXRMXTA",42,0)
EXIT Q
"RTN","PXRMXTA",43,0)
 ;
"RTN","PXRMXTA",44,0)
 ;File locking
"RTN","PXRMXTA",45,0)
 ;------------
"RTN","PXRMXTA",46,0)
UNLOCK L -^PXRMPT(810.1,$P(PXRMTMP,U)) Q
"RTN","PXRMXTA",47,0)
LOCK L +^PXRMPT(810.1,$P(PXRMTMP,U)):0
"RTN","PXRMXTA",48,0)
 E  W !!?5,"Another user is editing this entry" S DUOUT=1
"RTN","PXRMXTA",49,0)
 Q
"RTN","PXRMXTA",50,0)
 ;
"RTN","PXRMXTA",51,0)
 ;Option to Edit
"RTN","PXRMXTA",52,0)
 ;--------------
"RTN","PXRMXTA",53,0)
EDIT N DIDEL,DIE,DR K DTOUT,DUOUT
"RTN","PXRMXTA",54,0)
 ;Edit report name, title and PXRMSEL (patient sample)
"RTN","PXRMXTA",55,0)
 S DIE=810.1,DA=$P(PXRMTMP,U),DR=".01T;1.9T;1.2T",DIDEL=810.1
"RTN","PXRMXTA",56,0)
 D ^DIE I $D(Y) S DUOUT=1 Q
"RTN","PXRMXTA",57,0)
 ;Check if template has been deleted
"RTN","PXRMXTA",58,0)
 I '$D(DA) Q
"RTN","PXRMXTA",59,0)
 ;Get updated value of PXRMXSEL
"RTN","PXRMXTA",60,0)
 N PXRMSEL S PXRMSEL=X
"RTN","PXRMXTA",61,0)
 ;Needed for 1.6T validation - Prior/Future or Current/Admissions
"RTN","PXRMXTA",62,0)
 N PXRMINP
"RTN","PXRMXTA",63,0)
 ;Further fields depend on value in PXRMXSEL
"RTN","PXRMXTA",64,0)
 I PXRMSEL="I" S DR="6T"
"RTN","PXRMXTA",65,0)
 I PXRMSEL="L" D  Q:$D(DUOUT)
"RTN","PXRMXTA",66,0)
 .;Get location report type 
"RTN","PXRMXTA",67,0)
 .S DR="3T;1.5T" D ^DIE I $D(Y) S DUOUT=1 Q
"RTN","PXRMXTA",68,0)
 .N PXRMLCSC S PXRMLCSC=X,DR=""
"RTN","PXRMXTA",69,0)
 .;All location reports - prompt for prior/future/current/admissions
"RTN","PXRMXTA",70,0)
 .I PXRMLCSC="HAI" S PXRMINP=1,DR="1.6T" Q
"RTN","PXRMXTA",71,0)
 .I PXRMLCSC="HA" S PXRMINP=0,DR="1.6T"
"RTN","PXRMXTA",72,0)
 .I PXRMLCSC="CA" S PXRMINP=0,DR="1.6T"
"RTN","PXRMXTA",73,0)
 .;Selected Location/Stop Code/Clinic Group fields 
"RTN","PXRMXTA",74,0)
 .I PXRMLCSC="HS" D  Q:$D(DUOUT)
"RTN","PXRMXTA",75,0)
 ..S DR="10T"
"RTN","PXRMXTA",76,0)
 ..D ^DIE I $D(Y) S DUOUT=1 Q
"RTN","PXRMXTA",77,0)
 ..;Determine if locations input are all wards
"RTN","PXRMXTA",78,0)
 ..S PXRMINP=$$INP^PXRMXAP(PXRMLCSC,.PXRMLOCN)
"RTN","PXRMXTA",79,0)
 ..;Select Prior/Future or Current Inpatient/Admissions
"RTN","PXRMXTA",80,0)
 ..S DR="1.6T"
"RTN","PXRMXTA",81,0)
 .;Clinic Stop input and prior/future
"RTN","PXRMXTA",82,0)
 .I PXRMLCSC="CS" S PXRMINP=0,DR="11T;1.6T"
"RTN","PXRMXTA",83,0)
 .;Clinic Group input and prior/future
"RTN","PXRMXTA",84,0)
 .I PXRMLCSC="GS" S PXRMINP=0,DR="12T;1.6T"
"RTN","PXRMXTA",85,0)
 .;Service categories (except for inpatient reports)
"RTN","PXRMXTA",86,0)
 .I PXRMINP=0 S DR=DR_";9T"
"RTN","PXRMXTA",87,0)
 ;OE/RR teams
"RTN","PXRMXTA",88,0)
 I PXRMSEL="O" S DR="7T"
"RTN","PXRMXTA",89,0)
 ;PCMM Provider and Primary care/All
"RTN","PXRMXTA",90,0)
 I PXRMSEL="P" S DR="4T;1.3T"
"RTN","PXRMXTA",91,0)
 ;PCMM teams
"RTN","PXRMXTA",92,0)
 I PXRMSEL="T" S DR="3T;8T"
"RTN","PXRMXTA",93,0)
 ;Report type (detail or summary)
"RTN","PXRMXTA",94,0)
 S DR=DR_";1.4T"
"RTN","PXRMXTA",95,0)
 ;Reminders
"RTN","PXRMXTA",96,0)
 S DR=DR_";2T"
"RTN","PXRMXTA",97,0)
 ;
"RTN","PXRMXTA",98,0)
 ;Strip of any leading semi-colons
"RTN","PXRMXTA",99,0)
 I $E(DR)=";" S DR=$P(DR,";",2,99)
"RTN","PXRMXTA",100,0)
 ;
"RTN","PXRMXTA",101,0)
 D ^DIE I $D(Y) S DUOUT=1 Q
"RTN","PXRMXTA",102,0)
 ;
"RTN","PXRMXTA",103,0)
 ;If all reminders have been deleted from the template disallow save
"RTN","PXRMXTA",104,0)
 I +$P($G(^PXRMPT(810.1,DA(1),1,0)),U,4)=0 D  S DUOUT=1 Q
"RTN","PXRMXTA",105,0)
 .W !,"This template is incomplete - no reminders defined"
"RTN","PXRMXTA",106,0)
 Q
"RTN","PXRMXTA",107,0)
 ;
"RTN","PXRMXTA",108,0)
 ;Option to use report template
"RTN","PXRMXTA",109,0)
 ;-----------------------------
"RTN","PXRMXTA",110,0)
ASK(YESNO) ;
"RTN","PXRMXTA",111,0)
 N X,Y,TEXT
"RTN","PXRMXTA",112,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXTA",113,0)
 S DIR(0)="YA0"
"RTN","PXRMXTA",114,0)
 S DIR("A")="WANT TO EDIT '"_$P(PXRMTMP,U,2)_"' TEMPLATE: "
"RTN","PXRMXTA",115,0)
 S DIR("B")="N"
"RTN","PXRMXTA",116,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMXTA",117,0)
 S DIR("??")=U_"D HELP^PXRMXTA(1)"
"RTN","PXRMXTA",118,0)
 W !
"RTN","PXRMXTA",119,0)
 D ^DIR K DIR
"RTN","PXRMXTA",120,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXTA",121,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXTA",122,0)
 S YESNO=$E(Y(0))
"RTN","PXRMXTA",123,0)
 Q
"RTN","PXRMXTA",124,0)
 ;
"RTN","PXRMXTA",125,0)
 ;General help text routine. Write out the text in the HTEXT array
"RTN","PXRMXTA",126,0)
 ;----------------------------------------------------------------
"RTN","PXRMXTA",127,0)
HELP(CALL) ;
"RTN","PXRMXTA",128,0)
 N HTEXT
"RTN","PXRMXTA",129,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMXTA",130,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMXTA",131,0)
 ;
"RTN","PXRMXTA",132,0)
 I CALL=1 D
"RTN","PXRMXTA",133,0)
 .S HTEXT(1)="Enter 'N' to run the report using the parameters from "
"RTN","PXRMXTA",134,0)
 .S HTEXT(2)="the existing template. Enter 'Y' to copy/edit the "
"RTN","PXRMXTA",135,0)
 .S HTEXT(3)="template."
"RTN","PXRMXTA",136,0)
 ;
"RTN","PXRMXTA",137,0)
 K ^UTILITY($J,"W")
"RTN","PXRMXTA",138,0)
 S IC=""
"RTN","PXRMXTA",139,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMXTA",140,0)
 . S X=HTEXT(IC)
"RTN","PXRMXTA",141,0)
 . D ^DIWP
"RTN","PXRMXTA",142,0)
 W !
"RTN","PXRMXTA",143,0)
 S IC=0
"RTN","PXRMXTA",144,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMXTA",145,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMXTA",146,0)
 K ^UTILITY($J,"W")
"RTN","PXRMXTA",147,0)
 W !
"RTN","PXRMXTA",148,0)
 Q
"RTN","PXRMXTA",149,0)
 ;
"RTN","PXRMXTA",150,0)
 ;Reminders Due specific prompts
"RTN","PXRMXTA",151,0)
 ;------------------------------
"RTN","PXRMXTA",152,0)
FUT ;For detailed report give option to display future appointments
"RTN","PXRMXTA",153,0)
 S PXRMFUT="N"
"RTN","PXRMXTA",154,0)
 I PXRMREP="D" D  Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMXTA",155,0)
 .D FUTURE^PXRMXSD(.PXRMFUT)
"RTN","PXRMXTA",156,0)
 ;
"RTN","PXRMXTA",157,0)
SRT ;For detailed report give option to sort by appointment date
"RTN","PXRMXTA",158,0)
 S PXRMSRT="N"
"RTN","PXRMXTA",159,0)
 I PXRMREP="D",(PXRMSEL'="I") D  G:$D(DUOUT) FUT
"RTN","PXRMXTA",160,0)
 .D SRT^PXRMXSD(.PXRMSRT)
"RTN","PXRMXTA",161,0)
 Q
"RTN","PXRMXTA",162,0)
 ;
"RTN","PXRMXTA",163,0)
 ;Input validation for file #810.1
"RTN","PXRMXTA",164,0)
 ;
"RTN","PXRMXTA",165,0)
 ;If detail report allow only one reminder
"RTN","PXRMXTA",166,0)
PXRMREM I $P(^PXRMPT(810.1,DA(1),0),U,6)'="D" Q
"RTN","PXRMXTA",167,0)
 ;If template has no reminders ignore
"RTN","PXRMXTA",168,0)
 I +$P($G(^PXRMPT(810.1,DA(1),1,0)),U,4)=0 Q
"RTN","PXRMXTA",169,0)
 ;If this a new entry
"RTN","PXRMXTA",170,0)
 I $G(Y)=-1 K X W !,"Only one reminder allowed for detailed report."
"RTN","PXRMXTA",171,0)
 Q
"RTN","PXRMXTA",172,0)
 ;
"RTN","PXRMXTA",173,0)
 ;If changing from Summary to Detail report
"RTN","PXRMXTA",174,0)
PXRMREP Q:$G(X)'="D"
"RTN","PXRMXTA",175,0)
 Q:$P($G(^PXRMPT(810.1,DA,0)),U,6)'="S"
"RTN","PXRMXTA",176,0)
 Q:+$G(NREM)<2
"RTN","PXRMXTA",177,0)
 W !,"Only the first reminder on this template will be evaluated"
"RTN","PXRMXTA",178,0)
 Q
"RTN","PXRMXTD")
0^156^B9270235
"RTN","PXRMXTD",1,0)
PXRMXTD ; SLC/PJH - Reminder Reports Template Display ;05/06/1999
"RTN","PXRMXTD",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMXTD",3,0)
 ; 
"RTN","PXRMXTD",4,0)
 ; Called from PXRMXT/PXRMXTF
"RTN","PXRMXTD",5,0)
 ;
"RTN","PXRMXTD",6,0)
 ;
"RTN","PXRMXTD",7,0)
 ;Display Template information
"RTN","PXRMXTD",8,0)
START ;----------------------------
"RTN","PXRMXTD",9,0)
 N PAGE,BMARG,DONE,SD,ED,DES,RDES,CDES,PSTART,PXRMOPT,IC,CNT
"RTN","PXRMXTD",10,0)
 S PAGE=1,BMARG=0,DONE=0,SD="",ED="",PSTART=10,CNT=0
"RTN","PXRMXTD",11,0)
 ;
"RTN","PXRMXTD",12,0)
 D LITS^PXRMXGPR
"RTN","PXRMXTD",13,0)
 ;
"RTN","PXRMXTD",14,0)
 I PXRMREP="D" S PXRMOPT="Detailed Report"
"RTN","PXRMXTD",15,0)
 I PXRMREP="S" S PXRMOPT="Summary Report"
"RTN","PXRMXTD",16,0)
 W !!?(PSTART),"Report Title:",?32,$P(PXRMTMP,U,3)
"RTN","PXRMXTD",17,0)
 W !?PSTART,"Report Type:",?32,PXRMOPT
"RTN","PXRMXTD",18,0)
 W !?PSTART,"Patient Sample:",?32,PXRMFLD
"RTN","PXRMXTD",19,0)
 I "LT"[PXRMSEL D
"RTN","PXRMXTD",20,0)
 .W !,?PSTART,"Facility:" D FAC
"RTN","PXRMXTD",21,0)
 I PXRMSEL'="L" W !,?PSTART,PXRMFLD,":" D ARRS
"RTN","PXRMXTD",22,0)
 I PXRMSEL="L" D
"RTN","PXRMXTD",23,0)
 .W !?PSTART,PXRMFLD,":",?32,DES
"RTN","PXRMXTD",24,0)
 .I $E(PXRMLCSC,2)'="A" W ! D ARRS
"RTN","PXRMXTD",25,0)
 I DONE Q
"RTN","PXRMXTD",26,0)
 S IC="" F  S IC=$O(PXRMREM(IC)) Q:IC=""  D  Q:DONE
"RTN","PXRMXTD",27,0)
 .W !,?PSTART W:IC=1 "Reminder:"
"RTN","PXRMXTD",28,0)
 .W ?32,$P(PXRMREM(IC),U,3),?35,$P(PXRMREM(IC),U,2) D CHECK(1)
"RTN","PXRMXTD",29,0)
 I DONE Q
"RTN","PXRMXTD",30,0)
 I PXRMSEL="P" W !,?PSTART,"All/Primary:",?32,CDES
"RTN","PXRMXTD",31,0)
 W !?(PSTART),"Template Name:",?32,$P(PXRMTMP,U,2)
"RTN","PXRMXTD",32,0)
 W !?PSTART,"Date last run:",?32,$S(RUN]"":RUN,1:"n/a")
"RTN","PXRMXTD",33,0)
 I $D(PXRMSCAT),PXRMFD="P" D OSCAT(PXRMSCAT,PSTART)
"RTN","PXRMXTD",34,0)
EXIT Q
"RTN","PXRMXTD",35,0)
 ;
"RTN","PXRMXTD",36,0)
 ;Display selected teams/providers
"RTN","PXRMXTD",37,0)
 ;--------------------------------
"RTN","PXRMXTD",38,0)
ARRS N IC
"RTN","PXRMXTD",39,0)
 S IC=""
"RTN","PXRMXTD",40,0)
 I PXRMSEL="P" F  S IC=$O(PXRMPRV(IC)) Q:IC=""  D  Q:DONE
"RTN","PXRMXTD",41,0)
 .W:IC>1 ! W ?32,$P(PXRMPRV(IC),U,2) D CHECK(1)
"RTN","PXRMXTD",42,0)
 I PXRMSEL="T" F  S IC=$O(PXRMPCM(IC)) Q:IC=""  D  Q:DONE
"RTN","PXRMXTD",43,0)
 .W:IC>1 ! W ?32,$P(PXRMPCM(IC),U,2) D CHECK(1)
"RTN","PXRMXTD",44,0)
 I PXRMSEL="O" F  S IC=$O(PXRMOTM(IC)) Q:IC=""  D  Q:DONE
"RTN","PXRMXTD",45,0)
 .W:IC>1 ! W ?32,$P(PXRMOTM(IC),U,2) D CHECK(1)
"RTN","PXRMXTD",46,0)
 I PXRMSEL="I" F  S IC=$O(PXRMPAT(IC)) Q:IC=""  D  Q:DONE
"RTN","PXRMXTD",47,0)
 .W:IC>1 ! W ?32,$P(PXRMPAT(IC),U,2) D CHECK(1)
"RTN","PXRMXTD",48,0)
 I PXRMSEL="L" D
"RTN","PXRMXTD",49,0)
 .I $E(PXRMLCSC)="H" F  S IC=$O(PXRMLCHL(IC)) Q:IC=""  D
"RTN","PXRMXTD",50,0)
 ..W:IC>1 ! W ?32,$P(PXRMLCHL(IC),U) D CHECK(1)
"RTN","PXRMXTD",51,0)
 .I $E(PXRMLCSC)="C" F  S IC=$O(PXRMCS(IC)) Q:IC=""  D
"RTN","PXRMXTD",52,0)
 ..W:IC>1 ! W ?32,$P(PXRMCS(IC),U)," ",$P(PXRMCS(IC),U,3)
"RTN","PXRMXTD",53,0)
 ..D CHECK(1)
"RTN","PXRMXTD",54,0)
 .I $E(PXRMLCSC)="G" F  S IC=$O(PXRMCGRP(IC)) Q:IC=""  D
"RTN","PXRMXTD",55,0)
 ..W:IC>1 ! W ?32,$P(PXRMCGRP(IC),U)," ",$P(PXRMCGRP(IC),U,2)
"RTN","PXRMXTD",56,0)
 ..D CHECK(1)
"RTN","PXRMXTD",57,0)
 Q
"RTN","PXRMXTD",58,0)
 ;
"RTN","PXRMXTD",59,0)
 ;Display selected Facilities
"RTN","PXRMXTD",60,0)
 ;---------------------------
"RTN","PXRMXTD",61,0)
FAC N IC
"RTN","PXRMXTD",62,0)
 S IC=""
"RTN","PXRMXTD",63,0)
 F  S IC=$O(PXRMFAC(IC)) Q:IC=""  D  Q:DONE
"RTN","PXRMXTD",64,0)
 .W:IC>1 ! W ?32,$P(PXRMFAC(IC),U,2) D CHECK(1)
"RTN","PXRMXTD",65,0)
 Q
"RTN","PXRMXTD",66,0)
 ;
"RTN","PXRMXTD",67,0)
 ;
"RTN","PXRMXTD",68,0)
 ;Output the service categeories
"RTN","PXRMXTD",69,0)
 ;------------------------------
"RTN","PXRMXTD",70,0)
OSCAT(SCL,PSTART) ;
"RTN","PXRMXTD",71,0)
 N IC,CSTART,EM,SC,SCTEXT
"RTN","PXRMXTD",72,0)
 S CSTART=PSTART+3
"RTN","PXRMXTD",73,0)
 W !,?PSTART,"Service categories:",?32,SCL
"RTN","PXRMXTD",74,0)
 F IC=1:1:$L(SCL) D
"RTN","PXRMXTD",75,0)
 .S SC=$E(SCL,IC,IC)
"RTN","PXRMXTD",76,0)
 .S SCTEXT=$$EXTERNAL^DILFD(9000010,.07,"",SC,.EM)
"RTN","PXRMXTD",77,0)
 .W !,?CSTART,SC," - ",SCTEXT
"RTN","PXRMXTD",78,0)
 .D CHECK(1)
"RTN","PXRMXTD",79,0)
 Q
"RTN","PXRMXTD",80,0)
 ;
"RTN","PXRMXTD",81,0)
 ;Check for page throw
"RTN","PXRMXTD",82,0)
 ;--------------------
"RTN","PXRMXTD",83,0)
CHECK(LEAVE) ;
"RTN","PXRMXTD",84,0)
 S CNT=CNT+1
"RTN","PXRMXTD",85,0)
 I CNT>(IOSL-BMARG-LEAVE) D PAGE S CNT=0
"RTN","PXRMXTD",86,0)
 Q
"RTN","PXRMXTD",87,0)
 ;
"RTN","PXRMXTD",88,0)
 ;form feed to new page
"RTN","PXRMXTD",89,0)
 ;---------------------
"RTN","PXRMXTD",90,0)
PAGE I ($E(IOST)="C")&(IO=IO(0))&(PAGE>0) D
"RTN","PXRMXTD",91,0)
 .S DIR(0)="E"
"RTN","PXRMXTD",92,0)
 .W !
"RTN","PXRMXTD",93,0)
 .D ^DIR K DIR
"RTN","PXRMXTD",94,0)
 I $D(DUOUT)!($D(DTOUT))!($D(DIROUT)) S DONE=1 Q
"RTN","PXRMXTD",95,0)
 W !
"RTN","PXRMXTD",96,0)
 Q
"RTN","PXRMXTF")
0^157^B18964952
"RTN","PXRMXTF",1,0)
PXRMXTF ; SLC/PJH - Reminder Reports Template Filing ;09/20/1999
"RTN","PXRMXTF",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMXTF",3,0)
 ; 
"RTN","PXRMXTF",4,0)
 ; Called from PXRMXTA
"RTN","PXRMXTF",5,0)
 ;
"RTN","PXRMXTF",6,0)
 ;Select template name and file
"RTN","PXRMXTF",7,0)
 ;-----------------------------
"RTN","PXRMXTF",8,0)
START N NEWIEN,NEWTEMP,OLDTEMP
"RTN","PXRMXTF",9,0)
 ;Save original name
"RTN","PXRMXTF",10,0)
 S OLDTEMP=$P(PXRMTMP,U,2)
"RTN","PXRMXTF",11,0)
 ;Reset PXRMTMP in case the template name field has been edited
"RTN","PXRMXTF",12,0)
 S $P(PXRMTMP,U,2)=$P($G(^PXRMPT(810.1,$P(PXRMTMP,U,1),0)),U)
"RTN","PXRMXTF",13,0)
 ;Redisplay changes made
"RTN","PXRMXTF",14,0)
 D REDISP
"RTN","PXRMXTF",15,0)
 ;Prompt template name
"RTN","PXRMXTF",16,0)
 D NAME
"RTN","PXRMXTF",17,0)
 ;Rollback ^DIE changes if edit is abandoned
"RTN","PXRMXTF",18,0)
 I $D(DTOUT)!$D(DUOUT) D ROLL Q
"RTN","PXRMXTF",19,0)
 ;
"RTN","PXRMXTF",20,0)
 I NEWTEMP=$P(PXRMTMP,U,2),NEWTEMP=OLDTEMP D MESS(1,NEWTEMP)
"RTN","PXRMXTF",21,0)
 I NEWTEMP=$P(PXRMTMP,U,2),NEWTEMP'=OLDTEMP D MESS(3,OLDTEMP,NEWTEMP)
"RTN","PXRMXTF",22,0)
 ;
"RTN","PXRMXTF",23,0)
 ;If a new template ID is selected then create a new template
"RTN","PXRMXTF",24,0)
 I NEWTEMP'=$P(PXRMTMP,U,2) D  I $D(MSG) S DTOUT=1 Q
"RTN","PXRMXTF",25,0)
 .;Create template header
"RTN","PXRMXTF",26,0)
 .D HEADER
"RTN","PXRMXTF",27,0)
 .;Save edited template detail to new template name
"RTN","PXRMXTF",28,0)
 .D REFILE Q:$D(MSG)
"RTN","PXRMXTF",29,0)
 .;Save Message
"RTN","PXRMXTF",30,0)
 .D MESS(2,NEWTEMP)
"RTN","PXRMXTF",31,0)
 .;File original arrays to old template (rollback ^DIE changes)
"RTN","PXRMXTF",32,0)
 .D FILE^PXRMXTU(PXRMTMP,1,1)
"RTN","PXRMXTF",33,0)
 .;Set selected template ID
"RTN","PXRMXTF",34,0)
 .S PXRMTMP=NEWIEN
"RTN","PXRMXTF",35,0)
 ;
"RTN","PXRMXTF",36,0)
 ;Reload arrays
"RTN","PXRMXTF",37,0)
 D LOAD^PXRMXT I $D(MSG) S DTOUT=1 Q
"RTN","PXRMXTF",38,0)
EXIT Q
"RTN","PXRMXTF",39,0)
 ;
"RTN","PXRMXTF",40,0)
 ;Rename edited template
"RTN","PXRMXTF",41,0)
 ;----------------------
"RTN","PXRMXTF",42,0)
NAME N X,Y,TEXT,DIR
"RTN","PXRMXTF",43,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXTF",44,0)
 S DIR(0)="FAU"_U_"3:30"_U_"K:'$$OK^PXRMXTF(X) X"
"RTN","PXRMXTF",45,0)
 S DIR("A")="STORE REPORT LOGIC IN TEMPLATE NAME: "
"RTN","PXRMXTF",46,0)
 S DIR("B")=$P(PXRMTMP,U,2)
"RTN","PXRMXTF",47,0)
 S DIR("?")="Enter template name. For detailed help type ??"
"RTN","PXRMXTF",48,0)
 S DIR("??")=U_"D HELP^PXRMXTF(1)"
"RTN","PXRMXTF",49,0)
 W !
"RTN","PXRMXTF",50,0)
 D ^DIR K DIR
"RTN","PXRMXTF",51,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXTF",52,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXTF",53,0)
 S NEWTEMP=Y
"RTN","PXRMXTF",54,0)
 Q
"RTN","PXRMXTF",55,0)
 ;
"RTN","PXRMXTF",56,0)
 ;Check if the template name is in use
"RTN","PXRMXTF",57,0)
 ;------------------------------------
"RTN","PXRMXTF",58,0)
OK(NAME) ;
"RTN","PXRMXTF",59,0)
 ;Original template name may be used
"RTN","PXRMXTF",60,0)
 I X=DIR("B") Q 1
"RTN","PXRMXTF",61,0)
 I $E(DIR("B"),1,$L(X))=X Q 0
"RTN","PXRMXTF",62,0)
 ;Else check if template name defined
"RTN","PXRMXTF",63,0)
 I '$D(^PXRMPT(810.1,"B",NAME)) Q 1
"RTN","PXRMXTF",64,0)
 Q 0
"RTN","PXRMXTF",65,0)
 ;
"RTN","PXRMXTF",66,0)
 ;Create Template header and get IEN
"RTN","PXRMXTF",67,0)
 ;----------------------------------
"RTN","PXRMXTF",68,0)
HEADER N DATA,IEN,NUM
"RTN","PXRMXTF",69,0)
 ;Otherwise create a new entry
"RTN","PXRMXTF",70,0)
 S DATA=$G(^PXRMPT(810.1,0)),IEN=$P(DATA,U,3),NUM=$P(DATA,U,4)
"RTN","PXRMXTF",71,0)
 F  S IEN=IEN+1 Q:'$D(^PXRMPT(IEN,0))
"RTN","PXRMXTF",72,0)
 S ^PXRMPT(810.1,IEN,0)=NEWTEMP
"RTN","PXRMXTF",73,0)
 S ^PXRMPT(810.1,"B",NEWTEMP,IEN)=""
"RTN","PXRMXTF",74,0)
 S $P(^PXRMPT(810.1,0),U,3)=IEN,$P(^PXRMPT(810.1,0),U,4)=NUM+1
"RTN","PXRMXTF",75,0)
 S NEWIEN=IEN_U_NEWTEMP
"RTN","PXRMXTF",76,0)
 Q
"RTN","PXRMXTF",77,0)
 ;
"RTN","PXRMXTF",78,0)
 ;Redisplay edited template details
"RTN","PXRMXTF",79,0)
 ;---------------------------------------------
"RTN","PXRMXTF",80,0)
REDISP N PXRMLCSC,PXRMPRIM,PXRMREP,PXRMSEL,PXRMTYP,PXRMFD,RUN,PXRMCS
"RTN","PXRMXTF",81,0)
 N PXRMREM,PXRMFAC,PXRMPRV,PXRMPAT,PXRMOTM,PXRMSCAT,PXRMLCHL,PXRMCS
"RTN","PXRMXTF",82,0)
 N TITLE
"RTN","PXRMXTF",83,0)
 ;
"RTN","PXRMXTF",84,0)
 ;Load temporary arrays from edited template PXRMTMP
"RTN","PXRMXTF",85,0)
 D LOAD^PXRMXT I $D(MSG) Q
"RTN","PXRMXTF",86,0)
 ;Clear last run date
"RTN","PXRMXTF",87,0)
 S RUN=""
"RTN","PXRMXTF",88,0)
 ;Display
"RTN","PXRMXTF",89,0)
 D ^PXRMXTD
"RTN","PXRMXTF",90,0)
 ;
"RTN","PXRMXTF",91,0)
 Q
"RTN","PXRMXTF",92,0)
 ;
"RTN","PXRMXTF",93,0)
 ;Copy edited template details to new template
"RTN","PXRMXTF",94,0)
 ;---------------------------------------------
"RTN","PXRMXTF",95,0)
REFILE N PXRMLCSC,PXRMPRIM,PXRMREP,PXRMSEL,PXRMTYP,PXRMFD,RUN,PXRMCS
"RTN","PXRMXTF",96,0)
 N PXRMREM,PXRMFAC,PXRMPRV,PXRMPAT,PXRMOTM,PXRMSCAT,PXRMLCHL,PXRMCS
"RTN","PXRMXTF",97,0)
 N TITLE
"RTN","PXRMXTF",98,0)
 ;
"RTN","PXRMXTF",99,0)
 ;Load temporary arrays from edited template PXRMTMP
"RTN","PXRMXTF",100,0)
 D LOAD^PXRMXT I $D(MSG) Q
"RTN","PXRMXTF",101,0)
 ;Clear last run date
"RTN","PXRMXTF",102,0)
 S RUN=""
"RTN","PXRMXTF",103,0)
 ;Save arrays to new ID
"RTN","PXRMXTF",104,0)
 D FILE^PXRMXTU(NEWIEN,1,0) Q:$D(MSG)
"RTN","PXRMXTF",105,0)
 Q
"RTN","PXRMXTF",106,0)
 ;
"RTN","PXRMXTF",107,0)
 ;Rollback changes (also called from PXRMXTA)
"RTN","PXRMXTF",108,0)
 ;----------------
"RTN","PXRMXTF",109,0)
ROLL D FILE^PXRMXTU(PXRMTMP,1,1)
"RTN","PXRMXTF",110,0)
 I $D(MSG) S DTOUT=1 Q
"RTN","PXRMXTF",111,0)
 ;Changes not saved message
"RTN","PXRMXTF",112,0)
 D MESS(0,$P(PXRMTMP,U,2))
"RTN","PXRMXTF",113,0)
 Q
"RTN","PXRMXTF",114,0)
 ;
"RTN","PXRMXTF",115,0)
 ;Filing messages
"RTN","PXRMXTF",116,0)
 ;---------------
"RTN","PXRMXTF",117,0)
MESS(MODE,INP,INP1) ;
"RTN","PXRMXTF",118,0)
 I MODE=0 W !,"Changes to template '"_INP_"' have not been saved" Q
"RTN","PXRMXTF",119,0)
 I MODE=1 W !,"Changes to template '"_INP_"' have been saved"
"RTN","PXRMXTF",120,0)
 I MODE=2 W !,"A new template '"_INP_"' has been created"
"RTN","PXRMXTF",121,0)
 I MODE=3 W !,"Template '"_INP_"' renamed as '"_INP1_"'"
"RTN","PXRMXTF",122,0)
 I MODE=4 W !,"Template '"_INP_"' not saved"
"RTN","PXRMXTF",123,0)
 Q
"RTN","PXRMXTF",124,0)
 ;
"RTN","PXRMXTF",125,0)
 ;General help text routine. Write out the text in the HTEXT array
"RTN","PXRMXTF",126,0)
 ;----------------------------------------------------------------
"RTN","PXRMXTF",127,0)
HELP(CALL) ;
"RTN","PXRMXTF",128,0)
 N HTEXT
"RTN","PXRMXTF",129,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMXTF",130,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMXTF",131,0)
 ;
"RTN","PXRMXTF",132,0)
 I CALL=1 D
"RTN","PXRMXTF",133,0)
 .S HTEXT(1)="To save or rename the existing template use the default"
"RTN","PXRMXTF",134,0)
 .S HTEXT(2)="name. To create a new template and leave the original "
"RTN","PXRMXTF",135,0)
 .S HTEXT(3)="unchanged enter a different template name "
"RTN","PXRMXTF",136,0)
 .S HTEXT(4)="that is not in use."
"RTN","PXRMXTF",137,0)
 ;
"RTN","PXRMXTF",138,0)
 K ^UTILITY($J,"W")
"RTN","PXRMXTF",139,0)
 S IC=""
"RTN","PXRMXTF",140,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMXTF",141,0)
 . S X=HTEXT(IC)
"RTN","PXRMXTF",142,0)
 . D ^DIWP
"RTN","PXRMXTF",143,0)
 W !
"RTN","PXRMXTF",144,0)
 S IC=0
"RTN","PXRMXTF",145,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMXTF",146,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMXTF",147,0)
 K ^UTILITY($J,"W")
"RTN","PXRMXTF",148,0)
 W !
"RTN","PXRMXTF",149,0)
 Q
"RTN","PXRMXTU")
0^158^B26455099
"RTN","PXRMXTU",1,0)
PXRMXTU ; SLC/PJH - Reminder Reports Template Update ;05/08/2000
"RTN","PXRMXTU",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMXTU",3,0)
 ; 
"RTN","PXRMXTU",4,0)
 ; Called from PXRMYD,PXRMXD (also at UPD from PXRMXPR/PXRMYPR)
"RTN","PXRMXTU",5,0)
 ;
"RTN","PXRMXTU",6,0)
 ;Option to create a new template
"RTN","PXRMXTU",7,0)
 ;-------------------------------
"RTN","PXRMXTU",8,0)
START N PXRMASK,MSG D ASK(.PXRMASK)
"RTN","PXRMXTU",9,0)
 I $G(PXRMASK)="Y" D SAVE
"RTN","PXRMXTU",10,0)
EXIT Q
"RTN","PXRMXTU",11,0)
 ;
"RTN","PXRMXTU",12,0)
 ;Ask name for new template
"RTN","PXRMXTU",13,0)
 ;-------------------------
"RTN","PXRMXTU",14,0)
SAVE N X,Y,DIC,DLAYGO
"RTN","PXRMXTU",15,0)
SAV1 S DIC=810.1,DLAYGO=DIC,DIC(0)="QAELX"
"RTN","PXRMXTU",16,0)
 S DIC("A")="STORE REPORT LOGIC IN TEMPLATE NAME: "
"RTN","PXRMXTU",17,0)
 W !
"RTN","PXRMXTU",18,0)
 D ^DIC
"RTN","PXRMXTU",19,0)
 I X="" W !,"A template name must be entered" G SAV1
"RTN","PXRMXTU",20,0)
 I X=(U_U) S DTOUT=1
"RTN","PXRMXTU",21,0)
 I Y=-1 S DUOUT=1 W !,"Details not saved" Q
"RTN","PXRMXTU",22,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMXTU",23,0)
 ;Check
"RTN","PXRMXTU",24,0)
 I ($P(Y,U,3)'=1) W !,"This template name already exists" G SAV1
"RTN","PXRMXTU",25,0)
 ;Get template name and title
"RTN","PXRMXTU",26,0)
 S PXRMTMP=Y,TITLE=$P($G(^PXRMPT(810.1,$P(Y,U),0)),U,2)
"RTN","PXRMXTU",27,0)
 S $P(PXRMTMP,U,3)=TITLE
"RTN","PXRMXTU",28,0)
 ;File details
"RTN","PXRMXTU",29,0)
 D FILE(Y,1,0)
"RTN","PXRMXTU",30,0)
 ;File not saved message
"RTN","PXRMXTU",31,0)
 I $D(MSG) D  Q
"RTN","PXRMXTU",32,0)
 .N DA,DIK
"RTN","PXRMXTU",33,0)
 .S DA=$P(Y,U),DIK="^PXRMPT(810.1," D ^DIK
"RTN","PXRMXTU",34,0)
 .D MESS^PXRMXTF(4,$P(PXRMTMP,U,2))
"RTN","PXRMXTU",35,0)
 ;File saved message
"RTN","PXRMXTU",36,0)
 D MESS^PXRMXTF(1,$P(PXRMTMP,U,2))
"RTN","PXRMXTU",37,0)
 Q
"RTN","PXRMXTU",38,0)
 ;
"RTN","PXRMXTU",39,0)
 ;File template detail
"RTN","PXRMXTU",40,0)
 ;--------------------
"RTN","PXRMXTU",41,0)
FILE(INP,UPD,CLR) ;
"RTN","PXRMXTU",42,0)
 N CNT,FDA,FDAIEN,FNO,IC,INT,MODE,NAME,X
"RTN","PXRMXTU",43,0)
 S FDAIEN(1)=$P(INP,U),NAME=$P(INP,U,2)
"RTN","PXRMXTU",44,0)
 ;Save exit flags - needed for rollback
"RTN","PXRMXTU",45,0)
 N DUOUT,DTOUT
"RTN","PXRMXTU",46,0)
 ;
"RTN","PXRMXTU",47,0)
 ;Update or Add
"RTN","PXRMXTU",48,0)
 S MODE=$S(UPD:(FDAIEN(1)_","),1:"+1,")
"RTN","PXRMXTU",49,0)
 ;Delete entries from existing template
"RTN","PXRMXTU",50,0)
 I CLR D
"RTN","PXRMXTU",51,0)
 .N DA S DA=0
"RTN","PXRMXTU",52,0)
 .F  S DA=$O(^PXRMPT(810.1,FDAIEN(1),DA)) Q:'DA  D
"RTN","PXRMXTU",53,0)
 ..K ^PXRMPT(810.1,FDAIEN(1),DA)
"RTN","PXRMXTU",54,0)
 ;
"RTN","PXRMXTU",55,0)
 I PXRMSEL="L" S X=PXRMLCSC,PXRMLCSC=$P(PXRMLCSC,U)
"RTN","PXRMXTU",56,0)
 ;
"RTN","PXRMXTU",57,0)
 ;Save single fields into FDA
"RTN","PXRMXTU",58,0)
 F IC="NAME","PXRMLCSC","PXRMPRIM","PXRMREP","PXRMSEL","PXRMTYP" D
"RTN","PXRMXTU",59,0)
 .S FDA(810.1,MODE,$$FLDNUM^DILFD(810.1,IC))=$G(@IC)
"RTN","PXRMXTU",60,0)
 F IC="PXRMFD","RUN","TITLE" D
"RTN","PXRMXTU",61,0)
 .S FDA(810.1,MODE,$$FLDNUM^DILFD(810.1,IC))=$G(@IC)
"RTN","PXRMXTU",62,0)
 ;
"RTN","PXRMXTU",63,0)
 I PXRMSEL="L" S PXRMLCSC=X
"RTN","PXRMXTU",64,0)
 ;
"RTN","PXRMXTU",65,0)
 ;Save Arrays into FDA
"RTN","PXRMXTU",66,0)
 ;
"RTN","PXRMXTU",67,0)
 ;Reminder Items
"RTN","PXRMXTU",68,0)
 S CNT=1
"RTN","PXRMXTU",69,0)
 D SUB1(.PXRMREM,"810.12",1)
"RTN","PXRMXTU",70,0)
 ;Save Facility codes
"RTN","PXRMXTU",71,0)
 D SUB1(.PXRMFAC,"810.13",1)
"RTN","PXRMXTU",72,0)
 ;Save Provider codes
"RTN","PXRMXTU",73,0)
 D SUB1(.PXRMPRV,"810.14",1)
"RTN","PXRMXTU",74,0)
 ;Save Patient codes
"RTN","PXRMXTU",75,0)
 D SUB1(.PXRMPAT,"810.16",1)
"RTN","PXRMXTU",76,0)
 ;Save OE/RR Team codes
"RTN","PXRMXTU",77,0)
 D SUB1(.PXRMOTM,"810.17",1)
"RTN","PXRMXTU",78,0)
 ;Save PCMM Team codes
"RTN","PXRMXTU",79,0)
 D SUB1(.PXRMPCM,"810.18",1)
"RTN","PXRMXTU",80,0)
 ;Save Service Category codes
"RTN","PXRMXTU",81,0)
 I $G(PXRMSCAT)'="" D SUB2("PXRMSCAT","810.19")
"RTN","PXRMXTU",82,0)
 ;Save Hospital Location codes
"RTN","PXRMXTU",83,0)
 D SUB1(.PXRMLCHL,"810.11",2)
"RTN","PXRMXTU",84,0)
 ;Save Clinic Stop codes
"RTN","PXRMXTU",85,0)
 D SUB1(.PXRMCS,"810.111",2)
"RTN","PXRMXTU",86,0)
 ;Save Clinic groups
"RTN","PXRMXTU",87,0)
 D SUB1(.PXRMCGRP,"810.112",1)
"RTN","PXRMXTU",88,0)
 ;
"RTN","PXRMXTU",89,0)
 ;Update template file
"RTN","PXRMXTU",90,0)
 D UPDATE^DIE("S","FDA","FDAIEN","MSG")
"RTN","PXRMXTU",91,0)
 ;
"RTN","PXRMXTU",92,0)
 I $D(MSG) D
"RTN","PXRMXTU",93,0)
 .W !!,"Update failed, UPDATE^DIE returned the following error message:"
"RTN","PXRMXTU",94,0)
 .S IC="MSG"
"RTN","PXRMXTU",95,0)
 .F  S IC=$Q(@IC) Q:IC=""  W !,IC,"=",@IC
"RTN","PXRMXTU",96,0)
 .W !,"Examine the above error message for the reason.",!
"RTN","PXRMXTU",97,0)
 .H 2
"RTN","PXRMXTU",98,0)
 Q
"RTN","PXRMXTU",99,0)
 ;
"RTN","PXRMXTU",100,0)
 ;Save arrays into FDA
"RTN","PXRMXTU",101,0)
 ;--------------------
"RTN","PXRMXTU",102,0)
SUB1(OUTPUT,VAR,PIECE) ;
"RTN","PXRMXTU",103,0)
 S IC=""
"RTN","PXRMXTU",104,0)
 F  S IC=$O(OUTPUT(IC)) Q:IC=""  D
"RTN","PXRMXTU",105,0)
 .S INT=$P(OUTPUT(IC),U,PIECE),CNT=CNT+1
"RTN","PXRMXTU",106,0)
 .S FDA(VAR,"+"_CNT_","_MODE,.01)=INT
"RTN","PXRMXTU",107,0)
 .;Save Display order for reminders
"RTN","PXRMXTU",108,0)
 .I VAR=810.12 S FDA(VAR,"+"_CNT_","_MODE,.02)=IC
"RTN","PXRMXTU",109,0)
 Q
"RTN","PXRMXTU",110,0)
 ;
"RTN","PXRMXTU",111,0)
 ;Save Service Categories into FDA
"RTN","PXRMXTU",112,0)
 ;--------------------------------
"RTN","PXRMXTU",113,0)
SUB2(FLD,VAR) ;
"RTN","PXRMXTU",114,0)
 F IC=1:1 S INT=$E(@FLD,IC) Q:INT=""  D
"RTN","PXRMXTU",115,0)
 .S CNT=CNT+1,FDA(VAR,"+"_CNT_","_MODE,.01)=INT
"RTN","PXRMXTU",116,0)
 Q
"RTN","PXRMXTU",117,0)
 ;
"RTN","PXRMXTU",118,0)
 ;
"RTN","PXRMXTU",119,0)
 ;Option to save a new template
"RTN","PXRMXTU",120,0)
 ;-----------------------------
"RTN","PXRMXTU",121,0)
ASK(YESNO) ;
"RTN","PXRMXTU",122,0)
 N X,Y,TEXT
"RTN","PXRMXTU",123,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMXTU",124,0)
 S DIR(0)="YA0"
"RTN","PXRMXTU",125,0)
 S DIR("A")="Create a new report template: "
"RTN","PXRMXTU",126,0)
 S DIR("B")="N"
"RTN","PXRMXTU",127,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMXTU",128,0)
 S DIR("??")=U_"D HELP^PXRMXTU(1)"
"RTN","PXRMXTU",129,0)
 W !
"RTN","PXRMXTU",130,0)
 D ^DIR K DIR
"RTN","PXRMXTU",131,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMXTU",132,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMXTU",133,0)
 S YESNO=$E(Y(0))
"RTN","PXRMXTU",134,0)
 Q
"RTN","PXRMXTU",135,0)
 ;
"RTN","PXRMXTU",136,0)
 ;General help text routine. Write out the text in the HTEXT array
"RTN","PXRMXTU",137,0)
 ;----------------------------------------------------------------
"RTN","PXRMXTU",138,0)
HELP(CALL) ;
"RTN","PXRMXTU",139,0)
 N HTEXT
"RTN","PXRMXTU",140,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMXTU",141,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMXTU",142,0)
 ;
"RTN","PXRMXTU",143,0)
 I CALL=1 D
"RTN","PXRMXTU",144,0)
 .S HTEXT(1)="Enter 'Y' to save the reporting parameters as a report"
"RTN","PXRMXTU",145,0)
 .S HTEXT(2)="template from which the report may be re-run in future."
"RTN","PXRMXTU",146,0)
 ;
"RTN","PXRMXTU",147,0)
 K ^UTILITY($J,"W")
"RTN","PXRMXTU",148,0)
 S IC=""
"RTN","PXRMXTU",149,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMXTU",150,0)
 . S X=HTEXT(IC)
"RTN","PXRMXTU",151,0)
 . D ^DIWP
"RTN","PXRMXTU",152,0)
 W !
"RTN","PXRMXTU",153,0)
 S IC=0
"RTN","PXRMXTU",154,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMXTU",155,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMXTU",156,0)
 K ^UTILITY($J,"W")
"RTN","PXRMXTU",157,0)
 W !
"RTN","PXRMXTU",158,0)
 Q
"RTN","PXRMXTU",159,0)
 ;
"RTN","PXRMXTU",160,0)
 ;Save template info to new name
"RTN","PXRMXTU",161,0)
 ;------------------------------
"RTN","PXRMXTU",162,0)
COPY N PXRMLCSC,PXRMPRIM,PRRMREP,PXRMSEL,PXRMTYP,PXRMFD,RUN,PXRMCS
"RTN","PXRMXTU",163,0)
 N PXRMREM,PXRMFAC,PXRMPRV,PXRMPAT,PXRMOTM,PXRMSCAT,PXRMLCHL,PXRMCS
"RTN","PXRMXTU",164,0)
 ;Load arrays from original template PXRMTMP
"RTN","PXRMXTU",165,0)
 D LOAD^PXRMXT I $D(MSG) Q
"RTN","PXRMXTU",166,0)
 ;Clear last run date
"RTN","PXRMXTU",167,0)
 S RUN=""
"RTN","PXRMXTU",168,0)
 ;Save arrays to new ID
"RTN","PXRMXTU",169,0)
 D FILE(NEWTEMP,0)
"RTN","PXRMXTU",170,0)
 Q
"RTN","PXRMXTU",171,0)
 ;
"RTN","PXRMXTU",172,0)
 ;Update print template last run date (called from PXRMYPR/PXRMXPR)
"RTN","PXRMXTU",173,0)
 ;-----------------------------------------------------------------
"RTN","PXRMXTU",174,0)
UPD S ^PXRMPT(810.1,$P(PXRMTMP,U),7)=PXRMXST
"RTN","PXRMXTU",175,0)
 Q
"RTN","PXRMXTU",176,0)
 ;
"RTN","PXRMXTU",177,0)
 ;Called as an input transform for 810.1/NAME
"RTN","PXRMXTU",178,0)
 ;-------------------------------------------
"RTN","PXRMXTU",179,0)
NAME Q:'$D(X)  Q:X=""  Q:$G(PXRMTYP)=""
"RTN","PXRMXTU",180,0)
 ;Disallow duplicate template names
"RTN","PXRMXTU",181,0)
 Q:'$D(^PXRMPT(810.1,"B",X))
"RTN","PXRMXTU",182,0)
 W !,"This template name already exists" K X
"RTN","PXRMXTU",183,0)
 Q
"RTN","PXRMXTU",184,0)
 ;
"RTN","PXRMXTU",185,0)
 ;Called as an input transform for 810.1/PXRMFD
"RTN","PXRMXTU",186,0)
 ;---------------------------------------------
"RTN","PXRMXTU",187,0)
INP Q:'$D(X)  Q:X=""
"RTN","PXRMXTU",188,0)
 ;If inpatient wards prompt only for Admissions/Current Patients
"RTN","PXRMXTU",189,0)
 I $G(PXRMINP),"FP"[X D
"RTN","PXRMXTU",190,0)
 .W !,"Select either Inpatient Admissions or Current Inpatients" K X
"RTN","PXRMXTU",191,0)
 ;If other locations prompt only for Prior visits/Future Appts
"RTN","PXRMXTU",192,0)
 I '$G(PXRMINP),"AC"[X D
"RTN","PXRMXTU",193,0)
 .W !,"Select either Future Appointments or Prior Visits" K X
"RTN","PXRMXTU",194,0)
 Q
"RTN","PXRMXX")
0^186^B9171319
"RTN","PXRMXX",1,0)
PXRMXX ; SLC/PJH - Extract Patient sample;06/14/2000
"RTN","PXRMXX",2,0)
 ;;1.5;CLINICAL REMINDERS;;Jun 19, 2000
"RTN","PXRMXX",3,0)
 ;
"RTN","PXRMXX",4,0)
 ; Speculative development
"RTN","PXRMXX",5,0)
 ;
"RTN","PXRMXX",6,0)
 ;Update ^TMP("PXRMX"
"RTN","PXRMXX",7,0)
 ;-------------------
"RTN","PXRMXX",8,0)
TMP S ^TMP(NODE,$J,FACILITY,DFN)="" Q
"RTN","PXRMXX",9,0)
 ;
"RTN","PXRMXX",10,0)
 ;Entry point for API
"RTN","PXRMXX",11,0)
 ;-------------------
"RTN","PXRMXX",12,0)
PATS(START,END,NODE) ;
"RTN","PXRMXX",13,0)
 ;
"RTN","PXRMXX",14,0)
 ; START - start date in format T-9
"RTN","PXRMXX",15,0)
 ; END   - End date in format T-9
"RTN","PXRMXX",16,0)
 ; NODE  - Target name for ^TMP(NODE,$J)
"RTN","PXRMXX",17,0)
 ;
"RTN","PXRMXX",18,0)
 N INC,PXRMBDT,PXRMEDT,TODAY
"RTN","PXRMXX",19,0)
 S TODAY=$H,PXRMBDT=TODAY,PXRMEDT=TODAY
"RTN","PXRMXX",20,0)
 ;Start Date
"RTN","PXRMXX",21,0)
 S INC=$P(START,"-",2) S:+INC'=0 PXRMBDT=TODAY-INC
"RTN","PXRMXX",22,0)
 ;End Date
"RTN","PXRMXX",23,0)
 S INC=$P(END,"-",2) S:+INC'=0 PXRMEDT=TODAY-INC
"RTN","PXRMXX",24,0)
 ;Convert to Fileman
"RTN","PXRMXX",25,0)
 S PXRMBDT=$$HTFM^XLFDT(PXRMBDT,1),PXRMEDT=$$HTFM^XLFDT(PXRMEDT,1)
"RTN","PXRMXX",26,0)
 ;
"RTN","PXRMXX",27,0)
 ;Build temporary array of all wards
"RTN","PXRMXX",28,0)
 N PXRMLCHL,PXRMLOCN D LCHL^PXRMXAP(1,.PXRMLCHL)
"RTN","PXRMXX",29,0)
 ;
"RTN","PXRMXX",30,0)
 ;Clear ^TMP
"RTN","PXRMXX",31,0)
 K ^TMP(NODE,$J)
"RTN","PXRMXX",32,0)
 ;Current inpatients
"RTN","PXRMXX",33,0)
 D INP
"RTN","PXRMXX",34,0)
 ;Inpatient admissions
"RTN","PXRMXX",35,0)
 D ADM
"RTN","PXRMXX",36,0)
 ;Outpatient visits
"RTN","PXRMXX",37,0)
 D VISITS
"RTN","PXRMXX",38,0)
 Q
"RTN","PXRMXX",39,0)
 ;
"RTN","PXRMXX",40,0)
 ;Build list of inpatients admissions
"RTN","PXRMXX",41,0)
 ;-----------------------------------
"RTN","PXRMXX",42,0)
ADM N FACILITY,HLOCIEN,IC,DFN,BD,ED
"RTN","PXRMXX",43,0)
 ;Get admissions for each selected location
"RTN","PXRMXX",44,0)
 F IC=1:1 Q:'$D(PXRMLCHL(IC))  D
"RTN","PXRMXX",45,0)
 .S HLOCIEN=$P(PXRMLCHL(IC),U,2) Q:HLOCIEN=""
"RTN","PXRMXX",46,0)
 .S FACILITY=$$FACL^PXRMXAP(HLOCIEN) Q:FACILITY=""
"RTN","PXRMXX",47,0)
 .Q:'$D(PXRMFACN(FACILITY))
"RTN","PXRMXX",48,0)
 .; Get admissions from patient movements and return DFN's in PATS
"RTN","PXRMXX",49,0)
 .S BD=PXRMBDT-.0001
"RTN","PXRMXX",50,0)
 .S ED=PXRMEDT+.2359
"RTN","PXRMXX",51,0)
 .N PATS D ADM^PXRMXAP(HLOCIEN,.PATS,BD,ED)
"RTN","PXRMXX",52,0)
 .;Build ^TMP for selected patients 
"RTN","PXRMXX",53,0)
 .S DFN=""
"RTN","PXRMXX",54,0)
 .F  S DFN=$O(PATS(DFN)) Q:DFN=""  D TMP
"RTN","PXRMXX",55,0)
 Q
"RTN","PXRMXX",56,0)
 ;
"RTN","PXRMXX",57,0)
 ;Build list of Current inpatients
"RTN","PXRMXX",58,0)
 ;--------------------------------
"RTN","PXRMXX",59,0)
INP N FACILITY,HLOCIEN,IC,DFN
"RTN","PXRMXX",60,0)
 ;Get Current inpatients for each location
"RTN","PXRMXX",61,0)
 F IC=1:1 Q:'$D(PXRMLCHL(IC))  D
"RTN","PXRMXX",62,0)
 .S HLOCIEN=$P(PXRMLCHL(IC),U,2) Q:HLOCIEN=""
"RTN","PXRMXX",63,0)
 .S FACILITY=$$FACL^PXRMXAP(HLOCIEN) Q:FACILITY=""
"RTN","PXRMXX",64,0)
 .;Get WARDIEN,WARDNAM and return DFN's in PATS
"RTN","PXRMXX",65,0)
 .N PATS D WARD^PXRMXAP(HLOCIEN,.PATS)
"RTN","PXRMXX",66,0)
 .;Build ^TMP for selected patients 
"RTN","PXRMXX",67,0)
 .S DFN=""
"RTN","PXRMXX",68,0)
 .F  S DFN=$O(PATS(DFN)) Q:DFN=""  D TMP
"RTN","PXRMXX",69,0)
 Q
"RTN","PXRMXX",70,0)
 ;
"RTN","PXRMXX",71,0)
 ;Scan visit file to build list of patients
"RTN","PXRMXX",72,0)
 ;-----------------------------------------
"RTN","PXRMXX",73,0)
VISITS N BD,DFN,ED,HLOCIEN,FACILITY
"RTN","PXRMXX",74,0)
 N VIEN,VISIT,IC
"RTN","PXRMXX",75,0)
 N ZTSTOP
"RTN","PXRMXX",76,0)
 ;
"RTN","PXRMXX",77,0)
 S BD=PXRMBDT-.0001
"RTN","PXRMXX",78,0)
 S ED=PXRMEDT+.2359
"RTN","PXRMXX",79,0)
 S ZTSTOP=0
"RTN","PXRMXX",80,0)
 ;Get Date ; DBIA 2028
"RTN","PXRMXX",81,0)
 F  S BD=$O(^AUPNVSIT("B",BD)) Q:BD>ED  Q:BD=""  Q:ZTSTOP=1  D
"RTN","PXRMXX",82,0)
 .S VIEN=0
"RTN","PXRMXX",83,0)
 .;Get individual visit
"RTN","PXRMXX",84,0)
 .F  S VIEN=$O(^AUPNVSIT("B",BD,VIEN)) Q:VIEN=""  Q:ZTSTOP=1  D
"RTN","PXRMXX",85,0)
 ..;Check if stop task requested
"RTN","PXRMXX",86,0)
 ..I $$S^%ZTLOAD S ZTSTOP=1 Q
"RTN","PXRMXX",87,0)
 ..;Screen Individual Visit
"RTN","PXRMXX",88,0)
 ..S VISIT=$G(^AUPNVSIT(VIEN,0)) Q:VISIT=""
"RTN","PXRMXX",89,0)
 ..;Facility
"RTN","PXRMXX",90,0)
 ..S FACILITY=$P(VISIT,U,6) S:FACILITY="" FACILITY=+$P($$SITE^VASITE,U,3)
"RTN","PXRMXX",91,0)
 ..Q:FACILITY=""
"RTN","PXRMXX",92,0)
 ..S DFN=$P(VISIT,U,5) Q:'DFN
"RTN","PXRMXX",93,0)
 ..;Build patient list in ^TMP
"RTN","PXRMXX",94,0)
 ..D TMP
"RTN","PXRMXX",95,0)
 Q
"SEC","^DD",801.9,801.9,.01,8.5)

"SEC","^DD",810.1,810.1,.01,8.5)
 
"SEC","^DD",810.1,810.1,4,9)
 
"SEC","^DIC",800,800,0,"AUDIT")
@
"SEC","^DIC",800,800,0,"DD")
@
"SEC","^DIC",800,800,0,"DEL")
@
"SEC","^DIC",800,800,0,"LAYGO")
@
"SEC","^DIC",800,800,0,"RD")

"SEC","^DIC",800,800,0,"WR")
@
"SEC","^DIC",801.41,801.41,0,"AUDIT")
@
"SEC","^DIC",801.41,801.41,0,"DD")
@
"SEC","^DIC",801.41,801.41,0,"DEL")
@
"SEC","^DIC",801.41,801.41,0,"LAYGO")
@
"SEC","^DIC",801.41,801.41,0,"RD")

"SEC","^DIC",801.41,801.41,0,"WR")
@
"SEC","^DIC",801.42,801.42,0,"AUDIT")
@
"SEC","^DIC",801.42,801.42,0,"DD")
@
"SEC","^DIC",801.42,801.42,0,"DEL")
@
"SEC","^DIC",801.42,801.42,0,"LAYGO")
@
"SEC","^DIC",801.42,801.42,0,"RD")

"SEC","^DIC",801.42,801.42,0,"WR")
@
"SEC","^DIC",801.43,801.43,0,"AUDIT")
@
"SEC","^DIC",801.43,801.43,0,"DD")
@
"SEC","^DIC",801.43,801.43,0,"DEL")
@
"SEC","^DIC",801.43,801.43,0,"LAYGO")
@
"SEC","^DIC",801.43,801.43,0,"RD")

"SEC","^DIC",801.43,801.43,0,"WR")
@
"SEC","^DIC",801.45,801.45,0,"AUDIT")
@
"SEC","^DIC",801.45,801.45,0,"DD")
@
"SEC","^DIC",801.45,801.45,0,"DEL")
@
"SEC","^DIC",801.45,801.45,0,"LAYGO")
@
"SEC","^DIC",801.45,801.45,0,"RD")

"SEC","^DIC",801.45,801.45,0,"WR")
@
"SEC","^DIC",801.9,801.9,0,"AUDIT")
@
"SEC","^DIC",801.9,801.9,0,"DD")
@
"SEC","^DIC",801.9,801.9,0,"DEL")
@
"SEC","^DIC",801.9,801.9,0,"LAYGO")
@
"SEC","^DIC",801.9,801.9,0,"RD")

"SEC","^DIC",801.9,801.9,0,"WR")
@
"SEC","^DIC",801.95,801.95,0,"AUDIT")
@
"SEC","^DIC",801.95,801.95,0,"DD")
@
"SEC","^DIC",801.95,801.95,0,"DEL")
@
"SEC","^DIC",801.95,801.95,0,"LAYGO")
@
"SEC","^DIC",801.95,801.95,0,"RD")

"SEC","^DIC",801.95,801.95,0,"WR")
@
"SEC","^DIC",810.1,810.1,0,"AUDIT")
@
"SEC","^DIC",810.1,810.1,0,"DD")
@
"SEC","^DIC",810.1,810.1,0,"DEL")
@
"SEC","^DIC",810.1,810.1,0,"LAYGO")
@
"SEC","^DIC",810.1,810.1,0,"RD")

"SEC","^DIC",810.1,810.1,0,"WR")
@
"SEC","^DIC",811.2,811.2,0,"AUDIT")
@
"SEC","^DIC",811.2,811.2,0,"DD")
@
"SEC","^DIC",811.2,811.2,0,"DEL")
@
"SEC","^DIC",811.2,811.2,0,"LAYGO")
@
"SEC","^DIC",811.2,811.2,0,"RD")

"SEC","^DIC",811.2,811.2,0,"WR")
@
"SEC","^DIC",811.3,811.3,0,"AUDIT")
@
"SEC","^DIC",811.3,811.3,0,"DD")
@
"SEC","^DIC",811.3,811.3,0,"DEL")
@
"SEC","^DIC",811.3,811.3,0,"LAYGO")
@
"SEC","^DIC",811.3,811.3,0,"RD")
@
"SEC","^DIC",811.3,811.3,0,"WR")
@
"SEC","^DIC",811.4,811.4,0,"AUDIT")
@
"SEC","^DIC",811.4,811.4,0,"DD")
@
"SEC","^DIC",811.4,811.4,0,"DEL")
@
"SEC","^DIC",811.4,811.4,0,"LAYGO")
@
"SEC","^DIC",811.4,811.4,0,"RD")

"SEC","^DIC",811.4,811.4,0,"WR")
@
"SEC","^DIC",811.5,811.5,0,"AUDIT")
@
"SEC","^DIC",811.5,811.5,0,"DD")
@
"SEC","^DIC",811.5,811.5,0,"DEL")
@
"SEC","^DIC",811.5,811.5,0,"LAYGO")
@
"SEC","^DIC",811.5,811.5,0,"RD")

"SEC","^DIC",811.5,811.5,0,"WR")
@
"SEC","^DIC",811.6,811.6,0,"AUDIT")
@
"SEC","^DIC",811.6,811.6,0,"DD")
@
"SEC","^DIC",811.6,811.6,0,"DEL")
@
"SEC","^DIC",811.6,811.6,0,"LAYGO")
@
"SEC","^DIC",811.6,811.6,0,"RD")

"SEC","^DIC",811.6,811.6,0,"WR")
@
"SEC","^DIC",811.7,811.7,0,"AUDIT")
@
"SEC","^DIC",811.7,811.7,0,"DD")
@
"SEC","^DIC",811.7,811.7,0,"DEL")
@
"SEC","^DIC",811.7,811.7,0,"LAYGO")
@
"SEC","^DIC",811.7,811.7,0,"RD")

"SEC","^DIC",811.7,811.7,0,"WR")
@
"SEC","^DIC",811.9,811.9,0,"AUDIT")
@
"SEC","^DIC",811.9,811.9,0,"DD")
@
"SEC","^DIC",811.9,811.9,0,"DEL")
@
"SEC","^DIC",811.9,811.9,0,"LAYGO")
@
"SEC","^DIC",811.9,811.9,0,"RD")

"SEC","^DIC",811.9,811.9,0,"WR")
@
"VER")
8.0^22.0
"^DD",800,800,0)
FIELD^^.01^5
"^DD",800,800,0,"DDA")
N
"^DD",800,800,0,"DT")
3000110
"^DD",800,800,0,"IX","B",800,.01)

"^DD",800,800,0,"NM","CLINICAL REMINDER PARAMETERS")

"^DD",800,800,0,"VRPK")
PX
"^DD",800,800,.01,0)
ONE^RNJ1,0^^0;1^K:+X'=X!(X>1)!(X<1)!(X?.E1"."1N.N) X
"^DD",800,800,.01,1,0)
^.1
"^DD",800,800,.01,1,1,0)
800^B
"^DD",800,800,.01,1,1,1)
S ^PXRM(800,"B",$E(X,1,30),DA)=""
"^DD",800,800,.01,1,1,2)
K ^PXRM(800,"B",$E(X,1,30),DA)
"^DD",800,800,.01,3)
Type a Number between 1 and 1, 0 Decimal Digits
"^DD",800,800,.01,21,0)
^.001^2^2^3000508^^^^
"^DD",800,800,.01,21,1,0)
This file contains parameters used by the Clinical Reminders. There is
"^DD",800,800,.01,21,2,0)
only one entry.
"^DD",800,800,.01,23,0)
^.001^1^1^3000508^^^^
"^DD",800,800,.01,23,1,0)
There is one entry in this file.
"^DD",800,800,.01,"DT")
2990209
"^DD",800,800,1,0)
DEFAULT REMINDER DISCLAIMER^800.01^^DISC1;0
"^DD",800,800,1,21,0)
^.001^2^2^3000508^^^
"^DD",800,800,1,21,1,0)
This is the default reminder disclaimer that is distributed with the
"^DD",800,800,1,21,2,0)
package.
"^DD",800,800,2,0)
SITE REMINDER DISCLAIMER^800.02^^DISC2;0
"^DD",800,800,2,21,0)
^^3^3^3000508^
"^DD",800,800,2,21,1,0)
This is the site defined reminder disclaimer. If there is an entry in
"^DD",800,800,2,21,2,0)
this field then the site defined disclaimer will override the default
"^DD",800,800,2,21,3,0)
disclaimer.
"^DD",800,800,3,0)
MAIL GROUP FOR ERRORS^P3.8^XMB(3.8,^MGFE;1^Q
"^DD",800,800,3,3)
Enter the name of the MailMan group that will receive reminder evaluation error messages.
"^DD",800,800,3,21,0)
^.001^4^4^3000508^^^^
"^DD",800,800,3,21,1,0)
When there is an error during reminder evaluation members of this
"^DD",800,800,3,21,2,0)
MailMan mail group will be sent a message notifying them of the error.
"^DD",800,800,3,21,3,0)
If there is no entry in this field then the error message will go to
"^DD",800,800,3,21,4,0)
the user.
"^DD",800,800,3,"DT")
2990209
"^DD",800,800,4,0)
WEB SITES^800.04^^1;0
"^DD",800,800,4,21,0)
^.001^1^1^3000508^^^^
"^DD",800,800,4,21,1,0)
This is a list of web sites for general reminder information.
"^DD",800,800,4,"DT")
2991129
"^DD",800,800.01,0)
DEFAULT REMINDER DISCLAIMER SUB-FIELD^^.01^1
"^DD",800,800.01,0,"DT")
2990209
"^DD",800,800.01,0,"NM","DEFAULT REMINDER DISCLAIMER")

"^DD",800,800.01,0,"UP")
800
"^DD",800,800.01,.01,0)
DEFAULT REMINDER DISCLAIMER^W^^0;1^Q
"^DD",800,800.01,.01,3)
Do not edit the default disclaimer.
"^DD",800,800.01,.01,"DT")
2990209
"^DD",800,800.02,0)
SITE REMINDER DISCLAIMER SUB-FIELD^^.01^1
"^DD",800,800.02,0,"DT")
2990209
"^DD",800,800.02,0,"NM","SITE REMINDER DISCLAIMER")

"^DD",800,800.02,0,"UP")
800
"^DD",800,800.02,.01,0)
SITE REMINDER DISCLAIMER^W^^0;1^Q
"^DD",800,800.02,.01,3)
Enter the site defined reminder disclaimer.
"^DD",800,800.02,.01,21,0)
^.001^1^1^3000508^^
"^DD",800,800.02,.01,21,1,0)
This is the site defined reminder disclaimer.
"^DD",800,800.02,.01,"DT")
2990209
"^DD",800,800.04,0)
WEB SITES SUB-FIELD^^1^3
"^DD",800,800.04,0,"DT")
2991130
"^DD",800,800.04,0,"IX","B",800.04,.01)

"^DD",800,800.04,0,"NM","WEB SITES")

"^DD",800,800.04,0,"UP")
800
"^DD",800,800.04,.01,0)
URL^MF^^0;1^K:$L(X)>128!($L(X)<1) X
"^DD",800,800.04,.01,1,0)
^.1
"^DD",800,800.04,.01,1,1,0)
800.04^B
"^DD",800,800.04,.01,1,1,1)
S ^PXRM(800,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",800,800.04,.01,1,1,2)
K ^PXRM(800,DA(1),1,"B",$E(X,1,30),DA)
"^DD",800,800.04,.01,3)
Enter the URL for the web site.
"^DD",800,800.04,.01,21,0)
^.001^1^1^3000508^^^^
"^DD",800,800.04,.01,21,1,0)
This is the URL for the web site.
"^DD",800,800.04,.01,"DT")
2991129
"^DD",800,800.04,.02,0)
WEB SITE TITLE^F^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",800,800.04,.02,3)
Enter the web site title, up to 60 characters.
"^DD",800,800.04,.02,21,0)
^.001^1^1^3000508^^
"^DD",800,800.04,.02,21,1,0)
This is the web site title.
"^DD",800,800.04,.02,"DT")
2991130
"^DD",800,800.04,1,0)
WEB SITE DESCRIPTION^800.41^^1;0
"^DD",800,800.04,1,21,0)
^^1^1^3000508^
"^DD",800,800.04,1,21,1,0)
This is a description of the web site.
"^DD",800,800.41,0)
WEB SITE DESCRIPTION SUB-FIELD^^.01^1
"^DD",800,800.41,0,"DT")
2991130
"^DD",800,800.41,0,"NM","WEB SITE DESCRIPTION")

"^DD",800,800.41,0,"UP")
800.04
"^DD",800,800.41,.01,0)
WEB SITE DESCRIPTION^W^^0;1^Q
"^DD",800,800.41,.01,3)
Enter the web site description.
"^DD",800,800.41,.01,21,0)
^.001^2^2^3000508^^
"^DD",800,800.41,.01,21,1,0)
This is the web site description. It is used to give more information
"^DD",800,800.41,.01,21,2,0)
about why this web site is relevant for clinical reminders.
"^DD",800,800.41,.01,"DT")
2991130
"^DD",801.41,801.41,0)
FIELD^^99.3^31
"^DD",801.41,801.41,0,"DDA")
N
"^DD",801.41,801.41,0,"DT")
3000423
"^DD",801.41,801.41,0,"ID",4)
W "   ",@("$P($P($C(59)_$S($D(^DD(801.41,4,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,4)_"":"",2),$C(59),1)")
"^DD",801.41,801.41,0,"IX","AD",801.412,2)

"^DD",801.41,801.41,0,"IX","AG",801.41,2)

"^DD",801.41,801.41,0,"IX","AM",801.41,99)

"^DD",801.41,801.41,0,"IX","AMM",801.412,.01)

"^DD",801.41,801.41,0,"IX","AMM2",801.412,2)

"^DD",801.41,801.41,0,"NM","REMINDER DIALOG")

"^DD",801.41,801.41,0,"PT",801.41,55)

"^DD",801.41,801.41,0,"PT",801.412,2)

"^DD",801.41,801.41,0,"PT",801.422,.01)

"^DD",801.41,801.41,0,"PT",801.43,.04)

"^DD",801.41,801.41,0,"PT",801.4515,.01)

"^DD",801.41,801.41,0,"PT",811.9,51)

"^DD",801.41,801.41,.01,0)
NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>63!($L(X)<3)!'(X'?1P.E) X
"^DD",801.41,801.41,.01,1,0)
^.1^^0
"^DD",801.41,801.41,.01,3)
Enter up to a 34 character name to represent this dialog entry.
"^DD",801.41,801.41,.01,21,0)
^^19^19^3000511^
"^DD",801.41,801.41,.01,21,1,0)
This is the name of the dialog entry. Reminder dialog entries will default
"^DD",801.41,801.41,.01,21,2,0)
to the name of the reminder for ease in identifying the reminder dialog
"^DD",801.41,801.41,.01,21,3,0)
entry.  Dialog elements that are auto-generated use the following naming
"^DD",801.41,801.41,.01,21,4,0)
convention:  Finding type prefix_ _Name from finding file_ _Resolution
"^DD",801.41,801.41,.01,21,5,0)
Status. An example of two dialog element entry names generated from an
"^DD",801.41,801.41,.01,21,6,0)
Exam file entry for DIABETIC EYE EXAM follow.
"^DD",801.41,801.41,.01,21,7,0)
    EX DIABETIC EYE EXAM DONE
"^DD",801.41,801.41,.01,21,8,0)
    EX DIABETIC EYE EXAM DONE ELSEWHERE
"^DD",801.41,801.41,.01,21,9,0)
 
"^DD",801.41,801.41,.01,21,10,0)
Your site may want to create special namespacing for dialog entries that
"^DD",801.41,801.41,.01,21,11,0)
you create locally.
"^DD",801.41,801.41,.01,21,12,0)
 
"^DD",801.41,801.41,.01,21,13,0)
Entries prefixed with PXRM are prompts, result groups, and result
"^DD",801.41,801.41,.01,21,14,0)
elements that were distributed with the Clinical Reminders package.  The
"^DD",801.41,801.41,.01,21,15,0)
PXRM prefixed prompts are the additional prompts that can be asked for
"^DD",801.41,801.41,.01,21,16,0)
particular types of PCE findings. For example: PXRM COMMENT can be added
"^DD",801.41,801.41,.01,21,17,0)
to any PCE file to allow the user to enter an additional COMMENT beyond
"^DD",801.41,801.41,.01,21,18,0)
the dialog elements progress note text, and the PXRM LEVEL OF
"^DD",801.41,801.41,.01,21,19,0)
UNDERSTANDING can only be used with PCE Education Topic findings.
"^DD",801.41,801.41,.01,"DEL",1,0)
I DA<100000 W !,*7,"CANNOT DELETE"
"^DD",801.41,801.41,.01,"DT")
3000511
"^DD",801.41,801.41,2,0)
SOURCE REMINDER^P811.9'^PXD(811.9,^0;2^Q
"^DD",801.41,801.41,2,1,0)
^.1
"^DD",801.41,801.41,2,1,1,0)
801.41^AG
"^DD",801.41,801.41,2,1,1,1)
S ^PXRMD(801.41,"AG",$E(X,1,30),DA)=""
"^DD",801.41,801.41,2,1,1,2)
K ^PXRMD(801.41,"AG",$E(X,1,30),DA)
"^DD",801.41,801.41,2,1,1,"%D",0)
^^1^1^2991217^
"^DD",801.41,801.41,2,1,1,"%D",1,0)
Index of dialogs by source reminder.
"^DD",801.41,801.41,2,1,1,"DT")
2991217
"^DD",801.41,801.41,2,3)
Enter the associated reminder for this reminder dialog.
"^DD",801.41,801.41,2,21,0)
^^3^3^2990923^
"^DD",801.41,801.41,2,21,1,0)
This identifies which reminder definition is associated with this
"^DD",801.41,801.41,2,21,2,0)
"Reminder Dialog" entry.  "Reminder Dialog" type entries are the only
"^DD",801.41,801.41,2,21,3,0)
entries that require this field.
"^DD",801.41,801.41,2,"DT")
2991217
"^DD",801.41,801.41,3,0)
DISABLE^F^^0;3^K:$L(X)>40!($L(X)<1) X
"^DD",801.41,801.41,3,3)
Enter a message here to disable this dialog, 1-40 characters in length.
"^DD",801.41,801.41,3,21,0)
^^3^3^2991005^^^
"^DD",801.41,801.41,3,21,1,0)
This field disables use of this dialog when it contains text.  The text
"^DD",801.41,801.41,3,21,2,0)
should be a short message explaining why use of this dialog has been
"^DD",801.41,801.41,3,21,3,0)
disabled, as it will be displayed if this dialog is selected.
"^DD",801.41,801.41,3,"DT")
2950112
"^DD",801.41,801.41,4,0)
TYPE^RS^P:prompt;E:dialog element;R:reminder dialog;F:forced value;G:dialog group;S:result group;T:result element;^0;4^Q
"^DD",801.41,801.41,4,3)
Specify a type for this entry.
"^DD",801.41,801.41,4,21,0)
^^78^78^3000511^
"^DD",801.41,801.41,4,21,1,0)
This field defines what type of dialog this entry is.  The type of dialog
"^DD",801.41,801.41,4,21,2,0)
determines the processing that can occur with this entry. 
"^DD",801.41,801.41,4,21,3,0)
 
"^DD",801.41,801.41,4,21,4,0)
Reminder dialogs are the dialog entries that can be mapped to a reminder
"^DD",801.41,801.41,4,21,5,0)
definition.  Reminder dialogs will typically contain several dialog
"^DD",801.41,801.41,4,21,6,0)
elements and/or dialog groups. 
"^DD",801.41,801.41,4,21,7,0)
 
"^DD",801.41,801.41,4,21,8,0)
Dialog elements that are auto-generated represent a finding item and
"^DD",801.41,801.41,4,21,9,0)
resolution status combination, based on the Finding Type Parameters for
"^DD",801.41,801.41,4,21,10,0)
auto-generation.  The dialog elements can be defined manually if
"^DD",801.41,801.41,4,21,11,0)
needed. Dialog elements must have the FINDING ITEM field defined in order
"^DD",801.41,801.41,4,21,12,0)
to cause the finding to be updated automatically.  When no finding item is
"^DD",801.41,801.41,4,21,13,0)
defined, the dialog element is treated as a header or instruction text in
"^DD",801.41,801.41,4,21,14,0)
the CPRS GUI. Sites can also add Additional Finding items to automatically
"^DD",801.41,801.41,4,21,15,0)
update when a dialog element is checked off.  An example of using the
"^DD",801.41,801.41,4,21,16,0)
additional finding would be for a dialog element for a diagnosis, that
"^DD",801.41,801.41,4,21,17,0)
must always be recorded with a second diagnosis. Another example is when
"^DD",801.41,801.41,4,21,18,0)
an Exam or Education Topic dialog element checked off should automatically
"^DD",801.41,801.41,4,21,19,0)
add an additional ICD9 and/or CPT finding to PCE.
"^DD",801.41,801.41,4,21,20,0)
 
"^DD",801.41,801.41,4,21,21,0)
Dialog elements will use the DIALOG/PROGRESS NOTE TEXT to display in the
"^DD",801.41,801.41,4,21,22,0)
CPRS GUI window. This text will also be added to the progress note,
"^DD",801.41,801.41,4,21,23,0)
unless the optional ALTERNATE PROGRESS NOTE TEXT field is defined. If the
"^DD",801.41,801.41,4,21,24,0)
dialog text to display to the user needs to be different from the text to
"^DD",801.41,801.41,4,21,25,0)
add to the progress note, use the ALTERNATE PROGRESS NOTE TEXT field to
"^DD",801.41,801.41,4,21,26,0)
define the progress note text.
"^DD",801.41,801.41,4,21,27,0)
 
"^DD",801.41,801.41,4,21,28,0)
Dialog Groups can be used to group dialog elements together.  Groups can
"^DD",801.41,801.41,4,21,29,0)
be displayed with a box around them and have selection rules applied to
"^DD",801.41,801.41,4,21,30,0)
them (e.g., select one, one or more)  A dialog element can be changed to a
"^DD",801.41,801.41,4,21,31,0)
dialog group by changing its TYPE.
"^DD",801.41,801.41,4,21,32,0)
 
"^DD",801.41,801.41,4,21,33,0)
Prompts are distributed in the PXRM namespace to represent additional
"^DD",801.41,801.41,4,21,34,0)
fields that the user can enter when an element is checked off. Prompts are
"^DD",801.41,801.41,4,21,35,0)
added to dialog elements during auto-generation based on the finding type
"^DD",801.41,801.41,4,21,36,0)
parameters. The PXRM COMMENT field is a generic comment field that can be
"^DD",801.41,801.41,4,21,37,0)
used on all PCE related finding items.  Dialog elements for "DONE
"^DD",801.41,801.41,4,21,38,0)
ELSEWHERE" need to require the historical visit date prompt.  The forced
"^DD",801.41,801.41,4,21,39,0)
value is similar to a prompt, accept it represents a stuffed prompt which
"^DD",801.41,801.41,4,21,40,0)
doesn't need to be presented to answer. The PXRM prompts can be copied for
"^DD",801.41,801.41,4,21,41,0)
local modification to create additional forced value entries if necessary.
"^DD",801.41,801.41,4,21,42,0)
 
"^DD",801.41,801.41,4,21,43,0)
Prompts created locally (not copies of PXRM prompts) are treated as
"^DD",801.41,801.41,4,21,44,0)
display text with checkboxes which when checked off add text to a comment
"^DD",801.41,801.41,4,21,45,0)
field which is added to the progress note text. Refer to these as Local
"^DD",801.41,801.41,4,21,46,0)
Comment Prompts.
"^DD",801.41,801.41,4,21,47,0)
 
"^DD",801.41,801.41,4,21,48,0)
Result Groups and Result Elements are distributed in the PXRM namespace
"^DD",801.41,801.41,4,21,49,0)
and are associated with Mental Health Instrument finding items during
"^DD",801.41,801.41,4,21,50,0)
auto-generation of a reminder dialog. When the mental health instrument
"^DD",801.41,801.41,4,21,51,0)
finding item dialog element is selected by the CPRS GUI user, a window
"^DD",801.41,801.41,4,21,52,0)
will be opened which contains the tests questions and probable answers.
"^DD",801.41,801.41,4,21,53,0)
The selected answers are sent to the mental health package when the user
"^DD",801.41,801.41,4,21,54,0)
selects OK. The mental health package returns the score and results which
"^DD",801.41,801.41,4,21,55,0)
can be used within sentences. These sentences are defined as Result
"^DD",801.41,801.41,4,21,56,0)
Elements, and can vary depending on the test score. If multiple sentences
"^DD",801.41,801.41,4,21,57,0)
are possible depending on the score, the result elements should be defined
"^DD",801.41,801.41,4,21,58,0)
in a result group.  The result group should be added to the mental health
"^DD",801.41,801.41,4,21,59,0)
tests dialog elements RESULT GROUP/ELEMENT field. Mental Health tests for
"^DD",801.41,801.41,4,21,60,0)
use by Mental Health clinicians only, are not available for CPRS reminder
"^DD",801.41,801.41,4,21,61,0)
resolution.
"^DD",801.41,801.41,4,21,62,0)
 
"^DD",801.41,801.41,4,21,63,0)
A reminder dialog can be made into a dialog group and added to another
"^DD",801.41,801.41,4,21,64,0)
reminders dialog.  This allows multiple reminders to be addressed by one
"^DD",801.41,801.41,4,21,65,0)
reminder dialog.
"^DD",801.41,801.41,4,21,66,0)
 
"^DD",801.41,801.41,4,21,67,0)
Reminder Dialogs can include dialog elements that don't have anything to
"^DD",801.41,801.41,4,21,68,0)
do with the findings defined in the reminder.
"^DD",801.41,801.41,4,21,69,0)
 
"^DD",801.41,801.41,4,21,70,0)
Taxonomy dialogs are auto-generated based on the Taxonomy Dialog
"^DD",801.41,801.41,4,21,71,0)
Parameters.  The taxonomy dialog can be used as a black box that allows
"^DD",801.41,801.41,4,21,72,0)
the users to enter current or historical encounter diagnosis or procedures
"^DD",801.41,801.41,4,21,73,0)
based on the selectable list of diagnoses parameters.  Alternatively, a
"^DD",801.41,801.41,4,21,74,0)
taxonomy can have individual dialog elements created for each coded value
"^DD",801.41,801.41,4,21,75,0)
in the selectable list of diagnosis and procedures.  It may be more useful
"^DD",801.41,801.41,4,21,76,0)
for sites to create dialog elements for the common diagnosis and
"^DD",801.41,801.41,4,21,77,0)
procedures they actively use and add them to groups, similar to the
"^DD",801.41,801.41,4,21,78,0)
encounter form section and coded value groupings.
"^DD",801.41,801.41,4,"DT")
3000223
"^DD",801.41,801.41,5,0)
CAPTION^F^^0;5^K:$L(X)>30!($L(X)<3) X
"^DD",801.41,801.41,5,3)
Enter a caption to use for this component.
"^DD",801.41,801.41,5,21,0)
^^7^7^2990923^
"^DD",801.41,801.41,5,21,1,0)
The caption is used for prompt, dialog group, and reminder components.
"^DD",801.41,801.41,5,21,2,0)
When a prompt has a caption defined, this is the text that should be used
"^DD",801.41,801.41,5,21,3,0)
whenever the prompt is asked (e.g., Comment:).  A dialog group can use the
"^DD",801.41,801.41,5,21,4,0)
caption field to specify a header to use on a box around the
"^DD",801.41,801.41,5,21,5,0)
group of dialog elements.  The reminder dialog component can use the
"^DD",801.41,801.41,5,21,6,0)
caption to specify a header to use on a box around the the dialog elements
"^DD",801.41,801.41,5,21,7,0)
for a reminder.
"^DD",801.41,801.41,5,"DT")
2990923
"^DD",801.41,801.41,6,0)
BOX^S^Y:YES;N:NO;^0;6^Q
"^DD",801.41,801.41,6,3)
Enter Y to add a box around the components.
"^DD",801.41,801.41,6,21,0)
^^3^3^2990923^
"^DD",801.41,801.41,6,21,1,0)
This flag will be used to determine whether the components will be
"^DD",801.41,801.41,6,21,2,0)
presented to the user in a box.  If the caption field is defined, it will
"^DD",801.41,801.41,6,21,3,0)
appear as header text within in the top line of the box.
"^DD",801.41,801.41,6,"DT")
2990923
"^DD",801.41,801.41,7,0)
NUMBER OF INDENTS^NJ1,0^^0;7^K:+X'=X!(X>4)!(X<0)!(X?.E1"."1N.N) X
"^DD",801.41,801.41,7,3)
Enter the number of indents required (between 0 and 4).
"^DD",801.41,801.41,7,21,0)
^.001^2^2^3000407^^
"^DD",801.41,801.41,7,21,1,0)
This is the number of indents that should be made before presenting the
"^DD",801.41,801.41,7,21,2,0)
group's components/elements. Indent is used only for dialog groups.
"^DD",801.41,801.41,7,"DT")
2990923
"^DD",801.41,801.41,8,0)
SHARE COMMON PROMPTS^S^1:YES;0:NO;^0;8^Q
"^DD",801.41,801.41,8,3)
Enter No if the common prompts must be prompted for each dialog element separately.
"^DD",801.41,801.41,8,21,0)
^^3^3^2991124^^
"^DD",801.41,801.41,8,21,1,0)
This field is used only for a dialog group where different dialog elements
"^DD",801.41,801.41,8,21,2,0)
have common prompts. Prompts will be shared for all dialog element unless
"^DD",801.41,801.41,8,21,3,0)
otherwise selected.
"^DD",801.41,801.41,8,"DT")
2991124
"^DD",801.41,801.41,9,0)
GROUP ENTRY^S^1:ONE SELECTION ONLY;2:ONE OR MORE SELECTIONS;0:NO SELECTION REQUIRED;^0;9^Q
"^DD",801.41,801.41,9,3)
Enter 1 for one selection only. Enter 2 for one or more. Enter 0 for no selection required.
"^DD",801.41,801.41,9,21,0)
^^5^5^2991130^
"^DD",801.41,801.41,9,21,1,0)
Used for dialog groups only.
"^DD",801.41,801.41,9,21,2,0)
 
"^DD",801.41,801.41,9,21,3,0)
1 indicates that only one element in the dialog group may be selected.
"^DD",801.41,801.41,9,21,4,0)
2 indicates that one or more elements must be selected.
"^DD",801.41,801.41,9,21,5,0)
0 or null indicates no selection required.
"^DD",801.41,801.41,9,"DT")
2991130
"^DD",801.41,801.41,10,0)
COMPONENTS^801.412IA^^10;0
"^DD",801.41,801.41,10,21,0)
^.001^7^7^3000302^^^^
"^DD",801.41,801.41,10,21,1,0)
This field contains the components that are used to process a
"^DD",801.41,801.41,10,21,2,0)
reminder.  Generally the components relate to the TYPE of entry in the
"^DD",801.41,801.41,10,21,3,0)
Reminder Dialog File:
"^DD",801.41,801.41,10,21,4,0)
 
"^DD",801.41,801.41,10,21,5,0)
     Reminder dialogs have dialog group or dialog element components.
"^DD",801.41,801.41,10,21,6,0)
     Dialog groups have a combination of dialog element components.
"^DD",801.41,801.41,10,21,7,0)
     Dialog elements have prompt and forced value components.
"^DD",801.41,801.41,10,"DT")
2990923
"^DD",801.41,801.41,13,0)
RESOLUTION TYPE^P801.9'^PXRMD(801.9,^1;3^Q
"^DD",801.41,801.41,13,3)
Enter the resolution status to use when this item is selected.
"^DD",801.41,801.41,13,21,0)
^^2^2^2990628^
"^DD",801.41,801.41,13,21,1,0)
This field contains what type of resolution is represented by this
"^DD",801.41,801.41,13,21,2,0)
dialog entry.
"^DD",801.41,801.41,13,"DT")
2990628
"^DD",801.41,801.41,14,0)
FINDING TYPE^P801.45'^PXRMD(801.45,^1;4^Q
"^DD",801.41,801.41,14,3)
Enter finding type if the additional prompt is intended for use with only one type of finding item.
"^DD",801.41,801.41,14,21,0)
^.001^15^15^3000504^^^^
"^DD",801.41,801.41,14,21,1,0)
If an additional prompt is restricted to use with only one type of finding
"^DD",801.41,801.41,14,21,2,0)
item this field contains the mnemonic of the finding type. The mnemonics
"^DD",801.41,801.41,14,21,3,0)
allowed are:
"^DD",801.41,801.41,14,21,4,0)
 
"^DD",801.41,801.41,14,21,5,0)
   CPT  Procedure      
"^DD",801.41,801.41,14,21,6,0)
   ED   Education Topic
"^DD",801.41,801.41,14,21,7,0)
   EX   Exam
"^DD",801.41,801.41,14,21,8,0)
   HF   Health Factor
"^DD",801.41,801.41,14,21,9,0)
   IM   Immunization
"^DD",801.41,801.41,14,21,10,0)
   OI   Orderable Item
"^DD",801.41,801.41,14,21,11,0)
   POV  Diagnosis (ICD9) 
"^DD",801.41,801.41,14,21,12,0)
   ST   Skin Test
"^DD",801.41,801.41,14,21,13,0)
   VM   Vital Measurement
"^DD",801.41,801.41,14,21,14,0)
 
"^DD",801.41,801.41,14,21,15,0)
(e.g. PXRM Contraindicated is restricted to IMMUNIZATION, finding type IM)
"^DD",801.41,801.41,14,"DT")
2990629
"^DD",801.41,801.41,15,0)
FINDING ITEM^V^^1;5^Q
"^DD",801.41,801.41,15,3)
Enter the finding item for this dialog element.
"^DD",801.41,801.41,15,21,0)
^^3^3^3000511^
"^DD",801.41,801.41,15,21,1,0)
This is the finding item that should be created if the dialog
"^DD",801.41,801.41,15,21,2,0)
element/group is checked in CPRS. Additional findings may be entered into
"^DD",801.41,801.41,15,21,3,0)
the additional findings field.
"^DD",801.41,801.41,15,"DT")
3000503
"^DD",801.41,801.41,15,"V",0)
^.12P^11^11
"^DD",801.41,801.41,15,"V",1,0)
9999999.09^EDUCATION TOPICS^5^ED^n^n
"^DD",801.41,801.41,15,"V",2,0)
9999999.14^IMMUNIZATION^10^IM^n^n
"^DD",801.41,801.41,15,"V",3,0)
9999999.28^SKIN TEST^15^ST^n^n
"^DD",801.41,801.41,15,"V",4,0)
9999999.15^EXAM^20^EX^n^n
"^DD",801.41,801.41,15,"V",5,0)
9999999.64^HEALTH FACTOR^25^HF^y^n
"^DD",801.41,801.41,15,"V",5,1)
S DIC("S")="I $P(^(0),U,10)'=""C"""
"^DD",801.41,801.41,15,"V",5,2)
IGNORE CATEGORIES
"^DD",801.41,801.41,15,"V",6,0)
81^PROCEDURE^30^CPT^n^n
"^DD",801.41,801.41,15,"V",7,0)
80^ICD9 DIAGNOSIS^35^ICD9^n^n
"^DD",801.41,801.41,15,"V",8,0)
120.51^VITAL TYPE^40^VM^^n
"^DD",801.41,801.41,15,"V",9,0)
811.2^TAXONOMY^45^TX^^n
"^DD",801.41,801.41,15,"V",10,0)
101.41^ORDER DIALOG^50^Q^^n
"^DD",801.41,801.41,15,"V",11,0)
601^MENTAL HEALTH^55^MH^n^n
"^DD",801.41,801.41,17,0)
ORDERABLE ITEM^P101.43'^ORD(101.43,^1;7^Q
"^DD",801.41,801.41,17,3)

"^DD",801.41,801.41,17,21,0)
^^1^1^2991029^^
"^DD",801.41,801.41,17,21,1,0)
Orderable item from the reminder definition.
"^DD",801.41,801.41,17,23,0)
^^1^1^2991029^^
"^DD",801.41,801.41,17,23,1,0)
This field is used only in the dialog display.
"^DD",801.41,801.41,17,"DT")
2991029
"^DD",801.41,801.41,18,0)
ADDITIONAL FINDINGS^801.4118AV^^3;0
"^DD",801.41,801.41,21,0)
DEFAULT VALUE^F^^2;1^K:$L(X)>60!($L(X)<1) X
"^DD",801.41,801.41,21,3)
Answer must be 1-60 characters in length.
"^DD",801.41,801.41,21,21,0)
^^1^1^3000511^
"^DD",801.41,801.41,21,21,1,0)
This is the default value for an additional prompt.
"^DD",801.41,801.41,21,"DT")
2990714
"^DD",801.41,801.41,22,0)
FORCED VALUE^F^^2;2^K:$L(X)>60!($L(X)<1) X
"^DD",801.41,801.41,22,3)
Answer must be 1-60 characters in length.
"^DD",801.41,801.41,22,21,0)
^^1^1^3000511^
"^DD",801.41,801.41,22,21,1,0)
This is the value that will be used for a forced value type dialog.
"^DD",801.41,801.41,22,"DT")
2990714
"^DD",801.41,801.41,23,0)
EXCLUDE FROM PROGRESS NOTE^S^1:YES;0:NO;^2;3^Q
"^DD",801.41,801.41,23,3)
Enter Y to stop the question text being added to the progress note.
"^DD",801.41,801.41,23,21,0)
^^2^2^2991102^^^
"^DD",801.41,801.41,23,21,1,0)
This field indicates that the question text of the dialog element will be
"^DD",801.41,801.41,23,21,2,0)
excluded from the progress note.
"^DD",801.41,801.41,23,"DT")
2991102
"^DD",801.41,801.41,24,0)
PROMPT CAPTION^F^^2;4^K:$L(X)>30!($L(X)<3) X
"^DD",801.41,801.41,24,3)
Enter a 3-30 character prompt caption.
"^DD",801.41,801.41,24,21,0)
^^3^3^2990923^
"^DD",801.41,801.41,24,21,1,0)
This is the caption that will be used for this prompt.  This caption can
"^DD",801.41,801.41,24,21,2,0)
be overriden by the OVERRIDE PROMPT CAPTION field in the ITEMS multiple,
"^DD",801.41,801.41,24,21,3,0)
which can be more specific for the instance of the prompt.
"^DD",801.41,801.41,24,"DT")
2990923
"^DD",801.41,801.41,25,0)
DIALOG/PROGRESS NOTE TEXT^801.4125^^25;0
"^DD",801.41,801.41,25,21,0)
^.001^2^2^3000511^^
"^DD",801.41,801.41,25,21,1,0)
This is the sentence text that will appear in the reminder dialog and
"^DD",801.41,801.41,25,21,2,0)
progress note.
"^DD",801.41,801.41,25,"DT")
3000420
"^DD",801.41,801.41,35,0)
ALTERNATE PROGRESS NOTE TEXT^801.4135^^35;0
"^DD",801.41,801.41,35,21,0)
^.001^2^2^3000503^^^^
"^DD",801.41,801.41,35,21,1,0)
This field is only required if the text on the progress note differs
"^DD",801.41,801.41,35,21,2,0)
from the dialog text.
"^DD",801.41,801.41,35,"DT")
3000503
"^DD",801.41,801.41,50,0)
HIDE/SHOW GROUP^S^1:HIDE;0:SHOW;^0;10^Q
"^DD",801.41,801.41,50,3)
Enter HIDE or SHOW
"^DD",801.41,801.41,50,21,0)
^^4^4^2991124^
"^DD",801.41,801.41,50,21,1,0)
Used for dialog groups.
"^DD",801.41,801.41,50,21,2,0)
 
"^DD",801.41,801.41,50,21,3,0)
1 indicates that the group will be hidden until checked
"^DD",801.41,801.41,50,21,4,0)
0 indicates that the group will be displayed 
"^DD",801.41,801.41,50,"DT")
2991124
"^DD",801.41,801.41,51,0)
SUPPRESS CHECKBOX^S^1:SUPPRESS;^0;11^Q
"^DD",801.41,801.41,51,3)
Enter 1 if the WP text is for display only.
"^DD",801.41,801.41,51,21,0)
^^10^10^2991215^
"^DD",801.41,801.41,51,21,1,0)
If the field is set to SUPPRESS the dialog element or group
"^DD",801.41,801.41,51,21,2,0)
header will be displayed without a checkbox. Otherwise the WP text will be
"^DD",801.41,801.41,51,21,3,0)
presented with a checkbox.
"^DD",801.41,801.41,51,21,4,0)
 
"^DD",801.41,801.41,51,21,5,0)
If the dialog element or group header has a finding item associated with
"^DD",801.41,801.41,51,21,6,0)
it the SUPPRESS CHECKBOX flag will be ignored.
"^DD",801.41,801.41,51,21,7,0)
 
"^DD",801.41,801.41,51,21,8,0)
Also if the HIDE/SHOW GROUP field is set to hide then the SUPPRESS
"^DD",801.41,801.41,51,21,9,0)
CHECKBOX field will be ignored (the group header question must be a
"^DD",801.41,801.41,51,21,10,0)
checkbox).
"^DD",801.41,801.41,51,"DT")
2991201
"^DD",801.41,801.41,52,0)
INDENT PROGRESS NOTE TEXT^S^1:INDENT;0:NO INDENT;^0;12^Q
"^DD",801.41,801.41,52,3)
Enter 1 if the progress note text should be indented. Enter 0 if no indent is required.
"^DD",801.41,801.41,52,21,0)
^^2^2^3000110^^^^
"^DD",801.41,801.41,52,21,1,0)
In a dialog group the dialog questions may be indented. This field allows
"^DD",801.41,801.41,52,21,2,0)
the progress note text to be indented also.
"^DD",801.41,801.41,52,"DT")
3000110
"^DD",801.41,801.41,53,0)
RESULT CONDITION^FXO^^0;13^K:$L(X)>40!($L(X)<3) X D VCOND^PXRMINTR(.X)
"^DD",801.41,801.41,53,2)
S Y(0)=Y S Y=$TR(Y,"~"," ")
"^DD",801.41,801.41,53,2.1)
S Y=$TR(Y,"~"," ")
"^DD",801.41,801.41,53,3)
Answer must be 3-40 characters in length.
"^DD",801.41,801.41,53,21,0)
^^6^6^3000511^
"^DD",801.41,801.41,53,21,1,0)
This field is used for dialog result elements only. The result condition
"^DD",801.41,801.41,53,21,2,0)
determines if the progress note text of the result element will be
"^DD",801.41,801.41,53,21,3,0)
included in the progress note
"^DD",801.41,801.41,53,21,4,0)
 
"^DD",801.41,801.41,53,21,5,0)
e.g. I SCORE<2 will insert the text in the progress note if the SCORE from
"^DD",801.41,801.41,53,21,6,0)
the mental health test is below 2. 
"^DD",801.41,801.41,53,"DT")
3000609
"^DD",801.41,801.41,54,0)
EXCLUDE MH TEST FROM PN TEXT^S^1:YES;0:NO;^0;14^Q
"^DD",801.41,801.41,54,3)
Enter Y to stop the test questions from being added to the note text.
"^DD",801.41,801.41,54,21,0)
^^3^3^3000225^
"^DD",801.41,801.41,54,21,1,0)
This flag is used to control whether or not a mental health test questions
"^DD",801.41,801.41,54,21,2,0)
will be excluded from the progress note text when the component is acted
"^DD",801.41,801.41,54,21,3,0)
upon.
"^DD",801.41,801.41,54,"DT")
3000225
"^DD",801.41,801.41,55,0)
RESULT GROUP/ELEMENT^*P801.41'^PXRMD(801.41,^0;15^S DIC("S")="I ""ST""[$P(^(0),U,4)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",801.41,801.41,55,3)
Enter the result group or element for additional findings.
"^DD",801.41,801.41,55,12)
Only result elements and result groups allowed
"^DD",801.41,801.41,55,12.1)
S DIC("S")="I ""ST""[$P(^(0),U,4)"
"^DD",801.41,801.41,55,21,0)
^.001^4^4^3000225^^^
"^DD",801.41,801.41,55,21,1,0)
The result group or element is called on completion of a dialog and allows
"^DD",801.41,801.41,55,21,2,0)
additional findings or progress note text to be added conditionally.
"^DD",801.41,801.41,55,21,3,0)
Standard result groups for mental health tests are released with the
"^DD",801.41,801.41,55,21,4,0)
package.
"^DD",801.41,801.41,55,"DT")
3000225
"^DD",801.41,801.41,99,0)
LATEST CHANGE^D^^99;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",801.41,801.41,99,1,0)
^.1
"^DD",801.41,801.41,99,1,1,0)
801.41^AM^MUMPS
"^DD",801.41,801.41,99,1,1,1)
D SET^PXRMDD41(DA)
"^DD",801.41,801.41,99,1,1,2)
D KILL^PXRMDD41(DA)
"^DD",801.41,801.41,99,1,1,"DT")
2990624
"^DD",801.41,801.41,99,3)

"^DD",801.41,801.41,99,21,0)
^^1^1^2991215^^
"^DD",801.41,801.41,99,21,1,0)
Date last changed.
"^DD",801.41,801.41,99,"DT")
2991220
"^DD",801.41,801.41,99.1,0)
AUTO GENERATED^DX^^99;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",801.41,801.41,99.1,3)
Enter the date/time the dialog entries were generated.
"^DD",801.41,801.41,99.1,21,0)
^^1^1^3000511^
"^DD",801.41,801.41,99.1,21,1,0)
This is the date the dialog was created by autogenerate.
"^DD",801.41,801.41,99.1,"DT")
2990719
"^DD",801.41,801.41,99.2,0)
CHANGED BY^P200'^VA(200,^99;3^Q
"^DD",801.41,801.41,99.2,21,0)
^^1^1^2991220^
"^DD",801.41,801.41,99.2,21,1,0)
Person making latest change to dialog.
"^DD",801.41,801.41,99.2,"DT")
2991220
"^DD",801.41,801.41,99.3,0)
AUTO GENERATED BY^P200'^VA(200,^99;4^Q
"^DD",801.41,801.41,99.3,21,0)
^^1^1^2991220^
"^DD",801.41,801.41,99.3,21,1,0)
Last person generating the dialog.
"^DD",801.41,801.41,99.3,"DT")
2991220
"^DD",801.41,801.4118,0)
ADDITIONAL FINDINGS SUB-FIELD^^.01^1
"^DD",801.41,801.4118,0,"DT")
3000303
"^DD",801.41,801.4118,0,"IX","B",801.4118,.01)

"^DD",801.41,801.4118,0,"NM","ADDITIONAL FINDINGS")

"^DD",801.41,801.4118,0,"UP")
801.41
"^DD",801.41,801.4118,.01,0)
ADDITIONAL FINDINGS^MV^^0;1^Q
"^DD",801.41,801.4118,.01,1,0)
^.1
"^DD",801.41,801.4118,.01,1,1,0)
801.4118^B
"^DD",801.41,801.4118,.01,1,1,1)
S ^PXRMD(801.41,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",801.41,801.4118,.01,1,1,2)
K ^PXRMD(801.41,DA(1),3,"B",$E(X,1,30),DA)
"^DD",801.41,801.4118,.01,1,1,3)
Required Index for Variable Pointer
"^DD",801.41,801.4118,.01,3)
Enter additional finding items for this dialog element.
"^DD",801.41,801.4118,.01,21,0)
^.001^3^3^3000423^^
"^DD",801.41,801.4118,.01,21,1,0)
If additional finding items should be posted if the dialog is checked then
"^DD",801.41,801.4118,.01,21,2,0)
they should be entered in this field. The field is relevant to both dialog
"^DD",801.41,801.4118,.01,21,3,0)
element and dialog group type records.
"^DD",801.41,801.4118,.01,"DT")
3000303
"^DD",801.41,801.4118,.01,"V",0)
^.12P^9^9
"^DD",801.41,801.4118,.01,"V",1,0)
9999999.09^EDUCATION TOPICS^5^ED^n^n
"^DD",801.41,801.4118,.01,"V",2,0)
9999999.14^IMMUNIZATIONS^10^IM^n^n
"^DD",801.41,801.4118,.01,"V",3,0)
9999999.28^SKIN TEST^15^ST^n^n
"^DD",801.41,801.4118,.01,"V",4,0)
9999999.15^EXAM^20^EX^n^n
"^DD",801.41,801.4118,.01,"V",5,0)
9999999.64^HEALTH FACTORS^25^HF^y^n
"^DD",801.41,801.4118,.01,"V",5,1)
S DIC("S")="I $P(^(0),U,10)'=""C"""
"^DD",801.41,801.4118,.01,"V",5,2)
Health Factor categories are not allowed.
"^DD",801.41,801.4118,.01,"V",6,0)
81^PROCEDURE^30^CPT^n^n
"^DD",801.41,801.4118,.01,"V",7,0)
80^ICD9 DIAGNOSIS^35^ICD9^n^n
"^DD",801.41,801.4118,.01,"V",8,0)
120.51^VITAL TYPE^40^VM^n^n
"^DD",801.41,801.4118,.01,"V",9,0)
101.41^ORDER DIALOG^45^Q^n^n
"^DD",801.41,801.412,0)
COMPONENTS SUB-FIELD^^9^6
"^DD",801.41,801.412,0,"DT")
3000302
"^DD",801.41,801.412,0,"ID","WRITE")
N OR0,ORNM S OR0=^(0) I $P(OR0,U,2) S ORNM=$P($G(^PXRMD(801.41,+$P(OR0,U,2),0)),U) D:$L(ORNM) EN^DDIOL(ORNM,,"?10")
"^DD",801.41,801.412,0,"IX","B",801.412,.01)

"^DD",801.41,801.412,0,"IX","D",801.412,2)

"^DD",801.41,801.412,0,"IX","DAD1",801.412,.01)

"^DD",801.41,801.412,0,"NM","COMPONENTS")

"^DD",801.41,801.412,0,"UP")
801.41
"^DD",801.41,801.412,.01,0)
SEQUENCE^MNJ5,1^^0;1^K:+X'=X!(X>999.9)!(X<.1)!(X?.E1"."2N.N) X
"^DD",801.41,801.412,.01,1,0)
^.1
"^DD",801.41,801.412,.01,1,1,0)
801.412^B
"^DD",801.41,801.412,.01,1,1,1)
S ^PXRMD(801.41,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",801.41,801.412,.01,1,1,2)
K ^PXRMD(801.41,DA(1),10,"B",$E(X,1,30),DA)
"^DD",801.41,801.412,.01,1,2,0)
801.412^DAD1^MUMPS
"^DD",801.41,801.412,.01,1,2,1)
N PXRMP S PXRMP=$P(^PXRMD(801.41,DA(1),10,DA,0),U,11) S:PXRMP ^PXRMD(801.41,DA(1),10,"DAD",PXRMP,X,DA)=""
"^DD",801.41,801.412,.01,1,2,2)
N PXRMP S PXRMP=$P(^PXRMD(801.41,DA(1),10,DA,0),U,11) K:PXRMP ^PXRMD(801.41,DA(1),10,"DAD",PXRMP,X,DA)
"^DD",801.41,801.412,.01,1,2,"%D",0)
^^1^1^2990624^^
"^DD",801.41,801.412,.01,1,2,"%D",1,0)
Allows retrieval of 'child' prompts in sequence by parent.
"^DD",801.41,801.412,.01,1,2,"DT")
2990624
"^DD",801.41,801.412,.01,1,3,0)
801.41^AMM^MUMPS
"^DD",801.41,801.412,.01,1,3,1)
D REDOX^PXRMDD41
"^DD",801.41,801.412,.01,1,3,2)
D REDOX^PXRMDD41
"^DD",801.41,801.412,.01,1,3,"%D",0)
^^1^1^2990624^^
"^DD",801.41,801.412,.01,1,3,"%D",1,0)
Update TIMESTAMP whenever SEQUENCE is changed.
"^DD",801.41,801.412,.01,1,3,"DT")
2990624
"^DD",801.41,801.412,.01,3)
Type a Number between .1 and 999.9, 1 Decimal Digit
"^DD",801.41,801.412,.01,21,0)
^^2^2^3000112^^^^
"^DD",801.41,801.412,.01,21,1,0)
This field specifies the order in which this item will be displayed or
"^DD",801.41,801.412,.01,21,2,0)
processed.
"^DD",801.41,801.412,.01,"DT")
2990624
"^DD",801.41,801.412,2,0)
ITEM^R*P801.41'^PXRMD(801.41,^0;2^D SCREEN^PXRMDD41 D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",801.41,801.412,2,1,0)
^.1
"^DD",801.41,801.412,2,1,1,0)
801.41^AD
"^DD",801.41,801.412,2,1,1,1)
S ^PXRMD(801.41,"AD",$E(X,1,30),DA(1),DA)=""
"^DD",801.41,801.412,2,1,1,2)
K ^PXRMD(801.41,"AD",$E(X,1,30),DA(1),DA)
"^DD",801.41,801.412,2,1,1,"DT")
2950123
"^DD",801.41,801.412,2,1,2,0)
801.412^D
"^DD",801.41,801.412,2,1,2,1)
S ^PXRMD(801.41,DA(1),10,"D",$E(X,1,30),DA)=""
"^DD",801.41,801.412,2,1,2,2)
K ^PXRMD(801.41,DA(1),10,"D",$E(X,1,30),DA)
"^DD",801.41,801.412,2,1,2,"DT")
2950411
"^DD",801.41,801.412,2,1,3,0)
801.41^AMM2^MUMPS
"^DD",801.41,801.412,2,1,3,1)
D REDOX^PXRMDD41
"^DD",801.41,801.412,2,1,3,2)
D REDOX^PXRMDD41
"^DD",801.41,801.412,2,1,3,"%D",0)
^^1^1^2990624^^
"^DD",801.41,801.412,2,1,3,"%D",1,0)
Update TIMESTAMP whenever ITEM is changed.
"^DD",801.41,801.412,2,1,3,"DT")
2990624
"^DD",801.41,801.412,2,3)
Enter an dialog; a dialog that is an ancestor may not also be a sub-item. The dialog type of the sub-item must be valid for the ancestor.
"^DD",801.41,801.412,2,12)
The item must be valid for this dialog type.
"^DD",801.41,801.412,2,12.1)
D SCREEN^PXRMDD41
"^DD",801.41,801.412,2,21,0)
^.001^3^3^3000302^^^^
"^DD",801.41,801.412,2,21,1,0)
This field points to a dialog which is subordinate to this dialog.
"^DD",801.41,801.412,2,21,2,0)
NOTE:  The parent dialog menu or one of its ancestors may not be entered
"^DD",801.41,801.412,2,21,3,0)
as an item.
"^DD",801.41,801.412,2,"DT")
3000302
"^DD",801.41,801.412,6,0)
OVERRIDE PROMPT CAPTION^F^^0;6^K:$L(X)>30!($L(X)<3) X
"^DD",801.41,801.412,6,3)
This is the caption that should override the prompt's default caption.
"^DD",801.41,801.412,6,21,0)
^^3^3^2990923^
"^DD",801.41,801.412,6,21,1,0)
This text will override the caption for this component in the reminder
"^DD",801.41,801.412,6,21,2,0)
dialog, when the component is a prompt.  When the text is blank, the
"^DD",801.41,801.412,6,21,3,0)
caption from the prompt entry will be used.
"^DD",801.41,801.412,6,"DT")
2990923
"^DD",801.41,801.412,7,0)
START NEW LINE^S^1:YES;0:NO;^0;7^Q
"^DD",801.41,801.412,7,3)
Answer Y/N to control whether to prompt on a new line.
"^DD",801.41,801.412,7,21,0)
^^2^2^2990923^
"^DD",801.41,801.412,7,21,1,0)
This flag is used to allow the user to have some control of the display of
"^DD",801.41,801.412,7,21,2,0)
prompts related to a dialog element.
"^DD",801.41,801.412,7,"DT")
2990923
"^DD",801.41,801.412,8,0)
EXCLUDE FROM PN TEXT^S^1:YES;0:NO;^0;8^Q
"^DD",801.41,801.412,8,3)
Enter Y to stop the component activity from being added to the note text.
"^DD",801.41,801.412,8,21,0)
^^2^2^2991102^^
"^DD",801.41,801.412,8,21,1,0)
This flag is used to control whether or not a component will be excluded
"^DD",801.41,801.412,8,21,2,0)
from the progress note text when the component is acted upon.
"^DD",801.41,801.412,8,"DT")
2991102
"^DD",801.41,801.412,9,0)
REQUIRED^S^1:YES;0:NO;^0;9^Q
"^DD",801.41,801.412,9,"DT")
2991102
"^DD",801.41,801.4125,0)
DIALOG/PROGRESS NOTE TEXT SUB-FIELD^^.01^1
"^DD",801.41,801.4125,0,"DT")
2990628
"^DD",801.41,801.4125,0,"NM","DIALOG/PROGRESS NOTE TEXT")

"^DD",801.41,801.4125,0,"UP")
801.41
"^DD",801.41,801.4125,.01,0)
DIALOG/PROGRESS NOTE TEXT^W^^0;1^Q
"^DD",801.41,801.4125,.01,3)
Enter the lines that should be used in the Progress Note when this item is checked off.
"^DD",801.41,801.4125,.01,"DT")
3000503
"^DD",801.41,801.4135,0)
ALTERNATE PROGRESS NOTE TEXT SUB-FIELD^^.01^1
"^DD",801.41,801.4135,0,"DT")
3000209
"^DD",801.41,801.4135,0,"NM","ALTERNATE PROGRESS NOTE TEXT")

"^DD",801.41,801.4135,0,"UP")
801.41
"^DD",801.41,801.4135,.01,0)
ALTERNATE PROGRESS NOTE TEXT^W^^0;1^Q
"^DD",801.41,801.4135,.01,.1)

"^DD",801.41,801.4135,.01,3)
Enter text to appear on the progress note. Only required if the text on the progress note differs from the dialog text.
"^DD",801.41,801.4135,.01,21,0)
^^8^8^3000503^
"^DD",801.41,801.4135,.01,21,1,0)
This field is used to define an alternate text to add to the progress note
"^DD",801.41,801.4135,.01,21,2,0)
when the progress note text needs to be different from the dialog text.
"^DD",801.41,801.4135,.01,21,3,0)
(e.g., Dialog/Progress Note Text displayed is "Place Influenza Order", but
"^DD",801.41,801.4135,.01,21,4,0)
the Alternate Progress Note Text is "Ordered Influenza Vaccine at this
"^DD",801.41,801.4135,.01,21,5,0)
encounter.")
"^DD",801.41,801.4135,.01,21,6,0)
 
"^DD",801.41,801.4135,.01,21,7,0)
If there is no text in this alternate text field the dialog/progress note
"^DD",801.41,801.4135,.01,21,8,0)
text will be added to the progress note.
"^DD",801.41,801.4135,.01,"DT")
3000503
"^DD",801.42,801.42,0)
FIELD^^2^5
"^DD",801.42,801.42,0,"DDA")
N
"^DD",801.42,801.42,0,"DT")
2991101
"^DD",801.42,801.42,0,"IX","AB",801.422,.01)

"^DD",801.42,801.42,0,"IX","B",801.42,.01)

"^DD",801.42,801.42,0,"NM","REMINDER GUI PROCESS")

"^DD",801.42,801.42,0,"PT",801.45,.02)

"^DD",801.42,801.42,.01,0)
NAME^RFI^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
"^DD",801.42,801.42,.01,1,0)
^.1
"^DD",801.42,801.42,.01,1,1,0)
801.42^B
"^DD",801.42,801.42,.01,1,1,1)
S ^PXRMD(801.42,"B",$E(X,1,30),DA)=""
"^DD",801.42,801.42,.01,1,1,2)
K ^PXRMD(801.42,"B",$E(X,1,30),DA)
"^DD",801.42,801.42,.01,3)
Answer must be 1-30 characters in length.
"^DD",801.42,801.42,.01,21,0)
^^1^1^3000505^
"^DD",801.42,801.42,.01,21,1,0)
This is the name of a special process within the CPRS GUI.
"^DD",801.42,801.42,.01,"DT")
3000530
"^DD",801.42,801.42,.02,0)
RELATED OUTPUT ID^FI^^0;2^K:$L(X)>10!($L(X)<2) X
"^DD",801.42,801.42,.02,3)
Enter the output ID to associate with the process.
"^DD",801.42,801.42,.02,21,0)
^^2^2^2991012^
"^DD",801.42,801.42,.02,21,1,0)
This is the PCE DATA2PCE identifier, or an Order identifier, or other ID 
"^DD",801.42,801.42,.02,21,2,0)
to pass data on to an output process.
"^DD",801.42,801.42,.02,"DT")
3000530
"^DD",801.42,801.42,.03,0)
RELATED SOURCE FILE^FI^^0;3^K:$L(X)>15!($L(X)<2) X
"^DD",801.42,801.42,.03,3)
Enter the global which is the source of this process.
"^DD",801.42,801.42,.03,21,0)
^^1^1^2991028^^^
"^DD",801.42,801.42,.03,21,1,0)
This is usually a PCE V-file.
"^DD",801.42,801.42,.03,"DT")
3000530
"^DD",801.42,801.42,1,0)
DESCRIPTION^801.421^^1;0
"^DD",801.42,801.42,2,0)
RELATED REMINDER DIALOG^801.422P^^2;0
"^DD",801.42,801.421,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",801.42,801.421,0,"DT")
2991012
"^DD",801.42,801.421,0,"NM","DESCRIPTION")

"^DD",801.42,801.421,0,"UP")
801.42
"^DD",801.42,801.421,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",801.42,801.421,.01,3)
Enter a description of what the GUI will do for this process.
"^DD",801.42,801.421,.01,21,0)
^^1^1^2991012^
"^DD",801.42,801.421,.01,21,1,0)
This describes in general terms the GUI activity.
"^DD",801.42,801.421,.01,"DT")
2991012
"^DD",801.42,801.422,0)
RELATED REMINDER DIALOG SUB-FIELD^^.01^1
"^DD",801.42,801.422,0,"DT")
2991028
"^DD",801.42,801.422,0,"IX","B",801.422,.01)

"^DD",801.42,801.422,0,"NM","RELATED REMINDER DIALOG")

"^DD",801.42,801.422,0,"UP")
801.42
"^DD",801.42,801.422,.01,0)
RELATED REMINDER DIALOG^MP801.41'^PXRMD(801.41,^0;1^Q
"^DD",801.42,801.422,.01,1,0)
^.1^^-1
"^DD",801.42,801.422,.01,1,1,0)
801.422^B
"^DD",801.42,801.422,.01,1,1,1)
S ^PXRMD(801.42,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",801.42,801.422,.01,1,1,2)
K ^PXRMD(801.42,DA(1),2,"B",$E(X,1,30),DA)
"^DD",801.42,801.422,.01,1,2,0)
801.42^AB
"^DD",801.42,801.422,.01,1,2,1)
S ^PXRMD(801.42,"AB",$E(X,1,30),DA(1),DA)=""
"^DD",801.42,801.422,.01,1,2,2)
K ^PXRMD(801.42,"AB",$E(X,1,30),DA(1),DA)
"^DD",801.42,801.422,.01,1,2,"DT")
2991201
"^DD",801.42,801.422,.01,3)
Enter the Reminder Dialogs that use this GUI Process.
"^DD",801.42,801.422,.01,21,0)
^^3^3^3000505^
"^DD",801.42,801.422,.01,21,1,0)
This multiple allows the CPRS GUI Process to be related to a Reminder
"^DD",801.42,801.422,.01,21,2,0)
Dialog. When the Reminder Dialog is passed to CPRS GUI, the CPRS GUI
"^DD",801.42,801.422,.01,21,3,0)
Process will be passed also.
"^DD",801.42,801.422,.01,"DT")
3000107
"^DD",801.43,801.43,0)
FIELD^^.04^4
"^DD",801.43,801.43,0,"DDA")
N
"^DD",801.43,801.43,0,"DT")
2991005
"^DD",801.43,801.43,0,"IX","AC",801.43,.02)

"^DD",801.43,801.43,0,"IX","B",801.43,.01)

"^DD",801.43,801.43,0,"NM","REMINDER FINDING ITEM PARAMETER")

"^DD",801.43,801.43,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",801.43,801.43,.01,.1)

"^DD",801.43,801.43,.01,1,0)
^.1
"^DD",801.43,801.43,.01,1,1,0)
801.43^B
"^DD",801.43,801.43,.01,1,1,1)
S ^PXRMD(801.43,"B",$E(X,1,30),DA)=""
"^DD",801.43,801.43,.01,1,1,2)
K ^PXRMD(801.43,"B",$E(X,1,30),DA)
"^DD",801.43,801.43,.01,3)
Answer must be 3-30 characters in length.
"^DD",801.43,801.43,.01,21,0)
^^8^8^3000505^
"^DD",801.43,801.43,.01,21,1,0)
Finding item parameters can be created for individual finding items. These
"^DD",801.43,801.43,.01,21,2,0)
parameters will be used in preference to the REMINDER FINDING TYPE
"^DD",801.43,801.43,.01,21,3,0)
PARAMETER file when auto generating dialog. More than one parameter may be
"^DD",801.43,801.43,.01,21,4,0)
created for a given finding item.
"^DD",801.43,801.43,.01,21,5,0)
 
"^DD",801.43,801.43,.01,21,6,0)
The parameter specifies the default dialog for a finding item. Dialog may
"^DD",801.43,801.43,.01,21,7,0)
be an individual question (dialog item) or a group of questions (dialog
"^DD",801.43,801.43,.01,21,8,0)
group).
"^DD",801.43,801.43,.01,"DT")
2990902
"^DD",801.43,801.43,.01,"V",0)
^.12P
"^DD",801.43,801.43,.02,0)
FINDING ITEM^RV^^0;2^Q
"^DD",801.43,801.43,.02,1,0)
^.1
"^DD",801.43,801.43,.02,1,1,0)
801.43^AC
"^DD",801.43,801.43,.02,1,1,1)
S ^PXRMD(801.43,"AC",$E(X,1,30),DA)=""
"^DD",801.43,801.43,.02,1,1,2)
K ^PXRMD(801.43,"AC",$E(X,1,30),DA)
"^DD",801.43,801.43,.02,1,1,"%D",0)
^^2^2^2990924^
"^DD",801.43,801.43,.02,1,1,"%D",1,0)
This cross reference is used by the dialog build to see if any finding
"^DD",801.43,801.43,.02,1,1,"%D",2,0)
item dialog exists for a reminder finding item.
"^DD",801.43,801.43,.02,1,1,"DT")
2990924
"^DD",801.43,801.43,.02,3)
Enter the individual reminder finding item.
"^DD",801.43,801.43,.02,21,0)
^^4^4^3000505^
"^DD",801.43,801.43,.02,21,1,0)
The individual finding item corresponds to the reminder finding item. 
"^DD",801.43,801.43,.02,21,2,0)
 
"^DD",801.43,801.43,.02,21,3,0)
Auto generation of dialog from the reminder definition uses the dialog
"^DD",801.43,801.43,.02,21,4,0)
in this file in preference to the REMINDER FINDING TYPE PARAMETER file.
"^DD",801.43,801.43,.02,"DT")
2990924
"^DD",801.43,801.43,.02,"V",0)
^.12P^16^9
"^DD",801.43,801.43,.02,"V",4,0)
50^DRUG^5^DR^^n
"^DD",801.43,801.43,.02,"V",5,0)
9999999.09^EDUCATION TOPIC^10^ED^^n
"^DD",801.43,801.43,.02,"V",6,0)
9999999.15^EXAM^15^EX^^n
"^DD",801.43,801.43,.02,"V",7,0)
9999999.64^HEALTH FACTOR^20^HF^^n
"^DD",801.43,801.43,.02,"V",8,0)
9999999.14^IMMUNIZATION^25^IM^^n
"^DD",801.43,801.43,.02,"V",10,0)
601^MENTAL HEALTH INSTRUMENT^35^MH^^n
"^DD",801.43,801.43,.02,"V",11,0)
101.43^ORDERABLE ITEM^40^OI^^n
"^DD",801.43,801.43,.02,"V",13,0)
9999999.28^SKIN TEST^65^ST^^n
"^DD",801.43,801.43,.02,"V",16,0)
120.51^VITAL MEASUREMENT^80^VM^^n
"^DD",801.43,801.43,.03,0)
DISABLE^S^1:DISABLED;^0;3^Q
"^DD",801.43,801.43,.03,3)
Enter 1 to disable finding item dialog.
"^DD",801.43,801.43,.03,21,0)
^^1^1^2990903^^
"^DD",801.43,801.43,.03,21,1,0)
Disabled finding item dialog entries are excluded from dialog generation.
"^DD",801.43,801.43,.03,"DT")
2990902
"^DD",801.43,801.43,.04,0)
DIALOG ELEMENT/GROUP^R*P801.41'^PXRMD(801.41,^0;4^S DIC("S")="I ""GE""[$P(^(0),U,4)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",801.43,801.43,.04,3)
Enter the Dialog Element or Dialog Group that represents this finding item. 
"^DD",801.43,801.43,.04,12)
The selected dialog must be a dialog group or dialog item.
"^DD",801.43,801.43,.04,12.1)
S DIC("S")="I ""GE""[$P(^(0),U,4)"
"^DD",801.43,801.43,.04,21,0)
^^1^1^3000111^^^^
"^DD",801.43,801.43,.04,21,1,0)
This is the dialog group or dialog element for this finding item.
"^DD",801.43,801.43,.04,"DT")
2991005
"^DD",801.45,801.45,0)
FIELD^^.02^3
"^DD",801.45,801.45,0,"DDA")
N
"^DD",801.45,801.45,0,"DT")
2991213
"^DD",801.45,801.45,0,"IX","B",801.45,.01)

"^DD",801.45,801.45,0,"NM","REMINDER FINDING TYPE PARAMETER")

"^DD",801.45,801.45,0,"PT",801.41,14)

"^DD",801.45,801.45,.01,0)
FILE ID^RFI^^0;1^K:$L(X)>10!($L(X)<1)!'(X'?1P.E) X
"^DD",801.45,801.45,.01,1,0)
^.1
"^DD",801.45,801.45,.01,1,1,0)
801.45^B
"^DD",801.45,801.45,.01,1,1,1)
S ^PXRMD(801.45,"B",$E(X,1,30),DA)=""
"^DD",801.45,801.45,.01,1,1,2)
K ^PXRMD(801.45,"B",$E(X,1,30),DA)
"^DD",801.45,801.45,.01,3)
Answer must be 1-10 characters in length.
"^DD",801.45,801.45,.01,21,0)
^^11^11^3000511^
"^DD",801.45,801.45,.01,21,1,0)
This is the type of finding. The options are:
"^DD",801.45,801.45,.01,21,2,0)
 
"^DD",801.45,801.45,.01,21,3,0)
   CPT  Procedure 
"^DD",801.45,801.45,.01,21,4,0)
   ED   Education
"^DD",801.45,801.45,.01,21,5,0)
   EX   Examination
"^DD",801.45,801.45,.01,21,6,0)
   HF   Health Factor
"^DD",801.45,801.45,.01,21,7,0)
   IM   Immunization
"^DD",801.45,801.45,.01,21,8,0)
   OI   Orderable Item
"^DD",801.45,801.45,.01,21,9,0)
   POV  Diagnosis 
"^DD",801.45,801.45,.01,21,10,0)
   ST   Skin Test
"^DD",801.45,801.45,.01,21,11,0)
   VM   Vital Measurement
"^DD",801.45,801.45,.01,"DT")
3000530
"^DD",801.45,801.45,.02,0)
RELATED GUI PROCESS^P801.42'^PXRMD(801.42,^0;2^Q
"^DD",801.45,801.45,.02,3)
Enter the GUI process that will process this type of finding.
"^DD",801.45,801.45,.02,21,0)
^^1^1^2991101^
"^DD",801.45,801.45,.02,21,1,0)
This is the GUI process that supports processing of this type of finding.
"^DD",801.45,801.45,.02,"DT")
2991101
"^DD",801.45,801.45,1,0)
RESOLUTION STATUS DEFAULTS^801.451P^^1;0
"^DD",801.45,801.45,1,21,0)
^.001^3^3^3000505^^^^
"^DD",801.45,801.45,1,21,1,0)
This multiple allows unique criteria to be set
"^DD",801.45,801.45,1,21,2,0)
for default auto-generation of findings text
"^DD",801.45,801.45,1,21,3,0)
to use to create a default reminder dialog.
"^DD",801.45,801.45,1,"DT")
2991029
"^DD",801.45,801.451,0)
RESOLUTION STATUS DEFAULTS SUB-FIELD^^1^5
"^DD",801.45,801.451,0,"DT")
2991213
"^DD",801.45,801.451,0,"IX","B",801.451,.01)

"^DD",801.45,801.451,0,"NM","RESOLUTION STATUS DEFAULTS")

"^DD",801.45,801.451,0,"UP")
801.45
"^DD",801.45,801.451,.01,0)
RESOLUTION STATUS^MRP801.9'I^PXRMD(801.9,^0;1^Q
"^DD",801.45,801.451,.01,1,0)
^.1
"^DD",801.45,801.451,.01,1,1,0)
801.451^B
"^DD",801.45,801.451,.01,1,1,1)
S ^PXRMD(801.45,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",801.45,801.451,.01,1,1,2)
K ^PXRMD(801.45,DA(1),1,"B",$E(X,1,30),DA)
"^DD",801.45,801.451,.01,3)
Enter the resolution status that should have default parameters.
"^DD",801.45,801.451,.01,21,0)
^^2^2^2990902^
"^DD",801.45,801.451,.01,21,1,0)
This multiple is used to allow default parameters to be defined for
"^DD",801.45,801.451,.01,21,2,0)
each file and resolution status combination.
"^DD",801.45,801.451,.01,"DT")
3000530
"^DD",801.45,801.451,1,0)
DISABLE RESOLUTION STATUS^S^1:DISABLED;^0;2^Q
"^DD",801.45,801.451,1,3)
Enter 1 to disable sentence generation for this status and finding type.
"^DD",801.45,801.451,1,21,0)
^^2^2^2991101^^^^
"^DD",801.45,801.451,1,21,1,0)
This Y/N flag determines whether a sentence will be generated to represent
"^DD",801.45,801.451,1,21,2,0)
this resolution status within the finding type.
"^DD",801.45,801.451,1,"DT")
2991101
"^DD",801.45,801.451,3,0)
PREFIX TEXT^F^^3;1^K:$L(X)>150!($L(X)<3) X
"^DD",801.45,801.451,3,3)
Answer must be 3-150 characters in length.
"^DD",801.45,801.451,3,21,0)
^^1^1^2990902^
"^DD",801.45,801.451,3,21,1,0)
This is the text to add to the front of the name of the finding item.
"^DD",801.45,801.451,3,"DT")
2990902
"^DD",801.45,801.451,4,0)
SUFFIX TEXT^F^^4;1^K:$L(X)>150!($L(X)<1) X
"^DD",801.45,801.451,4,3)
Answer must be 1-150 characters in length.
"^DD",801.45,801.451,4,21,0)
^^2^2^2991213^^^
"^DD",801.45,801.451,4,21,1,0)
This is the text that will be added to the sentence after the finding
"^DD",801.45,801.451,4,21,2,0)
item name.
"^DD",801.45,801.451,4,"DT")
2991213
"^DD",801.45,801.451,5,0)
ADDITIONAL PROMPTS^801.4515P^^5;0
"^DD",801.45,801.451,5,12)
Only prompts or forced values allowed
"^DD",801.45,801.451,5,12.1)
S DIC("S")="I ""PF""[$P(^(0),U,4)"
"^DD",801.45,801.451,5,21,0)
^^2^2^2991102^^
"^DD",801.45,801.451,5,21,1,0)
These are the additional prompts that should be asked for the finding type
"^DD",801.45,801.451,5,21,2,0)
and resolution status.
"^DD",801.45,801.4515,0)
ADDITIONAL PROMPTS SUB-FIELD^^6^7
"^DD",801.45,801.4515,0,"DT")
2991101
"^DD",801.45,801.4515,0,"IX","B",801.4515,.01)

"^DD",801.45,801.4515,0,"NM","ADDITIONAL PROMPTS")

"^DD",801.45,801.4515,0,"UP")
801.451
"^DD",801.45,801.4515,.01,0)
ADDITIONAL PROMPTS^M*P801.41'^PXRMD(801.41,^0;1^S DIC("S")="I ""PF""[$P(^(0),U,4)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",801.45,801.4515,.01,1,0)
^.1
"^DD",801.45,801.4515,.01,1,1,0)
801.4515^B
"^DD",801.45,801.4515,.01,1,1,1)
S ^PXRMD(801.45,DA(2),1,DA(1),5,"B",$E(X,1,30),DA)=""
"^DD",801.45,801.4515,.01,1,1,2)
K ^PXRMD(801.45,DA(2),1,DA(1),5,"B",$E(X,1,30),DA)
"^DD",801.45,801.4515,.01,3)
Enter the additional prompts to ask for this resolution type.
"^DD",801.45,801.4515,.01,21,0)
^^3^3^2990902^
"^DD",801.45,801.4515,.01,21,1,0)
This multiple allows prompts to be identified
"^DD",801.45,801.4515,.01,21,2,0)
for including in the default auto-generation
"^DD",801.45,801.4515,.01,21,3,0)
process for the reminder finding type.
"^DD",801.45,801.4515,.01,"DT")
2990902
"^DD",801.45,801.4515,1,0)
REQUIRED^S^1:REQUIRED;^0;2^Q
"^DD",801.45,801.4515,1,3)
Enter 1 to make this prompt be required to answer.
"^DD",801.45,801.4515,1,21,0)
^^1^1^2991101^^
"^DD",801.45,801.4515,1,21,1,0)
Required additional prompts may not be disabled.
"^DD",801.45,801.4515,1,"DT")
2991101
"^DD",801.45,801.4515,2,0)
DISABLE ADDITIONAL PROMPT^SX^1:DISABLE;^0;3^I $P(^PXRMD(801.45,DA(2),1,DA(1),5,DA,0),U,2) K X
"^DD",801.45,801.4515,2,3)
Enter 1 to disable additional prompt.
"^DD",801.45,801.4515,2,21,0)
^^3^3^2990903^^^^
"^DD",801.45,801.4515,2,21,1,0)
Disabled additional prompts will be ignored in dialog auto generation.
"^DD",801.45,801.4515,2,21,2,0)
 
"^DD",801.45,801.4515,2,21,3,0)
Mandatory additional prompts cannot be disabled.
"^DD",801.45,801.4515,2,"DT")
2990903
"^DD",801.45,801.4515,3,0)
SEQUENCE^NJ1,0^^0;4^K:+X'=X!(X>9)!(X<1)!(X?.E1"."1N.N) X
"^DD",801.45,801.4515,3,3)
Type a number from 1-9 for the sequence to present the prompt.
"^DD",801.45,801.4515,3,21,0)
^^3^3^2991101^
"^DD",801.45,801.4515,3,21,1,0)
This field allows the sequence of the prompts to be specified.  If they
"^DD",801.45,801.4515,3,21,2,0)
are not specified here, the prompts will be in the sequence they appear 
"^DD",801.45,801.4515,3,21,3,0)
in the additional prompts multiple.
"^DD",801.45,801.4515,3,"DT")
2991101
"^DD",801.45,801.4515,4,0)
OVERRIDE PROMPT CAPTION^F^^0;5^K:$L(X)>30!($L(X)<1) X
"^DD",801.45,801.4515,4,3)
Enter the caption to use for this particular prompt.
"^DD",801.45,801.4515,4,21,0)
^^1^1^2991101^
"^DD",801.45,801.4515,4,21,1,0)
This field defines the caption that will be presented with this prompt.
"^DD",801.45,801.4515,4,"DT")
2991101
"^DD",801.45,801.4515,5,0)
START NEW LINE^S^1:YES;0:NO;^0;6^Q
"^DD",801.45,801.4515,5,3)
Enter 1 to have the prompt asked on a new line.
"^DD",801.45,801.4515,5,21,0)
^^2^2^2991101^
"^DD",801.45,801.4515,5,21,1,0)
The additional prompts can all appear on the same line, or be defined
"^DD",801.45,801.4515,5,21,2,0)
for new line presentation by the coordinator.
"^DD",801.45,801.4515,5,"DT")
2991101
"^DD",801.45,801.4515,6,0)
EXCLUDE FROM PN TEXT^S^1:YES;0:NO;^0;7^Q
"^DD",801.45,801.4515,6,3)
Enter 1 to include the prompt information in the progress note.
"^DD",801.45,801.4515,6,21,0)
^^2^2^2991102^^
"^DD",801.45,801.4515,6,21,1,0)
This field controls whether the prompt and answer will be added to the
"^DD",801.45,801.4515,6,21,2,0)
progress note text.
"^DD",801.45,801.4515,6,"DT")
2991102
"^DD",801.9,801.9,0)
FIELD^^10^8
"^DD",801.9,801.9,0,"DDA")
N
"^DD",801.9,801.9,0,"DT")
3000511
"^DD",801.9,801.9,0,"IX","B",801.9,.01)

"^DD",801.9,801.9,0,"NM","REMINDER RESOLUTION STATUS")

"^DD",801.9,801.9,0,"PT",801.41,13)

"^DD",801.9,801.9,0,"PT",801.451,.01)

"^DD",801.9,801.9,0,"PT",801.9001,.01)

"^DD",801.9,801.9,0,"PT",801.9501,.01)

"^DD",801.9,801.9,.01,0)
NAME^RF^^0;1^K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X
"^DD",801.9,801.9,.01,1,0)
^.1^^-1
"^DD",801.9,801.9,.01,1,1,0)
801.9^B
"^DD",801.9,801.9,.01,1,1,1)
S ^PXRMD(801.9,"B",$E(X,1,30),DA)=""
"^DD",801.9,801.9,.01,1,1,2)
K ^PXRMD(801.9,"B",$E(X,1,30),DA)
"^DD",801.9,801.9,.01,3)
Answer must be 3-40 characters in length.
"^DD",801.9,801.9,.01,21,0)
^.001^4^4^3000613^^^^
"^DD",801.9,801.9,.01,21,1,0)
This is a name that can be used to group reminder resolutions.  Local
"^DD",801.9,801.9,.01,21,2,0)
resolution status names need to be mapped to a national resolution status.
"^DD",801.9,801.9,.01,21,3,0)
The Health Factor findings are the findings that may be mapped to the
"^DD",801.9,801.9,.01,21,4,0)
resolution statuses.
"^DD",801.9,801.9,.01,"DEL",1,0)
I $P($G(^PXRMD(801.9,DA,0)),U,6) W !,*7,"CANNOT DELETE A NATIONAL STATUS"
"^DD",801.9,801.9,.01,"DT")
3000208
"^DD",801.9,801.9,.02,0)
ABBREVIATED NAME^F^^0;2^K:$L(X)>20!($L(X)<3) X
"^DD",801.9,801.9,.02,3)
Answer must be 3-20 characters in length.
"^DD",801.9,801.9,.02,21,0)
^^1^1^3000511^
"^DD",801.9,801.9,.02,21,1,0)
This is the abbreviated name for the resolution status.
"^DD",801.9,801.9,.02,"DT")
2990609
"^DD",801.9,801.9,.03,0)
REPORT COLUMN HEADING^F^^0;3^K:$L(X)>99!($L(X)<1) X
"^DD",801.9,801.9,.03,3)
Answer must be 1-99 characters in length.
"^DD",801.9,801.9,.03,21,0)
^^1^1^3000511^
"^DD",801.9,801.9,.03,21,1,0)
This is the print column heading for use in reminder reports.
"^DD",801.9,801.9,.03,"DT")
2990609
"^DD",801.9,801.9,.04,0)
INACTIVE FLAG^S^1:INACTIVE;^0;4^Q
"^DD",801.9,801.9,.04,21,0)
^^2^2^3000511^
"^DD",801.9,801.9,.04,21,1,0)
This flag should be set if the resolution status should no longer be used
"^DD",801.9,801.9,.04,21,2,0)
in reminder dialogs.
"^DD",801.9,801.9,.04,"DT")
2990609
"^DD",801.9,801.9,.05,0)
CREATOR^P200'^VA(200,^0;5^Q
"^DD",801.9,801.9,.05,21,0)
^^1^1^3000511^
"^DD",801.9,801.9,.05,21,1,0)
Person who created the resolution status. Applies only to local statuses.
"^DD",801.9,801.9,.05,"DT")
3000511
"^DD",801.9,801.9,.06,0)
RESTRICTED EDITING^S^1:RESTRICTED;^0;6^Q
"^DD",801.9,801.9,.06,21,0)
^.001^2^2^3000511^^
"^DD",801.9,801.9,.06,21,1,0)
Nationally distributed statuses are released with this field set to
"^DD",801.9,801.9,.06,21,2,0)
restrict editing. The national statuses may not be deleted.
"^DD",801.9,801.9,.06,"DT")
2990609
"^DD",801.9,801.9,1,0)
DESCRIPTION^801.901^^1;0
"^DD",801.9,801.9,1,21,0)
^^1^1^3000511^
"^DD",801.9,801.9,1,21,1,0)
This is a brief description of the resolution status.
"^DD",801.9,801.9,10,0)
SUB-STATUS^801.9001P^^10;0
"^DD",801.9,801.9,10,12)
RESOLUTION CANNOT POINT TO ITSELF
"^DD",801.9,801.9,10,12.1)
S ^DIC("S")="I ^(0)'=^PXRMD(801.9,DA,0)"
"^DD",801.9,801.9,10,21,0)
^.001^3^3^3000613^^
"^DD",801.9,801.9,10,21,1,0)
Locally created resolution statuses must be a sub-status of a nationally
"^DD",801.9,801.9,10,21,2,0)
released resolution status. This field contains the local statuses that
"^DD",801.9,801.9,10,21,3,0)
belong to the national status.
"^DD",801.9,801.9001,0)
SUB-STATUS SUB-FIELD^^.01^1
"^DD",801.9,801.9001,0,"DT")
3000208
"^DD",801.9,801.9001,0,"IX","B",801.9001,.01)

"^DD",801.9,801.9001,0,"NM","SUB-STATUS")

"^DD",801.9,801.9001,0,"UP")
801.9
"^DD",801.9,801.9001,.01,0)
SUB-STATUS^M*P801.9'^PXRMD(801.9,^0;1^S DIC("S")="I ($P(^(0),U,6)'=1)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",801.9,801.9001,.01,1,0)
^.1^^-1
"^DD",801.9,801.9001,.01,1,1,0)
801.9001^B
"^DD",801.9,801.9001,.01,1,1,1)
S ^PXRMD(801.9,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",801.9,801.9001,.01,1,1,2)
K ^PXRMD(801.9,DA(1),10,"B",$E(X,1,30),DA)
"^DD",801.9,801.9001,.01,12)
Substatus cannot itself be a national status.
"^DD",801.9,801.9001,.01,12.1)
S DIC("S")="I ($P(^(0),U,6)'=1)"
"^DD",801.9,801.9001,.01,"DT")
3000208
"^DD",801.9,801.901,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",801.9,801.901,0,"DT")
2990609
"^DD",801.9,801.901,0,"NM","DESCRIPTION")

"^DD",801.9,801.901,0,"UP")
801.9
"^DD",801.9,801.901,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",801.9,801.901,.01,"DT")
2990609
"^DD",801.95,801.95,0)
FIELD^^.02^2
"^DD",801.95,801.95,0,"DDA")
N
"^DD",801.95,801.95,0,"DT")
2990902
"^DD",801.95,801.95,0,"IX","B",801.95,.01)

"^DD",801.95,801.95,0,"NM","HEALTH FACTOR RESOLUTION")

"^DD",801.95,801.95,.01,0)
NAME^RP9999999.64X^AUTTHF(^0;1^S:$D(X) DINUM=X
"^DD",801.95,801.95,.01,.1)
HEALTH FACTOR RESOLUTION
"^DD",801.95,801.95,.01,1,0)
^.1
"^DD",801.95,801.95,.01,1,1,0)
801.95^B
"^DD",801.95,801.95,.01,1,1,1)
S ^PXRMD(801.95,"B",$E(X,1,30),DA)=""
"^DD",801.95,801.95,.01,1,1,2)
K ^PXRMD(801.95,"B",$E(X,1,30),DA)
"^DD",801.95,801.95,.01,3)

"^DD",801.95,801.95,.01,21,0)
^^8^8^3000505^
"^DD",801.95,801.95,.01,21,1,0)
A list of reminder resolution statuses by health factor is maintained for
"^DD",801.95,801.95,.01,21,2,0)
use in automatic generation of reminder dialog
"^DD",801.95,801.95,.01,21,3,0)
 
"^DD",801.95,801.95,.01,21,4,0)
Dialog defaults for health factors are held in the REMINDER FINDING TYPE
"^DD",801.95,801.95,.01,21,5,0)
PARAMETER file (#801.45) for every resolution status. The automatic
"^DD",801.95,801.95,.01,21,6,0)
generation process for a health factor reminder finding will only use the
"^DD",801.95,801.95,.01,21,7,0)
dialog defaults for the resolution statuses in the HEALTH FACTOR
"^DD",801.95,801.95,.01,21,8,0)
RESOLUTION file.
"^DD",801.95,801.95,.01,"DT")
3000505
"^DD",801.95,801.95,.02,0)
RESOLUTION STATUS^801.9501PA^^1;0
"^DD",801.95,801.95,.02,21,0)
^^2^2^3000505^
"^DD",801.95,801.95,.02,21,1,0)
Default dialog from the REMINDER FINDING TYPE PARAMETER file will only be
"^DD",801.95,801.95,.02,21,2,0)
generated for resolution statuses in this field.
"^DD",801.95,801.9501,0)
RESOLUTION STATUS SUB-FIELD^^.01^1
"^DD",801.95,801.9501,0,"DT")
2990902
"^DD",801.95,801.9501,0,"IX","B",801.9501,.01)

"^DD",801.95,801.9501,0,"NM","RESOLUTION STATUS")

"^DD",801.95,801.9501,0,"UP")
801.95
"^DD",801.95,801.9501,.01,0)
RESOLUTION STATUS^MRP801.9'^PXRMD(801.9,^0;1^Q
"^DD",801.95,801.9501,.01,1,0)
^.1
"^DD",801.95,801.9501,.01,1,1,0)
801.9501^B
"^DD",801.95,801.9501,.01,1,1,1)
S ^PXRMD(801.95,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",801.95,801.9501,.01,1,1,2)
K ^PXRMD(801.95,DA(1),1,"B",$E(X,1,30),DA)
"^DD",801.95,801.9501,.01,"DT")
2990902
"^DD",810.1,810.1,0)
FIELD^^12^19
"^DD",810.1,810.1,0,"DDA")
N
"^DD",810.1,810.1,0,"DT")
2990816
"^DD",810.1,810.1,0,"ID",1.9)
W "   ",$P(^(0),U,2)
"^DD",810.1,810.1,0,"IX","B",810.1,.01)

"^DD",810.1,810.1,0,"NM","REMINDER REPORT TEMPLATE")

"^DD",810.1,810.1,0,"VRPK")
PX
"^DD",810.1,810.1,.01,0)
NAME^RFX^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X D NAME^PXRMXTU
"^DD",810.1,810.1,.01,.1)
TEMPLATE NAME
"^DD",810.1,810.1,.01,1,0)
^.1
"^DD",810.1,810.1,.01,1,1,0)
810.1^B
"^DD",810.1,810.1,.01,1,1,1)
S ^PXRMPT(810.1,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.1,.01,1,1,2)
K ^PXRMPT(810.1,"B",$E(X,1,30),DA)
"^DD",810.1,810.1,.01,3)
Answer must be 3-30 characters in length.
"^DD",810.1,810.1,.01,21,0)
^.001^8^8^3000505^^^^
"^DD",810.1,810.1,.01,21,1,0)
The template name is displayed on the report criteria page of the
"^DD",810.1,810.1,.01,21,2,0)
reminder report and is used when selecting templates.
"^DD",810.1,810.1,.01,21,3,0)

"^DD",810.1,810.1,.01,21,4,0)
When editing an existing template, this field should ONLY be amended if you
"^DD",810.1,810.1,.01,21,5,0)
wish to RENAME the template. To make a COPY of a template under a new name
"^DD",810.1,810.1,.01,21,6,0)
(leaving the original intact), leave this field unchanged and enter a
"^DD",810.1,810.1,.01,21,7,0)
new name at the prompt 'STORE REPORT LOGIC IN TEMPLATE NAME:'. To DELETE a
"^DD",810.1,810.1,.01,21,8,0)
template, enter @ at template name.
"^DD",810.1,810.1,.01,23,0)
^.001^1^1^3000505^^^^
"^DD",810.1,810.1,.01,23,1,0)
Used as an identifier to select templates.
"^DD",810.1,810.1,.01,"DT")
2990420
"^DD",810.1,810.1,1.1,0)
PXRMTYP^RSI^Y:Reminders Satisfied PXRMY;X:Reminders Due PXRMX;^0;3^Q
"^DD",810.1,810.1,1.1,.1)
Reminder Report Type
"^DD",810.1,810.1,1.1,21,0)
^^3^3^2990609^
"^DD",810.1,810.1,1.1,21,1,0)
Templates are specific to the type of reminder report being run and are
"^DD",810.1,810.1,1.1,21,2,0)
not interchangeable since the parameter set required for different reports
"^DD",810.1,810.1,1.1,21,3,0)
varies. 
"^DD",810.1,810.1,1.1,23,0)
^^6^6^2990609^^
"^DD",810.1,810.1,1.1,23,1,0)
Report types are :
"^DD",810.1,810.1,1.1,23,2,0)
 
"^DD",810.1,810.1,1.1,23,3,0)
       X - used by PXRMX* routines for Reminders Due
"^DD",810.1,810.1,1.1,23,4,0)
       Y - used by PXRMY* routines for Reminders Satisfied
"^DD",810.1,810.1,1.1,23,5,0)
 
"^DD",810.1,810.1,1.1,23,6,0)
This field is maintained by the report program and may not be edited.
"^DD",810.1,810.1,1.1,"DT")
2990319
"^DD",810.1,810.1,1.2,0)
PXRMSEL^RS^L:Location;O:OE/RR team;P:Provider;T:PCMM team;I:Individual Patient;^0;4^Q
"^DD",810.1,810.1,1.2,.1)
PATIENT SAMPLE
"^DD",810.1,810.1,1.2,21,0)
^.001^14^14^3000505^^^
"^DD",810.1,810.1,1.2,21,1,0)
The patient sample defines the patient cohort. Listed below are the
"^DD",810.1,810.1,1.2,21,2,0)
parameters relevant to each sample type.
"^DD",810.1,810.1,1.2,21,3,0)
 
"^DD",810.1,810.1,1.2,21,4,0)
(I)ndividual Patients - A list of patients may be entered.
"^DD",810.1,810.1,1.2,21,5,0)
(L)ocations - Hospital Locations, Clinic Stops or Clinic Groups may be
"^DD",810.1,810.1,1.2,21,6,0)
              entered. Patients with encounters or appointments at these
"^DD",810.1,810.1,1.2,21,7,0)
              locations are selected for reporting.
"^DD",810.1,810.1,1.2,21,8,0)
(P)roviders - PCMM providers may be entered. Patients for these providers
"^DD",810.1,810.1,1.2,21,9,0)
              are selected for reporting. Either Primary/Care or All
"^DD",810.1,810.1,1.2,21,10,0)
              patients for the providers may be reported.
"^DD",810.1,810.1,1.2,21,11,0)
(T)eams     - PCMM teams may be entered. Patients allocated to these teams
"^DD",810.1,810.1,1.2,21,12,0)
              are selected for reporting
"^DD",810.1,810.1,1.2,21,13,0)
(O)E/RR     - OE/RR teams may be entered. Patients allocated to these
"^DD",810.1,810.1,1.2,21,14,0)
              teams are selected for reporting.
"^DD",810.1,810.1,1.2,23,0)
^^14^14^3000505^
"^DD",810.1,810.1,1.2,23,1,0)
Routine PXRMXT loads templates into local array for use by the report
"^DD",810.1,810.1,1.2,23,2,0)
routines. Each patient sample has only one associated array. The field
"^DD",810.1,810.1,1.2,23,3,0)
PXRMSEL decides which array is loaded. The local arrays correspond to the
"^DD",810.1,810.1,1.2,23,4,0)
field names in the template file.
"^DD",810.1,810.1,1.2,23,5,0)
 
"^DD",810.1,810.1,1.2,23,6,0)
e.g. 
"^DD",810.1,810.1,1.2,23,7,0)
PXRMSEL="I" patient entries in field PXRMPAT are loaded into array PXRMPAT
"^DD",810.1,810.1,1.2,23,8,0)
PXRMSEL="T" team entries in field PXRMPCM are loaded into array PXRMPCM
"^DD",810.1,810.1,1.2,23,9,0)
PXRMSEL="P" providers in field PXRMPRV are loaded into array PXRMPRV
"^DD",810.1,810.1,1.2,23,10,0)
PXRMSEL="O" team entries in PXRMOTM are loaded into array PXRMOTM
"^DD",810.1,810.1,1.2,23,11,0)
 
"^DD",810.1,810.1,1.2,23,12,0)
Note that except for the individual patient sample (PXRMSEL="I") the
"^DD",810.1,810.1,1.2,23,13,0)
template file does not hold patient identifiers. Lists of patients are
"^DD",810.1,810.1,1.2,23,14,0)
assembled by the report routines.
"^DD",810.1,810.1,1.2,"DT")
2990318
"^DD",810.1,810.1,1.3,0)
PXRMPRIM^S^P:Primary care patients only;A:All patients;^0;5^Q
"^DD",810.1,810.1,1.3,.1)
PRIMARY CARE ONLY OR ALL
"^DD",810.1,810.1,1.3,"DT")
2990316
"^DD",810.1,810.1,1.4,0)
PXRMREP^RSX^D:Detailed Report;S:Summary Report;^0;6^D PXRMREP^PXRMXTA
"^DD",810.1,810.1,1.4,.1)
REPORT TYPE
"^DD",810.1,810.1,1.4,21,0)
^^4^4^2990414^
"^DD",810.1,810.1,1.4,21,1,0)
The summary report displays the TOTAL number of patients with reminders
"^DD",810.1,810.1,1.4,21,2,0)
APPLICABLE or DUE from the patient sample selected.
"^DD",810.1,810.1,1.4,21,3,0)
 
"^DD",810.1,810.1,1.4,21,4,0)
The detailed report lists DUE patients by name and SSN.
"^DD",810.1,810.1,1.4,"DT")
2990607
"^DD",810.1,810.1,1.5,0)
PXRMLCSC^S^HA:All Outpatient Locations;HAI:All Inpatient Locations;HS:Selected Hospital Locations;CA:All Clinic Stops;CS:Selected Clinic Stops;GS:Selected Clinic Groups;^0;7^Q
"^DD",810.1,810.1,1.5,.1)
LOCATION TYPE
"^DD",810.1,810.1,1.5,"DT")
2990426
"^DD",810.1,810.1,1.6,0)
PXRMFD^SX^F:Future Appointments;P:Prior Visits;A:Admissions;C:Current Inpatients;^0;8^D INP^PXRMXTU
"^DD",810.1,810.1,1.6,.1)
TYPE OF ENCOUNTER
"^DD",810.1,810.1,1.6,"DT")
2990324
"^DD",810.1,810.1,1.9,0)
TITLE^RF^^0;2^K:$L(X)>40!($L(X)<5) X
"^DD",810.1,810.1,1.9,.1)
TITLE
"^DD",810.1,810.1,1.9,3)
Answer must be 5-40 characters in length.
"^DD",810.1,810.1,1.9,21,0)
^.001^3^3^3000505^^
"^DD",810.1,810.1,1.9,21,1,0)
A detailed report title may be defined when a template is created. This
"^DD",810.1,810.1,1.9,21,2,0)
should be a detailed description of the report and is displayed both on
"^DD",810.1,810.1,1.9,21,3,0)
the report criteria page and at template selection.
"^DD",810.1,810.1,1.9,23,0)
^.001^2^2^3000505^^
"^DD",810.1,810.1,1.9,23,1,0)
Detailed description of template. Used as an identifier when selecting
"^DD",810.1,810.1,1.9,23,2,0)
templates.
"^DD",810.1,810.1,1.9,"DT")
2990318
"^DD",810.1,810.1,2,0)
PXRMREM^810.12PA^^1;0
"^DD",810.1,810.1,2,"DT")
2990315
"^DD",810.1,810.1,3,0)
PXRMFAC^810.13PA^^6;0
"^DD",810.1,810.1,4,0)
PXRMPRV^810.14PA^^3;0
"^DD",810.1,810.1,4,"DT")
2990316
"^DD",810.1,810.1,5,0)
RUN^D^^7;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",810.1,810.1,5,"DT")
2990201
"^DD",810.1,810.1,6,0)
PXRMPAT^810.16PA^^2;0
"^DD",810.1,810.1,7,0)
PXRMOTM^810.17PA^^4;0
"^DD",810.1,810.1,8,0)
PXRMPCM^810.18PA^^5;0
"^DD",810.1,810.1,9,0)
PXRMSCAT^810.19SA^^8;0
"^DD",810.1,810.1,10,0)
PXRMLCHL^810.11PA^^9;0
"^DD",810.1,810.1,11,0)
PXRMCS^810.111PA^^10;0
"^DD",810.1,810.1,12,0)
PXRMCGRP^810.112PA^^11;0
"^DD",810.1,810.11,0)
PXRMLCHL SUB-FIELD^^.01^1
"^DD",810.1,810.11,0,"DT")
2990316
"^DD",810.1,810.11,0,"IX","B",810.11,.01)

"^DD",810.1,810.11,0,"NM","PXRMLCHL")

"^DD",810.1,810.11,0,"UP")
810.1
"^DD",810.1,810.11,.01,0)
LOCATION^MRP44'^SC(^0;1^Q
"^DD",810.1,810.11,.01,.1)
Hospital Location
"^DD",810.1,810.11,.01,1,0)
^.1
"^DD",810.1,810.11,.01,1,1,0)
810.11^B
"^DD",810.1,810.11,.01,1,1,1)
S ^PXRMPT(810.1,DA(1),9,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.11,.01,1,1,2)
K ^PXRMPT(810.1,DA(1),9,"B",$E(X,1,30),DA)
"^DD",810.1,810.11,.01,"DT")
2990316
"^DD",810.1,810.111,0)
PXRMCS SUB-FIELD^^.01^1
"^DD",810.1,810.111,0,"DT")
2990316
"^DD",810.1,810.111,0,"IX","B",810.111,.01)

"^DD",810.1,810.111,0,"NM","PXRMCS")

"^DD",810.1,810.111,0,"UP")
810.1
"^DD",810.1,810.111,.01,0)
STOP CODE^MRP40.7'^DIC(40.7,^0;1^Q
"^DD",810.1,810.111,.01,.1)
Clinic Stop Code
"^DD",810.1,810.111,.01,1,0)
^.1
"^DD",810.1,810.111,.01,1,1,0)
810.111^B
"^DD",810.1,810.111,.01,1,1,1)
S ^PXRMPT(810.1,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.111,.01,1,1,2)
K ^PXRMPT(810.1,DA(1),10,"B",$E(X,1,30),DA)
"^DD",810.1,810.111,.01,"DT")
2990316
"^DD",810.1,810.112,0)
PXRMCGRP SUB-FIELD^^.01^1
"^DD",810.1,810.112,0,"DT")
2990316
"^DD",810.1,810.112,0,"IX","B",810.112,.01)

"^DD",810.1,810.112,0,"NM","PXRMCGRP")

"^DD",810.1,810.112,0,"UP")
810.1
"^DD",810.1,810.112,.01,0)
CLINIC GROUP^MRP409.67'^SD(409.67,^0;1^Q
"^DD",810.1,810.112,.01,.1)
Clinic Group Code
"^DD",810.1,810.112,.01,1,0)
^.1
"^DD",810.1,810.112,.01,1,1,0)
810.112^B
"^DD",810.1,810.112,.01,1,1,1)
S ^PXRMPT(810.1,DA(1),11,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.112,.01,1,1,2)
K ^PXRMPT(810.1,DA(1),11,"B",$E(X,1,30),DA)
"^DD",810.1,810.112,.01,"DT")
2990316
"^DD",810.1,810.12,0)
PXRMREM SUB-FIELD^^.02^2
"^DD",810.1,810.12,0,"DT")
2990415
"^DD",810.1,810.12,0,"IX","B",810.12,.01)

"^DD",810.1,810.12,0,"NM","PXRMREM")

"^DD",810.1,810.12,0,"UP")
810.1
"^DD",810.1,810.12,.01,0)
REMINDER^MRP811.9'X^PXD(811.9,^0;1^D PXRMREM^PXRMXTA
"^DD",810.1,810.12,.01,.1)
Reminder
"^DD",810.1,810.12,.01,1,0)
^.1
"^DD",810.1,810.12,.01,1,1,0)
810.12^B
"^DD",810.1,810.12,.01,1,1,1)
S ^PXRMPT(810.1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.12,.01,1,1,2)
K ^PXRMPT(810.1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",810.1,810.12,.01,21,0)
^^2^2^2990415^^
"^DD",810.1,810.12,.01,21,1,0)
Enter the reminders to be evaluated in the order to be printed. If the
"^DD",810.1,810.12,.01,21,2,0)
report type is 'Detailed' only the first reminder will be used.
"^DD",810.1,810.12,.01,23,0)
^^1^1^2990415^^^^
"^DD",810.1,810.12,.01,23,1,0)
Reminder Definition file #811.9
"^DD",810.1,810.12,.01,"DT")
2990323
"^DD",810.1,810.12,.02,0)
DISPLAY ORDER^RNJ2,0^^0;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",810.1,810.12,.02,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",810.1,810.12,.02,21,0)
^^1^1^2990415^
"^DD",810.1,810.12,.02,21,1,0)
Enter the order in which the reminders should appear on the report.
"^DD",810.1,810.12,.02,"DT")
2990415
"^DD",810.1,810.13,0)
PXRMFAC SUB-FIELD^^.01^1
"^DD",810.1,810.13,0,"IX","B",810.13,.01)

"^DD",810.1,810.13,0,"NM","PXRMFAC")

"^DD",810.1,810.13,0,"UP")
810.1
"^DD",810.1,810.13,.01,0)
FACILITY^MP4'^DIC(4,^0;1^Q
"^DD",810.1,810.13,.01,.1)
Facility Code
"^DD",810.1,810.13,.01,1,0)
^.1
"^DD",810.1,810.13,.01,1,1,0)
810.13^B
"^DD",810.1,810.13,.01,1,1,1)
S ^PXRMPT(810.1,DA(1),6,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.13,.01,1,1,2)
K ^PXRMPT(810.1,DA(1),6,"B",$E(X,1,30),DA)
"^DD",810.1,810.13,.01,"DT")
2990316
"^DD",810.1,810.14,0)
PXRMPRV SUB-FIELD^^.01^1
"^DD",810.1,810.14,0,"DT")
2990316
"^DD",810.1,810.14,0,"IX","B",810.14,.01)

"^DD",810.1,810.14,0,"NM","PXRMPRV")

"^DD",810.1,810.14,0,"UP")
810.1
"^DD",810.1,810.14,.01,0)
PROVIDER^MRP200'^VA(200,^0;1^Q
"^DD",810.1,810.14,.01,1,0)
^.1
"^DD",810.1,810.14,.01,1,1,0)
810.14^B
"^DD",810.1,810.14,.01,1,1,1)
S ^PXRMPT(810.1,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.14,.01,1,1,2)
K ^PXRMPT(810.1,DA(1),3,"B",$E(X,1,30),DA)
"^DD",810.1,810.14,.01,1,1,3)
Required Index for Variable Pointer
"^DD",810.1,810.14,.01,3)

"^DD",810.1,810.14,.01,"DT")
2990316
"^DD",810.1,810.14,.01,"V",0)
^.12P^1^1
"^DD",810.1,810.14,.01,"V",1,0)
200^PROVIDER^1^P^^n
"^DD",810.1,810.16,0)
PXRMPAT SUB-FIELD^^.01^1
"^DD",810.1,810.16,0,"DT")
2990316
"^DD",810.1,810.16,0,"IX","B",810.16,.01)

"^DD",810.1,810.16,0,"NM","PXRMPAT")

"^DD",810.1,810.16,0,"UP")
810.1
"^DD",810.1,810.16,.01,0)
PATIENT^MRP2'^DPT(^0;1^Q
"^DD",810.1,810.16,.01,.1)
Patient
"^DD",810.1,810.16,.01,1,0)
^.1
"^DD",810.1,810.16,.01,1,1,0)
810.16^B
"^DD",810.1,810.16,.01,1,1,1)
S ^PXRMPT(810.1,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.16,.01,1,1,2)
K ^PXRMPT(810.1,DA(1),2,"B",$E(X,1,30),DA)
"^DD",810.1,810.16,.01,"DT")
2990316
"^DD",810.1,810.17,0)
PXRMOTM SUB-FIELD^^.01^1
"^DD",810.1,810.17,0,"DT")
2990316
"^DD",810.1,810.17,0,"IX","B",810.17,.01)

"^DD",810.1,810.17,0,"NM","PXRMOTM")

"^DD",810.1,810.17,0,"UP")
810.1
"^DD",810.1,810.17,.01,0)
OERR TEAM^MRP100.21'^OR(100.21,^0;1^Q
"^DD",810.1,810.17,.01,.1)
OE/RR Team
"^DD",810.1,810.17,.01,1,0)
^.1
"^DD",810.1,810.17,.01,1,1,0)
810.17^B
"^DD",810.1,810.17,.01,1,1,1)
S ^PXRMPT(810.1,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.17,.01,1,1,2)
K ^PXRMPT(810.1,DA(1),4,"B",$E(X,1,30),DA)
"^DD",810.1,810.17,.01,"DT")
2990316
"^DD",810.1,810.18,0)
PXRMPCM SUB-FIELD^^.01^1
"^DD",810.1,810.18,0,"DT")
2990316
"^DD",810.1,810.18,0,"IX","B",810.18,.01)

"^DD",810.1,810.18,0,"NM","PXRMPCM")

"^DD",810.1,810.18,0,"UP")
810.1
"^DD",810.1,810.18,.01,0)
PCMM TEAM^MRP404.51'^SCTM(404.51,^0;1^Q
"^DD",810.1,810.18,.01,.1)
PCMM Team
"^DD",810.1,810.18,.01,1,0)
^.1
"^DD",810.1,810.18,.01,1,1,0)
810.18^B
"^DD",810.1,810.18,.01,1,1,1)
S ^PXRMPT(810.1,DA(1),5,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.18,.01,1,1,2)
K ^PXRMPT(810.1,DA(1),5,"B",$E(X,1,30),DA)
"^DD",810.1,810.18,.01,"DT")
2990316
"^DD",810.1,810.19,0)
PXRMSCAT SUB-FIELD^^.01^1
"^DD",810.1,810.19,0,"DT")
2990816
"^DD",810.1,810.19,0,"IX","B",810.19,.01)

"^DD",810.1,810.19,0,"NM","PXRMSCAT")

"^DD",810.1,810.19,0,"UP")
810.1
"^DD",810.1,810.19,.01,0)
SERVICE^MRS^A:AMBULATORY;H:HOSPITALIZATION;I:IN HOSPITAL;C:CHART REVIEW;T:TELECOMMUNICATIONS;N:NOT FOUND;S:DAY SURGERY;O:OBSERVATION;E:EVENT (HISTORICAL);R:NURSING HOME;D:DAILY HOSPITALIZATION DATA;X:ANCILLARY PACKAGE DAILY DATA;^0;1^Q
"^DD",810.1,810.19,.01,.1)
Service Code
"^DD",810.1,810.19,.01,1,0)
^.1
"^DD",810.1,810.19,.01,1,1,0)
810.19^B
"^DD",810.1,810.19,.01,1,1,1)
S ^PXRMPT(810.1,DA(1),8,"B",$E(X,1,30),DA)=""
"^DD",810.1,810.19,.01,1,1,2)
K ^PXRMPT(810.1,DA(1),8,"B",$E(X,1,30),DA)
"^DD",810.1,810.19,.01,"DT")
2990816
"^DD",811.2,811.2,0)
FIELD^^10^18
"^DD",811.2,811.2,0,"DDA")
N
"^DD",811.2,811.2,0,"DT")
3000505
"^DD",811.2,811.2,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",811.2,811.2,0,"NM","REMINDER TAXONOMY")

"^DD",811.2,811.2,0,"PT",801.41,15)

"^DD",811.2,811.2,0,"PT",811.3,.01)

"^DD",811.2,811.2,0,"PT",811.52,.01)

"^DD",811.2,811.2,0,"PT",811.902,.01)

"^DD",811.2,811.2,0,"PT",811.95,.01)

"^DD",811.2,811.2,0,"VRPK")
PX
"^DD",811.2,811.2,.01,0)
NAME^RFX^^0;1^K:$L(X)>35!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXRMINTR(X,811.2)) X
"^DD",811.2,811.2,.01,1,0)
^.1^^0
"^DD",811.2,811.2,.01,3)
Answer must be 3-35 characters in length.
"^DD",811.2,811.2,.01,21,0)
^.001^1^1^3000505^^^^
"^DD",811.2,811.2,.01,21,1,0)
This is the name of the taxonomy. It must be unique.
"^DD",811.2,811.2,.01,"DT")
3000601
"^DD",811.2,811.2,.02,0)
BRIEF DESCRIPTION^F^^0;2^K:$L(X)>80!($L(X)<3) X
"^DD",811.2,811.2,.02,3)
Answer must be 3-80 characters in length.
"^DD",811.2,811.2,.02,21,0)
^.001^2^2^3000505^^^^
"^DD",811.2,811.2,.02,21,1,0)
This is a brief description of what the taxonomy represents. This may be
"^DD",811.2,811.2,.02,21,2,0)
used to further define the intended use of this taxonomy.
"^DD",811.2,811.2,.02,"DT")
3000502
"^DD",811.2,811.2,.03,0)
DIALOG HEADER TEXT^F^^0;3^K:$L(X)>80!($L(X)<3) X
"^DD",811.2,811.2,.03,3)
Answer must be 3-80 characters in length.
"^DD",811.2,811.2,.03,21,0)
^.001^2^2^3000502^^^
"^DD",811.2,811.2,.03,21,1,0)
This text will be displayed as a checkbox in the reminder dialog for this
"^DD",811.2,811.2,.03,21,2,0)
taxonomy.
"^DD",811.2,811.2,.03,"DT")
2991025
"^DD",811.2,811.2,1.6,0)
INACTIVE FLAG^S^1:INACTIVE;^0;6^Q
"^DD",811.2,811.2,1.6,3)
Enter a 1 to inactivate this taxonomy.
"^DD",811.2,811.2,1.6,21,0)
^.001^6^6^3000502^^
"^DD",811.2,811.2,1.6,21,1,0)
Enter "1" to inactivate the taxonomy.  This flag is set to ACTIVE in
"^DD",811.2,811.2,1.6,21,2,0)
the distribution. As part of the installation, each site should review
"^DD",811.2,811.2,1.6,21,3,0)
the taxonomy definitions and inactivate those that do not meet the
"^DD",811.2,811.2,1.6,21,4,0)
site's needs. If desired, a site can copy a distributed taxonomy, using
"^DD",811.2,811.2,1.6,21,5,0)
the taxomony copy option, to a local version and edit it to meet the
"^DD",811.2,811.2,1.6,21,6,0)
site's needs.
"^DD",811.2,811.2,1.6,23,0)
^.001^2^2^3000502^^
"^DD",811.2,811.2,1.6,23,1,0)
This flag controls whether or not taxonomies may be selected as a
"^DD",811.2,811.2,1.6,23,2,0)
Clinical Reminder finding.
"^DD",811.2,811.2,1.6,"DT")
2960730
"^DD",811.2,811.2,4,0)
PATIENT DATA SOURCE^FX^^0;4^K:$L(X)>40!($L(X)<1) X D VPDS^PXRMTAX
"^DD",811.2,811.2,4,3)
Answer must be 1-40 characters in length.
"^DD",811.2,811.2,4,4)
D PDSXHELP^PXRMTAX
"^DD",811.2,811.2,4,21,0)
^.001^2^2^3000502^^^^
"^DD",811.2,811.2,4,21,1,0)
PATIENT DATA SOURCE specifies where to search for patient data. It is a
"^DD",811.2,811.2,4,21,2,0)
string of comma-separated key words.
"^DD",811.2,811.2,4,"DT")
3000403
"^DD",811.2,811.2,10,0)
USE INACTIVE PROBLEMS^S^1:YES;^0;9^Q
"^DD",811.2,811.2,10,3)
Enter YES if you want to use both active and inactive problems.
"^DD",811.2,811.2,10,21,0)
^.001^6^6^3000505^^^^
"^DD",811.2,811.2,10,21,1,0)
USE INACTIVE PROBLEMS applies only to searches in Problem List. Normally
"^DD",811.2,811.2,10,21,2,0)
inactive problems are not used. However, when this field is set to YES
"^DD",811.2,811.2,10,21,3,0)
then both active and inactive problems are used. This field works just
"^DD",811.2,811.2,10,21,4,0)
like the field with the same name that can be specified for a reminder
"^DD",811.2,811.2,10,21,5,0)
definition finding or a reminder term finding. The order of precedence
"^DD",811.2,811.2,10,21,6,0)
is taxonomy > term > definition.
"^DD",811.2,811.2,10,"DT")
3000403
"^DD",811.2,811.2,2101,0)
RANGE OF CODED VALUES^811.22101^^21;0
"^DD",811.2,811.2,2101,21,0)
^.001^1^1^3000503^^^^
"^DD",811.2,811.2,2101,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.2,811.2,2101,"DT")
2950802
"^DD",811.2,811.2,2102,0)
ICD9 RANGE OF CODED VALUES^811.22102^^80;0
"^DD",811.2,811.2,2102,21,0)
^.001^5^5^3000502^^^^
"^DD",811.2,811.2,2102,21,1,0)
This multiple is used to define ranges of ICD9 coded values which
"^DD",811.2,811.2,2102,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.2,2102,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.2,2102,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.2,2102,21,5,0)

"^DD",811.2,811.2,2102,"DT")
2980803
"^DD",811.2,811.2,2103,0)
ICD0 RANGE OF CODED VALUES^811.22103^^80.1;0
"^DD",811.2,811.2,2103,21,0)
^.001^4^4^3000502^^^^
"^DD",811.2,811.2,2103,21,1,0)
This multiple is used to define ranges of ICD0 coded values which
"^DD",811.2,811.2,2103,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.2,2103,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.2,2103,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.2,2103,"DT")
2980803
"^DD",811.2,811.2,2104,0)
CPT RANGE OF CODED VALUES^811.22104^^81;0
"^DD",811.2,811.2,2104,21,0)
^.001^5^5^3000502^^^^
"^DD",811.2,811.2,2104,21,1,0)
This multiple is used to define ranges of CPT coded values which
"^DD",811.2,811.2,2104,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.2,2104,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.2,2104,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.2,2104,21,5,0)

"^DD",811.2,811.2,2104,"DT")
2980803
"^DD",811.2,811.2,3102,0)
SELECTABLE DIAGNOSIS^811.23102IP^^SDX;0
"^DD",811.2,811.2,3102,21,0)
^.001^4^4^3000505^^
"^DD",811.2,811.2,3102,21,1,0)
These are the diagnosis codes that may be selected when processing a
"^DD",811.2,811.2,3102,21,2,0)
taxonomy dialog within CPRS. The list of codes is built from the code
"^DD",811.2,811.2,3102,21,3,0)
ranges within the taxonomy when the Clinical Reminders package is
"^DD",811.2,811.2,3102,21,4,0)
installed and includes only active codes.
"^DD",811.2,811.2,3104,0)
SELECTABLE PROCEDURE^811.23104IP^^SPR;0
"^DD",811.2,811.2,3104,21,0)
^.001^4^4^3000505^^
"^DD",811.2,811.2,3104,21,1,0)
These are the procedure codes that may be selected when processing a
"^DD",811.2,811.2,3104,21,2,0)
taxonomy dialog within CPRS. The list of codes is built from the code
"^DD",811.2,811.2,3104,21,3,0)
ranges within the taxonomy when the Clinical Reminders package is
"^DD",811.2,811.2,3104,21,4,0)
installed and includes only active codes.
"^DD",811.2,811.2,3106,0)
GENERATE DIALOG DX PARAMETER^S^1:INDIVIDUAL DIALOG FOR EACH DIAGNOSIS CODE;^SDZ;1^Q
"^DD",811.2,811.2,3106,3)
Enter 1 if each selectable diagnosis should be a separate prompt.
"^DD",811.2,811.2,3106,21,0)
^^6^6^3000505^
"^DD",811.2,811.2,3106,21,1,0)
If this parameter is set then each active code in the selectable diagnosis
"^DD",811.2,811.2,3106,21,2,0)
list will be presented as a separate question in CPRS with text generated
"^DD",811.2,811.2,3106,21,3,0)
from the finding parameter file.
"^DD",811.2,811.2,3106,21,4,0)
 
"^DD",811.2,811.2,3106,21,5,0)
Otherwise the active selectable diagnoses will be displayed as a checkbox
"^DD",811.2,811.2,3106,21,6,0)
with the dialog header text for diagnoses. This is the default option.
"^DD",811.2,811.2,3106,"DT")
2990908
"^DD",811.2,811.2,3107,0)
CURRENT VISIT DX DIALOG HDR^F^^SDZ;2^K:$L(X)>80!($L(X)<1) X
"^DD",811.2,811.2,3107,.1)

"^DD",811.2,811.2,3107,3)
Enter 1-80 character header text for current visit diagnosis selection.
"^DD",811.2,811.2,3107,21,0)
^.001^6^6^3000503^^^
"^DD",811.2,811.2,3107,21,1,0)
This is the diagnosis dialog sub-header text that will be selectable for
"^DD",811.2,811.2,3107,21,2,0)
CPRS users to document a diagnosis from the taxonomy as treated at the
"^DD",811.2,811.2,3107,21,3,0)
current visit. The header text will display with a check box which CPRS
"^DD",811.2,811.2,3107,21,4,0)
users can select to see the selectable diagnoses list. 
"^DD",811.2,811.2,3107,21,5,0)
 
"^DD",811.2,811.2,3107,21,6,0)
If this field is not present the taxonomy name will be used.
"^DD",811.2,811.2,3107,"DT")
3000503
"^DD",811.2,811.2,3108,0)
HISTORICAL VISIT DX DIALOG HDR^F^^SDZ;3^K:$L(X)>80!($L(X)<1) X
"^DD",811.2,811.2,3108,3)
Enter 1-80 character header text for historical visit diagnosis selection.
"^DD",811.2,811.2,3108,21,0)
^^7^7^3000503^
"^DD",811.2,811.2,3108,21,1,0)
This is the diagnosis dialog sub-header text that will be selectable for
"^DD",811.2,811.2,3108,21,2,0)
CPRS users to document a diagnosis from the taxonomy as a historical
"^DD",811.2,811.2,3108,21,3,0)
diagnosis. The header text will display with a check box which CPRS users
"^DD",811.2,811.2,3108,21,4,0)
can select to see the selectable diagnoses list.  Historical diagnoses
"^DD",811.2,811.2,3108,21,5,0)
selected will require the CPRS user to enter a visit date.
"^DD",811.2,811.2,3108,21,6,0)
 
"^DD",811.2,811.2,3108,21,7,0)
If this field is not present the taxonomy name will be used.
"^DD",811.2,811.2,3108,"DT")
3000503
"^DD",811.2,811.2,3110,0)
GENERATE DIALOG PR PARAMETER^S^1:INDIVIDUAL DIALOG FOR EACH PROCEDURE;^SPZ;1^Q
"^DD",811.2,811.2,3110,3)
Enter 1 if each selectable procedure should be a separate prompt.
"^DD",811.2,811.2,3110,21,0)
^^6^6^3000505^
"^DD",811.2,811.2,3110,21,1,0)
If this parameter is set then each active code in the selectable procedure
"^DD",811.2,811.2,3110,21,2,0)
list will be presented as a separate question in CPRS with text generated
"^DD",811.2,811.2,3110,21,3,0)
from the finding parameter file.
"^DD",811.2,811.2,3110,21,4,0)
                                  
"^DD",811.2,811.2,3110,21,5,0)
Otherwise the active selectable procedures will be displayed as a checkbox
"^DD",811.2,811.2,3110,21,6,0)
with the dialog header text for procedures. This is the default option.
"^DD",811.2,811.2,3110,"DT")
2990909
"^DD",811.2,811.2,3111,0)
CURRENT VISIT PR DIALOG HDR^F^^SPZ;2^K:$L(X)>80!($L(X)<1) X
"^DD",811.2,811.2,3111,3)
Enter 1-80 character header text for current visit procedure selection.
"^DD",811.2,811.2,3111,21,0)
^.001^6^6^3000503^^
"^DD",811.2,811.2,3111,21,1,0)
This is the procedure dialog sub-header text that will be selectable for
"^DD",811.2,811.2,3111,21,2,0)
CPRS users to document a procedure from the taxonomy as done at the
"^DD",811.2,811.2,3111,21,3,0)
current visit. The header text will display with a check box which CPRS
"^DD",811.2,811.2,3111,21,4,0)
users can select to see the selectable procedure list. 
"^DD",811.2,811.2,3111,21,5,0)
 
"^DD",811.2,811.2,3111,21,6,0)
If this field is not present the taxonomy name will be used.
"^DD",811.2,811.2,3111,"DT")
3000503
"^DD",811.2,811.2,3112,0)
HISTORICAL VISIT PR DIALOG HDR^F^^SPZ;3^K:$L(X)>80!($L(X)<1) X
"^DD",811.2,811.2,3112,3)
Enter 1-80 character header text for historical visit procedure selection.
"^DD",811.2,811.2,3112,21,0)
^.001^7^7^3000503^^
"^DD",811.2,811.2,3112,21,1,0)
This is the procedure dialog sub-header text that will be selectable for
"^DD",811.2,811.2,3112,21,2,0)
CPRS users to document a procedure from the taxonomy as a historical
"^DD",811.2,811.2,3112,21,3,0)
procedure. The header text will display with a check box which CPRS users
"^DD",811.2,811.2,3112,21,4,0)
can select to see the selectable procedure list.  Historical procedures
"^DD",811.2,811.2,3112,21,5,0)
selected will require the CPRS user to enter a visit date.
"^DD",811.2,811.2,3112,21,6,0)
 
"^DD",811.2,811.2,3112,21,7,0)
If this field is not present the taxonomy name will be used.
"^DD",811.2,811.2,3112,"DT")
3000503
"^DD",811.2,811.22101,0)
RANGE OF CODED VALUES SUB-FIELD^^.03^3
"^DD",811.2,811.22101,0,"DT")
3000503
"^DD",811.2,811.22101,0,"IX","B",811.22101,.01)

"^DD",811.2,811.22101,0,"NM","RANGE OF CODED VALUES")

"^DD",811.2,811.22101,0,"UP")
811.2
"^DD",811.2,811.22101,.01,0)
LOW CODED VALUE^MF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>7!($L(X)<1) X
"^DD",811.2,811.22101,.01,1,0)
^.1^^-1
"^DD",811.2,811.22101,.01,1,1,0)
811.22101^B
"^DD",811.2,811.22101,.01,1,1,1)
S ^PXD(811.2,DA(1),21,"B",$E(X,1,30),DA)=""
"^DD",811.2,811.22101,.01,1,1,2)
K ^PXD(811.2,DA(1),21,"B",$E(X,1,30),DA)
"^DD",811.2,811.22101,.01,3)
Answer must be 1-7 characters in length.
"^DD",811.2,811.22101,.01,21,0)
^.001^1^1^3000503^^^^
"^DD",811.2,811.22101,.01,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.2,811.22101,.01,"DT")
3000503
"^DD",811.2,811.22101,.02,0)
HIGH CODED VALUE^F^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>7!($L(X)<1) X
"^DD",811.2,811.22101,.02,1,0)
^.1^^0
"^DD",811.2,811.22101,.02,3)
Answer must be 1-7 characters in length.
"^DD",811.2,811.22101,.02,21,0)
^.001^1^1^3000502^^^^
"^DD",811.2,811.22101,.02,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.2,811.22101,.02,"DT")
3000503
"^DD",811.2,811.22101,.03,0)
SOURCE FILE^*P1'X^DIC(^0;3^S DIC("S")="I $D(^DIC(""AC"",""PXRS"",+Y))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",811.2,811.22101,.03,1,0)
^.1^^0
"^DD",811.2,811.22101,.03,3)
This field is obsolete do not use.
"^DD",811.2,811.22101,.03,12)
Only files that are national coded standards with the "PXRS" application group are allowed.
"^DD",811.2,811.22101,.03,12.1)
S DIC("S")="I $D(^DIC(""AC"",""PXRS"",+Y))"
"^DD",811.2,811.22101,.03,21,0)
^.001^1^1^3000502^^^^
"^DD",811.2,811.22101,.03,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.2,811.22101,.03,"DT")
2980908
"^DD",811.2,811.22102,0)
ICD9 RANGE OF CODED VALUES SUB-FIELD^^1^2
"^DD",811.2,811.22102,0,"DT")
2980817
"^DD",811.2,811.22102,0,"IX","AC",811.22102,.01)

"^DD",811.2,811.22102,0,"IX","B",811.22102,.01)

"^DD",811.2,811.22102,0,"NM","ICD9 RANGE OF CODED VALUES")

"^DD",811.2,811.22102,0,"UP")
811.2
"^DD",811.2,811.22102,.01,0)
ICD9 LOW CODED VALUE^MFX^^0;1^K:$L(X)>7!($L(X)<3) X D VCICD9^PXRMCODE
"^DD",811.2,811.22102,.01,1,0)
^.1^^-1
"^DD",811.2,811.22102,.01,1,1,0)
811.22102^B
"^DD",811.2,811.22102,.01,1,1,1)
S ^PXD(811.2,DA(1),80,"B",$E(X,1,30),DA)=""
"^DD",811.2,811.22102,.01,1,1,2)
K ^PXD(811.2,DA(1),80,"B",$E(X,1,30),DA)
"^DD",811.2,811.22102,.01,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22102,.01,21,0)
^^4^4^3000502^
"^DD",811.2,811.22102,.01,21,1,0)
This multiple is used to define ranges of ICD9 coded values which
"^DD",811.2,811.22102,.01,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.22102,.01,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.22102,.01,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.22102,.01,"DT")
3000328
"^DD",811.2,811.22102,1,0)
ICD9 HIGH CODED VALUE^FX^^0;2^K:$L(X)>7!($L(X)<3) X D VCICD9^PXRMCODE
"^DD",811.2,811.22102,1,1,0)
^.1^^0
"^DD",811.2,811.22102,1,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22102,1,21,0)
^^4^4^3000502^
"^DD",811.2,811.22102,1,21,1,0)
This multiple is used to define ranges of ICD9 coded values which
"^DD",811.2,811.22102,1,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.22102,1,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.22102,1,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.22102,1,"DT")
3000328
"^DD",811.2,811.22103,0)
ICD0 RANGE OF CODED VALUES SUB-FIELD^^1^2
"^DD",811.2,811.22103,0,"DT")
2980817
"^DD",811.2,811.22103,0,"IX","B",811.22103,.01)

"^DD",811.2,811.22103,0,"NM","ICD0 RANGE OF CODED VALUES")

"^DD",811.2,811.22103,0,"UP")
811.2
"^DD",811.2,811.22103,.01,0)
ICD0 LOW CODED VALUE^MFX^^0;1^K:$L(X)>7!($L(X)<3) X D VCICD0^PXRMCODE
"^DD",811.2,811.22103,.01,1,0)
^.1^^-1
"^DD",811.2,811.22103,.01,1,1,0)
811.22103^B
"^DD",811.2,811.22103,.01,1,1,1)
S ^PXD(811.2,DA(1),80.1,"B",$E(X,1,30),DA)=""
"^DD",811.2,811.22103,.01,1,1,2)
K ^PXD(811.2,DA(1),80.1,"B",$E(X,1,30),DA)
"^DD",811.2,811.22103,.01,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22103,.01,21,0)
^^4^4^3000502^
"^DD",811.2,811.22103,.01,21,1,0)
This multiple is used to define ranges of ICD0 coded values which
"^DD",811.2,811.22103,.01,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.22103,.01,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.22103,.01,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.22103,.01,"DT")
3000328
"^DD",811.2,811.22103,1,0)
ICD0 HIGH CODED VALUE^FX^^0;2^K:$L(X)>7!($L(X)<3) X D VCICD0^PXRMCODE
"^DD",811.2,811.22103,1,1,0)
^.1^^0
"^DD",811.2,811.22103,1,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22103,1,21,0)
^^4^4^3000502^
"^DD",811.2,811.22103,1,21,1,0)
This multiple is used to define ranges of ICD0 coded values which
"^DD",811.2,811.22103,1,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.22103,1,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.22103,1,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.22103,1,"DT")
3000328
"^DD",811.2,811.22104,0)
CPT RANGE OF CODED VALUES SUB-FIELD^^1^2
"^DD",811.2,811.22104,0,"DT")
2980817
"^DD",811.2,811.22104,0,"IX","B",811.22104,.01)

"^DD",811.2,811.22104,0,"NM","CPT RANGE OF CODED VALUES")

"^DD",811.2,811.22104,0,"UP")
811.2
"^DD",811.2,811.22104,.01,0)
CPT LOW CODED VALUE^MFX^^0;1^K:$L(X)>7!($L(X)<3) X D VCICPT^PXRMCODE
"^DD",811.2,811.22104,.01,1,0)
^.1^^-1
"^DD",811.2,811.22104,.01,1,1,0)
811.22104^B
"^DD",811.2,811.22104,.01,1,1,1)
S ^PXD(811.2,DA(1),81,"B",$E(X,1,30),DA)=""
"^DD",811.2,811.22104,.01,1,1,2)
K ^PXD(811.2,DA(1),81,"B",$E(X,1,30),DA)
"^DD",811.2,811.22104,.01,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22104,.01,21,0)
^^4^4^3000502^
"^DD",811.2,811.22104,.01,21,1,0)
This multiple is used to define ranges of CPT coded values which
"^DD",811.2,811.22104,.01,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.22104,.01,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.22104,.01,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.22104,.01,"DT")
3000328
"^DD",811.2,811.22104,1,0)
CPT HIGH CODED VALUE^FX^^0;2^K:$L(X)>7!($L(X)<3) X D VCICPT^PXRMCODE
"^DD",811.2,811.22104,1,1,0)
^.1^^0
"^DD",811.2,811.22104,1,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22104,1,21,0)
^^4^4^3000502^
"^DD",811.2,811.22104,1,21,1,0)
This multiple is used to define ranges of CPT coded values which
"^DD",811.2,811.22104,1,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.22104,1,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.22104,1,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.22104,1,"DT")
3000328
"^DD",811.2,811.23102,0)
SELECTABLE DIAGNOSIS SUB-FIELD^^2^3
"^DD",811.2,811.23102,0,"DT")
2991025
"^DD",811.2,811.23102,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",811.2,811.23102,0,"IX","B",811.23102,.01)

"^DD",811.2,811.23102,0,"NM","SELECTABLE DIAGNOSIS")

"^DD",811.2,811.23102,0,"UP")
811.2
"^DD",811.2,811.23102,.01,0)
SELECTABLE DIAGNOSIS^MP80'^ICD9(^0;1^Q
"^DD",811.2,811.23102,.01,1,0)
^.1
"^DD",811.2,811.23102,.01,1,1,0)
811.23102^B
"^DD",811.2,811.23102,.01,1,1,1)
S ^PXD(811.2,DA(1),"SDX","B",$E(X,1,30),DA)=""
"^DD",811.2,811.23102,.01,1,1,2)
K ^PXD(811.2,DA(1),"SDX","B",$E(X,1,30),DA)
"^DD",811.2,811.23102,.01,3)
Enter a ICD9 code that can be entered in CPRS to satisfy a reminder.
"^DD",811.2,811.23102,.01,21,0)
^.001^2^2^3000503^^
"^DD",811.2,811.23102,.01,21,1,0)
This is the selectable diagnosis code that will appear in the taxonomy
"^DD",811.2,811.23102,.01,21,2,0)
dialog. Only active codes may be selected.
"^DD",811.2,811.23102,.01,"DT")
2991025
"^DD",811.2,811.23102,1,0)
DISPLAY TEXT^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",811.2,811.23102,1,3)
Answer must be 1-40 characters in length.
"^DD",811.2,811.23102,1,21,0)
^.001^3^3^3000502^^
"^DD",811.2,811.23102,1,21,1,0)
This is the description of the diagnosis code that will appear in the
"^DD",811.2,811.23102,1,21,2,0)
taxonomy dialog in CPRS. The field is optional - the standard diagnosis
"^DD",811.2,811.23102,1,21,3,0)
code name is the default.
"^DD",811.2,811.23102,1,"DT")
2991025
"^DD",811.2,811.23102,2,0)
DISABLED^S^1:DISABLED;^0;3^Q
"^DD",811.2,811.23102,2,21,0)
^^2^2^3000502^
"^DD",811.2,811.23102,2,21,1,0)
This field should be input if a selectable code is to be excluded
"^DD",811.2,811.23102,2,21,2,0)
temporarily from the taxonomy dialog in CPRS.
"^DD",811.2,811.23102,2,"DT")
2991025
"^DD",811.2,811.23104,0)
SELECTABLE PROCEDURE SUB-FIELD^^2^3
"^DD",811.2,811.23104,0,"DT")
2991025
"^DD",811.2,811.23104,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",811.2,811.23104,0,"IX","B",811.23104,.01)

"^DD",811.2,811.23104,0,"NM","SELECTABLE PROCEDURE")

"^DD",811.2,811.23104,0,"UP")
811.2
"^DD",811.2,811.23104,.01,0)
SELECTABLE PROCEDURE^MP81'^ICPT(^0;1^Q
"^DD",811.2,811.23104,.01,1,0)
^.1
"^DD",811.2,811.23104,.01,1,1,0)
811.23104^B
"^DD",811.2,811.23104,.01,1,1,1)
S ^PXD(811.2,DA(1),"SPR","B",$E(X,1,30),DA)=""
"^DD",811.2,811.23104,.01,1,1,2)
K ^PXD(811.2,DA(1),"SPR","B",$E(X,1,30),DA)
"^DD",811.2,811.23104,.01,3)
Enter a CPT code that can be entered in CPRS to satisfy a reminder
"^DD",811.2,811.23104,.01,21,0)
^^2^2^3000502^
"^DD",811.2,811.23104,.01,21,1,0)
This is the selectable procedure code that will appear in the taxonomy
"^DD",811.2,811.23104,.01,21,2,0)
dialog. Only active codes may be selected.
"^DD",811.2,811.23104,.01,"DT")
2991025
"^DD",811.2,811.23104,1,0)
DISPLAY TEXT^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",811.2,811.23104,1,3)
Answer must be 1-40 characters in length.
"^DD",811.2,811.23104,1,21,0)
^^3^3^3000502^
"^DD",811.2,811.23104,1,21,1,0)
This is the description of the procedure code that will appear in the
"^DD",811.2,811.23104,1,21,2,0)
taxonomy dialog in CPRS. The field is optional - the standard standard
"^DD",811.2,811.23104,1,21,3,0)
code name is the default.
"^DD",811.2,811.23104,1,"DT")
2991025
"^DD",811.2,811.23104,2,0)
DISABLED^S^1:DISABLED;^0;3^Q
"^DD",811.2,811.23104,2,21,0)
^^2^2^3000502^
"^DD",811.2,811.23104,2,21,1,0)
This field should be input if a selectable code is to be excluded
"^DD",811.2,811.23104,2,21,2,0)
temporarily from the taxonomy dialog in CPRS.
"^DD",811.2,811.23104,2,"DT")
2991025
"^DD",811.3,811.3,0)
FIELD^^81^13
"^DD",811.3,811.3,0,"DDA")
N
"^DD",811.3,811.3,0,"DT")
3000330
"^DD",811.3,811.3,0,"IX","B",811.3,.01)

"^DD",811.3,811.3,0,"NM","EXPANDED TAXONOMIES")

"^DD",811.3,811.3,0,"VRPK")
PX
"^DD",811.3,811.3,.01,0)
EXPANDED TAXONOMY^P811.2'^PXD(811.2,^0;1^Q
"^DD",811.3,811.3,.01,1,0)
^.1
"^DD",811.3,811.3,.01,1,1,0)
811.3^B
"^DD",811.3,811.3,.01,1,1,1)
S ^PXD(811.3,"B",$E(X,1,30),DA)=""
"^DD",811.3,811.3,.01,1,1,2)
K ^PXD(811.3,"B",$E(X,1,30),DA)
"^DD",811.3,811.3,.01,3)
Do not edit this field.
"^DD",811.3,811.3,.01,21,0)
^^1^1^3000505^
"^DD",811.3,811.3,.01,21,1,0)

"^DD",811.3,811.3,.01,23,0)
^^2^2^3000505^
"^DD",811.3,811.3,.01,23,1,0)
Expanded taxonomies are stored at the same internal entry number as the
"^DD",811.3,811.3,.01,23,2,0)
taxonomy.
"^DD",811.3,811.3,.01,"DT")
3000321
"^DD",811.3,811.3,1,0)
DATE BUILT^D^^0;2^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",811.3,811.3,1,3)
Do not edit this field.
"^DD",811.3,811.3,1,21,0)
^^1^1^3000505^
"^DD",811.3,811.3,1,21,1,0)
This is the date when the expanded taxonomy was built.
"^DD",811.3,811.3,1,"DT")
3000322
"^DD",811.3,811.3,2,0)
NICD0^NJ6,0^^0;3^K:+X'=X!(X>100000)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.3,811.3,2,3)
Do not edit this field.
"^DD",811.3,811.3,2,21,0)
^^1^1^3000505^
"^DD",811.3,811.3,2,21,1,0)
This is the number of ICD0 entries in the expanded taxonomy.
"^DD",811.3,811.3,2,"DT")
3000322
"^DD",811.3,811.3,3,0)
ICD0SUM^NJ8,0^^0;4^K:+X'=X!(X>10000000)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.3,811.3,3,3)
Do not edit this field.
"^DD",811.3,811.3,3,23,0)
^^5^5^3000505^
"^DD",811.3,811.3,3,23,1,0)
This is the sum of the 3rd and 4th pieces of ^ICD0(0). Whenever an
"^DD",811.3,811.3,3,23,2,0)
expanded taxonomy is ready to be used the sum is calculated and
"^DD",811.3,811.3,3,23,3,0)
compared with the value stored here. If they are different then the
"^DD",811.3,811.3,3,23,4,0)
ICD0 global has changed since the expanded taxonomy was built. If this
"^DD",811.3,811.3,3,23,5,0)
is the case the expanded taxonomy is rebuilt before it is used.
"^DD",811.3,811.3,3,"DT")
3000330
"^DD",811.3,811.3,4,0)
NICD9^NJ6,0^^0;5^K:+X'=X!(X>100000)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.3,811.3,4,3)
Do not edit this field.
"^DD",811.3,811.3,4,21,0)
^^1^1^3000505^
"^DD",811.3,811.3,4,21,1,0)
This is the number of ICD9 entries in the expanded taxonomy.
"^DD",811.3,811.3,4,"DT")
3000330
"^DD",811.3,811.3,5,0)
ICD9SUM^NJ8,0^^0;6^K:+X'=X!(X>10000000)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.3,811.3,5,3)
Do not edit this field.
"^DD",811.3,811.3,5,23,0)
^^5^5^3000505^
"^DD",811.3,811.3,5,23,1,0)
This is the sum of the 3rd and 4th pieces of ^ICD9(0). Whenever an
"^DD",811.3,811.3,5,23,2,0)
expanded taxonomy is ready to be used the sum is calculated and
"^DD",811.3,811.3,5,23,3,0)
compared with the value stored here. If they are different then the
"^DD",811.3,811.3,5,23,4,0)
ICD9 global has changed since the expanded taxonomy was built. If this
"^DD",811.3,811.3,5,23,5,0)
is the case the expanded taxonomy is rebuilt before it is used.
"^DD",811.3,811.3,5,"DT")
3000330
"^DD",811.3,811.3,6,0)
NICPT^NJ6,0^^0;7^K:+X'=X!(X>100000)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.3,811.3,6,3)
Do not edit this field.
"^DD",811.3,811.3,6,21,0)
^^1^1^3000505^
"^DD",811.3,811.3,6,21,1,0)
This is the number of CPT codes in the expanded taxonomy.
"^DD",811.3,811.3,6,"DT")
3000330
"^DD",811.3,811.3,7,0)
ICPTDATE^D^^0;8^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",811.3,811.3,7,3)
Do not edit this field.
"^DD",811.3,811.3,7,23,0)
^^5^5^3000505^
"^DD",811.3,811.3,7,23,1,0)
This is the date of the CPT global distribution as returned by
"^DD",811.3,811.3,7,23,2,0)
$$CPTDIST^ICPTAPIU. Before an expaned taxonomy is used the date stored
"^DD",811.3,811.3,7,23,3,0)
here is compared with the date returned by the call. If the dates do
"^DD",811.3,811.3,7,23,4,0)
not match then the expanded taxonomy is out of date and is rebuilt
"^DD",811.3,811.3,7,23,5,0)
before it is used.
"^DD",811.3,811.3,7,"DT")
3000322
"^DD",811.3,811.3,8,0)
NRCPT^NJ8,0^^0;9^K:+X'=X!(X>10000000)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.3,811.3,8,3)
Do not edit this field.
"^DD",811.3,811.3,8,21,0)
^^2^2^3000505^
"^DD",811.3,811.3,8,21,1,0)
This is the number of CPT codes that are radiology procedures in the
"^DD",811.3,811.3,8,21,2,0)
expanded taxonomy.
"^DD",811.3,811.3,8,"DT")
3000322
"^DD",811.3,811.3,71,0)
RADIOLOGY CPT LIST^811.371PA^^71;0
"^DD",811.3,811.3,71,21,0)
^.001^2^2^3000505^^^
"^DD",811.3,811.3,71,21,1,0)
This is the list of radiology procedure codes that are in the expanded
"^DD",811.3,811.3,71,21,2,0)
taxonomy.
"^DD",811.3,811.3,80,0)
ICD9 LIST^811.31PA^^80;0
"^DD",811.3,811.3,80,21,0)
^^1^1^3000505^
"^DD",811.3,811.3,80,21,1,0)
This is the list of ICD9 codes that are in the expanded taxonomy.
"^DD",811.3,811.3,80.1,0)
ICD0 LIST^811.32PA^^80.1;0
"^DD",811.3,811.3,80.1,21,0)
^^1^1^3000505^
"^DD",811.3,811.3,80.1,21,1,0)
This is the list of ICD0 codes that are in the expanded taxonomy.
"^DD",811.3,811.3,81,0)
ICPT LIST^811.381PA^^81;0
"^DD",811.3,811.3,81,21,0)
^^1^1^3000505^
"^DD",811.3,811.3,81,21,1,0)
This is the list of CPT codes that are in the expanded taxonomy.
"^DD",811.3,811.3,81,"DT")
3000323
"^DD",811.3,811.31,0)
ICD9 LIST SUB-FIELD^^.01^1
"^DD",811.3,811.31,0,"DT")
3000321
"^DD",811.3,811.31,0,"NM","ICD9 LIST")

"^DD",811.3,811.31,0,"UP")
811.3
"^DD",811.3,811.31,.01,0)
ICD9 CODE^P80'^ICD9(^0;1^Q
"^DD",811.3,811.31,.01,1,0)
^.1^^0
"^DD",811.3,811.31,.01,3)
Do not edit this field.
"^DD",811.3,811.31,.01,21,0)
^^1^1^3000505^
"^DD",811.3,811.31,.01,21,1,0)
This is an ICD9 code.
"^DD",811.3,811.31,.01,"DT")
3000505
"^DD",811.3,811.32,0)
ICD0 LIST SUB-FIELD^^.01^1
"^DD",811.3,811.32,0,"DT")
3000321
"^DD",811.3,811.32,0,"NM","ICD0 LIST")

"^DD",811.3,811.32,0,"UP")
811.3
"^DD",811.3,811.32,.01,0)
ICD0 CODE^P80.1'^ICD0(^0;1^Q
"^DD",811.3,811.32,.01,1,0)
^.1^^0
"^DD",811.3,811.32,.01,3)
Do not edit this field.
"^DD",811.3,811.32,.01,21,0)
^^1^1^3000505^
"^DD",811.3,811.32,.01,21,1,0)
This is an ICD0 code.
"^DD",811.3,811.32,.01,"DT")
3000505
"^DD",811.3,811.371,0)
RADIOLOGY CPT LIST SUB-FIELD^^1^2
"^DD",811.3,811.371,0,"DT")
3000322
"^DD",811.3,811.371,0,"NM","RADIOLOGY CPT LIST")

"^DD",811.3,811.371,0,"UP")
811.3
"^DD",811.3,811.371,.01,0)
RADIOLOGY CPT CODE^P81'^ICPT(^0;1^Q
"^DD",811.3,811.371,.01,1,0)
^.1^^0
"^DD",811.3,811.371,.01,3)
Do not edit this field.
"^DD",811.3,811.371,.01,21,0)
^.001^1^1^3000505^^^
"^DD",811.3,811.371,.01,21,1,0)
This is a radiology CPT code.
"^DD",811.3,811.371,.01,"DT")
3000505
"^DD",811.3,811.371,1,0)
RADIOLOGY PROCEDURE^P71'^RAMIS(71,^0;2^Q
"^DD",811.3,811.371,1,3)
Do not edit this field.
"^DD",811.3,811.371,1,21,0)
^.001^2^2^3000505^^
"^DD",811.3,811.371,1,21,1,0)
This is the radiology procedure that corresponds to the CPT code in the
"^DD",811.3,811.371,1,21,2,0)
.01 field.
"^DD",811.3,811.371,1,"DT")
3000331
"^DD",811.3,811.381,0)
ICPT LIST SUB-FIELD^^.01^1
"^DD",811.3,811.381,0,"DT")
3000321
"^DD",811.3,811.381,0,"NM","ICPT LIST")

"^DD",811.3,811.381,0,"UP")
811.3
"^DD",811.3,811.381,.01,0)
CPT CODE^P81'^ICPT(^0;1^Q
"^DD",811.3,811.381,.01,1,0)
^.1^^0
"^DD",811.3,811.381,.01,3)
Do not edit this field.
"^DD",811.3,811.381,.01,21,0)
^^1^1^3000505^
"^DD",811.3,811.381,.01,21,1,0)
This is a CPT code.
"^DD",811.3,811.381,.01,"DT")
3000505
"^DD",811.4,811.4,0)
FIELD^^1^5
"^DD",811.4,811.4,0,"DDA")
N
"^DD",811.4,811.4,0,"DT")
3000405
"^DD",811.4,811.4,0,"NM","REMINDER COMPUTED FINDINGS")

"^DD",811.4,811.4,0,"PT",811.52,.01)

"^DD",811.4,811.4,0,"PT",811.902,.01)

"^DD",811.4,811.4,.01,0)
NAME^RFX^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXRMINTR(X,811.4)) X
"^DD",811.4,811.4,.01,1,0)
^.1^^0
"^DD",811.4,811.4,.01,3)
Enter the name of the computed finding, up to 30 characters.
"^DD",811.4,811.4,.01,21,0)
^.001^1^1^3000505^^
"^DD",811.4,811.4,.01,21,1,0)
This is the name of the computed finding.
"^DD",811.4,811.4,.01,"DT")
3000602
"^DD",811.4,811.4,.02,0)
ROUTINE^F^^0;2^K:$L(X)>8!($L(X)<3) X
"^DD",811.4,811.4,.02,3)
Enter the M routine name.
"^DD",811.4,811.4,.02,8.5)
@
"^DD",811.4,811.4,.02,9)
@
"^DD",811.4,811.4,.02,21,0)
^.001^3^3^3000609^^^^
"^DD",811.4,811.4,.02,21,1,0)
This is the name of an M routine that contains the code for the
"^DD",811.4,811.4,.02,21,2,0)
computed finding. The entry point to use is specified in the ENTRY
"^DD",811.4,811.4,.02,21,3,0)
POINT field.
"^DD",811.4,811.4,.02,"DT")
2990526
"^DD",811.4,811.4,.03,0)
ENTRY POINT^F^^0;3^K:$L(X)>8!($L(X)<2) X
"^DD",811.4,811.4,.03,3)
Enter the entry point, must be 2-8 characters in length.
"^DD",811.4,811.4,.03,8.5)
@
"^DD",811.4,811.4,.03,9)
@
"^DD",811.4,811.4,.03,21,0)
^.001^2^2^3000609^^^^
"^DD",811.4,811.4,.03,21,1,0)
This is the entry point in the routine specified in the ROUTINE
"^DD",811.4,811.4,.03,21,2,0)
field.
"^DD",811.4,811.4,.03,"DT")
2990527
"^DD",811.4,811.4,.04,0)
PRINT NAME^F^^0;4^K:$L(X)>40!($L(X)<1) X
"^DD",811.4,811.4,.04,3)
Enter the PRINT NAME, up to 40 characters.
"^DD",811.4,811.4,.04,21,0)
^.001^2^2^3000505^^
"^DD",811.4,811.4,.04,21,1,0)
The PRINT NAME will be displayed in the Clinical Maintenance output for
"^DD",811.4,811.4,.04,21,2,0)
computed findings.
"^DD",811.4,811.4,.04,"DT")
3000113
"^DD",811.4,811.4,1,0)
DESCRIPTION^811.41^^1;0
"^DD",811.4,811.4,1,21,0)
^.001^1^1^3000505^^
"^DD",811.4,811.4,1,21,1,0)
This is the description of the computed finding.
"^DD",811.4,811.41,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.4,811.41,0,"DT")
3000405
"^DD",811.4,811.41,0,"NM","DESCRIPTION")

"^DD",811.4,811.41,0,"UP")
811.4
"^DD",811.4,811.41,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",811.4,811.41,.01,3)
Enter a description for this computed finding.
"^DD",811.4,811.41,.01,21,0)
^.001^4^4^3000505^^^
"^DD",811.4,811.41,.01,21,1,0)
This is the description of what this computed findings does. If a VALUE
"^DD",811.4,811.41,.01,21,2,0)
is used it should include a description what kind of data is returned
"^DD",811.4,811.41,.01,21,3,0)
as the VALUE. The VALUE returned can be used in the reminder finding
"^DD",811.4,811.41,.01,21,4,0)
CONDITION field.
"^DD",811.4,811.41,.01,"DT")
3000405
"^DD",811.5,811.5,0)
FIELD^^.01^7
"^DD",811.5,811.5,0,"DDA")
N
"^DD",811.5,811.5,0,"DT")
3000609
"^DD",811.5,811.5,0,"NM","REMINDER TERM")

"^DD",811.5,811.5,0,"PT",811.902,.01)

"^DD",811.5,811.5,.01,0)
NAME^RF^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E) X
"^DD",811.5,811.5,.01,1,0)
^.1^^0
"^DD",811.5,811.5,.01,3)
Enter the name of the term, up to 64 characters.
"^DD",811.5,811.5,.01,21,0)
^^1^1^3000505^
"^DD",811.5,811.5,.01,21,1,0)
This is the name of the term.
"^DD",811.5,811.5,.01,"DT")
3000601
"^DD",811.5,811.5,.02,0)
TERM TYPE^RS^N:NATIONAL;V:VISN;L:LOCAL;^0;2^Q
"^DD",811.5,811.5,.02,3)
Enter the term type.
"^DD",811.5,811.5,.02,21,0)
^.001^1^1^3000509^^^
"^DD",811.5,811.5,.02,21,1,0)
This is the term type.
"^DD",811.5,811.5,.02,"DT")
3000601
"^DD",811.5,811.5,.03,0)
SPONSOR^P811.6^PXRMD(811.6,^0;3^Q
"^DD",811.5,811.5,.03,3)
Enter the sponsor of this term.
"^DD",811.5,811.5,.03,21,0)
^.001^2^2^3000505^^^^
"^DD",811.5,811.5,.03,21,1,0)
This field identifies the sponsor of the reminder term. For nationally
"^DD",811.5,811.5,.03,21,2,0)
distributed reminders, this will be a nationally distributing sponsor.
"^DD",811.5,811.5,.03,"DT")
3000307
"^DD",811.5,811.5,.04,0)
DATE CREATED^RD^^0;4^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",811.5,811.5,.04,21,0)
^.001^1^1^3000508^^
"^DD",811.5,811.5,.04,21,1,0)
This is the date when the term was created.
"^DD",811.5,811.5,.04,"DT")
3000505
"^DD",811.5,811.5,.05,0)
DATE LAST MODIFIED^D^^0;5^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",811.5,811.5,.05,21,0)
^^1^1^3000505^
"^DD",811.5,811.5,.05,21,1,0)
This is the date the term was last modified.
"^DD",811.5,811.5,.05,"DT")
3000505
"^DD",811.5,811.5,1,0)
DESCRIPTION^811.51^^1;0
"^DD",811.5,811.5,1,21,0)
^^1^1^3000505^
"^DD",811.5,811.5,1,21,1,0)
This is a description of the term.
"^DD",811.5,811.5,20,0)
FINDINGS^811.52V^^20;0
"^DD",811.5,811.5,20,21,0)
^.001^4^4^3000609^^^^
"^DD",811.5,811.5,20,21,1,0)
This multiple identifies which finding items have been selected to
"^DD",811.5,811.5,20,21,2,0)
represent the term. If there is more than one finding item they will
"^DD",811.5,811.5,20,21,3,0)
all be evaluated and the most recent TRUE finding will represent the
"^DD",811.5,811.5,20,21,4,0)
term.
"^DD",811.5,811.5,20,"DT")
2990914
"^DD",811.5,811.51,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.5,811.51,0,"DT")
2990512
"^DD",811.5,811.51,0,"NM","DESCRIPTION")

"^DD",811.5,811.51,0,"UP")
811.5
"^DD",811.5,811.51,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",811.5,811.51,.01,3)
Enter the description of the term.
"^DD",811.5,811.51,.01,"DT")
2990512
"^DD",811.5,811.52,0)
FINDINGS SUB-FIELD^^13^6
"^DD",811.5,811.52,0,"DT")
3000609
"^DD",811.5,811.52,0,"IX","B",811.52,.01)

"^DD",811.5,811.52,0,"IX","E",811.52,.01)

"^DD",811.5,811.52,0,"NM","FINDINGS")

"^DD",811.5,811.52,0,"UP")
811.5
"^DD",811.5,811.52,.01,0)
FINDING ITEM^MVX^^0;1^K:'$$VFINDING^PXRMINTR(X) X
"^DD",811.5,811.52,.01,1,0)
^.1
"^DD",811.5,811.52,.01,1,1,0)
811.52^B
"^DD",811.5,811.52,.01,1,1,1)
S ^PXRMD(811.5,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",811.5,811.52,.01,1,1,2)
K ^PXRMD(811.5,DA(1),20,"B",$E(X,1,30),DA)
"^DD",811.5,811.52,.01,1,1,3)
Required Index for Variable Pointer
"^DD",811.5,811.52,.01,1,2,0)
811.52^E^MUMPS
"^DD",811.5,811.52,.01,1,2,1)
S ^PXRMD(811.5,DA(1),20,"E",$P(X,";",2),$P(X,";",1),DA)=""
"^DD",811.5,811.52,.01,1,2,2)
K ^PXRMD(811.5,DA(1),20,"E",$P(X,";",2),$P(X,";",1),DA)
"^DD",811.5,811.52,.01,1,2,"%D",0)
^^1^1^2990913^
"^DD",811.5,811.52,.01,1,2,"%D",1,0)
This cross-reference is used to group findings by type.
"^DD",811.5,811.52,.01,1,2,"DT")
2990913
"^DD",811.5,811.52,.01,3)
Enter a new finding item
"^DD",811.5,811.52,.01,"DT")
3000421
"^DD",811.5,811.52,.01,"V",0)
^.12P^15^15
"^DD",811.5,811.52,.01,"V",1,0)
50^DRUG^5^DR^n^n
"^DD",811.5,811.52,.01,"V",2,0)
9999999.09^EDUCATION TOPIC^10^ED^n^n
"^DD",811.5,811.52,.01,"V",3,0)
9999999.15^EXAM^15^EX^n^n
"^DD",811.5,811.52,.01,"V",4,0)
9999999.64^HEALTH FACTOR^20^HF^n^n
"^DD",811.5,811.52,.01,"V",5,0)
9999999.14^IMMUNIZATION^25^IM^n^n
"^DD",811.5,811.52,.01,"V",6,0)
60^LABORATORY TEST^30^LT^n^n
"^DD",811.5,811.52,.01,"V",7,0)
601^MENTAL HEALTH INSTRUMENT^35^MH^n^n
"^DD",811.5,811.52,.01,"V",8,0)
101.43^ORDERABLE ITEM^40^OI^n^n
"^DD",811.5,811.52,.01,"V",9,0)
71^RADIOLOGY PROCEDURE^45^RP^n^n
"^DD",811.5,811.52,.01,"V",10,0)
811.4^REMINDER COMPUTED FINDING^50^CF^n^n
"^DD",811.5,811.52,.01,"V",11,0)
811.2^REMINDER TAXONOMY^55^TX^n^n
"^DD",811.5,811.52,.01,"V",12,0)
9999999.28^SKIN TEST^65^ST^n^n
"^DD",811.5,811.52,.01,"V",13,0)
50.605^VA DRUG CLASS^70^DC^n^n
"^DD",811.5,811.52,.01,"V",14,0)
50.6^VA GENERIC^75^DG^n^n
"^DD",811.5,811.52,.01,"V",15,0)
120.51^VITAL MEASUREMENT^80^VM^n^n
"^DD",811.5,811.52,9,0)
EFFECTIVE PERIOD^FX^^0;8^K:'$$VTPER^PXRMINTR(.X) X
"^DD",811.5,811.52,9,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.5,811.52,9,21,0)
^^6^6^3000505^
"^DD",811.5,811.52,9,21,1,0)
This is the amount of time the finding will remain valid. For example,
"^DD",811.5,811.52,9,21,2,0)
if the EFFECTIVE PERIOD is 1Y and the date of the finding is less than
"^DD",811.5,811.52,9,21,3,0)
one year ago the finding will be true. If the date is more than a year
"^DD",811.5,811.52,9,21,4,0)
ago the finding will have expired and be false. If this field is left
"^DD",811.5,811.52,9,21,5,0)
empty then the finding never expires.
"^DD",811.5,811.52,9,21,6,0)

"^DD",811.5,811.52,9,"DT")
3000427
"^DD",811.5,811.52,10,0)
USE INACTIVE PROBLEMS^S^1:YES;0:NO;^0;9^Q
"^DD",811.5,811.52,10,3)
Enter a 1 or YES if you want inactive problems used.
"^DD",811.5,811.52,10,21,0)
^^5^5^3000505^
"^DD",811.5,811.52,10,21,1,0)
Normally only active problems from the Problem List will be used in the
"^DD",811.5,811.52,10,21,2,0)
reminder evaluation. If USE INACTIVE PROBLEMS is set to YES then both
"^DD",811.5,811.52,10,21,3,0)
active and inactive problems will be used. Note that this field applies
"^DD",811.5,811.52,10,21,4,0)
only to taxonomy findings.
"^DD",811.5,811.52,10,21,5,0)

"^DD",811.5,811.52,10,"DT")
3000314
"^DD",811.5,811.52,11,0)
WITHIN CATEGORY RANK^NJ3,0^^0;10^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.5,811.52,11,3)
Type a number between 0 and 999, 0 decimal digits.
"^DD",811.5,811.52,11,21,0)
^.001^17^17^3000508^^^^
"^DD",811.5,811.52,11,21,1,0)
This field applies only to health factors. In order to understand how
"^DD",811.5,811.52,11,21,2,0)
it works, you need to understand how health factors work in the
"^DD",811.5,811.52,11,21,3,0)
reminder evaluation process. If you are not clear about this, see the
"^DD",811.5,811.52,11,21,4,0)
health factor section of the Clinical Reminders Manager Manual.
"^DD",811.5,811.52,11,21,5,0)

"^DD",811.5,811.52,11,21,6,0)
The default behavior is to use only the most recent health factor
"^DD",811.5,811.52,11,21,7,0)
within a category. A problem can arise if there are two or more health
"^DD",811.5,811.52,11,21,8,0)
factors within a category and they both have the same date. (This can
"^DD",811.5,811.52,11,21,9,0)
happen if both health factors are given during the same encounter). 
"^DD",811.5,811.52,11,21,10,0)
When the dates are the same, the health factor with the highest WITHIN
"^DD",811.5,811.52,11,21,11,0)
CATEGORY RANK will be used. This is a numerical value like RANK
"^DD",811.5,811.52,11,21,12,0)
FREQUENCY with 1 being the highest rank.
"^DD",811.5,811.52,11,21,13,0)

"^DD",811.5,811.52,11,21,14,0)
If WITHIN CATEGORY RANK has the special value of 0 then the
"^DD",811.5,811.52,11,21,15,0)
categorization of health factors will be ignored and the health factor
"^DD",811.5,811.52,11,21,16,0)
will be treated as a distinct finding.
"^DD",811.5,811.52,11,21,17,0)

"^DD",811.5,811.52,11,"DT")
3000505
"^DD",811.5,811.52,12,0)
CONDITION^FXO^^0;11^K:($L(X)>52)!($L(X)<3) X D VCOND^PXRMINTR(.X)
"^DD",811.5,811.52,12,2)
S Y(0)=Y S Y=$TR(Y,"~"," ")
"^DD",811.5,811.52,12,2.1)
S Y=$TR(Y,"~"," ")
"^DD",811.5,811.52,12,3)
Answer must be 3-52 characters in length.
"^DD",811.5,811.52,12,21,0)
^.001^48^48^3000609^^^
"^DD",811.5,811.52,12,21,1,0)
The CONDITION must be written in M code based on the value returned from
"^DD",811.5,811.52,12,21,2,0)
the patient results for the finding. Each type of finding has a specific
"^DD",811.5,811.52,12,21,3,0)
field that provides the value available to use in the CONDITION logic.
"^DD",811.5,811.52,12,21,4,0)
If the finding value is text, enclose the condition value in quotes 
"^DD",811.5,811.52,12,21,5,0)
(e.g., "positive"). If the finding value is numeric, do not use quotes
"^DD",811.5,811.52,12,21,6,0)
(e.g., 3).
"^DD",811.5,811.52,12,21,7,0)
 
"^DD",811.5,811.52,12,21,8,0)
An IF statement is used to evaluate the value.  The value is always
"^DD",811.5,811.52,12,21,9,0)
identified as V in the statement regardless of the type of finding. If 
"^DD",811.5,811.52,12,21,10,0)
the condition logic statement evaluates to true, the finding is 
"^DD",811.5,811.52,12,21,11,0)
considered as found (true), otherwise the finding is considered as not
"^DD",811.5,811.52,12,21,12,0)
found (false).
"^DD",811.5,811.52,12,21,13,0)
 
"^DD",811.5,811.52,12,21,14,0)
Relational operators that may be used include: = equals, < less than, >
"^DD",811.5,811.52,12,21,15,0)
greater than, [ contains, ] follows and ? pattern matches. Logical
"^DD",811.5,811.52,12,21,16,0)
operators may be used to check multiple values: & And, ! Or, ' Not. 
"^DD",811.5,811.52,12,21,17,0)
 
"^DD",811.5,811.52,12,21,18,0)
Typical examples of M code are as follows:
"^DD",811.5,811.52,12,21,19,0)
    I V=3 for Education Topic's Level of Understanding = 3
"^DD",811.5,811.52,12,21,20,0)
    I V="H" for Health Factor's Level/Severity="H"
"^DD",811.5,811.52,12,21,21,0)
    I ($P(V,"/",1)>140)&($P(V,"/",2)>90) for elevated blood pressure
"^DD",811.5,811.52,12,21,22,0)
    I ($P(V,"/",1)>140)!($P(V,"/",2)>90) for elevated blood pressure
"^DD",811.5,811.52,12,21,23,0)
    systolic or diastolic values.
"^DD",811.5,811.52,12,21,24,0)
    I V["BLACK" for Race description which includes black.         
"^DD",811.5,811.52,12,21,25,0)
 
"^DD",811.5,811.52,12,21,26,0)
Below is a brief summary for each finding type, the related field to use
"^DD",811.5,811.52,12,21,27,0)
for the value and examples:
"^DD",811.5,811.52,12,21,28,0)
 
"^DD",811.5,811.52,12,21,29,0)
Finding type                Field Value Used        Example M Code
"^DD",811.5,811.52,12,21,30,0)
 
"^DD",811.5,811.52,12,21,31,0)
 Drug                       None
"^DD",811.5,811.52,12,21,32,0)
 Education Topic            Level of understanding  I V=3
"^DD",811.5,811.52,12,21,33,0)
 Exam                       Result                  I V="N"
"^DD",811.5,811.52,12,21,34,0)
 Health Factor              Level/severity          I V="H"
"^DD",811.5,811.52,12,21,35,0)
 Immunization               Series                  I V="P"
"^DD",811.5,811.52,12,21,36,0)
 Laboratory Test            Result Value            I V>130
"^DD",811.5,811.52,12,21,37,0)
 Mental Health Instrument   Raw score               I V=1
"^DD",811.5,811.52,12,21,38,0)
 Orderable Item             Status                  I V="complete"
"^DD",811.5,811.52,12,21,39,0)
 Radiology Procedure        None
"^DD",811.5,811.52,12,21,40,0)
 Reminder Computed Finding  Determined by programmer-See Manager Manual
"^DD",811.5,811.52,12,21,41,0)
 Reminder Taxonomy          None
"^DD",811.5,811.52,12,21,42,0)
 Skin Test                  Result                  I V="N"
"^DD",811.5,811.52,12,21,43,0)
 VA Drug Class              None
"^DD",811.5,811.52,12,21,44,0)
 VA Generic                 None
"^DD",811.5,811.52,12,21,45,0)
 Vital Measurement          Rate                    I V>27
"^DD",811.5,811.52,12,21,46,0)
 
"^DD",811.5,811.52,12,21,47,0)
For details about allowed CONDITIONS for each finding type see the
"^DD",811.5,811.52,12,21,48,0)
Clinical Reminders Manager Manual.
"^DD",811.5,811.52,12,"DT")
3000609
"^DD",811.5,811.52,13,0)
MH SCALE^FX^^0;12^K:$L(X)>79!($L(X)<1) X D VSCALET^PXRMMH
"^DD",811.5,811.52,13,3)
Enter the scale number or scale name.
"^DD",811.5,811.52,13,4)
D SCHELPT^PXRMMH
"^DD",811.5,811.52,13,21,0)
^^3^3^3000505^
"^DD",811.5,811.52,13,21,1,0)
This applies only to Mental Health Instrument findings. It specifies
"^DD",811.5,811.52,13,21,2,0)
which scale to use when scoring the test.
"^DD",811.5,811.52,13,21,3,0)

"^DD",811.5,811.52,13,"DT")
3000321
"^DD",811.6,811.6,0)
FIELD^^.02^2
"^DD",811.6,811.6,0,"DDA")
N
"^DD",811.6,811.6,0,"DT")
3000505
"^DD",811.6,811.6,0,"NM","REMINDER TERM SPONSOR")

"^DD",811.6,811.6,0,"PT",811.5,.03)

"^DD",811.6,811.6,.01,0)
NAME^RF^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E) X
"^DD",811.6,811.6,.01,1,0)
^.1^^0
"^DD",811.6,811.6,.01,3)
Enter the term sponsor, up to 64 characters.
"^DD",811.6,811.6,.01,21,0)
^.001^2^2^3000508^^
"^DD",811.6,811.6,.01,21,1,0)
This is the name of a group or organization that sponsors reminder
"^DD",811.6,811.6,.01,21,2,0)
terms.
"^DD",811.6,811.6,.01,"DEL",1,0)
I DA<100000 W !,*7,"CANNOT DELETE"
"^DD",811.6,811.6,.01,"DT")
3000505
"^DD",811.6,811.6,.02,0)
SPONSOR TYPE^S^N:National;L:Local;V:VISN;^0;2^Q
"^DD",811.6,811.6,.02,3)
Enter the type of sponsor.
"^DD",811.6,811.6,.02,21,0)
^^1^1^3000505^
"^DD",811.6,811.6,.02,21,1,0)
This is the type of organization or group that sponsors reminder terms.
"^DD",811.6,811.6,.02,"DT")
2990512
"^DD",811.7,811.7,0)
FIELD^^10^4
"^DD",811.7,811.7,0,"DDA")
N
"^DD",811.7,811.7,0,"DT")
3000508
"^DD",811.7,811.7,0,"IX","AC",811.701,.01)

"^DD",811.7,811.7,0,"IX","ACP",811.7,.01)

"^DD",811.7,811.7,0,"NM","REMINDER CATEGORY")

"^DD",811.7,811.7,0,"PT",811.701,.01)

"^DD",811.7,811.7,.01,0)
NAME^RF^^0;1^K:$L(X)>35!($L(X)<3)!'(X'?1P.E) X
"^DD",811.7,811.7,.01,1,0)
^.1^^-1
"^DD",811.7,811.7,.01,1,2,0)
811.7^ACP^MUMPS
"^DD",811.7,811.7,.01,1,2,1)
D SETAC^PXRMCLST
"^DD",811.7,811.7,.01,1,2,2)
D KILLAC^PXRMCLST
"^DD",811.7,811.7,.01,1,2,"%D",0)
^^7^7^3000613^
"^DD",811.7,811.7,.01,1,2,"%D",1,0)
If a category is deleted this cross reference deletes pointers to that
"^DD",811.7,811.7,.01,1,2,"%D",2,0)
category from other reminder categories.
"^DD",811.7,811.7,.01,1,2,"%D",3,0)
 
"^DD",811.7,811.7,.01,1,2,"%D",4,0)
The 'AC' index (^PXRMD(811.7,Sub-Category,Category,DA)) is used to
"^DD",811.7,811.7,.01,1,2,"%D",5,0)
determine which categories point to the deleted category. DIK is then
"^DD",811.7,811.7,.01,1,2,"%D",6,0)
used to remove the deleted category from the sub-category multiple of
"^DD",811.7,811.7,.01,1,2,"%D",7,0)
these categories.
"^DD",811.7,811.7,.01,1,2,"DT")
2990617
"^DD",811.7,811.7,.01,3)
Enter the name of the category, up to 35 characters.
"^DD",811.7,811.7,.01,21,0)
^.001^1^1^3000613^^^^
"^DD",811.7,811.7,.01,21,1,0)
This is the name of the reminder category.
"^DD",811.7,811.7,.01,"DT")
3000508
"^DD",811.7,811.7,1,0)
DESCRIPTION^811.71^^1;0
"^DD",811.7,811.7,1,21,0)
^^1^1^3000508^
"^DD",811.7,811.7,1,21,1,0)
This is the descriptio of the reminder category.
"^DD",811.7,811.7,2,0)
INDIVIDUAL REMINDERS^811.72P^^2;0
"^DD",811.7,811.7,2,21,0)
^^1^1^3000508^
"^DD",811.7,811.7,2,21,1,0)
This is the list of reminders that are in this category.
"^DD",811.7,811.7,10,0)
SUB-CATEGORY^811.701P^^10;0
"^DD",811.7,811.7,10,12)
Category cannot point to itself.
"^DD",811.7,811.7,10,12.1)
S DIC("S")="I ^(0)'=^PXRMD(811.7,DA,0)"
"^DD",811.7,811.7,10,21,0)
^.001^3^3^3000508^^^
"^DD",811.7,811.7,10,21,1,0)
This multiple allows you to include already existing categories as part
"^DD",811.7,811.7,10,21,2,0)
of a new category. Sub-categories are always listed after individual
"^DD",811.7,811.7,10,21,3,0)
reminders.
"^DD",811.7,811.701,0)
SUB-CATEGORY SUB-FIELD^^.02^2
"^DD",811.7,811.701,0,"DT")
2990611
"^DD",811.7,811.701,0,"IX","B",811.701,.01)

"^DD",811.7,811.701,0,"NM","SUB-CATEGORY")

"^DD",811.7,811.701,0,"UP")
811.7
"^DD",811.7,811.701,.01,0)
SUB-CATEGORY^MP811.7'X^PXRMD(811.7,^0;1^K:$$BADITEM^PXRMCLST(X,DA(1)) X
"^DD",811.7,811.701,.01,1,0)
^.1
"^DD",811.7,811.701,.01,1,1,0)
811.701^B
"^DD",811.7,811.701,.01,1,1,1)
S ^PXRMD(811.7,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",811.7,811.701,.01,1,1,2)
K ^PXRMD(811.7,DA(1),10,"B",$E(X,1,30),DA)
"^DD",811.7,811.701,.01,1,2,0)
811.7^AC
"^DD",811.7,811.701,.01,1,2,1)
S ^PXRMD(811.7,"AC",$E(X,1,30),DA(1),DA)=""
"^DD",811.7,811.701,.01,1,2,2)
K ^PXRMD(811.7,"AC",$E(X,1,30),DA(1),DA)
"^DD",811.7,811.701,.01,1,2,"%D",0)
^^3^3^3000613^
"^DD",811.7,811.701,.01,1,2,"%D",1,0)
This cross reference holds the Parent categories for each category.
"^DD",811.7,811.701,.01,1,2,"%D",2,0)
 
"^DD",811.7,811.701,.01,1,2,"%D",3,0)
The ACP cross reference on the name field deletes this cross reference.
"^DD",811.7,811.701,.01,1,2,"DT")
2990617
"^DD",811.7,811.701,.01,3)
The sub-category selected cannot be the same as the parent category, nor a sub-category within the current category hierarchy. 
"^DD",811.7,811.701,.01,21,0)
^.001^2^2^3000508^^
"^DD",811.7,811.701,.01,21,1,0)
This is an existing category that is to be included as part of a new
"^DD",811.7,811.701,.01,21,2,0)
category.
"^DD",811.7,811.701,.01,"DT")
2990617
"^DD",811.7,811.701,.02,0)
DISPLAY ORDER^RNJ2,0X^^0;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X K:'$$UNIQUE^PXRMCLST(X,DA(1),DA,10) X
"^DD",811.7,811.701,.02,3)
Enter the sub-category display order.
"^DD",811.7,811.701,.02,21,0)
^^2^2^3000508^
"^DD",811.7,811.701,.02,21,1,0)
This is the display order for the sub-categories. Sub-categories are
"^DD",811.7,811.701,.02,21,2,0)
displayed after individual reminders.
"^DD",811.7,811.701,.02,"DT")
2990616
"^DD",811.7,811.71,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.7,811.71,0,"DT")
2990512
"^DD",811.7,811.71,0,"NM","DESCRIPTION")

"^DD",811.7,811.71,0,"UP")
811.7
"^DD",811.7,811.71,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",811.7,811.71,.01,3)
Enter the description of the reminder category.
"^DD",811.7,811.71,.01,"DT")
2990512
"^DD",811.7,811.72,0)
INDIVIDUAL REMINDERS SUB-FIELD^^.02^2
"^DD",811.7,811.72,0,"DT")
2990610
"^DD",811.7,811.72,0,"IX","B",811.72,.01)

"^DD",811.7,811.72,0,"NM","INDIVIDUAL REMINDERS")

"^DD",811.7,811.72,0,"UP")
811.7
"^DD",811.7,811.72,.01,0)
INDIVIDUAL REMINDERS^MP811.9'^PXD(811.9,^0;1^Q
"^DD",811.7,811.72,.01,1,0)
^.1
"^DD",811.7,811.72,.01,1,1,0)
811.72^B
"^DD",811.7,811.72,.01,1,1,1)
S ^PXRMD(811.7,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",811.7,811.72,.01,1,1,2)
K ^PXRMD(811.7,DA(1),2,"B",$E(X,1,30),DA)
"^DD",811.7,811.72,.01,3)
Enter a reminder definition that you want in this category.
"^DD",811.7,811.72,.01,21,0)
^^1^1^3000508^
"^DD",811.7,811.72,.01,21,1,0)
This is a reminder definition.
"^DD",811.7,811.72,.01,"DT")
2990610
"^DD",811.7,811.72,.02,0)
DISPLAY ORDER^RNJ2,0X^^0;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X Q:'$D(X)  K:'$$UNIQUE^PXRMCLST(X,DA(1),DA,2) X
"^DD",811.7,811.72,.02,3)
Enter the display order for this reminder definition.
"^DD",811.7,811.72,.02,21,0)
^.001^2^2^3000508^^
"^DD",811.7,811.72,.02,21,1,0)
This is the order to display this reminder definition when the list of
"^DD",811.7,811.72,.02,21,2,0)
reminders in this category is displayed.
"^DD",811.7,811.72,.02,"DT")
3000406
"^DD",811.9,811.9,0)
FIELD^^66^41
"^DD",811.9,811.9,0,"DDA")
N
"^DD",811.9,811.9,0,"DT")
3000607
"^DD",811.9,811.9,0,"IX","AC",811.944,.01)

"^DD",811.9,811.9,0,"IX","AD",811.9,.01)

"^DD",811.9,811.9,0,"IX","AG",811.9,51)

"^DD",811.9,811.9,0,"IX","C",811.9,1)

"^DD",811.9,811.9,0,"IX","E",811.902,.01)

"^DD",811.9,811.9,0,"NM","REMINDER DEFINITION")

"^DD",811.9,811.9,0,"PT",142.14,.01)

"^DD",811.9,811.9,0,"PT",801.41,2)

"^DD",811.9,811.9,0,"PT",810.12,.01)

"^DD",811.9,811.9,0,"PT",811.72,.01)

"^DD",811.9,811.9,0,"PT",811.9,1.4)

"^DD",811.9,811.9,0,"VRPK")
PX
"^DD",811.9,811.9,.01,0)
NAME^RFX^^0;1^K:$L(X)>35!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXRMINTR(X,811.9)) X
"^DD",811.9,811.9,.01,1,0)
^.1^^-1
"^DD",811.9,811.9,.01,1,2,0)
811.9^AD^MUMPS
"^DD",811.9,811.9,.01,1,2,1)
Q
"^DD",811.9,811.9,.01,1,2,2)
D DELEXTL^PXRMBXTL(DA)
"^DD",811.9,811.9,.01,1,2,"DT")
2980619
"^DD",811.9,811.9,.01,3)
Enter the name of the clinical reminder.
"^DD",811.9,811.9,.01,21,0)
^.001^8^8^3000505^^^^
"^DD",811.9,811.9,.01,21,1,0)
This field is the name of a clinical reminder definition. Nationally
"^DD",811.9,811.9,.01,21,2,0)
distributed reminder definition names are prefixed with "VA-". The VA-
"^DD",811.9,811.9,.01,21,3,0)
prefixed reminder definitions cannot be altered by a site, but may be
"^DD",811.9,811.9,.01,21,4,0)
inactivated so they will not be selectable.
"^DD",811.9,811.9,.01,21,5,0)
 
"^DD",811.9,811.9,.01,21,6,0)
Local modifications can be made to any "VA-" reminder definition by
"^DD",811.9,811.9,.01,21,7,0)
copying the definition to a new one with a unique name and then making
"^DD",811.9,811.9,.01,21,8,0)
modifications to the new definition which meet local criteria.
"^DD",811.9,811.9,.01,23,0)
^.001^6^6^3000505^^^^
"^DD",811.9,811.9,.01,23,1,0)
Reminders created by a site are stored at internal entry numbers
"^DD",811.9,811.9,.01,23,2,0)
consisting of the primary facilities institution number concatenated
"^DD",811.9,811.9,.01,23,3,0)
with an incremented unique number beginning with "000".  
"^DD",811.9,811.9,.01,23,4,0)
 
"^DD",811.9,811.9,.01,23,5,0)
Any entries in the file preceding 100000 will not be alterable by a
"^DD",811.9,811.9,.01,23,6,0)
site. These are the nationally distributed reminders.
"^DD",811.9,811.9,.01,"DT")
3000601
"^DD",811.9,811.9,1,0)
REMINDER TYPE^P811.8'^PXD(811.8,^0;2^Q
"^DD",811.9,811.9,1,1,0)
^.1
"^DD",811.9,811.9,1,1,1,0)
811.9^C
"^DD",811.9,811.9,1,1,1,1)
S ^PXD(811.9,"C",$E(X,1,30),DA)=""
"^DD",811.9,811.9,1,1,1,2)
K ^PXD(811.9,"C",$E(X,1,30),DA)
"^DD",811.9,811.9,1,1,1,"%D",0)
^^1^1^2960131^
"^DD",811.9,811.9,1,1,1,"%D",1,0)
This cross-reference allows look-ups on the file by reminder type.
"^DD",811.9,811.9,1,1,1,"DT")
2960131
"^DD",811.9,811.9,1,3)
This field is obsolete, do not use.
"^DD",811.9,811.9,1,21,0)
^.001^1^1^3000505^^^^
"^DD",811.9,811.9,1,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9,1,"DT")
3000504
"^DD",811.9,811.9,1.2,0)
PRINT NAME^F^^0;3^K:$L(X)>35!($L(X)<3) X
"^DD",811.9,811.9,1.2,1,0)
^.1^^0
"^DD",811.9,811.9,1.2,3)
Enter the print name.
"^DD",811.9,811.9,1.2,21,0)
^^2^2^3000426^
"^DD",811.9,811.9,1.2,21,1,0)
This is the name that is used when the results of a reminder evaluation
"^DD",811.9,811.9,1.2,21,2,0)
are displayed.
"^DD",811.9,811.9,1.2,"DT")
3000216
"^DD",811.9,811.9,1.3,0)
DO IN ADVANCE TIME FRAME^FX^^0;4^K:'$$VTPER^PXRMINTR(.X) X
"^DD",811.9,811.9,1.3,3)
Enter time period to mark the reminder due in advance (e.g., 6M,1Y).
"^DD",811.9,811.9,1.3,21,0)
^.001^6^6^3000503^^
"^DD",811.9,811.9,1.3,21,1,0)
This field is used to let a reminder become due earlier than the date
"^DD",811.9,811.9,1.3,21,2,0)
determined by adding the frequency to the date when the reminder was
"^DD",811.9,811.9,1.3,21,3,0)
last resolved. For example, if the frequency is 1Y (one year) and the
"^DD",811.9,811.9,1.3,21,4,0)
DO IN ADVANCE TIME FRAME is 1M (one month) the reminder would have a
"^DD",811.9,811.9,1.3,21,5,0)
status of "DUE SOON" 11 months after it was last resolved. After one
"^DD",811.9,811.9,1.3,21,6,0)
year has passed the STATUS would be "DUE."
"^DD",811.9,811.9,1.3,"DT")
3000427
"^DD",811.9,811.9,1.4,0)
RELATED REMINDER GUIDELINE^*P811.9^PXD(811.9,^0;5^S DIC("S")="I $E($P(^(0),U,1),1,4)=""VA-*""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",811.9,811.9,1.4,3)
Enter the related national standard reminder if this reminder replaces the standard.
"^DD",811.9,811.9,1.4,12)
Look-up on National standard reminders for Congressional reporting
"^DD",811.9,811.9,1.4,12.1)
S DIC("S")="I $E($P(^(0),U,1),1,4)=""VA-*"""
"^DD",811.9,811.9,1.4,21,0)
^.001^8^8^3000503^^^^
"^DD",811.9,811.9,1.4,21,1,0)
If this local reminder replaces an NCHP related reminder, then identify
"^DD",811.9,811.9,1.4,21,2,0)
the related NCHP reminder here.
"^DD",811.9,811.9,1.4,21,3,0)
 
"^DD",811.9,811.9,1.4,21,4,0)
The National Center for Health Promotion (NCHP) has identified reminders
"^DD",811.9,811.9,1.4,21,5,0)
which must be tracked at local facilities and reported on to Congress. The
"^DD",811.9,811.9,1.4,21,6,0)
reminders that address the NCHP reminders are prefixed with "VA-*".  These
"^DD",811.9,811.9,1.4,21,7,0)
reminders may be used in the Health Summary Components, or replaced by a
"^DD",811.9,811.9,1.4,21,8,0)
local reminder that also satisfies the NCHP guideline. 
"^DD",811.9,811.9,1.4,"DT")
2970509
"^DD",811.9,811.9,1.6,0)
INACTIVE FLAG^SX^1:INACTIVE;^0;6^Q
"^DD",811.9,811.9,1.6,1,0)
^.1
"^DD",811.9,811.9,1.6,1,1,0)
^^TRIGGER^811.9^1.7
"^DD",811.9,811.9,1.6,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^PXD(811.9,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y X ^DD(811.9,1.6,1,1,1.1) X ^DD(811.9,1.6,1,1,1.4)
"^DD",811.9,811.9,1.6,1,1,1.1)
S X=DIV S %=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100)
"^DD",811.9,811.9,1.6,1,1,1.4)
S DIH=$S($D(^PXD(811.9,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=811.9,DIG=1.7 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",811.9,811.9,1.6,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^PXD(811.9,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y X ^DD(811.9,1.6,1,1,2.1) X ^DD(811.9,1.6,1,1,2.4)
"^DD",811.9,811.9,1.6,1,1,2.1)
S X=DIV S %=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100)
"^DD",811.9,811.9,1.6,1,1,2.4)
S DIH=$S($D(^PXD(811.9,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=811.9,DIG=1.7 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",811.9,811.9,1.6,1,1,"CREATE VALUE")
NOW
"^DD",811.9,811.9,1.6,1,1,"DELETE VALUE")
NOW
"^DD",811.9,811.9,1.6,1,1,"DT")
2971008
"^DD",811.9,811.9,1.6,1,1,"FIELD")
INACTIVE DATE
"^DD",811.9,811.9,1.6,3)
Enter "1" to inactivate the reminder.
"^DD",811.9,811.9,1.6,21,0)
^.001^6^6^3000503^^^^
"^DD",811.9,811.9,1.6,21,1,0)
Reminders that are inactive will not be evaluated. The Clinical
"^DD",811.9,811.9,1.6,21,2,0)
Maintenance component will return a message stating the reminder is
"^DD",811.9,811.9,1.6,21,3,0)
inactive and the date when it was made inactive.
"^DD",811.9,811.9,1.6,21,4,0)

"^DD",811.9,811.9,1.6,21,5,0)
Other applications that use reminders may use this flag to determine if
"^DD",811.9,811.9,1.6,21,6,0)
a reminder can be selected for inclusion.
"^DD",811.9,811.9,1.6,23,0)
^^7^7^3000503^
"^DD",811.9,811.9,1.6,23,1,0)
When a reminder is inactive the following will occur:
"^DD",811.9,811.9,1.6,23,2,0)
1. It cannot be selected for inclusion on a Health Summary. (Other
"^DD",811.9,811.9,1.6,23,3,0)
packages that use Reminders should follow this rule.)
"^DD",811.9,811.9,1.6,23,4,0)
2. In the Clinical Maintenance mode a message will be returned stating the
"^DD",811.9,811.9,1.6,23,5,0)
reminder is inactive along with the date and time when it was made
"^DD",811.9,811.9,1.6,23,6,0)
inactive.
"^DD",811.9,811.9,1.6,23,7,0)
3. In any other mode nothing will be returned.
"^DD",811.9,811.9,1.6,"DT")
2971008
"^DD",811.9,811.9,1.7,0)
INACTIVE CHANGE DATE^DX^^0;7^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",811.9,811.9,1.7,5,1,0)
811.9^1.6^1
"^DD",811.9,811.9,1.7,9)
^
"^DD",811.9,811.9,1.7,21,0)
^.001^2^2^3000428^^
"^DD",811.9,811.9,1.7,21,1,0)
This is the date and time when the INACTIVE FLAG was last changed. It
"^DD",811.9,811.9,1.7,21,2,0)
is set automatically. Users should never edit this field.
"^DD",811.9,811.9,1.7,23,0)
^.001^1^1^3000428^^
"^DD",811.9,811.9,1.7,23,1,0)
This field is set by a trigger on INACTIVE FLAG.
"^DD",811.9,811.9,1.7,"DT")
2971008
"^DD",811.9,811.9,1.8,0)
IGNORE ON N/A^FX^^0;8^S X=$$UP^XLFSTR(X) K:'$$VIGNAC^PXRMINTR(X) X
"^DD",811.9,811.9,1.8,3)
Input a string of N/A code(s)
"^DD",811.9,811.9,1.8,21,0)
^.001^10^10^3000428^^^^
"^DD",811.9,811.9,1.8,21,1,0)
This field allows the user to stop reminders from being printed in the
"^DD",811.9,811.9,1.8,21,2,0)
Clinical Maintenance component if the reminder is N/A. This is free
"^DD",811.9,811.9,1.8,21,3,0)
text field that can contain any combination of the following codes:
"^DD",811.9,811.9,1.8,21,4,0)
 
"^DD",811.9,811.9,1.8,21,5,0)
Code  Description
"^DD",811.9,811.9,1.8,21,6,0)
 A    N/A due to not meeting age criteria.
"^DD",811.9,811.9,1.8,21,7,0)
 I    N/A due to inactive reminder.
"^DD",811.9,811.9,1.8,21,8,0)
 R    N/A due to the wrong race.
"^DD",811.9,811.9,1.8,21,9,0)
 S    N/A due to the wrong sex.
"^DD",811.9,811.9,1.8,21,10,0)
 *    N/A for any reason.
"^DD",811.9,811.9,1.8,"DT")
2991103
"^DD",811.9,811.9,1.9,0)
SEX SPECIFIC^S^F:FEMALE;M:MALE;^0;9^Q
"^DD",811.9,811.9,1.9,3)
Enter M or F if this reminder is sex specific.
"^DD",811.9,811.9,1.9,21,0)
^.001^5^5^3000428^^^^
"^DD",811.9,811.9,1.9,21,1,0)
This field is used to make a reminder sex specific. If an "F" is
"^DD",811.9,811.9,1.9,21,2,0)
entered the reminder applies only to females. If an "M" is entered the
"^DD",811.9,811.9,1.9,21,3,0)
reminder applies only to males. If it is left blank then the reminder
"^DD",811.9,811.9,1.9,21,4,0)
is applicable to either sex.
"^DD",811.9,811.9,1.9,21,5,0)

"^DD",811.9,811.9,1.9,"DT")
2951109
"^DD",811.9,811.9,1.91,0)
PRIORITY^S^1:HIGH;2:MEDIUM;3:LOW;^0;10^Q
"^DD",811.9,811.9,1.91,3)
Enter the reminder priority.
"^DD",811.9,811.9,1.91,21,0)
^.001^1^1^3000428^^^^
"^DD",811.9,811.9,1.91,21,1,0)
The reminder priority is used by the CPRS GUI for sorting purposes.
"^DD",811.9,811.9,1.91,"DT")
2990716
"^DD",811.9,811.9,2,0)
REMINDER DESCRIPTION^811.92^^1;0
"^DD",811.9,811.9,2,21,0)
^.001^1^1^3000428^^^^
"^DD",811.9,811.9,2,21,1,0)
This field contains a clinical description of the clinical reminder.
"^DD",811.9,811.9,2,"DT")
2960131
"^DD",811.9,811.9,3,0)
TECHNICAL DESCRIPTION^811.93^^2;0
"^DD",811.9,811.9,3,21,0)
^.001^2^2^3000428^^^^
"^DD",811.9,811.9,3,21,1,0)
The technical description describes how a reminder is supposed to work and
"^DD",811.9,811.9,3,21,2,0)
why the definition is set up the way it is.
"^DD",811.9,811.9,3,"DT")
2960131
"^DD",811.9,811.9,4,0)
TARGET RESULT FINDINGS^811.94P^^3;0
"^DD",811.9,811.9,4,12)
Screen for Files with an Application Group of "PXRM"
"^DD",811.9,811.9,4,12.1)
S DIC("S")="I $D(^DIC(""AC"",""PXRM"",+Y))"
"^DD",811.9,811.9,4,21,0)
^.001^1^1^3000505^^^^
"^DD",811.9,811.9,4,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9,4,"DT")
2960131
"^DD",811.9,811.9,5,0)
TAXONOMY FINDINGS^811.95P^^4;0
"^DD",811.9,811.9,5,21,0)
^.001^1^1^3000505^^^^
"^DD",811.9,811.9,5,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9,5,"DT")
2960131
"^DD",811.9,811.9,5.1,0)
TAXON GENERAL FOUND TEXT^811.95051^^4.1;0
"^DD",811.9,811.9,5.1,21,0)
^^1^1^3000428^
"^DD",811.9,811.9,5.1,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9,5.2,0)
TAXON GENERAL NOT FOUND TEXT^811.95052^^4.2;0
"^DD",811.9,811.9,5.2,21,0)
^^1^1^3000428^
"^DD",811.9,811.9,5.2,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9,7,0)
BASELINE AGE FINDINGS^811.97^^7;0
"^DD",811.9,811.9,7,21,0)
^.001^2^2^3000503^^^^
"^DD",811.9,811.9,7,21,1,0)
This allows the user to define reminder frequencies for age ranges. An
"^DD",811.9,811.9,7,21,2,0)
age range is defined by a minimum and maximum age (in years).
"^DD",811.9,811.9,7,"DT")
2970711
"^DD",811.9,811.9,9,0)
APPLY LOGIC^F^^9;1^K:$L(X)>99!($L(X)<1) X
"^DD",811.9,811.9,9,3)
This field is obsolete, do not use.
"^DD",811.9,811.9,9,21,0)
^.001^1^1^3000505^^^^
"^DD",811.9,811.9,9,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9,9,"DT")
2990527
"^DD",811.9,811.9,10,0)
COMPUTED FINDINGS^811.9001^^10;0
"^DD",811.9,811.9,10,21,0)
^.001^1^1^3000505^^^^
"^DD",811.9,811.9,10,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9,10,"DT")
2960131
"^DD",811.9,811.9,11,0)
HEALTH FACTOR FINDINGS^811.911P^^6;0
"^DD",811.9,811.9,11,21,0)
^.001^1^1^3000505^^^^
"^DD",811.9,811.9,11,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9,11,"DT")
2960131
"^DD",811.9,811.9,11.1,0)
HF GENERAL FOUND TEXT^811.9110111^^6.1;0
"^DD",811.9,811.9,11.1,21,0)
^^1^1^3000428^
"^DD",811.9,811.9,11.1,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9,11.2,0)
HF GENERAL NOT FOUND TEXT^811.9110112^^6.2;0
"^DD",811.9,811.9,11.2,21,0)
^.001^1^1^3000428^^
"^DD",811.9,811.9,11.2,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9,20,0)
FINDINGS^811.902V^^20;0
"^DD",811.9,811.9,20,21,0)
^.001^17^17^3000614^^^^
"^DD",811.9,811.9,20,21,1,0)
This multiple identifies which finding items to use when evaluating the
"^DD",811.9,811.9,20,21,2,0)
reminder. Finding items may be categorized into 3 types of findings
"^DD",811.9,811.9,20,21,3,0)
(patient cohort, resolution, or informational). How patient findings will
"^DD",811.9,811.9,20,21,4,0)
be used depends on the additional fields defined, or not defined, for the
"^DD",811.9,811.9,20,21,5,0)
finding items:
"^DD",811.9,811.9,20,21,6,0)
 
"^DD",811.9,811.9,20,21,7,0)
1. To define a finding item to use in the patient cohort logic, add
"^DD",811.9,811.9,20,21,8,0)
the finding item and define its USE IN PATIENT COHORT LOGIC field.
"^DD",811.9,811.9,20,21,9,0)
 
"^DD",811.9,811.9,20,21,10,0)
2. To define a finding item to use in the resolution logic, add the
"^DD",811.9,811.9,20,21,11,0)
finding item and define its USE IN RESOLUTION LOGIC field.
"^DD",811.9,811.9,20,21,12,0)
 
"^DD",811.9,811.9,20,21,13,0)
3. To define a finding item to use for information only, leave the USE IN
"^DD",811.9,811.9,20,21,14,0)
PATIENT COHORT LOGIC and USE IN RESOLUTION LOGIC fields blank.
"^DD",811.9,811.9,20,21,15,0)
 
"^DD",811.9,811.9,20,21,16,0)
Any type of finding above can be used to override the baseline frequency
"^DD",811.9,811.9,20,21,17,0)
age range set.
"^DD",811.9,811.9,20,"DT")
2990702
"^DD",811.9,811.9,30,0)
CUSTOMIZED COHORT LOGIC^FX^^30;1^K:'$$VALID^PXRMLOG(X,3,245) X
"^DD",811.9,811.9,30,.1)
CUSTOMIZED PATIENT COHORT LOGIC (OPTIONAL)
"^DD",811.9,811.9,30,1,0)
^.1^^0
"^DD",811.9,811.9,30,3)
Enter a Boolean string from 3-245 characters that uses findings to define the patient cohort.
"^DD",811.9,811.9,30,21,0)
^^12^12^3000505^
"^DD",811.9,811.9,30,21,1,0)
This field may be optionally used to define a customized Boolean logic
"^DD",811.9,811.9,30,21,2,0)
string that defines what and how findings in a reminder should be used to
"^DD",811.9,811.9,30,21,3,0)
determine if the reminder applies to the patient. The INTERNAL PATIENT
"^DD",811.9,811.9,30,21,4,0)
COHORT LOGIC field is automatically defined for you based on the USE IN
"^DD",811.9,811.9,30,21,5,0)
PATIENT COHORT LOGIC fields on findings. The customized logic is used when
"^DD",811.9,811.9,30,21,6,0)
the USE IN PATIENT COHORT LOGIC fields associated with each finding do not
"^DD",811.9,811.9,30,21,7,0)
provide the ability to create the required logic string. (e.g., grouping
"^DD",811.9,811.9,30,21,8,0)
various findings within parenthesis)
"^DD",811.9,811.9,30,21,9,0)
 
"^DD",811.9,811.9,30,21,10,0)
Tip:  Before defining the Boolean string, review the default logic
"^DD",811.9,811.9,30,21,11,0)
defined in the INTERNAL PATIENT COHORT LOGIC field using the reminder
"^DD",811.9,811.9,30,21,12,0)
inquiry option.
"^DD",811.9,811.9,30,"DT")
3000504
"^DD",811.9,811.9,31,0)
INTERNAL PATIENT COHORT LOGIC^FX^^31;1^K:$L(X)>245!($L(X)<3) X
"^DD",811.9,811.9,31,3)
Do not edit this field.
"^DD",811.9,811.9,31,21,0)
^.001^2^2^3000503^^^
"^DD",811.9,811.9,31,21,1,0)
This filed is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,31,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,31,23,0)
^.001^4^4^3000503^^^
"^DD",811.9,811.9,31,23,1,0)
This field is computed by the Clinical Reminders software. If there is
"^DD",811.9,811.9,31,23,2,0)
a user input Patient Cohort Logic then it is copied into this field.
"^DD",811.9,811.9,31,23,3,0)
Otherwise this field is determined using the USE IN PATIENT COHORT
"^DD",811.9,811.9,31,23,4,0)
LOGIC fields for each finding in the reminder definition.
"^DD",811.9,811.9,31,"DT")
2990928
"^DD",811.9,811.9,32,0)
PATIENT COHORT FINDINGS COUNT^NJ2,0^^32;1^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,32,3)
Do not edit this field.
"^DD",811.9,811.9,32,21,0)
^.001^2^2^3000503^^^
"^DD",811.9,811.9,32,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,32,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,32,23,0)
^.001^3^3^3000503^^^
"^DD",811.9,811.9,32,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,32,23,2,0)
the number of findings that are in the INTERNAL PATIENT COHORT LOGIC
"^DD",811.9,811.9,32,23,3,0)
field.
"^DD",811.9,811.9,32,"DT")
2990421
"^DD",811.9,811.9,33,0)
PATIENT COHORT FINDINGS LIST^F^^32;2^K:$L(X)>243!($L(X)<1) X
"^DD",811.9,811.9,33,3)
Do not edit this field.
"^DD",811.9,811.9,33,21,0)
^.001^2^2^3000503^^
"^DD",811.9,811.9,33,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,33,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,33,23,0)
^.001^2^2^3000503^^
"^DD",811.9,811.9,33,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,33,23,2,0)
a list of the findings in the INTERNAL PATIENT COHORT LOGIC field.
"^DD",811.9,811.9,33,"DT")
3000301
"^DD",811.9,811.9,34,0)
CUSTOMIZED RESOLUTION LOGIC^FX^^34;1^K:'$$VALID^PXRMLOG(X,5,245) X
"^DD",811.9,811.9,34,.1)
CUSTOMIZED RESOLUTION LOGIC (OPTIONAL)
"^DD",811.9,811.9,34,1,0)
^.1^^0
"^DD",811.9,811.9,34,3)
Enter a Boolean string from 3-245 characters that includes findings that resolve the reminder.
"^DD",811.9,811.9,34,21,0)
^^11^11^3000505^
"^DD",811.9,811.9,34,21,1,0)
This field may be used to define a customized Boolean logic string that
"^DD",811.9,811.9,34,21,2,0)
defines what and how a reminders findings should be used to determine if
"^DD",811.9,811.9,34,21,3,0)
the reminder has been resolved. The INTERNAL RESOLUTION LOGIC field is
"^DD",811.9,811.9,34,21,4,0)
automatically defined for you based on the USE IN RESOLUTION LOGIC fields
"^DD",811.9,811.9,34,21,5,0)
on findings. The customized logic is used when the USE IN RESOLUTION LOGIC
"^DD",811.9,811.9,34,21,6,0)
fields associated with each finding do not provide the ability to create
"^DD",811.9,811.9,34,21,7,0)
the required logic string. (e.g., grouping various findings within
"^DD",811.9,811.9,34,21,8,0)
parenthesis)
"^DD",811.9,811.9,34,21,9,0)
 
"^DD",811.9,811.9,34,21,10,0)
Tip:  Before defining the Boolean string, review the default logic defined
"^DD",811.9,811.9,34,21,11,0)
in the INTERNAL RESOLUTION LOGIC field using the reminder inquiry option.
"^DD",811.9,811.9,34,"DT")
3000504
"^DD",811.9,811.9,35,0)
INTERNAL RESOLUTION LOGIC^F^^35;1^K:$L(X)>245!($L(X)<5) X
"^DD",811.9,811.9,35,3)
Do not edit this field.
"^DD",811.9,811.9,35,21,0)
^.001^2^2^3000503^^
"^DD",811.9,811.9,35,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,35,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,35,23,0)
^.001^4^4^3000503^^
"^DD",811.9,811.9,35,23,1,0)
This field is computed by the Clinical Reminders software. If there is
"^DD",811.9,811.9,35,23,2,0)
a user input Resolution Logic then it is copied into this field.
"^DD",811.9,811.9,35,23,3,0)
Otherwise this field is determined using the USE IN RESOLUTION
"^DD",811.9,811.9,35,23,4,0)
LOGIC fields for each finding in the reminder definition.
"^DD",811.9,811.9,35,"DT")
2990420
"^DD",811.9,811.9,36,0)
RESOLUTION FINDINGS COUNT^NJ2,0^^36;1^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,36,3)
Do not edit this field.
"^DD",811.9,811.9,36,21,0)
^.001^2^2^3000503^^
"^DD",811.9,811.9,36,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,36,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,36,23,0)
^.001^2^2^3000503^^
"^DD",811.9,811.9,36,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,36,23,2,0)
the number of findings in the INTERNAL RESOLUTION LOGIC field.
"^DD",811.9,811.9,36,"DT")
2990421
"^DD",811.9,811.9,37,0)
RESOLUTION FINDINGS LIST^F^^36;2^K:$L(X)>243!($L(X)<1) X
"^DD",811.9,811.9,37,3)
Do not edit this field.
"^DD",811.9,811.9,37,21,0)
^.001^2^2^3000503^^^
"^DD",811.9,811.9,37,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,37,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,37,23,0)
^.001^2^2^3000503^^
"^DD",811.9,811.9,37,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,37,23,2,0)
the list of findings in the INTERNAL RESOLUTION LOGIC field.
"^DD",811.9,811.9,37,"DT")
2990421
"^DD",811.9,811.9,40,0)
AGE FINDINGS COUNT^NJ2,0^^40;1^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,40,3)
Do not edit this field.
"^DD",811.9,811.9,40,21,0)
^^2^2^3000501^
"^DD",811.9,811.9,40,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,40,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,40,23,0)
^^3^3^3000501^
"^DD",811.9,811.9,40,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,40,23,2,0)
the number of findings that can override the baseline age range frequency
"^DD",811.9,811.9,40,23,3,0)
set. It should never be edited by hand.
"^DD",811.9,811.9,40,"DT")
2990421
"^DD",811.9,811.9,41,0)
AGE FINDINGS LIST^F^^40;2^K:$L(X)>243!($L(X)<1) X
"^DD",811.9,811.9,41,3)
Do not edit this field.
"^DD",811.9,811.9,41,21,0)
^^2^2^3000501^
"^DD",811.9,811.9,41,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,41,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,41,23,0)
^^3^3^3000501^
"^DD",811.9,811.9,41,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,41,23,2,0)
a list of the findings that can override the baseline age range frequency.
"^DD",811.9,811.9,41,23,3,0)
It should never be edited by hand.
"^DD",811.9,811.9,41,"DT")
2990415
"^DD",811.9,811.9,42,0)
INFORMATION FINDINGS COUNT^NJ2,0^^42;1^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,42,3)
Do not edit this field.
"^DD",811.9,811.9,42,21,0)
^.001^2^2^3000501^^
"^DD",811.9,811.9,42,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,42,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,42,23,0)
^.001^3^3^3000501^^
"^DD",811.9,811.9,42,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,42,23,2,0)
the number of findings that are information only. It should never be edited
"^DD",811.9,811.9,42,23,3,0)
by hand.
"^DD",811.9,811.9,42,"DT")
2990421
"^DD",811.9,811.9,43,0)
INFORMATION FINDINGS LIST^F^^42;2^K:$L(X)>243!($L(X)<1) X
"^DD",811.9,811.9,43,3)
Do not edit this field.
"^DD",811.9,811.9,43,21,0)
^.001^2^2^3000503^^^
"^DD",811.9,811.9,43,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,43,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,43,23,0)
^.001^2^2^3000503^^^
"^DD",811.9,811.9,43,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,43,23,2,0)
the number of findings. It should never be edited by hand.
"^DD",811.9,811.9,43,"DT")
2990421
"^DD",811.9,811.9,50,0)
WEB SITES^811.9002^^50;0
"^DD",811.9,811.9,50,21,0)
^.001^1^1^3000501^^^^
"^DD",811.9,811.9,50,21,1,0)
This multiple contains Web site(s) for information related to this reminder.
"^DD",811.9,811.9,50,"DT")
2991129
"^DD",811.9,811.9,51,0)
LINKED REMINDER DIALOG^*P801.41'^PXRMD(801.41,^51;1^S DIC("S")="I $P(^(0),U,4)=""R""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",811.9,811.9,51,1,0)
^.1
"^DD",811.9,811.9,51,1,1,0)
811.9^AG
"^DD",811.9,811.9,51,1,1,1)
S ^PXD(811.9,"AG",$E(X,1,30),DA)=""
"^DD",811.9,811.9,51,1,1,2)
K ^PXD(811.9,"AG",$E(X,1,30),DA)
"^DD",811.9,811.9,51,1,1,"DT")
2991005
"^DD",811.9,811.9,51,3)
Enter dialog to be used in CPRS to resolve this reminder. 
"^DD",811.9,811.9,51,12)
Reminders may only point to reminder dialog entries
"^DD",811.9,811.9,51,12.1)
S DIC("S")="I $P(^(0),U,4)=""R"""
"^DD",811.9,811.9,51,21,0)
^.001^2^2^3000505^^
"^DD",811.9,811.9,51,21,1,0)
This is the Reminder Dialog that will be used when the reminder is
"^DD",811.9,811.9,51,21,2,0)
processed in the CPRS GUI.
"^DD",811.9,811.9,51,"DT")
3000423
"^DD",811.9,811.9,60,0)
GENERAL COHORT FOUND TEXT^811.9003^^60;0
"^DD",811.9,811.9,60,21,0)
^^5^5^3000505^
"^DD",811.9,811.9,60,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.9,60,21,2,0)
component when the patient's findings found during the reminder evaluation
"^DD",811.9,811.9,60,21,3,0)
made the Patient Cohort Logic true.  This is general text, not specific to
"^DD",811.9,811.9,60,21,4,0)
a finding, that will display when the patient is found to be in the
"^DD",811.9,811.9,60,21,5,0)
patient cohort.
"^DD",811.9,811.9,60,"DT")
3000504
"^DD",811.9,811.9,61,0)
GENERAL COHORT NOT FOUND TEXT^811.961^^61;0
"^DD",811.9,811.9,61,21,0)
^^5^5^3000505^
"^DD",811.9,811.9,61,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.9,61,21,2,0)
component when the patient's findings during reminder evaluation made the
"^DD",811.9,811.9,61,21,3,0)
Patient Cohort Logic false. This is general text, not specific to a
"^DD",811.9,811.9,61,21,4,0)
finding, that will display when the patient is not found to be in the
"^DD",811.9,811.9,61,21,5,0)
patient cohort.
"^DD",811.9,811.9,61,"DT")
3000504
"^DD",811.9,811.9,65,0)
GENERAL RESOLUTION FOUND TEXT^811.965^^65;0
"^DD",811.9,811.9,65,21,0)
^^5^5^3000505^
"^DD",811.9,811.9,65,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.9,65,21,2,0)
component when the patient's findings found during the reminder evaluation
"^DD",811.9,811.9,65,21,3,0)
made the Resolution Logic true.  This is general text, not specific to
"^DD",811.9,811.9,65,21,4,0)
a finding, that will display when the patient's findings resolve the
"^DD",811.9,811.9,65,21,5,0)
reminder.
"^DD",811.9,811.9,65,"DT")
3000504
"^DD",811.9,811.9,66,0)
GENERAL RESOL NOT FOUND TEXT^811.966^^66;0
"^DD",811.9,811.9,66,21,0)
^.001^4^4^3000505^^
"^DD",811.9,811.9,66,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.9,66,21,2,0)
component when the patient's findings found during the reminder evaluation
"^DD",811.9,811.9,66,21,3,0)
made the Resolution Logic false.  This is general text, not specific to
"^DD",811.9,811.9,66,21,4,0)
a finding, that will display when the reminder has not been resolved.
"^DD",811.9,811.9,66,"DT")
3000504
"^DD",811.9,811.9001,0)
COMPUTED FINDINGS SUB-FIELD^^10^11
"^DD",811.9,811.9001,0,"DT")
2981207
"^DD",811.9,811.9001,0,"IX","B",811.9001,.01)

"^DD",811.9,811.9001,0,"NM","COMPUTED FINDINGS")

"^DD",811.9,811.9001,0,"UP")
811.9
"^DD",811.9,811.9001,.01,0)
ROUTINE^MF^^0;1^K:$L(X)>30!($L(X)<1)!'(X?0.8AN0.1";"1.8AN) X
"^DD",811.9,811.9001,.01,1,0)
^.1
"^DD",811.9,811.9001,.01,1,1,0)
811.9001^B
"^DD",811.9,811.9001,.01,1,1,1)
S ^PXD(811.9,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.9001,.01,1,1,2)
K ^PXD(811.9,DA(1),10,"B",$E(X,1,30),DA)
"^DD",811.9,811.9001,.01,3)
This field is obsolete, do not use.
"^DD",811.9,811.9001,.01,21,0)
^.001^1^1^3000505^^^^
"^DD",811.9,811.9001,.01,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9001,.01,"DT")
2960206
"^DD",811.9,811.9001,1,0)
MINIMUM AGE^NJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9001,1,3)
Enter the modified minimum age.
"^DD",811.9,811.9001,1,21,0)
^^1^1^3000505^
"^DD",811.9,811.9001,1,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9001,1,"DT")
2960131
"^DD",811.9,811.9001,2,0)
MAXIMUM AGE^NJ3,0^^0;3^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9001,2,3)
Enter the modified maximum age.
"^DD",811.9,811.9001,2,21,0)
^^1^1^3000505^
"^DD",811.9,811.9001,2,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9001,2,"DT")
2951117
"^DD",811.9,811.9001,3,0)
REMINDER FREQUENCY^FX^^0;4^S X=$$UP^XLFSTR(X) K:($L(X)>5)!($L(X)<2)!((X'?1N.N1"D")&(X'?1N.N1"M")&(X'?1N.N1"Y")) X
"^DD",811.9,811.9001,3,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.9,811.9001,3,21,0)
^^1^1^3000505^
"^DD",811.9,811.9001,3,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9001,3,"DT")
2970313
"^DD",811.9,811.9001,4,0)
SHORT DESCRIPTION^F^^0;5^K:$L(X)>30!($L(X)<1) X
"^DD",811.9,811.9001,4,3)
Answer must be 1-30 characters in length.
"^DD",811.9,811.9001,4,21,0)
^^1^1^3000505^
"^DD",811.9,811.9001,4,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9001,4,"DT")
2981207
"^DD",811.9,811.9001,5,0)
FOUND TEXT^811.90015^^1;0
"^DD",811.9,811.9001,5,21,0)
^^1^1^3000505^
"^DD",811.9,811.9001,5,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9001,6,0)
NOT FOUND TEXT^811.90016^^2;0
"^DD",811.9,811.9001,6,21,0)
^^1^1^3000505^
"^DD",811.9,811.9001,6,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9001,7,0)
RANK FREQUENCY^NJ3,0^^0;6^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.9,811.9001,7,3)
Enter the rank.
"^DD",811.9,811.9001,7,21,0)
^^1^1^3000505^
"^DD",811.9,811.9001,7,21,1,0)
his field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9001,7,"DT")
2970210
"^DD",811.9,811.9001,8,0)
USE IN DATE DUE CALC^S^1:YES;0:NO;^0;7^Q
"^DD",811.9,811.9001,8,3)
Optional - enter 1 to use the computed findings date to calculate the date due when the computed finding is the most recent finding.
"^DD",811.9,811.9001,8,21,0)
^^1^1^3000505^
"^DD",811.9,811.9001,8,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9001,8,"DT")
2961126
"^DD",811.9,811.9001,9,0)
USE IN APPLY LOGIC^S^&:AND;!:OR;&':AND NOT;!':OR NOT;^0;8^Q
"^DD",811.9,811.9001,9,3)
Enter the AND, OR logic to use in the APPLY LOGIC.
"^DD",811.9,811.9001,9,21,0)
^^1^1^3000505^
"^DD",811.9,811.9001,9,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9001,9,"DT")
2970123
"^DD",811.9,811.9001,10,0)
EFFECTIVE PERIOD^FX^^0;9^S X=$$UP^XLFSTR(X) K:($L(X)>5)!($L(X)<2)!((X'?1N.N1"D")&(X'?1N.N1"M")&(X'?1N.N1"Y")) X
"^DD",811.9,811.9001,10,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.9,811.9001,10,21,0)
^^1^1^3000505^
"^DD",811.9,811.9001,10,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9001,10,"DT")
2981120
"^DD",811.9,811.90015,0)
FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.90015,0,"DT")
2960207
"^DD",811.9,811.90015,0,"NM","FOUND TEXT")

"^DD",811.9,811.90015,0,"UP")
811.9001
"^DD",811.9,811.90015,.01,0)
FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.90015,.01,3)
Enter the text to display when the computed findings are true.
"^DD",811.9,811.90015,.01,21,0)
^^2^2^2960207^
"^DD",811.9,811.90015,.01,21,1,0)
This is text that can be displayed with a reminder when the condition
"^DD",811.9,811.90015,.01,21,2,0)
represented by the Computed Findings routine is true. 
"^DD",811.9,811.90015,.01,"DT")
2960207
"^DD",811.9,811.90016,0)
NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.90016,0,"DT")
2960207
"^DD",811.9,811.90016,0,"NM","NOT FOUND TEXT")

"^DD",811.9,811.90016,0,"UP")
811.9001
"^DD",811.9,811.90016,.01,0)
NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.90016,.01,3)
Enter the text to display when the computed findings are false.
"^DD",811.9,811.90016,.01,21,0)
^^2^2^2960207^
"^DD",811.9,811.90016,.01,21,1,0)
This is text that can be displayed with a reminder when the condition
"^DD",811.9,811.90016,.01,21,2,0)
represented by the Computed Findings routine is false.
"^DD",811.9,811.90016,.01,"DT")
2960207
"^DD",811.9,811.9002,0)
WEB SITES SUB-FIELD^^1^3
"^DD",811.9,811.9002,0,"DT")
2991130
"^DD",811.9,811.9002,0,"IX","B",811.9002,.01)

"^DD",811.9,811.9002,0,"NM","WEB SITES")

"^DD",811.9,811.9002,0,"UP")
811.9
"^DD",811.9,811.9002,.01,0)
URL^MF^^0;1^K:$L(X)>128!($L(X)<1) X
"^DD",811.9,811.9002,.01,1,0)
^.1
"^DD",811.9,811.9002,.01,1,1,0)
811.9002^B
"^DD",811.9,811.9002,.01,1,1,1)
S ^PXD(811.9,DA(1),50,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.9002,.01,1,1,2)
K ^PXD(811.9,DA(1),50,"B",$E(X,1,30),DA)
"^DD",811.9,811.9002,.01,3)
Answer must be 1-128 characters in length.
"^DD",811.9,811.9002,.01,21,0)
^.001^1^1^3000501^^^^
"^DD",811.9,811.9002,.01,21,1,0)
This is the URL for the web site.
"^DD",811.9,811.9002,.01,"DT")
2991129
"^DD",811.9,811.9002,.02,0)
WEB SITE TITLE^F^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",811.9,811.9002,.02,3)
Answer must be 1-60 characters in length.
"^DD",811.9,811.9002,.02,21,0)
^.001^2^2^3000501^^
"^DD",811.9,811.9002,.02,21,1,0)
This is the web site title that is used by the CPRS GUI. It will appear
"^DD",811.9,811.9002,.02,21,2,0)
after a right click allowing the user to select the web site.
"^DD",811.9,811.9002,.02,"DT")
2991130
"^DD",811.9,811.9002,1,0)
WEB SITE DESCRIPTION^811.90021^^1;0
"^DD",811.9,811.9002,1,21,0)
^.001^1^1^3000501^^
"^DD",811.9,811.9002,1,21,1,0)
This field contains a description of the Web site.
"^DD",811.9,811.90021,0)
WEB SITE DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.9,811.90021,0,"DT")
2991130
"^DD",811.9,811.90021,0,"NM","WEB SITE DESCRIPTION")

"^DD",811.9,811.90021,0,"UP")
811.9002
"^DD",811.9,811.90021,.01,0)
WEB SITE DESCRIPTION^W^^0;1^Q
"^DD",811.9,811.90021,.01,3)
Enter the Web site description.
"^DD",811.9,811.90021,.01,"DT")
2991130
"^DD",811.9,811.9003,0)
GENERAL COHORT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9003,0,"DT")
3000110
"^DD",811.9,811.9003,0,"NM","GENERAL COHORT FOUND TEXT")

"^DD",811.9,811.9003,0,"UP")
811.9
"^DD",811.9,811.9003,.01,0)
GENERAL COHORT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9003,.01,.1)
GENERAL PATIENT COHORT FOUND TEXT
"^DD",811.9,811.9003,.01,3)
Enter general text to display when the patient is found to be in the patient cohort.
"^DD",811.9,811.9003,.01,21,0)
^^5^5^3000505^
"^DD",811.9,811.9003,.01,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.9003,.01,21,2,0)
component when the patient's findings found during the reminder evaluation
"^DD",811.9,811.9003,.01,21,3,0)
made the Patient Cohort Logic true.  This is general text, not specific to
"^DD",811.9,811.9003,.01,21,4,0)
a finding, that will display when the patient is found to be in the
"^DD",811.9,811.9003,.01,21,5,0)
patient cohort.
"^DD",811.9,811.9003,.01,"DT")
3000504
"^DD",811.9,811.902,0)
FINDINGS SUB-FIELD^^13^14
"^DD",811.9,811.902,0,"DT")
3000607
"^DD",811.9,811.902,0,"IX","B",811.902,.01)

"^DD",811.9,811.902,0,"NM","FINDINGS")

"^DD",811.9,811.902,0,"UP")
811.9
"^DD",811.9,811.902,.01,0)
FINDING ITEM^MVX^^0;1^K:'$$VFINDING^PXRMINTR(X) X
"^DD",811.9,811.902,.01,1,0)
^.1^^-1
"^DD",811.9,811.902,.01,1,1,0)
811.902^B
"^DD",811.9,811.902,.01,1,1,1)
S ^PXD(811.9,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.902,.01,1,1,2)
K ^PXD(811.9,DA(1),20,"B",$E(X,1,30),DA)
"^DD",811.9,811.902,.01,1,1,3)
Required Index for Variable Pointer
"^DD",811.9,811.902,.01,1,2,0)
811.9^E^MUMPS
"^DD",811.9,811.902,.01,1,2,1)
S ^PXD(811.9,DA(1),20,"E",$P(X,";",2),$P(X,";",1),DA)=""
"^DD",811.9,811.902,.01,1,2,2)
K ^PXD(811.9,DA(1),20,"E",$P(X,";",2),$P(X,";",1),DA)
"^DD",811.9,811.902,.01,1,2,"%D",0)
^^1^1^2990913^^^
"^DD",811.9,811.902,.01,1,2,"%D",1,0)
This cross-reference is used to group findings by type.
"^DD",811.9,811.902,.01,1,2,"DT")
2990401
"^DD",811.9,811.902,.01,3)
Enter a finding item in the format: Prefix.Name
"^DD",811.9,811.902,.01,21,0)
^.001^18^18^3000614^^
"^DD",811.9,811.902,.01,21,1,0)
This field identifies finding items to use in the reminder evaluation
"^DD",811.9,811.902,.01,21,2,0)
process. A finding item may be used to determine the patient cohort,
"^DD",811.9,811.902,.01,21,3,0)
resolve the reminder, or provide information to the provider.
"^DD",811.9,811.902,.01,21,4,0)
 
"^DD",811.9,811.902,.01,21,5,0)
How this finding item will be used depends on the additional fields
"^DD",811.9,811.902,.01,21,6,0)
defined, or not defined, for this finding item:
"^DD",811.9,811.902,.01,21,7,0)
 
"^DD",811.9,811.902,.01,21,8,0)
  1. To define a finding item to use in the patient cohort logic, add the
"^DD",811.9,811.902,.01,21,9,0)
finding item and define its USE IN PATIENT COHORT LOGIC field.
"^DD",811.9,811.902,.01,21,10,0)
 
"^DD",811.9,811.902,.01,21,11,0)
  2. To define a finding item to use in the resolution logic, add the
"^DD",811.9,811.902,.01,21,12,0)
finding item and define its USE IN RESOLUTION LOGIC field.
"^DD",811.9,811.902,.01,21,13,0)
 
"^DD",811.9,811.902,.01,21,14,0)
  3. To define a finding item to use for information only, leave the USE
"^DD",811.9,811.902,.01,21,15,0)
IN PATIENT COHORT LOGIC and USE IN RESOLUTION LOGIC fields blank.
"^DD",811.9,811.902,.01,21,16,0)
 
"^DD",811.9,811.902,.01,21,17,0)
This finding item can be used to override the baseline frequency
"^DD",811.9,811.902,.01,21,18,0)
age range set.
"^DD",811.9,811.902,.01,"DT")
3000503
"^DD",811.9,811.902,.01,"V",0)
^.12P^16^16
"^DD",811.9,811.902,.01,"V",1,0)
50^DRUG^5^DR^n^n
"^DD",811.9,811.902,.01,"V",2,0)
9999999.09^EDUCATION TOPIC^10^ED^n^n
"^DD",811.9,811.902,.01,"V",3,0)
9999999.15^EXAM^15^EX^n^n
"^DD",811.9,811.902,.01,"V",4,0)
9999999.64^HEALTH FACTOR^20^HF^n^n
"^DD",811.9,811.902,.01,"V",5,0)
9999999.14^IMMUNIZATION^25^IM^n^n
"^DD",811.9,811.902,.01,"V",6,0)
60^LABORATORY TEST^30^LT^n^n
"^DD",811.9,811.902,.01,"V",7,0)
601^MENTAL HEALTH INSTRUMENT^35^MH^n^n
"^DD",811.9,811.902,.01,"V",8,0)
101.43^ORDERABLE ITEM^40^OI^n^n
"^DD",811.9,811.902,.01,"V",9,0)
71^RADIOLOGY PROCEDURE^45^RP^n^n
"^DD",811.9,811.902,.01,"V",10,0)
811.4^REMINDER COMPUTED FINDING^50^CF^n^n
"^DD",811.9,811.902,.01,"V",11,0)
811.2^REMINDER TAXONOMY^55^TX^n^n
"^DD",811.9,811.902,.01,"V",12,0)
811.5^REMINDER TERM^60^RT^n^n
"^DD",811.9,811.902,.01,"V",13,0)
9999999.28^SKIN TEST^65^ST^n^n
"^DD",811.9,811.902,.01,"V",14,0)
50.605^VA DRUG CLASS^70^DC^n^n
"^DD",811.9,811.902,.01,"V",15,0)
50.6^VA GENERIC^75^DG^n^n
"^DD",811.9,811.902,.01,"V",16,0)
120.51^VITAL MEASUREMENT^80^VM^n^n
"^DD",811.9,811.902,1,0)
MINIMUM AGE^NJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,1,1,0)
^.1^^0
"^DD",811.9,811.902,1,3)
Enter the minimum age for the frequency associated with this finding.
"^DD",811.9,811.902,1,21,0)
^^2^2^3000428^
"^DD",811.9,811.902,1,21,1,0)
This field specifies the minimum age for defining an age range
"^DD",811.9,811.902,1,21,2,0)
associated with a frequency. Leave it blank if there is no minimum age.
"^DD",811.9,811.902,1,"DT")
2991027
"^DD",811.9,811.902,2,0)
MAXIMUM AGE^NJ3,0^^0;3^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,2,1,0)
^.1^^0
"^DD",811.9,811.902,2,3)
Enter the maximum age for the frequency associated with this finding.
"^DD",811.9,811.902,2,21,0)
^^2^2^3000428^
"^DD",811.9,811.902,2,21,1,0)
This field specifies the maximum age for defining an age range
"^DD",811.9,811.902,2,21,2,0)
associated with a frequency. Leave it blank if there is no maximum age.
"^DD",811.9,811.902,2,"DT")
2991027
"^DD",811.9,811.902,3,0)
REMINDER FREQUENCY^FX^^0;4^K:'$$VTPER^PXRMINTR(.X) X
"^DD",811.9,811.902,3,1,0)
^.1^^0
"^DD",811.9,811.902,3,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.9,811.902,3,21,0)
^.001^6^6^3000428^^
"^DD",811.9,811.902,3,21,1,0)
If this finding is true (found) then use this frequency and the age
"^DD",811.9,811.902,3,21,2,0)
range specified by the minimum and maximum ages to override the
"^DD",811.9,811.902,3,21,3,0)
baseline frequency age range set. The frequency is input as nD, nM, or
"^DD",811.9,811.902,3,21,4,0)
nY, where D stands for days, M for months, Y for years, and n is a
"^DD",811.9,811.902,3,21,5,0)
number. Thus, for a reminder that is to be given once a year, the
"^DD",811.9,811.902,3,21,6,0)
values 365D, 12M, or 1Y would all work.
"^DD",811.9,811.902,3,"DT")
3000427
"^DD",811.9,811.902,4,0)
FOUND TEXT^811.9024^^1;0
"^DD",811.9,811.902,4,21,0)
^.001^2^2^3000501^^
"^DD",811.9,811.902,4,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.902,4,21,2,0)
output if this finding is found (true).
"^DD",811.9,811.902,5,0)
NOT FOUND TEXT^811.9025^^2;0
"^DD",811.9,811.902,5,21,0)
^.001^2^2^3000501^^
"^DD",811.9,811.902,5,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.902,5,21,2,0)
output if the finding is not found (false).
"^DD",811.9,811.902,6,0)
RANK FREQUENCY^NJ3,0^^0;5^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,6,3)
Enter an optional rank from 1 to 999 or leave blank.
"^DD",811.9,811.902,6,21,0)
^.001^11^11^3000428^^^^
"^DD",811.9,811.902,6,21,1,0)
This field is used to rank the frequency and age range sets associated
"^DD",811.9,811.902,6,21,2,0)
with a finding. If there is more than one true finding that can
"^DD",811.9,811.902,6,21,3,0)
override the baseline frequency age range set then the determination of
"^DD",811.9,811.902,6,21,4,0)
which one to use is made based on the finding with the highest rank.
"^DD",811.9,811.902,6,21,5,0)
Ranks can range from 1 to 999 with 1 being the highest rank.
"^DD",811.9,811.902,6,21,6,0)
 
"^DD",811.9,811.902,6,21,7,0)
When the Rank field is blank (null) for all true findings that can
"^DD",811.9,811.902,6,21,8,0)
override the baseline frequency age range set then the frequency that
"^DD",811.9,811.902,6,21,9,0)
will cause the reminder to be given most often will be used. For
"^DD",811.9,811.902,6,21,10,0)
example, if finding 1 has a frequency of 6 months, and finding 2 has a
"^DD",811.9,811.902,6,21,11,0)
frequency of 1 year finding 1 will be used to override the baseline.
"^DD",811.9,811.902,6,"DT")
2990325
"^DD",811.9,811.902,7,0)
USE IN RESOLUTION LOGIC^S^&:AND;!:OR;&':AND NOT;!':OR NOT;^0;6^Q
"^DD",811.9,811.902,7,1,0)
^.1^^0
"^DD",811.9,811.902,7,3)
Enter the logic operator to be used in the default Internal Resolution Logic.
"^DD",811.9,811.902,7,21,0)
^^28^28^3000505^
"^DD",811.9,811.902,7,21,1,0)
This optional field is used to indicate that this finding item should be
"^DD",811.9,811.902,7,21,2,0)
included as part of the default INTERNAL RESOLUTION LOGIC field for this
"^DD",811.9,811.902,7,21,3,0)
reminder. The INTERNAL RESOLUTION LOGIC, or the CUSTOMIZED RESOLUTION
"^DD",811.9,811.902,7,21,4,0)
LOGIC if defined, is used in the reminder evaluation process to determine
"^DD",811.9,811.902,7,21,5,0)
whether or not a reminder is resolved (satisfied).
"^DD",811.9,811.902,7,21,6,0)
 
"^DD",811.9,811.902,7,21,7,0)
Valid entries for the USE IN RESOLUTION LOGIC field are:
"^DD",811.9,811.902,7,21,8,0)
 
"^DD",811.9,811.902,7,21,9,0)
                       EQUATES TO BOOLEAN
"^DD",811.9,811.902,7,21,10,0)
  OPERATOR   VALUE     OPERATOR LOGIC
"^DD",811.9,811.902,7,21,11,0)
  --------   -----     ------------------
"^DD",811.9,811.902,7,21,12,0)
             BLANK     not included in Resolution Logic
"^DD",811.9,811.902,7,21,13,0)
                       (Use @ to delete value)
"^DD",811.9,811.902,7,21,14,0)
   &         AND       &(Finding)
"^DD",811.9,811.902,7,21,15,0)
   !         OR        !(Finding)
"^DD",811.9,811.902,7,21,16,0)
   &'        AND NOT   &'(Finding)
"^DD",811.9,811.902,7,21,17,0)
   !'        OR NOT    !'(Finding)
"^DD",811.9,811.902,7,21,18,0)
 
"^DD",811.9,811.902,7,21,19,0)
The finding item and operator are used to automatically create the default
"^DD",811.9,811.902,7,21,20,0)
resolution Boolean logic string.
"^DD",811.9,811.902,7,21,21,0)
 
"^DD",811.9,811.902,7,21,22,0)
Each finding is used in the evaluation process to find the most recent
"^DD",811.9,811.902,7,21,23,0)
entry for the finding. After all findings are evaluated, the Resolution
"^DD",811.9,811.902,7,21,24,0)
Logic is evaluated by logically combining the true (found) and false (not
"^DD",811.9,811.902,7,21,25,0)
found) values of the findings. If the Resolution Logic evaluates to true
"^DD",811.9,811.902,7,21,26,0)
then the reminder is considered to be resolved.
"^DD",811.9,811.902,7,21,27,0)
 
"^DD",811.9,811.902,7,21,28,0)
To see the INTERNAL RESOLUTION LOGIC, use the reminder inquiry option.
"^DD",811.9,811.902,7,"DT")
2991027
"^DD",811.9,811.902,8,0)
USE IN PATIENT COHORT LOGIC^S^&:AND;!:OR;&':AND NOT;!':OR NOT;^0;7^Q
"^DD",811.9,811.902,8,1,0)
^.1^^0
"^DD",811.9,811.902,8,3)
Enter the logic operator to be used in the default Internal Patient Cohort Logic
"^DD",811.9,811.902,8,21,0)
^^35^35^3000505^
"^DD",811.9,811.902,8,21,1,0)
This optional field is used to indicate that this finding item should be
"^DD",811.9,811.902,8,21,2,0)
included as part of the default INTERNAL PATIENT COHORT LOGIC field for
"^DD",811.9,811.902,8,21,3,0)
this reminder. The INTERNAL PATIENT COHORT LOGIC, or the CUSTOMIZED COHORT
"^DD",811.9,811.902,8,21,4,0)
LOGIC if defined, is used in the reminder evaluation process to determine
"^DD",811.9,811.902,8,21,5,0)
whether or not a reminder is applicable to a patient.
"^DD",811.9,811.902,8,21,6,0)
 
"^DD",811.9,811.902,8,21,7,0)
Valid entries for the USE IN PATIENT COHORT LOGIC field are:
"^DD",811.9,811.902,8,21,8,0)
 
"^DD",811.9,811.902,8,21,9,0)
                     EQUATES TO BOOLEAN
"^DD",811.9,811.902,8,21,10,0)
  OPERATOR  VALUE     OPERATOR LOGIC
"^DD",811.9,811.902,8,21,11,0)
  --------  -----     ------------------
"^DD",811.9,811.902,8,21,12,0)
            BLANK     not included in Patient Cohort Logic
"^DD",811.9,811.902,8,21,13,0)
                      (Use @ to delete value)
"^DD",811.9,811.902,8,21,14,0)
   &        AND       &(Finding)
"^DD",811.9,811.902,8,21,15,0)
   !        OR        !(Finding)
"^DD",811.9,811.902,8,21,16,0)
   &'       AND NOT   &'(Finding)
"^DD",811.9,811.902,8,21,17,0)
   !'       OR NOT    !'(Finding)
"^DD",811.9,811.902,8,21,18,0)
 
"^DD",811.9,811.902,8,21,19,0)
The finding item and operator are used to automatically create the
"^DD",811.9,811.902,8,21,20,0)
default Boolean INTERNAL PATIENT COHORT LOGIC string. The default logic
"^DD",811.9,811.902,8,21,21,0)
string initially includes (SEX)&(AGE), regardless of whether the baseline
"^DD",811.9,811.902,8,21,22,0)
specifies SEX and AGE criteria. Each finding item with a value in the USE
"^DD",811.9,811.902,8,21,23,0)
IN PATIENT COHORT LOGIC field is appended to the string by using the
"^DD",811.9,811.902,8,21,24,0)
finding item and operator. For example if finding item 2 had an operator
"^DD",811.9,811.902,8,21,25,0)
for this field of "&" then the string would be (SEX)&(AGE)&FI(2).
"^DD",811.9,811.902,8,21,26,0)
 
"^DD",811.9,811.902,8,21,27,0)
Each finding item is used in the evaluation process to find the most
"^DD",811.9,811.902,8,21,28,0)
recent entry for the finding. After all findings are evaluated, the
"^DD",811.9,811.902,8,21,29,0)
Patient Cohort Logic is evaluated by logically combining the true (found)
"^DD",811.9,811.902,8,21,30,0)
and false (not found) values of the finding items. If the Patient Cohort
"^DD",811.9,811.902,8,21,31,0)
Logic evaluates to true then the patient is in the cohort and the reminder
"^DD",811.9,811.902,8,21,32,0)
is applicable to the patient.
"^DD",811.9,811.902,8,21,33,0)
      
"^DD",811.9,811.902,8,21,34,0)
To see the INTERNAL PATIENT COHORT LOGIC, use the reminder inquiry
"^DD",811.9,811.902,8,21,35,0)
option.
"^DD",811.9,811.902,8,"DT")
2991027
"^DD",811.9,811.902,9,0)
EFFECTIVE PERIOD^FX^^0;8^K:'$$VTPER^PXRMINTR(.X) X
"^DD",811.9,811.902,9,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.9,811.902,9,21,0)
^.001^5^5^3000505^^^^
"^DD",811.9,811.902,9,21,1,0)
This is the amount of time the finding will remain valid. For example,
"^DD",811.9,811.902,9,21,2,0)
if the EFFECTIVE PERIOD is 1Y and the date of the finding is less than
"^DD",811.9,811.902,9,21,3,0)
one year ago the finding will be true. If the date is more than a year
"^DD",811.9,811.902,9,21,4,0)
ago the finding will have expired and be false. If this field is left
"^DD",811.9,811.902,9,21,5,0)
empty then the finding never expires.
"^DD",811.9,811.902,9,"DT")
3000509
"^DD",811.9,811.902,10,0)
USE INACTIVE PROBLEMS^S^1:YES;0:N;^0;9^Q
"^DD",811.9,811.902,10,3)
Enter a 1 or YES if you want inactive problems used.
"^DD",811.9,811.902,10,21,0)
^.001^4^4^3000505^^^^
"^DD",811.9,811.902,10,21,1,0)
Normally only active problems from the Problem List will be used in the
"^DD",811.9,811.902,10,21,2,0)
reminder evaluation. If USE INACTIVE PROBLEMS is set to YES then both
"^DD",811.9,811.902,10,21,3,0)
active and inactive problems will be used. Note that this field applies
"^DD",811.9,811.902,10,21,4,0)
only to taxonomy findings.
"^DD",811.9,811.902,10,"DT")
2990325
"^DD",811.9,811.902,11,0)
WITHIN CATEGORY RANK^NJ3,0^^0;10^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,11,3)
Enter a number between 0 and 999.
"^DD",811.9,811.902,11,21,0)
^.001^16^16^3000505^^^
"^DD",811.9,811.902,11,21,1,0)
This field applies only to health factors. In order to understand how
"^DD",811.9,811.902,11,21,2,0)
it works, you need to understand how health factors work in the
"^DD",811.9,811.902,11,21,3,0)
reminder evaluation process. If you are not clear about this, see the
"^DD",811.9,811.902,11,21,4,0)
health factor section of the Clinical Reminder Manager Manual.
"^DD",811.9,811.902,11,21,5,0)

"^DD",811.9,811.902,11,21,6,0)
The default behavior is to use only the most recent health factor
"^DD",811.9,811.902,11,21,7,0)
within a category. A problem can arise if there are two or more health
"^DD",811.9,811.902,11,21,8,0)
factors within a category and they both have the same date. (This can
"^DD",811.9,811.902,11,21,9,0)
happen if both health factors are given during the same encounter). 
"^DD",811.9,811.902,11,21,10,0)
When the dates are the same, the health factor with the highest Within
"^DD",811.9,811.902,11,21,11,0)
Category Rank will be used. This is a numerical value like Rank
"^DD",811.9,811.902,11,21,12,0)
Frequency with 1 being the highest rank.
"^DD",811.9,811.902,11,21,13,0)

"^DD",811.9,811.902,11,21,14,0)
If WITHIN CATEGORY RANK has the special value of 0 then the
"^DD",811.9,811.902,11,21,15,0)
categorization of health factors will be ignored and the health factor
"^DD",811.9,811.902,11,21,16,0)
will be treated as a distinct finding.
"^DD",811.9,811.902,11,"DT")
3000501
"^DD",811.9,811.902,12,0)
CONDITION^FXO^^0;11^K:$L(X)>52!($L(X)<3) X D VCOND^PXRMINTR(.X)
"^DD",811.9,811.902,12,2)
S Y(0)=Y S Y=$TR(Y,"~"," ")
"^DD",811.9,811.902,12,2.1)
S Y=$TR(Y,"~"," ")
"^DD",811.9,811.902,12,3)
Enter logic to evaluate the findings value. Enter ?? for more information.
"^DD",811.9,811.902,12,21,0)
^^49^49^3000607^
"^DD",811.9,811.902,12,21,1,0)
The CONDITION must be written in M code based on the value returned from
"^DD",811.9,811.902,12,21,2,0)
the patient results for the finding. Each type of finding has a specific
"^DD",811.9,811.902,12,21,3,0)
field that provides the value available to use in the CONDITION logic.
"^DD",811.9,811.902,12,21,4,0)
If the finding value is text, enclose the condition value in quotes 
"^DD",811.9,811.902,12,21,5,0)
(e.g., "positive"). If the finding value is numeric, do not use quotes
"^DD",811.9,811.902,12,21,6,0)
(e.g., 3).
"^DD",811.9,811.902,12,21,7,0)
 
"^DD",811.9,811.902,12,21,8,0)
An IF statement is used to evaluate the value.  The value is always
"^DD",811.9,811.902,12,21,9,0)
identified as V in the statement regardless of the type of finding. If 
"^DD",811.9,811.902,12,21,10,0)
the condition logic statement evaluates to true, the finding is 
"^DD",811.9,811.902,12,21,11,0)
considered as found (true), otherwise the finding is considered as not
"^DD",811.9,811.902,12,21,12,0)
found (false).
"^DD",811.9,811.902,12,21,13,0)
 
"^DD",811.9,811.902,12,21,14,0)
Relational operators that may be used include: = equals, < less than, >
"^DD",811.9,811.902,12,21,15,0)
greater than, [ contains, ] follows and ? pattern matches. Logical
"^DD",811.9,811.902,12,21,16,0)
operators may be used to check multiple values: & And, ! Or, ' Not. 
"^DD",811.9,811.902,12,21,17,0)
         
"^DD",811.9,811.902,12,21,18,0)
Typical examples of M code are as follows:
"^DD",811.9,811.902,12,21,19,0)
    I V=3 for Education Topic's Level of Understanding = 3
"^DD",811.9,811.902,12,21,20,0)
    I V="H" for Health Factor's Level/Severity="H"
"^DD",811.9,811.902,12,21,21,0)
    I ($P(V,"/",1)>140)&($P(V,"/",2)>90) for elevated blood pressure
"^DD",811.9,811.902,12,21,22,0)
    systolic and diastolic values
"^DD",811.9,811.902,12,21,23,0)
    I ($P(V,"/",1)>140)!($P(V,"/",2)>90) for elevated blood pressure
"^DD",811.9,811.902,12,21,24,0)
    systolic or diastolic values
"^DD",811.9,811.902,12,21,25,0)
    I V["BLACK" for VA-RACE computed finding where race contains BLACK
"^DD",811.9,811.902,12,21,26,0)
 
"^DD",811.9,811.902,12,21,27,0)
Below is a brief summary for each finding type, the related field to use
"^DD",811.9,811.902,12,21,28,0)
for the value and examples:
"^DD",811.9,811.902,12,21,29,0)
 
"^DD",811.9,811.902,12,21,30,0)
Finding type                Field Value Used        Example M Code
"^DD",811.9,811.902,12,21,31,0)
 
"^DD",811.9,811.902,12,21,32,0)
 Drug                       None
"^DD",811.9,811.902,12,21,33,0)
 Education Topic            Level of understanding  I V=3
"^DD",811.9,811.902,12,21,34,0)
 Exam                       Result                  I V="N"
"^DD",811.9,811.902,12,21,35,0)
 Health Factor              Level/severity          I V="H"
"^DD",811.9,811.902,12,21,36,0)
 Immunization               Series                  I V="P"
"^DD",811.9,811.902,12,21,37,0)
 Laboratory Test            Result Value            I V>130
"^DD",811.9,811.902,12,21,38,0)
 Mental Health Instrument   Raw score               I V=1
"^DD",811.9,811.902,12,21,39,0)
 Orderable Item             Status                  I V="complete"
"^DD",811.9,811.902,12,21,40,0)
 Radiology Procedure        None
"^DD",811.9,811.902,12,21,41,0)
 Reminder Computed Finding  Determined by programmer-See Manager Manual
"^DD",811.9,811.902,12,21,42,0)
 Reminder Taxonomy          None
"^DD",811.9,811.902,12,21,43,0)
 Skin Test                  Result                  I V="N"
"^DD",811.9,811.902,12,21,44,0)
 VA Drug Class              None
"^DD",811.9,811.902,12,21,45,0)
 VA Generic                 None
"^DD",811.9,811.902,12,21,46,0)
 Vital Measurement          Rate                    I V>27
"^DD",811.9,811.902,12,21,47,0)
 
"^DD",811.9,811.902,12,21,48,0)
For details about allowed CONDITIONS for each finding type see the
"^DD",811.9,811.902,12,21,49,0)
Clinical Reminders Manager Manual.
"^DD",811.9,811.902,12,"DT")
3000609
"^DD",811.9,811.902,13,0)
MH SCALE^FX^^0;12^K:$L(X)>79!($L(X)<1) X D VSCALEF^PXRMMH
"^DD",811.9,811.902,13,3)
Enter the scale number or scale name.
"^DD",811.9,811.902,13,4)
D SCHELPF^PXRMMH
"^DD",811.9,811.902,13,21,0)
^.001^2^2^3000505^^
"^DD",811.9,811.902,13,21,1,0)
This applies only to Mental Health Instrument findings. It specifies
"^DD",811.9,811.902,13,21,2,0)
which scale to use when scoring the test.
"^DD",811.9,811.902,13,"DT")
3000321
"^DD",811.9,811.9024,0)
FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9024,0,"DT")
2990325
"^DD",811.9,811.9024,0,"NM","FOUND TEXT")

"^DD",811.9,811.9024,0,"UP")
811.902
"^DD",811.9,811.9024,.01,0)
FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9024,.01,3)
Enter the found text.
"^DD",811.9,811.9024,.01,"DT")
2990325
"^DD",811.9,811.9025,0)
NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9025,0,"DT")
2990325
"^DD",811.9,811.9025,0,"NM","NOT FOUND TEXT")

"^DD",811.9,811.9025,0,"UP")
811.902
"^DD",811.9,811.9025,.01,0)
NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9025,.01,3)
Enter the not found text.
"^DD",811.9,811.9025,.01,"DT")
2990325
"^DD",811.9,811.911,0)
HEALTH FACTOR FINDINGS SUB-FIELD^^9^10
"^DD",811.9,811.911,0,"DT")
2990222
"^DD",811.9,811.911,0,"IX","B",811.911,.01)

"^DD",811.9,811.911,0,"NM","HEALTH FACTOR FINDINGS")

"^DD",811.9,811.911,0,"UP")
811.9
"^DD",811.9,811.911,.01,0)
HEALTH FACTOR FINDINGS ITEM^MP9999999.64'^AUTTHF(^0;1^Q
"^DD",811.9,811.911,.01,1,0)
^.1
"^DD",811.9,811.911,.01,1,1,0)
811.911^B
"^DD",811.9,811.911,.01,1,1,1)
S ^PXD(811.9,DA(1),6,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.911,.01,1,1,2)
K ^PXD(811.9,DA(1),6,"B",$E(X,1,30),DA)
"^DD",811.9,811.911,.01,3)
This field is obsolete, do not use.
"^DD",811.9,811.911,.01,21,0)
^.001^1^1^3000505^^^^
"^DD",811.9,811.911,.01,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.911,.01,"DT")
2960131
"^DD",811.9,811.911,1,0)
MINIMUM AGE^NJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.911,1,3)
Enter the minimum age associated with this health factor.
"^DD",811.9,811.911,1,21,0)
^^1^1^3000505^
"^DD",811.9,811.911,1,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.911,1,"DT")
2951117
"^DD",811.9,811.911,2,0)
MAXIMUM AGE^NJ3,0^^0;3^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.911,2,3)
Enter the maximum age associated with this health factor.
"^DD",811.9,811.911,2,21,0)
^^1^1^3000505^
"^DD",811.9,811.911,2,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.911,2,"DT")
2951117
"^DD",811.9,811.911,3,0)
REMINDER FREQUENCY^FX^^0;4^S X=$$UP^XLFSTR(X) K:($L(X)>5)!($L(X)<2)!((X'?1N.N1"D")&(X'?1N.N1"M")&(X'?1N.N1"Y")) X
"^DD",811.9,811.911,3,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.9,811.911,3,21,0)
^^1^1^3000505^
"^DD",811.9,811.911,3,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.911,3,"DT")
2970313
"^DD",811.9,811.911,4,0)
FOUND TEXT^811.9114^^1;0
"^DD",811.9,811.911,4,21,0)
^^1^1^3000505^
"^DD",811.9,811.911,4,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.911,5,0)
NOT FOUND TEXT^811.9115^^2;0
"^DD",811.9,811.911,5,21,0)
^^1^1^3000505^
"^DD",811.9,811.911,5,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.911,6,0)
RANK FREQUENCY^NJ3,0^^0;5^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.9,811.911,6,3)
Enter the optional rank value from 1 to 999, or leave blank.
"^DD",811.9,811.911,6,21,0)
^^1^1^3000505^
"^DD",811.9,811.911,6,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.911,6,"DT")
2970210
"^DD",811.9,811.911,7,0)
USE IN DATE DUE CALC^S^1:YES;0:NO;^0;6^Q
"^DD",811.9,811.911,7,3)
Optional - enter 1 to use the health factor finding date to calculate the date due when it is the most recent finding.
"^DD",811.9,811.911,7,21,0)
^^1^1^3000505^
"^DD",811.9,811.911,7,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.911,7,"DT")
2961126
"^DD",811.9,811.911,8,0)
USE IN APPLY LOGIC^S^&:AND;!:OR;&':AND NOT;!':OR NOT;^0;7^Q
"^DD",811.9,811.911,8,3)
Enter the AND, OR logic to use in the APPLY LOGIC.
"^DD",811.9,811.911,8,21,0)
^^1^1^3000505^
"^DD",811.9,811.911,8,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.911,8,"DT")
2970123
"^DD",811.9,811.911,9,0)
EFFECTIVE PERIOD^FX^^0;8^S X=$$UP^XLFSTR(X) K:($L(X)>5)!($L(X)<2)!((X'?1N.N1"D")&(X'?1N.N1"M")&(X'?1N.N1"Y")) X
"^DD",811.9,811.911,9,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.9,811.911,9,21,0)
^^1^1^3000505^
"^DD",811.9,811.911,9,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.911,9,"DT")
2981103
"^DD",811.9,811.9110111,0)
HF GENERAL FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9110111,0,"DT")
2960201
"^DD",811.9,811.9110111,0,"NM","HF GENERAL FOUND TEXT")

"^DD",811.9,811.9110111,0,"UP")
811.9
"^DD",811.9,811.9110111,.01,0)
HF GENERAL FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9110111,.01,3)
This field is obsolete do not use.
"^DD",811.9,811.9110111,.01,21,0)
^^1^1^3000428^
"^DD",811.9,811.9110111,.01,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9110111,.01,"DT")
2960201
"^DD",811.9,811.9110112,0)
HF GENERAL NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9110112,0,"DT")
2960201
"^DD",811.9,811.9110112,0,"NM","HF GENERAL NOT FOUND TEXT")

"^DD",811.9,811.9110112,0,"UP")
811.9
"^DD",811.9,811.9110112,.01,0)
HF GENERAL NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9110112,.01,3)
This field is obsolete do not use.
"^DD",811.9,811.9110112,.01,21,0)
^.001^1^1^3000428^^
"^DD",811.9,811.9110112,.01,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.9110112,.01,"DT")
2960201
"^DD",811.9,811.9114,0)
FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9114,0,"DT")
2951215
"^DD",811.9,811.9114,0,"NM","FOUND TEXT")

"^DD",811.9,811.9114,0,"UP")
811.911
"^DD",811.9,811.9114,.01,0)
FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9114,.01,3)
Enter the text to be used if this health factor is found.
"^DD",811.9,811.9114,.01,"DT")
2951215
"^DD",811.9,811.9115,0)
NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9115,0,"DT")
2951215
"^DD",811.9,811.9115,0,"NM","NOT FOUND TEXT")

"^DD",811.9,811.9115,0,"UP")
811.911
"^DD",811.9,811.9115,.01,0)
NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9115,.01,3)
Enter the text to be used if this health factor is not found.
"^DD",811.9,811.9115,.01,"DT")
2951215
"^DD",811.9,811.92,0)
REMINDER DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.9,811.92,0,"NM","REMINDER DESCRIPTION")

"^DD",811.9,811.92,0,"UP")
811.9
"^DD",811.9,811.92,.01,0)
REMINDER DESCRIPTION^W^^0;1^Q
"^DD",811.9,811.92,.01,3)

"^DD",811.9,811.92,.01,"DT")
2960131
"^DD",811.9,811.93,0)
TECHNICAL DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.9,811.93,0,"NM","TECHNICAL DESCRIPTION")

"^DD",811.9,811.93,0,"UP")
811.9
"^DD",811.9,811.93,.01,0)
TECHNICAL DESCRIPTION^W^^0;1^Q
"^DD",811.9,811.93,.01,.1)
 
"^DD",811.9,811.93,.01,"DT")
2960131
"^DD",811.9,811.94,0)
TARGET RESULT FINDINGS SUB-FIELD^^6^5
"^DD",811.9,811.94,0,"DT")
2960808
"^DD",811.9,811.94,0,"IX","B",811.94,.01)

"^DD",811.9,811.94,0,"NM","TARGET RESULT FINDINGS")

"^DD",811.9,811.94,0,"UP")
811.9
"^DD",811.9,811.94,.01,0)
TARGET RESULT FINDINGS FILE^*P1'^DIC(^0;1^S DIC("S")="I $D(^DIC(""AC"",""PXRM"",+Y))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",811.9,811.94,.01,1,0)
^.1
"^DD",811.9,811.94,.01,1,1,0)
811.94^B
"^DD",811.9,811.94,.01,1,1,1)
S ^PXD(811.9,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.94,.01,1,1,2)
K ^PXD(811.9,DA(1),3,"B",$E(X,1,30),DA)
"^DD",811.9,811.94,.01,3)
This field is obsolete, do not use.
"^DD",811.9,811.94,.01,12)
Screen on files with an Application Group of "PXRM"
"^DD",811.9,811.94,.01,12.1)
S DIC("S")="I $D(^DIC(""AC"",""PXRM"",+Y))"
"^DD",811.9,811.94,.01,21,0)
^.001^1^1^3000505^^^^
"^DD",811.9,811.94,.01,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.94,.01,"DT")
2960808
"^DD",811.9,811.94,1,0)
TARGET RESULT DESCRIPTION^811.941^^1;0
"^DD",811.9,811.94,1,21,0)
^^1^1^3000505^
"^DD",811.9,811.94,1,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.94,1,"DT")
2960131
"^DD",811.9,811.94,4,0)
TARGET RESULT FINDINGS ITEM^811.944V^^2;0
"^DD",811.9,811.94,4,21,0)
^^1^1^3000505^
"^DD",811.9,811.94,4,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.94,4,"DT")
2960131
"^DD",811.9,811.94,5,0)
TARGET RESULT FOUND TEXT^811.945^^3;0
"^DD",811.9,811.94,5,21,0)
^^1^1^3000505^
"^DD",811.9,811.94,5,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.94,6,0)
TARGET RESULT NOT FOUND TEXT^811.946^^4;0
"^DD",811.9,811.94,6,21,0)
^^1^1^3000505^
"^DD",811.9,811.94,6,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.941,0)
TARGET RESULT DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.9,811.941,0,"NM","TARGET RESULT DESCRIPTION")

"^DD",811.9,811.941,0,"UP")
811.94
"^DD",811.9,811.941,.01,0)
TARGET RESULT DESCRIPTION^W^^0;1^Q
"^DD",811.9,811.941,.01,3)
Enter the description of how the criteria is used.
"^DD",811.9,811.941,.01,21,0)
^^2^2^2950711^
"^DD",811.9,811.941,.01,21,1,0)
This is the description of how the file criteria should be defined to
"^DD",811.9,811.941,.01,21,2,0)
accomplish the health maintenance item.
"^DD",811.9,811.941,.01,"DT")
2960131
"^DD",811.9,811.944,0)
TARGET RESULT FINDINGS ITEM SUB-FIELD^^.01^1
"^DD",811.9,811.944,0,"DT")
2951023
"^DD",811.9,811.944,0,"IX","B",811.944,.01)

"^DD",811.9,811.944,0,"NM","TARGET RESULT FINDINGS ITEM")

"^DD",811.9,811.944,0,"UP")
811.94
"^DD",811.9,811.944,.01,0)
TARGET RESULT FINDINGS ITEM^MVX^^0;1^I '$$VLAB^PXRMINTR(X) K X
"^DD",811.9,811.944,.01,1,0)
^.1
"^DD",811.9,811.944,.01,1,1,0)
811.944^B
"^DD",811.9,811.944,.01,1,1,1)
S ^PXD(811.9,DA(2),3,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.944,.01,1,1,2)
K ^PXD(811.9,DA(2),3,DA(1),2,"B",$E(X,1,30),DA)
"^DD",811.9,811.944,.01,1,1,3)
Required Index for Variable Pointer
"^DD",811.9,811.944,.01,1,2,0)
811.9^AC^MUMPS
"^DD",811.9,811.944,.01,1,2,1)
S ^PXD(811.9,"AC",DA(2),$P(^PXD(811.9,DA(2),3,DA(1),0),U,1),$E(X,1,30),DA)=0
"^DD",811.9,811.944,.01,1,2,2)
K ^PXD(811.9,"AC",DA(2),$P(^PXD(811.9,DA(2),3,DA(1),0),U,1),$E(X,1,30),DA)
"^DD",811.9,811.944,.01,1,2,"%D",0)
^^2^2^3000505^
"^DD",811.9,811.944,.01,1,2,"%D",1,0)
This cross-reference is used to quickly identify file and selection item
"^DD",811.9,811.944,.01,1,2,"%D",2,0)
criteria to use for the health maintenance item definition.
"^DD",811.9,811.944,.01,1,2,"DT")
2950713
"^DD",811.9,811.944,.01,3)
Enter an item to use for the targeted result findings.
"^DD",811.9,811.944,.01,21,0)
^^1^1^3000505^
"^DD",811.9,811.944,.01,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.944,.01,"DT")
3000519
"^DD",811.9,811.944,.01,"V",0)
^.12P^10^8
"^DD",811.9,811.944,.01,"V",1,0)
60^LABORATORY TEST^1^L^n^n
"^DD",811.9,811.944,.01,"V",2,0)
71^RADIOLOGY TEST^3^R^^n
"^DD",811.9,811.944,.01,"V",6,0)
9999999.09^EDUCATION TOPIC^7^E^n^n
"^DD",811.9,811.944,.01,"V",7,0)
9999999.14^IMMUNIZATION^8^I^n^n
"^DD",811.9,811.944,.01,"V",8,0)
9999999.28^SKIN TEST^9^SK^n^n
"^DD",811.9,811.944,.01,"V",9,0)
9999999.15^EXAM^10^EX^n^n
"^DD",811.9,811.944,.01,"V",10,0)
120.51^VITAL MEASUREMENT TYPE^4^VT^n^n
"^DD",811.9,811.945,0)
TARGET RESULT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.945,0,"DT")
2960131
"^DD",811.9,811.945,0,"NM","TARGET RESULT FOUND TEXT")

"^DD",811.9,811.945,0,"UP")
811.94
"^DD",811.9,811.945,.01,0)
TARGET RESULT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.945,.01,3)
Enter text to display when a targeted result was found.
"^DD",811.9,811.945,.01,21,0)
^^3^3^2960131^
"^DD",811.9,811.945,.01,21,1,0)
This is text that could be displayed in the reminder if the evaluation of
"^DD",811.9,811.945,.01,21,2,0)
patient data included a match on an item in the targeted result findings
"^DD",811.9,811.945,.01,21,3,0)
file.
"^DD",811.9,811.945,.01,"DT")
2960131
"^DD",811.9,811.946,0)
TARGET RESULT NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.946,0,"DT")
2960131
"^DD",811.9,811.946,0,"NM","TARGET RESULT NOT FOUND TEXT")

"^DD",811.9,811.946,0,"UP")
811.94
"^DD",811.9,811.946,.01,0)
TARGET RESULT NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.946,.01,3)
Enter the text to display when no result was found.
"^DD",811.9,811.946,.01,21,0)
^^4^4^2960131^
"^DD",811.9,811.946,.01,21,1,0)
This is text that can be used in the Health Summary to indicate the
"^DD",811.9,811.946,.01,21,2,0)
reminder could not find any results in the target file.  It may be useful
"^DD",811.9,811.946,.01,21,3,0)
to indicate "No record of ___ on file"  to differentiate between results
"^DD",811.9,811.946,.01,21,4,0)
which may be in the manual record but not entered in the computer.
"^DD",811.9,811.946,.01,"DT")
2960131
"^DD",811.9,811.95,0)
TAXONOMY FINDINGS SUB-FIELD^^10^11
"^DD",811.9,811.95,0,"DT")
2990222
"^DD",811.9,811.95,0,"IX","B",811.95,.01)

"^DD",811.9,811.95,0,"NM","TAXONOMY FINDINGS")

"^DD",811.9,811.95,0,"UP")
811.9
"^DD",811.9,811.95,.01,0)
TAXONOMY^M*P811.2'^PXD(811.2,^0;1^S DIC("S")="I '$P(^(0),U,6)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",811.9,811.95,.01,1,0)
^.1^^-1
"^DD",811.9,811.95,.01,1,1,0)
811.95^B
"^DD",811.9,811.95,.01,1,1,1)
S ^PXD(811.9,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.95,.01,1,1,2)
K ^PXD(811.9,DA(1),4,"B",$E(X,1,30),DA)
"^DD",811.9,811.95,.01,3)
This field is obsolete, do not use.
"^DD",811.9,811.95,.01,12)
You may not choose inactive entries
"^DD",811.9,811.95,.01,12.1)
S DIC("S")="I '$P(^(0),U,6)"
"^DD",811.9,811.95,.01,21,0)
^.001^1^1^3000505^^
"^DD",811.9,811.95,.01,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.95,.01,"DT")
2990514
"^DD",811.9,811.95,1,0)
MINIMUM AGE^NJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.95,1,3)
Enter the minimum age for the standard criteria.
"^DD",811.9,811.95,1,21,0)
^^1^1^3000505^
"^DD",811.9,811.95,1,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.95,1,"DT")
2951117
"^DD",811.9,811.95,2,0)
MAXIMUM AGE^NJ3,0^^0;3^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.95,2,3)
Enter the maximum age for the standard criteria.
"^DD",811.9,811.95,2,21,0)
^^1^1^3000505^
"^DD",811.9,811.95,2,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.95,2,"DT")
2951117
"^DD",811.9,811.95,3,0)
REMINDER FREQUENCY^FX^^0;4^S X=$$UP^XLFSTR(X) K:($L(X)>5)!($L(X)<2)!((X'?1N.N1"D")&(X'?1N.N1"M")&(X'?1N.N1"Y")) X
"^DD",811.9,811.95,3,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.9,811.95,3,21,0)
^^1^1^3000505^
"^DD",811.9,811.95,3,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.95,3,"DT")
2970313
"^DD",811.9,811.95,4,0)
FOUND TEXT^811.954^^1;0
"^DD",811.9,811.95,4,21,0)
^^1^1^3000505^
"^DD",811.9,811.95,4,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.95,5,0)
NOT FOUND TEXT^811.955^^2;0
"^DD",811.9,811.95,5,21,0)
^^1^1^3000505^
"^DD",811.9,811.95,5,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.95,6,0)
RANK FREQUENCY^NJ3,0^^0;5^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.9,811.95,6,3)
Enter an optional rank from 1 to 999 or leave blank.
"^DD",811.9,811.95,6,21,0)
^^1^1^3000505^
"^DD",811.9,811.95,6,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.95,6,"DT")
2970210
"^DD",811.9,811.95,7,0)
USE IN DATE DUE CALC^S^1:YES;0:NO;^0;6^Q
"^DD",811.9,811.95,7,3)
Optional - enter 1 to use the taxonomy finding date to calculate the date due when it is the most recent finding.
"^DD",811.9,811.95,7,21,0)
^^1^1^3000505^
"^DD",811.9,811.95,7,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.95,7,"DT")
2961126
"^DD",811.9,811.95,8,0)
USE IN APPLY LOGIC^S^&:AND;!:OR;&':AND NOT;!':OR NOT;^0;7^Q
"^DD",811.9,811.95,8,3)
Enter the AND, OR logic to use in the APPLY LOGIC.
"^DD",811.9,811.95,8,21,0)
^^1^1^3000505^
"^DD",811.9,811.95,8,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.95,8,"DT")
2970122
"^DD",811.9,811.95,9,0)
EFFECTIVE PERIOD^FX^^0;8^S X=$$UP^XLFSTR(X) K:($L(X)>5)!($L(X)<2)!((X'?1N.N1"D")&(X'?1N.N1"M")&(X'?1N.N1"Y")) X
"^DD",811.9,811.95,9,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.9,811.95,9,21,0)
^^1^1^3000505^
"^DD",811.9,811.95,9,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.95,9,"DT")
2981104
"^DD",811.9,811.95,10,0)
USE INACTIVE PROBLEMS^S^1:YES;0:NO;^0;9^Q
"^DD",811.9,811.95,10,21,0)
^^1^1^3000505^
"^DD",811.9,811.95,10,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.95,10,"DT")
2981230
"^DD",811.9,811.95051,0)
TAXON GENERAL FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.95051,0,"DT")
2960201
"^DD",811.9,811.95051,0,"NM","TAXON GENERAL FOUND TEXT")

"^DD",811.9,811.95051,0,"UP")
811.9
"^DD",811.9,811.95051,.01,0)
TAXON GENERAL FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.95051,.01,3)
This field is obsolete do not use.
"^DD",811.9,811.95051,.01,21,0)
^^1^1^3000428^
"^DD",811.9,811.95051,.01,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.95051,.01,"DT")
2960201
"^DD",811.9,811.95052,0)
TAXON GENERAL NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.95052,0,"DT")
2960201
"^DD",811.9,811.95052,0,"NM","TAXON GENERAL NOT FOUND TEXT")

"^DD",811.9,811.95052,0,"UP")
811.9
"^DD",811.9,811.95052,.01,0)
TAXON GENERAL NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.95052,.01,3)
This field is obsolete do not use.
"^DD",811.9,811.95052,.01,21,0)
^^1^1^3000428^
"^DD",811.9,811.95052,.01,21,1,0)
This field is obsolete and will be deleted in the near future. Do not use.
"^DD",811.9,811.95052,.01,"DT")
2960201
"^DD",811.9,811.954,0)
FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.954,0,"DT")
2951215
"^DD",811.9,811.954,0,"NM","FOUND TEXT")

"^DD",811.9,811.954,0,"UP")
811.95
"^DD",811.9,811.954,.01,0)
FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.954,.01,3)
Enter the text to be used if this taxonomy is found.
"^DD",811.9,811.954,.01,"DT")
2951215
"^DD",811.9,811.955,0)
NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.955,0,"DT")
2951215
"^DD",811.9,811.955,0,"NM","NOT FOUND TEXT")

"^DD",811.9,811.955,0,"UP")
811.95
"^DD",811.9,811.955,.01,0)
NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.955,.01,3)
Enter the text to be used if this taxonomy is not found.
"^DD",811.9,811.955,.01,"DT")
2951215
"^DD",811.9,811.961,0)
GENERAL COHORT NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.961,0,"DT")
3000110
"^DD",811.9,811.961,0,"NM","GENERAL COHORT NOT FOUND TEXT")

"^DD",811.9,811.961,0,"UP")
811.9
"^DD",811.9,811.961,.01,0)
GENERAL COHORT NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.961,.01,.1)
GENERAL PATIENT COHORT NOT FOUND TEXT
"^DD",811.9,811.961,.01,3)
Enter general text to display when the patient is not found to be in the patient cohort. 
"^DD",811.9,811.961,.01,21,0)
^^5^5^3000505^
"^DD",811.9,811.961,.01,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.961,.01,21,2,0)
component when the patient's findings during reminder evaluation made the
"^DD",811.9,811.961,.01,21,3,0)
Patient Cohort Logic false. This is general text, not specific to a
"^DD",811.9,811.961,.01,21,4,0)
finding, that will display when the patient is not found to be in the
"^DD",811.9,811.961,.01,21,5,0)
patient cohort.
"^DD",811.9,811.961,.01,"DT")
3000504
"^DD",811.9,811.965,0)
GENERAL RESOLUTION FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.965,0,"DT")
3000110
"^DD",811.9,811.965,0,"NM","GENERAL RESOLUTION FOUND TEXT")

"^DD",811.9,811.965,0,"UP")
811.9
"^DD",811.9,811.965,.01,0)
GENERAL RESOLUTION FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.965,.01,.1)
GENERAL RESOLUTION FOUND TEXT
"^DD",811.9,811.965,.01,3)
Enter general text to display when the patient's findings resolve the reminder. 
"^DD",811.9,811.965,.01,21,0)
^^5^5^3000505^
"^DD",811.9,811.965,.01,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.965,.01,21,2,0)
component when the patient's findings found during the reminder evaluation
"^DD",811.9,811.965,.01,21,3,0)
made the Resolution Logic true.  This is general text, not specific to
"^DD",811.9,811.965,.01,21,4,0)
a finding, that will display when the patient's findings resolve the
"^DD",811.9,811.965,.01,21,5,0)
reminder.
"^DD",811.9,811.965,.01,"DT")
3000504
"^DD",811.9,811.966,0)
GENERAL RESOL NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.966,0,"DT")
3000110
"^DD",811.9,811.966,0,"NM","GENERAL RESOL NOT FOUND TEXT")

"^DD",811.9,811.966,0,"UP")
811.9
"^DD",811.9,811.966,.01,0)
GENERAL RESOL NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.966,.01,.1)
GENERAL RESOLUTION NOT FOUND TEXT
"^DD",811.9,811.966,.01,3)
Enter general text to display when the patient's findings do not resolve the reminder.
"^DD",811.9,811.966,.01,21,0)
^^4^4^3000505^
"^DD",811.9,811.966,.01,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.966,.01,21,2,0)
component when the patient's findings found during the reminder evaluation
"^DD",811.9,811.966,.01,21,3,0)
made the Resolution Logic false.  This is general text, not specific to
"^DD",811.9,811.966,.01,21,4,0)
a finding, that will display when the reminder has not been resolved.
"^DD",811.9,811.966,.01,"DT")
3000504
"^DD",811.9,811.97,0)
BASELINE AGE FINDINGS SUB-FIELD^^4^5
"^DD",811.9,811.97,0,"DT")
2960201
"^DD",811.9,811.97,0,"IX","B",811.97,.01)

"^DD",811.9,811.97,0,"NM","BASELINE AGE FINDINGS")

"^DD",811.9,811.97,0,"UP")
811.9
"^DD",811.9,811.97,.01,0)
REMINDER FREQUENCY^MFX^^0;1^S X=$$UP^XLFSTR(X) K:($L(X)>5)!($L(X)<2)!((X'?1N.N1"D")&(X'?1N.N1"M")&(X'?1N.N1"Y")) X
"^DD",811.9,811.97,.01,1,0)
^.1
"^DD",811.9,811.97,.01,1,1,0)
811.97^B
"^DD",811.9,811.97,.01,1,1,1)
S ^PXD(811.9,DA(1),7,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.97,.01,1,1,2)
K ^PXD(811.9,DA(1),7,"B",$E(X,1,30),DA)
"^DD",811.9,811.97,.01,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.9,811.97,.01,21,0)
^.001^11^11^3000428^^^^
"^DD",811.9,811.97,.01,21,1,0)
This is the frequency to give the reminder. It is input as nD, nM, or
"^DD",811.9,811.97,.01,21,2,0)
nY, where D stands for days, M for months, Y for years, and n is a
"^DD",811.9,811.97,.01,21,3,0)
number. Thus, for a reminder that is to be given once a year, the
"^DD",811.9,811.97,.01,21,4,0)
values 365D, 12M, or 1Y would all work. There are two special reminder
"^DD",811.9,811.97,.01,21,5,0)
frequencies. The frequency 0Y means that the reminder is never to be
"^DD",811.9,811.97,.01,21,6,0)
given. This is used to create reminders that are given only to patients
"^DD",811.9,811.97,.01,21,7,0)
who have certain findings. For example the distributed VA-DIABETIC
"^DD",811.9,811.97,.01,21,8,0)
reminders are setup up so they are given only to patients who have the
"^DD",811.9,811.97,.01,21,9,0)
VA-DIABETIC taxonomy. This taxonomy can override the baseline frequency
"^DD",811.9,811.97,.01,21,10,0)
and change the reminder frequency to 1Y. The second special frequency is
"^DD",811.9,811.97,.01,21,11,0)
99Y. This is used for reminders that are to be given once in a lifetime.
"^DD",811.9,811.97,.01,"DT")
2970505
"^DD",811.9,811.97,1,0)
MINIMUM AGE^NJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.97,1,3)
Enter the minimum age for this reminder frequency.
"^DD",811.9,811.97,1,21,0)
^.001^2^2^3000428^^^
"^DD",811.9,811.97,1,21,1,0)
This field specifies the minimum age for defining an age range
"^DD",811.9,811.97,1,21,2,0)
associated with a frequency. Leave it blank if there is no minimum age.
"^DD",811.9,811.97,1,"DT")
2960201
"^DD",811.9,811.97,2,0)
MAXIMUM AGE^NJ3,0^^0;3^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.97,2,3)
Enter the maximum age for this reminder frequency.
"^DD",811.9,811.97,2,21,0)
^.001^2^2^3000428^^^
"^DD",811.9,811.97,2,21,1,0)
This field specifies the maximum age for defining an age range
"^DD",811.9,811.97,2,21,2,0)
associated with a frequency. Leave it blank if there is no maximum age.
"^DD",811.9,811.97,2,"DT")
2960201
"^DD",811.9,811.97,3,0)
AGE MATCH TEXT^811.973^^1;0
"^DD",811.9,811.97,3,21,0)
^^2^2^3000428^
"^DD",811.9,811.97,3,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.97,3,21,2,0)
component if the patient's age falls within the age range.
"^DD",811.9,811.97,4,0)
AGE NO MATCH TEXT^811.974^^2;0
"^DD",811.9,811.97,4,21,0)
^^2^2^3000428^
"^DD",811.9,811.97,4,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.97,4,21,2,0)
component if the patient's age does not fall in the age range.
"^DD",811.9,811.97,4,"DT")
2960201
"^DD",811.9,811.973,0)
AGE MATCH TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.973,0,"DT")
2960201
"^DD",811.9,811.973,0,"NM","AGE MATCH TEXT")

"^DD",811.9,811.973,0,"UP")
811.97
"^DD",811.9,811.973,.01,0)
AGE MATCH TEXT^W^^0;1^Q
"^DD",811.9,811.973,.01,3)
Enter text to display for a match on age range.
"^DD",811.9,811.973,.01,"DT")
2960201
"^DD",811.9,811.974,0)
AGE NO MATCH TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.974,0,"DT")
2960201
"^DD",811.9,811.974,0,"NM","AGE NO MATCH TEXT")

"^DD",811.9,811.974,0,"UP")
811.97
"^DD",811.9,811.974,.01,0)
AGE NO MATCH TEXT^W^^0;1^Q
"^DD",811.9,811.974,.01,3)
Enter the text to display for no match on age range.
"^DD",811.9,811.974,.01,"DT")
2960201
"^DD",8989.51,8989.51,0)
FIELD^^30^18
"^DD",8989.51,8989.51,0,"DDA")
N
"^DD",8989.51,8989.51,0,"DT")
2970621
"^DD",8989.51,8989.51,0,"ID","WRITE")
N X S X=^(0) D EN^DDIOL($P(X,U,2),"","?36")
"^DD",8989.51,8989.51,0,"IX","AG",8989.513,.02)

"^DD",8989.51,8989.51,0,"IX","B",8989.51,.01)

"^DD",8989.51,8989.51,0,"IX","C",8989.51,.02)

"^DD",8989.51,8989.51,0,"IX","D",8989.51,.01)

"^DD",8989.51,8989.51,0,"NM","PARAMETER DEFINITION")

"^DD",8989.51,8989.51,0,"PT",8989.5,.02)

"^DD",8989.51,8989.51,0,"PT",8989.52,.04)

"^DD",8989.51,8989.51,0,"PT",8989.521,.02)

"^DD",8989.51,8989.51,0,"VRPK")
XT
"^DD",8989.51,8989.51,.01,0)
NAME^RFX^^0;1^D VALID01^XPARDD1
"^DD",8989.51,8989.51,.01,1,0)
^.1
"^DD",8989.51,8989.51,.01,1,1,0)
8989.51^B
"^DD",8989.51,8989.51,.01,1,1,1)
S ^XTV(8989.51,"B",$E(X,1,30),DA)=""
"^DD",8989.51,8989.51,.01,1,1,2)
K ^XTV(8989.51,"B",$E(X,1,30),DA)
"^DD",8989.51,8989.51,.01,1,2,0)
8989.51^D^KWIC
"^DD",8989.51,8989.51,.01,1,2,1)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^XTV(8989.51,"D",I,DA)=""
"^DD",8989.51,8989.51,.01,1,2,2)
S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^XTV(8989.51,"D",I,DA)
"^DD",8989.51,8989.51,.01,1,2,"DT")
3000225
"^DD",8989.51,8989.51,.01,3)
Answer must be 3-30 characters in length.  Name must be unique.
"^DD",8989.51,8989.51,.01,21,0)
^^2^2^2960207^
"^DD",8989.51,8989.51,.01,21,1,0)
This is the name of the parameter.  It should be namespaced according to the 
"^DD",8989.51,8989.51,.01,21,2,0)
package from which the parameter originated.
"^DD",8989.51,8989.51,.01,"DT")
3000225
"^DD",8989.51,8989.51,.02,0)
DISPLAY TEXT^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",8989.51,8989.51,.02,1,0)
^.1
"^DD",8989.51,8989.51,.02,1,1,0)
8989.51^C^MUMPS
"^DD",8989.51,8989.51,.02,1,1,1)
S ^XTV(8989.51,"C",$$UPPER^XPARDD1(X),DA)=""
"^DD",8989.51,8989.51,.02,1,1,2)
K ^XTV(8989.51,"C",$$UPPER^XPARDD1(X),DA)
"^DD",8989.51,8989.51,.02,1,1,"%D",0)
^^2^2^2970606^
"^DD",8989.51,8989.51,.02,1,1,"%D",1,0)
Cross references display text for lookup.  Display text is put in upper
"^DD",8989.51,8989.51,.02,1,1,"%D",2,0)
case so lookup will be case insensitive.
"^DD",8989.51,8989.51,.02,1,1,"DT")
2960409
"^DD",8989.51,8989.51,.02,3)
Answer must be 1-40 characters in length.
"^DD",8989.51,8989.51,.02,21,0)
^^2^2^2960207^
"^DD",8989.51,8989.51,.02,21,1,0)
This is the displayable name for the parameter (allows mixed case, 
"^DD",8989.51,8989.51,.02,21,2,0)
non-namespaced names).
"^DD",8989.51,8989.51,.02,"DT")
2960409
"^DD",8989.51,8989.51,.03,0)
MULTIPLE VALUED^S^1:Yes;0:No;^0;3^Q
"^DD",8989.51,8989.51,.03,3)
Enter 'Yes' if multiple instances of the parameter are allowed for any single entity.
"^DD",8989.51,8989.51,.03,21,0)
^^3^3^2980705^
"^DD",8989.51,8989.51,.03,21,1,0)
If this field is set to 'Yes', multiple instances of the parameter will be 
"^DD",8989.51,8989.51,.03,21,2,0)
allowed for a single entity.  Otherwise, the value of the instance field
"^DD",8989.51,8989.51,.03,21,3,0)
for a given Entity-Parameter combination will always be '1'.
"^DD",8989.51,8989.51,.03,"DT")
2960207
"^DD",8989.51,8989.51,.04,0)
INSTANCE TERM^F^^0;4^K:$L(X)>40!($L(X)<1) X
"^DD",8989.51,8989.51,.04,3)
Answer must be 1-40 characters in length.
"^DD",8989.51,8989.51,.04,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,.04,21,1,0)
This is a free text term that can be used when prompting for a new instance of 
"^DD",8989.51,8989.51,.04,21,2,0)
the parameter (in the case where the parameter in multiple valued).  If not 
"^DD",8989.51,8989.51,.04,21,3,0)
entered, the word "Instance" will be used.
"^DD",8989.51,8989.51,.04,"DT")
2960207
"^DD",8989.51,8989.51,.05,0)
VALUE TERM^F^^0;5^K:$L(X)>40!($L(X)<1) X
"^DD",8989.51,8989.51,.05,3)
Answer must be 1-40 characters in length.
"^DD",8989.51,8989.51,.05,21,0)
^^2^2^2970626^
"^DD",8989.51,8989.51,.05,21,1,0)
This contains text that is issued as a prompt for the value.  If nothing
"^DD",8989.51,8989.51,.05,21,2,0)
is here, the prompt will be the word 'Value:'.
"^DD",8989.51,8989.51,.05,"DT")
2960612
"^DD",8989.51,8989.51,.06,0)
PROHIBIT EDITING^S^1:Yes;0:No;^0;6^Q
"^DD",8989.51,8989.51,.06,3)
Choose 'Disallow Editing' if editing of this field should not be allowed.
"^DD",8989.51,8989.51,.06,21,0)
^^2^2^2970306^
"^DD",8989.51,8989.51,.06,21,1,0)
This field prevents the parameter value from being edited with Fileman or
"^DD",8989.51,8989.51,.06,21,2,0)
any Parameters tools.
"^DD",8989.51,8989.51,.06,"DT")
2970317
"^DD",8989.51,8989.51,1.1,0)
VALUE DATA TYPE^S^D:date/time;F:free text;N:numeric;S:set of codes;Y:yes/no;P:pointer;W:word processing;M:M code;C:constant;^1;1^Q
"^DD",8989.51,8989.51,1.1,3)
Enter the type of data this parameter will contain.
"^DD",8989.51,8989.51,1.1,21,0)
^^2^2^2960207^
"^DD",8989.51,8989.51,1.1,21,1,0)
This is the type of data this parameter will contain.  This field is used to 
"^DD",8989.51,8989.51,1.1,21,2,0)
define a call to the reader (^DIR) in most cases.
"^DD",8989.51,8989.51,1.1,"DT")
2960528
"^DD",8989.51,8989.51,1.2,0)
VALUE DOMAIN^F^^1;2^K:$L(X)>100!($L(X)<1) X
"^DD",8989.51,8989.51,1.2,3)
Enter up to 100 characters to further define the data type (used by ^DIR).
"^DD",8989.51,8989.51,1.2,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,1.2,21,1,0)
This is a string that may be used to further specify the data type.  The 
"^DD",8989.51,8989.51,1.2,21,2,0)
string stored here should be appropriate for the second ^-piece of DIR(0) 
"^DD",8989.51,8989.51,1.2,21,3,0)
when used with the data type field.
"^DD",8989.51,8989.51,1.2,"DT")
2960207
"^DD",8989.51,8989.51,1.3,0)
VALUE HELP^F^^1;3^K:$L(X)>80!($L(X)<1) X
"^DD",8989.51,8989.51,1.3,3)
Enter a line of help text to be displayed when entering a parameter value.
"^DD",8989.51,8989.51,1.3,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,1.3,21,1,0)
This field contains a line of help text that is displayed when the user 
"^DD",8989.51,8989.51,1.3,21,2,0)
requests help or encounters an error while entering the VALUE field in the 
"^DD",8989.51,8989.51,1.3,21,3,0)
PARAMETERS file.
"^DD",8989.51,8989.51,1.3,"DT")
2960207
"^DD",8989.51,8989.51,2,0)
VALUE VALIDATION CODE^K^^2;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",8989.51,8989.51,2,3)
This is M code used by DIR (3rd piece of DIR(0)).
"^DD",8989.51,8989.51,2,9)
@
"^DD",8989.51,8989.51,2,21,0)
^^2^2^2980705^
"^DD",8989.51,8989.51,2,21,1,0)
This field contains the M code that is placed in the third piece of DIR(0)
"^DD",8989.51,8989.51,2,21,2,0)
when validating a value in the PARAMETERS file.
"^DD",8989.51,8989.51,2,"DT")
2960207
"^DD",8989.51,8989.51,3,0)
VALUE SCREEN CODE^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",8989.51,8989.51,3,3)
This is M code placed in DIR("S").
"^DD",8989.51,8989.51,3,9)
@
"^DD",8989.51,8989.51,3,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,3,21,1,0)
This field contains M code that is used to screen allowable entries for the 
"^DD",8989.51,8989.51,3,21,2,0)
VALUE field in the PARAMETERS file.  The code is placed in DIR("S") when 
"^DD",8989.51,8989.51,3,21,3,0)
validating the entry.
"^DD",8989.51,8989.51,3,"DT")
2960207
"^DD",8989.51,8989.51,6.1,0)
INSTANCE DATA TYPE^S^D:date/time;F:free text;N:numeric;S:set of codes;Y:yes/no;P:pointer;^6;1^Q
"^DD",8989.51,8989.51,6.1,3)
Enter the type of data allowed for the INSTANCE field of the parameter.
"^DD",8989.51,8989.51,6.1,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,6.1,21,1,0)
This is the type of data that is contained in the INSTANCE field of the 
"^DD",8989.51,8989.51,6.1,21,2,0)
PARAMETERS file, if multiple parameter instances per entity are allowed.  
"^DD",8989.51,8989.51,6.1,21,3,0)
This field is used to define a call to the reader.
"^DD",8989.51,8989.51,6.1,"DT")
2960207
"^DD",8989.51,8989.51,6.2,0)
INSTANCE DOMAIN^F^^6;2^K:$L(X)>100!($L(X)<1) X
"^DD",8989.51,8989.51,6.2,3)
Enter up to 100 characters to further define the data type (used by ^DIR).
"^DD",8989.51,8989.51,6.2,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,6.2,21,1,0)
This may be used to further define the data type for the INSTANCE field of 
"^DD",8989.51,8989.51,6.2,21,2,0)
the parameter.  The string stored here should be appropriate for the second 
"^DD",8989.51,8989.51,6.2,21,3,0)
^-piece of DIR(0) when used with the data type field.
"^DD",8989.51,8989.51,6.2,"DT")
2960207
"^DD",8989.51,8989.51,6.3,0)
INSTANCE HELP^F^^6;3^K:$L(X)>80!($L(X)<1) X
"^DD",8989.51,8989.51,6.3,3)
Enter a line of help text to be displayed when entering the parameter instance.
"^DD",8989.51,8989.51,6.3,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,6.3,21,1,0)
This field contains a line of help text that is displayed when the user 
"^DD",8989.51,8989.51,6.3,21,2,0)
requests help or encounters an error while entering the INSTANCE field of 
"^DD",8989.51,8989.51,6.3,21,3,0)
the PARAMETERS file.
"^DD",8989.51,8989.51,6.3,"DT")
2960207
"^DD",8989.51,8989.51,7,0)
INSTANCE VALIDATION CODE^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",8989.51,8989.51,7,3)
This is M code used by DIR (3rd piece of DIR(0)).
"^DD",8989.51,8989.51,7,9)
@
"^DD",8989.51,8989.51,7,21,0)
^^2^2^2960207^
"^DD",8989.51,8989.51,7,21,1,0)
This field contains M code that is placed in the third piece of DIR(0) when 
"^DD",8989.51,8989.51,7,21,2,0)
validating the INSTANCE field in the PARAMETERS file.
"^DD",8989.51,8989.51,7,"DT")
2960207
"^DD",8989.51,8989.51,8,0)
INSTANCE SCREEN CODE^K^^8;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",8989.51,8989.51,8,3)
This is M code placed in DIR("S").
"^DD",8989.51,8989.51,8,9)
@
"^DD",8989.51,8989.51,8,21,0)
^^3^3^2960207^
"^DD",8989.51,8989.51,8,21,1,0)
This field contains M code that is used to screen allowable entries for the 
"^DD",8989.51,8989.51,8,21,2,0)
INSTANCE field in the PARAMETERS file.  The code is placed in DIR("S") when 
"^DD",8989.51,8989.51,8,21,3,0)
validating the entry.
"^DD",8989.51,8989.51,8,"DT")
2960207
"^DD",8989.51,8989.51,20,0)
DESCRIPTION^8989.512^^20;0
"^DD",8989.51,8989.51,20,21,0)
^^1^1^2970626^
"^DD",8989.51,8989.51,20,21,1,0)
A description of the parameter may be entered here.
"^DD",8989.51,8989.51,30,0)
ALLOWABLE ENTITIES^8989.513I^^30;0
"^DD",8989.51,8989.51,30,21,0)
^^2^2^2960213^^
"^DD",8989.51,8989.51,30,21,1,0)
This multiple contains a list of entities (pointers to files) for which the 
"^DD",8989.51,8989.51,30,21,2,0)
parameter may be validly set.
"^DD",8989.51,8989.512,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",8989.51,8989.512,0,"DT")
2960207
"^DD",8989.51,8989.512,0,"NM","DESCRIPTION")

"^DD",8989.51,8989.512,0,"UP")
8989.51
"^DD",8989.51,8989.512,.01,0)
DESCRIPTION^WL^^0;1^Q
"^DD",8989.51,8989.512,.01,3)
Enter a description of the parameter and how it is used.
"^DD",8989.51,8989.512,.01,21,0)
^^1^1^2960207^
"^DD",8989.51,8989.512,.01,21,1,0)
This is text that describes the purpose and use of the parameter.
"^DD",8989.51,8989.512,.01,"DT")
2960207
"^DD",8989.51,8989.513,0)
ALLOWABLE ENTITIES SUB-FIELD^^.02^2
"^DD",8989.51,8989.513,0,"DT")
2970621
"^DD",8989.51,8989.513,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DIC(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(1,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",8989.51,8989.513,0,"IX","B",8989.513,.01)

"^DD",8989.51,8989.513,0,"NM","ALLOWABLE ENTITIES")

"^DD",8989.51,8989.513,0,"UP")
8989.51
"^DD",8989.51,8989.513,.01,0)
PRECEDENCE^MRNJ6,2^^0;1^K:+X'=X!(X>999.99)!(X<0)!(X?.E1"."3N.N) X
"^DD",8989.51,8989.513,.01,1,0)
^.1
"^DD",8989.51,8989.513,.01,1,1,0)
8989.513^B
"^DD",8989.51,8989.513,.01,1,1,1)
S ^XTV(8989.51,DA(1),30,"B",$E(X,1,30),DA)=""
"^DD",8989.51,8989.513,.01,1,1,2)
K ^XTV(8989.51,DA(1),30,"B",$E(X,1,30),DA)
"^DD",8989.51,8989.513,.01,3)
Type a Number between 0 and 999.99, 2 Decimal Digits
"^DD",8989.51,8989.513,.01,21,0)
^^6^6^2960213^^^
"^DD",8989.51,8989.513,.01,21,1,0)
A single parameter may be set for several different types of entities.  This 
"^DD",8989.51,8989.513,.01,21,2,0)
lists the order in which entities are searched for a defined value.  For 
"^DD",8989.51,8989.513,.01,21,3,0)
example, if a parameter may be set for a package, a location, and a user, 
"^DD",8989.51,8989.513,.01,21,4,0)
and the respective precedents are 3, 2, 1, the value of the user parameter 
"^DD",8989.51,8989.513,.01,21,5,0)
would be returned.  If it did not exist, the value of the location 
"^DD",8989.51,8989.513,.01,21,6,0)
parameter.  If that did not exist, then the value of the package parameter.
"^DD",8989.51,8989.513,.01,"DT")
2960213
"^DD",8989.51,8989.513,.02,0)
ENTITY FILE^RP8989.518'^XTV(8989.518,^0;2^Q
"^DD",8989.51,8989.513,.02,1,0)
^.1
"^DD",8989.51,8989.513,.02,1,1,0)
8989.51^AG^MUMPS
"^DD",8989.51,8989.513,.02,1,1,1)
D AGS^XPARDD1
"^DD",8989.51,8989.513,.02,1,1,2)
D AGK^XPARDD1
"^DD",8989.51,8989.513,.02,1,1,"%D",0)
^^5^5^2980422^
"^DD",8989.51,8989.513,.02,1,1,"%D",1,0)
The AG x-ref has the format ^XTV(8989.51,PARAM,30,"AG",GLOBAL REF,DA)="".
"^DD",8989.51,8989.513,.02,1,1,"%D",2,0)
 
"^DD",8989.51,8989.513,.02,1,1,"%D",3,0)
It is used to screen the parameters that may be selected for a given entity 
"^DD",8989.51,8989.513,.02,1,1,"%D",4,0)
in the PARAMETERS file.  The global root is used because the entity is a 
"^DD",8989.51,8989.513,.02,1,1,"%D",5,0)
variable pointer.
"^DD",8989.51,8989.513,.02,1,1,"DT")
2960207
"^DD",8989.51,8989.513,.02,3)
Choose a file from which entities for this parameter are identified.
"^DD",8989.51,8989.513,.02,21,0)
^^3^3^2980422^
"^DD",8989.51,8989.513,.02,21,1,0)
This identifies an entity for which the parameter can be legally entered.  
"^DD",8989.51,8989.513,.02,21,2,0)
Entities are simply variable pointers.  The files which are eligible to be
"^DD",8989.51,8989.513,.02,21,3,0)
entities are listed in the PARAMETER ENTITY file.
"^DD",8989.51,8989.513,.02,"DT")
2970621
"^DD",9999999.64,9999999.64,0)
FIELD^^1101^11
"^DD",9999999.64,9999999.64,0,"DDA")
N
"^DD",9999999.64,9999999.64,0,"DT")
2950825
"^DD",9999999.64,9999999.64,0,"ID",.1)
W ""
"^DD",9999999.64,9999999.64,0,"IX","AC",9999999.64,.03)

"^DD",9999999.64,9999999.64,0,"IX","AD",9999999.64,.1)

"^DD",9999999.64,9999999.64,0,"IX","B",9999999.64,.01)

"^DD",9999999.64,9999999.64,0,"IX","D",9999999.64,.09)

"^DD",9999999.64,9999999.64,0,"NM","HEALTH FACTORS")

"^DD",9999999.64,9999999.64,0,"PT",142.14,.01)

"^DD",9999999.64,9999999.64,0,"PT",801.41,15)

"^DD",9999999.64,9999999.64,0,"PT",801.41,18)

"^DD",9999999.64,9999999.64,0,"PT",801.4118,.01)

"^DD",9999999.64,9999999.64,0,"PT",801.43,.02)

"^DD",9999999.64,9999999.64,0,"PT",801.95,.01)

"^DD",9999999.64,9999999.64,0,"PT",811.52,.01)

"^DD",9999999.64,9999999.64,0,"PT",811.902,.01)

"^DD",9999999.64,9999999.64,0,"PT",811.911,.01)

"^DD",9999999.64,9999999.64,0,"PT",9000010.23,.01)

"^DD",9999999.64,9999999.64,0,"PT",9999999.64,.03)

"^DD",9999999.64,9999999.64,0,"PT",9999999.641101,.01)

"^DD",9999999.64,9999999.64,0,"VRPK")
PX
"^DD",9999999.64,9999999.64,.01,0)
FACTOR^RFX^^0;1^K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X I $D(X) D CKNA3^PXTTU1
"^DD",9999999.64,9999999.64,.01,1,0)
^.1
"^DD",9999999.64,9999999.64,.01,1,1,0)
9999999.64^B
"^DD",9999999.64,9999999.64,.01,1,1,1)
S ^AUTTHF("B",$E(X,1,40),DA)=""
"^DD",9999999.64,9999999.64,.01,1,1,2)
K ^AUTTHF("B",$E(X,1,40),DA)
"^DD",9999999.64,9999999.64,.01,3)
Enter Health Factor Name 3-40 characters
"^DD",9999999.64,9999999.64,.01,21,0)
^^1^1^2970130^^^^
"^DD",9999999.64,9999999.64,.01,21,1,0)
This is the name of the Health Factor (e.g., Current Smoker, Non-Tobacco User)
"^DD",9999999.64,9999999.64,.01,"DEL",.01,0)
I 0
"^DD",9999999.64,9999999.64,.01,"DT")
2970130
"^DD",9999999.64,9999999.64,.03,0)
CATEGORY^R*P9999999.64'^AUTTHF(^0;3^S DIC("S")="I $P(^(0),U,10)'=""F""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9999999.64,9999999.64,.03,1,0)
^.1
"^DD",9999999.64,9999999.64,.03,1,1,0)
9999999.64^AC
"^DD",9999999.64,9999999.64,.03,1,1,1)
S ^AUTTHF("AC",$E(X,1,30),DA)=""
"^DD",9999999.64,9999999.64,.03,1,1,2)
K ^AUTTHF("AC",$E(X,1,30),DA)
"^DD",9999999.64,9999999.64,.03,1,1,"DT")
2911011
"^DD",9999999.64,9999999.64,.03,3)
Select the category to which this factor belongs.
"^DD",9999999.64,9999999.64,.03,12)
Screening to prevent pointing to a non category type factor.
"^DD",9999999.64,9999999.64,.03,12.1)
S DIC("S")="I $P(^(0),U,10)'=""F"""
"^DD",9999999.64,9999999.64,.03,21,0)
^^5^5^2950809^^^^
"^DD",9999999.64,9999999.64,.03,21,1,0)
 This is the Health Factor that categorizes several factors into one group.
"^DD",9999999.64,9999999.64,.03,21,2,0)
For instance, Non smoker and Frequent Smoker would have the category of
"^DD",9999999.64,9999999.64,.03,21,3,0)
Tobacco.
"^DD",9999999.64,9999999.64,.03,21,4,0)
 
"^DD",9999999.64,9999999.64,.03,21,5,0)
Enter the name of the Health Factor Category.
"^DD",9999999.64,9999999.64,.03,"DT")
2911015
"^DD",9999999.64,9999999.64,.04,0)
SHORT NAME^F^^0;4^K:$L(X)>10!($L(X)<2) X
"^DD",9999999.64,9999999.64,.04,3)
Answer must be 2-10 characters in length.
"^DD",9999999.64,9999999.64,.04,21,0)
^^5^5^2950718^^^^
"^DD",9999999.64,9999999.64,.04,21,1,0)
(Optional)
"^DD",9999999.64,9999999.64,.04,21,2,0)
This is a 'short name' for this health factor. If defined, it will be
"^DD",9999999.64,9999999.64,.04,21,3,0)
used on the Health Factors Component of the Health Summary
"^DD",9999999.64,9999999.64,.04,21,4,0)
 
"^DD",9999999.64,9999999.64,.04,21,5,0)
Enter a 2-5 character short name for this health factor.
"^DD",9999999.64,9999999.64,.04,"DT")
2910701
"^DD",9999999.64,9999999.64,.05,0)
USE ONLY WITH SEX^S^F:FEMALE;M:MALE;^0;5^Q
"^DD",9999999.64,9999999.64,.05,21,0)
^^4^4^2940125^^^^
"^DD",9999999.64,9999999.64,.05,21,1,0)
(Optional)
"^DD",9999999.64,9999999.64,.05,21,2,0)
This is the sex that this health factor is used for.
"^DD",9999999.64,9999999.64,.05,21,3,0)
 
"^DD",9999999.64,9999999.64,.05,21,4,0)
Enter an "F" for female or an "M" for male.
"^DD",9999999.64,9999999.64,.05,"DT")
2910701
"^DD",9999999.64,9999999.64,.06,0)
LOWER AGE^NJ5,0^^0;6^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",9999999.64,9999999.64,.06,3)
Type a Number between 0 and 99999, 0 Decimal Digits
"^DD",9999999.64,9999999.64,.06,21,0)
^^4^4^2940125^^^
"^DD",9999999.64,9999999.64,.06,21,1,0)
(Optional)
"^DD",9999999.64,9999999.64,.06,21,2,0)
This is the lower age limit that might apply to this health factor.
"^DD",9999999.64,9999999.64,.06,21,3,0)
 
"^DD",9999999.64,9999999.64,.06,21,4,0)
Enter an age between 0 and 99999.
"^DD",9999999.64,9999999.64,.06,"DT")
2910701
"^DD",9999999.64,9999999.64,.07,0)
UPPER AGE^NJ5,0^^0;7^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",9999999.64,9999999.64,.07,3)
Type a Number between 0 and 99999, 0 Decimal Digits
"^DD",9999999.64,9999999.64,.07,21,0)
^^4^4^2940125^^^
"^DD",9999999.64,9999999.64,.07,21,1,0)
(Optional)
"^DD",9999999.64,9999999.64,.07,21,2,0)
This is the upper age limit that applies to this health factor. 
"^DD",9999999.64,9999999.64,.07,21,3,0)
 
"^DD",9999999.64,9999999.64,.07,21,4,0)
Enter a number between 0 and 99999.
"^DD",9999999.64,9999999.64,.07,"DT")
2910701
"^DD",9999999.64,9999999.64,.08,0)
DISPLAY ON HEALTH SUMMARY^S^Y:YES;N:NO;^0;8^Q
"^DD",9999999.64,9999999.64,.08,21,0)
^^4^4^2950718^^^
"^DD",9999999.64,9999999.64,.08,21,1,0)
(Optional)
"^DD",9999999.64,9999999.64,.08,21,2,0)
This allows the health factor to be displayed on Health Summaries.
"^DD",9999999.64,9999999.64,.08,21,3,0)
 
"^DD",9999999.64,9999999.64,.08,21,4,0)
Enter a yes to display or a no to not display.
"^DD",9999999.64,9999999.64,.08,"DT")
2910701
"^DD",9999999.64,9999999.64,.09,0)
SYNONYM^F^^0;9^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>30!($L(X)<2) X
"^DD",9999999.64,9999999.64,.09,1,0)
^.1
"^DD",9999999.64,9999999.64,.09,1,1,0)
9999999.64^D
"^DD",9999999.64,9999999.64,.09,1,1,1)
S ^AUTTHF("D",$E(X,1,30),DA)=""
"^DD",9999999.64,9999999.64,.09,1,1,2)
K ^AUTTHF("D",$E(X,1,30),DA)
"^DD",9999999.64,9999999.64,.09,1,1,"DT")
2910701
"^DD",9999999.64,9999999.64,.09,3)
Answer must be 2-30 characters in length.
"^DD",9999999.64,9999999.64,.09,21,0)
^^4^4^2940125^^
"^DD",9999999.64,9999999.64,.09,21,1,0)
(Optional)
"^DD",9999999.64,9999999.64,.09,21,2,0)
This this the synonym for this health factor.
"^DD",9999999.64,9999999.64,.09,21,3,0)
 
"^DD",9999999.64,9999999.64,.09,21,4,0)
Enter a 3 to 30 character synonym for this health factor.
"^DD",9999999.64,9999999.64,.09,"DT")
2910701
"^DD",9999999.64,9999999.64,.1,0)
ENTRY TYPE^RS^C:CATEGORY;F:FACTOR;^0;10^Q
"^DD",9999999.64,9999999.64,.1,1,0)
^.1
"^DD",9999999.64,9999999.64,.1,1,1,0)
9999999.64^AD
"^DD",9999999.64,9999999.64,.1,1,1,1)
S ^AUTTHF("AD",$E(X,1,30),DA)=""
"^DD",9999999.64,9999999.64,.1,1,1,2)
K ^AUTTHF("AD",$E(X,1,30),DA)
"^DD",9999999.64,9999999.64,.1,1,1,"DT")
2911015
"^DD",9999999.64,9999999.64,.1,3)
SMOKER or NON-SMOKER would be FACTORS. TOBACCO would be the Category that SMOKER and NON-SMOKER would belong to. Are you entering a FACTOR or a CATEGORY ?
"^DD",9999999.64,9999999.64,.1,21,0)
^^3^3^2950809^^^^
"^DD",9999999.64,9999999.64,.1,21,1,0)
This is the type of health factor, (e.g.,"F" for factor or "C" for category).
"^DD",9999999.64,9999999.64,.1,21,2,0)
 
"^DD",9999999.64,9999999.64,.1,21,3,0)
Enter an "F" for factor or a "C" for category.
"^DD",9999999.64,9999999.64,.1,"DT")
2911015
"^DD",9999999.64,9999999.64,.11,0)
INACTIVE FLAG^S^1:INACTIVE;^0;11^Q
"^DD",9999999.64,9999999.64,.11,3)
Enter a 1 to make the health factor inactive.
"^DD",9999999.64,9999999.64,.11,21,0)
^^8^8^2950825^
"^DD",9999999.64,9999999.64,.11,21,1,0)
This field is used to inactivate a health factor type. If this field
"^DD",9999999.64,9999999.64,.11,21,2,0)
contains a "1" then the health factor is inactive.  Inactive health
"^DD",9999999.64,9999999.64,.11,21,3,0)
factors cannot be selected in the manual data entry process.  Health
"^DD",9999999.64,9999999.64,.11,21,4,0)
factor entries should be made inactive when they are no longer used.  Do
"^DD",9999999.64,9999999.64,.11,21,5,0)
not delete the entry or change the meaning of the health factor entry.
"^DD",9999999.64,9999999.64,.11,21,6,0)
 
"^DD",9999999.64,9999999.64,.11,21,7,0)
To make an inactive health factor active, enter the "@" symbol to delete
"^DD",9999999.64,9999999.64,.11,21,8,0)
the "1" from the field.
"^DD",9999999.64,9999999.64,.11,23,0)
^^5^5^2950825^
"^DD",9999999.64,9999999.64,.11,23,1,0)
This field was added for use by PCE in the VA.
"^DD",9999999.64,9999999.64,.11,23,2,0)
 
"^DD",9999999.64,9999999.64,.11,23,3,0)
This inactive flag should be used, rather than deleting entries in
"^DD",9999999.64,9999999.64,.11,23,4,0)
the health factor file, since there may be other files pointing at the
"^DD",9999999.64,9999999.64,.11,23,5,0)
health factor entry.
"^DD",9999999.64,9999999.64,.11,"DT")
2950825
"^DD",9999999.64,9999999.64,1101,0)
NOT USED WITH^9999999.641101P^^11;0
"^DD",9999999.64,9999999.64,1101,21,0)
^^2^2^2940125^^
"^DD",9999999.64,9999999.64,1101,21,1,0)
Some health factors are not used with others. This is the group of health
"^DD",9999999.64,9999999.64,1101,21,2,0)
factors that this factor is not used with.
"^DD",9999999.64,9999999.641101,0)
NOT USED WITH SUB-FIELD^^.01^1
"^DD",9999999.64,9999999.641101,0,"DT")
2910701
"^DD",9999999.64,9999999.641101,0,"IX","B",9999999.641101,.01)

"^DD",9999999.64,9999999.641101,0,"NM","NOT USED WITH")

"^DD",9999999.64,9999999.641101,0,"UP")
9999999.64
"^DD",9999999.64,9999999.641101,.01,0)
NOT USED WITH^MP9999999.64'^AUTTHF(^0;1^Q
"^DD",9999999.64,9999999.641101,.01,1,0)
^.1
"^DD",9999999.64,9999999.641101,.01,1,1,0)
9999999.641101^B
"^DD",9999999.64,9999999.641101,.01,1,1,1)
S ^AUTTHF(DA(1),11,"B",$E(X,1,30),DA)=""
"^DD",9999999.64,9999999.641101,.01,1,1,2)
K ^AUTTHF(DA(1),11,"B",$E(X,1,30),DA)
"^DD",9999999.64,9999999.641101,.01,21,0)
^^3^3^2940120^
"^DD",9999999.64,9999999.641101,.01,21,1,0)
This is the health factor that the health factor is not used with.
"^DD",9999999.64,9999999.641101,.01,21,2,0)
 
"^DD",9999999.64,9999999.641101,.01,21,3,0)
Enter the name of a health factor that is laready in this file.
"^DD",9999999.64,9999999.641101,.01,"DT")
2910701
"^DIC",800,800,0)
CLINICAL REMINDER PARAMETERS^800
"^DIC",800,800,0,"GL")
^PXRM(800,
"^DIC",800,800,"%",0)
^1.005^^
"^DIC",800,800,"%D",0)
^^2^2^3000608^
"^DIC",800,800,"%D",1,0)
This file has one entry that contains parameters used by Clinical
"^DIC",800,800,"%D",2,0)
Reminders.
"^DIC",800,"B","CLINICAL REMINDER PARAMETERS",800)

"^DIC",801.41,801.41,0)
REMINDER DIALOG^801.41
"^DIC",801.41,801.41,0,"GL")
^PXRMD(801.41,
"^DIC",801.41,801.41,"%",0)
^1.005^^
"^DIC",801.41,801.41,"%D",0)
^^58^58^3000609^^^^
"^DIC",801.41,801.41,"%D",1,0)
This file is used to define all of the components that work together to
"^DIC",801.41,801.41,"%D",2,0)
define a reminder dialog. Reminder dialog definitions are used by the CPRS
"^DIC",801.41,801.41,"%D",3,0)
GUI for reminder resolution.
"^DIC",801.41,801.41,"%D",4,0)
 
"^DIC",801.41,801.41,"%D",5,0)
This file contains a combination of nationally distributed entries, local
"^DIC",801.41,801.41,"%D",6,0)
auto-generated entries, site and VISN exchanged entries and local manually
"^DIC",801.41,801.41,"%D",7,0)
created entries. Any local entries are assigned an internal entry number
"^DIC",801.41,801.41,"%D",8,0)
prefixed with your site number. Nationally distributed entries have their
"^DIC",801.41,801.41,"%D",9,0)
name prefixed with PXRM. Entries in this file may be auto-generated via
"^DIC",801.41,801.41,"%D",10,0)
the Dialog Management Menu option. Manually created dialog entries should
"^DIC",801.41,801.41,"%D",11,0)
use local namespacing conventions.
"^DIC",801.41,801.41,"%D",12,0)
 
"^DIC",801.41,801.41,"%D",13,0)
This file is similar to the option file where there are different types of
"^DIC",801.41,801.41,"%D",14,0)
entries (reminder dialog, dialog elements (sentences), prompts, and groups
"^DIC",801.41,801.41,"%D",15,0)
of elements, result elements and groups of result elements). Where an
"^DIC",801.41,801.41,"%D",16,0)
option has menu items, the dialog file has components that are
"^DIC",801.41,801.41,"%D",17,0)
entered with the sequence field as the .01 field. 
"^DIC",801.41,801.41,"%D",18,0)
 
"^DIC",801.41,801.41,"%D",19,0)
A prompt is defined for PCE prompts or as locally created comment
"^DIC",801.41,801.41,"%D",20,0)
check-boxes. The prompts will not have any components within them.
"^DIC",801.41,801.41,"%D",21,0)
PXRM prefixed prompts are distributed in this file with the Clinical
"^DIC",801.41,801.41,"%D",22,0)
Reminder package.
"^DIC",801.41,801.41,"%D",23,0)
 
"^DIC",801.41,801.41,"%D",24,0)
A dialog element is defined primarily to represent sentences to display in
"^DIC",801.41,801.41,"%D",25,0)
the CPRS window with a check box. When the user checks the sentence off,
"^DIC",801.41,801.41,"%D",26,0)
the FINDING ITEM in the dialog element and the ADDITIONAL FINDINGS will be
"^DIC",801.41,801.41,"%D",27,0)
added to the list of PCE updates, orders, and mental health tests. The
"^DIC",801.41,801.41,"%D",28,0)
updates won't occur on the CPRS GUI until the user clicks on the FINISH
"^DIC",801.41,801.41,"%D",29,0)
button. Dialog elements may have components added to it. Auto-generated
"^DIC",801.41,801.41,"%D",30,0)
components will be based on the additional prompts defined in the Finding
"^DIC",801.41,801.41,"%D",31,0)
Type Parameters. Once a dialog element is auto-generated, the sites can
"^DIC",801.41,801.41,"%D",32,0)
modify them.
"^DIC",801.41,801.41,"%D",33,0)
 
"^DIC",801.41,801.41,"%D",34,0)
Dialog elements may also be instructional text or a header. The FINDING
"^DIC",801.41,801.41,"%D",35,0)
ITEM and components would not be defined in dialog elements.
"^DIC",801.41,801.41,"%D",36,0)
 
"^DIC",801.41,801.41,"%D",37,0)
A dialog group is similar to menu options. They group dialog elements and
"^DIC",801.41,801.41,"%D",38,0)
dialog groups within its component multiple. The dialog group can be
"^DIC",801.41,801.41,"%D",39,0)
defined with a finding item and check-box. The components in the group
"^DIC",801.41,801.41,"%D",40,0)
can be hidden from the CPRS GUI window until the dialog group is checked
"^DIC",801.41,801.41,"%D",41,0)
off. 
"^DIC",801.41,801.41,"%D",42,0)
 
"^DIC",801.41,801.41,"%D",43,0)
A result element contains special logic that uses information entered
"^DIC",801.41,801.41,"%D",44,0)
during the resolution process to create a sentence to add to the progress
"^DIC",801.41,801.41,"%D",45,0)
note. The special logic contains a CONDITION that, when true, will use the
"^DIC",801.41,801.41,"%D",46,0)
ALTERNATE PROGRESS NOTE TEXT field to update the progress note. A separate
"^DIC",801.41,801.41,"%D",47,0)
result element is used for each separate sentence needed. The result
"^DIC",801.41,801.41,"%D",48,0)
element is only used with mental health test finding items. Default
"^DIC",801.41,801.41,"%D",49,0)
result elements are distributed for common mental health tests, prefixed
"^DIC",801.41,801.41,"%D",50,0)
with PXRM and the mental health test name. Sites may copy them and modify
"^DIC",801.41,801.41,"%D",51,0)
their local versions as needed.
"^DIC",801.41,801.41,"%D",52,0)
 
"^DIC",801.41,801.41,"%D",53,0)
A result group contains all of the result elements that need to be checked
"^DIC",801.41,801.41,"%D",54,0)
to create sentences for one mental health test finding. The dialog
"^DIC",801.41,801.41,"%D",55,0)
element for the test will have its RESULT GROUP/ELEMENT field defined with
"^DIC",801.41,801.41,"%D",56,0)
the result group. Default result groups for mental health tests are
"^DIC",801.41,801.41,"%D",57,0)
distributed with the Clinical Reminders package. Sites may copy them and
"^DIC",801.41,801.41,"%D",58,0)
modify their local versions as needed.
"^DIC",801.41,"B","REMINDER DIALOG",801.41)

"^DIC",801.42,801.42,0)
REMINDER GUI PROCESS^801.42
"^DIC",801.42,801.42,0,"GL")
^PXRMD(801.42,
"^DIC",801.42,801.42,"%",0)
^1.005^^
"^DIC",801.42,801.42,"%D",0)
^^3^3^2991012^
"^DIC",801.42,801.42,"%D",1,0)
This file summarizes GUI functionality that has been created for
"^DIC",801.42,801.42,"%D",2,0)
particular dialog processing on the GUI side.  The GUI functionality can
"^DIC",801.42,801.42,"%D",3,0)
be associated with an entry in the Reminder Dialog file.
"^DIC",801.42,"B","REMINDER GUI PROCESS",801.42)

"^DIC",801.43,801.43,0)
REMINDER FINDING ITEM PARAMETER^801.43
"^DIC",801.43,801.43,0,"GL")
^PXRMD(801.43,
"^DIC",801.43,801.43,"%",0)
^1.005^^
"^DIC",801.43,801.43,"%D",0)
^^12^12^3000609^
"^DIC",801.43,801.43,"%D",1,0)
This file is used to predefine a preferred dialog element or dialog group
"^DIC",801.43,801.43,"%D",2,0)
to represent a reminder finding item.  Auto generation of a reminder
"^DIC",801.43,801.43,"%D",3,0)
dialog from the reminder definition uses the dialog in this file in
"^DIC",801.43,801.43,"%D",4,0)
preference to using the Finding Type Parameter's prefix and suffix
"^DIC",801.43,801.43,"%D",5,0)
to create a sentence.
"^DIC",801.43,801.43,"%D",6,0)
 
"^DIC",801.43,801.43,"%D",7,0)
The finding items are restricted to finding types that can be used to
"^DIC",801.43,801.43,"%D",8,0)
resolve the reminder from the CPRS GUI.
"^DIC",801.43,801.43,"%D",9,0)
 
"^DIC",801.43,801.43,"%D",10,0)
This file is for local use only. It does not contain any nationally
"^DIC",801.43,801.43,"%D",11,0)
distributed entries. Local entries in this file are not exchanged with
"^DIC",801.43,801.43,"%D",12,0)
other sites via the reminder exchange tool.  
"^DIC",801.43,"B","REMINDER FINDING ITEM PARAMETER",801.43)

"^DIC",801.45,801.45,0)
REMINDER FINDING TYPE PARAMETER^801.45
"^DIC",801.45,801.45,0,"GL")
^PXRMD(801.45,
"^DIC",801.45,801.45,"%",0)
^1.005^^
"^DIC",801.45,801.45,"%D",0)
^^13^13^3000609^
"^DIC",801.45,801.45,"%D",1,0)
This file is used by the process that generates reminder dialogs for a
"^DIC",801.45,801.45,"%D",2,0)
reminder. During this process, for each reminder finding item in a
"^DIC",801.45,801.45,"%D",3,0)
reminder definition, one or more dialog elements are created depending on
"^DIC",801.45,801.45,"%D",4,0)
the Finding Type parameters in this file.  The file content is distributed
"^DIC",801.45,801.45,"%D",5,0)
with the package but may be edited by sites to reflect how the site uses
"^DIC",801.45,801.45,"%D",6,0)
PCE data.  The site can alter the pre-defined prefix and suffix text used
"^DIC",801.45,801.45,"%D",7,0)
to create sentences.  The site can also disable creation of sentences for
"^DIC",801.45,801.45,"%D",8,0)
specific types of resolution statuses (e.g., Disable creation of education
"^DIC",801.45,801.45,"%D",9,0)
refused for an education topic because the site prefers to use Health
"^DIC",801.45,801.45,"%D",10,0)
Factors to represent refusals).
"^DIC",801.45,801.45,"%D",11,0)
 
"^DIC",801.45,801.45,"%D",12,0)
The entries distributed in this file may not be deleted and new entries
"^DIC",801.45,801.45,"%D",13,0)
may not be added locally. 
"^DIC",801.45,"B","REMINDER FINDING TYPE PARAMETER",801.45)

"^DIC",801.9,801.9,0)
REMINDER RESOLUTION STATUS^801.9
"^DIC",801.9,801.9,0,"GL")
^PXRMD(801.9,
"^DIC",801.9,801.9,"%",0)
^1.005^^
"^DIC",801.9,801.9,"%D",0)
^^20^20^3000609^
"^DIC",801.9,801.9,"%D",1,0)
This file defines the resolution statuses that may be related to a
"^DIC",801.9,801.9,"%D",2,0)
finding.  National resolution statuses are distributed in this file, but
"^DIC",801.9,801.9,"%D",3,0)
sites may create local resolution statuses.  If local resolutions are
"^DIC",801.9,801.9,"%D",4,0)
defined, they must be mapped to a national resolution status.  The
"^DIC",801.9,801.9,"%D",5,0)
national resolution statuses are used by the process that creates dialog
"^DIC",801.9,801.9,"%D",6,0)
sentences for finding items.  
"^DIC",801.9,801.9,"%D",7,0)
 
"^DIC",801.9,801.9,"%D",8,0)
The distributed national resolution statuses may not be deleted. 
"^DIC",801.9,801.9,"%D",9,0)
 
"^DIC",801.9,801.9,"%D",10,0)
Most of the findings from files can be automatically analyzed and
"^DIC",801.9,801.9,"%D",11,0)
associated with a resolution status.  For example, Education topics
"^DIC",801.9,801.9,"%D",12,0)
entered for a current visit are "DONE AT ENCOUNTER", Education topics
"^DIC",801.9,801.9,"%D",13,0)
entered for a historical vist are "DONE ELSEWHERE", Education topics with
"^DIC",801.9,801.9,"%D",14,0)
a Level of Understanding of Refused are "PATIENT REFUSED" resolutions. The
"^DIC",801.9,801.9,"%D",15,0)
health factor is a file of findings that we cannot categorize without the
"^DIC",801.9,801.9,"%D",16,0)
sites telling us what the related resolution status should be.
"^DIC",801.9,801.9,"%D",17,0)
 
"^DIC",801.9,801.9,"%D",18,0)
The statuses will be used in the future for roll-up counts to reflect how
"^DIC",801.9,801.9,"%D",19,0)
reminders were resolved (done, historical, refused, contraindicated,
"^DIC",801.9,801.9,"%D",20,0)
ordered).
"^DIC",801.9,"B","REMINDER RESOLUTION STATUS",801.9)

"^DIC",801.95,801.95,0)
HEALTH FACTOR RESOLUTION^801.95
"^DIC",801.95,801.95,0,"GL")
^PXRMD(801.95,
"^DIC",801.95,801.95,"%",0)
^1.005^^
"^DIC",801.95,801.95,"%D",0)
^^8^8^3000609^
"^DIC",801.95,801.95,"%D",1,0)
This file defines the resolution statuses that should be related to a
"^DIC",801.95,801.95,"%D",2,0)
particular health factor. The resolution status can be derived for most
"^DIC",801.95,801.95,"%D",3,0)
patient findings (visit file helps determine done and historical).  In
"^DIC",801.95,801.95,"%D",4,0)
order to know the appropriate resolution statuses for a health factor,
"^DIC",801.95,801.95,"%D",5,0)
they must be defined in this file.
"^DIC",801.95,801.95,"%D",6,0)
 
"^DIC",801.95,801.95,"%D",7,0)
This file is for local use. No health factor resolution statuses are
"^DIC",801.95,801.95,"%D",8,0)
distributed in this file. 
"^DIC",801.95,"B","HEALTH FACTOR RESOLUTION",801.95)

"^DIC",810.1,810.1,0)
REMINDER REPORT TEMPLATE^810.1
"^DIC",810.1,810.1,0,"GL")
^PXRMPT(810.1,
"^DIC",810.1,810.1,"%",0)
^1.005^^
"^DIC",810.1,810.1,"%D",0)
^^13^13^3000207^
"^DIC",810.1,810.1,"%D",1,0)
This file is used by the reminder reports options only. For each type of
"^DIC",810.1,810.1,"%D",2,0)
report (e.g. Reminders Due) selection parameters used in a report may be
"^DIC",810.1,810.1,"%D",3,0)
saved as a template when the report is being run. When running reports the
"^DIC",810.1,810.1,"%D",4,0)
user may opt to retrieve parameters from an existing template as the basis
"^DIC",810.1,810.1,"%D",5,0)
of a new report. Templates may be modified, renamed, copied or deleted
"^DIC",810.1,810.1,"%D",6,0)
from the reminder report options.
"^DIC",810.1,810.1,"%D",7,0)
 
"^DIC",810.1,810.1,"%D",8,0)
The parameters for the reminder reports consist of a patient sample (e.g.
"^DIC",810.1,810.1,"%D",9,0)
PCMM team) from which a patient list is built and also a list of reminders
"^DIC",810.1,810.1,"%D",10,0)
to be evaluated for each selected patient.
"^DIC",810.1,810.1,"%D",11,0)
 
"^DIC",810.1,810.1,"%D",12,0)
The field names in the template file correspond to the local variable and
"^DIC",810.1,810.1,"%D",13,0)
array names used in the print routines.
"^DIC",810.1,"B","REMINDER REPORT TEMPLATE",810.1)

"^DIC",811.2,811.2,0)
REMINDER TAXONOMY^811.2I
"^DIC",811.2,811.2,0,"GL")
^PXD(811.2,
"^DIC",811.2,811.2,"%",0)
^1.005^^0
"^DIC",811.2,811.2,"%D",0)
^^8^8^3000609^^^^
"^DIC",811.2,811.2,"%D",1,0)
This file stores the Clinical Reminder taxonomies. A taxonomy is just a
"^DIC",811.2,811.2,"%D",2,0)
way to give a name to a set of codes. These codes can be ICD Diagnosis,
"^DIC",811.2,811.2,"%D",3,0)
ICD Operation/Procedure or CPT.
"^DIC",811.2,811.2,"%D",4,0)

"^DIC",811.2,811.2,"%D",5,0)
This file contains a combination of nationally distributed and local
"^DIC",811.2,811.2,"%D",6,0)
entries. Any local entries are assigned an internal entry number
"^DIC",811.2,811.2,"%D",7,0)
prefixed with your site number. Nationally distributed entries have
"^DIC",811.2,811.2,"%D",8,0)
their name prefixed with VA-. Local entry names cannot start with VA-.
"^DIC",811.2,"B","REMINDER TAXONOMY",811.2)

"^DIC",811.3,811.3,0)
EXPANDED TAXONOMIES^811.3
"^DIC",811.3,811.3,0,"GL")
^PXD(811.3,
"^DIC",811.3,811.3,"%",0)
^1.005^^
"^DIC",811.3,811.3,"%D",0)
^^7^7^3000321^^^^
"^DIC",811.3,811.3,"%D",1,0)
This file contains expanded taxonomies. It is used as a data cache so
"^DIC",811.3,811.3,"%D",2,0)
the expansion does not need to be continuously done. The expansion is
"^DIC",811.3,811.3,"%D",3,0)
rebuilt whenever a taxonomy is edited or one of the source files has
"^DIC",811.3,811.3,"%D",4,0)
changed since the expansion was last done. The source files are ICD0,
"^DIC",811.3,811.3,"%D",5,0)
ICD9, and ICPT.
"^DIC",811.3,811.3,"%D",6,0)
 
"^DIC",811.3,811.3,"%D",7,0)
Entries in this file should never be set by hand.
"^DIC",811.3,"B","EXPANDED TAXONOMIES",811.3)

"^DIC",811.4,811.4,0)
REMINDER COMPUTED FINDINGS^811.4
"^DIC",811.4,811.4,0,"GL")
^PXRMD(811.4,
"^DIC",811.4,811.4,"%",0)
^1.005^^
"^DIC",811.4,811.4,"%D",0)
^^24^24^3000609^^^^
"^DIC",811.4,811.4,"%D",1,0)
When none of the standard finding types will work a computed finding
"^DIC",811.4,811.4,"%D",2,0)
can be created. There are two steps in creating a computed finding.
"^DIC",811.4,811.4,"%D",3,0)
First a MUMPS routine must be written. Information about how to do this
"^DIC",811.4,811.4,"%D",4,0)
can be found in the Clinical Reminders Manager Manual. The second step
"^DIC",811.4,811.4,"%D",5,0)
is to make an entry in this file, which contains a list of reminder
"^DIC",811.4,811.4,"%D",6,0)
computed findings. There are four fields for each entry, they are:
"^DIC",811.4,811.4,"%D",7,0)
 
"^DIC",811.4,811.4,"%D",8,0)
NAME - this is the name of the computed finding. When adding a computed
"^DIC",811.4,811.4,"%D",9,0)
finding as finding to a reminder definition it is done using the name.
"^DIC",811.4,811.4,"%D",10,0)
For example you would type CF.VA-BMI to add the exported VA-BMI
"^DIC",811.4,811.4,"%D",11,0)
computed finding to your reminder definition.
"^DIC",811.4,811.4,"%D",12,0)
 
"^DIC",811.4,811.4,"%D",13,0)
ROUTINE - this is the name of the MUMPS routine.
"^DIC",811.4,811.4,"%D",14,0)
 
"^DIC",811.4,811.4,"%D",15,0)
ENTRY - this is the entry point in the MUMPS routine.
"^DIC",811.4,811.4,"%D",16,0)
 
"^DIC",811.4,811.4,"%D",17,0)
PRINT NAME - this will be displayed on the Clinical Maintenance
"^DIC",811.4,811.4,"%D",18,0)
component as the name of the computed finding. If it is blank then NAME
"^DIC",811.4,811.4,"%D",19,0)
will be used.
"^DIC",811.4,811.4,"%D",20,0)

"^DIC",811.4,811.4,"%D",21,0)
This file contains a combination of nationally distributed and local
"^DIC",811.4,811.4,"%D",22,0)
entries. Any local entries are assigned an internal entry number
"^DIC",811.4,811.4,"%D",23,0)
prefixed with your site number. Nationally distributed entries have
"^DIC",811.4,811.4,"%D",24,0)
their name prefixed with VA-. Local entry names cannot start with VA-.
"^DIC",811.4,"B","REMINDER COMPUTED FINDINGS",811.4)

"^DIC",811.5,811.5,0)
REMINDER TERM^811.5
"^DIC",811.5,811.5,0,"GL")
^PXRMD(811.5,
"^DIC",811.5,811.5,"%",0)
^1.005^^
"^DIC",811.5,811.5,"%D",0)
^^18^18^3000609^
"^DIC",811.5,811.5,"%D",1,0)
This file defines terms that may be used within reminder definitions.
"^DIC",811.5,811.5,"%D",2,0)
Reminder terms are useful for national reminders involving findings that
"^DIC",811.5,811.5,"%D",3,0)
are based on local file definitions (e.g., laboratory test, drug file,
"^DIC",811.5,811.5,"%D",4,0)
radiology). National reminder terms have limited editing capabilities
"^DIC",811.5,811.5,"%D",5,0)
which allow sites to map their local finding items to a term. Sites may
"^DIC",811.5,811.5,"%D",6,0)
create local reminder terms, providing an easy way to group a variety of
"^DIC",811.5,811.5,"%D",7,0)
findings and treat them the same way in a reminder.
"^DIC",811.5,811.5,"%D",8,0)
 
"^DIC",811.5,811.5,"%D",9,0)
When a reminder with terms is evaluated, the finding items mapped to the
"^DIC",811.5,811.5,"%D",10,0)
term are used to find the patient data, but the patient data is reported
"^DIC",811.5,811.5,"%D",11,0)
based on the term the data is mapped to. The most recent true finding will
"^DIC",811.5,811.5,"%D",12,0)
be used to represent the term.
"^DIC",811.5,811.5,"%D",13,0)
 
"^DIC",811.5,811.5,"%D",14,0)
This file contains a combination of national, local, and VISN level terms.
"^DIC",811.5,811.5,"%D",15,0)
Any local terms are assigned an internal entry number prefixed with your
"^DIC",811.5,811.5,"%D",16,0)
site number.  Nationally distributed entries will have a Term Type of
"^DIC",811.5,811.5,"%D",17,0)
"National". Any terms created at your site should have a Term Type of
"^DIC",811.5,811.5,"%D",18,0)
"Local".  Terms created for VISN use will have a Term Type of "VISN"
"^DIC",811.5,"B","REMINDER TERM",811.5)

"^DIC",811.6,811.6,0)
REMINDER TERM SPONSOR^811.6
"^DIC",811.6,811.6,0,"GL")
^PXRMD(811.6,
"^DIC",811.6,811.6,"%",0)
^1.005^^
"^DIC",811.6,811.6,"%D",0)
^^6^6^3000609^
"^DIC",811.6,811.6,"%D",1,0)
This file contains the names of groups or organizations that are sponsors
"^DIC",811.6,811.6,"%D",2,0)
of reminder terms and reminder definitions.  
"^DIC",811.6,811.6,"%D",3,0)
 
"^DIC",811.6,811.6,"%D",4,0)
Currently, this file only contains nationally distributed sponsors.
"^DIC",811.6,811.6,"%D",5,0)
Sponsors may be added to this file by the developers of the Clinical
"^DIC",811.6,811.6,"%D",6,0)
Reminders package. 
"^DIC",811.6,"B","REMINDER TERM SPONSOR",811.6)

"^DIC",811.7,811.7,0)
REMINDER CATEGORY^811.7
"^DIC",811.7,811.7,0,"GL")
^PXRMD(811.7,
"^DIC",811.7,811.7,"%",0)
^1.005^^
"^DIC",811.7,811.7,"%D",0)
^^7^7^3000531^
"^DIC",811.7,811.7,"%D",1,0)
This file contains reminder categories. Reminder categories are created at
"^DIC",811.7,811.7,"%D",2,0)
each site and are not released with the reminder package.
"^DIC",811.7,811.7,"%D",3,0)
 
"^DIC",811.7,811.7,"%D",4,0)
A reminder category is a list of reminders (or other reminder categories)
"^DIC",811.7,811.7,"%D",5,0)
and is used to group reminders for display in the CPRS GUI. Reminder
"^DIC",811.7,811.7,"%D",6,0)
categories are allocated to individual users, locations, service or system
"^DIC",811.7,811.7,"%D",7,0)
using the option PXRM CPRS LOOKUP CATEGORIES.
"^DIC",811.7,"B","REMINDER CATEGORY",811.7)

"^DIC",811.9,811.9,0)
REMINDER DEFINITION^811.9
"^DIC",811.9,811.9,0,"GL")
^PXD(811.9,
"^DIC",811.9,811.9,"%",0)
^1.005^1^1
"^DIC",811.9,811.9,"%",1,0)
GMTS
"^DIC",811.9,811.9,"%","B","GMTS",1)

"^DIC",811.9,811.9,"%D",0)
^^9^9^3000609^^^^
"^DIC",811.9,811.9,"%D",1,0)
This file contains Clinical Reminder definitions. For a detailed
"^DIC",811.9,811.9,"%D",2,0)
description of the contents of this file see the Clinical Reminders
"^DIC",811.9,811.9,"%D",3,0)
Manager Manual. Additional information may be found at the Clinical
"^DIC",811.9,811.9,"%D",4,0)
Reminders web site: http//vista.med.va.gov/reminders
"^DIC",811.9,811.9,"%D",5,0)

"^DIC",811.9,811.9,"%D",6,0)
This file contains a combination of nationally distributed and local
"^DIC",811.9,811.9,"%D",7,0)
entries. Any local entries are assigned an internal entry number
"^DIC",811.9,811.9,"%D",8,0)
prefixed with your site number. Nationally distributed entries have
"^DIC",811.9,811.9,"%D",9,0)
their name prefixed with VA-. Local entry names cannot start with VA-.
"^DIC",811.9,"B","REMINDER DEFINITION",811.9)

"^DIC",8989.51,8989.51,0)
PARAMETER DEFINITION^8989.51
"^DIC",8989.51,8989.51,0,"GL")
^XTV(8989.51,
"^DIC",8989.51,8989.51,"%D",0)
^^3^3^2980920^
"^DIC",8989.51,8989.51,"%D",1,0)
This file contains the characteristics of parameters.  Entries in this
"^DIC",8989.51,8989.51,"%D",2,0)
file must be namespaced and they are exported by the package which owns
"^DIC",8989.51,8989.51,"%D",3,0)
them.
"^DIC",8989.51,"B","PARAMETER DEFINITION",8989.51)

"^DIC",9999999.64,9999999.64,0)
HEALTH FACTORS^9999999.64I
"^DIC",9999999.64,9999999.64,0,"GL")
^AUTTHF(
"^DIC",9999999.64,9999999.64,"%",0)
^1.005^1^1
"^DIC",9999999.64,9999999.64,"%",1,0)
GMTS
"^DIC",9999999.64,9999999.64,"%","B","GMTS",1)

"^DIC",9999999.64,9999999.64,"%D",0)
^^4^4^2990817^^^^
"^DIC",9999999.64,9999999.64,"%D",1,0)
This file contains a descriptive name of health factors, and their health
"^DIC",9999999.64,9999999.64,"%D",2,0)
factor category.
"^DIC",9999999.64,9999999.64,"%D",3,0)
 
"^DIC",9999999.64,9999999.64,"%D",4,0)
Changes to this data dictionary should be coordinated thru the IHS DBA.
"^DIC",9999999.64,"B","HEALTH FACTORS",9999999.64)

**END**
**END**
