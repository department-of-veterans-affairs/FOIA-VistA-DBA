Released XU*8*382 SEQ #310
Extracted from mail message
**KIDS**:XU*8.0*382^

**INSTALL NAME**
XU*8.0*382
"BLD",2259,0)
XU*8.0*382^KERNEL^0^3050623^y
"BLD",2259,4,0)
^9.64PA^4.001^1
"BLD",2259,4,4.001,0)
4.001
"BLD",2259,4,4.001,222)
y^n^f^^y^^y^o^n
"BLD",2259,4,"B",4.001,4.001)

"BLD",2259,"ABPKG")
n
"BLD",2259,"INID")
^
"BLD",2259,"INIT")
POST^XUMF382
"BLD",2259,"KRN",0)
^9.67PA^8989.52^19
"BLD",2259,"KRN",.4,0)
.4
"BLD",2259,"KRN",.401,0)
.401
"BLD",2259,"KRN",.402,0)
.402
"BLD",2259,"KRN",.403,0)
.403
"BLD",2259,"KRN",.5,0)
.5
"BLD",2259,"KRN",.84,0)
.84
"BLD",2259,"KRN",3.6,0)
3.6
"BLD",2259,"KRN",3.8,0)
3.8
"BLD",2259,"KRN",9.2,0)
9.2
"BLD",2259,"KRN",9.8,0)
9.8
"BLD",2259,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",2259,"KRN",9.8,"NM",1,0)
XUMFX^^0^36871545
"BLD",2259,"KRN",9.8,"NM",2,0)
XUMFXI^^0^71443286
"BLD",2259,"KRN",9.8,"NM",3,0)
XUMFXH^^0^85732279
"BLD",2259,"KRN",9.8,"NM","B","XUMFX",1)

"BLD",2259,"KRN",9.8,"NM","B","XUMFXH",3)

"BLD",2259,"KRN",9.8,"NM","B","XUMFXI",2)

"BLD",2259,"KRN",19,0)
19
"BLD",2259,"KRN",19.1,0)
19.1
"BLD",2259,"KRN",101,0)
101
"BLD",2259,"KRN",409.61,0)
409.61
"BLD",2259,"KRN",771,0)
771
"BLD",2259,"KRN",870,0)
870
"BLD",2259,"KRN",8989.51,0)
8989.51
"BLD",2259,"KRN",8989.52,0)
8989.52
"BLD",2259,"KRN",8994,0)
8994
"BLD",2259,"KRN","B",.4,.4)

"BLD",2259,"KRN","B",.401,.401)

"BLD",2259,"KRN","B",.402,.402)

"BLD",2259,"KRN","B",.403,.403)

"BLD",2259,"KRN","B",.5,.5)

"BLD",2259,"KRN","B",.84,.84)

"BLD",2259,"KRN","B",3.6,3.6)

"BLD",2259,"KRN","B",3.8,3.8)

"BLD",2259,"KRN","B",9.2,9.2)

"BLD",2259,"KRN","B",9.8,9.8)

"BLD",2259,"KRN","B",19,19)

"BLD",2259,"KRN","B",19.1,19.1)

"BLD",2259,"KRN","B",101,101)

"BLD",2259,"KRN","B",409.61,409.61)

"BLD",2259,"KRN","B",771,771)

"BLD",2259,"KRN","B",870,870)

"BLD",2259,"KRN","B",8989.51,8989.51)

"BLD",2259,"KRN","B",8989.52,8989.52)

"BLD",2259,"KRN","B",8994,8994)

"BLD",2259,"QUES",0)
^9.62^^
"BLD",2259,"REQB",0)
^9.611^^
"DATA",4.001,4.001,0)
4.001^ZZZ^ZMF^NULL^NULL^158
"DATA",4.001,4.001,1,0)
^4.011^20^20
"DATA",4.001,4.001,1,1,0)
masterFile^.01^4^^^^^^
"DATA",4.001,4.001,1,2,0)
segmentName^.02^1^^^^^^
"DATA",4.001,4.001,1,3,0)
mfiCode^.03^1^^^^^^
"DATA",4.001,4.001,1,4,0)
preUpdateRoutine^.04^1^^^^^^
"DATA",4.001,4.001,1,5,0)
postUpdateRoutine^.05^1^^^^^^
"DATA",4.001,4.001,1,6,0)
mfeIdField^4.1^4^^^^^^
"DATA",4.001,4.001,1,7,0)
mfeTextField^4.2^4^^^^^^
"DATA",4.001,4.001,1,8,0)
mfeCodSys^4.3^1^^^^^^
"DATA",4.001,4.001,1,9,0)
mfeAltIdField^4.4^4^^^^^^
"DATA",4.001,4.001,1,10,0)
mfeAltTextField^4.5^4^^^^^^
"DATA",4.001,4.001,1,11,0)
mfeAltCodSys^4.6^1^^^^^^
"DATA",4.001,4.001,1,12,0)
mfePkvType^4.7^1^^^^^^
"DATA",4.001,4.001,1,13,0)
mfePkvXref^4.8^1^^^^^^
"DATA",4.001,4.001,1,14,0)
assigningAuthority^4.9^1^^^^^^
"DATA",4.001,4.001,1,15,0)
mfeIdType^4.11^1^^^^^^
"DATA",4.001,4.001,1,16,0)
mfeTextType^4.12^1^^^^^^
"DATA",4.001,4.001,1,17,0)
mfeAltIdType^4.14^1^^^^^^
"DATA",4.001,4.001,1,18,0)
mfeAltTextType^4.15^1^^^^^^
"DATA",4.001,4.001,1,19,0)
mfePreUpdateRoutine^4.16^1^^^^^^
"DATA",4.001,4.001,1,20,0)
mfePostUpdateRoutine^4.17^1^^^^^^
"DATA",4.001,4.001,"MFE")
.01^.02^B^.01^.02^VA^16^B^ISS^^1^1^^1^1^NULL^MFP
"DATA",4.001,120.51,0)
120.51^RDT^GMRV Vital Type^PRE^POST^191
"DATA",4.001,120.51,1,0)
^4.011^9^8
"DATA",4.001,120.51,1,2,0)
name^.01^1^^^^^^50^^
"DATA",4.001,120.51,1,3,0)
abbreviation^1^1^^^^^^5^^
"DATA",4.001,120.51,1,4,0)
rate^3^4^^^^^^1^^
"DATA",4.001,120.51,1,5,0)
rateInputTransform^4^1^^^^^^99^^
"DATA",4.001,120.51,1,6,0)
rateHelp^5^1^^^^^^30^^
"DATA",4.001,120.51,1,7,0)
pceAbbreviation^7^1^^^^^^10^^
"DATA",4.001,120.51,1,8,0)
effectiveDate^.01^5^120.5199^^effectiveDate^^^8^^^^^L
"DATA",4.001,120.51,1,9,0)
status^.02^4^120.5199^^effectiveDate^^^1^^
"DATA",4.001,120.51,2)
D MFSUP^HDISVF09(120.51,$G(ERROR)),EN^GMVUID($G(ERROR))
"DATA",4.001,120.51,"MFE")
99.99^.01^ERT^.01^.01^VA^16^B^VA^^4^1^^1^1^NULL^NULL
"DATA",4.001,120.52,0)
120.52^RDT^GMRV Vital Qualifier^PRE^POST^191
"DATA",4.001,120.52,1,0)
^4.011^7^6
"DATA",4.001,120.52,1,2,0)
qualifier^.01^1^^^^^^50^^
"DATA",4.001,120.52,1,3,0)
synonym^.02^1^^^^^^3^^
"DATA",4.001,120.52,1,4,0)
vitalType^.01^1^120.521^^vitalType^^^50^^^1^VUID
"DATA",4.001,120.52,1,5,0)
category^.02^1^120.521^^vitalType^^^40^^^^VUID
"DATA",4.001,120.52,1,6,0)
effectiveDate^.01^5^120.5299^^effectiveDate^^^8^^^^^L
"DATA",4.001,120.52,1,7,0)
status^.02^4^120.5299^^effectiveDate^^^1^^
"DATA",4.001,120.52,2)
D MFSUP^HDISVF09(120.52,$G(ERROR)),EN^GMVUID($G(ERROR))
"DATA",4.001,120.52,"MFE")
99.99^.01^ERT^.01^.01^VA^16^B^VA^^4^1^^1^1^NULL^NULL
"DATA",4.001,120.53,0)
120.53^RDT^GMRV Vital Category^PRE^POST
"DATA",4.001,120.53,1,0)
^4.011^9^8
"DATA",4.001,120.53,1,2,0)
category^.01^1^^^^^^40^^
"DATA",4.001,120.53,1,3,0)
vitalType^.01^1^120.531^^vitalType^^^50^^^^VUID
"DATA",4.001,120.53,1,4,0)
maximumEntries^.03^4^120.531^^vitalType^^^2^^
"DATA",4.001,120.53,1,5,0)
printOrder^.05^4^120.531^^vitalType^^^1^^
"DATA",4.001,120.53,1,6,0)
editOrder^.06^4^120.531^^vitalType^^^1^^
"DATA",4.001,120.53,1,7,0)
defaultQualifier^.07^1^120.531^^vitalType^^^50^^^^VUID
"DATA",4.001,120.53,1,8,0)
effectiveDate^.01^5^120.5399^^effectiveDate^^^8^^^^^L
"DATA",4.001,120.53,1,9,0)
status^.02^4^120.5399^^effectiveDate^^^1^^
"DATA",4.001,120.53,2)
D MFSUP^HDISVF09(120.53,$G(ERROR)),EN^GMVUID($G(ERROR))
"DATA",4.001,120.53,"MFE")
99.99^vuid^ERT^.01^.01^VA^16^B^VA^^4^1^^1^1^NULL^NULL
"DATA",4.001,120.82,0)
120.82^RDT^GMR Allergies^PRE^POST
"DATA",4.001,120.82,1,0)
^4.011^9^8
"DATA",4.001,120.82,1,2,0)
name^.01^1^^^^^^30^^
"DATA",4.001,120.82,1,3,0)
allergyType^1^1^^^^^^20^^
"DATA",4.001,120.82,1,4,0)
synonym^.01^1^120.823^^synonym^^^30^^^1
"DATA",4.001,120.82,1,5,0)
drugIngredients^.01^1^120.824^^drugIngredients^^^64^^^1^VUID
"DATA",4.001,120.82,1,6,0)
vaDrugClasses^.01^1^120.8205^^vaDrugClasses^^^5^^^1^VUID
"DATA",4.001,120.82,1,7,0)
effectiveDate^.01^5^120.8299^^effectiveDate^^^8^^^
"DATA",4.001,120.82,1,8,0)
status^.02^4^120.8299^^effectiveDate^^^1^^
"DATA",4.001,120.82,1,9,0)
nationalAllergy^2^1^^^^^^1
"DATA",4.001,120.82,2)
D MFSUP^HDISVF09(120.82,$G(ERROR))
"DATA",4.001,120.82,"MFE")
99.99^vuid^ERT^.01^.01^VA^16^B^VA^^4^1^^1^1^NULL^NULL
"DATA",4.001,120.83,0)
120.83^RDT^Sign/Symptoms^PRE^POST
"DATA",4.001,120.83,1,0)
^4.011^8^5
"DATA",4.001,120.83,1,2,0)
name^.01^1^^^^^^30^^
"DATA",4.001,120.83,1,3,0)
synonym^.01^1^120.832^^synonym^^^30^^^1
"DATA",4.001,120.83,1,6,0)
nationalSignSymptom^1^1^^^^^^1^^
"DATA",4.001,120.83,1,7,0)
effectiveDate^.01^5^120.8399^^effectiveDate^^^8^^
"DATA",4.001,120.83,1,8,0)
status^.02^4^120.8399^^effectiveDate^^^1^^
"DATA",4.001,120.83,2)
D MFSUP^HDISVF09(120.83,$G(ERROR)),TOP10^GMRAUTL2
"DATA",4.001,120.83,"MFE")
99.99^vuid^ERT^.01^.01^VA^16^B^VA^^4^1^^1^1^NULL^NULL
"FIA",4.001)
MASTER FILE PARAMETERS
"FIA",4.001,0)
^DIC(4.001,
"FIA",4.001,0,0)
4.001P
"FIA",4.001,0,1)
y^n^f^^y^^y^o^n
"FIA",4.001,0,10)

"FIA",4.001,0,11)

"FIA",4.001,0,"RLRO")

"FIA",4.001,0,"VR")
8.0^XU
"FIA",4.001,4.001)
0
"FIA",4.001,4.011)
0
"FRV1",4.001,"120.51,""MFE""",7)
CE
"FRV1",4.001,"120.51,""MFE""",7,"F")
;HL(771.4,
"FRV1",4.001,"120.51,""MFE""",11)
NM
"FRV1",4.001,"120.51,""MFE""",11,"F")
;HL(771.4,
"FRV1",4.001,"120.51,""MFE""",12)
ST
"FRV1",4.001,"120.51,""MFE""",12,"F")
;HL(771.4,
"FRV1",4.001,"120.51,""MFE""",14)
ST
"FRV1",4.001,"120.51,""MFE""",14,"F")
;HL(771.4,
"FRV1",4.001,"120.51,""MFE""",15)
ST
"FRV1",4.001,"120.51,""MFE""",15,"F")
;HL(771.4,
"FRV1",4.001,"120.51,0",6)
XUMF SERVER
"FRV1",4.001,"120.51,0",6,"F")
;XMB(3.8,
"FRV1",4.001,"120.51,1,2,0",3)
ST
"FRV1",4.001,"120.51,1,2,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.51,1,3,0",3)
ST
"FRV1",4.001,"120.51,1,3,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.51,1,4,0",3)
NM
"FRV1",4.001,"120.51,1,4,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.51,1,5,0",3)
ST
"FRV1",4.001,"120.51,1,5,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.51,1,6,0",3)
ST
"FRV1",4.001,"120.51,1,6,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.51,1,7,0",3)
ST
"FRV1",4.001,"120.51,1,7,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.51,1,8,0",3)
DT
"FRV1",4.001,"120.51,1,8,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.51,1,9,0",3)
NM
"FRV1",4.001,"120.51,1,9,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.52,""MFE""",7)
CE
"FRV1",4.001,"120.52,""MFE""",7,"F")
;HL(771.4,
"FRV1",4.001,"120.52,""MFE""",11)
NM
"FRV1",4.001,"120.52,""MFE""",11,"F")
;HL(771.4,
"FRV1",4.001,"120.52,""MFE""",12)
ST
"FRV1",4.001,"120.52,""MFE""",12,"F")
;HL(771.4,
"FRV1",4.001,"120.52,""MFE""",14)
ST
"FRV1",4.001,"120.52,""MFE""",14,"F")
;HL(771.4,
"FRV1",4.001,"120.52,""MFE""",15)
ST
"FRV1",4.001,"120.52,""MFE""",15,"F")
;HL(771.4,
"FRV1",4.001,"120.52,0",6)
XUMF SERVER
"FRV1",4.001,"120.52,0",6,"F")
;XMB(3.8,
"FRV1",4.001,"120.52,1,2,0",3)
ST
"FRV1",4.001,"120.52,1,2,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.52,1,3,0",3)
ST
"FRV1",4.001,"120.52,1,3,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.52,1,4,0",3)
ST
"FRV1",4.001,"120.52,1,4,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.52,1,5,0",3)
ST
"FRV1",4.001,"120.52,1,5,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.52,1,6,0",3)
DT
"FRV1",4.001,"120.52,1,6,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.52,1,7,0",3)
NM
"FRV1",4.001,"120.52,1,7,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.53,""MFE""",7)
CE
"FRV1",4.001,"120.53,""MFE""",7,"F")
;HL(771.4,
"FRV1",4.001,"120.53,""MFE""",11)
NM
"FRV1",4.001,"120.53,""MFE""",11,"F")
;HL(771.4,
"FRV1",4.001,"120.53,""MFE""",12)
ST
"FRV1",4.001,"120.53,""MFE""",12,"F")
;HL(771.4,
"FRV1",4.001,"120.53,""MFE""",14)
ST
"FRV1",4.001,"120.53,""MFE""",14,"F")
;HL(771.4,
"FRV1",4.001,"120.53,""MFE""",15)
ST
"FRV1",4.001,"120.53,""MFE""",15,"F")
;HL(771.4,
"FRV1",4.001,"120.53,1,2,0",3)
ST
"FRV1",4.001,"120.53,1,2,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.53,1,3,0",3)
ST
"FRV1",4.001,"120.53,1,3,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.53,1,4,0",3)
NM
"FRV1",4.001,"120.53,1,4,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.53,1,5,0",3)
NM
"FRV1",4.001,"120.53,1,5,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.53,1,6,0",3)
NM
"FRV1",4.001,"120.53,1,6,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.53,1,7,0",3)
ST
"FRV1",4.001,"120.53,1,7,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.53,1,8,0",3)
DT
"FRV1",4.001,"120.53,1,8,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.53,1,9,0",3)
NM
"FRV1",4.001,"120.53,1,9,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.82,""MFE""",7)
CE
"FRV1",4.001,"120.82,""MFE""",7,"F")
;HL(771.4,
"FRV1",4.001,"120.82,""MFE""",11)
NM
"FRV1",4.001,"120.82,""MFE""",11,"F")
;HL(771.4,
"FRV1",4.001,"120.82,""MFE""",12)
ST
"FRV1",4.001,"120.82,""MFE""",12,"F")
;HL(771.4,
"FRV1",4.001,"120.82,""MFE""",14)
ST
"FRV1",4.001,"120.82,""MFE""",14,"F")
;HL(771.4,
"FRV1",4.001,"120.82,""MFE""",15)
ST
"FRV1",4.001,"120.82,""MFE""",15,"F")
;HL(771.4,
"FRV1",4.001,"120.82,1,2,0",3)
ST
"FRV1",4.001,"120.82,1,2,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.82,1,3,0",3)
ST
"FRV1",4.001,"120.82,1,3,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.82,1,4,0",3)
ST
"FRV1",4.001,"120.82,1,4,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.82,1,5,0",3)
ST
"FRV1",4.001,"120.82,1,5,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.82,1,6,0",3)
ST
"FRV1",4.001,"120.82,1,6,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.82,1,7,0",3)
DT
"FRV1",4.001,"120.82,1,7,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.82,1,8,0",3)
NM
"FRV1",4.001,"120.82,1,8,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.82,1,9,0",3)
ST
"FRV1",4.001,"120.82,1,9,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.83,""MFE""",7)
CE
"FRV1",4.001,"120.83,""MFE""",7,"F")
;HL(771.4,
"FRV1",4.001,"120.83,""MFE""",11)
NM
"FRV1",4.001,"120.83,""MFE""",11,"F")
;HL(771.4,
"FRV1",4.001,"120.83,""MFE""",12)
ST
"FRV1",4.001,"120.83,""MFE""",12,"F")
;HL(771.4,
"FRV1",4.001,"120.83,""MFE""",14)
ST
"FRV1",4.001,"120.83,""MFE""",14,"F")
;HL(771.4,
"FRV1",4.001,"120.83,""MFE""",15)
ST
"FRV1",4.001,"120.83,""MFE""",15,"F")
;HL(771.4,
"FRV1",4.001,"120.83,1,2,0",3)
ST
"FRV1",4.001,"120.83,1,2,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.83,1,3,0",3)
ST
"FRV1",4.001,"120.83,1,3,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.83,1,6,0",3)
ST
"FRV1",4.001,"120.83,1,6,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.83,1,7,0",3)
DT
"FRV1",4.001,"120.83,1,7,0",3,"F")
;HL(771.4,
"FRV1",4.001,"120.83,1,8,0",3)
NM
"FRV1",4.001,"120.83,1,8,0",3,"F")
;HL(771.4,
"FRV1",4.001,"4.001,""MFE""",7)
CE
"FRV1",4.001,"4.001,""MFE""",7,"F")
;HL(771.4,
"FRV1",4.001,"4.001,""MFE""",11)
ST
"FRV1",4.001,"4.001,""MFE""",11,"F")
;HL(771.4,
"FRV1",4.001,"4.001,""MFE""",12)
ST
"FRV1",4.001,"4.001,""MFE""",12,"F")
;HL(771.4,
"FRV1",4.001,"4.001,""MFE""",14)
ST
"FRV1",4.001,"4.001,""MFE""",14,"F")
;HL(771.4,
"FRV1",4.001,"4.001,""MFE""",15)
ST
"FRV1",4.001,"4.001,""MFE""",15,"F")
;HL(771.4,
"FRV1",4.001,"4.001,0",6)
MPIF CMOR REQUEST
"FRV1",4.001,"4.001,0",6,"F")
;XMB(3.8,
"FRV1",4.001,"4.001,1,1,0",3)
NM
"FRV1",4.001,"4.001,1,1,0",3,"F")
;HL(771.4,
"FRV1",4.001,"4.001,1,10,0",3)
NM
"FRV1",4.001,"4.001,1,10,0",3,"F")
;HL(771.4,
"FRV1",4.001,"4.001,1,11,0",3)
ST
"FRV1",4.001,"4.001,1,11,0",3,"F")
;HL(771.4,
"FRV1",4.001,"4.001,1,12,0",3)
ST
"FRV1",4.001,"4.001,1,12,0",3,"F")
;HL(771.4,
"FRV1",4.001,"4.001,1,13,0",3)
ST
"FRV1",4.001,"4.001,1,13,0",3,"F")
;HL(771.4,
"FRV1",4.001,"4.001,1,14,0",3)
ST
"FRV1",4.001,"4.001,1,14,0",3,"F")
;HL(771.4,
"FRV1",4.001,"4.001,1,15,0",3)
ST
"FRV1",4.001,"4.001,1,15,0",3,"F")
;HL(771.4,
"FRV1",4.001,"4.001,1,16,0",3)
ST
"FRV1",4.001,"4.001,1,16,0",3,"F")
;HL(771.4,
"FRV1",4.001,"4.001,1,17,0",3)
ST
"FRV1",4.001,"4.001,1,17,0",3,"F")
;HL(771.4,
"FRV1",4.001,"4.001,1,18,0",3)
ST
"FRV1",4.001,"4.001,1,18,0",3,"F")
;HL(771.4,
"FRV1",4.001,"4.001,1,19,0",3)
ST
"FRV1",4.001,"4.001,1,19,0",3,"F")
;HL(771.4,
"FRV1",4.001,"4.001,1,2,0",3)
ST
"FRV1",4.001,"4.001,1,2,0",3,"F")
;HL(771.4,
"FRV1",4.001,"4.001,1,20,0",3)
ST
"FRV1",4.001,"4.001,1,20,0",3,"F")
;HL(771.4,
"FRV1",4.001,"4.001,1,3,0",3)
ST
"FRV1",4.001,"4.001,1,3,0",3,"F")
;HL(771.4,
"FRV1",4.001,"4.001,1,4,0",3)
ST
"FRV1",4.001,"4.001,1,4,0",3,"F")
;HL(771.4,
"FRV1",4.001,"4.001,1,5,0",3)
ST
"FRV1",4.001,"4.001,1,5,0",3,"F")
;HL(771.4,
"FRV1",4.001,"4.001,1,6,0",3)
NM
"FRV1",4.001,"4.001,1,6,0",3,"F")
;HL(771.4,
"FRV1",4.001,"4.001,1,7,0",3)
NM
"FRV1",4.001,"4.001,1,7,0",3,"F")
;HL(771.4,
"FRV1",4.001,"4.001,1,8,0",3)
ST
"FRV1",4.001,"4.001,1,8,0",3,"F")
;HL(771.4,
"FRV1",4.001,"4.001,1,9,0",3)
NM
"FRV1",4.001,"4.001,1,9,0",3,"F")
;HL(771.4,
"INIT")
POST^XUMF382
"MBREQ")
0
"PGL",4.001,0,6,.06)
MAIL GROUP^P3.8X^XMB(3.8,^0;6^K:'$$F^XUMF(+$G(XUMF)) X
"PGL",4.001,"""MFE""",7,4.7)
MFE PKV TYPE^RP771.4'X^HL(771.4,^MFE;7^K:'$$F^XUMF(+$G(XUMF)) X
"PGL",4.001,"""MFE""",11,4.11)
MFE ID TYPE^RP771.4'X^HL(771.4,^MFE;11^K:'$$F^XUMF(+$G(XUMF)) X
"PGL",4.001,"""MFE""",12,4.12)
MFE TEXT TYPE^RP771.4'X^HL(771.4,^MFE;12^K:'$$F^XUMF(+$G(XUMF)) X
"PGL",4.001,"""MFE""",14,4.14)
MFE ALT ID TYPE^RP771.4'X^HL(771.4,^MFE;14^K:'$$F^XUMF(+$G(XUMF)) X
"PGL",4.001,"""MFE""",15,4.15)
MFE ALT TEXT TYPE^RP771.4'X^HL(771.4,^MFE;15^K:'$$F^XUMF(+$G(XUMF)) X
"PGL",4.011,0,3,.03)
HL7 DATA TYPE^RP771.4'X^HL(771.4,^0;3^;K:'$$F^XUMF(+$G(XUMF)) X
"PKG",113,-1)
1^1
"PKG",113,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^XUDOCV7 NEW FEATURES
"PKG",113,20,0)
^9.402P^^
"PKG",113,22,0)
^9.49I^1^1
"PKG",113,22,1,0)
8.0^2950703^2960322^648
"PKG",113,22,1,"PAH",1,0)
382^3050623
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","XUMF382")
0^^B5055960
"RTN","XUMF382",1,0)
XUMF382 ;ISS/RAM - post-install routine ;04/15/02
"RTN","XUMF382",2,0)
 ;;8.0;KERNEL;**382**;Jul 10, 1995
"RTN","XUMF382",3,0)
 ;
"RTN","XUMF382",4,0)
POST ; -- post init
"RTN","XUMF382",5,0)
 ;
"RTN","XUMF382",6,0)
 N X
"RTN","XUMF382",7,0)
 S X=$$ATTREM()
"RTN","XUMF382",8,0)
 ;
"RTN","XUMF382",9,0)
 Q
"RTN","XUMF382",10,0)
 ;
"RTN","XUMF382",11,0)
ATTREM() ;Attach Remote Members to XUMF ERROR Mail Group
"RTN","XUMF382",12,0)
 N XUMFERRF,XUMFFDA,XUMFGIEN,XUMFGNM,XUMFLNE,XUMFMSG,XUMFRNM,XUMFTXT
"RTN","XUMF382",13,0)
 K XUMMSG
"RTN","XUMF382",14,0)
 D BMES^XPDUTL("Attaching Remote Members to XUMF Mail Groups")
"RTN","XUMF382",15,0)
 F XUMFLNE=1:1 S XUMFTXT=$P($T(REMMEM+XUMFLNE),";;",2) Q:XUMFTXT="END"!($G(XUMFERRF))  D
"RTN","XUMF382",16,0)
 . S XUMFGNM=$P(XUMFTXT,"^",1)
"RTN","XUMF382",17,0)
 . S XUMFGIEN=$$FIND1^DIC(3.8,"","X",XUMFGNM,"","","")
"RTN","XUMF382",18,0)
 . S XUMFRNM=$P(XUMFTXT,"^",2)
"RTN","XUMF382",19,0)
 . ;If Mail Group not found, error
"RTN","XUMF382",20,0)
 . I XUMFGIEN'>0 D
"RTN","XUMF382",21,0)
 . . S XUMMSG(1)="**"
"RTN","XUMF382",22,0)
 . . S XUMMSG(2)="** Mail Group "_XUMFGNM_" not found"
"RTN","XUMF382",23,0)
 . . D MES^XPDUTL(.XUMMSG) K XUMMSG
"RTN","XUMF382",24,0)
 . . S XUMFERRF=1
"RTN","XUMF382",25,0)
 . ELSE  D
"RTN","XUMF382",26,0)
 . . ;Attach Remote Member to Mail Group
"RTN","XUMF382",27,0)
 . . N XUMFFDA,XUMFIEN,XUMFMSG
"RTN","XUMF382",28,0)
 . . S XUMFFDA(3.812,"?+2,"_XUMFGIEN_",",.01)=XUMFRNM
"RTN","XUMF382",29,0)
 . . D UPDATE^DIE("","XUMFFDA","XUMFIEN","XUMFMSG")
"RTN","XUMF382",30,0)
 . . ;Check for error
"RTN","XUMF382",31,0)
 . . I $D(XUMFMSG("DIERR")) D
"RTN","XUMF382",32,0)
 . . . S XUMMSG(1)="**"
"RTN","XUMF382",33,0)
 . . . S XUMMSG(2)="** Unable to attach "_XUMFRNM_" to "_XUMFGNM
"RTN","XUMF382",34,0)
 . . . D MES^XPDUTL(.XUMMSG) K XUMMSG
"RTN","XUMF382",35,0)
 . . . S XUMFERRF=1
"RTN","XUMF382",36,0)
 . . ELSE  D
"RTN","XUMF382",37,0)
 . . . S XUMMSG(1)=" "
"RTN","XUMF382",38,0)
 . . . S XUMMSG(2)=".."_XUMFRNM_$S($G(XUMFIEN(2,0))="?":" already",1:"")_" attached to "_XUMFGNM
"RTN","XUMF382",39,0)
 . . . D MES^XPDUTL(.XUMMSG) K XUMMSG
"RTN","XUMF382",40,0)
 ;Check for error
"RTN","XUMF382",41,0)
 I $G(XUMFERRF) D
"RTN","XUMF382",42,0)
 . S XUMMSG(1)="** Post-installation will be halted"
"RTN","XUMF382",43,0)
 . S XUMMSG(2)="**"
"RTN","XUMF382",44,0)
 . D MES^XPDUTL(.XUMMSG) K XUMMSG
"RTN","XUMF382",45,0)
 Q +$S($G(XUMFERRF):0,1:1)
"RTN","XUMF382",46,0)
 ;
"RTN","XUMF382",47,0)
REMMEM ;Mail Group Name^Remote Member
"RTN","XUMF382",48,0)
 ;;XUMF ERROR^G.XUMF ERROR@FORUM.VA.GOV
"RTN","XUMF382",49,0)
 ;;XUMF ERROR^G.HDIS ERRORS@FORUM.VA.GOV
"RTN","XUMF382",50,0)
 ;;XUMF ERROR^G.HDIS ERT NOTIFICATION@FORUM.VA.GOV
"RTN","XUMF382",51,0)
 ;;END
"RTN","XUMFX")
0^1^B36871545
"RTN","XUMFX",1,0)
XUMFX ;ISS/RAM - XUMF API's;04/15/02
"RTN","XUMFX",2,0)
 ;;8.0;KERNEL;**299,382**;Jul 10, 1995
"RTN","XUMFX",3,0)
 ;
"RTN","XUMFX",4,0)
 Q
"RTN","XUMFX",5,0)
 ;
"RTN","XUMFX",6,0)
IEN(IFN,ID) ; -- Internal Entry Number
"RTN","XUMFX",7,0)
 ;
"RTN","XUMFX",8,0)
 N IEN,ROOT
"RTN","XUMFX",9,0)
 ;
"RTN","XUMFX",10,0)
 S IFN=$G(IFN),ID=$G(ID)
"RTN","XUMFX",11,0)
 ;
"RTN","XUMFX",12,0)
 Q:'IFN "0^IFN required"
"RTN","XUMFX",13,0)
 Q:ID="" "0^ID required"
"RTN","XUMFX",14,0)
 ;
"RTN","XUMFX",15,0)
 S ROOT=$$ROOT^DILFD(IFN,,1) Q:ROOT="" "0^invalid IFN"
"RTN","XUMFX",16,0)
 S IEN=$O(@ROOT@("VUID",ID,0))
"RTN","XUMFX",17,0)
 ;
"RTN","XUMFX",18,0)
 Q $S(IEN:IEN,1:"0^not found")
"RTN","XUMFX",19,0)
 ;
"RTN","XUMFX",20,0)
PKV(IFN,IEN,HLCS) ; Primary Key Value - MFE.4
"RTN","XUMFX",21,0)
 ;
"RTN","XUMFX",22,0)
 S IFN=$G(IFN),IEN=$G(IEN),HLCS=$G(HLCS)
"RTN","XUMFX",23,0)
 ;
"RTN","XUMFX",24,0)
 N MFE,NODE,ID,TEXT,CDSYS,IENS
"RTN","XUMFX",25,0)
 ;
"RTN","XUMFX",26,0)
 S NODE=$G(^DIC(4.001,IFN,"MFE"))
"RTN","XUMFX",27,0)
 Q:NODE="" "1^Error - MFE 4.001 not defined IFN: "_IFN_" HLNODE: "_HLNODE
"RTN","XUMFX",28,0)
 ;
"RTN","XUMFX",29,0)
 S:HLCS="" HLCS="~"
"RTN","XUMFX",30,0)
 S CDSYS=$P(NODE,U,3)
"RTN","XUMFX",31,0)
 ;
"RTN","XUMFX",32,0)
 Q:IEN="NEW" IEN_HLCS_"NEW ENTRY"_HLCS_CDSYS
"RTN","XUMFX",33,0)
 ;
"RTN","XUMFX",34,0)
 Q:'IFN "1^Error - IFN required HLNODE: "_HLNODE
"RTN","XUMFX",35,0)
 Q:'IEN "1^Error - IEN required HLNODE: "_HLNODE
"RTN","XUMFX",36,0)
 ;
"RTN","XUMFX",37,0)
 S IENS=IEN_","
"RTN","XUMFX",38,0)
 ;
"RTN","XUMFX",39,0)
 S FIELD=$P(NODE,U,1),ID=$$GET1^DIQ(IFN,IENS,FIELD)
"RTN","XUMFX",40,0)
 S FIELD=$P(NODE,U,2),TEXT=$$GET1^DIQ(IFN,IENS,FIELD)
"RTN","XUMFX",41,0)
 ;
"RTN","XUMFX",42,0)
 S MFE=ID_HLCS_TEXT_HLCS_CDSYS
"RTN","XUMFX",43,0)
 ;
"RTN","XUMFX",44,0)
 Q:'$P(NODE,U,4) MFE
"RTN","XUMFX",45,0)
 ;
"RTN","XUMFX",46,0)
 S FIELD=$P(NODE,U,4),ID=$$GET1^DIQ(IFN,IENS,FIELD)
"RTN","XUMFX",47,0)
 S FIELD=$P(NODE,U,5),TEXT=$$GET1^DIQ(IFN,IENS,FIELD)
"RTN","XUMFX",48,0)
 S CDSYS=$P(NODE,U,6)
"RTN","XUMFX",49,0)
 ;
"RTN","XUMFX",50,0)
 Q MFE_HLCS_ID_HLCS_TEXT_HLCS_CDSYS
"RTN","XUMFX",51,0)
 ;
"RTN","XUMFX",52,0)
MFE(IFN,PKV,HLCS,IEN,ERROR) ; -- update
"RTN","XUMFX",53,0)
 ;
"RTN","XUMFX",54,0)
 N IENS,MFE,I,X,ID,XREF,NAME,FLD,FDA,DIC,Y
"RTN","XUMFX",55,0)
 ;
"RTN","XUMFX",56,0)
 S IFN=$G(IFN),IEN=$G(IEN),HLCS=$G(HLCS),ERROR=$G(ERROR)
"RTN","XUMFX",57,0)
 S:HLCS="" HLCS="~"
"RTN","XUMFX",58,0)
 ;
"RTN","XUMFX",59,0)
 Q:ERROR
"RTN","XUMFX",60,0)
 ;
"RTN","XUMFX",61,0)
 I 'IFN S ERROR="1^Error - IFN required HLNODE: "_HLNODE Q
"RTN","XUMFX",62,0)
 ;
"RTN","XUMFX",63,0)
 I $P(PKV,HLCS)=""!($P(PKV,HLCS,2)="")!($P(PKV,HLCS,4)="") D  Q
"RTN","XUMFX",64,0)
 .S ERROR="1^Error - PKV not valid HLNODE: "_HLNODE
"RTN","XUMFX",65,0)
 .D EM^XUMFH(ERROR,.ERR)
"RTN","XUMFX",66,0)
 ;
"RTN","XUMFX",67,0)
 S MFE=$G(^DIC(4.001,IFN,"MFE")),XREF=$P(MFE,U,8)
"RTN","XUMFX",68,0)
 I XREF="" D  Q
"RTN","XUMFX",69,0)
 .S ERROR="1^Error - MFE parameter XREF missing HLNODE: "_HLNODE
"RTN","XUMFX",70,0)
 .D EM^XUMFH(ERROR,.ERR)
"RTN","XUMFX",71,0)
 ;
"RTN","XUMFX",72,0)
 I IFN=4.001 D  Q
"RTN","XUMFX",73,0)
 .S IEN=$$FIND1^DIC(1,,"BX",$P(PKV,HLCS))
"RTN","XUMFX",74,0)
 .I 'IEN D  Q
"RTN","XUMFX",75,0)
 ..S ERROR="1^not a valid IEN in MFE - HLNODE: "_HLNODE
"RTN","XUMFX",76,0)
 ..D EM^XUMFH(ERROR,.ERR)
"RTN","XUMFX",77,0)
 .Q:$D(^DIC(4.001,IEN))
"RTN","XUMFX",78,0)
 .S NAME=$P(PKV,HLCS)
"RTN","XUMFX",79,0)
 .K FDA
"RTN","XUMFX",80,0)
 .S FDA(IFN,"?+1,",.01)=NAME
"RTN","XUMFX",81,0)
 .D UPDATE^DIE("E","FDA",,"ERR")
"RTN","XUMFX",82,0)
 .I $D(ERR) D  Q
"RTN","XUMFX",83,0)
 ..S ERROR="1^MFE UPDATE FAILED for .01 File#: "_IFN
"RTN","XUMFX",84,0)
 ..D EM^XUMFH(ERROR,.ERR)
"RTN","XUMFX",85,0)
 ;
"RTN","XUMFX",86,0)
 S VUID=$P(PKV,HLCS)
"RTN","XUMFX",87,0)
 S ROOT=$$ROOT^DILFD(IFN,,1)
"RTN","XUMFX",88,0)
 I '$L(ROOT) S ERROR="1^Error - MFE no root file#: "_IFN Q
"RTN","XUMFX",89,0)
 S IEN=$O(@ROOT@("AMASTERVUID",VUID,1,0))
"RTN","XUMFX",90,0)
 ;
"RTN","XUMFX",91,0)
 Q:IEN
"RTN","XUMFX",92,0)
 ;
"RTN","XUMFX",93,0)
 I 'IEN D
"RTN","XUMFX",94,0)
 .S KEY=$P(PKV,HLCS,4)
"RTN","XUMFX",95,0)
 .S IEN=$O(@ROOT@(XREF,KEY,0))
"RTN","XUMFX",96,0)
 ;
"RTN","XUMFX",97,0)
 I 'IEN D  Q:ERROR
"RTN","XUMFX",98,0)
 .S NAME=$P(PKV,HLCS,2)
"RTN","XUMFX",99,0)
 .D CHK^DIE(IFN,.01,,NAME,.X)
"RTN","XUMFX",100,0)
 .I X="^" D  Q
"RTN","XUMFX",101,0)
 ..S ERROR="1^Error - PKV .01 is invalid"_" File #: "_IFN_" PKV="_PKV
"RTN","XUMFX",102,0)
 ..D EM^XUMFH(ERROR,.ERR)
"RTN","XUMFX",103,0)
 .K DIC S DIC=IFN,DIC(0)="F" D FILE^DICN K DIC
"RTN","XUMFX",104,0)
 .I Y="-1" D  Q
"RTN","XUMFX",105,0)
 ..S ERROR="1^stub entry for "_PKV_" failed PKV: "_PKV
"RTN","XUMFX",106,0)
 ..D EM^XUMFH(ERROR,.ERR)
"RTN","XUMFX",107,0)
 .S IEN=+Y
"RTN","XUMFX",108,0)
 ;
"RTN","XUMFX",109,0)
 S IENS=IEN_","
"RTN","XUMFX",110,0)
 ;
"RTN","XUMFX",111,0)
 S FDA(IFN,IENS,99.99)=$P(PKV,HLCS,1)
"RTN","XUMFX",112,0)
 S FDA(IFN,IENS,99.98)=1
"RTN","XUMFX",113,0)
 ;
"RTN","XUMFX",114,0)
 K ERR
"RTN","XUMFX",115,0)
 ;
"RTN","XUMFX",116,0)
 D FILE^DIE("E","FDA","ERR")
"RTN","XUMFX",117,0)
 I $D(ERR) D
"RTN","XUMFX",118,0)
 .S ERROR="1^VUID update error for IFN: "_IFN_" IEN: "_IEN_" PKV: "_PKV
"RTN","XUMFX",119,0)
 .D EM^XUMFH(ERROR,.ERR)
"RTN","XUMFX",120,0)
 .K ERR
"RTN","XUMFX",121,0)
 ;
"RTN","XUMFX",122,0)
 Q
"RTN","XUMFX",123,0)
 ;
"RTN","XUMFX",124,0)
LOAD(IFN) ; -- query and file
"RTN","XUMFX",125,0)
 ;
"RTN","XUMFX",126,0)
 D MFS(IFN,"ALL",5,.ERROR)
"RTN","XUMFX",127,0)
 ;
"RTN","XUMFX",128,0)
 Q
"RTN","XUMFX",129,0)
 ;
"RTN","XUMFX",130,0)
ARRAY(IFN) ; -- query and tmp array
"RTN","XUMFX",131,0)
 ;
"RTN","XUMFX",132,0)
 D MFS(IFN,"ALL",7,.ERROR)
"RTN","XUMFX",133,0)
 ;
"RTN","XUMFX",134,0)
 Q
"RTN","XUMFX",135,0)
 ;
"RTN","XUMFX",136,0)
MFS(IFN,IEN,TYP,ERROR) ; -- get file from Master File Server
"RTN","XUMFX",137,0)
 ;
"RTN","XUMFX",138,0)
 ; TYP (5=query/file, 7=query/tmp_array)
"RTN","XUMFX",139,0)
 ;
"RTN","XUMFX",140,0)
 N TEST
"RTN","XUMFX",141,0)
 ;
"RTN","XUMFX",142,0)
 S (ERROR,TEST)=0
"RTN","XUMFX",143,0)
 ;
"RTN","XUMFX",144,0)
 S IFN=$G(IFN),IEN=$G(IEN),TYP=$G(TYP)
"RTN","XUMFX",145,0)
 ;
"RTN","XUMFX",146,0)
 I 'IFN S ERROR="1^IFN required" Q
"RTN","XUMFX",147,0)
 I IEN="" S ERROR="1^IEN required" Q
"RTN","XUMFX",148,0)
 I TYP'=5,TYP'=7 S ERROR="1^not a valid type" Q
"RTN","XUMFX",149,0)
 ;
"RTN","XUMFX",150,0)
 I $P($$PARAM^HLCS2,U,3)="T" S TEST=1
"RTN","XUMFX",151,0)
 ;
"RTN","XUMFX",152,0)
 S PARAM("LLNK")="XUMFX MFR^XUMF "_$S('TEST:"FORUM",1:"TEST")
"RTN","XUMFX",153,0)
 S PARAM("PROTOCOL")=$O(^ORD(101,"B","XUMFX MFQ",0))
"RTN","XUMFX",154,0)
 ;
"RTN","XUMFX",155,0)
 D MAIN^XUMFXP(IFN,"ALL",TYP,.PARAM,.ERROR) Q:ERROR
"RTN","XUMFX",156,0)
 D MAIN^XUMFXI(IFN,"ALL",TYP,.PARAM,.ERROR) Q:ERROR
"RTN","XUMFX",157,0)
 D MAIN^XUMFXH
"RTN","XUMFX",158,0)
 ;
"RTN","XUMFX",159,0)
 Q
"RTN","XUMFX",160,0)
 ;
"RTN","XUMFX",161,0)
VUID(FILE,FIELD,VUID,X) ; -- If value type pointer and VUID may be used,
"RTN","XUMFX",162,0)
 ; get IEN and set it as internal value
"RTN","XUMFX",163,0)
 N XVUID,X1
"RTN","XUMFX",164,0)
 Q:'$L(FILE)!'FIELD!'$L(VUID) 0
"RTN","XUMFX",165,0)
 Q:$E(X,1,$L(VUID))'=VUID 0
"RTN","XUMFX",166,0)
 S XVUID=$E(X,$L(VUID)+1,$L(X))
"RTN","XUMFX",167,0)
 D FIELD^DID(FILE,FIELD,,"POINTER","X1")
"RTN","XUMFX",168,0)
 S X1=$G(X1("POINTER"))
"RTN","XUMFX",169,0)
 Q:'$L(X1) 0
"RTN","XUMFX",170,0)
 S X1=U_X1_"""AMASTERVUID"",XVUID,1,0)"
"RTN","XUMFX",171,0)
 S X1=$O(@X1)
"RTN","XUMFX",172,0)
 Q +X1
"RTN","XUMFX",173,0)
 ;
"RTN","XUMFX",174,0)
VAL(FILE,FIELD,VUID,VALUE,IENS) ; convert to internal
"RTN","XUMFX",175,0)
 ;
"RTN","XUMFX",176,0)
 N RESULT,ERR
"RTN","XUMFX",177,0)
 ;
"RTN","XUMFX",178,0)
 I $L(VUID) D  Q RESULT
"RTN","XUMFX",179,0)
 .S RESULT=$$VUID(FILE,FIELD,VUID,VALUE)
"RTN","XUMFX",180,0)
 .I 'RESULT D
"RTN","XUMFX",181,0)
 ..S RESULT="^",ERROR="1^VUID lookup failed on "_VALUE
"RTN","XUMFX",182,0)
 ..D EM("VUID lookup failed on "_VALUE)
"RTN","XUMFX",183,0)
 ;
"RTN","XUMFX",184,0)
 I VALUE["\F\" F  Q:VALUE'["\F\"  D
"RTN","XUMFX",185,0)
 .S VALUE=$P(VALUE,"\F\")_"^"_$P(VALUE,"\F\",2,9999)
"RTN","XUMFX",186,0)
 I VALUE["\T\" F  Q:VALUE'["\T\"  D
"RTN","XUMFX",187,0)
 .S VALUE=$P(VALUE,"\T\")_"&"_$P(VALUE,"\T\",2,9999)
"RTN","XUMFX",188,0)
 ;
"RTN","XUMFX",189,0)
 D VAL^DIE(FILE,IENS,FIELD,,VALUE,.RESULT,,"ERR")
"RTN","XUMFX",190,0)
 I $D(ERR) D EM("validation error",.ERR)
"RTN","XUMFX",191,0)
 I RESULT="^" S ERROR="1^data validation error"
"RTN","XUMFX",192,0)
 ;
"RTN","XUMFX",193,0)
 Q RESULT
"RTN","XUMFX",194,0)
 ;
"RTN","XUMFX",195,0)
EM(ERROR,ERR,XMSUB,XMY) ; -- error message
"RTN","XUMFX",196,0)
 ;
"RTN","XUMFX",197,0)
 N X,XMTEXT,XMDUZ,GROUP
"RTN","XUMFX",198,0)
 ;
"RTN","XUMFX",199,0)
 D MSG^DIALOG("AM",.X,80,,"ERR")
"RTN","XUMFX",200,0)
 ;
"RTN","XUMFX",201,0)
 S X(.1)="HL7 message ID: "_$G(HL("MID"))
"RTN","XUMFX",202,0)
 S X(.2)="",X(.3)=$G(ERROR)
"RTN","XUMFX",203,0)
 S X(.4)="",X(.5)="Key: "_$G(KEY),X(.6)=""
"RTN","XUMFX",204,0)
 S:$G(XMSUB)="" XMSUB="MFS ERROR/WARNING/INFO"
"RTN","XUMFX",205,0)
 S XMY("G.XUMF ERROR")="",XMDUZ=.5
"RTN","XUMFX",206,0)
 S GROUP=$P($G(^DIC(4.001,+IFN,0)),U,6)
"RTN","XUMFX",207,0)
 I GROUP'="" S GROUP="G."_GROUP,XMY(GROUP)=""
"RTN","XUMFX",208,0)
 S XMTEXT="X("
"RTN","XUMFX",209,0)
 ;
"RTN","XUMFX",210,0)
 M ^TMP("XUMF ERROR",$J,$O(^TMP("XUMF ERROR",$J,9999999999999),-1)+1)=X
"RTN","XUMFX",211,0)
 ;
"RTN","XUMFX",212,0)
 D ^XMD
"RTN","XUMFX",213,0)
 ;
"RTN","XUMFX",214,0)
 Q
"RTN","XUMFX",215,0)
 ;
"RTN","XUMFXH")
0^3^B85732279
"RTN","XUMFXH",1,0)
XUMFXH ;ISS/RAM - MFS Handler ;06/28/00
"RTN","XUMFXH",2,0)
 ;;8.0;KERNEL;**299,382**;Jul 10, 1995
"RTN","XUMFXH",3,0)
 ;
"RTN","XUMFXH",4,0)
 ; This routine handles Master File HL7 messages.
"RTN","XUMFXH",5,0)
 ;
"RTN","XUMFXH",6,0)
MAIN ; -- entry point
"RTN","XUMFXH",7,0)
 ;
"RTN","XUMFXH",8,0)
 N CNT,ERR,I,X,HLFS,HLCS,ERROR,HLRESLTA,IFN,IEN,MTPE,TYPE,ARRAY
"RTN","XUMFXH",9,0)
 N HDT,KEY,MID,REASON,VALUE,XREF,ALL,GROUP,PARAM,ROOT,SEG,QRD,XUMF
"RTN","XUMFXH",10,0)
 N QID,WHAT,WHO,HLSCS,CDSYS,EXIT,HLREP,NUMBER,Y,XXX,YYY,ERR,XIEN
"RTN","XUMFXH",11,0)
 ;
"RTN","XUMFXH",12,0)
 D INIT,PROCESS,REPLY^XUMFXACK(ERROR),EXIT
"RTN","XUMFXH",13,0)
 ;
"RTN","XUMFXH",14,0)
 Q
"RTN","XUMFXH",15,0)
 ;
"RTN","XUMFXH",16,0)
INIT ; -- initialize
"RTN","XUMFXH",17,0)
 ;
"RTN","XUMFXH",18,0)
 K ^TMP("DILIST",$J),^TMP("DIERR",$J)
"RTN","XUMFXH",19,0)
 K ^TMP("HLS",$J),^TMP("HLA",$J)
"RTN","XUMFXH",20,0)
 K ^TMP("XUMF MFS",$J),^TMP("XUMF ERROR",$J)
"RTN","XUMFXH",21,0)
 ;
"RTN","XUMFXH",22,0)
 S XUMF=1,DUZ(0)="@"
"RTN","XUMFXH",23,0)
 ;
"RTN","XUMFXH",24,0)
 S (ERROR,CNT,TYPE,ARRAY,EXIT)=0
"RTN","XUMFXH",25,0)
 S HLFS=HL("FS"),HLCS=$E(HL("ECH"))
"RTN","XUMFXH",26,0)
 S HLSCS=$E(HL("ECH"),4),HLREP=$E(HL("ECH"),2)
"RTN","XUMFXH",27,0)
 ;
"RTN","XUMFXH",28,0)
 Q
"RTN","XUMFXH",29,0)
 ;
"RTN","XUMFXH",30,0)
PROCESS ; -- pull message text
"RTN","XUMFXH",31,0)
 ;
"RTN","XUMFXH",32,0)
 F  X HLNEXT Q:HLQUIT'>0  D
"RTN","XUMFXH",33,0)
 .Q:$P(HLNODE,HLFS)=""
"RTN","XUMFXH",34,0)
 .Q:"^MSH^MSA^QRD^MFI^MFE^RDF^RDT^"'[(U_$P(HLNODE,HLFS)_U)
"RTN","XUMFXH",35,0)
 .D @($P(HLNODE,HLFS))
"RTN","XUMFXH",36,0)
 ;
"RTN","XUMFXH",37,0)
 Q
"RTN","XUMFXH",38,0)
 ;
"RTN","XUMFXH",39,0)
MSH ; -- MSH segment
"RTN","XUMFXH",40,0)
 ;
"RTN","XUMFXH",41,0)
 Q
"RTN","XUMFXH",42,0)
 ;
"RTN","XUMFXH",43,0)
MSA ; -- MSA segment
"RTN","XUMFXH",44,0)
 ;
"RTN","XUMFXH",45,0)
 N CODE
"RTN","XUMFXH",46,0)
 ;
"RTN","XUMFXH",47,0)
 S CODE=$P(HLNODE,HLFS,2)
"RTN","XUMFXH",48,0)
 ;
"RTN","XUMFXH",49,0)
 I CODE="AE"!(CODE="AR") D
"RTN","XUMFXH",50,0)
 .S ERROR=ERROR_U_$P(HLNODE,HLFS,4)_U_$G(ERR)
"RTN","XUMFXH",51,0)
 .D EM^XUMFX(ERROR,.ERR)
"RTN","XUMFXH",52,0)
 ;
"RTN","XUMFXH",53,0)
 Q
"RTN","XUMFXH",54,0)
 ;
"RTN","XUMFXH",55,0)
QRD ; -- QRD segment
"RTN","XUMFXH",56,0)
 ;
"RTN","XUMFXH",57,0)
 Q:ERROR
"RTN","XUMFXH",58,0)
 Q:EXIT
"RTN","XUMFXH",59,0)
 ;
"RTN","XUMFXH",60,0)
 S QRD="QRD,QDT,QFC,QP,QID,DRT,DRDT,QLR,WHO,WHAT,WDDC,WDCVQ,QRL"
"RTN","XUMFXH",61,0)
 ;
"RTN","XUMFXH",62,0)
 F I=2:1:13 S PARAM($P(QRD,",",I))=$P(HLNODE,HLFS,I)
"RTN","XUMFXH",63,0)
 S QID=$P(HLNODE,HLFS,5)
"RTN","XUMFXH",64,0)
 S WHO=$P(HLNODE,HLFS,9)
"RTN","XUMFXH",65,0)
 I WHO="" D  Q
"RTN","XUMFXH",66,0)
 .S ERROR="1^QRD segment has null missing WHO parameter HLNODE: "_HLNODE
"RTN","XUMFXH",67,0)
 .D EM^XUMFX(ERROR,.ERR)
"RTN","XUMFXH",68,0)
 S WHAT=$P(HLNODE,HLFS,10)
"RTN","XUMFXH",69,0)
 I WHAT="" D  Q
"RTN","XUMFXH",70,0)
 .S ERROR="1^QRD segment has null missing WHAT parameter HLNODE: "_HLNODE
"RTN","XUMFXH",71,0)
 .D EM^XUMFX(ERROR,.ERR)
"RTN","XUMFXH",72,0)
 ;
"RTN","XUMFXH",73,0)
 S ARRAY=$S(QID["ARRAY":1,1:0)
"RTN","XUMFXH",74,0)
 S ALL=$S(WHO["ALL":1,1:0)
"RTN","XUMFXH",75,0)
 S GROUP=$S(ALL:1,(WHO["IEN"):1,1:0)
"RTN","XUMFXH",76,0)
 ;
"RTN","XUMFXH",77,0)
 S:ARRAY TYPE=$S(GROUP:7,1:3)
"RTN","XUMFXH",78,0)
 S:'ARRAY TYPE=$S(GROUP:5,1:1)
"RTN","XUMFXH",79,0)
 S:HL("MTN")="MFR" TYPE=TYPE+10
"RTN","XUMFXH",80,0)
 ;
"RTN","XUMFXH",81,0)
 S IFN=+WHAT
"RTN","XUMFXH",82,0)
 S XREF=$P($G(^DIC(4.001,+IFN,"MFE")),U,8)
"RTN","XUMFXH",83,0)
 I XREF="" D  Q
"RTN","XUMFXH",84,0)
 .S ERROR="1QRD null XREF parameter HLNODE: "_HLNODE
"RTN","XUMFXH",85,0)
 .D EM^XUMFX(ERROR,.ERR)
"RTN","XUMFXH",86,0)
 S ROOT=$$ROOT^DILFD(IFN,,1)
"RTN","XUMFXH",87,0)
 S IEN=$O(@ROOT@(XREF,$P(WHO,HLCS),0))
"RTN","XUMFXH",88,0)
 S IEN=$S(IEN:IEN,1:$P(WHO,HLCS))
"RTN","XUMFXH",89,0)
 ;
"RTN","XUMFXH",90,0)
 K:ARRAY ^TMP("XUMF ARRAY",$J)
"RTN","XUMFXH",91,0)
 ;
"RTN","XUMFXH",92,0)
 Q
"RTN","XUMFXH",93,0)
 ;
"RTN","XUMFXH",94,0)
MFI ; -- MFI segment
"RTN","XUMFXH",95,0)
 ;
"RTN","XUMFXH",96,0)
 Q:ERROR
"RTN","XUMFXH",97,0)
 Q:EXIT
"RTN","XUMFXH",98,0)
 ;
"RTN","XUMFXH",99,0)
 K IFN,ARRAY
"RTN","XUMFXH",100,0)
 ;
"RTN","XUMFXH",101,0)
 I $P(HLNODE,HLFS,2)="" D  Q
"RTN","XUMFXH",102,0)
 .S ERROR="1^MFI segment missing Master File Identifier HLNODE: "_HLNODE
"RTN","XUMFXH",103,0)
 .D EM^XUMFX(ERROR,.ERR)
"RTN","XUMFXH",104,0)
 ;
"RTN","XUMFXH",105,0)
 S IFN=$P(HLNODE,HLFS,2)
"RTN","XUMFXH",106,0)
 S:'IFN IFN=$O(^DIC(4.001,"MFI",$P($P(HLNODE,HLFS,2),HLCS,2),0))
"RTN","XUMFXH",107,0)
 S IFN=$S(IFN:IFN,$P(HLNODE,HLFS,2)="ZMF":4.001,1:0)
"RTN","XUMFXH",108,0)
 I 'IFN D  Q
"RTN","XUMFXH",109,0)
 .S ERROR="1^IFN in MFI could not be resolved HLNODE: "_HLNODE
"RTN","XUMFXH",110,0)
 .D EM^XUMFX(ERROR,.ERR)
"RTN","XUMFXH",111,0)
 ;
"RTN","XUMFXH",112,0)
 S ARRAY=$S($G(ARRAY):1,$P(HLNODE,HLFS,3)="TEMP":1,1:0)
"RTN","XUMFXH",113,0)
 ;
"RTN","XUMFXH",114,0)
 Q
"RTN","XUMFXH",115,0)
 ;
"RTN","XUMFXH",116,0)
MFE ; -- MFE segment
"RTN","XUMFXH",117,0)
 ;
"RTN","XUMFXH",118,0)
 Q:ERROR
"RTN","XUMFXH",119,0)
 Q:EXIT
"RTN","XUMFXH",120,0)
 ;
"RTN","XUMFXH",121,0)
 K IEN
"RTN","XUMFXH",122,0)
 ;
"RTN","XUMFXH",123,0)
 N PRE,POST
"RTN","XUMFXH",124,0)
 ;
"RTN","XUMFXH",125,0)
 S KEY=$P(HLNODE,HLFS,5) Q:ARRAY
"RTN","XUMFXH",126,0)
 ;
"RTN","XUMFXH",127,0)
 S PRE=$P($G(^DIC(4.001,+IFN,"MFE")),U,16)
"RTN","XUMFXH",128,0)
 I PRE'="" D  Q:$G(EXIT)
"RTN","XUMFXH",129,0)
 .S PRE=PRE_"^XUMFXR"
"RTN","XUMFXH",130,0)
 .D @(PRE)
"RTN","XUMFXH",131,0)
 ;
"RTN","XUMFXH",132,0)
 D MFE^XUMFX(IFN,KEY,HLCS,.IEN,.ERROR) Q:ERROR
"RTN","XUMFXH",133,0)
 ;
"RTN","XUMFXH",134,0)
 S POST=$P($G(^DIC(4.001,+IFN,"MFE")),U,17)
"RTN","XUMFXH",135,0)
 I POST'="" D  Q:$G(EXIT)
"RTN","XUMFXH",136,0)
 .S POST=POST_"^XUMFXR"
"RTN","XUMFXH",137,0)
 .D @(POST)
"RTN","XUMFXH",138,0)
 ;
"RTN","XUMFXH",139,0)
 I 'IEN D  Q
"RTN","XUMFXH",140,0)
 .S ERROR="1^IEN not resolved in MFE File #: "_IFN_" HLNODE: "_HLNODE
"RTN","XUMFXH",141,0)
 .D EM^XUMFX("Error in MFE",.ERR)
"RTN","XUMFXH",142,0)
 .K ERR
"RTN","XUMFXH",143,0)
 ;
"RTN","XUMFXH",144,0)
 K:'$D(XIEN(IEN)) XIEN
"RTN","XUMFXH",145,0)
 S XIEN(IEN)=$G(XIEN(IEN))+1
"RTN","XUMFXH",146,0)
 ;
"RTN","XUMFXH",147,0)
 Q
"RTN","XUMFXH",148,0)
 ;
"RTN","XUMFXH",149,0)
RDF ; -- table row definition
"RTN","XUMFXH",150,0)
 ;
"RTN","XUMFXH",151,0)
 Q:ERROR
"RTN","XUMFXH",152,0)
 Q:EXIT
"RTN","XUMFXH",153,0)
 ;
"RTN","XUMFXH",154,0)
 I $G(ARRAY) D ARRAY Q
"RTN","XUMFXH",155,0)
 ;
"RTN","XUMFXH",156,0)
 N COL,X,Y,Z,DTYP,IDX,SEQ,VUID,DATA,NAME
"RTN","XUMFXH",157,0)
 ;
"RTN","XUMFXH",158,0)
 K ^TMP("XUMF MFS",$J,"PARAM","SEQ")
"RTN","XUMFXH",159,0)
 K ^TMP("XUMF MFS",$J,"PARAM","MULT")
"RTN","XUMFXH",160,0)
 ;K ^TMP("XUMF MFS",$J,"PARAM","MKEY")
"RTN","XUMFXH",161,0)
 K ^TMP("XUMF MFS",$J,"PARAM","IENS")
"RTN","XUMFXH",162,0)
 ;
"RTN","XUMFXH",163,0)
 K XXX,YYY
"RTN","XUMFXH",164,0)
 ;
"RTN","XUMFXH",165,0)
 S NUMBER=$P(HLNODE,HLFS,2)
"RTN","XUMFXH",166,0)
 S DATA=$P(HLNODE,HLFS,3)
"RTN","XUMFXH",167,0)
 ;
"RTN","XUMFXH",168,0)
 S CNT=0,Y=0
"RTN","XUMFXH",169,0)
 F SEQ=1:1:NUMBER D
"RTN","XUMFXH",170,0)
 .S Y=Y+1
"RTN","XUMFXH",171,0)
 .S Z=$P(DATA,HLREP,Y)
"RTN","XUMFXH",172,0)
 .I Y=$L(DATA,HLREP) D
"RTN","XUMFXH",173,0)
 ..S CNT=$O(HLNODE(CNT))
"RTN","XUMFXH",174,0)
 ..S DATA=$G(HLNODE(+CNT))
"RTN","XUMFXH",175,0)
 ..S Z=Z_$P(DATA,HLREP)
"RTN","XUMFXH",176,0)
 ..S Y=1
"RTN","XUMFXH",177,0)
 .S COL(SEQ)=Z
"RTN","XUMFXH",178,0)
 ;
"RTN","XUMFXH",179,0)
 S SEQ=0
"RTN","XUMFXH",180,0)
 F  S SEQ=$O(COL(SEQ)) Q:'SEQ  D
"RTN","XUMFXH",181,0)
 .S NAME=$P(COL(SEQ),HLCS) Q:NAME=""
"RTN","XUMFXH",182,0)
 .S IDX=$O(^DIC(4.001,+IFN,1,"B",NAME,0)) Q:'IDX
"RTN","XUMFXH",183,0)
 .S DATA=$G(^DIC(4.001,+IFN,1,+IDX,0)) Q:DATA=""
"RTN","XUMFXH",184,0)
 .S YYY(NAME,SEQ)=""
"RTN","XUMFXH",185,0)
 .;
"RTN","XUMFXH",186,0)
 .N FLD,TYP,SUBFILE,LKUP,REPEAT,CLEAN,TIMEZONE
"RTN","XUMFXH",187,0)
 .S TYP=$P(DATA,U,3),TYP=$$GET1^DIQ(771.4,(+TYP_","),.01)
"RTN","XUMFXH",188,0)
 .S FLD=$P(DATA,U,2),SUBFILE=$P(DATA,U,4)
"RTN","XUMFXH",189,0)
 .S LKUP=$P(DATA,U,7),TIMEZONE=$P(DATA,U,14)
"RTN","XUMFXH",190,0)
 .S REPEAT=$P(DATA,U,11),CLEAN=$P(DATA,U,12),VUID=$P(DATA,U,13)
"RTN","XUMFXH",191,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,"VUID")=VUID
"RTN","XUMFXH",192,0)
 .;
"RTN","XUMFXH",193,0)
 .I 'SUBFILE D  Q
"RTN","XUMFXH",194,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,FLD)=TYP_U_LKUP
"RTN","XUMFXH",195,0)
 .;
"RTN","XUMFXH",196,0)
 .; -- multiple field
"RTN","XUMFXH",197,0)
 .;
"RTN","XUMFXH",198,0)
 .I $P(DATA,U,6)'="" D  ;.01 is a field
"RTN","XUMFXH",199,0)
 ..S XXX(SEQ)=$P(DATA,U,6)
"RTN","XUMFXH",200,0)
 .;I $P(DATA,U,6)="" D  ;.01 is lkup on MKEY literal
"RTN","XUMFXH",201,0)
 .;.S ^TMP("XUMF MFS",$J,"PARAM","MULT",SEQ)=""
"RTN","XUMFXH",202,0)
 .;.S ^TMP("XUMF MFS",$J,"PARAM","MKEY",SEQ)=$P(DATA,U,5)
"RTN","XUMFXH",203,0)
 .;
"RTN","XUMFXH",204,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,"FILE")=SUBFILE
"RTN","XUMFXH",205,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,"FIELD")=FLD
"RTN","XUMFXH",206,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,"DTYP")=TYP
"RTN","XUMFXH",207,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,"REPEAT")=REPEAT
"RTN","XUMFXH",208,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,"CLEAN")=CLEAN
"RTN","XUMFXH",209,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,"TIMEZONE")=TIMEZONE
"RTN","XUMFXH",210,0)
 ;
"RTN","XUMFXH",211,0)
 S SEQ=0
"RTN","XUMFXH",212,0)
 F  S SEQ=$O(XXX(SEQ)) Q:'SEQ  D
"RTN","XUMFXH",213,0)
 .S X=XXX(SEQ),Y=$O(YYY(X,0))
"RTN","XUMFXH",214,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","MULT",SEQ)=Y
"RTN","XUMFXH",215,0)
 ;
"RTN","XUMFXH",216,0)
 Q
"RTN","XUMFXH",217,0)
 ;
"RTN","XUMFXH",218,0)
RDT ; -- table row data
"RTN","XUMFXH",219,0)
 ;
"RTN","XUMFXH",220,0)
 Q:ERROR
"RTN","XUMFXH",221,0)
 Q:EXIT
"RTN","XUMFXH",222,0)
 ;
"RTN","XUMFXH",223,0)
 I $G(ARRAY) D ARRAY Q
"RTN","XUMFXH",224,0)
 ;
"RTN","XUMFXH",225,0)
 Q:'IEN
"RTN","XUMFXH",226,0)
 ;
"RTN","XUMFXH",227,0)
 N FDA,IENS,FIELD,ERR,PRE,POST,MULT,FDA1,SEQ,VUID,TIMEZONE
"RTN","XUMFXH",228,0)
 ;
"RTN","XUMFXH",229,0)
 S PRE=$P($G(^DIC(4.001,+IFN,0)),U,4)
"RTN","XUMFXH",230,0)
 I PRE'="" D
"RTN","XUMFXH",231,0)
 .S PRE=PRE_"^XUMFR"
"RTN","XUMFXH",232,0)
 .D @(PRE)
"RTN","XUMFXH",233,0)
 ;
"RTN","XUMFXH",234,0)
 S IENS=IEN_","
"RTN","XUMFXH",235,0)
 S SEQ=0
"RTN","XUMFXH",236,0)
 F  S SEQ=$O(^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ)) Q:'SEQ  D
"RTN","XUMFXH",237,0)
 .S FIELD=$O(^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,0))
"RTN","XUMFXH",238,0)
 .S VUID=$G(^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,"VUID"))
"RTN","XUMFXH",239,0)
 .S TIMEZONE=$G(^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,"TIMEZONE"))
"RTN","XUMFXH",240,0)
 .I 'FIELD D SUBFILE Q
"RTN","XUMFXH",241,0)
 .S TYP=$G(^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,FIELD))
"RTN","XUMFXH",242,0)
 .S VALUE=$$VALUE()
"RTN","XUMFXH",243,0)
 .S VALUE=$$DTYP^XUMFXP(VALUE,TYP,HLCS,0,TIMEZONE)
"RTN","XUMFXH",244,0)
 .S VALUE=$$VAL^XUMFX(IFN,FIELD,VUID,VALUE,IENS) Q:VALUE="^"
"RTN","XUMFXH",245,0)
 .S FDA(IFN,IENS,FIELD)=VALUE
"RTN","XUMFXH",246,0)
 ;
"RTN","XUMFXH",247,0)
 M FDA=FDA1
"RTN","XUMFXH",248,0)
 ;
"RTN","XUMFXH",249,0)
 D FILE^DIE(,"FDA","ERR")
"RTN","XUMFXH",250,0)
 I $D(ERR) D
"RTN","XUMFXH",251,0)
 .S ERROR="1^updating error"
"RTN","XUMFXH",252,0)
 .D EM^XUMFX("file DIE call error message in RDT",.ERR)
"RTN","XUMFXH",253,0)
 .K ERR
"RTN","XUMFXH",254,0)
 ;
"RTN","XUMFXH",255,0)
 S POST=$P($G(^DIC(4.001,+IFN,0)),U,5)
"RTN","XUMFXH",256,0)
 I POST'="" D
"RTN","XUMFXH",257,0)
 .S POST=POST_"^XUMFR"
"RTN","XUMFXH",258,0)
 .D @(POST)
"RTN","XUMFXH",259,0)
 ;
"RTN","XUMFXH",260,0)
 Q
"RTN","XUMFXH",261,0)
 ;
"RTN","XUMFXH",262,0)
SUBFILE ; -- process subfile record
"RTN","XUMFXH",263,0)
 ;
"RTN","XUMFXH",264,0)
 N IFN,IENS1,KEY1,FIELD,TYP,MKEY,ERR,REPEAT,CLEAN
"RTN","XUMFXH",265,0)
 ;
"RTN","XUMFXH",266,0)
 S IFN=^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,"FILE")
"RTN","XUMFXH",267,0)
 S FIELD=^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,"FIELD")
"RTN","XUMFXH",268,0)
 S TYP=^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,"DTYP")
"RTN","XUMFXH",269,0)
 S REPEAT=^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,"REPEAT")
"RTN","XUMFXH",270,0)
 S CLEAN=^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,"CLEAN")
"RTN","XUMFXH",271,0)
 ;
"RTN","XUMFXH",272,0)
 I CLEAN,$G(XIEN(IEN))'>1 D
"RTN","XUMFXH",273,0)
 .N ROOT,IDX
"RTN","XUMFXH",274,0)
 .S ROOT=$$ROOT^DILFD(IFN,","_IENS,1)
"RTN","XUMFXH",275,0)
 .S IDX=0 F  S IDX=$O(@ROOT@(IDX)) Q:'IDX  D
"RTN","XUMFXH",276,0)
 ..D
"RTN","XUMFXH",277,0)
 ...N DA,DIK,DIC S DA(1)=+IENS,DA=IDX,DIK=$P(ROOT,")")_"," D ^DIK
"RTN","XUMFXH",278,0)
 ;
"RTN","XUMFXH",279,0)
 S VALUE=$$VALUE()
"RTN","XUMFXH",280,0)
 S VALUE=$$DTYP^XUMFXP(VALUE,TYP,HLCS,0,TIMEZONE)
"RTN","XUMFXH",281,0)
 ;
"RTN","XUMFXH",282,0)
 S MULT=$G(^TMP("XUMF MFS",$J,"PARAM","MULT",SEQ))
"RTN","XUMFXH",283,0)
 ;S MKEY=$G(^TMP("XUMF MFS",$J,"PARAM","MKEY",SEQ))
"RTN","XUMFXH",284,0)
 ;
"RTN","XUMFXH",285,0)
 I MULT=SEQ Q:VALUE=""  D
"RTN","XUMFXH",286,0)
 .N FDA,IEN
"RTN","XUMFXH",287,0)
 .S VALUE=$$VAL^XUMFX(IFN,FIELD,VUID,VALUE,"?+1,"_IENS) Q:VALUE="^"
"RTN","XUMFXH",288,0)
 .S FDA(IFN,"?+1,"_IENS,.01)=VALUE
"RTN","XUMFXH",289,0)
 .D UPDATE^DIE(,"FDA","IEN","ERR")
"RTN","XUMFXH",290,0)
 .I $D(ERR) D  Q
"RTN","XUMFXH",291,0)
 ..S ERROR="1^subfile update error SUBFILE#: "_IFN
"RTN","XUMFXH",292,0)
 ..D EM^XUMFX("update DIE call error message in SUBFILE",.ERR)
"RTN","XUMFXH",293,0)
 ..K ERR
"RTN","XUMFXH",294,0)
 .S IENS1=IEN(1)_","_IENS,MULT(SEQ)=IENS1
"RTN","XUMFXH",295,0)
 ;I 'MULT D
"RTN","XUMFXH",296,0)
 ;.N FDA,IEN
"RTN","XUMFXH",297,0)
 ;.S MKEY=$$VAL^XUMFX(IFN,FIELD,VUID,MKEY,"?+1,"_IENS)
"RTN","XUMFXH",298,0)
 ;.S FDA(IFN,"?+1,"_IENS,.01)=MKEY
"RTN","XUMFXH",299,0)
 ;.D UPDATE^DIE("E","FDA","IEN","ERR")
"RTN","XUMFXH",300,0)
 ;.I $D(ERR) D
"RTN","XUMFXH",301,0)
 ;..S ERROR="1^subfile update error"
"RTN","XUMFXH",302,0)
 ;..D EM^XUMFX("update DIE call error message in SUBFILE",.ERR)
"RTN","XUMFXH",303,0)
 ;..K ERR
"RTN","XUMFXH",304,0)
 ;;.S IENS1=IEN(1)_","_IENS,MULT(SEQ)=IENS1
"RTN","XUMFXH",305,0)
 ;.S FDA1(IFN,IENS1,.01)=MKEY
"RTN","XUMFXH",306,0)
 I MULT,MULT'=SEQ S IENS1=$G(MULT(+MULT)) Q:IENS1=""
"RTN","XUMFXH",307,0)
 S:MULT'=SEQ VALUE=$$VAL^XUMFX(IFN,FIELD,VUID,VALUE,"?+1,"_IENS) Q:VALUE="^"
"RTN","XUMFXH",308,0)
 S:$D(IENS1) FDA1(IFN,IENS1,FIELD)=VALUE
"RTN","XUMFXH",309,0)
 ;
"RTN","XUMFXH",310,0)
 Q
"RTN","XUMFXH",311,0)
 ;
"RTN","XUMFXH",312,0)
VALUE() ; -- handle HL7 continuation nodes
"RTN","XUMFXH",313,0)
 ;
"RTN","XUMFXH",314,0)
 Q:'$O(HLNODE(0)) $P(HLNODE,HLFS,SEQ+1)
"RTN","XUMFXH",315,0)
 ;
"RTN","XUMFXH",316,0)
 N COL
"RTN","XUMFXH",317,0)
 ;
"RTN","XUMFXH",318,0)
 D SEGPRSE^XUMFXHL7("HLNODE","COL")
"RTN","XUMFXH",319,0)
 ;
"RTN","XUMFXH",320,0)
 Q COL(SEQ)
"RTN","XUMFXH",321,0)
 ;
"RTN","XUMFXH",322,0)
ARRAY ; -- query data stored in array (not filed)
"RTN","XUMFXH",323,0)
 ;
"RTN","XUMFXH",324,0)
 N X S X=KEY S X=$S($P(X,HLCS)'="":$P(X,HLCS),1:$P(X,HLCS,4)) Q:X=""
"RTN","XUMFXH",325,0)
 ;
"RTN","XUMFXH",326,0)
 M ^TMP("XUMF ARRAY",$J,IFN,X)=HLNODE
"RTN","XUMFXH",327,0)
 ;
"RTN","XUMFXH",328,0)
 Q
"RTN","XUMFXH",329,0)
 ;
"RTN","XUMFXH",330,0)
EXIT ; -- cleanup, and quit
"RTN","XUMFXH",331,0)
 ;
"RTN","XUMFXH",332,0)
 ; post processing logic
"RTN","XUMFXH",333,0)
 S X=$G(^DIC(4.001,+IFN,2)) X:X'="" X
"RTN","XUMFXH",334,0)
 ;
"RTN","XUMFXH",335,0)
 K ^TMP("DILIST",$J),^TMP("DIERR",$J),^TMP("HLS",$J),^TMP("HLA",$J)
"RTN","XUMFXH",336,0)
 ;
"RTN","XUMFXH",337,0)
 K ^TMP("XUMF MFS",$J),^TMP("XUMF ERROR",$J)
"RTN","XUMFXH",338,0)
 ;
"RTN","XUMFXH",339,0)
 Q
"RTN","XUMFXH",340,0)
 ;
"RTN","XUMFXI")
0^2^B71443286
"RTN","XUMFXI",1,0)
XUMFXI ;ISS/RAM - MFS build message ;06/28/00
"RTN","XUMFXI",2,0)
 ;;8.0;KERNEL;**299,382**;Jul 10, 1995
"RTN","XUMFXI",3,0)
 ;
"RTN","XUMFXI",4,0)
 ; This routine is the Master File Server HL7 message builder API.
"RTN","XUMFXI",5,0)
 ; The routine will generate messages for both trigger events and
"RTN","XUMFXI",6,0)
 ; queries.
"RTN","XUMFXI",7,0)
 ;
"RTN","XUMFXI",8,0)
 ; Use the routine XUMFXP to initialize the PARAM array.
"RTN","XUMFXI",9,0)
 ; See XUMFXP for a full description of the parameters.
"RTN","XUMFXI",10,0)
 ;
"RTN","XUMFXI",11,0)
 ; use of $O(^HLCS(870,"C",institution_ptr)) supported by IA# 3550
"RTN","XUMFXI",12,0)
 ;
"RTN","XUMFXI",13,0)
MAIN(IFN,IEN,TYPE,PARAM,ERROR) ;  -- entry point
"RTN","XUMFXI",14,0)
 ;
"RTN","XUMFXI",15,0)
 ;
"RTN","XUMFXI",16,0)
 N HLFS,HLCS,HLRESLT,QUERY,UPDATE,ALL,CNT,ROOT,PROTOCOL,MFR,MFQ,MTYP,I
"RTN","XUMFXI",17,0)
 N ARRAY,GROUP,MFK,CDSYS,J,HLSCS
"RTN","XUMFXI",18,0)
 ;
"RTN","XUMFXI",19,0)
 M ^TMP("XUMF MFS",$J,"PARAM")=PARAM K PARAM
"RTN","XUMFXI",20,0)
 ;
"RTN","XUMFXI",21,0)
 D INIT,BUILD,LLNK,SEND,EXIT
"RTN","XUMFXI",22,0)
 ;
"RTN","XUMFXI",23,0)
 ;
"RTN","XUMFXI",24,0)
 Q
"RTN","XUMFXI",25,0)
 ;
"RTN","XUMFXI",26,0)
INIT ; -- initialize
"RTN","XUMFXI",27,0)
 ;
"RTN","XUMFXI",28,0)
 K ^TMP("DILIST",$J),^TMP("DIERR",$J)
"RTN","XUMFXI",29,0)
 K ^TMP("HLS",$J),^TMP("HLA",$J)
"RTN","XUMFXI",30,0)
 ;
"RTN","XUMFXI",31,0)
 S IEN=$G(IEN),IFN=$G(IFN)
"RTN","XUMFXI",32,0)
 S TYPE=$G(TYPE),ERROR=$G(ERROR),CNT=1
"RTN","XUMFXI",33,0)
 S UPDATE=$S(TYPE#2:0,1:1)
"RTN","XUMFXI",34,0)
 S QUERY='UPDATE
"RTN","XUMFXI",35,0)
 S GROUP=$S(UPDATE:0,TYPE[5:1,TYPE[7:1,1:0)
"RTN","XUMFXI",36,0)
 S ARRAY=$S(UPDATE:0,TYPE[3:1,TYPE[7:1,1:0)
"RTN","XUMFXI",37,0)
 S ALL=$S(IEN["ALL":1,1:0)
"RTN","XUMFXI",38,0)
 S PROTOCOL=$G(^TMP("XUMF MFS",$J,"PARAM","PROTOCOL"))
"RTN","XUMFXI",39,0)
 S MFR=$S(UPDATE:0,TYPE>10:1,1:0)
"RTN","XUMFXI",40,0)
 S MFQ=$S(UPDATE:0,'MFR:1,1:0)
"RTN","XUMFXI",41,0)
 S MFK=$S(TYPE=10:1,1:0)
"RTN","XUMFXI",42,0)
 S MTYP=$S(MFR:"HLA",MFK:"HLA",1:"HLS")
"RTN","XUMFXI",43,0)
 ;
"RTN","XUMFXI",44,0)
 ; -- get variables from HL7 package
"RTN","XUMFXI",45,0)
 I $O(HL(""))="" D INIT^HLFNC2(PROTOCOL,.HL)
"RTN","XUMFXI",46,0)
 I $O(HL(""))="" S ERROR="1^"_$P(HL,"^",2) Q
"RTN","XUMFXI",47,0)
 S HLFS=HL("FS"),HLCS=$E(HL("ECH")),HLSCS=$E(HL("ECH"),4)
"RTN","XUMFXI",48,0)
 ;
"RTN","XUMFXI",49,0)
 Q:ERROR
"RTN","XUMFXI",50,0)
 Q:MFK
"RTN","XUMFXI",51,0)
 ;
"RTN","XUMFXI",52,0)
 ; -- check parameters
"RTN","XUMFXI",53,0)
 I 'QUERY,'UPDATE S ERROR="1^invalid message type" Q
"RTN","XUMFXI",54,0)
 I 'IFN S ERROR="1^invalid file number" Q
"RTN","XUMFXI",55,0)
 I 'IEN,'ALL,'MFK S ERROR="1^invalid IEN" Q
"RTN","XUMFXI",56,0)
 I '$$VFILE^DILFD(IFN) S ERROR="1^invalid file number" Q
"RTN","XUMFXI",57,0)
 I UPDATE,'IEN S ERROR="1^update message requires an IEN" Q
"RTN","XUMFXI",58,0)
 ;
"RTN","XUMFXI",59,0)
 ; -- get root of file
"RTN","XUMFXI",60,0)
 S ROOT=$$ROOT^DILFD(IFN,,1)
"RTN","XUMFXI",61,0)
 ;
"RTN","XUMFXI",62,0)
 ; -- if IEN array input, merge with param
"RTN","XUMFXI",63,0)
 I 'ALL,'IEN,$O(IEN(0)) M ^TMP("XUMF MFS",$J,"PARAM","IEN")=IEN
"RTN","XUMFXI",64,0)
 ;
"RTN","XUMFXI",65,0)
 ; -- if CDSYS and ALL get entries
"RTN","XUMFXI",66,0)
 S CDSYS=$G(^TMP("XUMF MFS",$J,"PARAM","CDSYS"))
"RTN","XUMFXI",67,0)
 I ALL,CDSYS'="" D
"RTN","XUMFXI",68,0)
 .S I=0 F  S I=$O(@ROOT@("XUMFIDX",CDSYS,I)) Q:'I  D
"RTN","XUMFXI",69,0)
 ..S J=$O(@ROOT@("XUMFIDX",CDSYS,I,0))
"RTN","XUMFXI",70,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM","IEN",J)=""
"RTN","XUMFXI",71,0)
 ;
"RTN","XUMFXI",72,0)
 ; -- get ALL file 'national' entries
"RTN","XUMFXI",73,0)
 I ALL,'$D(^TMP("XUMF MFS",$J,"PARAM","IEN")) D
"RTN","XUMFXI",74,0)
 .S I=0 F  S I=$O(@ROOT@("AVUID",I)) Q:'I  D
"RTN","XUMFXI",75,0)
 ..S J=$O(@ROOT@("AVUID",I,0))
"RTN","XUMFXI",76,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM","IEN",J)=""
"RTN","XUMFXI",77,0)
 ;
"RTN","XUMFXI",78,0)
 Q
"RTN","XUMFXI",79,0)
 ;
"RTN","XUMFXI",80,0)
BUILD ; -- build message
"RTN","XUMFXI",81,0)
 ;
"RTN","XUMFXI",82,0)
 I MFK D MFK Q
"RTN","XUMFXI",83,0)
 ;
"RTN","XUMFXI",84,0)
 Q:ERROR
"RTN","XUMFXI",85,0)
 ;
"RTN","XUMFXI",86,0)
 N ID,APP,EVENT,ENDT,EFFDT,RESP,MFI,MFN,EDT,CODE,MFE
"RTN","XUMFXI",87,0)
 ;
"RTN","XUMFXI",88,0)
 I QUERY D QRD Q:MFQ
"RTN","XUMFXI",89,0)
 ;
"RTN","XUMFXI",90,0)
 D MFI
"RTN","XUMFXI",91,0)
 ;
"RTN","XUMFXI",92,0)
 I GROUP D GROUP Q
"RTN","XUMFXI",93,0)
 ;
"RTN","XUMFXI",94,0)
 D MFE,RDT
"RTN","XUMFXI",95,0)
 ;
"RTN","XUMFXI",96,0)
 Q
"RTN","XUMFXI",97,0)
 ;
"RTN","XUMFXI",98,0)
MFK ; -- master file acknowledgement
"RTN","XUMFXI",99,0)
 ;
"RTN","XUMFXI",100,0)
 N X,I,I1,I2
"RTN","XUMFXI",101,0)
 S X="MSA"_HLFS_$S(ERROR:"AE",1:"AA")_HLFS_HL("MID")_HLFS_$P(ERROR,U,2)
"RTN","XUMFXI",102,0)
 S ^TMP(MTYP,$J,CNT)=X
"RTN","XUMFXI",103,0)
 S CNT=CNT+1
"RTN","XUMFXI",104,0)
 ;
"RTN","XUMFXI",105,0)
 S I1="",I=0
"RTN","XUMFXI",106,0)
 F  S I1=$O(^TMP("XUMF ERROR",$J,I1)) Q:'$L(I1)  D
"RTN","XUMFXI",107,0)
 .S I2="" F  S I2=$O(^TMP("XUMF ERROR",$J,I1,I2)) Q:'$L(I2)  D
"RTN","XUMFXI",108,0)
 ..S X=$G(^(I2))
"RTN","XUMFXI",109,0)
 ..Q:'$L(X)
"RTN","XUMFXI",110,0)
 ..S I=I+1
"RTN","XUMFXI",111,0)
 ..S X="ERR"_HLFS_I_HLFS_$S($O(^TMP("XUMF ERROR",$J,I1))!$O(^TMP("XUMF ERROR",$J,I1,I2)):1,1:0)_HLFS_X
"RTN","XUMFXI",112,0)
 ..S ^TMP(MTYP,$J,CNT)=X
"RTN","XUMFXI",113,0)
 ..S CNT=CNT+1
"RTN","XUMFXI",114,0)
 ;
"RTN","XUMFXI",115,0)
 Q
"RTN","XUMFXI",116,0)
 ;
"RTN","XUMFXI",117,0)
QRD ; -- query definition segment
"RTN","XUMFXI",118,0)
 ;
"RTN","XUMFXI",119,0)
 I TYPE>10 D
"RTN","XUMFXI",120,0)
 .S ^TMP(MTYP,$J,CNT)="MSA"_HLFS_$S(ERROR:"AE",1:"AA")_HLFS_HL("MID")
"RTN","XUMFXI",121,0)
 .S CNT=CNT+1
"RTN","XUMFXI",122,0)
 ;
"RTN","XUMFXI",123,0)
 Q:ERROR
"RTN","XUMFXI",124,0)
 ;
"RTN","XUMFXI",125,0)
 N QDT,QFC,QP,QID,ZDRT,ZDRDT,QLR,WHO,WHAT,WDDC,WDCVQ,QRL,QRD
"RTN","XUMFXI",126,0)
 ;
"RTN","XUMFXI",127,0)
 S QDT=$G(^TMP("XUMF MFS",$J,"PARAM","QDT"))
"RTN","XUMFXI",128,0)
 S QFC=$G(^TMP("XUMF MFS",$J,"PARAM","QFC"))
"RTN","XUMFXI",129,0)
 S QP=$G(^TMP("XUMF MFS",$J,"PARAM","QP"))
"RTN","XUMFXI",130,0)
 S QID=$G(^TMP("XUMF MFS",$J,"PARAM","QID"))
"RTN","XUMFXI",131,0)
 S ZDRT=$G(^TMP("XUMF MFS",$J,"PARAM","DRT"))
"RTN","XUMFXI",132,0)
 S ZDRDT=$G(^TMP("XUMF MFS",$J,"PARAM","DRDT"))
"RTN","XUMFXI",133,0)
 S QLR=$G(^TMP("XUMF MFS",$J,"PARAM","QLR"))
"RTN","XUMFXI",134,0)
 S WHO=$G(^TMP("XUMF MFS",$J,"PARAM","WHO"))
"RTN","XUMFXI",135,0)
 S WHAT=$G(^TMP("XUMF MFS",$J,"PARAM","WHAT"))
"RTN","XUMFXI",136,0)
 S WDDC=$G(^TMP("XUMF MFS",$J,"PARAM","WDDC"))
"RTN","XUMFXI",137,0)
 S WDCVQ=$G(^TMP("XUMF MFS",$J,"PARAM","WDCVQ"))
"RTN","XUMFXI",138,0)
 S QRL=$G(^TMP("XUMF MFS",$J,"PARAM","QRL"))
"RTN","XUMFXI",139,0)
 S QRD="QRD"_HLFS_QDT_HLFS_QFC_HLFS_QP_HLFS_QID_HLFS_ZDRT_HLFS_ZDRDT
"RTN","XUMFXI",140,0)
 S QRD=QRD_HLFS_QLR_HLFS_WHO_HLFS_WHAT_HLFS_WDDC_HLFS_WDCVQ_HLFS_QRL
"RTN","XUMFXI",141,0)
 S ^TMP(MTYP,$J,CNT)=QRD
"RTN","XUMFXI",142,0)
 S CNT=CNT+1
"RTN","XUMFXI",143,0)
 ;
"RTN","XUMFXI",144,0)
 Q
"RTN","XUMFXI",145,0)
 ;
"RTN","XUMFXI",146,0)
MFI ; master file identifier segment
"RTN","XUMFXI",147,0)
 ;
"RTN","XUMFXI",148,0)
 Q:ERROR
"RTN","XUMFXI",149,0)
 ;
"RTN","XUMFXI",150,0)
 N ID,APP,EVENT,ENDT,EFFDT,RESP,MFI
"RTN","XUMFXI",151,0)
 ;
"RTN","XUMFXI",152,0)
 S ID=$G(^TMP("XUMF MFS",$J,"PARAM","MFI"))
"RTN","XUMFXI",153,0)
 S APP=$G(^TMP("XUMF MFS",$J,"PARAM","MFAI"))
"RTN","XUMFXI",154,0)
 S EVENT=$G(^TMP("XUMF MFS",$J,"PARAM","FLEV"))
"RTN","XUMFXI",155,0)
 S ENDT=$G(^TMP("XUMF MFS",$J,"PARAM","ENDT"))
"RTN","XUMFXI",156,0)
 S EFFDT=$G(^TMP("XUMF MFS",$J,"PARAM","MFIEDT"))
"RTN","XUMFXI",157,0)
 S RESP=$G(^TMP("XUMF MFS",$J,"PARAM","RLC"))
"RTN","XUMFXI",158,0)
 S:APP="" APP="MFS" S:EVENT="" EVENT="REP" S:RESP="" RESP="NE"
"RTN","XUMFXI",159,0)
 S:ENDT="" ENDT=$$NOW^XLFDT S:EFFDT="" EFFDT=$$NOW^XLFDT
"RTN","XUMFXI",160,0)
 S MFI=$$MFI^XUMFMFI(ID,APP,EVENT,ENDT,EFFDT,RESP)
"RTN","XUMFXI",161,0)
 I $E(MFI)="-" S ERROR=MFI Q
"RTN","XUMFXI",162,0)
 S ^TMP(MTYP,$J,CNT)=MFI
"RTN","XUMFXI",163,0)
 S CNT=CNT+1
"RTN","XUMFXI",164,0)
 ;
"RTN","XUMFXI",165,0)
 Q
"RTN","XUMFXI",166,0)
 ;
"RTN","XUMFXI",167,0)
MFE ; master file entry segment
"RTN","XUMFXI",168,0)
 ;
"RTN","XUMFXI",169,0)
 Q:ERROR
"RTN","XUMFXI",170,0)
 ;
"RTN","XUMFXI",171,0)
 N EVENT,MFN,EDT,CODE,MFE
"RTN","XUMFXI",172,0)
 ;
"RTN","XUMFXI",173,0)
 S EVENT=$G(^TMP("XUMF MFS",$J,"PARAM","RLEC"))
"RTN","XUMFXI",174,0)
 S MFN=$G(^TMP("XUMF MFS",$J,"PARAM","MFNCID"))
"RTN","XUMFXI",175,0)
 S EDT=$G(^TMP("XUMF MFS",$J,"PARAM","MFEEDT"))
"RTN","XUMFXI",176,0)
 S CODE=$G(^TMP("XUMF MFS",$J,"PARAM","PKV"))
"RTN","XUMFXI",177,0)
 S:EDT="" EDT=$$NOW^XLFDT S:EVENT="" EVENT="MAD"
"RTN","XUMFXI",178,0)
 S MFE=$$MFE^XUMFMFE(EVENT,MFN,EDT,CODE)
"RTN","XUMFXI",179,0)
 I $E(MFE)="-" S ERROR=MFE Q
"RTN","XUMFXI",180,0)
 S ^TMP(MTYP,$J,CNT)=MFE
"RTN","XUMFXI",181,0)
 S CNT=CNT+1
"RTN","XUMFXI",182,0)
 ;
"RTN","XUMFXI",183,0)
 Q
"RTN","XUMFXI",184,0)
 ;
"RTN","XUMFXI",185,0)
RDT ; table row definition/data segment
"RTN","XUMFXI",186,0)
 ;
"RTN","XUMFXI",187,0)
 Q:ERROR
"RTN","XUMFXI",188,0)
 ;
"RTN","XUMFXI",189,0)
 N SEG,SEQ,ZZZ,FLD,FILE,IENS,VALUE,ERR,ZDTYP,FIELD,SEQ1,SEQ2,SEQ3
"RTN","XUMFXI",190,0)
 N SEQ0,SEQ9,CNT1,CNT2,NODE,XXX,LKUP
"RTN","XUMFXI",191,0)
 ;
"RTN","XUMFXI",192,0)
 S SEQ=0
"RTN","XUMFXI",193,0)
 F  S SEQ=$O(^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ)) Q:'SEQ  D
"RTN","XUMFXI",194,0)
 .;
"RTN","XUMFXI",195,0)
 .S FLD=$O(^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,0))
"RTN","XUMFXI",196,0)
 .;
"RTN","XUMFXI",197,0)
 .I 'FLD D
"RTN","XUMFXI",198,0)
 ..S FILE=^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,"FILE")
"RTN","XUMFXI",199,0)
 ..S IENS=$G(^TMP("XUMF MFS",$J,"PARAM","IENS",SEQ))
"RTN","XUMFXI",200,0)
 ..S FIELD=^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,"FIELD")
"RTN","XUMFXI",201,0)
 ..S ZDTYP=^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,"DTYP")
"RTN","XUMFXI",202,0)
 ..S LKUP=$G(^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,"LKUP"))
"RTN","XUMFXI",203,0)
 ..I LKUP S FIELD=FIELD_":"_LKUP
"RTN","XUMFXI",204,0)
 ..S VALUE=$$GET1^DIQ(FILE,IENS,FIELD)
"RTN","XUMFXI",205,0)
 ..S VALUE=$$DTYP^XUMFXP(VALUE,ZDTYP,HLCS,1)
"RTN","XUMFXI",206,0)
 .I FLD D
"RTN","XUMFXI",207,0)
 ..S ZDTYP=$G(^TMP("XUMF MFS",$J,"PARAM","SEQ",SEQ,FLD))
"RTN","XUMFXI",208,0)
 ..S LKUP=$P(ZDTYP,U,2),ZDTYP=$P(ZDTYP,U)
"RTN","XUMFXI",209,0)
 ..I LKUP S FLD=FLD_":"_LKUP
"RTN","XUMFXI",210,0)
 ..S VALUE=$$GET1^DIQ(IFN,IEN_",",FLD)
"RTN","XUMFXI",211,0)
 ..S VALUE=$$DTYP^XUMFXP(VALUE,ZDTYP,HLCS,1)
"RTN","XUMFXI",212,0)
 .;
"RTN","XUMFXI",213,0)
 .S ZZZ(SEQ)=VALUE
"RTN","XUMFXI",214,0)
 ;
"RTN","XUMFXI",215,0)
 K NODE
"RTN","XUMFXI",216,0)
 S (SEQ,SEQ0,SEQ9,SEQ1,CNT1)=0,NODE(0)=""
"RTN","XUMFXI",217,0)
 F  S SEQ1=$O(ZZZ(SEQ1)) Q:'SEQ1  D
"RTN","XUMFXI",218,0)
 .S VALUE=ZZZ(SEQ1)
"RTN","XUMFXI",219,0)
 .I $L(NODE(CNT1)_VALUE)>200 D
"RTN","XUMFXI",220,0)
 ..S CNT1=CNT1+1,SEQ9=SEQ0+SEQ9
"RTN","XUMFXI",221,0)
 .S SEQ=$S('CNT1:SEQ1,1:SEQ1-SEQ9)
"RTN","XUMFXI",222,0)
 .S $P(NODE(CNT1),HLFS,SEQ)=VALUE
"RTN","XUMFXI",223,0)
 .S SEQ0=SEQ-1
"RTN","XUMFXI",224,0)
 ;
"RTN","XUMFXI",225,0)
 S NODE="RDT"_HLFS_$G(NODE(0)) K NODE(0)
"RTN","XUMFXI",226,0)
 ;
"RTN","XUMFXI",227,0)
 M ^TMP(MTYP,$J,CNT)=^TMP("XUMF MFS",$J,"PARAM","RDF")
"RTN","XUMFXI",228,0)
 S CNT=CNT+1
"RTN","XUMFXI",229,0)
 M ^TMP(MTYP,$J,CNT)=NODE
"RTN","XUMFXI",230,0)
 S CNT=CNT+1
"RTN","XUMFXI",231,0)
 ;
"RTN","XUMFXI",232,0)
 Q
"RTN","XUMFXI",233,0)
 ;
"RTN","XUMFXI",234,0)
GROUP ; -- query group records
"RTN","XUMFXI",235,0)
 ;
"RTN","XUMFXI",236,0)
 Q:ERROR
"RTN","XUMFXI",237,0)
 ;
"RTN","XUMFXI",238,0)
 S IEN=0
"RTN","XUMFXI",239,0)
 F  S IEN=$O(^TMP("XUMF MFS",$J,"PARAM","IEN",IEN)) Q:'IEN  D
"RTN","XUMFXI",240,0)
 .K ^TMP("XUMF MFS",$J,"PARAM","PKV")
"RTN","XUMFXI",241,0)
 .K ^TMP("XUMF MFS",$J,"PARAM","IENS")
"RTN","XUMFXI",242,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","PKV")=^TMP("XUMF MFS",$J,"PARAM",IEN,"PKV")
"RTN","XUMFXI",243,0)
 .M ^TMP("XUMF MFS",$J,"PARAM","IENS")=^TMP("XUMF MFS",$J,"PARAM",IEN,"IENS")
"RTN","XUMFXI",244,0)
 .D MFE,RDT
"RTN","XUMFXI",245,0)
 ;
"RTN","XUMFXI",246,0)
 Q
"RTN","XUMFXI",247,0)
 ;
"RTN","XUMFXI",248,0)
SEND ; -- send HL7 message
"RTN","XUMFXI",249,0)
 ;
"RTN","XUMFXI",250,0)
 I 'MFK,ERROR Q
"RTN","XUMFXI",251,0)
 ;
"RTN","XUMFXI",252,0)
 S HLP("PRIORITY")="I"
"RTN","XUMFXI",253,0)
 ;
"RTN","XUMFXI",254,0)
 I 'TYPE D GENERATE^HLMA(PROTOCOL,"GM",1,.HLRESLT,"",.HLP)
"RTN","XUMFXI",255,0)
 I TYPE,(TYPE<10) D DIRECT^HLMA(PROTOCOL,"GM",1,.HLRESLT,"",.HLP)
"RTN","XUMFXI",256,0)
 I (TYPE>9) D GENACK^HLMA1($G(HL("EID")),$G(HLMTIENS),$G(HL("EIDS")),"GM",1,.HLRESLT)
"RTN","XUMFXI",257,0)
 ;
"RTN","XUMFXI",258,0)
 ; check for error
"RTN","XUMFXI",259,0)
 I ($P($G(HLRESLT),U,3)'="") D  Q
"RTN","XUMFXI",260,0)
 .S ERROR=1_U_$P(HLRESLT,HLFS,3)_U_$P(HLRESLT,HLFS,2)_U_$P(HLRESLT,U)
"RTN","XUMFXI",261,0)
 ;
"RTN","XUMFXI",262,0)
 ; successful call, message ID returned
"RTN","XUMFXI",263,0)
 S ERROR="0^"_$P($G(HLRESLT),U,1)
"RTN","XUMFXI",264,0)
 ;
"RTN","XUMFXI",265,0)
 Q
"RTN","XUMFXI",266,0)
 ;
"RTN","XUMFXI",267,0)
EXIT ; -- exit
"RTN","XUMFXI",268,0)
 ;
"RTN","XUMFXI",269,0)
 D CLEAN^DILF
"RTN","XUMFXI",270,0)
 ;
"RTN","XUMFXI",271,0)
 K ^TMP("HLS",$J),^TMP("HLA",$J)
"RTN","XUMFXI",272,0)
 K ^TMP("XUMF MFS",$J)
"RTN","XUMFXI",273,0)
 ;
"RTN","XUMFXI",274,0)
 Q
"RTN","XUMFXI",275,0)
 ;
"RTN","XUMFXI",276,0)
LLNK ; -- dynamic addressing BROADCAST
"RTN","XUMFXI",277,0)
 ;
"RTN","XUMFXI",278,0)
 Q:TYPE>9
"RTN","XUMFXI",279,0)
 ;
"RTN","XUMFXI",280,0)
 I $G(^TMP("XUMF MFS",$J,"PARAM","LLNK"))'="" D  Q
"RTN","XUMFXI",281,0)
 .S HLL("LINKS",1)=^TMP("XUMF MFS",$J,"PARAM","LLNK")
"RTN","XUMFXI",282,0)
 ;
"RTN","XUMFXI",283,0)
 Q:'$$SERVER()
"RTN","XUMFXI",284,0)
 ;
"RTN","XUMFXI",285,0)
 Q:TYPE
"RTN","XUMFXI",286,0)
 Q:'$G(^TMP("XUMF MFS",$J,"PARAM","BROADCAST"))
"RTN","XUMFXI",287,0)
 ;
"RTN","XUMFXI",288,0)
 N I,J,LLNK
"RTN","XUMFXI",289,0)
 ;
"RTN","XUMFXI",290,0)
 S (I,J)=0
"RTN","XUMFXI",291,0)
 F  S I=$O(^HLCS(870,"C",I)) Q:'I  D
"RTN","XUMFXI",292,0)
 .S J=$O(^HLCS(870,"C",I,0)) Q:'J
"RTN","XUMFXI",293,0)
 .S LLNK=$P($G(^HLCS(870,J,0)),U)
"RTN","XUMFXI",294,0)
 .S HLL("LINKS",I)="XUMF MFS^"_LLNK
"RTN","XUMFXI",295,0)
 ;
"RTN","XUMFXI",296,0)
 Q
"RTN","XUMFXI",297,0)
 ;
"RTN","XUMFXI",298,0)
SERVER() ; -- servers
"RTN","XUMFXI",299,0)
 ;
"RTN","XUMFXI",300,0)
 N I
"RTN","XUMFXI",301,0)
 ;
"RTN","XUMFXI",302,0)
 S I=$$KSP^XUPARAM("INST") Q:'I 0
"RTN","XUMFXI",303,0)
 ;
"RTN","XUMFXI",304,0)
 Q:I=662 1  ;VAB
"RTN","XUMFXI",305,0)
 Q:I=442 1  ;BP TEST
"RTN","XUMFXI",306,0)
 Q:I=12000 1  ;FORUM
"RTN","XUMFXI",307,0)
 Q:I=100002 1  ;HEC
"RTN","XUMFXI",308,0)
 ;
"RTN","XUMFXI",309,0)
 Q 0
"RTN","XUMFXI",310,0)
 ;
"VER")
8.0^22.0
"^DD",4.001,4.001,0)
FIELD^^.07^23
"^DD",4.001,4.001,0,"DDA")
N
"^DD",4.001,4.001,0,"DT")
3050516
"^DD",4.001,4.001,0,"IX","B",4.001,.01)

"^DD",4.001,4.001,0,"IX","MFI",4.001,.03)

"^DD",4.001,4.001,0,"IX","ZZZ",4.001,.02)

"^DD",4.001,4.001,0,"NM","MASTER FILE PARAMETERS")

"^DD",4.001,4.001,0,"VRPK")
XU
"^DD",4.001,4.001,.01,0)
MASTER FILE^RP1X^DIC(^0;1^S DINUM=X
"^DD",4.001,4.001,.01,1,0)
^.1
"^DD",4.001,4.001,.01,1,1,0)
4.001^B
"^DD",4.001,4.001,.01,1,1,1)
S ^DIC(4.001,"B",$E(X,1,30),DA)=""
"^DD",4.001,4.001,.01,1,1,2)
K ^DIC(4.001,"B",$E(X,1,30),DA)
"^DD",4.001,4.001,.01,3)
Select file to be supported by the Master File Server (MFS) mechanism.
"^DD",4.001,4.001,.01,21,0)
^^3^3^3031223^
"^DD",4.001,4.001,.01,21,1,0)
This field is the Internal File Number (IFN) of the
"^DD",4.001,4.001,.01,21,2,0)
Master File table supported by the Master File Server
"^DD",4.001,4.001,.01,21,3,0)
(MFS).
"^DD",4.001,4.001,.01,"DT")
3031226
"^DD",4.001,4.001,.02,0)
SEGMENT NAME^RFX^^0;2^K:$L(X)>3!($L(X)<3) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,.02,1,0)
^.1
"^DD",4.001,4.001,.02,1,1,0)
4.001^ZZZ
"^DD",4.001,4.001,.02,1,1,1)
S ^DIC(4.001,"ZZZ",$E(X,1,30),DA)=""
"^DD",4.001,4.001,.02,1,1,2)
K ^DIC(4.001,"ZZZ",$E(X,1,30),DA)
"^DD",4.001,4.001,.02,1,1,"%D",0)
^^3^3^3031223^
"^DD",4.001,4.001,.02,1,1,"%D",1,0)
This x-ref is the segment name.  The MFS handler
"^DD",4.001,4.001,.02,1,1,"%D",2,0)
checks incoming message data segments against this
"^DD",4.001,4.001,.02,1,1,"%D",3,0)
x-ref to verify the file is supported.
"^DD",4.001,4.001,.02,1,1,"DT")
3031223
"^DD",4.001,4.001,.02,3)
Enter the HL7 data segment or Z segment name.
"^DD",4.001,4.001,.02,21,0)
^^2^2^3031223^
"^DD",4.001,4.001,.02,21,1,0)
This field holds the name of the HL7 data segment
"^DD",4.001,4.001,.02,21,2,0)
that hold the actual table values.
"^DD",4.001,4.001,.02,"DT")
3031226
"^DD",4.001,4.001,.03,0)
MFI CODE^RFX^^0;3^K:$L(X)>60!($L(X)<2) X
"^DD",4.001,4.001,.03,1,0)
^.1
"^DD",4.001,4.001,.03,1,1,0)
4.001^MFI
"^DD",4.001,4.001,.03,1,1,1)
S ^DIC(4.001,"MFI",$E(X,1,60),DA)=""
"^DD",4.001,4.001,.03,1,1,2)
K ^DIC(4.001,"MFI",$E(X,1,60),DA)
"^DD",4.001,4.001,.03,1,1,"%D",0)
^^1^1^3031223^
"^DD",4.001,4.001,.03,1,1,"%D",1,0)
This x-ref is the Master File Identifier (MFI).
"^DD",4.001,4.001,.03,1,1,"DT")
3031223
"^DD",4.001,4.001,.03,3)
Answer must be 2-60 characters in length.
"^DD",4.001,4.001,.03,21,0)
^^1^1^3031224^^
"^DD",4.001,4.001,.03,21,1,0)
This code identifies the master file.
"^DD",4.001,4.001,.03,"DT")
3041220
"^DD",4.001,4.001,.04,0)
PRE-UPDATE ROUTINE^RFX^^0;4^K:$L(X)>20!($L(X)<3) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,.04,3)
Enter the label of sub-routine in XUMFR to be executed prior to the MFS update.
"^DD",4.001,4.001,.04,21,0)
^^20^20^3031226^^^
"^DD",4.001,4.001,.04,21,1,0)
This field holds the label of the 
"^DD",4.001,4.001,.04,21,2,0)
sub-routine in XUMFR that gets called
"^DD",4.001,4.001,.04,21,3,0)
before an update by the MFS for a
"^DD",4.001,4.001,.04,21,4,0)
data type segment.  
"^DD",4.001,4.001,.04,21,5,0)
                                 
"^DD",4.001,4.001,.04,21,6,0)
Enter the label without '^XUMFR'.  The
"^DD",4.001,4.001,.04,21,7,0)
sub-routine can assume the presence of the
"^DD",4.001,4.001,.04,21,8,0)
variables IFN and IEN.  All local variables
"^DD",4.001,4.001,.04,21,9,0)
within the sub-routine must be NEW'd 
"^DD",4.001,4.001,.04,21,10,0)
before using them.
"^DD",4.001,4.001,.04,21,11,0)
                                 
"^DD",4.001,4.001,.04,21,12,0)
The default value for this field is 
"^DD",4.001,4.001,.04,21,13,0)
'PRE'.  The PRE sub-routine builds
"^DD",4.001,4.001,.04,21,14,0)
the current values of the entry in
"^DD",4.001,4.001,.04,21,15,0)
question (associated with the IEN)
"^DD",4.001,4.001,.04,21,16,0)
into an array (^TMP("XUMF PRE",$J,SEQ)
"^DD",4.001,4.001,.04,21,17,0)
=fieldLabel_": "_value). 
"^DD",4.001,4.001,.04,21,18,0)

"^DD",4.001,4.001,.04,21,19,0)
This field is required, so if you have
"^DD",4.001,4.001,.04,21,20,0)
no processing use NULL.
"^DD",4.001,4.001,.04,"DT")
3031226
"^DD",4.001,4.001,.05,0)
POST-UPDATE ROUTINE^FX^^0;5^K:$L(X)>20!($L(X)<3) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,.05,3)
Enter the label of sub-routine in XUMFR to be executed after MFS updates.
"^DD",4.001,4.001,.05,21,0)
^.001^18^18^3050516^^^^
"^DD",4.001,4.001,.05,21,1,0)
This field holds the label of the sub-routine in XUMFR that gets called
"^DD",4.001,4.001,.05,21,2,0)
after an update by the MFS for a data type segment.
"^DD",4.001,4.001,.05,21,3,0)
 
"^DD",4.001,4.001,.05,21,4,0)
Enter the label without '^XUMFR'.  The sub-routine can assume the presence
"^DD",4.001,4.001,.05,21,5,0)
of the variables IFN and IEN.  All local variables within the sub-routine
"^DD",4.001,4.001,.05,21,6,0)
must be NEW'd before using them.
"^DD",4.001,4.001,.05,21,7,0)
 
"^DD",4.001,4.001,.05,21,8,0)
The default value for this field is 'POST'.  The POST sub-routine builds
"^DD",4.001,4.001,.05,21,9,0)
the new values of the entry in question (associated with the IEN) and
"^DD",4.001,4.001,.05,21,10,0)
compares them against the previous values (prior to update) to determine
"^DD",4.001,4.001,.05,21,11,0)
if any values changed.  If the values have changed a MailMan notification
"^DD",4.001,4.001,.05,21,12,0)
is sent to the XUMF SERVER mail group and the group identified by MAIL
"^DD",4.001,4.001,.05,21,13,0)
GROUP of this MASTER FILE PARAMERS entry.
"^DD",4.001,4.001,.05,21,14,0)
 
"^DD",4.001,4.001,.05,21,15,0)
Note: if the post-update routine calls POST^XUMFR then pre-update routine
"^DD",4.001,4.001,.05,21,16,0)
must call PRE^XUMFR.
"^DD",4.001,4.001,.05,21,17,0)

"^DD",4.001,4.001,.05,21,18,0)
This field is required, so if you have no processing use NULL.
"^DD",4.001,4.001,.05,"DT")
3050516
"^DD",4.001,4.001,.06,0)
MAIL GROUP^P3.8X^XMB(3.8,^0;6^K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,.06,3)
Enter the mail group that will receive update notifications.
"^DD",4.001,4.001,.06,21,0)
^^3^3^3031224^^
"^DD",4.001,4.001,.06,21,1,0)
This mail group will be notified when an HL7 unsolicited update
"^DD",4.001,4.001,.06,21,2,0)
message is received from the MFS server.  This group will be notified
"^DD",4.001,4.001,.06,21,3,0)
in addition to the group XUMF SERVER.
"^DD",4.001,4.001,.06,"DT")
3031226
"^DD",4.001,4.001,.07,0)
POST-PROCESSING LOGIC^K^^2;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",4.001,4.001,.07,3)
This is Standard MUMPS code that gets executed after message processing.
"^DD",4.001,4.001,.07,9)
@
"^DD",4.001,4.001,.07,21,0)
^.001^1^1^3050225^^
"^DD",4.001,4.001,.07,21,1,0)
This is Standard MUMPS code that gets executed after message processing.
"^DD",4.001,4.001,.07,"DT")
3050225
"^DD",4.001,4.001,1,0)
COLUMN^4.011^^1;0
"^DD",4.001,4.001,1,21,0)
^.001^4^4^3040420^^^^
"^DD",4.001,4.001,1,21,1,0)
The COLUMN DESCRIPTION multiple maps the data type segment fields
"^DD",4.001,4.001,1,21,2,0)
and components to FileMan fields for a standard table.  There are
"^DD",4.001,4.001,1,21,3,0)
additional fields within the sub-file to handle multiple field types
"^DD",4.001,4.001,1,21,4,0)
and extended references.
"^DD",4.001,4.001,1,"DT")
3040420
"^DD",4.001,4.001,4.1,0)
MFE ID FIELD^RRNJ17,7X^^MFE;1^Q
"^DD",4.001,4.001,4.1,3)
Enter the field # that corresponds to the PKV id.
"^DD",4.001,4.001,4.1,21,0)
^^5^5^3031224^
"^DD",4.001,4.001,4.1,21,1,0)
This field holds the field number that corresponds to the ID
"^DD",4.001,4.001,4.1,21,2,0)
of the Primary Key Value in MFE.
"^DD",4.001,4.001,4.1,21,3,0)
 
"^DD",4.001,4.001,4.1,21,4,0)
This field # is the SDS field added to the file to store the internal
"^DD",4.001,4.001,4.1,21,5,0)
identifier to the SDS database.
"^DD",4.001,4.001,4.1,"DT")
3031230
"^DD",4.001,4.001,4.11,0)
MFE ID TYPE^RP771.4'X^HL(771.4,^MFE;11^K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.11,3)
Enter HL7 data type.
"^DD",4.001,4.001,4.11,21,0)
^^1^1^3031224^
"^DD",4.001,4.001,4.11,21,1,0)
MFE ID HL7 data type.
"^DD",4.001,4.001,4.11,"DT")
3031226
"^DD",4.001,4.001,4.12,0)
MFE TEXT TYPE^RP771.4'X^HL(771.4,^MFE;12^K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.12,3)
Enter the HL7 data type.
"^DD",4.001,4.001,4.12,21,0)
^^1^1^3031224^
"^DD",4.001,4.001,4.12,21,1,0)
Enter the MFE TEXT HL7 data type.
"^DD",4.001,4.001,4.12,"DT")
3031226
"^DD",4.001,4.001,4.14,0)
MFE ALT ID TYPE^RP771.4'X^HL(771.4,^MFE;14^K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.14,3)
Enter the HL7 data type.
"^DD",4.001,4.001,4.14,21,0)
^^1^1^3031224^
"^DD",4.001,4.001,4.14,21,1,0)
Enter the MFE ID HL7 data type.
"^DD",4.001,4.001,4.14,"DT")
3031226
"^DD",4.001,4.001,4.15,0)
MFE ALT TEXT TYPE^RP771.4'X^HL(771.4,^MFE;15^K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.15,3)
Enter the HL7 data type.
"^DD",4.001,4.001,4.15,21,0)
^^1^1^3031224^
"^DD",4.001,4.001,4.15,21,1,0)
Enter the MFE ALT TEXT HL7 data type.
"^DD",4.001,4.001,4.15,"DT")
3031226
"^DD",4.001,4.001,4.16,0)
MFE PRE-UPDATE ROUTINE^RFX^^MFE;16^K:$L(X)>8!($L(X)<2) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.16,3)
Enter the subroutine label that executes prior to MFE.
"^DD",4.001,4.001,4.16,21,0)
^.001^6^6^3050516^^
"^DD",4.001,4.001,4.16,21,1,0)
This field holds the label of the sub-routine in XUMFRMFE that gets called
"^DD",4.001,4.001,4.16,21,2,0)
before an update by the MFS for an MFE segment.
"^DD",4.001,4.001,4.16,21,3,0)
 
"^DD",4.001,4.001,4.16,21,4,0)
Enter the label without '^XUMFRMFE'.  The sub-routine can assume the presence
"^DD",4.001,4.001,4.16,21,5,0)
of the variable IFN.  All local variables within the sub-routine
"^DD",4.001,4.001,4.16,21,6,0)
must be NEW'd before using the.
"^DD",4.001,4.001,4.16,"DT")
3031226
"^DD",4.001,4.001,4.17,0)
MFE POST-UPDATE ROUTINE^RFX^^MFE;17^K:$L(X)>8!($L(X)<2) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.17,3)
Enter the subroutine label that executes after the MFE segment.
"^DD",4.001,4.001,4.17,21,0)
^.001^6^6^3050516^^
"^DD",4.001,4.001,4.17,21,1,0)
This field holds the label of the sub-routine in XUMFRMFE that gets called
"^DD",4.001,4.001,4.17,21,2,0)
after an update by the MFS for an MFE segment.                             
"^DD",4.001,4.001,4.17,21,3,0)
 
"^DD",4.001,4.001,4.17,21,4,0)
Enter the label without '^XUMFRMFE'.  The sub-routine can assume the presence
"^DD",4.001,4.001,4.17,21,5,0)
of the variables IFN and IEN.  All local variables within the sub-routine
"^DD",4.001,4.001,4.17,21,6,0)
must be NEW'd before using them.
"^DD",4.001,4.001,4.17,"DT")
3031226
"^DD",4.001,4.001,4.2,0)
MFE TEXT FIELD^RNJ17,7X^^MFE;2^Q
"^DD",4.001,4.001,4.2,3)
Enter the field # that corresponds to the PKV text.
"^DD",4.001,4.001,4.2,21,0)
^^2^2^3031224^^
"^DD",4.001,4.001,4.2,21,1,0)
This field holds the field number that corresponds to the TEXT
"^DD",4.001,4.001,4.2,21,2,0)
of the Primary Key Value in MFE.
"^DD",4.001,4.001,4.2,"DT")
3031230
"^DD",4.001,4.001,4.3,0)
MFE CODSYS^RFX^^MFE;3^K:$L(X)>20!($L(X)<1) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.3,3)
Enter the coding system for the MFE ID.
"^DD",4.001,4.001,4.3,21,0)
^^2^2^3031224^^
"^DD",4.001,4.001,4.3,21,1,0)
This field holds the coding system that corresponds to the ID
"^DD",4.001,4.001,4.3,21,2,0)
of the Primary Key Value in MFE.
"^DD",4.001,4.001,4.3,"DT")
3031226
"^DD",4.001,4.001,4.4,0)
MFE ALT ID FIELD^RNJ17,7X^^MFE;4^Q
"^DD",4.001,4.001,4.4,3)
Enter the field # that corresponds to the PKV alternate id.
"^DD",4.001,4.001,4.4,21,0)
^^7^7^3031224^
"^DD",4.001,4.001,4.4,21,1,0)
This field holds the field number that corresponds to the
"^DD",4.001,4.001,4.4,21,2,0)
alternate ID of the Primary Key Value in MFE.
"^DD",4.001,4.001,4.4,21,3,0)
 
"^DD",4.001,4.001,4.4,21,4,0)
The field # should be a key field to the file (not the SDS identifier
"^DD",4.001,4.001,4.4,21,5,0)
field).  This field will be used by MFS to determine which entry in
"^DD",4.001,4.001,4.4,21,6,0)
the file corresponds to the PKV id if it hasn't been already associated.
"^DD",4.001,4.001,4.4,21,7,0)
Ideally, this field is a unique key to the file.
"^DD",4.001,4.001,4.4,"DT")
3031230
"^DD",4.001,4.001,4.5,0)
MFE ALT TEXT FIELD^RNJ17,7X^^MFE;5^Q
"^DD",4.001,4.001,4.5,3)
Enter the field # that corresponds to the PKV alternate text.
"^DD",4.001,4.001,4.5,21,0)
^^2^2^3031224^
"^DD",4.001,4.001,4.5,21,1,0)
This field holds the field number that corresponds to the
"^DD",4.001,4.001,4.5,21,2,0)
alternate TEXT of the Primary Key Value in MFE.
"^DD",4.001,4.001,4.5,"DT")
3031230
"^DD",4.001,4.001,4.6,0)
MFE ALT CODSYS^RFX^^MFE;6^K:$L(X)>20!($L(X)<2) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.6,3)
Enter the alternate coding system of the PKV.
"^DD",4.001,4.001,4.6,21,0)
^.001^2^2^3050331^^
"^DD",4.001,4.001,4.6,21,1,0)
This field holds the alternate coding system that corresponds
"^DD",4.001,4.001,4.6,21,2,0)
to the ID of the Primary Key Value in MFE.
"^DD",4.001,4.001,4.6,"DT")
3031226
"^DD",4.001,4.001,4.7,0)
MFE PKV TYPE^RP771.4'X^HL(771.4,^MFE;7^K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.7,3)
Enter the PKV type (i.e., CE or PL) CE or Composite Element.
"^DD",4.001,4.001,4.7,21,0)
^^3^3^3031224^^
"^DD",4.001,4.001,4.7,21,1,0)
This field holds the Primary Key Value data
"^DD",4.001,4.001,4.7,21,2,0)
type.  Valid values stored in HL7 Table 0355 -
"^DD",4.001,4.001,4.7,21,3,0)
Primary key value type.
"^DD",4.001,4.001,4.7,"DT")
3031226
"^DD",4.001,4.001,4.8,0)
MFE PKV X-REF^RFX^^MFE;8^K:$L(X)>10!($L(X)<1) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.8,3)
Enter the FM x-ref of non-SDS key field - MFE.4.4
"^DD",4.001,4.001,4.8,21,0)
^^6^6^3031224^^
"^DD",4.001,4.001,4.8,21,1,0)
This field hold the FileMan cross-reference of
"^DD",4.001,4.001,4.8,21,2,0)
the Primary Key Value (PKV).
"^DD",4.001,4.001,4.8,21,3,0)
 
"^DD",4.001,4.001,4.8,21,4,0)
Since MFE.4.1 is the SDS internal identifier then provide
"^DD",4.001,4.001,4.8,21,5,0)
the alternate ID (MFE.4.4) cross-reference.  The natural
"^DD",4.001,4.001,4.8,21,6,0)
FileMan key x-ref that corresponds to the alt id.
"^DD",4.001,4.001,4.8,"DT")
3031226
"^DD",4.001,4.001,4.9,0)
ASSIGNING AUTHORITY^RFX^^MFE;9^K:$L(X)>20!($L(X)<2) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.001,4.9,3)
Enter the entity responsible for assigning IDs for coding system.
"^DD",4.001,4.001,4.9,21,0)
^^11^11^3031226^^^
"^DD",4.001,4.001,4.9,21,1,0)
This field holds the assigning authority responsible for
"^DD",4.001,4.001,4.9,21,2,0)
the code system used in the HL7 MFE PKV segment sequence.
"^DD",4.001,4.001,4.9,21,3,0)
 
"^DD",4.001,4.001,4.9,21,4,0)
See QRD segment.  Who Subject Filter.
"^DD",4.001,4.001,4.9,21,5,0)

"^DD",4.001,4.001,4.9,21,6,0)
This field holds the code that identifies the standards
"^DD",4.001,4.001,4.9,21,7,0)
body, or in the case of VA specific data the routing
"^DD",4.001,4.001,4.9,21,8,0)
symbol (or other identifying code) of the data owner of
"^DD",4.001,4.001,4.9,21,9,0)
steward.
"^DD",4.001,4.001,4.9,21,10,0)

"^DD",4.001,4.001,4.9,21,11,0)
If all else fails, use 'VA' as the code.
"^DD",4.001,4.001,4.9,"DT")
3031226
"^DD",4.001,4.011,0)
COLUMN SUB-FIELD^^.14^10
"^DD",4.001,4.011,0,"DT")
3050317
"^DD",4.001,4.011,0,"IX","B",4.011,.01)

"^DD",4.001,4.011,0,"NM","COLUMN")

"^DD",4.001,4.011,0,"UP")
4.001
"^DD",4.001,4.011,.01,0)
COLUMN DESCRIPTION^MF^^0;1^K:$L(X)>40!($L(X)<1) X
"^DD",4.001,4.011,.01,1,0)
^.1
"^DD",4.001,4.011,.01,1,1,0)
4.011^B
"^DD",4.001,4.011,.01,1,1,1)
S ^DIC(4.001,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",4.001,4.011,.01,1,1,2)
K ^DIC(4.001,DA(1),1,"B",$E(X,1,30),DA)
"^DD",4.001,4.011,.01,3)
Answer must be 1-40 characters in length.
"^DD",4.001,4.011,.01,21,0)
^.001^21^21^3040420^^^^
"^DD",4.001,4.011,.01,21,1,0)
The column description is the identifier that
"^DD",4.001,4.011,.01,21,2,0)
names the data element that gets mapped to a
"^DD",4.001,4.011,.01,21,3,0)
FileMan field.  The RDF segment (table row 
"^DD",4.001,4.011,.01,21,4,0)
definition) has a field (the 3rd sequence) that
"^DD",4.001,4.011,.01,21,5,0)
is a repeating element.  The 1st component of
"^DD",4.001,4.011,.01,21,6,0)
the element is the column description.  It is
"^DD",4.001,4.011,.01,21,7,0)
the column name in central repository master
"^DD",4.001,4.011,.01,21,8,0)
table.
"^DD",4.001,4.011,.01,21,9,0)

"^DD",4.001,4.011,.01,21,10,0)
(The 2nd component is the HL7 data type.  The
"^DD",4.001,4.011,.01,21,11,0)
3rd component is the length of the field.) 
"^DD",4.001,4.011,.01,21,12,0)
                                
"^DD",4.001,4.011,.01,21,13,0)
The RDF segment defines the format of
"^DD",4.001,4.011,.01,21,14,0)
subsequent RDT segment (table row data).  The
"^DD",4.001,4.011,.01,21,15,0)
sequence of column description fields in the
"^DD",4.001,4.011,.01,21,16,0)
RDF segment maps the sequence of the
"^DD",4.001,4.011,.01,21,17,0)
corresponding data values in the RDT segment.
"^DD",4.001,4.011,.01,21,18,0)

"^DD",4.001,4.011,.01,21,19,0)
(The 2nd field of the RDF segment is the number
"^DD",4.001,4.011,.01,21,20,0)
of columns or data elements passed in the RDF
"^DD",4.001,4.011,.01,21,21,0)
and RDT segments.) 
"^DD",4.001,4.011,.01,"DT")
3040420
"^DD",4.001,4.011,.02,0)
FIELD NUMBER^RNJ17,7X^^0;2^K:+X'=X!(X>999999999)!(X<.01)!(X?.E1"."8N.N) X ;  K:'$$ECHO^XUMF(DA(1),DA,X,+$G(XUMF)) X
"^DD",4.001,4.011,.02,3)
Enter the field number for the data element.
"^DD",4.001,4.011,.02,21,0)
^.001^6^6^3031224^^^
"^DD",4.001,4.011,.02,21,1,0)
This field holds the FileMan field number that corresponds to
"^DD",4.001,4.011,.02,21,2,0)
the segment sequence number in question.
"^DD",4.001,4.011,.02,21,3,0)
 
"^DD",4.001,4.011,.02,21,4,0)
If this sequence component maps to a FileMan sub-file (multiple)
"^DD",4.001,4.011,.02,21,5,0)
then the SUBFILE NUMBER (#.04) is required before FIELD NUMBER to
"^DD",4.001,4.011,.02,21,6,0)
be able to validate (input transform.)
"^DD",4.001,4.011,.02,"DT")
3040420
"^DD",4.001,4.011,.03,0)
HL7 DATA TYPE^RP771.4'X^HL(771.4,^0;3^;K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.011,.03,3)
Enter the HL7 data type.
"^DD",4.001,4.011,.03,21,0)
^^1^1^3031224^
"^DD",4.001,4.011,.03,21,1,0)
This field holds the HL7 data type of the sequence.
"^DD",4.001,4.011,.03,"DT")
3040420
"^DD",4.001,4.011,.04,0)
SUBFILE NUMBER^NJ17,7X^^0;4^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."8.N) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.011,.04,3)
If multiple field, enter sub-file number.
"^DD",4.001,4.011,.04,21,0)
^^2^2^3031224^
"^DD",4.001,4.011,.04,21,1,0)
This field holds the FileMan sub-file number.  ONLY if FIELD NUMBER
"^DD",4.001,4.011,.04,21,2,0)
relates to a field in a multiple.
"^DD",4.001,4.011,.04,"DT")
3031226
"^DD",4.001,4.011,.06,0)
SUBFILE LKUP COLUMN^F^^0;6^K:$L(X)>40!($L(X)<1) X
"^DD",4.001,4.011,.06,3)
Enter the COLUMN DESCRIPTION identifier that is the lookup (.01) to this field
"^DD",4.001,4.011,.06,21,0)
^.001^11^11^3050519^^^^
"^DD",4.001,4.011,.06,21,1,0)
If the FIELD NUMBER is associated with a multiple field, then this
"^DD",4.001,4.011,.06,21,2,0)
field holds the COLUMN DESCRIPTION of the .01 field of the multiple. 
"^DD",4.001,4.011,.06,21,3,0)
 
"^DD",4.001,4.011,.06,21,4,0)
If the .01 field is not a sequence, then leave this field blank and
"^DD",4.001,4.011,.06,21,5,0)
provide a value for SUBFILE LKUP LITERAL.
"^DD",4.001,4.011,.06,21,6,0)
 
"^DD",4.001,4.011,.06,21,7,0)
If SUBFILE LKUP LITERAL is NULL then SUBFILE LKUP SEQUENCE must not
"^DD",4.001,4.011,.06,21,8,0)
be NULL.
"^DD",4.001,4.011,.06,21,9,0)

"^DD",4.001,4.011,.06,21,10,0)
If SUBFILE LKUP LITERAL is not NULL then SUBFILE LKUP SEQUENCE must
"^DD",4.001,4.011,.06,21,11,0)
be NULL.
"^DD",4.001,4.011,.06,"DT")
3040525
"^DD",4.001,4.011,.07,0)
EXTENDED POINTER LKUP^NJ17,7X^^0;7^K:+X'=X!(X>999999999)!(X<.01)!(X?.E1"."8.N) X K:'$$F^XUMF(+$G(XUMF)) X
"^DD",4.001,4.011,.07,3)
Enter the field number which is the key to the extended reference of FIELD NAME if other than .01
"^DD",4.001,4.011,.07,21,0)
^.001^8^8^3050516^^
"^DD",4.001,4.011,.07,21,1,0)
If FIELD NUMBER is a pointer and you want to look-up
"^DD",4.001,4.011,.07,21,2,0)
the entry by a field other than its .01, then enter
"^DD",4.001,4.011,.07,21,3,0)
that field number.
"^DD",4.001,4.011,.07,21,4,0)

"^DD",4.001,4.011,.07,21,5,0)
Example: Parent facility, in the association multiple
"^DD",4.001,4.011,.07,21,6,0)
of the Institution file points to Institution.  The
"^DD",4.001,4.011,.07,21,7,0)
Institution NAME may not be unique.  It would be more
"^DD",4.001,4.011,.07,21,8,0)
useful to look-up the Institution by STATION NUMBER.
"^DD",4.001,4.011,.07,"DT")
3031226
"^DD",4.001,4.011,.09,0)
COLUMN LENGTH^RNJ2,0^^0;9^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",4.001,4.011,.09,3)
Type the maximum column width
"^DD",4.001,4.011,.09,21,0)
^.001^4^4^3040525^^^^
"^DD",4.001,4.011,.09,21,1,0)
This field holds the maximum column width of the column in question.
"^DD",4.001,4.011,.09,21,2,0)
The column description is the 3rd sequence of the RDF segment.  It
"^DD",4.001,4.011,.09,21,3,0)
is a repeating element.  The maximum column width is the 3rd component
"^DD",4.001,4.011,.09,21,4,0)
of the element.
"^DD",4.001,4.011,.09,"DT")
3040525
"^DD",4.001,4.011,.12,0)
CLEAN MULTIPLE^S^1:YES;0:NO;^0;12^Q
"^DD",4.001,4.011,.12,3)
delete existing values before updating
"^DD",4.001,4.011,.12,21,0)
^^6^6^3040817^
"^DD",4.001,4.011,.12,21,1,0)
If this field is a single valued repeating element (see REPEATING FIELD)
"^DD",4.001,4.011,.12,21,2,0)
and the existing values should be deleted before the update occurs, then
"^DD",4.001,4.011,.12,21,3,0)
set this flag to YES.
"^DD",4.001,4.011,.12,21,4,0)

"^DD",4.001,4.011,.12,21,5,0)
By setting this flag, you indicate all the valid data is contained within
"^DD",4.001,4.011,.12,21,6,0)
the incoming message, so purge existing values and start clean.
"^DD",4.001,4.011,.12,"DT")
3040817
"^DD",4.001,4.011,.13,0)
VUID PREFIX^F^^0;13^K:$L(X)>10!($L(X)<1) X
"^DD",4.001,4.011,.13,3)
Enter string (i.e. "VUID") to indicate VUID value is passed instead of VALUE
"^DD",4.001,4.011,.13,21,0)
^.001^7^7^3050516^^
"^DD",4.001,4.011,.13,21,1,0)
String indicates that the field is a Pointer, and
"^DD",4.001,4.011,.13,21,2,0)
the VUID may be used instead of the value (.01).
"^DD",4.001,4.011,.13,21,3,0)

"^DD",4.001,4.011,.13,21,4,0)
Example:  Instead of Drug Class name, you may be use
"^DD",4.001,4.011,.13,21,5,0)
the VUID of the drug class such as "VUID123456", where
"^DD",4.001,4.011,.13,21,6,0)
123456 is the VUID of the Drug Class and "VUID" is the
"^DD",4.001,4.011,.13,21,7,0)
prefix.
"^DD",4.001,4.011,.13,"DT")
3041019
"^DD",4.001,4.011,.14,0)
TIME ZONE FLAG^S^L:LOCAL;U:UTC;^0;14^Q
"^DD",4.001,4.011,.14,3)
Should the local or UTC time be filed?
"^DD",4.001,4.011,.14,21,0)
^.001^7^7^3050317^^^^
"^DD",4.001,4.011,.14,21,1,0)
If this column/field represents a date data type then MFS
"^DD",4.001,4.011,.14,21,2,0)
needs to know how to handle the time zone.
"^DD",4.001,4.011,.14,21,3,0)
 
"^DD",4.001,4.011,.14,21,4,0)
This field indicates how FileMan should file the HL7 date --
"^DD",4.001,4.011,.14,21,5,0)
local time or UTC time.
"^DD",4.001,4.011,.14,21,6,0)

"^DD",4.001,4.011,.14,21,7,0)
Note: VUID effective date/time should always be flagged LOCAL.
"^DD",4.001,4.011,.14,"DT")
3050317
"^DIC",4.001,4.001,0)
MASTER FILE PARAMETERS^4.001P
"^DIC",4.001,4.001,0,"GL")
^DIC(4.001,
"^DIC",4.001,4.001,"%",0)
^1.005^^0
"^DIC",4.001,4.001,"%D",0)
^^9^9^3031228^^
"^DIC",4.001,4.001,"%D",1,0)
The file holds parameters related to the Master File Server (MFS).
"^DIC",4.001,4.001,"%D",2,0)
 
"^DIC",4.001,4.001,"%D",3,0)
DO NOT EDIT THIS FILE!
"^DIC",4.001,4.001,"%D",4,0)
 
"^DIC",4.001,4.001,"%D",5,0)
The parameters map HL7 segment data to standard
"^DIC",4.001,4.001,"%D",6,0)
FileMan data files.  Local modifications to this
"^DIC",4.001,4.001,"%D",7,0)
file will seriously disrupt standard file updating
"^DIC",4.001,4.001,"%D",8,0)
and have negative consequences to existing VistA
"^DIC",4.001,4.001,"%D",9,0)
applications.
"^DIC",4.001,"B","MASTER FILE PARAMETERS",4.001)

"BLD",2259,6)
^SEQ #310
**END**
**END**
