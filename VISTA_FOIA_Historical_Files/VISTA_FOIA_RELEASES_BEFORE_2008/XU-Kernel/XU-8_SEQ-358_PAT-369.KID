Released XU*8*369 SEQ #358
Extracted from mail message
**KIDS**:XU*8.0*369^

**INSTALL NAME**
XU*8.0*369
"BLD",853,0)
XU*8.0*369^KERNEL^0^3061030^y
"BLD",853,1,0)
^^2^2^3060814^
"BLD",853,1,1,0)
Kernel Patch XU*8.0*369 Compare local/national checksums.
"BLD",853,1,2,0)
Please refer to the Description in Forum Patch Module for details. 
"BLD",853,4,0)
^9.64PA^9.8^1
"BLD",853,4,9.8,0)
9.8
"BLD",853,4,9.8,2,0)
^9.641^9.8^1
"BLD",853,4,9.8,2,9.8,0)
ROUTINE  (File-top level)
"BLD",853,4,9.8,2,9.8,1,0)
^9.6411^6^1
"BLD",853,4,9.8,2,9.8,1,6,0)
CHECKSUM REPORT
"BLD",853,4,9.8,222)
y^y^p^^^^n^^n
"BLD",853,4,9.8,224)

"BLD",853,4,"APDD",9.8,9.8)

"BLD",853,4,"APDD",9.8,9.8,6)

"BLD",853,4,"B",9.8,9.8)

"BLD",853,6.3)
27
"BLD",853,"ABPKG")
n
"BLD",853,"INID")
^y
"BLD",853,"INIT")
POST^XU8P369
"BLD",853,"KRN",0)
^9.67PA^8989.52^19
"BLD",853,"KRN",.4,0)
.4
"BLD",853,"KRN",.401,0)
.401
"BLD",853,"KRN",.402,0)
.402
"BLD",853,"KRN",.403,0)
.403
"BLD",853,"KRN",.5,0)
.5
"BLD",853,"KRN",.84,0)
.84
"BLD",853,"KRN",3.6,0)
3.6
"BLD",853,"KRN",3.8,0)
3.8
"BLD",853,"KRN",9.2,0)
9.2
"BLD",853,"KRN",9.8,0)
9.8
"BLD",853,"KRN",9.8,"NM",0)
^9.68A^9^9
"BLD",853,"KRN",9.8,"NM",1,0)
XUGOT^^0^B14969110
"BLD",853,"KRN",9.8,"NM",2,0)
XUMFP^^0^B22292581
"BLD",853,"KRN",9.8,"NM",3,0)
XUMFPZL7^^0^B5372481
"BLD",853,"KRN",9.8,"NM",4,0)
XUMFPMFS^^0^B21142938
"BLD",853,"KRN",9.8,"NM",5,0)
XUMFI0^^0^B4427792
"BLD",853,"KRN",9.8,"NM",6,0)
XUMFI^^0^B61663922
"BLD",853,"KRN",9.8,"NM",7,0)
XUMFH^^0^B81261510
"BLD",853,"KRN",9.8,"NM",8,0)
XUGOT1^^0^B68922750
"BLD",853,"KRN",9.8,"NM",9,0)
XU8P369^^0^B127935
"BLD",853,"KRN",9.8,"NM","B","XU8P369",9)

"BLD",853,"KRN",9.8,"NM","B","XUGOT",1)

"BLD",853,"KRN",9.8,"NM","B","XUGOT1",8)

"BLD",853,"KRN",9.8,"NM","B","XUMFH",7)

"BLD",853,"KRN",9.8,"NM","B","XUMFI",6)

"BLD",853,"KRN",9.8,"NM","B","XUMFI0",5)

"BLD",853,"KRN",9.8,"NM","B","XUMFP",2)

"BLD",853,"KRN",9.8,"NM","B","XUMFPMFS",4)

"BLD",853,"KRN",9.8,"NM","B","XUMFPZL7",3)

"BLD",853,"KRN",19,0)
19
"BLD",853,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",853,"KRN",19,"NM",1,0)
XU CHECKSUM REPORT^^0^
"BLD",853,"KRN",19,"NM",2,0)
XUPR-ROUTINE-TOOLS^^2
"BLD",853,"KRN",19,"NM",3,0)
XU CHECKSUM LOAD^^0
"BLD",853,"KRN",19,"NM","B","XU CHECKSUM LOAD",3)

"BLD",853,"KRN",19,"NM","B","XU CHECKSUM REPORT",1)

"BLD",853,"KRN",19,"NM","B","XUPR-ROUTINE-TOOLS",2)

"BLD",853,"KRN",19.1,0)
19.1
"BLD",853,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",853,"KRN",101,0)
101
"BLD",853,"KRN",409.61,0)
409.61
"BLD",853,"KRN",771,0)
771
"BLD",853,"KRN",870,0)
870
"BLD",853,"KRN",8989.51,0)
8989.51
"BLD",853,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",853,"KRN",8989.52,0)
8989.52
"BLD",853,"KRN",8994,0)
8994
"BLD",853,"KRN","B",.4,.4)

"BLD",853,"KRN","B",.401,.401)

"BLD",853,"KRN","B",.402,.402)

"BLD",853,"KRN","B",.403,.403)

"BLD",853,"KRN","B",.5,.5)

"BLD",853,"KRN","B",.84,.84)

"BLD",853,"KRN","B",3.6,3.6)

"BLD",853,"KRN","B",3.8,3.8)

"BLD",853,"KRN","B",9.2,9.2)

"BLD",853,"KRN","B",9.8,9.8)

"BLD",853,"KRN","B",19,19)

"BLD",853,"KRN","B",19.1,19.1)

"BLD",853,"KRN","B",101,101)

"BLD",853,"KRN","B",409.61,409.61)

"BLD",853,"KRN","B",771,771)

"BLD",853,"KRN","B",870,870)

"BLD",853,"KRN","B",8989.51,8989.51)

"BLD",853,"KRN","B",8989.52,8989.52)

"BLD",853,"KRN","B",8994,8994)

"BLD",853,"QUES",0)
^9.62^^
"BLD",853,"REQB",0)
^9.611^3^3
"BLD",853,"REQB",1,0)
XU*8.0*262^0
"BLD",853,"REQB",2,0)
XU*8.0*390^0
"BLD",853,"REQB",3,0)
XU*8.0*393^1
"BLD",853,"REQB","B","XU*8.0*262",1)

"BLD",853,"REQB","B","XU*8.0*390",2)

"BLD",853,"REQB","B","XU*8.0*393",3)

"FIA",9.8)
ROUTINE
"FIA",9.8,0)
^DIC(9.8,
"FIA",9.8,0,0)
9.8
"FIA",9.8,0,1)
y^y^p^^^^n^^n
"FIA",9.8,0,10)

"FIA",9.8,0,11)

"FIA",9.8,0,"RLRO")

"FIA",9.8,0,"VR")
8.0^XU
"FIA",9.8,9.8)
1
"FIA",9.8,9.8,6)

"INIT")
POST^XU8P369
"KRN",19,282,-1)
2^2
"KRN",19,282,0)
XUPR-ROUTINE-TOOLS^Routine Tools^^M^2^^^^^^^^y^
"KRN",19,282,10,0)
^19.01IP^19^19
"KRN",19,282,10,18,0)
1056
"KRN",19,282,10,18,"^")
XU CHECKSUM REPORT
"KRN",19,282,10,19,0)
1057
"KRN",19,282,10,19,"^")
XU CHECKSUM LOAD
"KRN",19,282,"U")
ROUTINE TOOLS
"KRN",19,1056,-1)
0^1
"KRN",19,1056,0)
XU CHECKSUM REPORT^Compare local/national checksums report^^R^^^^^^^^KERNEL
"KRN",19,1056,1,0)
^19.06^10^10^3060814^^
"KRN",19,1056,1,1,0)
Checksums for routines are compared to the values in the ROUTINE file and 
"KRN",19,1056,1,2,0)
a report is provided listing routines that differ by patch or version, 
"KRN",19,1056,1,3,0)
version or patch correct but checksums off, local routines being tracked 
"KRN",19,1056,1,4,0)
and information not on record for a patch (e.g., test patches).
"KRN",19,1056,1,5,0)
 
"KRN",19,1056,1,6,0)
Nationally released routines' checksums are sent by Master File Updates 
"KRN",19,1056,1,7,0)
to the local ROUTINE file 9.8 automatically.  Local sites may also record 
"KRN",19,1056,1,8,0)
checksums in the CHECKSUM VALUE field in the ROUTINE file.  To compare 
"KRN",19,1056,1,9,0)
local routines which are being tracked, the CHECKSUM REPORT field should 
"KRN",19,1056,1,10,0)
be set to "Local - report".
"KRN",19,1056,25)
REPORT^XUGOT1
"KRN",19,1056,"U")
COMPARE LOCAL/NATIONAL CHECKSU
"KRN",19,1057,-1)
0^3
"KRN",19,1057,0)
XU CHECKSUM LOAD^Load/refresh checksum values into ROUTINE file^^R^^^^^^^^KERNEL
"KRN",19,1057,1,0)
^19.06^2^2^3041108^^
"KRN",19,1057,1,1,0)
Updates the routine file with the latest checksum values
"KRN",19,1057,1,2,0)
from FORUM.
"KRN",19,1057,25)
LOAD^XUGOT
"KRN",19,1057,"U")
LOAD/REFRESH CHECKSUM VALUES I
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3051215^2970507^.5
"PKG",3,22,1,"PAH",1,0)
369^3061030^1000054
"PKG",3,22,1,"PAH",1,1,0)
^^2^2^3061030
"PKG",3,22,1,"PAH",1,1,1,0)
Kernel Patch XU*8.0*369 Compare local/national checksums.
"PKG",3,22,1,"PAH",1,1,2,0)
Please refer to the Description in Forum Patch Module for details. 
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","XU8P369")
0^9^B127935^n/a
"RTN","XU8P369",1,0)
XU8P369 ;BP/BDT - Set Read Time Out; 10/24/06
"RTN","XU8P369",2,0)
 ;;8.0;KERNAL;**369**; JUL 10, 1995;Build 27
"RTN","XU8P369",3,0)
 Q
"RTN","XU8P369",4,0)
POST ; Set READ TIMEOUT for the HL LOGICAL LINK NODE of "XUMF FORUM" to 600
"RTN","XU8P369",5,0)
 N FDA
"RTN","XU8P369",6,0)
 S FDA(1,870,"?+1,",.01)="XUMF FORUM"
"RTN","XU8P369",7,0)
 S FDA(1,870,"?+1,",200.04)=600
"RTN","XU8P369",8,0)
 D UPDATE^DIE("","FDA(1)")
"RTN","XU8P369",9,0)
 Q
"RTN","XUGOT")
0^1^B14969110^n/a
"RTN","XUGOT",1,0)
XUGOT ; DBA/CJS - COMPARE LOCAL/NATIONAL CHECKSUMS REPORT ;10/20/2006
"RTN","XUGOT",2,0)
 ;;8.0;KERNEL;**369**;Jul 10, 1995;Build 27
"RTN","XUGOT",3,0)
 Q
"RTN","XUGOT",4,0)
LOAD ; -- use MFS to get ROUTINE file from FORUM (background job)
"RTN","XUGOT",5,0)
 W !!,">>>This processing will take about thirty minutes. Please wait..."
"RTN","XUGOT",6,0)
 D CLEAN
"RTN","XUGOT",7,0)
 D ARRAY^XUMF(9.8)
"RTN","XUGOT",8,0)
 D INPUT
"RTN","XUGOT",9,0)
 Q
"RTN","XUGOT",10,0)
 ;----------------------------
"RTN","XUGOT",11,0)
CLEAN ; clean all entries in subfile 9.818 if $G(^DIC(9.8,RTNIEN,6))=2 (national tracking)
"RTN","XUGOT",12,0)
 N RTNIEN,XUTR S RTNIEN=0
"RTN","XUGOT",13,0)
 F  S RTNIEN=$O(^DIC(9.8,RTNIEN)) Q:RTNIEN'>0  D
"RTN","XUGOT",14,0)
 . S XUTR=$P($G(^DIC(9.8,RTNIEN,6)),"^")
"RTN","XUGOT",15,0)
 . I XUTR="National - report" S XUTR=2
"RTN","XUGOT",16,0)
 . I XUTR=2 D CLN(RTNIEN) S $P(^DIC(9.8,RTNIEN,6),"^")=""
"RTN","XUGOT",17,0)
 Q
"RTN","XUGOT",18,0)
 ;------------------------------
"RTN","XUGOT",19,0)
CLN(RTNIEN) ; clean all entries in sub-file #9.818
"RTN","XUGOT",20,0)
 N XI S XI=0 F  S XI=$O(^DIC(9.8,RTNIEN,8,XI)) Q:XI'>0  D
"RTN","XUGOT",21,0)
 . N DA,DIK S DA(1)=RTNIEN,DA=XI,DIK="^DIC(9.8,"_DA(1)_","_"8," D ^DIK
"RTN","XUGOT",22,0)
 Q
"RTN","XUGOT",23,0)
 ;------------------------------
"RTN","XUGOT",24,0)
INPUT ; input routines' information in Routine file
"RTN","XUGOT",25,0)
 N IDX98,ERROR,NAME,HLFS,XXX,YYY,ZZZ,AAA,BBB,CCC,FDA,X,HFLS,NODE,XUSIEN
"RTN","XUGOT",26,0)
 S HLFS="^",IDX98=0
"RTN","XUGOT",27,0)
 F  S IDX98=$O(^TMP("XUMF ARRAY",$J,IDX98)) Q:'IDX98  D
"RTN","XUGOT",28,0)
 .S NODE=$G(^TMP("XUMF ARRAY",$J,IDX98)),NODE=$P(NODE,"^",2,99)
"RTN","XUGOT",29,0)
 .S NAME=$P(NODE,HLFS,1)
"RTN","XUGOT",30,0)
 . I $L(NAME)>8 Q
"RTN","XUGOT",31,0)
 .S XXX=$P(NODE,HLFS,2)
"RTN","XUGOT",32,0)
 . I XXX'="National - report" Q
"RTN","XUGOT",33,0)
 .S YYY=$P(NODE,HLFS,3)
"RTN","XUGOT",34,0)
 .S ZZZ=$P(NODE,HLFS,4)
"RTN","XUGOT",35,0)
 . I +$E(ZZZ,2,10)'>0 Q
"RTN","XUGOT",36,0)
 .S AAA=$P(NODE,HLFS,5)
"RTN","XUGOT",37,0)
 .S BBB=$P(NODE,HLFS,6)
"RTN","XUGOT",38,0)
 .S CCC=$P(NODE,HLFS,7)
"RTN","XUGOT",39,0)
 .S FDA(1,9.8,"?+1,",.01)=NAME
"RTN","XUGOT",40,0)
 .S FDA(1,9.8,"?+1,",1)="R"
"RTN","XUGOT",41,0)
 .;S FDA(1,9.8,"?+1,",6)=2
"RTN","XUGOT",42,0)
 .S FDA(1,9.8,"?+1,",7.1)=YYY
"RTN","XUGOT",43,0)
 .S FDA(1,9.8,"?+1,",7.2)=ZZZ
"RTN","XUGOT",44,0)
 .S FDA(1,9.8,"?+1,",7.3)=CCC
"RTN","XUGOT",45,0)
 .S FDA(1,9.818,"+2,?+1,",.01)=AAA
"RTN","XUGOT",46,0)
 .S FDA(1,9.818,"+2,?+1,",2)=BBB
"RTN","XUGOT",47,0)
 .D UPDATE^DIE("","FDA(1)")
"RTN","XUGOT",48,0)
 .D SETFLD6(NAME)
"RTN","XUGOT",49,0)
 ;
"RTN","XUGOT",50,0)
 K ^TMP("XUMF ARRAY",$J)
"RTN","XUGOT",51,0)
 Q
"RTN","XUGOT",52,0)
 ;
"RTN","XUGOT",53,0)
SETFLD6(NAME) ;
"RTN","XUGOT",54,0)
 N XUIEN S XUIEN=0
"RTN","XUGOT",55,0)
 S XUIEN=$$FIND1^DIC(9.8,"","MX",NAME,"","","ERR")
"RTN","XUGOT",56,0)
 I XUIEN'>0 Q
"RTN","XUGOT",57,0)
 I $P($G(^DIC(9.8,XUIEN,6)),"^")="" S $P(^DIC(9.8,XUIEN,6),"^")=2
"RTN","XUGOT",58,0)
 Q
"RTN","XUGOT",59,0)
 ; -------------------- FOR XUGOT1-------------------------------
"RTN","XUGOT",60,0)
PACK(RTN,SL) ; get package name
"RTN","XUGOT",61,0)
 N XUS,XUS1,XUS2 S (XUS,XUS1,XUS2)=""
"RTN","XUGOT",62,0)
 S XUS=$$RT(RTN) I XUS'>0 Q ""
"RTN","XUGOT",63,0)
 S XUS2=$P(XUS,"^",2)
"RTN","XUGOT",64,0)
 S XUS1=$$SL(SL) I XUS1'="" S XUS2=XUS1
"RTN","XUGOT",65,0)
 Q XUS2_"*"_+$P(XUS,"^",3)_"*"
"RTN","XUGOT",66,0)
 ;
"RTN","XUGOT",67,0)
XUN4(XUS) ;
"RTN","XUGOT",68,0)
 N XUN4,XUA,XUB,XUC
"RTN","XUGOT",69,0)
 I $G(XUS)="" Q ""
"RTN","XUGOT",70,0)
 S XUN4=+$P(XUS,"*",2) ;Last Version number from the last patch name
"RTN","XUGOT",71,0)
 I XUN4>0 Q XUN4
"RTN","XUGOT",72,0)
 S XUA=$L(XUS)
"RTN","XUGOT",73,0)
 F XUB=1:1:XUA S XUN4=+$E(XUS,XUB,XUA) I XUN4>0 Q
"RTN","XUGOT",74,0)
 Q XUN4
"RTN","XUGOT",75,0)
NPL2(IEN) ; get Package name from Patch multiple
"RTN","XUGOT",76,0)
 I '$D(^DIC(9.8,IEN,8,0)) Q ""
"RTN","XUGOT",77,0)
 N XUIEN,XUPK,XUPK1,XUPK2 S (XUPK2,XUPK1,XUPK)="",XUIEN=0
"RTN","XUGOT",78,0)
 F  S XUIEN=$O(^DIC(9.8,IEN,8,XUIEN)) Q:XUIEN'>0  D
"RTN","XUGOT",79,0)
 . S XUA=$G(^DIC(9.8,IEN,8,XUIEN,0)),XUPK2=$P(XUA,"^"),XUPK=$P(XUPK2,"*"),XUPK2=$P(XUPK2,"*",2)
"RTN","XUGOT",80,0)
 . I XUPK'="",$D(^DIC(9.4,"C",XUPK)) S XUPK1=XUPK_"*"_XUPK2
"RTN","XUGOT",81,0)
 Q XUPK1
"RTN","XUGOT",82,0)
 ;
"RTN","XUGOT",83,0)
LSLPN(SL) ; return package name from the second line (piece 3rd of the second line)
"RTN","XUGOT",84,0)
 Q $$TRIM^XLFSTR($P(SL,";",4))
"RTN","XUGOT",85,0)
 ;
"RTN","XUGOT",86,0)
SL(SL) ; get Prefix_Package from the second line
"RTN","XUGOT",87,0)
 N PCK,XUST,XUIEN,Y,X
"RTN","XUGOT",88,0)
 S (PCK,XUIEN)="",XUST=$$LSLPN(SL)
"RTN","XUGOT",89,0)
 S X=XUST X ^%ZOSF("UPPERCASE") I Y'="" S XUIEN=$O(^DIC(9.4,"B",Y,0))
"RTN","XUGOT",90,0)
 I XUIEN S PCK=$P($G(^DIC(9.4,XUIEN,0)),"^",2)
"RTN","XUGOT",91,0)
 Q PCK
"RTN","XUGOT",92,0)
 ;
"RTN","XUGOT",93,0)
 ;-----------------------CHECK PACKAGE NAME AND VERSION---------------------------
"RTN","XUGOT",94,0)
RT(RTN) ; get Package and Version base on routine name
"RTN","XUGOT",95,0)
 I $G(RTN)="" Q ""
"RTN","XUGOT",96,0)
 N XUST,VERSION,XUIEN,XUI,PCK,PCKNAME,XUQUIT S (PCK,PCKNAME,XUST,VERSION)="",XUIEN=""
"RTN","XUGOT",97,0)
 F XUI=4,3,2 I $D(^DIC(9.4,"C",$E(RTN,1,XUI))) D  Q:XUIEN>0
"RTN","XUGOT",98,0)
 . S XUIEN=$O(^DIC(9.4,"C",$E(RTN,1,XUI),0)) ;IEN FOR PACKAGE
"RTN","XUGOT",99,0)
 . I XUIEN="" S XUIEN=-1 Q  ;no package found (yet)
"RTN","XUGOT",100,0)
 . I $D(^DIC(9.4,XUIEN,0)) S XUST=$G(^DIC(9.4,XUIEN,0)),VERSION=$G(^DIC(9.4,XUIEN,"VERSION")),PCKNAME=$P(XUST,"^",1),PCK=$P(XUST,"^",2)
"RTN","XUGOT",101,0)
 Q XUIEN_"^"_PCK_"^"_VERSION_"^"_PCKNAME
"RTN","XUGOT",102,0)
 ;
"RTN","XUGOT",103,0)
GETSL(RTN) ;
"RTN","XUGOT",104,0)
 N XUSL
"RTN","XUGOT",105,0)
 N DIF,XCNP K ^TMP($J,369)
"RTN","XUGOT",106,0)
 S DIF="^TMP($J,369,",XCNP=0 X ^%ZOSF("LOAD")
"RTN","XUGOT",107,0)
 Q $G(^TMP($J,369,2,0))
"RTN","XUGOT1")
0^8^B68922750^n/a
"RTN","XUGOT1",1,0)
XUGOT1 ; BT/OAK-BP - COMPARE LOCAL/NATIONAL CHECKSUMS REPORT ;10/20/2006
"RTN","XUGOT1",2,0)
 ;;8.0;KERNEL;**369**;Jul 10, 1995;Build 27
"RTN","XUGOT1",3,0)
 Q
"RTN","XUGOT1",4,0)
REPORT ;
"RTN","XUGOT1",5,0)
 W !!,">>> This processing will take about thirty minutes."
"RTN","XUGOT1",6,0)
 W !,"    It will save your time if you send this report"
"RTN","XUGOT1",7,0)
 W !,"    to a printer.",!
"RTN","XUGOT1",8,0)
 S %ZIS="Q" D ^%ZIS I POP D ^%ZISC,END Q
"RTN","XUGOT1",9,0)
 ; Queue report via Taskman
"RTN","XUGOT1",10,0)
 I $D(IO("Q")) D  G END
"RTN","XUGOT1",11,0)
 . N ZTDESC,ZTSK,ZTRTN,ZTIO,ZTSAVE
"RTN","XUGOT1",12,0)
 . S ZTRTN="ENT^XUGOT1",ZTDESC="Compare local/national checksums report"
"RTN","XUGOT1",13,0)
 . D ^%ZTLOAD,^%ZISC
"RTN","XUGOT1",14,0)
 . W !,"Task ",$S($G(ZTSK):ZTSK,1:"NOT")," Queued"
"RTN","XUGOT1",15,0)
 . K IO("Q")
"RTN","XUGOT1",16,0)
ENT ;
"RTN","XUGOT1",17,0)
 K ^TMP($J)
"RTN","XUGOT1",18,0)
 N CKRTP F CKRTP=1:1:9 S CKRTP(CKRTP)=0
"RTN","XUGOT1",19,0)
 N SLX,SL S U="^",SLX="ZL @RTN S SL=$T(@RTN+1)"
"RTN","XUGOT1",20,0)
 ;Use SUMB in XPDRSUM
"RTN","XUGOT1",21,0)
 N XUIEN S XUIEN=0 F  S XUIEN=$O(^DIC(9.8,XUIEN)) Q:XUIEN'>0  D
"RTN","XUGOT1",22,0)
 . N RTN,X S (RTN,X)=$P($G(^DIC(9.8,XUIEN,0)),U) I $L(RTN)=0 Q
"RTN","XUGOT1",23,0)
 . I $P($G(^DIC(9.8,XUIEN,0)),U,2)'="R" Q
"RTN","XUGOT1",24,0)
 . S CKRTP(1)=CKRTP(1)+1 ;Total count of routines reviewed (#1)
"RTN","XUGOT1",25,0)
 . N TRACK S TRACK=$$TRACK(XUIEN) I TRACK'>0 S CKRTP(3)=CKRTP(3)+1 Q  ; routine isn't being tracked (#3)
"RTN","XUGOT1",26,0)
 . I $L(RTN)>8 S ^TMP($J,8,RTN)="",CKRTP(8)=CKRTP(8)+1 Q
"RTN","XUGOT1",27,0)
 . N NSUM,NLPATCH S NSUM=$$NSUM(XUIEN),NLPATCH=$$NLPATCH(XUIEN)
"RTN","XUGOT1",28,0)
 . I NSUM="",TRACK'=1 Q  ; check for national checksum is empty, and not Local Track
"RTN","XUGOT1",29,0)
 . I TRACK>2 Q  ; Quit if routine is marked as "National - Deleted or NOT tracked"
"RTN","XUGOT1",30,0)
 . X ^%ZOSF("TEST") I '$T S CKRTP(2)=CKRTP(2)+1,^TMP($J,2,RTN)=NSUM_"^"_NLPATCH Q  ;routine is not found on the system (#2)
"RTN","XUGOT1",31,0)
 . X SLX  ; get the second line
"RTN","XUGOT1",32,0)
 . I SL="" S SL=$$GETSL^XUGOT(X)
"RTN","XUGOT1",33,0)
 . N LSUM S LSUM=$$LSUM(RTN) I $E(LSUM,2,10)'>0 S CKRTP(2)=CKRTP(2)+1,^TMP($J,2,RTN)=NSUM_"^"_NLPATCH Q  ;routine is not found on the system (#2)
"RTN","XUGOT1",34,0)
 . I NSUM=LSUM S CKRTP(4)=CKRTP(4)+1 Q  ;national and local checksums match (#4)
"RTN","XUGOT1",35,0)
 . I TRACK=1 S ^TMP($J,5,RTN)=NSUM_"^"_LSUM,CKRTP(5)=CKRTP(5)+1 Q  ; Local tracked (#5)
"RTN","XUGOT1",36,0)
 . ;--------- national and local checksums don't match
"RTN","XUGOT1",37,0)
 . N XUN1,XUN2,XUN3,XUN4,XUL1,XUL2,XUL3,XUA,XUP,XULM,XUPN S XULM="Yes",XUPN="No"
"RTN","XUGOT1",38,0)
 . S XUP=$$PACK^XUGOT(RTN,SL) ;Patch and version AAA*Z.Z*
"RTN","XUGOT1",39,0)
 . N NPL2 S NPL2=$$NPL2^XUGOT(XUIEN) I +$P(SL,";",3)=$P(NPL2,"*",2) S $P(XUP,"*",2)=$P(NPL2,"*",2)
"RTN","XUGOT1",40,0)
 . S XUL2=$$LPLIST(SL)
"RTN","XUGOT1",41,0)
 . S XUL2=$$LPATCH(XUL2) ;Last patch number from the second line
"RTN","XUGOT1",42,0)
 . S XUL3=XUP_XUL2 ;Latest local patch base on second line
"RTN","XUGOT1",43,0)
 . S XUN1=$$NPL1(XUIEN,LSUM,XUL2) ;Number national patch list and patch that matches LSUM.
"RTN","XUGOT1",44,0)
 . S XUN3=$$NLPATCH(XUIEN) ;Last patch name from Patch multiple fields
"RTN","XUGOT1",45,0)
 . S XUN2=$P(XUN3,"*",3) ;Last patch number from the last patch name
"RTN","XUGOT1",46,0)
 . S XUN4=$$XUN4^XUGOT(XUN3) ;Last Version from the last patch name
"RTN","XUGOT1",47,0)
 . I $P(XUN1,"^",3)'="" S XULM="Unknown"
"RTN","XUGOT1",48,0)
 . I $P(XUN1,"^",2)'="" S XULM="No"
"RTN","XUGOT1",49,0)
 . I XUL2'="",XUL2'=XUN2,$$LPLIST(SL)[XUN2 S XUPN="Testing "_XUP_XUL2,XULM="Unknown"
"RTN","XUGOT1",50,0)
 . I XUL2'="" S XUA=$P($P(XUN1,"^"),XUL2_",",2) I XUA'="" S XUPN=XUP_XUA I $P(NPL2,"*")'="",$P(NPL2,"*",2)'="" S XUPN=NPL2_"*"_XUA ; Missing patches
"RTN","XUGOT1",51,0)
 . I +XUL2'="",XUL2=XUN2 S ^TMP($J,6,RTN)=NSUM_"^"_LSUM_"^"_XUL3_"^Yes^No",CKRTP(6)=CKRTP(6)+1 Q
"RTN","XUGOT1",52,0)
 . I XUL2'="",XUL2'=+XUL2 S ^TMP($J,6,RTN)=NSUM_"^"_LSUM_"^"_XUL3_"^Yes^Unknown",CKRTP(6)=CKRTP(6)+1 Q
"RTN","XUGOT1",53,0)
 . I XUL2'="",XUL2'=XUN2,$$LPLIST(SL)'[XUN2,$P(XUN1,"^")'[XUL2 S ^TMP($J,6,RTN)=NSUM_"^"_LSUM_"^"_XUL3_"^Unknown^"_XUN3,CKRTP(6)=CKRTP(6)+1 Q
"RTN","XUGOT1",54,0)
 . I XUL2="" S XULM="Unknown"
"RTN","XUGOT1",55,0)
 . I XUL2="",XUN2="" S XUPN=XUN3
"RTN","XUGOT1",56,0)
 . I XUL2="",XUN2'="" S XUPN=XUP_$P(XUN1,"^")
"RTN","XUGOT1",57,0)
 . N XUNV,XULV S XULV=+$P(SL,";",3),XUNV=$$RT^XUGOT(RTN)
"RTN","XUGOT1",58,0)
 . I XUN4'>0 S XUN4=+$P(XUNV,"^",3)
"RTN","XUGOT1",59,0)
 . I $P(XUNV,"^")="",$$SL^XUGOT(SL)="" S ^TMP($J,9,RTN)="",CKRTP(9)=CKRTP(9)+1 Q
"RTN","XUGOT1",60,0)
 . N XUK S XUK=0
"RTN","XUGOT1",61,0)
 . I $P(XUNV,"^")="" D
"RTN","XUGOT1",62,0)
 . . N XUL3A S XUL3A=$$SL^XUGOT(SL)_"*"_XULV_"*",XULM="Unknown",XUPN="Unknown"
"RTN","XUGOT1",63,0)
 . . I $$SL^XUGOT(SL)="" S XUL3A=$P(XUN3,"*",1,2)_"*"
"RTN","XUGOT1",64,0)
 . . I XUL3A="*" S XUL3A=NPL2_"*"
"RTN","XUGOT1",65,0)
 . . S XUL3=XUL3A_XUL2
"RTN","XUGOT1",66,0)
 . . I XUL2'="",XUL2'=XUN2,$$LPLIST(SL)[XUN2 S XUPN="Testing "_XUL3,XULM="Unknown"
"RTN","XUGOT1",67,0)
 . . I XUL2'="" S XUA=$P($P(XUN1,"^"),XUL2_",",2) I XUA'="" S XUPN=XUP_XUA I $P(NPL2,"*")'="",$P(NPL2,"*",2)'="" S XUPN=NPL2_"*"_XUA ; Missing patches
"RTN","XUGOT1",68,0)
 . . S ^TMP($J,6,RTN)=NSUM_"^"_LSUM_"^"_XUL3_"^"_XULM_"^"_XUPN,CKRTP(6)=CKRTP(6)+1,XUK=1
"RTN","XUGOT1",69,0)
 . I XUK=1 Q
"RTN","XUGOT1",70,0)
 . ; version off
"RTN","XUGOT1",71,0)
 . N XUK S XUK=0
"RTN","XUGOT1",72,0)
 . I XULV>0,XULV'=XUN4 D
"RTN","XUGOT1",73,0)
 . . N XUL3A S XUL3A=$$SL^XUGOT(SL)_"*"_XULV_"*",XULM="Unknown",XUPN="Unknown"
"RTN","XUGOT1",74,0)
 . . I $$SL^XUGOT(SL)="" S XUL3A=$P(XUN3,"*",1,2)_"*"
"RTN","XUGOT1",75,0)
 . . I XUL3A="*" S XUL3A=NPL2_"*"
"RTN","XUGOT1",76,0)
 . . S XUL3=XUL3A_XUL2
"RTN","XUGOT1",77,0)
 . . I XUL2'="",XUL2'=XUN2,$$LPLIST(SL)[XUN2 S XUPN="Testing "_XUL3,XULM="Unknown"
"RTN","XUGOT1",78,0)
 . . I XUL2'="" S XUA=$P($P(XUN1,"^"),XUL2_",",2) I XUA'="" S XUPN=XUP_XUA I $P(NPL2,"*")'="",$P(NPL2,"*",2)'="" S XUPN=NPL2_"*"_XUA ; Missing patches
"RTN","XUGOT1",79,0)
 . . S ^TMP($J,6,RTN)=NSUM_"^"_LSUM_"^"_XUL3_"^"_XULM_"^"_XUPN,CKRTP(6)=CKRTP(6)+1,XUK=1
"RTN","XUGOT1",80,0)
 . I XUK=1 Q
"RTN","XUGOT1",81,0)
 . S ^TMP($J,6,RTN)=NSUM_"^"_LSUM_"^"_XUL3_"^"_XULM_"^"_XUPN,CKRTP(6)=CKRTP(6)+1 Q
"RTN","XUGOT1",82,0)
 D PRT
"RTN","XUGOT1",83,0)
 Q
"RTN","XUGOT1",84,0)
 ;
"RTN","XUGOT1",85,0)
PRT N ST,Y4 S ST=0,Y4=1
"RTN","XUGOT1",86,0)
 N IOC,IOC1 S IOC=(IO=IO(0)),IOC1=$E(IOST,1,2)["C-"
"RTN","XUGOT1",87,0)
 U IO W:IOC1 @IOF
"RTN","XUGOT1",88,0)
 W !,$$PG(Y4)
"RTN","XUGOT1",89,0)
 N HDR1,HDR2,RPTYP
"RTN","XUGOT1",90,0)
 F RPTYP=5,6,7,2,9,8,3,4,1 Q:ST  D
"RTN","XUGOT1",91,0)
 . I RPTYP=1 W !,"ROUTINE FILE TOTAL ENTRIES COUNT (",CKRTP(1),")",!
"RTN","XUGOT1",92,0)
 . I RPTYP=2,CKRTP(2)>0 W !,"ROUTINES NOT FOUND IN THE SYSTEM (",CKRTP(2),")" D CN W ! D CN I CKRTP(2) D HEADER
"RTN","XUGOT1",93,0)
 . I RPTYP=3,CKRTP(3)>0 W !,"ROUTINES NOT MARKED FOR TRACKING (",CKRTP(3),")",!
"RTN","XUGOT1",94,0)
 . I RPTYP=4,CKRTP(4)>0 W !,"ROUTINES WITH MATCHING CHECKSUMS (",CKRTP(4),")",!
"RTN","XUGOT1",95,0)
 . I RPTYP=5,CKRTP(5)>0 W "ROUTINES MARKED FOR LOCAL TRACKING (",CKRTP(5),")",! I CKRTP(5) D HEADER
"RTN","XUGOT1",96,0)
 . I RPTYP=6,CKRTP(6)>0 W !,"ROUTINES WITH THE CHECKSUM OFF(",CKRTP(6),")" D CN W ! D CN I CKRTP(6) D HEADER
"RTN","XUGOT1",97,0)
 . ;I RPTYP=7,CKRTP(7)>0 W !,"ROUTINES WITH VERSION OFF(",CKRTP(7),")" D CN W ! D CN I CKRTP(7) D HEADER
"RTN","XUGOT1",98,0)
 . I RPTYP=8,CKRTP(8)>0 W !,"ROUTINES WITH MORE THAN 8 CHARACTERS NAME(",CKRTP(8),")" D CN W ! D CN I CKRTP(8) D HEADER
"RTN","XUGOT1",99,0)
 . ;I RPTYP=9,CKRTP(9)>0 W !,"ROUTINES WITH NO PACKAGE ASSOCIATED WITH(",CKRTP(9),")" D CN W ! D CN I CKRTP(9) D HEADER
"RTN","XUGOT1",100,0)
 . ;
"RTN","XUGOT1",101,0)
 . S RTN="" F  S RTN=$O(^TMP($J,RPTYP,RTN)) Q:(RTN="")!(ST)  D
"RTN","XUGOT1",102,0)
 . . D CN I ST Q
"RTN","XUGOT1",103,0)
 . . N Y3 S Y3=$G(^TMP($J,RPTYP,RTN))
"RTN","XUGOT1",104,0)
 . . I RPTYP=5 W " ",RTN,?11,$P(Y3,"^",1),?23,$P(Y3,"^",2),!
"RTN","XUGOT1",105,0)
 . . I RPTYP=6 W " ",RTN,?11,$P(Y3,"^",1),?23,$P(Y3,"^",2),?35,$E($P(Y3,"^",3),1,11),?48,$P(Y3,"^",4),?57,$E($P(Y3,"^",5),1,23),!
"RTN","XUGOT1",106,0)
 . . I RPTYP=7 W " ",RTN,?11,$P(Y3,"^",1),?24,$P(Y3,"^",2),?37,$P(Y3,"^",3),!
"RTN","XUGOT1",107,0)
 . . I RPTYP=2 W " ",RTN,?11,$P(Y3,"^",1),?23,$P(Y3,"^",2),!
"RTN","XUGOT1",108,0)
 . . I RPTYP=8 W " ",RTN,!
"RTN","XUGOT1",109,0)
 . . ;I RPTYP=9 W " ",RTN,!
"RTN","XUGOT1",110,0)
 . . Q
"RTN","XUGOT1",111,0)
 . Q
"RTN","XUGOT1",112,0)
 ;--------------------------
"RTN","XUGOT1",113,0)
END D ^%ZISC K ^TMP($J),%DT,%ZIS
"RTN","XUGOT1",114,0)
 Q
"RTN","XUGOT1",115,0)
 ;--------------------------
"RTN","XUGOT1",116,0)
PG(XUN) ;
"RTN","XUGOT1",117,0)
 W #,$$FMTE^XLFDT(DT),?(IOM\2),"Page: ",XUN,!!
"RTN","XUGOT1",118,0)
 Q ""
"RTN","XUGOT1",119,0)
 ;--------------------------
"RTN","XUGOT1",120,0)
HEADER ;
"RTN","XUGOT1",121,0)
 S HDR1=" Routine   Nat CHKSUM  ",HDR2=" =======   ==========  "
"RTN","XUGOT1",122,0)
 I RPTYP=2 S HDR1=HDR1_"Nat Last Patch",HDR2=HDR2_"============="
"RTN","XUGOT1",123,0)
 I RPTYP=6 S HDR1=HDR1_"Our CHKSUM  Our Patch    Loc Mod  Patches Needed",HDR2=HDR2_"==========  ===========  =======  =============="
"RTN","XUGOT1",124,0)
 I RPTYP=5 S HDR1=" Routine   CHKSUM Base  Our CHKSUM",HDR2=HDR2_"==========="
"RTN","XUGOT1",125,0)
 I RPTYP=7 S HDR1=" Routine   Nat Version  Loc Version  Latest Nat Patch",HDR2=" =======   ===========  ===========  =============="
"RTN","XUGOT1",126,0)
 I RPTYP=8 S HDR1=" Routine  ",HDR2=" ======="
"RTN","XUGOT1",127,0)
 ;I RPTYP=9 S HDR1=" Routine",HDR2=" ======="
"RTN","XUGOT1",128,0)
 W HDR1,!
"RTN","XUGOT1",129,0)
 W HDR2,!
"RTN","XUGOT1",130,0)
 Q
"RTN","XUGOT1",131,0)
 ;---------------------------
"RTN","XUGOT1",132,0)
%Z1 R "Enter RETURN to continue or '^' to exit: ",ST:60 S ST=$S(ST["^":1,1:0) S:'$T ST=1 W @IOF
"RTN","XUGOT1",133,0)
 Q
"RTN","XUGOT1",134,0)
 ;---------------------------
"RTN","XUGOT1",135,0)
CN I (($Y+2)=IOSL)!(($Y+3)=IOSL) S Y4=Y4+1 D:IOC&IOC1 %Z1 Q:ST  W $$PG(Y4) D HEADER
"RTN","XUGOT1",136,0)
 Q
"RTN","XUGOT1",137,0)
 ;--------------------------------------------------------------------------
"RTN","XUGOT1",138,0)
LSUM(RTN) ;Get the new Checksum LOCAL
"RTN","XUGOT1",139,0)
 I $G(RTN)="" Q ""
"RTN","XUGOT1",140,0)
 N DIF,RTNL,X,XCNP,Y
"RTN","XUGOT1",141,0)
 S X=RTN,DIF="RTNL(",XCNP=0 X ^%ZOSF("LOAD")
"RTN","XUGOT1",142,0)
 S Y=$$SUMB^XPDRSUM($NA(RTNL))
"RTN","XUGOT1",143,0)
 Q "B"_Y
"RTN","XUGOT1",144,0)
 ;
"RTN","XUGOT1",145,0)
NSUM(IEN) ; get national checksum
"RTN","XUGOT1",146,0)
 I +$G(IEN)'>0 Q ""
"RTN","XUGOT1",147,0)
 N XUI,XUSUM
"RTN","XUGOT1",148,0)
 S XUI=$G(^DIC(9.8,IEN,4)),XUSUM=$P(XUI,U,2)
"RTN","XUGOT1",149,0)
 I XUSUM["/" S XUSUM=$P(XUSUM,"/",2)
"RTN","XUGOT1",150,0)
 I XUSUM'="",XUSUM'["B" S XUSUM="B"_XUSUM ;get checksum from field #7.2
"RTN","XUGOT1",151,0)
 Q XUSUM
"RTN","XUGOT1",152,0)
 ;------------------------------
"RTN","XUGOT1",153,0)
NPLIST(IEN) ; get list patches from the field #7.3
"RTN","XUGOT1",154,0)
 I +$G(IEN)'>0 Q ""
"RTN","XUGOT1",155,0)
 N XUPLIST
"RTN","XUGOT1",156,0)
 S XUPLIST=$P($G(^DIC(9.8,+IEN,4)),"^",3)
"RTN","XUGOT1",157,0)
 S XUPLIST=$P(XUPLIST,"**",2)
"RTN","XUGOT1",158,0)
 Q $$TRIM^XLFSTR(XUPLIST)
"RTN","XUGOT1",159,0)
 ;
"RTN","XUGOT1",160,0)
NPL(IEN) ; get list patches from Patch multiple
"RTN","XUGOT1",161,0)
 I '$D(^DIC(9.8,IEN,8,0)) Q ""
"RTN","XUGOT1",162,0)
 N XUIEN,XUPC,XULP,XUFLP S (XULP,XUPC,XUFLP)="",XUIEN=0
"RTN","XUGOT1",163,0)
 F  S XUIEN=$O(^DIC(9.8,IEN,8,XUIEN)) Q:XUIEN'>0  D
"RTN","XUGOT1",164,0)
 . I XULP'="" S XUPC=XUPC_","
"RTN","XUGOT1",165,0)
 . S XUFLP=$P($G(^DIC(9.8,IEN,8,XUIEN,0)),"^"),XULP=$P(XUFLP,"*",3)
"RTN","XUGOT1",166,0)
 . S XUPC=XUPC_XULP
"RTN","XUGOT1",167,0)
 Q XUPC
"RTN","XUGOT1",168,0)
 ;
"RTN","XUGOT1",169,0)
NPL1(IEN,SUM,LPN) ; get list patches from Patch multiple
"RTN","XUGOT1",170,0)
 I '$D(^DIC(9.8,IEN,8,0)) Q ""
"RTN","XUGOT1",171,0)
 N XUIEN,XUPC,XULP,XUFLP,XUA,XUB,XUC S (XULP,XUPC,XUFLP)="",(XUB,XUIEN,XUC)=0
"RTN","XUGOT1",172,0)
 F  S XUIEN=$O(^DIC(9.8,IEN,8,XUIEN)) Q:XUIEN'>0  D
"RTN","XUGOT1",173,0)
 . I XULP'="" S XUPC=XUPC_","
"RTN","XUGOT1",174,0)
 . S XUA=$G(^DIC(9.8,IEN,8,XUIEN,0)),XUFLP=$P(XUA,"^"),XULP=$P(XUFLP,"*",3)
"RTN","XUGOT1",175,0)
 . I XULP=LPN S XUC="" I SUM'=$P(XUA,"^",2) S XUB=""
"RTN","XUGOT1",176,0)
 . S XUPC=XUPC_XULP
"RTN","XUGOT1",177,0)
 Q XUPC_"^"_XUB_"^"_XUC
"RTN","XUGOT1",178,0)
 ;
"RTN","XUGOT1",179,0)
LPLIST(SL) ; get list of patch Number from the second line
"RTN","XUGOT1",180,0)
 I $G(SL)="" Q ""
"RTN","XUGOT1",181,0)
 N XUPLIST
"RTN","XUGOT1",182,0)
 S XUPLIST=$P(SL,"**",2) ;XUPLIST=$P(XUPLIST,"**",2)
"RTN","XUGOT1",183,0)
 S XUPLIST=$$TRIM^XLFSTR(XUPLIST)
"RTN","XUGOT1",184,0)
 Q XUPLIST
"RTN","XUGOT1",185,0)
 ;
"RTN","XUGOT1",186,0)
LPATCH(PLIST) ; get the last patch number of the patch list from the second line
"RTN","XUGOT1",187,0)
 I $G(PLIST)="" Q ""
"RTN","XUGOT1",188,0)
 N XUI,PLIST1
"RTN","XUGOT1",189,0)
 S PLIST1=$TR(PLIST,","),XUI=$L(PLIST)-$L(PLIST1)
"RTN","XUGOT1",190,0)
 Q $P(PLIST,",",XUI+1)
"RTN","XUGOT1",191,0)
 ;
"RTN","XUGOT1",192,0)
NLPATCH(IEN) ;get national last patch name
"RTN","XUGOT1",193,0)
 I +$G(IEN)'>0 Q ""
"RTN","XUGOT1",194,0)
 N XUA
"RTN","XUGOT1",195,0)
 S XUA=$O(^DIC(9.8,IEN,8,"A"),-1) I XUA'>0 Q ""
"RTN","XUGOT1",196,0)
 S XUA=$G(^DIC(9.8,IEN,8,XUA,0)),XUA=$P(XUA,"^")
"RTN","XUGOT1",197,0)
 Q XUA
"RTN","XUGOT1",198,0)
 ;--------------------------------
"RTN","XUGOT1",199,0)
TRACK(IEN) ; get national information
"RTN","XUGOT1",200,0)
 N XUA
"RTN","XUGOT1",201,0)
 S XUA=$P($G(^DIC(9.8,IEN,6)),"^")
"RTN","XUGOT1",202,0)
 I (XUA="")!(XUA="Local - don't report") S XUA=0
"RTN","XUGOT1",203,0)
 I XUA="Local - report" S XUA=1
"RTN","XUGOT1",204,0)
 I XUA="National - report" S XUA=2
"RTN","XUGOT1",205,0)
 Q XUA
"RTN","XUGOT1",206,0)
 ;
"RTN","XUMFH")
0^7^B81261510^B77218033
"RTN","XUMFH",1,0)
XUMFH ;CIOFO-SF/RAM - Master File HL7 Msg Handler ;8/14/06
"RTN","XUMFH",2,0)
 ;;8.0;KERNEL;**206,209,217,218,262,335,261,390,369**;Jul 10, 1995;Build 27
"RTN","XUMFH",3,0)
 ;
"RTN","XUMFH",4,0)
 ; This routine handles Master File HL7 messages.
"RTN","XUMFH",5,0)
 ;
"RTN","XUMFH",6,0)
MAIN ; -- entry point
"RTN","XUMFH",7,0)
 ;
"RTN","XUMFH",8,0)
 N CNT,ERR,I,X,HLFS,HLCS,ERROR,HLRESLTA,IFN,IEN,MTPE,TYPE,ARRAY
"RTN","XUMFH",9,0)
 N HDT,KEY,MID,REASON,VALUE,XREF,ALL,GROUP,PARAM,ROOT,SEG,QRD
"RTN","XUMFH",10,0)
 N QID,WHAT,WHO,HLSCS,CDSYS,ERRCNT,IDX98
"RTN","XUMFH",11,0)
 ;
"RTN","XUMFH",12,0)
 D INIT,PROCESS,REPLY,EXIT
"RTN","XUMFH",13,0)
 ;
"RTN","XUMFH",14,0)
 Q
"RTN","XUMFH",15,0)
 ;
"RTN","XUMFH",16,0)
INIT ; -- initialize
"RTN","XUMFH",17,0)
 ;
"RTN","XUMFH",18,0)
 K ^TMP("DILIST",$J),^TMP("DIERR",$J)
"RTN","XUMFH",19,0)
 K ^TMP("HLS",$J),^TMP("HLA",$J),^TMP("XUMF ERROR",$J)
"RTN","XUMFH",20,0)
 ;
"RTN","XUMFH",21,0)
 S (ERROR,CNT,TYPE,ARRAY,ERRCNT)=0
"RTN","XUMFH",22,0)
 S HLFS=HL("FS"),HLCS=$E(HL("ECH")),HLSCS=$E(HL("ECH"),4)
"RTN","XUMFH",23,0)
 ;
"RTN","XUMFH",24,0)
 Q
"RTN","XUMFH",25,0)
 ;
"RTN","XUMFH",26,0)
PROCESS ; -- pull message text
"RTN","XUMFH",27,0)
 ;
"RTN","XUMFH",28,0)
 F  X HLNEXT Q:HLQUIT'>0  D
"RTN","XUMFH",29,0)
 .Q:$P(HLNODE,HLFS)=""
"RTN","XUMFH",30,0)
 .D @($P(HLNODE,HLFS))
"RTN","XUMFH",31,0)
 ;
"RTN","XUMFH",32,0)
 Q
"RTN","XUMFH",33,0)
 ;
"RTN","XUMFH",34,0)
MSH ; -- MSH segment
"RTN","XUMFH",35,0)
 ;
"RTN","XUMFH",36,0)
 Q
"RTN","XUMFH",37,0)
 ;
"RTN","XUMFH",38,0)
MSA ; -- MSA segment
"RTN","XUMFH",39,0)
 ;
"RTN","XUMFH",40,0)
 N CODE
"RTN","XUMFH",41,0)
 ;
"RTN","XUMFH",42,0)
 S CODE=$P(HLNODE,HLFS,2)
"RTN","XUMFH",43,0)
 ;
"RTN","XUMFH",44,0)
 I CODE="AE"!(CODE="AR") D
"RTN","XUMFH",45,0)
 .S ERROR=ERROR_U_$P(HLNODE,HLFS,4)_U_$G(ERR)
"RTN","XUMFH",46,0)
 .D EM(ERROR,.ERR)
"RTN","XUMFH",47,0)
 ;
"RTN","XUMFH",48,0)
 Q
"RTN","XUMFH",49,0)
 ;
"RTN","XUMFH",50,0)
QRD ; -- QRD segment
"RTN","XUMFH",51,0)
 ;
"RTN","XUMFH",52,0)
 Q:ERROR
"RTN","XUMFH",53,0)
 ;
"RTN","XUMFH",54,0)
 S QRD="QRD,QDT,QFC,QP,QID,DRT,DRDT,QLR,WHO,WHAT,WDDC,WDCVQ,QRL"
"RTN","XUMFH",55,0)
 ;
"RTN","XUMFH",56,0)
 F I=2:1:13 S PARAM($P(QRD,",",I))=$P(HLNODE,HLFS,I)
"RTN","XUMFH",57,0)
 S QID=$P(HLNODE,HLFS,5)
"RTN","XUMFH",58,0)
 S WHO=$P(HLNODE,HLFS,9)
"RTN","XUMFH",59,0)
 I WHO="" D  Q
"RTN","XUMFH",60,0)
 .S ERROR="1^QRD segment has null missing WHO parameter"
"RTN","XUMFH",61,0)
 .D EM(ERROR,.ERR)
"RTN","XUMFH",62,0)
 S WHAT=$P(HLNODE,HLFS,10)
"RTN","XUMFH",63,0)
 I WHAT="" D  Q
"RTN","XUMFH",64,0)
 .S ERROR="1^QRD segment has null missing WHAT parameter"
"RTN","XUMFH",65,0)
 .D EM(ERROR,.ERR)
"RTN","XUMFH",66,0)
 ;
"RTN","XUMFH",67,0)
 S ARRAY=$S(QID["ARRAY":1,1:0)
"RTN","XUMFH",68,0)
 S ALL=$S(WHO["ALL":1,1:0)
"RTN","XUMFH",69,0)
 S GROUP=$S(ALL:1,(WHO["IEN"):1,1:0)
"RTN","XUMFH",70,0)
 ;
"RTN","XUMFH",71,0)
 S:ARRAY TYPE=$S(GROUP:7,1:3)
"RTN","XUMFH",72,0)
 S:'ARRAY TYPE=$S(GROUP:5,1:1)
"RTN","XUMFH",73,0)
 S:HL("MTN")="MFR" TYPE=TYPE+10
"RTN","XUMFH",74,0)
 ;
"RTN","XUMFH",75,0)
 S IFN=+WHAT
"RTN","XUMFH",76,0)
 S XREF=$P(WHO,HLCS,9),ROOT=$$ROOT^DILFD(IFN,,1)
"RTN","XUMFH",77,0)
 S IEN=$O(@ROOT@(XREF,$P(WHO,HLCS),0))
"RTN","XUMFH",78,0)
 S IEN=$S(IEN:IEN,1:$P(WHO,HLCS))
"RTN","XUMFH",79,0)
 S:$L(XREF)>1 PARAM("CDSYS")=XREF
"RTN","XUMFH",80,0)
 ;
"RTN","XUMFH",81,0)
 K:ARRAY ^TMP("XUMF ARRAY",$J)
"RTN","XUMFH",82,0)
 ;
"RTN","XUMFH",83,0)
 Q
"RTN","XUMFH",84,0)
 ;
"RTN","XUMFH",85,0)
MFI ; -- MFI segment
"RTN","XUMFH",86,0)
 ;
"RTN","XUMFH",87,0)
 Q:ERROR
"RTN","XUMFH",88,0)
 Q:$G(IFN)
"RTN","XUMFH",89,0)
 ;
"RTN","XUMFH",90,0)
 I $P(HLNODE,HLFS,2)="" D  Q
"RTN","XUMFH",91,0)
 .S ERROR="1^MFI segment missing Master File Identifier"
"RTN","XUMFH",92,0)
 .D EM(ERROR,.ERR)
"RTN","XUMFH",93,0)
 S IFN=$$MFI^XUMFP($P(HLNODE,HLFS,2))
"RTN","XUMFH",94,0)
 I 'IFN D  Q
"RTN","XUMFH",95,0)
 .S ERROR="1^IFN in MFI could not be resolved"
"RTN","XUMFH",96,0)
 .D EM(ERROR,.ERR)
"RTN","XUMFH",97,0)
 ;
"RTN","XUMFH",98,0)
 Q
"RTN","XUMFH",99,0)
 ;
"RTN","XUMFH",100,0)
MFE ; -- MFE segment
"RTN","XUMFH",101,0)
 ;
"RTN","XUMFH",102,0)
 Q:ERROR
"RTN","XUMFH",103,0)
 ;Q:$G(IEN)
"RTN","XUMFH",104,0)
 ;
"RTN","XUMFH",105,0)
 S KEY=$P(HLNODE,HLFS,5) Q:ARRAY
"RTN","XUMFH",106,0)
 ;
"RTN","XUMFH",107,0)
 I $P(KEY,HLCS)="" D  Q
"RTN","XUMFH",108,0)
 .D EM("MFE segment NULL key "_$E(HLNODE,1,80),.ERR)
"RTN","XUMFH",109,0)
 .
"RTN","XUMFH",110,0)
 S XREF=$P(KEY,HLCS,3)
"RTN","XUMFH",111,0)
 S IEN=$$FIND1^DIC(IFN,,"BX",$P(KEY,HLCS),XREF,,"ERR")
"RTN","XUMFH",112,0)
 S IEN=$S(IEN:IEN,KEY["ALL":"ALL",$G(ERR)'="":"ERROR",1:"NEW")
"RTN","XUMFH",113,0)
 I IEN="ERROR" D  Q
"RTN","XUMFH",114,0)
 .D EM("MFE segment couldn't resolve IEN",.ERR)
"RTN","XUMFH",115,0)
 .K ERR
"RTN","XUMFH",116,0)
 D MAIN^XUMFP(IFN,IEN,TYPE,.PARAM,.ERROR)
"RTN","XUMFH",117,0)
 ;
"RTN","XUMFH",118,0)
 Q
"RTN","XUMFH",119,0)
 ;
"RTN","XUMFH",120,0)
ZL7 ; -- Generic Master File
"RTN","XUMFH",121,0)
ZIN ; -- VHA Institution segment
"RTN","XUMFH",122,0)
ZFT ; -- VHA Facility Type segment
"RTN","XUMFH",123,0)
LOC ; -- Location Identification segment
"RTN","XUMFH",124,0)
ZZZ ; -- get [Z...] segment(s)
"RTN","XUMFH",125,0)
 ;
"RTN","XUMFH",126,0)
 Q:ERROR
"RTN","XUMFH",127,0)
 Q:IEN="ERROR"
"RTN","XUMFH",128,0)
 ;
"RTN","XUMFH",129,0)
 I $G(ARRAY) D ARRAY Q
"RTN","XUMFH",130,0)
 ;
"RTN","XUMFH",131,0)
 N FDA,IENS,FIELD,ERR,PRE,POST,XUMF,MULT,FDA1,SEQ,SEQ1,SEQ2,SEQ3
"RTN","XUMFH",132,0)
 ;
"RTN","XUMFH",133,0)
 S PRE=$G(^TMP("XUMF MFS",$J,"PARAM","PRE"))
"RTN","XUMFH",134,0)
 D:PRE'="" @(PRE)
"RTN","XUMFH",135,0)
 ;
"RTN","XUMFH",136,0)
 S XUMF=7
"RTN","XUMFH",137,0)
 ;
"RTN","XUMFH",138,0)
 S SEG=$P(HLNODE,HLFS)
"RTN","XUMFH",139,0)
 S IENS=$S(IEN:IEN,1:"+1")_","
"RTN","XUMFH",140,0)
 S SEQ=0
"RTN","XUMFH",141,0)
 F  S SEQ=$O(^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ)) Q:'SEQ  D
"RTN","XUMFH",142,0)
 .S SEQ1=$P(SEQ,"."),SEQ2=$P(SEQ,".",2)
"RTN","XUMFH",143,0)
 .S SEQ3=$O(^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,"HLSCS",0))
"RTN","XUMFH",144,0)
 .I SEQ3 D SUBCOMP Q
"RTN","XUMFH",145,0)
 .S FIELD=$O(^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,0))
"RTN","XUMFH",146,0)
 .I FIELD=".01" D
"RTN","XUMFH",147,0)
 ..N FDA,IEN1
"RTN","XUMFH",148,0)
 ..S TYP=$G(^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,FIELD))
"RTN","XUMFH",149,0)
 ..S VALUE=$$VALUE()
"RTN","XUMFH",150,0)
 ..S:SEQ2 VALUE=$$VAL2()
"RTN","XUMFH",151,0)
 ..S VALUE=$$DTYP^XUMFP(VALUE,TYP,HLCS,0)
"RTN","XUMFH",152,0)
 ..S FDA(IFN,IENS,FIELD)=VALUE
"RTN","XUMFH",153,0)
 ..D UPDATE^DIE("E","FDA","IEN1","ERR")
"RTN","XUMFH",154,0)
 ..I $D(ERR) D
"RTN","XUMFH",155,0)
 ...D EM("Update DIE - error message",.ERR)
"RTN","XUMFH",156,0)
 ...K ERR
"RTN","XUMFH",157,0)
 ..I $D(IEN1) S IENS=IEN1(1)_","
"RTN","XUMFH",158,0)
 .I 'FIELD D SUBFILE Q
"RTN","XUMFH",159,0)
 .S TYP=$G(^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,FIELD))
"RTN","XUMFH",160,0)
 .S VALUE=$$VALUE()
"RTN","XUMFH",161,0)
 .S:SEQ2 VALUE=$$VAL2()
"RTN","XUMFH",162,0)
 .S VALUE=$$DTYP^XUMFP(VALUE,TYP,HLCS,0)
"RTN","XUMFH",163,0)
 .S FDA(IFN,IENS,FIELD)=VALUE
"RTN","XUMFH",164,0)
 ;
"RTN","XUMFH",165,0)
 M FDA=FDA1
"RTN","XUMFH",166,0)
 ;
"RTN","XUMFH",167,0)
 D FILE^DIE("E","FDA","ERR")
"RTN","XUMFH",168,0)
 I $D(ERR) D
"RTN","XUMFH",169,0)
 .D EM("File DIE -- error message",.ERR)
"RTN","XUMFH",170,0)
 .K ERR
"RTN","XUMFH",171,0)
 ;
"RTN","XUMFH",172,0)
 S POST=$G(^TMP("XUMF MFS",$J,"PARAM","POST"))
"RTN","XUMFH",173,0)
 D:POST'="" @(POST)
"RTN","XUMFH",174,0)
 ;
"RTN","XUMFH",175,0)
 K IEN
"RTN","XUMFH",176,0)
 ;
"RTN","XUMFH",177,0)
 Q
"RTN","XUMFH",178,0)
 ;
"RTN","XUMFH",179,0)
SUBFILE ; -- process subfile record
"RTN","XUMFH",180,0)
 ;
"RTN","XUMFH",181,0)
 N IFN,IENS1,KEY1,FIELD,TYP,MKEY,ERR
"RTN","XUMFH",182,0)
 ;
"RTN","XUMFH",183,0)
 S IFN=^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,"FILE")
"RTN","XUMFH",184,0)
 S FIELD=^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,"FIELD")
"RTN","XUMFH",185,0)
 S TYP=^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,"DTYP")
"RTN","XUMFH",186,0)
 S VALUE=$$VALUE()
"RTN","XUMFH",187,0)
 S:SEQ2 VALUE=$$VAL2()
"RTN","XUMFH",188,0)
 S VALUE=$$DTYP^XUMFP(VALUE,TYP,HLCS,0)
"RTN","XUMFH",189,0)
 ;
"RTN","XUMFH",190,0)
 S MULT=$G(^TMP("XUMF MFS",$J,"PARAM","MULT",SEG,SEQ))
"RTN","XUMFH",191,0)
 S MKEY=$G(^TMP("XUMF MFS",$J,"PARAM","MKEY",SEG,SEQ))
"RTN","XUMFH",192,0)
 I MULT=SEQ Q:VALUE=""  D
"RTN","XUMFH",193,0)
 .N FDA,IEN
"RTN","XUMFH",194,0)
 .S FDA(IFN,"?+1,"_IENS,.01)=VALUE
"RTN","XUMFH",195,0)
 .D UPDATE^DIE("E","FDA","IEN","ERR")
"RTN","XUMFH",196,0)
 .I $D(ERR) D
"RTN","XUMFH",197,0)
 ..D EM("update DIE call error message in SUBFILE",.ERR)
"RTN","XUMFH",198,0)
 ..K ERR
"RTN","XUMFH",199,0)
 .S IENS1=IEN(1)_","_IENS,MULT(SEQ)=IENS1
"RTN","XUMFH",200,0)
 I 'MULT D
"RTN","XUMFH",201,0)
 .N FDA,IEN
"RTN","XUMFH",202,0)
 .S FDA(IFN,"?+1,"_IENS,.01)=MKEY
"RTN","XUMFH",203,0)
 .D UPDATE^DIE("E","FDA","IEN","ERR")
"RTN","XUMFH",204,0)
 .I $D(ERR) D
"RTN","XUMFH",205,0)
 ..D EM("update DIE call error message in SUBFILE",.ERR)
"RTN","XUMFH",206,0)
 ..K ERR
"RTN","XUMFH",207,0)
 .S IENS1=IEN(1)_","_IENS,MULT(SEQ)=IENS1
"RTN","XUMFH",208,0)
 .S FDA1(IFN,IENS1,.01)=MKEY
"RTN","XUMFH",209,0)
 I MULT,MULT'=SEQ S IENS1=$G(MULT(+MULT)) Q:IENS1=""
"RTN","XUMFH",210,0)
 S FDA1(IFN,IENS1,FIELD)=VALUE
"RTN","XUMFH",211,0)
 ;
"RTN","XUMFH",212,0)
 Q
"RTN","XUMFH",213,0)
 ;
"RTN","XUMFH",214,0)
VALUE() ; -- parse segment
"RTN","XUMFH",215,0)
 ;
"RTN","XUMFH",216,0)
 N COL
"RTN","XUMFH",217,0)
 ;
"RTN","XUMFH",218,0)
 D SEGPRSE^XUMFXHL7("HLNODE","COL")
"RTN","XUMFH",219,0)
 ;
"RTN","XUMFH",220,0)
 Q:SEQ2 COL($P(SEQ,"."))
"RTN","XUMFH",221,0)
 ;
"RTN","XUMFH",222,0)
 Q COL(SEQ)
"RTN","XUMFH",223,0)
 ;
"RTN","XUMFH",224,0)
 ;
"RTN","XUMFH",225,0)
VAL2() ; -- parse component
"RTN","XUMFH",226,0)
 ;
"RTN","XUMFH",227,0)
 N XXX
"RTN","XUMFH",228,0)
 ;
"RTN","XUMFH",229,0)
 D SEQPRSE^XUMFXHL7("VALUE","XXX")
"RTN","XUMFH",230,0)
 ;
"RTN","XUMFH",231,0)
 Q XXX(1,SEQ2)
"RTN","XUMFH",232,0)
 ;
"RTN","XUMFH",233,0)
 ;
"RTN","XUMFH",234,0)
SUBCOMP ; -- subcomponents
"RTN","XUMFH",235,0)
 ;
"RTN","XUMFH",236,0)
 S SEQ3=0
"RTN","XUMFH",237,0)
 F  S SEQ3=$O(^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,"HLSCS",SEQ3)) Q:'SEQ3  D
"RTN","XUMFH",238,0)
 .S FIELD=$O(^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,"HLSCS",SEQ3,0))
"RTN","XUMFH",239,0)
 .S TYP=$G(^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,"HLSCS",SEQ3,FIELD))
"RTN","XUMFH",240,0)
 .S VALUE=$$VALUE()
"RTN","XUMFH",241,0)
 .S VALUE=$$VAL2()
"RTN","XUMFH",242,0)
 .S VALUE=$P(VALUE,HLSCS,SEQ3)
"RTN","XUMFH",243,0)
 .S VALUE=$$DTYP^XUMFP(VALUE,TYP,HLSCS,0)
"RTN","XUMFH",244,0)
 .S FDA(IFN,IENS,FIELD)=VALUE
"RTN","XUMFH",245,0)
 ;
"RTN","XUMFH",246,0)
 Q
"RTN","XUMFH",247,0)
 ;
"RTN","XUMFH",248,0)
ARRAY ; -- query data stored in array (not filed)
"RTN","XUMFH",249,0)
 ;
"RTN","XUMFH",250,0)
 I $P($G(KEY),HLCS)="" D  Q
"RTN","XUMFH",251,0)
 .D EM("Null KEY found in the following segment: "_$E(HLNODE,1,80),.ERR)
"RTN","XUMFH",252,0)
 .S ERROR=ERROR_U_$G(ERR)
"RTN","XUMFH",253,0)
 ;
"RTN","XUMFH",254,0)
 I $G(IFN)=9.8 D  Q
"RTN","XUMFH",255,0)
 .S IDX98=$G(IDX98)+1
"RTN","XUMFH",256,0)
 .S ^TMP("XUMF ARRAY",$J,IDX98)=HLNODE
"RTN","XUMFH",257,0)
 ;
"RTN","XUMFH",258,0)
 M ^TMP("XUMF ARRAY",$J,$P(KEY,HLCS))=HLNODE
"RTN","XUMFH",259,0)
 ;
"RTN","XUMFH",260,0)
 Q
"RTN","XUMFH",261,0)
 ;
"RTN","XUMFH",262,0)
REPLY ; -- master file response
"RTN","XUMFH",263,0)
 ;
"RTN","XUMFH",264,0)
 Q:HL("MTN")="MFR"
"RTN","XUMFH",265,0)
 Q:HL("MTN")="MFK"
"RTN","XUMFH",266,0)
 Q:HL("MTN")="ACK"
"RTN","XUMFH",267,0)
 ;
"RTN","XUMFH",268,0)
 S:(TYPE<10) TYPE=(TYPE+10)
"RTN","XUMFH",269,0)
 ;
"RTN","XUMFH",270,0)
 I HL("MTN")="MFQ" D
"RTN","XUMFH",271,0)
 .S IFN=+$G(WHAT) I 'IFN D  Q
"RTN","XUMFH",272,0)
 ..S ERROR="1^REPLY MFQ couldn't resolve IFN"
"RTN","XUMFH",273,0)
 ..D EM(ERROR,.ERR)
"RTN","XUMFH",274,0)
 .S XREF=$P(WHO,HLCS,9),ROOT=$$ROOT^DILFD(IFN,,1)
"RTN","XUMFH",275,0)
 .S IEN=$O(@ROOT@(XREF,$P(WHO,HLCS),0))
"RTN","XUMFH",276,0)
 .S IEN=$S(IEN:IEN,1:$P(WHO,HLCS))
"RTN","XUMFH",277,0)
 ;
"RTN","XUMFH",278,0)
 S IFN=$G(IFN),IEN=$G(IEN)
"RTN","XUMFH",279,0)
 ;
"RTN","XUMFH",280,0)
 D MAIN^XUMFP(IFN,IEN,TYPE,.PARAM,.ERROR)
"RTN","XUMFH",281,0)
 D MAIN^XUMFI(IFN,IEN,TYPE,.PARAM,.ERROR)
"RTN","XUMFH",282,0)
 ;
"RTN","XUMFH",283,0)
 Q
"RTN","XUMFH",284,0)
 ;
"RTN","XUMFH",285,0)
EXIT ; -- cleanup, and quit
"RTN","XUMFH",286,0)
 ;
"RTN","XUMFH",287,0)
 I $D(^TMP("XUMF ERROR",$J)) D EM1 K ^TMP("XUMF ERROR",$J)
"RTN","XUMFH",288,0)
 ;
"RTN","XUMFH",289,0)
 K ^TMP("DILIST",$J),^TMP("DIERR",$J),^TMP("HLS",$J),^TMP("HLA",$J)
"RTN","XUMFH",290,0)
 ;
"RTN","XUMFH",291,0)
 Q
"RTN","XUMFH",292,0)
 ;
"RTN","XUMFH",293,0)
EM(ERROR,ERR) ; -- error message
"RTN","XUMFH",294,0)
 ;
"RTN","XUMFH",295,0)
 N X,I,Y,XMTEXT,FLG
"RTN","XUMFH",296,0)
 ;
"RTN","XUMFH",297,0)
 S FLG=0
"RTN","XUMFH",298,0)
 ;
"RTN","XUMFH",299,0)
 D MSG^DIALOG("AM",.X,80,,"ERR")
"RTN","XUMFH",300,0)
 ;
"RTN","XUMFH",301,0)
 ;S X(.02)="",X(.03)=$G(ERROR),X(.04)=""
"RTN","XUMFH",302,0)
 ;
"RTN","XUMFH",303,0)
 S X=.9 F  S X=$O(X(X)) Q:'X  D
"RTN","XUMFH",304,0)
 .I X(X)="" K X(X) Q
"RTN","XUMFH",305,0)
 .I X(X)["DINUMed field cannot" S FLG=1 K X(X) Q
"RTN","XUMFH",306,0)
 .I X(X)["ASSOCIATION" S FLG=1 K X(X) Q
"RTN","XUMFH",307,0)
 .I X(X)["INSTITUTION" S FLG=1 K X(X) Q
"RTN","XUMFH",308,0)
 .I X(X)["The entry does not exist." S FLG=1 K X(X) Q
"RTN","XUMFH",309,0)
 .I X(X)["already exists." S FLG=1 K X(X) Q
"RTN","XUMFH",310,0)
 ;
"RTN","XUMFH",311,0)
 I FLG Q:'$O(X(.9))
"RTN","XUMFH",312,0)
 ;
"RTN","XUMFH",313,0)
 S ERRCNT=ERRCNT+1
"RTN","XUMFH",314,0)
 ;
"RTN","XUMFH",315,0)
 S ^TMP("XUMF ERROR",$J,ERRCNT_".01")=""
"RTN","XUMFH",316,0)
 S ^TMP("XUMF ERROR",$J,ERRCNT_".02")=""
"RTN","XUMFH",317,0)
 S ^TMP("XUMF ERROR",$J,ERRCNT_".03")=$G(ERROR)
"RTN","XUMFH",318,0)
 S ^TMP("XUMF ERROR",$J,ERRCNT_".04")=""
"RTN","XUMFH",319,0)
 S ^TMP("XUMF ERROR",$J,ERRCNT_".05")="KEY: "_$G(KEY)_"   IFN: "_$G(IFN)_"   IEN: "_$G(IEN)
"RTN","XUMFH",320,0)
 S ^TMP("XUMF ERROR",$J,ERRCNT_".06")=""
"RTN","XUMFH",321,0)
 S X=.9 F  S X=$O(X(X)) Q:'X  D
"RTN","XUMFH",322,0)
 .S ^TMP("XUMF ERROR",$J,ERRCNT_"."_X)=X(X)
"RTN","XUMFH",323,0)
 ;
"RTN","XUMFH",324,0)
 Q
"RTN","XUMFH",325,0)
 ;
"RTN","XUMFH",326,0)
EM1 ;
"RTN","XUMFH",327,0)
 ;
"RTN","XUMFH",328,0)
 N XMY,XMSUB
"RTN","XUMFH",329,0)
 ;
"RTN","XUMFH",330,0)
 S ^TMP("XUMF ERROR",$J,.1)="HL7 message ID: "_$G(HL("MID"))
"RTN","XUMFH",331,0)
 S XMY("G.XUMF ERROR")="",XMSUB="MFS ERROR"
"RTN","XUMFH",332,0)
 S XMTEXT="^TMP(""XUMF ERROR"",$J,"
"RTN","XUMFH",333,0)
 ;
"RTN","XUMFH",334,0)
 D ^XMD
"RTN","XUMFH",335,0)
 ;
"RTN","XUMFH",336,0)
 Q
"RTN","XUMFH",337,0)
 ;
"RTN","XUMFI")
0^6^B61663922^B79789892
"RTN","XUMFI",1,0)
XUMFI ;CIOFO-SF/RAM - Master File Interface ;8/14/06
"RTN","XUMFI",2,0)
 ;;8.0;KERNEL;**206,217,218,335,261,369**;Jul 10, 1995;Build 27
"RTN","XUMFI",3,0)
 ;
"RTN","XUMFI",4,0)
 ; This routine is the Master File Server HL7 message builder API.
"RTN","XUMFI",5,0)
 ; The routine will generate messages for both trigger events and
"RTN","XUMFI",6,0)
 ; queries.
"RTN","XUMFI",7,0)
 ;
"RTN","XUMFI",8,0)
 ; Use the routine XUMFP to initialize the PARAM array.
"RTN","XUMFI",9,0)
 ; See XUMFP for a full description of the parameters.
"RTN","XUMFI",10,0)
 ;
"RTN","XUMFI",11,0)
 ; use of $O(^HLCS(870,"C",institution_ptr)) supported by IA# 3550
"RTN","XUMFI",12,0)
 ;
"RTN","XUMFI",13,0)
MAIN(IFN,IEN,TYPE,PARAM,ERROR) ;  -- entry point
"RTN","XUMFI",14,0)
 ;
"RTN","XUMFI",15,0)
 ;
"RTN","XUMFI",16,0)
 N HLFS,HLCS,HLRESLT,QUERY,UPDATE,ALL,CNT,ROOT,PROTOCOL,MFR,MFQ,MTYP,I
"RTN","XUMFI",17,0)
 N ARRAY,GROUP,MFK,CDSYS,J,HLSCS
"RTN","XUMFI",18,0)
 ;
"RTN","XUMFI",19,0)
 M ^TMP("XUMF MFS",$J,"PARAM")=PARAM K PARAM
"RTN","XUMFI",20,0)
 ;
"RTN","XUMFI",21,0)
 D INIT^XUMFI0,BUILD,LLNK,SEND,EXIT
"RTN","XUMFI",22,0)
 ;
"RTN","XUMFI",23,0)
 ;
"RTN","XUMFI",24,0)
 Q
"RTN","XUMFI",25,0)
 ;
"RTN","XUMFI",26,0)
BUILD ; -- build message
"RTN","XUMFI",27,0)
 ;
"RTN","XUMFI",28,0)
 I MFK D MFK Q
"RTN","XUMFI",29,0)
 ;
"RTN","XUMFI",30,0)
 Q:ERROR
"RTN","XUMFI",31,0)
 ;
"RTN","XUMFI",32,0)
 N ID,APP,EVENT,ENDT,EFFDT,RESP,MFI,MFN,EDT,CODE,MFE
"RTN","XUMFI",33,0)
 ;
"RTN","XUMFI",34,0)
 I QUERY D QRD Q:MFQ
"RTN","XUMFI",35,0)
 ;
"RTN","XUMFI",36,0)
 D MFI
"RTN","XUMFI",37,0)
 ;
"RTN","XUMFI",38,0)
 I GROUP D GROUP Q
"RTN","XUMFI",39,0)
 ;
"RTN","XUMFI",40,0)
 D MFE,ZZZ
"RTN","XUMFI",41,0)
 ;
"RTN","XUMFI",42,0)
 Q
"RTN","XUMFI",43,0)
 ;
"RTN","XUMFI",44,0)
MFK ; -- master file acknowledgement
"RTN","XUMFI",45,0)
 ;
"RTN","XUMFI",46,0)
 N X
"RTN","XUMFI",47,0)
 S X="MSA"_HLFS_$S(ERROR:"AE",1:"AA")_HLFS_HL("MID")_HLFS_$P(ERROR,U,2)
"RTN","XUMFI",48,0)
 S ^TMP(MTYP,$J,CNT)=X
"RTN","XUMFI",49,0)
 S CNT=CNT+1
"RTN","XUMFI",50,0)
 ;
"RTN","XUMFI",51,0)
 Q
"RTN","XUMFI",52,0)
 ;
"RTN","XUMFI",53,0)
QRD ; -- query definition segment
"RTN","XUMFI",54,0)
 ;
"RTN","XUMFI",55,0)
 I TYPE>10 D
"RTN","XUMFI",56,0)
 .S ^TMP(MTYP,$J,CNT)="MSA"_HLFS_$S(ERROR:"AE",1:"AA")_HLFS_HL("MID")
"RTN","XUMFI",57,0)
 .S CNT=CNT+1
"RTN","XUMFI",58,0)
 ;
"RTN","XUMFI",59,0)
 Q:ERROR
"RTN","XUMFI",60,0)
 ;
"RTN","XUMFI",61,0)
 N QDT,QFC,QP,QID,ZDRT,ZDRDT,QLR,WHO,WHAT,WDDC,WDCVQ,QRL,QRD
"RTN","XUMFI",62,0)
 ;
"RTN","XUMFI",63,0)
 S QDT=$G(^TMP("XUMF MFS",$J,"PARAM","QDT"))
"RTN","XUMFI",64,0)
 S QFC=$G(^TMP("XUMF MFS",$J,"PARAM","QFC"))
"RTN","XUMFI",65,0)
 S QP=$G(^TMP("XUMF MFS",$J,"PARAM","QP"))
"RTN","XUMFI",66,0)
 S QID=$G(^TMP("XUMF MFS",$J,"PARAM","QID"))
"RTN","XUMFI",67,0)
 S ZDRT=$G(^TMP("XUMF MFS",$J,"PARAM","DRT"))
"RTN","XUMFI",68,0)
 S ZDRDT=$G(^TMP("XUMF MFS",$J,"PARAM","DRDT"))
"RTN","XUMFI",69,0)
 S QLR=$G(^TMP("XUMF MFS",$J,"PARAM","QLR"))
"RTN","XUMFI",70,0)
 S WHO=$G(^TMP("XUMF MFS",$J,"PARAM","WHO"))
"RTN","XUMFI",71,0)
 S WHAT=$G(^TMP("XUMF MFS",$J,"PARAM","WHAT"))
"RTN","XUMFI",72,0)
 S WDDC=$G(^TMP("XUMF MFS",$J,"PARAM","WDDC"))
"RTN","XUMFI",73,0)
 S WDCVQ=$G(^TMP("XUMF MFS",$J,"PARAM","WDCVQ"))
"RTN","XUMFI",74,0)
 S QRL=$G(^TMP("XUMF MFS",$J,"PARAM","QRL"))
"RTN","XUMFI",75,0)
 S QRD="QRD"_HLFS_QDT_HLFS_QFC_HLFS_QP_HLFS_QID_HLFS_ZDRT_HLFS_ZDRDT
"RTN","XUMFI",76,0)
 S QRD=QRD_HLFS_QLR_HLFS_WHO_HLFS_WHAT_HLFS_WDDC_HLFS_WDCVQ_HLFS_QRL
"RTN","XUMFI",77,0)
 S ^TMP(MTYP,$J,CNT)=QRD
"RTN","XUMFI",78,0)
 S CNT=CNT+1
"RTN","XUMFI",79,0)
 ;
"RTN","XUMFI",80,0)
 Q
"RTN","XUMFI",81,0)
 ;
"RTN","XUMFI",82,0)
MFI ; master file identifier segment
"RTN","XUMFI",83,0)
 ;
"RTN","XUMFI",84,0)
 Q:ERROR
"RTN","XUMFI",85,0)
 ;
"RTN","XUMFI",86,0)
 N ID,APP,EVENT,ENDT,EFFDT,RESP,MFI
"RTN","XUMFI",87,0)
 ;
"RTN","XUMFI",88,0)
 S ID=$G(^TMP("XUMF MFS",$J,"PARAM","MFI"))
"RTN","XUMFI",89,0)
 S APP=$G(^TMP("XUMF MFS",$J,"PARAM","MFAI"))
"RTN","XUMFI",90,0)
 S EVENT=$G(^TMP("XUMF MFS",$J,"PARAM","FLEV"))
"RTN","XUMFI",91,0)
 S ENDT=$G(^TMP("XUMF MFS",$J,"PARAM","ENDT"))
"RTN","XUMFI",92,0)
 S EFFDT=$G(^TMP("XUMF MFS",$J,"PARAM","MFIEDT"))
"RTN","XUMFI",93,0)
 S RESP=$G(^TMP("XUMF MFS",$J,"PARAM","RLC"))
"RTN","XUMFI",94,0)
 S:APP="" APP="MFS" S:EVENT="" EVENT="REP" S:RESP="" RESP="NE"
"RTN","XUMFI",95,0)
 S:ENDT="" ENDT=$$NOW^XLFDT S:EFFDT="" EFFDT=$$NOW^XLFDT
"RTN","XUMFI",96,0)
 S MFI=$$MFI^XUMFMFI(ID,APP,EVENT,ENDT,EFFDT,RESP)
"RTN","XUMFI",97,0)
 I $E(MFI)="-" S ERROR=MFI Q
"RTN","XUMFI",98,0)
 S ^TMP(MTYP,$J,CNT)=MFI
"RTN","XUMFI",99,0)
 S CNT=CNT+1
"RTN","XUMFI",100,0)
 ;
"RTN","XUMFI",101,0)
 Q
"RTN","XUMFI",102,0)
 ;
"RTN","XUMFI",103,0)
MFE ; master file entry segment
"RTN","XUMFI",104,0)
 ;
"RTN","XUMFI",105,0)
 Q:ERROR
"RTN","XUMFI",106,0)
 ;
"RTN","XUMFI",107,0)
 N EVENT,MFN,EDT,CODE,MFE
"RTN","XUMFI",108,0)
 ;
"RTN","XUMFI",109,0)
 S EVENT=$G(^TMP("XUMF MFS",$J,"PARAM","RLEC"))
"RTN","XUMFI",110,0)
 S MFN=$G(^TMP("XUMF MFS",$J,"PARAM","MFNCID"))
"RTN","XUMFI",111,0)
 S EDT=$G(^TMP("XUMF MFS",$J,"PARAM","MFEEDT"))
"RTN","XUMFI",112,0)
 S CODE=$G(^TMP("XUMF MFS",$J,"PARAM","PKV"))
"RTN","XUMFI",113,0)
 S:EDT="" EDT=$$NOW^XLFDT S:EVENT="" EVENT="MAD"
"RTN","XUMFI",114,0)
 S MFE=$$MFE^XUMFMFE(EVENT,MFN,EDT,CODE)
"RTN","XUMFI",115,0)
 I $E(MFE)="-" S ERROR=MFE Q
"RTN","XUMFI",116,0)
 S ^TMP(MTYP,$J,CNT)=MFE
"RTN","XUMFI",117,0)
 S CNT=CNT+1
"RTN","XUMFI",118,0)
 ;
"RTN","XUMFI",119,0)
 Q
"RTN","XUMFI",120,0)
 ;
"RTN","XUMFI",121,0)
ZZZ ; [Z...] segment
"RTN","XUMFI",122,0)
 ;
"RTN","XUMFI",123,0)
 Q:ERROR
"RTN","XUMFI",124,0)
 ;
"RTN","XUMFI",125,0)
 N SEG,SEQ,ZZZ,FLD,FILE,IENS,VALUE,ERR,ZDTYP,FIELD,SEQ1,SEQ2,SEQ3
"RTN","XUMFI",126,0)
 N SEQ0,SEQ9,CNT1,CNT2,NODE,XXX
"RTN","XUMFI",127,0)
 ;
"RTN","XUMFI",128,0)
 S SEG="",SEQ=0
"RTN","XUMFI",129,0)
 F  S SEG=$O(^TMP("XUMF MFS",$J,"PARAM","SEG",SEG)) Q:SEG=""  D
"RTN","XUMFI",130,0)
 .S ZZZ=SEG
"RTN","XUMFI",131,0)
 .F  S SEQ=$O(^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ)) Q:'SEQ  D
"RTN","XUMFI",132,0)
 ..;
"RTN","XUMFI",133,0)
 ..S SEQ1=$P(SEQ,"."),SEQ2=$P(SEQ,".",2)
"RTN","XUMFI",134,0)
 ..S SEQ3=$O(^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,"HLSCS",0))
"RTN","XUMFI",135,0)
 ..;
"RTN","XUMFI",136,0)
 ..I SEQ3 D SUBCOMP Q
"RTN","XUMFI",137,0)
 ..;
"RTN","XUMFI",138,0)
 ..S FLD=$O(^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,0))
"RTN","XUMFI",139,0)
 ..;
"RTN","XUMFI",140,0)
 ..I 'FLD D
"RTN","XUMFI",141,0)
 ...S FILE=^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,"FILE")
"RTN","XUMFI",142,0)
 ...S IENS=$G(^TMP("XUMF MFS",$J,"PARAM","IENS",SEG,SEQ))
"RTN","XUMFI",143,0)
 ...S FIELD=^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,"FIELD")
"RTN","XUMFI",144,0)
 ...S ZDTYP=^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,"DTYP")
"RTN","XUMFI",145,0)
 ...I $P(ZDTYP,U,3)[":" S FIELD=FIELD_$P(ZDTYP,U,3)
"RTN","XUMFI",146,0)
 ...S VALUE=$$GET1^DIQ(FILE,IENS,FIELD)
"RTN","XUMFI",147,0)
 ...S VALUE=$$DTYP^XUMFP(VALUE,ZDTYP,HLCS,1)
"RTN","XUMFI",148,0)
 ..I FLD D
"RTN","XUMFI",149,0)
 ...S ZDTYP=$G(^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,FLD))
"RTN","XUMFI",150,0)
 ...I $P(ZDTYP,U,3)[":" S FLD=FLD_$P(ZDTYP,U,3)
"RTN","XUMFI",151,0)
 ...S VALUE=$$GET1^DIQ(IFN,IEN_",",FLD)
"RTN","XUMFI",152,0)
 ...S VALUE=$$DTYP^XUMFP(VALUE,ZDTYP,HLCS,1)
"RTN","XUMFI",153,0)
 ..;
"RTN","XUMFI",154,0)
 ..S ZZZ(SEQ)=VALUE
"RTN","XUMFI",155,0)
 .;
"RTN","XUMFI",156,0)
 .S X=0
"RTN","XUMFI",157,0)
 .F  S X=$O(ZZZ(X)) Q:'X  D
"RTN","XUMFI",158,0)
 ..S SEQ1=$P(X,"."),SEQ2=+$P(X,".",2)
"RTN","XUMFI",159,0)
 ..S XXX(SEQ1,SEQ2)=ZZZ(X)
"RTN","XUMFI",160,0)
 .K ZZZ
"RTN","XUMFI",161,0)
 .M ZZZ=XXX
"RTN","XUMFI",162,0)
 .;
"RTN","XUMFI",163,0)
 .K NODE
"RTN","XUMFI",164,0)
 .S (SEQ,SEQ0,SEQ9,SEQ1,CNT1,CNT2)=0,NODE=""
"RTN","XUMFI",165,0)
 .F  S SEQ1=$O(ZZZ(SEQ1)) Q:'SEQ1  D
"RTN","XUMFI",166,0)
 ..S SEQ2=0,VALUE=$G(ZZZ(SEQ1,SEQ2))
"RTN","XUMFI",167,0)
 ..F  S SEQ2=$O(ZZZ(SEQ1,SEQ2)) Q:'SEQ2  D
"RTN","XUMFI",168,0)
 ...S $P(VALUE,HLCS,SEQ2)=ZZZ(SEQ1,SEQ2)
"RTN","XUMFI",169,0)
 ..S NODE(CNT1)=$G(NODE(CNT1))
"RTN","XUMFI",170,0)
 ..I NODE(CNT1)'="",$L(NODE(CNT1)_VALUE)>200 D
"RTN","XUMFI",171,0)
 ...S CNT1=CNT1+1,SEQ9=SEQ0+SEQ9
"RTN","XUMFI",172,0)
 ..S SEQ=$S('CNT1:SEQ1,1:SEQ1-SEQ9)
"RTN","XUMFI",173,0)
 ..S $P(NODE(CNT1),HLFS,SEQ)=VALUE
"RTN","XUMFI",174,0)
 ..S SEQ0=SEQ-1
"RTN","XUMFI",175,0)
 .;
"RTN","XUMFI",176,0)
 .S NODE=SEG_HLFS_$G(NODE(0)) K NODE(0)
"RTN","XUMFI",177,0)
 .;
"RTN","XUMFI",178,0)
 .M ^TMP(MTYP,$J,CNT)=NODE
"RTN","XUMFI",179,0)
 .S CNT=CNT+1
"RTN","XUMFI",180,0)
 .;
"RTN","XUMFI",181,0)
 .I $D(^TMP("XUMF MFS",$J,"PARAM",IEN,"ROUTINE",5)) D
"RTN","XUMFI",182,0)
 ..S X=0 F  S X=$O(^TMP("XUMF MFS",$J,"PARAM",IEN,"ROUTINE",5,X)) Q:'X  D
"RTN","XUMFI",183,0)
 ...S IENS=$G(^TMP("XUMF MFS",$J,"PARAM",IEN,"ROUTINE",5,X))
"RTN","XUMFI",184,0)
 ...S VALUE=$$GET1^DIQ(9.818,IENS,.01),$P(NODE,HLFS,6)=VALUE
"RTN","XUMFI",185,0)
 ...S VALUE=$$GET1^DIQ(9.818,IENS,2),$P(NODE,HLFS,7)=VALUE
"RTN","XUMFI",186,0)
 ...S ^TMP(MTYP,$J,CNT)=NODE
"RTN","XUMFI",187,0)
 ...S CNT=CNT+1
"RTN","XUMFI",188,0)
 ;
"RTN","XUMFI",189,0)
 Q
"RTN","XUMFI",190,0)
 ;
"RTN","XUMFI",191,0)
SUBCOMP ; -- subcomponents
"RTN","XUMFI",192,0)
 ;
"RTN","XUMFI",193,0)
 N A,YYY
"RTN","XUMFI",194,0)
 ;
"RTN","XUMFI",195,0)
 M A=^TMP("XUMF MFS",$J,"PARAM","SEG",SEG,"SEQ",SEQ,"HLSCS")
"RTN","XUMFI",196,0)
 S YYY=""
"RTN","XUMFI",197,0)
 ;
"RTN","XUMFI",198,0)
 S SEQ3=0
"RTN","XUMFI",199,0)
 F  S SEQ3=$O(A(SEQ3)) Q:'SEQ3  D
"RTN","XUMFI",200,0)
 .S FLD=$O(A(SEQ3,0))
"RTN","XUMFI",201,0)
 .S ZDTYP=$G(A(SEQ3,FLD))
"RTN","XUMFI",202,0)
 .I $P(ZDTYP,U,3)[":" S FLD=FLD_$P(ZDTYP,U,3)
"RTN","XUMFI",203,0)
 .S VALUE=$$GET1^DIQ(IFN,IEN_",",FLD)
"RTN","XUMFI",204,0)
 .S VALUE=$$DTYP^XUMFP(VALUE,ZDTYP,HLSCS,1)
"RTN","XUMFI",205,0)
 .S $P(YYY,HLSCS,SEQ3)=VALUE
"RTN","XUMFI",206,0)
 ;
"RTN","XUMFI",207,0)
 S ZZZ(SEQ)=YYY
"RTN","XUMFI",208,0)
 ;
"RTN","XUMFI",209,0)
 Q
"RTN","XUMFI",210,0)
 ;
"RTN","XUMFI",211,0)
GROUP ; -- query group records
"RTN","XUMFI",212,0)
 ;
"RTN","XUMFI",213,0)
 Q:ERROR
"RTN","XUMFI",214,0)
 ;
"RTN","XUMFI",215,0)
 S IEN=0
"RTN","XUMFI",216,0)
 F  S IEN=$O(^TMP("XUMF MFS",$J,"PARAM","IEN",IEN)) Q:'IEN  D
"RTN","XUMFI",217,0)
 .K ^TMP("XUMF MFS",$J,"PARAM","PKV")
"RTN","XUMFI",218,0)
 .K ^TMP("XUMF MFS",$J,"PARAM","IENS")
"RTN","XUMFI",219,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","PKV")=^TMP("XUMF MFS",$J,"PARAM",IEN,"PKV")
"RTN","XUMFI",220,0)
 .M ^TMP("XUMF MFS",$J,"PARAM","IENS")=^TMP("XUMF MFS",$J,"PARAM",IEN,"IENS")
"RTN","XUMFI",221,0)
 .D MFE,ZZZ
"RTN","XUMFI",222,0)
 ;
"RTN","XUMFI",223,0)
 Q
"RTN","XUMFI",224,0)
 ;
"RTN","XUMFI",225,0)
SEND ; -- send HL7 message
"RTN","XUMFI",226,0)
 ;
"RTN","XUMFI",227,0)
 I 'MFK,ERROR Q
"RTN","XUMFI",228,0)
 ;
"RTN","XUMFI",229,0)
 S HLP("PRIORITY")="I"
"RTN","XUMFI",230,0)
 ;
"RTN","XUMFI",231,0)
 I 'TYPE D GENERATE^HLMA(PROTOCOL,"GM",1,.HLRESLT,"",.HLP)
"RTN","XUMFI",232,0)
 I TYPE,(TYPE<10) D DIRECT^HLMA(PROTOCOL,"GM",1,.HLRESLT,"",.HLP)
"RTN","XUMFI",233,0)
 I (TYPE>9),$G(HLMTIENS) D
"RTN","XUMFI",234,0)
 .D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"GM",1,.HLRESLT)
"RTN","XUMFI",235,0)
 ;
"RTN","XUMFI",236,0)
 ; check for error
"RTN","XUMFI",237,0)
 I ($P($G(HLRESLT),U,3)'="") D  Q
"RTN","XUMFI",238,0)
 .S ERROR=1_U_$P(HLRESLT,HLFS,3)_U_$P(HLRESLT,HLFS,2)_U_$P(HLRESLT,U)
"RTN","XUMFI",239,0)
 ;
"RTN","XUMFI",240,0)
 ; successful call, message ID returned
"RTN","XUMFI",241,0)
 S ERROR="0^"_$P($G(HLRESLT),U,1)
"RTN","XUMFI",242,0)
 ;
"RTN","XUMFI",243,0)
 Q
"RTN","XUMFI",244,0)
 ;
"RTN","XUMFI",245,0)
EXIT ; -- exit
"RTN","XUMFI",246,0)
 ;
"RTN","XUMFI",247,0)
 D CLEAN^DILF
"RTN","XUMFI",248,0)
 ;
"RTN","XUMFI",249,0)
 K ^TMP("HLS",$J),^TMP("HLA",$J)
"RTN","XUMFI",250,0)
 K ^TMP("XUMF MFS",$J)
"RTN","XUMFI",251,0)
 ;
"RTN","XUMFI",252,0)
 Q
"RTN","XUMFI",253,0)
 ;
"RTN","XUMFI",254,0)
LLNK ; -- dynamic addressing BROADCAST
"RTN","XUMFI",255,0)
 ;
"RTN","XUMFI",256,0)
 Q:TYPE>9
"RTN","XUMFI",257,0)
 ;
"RTN","XUMFI",258,0)
 I $G(^TMP("XUMF MFS",$J,"PARAM","LLNK"))'="" D  Q
"RTN","XUMFI",259,0)
 .S HLL("LINKS",1)=^TMP("XUMF MFS",$J,"PARAM","LLNK")
"RTN","XUMFI",260,0)
 ;
"RTN","XUMFI",261,0)
 Q:'$$SERVER()
"RTN","XUMFI",262,0)
 ;
"RTN","XUMFI",263,0)
 Q:TYPE
"RTN","XUMFI",264,0)
 Q:'$G(^TMP("XUMF MFS",$J,"PARAM","BROADCAST"))
"RTN","XUMFI",265,0)
 ;
"RTN","XUMFI",266,0)
 N I,J,LLNK
"RTN","XUMFI",267,0)
 ;
"RTN","XUMFI",268,0)
 S (I,J)=0
"RTN","XUMFI",269,0)
 F  S I=$O(^HLCS(870,"C",I)) Q:'I  D
"RTN","XUMFI",270,0)
 .S J=$O(^HLCS(870,"C",I,0)) Q:'J
"RTN","XUMFI",271,0)
 .S LLNK=$P($G(^HLCS(870,J,0)),U)
"RTN","XUMFI",272,0)
 .S HLL("LINKS",I)="XUMF MFK^"_LLNK
"RTN","XUMFI",273,0)
 ;
"RTN","XUMFI",274,0)
 Q
"RTN","XUMFI",275,0)
 ;
"RTN","XUMFI",276,0)
SERVER() ; -- servers
"RTN","XUMFI",277,0)
 ;
"RTN","XUMFI",278,0)
 N I
"RTN","XUMFI",279,0)
 ;
"RTN","XUMFI",280,0)
 S I=$$KSP^XUPARAM("INST") Q:'I 0
"RTN","XUMFI",281,0)
 ;
"RTN","XUMFI",282,0)
 Q:I=442 1  ;BP TEST
"RTN","XUMFI",283,0)
 Q:I=12000 1  ;FORUM
"RTN","XUMFI",284,0)
 Q:I=100002 1  ;HEC
"RTN","XUMFI",285,0)
 ;
"RTN","XUMFI",286,0)
 Q 0
"RTN","XUMFI",287,0)
 ;
"RTN","XUMFI0")
0^5^B4427792^n/a
"RTN","XUMFI0",1,0)
XUMFI0 ;CIOFO-SF/RAM - Master File Interface ;8/14/06
"RTN","XUMFI0",2,0)
 ;;8.0;KERNEL;**369**;Jul 10, 1995;Build 27
"RTN","XUMFI0",3,0)
 ;
"RTN","XUMFI0",4,0)
 Q
"RTN","XUMFI0",5,0)
 ;
"RTN","XUMFI0",6,0)
INIT ; -- initialize
"RTN","XUMFI0",7,0)
 ;
"RTN","XUMFI0",8,0)
 K ^TMP("DILIST",$J),^TMP("DIERR",$J)
"RTN","XUMFI0",9,0)
 K ^TMP("HLS",$J),^TMP("HLA",$J)
"RTN","XUMFI0",10,0)
 ;
"RTN","XUMFI0",11,0)
 S IEN=$G(IEN),IFN=$G(IFN)
"RTN","XUMFI0",12,0)
 S TYPE=$G(TYPE),ERROR=$G(ERROR),CNT=1
"RTN","XUMFI0",13,0)
 S UPDATE=$S(TYPE#2:0,1:1)
"RTN","XUMFI0",14,0)
 S QUERY='UPDATE
"RTN","XUMFI0",15,0)
 S GROUP=$S(UPDATE:0,TYPE[5:1,TYPE[7:1,1:0)
"RTN","XUMFI0",16,0)
 S ARRAY=$S(UPDATE:0,TYPE[3:1,TYPE[7:1,1:0)
"RTN","XUMFI0",17,0)
 S ALL=$S(IEN["ALL":1,1:0)
"RTN","XUMFI0",18,0)
 S PROTOCOL=$G(^TMP("XUMF MFS",$J,"PARAM","PROTOCOL"))
"RTN","XUMFI0",19,0)
 S MFR=$S(UPDATE:0,TYPE>10:1,1:0)
"RTN","XUMFI0",20,0)
 S MFQ=$S(UPDATE:0,'MFR:1,1:0)
"RTN","XUMFI0",21,0)
 S MFK=$S(TYPE=10:1,1:0)
"RTN","XUMFI0",22,0)
 S MTYP=$S(MFR:"HLA",MFK:"HLA",1:"HLS")
"RTN","XUMFI0",23,0)
 ;
"RTN","XUMFI0",24,0)
 ; -- get variables from HL7 package
"RTN","XUMFI0",25,0)
 I $O(HL(""))="" D INIT^HLFNC2(PROTOCOL,.HL)
"RTN","XUMFI0",26,0)
 I $O(HL(""))="" S ERROR="1^"_$P(HL,"^",2) Q
"RTN","XUMFI0",27,0)
 S HLFS=HL("FS"),HLCS=$E(HL("ECH")),HLSCS=$E(HL("ECH"),4)
"RTN","XUMFI0",28,0)
 ;
"RTN","XUMFI0",29,0)
 Q:ERROR
"RTN","XUMFI0",30,0)
 ;
"RTN","XUMFI0",31,0)
 ; -- check parameters
"RTN","XUMFI0",32,0)
 I 'QUERY,'UPDATE S ERROR="1^invalid message type" Q
"RTN","XUMFI0",33,0)
 I 'IFN S ERROR="1^invalid file number" Q
"RTN","XUMFI0",34,0)
 I 'IEN,'ALL,'MFK S ERROR="1^invalid IEN" Q
"RTN","XUMFI0",35,0)
 I '$$VFILE^DILFD(IFN) S ERROR="1^invalid file number" Q
"RTN","XUMFI0",36,0)
 I UPDATE,'IEN S ERROR="1^update message requires an IEN" Q
"RTN","XUMFI0",37,0)
 ;
"RTN","XUMFI0",38,0)
 ; -- get root of file
"RTN","XUMFI0",39,0)
 S ROOT=$$ROOT^DILFD(IFN,,1)
"RTN","XUMFI0",40,0)
 ;
"RTN","XUMFI0",41,0)
 ; -- if IEN array input, merge with param
"RTN","XUMFI0",42,0)
 I 'ALL,'IEN,$O(IEN(0)) M ^TMP("XUMF MFS",$J,"PARAM","IEN")=IEN
"RTN","XUMFI0",43,0)
 ;
"RTN","XUMFI0",44,0)
 ; -- if CDSYS and ALL get entries
"RTN","XUMFI0",45,0)
 S CDSYS=$G(^TMP("XUMF MFS",$J,"PARAM","CDSYS"))
"RTN","XUMFI0",46,0)
 I ALL,CDSYS'="" D
"RTN","XUMFI0",47,0)
 .S I=0 F  S I=$O(@ROOT@("XUMFIDX",CDSYS,I)) Q:'I  D
"RTN","XUMFI0",48,0)
 ..S J=$O(@ROOT@("XUMFIDX",CDSYS,I,0))
"RTN","XUMFI0",49,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM","IEN",J)=""
"RTN","XUMFI0",50,0)
 ;
"RTN","XUMFI0",51,0)
 ; -- get ALL file 'national' entries
"RTN","XUMFI0",52,0)
 I ALL,'$D(^TMP("XUMF MFS",$J,"PARAM","IEN")) D
"RTN","XUMFI0",53,0)
 .S I=0 F  S I=$O(@ROOT@("XUMF","N",I)) Q:'I  D
"RTN","XUMFI0",54,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM","IEN",I)=""
"RTN","XUMFI0",55,0)
 ;
"RTN","XUMFI0",56,0)
 Q
"RTN","XUMFI0",57,0)
 ;
"RTN","XUMFP")
0^2^B22292581^B22178504
"RTN","XUMFP",1,0)
XUMFP ;CIOFO-SF/RAM,ALB/BRM - Master File C/S Parameters ; 10/11/02 2:50pm
"RTN","XUMFP",2,0)
 ;;8.0;KERNEL;**206,217,246,262,369**;Jul 10, 1995;Build 27
"RTN","XUMFP",3,0)
 ;
"RTN","XUMFP",4,0)
 ;
"RTN","XUMFP",5,0)
 ;
"RTN","XUMFP",6,0)
MAIN(IFN,IEN,TYPE,PARAM,ERROR) ; -- parameters for master file server
"RTN","XUMFP",7,0)
 ;
"RTN","XUMFP",8,0)
 ;INPUT
"RTN","XUMFP",9,0)
 ;       IFN             Internal File Number (required)
"RTN","XUMFP",10,0)
 ;
"RTN","XUMFP",11,0)
 ;       IEN             Internal Entry Number (required)
"RTN","XUMFP",12,0)
 ;
"RTN","XUMFP",13,0)
 ;                       single entry (pass by value) example: IEN=1
"RTN","XUMFP",14,0)
 ;
"RTN","XUMFP",15,0)
 ;                       multiple entries (pass by reference)  IEN(1)=""
"RTN","XUMFP",16,0)
 ;                                                             IEN(2)=""
"RTN","XUMFP",17,0)
 ;
"RTN","XUMFP",18,0)
 ;                       ALL national entries (pass by value)  IEN="ALL"
"RTN","XUMFP",19,0)
 ;
"RTN","XUMFP",20,0)
 ;                       NEW entry (pass by value)             IEN="NEW"
"RTN","XUMFP",21,0)
 ;
"RTN","XUMFP",22,0)
 ;       TYPE            Message TYPE (required)
"RTN","XUMFP",23,0)
 ;
"RTN","XUMFP",24,0)
 ;                       0  = MFN - unsolicited update
"RTN","XUMFP",25,0)
 ;                       1  = MFQ - query particular record and file
"RTN","XUMFP",26,0)
 ;                       3  = MFQ - query particular record in array
"RTN","XUMFP",27,0)
 ;                       5  = MFQ - query group records file
"RTN","XUMFP",28,0)
 ;                       7  = MFQ - query group records array
"RTN","XUMFP",29,0)
 ;                       11 = MFR - query response particular rec file
"RTN","XUMFP",30,0)
 ;                       13 = MFR - query response particular rec array
"RTN","XUMFP",31,0)
 ;                       15 = MFR - query response group records file
"RTN","XUMFP",32,0)
 ;                       17 = MFR - query response group records array
"RTN","XUMFP",33,0)
 ;
"RTN","XUMFP",34,0)
 ;
"RTN","XUMFP",35,0)
 ;INPUT/OUTPUT
"RTN","XUMFP",36,0)
 ;
"RTN","XUMFP",37,0)
 ;       PARAM("PROTOCOL")       IEN Protocol (#101) file
"RTN","XUMFP",38,0)
 ;       PARAM("LLNK")           HLL("LINKS",n) 'protocol^logical link'
"RTN","XUMFP",39,0)
 ;       PARAM("PRE")            Pre-update record routine
"RTN","XUMFP",40,0)
 ;       PARAM("POST")           Post-update record routine
"RTN","XUMFP",41,0)
 ;
"RTN","XUMFP",42,0)
 ;       QRD -- Query definition segment
"RTN","XUMFP",43,0)
 ;       -------------------------------
"RTN","XUMFP",44,0)
 ;       PARAM("QDT")            Query Date/Time
"RTN","XUMFP",45,0)
 ;       PARAM("QFC")            Query Format Code
"RTN","XUMFP",46,0)
 ;       PARAM("QP")             Query Priority
"RTN","XUMFP",47,0)
 ;       PARAM("QID")            Query ID
"RTN","XUMFP",48,0)
 ;       PARAM("DRT")            Deferred Response Type
"RTN","XUMFP",49,0)
 ;       PARAM("DRDT")           Deferred Response Date/Time
"RTN","XUMFP",50,0)
 ;       PARAM("QLR")            Quantity Limited Request
"RTN","XUMFP",51,0)
 ;       PARAM("WHO")            Who Subject Filter
"RTN","XUMFP",52,0)
 ;       PARAM("WHAT")           What Subject Filter
"RTN","XUMFP",53,0)
 ;       PARAM("WDDC")           What Department Data Code
"RTN","XUMFP",54,0)
 ;       PARAM("WDCVQ")          What Data Code Value Qual
"RTN","XUMFP",55,0)
 ;       PARAM("QRL")            Query Results Level
"RTN","XUMFP",56,0)
 ;
"RTN","XUMFP",57,0)
 ;       MFI -- Master File Identification
"RTN","XUMFP",58,0)
 ;       ---------------------------------
"RTN","XUMFP",59,0)
 ;       PARAM("MFI")            Master File Identifier
"RTN","XUMFP",60,0)
 ;       PARAM("MFAI")           Master File Application Identifier
"RTN","XUMFP",61,0)
 ;       PARAM("FLEC")           File-Level Event Code
"RTN","XUMFP",62,0)
 ;       PARAM("ENDT")           Entered Data/Time
"RTN","XUMFP",63,0)
 ;       PARAM("MFIEDT")         Effective Date/Time
"RTN","XUMFP",64,0)
 ;       PARAM("RLC")            Response Level Code
"RTN","XUMFP",65,0)
 ; 
"RTN","XUMFP",66,0)
 ;       MFE -- Master File Entry
"RTN","XUMFP",67,0)
 ;       ------------------------
"RTN","XUMFP",68,0)
 ;       PARAM("RLEC")           Record-Level Event Code
"RTN","XUMFP",69,0)
 ;       PARAM("MFNCID")         MFN Control ID
"RTN","XUMFP",70,0)
 ;       PARAM("MFEEDT")         Effective Date/Time
"RTN","XUMFP",71,0)
 ;       PARAM("PKV")            Primary Key Value
"RTN","XUMFP",72,0)
 ;
"RTN","XUMFP",73,0)
 ;       [Z...] segment(s) parameters
"RTN","XUMFP",74,0)
 ;       -------------------------
"RTN","XUMFP",75,0)
 ;       PARAM("SEG",SEG)=""             HL7 segment name
"RTN","XUMFP",76,0)
 ;       PARAM("SEG",SEG,"SEQ",SEQ,FLD#) seg sequence number and field
"RTN","XUMFP",77,0)
 ;  Note: Add HL7 data type + sub components (leave value/code blank) 
"RTN","XUMFP",78,0)
 ;  Example: Institution Facility Type  = "CE^~FACILILITY TYPE~VA"
"RTN","XUMFP",79,0)
 ;    If the FIELD is a pointer and you want the lookup to be other
"RTN","XUMFP",80,0)
 ;    than the pointed to .01 set the 3rd piece = to the extended ref.
"RTN","XUMFP",81,0)
 ;    I.e., Parent Facility in the Association mult of Institution
"RTN","XUMFP",82,0)
 ;    points back to Institution, if we want to get facility using
"RTN","XUMFP",83,0)
 ;    station number (#99) instead of name (.01) set the 3rd piece
"RTN","XUMFP",84,0)
 ;    equal to ":99" giving us "CE^~FACILILITY TYPE~VA^:99".
"RTN","XUMFP",85,0)
 ;
"RTN","XUMFP",86,0)
 ;       Files involving sub-records and/or extended reference
"RTN","XUMFP",87,0)
 ;       -----------------------------------------------------
"RTN","XUMFP",88,0)
 ;       PARAM("SEG",SEG,"SEQ",SEQ,"FILE")       See FM documentation
"RTN","XUMFP",89,0)
 ;       PARAM("SEG",SEG,"SEQ",SEQ,"IENS")       $$GET1^DIQ() for value
"RTN","XUMFP",90,0)
 ;       PARAM("SEG",SEG,"SEQ",SEQ,"FIELD")      of FILE, IENS, & FIELD.
"RTN","XUMFP",91,0)
 ;
"RTN","XUMFP",92,0)
 ;       PARAM("SEG",SEG,"SEQ",SEQ,"DTYP")      HL7 data type (above)
"RTN","XUMFP",93,0)
 ;
"RTN","XUMFP",94,0)
 ;
"RTN","XUMFP",95,0)
 ; *** NOTE: OUTPUT in ^TMP("XUMF MFS",$J,"PARAM") ***
"RTN","XUMFP",96,0)
 ;
"RTN","XUMFP",97,0)
 ;       Example: MFE PKV is ^TMP("XUMF MFS",$J,"PARAM",IEN,"PKV")
"RTN","XUMFP",98,0)
 ;                    SEG    ^TMP("XUMF MFS",$J,"PARAM","SEG")
"RTN","XUMFP",99,0)
 ;
"RTN","XUMFP",100,0)
 ;       and another node is required for sub-file IENS for group
"RTN","XUMFP",101,0)
 ;       ^TMP("XUMF MFS",$J,"PARAM",IEN,"IENS",SEG,SEQ)=IENS
"RTN","XUMFP",102,0)
 ;
"RTN","XUMFP",103,0)
 ;       Use XUMFP4 as a template/example routine
"RTN","XUMFP",104,0)
 ;
"RTN","XUMFP",105,0)
 N QUERY,UPDATE,ALL,MFR,MFQ,HLFS,HLCS,GROUP,ARRAY,ROOT,NEW,I,J,CDSYS
"RTN","XUMFP",106,0)
 N PROTOCOL
"RTN","XUMFP",107,0)
 ;
"RTN","XUMFP",108,0)
 K ^TMP("XUMF MFS",$J)
"RTN","XUMFP",109,0)
 M ^TMP("XUMF MFS",$J,"PARAM")=PARAM
"RTN","XUMFP",110,0)
 ;
"RTN","XUMFP",111,0)
 S IEN=$G(IEN),IFN=$G(IFN)
"RTN","XUMFP",112,0)
 S TYPE=+$G(TYPE),ERROR=$G(ERROR)
"RTN","XUMFP",113,0)
 S UPDATE=$S(TYPE#2:0,1:1)
"RTN","XUMFP",114,0)
 S QUERY='UPDATE
"RTN","XUMFP",115,0)
 S GROUP=$S(UPDATE:0,TYPE[5:1,TYPE[7:1,1:0)
"RTN","XUMFP",116,0)
 S ARRAY=$S(UPDATE:0,TYPE[3:1,TYPE[7:1,1:0)
"RTN","XUMFP",117,0)
 S ALL=$S(IEN="ALL":1,1:0)
"RTN","XUMFP",118,0)
 S NEW=$S(IEN="NEW":1,1:0)
"RTN","XUMFP",119,0)
 S MFR=$S(UPDATE:0,TYPE>10:1,1:0)
"RTN","XUMFP",120,0)
 S MFQ=$S(UPDATE:0,'MFR:1,1:0)
"RTN","XUMFP",121,0)
 ;
"RTN","XUMFP",122,0)
 S PROTOCOL=$G(PARAM("PROTOCOL"))
"RTN","XUMFP",123,0)
 ;
"RTN","XUMFP",124,0)
 I 'IFN S ERROR="1^invalid IFN" Q
"RTN","XUMFP",125,0)
 ;
"RTN","XUMFP",126,0)
 ; -- get root of file
"RTN","XUMFP",127,0)
 S ROOT=$$ROOT^DILFD(IFN,,1)
"RTN","XUMFP",128,0)
 ;
"RTN","XUMFP",129,0)
 ; -- if IEN array input, merge with param
"RTN","XUMFP",130,0)
 I 'ALL,'IEN,$O(IEN(0)) M ^TMP("XUMF MFS",$J,"PARAM","IEN")=IEN
"RTN","XUMFP",131,0)
 ;
"RTN","XUMFP",132,0)
 ; -- if CDSYS and ALL get entries
"RTN","XUMFP",133,0)
 S CDSYS=$G(^TMP("XUMF MFS",$J,"PARAM","CDSYS"))
"RTN","XUMFP",134,0)
 I ALL,CDSYS'="" D
"RTN","XUMFP",135,0)
 .S I=0 F  S I=$O(@ROOT@("XUMFIDX",CDSYS,I)) Q:'I  D
"RTN","XUMFP",136,0)
 ..S J=$O(@ROOT@("XUMFIDX",CDSYS,I,0))
"RTN","XUMFP",137,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM","IEN",J)=I
"RTN","XUMFP",138,0)
 ;
"RTN","XUMFP",139,0)
 ; -- get ALL file 'national' entries
"RTN","XUMFP",140,0)
 I ALL,'$D(^TMP("XUMF MFS",$J,"PARAM","IEN")),CDSYS="" D
"RTN","XUMFP",141,0)
 .S I=0 F  S I=$O(@ROOT@("XUMF","N",I)) Q:'I  D
"RTN","XUMFP",142,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM","IEN",I)=""
"RTN","XUMFP",143,0)
 ;
"RTN","XUMFP",144,0)
 ; -- get ALL file
"RTN","XUMFP",145,0)
 I ALL,'$D(^TMP("XUMF MFS",$J,"PARAM","IEN")),CDSYS="" D
"RTN","XUMFP",146,0)
 .S I=0 F  S I=$O(@ROOT@(I)) Q:'I  D
"RTN","XUMFP",147,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM","IEN",I)=""
"RTN","XUMFP",148,0)
 ;
"RTN","XUMFP",149,0)
 ;  *** insert code below ***
"RTN","XUMFP",150,0)
 ; insert file number in string below to add an additional file
"RTN","XUMFP",151,0)
 I "^4^4.1^5.12^5.13^730^5^45.7^4.11^49^9.8^"'[(U_IFN_U) S ERROR="1^file not supported" Q
"RTN","XUMFP",152,0)
 ;  *** end insert code ***
"RTN","XUMFP",153,0)
 ;
"RTN","XUMFP",154,0)
 ;    note: also create a subroutine for each supported file with
"RTN","XUMFP",155,0)
 ;             the file number as the line TAG (replace decimal point
"RTN","XUMFP",156,0)
 ;             of file number with the letter 'P').  This subroutine
"RTN","XUMFP",157,0)
 ;             calls an associated routine for the specific file.
"RTN","XUMFP",158,0)
 ;             This file should use the XUMFP namespace.
"RTN","XUMFP",159,0)
 ;
"RTN","XUMFP",160,0)
 I "^4^4.1^5.12^5.13^"[(U_IFN_U) D @("F"_$TR(IFN,".","P"))
"RTN","XUMFP",161,0)
 I "^730^5^4.11^49^9.8^"[(U_IFN_U) D ZL7
"RTN","XUMFP",162,0)
 ;
"RTN","XUMFP",163,0)
 K PARAM
"RTN","XUMFP",164,0)
 ;
"RTN","XUMFP",165,0)
 Q
"RTN","XUMFP",166,0)
 ;
"RTN","XUMFP",167,0)
F4 ; -- institution file
"RTN","XUMFP",168,0)
 ;
"RTN","XUMFP",169,0)
 D ^XUMFP4
"RTN","XUMFP",170,0)
 ;
"RTN","XUMFP",171,0)
 Q
"RTN","XUMFP",172,0)
 ;
"RTN","XUMFP",173,0)
F4P1 ; -- facility type file
"RTN","XUMFP",174,0)
 ;
"RTN","XUMFP",175,0)
 D ^XUMFPFT
"RTN","XUMFP",176,0)
 ;
"RTN","XUMFP",177,0)
 Q
"RTN","XUMFP",178,0)
 ;
"RTN","XUMFP",179,0)
F5P12 ; -- postal code file
"RTN","XUMFP",180,0)
 ;
"RTN","XUMFP",181,0)
 D ^XUMFP512
"RTN","XUMFP",182,0)
 ;
"RTN","XUMFP",183,0)
 Q
"RTN","XUMFP",184,0)
 ;
"RTN","XUMFP",185,0)
F5P13 ; -- county code file
"RTN","XUMFP",186,0)
 ;
"RTN","XUMFP",187,0)
 D ^XUMFP513
"RTN","XUMFP",188,0)
 ;
"RTN","XUMFP",189,0)
 Q
"RTN","XUMFP",190,0)
 ;
"RTN","XUMFP",191,0)
 ;  *** insert subroutine here for additional files ***
"RTN","XUMFP",192,0)
 ;
"RTN","XUMFP",193,0)
TAG ;D ^ROUTINE
"RTN","XUMFP",194,0)
 ;Q
"RTN","XUMFP",195,0)
 ;
"RTN","XUMFP",196,0)
 ;
"RTN","XUMFP",197,0)
ZL7 ; generic
"RTN","XUMFP",198,0)
 ;
"RTN","XUMFP",199,0)
 D ^XUMFPMFS
"RTN","XUMFP",200,0)
 ;
"RTN","XUMFP",201,0)
 Q
"RTN","XUMFP",202,0)
 ;
"RTN","XUMFP",203,0)
MFI(X) ; -- master file identifier function
"RTN","XUMFP",204,0)
 ;
"RTN","XUMFP",205,0)
 ;INPUT          X       master file indentifier (seq 1 MFI segment)
"RTN","XUMFP",206,0)
 ;OUTPUT         $$      IFN - Internal File Number or '0' for error
"RTN","XUMFP",207,0)
 ;
"RTN","XUMFP",208,0)
 Q:X="Z04" 4
"RTN","XUMFP",209,0)
 Q:X="Z4T" 4.1
"RTN","XUMFP",210,0)
 Q:$P(X,HLCS)="5P12" 5.12
"RTN","XUMFP",211,0)
 Q:$P(X,HLCS)="5P13" 5.13
"RTN","XUMFP",212,0)
 Q:X="ZNS" 730
"RTN","XUMFP",213,0)
 Q:X="ZAG" 4.11
"RTN","XUMFP",214,0)
 Q:X="Z05" 5
"RTN","XUMFP",215,0)
 Q:X="Z49" 49
"RTN","XUMFP",216,0)
 ;
"RTN","XUMFP",217,0)
 ; *** add code here for new files ***
"RTN","XUMFP",218,0)
 ;
"RTN","XUMFP",219,0)
 Q 0
"RTN","XUMFP",220,0)
 ;
"RTN","XUMFP",221,0)
DTYP(VALUE,TYP,HLCS,TOHL7) ;data type conversion
"RTN","XUMFP",222,0)
 ;INPUT
"RTN","XUMFP",223,0)
 ;   VALUE    value
"RTN","XUMFP",224,0)
 ;   TYP    HL7 data type
"RTN","XUMFP",225,0)
 ;   TOHL7   1=to HL7, 0=to FileMan
"RTN","XUMFP",226,0)
 ;OUTPUT
"RTN","XUMFP",227,0)
 ;   $$      formatted data
"RTN","XUMFP",228,0)
 ;
"RTN","XUMFP",229,0)
 N TEXT,CS
"RTN","XUMFP",230,0)
 S TYP=$G(TYP),VALUE=$G(VALUE),TOHL7=$G(TOHL7)
"RTN","XUMFP",231,0)
 Q:TYP="" VALUE Q:VALUE="" VALUE
"RTN","XUMFP",232,0)
 S TEXT=$P(TYP,U,2),TYP=$P(TYP,U)
"RTN","XUMFP",233,0)
 I TYP="ST"!(TYP="ID") Q VALUE
"RTN","XUMFP",234,0)
 I TYP="DT",TOHL7 D  Q $$HLDATE^HLFNC(VALUE)
"RTN","XUMFP",235,0)
 .N X,Y S X=VALUE D ^%DT S VALUE=+Y
"RTN","XUMFP",236,0)
 I TYP="DT" Q $$FMDATE^HLFNC(+VALUE)
"RTN","XUMFP",237,0)
 I TYP="ZST" D  Q VALUE
"RTN","XUMFP",238,0)
 .N IEN5 S IEN5=+$O(^DIC(5,"C",VALUE,""))
"RTN","XUMFP",239,0)
 .S:IEN5 VALUE=$P($G(^DIC(5,IEN5,0)),"^")
"RTN","XUMFP",240,0)
 I 'TOHL7 Q $P(VALUE,HLCS)
"RTN","XUMFP",241,0)
 Q VALUE_$TR(TEXT,"~",HLCS)
"RTN","XUMFP",242,0)
 ;
"RTN","XUMFPMFS")
0^4^B21142938^B18122564
"RTN","XUMFPMFS",1,0)
XUMFPMFS ;CIOFO-SF/RAM - Master File Param GENERIC ;8/14/06
"RTN","XUMFPMFS",2,0)
 ;;8.0;KERNEL;**262,369**;Jul 10, 1995;Build 27
"RTN","XUMFPMFS",3,0)
 ;
"RTN","XUMFPMFS",4,0)
 ; This routine sets up the parameters required by the ZL7
"RTN","XUMFPMFS",5,0)
 ; for the Master File server mechanism.
"RTN","XUMFPMFS",6,0)
 ;
"RTN","XUMFPMFS",7,0)
 ;  ** This routine is not a supported interface -- use XUMFP **
"RTN","XUMFPMFS",8,0)
 ;
"RTN","XUMFPMFS",9,0)
 ;  See XUMFP for parameter list documentation
"RTN","XUMFPMFS",10,0)
 ;
"RTN","XUMFPMFS",11,0)
 N PKV,PROTOCOL,HLFS,HLCS,RT,RF,TABLE,TABNAM
"RTN","XUMFPMFS",12,0)
 ;
"RTN","XUMFPMFS",13,0)
 D FILE^DID(IFN,"","NAME","X")
"RTN","XUMFPMFS",14,0)
 S TABNAM=$S($G(X("NAME"))'="":X("NAME"),1:"NOTAB") K X
"RTN","XUMFPMFS",15,0)
 ;
"RTN","XUMFPMFS",16,0)
 S PARAM("PRE")="PRE^XUMFPMFS"
"RTN","XUMFPMFS",17,0)
 S PARAM("POST")="POST^XUMFPMFS"
"RTN","XUMFPMFS",18,0)
 ;
"RTN","XUMFPMFS",19,0)
 I $O(HL(""))="" D
"RTN","XUMFPMFS",20,0)
 .S:UPDATE PROTOCOL=$O(^ORD(101,"B","XUMF MFN",0))
"RTN","XUMFPMFS",21,0)
 .S:QUERY PROTOCOL=$O(^ORD(101,"B","XUMF MFQ",0))
"RTN","XUMFPMFS",22,0)
 .S:'PROTOCOL ERROR="1^invalid protocol" Q:ERROR
"RTN","XUMFPMFS",23,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","PROTOCOL")=PROTOCOL
"RTN","XUMFPMFS",24,0)
 .D INIT^HLFNC2(PROTOCOL,.HL)
"RTN","XUMFPMFS",25,0)
 ;
"RTN","XUMFPMFS",26,0)
 I $O(HL(""))="" S ERROR="1^"_$P(HL,U,2) Q
"RTN","XUMFPMFS",27,0)
 S HLFS=HL("FS"),HLCS=$E(HL("ECH"))
"RTN","XUMFPMFS",28,0)
 ;
"RTN","XUMFPMFS",29,0)
 D
"RTN","XUMFPMFS",30,0)
 .I IFN=4.11 S TABLE="ZAG" Q
"RTN","XUMFPMFS",31,0)
 .I IFN=5 S TABLE="Z05" Q
"RTN","XUMFPMFS",32,0)
 .I IFN=49 S TABLE="Z49" Q
"RTN","XUMFPMFS",33,0)
 .I IFN=9.8 S TABLE="ZRN" Q
"RTN","XUMFPMFS",34,0)
 .S TABLE="NOTAB" Q
"RTN","XUMFPMFS",35,0)
 ;
"RTN","XUMFPMFS",36,0)
 I QUERY D QRD
"RTN","XUMFPMFS",37,0)
 ;
"RTN","XUMFPMFS",38,0)
 ; MFI -- Master File Identification Segment
"RTN","XUMFPMFS",39,0)
 ;
"RTN","XUMFPMFS",40,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MFI")=TABLE  ;Master File Identifier
"RTN","XUMFPMFS",41,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MFAI")=""  ;Application Identifier
"RTN","XUMFPMFS",42,0)
 S ^TMP("XUMF MFS",$J,"PARAM","FLEC")="UPD"  ;File-Level Event Code
"RTN","XUMFPMFS",43,0)
 S ^TMP("XUMF MFS",$J,"PARAM","ENDT")=""  ;Entered Data/Time
"RTN","XUMFPMFS",44,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MFIEDT")=""  ;Effective Date/Time
"RTN","XUMFPMFS",45,0)
 S ^TMP("XUMF MFS",$J,"PARAM","RLC")="NE"  ;Response Level Code
"RTN","XUMFPMFS",46,0)
 ;
"RTN","XUMFPMFS",47,0)
 ; MFE -- Master File Entry
"RTN","XUMFPMFS",48,0)
 I $G(^TMP("XUMF MFS",$J,"PARAM","RLEC"))="" D  ;Record-Level Event Code
"RTN","XUMFPMFS",49,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","RLEC")="MUP"
"RTN","XUMFPMFS",50,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MFNCID")=""  ;MFN Control ID
"RTN","XUMFPMFS",51,0)
 I $G(^TMP("XUMF MFS",$J,"PARAM","MFEEDT"))="" D  ;Effective Date/Time
"RTN","XUMFPMFS",52,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","MFEEDT")=$$HLDATE^HLFNC($$NOW^XLFDT)
"RTN","XUMFPMFS",53,0)
 ;
"RTN","XUMFPMFS",54,0)
SEG ; -- ZL7 segment
"RTN","XUMFPMFS",55,0)
 ;
"RTN","XUMFPMFS",56,0)
 I IEN D
"RTN","XUMFPMFS",57,0)
 .S PKV=$P($G(@ROOT@(+IEN,0)),U)_HLCS_TABNAM_HLCS_"B"
"RTN","XUMFPMFS",58,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","PKV")=PKV  ; Primary Key Value
"RTN","XUMFPMFS",59,0)
 I NEW D
"RTN","XUMFPMFS",60,0)
 .S PKV="NEW"_HLCS_TABNAM_HLCS_"B"
"RTN","XUMFPMFS",61,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","PKV")=PKV  ; Primary Key Value
"RTN","XUMFPMFS",62,0)
 ;
"RTN","XUMFPMFS",63,0)
 D @(TABLE_"^XUMFPZL7")
"RTN","XUMFPMFS",64,0)
 ;
"RTN","XUMFPMFS",65,0)
 Q:'GROUP
"RTN","XUMFPMFS",66,0)
 Q:$G(HL("MTN"))="MFR"
"RTN","XUMFPMFS",67,0)
 ;
"RTN","XUMFPMFS",68,0)
GROUP ; -- query group
"RTN","XUMFPMFS",69,0)
 ;
"RTN","XUMFPMFS",70,0)
 S IEN=0
"RTN","XUMFPMFS",71,0)
 F  S IEN=$O(^TMP("XUMF MFS",$J,"PARAM","IEN",IEN)) Q:'IEN  D
"RTN","XUMFPMFS",72,0)
 .S PKV=$P(@ROOT@(IEN,0),U)_HLCS_TABNAM_HLCS_"B"
"RTN","XUMFPMFS",73,0)
 .S ^TMP("XUMF MFS",$J,"PARAM",IEN,"PKV")=PKV
"RTN","XUMFPMFS",74,0)
 .I IFN=9.8 D
"RTN","XUMFPMFS",75,0)
 ..N X S X=$O(^DIC(9.8,IEN,8,0)) Q:'X
"RTN","XUMFPMFS",76,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM",IEN,"IENS","ZL7",5)=X_","_IEN_","
"RTN","XUMFPMFS",77,0)
 ..S ^TMP("XUMF MFS",$J,"PARAM",IEN,"IENS","ZL7",6)=X_","_IEN_","
"RTN","XUMFPMFS",78,0)
 ..F  S X=$O(^DIC(9.8,IEN,8,X)) Q:'X  D
"RTN","XUMFPMFS",79,0)
 ...S ^TMP("XUMF MFS",$J,"PARAM",IEN,"ROUTINE",5,X)=X_","_IEN_","
"RTN","XUMFPMFS",80,0)
 ...S ^TMP("XUMF MFS",$J,"PARAM",IEN,"ROUTINE",6,X)=X_","_IEN_","
"RTN","XUMFPMFS",81,0)
 ;
"RTN","XUMFPMFS",82,0)
 Q
"RTN","XUMFPMFS",83,0)
 ;
"RTN","XUMFPMFS",84,0)
QRD ; -- query definition segment
"RTN","XUMFPMFS",85,0)
 ;
"RTN","XUMFPMFS",86,0)
 ;Query Date/Time
"RTN","XUMFPMFS",87,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","QDT")) D
"RTN","XUMFPMFS",88,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","QDT")=$$HLDATE^HLFNC($$NOW^XLFDT)
"RTN","XUMFPMFS",89,0)
 ;
"RTN","XUMFPMFS",90,0)
 ;Query Format Code
"RTN","XUMFPMFS",91,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","QFC")) D
"RTN","XUMFPMFS",92,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","QFC")="R"
"RTN","XUMFPMFS",93,0)
 ;
"RTN","XUMFPMFS",94,0)
 ;Query Priority
"RTN","XUMFPMFS",95,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","QP")) D
"RTN","XUMFPMFS",96,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","QP")="I"
"RTN","XUMFPMFS",97,0)
 ;
"RTN","XUMFPMFS",98,0)
 ;Query ID
"RTN","XUMFPMFS",99,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","QID")) D
"RTN","XUMFPMFS",100,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","QID")=TABLE_" "_$S(ARRAY:"ARRAY",1:"FILE")
"RTN","XUMFPMFS",101,0)
 ;
"RTN","XUMFPMFS",102,0)
 ;Deferred Response Type (optional)
"RTN","XUMFPMFS",103,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","DRT")) D
"RTN","XUMFPMFS",104,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","DRT")=""
"RTN","XUMFPMFS",105,0)
 ;
"RTN","XUMFPMFS",106,0)
 ;Deferred Response Date/Time (optional)
"RTN","XUMFPMFS",107,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","DRDT")) D
"RTN","XUMFPMFS",108,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","DRDT")=""
"RTN","XUMFPMFS",109,0)
 ;
"RTN","XUMFPMFS",110,0)
 ;Quantity Limited Request
"RTN","XUMFPMFS",111,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","QLR")) D
"RTN","XUMFPMFS",112,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","QLR")="RD"_HLCS_99999
"RTN","XUMFPMFS",113,0)
 ;
"RTN","XUMFPMFS",114,0)
 ;Who Subject Filter
"RTN","XUMFPMFS",115,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","WHO")) D
"RTN","XUMFPMFS",116,0)
 .N X S X=$S(ALL:"ALL",IEN:$P($G(@ROOT@(+IEN,0)),U),1:"IEN ARRAY")
"RTN","XUMFPMFS",117,0)
 .S $P(X,HLCS,9,10)="B"_HLCS_"VA"
"RTN","XUMFPMFS",118,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","WHO")=X
"RTN","XUMFPMFS",119,0)
 ;
"RTN","XUMFPMFS",120,0)
 ;What Subject Filter
"RTN","XUMFPMFS",121,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","WHAT")) D
"RTN","XUMFPMFS",122,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","WHAT")=IFN_HLCS_"IFN"_HLCS_"VA FM"
"RTN","XUMFPMFS",123,0)
 ;
"RTN","XUMFPMFS",124,0)
 ;What Department Data Code
"RTN","XUMFPMFS",125,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","WDDC")) D
"RTN","XUMFPMFS",126,0)
 .N X S X="INFRASTRUCTURE"_HLCS_"INFORMATION INFRASTRUCTURE"
"RTN","XUMFPMFS",127,0)
 .S X=X_HLCS_"VA TS"
"RTN","XUMFPMFS",128,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","WDDC")=X
"RTN","XUMFPMFS",129,0)
 ;
"RTN","XUMFPMFS",130,0)
 ;What Data Code Value Qual (optional)
"RTN","XUMFPMFS",131,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","WDCVQ")) D
"RTN","XUMFPMFS",132,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","WDCVQ")=""
"RTN","XUMFPMFS",133,0)
 ;
"RTN","XUMFPMFS",134,0)
 ;Query Results Level (optional)
"RTN","XUMFPMFS",135,0)
 I '$D(^TMP("XUMF MFS",$J,"PARAM","QRL")) D
"RTN","XUMFPMFS",136,0)
 .S ^TMP("XUMF MFS",$J,"PARAM","QRL")=""
"RTN","XUMFPMFS",137,0)
 ;
"RTN","XUMFPMFS",138,0)
 Q
"RTN","XUMFPMFS",139,0)
 ;
"RTN","XUMFPMFS",140,0)
PRE ; -- pre-update record
"RTN","XUMFPMFS",141,0)
 ;
"RTN","XUMFPMFS",142,0)
 Q
"RTN","XUMFPMFS",143,0)
 ;
"RTN","XUMFPMFS",144,0)
POST ; -- post-update record
"RTN","XUMFPMFS",145,0)
 ;
"RTN","XUMFPMFS",146,0)
 Q
"RTN","XUMFPMFS",147,0)
 ;
"RTN","XUMFPZL7")
0^3^B5372481^B2126203
"RTN","XUMFPZL7",1,0)
XUMFPZL7 ;CIOFO-SF/RAM - Master File Param ZL7 ;8/14/00
"RTN","XUMFPZL7",2,0)
 ;;8.0;KERNEL;**262,369**;Jul 10, 1995;Build 27
"RTN","XUMFPZL7",3,0)
 ;
"RTN","XUMFPZL7",4,0)
 ;
"RTN","XUMFPZL7",5,0)
Z05 ; State (#5)
"RTN","XUMFPZL7",6,0)
 ;
"RTN","XUMFPZL7",7,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",1.1,1)="ST"
"RTN","XUMFPZL7",8,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",1.2,.01)="ST"
"RTN","XUMFPZL7",9,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",1.4,2)="ST"
"RTN","XUMFPZL7",10,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",1.5,.01)="ST"
"RTN","XUMFPZL7",11,0)
 ;
"RTN","XUMFPZL7",12,0)
 Q
"RTN","XUMFPZL7",13,0)
 ;
"RTN","XUMFPZL7",14,0)
Z49 ; Service/Section (#49)
"RTN","XUMFPZL7",15,0)
 ;
"RTN","XUMFPZL7",16,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",1.1,.01)="ST"
"RTN","XUMFPZL7",17,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",1.2,1)="ST"
"RTN","XUMFPZL7",18,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",3,1.6)="ST"
"RTN","XUMFPZL7",19,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",4,6)="ST"
"RTN","XUMFPZL7",20,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",5,1.5)="ST"
"RTN","XUMFPZL7",21,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",6,1.7)="ST"
"RTN","XUMFPZL7",22,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",7,730)="ST"
"RTN","XUMFPZL7",23,0)
 ;
"RTN","XUMFPZL7",24,0)
 Q
"RTN","XUMFPZL7",25,0)
 ;
"RTN","XUMFPZL7",26,0)
ZAG ; Agency (#4.11)
"RTN","XUMFPZL7",27,0)
 ;
"RTN","XUMFPZL7",28,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",1.1,.02)="ST"
"RTN","XUMFPZL7",29,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",1.2,.01)="ST"
"RTN","XUMFPZL7",30,0)
 ;
"RTN","XUMFPZL7",31,0)
 Q
"RTN","XUMFPZL7",32,0)
 ;
"RTN","XUMFPZL7",33,0)
ZRN ; Routine (#9.8)
"RTN","XUMFPZL7",34,0)
 ;
"RTN","XUMFPZL7",35,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MULT","ZL7",5)=5
"RTN","XUMFPZL7",36,0)
 S ^TMP("XUMF MFS",$J,"PARAM","MULT","ZL7",6)=5
"RTN","XUMFPZL7",37,0)
 ;
"RTN","XUMFPZL7",38,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",1,.01)="ST"
"RTN","XUMFPZL7",39,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",2,6)="ST"
"RTN","XUMFPZL7",40,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",3,7.1)="ST"
"RTN","XUMFPZL7",41,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",4,7.2)="ST"
"RTN","XUMFPZL7",42,0)
 ;
"RTN","XUMFPZL7",43,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",5,"FILE")=9.818
"RTN","XUMFPZL7",44,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",5,"FIELD")=.01
"RTN","XUMFPZL7",45,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",5,"DTYP")="ST"
"RTN","XUMFPZL7",46,0)
 ;
"RTN","XUMFPZL7",47,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",6,"FILE")=9.818
"RTN","XUMFPZL7",48,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",6,"FIELD")=2
"RTN","XUMFPZL7",49,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",6,"DTYP")="ST"
"RTN","XUMFPZL7",50,0)
 ;
"RTN","XUMFPZL7",51,0)
 S ^TMP("XUMF MFS",$J,"PARAM","SEG","ZL7","SEQ",7,7.3)="ST"
"RTN","XUMFPZL7",52,0)
 ;
"RTN","XUMFPZL7",53,0)
 Q
"RTN","XUMFPZL7",54,0)
 ;
"RTN","XUMFPZL7",55,0)
NOTAB ;
"RTN","XUMFPZL7",56,0)
 ;
"RTN","XUMFPZL7",57,0)
 Q
"RTN","XUMFPZL7",58,0)
 ;
"VER")
8.0^22.0
"^DD",9.8,9.8,6,0)
CHECKSUM REPORT^S^0:Local - don't report;1:Local - report;2:National - report;3:National - Deleted or NOT tracked;^6;1^Q
"^DD",9.8,9.8,6,21,0)
^^4^4^3061020^
"^DD",9.8,9.8,6,21,1,0)
Entries flagged with "National - report" should not be changed, with "FOR 
"^DD",9.8,9.8,6,21,2,0)
National - Deleted or NOT tracked" for routines that do not exist in the 
"^DD",9.8,9.8,6,21,3,0)
system. Sites may determine if they want reports on checksum differences
"^DD",9.8,9.8,6,21,4,0)
for local routines by selecting "Local - report".
"^DD",9.8,9.8,6,"DT")
3061017
"BLD",853,6)
^358
**END**
**END**
