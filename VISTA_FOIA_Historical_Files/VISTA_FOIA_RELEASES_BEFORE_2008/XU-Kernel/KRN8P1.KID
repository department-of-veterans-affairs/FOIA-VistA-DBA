KIDS Distribution saved on Jul 28, 1995@13:24:20
Patch 1 for Kernel 8.0 from ISC-SF by RSD
**KIDS**:XU*8.0*1^

**INSTALL NAME**
XU*8.0*1
"BLD",57,0)
XU*8.0*1^KERNEL^0^2950728^y
"BLD",57,1,0)
^^43^43^2950728^^
"BLD",57,1,1,0)
This is patch 1 of Kernel 8.0. All of the changes in this patch were
"BLD",57,1,2,0)
made after verification. This patch was sent as a seperate file with
"BLD",57,1,3,0)
the Kernel 8.0 distribution.
"BLD",57,1,4,0)

"BLD",57,1,5,0)
Routines:
"BLD",57,1,6,0)
ORF2     - Corrects error when deleting OERR Alerts.
"BLD",57,1,7,0)
XPDR     - Purge Build/Install file option will now find patches.
"BLD",57,1,8,0)
XQ1      - Corrects undefined error if the variable ZTMQUEUED is killed in
"BLD",57,1,9,0)
           an queued task.
"BLD",57,1,10,0)
XQALDOIT - New API call, DOOPT.
"BLD",57,1,11,0)
XQALERT  - New API call, GETACT.
"BLD",57,1,12,0)
XQALSET  - Corrects undefined error when two people process Alerts at
"BLD",57,1,13,0)
           the same time.
"BLD",57,1,14,0)
XUFILE   - Grant File Access option will now accept file numbers with
"BLD",57,1,15,0)
           up to 5 decimal places.
"BLD",57,1,16,0)
XUTMTDL  - Correct undefine error when deleting list of Taskman tasks.
"BLD",57,1,17,0)
ZTLOAD2  - Restricted Queue on an option will now default to the correct
"BLD",57,1,18,0)
           date/time.
"BLD",57,1,19,0)
ZTMS3    - Corrects no-open error in Taskman, caused when IO("C") is left
"BLD",57,1,20,0)
           defined by task.
"BLD",57,1,21,0)

"BLD",57,1,22,0)
ZTM4,    - Corrects the hanging of Taskman Submanagers on ^ZTSCH("IO") when
"BLD",57,1,23,0)
ZTMS7      printer is off-line.
"BLD",57,1,24,0)

"BLD",57,1,25,0)
Option:
"BLD",57,1,26,0)
XU OPTION START - Entry action will now be executed on queued options.
"BLD",57,1,27,0)

"BLD",57,1,28,0)
Installation:
"BLD",57,1,29,0)
 1. Before installing this patch, you should inhibit users from login,
"BLD",57,1,30,0)
    shutdown Taskman and remove users from system.
"BLD",57,1,31,0)
 2. After installing this patch, you need to move the following 4 routines
"BLD",57,1,32,0)
    from your productions account to the manager account:
"BLD",57,1,33,0)
    ZTLOAD2
"BLD",57,1,34,0)
    ZTM4
"BLD",57,1,35,0)
    ZTMS3
"BLD",57,1,36,0)
    ZTMS7
"BLD",57,1,37,0)
 3. Rename the routines as follows:
"BLD",57,1,38,0)
    ZL ZTLOAD2 ZS %ZTLOAD2
"BLD",57,1,39,0)
    ZL ZTM4 ZS %ZTM4
"BLD",57,1,40,0)
    ZL ZTMS3 ZS %ZTMS3
"BLD",57,1,41,0)
    ZL ZTMS7 ZS %ZTMS7
"BLD",57,1,42,0)
 4. Un-inhibit users from login and restart Taskman.
"BLD",57,1,43,0)

"BLD",57,4,0)
^9.64PA^^
"BLD",57,"ABPKG")
n
"BLD",57,"KRN",0)
^9.67PA^.84^13
"BLD",57,"KRN",.4,0)
.4
"BLD",57,"KRN",.401,0)
.401
"BLD",57,"KRN",.402,0)
.402
"BLD",57,"KRN",.403,0)
.403
"BLD",57,"KRN",.5,0)
.5
"BLD",57,"KRN",.84,0)
.84
"BLD",57,"KRN",3.6,0)
3.6
"BLD",57,"KRN",9.2,0)
9.2
"BLD",57,"KRN",9.8,0)
9.8
"BLD",57,"KRN",9.8,"NM",0)
^9.68A^12^12
"BLD",57,"KRN",9.8,"NM",1,0)
XQALSET^^0^B21928397
"BLD",57,"KRN",9.8,"NM",2,0)
XUFILE^^0^B12785269
"BLD",57,"KRN",9.8,"NM",3,0)
XPDR^^0^B28999932
"BLD",57,"KRN",9.8,"NM",4,0)
ZTLOAD2^^0^B5634702
"BLD",57,"KRN",9.8,"NM",5,0)
ZTM4^^0^B4993411
"BLD",57,"KRN",9.8,"NM",6,0)
ZTMS7^^0^B2293991
"BLD",57,"KRN",9.8,"NM",7,0)
XQALDOIT^^0^B15993668
"BLD",57,"KRN",9.8,"NM",8,0)
ORF2^^0^B18156866
"BLD",57,"KRN",9.8,"NM",9,0)
XQALERT^^0^B10379876
"BLD",57,"KRN",9.8,"NM",10,0)
XUTMTDL^^0^B10539554
"BLD",57,"KRN",9.8,"NM",11,0)
ZTMS3^^0^B19525553
"BLD",57,"KRN",9.8,"NM",12,0)
XQ1^^0^B27182757
"BLD",57,"KRN",9.8,"NM","B","ORF2",8)

"BLD",57,"KRN",9.8,"NM","B","XPDR",3)

"BLD",57,"KRN",9.8,"NM","B","XQ1",12)

"BLD",57,"KRN",9.8,"NM","B","XQALDOIT",7)

"BLD",57,"KRN",9.8,"NM","B","XQALERT",9)

"BLD",57,"KRN",9.8,"NM","B","XQALSET",1)

"BLD",57,"KRN",9.8,"NM","B","XUFILE",2)

"BLD",57,"KRN",9.8,"NM","B","XUTMTDL",10)

"BLD",57,"KRN",9.8,"NM","B","ZTLOAD2",4)

"BLD",57,"KRN",9.8,"NM","B","ZTM4",5)

"BLD",57,"KRN",9.8,"NM","B","ZTMS3",11)

"BLD",57,"KRN",9.8,"NM","B","ZTMS7",6)

"BLD",57,"KRN",19,0)
19
"BLD",57,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",57,"KRN",19,"NM",1,0)
XU OPTION START^^0
"BLD",57,"KRN",19,"NM","B","XU OPTION START",1)

"BLD",57,"KRN",19.1,0)
19.1
"BLD",57,"KRN",101,0)
101
"BLD",57,"KRN",8995,0)
8995
"BLD",57,"KRN","B",.4,.4)

"BLD",57,"KRN","B",.401,.401)

"BLD",57,"KRN","B",.402,.402)

"BLD",57,"KRN","B",.403,.403)

"BLD",57,"KRN","B",.5,.5)

"BLD",57,"KRN","B",.84,.84)

"BLD",57,"KRN","B",3.6,3.6)

"BLD",57,"KRN","B",9.2,9.2)

"BLD",57,"KRN","B",9.8,9.8)

"BLD",57,"KRN","B",19,19)

"BLD",57,"KRN","B",19.1,19.1)

"BLD",57,"KRN","B",101,101)

"BLD",57,"KRN","B",8995,8995)

"BLD",57,"QUES",0)
^9.62^^
"KRN",19,531,-1)
0^1
"KRN",19,531,0)
XU OPTION START^One-time Option Start (Internal Use Only)^^A^^^^^^^^OLD KERNEL^^1^^
"KRN",19,531,1,0)
^^5^5^2900413^^^^
"KRN",19,531,1,0,"LE")
1
"KRN",19,531,1,1,0)
This option works with XU OPTION QUEUE (One-time Option Queue) to allow
"KRN",19,531,1,2,0)
site managers to schedule an option that usually runs on a cycle without
"KRN",19,531,1,3,0)
disrupting that cycle.  This option should NOT be used directly, either
"KRN",19,531,1,4,0)
from a menu or through ZTMSCHEDULE (Schedule/Unschedule Options); it is
"KRN",19,531,1,5,0)
used internally by XU OPTION QUEUE to make that option work correctly.
"KRN",19,531,2)
n
"KRN",19,531,20)
S XQ=$S($D(^DIC(19,XUXQM,0)):^(0),1:""),XQT=$P(XQ,U,4) I "APR"[XQT S X=$P(XQ,U,8) X:(X>1)&(X<11) ^%ZOSF("PRIORITY") S XQY=XUXQM G ZTSK2^XQ1
"KRN",19,531,"U")
ONE-TIME OPTION START (INTERNA
"ORD",12,19)
19;12;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",12,19,0)
OPTION
"PKG",283,-1)
0
"PKG",283,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",283,1,0)
^^1^1^2950703^^^^
"PKG",283,1,1,0)
This is the basic package containing the KERNEL.
"PKG",283,2,0)
^9.42A^^0
"PKG",283,3,0)
^9.43^^0
"PKG",283,4,0)
^9.44AP^^0
"PKG",283,5)
SAN FRANCISCO
"PKG",283,7)
^^I
"PKG",283,8,0)
^9.404ID^^0
"PKG",283,11)
^
"PKG",283,20,0)
^9.402P^^0
"PKG",283,22,0)
^9.49I^20^6
"PKG",283,22,6,0)
6^2890609^2880718
"PKG",283,22,6.5,0)
6.5^2890807
"PKG",283,22,7,0)
7^2920831
"PKG",283,22,8,0)
7.1^2930507^2930125
"PKG",283,22,18,0)
8.0T19^2950222^2950214^6
"PKG",283,22,20,0)
8.0T20^2950410
"PKG",283,22,20,1,0)
^^1^1^2950410
"PKG",283,22,20,1,1,0)

"PKG",283,22,20,"PAH",0)
^9.4901^7^7
"PKG",283,22,20,"PAH",1,0)
4^2950424
"PKG",283,22,20,"PAH",1,1,0)
^^2^2^2950424
"PKG",283,22,20,"PAH",1,1,1,0)
This patch will restore the *OLD XY CRT* field in the Terminal Type
"PKG",283,22,20,"PAH",1,1,2,0)
file.  It will also put back the data into the %ZIS global.
"PKG",283,22,20,"PAH",2,0)
5^2950427
"PKG",283,22,20,"PAH",2,1,0)
^^12^12^2950428
"PKG",283,22,20,"PAH",2,1,1,0)
 This is patch 5 of Kernel 8.0T20. It contains 9 routines, 4 of them will
"PKG",283,22,20,"PAH",2,1,2,0)
 need to be moved to the manager account.  This patch contains bug fixes
"PKG",283,22,20,"PAH",2,1,3,0)
 that have been identified at the test sites and a new function that is
"PKG",283,22,20,"PAH",2,1,4,0)
 needed by MailMan.
"PKG",283,22,20,"PAH",2,1,5,0)

"PKG",283,22,20,"PAH",2,1,6,0)
  XQ1 - will now issue an unlock after running an option
"PKG",283,22,20,"PAH",2,1,7,0)
  XQ12 - checks if IO="", corrects error
"PKG",283,22,20,"PAH",2,1,8,0)
  XUA4A7 - corrects missing tag error
"PKG",283,22,20,"PAH",2,1,9,0)
  XPDCPU - MOVE/INSTALL can now be run from non-MSM sites
"PKG",283,22,20,"PAH",2,1,10,0)
  XUSPURGE - the option XUSERAOLD can now be scheduled
"PKG",283,22,20,"PAH",2,1,11,0)
  ZOSVVXD,ZOSVMSM,ZOSVDTM,ZOSVMSQ - $$VERSION return OS version number
"PKG",283,22,20,"PAH",2,1,12,0)
    
"PKG",283,22,20,"PAH",3,0)
6^2950428
"PKG",283,22,20,"PAH",3,1,0)
^^14^14^2950428
"PKG",283,22,20,"PAH",3,1,1,0)
 This is patch 6 of Kernel 8.0T20. This patch is in a KIDS format and
"PKG",283,22,20,"PAH",3,1,2,0)
 it contains only 3 routines. If you can, LOAD THIS PATCH BEFORE PATCH 4
"PKG",283,22,20,"PAH",3,1,3,0)
 AND 5.  It is okay to load this patch after patch 4 and 5. This patch
"PKG",283,22,20,"PAH",3,1,4,0)
 corrects a message you will see when loading a KIDS patch on a MSM system,
"PKG",283,22,20,"PAH",3,1,5,0)
 'BUILD XU*8T20*4 **Couldn't Add to file**'.  The patch did load correctly,
"PKG",283,22,20,"PAH",3,1,6,0)
 there just isn't an entry in the Build file for the patch.  This patch also
"PKG",283,22,20,"PAH",3,1,7,0)
 contains a missing MailMan routine, that is needed for those sites who
"PKG",283,22,20,"PAH",3,1,8,0)
 didn't install Kernel 8.0T19.  This patch can be installed with users on the
"PKG",283,22,20,"PAH",3,1,9,0)
 system.
"PKG",283,22,20,"PAH",3,1,10,0)

"PKG",283,22,20,"PAH",3,1,11,0)
  XMGAPI4 - missing MailMan routine
"PKG",283,22,20,"PAH",3,1,12,0)
  XPDID - corrects undef error for sites who didn't install Toolkit 7.3
"PKG",283,22,20,"PAH",3,1,13,0)
  XPDET - correctly adds patch to Build file
"PKG",283,22,20,"PAH",3,1,14,0)

"PKG",283,22,20,"PAH",4,0)
7^2950510
"PKG",283,22,20,"PAH",4,1,0)
^^22^22^2950511
"PKG",283,22,20,"PAH",4,1,1,0)
  This is patch 7 of Kernel 8.0T20. This patch is in a KIDS format.
"PKG",283,22,20,"PAH",4,1,2,0)
  You should remove all users from the system when installing this
"PKG",283,22,20,"PAH",4,1,3,0)
  patch, those still on will get a error when they return to menus.
"PKG",283,22,20,"PAH",4,1,4,0)
  It contains 10 routines, 1 of them will need to be moved to the
"PKG",283,22,20,"PAH",4,1,5,0)
  manager account. It also contains the XUSERDEACT input template and
"PKG",283,22,20,"PAH",4,1,6,0)
  form. This is used when deactivating an user.  This patch contains
"PKG",283,22,20,"PAH",4,1,7,0)
  bug fixes that have been identified at the test sites and during
"PKG",283,22,20,"PAH",4,1,8,0)
  verification.
"PKG",283,22,20,"PAH",4,1,9,0)
 
"PKG",283,22,20,"PAH",4,1,10,0)
   XPDIJ - when moving routines to other CPU during install, KIDS
"PKG",283,22,20,"PAH",4,1,11,0)
    will check other jobs every minute, instead of 5 minutes
"PKG",283,22,20,"PAH",4,1,12,0)
   XQALDEL - kills x-ref correctly for alerts
"PKG",283,22,20,"PAH",4,1,13,0)
   XQALDOIT,XQ - corrects problems identified by verification
"PKG",283,22,20,"PAH",4,1,14,0)
    for alerts.
"PKG",283,22,20,"PAH",4,1,15,0)
   XQ12 - setting XQUIT will exit properly
"PKG",283,22,20,"PAH",4,1,16,0)
   XTER1A - corrects undef error when option is queued
"PKG",283,22,20,"PAH",4,1,17,0)
   XUTMR1 - displays default Task Priority correctly when
"PKG",283,22,20,"PAH",4,1,18,0)
    requeueing an option
"PKG",283,22,20,"PAH",4,1,19,0)
   XUTMQ - corrects bug when exiting the list with a '^' in
"PKG",283,22,20,"PAH",4,1,20,0)
    List Task Option
"PKG",283,22,20,"PAH",4,1,21,0)
   XPDIGP - display warning if global is killed during install
"PKG",283,22,20,"PAH",4,1,22,0)
   ZIS - corrects problem with ZTIO="Q" in taskman
"PKG",283,22,20,"PAH",5,0)
8^2950602
"PKG",283,22,20,"PAH",5,1,0)
^^54^54^2950605
"PKG",283,22,20,"PAH",5,1,1,0)
  This is patch 8 of Kernel 8.0T20. This patch is in a KIDS format.
"PKG",283,22,20,"PAH",5,1,2,0)
  You should remove all users from the system when installing this
"PKG",283,22,20,"PAH",5,1,3,0)
  patch, those still on will get a error when they return to menus.
"PKG",283,22,20,"PAH",5,1,4,0)
  You should also shut down Taskman, ZTMS3 is in this patch.
"PKG",283,22,20,"PAH",5,1,5,0)

"PKG",283,22,20,"PAH",5,1,6,0)
  Patch 8 contains 26 routines, 3 of them will need to be moved to the
"PKG",283,22,20,"PAH",5,1,7,0)
  manager account. It also contains 9 options and 4 help frames. The
"PKG",283,22,20,"PAH",5,1,8,0)
  options and help frames had changes made to their description and text
"PKG",283,22,20,"PAH",5,1,9,0)
  to further clarify their functions.  The routine changes are bug fixes
"PKG",283,22,20,"PAH",5,1,10,0)
  that have been identified at the test sites and during verification.
"PKG",283,22,20,"PAH",5,1,11,0)

"PKG",283,22,20,"PAH",5,1,12,0)
  ROUTINES: 
"PKG",283,22,20,"PAH",5,1,13,0)
   XPDIJ - will now wait for jobs to start on other CPUs, reported at
"PKG",283,22,20,"PAH",5,1,14,0)
    Boise.
"PKG",283,22,20,"PAH",5,1,15,0)
   XPDIU - removes Out-Of-Order setnames after patch is installed, reported
"PKG",283,22,20,"PAH",5,1,16,0)
    by Verification.
"PKG",283,22,20,"PAH",5,1,17,0)
   XPDCPU - queues menu rebuild after all CPUs are installed, reported
"PKG",283,22,20,"PAH",5,1,18,0)
    at Clarksburg.
"PKG",283,22,20,"PAH",5,1,19,0)
   XPDIK - resolves pointers correctly when installing data, reported by
"PKG",283,22,20,"PAH",5,1,20,0)
    Verification.
"PKG",283,22,20,"PAH",5,1,21,0)
   XPDET - allows putting " around Entry of Build Component in Build file,
"PKG",283,22,20,"PAH",5,1,22,0)
    reported by Verification.
"PKG",283,22,20,"PAH",5,1,23,0)
   XQORD,XQORD1 - corrects undef error when physician name is entered
"PKG",283,22,20,"PAH",5,1,24,0)
    with a space after the comma, reported by SF VAMC.
"PKG",283,22,20,"PAH",5,1,25,0)
   XQOO,XQOO1,XQOO2,XQOO3 - corrects problems when options and protocols
"PKG",283,22,20,"PAH",5,1,26,0)
    are put out-of-order during install, reported at Clarksburg.
"PKG",283,22,20,"PAH",5,1,27,0)
   XQH - corrects undef error when in Help Frames, reported by Verification.
"PKG",283,22,20,"PAH",5,1,28,0)
   XQ,XQ12 - Login Templates weren't being executed during login, reported
"PKG",283,22,20,"PAH",5,1,29,0)
    by Verification.
"PKG",283,22,20,"PAH",5,1,30,0)
   XQT4 - reference New Person file for Menu Templates, reported by
"PKG",283,22,20,"PAH",5,1,31,0)
    Verification.
"PKG",283,22,20,"PAH",5,1,32,0)
   XQSMD3,XQSMD31 - corrects undef error when using Delegate Secure Menu option,
"PKG",283,22,20,"PAH",5,1,33,0)
    reported by Tampa.
"PKG",283,22,20,"PAH",5,1,34,0)
   XQ73 - corrects bug when entering access code;verify code;option during,
"PKG",283,22,20,"PAH",5,1,35,0)
    login, reported by Verification.
"PKG",283,22,20,"PAH",5,1,36,0)
   XQ75 - correctly echo back the name after a lookup during a jump, reported
"PKG",283,22,20,"PAH",5,1,37,0)
    by Verification.
"PKG",283,22,20,"PAH",5,1,38,0)
   XQUSR - XUUSERDISP option correctly scrolls on the screen, reported by
"PKG",283,22,20,"PAH",5,1,39,0)
    Boston.
"PKG",283,22,20,"PAH",5,1,40,0)
   XUSMGR - Release User option now kills XUSEC(0,"CUR"), reported by Tampa.
"PKG",283,22,20,"PAH",5,1,41,0)
   XUTMDQ - corrects undef when Dequeueing a task, reported by Verification.
"PKG",283,22,20,"PAH",5,1,42,0)
   XUTMUSE2 - truncates task description to 70 characters, reported by
"PKG",283,22,20,"PAH",5,1,43,0)
    Verification.
"PKG",283,22,20,"PAH",5,1,44,0)
   ZIS5 - changes need for FileMan Browser device
"PKG",283,22,20,"PAH",5,1,45,0)
   ZISX - wrong version was sent with T20
"PKG",283,22,20,"PAH",5,1,46,0)
   ZTMS3 - correct duplicate name error in Taskman, reported by everyone.
"PKG",283,22,20,"PAH",5,1,47,0)

"PKG",283,22,20,"PAH",5,1,48,0)
  OPTIONS:
"PKG",283,22,20,"PAH",5,1,49,0)
   XUXREF-2, XQOOFF, XQOOMAIN, XQOOMAKE, XQOON, XQOOSHOFIL, XQOOSMOPRO,
"PKG",283,22,20,"PAH",5,1,50,0)
   XQOOSHOW, XUERRS
"PKG",283,22,20,"PAH",5,1,51,0)

"PKG",283,22,20,"PAH",5,1,52,0)
  HELP FRAMES:
"PKG",283,22,20,"PAH",5,1,53,0)
   XQOO, XQOO-KIDSNMAE XQOO-MESS,XQOO-NAME
"PKG",283,22,20,"PAH",5,1,54,0)
   
"PKG",283,22,20,"PAH",6,0)
10^2950614
"PKG",283,22,20,"PAH",6,1,0)
^^1^1^2950614
"PKG",283,22,20,"PAH",6,1,1,0)
This is patch 10 of Kernel 8.0T20.
"PKG",283,22,20,"PAH",7,0)
11^2950614
"PKG",283,22,20,"PAH",7,1,0)
^^1^1^2950623
"PKG",283,22,20,"PAH",7,1,1,0)
This is patch 10 of Kernel 8.0T20.
"PKG",283,22,20,"PAH","B",4,1)

"PKG",283,22,20,"PAH","B",5,2)

"PKG",283,22,20,"PAH","B",6,3)

"PKG",283,22,20,"PAH","B",7,4)

"PKG",283,22,20,"PAH","B",8,5)

"PKG",283,22,20,"PAH","B",10,6)

"PKG",283,22,20,"PAH","B",11,7)

"PKG",283,22,"B",6,6)

"PKG",283,22,"B",6.5,6.5)

"PKG",283,22,"B",7,7)

"PKG",283,22,"B",7.1,8)

"PKG",283,22,"B","8.0T19",18)

"PKG",283,22,"B","8.0T20",20)

"PKG",283,1933,0)
^9.455^^0
"PKG",283,"DEV")
SF:HVB,RWF,AC,XAK,VYD,JIC SEA:MJM,JLI
"PKG",283,"DIBT",0)
^9.48^^0
"PKG",283,"DIE",0)
^9.47^^0
"PKG",283,"DIPT",0)
^9.46^^0
"PKG",283,"EX",0)
^9.432^^0
"PKG",283,"INI")
^
"PKG",283,"INIT")
^
"PKG",283,"M",0)
^9.495^^0
"PKG",283,"PRE")
^
"PKG",283,"ST",0)
^9.444D^2830000^1
"PKG",283,"ST",2830000,0)
2830000^A
"PKG",283,"VERSION")
8.0T20
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Options and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
12
"RTN","ORF2")
0^8^B18156866
"RTN","ORF2",1,0)
ORF2 ; slc/dcm - Purge old orders; ;7/18/95  09:27
"RTN","ORF2",2,0)
 ;;8.0;KERNEL;**1**;Jul 05, 1995
"RTN","ORF2",3,0)
 ;  MODIFIED FOR KERNEL 8.0 BY JLI(ISC-SF) 6/20/95
"RTN","ORF2",4,0)
 W !,"This option will purge orders from the ORDER file (100) that do not have",!,"an active status type and no activity in the number of grace days specified",!,"when the order was placed.",!!,"OK to proceed" S %=2 D YN^DICN G:%=0 ORF2 Q:%'=1
"RTN","ORF2",5,0)
ENT S OREND=0,ORACTION=7,ORGY="",%ZIS="Q" I '$D(ORTSK) D ^%ZIS Q:POP  I $D(IO("Q")) K IO("Q") S ZTIO=ION,ZTSAVE("OR*")="",ZTRTN="DQ^ORF2" D ^%ZTLOAD W:$D(ZTSK) !,"REQUEST QUEUED" K ZTSK,ZTIO,ZTSAVE,ZTRTN G END
"RTN","ORF2",6,0)
 ;I $D(IO),$L(IO) U IO W @IOF,!,"LIST OF ORDERS DELETED",! F I=1:1:(IOM-1) W "-"
"RTN","ORF2",7,0)
 S ORIFN=0 D NOW^%DTC S ORSTTIM=% I $P(^ORD(100.99,1,0),"^",6) S ORIFN=$P(^(0),"^",6)
"RTN","ORF2",8,0)
 S ORLASP=$P(^ORD(100.99,1,0),"^",5)
"RTN","ORF2",9,0)
 F  S ORIFN=$O(^OR(100,ORIFN)) Q:ORIFN<1  S OROFN=ORIFN,ORACTION=7 D A S ORIFN=OROFN,$P(^ORD(100.99,1,0),"^",6)=ORIFN
"RTN","ORF2",10,0)
 S $P(^ORD(100.99,1,0),"^",5,6)=ORSTTIM_"^"_0
"RTN","ORF2",11,0)
 S (I,C)=0 F J=0:0 S I=$O(^OR(100,I)) Q:I<1  S C=C+1
"RTN","ORF2",12,0)
 S $P(^OR(100,0),"^",4)=C
"RTN","ORF2",13,0)
 D EN^ORLPURG,ER^ORF5,NOTIF
"RTN","ORF2",14,0)
END K %T,J,ORELECT,OROFN,ORACTION,ORGY,ORIFN,ORVP,ORO,ORSTRT,ORTO,ORIT,OROLOC,ORPK,ORLASP,ORLOG,ORSTS,ORSTTIM,ORTSK,OREND,ORUPCHK,ORNS,ORX,ORX5,X1,X2,ORX3,C,I,IT D ^%ZISC
"RTN","ORF2",15,0)
 Q
"RTN","ORF2",16,0)
DQ I $D(ZTSK) D KILL^%ZTLOAD K ZTSK
"RTN","ORF2",17,0)
 S ORTSK=1 G ENT
"RTN","ORF2",18,0)
P ;S X=ORX,Y=$P(X,"^",2) I $L(Y),+Y>0 S Y=$P(@("^"_$P(Y,";",2)_+Y_",0)"),"^") W !,$P(ORX3,"^",5)_"  "_$P(ORX3,"^")_$S($D(^OR(100,+ORX)):"",1:"  DELETED!")
"RTN","ORF2",19,0)
 Q
"RTN","ORF2",20,0)
A S ORSIFN=ORIFN I '$D(^OR(100,ORIFN,3)) D:$P($P(^(0),"^",7),".")<$P(ORSTTIM,".") DOIT Q
"RTN","ORF2",21,0)
 S ORLOG=$P(^OR(100,ORIFN,0),"^",7),ORNS=$P(^(0),"^",14),X=^OR(100,ORIFN,3),ORSTS=$P(X,"^",3),X1=+X,X2=+$P(X,"^",2),ORIT=$P(X,"^",4),ORSTRT=$P(X,"^",6)
"RTN","ORF2",22,0)
 I ORLOG>ORLASP,$L(ORIT) S IT=$O(^OR(100.1,"B",ORIT,0)) D ASP
"RTN","ORF2",23,0)
 I ORSTRT,ORSTRT>DT K ORSIFN Q
"RTN","ORF2",24,0)
 D C^%DTC I DT>X D PURG D:$D(IO)&('OREND) P S OREND=0
"RTN","ORF2",25,0)
 I $D(^OR(100,ORSIFN,3)) S X1=ORSTTIM,X2=-365 D C^%DTC I $P(^OR(100,ORSIFN,3),"^")<X D DOIT ;get rid of data more than a year old
"RTN","ORF2",26,0)
 K ORSIFN Q
"RTN","ORF2",27,0)
PURG ;;Discontinue use of 100.2 after 1-1-90
"RTN","ORF2",28,0)
 ;;Purge order entries here (ORIFN)
"RTN","ORF2",29,0)
 Q:'$D(ORIFN)  Q:'ORIFN
"RTN","ORF2",30,0)
 Q:'$D(^OR(100,ORIFN,0))
"RTN","ORF2",31,0)
 I $D(^OR(100,ORIFN,2,0)) Q:$O(^(0))  D DOIT Q
"RTN","ORF2",32,0)
 S (ORX,X)=^OR(100,ORIFN,0),ORPK=$S($D(^(4)):^(4),1:""),ORX3=$S($D(^(3)):^(3),1:""),ORELECT=$P(ORX3,"^",10),ORX5=$P(X,"^",5),OROLOC=$P(X,"^",10) I '$L(ORX5) D DOIT Q
"RTN","ORF2",33,0)
 S ORVP=$P(X,"^",2),ORLOG=$P(X,"^",7),ORSTRT=$P(X,"^",8),ORTO=$P(X,"^",11),ORNS=$P(X,"^",14),ORIT=$P(ORX3,"^",4) S:'ORSTRT ORSTRT=$P(ORX3,"^",6)
"RTN","ORF2",34,0)
 D EN^ORF9
"RTN","ORF2",35,0)
 Q
"RTN","ORF2",36,0)
DOIT ;Remove entry from file 100
"RTN","ORF2",37,0)
 Q:'$D(ORIFN)  Q:'ORIFN  Q:'$D(^OR(100,ORIFN,0))  S DA=ORIFN D REMOVE
"RTN","ORF2",38,0)
 Q
"RTN","ORF2",39,0)
P1 ;;from ORX
"RTN","ORF2",40,0)
 Q:'$D(ORIFN)  Q:'$D(^OR(100,+ORIFN,0))
"RTN","ORF2",41,0)
 I $D(^OR(100,+ORIFN,3)),$P(^(3),"^",9) S X=$P(^(3),"^",9) I $O(^OR(100,X,2,0)) S $P(^(0),"^",4)=$P(^(0),"^",4)-1 K ^(ORIFN) I '$O(^(0)) D OUT:ORIFN'=X
"RTN","ORF2",42,0)
 I $D(ORNS),$D(ORAL(ORNS)) K ORAL(ORNS,ORIFN)
"RTN","ORF2",43,0)
 D NOTIF^ORX8(ORIFN,12)
"RTN","ORF2",44,0)
 D NOTIF^ORX8(ORIFN,6)
"RTN","ORF2",45,0)
 K ORCUM(ORIFN) S DA=ORIFN D REMOVE
"RTN","ORF2",46,0)
 K ORSTS,ORIFN Q
"RTN","ORF2",47,0)
ASP I IT,$D(^OR(100.1,IT,0)) S $P(^(0),"^",2)=($P(^(0),"^",2)+1) Q
"RTN","ORF2",48,0)
 S IT=$P(^OR(100.1,0),"^",4) L +^OR(100.1)
"RTN","ORF2",49,0)
ASP1 S IT=IT+1 G:$D(^OR(100.1,IT,0)) ASP1 S ^OR(100.1,IT,0)=ORIT_"^"_1_"^"_ORNS,^OR(100.1,"B",ORIT,IT)=""
"RTN","ORF2",50,0)
 S $P(^(0),"^",3,4)=IT_"^"_($P(^OR(100.1,0),"^",4)+1) L -^OR(100.1) Q
"RTN","ORF2",51,0)
OUT N ORIFN,ORSTS,ORNS S ORZNS=$P(^OR(100,X,0),"^",14),(ORZIFN,ORIFN)=X D P1
"RTN","ORF2",52,0)
 I '$D(^OR(100,ORZIFN)) K ORCUM(ORZIFN),ORAL(ORZNS,ORZIFN)
"RTN","ORF2",53,0)
 K ORZIFN,ORZNS
"RTN","ORF2",54,0)
 Q
"RTN","ORF2",55,0)
REMOVE D KIL^ORDD100,SK^ORDD100,NCNN2^ORDD100,S2^ORDD100,RK^ORDD100,TK^ORDD100,WK^ORDD100,LK^ORDD100A,OK^ORDD100A,EK^ORDD100A,FK^ORDD100A
"RTN","ORF2",56,0)
 K ^OR(100,ORIFN) S $P(^OR(100,0),"^",4)=$P(^OR(100,0),"^",4)-1
"RTN","ORF2",57,0)
 Q
"RTN","ORF2",58,0)
NOTIF ; clean up ^OR(100,"AN" entries without associated alerts in ^VA(200
"RTN","ORF2",59,0)
 S (NIEN,P,N)=0
"RTN","ORF2",60,0)
 F  S P=$O(^OR(100,"AN",P)) Q:P=""  D
"RTN","ORF2",61,0)
 .F  S N=$O(^OR(100,"AN",P,N)) Q:N=""  D
"RTN","ORF2",62,0)
 ..S NIEN=N,PT=$P(P,";"),XQAID="OR,"_PT_","_NIEN
"RTN","ORF2",63,0)
 ..I $D(^XTV(8992,"AXQAN",XQAID))<1 K ^OR(100,"AN",P,N)
"RTN","ORF2",64,0)
 K N,NIEN,P,XQAID
"RTN","ORF2",65,0)
 Q
"RTN","XPDR")
0^3^B28999932
"RTN","XPDR",1,0)
XPDR ;SFISC/RSD - Routine File Edit ; 26 Jul 95 13:58
"RTN","XPDR",2,0)
 ;;8.0;KERNEL;**1**;Jul 05, 1995
"RTN","XPDR",3,0)
 Q
"RTN","XPDR",4,0)
UPDT ;update routine file
"RTN","XPDR",5,0)
 N DIR,DIRUT,XPD,XPDI,XPDJ,XPDN,X,X1,Y,Y1,% W !
"RTN","XPDR",6,0)
 W ! S DIR(0)="FO^1:9^K:X'?.1""-""1U.7UNP X",DIR("A")="Routine Namespace",DIR("?")="Enter 1 to 8 characters, preceed with ""-"" to exclude namespace"
"RTN","XPDR",7,0)
 F  D ^DIR Q:$D(DIRUT)  S X=$E(Y,$L(Y))="*",%=$E(Y)="-",XPDN('%,$E(Y,%+1,$L(Y)-X))=""
"RTN","XPDR",8,0)
 Q:'$D(XPDN)!$D(DTOUT)!$D(DUOUT)
"RTN","XPDR",9,0)
 W !!,"NAMESPACE  INCLUDE",?35,"EXCLUDE",!,?11,"-------",?35,"-------"
"RTN","XPDR",10,0)
 S (X,Y)="",(X1,Y1)=1
"RTN","XPDR",11,0)
 F  D  W !?11,X,?35,Y Q:'X1&'Y1
"RTN","XPDR",12,0)
 .S:X1 X=$O(XPDN(1,X)),X1=X]"" S:Y1 Y=$O(XPDN(0,Y)),Y1=Y]""
"RTN","XPDR",13,0)
 K DIR S DIR(0)="Y",DIR("A")="OK to continue",DIR("B")="YES" D ^DIR
"RTN","XPDR",14,0)
 Q:'Y!$D(DIRUT)  W !
"RTN","XPDR",15,0)
 S DIR(0)="Y",DIR("A")="Want me to clean up the Routine File before updating",DIR("?")="YES means you want to go throught the Routine file and delete any routine name that no longer exists on the system."
"RTN","XPDR",16,0)
 D ^DIR
"RTN","XPDR",17,0)
 Q:$D(DIRUT)  D WAIT^DICD,DELRTN:Y
"RTN","XPDR",18,0)
 S XPDI="" F  S XPDI=$O(XPDN(1,XPDI)) Q:XPDI=""  D
"RTN","XPDR",19,0)
 .S XPDJ=XPDI D:$D(^$R(XPDJ))  F  S XPDJ=$O(^$R(XPDJ)) Q:XPDJ=""!($P(XPDJ,XPDI)]"")  D
"RTN","XPDR",20,0)
 ..Q:$D(XPDN(0,XPDJ))!$O(^DIC(9.8,"B",XPDJ,0))
"RTN","XPDR",21,0)
 ..S %=$O(XPDN(0,XPDJ),-1) I $L(%),$P(XPDJ,%)="" Q
"RTN","XPDR",22,0)
 ..N XPD S XPD(9.8,"+1,",.01)=XPDJ,XPD(9.8,"+1,",1)="R"
"RTN","XPDR",23,0)
 ..D ADD^DICA("","XPD")
"RTN","XPDR",24,0)
 W "    ...Done.",!
"RTN","XPDR",25,0)
 Q
"RTN","XPDR",26,0)
VER ;verify Routine file
"RTN","XPDR",27,0)
 N DIR,DIRUT,X,Y
"RTN","XPDR",28,0)
 W !,"I will delete all entries in the Routine File in which",!,"the Routine no longer exist on this system!",!
"RTN","XPDR",29,0)
 S DIR(0)="Y",DIR("A")="OK to continue",DIR("B")="YES" D ^DIR
"RTN","XPDR",30,0)
 Q:'Y!$D(DIRUT)  D DELRTN
"RTN","XPDR",31,0)
 W "    ...Done.",!
"RTN","XPDR",32,0)
 Q
"RTN","XPDR",33,0)
DELRTN ;delete routine file entries
"RTN","XPDR",34,0)
 N DA,DIK,Y
"RTN","XPDR",35,0)
 S DIK="^DIC(9.8,",DA=0
"RTN","XPDR",36,0)
 F  S DA=$O(^DIC(9.8,DA)) Q:'DA  S Y=$G(^(DA,0)) I $P(Y,U,2)="R",$T(^@$P(Y,U))="" D ^DIK
"RTN","XPDR",37,0)
 Q
"RTN","XPDR",38,0)
PURGE ;purge file
"RTN","XPDR",39,0)
 N DA,DIK,DIR,DIRUT,X,XPD,XPDF,XPDL,XPDN,XPDPG,XPDS,XPDUL,Y
"RTN","XPDR",40,0)
 S DIR("?")="Enter the file you want to purge the data from.",DIR(0)="SM^B:Build;I:Install",DIR("A")="Purge from what file"
"RTN","XPDR",41,0)
 D ^DIR Q:$D(DIRUT)
"RTN","XPDR",42,0)
 S XPDF=$S(Y="I":9.7,1:9.6) ;S:Y="ALL" XPDF(1)=9.7 ALL;Build & Install
"RTN","XPDR",43,0)
 K DIR S DIR("?")="Enter the number of Versions to keep in the file, for each package",DIR(0)="N^0:100:0",DIR("A")="Versions to Retain",DIR("B")=1
"RTN","XPDR",44,0)
 D ^DIR Q:$D(DIRUT)  S XPDN=Y
"RTN","XPDR",45,0)
 K DIR S DIR("?",1)="Enter 'ALL' to purge all packages, or",DIR("?",2)="Enter the name of the Package you want to Purge."
"RTN","XPDR",46,0)
 S DIR("?",3)=" i.e. KERNEL 8.0  will purge version 8.0Tx and 8.0Vx",DIR("?")="      XU*8.0 will purge all patches for 8.0"
"RTN","XPDR",47,0)
 S DIR(0)="FO^3:30",DIR("A")="Package Name",DIR("B")="ALL"
"RTN","XPDR",48,0)
 F  D ^DIR Q:$D(DIRUT)  S XPD(X)="" Q:X="ALL"  K DIR("?",1),DIR("B") S DIR("A")="Another Package Name"
"RTN","XPDR",49,0)
 Q:'$D(XPD)
"RTN","XPDR",50,0)
 I $D(XPD("ALL")) K XPD S XPD("ALL")=""
"RTN","XPDR",51,0)
 D PURGE1
"RTN","XPDR",52,0)
 I '$D(^TMP($J)) W !!,"No match found" Q
"RTN","XPDR",53,0)
 K XPD,DIR
"RTN","XPDR",54,0)
 S DIR(0)="E",XPD="^TMP("_$J,XPDS=XPD_",",XPD=XPD_")",XPDL=$L(XPDS),$P(XPDUL,"-",IOM)="",XPDPG=1,Y=1
"RTN","XPDR",55,0)
 W @IOF D HDR
"RTN","XPDR",56,0)
 F  S XPD=$Q(@XPD) Q:XPD=""!($E(XPD,1,XPDL)'=XPDS)  D  Q:'Y
"RTN","XPDR",57,0)
 .W $P(@XPD,"^",2),! Q:$Y<(IOSL-4)
"RTN","XPDR",58,0)
 .D ^DIR Q:'Y
"RTN","XPDR",59,0)
 .S XPDPG=XPDPG+1 W @IOF D HDR
"RTN","XPDR",60,0)
 S DIR(0)="Y",DIR("A")="OK to DELETE these entries",DIR("B")="NO"
"RTN","XPDR",61,0)
 W !! D ^DIR
"RTN","XPDR",62,0)
 I $D(DIRUT)!'Y W !!,"Nothing Purged" Q
"RTN","XPDR",63,0)
 S DIK="^XPD("_XPDF_",",XPD="^TMP("_$J,XPDS=XPD_",",XPD=XPD_")",XPDL=$L(XPDS)
"RTN","XPDR",64,0)
 F  S XPD=$Q(@XPD) Q:XPD=""!($E(XPD,1,XPDL)'=XPDS)  S DA=+@XPD D:DA ^DIK
"RTN","XPDR",65,0)
 Q
"RTN","XPDR",66,0)
PURGE1 N XPDFL,XPDI,XPDJ,XPDP,XPDV,Y,Z
"RTN","XPDR",67,0)
 W "." K ^TMP($J)
"RTN","XPDR",68,0)
 I $D(XPD("ALL")) D
"RTN","XPDR",69,0)
 .S XPDI=""
"RTN","XPDR",70,0)
 .F  S XPDI=$O(^XPD(XPDF,"B",XPDI)) Q:XPDI=""  D
"RTN","XPDR",71,0)
 ..S X=$$PKG^XPDUTL(XPDI) D PURGE2(X)
"RTN","XPDR",72,0)
 ..W "."
"RTN","XPDR",73,0)
 E  S XPDI="" F  S XPDI=$O(XPD(XPDI)) Q:XPDI=""  D
"RTN","XPDR",74,0)
 .D PURGE2(XPDI)
"RTN","XPDR",75,0)
 .W "."
"RTN","XPDR",76,0)
 S XPDP="" F  S XPDP=$O(^TMP($J,XPDP)) Q:XPDP=""  D
"RTN","XPDR",77,0)
 .S XPDV="",XPDL=XPDN
"RTN","XPDR",78,0)
 .F  S XPDV=$O(^TMP($J,XPDP,XPDV),-1),XPDS="" Q:'XPDV!'XPDL  F  S XPDS=$O(^TMP($J,XPDP,XPDV,XPDS),-1) Q:XPDS=""!'XPDL  D
"RTN","XPDR",79,0)
 ..S Y="" F  S Y=$O(^TMP($J,XPDP,XPDV,XPDS,Y),-1) Q:Y=""!'XPDL  D
"RTN","XPDR",80,0)
 ...I $D(^TMP($J,XPDP,XPDV,XPDS,Y))#2 K ^(Y) S XPDL=XPDL-1 Q
"RTN","XPDR",81,0)
 ...S Z="" F  S Z=$O(^TMP($J,XPDP,XPDV,XPDS,Y,Z),-1) Q:Z=""!'XPDL  K ^(Z) S XPDL=XPDL-1
"RTN","XPDR",82,0)
 Q
"RTN","XPDR",83,0)
PURGE2(XPDX) ;XPDX=package name
"RTN","XPDR",84,0)
 S XPDS=XPDX,XPDL=$L(XPDX),XPDFL=XPDX'["*"
"RTN","XPDR",85,0)
 D  F  S XPDS=$O(^XPD(XPDF,"B",XPDS)) Q:XPDS=""!($E(XPDS,1,XPDL)'=XPDX)!($S(XPDFL:XPDS["*",1:0))  D
"RTN","XPDR",86,0)
 .S Y=$O(^XPD(XPDF,"B",XPDS,0)) Q:'Y
"RTN","XPDR",87,0)
 .Q:'$D(^XPD(XPDF,Y,0))  S Z=^(0),Y=Y_"^"_XPDS
"RTN","XPDR",88,0)
 .I XPDF=9.7 Q:$P(Z,U,9)<3
"RTN","XPDR",89,0)
 .S XPDV=$$VER^XPDUTL(XPDS)
"RTN","XPDR",90,0)
 .I XPDS["*" D  Q
"RTN","XPDR",91,0)
 ..I XPDV?1.2N1"."1.2N S ^TMP($J,$$PKG^XPDUTL(XPDS),+XPDV,"*Z",0,+$P(XPDS,"*",3))=Y Q
"RTN","XPDR",92,0)
 ..I XPDV["T" S ^TMP($J,$$PKG^XPDUTL(XPDS),+XPDV,"*T",+$P(XPDV,"T",2),+$P(XPDS,"*",3))=Y Q
"RTN","XPDR",93,0)
 ..I XPDV["V" S ^TMP($J,$$PKG^XPDUTL(XPDS),+XPDV,"*V",+$P(XPDV,"V",2),+$P(XPDS,"*",3))=Y Q
"RTN","XPDR",94,0)
 ..S ^TMP($J,$$PKG^XPDUTL(XPDS),+XPDV,"*",+$P(XPDS,"*",3))=Y
"RTN","XPDR",95,0)
 .I XPDV?1.2N1"."1.2N S ^TMP($J,$$PKG^XPDUTL(XPDS),+XPDV,"Z",0)=Y Q
"RTN","XPDR",96,0)
 .I XPDV["T" S ^TMP($J,$$PKG^XPDUTL(XPDS),+XPDV,"T",+$P(XPDV,"T",2))=Y Q
"RTN","XPDR",97,0)
 .I XPDV["V" S ^TMP($J,$$PKG^XPDUTL(XPDS),+XPDV,"V",+$P(XPDV,"V",2))=Y Q
"RTN","XPDR",98,0)
 Q
"RTN","XPDR",99,0)
 ;
"RTN","XPDR",100,0)
HDR W !,"Package(s) in ",$S(XPDF=9.6:"Build",1:"Install")," file, "
"RTN","XPDR",101,0)
 I XPDN W "Retain last ",$S(XPDN=1:"version",1:XPDN_" versions")
"RTN","XPDR",102,0)
 E  W "Don't retain any versions"
"RTN","XPDR",103,0)
 W ?70,"PAGE ",XPDPG,!,XPDUL,!
"RTN","XPDR",104,0)
 Q
"RTN","XQ1")
0^12^B27182757
"RTN","XQ1",1,0)
XQ1 ; SEA/MJM - DRIVER FOR MENUMAN (PART 2) ;07/28/95  09:07
"RTN","XQ1",2,0)
 ;;8.0;KERNEL;**1**;Jul 05, 1995
"RTN","XQ1",3,0)
 S DIC=19,DIC(0)="AEQM" D ^DIC Q:Y<0  S (XQDIC,XQY)=+Y K DIC,XQUR,Y,^VA(200,DUZ,202.1) ;G ^XQ
"RTN","XQ1",4,0)
 D INIT^XQ12
"RTN","XQ1",5,0)
 G M^XQ
"RTN","XQ1",6,0)
 ;
"RTN","XQ1",7,0)
KILL K D,D0,D1,DA,DIC,DIE,DIR,DIS,DR,XQI,XQV,XQW,XQZ
"RTN","XQ1",8,0)
 D CLEAN^DILF
"RTN","XQ1",9,0)
 ;
"RTN","XQ1",10,0)
OUT ;Exit point for all option types
"RTN","XQ1",11,0)
 L  ;Clear the lock table
"RTN","XQ1",12,0)
 S U="^" I $D(ZTQUEUED) S XQF=$S('$D(^DIC(19,XQY,15)):0,'$L(^(15)):0,1:1) X:XQF ^(15) Q  ;Quit here if it's a Taskman job
"RTN","XQ1",13,0)
 I '$D(DT)!('$D(DTIME))!('$D(DUZ))!('$D(DUZ(0)))!('$D(DUZ("AG")))!('$D(DUZ("AUTO"))) D DVARS^XQ12
"RTN","XQ1",14,0)
 I $D(DUZ("AUTO")),DUZ("AUTO"),$D(XQY),$D(^DIC(19,+XQY,0))#2,$P(^(0),"^",11)["y" W !!,*7,"Press RETURN to continue..." R %:DTIME
"RTN","XQ1",15,0)
 I $D(^XUTL("XQ",$J,"RBX")) G RBX^XQ73
"RTN","XQ1",16,0)
 I $D(^XUTL("XQ",$J,"T")) S XQY=+^(^("T")),XQT="" S:$D(^DIC(19,+XQY,0)) XQT=$P(^(0),U,4) I '$D(XQUIT),("LOQX"'[XQT),$D(^DIC(19,XQY,15)),$L(^(15)) X ^(15) ;W "  ==> OUT^XQ1"
"RTN","XQ1",17,0)
 Q:'$D(^XUTL("XQ",$J,"T"))
"RTN","XQ1",18,0)
 I $D(^XUTL("XQ",$J,"T")) S XQTT=$S($D(XQUIT):^XUTL("XQ",$J,"T"),1:^XUTL("XQ",$J,"T")-1) K XQUIT
"RTN","XQ1",19,0)
 I XQTT'<1 S ^XUTL("XQ",$J,"T")=XQTT,XQY=^(XQTT),XQY0=$P(XQY,U,2,999),XQPSM=$P(XQY,U,1),XQY=+XQPSM,XQPSM=$P(XQPSM,XQY,2,99),XQABOLD=1
"RTN","XQ1",20,0)
 I XQTT=0 S XQY=-1
"RTN","XQ1",21,0)
 I $P(XQY0,U,4)="M" S XQAA=$P(XQY0,U,2) I $P(XQY0,U,17),$D(^DIC(19,+XQY,26)),$L(^(26)) X ^(26) ;W "  ==> OUT^XQ1"
"RTN","XQ1",22,0)
 K X,XQF,XQJS,XQOK,XQTT,XQZ,Y,Z
"RTN","XQ1",23,0)
 G M1^XQ
"RTN","XQ1",24,0)
 ;
"RTN","XQ1",25,0)
A ;ACTION type option entry point
"RTN","XQ1",26,0)
 X:$D(^DIC(19,+XQY,20)) ^(20) ;W "  ==> A^XQ1" 
"RTN","XQ1",27,0)
 I $D(XQUIT) K XQUIT G OUT
"RTN","XQ1",28,0)
 I $P(XQY0,U,17),$D(^DIC(19,XQY,26)),$L(^(26)) X ^(26) ;W "  ==> A^XQ1"
"RTN","XQ1",29,0)
 G OUT
"RTN","XQ1",30,0)
 ;
"RTN","XQ1",31,0)
C ;ScreenMan type options
"RTN","XQ1",32,0)
 D DIC G:DA=-1 KILL S XQZ="DR,DDSFILE,DDSFILE(1),DDSPAGE,DDSPARM",XQW=39 D SET
"RTN","XQ1",33,0)
 I DDSFILE["(",DDSFILE'[U S DDSFILE=U_DDSFILE
"RTN","XQ1",34,0)
 I $D(DDSFILE(1)),DDSFILE(1)["(",DDSFILE(1)'[U S DDSFILE(1)=U_DDSFILE(1)
"RTN","XQ1",35,0)
 D ^DDS K DDSFILE G C
"RTN","XQ1",36,0)
 ;
"RTN","XQ1",37,0)
P ;PRINT type option
"RTN","XQ1",38,0)
 S XQZ="DIC,PG,L,FLDS,BY,FR,TO,DHD,DCOPIES,DIS(0),IOP,DHIT,DIOBEG,DIOEND",XQW=59 D SET
"RTN","XQ1",39,0)
 I $D(DIS(0))#2 F XQI=1:1:3 Q:'$D(^DIC(19,+XQY,69+(XQI/10)))  Q:^(69+(XQI/10))=""  S DIS(XQI)=^(69+(XQI/10))
"RTN","XQ1",40,0)
 S:$D(XQIOP) IOP=XQIOP
"RTN","XQ1",41,0)
 I $D(^DIC(19,XQY,79)),^(79)=1 S DIASKHD=""
"RTN","XQ1",42,0)
 S DISUPNO=$G(^DIC(19,XQY,77)),DIPCRIT=$G(^DIC(19,XQY,78))
"RTN","XQ1",43,0)
 D D1,EN1^DIP K IOP,DIOBEG,DIS,DP G OUT
"RTN","XQ1",44,0)
 ;
"RTN","XQ1",45,0)
I ;INQUIRE type option
"RTN","XQ1",46,0)
I1 D DIC G KILL:DA=-1 S DI=DIC,XQZ="DIC,DR,DIQ(0)",XQW=79 D SET,D1 S:$D(DIC)[0 DIC=DI
"RTN","XQ1",47,0)
 I $D(^DIC(19,+XQY,63)),$L(^(63)) S FLDS=^(63) ;G I2
"RTN","XQ1",48,0)
 E  S FLDS="[CAPTIONED]" ;G I2
"RTN","XQ1",49,0)
I2 ;
"RTN","XQ1",50,0)
 W ! S XQZ="DHD",XQW=66 D SET K ^UTILITY($J),^(U,$J) S ^($J,1,DA)="",@("L=+$P("_DI_"0),U,2)"),DPP(1)=L_"^^^@",L=0,C=",",Q="""",DPP=1,DPP(1,"IX")="^UTILITY(U,$J,"_DI_"^2" D N^DIP1 S Y=XQY G I1
"RTN","XQ1",51,0)
 ;
"RTN","XQ1",52,0)
E ;EDIT type option entry point
"RTN","XQ1",53,0)
E1 D DIC G KILL:DA=-1 K DIE,DIC S XQZ="DIE,DR",XQW=49 D SET S XQZ="DIE(""W"")",XQW=53 D SET
"RTN","XQ1",54,0)
 I $D(^DIC(19,XQY,53)),$L(^(53)) S %=^(53),DIE("NO^")=$S(%="N":"",1:%)
"RTN","XQ1",55,0)
 S:DIE["(" DIE=U_DIE D ^DIE S Y=XQY G E1
"RTN","XQ1",56,0)
 ;
"RTN","XQ1",57,0)
DIC ;Get FileMan parameters from Option File and do look up
"RTN","XQ1",58,0)
 ;S XQSV=XQY
"RTN","XQ1",59,0)
 W ! K DIC S XQZ="DIC,DIC(0),DIC(""A""),DIC(""B""),DIC(""S""),DIC(""W""),D",XQW=29 D SET,D1
"RTN","XQ1",60,0)
 ;D:'$D(D) ^DIC
"RTN","XQ1",61,0)
 I '$D(D) D ^DIC
"RTN","XQ1",62,0)
 I $D(D) S:D="" D="B" D IX^DIC
"RTN","XQ1",63,0)
 S DA=+Y,Y=XQY
"RTN","XQ1",64,0)
 Q
"RTN","XQ1",65,0)
 ;
"RTN","XQ1",66,0)
D1 S:DIC["(" DIC=U_DIC Q
"RTN","XQ1",67,0)
 ;
"RTN","XQ1",68,0)
SET F XQI=1:1 S XQV=$P(XQZ,",",XQI) Q:XQV=""  K @XQV I $D(^DIC(19,+XQY,XQW+XQI)),^(XQW+XQI)]"" S @XQV=^(XQW+XQI)
"RTN","XQ1",69,0)
 I $D(DIC("A")),DIC("A")]"" S DIC("A")=DIC("A")_" "
"RTN","XQ1",70,0)
 K XQI,J
"RTN","XQ1",71,0)
 Q
"RTN","XQ1",72,0)
 ;
"RTN","XQ1",73,0)
R ;RUN ROUTINE type option entry point
"RTN","XQ1",74,0)
 G:'$D(^DIC(19,XQY,25)) OUT:$D(ZTQUEUED),M1^XQ S XQZ=^(25) G:'$L(XQZ) M1^XQ S:XQZ'[U XQZ=U_XQZ I XQZ["[" D DO^%XUCI G OUT
"RTN","XQ1",75,0)
 D @XQZ G OUT
"RTN","XQ1",76,0)
 ;
"RTN","XQ1",77,0)
W ;Window type option entry point
"RTN","XQ1",78,0)
 S XQOK=1
"RTN","XQ1",79,0)
 I $D(^DIC(19,XQY,25)),$L(^(25)) D  G OUT ;Routine type
"RTN","XQ1",80,0)
 .S XQZ=^DIC(19,XQY,25)
"RTN","XQ1",81,0)
 .S:XQZ'[U XQZ=U_XQZ
"RTN","XQ1",82,0)
 .I XQZ["[" D DO^%XUCI Q
"RTN","XQ1",83,0)
 .D @XQZ
"RTN","XQ1",84,0)
 .Q
"RTN","XQ1",85,0)
 ;
"RTN","XQ1",86,0)
 I $D(^DIC(19,XQY,24)),$L(^(24)) D  G:XQOK OUT ;Pointer type
"RTN","XQ1",87,0)
 .S XQZ=^DIC(19,XQY,24)
"RTN","XQ1",88,0)
 .S XQZ=$P($G(^XTV(8995,XQZ,0)),U) I XQZ="" S XQOK=0 Q
"RTN","XQ1",89,0)
 .D PREP^XG
"RTN","XQ1",90,0)
 .S XQWIN=$$NEXTNM^XGCLOAD("XQWIN")
"RTN","XQ1",91,0)
 .;D GET^XGCLOAD(XQZ,XQWIN,"^TMP($J)")
"RTN","XQ1",92,0)
 .D GET^XGCLOAD(XQZ,$NA(^TMP($J,XQWIN)))
"RTN","XQ1",93,0)
 .D M^XG(XQWIN,$NA(^TMP($J,XQWIN)))
"RTN","XQ1",94,0)
 .D ESTA^XG() ;Send it off to window land
"RTN","XQ1",95,0)
 .; 
"RTN","XQ1",96,0)
 .D K^XG(XQWIN) ;Return here after the ESTOP
"RTN","XQ1",97,0)
 .;I $D(^%ZOSF("OS")),^%ZOSF("OS")["MSM" ZSTOP
"RTN","XQ1",98,0)
 .Q
"RTN","XQ1",99,0)
 ;
"RTN","XQ1",100,0)
 G M1^XQ ;Window failed
"RTN","XQ1",101,0)
 ;
"RTN","XQ1",102,0)
Z ;Window suite option       
"RTN","XQ1",103,0)
 G EN^XQSUITE
"RTN","XQ1",104,0)
 ;
"RTN","XQ1",105,0)
S ;Server-type option pseudo entry-point
"RTN","XQ1",106,0)
 G OUT
"RTN","XQ1",107,0)
 ;
"RTN","XQ1",108,0)
L ;OE/RR Limited option
"RTN","XQ1",109,0)
O ;OE/RR Protocol (orderables) type option entry point
"RTN","XQ1",110,0)
X ;OE/RR Extended Action type option (Subset of Protocol type)
"RTN","XQ1",111,0)
Q ;OE/RR Protocol Menu type option entry point
"RTN","XQ1",112,0)
 S XQOR=+XQY,XQOR(1)=XQT D XQ^XQOR K XQOR G OUT
"RTN","XQ1",113,0)
 ;
"RTN","XQ1",114,0)
ZTSK ;Task Manager entry point
"RTN","XQ1",115,0)
 G:$G(XQSCH)'>0 ZTSK2 S U="^",XQ=$G(^DIC(19.2,XQSCH,0)),XQY=+XQ Q:XQY'>0
"RTN","XQ1",116,0)
 S X1=$P(XQ,U,2),X2=$P(XQ,U,6)
"RTN","XQ1",117,0)
REQ S DA=XQSCH,DIE="^DIC(19.2,",DR=$S(X2="":".01///@",1:"2////"_$$SCH^XLFDT(X2,+X1,1))
"RTN","XQ1",118,0)
 L +^%ZTSK(ZTSK,0) D ^DIE L -^%ZTSK(ZTSK,0)
"RTN","XQ1",119,0)
 K DA,DIE,DR,X1,X2,XQ,ZTQPARAM
"RTN","XQ1",120,0)
 I $D(^DIC(19.2,XQSCH,3)),$L(^(3)) S ZTQPARAM=^(3)
"RTN","XQ1",121,0)
 I $D(^DIC(19.2,XQSCH,2)) D  ;Build other symbols
"RTN","XQ1",122,0)
 . S X2=XQSCH N XQSCH,XQY
"RTN","XQ1",123,0)
 . F X1=0:0 S X1=$O(^DIC(19.2,X2,2,X1)) Q:X1'>0  S X=^(X1,0),@($P(X,U)_"="_$P(X,U,2))
"RTN","XQ1",124,0)
 . Q
"RTN","XQ1",125,0)
ZTSK2 S ZTREQ="@" Q:'$D(XQY)  D UI^XQ12
"RTN","XQ1",126,0)
 Q:'$D(^DIC(19,XQY,0))  S XQY0=^(0),XQT=$P(XQY0,U,4) Q:XQT'="A"&(XQT'="P")&(XQT'="R")
"RTN","XQ1",127,0)
 S X=$P(XQY0,U,8) I X>0,X<11 X ^%ZOSF("PRIORITY")
"RTN","XQ1",128,0)
 I $P(XQY0,U,3)]""!($D(XQUIT)) S XQT="KILL"
"RTN","XQ1",129,0)
 ;
"RTN","XQ1",130,0)
RUN S:XQT="P"&$L(IO) XQIOP=ION_";"_IOST_";"_IOM_";"_IOSL G @XQT
"RTN","XQ1",131,0)
 Q
"RTN","XQALDOIT")
0^7^B15993668
"RTN","XQALDOIT",1,0)
XQALDOIT ;ISC-SF.SEA/JLI - ALERT HANDLER ;7/19/95  09:44
"RTN","XQALDOIT",2,0)
 ;;8.0;KERNEL;**1**;Jul 05, 1995
"RTN","XQALDOIT",3,0)
 ;
"RTN","XQALDOIT",4,0)
EN ;
"RTN","XQALDOIT",5,0)
 S XQAEXIT="DOIT^XQALERT1"
"RTN","XQALDOIT",6,0)
 S XQX=^XUTL("XQ",$J,"XQA1",+XQX1),XQI=^(+XQX1,1),XQZ=^(2)
"RTN","XQALDOIT",7,0)
EN1 ;
"RTN","XQALDOIT",8,0)
 S XQADATA=$S(XQZ'="":XQZ,1:$P(XQX,U,9,99)),XQAID=$P(XQX,U,2),XQA1=$P(XQAID,";"),XQX2=+XQX1,XQX1=$P(XQX1,",",2,200) I XQX1'>0 S XQK=$O(XQX1(0)) I XQK>0 S XQX1=XQX1(XQK) K XQX1(XQK)
"RTN","XQALDOIT",9,0)
 S XQAROU=""
"RTN","XQALDOIT",10,0)
 S XQAKILL=1 I XQX2,$P(XQX,U,8)'="" S XQAROU=$P(XQX,U,7,8) K:XQA1="" ^XTV(8992,DUZ,"XQA",XQI)
"RTN","XQALDOIT",11,0)
 I XQAID'="" D
"RTN","XQALDOIT",12,0)
 . S XQXX=$O(^XTV(8992.1,"B",XQAID,0)),XQXY=0 I XQXX>0 S XQXY=$O(^XTV(8992.1,XQXX,20,"B",DUZ,0)) I XQXY>0,$P(^XTV(8992.1,XQXX,20,XQXY,0),U,3)="" S $P(^XTV(8992.1,XQXX,20,XQXY,0),U,3)=$$NOW^XLFDT()
"RTN","XQALDOIT",13,0)
 . I $P(XQAID,";")="NO-ID" D
"RTN","XQALDOIT",14,0)
 . . I XQXY>0 S $P(^XTV(8992.1,XQXX,20,XQXY,0),U,4)=$$NOW^XLFDT(),$P(^(0),U,5)=$$NOW^XLFDT()
"RTN","XQALDOIT",15,0)
 . . K ^XTV(8992,XQAUSER,"XQA",XQI),^XTV(8992,"AXQA",XQAID,XQAUSER,XQI),^XTV(8992,"AXQAN",$P(XQAID,";"),XQAUSER,XQI),^XTV(8992,XQAUSER,"XQA","B",$P(XQX,U),XQI),XQAID,XQAKILL
"RTN","XQALDOIT",16,0)
 . K XQXX,XQXY
"RTN","XQALDOIT",17,0)
 I XQAROU'="",XQAROU'="^ " D @XQAROU G @XQAEXIT
"RTN","XQALDOIT",18,0)
 I XQAROU'="" W !!,"Processed Alert Number ",XQX2,!?4,$P(XQX,U,3),! G @XQAEXIT
"RTN","XQALDOIT",19,0)
 I XQX2 S XQMM("J")=$P(XQX,U,7)_";"_$P(^DIC(19,XQY,0),U),XQRB=0 K:XQA1="" ^XTV(8992,DUZ,"XQA",XQI)
"RTN","XQALDOIT",20,0)
 K XQI,XQX,XQJ,XQK,XQXOUT,XQ1,XQII,XQA1,XQAREV,XQACNT,XQAROU,XQX2,%ZIS
"RTN","XQALDOIT",21,0)
 K:$O(^XTV(8992,DUZ,"XQA",0))'>0 ^(0)
"RTN","XQALDOIT",22,0)
 Q
"RTN","XQALDOIT",23,0)
 ;
"RTN","XQALDOIT",24,0)
ACTION(ALERTID) ;
"RTN","XQALDOIT",25,0)
 N XQAUSER
"RTN","XQALDOIT",26,0)
 S XQI=$O(^XTV(8992,"AXQA",ALERTID,DUZ,0))
"RTN","XQALDOIT",27,0)
 Q:XQI'>0
"RTN","XQALDOIT",28,0)
 S XQX=$G(^XTV(8992,DUZ,"XQA",XQI,0)) Q:XQX=""  S XQAUSER=DUZ
"RTN","XQALDOIT",29,0)
 S XQZ=$G(^XTV(8992,DUZ,"XQA",XQI,1))
"RTN","XQALDOIT",30,0)
 I $D(XQAGETAC) Q  ; just get data to return
"RTN","XQALDOIT",31,0)
 S XQAEXIT="ENDACT",XQX1=XQI
"RTN","XQALDOIT",32,0)
 I $P(XQX,U,8)'="" G EN1
"RTN","XQALDOIT",33,0)
 D EN1
"RTN","XQALDOIT",34,0)
ENDACT ;
"RTN","XQALDOIT",35,0)
 I $D(XQMM("J")) S XQMM("J")=$P(XQMM("J"),";")_";",XQALEXIT=1 D  D ^XQ74 K XQALEXIT,XQALMENU
"RTN","XQALDOIT",36,0)
 . K XQALMENU
"RTN","XQALDOIT",37,0)
 . N X S X=$P(XQMM("J"),";")
"RTN","XQALDOIT",38,0)
 . I X=+X S:$P(^DIC(19,X,0),U,4)="M" XQALMENU="" Q
"RTN","XQALDOIT",39,0)
 . S X=$O(^DIC(19,"B",X,0)) S:$P($G(^DIC(19,+X,0)),U,4)="M" XQALMENU=""
"RTN","XQALDOIT",40,0)
 I $D(XQX1),XQX1'>0 K XQX1
"RTN","XQALDOIT",41,0)
 I $D(XQAKILL) D DELETEA^XQALERT
"RTN","XQALDOIT",42,0)
 K XQAKILL,XQAROU,XQAID,XQADATA
"RTN","XQALDOIT",43,0)
 Q
"RTN","XQALDOIT",44,0)
DOOPT(OPTION) ;
"RTN","XQALDOIT",45,0)
 N XQX1,XQAKILL,XQAROU,XQADATA,XQAID,XQMM
"RTN","XQALDOIT",46,0)
 S XQMM("J")=OPTION
"RTN","XQALDOIT",47,0)
 D ENDACT
"RTN","XQALDOIT",48,0)
 Q
"RTN","XQALDOIT",49,0)
 ;
"RTN","XQALDOIT",50,0)
PRINT ;
"RTN","XQALDOIT",51,0)
 S XQIJ=$$NOW^XLFDT(),%ZIS="MQ" D ^%ZIS Q:POP  I $D(IO("Q")) K IO("Q") S ZTRTN="DQ^XQALDOIT",ZTIO=ION,ZTSAVE("XQIJ")="",ZTSAVE("^XUTL(""XQ"",$J,""XQA2"",")="" D ^%ZTLOAD K ZTSK,ZTRTN,ZTIO,ZTSAVE Q
"RTN","XQALDOIT",52,0)
DQ ;
"RTN","XQALDOIT",53,0)
 U IO W @IOF,!!?10,"PENDING ALERTS  "_$P(^XTV(8992,DUZ,0),U)_"   "_$E(XQIJ,4,5)_"/"_$E(XQIJ,6,7)_"/"_$E(XQIJ,2,3)_"  "_$E($P(XQIJ,".",2)_"00",1,2)_":"_$E($P(XQIJ,".",2)_"0000",3,4),!!
"RTN","XQALDOIT",54,0)
 F XQIJ=0:0 S XQIJ=$O(^XUTL("XQ",$J,"XQA2",XQIJ)) Q:XQIJ'>0  W !,^(XQIJ)
"RTN","XQALDOIT",55,0)
 D ^%ZISC K XQIJ W:'$D(ZTQUEUED) !!
"RTN","XQALDOIT",56,0)
 Q
"RTN","XQALDOIT",57,0)
MORP K ^XUTL("XQ",$J,"XQA2") S XQIK=0 F XQIJ=0:0 S XQIJ=$O(^XUTL("XQ",$J,"XQA",XQIJ)) Q:XQIJ'>0  S XQIK=XQIK+1,XQIX=^(XQIJ),^XUTL("XQ",$J,"XQA2",XQIK)=$J(XQIK,3)_". "_$P(XQIX,U,3)
"RTN","XQALDOIT",58,0)
 K XQIK,XQIX,XQIJ
"RTN","XQALDOIT",59,0)
 Q
"RTN","XQALDOIT",60,0)
MAIL ;
"RTN","XQALDOIT",61,0)
 S XMTEXT="^XUTL(""XQ"",$J,""XQA2"",",XMSUB="LIST OF PENDING ALERTS",XMY(DUZ)="",XMDUZ=.5 D ^XMD K XMTEXT,XMSUB,XMDUZ,XMY W !!,"Message will be delivered as NEW mail to YOU.",!!
"RTN","XQALDOIT",62,0)
 Q
"RTN","XQALERT")
0^9^B10379876
"RTN","XQALERT",1,0)
XQALERT ;ISC-SF.SEA/JLI - ALERT HANDLER ;11/8/94  15:39
"RTN","XQALERT",2,0)
 ;;8.0;KERNEL;**1**;Jul 05, 1995
"RTN","XQALERT",3,0)
 ;;
"RTN","XQALERT",4,0)
 Q
"RTN","XQALERT",5,0)
 ;
"RTN","XQALERT",6,0)
SETUP ;
"RTN","XQALERT",7,0)
 D SETUP^XQALSET
"RTN","XQALERT",8,0)
 Q
"RTN","XQALERT",9,0)
 ;
"RTN","XQALERT",10,0)
DISPLAY ;  Display any new alerts
"RTN","XQALERT",11,0)
 Q:$O(^XTV(8992,DUZ,"XQA",0))'>0
"RTN","XQALERT",12,0)
 N X S XQX=0,XQX1=0,Y=1,DIR(0)="E"
"RTN","XQALERT",13,0)
 F XQI=0:0 D:XQX1&'(XQX1#20) ^DIR Q:'Y  S XQI=$O(^XTV(8992,DUZ,"XQA",XQI)) Q:XQI'>0  K:'$D(^(XQI,0)) ^XTV(8992,DUZ,"XQA",XQI) I $D(^XTV(8992,DUZ,"XQA",XQI)) S XQX=XQX+1,X=^(XQI,0) I $P(X,U,4) D
"RTN","XQALERT",14,0)
 . N XQXXX,XQXX,XQXY
"RTN","XQALERT",15,0)
 . S XQXXX=X,(XQXX,XQXY)=0,XQXX=$P(X,U,2) I XQXX'="" S XQXX=$O(^XTV(8992.1,"B",$E(XQXX,1,30),0)) I XQXX>0 S XQXY=$O(^XTV(8992.1,XQXX,20,"B",DUZ,0)) I XQXY>0 S XQXDAT=$$NOW^XLFDT(),$P(^XTV(8992.1,XQXX,20,XQXY,0),U,2)=XQXDAT
"RTN","XQALERT",16,0)
 . S X=XQXXX W:XQX1=0 $C(7) W !,$P(X,U,3) S XQX1=XQX1+1,$P(^XTV(8992,DUZ,"XQA",XQI,0),U,4)="" I $D(^(2)) S X1=^(2) D
"RTN","XQALERT",17,0)
 . . S X2=$P(X1,U,3)
"RTN","XQALERT",18,0)
 . . W !?5,"*** FORWARDED BY: ",$P(^VA(200,+X1,0),U),"   Generated: " S X1=$P($P(X,U,2),";",3) W $$DAT8(X1,1)
"RTN","XQALERT",19,0)
 . . I X2'="" W !?5,X2
"RTN","XQALERT",20,0)
 . I $P(X,U,5)="D" S XQA=$P(X,U,2) K ^XTV(8992,DUZ,"XQA",XQI,0),^(1) D  S XQX=XQX-1 D:XQA'="" D
"RTN","XQALERT",21,0)
 . . I $G(XQXX)>0,$G(XQXY)>0 S $P(^XTV(8992.1,XQXX,20,XQXY,0),U,5)=XQXDAT
"RTN","XQALERT",22,0)
 . K XQXX,XQXY
"RTN","XQALERT",23,0)
 I XQX>0 W:XQX1=0 !!,"You have PENDING ALERTS" W !?10,"Enter  ""VA   VIEW ALERTS     to review alerts",!
"RTN","XQALERT",24,0)
 W:XQX1>0 ! I $O(^XTV(8992,DUZ,"XQA",0))'>0 K ^(0)
"RTN","XQALERT",25,0)
 K XQI,XQX,XQX1,DIR,XQA,Y
"RTN","XQALERT",26,0)
 Q
"RTN","XQALERT",27,0)
D K ^XTV(8992,"AXQA",XQA,DUZ),^XTV(8992,"AXQAN",$P(XQA,";"),DUZ)
"RTN","XQALERT",28,0)
 Q
"RTN","XQALERT",29,0)
 ;
"RTN","XQALERT",30,0)
 ;
"RTN","XQALERT",31,0)
DAT8(FMDAT,TFLG) ;
"RTN","XQALERT",32,0)
 N X
"RTN","XQALERT",33,0)
 S X=$E(FMDAT,4,5)_"/"_$E(FMDAT,6,7)_"/"_$E(FMDAT,2,3)
"RTN","XQALERT",34,0)
 I $G(TFLG)>0 S FMDAT=FMDAT_"0000000",X=X_" "_$E(FMDAT,9,10)_":"_$E(FMDAT,11,12)_":"_$E(FMDAT,13,14)
"RTN","XQALERT",35,0)
 Q X
"RTN","XQALERT",36,0)
DOIT S XQAUSER=DUZ K XQALFWD D DOIT^XQALERT1
"RTN","XQALERT",37,0)
 K XQAUSER
"RTN","XQALERT",38,0)
 Q
"RTN","XQALERT",39,0)
 ;
"RTN","XQALERT",40,0)
DELETE ;
"RTN","XQALERT",41,0)
 D DELETE^XQALDEL
"RTN","XQALERT",42,0)
 Q
"RTN","XQALERT",43,0)
 ;
"RTN","XQALERT",44,0)
DELETEA ;
"RTN","XQALERT",45,0)
 D DELETEA^XQALDEL
"RTN","XQALERT",46,0)
 Q
"RTN","XQALERT",47,0)
 ;
"RTN","XQALERT",48,0)
OLDDEL ;
"RTN","XQALERT",49,0)
 D OLDDEL^XQALDEL
"RTN","XQALERT",50,0)
 Q
"RTN","XQALERT",51,0)
 ;
"RTN","XQALERT",52,0)
USERDEL ;
"RTN","XQALERT",53,0)
 D USERDEL^XQALDEL
"RTN","XQALERT",54,0)
 Q
"RTN","XQALERT",55,0)
 ;
"RTN","XQALERT",56,0)
USER(ROOT,XQAUSER,FRSTDATE,LASTDATE) ; Returns current alerts for the user in an array located under root
"RTN","XQALERT",57,0)
 I '$D(XQAUSER) S XQAUSER=DUZ
"RTN","XQALERT",58,0)
 D GETUSER^XQALDATA(ROOT,XQAUSER,$G(FRSTDATE),$G(LASTDATE))
"RTN","XQALERT",59,0)
 Q
"RTN","XQALERT",60,0)
 ;
"RTN","XQALERT",61,0)
PATIENT(ROOT,PATIENT,FRSTDATE,LASTDATE) ;
"RTN","XQALERT",62,0)
 I $G(PATIENT)'>0 Q
"RTN","XQALERT",63,0)
 D GETPAT^XQALDATA(ROOT,PATIENT,$G(FRSTDATE),$G(LASTDATE))
"RTN","XQALERT",64,0)
 Q
"RTN","XQALERT",65,0)
ACTION(ALERTID) ;
"RTN","XQALERT",66,0)
 D ACTION^XQALDOIT(ALERTID)
"RTN","XQALERT",67,0)
 Q
"RTN","XQALERT",68,0)
GETACT(ALERTID) ; Return to calling routine the information needed to act on
"RTN","XQALERT",69,0)
 ; the specified alert.
"RTN","XQALERT",70,0)
 ; On return the following variables are defined:
"RTN","XQALERT",71,0)
 ;  XQAID = the full alert id
"RTN","XQALERT",72,0)
 ;  XQADATA = Any data passed as XQADATA at the time the alert was generated
"RTN","XQALERT",73,0)
 ;  XQAROU  = Indicates routine to be run (includes tag if necessary)
"RTN","XQALERT",74,0)
 ;    This value may have three meanings
"RTN","XQALERT",75,0)
 ;      1.  A null value indicates no routine to be used (XQAOPT contains
"RTN","XQALERT",76,0)
 ;          option name to be run)
"RTN","XQALERT",77,0)
 ;      2.  A value of ^<space>  indicates that the alert is information
"RTN","XQALERT",78,0)
 ;          only (no routine or option action involved).
"RTN","XQALERT",79,0)
 ;      3.  The name of the routine as ^ROUTINE  or TAG^ROUTINE
"RTN","XQALERT",80,0)
 ;  XQAOPT  = Indicates the name of the option to be run if not null.
"RTN","XQALERT",81,0)
 ;
"RTN","XQALERT",82,0)
 N XQX,XQZ,XQAGETAC
"RTN","XQALERT",83,0)
 S XQAGETAC=1
"RTN","XQALERT",84,0)
 D ACTION^XQALDOIT(ALERTID)
"RTN","XQALERT",85,0)
 S XQAID=$P(XQX,U,2)
"RTN","XQALERT",86,0)
 S XQADATA=$S(XQZ'="":XQZ,1:$P(XQX,U,9,99))
"RTN","XQALERT",87,0)
 S XQAROU=$S($P(XQX,U,8)="":"",1:$P(XQX,U,7,8))
"RTN","XQALERT",88,0)
 S XQAOPT=$S($P(XQX,U,8)="":$P(XQX,U,7),1:"")
"RTN","XQALERT",89,0)
 Q
"RTN","XQALERT",90,0)
 Q
"RTN","XQALSET")
0^1^B21928397
"RTN","XQALSET",1,0)
XQALSET ;ISC-SF.SEA/JLI - SETUP ALERTS ;06/23/95  09:42
"RTN","XQALSET",2,0)
 ;;8.0;KERNEL;**1**;Jul 05, 1995
"RTN","XQALSET",3,0)
 ;;
"RTN","XQALSET",4,0)
 Q
"RTN","XQALSET",5,0)
 ;
"RTN","XQALSET",6,0)
SETUP Q:$O(XQA(0))=""  Q:'($D(XQAMSG)#2)  Q:XQAMSG=""  N X,XQI,XQJ,XQX,XQK,XQACOMNT,XQARESET
"RTN","XQALSET",7,0)
 S XQAOPT1=$S('($D(XQAROU)#2):U,XQAROU'[U:U_XQAROU,1:XQAROU),XQAOPT1=$S(XQAOPT1'=U:XQAOPT1,$D(XQAOPT)#2:XQAOPT_U,1:XQAOPT1) S:XQAOPT1=U XQAOPT1=U_" "
"RTN","XQALSET",8,0)
NOW S XQX=$$NOW^XLFDT()
"RTN","XQALSET",9,0)
 S:$S('$D(XQAID):1,XQAID="":1,1:0) XQAID="NO-ID"
"RTN","XQALSET",10,0)
 S:XQAID[";" XQAID=$P(XQAID,";") S XQA1=XQAID I XQA1'="" F XQI=0:1 S XQAID=XQA1_";"_DUZ_";"_(XQI*.00000001+XQX) L +^XTV(8992,"AXQA",XQAID) D  L -^XTV(8992,"AXQA",XQAID) Q:XQI=""  S XQAID=XQAID+.00000001
"RTN","XQALSET",11,0)
 . I $D(^XTV(8992,"AXQA",XQAID)) Q
"RTN","XQALSET",12,0)
 . S ^XTV(8992,"AXQA",XQAID,0,0)="",XQI=""
"RTN","XQALSET",13,0)
 I XQAID'="" D
"RTN","XQALSET",14,0)
 . N FDA,IENS,XQA2,DIERR
"RTN","XQALSET",15,0)
 . S XQA2=XQA1 I XQA2[",",$P(XQA2,",",3)'="" S XQA2=$P(XQA2,",")_","_$P(XQA2,",",3)
"RTN","XQALSET",16,0)
 . F  D  Q:'$D(DIERR)  Q:'$D(^TMP("DIERR",$J,"E",111))
"RTN","XQALSET",17,0)
 . . K DIERR,^TMP("DIERR",$J)
"RTN","XQALSET",18,0)
 . . S FDA=$NA(^TMP($J,"XQALSET")) K @FDA
"RTN","XQALSET",19,0)
 . . S @FDA@(8992.1,"+1,",.01)=XQAID D UPDATE^DIE("",FDA,"IENS")
"RTN","XQALSET",20,0)
 . . K @FDA
"RTN","XQALSET",21,0)
 . I $D(DIERR) S XQDIERR1=DIERR M XQDIERR=^TMP("DIERR",$J) Q
"RTN","XQALSET",22,0)
 . Q:IENS(1)'>0  S (DA,XQADA)=IENS(1)
"RTN","XQALSET",23,0)
 . S IENS=IENS(1)_",",@FDA@(8992.1,IENS,.02)=XQX,^(.03)=XQA2,^(.05)=DUZ,^(1.01)=XQAMSG
"RTN","XQALSET",24,0)
 . I $D(XQAARCH) S X=$$FMADD^XLFDT(DT,XQAARCH) I X>DT S @FDA@(8992.1,IENS,.08)=X
"RTN","XQALSET",25,0)
 . I $P(XQA1,",",2)>0 S @FDA@(8992.1,IENS,.04)=$P(XQA1,",",2)
"RTN","XQALSET",26,0)
 . I $D(ZTQUEUED) S @FDA@(8992.1,IENS,.06)=1
"RTN","XQALSET",27,0)
 . I $D(XQAOPT)#2 S @FDA@(8992.1,IENS,1.02)=XQAOPT
"RTN","XQALSET",28,0)
 . I $D(XQAROU)#2 S XQAXX=$S(XQAROU[U:XQAROU,1:U_XQAROU) I $P(XQAXX,U,2)'="" S:$P(XQAXX,U)'="" @FDA@(8992.1,IENS,1.03)=$P(XQAXX,U) S @FDA@(8992.1,IENS,1.04)=$P(XQAXX,U,2)
"RTN","XQALSET",29,0)
 . I $D(XQACTMSG) S @FDA@(8992.1,IENS,1.05)=XQACTMSG
"RTN","XQALSET",30,0)
 . I $D(XQADATA) S @FDA@(8992.1,IENS,2)=XQADATA
"RTN","XQALSET",31,0)
 . D FILE^DIE("KS",FDA)
"RTN","XQALSET",32,0)
REENT S XQALIN1=$S($D(XQAID)#2:XQAID,1:"")_U_$E(XQAMSG,1,80)_"^1^"_$S(XQAOPT1=U:"D",1:"R")_U_$S($D(XQACTMSG):$E(XQACTMSG,1,40),1:"")_U_XQAOPT1 S:$D(XQASURO) $P(XQALIN1,U,12)=XQASURO S:$D(XQASUPV) $P(XQALIN1,U,13)=XQASUPV
"RTN","XQALSET",33,0)
 S XQALIN=XQX_U_XQALIN1,XQJ=0
"RTN","XQALSET",34,0)
 K XQALIN1 S:$D(XQADATA) XQALIN1=XQADATA
"RTN","XQALSET",35,0)
LOOP1 S XQJ=$O(XQA(" ")) I XQJ'="" K:"G.g."'[$E(XQJ_",,",1,2) XQA(XQJ) D:$D(XQA(XQJ)) GROUP G LOOP1
"RTN","XQALSET",36,0)
 S XQJ=0
"RTN","XQALSET",37,0)
LOOP S XQJ=$O(XQA(XQJ)) G:XQJ="" WRAP
"RTN","XQALSET",38,0)
 I $G(XQADA)>0 D
"RTN","XQALSET",39,0)
 . S XQATOP=$S($D(^XTV(8992.1,XQADA,20,0)):$P(^(0),U,4),1:0)+1 S ^(0)="^8992.11^"_XQJ_U_XQATOP
"RTN","XQALSET",40,0)
 . S ^XTV(8992.1,XQADA,20,XQATOP,0)=XQJ,^XTV(8992.1,"R",XQJ,XQADA,XQATOP)="",^XTV(8992.1,XQADA,20,"B",XQJ,XQATOP)="" I $D(XQARESET) S $P(^XTV(8992.1,XQADA,20,XQATOP,0),U,7,8)=XQAUSER_U_XQX
"RTN","XQALSET",41,0)
 I '$D(^XTV(8992,XQJ,0)) D
"RTN","XQALSET",42,0)
 . N FDA,IENS
"RTN","XQALSET",43,0)
 . F  D  Q:'$D(DIERR)  Q:'$D(^TMP("DIERR",$J,"E",110))&'$D(^TMP("DIERR",$J,"E",111))
"RTN","XQALSET",44,0)
 . . K DIERR,^TMP("DIERR",$J)
"RTN","XQALSET",45,0)
 . . S FDA=$NA(^TMP($J,"XQALSET")) K @FDA S @FDA@(8992,"+1,",.01)=XQJ
"RTN","XQALSET",46,0)
 . . S IENS(1)=XQJ
"RTN","XQALSET",47,0)
 . . D UPDATE^DIE("S",FDA,"IENS")
"RTN","XQALSET",48,0)
 S XQXI=XQX S:'$D(^XTV(8992,XQJ,"XQA",0)) ^(0)="^8992.01DA^"
"RTN","XQALSET",49,0)
REP I $D(^XTV(8992,XQJ,"XQA",XQXI,0)) S XQXI=XQXI+.00000001 G REP
"RTN","XQALSET",50,0)
 S ^XTV(8992,XQJ,"XQA",XQXI,0)=XQALIN S:$D(XQALIN1) ^(1)=XQALIN1 S:$D(XQARESET) ^(2)=XQAUSER_U_XQX_U_$G(XQACOMNT) S ^(0)=$P(^XTV(8992,XQJ,"XQA",0),U,1,2)_U_XQXI_U_($P(^(0),U,4)+1)
"RTN","XQALSET",51,0)
 K XQA(XQJ) S:XQAID'="" ^XTV(8992,"AXQA",XQAID,XQJ,XQXI)="",^XTV(8992,"AXQAN",XQA1,XQJ,XQXI)=""
"RTN","XQALSET",52,0)
 G LOOP
"RTN","XQALSET",53,0)
WRAP K:XQAID'="" ^XTV(8992,"AXQA",XQAID,0,0) K XQA,XQALIN,XQALIN1,XQAMSG,XQAID,XQAFLG,XQAOPT,XQAOPT1,XQAROU,XQADATA,XQI,XQX,XQJ,XQK,XQA1,XQACTMSG,XQJ,XQXI,XQAARCH
"RTN","XQALSET",54,0)
 Q
"RTN","XQALSET",55,0)
 ;
"RTN","XQALSET",56,0)
GROUP S XQL="" F XQI=3:1:$L(XQJ) S XQL1=$E(XQJ,XQI) S:XQL1?1L XQL1=$C($A(XQL1)-32) S XQL=XQL_XQL1
"RTN","XQALSET",57,0)
 S XQI=$O(^XMB(3.8,"B",XQL,0)) I XQI'>0 S XQL1=$O(^XMB(3.8,"B",XQL)) I $E(XQL1,1,$L(XQL))=XQL S XQL2=$O(^(XQL1)) I $E(XQL2,1,$L(XQL))'=XQL S XQI=$O(^(XQL1,0))
"RTN","XQALSET",58,0)
 I XQI>0 F XQL=0:0 S XQL=$O(^XMB(3.8,XQI,1,XQL)) Q:XQL'>0  S XQA(+^(XQL,0))=""
"RTN","XQALSET",59,0)
 K XQA(XQJ),XQI,XQL,XQL1,XQL2
"RTN","XQALSET",60,0)
 Q
"RTN","XQALSET",61,0)
 ;
"RTN","XQALSET",62,0)
RESETUP(XQAIDVAL,XQA,XQACOMNT) ;
"RTN","XQALSET",63,0)
 N XQAIEN
"RTN","XQALSET",64,0)
 S:'$D(XQAUSER) XQAUSER=DUZ
"RTN","XQALSET",65,0)
 S XQARESET=1
"RTN","XQALSET",66,0)
 S XQAIEN=$O(^XTV(8992,"AXQA",XQAIDVAL,XQAUSER,0))
"RTN","XQALSET",67,0)
 S X=$G(^XTV(8992,XQAUSER,"XQA",XQAIEN,0)),X1=$G(^(1))
"RTN","XQALSET",68,0)
 Q:X=""
"RTN","XQALSET",69,0)
 S XQAID=$P(X,U,2),XQA1=$P(XQAID,";"),XQADA=$O(^XTV(8992.1,"B",XQAID,0))
"RTN","XQALSET",70,0)
 S XQAOPT1=$P(X,U,7,8),XQAMSG=$P(X,U,3),XQACTMSG=$P(X,U,6)
"RTN","XQALSET",71,0)
 S XQADATA=$S(X1'="":X1,1:$P(X,U,9,100))
"RTN","XQALSET",72,0)
 S XQX=$$NOW^XLFDT()
"RTN","XQALSET",73,0)
 D REENT
"RTN","XQALSET",74,0)
 Q
"RTN","XUFILE")
0^2^B12785269
"RTN","XUFILE",1,0)
XUFILE ;SF/XAK-ASSIGN, DEL FILE ACCESS; ;7/21/95  08:38
"RTN","XUFILE",2,0)
 ;;8.0;KERNEL;**1**;Jul 05, 1995
"RTN","XUFILE",3,0)
 D KIL
"RTN","XUFILE",4,0)
EN I DUZ(0)'="@",'$D(^VA(200,DUZ,"FOF")) G OUT
"RTN","XUFILE",5,0)
 D GETU G:X[U!'$D(XUSR) KIL S XUA=2 S:'$D(XUW) XUW="Add "
"RTN","XUFILE",6,0)
RD K DIR S DIR(0)="LCOA^2::5",DIR("??")="^D H1^XUFILE"
"RTN","XUFILE",7,0)
 S DIR("?",2)=$P($T(H0),";;",2),DIR("?")=" ",DIR("?",1)=$P($T(H),";;",2)
"RTN","XUFILE",8,0)
 S %=$P("^DICTIONARY^DELETE^LAYGO^READ^WRITE^AUDIT",U,XUA)
"RTN","XUFILE",9,0)
 S DIR("A")=$E("      ",1,(10-$L(%)))_XUW_%_" ACCESS to files: "
"RTN","XUFILE",10,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G KIL
"RTN","XUFILE",11,0)
X S XUA(XUA)=Y,XUA=XUA+1 G RD:XUA<8 D QUE G KIL:%<2,GO
"RTN","XUFILE",12,0)
QUE S %=1 W !,"Would you like to Queue this Job " D YN^DICN Q:%<0  G QHP:'%
"RTN","XUFILE",13,0)
 I %=1 S ZTRTN="GO^XUFILE",ZTSAVE("XUW")="",ZTSAVE("XUA(")="",ZTSAVE("XUSR(")="",ZTDESC=XUW_"Access to Files",ZTIO="" D ^%ZTLOAD S %=1
"RTN","XUFILE",14,0)
 Q
"RTN","XUFILE",15,0)
GO ;
"RTN","XUFILE",16,0)
 K ^TMP($J) G DQ:XUW["Copy" S XUW=$S(XUW["Del":"",1:1)
"RTN","XUFILE",17,0)
 F I=2:1:7 S XUA=XUA(I) F %=1:1 S J=$P(XUA,",",%) Q:J=""  S K=$P(J,"-",2),J=$S(J<.19:.2,1:J) S:K="" K=J D L:DUZ(0)'="@",LAT:DUZ(0)="@"
"RTN","XUFILE",18,0)
 F I=0:0 S I=$O(XUSR(I)) Q:I'>0  S:'$D(^VA(200,I,"FOF",0)) ^(0)="^200.032P^^" D S S DA(1)=I,DIK="^VA(200,"_I_",""FOF""," D IXALL^DIK
"RTN","XUFILE",19,0)
 I $D(ZTSK) S ZTREQ="@"
"RTN","XUFILE",20,0)
KIL K P,X,Y,XUA,DIC,DA,DIK,XUSR,XUW,^TMP($J),DIR,DIRUT,DTOUT,DUOUT
"RTN","XUFILE",21,0)
 K %,%T,%X,%Y,I,J,K,%DT,B,DCC,DIPT,DISYS,F,FLDS,L,W,X1,ZISI
"RTN","XUFILE",22,0)
 K %H,DIJ,DP,ZTSK,%ZISI Q
"RTN","XUFILE",23,0)
L F J=J-.000001:0 S J=$O(^VA(200,DUZ,"FOF",J)) Q:J'>0!(J>K)  I $D(^(J,0))#2,$P(^(0),U,I),$D(^DIC(J,0)) S ^TMP($J,J,1)=J,^(I)=XUW
"RTN","XUFILE",24,0)
 Q
"RTN","XUFILE",25,0)
LAT F J=J-.000001:0 S J=$O(^DIC(J)) Q:J'>0!(J>K)  I $D(^DIC(J,0)) S ^TMP($J,J,1)=J,^(I)=XUW
"RTN","XUFILE",26,0)
 Q
"RTN","XUFILE",27,0)
S F J=0:0 S J=$O(^TMP($J,J)) Q:J'>0  S X=$S($D(^VA(200,I,"FOF",J,0)):^(0),1:J) F K=1:0 S K=$O(^TMP($J,J,K)) S:K>0 $P(X,U,K)=^(K) I K'>0 D SD Q
"RTN","XUFILE",28,0)
 Q
"RTN","XUFILE",29,0)
SD I $P(X,U,2,7)'?1.6"^" S ^VA(200,I,"FOF",J,0)=X Q
"RTN","XUFILE",30,0)
 S DA(1)=I,DA=J,DIK="^VA(200,"_I_",""FOF""," D ^DIK
"RTN","XUFILE",31,0)
 Q
"RTN","XUFILE",32,0)
GETU ;
"RTN","XUFILE",33,0)
 S DIC="^VA(200,",DIC(0)="AEMQ",DIC("S")="I $S($P(^(0),U,11):$P(^(0),U,11)>DT,1:1),$P(^(0),U,3)]"""""
"RTN","XUFILE",34,0)
 F I=0:0 D ^DIC Q:Y'>0  S XUSR(+Y)="",DIC("A")="Select ANOTHER USER: "
"RTN","XUFILE",35,0)
 K DIC Q
"RTN","XUFILE",36,0)
 ;
"RTN","XUFILE",37,0)
OUT W !?5,"You do not have the correct access to run this option."
"RTN","XUFILE",38,0)
 W !?5,"Please contact your site manager for help." Q
"RTN","XUFILE",39,0)
 ;
"RTN","XUFILE",40,0)
H ;;Answer with a File Number, a List, or a Range of Files.
"RTN","XUFILE",41,0)
H0 ;;For example:  2 or 50-59 or 33,42-61,88,220-240.
"RTN","XUFILE",42,0)
 ;
"RTN","XUFILE",43,0)
H1 I DUZ(0)'="@" S DIC="^VA(200,DUZ,""FOF"",",DIC(0)="NEQ",DIC("S")="I $P(^(0),U,XUA)"
"RTN","XUFILE",44,0)
 E  S DIC="^DIC(",DIC(0)="EQ",DIC("S")="I Y>.19"_$S(XUA=6:",Y-1,Y-1.1",XUA=5:"",1:",Y>1.1")
"RTN","XUFILE",45,0)
 S D="B",DZ=X D DQ^DICQ K DIC,DO,DIX,DIY,DZ
"RTN","XUFILE",46,0)
 Q
"RTN","XUFILE",47,0)
QHP W !!?5,"This could take some time to run depending on the number of"
"RTN","XUFILE",48,0)
 W !?5,"files and users selected.  It is definitely best to QUEUE the job." G QUE
"RTN","XUFILE",49,0)
 ;
"RTN","XUFILE",50,0)
XUDEL D KIL S XUW="Delete " G EN
"RTN","XUFILE",51,0)
COPY ;
"RTN","XUFILE",52,0)
 S DIC("A")="Select USER whose Access you want to copy: "
"RTN","XUFILE",53,0)
 S DIC("S")="I $O(^VA(200,Y,""FOF"",0))>0"
"RTN","XUFILE",54,0)
 S DIC=200,DIC(0)="QEAM" D ^DIC G KIL:Y<0 S XUSR(0)=+Y K DIC
"RTN","XUFILE",55,0)
 S DIC("A")="Select USER to receive Access: "
"RTN","XUFILE",56,0)
 D GETU G KIL:$O(XUSR(0))'>0!(X[U) S XUW="Copy " D QUE G KIL:%<2
"RTN","XUFILE",57,0)
DQ S %X="^VA(200,"_XUSR(0)_",""FOF"","
"RTN","XUFILE",58,0)
 F I=0:0 S I=$O(XUSR(I)) Q:I'>0  S %Y="^VA(200,"_I_",""FOF""," D %XY^%RCR S DA(1)=I,DIK=%Y D IXALL^DIK
"RTN","XUFILE",59,0)
 G KIL
"RTN","XUTMTDL")
0^10^B10539554
"RTN","XUTMTDL",1,0)
XUTMTDL ;SEA/RDS - TaskMan: ToolKit, Delete List ;7/21/95  08:38
"RTN","XUTMTDL",2,0)
 ;;8.0;KERNEL;**1**;Jul 05, 1995
"RTN","XUTMTDL",3,0)
 ;
"RTN","XUTMTDL",4,0)
SCHED ;Lookup Tasks In Schedule File
"RTN","XUTMTDL",5,0)
 N ZT,ZT1,ZT2,ZT3,ZT4,ZT5,ZT6,ZTF,ZTS S ZTSK=0 K ^TMP($J,"XUTMTDL")
"RTN","XUTMTDL",6,0)
 S ZT1="" F ZT=0:0 S ZT1=$O(^%ZTSCH(ZT1)),ZT2="" Q:'ZT1  F ZT=0:0 S ZT2=$O(^%ZTSCH(ZT1,ZT2)) Q:ZT2=""  S ZTS=ZT2 D SCREEN I ZTF D DQSCHED,DELETE
"RTN","XUTMTDL",7,0)
 S ZT1="" F ZT=0:0 S ZT1=$O(^%ZTSCH("IO",ZT1)),ZT2="" Q:ZT1=""  F ZT=0:0 S ZT2=$O(^%ZTSCH("IO",ZT1,ZT2)),ZT3="" Q:ZT2=""  F ZT=0:0 S ZT3=$O(^%ZTSCH("IO",ZT1,ZT2,ZT3)) Q:ZT3=""  S ZTS=ZT3 D SCREEN I ZTF D DQIO,DELETE
"RTN","XUTMTDL",8,0)
 S ZT1="" F ZT=0:0 S ZT1=$O(^%ZTSCH("JOB",ZT1)),ZT2="" Q:ZT1=""  F ZT=0:0 S ZT2=$O(^%ZTSCH("JOB",ZT1,ZT2)) Q:ZT2=""  S ZTS=ZT2 D SCREEN I ZTF D DQJOB,DELETE
"RTN","XUTMTDL",9,0)
 S ZT1="" F ZT=0:0 S ZT1=$O(^%ZTSCH("LINK",ZT1)),ZT2="" Q:ZT1=""  F ZT=0:0 S ZT2=$O(^%ZTSCH("LINK",ZT1,ZT2)),ZT3="" Q:ZT2=""  F ZT=0:0 S ZT3=$O(^%ZTSCH("LINK",ZT1,ZT2,ZT3)) Q:ZT3=""  S ZTS=ZT3 D SCREEN I ZTF D DQLINK,DELETE
"RTN","XUTMTDL",10,0)
 ;
"RTN","XUTMTDL",11,0)
TASK ;delete unscheduled tasks in Task file
"RTN","XUTMTDL",12,0)
 S ZT1="" F ZT=0:0 S ZT1=$O(^TMP($J,"XUTMT",ZT1)) Q:ZT1=""  D RANGE:$D(^(ZT1))=10 I $D(^TMP($J,"XUTMT",ZT1))=1,$D(^%ZTSK(ZT1)) S ZTS=ZT1 D SCREEN I ZTF D DELETE
"RTN","XUTMTDL",13,0)
 K ^TMP($J,"XUTMTDL") Q
"RTN","XUTMTDL",14,0)
 ;
"RTN","XUTMTDL",15,0)
RANGE ;TASK--process a range
"RTN","XUTMTDL",16,0)
 S ZT3=ZT1,(ZT2,ZTS)=$O(^TMP($J,"XUTMT",ZT1,""))
"RTN","XUTMTDL",17,0)
 I $D(^%ZTSK(ZTS)) D SCREEN I ZTF D DELETE
"RTN","XUTMTDL",18,0)
 F ZT=0:0 S ZTS=$O(^%ZTSK(ZTS)) Q:ZTS>ZT3!'ZTS  D SCREEN I ZTF D DELETE
"RTN","XUTMTDL",19,0)
 Q
"RTN","XUTMTDL",20,0)
 ;
"RTN","XUTMTDL",21,0)
SCREEN ;Screen Tasks For Selection & User Authority To Select
"RTN","XUTMTDL",22,0)
 L +^%ZTSK(ZTS)
"RTN","XUTMTDL",23,0)
 S ZTF=0 I '$D(^TMP($J,"XUTMT",ZTS)) S ZT5=$O(^TMP($J,"XUTMT",ZTS)) G SCRX:ZT5=""  S ZT6=$O(^(ZT5,"")) G SCRX:ZT6>ZTS!'ZT6
"RTN","XUTMTDL",24,0)
 I 'ZTKEY I $S($D(^%ZTSK(ZTS,0))[0:1,$P(^%ZTSK(ZTS,0),U,11)_","_$P(^(0),U,12)=XUTMUCI:DUZ'=$P(^(0),U,3),1:ZTNAME'=$P(^(0),U,10)) G SCRX
"RTN","XUTMTDL",25,0)
 S ZTF=1
"RTN","XUTMTDL",26,0)
SCRX L -^%ZTSK(ZTS) Q
"RTN","XUTMTDL",27,0)
 ;
"RTN","XUTMTDL",28,0)
DQSCHED ;Dequeue A Schedule List Entry
"RTN","XUTMTDL",29,0)
 L +^%ZTSCH(ZT1,ZT2) K ^%ZTSCH(ZT1,ZT2) L -^%ZTSCH(ZT1,ZT2) Q
"RTN","XUTMTDL",30,0)
 ;
"RTN","XUTMTDL",31,0)
DQIO ;Dequeue A Device Waiting List
"RTN","XUTMTDL",32,0)
 N %ZTIO,ZTDTH,ZTSK S %ZTIO=ZT1,ZTDTH=ZT2,ZTSK=ZT3 L +^%ZTSK(ZTSK),+^%ZTSCH("IO") D DQ^%ZTM4 L -^%ZTSCH("IO"),-^%ZTSK(ZTSK) Q
"RTN","XUTMTDL",33,0)
 ;
"RTN","XUTMTDL",34,0)
DQJOB ;Dequeue A Submanager Waiting List Entry
"RTN","XUTMTDL",35,0)
 L +^%ZTSK(ZT2),+^%ZTSCH("JOB",ZT1,ZT2) K ^%ZTSCH("JOB",ZT1,ZT2) L -^%ZTSCH("JOB"),-^%ZTSK(ZT2) Q
"RTN","XUTMTDL",36,0)
 ;
"RTN","XUTMTDL",37,0)
DQLINK ;Dequeue A Link Waiting List Entry
"RTN","XUTMTDL",38,0)
 L +^%ZTSCH("LINK") K ^%ZTSCH("LINK",ZT1,ZT2,ZT3) L -^%ZTSCH("LINK") Q
"RTN","XUTMTDL",39,0)
 ;
"RTN","XUTMTDL",40,0)
DELETE ;Delete Unscreened Tasks That Are Not Currently Running
"RTN","XUTMTDL",41,0)
 L +^%ZTSK(ZTS) I '$D(^%ZTSCH("TASK",ZTS)) K ^%ZTSK(ZTS) I '$D(^TMP($J,"XUTMTDL",ZTS)) S ^(ZTS)="",ZTSK=ZTSK+1
"RTN","XUTMTDL",42,0)
 L -^%ZTSK(ZTS) Q
"RTN","XUTMTDL",43,0)
 ;
"RTN","ZTLOAD2")
0^4^B5634702
"RTN","ZTLOAD2",1,0)
%ZTLOAD2 ;SEA/RDS-TaskMan: P I: Queue, Part 2 ;07/24/95  07:52
"RTN","ZTLOAD2",2,0)
 ;;8.0;KERNEL;**1**;JUL 03, 1995
"RTN","ZTLOAD2",3,0)
 ;
"RTN","ZTLOAD2",4,0)
REJECT ;GET--reject bad task
"RTN","ZTLOAD2",5,0)
 I '$D(ZTQUEUED) W !,"QUEUE INFORMATION MISSING - NOT QUEUED"
"RTN","ZTLOAD2",6,0)
 K ZTA1,ZTA4,ZTC1,ZTCPU,ZTDESC,ZTDTH,ZTIO,ZTKIL,ZTNOGO,ZTPRI,ZTRTN,ZTSAVE,ZTSK,ZTUCI
"RTN","ZTLOAD2",7,0)
 Q
"RTN","ZTLOAD2",8,0)
 ;
"RTN","ZTLOAD2",9,0)
RESTRCT ;GET--flag tasks with output restricted from certain times; check.
"RTN","ZTLOAD2",10,0)
 I $D(ZTQUEUED) Q
"RTN","ZTLOAD2",11,0)
 S ZTNOGO=0
"RTN","ZTLOAD2",12,0)
 I ZTDTH="@" Q
"RTN","ZTLOAD2",13,0)
 I ZTDTH'?1.5N1","1.5N Q
"RTN","ZTLOAD2",14,0)
 S X=$$HTFM^%ZTLOAD7(ZTDTH) D ^XQ92 I X="" S ZTDTH="" W !,"Sorry--that time is restricted!",!,$C(7)
"RTN","ZTLOAD2",15,0)
 Q
"RTN","ZTLOAD2",16,0)
 ;
"RTN","ZTLOAD2",17,0)
ASK ;GET--ask for start time
"RTN","ZTLOAD2",18,0)
 N %DT,Y S ZTDTH=""
"RTN","ZTLOAD2",19,0)
 I $D(ZTQUEUED) D:ZTDTH]""  Q
"RTN","ZTLOAD2",20,0)
 . S %DT="FRS",X=ZTDTH D ^%DT S ZTDTH=$$FMTH^%ZTLOAD7(+Y)
"RTN","ZTLOAD2",21,0)
 . Q
"RTN","ZTLOAD2",22,0)
 S %DT="AERSX",%DT("A")="Requested Start Time: ",%DT("B")="NOW",%DT(0)="NOW"
"RTN","ZTLOAD2",23,0)
 I $D(ZTNOGO) D  I X="" Q
"RTN","ZTLOAD2",24,0)
 . S Y=+XQY D NEXT^XQ92 I X="" W !,"Output is never allowed from this option!",$C(7),$C(7) Q
"RTN","ZTLOAD2",25,0)
 . S %DT("B")=$$FMTE^%ZTLOAD7(X),%DT="AERSX"
"RTN","ZTLOAD2",26,0)
 . Q
"RTN","ZTLOAD2",27,0)
 I $D(ZTNOGO),'$D(XQNOGO) W !,"Output from this option is restricted during certain times."
"RTN","ZTLOAD2",28,0)
 F ZT=0:0 D ^%DT Q:(Y<0)!'$D(ZTNOGO)  S ZT=Y,X=Y D ^XQ92 S Y=ZT Q:X]""  W !!,"That is a restricted time!",!,$C(7)
"RTN","ZTLOAD2",29,0)
 S:Y>0 ZTDTH=$$FMTH^%ZTLOAD7(+Y)
"RTN","ZTLOAD2",30,0)
 K %DT,%T,X5,ZT
"RTN","ZTLOAD2",31,0)
 Q
"RTN","ZTLOAD2",32,0)
 ;
"RTN","ZTLOAD2",33,0)
OPTION ;GET--get option data
"RTN","ZTLOAD2",34,0)
 S ZTA4=$G(ZTSAVE("XQY")) I 'ZTA4 S ZTA4=$G(XQY) I 'ZTA4 S ZTA4=""
"RTN","ZTLOAD2",35,0)
 S ZTA1="O" I 'ZTA4 S ZTA1="" Q
"RTN","ZTLOAD2",36,0)
 S ZTA5=$P($G(^DIC(19,ZTA4,0)),U)
"RTN","ZTLOAD2",37,0)
 Q
"RTN","ZTLOAD2",38,0)
 ;
"RTN","ZTLOAD2",39,0)
ZTKIL ;GET--convert forget time
"RTN","ZTLOAD2",40,0)
 S ZTKIL=$S(ZTKIL?5N:ZTKIL,ZTKIL?5N1","1.5N:ZTKIL,ZTKIL?7N.".".N:$$FMTH^%ZTLOAD7(ZTKIL),1:"")
"RTN","ZTLOAD2",41,0)
 Q
"RTN","ZTLOAD2",42,0)
 ;
"RTN","ZTLOAD2",43,0)
SPOOL ;DEVICE--for predefined ZTIO spool device, pick up IO("DOC") if missing
"RTN","ZTLOAD2",44,0)
 I $G(IO("DOC"))="" Q
"RTN","ZTLOAD2",45,0)
 I ZTIO[IO("DOC") Q
"RTN","ZTLOAD2",46,0)
 I $P(ZTIO,";",2)?.N D
"RTN","ZTLOAD2",47,0)
 .S ZTIO=$P(ZTIO,";")_";"_IO("DOC")_";"_$P(ZTIO,";",2,999)
"RTN","ZTLOAD2",48,0)
 E  I $P(ZTIO,";",2)?1.2A1"-"1.ANP,$P(ZTIO,";",3)?.N D
"RTN","ZTLOAD2",49,0)
 .S ZTIO=$P(ZTIO,";",1,2)_";"_IO("DOC")_";"_$P(ZTIO,";",3,999)
"RTN","ZTLOAD2",50,0)
 Q
"RTN","ZTLOAD2",51,0)
 ;
"RTN","ZTM4")
0^5^B4993411
"RTN","ZTM4",1,0)
%ZTM4 ;SEA/RDS-TaskMan: Manager, (Waiting List) ;07/21/95  09:02
"RTN","ZTM4",2,0)
 ;;8.0;KERNEL;**1**;Jul 03, 1995
"RTN","ZTM4",3,0)
 ;
"RTN","ZTM4",4,0)
NQ ;enter a task on the busy device waiting lists
"RTN","ZTM4",5,0)
 N ZT,ZT1,ZT2,ZT3,ZT4,ZT5,ZTHG,ZTI
"RTN","ZTM4",6,0)
 K ^%ZTSK(ZTSK,.26) S ZTHG="" L +^%ZTSCH("IO"):15 ;Try and Lock
"RTN","ZTM4",7,0)
 I ZTIOT'="HG" D  I ZTIO(1)="DIRECT" G NQX
"RTN","ZTM4",8,0)
 .I $D(^%ZTSCH("IO",%ZTIO))[0 S ^(%ZTIO)=ZTIOT
"RTN","ZTM4",9,0)
 .S ^%ZTSK(ZTSK,.26,%ZTIO)="",^%ZTSCH("IO",%ZTIO,ZTDTH,ZTSK)=""
"RTN","ZTM4",10,0)
 .I ZTIO(1)="DIRECT" Q
"RTN","ZTM4",11,0)
 .S ZT2=""
"RTN","ZTM4",12,0)
 .F ZT=0:0 S ZT2=$O(^%ZIS(1,"AHG",ZTIOS,ZT2)),ZT5="" Q:ZT2=""  D NAME,ADD
"RTN","ZTM4",13,0)
 .Q
"RTN","ZTM4",14,0)
 I ZTIOT="HG" S ZT2=ZTIOS,ZT5="" D ADD
"RTN","ZTM4",15,0)
 I ZTHG]"" S ^%ZTSK(ZTSK,.26)=ZTHG
"RTN","ZTM4",16,0)
NQX L -^%ZTSCH("IO")
"RTN","ZTM4",17,0)
 Q
"RTN","ZTM4",18,0)
 ;
"RTN","ZTM4",19,0)
NAME ;NQ--save name of hunt group
"RTN","ZTM4",20,0)
 I $D(^%ZIS(1,ZT2,0))[0 Q
"RTN","ZTM4",21,0)
 S ZTS=^%ZIS(1,ZT2,0)
"RTN","ZTM4",22,0)
 S ZTN=$P(ZTS,U) I ZTN="" Q
"RTN","ZTM4",23,0)
 I ZTHG="" S ZTHG=ZTN Q
"RTN","ZTM4",24,0)
 S ZTHG=ZTHG_","_ZTN
"RTN","ZTM4",25,0)
 Q
"RTN","ZTM4",26,0)
 ;
"RTN","ZTM4",27,0)
ADD ;NQ--add the devices in this hunt group to the list the task waits for
"RTN","ZTM4",28,0)
 F  S ZT5=$O(^%ZIS(1,ZT2,"HG","B",ZT5)) Q:ZT5=""  D
"RTN","ZTM4",29,0)
 .I $D(^%ZIS(1,ZT5,0))[0 Q
"RTN","ZTM4",30,0)
 .S ZTI=$P(^%ZIS(1,ZT5,0),U,2) ;Get $I
"RTN","ZTM4",31,0)
 .I ZTI="" Q
"RTN","ZTM4",32,0)
 .I $D(^%ZTSCH("IO",ZTI))[0 S ^(ZTI)=$P($G(^%ZIS(1,ZT5,"TYPE")),"^") ;Ger type
"RTN","ZTM4",33,0)
 .S ^%ZTSK(ZTSK,.26,ZTI)="",^%ZTSCH("IO",ZTI,ZTDTH,ZTSK)=""
"RTN","ZTM4",34,0)
 Q
"RTN","ZTM4",35,0)
 ;
"RTN","ZTM4",36,0)
DQ ;Remove A Task From The Busy Device Waiting Lists, Both IO, TASK are LOCKED
"RTN","ZTM4",37,0)
 N ZT,ZT1
"RTN","ZTM4",38,0)
 K ^%ZTSCH("IO",%ZTIO,ZTDTH,ZTSK) K:$D(^%ZTSCH("IO",%ZTIO))=1 ^(%ZTIO) ;See that current node is killed
"RTN","ZTM4",39,0)
 S ZT1="" F  S ZT1=$O(^%ZTSK(ZTSK,.26,ZT1)) Q:ZT1=""  K ^%ZTSCH("IO",ZT1,ZTDTH,ZTSK)
"RTN","ZTM4",40,0)
 K ^%ZTSK(ZTSK,.26) Q
"RTN","ZTM4",41,0)
 ;
"RTN","ZTM4",42,0)
KILL ;POST^%ZTMS4, Call To Delete A Task And Unschedule It Completely
"RTN","ZTM4",43,0)
 ;As long as ^%ZTSK(ZTSK) is locked we can remove any reference.
"RTN","ZTM4",44,0)
 N ZTDTH
"RTN","ZTM4",45,0)
 I %ZTIO]"",$D(^%ZTSK(ZTSK,0))#2,$P(^(0),U,6)]"" D
"RTN","ZTM4",46,0)
 . L +^%ZTSCH("IO"):15
"RTN","ZTM4",47,0)
 . S ZTDTH=$$H3^%ZTM($P(^(0),U,6)) D DQ
"RTN","ZTM4",48,0)
 . L -^%ZTSCH("IO")
"RTN","ZTM4",49,0)
 . Q
"RTN","ZTM4",50,0)
 K ^%ZTSK(ZTSK)
"RTN","ZTM4",51,0)
 N ZT,ZT1,ZT2 D US
"RTN","ZTM4",52,0)
 Q
"RTN","ZTM4",53,0)
 ;
"RTN","ZTM4",54,0)
US ;Un-Schedule a task from all lists
"RTN","ZTM4",55,0)
 S ZT1="" F  S ZT1=$O(^%ZTSCH("JOB",ZT1)) Q:ZT1=""  I $D(^(ZT1,ZTSK)) K ^(ZTSK)
"RTN","ZTM4",56,0)
 S ZT1="" F  S ZT1=$O(^%ZTSCH(ZT1)) Q:'ZT1  I $D(^(ZT1,ZTSK)) K ^(ZTSK)
"RTN","ZTM4",57,0)
 Q
"RTN","ZTMS3")
0^11^B19525553
"RTN","ZTMS3",1,0)
%ZTMS3 ;SEA/RDS-TaskMan: Submanager, Part 5 (Run Task) ;7/26/95  14:54
"RTN","ZTMS3",2,0)
 ;;8.0;KERNEL;**1**;Jul 03, 1995
"RTN","ZTMS3",3,0)
 ;
"RTN","ZTMS3",4,0)
TASK ;SUBMGR--prepare and run task; cleanup after
"RTN","ZTMS3",5,0)
 ;
"RTN","ZTMS3",6,0)
BEFORE ;prepare task
"RTN","ZTMS3",7,0)
 ;submanager's variables
"RTN","ZTMS3",8,0)
 S ZTDEF=""
"RTN","ZTMS3",9,0)
 S X=$O(^%ZIS(14.7,"B",ZTPAIR,""))
"RTN","ZTMS3",10,0)
 I X]"",$D(^%ZIS(14.7,X,0))#2 S ZTDEF=^(0)
"RTN","ZTMS3",11,0)
 S DUZ=+$P(ZTREC,U,3)
"RTN","ZTMS3",12,0)
 S %ZTTV=ZTUCI_U_IOS_U_ZTPRE_U_ZTSK_U_IO_U_IOT_U_ZTCPU_U_ZTNODE_U_DUZ_U_U_IOF_U_IOST_U_ZTPAIR_U_ZTYPE_U
"RTN","ZTMS3",13,0)
 S %ZTTV(0)=ZTRTN_U_$P(ZTREC,U,8,9)_U_$P(ZTREC,U,6)_U_ION_U_ZTUCI_U_$P(ZTREC,U,5)_U_$S($P(ZTREC,U,10)]"":$P(ZTREC,U,10),1:$P(ZTREC,U,3))_U_$J_U_ZTSYNCFL
"RTN","ZTMS3",14,0)
 I $D(^%ZTSCH("LOGRSRC")) D
"RTN","ZTMS3",15,0)
 .S %ZTTV(1)=$P(ZTREC,U,9)
"RTN","ZTMS3",16,0)
 .I %ZTTV(1)="" S %ZTTV(1)="ZTM TASK "_$P(ZTRTN,U,2)
"RTN","ZTMS3",17,0)
 ;
"RTN","ZTMS3",18,0)
 ;external calls
"RTN","ZTMS3",19,0)
 D NOW^%DTC S DT=% ;DT is Date.time at this point.
"RTN","ZTMS3",20,0)
1 D SETNM^%ZOSV($E("BTask ",(ZTIO]"")+1,6)_(ZTSK#1000000))
"RTN","ZTMS3",21,0)
 ;
"RTN","ZTMS3",22,0)
 ;priority
"RTN","ZTMS3",23,0)
 S X=$P(ZTREC,U,15)
"RTN","ZTMS3",24,0)
 S X=$S(+X'=X:0,X'<1&(X'>10):X\1,1:0)
"RTN","ZTMS3",25,0)
 S Y=$S(IOS="":0,$D(^%ZIS(1,+IOS,0))[0:0,1:+$P(^(0),U,5))
"RTN","ZTMS3",26,0)
 S Y=$S(Y'<1&(Y'>10):Y\1,1:0)
"RTN","ZTMS3",27,0)
 S X=$S(Y:Y,X:X,$P(ZTDEF,U,4):$P(ZTDEF,U,4),1:10)
"RTN","ZTMS3",28,0)
 X ^%ZOSF("PRIORITY")
"RTN","ZTMS3",29,0)
 ;
"RTN","ZTMS3",30,0)
2 ;restore saved variables
"RTN","ZTMS3",31,0)
 S X=$O(^XTV(8989.3,1,4,"B",ZTCPU,0)) S:$P($G(^XTV(8989.3,1,4,+X,0)),U,6)="y" XRTL=ZTUCI
"RTN","ZTMS3",32,0)
 K %,%H,%I,%ZTI,%ZTIO,IO("C"),IO("T"),X,Y,ZTCPU,ZTDEF,ZTIOST,ZTIOT,ZTNODE,ZTPAIR,ZTPRE,ZTREC,ZTREC2,ZTREC21,ZTREC25,ZTUCI,^TMP($J),^UTILITY($J),^XUTL("XQ",$J)
"RTN","ZTMS3",33,0)
 S DUZ(0)="" D RESTORE^%ZTMS4
"RTN","ZTMS3",34,0)
 ;
"RTN","ZTMS3",35,0)
 ;force values
"RTN","ZTMS3",36,0)
 S DUZ=+DUZ,DTIME=0,ZTDESC=$G(^%ZTSK(ZTSK,.03)),ZTDTH=$H
"RTN","ZTMS3",37,0)
 I DUZ(0)="" S DUZ(0)=$S($D(^VA(200,DUZ,0))#2:$P(^(0),U,4),1:"")
"RTN","ZTMS3",38,0)
 I $D(DUZ(2))[0 S DUZ(2)=$S($D(^VA(200,DUZ,2,0)):$O(^(0)),1:0)
"RTN","ZTMS3",39,0)
 S ^XUTL("XQ",$J,0)=DT,^("ZTSK")=ZTDESC
"RTN","ZTMS3",40,0)
 S X="DUZ" F  S X=$Q(@X) Q:X=""  I $D(@X) S ^XUTL("XQ",$J,$TR(X,""""))=@X
"RTN","ZTMS3",41,0)
 F X="DUZ","IO","IOBS","IOF","IOM","ION","IOS","IOSL","IOST","IOST(0)","IOT","IOXY","XQVOL" I $D(@X) S ^XUTL("XQ",$J,X)=@X
"RTN","ZTMS3",42,0)
3 ;
"RTN","ZTMS3",43,0)
 ;final checks & sets
"RTN","ZTMS3",44,0)
 I '$D(^%ZTSK(ZTSK)) S ZTTASK=0 D AFTER Q
"RTN","ZTMS3",45,0)
 I $S($D(^%ZTSK(ZTSK,.1))[0:0,1:$P(^(.1),U,10)]"") S $P(^%ZTSK(ZTSK,.1),U,1,3)="D^"_$H_"^4",ZTTASK=0 D AFTER Q
"RTN","ZTMS3",46,0)
 S $P(^%ZTSK(ZTSK,.1),U,1,3)=5_U_$H_U
"RTN","ZTMS3",47,0)
 S ZTQUEUED=ZTSK,ZTSTAT="1 General error"
"RTN","ZTMS3",48,0)
 S ^%ZTSCH("TASK",ZTSK)=%ZTTV(0)_$H
"RTN","ZTMS3",49,0)
 ;
"RTN","ZTMS3",50,0)
RUN ;run task
"RTN","ZTMS3",51,0)
 I ^%ZOSF("OS")["MSM-PC/PLUS" V:$P($ZV,"Version ",2)]]"4.0.11D" 360:$J:2**$V($V(58,-5)+8,-3,2)-1:4 ZSYNC
"RTN","ZTMS3",52,0)
 L
"RTN","ZTMS3",53,0)
 I $P(^%ZIS(14.7,+$O(^%ZIS(14.7,"B",$P(%ZTTV,U,13),"")),0),U,3)="Y" D LOGIN^%ZTMS4
"RTN","ZTMS3",54,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV(%ZTTV(1))
"RTN","ZTMS3",55,0)
 S DT=DT\1 S:ZTRTN="ZTSK^XQ1" ZTREQ="@"
"RTN","ZTMS3",56,0)
 X "N %ZTTV D @ZTRTN"
"RTN","ZTMS3",57,0)
 I $D(^%ZTSCH("LOGRSRC")) D LOGRSRC^%ZOSV("ZTMS AFTER TASK")
"RTN","ZTMS3",58,0)
 I $P(^%ZIS(14.7,+$O(^%ZIS(14.7,"B",$P(%ZTTV,"^",13),"")),0),"^",3)="Y" D LOGOUT^%ZTMS4
"RTN","ZTMS3",59,0)
 L  ;Clear all user locks.
"RTN","ZTMS3",60,0)
 ;
"RTN","ZTMS3",61,0)
AFTER ;cleanup after task; reset partition
"RTN","ZTMS3",62,0)
 S U="^",ZTSK=$P(%ZTTV,U,4) L +^%ZTSK(ZTSK)
"RTN","ZTMS3",63,0)
 I $D(ZTTASK)[0 K ^%ZTSCH("TASK",ZTSK) S ZTQUEUED=.6,ZTTASK=1
"RTN","ZTMS3",64,0)
 S X=10 X ^%ZOSF("PRIORITY")
"RTN","ZTMS3",65,0)
 S X="Sub "_$J D SETENV^%ZOSV
"RTN","ZTMS3",66,0)
 K ^TMP($J),^UTILITY($J),^XUTL("XQ",$J) I $T(XUTL^XUSCLEAN)]"" D XUTL^XUSCLEAN
"RTN","ZTMS3",67,0)
 S ZTUCI=$P(%ZTTV,U),IOS=$P(%ZTTV,U,2),ZTPRE=$P(%ZTTV,U,3),(IO,IO(0),%ZTIO)=$P(%ZTTV,U,5),IOT=$P(%ZTTV,U,6),ZTCPU=$P(%ZTTV,U,7),ZTNODE=$P(%ZTTV,U,8)
"RTN","ZTMS3",68,0)
 S IOF=$P(%ZTTV,U,11),IOST=$P(%ZTTV,U,12),ZTPAIR=$P(%ZTTV,U,13),ZTYPE=$P(%ZTTV,U,14),ZTSYNCFL=$P(%ZTTV(0),U,11)
"RTN","ZTMS3",69,0)
 I $G(ZTSYNCFL)]"" S X=$$SYNCFLG^%ZTMS2($S($G(ZTSTAT):"S",1:"D"),ZTSYNCFL,IO,$G(ZTSTAT)) D SCHSYNC^%ZTMS2(ZTSYNCFL,IO):'$G(ZTSTAT)
"RTN","ZTMS3",70,0)
 D POST^%ZTMS4:ZTTASK,CLOSE
"RTN","ZTMS3",71,0)
 K (%ZTIO,%ZTTV,IO,IOF,IOS,IOST,IOT,U,ZTCPU,ZTNODE,ZTNONEXT,ZTPAIR,ZTPRE,ZTQUEUED,ZTREQ,ZTSTOP,ZTUCI,ZTYPE),IO("C"),IO("T")
"RTN","ZTMS3",72,0)
 S DUZ=0,DUZ(0)="@",ZTQUEUED=0
"RTN","ZTMS3",73,0)
 L  ;Clear all locks, -^%ZTSK(ZTSK)
"RTN","ZTMS3",74,0)
 Q
"RTN","ZTMS3",75,0)
 ;
"RTN","ZTMS3",76,0)
CLOSE ;RUN--close &/or close execute
"RTN","ZTMS3",77,0)
 I %ZTIO="" S ZTNONEXT=1 Q
"RTN","ZTMS3",78,0)
 N ZTUCI,ZTCPU,ZTNODE,IOCPU
"RTN","ZTMS3",79,0)
 I IOT="HFS"!(IOT="SPL") S ZTNONEXT=1
"RTN","ZTMS3",80,0)
 ;I IOT="RES" Q
"RTN","ZTMS3",81,0)
 K IO("C") S:IOT'="TRM" IO("C")=1
"RTN","ZTMS3",82,0)
 I $D(IO("CLOSE")) S IO("T")=1
"RTN","ZTMS3",83,0)
 ;Here is the Lock and hang to allow IDCU ports to reset. See %ZTMS2.
"RTN","ZTMS3",84,0)
 I IOST["MINIOUT" S IO("C")=1 L +^%ZTSCH("NETMAIL",%ZTIO):60
"RTN","ZTMS3",85,0)
 I $D(IO(1,IO))#2 D ^%ZISC
"RTN","ZTMS3",86,0)
 I IOST["MINIOUT" H 5 ;Unlock of all locks is done in clean
"RTN","ZTMS3",87,0)
 ;See that all devices are closed.
"RTN","ZTMS3",88,0)
 I $D(IO("C")) S IO="" F  S IO=$O(IO(1,IO)) Q:IO=""  K IO(1,IO) C IO
"RTN","ZTMS3",89,0)
 Q
"RTN","ZTMS3",90,0)
 ;
"RTN","ZTMS7")
0^6^B2293991
"RTN","ZTMS7",1,0)
%ZTMS7 ;SEA/RDS-TaskMan: Submanager, (GetNext) ;7/21/95  08:37
"RTN","ZTMS7",2,0)
 ;;8.0;KERNEL;**1**;Jul 03, 1995
"RTN","ZTMS7",3,0)
 ;
"RTN","ZTMS7",4,0)
GETNEXT ;PROCESS--search Device Waiting List for next task waiting for %ZTIO
"RTN","ZTMS7",5,0)
 ;check stop node, and claim ownership of Device Waiting List
"RTN","ZTMS7",6,0)
 I $D(^%ZTSCH("STOP")) S ZTQUIT=1 G DEALOC8
"RTN","ZTMS7",7,0)
 I '$D(^%ZTSCH("IO",%ZTIO)) G DEALOC8
"RTN","ZTMS7",8,0)
 S X=$$DEVLK^%ZTMS1(1,%ZTIO)
"RTN","ZTMS7",9,0)
 L +^%ZTSCH("IO"):60 I '$T G DEALOC8
"RTN","ZTMS7",10,0)
 S ZTI=^%ZTSCH("IO"),ZTDTH=""
"RTN","ZTMS7",11,0)
 ;
"RTN","ZTMS7",12,0)
 ;look for task
"RTN","ZTMS7",13,0)
G3 S ZTDTH=$O(^%ZTSCH("IO",%ZTIO,ZTDTH)),ZTSK="" I ZTDTH="" G DEALOC8
"RTN","ZTMS7",14,0)
G5 S ZTSK=$O(^%ZTSCH("IO",%ZTIO,ZTDTH,ZTSK)) I ZTSK="" G G3
"RTN","ZTMS7",15,0)
 L +^%ZTSK(ZTSK):2 G G5:'$T!($D(^%ZTSCH("IO",%ZTIO,ZTDTH,ZTSK))[0)
"RTN","ZTMS7",16,0)
 D DQ^%ZTM4 ;Remove from lists
"RTN","ZTMS7",17,0)
 I $D(^%ZTSK(ZTSK,0))[0!'ZTSK S:ZTSK>0&$D(^%ZTSK(ZTSK)) $P(^%ZTSK(ZTSK,.1),U,1,3)="I^"_$H_"^A" L -^%ZTSK(ZTSK) G G5
"RTN","ZTMS7",18,0)
 I $P($G(^%ZTSK(ZTSK,.1)),U,10)]"" S $P(^(.1),U,1,3)="D^"_$H_"^A" L -^%ZTSK(ZTSK) G G5
"RTN","ZTMS7",19,0)
 L -^%ZTSCH("IO") S ZTQUEUED=.5
"RTN","ZTMS7",20,0)
 Q  ;Quit w/ ^%ZTSK(ZTSK) locked
"RTN","ZTMS7",21,0)
 ;
"RTN","ZTMS7",22,0)
DEALOC8 ;GETNEXT--deallocate device, and set ZTNONEXT
"RTN","ZTMS7",23,0)
 D DEVLK^%ZTMS1(-1,%ZTIO)
"RTN","ZTMS7",24,0)
 S IO("C")="",IO("T")=1 D ^%ZISC K IO("T"),IO("C")
"RTN","ZTMS7",25,0)
 S ZTNONEXT=1
"RTN","ZTMS7",26,0)
 L  ;Quit w/ all locks clear.
"RTN","ZTMS7",27,0)
 Q
"RTN","ZTMS7",28,0)
 ;
"VER")
8.0T20^21.0
**END**
**END**
