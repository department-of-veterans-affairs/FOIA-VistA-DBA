Released IB*2*315 SEQ #285
Extracted from mail message
**KIDS**:IB*2.0*315^

**INSTALL NAME**
IB*2.0*315
"BLD",5813,0)
IB*2.0*315^INTEGRATED BILLING^0^3051013^y
"BLD",5813,1,0)
^^1^1^3050525^
"BLD",5813,1,1,0)
PFSS ACCOUNT FILE
"BLD",5813,4,0)
^9.64PA^^0
"BLD",5813,"INID")
^y
"BLD",5813,"INIT")
CHKCHP^IB20P315
"BLD",5813,"KRN",0)
^9.67PA^8989.52^19
"BLD",5813,"KRN",.4,0)
.4
"BLD",5813,"KRN",.401,0)
.401
"BLD",5813,"KRN",.402,0)
.402
"BLD",5813,"KRN",.403,0)
.403
"BLD",5813,"KRN",.5,0)
.5
"BLD",5813,"KRN",.84,0)
.84
"BLD",5813,"KRN",3.6,0)
3.6
"BLD",5813,"KRN",3.8,0)
3.8
"BLD",5813,"KRN",9.2,0)
9.2
"BLD",5813,"KRN",9.8,0)
9.8
"BLD",5813,"KRN",9.8,"NM",0)
^9.68A^4^3
"BLD",5813,"KRN",9.8,"NM",2,0)
IB20P315^^0^B9468147
"BLD",5813,"KRN",9.8,"NM",3,0)
IBCSC5C^^0^B37628978
"BLD",5813,"KRN",9.8,"NM",4,0)
IBTRKR41^^0^B29297297
"BLD",5813,"KRN",9.8,"NM","B","IB20P315",2)

"BLD",5813,"KRN",9.8,"NM","B","IBCSC5C",3)

"BLD",5813,"KRN",9.8,"NM","B","IBTRKR41",4)

"BLD",5813,"KRN",19,0)
19
"BLD",5813,"KRN",19,"NM",0)
^9.68A^^0
"BLD",5813,"KRN",19.1,0)
19.1
"BLD",5813,"KRN",101,0)
101
"BLD",5813,"KRN",409.61,0)
409.61
"BLD",5813,"KRN",771,0)
771
"BLD",5813,"KRN",870,0)
870
"BLD",5813,"KRN",8989.51,0)
8989.51
"BLD",5813,"KRN",8989.52,0)
8989.52
"BLD",5813,"KRN",8994,0)
8994
"BLD",5813,"KRN","B",.4,.4)

"BLD",5813,"KRN","B",.401,.401)

"BLD",5813,"KRN","B",.402,.402)

"BLD",5813,"KRN","B",.403,.403)

"BLD",5813,"KRN","B",.5,.5)

"BLD",5813,"KRN","B",.84,.84)

"BLD",5813,"KRN","B",3.6,3.6)

"BLD",5813,"KRN","B",3.8,3.8)

"BLD",5813,"KRN","B",9.2,9.2)

"BLD",5813,"KRN","B",9.8,9.8)

"BLD",5813,"KRN","B",19,19)

"BLD",5813,"KRN","B",19.1,19.1)

"BLD",5813,"KRN","B",101,101)

"BLD",5813,"KRN","B",409.61,409.61)

"BLD",5813,"KRN","B",771,771)

"BLD",5813,"KRN","B",870,870)

"BLD",5813,"KRN","B",8989.51,8989.51)

"BLD",5813,"KRN","B",8989.52,8989.52)

"BLD",5813,"KRN","B",8994,8994)

"BLD",5813,"QUES",0)
^9.62^^
"BLD",5813,"REQB",0)
^9.611^1^1
"BLD",5813,"REQB",1,0)
IB*2.0*309^2
"BLD",5813,"REQB","B","IB*2.0*309",1)

"INIT")
CHKCHP^IB20P315
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^2^1
"PKG",200,20,2,0)
2^^IBAXDR
"PKG",200,20,2,1)

"PKG",200,20,"B",2,2)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
315^3051013
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3051013
"PKG",200,22,1,"PAH",1,1,1,0)
PFSS ACCOUNT FILE
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","IB20P315")
0^2^B9468147
"RTN","IB20P315",1,0)
IB20P315 ;WOIFO/CLC - IB Check for Continuously Hospitalized Patients ;7-JUN-2005
"RTN","IB20P315",2,0)
 ;;2.0;INTEGRATED BILLING;**315**;21-MAR-94
"RTN","IB20P315",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IB20P315",4,0)
 ;********************************************************
"RTN","IB20P315",5,0)
 ; PURPOSE: Check each Site's 351.1 File:
"RTN","IB20P315",6,0)
 ;        : Continuously Hospitalized patients
"RTN","IB20P315",7,0)
 ;        : and MailMan the list of non-discharged inpatients
"RTN","IB20P315",8,0)
 ;
"RTN","IB20P315",9,0)
 ;   USAGE: OPEN - Post Patch(IB*2.0*315) routine
"RTN","IB20P315",10,0)
 ;
"RTN","IB20P315",11,0)
 ;  INPUTS: NONE
"RTN","IB20P315",12,0)
 ; OUTPUTS: Mailman message
"RTN","IB20P315",13,0)
 ;********************************************************
"RTN","IB20P315",14,0)
CHKCHP ;
"RTN","IB20P315",15,0)
 N IEN,HEAD,CHP
"RTN","IB20P315",16,0)
 D MES^XPDUTL("Start: Continuously Hospitalized Patients Check...")
"RTN","IB20P315",17,0)
 S IEN=0
"RTN","IB20P315",18,0)
 F  S IEN=$O(^IBE(351.1,IEN)) Q:+IEN=0  D
"RTN","IB20P315",19,0)
   .S HEAD=^IBE(351.1,IEN,0)
"RTN","IB20P315",20,0)
   .I $P(HEAD,"^",2)="",$$CHKINP(HEAD) S CHP(IEN)=HEAD
"RTN","IB20P315",21,0)
 ;
"RTN","IB20P315",22,0)
 I $D(CHP) D SETMAIL
"RTN","IB20P315",23,0)
 I '$D(CHP) D NOCHP
"RTN","IB20P315",24,0)
 D MES^XPDUTL("Complete: Continuously Hospitalized Patients Check...")
"RTN","IB20P315",25,0)
 Q
"RTN","IB20P315",26,0)
CHKINP(CHPINFO) ;
"RTN","IB20P315",27,0)
 N DFN,VAERR,VAIN
"RTN","IB20P315",28,0)
 S DFN=$P(CHPINFO,"^",1)
"RTN","IB20P315",29,0)
 D INP^VADPT I VAIN(1) Q 1            ;Still an Inpatient
"RTN","IB20P315",30,0)
 ; Do we need to report the problem?
"RTN","IB20P315",31,0)
 Q 0
"RTN","IB20P315",32,0)
SETMAIL ;
"RTN","IB20P315",33,0)
 N SPC,BODY,LN
"RTN","IB20P315",34,0)
 S SPC="",$P(SPC," ",50)=""
"RTN","IB20P315",35,0)
 S BODY(1)="Processed on:"_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","IB20P315",36,0)
 S BODY(2)=$E("SSN"_SPC,1,14)_$E("Patient"_SPC,1,35)
"RTN","IB20P315",37,0)
 S BODY(2)=BODY(2)_$E("Created"_SPC,1,14)_$E("Last Updated"_SPC,1,14)
"RTN","IB20P315",38,0)
 S BODY(3)="",$P(BODY(3),"=",79)=""
"RTN","IB20P315",39,0)
 ;
"RTN","IB20P315",40,0)
 S IEN=""
"RTN","IB20P315",41,0)
 F LN=4:1  S IEN=$O(CHP(IEN)) Q:IEN=""  D BLDDTL(LN,CHP(IEN))
"RTN","IB20P315",42,0)
 D MAILINFO("")
"RTN","IB20P315",43,0)
 Q
"RTN","IB20P315",44,0)
BLDDTL(LN,CHPINFO) ;
"RTN","IB20P315",45,0)
 N DFN,ENDT,UPDT,PTHEAD,PTNM,PTSSN
"RTN","IB20P315",46,0)
 S DFN=$P(CHPINFO,"^",1)
"RTN","IB20P315",47,0)
 S ENDT=$P($$FMTE^XLFDT($P(CHPINFO,"^",4),5),"@")_SPC    ;Entry Date
"RTN","IB20P315",48,0)
 S UPDT=$P($$FMTE^XLFDT($P(CHPINFO,"^",6),5),"@")_SPC    ;Last Updated
"RTN","IB20P315",49,0)
 ;
"RTN","IB20P315",50,0)
 S PTHEAD=^DPT(DFN,0)
"RTN","IB20P315",51,0)
 S PTNM=$P(PTHEAD,"^",1)_SPC
"RTN","IB20P315",52,0)
 S PTSSN=$P(PTHEAD,"^",9)_SPC
"RTN","IB20P315",53,0)
 ;
"RTN","IB20P315",54,0)
 S BODY(LN)=$E(PTSSN,1,14)_$E(PTNM,1,35)
"RTN","IB20P315",55,0)
 S BODY(LN)=BODY(LN)_$E(ENDT,1,14)_$E(UPDT,1,14)
"RTN","IB20P315",56,0)
 ;W !,BODY(LN)
"RTN","IB20P315",57,0)
 Q
"RTN","IB20P315",58,0)
NOCHP ;
"RTN","IB20P315",59,0)
 N BODY
"RTN","IB20P315",60,0)
 S BODY(1)="No Continuously Hospitalized Patients in: "
"RTN","IB20P315",61,0)
 S BODY(1)=BODY(1)_$TR($P($$SITE^VASITE(),"^",2,3),"^","-")
"RTN","IB20P315",62,0)
 S BODY(2)="Processed on:"_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","IB20P315",63,0)
 D MES^XPDUTL(BODY(1))
"RTN","IB20P315",64,0)
 D MAILINFO("No ")
"RTN","IB20P315",65,0)
 Q
"RTN","IB20P315",66,0)
MAILINFO(PREFIX) ;
"RTN","IB20P315",67,0)
 N SITE,XMDF,XMDUZ,XMSUB,XMDUN,XMTEXT,XMSTRIP,XMROU,XMY,XMZ,XMMG
"RTN","IB20P315",68,0)
 S SITE=$TR($P($$SITE^VASITE(),"^",2,3),"^","-")
"RTN","IB20P315",69,0)
 S XMDF="",XMDUZ="IB20P315-"_SITE
"RTN","IB20P315",70,0)
 S XMSUB=PREFIX_"Continuously Hospitalized Patients-"_SITE
"RTN","IB20P315",71,0)
 S XMY("G.PFSS CONT HOSP PATIENTS@FORUM.VA.GOV")=""
"RTN","IB20P315",72,0)
 S XMTEXT="BODY("
"RTN","IB20P315",73,0)
 D ^XMD
"RTN","IB20P315",74,0)
 ;
"RTN","IB20P315",75,0)
 I $G(XMMG)'="" D MES^XPDUTL("[ERROR] Sending the message:"_XMMG) Q
"RTN","IB20P315",76,0)
 S XMY("G.PFSS CONT HOSP PATIENTS@FORUM.VA.GOV")=""
"RTN","IB20P315",77,0)
 D ENT1^XMD
"RTN","IB20P315",78,0)
 ;
"RTN","IB20P315",79,0)
 D MES^XPDUTL("Message sent successfully:"_XMZ)
"RTN","IB20P315",80,0)
 Q
"RTN","IBCSC5C")
0^3^B37628978
"RTN","IBCSC5C",1,0)
IBCSC5C ;ALB/ARH - ADD/EDIT PRESCRIPTION FILLS (CONTINUED) ;3/4/94
"RTN","IBCSC5C",2,0)
 ;;2.0;INTEGRATED BILLING;**27,52,130,51,160,260,309,315**;21-MAR-94
"RTN","IBCSC5C",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC5C",4,0)
 ;
"RTN","IBCSC5C",5,0)
 ;
"RTN","IBCSC5C",6,0)
DEFAULT(IFN,IBRX) ; add default DX and CPT to a prescription bill
"RTN","IBCSC5C",7,0)
 ; if one is not in PSO.  If there is, use it instead.
"RTN","IBCSC5C",8,0)
 ; IFN = ien of bill entry
"RTN","IBCSC5C",9,0)
 N IBX,IBPAR1,IBDX,IBCPT,IBDT,IBBIL,IBDXIFN,IBCPTIFN,IBY,IB52,IBC
"RTN","IBCSC5C",10,0)
 S IBDXIFN=0
"RTN","IBCSC5C",11,0)
 S IBPAR1=$G(^IBE(350.9,1,1)),IBDX=$P(IBPAR1,U,29),IBCPT=$P(IBPAR1,U,30)
"RTN","IBCSC5C",12,0)
 S IBBIL=$G(^DGCR(399,+$G(IFN),0)) Q:IBBIL=""
"RTN","IBCSC5C",13,0)
 S IBX=$S($G(IBRX):$P($G(^DGCR(399,IFN,"RC",+IBRX,0)),U,11),1:$O(^IBA(362.4,"C",IFN,0))) Q:'IBX
"RTN","IBCSC5C",14,0)
 S IB52=+$P($G(^IBA(362.4,IBX,0)),"^",5),IBY=0 F  S IBY=$O(^PSRX(IB52,"ICD",IBY)) Q:'IBY  S IBDX(IBY)=$G(^PSRX(IB52,"ICD",IBY,0)) I 'IBDX(IBY) K IBDX(IBY)
"RTN","IBCSC5C",15,0)
 I 'IBDX,'IBCPT,$D(IBDX)<10 Q
"RTN","IBCSC5C",16,0)
 S IBDT=$P($G(^IBA(362.4,+IBX,0)),U,3) Q:'IBDT
"RTN","IBCSC5C",17,0)
 ; add dx associated with rx if they are there.
"RTN","IBCSC5C",18,0)
 I $D(IBDX)>9 S (IBC,IBDX,IBY)=0 F  S IBY=$O(IBDX(IBY)) Q:'IBY  D
"RTN","IBCSC5C",19,0)
 . I $D(^IBA(362.3,"AIFN"_IFN,+IBDX(IBY))) Q
"RTN","IBCSC5C",20,0)
 . S IBC=IBC+1
"RTN","IBCSC5C",21,0)
 . S DIC="^IBA(362.3,",DIC(0)="L",DIC("DR")=".02////"_IFN_";.03////"_IBC,X=+IBDX(IBY),DLAYGO=362.3
"RTN","IBCSC5C",22,0)
 . K DD,DO D FILE^DICN K DIC,DA,DR,DD,DO,DLAYGO
"RTN","IBCSC5C",23,0)
 . S IBDXIFN(IBC)=+Y
"RTN","IBCSC5C",24,0)
 ; add default dx if none found on actual rx.
"RTN","IBCSC5C",25,0)
 I +IBDX,'$D(^IBA(362.3,"AIFN"_IFN,+IBDX)) S DIC="^IBA(362.3,",DIC(0)="L",DIC("DR")=".02////"_IFN,X=IBDX,DLAYGO=362.3 K DD,DO D FILE^DICN K DIC,DA,DR,DD,DO,DLAYGO S IBDXIFN=+Y
"RTN","IBCSC5C",26,0)
 I +IBCPT D  ;Check if the procedure is already present for the Rx
"RTN","IBCSC5C",27,0)
 . N Z,Z0,DUP
"RTN","IBCSC5C",28,0)
 . S (DUP,Z)=0 F  S Z=$O(^DGCR(399,IFN,"RC",Z)) Q:'Z  S Z0=$G(^(Z,0)) D  Q:DUP
"RTN","IBCSC5C",29,0)
 .. I $P(Z0,U,10)=3,$P(Z0,U,15),$P(Z0,U,11)=IBX S DUP=1
"RTN","IBCSC5C",30,0)
 . Q:DUP
"RTN","IBCSC5C",31,0)
 . I $P($G(^DGCR(399,IFN,0)),U,9)="" S DIE="^DGCR(399,",DA=IFN,DR=".09////5" D ^DIE K DIE,DIC,DA,DR
"RTN","IBCSC5C",32,0)
 . I '$D(^DGCR(399,IFN,"CP",0)) S DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCSC5C",33,0)
 . S DLAYGO=399,DIC("DR")="1////"_IBDT D
"RTN","IBCSC5C",34,0)
 . . I +IBDXIFN>0 S DIC("DR")=DIC("DR")_";10////"_IBDXIFN Q
"RTN","IBCSC5C",35,0)
 . . I $D(IBDXIFN)>9 F IBY=1:1:4 I $D(IBDXIFN(IBY)) S DIC("DR")=DIC("DR")_";"_(IBY+9)_"////"_IBDXIFN(IBY)
"RTN","IBCSC5C",36,0)
 . S DIC="^DGCR(399,"_IFN_",""CP"",",DIC(0)="L",DA(1)=IFN,X=IBCPT_";ICPT(" K DD,DO D FILE^DICN K DIC,DA,DD,DO,DR,DLAYGO
"RTN","IBCSC5C",37,0)
 . I +Y D
"RTN","IBCSC5C",38,0)
 .. N Z,IBZ
"RTN","IBCSC5C",39,0)
 .. S IBZ=+Y,Z=$S($G(IBREV):IBREV,1:$$FINDREV^IBCSC5A(IFN,3,+IBX))
"RTN","IBCSC5C",40,0)
 .. I Z S DR=".15////"_IBZ_";.06////"_IBCPT,DA=+Z,DA(1)=IFN,DIE="^DGCR(399,"_DA(1)_",""RC""," D ^DIE
"RTN","IBCSC5C",41,0)
 Q
"RTN","IBCSC5C",42,0)
 ;
"RTN","IBCSC5C",43,0)
RXDISP(DFN,DT1,DT2,ARRAY,POARR,RXARR,IBRXALL,NODISP) ; display all rx fills for a patient and date range
"RTN","IBCSC5C",44,0)
 ;RXARR (as defined by SET^IBCSC5A) passed by ref. only to check if rx-fill is on the bill, not necessary not changed
"RTN","IBCSC5C",45,0)
 ;returns: ARRAY(RX #, FILL DT) = RX IFN (52) ^ FILL IFN ^ DRUG ^ DAYS SUPPLY ^ QTY ^ NDC, pass by reference if desired
"RTN","IBCSC5C",46,0)
 ;         POARR(CNT)=RX # ^ FILL DT
"RTN","IBCSC5C",47,0)
 N PIFN,RIFN,IBX,IBY,DTE,DTR,RX,IBCNT,IBRX0,IBRX2,IBS K ARRAY,POARR S POARR=0,NODISP=+$G(NODISP)
"RTN","IBCSC5C",48,0)
 S IBCNT=0,DT1=$G(DT1)-.0001,DT2=$G(DT2) S:'DT2 DT2=9999999 Q:'$G(DFN)
"RTN","IBCSC5C",49,0)
 ;^PS(55,DFN,"P","A",EXPIRATION DATE, RX) is the best xref available for finding patient fills in a date range
"RTN","IBCSC5C",50,0)
 ;if RX expires/cancelled before start of bill then should not be applicable to bill
"RTN","IBCSC5C",51,0)
 S DTE=DT1 F  S DTE=$O(^PS(55,DFN,"P","A",DTE)) Q:'DTE  D
"RTN","IBCSC5C",52,0)
 . S PIFN=0 F  S PIFN=$O(^PS(55,DFN,"P","A",DTE,PIFN)) Q:'PIFN  D
"RTN","IBCSC5C",53,0)
 .. S IBRX0=$G(^PSRX(PIFN,0)),IBRX2=$G(^PSRX(PIFN,2))
"RTN","IBCSC5C",54,0)
 .. ; original fill
"RTN","IBCSC5C",55,0)
 .. I +$G(IBRXALL) S DTR=$P(IBRX2,U,2) I DTR'<DT1,DTR'>DT2 D
"RTN","IBCSC5C",56,0)
 ... D DATA^IBRXUTL(+$P(IBRX0,U,6))
"RTN","IBCSC5C",57,0)
 ... S ARRAY($P(IBRX0,U,1),+DTR)=PIFN_U_0_U_$P(IBRX0,U,6)_U_$P(IBRX0,U,8)_U_$P(IBRX0,U,7)_U_$G(^TMP($J,"IBDRUG",+$P(IBRX0,U,6),31))
"RTN","IBCSC5C",58,0)
 ... K ^TMP($J,"IBDRUG")
"RTN","IBCSC5C",59,0)
 ... Q
"RTN","IBCSC5C",60,0)
 .. ; refills
"RTN","IBCSC5C",61,0)
 .. S DTR=DT1 F  S DTR=$O(^PSRX(PIFN,1,"B",DTR)) Q:'DTR!(DTR>DT2)  D
"RTN","IBCSC5C",62,0)
 ... S RIFN=0 F  S RIFN=$O(^PSRX(PIFN,1,"B",DTR,RIFN)) Q:'RIFN  D
"RTN","IBCSC5C",63,0)
 .... S IBY=$G(^PSRX(PIFN,1,RIFN,0)) Q:IBY=""
"RTN","IBCSC5C",64,0)
 .... D DATA^IBRXUTL(+$P(IBRX0,U,6))
"RTN","IBCSC5C",65,0)
 .... S ARRAY($P(IBRX0,U,1),+IBY)=PIFN_U_RIFN_U_$P(IBRX0,U,6)_U_$P(IBRX0,U,8)_U_$P(IBY,U,4)_U_$G(^TMP($J,"IBDRUG",+$P(IBRX0,U,6),31))
"RTN","IBCSC5C",66,0)
 .... K ^TMP($J,"IBDRUG")
"RTN","IBCSC5C",67,0)
 .... Q
"RTN","IBCSC5C",68,0)
 ;
"RTN","IBCSC5C",69,0)
 S IBX="",IBS=0 F  S IBX=$O(ARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(ARRAY(IBX,IBY)) Q:'IBY  D
"RTN","IBCSC5C",70,0)
 . S IBCNT=IBCNT+1,POARR(IBCNT)=$P(IBX,U,1)_"^"_+IBY,POARR=IBCNT I $D(RXARR(IBX,IBY)) S IBS=IBS+1
"RTN","IBCSC5C",71,0)
 S $P(POARR,U,2)=IBCNT-IBS
"RTN","IBCSC5C",72,0)
 ;
"RTN","IBCSC5C",73,0)
 Q:+NODISP
"RTN","IBCSC5C",74,0)
 W @IOF,?33,"PRESCRIPTIONS IN DATE RANGE",!,"===============================================================================",!
"RTN","IBCSC5C",75,0)
 S IBCNT=0 F  S IBCNT=$O(POARR(IBCNT)) Q:IBCNT=""  S RX=$P(POARR(IBCNT),U,1),DTR=$P(POARR(IBCNT),U,2) I RX'="",DTR'="" D
"RTN","IBCSC5C",76,0)
 . S IBS=$$RXSTAT^IBCU1($P(ARRAY(RX,DTR),U,3),$P(ARRAY(RX,DTR),U,1),DTR)
"RTN","IBCSC5C",77,0)
 . S IBY="" I $D(RXARR(RX,+DTR)) S IBY="*"
"RTN","IBCSC5C",78,0)
 . D ZERO^IBRXUTL(+$P(ARRAY(RX,DTR),U,3))
"RTN","IBCSC5C",79,0)
 . W !,$J(IBCNT,2),")",?5,IBY,?6,RX,?19,$E($G(^TMP($J,"IBDRUG",+$P(ARRAY(RX,DTR),U,3),.01)),1,25),?46,$$DATE(+DTR),?56,$P(IBS,U,1),?61,$P(IBS,U,2),?69,$P(IBS,U,3),?75,$$EXEMPT(+ARRAY(RX,DTR))
"RTN","IBCSC5C",80,0)
 . S IBY=$$RXDUP^IBCU3(RX,DTR,IBIFN) I +IBY W ?73,$P($G(^DGCR(399,+IBY,0)),U,1)
"RTN","IBCSC5C",81,0)
 . K ^TMP($J,"IBDRUG")
"RTN","IBCSC5C",82,0)
 Q
"RTN","IBCSC5C",83,0)
DATE(X) Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCSC5C",84,0)
 ;
"RTN","IBCSC5C",85,0)
NEWRX(IBX) ;
"RTN","IBCSC5C",86,0)
 Q:'$G(IBX)  N X,Y K IBLIST W !
"RTN","IBCSC5C",87,0)
NEWRX1 S DIR("?")="Enter the number preceding the RX Fills you want added to the bill.     "_$$HTEXT
"RTN","IBCSC5C",88,0)
 S DIR("A")="SELECT NEW RX FILLS TO ADD THE BILL"
"RTN","IBCSC5C",89,0)
 S DIR(0)="LO^1:"_+IBX D ^DIR K DIR G:'Y!$D(DIRUT) NEWRXE
"RTN","IBCSC5C",90,0)
 S IBLIST=Y
"RTN","IBCSC5C",91,0)
 ;
"RTN","IBCSC5C",92,0)
 S DIR("A")="YOU HAVE SELECTED "_IBLIST_" TO BE ADDED TO THE BILL IS THIS CORRECT",DIR("B")="YES"
"RTN","IBCSC5C",93,0)
 S DIR(0)="YO" D ^DIR K DIR I $D(DIRUT) K IBLIST G NEWRXE
"RTN","IBCSC5C",94,0)
 I 'Y K IBLIST G NEWRX1
"RTN","IBCSC5C",95,0)
NEWRXE Q
"RTN","IBCSC5C",96,0)
 ;
"RTN","IBCSC5C",97,0)
ADDNEW(IBIFN,LIST,IBPR,IBPRO) ;
"RTN","IBCSC5C",98,0)
 Q:'LIST  N IBI,IBX,IBRX,IBDT,IBQ,IBY,IBPIFN,IBZ
"RTN","IBCSC5C",99,0)
 F IBI=1:1 S IBX=$P(LIST,",",IBI) Q:'IBX  I $D(IBPRO(IBX)) D
"RTN","IBCSC5C",100,0)
 . S IBRX=$P(IBPRO(IBX),U,1),IBDT=$P(IBPRO(IBX),U,2) Q:IBRX=""
"RTN","IBCSC5C",101,0)
 . S IBQ=0,IBY=$G(IBPR(IBRX,+IBDT)) Q:'IBY
"RTN","IBCSC5C",102,0)
 . S IBPIFN=0 F  S IBPIFN=$O(^IBA(362.4,"AIFN"_IBIFN,IBRX,IBPIFN)) Q:'IBPIFN  I $P($G(^IBA(362.4,IBPIFN,0)),U,3)=IBDT S IBQ=1 Q
"RTN","IBCSC5C",103,0)
 . I 'IBQ S IBZ=$G(IBPR(IBRX,IBDT)) I $$ADD^IBCSC5A(IBRX,IBIFN,IBDT,$P(IBZ,U,3),$P(IBZ,U,1),$P(IBZ,U,4,6)) W "."
"RTN","IBCSC5C",104,0)
 Q
"RTN","IBCSC5C",105,0)
 ;
"RTN","IBCSC5C",106,0)
HTEXT() ;
"RTN","IBCSC5C",107,0)
 N X S X="If an Rx fill has been assigned to another bill it will be displayed in the last column.  [ORG=Original Fill, NR=Not Released, RTS=Returned to Stock, OTC=Over-the-Counter, INV=Investigational, SUP=Supply Item]"
"RTN","IBCSC5C",108,0)
 Q X
"RTN","IBCSC5C",109,0)
 ;
"RTN","IBCSC5C",110,0)
RXLINK(IBIFN,CPIEN) ; Function returns the ien of the Rx rev code the proc
"RTN","IBCSC5C",111,0)
 ; code is linked to or 0 if no link found.
"RTN","IBCSC5C",112,0)
 Q +$O(^DGCR(399,IBIFN,"RC","ACP",+CPIEN,0))
"RTN","IBCSC5C",113,0)
 ;
"RTN","IBCSC5C",114,0)
EXEMPT(RX) ; Used to look up exemption if any on rx, the return value
"RTN","IBCSC5C",115,0)
 ; will be only the first exemption reason found.
"RTN","IBCSC5C",116,0)
 N IBX,IBZ,IBS,IBR
"RTN","IBCSC5C",117,0)
 S IBR="",(IBS,IBX)=0 F  S IBX=$O(^PSRX(RX,"ICD",IBX)) Q:'IBX!(IBS)  S IBZ=$G(^PSRX(RX,"ICD",IBX,0)) F IBP=2:1:8 Q:IBS  I $P(IBZ,"^",IBP) S IBR=$P($T(EREASON+(IBP-1)),";",3),IBS=1
"RTN","IBCSC5C",118,0)
 Q IBR
"RTN","IBCSC5C",119,0)
EREASON ;
"RTN","IBCSC5C",120,0)
 ;;AO
"RTN","IBCSC5C",121,0)
 ;;IR
"RTN","IBCSC5C",122,0)
 ;;SC
"RTN","IBCSC5C",123,0)
 ;;EC
"RTN","IBCSC5C",124,0)
 ;;MST
"RTN","IBCSC5C",125,0)
 ;;HNC
"RTN","IBCSC5C",126,0)
 ;;CV
"RTN","IBCSC5C",127,0)
 ;
"RTN","IBTRKR41")
0^4^B29297297
"RTN","IBTRKR41",1,0)
IBTRKR41 ;ALB/AAS - CLAIMS TRACKING - ADD/TRACK OUTPATIENT ENCOUNTERS ;13-AUG-93
"RTN","IBTRKR41",2,0)
 ;;2.0;INTEGRATED BILLING;**43,55,91,132,174,247,260,315**;21-MAR-94
"RTN","IBTRKR41",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTRKR41",4,0)
 ;
"RTN","IBTRKR41",5,0)
OPCHK ; -- check and add rx
"RTN","IBTRKR41",6,0)
 N Y,Y0
"RTN","IBTRKR41",7,0)
 K IBRMARK
"RTN","IBTRKR41",8,0)
 I '$D(ZTQUEUED),($G(IBTALK)) W "."
"RTN","IBTRKR41",9,0)
 ;
"RTN","IBTRKR41",10,0)
 S IBOEDATA=$$SCE^IBSDU(IBOE),IBOESTAT=$P(IBOEDATA,"^",15)
"RTN","IBTRKR41",11,0)
 S DFN=$P(IBOEDATA,"^",2)
"RTN","IBTRKR41",12,0)
 I 'DFN G OPCHKQ
"RTN","IBTRKR41",13,0)
 I $P(IBOEDATA,"^",5) S IBVSIT=$P(IBOEDATA,"^",5) I '$$BDSRC^IBEFUNC3(IBVSIT) G OPCHKQ ;non-billable data sources
"RTN","IBTRKR41",14,0)
 ;
"RTN","IBTRKR41",15,0)
 ; -- see if tracking only insured and pt is insured/insured for outpt visits
"RTN","IBTRKR41",16,0)
 I $P(IBTRKR,"^",3)=1,'$$INSURED^IBCNS1(DFN,IBDT) G OPCHKQ ; patient not insured
"RTN","IBTRKR41",17,0)
 ;
"RTN","IBTRKR41",18,0)
 ; -- see if outpatient services are covered
"RTN","IBTRKR41",19,0)
 I '$$PTCOV^IBCNSU3(DFN,IBDT,"OUTPATIENT",.IBANY) S IBRMARK=$S($G(IBANY):"SERVICE NOT COVERED",1:"NOT INSURED")
"RTN","IBTRKR41",20,0)
 ;
"RTN","IBTRKR41",21,0)
 ; -- see if appointment type is billable
"RTN","IBTRKR41",22,0)
 I '$$RPT^IBEFUNC($P(IBOEDATA,"^",10),+IBOEDATA) S IBRMARK="NON-BILLABLE APPOINTMENT TYPE"
"RTN","IBTRKR41",23,0)
 ;
"RTN","IBTRKR41",24,0)
 ; -- check sc status, special conditions etc.
"RTN","IBTRKR41",25,0)
 I $G(IBRMARK)="" S IBRMARK=$$CL(IBOEDATA)
"RTN","IBTRKR41",26,0)
 ;
"RTN","IBTRKR41",27,0)
 ; -- check for non-billable stops or clinic
"RTN","IBTRKR41",28,0)
 S X=$P(IBOEDATA,"^",4) I X,$$NBCT^IBEFUNC(X,+IBOEDATA) S IBRMARK="NON-BILLABLE CLINIC"
"RTN","IBTRKR41",29,0)
 S X=$P(IBOEDATA,"^",3) I X,$$NBST^IBEFUNC(X,+IBOEDATA) S IBRMARK="NON-BILLABLE STOP CODE"
"RTN","IBTRKR41",30,0)
 ;
"RTN","IBTRKR41",31,0)
 ; -- ok to add to tracking module
"RTN","IBTRKR41",32,0)
 D OPT^IBTUTL1(DFN,IBOETYP,IBDT,IBOE,IBRMARK,$G(IBVSIT)) I '$D(ZTQUEUED),$G(IBTALK) W "+"
"RTN","IBTRKR41",33,0)
 I IBRMARK'="" S IBCNT2=IBCNT2+1
"RTN","IBTRKR41",34,0)
 I IBRMARK="" S IBCNT1=IBCNT1+1
"RTN","IBTRKR41",35,0)
OPCHKQ K IBANY,IBRMARK,VAEL,VA,IBOEDATA,IBVSIT,DFN,X,Y
"RTN","IBTRKR41",36,0)
 Q
"RTN","IBTRKR41",37,0)
 ;
"RTN","IBTRKR41",38,0)
BULL ; -- send bulletin
"RTN","IBTRKR41",39,0)
 ;
"RTN","IBTRKR41",40,0)
 S XMSUB="Outpatient Encounters added to Claims Tracking Complete"
"RTN","IBTRKR41",41,0)
 S IBT(1)="The process to automatically add Opt Encounters has successfully completed."
"RTN","IBTRKR41",42,0)
 S IBT(1.1)=""
"RTN","IBTRKR41",43,0)
 S IBT(2)="              Start Date: "_$$DAT1^IBOUTL(IBTSBDT)
"RTN","IBTRKR41",44,0)
 S IBT(3)="                End Date: "_$$DAT1^IBOUTL(IBTSEDT)
"RTN","IBTRKR41",45,0)
 I $D(IBMESS) S IBT(3.1)=IBMESS
"RTN","IBTRKR41",46,0)
 S IBT(4)=""
"RTN","IBTRKR41",47,0)
 S IBT(5)="            Total Encounters Checked: "_$G(IBCNT)
"RTN","IBTRKR41",48,0)
 S IBT(6)="              Total Encounters Added: "_$G(IBCNT1)
"RTN","IBTRKR41",49,0)
 S IBT(7)=" Total Non-billable Encounters Added: "_$G(IBCNT2)
"RTN","IBTRKR41",50,0)
 S IBT(8)=""
"RTN","IBTRKR41",51,0)
 S IBT(9)="*The SC, Agent Orange, Environmental Contaminate, Ionizing Radiation,"
"RTN","IBTRKR41",52,0)
 S IBT(10)="Military Sexual Trauma,Head Neck Cancer and Combat Veteran status"
"RTN","IBTRKR41",53,0)
 S IBT(11)="visits have been added for insured patients but automatically"
"RTN","IBTRKR41",54,0)
 S IBT(12)="indicated as not billable."
"RTN","IBTRKR41",55,0)
 D SEND^IBTRKR31
"RTN","IBTRKR41",56,0)
BULLQ Q
"RTN","IBTRKR41",57,0)
 ;
"RTN","IBTRKR41",58,0)
CL(IBOEDATA,IBR) ; check out classification questions for encounter
"RTN","IBTRKR41",59,0)
 ; this new check will look at the V POV level then to the Visit level
"RTN","IBTRKR41",60,0)
 ; as necessary to determine if it relates or not.  This will indicate
"RTN","IBTRKR41",61,0)
 ; if the WHOLE visit is not billable, otherwise it will say it is
"RTN","IBTRKR41",62,0)
 ; (even if just part is billable).
"RTN","IBTRKR41",63,0)
 ; call with the zero node of 409.68 in IBOEDATA
"RTN","IBTRKR41",64,0)
 ; assumes DFN and IBDT defined
"RTN","IBTRKR41",65,0)
 ; pass in IBR by ref to get values back
"RTN","IBTRKR41",66,0)
 ;
"RTN","IBTRKR41",67,0)
 N IBRMARK,IBPCEX,IBCPT,IBARR,IBP,IBDX,IBVRNB,IBENCL
"RTN","IBTRKR41",68,0)
 S IBRMARK="",IBPCEX=$P(IBOEDATA,"^",5)
"RTN","IBTRKR41",69,0)
 ;
"RTN","IBTRKR41",70,0)
 ; look up classification info needed (if any)
"RTN","IBTRKR41",71,0)
 D CL^SDCO21(DFN,IBDT,"",.IBARR) I '$D(IBARR) G CLQ
"RTN","IBTRKR41",72,0)
 ;
"RTN","IBTRKR41",73,0)
 ; if no PCE event use old approach
"RTN","IBTRKR41",74,0)
 I 'IBPCEX D:$G(IBOE)  G CLQ
"RTN","IBTRKR41",75,0)
 . S IBENCL=$$ENCL^IBAMTS2(IBOE) I IBENCL["1" D  ; return 1 in string if true "ao^ir^sc^ec^mst^hnc^cv"
"RTN","IBTRKR41",76,0)
 . I $P(IBENCL,"^",3) S IBRMARK="SC TREATMENT" Q
"RTN","IBTRKR41",77,0)
 . I $P(IBENCL,"^",1) S IBRMARK="AGENT ORANGE" Q
"RTN","IBTRKR41",78,0)
 . I $P(IBENCL,"^",2) S IBRMARK="IONIZING RADIATION" Q
"RTN","IBTRKR41",79,0)
 . I $P(IBENCL,"^",4) S IBRMARK="ENV. CONTAM." Q
"RTN","IBTRKR41",80,0)
 . I $P(IBENCL,"^",5) S IBRMARK="MILITARY SEXUAL TRAUMA" Q
"RTN","IBTRKR41",81,0)
 . I $P(IBENCL,"^",6) S IBRMARK="HEAD/NECK CANCER" Q
"RTN","IBTRKR41",82,0)
 . I $P(IBENCL,"^",7) S IBRMARK="COMBAT VETERAN" Q
"RTN","IBTRKR41",83,0)
 ;
"RTN","IBTRKR41",84,0)
 ; look up PCE info
"RTN","IBTRKR41",85,0)
 D ENCEVENT^PXKENC(IBPCEX)
"RTN","IBTRKR41",86,0)
 ;
"RTN","IBTRKR41",87,0)
 S IBVRNB=$$RNB($G(^TMP("PXKENC",$J,IBPCEX,"VST",IBPCEX,800)),.IBARR)
"RTN","IBTRKR41",88,0)
 ;
"RTN","IBTRKR41",89,0)
 ; find dx rnb's
"RTN","IBTRKR41",90,0)
 S IBDX=0 F  S IBDX=$O(^TMP("PXKENC",$J,IBPCEX,"POV",IBDX)) Q:'IBDX  S IBDX(+$G(^TMP("PXKENC",$J,IBPCEX,"POV",IBDX,0)))=$$RNB($G(^TMP("PXKENC",$J,IBPCEX,"POV",IBDX,800)),.IBARR)
"RTN","IBTRKR41",91,0)
 ;
"RTN","IBTRKR41",92,0)
 ; look for v cpt's with IBDX
"RTN","IBTRKR41",93,0)
 S IBCPT=0 F  S IBCPT=$O(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT)) Q:'IBCPT  F IBP=5,9,10,11 Q:'$D(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0))  D
"RTN","IBTRKR41",94,0)
 . ;
"RTN","IBTRKR41",95,0)
 . ; dx exists in v cpt but not v pov use visit level determination
"RTN","IBTRKR41",96,0)
 . I $P(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0),"^",IBP),'$D(IBDX($P(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0),"^",IBP))) D:IBVRNB REL(IBVRNB) Q
"RTN","IBTRKR41",97,0)
 . ;
"RTN","IBTRKR41",98,0)
 . ; use dx determination (where dx exists on v cpt)
"RTN","IBTRKR41",99,0)
 . I $P(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0),"^",IBP) D:$G(IBDX($P(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0),"^",IBP))) REL($G(IBDX($P(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0),"^",IBP)))) Q
"RTN","IBTRKR41",100,0)
 ;
"RTN","IBTRKR41",101,0)
 ; check for no assoc dx and apply visit level determination
"RTN","IBTRKR41",102,0)
 S IBCPT=0 F  S IBCPT=$O(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT)) Q:'IBCPT  D
"RTN","IBTRKR41",103,0)
 . S IBDX=0 F IBP=5,9,10,11 Q:IBDX  I +$P($G(^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT,0)),"^",IBP) S IBDX=1
"RTN","IBTRKR41",104,0)
 . I 'IBDX,IBVRNB D REL(IBVRNB)
"RTN","IBTRKR41",105,0)
 ;
"RTN","IBTRKR41",106,0)
 ; if some procedures left, then we need to bill, set return array
"RTN","IBTRKR41",107,0)
 I $D(^TMP("PXKENC",$J,IBPCEX,"CPT")) S IBRMARK="" M IBR=^TMP("PXKENC",$J,IBPCEX)
"RTN","IBTRKR41",108,0)
 ;
"RTN","IBTRKR41",109,0)
CLQ K ^TMP("PXKENC",$J)
"RTN","IBTRKR41",110,0)
 Q IBRMARK
"RTN","IBTRKR41",111,0)
 ;
"RTN","IBTRKR41",112,0)
RNB(IBDATA,IBARR) ; find rnb's
"RTN","IBTRKR41",113,0)
 ; pass in PCE 800 data (visit or v pov) to find any reasons not billalbe
"RTN","IBTRKR41",114,0)
 ; IBARR = classifications that could apply to patient
"RTN","IBTRKR41",115,0)
 ; the RNB number returned is from the IBARR number (SDCO21 array)
"RTN","IBTRKR41",116,0)
 N IBX,IBR S IBR=""
"RTN","IBTRKR41",117,0)
 S IBX=0 F  S IBX=$O(IBARR(IBX)) Q:'IBX!(IBR)  I $P(IBDATA,"^",$P($T(CLDATA+(IBX+1)),"^",2)) S IBR=IBX
"RTN","IBTRKR41",118,0)
 Q IBR
"RTN","IBTRKR41",119,0)
 ;
"RTN","IBTRKR41",120,0)
REL(IBRNB) ; kills of tmp if related and set IBRMARK
"RTN","IBTRKR41",121,0)
 K ^TMP("PXKENC",$J,IBPCEX,"CPT",IBCPT)
"RTN","IBTRKR41",122,0)
 S IBRMARK=$P($T(CLDATA+(IBRNB+1)),"^",3)
"RTN","IBTRKR41",123,0)
 Q
"RTN","IBTRKR41",124,0)
 ;
"RTN","IBTRKR41",125,0)
CLDATA ; classification data
"RTN","IBTRKR41",126,0)
 ; format is:  SCDO21 array^vpov/vcpt/visit 800 piece^reason not billable
"RTN","IBTRKR41",127,0)
 ;;1^2^AGENT ORANGE
"RTN","IBTRKR41",128,0)
 ;;2^3^IONIZING RADIATION
"RTN","IBTRKR41",129,0)
 ;;3^1^SC TREATMENT
"RTN","IBTRKR41",130,0)
 ;;4^4^ENV. CONTAM.
"RTN","IBTRKR41",131,0)
 ;;5^5^MILITARY SEXUAL TRAUMA
"RTN","IBTRKR41",132,0)
 ;;6^6^HEAD/NECK CANCER
"RTN","IBTRKR41",133,0)
 ;;7^7^COMBAT VETERAN
"RTN","IBTRKR41",134,0)
 ;
"VER")
8.0^22.0
"BLD",5813,6)
^SEQ #285
**END**
**END**
