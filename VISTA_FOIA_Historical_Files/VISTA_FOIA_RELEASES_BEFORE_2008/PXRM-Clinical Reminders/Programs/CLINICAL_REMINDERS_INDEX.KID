KIDS Distribution saved on Oct 26, 2004@11:01:34
Clinical Reminders Index build 10/26/2004
**KIDS**:PXRM*1.5*12^DG*5.3*478^GMPL*2.0*27^GMRV*5.0*6^LR*5.2*295^OR*3.0*157^PSO*7.0*118^PSS*1.0*89^PX*1.0*119^RA*5.0*33^YS*5.01*77^

**INSTALL NAME**
PXRM*1.5*12
"BLD",3750,0)
PXRM*1.5*12^CLINICAL REMINDERS^0^3041026^y
"BLD",3750,1,0)
^^2^2^3020826^^
"BLD",3750,1,1,0)
This patch creates the Clinical Reminder index global. See the National
"BLD",3750,1,2,0)
Patch module for a complete description.
"BLD",3750,4,0)
^9.64PA^800^1
"BLD",3750,4,800,0)
800
"BLD",3750,4,800,222)
y^y^f^^^^n
"BLD",3750,4,"B",800,800)

"BLD",3750,"INI")

"BLD",3750,"INID")

"BLD",3750,"INIT")
POST^PXRMP12I
"BLD",3750,"KRN",0)
^9.67PA^8989.52^19
"BLD",3750,"KRN",.4,0)
.4
"BLD",3750,"KRN",.401,0)
.401
"BLD",3750,"KRN",.402,0)
.402
"BLD",3750,"KRN",.403,0)
.403
"BLD",3750,"KRN",.5,0)
.5
"BLD",3750,"KRN",.84,0)
.84
"BLD",3750,"KRN",3.6,0)
3.6
"BLD",3750,"KRN",3.8,0)
3.8
"BLD",3750,"KRN",9.2,0)
9.2
"BLD",3750,"KRN",9.8,0)
9.8
"BLD",3750,"KRN",9.8,"NM",0)
^9.68A^16^15
"BLD",3750,"KRN",9.8,"NM",1,0)
PXRMP12I^^0^B400427
"BLD",3750,"KRN",9.8,"NM",2,0)
PXRMSXRD^^1^
"BLD",3750,"KRN",9.8,"NM",3,0)
PXRMSXRG^^1^
"BLD",3750,"KRN",9.8,"NM",4,0)
PXRMSXRL^^1^
"BLD",3750,"KRN",9.8,"NM",5,0)
PXRMSXRM^^0^B32574684
"BLD",3750,"KRN",9.8,"NM",6,0)
PXRMSXRO^^1^
"BLD",3750,"KRN",9.8,"NM",7,0)
PXRMSXRP^^1^
"BLD",3750,"KRN",9.8,"NM",8,0)
PXRMSXRV^^1^
"BLD",3750,"KRN",9.8,"NM",9,0)
PXRMSXRW^^1^
"BLD",3750,"KRN",9.8,"NM",10,0)
PXRMXRFK^^1^
"BLD",3750,"KRN",9.8,"NM",11,0)
PXRMXRFS^^1^
"BLD",3750,"KRN",9.8,"NM",12,0)
PXRMSXRA^^1^
"BLD",3750,"KRN",9.8,"NM",13,0)
PXRMSXRB^^1^
"BLD",3750,"KRN",9.8,"NM",14,0)
PXRMXLAB^^1^
"BLD",3750,"KRN",9.8,"NM",16,0)
PXRMINDC^^0^B57559469
"BLD",3750,"KRN",9.8,"NM","B","PXRMINDC",16)

"BLD",3750,"KRN",9.8,"NM","B","PXRMP12I",1)

"BLD",3750,"KRN",9.8,"NM","B","PXRMSXRA",12)

"BLD",3750,"KRN",9.8,"NM","B","PXRMSXRB",13)

"BLD",3750,"KRN",9.8,"NM","B","PXRMSXRD",2)

"BLD",3750,"KRN",9.8,"NM","B","PXRMSXRG",3)

"BLD",3750,"KRN",9.8,"NM","B","PXRMSXRL",4)

"BLD",3750,"KRN",9.8,"NM","B","PXRMSXRM",5)

"BLD",3750,"KRN",9.8,"NM","B","PXRMSXRO",6)

"BLD",3750,"KRN",9.8,"NM","B","PXRMSXRP",7)

"BLD",3750,"KRN",9.8,"NM","B","PXRMSXRV",8)

"BLD",3750,"KRN",9.8,"NM","B","PXRMSXRW",9)

"BLD",3750,"KRN",9.8,"NM","B","PXRMXLAB",14)

"BLD",3750,"KRN",9.8,"NM","B","PXRMXRFK",10)

"BLD",3750,"KRN",9.8,"NM","B","PXRMXRFS",11)

"BLD",3750,"KRN",19,0)
19
"BLD",3750,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",3750,"KRN",19,"NM",1,0)
PXRM INDEX BUILD^^0
"BLD",3750,"KRN",19,"NM",2,0)
PXRM INDEX MANAGEMENT^^0
"BLD",3750,"KRN",19,"NM",3,0)
PXRM INDEX COUNT^^0
"BLD",3750,"KRN",19,"NM","B","PXRM INDEX BUILD",1)

"BLD",3750,"KRN",19,"NM","B","PXRM INDEX COUNT",3)

"BLD",3750,"KRN",19,"NM","B","PXRM INDEX MANAGEMENT",2)

"BLD",3750,"KRN",19.1,0)
19.1
"BLD",3750,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",3750,"KRN",101,0)
101
"BLD",3750,"KRN",409.61,0)
409.61
"BLD",3750,"KRN",771,0)
771
"BLD",3750,"KRN",870,0)
870
"BLD",3750,"KRN",8989.51,0)
8989.51
"BLD",3750,"KRN",8989.52,0)
8989.52
"BLD",3750,"KRN",8994,0)
8994
"BLD",3750,"KRN","B",.4,.4)

"BLD",3750,"KRN","B",.401,.401)

"BLD",3750,"KRN","B",.402,.402)

"BLD",3750,"KRN","B",.403,.403)

"BLD",3750,"KRN","B",.5,.5)

"BLD",3750,"KRN","B",.84,.84)

"BLD",3750,"KRN","B",3.6,3.6)

"BLD",3750,"KRN","B",3.8,3.8)

"BLD",3750,"KRN","B",9.2,9.2)

"BLD",3750,"KRN","B",9.8,9.8)

"BLD",3750,"KRN","B",19,19)

"BLD",3750,"KRN","B",19.1,19.1)

"BLD",3750,"KRN","B",101,101)

"BLD",3750,"KRN","B",409.61,409.61)

"BLD",3750,"KRN","B",771,771)

"BLD",3750,"KRN","B",870,870)

"BLD",3750,"KRN","B",8989.51,8989.51)

"BLD",3750,"KRN","B",8989.52,8989.52)

"BLD",3750,"KRN","B",8994,8994)

"BLD",3750,"PRE")

"BLD",3750,"QUES",0)
^9.62^^
"BLD",3750,"REQB",0)
^9.611^4^4
"BLD",3750,"REQB",1,0)
DI*22.0*95^2
"BLD",3750,"REQB",2,0)
PXRM*1.5*11^2
"BLD",3750,"REQB",3,0)
PSJ*5.0*90^2
"BLD",3750,"REQB",4,0)
DI*22.0*140^2
"BLD",3750,"REQB","B","DI*22.0*140",4)

"BLD",3750,"REQB","B","DI*22.0*95",1)

"BLD",3750,"REQB","B","PSJ*5.0*90",3)

"BLD",3750,"REQB","B","PXRM*1.5*11",2)

"FIA",800)
CLINICAL REMINDER PARAMETERS
"FIA",800,0)
^PXRM(800,
"FIA",800,0,0)
800O
"FIA",800,0,1)
y^y^f^^^^n
"FIA",800,0,10)

"FIA",800,0,11)

"FIA",800,0,"RLRO")

"FIA",800,0,"VR")
1.5^PXRM
"FIA",800,800)
0
"FIA",800,800.01)
0
"FIA",800,800.02)
0
"FIA",800,800.04)
0
"FIA",800,800.41)
0
"INIT")
POST^PXRMP12I
"KRN",19,8955,-1)
0^1
"KRN",19,8955,0)
PXRM INDEX BUILD^Clinical Reminders Index Build^^R^^^^^^^^CLINICAL REMINDERS^^
"KRN",19,8955,1,0)
^19.06^1^1^3030630^^
"KRN",19,8955,1,1,0)
This option runs the Clinical Reminders index building utility.
"KRN",19,8955,10.1)
PXRM INDEX BUILD
"KRN",19,8955,20)

"KRN",19,8955,25)
INDEX^PXRMSXRM
"KRN",19,8955,"U")
CLINICAL REMINDERS INDEX BUILD
"KRN",19,9093,-1)
0^3
"KRN",19,9093,0)
PXRM INDEX COUNT^Clinical Reminders Index Count^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,9093,1,0)
^^1^1^3030620^
"KRN",19,9093,1,1,0)
This option executes the Clinical Reminder index counting utility.
"KRN",19,9093,10.1)
PXRM INDEX COUNT
"KRN",19,9093,25)
COUNT^PXRMINDC
"KRN",19,9093,"U")
CLINICAL REMINDERS INDEX COUNT
"KRN",19,9094,-1)
0^2
"KRN",19,9094,0)
PXRM INDEX MANAGEMENT^PXRM INDEX MANAGEMENT^^M^^^^^^^^CLINICAL REMINDERS
"KRN",19,9094,1,0)
^^1^1^3030620^
"KRN",19,9094,1,1,0)
This is the Clinical Reminders index management menu.
"KRN",19,9094,10,0)
^19.01IP^2^2
"KRN",19,9094,10,1,0)
8955^IB^5
"KRN",19,9094,10,1,"^")
PXRM INDEX BUILD
"KRN",19,9094,10,2,0)
9093^IC^10
"KRN",19,9094,10,2,"^")
PXRM INDEX COUNT
"KRN",19,9094,10.1)
PXRM INDEX MANAGEMENT
"KRN",19,9094,99)
59340,55291
"KRN",19,9094,"U")
PXRM INDEX MANAGEMENT
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",364,-1)
1^1
"PKG",364,0)
CLINICAL REMINDERS^PXRM^Clinical Reminders^^^3011030
"PKG",364,20,0)
^9.402P^^
"PKG",364,22,0)
^9.49I^1^1
"PKG",364,22,1,0)
1.5^3000619^3000622^1342
"PKG",364,22,1,"PAH",1,0)
12^3041026
"PKG",364,22,1,"PAH",1,1,0)
^^2^2^3041026
"PKG",364,22,1,"PAH",1,1,1,0)
This patch creates the Clinical Reminder index global. See the National
"PKG",364,22,1,"PAH",1,1,2,0)
Patch module for a complete description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
15
"RTN","PXRMINDC")
0^16^B57559469
"RTN","PXRMINDC",1,0)
PXRMINDC ; SLC/PKR - Index counting routines. ;06/26/2003
"RTN","PXRMINDC",2,0)
 ;;1.5;CLINICAL REMINDERS;**12**;Jun 19, 2000
"RTN","PXRMINDC",3,0)
 ;
"RTN","PXRMINDC",4,0)
 ;========================================================
"RTN","PXRMINDC",5,0)
CNT5(FILENUM,COUNT) ;Get date counts for indexes where the date
"RTN","PXRMINDC",6,0)
 ;is at subscript 5. Works for file numbers:
"RTN","PXRMINDC",7,0)
 ;63, 70, 120.5, 601.2,
"RTN","PXRMINDC",8,0)
 ;9000010.11, 9000010.12, 9000010.13, 9000010.16, 9000010.23
"RTN","PXRMINDC",9,0)
 N DAS,DATE,DFN,IND,ITEM,YEAR
"RTN","PXRMINDC",10,0)
 I '$D(ZTQUEUED) W !,"Counting file number "_FILENUM
"RTN","PXRMINDC",11,0)
 S IND=0
"RTN","PXRMINDC",12,0)
 S DFN=""
"RTN","PXRMINDC",13,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,"PI",DFN)) Q:DFN=""  D
"RTN","PXRMINDC",14,0)
 . S IND=IND+1
"RTN","PXRMINDC",15,0)
 . I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDC",16,0)
 . S ITEM=""
"RTN","PXRMINDC",17,0)
 . F  S ITEM=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDC",18,0)
 .. S DATE=""
"RTN","PXRMINDC",19,0)
 .. F  S DATE=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDC",20,0)
 ... S YEAR=$E(DATE,1,3)
"RTN","PXRMINDC",21,0)
 ... S DAS=""
"RTN","PXRMINDC",22,0)
 ... F  S DAS=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDC",23,0)
 .... S COUNT(YEAR)=$G(COUNT(YEAR))+1
"RTN","PXRMINDC",24,0)
 Q
"RTN","PXRMINDC",25,0)
 ;
"RTN","PXRMINDC",26,0)
 ;========================================================
"RTN","PXRMINDC",27,0)
CNT6(FILENUM,COUNT) ;Get date counts for indexes where the date
"RTN","PXRMINDC",28,0)
 ;is at subscript 6. Works for file numbers:
"RTN","PXRMINDC",29,0)
 ;9000010.07, 9000010.18
"RTN","PXRMINDC",30,0)
 N DAS,DATE,DFN,IND,ITEM,TYPE,YEAR
"RTN","PXRMINDC",31,0)
 I '$D(ZTQUEUED) W !,"Counting file number "_FILENUM
"RTN","PXRMINDC",32,0)
 S IND=0
"RTN","PXRMINDC",33,0)
 S DFN=""
"RTN","PXRMINDC",34,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,"PPI",DFN)) Q:DFN=""  D
"RTN","PXRMINDC",35,0)
 . S IND=IND+1
"RTN","PXRMINDC",36,0)
 . I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDC",37,0)
 . S TYPE=""
"RTN","PXRMINDC",38,0)
 . F  S TYPE=$O(^PXRMINDX(FILENUM,"PPI",DFN,TYPE)) Q:TYPE=""  D
"RTN","PXRMINDC",39,0)
 .. S ITEM=""
"RTN","PXRMINDC",40,0)
 .. F  S ITEM=$O(^PXRMINDX(FILENUM,"PPI",DFN,TYPE,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDC",41,0)
 ... S DATE=""
"RTN","PXRMINDC",42,0)
 ... F  S DATE=$O(^PXRMINDX(FILENUM,"PPI",DFN,TYPE,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDC",43,0)
 .... S YEAR=$E(DATE,1,3)
"RTN","PXRMINDC",44,0)
 .... S DAS=""
"RTN","PXRMINDC",45,0)
 .... F  S DAS=$O(^PXRMINDX(FILENUM,"PPI",DFN,TYPE,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDC",46,0)
 ..... S COUNT(YEAR)=$G(COUNT(YEAR))+1
"RTN","PXRMINDC",47,0)
 Q
"RTN","PXRMINDC",48,0)
 ;
"RTN","PXRMINDC",49,0)
 ;========================================================
"RTN","PXRMINDC",50,0)
CNTPL(FILENUM,COUNT) ;Get date counts for Problem List indexes where the
"RTN","PXRMINDC",51,0)
 ;date is at subscript 7. Works for file numbers:
"RTN","PXRMINDC",52,0)
 ;9000011
"RTN","PXRMINDC",53,0)
 N DAS,DATE,DFN,IND,ITEM,PRIORITY,STATUS,TYPE,YEAR
"RTN","PXRMINDC",54,0)
 I '$D(ZTQUEUED) W !,"Counting file number "_FILENUM
"RTN","PXRMINDC",55,0)
 S IND=0
"RTN","PXRMINDC",56,0)
 S DFN=""
"RTN","PXRMINDC",57,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,"PSPI",DFN)) Q:DFN=""  D
"RTN","PXRMINDC",58,0)
 . S IND=IND+1
"RTN","PXRMINDC",59,0)
 . I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDC",60,0)
 . S STATUS=""
"RTN","PXRMINDC",61,0)
 . F  S STATUS=$O(^PXRMINDX(FILENUM,"PSPI",DFN,STATUS)) Q:STATUS=""  D
"RTN","PXRMINDC",62,0)
 .. S PRIORITY=""
"RTN","PXRMINDC",63,0)
 .. F  S PRIORITY=$O(^PXRMINDX(FILENUM,"PSPI",DFN,STATUS,PRIORITY)) Q:PRIORITY=""  D
"RTN","PXRMINDC",64,0)
 ... S ITEM=""
"RTN","PXRMINDC",65,0)
 ... F  S ITEM=$O(^PXRMINDX(FILENUM,"PSPI",DFN,STATUS,PRIORITY,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDC",66,0)
 .... S DATE=""
"RTN","PXRMINDC",67,0)
 .... F  S DATE=$O(^PXRMINDX(FILENUM,"PSPI",DFN,STATUS,PRIORITY,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDC",68,0)
 ..... S YEAR=$E(DATE,1,3)
"RTN","PXRMINDC",69,0)
 ..... S DAS=""
"RTN","PXRMINDC",70,0)
 ..... F  S DAS=$O(^PXRMINDX(FILENUM,"PSPI",DFN,STATUS,PRIORITY,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDC",71,0)
 ...... S COUNT(YEAR)=$G(COUNT(YEAR))+1
"RTN","PXRMINDC",72,0)
 Q
"RTN","PXRMINDC",73,0)
 ;
"RTN","PXRMINDC",74,0)
 ;========================================================
"RTN","PXRMINDC",75,0)
CNTPTF(FILENUM,COUNT) ;Get date counts for PTF indexes where the
"RTN","PXRMINDC",76,0)
 ;date is at subscript 7. Works for file numbers:
"RTN","PXRMINDC",77,0)
 ;45
"RTN","PXRMINDC",78,0)
 N DAS,DATE,DFN,IND,ITEM,NODE,TYPE,YEAR
"RTN","PXRMINDC",79,0)
 I '$D(ZTQUEUED) W !,"Counting file number "_FILENUM
"RTN","PXRMINDC",80,0)
 S IND=0
"RTN","PXRMINDC",81,0)
 F TYPE="ICD0","ICD9" D
"RTN","PXRMINDC",82,0)
 . S DFN=""
"RTN","PXRMINDC",83,0)
 . F  S DFN=$O(^PXRMINDX(FILENUM,TYPE,"PNI",DFN)) Q:DFN=""  D
"RTN","PXRMINDC",84,0)
 .. S IND=IND+1
"RTN","PXRMINDC",85,0)
 .. I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDC",86,0)
 .. S NODE=""
"RTN","PXRMINDC",87,0)
 .. F  S NODE=$O(^PXRMINDX(FILENUM,TYPE,"PNI",DFN,NODE)) Q:NODE=""  D
"RTN","PXRMINDC",88,0)
 ... S ITEM=""
"RTN","PXRMINDC",89,0)
 ... F  S ITEM=$O(^PXRMINDX(FILENUM,TYPE,"PNI",DFN,NODE,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDC",90,0)
 .... S DATE=""
"RTN","PXRMINDC",91,0)
 .... F  S DATE=$O(^PXRMINDX(FILENUM,TYPE,"PNI",DFN,NODE,ITEM,DATE)) Q:DATE=""  D
"RTN","PXRMINDC",92,0)
 ..... S YEAR=$E(DATE,1,3)
"RTN","PXRMINDC",93,0)
 ..... S DAS=""
"RTN","PXRMINDC",94,0)
 ..... F  S DAS=$O(^PXRMINDX(FILENUM,TYPE,"PNI",DFN,NODE,ITEM,DATE,DAS)) Q:DAS=""  D
"RTN","PXRMINDC",95,0)
 ...... S COUNT(YEAR)=$G(COUNT(YEAR))+1
"RTN","PXRMINDC",96,0)
 Q
"RTN","PXRMINDC",97,0)
 ;
"RTN","PXRMINDC",98,0)
 ;========================================================
"RTN","PXRMINDC",99,0)
CNTSS(FILENUM,COUNT) ;Get date counts for indexes where the start date
"RTN","PXRMINDC",100,0)
 ;is at subscript 5 and the stop date is at subscript 6.
"RTN","PXRMINDC",101,0)
 ;Works for file numbers: 52, 55, 100
"RTN","PXRMINDC",102,0)
 N DAS,DFN,IND,ITEM,START,STOP,YEAR
"RTN","PXRMINDC",103,0)
 I '$D(ZTQUEUED) W !,"Counting file number "_FILENUM
"RTN","PXRMINDC",104,0)
 S IND=0
"RTN","PXRMINDC",105,0)
 S DFN=""
"RTN","PXRMINDC",106,0)
 F  S DFN=$O(^PXRMINDX(FILENUM,"PI",DFN)) Q:DFN=""  D
"RTN","PXRMINDC",107,0)
 . S IND=IND+1
"RTN","PXRMINDC",108,0)
 . I '$D(ZTQUEUED),(IND#10000=0) W "."
"RTN","PXRMINDC",109,0)
 . S ITEM=""
"RTN","PXRMINDC",110,0)
 . F  S ITEM=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM)) Q:ITEM=""  D
"RTN","PXRMINDC",111,0)
 .. S START=""
"RTN","PXRMINDC",112,0)
 .. F  S START=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,START)) Q:START=""  D
"RTN","PXRMINDC",113,0)
 ... S YEAR=$E(START,1,3)
"RTN","PXRMINDC",114,0)
 ... S STOP=""
"RTN","PXRMINDC",115,0)
 ... F  S STOP=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,START,STOP)) Q:STOP=""  D
"RTN","PXRMINDC",116,0)
 .... S DAS=""
"RTN","PXRMINDC",117,0)
 .... F  S DAS=$O(^PXRMINDX(FILENUM,"PI",DFN,ITEM,START,STOP,DAS)) Q:DAS=""  D
"RTN","PXRMINDC",118,0)
 ..... S COUNT(YEAR)=$G(COUNT(YEAR))+1
"RTN","PXRMINDC",119,0)
 Q
"RTN","PXRMINDC",120,0)
 ;
"RTN","PXRMINDC",121,0)
 ;========================================================
"RTN","PXRMINDC",122,0)
COUNT ;Driver for making index counts.
"RTN","PXRMINDC",123,0)
 N GBL,LIST,TASKIT
"RTN","PXRMINDC",124,0)
 W !,"Which indexes do you want to count?"
"RTN","PXRMINDC",125,0)
 D SEL^PXRMSXRM(.LIST,.GBL)
"RTN","PXRMINDC",126,0)
 I LIST="" Q
"RTN","PXRMINDC",127,0)
 ;See if this should be tasked.
"RTN","PXRMINDC",128,0)
 S TASKIT=$$ASKTASK^PXRMSXRM
"RTN","PXRMINDC",129,0)
 I TASKIT D
"RTN","PXRMINDC",130,0)
 . W !,"Queue the Clinical Reminders index count."
"RTN","PXRMINDC",131,0)
 . D TASKIT(LIST,.GBL,.ROUTINE)
"RTN","PXRMINDC",132,0)
 E  D RUNNOW(LIST,.GBL)
"RTN","PXRMINDC",133,0)
 Q
"RTN","PXRMINDC",134,0)
 ;
"RTN","PXRMINDC",135,0)
 ;========================================================
"RTN","PXRMINDC",136,0)
MESSAGE(FILENUM,COUNT,TOTAL,START,END) ;Build the MailMan message giving the
"RTN","PXRMINDC",137,0)
 ;count breakdown.
"RTN","PXRMINDC",138,0)
 N COFF,GLOBAL,IND,ML,PERC,TEXT,YEAR,XMSUB
"RTN","PXRMINDC",139,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMINDC",140,0)
 S ML=$$MAX^XLFMTH($L(TOTAL)+2,8)
"RTN","PXRMINDC",141,0)
 S COFF=ML-5
"RTN","PXRMINDC",142,0)
 S GLOBAL=^PXRMINDX(FILENUM,"GLOBAL NAME")
"RTN","PXRMINDC",143,0)
 S NAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXRMINDC",144,0)
 S XMSUB="Yearly data distribution for global "_GLOBAL
"RTN","PXRMINDC",145,0)
 S ^TMP("PXRMXMZ",$J,1,0)="File name: "_NAME
"RTN","PXRMINDC",146,0)
 S ^TMP("PXRMXMZ",$J,2,0)="Count finished at "_$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMINDC",147,0)
 S ^TMP("PXRMXMZ",$J,3,0)=$$ETIME^PXRMSXRM(START,END)
"RTN","PXRMINDC",148,0)
 S ^TMP("PXRMXMZ",$J,4,0)=" "
"RTN","PXRMINDC",149,0)
 S ^TMP("PXRMXMZ",$J,5,0)="Year"_$$INSCHR^PXRMEXLC(COFF," ")_"Count"_$J("%",8)
"RTN","PXRMINDC",150,0)
 S ^TMP("PXRMXMZ",$J,6,0)="----"_$$INSCHR^PXRMEXLC(COFF," ")_"-----"_$J("-----",10)
"RTN","PXRMINDC",151,0)
 S IND=6
"RTN","PXRMINDC",152,0)
 S YEAR=""
"RTN","PXRMINDC",153,0)
 F  S YEAR=$O(COUNT(YEAR)) Q:YEAR=""  D
"RTN","PXRMINDC",154,0)
 . S PERC=100*COUNT(YEAR)/TOTAL
"RTN","PXRMINDC",155,0)
 . S TEXT=YEAR_$J(COUNT(YEAR),ML,0)_$J(PERC,10,2)
"RTN","PXRMINDC",156,0)
 . S IND=IND+1,^TMP("PXRMXMZ",$J,IND,0)=TEXT
"RTN","PXRMINDC",157,0)
 S IND=IND+1,^TMP("PXRMXMZ",$J,IND,0)=" "
"RTN","PXRMINDC",158,0)
 S TEXT="Total entries: "_TOTAL
"RTN","PXRMINDC",159,0)
 S IND=IND+1,^TMP("PXRMXMZ",$J,IND,0)=TEXT
"RTN","PXRMINDC",160,0)
 D SEND^PXRMMSG(XMSUB)
"RTN","PXRMINDC",161,0)
 Q
"RTN","PXRMINDC",162,0)
 ;
"RTN","PXRMINDC",163,0)
 ;===============================================================
"RTN","PXRMINDC",164,0)
RUNNOW(LIST,GBL) ;Run the routines now.
"RTN","PXRMINDC",165,0)
 N COUNT,END,FN,IND,LI,NUM,ROUTINE,RTN,START,TOTAL
"RTN","PXRMINDC",166,0)
 S ROUTINE(45)="CNTPTF^PXRMINDC"
"RTN","PXRMINDC",167,0)
 S ROUTINE(52)="CNTSS^PXRMINDC"
"RTN","PXRMINDC",168,0)
 S ROUTINE(55)="CNTSS^PXRMINDC"
"RTN","PXRMINDC",169,0)
 S ROUTINE(63)="CNT5^PXRMINDC"
"RTN","PXRMINDC",170,0)
 S ROUTINE(70)="CNT5^PXRMINDC"
"RTN","PXRMINDC",171,0)
 S ROUTINE(100)="CNTSS^PXRMINDC"
"RTN","PXRMINDC",172,0)
 S ROUTINE(120.5)="CNT5^PXRMINDC"
"RTN","PXRMINDC",173,0)
 S ROUTINE(601.2)="CNT5^PXRMINDC"
"RTN","PXRMINDC",174,0)
 S ROUTINE(9000011)="CNTPL^PXRMINDC"
"RTN","PXRMINDC",175,0)
 S ROUTINE(9000010.07)="CNT6^PXRMINDC"
"RTN","PXRMINDC",176,0)
 S ROUTINE(9000010.11)="CNT5^PXRMINDC"
"RTN","PXRMINDC",177,0)
 S ROUTINE(9000010.12)="CNT5^PXRMINDC"
"RTN","PXRMINDC",178,0)
 S ROUTINE(9000010.13)="CNT5^PXRMINDC"
"RTN","PXRMINDC",179,0)
 S ROUTINE(9000010.16)="CNT5^PXRMINDC"
"RTN","PXRMINDC",180,0)
 S ROUTINE(9000010.18)="CNT6^PXRMINDC"
"RTN","PXRMINDC",181,0)
 S ROUTINE(9000010.23)="CNT5^PXRMINDC"
"RTN","PXRMINDC",182,0)
 S NUM=$L(LIST,",")-1
"RTN","PXRMINDC",183,0)
 F IND=1:1:NUM D
"RTN","PXRMINDC",184,0)
 . S LI=$P(LIST,",",IND)
"RTN","PXRMINDC",185,0)
 . S FN=GBL(LI)
"RTN","PXRMINDC",186,0)
 . S RTN=ROUTINE(FN)
"RTN","PXRMINDC",187,0)
 . S RTN=RTN_"("_FN_",.COUNT)"
"RTN","PXRMINDC",188,0)
 . S START=$H
"RTN","PXRMINDC",189,0)
 . K COUNT
"RTN","PXRMINDC",190,0)
 . D @RTN
"RTN","PXRMINDC",191,0)
 . S END=$H
"RTN","PXRMINDC",192,0)
 . D TOTAL(.COUNT,.TOTAL)
"RTN","PXRMINDC",193,0)
 . D MESSAGE(FN,.COUNT,TOTAL,START,END)
"RTN","PXRMINDC",194,0)
 Q
"RTN","PXRMINDC",195,0)
 ;
"RTN","PXRMINDC",196,0)
 ;===============================================================
"RTN","PXRMINDC",197,0)
TASKIT(LIST,GBL,ROUTINE) ;Count the indexes as a tasked job.
"RTN","PXRMINDC",198,0)
 N DIR,DTOUT,DUOUT,MINDT,SDTIME,X,Y
"RTN","PXRMINDC",199,0)
 S MINDT=$$NOW^XLFDT
"RTN","PXRMINDC",200,0)
 ;W !,"Queue the Clinical Reminders index counting job."
"RTN","PXRMINDC",201,0)
 S DIR("A",1)="Enter the date and time you want the job to start."
"RTN","PXRMINDC",202,0)
 S DIR("A")="It must be after "_$$FMTE^XLFDT(MINDT,"5Z")_" "
"RTN","PXRMINDC",203,0)
 S DIR(0)="DAU"_U_MINDT_"::RSX"
"RTN","PXRMINDC",204,0)
 D ^DIR
"RTN","PXRMINDC",205,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMINDC",206,0)
 S SDTIME=Y
"RTN","PXRMINDC",207,0)
 K DIR
"RTN","PXRMINDC",208,0)
 ;Put the task into the queue.
"RTN","PXRMINDC",209,0)
 K ZTSAVE
"RTN","PXRMINDC",210,0)
 S ZTSAVE("LIST")=""
"RTN","PXRMINDC",211,0)
 S ZTSAVE("GBL(")=""
"RTN","PXRMINDC",212,0)
 S ZTRTN="TASKJOB^PXRMINDC"
"RTN","PXRMINDC",213,0)
 S ZTDESC="Clinical Reminders index count"
"RTN","PXRMINDC",214,0)
 S ZTDTH=SDTIME
"RTN","PXRMINDC",215,0)
 S ZTIO=""
"RTN","PXRMINDC",216,0)
 D ^%ZTLOAD
"RTN","PXRMINDC",217,0)
 W !,"Task number ",ZTSK," queued."
"RTN","PXRMINDC",218,0)
 Q
"RTN","PXRMINDC",219,0)
 ;
"RTN","PXRMINDC",220,0)
 ;===============================================================
"RTN","PXRMINDC",221,0)
TASKJOB ;Execute as tasked job. LIST and GBL come through ZTSAVE.
"RTN","PXRMINDC",222,0)
 N IND,LI,NUM
"RTN","PXRMINDC",223,0)
 S ZTREQ="@"
"RTN","PXRMINDC",224,0)
 S ZTSTOP=0
"RTN","PXRMINDC",225,0)
 S NUM=$L(LIST,",")-1
"RTN","PXRMINDC",226,0)
 F IND=1:1:NUM D
"RTN","PXRMINDC",227,0)
 .;Check to see if the task has had a stop request
"RTN","PXRMINDC",228,0)
 . I $$S^%ZTLOAD S ZTSTOP=1,IND=NUM Q
"RTN","PXRMINDC",229,0)
 . S LI=$P(LIST,",",IND)_","
"RTN","PXRMINDC",230,0)
 . D RUNNOW^PXRMINDC(LI,.GBL)
"RTN","PXRMINDC",231,0)
 Q
"RTN","PXRMINDC",232,0)
 ;
"RTN","PXRMINDC",233,0)
 ;========================================================
"RTN","PXRMINDC",234,0)
TOTAL(COUNT,TOTAL) ;Convert the FileMan years in COUNT to regular
"RTN","PXRMINDC",235,0)
 ;years get the total number of entries in count.
"RTN","PXRMINDC",236,0)
 N TC,YEAR
"RTN","PXRMINDC",237,0)
 S TOTAL=0
"RTN","PXRMINDC",238,0)
 S YEAR=""
"RTN","PXRMINDC",239,0)
 F  S YEAR=$O(COUNT(YEAR)) Q:YEAR=""  D
"RTN","PXRMINDC",240,0)
 . S TOTAL=TOTAL+COUNT(YEAR)
"RTN","PXRMINDC",241,0)
 . S TC(YEAR+1700)=COUNT(YEAR)
"RTN","PXRMINDC",242,0)
 K COUNT
"RTN","PXRMINDC",243,0)
 M COUNT=TC
"RTN","PXRMINDC",244,0)
 Q
"RTN","PXRMINDC",245,0)
 ;
"RTN","PXRMP12I")
0^1^B400427
"RTN","PXRMP12I",1,0)
PXRMP12I ; SLC/PKR - Inits for PXRM*1.5*12. ;10/15/2002
"RTN","PXRMP12I",2,0)
 ;;1.5;CLINICAL REMINDERS;**12**;Jun 19, 2000
"RTN","PXRMP12I",3,0)
 ;
"RTN","PXRMP12I",4,0)
 Q
"RTN","PXRMP12I",5,0)
 ;===============================================================
"RTN","PXRMP12I",6,0)
DCERRMSG(MSG,XREF) ;Display cross-reference creation error message.
"RTN","PXRMP12I",7,0)
 W !,"Cross-reference could not be created!"
"RTN","PXRMP12I",8,0)
 W !,"Error message:"
"RTN","PXRMP12I",9,0)
 D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMP12I",10,0)
 W !!,"Cross-reference information:"
"RTN","PXRMP12I",11,0)
 D AWRITE^PXRMUTIL("XREF")
"RTN","PXRMP12I",12,0)
 Q
"RTN","PXRMP12I",13,0)
 ;
"RTN","PXRMP12I",14,0)
 ;===============================================================
"RTN","PXRMP12I",15,0)
POST ;Post-init
"RTN","PXRMP12I",16,0)
 S ^PXRM(800,1,"MIERR")=200
"RTN","PXRMP12I",17,0)
 Q
"RTN","PXRMP12I",18,0)
 ;
"RTN","PXRMSXRA")
1^12
"RTN","PXRMSXRB")
1^13
"RTN","PXRMSXRD")
1^2
"RTN","PXRMSXRG")
1^3
"RTN","PXRMSXRL")
1^4
"RTN","PXRMSXRM")
0^5^B32574684
"RTN","PXRMSXRM",1,0)
PXRMSXRM ; SLC/PKR - Main driver for building indexes. ;10/15/2004
"RTN","PXRMSXRM",2,0)
 ;;1.5;CLINICAL REMINDERS;**12**;Jun 19, 2000
"RTN","PXRMSXRM",3,0)
 ;
"RTN","PXRMSXRM",4,0)
 Q
"RTN","PXRMSXRM",5,0)
 ;===============================================================
"RTN","PXRMSXRM",6,0)
ADDERROR(GLOBAL,IDEN,NERROR) ;Add to the error list.
"RTN","PXRMSXRM",7,0)
 S NERROR=NERROR+1
"RTN","PXRMSXRM",8,0)
 S ^TMP("PXRMERROR",$J,NERROR,0)="GLOBAL: "_GLOBAL_" ENTRY: "_IDEN
"RTN","PXRMSXRM",9,0)
 Q
"RTN","PXRMSXRM",10,0)
 ;
"RTN","PXRMSXRM",11,0)
 ;===============================================================
"RTN","PXRMSXRM",12,0)
ASKTASK() ;See if this should be tasked.
"RTN","PXRMSXRM",13,0)
 N DIR,X,Y
"RTN","PXRMSXRM",14,0)
 S DIR(0)="YO"
"RTN","PXRMSXRM",15,0)
 S DIR("A")="Do you want this to be tasked"
"RTN","PXRMSXRM",16,0)
 S DIR("B")="Y"
"RTN","PXRMSXRM",17,0)
 D ^DIR
"RTN","PXRMSXRM",18,0)
 I $D(DUOUT)!$D(DTOUT) Q ""
"RTN","PXRMSXRM",19,0)
 Q Y
"RTN","PXRMSXRM",20,0)
 ;
"RTN","PXRMSXRM",21,0)
 ;===============================================================
"RTN","PXRMSXRM",22,0)
COMMSG(GLOBAL,START,END,NE,NERROR) ;Send a MailMan message providing
"RTN","PXRMSXRM",23,0)
 ;notification that the indexing completed.
"RTN","PXRMSXRM",24,0)
 N XMSUB
"RTN","PXRMSXRM",25,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMSXRM",26,0)
 S XMSUB="Index for global "_GLOBAL_" sucessfully built"
"RTN","PXRMSXRM",27,0)
 S ^TMP("PXRMXMZ",$J,1,0)="Build of Clinical Reminders index for global "_GLOBAL_" completed."
"RTN","PXRMSXRM",28,0)
 S ^TMP("PXRMXMZ",$J,2,0)="Build finished at "_$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMSXRM",29,0)
 S ^TMP("PXRMXMZ",$J,3,0)=NE_" entries were created."
"RTN","PXRMSXRM",30,0)
 S ^TMP("PXRMXMZ",$J,4,0)=$$ETIME(START,END)
"RTN","PXRMSXRM",31,0)
 S ^TMP("PXRMXMZ",$J,5,0)=NERROR_" errors were encountered."
"RTN","PXRMSXRM",32,0)
 I NERROR>0 S ^TMP("PXRMXMZ",$J,6,0)="Another MailMan message will contain the error information."
"RTN","PXRMSXRM",33,0)
 D SEND^PXRMMSG(XMSUB)
"RTN","PXRMSXRM",34,0)
 Q
"RTN","PXRMSXRM",35,0)
 ;
"RTN","PXRMSXRM",36,0)
 ;===============================================================
"RTN","PXRMSXRM",37,0)
DETIME(START,END) ;Write out the elapsed time.
"RTN","PXRMSXRM",38,0)
 N TEXT
"RTN","PXRMSXRM",39,0)
 S TEXT=$$ETIME(START,END)
"RTN","PXRMSXRM",40,0)
 D MES^XPDUTL(TEXT)
"RTN","PXRMSXRM",41,0)
 Q
"RTN","PXRMSXRM",42,0)
 ;
"RTN","PXRMSXRM",43,0)
 ;===============================================================
"RTN","PXRMSXRM",44,0)
ERRMSG(NERROR,GLOBAL) ;If there were errors send an error message.
"RTN","PXRMSXRM",45,0)
 N END,IND,MAXERR,NE,XMSUB
"RTN","PXRMSXRM",46,0)
 I NERROR=0 Q
"RTN","PXRMSXRM",47,0)
 ;Return the last MAXERR errors
"RTN","PXRMSXRM",48,0)
 S MAXERR=+$G(^PXRM(800,1,"MIERR"))
"RTN","PXRMSXRM",49,0)
 I MAXERR=0 S MAXERR=200
"RTN","PXRMSXRM",50,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMSXRM",51,0)
 S END=$S(NERROR'>MAXERR:NERROR,1:MAXERR)
"RTN","PXRMSXRM",52,0)
 S NE=NERROR+1
"RTN","PXRMSXRM",53,0)
 F IND=1:1:END S NE=NE-1,^TMP("PXRMXMZ",$J,IND,0)=^TMP("PXRMERROR",$J,NE,0)
"RTN","PXRMSXRM",54,0)
 I END=MAXERR S ^TMP("PXRMXMZ",$J,MAXERR+1,0)="GLOBAL: "_GLOBAL_"- Maximum number of errors reached, will not report any more."
"RTN","PXRMSXRM",55,0)
 K ^TMP("PXRMERROR",$J)
"RTN","PXRMSXRM",56,0)
 S XMSUB="CLINICAL REMINDER INDEX BUILD ERROR(S) FOR GLOBAL "_GLOBAL
"RTN","PXRMSXRM",57,0)
 D SEND^PXRMMSG(XMSUB)
"RTN","PXRMSXRM",58,0)
 Q
"RTN","PXRMSXRM",59,0)
 ;
"RTN","PXRMSXRM",60,0)
 ;===============================================================
"RTN","PXRMSXRM",61,0)
ETIME(START,END) ;Calculate and format the elapsed time.
"RTN","PXRMSXRM",62,0)
 N ETIME,TEXT
"RTN","PXRMSXRM",63,0)
 S ETIME=$$HDIFF^XLFDT(END,START,2)
"RTN","PXRMSXRM",64,0)
 I ETIME>90 D
"RTN","PXRMSXRM",65,0)
 . S ETIME=$$HDIFF^XLFDT(END,START,3)
"RTN","PXRMSXRM",66,0)
 . S TEXT="Elapsed time: "_ETIME
"RTN","PXRMSXRM",67,0)
 E  S TEXT="Elapsed time: "_ETIME_" secs"
"RTN","PXRMSXRM",68,0)
 Q TEXT
"RTN","PXRMSXRM",69,0)
 ;
"RTN","PXRMSXRM",70,0)
 ;===============================================================
"RTN","PXRMSXRM",71,0)
INDEX ;Driver for building the various indexes.
"RTN","PXRMSXRM",72,0)
 N GBL,LIST,ROUTINE,TASKIT
"RTN","PXRMSXRM",73,0)
 S ROUTINE(45)="INDEX^DGPTDDCR" ;DBIA 4521
"RTN","PXRMSXRM",74,0)
 S ROUTINE(52)="PSRX^PSOPXRMI"  ;DBIA 4522
"RTN","PXRMSXRM",75,0)
 S ROUTINE(55)="PSPA^PSSSXRD"   ;DBIA 4172
"RTN","PXRMSXRM",76,0)
 S ROUTINE(63)="LAB^LRPXSXRL"   ;DBIA 4247
"RTN","PXRMSXRM",77,0)
 S ROUTINE(70)="RAD^RAPXRM"     ;DBIA 3731
"RTN","PXRMSXRM",78,0)
 S ROUTINE(100)="INDEX^ORPXRM"  ;DBIA 4498
"RTN","PXRMSXRM",79,0)
 S ROUTINE(120.5)="VITALS^GMVPXRM"  ;DBIA 3647
"RTN","PXRMSXRM",80,0)
 S ROUTINE(601.2)="INDEX^YTPXRM" ;DBIA 4523
"RTN","PXRMSXRM",81,0)
 S ROUTINE(9000011)="INDEX^GMPLPXRM" ;DBIA 4516
"RTN","PXRMSXRM",82,0)
 S ROUTINE(9000010.07)="VPOV^PXPXRMI2" ;DBIA 4520
"RTN","PXRMSXRM",83,0)
 S ROUTINE(9000010.11)="VIMM^PXPXRMI1" ;DBIA 4519
"RTN","PXRMSXRM",84,0)
 S ROUTINE(9000010.12)="VSK^PXPXRMI2"  ;DBIA 4520
"RTN","PXRMSXRM",85,0)
 S ROUTINE(9000010.13)="VXAM^PXPXRMI2" ;DBIA 4520
"RTN","PXRMSXRM",86,0)
 S ROUTINE(9000010.16)="VPED^PXPXRMI2" ;DBIA 4520
"RTN","PXRMSXRM",87,0)
 S ROUTINE(9000010.18)="VCPT^PXPXRMI1" ;DBIA 4519
"RTN","PXRMSXRM",88,0)
 S ROUTINE(9000010.23)="VHF^PXPXRMI1"  ;DBIA 4519
"RTN","PXRMSXRM",89,0)
 ;Get the list
"RTN","PXRMSXRM",90,0)
 W !,"Which indexes do you want to (re)build?"
"RTN","PXRMSXRM",91,0)
 D SEL(.LIST,.GBL)
"RTN","PXRMSXRM",92,0)
 I LIST="" Q
"RTN","PXRMSXRM",93,0)
 ;See if this should be tasked.
"RTN","PXRMSXRM",94,0)
 S TASKIT=$$ASKTASK
"RTN","PXRMSXRM",95,0)
 I TASKIT D
"RTN","PXRMSXRM",96,0)
 . W !,"Queue the Clinical Reminders index job."
"RTN","PXRMSXRM",97,0)
 . D TASKIT(LIST,.GBL,.ROUTINE)
"RTN","PXRMSXRM",98,0)
 E  D RUNNOW(LIST,.GBL,.ROUTINE)
"RTN","PXRMSXRM",99,0)
 Q
"RTN","PXRMSXRM",100,0)
 ;
"RTN","PXRMSXRM",101,0)
 ;===============================================================
"RTN","PXRMSXRM",102,0)
RUNNOW(LIST,GBL,ROUTINE) ;Run the routines now.
"RTN","PXRMSXRM",103,0)
 N IND,LI,NUM,RTN
"RTN","PXRMSXRM",104,0)
 S NUM=$L(LIST,",")-1
"RTN","PXRMSXRM",105,0)
 F IND=1:1:NUM D
"RTN","PXRMSXRM",106,0)
 . S LI=$P(LIST,",",IND)
"RTN","PXRMSXRM",107,0)
 . S RTN=ROUTINE(GBL(LI))
"RTN","PXRMSXRM",108,0)
 . D @RTN
"RTN","PXRMSXRM",109,0)
 Q
"RTN","PXRMSXRM",110,0)
 ;
"RTN","PXRMSXRM",111,0)
 ;===============================================================
"RTN","PXRMSXRM",112,0)
SEL(LIST,GBL) ;Select global list
"RTN","PXRMSXRM",113,0)
 N ALIST,DIR,DTOUT,DUOUT,X,Y
"RTN","PXRMSXRM",114,0)
 S ALIST(1)="  1 - LABORATORY TEST (CH, Anatomic Path, Micro)",GBL(1)=63
"RTN","PXRMSXRM",115,0)
 S ALIST(2)="  2 - MENTAL HEALTH",GBL(2)=601.2
"RTN","PXRMSXRM",116,0)
 S ALIST(3)="  3 - ORDER",GBL(3)=100
"RTN","PXRMSXRM",117,0)
 S ALIST(4)="  4 - PTF",GBL(4)=45
"RTN","PXRMSXRM",118,0)
 S ALIST(5)="  5 - PHARMACY PATIENT",GBL(5)=55
"RTN","PXRMSXRM",119,0)
 S ALIST(6)="  6 - PRESCRIPTION",GBL(6)=52
"RTN","PXRMSXRM",120,0)
 S ALIST(7)="  7 - PROBLEM LIST",GBL(7)=9000011
"RTN","PXRMSXRM",121,0)
 S ALIST(8)="  8 - RADIOLOGY",GBL(8)=70
"RTN","PXRMSXRM",122,0)
 S ALIST(9)="  9 - V CPT",GBL(9)=9000010.18
"RTN","PXRMSXRM",123,0)
 S ALIST(10)=" 10 - V EXAM",GBL(10)=9000010.13
"RTN","PXRMSXRM",124,0)
 S ALIST(11)=" 11 - V HEALTH FACTORS",GBL(11)=9000010.23
"RTN","PXRMSXRM",125,0)
 S ALIST(12)=" 12 - V IMMUNIZATION",GBL(12)=9000010.11
"RTN","PXRMSXRM",126,0)
 S ALIST(13)=" 13 - V PATIENT ED",GBL(13)=9000010.16
"RTN","PXRMSXRM",127,0)
 S ALIST(14)=" 14 - V POV",GBL(14)=9000010.07
"RTN","PXRMSXRM",128,0)
 S ALIST(15)=" 15 - V SKIN TEST",GBL(15)=9000010.12
"RTN","PXRMSXRM",129,0)
 S ALIST(16)=" 16 - VITAL MEASUREMENT",GBL(16)=120.5
"RTN","PXRMSXRM",130,0)
 M DIR("A")=ALIST
"RTN","PXRMSXRM",131,0)
 S DIR("A")="Enter your list"
"RTN","PXRMSXRM",132,0)
 S DIR(0)="LO^1:16"
"RTN","PXRMSXRM",133,0)
 D ^DIR
"RTN","PXRMSXRM",134,0)
 I $D(DUOUT)!$D(DTOUT) S LIST="" Q
"RTN","PXRMSXRM",135,0)
 S LIST=Y
"RTN","PXRMSXRM",136,0)
 Q
"RTN","PXRMSXRM",137,0)
 ;
"RTN","PXRMSXRM",138,0)
 ;===============================================================
"RTN","PXRMSXRM",139,0)
TASKIT(LIST,GBL,ROUTINE) ;Build the indexes as a tasked job.
"RTN","PXRMSXRM",140,0)
 N DIR,DTOUT,DUOUT,MINDT,SDTIME,X,Y
"RTN","PXRMSXRM",141,0)
 S MINDT=$$NOW^XLFDT
"RTN","PXRMSXRM",142,0)
 ;W !,"Queue the Clinical Reminders index job."
"RTN","PXRMSXRM",143,0)
 S DIR("A",1)="Enter the date and time you want the job to start."
"RTN","PXRMSXRM",144,0)
 S DIR("A",2)="It must be after "_$$FMTE^XLFDT(MINDT,"5Z")
"RTN","PXRMSXRM",145,0)
 S DIR("A")="Start the task at: "
"RTN","PXRMSXRM",146,0)
 S DIR(0)="DAU"_U_MINDT_"::RSX"
"RTN","PXRMSXRM",147,0)
 D ^DIR
"RTN","PXRMSXRM",148,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMSXRM",149,0)
 S SDTIME=Y
"RTN","PXRMSXRM",150,0)
 K DIR
"RTN","PXRMSXRM",151,0)
 ;Put the task into the queue.
"RTN","PXRMSXRM",152,0)
 K ZTSAVE
"RTN","PXRMSXRM",153,0)
 S ZTSAVE("LIST")=""
"RTN","PXRMSXRM",154,0)
 S ZTSAVE("GBL(")=""
"RTN","PXRMSXRM",155,0)
 S ZTSAVE("ROUTINE(")=""
"RTN","PXRMSXRM",156,0)
 S ZTRTN="TASKJOB^PXRMSXRM"
"RTN","PXRMSXRM",157,0)
 S ZTDESC="Clinical Reminders index build"
"RTN","PXRMSXRM",158,0)
 S ZTDTH=SDTIME
"RTN","PXRMSXRM",159,0)
 S ZTIO=""
"RTN","PXRMSXRM",160,0)
 D ^%ZTLOAD
"RTN","PXRMSXRM",161,0)
 W !,"Task number ",ZTSK," queued."
"RTN","PXRMSXRM",162,0)
 Q
"RTN","PXRMSXRM",163,0)
 ;
"RTN","PXRMSXRM",164,0)
 ;===============================================================
"RTN","PXRMSXRM",165,0)
TASKJOB ;Execute as tasked job. LIST, GBL, and ROUTINE come through
"RTN","PXRMSXRM",166,0)
 ;ZTSAVE.
"RTN","PXRMSXRM",167,0)
 N IND,LI,NUM,RTN
"RTN","PXRMSXRM",168,0)
 S ZTREQ="@"
"RTN","PXRMSXRM",169,0)
 S ZTSTOP=0
"RTN","PXRMSXRM",170,0)
 S NUM=$L(LIST,",")-1
"RTN","PXRMSXRM",171,0)
 F IND=1:1:NUM D
"RTN","PXRMSXRM",172,0)
 .;Check to see if the task has had a stop request
"RTN","PXRMSXRM",173,0)
 . I $$S^%ZTLOAD S ZTSTOP=1,IND=NUM Q
"RTN","PXRMSXRM",174,0)
 . S LI=$P(LIST,",",IND)
"RTN","PXRMSXRM",175,0)
 . S RTN=ROUTINE(GBL(LI))
"RTN","PXRMSXRM",176,0)
 . D @RTN
"RTN","PXRMSXRM",177,0)
 Q
"RTN","PXRMSXRM",178,0)
 ;
"RTN","PXRMSXRO")
1^6
"RTN","PXRMSXRP")
1^7
"RTN","PXRMSXRV")
1^8
"RTN","PXRMSXRW")
1^9
"RTN","PXRMXLAB")
1^14
"RTN","PXRMXRFK")
1^10
"RTN","PXRMXRFS")
1^11
"SEC","^DIC",800,800,0,"AUDIT")
@
"SEC","^DIC",800,800,0,"DD")
@
"SEC","^DIC",800,800,0,"DEL")
@
"SEC","^DIC",800,800,0,"LAYGO")
@
"SEC","^DIC",800,800,0,"RD")

"SEC","^DIC",800,800,0,"WR")
@
"VER")
8.0^22.0
"^DD",800,800,0)
FIELD^^15^16
"^DD",800,800,0,"DDA")
N
"^DD",800,800,0,"DT")
3031217
"^DD",800,800,0,"IX","B",800,.01)

"^DD",800,800,0,"NM","CLINICAL REMINDER PARAMETERS")

"^DD",800,800,0,"VRPK")
PXRM
"^DD",800,800,.01,0)
ONE^RNJ1,0^^0;1^K:+X'=X!(X>1)!(X<1)!(X?.E1"."1N.N) X
"^DD",800,800,.01,1,0)
^.1
"^DD",800,800,.01,1,1,0)
800^B
"^DD",800,800,.01,1,1,1)
S ^PXRM(800,"B",$E(X,1,30),DA)=""
"^DD",800,800,.01,1,1,2)
K ^PXRM(800,"B",$E(X,1,30),DA)
"^DD",800,800,.01,3)
Type a Number between 1 and 1, 0 Decimal Digits
"^DD",800,800,.01,21,0)
^.001^2^2^3000508^^^^
"^DD",800,800,.01,21,1,0)
This file contains parameters used by the Clinical Reminders. There is
"^DD",800,800,.01,21,2,0)
only one entry.
"^DD",800,800,.01,23,0)
^.001^1^1^3000508^^^^
"^DD",800,800,.01,23,1,0)
There is one entry in this file.
"^DD",800,800,.01,"DT")
2990209
"^DD",800,800,1,0)
DEFAULT REMINDER DISCLAIMER^800.01^^DISC1;0
"^DD",800,800,1,21,0)
^.001^2^2^3010904^^^^
"^DD",800,800,1,21,1,0)
This is the default reminder disclaimer that is distributed with the
"^DD",800,800,1,21,2,0)
package.
"^DD",800,800,2,0)
SITE REMINDER DISCLAIMER^800.02^^DISC2;0
"^DD",800,800,2,21,0)
^^3^3^3000508^
"^DD",800,800,2,21,1,0)
This is the site defined reminder disclaimer. If there is an entry in
"^DD",800,800,2,21,2,0)
this field then the site defined disclaimer will override the default
"^DD",800,800,2,21,3,0)
disclaimer.
"^DD",800,800,3,0)
REMINDER MANAGEMENT MAILGROUP^P3.8^XMB(3.8,^MGFE;1^Q
"^DD",800,800,3,3)
Enter the name of the MailMan group that will receive reminder management messages.
"^DD",800,800,3,21,0)
^.001^7^7^3030303^^^^
"^DD",800,800,3,21,1,0)
Members of the MailMan mail group pointed to by this field will receive
"^DD",800,800,3,21,2,0)
various types of MailMan messages concerned with managing reminders.
"^DD",800,800,3,21,3,0)

"^DD",800,800,3,21,4,0)
Some examples, if there is an error during reminder evaluation this
"^DD",800,800,3,21,5,0)
mail group will be sent a message notifying them of the error. When the
"^DD",800,800,3,21,6,0)
reminder indexes are built the mail group will receive the messages
"^DD",800,800,3,21,7,0)
this process generates.
"^DD",800,800,3,"DT")
3030303
"^DD",800,800,4,0)
WEB SITES^800.04^^1;0
"^DD",800,800,4,21,0)
^.001^1^1^3000508^^^^
"^DD",800,800,4,21,1,0)
This is a list of web sites for general reminder information.
"^DD",800,800,4,"DT")
2991129
"^DD",800,800,5,0)
VERSION^F^^VERSION;1^K:$L(X)>20!($L(X)<3) X
"^DD",800,800,5,3)
Answer must be 3-20 characters in length.
"^DD",800,800,5,21,0)
^^1^1^3000706^
"^DD",800,800,5,21,1,0)
This is the current version of the Clinical Reminders package.
"^DD",800,800,5,"DT")
3000706
"^DD",800,800,6,0)
FULL SSN^S^Y:YES;N:NO;^FULL SSN;1^Q
"^DD",800,800,6,21,0)
^.001^6^6^3030829^^
"^DD",800,800,6,21,1,0)
This field is the default for the Clinical Reminders display of Social
"^DD",800,800,6,21,2,0)
Security numbers. The Due report but may be modified at run time. If
"^DD",800,800,6,21,3,0)
the FULL SSN field equals Y then the full SSN is printed. Otherwise
"^DD",800,800,6,21,4,0)
only the last four digits of the SSN are printed.
"^DD",800,800,6,21,5,0)
 
"^DD",800,800,6,21,6,0)
The standard setting for this field is Y. 
"^DD",800,800,6,"DT")
3010802
"^DD",800,800,7,0)
INITIAL MST SYNCH COMP DATE^D^^MST;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",800,800,7,21,0)
^.001^1^1^3010904^^
"^DD",800,800,7,21,1,0)
This is the date and time the initial MST synchronization was completed.
"^DD",800,800,7,"DT")
3010904
"^DD",800,800,8,0)
INITIAL MST SYNCH UPDATE COUNT^NJ7,0^^MST;2^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",800,800,8,3)
Type a Number between 0 and 9999999, 0 Decimal Digits
"^DD",800,800,8,21,0)
^^2^2^3010828^
"^DD",800,800,8,21,1,0)
This is the number of updates that were made during the initial
"^DD",800,800,8,21,2,0)
synchronization.
"^DD",800,800,8,"DT")
3010904
"^DD",800,800,9,0)
DAILY MST SYNC COMP DATE^D^^MST;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",800,800,9,21,0)
^^1^1^3010828^
"^DD",800,800,9,21,1,0)
This is the date and time the last daily MST synchronization was completed.
"^DD",800,800,9,"DT")
3010904
"^DD",800,800,10,0)
DAILY MST SYNCH UPDATE COUNT^NJ7,0^^MST;4^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",800,800,10,3)
Type a Number between 0 and 9999999, 0 Decimal Digits
"^DD",800,800,10,21,0)
^.001^1^1^3010904^^
"^DD",800,800,10,21,1,0)
This is the number of updates made during the last daily MST synchronization.
"^DD",800,800,10,"DT")
3010904
"^DD",800,800,11,0)
INITIAL MST SYNCH START DATE^D^^MST;5^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",800,800,11,21,0)
^.001^2^2^3011031^^
"^DD",800,800,11,21,1,0)
This is the date and time the initial Clinical Reminders MST
"^DD",800,800,11,21,2,0)
synchronization was set to run.
"^DD",800,800,11,"DT")
3010904
"^DD",800,800,12,0)
DAILY MST SYNCH START DATE^D^^MST;6^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",800,800,12,21,0)
^^2^2^3010904^
"^DD",800,800,12,21,1,0)
This is the date and time the last daily Clinical Reminders MST
"^DD",800,800,12,21,2,0)
synchronization was set to start.
"^DD",800,800,12,"DT")
3010904
"^DD",800,800,13,0)
TRUNCATE EMPLOYEE SSN^S^Y:YES;N:NO;^TRUNCATE EMPLOYEE SSN;1^Q
"^DD",800,800,13,3)
Enter 'N' only if full employee SSN is required on reports.
"^DD",800,800,13,21,0)
^^10^10^3011205^
"^DD",800,800,13,21,1,0)
The detailed reminders due report has the option to print the full SSN for
"^DD",800,800,13,21,2,0)
the patients selected (see FULL SSN field). However, if a patient is an
"^DD",800,800,13,21,3,0)
employee (fields 361 and 391 in PATIENT file) the SSN will be truncated.
"^DD",800,800,13,21,4,0)
 
"^DD",800,800,13,21,5,0)
If a site, for their own reasons, requires the full SSN for employees to
"^DD",800,800,13,21,6,0)
be printed on their reports then this may be done by setting the TRUNCATE
"^DD",800,800,13,21,7,0)
EMPLOYEE SSN field to 'No'.
"^DD",800,800,13,21,8,0)
 
"^DD",800,800,13,21,9,0)
The default value installed for this field is 'Yes'. This ensures that 
"^DD",800,800,13,21,10,0)
full employee SSN's are not printed on the report. 
"^DD",800,800,13,"DT")
3011205
"^DD",800,800,14,0)
EDIT HISTORY COUNT^NJ3,0^^EDIT HISTORY COUNT;1^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",800,800,14,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",800,800,14,21,0)
^^2^2^3020115^
"^DD",800,800,14,21,1,0)
This field is used by reminder inquiry to determine how many occurrences 
"^DD",800,800,14,21,2,0)
of the edit history to display. The default is the last two occurrences.
"^DD",800,800,14,"DT")
3011218
"^DD",800,800,15,0)
MAXIMUM NUMBER OF INDEX ERRORS^NJ8,0^^MIERR;1^K:+X'=X!(X>10000000)!(X<1)!(X?.E1"."1N.N) X
"^DD",800,800,15,3)
Type a Number between 1 and 10000000, 0 Decimal Digits
"^DD",800,800,15,21,0)
^.001^5^5^3031217^^
"^DD",800,800,15,21,1,0)
When indexing a global, details about entries that cannot be indexed
"^DD",800,800,15,21,2,0)
are reported in a MailMan message that uses a line for each error. If
"^DD",800,800,15,21,3,0)
there are large numbers of errors the message can become very large.
"^DD",800,800,15,21,4,0)
This parameter establishes the maximum number of entries to list in the
"^DD",800,800,15,21,5,0)
MailMan message so its size does not become unwieldy.
"^DD",800,800,15,"DT")
3031217
"^DD",800,800.01,0)
DEFAULT REMINDER DISCLAIMER SUB-FIELD^^.01^1
"^DD",800,800.01,0,"DT")
2990209
"^DD",800,800.01,0,"NM","DEFAULT REMINDER DISCLAIMER")

"^DD",800,800.01,0,"UP")
800
"^DD",800,800.01,.01,0)
DEFAULT REMINDER DISCLAIMER^W^^0;1^Q
"^DD",800,800.01,.01,3)
Do not edit the default disclaimer.
"^DD",800,800.01,.01,"DT")
2990209
"^DD",800,800.02,0)
SITE REMINDER DISCLAIMER SUB-FIELD^^.01^1
"^DD",800,800.02,0,"DT")
2990209
"^DD",800,800.02,0,"NM","SITE REMINDER DISCLAIMER")

"^DD",800,800.02,0,"UP")
800
"^DD",800,800.02,.01,0)
SITE REMINDER DISCLAIMER^W^^0;1^Q
"^DD",800,800.02,.01,3)
Enter the site defined reminder disclaimer.
"^DD",800,800.02,.01,21,0)
^.001^1^1^3000508^^
"^DD",800,800.02,.01,21,1,0)
This is the site defined reminder disclaimer.
"^DD",800,800.02,.01,"DT")
2990209
"^DD",800,800.04,0)
WEB SITES SUB-FIELD^^1^3
"^DD",800,800.04,0,"DT")
2991130
"^DD",800,800.04,0,"IX","B",800.04,.01)

"^DD",800,800.04,0,"NM","WEB SITES")

"^DD",800,800.04,0,"UP")
800
"^DD",800,800.04,.01,0)
URL^MF^^0;1^K:$L(X)>128!($L(X)<1) X
"^DD",800,800.04,.01,1,0)
^.1
"^DD",800,800.04,.01,1,1,0)
800.04^B
"^DD",800,800.04,.01,1,1,1)
S ^PXRM(800,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",800,800.04,.01,1,1,2)
K ^PXRM(800,DA(1),1,"B",$E(X,1,30),DA)
"^DD",800,800.04,.01,3)
Enter the URL for the web site.
"^DD",800,800.04,.01,21,0)
^.001^1^1^3000508^^^^
"^DD",800,800.04,.01,21,1,0)
This is the URL for the web site.
"^DD",800,800.04,.01,"DT")
2991129
"^DD",800,800.04,.02,0)
WEB SITE TITLE^F^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",800,800.04,.02,3)
Enter the web site title, up to 60 characters.
"^DD",800,800.04,.02,21,0)
^^3^3^3020719^
"^DD",800,800.04,.02,21,1,0)
This is the web site title. This field is optional. If entered this will 
"^DD",800,800.04,.02,21,2,0)
display in the 'Reference Information' window of CPRS GUI instead of the 
"^DD",800,800.04,.02,21,3,0)
full URL.
"^DD",800,800.04,.02,"DT")
3020719
"^DD",800,800.04,1,0)
WEB SITE DESCRIPTION^800.41^^1;0
"^DD",800,800.04,1,21,0)
^^1^1^3000508^
"^DD",800,800.04,1,21,1,0)
This is a description of the web site.
"^DD",800,800.41,0)
WEB SITE DESCRIPTION SUB-FIELD^^.01^1
"^DD",800,800.41,0,"DT")
2991130
"^DD",800,800.41,0,"NM","WEB SITE DESCRIPTION")

"^DD",800,800.41,0,"UP")
800.04
"^DD",800,800.41,.01,0)
WEB SITE DESCRIPTION^W^^0;1^Q
"^DD",800,800.41,.01,3)
Enter the web site description.
"^DD",800,800.41,.01,21,0)
^.001^2^2^3000508^^
"^DD",800,800.41,.01,21,1,0)
This is the web site description. It is used to give more information
"^DD",800,800.41,.01,21,2,0)
about why this web site is relevant for clinical reminders.
"^DD",800,800.41,.01,"DT")
2991130
"^DIC",800,800,0)
CLINICAL REMINDER PARAMETERS^800
"^DIC",800,800,0,"GL")
^PXRM(800,
"^DIC",800,800,"%",0)
^1.005^^0
"^DIC",800,800,"%D",0)
^^2^2^3000608^
"^DIC",800,800,"%D",1,0)
This file has one entry that contains parameters used by Clinical
"^DIC",800,800,"%D",2,0)
Reminders.
"^DIC",800,"B","CLINICAL REMINDER PARAMETERS",800)

**INSTALL NAME**
DG*5.3*478
"BLD",3858,0)
DG*5.3*478^REGISTRATION^0^3041026^y
"BLD",3858,1,0)
^^1^1^3021002^
"BLD",3858,1,1,0)
Add Clinical Reminder index cross-references to PTF.
"BLD",3858,4,0)
^9.64PA^^
"BLD",3858,"ABPKG")
n
"BLD",3858,"INIT")
CDGPTXR^DG53478I
"BLD",3858,"KRN",0)
^9.67PA^8989.52^19
"BLD",3858,"KRN",.4,0)
.4
"BLD",3858,"KRN",.401,0)
.401
"BLD",3858,"KRN",.402,0)
.402
"BLD",3858,"KRN",.403,0)
.403
"BLD",3858,"KRN",.5,0)
.5
"BLD",3858,"KRN",.84,0)
.84
"BLD",3858,"KRN",3.6,0)
3.6
"BLD",3858,"KRN",3.8,0)
3.8
"BLD",3858,"KRN",9.2,0)
9.2
"BLD",3858,"KRN",9.8,0)
9.8
"BLD",3858,"KRN",9.8,"NM",0)
^9.68A^11^10
"BLD",3858,"KRN",9.8,"NM",2,0)
DGPTF4^^0^B23088100
"BLD",3858,"KRN",9.8,"NM",3,0)
DGPTFUP^^0^B13579333
"BLD",3858,"KRN",9.8,"NM",4,0)
DGPTSUD1^^0^B6327420
"BLD",3858,"KRN",9.8,"NM",5,0)
DGPTSUDO^^0^B22459038
"BLD",3858,"KRN",9.8,"NM",6,0)
DGPTTS1^^0^B23751705
"BLD",3858,"KRN",9.8,"NM",7,0)
DGPTTS2^^0^B14533867
"BLD",3858,"KRN",9.8,"NM",8,0)
DGPTPXRM^^0^B909190
"BLD",3858,"KRN",9.8,"NM",9,0)
DGPTDDCR^^0^B52864629
"BLD",3858,"KRN",9.8,"NM",10,0)
DGPXRM^^1^
"BLD",3858,"KRN",9.8,"NM",11,0)
DGP478I^^1^
"BLD",3858,"KRN",9.8,"NM","B","DGP478I",11)

"BLD",3858,"KRN",9.8,"NM","B","DGPTDDCR",9)

"BLD",3858,"KRN",9.8,"NM","B","DGPTF4",2)

"BLD",3858,"KRN",9.8,"NM","B","DGPTFUP",3)

"BLD",3858,"KRN",9.8,"NM","B","DGPTPXRM",8)

"BLD",3858,"KRN",9.8,"NM","B","DGPTSUD1",4)

"BLD",3858,"KRN",9.8,"NM","B","DGPTSUDO",5)

"BLD",3858,"KRN",9.8,"NM","B","DGPTTS1",6)

"BLD",3858,"KRN",9.8,"NM","B","DGPTTS2",7)

"BLD",3858,"KRN",9.8,"NM","B","DGPXRM",10)

"BLD",3858,"KRN",19,0)
19
"BLD",3858,"KRN",19.1,0)
19.1
"BLD",3858,"KRN",101,0)
101
"BLD",3858,"KRN",409.61,0)
409.61
"BLD",3858,"KRN",771,0)
771
"BLD",3858,"KRN",870,0)
870
"BLD",3858,"KRN",8989.51,0)
8989.51
"BLD",3858,"KRN",8989.52,0)
8989.52
"BLD",3858,"KRN",8994,0)
8994
"BLD",3858,"KRN","B",.4,.4)

"BLD",3858,"KRN","B",.401,.401)

"BLD",3858,"KRN","B",.402,.402)

"BLD",3858,"KRN","B",.403,.403)

"BLD",3858,"KRN","B",.5,.5)

"BLD",3858,"KRN","B",.84,.84)

"BLD",3858,"KRN","B",3.6,3.6)

"BLD",3858,"KRN","B",3.8,3.8)

"BLD",3858,"KRN","B",9.2,9.2)

"BLD",3858,"KRN","B",9.8,9.8)

"BLD",3858,"KRN","B",19,19)

"BLD",3858,"KRN","B",19.1,19.1)

"BLD",3858,"KRN","B",101,101)

"BLD",3858,"KRN","B",409.61,409.61)

"BLD",3858,"KRN","B",771,771)

"BLD",3858,"KRN","B",870,870)

"BLD",3858,"KRN","B",8989.51,8989.51)

"BLD",3858,"KRN","B",8989.52,8989.52)

"BLD",3858,"KRN","B",8994,8994)

"BLD",3858,"QUES",0)
^9.62^^
"BLD",3858,"REQB",0)
^9.611^4^4
"BLD",3858,"REQB",1,0)
DI*22.0*95^2
"BLD",3858,"REQB",2,0)
PXRM*1.5*12^2
"BLD",3858,"REQB",3,0)
DG*5.3*517^2
"BLD",3858,"REQB",4,0)
DG*5.3*549^2
"BLD",3858,"REQB","B","DG*5.3*517",3)

"BLD",3858,"REQB","B","DG*5.3*549",4)

"BLD",3858,"REQB","B","DI*22.0*95",1)

"BLD",3858,"REQB","B","PXRM*1.5*12",2)

"INIT")
CDGPTXR^DG53478I
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"PKG",6,-1)
1^1
"PKG",6,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",6,20,0)
^9.402P^^
"PKG",6,22,0)
^9.49I^1^1
"PKG",6,22,1,0)
5.3^2930813^2931021
"PKG",6,22,1,"PAH",1,0)
478^3041026
"PKG",6,22,1,"PAH",1,1,0)
^^1^1^3041026
"PKG",6,22,1,"PAH",1,1,1,0)
Add Clinical Reminder index cross-references to PTF.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
11
"RTN","DG53478I")
0^^B79048389
"RTN","DG53478I",1,0)
DG53478I ; SLC/PKR - Create cross-references for clinical reminder index. ;10/12/2004
"RTN","DG53478I",2,0)
       ;;5.3;Registration;**478**;Aug 13, 1993
"RTN","DG53478I",3,0)
 ;
"RTN","DG53478I",4,0)
 Q
"RTN","DG53478I",5,0)
 ;===============================================================
"RTN","DG53478I",6,0)
CDGPTXR ;Create all the cross-references.
"RTN","DG53478I",7,0)
 D CDGPT0
"RTN","DG53478I",8,0)
 D CDGPT9
"RTN","DG53478I",9,0)
 D CHLOC
"RTN","DG53478I",10,0)
 Q
"RTN","DG53478I",11,0)
 ;
"RTN","DG53478I",12,0)
 ;===============================================================
"RTN","DG53478I",13,0)
CDGPT0 ;Create cross-references for PTF ICD0 data.
"RTN","DG53478I",14,0)
 ;For node 401 surgery node:
"RTN","DG53478I",15,0)
 ;ICD0 from nodes: 45.01,8; 45.01,9; 45.01,10; 45.01,11; 45.01,12
"RTN","DG53478I",16,0)
 ;For node 601, procedure node:
"RTN","DG53478I",17,0)
 ;ICD0 from nodes: 45.05,4; 45.05,5; 45.05,6; 45.05,7; 45.05,8
"RTN","DG53478I",18,0)
 N IND,MSG,NAME,NODE,NODENUM,RESULT,XREF
"RTN","DG53478I",19,0)
 D BMES^XPDUTL("Creating PTF ICD0 cross-references.")
"RTN","DG53478I",20,0)
 ;Set the XREF nodes that are the same for all cross-references.
"RTN","DG53478I",21,0)
 S XREF("FILE")=45
"RTN","DG53478I",22,0)
 S XREF("WHOLE KILL")="K ^PXRMINDX(45,""ICD0"")"
"RTN","DG53478I",23,0)
 S XREF("TYPE")="MU"
"RTN","DG53478I",24,0)
 S XREF("SHORT DESCR")="Clinical Reminders index for ICD0 lookup."
"RTN","DG53478I",25,0)
 S XREF("DESCR",1)="This cross-reference builds two indexes, one for finding"
"RTN","DG53478I",26,0)
 S XREF("DESCR",2)="all patients with a particular ICD0 code and one for finding all"
"RTN","DG53478I",27,0)
 S XREF("DESCR",3)="the ICD0 codes a patient has."
"RTN","DG53478I",28,0)
 S XREF("DESCR",4)="The indexes are stored in the Clinical Reminders index global as:"
"RTN","DG53478I",29,0)
 S XREF("DESCR",5)=" ^PXRMINDX(45,""ICD0"",""INP"",ICD0,NODE,DFN,DATE,DAS) and"
"RTN","DG53478I",30,0)
 S XREF("DESCR",6)=" ^PXRMINDX(45,""ICD0"",""PNI"",DFN,NODE,ICD0,DATE,DAS)"
"RTN","DG53478I",31,0)
 S XREF("DESCR",7)="respectively. DATE is the surgery/procedure date."
"RTN","DG53478I",32,0)
 S XREF("USE")="ACTION"
"RTN","DG53478I",33,0)
 S XREF("EXECUTION")="R"
"RTN","DG53478I",34,0)
 S XREF("ACTIVITY")="IR"
"RTN","DG53478I",35,0)
 ;
"RTN","DG53478I",36,0)
 ;These XREF nodes change for each cross-reference.
"RTN","DG53478I",37,0)
 S XREF("ROOT FILE")=45.01
"RTN","DG53478I",38,0)
 S XREF("VAL",1)=.01
"RTN","DG53478I",39,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","DG53478I",40,0)
 S XREF("VAL",2,"SUBSCRIPT")=2
"RTN","DG53478I",41,0)
 S IND=0
"RTN","DG53478I",42,0)
 S NODE="S"
"RTN","DG53478I",43,0)
 S XREF("DESCR",8)="NODE is S followed by code number. For example,"
"RTN","DG53478I",44,0)
 S XREF("DESCR",10)="For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","DG53478I",45,0)
 F NODENUM=8,9,10,11,12 D
"RTN","DG53478I",46,0)
 . S IND=IND+1
"RTN","DG53478I",47,0)
 . S XREF("DESCR",9)=NODE_IND_" means it was found on the S node and it was operation code "_IND_"."
"RTN","DG53478I",48,0)
 . S NAME="ACR0S"_IND
"RTN","DG53478I",49,0)
 . S XREF("NAME")=NAME
"RTN","DG53478I",50,0)
 . S XREF("VAL",2)=NODENUM
"RTN","DG53478I",51,0)
 . S XREF("SET")="D SDGPT0^DGPTDDCR(.X,.DA,"""_NODE_""","_IND_")"
"RTN","DG53478I",52,0)
 . S XREF("KILL")="D KDGPT0^DGPTDDCR(.X,.DA,"""_NODE_""","_IND_")"
"RTN","DG53478I",53,0)
 . D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","DG53478I",54,0)
 . I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","DG53478I",55,0)
 ;
"RTN","DG53478I",56,0)
 S XREF("ROOT FILE")=45.05
"RTN","DG53478I",57,0)
 S XREF("VAL",1)=.01
"RTN","DG53478I",58,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","DG53478I",59,0)
 S XREF("VAL",2,"SUBSCRIPT")=2
"RTN","DG53478I",60,0)
 S IND=0
"RTN","DG53478I",61,0)
 S NODE="P"
"RTN","DG53478I",62,0)
 S XREF("DESCR",8)="NODE is S followed by code number. For example,"
"RTN","DG53478I",63,0)
 S XREF("DESCR",10)="For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","DG53478I",64,0)
 F NODENUM=4,5,6,7,8 D
"RTN","DG53478I",65,0)
 . S IND=IND+1
"RTN","DG53478I",66,0)
 . S XREF("DESCR",9)=NODE_IND_" means it was found on the P node and it was operation code "_IND_"."
"RTN","DG53478I",67,0)
 . S NAME="ACR0P"_IND
"RTN","DG53478I",68,0)
 . S XREF("NAME")=NAME
"RTN","DG53478I",69,0)
 . S XREF("VAL",2)=NODENUM
"RTN","DG53478I",70,0)
 . S XREF("SET")="D SDGPT0^DGPTDDCR(.X,.DA,"""_NODE_""","_IND_")"
"RTN","DG53478I",71,0)
 . S XREF("KILL")="D KDGPT0^DGPTDDCR(.X,.DA,"""_NODE_""","_IND_")"
"RTN","DG53478I",72,0)
 . D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","DG53478I",73,0)
 . I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","DG53478I",74,0)
 Q
"RTN","DG53478I",75,0)
 ;
"RTN","DG53478I",76,0)
 ;===============================================================
"RTN","DG53478I",77,0)
CDGPT9 ;Create cross-references for PTF ICD9 data.
"RTN","DG53478I",78,0)
 ;ICD9 from nodes: 45,79; 45,80; 45,79.16 45,79.17; 45,79.18;
"RTN","DG53478I",79,0)
 ;45,79.19; 45,79.201; 45,79.21; 45,79.22; 45,79.22; 45.79.23;
"RTN","DG53478I",80,0)
 ;45,79.24; 45,79.241; 45,79.242; 45,79.243; 45,79.244
"RTN","DG53478I",81,0)
 ;By name these nodes are: DXLS, PRINCIPAL DIAGNOSIS, SECONDARY
"RTN","DG53478I",82,0)
 ;DIAGNOSIS 1, through SECONDARY DIAGNOSIS 12.
"RTN","DG53478I",83,0)
 N IND,MSG,NAME,NODE,RESULT,XREF
"RTN","DG53478I",84,0)
 D BMES^XPDUTL("Creating PTF ICD9 cross-references.")
"RTN","DG53478I",85,0)
 ;Set the XREF nodes that are the same for all cross-references.
"RTN","DG53478I",86,0)
 S XREF("FILE")=45
"RTN","DG53478I",87,0)
 S XREF("ROOT FILE")=45
"RTN","DG53478I",88,0)
 S XREF("WHOLE KILL")="K ^PXRMINDX(45)"
"RTN","DG53478I",89,0)
 S XREF("TYPE")="MU"
"RTN","DG53478I",90,0)
 S XREF("SHORT DESCR")="Clinical Reminders index for ICD9 lookup."
"RTN","DG53478I",91,0)
 S XREF("DESCR",1)="This cross-reference builds two indexes, one for finding"
"RTN","DG53478I",92,0)
 S XREF("DESCR",2)="all patients with a particular ICD9 code and one for finding all"
"RTN","DG53478I",93,0)
 S XREF("DESCR",3)="the ICD9 codes a patient has."
"RTN","DG53478I",94,0)
 S XREF("DESCR",4)="The indexes are stored in the Clinical Reminders index global as:"
"RTN","DG53478I",95,0)
 S XREF("DESCR",5)=" ^PXRMINDX(45,""ICD9"",""INP"",ICD9,NAME,DFN,DATE,DAS) and"
"RTN","DG53478I",96,0)
 S XREF("DESCR",6)=" ^PXRMINDX(45,""ICD9"",""PNI"",DFN,NAME,ICD9,DATE,DAS)"
"RTN","DG53478I",97,0)
 S XREF("DESCR",7)="respectively. DATE is the discharge date. If it does not"
"RTN","DG53478I",98,0)
 S XREF("DESCR",8)="exist then the admission date is used."
"RTN","DG53478I",99,0)
 S XREF("EXECUTION")="R"
"RTN","DG53478I",100,0)
 S XREF("ACTIVITY")="IR"
"RTN","DG53478I",101,0)
 S XREF("VAL",1)=.01
"RTN","DG53478I",102,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","DG53478I",103,0)
 S XREF("VAL",2)=2
"RTN","DG53478I",104,0)
 S XREF("VAL",2,"SUBSCRIPT")=2
"RTN","DG53478I",105,0)
 S XREF("VAL",3)=11
"RTN","DG53478I",106,0)
 S XREF("VAL",3,"SUBSCRIPT")=3
"RTN","DG53478I",107,0)
 S XREF("VAL",5)=70
"RTN","DG53478I",108,0)
 ;
"RTN","DG53478I",109,0)
 ;These XREF nodes change for each cross-reference.
"RTN","DG53478I",110,0)
 S XREF("DESCR",9)="NAME is the name of the ICD9 code field. An example is DXLS."
"RTN","DG53478I",111,0)
 S XREF("DESCR",10)="If the TYPE OF RECORD is CENSUS then the entry is not indexed."
"RTN","DG53478I",112,0)
 S XREF("DESCR",11)="For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","DG53478I",113,0)
 S XREF("NAME")="ACR9DXLS"
"RTN","DG53478I",114,0)
 S XREF("VAL",4)=79
"RTN","DG53478I",115,0)
 S XREF("VAL",4,"SUBSCRIPT")=4
"RTN","DG53478I",116,0)
 S XREF("SET")="D SDGPT9D^DGPTDDCR(.X,.DA,""DXLS"")"
"RTN","DG53478I",117,0)
 S XREF("KILL")="D KDGPT9D^DGPTDDCR(.X,.DA,""DXLS"")"
"RTN","DG53478I",118,0)
 D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","DG53478I",119,0)
 I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","DG53478I",120,0)
 ;
"RTN","DG53478I",121,0)
 S XREF("DESCR",9)="NAME is the name of the ICD9 code field. An example is PDX."
"RTN","DG53478I",122,0)
 S XREF("DESCR",10)="If the TYPE OF RECORD is CENSUS then the entry is not indexed."
"RTN","DG53478I",123,0)
 S XREF("DESCR",11)="For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","DG53478I",124,0)
 S XREF("NAME")="ACR9PDX"
"RTN","DG53478I",125,0)
 S XREF("VAL",4)=80
"RTN","DG53478I",126,0)
 S XREF("VAL",4,"SUBSCRIPT")=4
"RTN","DG53478I",127,0)
 S XREF("SET")="D SDGPT9D^DGPTDDCR(.X,.DA,""PDX"")"
"RTN","DG53478I",128,0)
 S XREF("KILL")="D KDGPT9D^DGPTDDCR(.X,.DA,""PDX"")"
"RTN","DG53478I",129,0)
 D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","DG53478I",130,0)
 I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","DG53478I",131,0)
 ;
"RTN","DG53478I",132,0)
 ;Remove the cross-references using the original names (this applies to
"RTN","DG53478I",133,0)
 ;test sites).
"RTN","DG53478I",134,0)
 S IND=1
"RTN","DG53478I",135,0)
 F FIELD=79.16,79.17,79.18,79.19,79.201,79.21,79.22,79.23,79.24 D
"RTN","DG53478I",136,0)
 . S IND=IND+1
"RTN","DG53478I",137,0)
 . S NAME="ACR9DICD"_IND
"RTN","DG53478I",138,0)
 . D DELIXN^DDMOD(45,NAME,"","","MSG")
"RTN","DG53478I",139,0)
 . I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","DG53478I",140,0)
 ;Remove ACR9DSD14, it was created in error.
"RTN","DG53478I",141,0)
 D DELIXN^DDMOD(45,"ACR9DSD14","","","MSG")
"RTN","DG53478I",142,0)
 I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","DG53478I",143,0)
 ;
"RTN","DG53478I",144,0)
 S IND=0
"RTN","DG53478I",145,0)
 F FIELD=79.16,79.17,79.18,79.19,79.201,79.21,79.22,79.23,79.24,79.241,79.242,79.243,79.244 D
"RTN","DG53478I",146,0)
 . S IND=IND+1
"RTN","DG53478I",147,0)
 . S XREF("DESCR",9)="NAME is the name of the ICD9 code field. An example is D SD"_IND_", where D SD tells us it is a discharge secondary diagnosis."
"RTN","DG53478I",148,0)
 . S XREF("DESCR",10)="If the TYPE OF RECORD is CENSUS then the entry is not indexed."
"RTN","DG53478I",149,0)
 . S XREF("DESCR",11)="For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","DG53478I",150,0)
 . S NAME="SD"_IND
"RTN","DG53478I",151,0)
 . S NODE="D "_NAME
"RTN","DG53478I",152,0)
 . S XREF("NAME")="ACR9D"_NAME
"RTN","DG53478I",153,0)
 . S XREF("VAL",4)=FIELD
"RTN","DG53478I",154,0)
 . S XREF("VAL",4,"SUBSCRIPT")=4
"RTN","DG53478I",155,0)
 . S XREF("SET")="D SDGPT9D^DGPTDDCR(.X,.DA,"""_NODE_""")"
"RTN","DG53478I",156,0)
 . S XREF("KILL")="D KDGPT9D^DGPTDDCR(.X,.DA,"""_NODE_""")"
"RTN","DG53478I",157,0)
 . D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","DG53478I",158,0)
 . I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","DG53478I",159,0)
 ;
"RTN","DG53478I",160,0)
 ;Add the movement nodes.
"RTN","DG53478I",161,0)
 K XREF("VAL")
"RTN","DG53478I",162,0)
 S XREF("ROOT FILE")=45.02
"RTN","DG53478I",163,0)
 S XREF("VAL",1)=10
"RTN","DG53478I",164,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","DG53478I",165,0)
 S XREF("DESCR",7)="respectively. DATE is movement date."
"RTN","DG53478I",166,0)
 K XREF("DESCR",8),XREF("DESCR",9),XREF("DESCR",10),XREF("DESCR",11)
"RTN","DG53478I",167,0)
 S XREF("DESCR",9)="If the TYPE OF RECORD is CENSUS then the entry is not indexed."
"RTN","DG53478I",168,0)
 S XREF("DESCR",10)="For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","DG53478I",169,0)
 S IND=0
"RTN","DG53478I",170,0)
 F FIELD=5,6,7,8,9,11,12,13,14,15 D
"RTN","DG53478I",171,0)
 . S IND=IND+1
"RTN","DG53478I",172,0)
 . S XREF("DESCR",8)="NAME is the name of the ICD9 code field. An example is M ICD"_IND_", where M tells us it is a movement diagnosis."
"RTN","DG53478I",173,0)
 . S NAME="ICD"_IND
"RTN","DG53478I",174,0)
 . S NODE="M "_NAME
"RTN","DG53478I",175,0)
 . S XREF("NAME")="ACR9M"_NAME
"RTN","DG53478I",176,0)
 . S XREF("VAL",2)=FIELD
"RTN","DG53478I",177,0)
 . S XREF("VAL",2,"SUBSCRIPT")=2
"RTN","DG53478I",178,0)
 . S XREF("SET")="D SDGPT9M^DGPTDDCR(.X,.DA,"""_NODE_""")"
"RTN","DG53478I",179,0)
 . S XREF("KILL")="D KDGPT9M^DGPTDDCR(.X,.DA,"""_NODE_""")"
"RTN","DG53478I",180,0)
 . D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","DG53478I",181,0)
 . I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","DG53478I",182,0)
 Q
"RTN","DG53478I",183,0)
 ;
"RTN","DG53478I",184,0)
 ;===============================================================
"RTN","DG53478I",185,0)
CHLOC ;Create cross-references for Hospital Location.
"RTN","DG53478I",186,0)
 N MSG,RESULT,XREF
"RTN","DG53478I",187,0)
 D BMES^XPDUTL("Creating Hospital Location cross-references.")
"RTN","DG53478I",188,0)
 S XREF("FILE")=44
"RTN","DG53478I",189,0)
 S XREF("ROOT FILE")=44
"RTN","DG53478I",190,0)
 S XREF("TYPE")="R"
"RTN","DG53478I",191,0)
 S XREF("USE")="SORTING ONLY"
"RTN","DG53478I",192,0)
 S XREF("EXECUTION")="F"
"RTN","DG53478I",193,0)
 S XREF("ACTIVITY")="IR"
"RTN","DG53478I",194,0)
 S XREF("SHORT DESCR")="Index credit stop codes"
"RTN","DG53478I",195,0)
 S XREF("DESCR",1)="This index can be used to find all hospital locations in a"
"RTN","DG53478I",196,0)
 S XREF("DESCR",2)="credit stop code."
"RTN","DG53478I",197,0)
 S XREF("WHOLE KILL")="K ^SC(""ACST"")"
"RTN","DG53478I",198,0)
 S XREF("VAL",1)=2503
"RTN","DG53478I",199,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","DG53478I",200,0)
 S XREF("NAME")="ACST"
"RTN","DG53478I",201,0)
 S XREF("SET")="S ^SC(""ACST"",X,DA)"
"RTN","DG53478I",202,0)
 S XREF("KILL")="K ^SC(""ACST"",X,DA)"
"RTN","DG53478I",203,0)
 D CREIXN^DDMOD(.XREF,"kS",.RESULT,"","MSG")
"RTN","DG53478I",204,0)
 I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","DG53478I",205,0)
 ;
"RTN","DG53478I",206,0)
 S XREF("SHORT DESCR")="Index stop codes"
"RTN","DG53478I",207,0)
 S XREF("DESCR",1)="This index can be used to find all hospital locations in a"
"RTN","DG53478I",208,0)
 S XREF("DESCR",2)="stop code."
"RTN","DG53478I",209,0)
 S XREF("WHOLE KILL")="K ^SC(""AST"")"
"RTN","DG53478I",210,0)
 S XREF("VAL",1)=8
"RTN","DG53478I",211,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","DG53478I",212,0)
 S XREF("NAME")="AST"
"RTN","DG53478I",213,0)
 S XREF("SET")="S ^SC(""AST"",X,DA)"
"RTN","DG53478I",214,0)
 S XREF("KILL")="K ^SC(""AST"",X,DA)"
"RTN","DG53478I",215,0)
 K MSG
"RTN","DG53478I",216,0)
 D CREIXN^DDMOD(.XREF,"kS",.RESULT,"","MSG")
"RTN","DG53478I",217,0)
 I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","DG53478I",218,0)
 ;Eliminate the original CST and ST indexes.
"RTN","DG53478I",219,0)
 D DELIXN^DDMOD(44,"CST")
"RTN","DG53478I",220,0)
 D DELIXN^DDMOD(44,"ST")
"RTN","DG53478I",221,0)
 K ^SC("CST")
"RTN","DG53478I",222,0)
 K ^SC("ST")
"RTN","DG53478I",223,0)
 Q
"RTN","DG53478I",224,0)
 ;
"RTN","DGP478I")
1^11
"RTN","DGPTDDCR")
0^9^B52864629
"RTN","DGPTDDCR",1,0)
DGPTDDCR ;SLC/PKR - Routines for setting and killing Clinical Reminder index. ;08/12/2004
"RTN","DGPTDDCR",2,0)
        ;;5.3;Registration;**478**;Aug 13, 1993
"RTN","DGPTDDCR",3,0)
 ;===========================================================
"RTN","DGPTDDCR",4,0)
INDEX ;Build the indexes for PTF.
"RTN","DGPTDDCR",5,0)
 N D1,DA,DAS,DATE,DFN,DIFF,END,ENTRIES,ETEXT,GLOBAL,HASCODES
"RTN","DGPTDDCR",6,0)
 N ICD0,ICD9,IND,JND,KND,NE0,NE9,NERROR,NODE,START
"RTN","DGPTDDCR",7,0)
 N TEMP0,TEMP70,TEMP71,TEMPP,TEMPS,TENP,TEXT,VISIT
"RTN","DGPTDDCR",8,0)
 ;DBIA 4114
"RTN","DGPTDDCR",9,0)
 ;Don't leave any old stuff around.
"RTN","DGPTDDCR",10,0)
 K ^PXRMINDX(45)
"RTN","DGPTDDCR",11,0)
 S GLOBAL=$$GET1^DID(45,"","","GLOBAL NAME")
"RTN","DGPTDDCR",12,0)
 S ENTRIES=$P(^DGPT(0),U,4)
"RTN","DGPTDDCR",13,0)
 S TENP=ENTRIES/10
"RTN","DGPTDDCR",14,0)
 S TENP=+$P(TENP,".",1)
"RTN","DGPTDDCR",15,0)
 I TENP<1 S TENP=1
"RTN","DGPTDDCR",16,0)
 D BMES^XPDUTL("Building indexes for DGPT")
"RTN","DGPTDDCR",17,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","DGPTDDCR",18,0)
 D MES^XPDUTL(TEXT)
"RTN","DGPTDDCR",19,0)
 S START=$H
"RTN","DGPTDDCR",20,0)
 S (DA,IND,NE0,NE9,NERROR)=0
"RTN","DGPTDDCR",21,0)
 F  S DA=+$O(^DGPT(DA)) Q:DA=0  D
"RTN","DGPTDDCR",22,0)
 . S IND=IND+1
"RTN","DGPTDDCR",23,0)
 . I IND#TENP=0 D
"RTN","DGPTDDCR",24,0)
 .. S TEXT="Processing entry "_IND
"RTN","DGPTDDCR",25,0)
 .. D MES^XPDUTL(TEXT)
"RTN","DGPTDDCR",26,0)
 . I IND#10000=0 W "."
"RTN","DGPTDDCR",27,0)
 . S TEMP0=$G(^DGPT(DA,0))
"RTN","DGPTDDCR",28,0)
 .;Cenus records are not indexed.
"RTN","DGPTDDCR",29,0)
 . I $P(TEMP0,U,11)=2 Q
"RTN","DGPTDDCR",30,0)
 . S DFN=$P(TEMP0,U,1)
"RTN","DGPTDDCR",31,0)
 . I DFN="" D  Q
"RTN","DGPTDDCR",32,0)
 .. S ETEXT=DA_" no patient"
"RTN","DGPTDDCR",33,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",34,0)
 . S D1=0
"RTN","DGPTDDCR",35,0)
 . F  S D1=+$O(^DGPT(DA,"S",D1)) Q:D1=0  D
"RTN","DGPTDDCR",36,0)
 .. S TEMPS=$G(^DGPT(DA,"S",D1,0))
"RTN","DGPTDDCR",37,0)
 .. S DATE=$P(TEMPS,U,1)
"RTN","DGPTDDCR",38,0)
 .. I DATE="" D  Q
"RTN","DGPTDDCR",39,0)
 ... S ETEXT=DA_" S node missing date"
"RTN","DGPTDDCR",40,0)
 ... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR) Q
"RTN","DGPTDDCR",41,0)
 .. S DAS=DA_";S;"_D1_";0"
"RTN","DGPTDDCR",42,0)
 .. S KND=0
"RTN","DGPTDDCR",43,0)
 .. F JND=8,9,10,11,12 D
"RTN","DGPTDDCR",44,0)
 ... S KND=KND+1
"RTN","DGPTDDCR",45,0)
 ... S NODE="S"_KND
"RTN","DGPTDDCR",46,0)
 ... S ICD0=$P(TEMPS,U,JND)
"RTN","DGPTDDCR",47,0)
 ... I (ICD0'="") D
"RTN","DGPTDDCR",48,0)
 .... I $D(^ICD0(ICD0)) D
"RTN","DGPTDDCR",49,0)
 ..... S NE0=NE0+1
"RTN","DGPTDDCR",50,0)
 ..... S ^PXRMINDX(45,"ICD0","INP",ICD0,NODE,DFN,DATE,DAS)=""
"RTN","DGPTDDCR",51,0)
 ..... S ^PXRMINDX(45,"ICD0","PNI",DFN,NODE,ICD0,DATE,DAS)=""
"RTN","DGPTDDCR",52,0)
 .... E  D 
"RTN","DGPTDDCR",53,0)
 ..... S ETEXT=DAS_" node "_NODE_" invalid ICD0"
"RTN","DGPTDDCR",54,0)
 ..... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",55,0)
 .;
"RTN","DGPTDDCR",56,0)
 . S D1=0
"RTN","DGPTDDCR",57,0)
 . F  S D1=+$O(^DGPT(DA,"P",D1)) Q:D1=0  D
"RTN","DGPTDDCR",58,0)
 .. S TEMPP=$G(^DGPT(DA,"P",D1,0))
"RTN","DGPTDDCR",59,0)
 .. S DATE=$P(TEMPP,U,1)
"RTN","DGPTDDCR",60,0)
 .. I DATE="" D  Q
"RTN","DGPTDDCR",61,0)
 ... S ETEXT=DA_" P node missing date"
"RTN","DGPTDDCR",62,0)
 ... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR) Q
"RTN","DGPTDDCR",63,0)
 .. S DAS=DA_";P;"_D1_";0"
"RTN","DGPTDDCR",64,0)
 .. S KND=0
"RTN","DGPTDDCR",65,0)
 .. F JND=5,6,7,8,9 D
"RTN","DGPTDDCR",66,0)
 ... S KND=KND+1
"RTN","DGPTDDCR",67,0)
 ... S NODE="P"_KND
"RTN","DGPTDDCR",68,0)
 ... S ICD0=$P(TEMPP,U,JND)
"RTN","DGPTDDCR",69,0)
 ... I (ICD0'="") D
"RTN","DGPTDDCR",70,0)
 .... I $D(^ICD0(ICD0)) D
"RTN","DGPTDDCR",71,0)
 ..... S NE0=NE0+1
"RTN","DGPTDDCR",72,0)
 ..... S ^PXRMINDX(45,"ICD0","INP",ICD0,NODE,DFN,DATE,DAS)=""
"RTN","DGPTDDCR",73,0)
 ..... S ^PXRMINDX(45,"ICD0","PNI",DFN,NODE,ICD0,DATE,DAS)=""
"RTN","DGPTDDCR",74,0)
 .... E  D
"RTN","DGPTDDCR",75,0)
 ..... S ETEXT=DAS_" "_NODE_" invalid ICD0"
"RTN","DGPTDDCR",76,0)
 ..... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",77,0)
 .;
"RTN","DGPTDDCR",78,0)
 .;Discharge ICD9 codes
"RTN","DGPTDDCR",79,0)
 . I $D(^DGPT(DA,70)) D
"RTN","DGPTDDCR",80,0)
 .. S TEMP70=$G(^DGPT(DA,70))
"RTN","DGPTDDCR",81,0)
 .. S TEMP71=$G(^DGPT(DA,71))
"RTN","DGPTDDCR",82,0)
 .. S DATE=$P(TEMP70,U,1)
"RTN","DGPTDDCR",83,0)
 .. I DATE="" S DATE=$P(TEMP0,U,2)
"RTN","DGPTDDCR",84,0)
 .. S DAS=DA_";70"
"RTN","DGPTDDCR",85,0)
 .. S ICD9=$P(TEMP70,U,10)
"RTN","DGPTDDCR",86,0)
 .. I (ICD9'="") D
"RTN","DGPTDDCR",87,0)
 ... I $D(^ICD9(ICD9)) D
"RTN","DGPTDDCR",88,0)
 .... S NE9=NE9+1
"RTN","DGPTDDCR",89,0)
 .... S ^PXRMINDX(45,"ICD9","INP",ICD9,"DXLS",DFN,DATE,DAS)=""
"RTN","DGPTDDCR",90,0)
 .... S ^PXRMINDX(45,"ICD9","PNI",DFN,"DXLS",ICD9,DATE,DAS)=""
"RTN","DGPTDDCR",91,0)
 ... E  D
"RTN","DGPTDDCR",92,0)
 .... S ETEXT=DAS_" DXLS invalid ICD9"
"RTN","DGPTDDCR",93,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",94,0)
 ..;
"RTN","DGPTDDCR",95,0)
 .. S ICD9=$P(TEMP70,U,11)
"RTN","DGPTDDCR",96,0)
 .. I (ICD9'="") D
"RTN","DGPTDDCR",97,0)
 ... I $D(^ICD9(ICD9)) D
"RTN","DGPTDDCR",98,0)
 .... S NE9=NE9+1
"RTN","DGPTDDCR",99,0)
 .... S ^PXRMINDX(45,"ICD9","INP",ICD9,"PDX",DFN,DATE,DAS)=""
"RTN","DGPTDDCR",100,0)
 .... S ^PXRMINDX(45,"ICD9","PNI",DFN,"PDX",ICD9,DATE,DAS)=""
"RTN","DGPTDDCR",101,0)
 ... E  D
"RTN","DGPTDDCR",102,0)
 .... S ETEXT=DAS_" PDX invalid ICD9"
"RTN","DGPTDDCR",103,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",104,0)
 ..;
"RTN","DGPTDDCR",105,0)
 .. S KND=0
"RTN","DGPTDDCR",106,0)
 .. F JND=16,17,18,19,20,21,22,23,24 D
"RTN","DGPTDDCR",107,0)
 ... S KND=KND+1
"RTN","DGPTDDCR",108,0)
 ... S NODE="D SD"_KND
"RTN","DGPTDDCR",109,0)
 ... S ICD9=$P(TEMP70,U,JND)
"RTN","DGPTDDCR",110,0)
 ... I (ICD9'="") D
"RTN","DGPTDDCR",111,0)
 .... I $D(^ICD9(ICD9)) D
"RTN","DGPTDDCR",112,0)
 ..... S NE9=NE9+1
"RTN","DGPTDDCR",113,0)
 ..... S ^PXRMINDX(45,"ICD9","INP",ICD9,NODE,DFN,DATE,DAS)=""
"RTN","DGPTDDCR",114,0)
 ..... S ^PXRMINDX(45,"ICD9","PNI",DFN,NODE,ICD9,DATE,DAS)=""
"RTN","DGPTDDCR",115,0)
 .... E  D
"RTN","DGPTDDCR",116,0)
 ..... S ETEXT=DAS_" node "_NODE_" invalid ICD9"
"RTN","DGPTDDCR",117,0)
 ..... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",118,0)
 ..;
"RTN","DGPTDDCR",119,0)
 .. S KND=9
"RTN","DGPTDDCR",120,0)
 .. F JND=1,2,3,4 D
"RTN","DGPTDDCR",121,0)
 ... S KND=KND+1
"RTN","DGPTDDCR",122,0)
 ... S NODE="D SD"_KND
"RTN","DGPTDDCR",123,0)
 ... S ICD9=$P(TEMP71,U,JND)
"RTN","DGPTDDCR",124,0)
 ... I (ICD9'="") D
"RTN","DGPTDDCR",125,0)
 .... I $D(^ICD9(ICD9)) D
"RTN","DGPTDDCR",126,0)
 ..... S NE9=NE9+1
"RTN","DGPTDDCR",127,0)
 ..... S ^PXRMINDX(45,"ICD9","INP",ICD9,NODE,DFN,DATE,DAS)=""
"RTN","DGPTDDCR",128,0)
 ..... S ^PXRMINDX(45,"ICD9","PNI",DFN,NODE,ICD9,DATE,DAS)=""
"RTN","DGPTDDCR",129,0)
 .... E  D
"RTN","DGPTDDCR",130,0)
 ..... S ETEXT=DAS_" node "_NODE_" invalid ICD9"
"RTN","DGPTDDCR",131,0)
 ..... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",132,0)
 ..;
"RTN","DGPTDDCR",133,0)
 .;Movement ICD9 codes
"RTN","DGPTDDCR",134,0)
 . I '$D(^DGPT(DA,"M")) Q
"RTN","DGPTDDCR",135,0)
 . S D1=0
"RTN","DGPTDDCR",136,0)
 . F  S D1=$O(^DGPT(DA,"M",D1)) Q:+D1=0  D
"RTN","DGPTDDCR",137,0)
 .. S TEMPS=$G(^DGPT(DA,"M",D1,0))
"RTN","DGPTDDCR",138,0)
 .. S DATE=$P(TEMPS,U,10)
"RTN","DGPTDDCR",139,0)
 .. I DATE="" D  Q
"RTN","DGPTDDCR",140,0)
 ... S HASCODES=0
"RTN","DGPTDDCR",141,0)
 ... F JND=5,6,7,8,9,11,12,13,14,15 D
"RTN","DGPTDDCR",142,0)
 .... S ICD9=$P(TEMPS,U,JND)
"RTN","DGPTDDCR",143,0)
 .... I ICD9'="" S HASCODES=1
"RTN","DGPTDDCR",144,0)
 ... I HASCODES D
"RTN","DGPTDDCR",145,0)
 .... S ETEXT=DA_";M;"_D1_";0"_" M node missing date"
"RTN","DGPTDDCR",146,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",147,0)
 .. S DAS=DA_";M;"_D1
"RTN","DGPTDDCR",148,0)
 .. S KND=0
"RTN","DGPTDDCR",149,0)
 .. F JND=5,6,7,8,9,11,12,13,14,15 D
"RTN","DGPTDDCR",150,0)
 ... S KND=KND+1
"RTN","DGPTDDCR",151,0)
 ... S NODE="M ICD"_KND
"RTN","DGPTDDCR",152,0)
 ... S ICD9=$P(TEMPS,U,JND)
"RTN","DGPTDDCR",153,0)
 ... I (ICD9'="") D
"RTN","DGPTDDCR",154,0)
 .... I $D(^ICD9(ICD9)) D
"RTN","DGPTDDCR",155,0)
 ..... S NE9=NE9+1
"RTN","DGPTDDCR",156,0)
 ..... S ^PXRMINDX(45,"ICD9","INP",ICD9,NODE,DFN,DATE,DAS)=""
"RTN","DGPTDDCR",157,0)
 ..... S ^PXRMINDX(45,"ICD9","PNI",DFN,NODE,ICD9,DATE,DAS)=""
"RTN","DGPTDDCR",158,0)
 .... E  D
"RTN","DGPTDDCR",159,0)
 ..... S ETEXT=DAS_" M node invalid ICD9"
"RTN","DGPTDDCR",160,0)
 ..... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","DGPTDDCR",161,0)
 .;
"RTN","DGPTDDCR",162,0)
 S END=$H
"RTN","DGPTDDCR",163,0)
 S TEXT=NE0_" PTF ICD0 results indexed."
"RTN","DGPTDDCR",164,0)
 D MES^XPDUTL(TEXT)
"RTN","DGPTDDCR",165,0)
 S TEXT=NE9_" PTF ICD9 results indexed."
"RTN","DGPTDDCR",166,0)
 D MES^XPDUTL(TEXT)
"RTN","DGPTDDCR",167,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","DGPTDDCR",168,0)
 ;If there were errors send a message.
"RTN","DGPTDDCR",169,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","DGPTDDCR",170,0)
 ;Send a MailMan message with the results.
"RTN","DGPTDDCR",171,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,(NE0+NE9),NERROR)
"RTN","DGPTDDCR",172,0)
 S ^PXRMINDX(45,"GLOBAL NAME")=GLOBAL
"RTN","DGPTDDCR",173,0)
 S ^PXRMINDX(45,"BUILT BY")=DUZ
"RTN","DGPTDDCR",174,0)
 S ^PXRMINDX(45,"DATE BUILT")=$$NOW^XLFDT
"RTN","DGPTDDCR",175,0)
 Q
"RTN","DGPTDDCR",176,0)
 ;
"RTN","DGPTDDCR",177,0)
 ;===============================================================
"RTN","DGPTDDCR",178,0)
KDGPT0(X,DA,NODE,NUM) ;Delete index for PTF ICD0 data.
"RTN","DGPTDDCR",179,0)
 ;Census records are not indexed.
"RTN","DGPTDDCR",180,0)
 I $P(^DGPT(DA(1),0),U,11)=2 Q
"RTN","DGPTDDCR",181,0)
 N DAS,DFN,NNAME
"RTN","DGPTDDCR",182,0)
 S DFN=$P(^DGPT(DA(1),0),U,1)
"RTN","DGPTDDCR",183,0)
 S NNAME=NODE_NUM
"RTN","DGPTDDCR",184,0)
 S DAS=DA(1)_";"_NODE_";"_DA_";0"
"RTN","DGPTDDCR",185,0)
 ;DBIA 4114
"RTN","DGPTDDCR",186,0)
 K ^PXRMINDX(45,"ICD0","INP",X(2),NNAME,DFN,X(1),DAS)
"RTN","DGPTDDCR",187,0)
 K ^PXRMINDX(45,"ICD0","PNI",DFN,NNAME,X(2),X(1),DAS)
"RTN","DGPTDDCR",188,0)
 Q
"RTN","DGPTDDCR",189,0)
 ;
"RTN","DGPTDDCR",190,0)
 ;===============================================================
"RTN","DGPTDDCR",191,0)
KDGPT9D(X,DA,NODE) ;Delete index for PTF discharge ICD9 data.
"RTN","DGPTDDCR",192,0)
 N DAS,DATE
"RTN","DGPTDDCR",193,0)
 ;Census records are not indexed.
"RTN","DGPTDDCR",194,0)
 I X(3)=2 Q
"RTN","DGPTDDCR",195,0)
 ;If there is no discharge date use the admission date.
"RTN","DGPTDDCR",196,0)
 S DATE=$S(X(5)'="":X(5),1:X(2))
"RTN","DGPTDDCR",197,0)
 S DAS=DA_";70"
"RTN","DGPTDDCR",198,0)
 ;DBIA 4114
"RTN","DGPTDDCR",199,0)
 K ^PXRMINDX(45,"ICD9","INP",X(4),NODE,X(1),DATE,DAS)
"RTN","DGPTDDCR",200,0)
 K ^PXRMINDX(45,"ICD9","PNI",X(1),NODE,X(4),DATE,DAS)
"RTN","DGPTDDCR",201,0)
 Q
"RTN","DGPTDDCR",202,0)
 ;
"RTN","DGPTDDCR",203,0)
 ;===============================================================
"RTN","DGPTDDCR",204,0)
KDGPT9M(X,DA,NODE) ;Delete index for PTF movement ICD9 data.
"RTN","DGPTDDCR",205,0)
 ;Census records are not indexed.
"RTN","DGPTDDCR",206,0)
 I $P(^DGPT(DA(1),0),U,11)=2 Q
"RTN","DGPTDDCR",207,0)
 N DAS,DFN,TEMP
"RTN","DGPTDDCR",208,0)
 S TEMP=^DGPT(DA(1),0)
"RTN","DGPTDDCR",209,0)
 S DFN=$P(TEMP,U,1)
"RTN","DGPTDDCR",210,0)
 S DAS=DA(1)_";M;"_DA
"RTN","DGPTDDCR",211,0)
 ;DBIA 4114
"RTN","DGPTDDCR",212,0)
 K ^PXRMINDX(45,"ICD9","INP",X(2),NODE,DFN,X(1),DAS)
"RTN","DGPTDDCR",213,0)
 K ^PXRMINDX(45,"ICD9","PNI",DFN,NODE,X(2),X(1),DAS)
"RTN","DGPTDDCR",214,0)
 Q
"RTN","DGPTDDCR",215,0)
 ;
"RTN","DGPTDDCR",216,0)
 ;===============================================================
"RTN","DGPTDDCR",217,0)
SDGPT0(X,DA,NODE,NUM) ;Set index for PTF ICD0 data.
"RTN","DGPTDDCR",218,0)
 ;For node 401 surgery node:
"RTN","DGPTDDCR",219,0)
 ;X(1)=SURGERY/PROCEDURE DATE, X(2)=ICD0
"RTN","DGPTDDCR",220,0)
 ;X(2) nodes: 45.01,8; 45.01,9; 45.01,10; 45.01,11; 45.01,12
"RTN","DGPTDDCR",221,0)
 ;For node 601, procedure node:
"RTN","DGPTDDCR",222,0)
 ;X(1)=PROCEDURE DATE, X(2)=ICD0
"RTN","DGPTDDCR",223,0)
 ;X(2) source nodes: 45.05,4; 45.05,5; 45.05,6; 45.05,7; 45.05,8
"RTN","DGPTDDCR",224,0)
 ;Census records are not indexed.
"RTN","DGPTDDCR",225,0)
 I $P(^DGPT(DA(1),0),U,11)=2 Q
"RTN","DGPTDDCR",226,0)
 N DAS,DFN,NNAME
"RTN","DGPTDDCR",227,0)
 S DFN=$P(^DGPT(DA(1),0),U,1)
"RTN","DGPTDDCR",228,0)
 S NNAME=NODE_NUM
"RTN","DGPTDDCR",229,0)
 S DAS=DA(1)_";"_NODE_";"_DA_";0"
"RTN","DGPTDDCR",230,0)
 ;DBIA 4114
"RTN","DGPTDDCR",231,0)
 S ^PXRMINDX(45,"ICD0","INP",X(2),NNAME,DFN,X(1),DAS)=""
"RTN","DGPTDDCR",232,0)
 S ^PXRMINDX(45,"ICD0","PNI",DFN,NNAME,X(2),X(1),DAS)=""
"RTN","DGPTDDCR",233,0)
 Q
"RTN","DGPTDDCR",234,0)
 ;
"RTN","DGPTDDCR",235,0)
 ;===============================================================
"RTN","DGPTDDCR",236,0)
SDGPT9D(X,DA,NODE) ;Set index for PTF discharge ICD9 data.
"RTN","DGPTDDCR",237,0)
 ;X(1)=DFN, X(2)=ADMISSION DATE, X(3)=TYPE OF RECORD, X(4)=ICD9,
"RTN","DGPTDDCR",238,0)
 ;X(5)=DISCHARGE DATE
"RTN","DGPTDDCR",239,0)
 ;ICD9 from nodes: 45,79; 45,80; 45,79.16 45,79.17; 45,79.18;
"RTN","DGPTDDCR",240,0)
 ;45,79.19; 45,79.20; 45,79.21; 45,79.22; 45,79.22; 45.79.23;
"RTN","DGPTDDCR",241,0)
 ;45.79.24.
"RTN","DGPTDDCR",242,0)
 ;By name these nodes are: DXLS, PRINCIPAL DIAGNOSIS, SECONDARY
"RTN","DGPTDDCR",243,0)
 ;DIAGNOSIS 1 through SECONDARY DIAGNOSIS 13.
"RTN","DGPTDDCR",244,0)
 ;Census records are not indexed.
"RTN","DGPTDDCR",245,0)
 I X(3)=2 Q
"RTN","DGPTDDCR",246,0)
 N DAS,DATE
"RTN","DGPTDDCR",247,0)
 ;If there is no discharge date use the admission date.
"RTN","DGPTDDCR",248,0)
 S DATE=$S(X(5)'="":X(5),1:X(2))
"RTN","DGPTDDCR",249,0)
 S DAS=DA_";70"
"RTN","DGPTDDCR",250,0)
 ;DBIA 4114
"RTN","DGPTDDCR",251,0)
 S ^PXRMINDX(45,"ICD9","INP",X(4),NODE,X(1),DATE,DAS)=""
"RTN","DGPTDDCR",252,0)
 S ^PXRMINDX(45,"ICD9","PNI",X(1),NODE,X(4),DATE,DAS)=""
"RTN","DGPTDDCR",253,0)
 Q
"RTN","DGPTDDCR",254,0)
 ;
"RTN","DGPTDDCR",255,0)
 ;===============================================================
"RTN","DGPTDDCR",256,0)
SDGPT9M(X,DA,NODE) ;Set index for PTF movement ICD9 data.
"RTN","DGPTDDCR",257,0)
 ;X(1)=MOVEMENT DATE, X(3)=TYPE OF RECORD, X(3)=ICD9
"RTN","DGPTDDCR",258,0)
 ;ICD9 from nodes: 45.02,5 45.02,6, 45.02,7 45.02,8 45.02,9
"RTN","DGPTDDCR",259,0)
 ;45.02,11 45.02,12 45.02,13 45.02,14 45.02,15
"RTN","DGPTDDCR",260,0)
 ;By name these nodes are: ICD 1, through ICD 10.
"RTN","DGPTDDCR",261,0)
 ;Census records are not indexed.
"RTN","DGPTDDCR",262,0)
 I $P(^DGPT(DA(1),0),U,11)=2 Q
"RTN","DGPTDDCR",263,0)
 N DAS,DFN,TEMP
"RTN","DGPTDDCR",264,0)
 S TEMP=^DGPT(DA(1),0)
"RTN","DGPTDDCR",265,0)
 S DFN=$P(TEMP,U,1)
"RTN","DGPTDDCR",266,0)
 S DAS=DA(1)_";M;"_DA
"RTN","DGPTDDCR",267,0)
 ;DBIA 4114
"RTN","DGPTDDCR",268,0)
 S ^PXRMINDX(45,"ICD9","INP",X(2),NODE,DFN,X(1),DAS)=""
"RTN","DGPTDDCR",269,0)
 S ^PXRMINDX(45,"ICD9","PNI",DFN,NODE,X(2),X(1),DAS)=""
"RTN","DGPTDDCR",270,0)
 Q
"RTN","DGPTDDCR",271,0)
 ;
"RTN","DGPTF4")
0^2^B23088100
"RTN","DGPTF4",1,0)
DGPTF4 ;ALB/JDS - PTF ENTRY/EDIT-4 ; 2/19/04 9:33am
"RTN","DGPTF4",2,0)
 ;;5.3;Registration;**114,115,397,510,517,478**;Aug 13, 1993
"RTN","DGPTF4",3,0)
 ;
"RTN","DGPTF4",4,0)
WR ;
"RTN","DGPTF4",5,0)
 W @IOF,HEAD,?72 S Z="<701>" D Z^DGPTFM K X S $P(X,"-",81)="" W !,X
"RTN","DGPTF4",6,0)
 Q
"RTN","DGPTF4",7,0)
EN S Y=+B(70) D D^DGPTUTL W ! S Z=5 D Z W $S($P(B(0),U,11)=1:"Date of Disch: ",1:"Census Date  : ") S Z=Y,Z1=20 D Z1 W "Disch Specialty: ",$S($D(^DIC(42.4,+$P(B(70),U,2),0)):$E($P(^(0),U,1),1,$S(DGPR:45,1:25)),1:"")
"RTN","DGPTF4",8,0)
 W !,"   Type of Disch: " S L=";"_$P(^DD(45,72,0),U,3),L1=";"_$P(B(70),U,3)_":" W $P($P(L,L1,2),";",1),?41 S L=";"_$P(^DD(45,72.1,0),U,3),L1=";"_$P(B(70),U,14)_":" W "Disch Status: ",$P($P(L,L1,2),";",1)
"RTN","DGPTF4",9,0)
 W !,"   Place of Disp: ",$S($D(^DIC(45.6,+$P(B(70),U,6),0)):$E($P(^(0),U,1),1,21),1:"")
"RTN","DGPTF4",10,0)
 W ?40 S Z=6 D Z W " Out Treat: ",$P("YES^^NO",U,+$P(B(70),U,4))
"RTN","DGPTF4",11,0)
 W !?6,"Means Test: " S L=";"_$P(^DD(45,10,0),U,3),L1=";"_$P(B(0),U,10)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTF4",12,0)
 W ?42,"VA Auspices: ",$S($P(B(70),U,5)=1:"YES",$P(B(70),U,5)=2:"NO",1:"")
"RTN","DGPTF4",13,0)
 W ! S Z=7 D Z W " Receiv facil: " S Z=$P(B(70),U,12)_$P(B(70),U,13),Z1=18 D Z1 W ?38 S Z="Other Fields" D Z
"RTN","DGPTF4",14,0)
 S DGINC=$P(B(101),U,7)
"RTN","DGPTF4",15,0)
 I DGINC>1000 S DGINC=$E(DGINC,1,$L(DGINC)-3)_","_$E(DGINC,$L(DGINC)-2,$L(DGINC))
"RTN","DGPTF4",16,0)
 W !,"      C&P Status: " S L=";"_$P(^DD(45,78,0),U,3),L1=";"_$P(B(70),U,9)_":" W $E($P($P(L,L1,2),";",1),1,24),?47,"Income: $",DGINC
"RTN","DGPTF4",17,0)
 K DGINC
"RTN","DGPTF4",18,0)
AS ;
"RTN","DGPTF4",19,0)
 N DGRSC
"RTN","DGPTF4",20,0)
 S DGRSC=$S($P(A(.3),U)="Y":$$RTEN^DGPTR4($P(A(.3),U,2)),1:"")
"RTN","DGPTF4",21,0)
 W !,"       ASIH Days: ",$P(B(70),U,8)
"RTN","DGPTF4",22,0)
 W ?40,"SC Percentage: ",$S($P(A(.3),U)="Y":$P(A(.3),U,2)_"%",1:"")
"RTN","DGPTF4",23,0)
 I DGRSC]"",DGRSC'=$P(A(.3),U,2) W ?60,"Transmitted: ["_DGRSC_"%]"
"RTN","DGPTF4",24,0)
 ;W !,?39,"Period Of Serv: ",$S($D(^DIC(21,$S('$D(^DGPM(+$O(^DGPM("APTF",PTF,0)),"ODS")):+$P(A(.32),U,3),+^("ODS"):+$O(^DIC(21,"D",6,0)),1:+$P(A(.32),U,3)),0)):$E($P(^(0),U),1,26),1:""),!
"RTN","DGPTF4",25,0)
 W !,?39,"Period Of Serv: "
"RTN","DGPTF4",26,0)
 W $S($D(^DIC(21,$S('$D(^DGPM(+$O(^DGPM("APTF",PTF,0)),"ODS")):+$$CKPOS^DGPTUTL($P(B(101),U,8),+$P(A(.32),U,3)),+^("ODS"):+$O(^DIC(21,"D",6,0)),1:$$CKPOS^DGPTUTL($P(B(101),U,8),+$P(A(.32),U,3))),0)):$E($P(^(0),U),1,26),1:""),!
"RTN","DGPTF4",27,0)
 Q
"RTN","DGPTF4",28,0)
 ;
"RTN","DGPTF4",29,0)
EN1 ;LOAD AND DISPLAY DIAGNOSES FOR PTF 701 SCREEN
"RTN","DGPTF4",30,0)
 K DRG S B(70)=$S($D(^DGPT(PTF,70)):^(70),1:""),B(71)=$S($D(^DGPT(PTF,71)):^(71),1:"") D WR
"RTN","DGPTF4",31,0)
 S DGPTDAT=$$GETDATE^ICDGTDRG(PTF) ;Get correct effective date
"RTN","DGPTF4",32,0)
 S DGPTTMP=$$ICDDX^ICDCODE(+$P(B(70),U,10),DGPTDAT)
"RTN","DGPTF4",33,0)
 W ! S Z=1 D Z W "  Principal Diagnosis: ",$S(DGPTTMP&$P(DGPTTMP,U,10):$P(DGPTTMP,U,4)_"("_$P(DGPTTMP,U,2)_")",1:"")
"RTN","DGPTF4",34,0)
 S DGPTTMP=$$ICDDX^ICDCODE(+$P(B(70),U,11),DGPTDAT)
"RTN","DGPTF4",35,0)
 W:$P(B(70),U,11)&('$P(B(70),U,10)) !,"  Principal Diag: ",$S(DGPTTMP&$P(DGPTTMP,U,10):$P(DGPTTMP,U,4)_" ("_$P(DGPTTMP,U,2)_")",1:"")
"RTN","DGPTF4",36,0)
 S K=B(70) F I=16:1:24 D DSP
"RTN","DGPTF4",37,0)
 S K=B(71) F I=1:1:4 D DSP
"RTN","DGPTF4",38,0)
 S DGPTF=PTF D:'DGST CHK701^DGPTSCAN,UP701^DGPTSPQ
"RTN","DGPTF4",39,0)
 ; display contents of 300th node 
"RTN","DGPTF4",40,0)
 S DG300=$S($D(^DGPT(PTF,300)):^(300),1:"") D:DG300]"" PRN2^DGPTFM8 K DG300
"RTN","DGPTF4",41,0)
EN2 K DRG
"RTN","DGPTF4",42,0)
 I $D(^DGPT(PTF,0)),$P(^(0),U,11)=1 D
"RTN","DGPTF4",43,0)
 .S DA=DFN
"RTN","DGPTF4",44,0)
 .D EN1^DGPTFD
"RTN","DGPTF4",45,0)
 .I $D(DRG),$D(^DGP(45.84,PTF,0)),$P(^(0),U,6)'=DRG D
"RTN","DGPTF4",46,0)
 ..N DGFDA,DGMSG
"RTN","DGPTF4",47,0)
 ..S DGFDA(45.84,PTF_",",6)=DRG
"RTN","DGPTF4",48,0)
 ..D FILE^DIE("","DGFDA","DGMSG")
"RTN","DGPTF4",49,0)
JUMP K AGE,B,CC,DA,DAM,DOB,DXLS,EXP,I,L1,L2,SEX,DRGCAL,S,DIC,DR,DIE
"RTN","DGPTF4",50,0)
 Q:DGPR
"RTN","DGPTF4",51,0)
 ;F I=$Y:1:18 W !
"RTN","DGPTF4",52,0)
 K X S $P(X,"-",81)="" W X
"RTN","DGPTF4",53,0)
 ;
"RTN","DGPTF4",54,0)
 G O:DGST&(('$D(DRG))!('DGDD)!('$D(^DGP(45.84,PTF))))
"RTN","DGPTF4",55,0)
X G ACT^DGPTF41
"RTN","DGPTF4",56,0)
CLS G NOT:('$D(DRG))!('DGDD)!('DGFC)
"RTN","DGPTF4",57,0)
 ;I DRG=470!(DRG=469) W !!,*7,"Unable to release DRG ",DRG,". Please verify data entered.",*7 D HANG^DGPTUTL G EN1
"RTN","DGPTF4",58,0)
 ;
"RTN","DGPTF4",59,0)
 ;change made to allow release of 470, before grouper released to vamc's
"RTN","DGPTF4",60,0)
 ;  patch 115
"RTN","DGPTF4",61,0)
 I DRG=469 W !!,*7,"Unable to release DRG ",DRG,". Please verify data entered.",*7 D HANG^DGPTUTL G EN1
"RTN","DGPTF4",62,0)
 I $D(DGCST),'DGCST D CEN G EN1:'DGCST
"RTN","DGPTF4",63,0)
 I '$P(^DGPT(PTF,0),"^",4) W !,"Updating TRANSFER DRGs..." S DGADM=$P(^DGPT(PTF,0),U,2) D SUDO1^DGPTSUDO
"RTN","DGPTF4",64,0)
 I DGDD>(DT+1) W !,"Cannot close with Discharge date in future." D HANG^DGPTUTL G EN1
"RTN","DGPTF4",65,0)
 I $D(^DGM("PT",DFN)) F I=0:0 S I=$O(^DGM("PT",DFN,I)) Q:'I  I '$D(^DGM(I,0)) K ^DGM(I),^DGM("PT",DFN,I)
"RTN","DGPTF4",66,0)
 I $D(^DGM("PT",DFN)) W !!,"Not all messages have been cleared up for this patient--cannot close.",*7,*7 S DGPTF=DFN,X="??" K DGALL D HELP^DGPTMSGD K DGPTF G EN1:'$D(DGALL) K DGALL
"RTN","DGPTF4",67,0)
 G CLS^DGPTF2
"RTN","DGPTF4",68,0)
 ;
"RTN","DGPTF4",69,0)
O I '$D(^DGP(45.84,PTF,0)) S DR="6///0",DIE="^DGPT(",DA=PTF,(DGST,DGN)=0 D ^DIE W !,"  NOT CLOSED " D HANG^DGPTUTL G EN1
"RTN","DGPTF4",70,0)
 S (DGST,DGN)=0
"RTN","DGPTF4",71,0)
 S DGPTIFN=PTF,DGRTY=1 D OPEN^DGPTFDEL S DGST=0
"RTN","DGPTF4",72,0)
 K DGPTIFN,DGRTY G EN1
"RTN","DGPTF4",73,0)
 ;
"RTN","DGPTF4",74,0)
Q G Q^DGPTF
"RTN","DGPTF4",75,0)
 ;
"RTN","DGPTF4",76,0)
NOT I 'DGFC S DR="3//^S X=$P($$SITE^VASITE,U,2);5",DIE="^DGPT(",DA=PTF D ^DIE S DGFC=$P(^DGPT(PTF,0),U,3) I DGFC G EN1
"RTN","DGPTF4",77,0)
 W !!,"Unable to close without a ",$S('$D(DRG):"DRG being calculated.",'DGDD:" discharge date.",1:" facility specified"),!!,*7,*7 H 4 G EN1
"RTN","DGPTF4",78,0)
 Q
"RTN","DGPTF4",79,0)
 ;
"RTN","DGPTF4",80,0)
Z D Z^DGPTF5 Q
"RTN","DGPTF4",81,0)
Z1 D Z1^DGPTF5 Q
"RTN","DGPTF4",82,0)
CEN D CEN^DGPTF5 Q
"RTN","DGPTF4",83,0)
DSP S J=$$ICDDX^ICDCODE(+$P(K,U,I),DGPTDAT) I J&$P(J,U,10) D
"RTN","DGPTF4",84,0)
 .I I#2 W ?40,$P(J,U,4)_"("_$P(J,U,2)_")" Q
"RTN","DGPTF4",85,0)
 .W !,$P(J,U,4)_"("_$P(J,U,2)_")"
"RTN","DGPTF4",86,0)
 Q
"RTN","DGPTFUP")
0^3^B13579333
"RTN","DGPTFUP",1,0)
DGPTFUP ;ALB/ABS,BOK - Updates Means Test, LOS, TRANSFER DRGs in PTF records ; 3/28/02 11:54am
"RTN","DGPTFUP",2,0)
 ;;5.3;Registration;**441,478**;Aug 13, 1993
"RTN","DGPTFUP",3,0)
ACTIVE ;this call should be queued to run nightly to update the LOS in active admission PTF records and the Means Test Indicator in Open PTF records
"RTN","DGPTFUP",4,0)
 D NOW^%DTC S DT=X,U="^",(DGBGJ,DGLN)=1
"RTN","DGPTFUP",5,0)
 F PTF=0:0 S PTF=$O(^DGPT("AS",0,PTF)) Q:PTF'>0  I $D(^DGPT(PTF,0)),$P(^(0),U,11)=1 S DFN=+^(0),DGADM=$P(^(0),U,2),DGPMCA=$O(^DGPM("APTT1",DFN,DGADM,0)),DGPMAN=$S($D(^DGPM(+DGPMCA,0)):^(0),1:"") I DGPMAN D:DGADM>2860700 MT^DGPTUTL D LOS
"RTN","DGPTFUP",6,0)
 K DGADM,DGADIFN,PTF,DFN,DGLEAVE,DGMV,DGMVDT,DGPASS,DGTOT,DGTYPE,X,X1,X2,DGCUM,DGMT,DGBGJ,DGLN,DGPMAN,DGPMCA Q
"RTN","DGPTFUP",7,0)
LOS Q:'$D(^DGPT("AADA",DGADM,PTF))!('$D(^DGPT(PTF,"M",1,0)))  I '$D(^DGPT(PTF,"M",1,"P")) S ^DGPT(PTF,"M",1,"P")=""
"RTN","DGPTFUP",8,0)
 S DGMVDT=1,DGCUM=0 F X=1:0 S X=$O(^DGPT(PTF,"M",X)) Q:X'>0  I $D(^(X,"P")),$P(^("P"),"^",3)>DGMVDT S DGMVDT=$P(^("P"),"^",3),DGCUM=$P(^("P"),"^",6)
"RTN","DGPTFUP",9,0)
 I DGMVDT'>1 S DGMVDT=DGADM
"RTN","DGPTFUP",10,0)
 S (DGLEAVE,DGPASS)=0,X1=DT,X2=DGMVDT D ^%DTC S DGTOT=$S(X>0:X,1:1)
"RTN","DGPTFUP",11,0)
 F DGMV=(DGMVDT-.1):0 S DGMV=$O(^DGPM("APTT2",DFN,DGMV)) Q:DGMV'>0  S X=$O(^DGPM("APTT2",DFN,DGMV,0)) I $S('$D(^DGPM(+X,0)):0,$P(^(0),"^",14)=DGPMCA:1,1:0) S DGTYPE=+$P(^(0),"^",18) I DGTYPE=1!(DGTYPE=2)!(DGTYPE=3) D ABSENT
"RTN","DGPTFUP",12,0)
 S DGTOT=DGTOT-DGPASS-DGLEAVE
"RTN","DGPTFUP",13,0)
 N DGFDA,DGMSG
"RTN","DGPTFUP",14,0)
 S DGFDA(45.02,1_","_PTF_",",23)=DGTOT
"RTN","DGPTFUP",15,0)
 S DGFDA(45.02,1_","_PTF_",",25)=DGTOT+DGCUM
"RTN","DGPTFUP",16,0)
 D FILE^DIE("","DGFDA","DGMSG")
"RTN","DGPTFUP",17,0)
 Q
"RTN","DGPTFUP",18,0)
ABSENT S X2=DGMV,X=$O(^DGPM("APTT2",DFN,DGMV)),X1=$S(X>0:X,1:DT) D ^%DTC I DGTYPE=1 S DGPASS=DGPASS+X Q
"RTN","DGPTFUP",19,0)
 S DGLEAVE=DGLEAVE+X Q
"RTN","DGPTFUP",20,0)
 ;
"RTN","DGPTFUP",21,0)
 ;ADDING TRANSFER DRGs
"RTN","DGPTFUP",22,0)
ALL D DT^DICRW S U="^" W !?5,"===> PTF TRANSFER DRG update beginning..."
"RTN","DGPTFUP",23,0)
 F PTF=0:0 S PTF=$O(^DGPT(PTF)) Q:PTF'>0  D UPDATE
"RTN","DGPTFUP",24,0)
 G Q
"RTN","DGPTFUP",25,0)
 ;
"RTN","DGPTFUP",26,0)
SOME ;
"RTN","DGPTFUP",27,0)
 W !!?2,"This option will recalculate the TRANSFER DRG's for all",!?2,"current fiscal year PTF records."
"RTN","DGPTFUP",28,0)
 W !!?2,"Do you want to continue" S %=2 D YN^DICN Q:%=-1!(%=2)
"RTN","DGPTFUP",29,0)
 I '% W !?2,"Answer 'YES' to begin recalculation or 'NO' to stop." G SOME
"RTN","DGPTFUP",30,0)
 W !?5,"===> PTF partial TRANSFER DRG update beginning with "
"RTN","DGPTFUP",31,0)
 W !?5,"     discharge dates for the current fiscal year..."
"RTN","DGPTFUP",32,0)
 ;
"RTN","DGPTFUP",33,0)
 D DT^DICRW S U="^",DGFYDT=$S($E(DT,4,5)<10:($E(DT,1,3)-1),1:$E(DT,1,3))_1000
"RTN","DGPTFUP",34,0)
 N DGD1SAV
"RTN","DGPTFUP",35,0)
 F DGXREF="ADS","AADA" S DGD1SAV=0  F DGD1=$S(DGXREF="ADS":DGFYDT,1:0):0 S DGD1=$O(^DGPT(DGXREF,DGD1)) Q:'DGD1  Q:DGD1<DGD1SAV  F PTF=0:0 S PTF=$O(^DGPT(DGXREF,DGD1,PTF)) Q:'PTF  D UPDATE
"RTN","DGPTFUP",36,0)
Q W !!?5,"===> PTF TRANSFER DRG update complete"
"RTN","DGPTFUP",37,0)
 K PTF,DGD1,DGFYDT,DGXREF Q
"RTN","DGPTFUP",38,0)
 ;
"RTN","DGPTFUP",39,0)
UPDATE ; -- update xfr drg's for PTF ifn
"RTN","DGPTFUP",40,0)
 S DGD1SAV=DGD1
"RTN","DGPTFUP",41,0)
 G UPDATEQ:'$D(^DGPT(PTF,0)) S DGNODE=^(0)
"RTN","DGPTFUP",42,0)
 G UPDATEQ:$S($P(DGNODE,"^",11)>1:1,1:$P(DGNODE,"^",4))
"RTN","DGPTFUP",43,0)
 D PM^DGPTUTL G UPDATEQ:'DGPMCA
"RTN","DGPTFUP",44,0)
 K DGTDD,DGPRD,DGNXD F I=0:0 S I=$O(^DGPT(PTF,"M",I)) Q:I'>0  D
"RTN","DGPTFUP",45,0)
 .N FLD,DGFDA,DGMSG
"RTN","DGPTFUP",46,0)
 .F FLD=20:1:25 S DGFDA(45.02,I_","_PTF_",",FLD)="@"
"RTN","DGPTFUP",47,0)
 .D FILE^DIE("","DGFDA","DGMSG")
"RTN","DGPTFUP",48,0)
 S DFN=+DGNODE,DGADM=+$P(DGNODE,U,2)
"RTN","DGPTFUP",49,0)
 D SUDO1^DGPTSUDO
"RTN","DGPTFUP",50,0)
 W:'(PTF#300) !,"   TRANSFER DRG update in progress...on IFN ",PTF
"RTN","DGPTFUP",51,0)
UPDATEQ K DGPMCA,DGPMAN,DGNODE,DGADM,DFN Q
"RTN","DGPTFUP",52,0)
 ;
"RTN","DGPTFUP",53,0)
ZERO ;LOOK FOR MISSING 0 NODE IN 501 MULTIPLE
"RTN","DGPTFUP",54,0)
 D LO^DGUTL F I=0:0 S I=$O(^DGPT(I)) Q:I'>0  S:'$D(^DGPT(I,0)) ^DGPT(I,0)="" I $D(^DGPT(I,"M")),'$D(^("M",0)) S ^(0)="^45.02AI"
"RTN","DGPTFUP",55,0)
 K I Q
"RTN","DGPTPXRM")
0^8^B909190
"RTN","DGPTPXRM",1,0)
DGPTPXRM ;SLC/PKR - Routines for Clinical Reminder index. ;09/30/2004
"RTN","DGPTPXRM",2,0)
        ;;5.3;Registration;**478**;Aug 13, 1993
"RTN","DGPTPXRM",3,0)
 ;===========================================================
"RTN","DGPTPXRM",4,0)
PTF(DAS,DATA) ;Return data for a PTF entry
"RTN","DGPTPXRM",5,0)
 N D0,TEMP
"RTN","DGPTPXRM",6,0)
 S D0=$P(DAS,";",1)
"RTN","DGPTPXRM",7,0)
 S TEMP=^DGPT(D0,0)
"RTN","DGPTPXRM",8,0)
 S DATA("ADMISSION DATE")=$P(TEMP,U,2)
"RTN","DGPTPXRM",9,0)
 S DATA("FACILITY")=$P(TEMP,U,3)
"RTN","DGPTPXRM",10,0)
 S DATA("FEE BASIS")=$P(TEMP,U,4)
"RTN","DGPTPXRM",11,0)
 I $D(^DGPT(D0,70)) D
"RTN","DGPTPXRM",12,0)
 . S TEMP=$G(^DGPT(D0,70))
"RTN","DGPTPXRM",13,0)
 . S DATA("DISCHARGE DATE")=$P(TEMP,U,1)
"RTN","DGPTPXRM",14,0)
 . S DATA("DISCHARGE SPECIALITY")=$P(TEMP,U,2)
"RTN","DGPTPXRM",15,0)
 . S DATA("DISCHARGE STATUS")=$P(TEMP,U,14)
"RTN","DGPTPXRM",16,0)
 . S DATA("DISCHARGE PROVIDER")=$P(TEMP,U,15)
"RTN","DGPTPXRM",17,0)
 I DAS["M" D
"RTN","DGPTPXRM",18,0)
 . N D1
"RTN","DGPTPXRM",19,0)
 . S D1=$P(DAS,";",3)
"RTN","DGPTPXRM",20,0)
 . S TEMP=^DGPT(D0,"M",D1,0)
"RTN","DGPTPXRM",21,0)
 . S DATA("MOVEMENT RECORD")=$P(TEMP,U,1)
"RTN","DGPTPXRM",22,0)
 Q
"RTN","DGPTPXRM",23,0)
 ;
"RTN","DGPTSUD1")
0^4^B6327420
"RTN","DGPTSUD1",1,0)
DGPTSUD1 ;ALB/AS/ADL - Look for the same DRG in consecutive RAM movements ; Feb 23 87
"RTN","DGPTSUD1",2,0)
 ;;5.3;Registration;**510,478**;Aug 13, 1993
"RTN","DGPTSUD1",3,0)
 ;;ADL;Update for CSV Project;;Mar 27, 2003
"RTN","DGPTSUD1",4,0)
 ;
"RTN","DGPTSUD1",5,0)
 ;called from ONE+2^DGPTSUDO
"RTN","DGPTSUD1",6,0)
 F I=0:0 S I=$O(^DGPT(PTF,"M",I)) Q:I'>0  I $D(^DGPT(PTF,"M",I,"P")) S DGNODE=^("P"),DGSUDO(+$P(DGNODE,"^",3))=I_"^"_$P(DGNODE,"^",1)
"RTN","DGPTSUD1",7,0)
 G Q:'$D(DGSUDO) S (DGSUNX,DGSUPR)=$O(DGSUDO(0)) F XX=0:0 S DGSUNX=$O(DGSUDO(DGSUPR)) Q:DGSUNX'>0  D SAME
"RTN","DGPTSUD1",8,0)
Q K DGSUPR,DGSUNX,DGNODE,DGSUDO,DG1,DG2,DGMV1,DGMV2,DGSUB,DGSUR,DGSURDT,%,I,J,X1,X2 Q
"RTN","DGPTSUD1",9,0)
SAME I $P(DGSUDO(DGSUPR),"^",2)']""!($P(DGSUDO(DGSUPR),"^",2)'=$P(DGSUDO(DGSUNX),"^",2)) S DGSUPR=DGSUNX Q
"RTN","DGPTSUD1",10,0)
 S DG1=+$P(DGSUDO(DGSUPR),"^",1),DG2=+$P(DGSUDO(DGSUNX),"^",1),DGMV1=$S($D(^DGPT(PTF,"M",+DG1,"P")):^("P"),1:""),DGMV2=$S($D(^DGPT(PTF,"M",+DG2,"P")):^("P"),1:"")
"RTN","DGPTSUD1",11,0)
 ;Fiscal year 89 discharges are checked for a surgery performed while on Surgery Service if the DRG is a surgical DRG
"RTN","DGPTSUD1",12,0)
 G 88:'$P($$DRG^ICDGTDRG($P(DGSUDO(DGSUNX),"^",2),$$GETDATE^ICDGTDRG(PTF)),"^",6)
"RTN","DGPTSUD1",13,0)
 I $D(^DGPT(PTF,70)),$P(^DGPT(PTF,70),"^",1)<2881000 G 88
"RTN","DGPTSUD1",14,0)
 I $P(DGMV1,"^",2)'="S"&($P(DGMV2,"^",2)'="S") G 88
"RTN","DGPTSUD1",15,0)
 I $P(DGMV1,"^",2)="S" S I=DGADM F J=0:0 S J=$O(DGSUDO(J)) Q:J=DGSUPR!(J'>0)  S I=J
"RTN","DGPTSUD1",16,0)
 S X1=$S($P(DGMV1,"^",2)="S":I,1:DGSUPR),X2=$S($P(DGMV1,"^",2)="S":DGSUPR,1:DGSUNX),X1=$P(X1,".",1),X2=$P(X2,".",1)_.99,DGSUR=0
"RTN","DGPTSUD1",17,0)
 F I=0:0 S I=$O(^DGPT(PTF,"S",I)) Q:I'>0  S DGSURDT=$S($D(^DGPT(PTF,"S",I,0)):+^(0),1:9999999) I X1<DGSURDT&(DGSURDT<X2) S DGSUR=1 Q
"RTN","DGPTSUD1",18,0)
 I DGSUR S DGSUB=$S($P(DGMV1,"^",2)="S":DG1,1:DG2) G KILL
"RTN","DGPTSUD1",19,0)
88 S DGSUB=$S($P(DGMV1,"^",4)>$P(DGMV2,"^",4):DG1,1:DG2)
"RTN","DGPTSUD1",20,0)
KILL N DGFDA,DGMSG,FLD
"RTN","DGPTSUD1",21,0)
 S DGFDA(45.02,DGSUB_","_PTF_",",23)=$P(DGMV1,"^",4)+$P(DGMV2,"^",4)
"RTN","DGPTSUD1",22,0)
 D FILE^DIE("","DGFDA","DGMSG")
"RTN","DGPTSUD1",23,0)
 I DGSUB=DG1 D  Q
"RTN","DGPTSUD1",24,0)
 .K DGFDA,DGMSG
"RTN","DGPTSUD1",25,0)
 .S DGFDA(45.02,DG1_","_PTF_",",25)=$P(DGMV2,"^",6)
"RTN","DGPTSUD1",26,0)
 .D FILE^DIE("","DGFDA","DGMSG")
"RTN","DGPTSUD1",27,0)
 .K DGFDA,DGMSG
"RTN","DGPTSUD1",28,0)
 .F FLD=20:1:25 S DGFDA(45.02,DG2_","_PTF_",",FLD)="@"
"RTN","DGPTSUD1",29,0)
 .D FILE^DIE("","DGFDA","DGMSG")
"RTN","DGPTSUD1",30,0)
 .K DGSUDO(DGSUNX)
"RTN","DGPTSUD1",31,0)
 K DGFDA,DGMSG
"RTN","DGPTSUD1",32,0)
 F FLD=20:1:25 S DGFDA(45.02,DG1_","_PTF_",",FLD)="@"
"RTN","DGPTSUD1",33,0)
 D FILE^DIE("","DGFDA","DGMSG")
"RTN","DGPTSUD1",34,0)
 K DGSUDO(DGSUPR)
"RTN","DGPTSUD1",35,0)
 S DGSUPR=DGSUNX
"RTN","DGPTSUD1",36,0)
 Q
"RTN","DGPTSUDO")
0^5^B22459038
"RTN","DGPTSUDO",1,0)
DGPTSUDO ;ALB/MTC - PTF UPDATE TRANSFER DRG NODE; 30 MAR 89@09 ; 3/12/02 12:14pm
"RTN","DGPTSUDO",2,0)
 ;;5.3;Registration;**441,510,478**;Aug 13, 1993
"RTN","DGPTSUDO",3,0)
 ;;ADL;Update for CSV Project;;Mar 28, 2003
"RTN","DGPTSUDO",4,0)
UTIL S ^UTILITY($J,"T",(9999999.999999-$E(I,1,14)))=K_"^"_$S($D(^DIC(45.7,J,0)):$P(^(0),"^",2),1:0)_"^"_X_"^^"_$P(Y,"^",8)
"RTN","DGPTSUDO",5,0)
 Q
"RTN","DGPTSUDO",6,0)
SUDO1 K ^UTILITY($J,"T"),T
"RTN","DGPTSUDO",7,0)
 F I=0:0 S I=$O(^DGPM("ATS",DFN,DGPMCA,I)) Q:I'>0  D
"RTN","DGPTSUDO",8,0)
 . S J=$O(^DGPM("ATS",DFN,DGPMCA,I,0)) I J D
"RTN","DGPTSUDO",9,0)
 .. S K=+$O(^(J,0)) I $D(^DGPM(K,0)) S Y=^(0),X=$S($D(^("PTF")):$P(^("PTF"),"^",2),1:"") I $D(^DGPT(PTF,"M",+X,0))!($D(^DGPM("APHY",+$P(Y,"^",14),K))) D UTIL
"RTN","DGPTSUDO",10,0)
 Q:'$D(^UTILITY($J,"T"))
"RTN","DGPTSUDO",11,0)
VARS I '$D(^UTILITY($J,"T")) G SUDO1
"RTN","DGPTSUDO",12,0)
 S (DGPRD,DGNXD)=$O(^UTILITY($J,"T",0)) G Q:DGPRD'>0 S T(DGPRD)=^(DGPRD),(DGEXP,DGDMS,DGTRS,DGTLOS,DGLOS,DGDAT)=0,DGPT(70)=$S($D(^DGPT(PTF,70)):^(70),1:""),SEX=$P(^DPT(DFN,0),U,2),DOB=$P(^(0),U,3),(DGDX,DGNSV,DGPSV)=""
"RTN","DGPTSUDO",13,0)
 S DGDAT=$$GETDATE^ICDGTDRG(PTF)
"RTN","DGPTSUDO",14,0)
 K DGSURG,DGPROC S (DGSURG,DGPROC)=U
"RTN","DGPTSUDO",15,0)
 ;-- build DGSURG array
"RTN","DGPTSUDO",16,0)
 S DGPTDAT=$$GETDATE^ICDGTDRG(PTF)
"RTN","DGPTSUDO",17,0)
 F I=0:0 S I=$O(^DGPT(PTF,"S",I)) Q:I'>0  S X=$P(^(I,0),U,8,12) D
"RTN","DGPTSUDO",18,0)
 . I X]"",X'="^^^^" S Y=+^(0),Y=$S('$D(DGSURG(Y)):Y,Y[".":Y_I_1,1:Y_".0000"_I_1),DGSURG(Y)="" D
"RTN","DGPTSUDO",19,0)
 .. F J=1:1:5 I $P(X,U,J)]"" S DGPTTMP=$$ICDOP^ICDCODE($P(X,U,J),DGPTDAT) I +DGPTTMP>0 S DGSURG(Y)=DGSURG(Y)_$P(X,U,J)_U
"RTN","DGPTSUDO",20,0)
 ;-- build DGPROC array
"RTN","DGPTSUDO",21,0)
 F I=0:0 S I=$O(^DGPT(PTF,"P",I)) Q:I'>0  S X=$P(^(I,0),U,5,9) D
"RTN","DGPTSUDO",22,0)
 . I X]"",X'="^^^^" S Y=+^(0),Y=$S('$D(DGPROC(Y)):Y,Y[".":Y_I_1,1:Y_".0000"_I_1),DGPROC(Y)="" D
"RTN","DGPTSUDO",23,0)
 .. F J=1:1:5 I $P(X,U,J)]"" S DGPTTMP=$$ICDOP^ICDCODE($P(X,U,J),DGPTDAT) I +DGPTTMP>0 S DGPROC(Y)=DGPROC(Y)_$P(X,U,J)_U
"RTN","DGPTSUDO",24,0)
 ;
"RTN","DGPTSUDO",25,0)
 I $D(^DGPT(PTF,"401P")),+DGPT(70),+DGPT(70)<2871000 S X=^("401P") I X]"",X'="^^^^" D
"RTN","DGPTSUDO",26,0)
 . F I=1:1:5 I $P(X,U,I)]"" S DGPTTMP=$$ICDOP^ICDCODE($P(X,U,I),DGPTDAT) I +DGPTTMP>0 S DGPROC=DGPROC_$P(X,U,I)_U,DG401P=1
"RTN","DGPTSUDO",27,0)
 ;
"RTN","DGPTSUDO",28,0)
SUDO2 ;
"RTN","DGPTSUDO",29,0)
 S DGNXD=$O(^UTILITY($J,"T",DGNXD))
"RTN","DGPTSUDO",30,0)
 G ONE:DGNXD'>0 S T(DGNXD)=^UTILITY($J,"T",DGNXD),I1=+$P(T(DGNXD),U,3),DGDOC=$P(T(DGNXD),U,5)
"RTN","DGPTSUDO",31,0)
 F I=DGPRD,DGNXD S L1(I)=$P(T(I),U,2)
"RTN","DGPTSUDO",32,0)
 G:L1(DGPRD)=L1(DGNXD) SWCH
"RTN","DGPTSUDO",33,0)
 S DGPSV=$S($D(^DIC(42.4,+L1(DGPRD),0)):$P(^(0),U,3),1:""),DGNSV=$S($D(^DIC(42.4,+L1(DGNXD),0)):$P(^(0),U,3),1:"")
"RTN","DGPTSUDO",34,0)
 G:DGPSV']""!(DGNSV']"") SWCH
"RTN","DGPTSUDO",35,0)
 I "^I^SCI^B^NH^D^RE^"'[(U_DGPSV_U),$D(^DGPT(PTF,"M",I1,0)) S DGNODE=^(0) D
"RTN","DGPTSUDO",36,0)
 . D BLD I DGPSV'=DGNSV D DRG S DGSURG=U,DGDX="",DGLOS=0 I '$D(DG401P) S DGPROC=U
"RTN","DGPTSUDO",37,0)
SWCH ;
"RTN","DGPTSUDO",38,0)
 K DGLEV,DGPAS
"RTN","DGPTSUDO",39,0)
 S DGPRD=DGNXD,T(DGPRD)=T(DGNXD),(DGNSV,DGPSV)=""
"RTN","DGPTSUDO",40,0)
 G SUDO2
"RTN","DGPTSUDO",41,0)
 ;
"RTN","DGPTSUDO",42,0)
BLD ;
"RTN","DGPTSUDO",43,0)
 F I=9:-1:5 I $P(DGNODE,U,I)]"" S DGPTTMP=$$ICDDX^ICDCODE($P(DGNODE,U,I),$$GETDATE^ICDGTDRG(PTF)) I +DGPTTMP>0 S DGDX=$P(DGNODE,U,I)_U_DGDX
"RTN","DGPTSUDO",44,0)
 S:$L(DGDX)>200 DGDX=$P(DGDX,U,1,30)
"RTN","DGPTSUDO",45,0)
 S DGLEV=$P(DGNODE,U,3),DGPAS=$P(DGNODE,U,4),X1=DGNXD,X2=DGPRD D ^%DTC S X=$S(X>0:X,1:1)-DGLEV-DGPAS,DGLOS=DGLOS+X
"RTN","DGPTSUDO",46,0)
 N I,J,X,Y,Z
"RTN","DGPTSUDO",47,0)
 F I=0:0 S I=$O(DGSURG(I)) Q:I'>0!(I\1>(DGNXD\1))  D SU
"RTN","DGPTSUDO",48,0)
 I '$D(DG401P) F I=0:0 S I=$O(DGPROC(I)) Q:I'>0!((I\1)>(DGNXD\1))  D  ;S DGPROC=DGPROC(I)_DGPROC K DGPROC(I) I $L(DGPROC)>200 S DGPROC=$P(DGPROC,U,1,30)
"RTN","DGPTSUDO",49,0)
 .S X=DGPROC(I)
"RTN","DGPTSUDO",50,0)
 .F J=1:1:5 S Y=$P(X,U,J) Q:Y=""  D
"RTN","DGPTSUDO",51,0)
 ..Q:$L(DGPROC)>240
"RTN","DGPTSUDO",52,0)
 ..S Z=U_Y_U Q:DGPROC[Z
"RTN","DGPTSUDO",53,0)
 ..S DGPROC=DGPROC_Y_U
"RTN","DGPTSUDO",54,0)
 .K DGPROC(I)
"RTN","DGPTSUDO",55,0)
 Q
"RTN","DGPTSUDO",56,0)
SU ;
"RTN","DGPTSUDO",57,0)
 ;S:$L(DGSURG)>200 DGSURG=$P(DGSURG,U,1,30)
"RTN","DGPTSUDO",58,0)
 ;I I<DGNXD S DGSURG=DGSURG(I)_DGSURG K DGSURG(I) Q  ; surgery date is prior to movement date
"RTN","DGPTSUDO",59,0)
 ; only gets here if surgery occurred on movement date
"RTN","DGPTSUDO",60,0)
 ;I DGPSV=DGNSV S DGSURG=DGSURG(I)_DGSURG K DGSURG(I) Q  ; no RAM movement occurred so surgery should be grouped
"RTN","DGPTSUDO",61,0)
 ;I DGPSV="S" S DGSURG=DGSURG(I)_DGSURG K DGSURG(I) Q  ; RAM movement occurred and losing service is surgery, so surgery should be grouped
"RTN","DGPTSUDO",62,0)
 ;Q
"RTN","DGPTSUDO",63,0)
 ; 2002 coding replaces above,eliminates dupes,allows more codes
"RTN","DGPTSUDO",64,0)
 I I<DGNXD!(DGPSV=DGNSV)!(DGPSV="S") D
"RTN","DGPTSUDO",65,0)
 .S X=DGSURG(I)
"RTN","DGPTSUDO",66,0)
 .F J=1:1:5 S Y=$P(X,U,J) Q:Y=""  D
"RTN","DGPTSUDO",67,0)
 ..Q:$L(DGSURG)>240
"RTN","DGPTSUDO",68,0)
 ..S Z=U_Y_U Q:DGSURG[Z
"RTN","DGPTSUDO",69,0)
 ..S DGSURG=DGSURG_Y_U
"RTN","DGPTSUDO",70,0)
 .K DGSURG(I)
"RTN","DGPTSUDO",71,0)
 Q
"RTN","DGPTSUDO",72,0)
 ;
"RTN","DGPTSUDO",73,0)
DRG ;
"RTN","DGPTSUDO",74,0)
 S AGE=DGPRD-DOB\10000,DGTLOS=DGTLOS+DGLOS,DRG=""
"RTN","DGPTSUDO",75,0)
 D ^DGPTICD
"RTN","DGPTSUDO",76,0)
 S DGDOC=$S($D(^VA(200,+DGDOC)):DGDOC,1:"")
"RTN","DGPTSUDO",77,0)
 N DGFDA,DGMSG
"RTN","DGPTSUDO",78,0)
 S DGFDA(45.02,I1_","_PTF_",",20)=DRG
"RTN","DGPTSUDO",79,0)
 S DGFDA(45.02,I1_","_PTF_",",21)=DGPSV
"RTN","DGPTSUDO",80,0)
 S DGFDA(45.02,I1_","_PTF_",",22)=DGNXD
"RTN","DGPTSUDO",81,0)
 S DGFDA(45.02,I1_","_PTF_",",23)=DGLOS
"RTN","DGPTSUDO",82,0)
 S DGFDA(45.02,I1_","_PTF_",",24)=DGDOC
"RTN","DGPTSUDO",83,0)
 S DGFDA(45.02,I1_","_PTF_",",25)=DGTLOS
"RTN","DGPTSUDO",84,0)
 D FILE^DIE("","DGFDA","DGMSG")
"RTN","DGPTSUDO",85,0)
 Q
"RTN","DGPTSUDO",86,0)
 ;
"RTN","DGPTSUDO",87,0)
ONE ;
"RTN","DGPTSUDO",88,0)
 S DGNXD=$S(+$P(^DGPT(PTF,"M",1,0),U,10):$P(^(0),U,10),1:DT),L1(DGNXD)=$P(^(0),U,2) S:'$D(T(DGNXD)) T(DGNXD)=T(DGPRD),DGDOC=$P(T(DGNXD),U,5)
"RTN","DGPTSUDO",89,0)
 S:$P(DGPT(70),U,3)>5 DGEXP=1 S:$P(DGPT(70),U,3)=4 DGDMS=1 S:$P(DGPT(70),U,13) DGTRS=1
"RTN","DGPTSUDO",90,0)
 I L1(DGNXD),$D(^DIC(42.4,+L1(DGNXD),0)) S I1=1,DGPSV=$P(^(0),U,3),DGADM=$P(^DGPT(PTF,0),U,2)
"RTN","DGPTSUDO",91,0)
 S DGNODE=$S($D(^DGPT(PTF,"M",1,0)):^(0),1:"") D BLD
"RTN","DGPTSUDO",92,0)
 I $D(^DGPT("AADA",DGADM,PTF)) S I=$S($P(DGPT(70),U,10):$P(DGPT(70),U,10),$P(DGPT(70),U,11):$P(DGPT(70),U,11),1:"") I I]"" S DGDX=I_U_DGDX
"RTN","DGPTSUDO",93,0)
 S I1=1 D DRG,^DGPTSUD1
"RTN","DGPTSUDO",94,0)
Q ;
"RTN","DGPTSUDO",95,0)
 K DGDMS,DGDOC,DGDX,DGEXP,DGLEV,DGLOS,DGNODE,DGNSV,DGNXD,DGPAS,DGPRD,DGPROC,DGPSV,DGPT,DGSURG,DGTLOS,DGTRS,DG401P,I,I1,I2,J,L1,T,X,X1,X2,Y Q
"RTN","DGPTSUDO",96,0)
 ;
"RTN","DGPTTS1")
0^6^B23751705
"RTN","DGPTTS1",1,0)
DGPTTS1 ;ALB/AS/ADL - FACILITY TREATING SPECIALTY AND 501 MOVEMENTS, cont. ; 11/28/89 @12
"RTN","DGPTTS1",2,0)
 ;;5.3;Registration;**26,64,418,510,478**;Aug 13, 1993
"RTN","DGPTTS1",3,0)
 ;;ADL;Update for CSV Project;;Mar 28, 2003
"RTN","DGPTTS1",4,0)
 ;
"RTN","DGPTTS1",5,0)
 ;build DGA array w/patient's last treat spec of the day as of 11:59 pm
"RTN","DGPTTS1",6,0)
 ;
"RTN","DGPTTS1",7,0)
LOOP ;
"RTN","DGPTTS1",8,0)
 S DGNEXT=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV))
"RTN","DGPTTS1",9,0)
 F DGNEXT=DGNEXT:0 Q:($P(DGPREV,".")'=$P(DGNEXT,"."))!('DGNEXT)  S DGNEXT=$O(^DGPM("ATS",DFN,DGPMCA,DGNEXT))
"RTN","DGPTTS1",10,0)
 S X=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV,0)),DGA(9999999.999999-$E(DGPREV,1,14))=$S($D(^DIC(45.7,+X,0)):$P(^(0),"^",2),1:0)_"^"_$O(^DGPM("ATS",DFN,DGPMCA,DGPREV,X,0)) I DGNEXT>0 S DGPREV=DGNEXT G LOOP
"RTN","DGPTTS1",11,0)
 S DGPREV=0,X=$S($D(^DIC(42,+$P(DGPMAN,"^",6),0)):$P(^(0),"^",3),1:0) I "^NH^D^"[(U_X_U)!($P(^(0),"^",17)=1) D ASIH^DGPTTS2 ;p-418
"RTN","DGPTTS1",12,0)
 ;
"RTN","DGPTTS1",13,0)
LOOP1 ; -- compare specs between mvts ; sort out xfr if spec did't change
"RTN","DGPTTS1",14,0)
 S DGSAVE=DGPREV
"RTN","DGPTTS1",15,0)
 S DGPREV=$O(DGA(DGPREV)),DGNEXT=$O(DGA(DGPREV)),X=+DGA(DGPREV) I DGNEXT S Y=+DGA(DGNEXT) I (X=Y)!((X=70)&(Y=71))!((X=71)&(Y=70)) K DGA(DGNEXT) S DGPREV=DGSAVE I $O(DGA(DGPREV))>0 G LOOP1
"RTN","DGPTTS1",16,0)
 ;
"RTN","DGPTTS1",17,0)
 ; -- is mvt during adm
"RTN","DGPTTS1",18,0)
 I DGPREV<+DGPMAN!($P(DGPREV,".")'<$S(DGDT:$P(+DGDT,"."),1:9999999)) S (DG1,DG2)=+$P(DGA(DGPREV),"^",2) D DEL:$S('$D(^DGPM(DG1,"PTF")):0,1:$P(^("PTF"),"^",2)]"") G LOOPQ
"RTN","DGPTTS1",19,0)
 ;
"RTN","DGPTTS1",20,0)
 ; build ^UTILITY for mvts whose spec changed
"RTN","DGPTTS1",21,0)
 ;I X=70!(X=71) S X2=DGPREV,X1=$S(DGNEXT]"":DGNEXT,DGDT]"":DGDT,1:DT) D ^%DTC S $P(DGA(DGPREV),"^",1)=$S(X>45:71,1:70)
"RTN","DGPTTS1",22,0)
 S X=$S($D(^DGPM($P(DGA(DGPREV),"^",2),"PTF")):^("PTF"),1:""),^UTILITY($J,"T",DGPREV)=$P(DGA(DGPREV),"^",2)_"^"_+DGA(DGPREV)_"^"_$P(X,"^",2)_"^"_$P(X,"^",3)_"^"_$S($D(^DGPM($P(DGA(DGPREV),"^",2),0)):$P(^(0),"^",8),1:"")
"RTN","DGPTTS1",23,0)
LOOPQ I $O(DGA(DGPREV)) G LOOP1
"RTN","DGPTTS1",24,0)
 ;
"RTN","DGPTTS1",25,0)
 ; look for mvts in ^DGPM that have a PTF mvt # entry
"RTN","DGPTTS1",26,0)
 ; but not in ^UTILITY.  If any are found, delete from ^DGPT.
"RTN","DGPTTS1",27,0)
 F DGPREV=0:0 S DGPREV=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV)) Q:DGPREV'>0  S X=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV,0)),(DG1,DG2)=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV,+X,0)) I $D(^DGPM(+DG1,"PTF")),$P(^("PTF"),"^",2)]"" D DEL
"RTN","DGPTTS1",28,0)
 ;
"RTN","DGPTTS1",29,0)
 K Y S Y=+$O(^DGPM("APHY",DGPMCA,0)) I $D(^DGPM(Y,0)) S Y(0)=^(0),Y("PTF")=$S($D(^("PTF")):^("PTF"),1:"")
"RTN","DGPTTS1",30,0)
 I $D(Y)>10 S T("ADM")=Y_"^"_$S($D(^DIC(45.7,+$P(Y(0),"^",9),0)):$P(^(0),"^",2),1:"")_"^^"_$P(Y("PTF"),"^",3)_"^"_$P(Y(0),"^",8) K Y
"RTN","DGPTTS1",31,0)
 ;
"RTN","DGPTTS1",32,0)
 S DGDEL=$O(^UTILITY($J,"T",0))
"RTN","DGPTTS1",33,0)
 I DGDEL S T(DGDEL)=^(DGDEL),DG1=$P(T(DGDEL),"^",3) I DG1 S T(DGDEL)=$P(T(DGDEL),U,1,2),DGREC=$S($D(^DGPT(PTF,"M",DG1,0)):^(0),1:"") D MSG K DA S DIK="^DGPT("_PTF_",""M"",",DA(1)=PTF,DA=DG1 D ^DIK K DA S ^UTILITY($J,"T",DGDEL)=$P(T(DGDEL),U,1,2)
"RTN","DGPTTS1",34,0)
 K DGA K:$D(T(+DGDT)) T(DGDT)
"RTN","DGPTTS1",35,0)
 S DGAD=+DGPMAN F I=0:0 S I=$O(^UTILITY($J,"T",I)) Q:I'>0  S DGAD=I
"RTN","DGPTTS1",36,0)
 S DGREC1=$S($D(^DGPT(PTF,"M",1,0)):^(0),1:"")
"RTN","DGPTTS1",37,0)
 S DGREC=$S($D(^UTILITY($J,"T",DGAD)):^(DGAD),$D(T("ADM")):T("ADM"),1:"")
"RTN","DGPTTS1",38,0)
 I DGREC,$D(^DGPM(+DGREC,0)) D
"RTN","DGPTTS1",39,0)
 .N DGFDA,DGMSG
"RTN","DGPTTS1",40,0)
 .S DGFDA(405,(+DGREC)_",",53)=1
"RTN","DGPTTS1",41,0)
 .D FILE^DIE("","DGFDA","DGMSG")
"RTN","DGPTTS1",42,0)
 S DGREC=$P(DGREC,U,2)
"RTN","DGPTTS1",43,0)
 I DGDT W:'DGREC&'$D(ZTQUEUED) !,"No Treating Specialty Transfers",! S I1=1,DIE="^DGPT(",DA=PTF,DR="71///"_DGREC D ^DIE:DGREC S PR=DGAD,NX=DGDT D LOL^DGPTTS2 I $P(DGREC1,U,3,4)'=(LOL_U_LOP) S DR="3///"_LOL_";4///"_LOP,I1=1 D TD5^DGPTTS2 K DR
"RTN","DGPTTS1",44,0)
 I 'DGDT S PR=DGAD,NX=DT,I1=1 D LOL^DGPTTS2 I $P(DGREC1,U,2,4)'=(DGREC_U_LOL_U_LOP) S DR="3///"_LOL_";4///"_LOP_$S(DGREC:";2///"_DGREC,1:"") D TD5^DGPTTS2
"RTN","DGPTTS1",45,0)
 K DGSAVE,DR,DGREC1 D ^DGPTTS2 Q
"RTN","DGPTTS1",46,0)
DEL Q:$D(^UTILITY($J,"T",(9999999.999999-$E(DGPREV,1,14))))
"RTN","DGPTTS1",47,0)
 S DG1=$P(^DGPM(DG1,"PTF"),"^",2),DGREC=$S($D(^DGPT(PTF,"M",+DG1,0)):^(0),1:"") Q:DGREC']""  D MSG K DA S DIK="^DGPT("_PTF_",""M"",",DA(1)=PTF,DA=DG1 D ^DIK K DA
"RTN","DGPTTS1",48,0)
 S DA=DG2,DR="52///@;53///@",DIE="^DGPM(" D ^DIE Q
"RTN","DGPTTS1",49,0)
MSG S DGMSG="" F X=5:1:15 I X'=10 S DGPTTMP=$$ICDDX^ICDCODE(+$P(DGREC,U,X),$$GETDATE^ICDGTDRG(PTF)),DGMSG=DGMSG_$S(+DGPTTMP>0:$P(DGPTTMP,U,2)_", ",1:"")
"RTN","DGPTTS1",50,0)
 Q:DGMSG']""  S ^UTILITY($J,"DEL",DG1)=DGMSG
"RTN","DGPTTS1",51,0)
 ;-- save expanded codes 
"RTN","DGPTTS1",52,0)
 S DGMSG1=""
"RTN","DGPTTS1",53,0)
 I $D(^DGPT(PTF,"M",+DG1,300)) S DGEX=^(300) F X=2:1:7 S:$P(DGEX,U,X)]"" $P(DGMSG1,U,X)=$P(DGEX,U,X)
"RTN","DGPTTS1",54,0)
 S:DGMSG1]"" ^UTILITY($J,300,DG1)=DGMSG1
"RTN","DGPTTS1",55,0)
 K DGMSG1
"RTN","DGPTTS1",56,0)
 S Y=$P(DGREC,U,10) X ^DD("DD") S DGMSG="501 movement of "_$P(^DPT(DFN,0),U,1)_" of "_Y_" losing specialty "_$P(^DIC(42.4,$P(DGREC,U,2),0),U,1)_" was deleted by "_$P(^VA(200,DUZ,0),U,1)_" it contained diag "_$E(DGMSG,1,120)
"RTN","DGPTTS1",57,0)
 S:'$D(DGPMAN) DGPMAN=^DGPM(DGPMCA,0) D MSG^DGPTMSG1
"RTN","DGPTTS1",58,0)
 K DGEX Q
"RTN","DGPTTS2")
0^7^B14533867
"RTN","DGPTTS2",1,0)
DGPTTS2 ;ALB/JDS - FACILITY TREATING SPECIALTY AND 501 MOVEMENTS, cont. ; 9/19/03 4:22pm
"RTN","DGPTTS2",2,0)
 ;;5.3;Registration;**549,478**;Aug 13, 1993
"RTN","DGPTTS2",3,0)
 ;
"RTN","DGPTTS2",4,0)
 S NX=$O(^UTILITY($J,"T",0)),DGDR=0 Q:NX'>0  S T(NX)=^(NX),I2=$P(T(NX),U,4),B(501)=U
"RTN","DGPTTS2",5,0)
 F I=0:0 S I=$O(^DGPT(PTF,"M",I)) Q:I'>0  D
"RTN","DGPTTS2",6,0)
 .N FLD,DGFDA,DGMSG
"RTN","DGPTTS2",7,0)
 .F FLD=20:1:25 S DGFDA(45.02,I_","_PTF_",",FLD)="@"
"RTN","DGPTTS2",8,0)
 .D FILE^DIE("","DGFDA","DGMSG")
"RTN","DGPTTS2",9,0)
LOOP1 K:$D(PR) T(PR) S PR=NX,NX=$O(^UTILITY($J,"T",NX)) G Q:NX'>0 S T(NX)=^(NX),T(PR)=^(PR)
"RTN","DGPTTS2",10,0)
 S I1=+$P(T(NX),U,3),I2=$S($O(^(NX)):$P(^(NX),U,3),1:0),DGDOC=$P(T(NX),U,5) F I=PR,NX S DG1(I)=$P(T(I),U,2)
"RTN","DGPTTS2",11,0)
 D ADT1:I1'>0,ONE:$P(T(PR),U,4)'=I1,LOL
"RTN","DGPTTS2",12,0)
 S A=$S($D(^DGPT(PTF,"M",I1,0)):^(0),1:"") I $P(A,U,1,4)'=(I1_U_DG1(PR)_U_LOL_U_LOP)!($P(A,U,10)'=NX) S DR=$S('A:".01///"_I1_";",1:"")_"2////"_DG1(PR)_";3///"_LOL_";4///"_LOP_";10////"_NX D TD5
"RTN","DGPTTS2",13,0)
 I $P(T(PR),U,4)'=I1 S DR="53///"_I1,DA=+T(PR),DIE="^DGPM(" D ^DIE
"RTN","DGPTTS2",14,0)
 G LOOP1
"RTN","DGPTTS2",15,0)
ADT1 S:'$D(^DGPT(PTF,"M",0)) ^DGPT(PTF,"M",0)="^45.02AI^1^1" L +^DGPT(PTF,"M",0) F I=0:0 S I=$O(^DGPT(PTF,"M",I)) Q:I'>0  S I1=I
"RTN","DGPTTS2",16,0)
 S I1=I1+1,J=^DGPT(PTF,"M",0),^(0)=$P(J,U,1,2)_U_I1_U_($P(J,U,4)+1) L -^DGPT(PTF,"M",0)
"RTN","DGPTTS2",17,0)
 N DGFDA,DGMSG
"RTN","DGPTTS2",18,0)
 S DGFDA(45.02,I1_","_PTF_",",.01)=I1
"RTN","DGPTTS2",19,0)
 D FILE^DIE("","DGFDA","DGMSG")
"RTN","DGPTTS2",20,0)
 S T(NX)=$P(T(NX)_"^^",U,1,2)_U_I1
"RTN","DGPTTS2",21,0)
 S DA=+T(NX),DR="52///"_I1,DIE="^DGPM(" D ^DIE
"RTN","DGPTTS2",22,0)
 Q
"RTN","DGPTTS2",23,0)
ONE S I2=$P(T(PR),U,4) Q:'I2  S J=$S($D(^DGPT(PTF,"M",I2,0)):^(0),1:0) G O1:'J S (DR,DGDR)="" F I=4:1:9 S:$P(J,U,I) DR=DR_I_"///@;",DGDR=DGDR_I_"////"_$P(J,U,I)_";"
"RTN","DGPTTS2",24,0)
 S J=$S($D(^DGPT(PTF,"M",I2,300)):^(300),1:""),(DR300,DGDR300)="" F I=2:1:7 S:$P(J,U,I)]"" DR300=DR300_"300.0"_I_"///@;",DGDR300=DGDR300_"300.0"_I_"////"_$P(J,U,I)_";"
"RTN","DGPTTS2",25,0)
 S I1=I2 D TD5:DR]"" S DR=DR300 D TD5:DR]"" S I1=$P(T(NX),U,3),DR=DGDR D TD5:DR]"" S DR=DGDR300 D TD5:DR]""
"RTN","DGPTTS2",26,0)
 K DGDR300,DR300 Q
"RTN","DGPTTS2",27,0)
TD5 S DA=I1,DIE="^DGPT("_PTF_",""M"",",DA(1)=PTF,DP=45.02 D ^DIE Q
"RTN","DGPTTS2",28,0)
LOL S DG1=$S(DGDT:DGDT,1:DT),(LOL,LOP)=0
"RTN","DGPTTS2",29,0)
 F I=DGADM:0 S I=$O(^DGPM("APTT2",DFN,I)) Q:I'>0!(I>DG1)  S J=$O(^DGPM("APTT2",DFN,I,0)) I $S('$D(^DGPM(J,0)):0,$P(^(0),"^",14)=DGPMCA:1,1:0) S C=+$P(^(0),"^",18) I C=1!(C=2)!(C=3) D LOL1
"RTN","DGPTTS2",30,0)
 Q
"RTN","DGPTTS2",31,0)
LOL1 S X2=$S(I<PR:PR,1:I),Y=$O(^DGPM("APTT2",DFN,I)),X1=$S(Y>PR&(Y'>NX):+Y,Y>NX!(Y<0):NX,1:X2) I X1>X2 D ^%DTC S Z=$S(C=1:"LOP",1:"LOL"),@Z=@Z+X K C,X,Y,X1,X2
"RTN","DGPTTS2",32,0)
 Q
"RTN","DGPTTS2",33,0)
 ;
"RTN","DGPTTS2",34,0)
ASIH S DGBDT=DGADM,DGEDT=$S(DGDT:DGDT,1:DT) D ASIH^DGUTL2
"RTN","DGPTTS2",35,0)
 S DIE="^DGPT(",DA=PTF,DR="77////"_DGREC D ^DIE
"RTN","DGPTTS2",36,0)
 K DE,DQ,DR,DA,DIE,DGBDT,DGEDT,DGMVTP Q
"RTN","DGPTTS2",37,0)
 ;
"RTN","DGPTTS2",38,0)
O1 Q:'$D(^UTILITY($J,"DEL",I2))  S DR="" F I=1:1 S J=$P(^(I2),", ",I) Q:J']""  S DR=DR_(I+4)_"///"_J_";"
"RTN","DGPTTS2",39,0)
 S I1=$P(T(NX),U,3) D TD5:DR]""
"RTN","DGPTTS2",40,0)
 ;-- restore expanded codes
"RTN","DGPTTS2",41,0)
 Q:'$D(^UTILITY($J,300,I2))  S DR="",DGEX=^(I2) F I=2:1:7 S:$P(DGEX,U,I)]"" DR=DR_"300.0"_I_"////"_$P(DGEX,U,I)_";"
"RTN","DGPTTS2",42,0)
 D TD5:DR]""
"RTN","DGPTTS2",43,0)
 Q
"RTN","DGPTTS2",44,0)
Q S T(PR)=^UTILITY($J,"T",PR) I $P(T(PR),U,4)>1 S NX=1,T(1)="^^1" D ONE
"RTN","DGPTTS2",45,0)
 Q
"RTN","DGPTTS2",46,0)
CK ; -- checks for PTF# in ^DGPM and $D of the PTF in ^DGPT; Y = ifn of adm
"RTN","DGPTTS2",47,0)
 Q:$D(^DGPT(+$P(^DGPM(Y,0),"^",16),0))
"RTN","DGPTTS2",48,0)
 S Y=-1 W !,"warning:  A PTF record does not exist for this admission - cannot edit",!?10,"Treating Specialty.  MIS personnel and your supervisor should",!?10,"be notified."
"RTN","DGPTTS2",49,0)
 W "  The PTF option, 'Establish PTF record from Past",!?10,"Admission', may be used to create a PTF record." Q
"RTN","DGPTTS2",50,0)
 ;
"RTN","DGPXRM")
1^10
"VER")
8.0^22.0
**INSTALL NAME**
GMPL*2.0*27
"BLD",3838,0)
GMPL*2.0*27^PROBLEM LIST^0^3041026^y
"BLD",3838,1,0)
^^1^1^3021001^
"BLD",3838,1,1,0)
See description in the Nationl Patch module.
"BLD",3838,4,0)
^9.64PA^^
"BLD",3838,"ABPKG")
n
"BLD",3838,"INID")
^n
"BLD",3838,"INIT")
CPROB^GMPLP27I
"BLD",3838,"KRN",0)
^9.67PA^8989.52^19
"BLD",3838,"KRN",.4,0)
.4
"BLD",3838,"KRN",.4,"NM",0)
^9.68A^^
"BLD",3838,"KRN",.401,0)
.401
"BLD",3838,"KRN",.402,0)
.402
"BLD",3838,"KRN",.403,0)
.403
"BLD",3838,"KRN",.5,0)
.5
"BLD",3838,"KRN",.84,0)
.84
"BLD",3838,"KRN",3.6,0)
3.6
"BLD",3838,"KRN",3.8,0)
3.8
"BLD",3838,"KRN",9.2,0)
9.2
"BLD",3838,"KRN",9.8,0)
9.8
"BLD",3838,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",3838,"KRN",9.8,"NM",1,0)
GMPLPXRM^^0^B10434009
"BLD",3838,"KRN",9.8,"NM",2,0)
GMPLX^^0^B42121408
"BLD",3838,"KRN",9.8,"NM","B","GMPLPXRM",1)

"BLD",3838,"KRN",9.8,"NM","B","GMPLX",2)

"BLD",3838,"KRN",19,0)
19
"BLD",3838,"KRN",19.1,0)
19.1
"BLD",3838,"KRN",101,0)
101
"BLD",3838,"KRN",409.61,0)
409.61
"BLD",3838,"KRN",771,0)
771
"BLD",3838,"KRN",870,0)
870
"BLD",3838,"KRN",8989.51,0)
8989.51
"BLD",3838,"KRN",8989.52,0)
8989.52
"BLD",3838,"KRN",8994,0)
8994
"BLD",3838,"KRN","B",.4,.4)

"BLD",3838,"KRN","B",.401,.401)

"BLD",3838,"KRN","B",.402,.402)

"BLD",3838,"KRN","B",.403,.403)

"BLD",3838,"KRN","B",.5,.5)

"BLD",3838,"KRN","B",.84,.84)

"BLD",3838,"KRN","B",3.6,3.6)

"BLD",3838,"KRN","B",3.8,3.8)

"BLD",3838,"KRN","B",9.2,9.2)

"BLD",3838,"KRN","B",9.8,9.8)

"BLD",3838,"KRN","B",19,19)

"BLD",3838,"KRN","B",19.1,19.1)

"BLD",3838,"KRN","B",101,101)

"BLD",3838,"KRN","B",409.61,409.61)

"BLD",3838,"KRN","B",771,771)

"BLD",3838,"KRN","B",870,870)

"BLD",3838,"KRN","B",8989.51,8989.51)

"BLD",3838,"KRN","B",8989.52,8989.52)

"BLD",3838,"KRN","B",8994,8994)

"BLD",3838,"QUES",0)
^9.62^^
"BLD",3838,"REQB",0)
^9.611^3^3
"BLD",3838,"REQB",1,0)
PXRM*1.5*12^2
"BLD",3838,"REQB",2,0)
DI*22.0*95^2
"BLD",3838,"REQB",3,0)
GMPL*2.0*28^2
"BLD",3838,"REQB","B","DI*22.0*95",2)

"BLD",3838,"REQB","B","GMPL*2.0*28",3)

"BLD",3838,"REQB","B","PXRM*1.5*12",1)

"INIT")
CPROB^GMPLP27I
"MBREQ")
0
"PKG",172,-1)
1^1
"PKG",172,0)
PROBLEM LIST^GMPL^Automated Patient Problem List
"PKG",172,20,0)
^9.402P^^
"PKG",172,22,0)
^9.49I^1^1
"PKG",172,22,1,0)
2.0^2940825^2941103
"PKG",172,22,1,"PAH",1,0)
27^3041026
"PKG",172,22,1,"PAH",1,1,0)
^^1^1^3041026
"PKG",172,22,1,"PAH",1,1,1,0)
See description in the Nationl Patch module.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","GMPLP27I")
0^^B8946612
"RTN","GMPLP27I",1,0)
GMPLP27I ;SLC/JVS - Create cross-references. ;10/08/2004
"RTN","GMPLP27I",2,0)
 ;;2.0;Problem List;**27**;Aug 25, 1994
"RTN","GMPLP27I",3,0)
 ;
"RTN","GMPLP27I",4,0)
 Q
"RTN","GMPLP27I",5,0)
 ;===============================================================
"RTN","GMPLP27I",6,0)
CPROB ;Create cross-reference for Problem List.
"RTN","GMPLP27I",7,0)
 N IND,MSG,NAME,RESULT,XREF
"RTN","GMPLP27I",8,0)
 D BMES^XPDUTL("Creating Problem List cross-reference.")
"RTN","GMPLP27I",9,0)
 S XREF("FILE")=9000011
"RTN","GMPLP27I",10,0)
 S XREF("ROOT FILE")=9000011
"RTN","GMPLP27I",11,0)
 S XREF("WHOLE KILL")="K ^PXRMINDX(9000011)"
"RTN","GMPLP27I",12,0)
 S XREF("TYPE")="MU"
"RTN","GMPLP27I",13,0)
 S XREF("SHORT DESCR")="Clinical Reminders index for ICD9 lookup."
"RTN","GMPLP27I",14,0)
 S XREF("DESCR",1)="This cross-reference builds two indexes, one for finding"
"RTN","GMPLP27I",15,0)
 S XREF("DESCR",2)="all patients with a particular ICD9 code and one for"
"RTN","GMPLP27I",16,0)
 S XREF("DESCR",3)="finding all the ICD9 codes a patient has. The indexes are"
"RTN","GMPLP27I",17,0)
 S XREF("DESCR",4)="stored in the Clinical Reminders index global as:"
"RTN","GMPLP27I",18,0)
 S XREF("DESCR",5)=" ^PXRMINDX(9000011,""ISPP"",ICD9,STATUS,PRIORITY,DFN,DLM,DAS)"
"RTN","GMPLP27I",19,0)
 S XREF("DESCR",6)=" ^PXRMINDX(9000011,""PSPI"",DFN,STATUS,PRIORITY,ICD9,DLM,DAS)"
"RTN","GMPLP27I",20,0)
 S XREF("DESCR",8)="respectively."
"RTN","GMPLP27I",21,0)
 S XREF("DESCR",9)=" "
"RTN","GMPLP27I",22,0)
 S XREF("DESCR",10)="STATUS can be ""A"" for active or ""I"" for inactive."
"RTN","GMPLP27I",23,0)
 S XREF("DESCR",11)="PRIORITY can be ""A"" for acute or ""C"" for chronic. If"
"RTN","GMPLP27I",24,0)
 S XREF("DESCR",12)="PRIORITY is missing then a ""U"" will be stored in the index."
"RTN","GMPLP27I",25,0)
 S XREF("DESCR",13)="For Problems whose PRIORITY is ""C"" Clinical Reminders uses"
"RTN","GMPLP27I",26,0)
 S XREF("DESCR",14)="today's date for the date of the Problem. In all other"
"RTN","GMPLP27I",27,0)
 S XREF("DESCR",15)="cases Clinical Reminders uses DLM where DLM is the date last modified."
"RTN","GMPLP27I",28,0)
 S XREF("DESCR",16)="When Problems are ""removed"" then CONDITION is set"
"RTN","GMPLP27I",29,0)
 S XREF("DESCR",17)="to ""H"" for hidden. Hidden Problems are not indexed."
"RTN","GMPLP27I",30,0)
 S XREF("DESCR",18)="For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","GMPLP27I",31,0)
 S XREF("USE")="ACTION"
"RTN","GMPLP27I",32,0)
 S XREF("EXECUTION")="R"
"RTN","GMPLP27I",33,0)
 S XREF("ACTIVITY")="IR"
"RTN","GMPLP27I",34,0)
 S XREF("VAL",1)=.01
"RTN","GMPLP27I",35,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","GMPLP27I",36,0)
 S XREF("VAL",2)=.02
"RTN","GMPLP27I",37,0)
 S XREF("VAL",2,"SUBSCRIPT")=2
"RTN","GMPLP27I",38,0)
 S XREF("VAL",3)=.03
"RTN","GMPLP27I",39,0)
 S XREF("VAL",3,"SUBSCRIPT")=3
"RTN","GMPLP27I",40,0)
 S XREF("VAL",4)=.12
"RTN","GMPLP27I",41,0)
 S XREF("VAL",4,"SUBSCRIPT")=4
"RTN","GMPLP27I",42,0)
 S XREF("VAL",5)=1.14
"RTN","GMPLP27I",43,0)
 S XREF("VAL",6)=1.02
"RTN","GMPLP27I",44,0)
 ;
"RTN","GMPLP27I",45,0)
 S XREF("NAME")="ACR"
"RTN","GMPLP27I",46,0)
 S XREF("SET")="D SPROB^GMPLPXRM(.X,.DA)"
"RTN","GMPLP27I",47,0)
 S XREF("KILL")="D KPROB^GMPLPXRM(.X,.DA)"
"RTN","GMPLP27I",48,0)
 S XREF("WHOLE KILL")="K ^PXRMINDX(9000011)"
"RTN","GMPLP27I",49,0)
 D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","GMPLP27I",50,0)
 I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","GMPLP27I",51,0)
 Q
"RTN","GMPLPXRM")
0^1^B10434009
"RTN","GMPLPXRM",1,0)
GMPLPXRM ; SLC/PKR - Build Clinical Reminder indexes for AUPNPROB. ;02/27/2004
"RTN","GMPLPXRM",2,0)
        ;;2.0;Problem List;**27**;Aug 25, 1994
"RTN","GMPLPXRM",3,0)
 ;DBIA 4113 supports PXRMSXRM entry points. 
"RTN","GMPLPXRM",4,0)
 ;DBIA 4114 supports setting and killing ^PXRMINDX(9000011)
"RTN","GMPLPXRM",5,0)
 ;===============================================================
"RTN","GMPLPXRM",6,0)
INDEX ;Build the indexes for PROBLEM LIST.
"RTN","GMPLPXRM",7,0)
 N COND,DAS,DFN,DIFF,DLM,DONE,END,ENTRIES,ETEXT,GLOBAL,IND,NE,NERROR
"RTN","GMPLPXRM",8,0)
 N PRIO,PROB,START,STATUS,TEMP,TENP,TEXT
"RTN","GMPLPXRM",9,0)
 ;Don't leave any old stuff around.
"RTN","GMPLPXRM",10,0)
 ;DBIA 4114
"RTN","GMPLPXRM",11,0)
 K ^PXRMINDX(9000011)
"RTN","GMPLPXRM",12,0)
 S GLOBAL=$$GET1^DID(9000011,"","","GLOBAL NAME")
"RTN","GMPLPXRM",13,0)
 S ENTRIES=$P(^AUPNPROB(0),U,4)
"RTN","GMPLPXRM",14,0)
 S TENP=ENTRIES/10
"RTN","GMPLPXRM",15,0)
 S TENP=+$P(TENP,".",1)
"RTN","GMPLPXRM",16,0)
 I TENP<1 S TENP=1
"RTN","GMPLPXRM",17,0)
 D BMES^XPDUTL("Building indexes PROBLEM LIST")
"RTN","GMPLPXRM",18,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","GMPLPXRM",19,0)
 D MES^XPDUTL(TEXT)
"RTN","GMPLPXRM",20,0)
 S START=$H
"RTN","GMPLPXRM",21,0)
 S (DAS,DONE,IND,NE,NERROR)=0
"RTN","GMPLPXRM",22,0)
 F  S DAS=$O(^AUPNPROB(DAS)) Q:DONE  D
"RTN","GMPLPXRM",23,0)
 . I +DAS=0 S DONE=1 Q
"RTN","GMPLPXRM",24,0)
 . I +DAS'=DAS D  Q
"RTN","GMPLPXRM",25,0)
 .. S DONE=1
"RTN","GMPLPXRM",26,0)
 .. S ETEXT="Bad ien: "_DAS_", cannot continue."
"RTN","GMPLPXRM",27,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","GMPLPXRM",28,0)
 . S IND=IND+1
"RTN","GMPLPXRM",29,0)
 . I IND#TENP=0 D
"RTN","GMPLPXRM",30,0)
 .. S TEXT="Processing entry "_IND
"RTN","GMPLPXRM",31,0)
 .. D MES^XPDUTL(TEXT)
"RTN","GMPLPXRM",32,0)
 . I IND#10000=0 W "."
"RTN","GMPLPXRM",33,0)
 . S TEMP=$G(^AUPNPROB(DAS,1))
"RTN","GMPLPXRM",34,0)
 . S COND=$P(TEMP,U,2)
"RTN","GMPLPXRM",35,0)
 .;Don't index Hidden problems.
"RTN","GMPLPXRM",36,0)
 . I COND="H" Q
"RTN","GMPLPXRM",37,0)
 . S PRIO=$P(TEMP,U,14)
"RTN","GMPLPXRM",38,0)
 .;If there is no priority set it to "U" for undefined.
"RTN","GMPLPXRM",39,0)
 . I PRIO="" S PRIO="U"
"RTN","GMPLPXRM",40,0)
 . S TEMP=^AUPNPROB(DAS,0)
"RTN","GMPLPXRM",41,0)
 . S PROB=$P(TEMP,U,1)
"RTN","GMPLPXRM",42,0)
 . I PROB="" D  Q
"RTN","GMPLPXRM",43,0)
 .. S ETEXT=DAS_" missing problem"
"RTN","GMPLPXRM",44,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","GMPLPXRM",45,0)
 . I '$D(^ICD9(PROB)) D  Q
"RTN","GMPLPXRM",46,0)
 .. S ETEXT=DAS_" invalid ICD9"
"RTN","GMPLPXRM",47,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","GMPLPXRM",48,0)
 . S DFN=$P(TEMP,U,2)
"RTN","GMPLPXRM",49,0)
 . I DFN="" D  Q
"RTN","GMPLPXRM",50,0)
 .. S ETEXT=DAS_" missing DFN"
"RTN","GMPLPXRM",51,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","GMPLPXRM",52,0)
 . S DLM=$P(TEMP,U,3)
"RTN","GMPLPXRM",53,0)
 . I DLM="" D  Q
"RTN","GMPLPXRM",54,0)
 .. S ETEXT=DAS_" missing date laste modified"
"RTN","GMPLPXRM",55,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","GMPLPXRM",56,0)
 . S STATUS=$P(TEMP,U,12)
"RTN","GMPLPXRM",57,0)
 . I STATUS="" D  Q
"RTN","GMPLPXRM",58,0)
 .. S ETEXT=DAS_" missing status"
"RTN","GMPLPXRM",59,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR) Q
"RTN","GMPLPXRM",60,0)
 . S NE=NE+1
"RTN","GMPLPXRM",61,0)
 . S ^PXRMINDX(9000011,"ISPP",PROB,STATUS,PRIO,DFN,DLM,DAS)=""
"RTN","GMPLPXRM",62,0)
 . S ^PXRMINDX(9000011,"PSPI",DFN,STATUS,PRIO,PROB,DLM,DAS)=""
"RTN","GMPLPXRM",63,0)
 S END=$H
"RTN","GMPLPXRM",64,0)
 S TEXT=NE_" PROBLEM LIST results indexed."
"RTN","GMPLPXRM",65,0)
 D MES^XPDUTL(TEXT)
"RTN","GMPLPXRM",66,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","GMPLPXRM",67,0)
 ;If there were errors send a message.
"RTN","GMPLPXRM",68,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","GMPLPXRM",69,0)
 ;Send a MailMan message with the results.
"RTN","GMPLPXRM",70,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","GMPLPXRM",71,0)
 S ^PXRMINDX(9000011,"GLOBAL NAME")=GLOBAL
"RTN","GMPLPXRM",72,0)
 S ^PXRMINDX(9000011,"BUILT BY")=DUZ
"RTN","GMPLPXRM",73,0)
 S ^PXRMINDX(9000011,"DATE BUILT")=$$NOW^XLFDT
"RTN","GMPLPXRM",74,0)
 Q
"RTN","GMPLPXRM",75,0)
 ;
"RTN","GMPLPXRM",76,0)
 ;===============================================================
"RTN","GMPLPXRM",77,0)
KPROB(X,DA) ;Delete index for Problem List.
"RTN","GMPLPXRM",78,0)
 N PRIO
"RTN","GMPLPXRM",79,0)
 S PRIO=$S(X(5)="":"U",1:X(5))
"RTN","GMPLPXRM",80,0)
 ;DBIA 4114
"RTN","GMPLPXRM",81,0)
 K ^PXRMINDX(9000011,"ISPP",X(1),X(4),PRIO,X(2),X(3),DA)
"RTN","GMPLPXRM",82,0)
 K ^PXRMINDX(9000011,"PSPI",X(2),X(4),PRIO,X(1),X(3),DA)
"RTN","GMPLPXRM",83,0)
 Q
"RTN","GMPLPXRM",84,0)
 ;
"RTN","GMPLPXRM",85,0)
 ;===============================================================
"RTN","GMPLPXRM",86,0)
SPROB(X,DA) ;Set index for Problem List.
"RTN","GMPLPXRM",87,0)
 ;X(1)=DIAGNOSIS, X(2)=DFN, X(3)=DATE LAST MODIFIED, X(4)=STATUS
"RTN","GMPLPXRM",88,0)
 ;X(5)=PRIORITY, X(6)=CONDITION
"RTN","GMPLPXRM",89,0)
 ;Don't index Hidden problems.
"RTN","GMPLPXRM",90,0)
 I X(6)="H" Q
"RTN","GMPLPXRM",91,0)
 N PRIO
"RTN","GMPLPXRM",92,0)
 S PRIO=$S(X(5)="":"U",1:X(5))
"RTN","GMPLPXRM",93,0)
 ;DBIA 4114
"RTN","GMPLPXRM",94,0)
 S ^PXRMINDX(9000011,"ISPP",X(1),X(4),PRIO,X(2),X(3),DA)=""
"RTN","GMPLPXRM",95,0)
 S ^PXRMINDX(9000011,"PSPI",X(2),X(4),PRIO,X(1),X(3),DA)=""
"RTN","GMPLPXRM",96,0)
 Q
"RTN","GMPLPXRM",97,0)
 ;
"RTN","GMPLX")
0^2^B42121408
"RTN","GMPLX",1,0)
GMPLX ; SLC/MKB/AJB -- Problem List Problem Utilities ; 02/27/2004
"RTN","GMPLX",2,0)
 ;;2.0;Problem List;**7,23,26,28,27**;Aug 25, 1994
"RTN","GMPLX",3,0)
 ;
"RTN","GMPLX",4,0)
 ; External References
"RTN","GMPLX",5,0)
 ;   DBIA   446  ^AUTNPOV(
"RTN","GMPLX",6,0)
 ;   DBIA 10082  ^ICD9("BA"
"RTN","GMPLX",7,0)
 ;   DBIA 10060  ^VA(200
"RTN","GMPLX",8,0)
 ;   DBIA 10006  ^DIC
"RTN","GMPLX",9,0)
 ;   DBIA 10009  FILE^DICN
"RTN","GMPLX",10,0)
 ;   DBIA 10013  EN^DIK
"RTN","GMPLX",11,0)
 ;   DBIA 10013  IX1^DIK
"RTN","GMPLX",12,0)
 ;   DBIA 10026  ^DIR
"RTN","GMPLX",13,0)
 ;   DBIA  1609  CONFIG^LEXSET
"RTN","GMPLX",14,0)
 ;   DBIA 10103  $$FMTE^XLFDT
"RTN","GMPLX",15,0)
 ;   DBIA 10104  $$UP^XLFSTR
"RTN","GMPLX",16,0)
 ;   DBIA  2742  GMPLX
"RTN","GMPLX",17,0)
 ;   DBIA  3991  $$STATCHK^ICDAPIU
"RTN","GMPLX",18,0)
 ;
"RTN","GMPLX",19,0)
SEARCH(X,Y,PROMPT,UNRES,VIEW) ; Search Lexicon for Problem X
"RTN","GMPLX",20,0)
 N DIC S:'$L($G(VIEW)) VIEW="PL1" D CONFIG^LEXSET("GMPL",VIEW,DT)
"RTN","GMPLX",21,0)
 S DIC("A")=$S($L($G(PROMPT)):PROMPT,1:"Select PROBLEM: ")
"RTN","GMPLX",22,0)
 S DIC="^LEX(757.01,",DIC(0)=$S('$L($G(X)):"A",1:"")_"EQM"
"RTN","GMPLX",23,0)
 S:'$G(UNRES) LEXUN=0 D ^DIC S:+Y>1 X=$P(Y,U,2)
"RTN","GMPLX",24,0)
 Q
"RTN","GMPLX",25,0)
 ;
"RTN","GMPLX",26,0)
PROVNARR(X,CL) ; Returns IFN ^ Text of Narrative (#9999999.27)
"RTN","GMPLX",27,0)
 N DIC,Y,DLAYGO,DD,DO,DA S:$L(X)>80 X=$E(X,1,80)
"RTN","GMPLX",28,0)
 S DIC="^AUTNPOV(",DIC(0)="L",DLAYGO=9999999.27,(DA,Y)=0
"RTN","GMPLX",29,0)
 F  S DA=$O(^AUTNPOV("B",$E(X,1,30),DA)) Q:DA'>0  I $P(^AUTNPOV(DA,0),U)=X S Y=DA_U_X Q
"RTN","GMPLX",30,0)
 I '(+Y) K DA,Y D FILE^DICN S:Y'>0 Y=U_X I Y>0,CL>1 S ^AUTNPOV(+Y,757)=CL
"RTN","GMPLX",31,0)
 Q $P(Y,U,1,2)
"RTN","GMPLX",32,0)
 ;
"RTN","GMPLX",33,0)
PROBTEXT(IFN) ; Returns Display Text
"RTN","GMPLX",34,0)
 N X,Y,GMPLEXP,GMPLPOV,GMPLSO,GMPLTXT
"RTN","GMPLX",35,0)
 S Y=$P($G(^AUPNPROB(+IFN,0)),U,5),X=$P($G(^AUTNPOV(+Y,0)),U)
"RTN","GMPLX",36,0)
 S GMPLEXP=$$EP(IFN),GMPLSO=$$CS(X),GMPLPOV=$$PT(X,GMPLSO)
"RTN","GMPLX",37,0)
 S GMPLTXT=GMPLPOV S:$L(GMPLEXP) GMPLTXT=GMPLTXT_" ("_GMPLEXP_")"
"RTN","GMPLX",38,0)
 S:$L(GMPLSO) GMPLTXT=GMPLTXT_" "_GMPLSO
"RTN","GMPLX",39,0)
 S:GMPLTXT["*" GMPLTXT=$TR(GMPLTXT,"*","")
"RTN","GMPLX",40,0)
 ;S:$L(GMPLTXT) GMPLTXT=GMPLTXT_" ("_$$HFP^GMPLUTL4_","_$$PTR^GMPLUTL4_")"
"RTN","GMPLX",41,0)
 S:$L(GMPLTXT) X=GMPLTXT Q X
"RTN","GMPLX",42,0)
PROBNARR(IFN) ; Returns Provider Narrative
"RTN","GMPLX",43,0)
 N X,Y S Y=$P($G(^AUPNPROB(+IFN,0)),U,5),X=$P($G(^AUTNPOV(+Y,0)),U)
"RTN","GMPLX",44,0)
 Q X
"RTN","GMPLX",45,0)
CS(X) ; Problem Codes
"RTN","GMPLX",46,0)
 N GMPLSAB,GMPLSO S GMPLSO="" S X=$G(X) Q:X'["(" ""
"RTN","GMPLX",47,0)
 F GMPLSAB="ICD-","CPT-","DSM-","HCPCS","NANDA","NIC","NOC","LOINC","SNOMED","OMAHA" S:$G(X)[("("_GMPLSAB) GMPLSO="("_GMPLSAB_$P(X,("("_GMPLSAB),2,299) Q:$L(GMPLSO)
"RTN","GMPLX",48,0)
 I $L(GMPLSO) S X=GMPLSO Q X
"RTN","GMPLX",49,0)
 F GMPLSAB="ACR","AI/RHEUM","CONGRESS","COSTAR","COSTART","CRISP","DODFAC" S:$G(X)[("("_GMPLSAB) GMPLSO="("_GMPLSAB_$P(X,("("_GMPLSAB),2,299) Q:$L(GMPLSO)
"RTN","GMPLX",50,0)
 I $L(GMPLSO) S X=GMPLSO Q X
"RTN","GMPLX",51,0)
 F GMPLSAB="DORLAND","DXPLAIN","HHCC","MCMASTER","META","MTF","MeSH","RVC","TITLE 38","UMDNS","UWA" S:$G(X)[("("_GMPLSAB) GMPLSO="("_GMPLSAB_$P(X,("("_GMPLSAB),2,299) Q:$L(GMPLSO)
"RTN","GMPLX",52,0)
 I $L(GMPLSO) S X=GMPLSO Q X
"RTN","GMPLX",53,0)
 Q ""
"RTN","GMPLX",54,0)
EP(X) ; Exposures
"RTN","GMPLX",55,0)
 N GMPLSC S X=+($G(X)) D SCS^GMPLX1(+X,.GMPLSC) S X=$G(GMPLSC(1)) Q X
"RTN","GMPLX",56,0)
PT(X,C) ; Problem Text (only)
"RTN","GMPLX",57,0)
 N GMPLTERM,GMPLSO S GMPLTERM=$G(X),GMPLSO=$G(C)
"RTN","GMPLX",58,0)
 S:$L(GMPLSO)&(GMPLTERM[GMPLSO) GMPLTERM=$P(GMPLTERM,GMPLSO,1) S GMPLTERM=$$TRIM(GMPLTERM)
"RTN","GMPLX",59,0)
 S:$L(GMPLTERM) X=GMPLTERM Q X
"RTN","GMPLX",60,0)
TRIM(X) ; Trim Spaces and "*"
"RTN","GMPLX",61,0)
 S X=$G(X) F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","GMPLX",62,0)
 F  Q:$E(X,$L(X))'="*"  S X=$E(X,1,($L(X)-1))
"RTN","GMPLX",63,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","GMPLX",64,0)
 F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","GMPLX",65,0)
 Q X
"RTN","GMPLX",66,0)
WRAP(PROB,MAX,TEXT) ; Splits Text into TEXT array
"RTN","GMPLX",67,0)
 N I,J S J=0 K TEXT I $L(PROB)'>MAX S J=J+1,TEXT(J)=PROB G WRQ
"RTN","GMPLX",68,0)
WR0 ;   Loop for Remaining Text
"RTN","GMPLX",69,0)
 S I=$F(PROB," ") I ('I)!(I>(MAX+2)) S J=J+1,TEXT(J)=$E(PROB,1,MAX),PROB=$E(PROB,MAX+1,999)
"RTN","GMPLX",70,0)
 I $L(PROB)>MAX F I=(MAX+1):-1:1 I $E(PROB,I)=" " S J=J+1,TEXT(J)=$E(PROB,1,I-1),PROB=$E(PROB,I+1,999) Q
"RTN","GMPLX",71,0)
 G:$L(PROB)>MAX WR0
"RTN","GMPLX",72,0)
 S:$L(PROB) J=J+1,TEXT(J)=PROB
"RTN","GMPLX",73,0)
WRQ ;   Quit Wrap
"RTN","GMPLX",74,0)
 S TEXT=J
"RTN","GMPLX",75,0)
 Q
"RTN","GMPLX",76,0)
 ;
"RTN","GMPLX",77,0)
NOS() ; Return PTR ^ 799.9 ICD code
"RTN","GMPLX",78,0)
 N X S X=$O(^ICD9("BA",799.9,0)) Q (+X_"^799.9")
"RTN","GMPLX",79,0)
 ;
"RTN","GMPLX",80,0)
SEL(HELP) ; Select List of Problems
"RTN","GMPLX",81,0)
 N X,Y,DIR,MAX S MAX=+$G(^TMP("GMPL",$J,0)) I MAX'>0 Q "^"
"RTN","GMPLX",82,0)
 S DIR(0)="LAO^1:"_MAX,DIR("A")="Select Problem(s)"
"RTN","GMPLX",83,0)
 S:MAX>1 DIR("A")=DIR("A")_" (1-"_MAX_"): "
"RTN","GMPLX",84,0)
 S:MAX'>1 DIR("A")=DIR("A")_": ",DIR("B")=1
"RTN","GMPLX",85,0)
 S DIR("?")="Enter the problems you wish to "
"RTN","GMPLX",86,0)
 S DIR("?")=DIR("?")_$S($L(HELP):HELP,1:"act on")_", as a range or list of numbers"
"RTN","GMPLX",87,0)
 D ^DIR I $D(DTOUT)!(X="") S Y="^"
"RTN","GMPLX",88,0)
 Q Y
"RTN","GMPLX",89,0)
 ;
"RTN","GMPLX",90,0)
SEL1(HELP) ; Select 1 Problem
"RTN","GMPLX",91,0)
 N X,Y,DIR,MAX S MAX=+$G(^TMP("GMPL",$J,0)) I MAX'>0 Q "^"
"RTN","GMPLX",92,0)
 S DIR(0)="NAO^1:"_MAX_":0",DIR("A")="Select Problem"
"RTN","GMPLX",93,0)
 S:MAX>1 DIR("A")=DIR("A")_" (1-"_MAX_"): "
"RTN","GMPLX",94,0)
 S:MAX'>1 DIR("A")=DIR("A")_": ",DIR("B")=1
"RTN","GMPLX",95,0)
 S DIR("?")="Enter the number of the problem you wish to "
"RTN","GMPLX",96,0)
 S DIR("?")=DIR("?")_$S($L(HELP):HELP,1:"act on")
"RTN","GMPLX",97,0)
 D ^DIR I $D(DTOUT)!(X="") S Y="^"
"RTN","GMPLX",98,0)
 Q Y
"RTN","GMPLX",99,0)
 ;
"RTN","GMPLX",100,0)
DUPL(DFN,TERM,TEXT) ; Check's for Duplicate Entries
"RTN","GMPLX",101,0)
 N DA,IFN,NODE0,NODE1 S DA=0,TEXT=$$UP^XLFSTR(TEXT)
"RTN","GMPLX",102,0)
 I '$D(^AUPNPROB("C",TERM))!('$D(^AUPNPROB("AC",DFN))) Q DA
"RTN","GMPLX",103,0)
 F IFN=0:0 S IFN=$O(^AUPNPROB("AC",DFN,IFN)) Q:IFN'>0  D  Q:DA>0
"RTN","GMPLX",104,0)
 . S NODE0=$G(^AUPNPROB(IFN,0)),NODE1=$G(^(1)) Q:$P(NODE1,U,2)="H"
"RTN","GMPLX",105,0)
 . I TERM>1 S:+NODE1=TERM DA=IFN Q
"RTN","GMPLX",106,0)
 . S:TEXT=$$UP^XLFSTR($P(^AUTNPOV($P(NODE0,U,5),0),U)) DA=IFN
"RTN","GMPLX",107,0)
 Q DA
"RTN","GMPLX",108,0)
 ;
"RTN","GMPLX",109,0)
DUPLOK(IFN) ; Ask to Duplicate Problem
"RTN","GMPLX",110,0)
 N DIR,X,Y,GMPL0,GMPL1,DATE,PROV S DIR(0)="YA",GMPL0=$G(^AUPNPROB(IFN,0)),GMPL1=$G(^(1))
"RTN","GMPLX",111,0)
 S DIR("A")="Are you sure you want to continue? ",DIR("B")="NO"
"RTN","GMPLX",112,0)
 S DIR("?",1)="Enter YES if you want to duplicate this problem on this patient's list;",DIR("?")="press <return> to re-enter the problem name."
"RTN","GMPLX",113,0)
 W $C(7),!!,">>>  "_$$PROBTEXT(IFN),!?5,"is already an "
"RTN","GMPLX",114,0)
 W $S($P(GMPL0,U,12)="I":"IN",1:"")_"ACTIVE problem on this patient's list!",!
"RTN","GMPLX",115,0)
 S PROV=+$P(GMPL1,U,5) W:PROV !?5,"Provider: "_$P($G(^VA(200,PROV,0)),U)_" ("_$P($$SERVICE^GMPLX1(PROV),U,2)_")"
"RTN","GMPLX",116,0)
 I $P(GMPL0,U,12)="A" W !?8,"Onset: " S DATE=$P(GMPL0,U,13)
"RTN","GMPLX",117,0)
 I $P(GMPL0,U,12)="I" W !?5,"Resolved: " S DATE=$P(GMPL1,U,7)
"RTN","GMPLX",118,0)
 W $S(DATE>0:$$FMTE^XLFDT(DATE),1:"unspecified"),!
"RTN","GMPLX",119,0)
 D ^DIR W !
"RTN","GMPLX",120,0)
 Q +Y
"RTN","GMPLX",121,0)
 ;
"RTN","GMPLX",122,0)
LOCKED() ; Returns Message that Problem is Locked
"RTN","GMPLX",123,0)
 Q "This problem is currently being edited by another user!"
"RTN","GMPLX",124,0)
 ;
"RTN","GMPLX",125,0)
SURE() ; Ask to Delete 
"RTN","GMPLX",126,0)
 ;   Returns 1 if YES, else 0
"RTN","GMPLX",127,0)
 N DIR,X,Y S DIR(0)="YA",DIR("B")="NO"
"RTN","GMPLX",128,0)
 S DIR("?")="Enter YES to remove this value or NO to leave it unchanged."
"RTN","GMPLX",129,0)
 S DIR("A")="Are you sure you want to remove this value? " D ^DIR
"RTN","GMPLX",130,0)
 Q +Y
"RTN","GMPLX",131,0)
 ;
"RTN","GMPLX",132,0)
EXTDT(DATE) ; Formats Date into MM/DD/YY
"RTN","GMPLX",133,0)
 N X,MM,DD,YY,YYY S X="",DATE=$P(DATE,".") Q:'DATE ""
"RTN","GMPLX",134,0)
 S MM=+$E(DATE,4,5),DD=+$E(DATE,6,7),YY=$E(DATE,2,3),YYY=$E(DATE,1,3)
"RTN","GMPLX",135,0)
 S:MM X=MM_"/" S:DD X=X_DD_"/" S X=$S($L(X):X_YY,1:1700+YYY)
"RTN","GMPLX",136,0)
 Q X
"RTN","GMPLX",137,0)
 ;
"RTN","GMPLX",138,0)
AUDIT(DATA,OLD) ; Makes Entry in Audit File
"RTN","GMPLX",139,0)
 ;   DATA = string for 0-node
"RTN","GMPLX",140,0)
 ;   OLD  = string for 1-node
"RTN","GMPLX",141,0)
 ;        = 0-node from reform/react problem
"RTN","GMPLX",142,0)
 N DA,DD,DO,DIC,X,Y,DIK,DLAYGO
"RTN","GMPLX",143,0)
 S DIC="^GMPL(125.8,",DIC(0)="L",X=$P(DATA,U),DLAYGO=125.8
"RTN","GMPLX",144,0)
 D FILE^DICN Q:+Y'>0  S DA=+Y,DIK="^GMPL(125.8,"
"RTN","GMPLX",145,0)
 S ^GMPL(125.8,DA,0)=DATA D IX1^DIK
"RTN","GMPLX",146,0)
 S:$L(OLD) ^GMPL(125.8,DA,1)=OLD
"RTN","GMPLX",147,0)
 Q
"RTN","GMPLX",148,0)
 ;
"RTN","GMPLX",149,0)
DTMOD(DA) ; Update Date Last Modified
"RTN","GMPLX",150,0)
 N DIE,DR
"RTN","GMPLX",151,0)
 S DR=".03///TODAY",DIE="^AUPNPROB("
"RTN","GMPLX",152,0)
 D ^DIE
"RTN","GMPLX",153,0)
 Q
"RTN","GMPLX",154,0)
 ;
"RTN","GMPLX",155,0)
MSG() ; List Manager Message Bar
"RTN","GMPLX",156,0)
 Q "+ Next Screen  - Prev Screen  ?? More actions"
"RTN","GMPLX",157,0)
 ;
"RTN","GMPLX",158,0)
KILL ; Clean-Up Variables
"RTN","GMPLX",159,0)
 K X,Y,DIC,DIE,DR,DA,DUOUT,DTOUT,GMPQUIT,GMPRT,GMPSAVED,GMPIFN,GMPLNO,GMPLNUM,GMPLSEL,GMPREBLD,GMPI,GMPLSLST,GMPLJUMP
"RTN","GMPLX",160,0)
 Q
"RTN","GMPLX",161,0)
 ;
"RTN","GMPLX",162,0)
CODESTS(PROB,ADATE) ;check status of code associated with a problem
"RTN","GMPLX",163,0)
 ; Input:
"RTN","GMPLX",164,0)
 ;    PROB  = pointer to the PROBLEM (#9000011) file
"RTN","GMPLX",165,0)
 ;    ADATE = FM date on which to check the status of ICD9 code  (opt.) 
"RTN","GMPLX",166,0)
 ;
"RTN","GMPLX",167,0)
 ; Output:
"RTN","GMPLX",168,0)
 ;   1  = ACTIVE on the date passed or current date if not passed
"RTN","GMPLX",169,0)
 ;   0  = INACTIVE on the date passed or current date if not passed
"RTN","GMPLX",170,0)
 ;
"RTN","GMPLX",171,0)
 I '$G(ADATE) S ADATE=DT
"RTN","GMPLX",172,0)
 I '$D(^AUPNPROB(PROB,0)) Q 0
"RTN","GMPLX",173,0)
 S PROB=$P(^AUPNPROB(PROB,0),U)
"RTN","GMPLX",174,0)
 Q +($$STATCHK^ICDAPIU($$CODEC^ICDCODE(+(PROB)),ADATE))
"VER")
8.0^22.0
**INSTALL NAME**
GMRV*5.0*6
"BLD",5088,0)
GMRV*5.0*6^GEN. MED. REC. - VITALS^0^3041026^y
"BLD",5088,1,0)
^^2^2^3041014^
"BLD",5088,1,1,0)
Please read the GMRV*5*6 patch description on FORUM for an explanation of
"BLD",5088,1,2,0)
what this patch does.
"BLD",5088,4,0)
^9.64PA^^
"BLD",5088,"ABPKG")
n
"BLD",5088,"INIT")
GMV6PST
"BLD",5088,"KRN",0)
^9.67PA^8989.52^19
"BLD",5088,"KRN",.4,0)
.4
"BLD",5088,"KRN",.401,0)
.401
"BLD",5088,"KRN",.402,0)
.402
"BLD",5088,"KRN",.403,0)
.403
"BLD",5088,"KRN",.5,0)
.5
"BLD",5088,"KRN",.84,0)
.84
"BLD",5088,"KRN",3.6,0)
3.6
"BLD",5088,"KRN",3.8,0)
3.8
"BLD",5088,"KRN",9.2,0)
9.2
"BLD",5088,"KRN",9.8,0)
9.8
"BLD",5088,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",5088,"KRN",9.8,"NM",1,0)
GMV6PST^^0^B5967663
"BLD",5088,"KRN",9.8,"NM",2,0)
GMVPXRM^^0^B36506457
"BLD",5088,"KRN",9.8,"NM","B","GMV6PST",1)

"BLD",5088,"KRN",9.8,"NM","B","GMVPXRM",2)

"BLD",5088,"KRN",19,0)
19
"BLD",5088,"KRN",19.1,0)
19.1
"BLD",5088,"KRN",101,0)
101
"BLD",5088,"KRN",409.61,0)
409.61
"BLD",5088,"KRN",771,0)
771
"BLD",5088,"KRN",870,0)
870
"BLD",5088,"KRN",8989.51,0)
8989.51
"BLD",5088,"KRN",8989.52,0)
8989.52
"BLD",5088,"KRN",8994,0)
8994
"BLD",5088,"KRN","B",.4,.4)

"BLD",5088,"KRN","B",.401,.401)

"BLD",5088,"KRN","B",.402,.402)

"BLD",5088,"KRN","B",.403,.403)

"BLD",5088,"KRN","B",.5,.5)

"BLD",5088,"KRN","B",.84,.84)

"BLD",5088,"KRN","B",3.6,3.6)

"BLD",5088,"KRN","B",3.8,3.8)

"BLD",5088,"KRN","B",9.2,9.2)

"BLD",5088,"KRN","B",9.8,9.8)

"BLD",5088,"KRN","B",19,19)

"BLD",5088,"KRN","B",19.1,19.1)

"BLD",5088,"KRN","B",101,101)

"BLD",5088,"KRN","B",409.61,409.61)

"BLD",5088,"KRN","B",771,771)

"BLD",5088,"KRN","B",870,870)

"BLD",5088,"KRN","B",8989.51,8989.51)

"BLD",5088,"KRN","B",8989.52,8989.52)

"BLD",5088,"KRN","B",8994,8994)

"BLD",5088,"QUES",0)
^9.62^^
"BLD",5088,"REQB",0)
^9.611^1^1
"BLD",5088,"REQB",1,0)
GMRV*5.0*1^2
"BLD",5088,"REQB","B","GMRV*5.0*1",1)

"INIT")
GMV6PST
"MBREQ")
0
"PKG",117,-1)
1^1
"PKG",117,0)
GEN. MED. REC. - VITALS^GMRV^Vitals/Measurements Module of General Medical Record.
"PKG",117,22,0)
^9.49I^1^1
"PKG",117,22,1,0)
5.0^3021028^3021114^1119
"PKG",117,22,1,"PAH",1,0)
6^3041026^1342
"PKG",117,22,1,"PAH",1,1,0)
^^2^2^3041026
"PKG",117,22,1,"PAH",1,1,1,0)
Please read the GMRV*5*6 patch description on FORUM for an explanation of
"PKG",117,22,1,"PAH",1,1,2,0)
what this patch does.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","GMV6PST")
0^1^B5967663
"RTN","GMV6PST",1,0)
GMV6PST ;HIOFO/FT-Create Clinical Reminders Index ;10/14/04  11:35
"RTN","GMV6PST",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**6**;Oct 31, 2002
"RTN","GMV6PST",3,0)
 ;
"RTN","GMV6PST",4,0)
 ; This routine uses the following IAs:
"RTN","GMV6PST",5,0)
 ;  #3736 - ^PXRMP12I calls    (private)
"RTN","GMV6PST",6,0)
 ; #10141 - ^XPDUTL calls      (supported)
"RTN","GMV6PST",7,0)
 ;
"RTN","GMV6PST",8,0)
CGMRVVM ; Create cross-reference for GMRV Vital Measurement file (#120.5)
"RTN","GMV6PST",9,0)
 N MSG,RESULT,XREF
"RTN","GMV6PST",10,0)
 D BMES^XPDUTL("Creating GMRV Vital Measurement cross-reference.")
"RTN","GMV6PST",11,0)
 S XREF("FILE")=120.5
"RTN","GMV6PST",12,0)
 S XREF("ROOT FILE")=120.5
"RTN","GMV6PST",13,0)
 S XREF("TYPE")="MU"
"RTN","GMV6PST",14,0)
 S XREF("SHORT DESCR")="Clinical Reminders cross-reference."
"RTN","GMV6PST",15,0)
 S XREF("DESCR",1)="This cross-reference builds two indexes, one for finding"
"RTN","GMV6PST",16,0)
 S XREF("DESCR",2)="all patients with a particular vital measurement and one for finding all"
"RTN","GMV6PST",17,0)
 S XREF("DESCR",3)="the vital measurements a patient has."
"RTN","GMV6PST",18,0)
 S XREF("DESCR",4)="The index is stored in the Clinical Reminders index global as:"
"RTN","GMV6PST",19,0)
 S XREF("DESCR",5)=" ^PXRMINDX(120.5,""IP"",MEASUREMENT,DFN,DATE/TIME TAKEN,DAS)"
"RTN","GMV6PST",20,0)
 S XREF("DESCR",6)=" ^PXRMINDX(120.5,""PI"",DFN,MEASUREMENT,DATE/TIME TAKEN,DAS)"
"RTN","GMV6PST",21,0)
 S XREF("DESCR",7)="Entries that are marked as entered-in-error are not indexed."
"RTN","GMV6PST",22,0)
 S XREF("DESCR",8)="Permission to use the PXRM namespace is documented in IAs 3736 and 4114."
"RTN","GMV6PST",23,0)
 S XREF("DESCR",9)="For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","GMV6PST",24,0)
 S XREF("USE")="ACTION"
"RTN","GMV6PST",25,0)
 S XREF("EXECUTION")="R"
"RTN","GMV6PST",26,0)
 S XREF("ACTIVITY")="IR"
"RTN","GMV6PST",27,0)
 S XREF("WHOLE KILL")="K ^PXRMINDX(120.5)"
"RTN","GMV6PST",28,0)
 S XREF("VAL",1)=.01
"RTN","GMV6PST",29,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","GMV6PST",30,0)
 S XREF("VAL",2)=.02
"RTN","GMV6PST",31,0)
 S XREF("VAL",2,"SUBSCRIPT")=2
"RTN","GMV6PST",32,0)
 S XREF("VAL",3)=.03
"RTN","GMV6PST",33,0)
 S XREF("VAL",3,"SUBSCRIPT")=3
"RTN","GMV6PST",34,0)
 S XREF("VAL",4)=2
"RTN","GMV6PST",35,0)
 S XREF("NAME")="ACR"
"RTN","GMV6PST",36,0)
 S XREF("SET")="D SVITAL^GMVPXRM(.X,.DA)"
"RTN","GMV6PST",37,0)
 S XREF("KILL")="D KVITAL^GMVPXRM(.X,.DA)"
"RTN","GMV6PST",38,0)
 D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","GMV6PST",39,0)
 I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","GMV6PST",40,0)
 Q
"RTN","GMVPXRM")
0^2^B36506457
"RTN","GMVPXRM",1,0)
GMVPXRM ;HIOFO/FT-API to return FILE 120.5 data ;10/14/04  11:46
"RTN","GMVPXRM",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**6**;Oct 31, 2002
"RTN","GMVPXRM",3,0)
 ;
"RTN","GMVPXRM",4,0)
 ; This routine uses the following IAs:
"RTN","GMVPXRM",5,0)
 ;  #4113 - ^PXRMSXRM routine    (controlled) 
"RTN","GMVPXRM",6,0)
 ;  #4114 - ^PXRMINDX global     (controlled)
"RTN","GMVPXRM",7,0)
 ; #10103 - ^XLFDT calls         (supported)
"RTN","GMVPXRM",8,0)
 ; #10141 - ^XPDUTL calls        (supported)
"RTN","GMVPXRM",9,0)
 ;
"RTN","GMVPXRM",10,0)
 ; Entry point(s) available for use by other packages:
"RTN","GMVPXRM",11,0)
 ;      EN is documented in IA #3647
"RTN","GMVPXRM",12,0)
 ;  VITALS is documented in IA #3647
"RTN","GMVPXRM",13,0)
 ;
"RTN","GMVPXRM",14,0)
EN(GMVDATA,GMVIEN,GMVIB) ; Returns data for a single FILE 120.5 entry.
"RTN","GMVPXRM",15,0)
 ; Input:
"RTN","GMVPXRM",16,0)
 ;   GMVDATA = Array name passed by reference       (required)
"RTN","GMVPXRM",17,0)
 ;    GMVIEN = IEN for FILE 120.5 entry             (required)
"RTN","GMVPXRM",18,0)
 ;     GMVIB = "I" for Internal value only
"RTN","GMVPXRM",19,0)
 ;             "B" for Internal and External values (default = B)
"RTN","GMVPXRM",20,0)
 ; 
"RTN","GMVPXRM",21,0)
 ; If GMVIB = "I", then
"RTN","GMVPXRM",22,0)
 ;   Output = GMVDATA(n)=internal value
"RTN","GMVPXRM",23,0)
 ; 
"RTN","GMVPXRM",24,0)
 ; If GMVIB = "B", then 
"RTN","GMVPXRM",25,0)
 ; Output: GMVDATA(n)=internal value^external value 
"RTN","GMVPXRM",26,0)
 ;
"RTN","GMVPXRM",27,0)
 ; where:
"RTN","GMVPXRM",28,0)
 ; GMVDATA(1)=.01 (DATE/TIME VITALS TAKEN)
"RTN","GMVPXRM",29,0)
 ; GMVDATA(2)=.02 (PATIENT)
"RTN","GMVPXRM",30,0)
 ; GMVDATA(3)=.03 (VITAL TYPE)
"RTN","GMVPXRM",31,0)
 ; GMVDATA(4)=.04 (DATE/TIME VITALS ENTERED)
"RTN","GMVPXRM",32,0)
 ; GMVDATA(5)=.05 (HOSPITAL LOCATION)
"RTN","GMVPXRM",33,0)
 ; GMVDATA(6)=.06 (ENTERED BY)
"RTN","GMVPXRM",34,0)
 ; GMVDATA(7)=1.2 (RATE)
"RTN","GMVPXRM",35,0)
 ; GMVDATA(8)=1.4 (SUPPLEMENTAL O2)
"RTN","GMVPXRM",36,0)
 ; GMVDATA(9)=2   (ENTERED IN ERROR)
"RTN","GMVPXRM",37,0)
 ; GMVDATA(10)=3  (ERROR ENTERED BY)
"RTN","GMVPXRM",38,0)
 ; GMVDATA(11,n)=4 (REASON ENTERED IN ERROR)  <--multiple
"RTN","GMVPXRM",39,0)
 ; GMVDATA(12,n)=5 (QUALIFIER)                <--multiple
"RTN","GMVPXRM",40,0)
 ;
"RTN","GMVPXRM",41,0)
 ; If the lookup failed then: GMVDATA(1)=-1^error text
"RTN","GMVPXRM",42,0)
 ;
"RTN","GMVPXRM",43,0)
 N GMVCNT,GMVIEN1
"RTN","GMVPXRM",44,0)
 I $G(GMVIB)'="I",$G(GMVIB)'="B" S GMVIB="B"
"RTN","GMVPXRM",45,0)
 I $G(GMVIEN)="" S GMVDATA(1)="-1^Record Number is Null" Q
"RTN","GMVPXRM",46,0)
 I '$D(^GMR(120.5,+GMVIEN,0)) D  Q
"RTN","GMVPXRM",47,0)
 .S GMVDATA(1)="-1^The entry does not exist"
"RTN","GMVPXRM",48,0)
 .Q
"RTN","GMVPXRM",49,0)
 ;
"RTN","GMVPXRM",50,0)
 N TEMP
"RTN","GMVPXRM",51,0)
 S TEMP=^GMR(120.5,GMVIEN,0)
"RTN","GMVPXRM",52,0)
 S GMVDATA(1)=$P(TEMP,U,1)
"RTN","GMVPXRM",53,0)
 S GMVDATA(2)=$P(TEMP,U,2)
"RTN","GMVPXRM",54,0)
 S GMVDATA(3)=$P(TEMP,U,3)
"RTN","GMVPXRM",55,0)
 S GMVDATA(4)=$P(TEMP,U,4)
"RTN","GMVPXRM",56,0)
 S GMVDATA(5)=$P(TEMP,U,5)
"RTN","GMVPXRM",57,0)
 S GMVDATA(6)=$P(TEMP,U,6)
"RTN","GMVPXRM",58,0)
 S GMVDATA(7)=$P(TEMP,U,8)
"RTN","GMVPXRM",59,0)
 S GMVDATA(8)=$P(TEMP,U,10)
"RTN","GMVPXRM",60,0)
 S TEMP=$G(^GMR(120.5,GMVIEN,2))
"RTN","GMVPXRM",61,0)
 S GMVDATA(9)=$P(TEMP,U,1)
"RTN","GMVPXRM",62,0)
 S GMVDATA(10)=$P(TEMP,U,2)
"RTN","GMVPXRM",63,0)
 ;entered-in-error reasons
"RTN","GMVPXRM",64,0)
 S (GMVCNT,GMVIEN1)=0
"RTN","GMVPXRM",65,0)
 F  S GMVIEN1=$O(^GMR(120.5,GMVIEN,2.1,GMVIEN1)) Q:'GMVIEN1  D
"RTN","GMVPXRM",66,0)
 .S GMVCNT=GMVCNT+1
"RTN","GMVPXRM",67,0)
 .S TP=+$P($G(^GMR(120.5,GMVIEN,2.1,GMVIEN1,0)),U,1)
"RTN","GMVPXRM",68,0)
 .S GMVDATA(11,GMVCNT)=TP
"RTN","GMVPXRM",69,0)
 .Q
"RTN","GMVPXRM",70,0)
 ;loop through qualifier multiple
"RTN","GMVPXRM",71,0)
 N EM,TP
"RTN","GMVPXRM",72,0)
 I GMVCNT=0 S GMVDATA(11,1)=""
"RTN","GMVPXRM",73,0)
 S (GMVCNT,GMVIEN1)=0
"RTN","GMVPXRM",74,0)
 F  S GMVIEN1=$O(^GMR(120.5,GMVIEN,5,GMVIEN1)) Q:'GMVIEN1  D
"RTN","GMVPXRM",75,0)
 .S GMVCNT=GMVCNT+1
"RTN","GMVPXRM",76,0)
 .S TP=+$P($G(^GMR(120.5,GMVIEN,5,GMVIEN1,0)),U,1)
"RTN","GMVPXRM",77,0)
 .S GMVDATA(12,GMVCNT)=TP
"RTN","GMVPXRM",78,0)
 .Q
"RTN","GMVPXRM",79,0)
 I GMVCNT=0 S GMVDATA(12,1)=""
"RTN","GMVPXRM",80,0)
 ;
"RTN","GMVPXRM",81,0)
 Q:GMVIB="I"
"RTN","GMVPXRM",82,0)
 ;
"RTN","GMVPXRM",83,0)
 S GMVDATA(1)=$P(GMVDATA(1),U,1)_U_$$EXTERNAL^DILFD(120.5,.01,"",$P(GMVDATA(1),U,1),.EM)
"RTN","GMVPXRM",84,0)
 S GMVDATA(2)=$P(GMVDATA(2),U,1)_U_$$EXTERNAL^DILFD(120.5,.02,"",$P(GMVDATA(2),U,1),.EM)
"RTN","GMVPXRM",85,0)
 S GMVDATA(3)=$P(GMVDATA(3),U,1)_U_$$EXTERNAL^DILFD(120.5,.03,"",$P(GMVDATA(3),U,1),.EM)
"RTN","GMVPXRM",86,0)
 S GMVDATA(4)=$P(GMVDATA(4),U,1)_U_$$EXTERNAL^DILFD(120.5,.04,"",$P(GMVDATA(4),U,1),.EM)
"RTN","GMVPXRM",87,0)
 S GMVDATA(5)=$P(GMVDATA(5),U,1)_U_$$EXTERNAL^DILFD(120.5,.05,"",$P(GMVDATA(5),U,1),.EM)
"RTN","GMVPXRM",88,0)
 S GMVDATA(6)=$P(GMVDATA(6),U,1)_U_$$EXTERNAL^DILFD(120.5,.06,"",$P(GMVDATA(6),U,1),.EM)
"RTN","GMVPXRM",89,0)
 S GMVDATA(7)=$P(GMVDATA(7),U,1)_U_$P(GMVDATA(7),U,1) ;same
"RTN","GMVPXRM",90,0)
 S GMVDATA(8)=$P(GMVDATA(8),U,1)_U_$P(GMVDATA(8),U,1) ;same
"RTN","GMVPXRM",91,0)
 S GMVDATA(9)=$P(GMVDATA(9),U,1)_U_$$EXTERNAL^DILFD(120.5,2,"",$P(GMVDATA(9),U,1),.EM)
"RTN","GMVPXRM",92,0)
 S GMVDATA(10)=$P(GMVDATA(10),U,1)_U_$$EXTERNAL^DILFD(120.5,3,"",$P(GMVDATA(10),U,1),.EM)
"RTN","GMVPXRM",93,0)
 ;
"RTN","GMVPXRM",94,0)
 ;loop through entered-in-error reason multiple
"RTN","GMVPXRM",95,0)
 S (GMVCNT,GMVIEN1)=0
"RTN","GMVPXRM",96,0)
 F  S GMVIEN1=$O(GMVDATA(11,GMVIEN1)) Q:'GMVIEN1  D
"RTN","GMVPXRM",97,0)
 .S TP=+$P(GMVDATA(11,GMVIEN1),U,1)
"RTN","GMVPXRM",98,0)
 .Q:'TP
"RTN","GMVPXRM",99,0)
 .S GMVDATA(11,GMVIEN1)=TP_U_$$EXTERNAL^DILFD(120.506,.01,"",TP,.EM)
"RTN","GMVPXRM",100,0)
 .S GMVCNT=1
"RTN","GMVPXRM",101,0)
 .Q
"RTN","GMVPXRM",102,0)
 I GMVCNT=0 S GMVDATA(11,1)="^"
"RTN","GMVPXRM",103,0)
 ;loop through qualifier multiple
"RTN","GMVPXRM",104,0)
 S (GMVCNT,GMVIEN1)=0
"RTN","GMVPXRM",105,0)
 F  S GMVIEN1=$O(GMVDATA(12,GMVIEN1)) Q:'GMVIEN1  D
"RTN","GMVPXRM",106,0)
 .S TP=+$P(GMVDATA(12,GMVIEN1),U,1)
"RTN","GMVPXRM",107,0)
 .Q:'TP
"RTN","GMVPXRM",108,0)
 .S GMVDATA(12,GMVIEN1)=TP_U_$P($G(^GMRD(120.52,+TP,0)),U,1)
"RTN","GMVPXRM",109,0)
 .S GMVCNT=1
"RTN","GMVPXRM",110,0)
 .Q
"RTN","GMVPXRM",111,0)
 I GMVCNT=0 S GMVDATA(12,1)="^"
"RTN","GMVPXRM",112,0)
 Q
"RTN","GMVPXRM",113,0)
 ;
"RTN","GMVPXRM",114,0)
VITALS ; This entry point is for use by the Clinical Reminders package
"RTN","GMVPXRM",115,0)
 ; to re-index the ACR cross-reference nodes for FILE 120.5.
"RTN","GMVPXRM",116,0)
 ;
"RTN","GMVPXRM",117,0)
 ; a) This entry point kills the ACR cross-reference nodes for FILE 120.5
"RTN","GMVPXRM",118,0)
 ;    i.e., ^PXRMINDX(120.5).
"RTN","GMVPXRM",119,0)
 ; b) Re-builds the ACR cross-reference nodes.
"RTN","GMVPXRM",120,0)
 ; c) Calls the Clinical Reminders package to generate a mail message
"RTN","GMVPXRM",121,0)
 ;    summarizing the rebuilding of the ACR cross-reference.
"RTN","GMVPXRM",122,0)
 ;
"RTN","GMVPXRM",123,0)
 N DAS,DATE,DFN,END,ENTRIES,ETEXT,GLOBAL,IND,NE,NE1,NE2,NERROR
"RTN","GMVPXRM",124,0)
 N START,TEMP,TENP,TEXT,VT
"RTN","GMVPXRM",125,0)
 S GLOBAL=$$GET1^DID(120.5,"","","GLOBAL NAME")
"RTN","GMVPXRM",126,0)
 ; Don't leave any old cross-reference nodes around.
"RTN","GMVPXRM",127,0)
 K ^PXRMINDX(120.5)
"RTN","GMVPXRM",128,0)
 S ENTRIES=$P(^GMR(120.5,0),U,4)
"RTN","GMVPXRM",129,0)
 S TENP=ENTRIES/10
"RTN","GMVPXRM",130,0)
 S TENP=+$P(TENP,".",1)
"RTN","GMVPXRM",131,0)
 D BMES^XPDUTL("Building index for VITALS DATA.")
"RTN","GMVPXRM",132,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","GMVPXRM",133,0)
 D MES^XPDUTL(TEXT)
"RTN","GMVPXRM",134,0)
 S START=$H
"RTN","GMVPXRM",135,0)
 S (DAS,IND,NE,NE1,NE2,NERROR)=0
"RTN","GMVPXRM",136,0)
 F  S DAS=+$O(^GMR(120.5,DAS)) Q:DAS=0  D
"RTN","GMVPXRM",137,0)
 . S IND=IND+1
"RTN","GMVPXRM",138,0)
 . I IND#TENP=0 D
"RTN","GMVPXRM",139,0)
 .. S TEXT="Processing entry "_IND
"RTN","GMVPXRM",140,0)
 .. D MES^XPDUTL(TEXT)
"RTN","GMVPXRM",141,0)
 . I IND#10000=0 W "."
"RTN","GMVPXRM",142,0)
 . S TEMP=^GMR(120.5,DAS,0)
"RTN","GMVPXRM",143,0)
 . S DATE=$P(TEMP,U,1)
"RTN","GMVPXRM",144,0)
 . I DATE="" D  Q
"RTN","GMVPXRM",145,0)
 .. S ETEXT=DAS_" no date",NE1=NE1+1
"RTN","GMVPXRM",146,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","GMVPXRM",147,0)
 . S DFN=$P(TEMP,U,2)
"RTN","GMVPXRM",148,0)
 . I DFN="" D  Q
"RTN","GMVPXRM",149,0)
 .. S ETEXT=DAS_" no patient",NE1=NE1+1
"RTN","GMVPXRM",150,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR) Q
"RTN","GMVPXRM",151,0)
 . S VT=$P(TEMP,U,3)
"RTN","GMVPXRM",152,0)
 . I VT="" D  Q
"RTN","GMVPXRM",153,0)
 .. S ETEXT=DAS_" no vital type",NE1=NE1+1
"RTN","GMVPXRM",154,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","GMVPXRM",155,0)
 .;If this entry is marked as entered-in-error do not index it.
"RTN","GMVPXRM",156,0)
 . I $P($G(^GMR(120.5,DAS,2)),U,1) S NE2=NE2+1 Q
"RTN","GMVPXRM",157,0)
 . S ^PXRMINDX(120.5,"IP",VT,DFN,DATE,DAS)=""
"RTN","GMVPXRM",158,0)
 . S ^PXRMINDX(120.5,"PI",DFN,VT,DATE,DAS)=""
"RTN","GMVPXRM",159,0)
 . S NE=NE+1
"RTN","GMVPXRM",160,0)
 S END=$H
"RTN","GMVPXRM",161,0)
 S TEXT="  VITAL MEASUREMENTS entries indexed: "_NE
"RTN","GMVPXRM",162,0)
 D BMES^XPDUTL(TEXT)
"RTN","GMVPXRM",163,0)
 S TEXT="             Bad entries not indexed: "_NE1
"RTN","GMVPXRM",164,0)
 D MES^XPDUTL(TEXT)
"RTN","GMVPXRM",165,0)
 S TEXT="Entered-in-Error entries not indexed: "_NE2
"RTN","GMVPXRM",166,0)
 D MES^XPDUTL(TEXT)
"RTN","GMVPXRM",167,0)
 S TEXT=" "
"RTN","GMVPXRM",168,0)
 D MES^XPDUTL(TEXT)
"RTN","GMVPXRM",169,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","GMVPXRM",170,0)
 ; If there were errors send a message.
"RTN","GMVPXRM",171,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","GMVPXRM",172,0)
 ;Send a MailMan message with the results.
"RTN","GMVPXRM",173,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","GMVPXRM",174,0)
 S ^PXRMINDX(120.5,"GLOBAL NAME")=$$GET1^DID(120.5,"","","GLOBAL NAME")
"RTN","GMVPXRM",175,0)
 S ^PXRMINDX(120.5,"BUILT BY")=DUZ
"RTN","GMVPXRM",176,0)
 S ^PXRMINDX(120.5,"DATE BUILT")=$$NOW^XLFDT
"RTN","GMVPXRM",177,0)
 Q
"RTN","GMVPXRM",178,0)
 ;
"RTN","GMVPXRM",179,0)
SVITAL(X,DA) ; Set ACR index entry
"RTN","GMVPXRM",180,0)
 ; X(1)=DATE/TIME, X(2)=DFN, X(3)=VITAL TYPE, X(4)=ENTERED IN ERROR
"RTN","GMVPXRM",181,0)
 ; Do not index entries that are marked as entered-in-error.
"RTN","GMVPXRM",182,0)
 I $G(X(4)) Q
"RTN","GMVPXRM",183,0)
 S ^PXRMINDX(120.5,"IP",X(3),X(2),X(1),DA)=""
"RTN","GMVPXRM",184,0)
 S ^PXRMINDX(120.5,"PI",X(2),X(3),X(1),DA)=""
"RTN","GMVPXRM",185,0)
 Q
"RTN","GMVPXRM",186,0)
 ;
"RTN","GMVPXRM",187,0)
KVITAL(X,DA) ; Delete ACR index entry
"RTN","GMVPXRM",188,0)
 K ^PXRMINDX(120.5,"IP",X(3),X(2),X(1),DA)
"RTN","GMVPXRM",189,0)
 K ^PXRMINDX(120.5,"PI",X(2),X(3),X(1),DA)
"RTN","GMVPXRM",190,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
LR*5.2*295
"BLD",3860,0)
LR*5.2*295^LAB SERVICE^0^3041026^y
"BLD",3860,1,0)
^^156^156^3040512^^^^
"BLD",3860,1,1,0)
  
"BLD",3860,1,2,0)
 This project consists of 12 patches that work together to create a new
"BLD",3860,1,3,0)
 Clinical Reminders index global. The purpose of this index is to provide
"BLD",3860,1,4,0)
 rapid access to clinical data. All of the standard Clinical Reminders
"BLD",3860,1,5,0)
 finding types are included in the index.
"BLD",3860,1,6,0)
  
"BLD",3860,1,7,0)
 The 12 patches that comprise this project are:
"BLD",3860,1,8,0)
  
"BLD",3860,1,9,0)
   Package                                 Patch
"BLD",3860,1,10,0)
   -------                                 -----
"BLD",3860,1,11,0)
   Clinical Reminders                      PXRM*1.5*12
"BLD",3860,1,12,0)
   Inpatient Pharmacy                      PSJ*5*90
"BLD",3860,1,13,0)
   Laboratory                              LR*5.2*295
"BLD",3860,1,14,0)
   Mental Health                           YS*5.01*77
"BLD",3860,1,15,0)
   Order Entry/Results Reporting (OE/RR)   OR*3*157
"BLD",3860,1,16,0)
   Outpatient Pharmacy                     PSO*7*118
"BLD",3860,1,17,0)
   Patient Care Encounter (PCE)            PX*1.0*119
"BLD",3860,1,18,0)
   Pharmacy Data Management                PSS*1*62
"BLD",3860,1,19,0)
   PIMS/Scheduling                         DG*5.3*478
"BLD",3860,1,20,0)
   Problem List                            GMPL*2*27
"BLD",3860,1,21,0)
   Radiology                               RA*5*33
"BLD",3860,1,22,0)
   Vitals                                  GMRV*4*15
"BLD",3860,1,23,0)
  
"BLD",3860,1,24,0)
 This patch (LR*5.2*295) provides the description of the Lab
"BLD",3860,1,25,0)
 routines, but not the Lab routines themselves, which must be loaded
"BLD",3860,1,26,0)
 from the main multi-build host file. PXRM*1.5*12 distributes these Lab
"BLD",3860,1,27,0)
 routines. This patch provides a new global ^PXRMINDX where Lab data
"BLD",3860,1,28,0)
 are indexed in ^PXRMINDX(63, for fast retrieval. Lab APIs are provided
"BLD",3860,1,29,0)
 to provide easy access. APIs are documented in DBIAs 4245 and 4246.
"BLD",3860,1,30,0)
 Changes were made to existing Lab routines that update the indexes
"BLD",3860,1,31,0)
 whenever Lab data is added, edited, or deleted.
"BLD",3860,1,32,0)
  
"BLD",3860,1,33,0)
 Note: This patch is informational; the build (LR*5.2*295) will be
"BLD",3860,1,34,0)
 distributed as part of a multi-package build,
"BLD",3860,1,35,0)
 CLINICAL_REMINDERS_INDEX.KID.
"BLD",3860,1,36,0)
  
"BLD",3860,1,37,0)
  Blood Bank Clearance:
"BLD",3860,1,38,0)
  =====================
"BLD",3860,1,39,0)
  
"BLD",3860,1,40,0)
 EFFECT ON BLOOD BANK FUNCTIONAL REQUIREMENTS: Patch LR*5.2*295 does not 
"BLD",3860,1,41,0)
 contain any changes to the VISTA BLOOD BANK Software as defined by VHA 
"BLD",3860,1,42,0)
 DIRECTIVE 99-053 titled VISTA BLOOD BANK SOFTWARE VERSION 5.2.
"BLD",3860,1,43,0)
  
"BLD",3860,1,44,0)
 EFFECT ON BLOOD BANK FUNCTIONAL REQUIREMENTS: Patch LR*5.2*295 does not 
"BLD",3860,1,45,0)
 alter or modify any software design safeguards or safety critical 
"BLD",3860,1,46,0)
 elements functions.
"BLD",3860,1,47,0)
  
"BLD",3860,1,48,0)
 RISK ANALYSIS: Changes made by patch LR*5.2*295 have no effect on 
"BLD",3860,1,49,0)
 Blood Bank software functionality, therefore RISK is none.
"BLD",3860,1,50,0)
  
"BLD",3860,1,51,0)
 VALIDATION REQUIREMENTS BY OPTION:  Because of the nature of the 
"BLD",3860,1,52,0)
 changes made, no specific validation requirements exist as a result of 
"BLD",3860,1,53,0)
 installation of this patch.
"BLD",3860,1,54,0)
  
"BLD",3860,1,55,0)
  Documentation:
"BLD",3860,1,56,0)
  ==============
"BLD",3860,1,57,0)
 An installation guide, PXRMIG-P12.PDF, and a technical manual,
"BLD",3860,1,58,0)
 PXRMTM-P12.PDF, are available. This documentation will be in the form
"BLD",3860,1,59,0)
 of Adobe Acrobat files. The documentation can also be found on the
"BLD",3860,1,60,0)
 Health System Design and Development Web page: (http://vista.med.va.gov/vdl/).
"BLD",3860,1,61,0)
  
"BLD",3860,1,62,0)
 The preferred method is to FTP the files from download.vista.med.va.gov.
"BLD",3860,1,63,0)
 This transmits the files from the first available FTP server. Sites
"BLD",3860,1,64,0)
 may also elect to retrieve documents directly from a specific server as
"BLD",3860,1,65,0)
 follows:
"BLD",3860,1,66,0)
  
"BLD",3860,1,67,0)
 Albany          ftp.fo-albany.med.va.gov  <ftp://ftp.fo-albany.med.va.gov>
"BLD",3860,1,68,0)
 Hines           ftp.fo-hines.med.va.gov   <ftp://ftp.fo-hines.med.va.gov>
"BLD",3860,1,69,0)
 Salt Lake City  ftp.fo-slc.med.va.gov     <ftp://ftp.fo-slc.med.va.gov>
"BLD",3860,1,70,0)
  
"BLD",3860,1,71,0)
  Test Sites:
"BLD",3860,1,72,0)
  ===========
"BLD",3860,1,73,0)
  Anchorage
"BLD",3860,1,74,0)
  Augusta
"BLD",3860,1,75,0)
  Birmingham
"BLD",3860,1,76,0)
  Bronx
"BLD",3860,1,77,0)
  Chicago
"BLD",3860,1,78,0)
  Dayton
"BLD",3860,1,79,0)
  Loma Linda
"BLD",3860,1,80,0)
  Martinez
"BLD",3860,1,81,0)
  Montana
"BLD",3860,1,82,0)
  Puget Sound
"BLD",3860,1,83,0)
  Salt Lake City
"BLD",3860,1,84,0)
  San Francisco
"BLD",3860,1,85,0)
  Tampa
"BLD",3860,1,86,0)
  Washington DC
"BLD",3860,1,87,0)
  White River Junction
"BLD",3860,1,88,0)
  
"BLD",3860,1,89,0)
  Routine Summary:
"BLD",3860,1,90,0)
  ===============
"BLD",3860,1,91,0)
  The following is a list of the routines included in this patch. The 
"BLD",3860,1,92,0)
  second line of each routine looks like:
"BLD",3860,1,93,0)
  
"BLD",3860,1,94,0)
 <tab>;;5.2;LAB SERVICE;**[patch list]**;Sep 27, 1994
"BLD",3860,1,95,0)
  
"BLD",3860,1,96,0)
                          CHECK^XTSUMBLD results
"BLD",3860,1,97,0)
   Name          Before Patch       After Patch       Patch List
"BLD",3860,1,98,0)
   ----------------------------------------------------------------
"BLD",3860,1,99,0)
  
"BLD",3860,1,100,0)
   LRAPDA         8740574            11974055         72,73,91,121,248.259,295
"BLD",3860,1,101,0)
   LRAPDSR        3990550             4820936         248.259,295
"BLD",3860,1,102,0)
   LRLOG           n/a                 305911         295
"BLD",3860,1,103,0)
   LRMIEDZ        5380499             5420375         295
"BLD",3860,1,104,0)
   LRMIEDZ2      12271075            12684281         23,104,242,295
"BLD",3860,1,105,0)
   LRMINEW1       5165056             5204932         295
"BLD",3860,1,106,0)
   LRMISTF1      13608455            13918017         121,128,202,263,264,295
"BLD",3860,1,107,0)
   LRMIV          5001526             5041402         295
"BLD",3860,1,108,0)
   LRMIV1        12023776            12570260         295
"BLD",3860,1,109,0)
   LRMIV2        15031478            15300044         242,295
"BLD",3860,1,110,0)
   LRMIVER1       9809595             9849471         295
"BLD",3860,1,111,0)
   LROC           9187454             9241387         121,295
"BLD",3860,1,112,0)
   LRPX            n/a                1901323         295
"BLD",3860,1,113,0)
   LRPXAPI         n/a                6978402         295
"BLD",3860,1,114,0)
   LRPXAPI1        n/a                9229397         295
"BLD",3860,1,115,0)
   LRPXAPI2        n/a                9408086         295
"BLD",3860,1,116,0)
   LRPXAPI3        n/a               10777199         295
"BLD",3860,1,117,0)
   LRPXAPI4        n/a                9871300         295
"BLD",3860,1,118,0)
   LRPXAPI5        n/a                7476080         295
"BLD",3860,1,119,0)
   LRPXAPI6        n/a                2460984         295
"BLD",3860,1,120,0)
   LRPXAPIU        n/a                3414289         295
"BLD",3860,1,121,0)
   LRPXAPP         n/a                6489777         295
"BLD",3860,1,122,0)
   LRPXAPPU        n/a                3123020         295
"BLD",3860,1,123,0)
   LRPXCHK         n/a                8866448         295
"BLD",3860,1,124,0)
   LRPXCHKA        n/a                7391720         295
"BLD",3860,1,125,0)
   LRPXCHKM        n/a                3210671         295
"BLD",3860,1,126,0)
   LRPXRM          n/a                9609565         295
"BLD",3860,1,127,0)
   LRPXSXRA        n/a                8089677         295
"BLD",3860,1,128,0)
   LRPXSXRB        n/a                5387076         295
"BLD",3860,1,129,0)
   LRPXSXRL        n/a                4335783         295
"BLD",3860,1,130,0)
   LRVER3A       10313641            10338465         1,5,42,100,121,153,190,
"BLD",3860,1,131,0)
                                                      221,254,263,266,274,295
"BLD",3860,1,132,0)
  
"BLD",3860,1,133,0)
  Host File:
"BLD",3860,1,134,0)
  ==========
"BLD",3860,1,135,0)
  Because this is part of a multi-package build this patch will be available
"BLD",3860,1,136,0)
  only as a host file. The name of the file is
"BLD",3860,1,137,0)
  CLINICAL_REMINDERS_INDEX.KID.
"BLD",3860,1,138,0)
  
"BLD",3860,1,139,0)
 Sites will retrieve VistA software from the following FTP addresses.  The
"BLD",3860,1,140,0)
 preferred method is to FTP the files from download.vista.med.va.gov.  This
"BLD",3860,1,141,0)
 transmits the files from the first available FTP server. Sites may also
"BLD",3860,1,142,0)
 elect to retrieve software directly from a specific server as follows:
"BLD",3860,1,143,0)
  
"BLD",3860,1,144,0)
 Albany          ftp.fo-albany.med.va.gov  <ftp://ftp.fo-albany.med.va.gov>
"BLD",3860,1,145,0)
 Hines           ftp.fo-hines.med.va.gov   <ftp://ftp.fo-hines.med.va.gov>
"BLD",3860,1,146,0)
 Salt Lake City  ftp.fo-slc.med.va.gov     <ftp://ftp.fo-slc.med.va.gov>
"BLD",3860,1,147,0)
  
"BLD",3860,1,148,0)
  
"BLD",3860,1,149,0)
 Installation:
"BLD",3860,1,150,0)
 =============
"BLD",3860,1,151,0)
 1. Detailed installation instructions may be found in the Installation
"BLD",3860,1,152,0)
 Guide, PXRMIG-P12.PDF.
"BLD",3860,1,153,0)
  
"BLD",3860,1,154,0)
 2. After successful installation, the init routine GMPLP27I may be
"BLD",3860,1,155,0)
 deleted.
"BLD",3860,1,156,0)
 
"BLD",3860,4,0)
^9.64PA^^0
"BLD",3860,"ABPKG")
n
"BLD",3860,"KRN",0)
^9.67PA^8989.52^19
"BLD",3860,"KRN",.4,0)
.4
"BLD",3860,"KRN",.401,0)
.401
"BLD",3860,"KRN",.402,0)
.402
"BLD",3860,"KRN",.403,0)
.403
"BLD",3860,"KRN",.5,0)
.5
"BLD",3860,"KRN",.84,0)
.84
"BLD",3860,"KRN",3.6,0)
3.6
"BLD",3860,"KRN",3.8,0)
3.8
"BLD",3860,"KRN",9.2,0)
9.2
"BLD",3860,"KRN",9.8,0)
9.8
"BLD",3860,"KRN",9.8,"NM",0)
^9.68A^42^35
"BLD",3860,"KRN",9.8,"NM",1,0)
LRPXAPI^^0^B23502596
"BLD",3860,"KRN",9.8,"NM",2,0)
LRPXAPI1^^0^B56920134
"BLD",3860,"KRN",9.8,"NM",3,0)
LRMIVER1^^0^B14179737
"BLD",3860,"KRN",9.8,"NM",4,0)
LRPXAPIU^^0^B26516082
"BLD",3860,"KRN",9.8,"NM",5,0)
LRPXAPP^^0^B33083141
"BLD",3860,"KRN",9.8,"NM",6,0)
LRVER3A^^0^B23874235
"BLD",3860,"KRN",9.8,"NM",8,0)
LRPXAPI3^^0^B67220441
"BLD",3860,"KRN",9.8,"NM",9,0)
LRPXAPI4^^0^B63520375
"BLD",3860,"KRN",9.8,"NM",13,0)
LRPXAPI5^^0^B40868770
"BLD",3860,"KRN",9.8,"NM",14,0)
LRPXAPPU^^0^B16358617
"BLD",3860,"KRN",9.8,"NM",15,0)
LRPXAPI6^^0^B9438536
"BLD",3860,"KRN",9.8,"NM",16,0)
LRPXRM^^0^B67256767
"BLD",3860,"KRN",9.8,"NM",18,0)
LRMISTF1^^0^B23532108
"BLD",3860,"KRN",9.8,"NM",19,0)
LRMIEDZ^^0^B6348324
"BLD",3860,"KRN",9.8,"NM",20,0)
LRMIEDZ2^^0^B18087286
"BLD",3860,"KRN",9.8,"NM",21,0)
LRAPDA^^0^B64317056
"BLD",3860,"KRN",9.8,"NM",22,0)
LRAPDSR^^0^B17788838
"BLD",3860,"KRN",9.8,"NM",23,0)
LRMIV^^0^B5934078
"BLD",3860,"KRN",9.8,"NM",24,0)
LRMIV1^^0^B17503348
"BLD",3860,"KRN",9.8,"NM",25,0)
LRMIV2^^0^B21704534
"BLD",3860,"KRN",9.8,"NM",28,0)
LRPX^^0^B5134304
"BLD",3860,"KRN",9.8,"NM",29,0)
LRPXSXRA^^0^B36350312
"BLD",3860,"KRN",9.8,"NM",30,0)
LRPXSXRB^^0^B23737905
"BLD",3860,"KRN",9.8,"NM",31,0)
LRPXSXRL^^0^B15543272
"BLD",3860,"KRN",9.8,"NM",32,0)
LROC^^0^B15121360
"BLD",3860,"KRN",9.8,"NM",33,0)
LRLOG^^0^B3754794
"BLD",3860,"KRN",9.8,"NM",34,0)
LRPXCHK^^0^B64203634
"BLD",3860,"KRN",9.8,"NM",35,0)
LRPXCHKM^^0^B7352182
"BLD",3860,"KRN",9.8,"NM",36,0)
LRPXCHKA^^0^B23723707
"BLD",3860,"KRN",9.8,"NM",37,0)
LRMINEW1^^0^B6425071
"BLD",3860,"KRN",9.8,"NM",38,0)
LRMIVER1^^0^B14179737
"BLD",3860,"KRN",9.8,"NM",39,0)
LRPXAPI2^^0^B78388700
"BLD",3860,"KRN",9.8,"NM",40,0)
LRAPM^^0^B22087381
"BLD",3860,"KRN",9.8,"NM",41,0)
LRAPMRL^^0^B66524711
"BLD",3860,"KRN",9.8,"NM",42,0)
LRAPRES^^0^B103360947
"BLD",3860,"KRN",9.8,"NM","B","LRAPDA",21)

"BLD",3860,"KRN",9.8,"NM","B","LRAPDSR",22)

"BLD",3860,"KRN",9.8,"NM","B","LRAPM",40)

"BLD",3860,"KRN",9.8,"NM","B","LRAPMRL",41)

"BLD",3860,"KRN",9.8,"NM","B","LRAPRES",42)

"BLD",3860,"KRN",9.8,"NM","B","LRLOG",33)

"BLD",3860,"KRN",9.8,"NM","B","LRMIEDZ",19)

"BLD",3860,"KRN",9.8,"NM","B","LRMIEDZ2",20)

"BLD",3860,"KRN",9.8,"NM","B","LRMINEW1",37)

"BLD",3860,"KRN",9.8,"NM","B","LRMISTF1",18)

"BLD",3860,"KRN",9.8,"NM","B","LRMIV",23)

"BLD",3860,"KRN",9.8,"NM","B","LRMIV1",24)

"BLD",3860,"KRN",9.8,"NM","B","LRMIV2",25)

"BLD",3860,"KRN",9.8,"NM","B","LRMIVER1",3)

"BLD",3860,"KRN",9.8,"NM","B","LRMIVER1",38)

"BLD",3860,"KRN",9.8,"NM","B","LROC",32)

"BLD",3860,"KRN",9.8,"NM","B","LRPX",28)

"BLD",3860,"KRN",9.8,"NM","B","LRPXAPI",1)

"BLD",3860,"KRN",9.8,"NM","B","LRPXAPI1",2)

"BLD",3860,"KRN",9.8,"NM","B","LRPXAPI2",39)

"BLD",3860,"KRN",9.8,"NM","B","LRPXAPI3",8)

"BLD",3860,"KRN",9.8,"NM","B","LRPXAPI4",9)

"BLD",3860,"KRN",9.8,"NM","B","LRPXAPI5",13)

"BLD",3860,"KRN",9.8,"NM","B","LRPXAPI6",15)

"BLD",3860,"KRN",9.8,"NM","B","LRPXAPIU",4)

"BLD",3860,"KRN",9.8,"NM","B","LRPXAPP",5)

"BLD",3860,"KRN",9.8,"NM","B","LRPXAPPU",14)

"BLD",3860,"KRN",9.8,"NM","B","LRPXCHK",34)

"BLD",3860,"KRN",9.8,"NM","B","LRPXCHKA",36)

"BLD",3860,"KRN",9.8,"NM","B","LRPXCHKM",35)

"BLD",3860,"KRN",9.8,"NM","B","LRPXRM",16)

"BLD",3860,"KRN",9.8,"NM","B","LRPXSXRA",29)

"BLD",3860,"KRN",9.8,"NM","B","LRPXSXRB",30)

"BLD",3860,"KRN",9.8,"NM","B","LRPXSXRL",31)

"BLD",3860,"KRN",9.8,"NM","B","LRVER3A",6)

"BLD",3860,"KRN",19,0)
19
"BLD",3860,"KRN",19,"NM",0)
^9.68A^^
"BLD",3860,"KRN",19.1,0)
19.1
"BLD",3860,"KRN",101,0)
101
"BLD",3860,"KRN",409.61,0)
409.61
"BLD",3860,"KRN",771,0)
771
"BLD",3860,"KRN",870,0)
870
"BLD",3860,"KRN",8989.51,0)
8989.51
"BLD",3860,"KRN",8989.52,0)
8989.52
"BLD",3860,"KRN",8994,0)
8994
"BLD",3860,"KRN","B",.4,.4)

"BLD",3860,"KRN","B",.401,.401)

"BLD",3860,"KRN","B",.402,.402)

"BLD",3860,"KRN","B",.403,.403)

"BLD",3860,"KRN","B",.5,.5)

"BLD",3860,"KRN","B",.84,.84)

"BLD",3860,"KRN","B",3.6,3.6)

"BLD",3860,"KRN","B",3.8,3.8)

"BLD",3860,"KRN","B",9.2,9.2)

"BLD",3860,"KRN","B",9.8,9.8)

"BLD",3860,"KRN","B",19,19)

"BLD",3860,"KRN","B",19.1,19.1)

"BLD",3860,"KRN","B",101,101)

"BLD",3860,"KRN","B",409.61,409.61)

"BLD",3860,"KRN","B",771,771)

"BLD",3860,"KRN","B",870,870)

"BLD",3860,"KRN","B",8989.51,8989.51)

"BLD",3860,"KRN","B",8989.52,8989.52)

"BLD",3860,"KRN","B",8994,8994)

"BLD",3860,"QUES",0)
^9.62^^
"BLD",3860,"REQB",0)
^9.611^1^1
"BLD",3860,"REQB",1,0)
LR*5.2*259^1
"BLD",3860,"REQB","B","LR*5.2*259",1)

"MBREQ")
0
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2950118
"PKG",26,22,1,"PAH",1,0)
295^3041026
"PKG",26,22,1,"PAH",1,1,0)
^^156^156^3041026
"PKG",26,22,1,"PAH",1,1,1,0)
  
"PKG",26,22,1,"PAH",1,1,2,0)
 This project consists of 12 patches that work together to create a new
"PKG",26,22,1,"PAH",1,1,3,0)
 Clinical Reminders index global. The purpose of this index is to provide
"PKG",26,22,1,"PAH",1,1,4,0)
 rapid access to clinical data. All of the standard Clinical Reminders
"PKG",26,22,1,"PAH",1,1,5,0)
 finding types are included in the index.
"PKG",26,22,1,"PAH",1,1,6,0)
  
"PKG",26,22,1,"PAH",1,1,7,0)
 The 12 patches that comprise this project are:
"PKG",26,22,1,"PAH",1,1,8,0)
  
"PKG",26,22,1,"PAH",1,1,9,0)
   Package                                 Patch
"PKG",26,22,1,"PAH",1,1,10,0)
   -------                                 -----
"PKG",26,22,1,"PAH",1,1,11,0)
   Clinical Reminders                      PXRM*1.5*12
"PKG",26,22,1,"PAH",1,1,12,0)
   Inpatient Pharmacy                      PSJ*5*90
"PKG",26,22,1,"PAH",1,1,13,0)
   Laboratory                              LR*5.2*295
"PKG",26,22,1,"PAH",1,1,14,0)
   Mental Health                           YS*5.01*77
"PKG",26,22,1,"PAH",1,1,15,0)
   Order Entry/Results Reporting (OE/RR)   OR*3*157
"PKG",26,22,1,"PAH",1,1,16,0)
   Outpatient Pharmacy                     PSO*7*118
"PKG",26,22,1,"PAH",1,1,17,0)
   Patient Care Encounter (PCE)            PX*1.0*119
"PKG",26,22,1,"PAH",1,1,18,0)
   Pharmacy Data Management                PSS*1*62
"PKG",26,22,1,"PAH",1,1,19,0)
   PIMS/Scheduling                         DG*5.3*478
"PKG",26,22,1,"PAH",1,1,20,0)
   Problem List                            GMPL*2*27
"PKG",26,22,1,"PAH",1,1,21,0)
   Radiology                               RA*5*33
"PKG",26,22,1,"PAH",1,1,22,0)
   Vitals                                  GMRV*4*15
"PKG",26,22,1,"PAH",1,1,23,0)
  
"PKG",26,22,1,"PAH",1,1,24,0)
 This patch (LR*5.2*295) provides the description of the Lab
"PKG",26,22,1,"PAH",1,1,25,0)
 routines, but not the Lab routines themselves, which must be loaded
"PKG",26,22,1,"PAH",1,1,26,0)
 from the main multi-build host file. PXRM*1.5*12 distributes these Lab
"PKG",26,22,1,"PAH",1,1,27,0)
 routines. This patch provides a new global ^PXRMINDX where Lab data
"PKG",26,22,1,"PAH",1,1,28,0)
 are indexed in ^PXRMINDX(63, for fast retrieval. Lab APIs are provided
"PKG",26,22,1,"PAH",1,1,29,0)
 to provide easy access. APIs are documented in DBIAs 4245 and 4246.
"PKG",26,22,1,"PAH",1,1,30,0)
 Changes were made to existing Lab routines that update the indexes
"PKG",26,22,1,"PAH",1,1,31,0)
 whenever Lab data is added, edited, or deleted.
"PKG",26,22,1,"PAH",1,1,32,0)
  
"PKG",26,22,1,"PAH",1,1,33,0)
 Note: This patch is informational; the build (LR*5.2*295) will be
"PKG",26,22,1,"PAH",1,1,34,0)
 distributed as part of a multi-package build,
"PKG",26,22,1,"PAH",1,1,35,0)
 CLINICAL_REMINDERS_INDEX.KID.
"PKG",26,22,1,"PAH",1,1,36,0)
  
"PKG",26,22,1,"PAH",1,1,37,0)
  Blood Bank Clearance:
"PKG",26,22,1,"PAH",1,1,38,0)
  =====================
"PKG",26,22,1,"PAH",1,1,39,0)
  
"PKG",26,22,1,"PAH",1,1,40,0)
 EFFECT ON BLOOD BANK FUNCTIONAL REQUIREMENTS: Patch LR*5.2*295 does not 
"PKG",26,22,1,"PAH",1,1,41,0)
 contain any changes to the VISTA BLOOD BANK Software as defined by VHA 
"PKG",26,22,1,"PAH",1,1,42,0)
 DIRECTIVE 99-053 titled VISTA BLOOD BANK SOFTWARE VERSION 5.2.
"PKG",26,22,1,"PAH",1,1,43,0)
  
"PKG",26,22,1,"PAH",1,1,44,0)
 EFFECT ON BLOOD BANK FUNCTIONAL REQUIREMENTS: Patch LR*5.2*295 does not 
"PKG",26,22,1,"PAH",1,1,45,0)
 alter or modify any software design safeguards or safety critical 
"PKG",26,22,1,"PAH",1,1,46,0)
 elements functions.
"PKG",26,22,1,"PAH",1,1,47,0)
  
"PKG",26,22,1,"PAH",1,1,48,0)
 RISK ANALYSIS: Changes made by patch LR*5.2*295 have no effect on 
"PKG",26,22,1,"PAH",1,1,49,0)
 Blood Bank software functionality, therefore RISK is none.
"PKG",26,22,1,"PAH",1,1,50,0)
  
"PKG",26,22,1,"PAH",1,1,51,0)
 VALIDATION REQUIREMENTS BY OPTION:  Because of the nature of the 
"PKG",26,22,1,"PAH",1,1,52,0)
 changes made, no specific validation requirements exist as a result of 
"PKG",26,22,1,"PAH",1,1,53,0)
 installation of this patch.
"PKG",26,22,1,"PAH",1,1,54,0)
  
"PKG",26,22,1,"PAH",1,1,55,0)
  Documentation:
"PKG",26,22,1,"PAH",1,1,56,0)
  ==============
"PKG",26,22,1,"PAH",1,1,57,0)
 An installation guide, PXRMIG-P12.PDF, and a technical manual,
"PKG",26,22,1,"PAH",1,1,58,0)
 PXRMTM-P12.PDF, are available. This documentation will be in the form
"PKG",26,22,1,"PAH",1,1,59,0)
 of Adobe Acrobat files. The documentation can also be found on the
"PKG",26,22,1,"PAH",1,1,60,0)
 Health System Design and Development Web page: (http://vista.med.va.gov/vdl/).
"PKG",26,22,1,"PAH",1,1,61,0)
  
"PKG",26,22,1,"PAH",1,1,62,0)
 The preferred method is to FTP the files from download.vista.med.va.gov.
"PKG",26,22,1,"PAH",1,1,63,0)
 This transmits the files from the first available FTP server. Sites
"PKG",26,22,1,"PAH",1,1,64,0)
 may also elect to retrieve documents directly from a specific server as
"PKG",26,22,1,"PAH",1,1,65,0)
 follows:
"PKG",26,22,1,"PAH",1,1,66,0)
  
"PKG",26,22,1,"PAH",1,1,67,0)
 Albany          ftp.fo-albany.med.va.gov  <ftp://ftp.fo-albany.med.va.gov>
"PKG",26,22,1,"PAH",1,1,68,0)
 Hines           ftp.fo-hines.med.va.gov   <ftp://ftp.fo-hines.med.va.gov>
"PKG",26,22,1,"PAH",1,1,69,0)
 Salt Lake City  ftp.fo-slc.med.va.gov     <ftp://ftp.fo-slc.med.va.gov>
"PKG",26,22,1,"PAH",1,1,70,0)
  
"PKG",26,22,1,"PAH",1,1,71,0)
  Test Sites:
"PKG",26,22,1,"PAH",1,1,72,0)
  ===========
"PKG",26,22,1,"PAH",1,1,73,0)
  Anchorage
"PKG",26,22,1,"PAH",1,1,74,0)
  Augusta
"PKG",26,22,1,"PAH",1,1,75,0)
  Birmingham
"PKG",26,22,1,"PAH",1,1,76,0)
  Bronx
"PKG",26,22,1,"PAH",1,1,77,0)
  Chicago
"PKG",26,22,1,"PAH",1,1,78,0)
  Dayton
"PKG",26,22,1,"PAH",1,1,79,0)
  Loma Linda
"PKG",26,22,1,"PAH",1,1,80,0)
  Martinez
"PKG",26,22,1,"PAH",1,1,81,0)
  Montana
"PKG",26,22,1,"PAH",1,1,82,0)
  Puget Sound
"PKG",26,22,1,"PAH",1,1,83,0)
  Salt Lake City
"PKG",26,22,1,"PAH",1,1,84,0)
  San Francisco
"PKG",26,22,1,"PAH",1,1,85,0)
  Tampa
"PKG",26,22,1,"PAH",1,1,86,0)
  Washington DC
"PKG",26,22,1,"PAH",1,1,87,0)
  White River Junction
"PKG",26,22,1,"PAH",1,1,88,0)
  
"PKG",26,22,1,"PAH",1,1,89,0)
  Routine Summary:
"PKG",26,22,1,"PAH",1,1,90,0)
  ===============
"PKG",26,22,1,"PAH",1,1,91,0)
  The following is a list of the routines included in this patch. The 
"PKG",26,22,1,"PAH",1,1,92,0)
  second line of each routine looks like:
"PKG",26,22,1,"PAH",1,1,93,0)
  
"PKG",26,22,1,"PAH",1,1,94,0)
 <tab>;;5.2;LAB SERVICE;**[patch list]**;Sep 27, 1994
"PKG",26,22,1,"PAH",1,1,95,0)
  
"PKG",26,22,1,"PAH",1,1,96,0)
                          CHECK^XTSUMBLD results
"PKG",26,22,1,"PAH",1,1,97,0)
   Name          Before Patch       After Patch       Patch List
"PKG",26,22,1,"PAH",1,1,98,0)
   ----------------------------------------------------------------
"PKG",26,22,1,"PAH",1,1,99,0)
  
"PKG",26,22,1,"PAH",1,1,100,0)
   LRAPDA         8740574            11974055         72,73,91,121,248.259,295
"PKG",26,22,1,"PAH",1,1,101,0)
   LRAPDSR        3990550             4820936         248.259,295
"PKG",26,22,1,"PAH",1,1,102,0)
   LRLOG           n/a                 305911         295
"PKG",26,22,1,"PAH",1,1,103,0)
   LRMIEDZ        5380499             5420375         295
"PKG",26,22,1,"PAH",1,1,104,0)
   LRMIEDZ2      12271075            12684281         23,104,242,295
"PKG",26,22,1,"PAH",1,1,105,0)
   LRMINEW1       5165056             5204932         295
"PKG",26,22,1,"PAH",1,1,106,0)
   LRMISTF1      13608455            13918017         121,128,202,263,264,295
"PKG",26,22,1,"PAH",1,1,107,0)
   LRMIV          5001526             5041402         295
"PKG",26,22,1,"PAH",1,1,108,0)
   LRMIV1        12023776            12570260         295
"PKG",26,22,1,"PAH",1,1,109,0)
   LRMIV2        15031478            15300044         242,295
"PKG",26,22,1,"PAH",1,1,110,0)
   LRMIVER1       9809595             9849471         295
"PKG",26,22,1,"PAH",1,1,111,0)
   LROC           9187454             9241387         121,295
"PKG",26,22,1,"PAH",1,1,112,0)
   LRPX            n/a                1901323         295
"PKG",26,22,1,"PAH",1,1,113,0)
   LRPXAPI         n/a                6978402         295
"PKG",26,22,1,"PAH",1,1,114,0)
   LRPXAPI1        n/a                9229397         295
"PKG",26,22,1,"PAH",1,1,115,0)
   LRPXAPI2        n/a                9408086         295
"PKG",26,22,1,"PAH",1,1,116,0)
   LRPXAPI3        n/a               10777199         295
"PKG",26,22,1,"PAH",1,1,117,0)
   LRPXAPI4        n/a                9871300         295
"PKG",26,22,1,"PAH",1,1,118,0)
   LRPXAPI5        n/a                7476080         295
"PKG",26,22,1,"PAH",1,1,119,0)
   LRPXAPI6        n/a                2460984         295
"PKG",26,22,1,"PAH",1,1,120,0)
   LRPXAPIU        n/a                3414289         295
"PKG",26,22,1,"PAH",1,1,121,0)
   LRPXAPP         n/a                6489777         295
"PKG",26,22,1,"PAH",1,1,122,0)
   LRPXAPPU        n/a                3123020         295
"PKG",26,22,1,"PAH",1,1,123,0)
   LRPXCHK         n/a                8866448         295
"PKG",26,22,1,"PAH",1,1,124,0)
   LRPXCHKA        n/a                7391720         295
"PKG",26,22,1,"PAH",1,1,125,0)
   LRPXCHKM        n/a                3210671         295
"PKG",26,22,1,"PAH",1,1,126,0)
   LRPXRM          n/a                9609565         295
"PKG",26,22,1,"PAH",1,1,127,0)
   LRPXSXRA        n/a                8089677         295
"PKG",26,22,1,"PAH",1,1,128,0)
   LRPXSXRB        n/a                5387076         295
"PKG",26,22,1,"PAH",1,1,129,0)
   LRPXSXRL        n/a                4335783         295
"PKG",26,22,1,"PAH",1,1,130,0)
   LRVER3A       10313641            10338465         1,5,42,100,121,153,190,
"PKG",26,22,1,"PAH",1,1,131,0)
                                                      221,254,263,266,274,295
"PKG",26,22,1,"PAH",1,1,132,0)
  
"PKG",26,22,1,"PAH",1,1,133,0)
  Host File:
"PKG",26,22,1,"PAH",1,1,134,0)
  ==========
"PKG",26,22,1,"PAH",1,1,135,0)
  Because this is part of a multi-package build this patch will be available
"PKG",26,22,1,"PAH",1,1,136,0)
  only as a host file. The name of the file is
"PKG",26,22,1,"PAH",1,1,137,0)
  CLINICAL_REMINDERS_INDEX.KID.
"PKG",26,22,1,"PAH",1,1,138,0)
  
"PKG",26,22,1,"PAH",1,1,139,0)
 Sites will retrieve VistA software from the following FTP addresses.  The
"PKG",26,22,1,"PAH",1,1,140,0)
 preferred method is to FTP the files from download.vista.med.va.gov.  This
"PKG",26,22,1,"PAH",1,1,141,0)
 transmits the files from the first available FTP server. Sites may also
"PKG",26,22,1,"PAH",1,1,142,0)
 elect to retrieve software directly from a specific server as follows:
"PKG",26,22,1,"PAH",1,1,143,0)
  
"PKG",26,22,1,"PAH",1,1,144,0)
 Albany          ftp.fo-albany.med.va.gov  <ftp://ftp.fo-albany.med.va.gov>
"PKG",26,22,1,"PAH",1,1,145,0)
 Hines           ftp.fo-hines.med.va.gov   <ftp://ftp.fo-hines.med.va.gov>
"PKG",26,22,1,"PAH",1,1,146,0)
 Salt Lake City  ftp.fo-slc.med.va.gov     <ftp://ftp.fo-slc.med.va.gov>
"PKG",26,22,1,"PAH",1,1,147,0)
  
"PKG",26,22,1,"PAH",1,1,148,0)
  
"PKG",26,22,1,"PAH",1,1,149,0)
 Installation:
"PKG",26,22,1,"PAH",1,1,150,0)
 =============
"PKG",26,22,1,"PAH",1,1,151,0)
 1. Detailed installation instructions may be found in the Installation
"PKG",26,22,1,"PAH",1,1,152,0)
 Guide, PXRMIG-P12.PDF.
"PKG",26,22,1,"PAH",1,1,153,0)
  
"PKG",26,22,1,"PAH",1,1,154,0)
 2. After successful installation, the init routine GMPLP27I may be
"PKG",26,22,1,"PAH",1,1,155,0)
 deleted.
"PKG",26,22,1,"PAH",1,1,156,0)
 
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
34
"RTN","LRAPDA")
0^21^B64317056
"RTN","LRAPDA",1,0)
LRAPDA ;AVAMC/REG/WTY/KLL - ANATOMIC PATH DATA ENTRY;11/02/01 ;10/21/04  08:38
"RTN","LRAPDA",2,0)
 ;;5.2;LAB SERVICE;**72,73,91,121,248,259,295**;Sep 27, 1994
"RTN","LRAPDA",3,0)
 ;
"RTN","LRAPDA",4,0)
 ;Reference to ^%DT supported by IA #10003
"RTN","LRAPDA",5,0)
 ;Reference to ^DIE supported by IA #10018
"RTN","LRAPDA",6,0)
 ;Reference to ^VA(200 supported by IA #10060
"RTN","LRAPDA",7,0)
 ;Reference to EN^DDIOL supported by IA #10142
"RTN","LRAPDA",8,0)
 ;
"RTN","LRAPDA",9,0)
 W !?20,LRO(68)," (",LRABV,")",!
"RTN","LRAPDA",10,0)
 S:'$D(LRSOP) LRSOP=1 S:'$D(LRD(1)) LRD(1)="0"
"RTN","LRAPDA",11,0)
 S:'$D(^LRO(69.2,LRAA,2,0)) ^(0)="^69.23A^0^0"
"RTN","LRAPDA",12,0)
SEL K LR(1)
"RTN","LRAPDA",13,0)
 I $D(LR(2)) D  G:%<1 END S:%=1 LR(1)=1
"RTN","LRAPDA",14,0)
 .W !!,"Enter Etiology, Function, Procedure & Disease "
"RTN","LRAPDA",15,0)
 .S %=2 D YN^LRU
"RTN","LRAPDA",16,0)
AK ;from LRAPD1
"RTN","LRAPDA",17,0)
 N CORRECT
"RTN","LRAPDA",18,0)
 S:'$D(LRSFLG) LRSFLG=""
"RTN","LRAPDA",19,0)
 W !!,"Data entry for ",LRH(0)," "
"RTN","LRAPDA",20,0)
 S %=1 D YN^LRU G:%<1 END
"RTN","LRAPDA",21,0)
 I %=2 D  G:Y<1 END S LRAD=$E(Y,1,3)_"0000",LRH(0)=$E(Y,1,3)+1700
"RTN","LRAPDA",22,0)
 .S %DT="AE",%DT(0)="-N",%DT("A")="Enter YEAR: " D ^%DT K %DT
"RTN","LRAPDA",23,0)
 I '$O(^LRO(68,LRAA,1,LRAD,1,0)) D  Q
"RTN","LRAPDA",24,0)
 .W $C(7),!!,"NO ",LRO(68)," ACCESSIONS IN FILE FOR ",LRH(0),!!
"RTN","LRAPDA",25,0)
W K X,Y,LR("CK")
"RTN","LRAPDA",26,0)
 R !!,"Select Accession Number/Pt name: ",LRAN:DTIME
"RTN","LRAPDA",27,0)
 G:LRAN=""!(LRAN[U) END
"RTN","LRAPDA",28,0)
 I LRAN["?" D  G W
"RTN","LRAPDA",29,0)
 .W !!,"Enter the year ",LRH(0)," ",LRO(68)," accession number to be "
"RTN","LRAPDA",30,0)
 .W "updated"
"RTN","LRAPDA",31,0)
 .W !,"or locate the accession by entering the patient name."
"RTN","LRAPDA",32,0)
 I LRAN'?1N.N D PNAME G:LRAN<1 W D OE1^LR7OB63D,DIE,OERR^LR7OB63D G W
"RTN","LRAPDA",33,0)
 D OE1^LR7OB63D,REST S:$D(DR(1))#2 DR=DR(1) D OERR^LR7OB63D G W
"RTN","LRAPDA",34,0)
REST ;
"RTN","LRAPDA",35,0)
 W "  for ",LRH(0)
"RTN","LRAPDA",36,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) D  Q
"RTN","LRAPDA",37,0)
 .W $C(7),!!,"Accession # ",LRAN," for ",LRH(0)," not in ",LRO(68),!!
"RTN","LRAPDA",38,0)
 S X=^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRLLOC=$P(X,"^",7),LRDFN=+X
"RTN","LRAPDA",39,0)
 Q:'$D(^LR(LRDFN,0))  S X=^(0) D ^LRUP
"RTN","LRAPDA",40,0)
 W !,LRP,"  ID: ",SSN
"RTN","LRAPDA",41,0)
 S LRI=+$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,3)),"^",5)
"RTN","LRAPDA",42,0)
 I LRSS'="AU",'$D(^LR(LRDFN,LRSS,LRI,0)) D  Q
"RTN","LRAPDA",43,0)
 .W $C(7),!,"Inverse date missing or incorrect in Accession Area file "
"RTN","LRAPDA",44,0)
 .W "for",!,LRO(68),"  Year: ",$E(LRAD,2,3),"  Accession: ",LRAN
"RTN","LRAPDA",45,0)
 I "SPCYEM"[LRSS,$O(^LR(LRDFN,LRSS,LRI,.1,0)) D
"RTN","LRAPDA",46,0)
 .W !,"Specimen(s):"
"RTN","LRAPDA",47,0)
 .S X=0 F  S X=$O(^LR(LRDFN,LRSS,LRI,.1,X)) Q:'X  D
"RTN","LRAPDA",48,0)
 ..W !,$P($G(^LR(LRDFN,LRSS,LRI,.1,X,0)),"^")
"RTN","LRAPDA",49,0)
DIE ;Edit
"RTN","LRAPDA",50,0)
 I LRSS="AU" D AUE Q
"RTN","LRAPDA",51,0)
 N LRRDT1,LRRDT2,LRIENS,LREL,LRQUIT,LRSNO,LRCPT,LRESCPT
"RTN","LRAPDA",52,0)
 S (LREL,LRESCPT,LRQUIT,LRSNO,LRCPT)=0,LRIENS=LRI_","_LRDFN_","
"RTN","LRAPDA",53,0)
 S LRRDT1=$$GET1^DIQ(LRSF,LRIENS,.11,"I")
"RTN","LRAPDA",54,0)
 S LRRDT2=$$GET1^DIQ(LRSF,LRIENS,.15,"I")
"RTN","LRAPDA",55,0)
 S:LRRDT1!LRRDT2 LREL=1
"RTN","LRAPDA",56,0)
 I $T(ES^LRCAPES)'="" S LRESCPT=$$ES^LRCAPES()
"RTN","LRAPDA",57,0)
 I LRSOP="G",LREL D  Q
"RTN","LRAPDA",58,0)
 .W $C(7),!!,"Report verified.  Cannot edit with this option."
"RTN","LRAPDA",59,0)
 I LRSOP'="","ABM"[LRSOP,LREL D  Q:LRQUIT
"RTN","LRAPDA",60,0)
 .;Allow SNOMED and CPT coding even after release.
"RTN","LRAPDA",61,0)
 .W $C(7),!!,"Report has been verified.  "
"RTN","LRAPDA",62,0)
 .I 'LRESCPT,LRSOP'="B" D  Q
"RTN","LRAPDA",63,0)
 ..W "Cannot edit with this option."
"RTN","LRAPDA",64,0)
 ..S LRQUIT=1
"RTN","LRAPDA",65,0)
 .W "Only "
"RTN","LRAPDA",66,0)
 .I LRESCPT W "CPT " W:LRSOP="B" "and "
"RTN","LRAPDA",67,0)
 .W:LRSOP="B" "SNOMED "
"RTN","LRAPDA",68,0)
 .W "coding permitted.",!
"RTN","LRAPDA",69,0)
 .I LRSOP="B" D
"RTN","LRAPDA",70,0)
 ..K DIR S DIR(0)="Y",DIR("A")="Enter SNOMED coding",DIR("B")="NO"
"RTN","LRAPDA",71,0)
 ..D ^DIR W !
"RTN","LRAPDA",72,0)
 ..S LRSNO=+Y
"RTN","LRAPDA",73,0)
 .Q:'LRESCPT
"RTN","LRAPDA",74,0)
 .K DIR S DIR(0)="Y",DIR("A")="Enter CPT coding",DIR("B")="NO"
"RTN","LRAPDA",75,0)
 .D ^DIR W !
"RTN","LRAPDA",76,0)
 .S LRCPT=+Y
"RTN","LRAPDA",77,0)
 .I "AM"[LRSOP,'LRCPT S LRQUIT=1 Q
"RTN","LRAPDA",78,0)
 .I LRSOP="B",'LRCPT,'LRSNO S LRQUIT=1
"RTN","LRAPDA",79,0)
RESET ;Reset DR string if altered by prior accession/patient
"RTN","LRAPDA",80,0)
 ;Reset DR to orig value in LRAPD1
"RTN","LRAPDA",81,0)
 I LRSOP'="","AMB"[LRSOP,$G(LRD)'="" D @LRD
"RTN","LRAPDA",82,0)
 S:LRSNO DR=10    ;Modify DR string if only SNOMED coding permitted
"RTN","LRAPDA",83,0)
 I 'LRSNO,LRCPT S DR=""  ;Set DR string to null in only CPT coding
"RTN","LRAPDA",84,0)
EDIT ;Call to ^DIE
"RTN","LRAPDA",85,0)
 W ! S LRA=^LR(LRDFN,LRSS,LRI,0),LRRC=$P(LRA,"^",10)
"RTN","LRAPDA",86,0)
 I LRCAPA,"SPCYEM"[LRSS D C^LRAPSWK
"RTN","LRAPDA",87,0)
 S DIE="^LR(LRDFN,LRSS,",DA=LRI,DA(1)=LRDFN
"RTN","LRAPDA",88,0)
 D CK^LRU Q:$D(LR("CK"))
"RTN","LRAPDA",89,0)
 I LRSS="SP",LRSOP="B",$O(^LR(LRDFN,LRSS,LRI,1.3,0)) D
"RTN","LRAPDA",90,0)
 .W $C(7),!!,"This accession has a FROZEN SECTION report."
"RTN","LRAPDA",91,0)
 .W !,"Be sure 'FROZEN SECTION' is entered as a SNOMED code in the "
"RTN","LRAPDA",92,0)
 .W "PROCEDURE field"
"RTN","LRAPDA",93,0)
 .W !,"for the appropriate organ or tissue.",!!
"RTN","LRAPDA",94,0)
 D ^DIE
"RTN","LRAPDA",95,0)
 D UPDATE^LRPXRM(LRDFN,LRSS,LRI)
"RTN","LRAPDA",96,0)
 D:LRSFLG="S"&('$D(Y)) ^LRAPDSR
"RTN","LRAPDA",97,0)
 D FRE^LRU
"RTN","LRAPDA",98,0)
 I LRSOP'="","ABM"[LRSOP D CPTCOD
"RTN","LRAPDA",99,0)
WKLD ;Capture Workload
"RTN","LRAPDA",100,0)
 I LRSOP="Z","CYSP"[LRSS,LRCAPA D S^LRAPR Q
"RTN","LRAPDA",101,0)
 I LRCAPA,"SPCYEM"[LRSS,LRD(1)'="","MBA"[LRD(1) D C1^LRAPSWK
"RTN","LRAPDA",102,0)
 I LRCAPA,"SPCYEM"[LRSS,LRSOP="G" D C1^LRAPSWK
"RTN","LRAPDA",103,0)
QUEUES ;Update Queues
"RTN","LRAPDA",104,0)
 S X=$P(^LR(LRDFN,LRSS,LRI,0),"^",4)
"RTN","LRAPDA",105,0)
 I X,$D(^VA(200,X,0)) S LR("TR")=$P(^(0),"^")
"RTN","LRAPDA",106,0)
 I "CYEMSP"[LRSS,$D(LR(6)),LRSOP="G" Q:$D(^LRO(69.2,LRAA,1,LRAN,0))  D  Q
"RTN","LRAPDA",107,0)
 .L +^LRO(69.2,LRAA,1):5 I '$T D  Q
"RTN","LRAPDA",108,0)
 ..S MSG(1)="The preliminary reports queue is in use by another person."
"RTN","LRAPDA",109,0)
 ..S MSG(1,"F")="!!"
"RTN","LRAPDA",110,0)
 ..S MSG(2)="  You will need to add this accession to the queue later."
"RTN","LRAPDA",111,0)
 ..D EN^DDIOL(.MSG) K MSG
"RTN","LRAPDA",112,0)
 .S ^LRO(69.2,LRAA,1,LRAN,0)=LRDFN_"^"_LRI_"^"_LRH(0)
"RTN","LRAPDA",113,0)
 .S X=^LRO(69.2,LRAA,1,0),^(0)=$P(X,"^",1,2)_"^"_LRAN_"^"_($P(X,"^",4)+1)
"RTN","LRAPDA",114,0)
 .L -^LRO(69.2,LRAA,1)
"RTN","LRAPDA",115,0)
 I "CYEMSP"[LRSS,$D(LR(7)),'$D(^LRO(69.2,LRAA,2,LRAN,0)) D
"RTN","LRAPDA",116,0)
 .L +^LRO(69.2,LRAA,2):5 I '$T D  Q
"RTN","LRAPDA",117,0)
 ..S MSG(1)="The final reports queue is in use by another person.  "
"RTN","LRAPDA",118,0)
 ..S MSG(1,"F")="!!"
"RTN","LRAPDA",119,0)
 ..S MSG(2)="You will need to add this accession to the queue later."
"RTN","LRAPDA",120,0)
 ..D EN^DDIOL(.MSG) K MSG
"RTN","LRAPDA",121,0)
 .S ^LRO(69.2,LRAA,2,LRAN,0)=LRDFN_"^"_LRI_"^"_LRH(0)
"RTN","LRAPDA",122,0)
 .S X=^LRO(69.2,LRAA,2,0),^(0)=$P(X,"^",1,2)_"^"_LRAN_"^"_($P(X,"^",4)+1)
"RTN","LRAPDA",123,0)
 .L -^LRO(69.2,LRAA,2)
"RTN","LRAPDA",124,0)
 D:LRSOP="M"!(LRSOP="B") EN^LRSPGD
"RTN","LRAPDA",125,0)
 Q
"RTN","LRAPDA",126,0)
NM ;
"RTN","LRAPDA",127,0)
 I X'["@"!(X["@"&(Y(Z)="")) D  Q
"RTN","LRAPDA",128,0)
 .W $C(7),!?4,"ENTER WHOLE NUMBERS ONLY",! K X
"RTN","LRAPDA",129,0)
 I Y(Z)'="" W $C(7),?40,"OK TO DELETE" S %=2 D YN^LRU I %'=1 K X Q
"RTN","LRAPDA",130,0)
 S Y(Z)="" Q
"RTN","LRAPDA",131,0)
 ;
"RTN","LRAPDA",132,0)
AUE ;Autopsy Data Entry
"RTN","LRAPDA",133,0)
 W !
"RTN","LRAPDA",134,0)
 N LREL,LRQUIT,LRSNO,LRESCPT,LRCPT
"RTN","LRAPDA",135,0)
 S (LREL,LRQUIT,LRSNO,LRCPT)=0
"RTN","LRAPDA",136,0)
 S LREL=+$$GET1^DIQ(63,LRDFN_",",14.7,"I")
"RTN","LRAPDA",137,0)
 I $T(ES^LRCAPES)'="" S LRESCPT=$$ES^LRCAPES()
"RTN","LRAPDA",138,0)
 I LRSOP'="","AFIPR"[LRSOP,LREL D  Q:LRQUIT
"RTN","LRAPDA",139,0)
 .Q:LRESCPT&("AP"[LRSOP)
"RTN","LRAPDA",140,0)
 .W $C(7),!!,"Report verified.  Cannot edit with this option!"
"RTN","LRAPDA",141,0)
 .S LRQUIT=1
"RTN","LRAPDA",142,0)
 I LRSOP'="","ABP"[LRSOP,LREL D  Q:LRQUIT
"RTN","LRAPDA",143,0)
 .W $C(7),!!,"Report has been verified.  "
"RTN","LRAPDA",144,0)
 .W "Only "
"RTN","LRAPDA",145,0)
 .I LRESCPT W "CPT " W:LRSOP="B" "and "
"RTN","LRAPDA",146,0)
 .W:LRSOP="B" "SNOMED "
"RTN","LRAPDA",147,0)
 .W "coding permitted.",!
"RTN","LRAPDA",148,0)
 .I LRSOP="B" D
"RTN","LRAPDA",149,0)
 ..K DIR S DIR(0)="Y",DIR("A")="Enter SNOMED coding",DIR("B")="NO"
"RTN","LRAPDA",150,0)
 ..D ^DIR W !
"RTN","LRAPDA",151,0)
 ..S LRSNO=+Y
"RTN","LRAPDA",152,0)
 .Q:'LRESCPT
"RTN","LRAPDA",153,0)
 .K DIR S DIR(0)="Y",DIR("A")="Enter CPT coding",DIR("B")="NO"
"RTN","LRAPDA",154,0)
 .D ^DIR W !
"RTN","LRAPDA",155,0)
 .S LRCPT=+Y
"RTN","LRAPDA",156,0)
 .I "AP"[LRSOP,'LRCPT S LRQUIT=1 Q
"RTN","LRAPDA",157,0)
 .I LRSOP="B",'LRCPT,'LRSNO S LRQUIT=1
"RTN","LRAPDA",158,0)
AURESET ;Reset DR to orig value in LRAUDA
"RTN","LRAPDA",159,0)
 I LRSOP'="","AP"[LRSOP D @(LRSOP_"DR^LRAUDA")
"RTN","LRAPDA",160,0)
 I LRSOP="B" D BDR^LRAUDA
"RTN","LRAPDA",161,0)
 S:LRSNO DR=32       ;Modify DR string if only SNOMED coding permitted
"RTN","LRAPDA",162,0)
 I 'LRSNO,LRCPT S DR=""  ;Set DR string to null inf only CPT coding
"RTN","LRAPDA",163,0)
 ;                              ;
"RTN","LRAPDA",164,0)
 ;Not all of the autopsy fields are within the AU subscript.
"RTN","LRAPDA",165,0)
 ;Therefore, we must lock the entire LRDFN.
"RTN","LRAPDA",166,0)
 L +^LR(LRDFN):5 I '$T D  Q
"RTN","LRAPDA",167,0)
 .S MSG="This record is locked by another user.  "
"RTN","LRAPDA",168,0)
 .S MSG=MSG_"Please wait and try again."
"RTN","LRAPDA",169,0)
 .D EN^DDIOL(MSG,"","!!") K MSG
"RTN","LRAPDA",170,0)
 I LRSFLG'="S" D
"RTN","LRAPDA",171,0)
 .S DIE="^LR(",DA=LRDFN
"RTN","LRAPDA",172,0)
 .D ^DIE
"RTN","LRAPDA",173,0)
 D:LRSFLG="S" ^LRAPDSR
"RTN","LRAPDA",174,0)
 D UPDATE^LRPXRM(LRDFN,"AU")
"RTN","LRAPDA",175,0)
 L -^LR(LRDFN)
"RTN","LRAPDA",176,0)
 D:"BAP"[LRSOP AU
"RTN","LRAPDA",177,0)
 D:LRSOP="R" R
"RTN","LRAPDA",178,0)
 I LRSOP'="","ABP"[LRSOP D CPTCOD
"RTN","LRAPDA",179,0)
 Q
"RTN","LRAPDA",180,0)
AU I '$D(^LRO(69.2,LRAA,2,LRAN,0)) D
"RTN","LRAPDA",181,0)
 .L +^LRO(69.2,LRAA,2):5 I '$T D  Q
"RTN","LRAPDA",182,0)
 ..S MSG(1)="The final reports queue is in use by another person.  "
"RTN","LRAPDA",183,0)
 ..S MSG(1,"F")="!!"
"RTN","LRAPDA",184,0)
 ..S MSG(2)="You will need to add this accession to the queue later."
"RTN","LRAPDA",185,0)
 ..D EN^DDIOL(.MSG) K MSG
"RTN","LRAPDA",186,0)
 .S ^LRO(69.2,LRAA,2,LRAN,0)=LRDFN
"RTN","LRAPDA",187,0)
 .S X=^LRO(69.2,LRAA,2,0),^(0)=$P(X,"^",1,2)_"^"_LRAN_"^"_($P(X,"^",4)+1)
"RTN","LRAPDA",188,0)
 .L -^LRO(69.2,LRAA,2)
"RTN","LRAPDA",189,0)
 D AU^LRSPGD
"RTN","LRAPDA",190,0)
 Q
"RTN","LRAPDA",191,0)
R I '$D(^LRO(69.2,LRAA,3,LRAN,0)) D
"RTN","LRAPDA",192,0)
 .L +^LRO(69.2,LRAA,3):5 I '$T D  Q
"RTN","LRAPDA",193,0)
 ..S MSG(1)="The interim reports queue is in use by another person.  "
"RTN","LRAPDA",194,0)
 ..S MSG(1,"F")="!!"
"RTN","LRAPDA",195,0)
 ..S MSG(2)="You will need to add this accession to the queue later."
"RTN","LRAPDA",196,0)
 ..D EN^DDIOL(.MSG) K MSG
"RTN","LRAPDA",197,0)
 .S ^LRO(69.2,LRAA,3,LRAN,0)=LRDFN
"RTN","LRAPDA",198,0)
 .S X=^LRO(69.2,LRAA,3,0),^(0)=$P(X,"^",1,2)_"^"_LRAN_"^"_($P(X,"^",4)+1)
"RTN","LRAPDA",199,0)
 .L -^LRO(69.2,LRAA,3)
"RTN","LRAPDA",200,0)
 Q
"RTN","LRAPDA",201,0)
PNAME ;Patient Name Lookup
"RTN","LRAPDA",202,0)
 N LRPFLG            ;LRPFLG tells LRUPS to limit accessions to 
"RTN","LRAPDA",203,0)
 S X=LRAN,LRPFLG=1   ;the chosen year.
"RTN","LRAPDA",204,0)
 K LRAN,DIC,VADM,VAIN,VA
"RTN","LRAPDA",205,0)
 S DFN=-1,DIC(0)="EQM",(LRX,LRDPF)=""
"RTN","LRAPDA",206,0)
 D:'$D(LRLABKY) LABKEY^LRPARAM
"RTN","LRAPDA",207,0)
 D DPA1^LRDPA
"RTN","LRAPDA",208,0)
 I DFN=-1 S LRAN=-1 Q
"RTN","LRAPDA",209,0)
 D I^LRUPS
"RTN","LRAPDA",210,0)
 Q
"RTN","LRAPDA",211,0)
CPTCOD ;CPT Coding
"RTN","LRAPDA",212,0)
 N LRPRO
"RTN","LRAPDA",213,0)
 Q:$T(CPT^LRCAPES)=""
"RTN","LRAPDA",214,0)
 Q:LREL&('LRCPT)
"RTN","LRAPDA",215,0)
 I 'LREL D
"RTN","LRAPDA",216,0)
 .K DIR S DIR(0)="Y",DIR("A")="Enter CPT coding",DIR("B")="NO"
"RTN","LRAPDA",217,0)
 .D ^DIR W !
"RTN","LRAPDA",218,0)
 .S LRCPT=+Y
"RTN","LRAPDA",219,0)
 Q:'LRCPT
"RTN","LRAPDA",220,0)
 ;SET PROVIDER TO CURRENT USER, ALLOW UPDATES
"RTN","LRAPDA",221,0)
 S LRPRO=DUZ
"RTN","LRAPDA",222,0)
 D PROVIDR^LRAPUTL
"RTN","LRAPDA",223,0)
 Q:LRQUIT
"RTN","LRAPDA",224,0)
 D CPT^LRCAPES(LRAA,LRAD,LRAN,LRPRO)
"RTN","LRAPDA",225,0)
 Q
"RTN","LRAPDA",226,0)
END K LRSFLG
"RTN","LRAPDA",227,0)
 D:$T(CLEAN^LRCAPES)'="" CLEAN^LRCAPES
"RTN","LRAPDA",228,0)
 D V^LRU
"RTN","LRAPDA",229,0)
 Q
"RTN","LRAPDSR")
0^22^B17788838
"RTN","LRAPDSR",1,0)
LRAPDSR ;DALOI/WTY - AP SUPPLEMENTARY REPORT ENTRY;12/05/00
"RTN","LRAPDSR",2,0)
 ;;5.2;LAB SERVICE;**248,259,295**;Sep 27, 1994
"RTN","LRAPDSR",3,0)
 ;
"RTN","LRAPDSR",4,0)
 N LRYTMP,LRWPROOT,LRRLS,LRRLS1,LRX,LRIENS,LRFILE1,LRFILE,LRA,LRQUIT
"RTN","LRAPDSR",5,0)
 N LRIENS1,LRXTMP,LRFDA,LRNOW,LRIENS2,LRFIELD,LRORIEN,LRFLG,LRDA
"RTN","LRAPDSR",6,0)
 ;
"RTN","LRAPDSR",7,0)
MAIN ;Main Subroutine
"RTN","LRAPDSR",8,0)
 D RELEAS1
"RTN","LRAPDSR",9,0)
 D GETRPT
"RTN","LRAPDSR",10,0)
 Q:LRQUIT
"RTN","LRAPDSR",11,0)
 D:'LRRLS RELEAS2
"RTN","LRAPDSR",12,0)
 D:LRRLS COPY
"RTN","LRAPDSR",13,0)
 Q:LRQUIT
"RTN","LRAPDSR",14,0)
 D RPT
"RTN","LRAPDSR",15,0)
 Q:LRQUIT
"RTN","LRAPDSR",16,0)
 D COMPARE
"RTN","LRAPDSR",17,0)
 Q:LRQUIT
"RTN","LRAPDSR",18,0)
 D:LRRLS1 UNRELEAS
"RTN","LRAPDSR",19,0)
 D UPDATE
"RTN","LRAPDSR",20,0)
 Q:LRQUIT
"RTN","LRAPDSR",21,0)
 D STORE
"RTN","LRAPDSR",22,0)
 Q
"RTN","LRAPDSR",23,0)
RELEAS1 ;Is the ENTIRE report already released?
"RTN","LRAPDSR",24,0)
 S (LRRLS,LRRLS1,LRQUIT)=0
"RTN","LRAPDSR",25,0)
 I LRSS="AU" D  Q
"RTN","LRAPDSR",26,0)
 .S LRX=$P($G(^LR(LRDFN,LRSS)),"^",15)
"RTN","LRAPDSR",27,0)
 .Q:'LRX         ;Report has not been released so no audit will occur.
"RTN","LRAPDSR",28,0)
 .W $C(7),!!,"This AUTOPSY has been released.  Supplementary report "
"RTN","LRAPDSR",29,0)
 .W "additions/modifications"
"RTN","LRAPDSR",30,0)
 .W !,"will create an audit trail.",!
"RTN","LRAPDSR",31,0)
 .S LRRLS=1    ;Report has been released so auditing will occur.
"RTN","LRAPDSR",32,0)
 S LRX=$P($G(^LR(LRDFN,LRSS,LRI,0)),"^",11)
"RTN","LRAPDSR",33,0)
 I LRX D
"RTN","LRAPDSR",34,0)
 .W $C(7),!!,"This "_$G(LRAA(1))_" report has been released."
"RTN","LRAPDSR",35,0)
 .W !,"Supplementary report additions/modifications will create"
"RTN","LRAPDSR",36,0)
 .W " an audit trail.",!
"RTN","LRAPDSR",37,0)
 .S LRRLS=1
"RTN","LRAPDSR",38,0)
 Q
"RTN","LRAPDSR",39,0)
GETRPT ;First, select the report 
"RTN","LRAPDSR",40,0)
 S DIC(0)="QAEZL",DLAYGO=63
"RTN","LRAPDSR",41,0)
 S DIC("A")="Select SUPPLEMENTARY REPORT DATE: "
"RTN","LRAPDSR",42,0)
 S DIC=$S(LRSS="AU":"^LR(LRDFN,84,",1:"^LR(LRDFN,LRSS,LRI,1.2,")
"RTN","LRAPDSR",43,0)
 S DIC("P")=$S(LRSS="AU":"63,32.4,0",1:"LRSF,1.2,0")
"RTN","LRAPDSR",44,0)
 S DIC("P")=$P(@("^DD("_DIC("P")_")"),"^",2)
"RTN","LRAPDSR",45,0)
 S DIC("B")="" S LRX=0 F  S LRX=$O(@(DIC_"LRX)")) Q:'LRX  D
"RTN","LRAPDSR",46,0)
 .S DIC("B")=+(@(DIC_"LRX,0)"))
"RTN","LRAPDSR",47,0)
 D ^DIC K DLAYGO
"RTN","LRAPDSR",48,0)
 S:Y=-1 LRQUIT=1
"RTN","LRAPDSR",49,0)
 Q
"RTN","LRAPDSR",50,0)
RELEAS2 ;Is the supplementary report already released?
"RTN","LRAPDSR",51,0)
 S:LRSS'="AU" LRX=$G(^LR(LRDFN,LRSS,LRI,1.2,+Y,0))
"RTN","LRAPDSR",52,0)
 S:LRSS="AU" LRX=$G(^LR(LRDFN,84,+Y,0))
"RTN","LRAPDSR",53,0)
 S LRRLS=+$P(LRX,"^",2)
"RTN","LRAPDSR",54,0)
 I LRRLS D
"RTN","LRAPDSR",55,0)
 .W $C(7),!!,"This supplementary report has been released.  Additions/"
"RTN","LRAPDSR",56,0)
 .W "modifications",!,"will create an audit trail.",!
"RTN","LRAPDSR",57,0)
 .S LRRLS1=1
"RTN","LRAPDSR",58,0)
 Q
"RTN","LRAPDSR",59,0)
COPY ;Make a copy of the current report.
"RTN","LRAPDSR",60,0)
 K ^TMP("DIQ1",$J)
"RTN","LRAPDSR",61,0)
 S LRIENS=+Y_","_$S(LRSS'="AU":LRI_",",1:"")_LRDFN_","
"RTN","LRAPDSR",62,0)
 S LRFILE1=$S(LRSS="SP":63.817,LRSS="CY":63.907,LRSS="EM":63.207,1:"")
"RTN","LRAPDSR",63,0)
 S:LRFILE1="" LRFILE1=$S(LRSS="AU":63.324,1:"")
"RTN","LRAPDSR",64,0)
 I LRFILE1="" S LRQUIT=1 Q
"RTN","LRAPDSR",65,0)
 D GETS^DIQ(LRFILE1,LRIENS,"**","Z","^TMP(""DIQ1"",$J)")
"RTN","LRAPDSR",66,0)
 Q
"RTN","LRAPDSR",67,0)
RPT ;
"RTN","LRAPDSR",68,0)
 N DIE,DA,DR
"RTN","LRAPDSR",69,0)
 S DIE=DIC K DIC
"RTN","LRAPDSR",70,0)
 S (LRDA,DA)=+Y
"RTN","LRAPDSR",71,0)
 S:LRSS="AU" DA(1)=LRDFN
"RTN","LRAPDSR",72,0)
 S:LRSS'="AU" DA(1)=LRI,DA(2)=LRDFN
"RTN","LRAPDSR",73,0)
 S DR=".01;1" D ^DIE
"RTN","LRAPDSR",74,0)
 I 'LRRLS S LRQUIT=1
"RTN","LRAPDSR",75,0)
 Q
"RTN","LRAPDSR",76,0)
COMPARE ;Compare reports
"RTN","LRAPDSR",77,0)
 I '$D(^TMP("DIQ1",$J)) S LRQUIT=1 Q
"RTN","LRAPDSR",78,0)
 S:LRSS'="AU" LRFILE="^LR(LRDFN,LRSS,LRI,1.2,LRDA,1,"
"RTN","LRAPDSR",79,0)
 S:LRSS="AU" LRFILE="^LR(LRDFN,84,LRDA,1,"
"RTN","LRAPDSR",80,0)
 I '$D(@(LRFILE_"0)")) D  Q
"RTN","LRAPDSR",81,0)
 .D:LRRLS1 UNRELEAS
"RTN","LRAPDSR",82,0)
 .S LRQUIT=1
"RTN","LRAPDSR",83,0)
 S LRA=0,LRFLG=1
"RTN","LRAPDSR",84,0)
 F  S LRA=$O(@(LRFILE_"LRA)")) Q:'LRA  D
"RTN","LRAPDSR",85,0)
 .S LRXTMP=@(LRFILE_"LRA,0)")
"RTN","LRAPDSR",86,0)
 .S:'$D(^TMP("DIQ1",$J,LRFILE1,LRIENS,1,LRA,0)) LRFLG=0
"RTN","LRAPDSR",87,0)
 .Q:'LRFLG
"RTN","LRAPDSR",88,0)
 .S LRYTMP=^TMP("DIQ1",$J,LRFILE1,LRIENS,1,LRA,0)
"RTN","LRAPDSR",89,0)
 .I LRXTMP'=LRYTMP S LRFLG=0
"RTN","LRAPDSR",90,0)
 I LRFLG D
"RTN","LRAPDSR",91,0)
 .S LRA=0 F  S LRA=$O(^TMP("DIQ1",$J,LRFILE1,LRIENS,1,LRA)) Q:'LRA  D
"RTN","LRAPDSR",92,0)
 ..I '$D(@(LRFILE_"LRA,0)")) S LRFLG=0
"RTN","LRAPDSR",93,0)
 I LRFLG D
"RTN","LRAPDSR",94,0)
 .W $C(7),!!,"No changes were made to the supplementary report."
"RTN","LRAPDSR",95,0)
 .K ^TMP("DIQ1",$J)
"RTN","LRAPDSR",96,0)
 .S LRQUIT=1
"RTN","LRAPDSR",97,0)
 Q
"RTN","LRAPDSR",98,0)
UNRELEAS ;Unrelease the supplementary report.
"RTN","LRAPDSR",99,0)
 K LRFDA
"RTN","LRAPDSR",100,0)
 S LRFDA(1,LRFILE1,LRIENS,.02)="@"
"RTN","LRAPDSR",101,0)
 D UPDATE^DIE("","LRFDA(1)")
"RTN","LRAPDSR",102,0)
 Q
"RTN","LRAPDSR",103,0)
UPDATE ;File changes
"RTN","LRAPDSR",104,0)
 ;First, store the date of the change and user ID
"RTN","LRAPDSR",105,0)
 D UPDATE^LRPXRM(LRDFN,LRSS,+$G(LRI))
"RTN","LRAPDSR",106,0)
 K LRFDA
"RTN","LRAPDSR",107,0)
 S X="NOW",%DT="T" D ^%DT S LRNOW=Y
"RTN","LRAPDSR",108,0)
 S LRIENS1="+1,"_LRIENS
"RTN","LRAPDSR",109,0)
 S LRFILE=$S(LRSS="SP":63.8172,LRSS="CY":63.9072,LRSS="EM":63.2072,1:"")
"RTN","LRAPDSR",110,0)
 S:LRFILE="" LRFILE=$S(LRSS="AU":63.3242,1:"")
"RTN","LRAPDSR",111,0)
 I LRFILE="" S LRQUIT=1 Q
"RTN","LRAPDSR",112,0)
 S LRFDA(1,LRFILE,LRIENS1,.01)=LRNOW
"RTN","LRAPDSR",113,0)
 S LRFDA(1,LRFILE,LRIENS1,.02)=DUZ,LRFIELD=1
"RTN","LRAPDSR",114,0)
 D UPDATE^DIE("","LRFDA(1)","LRORIEN")
"RTN","LRAPDSR",115,0)
 Q
"RTN","LRAPDSR",116,0)
STORE ;Second, store the original report
"RTN","LRAPDSR",117,0)
 S LRIENS2=LRORIEN(1)_","_LRIENS
"RTN","LRAPDSR",118,0)
 S LRWPROOT="^TMP(""DIQ1"",$J,LRFILE1,LRIENS,1)"
"RTN","LRAPDSR",119,0)
 D WP^DIE(LRFILE,LRIENS2,LRFIELD,"",LRWPROOT)
"RTN","LRAPDSR",120,0)
 K ^TMP("DIQ1",$J)
"RTN","LRAPDSR",121,0)
 Q
"RTN","LRAPM")
0^40^B22087381
"RTN","LRAPM",1,0)
LRAPM ;AVAMC/REG/WTY - ANATOMIC PATH MODIFY MICRO/DX ;10/23/04  22:55
"RTN","LRAPM",2,0)
 ;;5.2;LAB SERVICE;**72,91,130,231,248,295**;Sep 27, 1994
"RTN","LRAPM",3,0)
 ;
"RTN","LRAPM",4,0)
 ;Reference to ^%DT supported by IA #10003
"RTN","LRAPM",5,0)
 ;Reference to %XY^%RCR supported by IA #10022
"RTN","LRAPM",6,0)
 ;Reference to ^DIE supported by IA #10018
"RTN","LRAPM",7,0)
 ;Reference to EN^DDIOL supported by IA #10142
"RTN","LRAPM",8,0)
 ;
"RTN","LRAPM",9,0)
 D A^LRAPD Q:'$D(Y)
"RTN","LRAPM",10,0)
 I LRCAPA D @(LRSS_"^LRAPSWK")
"RTN","LRAPM",11,0)
 D @LRSS
"RTN","LRAPM",12,0)
 S LRB(1)="GROSS DESCRIPTION",LRB(2)="MICROSCOPIC DESCRIPTION"
"RTN","LRAPM",13,0)
 S LRB(3)="DIAGNOSIS",LRB(4)="FROZEN SECTION"
"RTN","LRAPM",14,0)
 S:'$D(^LRO(69.2,LRAA,2,0)) ^(0)="^69.23A^^"
"RTN","LRAPM",15,0)
AK W !!,"Modify data for ",LRH(0)," "
"RTN","LRAPM",16,0)
 S %=1 D YN^LRU G:%<1 END
"RTN","LRAPM",17,0)
 I %=2 S %DT="AE",%DT(0)="-N",%DT("A")="Enter YEAR: " D ^%DT K %DT G:Y<1 END S LRAD=$E(Y,1,3)_"0000",LRH(0)=$E(Y,1,3)+1700
"RTN","LRAPM",18,0)
 I '$D(^LRO(68,LRAA,1,LRAD,0)) W $C(7),!!,"NO ",LRAA(1)," ACCESSIONS IN FILE FOR ",LRH(0),!! G END
"RTN","LRAPM",19,0)
W K X,Y R !!,"Select Accession Number/Pt name: ",LRAN:DTIME
"RTN","LRAPM",20,0)
 G:LRAN=""!(LRAN[U) END
"RTN","LRAPM",21,0)
 I LRAN'?1N.N D PNAME^LRAPDA G:LRAN<1 W D DIE G W
"RTN","LRAPM",22,0)
 D REST G W
"RTN","LRAPM",23,0)
REST W "  for ",LRH(0) I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) W $C(7),!!,"Accession # ",LRAN," for ",LRH(0)," not in ACCESSION file",!! Q
"RTN","LRAPM",24,0)
 S X=^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRLLOC=$P(X,"^",7),LRDFN=+X
"RTN","LRAPM",25,0)
 Q:'$D(^LR(LRDFN,0))  S X=^(0) D ^LRUP
"RTN","LRAPM",26,0)
 W !,LRP,"  ID: ",SSN
"RTN","LRAPM",27,0)
 S LRI=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),"^",5)
"RTN","LRAPM",28,0)
 W:$O(^LR(LRDFN,LRSS,LRI,.1,0)) !,"Specimen(s):" F X=0:0 S X=$O(^LR(LRDFN,LRSS,LRI,.1,X)) Q:'X  W !,$P($G(^(X,0)),U)
"RTN","LRAPM",29,0)
DIE S X=^LR(LRDFN,LRSS,LRI,0)
"RTN","LRAPM",30,0)
 I '$P(X,"^",11),'$P(X,"^",15) W $C(7),!!,"Report not verified.  Do not need to use this option !" Q
"RTN","LRAPM",31,0)
ASK D:LRCAPA C^LRAPSWK
"RTN","LRAPM",32,0)
 W !?14,"1. MODIFY GROSS DESCRIPTION",!?14,"2. MODIFY MICROSCOPIC DESCRIPTION",!?14,"3. MODIFY DIAGNOSIS" S LRB=3 I LRSS="SP" W !?14,"4. MODIFY FROZEN SECTION" S LRB=4
"RTN","LRAPM",33,0)
 W !,"CHOOSE (1-",LRB,"): " R X:DTIME Q:X[U!(X="")
"RTN","LRAPM",34,0)
 I X'=+X!(X<1)!(X>LRB) W $C(7),!,"Choose from 1 to ",LRB G ASK
"RTN","LRAPM",35,0)
 S LRB=X,LRF=$S(X=1:"1^7",X=2:"1.1^4",X=3:"1.4^5",1:"1.3^6"),LRE=$P(LRF,U,2),LRF=$P(LRF,U)
"RTN","LRAPM",36,0)
 I '$D(^LR(LRDFN,LRSS,LRI,LRF)) W $C(7),!!,"There is no ",LRB(LRB)," text to modify !",!,"The report was released before entering text.",!,"Do you still want to continue " S %=2 D YN^LRU Q:%'=1  G A
"RTN","LRAPM",37,0)
 W !!,"Are you sure you want to modify ",LRB(LRB)," text " S %=2 D YN^LRU Q:%'=1
"RTN","LRAPM",38,0)
A S:'$D(^LR(LRDFN,LRSS,LRI,LRE,0)) ^(0)=LRQ(LRB) S LRT(1)=^(0),(B,C)=0
"RTN","LRAPM",39,0)
 F A=0:1 S B=$O(^LR(LRDFN,LRSS,LRI,LRE,B)) Q:'B  S C=B
"RTN","LRAPM",40,0)
 S C=C+1
"RTN","LRAPM",41,0)
 S ^LR(LRDFN,LRSS,LRI,LRE,0)=$P(LRT(1),"^",1,2)_"^"_C_"^"_($P(LRT(1),"^",4)+1),LRDTMOD=C
"RTN","LRAPM",42,0)
 S X="N",%DT="T" D ^%DT
"RTN","LRAPM",43,0)
 S ^LR(LRDFN,LRSS,LRI,LRE,LRDTMOD,0)=Y_"^"_DUZ
"RTN","LRAPM",44,0)
 S %X="^LR(LRDFN,LRSS,LRI,LRF,",%Y="^LR(LRDFN,LRSS,LRI,LRE,LRDTMOD,1,"
"RTN","LRAPM",45,0)
 D %XY^%RCR
"RTN","LRAPM",46,0)
 W ! S DR=LRF,DIE="^LR(LRDFN,LRSS,",DA=LRI,DA(1)=LRDFN
"RTN","LRAPM",47,0)
 I LRF=1 D
"RTN","LRAPM",48,0)
 .S DR=".012;1"
"RTN","LRAPM",49,0)
 .S:LRSS="SP" DR(2,63.812)=".01"
"RTN","LRAPM",50,0)
 .S:LRSS="CY" DR(2,63.902)=".01;.02"
"RTN","LRAPM",51,0)
 .S:LRSS="EM" DR(2,63.202)=".01"
"RTN","LRAPM",52,0)
 L +^LR(LRDFN,LRSS,DA):5 I '$T D  Q
"RTN","LRAPM",53,0)
 .S MSG="This record is locked by another user.  "
"RTN","LRAPM",54,0)
 .S MSG=MSG_"Please try again later."
"RTN","LRAPM",55,0)
 .D EN^DDIOL(MSG,"","!!") K MSG
"RTN","LRAPM",56,0)
 D ^DIE S X=^LR(LRDFN,LRSS,LRI,0),LRRC=$P(X,"^",10) K X
"RTN","LRAPM",57,0)
 L -^LR(LRDFN,LRSS,DA)
"RTN","LRAPM",58,0)
 D:LRCAPA C1^LRAPSWK
"RTN","LRAPM",59,0)
 S LRC=1 F A=0:0 S A=$O(^LR(LRDFN,LRSS,LRI,LRF,A)) Q:'A  S X=^(A,0) S:'$D(^LR(LRDFN,LRSS,LRI,LRE,LRDTMOD,1,A,0)) LRC=0 Q:'LRC  I X'=^(0) S LRC=0 Q
"RTN","LRAPM",60,0)
 I LRC F A=0:0 S A=$O(^LR(LRDFN,LRSS,LRI,LRE,LRDTMOD,1,A)) Q:'A  S X=^(A,0) I '$D(^LR(LRDFN,LRSS,LRI,LRF,A,0)) S LRC=0 Q
"RTN","LRAPM",61,0)
 I LRC D  Q
"RTN","LRAPM",62,0)
 . W $C(7),!!,"No changes were made to ",LRB(LRB)
"RTN","LRAPM",63,0)
 . K ^LR(LRDFN,LRSS,LRI,LRE,LRDTMOD)
"RTN","LRAPM",64,0)
 . S X=^LR(LRDFN,LRSS,LRI,LRE,0),A=$P(X,"^",4),Y=$O(^(0))
"RTN","LRAPM",65,0)
 . S ^LR(LRDFN,LRSS,LRI,LRE,0)=$P(X,"^",1,2)_"^"_Y_"^"_$S(A:A-1,1:0)
"RTN","LRAPM",66,0)
 S X=^LR(LRDFN,LRSS,LRI,0),Y=$P(X,"^",15),$P(^(0),"^",11)="" S:'Y $P(^(0),"^",15)=$P(X,"^",11)
"RTN","LRAPM",67,0)
 I $G(SEX)["F","SPCY"[LRSS D DEL^LRWOMEN ;This sends notificatin to WHP
"RTN","LRAPM",68,0)
 ;that a previously verified report has been modified. ;cym 2/20/1999
"RTN","LRAPM",69,0)
 D UPDATE^LRPXRM(LRDFN,LRSS,LRI)
"RTN","LRAPM",70,0)
 I '$D(^LRO(69.2,LRAA,2,LRAN,0)) D
"RTN","LRAPM",71,0)
 .L +^LRO(69.2,LRAA,2):5 I '$T D  Q
"RTN","LRAPM",72,0)
 ..S MSG(1)="The final reports queue is in use by another person.  "
"RTN","LRAPM",73,0)
 ..S MSG(1,"F")="!!"
"RTN","LRAPM",74,0)
 ..S MSG(2)="You will need to add this accession to the queue later."
"RTN","LRAPM",75,0)
 ..D EN^DDIOL(.MSG) K MSG
"RTN","LRAPM",76,0)
 .S ^LRO(69.2,LRAA,2,LRAN,0)=LRDFN_"^"_LRI_"^"_LRH(0)
"RTN","LRAPM",77,0)
 .S X=^LRO(69.2,LRAA,2,0),^(0)=$P(X,"^",1,2)_"^"_LRAN_"^"_($P(X,"^",4)+1)
"RTN","LRAPM",78,0)
 .L -^LRO(69.2,LRAA,2)
"RTN","LRAPM",79,0)
 Q
"RTN","LRAPM",80,0)
SP S LRQ(1)="^63.087DA^^",LRQ(2)="^63.84DA^^",LRQ(3)="^63.085DA^^",LRQ(4)="^63.086DA^^" Q
"RTN","LRAPM",81,0)
CY S LRQ(1)="^63.097D^^",LRQ(2)="^63.94DA^^",LRQ(3)="^63.095DA^^" Q
"RTN","LRAPM",82,0)
EM S LRQ(1)="^63.0272DA^^",LRQ(2)="^63.242DA^^",LRQ(3)="^63.025DA^^" Q
"RTN","LRAPM",83,0)
 ;
"RTN","LRAPM",84,0)
END D V^LRU K LRDTMOD Q
"RTN","LRAPMRL")
0^41^B66524711
"RTN","LRAPMRL",1,0)
LRAPMRL ;DALOI/WTY- AP MODIFY RELEASED REPORT;12/04/01 ;10/23/04  22:56
"RTN","LRAPMRL",2,0)
 ;;5.2;LAB SERVICE;**259,295**;Sep 27, 1994
"RTN","LRAPMRL",3,0)
 ;
"RTN","LRAPMRL",4,0)
MAIN ;
"RTN","LRAPMRL",5,0)
 N LRQUIT,LRMSG,LREND,LRDATA,LRREL,LRAU,LREFPD,LRWM,LRCT,LRTMP,LRGMDF
"RTN","LRAPMRL",6,0)
 N LRFLD,LRDSC,LRCHG,LRXTMP,LRYTMP,LRIENS1,LRFILE,LRFLDA,LRAD1,LRIENS
"RTN","LRAPMRL",7,0)
 N LRORIEN,LRWPROOT,LRFDA,LRDA,LRFIELD,LRFILE1,LRIENS2,LRDT0,LRESCPT
"RTN","LRAPMRL",8,0)
 N LRQUIT1,LREDIAG,LRLOCK,LRNOTXT,LRORIEN
"RTN","LRAPMRL",9,0)
 S LRESCPT=0
"RTN","LRAPMRL",10,0)
 D TITLE
"RTN","LRAPMRL",11,0)
 I LRQUIT D END Q
"RTN","LRAPMRL",12,0)
 D NOTICE
"RTN","LRAPMRL",13,0)
 I LRQUIT D END Q
"RTN","LRAPMRL",14,0)
 D SECTION
"RTN","LRAPMRL",15,0)
 I LRQUIT D END Q
"RTN","LRAPMRL",16,0)
 D WHAT
"RTN","LRAPMRL",17,0)
 I LRQUIT D END Q
"RTN","LRAPMRL",18,0)
 D CPTCHK
"RTN","LRAPMRL",19,0)
 ;D SECTION
"RTN","LRAPMRL",20,0)
 I LRQUIT D END Q
"RTN","LRAPMRL",21,0)
 D ASK
"RTN","LRAPMRL",22,0)
 I LRQUIT D END Q
"RTN","LRAPMRL",23,0)
 D SETDR^LRAPMRL1
"RTN","LRAPMRL",24,0)
 D ACCYR
"RTN","LRAPMRL",25,0)
 I LRQUIT D END Q
"RTN","LRAPMRL",26,0)
 D ACCPN
"RTN","LRAPMRL",27,0)
 D END
"RTN","LRAPMRL",28,0)
 Q
"RTN","LRAPMRL",29,0)
ACCPN ;Prompt for accesion number or patient name
"RTN","LRAPMRL",30,0)
 F  D  Q:LREND
"RTN","LRAPMRL",31,0)
 .S (LRQUIT,LREND)=0
"RTN","LRAPMRL",32,0)
 .D CPTCHK
"RTN","LRAPMRL",33,0)
 .D LOOKUP^LRAPUTL(.LRDATA,LRH(0),LRO(68),LRSS,LRAD,LRAA)
"RTN","LRAPMRL",34,0)
 .Q:'LRDATA
"RTN","LRAPMRL",35,0)
 .I LRDATA=-1 S LREND=1 Q
"RTN","LRAPMRL",36,0)
 .S LRDFN=LRDATA,LRI=LRDATA(1)
"RTN","LRAPMRL",37,0)
 .S LRLOCK="^LR(LRDFN"_$S(LRAU:")",1:",LRSS,LRI)")
"RTN","LRAPMRL",38,0)
 .L +@(LRLOCK):5 I '$T D  Q
"RTN","LRAPMRL",39,0)
 ..S LRMSG="This record is locked by another user.  "
"RTN","LRAPMRL",40,0)
 ..S LRMSG=LRMSG_"Please try again later."
"RTN","LRAPMRL",41,0)
 ..D EN^DDIOL(LRMSG,"","!!") K LRMSG
"RTN","LRAPMRL",42,0)
 .S LRIENS=$S('LRAU:LRI_",",1:"")_LRDFN_","
"RTN","LRAPMRL",43,0)
 .D RELCHK^LRAPMRL1
"RTN","LRAPMRL",44,0)
 .I LRQUIT D UNLOCK Q
"RTN","LRAPMRL",45,0)
 .D RELEASE^LRAPMRL1
"RTN","LRAPMRL",46,0)
 .D QUEUPD^LRAPMRL1
"RTN","LRAPMRL",47,0)
 .D:LRCAPA C^LRAPSWK
"RTN","LRAPMRL",48,0)
 .D:'LREDIAG SETDR^LRAPMRL1,EDIT^LRAPMRL1
"RTN","LRAPMRL",49,0)
 .I LRQUIT D UNLOCK Q
"RTN","LRAPMRL",50,0)
 .I 'LRAU D
"RTN","LRAPMRL",51,0)
 ..F LRFLD=1,1.1,1.4,1.3 D  Q:LRQUIT
"RTN","LRAPMRL",52,0)
 ...Q:LREDIAG&(LRFLD'=1.4)
"RTN","LRAPMRL",53,0)
 ...Q:'LREDIAG&(LRFLD=1.4)
"RTN","LRAPMRL",54,0)
 ...Q:LRFLD=1.3&(LRSS'="SP")
"RTN","LRAPMRL",55,0)
 ...D ASK2 Q:LRQUIT!('LRGMDF)
"RTN","LRAPMRL",56,0)
 ...D SAVTXT
"RTN","LRAPMRL",57,0)
 ...K DR S DR=LRFLD
"RTN","LRAPMRL",58,0)
 ...D EDIT^LRAPMRL1
"RTN","LRAPMRL",59,0)
 ...D COMPARE Q:LRQUIT
"RTN","LRAPMRL",60,0)
 ...D AUDIT Q:LRQUIT
"RTN","LRAPMRL",61,0)
 ...D STORE
"RTN","LRAPMRL",62,0)
 .I LRAU,LREDIAG D
"RTN","LRAPMRL",63,0)
 ..S LRDSC="PATHOLOGICAL DIAGNOSIS"
"RTN","LRAPMRL",64,0)
 ..S LRFLD=32.3
"RTN","LRAPMRL",65,0)
 ..D SAVTXT
"RTN","LRAPMRL",66,0)
 ..K DR S DR=LRFLD
"RTN","LRAPMRL",67,0)
 ..D EDIT^LRAPMRL1
"RTN","LRAPMRL",68,0)
 ..D COMPARE
"RTN","LRAPMRL",69,0)
 .I $G(SEX)["F","SPCY"[LRSS D DEL^LRWOMEN
"RTN","LRAPMRL",70,0)
 .I LRQUIT D UNLOCK Q
"RTN","LRAPMRL",71,0)
 .I LREDIAG D UNLOCK Q
"RTN","LRAPMRL",72,0)
 .D SUPRPT
"RTN","LRAPMRL",73,0)
 .I LRQUIT1 D UNLOCK Q
"RTN","LRAPMRL",74,0)
 .D:LRESCPT CPTCODE^LRAPMRL1
"RTN","LRAPMRL",75,0)
 .D UNLOCK
"RTN","LRAPMRL",76,0)
 Q
"RTN","LRAPMRL",77,0)
TITLE ;Title
"RTN","LRAPMRL",78,0)
 S (LRQUIT,LRQUIT1)=0
"RTN","LRAPMRL",79,0)
 D CK^LRAP
"RTN","LRAPMRL",80,0)
 I Y=-1 S LRQUIT=1 Q
"RTN","LRAPMRL",81,0)
 W @IOF
"RTN","LRAPMRL",82,0)
 S LRMSG="Modify Released Pathology Reports"
"RTN","LRAPMRL",83,0)
 S LRMSG(1)=$$CJ^XLFSTR(LRMSG,IOM)
"RTN","LRAPMRL",84,0)
 S LRMSG(1,"F")="!!"
"RTN","LRAPMRL",85,0)
 S LRMSG(2)="",LRMSG(2,"F")="!"
"RTN","LRAPMRL",86,0)
 D EN^DDIOL(.LRMSG) K LRMSG
"RTN","LRAPMRL",87,0)
 Q
"RTN","LRAPMRL",88,0)
NOTICE ;Warn the user and allow an exit
"RTN","LRAPMRL",89,0)
 K LRMSG
"RTN","LRAPMRL",90,0)
 S LRMSG="NOTICE"
"RTN","LRAPMRL",91,0)
 S LRMSG(1)=$$CJ^XLFSTR(LRMSG,IOM),LRMSG(1,"F")="!!"
"RTN","LRAPMRL",92,0)
 S LRMSG(2)="",LRMSG(2,"F")="!"
"RTN","LRAPMRL",93,0)
 S LRMSG(3)=$C(7)_"This option allows modification of a verified/"
"RTN","LRAPMRL",94,0)
 S LRMSG(3)=LRMSG(3)_"released pathology report."
"RTN","LRAPMRL",95,0)
 S LRMSG(3,"F")="!?3"
"RTN","LRAPMRL",96,0)
 S LRMSG(4)="Continuing with this option will unrelease the report "
"RTN","LRAPMRL",97,0)
 S LRMSG(4)=LRMSG(4)_"and flag the report",LRMSG(4,"F")="!?3"
"RTN","LRAPMRL",98,0)
 S LRMSG(5)="as modified even if the data is unchanged.  It will "
"RTN","LRAPMRL",99,0)
 S LRMSG(5)=LRMSG(5)_"also be queued to the",LRMSG(5,"F")="!?3"
"RTN","LRAPMRL",100,0)
 S LRMSG(6)="final report queue so that it may be verified/released "
"RTN","LRAPMRL",101,0)
 S LRMSG(6)=LRMSG(6)_"again.",LRMSG(6,"F")="!?3"
"RTN","LRAPMRL",102,0)
 D EN^DDIOL(.LRMSG) K LRMSG
"RTN","LRAPMRL",103,0)
 W !!
"RTN","LRAPMRL",104,0)
 S DIR(0)="Y",DIR("A")="Do you wish to continue",DIR("B")="NO"
"RTN","LRAPMRL",105,0)
 D ^DIR
"RTN","LRAPMRL",106,0)
 S:Y<1 LRQUIT=1
"RTN","LRAPMRL",107,0)
 Q
"RTN","LRAPMRL",108,0)
WHAT ;What is to be edited
"RTN","LRAPMRL",109,0)
 W !
"RTN","LRAPMRL",110,0)
 K DIR
"RTN","LRAPMRL",111,0)
 ;Don't ask to Edit Diagnosis if initial entry of diagnosis is turned
"RTN","LRAPMRL",112,0)
 ;  off at data entry for SP, CY, EM's
"RTN","LRAPMRL",113,0)
 S LRASK=1,XASK=""
"RTN","LRAPMRL",114,0)
 I 'LRAU D
"RTN","LRAPMRL",115,0)
 .S X=$G(^LAB(69.9,1,11))
"RTN","LRAPMRL",116,0)
 .S XASK=$S(LRSS="SP":$P(X,"^",2),LRSS="CY":$P(X,"^",3),1:"")
"RTN","LRAPMRL",117,0)
 .S:XASK="" XASK=$S(LRSS="EM":$P(X,"^",4),1:"")
"RTN","LRAPMRL",118,0)
 .S LRASK=$$GET1^DIQ(69.9,1,XASK,"I")
"RTN","LRAPMRL",119,0)
 S:LRASK DIR(0)="S^1:Edit Report;2:Edit Diagnosis"
"RTN","LRAPMRL",120,0)
 S:LRASK DIR("A")="Enter selection",DIR("B")=1
"RTN","LRAPMRL",121,0)
 S:'LRASK DIR(0)="Y",DIR("B")="YES",DIR("A")="Edit Report?"
"RTN","LRAPMRL",122,0)
 D ^DIR
"RTN","LRAPMRL",123,0)
 I $D(DTOUT)!($D(DUOUT))!($D(DIRUT))!($D(DIROUT)) S LRQUIT=1 Q
"RTN","LRAPMRL",124,0)
 S:Y=0 LRQUIT=1
"RTN","LRAPMRL",125,0)
 Q:LRQUIT=1
"RTN","LRAPMRL",126,0)
 S LREDIAG=Y
"RTN","LRAPMRL",127,0)
 S LREDIAG=$S(LREDIAG=2:1,1:0)
"RTN","LRAPMRL",128,0)
 Q
"RTN","LRAPMRL",129,0)
CPTCHK ;Determine if CPT is activated
"RTN","LRAPMRL",130,0)
 Q:$T(ES^LRCAPES)=""
"RTN","LRAPMRL",131,0)
 S LRESCPT=$$ES^LRCAPES()
"RTN","LRAPMRL",132,0)
 Q
"RTN","LRAPMRL",133,0)
SECTION ;Choose Anatomic Pathology section (AU,SP,CY,EM)
"RTN","LRAPMRL",134,0)
 W !
"RTN","LRAPMRL",135,0)
 D ^LRAP
"RTN","LRAPMRL",136,0)
 I '$D(Y)!('$D(LRSS)) S LRQUIT=1 Q
"RTN","LRAPMRL",137,0)
 S:LRO(68)="EM" LRO(68)="ELECTRON MICROSCOPY"
"RTN","LRAPMRL",138,0)
 S LRAU=0            ; LRAU = 0 - Not Autopsy
"RTN","LRAPMRL",139,0)
 S:LRSS="AU" LRAU=1  ;      = 1 - Autosy
"RTN","LRAPMRL",140,0)
 I LRCAPA D @(LRSS_"^LRAPSWK")
"RTN","LRAPMRL",141,0)
 S LRMSG(1)=LRO(68)_" ("_LRABV_")",LRMSG(1,"F")="!?20"
"RTN","LRAPMRL",142,0)
 S LRMSG(2)="",LRMSG(2,"F")="!"
"RTN","LRAPMRL",143,0)
 D EN^DDIOL(.LRMSG) K LRMSG
"RTN","LRAPMRL",144,0)
 Q
"RTN","LRAPMRL",145,0)
ASK ;Ask etiology,function,procedure,disease,weights,measures
"RTN","LRAPMRL",146,0)
 I LREDIAG D  Q
"RTN","LRAPMRL",147,0)
 .S:'LRAU LREFPD=0
"RTN","LRAPMRL",148,0)
 .S:LRAU LRWM=0
"RTN","LRAPMRL",149,0)
 W !
"RTN","LRAPMRL",150,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","LRAPMRL",151,0)
 S DIR("A")="Edit etiology, function, procedure & disease"
"RTN","LRAPMRL",152,0)
 D ^DIR
"RTN","LRAPMRL",153,0)
 I Y="^" S LRQUIT=1 Q
"RTN","LRAPMRL",154,0)
 S LREFPD=$S(+Y:1,1:0)
"RTN","LRAPMRL",155,0)
 I LRAU D
"RTN","LRAPMRL",156,0)
 .W !
"RTN","LRAPMRL",157,0)
 .S DIR(0)="Y",DIR("B")="NO"
"RTN","LRAPMRL",158,0)
 .S DIR("A")="Edit weights and measures"
"RTN","LRAPMRL",159,0)
 .D ^DIR
"RTN","LRAPMRL",160,0)
 .I Y="^" S LRQUIT=1 Q
"RTN","LRAPMRL",161,0)
 .S LRWM=$S(+Y:1,1:0)
"RTN","LRAPMRL",162,0)
 Q
"RTN","LRAPMRL",163,0)
ACCYR ;Determine Accession Year
"RTN","LRAPMRL",164,0)
 D ACCYR^LRAPUTL(.LRAD1,LRH(0),LRAA,LRO(68))
"RTN","LRAPMRL",165,0)
 I LRAD1=-1 S LRQUIT=1 Q
"RTN","LRAPMRL",166,0)
 I LRAD1 S LRAD=$P(LRAD1,U),LRH(0)=$P(LRAD1,U,2)
"RTN","LRAPMRL",167,0)
 Q
"RTN","LRAPMRL",168,0)
ASK2 ;Ask about other fields
"RTN","LRAPMRL",169,0)
 S LRGMDF=0
"RTN","LRAPMRL",170,0)
 K LRDSC
"RTN","LRAPMRL",171,0)
 I LRFLD=1!(LRFLD=1.1) D
"RTN","LRAPMRL",172,0)
 .S:LRFLD=1 LRFLDA=7
"RTN","LRAPMRL",173,0)
 .S:LRFLD=1.1 LRFLDA=4
"RTN","LRAPMRL",174,0)
 .S LRDSC=$S(LRFLD=1:"GROSS",LRFLD=1.1:"MICROSCOPIC",1:"")
"RTN","LRAPMRL",175,0)
 .S LRDSC=LRDSC_" DESCRIPTION"
"RTN","LRAPMRL",176,0)
 S:LRFLD=1.4 LRDSC="DIAGNOSIS",LRFLDA=5
"RTN","LRAPMRL",177,0)
 S:LRFLD=1.3 LRDSC="FROZEN SECTION",LRFLDA=6
"RTN","LRAPMRL",178,0)
 I 'LREDIAG D
"RTN","LRAPMRL",179,0)
 .S DIR(0)="Y",DIR("B")="NO"
"RTN","LRAPMRL",180,0)
 .S DIR("A")="Edit "_LRDSC
"RTN","LRAPMRL",181,0)
 .D ^DIR
"RTN","LRAPMRL",182,0)
 .I Y="^" S LRQUIT=1 Q
"RTN","LRAPMRL",183,0)
 .S LRGMDF=$S(+Y:1,1:0)
"RTN","LRAPMRL",184,0)
 S:LREDIAG LRGMDF=1
"RTN","LRAPMRL",185,0)
 Q
"RTN","LRAPMRL",186,0)
SAVTXT ;Save word processing field text.
"RTN","LRAPMRL",187,0)
 S LRNOTXT=0
"RTN","LRAPMRL",188,0)
 K ^TMP("DIQ1",$J)
"RTN","LRAPMRL",189,0)
 S:'LRAU LRIENS=LRI_","_LRDFN_",",LRFILE=LRSF
"RTN","LRAPMRL",190,0)
 S:LRAU LRIENS=LRDFN_",",LRFILE=63
"RTN","LRAPMRL",191,0)
 Q:LRFLD=""
"RTN","LRAPMRL",192,0)
 S LRTMP=$$GET1^DIQ(LRFILE,LRIENS,LRFLD,"","^TMP(""DIQ1"",$J)")
"RTN","LRAPMRL",193,0)
 I LRTMP="" D
"RTN","LRAPMRL",194,0)
 .K LRMSG
"RTN","LRAPMRL",195,0)
 .S LRMSG(1)="There is no "_LRDSC_" text to modify."
"RTN","LRAPMRL",196,0)
 .S LRMSG(1,"F")="!!"
"RTN","LRAPMRL",197,0)
 .S LRMSG(2)="Report was released before entering text."
"RTN","LRAPMRL",198,0)
 .S LRMSG(2,"F")="!"
"RTN","LRAPMRL",199,0)
 .D EN^DDIOL(.LRMSG)
"RTN","LRAPMRL",200,0)
 .S LRNOTXT=1
"RTN","LRAPMRL",201,0)
 Q
"RTN","LRAPMRL",202,0)
COMPARE ;Compare report text
"RTN","LRAPMRL",203,0)
 S (LRCHG,LRQUIT,LRCT)=0
"RTN","LRAPMRL",204,0)
 S:'LRAU LRFILE="^LR(LRDFN,LRSS,LRI,LRFLD,"
"RTN","LRAPMRL",205,0)
 S:LRAU LRFILE="^LR(LRDFN,82,"
"RTN","LRAPMRL",206,0)
 I '$D(@(LRFILE_"0)")) D  Q
"RTN","LRAPMRL",207,0)
 .Q:LRNOTXT
"RTN","LRAPMRL",208,0)
 .S LRQUIT=1
"RTN","LRAPMRL",209,0)
 F  S LRCT=$O(@(LRFILE_"LRCT)")) Q:'LRCT  D
"RTN","LRAPMRL",210,0)
 .S LRXTMP=@(LRFILE_"LRCT,0)")
"RTN","LRAPMRL",211,0)
 .I '$D(^TMP("DIQ1",$J,LRCT)) S LRCHG=1 Q
"RTN","LRAPMRL",212,0)
 .S LRYTMP=^TMP("DIQ1",$J,LRCT)
"RTN","LRAPMRL",213,0)
 .I LRXTMP'=LRYTMP S LRCHG=1
"RTN","LRAPMRL",214,0)
 I 'LRCHG D
"RTN","LRAPMRL",215,0)
 .S LRCT=0 F  S LRCT=$O(^TMP("DIQ1",$J,LRCT)) Q:'LRCT  D
"RTN","LRAPMRL",216,0)
 ..I '$D(@(LRFILE_"LRCT,0)")) S LRCHG=1
"RTN","LRAPMRL",217,0)
 I 'LRCHG D  Q
"RTN","LRAPMRL",218,0)
 .D EN^DDIOL("No changes made to "_LRDSC_".","","!!")
"RTN","LRAPMRL",219,0)
 .W !
"RTN","LRAPMRL",220,0)
 .K ^TMP("DIQ1",$J)
"RTN","LRAPMRL",221,0)
 I LRCHG&(LRFLD=1.4!(LRFLD=32.3)) D  ;Indicate that the diagnosis
"RTN","LRAPMRL",222,0)
 .K LRFDA                            ;has been modified.
"RTN","LRAPMRL",223,0)
 .S:'LRAU LRFDA(LRSF,LRIENS,.172)=1
"RTN","LRAPMRL",224,0)
 .;KLL-CORRECT BUG WHERE LRSF IS NULL, REPLACE LRSF WITH 63
"RTN","LRAPMRL",225,0)
 .S:LRAU LRFDA(63,LRIENS,102.2)=1
"RTN","LRAPMRL",226,0)
 .;S:LRAU LRFDA(LRSF,LRIENS,102.2)=1
"RTN","LRAPMRL",227,0)
 .D FILE^DIE("","LRFDA")
"RTN","LRAPMRL",228,0)
 Q
"RTN","LRAPMRL",229,0)
AUDIT ;
"RTN","LRAPMRL",230,0)
 N LRNTIME
"RTN","LRAPMRL",231,0)
 K LRFDA
"RTN","LRAPMRL",232,0)
 D NOW^%DTC S LRNTIME=%
"RTN","LRAPMRL",233,0)
 S LRIENS1="+1,"_LRIENS
"RTN","LRAPMRL",234,0)
 S LRFILE=+$$GET1^DID(LRSF,LRFLDA,"","SPECIFIER")
"RTN","LRAPMRL",235,0)
 I LRFILE="" S LRQUIT=1 Q
"RTN","LRAPMRL",236,0)
 S LRFDA(1,LRFILE,LRIENS1,.01)=LRNTIME
"RTN","LRAPMRL",237,0)
 S LRFDA(1,LRFILE,LRIENS1,.02)=DUZ
"RTN","LRAPMRL",238,0)
 D UPDATE^DIE("","LRFDA(1)","LRORIEN")
"RTN","LRAPMRL",239,0)
 Q
"RTN","LRAPMRL",240,0)
STORE ;
"RTN","LRAPMRL",241,0)
 K LRIENS1
"RTN","LRAPMRL",242,0)
 S LRIENS1=LRORIEN(1)_","_LRIENS
"RTN","LRAPMRL",243,0)
 S LRWPROOT="^TMP(""DIQ1"",$J)"
"RTN","LRAPMRL",244,0)
 D WP^DIE(LRFILE,LRIENS1,1,"",LRWPROOT)
"RTN","LRAPMRL",245,0)
 K ^TMP("DIQ1",$J)
"RTN","LRAPMRL",246,0)
 Q
"RTN","LRAPMRL",247,0)
SUPRPT ;Supplementary Report
"RTN","LRAPMRL",248,0)
 K DIR
"RTN","LRAPMRL",249,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","LRAPMRL",250,0)
 S DIR("A")="Edit SUPPLEMENTARY REPORTS"
"RTN","LRAPMRL",251,0)
 D ^DIR
"RTN","LRAPMRL",252,0)
 I Y="^" S LRQUIT1=1 Q
"RTN","LRAPMRL",253,0)
 Q:Y<1
"RTN","LRAPMRL",254,0)
 N LRX,LRRLS,LRA,LRFLG,LRNOW
"RTN","LRAPMRL",255,0)
 D GETRPT^LRAPDSR Q:LRQUIT
"RTN","LRAPMRL",256,0)
 S LRRLS=1,LRRLS1=0
"RTN","LRAPMRL",257,0)
 D COPY^LRAPDSR Q:LRQUIT
"RTN","LRAPMRL",258,0)
 D RPT^LRAPDSR Q:LRQUIT
"RTN","LRAPMRL",259,0)
 S Y=LRDA
"RTN","LRAPMRL",260,0)
 D RELEAS2^LRAPDSR
"RTN","LRAPMRL",261,0)
 D COMPARE^LRAPDSR Q:LRQUIT
"RTN","LRAPMRL",262,0)
 D UNRELEAS^LRAPDSR
"RTN","LRAPMRL",263,0)
 D UPDATE^LRAPDSR Q:LRQUIT
"RTN","LRAPMRL",264,0)
 D STORE^LRAPDSR
"RTN","LRAPMRL",265,0)
 Q
"RTN","LRAPMRL",266,0)
UNLOCK ;Unlock the record
"RTN","LRAPMRL",267,0)
 D UPDATE^LRPXRM(LRDFN,$G(LRSS,"AU"),$G(LRI))
"RTN","LRAPMRL",268,0)
 L -@(LRLOCK)
"RTN","LRAPMRL",269,0)
 Q
"RTN","LRAPMRL",270,0)
END ;Clean-up variables and quit
"RTN","LRAPMRL",271,0)
 K ^TMP("LRAPBR",$J),^TMP("TIUP",$J)
"RTN","LRAPMRL",272,0)
 D CLEAN^DILF
"RTN","LRAPMRL",273,0)
 D:$T(CLEAN^LRCAPES)'="" CLEAN^LRCAPES
"RTN","LRAPMRL",274,0)
 D V^LRU
"RTN","LRAPMRL",275,0)
 Q
"RTN","LRAPRES")
0^42^B103360947
"RTN","LRAPRES",1,0)
LRAPRES ;DALOI/WTY- AP ESIG RELEASE REPORT;10/30/01 ;10/23/04  22:58
"RTN","LRAPRES",2,0)
 ;;5.2;LAB SERVICE;**259,295**;Sep 27, 1994
"RTN","LRAPRES",3,0)
 ;
"RTN","LRAPRES",4,0)
 ;Reference to NEW^TIUPNAPI supported by IA #1911
"RTN","LRAPRES",5,0)
MAIN ;
"RTN","LRAPRES",6,0)
 N LRMSG,LRDEM,LREND,LRQUIT,LRNTIME,LRPRCLSS,LRVCDE,LRMTCH
"RTN","LRAPRES",7,0)
 N LRPCEXP,LRESCPT,LRPCSTR
"RTN","LRAPRES",8,0)
 S LRESCPT=0
"RTN","LRAPRES",9,0)
 D TITLE
"RTN","LRAPRES",10,0)
 I LRQUIT D END Q
"RTN","LRAPRES",11,0)
 D CPTCHK
"RTN","LRAPRES",12,0)
 F  D  Q:LRQUIT
"RTN","LRAPRES",13,0)
 .S LRQUIT=0
"RTN","LRAPRES",14,0)
 .D MENU
"RTN","LRAPRES",15,0)
 .Q:LRQUIT
"RTN","LRAPRES",16,0)
 .D SECTION
"RTN","LRAPRES",17,0)
 .Q:LRQUIT
"RTN","LRAPRES",18,0)
 .S LREND=0
"RTN","LRAPRES",19,0)
 .I LRSEL="E" S LREND=0 D CLSSCHK^LRAPRES1(DUZ,.LREND)
"RTN","LRAPRES",20,0)
 .Q:LREND
"RTN","LRAPRES",21,0)
 .D ACCYR
"RTN","LRAPRES",22,0)
 .Q:LRQUIT
"RTN","LRAPRES",23,0)
 .D ACCPN
"RTN","LRAPRES",24,0)
 D END
"RTN","LRAPRES",25,0)
 Q
"RTN","LRAPRES",26,0)
ACCPN ;Prompt for accesion number or patient name
"RTN","LRAPRES",27,0)
 F  D  Q:LREND
"RTN","LRAPRES",28,0)
 .S (LRQUIT,LREND)=0
"RTN","LRAPRES",29,0)
 .D CPTCHK
"RTN","LRAPRES",30,0)
 .D LOOKUP^LRAPUTL(.LRDATA,LRH(0),LRO(68),LRSS,LRAD,LRAA)
"RTN","LRAPRES",31,0)
 .Q:'LRDATA
"RTN","LRAPRES",32,0)
 .I LRDATA=-1 S LREND=1 Q
"RTN","LRAPRES",33,0)
 .S LRDFN=LRDATA,LRI=LRDATA(1)
"RTN","LRAPRES",34,0)
 .S LRIENS=LRI_","_LRDFN_","
"RTN","LRAPRES",35,0)
 .I LRSEL="E" D  Q:LRQUIT
"RTN","LRAPRES",36,0)
 ..D RELCHK
"RTN","LRAPRES",37,0)
 ..Q:LRQUIT
"RTN","LRAPRES",38,0)
 ..D:'LRZ(2) BROWSE
"RTN","LRAPRES",39,0)
 ..D ESIG
"RTN","LRAPRES",40,0)
 ..Q:LRQUIT
"RTN","LRAPRES",41,0)
 ..D NOW^%DTC S LRNTIME=%
"RTN","LRAPRES",42,0)
 ..I 'LRZ(2) D TIUPREP,STORE
"RTN","LRAPRES",43,0)
 ..Q:LRQUIT
"RTN","LRAPRES",44,0)
 ..D RELEASE
"RTN","LRAPRES",45,0)
 ..Q:LRQUIT
"RTN","LRAPRES",46,0)
 ..D:'LRZ(2) MAIN^LRAPRES1(LRDFN,LRSS,LRI,LRSF,LRP,LRAC)
"RTN","LRAPRES",47,0)
 ..D OERR^LR7OB63D
"RTN","LRAPRES",48,0)
 .I LRSEL="C" D
"RTN","LRAPRES",49,0)
 ..Q:$T(CPT^LRCAPES)=""
"RTN","LRAPRES",50,0)
 ..S LRPRO=DUZ
"RTN","LRAPRES",51,0)
 ..D PROVIDR^LRAPUTL
"RTN","LRAPRES",52,0)
 ..Q:LRQUIT
"RTN","LRAPRES",53,0)
 ..D CPT^LRCAPES(LRAA,LRAD,LRAN,LRPRO)
"RTN","LRAPRES",54,0)
 .I LRSEL="V" D
"RTN","LRAPRES",55,0)
 ..D DEMARR
"RTN","LRAPRES",56,0)
 ..D INIT^LRAPSNMD(LRDFN,LRSS,LRI,LRSF,LRAA,LRAN,LRAD,.LRDEM,1)
"RTN","LRAPRES",57,0)
 Q
"RTN","LRAPRES",58,0)
TITLE ;Title
"RTN","LRAPRES",59,0)
 S LRQUIT=0
"RTN","LRAPRES",60,0)
 D CK^LRAP
"RTN","LRAPRES",61,0)
 I Y=-1 S LRQUIT=1 Q
"RTN","LRAPRES",62,0)
 W @IOF
"RTN","LRAPRES",63,0)
 S LRTEXT="Release/Electronically Sign Pathology Reports"
"RTN","LRAPRES",64,0)
 S LRMSG(1)=$$CJ^XLFSTR(LRTEXT,IOM)
"RTN","LRAPRES",65,0)
 S LRMSG(1,"F")="!!"
"RTN","LRAPRES",66,0)
 S LRMSG(2)="",LRMSG(2,"F")="!"
"RTN","LRAPRES",67,0)
 D EN^DDIOL(.LRMSG) K LRMSG
"RTN","LRAPRES",68,0)
 Q
"RTN","LRAPRES",69,0)
CPTCHK ;Determine if CPT is activated
"RTN","LRAPRES",70,0)
 Q:$T(ES^LRCAPES)=""
"RTN","LRAPRES",71,0)
 S LRESCPT=$$ES^LRCAPES()
"RTN","LRAPRES",72,0)
 Q
"RTN","LRAPRES",73,0)
DEMARR ;
"RTN","LRAPRES",74,0)
 I LRAU D
"RTN","LRAPRES",75,0)
 .S LRPRO=$$GET1^DIQ(63,LRDFN_",",13.5,"I")
"RTN","LRAPRES",76,0)
 .S LRPRO(1)=$$GET1^DIQ(63,LRDFN_",",13.5)
"RTN","LRAPRES",77,0)
 I 'LRAU D
"RTN","LRAPRES",78,0)
 .S LRPRO=$$GET1^DIQ(LRSF,LRI_","_LRDFN_",",.07,"I")
"RTN","LRAPRES",79,0)
 .S LRPRO(1)=$$GET1^DIQ(LRSF,LRI_","_LRDFN_",",.07)
"RTN","LRAPRES",80,0)
 S LRDEM("SEX")=SEX,LRDEM("DOB")=DOB
"RTN","LRAPRES",81,0)
 S LRDEM("AGE")=AGE
"RTN","LRAPRES",82,0)
 S LRDEM("SEC")=LRAA(1),LRDEM("PNM")=PNM
"RTN","LRAPRES",83,0)
 S LRDEM("SSN")=SSN,LRDEM("PRO")=LRPRO(1)
"RTN","LRAPRES",84,0)
 I LRAU D
"RTN","LRAPRES",85,0)
 .S LRDEM("DTH")=$P(VADM(6),"^",2)
"RTN","LRAPRES",86,0)
 .S LRDEM("AUDT")=$$GET1^DIQ(63,LRDFN_",",11)
"RTN","LRAPRES",87,0)
 .S LRDEM("AUTYP")=$$GET1^DIQ(63,LRDFN_",",13.7)
"RTN","LRAPRES",88,0)
 Q
"RTN","LRAPRES",89,0)
MENU ;
"RTN","LRAPRES",90,0)
 S DIR(0)="S^"
"RTN","LRAPRES",91,0)
 S:LRESCPT DIR(0)=DIR(0)_"C:CPT Coding;"
"RTN","LRAPRES",92,0)
 S DIR(0)=DIR(0)_"E:Electronically Sign Reports;V:View SNOMED Codes"
"RTN","LRAPRES",93,0)
 S DIR("A")="Selection"
"RTN","LRAPRES",94,0)
 D ^DIR
"RTN","LRAPRES",95,0)
 I $D(DTOUT)!($D(DUOUT))!($D(DIRUT))!($D(DIROUT)) S LRQUIT=1 Q
"RTN","LRAPRES",96,0)
 S LRSEL=Y
"RTN","LRAPRES",97,0)
 Q
"RTN","LRAPRES",98,0)
SECTION ;Choose Anatomic Pathology section (AU,SP,CY,EM)
"RTN","LRAPRES",99,0)
 W !
"RTN","LRAPRES",100,0)
 D ^LRAP
"RTN","LRAPRES",101,0)
 I '$D(Y)!('$D(LRSS)) S LRQUIT=1 Q
"RTN","LRAPRES",102,0)
 S:LRO(68)="EM" LRO(68)="ELECTRON MICROSCOPY"
"RTN","LRAPRES",103,0)
 S LRAU=0            ; LRAU = 0 - Not Autopsy
"RTN","LRAPRES",104,0)
 S:LRSS="AU" LRAU=1  ;      = 1 - Autosy
"RTN","LRAPRES",105,0)
 I LRCAPA D  Q:LRQUIT
"RTN","LRAPRES",106,0)
 .S X=""
"RTN","LRAPRES",107,0)
 .S:LRSS="CY" X="CYTOLOGY REPORTING"
"RTN","LRAPRES",108,0)
 .S:LRSS="SP" X="SURGICAL PATH REPORTING"
"RTN","LRAPRES",109,0)
 .D:X'="" X^LRUWK
"RTN","LRAPRES",110,0)
 .S:'$D(X) LRQUIT=1
"RTN","LRAPRES",111,0)
 ;
"RTN","LRAPRES",112,0)
 S LRSOP="Z"
"RTN","LRAPRES",113,0)
 S LRMSG(1)=LRO(68)_" ("_LRABV_")",LRMSG(1,"F")="!?20"
"RTN","LRAPRES",114,0)
 S LRMSG(2)="",LRMSG(2,"F")="!"
"RTN","LRAPRES",115,0)
 D EN^DDIOL(.LRMSG) K LRMSG
"RTN","LRAPRES",116,0)
 Q
"RTN","LRAPRES",117,0)
ACCYR ;Determine Accession Year
"RTN","LRAPRES",118,0)
 D ACCYR^LRAPUTL(.LRAD1,LRH(0),LRAA,LRO(68))
"RTN","LRAPRES",119,0)
 I LRAD1=-1 S LRQUIT=1 Q
"RTN","LRAPRES",120,0)
 I LRAD1 S LRAD=$P(LRAD1,U),LRH(0)=$P(LRAD1,U,2)
"RTN","LRAPRES",121,0)
 Q
"RTN","LRAPRES",122,0)
RELCHK ;Perform series of checks
"RTN","LRAPRES",123,0)
 N LRPAT S LRQUIT=0
"RTN","LRAPRES",124,0)
 I 'LRAU D  Q:LRQUIT
"RTN","LRAPRES",125,0)
 .S LRPAT=+$$GET1^DIQ(LRSF,LRIENS,.02,"I")
"RTN","LRAPRES",126,0)
 .S LRZ=$$GET1^DIQ(LRSF,LRIENS,.03,"I")
"RTN","LRAPRES",127,0)
 .S LRZ(1)=$$GET1^DIQ(LRSF,LRIENS,.13,"I")
"RTN","LRAPRES",128,0)
 .S LRZ(1.1)=$$GET1^DIQ(LRSF,LRIENS,.13)
"RTN","LRAPRES",129,0)
 .S LRZ(2)=$$GET1^DIQ(LRSF,LRIENS,.11,"I")
"RTN","LRAPRES",130,0)
 .I 'LRZ,'LRZ(2) D
"RTN","LRAPRES",131,0)
 ..W $C(7)
"RTN","LRAPRES",132,0)
 ..S LRMSG="No date report completed.  Cannot release."
"RTN","LRAPRES",133,0)
 ..D EN^DDIOL(LRMSG,"","!!") K LRMSG
"RTN","LRAPRES",134,0)
 ..S LRQUIT=1
"RTN","LRAPRES",135,0)
 I LRAU D  Q:LRQUIT
"RTN","LRAPRES",136,0)
 .I $G(^LR(LRDFN,"AU"))="" D  Q
"RTN","LRAPRES",137,0)
 ..S LRMSG="No information found for this accession in the "
"RTN","LRAPRES",138,0)
 ..S LRMSG=LRMSG_"LAB DATA file (#63)."
"RTN","LRAPRES",139,0)
 ..D EN^DDIOL(LRMSG,"","!!") K LRMSG
"RTN","LRAPRES",140,0)
 ..S LRQUIT=1
"RTN","LRAPRES",141,0)
 .S LRPAT=+$$GET1^DIQ(63,LRDFN_",",13.6,"I")
"RTN","LRAPRES",142,0)
 .S LRZ=$$GET1^DIQ(63,LRDFN_",",13,"I")
"RTN","LRAPRES",143,0)
 .S LRZ(1)=$$GET1^DIQ(63,LRDFN_",",14.8,"I")
"RTN","LRAPRES",144,0)
 .S LRZ(1.1)=$$GET1^DIQ(63,LRDFN_",",14.8)
"RTN","LRAPRES",145,0)
 .S LRZ(2)=$$GET1^DIQ(63,LRDFN_",",14.7,"I")
"RTN","LRAPRES",146,0)
 .;KLL-CHECK FOR PROVISIONAL DATE OR DATE REPORT COMPLETED
"RTN","LRAPRES",147,0)
 .S LRZ(3)=$$GET1^DIQ(63,LRDFN_",",14.9,"I")
"RTN","LRAPRES",148,0)
 .I 'LRZ,'LRZ(3) D
"RTN","LRAPRES",149,0)
 ..W $C(7)
"RTN","LRAPRES",150,0)
 ..S LRMSG="Provisional or date report completed required.  Cannot release."
"RTN","LRAPRES",151,0)
 ..D EN^DDIOL(LRMSG,"","!!") K LRMSG
"RTN","LRAPRES",152,0)
 ..S LRQUIT=1
"RTN","LRAPRES",153,0)
 I 'LRPAT,'LRZ(2) D
"RTN","LRAPRES",154,0)
 .W $C(7)
"RTN","LRAPRES",155,0)
 .S LRMSG="Pathologist or Cytotechnologist entry missing. Cannot release."
"RTN","LRAPRES",156,0)
 .D EN^DDIOL(LRMSG,"","!!") K LRMSG
"RTN","LRAPRES",157,0)
 .S LRQUIT=1
"RTN","LRAPRES",158,0)
 D:'LRZ(2) SUPCHK
"RTN","LRAPRES",159,0)
 Q:LRQUIT
"RTN","LRAPRES",160,0)
 I LRZ(2) D  Q:LRQUIT
"RTN","LRAPRES",161,0)
 .W $C(7)
"RTN","LRAPRES",162,0)
 .S LRMSG="Report " S:LRZ(2)=1 LRMSG=LRMSG_"has already been "
"RTN","LRAPRES",163,0)
 .S LRMSG=LRMSG_"released "
"RTN","LRAPRES",164,0)
 .S Y=LRZ(2) D DD^%DT S:LRZ(2)>1 LRMSG=LRMSG_Y
"RTN","LRAPRES",165,0)
 .S:LRZ(1)'="" LRMSG=LRMSG_" by "_LRZ(1.1)
"RTN","LRAPRES",166,0)
 .D EN^DDIOL(LRMSG,"","!!") K LRMSG
"RTN","LRAPRES",167,0)
 .S:'LRAU LRQUIT=1
"RTN","LRAPRES",168,0)
 ;KLL-DON'T ALLOW UNRELEASE IF REPT COMPLETED DATE EXISTS FOR AU 
"RTN","LRAPRES",169,0)
 I LRZ(2),LRZ S LRQUIT=1
"RTN","LRAPRES",170,0)
 S LRMSG="" D EN^DDIOL(LRMSG,"","!") K LRMSG
"RTN","LRAPRES",171,0)
 I LRZ(2),'LRZ D
"RTN","LRAPRES",172,0)
 .S DIR(0)="YA",DIR("B")="NO"
"RTN","LRAPRES",173,0)
 .S DIR("A")="Unrelease report? "
"RTN","LRAPRES",174,0)
 .D ^DIR
"RTN","LRAPRES",175,0)
 .I 'Y S LRQUIT=1
"RTN","LRAPRES",176,0)
 Q
"RTN","LRAPRES",177,0)
SUPCHK ;Check Supplementary Reports
"RTN","LRAPRES",178,0)
 N LRSR,LRSR1,LRSR2,LRFILE,LRIENS,LRIENS1
"RTN","LRAPRES",179,0)
 S LRSR=0,LRSR1=1
"RTN","LRAPRES",180,0)
 I LRSS'="AU" D
"RTN","LRAPRES",181,0)
 .Q:'+$P($G(^LR(LRDFN,LRSS,LRI,1.2,0)),U,4)
"RTN","LRAPRES",182,0)
 .S LRFILE=+$$GET1^DID(LRSF,1.2,"","SPECIFIER")
"RTN","LRAPRES",183,0)
 .S LRIENS1=LRI_","_LRDFN_","
"RTN","LRAPRES",184,0)
 .F  S LRSR=$O(^LR(LRDFN,LRSS,LRI,1.2,LRSR)) Q:LRSR'>0!('LRSR1)  D
"RTN","LRAPRES",185,0)
 ..S LRIENS=LRSR_","_LRIENS1
"RTN","LRAPRES",186,0)
 ..S LRSR1=+$$GET1^DIQ(LRFILE,LRIENS,.02,"I")
"RTN","LRAPRES",187,0)
 ..I 'LRSR1 S LRSR2=$$GET1^DIQ(LRFILE,LRIENS,.01)
"RTN","LRAPRES",188,0)
 I LRSS="AU" D
"RTN","LRAPRES",189,0)
 .Q:'+$P($G(^LR(LRDFN,84,0)),U,4)
"RTN","LRAPRES",190,0)
 .S LRFILE=63.324,LRIENS1=LRDFN_","
"RTN","LRAPRES",191,0)
 .F  S LRSR=$O(^LR(LRDFN,84,LRSR)) Q:LRSR'>0!('LRSR1)  D
"RTN","LRAPRES",192,0)
 ..S LRIENS=LRSR_","_LRIENS1
"RTN","LRAPRES",193,0)
 ..S LRSR1=+$$GET1^DIQ(LRFILE,LRIENS,.02,"I")
"RTN","LRAPRES",194,0)
 ..I 'LRSR1 S LRSR2=$$GET1^DIQ(LRFILE,LRIENS,.01)
"RTN","LRAPRES",195,0)
 I 'LRSR1 D
"RTN","LRAPRES",196,0)
 .S LRMSG="Supplementary report "_LRSR2_" has not been released.  "
"RTN","LRAPRES",197,0)
 .S LRMSG=LRMSG_"Cannot release."
"RTN","LRAPRES",198,0)
 .D EN^DDIOL(LRMSG,"","!!") K LRMSG
"RTN","LRAPRES",199,0)
 .S LRQUIT=1
"RTN","LRAPRES",200,0)
 Q
"RTN","LRAPRES",201,0)
BROWSE ;Display the report in the browser
"RTN","LRAPRES",202,0)
 S DIR(0)="YA",DIR("B")="YES"
"RTN","LRAPRES",203,0)
 S DIR("A")="View the report before signing? "
"RTN","LRAPRES",204,0)
 D ^DIR Q:'Y
"RTN","LRAPRES",205,0)
 K ^TMP("LRAPBR",$J)
"RTN","LRAPRES",206,0)
 S LRMSG="*** Report is being processed.  One moment please. ***"
"RTN","LRAPRES",207,0)
 S LRMSG=$$CJ^XLFSTR(LRMSG,IOM)
"RTN","LRAPRES",208,0)
 D EN^DDIOL(LRMSG,"","!!")
"RTN","LRAPRES",209,0)
 D INIT^LRAPBR(LRAA,LRSS,LRI,LRDFN,LRO(68),LRAU,0)
"RTN","LRAPRES",210,0)
 Q
"RTN","LRAPRES",211,0)
ESIG ;Prompt for electronic signature
"RTN","LRAPRES",212,0)
 S LRQUIT=0
"RTN","LRAPRES",213,0)
 D SIG^XUSESIG
"RTN","LRAPRES",214,0)
 I X1="" D  Q
"RTN","LRAPRES",215,0)
 .W "  SIGNATURE NOT VERIFIED"
"RTN","LRAPRES",216,0)
 .S LRQUIT=1
"RTN","LRAPRES",217,0)
 Q
"RTN","LRAPRES",218,0)
TIUPREP ;
"RTN","LRAPRES",219,0)
 K ^TMP("TIUP",$J)
"RTN","LRAPRES",220,0)
 S LRMSG="*** Report is being processed"
"RTN","LRAPRES",221,0)
 ;Exclude patient files 67, 67.1, 67.2, 67.3, 62.3 from TIU storage
"RTN","LRAPRES",222,0)
 I LRDPF'=62.3,LRDPF'[67 S LRMSG=LRMSG_" for storage in TIU"
"RTN","LRAPRES",223,0)
 S LRMSG=LRMSG_".  One moment please. ***"
"RTN","LRAPRES",224,0)
 S LRMSG=$$CJ^XLFSTR(LRMSG,IOM)
"RTN","LRAPRES",225,0)
 D EN^DDIOL(LRMSG,"","!!")
"RTN","LRAPRES",226,0)
 D INIT^LRAPBR(LRAA,LRSS,LRI,LRDFN,LRO(68),LRAU,1,LRNTIME)
"RTN","LRAPRES",227,0)
 Q
"RTN","LRAPRES",228,0)
RELEASE ;
"RTN","LRAPRES",229,0)
 I 'LRAU D
"RTN","LRAPRES",230,0)
 .S LRRC=$$GET1^DIQ(LRSF,LRIENS,.1,"I")
"RTN","LRAPRES",231,0)
 .I LRCAPA,'LRAU D C^LRAPSWK
"RTN","LRAPRES",232,0)
 .S DR=".11////^S X=LRNTIME;.13////^S X=DUZ"
"RTN","LRAPRES",233,0)
 .S DIE="^LR(LRDFN,LRSS,",DA=LRI,DA(1)=LRDFN
"RTN","LRAPRES",234,0)
 .;KLL-Set LRA for xref call to LRWOMEN
"RTN","LRAPRES",235,0)
 .S LRA=^LR(LRDFN,LRSS,LRI,0)
"RTN","LRAPRES",236,0)
 I LRAU D
"RTN","LRAPRES",237,0)
 .S DR="14.7////^S X=$S(LRZ(2):""@"",1:LRNTIME);"
"RTN","LRAPRES",238,0)
 .S DR=DR_"14.8////^S X=$S(LRZ(2):""@"",1:DUZ);"
"RTN","LRAPRES",239,0)
 .S DIE="^LR(",DA=LRDFN
"RTN","LRAPRES",240,0)
 D CK^LRU
"RTN","LRAPRES",241,0)
 Q:$D(LR("CK"))
"RTN","LRAPRES",242,0)
 D ^DIE
"RTN","LRAPRES",243,0)
 D UPDATE^LRPXRM(LRDFN,$G(LRSS,"AU"),$G(LRI))
"RTN","LRAPRES",244,0)
 D FRE^LRU
"RTN","LRAPRES",245,0)
 S LRMSG="*** Report "
"RTN","LRAPRES",246,0)
 I LRZ(2),LRAU S LRMSG=LRMSG_"un"
"RTN","LRAPRES",247,0)
 S LRMSG=LRMSG_"released. ***"
"RTN","LRAPRES",248,0)
 D EN^DDIOL($$CJ^XLFSTR(LRMSG,IOM),"","!!") K MSG
"RTN","LRAPRES",249,0)
 I "CYSP"[LRSS,LRCAPA D WKLD Q
"RTN","LRAPRES",250,0)
 ;I LRCAPA,"SPCYEM"[LRSS,LRD(1)'="","MBA"[LRD(1) D C1^LRAPSWK
"RTN","LRAPRES",251,0)
 Q
"RTN","LRAPRES",252,0)
STORE ;Store report in TIU
"RTN","LRAPRES",253,0)
 N LRTITLE,LRIENS,LRFILE,LRFDA,LRTIUPTR
"RTN","LRAPRES",254,0)
 ;Display informational message if referral patient
"RTN","LRAPRES",255,0)
 I LRDPF=62.3!(LRDPF[67) D REFRRL^LRAPUTL  Q
"RTN","LRAPRES",256,0)
 ;KLL-EDIT ADDED FOR MULTIDIVISIONAL LABS,TRANSLATE LRSS TO CORRECT
"RTN","LRAPRES",257,0)
 ;    NAME TO ENSURE SUCCESSFUL MATCH IN TIU(8925.1)
"RTN","LRAPRES",258,0)
 S:LRSS="SP" LRO68="SURGICAL PATHOLOGY"
"RTN","LRAPRES",259,0)
 S:LRSS="CY" LRO68="CYTOPATHOLOGY"
"RTN","LRAPRES",260,0)
 S:LRSS="EM" LRO68="ELECTRON MICROSCOPY"
"RTN","LRAPRES",261,0)
 S:LRSS="AU" LRO68="AUTOPSY"
"RTN","LRAPRES",262,0)
 S LRTITLE=$$FIND1^DIC(8925.1,,"O","LR "_LRO68_" REPORT")
"RTN","LRAPRES",263,0)
 D NEW^TIUPNAPI(.LRTIUPTR,DFN,DUZ,LRNTIME,LRTITLE,,,,DUZ)
"RTN","LRAPRES",264,0)
 I +LRTIUPTR=-1 D  Q
"RTN","LRAPRES",265,0)
 .S LRMSG="*** Report storage in TIU failed. ***"
"RTN","LRAPRES",266,0)
 .S LRMSG=$$CJ^XLFSTR(LRMSG,IOM)
"RTN","LRAPRES",267,0)
 .D EN^DDIOL(LRMSG,"","!!")
"RTN","LRAPRES",268,0)
 .S LRQUIT=1
"RTN","LRAPRES",269,0)
 S LRMSG="*** Report storage in TIU is complete. ***"
"RTN","LRAPRES",270,0)
 S LRMSG=$$CJ^XLFSTR(LRMSG,IOM)
"RTN","LRAPRES",271,0)
 D EN^DDIOL(LRMSG,"","!!")
"RTN","LRAPRES",272,0)
 ;KLL-Calculate checksum of TIU report text 
"RTN","LRAPRES",273,0)
 S LRVAL="^TIU(8925,"_+LRTIUPTR_",""TEXT"")"
"RTN","LRAPRES",274,0)
 S LRCHKSUM=$$CHKSUM^XUSESIG1(LRVAL)
"RTN","LRAPRES",275,0)
 ;Store pointer & checksum information in the LAB DATA (#63) file
"RTN","LRAPRES",276,0)
 S LRIENS="+1,"_$S('LRAU:LRI_",",1:"")_LRDFN_","
"RTN","LRAPRES",277,0)
 S LRFILE=$S(LRSS="SP":63.19,LRSS="CY":63.47,LRSS="EM":63.49,1:"")
"RTN","LRAPRES",278,0)
 S:LRFILE="" LRFILE=$S(LRSS="AU":63.101,1:"")
"RTN","LRAPRES",279,0)
 S LRFDA(1,LRFILE,LRIENS,.01)=LRNTIME
"RTN","LRAPRES",280,0)
 S LRFDA(1,LRFILE,LRIENS,1)=+LRTIUPTR
"RTN","LRAPRES",281,0)
 S LRFDA(1,LRFILE,LRIENS,2)=LRCHKSUM
"RTN","LRAPRES",282,0)
 D UPDATE^DIE("","LRFDA(1)")
"RTN","LRAPRES",283,0)
 D RETRACT^LRAPRES1(LRDFN,LRSS,LRI,+LRTIUPTR)
"RTN","LRAPRES",284,0)
 Q
"RTN","LRAPRES",285,0)
WKLD ;Capture workload
"RTN","LRAPRES",286,0)
 K LRFDA,ERR,IENS,OROUT,ORIEN
"RTN","LRAPRES",287,0)
 S LRK=$P(^LR(LRDFN,LRSS,LRI,0),"^",11) Q:'LRK
"RTN","LRAPRES",288,0)
 Q:$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRT,0))
"RTN","LRAPRES",289,0)
 S RNUM=1
"RTN","LRAPRES",290,0)
 S IENS="+"_RNUM_","_LRAN_","_LRAD_","_LRAA_","
"RTN","LRAPRES",291,0)
 S FILE=68.04,ORIEN(1)=LRT
"RTN","LRAPRES",292,0)
 S LRFDA(1,FILE,IENS,.01)=LRT
"RTN","LRAPRES",293,0)
 S LRFDA(1,FILE,IENS,1)=50
"RTN","LRAPRES",294,0)
 S LRFDA(1,FILE,IENS,3)=DUZ
"RTN","LRAPRES",295,0)
 S LRFDA(1,FILE,IENS,4)=LRK
"RTN","LRAPRES",296,0)
 S FILE1=68.14
"RTN","LRAPRES",297,0)
 S C=0 F  S C=$O(LRT(C)) Q:'C  D
"RTN","LRAPRES",298,0)
 .S RNUM=RNUM+1
"RTN","LRAPRES",299,0)
 .S ORIEN(RNUM)=C
"RTN","LRAPRES",300,0)
 .S IENS1="+"_RNUM_","_IENS
"RTN","LRAPRES",301,0)
 .S LRFDA(1,FILE1,IENS1,.01)=C
"RTN","LRAPRES",302,0)
 .S LRFDA(1,FILE1,IENS1,.02)=1
"RTN","LRAPRES",303,0)
 .S LRFDA(1,FILE1,IENS1,.03)=0
"RTN","LRAPRES",304,0)
 .S LRFDA(1,FILE1,IENS1,.04)=0
"RTN","LRAPRES",305,0)
 .S LRFDA(1,FILE1,IENS1,1)=LRK
"RTN","LRAPRES",306,0)
 .S LRFDA(1,FILE1,IENS1,2)=DUZ
"RTN","LRAPRES",307,0)
 .S LRFDA(1,FILE1,IENS1,3)=DUZ(2)
"RTN","LRAPRES",308,0)
 .S LRFDA(1,FILE1,IENS1,4)=LRAA
"RTN","LRAPRES",309,0)
 .S LRFDA(1,FILE1,IENS1,5)=LRAA
"RTN","LRAPRES",310,0)
 .S LRFDA(1,FILE1,IENS1,6)=LRAA
"RTN","LRAPRES",311,0)
 D UPDATE^DIE("","LRFDA(1)","ORIEN","OROUT")
"RTN","LRAPRES",312,0)
 Q
"RTN","LRAPRES",313,0)
END ;Clean-up variables and quit
"RTN","LRAPRES",314,0)
 K LRAD1,LRDATA,LRAU,LRRDTE,LRTEXT,LRSEL,LRFILE,LRIENS,LRIENS1
"RTN","LRAPRES",315,0)
 K LRFDA,ERR,IENS,OROUT,ORIEN,LRTMP
"RTN","LRAPRES",316,0)
 K ^TMP("LRAPBR",$J),^TMP("TIUP",$J)
"RTN","LRAPRES",317,0)
 D:$T(CLEAN^LRCAPES)'="" CLEAN^LRCAPES
"RTN","LRAPRES",318,0)
 D V^LRU
"RTN","LRAPRES",319,0)
 Q
"RTN","LRLOG")
0^33^B3754794
"RTN","LRLOG",1,0)
LRLOG ;SLC/STAFF - Edit Log ;10/15/03  09:08
"RTN","LRLOG",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRLOG",3,0)
 ;
"RTN","LRLOG",4,0)
TIMESTMP(PAT,SUB,CDT,USER,TIMESTMP) ; set a timestamp entry in edit log
"RTN","LRLOG",5,0)
 ; from LRPX,LRPXRM
"RTN","LRLOG",6,0)
 ;N DATA,NUM
"RTN","LRLOG",7,0)
 ;S PAT=+$G(PAT)
"RTN","LRLOG",8,0)
 ;S SUB=$G(SUB)
"RTN","LRLOG",9,0)
 ;S CDT=$G(CDT)
"RTN","LRLOG",10,0)
 ;Q:'PAT  Q:'$L(SUB)  Q:'CDT
"RTN","LRLOG",11,0)
 ;I '$G(TIMESTMP) S TIMESTMP=$$NOW^XLFDT
"RTN","LRLOG",12,0)
 ;S USER=$G(USER)
"RTN","LRLOG",13,0)
 ;S NUM=+$P(^LRLOG(0),U,3)
"RTN","LRLOG",14,0)
 ;S DATA=TIMESTMP_U_PAT_U_SUB_U_CDT_U_USER
"RTN","LRLOG",15,0)
 ;L +^LRLOG(0):20 I '$T Q
"RTN","LRLOG",16,0)
 ;S NUM=1+$P(^LRLOG(0),U,3)
"RTN","LRLOG",17,0)
 ;F  Q:'$D(^LRLOG(NUM))  S NUM=NUM+1
"RTN","LRLOG",18,0)
 ;S $P(^LRLOG(0),U,3)=NUM,$P(^(0),U,4)=$P(^(0),U,4)+1
"RTN","LRLOG",19,0)
 ;S ^LRLOG(NUM)=DATA
"RTN","LRLOG",20,0)
 ;L -^LRLOG(0)
"RTN","LRLOG",21,0)
 ;S ^LRLOG("B",TIMESTMP,NUM)=""
"RTN","LRLOG",22,0)
 ;S ^LRLOG("P",PAT,TIMESTMP,NUM)=""
"RTN","LRLOG",23,0)
 Q
"RTN","LRLOG",24,0)
 ;
"RTN","LRLOG",25,0)
INIT ; initialize setup of edit log
"RTN","LRLOG",26,0)
 ; sets last edit as timestamp on old data
"RTN","LRLOG",27,0)
 ; does not set user
"RTN","LRLOG",28,0)
 ;N CDT,DATA,DFN,I,IDT,LRDFN,RELEASE,SUB,TIMESTMP
"RTN","LRLOG",29,0)
 ;S I=0 F  S I=$O(^LRLOG(I)) Q:I=""  K ^LRLOG(I)
"RTN","LRLOG",30,0)
 ;S $P(^LRLOG(0),U,3,4)="0^0"
"RTN","LRLOG",31,0)
 ;S LRDFN=.9
"RTN","LRLOG",32,0)
 ;F  S LRDFN=$O(^LR(LRDFN)) Q:LRDFN<1  D
"RTN","LRLOG",33,0)
 ;. S DFN=$$DFN^LRPXAPIU(LRDFN)
"RTN","LRLOG",34,0)
 ;. I 'DFN Q
"RTN","LRLOG",35,0)
 ;. S SUB="CH"
"RTN","LRLOG",36,0)
 ;. S IDT=0
"RTN","LRLOG",37,0)
 ;. F  S IDT=$O(^LR(LRDFN,SUB,IDT)) Q:IDT<1  D
"RTN","LRLOG",38,0)
 ;.. S DATA=$G(^LR(LRDFN,SUB,IDT,0))
"RTN","LRLOG",39,0)
 ;.. I '$L(DATA) Q
"RTN","LRLOG",40,0)
 ;.. S TIMESTMP=+$P(DATA,U,3)
"RTN","LRLOG",41,0)
 ;.. I 'TIMESTMP Q
"RTN","LRLOG",42,0)
 ;.. S CDT=+DATA
"RTN","LRLOG",43,0)
 ;.. I 'CDT Q
"RTN","LRLOG",44,0)
 ;.. D TIMESTMP(DFN,SUB,CDT,,TIMESTMP)
"RTN","LRLOG",45,0)
 ;. S SUB="MI"
"RTN","LRLOG",46,0)
 ;. S IDT=0
"RTN","LRLOG",47,0)
 ;. F  S IDT=$O(^LR(LRDFN,SUB,IDT)) Q:IDT<1  D
"RTN","LRLOG",48,0)
 ;.. S DATA=$G(^LR(LRDFN,SUB,IDT,0))
"RTN","LRLOG",49,0)
 ;.. I '$L(DATA) Q
"RTN","LRLOG",50,0)
 ;.. S CDT=+DATA
"RTN","LRLOG",51,0)
 ;.. I 'CDT Q
"RTN","LRLOG",52,0)
 ;.. S TIMESTMP=+$P(DATA,U,3)
"RTN","LRLOG",53,0)
 ;.. F I=1,5,8,11,16 I $G(^LR(LRDFN,SUB,IDT,I))>TIMESTMP S TIMESTMP=+^(I)
"RTN","LRLOG",54,0)
 ;.. I 'TIMESTMP Q
"RTN","LRLOG",55,0)
 ;.. D TIMESTMP(DFN,SUB,CDT,,TIMESTMP)
"RTN","LRLOG",56,0)
 ;. F SUB="CY","EM","SP" D
"RTN","LRLOG",57,0)
 ;.. S IDT=0
"RTN","LRLOG",58,0)
 ;.. F  S IDT=$O(^LR(LRDFN,SUB,IDT)) Q:IDT<1  D
"RTN","LRLOG",59,0)
 ;... S DATA=$G(^LR(LRDFN,SUB,IDT,0))
"RTN","LRLOG",60,0)
 ;... I '$L(DATA) Q
"RTN","LRLOG",61,0)
 ;... S TIMESTMP=+$P(DATA,U,3)
"RTN","LRLOG",62,0)
 ;... I 'TIMESTMP Q
"RTN","LRLOG",63,0)
 ;... S RELEASE=+$P(DATA,U,11)
"RTN","LRLOG",64,0)
 ;... I 'RELEASE Q
"RTN","LRLOG",65,0)
 ;... I RELEASE>TIMESTMP S TIMESTMP=RELEASE
"RTN","LRLOG",66,0)
 ;... S CDT=+DATA
"RTN","LRLOG",67,0)
 ;... I 'CDT Q
"RTN","LRLOG",68,0)
 ;... D TIMESTMP(DFN,SUB,CDT,,TIMESTMP)
"RTN","LRLOG",69,0)
 ;. S SUB="AU"
"RTN","LRLOG",70,0)
 ;. S DATA=$G(^LR(LRDFN,SUB))
"RTN","LRLOG",71,0)
 ;. I 'DATA Q
"RTN","LRLOG",72,0)
 ;. S TIMESTMP=+$P(DATA,U,3)
"RTN","LRLOG",73,0)
 ;. I 'TIMESTMP Q
"RTN","LRLOG",74,0)
 ;. S RELEASE=+$P(DATA,U,15)
"RTN","LRLOG",75,0)
 ;. I 'RELEASE Q
"RTN","LRLOG",76,0)
 ;. I RELEASE>TIMESTMP S TIMESTMP=RELEASE
"RTN","LRLOG",77,0)
 ;. S CDT=$$DOD^LRPXAPIU(DFN)
"RTN","LRLOG",78,0)
 ;. I 'CDT Q
"RTN","LRLOG",79,0)
 ;. D TIMESTMP(DFN,SUB,CDT,,TIMESTMP)
"RTN","LRLOG",80,0)
 Q
"RTN","LRLOG",81,0)
 ;
"RTN","LRLOG",82,0)
DATEINTG(DATE1,DATE2,CNT) ; check integrity on patient's that were edited during a time range
"RTN","LRLOG",83,0)
 ; returns ^TMP("LRLOG",$J),^TMP("LRLOG PATS",$J) - must kill after use
"RTN","LRLOG",84,0)
 ;N DFN,NUMBER
"RTN","LRLOG",85,0)
 ;S DATE1=+$G(DATE1,1),DATE2=+$G(DATE2,9999999)
"RTN","LRLOG",86,0)
 ;D PATS(DATE1,DATE2,.CNT)
"RTN","LRLOG",87,0)
 ;I 'CNT S ^TMP("LRLOG",$J)="0^0" Q
"RTN","LRLOG",88,0)
 ;S (CNT,DFN,NUMBER)=0
"RTN","LRLOG",89,0)
 ;F  S DFN=$O(^TMP("LRLOG PATS",$J,DFN)) Q:DFN<1  D
"RTN","LRLOG",90,0)
 ;. D PATINTEG(DFN,.CNT)
"RTN","LRLOG",91,0)
 ;. S NUMBER=NUMBER+1
"RTN","LRLOG",92,0)
 ;S ^TMP("LRLOG",$J)=CNT_U_NUMBER
"RTN","LRLOG",93,0)
 Q
"RTN","LRLOG",94,0)
 ;
"RTN","LRLOG",95,0)
PATS(DATE1,DATE2,CNT) ; get patients that were edited during a time range
"RTN","LRLOG",96,0)
 ; returns ^TMP("LRLOG PATS",$J) - must kill after use
"RTN","LRLOG",97,0)
 ;N BEGCDT,CDT,DATA,DFN,ENDCDT,NUM,TSDT
"RTN","LRLOG",98,0)
 ;K ^TMP("LRLOG PATS",$J)
"RTN","LRLOG",99,0)
 ;S BEGCDT=9999999,(CNT,ENDCDT)=0
"RTN","LRLOG",100,0)
 ;S TSDT=$G(DATE1)-.00001
"RTN","LRLOG",101,0)
 ;F  S TSDT=$O(^LRLOG("B",TSDT)) Q:TSDT<1  Q:TSDT>DATE2  D
"RTN","LRLOG",102,0)
 ;. S NUM=0
"RTN","LRLOG",103,0)
 ;. F  S NUM=$O(^LRLOG("B",TSDT,NUM)) Q:NUM<1  D
"RTN","LRLOG",104,0)
 ;.. S DATA=$G(^LRLOG(NUM))
"RTN","LRLOG",105,0)
 ;.. S DFN=+$P(DATA,U,2)
"RTN","LRLOG",106,0)
 ;.. S CDT=+$P(DATA,U,4)
"RTN","LRLOG",107,0)
 ;.. I CDT<BEGCDT S BEGCDT=CDT
"RTN","LRLOG",108,0)
 ;.. I CDT>ENDCDT S ENDCDT=CDT
"RTN","LRLOG",109,0)
 ;.. Q:'DFN  Q:'CDT
"RTN","LRLOG",110,0)
 ;.. I '$D(^TMP("LRLOG PATS",$J,DFN)) S CNT=CNT+1
"RTN","LRLOG",111,0)
 ;.. S ^TMP("LRLOG PATS",$J,DFN)=BEGCDT_U_ENDCDT
"RTN","LRLOG",112,0)
 ;.. S ^TMP("LRLOG PATS",$J,DFN,NUM)=""
"RTN","LRLOG",113,0)
 ;S ^TMP("LRLOG PATS",$J)=CNT
"RTN","LRLOG",114,0)
 Q
"RTN","LRLOG",115,0)
 ;
"RTN","LRLOG",116,0)
PATINTEG(DFN,CNT) ; check integrity of a patient
"RTN","LRLOG",117,0)
 ; returns ^TMP("LRLOG",$J) - must kill after use
"RTN","LRLOG",118,0)
 ;K ^TMP("LRLOG",$J,DFN)
"RTN","LRLOG",119,0)
 ;S CNT=+$G(CNT)
"RTN","LRLOG",120,0)
 ;D CHKPAT^LRPXCHK(DFN)
"RTN","LRLOG",121,0)
 ;I $D(^TMP("LRLOG",$J,DFN)) S CNT=CNT+1
"RTN","LRLOG",122,0)
 Q
"RTN","LRLOG",123,0)
 ;
"RTN","LRLOG",124,0)
TESTP ; test for patient integrity
"RTN","LRLOG",125,0)
 ;N DIC,X,Y K DIC
"RTN","LRLOG",126,0)
 ;S DIC=2,DIC(0)="AEMOQ"
"RTN","LRLOG",127,0)
 ;D ^DIC I Y<1 Q
"RTN","LRLOG",128,0)
 ;D PATINTEG(+Y)
"RTN","LRLOG",129,0)
 ;K ^TMP("LRLOG",$J)
"RTN","LRLOG",130,0)
 Q
"RTN","LRLOG",131,0)
 ;
"RTN","LRLOG",132,0)
TESTD ; test for integrity of patients that were edited during a date range
"RTN","LRLOG",133,0)
 ;N CNT,DFN,ERR,FROM,TO
"RTN","LRLOG",134,0)
 ;D GETDATE^LRPXAPPU(.FROM,.TO,.ERR) I ERR Q
"RTN","LRLOG",135,0)
 ;S CNT=0
"RTN","LRLOG",136,0)
 ;D DATEINTG(FROM,TO,.CNT)
"RTN","LRLOG",137,0)
 ;S DFN=0
"RTN","LRLOG",138,0)
 ;F  S DFN=$O(^TMP("LRLOG PATS",$J,DFN)) Q:DFN<.5  W !,DFN," ",$P(^DPT(DFN,0),U)," checked"
"RTN","LRLOG",139,0)
 ;K ^TMP("LRLOG",$J),^TMP("LRLOG PATS",$J)
"RTN","LRLOG",140,0)
 Q
"RTN","LRLOG",141,0)
 ;
"RTN","LRLOG",142,0)
LTS() ; $$() -> last timestamp ien
"RTN","LRLOG",143,0)
 ;N TSDT
"RTN","LRLOG",144,0)
 ;S TSDT=+$O(^LRLOG("B",""),-1)
"RTN","LRLOG",145,0)
 ;Q +$O(^LRLOG("B",TSDT,0))
"RTN","LRLOG",146,0)
 Q 0 ;remove after testing
"RTN","LRLOG",147,0)
 ;
"RTN","LRLOG",148,0)
LPTS(DFN) ; $$(dfn) -> patient's last timestamp ien
"RTN","LRLOG",149,0)
 ;N TSDT
"RTN","LRLOG",150,0)
 ;S DFN=+$G(DFN)
"RTN","LRLOG",151,0)
 ;S TSDT=+$O(^LRLOG("P",DFN,""),-1)
"RTN","LRLOG",152,0)
 ;Q +$O(^LRLOG("P",DFN,TSDT,0))
"RTN","LRLOG",153,0)
 Q 0 ;remove after testing
"RTN","LRLOG",154,0)
 ;
"RTN","LRLOG",155,0)
TSDT(TSDT,TS) ; API - returns array of timestamps for a timestamp date/time
"RTN","LRLOG",156,0)
 ;N NUM K TS
"RTN","LRLOG",157,0)
 ;S TSDT=+$G(TSDT)
"RTN","LRLOG",158,0)
 ;S NUM=0
"RTN","LRLOG",159,0)
 ;F  S NUM=$O(^LRLOG("B",TSDT,NUM)) Q:NUM<1  S TS(NUM)=""
"RTN","LRLOG",160,0)
 Q
"RTN","LRLOG",161,0)
 ;
"RTN","LRLOG",162,0)
PTSDT(DFN,TSDT,TS) ; API - returns patient's array of timestamps for a timestamp date/time
"RTN","LRLOG",163,0)
 ;N NUM K TS
"RTN","LRLOG",164,0)
 ;S DFN=+$G(DFN),TSDT=+$G(TSDT)
"RTN","LRLOG",165,0)
 ;S NUM=0
"RTN","LRLOG",166,0)
 ;F  S NUM=$O(^LRLOG("P",DFN,TSDT,NUM)) Q:NUM<1  S TS(NUM)=""
"RTN","LRLOG",167,0)
 Q
"RTN","LRLOG",168,0)
 ;
"RTN","LRLOG",169,0)
NTSDT(TSDT) ; $$(timestamp date/time) -> next timestamp ien from a timestamp date/time
"RTN","LRLOG",170,0)
 ;S TSDT=+$G(TSDT)
"RTN","LRLOG",171,0)
 ;Q +$O(^LRLOG("B",TSDT),-1)
"RTN","LRLOG",172,0)
 Q 0 ;remove after testing
"RTN","LRLOG",173,0)
 ;
"RTN","LRLOG",174,0)
NPTSDT(DFN,TSDT) ; $$(dfn,timestamp date/time) -> patient's next timestamp date/time
"RTN","LRLOG",175,0)
 ;S DFN=+$G(DFN),TSDT=+$G(TSDT)
"RTN","LRLOG",176,0)
 ;Q +$O(^LRLOG("P",DFN,TSDT),-1)
"RTN","LRLOG",177,0)
 Q 0 ;remove after testing
"RTN","LRLOG",178,0)
 ;
"RTN","LRLOG",179,0)
LOG(TS) ; $$(timestamp ien) -> timestamp entry: timestamp^dfn^sub^cdt^user
"RTN","LRLOG",180,0)
 ;Q $G(^LRLOG(+$G(TS)))
"RTN","LRLOG",181,0)
 Q 0 ;remove after testing
"RTN","LRLOG",182,0)
 ;
"RTN","LRMIEDZ")
0^19^B6348324
"RTN","LRMIEDZ",1,0)
LRMIEDZ ;AVAMC/REG/SLC/CJS/BA - MICROBIOLOGY EDIT ROUTINE ;2/25/03  22:20
"RTN","LRMIEDZ",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRMIEDZ",3,0)
 ;from LRVR and option LRMIEDZ
"RTN","LRMIEDZ",4,0)
BEGIN S LREND=0,LRACC="",LRSS="MI",LRVT="RE" D ^LRPARAM,DATE
"RTN","LRMIEDZ",5,0)
END ;from LRFAST,LRVER
"RTN","LRMIEDZ",6,0)
 I $D(LRCSQ),$O(^XTMP("LRCAP",LRCSQ,DUZ,0)) D STD^LRCAPV
"RTN","LRMIEDZ",7,0)
ANN D:$P(LRPARAM,U,14) ANN^LRCAPV ; Force workload program
"RTN","LRMIEDZ",8,0)
 K DD,DR,GLB,LRCAPMS,LRCDEF,LRCDEF0,LRCNT,LRCODE,LRCODEN,LRCSQ,LRCY,LRP,LRPN,LRQC,LRSSC,LRSSCX,LRSTD,LRT,LRTIME,NODE,NODE0,ZTSK
"RTN","LRMIEDZ",9,0)
 K %,A6,AGE,C,D,D0,D1,DA,DFN,DIC,DIE,DLAYGO,DOB,DTOUT,DUOUT,DX,I,II,J,K,LRAA,LRACC,LRAD,LRANOK,LRBG0,LRBUG,LRCAPOK,LRCDT,LRDFN,LRDPF,LREAL,LREND,LRFIFO,LRI,LRIDT,LRLLOC,LRMIDEF,LRMIOTH,LRNB,LRODA,LRODIE,LRVT
"RTN","LRMIEDZ",10,0)
 K LRODT,LRPTP,LRSAME,LRSB,LRSCREEN,LRSN,LRSPEC,LRSS,LRTEC,LRTS,LRTX,LRUNDO,LRWRD,N,PNM,POP,S,SEX,SSN,X,Y,Z
"RTN","LRMIEDZ",11,0)
 Q
"RTN","LRMIEDZ",12,0)
DATE D ^LRMIU4 Q:LRAA<1  D:$P(LRPARAM,U,14) ^LRCAPV G:LREND ANN
"RTN","LRMIEDZ",13,0)
 S DIC=60,DIC("S")="I $P(^(0),U,4)=""MI""",DIC(0)="AEMOQ",DIC("A")="Select TEST/PROCEDURE: " D ^DIC K DIC Q:$D(DUOUT)  S LRPTP=+Y
"RTN","LRMIEDZ",14,0)
 I Y<1 W !,"None Preselected",!,"Accession # ",LRAN
"RTN","LRMIEDZ",15,0)
 S LRMIDEF=$P(^LAB(69.9,1,1),U,10),LRMIOTH=$P(^(1),U,11) D ^LRMIEDZ2
"RTN","LRMIEDZ",16,0)
 Q
"RTN","LRMIEDZ",17,0)
UNDO ;from LRMIEDZ2
"RTN","LRMIEDZ",18,0)
 ;W:'$P(^LR(LRDFN,"MI",LRIDT,0),U,9) !,"Report is changed to 'AMENDED'",!
"RTN","LRMIEDZ",19,0)
 S $P(^LR(LRDFN,"MI",LRIDT,0),U,9)=1,$P(^(0),U,3,4)=U,$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),U,4)="",$P(^LRO(68,LRAA,1,LRAD,1,+LRAN,4,LRTS,0),U,4,5)=DUZ_U_DT,^LRO(68,LRAA,1,LRAD,1,"AD",DT,+LRAN)="",^LRO(68,LRAA,1,LRAD,1,"AC",DT,+LRAN)=""
"RTN","LRMIEDZ",20,0)
 D UPDATE^LRPXRM(LRDFN,"MI",LRIDT)
"RTN","LRMIEDZ",21,0)
 Q
"RTN","LRMIEDZ2")
0^20^B18087286
"RTN","LRMIEDZ2",1,0)
LRMIEDZ2 ;SLC/CJS/BA,AVAMC/REG - MICROBIOLOGY EDIT ROUTINE ;3/2/03  18:06
"RTN","LRMIEDZ2",2,0)
 ;;5.2;LAB SERVICE;**23,104,242,295**;Sep 27, 1994
"RTN","LRMIEDZ2",3,0)
 ;from LRFAST,LRMIEDZ,LRVER
"RTN","LRMIEDZ2",4,0)
PAT S X=LRAN F I=0:0 R:'$D(LRAN) !!,"Accession #: ",X:DTIME Q:X=""!(X[U)  D
"RTN","LRMIEDZ2",5,0)
 .S LRANOK=1,LRCAPOK=1 D LRANX^LRMIU4 D:LRANOK PAT1 L:$G(LRANOK) -^LR(LRDFN,"MI",LRIDT)
"RTN","LRMIEDZ2",6,0)
 .K LRTS D:LRCAPOK&(LRANOK)&($P(LRPARAM,U,14)) ^LRCAPV1 K:LRANOK LRAN I 'LRANOK W !,"Enter the accession number" K LRAN
"RTN","LRMIEDZ2",7,0)
 Q
"RTN","LRMIEDZ2",8,0)
PAT1 S LRDFN=+^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRIDT=9999999-^(3),LRCDT=+^(3),LREAL=$P(^(3),U,2),LRI=+$O(^(5,0)),LRSPEC=$S($D(^(LRI,0)):+^(0),1:"")
"RTN","LRMIEDZ2",9,0)
 I '$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0)) W !,"No tests associated with this accession" D  S LRANOK=0 Q
"RTN","LRMIEDZ2",10,0)
 .Q:$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.2))," ")=$P(^LRO(68,LRAA,0),U,11)
"RTN","LRMIEDZ2",11,0)
 .W !,"Verify with accession #: ",$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.2))
"RTN","LRMIEDZ2",12,0)
 L +^LR(LRDFN,"MI",LRIDT):1 I '$T W !!?10,"Someone else is editing this accession ",!,$C(7) S LRANOK=0 Q
"RTN","LRMIEDZ2",13,0)
 I $D(^LR(LRDFN,"MI",LRIDT,0)) S (LRBG0,Y(0))=^(0)
"RTN","LRMIEDZ2",14,0)
 I '$D(^LR(LRDFN,"MI",LRIDT,0)) D BB
"RTN","LRMIEDZ2",15,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3),LRUNDO=0 D PT^LRX W !!,?5,PNM,"   SSN: ",SSN W:LRDPF=2 "  LOC: ",$S($L(LRWRD):LRWRD,1:$S($D(^LR(LRDFN,.1)):^(.1),1:"??"))
"RTN","LRMIEDZ2",16,0)
 I $P(^LR(LRDFN,"MI",LRIDT,0),U,3) W !,"Final report has been verified by microbiology supervisor.",$C(7),!,"If you proceed in editing, this report will need to be reverified."
"RTN","LRMIEDZ2",17,0)
 F I=0:0 W !,?10,"OK" S %=1 D YN^DICN Q:%  W !,"Enter 'Y' or 'N':"
"RTN","LRMIEDZ2",18,0)
 I %=2!(%<0) S LRCAPOK=0 Q
"RTN","LRMIEDZ2",19,0)
 I $P(^LR(LRDFN,"MI",LRIDT,0),U,3)!$P(^LR(LRDFN,"MI",LRIDT,0),U,9) S LRUNDO=1 ;W:$P(^(0),U,9) !,"(This is an AMENDED report)",!
"RTN","LRMIEDZ2",20,0)
 F I=0:0 D EC^LRMIEDZ4 Q:$D(LRNPTP)  W:N=0 !,"NO TESTS ON WORKLIST" Q:N=0  S LRI=1 Q:N'>1  R !,"Choose: ",LRI:DTIME Q:LRI[U!(LRI="")  S LRI=+LRI I LRI>0,LRI'>N,LRI?1N.N Q
"RTN","LRMIEDZ2",21,0)
 I LRI[U!(+LRI'>0) S LRCAPOK=0 Q
"RTN","LRMIEDZ2",22,0)
 S LRTS=LRTS(LRI) D:LRUNDO UNDO^LRMIEDZ
"RTN","LRMIEDZ2",23,0)
 K DR S DA=LRIDT,DA(1)=LRDFN,DIE="^LR(LRDFN,""MI"","
"RTN","LRMIEDZ2",24,0)
 S LRSB=$S(LRTX(LRI)["11.5":1,LRTX(LRI)["23":11,LRTX(LRI)["19":8,LRTX(LRI)["15":5,LRTX(LRI)["34":16,1:"")
"RTN","LRMIEDZ2",25,0)
 S LRFIFO=LRTX(LRI)["FIFO",(LREND,LRSAME)=0 D:'LRFIFO TIME^LRMIEDZ3 I LREND K DR Q
"RTN","LRMIEDZ2",26,0)
 S LRSSC=$P(^LR(LRDFN,"MI",LRIDT,0),U,5)_U_$P(^(0),U,11)
"RTN","LRMIEDZ2",27,0)
 I LRTX(LRI)'["S DR=""[",LRSB X LRTX(LRI) D UPDATE^LRPXRM(LRDFN,"MI",LRIDT) D:'LREND EC3 K DR D:LRUNDO&$P($G(^LR(LRDFN,"MI",LRIDT,LRSB)),U)'="" VT^LRMIUT1 Q
"RTN","LRMIEDZ2",28,0)
 S (X,DR)=$P($P(LRTX(LRI),"[",2),"]",1) S:$L(X) X=+$O(^DIE("B",X,0)) I X<1,'$D(^DIE(+X,"DR",2,63.05)) W !,DR," template doesn't exist for Microbiology." K DR Q
"RTN","LRMIEDZ2",29,0)
 S J=1 F  S J=+$O(^DIE(X,"DR",J)) Q:J<1  S K=+$O(^DIE(X,"DR",J,0)),DR(J-1,K)=^DIE(X,"DR",J,K)
"RTN","LRMIEDZ2",30,0)
 S DR=DR(1,63.05) D ^DIE,UPDATE^LRPXRM(LRDFN,"MI",LRIDT),EC3 K DR
"RTN","LRMIEDZ2",31,0)
 Q
"RTN","LRMIEDZ2",32,0)
BB I '$D(^LR(LRDFN,"MI",0)) S ^LR(LRDFN,"MI",0)="^63.05DA^"
"RTN","LRMIEDZ2",33,0)
 S ^LR(LRDFN,"MI",0)=$P(^LR(LRDFN,"MI",0),U,1,2)_U_LRIDT_U_(1+$P(^(0),U,4))
"RTN","LRMIEDZ2",34,0)
 S ^LR(LRDFN,"MI",LRIDT,0)=LRCDT_U_LREAL_"^^^"_LRSPEC_U_$P(^LRO(68,LRAA,0),U,11)_" "_$E(LRAD,2,3)_" "_LRAN_"^^UNKNOWN",(LRBG0,Y(0))=^(0)
"RTN","LRMIEDZ2",35,0)
 Q
"RTN","LRMIEDZ2",36,0)
EC3 S LRSSCN=$P(^LR(LRDFN,"MI",LRIDT,0),U,5)_U_$P(^(0),U,11) D:LRSSCN'=LRSSC UPDATE K LRSSCN,LRSSC S LRSAME=1 D TIME^LRMIEDZ3 D:'LREND STF^LRMIUT
"RTN","LRMIEDZ2",37,0)
 Q
"RTN","LRMIEDZ2",38,0)
UPDATE D CHECK K LRSSCOM,LRSSCOM1,LRSSCA,LRSSCAA,LRSSCAY,LRSSCAN,LRSSCOD,LRSSCON
"RTN","LRMIEDZ2",39,0)
 Q
"RTN","LRMIEDZ2",40,0)
CHECK ;
"RTN","LRMIEDZ2",41,0)
 S LRSSCA=$P(^LR(LRDFN,"MI",LRIDT,0),U,6),LRSSCAA=+$O(^LRO(68,"B",$P(LRSSCA," "),0))
"RTN","LRMIEDZ2",42,0)
 S X=$P(LRSSCA," ",2) D ^%DT S LRSSCAY=Y,LRSSCAN=$P(LRSSCA," ",3)
"RTN","LRMIEDZ2",43,0)
 S J=0 F I=0:0 S J=+$O(^LRO(68,LRSSCAA,1,LRSSCAY,1,LRSSCAN,5,J)) Q:J<1  I ^(J,0)=LRSSC S ^(0)=LRSSCN Q
"RTN","LRMIEDZ2",44,0)
 I J<1 Q
"RTN","LRMIEDZ2",45,0)
 S LRSSCOD=$P(^LRO(68,LRSSCAA,1,LRSSCAY,1,LRSSCAN,0),U,4),LRSSCON=^(.1)
"RTN","LRMIEDZ2",46,0)
 S J=0 F I=0:0 S J=+$O(^LRO(69,LRSSCOD,1,J)) Q:J<1  I $D(^(J,.1)),^(.1)=LRSSCON D ORDER Q
"RTN","LRMIEDZ2",47,0)
 Q
"RTN","LRMIEDZ2",48,0)
ORDER S $P(^LRO(69,LRSSCOD,1,J,0),U,3)=$P(LRSSCN,U,2)
"RTN","LRMIEDZ2",49,0)
 S K=0 F I=0:0 S K=+$O(^LRO(69,LRSSCOD,1,J,4,K)) Q:K<1  I ^(K,0)=LRSSC S ^(0)=LRSSCN Q
"RTN","LRMIEDZ2",50,0)
 Q
"RTN","LRMINEW1")
0^37^B6425071
"RTN","LRMINEW1",1,0)
LRMINEW1 ;SLC/CJS/BA - NEW DATA TO BE REVIEWED/VERIFIED ;5/6/04  12:04
"RTN","LRMINEW1",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRMINEW1",3,0)
VER W !!,"Indicate those you wish to exclude from verification."
"RTN","LRMINEW1",4,0)
 D CHECK
"RTN","LRMINEW1",5,0)
 I $O(LRAN(0))>0 W !,"Verifying all but the following:" F LRAN=0:0 S LRAN=$O(LRAN(LRAN)) Q:LRAN=""  W !,LRAN
"RTN","LRMINEW1",6,0)
 F I=0:0 W !,"Want the approved reports to be printed at the requesting locations" S %=2 D YN^DICN Q:%  W !,"Answer 'Y'es or 'N'o"
"RTN","LRMINEW1",7,0)
 Q:%=-1  S LRMIQUE=$S(%=1:1,1:0)
"RTN","LRMINEW1",8,0)
 F I=0:0 W !!,"Are you ready to verify" S %=2 D YN^DICN Q:%  W !,"If you're not sure, it's not too late to quit."
"RTN","LRMINEW1",9,0)
 Q:%'=1
"RTN","LRMINEW1",10,0)
 S LRAN=0 F I=0:0 S LRAN=+$O(LRAN(LRAN)) Q:LRAN<1  K ^LRO(68,LRAA,1,LRAD,"AC",LRSB,LRAN)
"RTN","LRMINEW1",11,0)
 S LRAN=0 F I=0:0 S LRAN=+$O(^LRO(68,LRAA,1,LRAD,"AC",LRSB,LRAN)) Q:LRAN<1  I +^(LRAN)=LRDXZ!(LRDXZ=0) D STUFF
"RTN","LRMINEW1",12,0)
 W !,"ALL DONE"
"RTN","LRMINEW1",13,0)
 Q
"RTN","LRMINEW1",14,0)
STUFF Q:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))  Q:'$D(^(3))  S Y=^(0),LRDFN=+Y,LRLLOC=$P(Y,U,7),LRODT=$S($P(Y,U,4):$P(Y,U,4),1:$P(Y,U,3)),LRSN=$P(Y,U,5),LRIDT=9999999-^(3),LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3) D PT^LRX
"RTN","LRMINEW1",15,0)
 S $P(^LR(LRDFN,"MI",LRIDT,LRSB),U)=DT,$P(^(LRSB),U,$S(LRSB=11:5,1:3))=DUZ
"RTN","LRMINEW1",16,0)
 D UPDATE^LRPXRM(LRDFN,"MI",LRIDT)
"RTN","LRMINEW1",17,0)
 S LRCDT=9999999-LRIDT,Y=DT D VT^LRMIUT1
"RTN","LRMINEW1",18,0)
 K ^LRO(68,LRAA,1,LRAD,"AC",LRSB,LRAN)
"RTN","LRMINEW1",19,0)
 D:LRMIQUE TSKM^LRMIUT
"RTN","LRMINEW1",20,0)
 Q
"RTN","LRMINEW1",21,0)
CHECK ;from LRMINEW
"RTN","LRMINEW1",22,0)
 D LRAN^LRMIUT S LRAN=0 F I=0:0 S LRAN=+$O(LRAN(LRAN)) Q:LRAN<1  S LROK=1 D CHECK1 I 'LROK K LRAN(LRAN)
"RTN","LRMINEW1",23,0)
 Q
"RTN","LRMINEW1",24,0)
CHECK1 I '$D(^LRO(68,LRAA,1,LRAD,"AC",LRSB,LRAN)) W !,LRAN," is not defined." S LROK=0 Q
"RTN","LRMINEW1",25,0)
 I LRDXZ'=0,+^LRO(68,LRAA,1,LRAD,"AC",LRSB,LRAN)'=LRDXZ W !,LRAN," is not your accession." S LROK=0
"RTN","LRMINEW1",26,0)
 Q
"RTN","LRMISTF1")
0^18^B23532108
"RTN","LRMISTF1",1,0)
LRMISTF1 ;SLC/CJS/BA/DALOI/FHS - MASS DATA ENTRY INTO FILE 63.05 ;2/25/03  22:24
"RTN","LRMISTF1",2,0)
 ;;5.2;LAB SERVICE;**121,128,202,263,264,295**;Sep 27, 1994
"RTN","LRMISTF1",3,0)
 ; Reference to ^DPT( Supported by Reference #10035
"RTN","LRMISTF1",4,0)
 ; Reference to ^ORD(100.99 Supported by Reference #2414
"RTN","LRMISTF1",5,0)
 ; Reference to YN^DICN Supported by Reference #10009
"RTN","LRMISTF1",6,0)
 ; Reference to ^DIE Supported by Reference #10018
"RTN","LRMISTF1",7,0)
 ; Reference to $$NOW^XLFDT Supported by Reference #10103
"RTN","LRMISTF1",8,0)
 ; Reference to $$CJ^XLFSTR  Supported by Reference #10104
"RTN","LRMISTF1",9,0)
 ;from LRMISTF
"RTN","LRMISTF1",10,0)
ASK F I=0:0 D GET Q:LREND=99  D:'LREND ACC S:LREND LREND=0 D MORE Q:LREND  K LRAUTO
"RTN","LRMISTF1",11,0)
 Q
"RTN","LRMISTF1",12,0)
GET S X1="",LREND=0 I LRMODE<3 D
"RTN","LRMISTF1",13,0)
 . F  R !,"What do you want entered?: ",X1:DTIME Q:'$T!(X1[U)!(X1="")  D  I $L(X1),$E(X1)'="?" S LREND=0 Q
"RTN","LRMISTF1",14,0)
 . . I $S(X1[":":1,X1[";":1,1:0) S X1="?" D INFO Q
"RTN","LRMISTF1",15,0)
 . . S X=X1 S:X[";" X="?" D @$S($G(H9)=11.57:"PN^LRNUM",$G(H9)=24:"AFS^LRNUM",1:"^LRMIXPD") S:'$D(X) X1="?" Q:X1'="?"  D INFO
"RTN","LRMISTF1",16,0)
 I X1[U S LREND=99 Q
"RTN","LRMISTF1",17,0)
 S:LRMODE<3 LRSTUFF=X1 W !,"I will ",$S(LRMODE=1:"automatically stuff ",1:"prompt "),LRMF W:$D(LRSTUFF) !,"with ",LRSTUFF
"RTN","LRMISTF1",18,0)
 F  W !,"   ...OK" S %=1 D YN^DICN Q:%  W !,"Answer 'Y'es or 'N'o"
"RTN","LRMISTF1",19,0)
 I %'=1 S LREND=1 Q
"RTN","LRMISTF1",20,0)
 I LRPF="P" S DR="S:$S($D(^LR(LRDFN,""MI"",LRIDT,"_LRSB_")):$P(^("_LRSB_"),U,2),1:"""")=""F"" Y="_$S(LRSB=1:11.55,LRSB=5:15.5,LRSB=8:19.5,LRSB=11:25.5,LRSB=16:35)_";"
"RTN","LRMISTF1",21,0)
 I LRPF="F" S DR=""
"RTN","LRMISTF1",22,0)
 S DR=DR_$S(LRSB=1:"11.5///"_LRPF_";11.55",LRSB=5:"15///"_LRPF_";15.5",LRSB=8:"19///"_LRPF_";19.5",LRSB=11:"23///"_LRPF_";25.5",1:"34///"_LRPF_";35")
"RTN","LRMISTF1",23,0)
 S DR=DR_"////"_DUZ_";"_H9_$S(LRMODE=1:"///"_LRSTUFF,LRMODE=2:"//"_LRSTUFF,1:"")
"RTN","LRMISTF1",24,0)
 F  W !,"Verify all work automatically" S %=1 D YN^DICN Q:%  W !,"Answer 'Y'es or 'N'o"
"RTN","LRMISTF1",25,0)
 I %=-1 S LREND=1 Q
"RTN","LRMISTF1",26,0)
 I %=1 S DR=DR_";"_$S(LRSB=1:11,LRSB=5:14,LRSB=8:18,LRSB=11:22,1:33)_"///T",LRAUTO=""
"RTN","LRMISTF1",27,0)
 S LRCO=0 F  W !,"Designate the individual test as complete" S %=2 D YN^DICN Q:%  W !,"Answer 'Y'es or 'N'o"
"RTN","LRMISTF1",28,0)
 S:%=1 LRCO=1 S:%=-1 LREND=1
"RTN","LRMISTF1",29,0)
 Q
"RTN","LRMISTF1",30,0)
INFO W !,$$CJ^XLFSTR("What you enter will go through the input transform to be stored in the.",IOM)
"RTN","LRMISTF1",31,0)
 W !,$$CJ^XLFSTR("Result field of the test",IOM)
"RTN","LRMISTF1",32,0)
 W !,$$CJ^XLFSTR("The punctuations of ';' or ':'  are not allowed in Batch Data Entry.",IOM),!
"RTN","LRMISTF1",33,0)
 Q
"RTN","LRMISTF1",34,0)
ACC K LRSTUFF,DIC W !,"Enter the accessions you wish to edit." D LRAN^LRMIUT
"RTN","LRMISTF1",35,0)
 I +$O(LRAN(0))>0 W !,"Editing the following:" S (J,LRAN)=0 F  S LRAN=+$O(LRAN(LRAN)) Q:LRAN<1  W !,LRAN S J=J+1 I J#(IOSL-2)=0 R !,"Press return to continue or '^' to escape ",X:DTIME I X[U S LREND=1 Q
"RTN","LRMISTF1",36,0)
 Q:LREND
"RTN","LRMISTF1",37,0)
 F  W !,"Everything OK" S %=2 D YN^DICN Q:%  W !,"Answer 'Y'es or 'N'o"
"RTN","LRMISTF1",38,0)
 Q:%'=1
"RTN","LRMISTF1",39,0)
 S LRAN=0 F  S LRAN=+$O(LRAN(LRAN)) Q:LRAN<1  D STUFF Q:LREND
"RTN","LRMISTF1",40,0)
 Q
"RTN","LRMISTF1",41,0)
STUFF I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))!'$D(^(3)) W !,"Acc: ",LRAN," not set up." Q
"RTN","LRMISTF1",42,0)
 I $P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),U,4) W !,"Acc: ",LRAN," has been previously verified by a microbiology supervisor." Q
"RTN","LRMISTF1",43,0)
 S LRNOP=1,J=0 F  S J=+$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,J)) Q:J<1  I LRTEST=+^(J,0) S LRNOP=$P(^(0),U,5) Q
"RTN","LRMISTF1",44,0)
 I LRNOP=1 W !,"Acc: ",LRAN," doesn't have the test required." Q
"RTN","LRMISTF1",45,0)
 I LRNOP>1 W !,"Acc: ",LRAN," has been completed for the selected test." Q
"RTN","LRMISTF1",46,0)
 I H9=11.57!(H9=11.58) S LROK=0 D @$S(H9=11.57:"UR",1:"SPUT") I 'LROK W !,"Acc: ",LRAN," doesn't have the specimen required." Q
"RTN","LRMISTF1",47,0)
 W !,"Acc: ",LRAN S LRDFN=+^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRLLOC=$P(^(0),U,7),LRODT=$S($P(^(0),U,4):$P(^(0),U,4),1:$P(^(0),U,3)),LRSN=$P(^(0),U,5)
"RTN","LRMISTF1",48,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3) D PT^LRX W ?15,PNM,?45,SSN I LRDPF=2,$D(^DPT(DFN,.1)) W ?65,^(.1)
"RTN","LRMISTF1",49,0)
 I LRDPF=2,DFN,$P($G(^ORD(100.99,1,"CONV")),"^")=0 D EN^LR7OV2(DFN_";DPT(",1)
"RTN","LRMISTF1",50,0)
 W ! S LRCDT=+^LRO(68,LRAA,1,LRAD,1,LRAN,3),LRIDT=+$P(^(3),U,5),DIE="^LR("_LRDFN_",""MI"",",DA=LRIDT D ^DIE,UPDATE^LRPXRM(LRDFN,"MI",LRIDT) I $D(Y) S LREND=1 Q
"RTN","LRMISTF1",51,0)
 I LRCO S X=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTEST,0),U,5) K:X ^LRO(68,LRAA,1,LRAD,1,"AD",$P(X,"."),LRAN),^LRO(68,LRAA,1,LRAD,1,"AC",X,LRAN)
"RTN","LRMISTF1",52,0)
 I LRCO D
"RTN","LRMISTF1",53,0)
 . S $P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTEST,0),U,4)=DUZ,$P(^(0),U,8)=$G(LRCDEF)
"RTN","LRMISTF1",54,0)
 . S Y=$$NOW^XLFDT
"RTN","LRMISTF1",55,0)
 . S $P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTEST,0),U,5)=Y
"RTN","LRMISTF1",56,0)
 . S ^LRO(68,LRAA,1,LRAD,1,"AD",$P(Y,"."),LRAN)="",^LRO(68,LRAA,1,LRAD,1,"AC",Y,LRAN)=""
"RTN","LRMISTF1",57,0)
 . I $$VER^LR7OU1<3 N I S I=LRTEST D V^LROR ;OE/RR 2.5
"RTN","LRMISTF1",58,0)
 . N CORRECT S:$G(LRCORECT) CORRECT=1 D NEW^LR7OB1(LRODT,LRSN,"RE")
"RTN","LRMISTF1",59,0)
 I $D(LRAUTO) D STF^LRMIUT
"RTN","LRMISTF1",60,0)
 Q
"RTN","LRMISTF1",61,0)
MORE S LREND=1 F  W !,"Do you wish to make a new entry for the ",LRMF," field" S %=2 D YN^DICN Q:%  W !,"Answer 'Y'es or 'N'o"
"RTN","LRMISTF1",62,0)
 I %=1 S LREND=0
"RTN","LRMISTF1",63,0)
 Q
"RTN","LRMISTF1",64,0)
UR S J=0 F  S J=+$O(^LRO(68,LRAA,1,LRAD,1,LRAN,5,J)) Q:J<1  I LRURINE=+^(J,0) S LROK=1 Q
"RTN","LRMISTF1",65,0)
 Q
"RTN","LRMISTF1",66,0)
SPUT S J=0 F  S J=+$O(^LRO(68,LRAA,1,LRAD,1,LRAN,5,J)) Q:J<1  I 360=+^(J,0) S LROK=1 Q
"RTN","LRMISTF1",67,0)
 Q
"RTN","LRMIV")
0^23^B5934078
"RTN","LRMIV",1,0)
LRMIV ;SLC/DLG - MICROBIOLOGY VERIFY AUTO INST ROUTINE ;2/25/03  22:25
"RTN","LRMIV",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRMIV",3,0)
 ;from LRVR and option LRMIV
"RTN","LRMIV",4,0)
BEGIN S LREND=0,LRACC="",LRSS="MI" D ^LRPARAM,DATE
"RTN","LRMIV",5,0)
END ;from LRFAST,LRVER
"RTN","LRMIV",6,0)
 K %,A6,AGE,C,D,D0,D1,DA,DFN,DIC,DIE,DLAYGO,DOB,DTOUT,DUOUT,DX,I,II,J,K,LRAA,LRACC,LRAD,LRANOK,LRBUG,LRCAPOK,LRCDT,LRDFN,LRDPF,LREAL,LREND,LRFIFO,LRI,LRIDT,LRLLOC,LRMIDEF,LRMIOTH,LRNB,LRODA,LRODIE
"RTN","LRMIV",7,0)
 K LRODT,LRPTP,LRSAME,LRSB,LRSCREEN,LRSN,LRSPEC,LRSS,LRTEC,LRTS,LRTX,LRUNDO,LRWRD,N,PNM,POP,S,SEX,SSN,X,Y,Z
"RTN","LRMIV",8,0)
 Q
"RTN","LRMIV",9,0)
DATE I '$D(LRLABKY) W !,$C(7),"YOU DO NOT HAVE VERIFY KEY.  CANNOT VERIFY",! Q
"RTN","LRMIV",10,0)
 S DIC="^LRO(68.2,",DIC(0)="AEMQZ" D ^DIC Q:Y'>0  S LRLL=+Y
"RTN","LRMIV",11,0)
 D ^LRMIU4 Q:LRAA<1  I $P(LRPARAM,U,14),$P($G(^LRO(68,LRAA,0)),U,16) D ^LRCAPV
"RTN","LRMIV",12,0)
 S DIC=60,DIC("S")="I $P(^(0),U,4)=""MI""",DIC(0)="AEMOQ",DIC("A")="Select TEST/PROCEDURE: " D ^DIC K DIC Q:$D(DUOUT)  S LRPTP=+Y
"RTN","LRMIV",13,0)
 I Y<1 W !,"None Preselected",!,"Accession # ",LRAN
"RTN","LRMIV",14,0)
 S (LRDFN,LRSS,LRIDT)=0 ;Added to prevent <UNDEF> in LRCAP if no accession selected
"RTN","LRMIV",15,0)
 S LRMIDEF=$P(^LAB(69.9,1,1),U,10),LRMIOTH=$P(^(1),U,11) D ^LRMIV1
"RTN","LRMIV",16,0)
 Q
"RTN","LRMIV",17,0)
UNDO ;from LRMIV2
"RTN","LRMIV",18,0)
 ;W:'$P(^LR(LRDFN,"MI",LRIDT,0),U,9) !,"Report is changed to 'AMENDED'",!
"RTN","LRMIV",19,0)
 S $P(^LR(LRDFN,"MI",LRIDT,0),U,9)=1,$P(^(0),U,3,4)=U,$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),U,4)="",$P(^LRO(68,LRAA,1,LRAD,1,+LRAN,4,LRTS,0),U,4,5)=DUZ_U_DT,^LRO(68,LRAA,1,LRAD,1,"AD",DT,+LRAN)="",^LRO(68,LRAA,1,LRAD,1,"AC",DT,+LRAN)=""
"RTN","LRMIV",20,0)
 D UPDATE^LRPXRM(LRDFN,"MI",LRIDT)
"RTN","LRMIV",21,0)
 Q
"RTN","LRMIV1")
0^24^B17503348
"RTN","LRMIV1",1,0)
LRMIV1 ;SLC/DLG - LAB ROUTINE DATA VERIFICATION ;2/25/03  22:44
"RTN","LRMIV1",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRMIV1",3,0)
PAT S X=LRAN F I=0:0 R:'$D(LRAN) !!,"Accession #: ",X:DTIME Q:X=""!(X[U)  S LRANOK=1,LRCAPOK=1 D LRANX^LRMIU4 D:LRANOK PAT1 D:LRCAPOK&(LRANOK)&($P(LRPARAM,U,14)) LOOK^LRCAPV1 K:LRANOK LRAN I 'LRANOK W !,"Enter the accession number" K LRAN
"RTN","LRMIV1",4,0)
 Q
"RTN","LRMIV1",5,0)
PAT1 ;
"RTN","LRMIV1",6,0)
 K LRPRGSQ S N=0,I=0 F  S I=$O(^LAH(LRLL,1,"C",LRAN,I)) Q:I<1  S N=N+1,LRSQ=I,LRPRGSQ(I)="" W !,?5,I
"RTN","LRMIV1",7,0)
 G T4:N=1,T3 Q
"RTN","LRMIV1",8,0)
T1 R !,"What tray: ",X:DTIME Q:X["^"!'$T  I X["?"!(X'?.N) W !,"Enter a number" G T1
"RTN","LRMIV1",9,0)
 I X'="" S LRTRAY=X G T2
"RTN","LRMIV1",10,0)
 I $D(^LRO(68.2,"AS",LRLL)) W !,"Can't MANUALLY add to a SEQUENCE instrument data file." Q
"RTN","LRMIV1",11,0)
 W !,"Enter manually" S %=1 D YN^DICN Q:%<1  G T1:%=2 S LRSQ=-1 G T3
"RTN","LRMIV1",12,0)
 G T3
"RTN","LRMIV1",13,0)
T2 R !,"What cup: ",X:DTIME Q:X["^"!'$T  I X["?"!(X'?.N) W !,"Enter a number" G T2
"RTN","LRMIV1",14,0)
 Q:X=""  S LRTRCP=LRTRAY_";"_X
"RTN","LRMIV1",15,0)
 K LRPRGSQ S N=0,I=0 F  S I=$O(^LAH(LRLL,1,"B",LRTRCP,I)) Q:I<1  S N=N+1,LRSQ=I,LRPRGSQ(I)="" W !,?5,I
"RTN","LRMIV1",16,0)
T3 I N=0 W !,"No data for that accession." Q
"RTN","LRMIV1",17,0)
 I N>1 R !,"Choose sequence number: ",X:DTIME Q:'$T  I X["?"!(X'?.N) W !,"Enter a number" G T3
"RTN","LRMIV1",18,0)
 I X["^"!(X="") K LRPRGSQ Q
"RTN","LRMIV1",19,0)
 S:N'=1 LRSQ=X I '$D(^LAH(LRLL,1,LRSQ,0)) W !,"No data there" G T3
"RTN","LRMIV1",20,0)
T4 Q:LRSQ'>0  K LRPRGSQ(LRSQ)
"RTN","LRMIV1",21,0)
 S LRDFN=+^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRIDT=9999999-^(3),LRCDT=+^(3),LREAL=$P(^(3),U,2),LRI=+$O(^(5,0)),LRSPEC=$S($D(^(LRI,0)):+^(0),1:"")
"RTN","LRMIV1",22,0)
 I $D(^LR(LRDFN,"MI",LRIDT,0)) S Y(0)=^(0)
"RTN","LRMIV1",23,0)
 I '$D(^LR(LRDFN,"MI",LRIDT,3,0)) D:'$D(^LR(LRDFN,"MI",LRIDT,0)) BB^LRMIV2 S ^LR(LRDFN,"MI",LRIDT,3,0)="^63.3PA^^"
"RTN","LRMIV1",24,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3),LRUNDO=0 D PT^LRX W ?25,"  ",PNM,?47," ",SSN
"RTN","LRMIV1",25,0)
T5 S %=2 I $D(^LR(LRDFN,"MI",LRIDT,1)),+^(1) W !,"The Bact data has been approved, ADDING Data MAY change previous reported",!,"values.  Are you sure you want to do this " D YN^DICN I %=2 W !,"DATA NOT LOADED.",! K % Q
"RTN","LRMIV1",26,0)
 I %<1 W !,"Enter YES to reload data.  NO to not reload data." K % G T5
"RTN","LRMIV1",27,0)
 K % I $P(^LR(LRDFN,"MI",LRIDT,0),U,3)!$P(^LR(LRDFN,"MI",LRIDT,0),U,9) S LRUNDO=1 ;W:$P(^(0),U,9) !,"(This is an AMENDED report)",!
"RTN","LRMIV1",28,0)
 K LRORG S LRORG=0 F I1=0:0 S I1=$O(^LR(LRDFN,"MI",LRIDT,3,I1)) Q:I1'>0  S LRORG(+^(I1,0))=I1,LRORG=I1
"RTN","LRMIV1",29,0)
 F I1=0:0 S I1=$O(^LAH(LRLL,1,LRSQ,3,I1)) Q:I1'>0  S X=+^(I1,0),I2=$S($D(LRORG(X)):LRORG(X),1:0) D MOVE
"RTN","LRMIV1",30,0)
 S X=^LAH(LRLL,1,LRSQ,0) K ^LAH(LRLL,1,LRSQ),^LAH(LRLL,1,"B",($P(X,U,1)_";"_$P(X,U,2)),LRSQ),^LAH(LRLL,1,"C",+$P(X,U,5),LRSQ)
"RTN","LRMIV1",31,0)
 W !!,"Data moved over" S LRHC=1
"RTN","LRMIV1",32,0)
T51 D BRMK^LRMIPSZ2 S DIE="^LR(LRDFN,""MI"",LRIDT,",DA(1)=LRDFN,DA=LRIDT,DR=5,DR(1,63)=5,DR(2,63.05)="11;11.5;11.6;12;13;",DR(3,63.29)=".01;",DR(3,63.3)=".01;1;",DR(3,63.33)=".01;" D ^DIE
"RTN","LRMIV1",33,0)
 S LREND=0 D BACT^LRMIV4
"RTN","LRMIV1",34,0)
T6 R !,"ENTER 'E' TO EDIT OR INITIALS TO VERIFY: ",X:DTIME
"RTN","LRMIV1",35,0)
 I X="E" D PAT1^LRMIV2 K LRPRGSQ W !,"DATA APPROVED BUT NOT VERIFIED",! D UPDATE^LRPXRM(LRDFN,"MI",LRIDT) G T51
"RTN","LRMIV1",36,0)
 I $L(X)>1,$O(^VA(200,"C",X,0))=DUZ S $P(^LR(LRDFN,"MI",LRIDT,0),U,3)=DT,^(1)=DT_"^F^"_DUZ W !,"DATA APPROVED AND VERIFIED",! D UPDATE^LRPXRM(LRDFN,"MI",LRIDT) Q
"RTN","LRMIV1",37,0)
 I X=""!X="^" W "DATA NOT APPROVED OR VERIFIED. " Q
"RTN","LRMIV1",38,0)
 I $L(X)>1,$O(^VA(200,"C",X,0))'=DUZ W "INITIALS DO NOT MATCH." G T6
"RTN","LRMIV1",39,0)
 Q
"RTN","LRMIV1",40,0)
WAIT W !,"Type ""^"" to skip "
"RTN","LRMIV1",41,0)
WAIT1 R X:10 G LRMIV1:X[U,WAIT1:$O(^LAH(LRLL,1,"C",LRAN,0))<1 G LRMIV1
"RTN","LRMIV1",42,0)
 Q
"RTN","LRMIV1",43,0)
MOVE ;Move data into ^LR(LRDFN,"MI",LRIDT,3,
"RTN","LRMIV1",44,0)
 I I2'>0 S X=^LAH(LRLL,1,LRSQ,3,I1,0),DIC="^LR(LRDFN,""MI"",LRIDT,3,",DIC(0)="AMQ",DA(1)=LRIDT,DA(2)=LRDFN D FILE^DICN S I2=+Y K DIC
"RTN","LRMIV1",45,0)
 S %X="^LAH(LRLL,1,LRSQ,3,I1,",%Y="^LR(LRDFN,""MI"",LRIDT,3,I2," D %XY^%RCR
"RTN","LRMIV2")
0^25^B21704534
"RTN","LRMIV2",1,0)
LRMIV2 ;SLC/DLG - MICROBIOLOGY VERIFY AUTO INST ROUTINE ;3/2/03  18:09
"RTN","LRMIV2",2,0)
 ;;5.2;LAB SERVICE;**242,295**;Sep 27, 1994
"RTN","LRMIV2",3,0)
 ;from LRFAST,LRMIV,LRVER
"RTN","LRMIV2",4,0)
PAT S X=LRAN
"RTN","LRMIV2",5,0)
 F I=0:0 R:'$D(LRAN) !!,"Accession #: ",X:DTIME Q:X=""!(X[U)  S LRANOK=1,LRCAPOK=1 D LRANX^LRMIU4 D:LRANOK PAT1,CAP K:LRANOK LRAN I 'LRANOK W !,"Enter the accession number" K LRAN
"RTN","LRMIV2",6,0)
 Q
"RTN","LRMIV2",7,0)
CAP I LRCAPOK,LRANOK,$P(LRPARAM,U,14),$P($G(^LRO(68,LRAA,0)),U,16) D LOOK^LRCAPV1 Q
"RTN","LRMIV2",8,0)
PAT1 ;
"RTN","LRMIV2",9,0)
 S LRDFN=+^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRIDT=9999999-^(3),LRCDT=+^(3),LREAL=$P(^(3),U,2),LRI=+$O(^(5,0)),LRSPEC=$S($D(^(LRI,0)):+^(0),1:"")
"RTN","LRMIV2",10,0)
 I $D(^LR(LRDFN,"MI",LRIDT,0)) S Y(0)=^(0)
"RTN","LRMIV2",11,0)
 I '$D(^LR(LRDFN,"MI",LRIDT,0)) D BB
"RTN","LRMIV2",12,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3),LRUNDO=0 D PT^LRX W ?25,"  ",PNM,?47," ",SSN
"RTN","LRMIV2",13,0)
 I $P(^LR(LRDFN,"MI",LRIDT,0),U,3) W !,"Final report has been verified by microbiology supervisor.",$C(7),!,"If you proceed in editing, this report will need to be reverified."
"RTN","LRMIV2",14,0)
 F I=0:0 W !,?20,"OK" S %=1 D YN^DICN Q:%  W !,"Enter 'Y' or 'N':"
"RTN","LRMIV2",15,0)
 I %=2!(%<0) S LRCAPOK=0 Q
"RTN","LRMIV2",16,0)
 I $P(^LR(LRDFN,"MI",LRIDT,0),U,3)!$P(^LR(LRDFN,"MI",LRIDT,0),U,9) S LRUNDO=1 ;W:$P(^(0),U,9) !,"(This is an AMENDED report)",!
"RTN","LRMIV2",17,0)
 F I=0:0 D EC Q:$D(LRNPTP)  W:N=0 !,"NO TESTS ON WORKLIST" Q:N=0  S LRI=1 Q:N'>1  R !,"Choose: ",LRI:DTIME Q:LRI[U!(LRI="")  S LRI=+LRI I LRI>0,LRI'>N,LRI?1N.N Q
"RTN","LRMIV2",18,0)
 I LRI[U!(LRI="") S LRCAPOK=0 Q
"RTN","LRMIV2",19,0)
 S LRTS=LRTS(LRI) D:LRUNDO UNDO^LRMIV
"RTN","LRMIV2",20,0)
 K DR S DA=LRIDT,DA(1)=LRDFN,DIE="^LR(LRDFN,""MI"","
"RTN","LRMIV2",21,0)
 S LRSB=$S(LRTX(LRI)["11.5":1,LRTX(LRI)["15":5,LRTX(LRI)["19":8,LRTX(LRI)["23":11,LRTX(LRI)["34":16,1:""),LRFIFO=LRTX(LRI)["FIFO",(LREND,LRSAME)=0 D:'LRFIFO TIME^LRMIV3 I LREND K DR Q
"RTN","LRMIV2",22,0)
 S LRSSC=$P(^LR(LRDFN,"MI",LRIDT,0),U,5)_U_$P(^(0),U,11)
"RTN","LRMIV2",23,0)
 I LRTX(LRI)'["S DR=""[" X LRTX(LRI) D UPDATE^LRPXRM(LRDFN,"MI",LRIDT) D:'LREND EC3 K DR Q
"RTN","LRMIV2",24,0)
 S (X,DR)=$P($P(LRTX(LRI),"[",2),"]",1) S:$L(X) X=+$O(^DIE("B",X,0)) I X<1,'$D(^DIE(X,"DR",2,63.05)) W !,DR," template doesn't exist for Microbiology." K DR Q
"RTN","LRMIV2",25,0)
 S J=1 F I=0:0 S J=+$O(^DIE(X,"DR",J)) Q:J<1  S K=+$O(^DIE(X,"DR",J,0)),DR(J-1,K)=^DIE(X,"DR",J,K)
"RTN","LRMIV2",26,0)
 S DR=DR(1,63.05) D ^DIE,UPDATE^LRPXRM(LRDFN,"MI",LRIDT),EC3 K DR
"RTN","LRMIV2",27,0)
 Q
"RTN","LRMIV2",28,0)
BB I '$D(^LR(LRDFN,"MI",0)) S ^LR(LRDFN,"MI",0)="^63.05DA^"
"RTN","LRMIV2",29,0)
 S ^LR(LRDFN,"MI",0)=$P(^LR(LRDFN,"MI",0),U,1,2)_U_LRIDT_U_(1+$P(^(0),U,4))
"RTN","LRMIV2",30,0)
 S ^LR(LRDFN,"MI",LRIDT,0)=LRCDT_U_LREAL_"^^^"_LRSPEC_U_$P(^LRO(68,LRAA,0),U,11)_" "_$E(LRAD,2,3)_" "_LRAN_"^^UNKNOWN",Y(0)=^(0)
"RTN","LRMIV2",31,0)
 Q
"RTN","LRMIV2",32,0)
EC K LRTX S LRAN=$P($P(Y(0),U,6)," ",3),LRLLOC=$P(Y(0),U,8)
"RTN","LRMIV2",33,0)
 S LRODT=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),U,4),LRSN=$P(^(0),U,5) I $D(^LRO(69,+LRODT,1,+LRSN,0)) S DIC="^LRO(69,"_LRODT_",1,",DA=LRSN,DR=6 D:DA>0 EN^DIQ S:$D(DTOUT)!($D(DUOUT)) LREND=1 Q:LREND
"RTN","LRMIV2",34,0)
 K LRNPTP S N=0
"RTN","LRMIV2",35,0)
 S LRI=0 F  S LRI=+$O(^LRO(68,LRAA,1,LRAD,1,+LRAN,4,LRI)) Q:LRI<.5  S N=N+1,LRTS(N)=+^(LRI,0),LRTX(N)=$S($L($P(^LAB(60,LRTS(N),0),U,14)):^LAB(62.07,$P(^(0),U,14),.1),1:"W !,""EDIT CODE IN FILE 60 NOT DEFINED.""") I LRTS(N)=LRPTP S LRNPTP=N Q
"RTN","LRMIV2",36,0)
 I '$D(LRNPTP),LRPTP>0 W !,"Nothing matches with the test you preselected." Q
"RTN","LRMIV2",37,0)
 I $D(LRNPTP) S LRI=LRNPTP
"RTN","LRMIV2",38,0)
 I '$D(LRNPTP),N>0 F J=1:1:N W !,?3,J,?8,$P(^LAB(60,LRTS(J),0),U) S Y=$P(^LRO(68,LRAA,1,LRAD,1,+LRAN,4,LRTS(J),0),U,5) D:Y>0 DD^LRX W:Y'="" " completed ",Y
"RTN","LRMIV2",39,0)
 Q
"RTN","LRMIV2",40,0)
EC3 S LRSSCN=$P(^LR(LRDFN,"MI",LRIDT,0),U,5)_U_$P(^(0),U,11) D:LRSSCN'=LRSSC UPDATE K LRSSCN,LRSSC S LRSAME=1 D TIME^LRMIV3 D:'LREND STF^LRMIUT
"RTN","LRMIV2",41,0)
 Q
"RTN","LRMIV2",42,0)
UPDATE D CHECK K LRSSCOM,LRSSCOM1,LRSSCA,LRSSCAA,LRSSCAY,LRSSCAN,LRSSCOD,LRSSCON
"RTN","LRMIV2",43,0)
 Q
"RTN","LRMIV2",44,0)
CHECK S LRSSCA=$P(^LR(LRDFN,"MI",LRIDT,0),U,6),LRSSCAA=+$O(^LRO(68,"B",$P(LRSSCA," "),0))
"RTN","LRMIV2",45,0)
 S X=$P(LRSSCA," ",2) D ^%DT S LRSSCAY=Y,LRSSCAN=$P(LRSSCA," ",3)
"RTN","LRMIV2",46,0)
 S J=0 F I=0:0 S J=+$O(^LRO(68,LRSSCAA,1,LRSSCAY,1,LRSSCAN,5,J)) Q:J<1  I ^(J,0)=LRSSC S ^(0)=LRSSCN Q
"RTN","LRMIV2",47,0)
 I J<1 Q
"RTN","LRMIV2",48,0)
 S LRSSCOD=$P(^LRO(68,LRSSCAA,1,LRSSCAY,1,LRSSCAN,0),U,4),LRSSCON=^(.1)
"RTN","LRMIV2",49,0)
 S J=0 F I=0:0 S J=+$O(^LRO(69,LRSSCOD,1,J)) Q:J<1  I $D(^(J,.1)),^(.1)=LRSSCON D ORDER Q
"RTN","LRMIV2",50,0)
 Q
"RTN","LRMIV2",51,0)
ORDER S $P(^LRO(69,LRSSCOD,1,J,0),U,3)=$P(LRSSCN,U,2)
"RTN","LRMIV2",52,0)
 S K=0 F I=0:0 S K=+$O(^LRO(69,LRSSCOD,1,J,4,K)) Q:K<1  I ^(K,0)=LRSSC S ^(0)=LRSSCN Q
"RTN","LRMIV2",53,0)
 Q
"RTN","LRMIVER1")
0^3^B14179737
"RTN","LRMIVER1",1,0)
LRMIVER1 ;SLC/CJS/BA- MICRO CHART COPY APPROVAL CONT. ;2/19/91  11:01 ;
"RTN","LRMIVER1",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRMIVER1",3,0)
 ;from LRMIVER
"RTN","LRMIVER1",4,0)
APPROVE I '$O(^LRO(68,"AVS",LRAA,0)) W !,"No data." Q
"RTN","LRMIVER1",5,0)
 F I=0:0 W !!,"Do you wish to review the data as the (W)ards will see it, as the (L)ab",!,"will see it, or (N)ot review the data?  N// " R X:DTIME S:'$T X=U S:'$L(X) X="N" Q:X[U!("WLN"[X&($L(X)=1))  D INFO^LRMINEW
"RTN","LRMIVER1",6,0)
 Q:X[U  I X="N" D ACCEPT Q
"RTN","LRMIVER1",7,0)
 S:X="W" LRWRDVEW="" F I=0:0 W !,"Do you want to queue the data to print and approve it later" S %=1 D YN^DICN Q:%  W !,"Answer 'Y'es or 'N'o"
"RTN","LRMIVER1",8,0)
 Q:%<1  S ZTRTN="DQ^LRMIVER1" I %=1 S %ZIS="QM",%ZIS("B")="",IOP="Q"
"RTN","LRMIVER1",9,0)
 D IO^LRWU
"RTN","LRMIVER1",10,0)
 Q
"RTN","LRMIVER1",11,0)
DQ S:$D(ZTQUEUED) ZTREQ="@" U IO
"RTN","LRMIVER1",12,0)
 S LREND=0,LRSB=0 K ^TMP($J) S LRAD=0 F I=0:0 S LRAD=+$O(^LRO(68,"AVS",LRAA,LRAD)) Q:LRAD<1  D SORT Q:LREND
"RTN","LRMIVER1",13,0)
 S LRONESPC="",LRONETST="" D PRINT
"RTN","LRMIVER1",14,0)
 Q
"RTN","LRMIVER1",15,0)
SORT S LRAN=0 F I=0:0 S LRAN=+$O(^LRO(68,"AVS",LRAA,LRAD,LRAN)) Q:LRAN<1  D S1
"RTN","LRMIVER1",16,0)
 Q
"RTN","LRMIVER1",17,0)
S1 S LRDFN=+^LRO(68,"AVS",LRAA,LRAD,LRAN),LRIDT=$P(^(LRAN),U,2)
"RTN","LRMIVER1",18,0)
 I $D(^LR(LRDFN,"MI",LRIDT,0)) S LRVLOC=$S($L($P(^(0),U,8)):$P(^(0),U,8),1:0),^TMP($J,LRVLOC,LRDFN,LRIDT)=^(0)
"RTN","LRMIVER1",19,0)
 S ^TMP($J,LRVLOC,LRDFN,LRIDT,1)=LRAD
"RTN","LRMIVER1",20,0)
 Q
"RTN","LRMIVER1",21,0)
PRINT S LRVLOC="" F LRLCNT=0:0 S LRVLOC=$O(^TMP($J,LRVLOC)) Q:LRVLOC=""  S LRLTR=$E(LRVLOC,1,4) W @IOF D ^LRLTR:$E(IOST,1,2)'="C-",P1 Q:LREND
"RTN","LRMIVER1",22,0)
 Q
"RTN","LRMIVER1",23,0)
P1 S LRDFN=0 F I=0:0 S LRDFN=+$O(^TMP($J,LRVLOC,LRDFN)) Q:LRDFN<1  D P2 Q:LREND
"RTN","LRMIVER1",24,0)
 Q
"RTN","LRMIVER1",25,0)
P2 S LRIDT=0 F I=0:0 S LRIDT=+$O(^TMP($J,LRVLOC,LRDFN,LRIDT)) Q:LRIDT<1  D P3 Q:LREND
"RTN","LRMIVER1",26,0)
 Q
"RTN","LRMIVER1",27,0)
P3 S LRWLSAVE=LRAA,LRLLT=^TMP($J,LRVLOC,LRDFN,LRIDT),LRACC=$P(LRLLT,U,6),LRAD=$E(LRLLT)_$P(LRACC," ",2)_"0000",X=$P(LRACC," "),DIC=68,DIC(0)="M"
"RTN","LRMIVER1",28,0)
 D ^DIC S LRAA=+Y,LRAN=$P(LRACC," ",3),LRCMNT=$S($D(^LR(LRDFN,"MI",LRIDT,99)):^(99),1:""),LRPG=0 D EN^LRMIPSZ1 S LRAA=LRWLSAVE Q:LREND
"RTN","LRMIVER1",29,0)
 Q
"RTN","LRMIVER1",30,0)
ACCEPT W !!,"Indicate those you wish to exclude from verification." D LRAN^LRMIUT
"RTN","LRMIVER1",31,0)
 S LRAN=0 F I=0:0 S LRAN=+$O(LRAN(LRAN)) Q:LRAN<1  S LRAD=0 F I=0:0 S LRAD=+$O(^LRO(68,"AVS",LRAA,LRAD)) Q:LRAD<1  K ^LRO(68,"AVS",LRAA,LRAD,LRAN)
"RTN","LRMIVER1",32,0)
 F I=0:0 W !,"Ready to approve" S %=2 D YN^DICN Q:%  W !,"Answer 'Y'es or 'N'o"
"RTN","LRMIVER1",33,0)
 Q:%'=1  W !
"RTN","LRMIVER1",34,0)
 S LRAD=0 F I=0:0 S LRAD=+$O(^LRO(68,"AVS",LRAA,LRAD)) Q:LRAD<1  D LRAD
"RTN","LRMIVER1",35,0)
 K LRWRDVEW,LRAD,LRAN,LRTK,Z
"RTN","LRMIVER1",36,0)
 Q
"RTN","LRMIVER1",37,0)
LRAD S LRAN=0 F I=0:0 S LRAN=+$O(^LRO(68,"AVS",LRAA,LRAD,LRAN)) Q:LRAN<1  D STUFF
"RTN","LRMIVER1",38,0)
 Q
"RTN","LRMIVER1",39,0)
STUFF S LRDFN=+^LRO(68,"AVS",LRAA,LRAD,LRAN),LRIDT=$P(^(LRAN),U,2)
"RTN","LRMIVER1",40,0)
 D UPDATE^LRPXRM(LRDFN,"MI",LRIDT)
"RTN","LRMIVER1",41,0)
 I $D(^LRO(68,LRAA,1,LRAD,1,LRAN,0)) S LRODT=$P(^(0),U,4),LRSN=$P(^(0),U,5),LRLLOC=$P(^(0),U,7),DFN=$P(^LR(LRDFN,0),U,3),LRDPF=$P(^(0),U,2),LRCDT=9999999-LRIDT D PT^LRX S Y=DT D VT^LRMIUT1
"RTN","LRMIVER1",42,0)
 S ^LR(LRDFN,"MI",LRIDT,0)=$P(^LR(LRDFN,"MI",LRIDT,0),U,1,2)_U_LRNT_U_DUZ_U_$P(^(0),U,5,99)
"RTN","LRMIVER1",43,0)
 S LRSET=1,II=0 F I=0:0 S II=+$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,II)) Q:I<1  I '$L($P(^(II,0),U,5)) S LRSET=0
"RTN","LRMIVER1",44,0)
 S:LRSET $P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),U,4)=LRNT W "."
"RTN","LRMIVER1",45,0)
 F II=1,5,8,11,16 I $D(^LR(LRDFN,"MI",LRIDT,II)),$P(^(II),U) K ^LRO(68,LRAA,1,LRAD,"AC",II,LRAN)
"RTN","LRMIVER1",46,0)
 Q
"RTN","LROC")
0^32^B15121360
"RTN","LROC",1,0)
LROC ;SLC/CJS - ORDER LIST CLEAN-UP ;5/27/03  14:50
"RTN","LROC",2,0)
 ;;5.2;LAB SERVICE;**121,295**;Sep 27, 1994
"RTN","LROC",3,0)
 ; Modified slc/jer to include set/kill for "D" cross-reference
"RTN","LROC",4,0)
 D ^LROCM W !!,?5,"Do you wish to Purge old Orders and Accessions " S %=2 D YN^DICN Q:%'=1
"RTN","LROC",5,0)
 S U="^",%DT="",X="T-"_$S($P(^LAB(69.9,1,0),U,9):$P(^(0),U,9),1:7) D ^%DT S LRSAVE=Y,LRAA=0
"RTN","LROC",6,0)
L1 S LRAA=$O(^LRO(68,LRAA)) G L3:LRAA<1 I $P(^LRO(68,LRAA,0),U,3)'="D" W !," USE FILE MANAGER TO CLEAR ",$P(^(0),U) G L1
"RTN","LROC",7,0)
 S DA=0 ; W !,"CLEAR ",$P(^LRO(68,LRAA,0),U)," ACCESSIONS? N//" R X G L1:X'["Y"
"RTN","LROC",8,0)
L2 S LRDAL=DA,DA=$O(^LRO(68,LRAA,1,DA)) G L1:LRSAVE<DA,L2:LRDAL=0,L1:LRDAL<1 K ^LRO(68,LRAA,1,LRDAL) G L2
"RTN","LROC",9,0)
L3 S ZTRTN="DQ^LROC",ZTDESC="Purge old orders and accessions",ZTIO="",ZTSAVE("LR*")="" D ^%ZTLOAD K ZTSK,ZTRTN,ZTDESC,ZTIO,ZTSAVE,LRDAL Q
"RTN","LROC",10,0)
DQ S I=0 F  S I=$O(^LRO(69,"C",I)) Q:I<1  S J=0 F  S J=$O(^LRO(69,"C",I,J)) Q:J>LRSAVE!(J<1)  K ^(J)
"RTN","LROC",11,0)
 S I=0 F  S I=$O(^LRO(69,"D",I)) Q:I<1  S J=0 F  S J=$O(^LRO(69,"D",I,J)) Q:J>LRSAVE!(J<1)  K ^(J)
"RTN","LROC",12,0)
 S DA=1 D ^LROC1 S DA=1
"RTN","LROC",13,0)
L4 S LRDAL=DA,DA=$O(^LRO(69,DA)) G L5:LRSAVE<DA,L4:LRDAL=1
"RTN","LROC",14,0)
 S ^(0)=$P(^LRO(69,0),U,1,2)_U_DA_U_($P(^(0),U,4)-1) S:DA<1 ^(0)=$P(^(0),U,1,2)
"RTN","LROC",15,0)
 I LRDAL'["0000" D
"RTN","LROC",16,0)
 . N LRSN
"RTN","LROC",17,0)
 . S LRSN=0 F  S LRSN=$O(^LRO(69,LRDAL,1,LRSN)) Q:LRSN<1  D NEW^LR7OB1(LRDAL,LRSN,"Z@") ;Call OE/RR
"RTN","LROC",18,0)
 . K ^LRO(69,LRDAL),^LRO(69,"B",LRDAL,LRDAL)
"RTN","LROC",19,0)
 Q:DA<1  G L4
"RTN","LROC",20,0)
L5 Q
"RTN","LROC",21,0)
 S LRSAVE=9999999-LRSAVE S I=1 F  S I=$O(^LAB(62.4,I)) Q:I<1  S LRLOST=$P(^(I,0),U,5) D L6:LRLOST
"RTN","LROC",22,0)
 W ! W:$E(IOST,1,2)="P-" @IOF D ^%ZISC Q
"RTN","LROC",23,0)
L6 S LRIDT=LRSAVE S LRIDT=LRIDT F  S LRIDT=$O(^LR(LRLOST,"CH",LRIDT)) Q:LRIDT<LRSAVE  K ^LR(LRLOST,"CH",LRIDT)
"RTN","LROC",24,0)
 Q
"RTN","LROC",25,0)
CENDEL W !,"STARTING CENTRAL ENTRY #: " R LRSTA:DTIME S LRSTA=LRSTA-1
"RTN","LROC",26,0)
 S U="^" W !,"ENDING CENTRAL ENTRY #: " R LRFIN:DTIME
"RTN","LROC",27,0)
 W !,"ARE YOU SURE? N//" D % Q:%'["Y"
"RTN","LROC",28,0)
 S ZTRTN="REENTRY^LROC",ZTIO="",ZTSAVE("L*")="" D ^%ZTLOAD K IO("Q"),ZTSK,ZTRTN,ZTIO,ZTSAVE
"RTN","LROC",29,0)
 K %H,%ZA,%ZB,%ZC,DA,I,J,LRAA,LRAN,LRDFN,LRDTM,LRDTN,LRFIN,LRIDT,LRIOZERO,LRLOST,LROCN,LROID,LRORD,LROSN,LRSAVE,LRSN,LRSS,LRSTA,POP,Z
"RTN","LROC",30,0)
 Q
"RTN","LROC",31,0)
REENTRY ;
"RTN","LROC",32,0)
 S LRORD=LRSTA F  S LRORD=$O(^LRO(69,"C",LRORD)) Q:LRORD<1!(LRORD>LRFIN)  D FDAT
"RTN","LROC",33,0)
 Q
"RTN","LROC",34,0)
FDAT S LRDTN=0 F  S LRDTN=$O(^LRO(69,"C",LRORD,LRDTN)) Q:LRDTN<1  D ZAP
"RTN","LROC",35,0)
 Q
"RTN","LROC",36,0)
ZAP ;
"RTN","LROC",37,0)
 S LRSN=0 F  S LRSN=$O(^LRO(69,"C",+LRORD,LRDTN,LRSN)) Q:LRSN<1  D
"RTN","LROC",38,0)
 . D OR ;OE/RR 2.5
"RTN","LROC",39,0)
 . D NEW^LR7OB1(LRDTN,LRSN,"Z@") ;Call OE/RR
"RTN","LROC",40,0)
 . K ^LRO(69,"C",+LRORD,LRDTN,LRSN) Q:'$D(^LRO(69,LRDTN,1,LRSN,0))  S LRDFN=+^(0)
"RTN","LROC",41,0)
 . K ^LRO(69,LRDTN,1,LRSN),^LRO(69,LRDTN,1,"AA",LRDFN,LRSN),^LRO(69,"D",LRDFN,LRDTN,LRSN)
"RTN","LROC",42,0)
 S LRAA=0 F  S LRAA=$O(^LRO(68,LRAA)) Q:LRAA<1  D:$P(^(LRAA,0),U,10)="Y" LRORD
"RTN","LROC",43,0)
 Q
"RTN","LROC",44,0)
LRORD S LRAN=$O(^LRO(68,LRAA,1,LRDTN,1,"D",LRORD,0)) Q:LRAN<1
"RTN","LROC",45,0)
 Q:'$D(^LRO(68,LRAA,1,LRDTN,1,LRAN,0))
"RTN","LROC",46,0)
 S LRSS=$P(^LRO(68,LRAA,0),"^",2)
"RTN","LROC",47,0)
 S LRDFN=+^LRO(68,LRAA,1,LRDTN,1,LRAN,0) G:'$D(^(3)) SKPLR S LRDTM=+^LRO(68,LRAA,1,LRDTN,1,LRAN,3) G:'LRDTM SKPLR S LRIDT=9999999-LRDTM
"RTN","LROC",48,0)
 I $D(^LR(LRDFN,LRSS,LRIDT,0)),$P(^(0),U,3) Q
"RTN","LROC",49,0)
 K ^LR(LRDFN,LRSS,LRIDT)
"RTN","LROC",50,0)
 I LRSS="CH" D CHKILL^LRPX(LRDFN,LRIDT)
"RTN","LROC",51,0)
SKPLR S X=^LRO(68,LRAA,1,LRDTN,1,LRAN,0),LROSN=$P(X,U,5),LROID=$P(X,U,6),LROCN=$S($D(^(.1)):$P(^(.1),U),1:"")
"RTN","LROC",52,0)
 K:$L(LROID) ^LRO(68,LRAA,1,LRDTN,1,"C",LROID,LRAN) K:$L(LROCN) ^LRO(68,LRAA,1,LRDTN,1,"D",LROCN,LRAN) K ^LRO(68,LRAA,1,LRDTN,1,LRAN)
"RTN","LROC",53,0)
 W "." Q
"RTN","LROC",54,0)
% R %:DTIME Q:%=""!(%["N")!(%["Y")  W !,"Answer 'Y' or 'N': " G %
"RTN","LROC",55,0)
 Q
"RTN","LROC",56,0)
OR ;Purge OE/RR entries
"RTN","LROC",57,0)
 I $$VER^LR7OU1>2.5 Q  ;OE/RR 2.5
"RTN","LROC",58,0)
 Q:'$D(^LRO(69,LRODT,1,LRSN,2))
"RTN","LROC",59,0)
 S LRTT=0 F N=0:0 S LRTT=$O(^LRO(69,LRODT,1,LRSN,2,LRTT)) Q:LRTT<1  I $D(^(LRTT,0)),$P(^(0),"^",7) S ORIFN=$P(^(0),"^",7),ORSTS="K" D ST^ORX
"RTN","LROC",60,0)
 Q
"RTN","LRPX")
0^28^B5134304
"RTN","LRPX",1,0)
LRPX ;SLC/STAFF - Process lab indexes ;9/26/03  15:39
"RTN","LRPX",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRPX",3,0)
 ;
"RTN","LRPX",4,0)
 ;
"RTN","LRPX",5,0)
CHKILL(LRDFN,LRIDT) ; from LROC
"RTN","LRPX",6,0)
 ; delete Chem xrefs in ^PXRMINDX(63
"RTN","LRPX",7,0)
 N DAS,DATE,DFN,LRDN,OK,TEST
"RTN","LRPX",8,0)
 I '$L($G(^LR(+$G(LRDFN),"CH",+$G(LRIDT),0))) Q
"RTN","LRPX",9,0)
 D PATIENT(LRDFN,.DFN,.OK) I 'OK Q
"RTN","LRPX",10,0)
 S DATE=9999999-LRIDT
"RTN","LRPX",11,0)
 S LRDN=1
"RTN","LRPX",12,0)
 F  S LRDN=$O(^LR(LRDFN,"CH",LRIDT,LRDN)) Q:LRDN<1  D
"RTN","LRPX",13,0)
 . D TESTS(LRDFN,LRIDT,LRDN,.TEST)
"RTN","LRPX",14,0)
 . S DAS=LRDFN_";CH;"_LRIDT_";"_LRDN
"RTN","LRPX",15,0)
 . D KLAB(DFN,DATE,TEST,DAS)
"RTN","LRPX",16,0)
 . ; D TIMESTMP^LRLOG(DFN,"CH",DATE,DUZ) *** future use ***
"RTN","LRPX",17,0)
 Q
"RTN","LRPX",18,0)
 ;
"RTN","LRPX",19,0)
CHSET(LRDFN,LRIDT) ; from LRVER3A
"RTN","LRPX",20,0)
 ; add Chem xrefs in ^PXRMINDX(63
"RTN","LRPX",21,0)
 N DAS,DATE,DFN,LRDN,OK,TEST
"RTN","LRPX",22,0)
 I '$P($G(^LR(+$G(LRDFN),"CH",+$G(LRIDT),0)),U,3) Q
"RTN","LRPX",23,0)
 D PATIENT(LRDFN,.DFN,.OK) I 'OK Q
"RTN","LRPX",24,0)
 S DATE=9999999-LRIDT
"RTN","LRPX",25,0)
 S LRDN=1
"RTN","LRPX",26,0)
 F  S LRDN=$O(^LR(LRDFN,"CH",LRIDT,LRDN)) Q:LRDN<1  D
"RTN","LRPX",27,0)
 . D TESTS(LRDFN,LRIDT,LRDN,.TEST)
"RTN","LRPX",28,0)
 . S DAS=LRDFN_";CH;"_LRIDT_";"_LRDN
"RTN","LRPX",29,0)
 . D SLAB(DFN,DATE,TEST,DAS)
"RTN","LRPX",30,0)
 . ; D TIMESTMP^LRLOG(DFN,"CH",DATE,DUZ) *** future use ***
"RTN","LRPX",31,0)
 Q
"RTN","LRPX",32,0)
 ;
"RTN","LRPX",33,0)
PATIENT(LRDFN,DFN,OK) ;
"RTN","LRPX",34,0)
 N ZERO
"RTN","LRPX",35,0)
 S OK=1
"RTN","LRPX",36,0)
 I '$G(LRDFN) S OK=0 Q
"RTN","LRPX",37,0)
 S ZERO=$G(^LR(LRDFN,0))
"RTN","LRPX",38,0)
 I $P(ZERO,U,2)'=2 S OK=0 Q
"RTN","LRPX",39,0)
 S DFN=+$P(ZERO,U,3)
"RTN","LRPX",40,0)
 I LRDFN'=$$LRDFN^LRPXAPIU(DFN) S OK=0
"RTN","LRPX",41,0)
 Q
"RTN","LRPX",42,0)
 ;
"RTN","LRPX",43,0)
TESTS(LRDFN,LRIDT,LRDN,TEST) ;
"RTN","LRPX",44,0)
 N DATA
"RTN","LRPX",45,0)
 S DATA=^LR(LRDFN,"CH",LRIDT,LRDN)
"RTN","LRPX",46,0)
 S TEST=+$P($P(DATA,U,3),"!",6)
"RTN","LRPX",47,0)
 I 'TEST S TEST=+$O(^LAB(60,"C","CH;"_LRDN_";1",0))
"RTN","LRPX",48,0)
 Q
"RTN","LRPX",49,0)
 ;
"RTN","LRPX",50,0)
 ; ------------- Lab Use Only ------------
"RTN","LRPX",51,0)
 ;
"RTN","LRPX",52,0)
KLAB(DFN,DATE,ITEM,NODE) ; from LRPXRM
"RTN","LRPX",53,0)
 ; delete index for lab data.
"RTN","LRPX",54,0)
 K ^PXRMINDX(63,"PI",DFN,ITEM,DATE,NODE) ; dbia 4114
"RTN","LRPX",55,0)
 K ^PXRMINDX(63,"IP",ITEM,DFN,DATE,NODE) ; dbia 4114
"RTN","LRPX",56,0)
 I ITEM=+ITEM Q
"RTN","LRPX",57,0)
 K ^PXRMINDX(63,"PDI",DFN,DATE,ITEM,NODE) ; dbia 4114
"RTN","LRPX",58,0)
 Q
"RTN","LRPX",59,0)
 ;
"RTN","LRPX",60,0)
SLAB(DFN,DATE,ITEM,NODE) ; from LRPXRM, LRPXSXRA, LRPXSXRB, LRPXSXRL
"RTN","LRPX",61,0)
 ; set index for lab data.
"RTN","LRPX",62,0)
 S ^PXRMINDX(63,"PI",DFN,ITEM,DATE,NODE)="" ; dbia 4114
"RTN","LRPX",63,0)
 S ^PXRMINDX(63,"IP",ITEM,DFN,DATE,NODE)="" ; dbia 4114
"RTN","LRPX",64,0)
 I ITEM=+ITEM Q
"RTN","LRPX",65,0)
 S ^PXRMINDX(63,"PDI",DFN,DATE,ITEM,NODE)="" ; dbia 4114
"RTN","LRPX",66,0)
 Q
"RTN","LRPX",67,0)
 ;
"RTN","LRPXAPI")
0^1^B23502596
"RTN","LRPXAPI",1,0)
LRPXAPI ;SLC/STAFF Lab Extract APIs ;2/26/04  13:34
"RTN","LRPXAPI",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRPXAPI",3,0)
 ;
"RTN","LRPXAPI",4,0)
 ; lab extract API routines
"RTN","LRPXAPI",5,0)
 ; dbia 4245
"RTN","LRPXAPI",6,0)
 ; no need to namespace local variables when calling these APIs
"RTN","LRPXAPI",7,0)
 ; the LRPXAPP routine shows examples of calling these APIs
"RTN","LRPXAPI",8,0)
 ; parameters: (.parameter is a call by reference)
"RTN","LRPXAPI",9,0)
 ; .TESTS array(ien)=ien^test name
"RTN","LRPXAPI",10,0)
 ; .VALUES array(seq of recent first)=col date/time^TEST^comment flag^RESULT
"RTN","LRPXAPI",11,0)
 ; .PATS array(dfn)=dfn^patient name
"RTN","LRPXAPI",12,0)
 ; .DATES array(-date)=date
"RTN","LRPXAPI",13,0)
 ;  DFN is patient ien
"RTN","LRPXAPI",14,0)
 ;  MAX is optional, # of tests,values,pts to return/call, default is 100
"RTN","LRPXAPI",15,0)
 ; .NEXT is optional, if NEXT'=0 then not finished
"RTN","LRPXAPI",16,0)
 ;  COND is optional, condition for value (example I V>30), default is ""
"RTN","LRPXAPI",17,0)
 ;  TYPE is [C M A] and is optional, default is C
"RTN","LRPXAPI",18,0)
 ;  DATE1 is optional, earliest date, default is 0 (oldest)
"RTN","LRPXAPI",19,0)
 ;  DATE2 is optional, latest date, default is 9999999 (most recent)
"RTN","LRPXAPI",20,0)
 ; .DATA is lab result or array(STYPE,#)= specimen, comments, datanumbers
"RTN","LRPXAPI",21,0)
 ;  DATE is collection date/time
"RTN","LRPXAPI",22,0)
 ;  ITEM is test number in file 60 for Chem data
"RTN","LRPXAPI",23,0)
 ;  ITEM is "M;[S T O A M];[S T O A M] ien" for Micro data
"RTN","LRPXAPI",24,0)
 ;  ITEM is "A;[S T O D M E F P I];[S T O D M E F P I] ien" for AP data
"RTN","LRPXAPI",25,0)
 ;  SOURCE is optional, array reference used as alternate list of patients
"RTN","LRPXAPI",26,0)
 ; .RESULT is patient's test result (result^flag^...)
"RTN","LRPXAPI",27,0)
 ;  NODE is data reference in ^PXRMINDX( indexes "lrdfn;CH;lridt;lrdn"
"RTN","LRPXAPI",28,0)
 ;  LRDFN is lab patient ien
"RTN","LRPXAPI",29,0)
 ;  LRIDT is lab collection time (inverted)
"RTN","LRPXAPI",30,0)
 ;  LRDN is lab datanumbers for test values
"RTN","LRPXAPI",31,0)
 ;  STYPE is "S" specimen node, "C" comments, "V" data nodes, "A" all
"RTN","LRPXAPI",32,0)
 ; .ERR is -1 when data cannot be found
"RTN","LRPXAPI",33,0)
 ;
"RTN","LRPXAPI",34,0)
 ; -- TESTS returns tests (items) on patient; dfn required --
"RTN","LRPXAPI",35,0)
 ;
"RTN","LRPXAPI",36,0)
TESTS(TESTS,DFN,TYPE,MAX,NEXT,COND,DATE1,DATE2) ; API
"RTN","LRPXAPI",37,0)
 I $G(TESTS)?1U1UN1.14UNP,'$G(MAX) S MAX=1000000000 ; default for ^TMP is all, else 100 tests
"RTN","LRPXAPI",38,0)
 E  S MAX=+$G(MAX,100)
"RTN","LRPXAPI",39,0)
 S TYPE=$G(TYPE,"C") ; default is CH data
"RTN","LRPXAPI",40,0)
 I TYPE="C" D TESTS^LRPXAPI1(.TESTS,+$G(DFN),MAX,.NEXT,$G(COND),$G(DATE1),$G(DATE2)) Q
"RTN","LRPXAPI",41,0)
 D TESTS^LRPXAPI3(.TESTS,+$G(DFN),TYPE,MAX,.NEXT,$G(COND),$G(DATE1),$G(DATE2)) Q
"RTN","LRPXAPI",42,0)
 Q
"RTN","LRPXAPI",43,0)
 ;
"RTN","LRPXAPI",44,0)
 ; -- RESULTS returns results on patient; dfn required --
"RTN","LRPXAPI",45,0)
 ;
"RTN","LRPXAPI",46,0)
RESULTS(VALUES,DFN,ITEM,MAX,NEXT,COND,DATE1,DATE2) ; API
"RTN","LRPXAPI",47,0)
 N TYPE
"RTN","LRPXAPI",48,0)
 I $G(VALUES)?1U1UN1.14UNP,'$G(MAX) S MAX=1000000000 ; default for ^TMP is all, else 100 results
"RTN","LRPXAPI",49,0)
 E  S MAX=+$G(MAX,100)
"RTN","LRPXAPI",50,0)
 S ITEM=$G(ITEM)
"RTN","LRPXAPI",51,0)
 I ITEM'=+ITEM,$L(ITEM)<5 D  Q  ; results for all of type or partial item
"RTN","LRPXAPI",52,0)
 . S MAX=+$G(MAX,10)
"RTN","LRPXAPI",53,0)
 . S TYPE=$E(ITEM)
"RTN","LRPXAPI",54,0)
 . I TYPE="C"!'$L(TYPE) D RESULTS^LRPXAPI1(.VALUES,+$G(DFN),MAX,.NEXT,$G(COND),$G(DATE1),$G(DATE2)) Q
"RTN","LRPXAPI",55,0)
 . D RESULTS^LRPXAPI3(.VALUES,+$G(DFN),ITEM,MAX,.NEXT,$G(COND),$G(DATE1),$G(DATE2)) Q
"RTN","LRPXAPI",56,0)
 I ITEM=+ITEM D TRESULTS^LRPXAPI1(.VALUES,+$G(DFN),ITEM,MAX,.NEXT,$G(COND),$G(DATE1),$G(DATE2)) Q
"RTN","LRPXAPI",57,0)
 S TYPE=$E(ITEM)
"RTN","LRPXAPI",58,0)
 D TRESULTS^LRPXAPI3(.VALUES,+$G(DFN),TYPE,ITEM,MAX,.NEXT,$G(COND),$G(DATE1),$G(DATE2)) Q
"RTN","LRPXAPI",59,0)
 Q
"RTN","LRPXAPI",60,0)
 ;
"RTN","LRPXAPI",61,0)
 ; -- PATIENTS returns patients with a specific item; item required --
"RTN","LRPXAPI",62,0)
 ;
"RTN","LRPXAPI",63,0)
PATIENTS(PATS,ITEM,SOURCE,MAX,NEXT,COND,DATE1,DATE2) ; API
"RTN","LRPXAPI",64,0)
 N TYPE
"RTN","LRPXAPI",65,0)
 I $G(PATS)?1U1UN1.14UNP,'$G(MAX) S MAX=1000000000 ; default for ^TMP is all, else 100 patients
"RTN","LRPXAPI",66,0)
 E  S MAX=+$G(MAX,100)
"RTN","LRPXAPI",67,0)
 S ITEM=$G(ITEM,0)
"RTN","LRPXAPI",68,0)
 I ITEM=0!'$L($G(ITEM)) D ALLPATS^LRPXAPI3(.PATS,$G(SOURCE),MAX,.NEXT,$G(COND),$G(DATE1),$G(DATE2)) Q
"RTN","LRPXAPI",69,0)
 I ITEM'=+ITEM,$L(ITEM)<5 D  Q  ; patients for all of type or partial item
"RTN","LRPXAPI",70,0)
 . S TYPE=$E(ITEM)
"RTN","LRPXAPI",71,0)
 . I TYPE="C" D PTS^LRPXAPI1(.PATS,$G(SOURCE),MAX,.NEXT,$G(COND),$G(DATE1),$G(DATE2)) Q
"RTN","LRPXAPI",72,0)
 . D PTS^LRPXAPI3(.PATS,TYPE,ITEM,$G(SOURCE),MAX,.NEXT,$G(COND),$G(DATE1),$G(DATE2)) Q
"RTN","LRPXAPI",73,0)
 I ITEM=+ITEM D PATIENTS^LRPXAPI1(.PATS,ITEM,$G(SOURCE),MAX,.NEXT,$G(COND),$G(DATE1),$G(DATE2)) Q
"RTN","LRPXAPI",74,0)
 S TYPE=$E(ITEM)
"RTN","LRPXAPI",75,0)
 D PATIENTS^LRPXAPI3(.PATS,TYPE,ITEM,$G(SOURCE),MAX,.NEXT,$G(COND),$G(DATE1),$G(DATE2)) Q
"RTN","LRPXAPI",76,0)
 Q
"RTN","LRPXAPI",77,0)
 ;
"RTN","LRPXAPI",78,0)
 ; -- DATES returns col date/times as (date) or (type,date); dfn required --
"RTN","LRPXAPI",79,0)
 ;
"RTN","LRPXAPI",80,0)
DATES(DATES,DFN,TYPE,MAX,NEXT,DATE1,DATE2) ; API
"RTN","LRPXAPI",81,0)
 I $G(DATES)?1U1UN1.14UNP,'$G(MAX) S MAX=1000000000 ; default for ^TMP is all, else 100 date/times
"RTN","LRPXAPI",82,0)
 E  S MAX=+$G(MAX,100)
"RTN","LRPXAPI",83,0)
 S TYPE=$G(TYPE,"C") ; default is CH data
"RTN","LRPXAPI",84,0)
 D DATES^LRPXAPI1(.DATES,+$G(DFN),TYPE,MAX,.NEXT,$G(DATE1),$G(DATE2))
"RTN","LRPXAPI",85,0)
 Q
"RTN","LRPXAPI",86,0)
 ;
"RTN","LRPXAPI",87,0)
 ; ------------ other extract APIs --------------------
"RTN","LRPXAPI",88,0)
 ;
"RTN","LRPXAPI",89,0)
VALUE(RESULT,DFN,DATE,TEST,COND,ERR) ; API
"RTN","LRPXAPI",90,0)
 ; returns result node as RESULT; dfn, date, test required
"RTN","LRPXAPI",91,0)
 D VALUE^LRPXAPI2(.RESULT,+$G(DFN),+$G(DATE),+$G(TEST),$G(COND),.ERR)
"RTN","LRPXAPI",92,0)
 Q
"RTN","LRPXAPI",93,0)
 ;
"RTN","LRPXAPI",94,0)
LRVALUE(RESULT,LRDFN,LRIDT,LRDN,COND,ERR) ; API
"RTN","LRPXAPI",95,0)
 ; returns result node as RESULT; lrdfn, lridt, lrdn required
"RTN","LRPXAPI",96,0)
 D LRVALUE^LRPXAPI2(.RESULT,+$G(LRDFN),+$G(LRIDT),+$G(LRDN),$G(COND),.ERR)
"RTN","LRPXAPI",97,0)
 Q
"RTN","LRPXAPI",98,0)
 ;
"RTN","LRPXAPI",99,0)
LRPXRM(RESULT,NODE,ITEM,TYPES) ; API
"RTN","LRPXAPI",100,0)
 ; returns lab data using ^PXRMINDX indexes; node, item required
"RTN","LRPXAPI",101,0)
 ; types of data: V value, S specimen, C comments, or combinations
"RTN","LRPXAPI",102,0)
 D LRPXRM^LRPXAPI2(.RESULT,$G(NODE),$G(ITEM),$G(TYPES,"VS"))
"RTN","LRPXAPI",103,0)
 Q
"RTN","LRPXAPI",104,0)
 ;
"RTN","LRPXAPI",105,0)
SPEC(DATA,DFN,DATE,STYPE,ERR) ; API
"RTN","LRPXAPI",106,0)
 ; returns specimen node, comments, data nodes
"RTN","LRPXAPI",107,0)
 ; returned in array DATA; dfn, date required
"RTN","LRPXAPI",108,0)
 D SPEC^LRPXAPI2(.DATA,+$G(DFN),+$G(DATE),$G(STYPE),.ERR)
"RTN","LRPXAPI",109,0)
 Q
"RTN","LRPXAPI",110,0)
 ;
"RTN","LRPXAPI",111,0)
LRSPEC(DATA,LRDFN,LRIDT,STYPE,ERR) ; API
"RTN","LRPXAPI",112,0)
 ; returns specimen node, comments, data nodes
"RTN","LRPXAPI",113,0)
 ; returned in array DATA; lrdfn, lridt required
"RTN","LRPXAPI",114,0)
 D LRSPEC^LRPXAPI2(.DATA,+$G(LRDFN),+$G(LRIDT),$G(STYPE),.ERR)
"RTN","LRPXAPI",115,0)
 Q
"RTN","LRPXAPI",116,0)
 ;
"RTN","LRPXAPI",117,0)
VERIFIED(LRDFN,LRIDT) ; API $$(lrdfn,lridt) -> 1 if verified, else 0
"RTN","LRPXAPI",118,0)
 Q $$VERIFIED^LRPXAPI2(+$G(LRDFN),+$G(LRIDT))
"RTN","LRPXAPI",119,0)
 ;
"RTN","LRPXAPI",120,0)
MIVERIFY(LRDFN,LRIDT,SUB) ; $$(lrdfn,lridt,sub) -> 1 if verified, else 0
"RTN","LRPXAPI",121,0)
 Q $$MIVERIFY^LRPXAPI2(+$G(LRDFN),+$G(LRIDT),$G(SUB,"MI"))
"RTN","LRPXAPI",122,0)
 ;
"RTN","LRPXAPI",123,0)
APVERIFY(LRDFN,LRIDT,SUB) ; $$(lrdfn,lridt,sub) -> 1 if verified, else 0
"RTN","LRPXAPI",124,0)
 Q $$APVERIFY^LRPXAPI2(+$G(LRDFN),+$G(LRIDT),$G(SUB))
"RTN","LRPXAPI",125,0)
 ;
"RTN","LRPXAPI",126,0)
VAL(LRDFN,LRIDT,LRDN) ; API $$(lrdfn,lridt,lrdn) -> result node
"RTN","LRPXAPI",127,0)
 Q $$VAL^LRPXAPI2(+$G(LRDFN),+$G(LRIDT),+$G(LRDN))
"RTN","LRPXAPI",128,0)
 ;
"RTN","LRPXAPI",129,0)
REFVAL(NODE) ; API $$(reference node) -> data node
"RTN","LRPXAPI",130,0)
 Q $$REFVAL^LRPXAPI2($G(NODE))
"RTN","LRPXAPI",131,0)
 ;
"RTN","LRPXAPI",132,0)
COMMENT(LRDFN,LRIDT) ; API $$(lrdfn,lridt) --> 1 if comment exists, else 0
"RTN","LRPXAPI",133,0)
 Q $$COMMENT^LRPXAPI2(+$G(LRDFN),+$G(LRIDT))
"RTN","LRPXAPI",134,0)
 ;
"RTN","LRPXAPI",135,0)
ACCY(TESTS,ACC,BDN) ; API
"RTN","LRPXAPI",136,0)
 ; returns TESTS from yearly accession, ACC, BDN required
"RTN","LRPXAPI",137,0)
 ; BDN is beginning date number
"RTN","LRPXAPI",138,0)
 D ACCY^LRPXAPI2(.TESTS,ACC,BDN)
"RTN","LRPXAPI",139,0)
 Q
"RTN","LRPXAPI",140,0)
 ;
"RTN","LRPXAPI",141,0)
CHNODE(ARRAY,NODE) ; API
"RTN","LRPXAPI",142,0)
 ; returns ARRAY of values on CH result node
"RTN","LRPXAPI",143,0)
 D CHNODE^LRPXAPI2(.ARRAY,$G(NODE))
"RTN","LRPXAPI",144,0)
 Q
"RTN","LRPXAPI",145,0)
 ;
"RTN","LRPXAPI",146,0)
HASITEM(DFN,ITEM) ; API $$(dfn,item) -> 1 if patient has item, else 0
"RTN","LRPXAPI",147,0)
 I $D(^PXRMINDX(63,"PI",+$G(DFN),$G(ITEM,0))) Q 1
"RTN","LRPXAPI",148,0)
 Q 0
"RTN","LRPXAPI",149,0)
 ;
"RTN","LRPXAPI1")
0^2^B56920134
"RTN","LRPXAPI1",1,0)
LRPXAPI1 ;SLC/STAFF Lab Extract API code ;10/28/03  11:29
"RTN","LRPXAPI1",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRPXAPI1",3,0)
 ;
"RTN","LRPXAPI1",4,0)
TESTS(TESTS,DFN,MAX,NEXT,COND,DATE1,DATE2) ; from LRPXAPI
"RTN","LRPXAPI1",5,0)
 ; returns lab tests on a patient
"RTN","LRPXAPI1",6,0)
 ; returned in array TESTS
"RTN","LRPXAPI1",7,0)
 N CNT,CONDOK,DATA,DATE,ERR,NMSP K DATA
"RTN","LRPXAPI1",8,0)
 S NMSP=$G(TESTS) K TESTS S TESTS=""
"RTN","LRPXAPI1",9,0)
 ; return all tests in ^TMP(NMSP,$J
"RTN","LRPXAPI1",10,0)
 I NMSP?1U1UN1.14UNP K ^TMP(NMSP,$J) S TESTS=NMSP
"RTN","LRPXAPI1",11,0)
 D DATES^LRPXAPIU(.DATE1,.DATE2)
"RTN","LRPXAPI1",12,0)
 S CONDOK=+$P($G(NEXT),U,2)
"RTN","LRPXAPI1",13,0)
 S NEXT=+$G(NEXT)
"RTN","LRPXAPI1",14,0)
 I $L(COND),'CONDOK,'$$CONDOK^LRPXAPIU(COND,"C") Q
"RTN","LRPXAPI1",15,0)
 S CNT=0
"RTN","LRPXAPI1",16,0)
 F  S NEXT=$O(^PXRMINDX(63,"PI",DFN,NEXT)) Q:NEXT<1  D  Q:CNT'<MAX
"RTN","LRPXAPI1",17,0)
 . S DATE=+$O(^PXRMINDX(63,"PI",DFN,NEXT,DATE1))
"RTN","LRPXAPI1",18,0)
 . I 'DATE Q
"RTN","LRPXAPI1",19,0)
 . I DATE>DATE2 Q
"RTN","LRPXAPI1",20,0)
 . I $L(COND) D VALUE^LRPXAPI2(.DATA,DFN,DATE,NEXT,COND,.ERR) I ERR Q
"RTN","LRPXAPI1",21,0)
 . S CNT=CNT+1
"RTN","LRPXAPI1",22,0)
 . I TESTS?1U1UN1.14UNP D  Q
"RTN","LRPXAPI1",23,0)
 .. S ^TMP(TESTS,$J,NEXT)=NEXT_U_$$TESTNM^LRPXAPIU(NEXT)
"RTN","LRPXAPI1",24,0)
 . S TESTS(NEXT)=NEXT_U_$$TESTNM^LRPXAPIU(NEXT)
"RTN","LRPXAPI1",25,0)
 S NEXT=+NEXT_U_1
"RTN","LRPXAPI1",26,0)
 Q
"RTN","LRPXAPI1",27,0)
 ;
"RTN","LRPXAPI1",28,0)
RESULTS(VALUES,DFN,MAX,NEXT,COND,DATE1,DATE2) ; from LRPXAPI
"RTN","LRPXAPI1",29,0)
 ; returns all lab results on a patient
"RTN","LRPXAPI1",30,0)
 ; returned in array VALUES
"RTN","LRPXAPI1",31,0)
 ; format: date^test^comment^results
"RTN","LRPXAPI1",32,0)
 ; date is collection date/time
"RTN","LRPXAPI1",33,0)
 ; test is file 60 ien
"RTN","LRPXAPI1",34,0)
 ; comment is 1 (exists) or 0 (no comment)
"RTN","LRPXAPI1",35,0)
 ; results are result node (value^flag^...)
"RTN","LRPXAPI1",36,0)
 N CNT,COMMENT,CONDOK,DATA,DATE,ERR,LRDFN,LRDN,LRIDT,LRIDT1,NMSP,OK,RESULT,TEST
"RTN","LRPXAPI1",37,0)
 S NMSP=$G(VALUES) K VALUES S VALUES=""
"RTN","LRPXAPI1",38,0)
 ; return all results in ^TMP(NMSP,$J
"RTN","LRPXAPI1",39,0)
 I NMSP?1U1UN1.14UNP K ^TMP(NMSP,$J) S VALUES=NMSP
"RTN","LRPXAPI1",40,0)
 S LRDFN=$$LRDFN^LRPXAPIU(DFN)
"RTN","LRPXAPI1",41,0)
 D DATES^LRPXAPIU(.DATE1,.DATE2)
"RTN","LRPXAPI1",42,0)
 S LRIDT=$$LRIDT^LRPXAPIU(DATE2)
"RTN","LRPXAPI1",43,0)
 S LRIDT1=$$LRIDT^LRPXAPIU(DATE1)
"RTN","LRPXAPI1",44,0)
 S CONDOK=+$P($G(NEXT),U,2)
"RTN","LRPXAPI1",45,0)
 S NEXT=+$G(NEXT) I NEXT S LRIDT=NEXT
"RTN","LRPXAPI1",46,0)
 I $L(COND),'CONDOK,'$$CONDOK^LRPXAPIU(COND,"C") Q
"RTN","LRPXAPI1",47,0)
 I $E(COND)="|" S COND=$E(COND,2,245)
"RTN","LRPXAPI1",48,0)
 I $E(COND)="~" S COND=$E(COND,2,245)
"RTN","LRPXAPI1",49,0)
 I $L(COND) S COND=$$REPLACE^LRPXAPI2("I "_COND)
"RTN","LRPXAPI1",50,0)
 S CNT=0
"RTN","LRPXAPI1",51,0)
 S OK=0
"RTN","LRPXAPI1",52,0)
 F  S LRIDT=$O(^LR(LRDFN,"CH",LRIDT)) Q:LRIDT<1  D  Q:OK
"RTN","LRPXAPI1",53,0)
 . I '$$VERIFIED^LRPXAPI2(LRDFN,LRIDT) Q
"RTN","LRPXAPI1",54,0)
 . I LRIDT<1 S OK=1,LRIDT=0 Q
"RTN","LRPXAPI1",55,0)
 . I LRIDT1,LRIDT>LRIDT1 S OK=1,LRIDT=0 Q
"RTN","LRPXAPI1",56,0)
 . S CNT=CNT+1
"RTN","LRPXAPI1",57,0)
 . S DATE=$$LRIDT^LRPXAPIU(LRIDT)
"RTN","LRPXAPI1",58,0)
 . S COMMENT=$$COMMENT^LRPXAPI2(LRDFN,LRIDT)
"RTN","LRPXAPI1",59,0)
 . S LRDN=1
"RTN","LRPXAPI1",60,0)
 . F  S LRDN=$O(^LR(LRDFN,"CH",LRIDT,LRDN)) Q:LRDN<1  S RESULT=^(LRDN) D
"RTN","LRPXAPI1",61,0)
 .. S TEST=$$TEST^LRPXAPIU(LRDN)
"RTN","LRPXAPI1",62,0)
 .. I 'TEST Q
"RTN","LRPXAPI1",63,0)
 .. I $L(COND) D LRVAL^LRPXAPI2(.DATA,LRDFN,LRIDT,LRDN,COND,.ERR) I ERR Q
"RTN","LRPXAPI1",64,0)
 .. E  S DATA=RESULT
"RTN","LRPXAPI1",65,0)
 .. I VALUES?1U1UN1.14UNP D  Q
"RTN","LRPXAPI1",66,0)
 ... S ^TMP(VALUES,$J,LRIDT_" "_TEST)=DATE_U_TEST_U_COMMENT_U_DATA
"RTN","LRPXAPI1",67,0)
 .. S VALUES(-DATE_" "_TEST)=DATE_U_TEST_U_COMMENT_U_DATA
"RTN","LRPXAPI1",68,0)
 . I CNT'<MAX S OK=1 Q
"RTN","LRPXAPI1",69,0)
 S NEXT=+LRIDT_U_1
"RTN","LRPXAPI1",70,0)
 Q
"RTN","LRPXAPI1",71,0)
 ;
"RTN","LRPXAPI1",72,0)
TRESULTS(VALUES,DFN,TEST,MAX,NEXT,COND,DATE1,DATE2) ; from LRPXAPI
"RTN","LRPXAPI1",73,0)
 ; returns a lab test's results on a patient
"RTN","LRPXAPI1",74,0)
 ; returned in array VALUES
"RTN","LRPXAPI1",75,0)
 ; format: date^test^comment^results
"RTN","LRPXAPI1",76,0)
 ; date is collection date/time
"RTN","LRPXAPI1",77,0)
 ; test is file 60 ien
"RTN","LRPXAPI1",78,0)
 ; comment is 1 (exists) or 0 (no comment)
"RTN","LRPXAPI1",79,0)
 ; results are result node (value^flag^...)
"RTN","LRPXAPI1",80,0)
 N CNT,COMMENT,CONDOK,DATA,DATE,ERR,LRDFN,LRDN,LRIDT,NMSP,NODE,OK
"RTN","LRPXAPI1",81,0)
 S NMSP=$G(VALUES) K VALUES S VALUES=""
"RTN","LRPXAPI1",82,0)
 ; return all test results in ^TMP(NMSP,$J
"RTN","LRPXAPI1",83,0)
 I NMSP?1U1UN1.14UNP K ^TMP(NMSP,$J) S VALUES=NMSP
"RTN","LRPXAPI1",84,0)
 S CONDOK=+$P($G(NEXT),U,2)
"RTN","LRPXAPI1",85,0)
 I $L(COND),'CONDOK,'$$CONDOK^LRPXAPIU(COND,"C") Q
"RTN","LRPXAPI1",86,0)
 I $L(COND) D
"RTN","LRPXAPI1",87,0)
 . I $E(COND)="|" S COND=$E(COND,2,245)
"RTN","LRPXAPI1",88,0)
 . I $E(COND)="~" S COND=$E(COND,2,245)
"RTN","LRPXAPI1",89,0)
 . S COND=$$REPLACE^LRPXAPI2("I "_COND)
"RTN","LRPXAPI1",90,0)
 D DATES^LRPXAPIU(.DATE1,.DATE2)
"RTN","LRPXAPI1",91,0)
 S DATE=DATE2
"RTN","LRPXAPI1",92,0)
 S NEXT=+$G(NEXT) I NEXT S DATE=NEXT
"RTN","LRPXAPI1",93,0)
 S CNT=0
"RTN","LRPXAPI1",94,0)
 S OK=0
"RTN","LRPXAPI1",95,0)
 F  S DATE=$O(^PXRMINDX(63,"IP",TEST,DFN,DATE),-1) Q:DATE=""  D  Q:OK
"RTN","LRPXAPI1",96,0)
 . I DATE<DATE1 S OK=1,DATE=0 Q
"RTN","LRPXAPI1",97,0)
 . I DATE>DATE2 S OK=1,DATE=0 Q
"RTN","LRPXAPI1",98,0)
 . S NODE=$O(^PXRMINDX(63,"IP",TEST,DFN,DATE,1))
"RTN","LRPXAPI1",99,0)
 . S LRDFN=+$P(NODE,";")
"RTN","LRPXAPI1",100,0)
 . S LRIDT=+$P(NODE,";",3)
"RTN","LRPXAPI1",101,0)
 . S COMMENT=$$COMMENT^LRPXAPI2(LRDFN,LRIDT)
"RTN","LRPXAPI1",102,0)
 . S NODE=""
"RTN","LRPXAPI1",103,0)
 . F  S NODE=$O(^PXRMINDX(63,"IP",TEST,DFN,DATE,NODE)) Q:NODE=""  D  Q:OK
"RTN","LRPXAPI1",104,0)
 .. S LRDN=+$P(NODE,";",4)
"RTN","LRPXAPI1",105,0)
 .. D LRVAL^LRPXAPI2(.DATA,LRDFN,LRIDT,LRDN,COND,.ERR) I ERR Q
"RTN","LRPXAPI1",106,0)
 .. S CNT=CNT+1
"RTN","LRPXAPI1",107,0)
 .. I VALUES?1U1UN1.14UNP D  Q
"RTN","LRPXAPI1",108,0)
 ... S ^TMP(VALUES,$J,-DATE)=DATE_U_TEST_U_COMMENT_U_DATA
"RTN","LRPXAPI1",109,0)
 .. S VALUES(-DATE_" "_TEST)=DATE_U_TEST_U_COMMENT_U_DATA
"RTN","LRPXAPI1",110,0)
 .. I CNT'<MAX S OK=1 Q
"RTN","LRPXAPI1",111,0)
 S NEXT=+DATE_U_1
"RTN","LRPXAPI1",112,0)
 Q
"RTN","LRPXAPI1",113,0)
 ;
"RTN","LRPXAPI1",114,0)
PATIENTS(PATS,TEST,SOURCE,MAX,NEXT,COND,DATE1,DATE2) ; from LRPXAPI
"RTN","LRPXAPI1",115,0)
 ; uses PATS within this scope
"RTN","LRPXAPI1",116,0)
 ; returns patients who have a test result
"RTN","LRPXAPI1",117,0)
 ; returned in array PATS
"RTN","LRPXAPI1",118,0)
 ; format: DFN^patient name
"RTN","LRPXAPI1",119,0)
 N CNT,CONDOK,DATA,DATE,DFN,DONE,ERR,LRDFN,LRDN,LRIDT,NMSP,NODE,OK
"RTN","LRPXAPI1",120,0)
 S NMSP=$G(PATS) K PATS S PATS=""
"RTN","LRPXAPI1",121,0)
 ; return patients in ^TMP(NMSP,$J
"RTN","LRPXAPI1",122,0)
 I NMSP?1U1UN1.14UNP K ^TMP(NMSP,$J) S PATS=NMSP
"RTN","LRPXAPI1",123,0)
 D DATES^LRPXAPIU(.DATE1,.DATE2)
"RTN","LRPXAPI1",124,0)
 S CONDOK=+$P($G(NEXT),U,2)
"RTN","LRPXAPI1",125,0)
 S NEXT=+$G(NEXT)
"RTN","LRPXAPI1",126,0)
 S DFN=NEXT
"RTN","LRPXAPI1",127,0)
 I $L(COND),'CONDOK,'$$CONDOK^LRPXAPIU(COND,"C") Q
"RTN","LRPXAPI1",128,0)
 I $E(COND)="|" S COND=$E(COND,2,245)
"RTN","LRPXAPI1",129,0)
 I $E(COND)="~" S COND=$E(COND,2,245)
"RTN","LRPXAPI1",130,0)
 I $L(COND) S COND=$$REPLACE^LRPXAPI2("I "_COND)
"RTN","LRPXAPI1",131,0)
 S CNT=0
"RTN","LRPXAPI1",132,0)
 I '$L(SOURCE) D
"RTN","LRPXAPI1",133,0)
 . F  S DFN=$O(^PXRMINDX(63,"IP",TEST,DFN)) Q:DFN<1  D PATS Q:CNT'<MAX
"RTN","LRPXAPI1",134,0)
 E  D
"RTN","LRPXAPI1",135,0)
 . F  S DFN=$O(@SOURCE@(DFN)) Q:DFN<1  D PATS Q:CNT'<MAX
"RTN","LRPXAPI1",136,0)
 S NEXT=+DFN_U_1
"RTN","LRPXAPI1",137,0)
 Q
"RTN","LRPXAPI1",138,0)
PATS ; within scope of PATIENTS
"RTN","LRPXAPI1",139,0)
 S DONE=0
"RTN","LRPXAPI1",140,0)
 S OK=0
"RTN","LRPXAPI1",141,0)
 S DATE=DATE1
"RTN","LRPXAPI1",142,0)
 F  S DATE=$O(^PXRMINDX(63,"IP",TEST,DFN,DATE)) Q:DATE<1  D  Q:DONE
"RTN","LRPXAPI1",143,0)
 . I DATE>DATE2 S DONE=1 Q
"RTN","LRPXAPI1",144,0)
 . I '$L(COND) S OK=1,DONE=1 Q
"RTN","LRPXAPI1",145,0)
 . S OK=0
"RTN","LRPXAPI1",146,0)
 . S NODE=""
"RTN","LRPXAPI1",147,0)
 . F  S NODE=$O(^PXRMINDX(63,"IP",TEST,DFN,DATE,NODE)) Q:NODE=""  D  Q:OK
"RTN","LRPXAPI1",148,0)
 .. S LRDFN=+$P(NODE,";")
"RTN","LRPXAPI1",149,0)
 .. S LRIDT=+$P(NODE,";",3)
"RTN","LRPXAPI1",150,0)
 .. S LRDN=+$P(NODE,";",4)
"RTN","LRPXAPI1",151,0)
 .. D LRVAL^LRPXAPI2(.DATA,LRDFN,LRIDT,LRDN,COND,.ERR) I ERR Q
"RTN","LRPXAPI1",152,0)
 .. S OK=1
"RTN","LRPXAPI1",153,0)
 .. S DONE=1
"RTN","LRPXAPI1",154,0)
 I OK D
"RTN","LRPXAPI1",155,0)
 . S CNT=CNT+1
"RTN","LRPXAPI1",156,0)
 . I PATS?1U1UN1.14UNP D  Q
"RTN","LRPXAPI1",157,0)
 .. S ^TMP(PATS,$J,DFN)=DFN_U_$$DFNM^LRPXAPIU(DFN)
"RTN","LRPXAPI1",158,0)
 . S PATS(DFN)=DFN_U_$$DFNM^LRPXAPIU(DFN)
"RTN","LRPXAPI1",159,0)
 Q
"RTN","LRPXAPI1",160,0)
 ;
"RTN","LRPXAPI1",161,0)
PTS(PATS,SOURCE,MAX,NEXT,COND,DATE1,DATE2) ; from LRPXAPI
"RTN","LRPXAPI1",162,0)
 ; uses APATS within this scope
"RTN","LRPXAPI1",163,0)
 ; returns all patients that have lab data
"RTN","LRPXAPI1",164,0)
 N CONDOK,CNT,DATE,DFN,ERR,ITEM,NMSP,OK,TYPE
"RTN","LRPXAPI1",165,0)
 ; if item exists in condition, route to other procedure
"RTN","LRPXAPI1",166,0)
 S CONDOK=+$P($G(NEXT),U,2)
"RTN","LRPXAPI1",167,0)
 I $L(COND),'CONDOK,'$$CONDOK^LRPXAPIU(COND,"C") Q
"RTN","LRPXAPI1",168,0)
 I $L(COND) D  Q
"RTN","LRPXAPI1",169,0)
 . D ITEM^LRPXAPI6(.ITEM,TYPE,COND,.ERR) I ERR Q
"RTN","LRPXAPI1",170,0)
 . D PATIENTS(.PATS,ITEM,SOURCE,MAX,.NEXT,COND,DATE1,DATE2) Q
"RTN","LRPXAPI1",171,0)
 S NMSP=$G(PATS) K PATS S PATS=""
"RTN","LRPXAPI1",172,0)
 ; return patients in ^TMP(NMSP,$J
"RTN","LRPXAPI1",173,0)
 I NMSP?1U1UN1.14UNP K ^TMP(NMSP,$J) S PATS=NMSP
"RTN","LRPXAPI1",174,0)
 D DATES^LRPXAPIU(.DATE1,.DATE2)
"RTN","LRPXAPI1",175,0)
 S NEXT=+$G(NEXT)
"RTN","LRPXAPI1",176,0)
 S DFN=NEXT
"RTN","LRPXAPI1",177,0)
 S CNT=0
"RTN","LRPXAPI1",178,0)
 I '$L(SOURCE) D
"RTN","LRPXAPI1",179,0)
 . F  S DFN=$O(^PXRMINDX(63,"PI",DFN)) Q:DFN<1  D PT Q:CNT'<MAX
"RTN","LRPXAPI1",180,0)
 E  D
"RTN","LRPXAPI1",181,0)
 . F  S DFN=$O(@SOURCE@(DFN)) Q:DFN<1  D PT Q:CNT'<MAX
"RTN","LRPXAPI1",182,0)
 S NEXT=+DFN_U_1
"RTN","LRPXAPI1",183,0)
 Q
"RTN","LRPXAPI1",184,0)
PT ; within scope of ALLPATS
"RTN","LRPXAPI1",185,0)
 S OK=0
"RTN","LRPXAPI1",186,0)
 S ITEM=0
"RTN","LRPXAPI1",187,0)
 F  S ITEM=$O(^PXRMINDX(63,"PI",DFN,ITEM)) Q:ITEM<1  D  Q:OK
"RTN","LRPXAPI1",188,0)
 . S DATE=DATE1
"RTN","LRPXAPI1",189,0)
 . F  S DATE=+$O(^PXRMINDX(63,"PI",DFN,ITEM,DATE)) Q:DATE<1  D  Q:OK
"RTN","LRPXAPI1",190,0)
 .. I DATE>DATE2 Q
"RTN","LRPXAPI1",191,0)
 .. S OK=1 Q
"RTN","LRPXAPI1",192,0)
 I OK D
"RTN","LRPXAPI1",193,0)
 . S CNT=CNT+1
"RTN","LRPXAPI1",194,0)
 . I PATS?1U1UN1.14UNP D  Q
"RTN","LRPXAPI1",195,0)
 .. S ^TMP(PATS,$J,DFN)=DFN_U_$$DFNM^LRPXAPIU(DFN)
"RTN","LRPXAPI1",196,0)
 . S PATS(DFN)=DFN_U_$$DFNM^LRPXAPIU(DFN)
"RTN","LRPXAPI1",197,0)
 Q
"RTN","LRPXAPI1",198,0)
 ;
"RTN","LRPXAPI1",199,0)
DATES(DATES,DFN,TYPE,MAX,NEXT,DATE1,DATE2) ; from LRPXAPI
"RTN","LRPXAPI1",200,0)
 ; returns dates of data occurrence
"RTN","LRPXAPI1",201,0)
 ; returned in array DATES
"RTN","LRPXAPI1",202,0)
 N CNT,DATE,ITEM,LRDFN,LRIDT,LRIDT1,NMSP,OK,STOP
"RTN","LRPXAPI1",203,0)
 S NMSP=$G(DATES) K DATES S DATES=""
"RTN","LRPXAPI1",204,0)
 ; return all patients in ^TMP(NMSP,$J
"RTN","LRPXAPI1",205,0)
 I NMSP?1U1UN1.14UNP K ^TMP(NMSP,$J) S DATES=NMSP
"RTN","LRPXAPI1",206,0)
 D DATES^LRPXAPIU(.DATE1,.DATE2)
"RTN","LRPXAPI1",207,0)
 S CNT=0
"RTN","LRPXAPI1",208,0)
 I TYPE="C" D  Q
"RTN","LRPXAPI1",209,0)
 . S LRDFN=$$LRDFN^LRPXAPIU(DFN)
"RTN","LRPXAPI1",210,0)
 . S LRIDT=$$LRIDT^LRPXAPIU(DATE2)
"RTN","LRPXAPI1",211,0)
 . S LRIDT1=$$LRIDT^LRPXAPIU(DATE1)
"RTN","LRPXAPI1",212,0)
 . S NEXT=+$G(NEXT) I NEXT S LRIDT=NEXT
"RTN","LRPXAPI1",213,0)
 . S OK=0
"RTN","LRPXAPI1",214,0)
 . F  S LRIDT=$O(^LR(LRDFN,"CH",LRIDT)) Q:LRIDT<1  D  Q:OK
"RTN","LRPXAPI1",215,0)
 .. I '$$VERIFIED^LRPXAPI2(LRDFN,LRIDT) Q
"RTN","LRPXAPI1",216,0)
 .. I LRIDT<1 S OK=1,LRIDT=0 Q
"RTN","LRPXAPI1",217,0)
 .. I LRIDT1,LRIDT>LRIDT1 S OK=1,LRIDT=0 Q
"RTN","LRPXAPI1",218,0)
 .. S DATE=$$LRIDT^LRPXAPIU(LRIDT)
"RTN","LRPXAPI1",219,0)
 .. S CNT=CNT+1
"RTN","LRPXAPI1",220,0)
 .. I CNT'<MAX S OK=1
"RTN","LRPXAPI1",221,0)
 .. I DATES?1U1UN1.14UNP S ^TMP(DATES,$J,-DATE)=DATE Q
"RTN","LRPXAPI1",222,0)
 .. S DATES(-DATE)=DATE
"RTN","LRPXAPI1",223,0)
 . S NEXT=+LRIDT
"RTN","LRPXAPI1",224,0)
 S DATE=DATE2
"RTN","LRPXAPI1",225,0)
 S NEXT=+$G(NEXT) I NEXT S DATE=NEXT
"RTN","LRPXAPI1",226,0)
 S OK=0
"RTN","LRPXAPI1",227,0)
 F  S DATE=$O(^PXRMINDX(63,"PDI",DFN,DATE),-1) Q:DATE=""  D  Q:OK
"RTN","LRPXAPI1",228,0)
 . I DATE<DATE1 S OK=1,DATE=0 Q
"RTN","LRPXAPI1",229,0)
 . S ITEM=TYPE,STOP=TYPE_"ZZZZ"
"RTN","LRPXAPI1",230,0)
 . F  S ITEM=$O(^PXRMINDX(63,"PDI",DFN,DATE,ITEM)) Q:ITEM=""  Q:ITEM]STOP  D  Q
"RTN","LRPXAPI1",231,0)
 .. S CNT=CNT+1
"RTN","LRPXAPI1",232,0)
 .. I DATES?1U1UN1.14UNP D  Q
"RTN","LRPXAPI1",233,0)
 ... S ^TMP(DATES,$J,-DATE)=DATE
"RTN","LRPXAPI1",234,0)
 .. S DATES(-DATE)=DATE
"RTN","LRPXAPI1",235,0)
 . I CNT'<MAX S OK=1 Q
"RTN","LRPXAPI1",236,0)
 S NEXT=+DATE
"RTN","LRPXAPI1",237,0)
 Q
"RTN","LRPXAPI1",238,0)
 ;
"RTN","LRPXAPI2")
0^39^B78388700
"RTN","LRPXAPI2",1,0)
LRPXAPI2 ; SLC/STAFF Lab Extract API code ;2/26/04  15:15
"RTN","LRPXAPI2",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRPXAPI2",3,0)
 ;
"RTN","LRPXAPI2",4,0)
VERIFIED(LRDFN,LRIDT) ; $$(lrdfn,lridt) -> 1 if verified, else 0
"RTN","LRPXAPI2",5,0)
 ; checks for date report completed
"RTN","LRPXAPI2",6,0)
 I +$P($G(^LR(LRDFN,"CH",LRIDT,0)),U,3) Q 1
"RTN","LRPXAPI2",7,0)
 Q 0
"RTN","LRPXAPI2",8,0)
 ;
"RTN","LRPXAPI2",9,0)
MIVERIFY(LRDFN,LRIDT,SUB) ; $$(lrdfn,lridt,sub) -> 1 if verified, else 0
"RTN","LRPXAPI2",10,0)
 ; checks for report date approved on subscript
"RTN","LRPXAPI2",11,0)
 S SUB=+$G(SUB)
"RTN","LRPXAPI2",12,0)
 I SUB>0,SUB<17,$G(^LR(LRDFN,"MI",LRIDT,SUB)) Q 1
"RTN","LRPXAPI2",13,0)
 Q 0
"RTN","LRPXAPI2",14,0)
 ;
"RTN","LRPXAPI2",15,0)
APVERIFY(LRDFN,LRIDT,APSUB) ; $$(lrdfn,lridt,ap subscrpt) -> 1 if verified
"RTN","LRPXAPI2",16,0)
 ; autopsy checks for:
"RTN","LRPXAPI2",17,0)
 ;   date of death, 
"RTN","LRPXAPI2",18,0)
 ;   date autopsy report completed,
"RTN","LRPXAPI2",19,0)
 ;   autopsy release date/time
"RTN","LRPXAPI2",20,0)
 ; otherwise, checks for date report completed and report release date
"RTN","LRPXAPI2",21,0)
 N OK
"RTN","LRPXAPI2",22,0)
 S OK=0
"RTN","LRPXAPI2",23,0)
 I APSUB="CY"!(APSUB="EM")!(APSUB="SP") D  Q OK
"RTN","LRPXAPI2",24,0)
 . I $P($G(^LR(LRDFN,APSUB,LRIDT,0)),U,3),$P(^(0),U,11) S OK=1
"RTN","LRPXAPI2",25,0)
 I APSUB="AU" D  Q OK
"RTN","LRPXAPI2",26,0)
 . I '$$DOD^LRPXAPIU($$DFN^LRPXAPIU(LRDFN)) Q
"RTN","LRPXAPI2",27,0)
 . I '$P($G(^LR(LRDFN,"AU")),U,3) Q
"RTN","LRPXAPI2",28,0)
 . I '$P(^LR(LRDFN,"AU"),U,15) Q
"RTN","LRPXAPI2",29,0)
 . S OK=1
"RTN","LRPXAPI2",30,0)
 Q OK
"RTN","LRPXAPI2",31,0)
 ;
"RTN","LRPXAPI2",32,0)
VAL(LRDFN,LRIDT,LRDN) ; from LRPXAPI
"RTN","LRPXAPI2",33,0)
 ; $$(lrdfn,lridt,lrdn) -> result node
"RTN","LRPXAPI2",34,0)
 Q $G(^LR(LRDFN,"CH",LRIDT,LRDN))
"RTN","LRPXAPI2",35,0)
 ;
"RTN","LRPXAPI2",36,0)
REFVAL(REF) ; from LRPXAPI
"RTN","LRPXAPI2",37,0)
 ; $$(reference location in ^LR) -> data node
"RTN","LRPXAPI2",38,0)
 N SUB
"RTN","LRPXAPI2",39,0)
 I REF'[";" Q ""
"RTN","LRPXAPI2",40,0)
 S SUB=$P(REF,";",2)
"RTN","LRPXAPI2",41,0)
 S SUB=""""_SUB_""""
"RTN","LRPXAPI2",42,0)
 S $P(REF,";",2)=SUB
"RTN","LRPXAPI2",43,0)
 S REF=$TR(REF,";",",")
"RTN","LRPXAPI2",44,0)
 S REF="^LR("_REF_")"
"RTN","LRPXAPI2",45,0)
 Q $G(@REF)
"RTN","LRPXAPI2",46,0)
 ;
"RTN","LRPXAPI2",47,0)
LRPXRM(RESULT,REF,ITEM,TYPES) ; from LRPXAPI
"RTN","LRPXAPI2",48,0)
 ; returns result node from index subscript as RESULT
"RTN","LRPXAPI2",49,0)
 N FILE,IEN,SECTION,TEST,VALUES
"RTN","LRPXAPI2",50,0)
 S RESULT=""
"RTN","LRPXAPI2",51,0)
 S VALUES=$$REFVAL(REF)
"RTN","LRPXAPI2",52,0)
 I '$L(VALUES) Q
"RTN","LRPXAPI2",53,0)
 I ITEM>0 D  Q
"RTN","LRPXAPI2",54,0)
 . S $P(VALUES,U)=$$VRESULT^LRPXAPIU(ITEM,$P(VALUES,U))
"RTN","LRPXAPI2",55,0)
 . S RESULT=+ITEM_U_$$TESTNM^LRPXAPIU(+ITEM)_U_VALUES
"RTN","LRPXAPI2",56,0)
 . D SC(.RESULT,REF,TYPES)
"RTN","LRPXAPI2",57,0)
 I '$L(ITEM) D  Q
"RTN","LRPXAPI2",58,0)
 . I $P(REF,";",2)'="CH" Q
"RTN","LRPXAPI2",59,0)
 . S TEST=$$TEST^LRPXAPIU(+$P(REF,";",4))
"RTN","LRPXAPI2",60,0)
 . I 'TEST Q
"RTN","LRPXAPI2",61,0)
 . S RESULT=TEST_U_$$TESTNM^LRPXAPIU(TEST)_U_VALUES
"RTN","LRPXAPI2",62,0)
 . D SC(.RESULT,REF,TYPES)
"RTN","LRPXAPI2",63,0)
 S SECTION=$P(ITEM,";") I $L(SECTION)'=1 Q
"RTN","LRPXAPI2",64,0)
 S FILE=$P(ITEM,";",2) I $L(FILE)'=1 Q
"RTN","LRPXAPI2",65,0)
 S IEN=+$P(ITEM,";",3) I 'IEN Q
"RTN","LRPXAPI2",66,0)
 I SECTION="M" D  Q
"RTN","LRPXAPI2",67,0)
 . I FILE="S" S RESULT=IEN_U_$$SPECNM^LRPXAPIU(IEN)_U_VALUES Q
"RTN","LRPXAPI2",68,0)
 . I FILE="T" S RESULT=IEN_U_$$TESTNM^LRPXAPIU(IEN)_U_VALUES Q
"RTN","LRPXAPI2",69,0)
 . I FILE="O" S RESULT=IEN_U_$$BUGNM^LRPXAPIU(IEN)_U_VALUES Q
"RTN","LRPXAPI2",70,0)
 . I FILE="A" S RESULT=IEN_U_$$ABNM^LRPXAPIU(IEN)_U_VALUES Q
"RTN","LRPXAPI2",71,0)
 . I FILE="M" S RESULT=IEN_U_$$TBNM^LRPXAPIU(IEN)_U_VALUES Q
"RTN","LRPXAPI2",72,0)
 I SECTION="A" D  Q
"RTN","LRPXAPI2",73,0)
 . I FILE="S" S RESULT=U_$$UP^XLFSTR(VALUES)_U_VALUES Q
"RTN","LRPXAPI2",74,0)
 . I FILE="T" S RESULT=IEN_U_$$TESTNM^LRPXAPIU(IEN)_U_VALUES Q
"RTN","LRPXAPI2",75,0)
 . I FILE="O" S RESULT=IEN_U_$$ORGNM^LRPXAPIU(IEN)_U_VALUES Q
"RTN","LRPXAPI2",76,0)
 . I FILE="D" S RESULT=IEN_U_$$DISNM^LRPXAPIU(IEN)_U_VALUES Q
"RTN","LRPXAPI2",77,0)
 . I FILE="M" S RESULT=IEN_U_$$MORPHNM^LRPXAPIU(IEN)_U_VALUES Q
"RTN","LRPXAPI2",78,0)
 . I FILE="E" S RESULT=IEN_U_$$ETINM^LRPXAPIU(IEN)_U_VALUES Q
"RTN","LRPXAPI2",79,0)
 . I FILE="F" S RESULT=IEN_U_$$FUNNM^LRPXAPIU(IEN)_U_VALUES Q
"RTN","LRPXAPI2",80,0)
 . I FILE="P" S RESULT=IEN_U_$$PROCNM^LRPXAPIU(IEN)_U_VALUES Q
"RTN","LRPXAPI2",81,0)
 . I FILE="I" S RESULT=IEN_U_$$ICD9^LRPXAPIU(IEN)_U_VALUES Q
"RTN","LRPXAPI2",82,0)
 Q
"RTN","LRPXAPI2",83,0)
 ;
"RTN","LRPXAPI2",84,0)
SC(RESULT,REF,TYPES) ;
"RTN","LRPXAPI2",85,0)
 N CNT,LINE,LRDFN,LRIDT,SPEC
"RTN","LRPXAPI2",86,0)
 I TYPES["S" D
"RTN","LRPXAPI2",87,0)
 . S $P(REF,";",4)=0
"RTN","LRPXAPI2",88,0)
 . S SPEC=+$P($$REFVAL(REF),U,5)
"RTN","LRPXAPI2",89,0)
 . S RESULT("SPECIMEN")=SPEC_U_$$SPECNM^LRPXAPIU(SPEC)
"RTN","LRPXAPI2",90,0)
 I TYPES["C" D
"RTN","LRPXAPI2",91,0)
 . S CNT=0,LRDFN=+$P(REF,";"),LRIDT=+$P(REF,";",3)
"RTN","LRPXAPI2",92,0)
 . S LINE=0
"RTN","LRPXAPI2",93,0)
 . F  S LINE=$O(^LR(LRDFN,"CH",LRIDT,1,LINE)) Q:LINE<1  D
"RTN","LRPXAPI2",94,0)
 .. S CNT=CNT+1
"RTN","LRPXAPI2",95,0)
 .. S RESULT("COMMENTS",CNT)=$G(^LR(LRDFN,"CH",LRIDT,1,LINE,0))
"RTN","LRPXAPI2",96,0)
 . S RESULT("COMMENTS")=CNT
"RTN","LRPXAPI2",97,0)
 Q
"RTN","LRPXAPI2",98,0)
 ;
"RTN","LRPXAPI2",99,0)
SPEC(DATA,DFN,DATE,STYPE,ERR) ; from LRPXAPI
"RTN","LRPXAPI2",100,0)
 ; returns specimen node, comment, values in array DATA
"RTN","LRPXAPI2",101,0)
 N LRDFN,LRIDT K DATA
"RTN","LRPXAPI2",102,0)
 S ERR=0
"RTN","LRPXAPI2",103,0)
 S LRDFN=$$LRDFN^LRPXAPIU(DFN)
"RTN","LRPXAPI2",104,0)
 I 'LRDFN S ERR=1 Q
"RTN","LRPXAPI2",105,0)
 I 'DATE S ERR=1 Q
"RTN","LRPXAPI2",106,0)
 S LRIDT=$$LRIDT^LRPXAPIU(DATE)
"RTN","LRPXAPI2",107,0)
 D LRSPEC(.DATA,LRDFN,LRIDT,STYPE,.ERR)
"RTN","LRPXAPI2",108,0)
 Q
"RTN","LRPXAPI2",109,0)
 ;
"RTN","LRPXAPI2",110,0)
LRSPEC(DATA,LRDFN,LRIDT,STYPE,ERR) ; from LRPXAPI
"RTN","LRPXAPI2",111,0)
 ; returns specimen node, comment, values in array DATA
"RTN","LRPXAPI2",112,0)
 K DATA
"RTN","LRPXAPI2",113,0)
 S ERR=0
"RTN","LRPXAPI2",114,0)
 I '$O(^LR(LRDFN,"CH",LRIDT,0)) S ERR=1 Q
"RTN","LRPXAPI2",115,0)
 I '$L(STYPE) S STYPE="A"
"RTN","LRPXAPI2",116,0)
 I STYPE="S" D SSPEC(.DATA,LRDFN,LRIDT) Q
"RTN","LRPXAPI2",117,0)
 I STYPE="C" D CSPEC(.DATA,LRDFN,LRIDT) Q
"RTN","LRPXAPI2",118,0)
 I STYPE="V" D VSPEC(.DATA,LRDFN,LRIDT) Q
"RTN","LRPXAPI2",119,0)
 I STYPE="A" D
"RTN","LRPXAPI2",120,0)
 . N ALL K ALL
"RTN","LRPXAPI2",121,0)
 . D SSPEC(.DATA,LRDFN,LRIDT) M ALL=DATA
"RTN","LRPXAPI2",122,0)
 . D CSPEC(.DATA,LRDFN,LRIDT) M ALL=DATA
"RTN","LRPXAPI2",123,0)
 . D VSPEC(.DATA,LRDFN,LRIDT) M ALL=DATA
"RTN","LRPXAPI2",124,0)
 . K DATA M DATA=ALL
"RTN","LRPXAPI2",125,0)
 Q
"RTN","LRPXAPI2",126,0)
 ;
"RTN","LRPXAPI2",127,0)
SSPEC(DATA,LRDFN,LRIDT) ; specimen node values
"RTN","LRPXAPI2",128,0)
 K DATA
"RTN","LRPXAPI2",129,0)
 S DATA("S")=$G(^LR(LRDFN,"CH",LRIDT,0))
"RTN","LRPXAPI2",130,0)
 Q
"RTN","LRPXAPI2",131,0)
 ;
"RTN","LRPXAPI2",132,0)
CSPEC(DATA,LRDFN,LRIDT) ; specimen comments
"RTN","LRPXAPI2",133,0)
 N CMT,CNT K DATA
"RTN","LRPXAPI2",134,0)
 I '$D(^LR(LRDFN,"CH",LRIDT,1,0)) Q
"RTN","LRPXAPI2",135,0)
 S CNT=0
"RTN","LRPXAPI2",136,0)
 S CMT=0
"RTN","LRPXAPI2",137,0)
 F  S CMT=$O(^LR(LRDFN,"CH",LRIDT,1,CMT)) Q:CMT<1  D
"RTN","LRPXAPI2",138,0)
 . I '$D(^LR(LRDFN,"CH",LRIDT,1,CMT,0)) Q
"RTN","LRPXAPI2",139,0)
 . S CNT=CNT+1
"RTN","LRPXAPI2",140,0)
 . S DATA("C",CNT)=^LR(LRDFN,"CH",LRIDT,1,CMT,0)
"RTN","LRPXAPI2",141,0)
 Q
"RTN","LRPXAPI2",142,0)
 ;
"RTN","LRPXAPI2",143,0)
VSPEC(DATA,LRDFN,LRIDT) ; test nodes for collected specimen
"RTN","LRPXAPI2",144,0)
 N CNT,LRDN,VALUE K DATA
"RTN","LRPXAPI2",145,0)
 S CNT=0
"RTN","LRPXAPI2",146,0)
 S LRDN=1
"RTN","LRPXAPI2",147,0)
 F  S LRDN=$O(^LR(LRDFN,"CH",LRIDT,LRDN)) Q:LRDN<2  S VALUE=^(LRDN) D
"RTN","LRPXAPI2",148,0)
 . S CNT=CNT+1
"RTN","LRPXAPI2",149,0)
 . S DATA("V",CNT)=LRDN_U_VALUE
"RTN","LRPXAPI2",150,0)
 Q
"RTN","LRPXAPI2",151,0)
 ;
"RTN","LRPXAPI2",152,0)
COMMENT(LRDFN,LRIDT) ; $$(lrdfn,lridt) --> 1 if comment exists, else 0
"RTN","LRPXAPI2",153,0)
 I +$O(^LR(LRDFN,"CH",LRIDT,1,0)) Q 1
"RTN","LRPXAPI2",154,0)
 Q 0
"RTN","LRPXAPI2",155,0)
 ;
"RTN","LRPXAPI2",156,0)
VALUE(RESULT,DFN,DATE,TEST,COND,ERR) ; from LRPXAPI, LRPXAPI1
"RTN","LRPXAPI2",157,0)
 ; returns result node that has met conditions as RESULT
"RTN","LRPXAPI2",158,0)
 N LRDFN,LRIDT,LRDN
"RTN","LRPXAPI2",159,0)
 I $L(COND),'$$CONDOK^LRPXAPIU(COND,"C") S ERR=1 Q
"RTN","LRPXAPI2",160,0)
 I $L(COND) S COND=$$REPLACE("I "_COND)
"RTN","LRPXAPI2",161,0)
 S RESULT=""
"RTN","LRPXAPI2",162,0)
 S ERR=0
"RTN","LRPXAPI2",163,0)
 S LRDFN=$$LRDFN^LRPXAPIU(DFN)
"RTN","LRPXAPI2",164,0)
 I 'LRDFN S ERR=1 Q
"RTN","LRPXAPI2",165,0)
 I 'DATE S ERR=1 Q
"RTN","LRPXAPI2",166,0)
 S LRIDT=$$LRIDT^LRPXAPIU(DATE)
"RTN","LRPXAPI2",167,0)
 S LRDN=$$LRDN^LRPXAPIU(TEST)
"RTN","LRPXAPI2",168,0)
 I 'LRDN S ERR=1 Q
"RTN","LRPXAPI2",169,0)
 D LRVAL(.RESULT,LRDFN,LRIDT,LRDN,COND,.ERR)
"RTN","LRPXAPI2",170,0)
 Q
"RTN","LRPXAPI2",171,0)
 ;
"RTN","LRPXAPI2",172,0)
LRVALUE(RESULT,LRDFN,LRIDT,LRDN,COND,ERR) ; from LRPXAPI, LRPXAPI1
"RTN","LRPXAPI2",173,0)
 ; returns result node that has met conditions as RESULT
"RTN","LRPXAPI2",174,0)
 I $L(COND),'$$CONDOK^LRPXAPIU(COND,"C") S ERR=1 Q
"RTN","LRPXAPI2",175,0)
 I $L(COND) S COND=$$REPLACE("I "_COND)
"RTN","LRPXAPI2",176,0)
 D LRVAL(.RESULT,LRDFN,LRIDT,LRDN,COND,.ERR)
"RTN","LRPXAPI2",177,0)
 Q
"RTN","LRPXAPI2",178,0)
 ;
"RTN","LRPXAPI2",179,0)
LRVAL(RESULT,LRDFN,LRIDT,LRDN,COND,ERR) ;
"RTN","LRPXAPI2",180,0)
 N F,S,V,VALUE
"RTN","LRPXAPI2",181,0)
 S RESULT=""
"RTN","LRPXAPI2",182,0)
 S ERR=0
"RTN","LRPXAPI2",183,0)
 S VALUE=$G(^LR(LRDFN,"CH",LRIDT,LRDN))
"RTN","LRPXAPI2",184,0)
 I '$L(VALUE) S ERR=1 Q
"RTN","LRPXAPI2",185,0)
 I $L(COND) D  I ERR Q
"RTN","LRPXAPI2",186,0)
 . S V=$P(VALUE,U)
"RTN","LRPXAPI2",187,0)
 . S F=$P(VALUE,U,2)
"RTN","LRPXAPI2",188,0)
 . S S=$P($P(VALUE,U,5),"!")
"RTN","LRPXAPI2",189,0)
 . I 'S S S=$P($G(^LR(LRDFN,"CH",LRIDT,0)),U,5)
"RTN","LRPXAPI2",190,0)
 . X COND I '$T S ERR=1
"RTN","LRPXAPI2",191,0)
 S RESULT=VALUE
"RTN","LRPXAPI2",192,0)
 Q
"RTN","LRPXAPI2",193,0)
 ;
"RTN","LRPXAPI2",194,0)
CHNODE(ARRAY,NODE) ; from LRPXAPI
"RTN","LRPXAPI2",195,0)
 N NAME,NAME3,NAME5,NODE3,NODE5,PIECE,PIECE3,PIECE5,SUB K ARRAY
"RTN","LRPXAPI2",196,0)
 I '$L(NODE) Q
"RTN","LRPXAPI2",197,0)
 S NAME="RESULT^FLAG^CODES^VERIFIER^NORMALS^DATE-R^DATE-T^^INSTITUTION^LEDI^INSTRUMENT^TYPE"
"RTN","LRPXAPI2",198,0)
 S NAME3="NLT-O!NLT-R!LOINC!METHOD!MAP!TEST"
"RTN","LRPXAPI2",199,0)
 S NAME5="SPEC!LOW!HIGH!LOW-C!HIGH-C!!UNITS!DELTA-T!DELTA-V!DEF!LOW-T!HIGH-T"
"RTN","LRPXAPI2",200,0)
 F PIECE=1:1:12 D
"RTN","LRPXAPI2",201,0)
 . I PIECE=8 Q
"RTN","LRPXAPI2",202,0)
 . S SUB=$P(NAME,U,PIECE)
"RTN","LRPXAPI2",203,0)
 . I PIECE=8 Q
"RTN","LRPXAPI2",204,0)
 . I PIECE=3 D  Q
"RTN","LRPXAPI2",205,0)
 .. S NODE3=$P(NODE,U,3)
"RTN","LRPXAPI2",206,0)
 .. F PIECE3=1:1:6 S ARRAY($P(NAME3,"!",PIECE3))=$P(NODE3,"!",PIECE3)
"RTN","LRPXAPI2",207,0)
 . I PIECE=5 D  Q
"RTN","LRPXAPI2",208,0)
 .. S NODE5=$P(NODE,U,5)
"RTN","LRPXAPI2",209,0)
 .. F PIECE5=1:1:12 D
"RTN","LRPXAPI2",210,0)
 ... I PIECE5=6 Q
"RTN","LRPXAPI2",211,0)
 ... S ARRAY($P(NAME5,"!",PIECE5))=$P(NODE5,"!",PIECE5)
"RTN","LRPXAPI2",212,0)
 . S ARRAY(SUB)=$P(NODE,U,PIECE)
"RTN","LRPXAPI2",213,0)
 Q
"RTN","LRPXAPI2",214,0)
 ;
"RTN","LRPXAPI2",215,0)
ACCY(TESTS,ACC,BDN) ; from LRPXAPI
"RTN","LRPXAPI2",216,0)
 ; returns TESTS from yearly accession, ACC, BDN required
"RTN","LRPXAPI2",217,0)
 ; BDN is beginning date number
"RTN","LRPXAPI2",218,0)
 ; TESTS is array of file 60 iens
"RTN","LRPXAPI2",219,0)
 N DIC,LRAA,LRAAB,LRAD,LRAN,TEST,X,Y K DIC,TESTS
"RTN","LRPXAPI2",220,0)
 I '$L($G(ACC)) Q
"RTN","LRPXAPI2",221,0)
 S LRAAB=$P(ACC," ")
"RTN","LRPXAPI2",222,0)
 I LRAAB="" Q
"RTN","LRPXAPI2",223,0)
 S BDN=$E($G(BDN))
"RTN","LRPXAPI2",224,0)
 I BDN'>1 Q
"RTN","LRPXAPI2",225,0)
 S LRAN=+$P(ACC," ",3)
"RTN","LRPXAPI2",226,0)
 I 'LRAN Q
"RTN","LRPXAPI2",227,0)
 S LRAA=+$O(^LRO(68,"B",LRAAB,0))
"RTN","LRPXAPI2",228,0)
 I 'LRAA D
"RTN","LRPXAPI2",229,0)
 . S DIC=68,DIC(0)="M"
"RTN","LRPXAPI2",230,0)
 . S X=LRAAB
"RTN","LRPXAPI2",231,0)
 . D ^DIC K DIC
"RTN","LRPXAPI2",232,0)
 . S LRAA=+Y
"RTN","LRPXAPI2",233,0)
 I LRAA'>0 Q
"RTN","LRPXAPI2",234,0)
 S LRAD=BDN_$P(ACC," ",2)_"0000" ; yearly acc areas are assumed
"RTN","LRPXAPI2",235,0)
 S TEST=0
"RTN","LRPXAPI2",236,0)
 F  S TEST=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,TEST)) Q:TEST<1  D
"RTN","LRPXAPI2",237,0)
 . S TESTS(TEST)=TEST_U_$$TESTNM^LRPXAPIU(TEST)
"RTN","LRPXAPI2",238,0)
 Q
"RTN","LRPXAPI2",239,0)
 ;
"RTN","LRPXAPI2",240,0)
CONDOK(CONDO,TYPE) ; $$ from LRPXAPIU
"RTN","LRPXAPI2",241,0)
 N DEL,NUM,OK,OPER,PIECE,PIECES,VALID,VALIDOP,VALUE,VAR K PIECES
"RTN","LRPXAPI2",242,0)
 I '(TYPE="C"!(TYPE="M")!(TYPE="A")) Q 0
"RTN","LRPXAPI2",243,0)
 S COND=CONDO
"RTN","LRPXAPI2",244,0)
 I $E(COND)="|" S COND=$E(COND,2,245)
"RTN","LRPXAPI2",245,0)
 I $E(COND)="~" S COND=$E(COND,2,245)
"RTN","LRPXAPI2",246,0)
 I $L(COND)'>2 Q 0
"RTN","LRPXAPI2",247,0)
 I $E(COND,1,2)'?1U1P Q 0
"RTN","LRPXAPI2",248,0)
 I COND[U Q 0
"RTN","LRPXAPI2",249,0)
 I CONDO[" " Q 0
"RTN","LRPXAPI2",250,0)
 I CONDO["|" S DEL="|"
"RTN","LRPXAPI2",251,0)
 E  S DEL="~"
"RTN","LRPXAPI2",252,0)
 I '$$SYNTAX($$REPLACE(COND)) Q 0
"RTN","LRPXAPI2",253,0)
 S PIECE=COND
"RTN","LRPXAPI2",254,0)
 D
"RTN","LRPXAPI2",255,0)
 . I TYPE="C" S VALID="FSV" Q
"RTN","LRPXAPI2",256,0)
 . I TYPE="A" S VALID="CDEFIMOPST" Q
"RTN","LRPXAPI2",257,0)
 . I TYPE="M" S VALID="ACIMORST" Q
"RTN","LRPXAPI2",258,0)
 F NUM=1:1 Q:'$L($P(PIECE,DEL,NUM))  S PIECES(NUM)=$P(PIECE,DEL,NUM)
"RTN","LRPXAPI2",259,0)
 S OK=1
"RTN","LRPXAPI2",260,0)
 S NUM=0
"RTN","LRPXAPI2",261,0)
 F  S NUM=$O(PIECES(NUM)) Q:NUM<1  D  Q:'OK
"RTN","LRPXAPI2",262,0)
 . S PIECE=PIECES(NUM)
"RTN","LRPXAPI2",263,0)
 . I $L(PIECE)<3 S OK=0 Q
"RTN","LRPXAPI2",264,0)
 . S VAR=$E(PIECE)
"RTN","LRPXAPI2",265,0)
 . I VALID'[VAR S OK=0 Q
"RTN","LRPXAPI2",266,0)
 . D
"RTN","LRPXAPI2",267,0)
 .. I VAR="V" S VALIDOP="=<>[]" Q
"RTN","LRPXAPI2",268,0)
 .. I VAR="F" S VALIDOP="=[]" Q
"RTN","LRPXAPI2",269,0)
 .. I VAR="I" S VALIDOP="=[]" Q
"RTN","LRPXAPI2",270,0)
 .. I VAR="R" S VALIDOP="=[]" Q
"RTN","LRPXAPI2",271,0)
 .. I VAR="S",TYPE="A" S VALIDOP="=[]" Q
"RTN","LRPXAPI2",272,0)
 .. S VALIDOP="="
"RTN","LRPXAPI2",273,0)
 . I $E(PIECE,3)="'" S OK=0 Q
"RTN","LRPXAPI2",274,0)
 . I $E(PIECE,2)="'" S OPER=$E(PIECE,3)
"RTN","LRPXAPI2",275,0)
 . E  S OPER=$E(PIECE,2)
"RTN","LRPXAPI2",276,0)
 . I VALIDOP'[OPER S OK=0 Q
"RTN","LRPXAPI2",277,0)
 . S VALUE=$P(PIECE,OPER,2,999)
"RTN","LRPXAPI2",278,0)
 . I $E(VALUE)="""",$E(VALUE,$L(VALUE))'="""" S OK=0 Q
"RTN","LRPXAPI2",279,0)
 . I VAR="C" D  Q:'OK
"RTN","LRPXAPI2",280,0)
 .. I VALUE'?1""""1U1"""" S OK=0 Q
"RTN","LRPXAPI2",281,0)
 .. I $$CATSUB^LRPXAPIU($E(VALUE,2),TYPE)=-1 S OK=0 Q
"RTN","LRPXAPI2",282,0)
 . I VALUE,VALUE'=+VALUE S OK=0 Q
"RTN","LRPXAPI2",283,0)
 . I $L($P(VALUE,"""",3)) S OK=0 Q
"RTN","LRPXAPI2",284,0)
 . I '$$SYNTAX(PIECE) S OK=0 Q
"RTN","LRPXAPI2",285,0)
 . I $E(PIECE,2)="=",COND[(VAR_"'=") S OK=0 Q
"RTN","LRPXAPI2",286,0)
 I 'OK Q 0
"RTN","LRPXAPI2",287,0)
 Q 1
"RTN","LRPXAPI2",288,0)
 ;
"RTN","LRPXAPI2",289,0)
REPLACE(COND) ; $$(condition) -> condition replacing | or ~ with commas
"RTN","LRPXAPI2",290,0)
 Q $TR(COND,"~|",",,")
"RTN","LRPXAPI2",291,0)
 ;
"RTN","LRPXAPI2",292,0)
SYNTAX(X) ; $$(condition) -> 1 if correct, else 0
"RTN","LRPXAPI2",293,0)
 ; check syntax when condition applies to an if statement
"RTN","LRPXAPI2",294,0)
 S X="I "_X
"RTN","LRPXAPI2",295,0)
 D ^DIM
"RTN","LRPXAPI2",296,0)
 I '$D(X) Q 0
"RTN","LRPXAPI2",297,0)
 Q 1
"RTN","LRPXAPI2",298,0)
 ;
"RTN","LRPXAPI2",299,0)
NORMALS(LOW,HIGH,TEST,SPEC) ; from LRPXAPIU
"RTN","LRPXAPI2",300,0)
 N NODE
"RTN","LRPXAPI2",301,0)
 S (LOW,HIGH)=""
"RTN","LRPXAPI2",302,0)
 S TEST=+$G(TEST)
"RTN","LRPXAPI2",303,0)
 I 'TEST Q
"RTN","LRPXAPI2",304,0)
 S SPEC=+$G(SPEC)
"RTN","LRPXAPI2",305,0)
 I 'SPEC Q
"RTN","LRPXAPI2",306,0)
 S NODE=$G(^LAB(60,TEST,1,SPEC,0))
"RTN","LRPXAPI2",307,0)
 S LOW=$P(NODE,U,2)
"RTN","LRPXAPI2",308,0)
 S HIGH=$P(NODE,U,3)
"RTN","LRPXAPI2",309,0)
 Q
"RTN","LRPXAPI2",310,0)
 ;
"RTN","LRPXAPI3")
0^8^B67220441
"RTN","LRPXAPI3",1,0)
LRPXAPI3 ;SLC/STAFF Lab Extract API code - Micro and AP ;10/28/03  11:29
"RTN","LRPXAPI3",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRPXAPI3",3,0)
 ;
"RTN","LRPXAPI3",4,0)
TESTS(INFO,DFN,TYPE,MAX,NEXT,COND,DATE1,DATE2) ; from LRPXAPI
"RTN","LRPXAPI3",5,0)
 ; returns AP or Micro items on a patient in array INFO
"RTN","LRPXAPI3",6,0)
 N CNT,CONDOK,CONDS,DATE,NMSP,OK,STOP K CONDS
"RTN","LRPXAPI3",7,0)
 S NMSP=$G(INFO) K INFO S INFO=""
"RTN","LRPXAPI3",8,0)
 ; return all info in ^TMP(NMSP,$J
"RTN","LRPXAPI3",9,0)
 I NMSP?1U1UN1.14UNP K ^TMP(NMSP,$J) S INFO=NMSP
"RTN","LRPXAPI3",10,0)
 D DATES^LRPXAPIU(.DATE1,.DATE2)
"RTN","LRPXAPI3",11,0)
 S CONDOK=+$P($G(NEXT),U,2)
"RTN","LRPXAPI3",12,0)
 S NEXT=$G(NEXT,TYPE)
"RTN","LRPXAPI3",13,0)
 I NEXT'=TYPE S NEXT=$P(NEXT,U,3)
"RTN","LRPXAPI3",14,0)
 I $L(COND),'CONDOK,'$$CONDOK^LRPXAPIU(COND,TYPE) Q
"RTN","LRPXAPI3",15,0)
 I $L(COND) D CONDS^LRPXAPI6(.CONDS,COND,TYPE)
"RTN","LRPXAPI3",16,0)
 S STOP=TYPE_"Z"
"RTN","LRPXAPI3",17,0)
 S CNT=0
"RTN","LRPXAPI3",18,0)
 F  S NEXT=$O(^PXRMINDX(63,"PI",DFN,NEXT)) Q:NEXT=""  Q:NEXT]STOP  D  Q:CNT'<MAX
"RTN","LRPXAPI3",19,0)
 . I $E(NEXT)'=TYPE Q
"RTN","LRPXAPI3",20,0)
 . S OK=0
"RTN","LRPXAPI3",21,0)
 . I '$L(COND) D  Q:'OK
"RTN","LRPXAPI3",22,0)
 .. S DATE=+$O(^PXRMINDX(63,"PI",DFN,NEXT,DATE1))
"RTN","LRPXAPI3",23,0)
 .. I 'DATE Q
"RTN","LRPXAPI3",24,0)
 .. I DATE>DATE2 Q
"RTN","LRPXAPI3",25,0)
 .. S OK=1
"RTN","LRPXAPI3",26,0)
 . E  D  Q:'OK
"RTN","LRPXAPI3",27,0)
 .. S DATE=DATE1
"RTN","LRPXAPI3",28,0)
 .. F  S DATE=$O(^PXRMINDX(63,"PI",DFN,NEXT,DATE)) Q:DATE<1  Q:DATE>DATE2  D  Q:OK
"RTN","LRPXAPI3",29,0)
 ... I $$MATCH^LRPXAPI5(DFN,DATE,.CONDS,TYPE) S OK=1
"RTN","LRPXAPI3",30,0)
 . S CNT=CNT+1
"RTN","LRPXAPI3",31,0)
 . I INFO?1U1UN1.14UNP D  Q
"RTN","LRPXAPI3",32,0)
 .. S ^TMP(INFO,$J,NEXT)=NEXT_U_$$ITEMNM^LRPXAPIU(NEXT)
"RTN","LRPXAPI3",33,0)
 . S INFO(NEXT)=NEXT_U_$$ITEMNM^LRPXAPIU(NEXT)
"RTN","LRPXAPI3",34,0)
 I NEXT]STOP!'$L(NEXT) S NEXT=0
"RTN","LRPXAPI3",35,0)
 E  S NEXT="1^1^"_NEXT ; #^item is used for consistency with other APIs
"RTN","LRPXAPI3",36,0)
 Q
"RTN","LRPXAPI3",37,0)
 ;
"RTN","LRPXAPI3",38,0)
RESULTS(VALUES,DFN,PITEM,MAX,NEXT,COND,DATE1,DATE2) ; from LRPXAPI
"RTN","LRPXAPI3",39,0)
 ; returns all AP or Micro results on a patient in array VALUES
"RTN","LRPXAPI3",40,0)
 ; format: date^item^node^data
"RTN","LRPXAPI3",41,0)
 ; where data is item file ien^item name^values on node
"RTN","LRPXAPI3",42,0)
 N CAT,CATONLY,CATSUB,CONDOK,CNT,DATA,DATE,DONE,ERR,ITEM,ISTOP,NODE,NMSP,OK,TYPE
"RTN","LRPXAPI3",43,0)
 S NMSP=$G(VALUES) K VALUES S VALUES=""
"RTN","LRPXAPI3",44,0)
 ; return all results in ^TMP(NMSP,$J
"RTN","LRPXAPI3",45,0)
 I NMSP?1U1UN1.14UNP K ^TMP(NMSP,$J) S VALUES=NMSP
"RTN","LRPXAPI3",46,0)
 D DATES^LRPXAPIU(.DATE1,.DATE2)
"RTN","LRPXAPI3",47,0)
 S CONDOK=+$P($G(NEXT),U,2)
"RTN","LRPXAPI3",48,0)
 S TYPE=$E(PITEM)
"RTN","LRPXAPI3",49,0)
 S NEXT=+$G(NEXT) I NEXT S DATE2=NEXT
"RTN","LRPXAPI3",50,0)
 I $L(COND),'CONDOK,'$$CONDOK^LRPXAPIU(COND,TYPE) Q
"RTN","LRPXAPI3",51,0)
 S CAT="",CATSUB=""
"RTN","LRPXAPI3",52,0)
 S CATONLY=$$CATONLY(COND)
"RTN","LRPXAPI3",53,0)
 I CATONLY S CAT=$E(COND,$L(COND)-1)
"RTN","LRPXAPI3",54,0)
 I $L(CAT) D
"RTN","LRPXAPI3",55,0)
 . S CATSUB=$$CATSUB^LRPXAPIU(CAT,TYPE)
"RTN","LRPXAPI3",56,0)
 . I CATSUB=-1 S CATSUB="" Q
"RTN","LRPXAPI3",57,0)
 I $L(COND),'CATONLY D  Q
"RTN","LRPXAPI3",58,0)
 . D ITEM^LRPXAPI6(.ITEM,TYPE,COND,.ERR) I ERR Q
"RTN","LRPXAPI3",59,0)
 . D TRESULTS(.VALUES,DFN,TYPE,ITEM,MAX,.NEXT,COND,DATE1,DATE2) Q
"RTN","LRPXAPI3",60,0)
 I $L($P(PITEM,";",2)) S ISTOP=$P(PITEM,";",1,2)_"Z"
"RTN","LRPXAPI3",61,0)
 E  S PITEM=$E(TYPE),ISTOP=PITEM_"Z"
"RTN","LRPXAPI3",62,0)
 S CNT=0
"RTN","LRPXAPI3",63,0)
 S DONE=0
"RTN","LRPXAPI3",64,0)
 S DATE=DATE2
"RTN","LRPXAPI3",65,0)
 F  S DATE=$O(^PXRMINDX(63,"PDI",DFN,DATE),-1) Q:DATE=""  D  Q:DONE
"RTN","LRPXAPI3",66,0)
 . I DATE1,DATE<DATE1 S DATE="",DONE=1 Q
"RTN","LRPXAPI3",67,0)
 . S OK=0
"RTN","LRPXAPI3",68,0)
 . S ITEM=PITEM
"RTN","LRPXAPI3",69,0)
 . F  S ITEM=$O(^PXRMINDX(63,"PDI",DFN,DATE,ITEM)) Q:ITEM=""  Q:ITEM]ISTOP  D
"RTN","LRPXAPI3",70,0)
 .. I $E(ITEM)'=TYPE Q
"RTN","LRPXAPI3",71,0)
 .. I $L(CATSUB),'$$CATOK(DFN,ITEM,DATE,CATSUB) Q
"RTN","LRPXAPI3",72,0)
 .. S OK=1
"RTN","LRPXAPI3",73,0)
 .. S NODE=""
"RTN","LRPXAPI3",74,0)
 .. F  S NODE=$O(^PXRMINDX(63,"PDI",DFN,DATE,ITEM,NODE)) Q:NODE=""  Q:$E(NODE)[TYPE  D
"RTN","LRPXAPI3",75,0)
 ... D LRPXRM^LRPXAPI(.DATA,NODE,ITEM)
"RTN","LRPXAPI3",76,0)
 ... I VALUES?1U1UN1.14UNP D  Q
"RTN","LRPXAPI3",77,0)
 .... S ^TMP(VALUES,$J,NODE_" "_ITEM)=ITEM_U_NODE_U_DATA
"RTN","LRPXAPI3",78,0)
 ... S VALUES(-DATE_" "_NODE_" "_ITEM)=DATE_U_ITEM_U_NODE_U_DATA
"RTN","LRPXAPI3",79,0)
 . I OK S CNT=CNT+1
"RTN","LRPXAPI3",80,0)
 . I CNT'<MAX S DONE=1 Q
"RTN","LRPXAPI3",81,0)
 S NEXT=+DATE_U_1
"RTN","LRPXAPI3",82,0)
 Q
"RTN","LRPXAPI3",83,0)
 ;
"RTN","LRPXAPI3",84,0)
TRESULTS(VALUES,DFN,TYPE,ITEM,MAX,NEXT,COND,DATE1,DATE2) ; from LRPXAPI
"RTN","LRPXAPI3",85,0)
 ; returns AP or Micro single item results on a patient in array VALUES
"RTN","LRPXAPI3",86,0)
 N CNT,CONDOK,CONDS,DATA,DATE,NMSP,NODE,OK K CONDS
"RTN","LRPXAPI3",87,0)
 S NMSP=$G(VALUES) K VALUES S VALUES=""
"RTN","LRPXAPI3",88,0)
 ; return all test results in ^TMP(NMSP,$J
"RTN","LRPXAPI3",89,0)
 I NMSP?1U1UN1.14UNP K ^TMP(NMSP,$J) S VALUES=NMSP
"RTN","LRPXAPI3",90,0)
 S CONDOK=+$P($G(NEXT),U,2)
"RTN","LRPXAPI3",91,0)
 I $L(COND),'$$CONDOK^LRPXAPIU(COND,TYPE) Q
"RTN","LRPXAPI3",92,0)
 I $L(COND) D CONDS^LRPXAPI6(.CONDS,COND,TYPE,ITEM)
"RTN","LRPXAPI3",93,0)
 D DATES^LRPXAPIU(.DATE1,.DATE2)
"RTN","LRPXAPI3",94,0)
 S DATE=DATE2
"RTN","LRPXAPI3",95,0)
 S NEXT=+$G(NEXT) I NEXT S DATE=NEXT
"RTN","LRPXAPI3",96,0)
 S CNT=0
"RTN","LRPXAPI3",97,0)
 S OK=0
"RTN","LRPXAPI3",98,0)
 F  S DATE=$O(^PXRMINDX(63,"IP",ITEM,DFN,DATE),-1) Q:DATE=""  D  Q:OK
"RTN","LRPXAPI3",99,0)
 . I DATE<DATE1 S OK=1,DATE=0 Q
"RTN","LRPXAPI3",100,0)
 . I DATE>DATE2 S OK=1,DATE=0 Q
"RTN","LRPXAPI3",101,0)
 . I $L(COND),'$$MATCH^LRPXAPI5(DFN,DATE,.CONDS,TYPE) Q
"RTN","LRPXAPI3",102,0)
 . S CNT=CNT+1
"RTN","LRPXAPI3",103,0)
 . S NODE=""
"RTN","LRPXAPI3",104,0)
 . F  S NODE=$O(^PXRMINDX(63,"IP",ITEM,DFN,DATE,NODE)) Q:NODE=""  D  Q:OK
"RTN","LRPXAPI3",105,0)
 .. S OK=0
"RTN","LRPXAPI3",106,0)
 .. D LRPXRM^LRPXAPI(.DATA,NODE,ITEM)
"RTN","LRPXAPI3",107,0)
 .. I VALUES?1U1UN1.14UNP D  Q
"RTN","LRPXAPI3",108,0)
 ... S ^TMP(VALUES,$J,-DATE)=DATE_U_ITEM_U_NODE_U_DATA
"RTN","LRPXAPI3",109,0)
 .. S VALUES(-DATE_" "_NODE_" "_ITEM)=DATE_U_ITEM_U_NODE_U_DATA
"RTN","LRPXAPI3",110,0)
 . I CNT'<MAX S OK=1 Q
"RTN","LRPXAPI3",111,0)
 S NEXT=+DATE_U_1
"RTN","LRPXAPI3",112,0)
 Q
"RTN","LRPXAPI3",113,0)
 ;
"RTN","LRPXAPI3",114,0)
PATIENTS(PATS,TYPE,ITEM,SOURCE,MAX,NEXT,COND,DATE1,DATE2) ; from LRPXAPI
"RTN","LRPXAPI3",115,0)
 ; uses PCHK within this scope
"RTN","LRPXAPI3",116,0)
 ; returns patients who have AP or Micro item results in array PATS
"RTN","LRPXAPI3",117,0)
 N CNT,CONDOK,CONDS,DATE,DFN,DONE,NMSP,OK K CONDS
"RTN","LRPXAPI3",118,0)
 S NMSP=$G(PATS) K PATS S PATS=""
"RTN","LRPXAPI3",119,0)
 ; return all patients in ^TMP(NMSP,$J
"RTN","LRPXAPI3",120,0)
 I NMSP?1U1UN1.14UNP K ^TMP(NMSP,$J) S PATS=NMSP
"RTN","LRPXAPI3",121,0)
 D DATES^LRPXAPIU(.DATE1,.DATE2)
"RTN","LRPXAPI3",122,0)
 S CONDOK=+$P($G(NEXT),U,2)
"RTN","LRPXAPI3",123,0)
 S NEXT=+$G(NEXT)
"RTN","LRPXAPI3",124,0)
 S DFN=NEXT
"RTN","LRPXAPI3",125,0)
 I $L(COND),'CONDOK,'$$CONDOK^LRPXAPIU(COND,TYPE) Q
"RTN","LRPXAPI3",126,0)
 I $L(COND) D CONDS^LRPXAPI6(.CONDS,COND,TYPE,ITEM)
"RTN","LRPXAPI3",127,0)
 S CNT=0
"RTN","LRPXAPI3",128,0)
 I '$L(SOURCE) D
"RTN","LRPXAPI3",129,0)
 . F  S DFN=$O(^PXRMINDX(63,"IP",ITEM,DFN)) Q:DFN<1  D PCHK Q:CNT'<MAX
"RTN","LRPXAPI3",130,0)
 E  D
"RTN","LRPXAPI3",131,0)
 . F  S DFN=$O(@SOURCE@(DFN)) Q:DFN<1  D PCHK Q:CNT'<MAX
"RTN","LRPXAPI3",132,0)
 S NEXT=+DFN_U_1
"RTN","LRPXAPI3",133,0)
 Q
"RTN","LRPXAPI3",134,0)
PCHK ; within scope of PATIENTS
"RTN","LRPXAPI3",135,0)
 S DONE=0
"RTN","LRPXAPI3",136,0)
 S OK=0
"RTN","LRPXAPI3",137,0)
 S DATE=DATE1
"RTN","LRPXAPI3",138,0)
 F  S DATE=$O(^PXRMINDX(63,"IP",ITEM,DFN,DATE)) Q:DATE<1  D  Q:DONE
"RTN","LRPXAPI3",139,0)
 . I DATE>DATE2 S DONE=1 Q
"RTN","LRPXAPI3",140,0)
 . I '$L(COND) S OK=1,DONE=1 Q
"RTN","LRPXAPI3",141,0)
 . I '$$MATCH^LRPXAPI5(DFN,DATE,.CONDS,TYPE) Q
"RTN","LRPXAPI3",142,0)
 . S OK=0
"RTN","LRPXAPI3",143,0)
 . I $L($O(^PXRMINDX(63,"IP",ITEM,DFN,DATE,""))) S OK=1,DONE=1 Q
"RTN","LRPXAPI3",144,0)
 I OK D
"RTN","LRPXAPI3",145,0)
 . S CNT=CNT+1
"RTN","LRPXAPI3",146,0)
 . I PATS?1U1UN1.14UNP D  Q
"RTN","LRPXAPI3",147,0)
 .. S ^TMP(PATS,$J,DFN)=DFN_U_$$DFNM^LRPXAPIU(DFN)
"RTN","LRPXAPI3",148,0)
 . S PATS(DFN)=DFN_U_$$DFNM^LRPXAPIU(DFN)
"RTN","LRPXAPI3",149,0)
 Q
"RTN","LRPXAPI3",150,0)
 ;
"RTN","LRPXAPI3",151,0)
ALLPATS(PATS,SOURCE,MAX,NEXT,COND,DATE1,DATE2) ; from LRPXAPI
"RTN","LRPXAPI3",152,0)
 ; uses APATS within this scope
"RTN","LRPXAPI3",153,0)
 ; returns all patients that have lab data
"RTN","LRPXAPI3",154,0)
 N CNT,DATE,DFN,ERR,ITEM,NMSP,OK,TYPE
"RTN","LRPXAPI3",155,0)
 ; if item exists in condition, route to other procedure
"RTN","LRPXAPI3",156,0)
 I $L(COND) D  Q
"RTN","LRPXAPI3",157,0)
 . S OK=0 F TYPE="C","M","A" D  Q:OK  ; use first valid type
"RTN","LRPXAPI3",158,0)
 .. I $$CONDOK^LRPXAPIU(COND,TYPE) S OK=1 Q
"RTN","LRPXAPI3",159,0)
 . I 'OK Q
"RTN","LRPXAPI3",160,0)
 . D ITEM^LRPXAPI6(.ITEM,TYPE,COND,.ERR) I ERR Q
"RTN","LRPXAPI3",161,0)
 . I TYPE="C" D PATIENTS(.PATS,ITEM,SOURCE,MAX,.NEXT,COND,DATE1,DATE2) Q
"RTN","LRPXAPI3",162,0)
 . D PATIENTS^LRPXAPI3(.PATS,TYPE,ITEM,SOURCE,MAX,.NEXT,COND,DATE1,DATE2) Q
"RTN","LRPXAPI3",163,0)
 S NMSP=$G(PATS) K PATS S PATS=""
"RTN","LRPXAPI3",164,0)
 ; return patients in ^TMP(NMSP,$J
"RTN","LRPXAPI3",165,0)
 I NMSP?1U1UN1.14UNP K ^TMP(NMSP,$J) S PATS=NMSP
"RTN","LRPXAPI3",166,0)
 D DATES^LRPXAPIU(.DATE1,.DATE2)
"RTN","LRPXAPI3",167,0)
 S NEXT=+$G(NEXT)
"RTN","LRPXAPI3",168,0)
 S DFN=NEXT
"RTN","LRPXAPI3",169,0)
 S CNT=0
"RTN","LRPXAPI3",170,0)
 I '$L(SOURCE) D
"RTN","LRPXAPI3",171,0)
 . F  S DFN=$O(^PXRMINDX(63,"PI",DFN)) Q:DFN<1  D APATS Q:CNT'<MAX
"RTN","LRPXAPI3",172,0)
 E  D
"RTN","LRPXAPI3",173,0)
 . F  S DFN=$O(@SOURCE@(DFN)) Q:DFN<1  D APATS Q:CNT'<MAX
"RTN","LRPXAPI3",174,0)
 S NEXT=+DFN
"RTN","LRPXAPI3",175,0)
 Q
"RTN","LRPXAPI3",176,0)
APATS ; within scope of ALLPATS
"RTN","LRPXAPI3",177,0)
 S OK=0
"RTN","LRPXAPI3",178,0)
 S ITEM=""
"RTN","LRPXAPI3",179,0)
 F  S ITEM=$O(^PXRMINDX(63,"PI",DFN,ITEM)) Q:ITEM=""  D  Q:OK
"RTN","LRPXAPI3",180,0)
 . S DATE=DATE1
"RTN","LRPXAPI3",181,0)
 . F  S DATE=+$O(^PXRMINDX(63,"PI",DFN,ITEM,DATE)) Q:DATE<1  D  Q:OK
"RTN","LRPXAPI3",182,0)
 .. I DATE>DATE2 Q
"RTN","LRPXAPI3",183,0)
 .. S OK=1 Q
"RTN","LRPXAPI3",184,0)
 I OK D
"RTN","LRPXAPI3",185,0)
 . S CNT=CNT+1
"RTN","LRPXAPI3",186,0)
 . I PATS?1U1UN1.14UNP D  Q
"RTN","LRPXAPI3",187,0)
 .. S ^TMP(PATS,$J,DFN)=DFN_U_$$DFNM^LRPXAPIU(DFN)
"RTN","LRPXAPI3",188,0)
 . S PATS(DFN)=DFN_U_$$DFNM^LRPXAPIU(DFN)
"RTN","LRPXAPI3",189,0)
 Q
"RTN","LRPXAPI3",190,0)
 ;
"RTN","LRPXAPI3",191,0)
PTS(PATS,TYPE,PITEM,SOURCE,MAX,NEXT,COND,DATE1,DATE2) ; from LRPXAPI
"RTN","LRPXAPI3",192,0)
 ; uses PCHK within this scope
"RTN","LRPXAPI3",193,0)
 ; returns patients who have AP or Micro (all or partial type) results in array PATS
"RTN","LRPXAPI3",194,0)
 N CAT,CATONLY,CATSUB,CNT,CONDOK,CONDS,DATE,DFN,DONE,ERR,ITEM
"RTN","LRPXAPI3",195,0)
 N ISTOP,NMSP,OK K CONDS
"RTN","LRPXAPI3",196,0)
 S NMSP=$G(PATS) K PATS S PATS=""
"RTN","LRPXAPI3",197,0)
 ; return all patients in ^TMP(NMSP,$J
"RTN","LRPXAPI3",198,0)
 I NMSP?1U1UN1.14UNP K ^TMP(NMSP,$J) S PATS=NMSP
"RTN","LRPXAPI3",199,0)
 D DATES^LRPXAPIU(.DATE1,.DATE2)
"RTN","LRPXAPI3",200,0)
 S CONDOK=+$P($G(NEXT),U,2)
"RTN","LRPXAPI3",201,0)
 S NEXT=+$G(NEXT)
"RTN","LRPXAPI3",202,0)
 S DFN=NEXT
"RTN","LRPXAPI3",203,0)
 I $L(COND),'CONDOK,'$$CONDOK^LRPXAPIU(COND,TYPE) Q
"RTN","LRPXAPI3",204,0)
 S CAT="",CATSUB=""
"RTN","LRPXAPI3",205,0)
 S CATONLY=$$CATONLY(COND)
"RTN","LRPXAPI3",206,0)
 I CATONLY S CAT=$E(COND,$L(COND)-1)
"RTN","LRPXAPI3",207,0)
 I $L(CAT) D
"RTN","LRPXAPI3",208,0)
 . S CATSUB=$$CATSUB^LRPXAPIU(CAT,TYPE)
"RTN","LRPXAPI3",209,0)
 . I CATSUB=-1 S CATSUB="" Q
"RTN","LRPXAPI3",210,0)
 I $L(COND),'CATONLY D  Q
"RTN","LRPXAPI3",211,0)
 . D ITEM^LRPXAPI6(.ITEM,TYPE,COND,.ERR) I ERR Q
"RTN","LRPXAPI3",212,0)
 . D PATIENTS(.PATS,TYPE,ITEM,SOURCE,MAX,.NEXT,COND,DATE1,DATE2) Q
"RTN","LRPXAPI3",213,0)
 I $L($P(PITEM,";",2)) S ISTOP=$P(PITEM,";",1,2)_"Z"
"RTN","LRPXAPI3",214,0)
 E  S PITEM=$E(TYPE),ISTOP=PITEM_"Z"
"RTN","LRPXAPI3",215,0)
 S CNT=0
"RTN","LRPXAPI3",216,0)
 S DONE=0
"RTN","LRPXAPI3",217,0)
 S ITEM=PITEM
"RTN","LRPXAPI3",218,0)
 F  S ITEM=$O(^PXRMINDX(63,"IP",ITEM)) Q:ITEM=""  Q:ITEM]ISTOP  D  Q:DONE
"RTN","LRPXAPI3",219,0)
 . I TYPE'=$E(ITEM) S DONE=1 Q
"RTN","LRPXAPI3",220,0)
 . I '$L(SOURCE) D
"RTN","LRPXAPI3",221,0)
 .. F  S DFN=$O(^PXRMINDX(63,"IP",ITEM,DFN)) Q:DFN<1  D PT Q:DONE
"RTN","LRPXAPI3",222,0)
 . E  D
"RTN","LRPXAPI3",223,0)
 .. F  S DFN=$O(@SOURCE@(DFN)) Q:DFN<1  D  Q:DONE
"RTN","LRPXAPI3",224,0)
 ... I $D(^PXRMINDX(63,"IP",ITEM,DFN)) D PT
"RTN","LRPXAPI3",225,0)
 S NEXT=+DFN_U_1
"RTN","LRPXAPI3",226,0)
 Q
"RTN","LRPXAPI3",227,0)
PT ; within scope of PATIENTS
"RTN","LRPXAPI3",228,0)
 S OK=0
"RTN","LRPXAPI3",229,0)
 S DATE=DATE1
"RTN","LRPXAPI3",230,0)
 F  S DATE=$O(^PXRMINDX(63,"IP",ITEM,DFN,DATE)) Q:DATE<1  D  Q:OK
"RTN","LRPXAPI3",231,0)
 . I DATE>DATE2 Q
"RTN","LRPXAPI3",232,0)
 . I $L(CATSUB),'$$CATOK(DFN,ITEM,DATE,CATSUB) Q
"RTN","LRPXAPI3",233,0)
 . S OK=1
"RTN","LRPXAPI3",234,0)
 I OK D
"RTN","LRPXAPI3",235,0)
 . S CNT=CNT+1
"RTN","LRPXAPI3",236,0)
 . I CNT'<MAX S DONE=1
"RTN","LRPXAPI3",237,0)
 . I PATS?1U1UN1.14UNP D  Q
"RTN","LRPXAPI3",238,0)
 .. S ^TMP(PATS,$J,DFN)=DFN_U_$$DFNM^LRPXAPIU(DFN)
"RTN","LRPXAPI3",239,0)
 . S PATS(DFN)=DFN_U_$$DFNM^LRPXAPIU(DFN)
"RTN","LRPXAPI3",240,0)
 Q
"RTN","LRPXAPI3",241,0)
 ;
"RTN","LRPXAPI3",242,0)
CATONLY(COND) ; $$(condition) -> 1 if condition is only a category, else 0
"RTN","LRPXAPI3",243,0)
 I '$L(COND) Q 0
"RTN","LRPXAPI3",244,0)
 I $L(COND)>6 Q 0
"RTN","LRPXAPI3",245,0)
 I $E(COND,$L(COND))'="""" Q 0
"RTN","LRPXAPI3",246,0)
 I $E(COND,1,3)["C=" Q 1
"RTN","LRPXAPI3",247,0)
 Q 0
"RTN","LRPXAPI3",248,0)
 ;
"RTN","LRPXAPI3",249,0)
CATOK(DFN,ITEM,DATE,CATSUB) ; $$(dfn,item,date,cat) -> 1 if any nodes match category, else 0
"RTN","LRPXAPI3",250,0)
 N NODE,SUB
"RTN","LRPXAPI3",251,0)
 S NODE=$O(^PXRMINDX(63,"PI",DFN,ITEM,DATE,""))
"RTN","LRPXAPI3",252,0)
 I NODE="" Q 0
"RTN","LRPXAPI3",253,0)
 S SUB=$P(NODE,";",2)
"RTN","LRPXAPI3",254,0)
 I SUB=CATSUB Q 1
"RTN","LRPXAPI3",255,0)
 I SUB="MI",$P(NODE,";",4)=CATSUB Q 1
"RTN","LRPXAPI3",256,0)
 I SUB="AY",CATSUB="AU" Q 1
"RTN","LRPXAPI3",257,0)
 I SUB=80,CATSUB="AU" Q 1
"RTN","LRPXAPI3",258,0)
 I SUB=33,CATSUB="AU" Q 1
"RTN","LRPXAPI3",259,0)
 Q 0
"RTN","LRPXAPI4")
0^9^B63520375
"RTN","LRPXAPI4",1,0)
LRPXAPI4 ;SLC/STAFF Lab Extract API code - Exact Match ;9/29/03  21:17
"RTN","LRPXAPI4",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRPXAPI4",3,0)
 ;
"RTN","LRPXAPI4",4,0)
EXACT(DFN,DATE,CONDS) ; from LRPXAPI5
"RTN","LRPXAPI4",5,0)
 ; check if conditions are met for date/time
"RTN","LRPXAPI4",6,0)
 N FETCH,ITEM,NODE,OK,RESULTS,SEPARATE,XDATE K FETCH,RESULTS,SEPARATE
"RTN","LRPXAPI4",7,0)
 S OK=1
"RTN","LRPXAPI4",8,0)
 I '$L($O(CONDS(""))) Q 1
"RTN","LRPXAPI4",9,0)
 M FETCH=^PXRMINDX(63,"PDI",DFN,DATE)
"RTN","LRPXAPI4",10,0)
 S ITEM=""
"RTN","LRPXAPI4",11,0)
 F  S ITEM=$O(FETCH(ITEM)) Q:ITEM=""  D
"RTN","LRPXAPI4",12,0)
 . S NODE=""
"RTN","LRPXAPI4",13,0)
 . F  S NODE=$O(FETCH(ITEM,NODE)) Q:NODE=""  D
"RTN","LRPXAPI4",14,0)
 .. S SEPARATE($P(NODE,";",1,3),ITEM,NODE)=""
"RTN","LRPXAPI4",15,0)
 S XDATE=""
"RTN","LRPXAPI4",16,0)
 F  S XDATE=$O(SEPARATE(XDATE)) Q:XDATE=""  D  Q:OK
"RTN","LRPXAPI4",17,0)
 . K RESULTS
"RTN","LRPXAPI4",18,0)
 . M RESULTS=SEPARATE(XDATE)
"RTN","LRPXAPI4",19,0)
 . I '$L($O(RESULTS(""))) S OK=0 Q
"RTN","LRPXAPI4",20,0)
 . I $D(CONDS("MIR")) D MIR(.CONDS,.RESULTS,.OK) I 'OK Q
"RTN","LRPXAPI4",21,0)
 . I $D(CONDS("AS")) D AS(.CONDS,.RESULTS,.OK) I 'OK Q
"RTN","LRPXAPI4",22,0)
 . I $D(CONDS("MC")) D MC(.CONDS,.RESULTS,.OK) I 'OK Q
"RTN","LRPXAPI4",23,0)
 . I $D(CONDS("AC")) D AC(.CONDS,.RESULTS,.OK) I 'OK Q
"RTN","LRPXAPI4",24,0)
 . I $D(CONDS(1)) D EQUAL(.CONDS,.RESULTS,.OK) I 'OK Q
"RTN","LRPXAPI4",25,0)
 . I $D(CONDS(0)) D NOTEQUAL(.CONDS,.RESULTS,.OK) I 'OK Q
"RTN","LRPXAPI4",26,0)
 . I '$L($O(RESULTS(""))) S OK=0 Q 0
"RTN","LRPXAPI4",27,0)
 . D SCRAPS(.CONDS,.RESULTS,.OK) I 'OK Q
"RTN","LRPXAPI4",28,0)
 . D THREAD(.CONDS,.RESULTS,.OK) I 'OK Q
"RTN","LRPXAPI4",29,0)
 Q OK
"RTN","LRPXAPI4",30,0)
 ;
"RTN","LRPXAPI4",31,0)
THREAD(CONDS,RESULTS,OK) ;
"RTN","LRPXAPI4",32,0)
 ; uses TCHK within this scope
"RTN","LRPXAPI4",33,0)
 N CHK,FILE,IEN,ITEM,ITEMC,NEXT,NODE,NODEC,NUM,PAR,PARSTOP,START,STOP
"RTN","LRPXAPI4",34,0)
 S OK=1
"RTN","LRPXAPI4",35,0)
 ; check Micro - only O <-> A match
"RTN","LRPXAPI4",36,0)
 I $D(CONDS("X","M;O")),($D(CONDS("X","M;A"))!$D(CONDS("X","M;M"))) D  Q:'OK
"RTN","LRPXAPI4",37,0)
 . I '($D(CONDS("X","M;A"))!$D(CONDS("X","M;M"))!$D(CONDS("X","M;MIR"))) Q
"RTN","LRPXAPI4",38,0)
 . S ITEM="M;O;"
"RTN","LRPXAPI4",39,0)
 . F  S ITEM=$O(RESULTS(ITEM)) Q:ITEM=""  Q:ITEM]"M;O;Z"  D  Q:'OK
"RTN","LRPXAPI4",40,0)
 .. S NODE=""
"RTN","LRPXAPI4",41,0)
 .. F  S NODE=$O(RESULTS(ITEM,NODE)) Q:NODE=""  D  Q:'OK
"RTN","LRPXAPI4",42,0)
 ... S IEN=$P(NODE,";",5)
"RTN","LRPXAPI4",43,0)
 ... S OK=0
"RTN","LRPXAPI4",44,0)
 ... S ITEMC="M;A;"
"RTN","LRPXAPI4",45,0)
 ... F  S ITEMC=$O(RESULTS(ITEMC)) Q:ITEMC=""  Q:ITEMC]"M;A;Z"  D  Q:OK
"RTN","LRPXAPI4",46,0)
 .... S NODEC=""
"RTN","LRPXAPI4",47,0)
 .... F  S NODEC=$O(RESULTS(ITEMC,NODEC)) Q:NODEC=""  D  Q:OK
"RTN","LRPXAPI4",48,0)
 ..... I IEN=$P(NODEC,";",5) S OK=1 Q
"RTN","LRPXAPI4",49,0)
 ... S ITEMC="M;M;"
"RTN","LRPXAPI4",50,0)
 ... F  S ITEMC=$O(RESULTS(ITEMC)) Q:ITEMC=""  Q:ITEMC]"M;M;Z"  D  Q:OK
"RTN","LRPXAPI4",51,0)
 .... S NODEC=""
"RTN","LRPXAPI4",52,0)
 .... F  S NODEC=$O(RESULTS(ITEMC,NODEC)) Q:NODEC=""  D  Q:OK
"RTN","LRPXAPI4",53,0)
 ..... I IEN=$P(NODEC,";",5) S OK=1 Q
"RTN","LRPXAPI4",54,0)
 I $D(CONDS("X","M")) Q
"RTN","LRPXAPI4",55,0)
 ; check AP - M <-> E , S <-> T and O <-> [D M F P] match
"RTN","LRPXAPI4",56,0)
 S PAR="A;M",START="A;E"
"RTN","LRPXAPI4",57,0)
 I $D(CONDS("X",PAR)),$D(CONDS("X",START)) D TCHK(PAR,7,START) Q:'OK
"RTN","LRPXAPI4",58,0)
 S PAR="A;S",START="A;T"
"RTN","LRPXAPI4",59,0)
 I $D(CONDS("X",PAR)),$D(CONDS("X",START)) D TCHK(PAR,5,START) Q:'OK
"RTN","LRPXAPI4",60,0)
 S PAR="A;O"
"RTN","LRPXAPI4",61,0)
 I $D(CONDS("X",PAR)) D  Q:'OK
"RTN","LRPXAPI4",62,0)
 . F FILE="D","M","F","P" D  Q:'OK
"RTN","LRPXAPI4",63,0)
 .. S START="A;"_FILE
"RTN","LRPXAPI4",64,0)
 .. I $D(CONDS("X",START)) D TCHK(PAR,5,START)
"RTN","LRPXAPI4",65,0)
 Q
"RTN","LRPXAPI4",66,0)
TCHK(PAR,NUM,START) ; within scope of THREAD
"RTN","LRPXAPI4",67,0)
 S ITEM=PAR,PARSTOP=PAR_";Z",STOP=START_";Z"
"RTN","LRPXAPI4",68,0)
 F  S ITEM=$O(RESULTS(ITEM)) Q:ITEM=""  Q:ITEM]PARSTOP  D  Q:'OK
"RTN","LRPXAPI4",69,0)
 . S NODE=""
"RTN","LRPXAPI4",70,0)
 . F  S NODE=$O(RESULTS(ITEM,NODE)) Q:NODE=""  D  Q:'OK
"RTN","LRPXAPI4",71,0)
 .. S IEN=$P(NODE,";",1,NUM)
"RTN","LRPXAPI4",72,0)
 .. S CHK=0
"RTN","LRPXAPI4",73,0)
 .. S ITEMC=START
"RTN","LRPXAPI4",74,0)
 .. F  S ITEMC=$O(RESULTS(ITEMC)) Q:ITEMC=""  Q:ITEMC]STOP  D  Q:CHK
"RTN","LRPXAPI4",75,0)
 ... S NODEC=""
"RTN","LRPXAPI4",76,0)
 ... F  S NODEC=$O(RESULTS(ITEMC,NODEC)) Q:NODEC=""  D  Q:CHK
"RTN","LRPXAPI4",77,0)
 .... I IEN=$P(NODEC,";",1,NUM) S CHK=1 Q
"RTN","LRPXAPI4",78,0)
 .... I $L(NODEC,";")=4 S CHK=1 Q  ; at collection date
"RTN","LRPXAPI4",79,0)
 .. I 'CHK K RESULTS(ITEM)
"RTN","LRPXAPI4",80,0)
 S NEXT=$O(RESULTS(PAR))
"RTN","LRPXAPI4",81,0)
 I NEXT="" S OK=0 Q
"RTN","LRPXAPI4",82,0)
 I NEXT]PARSTOP S OK=0 Q
"RTN","LRPXAPI4",83,0)
 Q
"RTN","LRPXAPI4",84,0)
 ;
"RTN","LRPXAPI4",85,0)
SCRAPS(CONDS,RESULTS,OK) ;
"RTN","LRPXAPI4",86,0)
 N ITEM,ITEMC
"RTN","LRPXAPI4",87,0)
 S OK=1
"RTN","LRPXAPI4",88,0)
 S ITEM=""
"RTN","LRPXAPI4",89,0)
 F  S ITEM=$O(RESULTS(ITEM)) Q:ITEM=""  D
"RTN","LRPXAPI4",90,0)
 . S ITEMC=$P(ITEM,";",1,2)
"RTN","LRPXAPI4",91,0)
 . I ITEMC="M;A",$D(CONDS("MIR")) Q
"RTN","LRPXAPI4",92,0)
 . I ITEMC="M;M",$D(CONDS("MIR")) Q
"RTN","LRPXAPI4",93,0)
 . I '$D(CONDS("X",ITEMC)) K RESULTS(ITEM)
"RTN","LRPXAPI4",94,0)
 I '$L($O(RESULTS(""))) S OK=0 Q
"RTN","LRPXAPI4",95,0)
 Q
"RTN","LRPXAPI4",96,0)
 ;
"RTN","LRPXAPI4",97,0)
NOTEQUAL(CONDS,RESULTS,OK) ;
"RTN","LRPXAPI4",98,0)
 ; check not equal condition for pointer values
"RTN","LRPXAPI4",99,0)
 N FILE,ITEM,START,STOP,TYPE
"RTN","LRPXAPI4",100,0)
 S OK=1
"RTN","LRPXAPI4",101,0)
 S ITEM=""
"RTN","LRPXAPI4",102,0)
 F  S ITEM=$O(CONDS(0,ITEM)) Q:ITEM=""  D  Q:'OK
"RTN","LRPXAPI4",103,0)
 . S TYPE=$E(ITEM),FILE=$E(ITEM,3),START=TYPE_";"_FILE,STOP=TYPE_";"_FILE_";Z"
"RTN","LRPXAPI4",104,0)
 . K RESULTS(ITEM)
"RTN","LRPXAPI4",105,0)
 . S NEXT=$O(RESULTS(START))
"RTN","LRPXAPI4",106,0)
 . I NEXT="" S OK=0 Q
"RTN","LRPXAPI4",107,0)
 . I NEXT]STOP S OK=0 Q
"RTN","LRPXAPI4",108,0)
 Q
"RTN","LRPXAPI4",109,0)
 ;
"RTN","LRPXAPI4",110,0)
EQUAL(CONDS,RESULTS,OK) ;
"RTN","LRPXAPI4",111,0)
 ; check equal condition for pointer values
"RTN","LRPXAPI4",112,0)
 N FILE,ITEM,ITEMC,NEXT,START,STOP,TYPE
"RTN","LRPXAPI4",113,0)
 S OK=1
"RTN","LRPXAPI4",114,0)
 S ITEM=""
"RTN","LRPXAPI4",115,0)
 F  S ITEM=$O(CONDS(1,ITEM)) Q:ITEM=""  D
"RTN","LRPXAPI4",116,0)
 . S TYPE=$E(ITEM),FILE=$E(ITEM,3),START=TYPE_";"_FILE,STOP=TYPE_";"_FILE_";Z"
"RTN","LRPXAPI4",117,0)
 . S ITEMC=START
"RTN","LRPXAPI4",118,0)
 . F  S ITEMC=$O(RESULTS(ITEMC)) Q:ITEMC=""  Q:ITEMC]STOP  D
"RTN","LRPXAPI4",119,0)
 .. I ITEMC=ITEM Q
"RTN","LRPXAPI4",120,0)
 .. K RESULTS(ITEMC)
"RTN","LRPXAPI4",121,0)
 S NEXT=$O(RESULTS(START))
"RTN","LRPXAPI4",122,0)
 I NEXT="" S OK=0 Q
"RTN","LRPXAPI4",123,0)
 I NEXT]STOP S OK=0 Q
"RTN","LRPXAPI4",124,0)
 Q
"RTN","LRPXAPI4",125,0)
 ;
"RTN","LRPXAPI4",126,0)
AC(CONDS,RESULTS,OK) ;
"RTN","LRPXAPI4",127,0)
 ; check conditions for AP categories
"RTN","LRPXAPI4",128,0)
 N CAT,CATEGORY,ITEM,ITEMC,NODE,NOTEQUAL,SUB
"RTN","LRPXAPI4",129,0)
 S OK=1
"RTN","LRPXAPI4",130,0)
 S ITEM=""
"RTN","LRPXAPI4",131,0)
 F  S ITEM=$O(CONDS("AC",ITEM)) Q:ITEM=""  D
"RTN","LRPXAPI4",132,0)
 . S CATEGORY=$P(ITEM,"=",2)
"RTN","LRPXAPI4",133,0)
 . I '$L(CATEGORY) Q
"RTN","LRPXAPI4",134,0)
 . S CATEGORY=$E(CATEGORY,2)
"RTN","LRPXAPI4",135,0)
 . S NOTEQUAL=0
"RTN","LRPXAPI4",136,0)
 . I $L($P(ITEM,"'=",2)) S NOTEQUAL=1
"RTN","LRPXAPI4",137,0)
 . S ITEMC="A"
"RTN","LRPXAPI4",138,0)
 . F  S ITEMC=$O(RESULTS(ITEMC)) Q:ITEMC=""  Q:ITEMC]"A;Z"  D
"RTN","LRPXAPI4",139,0)
 .. I ITEMC["A;T;" Q
"RTN","LRPXAPI4",140,0)
 .. S NODE=""
"RTN","LRPXAPI4",141,0)
 .. F  S NODE=$O(RESULTS(ITEMC,NODE)) Q:NODE=""  D
"RTN","LRPXAPI4",142,0)
 ... S SUB=$P(NODE,";",2)
"RTN","LRPXAPI4",143,0)
 ... I SUB=33!(SUB=80) S CAT="A"
"RTN","LRPXAPI4",144,0)
 ... E  S CAT=$E(SUB)
"RTN","LRPXAPI4",145,0)
 ... I NOTEQUAL,CAT=CATEGORY K RESULTS(ITEMC,NODE) Q
"RTN","LRPXAPI4",146,0)
 ... I 'NOTEQUAL,CAT'=CATEGORY K RESULTS(ITEMC,NODE) Q
"RTN","LRPXAPI4",147,0)
 I '$L($O(RESULTS(""))) S OK=0 Q
"RTN","LRPXAPI4",148,0)
 Q
"RTN","LRPXAPI4",149,0)
 ;
"RTN","LRPXAPI4",150,0)
MC(CONDS,RESULTS,OK) ;
"RTN","LRPXAPI4",151,0)
 ; check conditions for Micro categories
"RTN","LRPXAPI4",152,0)
 N CATEGORY,CATSUB,ITEM,ITEMC,NEXT,NODE,NOTEQUAL,SUB
"RTN","LRPXAPI4",153,0)
 S OK=1
"RTN","LRPXAPI4",154,0)
 S ITEM=""
"RTN","LRPXAPI4",155,0)
 F  S ITEM=$O(CONDS("MC",ITEM)) Q:ITEM=""  D
"RTN","LRPXAPI4",156,0)
 . S CATEGORY=$P(ITEM,"=",2)
"RTN","LRPXAPI4",157,0)
 . I '$L(CATEGORY) Q
"RTN","LRPXAPI4",158,0)
 . S CATEGORY=$E(CATEGORY,2)
"RTN","LRPXAPI4",159,0)
 . S CATSUB=$$CATSUB^LRPXAPIU(CATEGORY,"M")
"RTN","LRPXAPI4",160,0)
 . S NOTEQUAL=0
"RTN","LRPXAPI4",161,0)
 . I $L($P(ITEM,"'=",2)) S NOTEQUAL=1
"RTN","LRPXAPI4",162,0)
 . S ITEMC="M"
"RTN","LRPXAPI4",163,0)
 . F  S ITEMC=$O(RESULTS(ITEMC)) Q:ITEMC=""  Q:ITEMC]"M;Z"  D
"RTN","LRPXAPI4",164,0)
 .. I ITEMC["M;T;" Q
"RTN","LRPXAPI4",165,0)
 .. I ITEMC["M;S;" Q
"RTN","LRPXAPI4",166,0)
 .. S NODE=""
"RTN","LRPXAPI4",167,0)
 .. F  S NODE=$O(RESULTS(ITEMC,NODE)) Q:NODE=""  D
"RTN","LRPXAPI4",168,0)
 ... S SUB=$P(NODE,";",4)
"RTN","LRPXAPI4",169,0)
 ... I NOTEQUAL,SUB=CATSUB K RESULTS(ITEMC,NODE) Q
"RTN","LRPXAPI4",170,0)
 ... I 'NOTEQUAL,SUB'=CATSUB K RESULTS(ITEMC,NODE) Q
"RTN","LRPXAPI4",171,0)
 S NEXT=$O(RESULTS("M"))
"RTN","LRPXAPI4",172,0)
 I NEXT="" S OK=0 Q
"RTN","LRPXAPI4",173,0)
 I NEXT]"M;S" S OK=0 Q
"RTN","LRPXAPI4",174,0)
 Q
"RTN","LRPXAPI4",175,0)
 ;
"RTN","LRPXAPI4",176,0)
AS(CONDS,RESULTS,OK) ;
"RTN","LRPXAPI4",177,0)
 ; check conditions for AP specimen
"RTN","LRPXAPI4",178,0)
 N CHECK,ITEM,ITEMC,NEXT,S
"RTN","LRPXAPI4",179,0)
 S OK=1
"RTN","LRPXAPI4",180,0)
 S ITEM=""
"RTN","LRPXAPI4",181,0)
 F  S ITEM=$O(CONDS("AS",ITEM)) Q:ITEM=""  D
"RTN","LRPXAPI4",182,0)
 . I $E(ITEM,2)="'" D  Q
"RTN","LRPXAPI4",183,0)
 .. ; good if the specimen text is not present for this collection
"RTN","LRPXAPI4",184,0)
 .. S ITEMC="A;S;1"
"RTN","LRPXAPI4",185,0)
 .. F  S ITEMC=$O(RESULTS(ITEMC)) Q:ITEMC=""  Q:ITEMC]"A;S;Z"  D
"RTN","LRPXAPI4",186,0)
 ... S S=$P(ITEMC,"1.",2)
"RTN","LRPXAPI4",187,0)
 ... S CHECK="I "_ITEM
"RTN","LRPXAPI4",188,0)
 ... X CHECK I '$T K RESULTS(ITEMC)
"RTN","LRPXAPI4",189,0)
 . ; good if any of the specimen text for this collection have a matching text
"RTN","LRPXAPI4",190,0)
 . I $O(RESULTS("A;S;1"))="" Q
"RTN","LRPXAPI4",191,0)
 . I $O(RESULTS("A;S;1"))]"A;S;Z" Q
"RTN","LRPXAPI4",192,0)
 . S OK=0
"RTN","LRPXAPI4",193,0)
 . S ITEMC="A;S;1"
"RTN","LRPXAPI4",194,0)
 . F  S ITEMC=$O(RESULTS(ITEMC)) Q:ITEMC=""  Q:ITEMC]"A;S;Z"  D
"RTN","LRPXAPI4",195,0)
 .. S S=$P(ITEMC,"1.",2)
"RTN","LRPXAPI4",196,0)
 .. S CHECK="I "_ITEM
"RTN","LRPXAPI4",197,0)
 .. X CHECK I '$T K RESULTS(ITEMC)
"RTN","LRPXAPI4",198,0)
 S NEXT=$O(RESULTS("A;S;"))
"RTN","LRPXAPI4",199,0)
 I NEXT="" S OK=0 Q
"RTN","LRPXAPI4",200,0)
 I NEXT]"A;S;Z" S OK=0 Q
"RTN","LRPXAPI4",201,0)
 S OK=1
"RTN","LRPXAPI4",202,0)
 Q
"RTN","LRPXAPI4",203,0)
 ;
"RTN","LRPXAPI4",204,0)
MIR(CONDS,RESULTS,OK) ;
"RTN","LRPXAPI4",205,0)
 ; check conditions for antimicrobial results and interpretations
"RTN","LRPXAPI4",206,0)
 ; uses MCHK within this scope
"RTN","LRPXAPI4",207,0)
 N ABNODE,ABTYPE,CHECK,I,ITEM,ITEMC,NEXTA,NEXTM,NODE,R,START,STOP
"RTN","LRPXAPI4",208,0)
 S OK=0
"RTN","LRPXAPI4",209,0)
 F ABTYPE="A","M" D MCHK(ABTYPE)
"RTN","LRPXAPI4",210,0)
 S NEXTA=$O(RESULTS("M;A"))
"RTN","LRPXAPI4",211,0)
 S NEXTM=$O(RESULTS("M;M"))
"RTN","LRPXAPI4",212,0)
 I NEXTA="",NEXTM="" Q
"RTN","LRPXAPI4",213,0)
 I NEXTA="",NEXTM]"M;M;Z" Q
"RTN","LRPXAPI4",214,0)
 I NEXTA]"M;A;Z",NEXTM="" Q
"RTN","LRPXAPI4",215,0)
 I NEXTA]"M;A;Z",NEXTM]"M;M;Z" Q
"RTN","LRPXAPI4",216,0)
 S OK=1
"RTN","LRPXAPI4",217,0)
 Q
"RTN","LRPXAPI4",218,0)
MCHK(ABTYPE) ; within scope of MIR
"RTN","LRPXAPI4",219,0)
 S START="M;"_ABTYPE
"RTN","LRPXAPI4",220,0)
 S STOP=START_";Z"
"RTN","LRPXAPI4",221,0)
 S ITEM=""
"RTN","LRPXAPI4",222,0)
 F  S ITEM=$O(CONDS("MIR",ITEM)) Q:ITEM=""  D
"RTN","LRPXAPI4",223,0)
 . I $E(ITEM,2)="'" D  Q
"RTN","LRPXAPI4",224,0)
 .. ; good if the interpretation/result is not present for this collection
"RTN","LRPXAPI4",225,0)
 .. S ITEMC=START
"RTN","LRPXAPI4",226,0)
 .. F  S ITEMC=$O(RESULTS(ITEMC)) Q:ITEMC=""  Q:ITEMC]STOP  D
"RTN","LRPXAPI4",227,0)
 ... S NODE=""
"RTN","LRPXAPI4",228,0)
 ... F  S NODE=$O(RESULTS(ITEMC,NODE)) Q:NODE=""  D
"RTN","LRPXAPI4",229,0)
 .... S ABNODE=$$REFVAL^LRPXAPI(NODE)
"RTN","LRPXAPI4",230,0)
 .... I ABTYPE="A" D
"RTN","LRPXAPI4",231,0)
 ..... S I=$P(ABNODE,U,2)
"RTN","LRPXAPI4",232,0)
 ..... S R=$P(ABNODE,U)
"RTN","LRPXAPI4",233,0)
 .... E  D
"RTN","LRPXAPI4",234,0)
 ..... S R=$P(ABNODE,U)
"RTN","LRPXAPI4",235,0)
 ..... S I=R
"RTN","LRPXAPI4",236,0)
 .... S CHECK="I "_ITEM
"RTN","LRPXAPI4",237,0)
 .... X CHECK I $T Q
"RTN","LRPXAPI4",238,0)
 .... K RESULTS(ITEMC,NODE)
"RTN","LRPXAPI4",239,0)
 . ; good if any of the interpretations/results have matching conditions
"RTN","LRPXAPI4",240,0)
 . I $O(RESULTS(START))="" Q
"RTN","LRPXAPI4",241,0)
 . I $O(RESULTS(START))]STOP Q
"RTN","LRPXAPI4",242,0)
 . S ITEMC=START
"RTN","LRPXAPI4",243,0)
 . F  S ITEMC=$O(RESULTS(ITEMC)) Q:ITEMC=""  Q:ITEMC]STOP  D
"RTN","LRPXAPI4",244,0)
 .. S NODE=""
"RTN","LRPXAPI4",245,0)
 .. F  S NODE=$O(RESULTS(ITEMC,NODE)) Q:NODE=""  D
"RTN","LRPXAPI4",246,0)
 ... S ABNODE=$$REFVAL^LRPXAPI(NODE)
"RTN","LRPXAPI4",247,0)
 ... S I=$P(ABNODE,U,2)
"RTN","LRPXAPI4",248,0)
 ... S R=$P(ABNODE,U)
"RTN","LRPXAPI4",249,0)
 ... S CHECK="I "_ITEM
"RTN","LRPXAPI4",250,0)
 ... X CHECK I '$T K RESULTS(ITEMC,NODE)
"RTN","LRPXAPI4",251,0)
 Q
"RTN","LRPXAPI4",252,0)
 ;
"RTN","LRPXAPI5")
0^13^B40868770
"RTN","LRPXAPI5",1,0)
LRPXAPI5 ;SLC/STAFF Lab Extract API code - Match ;9/30/03  09:59
"RTN","LRPXAPI5",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRPXAPI5",3,0)
 ;
"RTN","LRPXAPI5",4,0)
MATCH(DFN,DATE,CONDS,TYPE) ; $$(dfn,date,conds,type) -> 1 if ok, else 0
"RTN","LRPXAPI5",5,0)
 ; from LRPXAPI3,LRPXAPI6
"RTN","LRPXAPI5",6,0)
 ; check if conditions are met for date/time
"RTN","LRPXAPI5",7,0)
 I CONDS="|" Q $$EXACT^LRPXAPI4(DFN,DATE,.CONDS)
"RTN","LRPXAPI5",8,0)
 N FETCH,ITEM,NODE,OK,RESULTS,SEPARATE,SUB,XDATE K FETCH,RESULTS,SEPARATE
"RTN","LRPXAPI5",9,0)
 S OK=1
"RTN","LRPXAPI5",10,0)
 I '$L($O(CONDS(""))) Q 1
"RTN","LRPXAPI5",11,0)
 M FETCH=^PXRMINDX(63,"PDI",DFN,DATE)
"RTN","LRPXAPI5",12,0)
 S ITEM=""
"RTN","LRPXAPI5",13,0)
 F  S ITEM=$O(FETCH(ITEM)) Q:ITEM=""  D  Q:'OK
"RTN","LRPXAPI5",14,0)
 . I $E(ITEM)'=TYPE S OK=0 Q
"RTN","LRPXAPI5",15,0)
 . S NODE=""
"RTN","LRPXAPI5",16,0)
 . F  S NODE=$O(FETCH(ITEM,NODE)) Q:NODE=""  D
"RTN","LRPXAPI5",17,0)
 .. S SUB=$P(NODE,";",2)
"RTN","LRPXAPI5",18,0)
 .. I '(SUB="AU"!(SUB="AY")!(SUB=33)!(SUB=80)) D
"RTN","LRPXAPI5",19,0)
 ... S SEPARATE($P(NODE,";",1,3),ITEM,NODE)=""
"RTN","LRPXAPI5",20,0)
 .. E  S SEPARATE(DATE,ITEM,NODE)=""
"RTN","LRPXAPI5",21,0)
 I 'OK Q 0
"RTN","LRPXAPI5",22,0)
 S XDATE=""
"RTN","LRPXAPI5",23,0)
 F  S XDATE=$O(SEPARATE(XDATE)) Q:XDATE=""  D  Q:OK
"RTN","LRPXAPI5",24,0)
 . K RESULTS
"RTN","LRPXAPI5",25,0)
 . M RESULTS=SEPARATE(XDATE)
"RTN","LRPXAPI5",26,0)
 . I '$L($O(RESULTS(""))) S OK=0 Q
"RTN","LRPXAPI5",27,0)
 . I $D(CONDS(0)) D NOTEQUAL(.CONDS,.RESULTS,.OK) I 'OK Q
"RTN","LRPXAPI5",28,0)
 . I $D(CONDS(1)) D EQUAL(.CONDS,.RESULTS,.OK) I 'OK Q
"RTN","LRPXAPI5",29,0)
 . I $D(CONDS("AC")) D AC(.CONDS,.RESULTS,.OK) I 'OK Q
"RTN","LRPXAPI5",30,0)
 . I $D(CONDS("MC")) D MC(.CONDS,.RESULTS,.OK) I 'OK Q
"RTN","LRPXAPI5",31,0)
 . I $D(CONDS("AS")) D AS(.CONDS,.RESULTS,.OK) I 'OK Q
"RTN","LRPXAPI5",32,0)
 . I $D(CONDS("MIR")) D MIR(.CONDS,.RESULTS,.OK) I 'OK Q
"RTN","LRPXAPI5",33,0)
 Q OK
"RTN","LRPXAPI5",34,0)
 ;
"RTN","LRPXAPI5",35,0)
NOTEQUAL(CONDS,RESULTS,OK) ;
"RTN","LRPXAPI5",36,0)
 ; check not equal condition for pointer values
"RTN","LRPXAPI5",37,0)
 N ITEM,ITEM1
"RTN","LRPXAPI5",38,0)
 S OK=1
"RTN","LRPXAPI5",39,0)
 S ITEM=""
"RTN","LRPXAPI5",40,0)
 F  S ITEM=$O(CONDS(0,ITEM)) Q:ITEM=""  D  I 'OK Q
"RTN","LRPXAPI5",41,0)
 . I $D(RESULTS(ITEM)) S OK=0 Q
"RTN","LRPXAPI5",42,0)
 . S ITEM1=$O(RESULTS($P(ITEM,";",1,2)))
"RTN","LRPXAPI5",43,0)
 . I $P(ITEM1,";",1,2)'=$P(ITEM,";",1,2) S OK=0 Q
"RTN","LRPXAPI5",44,0)
 Q
"RTN","LRPXAPI5",45,0)
 ;
"RTN","LRPXAPI5",46,0)
EQUAL(CONDS,RESULTS,OK) ;
"RTN","LRPXAPI5",47,0)
 ; check equal condition for pointer values
"RTN","LRPXAPI5",48,0)
 N ITEM
"RTN","LRPXAPI5",49,0)
 S OK=1
"RTN","LRPXAPI5",50,0)
 S ITEM=""
"RTN","LRPXAPI5",51,0)
 F  S ITEM=$O(CONDS(1,ITEM)) Q:ITEM=""  D  I 'OK Q
"RTN","LRPXAPI5",52,0)
 . I '$D(RESULTS(ITEM)) S OK=0 Q
"RTN","LRPXAPI5",53,0)
 Q
"RTN","LRPXAPI5",54,0)
 ;
"RTN","LRPXAPI5",55,0)
AC(CONDS,RESULTS,OK) ;
"RTN","LRPXAPI5",56,0)
 ; check conditions for AP categories
"RTN","LRPXAPI5",57,0)
 N CAT,CATEGORY,ITEM,ITEMC,NEXT,NODE,NOTEQUAL,SUB
"RTN","LRPXAPI5",58,0)
 S OK=1
"RTN","LRPXAPI5",59,0)
 S ITEM=""
"RTN","LRPXAPI5",60,0)
 F  S ITEM=$O(CONDS("AC",ITEM)) Q:ITEM=""  D
"RTN","LRPXAPI5",61,0)
 . S CATEGORY=$P(ITEM,"=",2)
"RTN","LRPXAPI5",62,0)
 . I '$L(CATEGORY) Q
"RTN","LRPXAPI5",63,0)
 . S CATEGORY=$E(CATEGORY,2)
"RTN","LRPXAPI5",64,0)
 . S NOTEQUAL=0
"RTN","LRPXAPI5",65,0)
 . I $L($P(ITEM,"'=",2)) S NOTEQUAL=1
"RTN","LRPXAPI5",66,0)
 . S ITEMC="A"
"RTN","LRPXAPI5",67,0)
 . F  S ITEMC=$O(RESULTS(ITEMC)) Q:ITEMC=""  Q:ITEMC]"A;Z"  D
"RTN","LRPXAPI5",68,0)
 .. I ITEMC["A;T;" Q
"RTN","LRPXAPI5",69,0)
 .. S NODE=""
"RTN","LRPXAPI5",70,0)
 .. F  S NODE=$O(RESULTS(ITEMC,NODE)) Q:NODE=""  D
"RTN","LRPXAPI5",71,0)
 ... S SUB=$P(NODE,";",2)
"RTN","LRPXAPI5",72,0)
 ... I SUB=33!(SUB=80) S CAT="A"
"RTN","LRPXAPI5",73,0)
 ... E  S CAT=$E(SUB)
"RTN","LRPXAPI5",74,0)
 ... I NOTEQUAL,CAT=CATEGORY K RESULTS
"RTN","LRPXAPI5",75,0)
 ... I 'NOTEQUAL,CAT'=CATEGORY K RESULTS(ITEMC,NODE) Q
"RTN","LRPXAPI5",76,0)
 S NEXT=$O(RESULTS("A"))
"RTN","LRPXAPI5",77,0)
 I NEXT="" S OK=0 Q
"RTN","LRPXAPI5",78,0)
 I NEXT]"A;S" S OK=0 Q
"RTN","LRPXAPI5",79,0)
 Q
"RTN","LRPXAPI5",80,0)
 ;
"RTN","LRPXAPI5",81,0)
MC(CONDS,RESULTS,OK) ;
"RTN","LRPXAPI5",82,0)
 ; check conditions for Micro categories
"RTN","LRPXAPI5",83,0)
 N CATEGORY,CATSUB,ITEM,ITEMC,NEXT,NODE,NOTEQUAL,SUB
"RTN","LRPXAPI5",84,0)
 S OK=1
"RTN","LRPXAPI5",85,0)
 S ITEM=""
"RTN","LRPXAPI5",86,0)
 F  S ITEM=$O(CONDS("MC",ITEM)) Q:ITEM=""  D
"RTN","LRPXAPI5",87,0)
 . S CATEGORY=$P(ITEM,"=",2)
"RTN","LRPXAPI5",88,0)
 . I '$L(CATEGORY) Q
"RTN","LRPXAPI5",89,0)
 . S CATEGORY=$E(CATEGORY,2)
"RTN","LRPXAPI5",90,0)
 . S CATSUB=$$CATSUB^LRPXAPIU(CATEGORY,"M")
"RTN","LRPXAPI5",91,0)
 . S NOTEQUAL=0
"RTN","LRPXAPI5",92,0)
 . I $L($P(ITEM,"'=",2)) S NOTEQUAL=1
"RTN","LRPXAPI5",93,0)
 . S ITEMC="M"
"RTN","LRPXAPI5",94,0)
 . F  S ITEMC=$O(RESULTS(ITEMC)) Q:ITEMC=""  Q:ITEMC]"M;Z"  D
"RTN","LRPXAPI5",95,0)
 .. I ITEMC["M;T;" Q
"RTN","LRPXAPI5",96,0)
 .. I ITEMC["M;S;" Q
"RTN","LRPXAPI5",97,0)
 .. S NODE=""
"RTN","LRPXAPI5",98,0)
 .. F  S NODE=$O(RESULTS(ITEMC,NODE)) Q:NODE=""  D
"RTN","LRPXAPI5",99,0)
 ... S SUB=$P(NODE,";",4)
"RTN","LRPXAPI5",100,0)
 ... I NOTEQUAL,SUB=CATSUB K RESULTS Q
"RTN","LRPXAPI5",101,0)
 ... I 'NOTEQUAL,SUB'=CATSUB K RESULTS(ITEMC,NODE) Q
"RTN","LRPXAPI5",102,0)
 S NEXT=$O(RESULTS("M"))
"RTN","LRPXAPI5",103,0)
 I NEXT="" S OK=0 Q
"RTN","LRPXAPI5",104,0)
 I NEXT]"M;S" S OK=0 Q
"RTN","LRPXAPI5",105,0)
 Q
"RTN","LRPXAPI5",106,0)
 ;
"RTN","LRPXAPI5",107,0)
AS(CONDS,RESULTS,OK) ;
"RTN","LRPXAPI5",108,0)
 ; check conditions for AP specimen
"RTN","LRPXAPI5",109,0)
 N CHECK,ITEM,ITEMC,S
"RTN","LRPXAPI5",110,0)
 S OK=1
"RTN","LRPXAPI5",111,0)
 S ITEM=""
"RTN","LRPXAPI5",112,0)
 F  S ITEM=$O(CONDS("AS",ITEM)) Q:ITEM=""  D  I OK Q
"RTN","LRPXAPI5",113,0)
 . I $E(ITEM,2)="'" D  Q
"RTN","LRPXAPI5",114,0)
 .. ; good if the specimen text is not present for this collection
"RTN","LRPXAPI5",115,0)
 .. S ITEMC="A;S;1"
"RTN","LRPXAPI5",116,0)
 .. F  S ITEMC=$O(RESULTS(ITEMC)) Q:ITEMC=""  Q:ITEMC]"A;S;Z"  D  Q:OK
"RTN","LRPXAPI5",117,0)
 ... S OK=0
"RTN","LRPXAPI5",118,0)
 ... S S=$P(ITEMC,"1.",2)
"RTN","LRPXAPI5",119,0)
 ... S CHECK="I "_ITEM
"RTN","LRPXAPI5",120,0)
 ... X CHECK I $T S OK=1
"RTN","LRPXAPI5",121,0)
 . ; good if any of the specimen text for this collection have a matching text
"RTN","LRPXAPI5",122,0)
 . I $O(RESULTS("A;S;1"))="" Q
"RTN","LRPXAPI5",123,0)
 . I $O(RESULTS("A"))]"A;S;Z" Q
"RTN","LRPXAPI5",124,0)
 . S OK=0
"RTN","LRPXAPI5",125,0)
 . S ITEMC="A;S;1"
"RTN","LRPXAPI5",126,0)
 . F  S ITEMC=$O(RESULTS(ITEMC)) Q:ITEMC=""  Q:ITEMC]"A;S;Z"  D  Q:OK
"RTN","LRPXAPI5",127,0)
 .. S S=$P(ITEMC,"1.",2)
"RTN","LRPXAPI5",128,0)
 .. S CHECK="I "_ITEM
"RTN","LRPXAPI5",129,0)
 .. X CHECK I $T S OK=1
"RTN","LRPXAPI5",130,0)
 Q
"RTN","LRPXAPI5",131,0)
 ;
"RTN","LRPXAPI5",132,0)
MIR(CONDS,RESULTS,OK) ; $$(dfn,date,conds) -> 1 if ok, else 0
"RTN","LRPXAPI5",133,0)
 ; check conditions for antimicrobial results and interpretations
"RTN","LRPXAPI5",134,0)
 N ABNODE,CHECK,I,ITEM,ITEMC,ITEMZ,NODE,R
"RTN","LRPXAPI5",135,0)
 S OK=1
"RTN","LRPXAPI5",136,0)
 ; check bacterial antimicrobials
"RTN","LRPXAPI5",137,0)
 S ITEM=""
"RTN","LRPXAPI5",138,0)
 F  S ITEM=$O(CONDS("MIR",ITEM)) Q:ITEM=""  D  I 'OK Q
"RTN","LRPXAPI5",139,0)
 . I $E(ITEM,2)="'" D  Q
"RTN","LRPXAPI5",140,0)
 .. ; good if the interpretation/result is not present for this collection
"RTN","LRPXAPI5",141,0)
 .. S ITEMC="M;A"
"RTN","LRPXAPI5",142,0)
 .. S ITEMZ="M;A;Z"
"RTN","LRPXAPI5",143,0)
 .. F  S ITEMC=$O(RESULTS(ITEMC)) Q:ITEMC=""  Q:ITEMC]ITEMZ  D  Q:'OK
"RTN","LRPXAPI5",144,0)
 ... S NODE=""
"RTN","LRPXAPI5",145,0)
 ... F  S NODE=$O(RESULTS(ITEMC,NODE)) Q:NODE=""  D  Q:'OK
"RTN","LRPXAPI5",146,0)
 .... S ABNODE=$$REFVAL^LRPXAPI(NODE)
"RTN","LRPXAPI5",147,0)
 .... S I=$P(ABNODE,U,2)
"RTN","LRPXAPI5",148,0)
 .... S R=$P(ABNODE,U)
"RTN","LRPXAPI5",149,0)
 .... S CHECK="I "_ITEM
"RTN","LRPXAPI5",150,0)
 .... X CHECK I $T S OK=0
"RTN","LRPXAPI5",151,0)
 . ; good if any of the interpretations/results have matching conditions
"RTN","LRPXAPI5",152,0)
 . I $O(RESULTS("M;A"))="" Q
"RTN","LRPXAPI5",153,0)
 . I $O(RESULTS("M;A"))]"M;A;Z" Q
"RTN","LRPXAPI5",154,0)
 . S OK=0
"RTN","LRPXAPI5",155,0)
 . S ITEMC="M;A"
"RTN","LRPXAPI5",156,0)
 . S ITEMZ="M;A;Z"
"RTN","LRPXAPI5",157,0)
 . F  S ITEMC=$O(RESULTS(ITEMC)) Q:ITEMC=""  Q:ITEMC]ITEMZ  D  Q:OK
"RTN","LRPXAPI5",158,0)
 .. S NODE=""
"RTN","LRPXAPI5",159,0)
 .. F  S NODE=$O(RESULTS(ITEMC,NODE)) Q:NODE=""  D  Q:OK
"RTN","LRPXAPI5",160,0)
 ... S ABNODE=$$REFVAL^LRPXAPI(NODE)
"RTN","LRPXAPI5",161,0)
 ... S I=$P(ABNODE,U,2)
"RTN","LRPXAPI5",162,0)
 ... S R=$P(ABNODE,U)
"RTN","LRPXAPI5",163,0)
 ... S CHECK="I "_ITEM
"RTN","LRPXAPI5",164,0)
 ... X CHECK I $T S OK=1
"RTN","LRPXAPI5",165,0)
 ; check mycobacterial antimicrobials
"RTN","LRPXAPI5",166,0)
 F  S ITEM=$O(CONDS("MIR",ITEM)) Q:ITEM=""  D  I 'OK Q
"RTN","LRPXAPI5",167,0)
 . I $E(ITEM,2)="'" D  Q
"RTN","LRPXAPI5",168,0)
 .. ; good if the interpretation/result is not present for this collection
"RTN","LRPXAPI5",169,0)
 .. S ITEMC="M;M"
"RTN","LRPXAPI5",170,0)
 .. S ITEMZ="M;M;Z"
"RTN","LRPXAPI5",171,0)
 .. F  S ITEMC=$O(RESULTS(ITEMC)) Q:ITEMC=""  Q:ITEMC]ITEMZ  D  Q:'OK
"RTN","LRPXAPI5",172,0)
 ... S NODE=""
"RTN","LRPXAPI5",173,0)
 ... F  S NODE=$O(RESULTS(ITEMC,NODE)) Q:NODE=""  D  Q:'OK
"RTN","LRPXAPI5",174,0)
 .... S ABNODE=$$REFVAL^LRPXAPI(NODE)
"RTN","LRPXAPI5",175,0)
 .... S R=$P(ABNODE,U)
"RTN","LRPXAPI5",176,0)
 .... S I=R
"RTN","LRPXAPI5",177,0)
 .... S CHECK="I "_ITEM
"RTN","LRPXAPI5",178,0)
 .... X CHECK I $T S OK=0
"RTN","LRPXAPI5",179,0)
 . ; good if any of the interpretations/results have matching conditions
"RTN","LRPXAPI5",180,0)
 . I $O(RESULTS("M;M"))="" Q
"RTN","LRPXAPI5",181,0)
 . I $O(RESULTS("M;M"))]"M;M;Z" Q
"RTN","LRPXAPI5",182,0)
 . S OK=0
"RTN","LRPXAPI5",183,0)
 . S ITEMC="M;M"
"RTN","LRPXAPI5",184,0)
 . S ITEMZ="M;M;Z"
"RTN","LRPXAPI5",185,0)
 . F  S ITEMC=$O(RESULTS(ITEMC)) Q:ITEMC=""  Q:ITEMC]ITEMZ  D  Q:OK
"RTN","LRPXAPI5",186,0)
 .. S NODE=""
"RTN","LRPXAPI5",187,0)
 .. F  S NODE=$O(RESULTS(ITEMC,NODE)) Q:NODE=""  D  Q:OK
"RTN","LRPXAPI5",188,0)
 ... S ABNODE=$$REFVAL^LRPXAPI(NODE)
"RTN","LRPXAPI5",189,0)
 ... S R=$P(ABNODE,U)
"RTN","LRPXAPI5",190,0)
 ... S I=R
"RTN","LRPXAPI5",191,0)
 ... S CHECK="I "_ITEM
"RTN","LRPXAPI5",192,0)
 ... X CHECK I $T S OK=1
"RTN","LRPXAPI5",193,0)
 Q
"RTN","LRPXAPI5",194,0)
 ;
"RTN","LRPXAPI6")
0^15^B9438536
"RTN","LRPXAPI6",1,0)
LRPXAPI6 ;SLC/STAFF Lab Extract API code ;10/5/03  14:53
"RTN","LRPXAPI6",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRPXAPI6",3,0)
 ;
"RTN","LRPXAPI6",4,0)
CONDS(CONDS,COND,TYPE,ITEM) ; from LRPXAPI3
"RTN","LRPXAPI6",5,0)
 ; returns array CONDS of conditions - for Micro and AP
"RTN","LRPXAPI6",6,0)
 ; used to determine match, XCONDS determines exact match
"RTN","LRPXAPI6",7,0)
 I COND["|" D XCONDS(.CONDS,COND,TYPE,$G(ITEM)) Q
"RTN","LRPXAPI6",8,0)
 N EQUAL,ITEMCHAR,NOTEQUAL,NUM,PIECE
"RTN","LRPXAPI6",9,0)
 K CONDS
"RTN","LRPXAPI6",10,0)
 I $E(COND)="~" S COND=$E(COND,2,245)
"RTN","LRPXAPI6",11,0)
 S ITEM=$G(ITEM)
"RTN","LRPXAPI6",12,0)
 I $L(ITEM) S COND=COND_"~"_$P(ITEM,";",2)_"="_$P(ITEM,";",3)
"RTN","LRPXAPI6",13,0)
 S NUM=1
"RTN","LRPXAPI6",14,0)
 F  S PIECE=$P(COND,"~",NUM) Q:PIECE=""  D
"RTN","LRPXAPI6",15,0)
 . S NUM=NUM+1
"RTN","LRPXAPI6",16,0)
 . S ITEMCHAR=$E(PIECE)
"RTN","LRPXAPI6",17,0)
 . I ITEMCHAR="S",TYPE="A" D  Q
"RTN","LRPXAPI6",18,0)
 .. S CONDS("AS",PIECE)=""
"RTN","LRPXAPI6",19,0)
 . I ITEMCHAR="I",TYPE="M" D  Q
"RTN","LRPXAPI6",20,0)
 .. S CONDS("MIR",PIECE)=""
"RTN","LRPXAPI6",21,0)
 . I ITEMCHAR="R",TYPE="M" D  Q
"RTN","LRPXAPI6",22,0)
 .. S CONDS("MIR",PIECE)=""
"RTN","LRPXAPI6",23,0)
 . I ITEMCHAR="C" D  Q
"RTN","LRPXAPI6",24,0)
 .. S CONDS(TYPE_"C",PIECE)=""
"RTN","LRPXAPI6",25,0)
 . S NOTEQUAL=+$P(PIECE,"'=",2)
"RTN","LRPXAPI6",26,0)
 . I NOTEQUAL S CONDS(0,TYPE_";"_ITEMCHAR_";"_NOTEQUAL)="" Q
"RTN","LRPXAPI6",27,0)
 . S EQUAL=+$P(PIECE,"=",2)
"RTN","LRPXAPI6",28,0)
 . I EQUAL S CONDS(1,TYPE_";"_ITEMCHAR_";"_EQUAL)="" Q
"RTN","LRPXAPI6",29,0)
 S CONDS="~"
"RTN","LRPXAPI6",30,0)
 Q
"RTN","LRPXAPI6",31,0)
 ;
"RTN","LRPXAPI6",32,0)
XCONDS(CONDS,COND,TYPE,ITEM) ;
"RTN","LRPXAPI6",33,0)
 ; returns array CONDS of conditions - for Micro and AP
"RTN","LRPXAPI6",34,0)
 ; used to determine exact match
"RTN","LRPXAPI6",35,0)
 N EQUAL,ITEMCHAR,NOTEQUAL,NUM,PIECE
"RTN","LRPXAPI6",36,0)
 K CONDS
"RTN","LRPXAPI6",37,0)
 I $E(COND)="|" S COND=$E(COND,2,245)
"RTN","LRPXAPI6",38,0)
 S ITEM=$G(ITEM)
"RTN","LRPXAPI6",39,0)
 I $L(ITEM) S COND=COND_"|"_$P(ITEM,";",2)_"="_$P(ITEM,";",3)
"RTN","LRPXAPI6",40,0)
 S NUM=1
"RTN","LRPXAPI6",41,0)
 F  S PIECE=$P(COND,"|",NUM) Q:PIECE=""  D
"RTN","LRPXAPI6",42,0)
 . S NUM=NUM+1
"RTN","LRPXAPI6",43,0)
 . S ITEMCHAR=$E(PIECE)
"RTN","LRPXAPI6",44,0)
 . I ITEMCHAR="S",TYPE="A" D  Q
"RTN","LRPXAPI6",45,0)
 .. S CONDS("AS",PIECE)=""
"RTN","LRPXAPI6",46,0)
 .. S CONDS("X","A;S")=""
"RTN","LRPXAPI6",47,0)
 . I ITEMCHAR="I",TYPE="M" D  Q
"RTN","LRPXAPI6",48,0)
 .. S CONDS("MIR",PIECE)=""
"RTN","LRPXAPI6",49,0)
 .. S CONDS("X","MIR","I")=""
"RTN","LRPXAPI6",50,0)
 . I ITEMCHAR="R",TYPE="M" D  Q
"RTN","LRPXAPI6",51,0)
 .. S CONDS("MIR",PIECE)=""
"RTN","LRPXAPI6",52,0)
 .. S CONDS("X","MIR","R")=""
"RTN","LRPXAPI6",53,0)
 . I ITEMCHAR="C" D  Q
"RTN","LRPXAPI6",54,0)
 .. S CONDS(TYPE_"C",PIECE)=""
"RTN","LRPXAPI6",55,0)
 .. S CONDS("X",TYPE_";C")=""
"RTN","LRPXAPI6",56,0)
 . S NOTEQUAL=+$P(PIECE,"'=",2)
"RTN","LRPXAPI6",57,0)
 . I NOTEQUAL D  Q
"RTN","LRPXAPI6",58,0)
 .. S CONDS(0,TYPE_";"_ITEMCHAR_";"_NOTEQUAL)=""
"RTN","LRPXAPI6",59,0)
 .. S CONDS("X",TYPE_";"_ITEMCHAR)=""
"RTN","LRPXAPI6",60,0)
 . S EQUAL=+$P(PIECE,"=",2)
"RTN","LRPXAPI6",61,0)
 . I EQUAL D  Q
"RTN","LRPXAPI6",62,0)
 .. S CONDS(1,TYPE_";"_ITEMCHAR_";"_EQUAL)=""
"RTN","LRPXAPI6",63,0)
 .. S CONDS("X",TYPE_";"_ITEMCHAR)=""
"RTN","LRPXAPI6",64,0)
 . S CONDS("X",TYPE)=""
"RTN","LRPXAPI6",65,0)
 S CONDS="|"
"RTN","LRPXAPI6",66,0)
 I NUM=2 S CONDS="~"
"RTN","LRPXAPI6",67,0)
 Q
"RTN","LRPXAPI6",68,0)
 ;
"RTN","LRPXAPI6",69,0)
ITEM(ITEM,TYPE,COND,ERR) ; from LRPXAPI1
"RTN","LRPXAPI6",70,0)
 ; return an item from condition
"RTN","LRPXAPI6",71,0)
 N DEL,ITEMCHAR,NUM,PIECE
"RTN","LRPXAPI6",72,0)
 S ERR=1,ITEM=""
"RTN","LRPXAPI6",73,0)
 I TYPE="C" Q
"RTN","LRPXAPI6",74,0)
 I COND["|" S DEL="|"
"RTN","LRPXAPI6",75,0)
 E  S DEL="~"
"RTN","LRPXAPI6",76,0)
 S NUM=1
"RTN","LRPXAPI6",77,0)
 F  S PIECE=$P(COND,DEL,NUM) Q:PIECE=""  D  Q:$L(ITEM)
"RTN","LRPXAPI6",78,0)
 . S NUM=NUM+1
"RTN","LRPXAPI6",79,0)
 . S ITEMCHAR=$E(PIECE)
"RTN","LRPXAPI6",80,0)
 . I $E(PIECE,2)'="=" Q
"RTN","LRPXAPI6",81,0)
 . I ITEMCHAR="C" Q
"RTN","LRPXAPI6",82,0)
 . I ITEMCHAR="R" Q
"RTN","LRPXAPI6",83,0)
 . I ITEMCHAR="I",TYPE="M" Q
"RTN","LRPXAPI6",84,0)
 . I ITEMCHAR="S",TYPE="A" S ITEM="A;S;1."_$P(PIECE,"=",2) Q
"RTN","LRPXAPI6",85,0)
 . S ITEM=TYPE_";"_ITEMCHAR_";"_$P(PIECE,"=",2) Q
"RTN","LRPXAPI6",86,0)
 I $L(ITEM) S ERR=0
"RTN","LRPXAPI6",87,0)
 Q
"RTN","LRPXAPI6",88,0)
 ;
"RTN","LRPXAPI6",89,0)
CHECK(VAR,COND,VALUE) ; $$(variable,condition,value) -> 1 or 0
"RTN","LRPXAPI6",90,0)
 S @VAR=VALUE
"RTN","LRPXAPI6",91,0)
 X COND
"RTN","LRPXAPI6",92,0)
 Q $T
"RTN","LRPXAPI6",93,0)
 ;
"RTN","LRPXAPI6",94,0)
TEST ; *** used for testing only
"RTN","LRPXAPI6",95,0)
 F  D T
"RTN","LRPXAPI6",96,0)
 Q
"RTN","LRPXAPI6",97,0)
T N TYPE,ERR,COND,CONDS K CONDS
"RTN","LRPXAPI6",98,0)
 ;D GETTYPE^LRPXAPPU(.TYPE,.ERR) I ERR Q
"RTN","LRPXAPI6",99,0)
 D GETCOND^LRPXAPPU(.COND,"A",.ERR) I ERR Q
"RTN","LRPXAPI6",100,0)
 D CONDS(.CONDS,COND,"A")
"RTN","LRPXAPI6",101,0)
 ;W ! ZW CONDS
"RTN","LRPXAPI6",102,0)
 ;I $$MATCH^LRPXAPI5(2,2950206.1116,.CONDS) W !,"YES",! Q
"RTN","LRPXAPI6",103,0)
 ;I $$MATCH^LRPXAPI5(14,2980910.100232,.CONDS) W !,"YES",! Q
"RTN","LRPXAPI6",104,0)
 I $$MATCH^LRPXAPI5(16,2960503,.CONDS) W !,"YES",! Q
"RTN","LRPXAPI6",105,0)
 W !,"NO",!
"RTN","LRPXAPI6",106,0)
 Q
"RTN","LRPXAPIU")
0^4^B26516082
"RTN","LRPXAPIU",1,0)
LRPXAPIU ; SLC/STAFF Lab Extract API Utilities ;1/29/04  14:32
"RTN","LRPXAPIU",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRPXAPIU",3,0)
 ;
"RTN","LRPXAPIU",4,0)
 ; lab APIs
"RTN","LRPXAPIU",5,0)
 ; dbia 4246
"RTN","LRPXAPIU",6,0)
 ;
"RTN","LRPXAPIU",7,0)
 ; ------------ internal number conversions -----------
"RTN","LRPXAPIU",8,0)
 ;
"RTN","LRPXAPIU",9,0)
LRDFN(DFN) ; API $$(dfn) -> lrdfn
"RTN","LRPXAPIU",10,0)
 Q +$G(^DPT(+$G(DFN),"LR"))
"RTN","LRPXAPIU",11,0)
 ;
"RTN","LRPXAPIU",12,0)
DFN(LRDFN) ; API $$(lrdfn) -> dfn
"RTN","LRPXAPIU",13,0)
 S LRDFN=+$G(LRDFN)
"RTN","LRPXAPIU",14,0)
 I $P($G(^LR(LRDFN,0)),U,2)'=2 Q 0
"RTN","LRPXAPIU",15,0)
 Q +$P(^LR(LRDFN,0),U,3)
"RTN","LRPXAPIU",16,0)
 ;
"RTN","LRPXAPIU",17,0)
LRIDT(DATETIME) ; API $$(datetime) -> lridt (or lridt to datetime)
"RTN","LRPXAPIU",18,0)
 I +$G(DATETIME)'>0 Q 0
"RTN","LRPXAPIU",19,0)
 Q 9999999-DATETIME
"RTN","LRPXAPIU",20,0)
 ;
"RTN","LRPXAPIU",21,0)
LRDN(TEST) ; API $$(test) -> data number (subscript for test in ^LR)
"RTN","LRPXAPIU",22,0)
 Q +$P($P($G(^LAB(60,+$G(TEST),0)),U,5),";",2)
"RTN","LRPXAPIU",23,0)
 ;
"RTN","LRPXAPIU",24,0)
TEST(LRDN) ; API $$(lrdn) -> test
"RTN","LRPXAPIU",25,0)
 Q +$O(^LAB(60,"C","CH;"_$G(LRDN)_";1",0))
"RTN","LRPXAPIU",26,0)
 ;
"RTN","LRPXAPIU",27,0)
AB(ABDN) ; API $$(antimicrobial data number) -> antimicrobial ien
"RTN","LRPXAPIU",28,0)
 Q +$G(^LAB(62.06,"AI",+$G(ABDN)))
"RTN","LRPXAPIU",29,0)
 ;
"RTN","LRPXAPIU",30,0)
ABDN(AB) ; API $$(62.06 ien) -> antimicrobial data number
"RTN","LRPXAPIU",31,0)
 N ABDN
"RTN","LRPXAPIU",32,0)
 S ABDN=+$P($G(^LAB(62.06,+$G(AB),0)),U,2)
"RTN","LRPXAPIU",33,0)
 I ABDN'["2." Q 0
"RTN","LRPXAPIU",34,0)
 Q ABDN
"RTN","LRPXAPIU",35,0)
 ;
"RTN","LRPXAPIU",36,0)
TB(TBDN) ; API $$(mycobacteria data number) -> mycobacteria field number
"RTN","LRPXAPIU",37,0)
 Q +$O(^DD(63.39,"GL",+$G(TBDN),1,0)) ; dbia 999
"RTN","LRPXAPIU",38,0)
 ;
"RTN","LRPXAPIU",39,0)
TBDN(TB) ; API $$(mycobacteria field number) -> mycobacteria data number
"RTN","LRPXAPIU",40,0)
 N TBDN
"RTN","LRPXAPIU",41,0)
 S TBDN=+$P($G(^DD(63.39,+$G(TB),0)),U,4) ; dbia 999
"RTN","LRPXAPIU",42,0)
 I TBDN'["2." Q 0
"RTN","LRPXAPIU",43,0)
 Q TBDN
"RTN","LRPXAPIU",44,0)
 ;
"RTN","LRPXAPIU",45,0)
CATEGORY(SUB,TYPE) ; API $$(subscript, type) -> Micro category [B P F M V], AP category [A C E M S]
"RTN","LRPXAPIU",46,0)
 N CAT
"RTN","LRPXAPIU",47,0)
 S SUB=+$G(SUB)
"RTN","LRPXAPIU",48,0)
 I TYPE="M" D  Q CAT
"RTN","LRPXAPIU",49,0)
 . I SUB=3 S CAT="B" Q
"RTN","LRPXAPIU",50,0)
 . I SUB=6 S CAT="P" Q
"RTN","LRPXAPIU",51,0)
 . I SUB=9 S CAT="F" Q
"RTN","LRPXAPIU",52,0)
 . I SUB=12 S CAT="M" Q
"RTN","LRPXAPIU",53,0)
 . I SUB=17 S CAT="V" Q
"RTN","LRPXAPIU",54,0)
 . S CAT=-1
"RTN","LRPXAPIU",55,0)
 I SUB="SP" Q "S"
"RTN","LRPXAPIU",56,0)
 I SUB="CY" Q "C"
"RTN","LRPXAPIU",57,0)
 I SUB="EM" Q "E"
"RTN","LRPXAPIU",58,0)
 I SUB="AU" Q "A"
"RTN","LRPXAPIU",59,0)
 I SUB="AY" Q "A"
"RTN","LRPXAPIU",60,0)
 I SUB=33 Q "A"
"RTN","LRPXAPIU",61,0)
 I SUB=80 Q "A"
"RTN","LRPXAPIU",62,0)
 Q -1
"RTN","LRPXAPIU",63,0)
 ;
"RTN","LRPXAPIU",64,0)
CATSUB(CAT,TYPE) ; API $$(category letter, type) -> subscript
"RTN","LRPXAPIU",65,0)
 N SUB
"RTN","LRPXAPIU",66,0)
 S CAT=$G(CAT)
"RTN","LRPXAPIU",67,0)
 I TYPE="M" D  Q SUB
"RTN","LRPXAPIU",68,0)
 . I CAT="B" S SUB=3 Q
"RTN","LRPXAPIU",69,0)
 . I CAT="P" S SUB=6 Q
"RTN","LRPXAPIU",70,0)
 . I CAT="F" S SUB=9 Q
"RTN","LRPXAPIU",71,0)
 . I CAT="M" S SUB=12 Q
"RTN","LRPXAPIU",72,0)
 . I CAT="V" S SUB=17 Q
"RTN","LRPXAPIU",73,0)
 . S SUB=-1
"RTN","LRPXAPIU",74,0)
 I CAT="S" Q "SP"
"RTN","LRPXAPIU",75,0)
 I CAT="C" Q "CY"
"RTN","LRPXAPIU",76,0)
 I CAT="E" Q "EM"
"RTN","LRPXAPIU",77,0)
 I CAT="A" Q "AU" ; must check - could be AY, 33, 80
"RTN","LRPXAPIU",78,0)
 Q -1
"RTN","LRPXAPIU",79,0)
 ;
"RTN","LRPXAPIU",80,0)
 ; ----------- external names ---------------
"RTN","LRPXAPIU",81,0)
 ;
"RTN","LRPXAPIU",82,0)
DFNM(DFN) ; API $$(dfn) -> patient name
"RTN","LRPXAPIU",83,0)
 Q $P($G(^DPT(+$G(DFN),0)),U)
"RTN","LRPXAPIU",84,0)
 ;
"RTN","LRPXAPIU",85,0)
LRDFNM(LRDFN) ; API $$(lrdfn) -> patient name
"RTN","LRPXAPIU",86,0)
 Q $$DFNM($$DFN(+$G(LRDFN)))
"RTN","LRPXAPIU",87,0)
 ;
"RTN","LRPXAPIU",88,0)
TESTNM(TEST) ; API $$(test ien) -> test name
"RTN","LRPXAPIU",89,0)
 Q $P($G(^LAB(60,+$G(TEST),0)),U)
"RTN","LRPXAPIU",90,0)
 ;
"RTN","LRPXAPIU",91,0)
LRDNM(LRDN) ; API $$(data number) -> test name
"RTN","LRPXAPIU",92,0)
 Q $$TESTNM($$TEST($G(LRDN)))
"RTN","LRPXAPIU",93,0)
 ;
"RTN","LRPXAPIU",94,0)
SPECNM(SPEC) ; API $$(spec ien) -> specimen name
"RTN","LRPXAPIU",95,0)
 Q $P($G(^LAB(61,+$G(SPEC),0)),U)
"RTN","LRPXAPIU",96,0)
 ;
"RTN","LRPXAPIU",97,0)
BUGNM(BUG) ; API $$(organism ien) -> organism name
"RTN","LRPXAPIU",98,0)
 Q $P($G(^LAB(61.2,+$G(BUG),0)),U)
"RTN","LRPXAPIU",99,0)
 ;
"RTN","LRPXAPIU",100,0)
ABNM(AB) ; API $$(antimicrobial ien) -> antimicrobial name
"RTN","LRPXAPIU",101,0)
 Q $P($G(^LAB(62.06,+$G(AB),0)),U)
"RTN","LRPXAPIU",102,0)
 ;
"RTN","LRPXAPIU",103,0)
TBNM(TB) ; API $$(mycobacteria field number) -> mycobacteria drug name
"RTN","LRPXAPIU",104,0)
 Q $P($G(^DD(63.39,+$G(TB),0)),U) ; dbia 999
"RTN","LRPXAPIU",105,0)
 ;
"RTN","LRPXAPIU",106,0)
ORGNM(ORGAN) ; API $$(organ/tissue ien) -> organ/tissue name
"RTN","LRPXAPIU",107,0)
 Q $P($G(^LAB(61,+$G(ORGAN),0)),U)
"RTN","LRPXAPIU",108,0)
 ;
"RTN","LRPXAPIU",109,0)
DISNM(DISEASE) ; API $$(disease ien) -> disease name
"RTN","LRPXAPIU",110,0)
 Q $P($G(^LAB(61.4,+$G(DISEASE),0)),U)
"RTN","LRPXAPIU",111,0)
 ;
"RTN","LRPXAPIU",112,0)
ETINM(ETIOLOGY) ; API $$(etiology ien) -> etiology name
"RTN","LRPXAPIU",113,0)
 Q $P($G(^LAB(61.2,+$G(ETIOLOGY),0)),U)
"RTN","LRPXAPIU",114,0)
 ;
"RTN","LRPXAPIU",115,0)
MORPHNM(MORPH) ; API $$(morphology ien) -> morphology name
"RTN","LRPXAPIU",116,0)
 Q $P($G(^LAB(61.1,+$G(MORPH),0)),U)
"RTN","LRPXAPIU",117,0)
 ;
"RTN","LRPXAPIU",118,0)
FUNNM(FUNCTION) ; API $$(function ien) -> function name
"RTN","LRPXAPIU",119,0)
 Q $P($G(^LAB(61.3,+$G(FUNCTION),0)),U)
"RTN","LRPXAPIU",120,0)
 ;
"RTN","LRPXAPIU",121,0)
PROCNM(PROC) ; API $$(procedure ien) -> procedure name
"RTN","LRPXAPIU",122,0)
 Q $P($G(^LAB(61.5,+$G(PROC),0)),U)
"RTN","LRPXAPIU",123,0)
 ;
"RTN","LRPXAPIU",124,0)
ICD9(ICD9) ; API $$(icd9 ien) -> icd code^name
"RTN","LRPXAPIU",125,0)
 Q $P($G(^ICD9(+$G(ICD9),0)),U)_U_$G(^ICD9(+$G(ICD9),1))
"RTN","LRPXAPIU",126,0)
 ;
"RTN","LRPXAPIU",127,0)
DOD(DFN) ; API $$(dfn) -> date of death else 0
"RTN","LRPXAPIU",128,0)
 Q +$G(^DPT(+$G(DFN),.35)) ; dbia 13
"RTN","LRPXAPIU",129,0)
 ;
"RTN","LRPXAPIU",130,0)
EXTVALUE(Y,REF) ; API $$(internal value,index ref) -> external value
"RTN","LRPXAPIU",131,0)
 N C,FIELD
"RTN","LRPXAPIU",132,0)
 I $P(REF,";",2)'="CH" Q Y
"RTN","LRPXAPIU",133,0)
 S FIELD=+$P(REF,";",4)
"RTN","LRPXAPIU",134,0)
 S C=$P(^DD(63.04,FIELD,0),U,2) ; dbia 999
"RTN","LRPXAPIU",135,0)
 D Y^DIQ
"RTN","LRPXAPIU",136,0)
 Q Y
"RTN","LRPXAPIU",137,0)
 ;
"RTN","LRPXAPIU",138,0)
ITEMNM(INFO) ; API $$(ap or micro item) -> item name
"RTN","LRPXAPIU",139,0)
 N FILE,NAME,NUM,TYPE
"RTN","LRPXAPIU",140,0)
 I INFO=+INFO Q $$TESTNM(INFO)
"RTN","LRPXAPIU",141,0)
 S NAME=""
"RTN","LRPXAPIU",142,0)
 S TYPE=$P(INFO,";") I '$L(TYPE) Q NAME
"RTN","LRPXAPIU",143,0)
 S FILE=$P(INFO,";",2) I '$L(FILE) Q NAME
"RTN","LRPXAPIU",144,0)
 S NUM=+$P(INFO,";",3) I 'NUM Q NAME
"RTN","LRPXAPIU",145,0)
 I TYPE="M" D  Q NAME
"RTN","LRPXAPIU",146,0)
 . I FILE="S" S NAME=$$SPECNM(NUM) Q
"RTN","LRPXAPIU",147,0)
 . I FILE="T" S NAME=$$TESTNM(NUM) Q
"RTN","LRPXAPIU",148,0)
 . I FILE="O" S NAME=$$BUGNM(NUM) Q
"RTN","LRPXAPIU",149,0)
 . I FILE="A" S NAME=$$ABNM(NUM) Q
"RTN","LRPXAPIU",150,0)
 . I FILE="M" S NAME=$$TBNM(NUM) Q
"RTN","LRPXAPIU",151,0)
 I TYPE="A" D  Q NAME
"RTN","LRPXAPIU",152,0)
 . I FILE="S" S NAME=$P(INFO,".",2) Q
"RTN","LRPXAPIU",153,0)
 . I FILE="T" S NAME=$$TESTNM(NUM) Q
"RTN","LRPXAPIU",154,0)
 . I FILE="O" S NAME=$$ORGNM(NUM) Q
"RTN","LRPXAPIU",155,0)
 . I FILE="D" S NAME=$$DISNM(NUM) Q
"RTN","LRPXAPIU",156,0)
 . I FILE="M" S NAME=$$MORPHNM(NUM) Q
"RTN","LRPXAPIU",157,0)
 . I FILE="E" S NAME=$$ETINM(NUM) Q
"RTN","LRPXAPIU",158,0)
 . I FILE="F" S NAME=$$FUNNM(NUM) Q
"RTN","LRPXAPIU",159,0)
 . I FILE="P" S NAME=$$PROCNM(NUM) Q
"RTN","LRPXAPIU",160,0)
 . I FILE="I" S NAME=$$ICD9^LRPXAPIU(NUM) Q
"RTN","LRPXAPIU",161,0)
 Q NAME
"RTN","LRPXAPIU",162,0)
 ;
"RTN","LRPXAPIU",163,0)
 ; -------------- other utilities -------------
"RTN","LRPXAPIU",164,0)
 ;
"RTN","LRPXAPIU",165,0)
CONDOK(COND,TYPE) ; API $$(condition,type) -> 1 for valid condition, else 0
"RTN","LRPXAPIU",166,0)
 Q $$CONDOK^LRPXAPI2($G(COND),$G(TYPE,"C"))
"RTN","LRPXAPIU",167,0)
 ;
"RTN","LRPXAPIU",168,0)
NORMALS(LOW,HIGH,TEST,SPEC) ; API return low and high ref range on test
"RTN","LRPXAPIU",169,0)
 D NORMALS^LRPXAPI2(.LOW,.HIGH,TEST,SPEC)
"RTN","LRPXAPIU",170,0)
 Q
"RTN","LRPXAPIU",171,0)
 ;
"RTN","LRPXAPIU",172,0)
DATES(DATE1,DATE2) ; API return proper date range
"RTN","LRPXAPIU",173,0)
 ; DATE1 always returns oldest value
"RTN","LRPXAPIU",174,0)
 N TEMP
"RTN","LRPXAPIU",175,0)
 S DATE1=$$EXTTOFM($G(DATE1))
"RTN","LRPXAPIU",176,0)
 S DATE2=$$EXTTOFM($G(DATE2))
"RTN","LRPXAPIU",177,0)
 I 'DATE2 S DATE2=9999999
"RTN","LRPXAPIU",178,0)
 I DATE1>DATE2 S TEMP=DATE1,DATE1=DATE2,DATE2=TEMP
"RTN","LRPXAPIU",179,0)
 I DATE2=+DATE2,DATE2'=9999999,DATE2'["." S DATE2=DATE2+.25
"RTN","LRPXAPIU",180,0)
 Q
"RTN","LRPXAPIU",181,0)
 ;
"RTN","LRPXAPIU",182,0)
EXTTOFM(X) ; $$(external date/time) -> FM date/time
"RTN","LRPXAPIU",183,0)
 N %DT,Y
"RTN","LRPXAPIU",184,0)
 S %DT="TS"
"RTN","LRPXAPIU",185,0)
 D ^%DT
"RTN","LRPXAPIU",186,0)
 I Y=-1 Q 0
"RTN","LRPXAPIU",187,0)
 Q +Y
"RTN","LRPXAPIU",188,0)
 ;
"RTN","LRPXAPIU",189,0)
VRESULT(TEST,RESULT) ; $$(test,result) -> valid result
"RTN","LRPXAPIU",190,0)
 Q $$STRIP($$RESULT(TEST,RESULT))
"RTN","LRPXAPIU",191,0)
 ;
"RTN","LRPXAPIU",192,0)
RESULT(TEST,RESULT) ; $$(test,result) -> result  Convert CH result to external format
"RTN","LRPXAPIU",193,0)
 ;TEST=Test ptr to file 60
"RTN","LRPXAPIU",194,0)
 ;RESULT=Test result
"RTN","LRPXAPIU",195,0)
 N X,X1,LRCW
"RTN","LRPXAPIU",196,0)
 S LRCW="",X1=$P($G(^LAB(60,TEST,.1)),U,3),X1=$S($L(X1):X1,1:"$J(X,8)"),X=RESULT,@("X="_X1)
"RTN","LRPXAPIU",197,0)
 Q X
"RTN","LRPXAPIU",198,0)
 ;
"RTN","LRPXAPIU",199,0)
STRIP(TEXT) ; $$(text) -> stripped text  Strips white space from text
"RTN","LRPXAPIU",200,0)
 N I,X
"RTN","LRPXAPIU",201,0)
 S X="" F I=1:1:$L(TEXT," ") S:$A($P(TEXT," ",I))>0 X=X_$P(TEXT," ",I)
"RTN","LRPXAPIU",202,0)
 Q X
"RTN","LRPXAPIU",203,0)
 ;
"RTN","LRPXAPP")
0^5^B33083141
"RTN","LRPXAPP",1,0)
LRPXAPP ;SLC/STAFF Test Lab APIs ;11/12/03  15:44
"RTN","LRPXAPP",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRPXAPP",3,0)
 ;
"RTN","LRPXAPP",4,0)
 ; - This routine shows examples of calling APIs in LRPXAPI.
"RTN","LRPXAPP",5,0)
 ; - This routine is provided for documentation and testing.
"RTN","LRPXAPP",6,0)
 ; - The temp global ^TMP("LRPXAPI",$J, is used as an example.
"RTN","LRPXAPP",7,0)
 ; - You should use a TMP global with your package's namespace.
"RTN","LRPXAPP",8,0)
 ;
"RTN","LRPXAPP",9,0)
TESTS ; sample application to test TESTS API
"RTN","LRPXAPP",10,0)
 ; gets the lab tests (without results) on a patient (in date range)
"RTN","LRPXAPP",11,0)
 N COND,DFN,ERR,FROM,ITEMS,MORE,TO,TYPE K ITEMS
"RTN","LRPXAPP",12,0)
 K ^TMP("LRPXAPP",$J)
"RTN","LRPXAPP",13,0)
 D GETTYPE^LRPXAPPU(.TYPE,.ERR) I ERR Q
"RTN","LRPXAPP",14,0)
 D GETPT^LRPXAPPU(.DFN,.ERR) I ERR Q
"RTN","LRPXAPP",15,0)
 D GETDATE^LRPXAPPU(.FROM,.TO,.ERR) I ERR Q
"RTN","LRPXAPP",16,0)
 D GETCOND^LRPXAPPU(.COND,TYPE,.ERR) I ERR Q
"RTN","LRPXAPP",17,0)
 F  D  Q:'MORE
"RTN","LRPXAPP",18,0)
 . D TESTS^LRPXAPI(.ITEMS,DFN,TYPE,,.MORE,COND,FROM,TO)
"RTN","LRPXAPP",19,0)
 . M ^TMP("LRPXAPP",$J)=ITEMS
"RTN","LRPXAPP",20,0)
 D DISPLAY^LRPXAPPU
"RTN","LRPXAPP",21,0)
 K ^TMP("LRPXAPP",$J)
"RTN","LRPXAPP",22,0)
 Q
"RTN","LRPXAPP",23,0)
 ;
"RTN","LRPXAPP",24,0)
ARESULTS ; sample application to test RESULTS API for all results
"RTN","LRPXAPP",25,0)
 ; gets all lab results on a patient (in date range) 
"RTN","LRPXAPP",26,0)
 N COND,DFN,ERR,FROM,TO,TYPE
"RTN","LRPXAPP",27,0)
 K ^TMP("LRPXAPP",$J)
"RTN","LRPXAPP",28,0)
 D GETTYPE^LRPXAPPU(.TYPE,.ERR) I ERR Q
"RTN","LRPXAPP",29,0)
 D GETPT^LRPXAPPU(.DFN,.ERR) I ERR Q
"RTN","LRPXAPP",30,0)
 D GETDATE^LRPXAPPU(.FROM,.TO,.ERR) I ERR Q
"RTN","LRPXAPP",31,0)
 D GETCOND^LRPXAPPU(.COND,TYPE,.ERR) I ERR Q
"RTN","LRPXAPP",32,0)
 D RESULTS^LRPXAPI("LRPXAPP",DFN,TYPE,1000000,,COND,FROM,TO)
"RTN","LRPXAPP",33,0)
 D DISPLAY^LRPXAPPU
"RTN","LRPXAPP",34,0)
 K ^TMP("LRPXAPP",$J)
"RTN","LRPXAPP",35,0)
 Q
"RTN","LRPXAPP",36,0)
 ;
"RTN","LRPXAPP",37,0)
RESULTS ; sample application to test RESULTS API
"RTN","LRPXAPP",38,0)
 ; gets patient's lab test results (in date range)
"RTN","LRPXAPP",39,0)
 K ^TMP("LRPXAPP",$J)
"RTN","LRPXAPP",40,0)
 N COND,DFN,ERR,FROM,ITEM,MORE,RESULTS,TO,TYPE K RESULTS
"RTN","LRPXAPP",41,0)
 D GETTYPE^LRPXAPPU(.TYPE,.ERR) I ERR Q
"RTN","LRPXAPP",42,0)
 D GETPT^LRPXAPPU(.DFN,.ERR) I ERR Q
"RTN","LRPXAPP",43,0)
 D GETDATE^LRPXAPPU(.FROM,.TO,.ERR) I ERR Q
"RTN","LRPXAPP",44,0)
 I TYPE="C" D GETTEST^LRPXAPPU(.ITEM,TYPE,.ERR) I ERR Q
"RTN","LRPXAPP",45,0)
 I TYPE="A" D GETAP^LRPXAPPU(.ITEM,.ERR) I ERR Q
"RTN","LRPXAPP",46,0)
 I TYPE="M" D GETMICRO^LRPXAPPU(.ITEM,.ERR) I ERR Q
"RTN","LRPXAPP",47,0)
 D GETCOND^LRPXAPPU(.COND,TYPE,.ERR) I ERR Q
"RTN","LRPXAPP",48,0)
 F  D  Q:'MORE
"RTN","LRPXAPP",49,0)
 . D RESULTS^LRPXAPI(.RESULTS,DFN,ITEM,,.MORE,COND,FROM,TO)
"RTN","LRPXAPP",50,0)
 . M ^TMP("LRPXAPP",$J)=RESULTS
"RTN","LRPXAPP",51,0)
 D DISPLAY^LRPXAPPU
"RTN","LRPXAPP",52,0)
 K ^TMP("LRPXAPP",$J)
"RTN","LRPXAPP",53,0)
 Q
"RTN","LRPXAPP",54,0)
 ;
"RTN","LRPXAPP",55,0)
PATIENTS ; sample application to test PATIENTS API
"RTN","LRPXAPP",56,0)
 ; gets all patients that have had a specific lab test (in date range)
"RTN","LRPXAPP",57,0)
 N ERR,COND,FROM,ITEM,MORE,PATIENTS,SUB,TO,TYPE K PATIENTS
"RTN","LRPXAPP",58,0)
 D GETTYPE^LRPXAPPU(.TYPE,.ERR) I ERR Q
"RTN","LRPXAPP",59,0)
 I TYPE="C" D GETTEST^LRPXAPPU(.ITEM,TYPE,.ERR) I ERR Q
"RTN","LRPXAPP",60,0)
 I TYPE="A" D GETAP^LRPXAPPU(.ITEM,.ERR) I ERR Q
"RTN","LRPXAPP",61,0)
 I TYPE="M" D GETMICRO^LRPXAPPU(.ITEM,.ERR) I ERR Q
"RTN","LRPXAPP",62,0)
 D GETCOND^LRPXAPPU(.COND,TYPE,.ERR) I ERR Q
"RTN","LRPXAPP",63,0)
 D GETDATE^LRPXAPPU(.FROM,.TO,.ERR) I ERR Q
"RTN","LRPXAPP",64,0)
 F  D  Q:'MORE
"RTN","LRPXAPP",65,0)
 . D PATIENTS^LRPXAPI(.PATIENTS,ITEM,,10,.MORE,COND,FROM,TO)
"RTN","LRPXAPP",66,0)
 . S SUB=""
"RTN","LRPXAPP",67,0)
 . F  S SUB=$O(PATIENTS(SUB)) Q:SUB=""  W !,PATIENTS(SUB)
"RTN","LRPXAPP",68,0)
 Q
"RTN","LRPXAPP",69,0)
 ;
"RTN","LRPXAPP",70,0)
DATES ; sample application to test DATES API
"RTN","LRPXAPP",71,0)
 ; gets the dates of labs (without results) on a patient (in date range)
"RTN","LRPXAPP",72,0)
 N DFN,ERR,FROM,ITEMS,MORE,TO,TYPE K ITEMS
"RTN","LRPXAPP",73,0)
 K ^TMP("LRPXAPP",$J)
"RTN","LRPXAPP",74,0)
 D GETPT^LRPXAPPU(.DFN,.ERR) I ERR Q
"RTN","LRPXAPP",75,0)
 D GETTYPE^LRPXAPPU(.TYPE,.ERR) I ERR Q
"RTN","LRPXAPP",76,0)
 D GETDATE^LRPXAPPU(.FROM,.TO,.ERR) I ERR Q
"RTN","LRPXAPP",77,0)
 F  D  Q:'MORE
"RTN","LRPXAPP",78,0)
 . D DATES^LRPXAPI(.ITEMS,DFN,TYPE,,.MORE,FROM,TO)
"RTN","LRPXAPP",79,0)
 . M ^TMP("LRPXAPP",$J)=ITEMS
"RTN","LRPXAPP",80,0)
 D DISPLAY^LRPXAPPU
"RTN","LRPXAPP",81,0)
 K ^TMP("LRPXAPP",$J)
"RTN","LRPXAPP",82,0)
 Q
"RTN","LRPXAPP",83,0)
 ;
"RTN","LRPXAPP",84,0)
TESTLOOK ; test a lookup that screens for only tests done on patient
"RTN","LRPXAPP",85,0)
 N DIC,DFN,ERR,X,Y K DIC
"RTN","LRPXAPP",86,0)
 D GETPT^LRPXAPPU(.DFN,.ERR) I ERR Q
"RTN","LRPXAPP",87,0)
 S DIC=60,DIC(0)="AEMOQ"
"RTN","LRPXAPP",88,0)
 S DIC("S")="I $P(^(0),U,4)=""CH"",$$HASITEM^LRPXAPI(DFN,+Y)"
"RTN","LRPXAPP",89,0)
 D ^DIC I Y<1 Q
"RTN","LRPXAPP",90,0)
 W !,Y
"RTN","LRPXAPP",91,0)
 Q
"RTN","LRPXAPP",92,0)
 ;
"RTN","LRPXAPP",93,0)
TESTVAL ; test conditions and values for a patient's test
"RTN","LRPXAPP",94,0)
 N COL,COND,DFN,ERR,LRDFN,LRDN,LRIDT,RESULT,TEST
"RTN","LRPXAPP",95,0)
 D GETPT^LRPXAPPU(.DFN,.ERR) I ERR Q
"RTN","LRPXAPP",96,0)
 S LRDFN=$$LRDFN^LRPXAPIU(DFN)
"RTN","LRPXAPP",97,0)
 D GETTEST^LRPXAPPU(.TEST,"C",.ERR) I ERR Q
"RTN","LRPXAPP",98,0)
 S LRDN=$$LRDN^LRPXAPIU(TEST)
"RTN","LRPXAPP",99,0)
 D GETCOND^LRPXAPPU(.COND,TYPE,.ERR) I ERR Q
"RTN","LRPXAPP",100,0)
 S COL=0
"RTN","LRPXAPP",101,0)
 F  S COL=$O(^PXRMINDX(63,"IP",TEST,DFN,COL)) Q:COL<1  D
"RTN","LRPXAPP",102,0)
 . S LRIDT=$$LRIDT^LRPXAPIU(COL)
"RTN","LRPXAPP",103,0)
 . W !!,$$VAL^LRPXAPI(LRDFN,LRIDT,LRDN)
"RTN","LRPXAPP",104,0)
 . D VALUE^LRPXAPI(.RESULT,DFN,COL,TEST,COND,.ERR)
"RTN","LRPXAPP",105,0)
 . W !,RESULT
"RTN","LRPXAPP",106,0)
 . D LRVALUE^LRPXAPI(.RESULT,LRDFN,LRIDT,LRDN,COND,.ERR)
"RTN","LRPXAPP",107,0)
 . W !,RESULT
"RTN","LRPXAPP",108,0)
 Q
"RTN","LRPXAPP",109,0)
 ;
"RTN","LRPXAPP",110,0)
VALUES ; test to get patient's values from PXRMINDX index
"RTN","LRPXAPP",111,0)
 N COL,DFN,ERR,ITEM,NODE,RESULT,STOP,TYPE
"RTN","LRPXAPP",112,0)
 D GETTYPE^LRPXAPPU(.TYPE,.ERR) I ERR Q
"RTN","LRPXAPP",113,0)
 D GETPT^LRPXAPPU(.DFN,.ERR) I ERR Q
"RTN","LRPXAPP",114,0)
 I TYPE="C" S ITEM=0,STOP="@"
"RTN","LRPXAPP",115,0)
 I TYPE="A" S ITEM="A",STOP="AZ"
"RTN","LRPXAPP",116,0)
 I TYPE="M" S ITEM="M",STOP="MZ"
"RTN","LRPXAPP",117,0)
 F  S ITEM=$O(^PXRMINDX(63,"PI",DFN,ITEM)) Q:ITEM=""  Q:ITEM]STOP  D
"RTN","LRPXAPP",118,0)
 . S COL=0
"RTN","LRPXAPP",119,0)
 . F  S COL=$O(^PXRMINDX(63,"PI",DFN,ITEM,COL)) Q:COL<1  D
"RTN","LRPXAPP",120,0)
 .. S NODE=""
"RTN","LRPXAPP",121,0)
 .. F  S NODE=$O(^PXRMINDX(63,"PI",DFN,ITEM,COL,NODE)) Q:NODE=""  D
"RTN","LRPXAPP",122,0)
 ... D LRPXRM^LRPXAPI(.RESULT,NODE,ITEM)
"RTN","LRPXAPP",123,0)
 ... W !,ITEM,!,NODE,!,RESULT
"RTN","LRPXAPP",124,0)
 Q
"RTN","LRPXAPP",125,0)
 ;
"RTN","LRPXAPP",126,0)
SPEC ; test of specimen APIs
"RTN","LRPXAPP",127,0)
 ; displays specimen node, comments, results
"RTN","LRPXAPP",128,0)
 ; restricted to MAX number of collections
"RTN","LRPXAPP",129,0)
 N COL,COLCNT,CNT,DATA,DFN,ERR,ITEM,MAX,RESULTS K COLCNT,RESULTS
"RTN","LRPXAPP",130,0)
 S MAX=10,CNT=0
"RTN","LRPXAPP",131,0)
 D GETPT^LRPXAPPU(.DFN,.ERR) I ERR Q
"RTN","LRPXAPP",132,0)
 S ITEM=0
"RTN","LRPXAPP",133,0)
 F  S ITEM=$O(^PXRMINDX(63,"PI",DFN,ITEM)) Q:ITEM<1  D  Q:CNT>MAX
"RTN","LRPXAPP",134,0)
 . S COL=0
"RTN","LRPXAPP",135,0)
 . F  S COL=$O(^PXRMINDX(63,"PI",DFN,ITEM,COL)) Q:COL<1  D  Q:CNT>MAX
"RTN","LRPXAPP",136,0)
 .. I $D(COLCNT(COL)) Q
"RTN","LRPXAPP",137,0)
 .. S COLCNT(COL)="",CNT=CNT+1
"RTN","LRPXAPP",138,0)
 .. ; use "A", "C", "S", "V" to test
"RTN","LRPXAPP",139,0)
 .. D SPEC^LRPXAPI(.RESULTS,DFN,COL,"A",.ERR)
"RTN","LRPXAPP",140,0)
 .. W !
"RTN","LRPXAPP",141,0)
 .. W !,$$COMMENT^LRPXAPI($$LRDFN^LRPXAPIU(DFN),$$LRIDT^LRPXAPIU(COL))
"RTN","LRPXAPP",142,0)
 .. S DATA="RESULTS(0)"
"RTN","LRPXAPP",143,0)
 .. F  S DATA=$Q(@DATA) Q:DATA=""  D
"RTN","LRPXAPP",144,0)
 ... W !,DATA_"="_@DATA
"RTN","LRPXAPP",145,0)
 .. K RESULTS
"RTN","LRPXAPP",146,0)
 Q
"RTN","LRPXAPP",147,0)
 ;
"RTN","LRPXAPP",148,0)
CHNODE ; test CH data - some not defined
"RTN","LRPXAPP",149,0)
 N CNT,ERR,DEF,DFN,LRDFN,LRDN,LRIDT,NODE,RESULTS K RESULTS
"RTN","LRPXAPP",150,0)
 D GETPT^LRPXAPPU(.DFN,.ERR) I ERR Q
"RTN","LRPXAPP",151,0)
 S LRDFN=$$LRDFN^LRPXAPIU(DFN)
"RTN","LRPXAPP",152,0)
 S CNT=0
"RTN","LRPXAPP",153,0)
 S LRIDT=0
"RTN","LRPXAPP",154,0)
 F  S LRIDT=$O(^LR(LRDFN,"CH",LRIDT)) Q:LRIDT<1  D  Q:CNT>3
"RTN","LRPXAPP",155,0)
 . S CNT=CNT+1
"RTN","LRPXAPP",156,0)
 . W !!!,LRDFN,"     ",LRIDT
"RTN","LRPXAPP",157,0)
 . S LRDN=1
"RTN","LRPXAPP",158,0)
 . F  S LRDN=$O(^LR(LRDFN,"CH",LRIDT,LRDN)) Q:LRDN<1  D
"RTN","LRPXAPP",159,0)
 .. S NODE=$G(^LR(LRDFN,"CH",LRIDT,LRDN))
"RTN","LRPXAPP",160,0)
 .. W !!,LRDN,!,NODE,!
"RTN","LRPXAPP",161,0)
 .. D CHNODE^LRPXAPI(.RESULTS,NODE)
"RTN","LRPXAPP",162,0)
 .. S DEF=""
"RTN","LRPXAPP",163,0)
 .. F  S DEF=$O(RESULTS(DEF)) Q:DEF=""  D
"RTN","LRPXAPP",164,0)
 ... W !,DEF," = ",RESULTS(DEF)
"RTN","LRPXAPP",165,0)
 Q
"RTN","LRPXAPP",166,0)
 ;
"RTN","LRPXAPP",167,0)
CONDOK ; sample application to test if condition is valid
"RTN","LRPXAPP",168,0)
 N COND,ERR,TYPE
"RTN","LRPXAPP",169,0)
 D GETTYPE^LRPXAPPU(.TYPE,.ERR) I ERR Q
"RTN","LRPXAPP",170,0)
 F  D GETCOND^LRPXAPPU(.COND,TYPE,.ERR) Q:ERR  Q:'$L(COND)  D
"RTN","LRPXAPP",171,0)
 . I $$CONDOK^LRPXAPIU(COND) W !,COND,!,"condition is ok" Q
"RTN","LRPXAPP",172,0)
 . W !,COND,!,"condition is NOT ok" Q
"RTN","LRPXAPP",173,0)
 Q
"RTN","LRPXAPP",174,0)
 ;
"RTN","LRPXAPPU")
0^14^B16358617
"RTN","LRPXAPPU",1,0)
LRPXAPPU ;SLC/STAFF - Test Lab APIs Utilities ;1/29/04  14:35
"RTN","LRPXAPPU",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRPXAPPU",3,0)
 ;
"RTN","LRPXAPPU",4,0)
 ; This routine is used along with LRPXAPP for testing Lab APIs.
"RTN","LRPXAPPU",5,0)
 ;
"RTN","LRPXAPPU",6,0)
DISPLAY ; from LRPXAPP
"RTN","LRPXAPPU",7,0)
 ; displays results stored in a TMP global
"RTN","LRPXAPPU",8,0)
 N NUM,NUM1
"RTN","LRPXAPPU",9,0)
 W ! S NUM=""
"RTN","LRPXAPPU",10,0)
 F  S NUM=$O(^TMP("LRPXAPP",$J,NUM)) Q:NUM=""  D
"RTN","LRPXAPPU",11,0)
 . I $D(^TMP("LRPXAPP",$J,NUM))#2 W !,^(NUM) Q
"RTN","LRPXAPPU",12,0)
 . S NUM1=""
"RTN","LRPXAPPU",13,0)
 . F  S NUM1=$O(^TMP("LRPXAPP",$J,NUM,NUM1)) Q:NUM1=""  W !,NUM,",",NUM1
"RTN","LRPXAPPU",14,0)
 K ^TMP("LRPXAPP",$J)
"RTN","LRPXAPPU",15,0)
 Q
"RTN","LRPXAPPU",16,0)
 ;
"RTN","LRPXAPPU",17,0)
GETTYPE(TYPE,ERR) ; from LRPXAPP
"RTN","LRPXAPPU",18,0)
 ; asks for type of data (C, M, A), returned as TYPE
"RTN","LRPXAPPU",19,0)
 N DIR,DIRUT,DTOUT,X,Y K DIR
"RTN","LRPXAPPU",20,0)
 S ERR=0,TYPE=""
"RTN","LRPXAPPU",21,0)
 S DIR(0)="SAO^C:CHEMISTRY;M:MICROBIOLOGY;A:ANATOMIC PATHOLOGY"
"RTN","LRPXAPPU",22,0)
 S DIR("A")="Type of data -- C M A : "
"RTN","LRPXAPPU",23,0)
 S DIR("B")="C"
"RTN","LRPXAPPU",24,0)
 D ^DIR K DIR
"RTN","LRPXAPPU",25,0)
 I Y[U!$D(DTOUT) S ERR=1 Q
"RTN","LRPXAPPU",26,0)
 S TYPE=Y
"RTN","LRPXAPPU",27,0)
 W !
"RTN","LRPXAPPU",28,0)
 Q
"RTN","LRPXAPPU",29,0)
 ;
"RTN","LRPXAPPU",30,0)
GETPT(DFN,ERR) ; from LRPXAPP
"RTN","LRPXAPPU",31,0)
 ; asks for a patient, returns DFN
"RTN","LRPXAPPU",32,0)
 N DIC,X,Y K DIC,Y
"RTN","LRPXAPPU",33,0)
 S ERR=0
"RTN","LRPXAPPU",34,0)
 S DIC=2,DIC(0)="AEMOQZ"
"RTN","LRPXAPPU",35,0)
 D ^DIC I Y<1 S ERR=-1
"RTN","LRPXAPPU",36,0)
 S DFN=+Y
"RTN","LRPXAPPU",37,0)
 W !
"RTN","LRPXAPPU",38,0)
 Q
"RTN","LRPXAPPU",39,0)
 ;
"RTN","LRPXAPPU",40,0)
GETCOND(COND,TYPE,ERR) ; from LRPXAPI6,LRPXAPP
"RTN","LRPXAPPU",41,0)
 ; asks for a conditional expression, returned as COND
"RTN","LRPXAPPU",42,0)
 N DIR,DIRUT,DTOUT,X,Y K DIR
"RTN","LRPXAPPU",43,0)
 S TYPE=$G(TYPE,"C")
"RTN","LRPXAPPU",44,0)
 S ERR=0,COND=""
"RTN","LRPXAPPU",45,0)
 S DIR(0)="FAO^^I '$$CONDOK^LRPXAPIU(X,TYPE) K X"
"RTN","LRPXAPPU",46,0)
 S DIR("A")="Condition: "
"RTN","LRPXAPPU",47,0)
 D ^DIR K DIR
"RTN","LRPXAPPU",48,0)
 I Y[U!$D(DTOUT) S ERR=1 Q
"RTN","LRPXAPPU",49,0)
 S COND=Y
"RTN","LRPXAPPU",50,0)
 W !
"RTN","LRPXAPPU",51,0)
 Q
"RTN","LRPXAPPU",52,0)
 ;
"RTN","LRPXAPPU",53,0)
GETDATE(FROM,TO,ERR) ; from LRPXAPP
"RTN","LRPXAPPU",54,0)
 ; asks for a date range
"RTN","LRPXAPPU",55,0)
 ; FROM return as oldest date selection, TO as most recent
"RTN","LRPXAPPU",56,0)
 N DIR,DIRUT,DTOUT,X,Y K DIR
"RTN","LRPXAPPU",57,0)
 S (FROM,TO,ERR)=0
"RTN","LRPXAPPU",58,0)
 S DIR(0)="DAO^2900101:DT:EX"
"RTN","LRPXAPPU",59,0)
 S DIR("A")="From: "
"RTN","LRPXAPPU",60,0)
 D ^DIR K DIR
"RTN","LRPXAPPU",61,0)
 I Y[U!$D(DTOUT) S ERR=1 Q
"RTN","LRPXAPPU",62,0)
 I '$L(Y) S (FROM,TO)="" Q
"RTN","LRPXAPPU",63,0)
 S FROM=Y
"RTN","LRPXAPPU",64,0)
 ;
"RTN","LRPXAPPU",65,0)
 N DIR,X,Y K DIR
"RTN","LRPXAPPU",66,0)
 S DIR(0)="DAO^2900101:DT:EX"
"RTN","LRPXAPPU",67,0)
 S DIR("A")="To: "
"RTN","LRPXAPPU",68,0)
 D ^DIR K DIR
"RTN","LRPXAPPU",69,0)
 I $D(DIRUT) S FROM=0,ERR=-1 Q
"RTN","LRPXAPPU",70,0)
 S TO=Y D DATES^LRPXAPIU(.FROM,.TO)
"RTN","LRPXAPPU",71,0)
 W !
"RTN","LRPXAPPU",72,0)
 Q
"RTN","LRPXAPPU",73,0)
 ;
"RTN","LRPXAPPU",74,0)
GETTEST(TEST,TYPE,ERR) ; from LRPXAPP
"RTN","LRPXAPPU",75,0)
 ; asks for a lab test, returned as TEST
"RTN","LRPXAPPU",76,0)
 N DIC,X,Y K DIC
"RTN","LRPXAPPU",77,0)
 S ERR=0
"RTN","LRPXAPPU",78,0)
 S DIC=60,DIC(0)="AEMOQ"
"RTN","LRPXAPPU",79,0)
 S TYPE=$G(TYPE,"C") D
"RTN","LRPXAPPU",80,0)
 . I TYPE="C" S DIC("S")="I $P(^(0),U,4)=""CH"""
"RTN","LRPXAPPU",81,0)
 . I TYPE="M" S DIC("S")="I $P(^(0),U,4)=""MI"""
"RTN","LRPXAPPU",82,0)
 . I TYPE="A" S DIC("S")="I ""CYEMSPAU""[$P(^(0),U,4),$L($P(^(0),U,4))"
"RTN","LRPXAPPU",83,0)
 D ^DIC I Y<1 S ERR=-1
"RTN","LRPXAPPU",84,0)
 S TEST=+Y
"RTN","LRPXAPPU",85,0)
 W !
"RTN","LRPXAPPU",86,0)
 Q
"RTN","LRPXAPPU",87,0)
 ;
"RTN","LRPXAPPU",88,0)
GETAP(CODE,ERR) ; from LRPXAPP
"RTN","LRPXAPPU",89,0)
 ; asks for an AP item, returned as CODE
"RTN","LRPXAPPU",90,0)
 N FILE,DIC,DIR,DIRUT,DTOUT,X,Y K DIC,DIR
"RTN","LRPXAPPU",91,0)
 S ERR=0,CODE=""
"RTN","LRPXAPPU",92,0)
 S DIR(0)="SA^S:SPEC;T:TEST;O:ORGAN;D:DISEASE;M:MORPH;E:ETIOLOGY;F:FUNC;P:PROC;I:ICD"
"RTN","LRPXAPPU",93,0)
 S DIR("A")="Type of code -- S T O D M E F P I: "
"RTN","LRPXAPPU",94,0)
 D ^DIR K DIR
"RTN","LRPXAPPU",95,0)
 I Y[U!$D(DTOUT) S ERR=1 Q
"RTN","LRPXAPPU",96,0)
 S FILE=Y
"RTN","LRPXAPPU",97,0)
 I FILE="S" D  Q  ; specimen is free text
"RTN","LRPXAPPU",98,0)
 . N DIR,DIRUT,DTOUT,X,Y K DIR
"RTN","LRPXAPPU",99,0)
 . S DIR(0)="FAO^^"
"RTN","LRPXAPPU",100,0)
 . S DIR("A")="Specimen (free text): "
"RTN","LRPXAPPU",101,0)
 . D ^DIR K DIR
"RTN","LRPXAPPU",102,0)
 . I Y[U!$D(DTOUT) S ERR=1 Q
"RTN","LRPXAPPU",103,0)
 . S CODE="A;S;1."_$$UP^XLFSTR(Y)
"RTN","LRPXAPPU",104,0)
 D  I Y<1!$D(DTOUT) S ERR=1 Q
"RTN","LRPXAPPU",105,0)
 . S DIC(0)="AEMOQ"
"RTN","LRPXAPPU",106,0)
 . I FILE="T" D GETTEST(.Y,"A",.ERR) Q
"RTN","LRPXAPPU",107,0)
 . I FILE="O" S DIC=61 D ^DIC Q
"RTN","LRPXAPPU",108,0)
 . I FILE="D" S DIC=61.4 D ^DIC Q
"RTN","LRPXAPPU",109,0)
 . I FILE="M" S DIC=61.1 D ^DIC Q
"RTN","LRPXAPPU",110,0)
 . I FILE="E" S DIC=61.2 D ^DIC Q
"RTN","LRPXAPPU",111,0)
 . I FILE="F" S DIC=61.3 D ^DIC Q
"RTN","LRPXAPPU",112,0)
 . I FILE="P" S DIC=61.5 D ^DIC Q
"RTN","LRPXAPPU",113,0)
 . I FILE="I" S DIC=80 D ^DIC Q
"RTN","LRPXAPPU",114,0)
 S CODE="A;"_FILE_";"_+Y
"RTN","LRPXAPPU",115,0)
 W !
"RTN","LRPXAPPU",116,0)
 Q
"RTN","LRPXAPPU",117,0)
 ;
"RTN","LRPXAPPU",118,0)
GETMICRO(CODE,ERR) ; from LRPXAPP
"RTN","LRPXAPPU",119,0)
 ; asks for a Micro item, returned as CODE
"RTN","LRPXAPPU",120,0)
 N FILE,DIC,DIR,DIRUT,DTOUT,X,Y K DIC,DIR
"RTN","LRPXAPPU",121,0)
 S ERR=0,CODE=""
"RTN","LRPXAPPU",122,0)
 S DIR(0)="SA^S:SPEC;T:TEST;O:ORGANISM;A:ANTIMICROBIAL;M:MYCOBACTERIA DRUG"
"RTN","LRPXAPPU",123,0)
 S DIR("A")="Type of code -- S T O A M : "
"RTN","LRPXAPPU",124,0)
 D ^DIR K DIR
"RTN","LRPXAPPU",125,0)
 I Y[U!$D(DTOUT) S ERR=1 Q
"RTN","LRPXAPPU",126,0)
 S FILE=Y
"RTN","LRPXAPPU",127,0)
 S DIC(0)="AEMOQ"
"RTN","LRPXAPPU",128,0)
 D  I Y<1!$D(DTOUT) S ERR=1 Q
"RTN","LRPXAPPU",129,0)
 . I FILE="T" D GETTEST(.Y,"M",.ERR) Q
"RTN","LRPXAPPU",130,0)
 . I FILE="S" S DIC=61 D ^DIC Q
"RTN","LRPXAPPU",131,0)
 . I FILE="O" S DIC=61.2 D ^DIC Q
"RTN","LRPXAPPU",132,0)
 . I FILE="A" S DIC=62.06 D ^DIC Q
"RTN","LRPXAPPU",133,0)
 . I FILE="M" D  Q
"RTN","LRPXAPPU",134,0)
 .. S DIC="^DD(63.39," D ^DIC ; dbia 999
"RTN","LRPXAPPU",135,0)
 .. I '$$TBDN^LRPXAPIU(+Y) S Y=-1 Q
"RTN","LRPXAPPU",136,0)
 S CODE="M;"_FILE_";"_+Y
"RTN","LRPXAPPU",137,0)
 W !
"RTN","LRPXAPPU",138,0)
 Q
"RTN","LRPXCHK")
0^34^B64203634
"RTN","LRPXCHK",1,0)
LRPXCHK ;SLC/STAFF - Lab PXRMINDX Index Validation ;3/30/04  12:01
"RTN","LRPXCHK",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRPXCHK",3,0)
 ;
"RTN","LRPXCHK",4,0)
PATS ; select patients for index check
"RTN","LRPXCHK",5,0)
 N DFN,ERR,REPAIR
"RTN","LRPXCHK",6,0)
 D CLEAN
"RTN","LRPXCHK",7,0)
 F  D GETPT^LRPXAPPU(.DFN,.ERR) Q:ERR  D
"RTN","LRPXCHK",8,0)
 . S ^TMP("LRLOG PATS",$J,DFN)=""
"RTN","LRPXCHK",9,0)
 D
"RTN","LRPXCHK",10,0)
 . I '$O(^TMP("LRLOG PATS",$J,0)) Q
"RTN","LRPXCHK",11,0)
 . D GETREP(.REPAIR,.ERR) I ERR Q
"RTN","LRPXCHK",12,0)
 . D CHECK(REPAIR)
"RTN","LRPXCHK",13,0)
 D CLEAN
"RTN","LRPXCHK",14,0)
 Q
"RTN","LRPXCHK",15,0)
 ;
"RTN","LRPXCHK",16,0)
DATES ; check indexes for a date range of patient collections
"RTN","LRPXCHK",17,0)
 N CNT,DATE1,DATE2,DFN,LRDFN,LRIDT,OK,REPAIR,START,STOP,SUB
"RTN","LRPXCHK",18,0)
 D CLEAN
"RTN","LRPXCHK",19,0)
 D GETDATE^LRPXAPPU(.DATE1,.DATE2,.ERR) I ERR Q
"RTN","LRPXCHK",20,0)
 D GETREP(.REPAIR,.ERR) I ERR Q
"RTN","LRPXCHK",21,0)
 S STOP=$$LRIDT^LRPXAPIU(DATE1)
"RTN","LRPXCHK",22,0)
 S START=$$LRIDT^LRPXAPIU(DATE2)
"RTN","LRPXCHK",23,0)
 S CNT=0
"RTN","LRPXCHK",24,0)
 S LRDFN=0
"RTN","LRPXCHK",25,0)
 F  S LRDFN=$O(^LR(LRDFN)) Q:LRDFN<1  D
"RTN","LRPXCHK",26,0)
 . S OK=0
"RTN","LRPXCHK",27,0)
 . F SUB="CH","MI","CY","SP","EM" D  Q:OK
"RTN","LRPXCHK",28,0)
 .. S LRIDT=START
"RTN","LRPXCHK",29,0)
 .. F  S LRIDT=$O(^LR(LRDFN,SUB,LRIDT)) Q:LRIDT<1  Q:LRIDT>STOP  D  Q:OK
"RTN","LRPXCHK",30,0)
 ... S DFN=$$DFN^LRPXAPIU(LRDFN)
"RTN","LRPXCHK",31,0)
 ... I 'DFN Q
"RTN","LRPXCHK",32,0)
 ... S ^TMP("LRLOG PATS",$J,DFN)=""
"RTN","LRPXCHK",33,0)
 ... S OK=1,CNT=CNT+1
"RTN","LRPXCHK",34,0)
 W !,CNT," Patients to check"
"RTN","LRPXCHK",35,0)
 D CHECK(REPAIR)
"RTN","LRPXCHK",36,0)
 D CLEAN
"RTN","LRPXCHK",37,0)
 Q
"RTN","LRPXCHK",38,0)
 ;
"RTN","LRPXCHK",39,0)
CHECK(REPAIR) ;
"RTN","LRPXCHK",40,0)
 N CNT,DFN
"RTN","LRPXCHK",41,0)
 S REPAIR=$G(REPAIR)
"RTN","LRPXCHK",42,0)
 S DFN=0
"RTN","LRPXCHK",43,0)
 F  S DFN=$O(^TMP("LRLOG PATS",$J,DFN)) Q:DFN<1  D
"RTN","LRPXCHK",44,0)
 . W !,"DFN: ",DFN," LRDFN: ",$$LRDFN^LRPXAPIU(DFN)
"RTN","LRPXCHK",45,0)
 . D CHKPAT(DFN)
"RTN","LRPXCHK",46,0)
 S CNT=0
"RTN","LRPXCHK",47,0)
 S DFN=0
"RTN","LRPXCHK",48,0)
 F  S DFN=$O(^TMP("LRLOG",$J,DFN)) Q:DFN<1  D
"RTN","LRPXCHK",49,0)
 . S CNT=CNT+1
"RTN","LRPXCHK",50,0)
 I 'CNT W !,"Indexes were valid" Q
"RTN","LRPXCHK",51,0)
 W !,CNT," Patients with invalid indexes"
"RTN","LRPXCHK",52,0)
 I REPAIR D REPAIR
"RTN","LRPXCHK",53,0)
 Q
"RTN","LRPXCHK",54,0)
 ;
"RTN","LRPXCHK",55,0)
ALL ; check all patient indexes
"RTN","LRPXCHK",56,0)
 ; this takes a very long time
"RTN","LRPXCHK",57,0)
 ; to be used in small test accounts
"RTN","LRPXCHK",58,0)
 ; START and STOP determine range of DFNs to check
"RTN","LRPXCHK",59,0)
 Q  ; for testing
"RTN","LRPXCHK",60,0)
 N DFN,ERR,REPAIR,START,STOP
"RTN","LRPXCHK",61,0)
 D CLEAN
"RTN","LRPXCHK",62,0)
 W !,"WARNING - checking ALL patients",!
"RTN","LRPXCHK",63,0)
 D GETREP(.REPAIR,.ERR) I ERR Q
"RTN","LRPXCHK",64,0)
 S START=1
"RTN","LRPXCHK",65,0)
 S STOP=10000000000000
"RTN","LRPXCHK",66,0)
 S DFN=START-.1
"RTN","LRPXCHK",67,0)
 F  S DFN=$O(^DPT(DFN)) Q:DFN<1  Q:DFN>STOP  D
"RTN","LRPXCHK",68,0)
 . W !,"DFN: ",DFN," LRDFN: ",$$LRDFN^LRPXAPIU(DFN)
"RTN","LRPXCHK",69,0)
 . D CHKPAT(DFN)
"RTN","LRPXCHK",70,0)
 I REPAIR D REPAIR
"RTN","LRPXCHK",71,0)
 D CLEAN
"RTN","LRPXCHK",72,0)
 Q
"RTN","LRPXCHK",73,0)
 ;
"RTN","LRPXCHK",74,0)
CHKPAT(DFN) ; from LRLOG
"RTN","LRPXCHK",75,0)
 ; find bad nodes, 
"RTN","LRPXCHK",76,0)
 ; store as ^TMP("LRLOG",$J,DFN,DATE,ITEM,INDEX)=NODE
"RTN","LRPXCHK",77,0)
 ; only when ^TMP("LRLOG PATS",$J) is present
"RTN","LRPXCHK",78,0)
 ; if ^TMP("LRLOG PATS",$J) is not present, write to screen
"RTN","LRPXCHK",79,0)
 N ITEM,LRDFN
"RTN","LRPXCHK",80,0)
 K ^TMP("LRPXCHK",$J)
"RTN","LRPXCHK",81,0)
 S LRDFN=$$LRDFN^LRPXAPIU(DFN)
"RTN","LRPXCHK",82,0)
 I 'LRDFN Q
"RTN","LRPXCHK",83,0)
 M ^TMP("LRPXCHK",$J,"LR",LRDFN)=^LR(LRDFN)
"RTN","LRPXCHK",84,0)
 M ^TMP("LRPXCHK",$J,"PI",DFN)=^PXRMINDX(63,"PI",DFN)
"RTN","LRPXCHK",85,0)
 M ^TMP("LRPXCHK",$J,"PDI",DFN)=^PXRMINDX(63,"PDI",DFN)
"RTN","LRPXCHK",86,0)
 S ITEM=""
"RTN","LRPXCHK",87,0)
 F  S ITEM=$O(^PXRMINDX(63,"IP",ITEM)) Q:ITEM=""  D
"RTN","LRPXCHK",88,0)
 . I $D(^PXRMINDX(63,"IP",ITEM,DFN)) D
"RTN","LRPXCHK",89,0)
 . M ^TMP("LRPXCHK",$J,"IP",ITEM,DFN)=^PXRMINDX(63,"IP",ITEM,DFN)
"RTN","LRPXCHK",90,0)
 D INTEG(DFN)
"RTN","LRPXCHK",91,0)
 D CHKLR(DFN)
"RTN","LRPXCHK",92,0)
 D CHKPI(DFN,LRDFN)
"RTN","LRPXCHK",93,0)
 K ^TMP("LRPXCHK",$J)
"RTN","LRPXCHK",94,0)
 Q
"RTN","LRPXCHK",95,0)
 ;
"RTN","LRPXCHK",96,0)
INTEG(DFN) ; make sure "PI", "IP", and "PDI" are consistent
"RTN","LRPXCHK",97,0)
 N DATE,ITEM,NODE
"RTN","LRPXCHK",98,0)
 S DATE=0
"RTN","LRPXCHK",99,0)
 F  S DATE=$O(^TMP("LRPXCHK",$J,"PDI",DFN,DATE)) Q:DATE<1  D
"RTN","LRPXCHK",100,0)
 . S ITEM="A"
"RTN","LRPXCHK",101,0)
 . F  S ITEM=$O(^TMP("LRPXCHK",$J,"PDI",DFN,DATE,ITEM)) Q:ITEM=""  D
"RTN","LRPXCHK",102,0)
 .. S NODE=""
"RTN","LRPXCHK",103,0)
 .. F  S NODE=$O(^TMP("LRPXCHK",$J,"PDI",DFN,DATE,ITEM,NODE)) Q:NODE=""  D
"RTN","LRPXCHK",104,0)
 ... I '$D(^TMP("LRPXCHK",$J,"PI",DFN,ITEM,DATE,NODE)) D
"RTN","LRPXCHK",105,0)
 .... D BAD("PDI-PI",DFN,ITEM,DATE,NODE)
"RTN","LRPXCHK",106,0)
 ... I '$D(^TMP("LRPXCHK",$J,"IP",ITEM,DFN,DATE,NODE)) D
"RTN","LRPXCHK",107,0)
 .... D BAD("PDI-IP",DFN,ITEM,DATE,NODE)
"RTN","LRPXCHK",108,0)
 S ITEM=""
"RTN","LRPXCHK",109,0)
 F  S ITEM=$O(^TMP("LRPXCHK",$J,"PI",DFN,ITEM)) Q:ITEM=""  D
"RTN","LRPXCHK",110,0)
 . S DATE=0
"RTN","LRPXCHK",111,0)
 . F  S DATE=$O(^TMP("LRPXCHK",$J,"PI",DFN,ITEM,DATE)) Q:DATE<1  D
"RTN","LRPXCHK",112,0)
 .. S NODE=""
"RTN","LRPXCHK",113,0)
 .. F  S NODE=$O(^TMP("LRPXCHK",$J,"PI",DFN,ITEM,DATE,NODE)) Q:NODE=""  D
"RTN","LRPXCHK",114,0)
 ... I '$D(^TMP("LRPXCHK",$J,"IP",ITEM,DFN,DATE,NODE)) D
"RTN","LRPXCHK",115,0)
 .... D BAD("PI-IP",DFN,ITEM,DATE,NODE)
"RTN","LRPXCHK",116,0)
 ... I 'ITEM,'$D(^TMP("LRPXCHK",$J,"PDI",DFN,DATE,ITEM,NODE)) D
"RTN","LRPXCHK",117,0)
 .... D BAD("PI-PDI",DFN,ITEM,DATE,NODE)
"RTN","LRPXCHK",118,0)
 S ITEM=""
"RTN","LRPXCHK",119,0)
 F  S ITEM=$O(^TMP("LRPXCHK",$J,"IP",ITEM)) Q:ITEM=""  D
"RTN","LRPXCHK",120,0)
 . S DATE=0
"RTN","LRPXCHK",121,0)
 . F  S DATE=$O(^TMP("LRPXCHK",$J,"IP",ITEM,DFN,DATE)) Q:DATE<1  D
"RTN","LRPXCHK",122,0)
 .. S NODE=""
"RTN","LRPXCHK",123,0)
 .. F  S NODE=$O(^TMP("LRPXCHK",$J,"IP",ITEM,DFN,DATE,NODE)) Q:NODE=""  D
"RTN","LRPXCHK",124,0)
 ... I '$D(^TMP("LRPXCHK",$J,"PI",DFN,ITEM,DATE,NODE)) D
"RTN","LRPXCHK",125,0)
 .... D BAD("IP-PI",DFN,ITEM,DATE,NODE)
"RTN","LRPXCHK",126,0)
 ... I 'ITEM,'$D(^TMP("LRPXCHK",$J,"PDI",DFN,DATE,ITEM,NODE)) D
"RTN","LRPXCHK",127,0)
 .... D BAD("IP-PDI",DFN,ITEM,DATE,NODE)
"RTN","LRPXCHK",128,0)
 Q
"RTN","LRPXCHK",129,0)
 ;
"RTN","LRPXCHK",130,0)
CHKLR(DFN) ; go thru "PI" to make sure ^LR is consistent
"RTN","LRPXCHK",131,0)
 N DATE,ITEM,NODE
"RTN","LRPXCHK",132,0)
 S ITEM=""
"RTN","LRPXCHK",133,0)
 F  S ITEM=$O(^TMP("LRPXCHK",$J,"PI",DFN,ITEM)) Q:ITEM=""  D
"RTN","LRPXCHK",134,0)
 . S DATE=0
"RTN","LRPXCHK",135,0)
 . F  S DATE=$O(^TMP("LRPXCHK",$J,"PI",DFN,ITEM,DATE)) Q:DATE<1  D
"RTN","LRPXCHK",136,0)
 .. S NODE=""
"RTN","LRPXCHK",137,0)
 .. F  S NODE=$O(^TMP("LRPXCHK",$J,"PI",DFN,ITEM,DATE,NODE)) Q:NODE=""  D
"RTN","LRPXCHK",138,0)
 ... I '$$REFVAL(NODE) D BAD("LR",DFN,ITEM,DATE,NODE) Q
"RTN","LRPXCHK",139,0)
 Q
"RTN","LRPXCHK",140,0)
 ;
"RTN","LRPXCHK",141,0)
CHKPI(DFN,LRDFN) ; go thru ^LR to make sure "PI" is consistent
"RTN","LRPXCHK",142,0)
 N DATE,ITEM,LRIDT,LRDN,NODE,ZERO
"RTN","LRPXCHK",143,0)
 S LRIDT=0
"RTN","LRPXCHK",144,0)
 F  S LRIDT=$O(^TMP("LRPXCHK",$J,"LR",LRDFN,"CH",LRIDT)) Q:LRIDT<1  D
"RTN","LRPXCHK",145,0)
 . S ZERO=$G(^TMP("LRPXCHK",$J,"LR",LRDFN,"CH",LRIDT,0))
"RTN","LRPXCHK",146,0)
 . S DATE=+ZERO I 'DATE Q
"RTN","LRPXCHK",147,0)
 . I '$P(ZERO,U,3) Q
"RTN","LRPXCHK",148,0)
 . S LRDN=1
"RTN","LRPXCHK",149,0)
 . F  S LRDN=$O(^TMP("LRPXCHK",$J,"LR",LRDFN,"CH",LRIDT,LRDN)) Q:LRDN<1  D
"RTN","LRPXCHK",150,0)
 .. S ITEM=$$TEST^LRPXAPIU(LRDN)
"RTN","LRPXCHK",151,0)
 .. I 'ITEM Q
"RTN","LRPXCHK",152,0)
 .. S NODE=LRDFN_";CH;"_LRIDT_";"_LRDN
"RTN","LRPXCHK",153,0)
 .. I '$D(^PXRMINDX(63,"PI",DFN,ITEM,DATE,NODE)) D BAD("CH",DFN,ITEM,DATE,NODE)
"RTN","LRPXCHK",154,0)
 D MI^LRPXCHKM(DFN,LRDFN)
"RTN","LRPXCHK",155,0)
 D AP^LRPXCHKA(DFN,LRDFN)
"RTN","LRPXCHK",156,0)
 Q
"RTN","LRPXCHK",157,0)
 ;
"RTN","LRPXCHK",158,0)
TMPCHK(DFN,DATE,ITEM,NODE) ;
"RTN","LRPXCHK",159,0)
 I '$D(^PXRMINDX(63,"PI",DFN,ITEM,DATE,NODE)) D BAD(NODE,DFN,ITEM,DATE,NODE)
"RTN","LRPXCHK",160,0)
 Q
"RTN","LRPXCHK",161,0)
 ;
"RTN","LRPXCHK",162,0)
BAD(INDEX,DFN,ITEM,DATE,NODE) ; write error to screen, collect in global
"RTN","LRPXCHK",163,0)
 W !,?5,INDEX," ",DFN," ",ITEM," ",DATE," ",NODE
"RTN","LRPXCHK",164,0)
 S ^TMP("LRLOG",$J,DFN,DATE,ITEM,INDEX)=NODE
"RTN","LRPXCHK",165,0)
 Q
"RTN","LRPXCHK",166,0)
 ;
"RTN","LRPXCHK",167,0)
CLEAN ; clear tmp globals
"RTN","LRPXCHK",168,0)
 ; "LRLOG" collects invalid nodes, "LRLOG PATS" are patients checked
"RTN","LRPXCHK",169,0)
 K ^TMP("LRLOG",$J)
"RTN","LRPXCHK",170,0)
 K ^TMP("LRLOG PATS",$J)
"RTN","LRPXCHK",171,0)
 Q
"RTN","LRPXCHK",172,0)
 ;
"RTN","LRPXCHK",173,0)
REFVAL(REF) ; $$(reference location in ^LR) -> if ref exists 1, else 0
"RTN","LRPXCHK",174,0)
 N SUB
"RTN","LRPXCHK",175,0)
 I REF'[";" Q ""
"RTN","LRPXCHK",176,0)
 S SUB=$P(REF,";",2)
"RTN","LRPXCHK",177,0)
 S SUB=""""_SUB_""""
"RTN","LRPXCHK",178,0)
 S $P(REF,";",2)=SUB
"RTN","LRPXCHK",179,0)
 S REF=$TR(REF,";",",")
"RTN","LRPXCHK",180,0)
 S REF="^LR("_REF_")"
"RTN","LRPXCHK",181,0)
 I $D(@REF) Q 1
"RTN","LRPXCHK",182,0)
 Q 0
"RTN","LRPXCHK",183,0)
 ;
"RTN","LRPXCHK",184,0)
REPAIR ; correct invalid indexes
"RTN","LRPXCHK",185,0)
 ; kill off bad indexes
"RTN","LRPXCHK",186,0)
 ; reset all indexes at date of bad index
"RTN","LRPXCHK",187,0)
 N DATE,DFN,DOD,INDEX,ITEM,NODE,REPAIR K REPAIR
"RTN","LRPXCHK",188,0)
 S DFN=0
"RTN","LRPXCHK",189,0)
 F  S DFN=$O(^TMP("LRLOG",$J,DFN)) Q:DFN<1  D
"RTN","LRPXCHK",190,0)
 . S LRDFN=$$LRDFN^LRPXAPIU(DFN)
"RTN","LRPXCHK",191,0)
 . S DOD=$$DOD^LRPXAPIU(DFN)
"RTN","LRPXCHK",192,0)
 . S DATE=0
"RTN","LRPXCHK",193,0)
 . F  S DATE=$O(^TMP("LRLOG",$J,DFN,DATE)) Q:DATE<1  D
"RTN","LRPXCHK",194,0)
 .. S LRIDT=$$LRIDT^LRPXAPIU(DATE)
"RTN","LRPXCHK",195,0)
 .. K REPAIR
"RTN","LRPXCHK",196,0)
 .. S ITEM=""
"RTN","LRPXCHK",197,0)
 .. F  S ITEM=$O(^TMP("LRLOG",$J,DFN,DATE,ITEM)) Q:ITEM=""  D
"RTN","LRPXCHK",198,0)
 ... S INDEX=""
"RTN","LRPXCHK",199,0)
 ... F  S INDEX=$O(^TMP("LRLOG",$J,DFN,DATE,ITEM,INDEX)) Q:INDEX=""  D
"RTN","LRPXCHK",200,0)
 .... S NODE=^TMP("LRLOG",$J,DFN,DATE,ITEM,INDEX)
"RTN","LRPXCHK",201,0)
 .... I '$L(NODE) Q
"RTN","LRPXCHK",202,0)
 .... S REPAIR($P(NODE,";",2))=""
"RTN","LRPXCHK",203,0)
 .... D KLAB^LRPX(DFN,DATE,ITEM,NODE)
"RTN","LRPXCHK",204,0)
 .. S SUB=""
"RTN","LRPXCHK",205,0)
 .. F  S SUB=$O(REPAIR(SUB)) Q:SUB=""  D
"RTN","LRPXCHK",206,0)
 ... I SUB="CH" D CH(DFN,LRDFN,DATE,LRIDT) Q
"RTN","LRPXCHK",207,0)
 ... I SUB="MI" D MICRO(DFN,LRDFN,DATE,LRIDT) Q
"RTN","LRPXCHK",208,0)
 ... D AP(DFN,LRDFN,DATE,LRIDT,SUB)
"RTN","LRPXCHK",209,0)
 .. I DATE=DOD D AU(DFN,LRDFN,DATE) Q
"RTN","LRPXCHK",210,0)
 Q
"RTN","LRPXCHK",211,0)
 ;
"RTN","LRPXCHK",212,0)
CH(DFN,LRDFN,DATE,LRIDT) ;
"RTN","LRPXCHK",213,0)
 N DAT,LRDN,NODE,TEMP,TEST
"RTN","LRPXCHK",214,0)
 I '$$VERIFIED^LRPXAPI(LRDFN,LRIDT) Q
"RTN","LRPXCHK",215,0)
 S DAT=LRDFN_";CH;"_LRIDT
"RTN","LRPXCHK",216,0)
 S LRDN=1
"RTN","LRPXCHK",217,0)
 F  S LRDN=$O(^LR(LRDFN,"CH",LRIDT,LRDN)) Q:LRDN<1  D
"RTN","LRPXCHK",218,0)
 . S NODE=DAT_";"_LRDN
"RTN","LRPXCHK",219,0)
 . S TEMP=^LR(LRDFN,"CH",LRIDT,LRDN)
"RTN","LRPXCHK",220,0)
 . S TEST=+$P($P(TEMP,U,3),"!",6)
"RTN","LRPXCHK",221,0)
 . I 'TEST S TEST=$$TEST^LRPXAPIU(LRDN)
"RTN","LRPXCHK",222,0)
 . I 'TEST Q
"RTN","LRPXCHK",223,0)
 . D SLAB^LRPX(DFN,DATE,TEST,NODE)
"RTN","LRPXCHK",224,0)
 Q
"RTN","LRPXCHK",225,0)
 ;
"RTN","LRPXCHK",226,0)
MICRO(DFN,LRDFN,DATE,LRIDT) ;
"RTN","LRPXCHK",227,0)
 K ^TMP("LRPX",$J)
"RTN","LRPXCHK",228,0)
 M ^TMP("LRPX",$J,"AR")=^LR(LRDFN,"MI",LRIDT)
"RTN","LRPXCHK",229,0)
 M ^TMP("LRPX",$J,"B")=^PXRMINDX(63,"PDI",DFN,DATE)
"RTN","LRPXCHK",230,0)
 D MICRO^LRPXRM(DFN,LRDFN,DATE,LRIDT)
"RTN","LRPXCHK",231,0)
 K ^TMP("LRPX",$J)
"RTN","LRPXCHK",232,0)
 Q
"RTN","LRPXCHK",233,0)
 ;
"RTN","LRPXCHK",234,0)
AP(DFN,LRDFN,DATE,LRIDT,SUB) ;
"RTN","LRPXCHK",235,0)
 K ^TMP("LRPX",$J)
"RTN","LRPXCHK",236,0)
 M ^TMP("LRPX",$J,"AR")=^LR(LRDFN,SUB,LRIDT)
"RTN","LRPXCHK",237,0)
 M ^TMP("LRPX",$J,"B")=^PXRMINDX(63,"PDI",DFN,DATE)
"RTN","LRPXCHK",238,0)
 D AP^LRPXRM(DFN,LRDFN,DATE,LRIDT,SUB)
"RTN","LRPXCHK",239,0)
 K ^TMP("LRPX",$J)
"RTN","LRPXCHK",240,0)
 Q
"RTN","LRPXCHK",241,0)
 ;
"RTN","LRPXCHK",242,0)
AU(DFN,LRDFN,DATE) ;
"RTN","LRPXCHK",243,0)
 I '+$G(^LR(LRDFN,"AU")) Q
"RTN","LRPXCHK",244,0)
 I '($P(^LR(LRDFN,"AU"),U,3)&($P(^("AU"),U,15))) Q
"RTN","LRPXCHK",245,0)
 K ^TMP("LRPX",$J)
"RTN","LRPXCHK",246,0)
 M ^TMP("LRPX",$J,"AR","AY")=^LR(LRDFN,"AY")
"RTN","LRPXCHK",247,0)
 M ^TMP("LRPX",$J,"AR",80)=^LR(LRDFN,80)
"RTN","LRPXCHK",248,0)
 M ^TMP("LRPX",$J,"AR",33)=^LR(LRDFN,33)
"RTN","LRPXCHK",249,0)
 M ^TMP("LRPX",$J,"B")=^PXRMINDX(63,"PDI",DFN,DATE)
"RTN","LRPXCHK",250,0)
 D AUTOPSY^LRPXRM(LRDFN)
"RTN","LRPXCHK",251,0)
 K ^TMP("LRPX",$J)
"RTN","LRPXCHK",252,0)
 Q
"RTN","LRPXCHK",253,0)
 ;
"RTN","LRPXCHK",254,0)
GETREP(REPAIR,ERR) ;
"RTN","LRPXCHK",255,0)
 ; asks to repair indexes
"RTN","LRPXCHK",256,0)
 N DIR,DIRUT,DTOUT,X,Y K DIR
"RTN","LRPXCHK",257,0)
 S ERR=0,REPAIR=""
"RTN","LRPXCHK",258,0)
 S DIR(0)="YAO"
"RTN","LRPXCHK",259,0)
 S DIR("A")="Repair invalid indexes? "
"RTN","LRPXCHK",260,0)
 S DIR("B")="YES"
"RTN","LRPXCHK",261,0)
 D ^DIR K DIR
"RTN","LRPXCHK",262,0)
 I Y[U!$D(DTOUT) S ERR=1 Q
"RTN","LRPXCHK",263,0)
 S REPAIR=Y
"RTN","LRPXCHK",264,0)
 W !
"RTN","LRPXCHK",265,0)
 Q
"RTN","LRPXCHK",266,0)
 ;
"RTN","LRPXCHKA")
0^36^B23723707
"RTN","LRPXCHKA",1,0)
LRPXCHKA ;SLC/STAFF - Lab PXRMINDX Index Validation AP ;3/17/04  15:07
"RTN","LRPXCHKA",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRPXCHKA",3,0)
 ;
"RTN","LRPXCHKA",4,0)
AP(DFN,LRDFN) ; from LRPXCHK
"RTN","LRPXCHKA",5,0)
 N DATE,LRIDT,SUB,ZERO
"RTN","LRPXCHKA",6,0)
 F SUB="CY","EM","SP" D
"RTN","LRPXCHKA",7,0)
 . S LRIDT=0
"RTN","LRPXCHKA",8,0)
 . F  S LRIDT=$O(^TMP("LRPXCHK",$J,"LR",LRDFN,SUB,LRIDT)) Q:LRIDT<1  D
"RTN","LRPXCHKA",9,0)
 .. S ZERO=$G(^TMP("LRPXCHK",$J,"LR",LRDFN,SUB,LRIDT,0))
"RTN","LRPXCHKA",10,0)
 .. S DATE=$$LRIDT^LRPXAPIU(LRIDT) I 'DATE Q
"RTN","LRPXCHKA",11,0)
 .. I '$P(ZERO,U,3) Q
"RTN","LRPXCHKA",12,0)
 .. I '$P(ZERO,U,11) Q
"RTN","LRPXCHKA",13,0)
 .. D CYEMSP(LRDFN,DFN,LRIDT,DATE,SUB) ; cyto, electron micro, surg path
"RTN","LRPXCHKA",14,0)
 I $D(^TMP("LRPXCHK",$J,"LR",LRDFN,"AU")) D AUTOPSY(DFN,LRDFN)
"RTN","LRPXCHKA",15,0)
 Q
"RTN","LRPXCHKA",16,0)
 ;
"RTN","LRPXCHKA",17,0)
AUTOPSY(DFN,LRDFN) ;
"RTN","LRPXCHKA",18,0)
 N DATE,ETIOL,I,II,III,ICD,ICDX,ITEM,NODE,ORGAN,SNOMED,SPEC,SUB,SUBS
"RTN","LRPXCHKA",19,0)
 I '($P(^TMP("LRPXCHK",$J,"LR",LRDFN,"AU"),U,3)&($P(^("AU"),U,15))) Q
"RTN","LRPXCHKA",20,0)
 S DATE=$$DOD^LRPXAPIU(DFN)  I 'DATE Q
"RTN","LRPXCHKA",21,0)
 S SPEC=0
"RTN","LRPXCHKA",22,0)
 F  S SPEC=$O(^TMP("LRPXCHK",$J,"LR",LRDFN,33,SPEC)) Q:SPEC<1  D
"RTN","LRPXCHKA",23,0)
 . I '$L($P($G(^TMP("LRPXCHK",$J,"LR",LRDFN,33,SPEC,0)),U)) Q
"RTN","LRPXCHKA",24,0)
 . S ITEM="A;S;1."_$$UP^XLFSTR($P(^TMP("LRPXCHK",$J,"LR",LRDFN,33,SPEC,0),U))
"RTN","LRPXCHKA",25,0)
 . S NODE=LRDFN_";33;"_SPEC_";0"
"RTN","LRPXCHKA",26,0)
 . D TMPCHK^LRPXCHK(DFN,DATE,ITEM,NODE)
"RTN","LRPXCHKA",27,0)
 S ICD=0
"RTN","LRPXCHKA",28,0)
 F  S ICD=$O(^TMP("LRPXCHK",$J,"LR",LRDFN,80,ICD)) Q:ICD<1  D
"RTN","LRPXCHKA",29,0)
 . S ICDX=+$G(^TMP("LRPXCHK",$J,"LR",LRDFN,80,ICD,0))
"RTN","LRPXCHKA",30,0)
 . I 'ICDX Q
"RTN","LRPXCHKA",31,0)
 . S ITEM="A;I;"_ICDX
"RTN","LRPXCHKA",32,0)
 . S NODE=LRDFN_";80;"_ICD_";0"
"RTN","LRPXCHKA",33,0)
 . D TMPCHK^LRPXCHK(DFN,DATE,ITEM,NODE)
"RTN","LRPXCHKA",34,0)
 S I=0
"RTN","LRPXCHKA",35,0)
 F  S I=$O(^TMP("LRPXCHK",$J,"LR",LRDFN,"AY",I)) Q:I<1  D
"RTN","LRPXCHKA",36,0)
 . S ORGAN=+$G(^TMP("LRPXCHK",$J,"LR",LRDFN,"AY",I,0))
"RTN","LRPXCHKA",37,0)
 . I 'ORGAN Q
"RTN","LRPXCHKA",38,0)
 . S ITEM="A;O;"_ORGAN
"RTN","LRPXCHKA",39,0)
 . S NODE=LRDFN_";AY;"_I_";0"
"RTN","LRPXCHKA",40,0)
 . D TMPCHK^LRPXCHK(DFN,DATE,ITEM,NODE)
"RTN","LRPXCHKA",41,0)
 . F SUBS="1D","2M","3F","4P" D
"RTN","LRPXCHKA",42,0)
 .. S SUB=+SUBS
"RTN","LRPXCHKA",43,0)
 .. S II=0
"RTN","LRPXCHKA",44,0)
 .. F  S II=$O(^TMP("LRPXCHK",$J,"LR",LRDFN,"AY",I,SUB,II)) Q:II<1  D
"RTN","LRPXCHKA",45,0)
 ... S SNOMED=+$G(^TMP("LRPXCHK",$J,"LR",LRDFN,"AY",I,SUB,II,0))
"RTN","LRPXCHKA",46,0)
 ... I 'SNOMED Q
"RTN","LRPXCHKA",47,0)
 ... S ITEM="A;"_$E(SUBS,2)_";"_SNOMED
"RTN","LRPXCHKA",48,0)
 ... S NODE=LRDFN_";AY;"_I_";"_SUB_";"_II_";0"
"RTN","LRPXCHKA",49,0)
 ... D TMPCHK^LRPXCHK(DFN,DATE,ITEM,NODE)
"RTN","LRPXCHKA",50,0)
 ... I SUB'=2 Q
"RTN","LRPXCHKA",51,0)
 ... S III=0
"RTN","LRPXCHKA",52,0)
 ... F  S III=$O(^TMP("LRPXCHK",$J,"LR",LRDFN,"AY",I,SUB,II,1,III)) Q:III<1  D
"RTN","LRPXCHKA",53,0)
 .... S ETIOL=+$G(^TMP("LRPXCHK",$J,"LR",LRDFN,"AY",I,SUB,II,1,III,0))
"RTN","LRPXCHKA",54,0)
 .... I 'ETIOL Q
"RTN","LRPXCHKA",55,0)
 .... S ITEM="A;E;"_ETIOL
"RTN","LRPXCHKA",56,0)
 .... S NODE=LRDFN_";AY;"_I_";"_SUB_";"_II_";1;"_III_";0"
"RTN","LRPXCHKA",57,0)
 .... D TMPCHK^LRPXCHK(DFN,DATE,ITEM,NODE)
"RTN","LRPXCHKA",58,0)
 Q
"RTN","LRPXCHKA",59,0)
 ;
"RTN","LRPXCHKA",60,0)
CYEMSP(LRDFN,DFN,LRIDT,DATE,SUB) ;
"RTN","LRPXCHKA",61,0)
 N ACC,I,ICD,ICDX,ITEM,NODE,ORGAN,PREP,SPEC,TEST,TESTS K TESTS
"RTN","LRPXCHKA",62,0)
 I '$D(^TMP("LRPXCHK",$J,"LR",LRDFN,SUB,0)) Q
"RTN","LRPXCHKA",63,0)
 S SPEC=0
"RTN","LRPXCHKA",64,0)
 F  S SPEC=$O(^TMP("LRPXCHK",$J,"LR",LRDFN,SUB,LRIDT,.1,SPEC)) Q:SPEC<1  D
"RTN","LRPXCHKA",65,0)
 . I '$L($P($G(^TMP("LRPXCHK",$J,"LR",LRDFN,SUB,LRIDT,.1,SPEC,0)),U)) Q
"RTN","LRPXCHKA",66,0)
 . S ITEM="A;S;1."_$$UP^XLFSTR($P(^TMP("LRPXCHK",$J,"LR",LRDFN,SUB,LRIDT,.1,SPEC,0),U))
"RTN","LRPXCHKA",67,0)
 . S NODE=LRDFN_";"_SUB_";"_LRIDT_";.1;"_SPEC_";0"
"RTN","LRPXCHKA",68,0)
 . D TMPCHK^LRPXCHK(DFN,DATE,ITEM,NODE)
"RTN","LRPXCHKA",69,0)
 . S PREP=0
"RTN","LRPXCHKA",70,0)
 . F  S PREP=$O(^TMP("LRPXCHK",$J,"LR",LRDFN,SUB,LRIDT,.1,SPEC,1,PREP)) Q:PREP<1  D
"RTN","LRPXCHKA",71,0)
 .. S TEST=0
"RTN","LRPXCHKA",72,0)
 .. F  S TEST=$O(^TMP("LRPXCHK",$J,"LR",LRDFN,SUB,LRIDT,.1,SPEC,1,PREP,1,TEST)) Q:TEST<1  D
"RTN","LRPXCHKA",73,0)
 ... S TEST=+$G(^TMP("LRPXCHK",$J,"LR",LRDFN,SUB,LRIDT,.1,SPEC,1,PREP,1,TEST,0))
"RTN","LRPXCHKA",74,0)
 ... I 'TEST Q
"RTN","LRPXCHKA",75,0)
 ... S ITEM="A;T;"_TEST
"RTN","LRPXCHKA",76,0)
 ... S NODE=LRDFN_";"_SUB_";"_LRIDT_";.1;"_SPEC_";1;"_PREP_";1;"_TEST_";0"
"RTN","LRPXCHKA",77,0)
 ... D TMPCHK^LRPXCHK(DFN,DATE,ITEM,NODE)
"RTN","LRPXCHKA",78,0)
 ; S ACC=$P(^TMP("LRPXCHK",$J,"LR",LRDFN,SUB,LRIDT,0),U,6) ; do not use tests on acc
"RTN","LRPXCHKA",79,0)
 ; I $L(ACC) D
"RTN","LRPXCHKA",80,0)
 ; . S NODE=LRDFN_";"_SUB_";"_LRIDT_";0"
"RTN","LRPXCHKA",81,0)
 ; . D ACCY^LRPXAPI(.TESTS,ACC,DATE)
"RTN","LRPXCHKA",82,0)
 ; . I $O(TESTS(0)) D
"RTN","LRPXCHKA",83,0)
 ; .. S TEST=0
"RTN","LRPXCHKA",84,0)
 ; .. F  S TEST=+$O(TESTS(TEST)) Q:TEST<1  D
"RTN","LRPXCHKA",85,0)
 ; ... S ITEM="A;T;"_TEST
"RTN","LRPXCHKA",86,0)
 ; ... D TMPCHK^LRPXCHK(DFN,DATE,ITEM,NODE)
"RTN","LRPXCHKA",87,0)
 S ICD=0
"RTN","LRPXCHKA",88,0)
 F  S ICD=$O(^TMP("LRPXCHK",$J,"LR",LRDFN,SUB,LRIDT,3,ICD)) Q:ICD<1  D
"RTN","LRPXCHKA",89,0)
 . S ICDX=+$G(^TMP("LRPXCHK",$J,"LR",LRDFN,SUB,LRIDT,3,ICD,0))
"RTN","LRPXCHKA",90,0)
 . I 'ICDX Q
"RTN","LRPXCHKA",91,0)
 . S ITEM="A;I;"_ICDX
"RTN","LRPXCHKA",92,0)
 . S NODE=LRDFN_";"_SUB_";"_LRIDT_";3;"_ICD_";0"
"RTN","LRPXCHKA",93,0)
 . D TMPCHK^LRPXCHK(DFN,DATE,ITEM,NODE)
"RTN","LRPXCHKA",94,0)
 S I=0
"RTN","LRPXCHKA",95,0)
 F  S I=$O(^TMP("LRPXCHK",$J,"LR",LRDFN,SUB,LRIDT,2,I)) Q:I<1  D
"RTN","LRPXCHKA",96,0)
 . S ORGAN=+$G(^TMP("LRPXCHK",$J,"LR",LRDFN,SUB,LRIDT,2,I,0))
"RTN","LRPXCHKA",97,0)
 . I 'ORGAN Q
"RTN","LRPXCHKA",98,0)
 . S ITEM="A;O;"_ORGAN
"RTN","LRPXCHKA",99,0)
 . S NODE=LRDFN_";"_SUB_";"_LRIDT_";2;"_I_";0"
"RTN","LRPXCHKA",100,0)
 . D TMPCHK^LRPXCHK(DFN,DATE,ITEM,NODE)
"RTN","LRPXCHKA",101,0)
 . D SNOMED(LRDFN,LRIDT,SUB,I)
"RTN","LRPXCHKA",102,0)
 Q
"RTN","LRPXCHKA",103,0)
 ;
"RTN","LRPXCHKA",104,0)
SNOMED(LRDFN,LRIDT,APSUB,I) ;
"RTN","LRPXCHKA",105,0)
 N ETIOL,II,III,ITEM,NODE,SNOMED,SUB,SUBS
"RTN","LRPXCHKA",106,0)
 F SUBS="1D","2M","3F","4P" D
"RTN","LRPXCHKA",107,0)
 . S SUB=+SUBS
"RTN","LRPXCHKA",108,0)
 . S II=0
"RTN","LRPXCHKA",109,0)
 . F  S II=$O(^TMP("LRPXCHK",$J,"LR",LRDFN,APSUB,LRIDT,2,I,SUB,II)) Q:II<1  D
"RTN","LRPXCHKA",110,0)
 .. S SNOMED=+$G(^TMP("LRPXCHK",$J,"LR",LRDFN,APSUB,LRIDT,2,I,SUB,II,0))
"RTN","LRPXCHKA",111,0)
 .. I 'SNOMED Q
"RTN","LRPXCHKA",112,0)
 .. S ITEM="A;"_$E(SUBS,2)_";"_SNOMED
"RTN","LRPXCHKA",113,0)
 .. S NODE=LRDFN_";"_APSUB_";"_LRIDT_";2;"_I_";"_SUB_";"_II_";0"
"RTN","LRPXCHKA",114,0)
 .. D TMPCHK^LRPXCHK(DFN,DATE,ITEM,NODE)
"RTN","LRPXCHKA",115,0)
 .. I SUB'=2 Q
"RTN","LRPXCHKA",116,0)
 .. S III=0
"RTN","LRPXCHKA",117,0)
 .. F  S III=$O(^TMP("LRPXCHK",$J,"LR",LRDFN,APSUB,LRIDT,2,I,SUB,II,1,III)) Q:III<1  D
"RTN","LRPXCHKA",118,0)
 ... S ETIOL=+$G(^TMP("LRPXCHK",$J,"LR",LRDFN,APSUB,LRIDT,2,I,SUB,II,1,III,0))
"RTN","LRPXCHKA",119,0)
 ... I 'ETIOL Q
"RTN","LRPXCHKA",120,0)
 ... S ITEM="A;E;"_ETIOL
"RTN","LRPXCHKA",121,0)
 ... S NODE=LRDFN_";"_APSUB_";"_LRIDT_";2;"_I_";"_SUB_";"_II_";1;"_III_";0"
"RTN","LRPXCHKA",122,0)
 ... D TMPCHK^LRPXCHK(DFN,DATE,ITEM,NODE)
"RTN","LRPXCHKA",123,0)
 Q
"RTN","LRPXCHKA",124,0)
 ;
"RTN","LRPXCHKM")
0^35^B7352182
"RTN","LRPXCHKM",1,0)
LRPXCHKM ;SLC/STAFF - Lab PXRMINDX Index Validation Micro ;10/15/03  09:15
"RTN","LRPXCHKM",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRPXCHKM",3,0)
 ;
"RTN","LRPXCHKM",4,0)
MI(DFN,LRDFN) ; from LRPXCHK
"RTN","LRPXCHKM",5,0)
 N DATE,LRIDT,ZERO
"RTN","LRPXCHKM",6,0)
 S LRIDT=0
"RTN","LRPXCHKM",7,0)
 F  S LRIDT=$O(^TMP("LRPXCHK",$J,"LR",LRDFN,"MI",LRIDT)) Q:LRIDT<1  D
"RTN","LRPXCHKM",8,0)
 . S ZERO=$G(^TMP("LRPXCHK",$J,"LR",LRDFN,"MI",LRIDT,0))
"RTN","LRPXCHKM",9,0)
 . S DATE=+ZERO I 'DATE Q
"RTN","LRPXCHKM",10,0)
 . I '$$MIVER^LRPXRM(LRDFN,LRIDT) Q
"RTN","LRPXCHKM",11,0)
 . D MICRO(DFN,LRDFN,DATE,LRIDT)
"RTN","LRPXCHKM",12,0)
 Q
"RTN","LRPXCHKM",13,0)
 ;
"RTN","LRPXCHKM",14,0)
MICRO(DFN,LRDFN,DATE,LRIDT) ;
"RTN","LRPXCHKM",15,0)
 N AB,ABDN,ACC,ITEM,NODE,ORG,ORGNUM,SPEC,SUB,TB,TBDN,TEST,TESTS K TESTS
"RTN","LRPXCHKM",16,0)
 S SPEC=+$P(^TMP("LRPXCHK",$J,"LR",LRDFN,"MI",LRIDT,0),U,5)
"RTN","LRPXCHKM",17,0)
 I 'SPEC Q
"RTN","LRPXCHKM",18,0)
 S ITEM="M;S;"_SPEC
"RTN","LRPXCHKM",19,0)
 S NODE=LRDFN_";MI;"_LRIDT_";0"
"RTN","LRPXCHKM",20,0)
 D TMPCHK^LRPXCHK(DFN,DATE,ITEM,NODE)
"RTN","LRPXCHKM",21,0)
 S ACC=$P(^TMP("LRPXCHK",$J,"LR",LRDFN,"MI",LRIDT,0),U,6)
"RTN","LRPXCHKM",22,0)
 I $L(ACC) D
"RTN","LRPXCHKM",23,0)
 . D ACCY^LRPXAPI(.TESTS,ACC,DATE)
"RTN","LRPXCHKM",24,0)
 . I $O(TESTS(0)) D
"RTN","LRPXCHKM",25,0)
 .. S TEST=0
"RTN","LRPXCHKM",26,0)
 .. F  S TEST=+$O(TESTS(TEST)) Q:TEST<1  D
"RTN","LRPXCHKM",27,0)
 ... S ITEM="M;T;"_TEST
"RTN","LRPXCHKM",28,0)
 ... D TMPCHK^LRPXCHK(DFN,DATE,ITEM,NODE)
"RTN","LRPXCHKM",29,0)
 I $G(^TMP("LRPXCHK",$J,"LR",LRDFN,"MI",LRIDT,1)) D
"RTN","LRPXCHKM",30,0)
 . S ORGNUM=0
"RTN","LRPXCHKM",31,0)
 . F  S ORGNUM=$O(^TMP("LRPXCHK",$J,"LR",LRDFN,"MI",LRIDT,3,ORGNUM)) Q:ORGNUM<1  D
"RTN","LRPXCHKM",32,0)
 .. S ORG=+$G(^TMP("LRPXCHK",$J,"LR",LRDFN,"MI",LRIDT,3,ORGNUM,0))
"RTN","LRPXCHKM",33,0)
 .. I 'ORG Q
"RTN","LRPXCHKM",34,0)
 .. S ITEM="M;O;"_ORG
"RTN","LRPXCHKM",35,0)
 .. S NODE=LRDFN_";MI;"_LRIDT_";3;"_ORGNUM_";0"
"RTN","LRPXCHKM",36,0)
 .. D TMPCHK^LRPXCHK(DFN,DATE,ITEM,NODE)
"RTN","LRPXCHKM",37,0)
 .. S ABDN=1
"RTN","LRPXCHKM",38,0)
 .. F  S ABDN=$O(^TMP("LRPXCHK",$J,"LR",LRDFN,"MI",LRIDT,3,ORGNUM,ABDN)) Q:ABDN<1  D
"RTN","LRPXCHKM",39,0)
 ... S AB=$$AB^LRPXAPIU(ABDN)
"RTN","LRPXCHKM",40,0)
 ... I 'AB Q
"RTN","LRPXCHKM",41,0)
 ... S ITEM="M;A;"_AB
"RTN","LRPXCHKM",42,0)
 ... S NODE=LRDFN_";MI;"_LRIDT_";3;"_ORGNUM_";"_ABDN
"RTN","LRPXCHKM",43,0)
 ... D TMPCHK^LRPXCHK(DFN,DATE,ITEM,NODE)
"RTN","LRPXCHKM",44,0)
 F SUB=6,9,12,17 D
"RTN","LRPXCHKM",45,0)
 . I '$G(^TMP("LRPXCHK",$J,"LR",LRDFN,"MI",LRIDT,(SUB-1))) Q
"RTN","LRPXCHKM",46,0)
 . S ORGNUM=0
"RTN","LRPXCHKM",47,0)
 . F  S ORGNUM=$O(^TMP("LRPXCHK",$J,"LR",LRDFN,"MI",LRIDT,SUB,ORGNUM)) Q:ORGNUM<1  D
"RTN","LRPXCHKM",48,0)
 .. S ORG=+$G(^TMP("LRPXCHK",$J,"LR",LRDFN,"MI",LRIDT,SUB,ORGNUM,0))
"RTN","LRPXCHKM",49,0)
 .. I 'ORG Q
"RTN","LRPXCHKM",50,0)
 .. S ITEM="M;O;"_ORG
"RTN","LRPXCHKM",51,0)
 .. S NODE=LRDFN_";MI;"_LRIDT_";"_SUB_";"_ORGNUM_";0"
"RTN","LRPXCHKM",52,0)
 .. D TMPCHK^LRPXCHK(DFN,DATE,ITEM,NODE)
"RTN","LRPXCHKM",53,0)
 .. I SUB'=12 Q
"RTN","LRPXCHKM",54,0)
 .. S TBDN=2
"RTN","LRPXCHKM",55,0)
 .. F  S TBDN=$O(^TMP("LRPXCHK",$J,"LR",LRDFN,"MI",LRIDT,12,ORGNUM,TBDN)) Q:TBDN<2  D
"RTN","LRPXCHKM",56,0)
 ... S TB=$$TB^LRPXAPIU(TBDN)
"RTN","LRPXCHKM",57,0)
 ... I '$L(TB) Q
"RTN","LRPXCHKM",58,0)
 ... S ITEM="M;M;"_TB
"RTN","LRPXCHKM",59,0)
 ... S NODE=LRDFN_";MI;"_LRIDT_";12;"_ORGNUM_";"_TBDN
"RTN","LRPXCHKM",60,0)
 ... D TMPCHK^LRPXCHK(DFN,DATE,ITEM,NODE)
"RTN","LRPXCHKM",61,0)
 Q
"RTN","LRPXCHKM",62,0)
 ;
"RTN","LRPXRM")
0^16^B67256767
"RTN","LRPXRM",1,0)
LRPXRM ;SLC/STAFF Lab reminder index for micro and ap ;5/6/04  13:21
"RTN","LRPXRM",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRPXRM",3,0)
 ;
"RTN","LRPXRM",4,0)
UPDATE(LRDFN,SUB,LRIDT) ; update Micro and AP xrefs in ^PXRMINDX(63
"RTN","LRPXRM",5,0)
 ; from LRAPDA,LRAPDSR,LRMIEDZ,LRMIEDZ2,LRMISTF1,LRMIV,LRMIV1,LRMIV2
"RTN","LRPXRM",6,0)
 ; - ^TMP("LRPX",$J, is used for processing any edits of Micro or AP data: 
"RTN","LRPXRM",7,0)
 ; - All results "AR" are copied when the patient's sample is edited.
"RTN","LRPXRM",8,0)
 ; - Indexes of the patient's "PDI" are copied before "B" edits.
"RTN","LRPXRM",9,0)
 ; - Indexes created from the "AR" data provide an index after "A" edits.
"RTN","LRPXRM",10,0)
 ; - "A" and "B" are compared to determine what has been added "ADD"
"RTN","LRPXRM",11,0)
 ;   and what has been deleted "DEL".
"RTN","LRPXRM",12,0)
 ; - The ^PXRMINDX(63 indexes are added or deleted using "ADD" and "DEL".
"RTN","LRPXRM",13,0)
 N DATE,DFN K ^TMP("LRPX",$J)
"RTN","LRPXRM",14,0)
 S LRIDT=+$G(LRIDT)
"RTN","LRPXRM",15,0)
 S DFN=$$DFN^LRPXAPIU(+$G(LRDFN)) I 'DFN Q
"RTN","LRPXRM",16,0)
 I SUB="AU" D  Q
"RTN","LRPXRM",17,0)
 . S DATE=$$DOD^LRPXAPIU(DFN) I 'DATE Q
"RTN","LRPXRM",18,0)
 . I '+$G(^LR(LRDFN,"AU")) Q
"RTN","LRPXRM",19,0)
 . I '($P(^LR(LRDFN,"AU"),U,3)&($P(^("AU"),U,15))) Q
"RTN","LRPXRM",20,0)
 . M ^TMP("LRPX",$J,"B")=^PXRMINDX(63,"PDI",DFN,DATE)
"RTN","LRPXRM",21,0)
 . M ^TMP("LRPX",$J,"AR","AY")=^LR(LRDFN,"AY")
"RTN","LRPXRM",22,0)
 . M ^TMP("LRPX",$J,"AR",80)=^LR(LRDFN,80)
"RTN","LRPXRM",23,0)
 . M ^TMP("LRPX",$J,"AR",33)=^LR(LRDFN,33)
"RTN","LRPXRM",24,0)
 . D AP(DFN,LRDFN,DATE,LRIDT,SUB)
"RTN","LRPXRM",25,0)
 . K ^TMP("LRPX",$J)
"RTN","LRPXRM",26,0)
 S DATE=$$LRIDT^LRPXAPIU(LRIDT)
"RTN","LRPXRM",27,0)
 M ^TMP("LRPX",$J,"B")=^PXRMINDX(63,"PDI",DFN,DATE)
"RTN","LRPXRM",28,0)
 I SUB="MI" D
"RTN","LRPXRM",29,0)
 . M ^TMP("LRPX",$J,"AR")=^LR(LRDFN,SUB,LRIDT)
"RTN","LRPXRM",30,0)
 . D MICRO(DFN,LRDFN,DATE,LRIDT)
"RTN","LRPXRM",31,0)
 E  D
"RTN","LRPXRM",32,0)
 . M ^TMP("LRPX",$J,"AR",0)=^LR(LRDFN,SUB,LRIDT,0)
"RTN","LRPXRM",33,0)
 . M ^TMP("LRPX",$J,"AR",.1)=^LR(LRDFN,SUB,LRIDT,.1)
"RTN","LRPXRM",34,0)
 . M ^TMP("LRPX",$J,"AR",2)=^LR(LRDFN,SUB,LRIDT,2)
"RTN","LRPXRM",35,0)
 . M ^TMP("LRPX",$J,"AR",3)=^LR(LRDFN,SUB,LRIDT,3)
"RTN","LRPXRM",36,0)
 . D AP(DFN,LRDFN,DATE,LRIDT,SUB)
"RTN","LRPXRM",37,0)
 K ^TMP("LRPX",$J)
"RTN","LRPXRM",38,0)
 Q
"RTN","LRPXRM",39,0)
 ;
"RTN","LRPXRM",40,0)
MICRO(DFN,LRDFN,DATE,LRIDT) ;
"RTN","LRPXRM",41,0)
 N AB,ABDN,ACC,ITEM,NODE,ORG,ORGNUM,SPEC,SUB,TB,TBDN,TEST,TESTS K TESTS
"RTN","LRPXRM",42,0)
 S ITEM=0
"RTN","LRPXRM",43,0)
 F  S ITEM=$O(^TMP("LRPX",$J,"B",ITEM)) Q:ITEM=""  D
"RTN","LRPXRM",44,0)
 . I $E(ITEM)'="M" K ^TMP("LRPX",$J,"B",ITEM)
"RTN","LRPXRM",45,0)
 I '+$G(^TMP("LRPX",$J,"AR",0)) Q
"RTN","LRPXRM",46,0)
 I '$$MIVER(LRDFN,LRIDT) Q
"RTN","LRPXRM",47,0)
 S SPEC=+$P(^TMP("LRPX",$J,"AR",0),U,5)
"RTN","LRPXRM",48,0)
 I 'SPEC Q
"RTN","LRPXRM",49,0)
 S ITEM="M;S;"_SPEC
"RTN","LRPXRM",50,0)
 S NODE=LRDFN_";MI;"_LRIDT_";0"
"RTN","LRPXRM",51,0)
 D TMPSET(ITEM,NODE)
"RTN","LRPXRM",52,0)
 S ACC=$P(^TMP("LRPX",$J,"AR",0),U,6)
"RTN","LRPXRM",53,0)
 I $L(ACC) D
"RTN","LRPXRM",54,0)
 . D ACCY^LRPXAPI(.TESTS,ACC,DATE)
"RTN","LRPXRM",55,0)
 . I $O(TESTS(0)) D
"RTN","LRPXRM",56,0)
 .. S TEST=0
"RTN","LRPXRM",57,0)
 .. F  S TEST=+$O(TESTS(TEST)) Q:TEST<1  D
"RTN","LRPXRM",58,0)
 ... S ITEM="M;T;"_TEST
"RTN","LRPXRM",59,0)
 ... D TMPSET(ITEM,NODE)
"RTN","LRPXRM",60,0)
 I $G(^TMP("LRPX",$J,"AR",1)) D
"RTN","LRPXRM",61,0)
 . S ORGNUM=0
"RTN","LRPXRM",62,0)
 . F  S ORGNUM=$O(^TMP("LRPX",$J,"AR",3,ORGNUM)) Q:ORGNUM<1  D
"RTN","LRPXRM",63,0)
 .. S ORG=+$G(^TMP("LRPX",$J,"AR",3,ORGNUM,0))
"RTN","LRPXRM",64,0)
 .. I 'ORG Q
"RTN","LRPXRM",65,0)
 .. S ITEM="M;O;"_ORG
"RTN","LRPXRM",66,0)
 .. S NODE=LRDFN_";MI;"_LRIDT_";3;"_ORGNUM_";0"
"RTN","LRPXRM",67,0)
 .. D TMPSET(ITEM,NODE)
"RTN","LRPXRM",68,0)
 .. S ABDN=1
"RTN","LRPXRM",69,0)
 .. F  S ABDN=$O(^TMP("LRPX",$J,"AR",3,ORGNUM,ABDN)) Q:ABDN<1  D
"RTN","LRPXRM",70,0)
 ... S AB=$$AB^LRPXAPIU(ABDN)
"RTN","LRPXRM",71,0)
 ... I 'AB Q
"RTN","LRPXRM",72,0)
 ... S ITEM="M;A;"_AB
"RTN","LRPXRM",73,0)
 ... S NODE=LRDFN_";MI;"_LRIDT_";3;"_ORGNUM_";"_ABDN
"RTN","LRPXRM",74,0)
 ... D TMPSET(ITEM,NODE)
"RTN","LRPXRM",75,0)
 F SUB=6,9,12,17 D
"RTN","LRPXRM",76,0)
 . I '$G(^TMP("LRPX",$J,"AR",(SUB-1))) Q
"RTN","LRPXRM",77,0)
 . S ORGNUM=0
"RTN","LRPXRM",78,0)
 . F  S ORGNUM=$O(^TMP("LRPX",$J,"AR",SUB,ORGNUM)) Q:ORGNUM<1  D
"RTN","LRPXRM",79,0)
 .. S ORG=+$G(^TMP("LRPX",$J,"AR",SUB,ORGNUM,0))
"RTN","LRPXRM",80,0)
 .. I 'ORG Q
"RTN","LRPXRM",81,0)
 .. S ITEM="M;O;"_ORG
"RTN","LRPXRM",82,0)
 .. S NODE=LRDFN_";MI;"_LRIDT_";"_SUB_";"_ORGNUM_";0"
"RTN","LRPXRM",83,0)
 .. D TMPSET(ITEM,NODE)
"RTN","LRPXRM",84,0)
 .. I SUB'=12 Q
"RTN","LRPXRM",85,0)
 .. S TBDN=2
"RTN","LRPXRM",86,0)
 .. F  S TBDN=$O(^TMP("LRPX",$J,"AR",12,ORGNUM,TBDN)) Q:TBDN<2  D
"RTN","LRPXRM",87,0)
 ... S TB=$$TB^LRPXAPIU(TBDN)
"RTN","LRPXRM",88,0)
 ... I '$L(TB) Q
"RTN","LRPXRM",89,0)
 ... S ITEM="M;M;"_TB
"RTN","LRPXRM",90,0)
 ... S NODE=LRDFN_";MI;"_LRIDT_";12;"_ORGNUM_";"_TBDN
"RTN","LRPXRM",91,0)
 ... D TMPSET(ITEM,NODE)
"RTN","LRPXRM",92,0)
 D CKDEL
"RTN","LRPXRM",93,0)
 D CKADD
"RTN","LRPXRM",94,0)
 D DEL(DFN,DATE)
"RTN","LRPXRM",95,0)
 D ADD(DFN,DATE)
"RTN","LRPXRM",96,0)
 Q
"RTN","LRPXRM",97,0)
 ;
"RTN","LRPXRM",98,0)
MIVER(LRDFN,LRIDT) ; $$(lrdfn,lridt) -> 1 if any portion of micro is verified
"RTN","LRPXRM",99,0)
 N OK,SUB
"RTN","LRPXRM",100,0)
 S OK=0
"RTN","LRPXRM",101,0)
 F SUB=1,5,8,11,16 D  Q:OK
"RTN","LRPXRM",102,0)
 . I $G(^LR(LRDFN,"MI",LRIDT,SUB)) S OK=1
"RTN","LRPXRM",103,0)
 Q OK
"RTN","LRPXRM",104,0)
 ;
"RTN","LRPXRM",105,0)
AP(DFN,LRDFN,DATE,LRIDT,SUB) ;
"RTN","LRPXRM",106,0)
 N ITEM
"RTN","LRPXRM",107,0)
 I '$$APVERIFY^LRPXAPI(LRDFN,LRIDT,SUB) Q
"RTN","LRPXRM",108,0)
 S ITEM=0
"RTN","LRPXRM",109,0)
 F  S ITEM=$O(^TMP("LRPX",$J,"B",ITEM)) Q:ITEM=""  D
"RTN","LRPXRM",110,0)
 . I $E(ITEM)'="A" K ^TMP("LRPX",$J,"B",ITEM)
"RTN","LRPXRM",111,0)
 I SUB="AU" D AUTOPSY(LRDFN)
"RTN","LRPXRM",112,0)
 E  D CYEMSP(LRDFN,LRIDT,DATE,SUB) ; cyto, electron micro, surg path
"RTN","LRPXRM",113,0)
 D CKDEL
"RTN","LRPXRM",114,0)
 D CKADD
"RTN","LRPXRM",115,0)
 D DEL(DFN,DATE)
"RTN","LRPXRM",116,0)
 D ADD(DFN,DATE)
"RTN","LRPXRM",117,0)
 Q
"RTN","LRPXRM",118,0)
 ;
"RTN","LRPXRM",119,0)
AUTOPSY(LRDFN) ;
"RTN","LRPXRM",120,0)
 N ETIOL,I,II,III,ICD,ICDX,ITEM,NODE,ORGAN,SNOMED,SPEC,SUB,SUBS
"RTN","LRPXRM",121,0)
 S SPEC=0
"RTN","LRPXRM",122,0)
 F  S SPEC=$O(^TMP("LRPX",$J,"AR",33,SPEC)) Q:SPEC<1  D
"RTN","LRPXRM",123,0)
 . I '$L($P($G(^TMP("LRPX",$J,"AR",33,SPEC,0)),U)) Q
"RTN","LRPXRM",124,0)
 . S ITEM="A;S;1."_$P(^TMP("LRPX",$J,"AR",33,SPEC,0),U)
"RTN","LRPXRM",125,0)
 . S NODE=LRDFN_";33;"_SPEC_";0"
"RTN","LRPXRM",126,0)
 . D TMPSET(ITEM,NODE)
"RTN","LRPXRM",127,0)
 S ICD=0
"RTN","LRPXRM",128,0)
 F  S ICD=$O(^TMP("LRPX",$J,"AR",80,ICD)) Q:ICD<1  D
"RTN","LRPXRM",129,0)
 . S ICDX=+$G(^TMP("LRPX",$J,"AR",80,ICD,0))
"RTN","LRPXRM",130,0)
 . I 'ICDX Q
"RTN","LRPXRM",131,0)
 . S ITEM="A;I;"_ICDX
"RTN","LRPXRM",132,0)
 . S NODE=LRDFN_";80;"_ICD_";0"
"RTN","LRPXRM",133,0)
 . D TMPSET(ITEM,NODE)
"RTN","LRPXRM",134,0)
 S I=0
"RTN","LRPXRM",135,0)
 F  S I=$O(^TMP("LRPX",$J,"AR","AY",I)) Q:I<1  D
"RTN","LRPXRM",136,0)
 . S ORGAN=+$G(^TMP("LRPX",$J,"AR","AY",I,0))
"RTN","LRPXRM",137,0)
 . I 'ORGAN Q
"RTN","LRPXRM",138,0)
 . S ITEM="A;O;"_ORGAN
"RTN","LRPXRM",139,0)
 . S NODE=LRDFN_";AY;"_I_";0"
"RTN","LRPXRM",140,0)
 . D TMPSET(ITEM,NODE)
"RTN","LRPXRM",141,0)
 . F SUBS="1D","2M","3F","4P" D
"RTN","LRPXRM",142,0)
 .. S SUB=+SUBS
"RTN","LRPXRM",143,0)
 .. S II=0
"RTN","LRPXRM",144,0)
 .. F  S II=$O(^TMP("LRPX",$J,"AR","AY",I,SUB,II)) Q:II<1  D
"RTN","LRPXRM",145,0)
 ... S SNOMED=+$G(^TMP("LRPX",$J,"AR","AY",I,SUB,II,0))
"RTN","LRPXRM",146,0)
 ... I 'SNOMED Q
"RTN","LRPXRM",147,0)
 ... S ITEM="A;"_$E(SUBS,2)_";"_SNOMED
"RTN","LRPXRM",148,0)
 ... S NODE=LRDFN_";AY;"_I_";"_SUB_";"_II_";0"
"RTN","LRPXRM",149,0)
 ... D TMPSET(ITEM,NODE)
"RTN","LRPXRM",150,0)
 ... I SUB'=2 Q
"RTN","LRPXRM",151,0)
 ... S III=0
"RTN","LRPXRM",152,0)
 ... F  S III=$O(^TMP("LRPX",$J,"AR","AY",I,SUB,II,1,III)) Q:III<1  D
"RTN","LRPXRM",153,0)
 .... S ETIOL=+$G(^TMP("LRPX",$J,"AR","AY",I,SUB,II,1,III,0))
"RTN","LRPXRM",154,0)
 .... I 'ETIOL Q
"RTN","LRPXRM",155,0)
 .... S ITEM="A;E;"_ETIOL
"RTN","LRPXRM",156,0)
 .... S NODE=LRDFN_";AY;"_I_";"_SUB_";"_II_";1;"_III_";0"
"RTN","LRPXRM",157,0)
 .... D TMPSET(ITEM,NODE)
"RTN","LRPXRM",158,0)
 Q
"RTN","LRPXRM",159,0)
 ;
"RTN","LRPXRM",160,0)
CYEMSP(LRDFN,LRIDT,DATE,SUB) ;
"RTN","LRPXRM",161,0)
 N ACC,I,ICD,ICDX,ITEM,NODE,ORGAN,PREP,SPEC,TEST,TESTS K TESTS
"RTN","LRPXRM",162,0)
 I '($P($G(^TMP("LRPX",$J,"AR",0)),U,3)&($P($G(^(0)),U,11))) Q
"RTN","LRPXRM",163,0)
 S SPEC=0
"RTN","LRPXRM",164,0)
 F  S SPEC=$O(^TMP("LRPX",$J,"AR",.1,SPEC)) Q:SPEC<1  D
"RTN","LRPXRM",165,0)
 . I '$L($P($G(^TMP("LRPX",$J,"AR",.1,SPEC,0)),U)) Q
"RTN","LRPXRM",166,0)
 . S ITEM="A;S;1."_$$UP^XLFSTR($P(^TMP("LRPX",$J,"AR",.1,SPEC,0),U))
"RTN","LRPXRM",167,0)
 . S NODE=LRDFN_";"_SUB_";"_LRIDT_";.1;"_SPEC_";0"
"RTN","LRPXRM",168,0)
 . D TMPSET(ITEM,NODE)
"RTN","LRPXRM",169,0)
 . S PREP=0
"RTN","LRPXRM",170,0)
 . F  S PREP=$O(^TMP("LRPX",$J,"AR",.1,SPEC,1,PREP)) Q:PREP<1  D
"RTN","LRPXRM",171,0)
 .. S TEST=0
"RTN","LRPXRM",172,0)
 .. F  S TEST=$O(^TMP("LRPX",$J,"AR",.1,SPEC,1,PREP,1,TEST)) Q:TEST<1  D
"RTN","LRPXRM",173,0)
 ... S TEST=+$G(^TMP("LRPX",$J,"AR",.1,SPEC,1,PREP,1,TEST,0))
"RTN","LRPXRM",174,0)
 ... I 'TEST Q
"RTN","LRPXRM",175,0)
 ... S ITEM="A;T;"_TEST
"RTN","LRPXRM",176,0)
 ... S NODE=LRDFN_";"_SUB_";"_LRIDT_";.1;"_SPEC_";1;"_PREP_";1;"_TEST_";0"
"RTN","LRPXRM",177,0)
 ... D TMPSET(ITEM,NODE)
"RTN","LRPXRM",178,0)
 ; S ACC=$P(^TMP("LRPX",$J,"AR",0),U,6) ; do not use tests on acc
"RTN","LRPXRM",179,0)
 ; I $L(ACC) D
"RTN","LRPXRM",180,0)
 ; . S NODE=LRDFN_";"_SUB_";"_LRIDT_";0"
"RTN","LRPXRM",181,0)
 ; . D ACCY^LRPXAPI(.TESTS,ACC,DATE)
"RTN","LRPXRM",182,0)
 ; . I $O(TESTS(0)) D
"RTN","LRPXRM",183,0)
 ; .. S TEST=0
"RTN","LRPXRM",184,0)
 ; .. F  S TEST=$O(TESTS(TEST)) Q:TEST<1  D
"RTN","LRPXRM",185,0)
 ; ... S ITEM="A;T;"_TEST
"RTN","LRPXRM",186,0)
 ; ... D TMPSET(ITEM,NODE)
"RTN","LRPXRM",187,0)
 S ICD=0
"RTN","LRPXRM",188,0)
 F  S ICD=$O(^TMP("LRPX",$J,"AR",3,ICD)) Q:ICD<1  D
"RTN","LRPXRM",189,0)
 . S ICDX=+$G(^TMP("LRPX",$J,"AR",3,ICD,0))
"RTN","LRPXRM",190,0)
 . I 'ICDX Q
"RTN","LRPXRM",191,0)
 . S ITEM="A;I;"_ICDX
"RTN","LRPXRM",192,0)
 . S NODE=LRDFN_";"_SUB_";"_LRIDT_";3;"_ICD_";0"
"RTN","LRPXRM",193,0)
 . D TMPSET(ITEM,NODE)
"RTN","LRPXRM",194,0)
 S I=0
"RTN","LRPXRM",195,0)
 F  S I=$O(^TMP("LRPX",$J,"AR",2,I)) Q:I<1  D
"RTN","LRPXRM",196,0)
 . S ORGAN=+$G(^TMP("LRPX",$J,"AR",2,I,0))
"RTN","LRPXRM",197,0)
 . I 'ORGAN Q
"RTN","LRPXRM",198,0)
 . S ITEM="A;O;"_ORGAN
"RTN","LRPXRM",199,0)
 . S NODE=LRDFN_";"_SUB_";"_LRIDT_";2;"_I_";0"
"RTN","LRPXRM",200,0)
 . D TMPSET(ITEM,NODE)
"RTN","LRPXRM",201,0)
 . D SNOMED(LRDFN,LRIDT,SUB,I)
"RTN","LRPXRM",202,0)
 Q
"RTN","LRPXRM",203,0)
 ;
"RTN","LRPXRM",204,0)
SNOMED(LRDFN,LRIDT,APSUB,I) ;
"RTN","LRPXRM",205,0)
 N ETIOL,II,III,ITEM,NODE,SNOMED,SUB,SUBS
"RTN","LRPXRM",206,0)
 F SUBS="1D","2M","3F","4P" D
"RTN","LRPXRM",207,0)
 . S SUB=+SUBS
"RTN","LRPXRM",208,0)
 . S II=0
"RTN","LRPXRM",209,0)
 . F  S II=$O(^TMP("LRPX",$J,"AR",2,I,SUB,II)) Q:II<1  D
"RTN","LRPXRM",210,0)
 .. S SNOMED=+$G(^TMP("LRPX",$J,"AR",2,I,SUB,II,0))
"RTN","LRPXRM",211,0)
 .. I 'SNOMED Q
"RTN","LRPXRM",212,0)
 .. S ITEM="A;"_$E(SUBS,2)_";"_SNOMED
"RTN","LRPXRM",213,0)
 .. S NODE=LRDFN_";"_APSUB_";"_LRIDT_";2;"_I_";"_SUB_";"_II_";0"
"RTN","LRPXRM",214,0)
 .. D TMPSET(ITEM,NODE)
"RTN","LRPXRM",215,0)
 .. I SUB'=2 Q
"RTN","LRPXRM",216,0)
 .. S III=0
"RTN","LRPXRM",217,0)
 .. F  S III=$O(^TMP("LRPX",$J,"AR",2,I,SUB,II,1,III)) Q:III<1  D
"RTN","LRPXRM",218,0)
 ... S ETIOL=+$G(^TMP("LRPX",$J,"AR",2,I,SUB,II,1,III,0))
"RTN","LRPXRM",219,0)
 ... I 'ETIOL Q
"RTN","LRPXRM",220,0)
 ... S ITEM="A;E;"_ETIOL
"RTN","LRPXRM",221,0)
 ... S NODE=LRDFN_";"_APSUB_";"_LRIDT_";2;"_I_";"_SUB_";"_II_";1;"_III_";0"
"RTN","LRPXRM",222,0)
 ... D TMPSET(ITEM,NODE)
"RTN","LRPXRM",223,0)
 Q
"RTN","LRPXRM",224,0)
 ;
"RTN","LRPXRM",225,0)
TMPSET(ITEM,NODE) ;
"RTN","LRPXRM",226,0)
 S ^TMP("LRPX",$J,"A",ITEM,NODE)=""
"RTN","LRPXRM",227,0)
 Q
"RTN","LRPXRM",228,0)
 ;
"RTN","LRPXRM",229,0)
CKDEL ;
"RTN","LRPXRM",230,0)
 N ITEM,NODE
"RTN","LRPXRM",231,0)
 S ITEM=""
"RTN","LRPXRM",232,0)
 F  S ITEM=$O(^TMP("LRPX",$J,"B",ITEM)) Q:ITEM=""  D
"RTN","LRPXRM",233,0)
 . S NODE=""
"RTN","LRPXRM",234,0)
 . F  S NODE=$O(^TMP("LRPX",$J,"B",ITEM,NODE)) Q:NODE=""  D
"RTN","LRPXRM",235,0)
 .. I $D(^TMP("LRPX",$J,"A",ITEM,NODE)) Q
"RTN","LRPXRM",236,0)
 .. S ^TMP("LRPX",$J,"DEL",ITEM,NODE)=""
"RTN","LRPXRM",237,0)
 Q
"RTN","LRPXRM",238,0)
 ;
"RTN","LRPXRM",239,0)
CKADD ;
"RTN","LRPXRM",240,0)
 N ITEM,NODE
"RTN","LRPXRM",241,0)
 S ITEM=""
"RTN","LRPXRM",242,0)
 F  S ITEM=$O(^TMP("LRPX",$J,"A",ITEM)) Q:ITEM=""  D
"RTN","LRPXRM",243,0)
 . S NODE=""
"RTN","LRPXRM",244,0)
 . F  S NODE=$O(^TMP("LRPX",$J,"A",ITEM,NODE)) Q:NODE=""  D
"RTN","LRPXRM",245,0)
 .. I $D(^TMP("LRPX",$J,"B",ITEM,NODE)) Q
"RTN","LRPXRM",246,0)
 .. S ^TMP("LRPX",$J,"ADD",ITEM,NODE)=""
"RTN","LRPXRM",247,0)
 Q
"RTN","LRPXRM",248,0)
 ;
"RTN","LRPXRM",249,0)
DEL(DFN,DATE) ;
"RTN","LRPXRM",250,0)
 N ITEM,NODE
"RTN","LRPXRM",251,0)
 S ITEM=""
"RTN","LRPXRM",252,0)
 F  S ITEM=$O(^TMP("LRPX",$J,"DEL",ITEM)) Q:ITEM=""  D
"RTN","LRPXRM",253,0)
 . S NODE=""
"RTN","LRPXRM",254,0)
 . F  S NODE=$O(^TMP("LRPX",$J,"DEL",ITEM,NODE)) Q:NODE=""  D
"RTN","LRPXRM",255,0)
 .. D KLAB^LRPX(DFN,DATE,ITEM,NODE)
"RTN","LRPXRM",256,0)
 Q
"RTN","LRPXRM",257,0)
 ;
"RTN","LRPXRM",258,0)
ADD(DFN,DATE) ;
"RTN","LRPXRM",259,0)
 N ITEM,NODE
"RTN","LRPXRM",260,0)
 S ITEM=""
"RTN","LRPXRM",261,0)
 F  S ITEM=$O(^TMP("LRPX",$J,"ADD",ITEM)) Q:ITEM=""  D
"RTN","LRPXRM",262,0)
 . S NODE=""
"RTN","LRPXRM",263,0)
 . F  S NODE=$O(^TMP("LRPX",$J,"ADD",ITEM,NODE)) Q:NODE=""  D
"RTN","LRPXRM",264,0)
 .. D SLAB^LRPX(DFN,DATE,ITEM,NODE)
"RTN","LRPXRM",265,0)
 .. ; D TIMESTMP^LRLOG(DFN,$P(NODE,";",2),DATE,DUZ) ; *** future lab patch
"RTN","LRPXRM",266,0)
 Q
"RTN","LRPXRM",267,0)
 ;
"RTN","LRPXSXRA")
0^29^B36350312
"RTN","LRPXSXRA",1,0)
LRPXSXRA ; SLC/PKR - Build indexes for Lab Anatomic Path. ;10/9/03  14:24
"RTN","LRPXSXRA",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRPXSXRA",3,0)
 Q
"RTN","LRPXSXRA",4,0)
 ;===============================================================
"RTN","LRPXSXRA",5,0)
AP ; from LRPXSXRL
"RTN","LRPXSXRA",6,0)
 ;Build the indexes for LAB DATA - ANATOMIC PATHOLOGY.
"RTN","LRPXSXRA",7,0)
 N ANUMS,DATE,DFN,END,ENTRIES,ETIOL,GLOBAL,I,II,III,ICD,ICDX,IND,ITEM
"RTN","LRPXSXRA",8,0)
 N LRDFN,ORGAN,NE,NERROR,NODE,SNOMED,SPEC,START,SUB,SUBS,TEMP,TENP,TEXT
"RTN","LRPXSXRA",9,0)
 K ANUMS
"RTN","LRPXSXRA",10,0)
 ;Dont leave any old stuff around.
"RTN","LRPXSXRA",11,0)
 S GLOBAL=$$GET1^DID(63,"","","GLOBAL NAME")_"""AP"")"
"RTN","LRPXSXRA",12,0)
 S ENTRIES=$P(^LR(0),U,4)
"RTN","LRPXSXRA",13,0)
 S TENP=ENTRIES/10
"RTN","LRPXSXRA",14,0)
 S TENP=+$P(TENP,".",1)
"RTN","LRPXSXRA",15,0)
 I TENP<1 S TENP=1
"RTN","LRPXSXRA",16,0)
 D BMES^XPDUTL("Building indexes for LAB DATA - ANATOMIC PATH")
"RTN","LRPXSXRA",17,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","LRPXSXRA",18,0)
 D MES^XPDUTL(TEXT)
"RTN","LRPXSXRA",19,0)
 S START=$H
"RTN","LRPXSXRA",20,0)
 S (IND,NE,NERROR)=0
"RTN","LRPXSXRA",21,0)
 D AANUMS^LRPXSXRB(.ANUMS)
"RTN","LRPXSXRA",22,0)
 S LRDFN=.9
"RTN","LRPXSXRA",23,0)
 F  S LRDFN=$O(^LR(LRDFN)) Q:LRDFN<1  D
"RTN","LRPXSXRA",24,0)
 . S TEMP=$G(^LR(LRDFN,0))
"RTN","LRPXSXRA",25,0)
 . I $P(TEMP,U,2)'=2 Q
"RTN","LRPXSXRA",26,0)
 . S DFN=+$P(TEMP,U,3)
"RTN","LRPXSXRA",27,0)
 . I LRDFN'=$$LRDFN^LRPXAPIU(DFN) Q
"RTN","LRPXSXRA",28,0)
 . S IND=IND+1
"RTN","LRPXSXRA",29,0)
 . I IND#TENP=0 D
"RTN","LRPXSXRA",30,0)
 .. S TEXT="Processing entry "_IND
"RTN","LRPXSXRA",31,0)
 .. D MES^XPDUTL(TEXT)
"RTN","LRPXSXRA",32,0)
 . D CYEMSP(LRDFN,DFN,.ANUMS) ; cytology, electron microscopy, sugrical path
"RTN","LRPXSXRA",33,0)
 . S DATE=$$DOD^LRPXAPIU(DFN) I 'DATE Q  ; date of death
"RTN","LRPXSXRA",34,0)
 . I '+$G(^LR(LRDFN,"AU")) Q  ; date of autopsy
"RTN","LRPXSXRA",35,0)
 . I '($P(^LR(LRDFN,"AU"),U,3)&($P(^("AU"),U,15))) Q  ; autopsy comp/released
"RTN","LRPXSXRA",36,0)
 . S SPEC=0
"RTN","LRPXSXRA",37,0)
 . F  S SPEC=$O(^LR(LRDFN,33,SPEC)) Q:SPEC<1  D
"RTN","LRPXSXRA",38,0)
 .. I '$L($P($G(^LR(LRDFN,33,SPEC,0)),U)) Q
"RTN","LRPXSXRA",39,0)
 .. S ITEM="A;S;1."_$$UP($P(^LR(LRDFN,33,SPEC,0),U))
"RTN","LRPXSXRA",40,0)
 .. S NODE=LRDFN_";33;"_SPEC_";0"
"RTN","LRPXSXRA",41,0)
 .. D APSET(DFN,ITEM,DATE,NODE)
"RTN","LRPXSXRA",42,0)
 . S ICD=0
"RTN","LRPXSXRA",43,0)
 . F  S ICD=$O(^LR(LRDFN,80,ICD)) Q:ICD<1  D
"RTN","LRPXSXRA",44,0)
 .. S ICDX=+$G(^LR(LRDFN,80,ICD,0))
"RTN","LRPXSXRA",45,0)
 .. I 'ICDX Q
"RTN","LRPXSXRA",46,0)
 .. S ITEM="A;I;"_ICDX
"RTN","LRPXSXRA",47,0)
 .. S NODE=LRDFN_";80;"_ICD_";0"
"RTN","LRPXSXRA",48,0)
 .. D APSET(DFN,ITEM,DATE,NODE)
"RTN","LRPXSXRA",49,0)
 . S I=0
"RTN","LRPXSXRA",50,0)
 . F  S I=$O(^LR(LRDFN,"AY",I)) Q:I<1  D
"RTN","LRPXSXRA",51,0)
 .. S ORGAN=+$G(^LR(LRDFN,"AY",I,0))
"RTN","LRPXSXRA",52,0)
 .. I 'ORGAN Q
"RTN","LRPXSXRA",53,0)
 .. S ITEM="A;O;"_ORGAN
"RTN","LRPXSXRA",54,0)
 .. S NODE=LRDFN_";AY;"_I_";0"
"RTN","LRPXSXRA",55,0)
 .. D APSET(DFN,ITEM,DATE,NODE)
"RTN","LRPXSXRA",56,0)
 .. F SUBS="1D","2M","3F","4P" D
"RTN","LRPXSXRA",57,0)
 ... S SUB=+SUBS
"RTN","LRPXSXRA",58,0)
 ... S II=0
"RTN","LRPXSXRA",59,0)
 ... F  S II=$O(^LR(LRDFN,"AY",I,SUB,II)) Q:II<1  D
"RTN","LRPXSXRA",60,0)
 .... S SNOMED=+$G(^LR(LRDFN,"AY",I,SUB,II,0))
"RTN","LRPXSXRA",61,0)
 .... I 'SNOMED Q
"RTN","LRPXSXRA",62,0)
 .... S ITEM="A;"_$E(SUBS,2)_";"_SNOMED
"RTN","LRPXSXRA",63,0)
 .... S NODE=LRDFN_";AY;"_I_";"_SUB_";"_II_";0"
"RTN","LRPXSXRA",64,0)
 .... D APSET(DFN,ITEM,DATE,NODE)
"RTN","LRPXSXRA",65,0)
 .... I SUB'=2 Q
"RTN","LRPXSXRA",66,0)
 .... S III=0
"RTN","LRPXSXRA",67,0)
 .... F  S III=$O(^LR(LRDFN,"AY",I,SUB,II,1,III)) Q:III<1  D
"RTN","LRPXSXRA",68,0)
 ..... S ETIOL=+$G(^LR(LRDFN,"AY",I,SUB,II,1,III,0))
"RTN","LRPXSXRA",69,0)
 ..... I 'ETIOL Q
"RTN","LRPXSXRA",70,0)
 ..... S ITEM="A;E;"_ETIOL
"RTN","LRPXSXRA",71,0)
 ..... S NODE=LRDFN_";AY;"_I_";"_SUB_";"_II_";1;"_III_";0"
"RTN","LRPXSXRA",72,0)
 ..... D APSET(DFN,ITEM,DATE,NODE)
"RTN","LRPXSXRA",73,0)
 S TEXT=NE_" LAB DATA (AP) results indexed."
"RTN","LRPXSXRA",74,0)
 D MES^XPDUTL(TEXT)
"RTN","LRPXSXRA",75,0)
 S END=$H
"RTN","LRPXSXRA",76,0)
 D DETIME^PXRMSXRM(START,END) ; dbia 4113
"RTN","LRPXSXRA",77,0)
 ;If there were errors send a message.
"RTN","LRPXSXRA",78,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL) ; dbia 4113
"RTN","LRPXSXRA",79,0)
 ;Send a MailMan message with the results.
"RTN","LRPXSXRA",80,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR) ; dbia 4113
"RTN","LRPXSXRA",81,0)
 Q
"RTN","LRPXSXRA",82,0)
 ;
"RTN","LRPXSXRA",83,0)
CYEMSP(LRDFN,DFN,ANUMS) ;
"RTN","LRPXSXRA",84,0)
 N ACC,APSUB,DATE,ERR,I,ICD,ICDX,ITEM,LRIDT,NODE,ORGAN,PREP,SPEC
"RTN","LRPXSXRA",85,0)
 N TEST,TESTS K TESTS
"RTN","LRPXSXRA",86,0)
 F APSUB="CY","EM","SP" D
"RTN","LRPXSXRA",87,0)
 . I '$D(^LR(LRDFN,APSUB,0)) Q
"RTN","LRPXSXRA",88,0)
 . S LRIDT=0
"RTN","LRPXSXRA",89,0)
 . F  S LRIDT=$O(^LR(LRDFN,APSUB,LRIDT)) Q:LRIDT<1  D
"RTN","LRPXSXRA",90,0)
 .. S DATE=+$G(^LR(LRDFN,APSUB,LRIDT,0))
"RTN","LRPXSXRA",91,0)
 .. I 'DATE Q
"RTN","LRPXSXRA",92,0)
 .. S DATE=9999999-LRIDT ; use for multiple entries on a date
"RTN","LRPXSXRA",93,0)
 .. I '($P(^LR(LRDFN,APSUB,LRIDT,0),U,3)&($P(^(0),U,11))) Q
"RTN","LRPXSXRA",94,0)
 .. S SPEC=0
"RTN","LRPXSXRA",95,0)
 .. F  S SPEC=$O(^LR(LRDFN,APSUB,LRIDT,.1,SPEC)) Q:SPEC<1  D
"RTN","LRPXSXRA",96,0)
 ... I '$L($P($G(^LR(LRDFN,APSUB,LRIDT,.1,SPEC,0)),U)) Q
"RTN","LRPXSXRA",97,0)
 ... S ITEM="A;S;1."_$$UP($P(^LR(LRDFN,APSUB,LRIDT,.1,SPEC,0),U))
"RTN","LRPXSXRA",98,0)
 ... S NODE=LRDFN_";"_APSUB_";"_LRIDT_";.1;"_SPEC_";0"
"RTN","LRPXSXRA",99,0)
 ... D APSET(DFN,ITEM,DATE,NODE)
"RTN","LRPXSXRA",100,0)
 ... S PREP=0
"RTN","LRPXSXRA",101,0)
 ... F  S PREP=$O(^LR(LRDFN,APSUB,LRIDT,.1,SPEC,1,PREP)) Q:PREP<1  D
"RTN","LRPXSXRA",102,0)
 .... S TEST=0
"RTN","LRPXSXRA",103,0)
 .... F  S TEST=$O(^LR(LRDFN,APSUB,LRIDT,.1,SPEC,1,PREP,1,TEST)) Q:TEST<1  D
"RTN","LRPXSXRA",104,0)
 ..... S TEST=+$G(^LR(LRDFN,APSUB,LRIDT,.1,SPEC,1,PREP,1,TEST,0))
"RTN","LRPXSXRA",105,0)
 ..... I 'TEST Q
"RTN","LRPXSXRA",106,0)
 ..... S ITEM="A;T;"_TEST
"RTN","LRPXSXRA",107,0)
 ..... S NODE=LRDFN_";"_APSUB_";"_LRIDT_";.1;"_SPEC_";1;"_PREP_";1;"_TEST_";0"
"RTN","LRPXSXRA",108,0)
 ..... D APSET(DFN,ITEM,DATE,NODE)
"RTN","LRPXSXRA",109,0)
 .. ; S ACC=$P(^LR(LRDFN,APSUB,LRIDT,0),U,6) ; do not use tests from acc
"RTN","LRPXSXRA",110,0)
 .. ; I $L(ACC) D
"RTN","LRPXSXRA",111,0)
 .. ; . S NODE=LRDFN_";"_APSUB_";"_LRIDT_";0"
"RTN","LRPXSXRA",112,0)
 .. ; . D ACC^LRPXSXRB(.TESTS,ACC,DATE,.ANUMS,.ERR)
"RTN","LRPXSXRA",113,0)
 .. ; . I 'ERR D
"RTN","LRPXSXRA",114,0)
 .. ; .. S TEST=0
"RTN","LRPXSXRA",115,0)
 .. ; .. F  S TEST=$O(TESTS(TEST)) Q:TEST<1  D
"RTN","LRPXSXRA",116,0)
 .. ; ... S ITEM="A;T;"_TEST
"RTN","LRPXSXRA",117,0)
 .. ; ... D APSET(DFN,ITEM,DATE,NODE)
"RTN","LRPXSXRA",118,0)
 .. S ICD=0
"RTN","LRPXSXRA",119,0)
 .. F  S ICD=$O(^LR(LRDFN,APSUB,LRIDT,3,ICD)) Q:ICD<1  D
"RTN","LRPXSXRA",120,0)
 ... S ICDX=+$G(^LR(LRDFN,APSUB,LRIDT,3,ICD,0))
"RTN","LRPXSXRA",121,0)
 ... I 'ICDX Q
"RTN","LRPXSXRA",122,0)
 ... S ITEM="A;I;"_ICDX
"RTN","LRPXSXRA",123,0)
 ... S NODE=LRDFN_";"_APSUB_";"_LRIDT_";3;"_ICD_";0"
"RTN","LRPXSXRA",124,0)
 ... D APSET(DFN,ITEM,DATE,NODE)
"RTN","LRPXSXRA",125,0)
 .. S I=0
"RTN","LRPXSXRA",126,0)
 .. F  S I=$O(^LR(LRDFN,APSUB,LRIDT,2,I)) Q:I<1  D
"RTN","LRPXSXRA",127,0)
 ... S ORGAN=+$G(^LR(LRDFN,APSUB,LRIDT,2,I,0))
"RTN","LRPXSXRA",128,0)
 ... I 'ORGAN Q
"RTN","LRPXSXRA",129,0)
 ... S ITEM="A;O;"_ORGAN
"RTN","LRPXSXRA",130,0)
 ... S NODE=LRDFN_";"_APSUB_";"_LRIDT_";2;"_I_";0"
"RTN","LRPXSXRA",131,0)
 ... D APSET(DFN,ITEM,DATE,NODE)
"RTN","LRPXSXRA",132,0)
 ... D SNOMED(LRDFN,DFN,LRIDT,DATE,APSUB,I)
"RTN","LRPXSXRA",133,0)
 Q
"RTN","LRPXSXRA",134,0)
 ;
"RTN","LRPXSXRA",135,0)
SNOMED(LRDFN,DFN,LRIDT,DATE,APSUB,I) ;
"RTN","LRPXSXRA",136,0)
 N ETIOL,II,III,ITEM,NODE,SNOMED,SUB,SUBS
"RTN","LRPXSXRA",137,0)
 F SUBS="1D","2M","3F","4P" D
"RTN","LRPXSXRA",138,0)
 . S SUB=+SUBS
"RTN","LRPXSXRA",139,0)
 . S II=0
"RTN","LRPXSXRA",140,0)
 . F  S II=$O(^LR(LRDFN,APSUB,LRIDT,2,I,SUB,II)) Q:II<1  D
"RTN","LRPXSXRA",141,0)
 .. S SNOMED=+$G(^LR(LRDFN,APSUB,LRIDT,2,I,SUB,II,0))
"RTN","LRPXSXRA",142,0)
 .. I 'SNOMED Q
"RTN","LRPXSXRA",143,0)
 .. S ITEM="A;"_$E(SUBS,2)_";"_SNOMED
"RTN","LRPXSXRA",144,0)
 .. S NODE=LRDFN_";"_APSUB_";"_LRIDT_";2;"_I_";"_SUB_";"_II_";0"
"RTN","LRPXSXRA",145,0)
 .. D APSET(DFN,ITEM,DATE,NODE)
"RTN","LRPXSXRA",146,0)
 .. I SUB'=2 Q
"RTN","LRPXSXRA",147,0)
 .. S III=0
"RTN","LRPXSXRA",148,0)
 .. F  S III=$O(^LR(LRDFN,APSUB,LRIDT,2,I,SUB,II,1,III)) Q:III<1  D
"RTN","LRPXSXRA",149,0)
 ... S ETIOL=+$G(^LR(LRDFN,APSUB,LRIDT,2,I,SUB,II,1,III,0))
"RTN","LRPXSXRA",150,0)
 ... I 'ETIOL Q
"RTN","LRPXSXRA",151,0)
 ... S ITEM="A;E;"_ETIOL
"RTN","LRPXSXRA",152,0)
 ... S NODE=LRDFN_";"_APSUB_";"_LRIDT_";2;"_I_";"_SUB_";"_II_";1;"_III_";0"
"RTN","LRPXSXRA",153,0)
 ... D APSET(DFN,ITEM,DATE,NODE)
"RTN","LRPXSXRA",154,0)
 Q
"RTN","LRPXSXRA",155,0)
 ;
"RTN","LRPXSXRA",156,0)
UP(X) Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","LRPXSXRA",157,0)
 ;
"RTN","LRPXSXRA",158,0)
APSET(DFN,ITEM,DATE,NODE) ;
"RTN","LRPXSXRA",159,0)
 I '$P(ITEM,";",3) D
"RTN","LRPXSXRA",160,0)
 . N ETEXT
"RTN","LRPXSXRA",161,0)
 . S ETEXT=NODE_" missing test"
"RTN","LRPXSXRA",162,0)
 . D ADDERROR^PXRMSXRM("LR(AP",ETEXT,.NERROR) ; dbia 4113
"RTN","LRPXSXRA",163,0)
 E  D
"RTN","LRPXSXRA",164,0)
 . D SLAB^LRPX(DFN,DATE,ITEM,NODE)
"RTN","LRPXSXRA",165,0)
 . S NE=NE+1
"RTN","LRPXSXRA",166,0)
 Q
"RTN","LRPXSXRA",167,0)
 ;
"RTN","LRPXSXRB")
0^30^B23737905
"RTN","LRPXSXRB",1,0)
LRPXSXRB ; SLC/PKR - Build indexes for Lab Microbiology. ;1/29/04  14:36
"RTN","LRPXSXRB",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRPXSXRB",3,0)
 Q
"RTN","LRPXSXRB",4,0)
 ;===============================================================
"RTN","LRPXSXRB",5,0)
MICRO ; from LRPXSXRL
"RTN","LRPXSXRB",6,0)
 ;Build the indexes for LAB DATA - MICROBIOLOGY.
"RTN","LRPXSXRB",7,0)
 N AB,ABDN,ACC,ANUMS,DATE,DNUM,DFN,END,ENTRIES,ERR,GLOBAL,IND,ITEM
"RTN","LRPXSXRB",8,0)
 N LRDFN,LRIDT,NE,NERROR,NODE,NUM,ORG,ORGNUM,SPEC,START,SUB
"RTN","LRPXSXRB",9,0)
 N TB,TBDN,TEMP,TENP,TEST,TESTS,TEXT
"RTN","LRPXSXRB",10,0)
 K ANUMS,TESTS
"RTN","LRPXSXRB",11,0)
 ;Dont leave any old stuff around.
"RTN","LRPXSXRB",12,0)
 S GLOBAL=$$GET1^DID(63,"","","GLOBAL NAME")_"""MICRO"")"
"RTN","LRPXSXRB",13,0)
 S ENTRIES=$P(^LR(0),U,4)
"RTN","LRPXSXRB",14,0)
 S TENP=ENTRIES/10
"RTN","LRPXSXRB",15,0)
 S TENP=+$P(TENP,".",1)
"RTN","LRPXSXRB",16,0)
 I TENP<1 S TENP=1
"RTN","LRPXSXRB",17,0)
 D BMES^XPDUTL("Building indexes for LAB DATA - MICROBIOLOGY")
"RTN","LRPXSXRB",18,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","LRPXSXRB",19,0)
 D MES^XPDUTL(TEXT)
"RTN","LRPXSXRB",20,0)
 S START=$H
"RTN","LRPXSXRB",21,0)
 S (IND,NE,NERROR)=0
"RTN","LRPXSXRB",22,0)
 K ^TMP("LRPXSXRB",$J)
"RTN","LRPXSXRB",23,0)
 S NUM=0
"RTN","LRPXSXRB",24,0)
 F  S NUM=$O(^LAB(62.06,NUM)) Q:NUM<1  D
"RTN","LRPXSXRB",25,0)
 . S DNUM=+$P($G(^LAB(62.06,NUM,0)),U,2)
"RTN","LRPXSXRB",26,0)
 . I DNUM'["2." Q
"RTN","LRPXSXRB",27,0)
 . I '$D(^TMP("LRPXSXRB",$J,"AB",DNUM)) S ^TMP("LRPXSXRB",$J,"AB",DNUM)=NUM
"RTN","LRPXSXRB",28,0)
 S NUM=2
"RTN","LRPXSXRB",29,0)
 F  S NUM=$O(^DD(63.39,NUM)) Q:NUM<1  D  ; dbia 999
"RTN","LRPXSXRB",30,0)
 . S DNUM=+$P($G(^DD(63.39,NUM,0)),U,4) ; dbia 999
"RTN","LRPXSXRB",31,0)
 . I DNUM'["2." Q
"RTN","LRPXSXRB",32,0)
 . S ^TMP("LRPXSXRB",$J,"TB",DNUM)=NUM
"RTN","LRPXSXRB",33,0)
 D AANUMS(.ANUMS)
"RTN","LRPXSXRB",34,0)
 S LRDFN=.9
"RTN","LRPXSXRB",35,0)
 F  S LRDFN=$O(^LR(LRDFN)) Q:LRDFN<1  D
"RTN","LRPXSXRB",36,0)
 . S TEMP=$G(^LR(LRDFN,0))
"RTN","LRPXSXRB",37,0)
 . I $P(TEMP,U,2)'=2 Q
"RTN","LRPXSXRB",38,0)
 . S DFN=+$P(TEMP,U,3)
"RTN","LRPXSXRB",39,0)
 . I LRDFN'=$$LRDFN^LRPXAPIU(DFN) Q
"RTN","LRPXSXRB",40,0)
 . S IND=IND+1
"RTN","LRPXSXRB",41,0)
 . I IND#TENP=0 D
"RTN","LRPXSXRB",42,0)
 .. S TEXT="Processing entry "_IND
"RTN","LRPXSXRB",43,0)
 .. D MES^XPDUTL(TEXT)
"RTN","LRPXSXRB",44,0)
 . S LRIDT=0
"RTN","LRPXSXRB",45,0)
 . F  S LRIDT=$O(^LR(LRDFN,"MI",LRIDT)) Q:LRIDT<1  D
"RTN","LRPXSXRB",46,0)
 .. S DATE=+$G(^LR(LRDFN,"MI",LRIDT,0))
"RTN","LRPXSXRB",47,0)
 .. I 'DATE Q
"RTN","LRPXSXRB",48,0)
 .. I '$$MIVER^LRPXRM(LRDFN,LRIDT) Q
"RTN","LRPXSXRB",49,0)
 .. S SPEC=+$P(^LR(LRDFN,"MI",LRIDT,0),U,5)
"RTN","LRPXSXRB",50,0)
 .. I 'SPEC Q
"RTN","LRPXSXRB",51,0)
 .. S ITEM="M;S;"_SPEC
"RTN","LRPXSXRB",52,0)
 .. S NODE=LRDFN_";MI;"_LRIDT_";0"
"RTN","LRPXSXRB",53,0)
 .. D MISET(DFN,ITEM,DATE,NODE)
"RTN","LRPXSXRB",54,0)
 .. S ACC=$P(^LR(LRDFN,"MI",LRIDT,0),U,6)
"RTN","LRPXSXRB",55,0)
 .. I $L(ACC) D
"RTN","LRPXSXRB",56,0)
 ... D ACC(.TESTS,ACC,DATE,.ANUMS,.ERR)
"RTN","LRPXSXRB",57,0)
 ... I 'ERR D
"RTN","LRPXSXRB",58,0)
 .... S TEST=0
"RTN","LRPXSXRB",59,0)
 .... F  S TEST=$O(TESTS(TEST)) Q:TEST<1  D
"RTN","LRPXSXRB",60,0)
 ..... S ITEM="M;T;"_TEST
"RTN","LRPXSXRB",61,0)
 ..... D MISET(DFN,ITEM,DATE,NODE)
"RTN","LRPXSXRB",62,0)
 .. I $G(^LR(LRDFN,"MI",LRIDT,1)) D
"RTN","LRPXSXRB",63,0)
 ... S ORGNUM=0
"RTN","LRPXSXRB",64,0)
 ... F  S ORGNUM=$O(^LR(LRDFN,"MI",LRIDT,3,ORGNUM)) Q:ORGNUM<1  D
"RTN","LRPXSXRB",65,0)
 .... S ORG=+$G(^LR(LRDFN,"MI",LRIDT,3,ORGNUM,0))
"RTN","LRPXSXRB",66,0)
 .... I 'ORG Q
"RTN","LRPXSXRB",67,0)
 .... S ITEM="M;O;"_ORG
"RTN","LRPXSXRB",68,0)
 .... S NODE=LRDFN_";MI;"_LRIDT_";3;"_ORGNUM_";0"
"RTN","LRPXSXRB",69,0)
 .... D MISET(DFN,ITEM,DATE,NODE)
"RTN","LRPXSXRB",70,0)
 .... S ABDN=1
"RTN","LRPXSXRB",71,0)
 .... F  S ABDN=$O(^LR(LRDFN,"MI",LRIDT,3,ORGNUM,ABDN)) Q:ABDN<1  D
"RTN","LRPXSXRB",72,0)
 ..... S AB=+$G(^TMP("LRPXSXRB",$J,"AB",ABDN))
"RTN","LRPXSXRB",73,0)
 ..... I 'AB Q
"RTN","LRPXSXRB",74,0)
 ..... S ITEM="M;A;"_AB
"RTN","LRPXSXRB",75,0)
 ..... S NODE=LRDFN_";MI;"_LRIDT_";3;"_ORGNUM_";"_ABDN
"RTN","LRPXSXRB",76,0)
 ..... D MISET(DFN,ITEM,DATE,NODE)
"RTN","LRPXSXRB",77,0)
 .. F SUB=6,9,12,17 D
"RTN","LRPXSXRB",78,0)
 ... I '$G(^LR(LRDFN,"MI",LRIDT,(SUB-1))) Q
"RTN","LRPXSXRB",79,0)
 ... S ORGNUM=0
"RTN","LRPXSXRB",80,0)
 ... F  S ORGNUM=$O(^LR(LRDFN,"MI",LRIDT,SUB,ORGNUM)) Q:ORGNUM<1  D
"RTN","LRPXSXRB",81,0)
 .... S ORG=+$G(^LR(LRDFN,"MI",LRIDT,SUB,ORGNUM,0))
"RTN","LRPXSXRB",82,0)
 .... I 'ORG Q
"RTN","LRPXSXRB",83,0)
 .... S ITEM="M;O;"_ORG
"RTN","LRPXSXRB",84,0)
 .... S NODE=LRDFN_";MI;"_LRIDT_";"_SUB_";"_ORGNUM_";0"
"RTN","LRPXSXRB",85,0)
 .... D MISET(DFN,ITEM,DATE,NODE)
"RTN","LRPXSXRB",86,0)
 .... I SUB'=12 Q
"RTN","LRPXSXRB",87,0)
 .... S TBDN=2
"RTN","LRPXSXRB",88,0)
 .... F  S TBDN=$O(^LR(LRDFN,"MI",LRIDT,12,ORGNUM,TBDN)) Q:TBDN<2  D
"RTN","LRPXSXRB",89,0)
 ..... S TB=+$G(^TMP("LRPXSXRB",$J,"TB",TBDN))
"RTN","LRPXSXRB",90,0)
 ..... I '$L(TB) Q
"RTN","LRPXSXRB",91,0)
 ..... S ITEM="M;M;"_TB
"RTN","LRPXSXRB",92,0)
 ..... S NODE=LRDFN_";MI;"_LRIDT_";12;"_ORGNUM_";"_TBDN
"RTN","LRPXSXRB",93,0)
 ..... D MISET(DFN,ITEM,DATE,NODE)
"RTN","LRPXSXRB",94,0)
 K ^TMP("LRPXSXRB",$J)
"RTN","LRPXSXRB",95,0)
 S TEXT=NE_" LAB DATA (MICRO) results indexed."
"RTN","LRPXSXRB",96,0)
 D MES^XPDUTL(TEXT)
"RTN","LRPXSXRB",97,0)
 S END=$H
"RTN","LRPXSXRB",98,0)
 D DETIME^PXRMSXRM(START,END) ; dbia 4113
"RTN","LRPXSXRB",99,0)
 ;If there were errors send a message.
"RTN","LRPXSXRB",100,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL) ; dbia 4113
"RTN","LRPXSXRB",101,0)
 ;Send a MailMan message with the results.
"RTN","LRPXSXRB",102,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR) ; dbia 4113
"RTN","LRPXSXRB",103,0)
 S ^PXRMINDX(63,"GLOBAL NAME")=$P(GLOBAL,"""",1) ; dbia 4114
"RTN","LRPXSXRB",104,0)
 S ^PXRMINDX(63,"BUILT BY")=DUZ ; dbia 4114
"RTN","LRPXSXRB",105,0)
 S ^PXRMINDX(63,"DATE BUILT")=$$NOW^XLFDT ; dbia 4114
"RTN","LRPXSXRB",106,0)
 Q
"RTN","LRPXSXRB",107,0)
 ;
"RTN","LRPXSXRB",108,0)
MISET(DFN,ITEM,DATE,NODE) ;
"RTN","LRPXSXRB",109,0)
 I '$P(ITEM,";",3) D
"RTN","LRPXSXRB",110,0)
 . N ETEXT
"RTN","LRPXSXRB",111,0)
 . S ETEXT=NODE_" missing test"
"RTN","LRPXSXRB",112,0)
 . D ADDERROR^PXRMSXRM("LR(MICRO",ETEXT,.NERROR) ; dbia 4113
"RTN","LRPXSXRB",113,0)
 E  D
"RTN","LRPXSXRB",114,0)
 . D SLAB^LRPX(DFN,DATE,ITEM,NODE)
"RTN","LRPXSXRB",115,0)
 . S NE=NE+1
"RTN","LRPXSXRB",116,0)
 Q
"RTN","LRPXSXRB",117,0)
 ;
"RTN","LRPXSXRB",118,0)
AANUMS(ANUMS) ; from LRPXSXRA
"RTN","LRPXSXRB",119,0)
 N AA,ABREV K ANUMS
"RTN","LRPXSXRB",120,0)
 S AA=0
"RTN","LRPXSXRB",121,0)
 F  S AA=$O(^LRO(68,AA)) Q:AA<1  D
"RTN","LRPXSXRB",122,0)
 . S ABREV=$P($G(^LRO(68,AA,0)),U,11)
"RTN","LRPXSXRB",123,0)
 . I $L(ABREV) S ANUMS(ABREV)=AA
"RTN","LRPXSXRB",124,0)
 Q
"RTN","LRPXSXRB",125,0)
 ;
"RTN","LRPXSXRB",126,0)
ACC(TESTS,ACC,BDN,ANUMS,ERR) ; from LRPXSXRA
"RTN","LRPXSXRB",127,0)
 ; returns TESTS from micro accession, ACC, BDN required
"RTN","LRPXSXRB",128,0)
 ; BDN is beginning date number
"RTN","LRPXSXRB",129,0)
 ; ANUMS is array of accession name numbers (avoids lookup on repeated calls)
"RTN","LRPXSXRB",130,0)
 N DIC,LRAA,LRAAB,LRAD,LRAN,TEST,X,Y K DIC,TESTS
"RTN","LRPXSXRB",131,0)
 S ERR=0
"RTN","LRPXSXRB",132,0)
 I '$L($G(ACC)) S ERR=1 Q
"RTN","LRPXSXRB",133,0)
 S LRAAB=$P(ACC," ")
"RTN","LRPXSXRB",134,0)
 I LRAAB="" Q
"RTN","LRPXSXRB",135,0)
 S BDN=$E($G(BDN))
"RTN","LRPXSXRB",136,0)
 I BDN'>1 S ERR=1 Q
"RTN","LRPXSXRB",137,0)
 S LRAN=+$P(ACC," ",3)
"RTN","LRPXSXRB",138,0)
 I 'LRAN S ERR=1 Q
"RTN","LRPXSXRB",139,0)
 S LRAA=+$G(ANUMS(LRAAB))
"RTN","LRPXSXRB",140,0)
 I 'LRAA D
"RTN","LRPXSXRB",141,0)
 . S DIC=68,DIC(0)="M"
"RTN","LRPXSXRB",142,0)
 . S X=LRAAB
"RTN","LRPXSXRB",143,0)
 . D ^DIC K DIC
"RTN","LRPXSXRB",144,0)
 . S LRAA=+Y
"RTN","LRPXSXRB",145,0)
 . S ANUMS(LRAAB)=LRAA
"RTN","LRPXSXRB",146,0)
 I LRAA'>0 S ERR=1 Q
"RTN","LRPXSXRB",147,0)
 S LRAD=BDN_$P(ACC," ",2)_"0000" ; yearly acc areas are assumed
"RTN","LRPXSXRB",148,0)
 S TEST=0
"RTN","LRPXSXRB",149,0)
 F  S TEST=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,TEST)) Q:TEST<1  D
"RTN","LRPXSXRB",150,0)
 . S TESTS(TEST)=TEST
"RTN","LRPXSXRB",151,0)
 Q
"RTN","LRPXSXRB",152,0)
 ;
"RTN","LRPXSXRL")
0^31^B15543272
"RTN","LRPXSXRL",1,0)
LRPXSXRL ; SLC/PKR - Build indexes for Lab. ;9/27/03  22:37
"RTN","LRPXSXRL",2,0)
 ;;5.2;LAB SERVICE;**295**;Sep 27, 1994
"RTN","LRPXSXRL",3,0)
 Q
"RTN","LRPXSXRL",4,0)
 ;===============================================================
"RTN","LRPXSXRL",5,0)
LAB ; this entry point is called to rebuild ALL Lab indexes in ^PXRMINDX(63
"RTN","LRPXSXRL",6,0)
 ; dbia 4247
"RTN","LRPXSXRL",7,0)
 ;Build the indexes for LAB DATA.
"RTN","LRPXSXRL",8,0)
 N DAE,DAS,DAT,DATE,DFN,DNODE,END,ENTRIES,ETEXT,GLOBAL,IND
"RTN","LRPXSXRL",9,0)
 N LRDFN,LRDN,LRIDT,NE,NERROR
"RTN","LRPXSXRL",10,0)
 N START,TEMP,TENP,TEST,TEXT
"RTN","LRPXSXRL",11,0)
 K ^TMP("LRPXTEST",$J)
"RTN","LRPXSXRL",12,0)
 ;Dont leave any old stuff around.
"RTN","LRPXSXRL",13,0)
 D CLEANL
"RTN","LRPXSXRL",14,0)
 S GLOBAL=$$GET1^DID(63,"","","GLOBAL NAME")_"""CH"")"
"RTN","LRPXSXRL",15,0)
 S NERROR=0
"RTN","LRPXSXRL",16,0)
 S ENTRIES=$P(^LR(0),U,4)
"RTN","LRPXSXRL",17,0)
 S TENP=ENTRIES/10
"RTN","LRPXSXRL",18,0)
 S TENP=+$P(TENP,".",1)
"RTN","LRPXSXRL",19,0)
 I TENP<1 S TENP=1
"RTN","LRPXSXRL",20,0)
 D BMES^XPDUTL("Building indexes for LAB DATA - CH")
"RTN","LRPXSXRL",21,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","LRPXSXRL",22,0)
 D MES^XPDUTL(TEXT)
"RTN","LRPXSXRL",23,0)
 S START=$H
"RTN","LRPXSXRL",24,0)
 S (IND,NE)=0
"RTN","LRPXSXRL",25,0)
 K ^TMP("LRPXSXRL",$J)
"RTN","LRPXSXRL",26,0)
 S TEST=0
"RTN","LRPXSXRL",27,0)
 F  S TEST=$O(^LAB(60,TEST)) Q:TEST<1  D  ; preset values (lrdn)=test#
"RTN","LRPXSXRL",28,0)
 . S DNODE=$P($G(^LAB(60,TEST,0)),U,5)
"RTN","LRPXSXRL",29,0)
 . I $P(DNODE,";")'="CH" Q
"RTN","LRPXSXRL",30,0)
 . I $P(DNODE,";",3)'=1 Q
"RTN","LRPXSXRL",31,0)
 . S LRDN=+$P(DNODE,";",2)
"RTN","LRPXSXRL",32,0)
 . I 'LRDN Q
"RTN","LRPXSXRL",33,0)
 . S ^TMP("LRPXSXRL",$J,LRDN)=TEST_U_$D(^TMP("LRPXSXRL",$J,LRDN))
"RTN","LRPXSXRL",34,0)
 S LRDFN=.9
"RTN","LRPXSXRL",35,0)
 F  S LRDFN=$O(^LR(LRDFN)) Q:LRDFN<1  D
"RTN","LRPXSXRL",36,0)
 . S TEMP=$G(^LR(LRDFN,0))
"RTN","LRPXSXRL",37,0)
 . I $P(TEMP,U,2)'=2 Q
"RTN","LRPXSXRL",38,0)
 . S DFN=+$P(TEMP,U,3)
"RTN","LRPXSXRL",39,0)
 . I LRDFN'=$$LRDFN^LRPXAPIU(DFN) Q
"RTN","LRPXSXRL",40,0)
 . S IND=IND+1
"RTN","LRPXSXRL",41,0)
 . I IND#TENP=0 D
"RTN","LRPXSXRL",42,0)
 .. S TEXT="Processing entry "_IND
"RTN","LRPXSXRL",43,0)
 .. D MES^XPDUTL(TEXT)
"RTN","LRPXSXRL",44,0)
 . S LRIDT=0
"RTN","LRPXSXRL",45,0)
 . F  S LRIDT=$O(^LR(LRDFN,"CH",LRIDT)) Q:LRIDT<1  D
"RTN","LRPXSXRL",46,0)
 .. I '$P($G(^LR(LRDFN,"CH",LRIDT,0)),U,3) Q  ; check for completed
"RTN","LRPXSXRL",47,0)
 .. S DAT=LRDFN_";CH;"_LRIDT
"RTN","LRPXSXRL",48,0)
 .. S DATE=9999999-LRIDT
"RTN","LRPXSXRL",49,0)
 .. S LRDN=1
"RTN","LRPXSXRL",50,0)
 .. F  S LRDN=$O(^LR(LRDFN,"CH",LRIDT,LRDN)) Q:LRDN<1  D
"RTN","LRPXSXRL",51,0)
 ... S DAS=DAT_";"_LRDN
"RTN","LRPXSXRL",52,0)
 ... S TEMP=^LR(LRDFN,"CH",LRIDT,LRDN)
"RTN","LRPXSXRL",53,0)
 ... S TEST=+$P($P(TEMP,U,3),"!",6) ; get test, use ^LR node
"RTN","LRPXSXRL",54,0)
 ... I 'TEST D  ; if not available on ^LR node
"RTN","LRPXSXRL",55,0)
 .... I $P($G(^TMP("LRPXSXRL",$J,LRDN)),U,2) D  ; if duplicates, use file 60
"RTN","LRPXSXRL",56,0)
 ..... S TEST=+$O(^LAB(60,"C","CH;"_$G(LRDN)_";1",0))
"RTN","LRPXSXRL",57,0)
 .... E  S TEST=+$G(^TMP("LRPXSXRL",$J,LRDN)) ; otherwise, use preset value
"RTN","LRPXSXRL",58,0)
 ... I 'TEST D
"RTN","LRPXSXRL",59,0)
 .... S DAE=LRDFN_","_"""CH"""_","_LRIDT_","_LRDN
"RTN","LRPXSXRL",60,0)
 .... S ETEXT=DAE_" No lab test"
"RTN","LRPXSXRL",61,0)
 .... I $D(^TMP("LRPXTEST",$J,LRDN)) Q
"RTN","LRPXSXRL",62,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR) ; dbia 4113
"RTN","LRPXSXRL",63,0)
 .... S ^TMP("LRPXTEST",$J,LRDN)=""
"RTN","LRPXSXRL",64,0)
 ... E  D
"RTN","LRPXSXRL",65,0)
 .... D SLAB^LRPX(DFN,DATE,TEST,DAS)
"RTN","LRPXSXRL",66,0)
 .... S NE=NE+1
"RTN","LRPXSXRL",67,0)
 K ^TMP("LRPXSXRL",$J),^TMP("LRPXTEST",$J)
"RTN","LRPXSXRL",68,0)
 S TEXT=NE_" LAB DATA (CH) results indexed."
"RTN","LRPXSXRL",69,0)
 D MES^XPDUTL(TEXT)
"RTN","LRPXSXRL",70,0)
 S END=$H
"RTN","LRPXSXRL",71,0)
 D DETIME^PXRMSXRM(START,END) ; dbia 4113
"RTN","LRPXSXRL",72,0)
 ;If there were errors send a message.
"RTN","LRPXSXRL",73,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL) ; dbia 4113
"RTN","LRPXSXRL",74,0)
 ;Send a MailMan message with the results.
"RTN","LRPXSXRL",75,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR) ; dbia 4113
"RTN","LRPXSXRL",76,0)
 ;
"RTN","LRPXSXRL",77,0)
 D AP^LRPXSXRA
"RTN","LRPXSXRL",78,0)
 D MICRO^LRPXSXRB
"RTN","LRPXSXRL",79,0)
 Q
"RTN","LRPXSXRL",80,0)
 ;
"RTN","LRPXSXRL",81,0)
FRESH ; deletes all Lab, Micro, and AP ^PXRMINDX(63 indexes
"RTN","LRPXSXRL",82,0)
 K ^PXRMINDX(63) ; dbia 4114
"RTN","LRPXSXRL",83,0)
 Q
"RTN","LRPXSXRL",84,0)
 ;
"RTN","LRPXSXRL",85,0)
CLEANL ;
"RTN","LRPXSXRL",86,0)
 D BMES^XPDUTL("Cleaning up old Lab entries")
"RTN","LRPXSXRL",87,0)
 D FRESH ; remove all lab indexes
"RTN","LRPXSXRL",88,0)
 Q
"RTN","LRPXSXRL",89,0)
 ;
"RTN","LRPXSXRL",90,0)
RESETAP ; reindex AP
"RTN","LRPXSXRL",91,0)
 D BMES^XPDUTL("Reindex Anatomic Pathology Data")
"RTN","LRPXSXRL",92,0)
 D REMOVE("A")
"RTN","LRPXSXRL",93,0)
 D AP^LRPXSXRA
"RTN","LRPXSXRL",94,0)
 Q
"RTN","LRPXSXRL",95,0)
 ;
"RTN","LRPXSXRL",96,0)
RESETMI ; reindex Micro
"RTN","LRPXSXRL",97,0)
 D BMES^XPDUTL("Reindex Microbiology Data")
"RTN","LRPXSXRL",98,0)
 D REMOVE("M")
"RTN","LRPXSXRL",99,0)
 D MICRO^LRPXSXRB
"RTN","LRPXSXRL",100,0)
 Q
"RTN","LRPXSXRL",101,0)
 ;
"RTN","LRPXSXRL",102,0)
RESETAM ; reindex AP and Micro
"RTN","LRPXSXRL",103,0)
 D RESETAP
"RTN","LRPXSXRL",104,0)
 D RESETMI
"RTN","LRPXSXRL",105,0)
 Q
"RTN","LRPXSXRL",106,0)
 ;
"RTN","LRPXSXRL",107,0)
REMOVE(TYPE) ; remove these types of indexes
"RTN","LRPXSXRL",108,0)
 N DATE,DFN,ITEM,REF,STOP
"RTN","LRPXSXRL",109,0)
 S STOP=TYPE_"Z"
"RTN","LRPXSXRL",110,0)
 S ITEM=TYPE
"RTN","LRPXSXRL",111,0)
 F  S ITEM=$O(^PXRMINDX(63,"IP",ITEM)) Q:ITEM=""  Q:ITEM]STOP  D
"RTN","LRPXSXRL",112,0)
 . S DFN=0
"RTN","LRPXSXRL",113,0)
 . F  S DFN=$O(^PXRMINDX(63,"IP",ITEM,DFN)) Q:DFN<1  D
"RTN","LRPXSXRL",114,0)
 .. S DATE=0
"RTN","LRPXSXRL",115,0)
 .. F  S DATE=$O(^PXRMINDX(63,"IP",ITEM,DFN,DATE)) Q:DATE<1  D
"RTN","LRPXSXRL",116,0)
 ... S REF=""
"RTN","LRPXSXRL",117,0)
 ... F  S REF=$O(^PXRMINDX(63,"IP",ITEM,DFN,DATE,REF)) Q:REF=""  D
"RTN","LRPXSXRL",118,0)
 .... D KLAB^LRPX(DFN,DATE,ITEM,REF)
"RTN","LRPXSXRL",119,0)
 Q
"RTN","LRVER3A")
0^6^B23874235
"RTN","LRVER3A",1,0)
LRVER3A ;SLC/CJS/DALOI/FHS - DATA VERIFICATION ;5/27/03  14:49
"RTN","LRVER3A",2,0)
 ;;5.2;LAB SERVICE;**1,5,42,100,121,153,190,221,254,263,266,274,295**;Sep 27, 1994
"RTN","LRVER3A",3,0)
 ;Also contains LRORFLG to restrict multiple OERR alerts (VER+2)
"RTN","LRVER3A",4,0)
 ; Reference to ^DIC(42 supported by IA #10039
"RTN","LRVER3A",5,0)
 ; Reference to ^%ZTLOAD supported by DBIA #10063
"RTN","LRVER3A",6,0)
 ; Reference to IN5^VADPT supported by DBIA #10061
"RTN","LRVER3A",7,0)
 ; Reference to $$NOW^XLFDT supported by DBIA #10103
"RTN","LRVER3A",8,0)
 ;
"RTN","LRVER3A",9,0)
VER ;Call with L ^LR(LRDFN,LRSS,LRIDT) from LRGV2, LRGVG1, LRSTUF1, LRSTUF2, LRVR3
"RTN","LRVER3A",10,0)
 Q:'$O(LRSB(0))
"RTN","LRVER3A",11,0)
 N LRVCHK,LRORTST,LRORFLG,LRT
"RTN","LRVER3A",12,0)
 S LRORU3=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3)),(LRAOD,LRACD)=$P(^(0),U,3)
"RTN","LRVER3A",13,0)
 S LRACD=$S($D(^LRO(68,LRAA,1,LRAD,1,LRAN,9)):^(9),1:LRACD)
"RTN","LRVER3A",14,0)
 S:'$D(^LRO(68,LRAA,1,LRACD,1,LRAN,0))#2 LRACD=LRAD
"RTN","LRVER3A",15,0)
 S LRAOD=$S($D(^LRO(68,LRAA,1,LRAOD,1,LRAN,0))#2:LRAOD,1:LRAD)
"RTN","LRVER3A",16,0)
 I '$G(LRFIX) S LRNOW=$$NOW^XLFDT,$P(^LR(LRDFN,LRSS,LRIDT,0),U,3,4)=LRNOW_U_$S($G(LRDUZ):LRDUZ,1:DUZ)
"RTN","LRVER3A",17,0)
 K A2 I '$D(PNM) S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^(0),U,3) D PT^LRX S:PNM="" PNM="NONAME"
"RTN","LRVER3A",18,0)
 N LRT S LRT=0 F  S LRT=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRT)) Q:LRT<.5  S:$P(^(LRT,0),U,5)="" A2(LRT)=1 I $D(^TMP("LR",$J,"VTO",LRT)) S LRVCHK=+^(LRT) D
"RTN","LRVER3A",19,0)
 . I $S(LRVCHK<1:1,$D(LRSB(LRVCHK))#2:1,1:0) D
"RTN","LRVER3A",20,0)
 . . I $D(LRSB(LRVCHK)) Q:$P(LRSB(LRVCHK),U)=""
"RTN","LRVER3A",21,0)
 . . I LRVCHK<1,$L($P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRT,0),U,6)) Q
"RTN","LRVER3A",22,0)
 . . D
"RTN","LRVER3A",23,0)
 . . . S $P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,+LRT,0),U,4)=$S($G(LRDUZ):LRDUZ,$G(DUZ):DUZ,1:"")
"RTN","LRVER3A",24,0)
 . . . S:'$P(^(0),U,5) $P(^(0),U,5)=LRNOW
"RTN","LRVER3A",25,0)
 . . . S $P(^(0),U,6)="",$P(^(0),U,8)=$G(LRCDEF)
"RTN","LRVER3A",26,0)
 . . S LRORTST(LRT)=""
"RTN","LRVER3A",27,0)
 . . I LRACD'=LRAD D
"RTN","LRVER3A",28,0)
 . . . Q:'$D(^LRO(68,LRAA,1,LRACD,1,LRAN,4,+LRT,0))  D
"RTN","LRVER3A",29,0)
 . . . . S $P(^LRO(68,LRAA,1,LRACD,1,LRAN,4,+LRT,0),U,4)=$S($G(LRDUZ):LRDUZ,$G(DUZ):DUZ,1:"")
"RTN","LRVER3A",30,0)
 . . . . S:'$P(^(0),U,5) $P(^(0),U,5)=LRNOW
"RTN","LRVER3A",31,0)
 . . . . S $P(^(0),U,6)="",$P(^(0),U,8)=$G(LRCDEF)
"RTN","LRVER3A",32,0)
 . . I $P($G(LRPARAM),U,14),$P($G(^LRO(68,+LRAA,0)),U,16) S ^LRO(68,"AA",LRAA_"|"_LRAD_"|"_LRAN_"|"_LRT)=""
"RTN","LRVER3A",33,0)
 . . K A2(LRT)
"RTN","LRVER3A",34,0)
 . . I +$G(LRDPF)=2,$$VER^LR7OU1<3 D
"RTN","LRVER3A",35,0)
 . . . N I,Y
"RTN","LRVER3A",36,0)
 . . . S Y=LRNOW,I=LRT D V^LROR ;OE/RR 2.5
"RTN","LRVER3A",37,0)
 ;-K ZZCARE,ZRECORD I $D(^LR(LRDFN,.3)),^LR(LRDFN,.3)'="" D FCS  ; CJS/MPLS 12-4-91 LINK TO CIS  ; CJS/MPLS 3-16-92 KILL LOCAL VARIABLES
"RTN","LRVER3A",38,0)
 ;-I $P(^LR(LRDFN,0),U,2)=2 I '$D(ZZCARE) S ZRECORD=0,ZRECORD=$O(^SC("C",LRLLOC,ZRECORD)) I ZRECORD'="",$D(^LRTXFCS(5000024,1,618001,"B",ZRECORD)) D FCS  ; CJS/MPLS 3-16-92 LINE ADDED TO CHECK IF REQUESTING LOCATION IS CAREVUE SUPPORTED  ++RG
"RTN","LRVER3A",39,0)
 S D1=1,X=0 F  S X=$O(^TMP("LR",$J,"TMP",X)) Q:X<1  S LRT=+^(X) I $D(LRM(X)) D REQ
"RTN","LRVER3A",40,0)
 S:$D(^LRO(69,LRODT,1,LRSN,0)) ^(3)=$S($D(^(3)):+^(3),1:LRNOW) S:'$P(^(3),U,2) $P(^(3),U,2)=LRNOW
"RTN","LRVER3A",41,0)
 I D1,'$D(A2) S:'$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),U,4) $P(^(3),U,4)=LRNOW,^LRO(68,LRAA,1,LRAD,1,"AC",LRNOW,LRAN)=""
"RTN","LRVER3A",42,0)
 ; Class I CareVue routine TASKED if CareVue ward - pwc/10-2000
"RTN","LRVER3A",43,0)
 D
"RTN","LRVER3A",44,0)
 . N I,LR7DLOC D IN5^VADPT S LR7DLOC=$G(^DIC(42,+$P($G(VAIP(5)),"^"),44))
"RTN","LRVER3A",45,0)
 . Q:'LR7DLOC  D:$D(^LAB(62.487,"C",LR7DLOC))      ;good ward location
"RTN","LRVER3A",46,0)
 . . S ZTRTN="^LA7DLOC",ZTDESC="LAB AUTOMATION CAREVUE SUPPORTED WARDS"
"RTN","LRVER3A",47,0)
 . . S ZTIO="",ZTDTH=$H,ZTSAVE("L*")="" D ^%ZTLOAD
"RTN","LRVER3A",48,0)
 . . K ZTSAVE,ZTSK,ZTRTN,ZTIO,ZTDTH,ZTDESC,ZTREQ,ZTQUEUED
"RTN","LRVER3A",49,0)
 ;D ^VEICVLOC ;* PLS 6/3/99 -For HL7 interface
"RTN","LRVER3A",50,0)
 I D1,'$D(A2),LRAD'=LRACD S:'$P(^LRO(68,LRAA,1,LRACD,1,LRAN,3),U,4) $P(^(3),U,4)=LRNOW,^LRO(68,LRAA,1,LRACD,1,"AC",LRNOW,LRAN)=""
"RTN","LRVER3A",51,0)
 D XREF I $D(^LRO(68,LRAA,.2))'[0 X ^(.2)
"RTN","LRVER3A",52,0)
 N CORRECT S:$G(LRCORECT) CORRECT=1 D NEW^LR7OB1(LRODT,LRSN,"RE",,.LRORTST)
"RTN","LRVER3A",53,0)
 L -^LR(LRDFN,LRSS,LRIDT) ;unlock
"RTN","LRVER3A",54,0)
 Q
"RTN","LRVER3A",55,0)
XREF ;from COM1^LRVER4 and VER^LRVER3A
"RTN","LRVER3A",56,0)
 I +$G(LRDPF)=2,$$VER^LR7OU1<3 D EN^LROR(LRAA,LRAD,LRAN) ;OE/RR 2.5
"RTN","LRVER3A",57,0)
 I LRDPF=62.3 S ^LRO(68,LRAA,1,LRAD,1,"AD",DT,LRAN)="" Q
"RTN","LRVER3A",58,0)
 S LRPRAC=$$PRAC^LRX($P(^LR(LRDFN,LRSS,LRIDT,0),U,10)) ;get doc name
"RTN","LRVER3A",59,0)
 S ^LRO(68,LRAA,1,LRAD,1,"AD",DT,LRAN)=""
"RTN","LRVER3A",60,0)
 S ^LRO(69,9999999-LRIDT\1,1,"AL",$E(LRLLOC,1,15),$E(PNM,1,20),LRDFN)=""
"RTN","LRVER3A",61,0)
 S ^LRO(69,9999999-LRIDT\1,1,"AP",LRPRAC,$E(PNM,1,20),LRDFN)=""
"RTN","LRVER3A",62,0)
 S ^LRO(69,DT,1,"AN",$E(LRLLOC,1,15),LRDFN,LRIDT)=""
"RTN","LRVER3A",63,0)
 S ^LRO(69,DT,1,"AR",$E(LRLLOC,1,15),$E(PNM,1,20),LRDFN)=""
"RTN","LRVER3A",64,0)
 S ^LRO(69,"AN",$E(LRLLOC,1,20),LRDFN,LRIDT)=""
"RTN","LRVER3A",65,0)
 D CHSET^LRPX(LRDFN,LRIDT)
"RTN","LRVER3A",66,0)
 Q:'$P(LRPARAM,U,3)
"RTN","LRVER3A",67,0)
TSKM F KK="LRDFN","LRAA","LRAOD","LRAD","LRAN","LRIDT","LRSS","LRLLOC","LRSN","LRODT" S ZTSAVE(KK)=""
"RTN","LRVER3A",68,0)
 N %X S ZTRTN="DQ^LRTP",ZTIO="",ZTDTH=$H,ZTDESC="LAB INTERIM REPORTS" D ^%ZTLOAD
"RTN","LRVER3A",69,0)
 K KK,ZTSK,ZTRTN,ZTDTH,ZTSAVE,ZTIO Q
"RTN","LRVER3A",70,0)
REQ ;
"RTN","LRVER3A",71,0)
 Q:$P($G(LRSB(X)),U)="comment"
"RTN","LRVER3A",72,0)
 I $D(LRSB(X)),$P(LRSB(X),U)="canc" Q
"RTN","LRVER3A",73,0)
 I $D(LRSB(X)),$P(LRSB(X),U)'["pending" Q
"RTN","LRVER3A",74,0)
 I $L($P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,4,+LRT,0)),U,6)) Q
"RTN","LRVER3A",75,0)
 S:'$G(LRALERT) LRALERT=$S($G(LROUTINE):LROUTINE,1:9)
"RTN","LRVER3A",76,0)
 S D1=0 N A,LRPPURG
"RTN","LRVER3A",77,0)
 I $D(LRSB(X)),LRSB(X)["pending",$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,+LRT,0))#2 D  G REQ1
"RTN","LRVER3A",78,0)
 . S $P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,+LRT,0),U,4)="",$P(^(0),U,5,6)="^",$P(^(0),U,9)=+$G(LRM(X,"P"))
"RTN","LRVER3A",79,0)
 I '$D(LRSB(X)),'$L($P($G(^LR(LRDFN,"CH",LRIDT,X)),U)) S $P(^(X),U)="pending"
"RTN","LRVER3A",80,0)
 I '$D(LRSB(X)),$P($G(^LR(LRDFN,"CH",LRIDT,X)),U)'="pending" Q
"RTN","LRVER3A",81,0)
 I $D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,+LRT,0))#2 S $P(^(0),U,4,5)="^",A=$P(^(0),U,2) I A>49 S $P(^(0),U,2)=$S(A=50:9,1:A-50)
"RTN","LRVER3A",82,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,+LRT,0))#2 D
"RTN","LRVER3A",83,0)
 . S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,"B",+LRT,+LRT)=""
"RTN","LRVER3A",84,0)
 . S LRPPURG=$P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,4,+$G(LRM(X,"P")),0)),U,2)
"RTN","LRVER3A",85,0)
 . S:'LRPPURG LRPPURG=$S($G(LRALERT):+LRALERT,1:9)
"RTN","LRVER3A",86,0)
 . S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,+LRT,0)=+LRT_U_LRPPURG,$P(^(0),U,9)=+$G(LRM(X,"P"))
"RTN","LRVER3A",87,0)
 . S $P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0),U,3)=+LRT,$P(^(0),U,4)=$P(^(0),U,4)+1 Q
"RTN","LRVER3A",88,0)
REQ1 ;
"RTN","LRVER3A",89,0)
 Q:LRACD=LRAD  I $D(^LRO(68,LRAA,1,LRACD,1,LRAN,4,+LRT,0))#2,'$L($P(^(0),U,6)) S ^(0)=$P(^(0),U,1,2),$P(^(0),U,7)=1,$P(^(0),U,9)=+$G(LRM(X,"P"))
"RTN","LRVER3A",90,0)
 K CNT,LRAMC Q
"RTN","LRVER3A",91,0)
FCS ; SET UP FOR FOREIGN COMPUTER SYSTEM  ; CJS/MPLS 12-4-91 LINK TO CIS
"RTN","LRVER3A",92,0)
 ;-S:'$D(ZRECORD) ZZCARE=1 S:$D(ZRECORD) ZTSAVE("LRLLOC")=""   ; CJS/MPLS 3-18-92 SET ZZCARE IF PATIENT IN ICU'S, SET ZTSAVE IF TEST REQUESTED FROM PAR/OR
"RTN","LRVER3A",93,0)
 ;-F KK="LRDFN","LRIDT","DFN" S ZTSAVE(KK)=""
"RTN","LRVER3A",94,0)
 ;-S ZTRTN="EN^LAFCCVX2",ZTIO="",ZTDTH=$H D ^%ZTLOAD
"RTN","LRVER3A",95,0)
 ;-Q
"VER")
8.0^22.0
**INSTALL NAME**
OR*3.0*157
"BLD",3857,0)
OR*3.0*157^ORDER ENTRY/RESULTS REPORTING^0^3041026^y
"BLD",3857,1,0)
^^1^1^3040714^^
"BLD",3857,1,1,0)
Implement Clinical Reminders index.
"BLD",3857,4,0)
^9.64PA^^
"BLD",3857,"KRN",0)
^9.67PA^8989.52^19
"BLD",3857,"KRN",.4,0)
.4
"BLD",3857,"KRN",.401,0)
.401
"BLD",3857,"KRN",.402,0)
.402
"BLD",3857,"KRN",.403,0)
.403
"BLD",3857,"KRN",.5,0)
.5
"BLD",3857,"KRN",.84,0)
.84
"BLD",3857,"KRN",3.6,0)
3.6
"BLD",3857,"KRN",3.8,0)
3.8
"BLD",3857,"KRN",9.2,0)
9.2
"BLD",3857,"KRN",9.8,0)
9.8
"BLD",3857,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",3857,"KRN",9.8,"NM",1,0)
ORDD100^^0^B23257554
"BLD",3857,"KRN",9.8,"NM",2,0)
ORPXRM^^0^B12483594
"BLD",3857,"KRN",9.8,"NM",3,0)
ORDD100A^^0^B8486642
"BLD",3857,"KRN",9.8,"NM",4,0)
ORCSAVE2^^0^B45115519
"BLD",3857,"KRN",9.8,"NM","B","ORCSAVE2",4)

"BLD",3857,"KRN",9.8,"NM","B","ORDD100",1)

"BLD",3857,"KRN",9.8,"NM","B","ORDD100A",3)

"BLD",3857,"KRN",9.8,"NM","B","ORPXRM",2)

"BLD",3857,"KRN",19,0)
19
"BLD",3857,"KRN",19.1,0)
19.1
"BLD",3857,"KRN",101,0)
101
"BLD",3857,"KRN",409.61,0)
409.61
"BLD",3857,"KRN",771,0)
771
"BLD",3857,"KRN",870,0)
870
"BLD",3857,"KRN",8989.51,0)
8989.51
"BLD",3857,"KRN",8989.52,0)
8989.52
"BLD",3857,"KRN",8994,0)
8994
"BLD",3857,"KRN","B",.4,.4)

"BLD",3857,"KRN","B",.401,.401)

"BLD",3857,"KRN","B",.402,.402)

"BLD",3857,"KRN","B",.403,.403)

"BLD",3857,"KRN","B",.5,.5)

"BLD",3857,"KRN","B",.84,.84)

"BLD",3857,"KRN","B",3.6,3.6)

"BLD",3857,"KRN","B",3.8,3.8)

"BLD",3857,"KRN","B",9.2,9.2)

"BLD",3857,"KRN","B",9.8,9.8)

"BLD",3857,"KRN","B",19,19)

"BLD",3857,"KRN","B",19.1,19.1)

"BLD",3857,"KRN","B",101,101)

"BLD",3857,"KRN","B",409.61,409.61)

"BLD",3857,"KRN","B",771,771)

"BLD",3857,"KRN","B",870,870)

"BLD",3857,"KRN","B",8989.51,8989.51)

"BLD",3857,"KRN","B",8989.52,8989.52)

"BLD",3857,"KRN","B",8994,8994)

"BLD",3857,"QUES",0)
^9.62^^
"BLD",3857,"REQB",0)
^9.611^3^3
"BLD",3857,"REQB",1,0)
OR*3.0*138^2
"BLD",3857,"REQB",2,0)
PXRM*1.5*12^2
"BLD",3857,"REQB",3,0)
OR*3.0*190^2
"BLD",3857,"REQB","B","OR*3.0*138",1)

"BLD",3857,"REQB","B","OR*3.0*190",3)

"BLD",3857,"REQB","B","PXRM*1.5*12",2)

"MBREQ")
0
"PKG",110,-1)
1^1
"PKG",110,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",110,20,0)
^9.402P^^
"PKG",110,22,0)
^9.49I^1^1
"PKG",110,22,1,0)
3.0^2971217
"PKG",110,22,1,"PAH",1,0)
157^3041026
"PKG",110,22,1,"PAH",1,1,0)
^^1^1^3041026
"PKG",110,22,1,"PAH",1,1,1,0)
Implement Clinical Reminders index.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","ORCSAVE2")
0^4^B45115519
"RTN","ORCSAVE2",1,0)
ORCSAVE2 ;SLC/MKB-Utilities to update an order ;04:19 PM  06/16/2004
"RTN","ORCSAVE2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**4,27,56,70,94,116,190,157**;Dec 17, 1997
"RTN","ORCSAVE2",3,0)
STATUS(IFN,ST) ; -- Update status of order
"RTN","ORCSAVE2",4,0)
 Q:'$G(IFN)  Q:'$D(^OR(100,+IFN,0))  Q:$P($G(^(3)),U,3)=$G(ST)  ;no change
"RTN","ORCSAVE2",5,0)
 Q:'$G(ST)  Q:'$D(^ORD(100.01,+ST,0))
"RTN","ORCSAVE2",6,0)
 N NODE0,NODE3,ORNOW,DA,XACT,PROV,ORVP
"RTN","ORCSAVE2",7,0)
 S NODE3=$G(^OR(100,+IFN,3)),ORVP=$P($G(^(0)),U,2),ORNOW=$$NOW^XLFDT
"RTN","ORCSAVE2",8,0)
 S $P(NODE3,U)=ORNOW,$P(NODE3,U,3)=ST,^OR(100,+IFN,3)=NODE3
"RTN","ORCSAVE2",9,0)
 I (ST<3)!(ST=12)!(ST=13),$G(ORDCNTRL)'="ZC" D DATES(+IFN,,+$E(ORNOW,1,12))
"RTN","ORCSAVE2",10,0)
 I "^1^2^7^12^13^15^"[(U_ST_U) D CANCEL^ORCSEND(+IFN),UNOTIF^ORCSIGN
"RTN","ORCSAVE2",11,0)
 I $P(NODE3,U,9) D CKPARENT($P(NODE3,U,9)) ; ck siblings to update parent
"RTN","ORCSAVE2",12,0)
 D SETALL^ORDD100(+IFN)
"RTN","ORCSAVE2",13,0)
 Q
"RTN","ORCSAVE2",14,0)
 ;
"RTN","ORCSAVE2",15,0)
CKPARENT(ORIFN) ; -- Update status of parent order, if appropriate
"RTN","ORCSAVE2",16,0)
 N ORSTS,ALLRELSD,ALLDONE,DC,COMP,CH,CHSTS,ACTIVE,LAPS
"RTN","ORCSAVE2",17,0)
 Q:'$D(^OR(100,ORIFN,0))  S ORSTS=$P($G(^(3)),U,3)
"RTN","ORCSAVE2",18,0)
 I (ORSTS=11)!(ORSTS=10) S ALLRELSD=1 D  Q  ;Parent unrel'd - ck children
"RTN","ORCSAVE2",19,0)
 . F CH=0:0 S CH=$O(^OR(100,ORIFN,2,CH)) Q:CH'>0  D  Q:'ALLRELSD
"RTN","ORCSAVE2",20,0)
 . . I '$D(^OR(100,CH)) K ^OR(100,ORIFN,2,CH) Q
"RTN","ORCSAVE2",21,0)
 . . S CHSTS=$P($G(^OR(100,CH,3)),U,3) S:CHSTS=11 ALLRELSD=0
"RTN","ORCSAVE2",22,0)
 . I ALLRELSD D STATUS(ORIFN,5) ; update Parent order to pending
"RTN","ORCSAVE2",23,0)
 S ALLDONE=1,(DC,COMP,LAPS,ACTIVE)=0
"RTN","ORCSAVE2",24,0)
 F CH=0:0 S CH=$O(^OR(100,ORIFN,2,CH)) Q:CH'>0  D  Q:'ALLDONE
"RTN","ORCSAVE2",25,0)
 . I '$D(^OR(100,CH)) K ^OR(100,ORIFN,2,CH) Q
"RTN","ORCSAVE2",26,0)
 . S CHSTS=$P($G(^OR(100,CH,3)),U,3) I CHSTS=14 S LAPS=1 Q
"RTN","ORCSAVE2",27,0)
 . I "^1^12^13^"[(U_CHSTS_U) S DC=1 Q
"RTN","ORCSAVE2",28,0)
 . I "^2^7^"[(U_CHSTS_U) S COMP=1 Q
"RTN","ORCSAVE2",29,0)
 . S ALLDONE=0 S:CHSTS=6 ACTIVE=1
"RTN","ORCSAVE2",30,0)
 I ALLDONE S ORSTS=$S(COMP:2,DC:1,LAPS:14,1:"") D:ORSTS STATUS(ORIFN,ORSTS) Q
"RTN","ORCSAVE2",31,0)
 I ACTIVE,ORSTS'=6 D STATUS(ORIFN,6) ;at least child active
"RTN","ORCSAVE2",32,0)
 Q
"RTN","ORCSAVE2",33,0)
 ;
"RTN","ORCSAVE2",34,0)
RELEASE(ORDER,ACTION,WHEN,WHO,NATURE) ; -- Mark order as released to service
"RTN","ORCSAVE2",35,0)
 S:'$G(ACTION) ACTION=1 S:'$G(WHEN) WHEN=+$E($$NOW^XLFDT,1,12) S:'$G(WHO) WHO=DUZ
"RTN","ORCSAVE2",36,0)
 Q:'$G(ORDER)  N OR0 S OR0=$G(^OR(100,ORDER,8,ACTION,0))
"RTN","ORCSAVE2",37,0)
 S:$L($G(NATURE)) $P(OR0,U,12)=$S(NATURE:NATURE,1:+$O(^ORD(100.02,"C",NATURE,0)))
"RTN","ORCSAVE2",38,0)
 S:($P(OR0,U,15)=10)!($P(OR0,U,15)=11) $P(OR0,U,15)=""
"RTN","ORCSAVE2",39,0)
 ;S $P(OR0,U,16,17)=WHEN_U_WHO,^OR(100,"AR",ORVP,9999999-WHEN,ORDER,ACTION)=""
"RTN","ORCSAVE2",40,0)
 S $P(OR0,U,16,17)=WHEN_U_WHO
"RTN","ORCSAVE2",41,0)
 S ^OR(100,ORDER,8,ACTION,0)=OR0
"RTN","ORCSAVE2",42,0)
 I $P(OR0,U,2)="NW",'$P(^OR(100,ORDER,0),U,8) D STARTDT(ORDER)
"RTN","ORCSAVE2",43,0)
 ;Set the "AR" index.
"RTN","ORCSAVE2",44,0)
 D RS^ORDD100(ORDER,ACTION,ORVP,WHEN)
"RTN","ORCSAVE2",45,0)
 Q
"RTN","ORCSAVE2",46,0)
 ;
"RTN","ORCSAVE2",47,0)
STARTDT(DA) ; -- resolve Start and Stop dates from Responses
"RTN","ORCSAVE2",48,0)
 N X,Y,%DT,ORDG,ORT,ORLAB
"RTN","ORCSAVE2",49,0)
 S ORDG=$P($G(^ORD(100.98,+$P(^OR(100,DA,0),U,11),0)),U,3)
"RTN","ORCSAVE2",50,0)
 S ORLAB="^LAB^CH^HEMA^MI^AP^AU^EM^SP^CY^BB^"[(U_ORDG_U)
"RTN","ORCSAVE2",51,0)
 I ORDG="E/L T" S ORT=$$VALUE(DA,"TIME")
"RTN","ORCSAVE2",52,0)
STRT S X=$$VALUE(DA,"START") Q:'$L(X)  I ORDG="E/L T" S X=X_"@"_ORT
"RTN","ORCSAVE2",53,0)
 D AM:X="AM",NEXT:X="NEXT",ADMIN("NEXT"):X="NEXTA",ADMIN("CLOSEST"):X="CLOSEST"
"RTN","ORCSAVE2",54,0)
 S %DT="T" D ^%DT Q:Y'>0  S:$E($P(Y,".",2),1,2)=24 Y=$P(Y,".")_".2359"
"RTN","ORCSAVE2",55,0)
 S $P(^OR(100,DA,0),U,8)=Y D SS^ORDD100,WS^ORDD100,OI1^ORDD100A(DA)
"RTN","ORCSAVE2",56,0)
STOP I ORLAB S X=$$VALUE(DA,"DAYS") Q:X'>1  S X=$$FMADD^XLFDT(Y,(X-1))
"RTN","ORCSAVE2",57,0)
 I 'ORLAB S X=$$VALUE(DA,"STOP") Q:'$L(X)  S:ORDG="E/L T" X=X_"@"_ORT
"RTN","ORCSAVE2",58,0)
 S %DT="T" D ^%DT Q:Y'>0  S:$E($P(Y,".",2),1,2)=24 Y=$P(Y,".")_".2359"
"RTN","ORCSAVE2",59,0)
 S $P(^OR(100,DA,0),U,9)=Y D ES^ORDD100A
"RTN","ORCSAVE2",60,0)
 Q
"RTN","ORCSAVE2",61,0)
 ;
"RTN","ORCSAVE2",62,0)
NEXT ; -- Resolve next lab collection to FM date/time
"RTN","ORCSAVE2",63,0)
 N ORTIME,ORDAY,NOW,NEXT,ENT
"RTN","ORCSAVE2",64,0)
 S ENT=$S($P($G(^SC(+$G(ORL),0)),U,4):+$P(^(0),U,4),1:+$G(DUZ(2)))_";DIC(4," S:ENT'>0 ENT="ALL"
"RTN","ORCSAVE2",65,0)
 D GETLST^XPAR(.ORTIME,ENT,"LR PHLEBOTOMY COLLECTION","N")
"RTN","ORCSAVE2",66,0)
 S NOW=$P($H,",",2),ORDAY=$S($O(ORTIME(NOW)):"T",1:"T+1")
"RTN","ORCSAVE2",67,0)
 S ORDAY=$$NEXTCOLL^ORCDLR1(ORDAY) S:ORDAY["+" NOW=0
"RTN","ORCSAVE2",68,0)
 S NEXT=$O(ORTIME(NOW)),X=ORDAY_"@"_$P($G(ORTIME(+NEXT)),U)
"RTN","ORCSAVE2",69,0)
 Q
"RTN","ORCSAVE2",70,0)
 ;
"RTN","ORCSAVE2",71,0)
AM ; -- Resolve AM lab collection to FM date/time
"RTN","ORCSAVE2",72,0)
 N ORTIME,ORDAY,AM,NOW,ENT
"RTN","ORCSAVE2",73,0)
 S ENT=$S($P($G(^SC(+$G(ORL),0)),U,4):+$P(^(0),U,4),1:+$G(DUZ(2)))_";DIC(4," S:ENT'>0 ENT="ALL"
"RTN","ORCSAVE2",74,0)
 D GETLST^XPAR(.ORTIME,ENT,"LR PHLEBOTOMY COLLECTION","N")
"RTN","ORCSAVE2",75,0)
 S AM=$O(ORTIME(0)),NOW=$P($H,",",2)
"RTN","ORCSAVE2",76,0)
 S ORDAY=$S(AM=$O(ORTIME(NOW)):"T",1:"T+1")
"RTN","ORCSAVE2",77,0)
 S X=$$NEXTCOLL^ORCDLR1(ORDAY)_"@"_$P($G(ORTIME(+AM)),U)
"RTN","ORCSAVE2",78,0)
 Q
"RTN","ORCSAVE2",79,0)
 ;
"RTN","ORCSAVE2",80,0)
ADMIN(START) ; -- Resolve next/closest administration times to FM date/time
"RTN","ORCSAVE2",81,0)
 N PAT,SCH,OI,LOC,Y,I
"RTN","ORCSAVE2",82,0)
 I $G(DA) D  ;get data from order DA
"RTN","ORCSAVE2",83,0)
 . S PAT=+$P($G(^OR(100,DA,0)),U,2),LOC=""
"RTN","ORCSAVE2",84,0)
 . S I=+$O(^OR(100,DA,4.5,"ID","INSTR",0)),I=+$P($G(^OR(100,DA,4.5,I,0)),U,3) ;first
"RTN","ORCSAVE2",85,0)
 . S SCH=$$VALUE(DA,"SCHEDULE",I),OI=$$VALUE(DA,"ORDERABLE")
"RTN","ORCSAVE2",86,0)
 I '$G(DA) D  ;or look in ORDIALOG() instead
"RTN","ORCSAVE2",87,0)
 . S I=+$O(ORDIALOG($$PTR^ORCD("OR GTX INSTRUCTIONS"),0))
"RTN","ORCSAVE2",88,0)
 . S PAT=$G(ORVP),SCH=$G(ORDIALOG($$PTR^ORCD("OR GTX SCHEDULE"),I))
"RTN","ORCSAVE2",89,0)
 . S OI=$G(ORDIALOG($$PTR^ORCD("OR GTX ORDERABLE ITEM"),1)),LOC=""
"RTN","ORCSAVE2",90,0)
 S OI=+$P($G(^ORD(101.43,+OI,0)),U,2) ;PSOI
"RTN","ORCSAVE2",91,0)
 S Y=$$RESOLVE^PSJORPOE(PAT,SCH,OI,START,LOC),X=$P(Y,U,2)
"RTN","ORCSAVE2",92,0)
 Q
"RTN","ORCSAVE2",93,0)
 ;
"RTN","ORCSAVE2",94,0)
SIGN(DA,WHO,WHEN,HOW,WHAT) ; -- affix ES to order
"RTN","ORCSAVE2",95,0)
 Q:'$G(DA)  S:'$G(WHAT) WHAT=1
"RTN","ORCSAVE2",96,0)
 N X S X=$G(^OR(100,DA,8,WHAT,0)) D S2^ORDD100(DA,WHAT) ; kill AS xref
"RTN","ORCSAVE2",97,0)
 S $P(X,U,4,7)=$G(HOW)_U_$G(WHO)_U_$E($G(WHEN),1,12)_U_$S(HOW=0:DUZ,1:"")
"RTN","ORCSAVE2",98,0)
 ; S:$G(WHO) $P(X,U,3)=WHO ; reset provider to signer
"RTN","ORCSAVE2",99,0)
 S ^OR(100,DA,8,WHAT,0)=X
"RTN","ORCSAVE2",100,0)
 D:$G(HOW)=2 S1^ORDD100(DA,WHAT) ; reset AS xref
"RTN","ORCSAVE2",101,0)
 Q
"RTN","ORCSAVE2",102,0)
 ;
"RTN","ORCSAVE2",103,0)
SIGSTS(IFN,ACT) ; -- Set SigSts for backdoor orders [Called from ^ORM* rtns]
"RTN","ORCSAVE2",104,0)
 ; Expects ORNATR, ORVP, ORNP to be defined
"RTN","ORCSAVE2",105,0)
 Q:'$G(IFN)  Q:'$G(ACT)  N X,OR0 S OR0=+$P($G(^OR(100,+IFN,8,ACT,0)),U)
"RTN","ORCSAVE2",106,0)
 S X=$S($$SIGNREQD^ORCACT1(+IFN):$$SIGSTS^ORX1(ORNATR),1:3)
"RTN","ORCSAVE2",107,0)
 K ^OR(100,"AS",ORVP,9999999-OR0,+IFN,ACT)
"RTN","ORCSAVE2",108,0)
 S $P(^OR(100,+IFN,8,ACT,0),U,4)=X
"RTN","ORCSAVE2",109,0)
 I X=2 S ^OR(100,"AS",ORVP,9999999-OR0,+IFN,ACT)="" D NOTIF^ORCSIGN
"RTN","ORCSAVE2",110,0)
 Q
"RTN","ORCSAVE2",111,0)
 ;
"RTN","ORCSAVE2",112,0)
UNVEIL(IFN) ; -- unveil new order
"RTN","ORCSAVE2",113,0)
 S $P(^OR(100,IFN,3),U,8)=""
"RTN","ORCSAVE2",114,0)
 Q
"RTN","ORCSAVE2",115,0)
 ;
"RTN","ORCSAVE2",116,0)
DELETE(ORDER) ; -- delete order [action]
"RTN","ORCSAVE2",117,0)
 N DIK,DA,DAD
"RTN","ORCSAVE2",118,0)
 I $P(ORDER,";",2)>1 S DA=+$P(ORDER,";",2),DA(1)=+ORDER,DIK="^OR(100,"_DA(1)_",8," D:DA ^DIK Q
"RTN","ORCSAVE2",119,0)
 S DAD=+$P($G(^OR(100,+ORDER,3)),U,9) I DAD S DIK="^OR(100,"_DAD_",2,",DA(1)=DAD,DA=+ORDER D ^DIK ; remove link to child from parent
"RTN","ORCSAVE2",120,0)
 K DA S DA=+ORDER,DIK="^OR(100," D ^DIK ;remove order, text
"RTN","ORCSAVE2",121,0)
 Q
"RTN","ORCSAVE2",122,0)
 ;
"RTN","ORCSAVE2",123,0)
VERIFY(IFN,DA,TYPE,WHO,WHEN) ; -- order verified
"RTN","ORCSAVE2",124,0)
 Q:'$G(IFN)  Q:'$G(DA)  Q:"^N^C^R^"'[(U_$G(TYPE)_U)
"RTN","ORCSAVE2",125,0)
 N FLD S FLD=$S(TYPE="N":8,TYPE="C":10,1:18)
"RTN","ORCSAVE2",126,0)
 S:'$G(WHO) WHO=DUZ S:'$G(WHEN) WHEN=+$E($$NOW^XLFDT,1,12)
"RTN","ORCSAVE2",127,0)
 S $P(^OR(100,IFN,8,DA,0),U,FLD,FLD+1)=WHO_U_WHEN
"RTN","ORCSAVE2",128,0)
 Q
"RTN","ORCSAVE2",129,0)
 ;
"RTN","ORCSAVE2",130,0)
COMP(IFN,WHO,WHEN) ; -- order completed
"RTN","ORCSAVE2",131,0)
 Q:'$G(IFN)  S:'$G(WHO) WHO=DUZ S:'$G(WHEN) WHEN=+$E($$NOW^XLFDT,1,12)
"RTN","ORCSAVE2",132,0)
 D DATES(+IFN,,WHEN),STATUS(+IFN,2)
"RTN","ORCSAVE2",133,0)
 S $P(^OR(100,+IFN,6),U,6,7)=WHEN_U_WHO
"RTN","ORCSAVE2",134,0)
 Q
"RTN","ORCSAVE2",135,0)
 ;
"RTN","ORCSAVE2",136,0)
DATES(DA,START,STOP) ; -- Update start/stop dates for order DA
"RTN","ORCSAVE2",137,0)
 Q:'$G(DA)  I $G(START) D
"RTN","ORCSAVE2",138,0)
 . Q:START=$P(^OR(100,DA,0),U,8)
"RTN","ORCSAVE2",139,0)
 . D SK^ORDD100,WK^ORDD100,OI2^ORDD100A(DA)
"RTN","ORCSAVE2",140,0)
 . S $P(^OR(100,DA,0),U,8)=START
"RTN","ORCSAVE2",141,0)
 . D SS^ORDD100,WS^ORDD100,OI1^ORDD100A(DA)
"RTN","ORCSAVE2",142,0)
 I $G(STOP) D
"RTN","ORCSAVE2",143,0)
 . ;Q:STOP=$P(^OR(100,DA,0),U,9)  ;ck xref anyway
"RTN","ORCSAVE2",144,0)
 . D EK^ORDD100A S $P(^OR(100,DA,0),U,9)=STOP D ES^ORDD100A
"RTN","ORCSAVE2",145,0)
 Q
"RTN","ORCSAVE2",146,0)
 ;
"RTN","ORCSAVE2",147,0)
OC ; -- Save order checks in ORCHECK() in ^OR(100,+ORIFN,9)
"RTN","ORCSAVE2",148,0)
 Q:'$G(ORIFN)  Q:'$D(^OR(100,+ORIFN,0))  K ^OR(100,+ORIFN,9)
"RTN","ORCSAVE2",149,0)
 N NOW,CNT,CDL,I,OC,OVERIDE S NOW=+$E($$NOW^XLFDT,1,12),CNT=0
"RTN","ORCSAVE2",150,0)
 S CDL=0 F  S CDL=$O(ORCHECK(+ORIFN,CDL)) Q:CDL'>0  D
"RTN","ORCSAVE2",151,0)
 . S I=0 F  S I=$O(ORCHECK(+ORIFN,CDL,I)) Q:I'>0  D
"RTN","ORCSAVE2",152,0)
 . . S OC=ORCHECK(+ORIFN,CDL,I) Q:'OC
"RTN","ORCSAVE2",153,0)
 . . S OVERIDE=$S($G(MODE)="NOTIF":$G(ORCHECK("OK"))_U,CDL=1:$G(ORCHECK("OK"))_U_DUZ,1:U_DUZ)_U_NOW
"RTN","ORCSAVE2",154,0)
 . . S CNT=CNT+1,^OR(100,+ORIFN,9,"B",+OC,CNT)=""
"RTN","ORCSAVE2",155,0)
 . . S ^OR(100,+ORIFN,9,CNT,0)=$P(OC,U,1,2)_U_U_OVERIDE,^(1)=$E($P(OC,U,3),1,245)
"RTN","ORCSAVE2",156,0)
 S:CNT ^OR(100,+ORIFN,9,0)="^100.09PA^"_CNT_U_CNT
"RTN","ORCSAVE2",157,0)
 Q
"RTN","ORCSAVE2",158,0)
 ;
"RTN","ORCSAVE2",159,0)
VALUE(IFN,ID,INST) ; -- Returns value of prompt by identifier ID
"RTN","ORCSAVE2",160,0)
 I '$G(IFN)!('$D(^OR(100,+$G(IFN),0)))!($G(ID)="") Q ""
"RTN","ORCSAVE2",161,0)
 N I,Y S I=0,Y="" S:'$G(INST) INST=1
"RTN","ORCSAVE2",162,0)
 F  S I=$O(^OR(100,IFN,4.5,"ID",ID,I)) Q:I'>0  I $P($G(^OR(100,IFN,4.5,+I,0)),U,3)=INST S Y=$G(^(1)) Q
"RTN","ORCSAVE2",163,0)
 Q Y
"RTN","ORCSAVE2",164,0)
 ;
"RTN","ORCSAVE2",165,0)
SC(ORX,ORIFN) ; -- save responses to SC questions
"RTN","ORCSAVE2",166,0)
 Q:'$G(ORIFN)  Q:'$D(^OR(100,+ORIFN,0))  ;invalid order number
"RTN","ORCSAVE2",167,0)
 N OR5,I,P S OR5=$G(^OR(100,+ORIFN,5)),P=0
"RTN","ORCSAVE2",168,0)
 F I="SC","MST","AO","IR","EC","HNC","CV" S P=P+1 S:$D(ORX(I)) $P(OR5,U,P)=ORX(I)
"RTN","ORCSAVE2",169,0)
 S ^OR(100,+ORIFN,5)=OR5
"RTN","ORCSAVE2",170,0)
 Q
"RTN","ORDD100")
0^1^B23257554
"RTN","ORDD100",1,0)
ORDD100 ; slc/dcm - DD entries for file 100 ;06/18/2004  10:00
"RTN","ORDD100",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**27,157**;Dec 17, 1997
"RTN","ORDD100",3,0)
SETALL(ORIFN) ; -- set "AC" xref for all actions
"RTN","ORDD100",4,0)
 N ORYD,ORVP,ORSTOP,OR3,ORSTS,ORLOG,ORACT,ORACT0,ORCACT D ORYD
"RTN","ORDD100",5,0)
 S ORVP=$P($G(^OR(100,ORIFN,0)),U,2),ORSTOP=$P($G(^(0)),U,9) Q:'ORVP
"RTN","ORDD100",6,0)
 S OR3=$G(^OR(100,ORIFN,3)),ORSTS=$P(OR3,U,3),ORCACT=$P(OR3,U,7)
"RTN","ORDD100",7,0)
 S ORACT=0 F  S ORACT=$O(^OR(100,ORIFN,8,ORACT)) Q:ORACT'>0  D SET1
"RTN","ORDD100",8,0)
 Q
"RTN","ORDD100",9,0)
SET(ORIFN,ORACT) ; -- set "AC" xref by action
"RTN","ORDD100",10,0)
 N ORYD,ORVP,ORSTOP,OR3,ORSTS,ORLOG,ORACT0,ORCACT D ORYD
"RTN","ORDD100",11,0)
 S ORVP=$P($G(^OR(100,ORIFN,0)),U,2),ORSTOP=$P($G(^(0)),U,9) Q:'ORVP
"RTN","ORDD100",12,0)
 S OR3=$G(^OR(100,ORIFN,3)),ORSTS=$P(OR3,U,3),ORCACT=$P(OR3,U,7)
"RTN","ORDD100",13,0)
SET1 S ORACT0=$G(^OR(100,ORIFN,8,ORACT,0)),ORLOG=$P(ORACT0,U)
"RTN","ORDD100",14,0)
 K ^OR(100,"AC",ORVP,9999999-ORLOG,ORIFN,ORACT) ; reset
"RTN","ORDD100",15,0)
 I ORACT'=ORCACT D  Q  ; not Current action
"RTN","ORDD100",16,0)
 . I $P(ORACT0,U,15)=11 S ^OR(100,"AC",ORVP,9999999-ORLOG,ORIFN,ORACT)="" Q
"RTN","ORDD100",17,0)
 . I ORYD,$P(ORACT0,U,15)=13,ORLOG'<ORYD S ^OR(100,"AC",ORVP,9999999-ORLOG,ORIFN,ORACT)=""
"RTN","ORDD100",18,0)
 . I $P(ORACT0,U,15)="",ORACT=1,$P($G(^OR(100,ORIFN,8,ORCACT,0)),U,2)="RL",$S('ORYD:1,$P($G(^(0)),U,16)<ORYD:1,1:0) S $P(^OR(100,ORIFN,3),U,7)=1,^OR(100,"AC",ORVP,9999999-ORLOG,ORIFN,1)="" ;Replace RL w/NW
"RTN","ORDD100",19,0)
 I ORSTS,ORSTS'=1,ORSTS'=2,ORSTS'=7,ORSTS'=10,ORSTS'=12,ORSTS'=13,ORSTS'=14,ORSTS'=99 S ^OR(100,"AC",ORVP,9999999-ORLOG,ORIFN,ORACT)=""
"RTN","ORDD100",20,0)
 I ORYD,(ORSTS=1!(ORSTS=2)!(ORSTS=7)!(ORSTS=13)),ORSTOP'<ORYD S ^OR(100,"AC",ORVP,9999999-ORLOG,ORIFN,ORACT)=""
"RTN","ORDD100",21,0)
 Q
"RTN","ORDD100",22,0)
KILALL(ORIFN) ; -- kill "AC" xref for all actions
"RTN","ORDD100",23,0)
 N ORVP,ORACT,ORLOG
"RTN","ORDD100",24,0)
 S ORVP=$P($G(^OR(100,ORIFN,0)),U,2),ORACT=0 Q:'ORVP
"RTN","ORDD100",25,0)
 F  S ORACT=$O(^OR(100,ORIFN,8,ORACT)) Q:ORACT'>0  S ORLOG=$P(^(ORACT,0),U) K:ORLOG ^OR(100,"AC",ORVP,9999999-ORLOG,ORIFN,ORACT)
"RTN","ORDD100",26,0)
 Q
"RTN","ORDD100",27,0)
KIL(ORIFN,ORACT) ; -- kill "AC" xref
"RTN","ORDD100",28,0)
 N ORVP,ORLOG
"RTN","ORDD100",29,0)
 S ORVP=$P($G(^OR(100,ORIFN,0)),U,2),ORLOG=$P($G(^(8,ORACT,0)),U) Q:'ORVP
"RTN","ORDD100",30,0)
 K:ORLOG ^OR(100,"AC",ORVP,9999999-ORLOG,ORIFN,ORACT)
"RTN","ORDD100",31,0)
 Q
"RTN","ORDD100",32,0)
 ;
"RTN","ORDD100",33,0)
ORYD ; -- Return Current Orders context hours in ORYD
"RTN","ORDD100",34,0)
 N X,X1,X2,X3,%,%H
"RTN","ORDD100",35,0)
 S ORYD=$$GET^XPAR("SYS","ORPF ACTIVE ORDERS CONTEXT HRS",1,"I")
"RTN","ORDD100",36,0)
YD1 I ORYD S X=$H,X=+X*24+($P(X,",",2)/3600),X2=ORYD,X1=X-X2,X3=X1#24,X1=X1\24,X2=$J(X3*3600,0,0),%H=X1_","_X2 D YMD^%DTC S ORYD=+(X_%)
"RTN","ORDD100",37,0)
 Q
"RTN","ORDD100",38,0)
 ;
"RTN","ORDD100",39,0)
SS ; -- set "AD" xref
"RTN","ORDD100",40,0)
 N ORSTRT S ORSTRT=$P($G(^OR(100,DA,0)),U,8)
"RTN","ORDD100",41,0)
 I ORSTRT,ORSTRT>$$NOW^XLFDT S ^OR(100,"AD",ORSTRT,DA)=""
"RTN","ORDD100",42,0)
 Q
"RTN","ORDD100",43,0)
SK ; -- kill "AD" xref
"RTN","ORDD100",44,0)
 N ORSTRT S ORSTRT=$P($G(^OR(100,DA,0)),U,8)
"RTN","ORDD100",45,0)
 I ORSTRT K ^OR(100,"AD",ORSTRT,DA)
"RTN","ORDD100",46,0)
 Q
"RTN","ORDD100",47,0)
 ;
"RTN","ORDD100",48,0)
WS ; -- set "AW" xref
"RTN","ORDD100",49,0)
 N ORVP,ORDG,ORSTRT,X,X0
"RTN","ORDD100",50,0)
 S X0=$G(^OR(100,DA,0)),ORVP=$P(X0,U,2),ORDG=$P(X0,U,11)
"RTN","ORDD100",51,0)
 S ORSTRT=$P(X0,U,8),X=$S(ORSTRT:ORSTRT,1:9999999)
"RTN","ORDD100",52,0)
 I ORVP,ORDG S ^OR(100,"AW",ORVP,ORDG,X,DA)=""
"RTN","ORDD100",53,0)
 Q
"RTN","ORDD100",54,0)
WK ; -- kill "AW" xref
"RTN","ORDD100",55,0)
 N ORVP,ORDG,ORSTRT,X,X0
"RTN","ORDD100",56,0)
 S X0=$G(^OR(100,DA,0)),ORVP=$P(X0,U,2),ORDG=$P(X0,U,11)
"RTN","ORDD100",57,0)
 S ORSTRT=$P(X0,U,8),X=$S(ORSTRT:ORSTRT,1:9999999)
"RTN","ORDD100",58,0)
 I ORVP,ORDG K ^OR(100,"AW",ORVP,ORDG,X,DA)
"RTN","ORDD100",59,0)
 Q
"RTN","ORDD100",60,0)
 ;
"RTN","ORDD100",61,0)
S1(ORIFN,ORACT,ORVP,ORLOG) ; -- set "AS" xref
"RTN","ORDD100",62,0)
 N OR0 S OR0=$G(^OR(100,ORIFN,8,ORACT,0)) Q:$P(OR0,U,4)'=2  ;unsigned
"RTN","ORDD100",63,0)
 S:'$G(ORLOG) ORLOG=$P(OR0,U) S:'$G(ORVP) ORVP=$P(^OR(100,ORIFN,0),U,2)
"RTN","ORDD100",64,0)
 I ORVP,ORLOG S ^OR(100,"AS",ORVP,9999999-ORLOG,ORIFN,ORACT)=""
"RTN","ORDD100",65,0)
 Q
"RTN","ORDD100",66,0)
S2(ORIFN,ORACT,ORVP,ORLOG) ; -- kill "AS" xref
"RTN","ORDD100",67,0)
 N OR0 S:'$G(ORVP) ORVP=$P(^OR(100,ORIFN,0),U,2)
"RTN","ORDD100",68,0)
 S:'$G(ORLOG) ORLOG=$P($G(^OR(100,ORIFN,8,ORACT,0)),U)
"RTN","ORDD100",69,0)
 I ORLOG,ORVP K ^OR(100,"AS",ORVP,9999999-ORLOG,ORIFN,ORACT)
"RTN","ORDD100",70,0)
 Q
"RTN","ORDD100",71,0)
 ;
"RTN","ORDD100",72,0)
RS(ORIFN,ORACT,ORVP,ORRDT) ; -- set "AR" xref
"RTN","ORDD100",73,0)
 N OR80
"RTN","ORDD100",74,0)
 Q:'$G(ORIFN)  Q:'$G(ORACT)
"RTN","ORDD100",75,0)
 S:'$G(ORVP) ORVP=$P($G(^OR(100,ORIFN,0)),U,2)
"RTN","ORDD100",76,0)
 S OR80=$G(^OR(100,ORIFN,8,ORACT,0))
"RTN","ORDD100",77,0)
 S:'$G(ORRDT) ORRDT=$P(OR80,U,16)
"RTN","ORDD100",78,0)
 I ORVP,ORRDT S ^OR(100,"AR",ORVP,(9999999-ORRDT),ORIFN,ORACT)=""
"RTN","ORDD100",79,0)
 I ORVP'["DPT"!ORRDT="" Q
"RTN","ORDD100",80,0)
 I $P(OR80,U,2)'="NW" Q
"RTN","ORDD100",81,0)
 N DAES,OI,OR0,START,X
"RTN","ORDD100",82,0)
 S DAES(1)=ORIFN
"RTN","ORDD100",83,0)
 S X(1)=ORVP
"RTN","ORDD100",84,0)
 S OR0=^OR(100,ORIFN,0)
"RTN","ORDD100",85,0)
 S START=$P(OR0,U,8)
"RTN","ORDD100",86,0)
 S X(3)=$S(START="":ORRDT,1:START)
"RTN","ORDD100",87,0)
 S X(4)=$P(OR0,U,9)
"RTN","ORDD100",88,0)
 S OI=0 F  S OI=$O(^OR(100,ORIFN,.1,OI)) Q:OI'>0  D
"RTN","ORDD100",89,0)
 . S X(2)=+$G(^(OI,0)),DAES=OI
"RTN","ORDD100",90,0)
 . D SOR^ORPXRM(.X,.DAES)
"RTN","ORDD100",91,0)
 Q
"RTN","ORDD100",92,0)
 ;
"RTN","ORDD100",93,0)
RK(ORIFN,ORACT,ORVP,ORRDT) ; -- kill "AR" xref
"RTN","ORDD100",94,0)
 N OR80
"RTN","ORDD100",95,0)
 Q:'$G(ORIFN)  Q:'$G(ORACT)
"RTN","ORDD100",96,0)
 S:'$G(ORVP) ORVP=$P($G(^OR(100,ORIFN,0)),U,2)
"RTN","ORDD100",97,0)
 S OR80=$G(^OR(100,ORIFN,8,ORACT,0))
"RTN","ORDD100",98,0)
 S:'$G(ORRDT) ORRDT=$P(OR80,U,16)
"RTN","ORDD100",99,0)
 I ORVP,ORRDT K ^OR(100,"AR",ORVP,(9999999-ORRDT),ORIFN,ORACT)
"RTN","ORDD100",100,0)
 I ORVP'["DPT"!ORRDT="" Q
"RTN","ORDD100",101,0)
 I $P(OR80,U,2)'="NW" Q
"RTN","ORDD100",102,0)
 N DAES,OI,OR0,START,X
"RTN","ORDD100",103,0)
 S DAES(1)=ORIFN
"RTN","ORDD100",104,0)
 S X(1)=ORVP
"RTN","ORDD100",105,0)
 S OR0=^OR(100,ORIFN,0)
"RTN","ORDD100",106,0)
 S START=$P(OR0,U,8)
"RTN","ORDD100",107,0)
 S X(3)=$S(START="":ORRDT,1:START)
"RTN","ORDD100",108,0)
 S X(4)=$P(OR0,U,9)
"RTN","ORDD100",109,0)
 S OI=0 F  S OI=$O(^OR(100,ORIFN,.1,OI)) Q:OI'>0  D
"RTN","ORDD100",110,0)
 . S X(2)=+$G(^(OI,0)),DAES=OI
"RTN","ORDD100",111,0)
 . D KOR^ORPXRM(.X,.DAES)
"RTN","ORDD100",112,0)
 Q
"RTN","ORDD100",113,0)
 ;
"RTN","ORDD100",114,0)
VS ; -- set "AEVNT" xref
"RTN","ORDD100",115,0)
 N ORVP,OREVNT
"RTN","ORDD100",116,0)
 S ORVP=$P($G(^OR(100,DA,0)),U,2),OREVNT=$P($G(^(0)),U,17)
"RTN","ORDD100",117,0)
 I ORVP,$L(OREVNT) S ^OR(100,"AEVNT",ORVP,OREVNT,DA)=""
"RTN","ORDD100",118,0)
 Q
"RTN","ORDD100",119,0)
 ;
"RTN","ORDD100",120,0)
VK ; -- kill "AEVNT" xref
"RTN","ORDD100",121,0)
 N ORVP,OREVNT
"RTN","ORDD100",122,0)
 S ORVP=$P($G(^OR(100,DA,0)),U,2),OREVNT=$P($G(^(0)),U,17)
"RTN","ORDD100",123,0)
 I ORVP,$L(OREVNT) K ^OR(100,"AEVNT",ORVP,OREVNT,DA)
"RTN","ORDD100",124,0)
 Q
"RTN","ORDD100",125,0)
 ;
"RTN","ORDD100",126,0)
UP(X) ; -- Convert X to upper case
"RTN","ORDD100",127,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ORDD100A")
0^3^B8486642
"RTN","ORDD100A",1,0)
ORDD100A ;slc/dcm-DD entries for file 100 ;06/18/2004
"RTN","ORDD100A",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**24,138,157**;Dec 17, 1997
"RTN","ORDD100A",3,0)
ACT1(ORIFN,ORDA,ORADT,ORVP,ORDG) ; -- set "ACT" x-ref
"RTN","ORDD100A",4,0)
 Q:'$G(ORIFN)  Q:'$G(ORDA)  N OR0
"RTN","ORDD100A",5,0)
 S OR0=$G(^OR(100,ORIFN,0)) S:'$G(ORADT) ORADT=$P($G(^(8,ORDA,0)),U)
"RTN","ORDD100A",6,0)
 S:'$G(ORVP) ORVP=$P(OR0,U,2) S:'$G(ORDG) ORDG=$P(OR0,U,11)
"RTN","ORDD100A",7,0)
 I ORVP,ORADT,ORDG S ^OR(100,"ACT",ORVP,9999999-ORADT,ORDG,ORIFN,ORDA)=""
"RTN","ORDD100A",8,0)
 Q
"RTN","ORDD100A",9,0)
 ;
"RTN","ORDD100A",10,0)
ACT2(ORIFN,ORDA,ORADT,ORVP,ORDG) ; -- kill "ACT" x-ref
"RTN","ORDD100A",11,0)
 Q:'$G(ORIFN)  Q:'$G(ORDA)  N OR0
"RTN","ORDD100A",12,0)
 S OR0=$G(^OR(100,ORIFN,0)) S:'$G(ORADT) ORADT=$P($G(^(8,ORDA,0)),U)
"RTN","ORDD100A",13,0)
 S:'$G(ORVP) ORVP=$P(OR0,U,2) S:'$G(ORDG) ORDG=$P(OR0,U,11)
"RTN","ORDD100A",14,0)
 I ORVP,ORADT,ORDG K ^OR(100,"ACT",ORVP,9999999-ORADT,ORDG,ORIFN,ORDA)
"RTN","ORDD100A",15,0)
 Q
"RTN","ORDD100A",16,0)
 ;
"RTN","ORDD100A",17,0)
ES ; -- set "AE" x-ref
"RTN","ORDD100A",18,0)
 N DAES,OI,ORO,ORSTOP,X,X1
"RTN","ORDD100A",19,0)
 S ORO=$G(^OR(100,DA,0))
"RTN","ORDD100A",20,0)
 S ORSTOP=+$P(ORO,U,9) ;138
"RTN","ORDD100A",21,0)
 I ORSTOP,ORSTOP'<DT S ^OR(100,"AE",ORSTOP,DA)="" ;138
"RTN","ORDD100A",22,0)
 ;If there is no start date try to get the release date.
"RTN","ORDD100A",23,0)
 S X(3)=$P(ORO,U,8)
"RTN","ORDD100A",24,0)
 I X(3)="" S X(3)=$$RDATE^ORPXRM(DA)
"RTN","ORDD100A",25,0)
 I X(3)="" Q
"RTN","ORDD100A",26,0)
 S DAES(1)=DA,X(1)=$P(ORO,U,2),X(4)=ORSTOP
"RTN","ORDD100A",27,0)
 S X1(1)=X(1),X1(3)=X(3),X1(4)=""
"RTN","ORDD100A",28,0)
 S OI=0 F  S OI=$O(^OR(100,DA,.1,OI)) Q:OI'>0  D
"RTN","ORDD100A",29,0)
 . S (X(2),X1(2))=+$G(^(OI,0)),DAES=OI
"RTN","ORDD100A",30,0)
 .;If there is an entry without a stop date kill it before creating
"RTN","ORDD100A",31,0)
 .;the new one.
"RTN","ORDD100A",32,0)
 . D KOR^ORPXRM(.X1,.DAES)
"RTN","ORDD100A",33,0)
 . D SOR^ORPXRM(.X,.DAES)
"RTN","ORDD100A",34,0)
 Q
"RTN","ORDD100A",35,0)
EK ; -- kill "AE" x-ref
"RTN","ORDD100A",36,0)
 N DAEK,OI,ORSTOP,X
"RTN","ORDD100A",37,0)
 S ORO=$G(^OR(100,DA,0))
"RTN","ORDD100A",38,0)
 S ORSTOP=$P(ORO,U,9)
"RTN","ORDD100A",39,0)
 I ORSTOP K ^OR(100,"AE",ORSTOP,DA)
"RTN","ORDD100A",40,0)
 ;If there is no start date try to get the release date.
"RTN","ORDD100A",41,0)
 S X(3)=$P(ORO,U,8)
"RTN","ORDD100A",42,0)
 I X(3)="" S X(3)=$$RDATE^ORPXRM(DA)
"RTN","ORDD100A",43,0)
 I X(3)="" Q
"RTN","ORDD100A",44,0)
 S DAEK(1)=DA,X(1)=$P(ORO,U,2),X(4)=ORSTOP
"RTN","ORDD100A",45,0)
 S OI=0 F  S OI=$O(^OR(100,DA,.1,OI)) Q:OI'>0  D
"RTN","ORDD100A",46,0)
 . S X(2)=+$G(^(OI,0)),DAEK=OI
"RTN","ORDD100A",47,0)
 . D KOR^ORPXRM(.X,.DAEK)
"RTN","ORDD100A",48,0)
 Q
"RTN","ORDD100A",49,0)
 ;
"RTN","ORDD100A",50,0)
OI1(ORIFN) ; -- set "AOI" x-ref
"RTN","ORDD100A",51,0)
 N DA,OI,OR0,ORVP,ORSTRT,ORSTOP,ORIT,X,X1
"RTN","ORDD100A",52,0)
 Q:'$D(^OR(100,ORIFN,.1))  S OR0=$G(^(0))
"RTN","ORDD100A",53,0)
 S ORVP=$P(OR0,U,2) Q:'ORVP
"RTN","ORDD100A",54,0)
 S ORSTRT=$P(OR0,U,8) Q:'ORSTRT
"RTN","ORDD100A",55,0)
 S ORSTOP=$P(OR0,U,9)
"RTN","ORDD100A",56,0)
 S DA(1)=ORIFN
"RTN","ORDD100A",57,0)
 S (X(1),X1(1))=ORVP
"RTN","ORDD100A",58,0)
 S X(3)=ORSTRT,X1(3)=$$RDATE^ORPXRM(ORIFN)
"RTN","ORDD100A",59,0)
 S (X(4),X1(4))=ORSTOP
"RTN","ORDD100A",60,0)
 S OI=0 F  S OI=$O(^OR(100,ORIFN,.1,OI)) Q:OI'>0  D
"RTN","ORDD100A",61,0)
 . S ORIT=+$G(^(OI,0)) S:ORIT ^OR(100,"AOI",ORIT,ORVP,9999999-ORSTRT,ORIFN)=""
"RTN","ORDD100A",62,0)
 . S (X(2),X1(2))=ORIT,DA=OI
"RTN","ORDD100A",63,0)
 . D KOR^ORPXRM(.X1,.DA)
"RTN","ORDD100A",64,0)
 . D SOR^ORPXRM(.X,.DA)
"RTN","ORDD100A",65,0)
 Q
"RTN","ORDD100A",66,0)
 ;
"RTN","ORDD100A",67,0)
OI2(ORIFN) ; -- kill "AOI" x-ref
"RTN","ORDD100A",68,0)
 N DA,OI,OR0,ORVP,ORSTRT,ORSTOP,ORIT,X
"RTN","ORDD100A",69,0)
 Q:'$D(^OR(100,ORIFN,.1))  S OR0=$G(^(0))
"RTN","ORDD100A",70,0)
 S ORVP=$P(OR0,U,2) Q:'ORVP
"RTN","ORDD100A",71,0)
 S ORSTRT=$P(OR0,U,8) Q:'ORSTRT
"RTN","ORDD100A",72,0)
 S ORSTOP=$P(OR0,U,9)
"RTN","ORDD100A",73,0)
 S DA(1)=ORIFN,X(1)=ORVP,X(3)=ORSTRT,X(4)=ORSTOP
"RTN","ORDD100A",74,0)
 S OI=0 F  S OI=$O(^OR(100,ORIFN,.1,OI)) Q:OI'>0  D
"RTN","ORDD100A",75,0)
 . S ORIT=+$G(^(OI,0)) K:ORIT ^OR(100,"AOI",ORIT,ORVP,9999999-ORSTRT,ORIFN)
"RTN","ORDD100A",76,0)
 . S X(2)=ORIT,DA=OI
"RTN","ORDD100A",77,0)
 . D KOR^ORPXRM(.X,.DA)
"RTN","ORDD100A",78,0)
 Q
"RTN","ORPXRM")
0^2^B12483594
"RTN","ORPXRM",1,0)
ORPXRM ; SLC/PKR - Clinical Reminder index routines for file 100. ;06/18/2004
"RTN","ORPXRM",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**157**;Dec 17, 1997
"RTN","ORPXRM",3,0)
 ;DBIA 4113 supports PXRMSXRM entry points. 
"RTN","ORPXRM",4,0)
 ;DBIA 4114 supports setting and killing ^PXRMINDX
"RTN","ORPXRM",5,0)
 ;=========================================================
"RTN","ORPXRM",6,0)
INDEX ;Build the index for the ORDER file.
"RTN","ORPXRM",7,0)
 N D0,D0P,D1,DAS,DFN,END,ENTRIES,ETEXT,FERROR,GLOBAL,IND,NE,NDUP,NERROR
"RTN","ORPXRM",8,0)
 N OI,PROC,START,STRTDATE,STOP,TEMP,TENP,TEXT
"RTN","ORPXRM",9,0)
 ;Don't leave any old stuff around.
"RTN","ORPXRM",10,0)
 K ^PXRMINDX(100)
"RTN","ORPXRM",11,0)
 S GLOBAL=$$GET1^DID(100,"","","GLOBAL NAME")
"RTN","ORPXRM",12,0)
 S ENTRIES=$P(^OR(100,0),U,4)
"RTN","ORPXRM",13,0)
 S TENP=ENTRIES/10
"RTN","ORPXRM",14,0)
 S TENP=+$P(TENP,".",1)
"RTN","ORPXRM",15,0)
 I TENP<1 S TENP=1
"RTN","ORPXRM",16,0)
 D BMES^XPDUTL("Building index for ORDER file")
"RTN","ORPXRM",17,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","ORPXRM",18,0)
 D MES^XPDUTL(TEXT)
"RTN","ORPXRM",19,0)
 S START=$H
"RTN","ORPXRM",20,0)
 S (D0,D0P,FERROR,IND,NDUP,NE,NERROR)=0
"RTN","ORPXRM",21,0)
 F  S D0=$O(^OR(100,D0)) Q:(+D0=0)!(FERROR)  D
"RTN","ORPXRM",22,0)
 . I D0'>D0P D  Q
"RTN","ORPXRM",23,0)
 .. S FERROR=1
"RTN","ORPXRM",24,0)
 .. S ETEXT=D0_" subscript is a bad, cannot continue!"
"RTN","ORPXRM",25,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","ORPXRM",26,0)
 . S D0P=D0
"RTN","ORPXRM",27,0)
 . S IND=IND+1
"RTN","ORPXRM",28,0)
 . I IND#TENP=0 D
"RTN","ORPXRM",29,0)
 .. S TEXT="Processing entry "_IND
"RTN","ORPXRM",30,0)
 .. D MES^XPDUTL(TEXT)
"RTN","ORPXRM",31,0)
 . I IND#10000=0 W "."
"RTN","ORPXRM",32,0)
 . S TEMP=$G(^OR(100,D0,0))
"RTN","ORPXRM",33,0)
 . I TEMP="" D  Q
"RTN","ORPXRM",34,0)
 .. S ETEXT=D0_" bad entry no 0 node"
"RTN","ORPXRM",35,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","ORPXRM",36,0)
 . S DFN=$P(TEMP,U,2)
"RTN","ORPXRM",37,0)
 . I DFN="" D  Q
"RTN","ORPXRM",38,0)
 .. S ETEXT=D0_" no DFN"
"RTN","ORPXRM",39,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","ORPXRM",40,0)
 . I DFN'["DPT(" Q
"RTN","ORPXRM",41,0)
 . S DFN=$P(DFN,";",1)
"RTN","ORPXRM",42,0)
 . S STRTDATE=$P(TEMP,U,8)
"RTN","ORPXRM",43,0)
 .;If there is no start date get the release date for the new order.
"RTN","ORPXRM",44,0)
 . I STRTDATE="" S STRTDATE=$$RDATE(D0)
"RTN","ORPXRM",45,0)
 . I STRTDATE="" Q
"RTN","ORPXRM",46,0)
 . S STOP=$P(TEMP,U,9)
"RTN","ORPXRM",47,0)
 . S STOP=$S(STOP="":"U"_D0,1:STOP)
"RTN","ORPXRM",48,0)
 . S D1=0
"RTN","ORPXRM",49,0)
 . F  S D1=+$O(^OR(100,D0,.1,D1)) Q:D1=0  D
"RTN","ORPXRM",50,0)
 .. S OI=^OR(100,D0,.1,D1,0)
"RTN","ORPXRM",51,0)
 .. S DAS=D0_";.1;"_D1_";0"
"RTN","ORPXRM",52,0)
 .. I OI="" D  Q
"RTN","ORPXRM",53,0)
 ... S ETEXT=DAS_" no orderable item"
"RTN","ORPXRM",54,0)
 ... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","ORPXRM",55,0)
 .. I $D(^PXRMINDX(100,"IP",OI,DFN,STRTDATE,STOP,DAS)) S NDUP=NDUP+1
"RTN","ORPXRM",56,0)
 .. S ^PXRMINDX(100,"IP",OI,DFN,STRTDATE,STOP,DAS)=""
"RTN","ORPXRM",57,0)
 .. S ^PXRMINDX(100,"PI",DFN,OI,STRTDATE,STOP,DAS)=""
"RTN","ORPXRM",58,0)
 .. S NE=NE+1
"RTN","ORPXRM",59,0)
 S END=$H
"RTN","ORPXRM",60,0)
 S TEXT=NE_" ORDER results indexed."
"RTN","ORPXRM",61,0)
 W !,"There were "_NDUP_" duplicates."
"RTN","ORPXRM",62,0)
 D MES^XPDUTL(TEXT)
"RTN","ORPXRM",63,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","ORPXRM",64,0)
 ;If there were errors send a message.
"RTN","ORPXRM",65,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","ORPXRM",66,0)
 ;Send a MailMan message with the results.
"RTN","ORPXRM",67,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","ORPXRM",68,0)
 S ^PXRMINDX(100,"GLOBAL NAME")=GLOBAL
"RTN","ORPXRM",69,0)
 S ^PXRMINDX(100,"BUILT BY")=DUZ
"RTN","ORPXRM",70,0)
 S ^PXRMINDX(100,"DATE BUILT")=$$NOW^XLFDT
"RTN","ORPXRM",71,0)
 Q
"RTN","ORPXRM",72,0)
 ;
"RTN","ORPXRM",73,0)
 ;=========================================================
"RTN","ORPXRM",74,0)
GETDATA(ORIFN,DATA) ;Return data, for a specified order file entry.
"RTN","ORPXRM",75,0)
 N ORUPCHUK
"RTN","ORPXRM",76,0)
 D EN^ORX8(ORIFN)
"RTN","ORPXRM",77,0)
 S ORUPCHUK("ORORDER")=$$OI^ORX8(ORIFN)
"RTN","ORPXRM",78,0)
 S ORUPCHUK("ORREL")=$$RDATE(ORIFN)
"RTN","ORPXRM",79,0)
 M DATA=ORUPCHUK
"RTN","ORPXRM",80,0)
 Q
"RTN","ORPXRM",81,0)
 ;
"RTN","ORPXRM",82,0)
 ;=========================================================
"RTN","ORPXRM",83,0)
KOR(X,DA) ;Kill index for Order file.
"RTN","ORPXRM",84,0)
 N DAS,DFN,STOP
"RTN","ORPXRM",85,0)
 I X(1)'["DPT" Q
"RTN","ORPXRM",86,0)
 I 'X(2)!'X(3) Q
"RTN","ORPXRM",87,0)
 S DFN=$P(X(1),";",1)
"RTN","ORPXRM",88,0)
 S DAS=DA(1)_";.1;"_DA_";0"
"RTN","ORPXRM",89,0)
 S STOP=$S(X(4)="":"U"_DA(1),1:X(4))
"RTN","ORPXRM",90,0)
 K ^PXRMINDX(100,"IP",X(2),DFN,X(3),STOP,DAS)
"RTN","ORPXRM",91,0)
 K ^PXRMINDX(100,"PI",DFN,X(2),X(3),STOP,DAS)
"RTN","ORPXRM",92,0)
 Q
"RTN","ORPXRM",93,0)
 ;=========================================================
"RTN","ORPXRM",94,0)
RDATE(ORIFN) ;Return the release date for the new order action.
"RTN","ORPXRM",95,0)
 N RDIEN
"RTN","ORPXRM",96,0)
 S RDIEN=$O(^OR(100,ORIFN,8,"C","NW",""))
"RTN","ORPXRM",97,0)
 I RDIEN="" Q ""
"RTN","ORPXRM",98,0)
 Q $P(^OR(100,ORIFN,8,RDIEN,0),U,16)
"RTN","ORPXRM",99,0)
 ;
"RTN","ORPXRM",100,0)
 ;=========================================================
"RTN","ORPXRM",101,0)
SOR(X,DA) ;Set index for Order file.
"RTN","ORPXRM",102,0)
 ;X(1)=OBJECT OF ORDER, X(2)=ORDERABLE ITEM, X(3)=START DATE
"RTN","ORPXRM",103,0)
 ;or release date, X(4)=STOP DATE
"RTN","ORPXRM",104,0)
 N DAS,DFN,STOP
"RTN","ORPXRM",105,0)
 I X(1)'["DPT" Q
"RTN","ORPXRM",106,0)
 I 'X(2)!'X(3) Q
"RTN","ORPXRM",107,0)
 S DFN=$P(X(1),";",1)
"RTN","ORPXRM",108,0)
 S DAS=DA(1)_";.1;"_DA_";0"
"RTN","ORPXRM",109,0)
 S STOP=$S(X(4)="":"U"_DA(1),1:X(4))
"RTN","ORPXRM",110,0)
 S ^PXRMINDX(100,"IP",X(2),DFN,X(3),STOP,DAS)=""
"RTN","ORPXRM",111,0)
 S ^PXRMINDX(100,"PI",DFN,X(2),X(3),STOP,DAS)=""
"RTN","ORPXRM",112,0)
 Q
"RTN","ORPXRM",113,0)
 ;
"VER")
8.0^22.0
**INSTALL NAME**
PSO*7.0*118
"BLD",3823,0)
PSO*7.0*118^OUTPATIENT PHARMACY^0^3041026^y
"BLD",3823,1,0)
^^37^37^3030728^
"BLD",3823,1,1,0)
This project consists of 12 patches that work together to create a new
"BLD",3823,1,2,0)
Clinical Reminders index global. The purpose of this index is to provide
"BLD",3823,1,3,0)
rapid access to clinical data. All of the standard Clinical Reminders
"BLD",3823,1,4,0)
finding types are included in the index.
"BLD",3823,1,5,0)
 
"BLD",3823,1,6,0)
The 12 patches that comprise this project are:
"BLD",3823,1,7,0)
 
"BLD",3823,1,8,0)
 PXRM*1.5*12
"BLD",3823,1,9,0)
 DG*5.3*478
"BLD",3823,1,10,0)
 GMPL*2*27
"BLD",3823,1,11,0)
 GMRV*4*15
"BLD",3823,1,12,0)
 LR*5.2*295
"BLD",3823,1,13,0)
 OR*3*157
"BLD",3823,1,14,0)
 PSS*1.0*62
"BLD",3823,1,15,0)
 PSJ*5.0*90
"BLD",3823,1,16,0)
 PSO*7*118
"BLD",3823,1,17,0)
 PX*1.0*119
"BLD",3823,1,18,0)
 RA*5*33
"BLD",3823,1,19,0)
 YS*5.01*77
"BLD",3823,1,20,0)
 
"BLD",3823,1,21,0)
The purpose of this patch (PSO*7*118) is to lay the groundwork for these
"BLD",3823,1,22,0)
changes by creating new cross-references in the PRESCRIPTION file (#52)
"BLD",3823,1,23,0)
that will be responsible for updating the new Clinical Reminders index
"BLD",3823,1,24,0)
global. These are the new cross-references added to the PRESCRIPTION 
"BLD",3823,1,25,0)
file (#52) and the fields used as the trigger-points. The type of these
"BLD",3823,1,26,0)
cross-references is 'New', not 'Traditional'.
"BLD",3823,1,27,0)
 
"BLD",3823,1,28,0)
  X-ref  File/Sub-file              Trigger-point field(s)
"BLD",3823,1,29,0)
  ----------------------------------------------------------
"BLD",3823,1,30,0)
  ACRO   PRESCRIPTION (#52)         DAYS SUPPLY (#8)   
"BLD",3823,1,31,0)
                                    RELEASED DATE/TIME (#31) 
"BLD",3823,1,32,0)
 
"BLD",3823,1,33,0)
  ACRR   REFILL (#52.1)             DAYS SUPPLY (#1.1)
"BLD",3823,1,34,0)
                                    RELEASED DATE/TIME (#17)
"BLD",3823,1,35,0)
 
"BLD",3823,1,36,0)
  ACRP   PARTIAL (#52.2)            DAYS SUPPLY (#.041)  
"BLD",3823,1,37,0)
                                    RELEASED DATE/TIME (#8)
"BLD",3823,4,0)
^9.64PA^^0
"BLD",3823,"ABPKG")
n
"BLD",3823,"INID")
^n
"BLD",3823,"INIT")
PSOPOST9
"BLD",3823,"KRN",0)
^9.67PA^8989.52^19
"BLD",3823,"KRN",.4,0)
.4
"BLD",3823,"KRN",.401,0)
.401
"BLD",3823,"KRN",.402,0)
.402
"BLD",3823,"KRN",.403,0)
.403
"BLD",3823,"KRN",.5,0)
.5
"BLD",3823,"KRN",.84,0)
.84
"BLD",3823,"KRN",3.6,0)
3.6
"BLD",3823,"KRN",3.8,0)
3.8
"BLD",3823,"KRN",9.2,0)
9.2
"BLD",3823,"KRN",9.8,0)
9.8
"BLD",3823,"KRN",9.8,"NM",0)
^9.68A^10^10
"BLD",3823,"KRN",9.8,"NM",1,0)
PSODISPS^^0^B26291503
"BLD",3823,"KRN",9.8,"NM",2,0)
PSOCSRL^^0^B31646673
"BLD",3823,"KRN",9.8,"NM",3,0)
PSOPXRM1^^0^B4717969
"BLD",3823,"KRN",9.8,"NM",4,0)
PSOPXRMI^^0^B9609135
"BLD",3823,"KRN",9.8,"NM",5,0)
PSOPOST9^^0^B7851673
"BLD",3823,"KRN",9.8,"NM",6,0)
PSOPXRMU^^0^B2783924
"BLD",3823,"KRN",9.8,"NM",7,0)
PSOORUTL^^0^B41060802
"BLD",3823,"KRN",9.8,"NM",8,0)
PSONVNEW^^0^B25284202
"BLD",3823,"KRN",9.8,"NM",9,0)
PSONVARP^^0^B23438101
"BLD",3823,"KRN",9.8,"NM",10,0)
PSONVAR1^^0^B38489573
"BLD",3823,"KRN",9.8,"NM","B","PSOCSRL",2)

"BLD",3823,"KRN",9.8,"NM","B","PSODISPS",1)

"BLD",3823,"KRN",9.8,"NM","B","PSONVAR1",10)

"BLD",3823,"KRN",9.8,"NM","B","PSONVARP",9)

"BLD",3823,"KRN",9.8,"NM","B","PSONVNEW",8)

"BLD",3823,"KRN",9.8,"NM","B","PSOORUTL",7)

"BLD",3823,"KRN",9.8,"NM","B","PSOPOST9",5)

"BLD",3823,"KRN",9.8,"NM","B","PSOPXRM1",3)

"BLD",3823,"KRN",9.8,"NM","B","PSOPXRMI",4)

"BLD",3823,"KRN",9.8,"NM","B","PSOPXRMU",6)

"BLD",3823,"KRN",19,0)
19
"BLD",3823,"KRN",19.1,0)
19.1
"BLD",3823,"KRN",101,0)
101
"BLD",3823,"KRN",409.61,0)
409.61
"BLD",3823,"KRN",771,0)
771
"BLD",3823,"KRN",870,0)
870
"BLD",3823,"KRN",8989.51,0)
8989.51
"BLD",3823,"KRN",8989.52,0)
8989.52
"BLD",3823,"KRN",8994,0)
8994
"BLD",3823,"KRN","B",.4,.4)

"BLD",3823,"KRN","B",.401,.401)

"BLD",3823,"KRN","B",.402,.402)

"BLD",3823,"KRN","B",.403,.403)

"BLD",3823,"KRN","B",.5,.5)

"BLD",3823,"KRN","B",.84,.84)

"BLD",3823,"KRN","B",3.6,3.6)

"BLD",3823,"KRN","B",3.8,3.8)

"BLD",3823,"KRN","B",9.2,9.2)

"BLD",3823,"KRN","B",9.8,9.8)

"BLD",3823,"KRN","B",19,19)

"BLD",3823,"KRN","B",19.1,19.1)

"BLD",3823,"KRN","B",101,101)

"BLD",3823,"KRN","B",409.61,409.61)

"BLD",3823,"KRN","B",771,771)

"BLD",3823,"KRN","B",870,870)

"BLD",3823,"KRN","B",8989.51,8989.51)

"BLD",3823,"KRN","B",8989.52,8989.52)

"BLD",3823,"KRN","B",8994,8994)

"BLD",3823,"PRET")

"BLD",3823,"QUES",0)
^9.62^^
"BLD",3823,"REQB",0)
^9.611^3^2
"BLD",3823,"REQB",2,0)
PSO*7.0*132^2
"BLD",3823,"REQB",3,0)
PSO*7.0*156^2
"BLD",3823,"REQB","B","PSO*7.0*132",2)

"BLD",3823,"REQB","B","PSO*7.0*156",3)

"INIT")
PSOPOST9
"MBREQ")
0
"PKG",112,-1)
1^1
"PKG",112,0)
OUTPATIENT PHARMACY^PSO^OUTPATIENT LABELS, PROFILE, INVENTORY, PRESCRIPTIONS
"PKG",112,20,0)
^9.402P^^
"PKG",112,22,0)
^9.49I^1^1
"PKG",112,22,1,0)
7.0^2971216^2980109^1212
"PKG",112,22,1,"PAH",1,0)
118^3041026^1342
"PKG",112,22,1,"PAH",1,1,0)
^^37^37^3041026
"PKG",112,22,1,"PAH",1,1,1,0)
This project consists of 12 patches that work together to create a new
"PKG",112,22,1,"PAH",1,1,2,0)
Clinical Reminders index global. The purpose of this index is to provide
"PKG",112,22,1,"PAH",1,1,3,0)
rapid access to clinical data. All of the standard Clinical Reminders
"PKG",112,22,1,"PAH",1,1,4,0)
finding types are included in the index.
"PKG",112,22,1,"PAH",1,1,5,0)
 
"PKG",112,22,1,"PAH",1,1,6,0)
The 12 patches that comprise this project are:
"PKG",112,22,1,"PAH",1,1,7,0)
 
"PKG",112,22,1,"PAH",1,1,8,0)
 PXRM*1.5*12
"PKG",112,22,1,"PAH",1,1,9,0)
 DG*5.3*478
"PKG",112,22,1,"PAH",1,1,10,0)
 GMPL*2*27
"PKG",112,22,1,"PAH",1,1,11,0)
 GMRV*4*15
"PKG",112,22,1,"PAH",1,1,12,0)
 LR*5.2*295
"PKG",112,22,1,"PAH",1,1,13,0)
 OR*3*157
"PKG",112,22,1,"PAH",1,1,14,0)
 PSS*1.0*62
"PKG",112,22,1,"PAH",1,1,15,0)
 PSJ*5.0*90
"PKG",112,22,1,"PAH",1,1,16,0)
 PSO*7*118
"PKG",112,22,1,"PAH",1,1,17,0)
 PX*1.0*119
"PKG",112,22,1,"PAH",1,1,18,0)
 RA*5*33
"PKG",112,22,1,"PAH",1,1,19,0)
 YS*5.01*77
"PKG",112,22,1,"PAH",1,1,20,0)
 
"PKG",112,22,1,"PAH",1,1,21,0)
The purpose of this patch (PSO*7*118) is to lay the groundwork for these
"PKG",112,22,1,"PAH",1,1,22,0)
changes by creating new cross-references in the PRESCRIPTION file (#52)
"PKG",112,22,1,"PAH",1,1,23,0)
that will be responsible for updating the new Clinical Reminders index
"PKG",112,22,1,"PAH",1,1,24,0)
global. These are the new cross-references added to the PRESCRIPTION 
"PKG",112,22,1,"PAH",1,1,25,0)
file (#52) and the fields used as the trigger-points. The type of these
"PKG",112,22,1,"PAH",1,1,26,0)
cross-references is 'New', not 'Traditional'.
"PKG",112,22,1,"PAH",1,1,27,0)
 
"PKG",112,22,1,"PAH",1,1,28,0)
  X-ref  File/Sub-file              Trigger-point field(s)
"PKG",112,22,1,"PAH",1,1,29,0)
  ----------------------------------------------------------
"PKG",112,22,1,"PAH",1,1,30,0)
  ACRO   PRESCRIPTION (#52)         DAYS SUPPLY (#8)   
"PKG",112,22,1,"PAH",1,1,31,0)
                                    RELEASED DATE/TIME (#31) 
"PKG",112,22,1,"PAH",1,1,32,0)
 
"PKG",112,22,1,"PAH",1,1,33,0)
  ACRR   REFILL (#52.1)             DAYS SUPPLY (#1.1)
"PKG",112,22,1,"PAH",1,1,34,0)
                                    RELEASED DATE/TIME (#17)
"PKG",112,22,1,"PAH",1,1,35,0)
 
"PKG",112,22,1,"PAH",1,1,36,0)
  ACRP   PARTIAL (#52.2)            DAYS SUPPLY (#.041)  
"PKG",112,22,1,"PAH",1,1,37,0)
                                    RELEASED DATE/TIME (#8)
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","PSOCSRL")
0^2^B31646673
"RTN","PSOCSRL",1,0)
PSOCSRL ;BIR/BHW-release interface for control substance pkg ;7/22/94
"RTN","PSOCSRL",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**27,71,118**;DEC 1997
"RTN","PSOCSRL",3,0)
 ;External reference to ^PSDRUG supported by DBIA 221
"RTN","PSOCSRL",4,0)
 ;External reference to ^PS(55 supported by DBIA 2228
"RTN","PSOCSRL",5,0)
 ;External reference to ^PS(59.7 supported by DBIA 694
"RTN","PSOCSRL",6,0)
 ;External reference to SERV^IBARX1 supported by DBIA 2245
"RTN","PSOCSRL",7,0)
EN(RXP,XTYPE,PSRH) I '$D(PSOPAR) D  G:'$D(PSOPAR) EX
"RTN","PSOCSRL",8,0)
 .D ^PSOLSET I '$D(PSOPAR) W $C(7),!!,?5,"Site Parameters must be defined to use the Release option!",! Q
"RTN","PSOCSRL",9,0)
 .S PSOCSUB=1
"RTN","PSOCSRL",10,0)
 K XFLAG D CS^PSOCMOPB I $G(XFLAG) K XFLAG Q
"RTN","PSOCSRL",11,0)
 S Y=$G(^PS(59,PSOSITE,"IB")),PSOIBSS=$$SERV^IBARX1(+Y) I 'PSOIBSS D IBSSR^PSOUTL I 'PSOIBFL D  G EX
"RTN","PSOCSRL",12,0)
 .W $C(7),!!,"The IB SERVICE/SECTION defined in your site parameter file is not valid.",!,"You will not be able to release any medication until this is corrected!",!
"RTN","PSOCSRL",13,0)
 W !! S PSIN=+$P($G(^PS(59.7,1,49.99)),"^",2)
"RTN","PSOCSRL",14,0)
 Q:'$D(^XUSEC("PSORPH",PSRH))
"RTN","PSOCSRL",15,0)
 I '$D(^PSRX(+$G(RXP),0))!($G(RXP)']"") W !?7,$C(7),$C(7),$C(7),"   NON-EXISTENT PRESCRIPTION" G EX
"RTN","PSOCSRL",16,0)
 D:$P($G(^PS(55,+$P(^PSRX(+RXP,0),"^",2),0)),"^",6)'=2 EN^PSOHLUP($P(^PSRX(+RXP,0),"^",2))
"RTN","PSOCSRL",17,0)
 I +$P($G(^PSRX(+RXP,"STA")),"^")=13!+$P($G(^PSRX(+RXP,0)),"^",2)=0 W !?7,$C(7),$C(7),"    PRESCRIPTION IS A DELETED PERSCRIPTION NUMBER" G EX
"RTN","PSOCSRL",18,0)
 I +$P($G(^PSRX(+RXP,"STA")),"^"),$S($P(^("STA"),"^")=2:0,$P(^("STA"),"^")=5:0,$P(^("STA"),"^")=11:0,$P(^("STA"),"^")=12:0,1:1) G EX
"RTN","PSOCSRL",19,0)
 G:$G(XTYPE)]"" REF
"RTN","PSOCSRL",20,0)
ORI ;orig
"RTN","PSOCSRL",21,0)
 K LBLP,ISUF I $P(^PSRX(RXP,2),"^",13) S Y=$P(^PSRX(RXP,2),"^",13) X ^DD("DD") W !!?7,$C(7),$C(7),"ORIGINAL PRESCRIPTION WAS LAST RELEASED ON "_Y,! G EX
"RTN","PSOCSRL",22,0)
 I $P(^PSRX(RXP,2),"^",15) S RESK=$P(^(2),"^",15)  W !,"Original Fill returned to stock on "_$E(RESK,4,5)_"/"_$E(RESK,6,7)_"/"_$E(RESK,2,3),! G EX
"RTN","PSOCSRL",23,0)
 S PSOCPN=$P(^PSRX(RXP,0),"^",2),QTY=$P($G(^PSRX(RXP,0)),"^",7),QDRUG=$P(^PSRX(RXP,0),"^",6)
"RTN","PSOCSRL",24,0)
 I '$P($G(^PSRX(RXP,2)),"^",13),+$P($G(^(2)),"^",2)'<PSIN S RXFD=$P(^(2),"^",2) D  G:$G(PSOUT) EX D:$G(LBLP) UPDATE I $G(ISUF) D UPDATE
"RTN","PSOCSRL",25,0)
 .S SUPN=$O(^PS(52.5,"B",RXP,0)) I SUPN,$D(^PS(52.5,"C",RXFD,SUPN)),$G(^PS(52.5,SUPN,"P"))'=1 S ISUF=1 Q
"RTN","PSOCSRL",26,0)
 .F LBL=0:0 S LBL=$O(^PSRX(RXP,"L",LBL)) Q:'LBL  I '+$P(^PSRX(RXP,"L",LBL,0),"^",2),'$P(^(0),"^",5) S LBLP=1
"RTN","PSOCSRL",27,0)
 .Q:'$G(LBLP)  D ASK Q:$G(PSOUT)
"RTN","PSOCSRL",28,0)
 .S:$D(^PSDRUG(QDRUG,660.1)) ^PSDRUG(QDRUG,660.1)=^PSDRUG(QDRUG,660.1)-QTY
"RTN","PSOCSRL",29,0)
 .Q:$P($G(^PSRX(RXP,2)),"^",13)
"RTN","PSOCSRL",30,0)
 .D NOW^%DTC S DIE="^PSRX(",DA=RXP,DR="31///"_%_";23///"_PSRH
"RTN","PSOCSRL",31,0)
 .;D EN^PSOHLSN1(RXP,"ZD")
"RTN","PSOCSRL",32,0)
 .D ^DIE K DIE,DR,DA,LBL
"RTN","PSOCSRL",33,0)
 .D EN^PSOHLSN1(RXP,"ZD")
"RTN","PSOCSRL",34,0)
 G EX
"RTN","PSOCSRL",35,0)
REF ;release ref or par
"RTN","PSOCSRL",36,0)
 K LBLP,ISUF,IFN D QTY S:($P($G(XTYPE),"^")="P") $P(^PSRX(RXP,"TYPE"),"^")=0
"RTN","PSOCSRL",37,0)
EX K OUT,RX2,RXFD,RESK,ISUF,SUPN,%,DIC,IFN,J,DA,DR,DIE,X,Y,RXP,REC,DIRUT,PSOCPN,PSOCPRX,PSOIBSS,PSOIBFL,PSOIBLP,PSOIBST,QDRUG,QTY,XTYPE,PSRH,Y,PSIN
"RTN","PSOCSRL",38,0)
 K DIR,DUOUT,DTOUT,LBL,LBLP,PSOUT
"RTN","PSOCSRL",39,0)
 Q
"RTN","PSOCSRL",40,0)
UPDATE I $G(ISUF) W $C(7),!!?7,$S($P(XTYPE,"^")=1:"RE",$P(XTYPE,"^")="P":"PARTIAL ",1:"ORIGINAL")_"FILL ON SUSPENSE !",!,$C(7) Q
"RTN","PSOCSRL",41,0)
 ; I +$G(^PSRX(RXP,"IB")) S PSOCPRX=$P(^PSRX(RXP,0),"^") D CP^PSOCP
"RTN","PSOCSRL",42,0)
 S PSOCPRX=$P(^PSRX(RXP,0),"^") D CP^PSOCP
"RTN","PSOCSRL",43,0)
 W !?7,"PRESCRIPTION NUMBER "_$P(^PSRX(RXP,0),"^")_" RELEASED"
"RTN","PSOCSRL",44,0)
 Q
"RTN","PSOCSRL",45,0)
QTY S PSOCPN=$P(^PSRX(RXP,0),"^",2),QDRUG=$P(^PSRX(RXP,0),"^",6) K LBLP
"RTN","PSOCSRL",46,0)
 D:$P($G(^PSRX(RXP,$P(XTYPE,"^"),$P(XTYPE,"^",2),0)),"^")'<PSIN  K ISUF,LBLP G:$G(PSOUT) EX
"RTN","PSOCSRL",47,0)
 .S RXFD=$E($P(^PSRX(RXP,$P(XTYPE,"^"),$P(XTYPE,"^",2),0),"^"),1,7),SUPN=$O(^PS(52.5,"B",RXP,0)) I SUPN,$D(^PS(52.5,"C",RXFD,SUPN)),$G(^PS(52.5,SUPN,"P"))'=1 S ISUF=1 D UPDATE Q
"RTN","PSOCSRL",48,0)
 .I $P(^PSRX(RXP,$P(XTYPE,"^"),$P(XTYPE,"^",2),0),"^",$S($P($G(XTYPE),"^"):18,1:19))]""!($P(^(0),"^",16)) K IFN Q
"RTN","PSOCSRL",49,0)
 .F LBL=0:0 S LBL=$O(^PSRX(RXP,"L",LBL)) Q:'LBL  I $P(^PSRX(RXP,"L",LBL,0),"^",2)=$S('$P(XTYPE,"^"):(99-$P(XTYPE,"^",2)),1:$P(XTYPE,"^",2)) S LBLP=1
"RTN","PSOCSRL",50,0)
 .Q:'$G(LBLP)  D ASK Q:$G(PSOUT)
"RTN","PSOCSRL",51,0)
 .S IFN=$P(XTYPE,"^",2) S:$G(^PSDRUG(QDRUG,660.1))]"" QTY=$P(^PSRX(RXP,$P(XTYPE,"^"),$P(XTYPE,"^",2),0),"^",4),^PSDRUG(QDRUG,660.1)=^PSDRUG(QDRUG,660.1)-QTY
"RTN","PSOCSRL",52,0)
 .D NOW^%DTC S DIE="^PSRX("_RXP_","""_$P(XTYPE,"^")_""","
"RTN","PSOCSRL",53,0)
 .S DA(1)=RXP,DA=$P(XTYPE,"^",2)
"RTN","PSOCSRL",54,0)
 .S DR=$S(+XTYPE:17,1:8)_"///"_%_";"_$S(+XTYPE:4,1:.05)_"////"_PSRH
"RTN","PSOCSRL",55,0)
 .D ^DIE K DIE,DR,DA
"RTN","PSOCSRL",56,0)
 .K PSODISPP S:'$P($G(XTYPE),"^") PSODISPP=1 D EN^PSOHLSN1(RXP,"ZD") K PSODISPP
"RTN","PSOCSRL",57,0)
 .K:+XTYPE ^PSRX("ACP",$P($G(^PSRX(RXP,0)),"^",2),$P($G(^PSRX(RXP,1,$P(XTYPE,"^",2),0)),"^"),$P(XTYPE,"^",2),RXP)
"RTN","PSOCSRL",58,0)
 .; I +XTYPE,+$G(^PSRX(RXP,"IB")),$G(IFN),'$G(ISUF) S PSOCPRX=$P(^PSRX(RXP,0),"^"),YY=$P(XTYPE,"^",2) D CP^PSOCP
"RTN","PSOCSRL",59,0)
 .I +XTYPE,$G(IFN),'$G(ISUF) S PSOCPRX=$P(^PSRX(RXP,0),"^"),YY=$P(XTYPE,"^",2) D CP^PSOCP
"RTN","PSOCSRL",60,0)
 W:$G(IFN) !!?7,"PRESCRIPTION NUMBER "_$P(^PSRX(RXP,0),"^")_$S('+$G(XTYPE):" Partial Fill",1:" REFILL")_" #"_$P(XTYPE,"^",2)_" RELEASED"
"RTN","PSOCSRL",61,0)
 W:'$G(IFN) !!?7,$S(+$G(XTYPE):"REFILL",1:"PARTIAL")_" #"_$P(XTYPE,"^",2)_" NOT RELEASED"
"RTN","PSOCSRL",62,0)
 K IFN
"RTN","PSOCSRL",63,0)
 Q
"RTN","PSOCSRL",64,0)
ASK ;confirm
"RTN","PSOCSRL",65,0)
 W ! K DIR S DIR(0)="SA^1:YES;0:NO",DIR("B")="Yes",DIR("A",1)="Are You sure you want to release "_$S($G(XTYPE)']"":"Original ",$P(XTYPE,"^")=1:"Re",1:"Partial ")_"fill"_$S($P(XTYPE,"^",2):" #"_$P(XTYPE,"^",2),1:"")
"RTN","PSOCSRL",66,0)
 S DIR("A")="for Prescription #"_$P(^PSRX(RXP,0),"^")_": " D ^DIR K DIR
"RTN","PSOCSRL",67,0)
 S:'Y!($D(DIRUT)) PSOUT=1
"RTN","PSOCSRL",68,0)
 ;bingo board call
"RTN","PSOCSRL",69,0)
 I Y,$G(XTYPE)="",$P(^PSRX(RXP,0),"^",11)["W" S BINGRO="W",BINGNAM=$P(^PSRX(RXP,0),"^",2),BINGDIV=$P(^PSRX(RXP,2),"^",9)
"RTN","PSOCSRL",70,0)
 I Y,$G(XTYPE)["P",$P($G(^PSRX(RXP,"P",$P(XTYPE,"^",2),0)),"^",2)["W" S BINGRPR="W",BNGPDV=$P(^PSRX(RXP,"P",$P(XTYPE,"^",2),0),"^",9),BINGNAM=$P($G(^PSRX(RXP,0)),"^",2)
"RTN","PSOCSRL",71,0)
 I Y,+$G(XTYPE)=1,$P($G(^PSRX(RXP,1,$P(XTYPE,"^",2),0)),"^",2)["W" S BINGRPR="W",BNGRDV=$P(^PSRX(RXP,1,$P(XTYPE,"^",2),0),"^",9),BINGNAM=$P($G(^PSRX(RXP,0)),"^",2)
"RTN","PSOCSRL",72,0)
 I $D(DISGROUP),($D(BINGDIV)!$D(BNGPDV)!$D(BNGRDV)),($D(BINGRO)!$D(BINGRPR)) D REL^PSOBING1 K BINGNAM,BINGDIV,BINGRO,BINGRPR,BNGPDV,BNGRDV
"RTN","PSOCSRL",73,0)
 Q
"RTN","PSODISPS")
0^1^B26291503
"RTN","PSODISPS",1,0)
PSODISPS ;BIR/SAB-CONTINUATION OF RELEASE FUNCTION ;3/2/93
"RTN","PSODISPS",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**15,13,9,27,67,71,156,118**;DEC 1997
"RTN","PSODISPS",3,0)
 ;External reference ^PS(59.7 supported by DBIA 694
"RTN","PSODISPS",4,0)
 ;External reference to ^PSDRUG("AQ" supported by DBIA 3165
"RTN","PSODISPS",5,0)
 ;External reference ^XTMP("PSA" supported by DBIA 1036
"RTN","PSODISPS",6,0)
 ;External reference $$SERV^IBARX1 supported by DBIA 2245
"RTN","PSODISPS",7,0)
 ;External reference ^PSDRUG( supported by DBIA 221
"RTN","PSODISPS",8,0)
QTY S PSOCPN=$P(^PSRX(RXP,0),"^",2),QDRUG=$P(^PSRX(RXP,0),"^",6) K LBLP
"RTN","PSODISPS",9,0)
 F YY=0:0 S YY=$O(^PSRX(RXP,XTYPE,YY)) Q:'YY  D:$P($G(^PSRX(RXP,XTYPE,YY,0)),"^")'<PSIN  K ISUF,LBLP
"RTN","PSODISPS",10,0)
 .S RXFD=$E($P(^PSRX(RXP,XTYPE,YY,0),"^"),1,7),SUPN=$O(^PS(52.5,"B",RXP,0)) I SUPN,$D(^PS(52.5,"C",RXFD,SUPN)),$G(^PS(52.5,SUPN,"P"))'=1,$G(XTYPE) S ISUF=1 Q
"RTN","PSODISPS",11,0)
 .I XTYPE=1,($D(^PSDRUG("AQ",QDRUG))) K CMOP D RREL^PSOCMOPB K CMOP Q:$G(ISUF)
"RTN","PSODISPS",12,0)
 .I $P(^PSRX(RXP,XTYPE,YY,0),"^",$S($G(XTYPE):18,1:19))]""!($P(^(0),"^",16)) K IFN Q
"RTN","PSODISPS",13,0)
 .F LBL=0:0 S LBL=$O(^PSRX(RXP,"L",LBL)) Q:'LBL  I $P(^PSRX(RXP,"L",LBL,0),"^",2)=$S('XTYPE:(99-YY),1:YY) S LBLP=1
"RTN","PSODISPS",14,0)
 .Q:'$G(LBLP)  S IFN=YY S:$G(^PSDRUG(QDRUG,660.1))]"" QTY=$P(^PSRX(RXP,XTYPE,YY,0),"^",4),^PSDRUG(QDRUG,660.1)=^PSDRUG(QDRUG,660.1)-QTY
"RTN","PSODISPS",15,0)
 .K DA,DR,DIE D NOW^%DTC S DIE="^PSRX("_RXP_","""_XTYPE_""",",DA(1)=RXP
"RTN","PSODISPS",16,0)
 .S DA=YY,DR=$S(XTYPE:17,1:8)_"///"_%_";"_$S(XTYPE:4,1:.05)_"////"_PSRH
"RTN","PSODISPS",17,0)
 .S PSODT=% D ^DIE K DIE,DR,DA
"RTN","PSODISPS",18,0)
 .K PSODISPP S:$G(XTYPE)="P" PSODISPP=1 D EN^PSOHLSN1(RXP,"ZD") K PSODISPP
"RTN","PSODISPS",19,0)
 .K:XTYPE ^PSRX("ACP",$P($G(^PSRX(RXP,0)),"^",2),$P($G(^PSRX(RXP,1,YY,0)),"^"),YY,RXP)
"RTN","PSODISPS",20,0)
 .I XTYPE,$G(IFN),'$G(ISUF) S PSOCPRX=$P(^PSRX(RXP,0),"^") D CP^PSOCP
"RTN","PSODISPS",21,0)
 .;if appropriate update ^XTMP("PSA", for Drug Acct.
"RTN","PSODISPS",22,0)
 .I $G(PSODA),$G(PSODA(1)),'$D(^PSRX("AR",+PSODT,+RXP,YY)) D
"RTN","PSODISPS",23,0)
 ..S ^XTMP("PSA",+PSOSITE,+QDRUG,DT)=$G(^XTMP("PSA",+PSOSITE,+QDRUG,DT))+$P($G(^PSRX(RXP,XTYPE,YY,0)),"^",4)
"RTN","PSODISPS",24,0)
 .;initialize bingo board variables
"RTN","PSODISPS",25,0)
 .I $G(IFN),$P($G(^PSRX(RXP,XTYPE,IFN,0)),"^",2)["W" S BINGRPR="W",BNGPDV=$P(^PSRX(RXP,XTYPE,IFN,0),"^",9),BINGNAM=$P($G(^PSRX(RXP,0)),"^",2)
"RTN","PSODISPS",26,0)
 W:$G(IFN) !?7,"Prescription Number "_$P(^PSRX(RXP,0),"^")_$S('$G(XTYPE):" Partial Fill",1:" Refill(s)")_" Released" I $G(SPEED) G XMIT
"RTN","PSODISPS",27,0)
 W:'$G(IFN) !?7,"No "_$S($G(XTYPE):"Refill(s)",1:"Partial(s)")_" to be Released"
"RTN","PSODISPS",28,0)
XMIT I $G(PSODISP)=2.4 D  ;build an send HL7 v2.4 messages to dispense system
"RTN","PSODISPS",29,0)
 . F I=0:0 S SUB=$O(^PSRX(RXP,"A",I)) Q:'I  I $P(^PSRX(RXP,"A",I,0),"^",2)="N" D
"RTN","PSODISPS",30,0)
 .. D NOW^%DTC S PSODTM=% K ^UTILITY($J,"PSOHL")
"RTN","PSODISPS",31,0)
 .. S IDGN=$P(^PSRX(+RXP,0),"^",6),FP=$S(XTYPE=1:"R",1:"P")
"RTN","PSODISPS",32,0)
 .. S ^UTILITY($J,"PSOHL",1)=+RXP_"^"_IDGN_"^"_PSODTM_"^"_+$G(PDUZ)_"^0^^PSO DISP^^^"_FP_"^"_IFN
"RTN","PSODISPS",33,0)
 .. S ZTRTN="INIT^PSORELDT",ZTDESC="EXTERNAL INTERFACE FOR RELEASE DATE/TIME",ZTIO="",ZTDTH=$H,ZTSAVE("^UTILITY($J,""PSOHL"",")="",ZTSAVE("PSOSITE")="",ZTSAVE("RXP")="" D ^%ZTLOAD K ^UTILITY($J,"PSOHL")
"RTN","PSODISPS",34,0)
 K IFN
"RTN","PSODISPS",35,0)
 Q
"RTN","PSODISPS",36,0)
STAT S RX0=^PSRX(RXP,0),$P(RX0,"^",15)=+^("STA"),RX2=^PSRX(RXP,2),J=RXP D ^PSOFUNC
"RTN","PSODISPS",37,0)
 W !!?5,$C(7),$C(7),"Rx# "_$P(^PSRX(RXP,0),"^")_" has a status of "_ST_" and is not eligible for",!?5,"release."_$S('$D(^XUSEC("PSORPH",DUZ)):"  Please check with a Pharmacist!",1:"")
"RTN","PSODISPS",38,0)
 K RX0,ST
"RTN","PSODISPS",39,0)
 Q
"RTN","PSODISPS",40,0)
OERR I '$D(PSOPAR) D ^PSOLSET I '$D(PSOPAR) W $C(7),!!,?5,"Site Parameters must be defined to use the Release option!",! S VALMBCK="" Q
"RTN","PSODISPS",41,0)
 S VALMBCK="Q",Y=$G(^PS(59,PSOSITE,"IB")),PSOIBSS=$$SERV^IBARX1(+Y) I 'PSOIBSS D IBSSR^PSOUTL I 'PSOIBFL D  S VALMBCK="" G EX
"RTN","PSODISPS",42,0)
 .W $C(7),!!,"The IB SERVICE/SECTION defined in your site parameter file is not valid.",!,"You will not be able to release any medication until this is corrected!",!
"RTN","PSODISPS",43,0)
 W !! S PSIN=+$P($G(^PS(59.7,1,49.99)),"^",2),RXP=$P(PSOLST($P(PSLST,",",ORD)),"^",2)
"RTN","PSODISPS",44,0)
 S DIC("S")="I $D(^XUSEC(""PSORPH"",+Y))",DIC("A")="Enter PHARMACIST: ",DIC="^VA(200,",DIC(0)="QEAM" D ^DIC G:"^"[X EX K DIC G:$D(DTOUT)!($D(DUOUT))!($D(DIRUT))!(Y=-1) EX S PSRH=+Y
"RTN","PSODISPS",45,0)
 ;check for Drug Acct background job K8 & K7.1
"RTN","PSODISPS",46,0)
 S X="PSA IV ALL LOCATIONS",DIC(0)="MZ",DIC=19.2 D ^DIC I Y=-1 K DIC,X,Y G DOIT
"RTN","PSODISPS",47,0)
 I $P($G(Y(0)),U,2)>DT S PSODA=1 S:'$P($G(^XTMP("PSA",0)),U,2) $P(^(0),U,2)=DT G DOIT
"RTN","PSODISPS",48,0)
 S X="PSA IV ALL LOCATIONS",DIC(0)="MZ",DIC=19 D ^DIC K DIC,X G:Y=-1 DOIT
"RTN","PSODISPS",49,0)
 K DIQ,PSA S DA=+Y,DIC=19,DIQ="PSA",DR=200,DIQ(0)="IN" D EN^DIQ1
"RTN","PSODISPS",50,0)
 I '$D(PSA(19,DA,200,"I")) K DIC,DA,X,Y,DIQ G DOIT
"RTN","PSODISPS",51,0)
 I PSA(19,DA,200,"I")>DT S PSODA=1 S:'$P($G(^XTMP("PSA",0)),U,2) $P(^(0),U,2)=DT
"RTN","PSODISPS",52,0)
 K PSA,DIC,DA,X,Y,DIQ
"RTN","PSODISPS",53,0)
 ;
"RTN","PSODISPS",54,0)
DOIT S POERR=1 D FULL^VALM1,BC1^PSODISP
"RTN","PSODISPS",55,0)
 I $D(DISGROUP),$D(BINGNAM),($D(BINGDIV)!$D(BNGPDV)!$D(BNGRDV)),($D(BINGRO)!$D(BINGRPR)) N TM,TM1 D REL^PSOBING1 K BINGNAM,BINGDIV,BINGRO,BINGRPR,BNGPDV,BNGRDV
"RTN","PSODISPS",56,0)
EX ;
"RTN","PSODISPS",57,0)
 K OUT,RX2,RXFD,RESK,ISUF,SUPN,%,DIC,IFN,J,DA,DR,DIE,X,X1,X2,Y,RXP,CX,PX,REC,DIR,YDT,REC,RDUZ,DIRUT,PSOCPN,PSOCPRX,PSOIBSS,PSOIBFL,PSOIBLP,PSOIBST,YY,QDRUG,QTY,TYPE,XTYPE,DUOUT,PSRH,XX,Y,PSIN,POERR,SUB
"RTN","PSODISPS",58,0)
 K DIR S DIR("A",1)=" ",DIR("A")="Press Return to Continue",DIR(0)="E" D ^DIR K DIRUT,DUOUT,DTOUT,DIR S VALMBCK="R"
"RTN","PSODISPS",59,0)
 S PSORXED=1 D ^PSOBUILD,ACT^PSOORNE2 K PSORXED Q
"RTN","PSONVAR1")
0^10^B38489573
"RTN","PSONVAR1",1,0)
PSONVAR1 ;BHM/MFR - Non-VA Med Usage Report ;04/10/03
"RTN","PSONVAR1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**132,118**;13 Feb 97
"RTN","PSONVAR1",3,0)
 ;External reference to File ^PS(55 supported by DBIA 2228
"RTN","PSONVAR1",4,0)
 ;External reference to $$GET1^DIQ is supported by DBIA 2056
"RTN","PSONVAR1",5,0)
 ;External reference to ^VADPT is supported by DBIA 10061
"RTN","PSONVAR1",6,0)
 ;External reference to ^XLFDT is supported by DBIA 10103
"RTN","PSONVAR1",7,0)
 ;External reference to ^%ZISC is supported by DBIA 10089
"RTN","PSONVAR1",8,0)
 ;
"RTN","PSONVAR1",9,0)
EN N DATE,DFN,ORD,PAG,PCNT,PRTD,OINAM,PNAM,I,J,Y,X,C,XX,S1,S2,S3,S4,S5,OCNT
"RTN","PSONVAR1",10,0)
 N OCK,OK,STS,SUB,SP1,SP2,SPF
"RTN","PSONVAR1",11,0)
 ;
"RTN","PSONVAR1",12,0)
 U IO K ^TMP("PSONV",$J),^TMP("PSOCNT",$J)
"RTN","PSONVAR1",13,0)
 S SPF=0,(SP1,SP2)="",$P(SP1,"=",80)="",$P(SP2,"-",80)=""
"RTN","PSONVAR1",14,0)
 ;
"RTN","PSONVAR1",15,0)
 ; - Loop through the Non-VA Med orders x-reference
"RTN","PSONVAR1",16,0)
 S DATE=PSOSD,(DFN,ORD)="",(PCNT,OCNT,PRTD)=0 K DIRUT
"RTN","PSONVAR1",17,0)
DATE S DATE=$O(^PS(55,"ADCDT",DATE)) G NEXT:DATE=""!(DATE>PSOED)
"RTN","PSONVAR1",18,0)
 W:SPF SP1
"RTN","PSONVAR1",19,0)
 ;
"RTN","PSONVAR1",20,0)
DFN I PSOAPT S DFN=$O(^PS(55,"ADCDT",DATE,DFN)) G DATE:DFN=""
"RTN","PSONVAR1",21,0)
 I 'PSOAPT S DFN=$O(PSOPT(DFN)) G DATE:DFN=""        ;Patient Filter
"RTN","PSONVAR1",22,0)
 ;
"RTN","PSONVAR1",23,0)
 I $$DEAD^PSONVARP(DFN) G DFN                        ;Patient is Dead
"RTN","PSONVAR1",24,0)
 ;
"RTN","PSONVAR1",25,0)
ORD S ORD=$O(^PS(55,"ADCDT",DATE,DFN,ORD)) G DFN:ORD=""
"RTN","PSONVAR1",26,0)
 S XX=$G(^PS(55,DFN,"NVA",ORD,0))
"RTN","PSONVAR1",27,0)
 I 'PSOAOI,'$D(PSOOI(+$P(XX,"^"))) G ORD             ;OI Filter
"RTN","PSONVAR1",28,0)
 I '$P(XX,"^",6),PSOST="D" G ORD                     ;Status Filter
"RTN","PSONVAR1",29,0)
 I $P(XX,"^",6),PSOST="A" G ORD
"RTN","PSONVAR1",30,0)
 I '$D(^PS(55,DFN,"NVA",ORD,"OCK")),PSOOC="Y" G ORD  ;Order Checks Filter
"RTN","PSONVAR1",31,0)
 I $D(^PS(55,DFN,"NVA",ORD,"OCK")),PSOOC="N" G ORD
"RTN","PSONVAR1",32,0)
 ;
"RTN","PSONVAR1",33,0)
 I PSOSRT=3 D  G CLOSE:$D(DIRUT),ORD                 ;If not Sorting,
"RTN","PSONVAR1",34,0)
 . I $Y>(IOSL-9) D HDR I $D(DIRUT) Q                 ;Print the Report
"RTN","PSONVAR1",35,0)
 . D PRINT(DFN,ORD) Q:$D(DIRUT)  S SPF=1             ;Then G ORD
"RTN","PSONVAR1",36,0)
 ;
"RTN","PSONVAR1",37,0)
 I PSOSRT[1 S PNAM=$$GET1^DIQ(2,DFN,.01)             ;Retrieving Patient
"RTN","PSONVAR1",38,0)
 I PSOSRT[2 S OINAM=$$GET1^DIQ(50.7,+$P(XX,"^"),.01) ;Name and Orderable
"RTN","PSONVAR1",39,0)
 S:$G(PNAM)="" PNAM=0 S:$G(OINAM)="" OINAM=0         ;Item Name
"RTN","PSONVAR1",40,0)
 S (S1,S2,S3,S4,S5)=0
"RTN","PSONVAR1",41,0)
 F I=1:1:$L(PSOSRT,",") D
"RTN","PSONVAR1",42,0)
 . S Y=$P(PSOSRT,",",I),STS=+$P(XX,"^",6)
"RTN","PSONVAR1",43,0)
 . S OCK=$S($D(^PS(55,DFN,"NVA",ORD,"OCK")):1,1:2)
"RTN","PSONVAR1",44,0)
 . S @("S"_I)=$S(Y=1:PNAM,Y=2:OINAM,Y=3:DATE,Y=4:+STS,Y=5:OCK)
"RTN","PSONVAR1",45,0)
 S ^TMP("PSONV",$J,S1,S2,S3,S4,S5,DFN,ORD)=""
"RTN","PSONVAR1",46,0)
 G ORD
"RTN","PSONVAR1",47,0)
 ;
"RTN","PSONVAR1",48,0)
NEXT ; - If not Sorting (already printed), SKIP, otherwise, print the report
"RTN","PSONVAR1",49,0)
 I PSOSRT="" G NDTP
"RTN","PSONVAR1",50,0)
 S (S1,S2,S3,S4,S5,DFN,ORD)=""
"RTN","PSONVAR1",51,0)
 F  S S1=$O(^TMP("PSONV",$J,S1)) Q:S1=""  D  Q:$D(DIRUT)
"RTN","PSONVAR1",52,0)
 . F  S S2=$O(^TMP("PSONV",$J,S1,S2)) Q:S2=""  D  Q:$D(DIRUT)
"RTN","PSONVAR1",53,0)
 . . F  S S3=$O(^TMP("PSONV",$J,S1,S2,S3)) Q:S3=""  D  Q:$D(DIRUT)
"RTN","PSONVAR1",54,0)
 . . . F  S S4=$O(^TMP("PSONV",$J,S1,S2,S3,S4)) Q:S4=""  D  Q:$D(DIRUT)
"RTN","PSONVAR1",55,0)
 . . . . F  S S5=$O(^TMP("PSONV",$J,S1,S2,S3,S4,S5)) Q:S5=""  D  Q:$D(DIRUT)
"RTN","PSONVAR1",56,0)
 . . . . . F  S DFN=$O(^TMP("PSONV",$J,S1,S2,S3,S4,S5,DFN)) Q:DFN=""  D  Q:$D(DIRUT)
"RTN","PSONVAR1",57,0)
 . . . . . . F   S ORD=$O(^TMP("PSONV",$J,S1,S2,S3,S4,S5,DFN,ORD)) Q:ORD=""  D  Q:$D(DIRUT)
"RTN","PSONVAR1",58,0)
 . . . . . . . I $Y>(IOSL-12) D HDR I $D(DIRUT) Q
"RTN","PSONVAR1",59,0)
 . . . . . . . D PRINT(DFN,ORD)
"RTN","PSONVAR1",60,0)
 . . I '$D(DIRUT),S2'=0,$O(^TMP("PSONV",$J,S1,S2))'="" W SP2
"RTN","PSONVAR1",61,0)
 . I '$D(DIRUT),$O(^TMP("PSONV",$J,S1))'="" W SP1
"RTN","PSONVAR1",62,0)
 G CLOSE:$D(DIRUT)
"RTN","PSONVAR1",63,0)
 ;
"RTN","PSONVAR1",64,0)
NDTP I 'PRTD D HDR W !!?18,"**********   NO DATA TO PRINT   **********"
"RTN","PSONVAR1",65,0)
 I PRTD D
"RTN","PSONVAR1",66,0)
 . W SP1
"RTN","PSONVAR1",67,0)
 . W !,"Total: ",PCNT," patient",$S(PCNT>1:"s",1:"")
"RTN","PSONVAR1",68,0)
 . W " and ",OCNT," order",$S(OCNT>1:"s",1:""),"."
"RTN","PSONVAR1",69,0)
 ;
"RTN","PSONVAR1",70,0)
CLOSE D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","PSONVAR1",71,0)
END K ^TMP("PSONV",$J),^TMP("PSOCNT",$J)
"RTN","PSONVAR1",72,0)
 Q
"RTN","PSONVAR1",73,0)
 ;
"RTN","PSONVAR1",74,0)
PRINT(DFN,ORD) ; - Print a Non-VA Med Order
"RTN","PSONVAR1",75,0)
 ;Input: DFN-Patient;ORD-Non-VA Order#
"RTN","PSONVAR1",76,0)
 N X,XX,K,OI,OIX,OINAM,DGNAM,PNAM,PSSN,CLNAM,PRV,I,J,Z,TXT,VAPA,VADM,SCH
"RTN","PSONVAR1",77,0)
 N STR,OCK
"RTN","PSONVAR1",78,0)
 ;
"RTN","PSONVAR1",79,0)
 I '$D(^PS(55,DFN,"NVA",ORD)) Q
"RTN","PSONVAR1",80,0)
 I '$G(PAG) D HDR I $D(DIRUT) Q
"RTN","PSONVAR1",81,0)
 ;
"RTN","PSONVAR1",82,0)
 S XX=^PS(55,DFN,"NVA",ORD,0),OINAM=$$GET1^DIQ(50.7,+$P(XX,"^"),.01)
"RTN","PSONVAR1",83,0)
 S DGNAM="" I $P(XX,"^",2) S DGNAM=$$GET1^DIQ(50,+$P(XX,"^",2),.01)
"RTN","PSONVAR1",84,0)
 D DEM^VADPT,ADD^VADPT S PNAM=$P(VADM(1),"^"),PSSN=$P($G(VADM(2)),"^",2)
"RTN","PSONVAR1",85,0)
 W !,PNAM," (ID:",$S(PSSN:$P(PSSN,"-",3),1:"0000"),")"
"RTN","PSONVAR1",86,0)
 W ?46,"Patient Phone #: ",$E($P(VAPA(8),"^"),1,16)
"RTN","PSONVAR1",87,0)
 S:'$D(^TMP("PSOCNT",$J,DFN)) PCNT=PCNT+1 S ^TMP("PSOCNT",$J,DFN)=""
"RTN","PSONVAR1",88,0)
 ;
"RTN","PSONVAR1",89,0)
 W !?5,"Non-VA Med: ",OINAM
"RTN","PSONVAR1",90,0)
 W !?2,"Dispense Drug: ",$E(DGNAM,1,37)
"RTN","PSONVAR1",91,0)
 W ?55,"Dosage: ",$E($P(XX,"^",3),1,16)
"RTN","PSONVAR1",92,0)
 W !?7,"Schedule: " S X=$E($P(XX,"^",5),1,30)
"RTN","PSONVAR1",93,0)
 S SCH=$S($L($P(XX,"^",5))>30:$P(X," ",1,$L(X," ")-1),1:X) W SCH
"RTN","PSONVAR1",94,0)
 W ?52,"Med Route: ",$E($P(XX,"^",4),1,35)
"RTN","PSONVAR1",95,0)
 I $E($P(XX,"^",5),$L(SCH)+1,99)'="" D
"RTN","PSONVAR1",96,0)
 . W !?16,$E($P(XX,"^",5),$L(SCH)+1,99)
"RTN","PSONVAR1",97,0)
 W !?9,"Status: ",$S('$P(XX,"^",6):"ACTIVE",1:"DISCONTINUED on "_$$DT($P(XX,"^",7)))
"RTN","PSONVAR1",98,0)
 W ?49,"CPRS Order #: ",$P(XX,"^",8)
"RTN","PSONVAR1",99,0)
 W !?2,"Documented By: ",$E($$GET1^DIQ(200,+$P(XX,"^",11),.01),1,29)
"RTN","PSONVAR1",100,0)
 W ?46,"Documented Date: ",$$DT($P(XX,"^",10))
"RTN","PSONVAR1",101,0)
 S CLNAM=$$GET1^DIQ(44,+$P(XX,"^",12),.01)
"RTN","PSONVAR1",102,0)
 W !?9,"Clinic: " W:$P(XX,"^",12) $E($P(XX,"^",12)_" - "_CLNAM,1,33)
"RTN","PSONVAR1",103,0)
 W ?51,"Start Date: ",$$DT($P(XX,"^",9)),!
"RTN","PSONVAR1",104,0)
 ;
"RTN","PSONVAR1",105,0)
 ; - Printing "Order Checks" fields
"RTN","PSONVAR1",106,0)
 W:$D(^PS(55,DFN,"NVA",ORD,"OCK")) !
"RTN","PSONVAR1",107,0)
 F I=0:0 S I=$O(^PS(55,DFN,"NVA",ORD,"OCK",I)) Q:'I  D  Q:$D(DIRUT)
"RTN","PSONVAR1",108,0)
 . S OCK=^PS(55,DFN,"NVA",ORD,"OCK",I,0),STR=$P(OCK,"^"),PRV=+$P(OCK,"^",2)
"RTN","PSONVAR1",109,0)
 . I $Y>(IOSL-5) D HDR Q:$D(DIRUT)  W !
"RTN","PSONVAR1",110,0)
 . W ?1,"Order Check #",I,": " K TXT D TEXT(.TXT,STR,61)
"RTN","PSONVAR1",111,0)
 . F K=1:1 Q:'$D(TXT(K))  D  Q:$D(DIRUT)
"RTN","PSONVAR1",112,0)
 . . W ?17,TXT(K),! I $Y>(IOSL-4) D HDR Q:$D(DIRUT)  W !
"RTN","PSONVAR1",113,0)
 . Q:$D(DIRUT)  K TXT
"RTN","PSONVAR1",114,0)
 . F J=0:0 S J=$O(^PS(55,DFN,"NVA",ORD,"OCK",I,"OVR",J)) Q:'J  D
"RTN","PSONVAR1",115,0)
 . . S STR=^PS(55,DFN,"NVA",ORD,"OCK",I,"OVR",J,0)
"RTN","PSONVAR1",116,0)
 . . D TEXT(.TXT,STR,56)
"RTN","PSONVAR1",117,0)
 . W ?6,"Override Reason: " W:'$D(TXT) !
"RTN","PSONVAR1",118,0)
 . F K=1:1 Q:'$D(TXT(K))  D  Q:$D(DIRUT)
"RTN","PSONVAR1",119,0)
 . . W ?23,TXT(K),! I $Y>(IOSL-4) D HDR Q:$D(DIRUT)  W !
"RTN","PSONVAR1",120,0)
 . Q:$D(DIRUT)
"RTN","PSONVAR1",121,0)
 . W ?6,"Override Provider: " W:PRV $$GET1^DIQ(200,+PRV,.01) W !
"RTN","PSONVAR1",122,0)
 Q:$D(DIRUT)
"RTN","PSONVAR1",123,0)
 ;
"RTN","PSONVAR1",124,0)
 ; - Printing "Statement/Explanation/Comments" field
"RTN","PSONVAR1",125,0)
 I $D(^PS(55,DFN,"NVA",ORD,"DSC")) D  Q:$D(DIRUT)
"RTN","PSONVAR1",126,0)
 . W !,"Statement/Explanation/Comments: " K TXT
"RTN","PSONVAR1",127,0)
 . F I=0:0 S I=$O(^PS(55,DFN,"NVA",ORD,"DSC",I)) Q:'I  D
"RTN","PSONVAR1",128,0)
 . . S STR=^PS(55,DFN,"NVA",ORD,"DSC",I,0)
"RTN","PSONVAR1",129,0)
 . . D TEXT(.TXT,STR,47)
"RTN","PSONVAR1",130,0)
 . F K=1:1 Q:'$D(TXT(K))  D  Q:$D(DIRUT)
"RTN","PSONVAR1",131,0)
 . . W ?32,TXT(K),! I $Y>(IOSL-4) D HDR Q:$D(DIRUT)  W !
"RTN","PSONVAR1",132,0)
 ;
"RTN","PSONVAR1",133,0)
 S PRTD=1,OCNT=OCNT+1
"RTN","PSONVAR1",134,0)
 Q
"RTN","PSONVAR1",135,0)
 ;
"RTN","PSONVAR1",136,0)
TEXT(TEXT,STR,L) ; Formats STR into TEXT array, lines lenght = L
"RTN","PSONVAR1",137,0)
 N J,WORD,K S K=+$O(TEXT(""),-1) S:'K K=1
"RTN","PSONVAR1",138,0)
 F J=1:1:$L(STR," ") D
"RTN","PSONVAR1",139,0)
 . S WORD=$P(STR," ",J) I ($L($G(TEXT(K))_WORD))>L S K=K+1
"RTN","PSONVAR1",140,0)
 . S TEXT(K)=$G(TEXT(K))_WORD_" "
"RTN","PSONVAR1",141,0)
 Q
"RTN","PSONVAR1",142,0)
 ;
"RTN","PSONVAR1",143,0)
HDR ; - Prints the Header
"RTN","PSONVAR1",144,0)
 N X,DIR S PAG=$G(PAG)+1
"RTN","PSONVAR1",145,0)
 I PAG>1,$E(IOST)="C" D  Q:$D(DIRUT)
"RTN","PSONVAR1",146,0)
 . S DIR(0)="E",DIR("A")=" Press ENTER to Continue or ^ to Exit" D ^DIR
"RTN","PSONVAR1",147,0)
 ;
"RTN","PSONVAR1",148,0)
 W @IOF,"Non-VA Meds Usage Report",?74,"Page: ",$J(PAG,3)
"RTN","PSONVAR1",149,0)
 W !,"Sorted by",$$SRT(PSOSRT)
"RTN","PSONVAR1",150,0)
 W !,"Date Range: "_$$DT(PSOSD+1\1)_" - "_$$DT(PSOED\1)
"RTN","PSONVAR1",151,0)
 W ?48,"Run Date: "_$$FMTE^XLFDT($$NOW^XLFDT())
"RTN","PSONVAR1",152,0)
 S X="",$P(X,"-",80)="" W !,X
"RTN","PSONVAR1",153,0)
 Q
"RTN","PSONVAR1",154,0)
 ;
"RTN","PSONVAR1",155,0)
SRT(ST) ; - Convert the "1,2,4" (example) to "PATIENT,ORDERABLE ITEM,STATUS"
"RTN","PSONVAR1",156,0)
 ;Input: ST-String with the Sorting fields by number
"RTN","PSONVAR1",157,0)
 ;Output: ST-String with the Sorting fields by name
"RTN","PSONVAR1",158,0)
 N I,X,STR,FLD
"RTN","PSONVAR1",159,0)
 S STR="PATIENT NAME^ORDERABLE ITEM^DATE DOCUMENTED^STATUS^ORDER CHECKS"
"RTN","PSONVAR1",160,0)
 F I=1:1:$L(ST,",") D
"RTN","PSONVAR1",161,0)
 . S FLD=+$P(ST,",",I),X=$P(STR,"^",FLD)
"RTN","PSONVAR1",162,0)
 . S $P(ST,",",I)=" "_X
"RTN","PSONVAR1",163,0)
 Q ST
"RTN","PSONVAR1",164,0)
 ;
"RTN","PSONVAR1",165,0)
DT(DT) ; - Convert FM Date to MM/DD/YYYY
"RTN","PSONVAR1",166,0)
 I 'DT Q ""
"RTN","PSONVAR1",167,0)
 I '(DT#10000) Q (1700+$E(DT,1,3))
"RTN","PSONVAR1",168,0)
 I '(DT#100) Q $E(DT,4,5)_"/"_(1700+$E(DT,1,3))
"RTN","PSONVAR1",169,0)
 Q $E(DT,4,5)_"/"_$E(DT,6,7)_"/"_(1700+$E(DT,1,3))
"RTN","PSONVARP")
0^9^B23438101
"RTN","PSONVARP",1,0)
PSONVARP ;BHM/MFR - Non-VA Med Usage Report - Input ;04/10/03
"RTN","PSONVARP",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**132,118**;13 Feb 97
"RTN","PSONVARP",3,0)
 ;External reference to ^%DT is supported by DBIA 10003
"RTN","PSONVARP",4,0)
 ;External reference to ^%ZTLOAD is supported by DBIA 10063
"RTN","PSONVARP",5,0)
 ;External reference to ^%ZIS is supported by DBIA 10086
"RTN","PSONVARP",6,0)
 ;External reference to ^DIR is supported by DBIA 10026
"RTN","PSONVARP",7,0)
 ;External reference to ^XLFSTR is supported by DBIA 10104
"RTN","PSONVARP",8,0)
 ;
"RTN","PSONVARP",9,0)
HID ; - Entrhy point from the Hidden Action in the Medication Profile
"RTN","PSONVARP",10,0)
 N PSOHDFLG S PSOHDFLG=1
"RTN","PSONVARP",11,0)
 ;
"RTN","PSONVARP",12,0)
EN N PSOSD,PSOED,PSOST,PSOSRT,PSOAPT,PSOAOI,PSOST,PSOOC,PSOAPT,PSOAOI,I,Y
"RTN","PSONVARP",13,0)
 N OK,X,C,%DT
"RTN","PSONVARP",14,0)
 ;
"RTN","PSONVARP",15,0)
 ; - Ask for FROM DATE DOCUMENTED
"RTN","PSONVARP",16,0)
 S %DT(0)=-DT,%DT="AEP",%DT("A")="FROM DATE DOCUMENTED: "
"RTN","PSONVARP",17,0)
 W ! D ^%DT I Y<0!($D(DTOUT)) G END
"RTN","PSONVARP",18,0)
 S PSOSD=Y\1-.00001
"RTN","PSONVARP",19,0)
 ;
"RTN","PSONVARP",20,0)
ENDT ; - Ask for TO DATE DOCUMENTED
"RTN","PSONVARP",21,0)
 S %DT(0)=PSOSD+1\1,%DT("A")="TO DATE DOCUMENTED: "
"RTN","PSONVARP",22,0)
 W ! D ^%DT I Y<0!($D(DTOUT)) G END
"RTN","PSONVARP",23,0)
 S PSOED=Y\1+.99999
"RTN","PSONVARP",24,0)
 ;
"RTN","PSONVARP",25,0)
 ; - Reported called from a Hidden Action menu
"RTN","PSONVARP",26,0)
 I $G(PSOHDFLG) D  G DEV
"RTN","PSONVARP",27,0)
 . S PSOPT(DFN)="",PSOAPT=0,PSOAOI=1,PSOST="B",PSOOC="B",PSOSRT="4,2"
"RTN","PSONVARP",28,0)
 ;
"RTN","PSONVARP",29,0)
SORT ; - Ask for SORT BY
"RTN","PSONVARP",30,0)
 K DIR S DIR("B")="PATIENT NAME" D HL1("A")
"RTN","PSONVARP",31,0)
SORT1 S PSOSRT="",(PSOAPT,PSOAOI)=1,(PSOST,PSOOC)="B"
"RTN","PSONVARP",32,0)
 S DIR("A")="SORT BY",DIR(0)="FO" D HL1("?")
"RTN","PSONVARP",33,0)
 W ! D ^DIR K DIR I $D(DIRUT) G END
"RTN","PSONVARP",34,0)
 ;
"RTN","PSONVARP",35,0)
 S OK=1,C=15 W !
"RTN","PSONVARP",36,0)
 F I=1:1:$L(Y,",") D
"RTN","PSONVARP",37,0)
 . S X=$P(Y,",",I) S:X'?.N X=$$TRNS(X) I PSOSRT[X Q
"RTN","PSONVARP",38,0)
 . W !?(C-10),$S(I=1:"SORT BY ",1:"THEN BY ") S C=C+5
"RTN","PSONVARP",39,0)
 . I X<1!(X>5) W X,"???",$C(7) S OK=0 Q
"RTN","PSONVARP",40,0)
 . W $P("PATIENT NAME^ORDERABLE ITEM^DATE DOCUMENTED^STATUS^ORDER CHECKS","^",X)
"RTN","PSONVARP",41,0)
 . S PSOSRT=PSOSRT_","_X
"RTN","PSONVARP",42,0)
 I 'OK S DIR("B")=Y G SORT1
"RTN","PSONVARP",43,0)
 S $E(PSOSRT)=""
"RTN","PSONVARP",44,0)
 ;
"RTN","PSONVARP",45,0)
 S OK=1
"RTN","PSONVARP",46,0)
 F I=1:1:$L(PSOSRT,",") D  I 'OK Q
"RTN","PSONVARP",47,0)
 . S X=$P(PSOSRT,",",I) D:X'=3 @("SRT"_X)
"RTN","PSONVARP",48,0)
 I 'OK S DIR("B")="PATIENT NAME" G SORT1
"RTN","PSONVARP",49,0)
 ;
"RTN","PSONVARP",50,0)
DEV W ! K %ZIS,IOP,POP,ZTSK S %ZIS="QM" D ^%ZIS K %ZIS I POP G END
"RTN","PSONVARP",51,0)
 I $D(IO("Q")) D  G END
"RTN","PSONVARP",52,0)
 . N G K IO("Q"),ZTIO,ZTSAVE,ZTDTH,ZTSK
"RTN","PSONVARP",53,0)
 . S ZTRTN="EN^PSONVAR1",ZTDESC="Non-VA Meds Usage Report"
"RTN","PSONVARP",54,0)
 . F G="PSOSD","PSOED","PSOSRT","PSOPT","PSOOI" S:$D(@G) ZTSAVE(G)=""
"RTN","PSONVARP",55,0)
 . F G="PSOST","PSOOC","PSOAPT","PSOAOI" S:$D(@G) ZTSAVE(G)=""
"RTN","PSONVARP",56,0)
 . S:$D(PSOPT) ZTSAVE("PSOPT(")="" S:$D(PSOOI) ZTSAVE("PSOOI(")=""
"RTN","PSONVARP",57,0)
 . D ^%ZTLOAD W:$D(ZTSK) !,"Report is Queued to print !!" K ZTSK
"RTN","PSONVARP",58,0)
 ;
"RTN","PSONVARP",59,0)
 G EN^PSONVAR1
"RTN","PSONVARP",60,0)
 ;
"RTN","PSONVARP",61,0)
END Q
"RTN","PSONVARP",62,0)
 ;
"RTN","PSONVARP",63,0)
SRT1 ; - Selection of PATIENTS to print on the Report
"RTN","PSONVARP",64,0)
 N DIC,X,I K PSOPT S PSOAPT=0
"RTN","PSONVARP",65,0)
 W !!,?5,"You may select a single or multiple PATIENTS,"
"RTN","PSONVARP",66,0)
 W !,?5,"or enter ^ALL to select all PATIENTS.",!
"RTN","PSONVARP",67,0)
 S DIC=2,DIC(0)="QEAM",DIC("A")="     PATIENT: "
"RTN","PSONVARP",68,0)
 F  D ^DIC Q:Y<0  S:'$$DEAD(+Y,1) PSOPT(+Y)="" K DIC("B")
"RTN","PSONVARP",69,0)
 I X="^ALL" S PSOAPT=1 K PSOPT,DUOUT Q
"RTN","PSONVARP",70,0)
 I $D(DUOUT)!($D(DTOUT)) S OK=0 Q
"RTN","PSONVARP",71,0)
 I '$D(PSOPT),Y<0 S OK=0 Q
"RTN","PSONVARP",72,0)
 Q
"RTN","PSONVARP",73,0)
 ;
"RTN","PSONVARP",74,0)
SRT2 ; - Selection of ORDERABLE ITEMS to print on the Report
"RTN","PSONVARP",75,0)
 N DIC,X,I K PSOOI S PSOAOI=0
"RTN","PSONVARP",76,0)
 W !!,?5,"You may select a single or multiple ORDERABLE ITEMS,"
"RTN","PSONVARP",77,0)
 W !,?5,"or enter ^ALL to select all ORDERABLE ITEMS.",!
"RTN","PSONVARP",78,0)
 S DIC=50.7,DIC(0)="QEAM",DIC("A")="     ORDERABLE ITEM: "
"RTN","PSONVARP",79,0)
 F  D ^DIC Q:Y<0  S PSOOI(+Y)="" K DIC("B")
"RTN","PSONVARP",80,0)
 I X="^ALL" S PSOAOI=1 K PSOOI,DUOUT Q
"RTN","PSONVARP",81,0)
 I $D(DUOUT)!($D(DTOUT)) S OK=0 Q
"RTN","PSONVARP",82,0)
 I '$D(PSOOI)&(Y<0) S OK=0 Q
"RTN","PSONVARP",83,0)
 Q
"RTN","PSONVARP",84,0)
 ;
"RTN","PSONVARP",85,0)
SRT4 ; - Selection of STATUS to print on the Report
"RTN","PSONVARP",86,0)
 N DIR,X,I K PSOST
"RTN","PSONVARP",87,0)
 W !!,?5,"You may select (A)CTIVE, (D)ISCONTINUED or (B)OTH status.",!
"RTN","PSONVARP",88,0)
 S DIR(0)="SAO^A:ACTIVE;D:DISCONTINUED;B:BOTH"
"RTN","PSONVARP",89,0)
 S DIR("A")="     STATUS: ",DIR("B")="ACTIVE" D ^DIR
"RTN","PSONVARP",90,0)
 I $D(DIRUT) S OK=0 Q
"RTN","PSONVARP",91,0)
 S PSOST=Y
"RTN","PSONVARP",92,0)
 Q
"RTN","PSONVARP",93,0)
 ;
"RTN","PSONVARP",94,0)
SRT5 ; - Selection of ORDER CHECKS to print on the Report
"RTN","PSONVARP",95,0)
 N DIR,X,OP1,OP2 K PSOOC
"RTN","PSONVARP",96,0)
 S OP1="ORDERS WITH ORDER CHECKS ONLY"
"RTN","PSONVARP",97,0)
 S OP2="ORDERS WITHOUT ORDER CHECKS ONLY"
"RTN","PSONVARP",98,0)
 W !!,?5,"You may select 'Y' to print ",OP1,","
"RTN","PSONVARP",99,0)
 W !?5,"'N' to print ",OP2," or 'B' for BOTH.",!
"RTN","PSONVARP",100,0)
 S DIR(0)="SAO^Y:"_OP1_";N:"_OP2_";B:BOTH"
"RTN","PSONVARP",101,0)
 S DIR("A")="     ORDER CHECKS: ",DIR("B")="BOTH" D ^DIR
"RTN","PSONVARP",102,0)
 I $D(DIRUT) S OK=0 Q
"RTN","PSONVARP",103,0)
 S PSOOC=Y
"RTN","PSONVARP",104,0)
 Q
"RTN","PSONVARP",105,0)
 ;
"RTN","PSONVARP",106,0)
TRNS(X) ; - Translates Alpha into the corresponding Sorting Code
"RTN","PSONVARP",107,0)
 N L,UPX S L=$L(X),UPX=$$UP^XLFSTR(X)
"RTN","PSONVARP",108,0)
 I $E("PATIENT NAME",1,L)=UPX Q 1
"RTN","PSONVARP",109,0)
 I $E("ORDERABLE ITEM",1,L)=UPX Q 2
"RTN","PSONVARP",110,0)
 I $E("DATE DOCUMENTED",1,L)=UPX Q 3
"RTN","PSONVARP",111,0)
 I $E("STATUS",1,L)=UPX Q 4
"RTN","PSONVARP",112,0)
 I $E("ORDER CHECKS",1,L)=UPX Q 5
"RTN","PSONVARP",113,0)
 Q X
"RTN","PSONVARP",114,0)
 ;
"RTN","PSONVARP",115,0)
DEAD(DFN,DSPL) ; Check if Patient has a Date Of Death on File
"RTN","PSONVARP",116,0)
 N VADM,Y
"RTN","PSONVARP",117,0)
 I '$G(DFN) Q 0
"RTN","PSONVARP",118,0)
 D DEM^VADPT I $G(VADM(6))="" Q 0
"RTN","PSONVARP",119,0)
 I $G(DSPL) W !?10,$P($G(VADM(1)),"^")," (",$P($G(VADM(2)),"^",2),") DIED ",$P($G(VADM(6)),"^",2),$C(7)
"RTN","PSONVARP",120,0)
 Q 1
"RTN","PSONVARP",121,0)
 ;
"RTN","PSONVARP",122,0)
HL1(S) ; - Help for the SORT BY prompt
"RTN","PSONVARP",123,0)
 S DIR(S,1)="    Enter the SORT field(s) for this Report:"
"RTN","PSONVARP",124,0)
 S DIR(S,2)=" "
"RTN","PSONVARP",125,0)
 S DIR(S,3)="       1 - PATIENT NAME"
"RTN","PSONVARP",126,0)
 S DIR(S,4)="       2 - ORDERABLE ITEM"
"RTN","PSONVARP",127,0)
 S DIR(S,5)="       3 - DATE DOCUMENTED"
"RTN","PSONVARP",128,0)
 S DIR(S,6)="       4 - STATUS"
"RTN","PSONVARP",129,0)
 S DIR(S,7)="       5 - ORDER CHECKS"
"RTN","PSONVARP",130,0)
 S DIR(S,8)=" "
"RTN","PSONVARP",131,0)
 S DIR(S,9)="    Or any combination of the above, separated by comma,"
"RTN","PSONVARP",132,0)
 S DIR(S,10)="    as in these examples:"
"RTN","PSONVARP",133,0)
 S DIR(S,11)=" "
"RTN","PSONVARP",134,0)
 S DIR(S,12)="       2,1  - BY ORDERABLE ITEM, THEN BY PATIENT NAME"
"RTN","PSONVARP",135,0)
 S DIR(S,13)="      5,1,4 - BY ORDER CHECKS, THEN BY PATIENT NAME, THEN BY STATUS"
"RTN","PSONVARP",136,0)
 S DIR(S,14)=" "
"RTN","PSONVARP",137,0)
 S DIR(S)=" "
"RTN","PSONVARP",138,0)
 Q
"RTN","PSONVNEW")
0^8^B25284202
"RTN","PSONVNEW",1,0)
PSONVNEW ;BIR/SAB - Add Non-VA Med orders ;7/15/03
"RTN","PSONVNEW",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**132,118**;DEC 1997
"RTN","PSONVNEW",3,0)
 ;External reference ^PS(50.606 supported by DBIA 2174
"RTN","PSONVNEW",4,0)
 ;External reference ^PS(50.7 supported by DBIA 2223
"RTN","PSONVNEW",5,0)
 ;External reference ^PS(55 supported by DBIA 2228
"RTN","PSONVNEW",6,0)
 ;External reference to ^PS(51.2 supported by DBIA 2226
"RTN","PSONVNEW",7,0)
 ;adds new non-va med to #55
"RTN","PSONVNEW",8,0)
 ;
"RTN","PSONVNEW",9,0)
 I '$D(^PS(55,DFN,0)) D
"RTN","PSONVNEW",10,0)
 .K DD,DO S DIC(0)="L",(DINUM,X)=DFN,DIC("DR")="52.1////2" D FILE^DICN D:Y<1  K DIC,DA,DR,DD,DO
"RTN","PSONVNEW",11,0)
 ..S $P(^PS(55,DFN,0),"^")=DFN,$P(^(0),"^",6)=2
"RTN","PSONVNEW",12,0)
 ..K DIK S DA=DFN,DIK="^PS(55,",DIK(1)=.01 D EN^DIK K DIK
"RTN","PSONVNEW",13,0)
 ;
"RTN","PSONVNEW",14,0)
 N PSONVA,DSC K PCOM
"RTN","PSONVNEW",15,0)
 F I=0:0 S I=$O(MSG(I)) Q:'I  D
"RTN","PSONVNEW",16,0)
 .I $P(MSG(I),"|")="NTE",$P(MSG(I),"|",2)=6 S DSC=$G(DSC)+1 S PCOM(DSC)=$P(MSG(I),"|",4) F T=0:0 S T=$O(MSG(I,T)) Q:'T  S DSC=DSC+1,PCOM(DSC)=MSG(I,T)
"RTN","PSONVNEW",17,0)
 .I $P(MSG(I),"|")="ORC" S STDT=$P(MSG(I),"|",8),STRDT=$$HL7TFM^XLFDT($P(STDT,"^",4))
"RTN","PSONVNEW",18,0)
 ;
"RTN","PSONVNEW",19,0)
 ; - Files the Non-VA Med order into the "NVA" multiple in File #55
"RTN","PSONVNEW",20,0)
 K DR,DIC,DD,DA,DO,DINUM S DA(1)=DFN,X=PSORDITE
"RTN","PSONVNEW",21,0)
 S DR="1////"_PSODDRUG_";2///"_$G(PSOLQ1I(1))_";3///"_$$ROUTE($G(ROUTE(1)))
"RTN","PSONVNEW",22,0)
 S DR=DR_";4///"_$$SCHED($P($G(QTARRAY(1)),"^"))_";7////"_$G(PLACER)_";8///"_$G(STRDT)
"RTN","PSONVNEW",23,0)
 S DR=DR_";11///"_$G(PSOLOG)_";12////"_$G(ENTERED)_";13////"_$G(LOCATION)
"RTN","PSONVNEW",24,0)
 S DIC("DR")=DR,DIC(0)="L",DIC="^PS(55,"_DFN_",""NVA"",",DLAYGO=55.05
"RTN","PSONVNEW",25,0)
 D FILE^DICN S PSONVA=+Y K DR,DIC,DD,DA,DO,DINUM
"RTN","PSONVNEW",26,0)
 ;
"RTN","PSONVNEW",27,0)
 K DSC,STDT
"RTN","PSONVNEW",28,0)
 I $P(PSODSC,"^",2)]"" D
"RTN","PSONVNEW",29,0)
 .S DSC=1,^PS(55,DFN,"NVA",PSONVA,"DSC",1,0)=$P(PSODSC,"^",2)
"RTN","PSONVNEW",30,0)
 .S ^PS(55,DFN,"NVA",PSONVA,"DSC",0)="^55.052^1^1^"_DT_"^^^^"
"RTN","PSONVNEW",31,0)
 I $O(PSODSC(0)) D
"RTN","PSONVNEW",32,0)
 .F T=0:0 S T=$O(PSODSC(T)) Q:'T  S DSC=$G(DSC)+1,^PS(55,DFN,"NVA",PSONVA,"DSC",DSC,0)=PSODSC(T)
"RTN","PSONVNEW",33,0)
 .S ^PS(55,DFN,"NVA",PSONVA,"DSC",0)="^55.052^"_DSC_"^"_DSC_"^"_DT_"^^^^"
"RTN","PSONVNEW",34,0)
 I $O(PCOM(0)) F T=0:0 S T=$O(PCOM(T)) Q:'T  D
"RTN","PSONVNEW",35,0)
 .S DSC=$G(DSC)+1,^PS(55,DFN,"NVA",PSONVA,"DSC",DSC,0)=PCOM(T)
"RTN","PSONVNEW",36,0)
 .S ^PS(55,DFN,"NVA",PSONVA,"DSC",0)="^55.052^"_DSC_"^"_DSC_"^"_DT_"^^^^"
"RTN","PSONVNEW",37,0)
 .S ^PS(55,DFN,"NVA",PSONVA,1,T,0)=PCOM(T)
"RTN","PSONVNEW",38,0)
 .S ^PS(55,DFN,"NVA",PSONVA,1,0)="^^"_T_"^"_T_"^"_DT_"^"
"RTN","PSONVNEW",39,0)
 I $G(OCOUNT) S ^PS(55,DFN,"NVA",PSONVA,"OCK",0)="^55.051^"_OCOUNT_"^"_OCOUNT F OCOUNT=1:1:OCOUNT D
"RTN","PSONVNEW",40,0)
 .S ^PS(55,DFN,"NVA",PSONVA,"OCK",OCOUNT,0)=$G(OBXAR(OCOUNT,1))_"^"_PROV
"RTN","PSONVNEW",41,0)
 .I $G(OBXAR(OCOUNT,1))]"" S ^PS(55,DFN,"NVA",PSONVA,"OCK","B",$E(OBXAR(OCOUNT,1),1,30),OCOUNT)=""
"RTN","PSONVNEW",42,0)
 .S PSOBCT=1 F LLL=2:1 Q:'$D(OBXAR(OCOUNT,LLL))  S ^PS(55,DFN,"NVA",PSONVA,"OCK",OCOUNT,"OVR",1,0)=OBXAR(OCOUNT,LLL)
"RTN","PSONVNEW",43,0)
 K HOLD,SCH,SCHED,SDL,SGL,A,W,WW,CHR,STRDT
"RTN","PSONVNEW",44,0)
 ;
"RTN","PSONVNEW",45,0)
 M PMSG=MSG
"RTN","PSONVNEW",46,0)
REIN K MSG S NULLFLDS="F JJ=0:1:LIMIT S FIELD(JJ)="""""
"RTN","PSONVNEW",47,0)
 K ^UTILITY("DIQ1",$J),DIQ S DA=$P($$SITE^VASITE(),"^")
"RTN","PSONVNEW",48,0)
 I $G(DA) S DIC=4,DIQ(0)="I",DR="99" D EN^DIQ1 S PSOHINST=$G(^UTILITY("DIQ1",$J,4,DA,99,"I")) K ^UTILITY("DIQ1",$J),DA,DR,DIQ,DIC
"RTN","PSONVNEW",49,0)
 S MSG(1)="MSH|^~\&|PHARMACY|"_$G(PSOHINST)_"|||||ORR"
"RTN","PSONVNEW",50,0)
 ;
"RTN","PSONVNEW",51,0)
 S COUNT=1,LIMIT=5 X NULLFLDS D DEM^VADPT S NAME=$G(VADM(1)) K VADM
"RTN","PSONVNEW",52,0)
 S FIELD(0)="PID",FIELD(3)=DFN,FIELD(5)=NAME
"RTN","PSONVNEW",53,0)
 D SEG^PSOHLSN1
"RTN","PSONVNEW",54,0)
 ;
"RTN","PSONVNEW",55,0)
 ;
"RTN","PSONVNEW",56,0)
 S LIMIT=19 X NULLFLDS
"RTN","PSONVNEW",57,0)
 S FIELD(0)="PV1",FIELD(2)="O",FIELD(3)=LOCATION
"RTN","PSONVNEW",58,0)
 D SEG^PSOHLSN1
"RTN","PSONVNEW",59,0)
 ;
"RTN","PSONVNEW",60,0)
 S LIMIT=15 X NULLFLDS
"RTN","PSONVNEW",61,0)
 S FIELD(0)="ORC",FIELD(1)=$S($G(REIN):"SC",1:"OK"),FIELD(2)=PLACER_"^OR",FIELD(3)=PSONVA_"N^PS",FIELD(5)="CM"
"RTN","PSONVNEW",62,0)
 S FIELD(10)=$P(^PS(55,DFN,"NVA",PSONVA,0),"^",11)_"^"_$P(^VA(200,$P(^PS(55,DFN,"NVA",PSONVA,0),"^",11),0),"^")
"RTN","PSONVNEW",63,0)
 D SEG^PSOHLSN1
"RTN","PSONVNEW",64,0)
 I $G(REIN) S MSG(COUNT)=MSG(COUNT)_"|^^^^DATE OF DEATH DELETED BY MAS.^"
"RTN","PSONVNEW",65,0)
 ;
"RTN","PSONVNEW",66,0)
 S LIMIT=1 X NULLFLDS
"RTN","PSONVNEW",67,0)
 S FIELD(0)="RXO",OI=$P(^PS(55,DFN,"NVA",PSONVA,0),"^")
"RTN","PSONVNEW",68,0)
 S FIELD(1)="^^^"_OI_"^"_$P($G(^PS(50.7,OI,0)),"^")_" "_$P($G(^PS(50.606,+$P($G(^(0)),"^",2),0)),"^")_"^99PSP"
"RTN","PSONVNEW",69,0)
 D SEG^PSOHLSN1
"RTN","PSONVNEW",70,0)
 ;
"RTN","PSONVNEW",71,0)
 S LIMIT=1 X NULLFLDS
"RTN","PSONVNEW",72,0)
 S FIELD(0)="RXE"
"RTN","PSONVNEW",73,0)
 S PSOPSTRT="",X=$P(^PS(55,DFN,"NVA",PSONVA,0),"^",9) I X S PSOPSTRT=$$FMTHL7^XLFDT(X)
"RTN","PSONVNEW",74,0)
 K X S FIELD(1)="^^^"_$G(PSOPSTRT)_"^"
"RTN","PSONVNEW",75,0)
 D SEG^PSOHLSN1
"RTN","PSONVNEW",76,0)
 ;
"RTN","PSONVNEW",77,0)
 D SEND^PSOHLSN1 K FIELDS,LIMIT,PSODSC,PSONVA,OI Q:$G(REIN)
"RTN","PSONVNEW",78,0)
 ;dc change order
"RTN","PSONVNEW",79,0)
DC F OO=0:0 S OO=$O(PMSG(OO)) Q:'OO  I $P(PMSG(OO),"|")="ORC",$P(PMSG(OO),"|",2)="XO" D  Q
"RTN","PSONVNEW",80,0)
 .F XO=0:0 S XO=$O(PMSG(XO)) Q:'XO  I $P(PMSG(XO),"|")="ZRX" S POERR("PSOFILNM")=$P(PMSG(XO),"|",2) Q
"RTN","PSONVNEW",81,0)
 I +$G(POERR("PSOFILNM")),$G(^PS(55,DFN,"NVA",+$G(POERR("PSOFILNM")),0)) S PDFN=DFN D XO^PSOORUTL
"RTN","PSONVNEW",82,0)
 K XO,OO,PMSG
"RTN","PSONVNEW",83,0)
 Q
"RTN","PSONVNEW",84,0)
SCHED(SCH) ; Returns the SCHEDULE description
"RTN","PSONVNEW",85,0)
 N SCHED,CNT,FND,A,I,K,HOLD
"RTN","PSONVNEW",86,0)
 S SCHED="" Q:$G(SCH)="" SCHED
"RTN","PSONVNEW",87,0)
 ;
"RTN","PSONVNEW",88,0)
 F A=0:0 S A=$O(^PS(51.1,"B",SCH,A)) Q:'A  D  I SCHED'="" Q
"RTN","PSONVNEW",89,0)
 . S:$P($G(^PS(51.1,A,0)),"^",8)'="" SCHED=$P($G(^(0)),"^",8)
"RTN","PSONVNEW",90,0)
 I SCHED'="" G QSCH
"RTN","PSONVNEW",91,0)
 ;
"RTN","PSONVNEW",92,0)
 I $G(^PS(51,"A",SCH))'="" S SCHED=$P(^PS(51,"A",SCH),"^") G QSCH
"RTN","PSONVNEW",93,0)
 ;
"RTN","PSONVNEW",94,0)
 S CNT=$L(SCH," "),FND=0
"RTN","PSONVNEW",95,0)
 F I=1:1:CNT S (WORD,HOLD(I))=$P(SCH," ",I) D
"RTN","PSONVNEW",96,0)
 . I WORD="" Q
"RTN","PSONVNEW",97,0)
 . F K=0:0 S K=$O(^PS(51.1,"B",WORD,K)) Q:'K  D  I FND Q
"RTN","PSONVNEW",98,0)
 . . I $P($G(^PS(51.1,K,0)),"^",8)'="" D
"RTN","PSONVNEW",99,0)
 . . . S HOLD(I)=$P($G(^PS(51.1,K,0)),"^",8),FND=1
"RTN","PSONVNEW",100,0)
 . I $G(^PS(51,"A",WORD))]"" S HOLD(I)=$P(^(WORD),"^")
"RTN","PSONVNEW",101,0)
 S FND=0 F K=1:1:CNT S SCHED=SCHED_$S($G(FND):" ",1:"")_$G(HOLD(K)),FND=1
"RTN","PSONVNEW",102,0)
 ;
"RTN","PSONVNEW",103,0)
QSCH Q SCHED
"RTN","PSONVNEW",104,0)
 ;
"RTN","PSONVNEW",105,0)
ROUTE(RTIEN) ; Returns the ROUTE description
"RTN","PSONVNEW",106,0)
 N X
"RTN","PSONVNEW",107,0)
 Q:'$G(RTIEN) "" S X=$G(^PS(51.2,RTIEN,0))
"RTN","PSONVNEW",108,0)
 Q $S($P(X,"^",2)'="":$P(X,"^",2),1:$P(X,"^"))
"RTN","PSONVNEW",109,0)
 ;
"RTN","PSONVNEW",110,0)
APSOD ;dc non-va meds because of date of death entry called from psocan3
"RTN","PSONVNEW",111,0)
 N PDA,PDFN ;,POERR("PSOFILNM")
"RTN","PSONVNEW",112,0)
 F PDA=0:0 S PDA=$O(^PS(55,PSODFN,"NVA",PDA)) Q:'PDA  I '$P(^PS(55,PSODFN,"NVA",PDA,0),"^",6),'$P(^(0),"^",7) D
"RTN","PSONVNEW",113,0)
 .S POERR("PSOFILNM")=PDA,PDFN=PSODFN D XO^PSOORUTL
"RTN","PSONVNEW",114,0)
 Q
"RTN","PSOORUTL")
0^7^B41060802
"RTN","PSOORUTL",1,0)
PSOORUTL ;ISC BHAM/SAB  - updates order status from oerr ;02/22/95
"RTN","PSOORUTL",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**14,46,146,132,118**;DEC 1997
"RTN","PSOORUTL",3,0)
 ;External reference to EN^ORERR - 2187
"RTN","PSOORUTL",4,0)
 ;External reference to ^PS(55 - 2228
"RTN","PSOORUTL",5,0)
 ;Input variables, poerr("psofilnm")=pharmacy pointer # from OE/RR, poerr("stat")=Order Control status
"RTN","PSOORUTL",6,0)
 ;poerr("pharmst")=will contain 'ZE'if rx has expired, poerr("comm")=Comments, poerr("user")=Person placing request
"RTN","PSOORUTL",7,0)
EN(POERR) ;
"RTN","PSOORUTL",8,0)
 N PSZORS,III
"RTN","PSOORUTL",9,0)
 F OO=0:0 S OO=$O(MSG(OO)) Q:'OO  I $P(MSG(OO),"|")="ZRN" S NVA=1
"RTN","PSOORUTL",10,0)
 I $G(NVA) G NVA
"RTN","PSOORUTL",11,0)
 G:POERR("PSOFILNM")'["S" RXO S III=+POERR("PSOFILNM")
"RTN","PSOORUTL",12,0)
 S ORS=0 I $D(^PS(52.41,III,0)) D  G PEXIT
"RTN","PSOORUTL",13,0)
 .Q:$P($G(^PS(52.41,III,0)),"^",3)="RF"
"RTN","PSOORUTL",14,0)
 .I $G(PDFN),$P($G(^PS(52.41,III,0)),"^",2),PDFN'=$P(^PS(52.41,III,0),"^",2) S ORS=1
"RTN","PSOORUTL",15,0)
RXO S III=POERR("PSOFILNM") I $D(^PSRX(III,0)) D  G PEXIT
"RTN","PSOORUTL",16,0)
 .I $G(PDFN),$P($G(^PSRX(III,0)),"^",2),PDFN'=$P(^PSRX(III,0),"^",2) S ORS=1
"RTN","PSOORUTL",17,0)
 S (ORS,PSZORS)=1
"RTN","PSOORUTL",18,0)
PEXIT I $G(ORS) S POERR("STAT")=$S(POERR("STAT")="CA":"UC",POERR("STAT")="DC":"UD",POERR("STAT")="HD":"UH",1:"UR"),POERR("FILLER")="",POERR("COMM")=$S($G(PSZORS):"Unable to locate order.",1:"Patient does not match.") K ORS,PSZORS,III Q
"RTN","PSOORUTL",19,0)
 S POERR("PHARMST")="" G:POERR("STAT")="HD"!(POERR("STAT")="RL") HD
"RTN","PSOORUTL",20,0)
 S ORS=0 I POERR("PSOFILNM")["S" S DA=+POERR("PSOFILNM") I $D(^PS(52.41,DA,0)) D  G EXIT
"RTN","PSOORUTL",21,0)
 .Q:$P($G(^PS(52.41,DA,0)),"^",3)="RF"
"RTN","PSOORUTL",22,0)
 .S $P(^PS(52.41,DA,0),"^",3)="DC",POERR("PLACE")=$P(^(0),"^"),POERR("STAT")="CR",POERR("FILLER")=DA_"^P"
"RTN","PSOORUTL",23,0)
 .K ^PS(52.41,"AOR",+$P($G(^PS(52.41,DA,0)),"^",2),+$P($G(^PS(52.41,DA,"INI")),"^"),DA)
"RTN","PSOORUTL",24,0)
 .S:$G(POERR("COMM"))']"" POERR("COMM")="Order Canceled by OE/RR before finishing." S ORS=1,$P(^PS(52.41,DA,4),"^")=$G(POERR("COMM"))
"RTN","PSOORUTL",25,0)
 S DA=POERR("PSOFILNM") I $D(^PSRX(DA,0)) D  S $P(^PSRX(DA,"STA"),"^")=14 D CAN^PSOTPCAN(DA) G EXIT
"RTN","PSOORUTL",26,0)
 .;cancel/discontinue action
"RTN","PSOORUTL",27,0)
 .S POERR("PLACE")=+$P($G(^PSRX(DA,"OR1")),"^",2),POERR("STAT")=$S(POERR("STAT")="CA":"CR",1:"DR"),POERR("FILLER")=DA_"^R"
"RTN","PSOORUTL",28,0)
 .S:'$D(POERR("COMM")) POERR("COMM")="Prescription DISCONTINUED by OERR"
"RTN","PSOORUTL",29,0)
 .S ORS=1 D CAN
"RTN","PSOORUTL",30,0)
EXIT I '$G(ORS) D
"RTN","PSOORUTL",31,0)
 .S POERR("STAT")=$S(POERR("STAT")="CA":"UC",POERR("STAT")="DC":"UD",POERR("STAT")="HD":"UH",1:"UR"),POERR("FILLER")="",POERR("COMM")="Order was not located by Pharmacy"
"RTN","PSOORUTL",32,0)
 K EXP,ORS,DA,ACOM,RXDA,SUSD,PSUS,RXF,I,FDA,DIC,DIE,DR,Y,X,%,%I,%H,RSDT,ACNT,ACT,DIK,FDT,IR,LFD,NOW,ORD,PSDA,PSCDA,PSODFN,PSUS,RF,RFCNT,RXN,RXP,RXREF,SD,SUB
"RTN","PSOORUTL",33,0)
 Q
"RTN","PSOORUTL",34,0)
CAN S ACOM="Discontinued by OE/RR." I $P(^PSRX(DA,"STA"),"^")=3!($P(^("STA"),"^")=16) D
"RTN","PSOORUTL",35,0)
 .S ACOM="Discontinued by OE/RR while on hold. " K:$P(^PSRX(DA,"H"),"^") ^PSRX("AH",$P(^PSRX(DA,"H"),"^"),DA) S ^PSRX(DA,"H")=""
"RTN","PSOORUTL",36,0)
 .I $P(^PSRX(DA,0),"^",13),'$O(^PSRX(DA,1,0)) S DIE=52,DR="22///"_$E($P(^PSRX(DA,0),"^",13),1,7) D ^DIE K DIE,DR Q
"RTN","PSOORUTL",37,0)
 .S (IFN,SUSD)=0 F  S IFN=$O(^PSRX(DA,1,IFN)) Q:'IFN  S SUSD=IFN,RFDT=$P(^PSRX(DA,1,IFN,0),"^")
"RTN","PSOORUTL",38,0)
 .Q:'$G(SUSD)  I '$P(^PSRX(DA,1,SUSD,0),"^",18) S PSDTEST=0 D  I 'PSDTEST K ^PSRX(DA,1,SUSD),^PSRX("AD",RFDT,DA,SUSD),^PSRX(DA,1,"B",RFDT,SUSD),IFN,SUSD,RFDT
"RTN","PSOORUTL",39,0)
 ..F PDA=0:0 S PDA=$O(^PSRX(DA,"L",PDA)) Q:'PDA  I $P($G(^PSRX(DA,"L",PDA,0)),"^",2)=SUSD S PSDTEST=1
"RTN","PSOORUTL",40,0)
 ..K CMOP D ^PSOCMOPA I $G(CMOP(CMOP("L")))="",$G(CMOP("S"))'="L" Q
"RTN","PSOORUTL",41,0)
 ..S PSDTEST=1
"RTN","PSOORUTL",42,0)
 S RXDA=DA,(DA,SUSDA)=$O(^PS(52.5,"B",DA,0)) D:DA
"RTN","PSOORUTL",43,0)
 .S SUSD=$P($G(^PS(52.5,DA,0)),"^",2)
"RTN","PSOORUTL",44,0)
 .S:+$G(^PS(52.5,DA,"P"))'=1 ACOM="Discontinued by OE/RR while suspended."
"RTN","PSOORUTL",45,0)
 .I $O(^PSRX(RXDA,1,0)) S DA=RXDA D:'$G(^PS(52.5,+SUSDA,"P")) REF^PSOCAN2
"RTN","PSOORUTL",46,0)
 .S DA=SUSDA,DIK="^PS(52.5," D ^DIK K DIK
"RTN","PSOORUTL",47,0)
 K SUSD,SUSDA S DA=RXDA,RXREF=0,PSODFN=+$P(^PSRX(DA,0),"^",2) D
"RTN","PSOORUTL",48,0)
 .S ACNT=0 F SUB=0:0 S SUB=$O(^PSRX(DA,"A",SUB)) Q:'SUB  S ACNT=SUB
"RTN","PSOORUTL",49,0)
 .S RFCNT=0 F RF=0:0 S RF=$O(^PSRX(DA,1,RF)) Q:'RF  S RFCNT=RF S:RF>5 RFCNT=RF+1
"RTN","PSOORUTL",50,0)
 .D NOW^%DTC S ^PSRX(DA,"A",0)="^52.3DA^"_(ACNT+1)_"^"_(ACNT+1),^PSRX(DA,"A",ACNT+1,0)=%_"^C^"_POERR("USER")_"^"_RFCNT_"^"_$G(ACOM)
"RTN","PSOORUTL",51,0)
 .S REA="C" D EXP^PSOHELP1
"RTN","PSOORUTL",52,0)
 I $G(^PS(52.4,DA,0))]"" S PSCDA=DA,DIK="^PS(52.4," D ^DIK S DA=PSCDA K DIK,PSCDA
"RTN","PSOORUTL",53,0)
 Q
"RTN","PSOORUTL",54,0)
HD ;place order on hold
"RTN","PSOORUTL",55,0)
 G:POERR("STAT")="RL" REL^PSOORUT1 S (ACT,ORS)=0 I POERR("PSOFILNM")["S" D  G EXIT
"RTN","PSOORUTL",56,0)
 .S DA=+POERR("PSOFILNM")
"RTN","PSOORUTL",57,0)
 .Q:'$D(^PS(52.41,DA,0))  Q:$P(^PS(52.41,DA,0),"^",3)="RF"
"RTN","PSOORUTL",58,0)
 .S $P(^PS(52.41,DA,0),"^",3)="HD",POERR("STAT")="HR",POERR("FILLER")=DA_"^P"
"RTN","PSOORUTL",59,0)
 .S:$G(POERR("COMM"))']"" POERR("COMM")="Order PLACED on HOLD by OERR before finished." S $P(^PS(52.41,DA,4),"^")=POERR("COMM"),ORS=1
"RTN","PSOORUTL",60,0)
 S DA=POERR("PSOFILNM") I $D(^PSRX(DA,0)) S ORS=1,PSDA=DA D  G EXIT
"RTN","PSOORUTL",61,0)
 .S POERR("FILLER")=DA_"^R"
"RTN","PSOORUTL",62,0)
 .S:'$D(POERR("COMM")) POERR("COMM")="Prescription Placed on HOLD by OERR"
"RTN","PSOORUTL",63,0)
 .I DT>$P(^PSRX(DA,2),"^",6) S EXP=$P(^(2),"^",6) S:$P(^PSRX(DA,"STA"),"^")<12 $P(^PSRX(DA,"STA"),"^")=11,PSOEXFLG=1 S POERR("STAT")="UH",POERR("COMM")="Prescription EXPIRED on "_$E(EXP,4,5)_"/"_$E(EXP,6,7)_"/"_$E(EXP,2,3)_"." D  Q
"RTN","PSOORUTL",64,0)
 ..D ECAN^PSOUTL(DA)
"RTN","PSOORUTL",65,0)
 .I $P(^PSRX(DA,"STA"),"^")=3!($P(^("STA"),"^")>11) S POERR("STAT")="UH",POERR("COMM")="Unable to place on HOLD" Q
"RTN","PSOORUTL",66,0)
 .S $P(^PSRX(DA,"STA"),"^")=16,POERR("STAT")="HR",^PSRX(DA,"H")=99_"^"_POERR("COMM")_"^"_DT
"RTN","PSOORUTL",67,0)
 .S (PSUS,RXF)=0 F I=0:0 S I=$O(^PSRX(DA,1,I)) Q:'I  S RXF=I S:RXF>1 RSDT=$P(^(RXF-1,0),"^")
"RTN","PSOORUTL",68,0)
 .S DA=$O(^PS(52.5,"B",PSDA,0)) I DA S DIK="^PS(52.5,",PSUS=1 D ^DIK K DA,DIK
"RTN","PSOORUTL",69,0)
 .S DA=PSDA D ACT
"RTN","PSOORUTL",70,0)
 I 'ORS S POERR("COMM")="Unable to place order on HOLD" G EXIT
"RTN","PSOORUTL",71,0)
 Q
"RTN","PSOORUTL",72,0)
NVA ;non-va med action
"RTN","PSOORUTL",73,0)
 N DIE,DR,DA K NVA
"RTN","PSOORUTL",74,0)
 I POERR("PSOFILNM")'["N"!('$D(^PS(55,PDFN,"NVA",+POERR("PSOFILNM"),0))) D EN^ORERR("Order was not located by Pharmacy",.MSG) Q
"RTN","PSOORUTL",75,0)
 I $G(OR("STAT"))'="CA",$G(OR("STAT"))'="DC" D EN^ORERR("Invalid Order Control Code",.MSG) Q
"RTN","PSOORUTL",76,0)
XO S ORD=+POERR("PSOFILNM")
"RTN","PSOORUTL",77,0)
 D NOW^%DTC S DR="5///"_$S($G(PSODEATH):2,1:1)_";6///"_%
"RTN","PSOORUTL",78,0)
 S DIE="^PS(55,"_PDFN_",""NVA"",",DA(1)=PDFN,DA=ORD D ^DIE
"RTN","PSOORUTL",79,0)
 S PLACER=$P(^PS(55,PDFN,"NVA",ORD,0),"^",8)
"RTN","PSOORUTL",80,0)
 K MSG S NULLFLDS="F JJ=0:1:LIMIT S FIELD(JJ)="""""
"RTN","PSOORUTL",81,0)
 K ^UTILITY("DIQ1",$J),DIQ S DA=$P($$SITE^VASITE(),"^")
"RTN","PSOORUTL",82,0)
 I $G(DA) S DIC=4,DIQ(0)="I",DR="99" D EN^DIQ1 S PSOHINST=$G(^UTILITY("DIQ1",$J,4,DA,99,"I")) K ^UTILITY("DIQ1",$J),DA,DR,DIQ,DIC
"RTN","PSOORUTL",83,0)
 S MSG(1)="MSH|^~\&|PHARMACY|"_$G(PSOHINST)_"|||||ORR"
"RTN","PSOORUTL",84,0)
 ;
"RTN","PSOORUTL",85,0)
 S DFN=PDFN,COUNT=1,LIMIT=5 X NULLFLDS D DEM^VADPT S NAME=$G(VADM(1)) K VADM
"RTN","PSOORUTL",86,0)
 S FIELD(0)="PID",FIELD(3)=DFN,FIELD(5)=NAME
"RTN","PSOORUTL",87,0)
 D SEG^PSOHLSN1
"RTN","PSOORUTL",88,0)
 ;
"RTN","PSOORUTL",89,0)
 S LIMIT=15 X NULLFLDS
"RTN","PSOORUTL",90,0)
 S FIELD(0)="ORC",FIELD(2)=PLACER_"^OR",FIELD(3)=+POERR("PSOFILNM")_"N^PS"
"RTN","PSOORUTL",91,0)
 S FIELD(1)="SC",FIELD(5)="DC"
"RTN","PSOORUTL",92,0)
 D SEG^PSOHLSN1
"RTN","PSOORUTL",93,0)
 I $G(PSODEATH) S MSG(COUNT)=MSG(COUNT)_"|^^^^DATE OF DEATH ENTERED BY MAS.^"
"RTN","PSOORUTL",94,0)
 ;
"RTN","PSOORUTL",95,0)
 D SEND^PSOHLSN1 K FIELDS,LIMIT,PSODSC,PSONVA,OI
"RTN","PSOORUTL",96,0)
 Q
"RTN","PSOORUTL",97,0)
 ;
"RTN","PSOORUTL",98,0)
ACT ;activity log
"RTN","PSOORUTL",99,0)
 D NOW^%DTC S NOW=%
"RTN","PSOORUTL",100,0)
 S IR=0 F FDA=0:0 S FDA=$O(^PSRX(DA,"A",FDA)) Q:'FDA  S IR=FDA
"RTN","PSOORUTL",101,0)
 S IR=IR+1,^PSRX(DA,"A",0)="^52.3DA^"_IR_"^"_IR
"RTN","PSOORUTL",102,0)
 S ^PSRX(DA,"A",IR,0)=NOW_"^"_$S(ACT:"U",1:"H")_"^"_POERR("USER")_"^"_RXF_"^"_"RX "_$S('ACT:"placed in a",1:"removed from")_" HOLD status "_$S(+$G(PSUS):"and removed from SUSPENSE ",1:"")_"("_$E(DT,4,5)_"-"_$E(DT,6,7)_"-"_$E(DT,2,3)_") by OERR."
"RTN","PSOORUTL",103,0)
 Q
"RTN","PSOPOST9")
0^5^B7851673
"RTN","PSOPOST9",1,0)
PSOPOST9 ;BIR/MR-Reminders Index Post-Install Routine ;10/12/2004
"RTN","PSOPOST9",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**118**;DEC 1997
"RTN","PSOPOST9",3,0)
 ;Reference to PXRMP12I supported by DBIA 3736
"RTN","PSOPOST9",4,0)
 ;
"RTN","PSOPOST9",5,0)
CPSRX ;Create cross-references for Prescription file.
"RTN","PSOPOST9",6,0)
 N IND,MSG,NAME,RESULT,XREF
"RTN","PSOPOST9",7,0)
 D MES^XPDUTL("Creating Prescription file cross-references...")
"RTN","PSOPOST9",8,0)
 S XREF("FILE")=52
"RTN","PSOPOST9",9,0)
 S XREF("WHOLE KILL")="Q"
"RTN","PSOPOST9",10,0)
 S XREF("TYPE")="MU"
"RTN","PSOPOST9",11,0)
 S XREF("SHORT DESCR")="Clinical Reminders index."
"RTN","PSOPOST9",12,0)
 S XREF("DESCR",1)="This cross-reference builds two indexes, one for finding"
"RTN","PSOPOST9",13,0)
 S XREF("DESCR",2)="all patients with a particular drug and one for"
"RTN","PSOPOST9",14,0)
 S XREF("DESCR",3)="finding all the drugs a patient has. The indexes are"
"RTN","PSOPOST9",15,0)
 S XREF("DESCR",4)="stored in the Clinical Reminders index global as:"
"RTN","PSOPOST9",16,0)
 S XREF("DESCR",5)=" ^PXRMINDX(52,""IP"",DRUG,DFN,START DATE,STOP DATE,DAS)"
"RTN","PSOPOST9",17,0)
 S XREF("DESCR",6)=" ^PXRMINDX(52,""PI"",DFN,DRUG,START DATE,STOP DATE,DAS)"
"RTN","PSOPOST9",18,0)
 S XREF("DESCR",8)="respectively. START DATE is the RELEASE DATE and STOP DATE is"
"RTN","PSOPOST9",19,0)
 S XREF("DESCR",9)="calculated by adding the DAYS SUPPLY to the RELEASE DATE."
"RTN","PSOPOST9",20,0)
 S XREF("DESCR",10)="For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","PSOPOST9",21,0)
 S XREF("USE")="ACTION"
"RTN","PSOPOST9",22,0)
 S XREF("EXECUTION")="F"
"RTN","PSOPOST9",23,0)
 S XREF("ACTIVITY")="IR"
"RTN","PSOPOST9",24,0)
 ;
"RTN","PSOPOST9",25,0)
 ;Original node
"RTN","PSOPOST9",26,0)
 S XREF("ROOT FILE")=52
"RTN","PSOPOST9",27,0)
 S XREF("NAME")="ACRO"
"RTN","PSOPOST9",28,0)
 S XREF("SET")="D SKIDX^PSOPXRMU(.X,.DA,""O"",""S"")"
"RTN","PSOPOST9",29,0)
 S XREF("KILL")="D SKIDX^PSOPXRMU(.X,.DA,""O"",""K"")"
"RTN","PSOPOST9",30,0)
 S XREF("VAL",1)=8
"RTN","PSOPOST9",31,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","PSOPOST9",32,0)
 S XREF("VAL",2)=31
"RTN","PSOPOST9",33,0)
 S XREF("VAL",2,"SUBSCRIPT")=2
"RTN","PSOPOST9",34,0)
 D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","PSOPOST9",35,0)
 I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","PSOPOST9",36,0)
 ;
"RTN","PSOPOST9",37,0)
 ;Refill node
"RTN","PSOPOST9",38,0)
 S XREF("ROOT FILE")=52.1
"RTN","PSOPOST9",39,0)
 S XREF("NAME")="ACRR"
"RTN","PSOPOST9",40,0)
 S XREF("SET")="D SKIDX^PSOPXRMU(.X,.DA,""R"",""S"")"
"RTN","PSOPOST9",41,0)
 S XREF("KILL")="D SKIDX^PSOPXRMU(.X,.DA,""R"",""K"")"
"RTN","PSOPOST9",42,0)
 S XREF("VAL",1)=1.1
"RTN","PSOPOST9",43,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","PSOPOST9",44,0)
 S XREF("VAL",2)=17
"RTN","PSOPOST9",45,0)
 S XREF("VAL",2,"SUBSCRIPT")=2
"RTN","PSOPOST9",46,0)
 D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","PSOPOST9",47,0)
 I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","PSOPOST9",48,0)
 ;
"RTN","PSOPOST9",49,0)
 ;Partial node
"RTN","PSOPOST9",50,0)
 S XREF("ROOT FILE")=52.2
"RTN","PSOPOST9",51,0)
 S XREF("NAME")="ACRP"
"RTN","PSOPOST9",52,0)
 S XREF("SET")="D SKIDX^PSOPXRMU(.X,.DA,""P"",""S"")"
"RTN","PSOPOST9",53,0)
 S XREF("KILL")="D SKIDX^PSOPXRMU(.X,.DA,""P"",""K"")"
"RTN","PSOPOST9",54,0)
 S XREF("VAL",1)=.041
"RTN","PSOPOST9",55,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","PSOPOST9",56,0)
 S XREF("VAL",2)=8
"RTN","PSOPOST9",57,0)
 S XREF("VAL",2,"SUBSCRIPT")=2
"RTN","PSOPOST9",58,0)
 D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","PSOPOST9",59,0)
 I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","PSOPOST9",60,0)
 D MES^XPDUTL("OK!")
"RTN","PSOPOST9",61,0)
 Q
"RTN","PSOPOST9",62,0)
 ;
"RTN","PSOPXRM1")
0^3^B4717969
"RTN","PSOPXRM1",1,0)
PSOPXRM1 ;BHAM ISC/MR - Returns Patient's Prescrition info ; 07/12/2004
"RTN","PSOPXRM1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**118**;DEC 1997
"RTN","PSOPXRM1",3,0)
 ;
"RTN","PSOPXRM1",4,0)
NVA(DAS,DATA) ;Return data on non-VA meds.
"RTN","PSOPXRM1",5,0)
 N EM,IND1,IND2,IND3,IND4,TEMP,TEMP1
"RTN","PSOPXRM1",6,0)
 S IND1=$P(DAS,";",1),IND2=$P(DAS,";",2),IND3=$P(DAS,";",3),IND4=$P(DAS,";",4)
"RTN","PSOPXRM1",7,0)
 ;W !,"IN NVA^PSOPXRM1" BREAK
"RTN","PSOPXRM1",8,0)
 S TEMP=^PS(55,IND1,IND2,IND3,IND4)
"RTN","PSOPXRM1",9,0)
 S TEMP1=^PS(50.7,$P(TEMP,U,1),0)
"RTN","PSOPXRM1",10,0)
 ;DBIA #2223
"RTN","PSOPXRM1",11,0)
 S DATA("ORDERABLE ITEM")=$P(TEMP1,U,1)
"RTN","PSOPXRM1",12,0)
 ;DBIA #2174
"RTN","PSOPXRM1",13,0)
 S DATA("DOSAGE FORM")=^PS(50.606,$P(TEMP1,U,2),0)
"RTN","PSOPXRM1",14,0)
 S DATA("DISPENSE DRUG")=$P(TEMP,U,2)
"RTN","PSOPXRM1",15,0)
 S DATA("DOSAGE")=$P(TEMP,U,3)
"RTN","PSOPXRM1",16,0)
 S DATA("MEDICATION ROUTE")=$P(TEMP,U,4)
"RTN","PSOPXRM1",17,0)
 S DATA("SCHEDULE")=$P(TEMP,U,5)
"RTN","PSOPXRM1",18,0)
 S TEMP1=$P(TEMP,U,6)
"RTN","PSOPXRM1",19,0)
 S DATA("STATUS")=$S(TEMP1="":"ACTIVE",1:$$EXTERNAL^DILFD(55.05,5,"",TEMP1,.EM))
"RTN","PSOPXRM1",20,0)
 S DATA("DISCONTINUED DATE")=$P(TEMP,U,7)
"RTN","PSOPXRM1",21,0)
 S DATA("ORDER NUMBER")=$P(TEMP,U,8)
"RTN","PSOPXRM1",22,0)
 S DATA("START DATE")=$P(TEMP,U,9)
"RTN","PSOPXRM1",23,0)
 S DATA("DOCUMENTED DATE")=$P(TEMP,U,10)
"RTN","PSOPXRM1",24,0)
 S DATA("DOCUMENTED BY")=$P(TEMP,U,11)
"RTN","PSOPXRM1",25,0)
 S DATA("CLINIC")=$P(TEMP,U,12)
"RTN","PSOPXRM1",26,0)
 ;W !,"NVA^PSOPXRM1 DONE" BREAK
"RTN","PSOPXRM1",27,0)
 Q
"RTN","PSOPXRM1",28,0)
 ;
"RTN","PSOPXRM1",29,0)
 ;====================================================
"RTN","PSOPXRM1",30,0)
PSRX(DAS,RXAR) ; Returns Rx Information
"RTN","PSOPXRM1",31,0)
 ; Input:  DAS  - String containing the ^PSRX location where the data
"RTN","PSOPXRM1",32,0)
 ;                is located, separated by ";" (semi-colon).
"RTN","PSOPXRM1",33,0)
 ;                Example: "329832;1;1;0" -> ^PSRX(329832,1,1,0)
"RTN","PSOPXRM1",34,0)
 ;Output: .RXAR - Array/Global to be returned with the Rx Info (by Ref)
"RTN","PSOPXRM1",35,0)
 ;                Return:  RXAR(Field Name)=Internal Value
"RTN","PSOPXRM1",36,0)
 ;
"RTN","PSOPXRM1",37,0)
 N SB1,SB2,SB3,I,DA
"RTN","PSOPXRM1",38,0)
 ;
"RTN","PSOPXRM1",39,0)
 ; - Retrieving ^PSRX subscripts
"RTN","PSOPXRM1",40,0)
 F I=1:1:3 S @("SB"_I)=$P(DAS,";",I)
"RTN","PSOPXRM1",41,0)
 ;
"RTN","PSOPXRM1",42,0)
 ; - Call appropriate sub-routine (Original, Refill or Partial)
"RTN","PSOPXRM1",43,0)
 S DA=SB1 K RXAR D @($S(SB3="":"ORIG",SB2'="P":"REFL",1:"PRTL"))
"RTN","PSOPXRM1",44,0)
 ;
"RTN","PSOPXRM1",45,0)
 ; - Retrieve common fields
"RTN","PSOPXRM1",46,0)
 S RXAR("STATUS")=+$G(^PSRX(DA,"STA"))
"RTN","PSOPXRM1",47,0)
 ;
"RTN","PSOPXRM1",48,0)
END Q
"RTN","PSOPXRM1",49,0)
 ;
"RTN","PSOPXRM1",50,0)
ORIG ; - Retrieve Original fields
"RTN","PSOPXRM1",51,0)
 N RX0,RX2 S RX0=$G(^PSRX(DA,0)),RX2=$G(^PSRX(DA,2))
"RTN","PSOPXRM1",52,0)
 S RXAR("DAYS SUPPLY")=$P(RX0,"^",8)
"RTN","PSOPXRM1",53,0)
 S RXAR("PHARMACIST")=$P(RX2,"^",3)
"RTN","PSOPXRM1",54,0)
 S RXAR("RELEASED DATE/TIME")=$P(RX2,"^",13)
"RTN","PSOPXRM1",55,0)
 Q
"RTN","PSOPXRM1",56,0)
 ;
"RTN","PSOPXRM1",57,0)
REFL ; - Retrieve Refill fields
"RTN","PSOPXRM1",58,0)
 N RF0 S RF0=$G(^PSRX(DA,1,SB3,0))
"RTN","PSOPXRM1",59,0)
 S RXAR("DAYS SUPPLY")=$P(RF0,"^",10)
"RTN","PSOPXRM1",60,0)
 S RXAR("PHARMACIST")=$P(RF0,"^",5)
"RTN","PSOPXRM1",61,0)
 S RXAR("RELEASED DATE/TIME")=$P(RF0,"^",18)
"RTN","PSOPXRM1",62,0)
 Q
"RTN","PSOPXRM1",63,0)
 ;
"RTN","PSOPXRM1",64,0)
PRTL ; - Retrieve Partial fields
"RTN","PSOPXRM1",65,0)
 N PT0 S PT0=$G(^PSRX(DA,"P",SB3,0))
"RTN","PSOPXRM1",66,0)
 S RXAR("DAYS SUPPLY")=$P(PT0,"^",10)
"RTN","PSOPXRM1",67,0)
 S RXAR("PHARMACIST")=$P(PT0,"^",5)
"RTN","PSOPXRM1",68,0)
 S RXAR("RELEASED DATE/TIME")=$P(PT0,"^",19)
"RTN","PSOPXRM1",69,0)
 Q
"RTN","PSOPXRMI")
0^4^B9609135
"RTN","PSOPXRMI",1,0)
PSOPXRMI ; ISC/MFR - Build Reminders Indexes for PSRX ;06/18/2003
"RTN","PSOPXRMI",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**118**;DEC 1997
"RTN","PSOPXRMI",3,0)
 ;External reference to PXRMSXRM is supported by DBIA 4113
"RTN","PSOPXRMI",4,0)
 ;External reference to File ^PXRMINDX( supported by DBIA 4114
"RTN","PSOPXRMI",5,0)
 ;
"RTN","PSOPXRMI",6,0)
PSRX ;Build the index for the Prescription File.
"RTN","PSOPXRMI",7,0)
 N DA,DA1,DAS,DATE,DSUP,DFN,DRUG,END,ENTRIES,GLOBAL,IDEN,IND,INS
"RTN","PSOPXRMI",8,0)
 N NE,NERROR,RDATE,SDATE,START,TENP,TEXT
"RTN","PSOPXRMI",9,0)
 ;Don't leave any old stuff around.
"RTN","PSOPXRMI",10,0)
 K ^PXRMINDX(52)
"RTN","PSOPXRMI",11,0)
 S GLOBAL=$$GET1^DID(52,"","","GLOBAL NAME")
"RTN","PSOPXRMI",12,0)
 S ENTRIES=$P(^PSRX(0),U,4)
"RTN","PSOPXRMI",13,0)
 S TENP=ENTRIES/10
"RTN","PSOPXRMI",14,0)
 S TENP=+$P(TENP,".",1)
"RTN","PSOPXRMI",15,0)
 I TENP<1 S TENP=1
"RTN","PSOPXRMI",16,0)
 D BMES^XPDUTL("Building indexes for PRESCRIPTION FILE")
"RTN","PSOPXRMI",17,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","PSOPXRMI",18,0)
 D MES^XPDUTL(TEXT)
"RTN","PSOPXRMI",19,0)
 S START=$H
"RTN","PSOPXRMI",20,0)
 S (DA1,IND,NE,NERROR)=0
"RTN","PSOPXRMI",21,0)
 F  S DA1=+$O(^PSRX(DA1)) Q:DA1=0  D
"RTN","PSOPXRMI",22,0)
 . S IND=IND+1
"RTN","PSOPXRMI",23,0)
 . I IND#TENP=0 D
"RTN","PSOPXRMI",24,0)
 .. S TEXT="Processing entry "_IND
"RTN","PSOPXRMI",25,0)
 .. D MES^XPDUTL(TEXT)
"RTN","PSOPXRMI",26,0)
 . I IND#10000=0 W "."
"RTN","PSOPXRMI",27,0)
 . S TEMP=$G(^PSRX(DA1,0))
"RTN","PSOPXRMI",28,0)
 . S DFN=$P(TEMP,U,2)
"RTN","PSOPXRMI",29,0)
 . I DFN="" D  Q
"RTN","PSOPXRMI",30,0)
 .. S IDEN=DA1_" missing DFN"
"RTN","PSOPXRMI",31,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,IDEN,.NERROR)
"RTN","PSOPXRMI",32,0)
 . S DRUG=$P(TEMP,U,6)
"RTN","PSOPXRMI",33,0)
 . I DRUG="" D  Q
"RTN","PSOPXRMI",34,0)
 .. S IDEN=DA1_" missing drug"
"RTN","PSOPXRMI",35,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,IDEN,.NERROR) Q
"RTN","PSOPXRMI",36,0)
 . S DSUP=$P(TEMP,U,8)
"RTN","PSOPXRMI",37,0)
 . I DSUP="" D  Q
"RTN","PSOPXRMI",38,0)
 .. S IDEN=DA1_" missing days supply"
"RTN","PSOPXRMI",39,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,IDEN,.NERROR)
"RTN","PSOPXRMI",40,0)
 . S RDATE=+$P($G(^PSRX(DA1,2)),U,13)
"RTN","PSOPXRMI",41,0)
 . I RDATE>0 D
"RTN","PSOPXRMI",42,0)
 .. S SDATE=+$$FMADD^XLFDT(RDATE,DSUP)
"RTN","PSOPXRMI",43,0)
 .. S DAS=DA1_";2"
"RTN","PSOPXRMI",44,0)
 .. S ^PXRMINDX(52,"IP",DRUG,DFN,RDATE,SDATE,DAS)=""
"RTN","PSOPXRMI",45,0)
 .. S ^PXRMINDX(52,"PI",DFN,DRUG,RDATE,SDATE,DAS)=""
"RTN","PSOPXRMI",46,0)
 .. S NE=NE+1
"RTN","PSOPXRMI",47,0)
 .;Process the refill mutiple.
"RTN","PSOPXRMI",48,0)
 . S DA=0
"RTN","PSOPXRMI",49,0)
 . F  S DA=+$O(^PSRX(DA1,1,DA)) Q:DA=0  D
"RTN","PSOPXRMI",50,0)
 .. S TEMP=$G(^PSRX(DA1,1,DA,0))
"RTN","PSOPXRMI",51,0)
 .. S DSUP=+$P(TEMP,U,10)
"RTN","PSOPXRMI",52,0)
 .. S RDATE=+$P(TEMP,U,18)
"RTN","PSOPXRMI",53,0)
 .. I RDATE>0 D
"RTN","PSOPXRMI",54,0)
 ... S SDATE=+$$FMADD^XLFDT(RDATE,DSUP)
"RTN","PSOPXRMI",55,0)
 ... S DAS=DA1_";1;"_DA_";0"
"RTN","PSOPXRMI",56,0)
 ... S ^PXRMINDX(52,"IP",DRUG,DFN,RDATE,SDATE,DAS)=""
"RTN","PSOPXRMI",57,0)
 ... S ^PXRMINDX(52,"PI",DFN,DRUG,RDATE,SDATE,DAS)=""
"RTN","PSOPXRMI",58,0)
 ... S NE=NE+1
"RTN","PSOPXRMI",59,0)
 .;Process the partial fill multiple.
"RTN","PSOPXRMI",60,0)
 . S DA=0
"RTN","PSOPXRMI",61,0)
 . F  S DA=+$O(^PSRX(DA1,"P",DA)) Q:DA=0  D
"RTN","PSOPXRMI",62,0)
 .. S TEMP=$G(^PSRX(DA1,"P",DA,0))
"RTN","PSOPXRMI",63,0)
 .. S DSUP=+$P(TEMP,U,10)
"RTN","PSOPXRMI",64,0)
 .. S RDATE=+$P(TEMP,U,19)
"RTN","PSOPXRMI",65,0)
 .. I RDATE>0 D
"RTN","PSOPXRMI",66,0)
 ... S SDATE=+$$FMADD^XLFDT(RDATE,DSUP)
"RTN","PSOPXRMI",67,0)
 ... S DAS=DA1_";P;"_DA_";0"
"RTN","PSOPXRMI",68,0)
 ... S ^PXRMINDX(52,"IP",DRUG,DFN,RDATE,SDATE,DAS)=""
"RTN","PSOPXRMI",69,0)
 ... S ^PXRMINDX(52,"PI",DFN,DRUG,RDATE,SDATE,DAS)=""
"RTN","PSOPXRMI",70,0)
 ... S NE=NE+1
"RTN","PSOPXRMI",71,0)
 S END=$H
"RTN","PSOPXRMI",72,0)
 S TEXT=NE_" PRESCRIPTION results indexed."
"RTN","PSOPXRMI",73,0)
 D MES^XPDUTL(TEXT)
"RTN","PSOPXRMI",74,0)
 S TEXT=NERROR_" errors were encountered."
"RTN","PSOPXRMI",75,0)
 D MES^XPDUTL(TEXT)
"RTN","PSOPXRMI",76,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","PSOPXRMI",77,0)
 ;If there were errors send a message.
"RTN","PSOPXRMI",78,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","PSOPXRMI",79,0)
 ;Send a MailMan message with the results.
"RTN","PSOPXRMI",80,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","PSOPXRMI",81,0)
 S ^PXRMINDX(52,"GLOBAL NAME")=GLOBAL
"RTN","PSOPXRMI",82,0)
 S ^PXRMINDX(52,"BUILT BY")=DUZ
"RTN","PSOPXRMI",83,0)
 S ^PXRMINDX(52,"DATE BUILT")=$$NOW^XLFDT
"RTN","PSOPXRMI",84,0)
 Q
"RTN","PSOPXRMI",85,0)
 ;
"RTN","PSOPXRMU")
0^6^B2783924
"RTN","PSOPXRMU",1,0)
PSOPXRMU ;BHM/MFR - Set/Kill of Clinical Reminders Index;07/12/2004
"RTN","PSOPXRMU",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**118**;DEC 1997
"RTN","PSOPXRMU",3,0)
 ;Reference to ^PXRMINDX supported by DBIA 4114
"RTN","PSOPXRMU",4,0)
 ;
"RTN","PSOPXRMU",5,0)
SKIDX(X,DA,NODE,CMD) ;Set/Kill Clinical Reminder Index
"RTN","PSOPXRMU",6,0)
 ;Input: X(1) - DAYS SUPPLY, X(2)=RELEASED DATE/TIME
"RTN","PSOPXRMU",7,0)
 ;       DA   - PRESCRIPTION file IEN
"RTN","PSOPXRMU",8,0)
 ;       NODE - "O":Original; "R":Refill; "P":Partial
"RTN","PSOPXRMU",9,0)
 ;       CMD  - "S":Set; "K": Kill
"RTN","PSOPXRMU",10,0)
 ;
"RTN","PSOPXRMU",11,0)
 N D0,DAS,DATE,DFN,DRUG,Z
"RTN","PSOPXRMU",12,0)
 S D0=$S(NODE="O":DA,1:DA(1))
"RTN","PSOPXRMU",13,0)
 S Z=$G(^PSRX(D0,0)),DFN=$P(Z,U,2),DRUG=$P(Z,U,6)
"RTN","PSOPXRMU",14,0)
 I DFN=""!(DRUG="") Q
"RTN","PSOPXRMU",15,0)
 S DATE=+$$FMADD^XLFDT(X(2),X(1))
"RTN","PSOPXRMU",16,0)
 S DAS=DA_";2"
"RTN","PSOPXRMU",17,0)
 S:NODE="R" DAS=DA(1)_";1;"_DA_";0"
"RTN","PSOPXRMU",18,0)
 S:NODE="P" DAS=DA(1)_";P;"_DA_";0"
"RTN","PSOPXRMU",19,0)
 ;
"RTN","PSOPXRMU",20,0)
 I CMD="S" D
"RTN","PSOPXRMU",21,0)
 . S ^PXRMINDX(52,"IP",DRUG,DFN,X(2),DATE,DAS)=""
"RTN","PSOPXRMU",22,0)
 . S ^PXRMINDX(52,"PI",DFN,DRUG,X(2),DATE,DAS)=""
"RTN","PSOPXRMU",23,0)
 I CMD="K" D
"RTN","PSOPXRMU",24,0)
 . K ^PXRMINDX(52,"IP",DRUG,DFN,X(2),DATE,DAS)
"RTN","PSOPXRMU",25,0)
 . K ^PXRMINDX(52,"PI",DFN,DRUG,X(2),DATE,DAS)
"RTN","PSOPXRMU",26,0)
 Q
"RTN","PSOPXRMU",27,0)
 ;
"RTN","PSOPXRMU",28,0)
 ;=============================================
"RTN","PSOPXRMU",29,0)
KNVA(X,DA) ;Delete index for NVA node.
"RTN","PSOPXRMU",30,0)
 N DAS,START,STOP
"RTN","PSOPXRMU",31,0)
 ;Reference to ^PXRMINDX("55NVA" is supported by DBIA# 4114.
"RTN","PSOPXRMU",32,0)
 S START=$S(X(3)'="":X(3),1:X(2))
"RTN","PSOPXRMU",33,0)
 S STOP=$S(X(4)'="":X(4),1:"U"_DA(1))
"RTN","PSOPXRMU",34,0)
 S DAS=DA(1)_";NVA;"_DA_";0"
"RTN","PSOPXRMU",35,0)
 K ^PXRMINDX("55NVA","IP",X(1),DA(1),START,STOP,DAS)
"RTN","PSOPXRMU",36,0)
 K ^PXRMINDX("55NVA","PI",DA(1),X(1),START,STOP,DAS)
"RTN","PSOPXRMU",37,0)
 Q
"RTN","PSOPXRMU",38,0)
 ;
"RTN","PSOPXRMU",39,0)
 ;=============================================
"RTN","PSOPXRMU",40,0)
SNVA(X,DA) ;Set index for NVA node
"RTN","PSOPXRMU",41,0)
 ;X(1)=PHARMACY ORDERABLE ITEM,X(2)=DOCUMENTED DATE,
"RTN","PSOPXRMU",42,0)
 ;X(3)=START DATE (optional), X(4)=DISCONTINUED DATE (optional)
"RTN","PSOPXRMU",43,0)
 ;Reference to ^PXRMINDX(55 is supported by DBIA# 4114.
"RTN","PSOPXRMU",44,0)
 N DAS,START,STOP
"RTN","PSOPXRMU",45,0)
 S START=$S(X(3)'="":X(3),1:X(2))
"RTN","PSOPXRMU",46,0)
 S STOP=$S(X(4)'="":X(4),1:"U"_DA(1))
"RTN","PSOPXRMU",47,0)
 S DAS=DA(1)_";NVA;"_DA_";0"
"RTN","PSOPXRMU",48,0)
 S ^PXRMINDX("55NVA","IP",X(1),DA(1),START,STOP,DAS)=""
"RTN","PSOPXRMU",49,0)
 S ^PXRMINDX("55NVA","PI",DA(1),X(1),START,STOP,DAS)=""
"RTN","PSOPXRMU",50,0)
 Q
"RTN","PSOPXRMU",51,0)
 ;
"VER")
8.0^22.0
**INSTALL NAME**
PSS*1.0*89
"BLD",4889,0)
PSS*1.0*89^PHARMACY DATA MANAGEMENT^0^3041026^y
"BLD",4889,1,0)
^^1^1^3040712^^
"BLD",4889,1,1,0)
Add the non-VA med multiple from file #55 to the Clinical Reminders index.
"BLD",4889,4,0)
^9.64PA^^
"BLD",4889,"INI")

"BLD",4889,"INID")
^^
"BLD",4889,"INIT")
POST^PSSPI89
"BLD",4889,"KRN",0)
^9.67PA^8989.52^19
"BLD",4889,"KRN",.4,0)
.4
"BLD",4889,"KRN",.401,0)
.401
"BLD",4889,"KRN",.402,0)
.402
"BLD",4889,"KRN",.403,0)
.403
"BLD",4889,"KRN",.5,0)
.5
"BLD",4889,"KRN",.84,0)
.84
"BLD",4889,"KRN",3.6,0)
3.6
"BLD",4889,"KRN",3.8,0)
3.8
"BLD",4889,"KRN",9.2,0)
9.2
"BLD",4889,"KRN",9.8,0)
9.8
"BLD",4889,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",4889,"KRN",9.8,"NM",1,0)
PSSSXRD^^0^B25771770
"BLD",4889,"KRN",9.8,"NM","B","PSSSXRD",1)

"BLD",4889,"KRN",19,0)
19
"BLD",4889,"KRN",19.1,0)
19.1
"BLD",4889,"KRN",101,0)
101
"BLD",4889,"KRN",409.61,0)
409.61
"BLD",4889,"KRN",771,0)
771
"BLD",4889,"KRN",870,0)
870
"BLD",4889,"KRN",8989.51,0)
8989.51
"BLD",4889,"KRN",8989.52,0)
8989.52
"BLD",4889,"KRN",8994,0)
8994
"BLD",4889,"KRN","B",.4,.4)

"BLD",4889,"KRN","B",.401,.401)

"BLD",4889,"KRN","B",.402,.402)

"BLD",4889,"KRN","B",.403,.403)

"BLD",4889,"KRN","B",.5,.5)

"BLD",4889,"KRN","B",.84,.84)

"BLD",4889,"KRN","B",3.6,3.6)

"BLD",4889,"KRN","B",3.8,3.8)

"BLD",4889,"KRN","B",9.2,9.2)

"BLD",4889,"KRN","B",9.8,9.8)

"BLD",4889,"KRN","B",19,19)

"BLD",4889,"KRN","B",19.1,19.1)

"BLD",4889,"KRN","B",101,101)

"BLD",4889,"KRN","B",409.61,409.61)

"BLD",4889,"KRN","B",771,771)

"BLD",4889,"KRN","B",870,870)

"BLD",4889,"KRN","B",8989.51,8989.51)

"BLD",4889,"KRN","B",8989.52,8989.52)

"BLD",4889,"KRN","B",8994,8994)

"BLD",4889,"QUES",0)
^9.62^^
"BLD",4889,"REQB",0)
^9.611^1^1
"BLD",4889,"REQB",1,0)
PSS*1.0*62^2
"BLD",4889,"REQB","B","PSS*1.0*62",1)

"INIT")
POST^PSSPI89
"MBREQ")
0
"PKG",296,-1)
1^1
"PKG",296,0)
PHARMACY DATA MANAGEMENT^PSS^MANAGEMENT OF PHARMACY DATA FILES.^^^3010710
"PKG",296,22,0)
^9.49I^1^1
"PKG",296,22,1,0)
1.0^2970930^2971002^1317
"PKG",296,22,1,"PAH",1,0)
89^3041026
"PKG",296,22,1,"PAH",1,1,0)
^^1^1^3041026
"PKG",296,22,1,"PAH",1,1,1,0)
Add the non-VA med multiple from file #55 to the Clinical Reminders index.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","PSSPI89")
0^^B16423304
"RTN","PSSPI89",1,0)
PSSPI89 ; BIR/PKR - Init for PSS*1.0*89. ;10/12/2004
"RTN","PSSPI89",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**89**;9/30/97
"RTN","PSSPI89",3,0)
 ;
"RTN","PSSPI89",4,0)
 Q
"RTN","PSSPI89",5,0)
 ;===============================================================
"RTN","PSSPI89",6,0)
CNVA ;Create non-VA med cross-reference in Pharmacy Patient file.
"RTN","PSSPI89",7,0)
 N IND,MSG,NAME,RESULT,XREF
"RTN","PSSPI89",8,0)
 D BMES^XPDUTL("Creating Pharmacy Patient non-VA med cross-reference.")
"RTN","PSSPI89",9,0)
 S XREF("FILE")=55
"RTN","PSSPI89",10,0)
 S XREF("WHOLE KILL")="K ^PXRMINDX(""55NVA"")"
"RTN","PSSPI89",11,0)
 S XREF("TYPE")="MU"
"RTN","PSSPI89",12,0)
 S XREF("SHORT DESCR")="Clinical Reminders index."
"RTN","PSSPI89",13,0)
 S XREF("DESCR",1)="This cross-reference builds two indexes, one for finding"
"RTN","PSSPI89",14,0)
 S XREF("DESCR",2)="all patients with a pharmacy orderable item and one for"
"RTN","PSSPI89",15,0)
 S XREF("DESCR",3)="finding all the pharmacy orderable items a patient has. The indexes are"
"RTN","PSSPI89",16,0)
 S XREF("DESCR",4)="stored in the Clinical Reminders index global as:"
"RTN","PSSPI89",17,0)
 S XREF("DESCR",5)=" ^PXRMINDX(""55NVA"",""IP"",POI,DFN,START DATE,STOP DATE,DAS)"
"RTN","PSSPI89",18,0)
 S XREF("DESCR",6)=" ^PXRMINDX(""55NVA"",""PI"",DFN,POI,START DATE,STOP DATE,DAS)"
"RTN","PSSPI89",19,0)
 S XREF("DESCR",8)="respectively. POI is the pharmacy orderable item."
"RTN","PSSPI89",20,0)
 S XREF("DESCR",9)="If there is no START DATE then the DOCUMENTED DATE is used in its place."
"RTN","PSSPI89",21,0)
 S XREF("DESCR",10)="For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","PSSPI89",22,0)
 S XREF("USE")="ACTION"
"RTN","PSSPI89",23,0)
 S XREF("EXECUTION")="R"
"RTN","PSSPI89",24,0)
 S XREF("ACTIVITY")="IR"
"RTN","PSSPI89",25,0)
 S XREF("ROOT FILE")=55.05
"RTN","PSSPI89",26,0)
 S XREF("NAME")="ACRNVA"
"RTN","PSSPI89",27,0)
 S XREF("SET")="D SNVA^PSOPXRMU(.X,.DA)"
"RTN","PSSPI89",28,0)
 S XREF("KILL")="D KNVA^PSOPXRMU(.X,.DA)"
"RTN","PSSPI89",29,0)
 S XREF("VAL",1)=.01
"RTN","PSSPI89",30,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","PSSPI89",31,0)
 S XREF("VAL",2)=11
"RTN","PSSPI89",32,0)
 S XREF("VAL",2,"SUBSCRIPT")=2
"RTN","PSSPI89",33,0)
 S XREF("VAL",3)=8
"RTN","PSSPI89",34,0)
 S XREF("VAL",4)=6
"RTN","PSSPI89",35,0)
 D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","PSSPI89",36,0)
 I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","PSSPI89",37,0)
 Q
"RTN","PSSPI89",38,0)
 ;
"RTN","PSSPI89",39,0)
 ;===============================================================
"RTN","PSSPI89",40,0)
CPSPA ;Create cross-references for Pharmacy Patient.
"RTN","PSSPI89",41,0)
 N IND,MSG,NAME,RESULT,XREF
"RTN","PSSPI89",42,0)
 D BMES^XPDUTL("Creating Pharmacy Patient cross-references.")
"RTN","PSSPI89",43,0)
 S XREF("FILE")=55
"RTN","PSSPI89",44,0)
 S XREF("SET CONDITION")="S X=$$PATCH^XPDUTL(""PXRM*1.5*12"")"
"RTN","PSSPI89",45,0)
 S XREF("KILL CONDITION")="S X=$$PATCH^XPDUTL(""PXRM*1.5*12"")"
"RTN","PSSPI89",46,0)
 S XREF("WHOLE KILL")="K ^PXRMINDX(55)"
"RTN","PSSPI89",47,0)
 S XREF("TYPE")="MU"
"RTN","PSSPI89",48,0)
 S XREF("SHORT DESCR")="Clinical Reminders index."
"RTN","PSSPI89",49,0)
 S XREF("DESCR",1)="This cross-reference builds two indexes, one for finding"
"RTN","PSSPI89",50,0)
 S XREF("DESCR",2)="all patients with a particular drug and one for"
"RTN","PSSPI89",51,0)
 S XREF("DESCR",3)="finding all the drugs a patient has. The indexes are"
"RTN","PSSPI89",52,0)
 S XREF("DESCR",4)="stored in the Clinical Reminders index global as:"
"RTN","PSSPI89",53,0)
 S XREF("DESCR",5)=" ^PXRMINDX(55,""IP"",DRUG,DFN,START,STOP,DAS)"
"RTN","PSSPI89",54,0)
 S XREF("DESCR",6)=" ^PXRMINDX(55,""PI"",DFN,DRUG,START,STOP,DAS)"
"RTN","PSSPI89",55,0)
 S XREF("DESCR",8)="respectively. START is the start date and STOP is the stop date."
"RTN","PSSPI89",56,0)
 S XREF("DESCR",9)="For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","PSSPI89",57,0)
 S XREF("USE")="ACTION"
"RTN","PSSPI89",58,0)
 S XREF("EXECUTION")="R"
"RTN","PSSPI89",59,0)
 S XREF("ACTIVITY")="IR"
"RTN","PSSPI89",60,0)
 ;
"RTN","PSSPI89",61,0)
 ;Unit Dose
"RTN","PSSPI89",62,0)
 S XREF("ROOT FILE")=55.06
"RTN","PSSPI89",63,0)
 S XREF("NAME")="ACRUD"
"RTN","PSSPI89",64,0)
 S XREF("SET")="D SPSPA^PSJXRFS(.X,.DA,""UD"")"
"RTN","PSSPI89",65,0)
 S XREF("KILL")="D KPSPA^PSJXRFK(.X,.DA,""UD"")"
"RTN","PSSPI89",66,0)
 S XREF("VAL",1)=10
"RTN","PSSPI89",67,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","PSSPI89",68,0)
 S XREF("VAL",2)=34
"RTN","PSSPI89",69,0)
 S XREF("VAL",2,"SUBSCRIPT")=2
"RTN","PSSPI89",70,0)
 D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","PSSPI89",71,0)
 I RESULT="",$T(DCERRMSG^PXRMP12I) D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","PSSPI89",72,0)
 ;
"RTN","PSSPI89",73,0)
 ;IV node
"RTN","PSSPI89",74,0)
 S XREF("ROOT FILE")=55.01
"RTN","PSSPI89",75,0)
 S XREF("NAME")="ACRIV"
"RTN","PSSPI89",76,0)
 S XREF("SET")="D SPSPA^PSJXRFS(.X,.DA,""IV"")"
"RTN","PSSPI89",77,0)
 S XREF("KILL")="D KPSPA^PSJXRFK(.X,.DA,""IV"")"
"RTN","PSSPI89",78,0)
 S XREF("VAL",1)=.02
"RTN","PSSPI89",79,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","PSSPI89",80,0)
 S XREF("VAL",2)=.03
"RTN","PSSPI89",81,0)
 S XREF("VAL",2,"SUBSCRIPT")=2
"RTN","PSSPI89",82,0)
 D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","PSSPI89",83,0)
 I RESULT="",$T(DCERRMSG^PXRMP12I) D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","PSSPI89",84,0)
 Q
"RTN","PSSPI89",85,0)
 ;
"RTN","PSSPI89",86,0)
 ;===================================================
"RTN","PSSPI89",87,0)
POST ;Post-init
"RTN","PSSPI89",88,0)
 D CNVA
"RTN","PSSPI89",89,0)
 D CPSPA
"RTN","PSSPI89",90,0)
 Q
"RTN","PSSPI89",91,0)
 ;
"RTN","PSSSXRD")
0^1^B25771770
"RTN","PSSSXRD",1,0)
PSSSXRD ; BIR/PKR - Build indexes for drug files. ;08/30/2004
"RTN","PSSSXRD",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**62,89**;9/30/97
"RTN","PSSSXRD",3,0)
 ;
"RTN","PSSSXRD",4,0)
 ;Reference to ^PXRMINDX supported by DBIA #4114
"RTN","PSSSXRD",5,0)
 ;Reference to ADDERROR^PXRMSXRM supported by DBIA #4113
"RTN","PSSSXRD",6,0)
 ;Reference to DETIME^PXRMSXRM supported by DBIA #4113
"RTN","PSSSXRD",7,0)
 ;Reference to COMMSG^PXRMSXRM supported by DBIA #4113
"RTN","PSSSXRD",8,0)
 Q
"RTN","PSSSXRD",9,0)
 ;===============================================================
"RTN","PSSSXRD",10,0)
PSPA ;Build the index for the Pharmacy Patient File.
"RTN","PSSSXRD",11,0)
 N ADD,DA,DA1,DAS,DATE,DFN,DRUG,END,ENTRIES,GLOBAL,IDEN,IND,INS,NE
"RTN","PSSSXRD",12,0)
 N NERROR,POI,SDATE,SOL,START,STARTD,TEMP,TENP,TEXT
"RTN","PSSSXRD",13,0)
 S GLOBAL=$$GET1^DID(55,"","","GLOBAL NAME")
"RTN","PSSSXRD",14,0)
 ;Don't leave any old stuff around.
"RTN","PSSSXRD",15,0)
 K ^PXRMINDX(55),^PXRMINDX("55NVA")
"RTN","PSSSXRD",16,0)
 S ENTRIES=$P(^PS(55,0),U,4)
"RTN","PSSSXRD",17,0)
 S TENP=ENTRIES/10
"RTN","PSSSXRD",18,0)
 S TENP=+$P(TENP,".",1)
"RTN","PSSSXRD",19,0)
 I TENP<1 S TENP=1
"RTN","PSSSXRD",20,0)
 D BMES^XPDUTL("Building indexes for PHARMACY PATIENT FILE")
"RTN","PSSSXRD",21,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","PSSSXRD",22,0)
 D MES^XPDUTL(TEXT)
"RTN","PSSSXRD",23,0)
 S START=$H
"RTN","PSSSXRD",24,0)
 S (DFN,IND,NE,NERROR)=0
"RTN","PSSSXRD",25,0)
 F  S DFN=+$O(^PS(55,DFN)) Q:DFN=0  D
"RTN","PSSSXRD",26,0)
 . S IND=IND+1
"RTN","PSSSXRD",27,0)
 . I IND#TENP=0 D
"RTN","PSSSXRD",28,0)
 .. S TEXT="Processing entry "_IND
"RTN","PSSSXRD",29,0)
 .. D MES^XPDUTL(TEXT)
"RTN","PSSSXRD",30,0)
 . I IND#10000=0 W "."
"RTN","PSSSXRD",31,0)
 .;Process Unit Dose.
"RTN","PSSSXRD",32,0)
 . S DA=0
"RTN","PSSSXRD",33,0)
 . F  S DA=+$O(^PS(55,DFN,5,DA)) Q:DA=0  D
"RTN","PSSSXRD",34,0)
 .. S TEMP=$G(^PS(55,DFN,5,DA,2))
"RTN","PSSSXRD",35,0)
 .. S STARTD=$P(TEMP,U,2)
"RTN","PSSSXRD",36,0)
 .. I STARTD="" D  Q
"RTN","PSSSXRD",37,0)
 ... S IDEN="DFN="_DFN_" D1="_DA_" Unit Dose missing start date"
"RTN","PSSSXRD",38,0)
 ... D ADDERROR^PXRMSXRM(GLOBAL,IDEN,.NERROR)
"RTN","PSSSXRD",39,0)
 .. S SDATE=$P(TEMP,U,4)
"RTN","PSSSXRD",40,0)
 .. I SDATE=1 Q
"RTN","PSSSXRD",41,0)
 .. I SDATE="" D  Q
"RTN","PSSSXRD",42,0)
 ... S IDEN="DFN="_DFN_" D1="_DA_" Unit Dose missing stop date"
"RTN","PSSSXRD",43,0)
 ... D ADDERROR^PXRMSXRM(GLOBAL,IDEN,.NERROR)
"RTN","PSSSXRD",44,0)
 .. S DA1=0
"RTN","PSSSXRD",45,0)
 .. F  S DA1=+$O(^PS(55,DFN,5,DA,1,DA1)) Q:DA1=0  D
"RTN","PSSSXRD",46,0)
 ... S DRUG=$P(^PS(55,DFN,5,DA,1,DA1,0),U,1)
"RTN","PSSSXRD",47,0)
 ... I DRUG="" D  Q
"RTN","PSSSXRD",48,0)
 .... S IDEN="DFN="_DFN_" D1="_DA_" D2="_DA1_" Unit Dose missing drug"
"RTN","PSSSXRD",49,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,IDEN,.NERROR)
"RTN","PSSSXRD",50,0)
 ... S DAS=DFN_";5;"_DA_";1;"_DA1_";0"
"RTN","PSSSXRD",51,0)
 ... S ^PXRMINDX(55,"IP",DRUG,DFN,STARTD,SDATE,DAS)=""
"RTN","PSSSXRD",52,0)
 ... S ^PXRMINDX(55,"PI",DFN,DRUG,STARTD,SDATE,DAS)=""
"RTN","PSSSXRD",53,0)
 ... S NE=NE+1
"RTN","PSSSXRD",54,0)
 .;Process the IV multiple.
"RTN","PSSSXRD",55,0)
 . S DA=0
"RTN","PSSSXRD",56,0)
 . F  S DA=+$O(^PS(55,DFN,"IV",DA)) Q:DA=0  D
"RTN","PSSSXRD",57,0)
 .. S TEMP=$G(^PS(55,DFN,"IV",DA,0))
"RTN","PSSSXRD",58,0)
 .. S STARTD=$P(TEMP,U,2)
"RTN","PSSSXRD",59,0)
 .. I STARTD="" D  Q
"RTN","PSSSXRD",60,0)
 ... S IDEN="DFN="_DFN_" D1="_DA_" IV missing start date"
"RTN","PSSSXRD",61,0)
 ... D ADDERROR^PXRMSXRM(GLOBAL,IDEN,.NERROR)
"RTN","PSSSXRD",62,0)
 .. S SDATE=$P(TEMP,U,3)
"RTN","PSSSXRD",63,0)
 .. I SDATE=1 Q
"RTN","PSSSXRD",64,0)
 .. I SDATE="" D  Q
"RTN","PSSSXRD",65,0)
 ... S IDEN="DFN="_DFN_" D1="_DA_" IV missing stop date"
"RTN","PSSSXRD",66,0)
 ... D ADDERROR^PXRMSXRM(GLOBAL,IDEN,.NERROR)
"RTN","PSSSXRD",67,0)
 ..;Process Additives
"RTN","PSSSXRD",68,0)
 .. S DA1=0
"RTN","PSSSXRD",69,0)
 .. F  S DA1=+$O(^PS(55,DFN,"IV",DA,"AD",DA1)) Q:DA1=0  D
"RTN","PSSSXRD",70,0)
 ... S ADD=$P(^PS(55,DFN,"IV",DA,"AD",DA1,0),U,1)
"RTN","PSSSXRD",71,0)
 ... I ADD="" D  Q
"RTN","PSSSXRD",72,0)
 .... S IDEN="DFN="_DFN_" D1="_DA_" D2="_DA1_" IV missing additive"
"RTN","PSSSXRD",73,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,IDEN,.NERROR)
"RTN","PSSSXRD",74,0)
 ... S DRUG=$P($G(^PS(52.6,ADD,0)),U,2)
"RTN","PSSSXRD",75,0)
 ... I DRUG="" D  Q
"RTN","PSSSXRD",76,0)
 .... S IDEN="DFN="_DFN_" D1="_DA_" D2="_DA1_" IV additive missing drug"
"RTN","PSSSXRD",77,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,IDEN,.NERROR)
"RTN","PSSSXRD",78,0)
 ... S NE=NE+1
"RTN","PSSSXRD",79,0)
 ... S DAS=DFN_";IV;"_DA_";AD;"_DA1_";0"
"RTN","PSSSXRD",80,0)
 ... S ^PXRMINDX(55,"IP",DRUG,DFN,STARTD,SDATE,DAS)=""
"RTN","PSSSXRD",81,0)
 ... S ^PXRMINDX(55,"PI",DFN,DRUG,STARTD,SDATE,DAS)=""
"RTN","PSSSXRD",82,0)
 ..;Process Solutions
"RTN","PSSSXRD",83,0)
 .. S DA1=0
"RTN","PSSSXRD",84,0)
 .. F  S DA1=+$O(^PS(55,DFN,"IV",DA,"SOL",DA1)) Q:DA1=0  D
"RTN","PSSSXRD",85,0)
 ... S SOL=$P(^PS(55,DFN,"IV",DA,"SOL",DA1,0),U,1)
"RTN","PSSSXRD",86,0)
 ... I SOL="" D  Q
"RTN","PSSSXRD",87,0)
 .... S IDEN="DFN="_DFN_" D1="_DA_" D2="_DA1_" IV-SOL missing solution"
"RTN","PSSSXRD",88,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,IDEN,.NERROR)
"RTN","PSSSXRD",89,0)
 ... S DRUG=$P($G(^PS(52.7,SOL,0)),U,2)
"RTN","PSSSXRD",90,0)
 ... I DRUG="" D  Q
"RTN","PSSSXRD",91,0)
 .... S IDEN="DFN="_DFN_" D1="_DA_" D2="_DA1_" IV-SOL missing Drug"
"RTN","PSSSXRD",92,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,IDEN,.NERROR)
"RTN","PSSSXRD",93,0)
 ... S NE=NE+1
"RTN","PSSSXRD",94,0)
 ... S DAS=DFN_";IV;"_DA_";SOL;"_DA1_";0"
"RTN","PSSSXRD",95,0)
 ... S ^PXRMINDX(55,"IP",DRUG,DFN,STARTD,SDATE,DAS)=""
"RTN","PSSSXRD",96,0)
 ... S ^PXRMINDX(55,"PI",DFN,DRUG,STARTD,SDATE,DAS)=""
"RTN","PSSSXRD",97,0)
 .;Process the NVA multiple.
"RTN","PSSSXRD",98,0)
 . S DA=0
"RTN","PSSSXRD",99,0)
 . F  S DA=+$O(^PS(55,DFN,"NVA",DA)) Q:DA=0  D
"RTN","PSSSXRD",100,0)
 .. S TEMP=$G(^PS(55,DFN,"NVA",DA,0))
"RTN","PSSSXRD",101,0)
 .. S STARTD=$P(TEMP,U,9)
"RTN","PSSSXRD",102,0)
 .. I STARTD="" S STARTD=$P(TEMP,U,10)
"RTN","PSSSXRD",103,0)
 .. I STARTD="" D  Q
"RTN","PSSSXRD",104,0)
 ... S IDEN="DFN="_DFN_" D1="_DA_" NVA missing start date"
"RTN","PSSSXRD",105,0)
 ... D ADDERROR^PXRMSXRM(GLOBAL,IDEN,.NERROR)
"RTN","PSSSXRD",106,0)
 .. S SDATE=$P(TEMP,U,7)
"RTN","PSSSXRD",107,0)
 .. I SDATE="" S SDATE="U"_DFN_DA
"RTN","PSSSXRD",108,0)
 .. S DAS=DFN_";NVA;"_DA_";0"
"RTN","PSSSXRD",109,0)
 .. S POI=$P(TEMP,U,1)
"RTN","PSSSXRD",110,0)
 .. S ^PXRMINDX("55NVA","IP",POI,DFN,STARTD,SDATE,DAS)=""
"RTN","PSSSXRD",111,0)
 .. S ^PXRMINDX("55NVA","PI",DFN,POI,STARTD,SDATE,DAS)=""
"RTN","PSSSXRD",112,0)
 S END=$H
"RTN","PSSSXRD",113,0)
 S TEXT=NE_" PHARMACY PATIENTS results indexed."
"RTN","PSSSXRD",114,0)
 D MES^XPDUTL(TEXT)
"RTN","PSSSXRD",115,0)
 S TEXT=NERROR_" errors were encountered."
"RTN","PSSSXRD",116,0)
 D MES^XPDUTL(TEXT)
"RTN","PSSSXRD",117,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","PSSSXRD",118,0)
 ;If there were errors send a message.
"RTN","PSSSXRD",119,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","PSSSXRD",120,0)
 ;Send a MailMan message with the results.
"RTN","PSSSXRD",121,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","PSSSXRD",122,0)
 S ^PXRMINDX(55,"GLOBAL NAME")=$$GET1^DID(55,"","","GLOBAL NAME")
"RTN","PSSSXRD",123,0)
 S ^PXRMINDX(55,"BUILT BY")=DUZ
"RTN","PSSSXRD",124,0)
 S ^PXRMINDX(55,"DATE BUILT")=$$NOW^XLFDT
"RTN","PSSSXRD",125,0)
 S ^PXRMINDX("55NVA","GLOBAL NAME")=^PXRMINDX(55,"GLOBAL NAME")
"RTN","PSSSXRD",126,0)
 S ^PXRMINDX("55NVA","BUILT BY")=^PXRMINDX(55,"BUILT BY")
"RTN","PSSSXRD",127,0)
 S ^PXRMINDX("55NVA","DATE BUILT")=^PXRMINDX(55,"DATE BUILT")
"RTN","PSSSXRD",128,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
PX*1.0*119
"BLD",3837,0)
PX*1.0*119^PCE PATIENT CARE ENCOUNTER^0^3041026^y
"BLD",3837,1,0)
^^2^2^3021001^^
"BLD",3837,1,1,0)
The description of the patch can be found in the National Patch Tracking 
"BLD",3837,1,2,0)
module.
"BLD",3837,4,0)
^9.64PA^839.7^1
"BLD",3837,4,839.7,0)
839.7
"BLD",3837,4,839.7,222)
y^y^f^^n^^y^o^n
"BLD",3837,4,839.7,224)
I (Y=31)!(Y=32)!(Y=34)!(Y=35)
"BLD",3837,4,"B",839.7,839.7)

"BLD",3837,"ABPKG")
n
"BLD",3837,"INID")
^n
"BLD",3837,"INIT")
CVFILE^PXP119I
"BLD",3837,"KRN",0)
^9.67PA^8989.52^19
"BLD",3837,"KRN",.4,0)
.4
"BLD",3837,"KRN",.401,0)
.401
"BLD",3837,"KRN",.402,0)
.402
"BLD",3837,"KRN",.403,0)
.403
"BLD",3837,"KRN",.5,0)
.5
"BLD",3837,"KRN",.84,0)
.84
"BLD",3837,"KRN",3.6,0)
3.6
"BLD",3837,"KRN",3.8,0)
3.8
"BLD",3837,"KRN",9.2,0)
9.2
"BLD",3837,"KRN",9.8,0)
9.8
"BLD",3837,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",3837,"KRN",9.8,"NM",1,0)
PXPXRM^^0^B12998169
"BLD",3837,"KRN",9.8,"NM",2,0)
PXPXRMI1^^0^B51224708
"BLD",3837,"KRN",9.8,"NM",3,0)
PXPXRMI2^^0^B79678940
"BLD",3837,"KRN",9.8,"NM","B","PXPXRM",1)

"BLD",3837,"KRN",9.8,"NM","B","PXPXRMI1",2)

"BLD",3837,"KRN",9.8,"NM","B","PXPXRMI2",3)

"BLD",3837,"KRN",19,0)
19
"BLD",3837,"KRN",19.1,0)
19.1
"BLD",3837,"KRN",101,0)
101
"BLD",3837,"KRN",409.61,0)
409.61
"BLD",3837,"KRN",771,0)
771
"BLD",3837,"KRN",870,0)
870
"BLD",3837,"KRN",8989.51,0)
8989.51
"BLD",3837,"KRN",8989.52,0)
8989.52
"BLD",3837,"KRN",8994,0)
8994
"BLD",3837,"KRN","B",.4,.4)

"BLD",3837,"KRN","B",.401,.401)

"BLD",3837,"KRN","B",.402,.402)

"BLD",3837,"KRN","B",.403,.403)

"BLD",3837,"KRN","B",.5,.5)

"BLD",3837,"KRN","B",.84,.84)

"BLD",3837,"KRN","B",3.6,3.6)

"BLD",3837,"KRN","B",3.8,3.8)

"BLD",3837,"KRN","B",9.2,9.2)

"BLD",3837,"KRN","B",9.8,9.8)

"BLD",3837,"KRN","B",19,19)

"BLD",3837,"KRN","B",19.1,19.1)

"BLD",3837,"KRN","B",101,101)

"BLD",3837,"KRN","B",409.61,409.61)

"BLD",3837,"KRN","B",771,771)

"BLD",3837,"KRN","B",870,870)

"BLD",3837,"KRN","B",8989.51,8989.51)

"BLD",3837,"KRN","B",8989.52,8989.52)

"BLD",3837,"KRN","B",8994,8994)

"BLD",3837,"QUES",0)
^9.62^^
"BLD",3837,"REQB",0)
^9.611^2^2
"BLD",3837,"REQB",1,0)
PXRM*1.5*12^2
"BLD",3837,"REQB",2,0)
DI*22.0*95^2
"BLD",3837,"REQB","B","DI*22.0*95",2)

"BLD",3837,"REQB","B","PXRM*1.5*12",1)

"DATA",839.7,31,0)
GEC1
"DATA",839.7,32,0)
GEC2
"DATA",839.7,34,0)
GECF
"FIA",839.7)
PCE DATA SOURCE
"FIA",839.7,0)
^PX(839.7,
"FIA",839.7,0,0)
839.7
"FIA",839.7,0,1)
y^y^f^^n^^y^o^n
"FIA",839.7,0,10)

"FIA",839.7,0,11)
I (Y=31)!(Y=32)!(Y=34)!(Y=35)
"FIA",839.7,0,"RLRO")

"FIA",839.7,0,"VR")
1.0^PX
"FIA",839.7,839.7)
0
"FIA",839.7,839.7101)
0
"INIT")
CVFILE^PXP119I
"MBREQ")
0
"PKG",183,-1)
1^1
"PKG",183,0)
PCE PATIENT CARE ENCOUNTER^PX^Patient Care Encounter (VA Parent package)
"PKG",183,20,0)
^9.402P^^
"PKG",183,22,0)
^9.49I^1^1
"PKG",183,22,1,0)
1.0^2960812^2960821^11
"PKG",183,22,1,"PAH",1,0)
119^3041026
"PKG",183,22,1,"PAH",1,1,0)
^^2^2^3041026
"PKG",183,22,1,"PAH",1,1,1,0)
The description of the patch can be found in the National Patch Tracking 
"PKG",183,22,1,"PAH",1,1,2,0)
module.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","PXP119I")
0^^B64665763
"RTN","PXP119I",1,0)
PXP119I ;SLC/PKR,JVS - Create cross-references. ;10/12/2004
"RTN","PXP119I",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**119**;Aug 12, 1996
"RTN","PXP119I",3,0)
 ;
"RTN","PXP119I",4,0)
 Q
"RTN","PXP119I",5,0)
 ;===============================================================
"RTN","PXP119I",6,0)
AED ;Reindex Health Factor "AED" Index
"RTN","PXP119I",7,0)
 Q:$D(^AUPNVHF("AED"))
"RTN","PXP119I",8,0)
 D BMES^XPDUTL(" The installation will pause while the index is being populated.")
"RTN","PXP119I",9,0)
 D BMES^XPDUTL(" If you have a large V Health Factor file this could take awhile.")
"RTN","PXP119I",10,0)
 N CNT,IEN,DA,DIK
"RTN","PXP119I",11,0)
 S CNT=0
"RTN","PXP119I",12,0)
 S DIK="^AUPNVHF("
"RTN","PXP119I",13,0)
 S DIK(1)="81203^AED"
"RTN","PXP119I",14,0)
 S XPDIDTOT=$P($G(^AUPNVHF(0)),"^",4)
"RTN","PXP119I",15,0)
 S IEN=0 F  S IEN=$O(^AUPNVHF(IEN)) Q:IEN<1  S CNT=CNT+1 D
"RTN","PXP119I",16,0)
 .I '$D(^AUPNVHF(IEN,12)) Q
"RTN","PXP119I",17,0)
 .I +$P($G(^AUPNVHF(IEN,12)),"^",1)=0 Q
"RTN","PXP119I",18,0)
 .I '$D(^AUPNVHF(IEN,812)) Q
"RTN","PXP119I",19,0)
 .I +$P($G(^AUPNVHF(IEN,812)),"^",3)=0 Q
"RTN","PXP119I",20,0)
 .S DA=IEN
"RTN","PXP119I",21,0)
 .D EN1^DIK
"RTN","PXP119I",22,0)
 .I $D(XPDNM),'(CNT#1000) D UPDATE^XPDID(CNT)
"RTN","PXP119I",23,0)
 Q
"RTN","PXP119I",24,0)
 ;
"RTN","PXP119I",25,0)
 ;===============================================================
"RTN","PXP119I",26,0)
CVCPT ;Create cross-reference for V CPT.
"RTN","PXP119I",27,0)
 N MSG,RESULT,UITEM,XREF
"RTN","PXP119I",28,0)
 D BMES^XPDUTL("Creating V CPT cross-reference.")
"RTN","PXP119I",29,0)
 ;Set the XREF nodes
"RTN","PXP119I",30,0)
 S XREF("FILE")=9000010.18
"RTN","PXP119I",31,0)
 S XREF("ROOT FILE")=9000010.18
"RTN","PXP119I",32,0)
 S XREF("SET")="D SVFILEC^PXPXRM(9000010.18,.X,.DA)"
"RTN","PXP119I",33,0)
 S XREF("KILL")="D KVFILEC^PXPXRM(9000010.18,.X,.DA)"
"RTN","PXP119I",34,0)
 S XREF("WHOLE KILL")="K ^PXRMINDX(9000010.18)"
"RTN","PXP119I",35,0)
 D SXREFVF(.XREF,"CPT code")
"RTN","PXP119I",36,0)
 S UITEM="CPT CODE"
"RTN","PXP119I",37,0)
 S XREF("DESCR",5)=" ^PXRMINDX("_XREF("FILE")_",""IPP"","_UITEM_",PP,DFN,VISIT DATE,DAS) and"
"RTN","PXP119I",38,0)
 S XREF("DESCR",6)=" ^PXRMINDX("_XREF("FILE")_",""PPI"",DFN,PP,"_UITEM_",VISIT DATE,DAS)"
"RTN","PXP119I",39,0)
 S XREF("DESCR",7)="respectively. PP is the principal procedure code. Possible values are Y (yes), N (no) or U (undefined)."
"RTN","PXP119I",40,0)
 S XREF("DESCR",8)="For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","PXP119I",41,0)
 S XREF("VAL",4)=.07
"RTN","PXP119I",42,0)
 D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","PXP119I",43,0)
 I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","PXP119I",44,0)
 Q
"RTN","PXP119I",45,0)
 ;
"RTN","PXP119I",46,0)
 ;===============================================================
"RTN","PXP119I",47,0)
CVFILE ;Create all the V file cross-references.
"RTN","PXP119I",48,0)
 D BMES^XPDUTL("Creating V file cross-references.")
"RTN","PXP119I",49,0)
 D CVCPT
"RTN","PXP119I",50,0)
 D CVHF
"RTN","PXP119I",51,0)
 D CVIMM
"RTN","PXP119I",52,0)
 D CVPATED
"RTN","PXP119I",53,0)
 D CVPOV
"RTN","PXP119I",54,0)
 D CVSK
"RTN","PXP119I",55,0)
 D CVXAM
"RTN","PXP119I",56,0)
 Q
"RTN","PXP119I",57,0)
 ;
"RTN","PXP119I",58,0)
 ;===============================================================
"RTN","PXP119I",59,0)
CVHF ;Create cross-reference for V HEALTH FACTOR.
"RTN","PXP119I",60,0)
 N MSG,RESULT,XREF
"RTN","PXP119I",61,0)
 D BMES^XPDUTL("Creating V Health Factor cross-reference.")
"RTN","PXP119I",62,0)
 ;Set the XREF nodes
"RTN","PXP119I",63,0)
 S XREF("FILE")=9000010.23
"RTN","PXP119I",64,0)
 S XREF("ROOT FILE")=9000010.23
"RTN","PXP119I",65,0)
 S XREF("SET")="D SVFILE^PXPXRM(9000010.23,.X,.DA)"
"RTN","PXP119I",66,0)
 S XREF("KILL")="D KVFILE^PXPXRM(9000010.23,.X,.DA)"
"RTN","PXP119I",67,0)
 S XREF("WHOLE KILL")="K ^PXRMINDX(9000010.23)"
"RTN","PXP119I",68,0)
 D SXREFVF(.XREF,"health factor")
"RTN","PXP119I",69,0)
 D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","PXP119I",70,0)
 I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","PXP119I",71,0)
 ;
"RTN","PXP119I",72,0)
 N PXREF
"RTN","PXP119I",73,0)
 K MSG,RESULT
"RTN","PXP119I",74,0)
 D BMES^XPDUTL("Creating V Health Factor AED cross-reference.")
"RTN","PXP119I",75,0)
 S PXREF("FILE")=9000010.23
"RTN","PXP119I",76,0)
 S PXREF("ROOT FILE")=9000010.23
"RTN","PXP119I",77,0)
 S PXREF("WHOLE KILL")="K ^AUPNVHF(""AED"")"
"RTN","PXP119I",78,0)
 S PXREF("NAME")="AED"
"RTN","PXP119I",79,0)
 S PXREF("TYPE")="R"
"RTN","PXP119I",80,0)
 S PXREF("SHORT DESCR")="AED,EVENT DATE AND TIME,DATA SOURCE,DA"
"RTN","PXP119I",81,0)
 S PXREF("DESCR",1)="This cross-reference creates an index of the Event"
"RTN","PXP119I",82,0)
 S PXREF("DESCR",2)="Date and Time field and the Data Source field."
"RTN","PXP119I",83,0)
 S PXREF("USE")="S"
"RTN","PXP119I",84,0)
 S PXREF("EXECUTION")="R"
"RTN","PXP119I",85,0)
 S PXREF("ACTIVITY")="IR"
"RTN","PXP119I",86,0)
 S PXREF("VAL",1)=1201
"RTN","PXP119I",87,0)
 S PXREF("VAL",1,"SUBSCRIPT")=1
"RTN","PXP119I",88,0)
 S PXREF("VAL",2)=81203
"RTN","PXP119I",89,0)
 S PXREF("VAL",2,"SUBSCRIPT")=3
"RTN","PXP119I",90,0)
 S PXREF("VAL",3)=.02
"RTN","PXP119I",91,0)
 S PXREF("VAL",3,"SUBSCRIPT")=2
"RTN","PXP119I",92,0)
 D CREIXN^DDMOD(.PXREF,"k",.RESULT,"","MSG")
"RTN","PXP119I",93,0)
 I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","PXP119I",94,0)
 D AED
"RTN","PXP119I",95,0)
 Q
"RTN","PXP119I",96,0)
 ;
"RTN","PXP119I",97,0)
 ;===============================================================
"RTN","PXP119I",98,0)
CVIMM ;Create cross-reference for V IMMUNIZATION.
"RTN","PXP119I",99,0)
 N MSG,RESULT,XREF
"RTN","PXP119I",100,0)
 D BMES^XPDUTL("Creating V Immunization cross-reference.")
"RTN","PXP119I",101,0)
 ;Set the XREF nodes
"RTN","PXP119I",102,0)
 S XREF("FILE")=9000010.11
"RTN","PXP119I",103,0)
 S XREF("ROOT FILE")=9000010.11
"RTN","PXP119I",104,0)
 S XREF("SET")="D SVFILE^PXPXRM(9000010.11,.X,.DA)"
"RTN","PXP119I",105,0)
 S XREF("KILL")="D KVFILE^PXPXRM(9000010.11,.X,.DA)"
"RTN","PXP119I",106,0)
 S XREF("WHOLE KILL")="K ^PXRMINDX(9000010.11)"
"RTN","PXP119I",107,0)
 D SXREFVF(.XREF,"immunization")
"RTN","PXP119I",108,0)
 D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","PXP119I",109,0)
 I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","PXP119I",110,0)
 Q
"RTN","PXP119I",111,0)
 ;
"RTN","PXP119I",112,0)
 ;===============================================================
"RTN","PXP119I",113,0)
CVPATED ;Create cross-reference for V PATIENT ED.
"RTN","PXP119I",114,0)
 N MSG,RESULT,XREF
"RTN","PXP119I",115,0)
 D BMES^XPDUTL("Creating V Patient Ed cross-reference.")
"RTN","PXP119I",116,0)
 ;Set the XREF nodes
"RTN","PXP119I",117,0)
 S XREF("FILE")=9000010.16
"RTN","PXP119I",118,0)
 S XREF("ROOT FILE")=9000010.16
"RTN","PXP119I",119,0)
 S XREF("SET")="D SVFILE^PXPXRM(9000010.16,.X,.DA)"
"RTN","PXP119I",120,0)
 S XREF("KILL")="D KVFILE^PXPXRM(9000010.16,.X,.DA)"
"RTN","PXP119I",121,0)
 S XREF("WHOLE KILL")="K ^PXRMINDX(9000010.16)"
"RTN","PXP119I",122,0)
 D SXREFVF(.XREF,"education topic")
"RTN","PXP119I",123,0)
 D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","PXP119I",124,0)
 I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","PXP119I",125,0)
 Q
"RTN","PXP119I",126,0)
 ;
"RTN","PXP119I",127,0)
 ;===============================================================
"RTN","PXP119I",128,0)
CVPOV ;Create cross-reference for V POV.
"RTN","PXP119I",129,0)
 N MSG,RESULT,UITEM,XREF
"RTN","PXP119I",130,0)
 D BMES^XPDUTL("Creating V POV cross-reference.")
"RTN","PXP119I",131,0)
 ;Set the XREF nodes
"RTN","PXP119I",132,0)
 S XREF("FILE")=9000010.07
"RTN","PXP119I",133,0)
 S XREF("ROOT FILE")=9000010.07
"RTN","PXP119I",134,0)
 S XREF("SET")="D SVFILEC^PXPXRM(9000010.07,.X,.DA)"
"RTN","PXP119I",135,0)
 S XREF("KILL")="D KVFILEC^PXPXRM(9000010.07,.X,.DA)"
"RTN","PXP119I",136,0)
 S XREF("WHOLE KILL")="K ^PXRMINDX(9000010.07)"
"RTN","PXP119I",137,0)
 D SXREFVF(.XREF,"ICD9 code")
"RTN","PXP119I",138,0)
 S UITEM="ICD9 CODE"
"RTN","PXP119I",139,0)
 S XREF("DESCR",5)=" ^PXRMINDX("_XREF("FILE")_",""IPP"","_UITEM_",PS,DFN,VISIT DATE,DAS) and"
"RTN","PXP119I",140,0)
 S XREF("DESCR",6)=" ^PXRMINDX("_XREF("FILE")_",""PPI"",DFN,PS,"_UITEM_",VISIT DATE,DAS)"
"RTN","PXP119I",141,0)
 S XREF("DESCR",7)="respectively. PS is the primary/secondary code. Possible values are P (primary), S (secondary) or U (undefined)."
"RTN","PXP119I",142,0)
 S XREF("DESCR",8)="For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","PXP119I",143,0)
 S XREF("VAL",4)=.12
"RTN","PXP119I",144,0)
 D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","PXP119I",145,0)
 I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","PXP119I",146,0)
 Q
"RTN","PXP119I",147,0)
 ;
"RTN","PXP119I",148,0)
 ;===============================================================
"RTN","PXP119I",149,0)
CVSK ;Create cross-reference for V SKIN TEST.
"RTN","PXP119I",150,0)
 N MSG,RESULT,XREF
"RTN","PXP119I",151,0)
 D BMES^XPDUTL("Creating V Skin Test cross-reference.")
"RTN","PXP119I",152,0)
 ;Set the XREF nodes
"RTN","PXP119I",153,0)
 S XREF("FILE")=9000010.12
"RTN","PXP119I",154,0)
 S XREF("ROOT FILE")=9000010.12
"RTN","PXP119I",155,0)
 S XREF("SET")="D SVFILE^PXPXRM(9000010.12,.X,.DA)"
"RTN","PXP119I",156,0)
 S XREF("KILL")="D KVFILE^PXPXRM(9000010.12,.X,.DA)"
"RTN","PXP119I",157,0)
 S XREF("WHOLE KILL")="K ^PXRMINDX(9000010.12)"
"RTN","PXP119I",158,0)
 D SXREFVF(.XREF,"skin test")
"RTN","PXP119I",159,0)
 D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","PXP119I",160,0)
 I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","PXP119I",161,0)
 Q
"RTN","PXP119I",162,0)
 ;
"RTN","PXP119I",163,0)
 ;===============================================================
"RTN","PXP119I",164,0)
CVXAM ;Create cross-reference for V EXAM.
"RTN","PXP119I",165,0)
 N MSG,RESULT,XREF
"RTN","PXP119I",166,0)
 D BMES^XPDUTL("Creating V Exam cross-reference.")
"RTN","PXP119I",167,0)
 ;Set the XREF nodes
"RTN","PXP119I",168,0)
 S XREF("FILE")=9000010.13
"RTN","PXP119I",169,0)
 S XREF("ROOT FILE")=9000010.13
"RTN","PXP119I",170,0)
 S XREF("SET")="D SVFILE^PXPXRM(9000010.13,.X,.DA)"
"RTN","PXP119I",171,0)
 S XREF("KILL")="D KVFILE^PXPXRM(9000010.13,.X,.DA)"
"RTN","PXP119I",172,0)
 S XREF("WHOLE KILL")="K ^PXRMINDX(9000010.13)"
"RTN","PXP119I",173,0)
 D SXREFVF(.XREF,"exam")
"RTN","PXP119I",174,0)
 D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","PXP119I",175,0)
 I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","PXP119I",176,0)
 Q
"RTN","PXP119I",177,0)
 ;
"RTN","PXP119I",178,0)
 ;===============================================================
"RTN","PXP119I",179,0)
DCERRMSG(MSG,XREF) ;Display creation error message.
"RTN","PXP119I",180,0)
 W !,"Cross-reference could not be created!"
"RTN","PXP119I",181,0)
 W !,"Error message:"
"RTN","PXP119I",182,0)
 D AWRITE^PXRMUTIL("MSG")
"RTN","PXP119I",183,0)
 W !!,"Cross-reference information:"
"RTN","PXP119I",184,0)
 D AWRITE^PXRMUTIL("XREF")
"RTN","PXP119I",185,0)
 Q
"RTN","PXP119I",186,0)
 ;
"RTN","PXP119I",187,0)
 ;===============================================================
"RTN","PXP119I",188,0)
SXREFVF(XREF,ITEM) ;Set XREF array nodes common for all V files.
"RTN","PXP119I",189,0)
 N UITEM
"RTN","PXP119I",190,0)
 S UITEM=$$UP^XLFSTR(ITEM)
"RTN","PXP119I",191,0)
 S XREF("TYPE")="MU"
"RTN","PXP119I",192,0)
 S XREF("NAME")="ACR"
"RTN","PXP119I",193,0)
 S XREF("SHORT DESCR")="Clinical Reminders index."
"RTN","PXP119I",194,0)
 S XREF("DESCR",1)="This cross-reference builds two indexes, one for finding"
"RTN","PXP119I",195,0)
 S XREF("DESCR",2)="all patients with a particular "_ITEM_" and one for finding all"
"RTN","PXP119I",196,0)
 S XREF("DESCR",3)="the "_ITEM_"s a patient has."
"RTN","PXP119I",197,0)
 S XREF("DESCR",4)="The indexes are stored in the Clinical Reminders index global as:"
"RTN","PXP119I",198,0)
 S XREF("DESCR",5)=" ^PXRMINDX("_XREF("FILE")_",""IP"","_UITEM_",DFN,VISIT DATE,DAS) and"
"RTN","PXP119I",199,0)
 S XREF("DESCR",6)=" ^PXRMINDX("_XREF("FILE")_",""PI"",DFN,"_UITEM_",VISIT DATE,DAS)"
"RTN","PXP119I",200,0)
 S XREF("DESCR",7)="respectively."
"RTN","PXP119I",201,0)
 S XREF("DESCR",8)="For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","PXP119I",202,0)
 S XREF("USE")="ACTION"
"RTN","PXP119I",203,0)
 S XREF("EXECUTION")="R"
"RTN","PXP119I",204,0)
 S XREF("ACTIVITY")="IR"
"RTN","PXP119I",205,0)
 S XREF("VAL",1)=.01
"RTN","PXP119I",206,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","PXP119I",207,0)
 S XREF("VAL",2)=.02
"RTN","PXP119I",208,0)
 S XREF("VAL",2,"SUBSCRIPT")=2
"RTN","PXP119I",209,0)
 S XREF("VAL",3)=.03
"RTN","PXP119I",210,0)
 S XREF("VAL",3,"SUBSCRIPT")=3
"RTN","PXP119I",211,0)
 Q
"RTN","PXP119I",212,0)
 ;
"RTN","PXP119I",213,0)
 ;===============================================================
"RTN","PXP119I",214,0)
VHFAED     ;Reindex Health Factor "AED" Index
"RTN","PXP119I",215,0)
 S DIK="^AUPNVHF("
"RTN","PXP119I",216,0)
 S DIK(1)="81203^AED"
"RTN","PXP119I",217,0)
 D ENALL^DIK
"RTN","PXP119I",218,0)
 Q
"RTN","PXP119I",219,0)
 ;
"RTN","PXP119I",220,0)
 ;===============================================================
"RTN","PXP119I",221,0)
VHFTSK ;Task off Health Factor AED Cross ref build
"RTN","PXP119I",222,0)
 S ZTRTN="VHFAED^PXP119I"
"RTN","PXP119I",223,0)
 S ZTDESC="V Health Factors Index AED x-ref"
"RTN","PXP119I",224,0)
 S ZTIO=""
"RTN","PXP119I",225,0)
 S ZTDTH=$H
"RTN","PXP119I",226,0)
 D ^%ZTLOAD
"RTN","PXP119I",227,0)
 Q
"RTN","PXP119I",228,0)
 ;
"RTN","PXPXRM")
0^1^B12998169
"RTN","PXPXRM",1,0)
PXPXRM ;SLC/PKR - APIs for Clinical Reminder indexes. ;08/31/2004
"RTN","PXPXRM",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**119**;Aug 12, 1996
"RTN","PXPXRM",3,0)
 Q
"RTN","PXPXRM",4,0)
 ;===============================================================
"RTN","PXPXRM",5,0)
KVFILE(FILENUM,X,DA) ;Delete indexes for a regular V File.
"RTN","PXPXRM",6,0)
 N VDATE,VISIT
"RTN","PXPXRM",7,0)
 S VISIT=$G(^AUPNVSIT(X(3),0))
"RTN","PXPXRM",8,0)
 I VISIT="" Q
"RTN","PXPXRM",9,0)
 S VDATE=$P(VISIT,U,1)
"RTN","PXPXRM",10,0)
 K ^PXRMINDX(FILENUM,"IP",X(1),X(2),VDATE,DA)
"RTN","PXPXRM",11,0)
 K ^PXRMINDX(FILENUM,"PI",X(2),X(1),VDATE,DA)
"RTN","PXPXRM",12,0)
 Q
"RTN","PXPXRM",13,0)
 ;
"RTN","PXPXRM",14,0)
 ;===============================================================
"RTN","PXPXRM",15,0)
KVFILEC(FILENUM,X,DA) ;Delete indexes for V Files with coded entries.
"RTN","PXPXRM",16,0)
 N CTYPE,VDATE,VISIT
"RTN","PXPXRM",17,0)
 S VISIT=$G(^AUPNVSIT(X(3),0))
"RTN","PXPXRM",18,0)
 I VISIT="" Q
"RTN","PXPXRM",19,0)
 S CTYPE=$S(X(4)="":"U",1:X(4))
"RTN","PXPXRM",20,0)
 S VDATE=$P(VISIT,U,1)
"RTN","PXPXRM",21,0)
 K ^PXRMINDX(FILENUM,"IPP",X(1),CTYPE,X(2),VDATE,DA)
"RTN","PXPXRM",22,0)
 K ^PXRMINDX(FILENUM,"PPI",X(2),CTYPE,X(1),VDATE,DA)
"RTN","PXPXRM",23,0)
 Q
"RTN","PXPXRM",24,0)
 ;
"RTN","PXPXRM",25,0)
 ;===============================================================
"RTN","PXPXRM",26,0)
SVFILE(FILENUM,X,DA) ;Set indexes for a regular V File.
"RTN","PXPXRM",27,0)
 ;X(1)=ITEM, X(2)=DFN, X(3)=VISIT.
"RTN","PXPXRM",28,0)
 N VDATE,VISIT
"RTN","PXPXRM",29,0)
 S VISIT=$G(^AUPNVSIT(X(3),0))
"RTN","PXPXRM",30,0)
 I VISIT="" Q
"RTN","PXPXRM",31,0)
 S VDATE=$P(VISIT,U,1)
"RTN","PXPXRM",32,0)
 S ^PXRMINDX(FILENUM,"IP",X(1),X(2),VDATE,DA)=""
"RTN","PXPXRM",33,0)
 S ^PXRMINDX(FILENUM,"PI",X(2),X(1),VDATE,DA)=""
"RTN","PXPXRM",34,0)
 Q
"RTN","PXPXRM",35,0)
 ;
"RTN","PXPXRM",36,0)
 ;===============================================================
"RTN","PXPXRM",37,0)
SVFILEC(FILENUM,X,DA) ;Set indexes for V Files with coded entries. These
"RTN","PXPXRM",38,0)
 ;are V CPT and VPOV
"RTN","PXPXRM",39,0)
 ;X(1)=ITEM, X(2)=DFN, X(3)=VISIT,
"RTN","PXPXRM",40,0)
 ;X(4)=PRINCIPAL PROCEDURE for V CPT
"RTN","PXPXRM",41,0)
 ;X(4)=PRIMARY/SECONDARY for V POV
"RTN","PXPXRM",42,0)
 N CTYPE,VDATE,VISIT
"RTN","PXPXRM",43,0)
 S VISIT=$G(^AUPNVSIT(X(3),0))
"RTN","PXPXRM",44,0)
 I VISIT="" Q
"RTN","PXPXRM",45,0)
 S CTYPE=$S(X(4)="":"U",1:X(4))
"RTN","PXPXRM",46,0)
 S VDATE=$P(VISIT,U,1)
"RTN","PXPXRM",47,0)
 S ^PXRMINDX(FILENUM,"IPP",X(1),CTYPE,X(2),VDATE,DA)=""
"RTN","PXPXRM",48,0)
 S ^PXRMINDX(FILENUM,"PPI",X(2),CTYPE,X(1),VDATE,DA)=""
"RTN","PXPXRM",49,0)
 Q
"RTN","PXPXRM",50,0)
 ;
"RTN","PXPXRM",51,0)
 ;===============================================================
"RTN","PXPXRM",52,0)
VCPT(DA,DATA) ;Return data for a specified V CPT entry.
"RTN","PXPXRM",53,0)
 N TEMP
"RTN","PXPXRM",54,0)
 S TEMP=^AUPNVCPT(DA,0)
"RTN","PXPXRM",55,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXPXRM",56,0)
 S DATA("PROVIDER NARRATIVE")=$P(TEMP,U,4)
"RTN","PXPXRM",57,0)
 S DATA("DIAGNOSIS")=$P(TEMP,U,5)
"RTN","PXPXRM",58,0)
 S DATA("PRINCIPAL PROCEDURE")=$P(TEMP,U,7)
"RTN","PXPXRM",59,0)
 S DATA("QUANTITY")=$P(TEMP,U,16)
"RTN","PXPXRM",60,0)
 S DATA("COMMENTS")=$G(^AUPNVCPT(DA,811))
"RTN","PXPXRM",61,0)
 Q
"RTN","PXPXRM",62,0)
 ;
"RTN","PXPXRM",63,0)
 ;===============================================================
"RTN","PXPXRM",64,0)
VHF(DA,DATA) ;Return data for a specified V Health Factor entry.
"RTN","PXPXRM",65,0)
 N TEMP
"RTN","PXPXRM",66,0)
 S TEMP=^AUPNVHF(DA,0)
"RTN","PXPXRM",67,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXPXRM",68,0)
 S (DATA("LEVEL/SEVERITY"),DATA("VALUE"))=$P(TEMP,U,4)
"RTN","PXPXRM",69,0)
 S DATA("COMMENTS")=$G(^AUPNVHF(DA,811))
"RTN","PXPXRM",70,0)
 Q
"RTN","PXPXRM",71,0)
 ;
"RTN","PXPXRM",72,0)
 ;===============================================================
"RTN","PXPXRM",73,0)
VIMM(DA,DATA) ;Return data, for a specified V Immunization entry.
"RTN","PXPXRM",74,0)
 N TEMP
"RTN","PXPXRM",75,0)
 S TEMP=^AUPNVIMM(DA,0)
"RTN","PXPXRM",76,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXPXRM",77,0)
 S (DATA("SERIES"),DATA("VALUE"))=$P(TEMP,U,4)
"RTN","PXPXRM",78,0)
 S DATA("REACTION")=$P(TEMP,U,6)
"RTN","PXPXRM",79,0)
 S DATA("CONTRAINDICATED")=$P(TEMP,U,7)
"RTN","PXPXRM",80,0)
 S DATA("COMMENTS")=$G(^AUPNVIMM(DA,811))
"RTN","PXPXRM",81,0)
 Q
"RTN","PXPXRM",82,0)
 ;
"RTN","PXPXRM",83,0)
 ;===============================================================
"RTN","PXPXRM",84,0)
VPEDU(DA,DATA) ;Return data, for a specified V Patient ED entry.
"RTN","PXPXRM",85,0)
 N TEMP
"RTN","PXPXRM",86,0)
 S TEMP=^AUPNVPED(DA,0)
"RTN","PXPXRM",87,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXPXRM",88,0)
 S (DATA("LEVEL OF UNDERSTANDING"),DATA("VALUE"))=$P(TEMP,U,6)
"RTN","PXPXRM",89,0)
 S DATA("COMMENTS")=$G(^AUPNVPED(DA,811))
"RTN","PXPXRM",90,0)
 Q
"RTN","PXPXRM",91,0)
 ;
"RTN","PXPXRM",92,0)
 ;===============================================================
"RTN","PXPXRM",93,0)
VPOV(DA,DATA) ;Return data for a specified V POV entry.
"RTN","PXPXRM",94,0)
 N TEMP
"RTN","PXPXRM",95,0)
 S TEMP=^AUPNVPOV(DA,0)
"RTN","PXPXRM",96,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXPXRM",97,0)
 S DATA("PROVIDER NARRATIVE")=$P(TEMP,U,4)
"RTN","PXPXRM",98,0)
 S DATA("MODIFIER")=$P(TEMP,U,6)
"RTN","PXPXRM",99,0)
 S DATA("PRIMARY/SECONDARY")=$P(TEMP,U,12)
"RTN","PXPXRM",100,0)
 S DATA("DATE OF INJURY")=$P(TEMP,U,13)
"RTN","PXPXRM",101,0)
 S DATA("CLINICAL TERM")=$P(TEMP,U,15)
"RTN","PXPXRM",102,0)
 S DATA("PROBLEM LIST ENTRY")=$P(TEMP,U,16)
"RTN","PXPXRM",103,0)
 S DATA("COMMENTS")=$G(^AUPNVPOV(DA,811))
"RTN","PXPXRM",104,0)
 Q
"RTN","PXPXRM",105,0)
 ;
"RTN","PXPXRM",106,0)
 ;===============================================================
"RTN","PXPXRM",107,0)
VSKIN(DA,DATA) ;Return data for a specified V Skin Test entry.
"RTN","PXPXRM",108,0)
 N TEMP
"RTN","PXPXRM",109,0)
 S TEMP=^AUPNVSK(DA,0)
"RTN","PXPXRM",110,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXPXRM",111,0)
 S (DATA("RESULTS"),DATA("VALUE"))=$P(TEMP,U,4)
"RTN","PXPXRM",112,0)
 S DATA("READING")=$P(TEMP,U,5)
"RTN","PXPXRM",113,0)
 S DATA("DATE READ")=$P(TEMP,U,6)
"RTN","PXPXRM",114,0)
 S DATA("COMMENTS")=$G(^AUPNVSK(DA,811))
"RTN","PXPXRM",115,0)
 Q
"RTN","PXPXRM",116,0)
 ;
"RTN","PXPXRM",117,0)
 ;===============================================================
"RTN","PXPXRM",118,0)
VXAM(DA,DATA) ;Return data, for a specified V Exam entry.
"RTN","PXPXRM",119,0)
 N TEMP
"RTN","PXPXRM",120,0)
 S TEMP=^AUPNVXAM(DA,0)
"RTN","PXPXRM",121,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXPXRM",122,0)
 S (DATA("RESULT"),DATA("VALUE"))=$P(TEMP,U,4)
"RTN","PXPXRM",123,0)
 S DATA("COMMENTS")=$G(^AUPNVXAM(DA,811))
"RTN","PXPXRM",124,0)
 Q
"RTN","PXPXRM",125,0)
 ;
"RTN","PXPXRMI1")
0^2^B51224708
"RTN","PXPXRMI1",1,0)
PXPXRMI1 ; SLC/PKR - Build indexes for the V files. ;06/17/2003
"RTN","PXPXRMI1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**119**;Aug 12, 1996
"RTN","PXPXRMI1",3,0)
 ;DBIA 4113 supports PXRMSXRM entry points. 
"RTN","PXPXRMI1",4,0)
 ;DBIA 4114 supports setting and killing ^PXRMINDX
"RTN","PXPXRMI1",5,0)
 ;===============================================================
"RTN","PXPXRMI1",6,0)
VCPT ;Build the indexes for V CPT.
"RTN","PXPXRMI1",7,0)
 N CPT,DAS,DATE,DFN,DIFF,DONE,END,ENTRIES,ETEXT,GLOBAL,IND,NE,NERROR,PP
"RTN","PXPXRMI1",8,0)
 N START,TEMP,TENP,TEXT,VISIT
"RTN","PXPXRMI1",9,0)
 ;Don't leave any old stuff around.
"RTN","PXPXRMI1",10,0)
 K ^PXRMINDX(9000010.18)
"RTN","PXPXRMI1",11,0)
 S GLOBAL=$$GET1^DID(9000010.18,"","","GLOBAL NAME")
"RTN","PXPXRMI1",12,0)
 S ENTRIES=$P(^AUPNVCPT(0),U,4)
"RTN","PXPXRMI1",13,0)
 S TENP=ENTRIES/10
"RTN","PXPXRMI1",14,0)
 S TENP=+$P(TENP,".",1)
"RTN","PXPXRMI1",15,0)
 I TENP<1 S TENP=1
"RTN","PXPXRMI1",16,0)
 D BMES^XPDUTL("Building indexes for V CPT")
"RTN","PXPXRMI1",17,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","PXPXRMI1",18,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI1",19,0)
 S START=$H
"RTN","PXPXRMI1",20,0)
 S (DAS,DONE,IND,NE,NERROR)=0
"RTN","PXPXRMI1",21,0)
 F  S DAS=$O(^AUPNVCPT(DAS)) Q:DONE  D
"RTN","PXPXRMI1",22,0)
 . I +DAS=0 S DONE=1 Q
"RTN","PXPXRMI1",23,0)
 . I +DAS'=DAS D  Q
"RTN","PXPXRMI1",24,0)
 .. S DONE=1
"RTN","PXPXRMI1",25,0)
 .. S ETEXT="Bad ien: "_DAS_", cannot continue."
"RTN","PXPXRMI1",26,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",27,0)
 . S IND=IND+1
"RTN","PXPXRMI1",28,0)
 . I IND#TENP=0 D
"RTN","PXPXRMI1",29,0)
 .. S TEXT="Processing entry "_IND
"RTN","PXPXRMI1",30,0)
 .. D MES^XPDUTL(TEXT)
"RTN","PXPXRMI1",31,0)
 . I IND#10000=0 W "."
"RTN","PXPXRMI1",32,0)
 . S TEMP=^AUPNVCPT(DAS,0)
"RTN","PXPXRMI1",33,0)
 . S CPT=$P(TEMP,U,1)
"RTN","PXPXRMI1",34,0)
 . I CPT="" D  Q
"RTN","PXPXRMI1",35,0)
 .. S ETEXT=DAS_" missing CPT"
"RTN","PXPXRMI1",36,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",37,0)
 . I '$D(^ICPT(CPT)) D  Q
"RTN","PXPXRMI1",38,0)
 .. S ETEXT=DAS_" invalid CPT"
"RTN","PXPXRMI1",39,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",40,0)
 . S DFN=$P(TEMP,U,2)
"RTN","PXPXRMI1",41,0)
 . I DFN="" D  Q
"RTN","PXPXRMI1",42,0)
 .. S ETEXT=DAS_" missing DFN"
"RTN","PXPXRMI1",43,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",44,0)
 . S VISIT=$P(TEMP,U,3)
"RTN","PXPXRMI1",45,0)
 . I VISIT="" D  Q
"RTN","PXPXRMI1",46,0)
 .. S ETEXT=DAS_" missing visit"
"RTN","PXPXRMI1",47,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",48,0)
 . I '$D(^AUPNVSIT(VISIT)) D  Q
"RTN","PXPXRMI1",49,0)
 .. S ETEXT=DAS_" invalid visit"
"RTN","PXPXRMI1",50,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",51,0)
 . S DATE=$P(^AUPNVSIT(VISIT,0),U,1)
"RTN","PXPXRMI1",52,0)
 . I DATE="" D  Q
"RTN","PXPXRMI1",53,0)
 .. S ETEXT=DAS_" missing visit date"
"RTN","PXPXRMI1",54,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",55,0)
 . S PP=$P(TEMP,U,7)
"RTN","PXPXRMI1",56,0)
 . I PP="" S PP="U"
"RTN","PXPXRMI1",57,0)
 . S NE=NE+1
"RTN","PXPXRMI1",58,0)
 . S ^PXRMINDX(9000010.18,"IPP",CPT,PP,DFN,DATE,DAS)=""
"RTN","PXPXRMI1",59,0)
 . S ^PXRMINDX(9000010.18,"PPI",DFN,PP,CPT,DATE,DAS)=""
"RTN","PXPXRMI1",60,0)
 S END=$H
"RTN","PXPXRMI1",61,0)
 S TEXT=NE_" V CPT results indexed."
"RTN","PXPXRMI1",62,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI1",63,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","PXPXRMI1",64,0)
 ;If there were errors send a message.
"RTN","PXPXRMI1",65,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","PXPXRMI1",66,0)
 ;Send a MailMan message with the results.
"RTN","PXPXRMI1",67,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","PXPXRMI1",68,0)
 S ^PXRMINDX(9000010.18,"GLOBAL NAME")=GLOBAL
"RTN","PXPXRMI1",69,0)
 S ^PXRMINDX(9000010.18,"BUILT BY")=DUZ
"RTN","PXPXRMI1",70,0)
 S ^PXRMINDX(9000010.18,"DATE BUILT")=$$NOW^XLFDT
"RTN","PXPXRMI1",71,0)
 Q
"RTN","PXPXRMI1",72,0)
 ;
"RTN","PXPXRMI1",73,0)
 ;===============================================================
"RTN","PXPXRMI1",74,0)
VHF ;Build the indexes for V HEALTH FACTORS.
"RTN","PXPXRMI1",75,0)
 N CAT,DAS,DATE,DFN,DIFF,DONE,END,ENTRIES,ETEXT,GLOBAL,HF,IND,NE,NERROR
"RTN","PXPXRMI1",76,0)
 N START,TEMP,TENP,TEXT,VISIT
"RTN","PXPXRMI1",77,0)
 ;Don't leave any old stuff around.
"RTN","PXPXRMI1",78,0)
 K ^PXRMINDX(9000010.23)
"RTN","PXPXRMI1",79,0)
 S GLOBAL=$$GET1^DID(9000010.23,"","","GLOBAL NAME")
"RTN","PXPXRMI1",80,0)
 S ENTRIES=$P(^AUPNVHF(0),U,4)
"RTN","PXPXRMI1",81,0)
 S TENP=ENTRIES/10
"RTN","PXPXRMI1",82,0)
 S TENP=+$P(TENP,".",1)
"RTN","PXPXRMI1",83,0)
 I TENP<1 S TENP=1
"RTN","PXPXRMI1",84,0)
 D BMES^XPDUTL("Building indexes for V HEALTH FACTORS")
"RTN","PXPXRMI1",85,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","PXPXRMI1",86,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI1",87,0)
 S START=$H
"RTN","PXPXRMI1",88,0)
 S (DAS,DONE,IND,NE,NERROR)=0
"RTN","PXPXRMI1",89,0)
 F  S DAS=$O(^AUPNVHF(DAS)) Q:DONE  D
"RTN","PXPXRMI1",90,0)
 . I +DAS=0 S DONE=1 Q
"RTN","PXPXRMI1",91,0)
 . I +DAS'=DAS D  Q
"RTN","PXPXRMI1",92,0)
 .. S DONE=1
"RTN","PXPXRMI1",93,0)
 .. S ETEXT="Bad ien: "_DAS_", cannot continue."
"RTN","PXPXRMI1",94,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",95,0)
 . S IND=IND+1
"RTN","PXPXRMI1",96,0)
 . I IND#TENP=0 D
"RTN","PXPXRMI1",97,0)
 .. S TEXT="Processing entry "_IND
"RTN","PXPXRMI1",98,0)
 .. D MES^XPDUTL(TEXT)
"RTN","PXPXRMI1",99,0)
 . I IND#10000=0 W "."
"RTN","PXPXRMI1",100,0)
 . S TEMP=^AUPNVHF(DAS,0)
"RTN","PXPXRMI1",101,0)
 . S HF=$P(TEMP,U,1)
"RTN","PXPXRMI1",102,0)
 . I HF="" D  Q
"RTN","PXPXRMI1",103,0)
 .. S ETEXT=DAS_" missing HF"
"RTN","PXPXRMI1",104,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",105,0)
 . I '$D(^AUTTHF(HF)) D  Q
"RTN","PXPXRMI1",106,0)
 .. S ETEXT=DAS_" invalid HF"
"RTN","PXPXRMI1",107,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",108,0)
 . S DFN=$P(TEMP,U,2)
"RTN","PXPXRMI1",109,0)
 . I DFN="" D  Q
"RTN","PXPXRMI1",110,0)
 .. S ETEXT=DAS_" missing DFN"
"RTN","PXPXRMI1",111,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",112,0)
 . S CAT=$P(^AUTTHF(HF,0),U,3)
"RTN","PXPXRMI1",113,0)
 . I CAT="" D  Q
"RTN","PXPXRMI1",114,0)
 .. S ETEXT=DAS_" HF "_HF_" missing category"
"RTN","PXPXRMI1",115,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",116,0)
 . I HF=CAT D  Q
"RTN","PXPXRMI1",117,0)
 .. S ETEXT=DAS_" HF "_HF_" is a category"
"RTN","PXPXRMI1",118,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",119,0)
 . S VISIT=$P(TEMP,U,3)
"RTN","PXPXRMI1",120,0)
 . I VISIT="" D  Q
"RTN","PXPXRMI1",121,0)
 .. S ETEXT=DAS_" missing visit"
"RTN","PXPXRMI1",122,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",123,0)
 . I '$D(^AUPNVSIT(VISIT)) D  Q
"RTN","PXPXRMI1",124,0)
 .. S ETEXT=DAS_" invalid visit"
"RTN","PXPXRMI1",125,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",126,0)
 . S DATE=$P(^AUPNVSIT(VISIT,0),U,1)
"RTN","PXPXRMI1",127,0)
 . I DATE="" D  Q
"RTN","PXPXRMI1",128,0)
 .. S ETEXT=DAS_" missing visit date"
"RTN","PXPXRMI1",129,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",130,0)
 . S NE=NE+1
"RTN","PXPXRMI1",131,0)
 . S ^PXRMINDX(9000010.23,"IP",HF,DFN,DATE,DAS)=""
"RTN","PXPXRMI1",132,0)
 . S ^PXRMINDX(9000010.23,"PI",DFN,HF,DATE,DAS)=""
"RTN","PXPXRMI1",133,0)
 S END=$H
"RTN","PXPXRMI1",134,0)
 S TEXT=NE_" V HEALTH FACTOR results indexed."
"RTN","PXPXRMI1",135,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI1",136,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","PXPXRMI1",137,0)
 ;If there were errors send a message.
"RTN","PXPXRMI1",138,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","PXPXRMI1",139,0)
 ;Send a MailMan message with the results.
"RTN","PXPXRMI1",140,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","PXPXRMI1",141,0)
 S ^PXRMINDX(9000010.23,"GLOBAL NAME")=GLOBAL
"RTN","PXPXRMI1",142,0)
 S ^PXRMINDX(9000010.23,"BUILT BY")=DUZ
"RTN","PXPXRMI1",143,0)
 S ^PXRMINDX(9000010.23,"DATE BUILT")=$$NOW^XLFDT
"RTN","PXPXRMI1",144,0)
 Q
"RTN","PXPXRMI1",145,0)
 ;
"RTN","PXPXRMI1",146,0)
 ;===============================================================
"RTN","PXPXRMI1",147,0)
VIMM ;Build the indexes for V IMMUNIZATION.
"RTN","PXPXRMI1",148,0)
 N DAS,DATE,DFN,DIFF,DONE,END,ENTRIES,ETEXT,GLOBAL,IMM,IND,NE,NERROR
"RTN","PXPXRMI1",149,0)
 N START,TEMP,TENP,TEXT,VISIT
"RTN","PXPXRMI1",150,0)
 ;Don't leave any old stuff around.
"RTN","PXPXRMI1",151,0)
 K ^PXRMINDX(9000010.11)
"RTN","PXPXRMI1",152,0)
 S GLOBAL=$$GET1^DID(9000010.11,"","","GLOBAL NAME")
"RTN","PXPXRMI1",153,0)
 S ENTRIES=$P(^AUPNVIMM(0),U,4)
"RTN","PXPXRMI1",154,0)
 S TENP=ENTRIES/10
"RTN","PXPXRMI1",155,0)
 S TENP=+$P(TENP,".",1)
"RTN","PXPXRMI1",156,0)
 I TENP<1 S TENP=1
"RTN","PXPXRMI1",157,0)
 D BMES^XPDUTL("Building indexes for V IMMUNIZATION")
"RTN","PXPXRMI1",158,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","PXPXRMI1",159,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI1",160,0)
 S START=$H
"RTN","PXPXRMI1",161,0)
 S (DAS,DONE,IND,NE,NERROR)=0
"RTN","PXPXRMI1",162,0)
 F  S DAS=$O(^AUPNVIMM(DAS)) Q:DONE  D
"RTN","PXPXRMI1",163,0)
 . I +DAS=0 S DONE=1 Q
"RTN","PXPXRMI1",164,0)
 . I +DAS'=DAS D  Q
"RTN","PXPXRMI1",165,0)
 .. S DONE=1
"RTN","PXPXRMI1",166,0)
 .. S ETEXT="Bad ien: "_DAS_", cannot continue."
"RTN","PXPXRMI1",167,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",168,0)
 . S IND=IND+1
"RTN","PXPXRMI1",169,0)
 . I IND#TENP=0 D
"RTN","PXPXRMI1",170,0)
 .. S TEXT="Processing entry "_IND
"RTN","PXPXRMI1",171,0)
 .. D MES^XPDUTL(TEXT)
"RTN","PXPXRMI1",172,0)
 . I IND#10000=0 W "."
"RTN","PXPXRMI1",173,0)
 . S TEMP=^AUPNVIMM(DAS,0)
"RTN","PXPXRMI1",174,0)
 . S IMM=$P(TEMP,U,1)
"RTN","PXPXRMI1",175,0)
 . I IMM="" D  Q
"RTN","PXPXRMI1",176,0)
 .. S ETEXT=DAS_" missing immunization"
"RTN","PXPXRMI1",177,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",178,0)
 . I '$D(^AUTTIMM(IMM)) D  Q
"RTN","PXPXRMI1",179,0)
 .. S ETEXT=DAS_" invalid immunization"
"RTN","PXPXRMI1",180,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",181,0)
 . S DFN=$P(TEMP,U,2)
"RTN","PXPXRMI1",182,0)
 . I DFN="" D  Q
"RTN","PXPXRMI1",183,0)
 .. S ETEXT=DAS_" missing DFN"
"RTN","PXPXRMI1",184,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",185,0)
 . S VISIT=$P(TEMP,U,3)
"RTN","PXPXRMI1",186,0)
 . I VISIT="" D  Q
"RTN","PXPXRMI1",187,0)
 .. S ETEXT=DAS_" missing visit"
"RTN","PXPXRMI1",188,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",189,0)
 . I '$D(^AUPNVSIT(VISIT)) D  Q
"RTN","PXPXRMI1",190,0)
 .. S ETEXT=DAS_" invalid visit"
"RTN","PXPXRMI1",191,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",192,0)
 . S DATE=$P(^AUPNVSIT(VISIT,0),U,1)
"RTN","PXPXRMI1",193,0)
 . I DATE="" D  Q
"RTN","PXPXRMI1",194,0)
 .. S ETEXT=DAS_" missing visit date"
"RTN","PXPXRMI1",195,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI1",196,0)
 . S NE=NE+1
"RTN","PXPXRMI1",197,0)
 . S ^PXRMINDX(9000010.11,"IP",IMM,DFN,DATE,DAS)=""
"RTN","PXPXRMI1",198,0)
 . S ^PXRMINDX(9000010.11,"PI",DFN,IMM,DATE,DAS)=""
"RTN","PXPXRMI1",199,0)
 S END=$H
"RTN","PXPXRMI1",200,0)
 S TEXT=NE_" V IMMUNIZATION results indexed."
"RTN","PXPXRMI1",201,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI1",202,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","PXPXRMI1",203,0)
 ;If there were errors send a message.
"RTN","PXPXRMI1",204,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","PXPXRMI1",205,0)
 ;Send a MailMan message with the results.
"RTN","PXPXRMI1",206,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","PXPXRMI1",207,0)
 S ^PXRMINDX(9000010.11,"GLOBAL NAME")=GLOBAL
"RTN","PXPXRMI1",208,0)
 S ^PXRMINDX(9000010.11,"BUILT BY")=DUZ
"RTN","PXPXRMI1",209,0)
 S ^PXRMINDX(9000010.11,"DATE BUILT")=$$NOW^XLFDT
"RTN","PXPXRMI1",210,0)
 Q
"RTN","PXPXRMI1",211,0)
 ;
"RTN","PXPXRMI2")
0^3^B79678940
"RTN","PXPXRMI2",1,0)
PXPXRMI2 ; SLC/PKR - Build indexes for the V files (continued). ;06/17/2003
"RTN","PXPXRMI2",2,0)
       ;;1.0;PCE PATIENT CARE ENCOUNTER;**119**;Aug 12, 1996
"RTN","PXPXRMI2",3,0)
 ;DBIA 4113 supports PXRMSXRM entry points. 
"RTN","PXPXRMI2",4,0)
 ;DBIA 4114 supports setting and killing ^PXRMINDX
"RTN","PXPXRMI2",5,0)
 ;===============================================================
"RTN","PXPXRMI2",6,0)
VPED ;Build the indexes for V PATIENT ED.
"RTN","PXPXRMI2",7,0)
 N DAS,DATE,DFN,DIFF,DONE,EDU,END,ENTRIES,ETEXT,GLOBAL,IND,NE,NERROR
"RTN","PXPXRMI2",8,0)
 N START,TEMP,TENP,TEXT,VISIT
"RTN","PXPXRMI2",9,0)
 ;Don't leave any old stuff around.
"RTN","PXPXRMI2",10,0)
 K ^PXRMINDX(9000010.16)
"RTN","PXPXRMI2",11,0)
 S GLOBAL=$$GET1^DID(9000010.16,"","","GLOBAL NAME")
"RTN","PXPXRMI2",12,0)
 S ENTRIES=$P(^AUPNVPED(0),U,4)
"RTN","PXPXRMI2",13,0)
 S TENP=ENTRIES/10
"RTN","PXPXRMI2",14,0)
 S TENP=+$P(TENP,".",1)
"RTN","PXPXRMI2",15,0)
 I TENP<1 S TENP=1
"RTN","PXPXRMI2",16,0)
 D BMES^XPDUTL("Building indexes for V PATIENT ED")
"RTN","PXPXRMI2",17,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","PXPXRMI2",18,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI2",19,0)
 S START=$H
"RTN","PXPXRMI2",20,0)
 S (DAS,DONE,IND,NE,NERROR)=0
"RTN","PXPXRMI2",21,0)
 F  S DAS=$O(^AUPNVPED(DAS)) Q:DONE  D
"RTN","PXPXRMI2",22,0)
 . I +DAS=0 S DONE=1 Q
"RTN","PXPXRMI2",23,0)
 . I +DAS'=DAS D  Q
"RTN","PXPXRMI2",24,0)
 .. S DONE=1
"RTN","PXPXRMI2",25,0)
 .. S ETEXT="Bad ien: "_DAS_", cannot continue."
"RTN","PXPXRMI2",26,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",27,0)
 . S IND=IND+1
"RTN","PXPXRMI2",28,0)
 . I IND#TENP=0 D
"RTN","PXPXRMI2",29,0)
 .. S TEXT="Processing entry "_IND
"RTN","PXPXRMI2",30,0)
 .. D MES^XPDUTL(TEXT)
"RTN","PXPXRMI2",31,0)
 . I IND#10000=0 W "."
"RTN","PXPXRMI2",32,0)
 . S TEMP=^AUPNVPED(DAS,0)
"RTN","PXPXRMI2",33,0)
 . S EDU=$P(TEMP,U,1)
"RTN","PXPXRMI2",34,0)
 . I EDU="" D  Q
"RTN","PXPXRMI2",35,0)
 .. S ETEXT=DAS_" missing education topic"
"RTN","PXPXRMI2",36,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",37,0)
 . I '$D(^AUTTEDT(EDU)) D  Q
"RTN","PXPXRMI2",38,0)
 .. S ETEXT=DAS_" invalid education topic"
"RTN","PXPXRMI2",39,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",40,0)
 . S DFN=$P(TEMP,U,2)
"RTN","PXPXRMI2",41,0)
 . I DFN="" D  Q
"RTN","PXPXRMI2",42,0)
 .. S ETEXT=DAS_" missing DFN"
"RTN","PXPXRMI2",43,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",44,0)
 . S VISIT=$P(TEMP,U,3)
"RTN","PXPXRMI2",45,0)
 . I VISIT="" D  Q
"RTN","PXPXRMI2",46,0)
 .. S ETEXT=DAS_" missing visit"
"RTN","PXPXRMI2",47,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",48,0)
 . I '$D(^AUPNVSIT(VISIT)) D  Q
"RTN","PXPXRMI2",49,0)
 .. S ETEXT=DAS_" invalid visit"
"RTN","PXPXRMI2",50,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",51,0)
 . S DATE=$P(^AUPNVSIT(VISIT,0),U,1)
"RTN","PXPXRMI2",52,0)
 . I DATE="" D  Q
"RTN","PXPXRMI2",53,0)
 .. S ETEXT=DAS_" missing visit date"
"RTN","PXPXRMI2",54,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",55,0)
 . S NE=NE+1
"RTN","PXPXRMI2",56,0)
 . S ^PXRMINDX(9000010.16,"IP",EDU,DFN,DATE,DAS)=""
"RTN","PXPXRMI2",57,0)
 . S ^PXRMINDX(9000010.16,"PI",DFN,EDU,DATE,DAS)=""
"RTN","PXPXRMI2",58,0)
 S END=$H
"RTN","PXPXRMI2",59,0)
 S TEXT=NE_" V PATIENT ED results indexed."
"RTN","PXPXRMI2",60,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI2",61,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","PXPXRMI2",62,0)
 ;If there were errors send a message.
"RTN","PXPXRMI2",63,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","PXPXRMI2",64,0)
 ;Send a MailMan message with the results.
"RTN","PXPXRMI2",65,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","PXPXRMI2",66,0)
 S ^PXRMINDX(9000010.16,"GLOBAL NAME")=GLOBAL
"RTN","PXPXRMI2",67,0)
 S ^PXRMINDX(9000010.16,"BUILT BY")=DUZ
"RTN","PXPXRMI2",68,0)
 S ^PXRMINDX(9000010.16,"DATE BUILT")=$$NOW^XLFDT
"RTN","PXPXRMI2",69,0)
 Q
"RTN","PXPXRMI2",70,0)
 ;
"RTN","PXPXRMI2",71,0)
 ;===============================================================
"RTN","PXPXRMI2",72,0)
VPOV ;Build the indexes for V POV.
"RTN","PXPXRMI2",73,0)
 N DAS,DATE,DFN,DIFF,DONE,END,ENTRIES,ETEXT,GLOBAL,IND,NE,NERROR,POV,PS
"RTN","PXPXRMI2",74,0)
 N START,TEMP,TENP,TEXT,VISIT
"RTN","PXPXRMI2",75,0)
 ;Don't leave any old stuff around.
"RTN","PXPXRMI2",76,0)
 K ^PXRMINDX(9000010.07)
"RTN","PXPXRMI2",77,0)
 S GLOBAL=$$GET1^DID(9000010.07,"","","GLOBAL NAME")
"RTN","PXPXRMI2",78,0)
 S ENTRIES=$P(^AUPNVPOV(0),U,4)
"RTN","PXPXRMI2",79,0)
 S TENP=ENTRIES/10
"RTN","PXPXRMI2",80,0)
 S TENP=+$P(TENP,".",1)
"RTN","PXPXRMI2",81,0)
 I TENP<1 S TENP=1
"RTN","PXPXRMI2",82,0)
 D BMES^XPDUTL("Building indexes for V POV")
"RTN","PXPXRMI2",83,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","PXPXRMI2",84,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI2",85,0)
 S START=$H
"RTN","PXPXRMI2",86,0)
 S (DAS,DONE,IND,NE,NERROR)=0
"RTN","PXPXRMI2",87,0)
 F  S DAS=$O(^AUPNVPOV(DAS)) Q:DONE  D
"RTN","PXPXRMI2",88,0)
 . I +DAS=0 S DONE=1 Q
"RTN","PXPXRMI2",89,0)
 . I +DAS'=DAS D  Q
"RTN","PXPXRMI2",90,0)
 .. S DONE=1
"RTN","PXPXRMI2",91,0)
 .. S ETEXT="Bad ien: "_DAS_", cannot continue."
"RTN","PXPXRMI2",92,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",93,0)
 . S IND=IND+1
"RTN","PXPXRMI2",94,0)
 . I IND#TENP=0 D
"RTN","PXPXRMI2",95,0)
 .. S TEXT="Processing entry "_IND
"RTN","PXPXRMI2",96,0)
 .. D MES^XPDUTL(TEXT)
"RTN","PXPXRMI2",97,0)
 . I IND#10000=0 W "."
"RTN","PXPXRMI2",98,0)
 . S TEMP=^AUPNVPOV(DAS,0)
"RTN","PXPXRMI2",99,0)
 . S POV=$P(TEMP,U,1)
"RTN","PXPXRMI2",100,0)
 . I POV="" D  Q
"RTN","PXPXRMI2",101,0)
 .. S ETEXT=DAS_" missing POV (ICD9)"
"RTN","PXPXRMI2",102,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",103,0)
 . I '$D(^ICD9(POV)) D  Q
"RTN","PXPXRMI2",104,0)
 .. S ETEXT=DAS_" invalid ICD9"
"RTN","PXPXRMI2",105,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",106,0)
 . S DFN=$P(TEMP,U,2)
"RTN","PXPXRMI2",107,0)
 . I DFN="" D  Q
"RTN","PXPXRMI2",108,0)
 .. S ETEXT=DAS_" missing DFN"
"RTN","PXPXRMI2",109,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",110,0)
 . S VISIT=$P(TEMP,U,3)
"RTN","PXPXRMI2",111,0)
 . I VISIT="" D  Q
"RTN","PXPXRMI2",112,0)
 .. S ETEXT=DAS_" missing visit"
"RTN","PXPXRMI2",113,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",114,0)
 . I '$D(^AUPNVSIT(VISIT)) D  Q
"RTN","PXPXRMI2",115,0)
 .. S ETEXT=DAS_" invalid visit"
"RTN","PXPXRMI2",116,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",117,0)
 . S PS=$P(TEMP,U,12)
"RTN","PXPXRMI2",118,0)
 . I PS="" S PS="U"
"RTN","PXPXRMI2",119,0)
 . S DATE=$P(^AUPNVSIT(VISIT,0),U,1)
"RTN","PXPXRMI2",120,0)
 . I DATE="" D  Q
"RTN","PXPXRMI2",121,0)
 .. S ETEXT=DAS_" missing visit date"
"RTN","PXPXRMI2",122,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",123,0)
 . S NE=NE+1
"RTN","PXPXRMI2",124,0)
 . S ^PXRMINDX(9000010.07,"IPP",POV,PS,DFN,DATE,DAS)=""
"RTN","PXPXRMI2",125,0)
 . S ^PXRMINDX(9000010.07,"PPI",DFN,PS,POV,DATE,DAS)=""
"RTN","PXPXRMI2",126,0)
 S END=$H
"RTN","PXPXRMI2",127,0)
 S TEXT=NE_" V POV results indexed."
"RTN","PXPXRMI2",128,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI2",129,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","PXPXRMI2",130,0)
 ;If there were errors send a message.
"RTN","PXPXRMI2",131,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","PXPXRMI2",132,0)
 ;Send a MailMan message with the results.
"RTN","PXPXRMI2",133,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","PXPXRMI2",134,0)
 S ^PXRMINDX(9000010.07,"GLOBAL NAME")=GLOBAL
"RTN","PXPXRMI2",135,0)
 S ^PXRMINDX(9000010.07,"BUILT BY")=DUZ
"RTN","PXPXRMI2",136,0)
 S ^PXRMINDX(9000010.07,"DATE BUILT")=$$NOW^XLFDT
"RTN","PXPXRMI2",137,0)
 Q
"RTN","PXPXRMI2",138,0)
 ;
"RTN","PXPXRMI2",139,0)
 ;===============================================================
"RTN","PXPXRMI2",140,0)
VSK ;Build the indexes for V SKIN TEST.
"RTN","PXPXRMI2",141,0)
 N DAS,DATE,DFN,DIFF,DONE,END,ENTRIES,GLOBAL,IND,NE,NERROR
"RTN","PXPXRMI2",142,0)
 N SK,START,TEMP,TENP,TEXT,VISIT
"RTN","PXPXRMI2",143,0)
 ;Don't leave any old stuff around.
"RTN","PXPXRMI2",144,0)
 K ^PXRMINDX(9000010.12)
"RTN","PXPXRMI2",145,0)
 S GLOBAL=$$GET1^DID(9000010.12,"","","GLOBAL NAME")
"RTN","PXPXRMI2",146,0)
 S ENTRIES=$P(^AUPNVSK(0),U,4)
"RTN","PXPXRMI2",147,0)
 S TENP=ENTRIES/10
"RTN","PXPXRMI2",148,0)
 S TENP=+$P(TENP,".",1)
"RTN","PXPXRMI2",149,0)
 I TENP<1 S TENP=1
"RTN","PXPXRMI2",150,0)
 D BMES^XPDUTL("Building indexes for V SKIN TEST")
"RTN","PXPXRMI2",151,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","PXPXRMI2",152,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI2",153,0)
 S START=$H
"RTN","PXPXRMI2",154,0)
 S (DAS,DONE,IND,NE,NERROR)=0
"RTN","PXPXRMI2",155,0)
 F  S DAS=$O(^AUPNVSK(DAS)) Q:DONE  D
"RTN","PXPXRMI2",156,0)
 . I +DAS=0 S DONE=1 Q
"RTN","PXPXRMI2",157,0)
 . I +DAS'=DAS D  Q
"RTN","PXPXRMI2",158,0)
 .. S DONE=1
"RTN","PXPXRMI2",159,0)
 .. S ETEXT="Bad ien: "_DAS_", cannot continue."
"RTN","PXPXRMI2",160,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",161,0)
 . S IND=IND+1
"RTN","PXPXRMI2",162,0)
 . I IND#TENP=0 D
"RTN","PXPXRMI2",163,0)
 .. S TEXT="Processing entry "_IND
"RTN","PXPXRMI2",164,0)
 .. D MES^XPDUTL(TEXT)
"RTN","PXPXRMI2",165,0)
 . I IND#10000=0 W "."
"RTN","PXPXRMI2",166,0)
 . S TEMP=^AUPNVSK(DAS,0)
"RTN","PXPXRMI2",167,0)
 . S SK=$P(TEMP,U,1)
"RTN","PXPXRMI2",168,0)
 . I SK="" D  Q
"RTN","PXPXRMI2",169,0)
 .. S ETEXT=DAS_" missing skin test"
"RTN","PXPXRMI2",170,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",171,0)
 . I '$D(^AUTTSK(SK)) D  Q
"RTN","PXPXRMI2",172,0)
 .. S ETEXT=DAS_" invalid skin test"
"RTN","PXPXRMI2",173,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",174,0)
 . S DFN=$P(TEMP,U,2)
"RTN","PXPXRMI2",175,0)
 . I DFN="" D  Q
"RTN","PXPXRMI2",176,0)
 .. S ETEXT=DAS_" missing DFN"
"RTN","PXPXRMI2",177,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",178,0)
 . S VISIT=$P(TEMP,U,3)
"RTN","PXPXRMI2",179,0)
 . I VISIT="" D  Q
"RTN","PXPXRMI2",180,0)
 .. S ETEXT=DAS_" missing visit"
"RTN","PXPXRMI2",181,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",182,0)
 . I '$D(^AUPNVSIT(VISIT)) D  Q
"RTN","PXPXRMI2",183,0)
 .. S ETEXT=DAS_" invalid visit"
"RTN","PXPXRMI2",184,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",185,0)
 . S DATE=$P(^AUPNVSIT(VISIT,0),U,1)
"RTN","PXPXRMI2",186,0)
 . I DATE="" D  Q
"RTN","PXPXRMI2",187,0)
 .. S ETEXT=DAS_" missing visit date"
"RTN","PXPXRMI2",188,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",189,0)
 . S NE=NE+1
"RTN","PXPXRMI2",190,0)
 . S ^PXRMINDX(9000010.12,"IP",SK,DFN,DATE,DAS)=""
"RTN","PXPXRMI2",191,0)
 . S ^PXRMINDX(9000010.12,"PI",DFN,SK,DATE,DAS)=""
"RTN","PXPXRMI2",192,0)
 S END=$H
"RTN","PXPXRMI2",193,0)
 S TEXT=NE_" V SKIN TEST results indexed."
"RTN","PXPXRMI2",194,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI2",195,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","PXPXRMI2",196,0)
 ;If there were errors send a message.
"RTN","PXPXRMI2",197,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","PXPXRMI2",198,0)
 ;Send a MailMan message with the results.
"RTN","PXPXRMI2",199,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","PXPXRMI2",200,0)
 S ^PXRMINDX(9000010.12,"GLOBAL NAME")=GLOBAL
"RTN","PXPXRMI2",201,0)
 S ^PXRMINDX(9000010.12,"BUILT BY")=DUZ
"RTN","PXPXRMI2",202,0)
 S ^PXRMINDX(9000010.12,"DATE BUILT")=$$NOW^XLFDT
"RTN","PXPXRMI2",203,0)
 Q
"RTN","PXPXRMI2",204,0)
 ;
"RTN","PXPXRMI2",205,0)
 ;===============================================================
"RTN","PXPXRMI2",206,0)
VXAM ;Build the indexes for V EXAM.
"RTN","PXPXRMI2",207,0)
 N DAS,DATE,DFN,DIFF,DONE,END,ENTRIES,ETEXT,EXAM,GLOBAL,IND,NE,NERROR
"RTN","PXPXRMI2",208,0)
 N START,TEMP,TENP,TEXT,VISIT
"RTN","PXPXRMI2",209,0)
 ;Don't leave any old stuff around.
"RTN","PXPXRMI2",210,0)
 K ^PXRMINDX(9000010.13)
"RTN","PXPXRMI2",211,0)
 S GLOBAL=$$GET1^DID(9000010.13,"","","GLOBAL NAME")
"RTN","PXPXRMI2",212,0)
 S ENTRIES=$P(^AUPNVXAM(0),U,4)
"RTN","PXPXRMI2",213,0)
 S TENP=ENTRIES/10
"RTN","PXPXRMI2",214,0)
 S TENP=+$P(TENP,".",1)
"RTN","PXPXRMI2",215,0)
 I TENP<1 S TENP=1
"RTN","PXPXRMI2",216,0)
 D BMES^XPDUTL("Building indexes for V EXAM")
"RTN","PXPXRMI2",217,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","PXPXRMI2",218,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI2",219,0)
 S START=$H
"RTN","PXPXRMI2",220,0)
 S (DAS,DONE,IND,NE,NERROR)=0
"RTN","PXPXRMI2",221,0)
 F  S DAS=$O(^AUPNVXAM(DAS)) Q:DONE  D
"RTN","PXPXRMI2",222,0)
 . I +DAS=0 S DONE=1 Q
"RTN","PXPXRMI2",223,0)
 . I +DAS'=DAS D  Q
"RTN","PXPXRMI2",224,0)
 .. S DONE=1
"RTN","PXPXRMI2",225,0)
 .. S ETEXT="Bad ien: "_DAS_", cannot continue."
"RTN","PXPXRMI2",226,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",227,0)
 . S IND=IND+1
"RTN","PXPXRMI2",228,0)
 . I IND#TENP=0 D
"RTN","PXPXRMI2",229,0)
 .. S TEXT="Processing entry "_IND
"RTN","PXPXRMI2",230,0)
 .. D MES^XPDUTL(TEXT)
"RTN","PXPXRMI2",231,0)
 . I IND#10000=0 W "."
"RTN","PXPXRMI2",232,0)
 . S TEMP=^AUPNVXAM(DAS,0)
"RTN","PXPXRMI2",233,0)
 . S EXAM=$P(TEMP,U,1)
"RTN","PXPXRMI2",234,0)
 . I EXAM="" D  Q
"RTN","PXPXRMI2",235,0)
 .. S ETEXT=DAS_" missing exam"
"RTN","PXPXRMI2",236,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",237,0)
 . I '$D(^AUTTEXAM(EXAM)) D  Q
"RTN","PXPXRMI2",238,0)
 .. S ETEXT=DAS_" invalid exam"
"RTN","PXPXRMI2",239,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",240,0)
 . S DFN=$P(TEMP,U,2)
"RTN","PXPXRMI2",241,0)
 . I DFN="" D  Q
"RTN","PXPXRMI2",242,0)
 .. S ETEXT=DAS_" missing DFN"
"RTN","PXPXRMI2",243,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",244,0)
 . S VISIT=$P(TEMP,U,3)
"RTN","PXPXRMI2",245,0)
 . I VISIT="" D  Q
"RTN","PXPXRMI2",246,0)
 .. S ETEXT=DAS_" missing visit"
"RTN","PXPXRMI2",247,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",248,0)
 . I '$D(^AUPNVSIT(VISIT)) D  Q
"RTN","PXPXRMI2",249,0)
 .. S ETEXT=DAS_" invalid visit"
"RTN","PXPXRMI2",250,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",251,0)
 . S DATE=$P(^AUPNVSIT(VISIT,0),U,1)
"RTN","PXPXRMI2",252,0)
 . I DATE="" D  Q
"RTN","PXPXRMI2",253,0)
 .. S ETEXT=DAS_" missing visit date"
"RTN","PXPXRMI2",254,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR)
"RTN","PXPXRMI2",255,0)
 . S NE=NE+1
"RTN","PXPXRMI2",256,0)
 . S ^PXRMINDX(9000010.13,"IP",EXAM,DFN,DATE,DAS)=""
"RTN","PXPXRMI2",257,0)
 . S ^PXRMINDX(9000010.13,"PI",DFN,EXAM,DATE,DAS)=""
"RTN","PXPXRMI2",258,0)
 S END=$H
"RTN","PXPXRMI2",259,0)
 S TEXT=NE_" V EXAM results indexed."
"RTN","PXPXRMI2",260,0)
 D MES^XPDUTL(TEXT)
"RTN","PXPXRMI2",261,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","PXPXRMI2",262,0)
 ;If there were errors send a message.
"RTN","PXPXRMI2",263,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","PXPXRMI2",264,0)
 ;Send a MailMan message with the results.
"RTN","PXPXRMI2",265,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","PXPXRMI2",266,0)
 S ^PXRMINDX(9000010.13,"GLOBAL NAME")=GLOBAL
"RTN","PXPXRMI2",267,0)
 S ^PXRMINDX(9000010.13,"BUILT BY")=DUZ
"RTN","PXPXRMI2",268,0)
 S ^PXRMINDX(9000010.13,"DATE BUILT")=$$NOW^XLFDT
"RTN","PXPXRMI2",269,0)
 Q
"RTN","PXPXRMI2",270,0)
 ;
"VER")
8.0^22.0
"^DD",839.7,839.7,0)
FIELD^^101^6
"^DD",839.7,839.7,0,"DDA")
N
"^DD",839.7,839.7,0,"DT")
2950308
"^DD",839.7,839.7,0,"IX","B",839.7,.01)

"^DD",839.7,839.7,0,"NM","PCE DATA SOURCE")

"^DD",839.7,839.7,0,"PT",839.01,.06)

"^DD",839.7,839.7,0,"PT",9000010,81203)

"^DD",839.7,839.7,0,"PT",9000010.06,81203)

"^DD",839.7,839.7,0,"PT",9000010.07,81203)

"^DD",839.7,839.7,0,"PT",9000010.11,81203)

"^DD",839.7,839.7,0,"PT",9000010.12,81203)

"^DD",839.7,839.7,0,"PT",9000010.13,81203)

"^DD",839.7,839.7,0,"PT",9000010.15,81203)

"^DD",839.7,839.7,0,"PT",9000010.16,81203)

"^DD",839.7,839.7,0,"PT",9000010.18,81203)

"^DD",839.7,839.7,0,"PT",9000010.23,81203)

"^DD",839.7,839.7,0,"VRPK")
PCE PATIENT CARE ENCOUNTER
"^DD",839.7,839.7,.01,0)
SOURCE NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",839.7,839.7,.01,1,0)
^.1
"^DD",839.7,839.7,.01,1,1,0)
839.7^B
"^DD",839.7,839.7,.01,1,1,1)
S ^PX(839.7,"B",$E(X,1,30),DA)=""
"^DD",839.7,839.7,.01,1,1,2)
K ^PX(839.7,"B",$E(X,1,30),DA)
"^DD",839.7,839.7,.01,3)
Answer must be 3-30 characters in length.
"^DD",839.7,839.7,.01,21,0)
^^3^3^2960326^^
"^DD",839.7,839.7,.01,21,1,0)
A unique data source identifier.  The working rule is that there will be
"^DD",839.7,839.7,.01,21,2,0)
one entry in this file for each unique
"^DD",839.7,839.7,.01,21,3,0)
  <data_source/sending_application/version> -tuple.
"^DD",839.7,839.7,.01,"DT")
2960326
"^DD",839.7,839.7,.02,0)
INTERFACE DEVICE^P3.5'^%ZIS(1,^0;2^Q
"^DD",839.7,839.7,.02,"DT")
2941012
"^DD",839.7,839.7,.03,0)
LOCATION^F^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",839.7,839.7,.03,3)
Answer must be 1-30 characters in length.
"^DD",839.7,839.7,.03,"DT")
2941012
"^DD",839.7,839.7,.04,0)
INSTITUTION^P4'^DIC(4,^0;4^Q
"^DD",839.7,839.7,.04,"DT")
2941012
"^DD",839.7,839.7,.09,0)
SEND SCHEDULING BULLETINS^S^1:SEND;0:DON'T SEND;^0;9^Q
"^DD",839.7,839.7,.09,"DT")
2950308
"^DD",839.7,839.7,101,0)
DESCRIPTION^839.7101^^1;0
"^DD",839.7,839.7101,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",839.7,839.7101,0,"DT")
2941012
"^DD",839.7,839.7101,0,"NM","DESCRIPTION")

"^DD",839.7,839.7101,0,"UP")
839.7
"^DD",839.7,839.7101,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",839.7,839.7101,.01,"DT")
2941012
"^DIC",839.7,839.7,0)
PCE DATA SOURCE^839.7
"^DIC",839.7,839.7,0,"GL")
^PX(839.7,
"^DIC",839.7,839.7,"%D",0)
^^2^2^2960809^^
"^DIC",839.7,839.7,"%D",1,0)
Entries in this file represent the originating sources of data that is
"^DIC",839.7,839.7,"%D",2,0)
stored in PCE.
"^DIC",839.7,"B","PCE DATA SOURCE",839.7)

**INSTALL NAME**
RA*5.0*33
"BLD",3817,0)
RA*5.0*33^RADIOLOGY/NUCLEAR MEDICINE^0^3041026^y
"BLD",3817,1,0)
^^1^1^3020821^^^
"BLD",3817,1,1,0)
This patch will be sent in a multi-build patch from PX*1.5*12.
"BLD",3817,4,0)
^9.64PA^^
"BLD",3817,"INIT")
RA33PST
"BLD",3817,"KRN",0)
^9.67PA^8989.52^19
"BLD",3817,"KRN",.4,0)
.4
"BLD",3817,"KRN",.401,0)
.401
"BLD",3817,"KRN",.402,0)
.402
"BLD",3817,"KRN",.403,0)
.403
"BLD",3817,"KRN",.5,0)
.5
"BLD",3817,"KRN",.84,0)
.84
"BLD",3817,"KRN",3.6,0)
3.6
"BLD",3817,"KRN",3.8,0)
3.8
"BLD",3817,"KRN",9.2,0)
9.2
"BLD",3817,"KRN",9.8,0)
9.8
"BLD",3817,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",3817,"KRN",9.8,"NM",1,0)
RAPXRM^^0^B14691287
"BLD",3817,"KRN",9.8,"NM","B","RAPXRM",1)

"BLD",3817,"KRN",19,0)
19
"BLD",3817,"KRN",19,"NM",0)
^9.68A^^
"BLD",3817,"KRN",19.1,0)
19.1
"BLD",3817,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",3817,"KRN",101,0)
101
"BLD",3817,"KRN",409.61,0)
409.61
"BLD",3817,"KRN",771,0)
771
"BLD",3817,"KRN",870,0)
870
"BLD",3817,"KRN",8989.51,0)
8989.51
"BLD",3817,"KRN",8989.52,0)
8989.52
"BLD",3817,"KRN",8994,0)
8994
"BLD",3817,"KRN","B",.4,.4)

"BLD",3817,"KRN","B",.401,.401)

"BLD",3817,"KRN","B",.402,.402)

"BLD",3817,"KRN","B",.403,.403)

"BLD",3817,"KRN","B",.5,.5)

"BLD",3817,"KRN","B",.84,.84)

"BLD",3817,"KRN","B",3.6,3.6)

"BLD",3817,"KRN","B",3.8,3.8)

"BLD",3817,"KRN","B",9.2,9.2)

"BLD",3817,"KRN","B",9.8,9.8)

"BLD",3817,"KRN","B",19,19)

"BLD",3817,"KRN","B",19.1,19.1)

"BLD",3817,"KRN","B",101,101)

"BLD",3817,"KRN","B",409.61,409.61)

"BLD",3817,"KRN","B",771,771)

"BLD",3817,"KRN","B",870,870)

"BLD",3817,"KRN","B",8989.51,8989.51)

"BLD",3817,"KRN","B",8989.52,8989.52)

"BLD",3817,"KRN","B",8994,8994)

"BLD",3817,"QUES",0)
^9.62^^
"BLD",3817,"REQB",0)
^9.611^2^2
"BLD",3817,"REQB",1,0)
DI*22.0*95^2
"BLD",3817,"REQB",2,0)
PXRM*1.5*12^2
"BLD",3817,"REQB","B","DI*22.0*95",1)

"BLD",3817,"REQB","B","PXRM*1.5*12",2)

"INIT")
RA33PST
"MBREQ")
0
"PKG",31,-1)
1^1
"PKG",31,0)
RADIOLOGY/NUCLEAR MEDICINE^RA^REGISTERS PATIENTS,RECORDS EXAMS,PROFILES,AMIS REPORTS
"PKG",31,22,0)
^9.49I^1^1
"PKG",31,22,1,0)
5.0^2980317^2980527^1294
"PKG",31,22,1,"PAH",1,0)
33^3041026^1342
"PKG",31,22,1,"PAH",1,1,0)
^^1^1^3041026
"PKG",31,22,1,"PAH",1,1,1,0)
This patch will be sent in a multi-build patch from PX*1.5*12.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","RA33PST")
0^^B4371324
"RTN","RA33PST",1,0)
RA33PST ;HOIFO/SWM-Post Install for RA*5*33 ;10/12/2004
"RTN","RA33PST",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**33**;Mar 16, 1998
"RTN","RA33PST",3,0)
 ; IA #3736 grants use of DCERRMSG^PXRMP12I
"RTN","RA33PST",4,0)
CRAD ;Create cross-reference for RAD/NUC MED PATIENT file.
"RTN","RA33PST",5,0)
 ; code below is taken from CRAD^PXRMP12X
"RTN","RA33PST",6,0)
 N MSG,RESULT,XREF
"RTN","RA33PST",7,0)
 D BMES^XPDUTL("Creating RAD/NUC MED PATIENT cross-reference.")
"RTN","RA33PST",8,0)
 ;Set the XREF nodes
"RTN","RA33PST",9,0)
 S XREF("FILE")=70
"RTN","RA33PST",10,0)
 S XREF("ROOT FILE")=70.03
"RTN","RA33PST",11,0)
 S XREF("WHOLE KILL")="K ^PXRMINDX(70)"
"RTN","RA33PST",12,0)
 S XREF("TYPE")="MU"
"RTN","RA33PST",13,0)
 S XREF("SHORT DESCR")="Clinical Reminders index."
"RTN","RA33PST",14,0)
 S XREF("DESCR",1)="This cross-reference builds two indexes, one for finding"
"RTN","RA33PST",15,0)
 S XREF("DESCR",2)="all patients with a particular radiology procedure and one for finding all"
"RTN","RA33PST",16,0)
 S XREF("DESCR",3)="the radiology procedures a patient has."
"RTN","RA33PST",17,0)
 S XREF("DESCR",4)="The indexes are stored in the Clinical Reminders index global as:"
"RTN","RA33PST",18,0)
 S XREF("DESCR",5)=" ^PXRMINDX(70,""IP"",PROCEDURE,DFN,EXAM DATE,DAS) and"
"RTN","RA33PST",19,0)
 S XREF("DESCR",6)=" ^PXRMINDX(70,""PI"",DFN,PROCEDURE,EXAM DATE,DAS)"
"RTN","RA33PST",20,0)
 S XREF("DESCR",7)="respectively."
"RTN","RA33PST",21,0)
 S XREF("DESCR",8)="For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","RA33PST",22,0)
 S XREF("USE")="ACTION"
"RTN","RA33PST",23,0)
 S XREF("EXECUTION")="R"
"RTN","RA33PST",24,0)
 S XREF("ACTIVITY")="IR"
"RTN","RA33PST",25,0)
 S XREF("VAL",1)=2
"RTN","RA33PST",26,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","RA33PST",27,0)
 ;
"RTN","RA33PST",28,0)
 S XREF("NAME")="ACR"
"RTN","RA33PST",29,0)
 S XREF("SET")="D SRAD^RAPXRM(.X,.DA)"
"RTN","RA33PST",30,0)
 S XREF("KILL")="D KRAD^RAPXRM(.X,.DA)"
"RTN","RA33PST",31,0)
 D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","RA33PST",32,0)
 I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","RA33PST",33,0)
 Q
"RTN","RAPXRM")
0^1^B14691287
"RTN","RAPXRM",1,0)
RAPXRM ;HOIFO/SWM - API for Clinical Reminders ;10/1/03  09:33
"RTN","RAPXRM",2,0)
 ;;5.0;Radiology/Nuclear Medicine;*33**;Mar 16, 1998
"RTN","RAPXRM",3,0)
 ; IA #3731 documents entry point EN1
"RTN","RAPXRM",4,0)
 ; IA #4113 grants use of rtn PXRMSXRM
"RTN","RAPXRM",5,0)
 ; IA #4114 grants use of direct Set and Kill, use of ^PXRMINDX(70
"RTN","RAPXRM",6,0)
EN1(RADAS,RARM) ;retrieve data from Clin. Rem.'s new style index "ACR"
"RTN","RAPXRM",7,0)
 ; Input:
"RTN","RAPXRM",8,0)
 ; RADAS = last subscript of (required), for example:
"RTN","RAPXRM",9,0)
 ;      ^PXRMINDX(70,"IP",43,1,2,2920720.1049,"2;DT;7079279.895;P;3;0")
"RTN","RAPXRM",10,0)
 ;      ^PXRMINDX(70,"PI",9,3,45,2921204.155,"9;DT;7078795.8449;P;1;0")
"RTN","RAPXRM",11,0)
 ; RARM = array name passed by reference (required)
"RTN","RAPXRM",12,0)
 ; Output:
"RTN","RAPXRM",13,0)
 ;     RARM("aaa") = external value, eg.:
"RTN","RAPXRM",14,0)
 ; RARM("EXAM D/T") = Exam Date and time in yyymmdd.hhmm format
"RTN","RAPXRM",15,0)
 ; RARM("EXAM STATUS") = Exam Status name
"RTN","RAPXRM",16,0)
 ; RARM("PROCEDURE") = Procedure name
"RTN","RAPXRM",17,0)
 ; RARM("INTERPRETING PHYSICIAN") = Primary Staff; else Primary Resident
"RTN","RAPXRM",18,0)
 ;     If exam node doesn't exist, then RARM is undefined
"RTN","RAPXRM",19,0)
 ;
"RTN","RAPXRM",20,0)
 K RARM ; clear output var
"RTN","RAPXRM",21,0)
 ; validate RADAS string
"RTN","RAPXRM",22,0)
 Q:$P(RADAS,";",2)'="DT"  Q:$P(RADAS,";",4)'="P"  Q:$P(RADAS,";",6)'="0"
"RTN","RAPXRM",23,0)
 N RA0,RADFN,RADTI,RACNI,X,I,J
"RTN","RAPXRM",24,0)
 S RADFN=$P(RADAS,";"),RADTI=$P(RADAS,";",3),RACNI=$P(RADAS,";",5)
"RTN","RAPXRM",25,0)
 S RA0=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))
"RTN","RAPXRM",26,0)
 Q:RA0=""
"RTN","RAPXRM",27,0)
 S RARM("EXAM D/T")=9999999.9999-RADTI
"RTN","RAPXRM",28,0)
 S RARM("EXAM STATUS")=$P($G(^RA(72,+$P(RA0,U,3),0)),U)
"RTN","RAPXRM",29,0)
 S RARM("PROCEDURE")=$P($G(^RAMIS(71,+$P(RA0,U,2),0)),U)
"RTN","RAPXRM",30,0)
 S X=$S($P(RA0,U,15):+$P(RA0,U,15),$P(RA0,U,12):+$P(RA0,U,12),1:"")
"RTN","RAPXRM",31,0)
 S:X'="" X=$$GET1^DIQ(200,X,.01)
"RTN","RAPXRM",32,0)
 S RARM("INTERPRETING PHYSICIAN")=X
"RTN","RAPXRM",33,0)
 ;
"RTN","RAPXRM",34,0)
 ; RARM("PDX")=Primary DX text
"RTN","RAPXRM",35,0)
 ;             this node won't exist if there's no data for Prim DX
"RTN","RAPXRM",36,0)
 ; RARM("SDX",n)=Secondary DX text at ^RADPT(-,"DT",-,"P",-,"DX",n,0)
"RTN","RAPXRM",37,0)
 ;             the n may have gaps if a Secondary DX was deleted
"RTN","RAPXRM",38,0)
 ;
"RTN","RAPXRM",39,0)
 S:$P(RA0,U,13)'="" RARM("PDX")=$P($G(^RA(78.3,+$P(RA0,U,13),0)),U)
"RTN","RAPXRM",40,0)
 S I=0
"RTN","RAPXRM",41,0)
 F  S I=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX",I)) Q:'I  I $D(^(I,0)) S J=+$G(^(0)) I J S RARM("SDX",I)=$P($G(^RA(78.3,J,0)),U)
"RTN","RAPXRM",42,0)
 Q
"RTN","RAPXRM",43,0)
 ;===============================================================
"RTN","RAPXRM",44,0)
 ; RAD section copied from former location  RAD^PXRMSXRO
"RTN","RAPXRM",45,0)
RAD ;Build the index for RAD/NUC MED PATIENT.
"RTN","RAPXRM",46,0)
 N D0,D1,D2,DA,DAS,DFN,END,ENTRIES,GLOBAL,IND,NE,NERROR,PROC
"RTN","RAPXRM",47,0)
 N START,TEMP,TENP,TEXT
"RTN","RAPXRM",48,0)
 ;Don't leave any old stuff around.
"RTN","RAPXRM",49,0)
 K ^PXRMINDX(70)
"RTN","RAPXRM",50,0)
 S GLOBAL=$$GET1^DID(70,"","","GLOBAL NAME")
"RTN","RAPXRM",51,0)
 S ENTRIES=$P(^RADPT(0),U,4)
"RTN","RAPXRM",52,0)
 S TENP=ENTRIES/10
"RTN","RAPXRM",53,0)
 S TENP=+$P(TENP,".",1)
"RTN","RAPXRM",54,0)
 I TENP<1 S TENP=1
"RTN","RAPXRM",55,0)
 D BMES^XPDUTL("Building index for RAD DATA")
"RTN","RAPXRM",56,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","RAPXRM",57,0)
 D MES^XPDUTL(TEXT)
"RTN","RAPXRM",58,0)
 S START=$H
"RTN","RAPXRM",59,0)
 S (D0,IND,NE,NERROR)=0
"RTN","RAPXRM",60,0)
 F  S D0=+$O(^RADPT(D0)) Q:D0=0  D
"RTN","RAPXRM",61,0)
 . S IND=IND+1
"RTN","RAPXRM",62,0)
 . I IND#TENP=0 D
"RTN","RAPXRM",63,0)
 .. S TEXT="Processing entry "_IND
"RTN","RAPXRM",64,0)
 .. D MES^XPDUTL(TEXT)
"RTN","RAPXRM",65,0)
 . I IND#10000=0 W "."
"RTN","RAPXRM",66,0)
 . S DFN=$P($G(^RADPT(D0,0)),U,1)
"RTN","RAPXRM",67,0)
 . I DFN="" D  Q
"RTN","RAPXRM",68,0)
 .. S ETEXT=D0_" no patient"
"RTN","RAPXRM",69,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR) Q
"RTN","RAPXRM",70,0)
 . S D1=0
"RTN","RAPXRM",71,0)
 . F  S D1=+$O(^RADPT(D0,"DT",D1)) Q:D1=0  D
"RTN","RAPXRM",72,0)
 .. S DATE=$P($G(^RADPT(D0,"DT",D1,0)),U,1)
"RTN","RAPXRM",73,0)
 .. S DA=D0_";DT;"_D1
"RTN","RAPXRM",74,0)
 .. I DATE="" D  Q
"RTN","RAPXRM",75,0)
 ... S ETEXT=DA_" no date"
"RTN","RAPXRM",76,0)
 ... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR) Q
"RTN","RAPXRM",77,0)
 .. S D2=0
"RTN","RAPXRM",78,0)
 .. F  S D2=+$O(^RADPT(D0,"DT",D1,"P",D2)) Q:D2=0  D
"RTN","RAPXRM",79,0)
 ... S TEMP=$G(^RADPT(D0,"DT",D1,"P",D2,0))
"RTN","RAPXRM",80,0)
 ... S DAS=DA_";P;"_D2_";0"
"RTN","RAPXRM",81,0)
 ... S PROC=$P(TEMP,U,2)
"RTN","RAPXRM",82,0)
 ... I PROC="" D  Q
"RTN","RAPXRM",83,0)
 .... S ETEXT=DAS_" no procedure"
"RTN","RAPXRM",84,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR) Q
"RTN","RAPXRM",85,0)
 ... S ^PXRMINDX(70,"IP",PROC,DFN,DATE,DAS)=""
"RTN","RAPXRM",86,0)
 ... S ^PXRMINDX(70,"PI",DFN,PROC,DATE,DAS)=""
"RTN","RAPXRM",87,0)
 ... S NE=NE+1
"RTN","RAPXRM",88,0)
 S END=$H
"RTN","RAPXRM",89,0)
 S TEXT=NE_" RAD/NUC MED PATIENT results indexed."
"RTN","RAPXRM",90,0)
 D MES^XPDUTL(TEXT)
"RTN","RAPXRM",91,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","RAPXRM",92,0)
 ;If there were errors send a message.
"RTN","RAPXRM",93,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","RAPXRM",94,0)
 ;Send a MailMan message with the results.
"RTN","RAPXRM",95,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","RAPXRM",96,0)
 S ^PXRMINDX(70,"GLOBAL NAME")=$$GET1^DID(70,"","","GLOBAL NAME")
"RTN","RAPXRM",97,0)
 S ^PXRMINDX(70,"BUILT BY")=DUZ
"RTN","RAPXRM",98,0)
 S ^PXRMINDX(70,"DATE BUILT")=$$NOW^XLFDT
"RTN","RAPXRM",99,0)
 Q
"RTN","RAPXRM",100,0)
 ;
"RTN","RAPXRM",101,0)
 ;===============================================================
"RTN","RAPXRM",102,0)
KRAD(X,DA) ;Delete index for RAD/NUC MED PATIENT file.
"RTN","RAPXRM",103,0)
 N DAS,DATE
"RTN","RAPXRM",104,0)
 S DATE=9999999.9999-DA(1)
"RTN","RAPXRM",105,0)
 S DAS=DA(2)_";DT;"_DA(1)_";P;"_DA_";0"
"RTN","RAPXRM",106,0)
 K ^PXRMINDX(70,"IP",X(1),DA(2),DATE,DAS)
"RTN","RAPXRM",107,0)
 K ^PXRMINDX(70,"PI",DA(2),X(1),DATE,DAS)
"RTN","RAPXRM",108,0)
 Q
"RTN","RAPXRM",109,0)
 ;
"RTN","RAPXRM",110,0)
 ;===============================================================
"RTN","RAPXRM",111,0)
SRAD(X,DA) ;Set index for RAD/NUC MED PATIENT file.
"RTN","RAPXRM",112,0)
 ;DA(2)=DFN, DA(1)=EXAM DATE (inverse date), DA=Examinations Entry
"RTN","RAPXRM",113,0)
 ;X(1)=PROCEDURE
"RTN","RAPXRM",114,0)
 N DAS,DATE
"RTN","RAPXRM",115,0)
 S DATE=9999999.9999-DA(1)
"RTN","RAPXRM",116,0)
 S DAS=DA(2)_";DT;"_DA(1)_";P;"_DA_";0"
"RTN","RAPXRM",117,0)
 S ^PXRMINDX(70,"IP",X(1),DA(2),DATE,DAS)=""
"RTN","RAPXRM",118,0)
 S ^PXRMINDX(70,"PI",DA(2),X(1),DATE,DAS)=""
"RTN","RAPXRM",119,0)
 Q
"RTN","RAPXRM",120,0)
 ;
"VER")
8.0^22.0
**INSTALL NAME**
YS*5.01*77
"BLD",3892,0)
YS*5.01*77^MENTAL HEALTH^0^3041026^y
"BLD",3892,4,0)
^9.64PA^^
"BLD",3892,"INIT")
CMH^YSP77I
"BLD",3892,"KRN",0)
^9.67PA^8989.52^19
"BLD",3892,"KRN",.4,0)
.4
"BLD",3892,"KRN",.401,0)
.401
"BLD",3892,"KRN",.402,0)
.402
"BLD",3892,"KRN",.403,0)
.403
"BLD",3892,"KRN",.5,0)
.5
"BLD",3892,"KRN",.84,0)
.84
"BLD",3892,"KRN",3.6,0)
3.6
"BLD",3892,"KRN",3.8,0)
3.8
"BLD",3892,"KRN",9.2,0)
9.2
"BLD",3892,"KRN",9.8,0)
9.8
"BLD",3892,"KRN",9.8,"NM",0)
^9.68A^8^6
"BLD",3892,"KRN",9.8,"NM",3,0)
YTFILE^^0^B16256822
"BLD",3892,"KRN",9.8,"NM",4,0)
YTPXRM^^0^B4806121
"BLD",3892,"KRN",9.8,"NM",5,0)
YTAPI^^0^B21662254
"BLD",3892,"KRN",9.8,"NM",6,0)
YTAPI1^^0^B6850000
"BLD",3892,"KRN",9.8,"NM",7,0)
YTAPI10^^0^B18980623
"BLD",3892,"KRN",9.8,"NM",8,0)
YTAPI10A^^0^B21115425
"BLD",3892,"KRN",9.8,"NM","B","YTAPI",5)

"BLD",3892,"KRN",9.8,"NM","B","YTAPI1",6)

"BLD",3892,"KRN",9.8,"NM","B","YTAPI10",7)

"BLD",3892,"KRN",9.8,"NM","B","YTAPI10A",8)

"BLD",3892,"KRN",9.8,"NM","B","YTFILE",3)

"BLD",3892,"KRN",9.8,"NM","B","YTPXRM",4)

"BLD",3892,"KRN",19,0)
19
"BLD",3892,"KRN",19.1,0)
19.1
"BLD",3892,"KRN",101,0)
101
"BLD",3892,"KRN",409.61,0)
409.61
"BLD",3892,"KRN",771,0)
771
"BLD",3892,"KRN",870,0)
870
"BLD",3892,"KRN",8989.51,0)
8989.51
"BLD",3892,"KRN",8989.52,0)
8989.52
"BLD",3892,"KRN",8994,0)
8994
"BLD",3892,"KRN","B",.4,.4)

"BLD",3892,"KRN","B",.401,.401)

"BLD",3892,"KRN","B",.402,.402)

"BLD",3892,"KRN","B",.403,.403)

"BLD",3892,"KRN","B",.5,.5)

"BLD",3892,"KRN","B",.84,.84)

"BLD",3892,"KRN","B",3.6,3.6)

"BLD",3892,"KRN","B",3.8,3.8)

"BLD",3892,"KRN","B",9.2,9.2)

"BLD",3892,"KRN","B",9.8,9.8)

"BLD",3892,"KRN","B",19,19)

"BLD",3892,"KRN","B",19.1,19.1)

"BLD",3892,"KRN","B",101,101)

"BLD",3892,"KRN","B",409.61,409.61)

"BLD",3892,"KRN","B",771,771)

"BLD",3892,"KRN","B",870,870)

"BLD",3892,"KRN","B",8989.51,8989.51)

"BLD",3892,"KRN","B",8989.52,8989.52)

"BLD",3892,"KRN","B",8994,8994)

"BLD",3892,"QUES",0)
^9.62^^
"BLD",3892,"REQB",0)
^9.611^^
"INIT")
CMH^YSP77I
"MBREQ")
0
"PKG",19,-1)
1^1
"PKG",19,0)
MENTAL HEALTH^YS^Version 5.01 of Mental Health
"PKG",19,20,0)
^9.402P^^
"PKG",19,22,0)
^9.49I^1^1
"PKG",19,22,1,0)
5.01^2941230^2970210
"PKG",19,22,1,"PAH",1,0)
77^3041026^1342
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","YSP77I")
0^^B4354573
"RTN","YSP77I",1,0)
YSP77I ; SLC/PKR - Create cross-references. ;10/12/2004
"RTN","YSP77I",2,0)
 ;;5.01;MENTAL HEALTH;**77**;Dec 30, 1994
"RTN","YSP77I",3,0)
 ;
"RTN","YSP77I",4,0)
 Q
"RTN","YSP77I",5,0)
CMH ;Create cross-reference for Psych Instrument Patient File.
"RTN","YSP77I",6,0)
 N MSG,RESULT,XREF
"RTN","YSP77I",7,0)
 D BMES^XPDUTL("Creating Mental Health cross-reference.")
"RTN","YSP77I",8,0)
 S XREF("FILE")=601.2
"RTN","YSP77I",9,0)
 S XREF("ROOT FILE")=601.22
"RTN","YSP77I",10,0)
 S XREF("TYPE")="MU"
"RTN","YSP77I",11,0)
 S XREF("SHORT DESCR")="Clinical Reminders cross-reference."
"RTN","YSP77I",12,0)
 S XREF("DESCR",1)="This cross-reference builds two indexes, one for finding"
"RTN","YSP77I",13,0)
 S XREF("DESCR",2)="all patients with a particular mental health instrument and one for finding all"
"RTN","YSP77I",14,0)
 S XREF("DESCR",3)="the mental health instruments a patient has."
"RTN","YSP77I",15,0)
 S XREF("DESCR",4)="The index is stored in the Clinical Reminders index global as:"
"RTN","YSP77I",16,0)
 S XREF("DESCR",5)=" ^PXRMINDX(601.2,""IP"",INSTRUMENT,DFN,COMPLETION DATE,DAS)"
"RTN","YSP77I",17,0)
 S XREF("DESCR",6)=" ^PXRMINDX(601.2,""PI"",DFN,INSTRUMENT,COMPLETION DATE,DAS)"
"RTN","YSP77I",18,0)
 S XREF("DESCR",7)="For all the details, see the Clinical Reminders Index Technical Guide/Programmer's Manual."
"RTN","YSP77I",19,0)
 S XREF("USE")="ACTION"
"RTN","YSP77I",20,0)
 S XREF("EXECUTION")="R"
"RTN","YSP77I",21,0)
 S XREF("ACTIVITY")="IR"
"RTN","YSP77I",22,0)
 S XREF("WHOLE KILL")="K ^PXRMINDX(601.2)"
"RTN","YSP77I",23,0)
 S XREF("VAL",1)=.01
"RTN","YSP77I",24,0)
 S XREF("VAL",1,"SUBSCRIPT")=1
"RTN","YSP77I",25,0)
 S XREF("NAME")="ACR"
"RTN","YSP77I",26,0)
 S XREF("SET")="D SMH^YTPXRM(.X,.DA)"
"RTN","YSP77I",27,0)
 S XREF("KILL")="D KMH^YTPXRM(.X,.DA)"
"RTN","YSP77I",28,0)
 D CREIXN^DDMOD(.XREF,"k",.RESULT,"","MSG")
"RTN","YSP77I",29,0)
 I RESULT="" D DCERRMSG^PXRMP12I(.MSG,.XREF)
"RTN","YSP77I",30,0)
 Q
"RTN","YSP77I",31,0)
 ;
"RTN","YTAPI")
0^5^B21662254
"RTN","YTAPI",1,0)
YTAPI ;ALB/ASF- PSYCH TEST API ;2/27/04  15:44
"RTN","YTAPI",2,0)
 ;;5.01;MENTAL HEALTH;**53,71,76,77**;Dec 30, 1994
"RTN","YTAPI",3,0)
PARSE(YS) ; -- array parsing
"RTN","YTAPI",4,0)
 S DFN=$G(YS("DFN"))
"RTN","YTAPI",5,0)
 S YSCODE=$G(YS("CODE"))
"RTN","YTAPI",6,0)
 S:YSCODE?1N.N YSCODE=$P($G(^YTT(601,YSCODE,0),"ERROR"),U)
"RTN","YTAPI",7,0)
 S YSADATE=$G(YS("ADATE")) S X=YSADATE,%DT="T" D ^%DT S YSADATE=Y
"RTN","YTAPI",8,0)
 S YSSCALE=$G(YS("SCALE"))
"RTN","YTAPI",9,0)
 S YSBEG=$G(YS("BEGIN")) S:YSBEG="" YSBEG="01/01/1970" S X=YSBEG,%DT="T" D ^%DT S YSBEG=Y ;ASF 1/30/04
"RTN","YTAPI",10,0)
 S YSEND=$G(YS("END")) S:YSEND="" YSEND="01/01/2099" S X=YSEND,%DT="T" D ^%DT S YSEND=Y ;ASF 1/30/04
"RTN","YTAPI",11,0)
 S YSLIMIT=$G(YS("LIMIT"),999)
"RTN","YTAPI",12,0)
 S YSSTAFF=$G(YS("STAFF"))
"RTN","YTAPI",13,0)
 S R1=$G(YS("R1"))
"RTN","YTAPI",14,0)
 S R2=$G(YS("R2"))
"RTN","YTAPI",15,0)
 S R3=$G(YS("R3"))
"RTN","YTAPI",16,0)
 K %DT
"RTN","YTAPI",17,0)
 Q
"RTN","YTAPI",18,0)
LISTALL(YSDATA,YS) ;
"RTN","YTAPI",19,0)
 N N,N2,N4,YSAA,I,II,DFN,YSCODE,YSADATE,YSSCALE,YSBED,YSEND,YSJJ,YSLIMIT
"RTN","YTAPI",20,0)
 N IFN,R3,SFN1,SFN2,YSBEG,YSCK,YSDFN,YSED,YSIFN,YSINUM,YSITEM,YSN2,YSNODE,YSPRIV,YSQT,YSR,YSSONE,YSSTAFF,YSTYPE
"RTN","YTAPI",21,0)
 D PARSE(.YS)
"RTN","YTAPI",22,0)
 I DFN'>0!('$D(^DPT(DFN))) S YSDATA(1)="[ERROR]",YSDATA(2)="BAD DFN" Q
"RTN","YTAPI",23,0)
 K YSDATA S YSDATA(1)="[DATA]"
"RTN","YTAPI",24,0)
 S N=0 F  S N=$O(^YTD(601.2,DFN,1,N)) Q:N'>0  D
"RTN","YTAPI",25,0)
 . I $P(^YTT(601,N,0),U,9)="I"  QUIT
"RTN","YTAPI",26,0)
 . I $D(^YTT(601,N)) S N2=YSBEG-.1 F  S N2=$O(^YTD(601.2,DFN,1,N,1,N2)) Q:N2'>0!(N2>YSEND)  D
"RTN","YTAPI",27,0)
 .. S X=^YTT(601,N,0),N4=$P(X,U)
"RTN","YTAPI",28,0)
 .. I N4="MMPI",$D(^YTD(601.2,DFN,1,N,1,N2,99)),^(99)="MMPIR" S N4="MMPR"
"RTN","YTAPI",29,0)
 .. S YSPRIV="P" S:$P(X,U,10)="Y" YSPRIV="E" S:$P(X,U,9)="I" YSPRIV="E" ;ASF 4/18/01
"RTN","YTAPI",30,0)
 .. S YSAA(9999999-N2,N4)=YSPRIV_U_N ;ASF 9/9/03
"RTN","YTAPI",31,0)
 .. Q
"RTN","YTAPI",32,0)
 I YSCODE="GAF" D GAF
"RTN","YTAPI",33,0)
 I YSCODE="ASI" D ASI ;ASF 9/9/03
"RTN","YTAPI",34,0)
 S I=0,N=1 F  S I=$O(YSAA(I)) Q:I'>0  S II="" F  S II=$O(YSAA(I,II)) Q:II=""  D SET(9999999-I_U_$$FMTE^XLFDT(9999999-I,"5ZD")_U_II_U_YSAA(I,II)) ;ASF 4/18/01
"RTN","YTAPI",35,0)
 Q
"RTN","YTAPI",36,0)
GAF ;
"RTN","YTAPI",37,0)
 N YSJJ,YSDD,X,Y,YSX,YSN
"RTN","YTAPI",38,0)
 S YSDD=9999999-YSEND-.00001
"RTN","YTAPI",39,0)
 F YSJJ=1:1:YSLIMIT S YSDD=$O(^YSD(627.8,"AX5",DFN,YSDD)) Q:YSDD'>0!(YSDD>(9999999-YSBEG))  D
"RTN","YTAPI",40,0)
  . S YSN=0 F  S YSN=$O(^YSD(627.8,"AX5",DFN,YSDD,YSN)) Q:YSN'>0  D
"RTN","YTAPI",41,0)
 .. S YSX=$P($G(^YSD(627.8,YSN,60)),U,3)_"^^"_$$EXTERNAL^DILFD(627.8,.04,"",$P($G(^YSD(627.8,YSN,0)),U,4))_U_$G(^YSD(627.8,YSN,80,1,0))
"RTN","YTAPI",42,0)
 .. S YSAA(YSDD,"GAF")=9999999-YSDD_"^GAF^"_YSX
"RTN","YTAPI",43,0)
 Q
"RTN","YTAPI",44,0)
ASI ;
"RTN","YTAPI",45,0)
 Q:'$D(^YSTX(604,"C",DFN))
"RTN","YTAPI",46,0)
 S IFN="A" F YSJJ=1:1:YSLIMIT S IFN=$O(^YSTX(604,"C",DFN,IFN),-1) Q:IFN'>0  D
"RTN","YTAPI",47,0)
 . Q:'$D(^YSTX(604,IFN,.5))  ; no sig
"RTN","YTAPI",48,0)
 . S N2=$P($G(^YSTX(604,IFN,0)),U,5)
"RTN","YTAPI",49,0)
 . I N2>YSEND!(N2<YSBEG) Q  ;not in range
"RTN","YTAPI",50,0)
 . S YSSONE="^^^"
"RTN","YTAPI",51,0)
 . S:YSSCALE=1 YSSONE="^Medical^"_$$GET1^DIQ(604,IFN_",",8.12)_U_$$GET1^DIQ(604,IFN_",",.61)
"RTN","YTAPI",52,0)
 . S:YSSCALE=2 YSSONE="^Employment^"_$$GET1^DIQ(604,IFN_",",9.34)_U_$$GET1^DIQ(604,IFN_",",.62)
"RTN","YTAPI",53,0)
 . S:YSSCALE=3 YSSONE="^Alcohol^"_$$GET1^DIQ(604,IFN_",",11.18)_U_$$GET1^DIQ(604,IFN_",",.63)
"RTN","YTAPI",54,0)
 . S:YSSCALE=4 YSSONE="^Drug^"_$$GET1^DIQ(604,IFN_",",11.185)_U_$$GET1^DIQ(604,IFN_",",.635)
"RTN","YTAPI",55,0)
 . S:YSSCALE=5 YSSONE="^Legal^"_$$GET1^DIQ(604,IFN_",",14.34)_U_$$GET1^DIQ(604,IFN_",",.64)
"RTN","YTAPI",56,0)
 . S:YSSCALE=6 YSSONE="^Family^"_$$GET1^DIQ(604,IFN_",",18.29)_U_$$GET1^DIQ(604,IFN_",",.65)
"RTN","YTAPI",57,0)
 . S:YSSCALE=7 YSSONE="^Psychiatric^"_$$GET1^DIQ(604,IFN_",",19.33)_U_$$GET1^DIQ(604,IFN_",",.66)
"RTN","YTAPI",58,0)
 . S YSAA(9999999-N2,"ASI")=N2_U_$$FMTE^XLFDT(N2,"5ZD")_YSSONE_U_IFN
"RTN","YTAPI",59,0)
 Q
"RTN","YTAPI",60,0)
SET(X) ;
"RTN","YTAPI",61,0)
 S N=N+1
"RTN","YTAPI",62,0)
 S YSDATA(N)=X
"RTN","YTAPI",63,0)
 Q
"RTN","YTAPI",64,0)
LISTONE(YSDATA,YS) ;
"RTN","YTAPI",65,0)
 N YSLIMIT,YSJJ,YSSONE,S,R,N,YSN2,N4,I,II,DFN,YSCODE,YSADATE,YSSCALE,YSBED,YSEND,YSAA
"RTN","YTAPI",66,0)
 N IFN,R1,R2,R3,SFN1,SFN2,YSBEG,YSCK,YSDFN,YSED,YSIFN,YSINUM,YSITEM,YSN2,YSNODE,YSPRIV,YSQT,YSR,YSSTAFF,YSTYPE,YSET
"RTN","YTAPI",67,0)
 D PARSE(.YS)
"RTN","YTAPI",68,0)
 K YSDATA
"RTN","YTAPI",69,0)
 I DFN'>0!('$D(^DPT(DFN))) S YSDATA(1)="[ERROR]",YSDATA(2)="BAD DFN" Q
"RTN","YTAPI",70,0)
 I '$D(^YTT(601,"B",YSCODE))&(YSCODE'="ASI")&(YSCODE'="GAF") S YSDATA(1)="[ERROR]",YSDATA(2)="INCORRECT TEST CODE" Q
"RTN","YTAPI",71,0)
 S YSET=-1 S:YSCODE'="ASI"&(YSCODE'="GAF") YSET=$O(^YTT(601,"B",YSCODE,""))
"RTN","YTAPI",72,0)
 S YSDATA(1)="[DATA]"
"RTN","YTAPI",73,0)
 I $D(^YTT(601,YSET)) S YSN2=YSEND+.1 F YSJJ=1:1:YSLIMIT S YSN2=$O(^YTD(601.2,DFN,1,YSET,1,YSN2),-1) Q:YSN2'>0!(YSN2<YSBEG)  D
"RTN","YTAPI",74,0)
 . K YSSONE S YSSONE=""
"RTN","YTAPI",75,0)
 . D PRIV^YTAPI2
"RTN","YTAPI",76,0)
 . I YSSCALE'=""&(YSPRIV=1) D
"RTN","YTAPI",77,0)
 .. S YSADATE=YSN2
"RTN","YTAPI",78,0)
 .. D SCOR1^YTAPI2
"RTN","YTAPI",79,0)
 .. D SF^YTAPI2
"RTN","YTAPI",80,0)
 .. S YSSCALE=$G(YS("SCALE"))
"RTN","YTAPI",81,0)
 . S:$D(YSSCALE)&(YSSCALE'="") YSSONE=$S($D(YSSONE(YSSCALE)):U_$P(YSSONE(YSSCALE),U,2,99),1:"")
"RTN","YTAPI",82,0)
 . S YSAA(9999999-YSN2,YSCODE)=YSN2_YSSONE
"RTN","YTAPI",83,0)
 . Q
"RTN","YTAPI",84,0)
 I YSCODE="ASI" D ASI
"RTN","YTAPI",85,0)
 I YSCODE="GAF" D GAF
"RTN","YTAPI",86,0)
 S I=0,N=1 F  S I=$O(YSAA(I)) Q:I'>0  S II="" F  S II=$O(YSAA(I,II)) Q:II=""  D
"RTN","YTAPI",87,0)
 . S X=$P(YSAA(I,II),U)_U_$$FMTE^XLFDT($P(YSAA(I,II),U),"5ZD")_U_II
"RTN","YTAPI",88,0)
 . S:$P(YSAA(I,II),U,2)'="" X=X_U_$P(YSAA(I,II),U,2,9)
"RTN","YTAPI",89,0)
 . D SET(X)
"RTN","YTAPI",90,0)
 Q
"RTN","YTAPI1")
0^6^B6850000
"RTN","YTAPI1",1,0)
YTAPI1 ;ALB/ASF PSYCH TEST API ;10/3/02  15:27
"RTN","YTAPI1",2,0)
 ;;5.01;MENTAL HEALTH;**53,71,76,77**;Dec 30, 1994
"RTN","YTAPI1",3,0)
SAVEIT(YSDATA,YS) ;
"RTN","YTAPI1",4,0)
 N N,N2,N4,YSAA,I,II,DFN,YSCODE,YSADATE,YSSCALE,YSBED,YSEND
"RTN","YTAPI1",5,0)
 D PARSE^YTAPI(.YS)
"RTN","YTAPI1",6,0)
 IF YSSTAFF'?1N.N!('$D(^VA(200,YSSTAFF))) S YSDATA(1)="[ERROR]",YSDATA(2)="no appro staff" Q
"RTN","YTAPI1",7,0)
 I '$D(^YTT(601,"B",YSCODE)) S YSDATA(1)="[ERROR]",YSDATA(2)="INCORRECT TEST CODE" Q
"RTN","YTAPI1",8,0)
 S (YSTEST,YSET)=$O(^YTT(601,"B",YSCODE,0))
"RTN","YTAPI1",9,0)
 S YSTYPE=$P(^YTT(601,YSTEST,0),U,9),YSINUM=$P(^YTT(601,YSTEST,0),U,11) ;ASF 11/5/01
"RTN","YTAPI1",10,0)
 I YSTYPE'="T"&(YSTYPE'="I") S YSDATA(1)="ERROR",YSDATA(2)="not a test or int" Q
"RTN","YTAPI1",11,0)
 D CK:YSCODE'="MCMI2",CKMCMI:YSCODE="MCMI2" Q:YSCK
"RTN","YTAPI1",12,0)
 ;;
"RTN","YTAPI1",13,0)
 S ^YTD(601.2,DFN,0)=DFN
"RTN","YTAPI1",14,0)
 S ^YTD(601.2,DFN,1,0)="^601.21PA^"
"RTN","YTAPI1",15,0)
 S ^YTD(601.2,DFN,1,YSET,0)=YSET
"RTN","YTAPI1",16,0)
 S ^YTD(601.2,DFN,1,YSET,1,0)="^601.22DA^"
"RTN","YTAPI1",17,0)
 S ^YTD(601.2,DFN,1,YSET,1,DT,0)=DT_U_IO_U_YSSTAFF_U_DUZ_U_U_2_U_DUZ(2)_U_YSADATE
"RTN","YTAPI1",18,0)
 S ^YTD(601.2,DFN,1,YSET,1,DT,1)=R1
"RTN","YTAPI1",19,0)
 S:$L(R2) ^YTD(601.2,DFN,1,YSET,1,DT,2)=R2
"RTN","YTAPI1",20,0)
 S:$L(R3) ^YTD(601.2,DFN,1,YSET,1,DT,3)=R3
"RTN","YTAPI1",21,0)
 S DIK="^YTD(601.2,",DA=DFN,DA(1)=YSET,DA(2)=DT D IX^DIK K DIK ;ASF 10/02/02
"RTN","YTAPI1",22,0)
 S YSDATA(1)="[DATA]",YSDATA(2)="saved ok"
"RTN","YTAPI1",23,0)
 S YSENT=YSET,YSDFN=DFN D ENKIL^YTFILE K YSENT,YSDFN ;ASF 6/29/01
"RTN","YTAPI1",24,0)
 Q
"RTN","YTAPI1",25,0)
CKMCMI ;check mcmi2
"RTN","YTAPI1",26,0)
 S YSCK=0
"RTN","YTAPI1",27,0)
 I $L(R1)'=177 S YSDATA(1)="[ERROR]",YSDATA(2)="MCMI2 BAD #",YSCK=1 Q
"RTN","YTAPI1",28,0)
 I $L(R1,"T")+$L(R1,"F")+$L(R1,"X")'=178 S YSCK=1 Q
"RTN","YTAPI1",29,0)
 Q
"RTN","YTAPI1",30,0)
CK ;
"RTN","YTAPI1",31,0)
 S YSCK=0
"RTN","YTAPI1",32,0)
 S X=YSINUM\200+1
"RTN","YTAPI1",33,0)
 I $E(@("R"_X),YSINUM#200)=""!($E(@("R"_X),YSINUM#200+1)'="") S YSDATA(1)="[ERROR]",YSDATA(2)="wrong # of respon",YSCK=1 Q
"RTN","YTAPI1",34,0)
 F I=1:1:$L(R1) S X=$E(R1,I) D CK1 Q:YSCK
"RTN","YTAPI1",35,0)
 Q:'$L(R2)
"RTN","YTAPI1",36,0)
 F I=201:1:$L(R2) S X=$E(R2,I) D CK1 Q:YSCK
"RTN","YTAPI1",37,0)
 Q:'$L(R3)
"RTN","YTAPI1",38,0)
 F I=401:1:$L(R3) S X=$E(R1,3) D CK1 Q:YSCK
"RTN","YTAPI1",39,0)
 Q
"RTN","YTAPI1",40,0)
CK1 ;
"RTN","YTAPI1",41,0)
 I YSTYPE="TEST" D
"RTN","YTAPI1",42,0)
 . I $P($G(^YTT(601,YSTEST,"Q",I,0)),U,2)'="" S C=$P(^YTT(601,YSTEST,"Q",I,0),U,2)
"RTN","YTAPI1",43,0)
 . I C'[X S YSCK=1,YSDATA(1)="[ERROR]",YSDATA(2)="test responses dont check"
"RTN","YTAPI1",44,0)
 I YSTYPE="INTERVIEW" D
"RTN","YTAPI1",45,0)
 . Q:X=" "
"RTN","YTAPI1",46,0)
 . S YSQT=$P($G(^YTT(601,YSTEST,"Q",1)),U,1)
"RTN","YTAPI1",47,0)
 . I +YSQT=3 S YSQT=$E("123456789",1,$P(YSQT,",",2))
"RTN","YTAPI1",48,0)
 . E  S YSQT="YN"
"RTN","YTAPI1",49,0)
 . S:YSQT'[X YSCK=1,YSDATA(1)="[ERROR]",YSDATA(2)="interview resp dont check"
"RTN","YTAPI1",50,0)
 Q
"RTN","YTAPI10")
0^7^B18980623
"RTN","YTAPI10",1,0)
YTAPI10 ;ALB/ASF- PSYCH TEST API FOR CLINICAL REMINDERS ; 2/13/04 1:54pm
"RTN","YTAPI10",2,0)
 ;;5.01;MENTAL HEALTH;**77**;Dec 30, 1994
"RTN","YTAPI10",3,0)
 ;Reference to ^PXRMINDX(601.2, supported by DBIA #4114
"RTN","YTAPI10",4,0)
SET(X) ;
"RTN","YTAPI10",5,0)
 S N=N+1
"RTN","YTAPI10",6,0)
 S YSDATA(N)=X
"RTN","YTAPI10",7,0)
 Q
"RTN","YTAPI10",8,0)
DASASI ;
"RTN","YTAPI10",9,0)
 K YSSONE
"RTN","YTAPI10",10,0)
 S N=0,IFN=$P(DAS,";",5)
"RTN","YTAPI10",11,0)
 I '$D(^YSTX(604,IFN,0)) S YSDATA(1)="[ERROR]",YSDATA(2)="no asi match" Q
"RTN","YTAPI10",12,0)
 D SET("[DATA]")
"RTN","YTAPI10",13,0)
 S YSADATE=$P(^YSTX(604,IFN,0),U,5)
"RTN","YTAPI10",14,0)
 S X=$P(^DPT(DFN,0),U)_"^ASI^--- Addiction Severity Index ---^"_YSADATE_U_$$FMTE^XLFDT(YSADATE,"5ZD")_U_$$GET1^DIQ(604,IFN_",",.09,"E")
"RTN","YTAPI10",15,0)
 D SET(X)
"RTN","YTAPI10",16,0)
 S X="R1^"_$$GET1^DIQ(604,IFN_",",.04)_U_$$GET1^DIQ(604,IFN_",",.11)_U_$S($D(^YSTX(604,IFN,.5)):"Signed",1:"Unsigned")
"RTN","YTAPI10",17,0)
 D SET(X)
"RTN","YTAPI10",18,0)
 D SET("R2")
"RTN","YTAPI10",19,0)
 D SET("R3")
"RTN","YTAPI10",20,0)
 S X="S1^Medical^"_$$GET1^DIQ(604,IFN_",",8.12)_U_$$GET1^DIQ(604,IFN_",",.61)
"RTN","YTAPI10",21,0)
 D SET(X)
"RTN","YTAPI10",22,0)
 S X="S2^Employment^"_$$GET1^DIQ(604,IFN_",",9.34)_U_$$GET1^DIQ(604,IFN_",",.62)
"RTN","YTAPI10",23,0)
 D SET(X)
"RTN","YTAPI10",24,0)
 S X="S3^Alcohol^"_$$GET1^DIQ(604,IFN_",",11.18)_U_$$GET1^DIQ(604,IFN_",",.63)
"RTN","YTAPI10",25,0)
 D SET(X)
"RTN","YTAPI10",26,0)
 S X="S4^Drug^"_$$GET1^DIQ(604,IFN_",",11.185)_U_$$GET1^DIQ(604,IFN_",",.635)
"RTN","YTAPI10",27,0)
 D SET(X)
"RTN","YTAPI10",28,0)
 S X="S5^Legal^"_$$GET1^DIQ(604,IFN_",",14.34)_U_$$GET1^DIQ(604,IFN_",",.64)
"RTN","YTAPI10",29,0)
 D SET(X)
"RTN","YTAPI10",30,0)
 S X="S6^Family^"_$$GET1^DIQ(604,IFN_",",18.29)_U_$$GET1^DIQ(604,IFN_",",.65)
"RTN","YTAPI10",31,0)
 D SET(X)
"RTN","YTAPI10",32,0)
 S X="S7^Psychiatric^"_$$GET1^DIQ(604,IFN_",",19.33)_U_$$GET1^DIQ(604,IFN_",",.66)
"RTN","YTAPI10",33,0)
 D SET(X)
"RTN","YTAPI10",34,0)
 Q
"RTN","YTAPI10",35,0)
ENDAS(YSDATA,DAS) ;scoring for clinical reminder DAS entry
"RTN","YTAPI10",36,0)
 ;Input
"RTN","YTAPI10",37,0)
 ;DAS from ^PXRMINDX(
"RTN","YTAPI10",38,0)
 ;Output:
"RTN","YTAPI10",39,0)
 ;Array(1)=[DATA]
"RTN","YTAPI10",40,0)
 ;Array(2)= Patient Name^Test Code^Test Title^Internal Admin date^External Admin Date ^Ordered by
"RTN","YTAPI10",41,0)
 ;Array(3)=R1^Responses 1-200 undelimited
"RTN","YTAPI10",42,0)
 ;Array(4)=R2^ Responses 201-400 undelimited (even if less than 200)
"RTN","YTAPI10",43,0)
 ;Array(5)=R3^ Responses 401-600 undelimited
"RTN","YTAPI10",44,0)
 ;Array(6)=S1^Scale Name^Raw Score^Transformed Score 
"RTN","YTAPI10",45,0)
 ;Array(7)=S2^ Scale Name^Raw Score^Transformed Score And onward as needed
"RTN","YTAPI10",46,0)
 N R,S,A,B,C,G,H,I,I1,J,K,L,L1,L2,M,N,N1,N2,P,P3,P4,P5,T,T1,V,W,X,X1,X2,X3,X4,Y,Y1,Y2,YS10,YS25,YS50,YS75,YS90,YSAD,YSAGE,YSANLL,YSAS,YSAST,YSAU,YSB1,YSB2,YSBOX,YSBR
"RTN","YTAPI10",47,0)
 N YSBV,YSCALEN,YSCALET,YSCF,YSCF1,YSCNT,YSDAT,YSDATES,YSDOB,YSDS,YSED,YSED1,YSEP,YSET,YSF,YSFC,YSFR,YSHP1,YSHP2,YSHS,YSII,YSIN2,YSINC,YSIO,YSIT,YSIT1,YSIT2,YSIX,YSJJ,YSKC,YSKK,YSKY,YSLB,YSLE,YSLL
"RTN","YTAPI10",48,0)
 N YSLM,YSLN,YSLNE,YSLV,YSMA,YSMF,YSMMPI,YSMMPR,YSMX,YSN,YSNAM,YSND,YSNM,YSNS,YSNS26,YSNS39,YSNS9,YSNSCALE,YSNSS,YSOCAT,YSOCNM,YSOCP,YSOCSX,YSOFF,YSPD,YSPS,YSPT,YSQ,YSQR,YSRAW,YSRH,YSRM,YSRP,YSRR,YSRS,YSRT,YSS,YSS1,YSS2
"RTN","YTAPI10",49,0)
 N YSSC,YSSCALE,YSSCALEB,YSSEX,YSSH,YSSI,YSSK,YSSNM,YSSNM1,YSSNUMB,YSSP,YSSP4,YSSR,YSSS,YSSSN,YSSX,YSTAR,YSTEST,YSTESTA,YSTL,YSTN,YSTR,YSTTL,YSTV,YSTVL,YSTY,YSULOF,YSULON,YSVS,YSWF,YSX,YSXN,YSXR,YSXX,YSZ,Z,Z1,Z2
"RTN","YTAPI10",50,0)
 N IFN,N4,R3,SFN1,SFN2,YSAA,YSADATE,YSBED,YSBEG,YSCK,YSCODE,YSED,YSEND,YSIFN,YSINUM,YSITEM,YSN2,YSNODE,YSPRIV,YSQT,YSR,YSSONE,YSSTAFF,YSTYPE
"RTN","YTAPI10",51,0)
 S YSCODE=$P(DAS,";",3)
"RTN","YTAPI10",52,0)
 I YSCODE'?1N.N D ERR("bad test code") Q  ;-->OUT
"RTN","YTAPI10",53,0)
 S YSCODE=$P(^YTT(601,YSCODE,0),U)
"RTN","YTAPI10",54,0)
 S DFN=$P(DAS,";")
"RTN","YTAPI10",55,0)
 I DFN'?1N.N D ERR("bad dfn") Q  ;--> OUT
"RTN","YTAPI10",56,0)
 S (IFN,YSADATE)=$P(DAS,";",5)
"RTN","YTAPI10",57,0)
 I IFN'>0 D ERR("bad IFN") Q  ;-->out
"RTN","YTAPI10",58,0)
 I YSCODE="GAF" D GAF Q  ;--> out
"RTN","YTAPI10",59,0)
 I YSCODE="ASI" D DASASI Q  ;-->out
"RTN","YTAPI10",60,0)
 I YSADATE'?7N.E D ERR("bad date") Q  ;-->OUT
"RTN","YTAPI10",61,0)
 D SCOR1^YTAPI2
"RTN","YTAPI10",62,0)
 Q:$G(YSDATA(1))?1"[ERROR".E
"RTN","YTAPI10",63,0)
 D SCORSET^YTAPI2
"RTN","YTAPI10",64,0)
 D:YSPRIV SF^YTAPI2
"RTN","YTAPI10",65,0)
 S N1=0
"RTN","YTAPI10",66,0)
 F  S N1=$O(YSSONE(N1)) Q:N1'>0  D SET(YSSONE(N1))
"RTN","YTAPI10",67,0)
 Q
"RTN","YTAPI10",68,0)
GAF ;score gafs
"RTN","YTAPI10",69,0)
 I '$D(^YSD(627.8,IFN,60)) D ERR("no ax5 ifn") Q  ;-->out
"RTN","YTAPI10",70,0)
 S N=0,G=^YSD(627.8,IFN,0) D SET("[DATA]")
"RTN","YTAPI10",71,0)
 S X=$P(^DPT(DFN,0),U)_"^GAF^GAF^"_$P(G,U,3)_U_$$EXTERNAL^DILFD(627.8,.03,"",$P(G,U,3))_U_$$EXTERNAL^DILFD(627.8,.04,"",$P(G,U,4)) ;asf 2/13/04
"RTN","YTAPI10",72,0)
 D SET(X)
"RTN","YTAPI10",73,0)
 S X="R1^"_$P($G(^YSD(627.8,IFN,60)),U,3) D SET(X)
"RTN","YTAPI10",74,0)
 S X="R2^"_$G(^YSD(627.8,IFN,80,1,0)) D SET(X)
"RTN","YTAPI10",75,0)
 D SET("R3^")
"RTN","YTAPI10",76,0)
 Q
"RTN","YTAPI10",77,0)
ERR(YSX) ;errors
"RTN","YTAPI10",78,0)
 S YSDATA(0)="[ERROR]",YSDATA(1)=YSX
"RTN","YTAPI10",79,0)
 Q
"RTN","YTAPI10A")
0^8^B21115425
"RTN","YTAPI10A",1,0)
YTAPI10A ;ALB/ASF- PSYCH TEST API FOR CLINICAL REMINDERS ;09/20/2004
"RTN","YTAPI10A",2,0)
 ;;5.01;MENTAL HEALTH;**77**;Dec 30, 1994
"RTN","YTAPI10A",3,0)
 ;Reference to ^PXRMINDX(601.2, supported by DBIA #4114
"RTN","YTAPI10A",4,0)
SET(X) ;
"RTN","YTAPI10A",5,0)
 S N=N+1
"RTN","YTAPI10A",6,0)
 S YSSUB(N)=X
"RTN","YTAPI10A",7,0)
 Q
"RTN","YTAPI10A",8,0)
OCCUR(YSSUB,YS) ;occurances OF TESTS,GAF,ASI
"RTN","YTAPI10A",9,0)
 ;Input:
"RTN","YTAPI10A",10,0)
 ;YS("CODE"): Test code NUMBER from file 601 including "ASI","GAF"
"RTN","YTAPI10A",11,0)
 ;YS("BEGIN"): inclusive date in %DT acceptable format (11/11/2011) to begin search [optional]                
"RTN","YTAPI10A",12,0)
 ;YS("END"): inclusive date in %DT acceptable format (11/11/2011) to end search  [optional]           
"RTN","YTAPI10A",13,0)
 ;YS("LIMIT"): Last N administrations [optional]
"RTN","YTAPI10A",14,0)
 ;Output
"RTN","YTAPI10A",15,0)
 ;^TMP($J,YSSUB,1)=[DATA]^NUMBER FOUND
"RTN","YTAPI10A",16,0)
 ;^TMP($J,YSSUB,DFN,OCCURANCE)=DAS^DFN^TEST (DAS=entry endas^ytapi10)
"RTN","YTAPI10A",17,0)
 N G,YSLIMIT,YSJJ,YSSONE,S,R,N,YSN2,N4,I,II,DFN,YSCODE,YSADATE,YSSCALE,YSBED,YSEND,YSAA,DAS,YSOCC,YSZN,YST,YSLM
"RTN","YTAPI10A",18,0)
 N IFN,R1,R2,R3,SFN1,SFN2,YSBEG,YSCK,YSDFN,YSED,YSIFN,YSINUM,YSITEM,YSN2,YSNODE,YSPRIV,YSQT,YSR,YSSTAFF,YSTYPE,YSCODE,NI,YSID
"RTN","YTAPI10A",19,0)
 D PARSE^YTAPI(.YS)
"RTN","YTAPI10A",20,0)
 S YSLM=$G(YS("LIMIT")) S:YSLM'?1N.N YSLM=1
"RTN","YTAPI10A",21,0)
 S N=0
"RTN","YTAPI10A",22,0)
 K ^TMP($J,YSSUB)
"RTN","YTAPI10A",23,0)
 I '$D(^YTT(601,"B",YSCODE)) S ^TMP($J,YSSUB,1)="[ERROR]^BAD TEST CODE #" Q  ;-->out
"RTN","YTAPI10A",24,0)
 S YSCODE=$O(^YTT(601,"B",YSCODE,0))
"RTN","YTAPI10A",25,0)
 I $P(^YTT(601,YSCODE,0),U)="ASI" D ASIOC Q  ;-->out
"RTN","YTAPI10A",26,0)
 I $P(^YTT(601,YSCODE,0),U)="GAF" D GAFOC Q  ;-->out
"RTN","YTAPI10A",27,0)
P0 S DFN=0,NI=0 F  S DFN=$O(^PXRMINDX(601.2,"IP",YSCODE,DFN)) Q:DFN'>0  S YS("DFN")=DFN D P1
"RTN","YTAPI10A",28,0)
 S ^TMP($J,YSSUB)="[DATA]"_U_NI
"RTN","YTAPI10A",29,0)
 Q
"RTN","YTAPI10A",30,0)
P1 I $D(^YTT(601,YSCODE)) S YSN2=YSEND+.1,YSOCC=0 F  S YSN2=$O(^YTD(601.2,DFN,1,YSCODE,1,YSN2),-1) Q:YSN2'>0!(YSN2<YSBEG)  D
"RTN","YTAPI10A",31,0)
 . S YSOCC=YSOCC+1
"RTN","YTAPI10A",32,0)
 . Q:(YSOCC>YSLM)
"RTN","YTAPI10A",33,0)
 . S NI=NI+1
"RTN","YTAPI10A",34,0)
 . S ^TMP($J,YSSUB,DFN,YSOCC)=DFN_";1;"_YSCODE_";1;"_YSN2_U_YSN2_U_YSCODE
"RTN","YTAPI10A",35,0)
 Q
"RTN","YTAPI10A",36,0)
GAFOC ;all axis5 DXs in time frame
"RTN","YTAPI10A",37,0)
 S YST=YSEND+.0000001,NI=0
"RTN","YTAPI10A",38,0)
 F  S YST=$O(^YSD(627.8,"B",YST),-1) Q:YST'>0!(YST<YSBEG)  S IFN=0 F  S IFN=$O(^YSD(627.8,"B",YST,IFN)) Q:IFN'>0  D
"RTN","YTAPI10A",39,0)
 . S X=$P($G(^YSD(627.8,IFN,60)),U,3)
"RTN","YTAPI10A",40,0)
 . Q:X=""
"RTN","YTAPI10A",41,0)
 . S DFN=$P($G(^YSD(627.8,IFN,0)),U,2) Q:DFN'>0  ;bad dfn
"RTN","YTAPI10A",42,0)
 . S YSOCC=$O(^TMP($J,YSSUB,DFN,999999),-1)+1
"RTN","YTAPI10A",43,0)
 . Q:(YSOCC>YSLM)
"RTN","YTAPI10A",44,0)
 . S NI=NI+1
"RTN","YTAPI10A",45,0)
 . S ^TMP($J,YSSUB,DFN,YSOCC)=DFN_";1;"_YSCODE_";1;"_IFN_U_YST_U_YSCODE
"RTN","YTAPI10A",46,0)
 S ^TMP($J,YSSUB)="[DATA]"_U_NI
"RTN","YTAPI10A",47,0)
 Q
"RTN","YTAPI10A",48,0)
ASIOC ;
"RTN","YTAPI10A",49,0)
 S NI=0,DFN=0,YSID=YSEND+.01
"RTN","YTAPI10A",50,0)
 F  S YSID=$O(^YSTX(604,"AD",YSID),-1) Q:(YSID'>0)!(YSID<YSBEG)  S IFN=0 F  S IFN=$O(^YSTX(604,"AD",YSID,IFN)) Q:IFN'>0  D
"RTN","YTAPI10A",51,0)
 . Q:'$D(^YSTX(604,IFN,.5))  ; no sig
"RTN","YTAPI10A",52,0)
 . S G=$G(^YSTX(604,IFN,0))
"RTN","YTAPI10A",53,0)
 . S DFN=$P(G,U,2) Q:DFN'>0  ;bad dfn
"RTN","YTAPI10A",54,0)
 . S YSOCC=$O(^TMP($J,YSSUB,DFN,999999),-1)+1
"RTN","YTAPI10A",55,0)
 . Q:(YSOCC>YSLM)
"RTN","YTAPI10A",56,0)
 . S NI=NI+1
"RTN","YTAPI10A",57,0)
 . S ^TMP($J,YSSUB,DFN,YSOCC)=DFN_";1;"_YSCODE_";1;"_IFN_U_$P(G,U,5)_U_Y
"RTN","YTAPI10A",58,0)
 S ^TMP($J,YSSUB)="[DATA]"_U_NI
"RTN","YTAPI10A",59,0)
 Q
"RTN","YTAPI10A",60,0)
PTTEST(YSDATA,YS) ;all data scores for a specific patient
"RTN","YTAPI10A",61,0)
 ;Input:
"RTN","YTAPI10A",62,0)
 ;YS("DFN"): Patient IFN from file2
"RTN","YTAPI10A",63,0)
 ;YS("CODE"): Test code NUMBER from file 601 including "ASI","GAF"
"RTN","YTAPI10A",64,0)
 ;YS("BEGIN"): inclusive date in %DT acceptable format (11/11/2011) to begin search [optional]                
"RTN","YTAPI10A",65,0)
 ;YS("END"): inclusive date in %DT acceptable format (11/11/2011) to end search  [optional]           
"RTN","YTAPI10A",66,0)
 ;YS("LIMIT"): Last N administrations [optional]
"RTN","YTAPI10A",67,0)
 ;Output
"RTN","YTAPI10A",68,0)
 ;YSDATA(1)=[DATA]^NUMBER FOUND
"RTN","YTAPI10A",69,0)
 ;YSDATA(OCCURANCE,1:999) most recent to least recent occurance for this test for this patient
"RTN","YTAPI10A",70,0)
 N YSBEG,YSCODE,R1,R2,R3,YSADATE,YSEND,YSLIMIT,YSLM,YSOCC,YSSCALE,YSSTAFF,YSZ,YSZN,G,YSORT
"RTN","YTAPI10A",71,0)
 D PARSE^YTAPI(.YS)
"RTN","YTAPI10A",72,0)
 S YSLM=$G(YS("LIMIT")) S:YSLM="" YSLM=1
"RTN","YTAPI10A",73,0)
 I YSLM'?1NP.N!(YSLM=0) S YSDATA(1)="[ERROR]",YSDATA(2)="bad limit" Q  ;-->out
"RTN","YTAPI10A",74,0)
 S YSORT=$S(YSLM<0:1,1:-1) ;set sort order
"RTN","YTAPI10A",75,0)
 I YSLM>0 S YSID=YSEND+.00001
"RTN","YTAPI10A",76,0)
 E  S YSID=YSBEG-.00001,YSLM=YSLM*-1
"RTN","YTAPI10A",77,0)
 I YSCODE="ASI" D ASIPT Q  ;-->out
"RTN","YTAPI10A",78,0)
 I YSCODE="GAF" D GAFPT Q  ;-->out
"RTN","YTAPI10A",79,0)
 S YSCODE=$O(^YTT(601,"B",YSCODE,0))
"RTN","YTAPI10A",80,0)
 S NI=0
"RTN","YTAPI10A",81,0)
 F  S YSID=$O(^PXRMINDX(601.2,"PI",DFN,YSCODE,YSID),YSORT) Q:(YSID'>0)!(YSID<YSBEG)!(YSID>YSEND)!(NI=YSLM)  D
"RTN","YTAPI10A",82,0)
 . S DAS=DFN_";;"_YSCODE_";;"_YSID
"RTN","YTAPI10A",83,0)
 . S DAS=DFN_";1;"_YSCODE_";1;"_YSID
"RTN","YTAPI10A",84,0)
 . S YSOCC=$O(YSDATA(9999999),-1)+1 S:YSOCC<2 YSOCC=2
"RTN","YTAPI10A",85,0)
 . S YSDATA(YSOCC)=DAS_U_YSID,NI=NI+1
"RTN","YTAPI10A",86,0)
 S YSDATA(1)="[DATA]"_U_NI
"RTN","YTAPI10A",87,0)
 Q
"RTN","YTAPI10A",88,0)
GAFPT ;gaf for pt IN time
"RTN","YTAPI10A",89,0)
 S IFN=$S(YSORT=1:0,1:9999999),NI=0
"RTN","YTAPI10A",90,0)
 K ^TMP($J,"YSGAF")
"RTN","YTAPI10A",91,0)
 S YSCODE=$O(^YTT(601,"B","GAF",0))
"RTN","YTAPI10A",92,0)
 F  S IFN=$O(^YSD(627.8,"C",DFN,IFN),YSORT) Q:(IFN'>0)!(NI=YSLM)  D
"RTN","YTAPI10A",93,0)
 . S X=$P($G(^YSD(627.8,IFN,60)),U,3)
"RTN","YTAPI10A",94,0)
 . Q:X=""
"RTN","YTAPI10A",95,0)
 . S X=$P($G(^YSD(627.8,IFN,0)),U,3)
"RTN","YTAPI10A",96,0)
 . Q:(X<YSBEG)!(X>YSEND)
"RTN","YTAPI10A",97,0)
 . S NI=NI+1
"RTN","YTAPI10A",98,0)
 . S ^TMP($J,"YSGAF",X,IFN)=""
"RTN","YTAPI10A",99,0)
 S X=$S(YSORT=1:0,1:9999999)
"RTN","YTAPI10A",100,0)
 F  S X=$O(^TMP($J,"YSGAF",X),YSORT) Q:X'>0  S IFN=0 F  S IFN=$O(^TMP($J,"YSGAF",X,IFN)) Q:IFN'>0  D
"RTN","YTAPI10A",101,0)
 . S YSOCC=$O(YSDATA(9999999),-1)+1 S:YSOCC<2 YSOCC=2
"RTN","YTAPI10A",102,0)
 . S DAS=DFN_";1;"_YSCODE_";1;"_IFN
"RTN","YTAPI10A",103,0)
 . S YSDATA(YSOCC)=DAS_U_X
"RTN","YTAPI10A",104,0)
 S YSDATA(1)="[DATA]"_U_NI
"RTN","YTAPI10A",105,0)
 Q
"RTN","YTAPI10A",106,0)
ASIPT ;asis for pt IN time
"RTN","YTAPI10A",107,0)
 S IFN=$S(YSORT=1:0,1:9999999),NI=0
"RTN","YTAPI10A",108,0)
 S YSCODE=$O(^YTT(601,"B","ASI",0))
"RTN","YTAPI10A",109,0)
 F  S IFN=$O(^YSTX(604,"C",DFN,IFN),YSORT) Q:IFN'>0!(NI=YSLM)  D
"RTN","YTAPI10A",110,0)
 . Q:'$D(^YSTX(604,IFN,.5))  ; no sig
"RTN","YTAPI10A",111,0)
 . S X=$P($G(^YSTX(604,IFN,0)),U,5)
"RTN","YTAPI10A",112,0)
 . Q:X=""
"RTN","YTAPI10A",113,0)
 . Q:(X<YSBEG)!(X>YSEND)
"RTN","YTAPI10A",114,0)
 . S YSOCC=$O(YSDATA(9999999),-1)+1 S:YSOCC<2 YSOCC=2
"RTN","YTAPI10A",115,0)
 . S NI=NI+1
"RTN","YTAPI10A",116,0)
 . S DAS=DFN_";1;"_YSCODE_";1;"_IFN
"RTN","YTAPI10A",117,0)
 . S YSDATA(YSOCC)=DAS_U_X
"RTN","YTAPI10A",118,0)
 S YSDATA(1)="[DATA]"_U_NI
"RTN","YTAPI10A",119,0)
 Q
"RTN","YTFILE")
0^3^B16256822
"RTN","YTFILE",1,0)
YTFILE ;SLC/TGA-INSTRUMENT FILE MGMT. ;10/3/02  15:41
"RTN","YTFILE",2,0)
 ;;5.01;MENTAL HEALTH;**13,77**;Dec 30, 1994
"RTN","YTFILE",3,0)
 ;
"RTN","YTFILE",4,0)
 L +^YTD(601.2,YSDFN):0 I '$D(^YTD(601.2,YSDFN,0)) L +^YTD(601.2,0):0 S ^YTD(601.2,YSDFN,0)=YSDFN,^YTD(601.2,"B",YSDFN,YSDFN)=""
"RTN","YTFILE",5,0)
 I  S X=^YTD(601.2,0),X(3)=$P(X,U,3),X(4)=$P(X,U,4) S X(4)=X(4)+1 S:YSDFN>X(3) X(3)=YSDFN S ^(0)=$P(X,U,1,2)_"^"_X(3)_"^"_X(4) L -^YTD(601.2,0)
"RTN","YTFILE",6,0)
 S YSEN=YSTEST I $D(^YTD(601.2,YSDFN,1,YSEN)) G 11
"RTN","YTFILE",7,0)
 I '$D(^YTD(601.2,YSDFN,1,0)) S ^(0)="^601.21PA^^"
"RTN","YTFILE",8,0)
 S X=^YTD(601.2,YSDFN,1,0)
"RTN","YTFILE",9,0)
1 ;
"RTN","YTFILE",10,0)
 S:YSEN>$P(X,U,3) $P(X,U,3)=YSEN S $P(X,U,4)=$P(X,U,4)+1,^YTD(601.2,YSDFN,1,0)=X,^YTD(601.2,YSDFN,1,YSEN,0)=YSTEST,^YTD(601.2,YSDFN,1,"B",YSEN,YSEN)=""
"RTN","YTFILE",11,0)
11 ;
"RTN","YTFILE",12,0)
 I '$D(^YTD(601.2,YSDFN,1,YSEN,1,0)) S ^(0)="^601.22DA^^"
"RTN","YTFILE",13,0)
 I '$D(^YTD(601.2,YSDFN,1,YSEN,1,DT,0)) S ^(0)=DT,X=^YTD(601.2,YSDFN,1,YSEN,1,0),$P(X,U,4)=$P(X,U,4)+1 S:DT>$P(X,U,3) $P(X,U,3)=DT S ^(0)=X
"RTN","YTFILE",14,0)
 ;
"RTN","YTFILE",15,0)
 I $G(YSLC)="" D
"RTN","YTFILE",16,0)
 .  S YSLC=DUZ(2)
"RTN","YTFILE",17,0)
 ;
"RTN","YTFILE",18,0)
 S X=DT_"^"_IO_"^"_YSORD_"^"_DUZ_"^"_$G(YSDTA)_"^"_$S($D(YSCLERK):1,1:2)_"^"_YSLC_"^"
"RTN","YTFILE",19,0)
 S ^YTD(601.2,YSDFN,1,YSEN,1,DT,0)=X_$G(YSBEGIN)
"RTN","YTFILE",20,0)
 S I=0 F  S I=$O(^YTD(601.2,YSDFN,1,YSEN,1,DT,I)) Q:'I  K ^(I)
"RTN","YTFILE",21,0)
 I $D(YSCLERK) S YSTEST=YSCLERK
"RTN","YTFILE",22,0)
 K YSENT I $D(^YTD(601.4,YSDFN,1,YSTEST)) S YSENT=YSTEST,K=0 F  S K=$O(^YTD(601.4,YSDFN,1,YSENT,K)) Q:'K  S ^YTD(601.2,YSDFN,1,YSEN,1,DT,K)=^YTD(601.4,YSDFN,1,YSENT,K)
"RTN","YTFILE",23,0)
 S:YSRP'="" ^YTD(601.2,YSDFN,1,YSEN,1,DT,J+199\200)=YSRP
"RTN","YTFILE",24,0)
 S DIK="^YTD(601.2,",DA=YSDFN,DA(1)=YSEN,DA(2)=DT D IX^DIK K DIK ;ASF 10/02/02
"RTN","YTFILE",25,0)
 S YSTEST(1)=$S($D(YSCLERK):1,1:2) I YSTEST(1)=1 S YSTEST=YSCL
"RTN","YTFILE",26,0)
 I $P(^YTT(601,YSTEST,0),U,9)="T" S X=$E(DT,1,5) S:$D(^YTD(601.2,"AD",YSLC,YSTEST(1),X,YSTEST)) ^(YSTEST)=^(YSTEST)+1 S:'$D(^(YSTEST)) ^(YSTEST)=1
"RTN","YTFILE",27,0)
 L  D:$D(YSENT) ENKIL Q:'$D(YSCLERK)  Q:'$D(^YTT(601,YSTEST,"T"))  Q:^("T")']""  D XF Q
"RTN","YTFILE",28,0)
ENKIL ;
"RTN","YTFILE",29,0)
 L +^YTD(601.4,YSDFN):0 K ^YTD(601.4,YSDFN,1,YSENT) I '$D(YSCLERK) K ^YTD(601.4,YSDFN,1,"B",YSTEST)
"RTN","YTFILE",30,0)
 E  K ^YTD(601.4,YSDFN,1,"AC",YSCL),^YTD(601.4,YSDFN,1,"B",YSCLERK)
"RTN","YTFILE",31,0)
 I $D(^YTD(601.4,YSDFN,1,0)) S X=$P(^(0),U,4),X=X-1 S:X<0 X=0 S $P(^(0),U,4)=X
"RTN","YTFILE",32,0)
 I '$O(^YTD(601.4,YSDFN,1,0)) D
"RTN","YTFILE",33,0)
 .K ^YTD(601.4,YSDFN),^YTD(601.4,"B",YSDFN) L +^YTD(601.4,0):0 S X=^YTD(601.4,0),X4=$P(X,U,4),X3=$P(X,U,3),X4=X4-1 S:X4<0 X4=0 S:'$O(^YTD(601.4,0)) X3="" S ^YTD(601.4,0)=$P(X,U,1,2)_"^"_X3_"^"_X4
"RTN","YTFILE",34,0)
 .L -^YTD(601.4,0)
"RTN","YTFILE",35,0)
 L -^YTD(601.4,YSDFN)
"RTN","YTFILE",36,0)
 Q
"RTN","YTFILE",37,0)
 ;
"RTN","YTFILE",38,0)
EN4 ;
"RTN","YTFILE",39,0)
 L:YS4D +^YTD(601.4,YSDFN):0 D EN40:'YS4D,42 L -^YTD(601.4,YSDFN) Q
"RTN","YTFILE",40,0)
EN40 ;
"RTN","YTFILE",41,0)
 S YS4D=1 L +^YTD(601.4,YSDFN):0 I '$D(^YTD(601.4,YSDFN,0)) L +^YTD(601.4,0):0 S X=^YTD(601.4,0),X(4)=$P(X,U,4),X(3)=$P(X,U,3),X(4)=X(4)+1 S:YSDFN>X(3) X(3)=YSDFN S X=$P(X,U,1,2)_"^"_X(3)_"^"_X(4) L -^YTD(601.4,0)
"RTN","YTFILE",42,0)
 I  S ^YTD(601.4,0)=X,^YTD(601.4,YSDFN,0)=YSDFN,^YTD(601.4,"B",YSDFN,YSDFN)=""
"RTN","YTFILE",43,0)
 I '$D(^YTD(601.4,YSDFN,1,0)) S ^YTD(601.4,YSDFN,1,0)="^601.41P^^"
"RTN","YTFILE",44,0)
 L -^YTD(601.4,YSDFN) S YSENT=$S($D(YSCLERK):YSCLERK,1:YSTEST) I $D(^YTD(601.4,YSDFN,1,YSENT)) Q
"RTN","YTFILE",45,0)
 S X=^YTD(601.4,YSDFN,1,0) S:YSENT>$P(X,U,3) $P(X,U,3)=YSENT S $P(X,U,4)=$P(X,U,4)+1,^YTD(601.4,YSDFN,1,0)=X Q
"RTN","YTFILE",46,0)
42 ;
"RTN","YTFILE",47,0)
 S ^YTD(601.4,YSDFN,1,YSENT,0)=YSENT_"^"_YSHD_"^^"_(J+1)_"^"_$G(C),^YTD(601.4,YSDFN,1,"B",YSENT,YSENT)=""
"RTN","YTFILE",48,0)
 I $D(B) S ^YTD(601.4,YSDFN,1,YSENT,"B")=B
"RTN","YTFILE",49,0)
 S ^YTD(601.4,YSDFN,1,YSENT,J\200)=YSRP,YSRP="" Q
"RTN","YTFILE",50,0)
XF ;
"RTN","YTFILE",51,0)
 K X S I=0 F  S I=$O(^YTD(601.2,YSDFN,1,YSEN,1,DT,I)) Q:'I  S X(I)=^(I)
"RTN","YTFILE",52,0)
 X:$D(^YTT(601,YSTEST,"T")) ^YTT(601,YSTEST,"T") F I=0:0 S I=$O(X(I)) Q:'I  S ^YTD(601.2,YSDFN,1,YSEN,1,DT,I)=X(I)
"RTN","YTFILE",53,0)
 ;
"RTN","YTFILE",54,0)
 K YS4D,YSBEGIN,YSCL,YSCLERK,YSDTA,YSEN,YSHD,YSLC,YSORD
"RTN","YTPXRM")
0^4^B4806121
"RTN","YTPXRM",1,0)
YTPXRM ; SLC/PKR - Build indexes for Mental Health. ;10/28/2003
"RTN","YTPXRM",2,0)
 ;;5.01;MENTAL HEALTH;**77**;Dec 30, 1994
"RTN","YTPXRM",3,0)
 ;DBIA 4113 supports PXRMSXRM entry points. 
"RTN","YTPXRM",4,0)
 ;DBIA 4114 supports setting and killing ^PXRMINDX(601.2)
"RTN","YTPXRM",5,0)
 ;===============================================================
"RTN","YTPXRM",6,0)
INDEX ;Build the index for MENTAL HEALTH.
"RTN","YTPXRM",7,0)
 N DAS,DAST,DATE,DFN,END,ENTRIES,GLOBAL,IND,INS,NE,NERROR
"RTN","YTPXRM",8,0)
 N START,TENP,TEXT
"RTN","YTPXRM",9,0)
 ;Dont leave any old stuff around.
"RTN","YTPXRM",10,0)
 K ^PXRMINDX(601.2)
"RTN","YTPXRM",11,0)
 S GLOBAL=$$GET1^DID(601.2,"","","GLOBAL NAME")
"RTN","YTPXRM",12,0)
 S ENTRIES=$P(^YTD(601.2,0),U,4)
"RTN","YTPXRM",13,0)
 S TENP=ENTRIES/10
"RTN","YTPXRM",14,0)
 S TENP=+$P(TENP,".",1)
"RTN","YTPXRM",15,0)
 I TENP<1 S TENP=1
"RTN","YTPXRM",16,0)
 D BMES^XPDUTL("Building indexes for MENTAL HEALTH DATA")
"RTN","YTPXRM",17,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","YTPXRM",18,0)
 D MES^XPDUTL(TEXT)
"RTN","YTPXRM",19,0)
 S START=$H
"RTN","YTPXRM",20,0)
 S (DFN,IND,NE,NERROR)=0
"RTN","YTPXRM",21,0)
 F  S DFN=+$O(^YTD(601.2,DFN)) Q:DFN=0  D
"RTN","YTPXRM",22,0)
 . S IND=IND+1
"RTN","YTPXRM",23,0)
 . I IND#TENP=0 D
"RTN","YTPXRM",24,0)
 .. S TEXT="Processing entry "_IND
"RTN","YTPXRM",25,0)
 .. D MES^XPDUTL(TEXT)
"RTN","YTPXRM",26,0)
 . I IND#10000=0 W "."
"RTN","YTPXRM",27,0)
 . S INS=0
"RTN","YTPXRM",28,0)
 . F  S INS=$O(^YTD(601.2,DFN,1,INS)) Q:+INS=0  D
"RTN","YTPXRM",29,0)
 .. S DAST=DFN_";1;"_INS_";1;"
"RTN","YTPXRM",30,0)
 .. S DATE=0
"RTN","YTPXRM",31,0)
 .. F  S DATE=$O(^YTD(601.2,DFN,1,INS,1,DATE)) Q:DATE=""  D
"RTN","YTPXRM",32,0)
 ... S DAS=DAST_DATE
"RTN","YTPXRM",33,0)
 ... S ^PXRMINDX(601.2,"IP",INS,DFN,DATE,DAS)=""
"RTN","YTPXRM",34,0)
 ... S ^PXRMINDX(601.2,"PI",DFN,INS,DATE,DAS)=""
"RTN","YTPXRM",35,0)
 ... S NE=NE+1
"RTN","YTPXRM",36,0)
 S END=$H
"RTN","YTPXRM",37,0)
 S TEXT=NE_" MENTAL HEALTH results indexed."
"RTN","YTPXRM",38,0)
 D MES^XPDUTL(TEXT)
"RTN","YTPXRM",39,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","YTPXRM",40,0)
 ;If there were errors send a message.
"RTN","YTPXRM",41,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","YTPXRM",42,0)
 ;Send a MailMan message with the results.
"RTN","YTPXRM",43,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","YTPXRM",44,0)
 S ^PXRMINDX(601.2,"GLOBAL NAME")=GLOBAL
"RTN","YTPXRM",45,0)
 S ^PXRMINDX(601.2,"BUILT BY")=DUZ
"RTN","YTPXRM",46,0)
 S ^PXRMINDX(601.2,"DATE BUILT")=$$NOW^XLFDT
"RTN","YTPXRM",47,0)
 Q
"RTN","YTPXRM",48,0)
 ;
"RTN","YTPXRM",49,0)
 ;===============================================================
"RTN","YTPXRM",50,0)
KMH(X,DA) ;Delete index for Psych Instrument Patient File
"RTN","YTPXRM",51,0)
 N DAS
"RTN","YTPXRM",52,0)
 S DAS=DA(2)_";1;"_DA(1)_";1;"_X(1)
"RTN","YTPXRM",53,0)
 K ^PXRMINDX(601.2,"IP",DA(1),DA(2),X(1),DAS)
"RTN","YTPXRM",54,0)
 K ^PXRMINDX(601.2,"PI",DA(2),DA(1),X(1),DAS)
"RTN","YTPXRM",55,0)
 Q
"RTN","YTPXRM",56,0)
 ;
"RTN","YTPXRM",57,0)
 ;===============================================================
"RTN","YTPXRM",58,0)
SMH(X,DA) ;Set index for Psych Instrument Patient File
"RTN","YTPXRM",59,0)
 ;DA=COMPLETION DATE, DA(1)=INSTRUMENT, DA(2)=DFN
"RTN","YTPXRM",60,0)
 ;X(1)=COMPLETION DATE
"RTN","YTPXRM",61,0)
 N DAS
"RTN","YTPXRM",62,0)
 S DAS=DA(2)_";1;"_DA(1)_";1;"_X(1)
"RTN","YTPXRM",63,0)
 S ^PXRMINDX(601.2,"IP",DA(1),DA(2),X(1),DAS)=""
"RTN","YTPXRM",64,0)
 S ^PXRMINDX(601.2,"PI",DA(2),DA(1),X(1),DAS)=""
"RTN","YTPXRM",65,0)
 Q
"RTN","YTPXRM",66,0)
 ;
"VER")
8.0^22.0
**END**
**END**
