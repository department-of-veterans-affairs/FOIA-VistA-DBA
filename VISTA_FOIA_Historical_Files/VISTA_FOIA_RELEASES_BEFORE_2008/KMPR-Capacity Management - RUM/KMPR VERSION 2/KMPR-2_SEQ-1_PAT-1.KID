Released KMPR*2*1 SEQ #1
Extracted from mail message
**KIDS**:KMPR*2.0*1^

**INSTALL NAME**
KMPR*2.0*1
"BLD",5804,0)
KMPR*2.0*1^CAPACITY MANAGEMENT - RUM^0^3050125^y
"BLD",5804,1,0)
^^1^1^3041117^
"BLD",5804,1,1,0)
Patch 1 for RUM v2.0
"BLD",5804,4,0)
^9.64PA^^
"BLD",5804,"INIT")
KMPRPOST
"BLD",5804,"KRN",0)
^9.67PA^8989.52^19
"BLD",5804,"KRN",.4,0)
.4
"BLD",5804,"KRN",.401,0)
.401
"BLD",5804,"KRN",.402,0)
.402
"BLD",5804,"KRN",.403,0)
.403
"BLD",5804,"KRN",.5,0)
.5
"BLD",5804,"KRN",.84,0)
.84
"BLD",5804,"KRN",3.6,0)
3.6
"BLD",5804,"KRN",3.8,0)
3.8
"BLD",5804,"KRN",9.2,0)
9.2
"BLD",5804,"KRN",9.8,0)
9.8
"BLD",5804,"KRN",9.8,"NM",0)
^9.68A^19^19
"BLD",5804,"KRN",9.8,"NM",1,0)
KMPRBD01^^0^B7459434
"BLD",5804,"KRN",9.8,"NM",2,0)
KMPRSS^^0^B5472013
"BLD",5804,"KRN",9.8,"NM",3,0)
KMPRSSA^^0^B52658391
"BLD",5804,"KRN",9.8,"NM",4,0)
KMPRUTL^^0^B12308301
"BLD",5804,"KRN",9.8,"NM",5,0)
KMPUG^^1^
"BLD",5804,"KRN",9.8,"NM",6,0)
KMPUG1^^1^
"BLD",5804,"KRN",9.8,"NM",7,0)
KMPUG2^^1^
"BLD",5804,"KRN",9.8,"NM",8,0)
KMPUGV^^1^
"BLD",5804,"KRN",9.8,"NM",9,0)
KMPRPOST^^0^B1139124
"BLD",5804,"KRN",9.8,"NM",10,0)
KMPUTL^^1^
"BLD",5804,"KRN",9.8,"NM",11,0)
KMPUTL1^^1^
"BLD",5804,"KRN",9.8,"NM",12,0)
KMPU11^^1^
"BLD",5804,"KRN",9.8,"NM",13,0)
KMPRUTL1^^0^B23590616
"BLD",5804,"KRN",9.8,"NM",14,0)
KMPRP1^^0^B20078876
"BLD",5804,"KRN",9.8,"NM",15,0)
KMPRPG01^^0^B5383545
"BLD",5804,"KRN",9.8,"NM",16,0)
KMPRPG02^^0^B5448671
"BLD",5804,"KRN",9.8,"NM",17,0)
KMPRSSB^^0^B988835
"BLD",5804,"KRN",9.8,"NM",18,0)
KMPRP2^^0^B41968602
"BLD",5804,"KRN",9.8,"NM",19,0)
KMPRPN03^^0^B12967693
"BLD",5804,"KRN",9.8,"NM","B","KMPRBD01",1)

"BLD",5804,"KRN",9.8,"NM","B","KMPRP1",14)

"BLD",5804,"KRN",9.8,"NM","B","KMPRP2",18)

"BLD",5804,"KRN",9.8,"NM","B","KMPRPG01",15)

"BLD",5804,"KRN",9.8,"NM","B","KMPRPG02",16)

"BLD",5804,"KRN",9.8,"NM","B","KMPRPN03",19)

"BLD",5804,"KRN",9.8,"NM","B","KMPRPOST",9)

"BLD",5804,"KRN",9.8,"NM","B","KMPRSS",2)

"BLD",5804,"KRN",9.8,"NM","B","KMPRSSA",3)

"BLD",5804,"KRN",9.8,"NM","B","KMPRSSB",17)

"BLD",5804,"KRN",9.8,"NM","B","KMPRUTL",4)

"BLD",5804,"KRN",9.8,"NM","B","KMPRUTL1",13)

"BLD",5804,"KRN",9.8,"NM","B","KMPU11",12)

"BLD",5804,"KRN",9.8,"NM","B","KMPUG",5)

"BLD",5804,"KRN",9.8,"NM","B","KMPUG1",6)

"BLD",5804,"KRN",9.8,"NM","B","KMPUG2",7)

"BLD",5804,"KRN",9.8,"NM","B","KMPUGV",8)

"BLD",5804,"KRN",9.8,"NM","B","KMPUTL",10)

"BLD",5804,"KRN",9.8,"NM","B","KMPUTL1",11)

"BLD",5804,"KRN",19,0)
19
"BLD",5804,"KRN",19,"NM",0)
^9.68A^5^5
"BLD",5804,"KRN",19,"NM",1,0)
KMPR RUM MANAGER MENU^^3
"BLD",5804,"KRN",19,"NM",2,0)
XUCS MANAGER MENU^^1^
"BLD",5804,"KRN",19,"NM",3,0)
XUCS MANUAL PURGE OF DATA^^1^
"BLD",5804,"KRN",19,"NM",4,0)
XUCS SITE EDIT MENU^^1^
"BLD",5804,"KRN",19,"NM",5,0)
XUCSR REPORTS MENU^^1^
"BLD",5804,"KRN",19,"NM","B","KMPR RUM MANAGER MENU",1)

"BLD",5804,"KRN",19,"NM","B","XUCS MANAGER MENU",2)

"BLD",5804,"KRN",19,"NM","B","XUCS MANUAL PURGE OF DATA",3)

"BLD",5804,"KRN",19,"NM","B","XUCS SITE EDIT MENU",4)

"BLD",5804,"KRN",19,"NM","B","XUCSR REPORTS MENU",5)

"BLD",5804,"KRN",19.1,0)
19.1
"BLD",5804,"KRN",101,0)
101
"BLD",5804,"KRN",409.61,0)
409.61
"BLD",5804,"KRN",409.61,"NM",0)
^9.68A^1^1
"BLD",5804,"KRN",409.61,"NM",1,0)
KMPR STATUS^^0
"BLD",5804,"KRN",409.61,"NM","B","KMPR STATUS",1)

"BLD",5804,"KRN",771,0)
771
"BLD",5804,"KRN",870,0)
870
"BLD",5804,"KRN",8989.51,0)
8989.51
"BLD",5804,"KRN",8989.52,0)
8989.52
"BLD",5804,"KRN",8994,0)
8994
"BLD",5804,"KRN","B",.4,.4)

"BLD",5804,"KRN","B",.401,.401)

"BLD",5804,"KRN","B",.402,.402)

"BLD",5804,"KRN","B",.403,.403)

"BLD",5804,"KRN","B",.5,.5)

"BLD",5804,"KRN","B",.84,.84)

"BLD",5804,"KRN","B",3.6,3.6)

"BLD",5804,"KRN","B",3.8,3.8)

"BLD",5804,"KRN","B",9.2,9.2)

"BLD",5804,"KRN","B",9.8,9.8)

"BLD",5804,"KRN","B",19,19)

"BLD",5804,"KRN","B",19.1,19.1)

"BLD",5804,"KRN","B",101,101)

"BLD",5804,"KRN","B",409.61,409.61)

"BLD",5804,"KRN","B",771,771)

"BLD",5804,"KRN","B",870,870)

"BLD",5804,"KRN","B",8989.51,8989.51)

"BLD",5804,"KRN","B",8989.52,8989.52)

"BLD",5804,"KRN","B",8994,8994)

"INIT")
KMPRPOST
"KRN",19,13934,-1)
3^1
"KRN",19,13934,0)
KMPR RUM MANAGER MENU^RUM Manager Menu^^M^^^^^^^^CAPACITY MANAGEMENT - RUM^^
"KRN",19,13934,1,0)
^19.06^2^2^3041117^^^^
"KRN",19,13934,1,1,0)
This menu will help the site to manage the Resource Usage Monitor (RUM)
"KRN",19,13934,1,2,0)
component of Capacity Management monitoring tools.
"KRN",19,13934,10,0)
^19.01IP^7^7
"KRN",19,13934,20)

"KRN",19,13934,99)
59882,37397
"KRN",19,13934,99.1)
59924,79210
"KRN",19,13934,"U")
RUM MANAGER MENU
"KRN",19,19902,-1)
1^2
"KRN",19,19902,0)
XUCS MANAGER MENU
"KRN",19,19903,-1)
1^3
"KRN",19,19903,0)
XUCS MANUAL PURGE OF DATA
"KRN",19,19904,-1)
1^4
"KRN",19,19904,0)
XUCS SITE EDIT MENU
"KRN",19,19905,-1)
1^5
"KRN",19,19905,0)
XUCSR REPORTS MENU
"KRN",409.61,591,-1)
0^1
"KRN",409.61,591,0)
KMPR STATUS^2^^80^5^21^0^1^^^RUM Status^1^^1
"KRN",409.61,591,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,591,"FNL")
D EXIT^KMPRSSB
"KRN",409.61,591,"HDR")
D HDR^KMPRSSB
"KRN",409.61,591,"HLP")
D HELP^KMPRSSB
"KRN",409.61,591,"INIT")
D INIT^KMPRSSB
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",17,409.61)
409.61;17;1;;;;;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",513,-1)
1^1
"PKG",513,0)
CAPACITY MANAGEMENT - RUM^KMPR^Capacity Management - Resource Usage Monitor
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
2.0^3030602^3030602^10292
"PKG",513,22,1,"PAH",1,0)
1^3050125^10292
"PKG",513,22,1,"PAH",1,1,0)
^^1^1^3050125
"PKG",513,22,1,"PAH",1,1,1,0)
Patch 1 for RUM v2.0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
19
"RTN","KMPRBD01")
0^1^B7459434
"RTN","KMPRBD01",1,0)
KMPRBD01 ;OAK/RAK - RUM Daily/Weekly Compression ;11/19/04  10:31
"RTN","KMPRBD01",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**1**;May 28, 2003
"RTN","KMPRBD01",3,0)
 ;
"RTN","KMPRBD01",4,0)
EN ;-- entry point for Background Driver.
"RTN","KMPRBD01",5,0)
 ;
"RTN","KMPRBD01",6,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPRBD01",7,0)
 ;
"RTN","KMPRBD01",8,0)
 N ENDT,STR
"RTN","KMPRBD01",9,0)
 ;
"RTN","KMPRBD01",10,0)
 S STR=$$NOW^XLFDT
"RTN","KMPRBD01",11,0)
 D DAILY^KMPRBD02(+$H)
"RTN","KMPRBD01",12,0)
 ; store start, stop and delta times for daily background job
"RTN","KMPRBD01",13,0)
 D STRSTP^KMPDUTL2(2,1,1,STR)
"RTN","KMPRBD01",14,0)
 ;
"RTN","KMPRBD01",15,0)
 ; clean up old "job" nodes.
"RTN","KMPRBD01",16,0)
 D CLEAN
"RTN","KMPRBD01",17,0)
 ;
"RTN","KMPRBD01",18,0)
 ; if sunday do weekly compression
"RTN","KMPRBD01",19,0)
 I '$$DOW^XLFDT(DT,1) D 
"RTN","KMPRBD01",20,0)
 .; store weekly start/stop stats.
"RTN","KMPRBD01",21,0)
 .S STR=$$NOW^XLFDT
"RTN","KMPRBD01",22,0)
 .D WEEKLY^KMPRBD04(DT)
"RTN","KMPRBD01",23,0)
 .; store start, stop and delta times for weekly background job
"RTN","KMPRBD01",24,0)
 .D STRSTP^KMPDUTL2(2,2,1,STR)
"RTN","KMPRBD01",25,0)
 ;
"RTN","KMPRBD01",26,0)
 ; check for errors.
"RTN","KMPRBD01",27,0)
 D ERRORS
"RTN","KMPRBD01",28,0)
 ;
"RTN","KMPRBD01",29,0)
 Q
"RTN","KMPRBD01",30,0)
 ;
"RTN","KMPRBD01",31,0)
CLEAN ;-- clean up old "JOB" nodes
"RTN","KMPRBD01",32,0)
 ;
"RTN","KMPRBD01",33,0)
 N JOB,NODE S NODE=""
"RTN","KMPRBD01",34,0)
 F  S NODE=$O(^KMPTMP("KMPR","JOB",NODE)) Q:NODE=""  D
"RTN","KMPRBD01",35,0)
 .S JOB=0 F  S JOB=$O(^XTMP("KMPR","JOB",NODE,JOB)) Q:'+JOB  D
"RTN","KMPRBD01",36,0)
 ..I '$D(^XUTL("XQ",JOB)) K ^KMPTMP("KMPR","JOB",NODE,JOB)
"RTN","KMPRBD01",37,0)
 ;
"RTN","KMPRBD01",38,0)
 ; Store the number of active user jobs into ^XTMP("KMPR","ACTIVE")
"RTN","KMPRBD01",39,0)
 ; D CLUSTER^%ZKMPRC1
"RTN","KMPRBD01",40,0)
 ;
"RTN","KMPRBD01",41,0)
 Q
"RTN","KMPRBD01",42,0)
 ;
"RTN","KMPRBD01",43,0)
ERRORS ; check and process errors.
"RTN","KMPRBD01",44,0)
 ;
"RTN","KMPRBD01",45,0)
 Q:'$D(^XTMP("KMPR","ERR"))
"RTN","KMPRBD01",46,0)
 ;
"RTN","KMPRBD01",47,0)
 N H,I,LN,N,O,SITE,TEXT,XMSUB,X,XMTEXT,XMY,XMZ,Y,Z
"RTN","KMPRBD01",48,0)
 ;
"RTN","KMPRBD01",49,0)
 S SITE=$$SITE^VASITE
"RTN","KMPRBD01",50,0)
 S XMSUB="RUM Error at site "_$P(SITE,U,3)_" on "_$$FMTE^XLFDT($$DT^XLFDT)
"RTN","KMPRBD01",51,0)
 S TEXT(1)="  The following error(s) have been logged at "_$P(SITE,U,2)_" ("_$P(SITE,U,3)_") "
"RTN","KMPRBD01",52,0)
 S TEXT(2)="  while moving data from ^XTMP(""KMPR"",""DLY"") to file 8971.1."
"RTN","KMPRBD01",53,0)
 S H="",LN=3
"RTN","KMPRBD01",54,0)
 ; H = date in $H format (+$H).
"RTN","KMPRBD01",55,0)
 ; N = node name.
"RTN","KMPRBD01",56,0)
 ; O = option.
"RTN","KMPRBD01",57,0)
 F  S H=$O(^XTMP("KMPR","ERR",H)) Q:H=""  S N="" D 
"RTN","KMPRBD01",58,0)
 .F  S N=$O(^XTMP("KMPR","ERR",H,N)) Q:N=""  S O="" D 
"RTN","KMPRBD01",59,0)
 ..F  S O=$O(^XTMP("KMPR","ERR",H,N,O)) Q:O=""  D 
"RTN","KMPRBD01",60,0)
 ...S TEXT(LN)="",LN=LN+1
"RTN","KMPRBD01",61,0)
 ...S TEXT(LN)="Date..: "_H_"    Node: "_N,LN=LN+1
"RTN","KMPRBD01",62,0)
 ...S TEXT(LN)="Option: "_O,LN=LN+1
"RTN","KMPRBD01",63,0)
 ...; prime time.
"RTN","KMPRBD01",64,0)
 ...S TEXT(LN)="Prime Time     = "_$G(^XTMP("KMPR","ERR",H,N,O,0)),LN=LN+1
"RTN","KMPRBD01",65,0)
 ...; non-prime time.
"RTN","KMPRBD01",66,0)
 ...S TEXT(LN)="Non-Prime Time = "_$G(^XTMP("KMPR","ERR",H,N,O,1)),LN=LN+1
"RTN","KMPRBD01",67,0)
 ...; message.
"RTN","KMPRBD01",68,0)
 ...F I=0:0 S I=$O(^XTMP("KMPR","ERR",H,N,O,"MSG",I)) Q:'I  D 
"RTN","KMPRBD01",69,0)
 ....S TEXT(LN)=^XTMP("KMPR","ERR",H,N,O,"MSG",I),LN=LN+1
"RTN","KMPRBD01",70,0)
 S XMTEXT="TEXT("
"RTN","KMPRBD01",71,0)
 S XMY("G.KMP2-RUM@ISC-ALBANY.VA.GOV")=""
"RTN","KMPRBD01",72,0)
 D ^XMD
"RTN","KMPRBD01",73,0)
 ;
"RTN","KMPRBD01",74,0)
 K ^KMPTMP("KMPR","ERR")
"RTN","KMPRBD01",75,0)
 ;
"RTN","KMPRBD01",76,0)
 Q
"RTN","KMPRP1")
0^14^B20078876
"RTN","KMPRP1",1,0)
KMPRP1 ;OAK/RAK - RUM Data by Option/Protocol/RPC ;11/29/04  08:47
"RTN","KMPRP1",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**1**;May 28, 2003
"RTN","KMPRP1",3,0)
EN ;-- entry point.
"RTN","KMPRP1",4,0)
 ;
"RTN","KMPRP1",5,0)
 N %ZIS,CONT,KMPRDATE,KMPROPR,KMPROPT,OUT,POP
"RTN","KMPRP1",6,0)
 N X,Y,ZTDESC,ZTRTN,ZTSAVE,ZTSK
"RTN","KMPRP1",7,0)
 ;
"RTN","KMPRP1",8,0)
 S OUT=0
"RTN","KMPRP1",9,0)
 F  D  Q:OUT
"RTN","KMPRP1",10,0)
 .D HDR^KMPDUTL4(" RUM Data by Option/Protocol/RPC ")
"RTN","KMPRP1",11,0)
 .S KMPROPR=$$OPR I 'KMPROPR S OUT=1 Q
"RTN","KMPRP1",12,0)
 .; select option, protocol or rpc entry
"RTN","KMPRP1",13,0)
 .S KMPROPT=$$OPRSEL(KMPROPR) Q:'KMPROPT
"RTN","KMPRP1",14,0)
 .; determine start date from file 8971.1
"RTN","KMPRP1",15,0)
 .D RUMDATES^KMPRUTL(.KMPRDATE) Q:'KMPRDATE
"RTN","KMPRP1",16,0)
 .; select output device.
"RTN","KMPRP1",17,0)
 .S %ZIS="Q",%ZIS("A")="Device: ",%ZIS("B")="HOME"
"RTN","KMPRP1",18,0)
 .W ! D ^%ZIS I POP W !,"No action taken." Q
"RTN","KMPRP1",19,0)
 .; if queued.
"RTN","KMPRP1",20,0)
 .I $D(IO("Q")) K IO("Q") D  Q
"RTN","KMPRP1",21,0)
 ..S ZTDESC="RUM Data by Option for '"_$P(KMPROPT,U,2)_"'."
"RTN","KMPRP1",22,0)
 ..S ZTRTN="EN1^KMPRP1"
"RTN","KMPRP1",23,0)
 ..S ZTSAVE("KMPRDATE")="",ZTSAVE("KMPROPR")="",ZTSAVE("KMPROPT")=""
"RTN","KMPRP1",24,0)
 ..D ^%ZTLOAD W:$G(ZTSK) !,"Task #",ZTSK
"RTN","KMPRP1",25,0)
 ..D EXIT
"RTN","KMPRP1",26,0)
 .;
"RTN","KMPRP1",27,0)
 .; if output to terminal display message.
"RTN","KMPRP1",28,0)
 .W:$E(IOST,1,2)="C-" !?3,"compiling data..."
"RTN","KMPRP1",29,0)
 .D EN1
"RTN","KMPRP1",30,0)
 ;
"RTN","KMPRP1",31,0)
 Q
"RTN","KMPRP1",32,0)
 ;
"RTN","KMPRP1",33,0)
EN1 ;-- entry point from taskman.
"RTN","KMPRP1",34,0)
 ;
"RTN","KMPRP1",35,0)
 Q:'$G(KMPRDATE)
"RTN","KMPRP1",36,0)
 Q:'$G(KMPROPR)
"RTN","KMPRP1",37,0)
 Q:$G(KMPROPT)=""
"RTN","KMPRP1",38,0)
 ;
"RTN","KMPRP1",39,0)
 N ELEMENT,KMPRARRY,KMPRDAYS
"RTN","KMPRP1",40,0)
 ;
"RTN","KMPRP1",41,0)
 ; set elements data into ELEMENT() array.
"RTN","KMPRP1",42,0)
 D ELEARRY^KMPRUTL("ELEMENT") Q:'$D(ELEMENT)
"RTN","KMPRP1",43,0)
 S KMPRARRY=$NA(^TMP("KMPR OPT DATA",$J))
"RTN","KMPRP1",44,0)
 K @KMPRARRY
"RTN","KMPRP1",45,0)
 D DATA,PRINT,EXIT
"RTN","KMPRP1",46,0)
 K @KMPRARRY
"RTN","KMPRP1",47,0)
 ;
"RTN","KMPRP1",48,0)
 Q
"RTN","KMPRP1",49,0)
 ;
"RTN","KMPRP1",50,0)
DATA ;-- set data into KMPRARRY
"RTN","KMPRP1",51,0)
 Q:'$D(ELEMENT)
"RTN","KMPRP1",52,0)
 Q:$G(KMPRARRY)=""
"RTN","KMPRP1",53,0)
 Q:'$G(KMPRDATE)
"RTN","KMPRP1",54,0)
 Q:'$G(KMPROPR)
"RTN","KMPRP1",55,0)
 Q:$G(KMPROPT)=""
"RTN","KMPRP1",56,0)
 ;
"RTN","KMPRP1",57,0)
 N DATE,END,I,IEN,OPTION,START
"RTN","KMPRP1",58,0)
 ;
"RTN","KMPRP1",59,0)
 ; start and end dates.
"RTN","KMPRP1",60,0)
 S START=$P(KMPRDATE,U),END=$P(KMPRDATE,U,2)
"RTN","KMPRP1",61,0)
 S DATE=START-.1,KMPRDAYS=0
"RTN","KMPRP1",62,0)
 F  S DATE=$O(^KMPR(8971.1,"B",DATE)) Q:'DATE!(DATE>END)  D 
"RTN","KMPRP1",63,0)
 .S IEN=0,KMPRDAYS=KMPRDAYS+1
"RTN","KMPRP1",64,0)
 .F  S IEN=$O(^KMPR(8971.1,"B",DATE,IEN)) Q:'IEN  D 
"RTN","KMPRP1",65,0)
 ..Q:'$D(^KMPR(8971.1,IEN,0))  S DATA(0)=^(0),DATA(1)=$G(^(1)),DATA(2)=$G(^(2))
"RTN","KMPRP1",66,0)
 ..S OPTION=$$OPRCHK(KMPROPR,KMPROPT,DATA(0)) Q:OPTION=""
"RTN","KMPRP1",67,0)
 ..F I=1:1:8 D 
"RTN","KMPRP1",68,0)
 ...S $P(@KMPRARRY@(OPTION),U,I)=$P($G(@KMPRARRY@(OPTION)),U,I)+$P(DATA(1),U,I)
"RTN","KMPRP1",69,0)
 ...S $P(@KMPRARRY@(OPTION),U,I)=$P($G(@KMPRARRY@(OPTION)),U,I)+$P(DATA(2),U,I)
"RTN","KMPRP1",70,0)
 ;
"RTN","KMPRP1",71,0)
 Q
"RTN","KMPRP1",72,0)
 ;
"RTN","KMPRP1",73,0)
EXIT ;
"RTN","KMPRP1",74,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","KMPRP1",75,0)
 D ^%ZISC
"RTN","KMPRP1",76,0)
 K KMPUDATE,KMPUNAM
"RTN","KMPRP1",77,0)
 ;
"RTN","KMPRP1",78,0)
 Q
"RTN","KMPRP1",79,0)
 ;
"RTN","KMPRP1",80,0)
PRINT ;-- print data from KMPRARRY.
"RTN","KMPRP1",81,0)
 Q:'$D(ELEMENT)
"RTN","KMPRP1",82,0)
 Q:$G(KMPRARRY)=""
"RTN","KMPRP1",83,0)
 ;
"RTN","KMPRP1",84,0)
 U IO
"RTN","KMPRP1",85,0)
 ;
"RTN","KMPRP1",86,0)
 N DATA,OCCUR,I,NUMBER,PIECE,SITE
"RTN","KMPRP1",87,0)
 ;
"RTN","KMPRP1",88,0)
 ; facility name.
"RTN","KMPRP1",89,0)
 S SITE=$$SITE^VASITE
"RTN","KMPRP1",90,0)
 S SITE=$P(SITE,U,2)_" ("_$P(SITE,U,3)_")"
"RTN","KMPRP1",91,0)
 ;
"RTN","KMPRP1",92,0)
 I '$D(@KMPRARRY) D  Q
"RTN","KMPRP1",93,0)
 .D HDR
"RTN","KMPRP1",94,0)
 .W !!!?28,"<<<No Data to Report>>>"
"RTN","KMPRP1",95,0)
 .D CONTINUE^KMPDUTL4("Press RETURN to continue",2,.CONT)
"RTN","KMPRP1",96,0)
 ;
"RTN","KMPRP1",97,0)
 S OPTION=""
"RTN","KMPRP1",98,0)
 F  S OPTION=$O(@KMPRARRY@(OPTION)) Q:OPTION=""  D 
"RTN","KMPRP1",99,0)
 .D HDR S DATA=@KMPRARRY@(OPTION),I=0,OCCUR=$P(DATA,U,8)
"RTN","KMPRP1",100,0)
 .F  S I=$O(ELEMENT(I)) Q:'I  D 
"RTN","KMPRP1",101,0)
 ..W !,$P(ELEMENT(I),U) S PIECE=$P(ELEMENT(I),U,2)
"RTN","KMPRP1",102,0)
 ..W $$REPEAT^XLFSTR(".",25-$X)
"RTN","KMPRP1",103,0)
 ..S NUMBER=$P(DATA,U,PIECE)
"RTN","KMPRP1",104,0)
 ..; per occurrence.
"RTN","KMPRP1",105,0)
 ..W:OCCUR&(PIECE'=8) ?28,$J($FN(NUMBER/OCCUR,",",$S(I<3:2,1:0)),$S(I<3:14,1:11))
"RTN","KMPRP1",106,0)
 ..W ?50,$J($FN(NUMBER,",",$S(I<3:2,1:0)),$S(I<3:18,1:15))
"RTN","KMPRP1",107,0)
 ;
"RTN","KMPRP1",108,0)
 D CONTINUE^KMPDUTL4("Press RETURN to continue",2,.CONT)
"RTN","KMPRP1",109,0)
 ;
"RTN","KMPRP1",110,0)
 Q
"RTN","KMPRP1",111,0)
 ;
"RTN","KMPRP1",112,0)
HDR ;
"RTN","KMPRP1",113,0)
 N TITLE
"RTN","KMPRP1",114,0)
 W:$Y @IOF
"RTN","KMPRP1",115,0)
 S TITLE="RUM Data for Option: "_$P(KMPROPT,U,2)
"RTN","KMPRP1",116,0)
 W !?(80-$L(TITLE)\2),TITLE
"RTN","KMPRP1",117,0)
 W !?(80-$L($G(SITE))\2),$G(SITE)
"RTN","KMPRP1",118,0)
 W !?23,"For "_$P($G(KMPRDATE),U,3)_" to "_$P($G(KMPRDATE),U,4)
"RTN","KMPRP1",119,0)
 W !
"RTN","KMPRP1",120,0)
 W !?28,"per Occurrence",?50,"         Totals"
"RTN","KMPRP1",121,0)
 W !
"RTN","KMPRP1",122,0)
 ;
"RTN","KMPRP1",123,0)
 Q
"RTN","KMPRP1",124,0)
 ;
"RTN","KMPRP1",125,0)
OPR() ;-- extrinsic function - select option, protocol or rpc
"RTN","KMPRP1",126,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRP1",127,0)
 ; Return: 1 - Option
"RTN","KMPRP1",128,0)
 ;         2 - Protocol
"RTN","KMPRP1",129,0)
 ;         3 - RPC
"RTN","KMPRP1",130,0)
 ;        "" - No selection made
"RTN","KMPRP1",131,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRP1",132,0)
 N DIR,X,Y
"RTN","KMPRP1",133,0)
 S DIR(0)="SO^1:Option;2:Protocol;3:RPC"
"RTN","KMPRP1",134,0)
 D ^DIR
"RTN","KMPRP1",135,0)
 Q $S(Y:Y_"^"_$G(Y(0)),1:"")
"RTN","KMPRP1",136,0)
 ;
"RTN","KMPRP1",137,0)
OPRCHK(OPR,OPT,DATA) ;-- extrinsic function - check to see if option, protocol or rpc matches
"RTN","KMPRP1",138,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRP1",139,0)
 ; OPR.... Results from $$OPR above.
"RTN","KMPRP1",140,0)
 ; OPT.... Option, protocol or rpc name to be matched
"RTN","KMPRP1",141,0)
 ; DATA... Zero node of file 8971.1 (RESOURCE USAGE MONITOR)
"RTN","KMPRP1",142,0)
 ;
"RTN","KMPRP1",143,0)
 ; Return: OptionName - match
"RTN","KMPRP1",144,0)
 ;                 "" - no match
"RTN","KMPRP1",145,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRP1",146,0)
 Q:$G(OPR)="" ""
"RTN","KMPRP1",147,0)
 Q:'OPR!($P(OPR,U,2)="") ""
"RTN","KMPRP1",148,0)
 Q:'$D(DATA) ""
"RTN","KMPRP1",149,0)
 Q:(+OPR)<1!((+OPR)>3) ""
"RTN","KMPRP1",150,0)
 N OPTION
"RTN","KMPRP1",151,0)
 ; option - piece 4, protocol - piece 5, rpc - piece7
"RTN","KMPRP1",152,0)
 S OPTION=$S((+OPR)=1:$P(DATA,U,4),(+OPR)=2:$P(DATA,U,5),1:$P(DATA,U,7))
"RTN","KMPRP1",153,0)
 Q $S(OPTION="":"",OPTION'=$P(OPT,U,2):"",1:OPTION)
"RTN","KMPRP1",154,0)
 ;
"RTN","KMPRP1",155,0)
OPRSEL(OPR) ;-- extrinsic function - select entry
"RTN","KMPRP1",156,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRP1",157,0)
 ; OPT.... Results from $$OPR above.
"RTN","KMPRP1",158,0)
 ;
"RTN","KMPRP1",159,0)
 ; Return: IEN^Name - this will be from the Option file, Protocol file,
"RTN","KMPRP1",160,0)
 ;                    or RPC file, depending on the value of OPR.
"RTN","KMPRP1",161,0)
 ;         "" - no selection made
"RTN","KMPRP1",162,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRP1",163,0)
 Q:'$G(OPR) ""
"RTN","KMPRP1",164,0)
 Q:OPR<1!(OPR>3) ""
"RTN","KMPRP1",165,0)
 N DIC,X,Y
"RTN","KMPRP1",166,0)
 ; 1 - option, 2 - protocol, 3 - rpc
"RTN","KMPRP1",167,0)
 S DIC=$S((+OPR)=1:19,(+OPR)=2:101,1:8994)
"RTN","KMPRP1",168,0)
 S DIC(0)="AEMQZ",DIC("A")="Select "_$P(OPR,U,2)_": "
"RTN","KMPRP1",169,0)
 W ! D ^DIC
"RTN","KMPRP1",170,0)
 Q $S(Y<0:"",1:+Y_"^"_Y(0,0))
"RTN","KMPRP2")
0^18^B41968602
"RTN","KMPRP2",1,0)
KMPRP2 ;OAK/KAK - RUM Hourly Occurrences Distribution ;11/29/04  11:57
"RTN","KMPRP2",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**1**;May 28, 2003
"RTN","KMPRP2",3,0)
 ;
"RTN","KMPRP2",4,0)
EN ;-- entry point
"RTN","KMPRP2",5,0)
 ;
"RTN","KMPRP2",6,0)
 N %ZIS,CONT,DATA,DIR,HR,KMPRDATE,KMPROPR,KMPROPT,OUT,POP
"RTN","KMPRP2",7,0)
 N STRT,USER,X,Y
"RTN","KMPRP2",8,0)
 ;
"RTN","KMPRP2",9,0)
 S OUT=0
"RTN","KMPRP2",10,0)
 F  D  Q:OUT
"RTN","KMPRP2",11,0)
 .D HDR^KMPDUTL4(" Hourly Occurrence Distribution ") W !
"RTN","KMPRP2",12,0)
 .S KMPROPR=$$OPR
"RTN","KMPRP2",13,0)
 .I 'KMPROPR S OUT=1 Q
"RTN","KMPRP2",14,0)
 .;
"RTN","KMPRP2",15,0)
 .; select option, protocol or rpc entry
"RTN","KMPRP2",16,0)
 .S KMPROPT=$$OPRSEL(KMPROPR) Q:'KMPROPT
"RTN","KMPRP2",17,0)
 .;
"RTN","KMPRP2",18,0)
 .; determine date from file 8971.1
"RTN","KMPRP2",19,0)
 .S STRT=$O(^KMPR(8971.1,"B",0))
"RTN","KMPRP2",20,0)
 .S DIR(0)="DO^"_STRT_":"_DT
"RTN","KMPRP2",21,0)
 .S DIR("A")="Select DATE ",DIR("?")=" ",DIR("?",1)="Enter a date."
"RTN","KMPRP2",22,0)
 .W !
"RTN","KMPRP2",23,0)
 .D ^DIR
"RTN","KMPRP2",24,0)
 .I $D(DIRUT) Q
"RTN","KMPRP2",25,0)
 .S KMPRDATE=Y
"RTN","KMPRP2",26,0)
 .S $P(KMPRDATE,U,2)=$$FMTE^XLFDT(Y)
"RTN","KMPRP2",27,0)
 .;
"RTN","KMPRP2",28,0)
 .; select output device
"RTN","KMPRP2",29,0)
 .S %ZIS="Q",%ZIS("A")="Device: "
"RTN","KMPRP2",30,0)
 .W ! D ^%ZIS I POP W !,"No action taken." Q
"RTN","KMPRP2",31,0)
 .; if queued
"RTN","KMPRP2",32,0)
 .I $D(IO("Q")) D  Q
"RTN","KMPRP2",33,0)
 ..N ZTDESC,ZTRTN,ZTSAVE
"RTN","KMPRP2",34,0)
 ..K IO("Q")
"RTN","KMPRP2",35,0)
 ..S ZTDESC="RUM Hourly Occurrence Distribution"
"RTN","KMPRP2",36,0)
 ..S ZTRTN="EN1^KMPRP2"
"RTN","KMPRP2",37,0)
 ..S ZTSAVE("KMPRDATE")="",ZTSAVE("KMPROPR")="",ZTSAVE("KMPROPT")=""
"RTN","KMPRP2",38,0)
 ..D ^%ZTLOAD
"RTN","KMPRP2",39,0)
 ..W:$G(ZTSK) !,"Task #",ZTSK
"RTN","KMPRP2",40,0)
 ..D EXIT
"RTN","KMPRP2",41,0)
 .;
"RTN","KMPRP2",42,0)
 .D EN1
"RTN","KMPRP2",43,0)
 Q
"RTN","KMPRP2",44,0)
 ;
"RTN","KMPRP2",45,0)
EN1 ;-- entry point from taskman
"RTN","KMPRP2",46,0)
 ;
"RTN","KMPRP2",47,0)
 Q:'$G(KMPRDATE)
"RTN","KMPRP2",48,0)
 Q:'$G(KMPROPR)
"RTN","KMPRP2",49,0)
 Q:$G(KMPROPT)=""
"RTN","KMPRP2",50,0)
 ;
"RTN","KMPRP2",51,0)
 D DATA,PRINT,EXIT
"RTN","KMPRP2",52,0)
 ;
"RTN","KMPRP2",53,0)
 Q
"RTN","KMPRP2",54,0)
 ;
"RTN","KMPRP2",55,0)
DATA ;-- set data
"RTN","KMPRP2",56,0)
 Q:'$G(KMPRDATE)
"RTN","KMPRP2",57,0)
 Q:'$G(KMPROPR)
"RTN","KMPRP2",58,0)
 Q:$G(KMPROPT)=""
"RTN","KMPRP2",59,0)
 ;
"RTN","KMPRP2",60,0)
 N DATA,DOT,END,I,IEN,JOB,NODE,OCCUR,OPT,OPT1,OPTION,PT
"RTN","KMPRP2",61,0)
 K ^TMP($J)
"RTN","KMPRP2",62,0)
 ;
"RTN","KMPRP2",63,0)
 S CONT=1,DOT=0
"RTN","KMPRP2",64,0)
 W:$E(IOST,1,2)="C-" !?2,"Compiling data..."
"RTN","KMPRP2",65,0)
 ;
"RTN","KMPRP2",66,0)
 I +KMPRDATE=DT D TODAY,EXIT Q
"RTN","KMPRP2",67,0)
 ;
"RTN","KMPRP2",68,0)
 S IEN=0
"RTN","KMPRP2",69,0)
 F  S IEN=$O(^KMPR(8971.1,"B",+KMPRDATE,IEN)) Q:'IEN  D 
"RTN","KMPRP2",70,0)
 .S DOT=DOT+1
"RTN","KMPRP2",71,0)
 .W:'(DOT#100)&($E(IOST,1,2)="C-") "."
"RTN","KMPRP2",72,0)
 .;
"RTN","KMPRP2",73,0)
 .Q:'$D(^KMPR(8971.1,IEN,0))
"RTN","KMPRP2",74,0)
 .;
"RTN","KMPRP2",75,0)
 .S DATA(0)=^KMPR(8971.1,IEN,0),NODE=$P(DATA(0),U,3)
"RTN","KMPRP2",76,0)
 .;I DATA(0)["SCMC PCMM GUI WORKSTATION" W DATA(0),!
"RTN","KMPRP2",77,0)
 .S OPTION=$$OPRCHK(KMPROPR,KMPROPT,DATA(0))
"RTN","KMPRP2",78,0)
 .Q:OPTION=""
"RTN","KMPRP2",79,0)
 .;
"RTN","KMPRP2",80,0)
 .S DATA(1.1)=$G(^KMPR(8971.1,IEN,1.1)),DATA(1.2)=$G(^(1.2)),DATA(2.1)=$G(^(2.1)),DATA(2.2)=$G(^(2.2))
"RTN","KMPRP2",81,0)
 .;I DATA(0)["SCMC PCMM GUI WORKSTATION" W DATA(0),!
"RTN","KMPRP2",82,0)
 .;
"RTN","KMPRP2",83,0)
 .F I=1:1:24 D
"RTN","KMPRP2",84,0)
 ..S $P(^TMP($J,"HR",NODE),U,I)=$P($G(^TMP($J,"HR",NODE)),U,I)+$P(DATA(1.1),U,I)+$P(DATA(2.1),U,I)
"RTN","KMPRP2",85,0)
 ..S $P(^TMP($J,"HR",NODE,"USER"),U,I)=$P($G(^TMP($J,"HR",NODE,"USER")),U,I)+$P(DATA(1.2),U,I)+$P(DATA(2.2),U,I)
"RTN","KMPRP2",86,0)
 ;
"RTN","KMPRP2",87,0)
 Q
"RTN","KMPRP2",88,0)
 ;
"RTN","KMPRP2",89,0)
TODAY ;
"RTN","KMPRP2",90,0)
 ; 1 - option, 2 - protocol, 3 - rpc
"RTN","KMPRP2",91,0)
 I +KMPROPR=1 S OPT1=$P(KMPROPT,U,2)_"***"
"RTN","KMPRP2",92,0)
 I +KMPROPR=2 S OPT1="***"_$P(KMPROPT,U,2)
"RTN","KMPRP2",93,0)
 I +KMPROPR=3 S OPT1="`"_$P(KMPROPT,U,2)_"***"
"RTN","KMPRP2",94,0)
 ;
"RTN","KMPRP2",95,0)
 S NODE=""
"RTN","KMPRP2",96,0)
 F  S NODE=$O(^KMPTMP("KMPR","DLY",NODE)) Q:NODE=""  D
"RTN","KMPRP2",97,0)
 .S ^TMP($J,"HR",NODE)=""
"RTN","KMPRP2",98,0)
 .S OPT=""
"RTN","KMPRP2",99,0)
 .F  S OPT=$O(^KMPTMP("KMPR","DLY",NODE,+$H,OPT)) Q:OPT=""  D
"RTN","KMPRP2",100,0)
 ..S DOT=DOT+1
"RTN","KMPRP2",101,0)
 ..W:'(DOT#100)&($E(IOST,1,2)="C-") "."
"RTN","KMPRP2",102,0)
 ..;
"RTN","KMPRP2",103,0)
 ..I OPT[OPT1!((+KMPROPR=1)&(OPT[("!"_OPT1))) D
"RTN","KMPRP2",104,0)
 ...;W OPT,!
"RTN","KMPRP2",105,0)
 ...; if searching options do not count option***protocol
"RTN","KMPRP2",106,0)
 ...I (+KMPROPR=1)&($P(OPT,"***",2)'="") Q
"RTN","KMPRP2",107,0)
 ...;
"RTN","KMPRP2",108,0)
 ...S JOB=""
"RTN","KMPRP2",109,0)
 ...F  S JOB=$O(^KMPTMP("KMPR","DLY",NODE,+$H,OPT,JOB)) Q:JOB=""  D
"RTN","KMPRP2",110,0)
 ....S PT=""
"RTN","KMPRP2",111,0)
 ....F  S PT=$O(^KMPTMP("KMPR","DLY",NODE,+$H,OPT,JOB,PT)) Q:PT=""  S DATA=^(PT) D
"RTN","KMPRP2",112,0)
 .....F I=10:1:33 S OCCUR=$P(DATA,U,I) I +OCCUR D
"RTN","KMPRP2",113,0)
 ......S $P(^TMP($J,"HR",NODE),U,I-9)=$P(^TMP($J,"HR",NODE),U,I-9)+OCCUR
"RTN","KMPRP2",114,0)
 ......S $P(^TMP($J,"HR",NODE,"USER"),U,I-9)=$P($G(^TMP($J,"HR",NODE,"USER")),U,I-9)+1
"RTN","KMPRP2",115,0)
 ;
"RTN","KMPRP2",116,0)
 Q
"RTN","KMPRP2",117,0)
 ;
"RTN","KMPRP2",118,0)
EXIT ;
"RTN","KMPRP2",119,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","KMPRP2",120,0)
 D ^%ZISC
"RTN","KMPRP2",121,0)
 K ^TMP($J)
"RTN","KMPRP2",122,0)
 ;
"RTN","KMPRP2",123,0)
 Q
"RTN","KMPRP2",124,0)
 ;
"RTN","KMPRP2",125,0)
PRINT ;-- print data
"RTN","KMPRP2",126,0)
 ;
"RTN","KMPRP2",127,0)
 U IO
"RTN","KMPRP2",128,0)
 ;
"RTN","KMPRP2",129,0)
 N LINE,NODE,NOWFM,NOWHR,OCCUR,SITE,TIME,TOTOCC,TOTUSR,USER
"RTN","KMPRP2",130,0)
 ;
"RTN","KMPRP2",131,0)
 ; facility name
"RTN","KMPRP2",132,0)
 S SITE=$$SITE^VASITE
"RTN","KMPRP2",133,0)
 S SITE=$P(SITE,U,2)_" ("_$P(SITE,U,3)_")"
"RTN","KMPRP2",134,0)
 ;
"RTN","KMPRP2",135,0)
 S $P(LINE,"=",IOM)="="
"RTN","KMPRP2",136,0)
 ;
"RTN","KMPRP2",137,0)
 D HDR
"RTN","KMPRP2",138,0)
 ;
"RTN","KMPRP2",139,0)
 I '$D(^TMP($J,"HR")) D  Q
"RTN","KMPRP2",140,0)
 .W !,?28,"<<<No Data to Report>>>",!!
"RTN","KMPRP2",141,0)
 .D CONTINUE^KMPDUTL4("Press RETURN to continue",1,.CONT)
"RTN","KMPRP2",142,0)
 ;
"RTN","KMPRP2",143,0)
 I +KMPRDATE=DT D
"RTN","KMPRP2",144,0)
 .S NOWFM=$$HTFM^XLFDT($H)
"RTN","KMPRP2",145,0)
 .S NOWHR=+$E($P(NOWFM,".",2),1,2)
"RTN","KMPRP2",146,0)
 F TIME=0:1:23 D  Q:'CONT
"RTN","KMPRP2",147,0)
 .W ?2,$S(TIME<10:"0",1:""),TIME,?7
"RTN","KMPRP2",148,0)
 .I +KMPRDATE=DT I TIME>NOWHR D  Q
"RTN","KMPRP2",149,0)
 ..W ?10,"<<<No Data>>>",!
"RTN","KMPRP2",150,0)
 ..I $Y>(IOSL-3) D
"RTN","KMPRP2",151,0)
 ...D CONTINUE^KMPDUTL4("Press RETURN to continue or '^' to exit",1,.CONT)
"RTN","KMPRP2",152,0)
 ...D:CONT HDR
"RTN","KMPRP2",153,0)
 .S NODE="",(TOTOCC,TOTUSR)=0
"RTN","KMPRP2",154,0)
 .F  S NODE=$O(^TMP($J,"HR",NODE)) Q:NODE=""  D
"RTN","KMPRP2",155,0)
 ..S OCCUR=$P(^TMP($J,"HR",NODE),U,TIME+1),TOTOCC=TOTOCC+OCCUR
"RTN","KMPRP2",156,0)
 ..S USER=$P($G(^TMP($J,"HR",NODE,"USER")),U,TIME+1),TOTUSR=TOTUSR+USER
"RTN","KMPRP2",157,0)
 ..W $J($FN(OCCUR,",",0),9)
"RTN","KMPRP2",158,0)
 .W $J($FN(TOTOCC,",",0),9),$J($FN(TOTUSR,",",0),9)
"RTN","KMPRP2",159,0)
 .I +KMPRDATE=DT I TIME=NOWHR W "  <<<Partial Data>>>"
"RTN","KMPRP2",160,0)
 .W !
"RTN","KMPRP2",161,0)
 .I $Y>(IOSL-3) D
"RTN","KMPRP2",162,0)
 ..D CONTINUE^KMPDUTL4("Press RETURN to continue or '^' to exit",1,.CONT)
"RTN","KMPRP2",163,0)
 ..D:CONT HDR
"RTN","KMPRP2",164,0)
 ;
"RTN","KMPRP2",165,0)
 D:CONT CONTINUE^KMPDUTL4("Press RETURN to continue",1,.CONT)
"RTN","KMPRP2",166,0)
 Q
"RTN","KMPRP2",167,0)
 ;
"RTN","KMPRP2",168,0)
HDR ;
"RTN","KMPRP2",169,0)
 N NODE,TITLE,X
"RTN","KMPRP2",170,0)
 S TITLE="Hourly Occurrence Distribution for "_$P(KMPROPT,U,2)
"RTN","KMPRP2",171,0)
 W:$Y @IOF W !
"RTN","KMPRP2",172,0)
 W ?(80-$L($G(SITE))\2),$G(SITE),!
"RTN","KMPRP2",173,0)
 W ?(80-$L(TITLE)\2),TITLE,!
"RTN","KMPRP2",174,0)
 W ?31,"For "_$P($G(KMPRDATE),U,2),!!
"RTN","KMPRP2",175,0)
 W LINE,!," Hour",?10
"RTN","KMPRP2",176,0)
 S NODE=""
"RTN","KMPRP2",177,0)
 F  S NODE=$O(^TMP($J,"HR",NODE)) Q:NODE=""  D
"RTN","KMPRP2",178,0)
 .W "  ",$S($E(NODE,1,3)=+NODE:" "_$E(NODE,$L(NODE)-2,$L(NODE)),1:$E(NODE,$L(NODE)-3,$L(NODE))),"   "
"RTN","KMPRP2",179,0)
 S X=$X
"RTN","KMPRP2",180,0)
 W " Total    Total",!
"RTN","KMPRP2",181,0)
 W ?X,"  Occ      User",!,LINE,!
"RTN","KMPRP2",182,0)
 ;
"RTN","KMPRP2",183,0)
 Q
"RTN","KMPRP2",184,0)
 ;
"RTN","KMPRP2",185,0)
OPR() ;-- extrinsic function - select option, protocol or rpc
"RTN","KMPRP2",186,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRP2",187,0)
 ; Return: 1 - Option
"RTN","KMPRP2",188,0)
 ;         2 - Protocol
"RTN","KMPRP2",189,0)
 ;         3 - RPC
"RTN","KMPRP2",190,0)
 ;        "" - No selection made
"RTN","KMPRP2",191,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRP2",192,0)
 N DIR,X,Y
"RTN","KMPRP2",193,0)
 ;
"RTN","KMPRP2",194,0)
 S DIR(0)="SO^1:Option/Task;2:Protocol;3:RPC"
"RTN","KMPRP2",195,0)
 D ^DIR
"RTN","KMPRP2",196,0)
 ;
"RTN","KMPRP2",197,0)
 Q $S(Y:Y_"^"_$G(Y(0)),1:"")
"RTN","KMPRP2",198,0)
 ;
"RTN","KMPRP2",199,0)
OPRCHK(OPR,OPT,DATA) ;-- extrinsic function
"RTN","KMPRP2",200,0)
 ;- check to see if option, protocol or rpc matches
"RTN","KMPRP2",201,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRP2",202,0)
 ; OPR.... Results from $$OPR above
"RTN","KMPRP2",203,0)
 ; OPT.... Option, protocol or rpc name to be matched
"RTN","KMPRP2",204,0)
 ; DATA... Zero node of file 8971.1 (RESOURCE USAGE MONITOR)
"RTN","KMPRP2",205,0)
 ;
"RTN","KMPRP2",206,0)
 ; Return: OptionName - match
"RTN","KMPRP2",207,0)
 ;                 "" - no match
"RTN","KMPRP2",208,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRP2",209,0)
 Q:$G(OPR)="" ""
"RTN","KMPRP2",210,0)
 Q:'OPR!($P(OPR,U,2)="") ""
"RTN","KMPRP2",211,0)
 Q:'$D(DATA) ""
"RTN","KMPRP2",212,0)
 Q:(+OPR)<1!((+OPR)>3) ""
"RTN","KMPRP2",213,0)
 ;
"RTN","KMPRP2",214,0)
 N OPTION
"RTN","KMPRP2",215,0)
 ;
"RTN","KMPRP2",216,0)
 ; option - piece 4, protocol - piece 5, rpc - piece 7
"RTN","KMPRP2",217,0)
 S OPTION=$S((+OPR=1):$P(DATA,U,4),(+OPR=2):$P(DATA,U,5),1:$P(DATA,U,7))
"RTN","KMPRP2",218,0)
 ;
"RTN","KMPRP2",219,0)
 Q $S(OPTION="":"",OPTION'=$P(OPT,U,2):"",(+OPR=1)&($P(DATA,U,5)'=""):"",1:OPTION)
"RTN","KMPRP2",220,0)
 ;
"RTN","KMPRP2",221,0)
OPRSEL(OPR) ;-- extrinsic function - select entry
"RTN","KMPRP2",222,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRP2",223,0)
 ; OPT.... Results from $$OPR above
"RTN","KMPRP2",224,0)
 ;
"RTN","KMPRP2",225,0)
 ; Return: IEN^Name - this will be from the Option file, Protocol file,
"RTN","KMPRP2",226,0)
 ;                    or RPC file, depending on the value of OPR
"RTN","KMPRP2",227,0)
 ;         "" - no selection made
"RTN","KMPRP2",228,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRP2",229,0)
 Q:'$G(OPR) ""
"RTN","KMPRP2",230,0)
 Q:OPR<1!(OPR>3) ""
"RTN","KMPRP2",231,0)
 ;
"RTN","KMPRP2",232,0)
 N DIC,X,Y
"RTN","KMPRP2",233,0)
 ;
"RTN","KMPRP2",234,0)
 W !
"RTN","KMPRP2",235,0)
 ; 1 - option, 2 - protocol, 3 - rpc
"RTN","KMPRP2",236,0)
 S DIC=$S((+OPR)=1:19,(+OPR)=2:101,1:8994)
"RTN","KMPRP2",237,0)
 S DIC(0)="AEMQZ",DIC("A")="Select "_$P(OPR,U,2)_": "
"RTN","KMPRP2",238,0)
 D ^DIC
"RTN","KMPRP2",239,0)
 ;
"RTN","KMPRP2",240,0)
 Q $S(Y<0:"",1:+Y_"^"_Y(0,0))
"RTN","KMPRPG01")
0^15^B5383545
"RTN","KMPRPG01",1,0)
KMPRPG01 ;OAK/RAK - RUM Data for All Nodes (Graph) ;11/19/04  08:58
"RTN","KMPRPG01",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**1**;May 28, 2003
"RTN","KMPRPG01",3,0)
 ;
"RTN","KMPRPG01",4,0)
EN ;-- entry point.
"RTN","KMPRPG01",5,0)
 ;
"RTN","KMPRPG01",6,0)
 N DATES,DIR,ELEMENT,I,LHTIME,OPTIONS,OUT,TMP,X,Y
"RTN","KMPRPG01",7,0)
 ;
"RTN","KMPRPG01",8,0)
 ; temporary global storage for stats.
"RTN","KMPRPG01",9,0)
 S TMP=$NA(^TMP("KMPR HR STATS",$J))
"RTN","KMPRPG01",10,0)
 S OUT=0
"RTN","KMPRPG01",11,0)
 F  D  Q:OUT
"RTN","KMPRPG01",12,0)
 .D HDR^KMPDUTL4(" Data for All Nodes (Graph) ") W !!
"RTN","KMPRPG01",13,0)
 .D GRPHMSG^KMPRUTL
"RTN","KMPRPG01",14,0)
 .; select element for display.
"RTN","KMPRPG01",15,0)
 .D ELEMENT^KMPRUTL(.Y) I 'Y S OUT=1 Q
"RTN","KMPRPG01",16,0)
 .S ELEMENT=Y_"^"_Y(0)
"RTN","KMPRPG01",17,0)
 .; get date range.
"RTN","KMPRPG01",18,0)
 .D RUMDATES^KMPRUTL(.DATES) Q:'DATES
"RTN","KMPRPG01",19,0)
 .; determine number of nodes.
"RTN","KMPRPG01",20,0)
 .S I=0,X=""
"RTN","KMPRPG01",21,0)
 .F  S X=$O(^KMPR(8971.1,"ANODE",X)) Q:X=""  S I=I+1
"RTN","KMPRPG01",22,0)
 .S OPTIONS="G" S:I<8 OPTIONS=OPTIONS_"D"
"RTN","KMPRPG01",23,0)
 .K @TMP
"RTN","KMPRPG01",24,0)
 .W !!?3,"compiling data for: "
"RTN","KMPRPG01",25,0)
 .; get data - display graph - cleanup.
"RTN","KMPRPG01",26,0)
 .D DATA,GRAPH,EXIT
"RTN","KMPRPG01",27,0)
 .K @TMP
"RTN","KMPRPG01",28,0)
 ;
"RTN","KMPRPG01",29,0)
 Q
"RTN","KMPRPG01",30,0)
 ;
"RTN","KMPRPG01",31,0)
DATA ;-- compile rum stats per node for selected element.
"RTN","KMPRPG01",32,0)
 Q:$G(TMP)=""
"RTN","KMPRPG01",33,0)
 Q:'$G(ELEMENT)
"RTN","KMPRPG01",34,0)
 Q:'$G(DATES)
"RTN","KMPRPG01",35,0)
 ;
"RTN","KMPRPG01",36,0)
 N DAYS,DOTS,I,J,KMPRAR,NODES
"RTN","KMPRPG01",37,0)
 ;
"RTN","KMPRPG01",38,0)
 ; determine if dots should be printed to screen while gathering data.
"RTN","KMPRPG01",39,0)
 S DOTS=$S($E(IOST,1,2)="C-":0,1:1)
"RTN","KMPRPG01",40,0)
 ; set nodes into NODES() array.
"RTN","KMPRPG01",41,0)
 D NODEARRY^KMPRUTL("NODES") Q:'$D(NODES)
"RTN","KMPRPG01",42,0)
 ; get RUM data.
"RTN","KMPRPG01",43,0)
 D ELEMDATA^KMPRUTL2(+ELEMENT,$P(DATES,U),$P(DATES,U,2),.NODES,"KMPRAR",DOTS)
"RTN","KMPRPG01",44,0)
 Q:'$D(KMPRAR)
"RTN","KMPRPG01",45,0)
 ;
"RTN","KMPRPG01",46,0)
 ; format data into TMP array.
"RTN","KMPRPG01",47,0)
 S I="",DAYS=$$FMDIFF^XLFDT($P(DATES,U,2),$P(DATES,U))+1
"RTN","KMPRPG01",48,0)
 F  S I=$O(KMPRAR(I)) Q:I=""  S J=0 D 
"RTN","KMPRPG01",49,0)
 .F  S J=$O(KMPRAR(I,J)) Q:J=""  D 
"RTN","KMPRPG01",50,0)
 ..S $P(@TMP@(I,0),U)=I
"RTN","KMPRPG01",51,0)
 ..S $P(@TMP@(I,0),U,2)=$P(@TMP@(I,0),U,2)+KMPRAR(I,J)
"RTN","KMPRPG01",52,0)
 .S $P(@TMP@(I,0),U,2)=$FN($P(@TMP@(I,0),U,2)/DAYS,"",2)
"RTN","KMPRPG01",53,0)
 ;
"RTN","KMPRPG01",54,0)
 Q
"RTN","KMPRPG01",55,0)
 ;
"RTN","KMPRPG01",56,0)
GRAPH ;-- display data in graph.
"RTN","KMPRPG01",57,0)
 Q:$G(TMP)=""
"RTN","KMPRPG01",58,0)
 Q:'$G(ELEMENT)
"RTN","KMPRPG01",59,0)
 ;
"RTN","KMPRPG01",60,0)
 N TITLES
"RTN","KMPRPG01",61,0)
 ; graph titles.
"RTN","KMPRPG01",62,0)
 S $P(TITLES,U)="RUM Data for All Nodes"
"RTN","KMPRPG01",63,0)
 S $P(TITLES,U,2)="From "_$P($G(DATES),U,3)_" to "_$P($G(DATES),U,4)
"RTN","KMPRPG01",64,0)
 S $P(TITLES,U,3)=$P(ELEMENT,U,2)_"/per "_$S(+ELEMENT=1!(+ELEMENT=7):"occurrence",1:"sec")
"RTN","KMPRPG01",65,0)
 S $P(TITLES,U,4)="Node"
"RTN","KMPRPG01",66,0)
 ; call graphics routine.
"RTN","KMPRPG01",67,0)
 D EN^KMPDUG(TMP,TITLES,$G(OPTIONS))
"RTN","KMPRPG01",68,0)
 Q
"RTN","KMPRPG01",69,0)
 ;
"RTN","KMPRPG01",70,0)
EXIT ;
"RTN","KMPRPG01",71,0)
 D ^%ZISC
"RTN","KMPRPG01",72,0)
 Q
"RTN","KMPRPG02")
0^16^B5448671
"RTN","KMPRPG02",1,0)
KMPRPG02 ;OAK/RAK - RUM Data by Date for Single Node ;11/19/04  10:32
"RTN","KMPRPG02",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**1**;May 28, 2003
"RTN","KMPRPG02",3,0)
 ;
"RTN","KMPRPG02",4,0)
EN ;-- entry point.
"RTN","KMPRPG02",5,0)
 ;
"RTN","KMPRPG02",6,0)
 N DATES,DIR,ELEMENT,I,IORVOFF,IORVON,LHTIME,NODE,OPTIONS,OUT,TMP,X,Y
"RTN","KMPRPG02",7,0)
 ;
"RTN","KMPRPG02",8,0)
 ; temporary global storage for stats.
"RTN","KMPRPG02",9,0)
 S TMP=$NA(^TMP("KMPR HR STATS",$J))
"RTN","KMPRPG02",10,0)
 S OUT=0
"RTN","KMPRPG02",11,0)
 F  D  Q:OUT
"RTN","KMPRPG02",12,0)
 .D HDR^KMPDUTL4(" RUM Data by Date for Single Node ") W !!
"RTN","KMPRPG02",13,0)
 .D GRPHMSG^KMPRUTL
"RTN","KMPRPG02",14,0)
 .; select element for display.
"RTN","KMPRPG02",15,0)
 .D ELEMENT^KMPRUTL(.Y) I 'Y S OUT=1 Q
"RTN","KMPRPG02",16,0)
 .S ELEMENT=Y_"^"_Y(0)
"RTN","KMPRPG02",17,0)
 .; get date range.
"RTN","KMPRPG02",18,0)
 .D RUMDATES^KMPRUTL(.DATES) Q:'DATES
"RTN","KMPRPG02",19,0)
 .; set up set-of-codes with nodes.
"RTN","KMPRPG02",20,0)
 .K DIR S DIR(0)="SO^",DIR("A")="Select Node"
"RTN","KMPRPG02",21,0)
 .S I=0,X=""
"RTN","KMPRPG02",22,0)
 .F  S X=$O(^KMPR(8971.1,"ANODE",X)) Q:X=""  D 
"RTN","KMPRPG02",23,0)
 ..S I=I+1,DIR(0)=DIR(0)_I_":"_X_";"
"RTN","KMPRPG02",24,0)
 .D ^DIR I 'Y S OUT=1 Q
"RTN","KMPRPG02",25,0)
 .K NODE S NODE(Y(0))=""
"RTN","KMPRPG02",26,0)
 .S OPTIONS="DGV"
"RTN","KMPRPG02",27,0)
 .K @TMP
"RTN","KMPRPG02",28,0)
 .W !!?3,"compiling data for: "
"RTN","KMPRPG02",29,0)
 .; get data - display graph - cleanup.
"RTN","KMPRPG02",30,0)
 .D DATA,GRAPH,EXIT
"RTN","KMPRPG02",31,0)
 .K @TMP
"RTN","KMPRPG02",32,0)
 ;
"RTN","KMPRPG02",33,0)
 Q
"RTN","KMPRPG02",34,0)
 ;
"RTN","KMPRPG02",35,0)
DATA ;-- compile rum stats per node for selected element.
"RTN","KMPRPG02",36,0)
 Q:$G(TMP)=""
"RTN","KMPRPG02",37,0)
 Q:'$G(ELEMENT)
"RTN","KMPRPG02",38,0)
 Q:'$G(DATES)
"RTN","KMPRPG02",39,0)
 Q:'$D(NODE)=""
"RTN","KMPRPG02",40,0)
 ;
"RTN","KMPRPG02",41,0)
 N DOTS,I,J,KMPRAR
"RTN","KMPRPG02",42,0)
 ;
"RTN","KMPRPG02",43,0)
 ; determine if dots should be printed to screen while gathering data.
"RTN","KMPRPG02",44,0)
 S DOTS=$S($E(IOST,1,2)="C-":0,1:1)
"RTN","KMPRPG02",45,0)
 ; get RUM data.
"RTN","KMPRPG02",46,0)
 D ELEMDATA^KMPRUTL2(+ELEMENT,$P(DATES,U),$P(DATES,U,2),.NODE,"KMPRAR",DOTS)
"RTN","KMPRPG02",47,0)
 Q:'$D(KMPRAR)
"RTN","KMPRPG02",48,0)
 ;
"RTN","KMPRPG02",49,0)
 ; format data into TMP array.
"RTN","KMPRPG02",50,0)
 S I=""
"RTN","KMPRPG02",51,0)
 F  S I=$O(KMPRAR(I)) Q:I=""  S J=0 D 
"RTN","KMPRPG02",52,0)
 .F  S J=$O(KMPRAR(I,J)) Q:J=""  D 
"RTN","KMPRPG02",53,0)
 ..S $P(@TMP@(J,0),U)=$$FMTE^DILIBF(J,2)
"RTN","KMPRPG02",54,0)
 ..S $P(@TMP@(J,0),U,2)=KMPRAR(I,J)
"RTN","KMPRPG02",55,0)
 ;
"RTN","KMPRPG02",56,0)
 Q
"RTN","KMPRPG02",57,0)
 ;
"RTN","KMPRPG02",58,0)
GRAPH ;-- display data in graph.
"RTN","KMPRPG02",59,0)
 Q:$G(TMP)=""
"RTN","KMPRPG02",60,0)
 Q:'$G(ELEMENT)
"RTN","KMPRPG02",61,0)
 ;
"RTN","KMPRPG02",62,0)
 N NODE1,TITLES
"RTN","KMPRPG02",63,0)
 S NODE1=$O(NODE(""))
"RTN","KMPRPG02",64,0)
 ; graph titles.
"RTN","KMPRPG02",65,0)
 S $P(TITLES,U)="RUM Data by Date for Node '"_NODE1_"'"
"RTN","KMPRPG02",66,0)
 S $P(TITLES,U,2)="From "_$P($G(DATES),U,3)_" to "_$P($G(DATES),U,4)
"RTN","KMPRPG02",67,0)
 S $P(TITLES,U,3)=$P(ELEMENT,U,2)_"/per "_$S(+ELEMENT=1!(+ELEMENT=7):"occurrence",1:"sec")
"RTN","KMPRPG02",68,0)
 S $P(TITLES,U,4)="Date"
"RTN","KMPRPG02",69,0)
 ; call graphics routine.
"RTN","KMPRPG02",70,0)
 D EN^KMPDUG(TMP,TITLES,$G(OPTIONS))
"RTN","KMPRPG02",71,0)
 Q
"RTN","KMPRPG02",72,0)
 ;
"RTN","KMPRPG02",73,0)
EXIT ;
"RTN","KMPRPG02",74,0)
 D ^%ZISC
"RTN","KMPRPG02",75,0)
 Q
"RTN","KMPRPN03")
0^19^B12967693
"RTN","KMPRPN03",1,0)
KMPRPN03 ;OAK/RAK - Print Package RUM Stats ;11/19/04  09:01
"RTN","KMPRPN03",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**1**;May 28, 2003
"RTN","KMPRPN03",3,0)
EN ;-- entry point.
"RTN","KMPRPN03",4,0)
 ;
"RTN","KMPRPN03",5,0)
 N %ZIS,CONT,DIR,KMPRDATE,KMPRNAM,MESSAGE,POP
"RTN","KMPRPN03",6,0)
 N X,Y,ZTDESC,ZTRTN,ZTSAVE,ZTSK
"RTN","KMPRPN03",7,0)
 ;
"RTN","KMPRPN03",8,0)
 D HDR^KMPDUTL4(" Package Resource Usage ")
"RTN","KMPRPN03",9,0)
 W !,?2,"This option will display the package Resource Usage Monitor statistics.",!
"RTN","KMPRPN03",10,0)
 W ?2,"The printout summarizes the statistics of the options, protocols and",!
"RTN","KMPRPN03",11,0)
 W ?2,"tasks for a selected namespace as percentages.",!!
"RTN","KMPRPN03",12,0)
 ;
"RTN","KMPRPN03",13,0)
 K DIR S DIR(0)="FO^1:999:0^K:X="" "" X"
"RTN","KMPRPN03",14,0)
 S DIR("A")="Select Package Namespace (case sensitive)"
"RTN","KMPRPN03",15,0)
 D ^DIR Q:Y=""!(Y="^")
"RTN","KMPRPN03",16,0)
 S KMPRNAM=Y
"RTN","KMPRPN03",17,0)
 ;
"RTN","KMPRPN03",18,0)
 ; determine start date from file 8970.1
"RTN","KMPRPN03",19,0)
 D RUMDATES^KMPRUTL(.KMPRDATE)
"RTN","KMPRPN03",20,0)
 Q:'KMPRDATE
"RTN","KMPRPN03",21,0)
 ;
"RTN","KMPRPN03",22,0)
 ; select output device.
"RTN","KMPRPN03",23,0)
 S %ZIS="Q",%ZIS("A")="Device: ",%ZIS("B")="HOME"
"RTN","KMPRPN03",24,0)
 W ! D ^%ZIS I POP W !,"No action taken." Q
"RTN","KMPRPN03",25,0)
 ; if queued.
"RTN","KMPRPN03",26,0)
 I $D(IO("Q")) K IO("Q") D  Q
"RTN","KMPRPN03",27,0)
 .S ZTDESC="RUM Package Resource Usage for '"_KMPRNAM_"'."
"RTN","KMPRPN03",28,0)
 .S ZTRTN="EN1^KMPRPN03"
"RTN","KMPRPN03",29,0)
 .S ZTSAVE("KMPRDATE")="",ZTSAVE("KMPRNAM")=""
"RTN","KMPRPN03",30,0)
 .D ^%ZTLOAD W:$G(ZTSK) !,"Task #",ZTSK
"RTN","KMPRPN03",31,0)
 .D EXIT
"RTN","KMPRPN03",32,0)
 ;
"RTN","KMPRPN03",33,0)
 ; if output to terminal display message.
"RTN","KMPRPN03",34,0)
 W:$E(IOST,1,2)="C-" !?3,"compiling data for: "
"RTN","KMPRPN03",35,0)
 ;
"RTN","KMPRPN03",36,0)
EN1 ;-- entry point from taskman.
"RTN","KMPRPN03",37,0)
 ;
"RTN","KMPRPN03",38,0)
 Q:'$G(KMPRDATE)
"RTN","KMPRPN03",39,0)
 Q:$G(KMPRNAM)=""
"RTN","KMPRPN03",40,0)
 ;
"RTN","KMPRPN03",41,0)
 N DOTS,ELEMENT,KMPRARRY
"RTN","KMPRPN03",42,0)
 ;
"RTN","KMPRPN03",43,0)
 S DOTS=$S($E(IOST,1,2)="C-":0,1:1)
"RTN","KMPRPN03",44,0)
 D ELEARRY^KMPRUTL("ELEMENT") Q:'$D(ELEMENT)
"RTN","KMPRPN03",45,0)
 S KMPRARRY=$NA(^TMP("KMPR PKG %",$J))
"RTN","KMPRPN03",46,0)
 K @KMPRARRY
"RTN","KMPRPN03",47,0)
 D PKGDATA^KMPRUTL2(KMPRNAM,$P(KMPRDATE,U),$P(KMPRDATE,U,2),KMPRARRY,DOTS)
"RTN","KMPRPN03",48,0)
 D PRINT,EXIT
"RTN","KMPRPN03",49,0)
 K @KMPRARRY
"RTN","KMPRPN03",50,0)
 ;
"RTN","KMPRPN03",51,0)
 Q
"RTN","KMPRPN03",52,0)
 ;
"RTN","KMPRPN03",53,0)
EXIT ;
"RTN","KMPRPN03",54,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","KMPRPN03",55,0)
 D ^%ZISC
"RTN","KMPRPN03",56,0)
 K KMPUDATE,KMPUNAM
"RTN","KMPRPN03",57,0)
 ;
"RTN","KMPRPN03",58,0)
 Q
"RTN","KMPRPN03",59,0)
 ;
"RTN","KMPRPN03",60,0)
PRINT ;-- print data from KMPRARRY.
"RTN","KMPRPN03",61,0)
 ;
"RTN","KMPRPN03",62,0)
 Q:'$D(ELEMENT)
"RTN","KMPRPN03",63,0)
 Q:$G(KMPRARRY)=""
"RTN","KMPRPN03",64,0)
 ;
"RTN","KMPRPN03",65,0)
 U IO
"RTN","KMPRPN03",66,0)
 ;
"RTN","KMPRPN03",67,0)
 I '$D(@KMPRARRY) D HDR W !,"<<<No Data to Report>>>" Q
"RTN","KMPRPN03",68,0)
 ;
"RTN","KMPRPN03",69,0)
 N DATA,I,NODE,PIECE,SITE,TOTALS,TYP
"RTN","KMPRPN03",70,0)
 ;
"RTN","KMPRPN03",71,0)
 ; facility name.
"RTN","KMPRPN03",72,0)
 S SITE=$P($$SITE^VASITE,U,2)
"RTN","KMPRPN03",73,0)
 S NODE="",CONT=1
"RTN","KMPRPN03",74,0)
 F  S NODE=$O(@KMPRARRY@(NODE)) Q:NODE=""  D  Q:'CONT
"RTN","KMPRPN03",75,0)
 .D HDR S I=0
"RTN","KMPRPN03",76,0)
 .F  S I=$O(ELEMENT(I)) Q:'I  D  Q:'CONT
"RTN","KMPRPN03",77,0)
 ..W !,$P(ELEMENT(I),U) S PIECE=$P(ELEMENT(I),U,2)
"RTN","KMPRPN03",78,0)
 ..S TOTALS=$P($G(@KMPRARRY@(NODE,"TOTALS")),U,PIECE)
"RTN","KMPRPN03",79,0)
 ..F TYP=KMPRNAM,"PRTCL","RPC","HL7","TASK","OTH" D 
"RTN","KMPRPN03",80,0)
 ...S DATA=$P($G(@KMPRARRY@(NODE,TYP)),U,PIECE)
"RTN","KMPRPN03",81,0)
 ...W ?($S(TYP=KMPRNAM:20,TYP="PRTCL":30,TYP="RPC":40,TYP="HL7":50,TYP="TASK":60,1:70))
"RTN","KMPRPN03",82,0)
 ...W $J($S('TOTALS:"n/a",1:$FN(DATA/TOTALS*100,"",1)),6)
"RTN","KMPRPN03",83,0)
 .;
"RTN","KMPRPN03",84,0)
 .; back to NODE level.
"RTN","KMPRPN03",85,0)
 .; if no more entries send message  else use default.
"RTN","KMPRPN03",86,0)
 .S MESSAGE=""
"RTN","KMPRPN03",87,0)
 .S:$O(@KMPRARRY@(NODE))="" MESSAGE="Press RETURN to continue"
"RTN","KMPRPN03",88,0)
 .D CONTINUE^KMPDUTL4(MESSAGE,2,.CONT)
"RTN","KMPRPN03",89,0)
 ;
"RTN","KMPRPN03",90,0)
 Q
"RTN","KMPRPN03",91,0)
 ;
"RTN","KMPRPN03",92,0)
HDR ;
"RTN","KMPRPN03",93,0)
 W:$Y @IOF
"RTN","KMPRPN03",94,0)
 W !?29,"Package Resource Usage"
"RTN","KMPRPN03",95,0)
 W !?(80-$L($G(SITE))\2),$G(SITE)
"RTN","KMPRPN03",96,0)
 W !?17,"Node ",$G(NODE)," from ",$P(KMPRDATE,U,3)," to ",$P(KMPRDATE,U,4)
"RTN","KMPRPN03",97,0)
 W !?(80-($L(KMPRNAM)+12)\2),"'",KMPRNAM,"' Namespace"
"RTN","KMPRPN03",98,0)
 W !
"RTN","KMPRPN03",99,0)
 W !?20,"   %   ",?30,"    %    ",?40,"    %    ",?50,"    %    ",?60,"   %  ",?70,"All Other"
"RTN","KMPRPN03",100,0)
 W !?20,"Options",?30,"Protocols",?40,"   RPC",?50,"   HL7",?60," Tasks",?70,"Packages"
"RTN","KMPRPN03",101,0)
 W !
"RTN","KMPRPN03",102,0)
 ;
"RTN","KMPRPN03",103,0)
 Q
"RTN","KMPRPOST")
0^9^B1139124
"RTN","KMPRPOST",1,0)
KMPRPOST ;OAK/RAK - RUM Post Install Routine ;11/19/04  09:02
"RTN","KMPRPOST",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**1**;May 28, 2003
"RTN","KMPRPOST",3,0)
 ;
"RTN","KMPRPOST",4,0)
EN ;-- entry point for post-install
"RTN","KMPRPOST",5,0)
 ;
"RTN","KMPRPOST",6,0)
 D BMES^XPDUTL(" Begin Post-Install...")
"RTN","KMPRPOST",7,0)
 D KILL
"RTN","KMPRPOST",8,0)
 D FIELD
"RTN","KMPRPOST",9,0)
 D MES^XPDUTL(" Post-Install complete!")
"RTN","KMPRPOST",10,0)
 ;
"RTN","KMPRPOST",11,0)
 Q
"RTN","KMPRPOST",12,0)
 ;
"RTN","KMPRPOST",13,0)
FIELD ;-- update field #2.11 - RUM WEEKS TO KEEP DATA
"RTN","KMPRPOST",14,0)
 ;
"RTN","KMPRPOST",15,0)
 N ERROR,FDA,IEN
"RTN","KMPRPOST",16,0)
 S IEN=$O(^KMPD(8973,0)) Q:'IEN
"RTN","KMPRPOST",17,0)
 ; quit if field #2.11 RUM WEEKS TO KEEP DATA contains data
"RTN","KMPRPOST",18,0)
 Q:$P($G(^KMPD(8973,IEN,2)),U,11)
"RTN","KMPRPOST",19,0)
 ; update field
"RTN","KMPRPOST",20,0)
 D MES^XPDUTL(" Updating field #2.11 - RUM WEEKS TO KEEP DATA...")
"RTN","KMPRPOST",21,0)
 S FDA($J,8973,IEN_",",2.11)=2
"RTN","KMPRPOST",22,0)
 D FILE^DIE("","FDA($J)","ERROR")
"RTN","KMPRPOST",23,0)
 ;
"RTN","KMPRPOST",24,0)
 Q
"RTN","KMPRPOST",25,0)
 ;
"RTN","KMPRPOST",26,0)
KILL ;-- kill off no longer used subscript
"RTN","KMPRPOST",27,0)
 ;
"RTN","KMPRPOST",28,0)
 D MES^XPDUTL(" Removing data from  ^KMPTMP(""KMPR"",""BACKGROUND"")...")
"RTN","KMPRPOST",29,0)
 K ^KMPTMP("KMPR","BACKGROUND")
"RTN","KMPRPOST",30,0)
 ;
"RTN","KMPRPOST",31,0)
 Q
"RTN","KMPRSS")
0^2^B5472013
"RTN","KMPRSS",1,0)
KMPRSS ;OAK/RAK - Resource Usage Monitor Status ;11/19/04  10:32
"RTN","KMPRSS",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**1**;May 28, 2003
"RTN","KMPRSS",3,0)
 ;
"RTN","KMPRSS",4,0)
STAT ;--display rum environment
"RTN","KMPRSS",5,0)
 ;
"RTN","KMPRSS",6,0)
 D EN^KMPRSSB
"RTN","KMPRSS",7,0)
 ;
"RTN","KMPRSS",8,0)
 Q
"RTN","KMPRSS",9,0)
 ;
"RTN","KMPRSS",10,0)
START ; Start Resource Usage Monitor collection
"RTN","KMPRSS",11,0)
 N CHECK,DA,DIE,DIR,DR,X,Y
"RTN","KMPRSS",12,0)
 ; check environment
"RTN","KMPRSS",13,0)
 D ENVCHECK^KMPRUTL1(.CHECK,1)
"RTN","KMPRSS",14,0)
 ; if RUM does not support this operating system then quit.
"RTN","KMPRSS",15,0)
 I (+CHECK)=100 W !! D ENVOUTPT^KMPRUTL1(CHECK,1,1) H 1 Q
"RTN","KMPRSS",16,0)
 I +$G(^%ZTSCH("LOGRSRC")) W !!,?10,"The Resource Usage Monitor is already running.",! H 1 Q
"RTN","KMPRSS",17,0)
 W ! K DIR S DIR(0)="Y",DIR("B")="YES"
"RTN","KMPRSS",18,0)
 S DIR("?")="Answer YES to start collecting Resource Usage Monitor data"
"RTN","KMPRSS",19,0)
 S DIR("A")="Do you want to start Resource Usage Monitor collection"
"RTN","KMPRSS",20,0)
 D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","KMPRSS",21,0)
 I Y D
"RTN","KMPRSS",22,0)
 .S DIE=8989.3,DA=1,DR="300///YES" D ^DIE
"RTN","KMPRSS",23,0)
 .W !!,?10,"Resource Usage Monitor collection is started.",!
"RTN","KMPRSS",24,0)
 .D ENVCHECK^KMPRUTL1(.CHECK,1)
"RTN","KMPRSS",25,0)
 .; if background driver not scheduled to run then start it up
"RTN","KMPRSS",26,0)
 .D:(+CHECK=200) QUEBKG^KMPRUTL1
"RTN","KMPRSS",27,0)
 E  W !!,?10,"Resource Usage Monitor collection is NOT started.",!
"RTN","KMPRSS",28,0)
 H 1
"RTN","KMPRSS",29,0)
 Q
"RTN","KMPRSS",30,0)
 ;
"RTN","KMPRSS",31,0)
STOP ; Stop Resource Usage Monitor collection
"RTN","KMPRSS",32,0)
 N DA,DIE,DIR,DR,DTOUT,DUOUT,X,Y
"RTN","KMPRSS",33,0)
 I '+$G(^%ZTSCH("LOGRSRC")) W !!,?10,"The Resource Usage Monitor is already stopped.",! H 1 Q
"RTN","KMPRSS",34,0)
 W ! K DIR S DIR(0)="Y",DIR("B")="YES"
"RTN","KMPRSS",35,0)
 S DIR("?")="Answer YES to stop collecting Resource Usage Monitor data"
"RTN","KMPRSS",36,0)
 S DIR("A")="Do you want to stop Resource Usage Monitor collection"
"RTN","KMPRSS",37,0)
 D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","KMPRSS",38,0)
 I Y D
"RTN","KMPRSS",39,0)
 .S DIE=8989.3,DA=1,DR="300///NO" D ^DIE
"RTN","KMPRSS",40,0)
 .W !!,?10,"Resource Usage Monitor collection is stopped.",!
"RTN","KMPRSS",41,0)
 E  W !!,?10,"Resource Usage Monitor collection is NOT stopped.",!
"RTN","KMPRSS",42,0)
 H 1
"RTN","KMPRSS",43,0)
 Q
"RTN","KMPRSSA")
0^3^B52658391
"RTN","KMPRSSA",1,0)
KMPRSSA ;OAK/RAK - Resource Usage Monitor Status ;11/19/04  10:32
"RTN","KMPRSSA",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**1**;May 28, 2003
"RTN","KMPRSSA",3,0)
 ;
"RTN","KMPRSSA",4,0)
FORMAT(KMPRLN) ;-format text for dislay
"RTN","KMPRSSA",5,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPRSSA",6,0)
 ; KMPRLN.... return number of lines - called by reference
"RTN","KMPRSSA",7,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPRSSA",8,0)
 ;
"RTN","KMPRSSA",9,0)
 N CHECK,LN,VERSION S LN=0 K TMP
"RTN","KMPRSSA",10,0)
 ;
"RTN","KMPRSSA",11,0)
 ; check environment
"RTN","KMPRSSA",12,0)
 ;D ENVCHECK^KMPRUTL1(.CHECK,1)
"RTN","KMPRSSA",13,0)
 ; if RUM turned on but background job not queued ask user if they want
"RTN","KMPRSSA",14,0)
 ; to queue it at this time.
"RTN","KMPRSSA",15,0)
 ;D:(+CHECK)=200 ENVCHECK^KMPRUTL1(.CHECK)
"RTN","KMPRSSA",16,0)
 ;
"RTN","KMPRSSA",17,0)
 ; if no kmprutl routine
"RTN","KMPRSSA",18,0)
 S X="KMPRUTL" X ^%ZOSF("TEST") I '$T D  Q
"RTN","KMPRSSA",19,0)
 .D SET^VALM10(LN,"The CAPACITY MANAGEMENT - RUM package is not installed!")
"RTN","KMPRSSA",20,0)
 .S LN=LN+1
"RTN","KMPRSSA",21,0)
 ;
"RTN","KMPRSSA",22,0)
 W !," formatting..."
"RTN","KMPRSSA",23,0)
 W "."
"RTN","KMPRSSA",24,0)
 ; option data
"RTN","KMPRSSA",25,0)
 D OPT
"RTN","KMPRSSA",26,0)
 W "."
"RTN","KMPRSSA",27,0)
 ; bacground data
"RTN","KMPRSSA",28,0)
 D BKGRND
"RTN","KMPRSSA",29,0)
 W "."
"RTN","KMPRSSA",30,0)
 ; file data
"RTN","KMPRSSA",31,0)
 D FILES
"RTN","KMPRSSA",32,0)
 W "."
"RTN","KMPRSSA",33,0)
 ; routine version check
"RTN","KMPRSSA",34,0)
 D ROUCHK("R")
"RTN","KMPRSSA",35,0)
 W "."
"RTN","KMPRSSA",36,0)
 ; node/cpu data
"RTN","KMPRSSA",37,0)
 D CPU
"RTN","KMPRSSA",38,0)
 W "."
"RTN","KMPRSSA",39,0)
 ; legend
"RTN","KMPRSSA",40,0)
 D LEGEND
"RTN","KMPRSSA",41,0)
 ;
"RTN","KMPRSSA",42,0)
 S KMPRLN=LN-1
"RTN","KMPRSSA",43,0)
 ;
"RTN","KMPRSSA",44,0)
 Q
"RTN","KMPRSSA",45,0)
 ;
"RTN","KMPRSSA",46,0)
BKGRND ; hl7 background info
"RTN","KMPRSSA",47,0)
 ;
"RTN","KMPRSSA",48,0)
 N DATA,DELTA,ENDT,I,STAT,STDT,Z
"RTN","KMPRSSA",49,0)
 ;
"RTN","KMPRSSA",50,0)
 D SET^VALM10(LN,"   Temporary collection global..")
"RTN","KMPRSSA",51,0)
 S LN=LN+1
"RTN","KMPRSSA",52,0)
 D SET^VALM10(LN,"   ^KMPTMP(""KMPR"").............. "_$S('$D(^KMPTMP("KMPR")):"NOT ",1:"")_"Present")
"RTN","KMPRSSA",53,0)
 S LN=LN+1
"RTN","KMPRSSA",54,0)
 D SET^VALM10(LN,"")
"RTN","KMPRSSA",55,0)
 S LN=LN+1
"RTN","KMPRSSA",56,0)
 ;
"RTN","KMPRSSA",57,0)
 D PARAMS^KMPDUT("DATA") Q:'$D(DATA)
"RTN","KMPRSSA",58,0)
 S DATA(2)=$G(DATA(2))
"RTN","KMPRSSA",59,0)
 S STDT=$P(DATA(2),U,5),ENDT=$P(DATA(2),U,6),DELTA=$P(DATA(2),U,7)
"RTN","KMPRSSA",60,0)
 S:$E(DELTA)=" " $E(DELTA)="0"
"RTN","KMPRSSA",61,0)
 D SET^VALM10(LN,"")
"RTN","KMPRSSA",62,0)
 S LN=LN+1
"RTN","KMPRSSA",63,0)
 D SET^VALM10(LN,"   RUM Dly Bckgrnd Last Start... "_$$FMTE^XLFDT(STDT))
"RTN","KMPRSSA",64,0)
 S LN=LN+1
"RTN","KMPRSSA",65,0)
 D SET^VALM10(LN,"   RUM Dly Bckgrnd Last Stop.... "_$$FMTE^XLFDT(ENDT))
"RTN","KMPRSSA",66,0)
 S LN=LN+1
"RTN","KMPRSSA",67,0)
 D SET^VALM10(LN,"   RUM Dly Bkgrnd Total Time.... "_DELTA)
"RTN","KMPRSSA",68,0)
 S LN=LN+1
"RTN","KMPRSSA",69,0)
 D SET^VALM10(LN,"")
"RTN","KMPRSSA",70,0)
 S LN=LN+1
"RTN","KMPRSSA",71,0)
 S STDT=$P(DATA(2),U,8),ENDT=$P(DATA(2),U,9),DELTA=$P(DATA(2),U,10)
"RTN","KMPRSSA",72,0)
 S:$E(DELTA)=" " $E(DELTA)="0"
"RTN","KMPRSSA",73,0)
 D SET^VALM10(LN,"   RUM Wkly Backgrnd Last Start. "_$$FMTE^XLFDT(STDT))
"RTN","KMPRSSA",74,0)
 S LN=LN+1
"RTN","KMPRSSA",75,0)
 D SET^VALM10(LN,"   RUM Wkly Bckgrnd Last Stop... "_$$FMTE^XLFDT(ENDT))
"RTN","KMPRSSA",76,0)
 S LN=LN+1
"RTN","KMPRSSA",77,0)
 D SET^VALM10(LN,"   RUM Wkly Bckgrnd Total Time.. "_DELTA)
"RTN","KMPRSSA",78,0)
 S LN=LN+1
"RTN","KMPRSSA",79,0)
 D SET^VALM10(LN,"   RUM Purge Data After......... "_$P(DATA(2),U,11)_" weeks")
"RTN","KMPRSSA",80,0)
 S LN=LN+1
"RTN","KMPRSSA",81,0)
 D TRANSTO^KMPDUTL7(1,2,.Z)
"RTN","KMPRSSA",82,0)
 I '$D(Z) D SET^VALM10(LN,"   RUM Transmit Data to......... <>") S LN=LN+1
"RTN","KMPRSSA",83,0)
 E  D 
"RTN","KMPRSSA",84,0)
 .S I=$O(Z("")) D:I'="" SET^VALM10(LN,"   RUM Transmit Data to......... "_I) S LN=LN+1
"RTN","KMPRSSA",85,0)
 .F  S I=$O(Z(I)) Q:I=""  D SET^VALM10(LN,$J(" ",33)_I) S LN=LN+1
"RTN","KMPRSSA",86,0)
 D SET^VALM10(LN,"")
"RTN","KMPRSSA",87,0)
 S LN=LN+1
"RTN","KMPRSSA",88,0)
 ;
"RTN","KMPRSSA",89,0)
 Q
"RTN","KMPRSSA",90,0)
 ;
"RTN","KMPRSSA",91,0)
CPU ;-- cpu/node data
"RTN","KMPRSSA",92,0)
 ;
"RTN","KMPRSSA",93,0)
 N COUNT,DATA,I,LEN,TEXT
"RTN","KMPRSSA",94,0)
 ;
"RTN","KMPRSSA",95,0)
 D CPUGET^KMPDUTL6(.DATA)
"RTN","KMPRSSA",96,0)
 Q:'$D(DATA)
"RTN","KMPRSSA",97,0)
 D SET^VALM10(LN,"")
"RTN","KMPRSSA",98,0)
 S LN=LN+1
"RTN","KMPRSSA",99,0)
 S TEXT="   Node/CPU Data............... "
"RTN","KMPRSSA",100,0)
 S (COUNT,I,LEN)=0
"RTN","KMPRSSA",101,0)
 F  S I=$O(DATA(I)) Q:'I  D 
"RTN","KMPRSSA",102,0)
 .S COUNT=COUNT+1,DATA=$G(DATA(I,0)) Q:DATA=""
"RTN","KMPRSSA",103,0)
 .; length of node name
"RTN","KMPRSSA",104,0)
 .S:'LEN LEN=$L($P(DATA,U))+2
"RTN","KMPRSSA",105,0)
 .S TEXT=$S(COUNT=1:TEXT,1:$J(" ",32))_$P(DATA,U)
"RTN","KMPRSSA",106,0)
 .S TEXT=TEXT_$J(" ",30-$L(TEXT)+LEN)_$P(DATA,U,2)_" ("_$P(DATA,U,3)_")"
"RTN","KMPRSSA",107,0)
 .D SET^VALM10(LN,TEXT)
"RTN","KMPRSSA",108,0)
 .S LN=LN+1
"RTN","KMPRSSA",109,0)
 ;
"RTN","KMPRSSA",110,0)
 Q
"RTN","KMPRSSA",111,0)
 ;
"RTN","KMPRSSA",112,0)
LEGEND ;-- display legend
"RTN","KMPRSSA",113,0)
 ;
"RTN","KMPRSSA",114,0)
 D SET^VALM10(LN,"")
"RTN","KMPRSSA",115,0)
 S LN=LN+1
"RTN","KMPRSSA",116,0)
 D SET^VALM10(LN,"")
"RTN","KMPRSSA",117,0)
 S LN=LN+1
"RTN","KMPRSSA",118,0)
 D SET^VALM10(LN,"     RUM = Resource Usage Monitor")
"RTN","KMPRSSA",119,0)
 S LN=LN+1
"RTN","KMPRSSA",120,0)
 ;
"RTN","KMPRSSA",121,0)
 Q
"RTN","KMPRSSA",122,0)
 ;
"RTN","KMPRSSA",123,0)
OPT ;-- option data
"RTN","KMPRSSA",124,0)
 ;
"RTN","KMPRSSA",125,0)
 ; daily/weekly background job info
"RTN","KMPRSSA",126,0)
 N DIR,KMPRX,KMPRX1,TEXT,X,Y
"RTN","KMPRSSA",127,0)
 ;
"RTN","KMPRSSA",128,0)
 ; if background option is missing
"RTN","KMPRSSA",129,0)
 I '$O(^DIC(19,"B","KMPR BACKGROUND DRIVER",0)) D 
"RTN","KMPRSSA",130,0)
 .D SET^VALM10(LN,"   The 'RUM Background Driver' option [KMPR BACKGROUND DRIVER] is missing!")
"RTN","KMPRSSA",131,0)
 .S LN=LN+1
"RTN","KMPRSSA",132,0)
 ; background option is present
"RTN","KMPRSSA",133,0)
 E  D 
"RTN","KMPRSSA",134,0)
 .S KMPRX=+$O(^DIC(19,"B","KMPR BACKGROUND DRIVER",0))
"RTN","KMPRSSA",135,0)
 .S KMPRX=+$O(^DIC(19.2,"B",KMPRX,0))
"RTN","KMPRSSA",136,0)
 .; if not scheduled or no task id
"RTN","KMPRSSA",137,0)
 .I 'KMPRX!('$G(^DIC(19.2,+KMPRX,1))) D  Q:'Y
"RTN","KMPRSSA",138,0)
 ..K DIR S DIR(0)="YO",DIR("B")="YES"
"RTN","KMPRSSA",139,0)
 ..S DIR("A")="Do you want to queue this option to run each night at 1am"
"RTN","KMPRSSA",140,0)
 ..W ! D ^DIR I 'Y D  Q
"RTN","KMPRSSA",141,0)
 ...D SET^VALM10(LN,"   The 'RUM Background Driver' [KMPR BACKGROUND DRIVER] is not scheduled")
"RTN","KMPRSSA",142,0)
 ...S LN=LN+1
"RTN","KMPRSSA",143,0)
 ...D SET^VALM10(LN,"   to run!"),SET^VALM10(LN,"")
"RTN","KMPRSSA",144,0)
 ...S LN=LN+1
"RTN","KMPRSSA",145,0)
 ..D QUEBKG^KMPRUTL1
"RTN","KMPRSSA",146,0)
 .S KMPRX=+$O(^DIC(19,"B","KMPR BACKGROUND DRIVER",0))
"RTN","KMPRSSA",147,0)
 .S KMPRX=+$O(^DIC(19.2,"B",KMPRX,0))
"RTN","KMPRSSA",148,0)
 .S KMPRX=$G(^DIC(19.2,KMPRX,0)),KMPRX1=$G(^(1))
"RTN","KMPRSSA",149,0)
 .S $P(KMPRX,U,2)=$$FMTE^XLFDT($P(KMPRX,U,2))
"RTN","KMPRSSA",150,0)
 .D SET^VALM10(LN,"   RUM Background Driver........ KMPR BACKGROUND DRIVER")
"RTN","KMPRSSA",151,0)
 .S LN=LN+1
"RTN","KMPRSSA",152,0)
 .D SET^VALM10(LN,"   QUEUED TO RUN AT............. "_$P(KMPRX,U,2))
"RTN","KMPRSSA",153,0)
 .S LN=LN+1
"RTN","KMPRSSA",154,0)
 .D SET^VALM10(LN,"   RESCHEDULING FREQUENCY....... "_$P(KMPRX,U,6))
"RTN","KMPRSSA",155,0)
 .S LN=LN+1
"RTN","KMPRSSA",156,0)
 .D SET^VALM10(LN,"   TASK ID...................... "_+KMPRX1)
"RTN","KMPRSSA",157,0)
 .S LN=LN+1
"RTN","KMPRSSA",158,0)
 .; user info.
"RTN","KMPRSSA",159,0)
 .S KMPRX1=$G(^%ZTSK(+KMPRX1,0))
"RTN","KMPRSSA",160,0)
 .S TEXT="   QUEUED BY.................... "_$P($G(^VA(200,+$P(KMPRX1,U,3),0)),U)
"RTN","KMPRSSA",161,0)
 .; if user
"RTN","KMPRSSA",162,0)
 .I (+$P(KMPRX1,U,3)) D 
"RTN","KMPRSSA",163,0)
 ..; user 'active' or 'terminated'
"RTN","KMPRSSA",164,0)
 ..S KMPRX1=$$ACTIVE^XUSER(+$P(KMPRX1,U,3))
"RTN","KMPRSSA",165,0)
 ..S TEXT=TEXT_"  ("_$S($P(KMPRX1,U,2)["TERMINATED":"Terminated - "_$$FMTE^XLFDT($P(KMPRX1,U,3),2),1:"Active")_")"
"RTN","KMPRSSA",166,0)
 .D SET^VALM10(LN,TEXT)
"RTN","KMPRSSA",167,0)
 .S LN=LN+1
"RTN","KMPRSSA",168,0)
 D SET^VALM10(LN,"")
"RTN","KMPRSSA",169,0)
 S LN=LN+1
"RTN","KMPRSSA",170,0)
 ;
"RTN","KMPRSSA",171,0)
 Q
"RTN","KMPRSSA",172,0)
 ;
"RTN","KMPRSSA",173,0)
 ;
"RTN","KMPRSSA",174,0)
FILES ;-- file data
"RTN","KMPRSSA",175,0)
 ;
"RTN","KMPRSSA",176,0)
 N TEXT,X
"RTN","KMPRSSA",177,0)
 ;
"RTN","KMPRSSA",178,0)
 D SET^VALM10(LN,$J(" ",35)_" # of     Oldest     Recent")
"RTN","KMPRSSA",179,0)
 S LN=LN+1
"RTN","KMPRSSA",180,0)
 D SET^VALM10(LN,"   File"_$J(" ",28)_"Entries    Date       Date")
"RTN","KMPRSSA",181,0)
 S LN=LN+1
"RTN","KMPRSSA",182,0)
 D SET^VALM10(LN,"   -------------------------       -------   -------   -------")
"RTN","KMPRSSA",183,0)
 S LN=LN+1
"RTN","KMPRSSA",184,0)
 ; file name
"RTN","KMPRSSA",185,0)
 S TEXT="   8971.1-"_$P($G(^DIC(8971.1,0)),U)
"RTN","KMPRSSA",186,0)
 ; number of entries
"RTN","KMPRSSA",187,0)
 S TEXT=TEXT_$J(" ",35-$L(TEXT))_$J($FN($P($G(^KMPR(8971.1,0)),U,4),",",0),7)
"RTN","KMPRSSA",188,0)
 ; oldest date
"RTN","KMPRSSA",189,0)
 S X=$$FMTE^XLFDT(+$O(^KMPR(8971.1,"B",0)),2)
"RTN","KMPRSSA",190,0)
 S X=$S(X=0:"---",1:X)
"RTN","KMPRSSA",191,0)
 S TEXT=TEXT_$J(" ",45-$L(TEXT))_X
"RTN","KMPRSSA",192,0)
 ; current date
"RTN","KMPRSSA",193,0)
 S X=$$FMTE^XLFDT(+$O(^KMPR(8971.1,"B","A"),-1),2)
"RTN","KMPRSSA",194,0)
 S X=$S(X=0:"---",1:X)
"RTN","KMPRSSA",195,0)
 S TEXT=TEXT_$J(" ",55-$L(TEXT))_X
"RTN","KMPRSSA",196,0)
 D SET^VALM10(LN,TEXT)
"RTN","KMPRSSA",197,0)
 S LN=LN+1
"RTN","KMPRSSA",198,0)
 ;
"RTN","KMPRSSA",199,0)
 Q
"RTN","KMPRSSA",200,0)
 ;
"RTN","KMPRSSA",201,0)
ROUCHK(KMPDPKG) ;--display routine version info
"RTN","KMPRSSA",202,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRSSA",203,0)
 ; KMPDPKG... CM Package:
"RTN","KMPRSSA",204,0)
 ;            "D" - CM Tools
"RTN","KMPRSSA",205,0)
 ;            "R" - RUM
"RTN","KMPRSSA",206,0)
 ;            "S" - SAGG
"RTN","KMPRSSA",207,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRSSA",208,0)
 ;
"RTN","KMPRSSA",209,0)
 Q:$G(KMPDPKG)=""
"RTN","KMPRSSA",210,0)
 Q:KMPDPKG'="D"&(KMPDPKG'="R")&(KMPDPKG'="S")
"RTN","KMPRSSA",211,0)
 ;
"RTN","KMPRSSA",212,0)
 N I,TEXT,X
"RTN","KMPRSSA",213,0)
 ;
"RTN","KMPRSSA",214,0)
 ; routine check
"RTN","KMPRSSA",215,0)
 D VERPTCH^KMPDUTL1(KMPDPKG,.X)
"RTN","KMPRSSA",216,0)
 D SET^VALM10(LN,"")
"RTN","KMPRSSA",217,0)
 S LN=LN+1
"RTN","KMPRSSA",218,0)
 D SET^VALM10(LN,"")
"RTN","KMPRSSA",219,0)
 S LN=LN+1
"RTN","KMPRSSA",220,0)
 S TEXT="   "_$S(KMPDPKG="D":"CM TOOLS",KMPDPKG="R":"RUM",1:"SAGG")_" routines"
"RTN","KMPRSSA",221,0)
 S TEXT=TEXT_$$REPEAT^XLFSTR(".",31-$L(TEXT))_" "
"RTN","KMPRSSA",222,0)
 I '$P($G(X(0)),U,3) D SET^VALM10(LN,TEXT_+X(0)_" Routines - No Problems") S LN=LN+1 Q
"RTN","KMPRSSA",223,0)
 D SET^VALM10(LN,TEXT)
"RTN","KMPRSSA",224,0)
 S LN=LN+1
"RTN","KMPRSSA",225,0)
 D SET^VALM10(LN,$J(" ",20)_"Current Version"_$J(" ",20)_"Should be")
"RTN","KMPRSSA",226,0)
 S LN=LN+1
"RTN","KMPRSSA",227,0)
 S I=0 F  S I=$O(X(I)) Q:I=""  I $P(X(I),U) D 
"RTN","KMPRSSA",228,0)
 .S TEXT="   "_I
"RTN","KMPRSSA",229,0)
 .S TEXT=TEXT_$J(" ",20-$L(TEXT))_$P(X(I),U,4)
"RTN","KMPRSSA",230,0)
 .S:$P(X(I),U,5)]"" TEXT=TEXT_" - "_$P(X(I),U,5)
"RTN","KMPRSSA",231,0)
 .S TEXT=TEXT_$J(" ",55-$L(TEXT))_$P(X(I),U,2)
"RTN","KMPRSSA",232,0)
 .S:$P(X(I),U,3)]"" TEXT=TEXT_" - "_$P(X(I),U,3)
"RTN","KMPRSSA",233,0)
 .D SET^VALM10(LN,TEXT)
"RTN","KMPRSSA",234,0)
 .S LN=LN+1
"RTN","KMPRSSA",235,0)
 ;
"RTN","KMPRSSA",236,0)
 Q
"RTN","KMPRSSB")
0^17^B988835
"RTN","KMPRSSB",1,0)
KMPRSSB ;OAK/RAK - RUM Status using List Manager ;11/19/04  10:35
"RTN","KMPRSSB",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**1**;May 28, 2003
"RTN","KMPRSSB",3,0)
 ;
"RTN","KMPRSSB",4,0)
EN ; -- main entry point for KMPR STATUS
"RTN","KMPRSSB",5,0)
 ;
"RTN","KMPRSSB",6,0)
 D EN^VALM("KMPR STATUS")
"RTN","KMPRSSB",7,0)
 ;
"RTN","KMPRSSB",8,0)
 Q
"RTN","KMPRSSB",9,0)
 ;
"RTN","KMPRSSB",10,0)
HDR ; -- header code
"RTN","KMPRSSB",11,0)
 ;
"RTN","KMPRSSB",12,0)
 N TEXT,VERSION
"RTN","KMPRSSB",13,0)
 ;
"RTN","KMPRSSB",14,0)
 ; version data
"RTN","KMPRSSB",15,0)
 S VERSION=$$VERSION^KMPRUTL
"RTN","KMPRSSB",16,0)
 ; header text
"RTN","KMPRSSB",17,0)
 S TEXT="Environment Check for RUM"
"RTN","KMPRSSB",18,0)
 S TEXT=$J(" ",IOM-$L(TEXT)\2)_TEXT
"RTN","KMPRSSB",19,0)
 S VALMHDR(1)=TEXT
"RTN","KMPRSSB",20,0)
 S TEXT="CAPACITY MANAGEMENT - RUM v"_$P(VERSION,U)_" "_$P(VERSION,U,2)
"RTN","KMPRSSB",21,0)
 S TEXT=$J(" ",IOM-$L(TEXT)\2)_TEXT
"RTN","KMPRSSB",22,0)
 S VALMHDR(2)=TEXT
"RTN","KMPRSSB",23,0)
 ;
"RTN","KMPRSSB",24,0)
 Q
"RTN","KMPRSSB",25,0)
 ;
"RTN","KMPRSSB",26,0)
INIT ; -- init variables and list array
"RTN","KMPRSSB",27,0)
 ;
"RTN","KMPRSSB",28,0)
 D FORMAT^KMPRSSA(.VALMCNT)
"RTN","KMPRSSB",29,0)
 ;
"RTN","KMPRSSB",30,0)
 Q
"RTN","KMPRSSB",31,0)
 ;
"RTN","KMPRSSB",32,0)
HELP ; -- help code
"RTN","KMPRSSB",33,0)
 ;
"RTN","KMPRSSB",34,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","KMPRSSB",35,0)
 ;
"RTN","KMPRSSB",36,0)
 Q
"RTN","KMPRSSB",37,0)
 ;
"RTN","KMPRSSB",38,0)
EXIT ; -- exit code
"RTN","KMPRSSB",39,0)
 ;
"RTN","KMPRSSB",40,0)
 K @VALMAR
"RTN","KMPRSSB",41,0)
 ;
"RTN","KMPRSSB",42,0)
 Q
"RTN","KMPRSSB",43,0)
 ;
"RTN","KMPRSSB",44,0)
EXPND ; -- expand code
"RTN","KMPRSSB",45,0)
 ;
"RTN","KMPRSSB",46,0)
 Q
"RTN","KMPRUTL")
0^4^B12308301
"RTN","KMPRUTL",1,0)
KMPRUTL ;OAK/KAK/RAK - Resource Usage Monitor Utilities ;11/19/04  10:32
"RTN","KMPRUTL",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**1**;May 28, 2003
"RTN","KMPRUTL",3,0)
 ;
"RTN","KMPRUTL",4,0)
GRPHMSG ;-- graph message.
"RTN","KMPRUTL",5,0)
 N TXT
"RTN","KMPRUTL",6,0)
 S TXT(1)="This option displays data in a graphical format.  Please make"
"RTN","KMPRUTL",7,0)
 S TXT(2)="note that this output is intended for comparison/trends only,"
"RTN","KMPRUTL",8,0)
 S TXT(3)="and should not be used for detailed analysis."
"RTN","KMPRUTL",9,0)
 S TXT(1,"F")="!?9",TXT(2,"F")="!?9",TXT(3,"F")="!?9"
"RTN","KMPRUTL",10,0)
 D EN^DDIOL(.TXT)
"RTN","KMPRUTL",11,0)
 Q
"RTN","KMPRUTL",12,0)
 ;
"RTN","KMPRUTL",13,0)
ID(KMPRIEN) ;-- display - called from ^DD(8971.1,0,"ID","W")
"RTN","KMPRUTL",14,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",15,0)
 ; KMPRIEN... Ien for file #8971.1 (RESOURCE USAGE MONITOR).
"RTN","KMPRUTL",16,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",17,0)
 Q:'$G(KMPRIEN)
"RTN","KMPRUTL",18,0)
 Q:'$D(^KMPR(8971.1,+KMPRIEN,0))
"RTN","KMPRUTL",19,0)
 N DATA,TXT
"RTN","KMPRUTL",20,0)
 S DATA=$G(^KMPR(8971.1,+KMPRIEN,0))
"RTN","KMPRUTL",21,0)
 ; sent to cm national database.
"RTN","KMPRUTL",22,0)
 S TXT(1)=$S($P(DATA,U,2):"sent",1:"not sent")
"RTN","KMPRUTL",23,0)
 S TXT(1)=TXT(1)_$J(" ",10-$L(TXT(1)))
"RTN","KMPRUTL",24,0)
 ; node.
"RTN","KMPRUTL",25,0)
 S TXT(1)=TXT(1)_$P(DATA,U,3)
"RTN","KMPRUTL",26,0)
 S TXT(1)=TXT(1)_$J(" ",22-$L(TXT(1)))
"RTN","KMPRUTL",27,0)
 ; option.
"RTN","KMPRUTL",28,0)
 I $P(DATA,U,4)]"" S TXT(1)=TXT(1)_"option: "_$P(DATA,U,4)
"RTN","KMPRUTL",29,0)
 ; rpc.
"RTN","KMPRUTL",30,0)
 E  I $P(DATA,U,7)]"" S TXT(1)=TXT(1)_"   rpc: "_$P(DATA,U,7)
"RTN","KMPRUTL",31,0)
 S TXT(1,"F")="?16"
"RTN","KMPRUTL",32,0)
 ; if protocol
"RTN","KMPRUTL",33,0)
 I $P(DATA,U,5)'="" D 
"RTN","KMPRUTL",34,0)
 .S TXT(2)="protocol: "_$E($P(DATA,U,5),1,40) ;_" (protocol)"
"RTN","KMPRUTL",35,0)
 .S TXT(2,"F")="!?"_$S($G(DDSDIW):40,1:42)
"RTN","KMPRUTL",36,0)
 ; display TXT() array.
"RTN","KMPRUTL",37,0)
 D EN^DDIOL(.TXT)
"RTN","KMPRUTL",38,0)
 Q
"RTN","KMPRUTL",39,0)
 ;
"RTN","KMPRUTL",40,0)
NODEARRY(KMPRARRY) ;-- put nodes into array.
"RTN","KMPRUTL",41,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",42,0)
 ; KMPRARRY.. Array to contain nodes in format:
"RTN","KMPRUTL",43,0)
 ;            KMPRARRY(NODENAME)=""
"RTN","KMPRUTL",44,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",45,0)
 ;
"RTN","KMPRUTL",46,0)
 K @KMPRARRY
"RTN","KMPRUTL",47,0)
 ;
"RTN","KMPRUTL",48,0)
 N NODE S NODE=""
"RTN","KMPRUTL",49,0)
 F  S NODE=$O(^KMPR(8971.1,"ANODE",NODE)) Q:NODE=""  S @KMPRARRY@(NODE)=""
"RTN","KMPRUTL",50,0)
 Q
"RTN","KMPRUTL",51,0)
 ;
"RTN","KMPRUTL",52,0)
RUMDATES(KMPRDATE) ;-- get RUM date ranges from file 8971.1
"RTN","KMPRUTL",53,0)
 ;---------------------------------------------------------------------
"RTN","KMPRUTL",54,0)
 ; KMPRDATE... Return value (access by reference) in format:
"RTN","KMPRUTL",55,0)
 ;             StartDate^EndDate^ExtStartDate^ExtEndDate
"RTN","KMPRUTL",56,0)
 ;             2981101^2981104^Nov 1, 1998^Nov 4, 1998
"RTN","KMPRUTL",57,0)
 ;---------------------------------------------------------------------
"RTN","KMPRUTL",58,0)
 ;
"RTN","KMPRUTL",59,0)
 S KMPRDATE=""
"RTN","KMPRUTL",60,0)
 N END,START
"RTN","KMPRUTL",61,0)
 ; determine start date from file 8971.1
"RTN","KMPRUTL",62,0)
 S START=$O(^KMPR(8971.1,"B",0))
"RTN","KMPRUTL",63,0)
 ; determine end date from file 8971.1
"RTN","KMPRUTL",64,0)
 S END=$O(^KMPR(8971.1,"B","A"),-1)
"RTN","KMPRUTL",65,0)
 D DATERNG^KMPRUTL1(.KMPRDATE,START,END)
"RTN","KMPRUTL",66,0)
 ;
"RTN","KMPRUTL",67,0)
 Q
"RTN","KMPRUTL",68,0)
 ;
"RTN","KMPRUTL",69,0)
VERSION() ;-- extrinsic - return current version
"RTN","KMPRUTL",70,0)
 ;
"RTN","KMPRUTL",71,0)
 Q $P($T(+2^KMPRUTL),";",3)_"^"_$P($T(+2^KMPRUTL),";",5)
"RTN","KMPRUTL",72,0)
 ;
"RTN","KMPRUTL",73,0)
ELEARRY(KMPRARRY) ;-- set elements data into KMPRARRY.
"RTN","KMPRUTL",74,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",75,0)
 ; KMPRARRY... Array to contain elements data.
"RTN","KMPRUTL",76,0)
 ;             Format: ElementName^DataPiece
"RTN","KMPRUTL",77,0)
 ;                     KMPRARRY(1)=CPU Time^1
"RTN","KMPRUTL",78,0)
 ;                     KMPRARRY(2)=Elapsed Time^7
"RTN","KMPRUTL",79,0)
 ;                     KMPRARRY(...)=...
"RTN","KMPRUTL",80,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",81,0)
 ;
"RTN","KMPRUTL",82,0)
 Q:$G(KMPRARRY)=""
"RTN","KMPRUTL",83,0)
 ;
"RTN","KMPRUTL",84,0)
 N DATA,I
"RTN","KMPRUTL",85,0)
 F I=1:1 Q:$P($T(ELEMENTS+I),";",3)=""  D 
"RTN","KMPRUTL",86,0)
 .S DATA=$T(ELEMENTS+I)
"RTN","KMPRUTL",87,0)
 .S @KMPRARRY@(I)=$P(DATA,";",3)_"^"_$P(DATA,";",4)
"RTN","KMPRUTL",88,0)
 Q
"RTN","KMPRUTL",89,0)
 ;
"RTN","KMPRUTL",90,0)
ELEMENT(KMPUVAR) ;-- select RUM data element.
"RTN","KMPRUTL",91,0)
 ; Output Variable:
"RTN","KMPRUTL",92,0)
 ;   KMPUVAR    = Number of Data Piece
"RTN","KMPRUTL",93,0)
 ;              = '^' if DTOUT or DUOUT
"RTN","KMPRUTL",94,0)
 ;   KMPUVAR(0) = Set of Code's Verbiage
"RTN","KMPRUTL",95,0)
 ;
"RTN","KMPRUTL",96,0)
 N DIR,DTOUT,DUOUT,I,X,Y
"RTN","KMPRUTL",97,0)
 S KMPUVAR=""
"RTN","KMPRUTL",98,0)
 S DIR(0)="SXO^"
"RTN","KMPRUTL",99,0)
 F I=1:1 Q:$P($T(ELEMENTS+I),";",3)=""  D 
"RTN","KMPRUTL",100,0)
 .S DIR(0)=DIR(0)_I_":"_$P($T(ELEMENTS+I),";",3)_";"
"RTN","KMPRUTL",101,0)
 S DIR("A")="Enter Key Data Element for Searching RUM Data"
"RTN","KMPRUTL",102,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT)!(Y="") S KMPUVAR="^",KMPUVAR(0)="" Q
"RTN","KMPRUTL",103,0)
 S KMPUVAR=$TR(Y,"12345678^","17562348^"),KMPUVAR(0)=Y(0)
"RTN","KMPRUTL",104,0)
 Q
"RTN","KMPRUTL",105,0)
 ;
"RTN","KMPRUTL",106,0)
ELEMENTS ;-- ;;Element Name;data piece in file 8971.1
"RTN","KMPRUTL",107,0)
 ;;CPU Time;1
"RTN","KMPRUTL",108,0)
 ;;Elapsed Time;7
"RTN","KMPRUTL",109,0)
 ;;M Commands;5
"RTN","KMPRUTL",110,0)
 ;;GLO References;6
"RTN","KMPRUTL",111,0)
 ;;DIO References;2
"RTN","KMPRUTL",112,0)
 ;;BIO References;3
"RTN","KMPRUTL",113,0)
 ;;Page Faults;4
"RTN","KMPRUTL",114,0)
 ;;Occurrences;8
"RTN","KMPRUTL",115,0)
 ;;
"RTN","KMPRUTL",116,0)
PTCHINFO ; -- patch information: routine name ^ current version ^ current patch(es)
"RTN","KMPRUTL",117,0)
 ;;KMPRBD01^2.0^**1**
"RTN","KMPRUTL",118,0)
 ;;KMPRBD02^2.0^
"RTN","KMPRUTL",119,0)
 ;;KMPRBD03^2.0^
"RTN","KMPRUTL",120,0)
 ;;KMPRP1^2.0^**1**
"RTN","KMPRUTL",121,0)
 ;;KMPRP2^2.0^**1**
"RTN","KMPRUTL",122,0)
 ;;KMPRPG01^2.0^**1**
"RTN","KMPRUTL",123,0)
 ;;KMPRPG02^2.0^**1**
"RTN","KMPRUTL",124,0)
 ;;KMPRPN03^2.0^**1**
"RTN","KMPRUTL",125,0)
 ;;KMPRPOST^2.0^**1**
"RTN","KMPRUTL",126,0)
 ;;KMPRSS^2.0^**1**
"RTN","KMPRUTL",127,0)
 ;;KMPRSSA^2.0^**1**
"RTN","KMPRUTL",128,0)
 ;;KMPRSSB^2.0^**1**
"RTN","KMPRUTL",129,0)
 ;;KMPRUTL^2.0^**1**
"RTN","KMPRUTL",130,0)
 ;;KMPRUTL1^2.0^**1**
"RTN","KMPRUTL",131,0)
 ;;KMPRUTL2^2.0^
"RTN","KMPRUTL",132,0)
 ;;KMPRUTL3^2.0^
"RTN","KMPRUTL",133,0)
 ;;%ZOSVKR^8.0^**90,94,107,122,143,186**
"RTN","KMPRUTL",134,0)
 ;;
"RTN","KMPRUTL1")
0^13^B23590616
"RTN","KMPRUTL1",1,0)
KMPRUTL1 ;OAK/KAK/RAK - Resource Usage Monitor Utility ;11/19/04  10:32
"RTN","KMPRUTL1",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**1**;May 28, 2003
"RTN","KMPRUTL1",3,0)
 ;
"RTN","KMPRUTL1",4,0)
DATERNG(KMPUY,KMPUSTR,KMPUEND) ;-- date range
"RTN","KMPRUTL1",5,0)
 ;---------------------------------------------------------------------
"RTN","KMPRUTL1",6,0)
 ; KMPUY..... Value returned in four pieces:
"RTN","KMPRUTL1",7,0)
 ;            fmstartdate^fmenddate^ouputstartdate^outputenddate
"RTN","KMPRUTL1",8,0)
 ;
"RTN","KMPRUTL1",9,0)
 ;            Piece one and two are the date ranges in fileman format.
"RTN","KMPRUTL1",10,0)
 ;            Piece three and four are the same dates in output format:
"RTN","KMPRUTL1",11,0)
 ;                             dy-Mon-yr
"RTN","KMPRUTL1",12,0)
 ;
"RTN","KMPRUTL1",13,0)
 ;                               ********
"RTN","KMPRUTL1",14,0)
 ;                               * NOTE *
"RTN","KMPRUTL1",15,0)
 ;                               ********
"RTN","KMPRUTL1",16,0)
 ;          - The first piece will always be the earliest date entered.
"RTN","KMPRUTL1",17,0)
 ;
"RTN","KMPRUTL1",18,0)
 ;  Optional Parameters:
"RTN","KMPRUTL1",19,0)
 ;
"RTN","KMPRUTL1",20,0)
 ; KMPUSTR... If defined, the earliest date that may be selected.
"RTN","KMPRUTL1",21,0)
 ;            (must be in fileman format)
"RTN","KMPRUTL1",22,0)
 ;
"RTN","KMPRUTL1",23,0)
 ; KMPUEND... If defined, the latest date that may be selected.
"RTN","KMPRUTL1",24,0)
 ;            (must be in fileman format)
"RTN","KMPRUTL1",25,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL1",26,0)
 ;
"RTN","KMPRUTL1",27,0)
 N DATE1,DATE2,DIR,DIRUT,LINE,X,Y
"RTN","KMPRUTL1",28,0)
 ;
"RTN","KMPRUTL1",29,0)
 S KMPUY="",KMPUSTR=$G(KMPUSTR),KMPUEND=$G(KMPUEND)
"RTN","KMPRUTL1",30,0)
 ;
"RTN","KMPRUTL1",31,0)
RANGE ;-- Ask date ranges
"RTN","KMPRUTL1",32,0)
 S DIR(0)="DOA^"_$S(KMPUSTR:KMPUSTR,1:"")_":"_$S(KMPUEND:KMPUEND,1:"")_":E)"
"RTN","KMPRUTL1",33,0)
 S DIR("A")="Start with Date: "
"RTN","KMPRUTL1",34,0)
 S:KMPUSTR DIR("B")=$$FMTE^XLFDT(KMPUSTR,2)
"RTN","KMPRUTL1",35,0)
 S DIR("?")=" "
"RTN","KMPRUTL1",36,0)
 S DIR("?",1)="Enter the starting date.",LINE=2
"RTN","KMPRUTL1",37,0)
 ; if starting date.
"RTN","KMPRUTL1",38,0)
 I KMPUSTR D 
"RTN","KMPRUTL1",39,0)
 .S DIR("?",LINE)="Date must not precede "_$$FMTE^XLFDT(KMPUSTR)
"RTN","KMPRUTL1",40,0)
 .S LINE=LINE+1
"RTN","KMPRUTL1",41,0)
 ; if ending date.
"RTN","KMPRUTL1",42,0)
 I KMPUEND S DIR("?",LINE)="Date must not follow "_$$FMTE^XLFDT(KMPUEND)
"RTN","KMPRUTL1",43,0)
 W ! D ^DIR I $D(DIRUT) S KMPUY="" Q
"RTN","KMPRUTL1",44,0)
 S DATE1=Y
"RTN","KMPRUTL1",45,0)
 S DIR("A")="  End with Date: "
"RTN","KMPRUTL1",46,0)
 S:KMPUEND DIR("B")=$$FMTE^XLFDT(KMPUEND,2)
"RTN","KMPRUTL1",47,0)
 S DIR("?",1)="Enter the ending date."
"RTN","KMPRUTL1",48,0)
 D ^DIR G:Y="" RANGE I Y="^" S KMPUY="" Q
"RTN","KMPRUTL1",49,0)
 S DATE2=Y
"RTN","KMPRUTL1",50,0)
 ; Set earliest date into first piece.
"RTN","KMPRUTL1",51,0)
 S KMPUY=$S(DATE2<DATE1:DATE2,1:DATE1)_U_$S(DATE2>DATE1:DATE2,1:DATE1)
"RTN","KMPRUTL1",52,0)
 S $P(KMPUY,U,3)=$$FMTE^XLFDT($P(KMPUY,U))
"RTN","KMPRUTL1",53,0)
 S $P(KMPUY,U,4)=$$FMTE^XLFDT($P(KMPUY,U,2))
"RTN","KMPRUTL1",54,0)
 ;
"RTN","KMPRUTL1",55,0)
 Q
"RTN","KMPRUTL1",56,0)
 ;
"RTN","KMPRUTL1",57,0)
ENVCHECK(KMPRENV,KMPRQIET) ;-- environment check.
"RTN","KMPRUTL1",58,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL1",59,0)
 ; KMPRENV... Result of environment check in format:
"RTN","KMPRUTL1",60,0)
 ;            KMPRENV=Number^Text
"RTN","KMPRUTL1",61,0)
 ;            1-99: system status (not an error condition).
"RTN","KMPRUTL1",62,0)
 ;                 0 - RUM turned on and background job queued
"RTN","KMPRUTL1",63,0)
 ;                 1 - RUM is not turned on
"RTN","KMPRUTL1",64,0)
 ;                 2 - 'KMPR BACKGROUND' job has been queued to run
"RTN","KMPRUTL1",65,0)
 ;
"RTN","KMPRUTL1",66,0)
 ;            100>: error condition.
"RTN","KMPRUTL1",67,0)
 ;               100 - RUM not available for 'OS' at this time
"RTN","KMPRUTL1",68,0)
 ;               200 - RUM is on but the option 'KMPR BACKGROUND DRIVER'
"RTN","KMPRUTL1",69,0)
 ;                     is not scheduled to run."
"RTN","KMPRUTL1",70,0)
 ;               201 - The RUM background driver option [KMPR BACKGROUND
"RTN","KMPRUTL1",71,0)
 ;                     DRIVER] is missing
"RTN","KMPRUTL1",72,0)
 ;
"RTN","KMPRUTL1",73,0)
 ; KMPRQIET.. Output message: 0 - output message (not quiet).
"RTN","KMPRUTL1",74,0)
 ;                            1 - do not output message (quiet).
"RTN","KMPRUTL1",75,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL1",76,0)
 ;
"RTN","KMPRUTL1",77,0)
 K KMPRENV
"RTN","KMPRUTL1",78,0)
 S KMPRENV="0^RUM turned on and background job queued"
"RTN","KMPRUTL1",79,0)
 S KMPRQIET=+$G(KMPRQIET)
"RTN","KMPRUTL1",80,0)
 ;
"RTN","KMPRUTL1",81,0)
 N IEN,IEN1,TEXT
"RTN","KMPRUTL1",82,0)
 ;
"RTN","KMPRUTL1",83,0)
 ; check for operating system availability.
"RTN","KMPRUTL1",84,0)
 S TEXT=$P($G(^%ZOSF("OS")),U)
"RTN","KMPRUTL1",85,0)
 I TEXT'["DSM"&(TEXT'["OpenM") D  Q
"RTN","KMPRUTL1",86,0)
 .S KMPRENV="100^RUM not available for '"_TEXT_"' at this time"
"RTN","KMPRUTL1",87,0)
 .D:'KMPRQIET ENVOUTPT(KMPRENV,1,1)
"RTN","KMPRUTL1",88,0)
 ;
"RTN","KMPRUTL1",89,0)
 ; if rum not started quit.
"RTN","KMPRUTL1",90,0)
 I '$G(^%ZTSCH("LOGRSRC")) D  Q
"RTN","KMPRUTL1",91,0)
 .S KMPRENV="1^RUM is not turned on"
"RTN","KMPRUTL1",92,0)
 .D:'KMPRQIET ENVOUTPT(KMPRENV,1,1)
"RTN","KMPRUTL1",93,0)
 ;
"RTN","KMPRUTL1",94,0)
 S TEXT="KMPR BACKGROUND DRIVER"
"RTN","KMPRUTL1",95,0)
 S IEN=$O(^DIC(19,"B",TEXT,0))
"RTN","KMPRUTL1",96,0)
 I 'IEN D  Q
"RTN","KMPRUTL1",97,0)
 .S KMPRENV="201^The RUM background driver option [KMPR BACKGROUND DRIVER] is missing"
"RTN","KMPRUTL1",98,0)
 .D:'KMPRQIET ENVOUTPT(KMPRENV,1,1)
"RTN","KMPRUTL1",99,0)
 ;
"RTN","KMPRUTL1",100,0)
 S IEN1=$O(^DIC(19.2,"B",IEN,0))
"RTN","KMPRUTL1",101,0)
 I 'IEN1!($P($G(^DIC(19.2,+IEN1,1)),U)']"") D 
"RTN","KMPRUTL1",102,0)
 .S KMPRENV="200^RUM is on but the option '"_TEXT_"' is not scheduled to run"
"RTN","KMPRUTL1",103,0)
 ;
"RTN","KMPRUTL1",104,0)
 Q:KMPRQIET
"RTN","KMPRUTL1",105,0)
 D ENVOUTPT(KMPRENV,1,1) I +KMPRENV<100 Q
"RTN","KMPRUTL1",106,0)
 ;
"RTN","KMPRUTL1",107,0)
 K DIR S DIR(0)="YO",DIR("B")="YES"
"RTN","KMPRUTL1",108,0)
 S DIR("A")="Do you want me to queue this option to run every night at 1 a.m."
"RTN","KMPRUTL1",109,0)
 W ! D ^DIR Q:'Y
"RTN","KMPRUTL1",110,0)
 ;
"RTN","KMPRUTL1",111,0)
 D QUEBKG
"RTN","KMPRUTL1",112,0)
 ;
"RTN","KMPRUTL1",113,0)
 W !
"RTN","KMPRUTL1",114,0)
 S KMPRENV="0^RUM turned on and background job queued"
"RTN","KMPRUTL1",115,0)
 ;
"RTN","KMPRUTL1",116,0)
 Q
"RTN","KMPRUTL1",117,0)
 ;
"RTN","KMPRUTL1",118,0)
ENVOUTPT(KMPRENV,KMPRHILT,KMPRCNTR) ;-- environment check output.
"RTN","KMPRUTL1",119,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL1",120,0)
 ; KMPRENV... Environment output (see ENVCHECK).
"RTN","KMPRUTL1",121,0)
 ; KMPRHILT.. Highlight text: 0 - do not highlight.
"RTN","KMPRUTL1",122,0)
 ;                            1 - highlight text.
"RTN","KMPRUTL1",123,0)
 ; KMPRCNTR.. Center text:    0 - do not center text.
"RTN","KMPRUTL1",124,0)
 ;                            1 - center text.
"RTN","KMPRUTL1",125,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL1",126,0)
 ;
"RTN","KMPRUTL1",127,0)
 S KMPRENV=$G(KMPRENV),KMPRHILT=+$G(KMPRHILT),KMPRCNTR=+$G(KMPRCNTR)
"RTN","KMPRUTL1",128,0)
 Q:KMPRENV=""
"RTN","KMPRUTL1",129,0)
 ;
"RTN","KMPRUTL1",130,0)
 N INDENT,IORVOFF,IORVON,TEXT
"RTN","KMPRUTL1",131,0)
 S X="IORVOFF;IORVON" D ENDR^%ZISS
"RTN","KMPRUTL1",132,0)
 S KMPRENV=$P(KMPRENV,U,2)
"RTN","KMPRUTL1",133,0)
 S:KMPRHILT KMPRENV=IORVON_" "_KMPRENV_" "_IORVOFF
"RTN","KMPRUTL1",134,0)
 S TEXT(1)=KMPRENV
"RTN","KMPRUTL1",135,0)
 I KMPRCNTR S INDENT=80-$L(TEXT(1))\2,TEXT(1,"F")="!?"_INDENT
"RTN","KMPRUTL1",136,0)
 D EN^DDIOL(.TEXT)
"RTN","KMPRUTL1",137,0)
 ;
"RTN","KMPRUTL1",138,0)
 Q
"RTN","KMPRUTL1",139,0)
 ;
"RTN","KMPRUTL1",140,0)
PKG(PACKAGE) ; Select Package(s)
"RTN","KMPRUTL1",141,0)
 ; Output Variable:
"RTN","KMPRUTL1",142,0)
 ;   PACKAGE = Contains array of package names
"RTN","KMPRUTL1",143,0)
 ;           = PACKAGE("^") if DTOUT or DUOUT
"RTN","KMPRUTL1",144,0)
 ;
"RTN","KMPRUTL1",145,0)
 N DIR,DTOUT,DUOUT,Y
"RTN","KMPRUTL1",146,0)
 S DIR(0)="FO^1:999:0"
"RTN","KMPRUTL1",147,0)
 F  D  Q:$D(DTOUT)!$D(DUOUT)!(Y="")
"RTN","KMPRUTL1",148,0)
 .S DIR("A")="Select Package Namespace" D ^DIR I Y'="" S PACKAGE(Y)=""
"RTN","KMPRUTL1",149,0)
 .I Y=" " W !,*7,"Please enter a valid package namespace.",!
"RTN","KMPRUTL1",150,0)
 S:$D(DTOUT)!$D(DUOUT)!('$D(PACKAGE)) PACKAGE("^")=""
"RTN","KMPRUTL1",151,0)
 W !
"RTN","KMPRUTL1",152,0)
 Q
"RTN","KMPRUTL1",153,0)
 ;
"RTN","KMPRUTL1",154,0)
QUEBKG ;-- queue background job KMPR BACKGROUND DRIVER
"RTN","KMPRUTL1",155,0)
 N DA,DIK,FDA,ERROR,IEN,IEN1,IENZ,TEXT,X,Y,Z
"RTN","KMPRUTL1",156,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPRUTL1",157,0)
 S TEXT="KMPR BACKGROUND DRIVER"
"RTN","KMPRUTL1",158,0)
 S IEN=$O(^DIC(19,"B",TEXT,0)) Q:'IEN
"RTN","KMPRUTL1",159,0)
 S IEN1=$O(^DIC(19.2,"B",IEN,0))
"RTN","KMPRUTL1",160,0)
 ; if already in file 19.2 then kill.
"RTN","KMPRUTL1",161,0)
 I IEN1 S DIK="^DIC(19.2,",DA=IEN1 D ^DIK
"RTN","KMPRUTL1",162,0)
 ; schedule for tomorrow@1am.
"RTN","KMPRUTL1",163,0)
 S FDA($J,19.2,"+1,",.01)=IEN
"RTN","KMPRUTL1",164,0)
 ; queued to run at what time - set to tomorrow@1am
"RTN","KMPRUTL1",165,0)
 S FDA($J,19.2,"+1,",2)=$$FMADD^XLFDT(DT,1)_".01"
"RTN","KMPRUTL1",166,0)
 ; rescheduling frequency.
"RTN","KMPRUTL1",167,0)
 S FDA($J,19.2,"+1,",6)="1D"
"RTN","KMPRUTL1",168,0)
 D UPDATE^DIE("","FDA($J)",.IENZ,"ERROR")
"RTN","KMPRUTL1",169,0)
 I $D(ERROR) D MSG^DIALOG("W","",60,10,"ERROR")
"RTN","KMPRUTL1",170,0)
 Q
"RTN","KMPU11")
1^12
"RTN","KMPUG")
1^5
"RTN","KMPUG1")
1^6
"RTN","KMPUG2")
1^7
"RTN","KMPUGV")
1^8
"RTN","KMPUTL")
1^10
"RTN","KMPUTL1")
1^11
"VER")
8.0^22.0
**END**
**END**
