Released SD*5.3*416 SEQ #363
Extracted from mail message
**KIDS**:SD*5.3*416^

**INSTALL NAME**
SD*5.3*416
"BLD",5993,0)
SD*5.3*416^SCHEDULING^0^3050613^y
"BLD",5993,1,0)
^^1^1^3050124^
"BLD",5993,1,1,0)
ADDITIONAL PERFORMANCE DATA INTO AUSTIN
"BLD",5993,4,0)
^9.64PA^^
"BLD",5993,"ABPKG")
n
"BLD",5993,"KRN",0)
^9.67PA^8989.52^19
"BLD",5993,"KRN",.4,0)
.4
"BLD",5993,"KRN",.401,0)
.401
"BLD",5993,"KRN",.402,0)
.402
"BLD",5993,"KRN",.403,0)
.403
"BLD",5993,"KRN",.5,0)
.5
"BLD",5993,"KRN",.84,0)
.84
"BLD",5993,"KRN",3.6,0)
3.6
"BLD",5993,"KRN",3.8,0)
3.8
"BLD",5993,"KRN",9.2,0)
9.2
"BLD",5993,"KRN",9.8,0)
9.8
"BLD",5993,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",5993,"KRN",9.8,"NM",1,0)
SDPMHLS^^0^B35184132
"BLD",5993,"KRN",9.8,"NM","B","SDPMHLS",1)

"BLD",5993,"KRN",19,0)
19
"BLD",5993,"KRN",19.1,0)
19.1
"BLD",5993,"KRN",101,0)
101
"BLD",5993,"KRN",409.61,0)
409.61
"BLD",5993,"KRN",771,0)
771
"BLD",5993,"KRN",870,0)
870
"BLD",5993,"KRN",8989.51,0)
8989.51
"BLD",5993,"KRN",8989.52,0)
8989.52
"BLD",5993,"KRN",8994,0)
8994
"BLD",5993,"KRN","B",.4,.4)

"BLD",5993,"KRN","B",.401,.401)

"BLD",5993,"KRN","B",.402,.402)

"BLD",5993,"KRN","B",.403,.403)

"BLD",5993,"KRN","B",.5,.5)

"BLD",5993,"KRN","B",.84,.84)

"BLD",5993,"KRN","B",3.6,3.6)

"BLD",5993,"KRN","B",3.8,3.8)

"BLD",5993,"KRN","B",9.2,9.2)

"BLD",5993,"KRN","B",9.8,9.8)

"BLD",5993,"KRN","B",19,19)

"BLD",5993,"KRN","B",19.1,19.1)

"BLD",5993,"KRN","B",101,101)

"BLD",5993,"KRN","B",409.61,409.61)

"BLD",5993,"KRN","B",771,771)

"BLD",5993,"KRN","B",870,870)

"BLD",5993,"KRN","B",8989.51,8989.51)

"BLD",5993,"KRN","B",8989.52,8989.52)

"BLD",5993,"KRN","B",8994,8994)

"BLD",5993,"QUES",0)
^9.62^^
"BLD",5993,"REQB",0)
^9.611^1^1
"BLD",5993,"REQB",1,0)
SD*5.3*371^1
"BLD",5993,"REQB","B","SD*5.3*371",1)

"MBREQ")
0
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813
"PKG",16,22,1,"PAH",1,0)
416^3050613
"PKG",16,22,1,"PAH",1,1,0)
^^1^1^3050613
"PKG",16,22,1,"PAH",1,1,1,0)
ADDITIONAL PERFORMANCE DATA INTO AUSTIN
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","SDPMHLS")
0^1^B35184132
"RTN","SDPMHLS",1,0)
SDPMHLS ;BPFO/JRC -Build ROU-R01 HL7 message for 'SD ENC PERF MON' application ; 4/2/04 7:12am [5/12/04 10:29am]
"RTN","SDPMHLS",2,0)
 ;;5.3;Scheduling;**313,371,416**;AUG 13, 1993
"RTN","SDPMHLS",3,0)
 ;
"RTN","SDPMHLS",4,0)
QUE ;Queue retroactive XMIT job
"RTN","SDPMHLS",5,0)
 ;Declare variables
"RTN","SDPMHLS",6,0)
 S (STDT,EDT,Y,X)=""
"RTN","SDPMHLS",7,0)
 ;Prompt user for month and year
"RTN","SDPMHLS",8,0)
 S %DT("A")="Please select MONTH and YEAR for TIU's National Rollup to transmit: "
"RTN","SDPMHLS",9,0)
 S %DT="AEMX"
"RTN","SDPMHLS",10,0)
 ;Set %DT not to allow current and future months
"RTN","SDPMHLS",11,0)
 S %DT(0)=-($$FMADD^XLFDT($$NOW^XLFDT(),-32))
"RTN","SDPMHLS",12,0)
 D ^%DT
"RTN","SDPMHLS",13,0)
 ;Check date input if (-1) quit else continue
"RTN","SDPMHLS",14,0)
 I Y<0 Q
"RTN","SDPMHLS",15,0)
 ;Set STDT = user selected month and year and add 1 day
"RTN","SDPMHLS",16,0)
 S STDT=Y+01
"RTN","SDPMHLS",17,0)
 ;Add 32 days to STDT
"RTN","SDPMHLS",18,0)
 S X=$$FMADD^XLFDT(STDT,32)
"RTN","SDPMHLS",19,0)
 ;Subtract number of days that overlap into the following month
"RTN","SDPMHLS",20,0)
 S EDT=$$FMADD^XLFDT(X,-($E(X,6,7)))
"RTN","SDPMHLS",21,0)
 ;Set task variables
"RTN","SDPMHLS",22,0)
 S ZTIO=""
"RTN","SDPMHLS",23,0)
 S ZTDESC="Performance Indicator National Rollup"
"RTN","SDPMHLS",24,0)
 S ZTRTN="EN^SDPMHLS"
"RTN","SDPMHLS",25,0)
 S ZTSAVE("STDT")=""
"RTN","SDPMHLS",26,0)
 S ZTSAVE("EDT")=""
"RTN","SDPMHLS",27,0)
 D ^%ZTLOAD W:$D(ZTSK) "   (Task: ",ZTSK,")"
"RTN","SDPMHLS",28,0)
 K STDT,EDT,X,Y,%DT,%DT("A"),%DT(0)
"RTN","SDPMHLS",29,0)
 Q
"RTN","SDPMHLS",30,0)
EN ;Entry point
"RTN","SDPMHLS",31,0)
 ;Note: Retroactive reports use variables STDT and EDT to pass dates
"RTN","SDPMHLS",32,0)
 ;   STDT - start date, first day of the month for selected month
"RTN","SDPMHLS",33,0)
 ;   EDT - ending date, last day of the month for selected month
"RTN","SDPMHLS",34,0)
 ;Declare variables
"RTN","SDPMHLS",35,0)
 N STDATE,ENDDATE
"RTN","SDPMHLS",36,0)
 N XMTARRY,SCRNARR,SORTARR,OUTARR,X,RDATE
"RTN","SDPMHLS",37,0)
 S SCRNARR="^TMP(""SCRPW"",$J,""SCRNARR"")"
"RTN","SDPMHLS",38,0)
 S SORTARR="^TMP(""SCRPW"",$J,""SORTARR"")"
"RTN","SDPMHLS",39,0)
 S OUTARR="^TMP(""SCRPW"",$J,""OUTARR"")"
"RTN","SDPMHLS",40,0)
 S XMTARRY="^TMP(""HLS"","_$J_")"
"RTN","SDPMHLS",41,0)
 S (STDATE,ENDDATE)=""
"RTN","SDPMHLS",42,0)
 ;Set national screen/sort
"RTN","SDPMHLS",43,0)
 D ROLLUP^SCRPW303(SCRNARR,SORTARR)
"RTN","SDPMHLS",44,0)
 ;Call module to build scratch global
"RTN","SDPMHLS",45,0)
 D GETINFO
"RTN","SDPMHLS",46,0)
 ;Build HL7 Message
"RTN","SDPMHLS",47,0)
 D BLDMSG(OUTARR,XMTARRY)
"RTN","SDPMHLS",48,0)
 ;Send HL7 Message
"RTN","SDPMHLS",49,0)
 I +$O(@XMTARRY@(""))>0 D
"RTN","SDPMHLS",50,0)
 .S J=$$SENDMSG(.XMTARRY)
"RTN","SDPMHLS",51,0)
 ;Send XMIT notifications
"RTN","SDPMHLS",52,0)
 D MSG
"RTN","SDPMHLS",53,0)
 ;Cleanup an quit
"RTN","SDPMHLS",54,0)
 D EXIT
"RTN","SDPMHLS",55,0)
 Q
"RTN","SDPMHLS",56,0)
BLDMSG(OUTARR,XMTARRY) ;Build OBR segment
"RTN","SDPMHLS",57,0)
 ;Input : OUTARR - Ouptut array 
"RTN","SDPMHLS",58,0)
 ;Output: XMTARRY - HL7 temporary array
"RTN","SDPMHLS",59,0)
 ;Declare variables
"RTN","SDPMHLS",60,0)
 N HL,HLFS,HLECH,HLQ,SNODE,PNODE,DIVHL,TYPE,COUNT
"RTN","SDPMHLS",61,0)
 D INIT^HLFNC2("SD ENC PERF MON ORU-R01 SERVER",.HL)
"RTN","SDPMHLS",62,0)
 Q:$O(HL(""))=""
"RTN","SDPMHLS",63,0)
 N VAFEVN,VAFSTR,CNT,MAKE,VAFOBR,VAFOBX,I,XCNT,INFO,DIV,DIVHL
"RTN","SDPMHLS",64,0)
 S CNT=1,XCNT=0
"RTN","SDPMHLS",65,0)
 S MAKE(1)="1"
"RTN","SDPMHLS",66,0)
 S MAKE(4,1,1)="01"
"RTN","SDPMHLS",67,0)
 S MAKE(4,1,2)="VA ENC PERF MONITOR"
"RTN","SDPMHLS",68,0)
 S MAKE(7)=$$HLDATE^HLFNC(RDATE)
"RTN","SDPMHLS",69,0)
 S MAKE(25)="F"
"RTN","SDPMHLS",70,0)
 S MAKE(27,1,4)=$$HLDATE^HLFNC(STDATE,"DT")
"RTN","SDPMHLS",71,0)
 S MAKE(27,1,5)=$$HLDATE^HLFNC(ENDDATE,"DT")
"RTN","SDPMHLS",72,0)
 K VAFOBR
"RTN","SDPMHLS",73,0)
 D MAKEIT^VAFHLU("OBR",.MAKE,.VAFOBR,.VAFOBR)
"RTN","SDPMHLS",74,0)
 M @XMTARRY@(CNT)=VAFOBR
"RTN","SDPMHLS",75,0)
 S XCNT=XCNT+1,CNT=CNT+1
"RTN","SDPMHLS",76,0)
 ;Build OBX segment for facility
"RTN","SDPMHLS",77,0)
 S SNODE=$G(@OUTARR@("SUMMARY"))
"RTN","SDPMHLS",78,0)
 S PNODE=$G(@OUTARR@("SUMMARY","PI"))
"RTN","SDPMHLS",79,0)
 S DIVHL=$P($$SITE^VASITE,"^",3)
"RTN","SDPMHLS",80,0)
 D MAKEOBX
"RTN","SDPMHLS",81,0)
 ;Build OBX segment for division(s)
"RTN","SDPMHLS",82,0)
 S DIV="" F  S DIV=$O(@OUTARR@("SUBTOTAL",DIV)) Q:DIV=""  D
"RTN","SDPMHLS",83,0)
 .N SNODE,PNODE
"RTN","SDPMHLS",84,0)
 .S SNODE=$G(@OUTARR@("SUBTOTAL",DIV))
"RTN","SDPMHLS",85,0)
 .S PNODE=$G(@OUTARR@("SUBTOTAL",DIV,"PI"))
"RTN","SDPMHLS",86,0)
 .S DIVHL=$P(DIV,"^",2)
"RTN","SDPMHLS",87,0)
 .D MAKEOBX
"RTN","SDPMHLS",88,0)
 .Q
"RTN","SDPMHLS",89,0)
 Q
"RTN","SDPMHLS",90,0)
MAKEOBX ;Set type and count for total encounters to bld OBX
"RTN","SDPMHLS",91,0)
 ;Input : SNODE - Temporary counter node for summary
"RTN","SDPMHLS",92,0)
 ;        PNODE - Temporary counter node for PI
"RTN","SDPMHLS",93,0)
 ;        DIVHL - Division and Suffix
"RTN","SDPMHLS",94,0)
 ;        CNT - Temporary array subscript count
"RTN","SDPMHLS",95,0)
 ;        XCNT  - OBX segment counter
"RTN","SDPMHLS",96,0)
 ;        XMTARRY - Temporary HL array ^TMP("HLS",$J)
"RTN","SDPMHLS",97,0)
 S TYPE="CD",COUNT=$P($G(SNODE),U,1),OBID=1 D BLDOBX
"RTN","SDPMHLS",98,0)
 ;Set type and count for counters for ET in days F0 - F10 to bld OBX
"RTN","SDPMHLS",99,0)
 F M4=0:1:10 D
"RTN","SDPMHLS",100,0)
 .S OBID=2
"RTN","SDPMHLS",101,0)
 .S TYPE="F"_M4
"RTN","SDPMHLS",102,0)
 .S COUNT=$P($G(PNODE),U,(M4+1))
"RTN","SDPMHLS",103,0)
 .D BLDOBX
"RTN","SDPMHLS",104,0)
 ;Set type and count for scanned notes and Uniques to bld OBX
"RTN","SDPMHLS",105,0)
 S TYPE="FSPN",OBID=2,COUNT=$P($G(SNODE),U,7) D BLDOBX
"RTN","SDPMHLS",106,0)
 S TYPE="FEP",OBID=2,COUNT=$P($G(SNODE),U,4) D BLDOBX
"RTN","SDPMHLS",107,0)
 S TYPE="FDSS",OBID=2,COUNT=$P($G(SNODE),U,5) D BLDOBX
"RTN","SDPMHLS",108,0)
 ;Set types and count for encounters w/o progress notes and
"RTN","SDPMHLS",109,0)
 ;encounters w/progress notes pending signatures
"RTN","SDPMHLS",110,0)
 S TYPE="FNPN",OBID=2,COUNT=+$P(SNODE,U,1)-(+($P(SNODE,U,2)))-(+($P(SNODE,U,9)))-(+($P(SNODE,U,7)))-(+($P(PNODE,U,11))) D BLDOBX
"RTN","SDPMHLS",111,0)
 S TYPE="FNPS",OBID=2,COUNT=$P($G(SNODE),U,9) D BLDOBX
"RTN","SDPMHLS",112,0)
 Q
"RTN","SDPMHLS",113,0)
BLDOBX ;Build OBX
"RTN","SDPMHLS",114,0)
 ;Ouput : @XMTARRY = Temporary HL array
"RTN","SDPMHLS",115,0)
 ;Set variables
"RTN","SDPMHLS",116,0)
 N MAKE,VAFOBX
"RTN","SDPMHLS",117,0)
 S MAKE(1)=XCNT
"RTN","SDPMHLS",118,0)
 S MAKE(2)="NM"
"RTN","SDPMHLS",119,0)
 S MAKE(3,1,1)=OBID
"RTN","SDPMHLS",120,0)
 S MAKE(3,1,4)=TYPE
"RTN","SDPMHLS",121,0)
 S MAKE(5)=COUNT
"RTN","SDPMHLS",122,0)
 S MAKE(11)="F"
"RTN","SDPMHLS",123,0)
 S MAKE(15)=DIVHL
"RTN","SDPMHLS",124,0)
 K VAFOBX
"RTN","SDPMHLS",125,0)
 D MAKEIT^VAFHLU("OBX",.MAKE,.VAFOBX,.VAFOBX)
"RTN","SDPMHLS",126,0)
 M @XMTARRY@(CNT)=VAFOBX
"RTN","SDPMHLS",127,0)
 S XCNT=XCNT+1,CNT=CNT+1
"RTN","SDPMHLS",128,0)
 Q
"RTN","SDPMHLS",129,0)
SENDMSG(XMTARRY) ;Send HL7 message
"RTN","SDPMHLS",130,0)
 ;Input - @XMTARRY
"RTN","SDPMHLS",131,0)
 ;Output - ARRY4HL7
"RTN","SDPMHLS",132,0)
 N ARRY4HL7,KILLARRY,HL,HLRESLT,HLFS,HLECH,HLQ,HLP
"RTN","SDPMHLS",133,0)
 S XMTARRY=$G(XMTARRY)
"RTN","SDPMHLS",134,0)
 S:'(XMTARRY]"") XMTARRY="^TMP(""HLS"","_$J_")"
"RTN","SDPMHLS",135,0)
 Q:($O(@XMTARRY@(""))="") "-1^Can not send empty message"
"RTN","SDPMHLS",136,0)
 S ARRY4HL7="TMP(""HLS"","_$J_")"
"RTN","SDPMHLS",137,0)
 ;Initialize HL7 variables
"RTN","SDPMHLS",138,0)
 D INIT^HLFNC2("SD ENC PERF MON ORU-R01 SERVER",.HL)
"RTN","SDPMHLS",139,0)
 Q:($O(HL(""))="") "-1^Unable to initialize HL7 variables"
"RTN","SDPMHLS",140,0)
 ;Check if XMTARRY is ^TMP("HLS",$J)
"RTN","SDPMHLS",141,0)
 S KILLARRY=0
"RTN","SDPMHLS",142,0)
 I $NA(@XMTARRY)'=$NA(@ARRY4HL7) D
"RTN","SDPMHLS",143,0)
 .K @ARRY4HL7
"RTN","SDPMHLS",144,0)
 .M @ARRY4HL7=@XMTARRY
"RTN","SDPMHLS",145,0)
 .S KILLARRY=1
"RTN","SDPMHLS",146,0)
 ;Broadcast message
"RTN","SDPMHLS",147,0)
 D GENERATE^HLMA("SD ENC PERF MON ORU-R01 SERVER","GM",1,.HLRESLT,"",.HLP)
"RTN","SDPMHLS",148,0)
 S:('HLRESLT) HLRESLT=$P(HLRESLT,"^",2,3)
"RTN","SDPMHLS",149,0)
 ;Delete ^TMP("HLS",$J) if XMTARRY was different
"RTN","SDPMHLS",150,0)
 K:(KILLARRY) @ARRY4HL7
"RTN","SDPMHLS",151,0)
 Q $G(HLRESLT)
"RTN","SDPMHLS",152,0)
GETINFO ;Get performance monitor data
"RTN","SDPMHLS",153,0)
 ;Input:
"RTN","SDPMHLS",154,0)
 ;    @SCRNARR - Screen array full global reference
"RTN","SDPMHLS",155,0)
 ;    @SORTARR - Sort array full global reference
"RTN","SDPMHLS",156,0)
 ;Output:
"RTN","SDPMHLS",157,0)
 ;    @OUTARR - Ouput array full global reference 
"RTN","SDPMHLS",158,0)
 ;Remember starting time
"RTN","SDPMHLS",159,0)
 S RDATE=$$NOW^XLFDT()
"RTN","SDPMHLS",160,0)
 ;Check STDT and EDT, if 1 set STDATE and ENDDATE
"RTN","SDPMHLS",161,0)
 I $D(STDT)&$D(EDT) S STDATE=STDT,ENDDATE=EDT
"RTN","SDPMHLS",162,0)
 I STDATE="" D
"RTN","SDPMHLS",163,0)
 .;Set start date = 1st day of previous month
"RTN","SDPMHLS",164,0)
 .N X,X1,X2
"RTN","SDPMHLS",165,0)
 .S X1=$$DT^XLFDT(),X2=-30 S:$E(X1,6,7)=31 X2=-31
"RTN","SDPMHLS",166,0)
 .D C^%DTC
"RTN","SDPMHLS",167,0)
 .S STDATE=$E(X,1,5)_"01"
"RTN","SDPMHLS",168,0)
 .;Set end date = start date + 32 minus number of days into next month
"RTN","SDPMHLS",169,0)
 .S X=$$FMADD^XLFDT(STDATE,32)
"RTN","SDPMHLS",170,0)
 .S ENDDATE=$$FMADD^XLFDT(X,-($E(X,6,7)))
"RTN","SDPMHLS",171,0)
 .Q
"RTN","SDPMHLS",172,0)
 ;Set date range in screen array
"RTN","SDPMHLS",173,0)
 S @SCRNARR@("RANGE")=STDATE_"^"_ENDDATE
"RTN","SDPMHLS",174,0)
 ;Get data
"RTN","SDPMHLS",175,0)
 D GETDATA^SDPMUT1(SCRNARR,SORTARR,OUTARR)
"RTN","SDPMHLS",176,0)
 Q
"RTN","SDPMHLS",177,0)
MSG ;Build bulletin and send
"RTN","SDPMHLS",178,0)
 ;Input:
"RTN","SDPMHLS",179,0)
 ;     RDATE - report starting time
"RTN","SDPMHLS",180,0)
 ;Output: 
"RTN","SDPMHLS",181,0)
 ;   Notificaion bulletin to SD ENC PERF MON mail group
"RTN","SDPMHLS",182,0)
 N MSGTEXT,XMTEXT,XMSUB,XMY,XMCHAN,XMZ,XMDUZ
"RTN","SDPMHLS",183,0)
 S MSGTEXT(1)=" "
"RTN","SDPMHLS",184,0)
 S MSGTEXT(2)="Performance Indicator National Rollup was started on "_$$FMTE^XLFDT(RDATE,1)
"RTN","SDPMHLS",185,0)
 S MSGTEXT(3)="Encounter date range: "_$$FMTE^XLFDT(STDATE,1)_" to "_$$FMTE^XLFDT(ENDDATE,1)
"RTN","SDPMHLS",186,0)
 S MSGTEXT(3)="Extraction of data and sending of data completed "_$$FMTE^XLFDT($$NOW^XLFDT(),1)
"RTN","SDPMHLS",187,0)
 S MSGTEXT(4)=" "
"RTN","SDPMHLS",188,0)
 ;Send completion bulletin to current user
"RTN","SDPMHLS",189,0)
 S XMSUB="Performance Indicator National Rollup"
"RTN","SDPMHLS",190,0)
 S XMTEXT="MSGTEXT("
"RTN","SDPMHLS",191,0)
 S XMY("G.SD PM NOTIFICATION TIU")=""
"RTN","SDPMHLS",192,0)
 S XMCHAN=1
"RTN","SDPMHLS",193,0)
 S XMDUZ="Performance Indicator"
"RTN","SDPMHLS",194,0)
 D ^XMD
"RTN","SDPMHLS",195,0)
 Q
"RTN","SDPMHLS",196,0)
EXIT ;Done
"RTN","SDPMHLS",197,0)
 K @SCRNARR,@SORTARR,@OUTARR,@XMTARRY
"RTN","SDPMHLS",198,0)
 Q
"VER")
8.0^22.0
"BLD",5993,6)
^SEQ #363
**END**
**END**
