Released DG*5.3*583 SEQ #650
Extracted from mail message
**KIDS**:DG*5.3*583^

**INSTALL NAME**
DG*5.3*583
"BLD",5926,0)
DG*5.3*583^REGISTRATION^0^3061219^y
"BLD",5926,4,0)
^9.64PA^2^1
"BLD",5926,4,2,0)
2
"BLD",5926,4,2,2,0)
^9.641^2^1
"BLD",5926,4,2,2,2,0)
PATIENT  (File-top level)
"BLD",5926,4,2,2,2,1,0)
^9.6411^27.02^2
"BLD",5926,4,2,2,2,1,.314,0)
CLAIM FOLDER LOCATION
"BLD",5926,4,2,2,2,1,27.02,0)
PREFERRED FACILITY
"BLD",5926,4,2,222)
y^n^p^^^^n^^n
"BLD",5926,4,2,224)
 
"BLD",5926,4,"APDD",2,2)
 
"BLD",5926,4,"APDD",2,2,.314)
 
"BLD",5926,4,"APDD",2,2,27.02)
 
"BLD",5926,4,"B",2,2)
 
"BLD",5926,6)
12^
"BLD",5926,6.3)
20
"BLD",5926,"INIT")
EN^DG53583P
"BLD",5926,"KRN",0)
^9.67PA^8989.52^19
"BLD",5926,"KRN",.4,0)
.4
"BLD",5926,"KRN",.401,0)
.401
"BLD",5926,"KRN",.402,0)
.402
"BLD",5926,"KRN",.403,0)
.403
"BLD",5926,"KRN",.5,0)
.5
"BLD",5926,"KRN",.84,0)
.84
"BLD",5926,"KRN",3.6,0)
3.6
"BLD",5926,"KRN",3.8,0)
3.8
"BLD",5926,"KRN",9.2,0)
9.2
"BLD",5926,"KRN",9.8,0)
9.8
"BLD",5926,"KRN",9.8,"NM",0)
^9.68A^5^4
"BLD",5926,"KRN",9.8,"NM",1,0)
DGREGDD^^0^B3102847
"BLD",5926,"KRN",9.8,"NM",2,0)
DGENELA^^0^B24750309
"BLD",5926,"KRN",9.8,"NM",3,0)
DGENELA1^^0^B76444729
"BLD",5926,"KRN",9.8,"NM",5,0)
DGENUPLA^^0^B45441511
"BLD",5926,"KRN",9.8,"NM","B","DGENELA",2)
 
"BLD",5926,"KRN",9.8,"NM","B","DGENELA1",3)
 
"BLD",5926,"KRN",9.8,"NM","B","DGENUPLA",5)
 
"BLD",5926,"KRN",9.8,"NM","B","DGREGDD",1)
 
"BLD",5926,"KRN",19,0)
19
"BLD",5926,"KRN",19.1,0)
19.1
"BLD",5926,"KRN",101,0)
101
"BLD",5926,"KRN",409.61,0)
409.61
"BLD",5926,"KRN",771,0)
771
"BLD",5926,"KRN",870,0)
870
"BLD",5926,"KRN",8989.51,0)
8989.51
"BLD",5926,"KRN",8989.52,0)
8989.52
"BLD",5926,"KRN",8994,0)
8994
"BLD",5926,"KRN","B",.4,.4)
 
"BLD",5926,"KRN","B",.401,.401)
 
"BLD",5926,"KRN","B",.402,.402)
 
"BLD",5926,"KRN","B",.403,.403)
 
"BLD",5926,"KRN","B",.5,.5)
 
"BLD",5926,"KRN","B",.84,.84)
 
"BLD",5926,"KRN","B",3.6,3.6)
 
"BLD",5926,"KRN","B",3.8,3.8)
 
"BLD",5926,"KRN","B",9.2,9.2)
 
"BLD",5926,"KRN","B",9.8,9.8)
 
"BLD",5926,"KRN","B",19,19)
 
"BLD",5926,"KRN","B",19.1,19.1)
 
"BLD",5926,"KRN","B",101,101)
 
"BLD",5926,"KRN","B",409.61,409.61)
 
"BLD",5926,"KRN","B",771,771)
 
"BLD",5926,"KRN","B",870,870)
 
"BLD",5926,"KRN","B",8989.51,8989.51)
 
"BLD",5926,"KRN","B",8989.52,8989.52)
 
"BLD",5926,"KRN","B",8994,8994)
 
"BLD",5926,"QUES",0)
^9.62^^
"BLD",5926,"REQB",0)
^9.611^1^1
"BLD",5926,"REQB",1,0)
DG*5.3*659^2
"BLD",5926,"REQB","B","DG*5.3*659",1)

"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^n^p^^^^n^^n
"FIA",2,0,10)

"FIA",2,0,11)
 
"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
5.3^DG
"FIA",2,2)
1
"FIA",2,2,.314)
 
"FIA",2,2,27.02)
 
"INIT")
EN^DG53583P
"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
583^3061219^539
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","DG53583P")
0^^B1889297^n/a
"RTN","DG53583P",1,0)
DG53583P ;ALB/TMK - DG*5.3*583 DELETE XREF FIELD .312 ; 09/29/2006
"RTN","DG53583P",2,0)
 ;;5.3;Registration;**583**;Aug 13, 1993;Build 20
"RTN","DG53583P",3,0)
 Q
"RTN","DG53583P",4,0)
EN ; Delete xref 1 on field .312 of patient file and re-compile input templates
"RTN","DG53583P",5,0)
 ;
"RTN","DG53583P",6,0)
 D BMES^XPDUTL("Deleting 'ACFL2' xref on *CLAIM FOLDER LOCATION (#.312) of PATIENT file (#2)")
"RTN","DG53583P",7,0)
 D DELIX^DDMOD(2,.312,1)
"RTN","DG53583P",8,0)
 D BMES^XPDUTL("Re-compiling input template DG LOAD EDIT SCREEN 7 of PATIENT FILE (#2)")
"RTN","DG53583P",9,0)
 N X,Y,DMAX
"RTN","DG53583P",10,0)
 S Y=$O(^DIE("B","DG LOAD EDIT SCREEN 7",""))
"RTN","DG53583P",11,0)
 I Y'="" D
"RTN","DG53583P",12,0)
 . S X=$G(^DIE(Y,"ROU")) I $E(X)="^" S X=$E(X,2,99)
"RTN","DG53583P",13,0)
 . S DMAX=$$ROUSIZE^DILF
"RTN","DG53583P",14,0)
 . D EN^DIEZ
"RTN","DG53583P",15,0)
 . Q
"RTN","DG53583P",16,0)
 D BMES^XPDUTL("Re-compiling input template DVBHINQ UPDATE of PATIENT FILE (#2)")
"RTN","DG53583P",17,0)
 N X,Y,DMAX
"RTN","DG53583P",18,0)
 S Y=$O(^DIE("B","DVBHINQ UPDATE",""))
"RTN","DG53583P",19,0)
 I Y'="" D
"RTN","DG53583P",20,0)
 . S X=$G(^DIE(Y,"ROU")) I $E(X)="^" S X=$E(X,2,99)
"RTN","DG53583P",21,0)
 . S DMAX=$$ROUSIZE^DILF
"RTN","DG53583P",22,0)
 . D EN^DIEZ
"RTN","DG53583P",23,0)
 . Q
"RTN","DG53583P",24,0)
 D BMES^XPDUTL("Step complete ... post install complete")
"RTN","DG53583P",25,0)
 Q
"RTN","DG53583P",26,0)
 ;
"RTN","DGENELA")
0^2^B24750309^B24544789
"RTN","DGENELA",1,0)
DGENELA ;ALB/CJM,KCL,Zoltan/PJR,RGL,LBD,EG,TMK - Patient Eligibility API ; 05/23/2006 5:23 AM
"RTN","DGENELA",2,0)
 ;;5.3;Registration;**121,147,232,314,451,564,631,672,659,583**;Aug 13,1993;Build 20
"RTN","DGENELA",3,0)
 ;
"RTN","DGENELA",4,0)
GET(DFN,DGELG) ;
"RTN","DGENELA",5,0)
 ;Description: Used to obtain the patient eligibility data.
"RTN","DGENELA",6,0)
 ;  The data is placed in the local DGELG array.
"RTN","DGENELA",7,0)
 ;Input:
"RTN","DGENELA",8,0)
 ;  DFN - internal entry number of a record in the PATIENT file
"RTN","DGENELA",9,0)
 ;Output:
"RTN","DGENELA",10,0)
 ;  Function Value - returns 1 on success, 0 on failure
"RTN","DGENELA",11,0)
 ;  DGELG - this is  a local array that will be used to return patient eligibility data. The array subscripts and the fields mapped to are defined below. (pass by reference)
"RTN","DGENELA",12,0)
 ;
"RTN","DGENELA",13,0)
 ;subscript             field name
"RTN","DGENELA",14,0)
 ;"DFN"                ien Patient record
"RTN","DGENELA",15,0)
 ;"ELIG","CODE"        Primary Eligibility Code
"RTN","DGENELA",16,0)
 ;"ELIG","CODE",<ien>  Patient Eligibilities
"RTN","DGENELA",17,0)
 ;"SC"                 Service Connected
"RTN","DGENELA",18,0)
 ;"SCPER"              Service Connected Percentage
"RTN","DGENELA",19,0)
 ;"EFFDT"              SC Combined Effective Date
"RTN","DGENELA",20,0)
 ;"POW"                POW Status Indicated
"RTN","DGENELA",21,0)
 ;"A&A"                Receiving A&A Benefits
"RTN","DGENELA",22,0)
 ;"HB"                 Receiving Housebound Benefits
"RTN","DGENELA",23,0)
 ;"VAPEN"              Receiving a VA Pension
"RTN","DGENELA",24,0)
 ;"VACKAMT"            Total Annual VA Check Amount
"RTN","DGENELA",25,0)
 ;"DISRET"             Military Disability Retirement
"RTN","DGENELA",26,0)
 ;"DISLOD"             Discharge Due to Disability (added with DG 672)
"RTN","DGENELA",27,0)
 ;"MEDICAID"           Medicaid
"RTN","DGENELA",28,0)
 ;"AO"                 Exposed to Agent Orange
"RTN","DGENELA",29,0)
 ;"IR"                 Radiation Exposure Indicated
"RTN","DGENELA",30,0)
 ;"RADEXPM"            Radiation Exposure Method
"RTN","DGENELA",31,0)
 ;"EC"                 Environmental Contaminants
"RTN","DGENELA",32,0)
 ;"MTSTA"              Means Test Status
"RTN","DGENELA",33,0)
 ;P&T                  P&T
"RTN","DGENELA",34,0)
 ;POS                  PERIOD OF SERVICE
"RTN","DGENELA",35,0)
 ;UNEMPLOY             UNEMPLOYABLE
"RTN","DGENELA",36,0)
 ;SCAWDATE             SC AWARD DATE
"RTN","DGENELA",37,0)
 ;RATEINC              RATED INCOMPETENT
"RTN","DGENELA",38,0)
 ;CLAIMNUM             CLAIM NUMBER
"RTN","DGENELA",39,0)
 ;CLAIMLOC             CLAIM FOLDER LOCATION
"RTN","DGENELA",40,0)
 ;VADISAB              RECEIVING VA DISABILITY?
"RTN","DGENELA",41,0)
 ;ELIGSTA              ELIGIBILITY STATUS
"RTN","DGENELA",42,0)
 ;ELIGSTADATE          ELIGIBILITY STATUS DATE
"RTN","DGENELA",43,0)
 ;ELIGVERIF            ELIGIBILITY VERIF. METHOD
"RTN","DGENELA",44,0)
 ;ELIGVSITE            ELIGIBILITY VERIFICATION SITE
"RTN","DGENELA",45,0)
 ;ELIGENTBY            ELIGIBILITY STATUS ENTERED BY
"RTN","DGENELA",46,0)
 ;RATEDIS
"RTN","DGENELA",47,0)
 ;  <COUNT>,"RD"      RATED DISABILITY
"RTN","DGENELA",48,0)
 ;  <COUNT>,"PER"      DISABILITY %
"RTN","DGENELA",49,0)
 ;  <COUNT>,"RDSC"     SERVICE CONNECTED
"RTN","DGENELA",50,0)
 ;  <COUNT>,"RDEXT"    EXTREMITY
"RTN","DGENELA",51,0)
 ;  <COUNT>,"RDORIG"   ORIGINAL RD EFFECTIVE DATE
"RTN","DGENELA",52,0)
 ;  <COUNT>."RDCURR"   CURRENT RD EFFECTIVE DATE
"RTN","DGENELA",53,0)
 ;"VCD"               Veteran Catastrophically Disabled? (#.39)
"RTN","DGENELA",54,0)
 ;"PH"                PURPLE HEART INDICATED
"RTN","DGENELA",55,0)
 ;"AOEXPLOC"          AGENT ORANGE EXPOSURE LOCATION
"RTN","DGENELA",56,0)
 ;"CVELEDT"           COMBAT VETERAN END DATE
"RTN","DGENELA",57,0)
 ;
"RTN","DGENELA",58,0)
 K DGELG
"RTN","DGENELA",59,0)
 S DGELG=""
"RTN","DGENELA",60,0)
 Q:'$D(^DPT(DFN)) 0
"RTN","DGENELA",61,0)
 N NODE,SUBREC,COUNT,CODE,IEN
"RTN","DGENELA",62,0)
 ;
"RTN","DGENELA",63,0)
 S DGELG("DFN")=DFN
"RTN","DGENELA",64,0)
 S DGELG("VCD")=$$VCD^DGENA5(DFN)
"RTN","DGENELA",65,0)
 ;
"RTN","DGENELA",66,0)
 ;
"RTN","DGENELA",67,0)
 S NODE=$G(^DPT(DFN,.29))
"RTN","DGENELA",68,0)
 S DGELG("RATEINC")=$P(NODE,"^",12)
"RTN","DGENELA",69,0)
 ;
"RTN","DGENELA",70,0)
 S NODE=$G(^DPT(DFN,.3))
"RTN","DGENELA",71,0)
 S DGELG("SC")=$P(NODE,"^")
"RTN","DGENELA",72,0)
 S DGELG("SCPER")=$P(NODE,"^",2)
"RTN","DGENELA",73,0)
 S DGELG("P&T")=$P(NODE,"^",4)
"RTN","DGENELA",74,0)
 S DGELG("UNEMPLOY")=$P(NODE,"^",5)
"RTN","DGENELA",75,0)
 S DGELG("SCAWDATE")=$P(NODE,"^",12)
"RTN","DGENELA",76,0)
 S DGELG("VADISAB")=$P(NODE,"^",11)
"RTN","DGENELA",77,0)
 S DGELG("EFFDT")=$P(NODE,"^",14)
"RTN","DGENELA",78,0)
 ;
"RTN","DGENELA",79,0)
 S NODE=$G(^DPT(DFN,.31))
"RTN","DGENELA",80,0)
 S DGELG("CLAIMNUM")=$P(NODE,"^",3)
"RTN","DGENELA",81,0)
 S DGELG("CLAIMLOC")=$P(NODE,"^",4)
"RTN","DGENELA",82,0)
 ;
"RTN","DGENELA",83,0)
 S NODE=$G(^DPT(DFN,.32))
"RTN","DGENELA",84,0)
 S DGELG("POS")=$P(NODE,"^",3)
"RTN","DGENELA",85,0)
 ;
"RTN","DGENELA",86,0)
 S NODE=$G(^DPT(DFN,.36))
"RTN","DGENELA",87,0)
 S DGELG("ELIG","CODE")=$P(NODE,"^") ;primary eligibility
"RTN","DGENELA",88,0)
 S DGELG("DISRET")=$P(NODE,"^",12)
"RTN","DGENELA",89,0)
 S DGELG("DISLOD")=$P(NODE,"^",13)
"RTN","DGENELA",90,0)
 ;
"RTN","DGENELA",91,0)
 S NODE=$G(^DPT(DFN,.38))
"RTN","DGENELA",92,0)
 S DGELG("MEDICAID")=$P(NODE,"^")
"RTN","DGENELA",93,0)
 ;
"RTN","DGENELA",94,0)
 S NODE=$G(^DPT(DFN,.361))
"RTN","DGENELA",95,0)
 S DGELG("ELIGSTA")=$P(NODE,"^")
"RTN","DGENELA",96,0)
 S DGELG("ELIGSTADATE")=$P(NODE,"^",2)
"RTN","DGENELA",97,0)
 S DGELG("ELIGVERIF")=$P(NODE,"^",5)
"RTN","DGENELA",98,0)
 S DGELG("ELIGENTBY")=$P(NODE,"^",6)
"RTN","DGENELA",99,0)
 ;
"RTN","DGENELA",100,0)
 S NODE=$G(^DPT(DFN,.362))
"RTN","DGENELA",101,0)
 S DGELG("VACKAMT")=$P(NODE,"^",20)
"RTN","DGENELA",102,0)
 S DGELG("VAPEN")=$P(NODE,"^",14)
"RTN","DGENELA",103,0)
 S DGELG("A&A")=$P(NODE,"^",12)
"RTN","DGENELA",104,0)
 S DGELG("HB")=$P(NODE,"^",13)
"RTN","DGENELA",105,0)
 ;
"RTN","DGENELA",106,0)
 ;
"RTN","DGENELA",107,0)
 S NODE=$G(^DPT(DFN,.321))
"RTN","DGENELA",108,0)
 S DGELG("AO")=$P(NODE,"^",2)
"RTN","DGENELA",109,0)
 S DGELG("IR")=$P(NODE,"^",3)
"RTN","DGENELA",110,0)
 S DGELG("RADEXPM")=$P(NODE,"^",12)
"RTN","DGENELA",111,0)
 S DGELG("AOEXPLOC")=$P(NODE,"^",13)
"RTN","DGENELA",112,0)
 ;
"RTN","DGENELA",113,0)
 S NODE=$G(^DPT(DFN,.322))
"RTN","DGENELA",114,0)
 S DGELG("EC")=$P(NODE,"^",13)
"RTN","DGENELA",115,0)
 ;
"RTN","DGENELA",116,0)
 S NODE=$G(^DPT(DFN,.52))
"RTN","DGENELA",117,0)
 S DGELG("POW")=$P(NODE,"^",5)
"RTN","DGENELA",118,0)
 S DGELG("CVELEDT")=$P(NODE,"^",15)
"RTN","DGENELA",119,0)
 ;
"RTN","DGENELA",120,0)
 ; Purple Heart Indicator
"RTN","DGENELA",121,0)
 S NODE=$G(^DPT(DFN,.53))
"RTN","DGENELA",122,0)
 S DGELG("PH")=$P(NODE,"^")
"RTN","DGENELA",123,0)
 ;
"RTN","DGENELA",124,0)
 ;means test category
"RTN","DGENELA",125,0)
 S DGELG("MTSTA")=""
"RTN","DGENELA",126,0)
 S IEN=$P($$LST^DGMTU(DFN),"^")
"RTN","DGENELA",127,0)
 I IEN S DGELG("MTSTA")=$P($G(^DGMT(408.31,IEN,0)),"^",3)
"RTN","DGENELA",128,0)
 ;
"RTN","DGENELA",129,0)
 ;get the other eligibilities multiple
"RTN","DGENELA",130,0)
 S SUBREC=0
"RTN","DGENELA",131,0)
 F  S SUBREC=$O(^DPT(DFN,"E",SUBREC)) Q:'SUBREC  D
"RTN","DGENELA",132,0)
 .S CODE=+$G(^DPT(DFN,"E",SUBREC,0))
"RTN","DGENELA",133,0)
 .;
"RTN","DGENELA",134,0)
 .;need to check the "B" x-ref, because when a code is deleted from the multiple, the kill logic is executed BEFORE the data is actually removed - but the "B" x-ref has been deleted at this point
"RTN","DGENELA",135,0)
 .I CODE,$D(^DPT(DFN,"E","B",CODE)) S DGELG("ELIG","CODE",CODE)=SUBREC
"RTN","DGENELA",136,0)
 ;
"RTN","DGENELA",137,0)
 ;rated disability multiple
"RTN","DGENELA",138,0)
 S SUBREC=0,COUNT=0
"RTN","DGENELA",139,0)
 F  S SUBREC=$O(^DPT(DFN,.372,SUBREC)) Q:'SUBREC  D
"RTN","DGENELA",140,0)
 .S NODE=$G(^DPT(DFN,.372,SUBREC,0))
"RTN","DGENELA",141,0)
 .Q:'$P(NODE,"^")
"RTN","DGENELA",142,0)
 .S COUNT=COUNT+1
"RTN","DGENELA",143,0)
 .S DGELG("RATEDIS",COUNT,"RD")=$P(NODE,"^")
"RTN","DGENELA",144,0)
 .S DGELG("RATEDIS",COUNT,"PER")=$P(NODE,"^",2)
"RTN","DGENELA",145,0)
 .S DGELG("RATEDIS",COUNT,"RDSC")=$P(NODE,"^",3)
"RTN","DGENELA",146,0)
 .S DGELG("RATEDIS",COUNT,"RDEXT")=$P(NODE,"^",4)
"RTN","DGENELA",147,0)
 .S DGELG("RATEDIS",COUNT,"RDORIG")=$P(NODE,"^",5)
"RTN","DGENELA",148,0)
 .S DGELG("RATEDIS",COUNT,"RDCURR")=$P(NODE,"^",6)
"RTN","DGENELA",149,0)
 ;
"RTN","DGENELA",150,0)
 Q 1
"RTN","DGENELA",151,0)
 ;
"RTN","DGENELA",152,0)
NATNAME(CODE) ;
"RTN","DGENELA",153,0)
 ;Description: Given an entry in file #8, Eligibility Code file,
"RTN","DGENELA",154,0)
 ;  finds the corresponding entry in file 8.1, MAS Eligbility Code file,
"RTN","DGENELA",155,0)
 ;  and returns the name
"RTN","DGENELA",156,0)
 ;Input:
"RTN","DGENELA",157,0)
 ;  CODE - pointer to file #8
"RTN","DGENELA",158,0)
 ;Output:
"RTN","DGENELA",159,0)
 ;  Function Value - name of corresponding code in file #8.1
"RTN","DGENELA",160,0)
 ;
"RTN","DGENELA",161,0)
 Q:'$G(CODE) ""
"RTN","DGENELA",162,0)
 Q $$CODENAME($P($G(^DIC(8,CODE,0)),"^",9))
"RTN","DGENELA",163,0)
 ;
"RTN","DGENELA",164,0)
NATCODE(CODE) ;
"RTN","DGENELA",165,0)
 ;Description: Given an entry in file #8, Eligibility Code file,
"RTN","DGENELA",166,0)
 ;  finds the corresponding entry in file 8.1, MAS Eligbility Code file
"RTN","DGENELA",167,0)
 ;Input:
"RTN","DGENELA",168,0)
 ;  CODE - pointer to file #8
"RTN","DGENELA",169,0)
 ;Output:
"RTN","DGENELA",170,0)
 ;  Function Value - pointer to file #8.1
"RTN","DGENELA",171,0)
 ;
"RTN","DGENELA",172,0)
 Q:'$G(CODE) ""
"RTN","DGENELA",173,0)
 Q $P($G(^DIC(8,CODE,0)),"^",9)
"RTN","DGENELA",174,0)
 ;
"RTN","DGENELA",175,0)
CODENAME(CODE) ;
"RTN","DGENELA",176,0)
 ;Description: Given a pointer to file #8.1, MAS Eligibility Code file,
"RTN","DGENELA",177,0)
 ;  it returns the name of the code 
"RTN","DGENELA",178,0)
 ;Input:
"RTN","DGENELA",179,0)
 ;  CODE - pointer to file #8.1
"RTN","DGENELA",180,0)
 ;Output:
"RTN","DGENELA",181,0)
 ;  Function Value - name of the code pointed to
"RTN","DGENELA",182,0)
 ;
"RTN","DGENELA",183,0)
 Q:'$G(CODE) ""
"RTN","DGENELA",184,0)
 Q $P($G(^DIC(8.1,CODE,0)),"^")
"RTN","DGENELA",185,0)
 ;
"RTN","DGENELA",186,0)
ELIGSTAT(DFN,DGELG) ;
"RTN","DGENELA",187,0)
 ;Description: Used to get the ELIGIBILITY STATUS and the 
"RTN","DGENELA",188,0)
 ;ELIGIBILITY STATUS DATE of the patient.
"RTN","DGENELA",189,0)
 ;
"RTN","DGENELA",190,0)
 ;Input:
"RTN","DGENELA",191,0)
 ;  DFN - ien of patient record
"RTN","DGENELA",192,0)
 ;
"RTN","DGENELA",193,0)
 ;Ouput:
"RTN","DGENELA",194,0)
 ;  Function Value - 1 on success, 0 on failure
"RTN","DGENELA",195,0)
 ;  DGELG array (pass by reference)
"RTN","DGENELA",196,0)
 ;    "ELIGSTA" - ELIGIBILITY STATUS
"RTN","DGENELA",197,0)
 ;    "ELIGSTADATE" - ELIGIBILITY STATUS DATE
"RTN","DGENELA",198,0)
 ;
"RTN","DGENELA",199,0)
 N NODE,SUCCESS
"RTN","DGENELA",200,0)
 D
"RTN","DGENELA",201,0)
 .S SUCCESS=1
"RTN","DGENELA",202,0)
 .I '$G(DFN) S SUCCESS=0 Q
"RTN","DGENELA",203,0)
 .S NODE=$G(^DPT(DFN,.361))
"RTN","DGENELA",204,0)
 .S DGELG("ELIGSTA")=$P(NODE,"^")
"RTN","DGENELA",205,0)
 .S DGELG("ELIGSTADATE")=$P(NODE,"^",2)
"RTN","DGENELA",206,0)
 Q SUCCESS
"RTN","DGENELA1")
0^3^B76444729^B76520001
"RTN","DGENELA1",1,0)
DGENELA1 ;ALB/CJM,RTK,TDM,PJR,RGL,LBD,EG,TMK - Patient Eligibility API ; 05/23/2006
"RTN","DGENELA1",2,0)
 ;;5.3;Registration;**147,327,314,367,497,451,564,631,672,659,583**;Aug 13,1993;Build 20
"RTN","DGENELA1",3,0)
 ;
"RTN","DGENELA1",4,0)
CHECK(DGELG,DGPAT,DGCDIS,ERRMSG) ;
"RTN","DGENELA1",5,0)
 ;Does validation checks on the eligibility contained in the DGELG array.
"RTN","DGENELA1",6,0)
 ;
"RTN","DGENELA1",7,0)
 ;Input:
"RTN","DGENELA1",8,0)
 ;  DGELG - array containing eligibility data (pass by reference)
"RTN","DGENELA1",9,0)
 ;  DGPAT - array containing patient data (pass by reference)
"RTN","DGENELA1",10,0)
 ;  DGCDIS - array containing catastrophic disability determination (pass by reference)
"RTN","DGENELA1",11,0)
 ;
"RTN","DGENELA1",12,0)
 ;Output:
"RTN","DGENELA1",13,0)
 ;  Function Value - returns 1 if all validation checks passed, 0 otherwise
"RTN","DGENELA1",14,0)
 ;  ERRMSG - returns a message if validations fail (pass by reference)
"RTN","DGENELA1",15,0)
 ;
"RTN","DGENELA1",16,0)
 N SUCCESS,NATCODE,BAD,SUB,CODE,DGONV,DGTEXT,INELDATE
"RTN","DGENELA1",17,0)
 S SUCCESS=0
"RTN","DGENELA1",18,0)
 S ERRMSG=""
"RTN","DGENELA1",19,0)
 ;
"RTN","DGENELA1",20,0)
 D  ;drops out of block on failure
"RTN","DGENELA1",21,0)
 .;
"RTN","DGENELA1",22,0)
 .;get optional arrays if not there
"RTN","DGENELA1",23,0)
 .I '$D(DGPAT),'$$GET^DGENPTA(DGELG("DFN"),.DGPAT) S ERRMSG="PATIENT NOT FOUND" Q
"RTN","DGENELA1",24,0)
 .I '$D(DGCDIS),'$$GET^DGENCDA(DGELG("DFN"),.DGCDIS) S ERRMSG="PATIENT NOT FOUND" Q
"RTN","DGENELA1",25,0)
 .;
"RTN","DGENELA1",26,0)
 .;do field level checks
"RTN","DGENELA1",27,0)
 .S SUB="" F  S SUB=$O(DGELG(SUB)) Q:(SUB="")  I SUB'="ELIG",SUB'="RATEDIS",'$$CHKFIELD(SUB,DGELG(SUB)) S ERRMSG="BAD VALUE, FIELD = "_$$GET1^DID(2,$$FIELD(SUB),"","LABEL") Q
"RTN","DGENELA1",28,0)
 .;
"RTN","DGENELA1",29,0)
 .Q:(SUB'="")  ;didn't finish the loop
"RTN","DGENELA1",30,0)
 .;
"RTN","DGENELA1",31,0)
 .;also check SC % field of Rated Disabilities
"RTN","DGENELA1",32,0)
 .S SUB="" F  S SUB=$O(DGELG("RATEDIS",SUB)) Q:(SUB="")  I '$$CHKFIELD("PER",DGELG("RATEDIS",SUB,"PER")) S ERRMSG="BAD VALUE, FIELD = DISABILITY % OF THE RATED DISABILITIES MULTIPLE" Q
"RTN","DGENELA1",33,0)
 .Q:(SUB'="")  ;didn't finish the loop
"RTN","DGENELA1",34,0)
 .;
"RTN","DGENELA1",35,0)
 .I DGELG("SC")="Y",DGELG("SCPER")="" S ERRMSG="SC% UNSPECIFIED FOR SC VET" Q
"RTN","DGENELA1",36,0)
 .;
"RTN","DGENELA1",37,0)
 .;!! put this check back when POS is added to the Z11 message
"RTN","DGENELA1",38,0)
 .;I DGPAT("VETERAN")="Y",'DGELG("POS") S ERRMSG="POS UNSPECIFIED" Q 
"RTN","DGENELA1",39,0)
 .;
"RTN","DGENELA1",40,0)
 .I 'DGELG("ELIG","CODE") S ERRMSG="PRIMARY ELIGIBILITY IS UNSPECIFIED" Q
"RTN","DGENELA1",41,0)
 .;
"RTN","DGENELA1",42,0)
 .I (DGELG("VACKAMT")>0),(DGELG("A&A")_DGELG("HB")_DGELG("VAPEN")_DGELG("VADISAB")'["Y") S ERRMSG="VA CHECK AMOUNT > 0 BUT INCOME INDICATORS ALL SHOW 'NO'" Q
"RTN","DGENELA1",43,0)
 .;
"RTN","DGENELA1",44,0)
 .;
"RTN","DGENELA1",45,0)
 .;
"RTN","DGENELA1",46,0)
 .I (DGELG("SC")="N"),(DGELG("VADISAB")="Y") S ERRMSG="NSC VETERANS CAN NOT BE RECEIVING VA DISABILITY BENEFITS" Q
"RTN","DGENELA1",47,0)
 .;
"RTN","DGENELA1",48,0)
 .S BAD=1 D  Q:BAD  ;check primary eligibility
"RTN","DGENELA1",49,0)
 ..S NATCODE=$$NATCODE^DGENELA(DGELG("ELIG","CODE"))
"RTN","DGENELA1",50,0)
 ..Q:'NATCODE
"RTN","DGENELA1",51,0)
 ..;
"RTN","DGENELA1",52,0)
 ..I NATCODE=21 S ERRMSG="CATASTROPHICALLY DISABLED NOT ALLOWED AS PRIMARY ELIGIBILITY" Q
"RTN","DGENELA1",53,0)
 ..;
"RTN","DGENELA1",54,0)
 ..I (DGPAT("VETERAN")="Y"),(DGELG("SC")="Y"),(DGELG("SCPER")<50),(NATCODE'=3) S ERRMSG="PRIMARY ELIGIBILITY CODE INCONSISTENT WITH SERVICE CONNECTED PERCENTAGE" Q
"RTN","DGENELA1",55,0)
 ..;
"RTN","DGENELA1",56,0)
 ..I (DGPAT("VETERAN")="Y"),(DGELG("SC")="Y"),(DGELG("SCPER")>49),(NATCODE'=1) S ERRMSG="PRIMARY ELIGIBILITY CODE INCONSISTENT WITH SERVICE CONNECTED PERCENTAGE" Q
"RTN","DGENELA1",57,0)
 ..;
"RTN","DGENELA1",58,0)
 ..S DGONV=$O(^DIC(21,"B","OTHER NON-VETERANS","")),INELDATE=$P($G(^DPT(DFN,.15)),"^",2)
"RTN","DGENELA1",59,0)
 ..I INELDATE'="",DGPAT("INELDATE")'>0,DGELG("POS"),DGELG("POS")=DGONV,'$D(^DIC(21,DGELG("POS"),"E",DGELG("ELIG","CODE"))) D
"RTN","DGENELA1",60,0)
 ...S DGTEXT="Patient was previously determined to be ineligible for VA health care.  Upon review, the individual is determined to be eligible for "
"RTN","DGENELA1",61,0)
 ...S DGTEXT=DGTEXT_"VA care.  Please update period of service and other eligibility data as needed.."
"RTN","DGENELA1",62,0)
 ...D ADDMSG^DGENUPL3(.MSGS,DGTEXT,0)
"RTN","DGENELA1",63,0)
 ..;
"RTN","DGENELA1",64,0)
 ..I (DGPAT("VETERAN")="Y"),(DGELG("SC")="Y"),(NATCODE=1)!(NATCODE=3) S BAD=0 Q  ;primary eligibility OK
"RTN","DGENELA1",65,0)
 ..;
"RTN","DGENELA1",66,0)
 ..I (DGPAT("VETERAN")="Y"),(DGELG("POW")="Y"),NATCODE'=18 S ERRMSG="PRIMARY ELIGIBILITY SHOULD BE PRISONER OF WAR" Q
"RTN","DGENELA1",67,0)
 ..;
"RTN","DGENELA1",68,0)
 ..I (DGPAT("VETERAN")="Y"),(DGELG("POW")="Y"),NATCODE=18 S BAD=0 Q
"RTN","DGENELA1",69,0)
 ..;
"RTN","DGENELA1",70,0)
 ..I (DGPAT("VETERAN")="Y"),(DGELG("PH")="Y"),NATCODE'=22 S ERRMSG="PRIMARY ELIGIBILITY SHOULD BE PURPLE HEART RECIPIENT" Q
"RTN","DGENELA1",71,0)
 ..;
"RTN","DGENELA1",72,0)
 ..I (DGPAT("VETERAN")="Y"),(DGELG("PH")="Y"),NATCODE=22 S BAD=0 Q
"RTN","DGENELA1",73,0)
 ..;
"RTN","DGENELA1",74,0)
 ..; disabled DG*5.3*367, for Inel
"RTN","DGENELA1",75,0)
 ..;I (DGPAT("VETERAN")'=$P($G(^DIC(8.1,NATCODE,0)),"^",5)) S ERRMSG="PRIMARY ELIGIBILTY NOT CONSISTENT WITH VETERAN STATUS" Q
"RTN","DGENELA1",76,0)
 ..;
"RTN","DGENELA1",77,0)
 ..I DGELG("A&A")'="Y",NATCODE=2 S ERRMSG="PRIMARY ELIGIBILITY INCONSISTENT WITH A&A INDICATOR" Q
"RTN","DGENELA1",78,0)
 ..;
"RTN","DGENELA1",79,0)
 ..I DGELG("HB")'="Y",NATCODE=15 S ERRMSG="PRIMARY ELIGIBILITY INCONSISTENT WITH HOUSEBOUND INDICATOR" Q
"RTN","DGENELA1",80,0)
 ..;
"RTN","DGENELA1",81,0)
 ..I DGELG("VAPEN")'="Y",NATCODE=4 S ERRMSG="PRIMARY ELIGIBILITY INCONSISTENT WITH VA PENSION INDICATOR" Q
"RTN","DGENELA1",82,0)
 ..;
"RTN","DGENELA1",83,0)
 ..I DGELG("SC")="Y",((NATCODE=4)!(NATCODE=5)) S ERRMSG="NSC ELIGIBILITY CODE INCONSISTENT WITH SERVICE CONNECTION INDICATOR" Q
"RTN","DGENELA1",84,0)
 ..;
"RTN","DGENELA1",85,0)
 ..I (DGPAT("DOB")>2061231),(NATCODE=16) S ERRMSG="DOB IS INCONSISTENT WITH ELIGIBILITY OF MEXICAN BORDER WAR" Q
"RTN","DGENELA1",86,0)
 ..;
"RTN","DGENELA1",87,0)
 ..I (DGPAT("DOB")>2071231),(NATCODE=17) S ERRMSG="DOB IS INCONSISTENT WITH ELIGIBILITY OF WORLD WAR I" Q
"RTN","DGENELA1",88,0)
 ..;
"RTN","DGENELA1",89,0)
 ..;primary eligibility is good
"RTN","DGENELA1",90,0)
 ..S BAD=0
"RTN","DGENELA1",91,0)
 .;
"RTN","DGENELA1",92,0)
 .S SUCCESS=1
"RTN","DGENELA1",93,0)
 .;check eligibilities multiple
"RTN","DGENELA1",94,0)
 .S CODE=0 F  S CODE=$O(DGELG("ELIG","CODE",CODE)) Q:'CODE  D  Q:('SUCCESS)
"RTN","DGENELA1",95,0)
 ..S NATCODE=$$NATCODE^DGENELA(CODE)
"RTN","DGENELA1",96,0)
 ..Q:'NATCODE
"RTN","DGENELA1",97,0)
 ..I NATCODE=21,'DGCDIS("DATE") S SUCCESS=0,ERRMSG="CATASTROPHICALLY DISABLED ELIGIBILITY REQUIRES CATASTROPHICALLY DISABLED DETERMINATION DATE" Q
"RTN","DGENELA1",98,0)
 .;
"RTN","DGENELA1",99,0)
 Q SUCCESS
"RTN","DGENELA1",100,0)
 ;
"RTN","DGENELA1",101,0)
STORE(DGELG,DGPAT,DGCDIS,ERROR,SKIPCHK) ;
"RTN","DGENELA1",102,0)
 ;Stores an eligibility record for a patient. The patient record must
"RTN","DGENELA1",103,0)
 ;already exist. A lock on the Patient record is required, and is
"RTN","DGENELA1",104,0)
 ;released upon completion.
"RTN","DGENELA1",105,0)
 ;
"RTN","DGENELA1",106,0)
 ;Input:
"RTN","DGENELA1",107,0)
 ;  DGELG - eligibility array (pass by reference)
"RTN","DGENELA1",108,0)
 ;  DGPAT - patient array (optional, pass by reference)
"RTN","DGENELA1",109,0)
 ;  DGCDIS - array containing the catastrophic disability determination (optional, pass by reference)
"RTN","DGENELA1",110,0)
 ;  SKIPCHK - flag, set to 1 means that the consistency checks
"RTN","DGENELA1",111,0)
 ;            were already done & should be skipped
"RTN","DGENELA1",112,0)
 ;
"RTN","DGENELA1",113,0)
 ;Output:
"RTN","DGENELA1",114,0)
 ;  Function Value - returns 1 if successful, otherwise 0
"RTN","DGENELA1",115,0)
 ;  ERROR - in event of failure returns an error message (pass by reference, optional)
"RTN","DGENELA1",116,0)
 ;
"RTN","DGENELA1",117,0)
 N SUCCESS,DATA,FIELD,DA,DFN,COUNT
"RTN","DGENELA1",118,0)
 S DFN=$G(DGELG("DFN"))
"RTN","DGENELA1",119,0)
 S SUCCESS=0
"RTN","DGENELA1",120,0)
 S ERROR=""
"RTN","DGENELA1",121,0)
 ;
"RTN","DGENELA1",122,0)
 D  ;drops out of block on failure
"RTN","DGENELA1",123,0)
 .I '$$LOCK^DGENPTA1(DFN) S ERROR="UNABLE TO LOCK PATIENT RECORD" Q
"RTN","DGENELA1",124,0)
 .I $G(SKIPCHK)'=1,'$$CHECK(.DGELG,.DGPAT,.DGCDIS,.ERROR) Q
"RTN","DGENELA1",125,0)
 .S SUB="" F  S SUB=$O(DGELG(SUB)) Q:SUB=""  D
"RTN","DGENELA1",126,0)
 ..I SUB'="ELIG",SUB'="RATEDIS",SUB'="DFN" S FIELD=$$FIELD(SUB) I FIELD S DATA(FIELD)=DGELG(SUB)
"RTN","DGENELA1",127,0)
 .;
"RTN","DGENELA1",128,0)
 .;don't add the Primary Eligibility unless different, so as to not
"RTN","DGENELA1",129,0)
 .;fire off x-refs unless necessary
"RTN","DGENELA1",130,0)
 .I $P($G(^DPT(DFN,.36)),"^")'=DGELG("ELIG","CODE") S DATA(.361)=DGELG("ELIG","CODE")
"RTN","DGENELA1",131,0)
 .;
"RTN","DGENELA1",132,0)
 .; Only update User Enrollee fields if the incoming UE status is
"RTN","DGENELA1",133,0)
 .; greater than the USER ENROLLEE VALID THROUGH on file.
"RTN","DGENELA1",134,0)
 .I $G(DATA(.3617))<$P($G(^DPT(DFN,.361)),"^",7) K DATA(.3617),DATA(.3618)
"RTN","DGENELA1",135,0)
 .;
"RTN","DGENELA1",136,0)
 .I '$$UPD^DGENDBS(2,DFN,.DATA) S ERROR="FILEMAN FAILED TO UPDATE THE PATIENT RECORD" Q
"RTN","DGENELA1",137,0)
 .;
"RTN","DGENELA1",138,0)
 .;
"RTN","DGENELA1",139,0)
 .;delete eligibilities that do not belong
"RTN","DGENELA1",140,0)
 .D DELELIG^DGENELA2(DFN,.DGELG)
"RTN","DGENELA1",141,0)
 .;
"RTN","DGENELA1",142,0)
 .;overlay Rated Disabilities
"RTN","DGENELA1",143,0)
 .Q:'$$OVERLAY()
"RTN","DGENELA1",144,0)
 .;
"RTN","DGENELA1",145,0)
 .;Add the new Patient Eligibilities
"RTN","DGENELA1",146,0)
 .;Don't add the an eligibility unless different - so as to not
"RTN","DGENELA1",147,0)
 .;fire off the x-refs unless necessary.
"RTN","DGENELA1",148,0)
 .;Also, try to assign ien = the code (see input tranform of the field).
"RTN","DGENELA1",149,0)
 .K DA,DATA
"RTN","DGENELA1",150,0)
 .S DA(1)=DFN
"RTN","DGENELA1",151,0)
 .S DATA(.01)=0
"RTN","DGENELA1",152,0)
 .F  S DATA(.01)=$O(DGELG("ELIG","CODE",DATA(.01))) Q:'DATA(.01)  I '$D(^DPT(DFN,"E","B",DATA(.01))) I '$$ADD^DGENDBS(2.0361,.DA,.DATA,,$S($D(^DPT(DFN,"E",DATA(.01))):0,1:DATA(.01))) S ERROR="FILEMAN FAILED TO ADD PATIENT ELIGIBILITY" Q
"RTN","DGENELA1",153,0)
 .;
"RTN","DGENELA1",154,0)
 .S SUCCESS=1
"RTN","DGENELA1",155,0)
 ;
"RTN","DGENELA1",156,0)
 D UNLOCK^DGENPTA1(DFN)
"RTN","DGENELA1",157,0)
 Q SUCCESS
"RTN","DGENELA1",158,0)
 ;
"RTN","DGENELA1",159,0)
FIELD(SUB) ;
"RTN","DGENELA1",160,0)
 ;given a subscript from the ELIGIBILITY array, returns the field number
"RTN","DGENELA1",161,0)
 ;
"RTN","DGENELA1",162,0)
 Q:SUB="CODE" .361
"RTN","DGENELA1",163,0)
 Q:SUB="SC" .301
"RTN","DGENELA1",164,0)
 Q:SUB="SCPER" .302
"RTN","DGENELA1",165,0)
 Q:SUB="EFFDT" .3014
"RTN","DGENELA1",166,0)
 Q:SUB="POW" .525
"RTN","DGENELA1",167,0)
 Q:SUB="PH" .531
"RTN","DGENELA1",168,0)
 Q:SUB="A&A" .36205
"RTN","DGENELA1",169,0)
 Q:SUB="HB" .36215
"RTN","DGENELA1",170,0)
 Q:SUB="VAPEN" .36235
"RTN","DGENELA1",171,0)
 Q:SUB="VACKAMT" .36295
"RTN","DGENELA1",172,0)
 Q:SUB="DISRET" .3602
"RTN","DGENELA1",173,0)
 Q:SUB="DISLOD" .3603
"RTN","DGENELA1",174,0)
 Q:SUB="MEDICAID" .381
"RTN","DGENELA1",175,0)
 Q:SUB="AO" .32102
"RTN","DGENELA1",176,0)
 Q:SUB="IR" .32103
"RTN","DGENELA1",177,0)
 Q:SUB="EC" .322013
"RTN","DGENELA1",178,0)
 Q:SUB="MTSTA" ""  ;don't map Means Test Category
"RTN","DGENELA1",179,0)
 Q:SUB="P&T" .304
"RTN","DGENELA1",180,0)
 Q:SUB="POS" .323
"RTN","DGENELA1",181,0)
 Q:SUB="UNEMPLOY" .305
"RTN","DGENELA1",182,0)
 Q:SUB="SCAWDATE" .3012
"RTN","DGENELA1",183,0)
 Q:SUB="RATEINC" .293
"RTN","DGENELA1",184,0)
 Q:SUB="CLAIMNUM" .313
"RTN","DGENELA1",185,0)
 Q:SUB="CLAIMLOC" .314
"RTN","DGENELA1",186,0)
 Q:SUB="VADISAB" .3025
"RTN","DGENELA1",187,0)
 Q:SUB="ELIGSTA" .3611
"RTN","DGENELA1",188,0)
 Q:SUB="ELIGSTADATE" .3612
"RTN","DGENELA1",189,0)
 Q:SUB="ELIGVERIF" .3615
"RTN","DGENELA1",190,0)
 Q:SUB="ELIGENTBY" .3616
"RTN","DGENELA1",191,0)
 Q:SUB="RD" .01
"RTN","DGENELA1",192,0)
 Q:SUB="PER" 2
"RTN","DGENELA1",193,0)
 Q:SUB="RDSC" 3
"RTN","DGENELA1",194,0)
 Q:SUB="RDEXT" 4
"RTN","DGENELA1",195,0)
 Q:SUB="RDORIG" 5
"RTN","DGENELA1",196,0)
 Q:SUB="RDCURR" 6
"RTN","DGENELA1",197,0)
 Q:SUB="UEYEAR" .3617
"RTN","DGENELA1",198,0)
 Q:SUB="UESITE" .3618
"RTN","DGENELA1",199,0)
 Q:SUB="AOEXPLOC" .3213
"RTN","DGENELA1",200,0)
 Q:SUB="CVELEDT" .5295
"RTN","DGENELA1",201,0)
 ;
"RTN","DGENELA1",202,0)
 Q ""
"RTN","DGENELA1",203,0)
 ;
"RTN","DGENELA1",204,0)
CHKFIELD(SUB,VAL) ;
"RTN","DGENELA1",205,0)
 ;Description: Does field level validation of the value. Returns 1
"RTN","DGENELA1",206,0)
 ;if the value is good, 0 otherwise.
"RTN","DGENELA1",207,0)
 ;
"RTN","DGENELA1",208,0)
 Q:($G(VAL)="") 1  ;for now, all NULL values assumed okay
"RTN","DGENELA1",209,0)
 ;
"RTN","DGENELA1",210,0)
 N BAD S BAD=0
"RTN","DGENELA1",211,0)
 I (SUB="SCPER")!(SUB="PER"),(+VAL'=VAL)!(VAL>100)!(VAL<0)!(VAL?.E1"."1N.N) S BAD=1
"RTN","DGENELA1",212,0)
 I SUB="VACKAMT",+VAL'=VAL&(VAL'?.N1"."2N)!(VAL>99999)!(VAL<0) S BAD=1
"RTN","DGENELA1",213,0)
 I SUB="DISRET",VAL'=0,VAL'=1 S BAD=1
"RTN","DGENELA1",214,0)
 I SUB="DISLOD",VAL'=0,VAL'=1 S BAD=1
"RTN","DGENELA1",215,0)
 I SUB="MEDICAID",VAL'=0,VAL'=1 S BAD=1
"RTN","DGENELA1",216,0)
 I SUB="RATEINC",VAL'=0,VAL'=1 S BAD=1
"RTN","DGENELA1",217,0)
 I SUB="CLAIMLOC",'$$CFLTF^DGREGDD(VAL) S BAD=1
"RTN","DGENELA1",218,0)
 I SUB="ELIGSTA",VAL'="P",VAL'="R",VAL'="V" S BAD=1
"RTN","DGENELA1",219,0)
 I SUB="POW",VAL'="Y",VAL'="N",VAL'="U" S BAD=1
"RTN","DGENELA1",220,0)
 Q 'BAD
"RTN","DGENELA1",221,0)
 ;
"RTN","DGENELA1",222,0)
 ;
"RTN","DGENELA1",223,0)
OVERLAY() ;
"RTN","DGENELA1",224,0)
 ;Description: Overlay the local Rated Disabilities with whatever HEC
"RTN","DGENELA1",225,0)
 ;sent.
"RTN","DGENELA1",226,0)
 ;
"RTN","DGENELA1",227,0)
 N SUCCESS S SUCCESS=1
"RTN","DGENELA1",228,0)
 ;
"RTN","DGENELA1",229,0)
 ;delete the rated disabilties multiple
"RTN","DGENELA1",230,0)
 D DELRDIS^DGENELA2(DFN)
"RTN","DGENELA1",231,0)
 ;
"RTN","DGENELA1",232,0)
 ;add the rated disabilities
"RTN","DGENELA1",233,0)
 K DATA,DA
"RTN","DGENELA1",234,0)
 S DA(1)=DFN
"RTN","DGENELA1",235,0)
 S COUNT=0
"RTN","DGENELA1",236,0)
 F  S COUNT=$O(DGELG("RATEDIS",COUNT)) Q:'COUNT  D
"RTN","DGENELA1",237,0)
 .S DATA(.01)=DGELG("RATEDIS",COUNT,"RD")
"RTN","DGENELA1",238,0)
 .I DATA(.01) D
"RTN","DGENELA1",239,0)
 ..S DATA(2)=DGELG("RATEDIS",COUNT,"PER")
"RTN","DGENELA1",240,0)
 ..S DATA(3)=DGELG("RATEDIS",COUNT,"RDSC")
"RTN","DGENELA1",241,0)
 ..S DATA(4)=DGELG("RATEDIS",COUNT,"RDEXT")
"RTN","DGENELA1",242,0)
 ..S DATA(5)=DGELG("RATEDIS",COUNT,"RDORIG")
"RTN","DGENELA1",243,0)
 ..S DATA(6)=DGELG("RATEDIS",COUNT,"RDCURR")
"RTN","DGENELA1",244,0)
 ..I '$$ADD^DGENDBS(2.04,.DA,.DATA) S ERROR="FILEMAN FAILED TO ADD RATED DISABILTIES",SUCCESS=0
"RTN","DGENELA1",245,0)
 Q SUCCESS
"RTN","DGENUPLA")
0^5^B45441511^B38035486
"RTN","DGENUPLA",1,0)
DGENUPLA ;ALB/CKN,TDM,PJR,RGL,EG,TMK - PROCESS INCOMING (Z11 EVENT TYPE) HL7 MESSAGES ;05/23/2006 5:32 AM
"RTN","DGENUPLA",2,0)
 ;;5.3;REGISTRATION;**397,379,497,451,564,672,659,583**;Aug 13,1993;Build 20
"RTN","DGENUPLA",3,0)
 ;
"RTN","DGENUPLA",4,0)
 ;***************************************************************
"RTN","DGENUPLA",5,0)
 ; This routine was created because DGENUPL2 had reached it's
"RTN","DGENUPLA",6,0)
 ; maximum size, therefore no new code could not be added.  All
"RTN","DGENUPLA",7,0)
 ; code that existed in the ZEL and OBX tags of DGENUPL2 has
"RTN","DGENUPLA",8,0)
 ; been moved to the ZEL and OBX tags of DGENUPLA.  A line of code
"RTN","DGENUPLA",9,0)
 ; was placed in ZEL^DGENUPL2 to call ZEL^DGENUPLA.  A line of
"RTN","DGENUPLA",10,0)
 ; code was placed in OBX^DGENUPL2 to call OBX^DGENUPLA.
"RTN","DGENUPLA",11,0)
 ; Any routine that calls ZEL^DGENUPL2 or OBX^DGENUPL2 will not
"RTN","DGENUPLA",12,0)
 ; be affected by this change.
"RTN","DGENUPLA",13,0)
 ;***************************************************************
"RTN","DGENUPLA",14,0)
 ;
"RTN","DGENUPLA",15,0)
 ;***************************************************************
"RTN","DGENUPLA",16,0)
 ;The following procedures parse particular segment types.
"RTN","DGENUPLA",17,0)
 ;Input:SEG(),MSGID
"RTN","DGENUPLA",18,0)
 ;Output:DGPAT(),DGELG(),DGENR(),DGNTR(),DGMST(),ERROR
"RTN","DGENUPLA",19,0)
 ;***************************************************************
"RTN","DGENUPLA",20,0)
 ;
"RTN","DGENUPLA",21,0)
 ;
"RTN","DGENUPLA",22,0)
ZEL(COUNT) ;
"RTN","DGENUPLA",23,0)
 N CODE
"RTN","DGENUPLA",24,0)
 S CODE=$$CONVERT^DGENUPL1(SEG(2),"ELIGIBILITY",.ERROR)
"RTN","DGENUPLA",25,0)
 I ERROR D  Q
"RTN","DGENUPLA",26,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"ELIGIBILITY CODE "_SEG(2)_" NOT FOUND IN ELIGIBILTIY CODE FILE",.ERRCOUNT)
"RTN","DGENUPLA",27,0)
 I COUNT=1 D
"RTN","DGENUPLA",28,0)
 .S DGELG("ELIG","CODE")=CODE
"RTN","DGENUPLA",29,0)
 .;S DGELG("DISRET")=$$CONVERT^DGENUPL1(SEG(5))
"RTN","DGENUPLA",30,0)
 .S DGELG("DISRET")=$$DISCONV(SEG(5)) ;DG*5.3*672
"RTN","DGENUPLA",31,0)
 .I ERROR D  Q
"RTN","DGENUPLA",32,0)
 ..D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 5",.ERRCOUNT)
"RTN","DGENUPLA",33,0)
 .S DGELG("CLAIMNUM")=$$CONVERT^DGENUPL1(SEG(6))
"RTN","DGENUPLA",34,0)
 .S DGELG("CLAIMLOC")=$$SITECNV(SEG(7))
"RTN","DGENUPLA",35,0)
 .;
"RTN","DGENUPLA",36,0)
 .S DGPAT("VETERAN")=$$CONVERT^DGENUPL1(SEG(8),"Y/N",.ERROR)
"RTN","DGENUPLA",37,0)
 .I ERROR D  Q
"RTN","DGENUPLA",38,0)
 ..D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 8",.ERRCOUNT)
"RTN","DGENUPLA",39,0)
 .S DGELG("ELIGSTA")=$$CONVERT^DGENUPL1(SEG(10))
"RTN","DGENUPLA",40,0)
 .S DGELG("ELIGSTADATE")=$$CONVERT^DGENUPL1(SEG(11),"DATE",.ERROR)
"RTN","DGENUPLA",41,0)
 .I ERROR D  Q
"RTN","DGENUPLA",42,0)
 ..D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 11",.ERRCOUNT)
"RTN","DGENUPLA",43,0)
 .S DGELG("ELIGVERIF")=$$CONVERT^DGENUPL1(SEG(13))
"RTN","DGENUPLA",44,0)
 .S DGELG("A&A")=$$CONVERT^DGENUPL1(SEG(14),"Y/N",.ERROR)
"RTN","DGENUPLA",45,0)
 .I ERROR D  Q
"RTN","DGENUPLA",46,0)
 ..D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 14",.ERRCOUNT)
"RTN","DGENUPLA",47,0)
 .S DGELG("HB")=$$CONVERT^DGENUPL1(SEG(15),"Y/N",.ERROR)
"RTN","DGENUPLA",48,0)
 .I ERROR D  Q
"RTN","DGENUPLA",49,0)
 ..D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 15",.ERRCOUNT)
"RTN","DGENUPLA",50,0)
 .S DGELG("VAPEN")=$$CONVERT^DGENUPL1(SEG(16),"Y/N",.ERROR)
"RTN","DGENUPLA",51,0)
 .I ERROR D  Q
"RTN","DGENUPLA",52,0)
 ..D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 16",.ERRCOUNT)
"RTN","DGENUPLA",53,0)
 .S DGELG("VADISAB")=$$CONVERT^DGENUPL1(SEG(17),"Y/N",.ERROR)
"RTN","DGENUPLA",54,0)
 .I ERROR D  Q
"RTN","DGENUPLA",55,0)
 ..D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 17",.ERRCOUNT)
"RTN","DGENUPLA",56,0)
 .S DGELG("AO")=$$CONVERT^DGENUPL1(SEG(18),"Y/N",.ERROR)
"RTN","DGENUPLA",57,0)
 .N AOERR S AOERR=ERROR            ;  See SEG(29) below.
"RTN","DGENUPLA",58,0)
 .I ERROR D  Q
"RTN","DGENUPLA",59,0)
 ..D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 18",.ERRCOUNT)
"RTN","DGENUPLA",60,0)
 .S (DGPAT("IR"),DGELG("IR"))=$$CONVERT^DGENUPL1(SEG(19),"Y/N",.ERROR)
"RTN","DGENUPLA",61,0)
 .I ERROR D  Q
"RTN","DGENUPLA",62,0)
 ..D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 19",.ERRCOUNT)
"RTN","DGENUPLA",63,0)
 .S DGELG("EC")=$$CONVERT^DGENUPL1(SEG(20),"Y/N",.ERROR)
"RTN","DGENUPLA",64,0)
 .I ERROR D  Q
"RTN","DGENUPLA",65,0)
 ..D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 20",.ERRCOUNT)
"RTN","DGENUPLA",66,0)
 .S (DGPAT("RADEXPM"),DGELG("RADEXPM"))=$G(SEG(22))
"RTN","DGENUPLA",67,0)
 .S ERROR=$S(DGELG("RADEXPM")="":0,",2,3,4,5,6,7,"[(","_DGELG("RADEXPM")_","):0,1:1)
"RTN","DGENUPLA",68,0)
 .I ERROR D  Q
"RTN","DGENUPLA",69,0)
 ..D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 22",.ERRCOUNT)
"RTN","DGENUPLA",70,0)
 .;
"RTN","DGENUPLA",71,0)
 .S DGELG("VACKAMT")=$$CONVERT^DGENUPL1(SEG(21))
"RTN","DGENUPLA",72,0)
 .;
"RTN","DGENUPLA",73,0)
 .;Parse MST data into DGMST array from sequences 23, 24, 25 of ZEL segment
"RTN","DGENUPLA",74,0)
 . S DGMST("MSTSTAT")=SEG(23)
"RTN","DGENUPLA",75,0)
 . S DGMST("MSTDT")=$$CONVERT^DGENUPL1(SEG(24),"TS",.ERROR)
"RTN","DGENUPLA",76,0)
 . I ERROR D  Q
"RTN","DGENUPLA",77,0)
 . . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 24",.ERRCOUNT)
"RTN","DGENUPLA",78,0)
 . S DGMST("MSTST")=$$CONVERT^DGENUPL1(SEG(25),"INSTITUTION",.ERROR)
"RTN","DGENUPLA",79,0)
 . I ERROR D  Q
"RTN","DGENUPLA",80,0)
 . . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 25",.ERRCOUNT)
"RTN","DGENUPLA",81,0)
 .;
"RTN","DGENUPLA",82,0)
 . S DGELG("AOEXPLOC")=SEG(29)
"RTN","DGENUPLA",83,0)
 .; Logic enhanced during SQA of patch 451.  AOERR from SEG(18) above.
"RTN","DGENUPLA",84,0)
 . I 'AOERR,DGELG("AO")'="Y",DGELG("AOEXPLOC")="" S DGELG("AOEXPLOC")="@"
"RTN","DGENUPLA",85,0)
 . S DGELG("UEYEAR")=$$CONVERT^DGENUPL1(SEG(34),"DATE",.ERROR)
"RTN","DGENUPLA",86,0)
 . I ERROR D  Q
"RTN","DGENUPLA",87,0)
 . . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 34",.ERRCOUNT)
"RTN","DGENUPLA",88,0)
 . S DGELG("UESITE")=$$CONVERT^DGENUPL1(SEG(35),"INSTITUTION",.ERROR)
"RTN","DGENUPLA",89,0)
 . I ERROR D  Q
"RTN","DGENUPLA",90,0)
 . . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 35",.ERRCOUNT)
"RTN","DGENUPLA",91,0)
 . S DGELG("CVELEDT")=$$CONVERT^DGENUPL1(SEG(38),"DATE",.ERROR)
"RTN","DGENUPLA",92,0)
 . I ERROR D  Q
"RTN","DGENUPLA",93,0)
 . . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 38",.ERRCOUNT)
"RTN","DGENUPLA",94,0)
 . I $G(DGELG("DISLOD"))="" S DGELG("DISLOD")=$$CONVERT^DGENUPL1(SEG(39),"1/0",.ERROR) ;Discharge due to Disability - DG*5.3*672
"RTN","DGENUPLA",95,0)
 . I ERROR D  Q
"RTN","DGENUPLA",96,0)
 . . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 39",.ERRCOUNT)
"RTN","DGENUPLA",97,0)
 ;
"RTN","DGENUPLA",98,0)
 I COUNT>1 D
"RTN","DGENUPLA",99,0)
 .S DGELG("ELIG","CODE",CODE)=""
"RTN","DGENUPLA",100,0)
 Q
"RTN","DGENUPLA",101,0)
 ;
"RTN","DGENUPLA",102,0)
OBX ;
"RTN","DGENUPLA",103,0)
 N OBXPCE,OBXVAL,OBXTBL,I,CS,SS,RS
"RTN","DGENUPLA",104,0)
 I $G(HLECH)'="~|\&" N HLECH S HLECH="~|\&"
"RTN","DGENUPLA",105,0)
 I $G(HLFS)="" N HLFS S HLFS="^"
"RTN","DGENUPLA",106,0)
 S CS=$E(HLECH,1),SS=$E(HLECH,4),RS=$E(HLECH,2)
"RTN","DGENUPLA",107,0)
 I $G(SEG(3))=("38.1"_$E(HLECH)_"SECURITY LOG") D
"RTN","DGENUPLA",108,0)
 . N LEVEL
"RTN","DGENUPLA",109,0)
 . S LEVEL=$P(SEG(5),$E(HLECH))
"RTN","DGENUPLA",110,0)
 . S DGSEC("LEVEL")=$$CONVERT^DGENUPL1(LEVEL,"1/0",.ERROR)
"RTN","DGENUPLA",111,0)
 . I ERROR D  Q
"RTN","DGENUPLA",112,0)
 . . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, OBX SEGMENT, SEQ 5",.ERRCOUNT)
"RTN","DGENUPLA",113,0)
 . S DGSEC("SOURCE")=$$CONVERT^DGENUPL1(SEG(16))
"RTN","DGENUPLA",114,0)
 ;
"RTN","DGENUPLA",115,0)
 I $G(SEG(3))=("VISTA"_CS_"28.11") D
"RTN","DGENUPLA",116,0)
 . S OBXTBL(1)="NTR^Y",OBXTBL(2)="AVI^Y",OBXTBL(3)="SUB^Y"
"RTN","DGENUPLA",117,0)
 . S OBXTBL(4)="HNC^Y",OBXTBL(5)="NTR^N",OBXTBL(6)="AVI^N"
"RTN","DGENUPLA",118,0)
 . S OBXTBL(7)="SUB^N",OBXTBL(8)="HNC^N",OBXTBL(9)="NTR^U"
"RTN","DGENUPLA",119,0)
 . F I=1:1:$L($G(SEG(5)),RS) D
"RTN","DGENUPLA",120,0)
 . . S OBXPCE=$P($G(SEG(5)),RS,I),OBXVAL=$P($G(OBXPCE),CS)
"RTN","DGENUPLA",121,0)
 . . S DGNTR($P($G(OBXTBL(OBXVAL)),"^"))=$P($G(OBXTBL(OBXVAL)),"^",2)
"RTN","DGENUPLA",122,0)
 . I $G(SEG(12))'="" S DGNTR("HDT")=$$CONVERT^DGENUPL1(SEG(12),"TS",.ERROR)
"RTN","DGENUPLA",123,0)
 . S DGNTR("VDT")=$$CONVERT^DGENUPL1(SEG(14),"TS",.ERROR)
"RTN","DGENUPLA",124,0)
 . S DGNTR("VSIT")=$$CONVERT^DGENUPL1(SEG(15),"INSTITUTION",.ERROR)
"RTN","DGENUPLA",125,0)
 . S DGNTR("HSIT")=$P($P($G(SEG(16)),CS,14),SS,2)
"RTN","DGENUPLA",126,0)
 . I DGNTR("HSIT")'="" S DGNTR("HSIT")=$$CONVERT^DGENUPL1($G(DGNTR("HSIT")),"INSTITUTION",.ERROR)
"RTN","DGENUPLA",127,0)
 . S DGNTR("VER")=$P($G(SEG(17)),CS)
"RTN","DGENUPLA",128,0)
 Q
"RTN","DGENUPLA",129,0)
DISCONV(VAL,ERROR) ;
"RTN","DGENUPLA",130,0)
 ;DG*5.3*672 - Military Disability conversion to new values
"RTN","DGENUPLA",131,0)
 N DISRET
"RTN","DGENUPLA",132,0)
 S ERROR=0
"RTN","DGENUPLA",133,0)
 I VAL="" Q VAL
"RTN","DGENUPLA",134,0)
 I VAL="""""" S VAL="@" Q VAL
"RTN","DGENUPLA",135,0)
 I ((VAL="Y")!(VAL="N")) D  Q DISRET
"RTN","DGENUPLA",136,0)
 . S DISRET=$$CONVERT^DGENUPL1(VAL,"1/0",.ERROR)
"RTN","DGENUPLA",137,0)
 S (DISRET,DGELG("DISLOD"))=$S(VAL=0:0,VAL=1:1,VAL=2:1,VAL=3:0,1:"")
"RTN","DGENUPLA",138,0)
 I DISRET="" S ERROR=1 Q VAL
"RTN","DGENUPLA",139,0)
 Q DISRET
"RTN","DGENUPLA",140,0)
 ;
"RTN","DGENUPLA",141,0)
SITECNV(STRING) ; Convert claim folder loc (site # or site # and name) to
"RTN","DGENUPLA",142,0)
 ; ptr to file 4
"RTN","DGENUPLA",143,0)
 N SITE
"RTN","DGENUPLA",144,0)
 S SITE=""
"RTN","DGENUPLA",145,0)
 I STRING'="" D
"RTN","DGENUPLA",146,0)
 . N SUB,START,END
"RTN","DGENUPLA",147,0)
 . ; Find site ien if only site # is returned
"RTN","DGENUPLA",148,0)
 . I $O(^DIC(4,"D",STRING,0)) S SITE=$O(^DIC(4,"D",STRING,0)) Q
"RTN","DGENUPLA",149,0)
 . ; Check if name is concatenated onto site # to find site ien
"RTN","DGENUPLA",150,0)
 . S SUB=""
"RTN","DGENUPLA",151,0)
 . F  S SUB=$O(^DIC(4,"D",SUB)) Q:SUB=""  I $E(SUB,1,3)=$E(STRING,1,3),$$CHK(SUB,STRING) S SITE=$O(^DIC(4,"D",SUB,0)) Q
"RTN","DGENUPLA",152,0)
 ; SITE is the pointer to file 4 or null for site not found
"RTN","DGENUPLA",153,0)
 Q SITE
"RTN","DGENUPLA",154,0)
 ;
"RTN","DGENUPLA",155,0)
CHK(SUB,STRING) ;
"RTN","DGENUPLA",156,0)
 N IEN,X,STN,RET
"RTN","DGENUPLA",157,0)
 I SUB=STRING Q 1
"RTN","DGENUPLA",158,0)
 S RET=0
"RTN","DGENUPLA",159,0)
 S IEN=+$O(^DIC(4,"D",SUB,""))
"RTN","DGENUPLA",160,0)
 I IEN D
"RTN","DGENUPLA",161,0)
 . S X=$P($G(^DIC(4,IEN,0)),U),STN=$P($G(^(99)),U)
"RTN","DGENUPLA",162,0)
 . ; assume institution file names will be the same on HEC and VistA
"RTN","DGENUPLA",163,0)
 . I STN=SUB,X'="",$E($P(STRING,SUB,2,999),1,40)=X S RET=1
"RTN","DGENUPLA",164,0)
 Q RET
"RTN","DGENUPLA",165,0)
 ;
"RTN","DGREGDD")
0^1^B3102847^B256845
"RTN","DGREGDD",1,0)
DGREGDD ;ALB/REW,TMK - REGISTRATION PATIENT FILE MUMPS X-REFS ; 28-MAR-06
"RTN","DGREGDD",2,0)
 ;;5.3;Registration;**583**;Aug 13, 1993;Build 20
"RTN","DGREGDD",3,0)
 ;
"RTN","DGREGDD",4,0)
 ; Calls to ^XUAF4: DBIA2171
"RTN","DGREGDD",5,0)
 ;
"RTN","DGREGDD",6,0)
SET(DFN,X) ; XREF SET STATEMENT FOR PATIENT, CLAIM FOLDER LOCATION (#2,.314)
"RTN","DGREGDD",7,0)
 ; TRIGGERS THE FREE TEXT VALUE OF FLD .312 TO STATION#_STATION NAME
"RTN","DGREGDD",8,0)
 Q:'$G(DFN)!($G(X)="")
"RTN","DGREGDD",9,0)
 N DGROOT,DGNM,DGST,DGX,DGZ,Y
"RTN","DGREGDD",10,0)
 S DGST=$$STA^XUAF4(X)
"RTN","DGREGDD",11,0)
 D F4^XUAF4(DGST,.DGZ)
"RTN","DGREGDD",12,0)
 S DGX="",DGNM=$G(DGZ("NAME"))
"RTN","DGREGDD",13,0)
 S:DGST DGX=$E(DGST_DGNM,1,40)
"RTN","DGREGDD",14,0)
 S DGROOT(2,DFN_",",.312)=DGX
"RTN","DGREGDD",15,0)
 D FILE^DIE(,"DGROOT")
"RTN","DGREGDD",16,0)
 Q
"RTN","DGREGDD",17,0)
 ;
"RTN","DGREGDD",18,0)
KILL(DFN) ; XREF KILL STATEMENT FOR PATIENT, CLAIM FOLDER LOCATION (#2,.314)
"RTN","DGREGDD",19,0)
 ; TRIGGERS THE FREE TEXT VALUE OF FIELD .312 TO NULL (deletes it)
"RTN","DGREGDD",20,0)
 Q:'$G(DFN)
"RTN","DGREGDD",21,0)
 N DGROOT,X,Y
"RTN","DGREGDD",22,0)
 S DGROOT(2,DFN_",",.312)="@"
"RTN","DGREGDD",23,0)
 D FILE^DIE(,"DGROOT")
"RTN","DGREGDD",24,0)
 Q
"RTN","DGREGDD",25,0)
 ;
"RTN","DGREGDD",26,0)
CFLTF(DGI) ;CLAIM FOLDER LOCATION screen of INSTITUTIONS with specific types
"RTN","DGREGDD",27,0)
 ; DGI = facility (pointer to file 4)
"RTN","DGREGDD",28,0)
 ; Returns 1 if valid facility type for facility ien DGI
"RTN","DGREGDD",29,0)
 ; Returns 0 if invalid facility type for facility ien DGI
"RTN","DGREGDD",30,0)
 N DGARR,DGX,OK,X,Y,Z
"RTN","DGREGDD",31,0)
 S OK=0
"RTN","DGREGDD",32,0)
 I $G(DGI)="" G CFLTFQ
"RTN","DGREGDD",33,0)
 F Z="RO","RO&IC","RO-OC","RPC","M&ROC","M&ROC(M&RO)" S DGARR(Z)=""
"RTN","DGREGDD",34,0)
 D F4^XUAF4($$STA^XUAF4(+DGI),.DGX,"A")
"RTN","DGREGDD",35,0)
 I $G(DGX("TYPE"))'="",$D(DGARR(DGX("TYPE"))) S OK=1
"RTN","DGREGDD",36,0)
CFLTFQ Q OK
"RTN","DGREGDD",37,0)
 ;
"RTN","DGREGDD",38,0)
PFTF(DGI) ;PREFERRED FACILITY screens of INSTITUTIONS for valid facility types
"RTN","DGREGDD",39,0)
 ; DGI = facility (pointer to file 4)
"RTN","DGREGDD",40,0)
 ; Returns 1 if valid facility type for facility
"RTN","DGREGDD",41,0)
 ; Returns 0 if invalid facility type for facility
"RTN","DGREGDD",42,0)
 N DGARR,OK,X,Y,Z
"RTN","DGREGDD",43,0)
 S OK=0
"RTN","DGREGDD",44,0)
 I $G(DGI)="" G PFTFQ
"RTN","DGREGDD",45,0)
 F Z="CBOC","HCS","HEALTHCARE","M&ROC","MOC","MORC","NETWORK","NHC","OC","OCMC","OCS","OPC","ORC","RO-OC","SATELLITE","SOC","VAMC","VANPH","VA ROSEBERG" S DGARR(Z)=""
"RTN","DGREGDD",46,0)
 D F4^XUAF4($$STA^XUAF4(+DGI),.DGX,"A")
"RTN","DGREGDD",47,0)
 I $G(DGX("TYPE"))'="",$D(DGARR(DGX("TYPE"))) S OK=1
"RTN","DGREGDD",48,0)
PFTFQ Q OK
"RTN","DGREGDD",49,0)
 ;
"VER")
8.0^22.0
"^DD",2,2,.314,0)
CLAIM FOLDER LOCATION^*P4'X^DIC(4,^.31;4^S DIC("S")="I $$CFLTF^DGREGDD(Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",2,2,.314,1,0)
^.1
"^DD",2,2,.314,1,1,0)
2^ACFL4^MUMPS
"^DD",2,2,.314,1,1,1)
D SET^DGREGDD(DA,X)
"^DD",2,2,.314,1,1,2)
D KILL^DGREGDD(DA)
"^DD",2,2,.314,1,1,"%D",0)
^.101^2^2^3060328^^^^
"^DD",2,2,.314,1,1,"%D",1,0)
This sets the *CLAIM FOLDER LOCATION field to be the station number
"^DD",2,2,.314,1,1,"%D",2,0)
concatenated with the name of the institution.
"^DD",2,2,.314,1,1,"DT")
3060328
"^DD",2,2,.314,3)
Enter the location of the patient's claim folder  
"^DD",2,2,.314,12)
Only allow active sites with station # and valid facility type
"^DD",2,2,.314,12.1)
S DIC("S")="I $$CFLTF^DGREGDD(Y)"
"^DD",2,2,.314,21,0)
^.001^9^9^3060329^^
"^DD",2,2,.314,21,1,0)
This is the location of the patient's claim folder.  It must be an entry
"^DD",2,2,.314,21,2,0)
in the INSTITUTION File.
"^DD",2,2,.314,21,3,0)
Valid facility types:
"^DD",2,2,.314,21,4,0)
RO           (Regional Office)
"^DD",2,2,.314,21,5,0)
RO&IC        (Regional Office and Insurance Center)
"^DD",2,2,.314,21,6,0)
RO-OC        (Regional Office - Outpatient Clinic)
"^DD",2,2,.314,21,7,0)
RPC          (Record Processing Center)
"^DD",2,2,.314,21,8,0)
M&ROC        (Medical and Regional Office Center)
"^DD",2,2,.314,21,9,0)
M&ROC (M&RO) (Medical and Regional Office Center)
"^DD",2,2,.314,23,0)
^.001^1^1^3060329^^^^
"^DD",2,2,.314,23,1,0)
This is a pointer to the INSTITUTION File (#4).
"^DD",2,2,.314,"DT")
3060930
"^DD",2,2,27.02,0)
PREFERRED FACILITY^*P4'X^DIC(4,^ENR;2^S DIC("S")="I $$PFTF^DGREGDD(Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",2,2,27.02,1,0)
^.1
"^DD",2,2,27.02,1,1,0)
2^AENR2702^MUMPS
"^DD",2,2,27.02,1,1,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,27.02,1,1,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,27.02,1,1,3)
DO NOT DELETE
"^DD",2,2,27.02,1,1,"%D",0)
^.101^2^2^3010117^^^
"^DD",2,2,27.02,1,1,"%D",1,0)
This cross-reference is used to notify HEC of changes that may affect
"^DD",2,2,27.02,1,1,"%D",2,0)
enrollment. 
"^DD",2,2,27.02,1,1,"DT")
2980213
"^DD",2,2,27.02,3)
Enter the facility that the patient chooses to designate as his primary location for care.
"^DD",2,2,27.02,12)
Selected facility must be a treating facility with a valid facility type.
"^DD",2,2,27.02,12.1)
S DIC("S")="I $$PFTF^DGREGDD(Y)"
"^DD",2,2,27.02,21,0)
^.001^22^22^3060419^^^^
"^DD",2,2,27.02,21,1,0)
The facility that the patient chooses to designate as his preferred
"^DD",2,2,27.02,21,2,0)
location for care.
"^DD",2,2,27.02,21,3,0)
The facility must have one of the following facility types:
"^DD",2,2,27.02,21,4,0)
      CBOC         (Community Based Outpatient Clinic)
"^DD",2,2,27.02,21,5,0)
      HCS          (Health Care System)
"^DD",2,2,27.02,21,6,0)
      HEALTHCARE   (VA Boston Health Care System)
"^DD",2,2,27.02,21,7,0)
      M&ROC        (Medical and Regional Office Center)
"^DD",2,2,27.02,21,8,0)
      MOC          (Mobile Outpatient Clinic)
"^DD",2,2,27.02,21,9,0)
      MORC         (Mobile Outreach Clinic)
"^DD",2,2,27.02,21,10,0)
      NETWORK      (VA Healthcare Network Upstate NY)
"^DD",2,2,27.02,21,11,0)
      NHC          (Nursing Home Care)
"^DD",2,2,27.02,21,12,0)
      OC           (Outpatient Clinic - Independent)
"^DD",2,2,27.02,21,13,0)
      OCMC         (Outpatient Clinic - Subordinate)
"^DD",2,2,27.02,21,14,0)
      OCS          (Outpatient Clinic Substation)
"^DD",2,2,27.02,21,15,0)
      OPC          (Out Patient Clinic)
"^DD",2,2,27.02,21,16,0)
      ORC          (Outreach Clinic)
"^DD",2,2,27.02,21,17,0)
      RO-OC        (Regional Office - Outpatient Clinic)
"^DD",2,2,27.02,21,18,0)
      SATELLITE    (Satellite Outpatient Clinic)
"^DD",2,2,27.02,21,19,0)
      SOC          (Satellite Outpatient Clinic)
"^DD",2,2,27.02,21,20,0)
      VAMC         (VA Medical Center)
"^DD",2,2,27.02,21,21,0)
      VANPH        (Neural Psychiatric Hospital)
"^DD",2,2,27.02,21,22,0)
      VA ROSEBERG  (VA Roseburg Health Care System)
"^DD",2,2,27.02,"DT")
3060930
"BLD",5926,6)
^650
**END**
**END**
