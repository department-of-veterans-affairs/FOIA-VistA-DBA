Released ECX*3*13 SEQ #13
Extracted from mail message
**KIDS**:ECX*3.0*13^

**INSTALL NAME**
ECX*3.0*13
"BLD",1498,0)
ECX*3.0*13^DSS EXTRACTS^0^2981103^y
"BLD",1498,4,0)
^9.64PA^727.826^12
"BLD",1498,4,727.802,0)
727.802
"BLD",1498,4,727.802,2,0)
^9.641^727.802^1
"BLD",1498,4,727.802,2,727.802,0)
ADMISSION EXTRACT  (File-top level)
"BLD",1498,4,727.802,2,727.802,1,0)
^9.6411^46^2
"BLD",1498,4,727.802,2,727.802,1,46,0)
SHARING AGREEMENT INSURANCE
"BLD",1498,4,727.802,2,727.802,1,48,0)
PC PROVIDER PERSON CLASS
"BLD",1498,4,727.802,222)
y^n^p^^^^n
"BLD",1498,4,727.803,0)
727.803
"BLD",1498,4,727.803,2,0)
^9.641^727.803^1
"BLD",1498,4,727.803,2,727.803,0)
CLINIC EXTRACT  (File-top level)
"BLD",1498,4,727.803,2,727.803,1,0)
^9.6411^51^2
"BLD",1498,4,727.803,2,727.803,1,51,0)
SHARING AGREEMENT INSURANCE
"BLD",1498,4,727.803,2,727.803,1,55,0)
PC PROVIDER PERSON CLASS
"BLD",1498,4,727.803,222)
y^n^p^^^^n
"BLD",1498,4,727.804,0)
727.804
"BLD",1498,4,727.804,2,0)
^9.641^727.804^1
"BLD",1498,4,727.804,2,727.804,0)
CLINIC NOSHOW EXTRACT  (File-top level)
"BLD",1498,4,727.804,2,727.804,1,0)
^9.6411^26^1
"BLD",1498,4,727.804,2,727.804,1,26,0)
PC PROVIDER PERSON CLASS
"BLD",1498,4,727.804,222)
y^n^p^^^^n
"BLD",1498,4,727.806,0)
727.806
"BLD",1498,4,727.806,2,0)
^9.641^727.806^1
"BLD",1498,4,727.806,2,727.806,0)
DENTAL EXTRACT  (File-top level)
"BLD",1498,4,727.806,2,727.806,1,0)
^9.6411^55^1
"BLD",1498,4,727.806,2,727.806,1,55,0)
PC PROVIDER PERSON CLASS
"BLD",1498,4,727.806,222)
y^n^p^^^^n
"BLD",1498,4,727.81,0)
727.81
"BLD",1498,4,727.81,2,0)
^9.641^727.81^1
"BLD",1498,4,727.81,2,727.81,0)
PRESCRIPTION EXTRACT  (File-top level)
"BLD",1498,4,727.81,2,727.81,1,0)
^9.6411^42^1
"BLD",1498,4,727.81,2,727.81,1,42,0)
PC PROVIDER PERSON CLASS
"BLD",1498,4,727.81,222)
y^n^p^^^^n
"BLD",1498,4,727.811,0)
727.811
"BLD",1498,4,727.811,2,0)
^9.641^727.811^1
"BLD",1498,4,727.811,2,727.811,0)
SURGERY EXTRACT  (File-top level)
"BLD",1498,4,727.811,2,727.811,1,0)
^9.6411^43^1
"BLD",1498,4,727.811,2,727.811,1,43,0)
PC PROVIDER PERSON CLASS
"BLD",1498,4,727.811,222)
y^n^p^^^^n
"BLD",1498,4,727.813,0)
727.813
"BLD",1498,4,727.813,2,0)
^9.641^727.813^1
"BLD",1498,4,727.813,2,727.813,0)
LABORATORY EXTRACT  (File-top level)
"BLD",1498,4,727.813,2,727.813,1,0)
^9.6411^26^1
"BLD",1498,4,727.813,2,727.813,1,26,0)
PC PROVIDER PERSON CLASS
"BLD",1498,4,727.813,222)
y^n^p^^^^n
"BLD",1498,4,727.814,0)
727.814
"BLD",1498,4,727.814,2,0)
^9.641^727.814^1
"BLD",1498,4,727.814,2,727.814,0)
RADIOLOGY EXTRACT  (File-top level)
"BLD",1498,4,727.814,2,727.814,1,0)
^9.6411^27^1
"BLD",1498,4,727.814,2,727.814,1,27,0)
PC PROVIDER PERSON CLASS
"BLD",1498,4,727.814,222)
y^n^p^^^^n
"BLD",1498,4,727.815,0)
727.815
"BLD",1498,4,727.815,2,0)
^9.641^727.815^1
"BLD",1498,4,727.815,2,727.815,0)
EVENT CAPTURE LOCAL EXTRACT  (File-top level)
"BLD",1498,4,727.815,2,727.815,1,0)
^9.6411^44^1
"BLD",1498,4,727.815,2,727.815,1,44,0)
PC PROVIDER PERSON CLASS
"BLD",1498,4,727.815,222)
y^n^p^^^^n
"BLD",1498,4,727.819,0)
727.819
"BLD",1498,4,727.819,2,0)
^9.641^727.819^1
"BLD",1498,4,727.819,2,727.819,0)
IV DETAIL EXTRACT  (File-top level)
"BLD",1498,4,727.819,2,727.819,1,0)
^9.6411^30^1
"BLD",1498,4,727.819,2,727.819,1,30,0)
PC PROVIDER PERSON CLASS
"BLD",1498,4,727.819,222)
y^n^p^^^^n
"BLD",1498,4,727.825,0)
727.825
"BLD",1498,4,727.825,2,0)
^9.641^727.825^1
"BLD",1498,4,727.825,2,727.825,0)
QUASAR EXTRACT  (File-top level)
"BLD",1498,4,727.825,2,727.825,1,0)
^9.6411^44^1
"BLD",1498,4,727.825,2,727.825,1,44,0)
PC PROVIDER PERSON CLASS
"BLD",1498,4,727.825,222)
y^n^p^^^^n
"BLD",1498,4,727.826,0)
727.826
"BLD",1498,4,727.826,2,0)
^9.641^727.826^1
"BLD",1498,4,727.826,2,727.826,0)
PROSTHETICS EXTRACT  (File-top level)
"BLD",1498,4,727.826,2,727.826,1,0)
^9.6411^36^1
"BLD",1498,4,727.826,2,727.826,1,36,0)
PC PROVIDER PERSON CLASS
"BLD",1498,4,727.826,222)
y^n^p^^^^n
"BLD",1498,4,"APDD",727.802,727.802)

"BLD",1498,4,"APDD",727.802,727.802,46)

"BLD",1498,4,"APDD",727.802,727.802,48)

"BLD",1498,4,"APDD",727.803,727.803)

"BLD",1498,4,"APDD",727.803,727.803,51)

"BLD",1498,4,"APDD",727.803,727.803,55)

"BLD",1498,4,"APDD",727.804,727.804)

"BLD",1498,4,"APDD",727.804,727.804,26)

"BLD",1498,4,"APDD",727.806,727.806)

"BLD",1498,4,"APDD",727.806,727.806,55)

"BLD",1498,4,"APDD",727.81,727.81)

"BLD",1498,4,"APDD",727.81,727.81,42)

"BLD",1498,4,"APDD",727.811,727.811)

"BLD",1498,4,"APDD",727.811,727.811,43)

"BLD",1498,4,"APDD",727.813,727.813)

"BLD",1498,4,"APDD",727.813,727.813,26)

"BLD",1498,4,"APDD",727.814,727.814)

"BLD",1498,4,"APDD",727.814,727.814,27)

"BLD",1498,4,"APDD",727.815,727.815)

"BLD",1498,4,"APDD",727.815,727.815,44)

"BLD",1498,4,"APDD",727.819,727.819)

"BLD",1498,4,"APDD",727.819,727.819,30)

"BLD",1498,4,"APDD",727.825,727.825)

"BLD",1498,4,"APDD",727.825,727.825,44)

"BLD",1498,4,"APDD",727.826,727.826)

"BLD",1498,4,"APDD",727.826,727.826,36)

"BLD",1498,4,"B",727.802,727.802)

"BLD",1498,4,"B",727.803,727.803)

"BLD",1498,4,"B",727.804,727.804)

"BLD",1498,4,"B",727.806,727.806)

"BLD",1498,4,"B",727.81,727.81)

"BLD",1498,4,"B",727.811,727.811)

"BLD",1498,4,"B",727.813,727.813)

"BLD",1498,4,"B",727.814,727.814)

"BLD",1498,4,"B",727.815,727.815)

"BLD",1498,4,"B",727.819,727.819)

"BLD",1498,4,"B",727.825,727.825)

"BLD",1498,4,"B",727.826,727.826)

"BLD",1498,"KRN",0)
^9.67PA^19^18
"BLD",1498,"KRN",.4,0)
.4
"BLD",1498,"KRN",.401,0)
.401
"BLD",1498,"KRN",.402,0)
.402
"BLD",1498,"KRN",.403,0)
.403
"BLD",1498,"KRN",.5,0)
.5
"BLD",1498,"KRN",.84,0)
.84
"BLD",1498,"KRN",3.6,0)
3.6
"BLD",1498,"KRN",3.8,0)
3.8
"BLD",1498,"KRN",9.2,0)
9.2
"BLD",1498,"KRN",9.8,0)
9.8
"BLD",1498,"KRN",9.8,"NM",0)
^9.68A^17^16
"BLD",1498,"KRN",9.8,"NM",1,0)
ECXADM^^0^B15658797
"BLD",1498,"KRN",9.8,"NM",2,0)
ECXDENT^^0^B5788394
"BLD",1498,"KRN",9.8,"NM",3,0)
ECXEC^^0^B15226044
"BLD",1498,"KRN",9.8,"NM",4,0)
ECXLABN^^0^B14701376
"BLD",1498,"KRN",9.8,"NM",6,0)
ECXOPRX^^0^B21868657
"BLD",1498,"KRN",9.8,"NM",7,0)
ECXPIVD^^0^B12537861
"BLD",1498,"KRN",9.8,"NM",8,0)
ECXPIVDN^^0^B21115334
"BLD",1498,"KRN",9.8,"NM",9,0)
ECXPRO^^0^B19391204
"BLD",1498,"KRN",9.8,"NM",10,0)
ECXPRO1^^0^B30321264
"BLD",1498,"KRN",9.8,"NM",11,0)
ECXQSR^^0^B16219341
"BLD",1498,"KRN",9.8,"NM",12,0)
ECXRAD^^0^B10598732
"BLD",1498,"KRN",9.8,"NM",13,0)
ECXSCNS^^0^B7087561
"BLD",1498,"KRN",9.8,"NM",14,0)
ECXSCX^^0^B63104437
"BLD",1498,"KRN",9.8,"NM",15,0)
ECXSURG^^0^B17096300
"BLD",1498,"KRN",9.8,"NM",16,0)
ECXUTL2^^0^B14131006
"BLD",1498,"KRN",9.8,"NM",17,0)
ECXTRANS^^0^B31026007
"BLD",1498,"KRN",9.8,"NM","B","ECXADM",1)

"BLD",1498,"KRN",9.8,"NM","B","ECXDENT",2)

"BLD",1498,"KRN",9.8,"NM","B","ECXEC",3)

"BLD",1498,"KRN",9.8,"NM","B","ECXLABN",4)

"BLD",1498,"KRN",9.8,"NM","B","ECXOPRX",6)

"BLD",1498,"KRN",9.8,"NM","B","ECXPIVD",7)

"BLD",1498,"KRN",9.8,"NM","B","ECXPIVDN",8)

"BLD",1498,"KRN",9.8,"NM","B","ECXPRO",9)

"BLD",1498,"KRN",9.8,"NM","B","ECXPRO1",10)

"BLD",1498,"KRN",9.8,"NM","B","ECXQSR",11)

"BLD",1498,"KRN",9.8,"NM","B","ECXRAD",12)

"BLD",1498,"KRN",9.8,"NM","B","ECXSCNS",13)

"BLD",1498,"KRN",9.8,"NM","B","ECXSCX",14)

"BLD",1498,"KRN",9.8,"NM","B","ECXSURG",15)

"BLD",1498,"KRN",9.8,"NM","B","ECXTRANS",17)

"BLD",1498,"KRN",9.8,"NM","B","ECXUTL2",16)

"BLD",1498,"KRN",19,0)
19
"BLD",1498,"KRN",19,"NM",0)
^9.68A^^
"BLD",1498,"KRN",19.1,0)
19.1
"BLD",1498,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",1498,"KRN",101,0)
101
"BLD",1498,"KRN",409.61,0)
409.61
"BLD",1498,"KRN",771,0)
771
"BLD",1498,"KRN",869.2,0)
869.2
"BLD",1498,"KRN",870,0)
870
"BLD",1498,"KRN",8994,0)
8994
"BLD",1498,"KRN","B",.4,.4)

"BLD",1498,"KRN","B",.401,.401)

"BLD",1498,"KRN","B",.402,.402)

"BLD",1498,"KRN","B",.403,.403)

"BLD",1498,"KRN","B",.5,.5)

"BLD",1498,"KRN","B",.84,.84)

"BLD",1498,"KRN","B",3.6,3.6)

"BLD",1498,"KRN","B",3.8,3.8)

"BLD",1498,"KRN","B",9.2,9.2)

"BLD",1498,"KRN","B",9.8,9.8)

"BLD",1498,"KRN","B",19,19)

"BLD",1498,"KRN","B",19.1,19.1)

"BLD",1498,"KRN","B",101,101)

"BLD",1498,"KRN","B",409.61,409.61)

"BLD",1498,"KRN","B",771,771)

"BLD",1498,"KRN","B",869.2,869.2)

"BLD",1498,"KRN","B",870,870)

"BLD",1498,"KRN","B",8994,8994)

"BLD",1498,"QUES",0)
^9.62^^
"BLD",1498,"REQB",0)
^9.611^1^1
"BLD",1498,"REQB",1,0)
ECX*3.0*8^2
"BLD",1498,"REQB","B","ECX*3.0*8",1)

"FIA",727.802)
ADMISSION EXTRACT
"FIA",727.802,0)
^ECX(727.802,
"FIA",727.802,0,0)
727.802
"FIA",727.802,0,1)
y^n^p^^^^n
"FIA",727.802,0,10)

"FIA",727.802,0,11)

"FIA",727.802,0,"RLRO")

"FIA",727.802,0,"VR")
3.0^ECX
"FIA",727.802,727.802)
1
"FIA",727.802,727.802,46)

"FIA",727.802,727.802,48)

"FIA",727.803)
CLINIC EXTRACT
"FIA",727.803,0)
^ECX(727.803,
"FIA",727.803,0,0)
727.803
"FIA",727.803,0,1)
y^n^p^^^^n
"FIA",727.803,0,10)

"FIA",727.803,0,11)

"FIA",727.803,0,"RLRO")

"FIA",727.803,0,"VR")
3.0^ECX
"FIA",727.803,727.803)
1
"FIA",727.803,727.803,51)

"FIA",727.803,727.803,55)

"FIA",727.804)
CLINIC NOSHOW EXTRACT
"FIA",727.804,0)
^ECX(727.804,
"FIA",727.804,0,0)
727.804
"FIA",727.804,0,1)
y^n^p^^^^n
"FIA",727.804,0,10)

"FIA",727.804,0,11)

"FIA",727.804,0,"RLRO")

"FIA",727.804,0,"VR")
3.0^ECX
"FIA",727.804,727.804)
1
"FIA",727.804,727.804,26)

"FIA",727.806)
DENTAL EXTRACT
"FIA",727.806,0)
^ECX(727.806,
"FIA",727.806,0,0)
727.806
"FIA",727.806,0,1)
y^n^p^^^^n
"FIA",727.806,0,10)

"FIA",727.806,0,11)

"FIA",727.806,0,"RLRO")

"FIA",727.806,0,"VR")
3.0^ECX
"FIA",727.806,727.806)
1
"FIA",727.806,727.806,55)

"FIA",727.81)
PRESCRIPTION EXTRACT
"FIA",727.81,0)
^ECX(727.81,
"FIA",727.81,0,0)
727.81
"FIA",727.81,0,1)
y^n^p^^^^n
"FIA",727.81,0,10)

"FIA",727.81,0,11)

"FIA",727.81,0,"RLRO")

"FIA",727.81,0,"VR")
3.0^ECX
"FIA",727.81,727.81)
1
"FIA",727.81,727.81,42)

"FIA",727.811)
SURGERY EXTRACT
"FIA",727.811,0)
^ECX(727.811,
"FIA",727.811,0,0)
727.811
"FIA",727.811,0,1)
y^n^p^^^^n
"FIA",727.811,0,10)

"FIA",727.811,0,11)

"FIA",727.811,0,"RLRO")

"FIA",727.811,0,"VR")
3.0^ECX
"FIA",727.811,727.811)
1
"FIA",727.811,727.811,43)

"FIA",727.813)
LABORATORY EXTRACT
"FIA",727.813,0)
^ECX(727.813,
"FIA",727.813,0,0)
727.813
"FIA",727.813,0,1)
y^n^p^^^^n
"FIA",727.813,0,10)

"FIA",727.813,0,11)

"FIA",727.813,0,"RLRO")

"FIA",727.813,0,"VR")
3.0^ECX
"FIA",727.813,727.813)
1
"FIA",727.813,727.813,26)

"FIA",727.814)
RADIOLOGY EXTRACT
"FIA",727.814,0)
^ECX(727.814,
"FIA",727.814,0,0)
727.814
"FIA",727.814,0,1)
y^n^p^^^^n
"FIA",727.814,0,10)

"FIA",727.814,0,11)

"FIA",727.814,0,"RLRO")

"FIA",727.814,0,"VR")
3.0^ECX
"FIA",727.814,727.814)
1
"FIA",727.814,727.814,27)

"FIA",727.815)
EVENT CAPTURE LOCAL EXTRACT
"FIA",727.815,0)
^ECX(727.815,
"FIA",727.815,0,0)
727.815
"FIA",727.815,0,1)
y^n^p^^^^n
"FIA",727.815,0,10)

"FIA",727.815,0,11)

"FIA",727.815,0,"RLRO")

"FIA",727.815,0,"VR")
3.0^ECX
"FIA",727.815,727.815)
1
"FIA",727.815,727.815,44)

"FIA",727.819)
IV DETAIL EXTRACT
"FIA",727.819,0)
^ECX(727.819,
"FIA",727.819,0,0)
727.819
"FIA",727.819,0,1)
y^n^p^^^^n
"FIA",727.819,0,10)

"FIA",727.819,0,11)

"FIA",727.819,0,"RLRO")

"FIA",727.819,0,"VR")
3.0^ECX
"FIA",727.819,727.819)
1
"FIA",727.819,727.819,30)

"FIA",727.825)
QUASAR EXTRACT
"FIA",727.825,0)
^ECX(727.825,
"FIA",727.825,0,0)
727.825
"FIA",727.825,0,1)
y^n^p^^^^n
"FIA",727.825,0,10)

"FIA",727.825,0,11)

"FIA",727.825,0,"RLRO")

"FIA",727.825,0,"VR")
3.0^ECX
"FIA",727.825,727.825)
1
"FIA",727.825,727.825,44)

"FIA",727.826)
PROSTHETICS EXTRACT
"FIA",727.826,0)
^ECX(727.826,
"FIA",727.826,0,0)
727.826
"FIA",727.826,0,1)
y^n^p^^^^n
"FIA",727.826,0,10)

"FIA",727.826,0,11)

"FIA",727.826,0,"RLRO")

"FIA",727.826,0,"VR")
3.0^ECX
"FIA",727.826,727.826)
1
"FIA",727.826,727.826,36)

"PKG",513,-1)
1^1
"PKG",513,0)
DSS EXTRACTS^ECX^Decision Support System. (DSS)
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
3.0^2971222^2980112^11714
"PKG",513,22,1,"PAH",1,0)
13^2981103
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
16
"RTN","ECXADM")
0^1^B15658797
"RTN","ECXADM",1,0)
ECXADM ;ALB/JAP,BIR/DMA,CML,PTD-Admissions Extract ; [ 11/25/96  11:21 AM ]
"RTN","ECXADM",2,0)
 ;;3.0;DSS EXTRACTS;**1,4,11,8,13**;Dec 22, 1997
"RTN","ECXADM",3,0)
BEG ;entry point from option
"RTN","ECXADM",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXADM",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXADM",6,0)
 Q
"RTN","ECXADM",7,0)
 ;
"RTN","ECXADM",8,0)
START ; start package specific extract
"RTN","ECXADM",9,0)
 N QFLG,PAT,DFN
"RTN","ECXADM",10,0)
 S QFLG=0
"RTN","ECXADM",11,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD") S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXADM",12,0)
 S ECED=ECED+.3
"RTN","ECXADM",13,0)
 S ECD=ECSD1 F  S ECD=$O(^DGPM("ATT1",ECD)),ECDA=0 Q:'ECD  Q:ECD>ECED  F  S ECDA=$O(^DGPM("ATT1",ECD,ECDA)) Q:'ECDA  D
"RTN","ECXADM",14,0)
 .I $D(^DGPM(ECDA,0)) D  Q:QFLG 
"RTN","ECXADM",15,0)
 ..S EC=^DGPM(ECDA,0),DFN=$P(EC,U,3) I $D(^DPT(DFN,0)) S PAT=^(0) D GET Q:QFLG
"RTN","ECXADM",16,0)
 Q
"RTN","ECXADM",17,0)
 ;
"RTN","ECXADM",18,0)
GET ;gather extract data
"RTN","ECXADM",19,0)
 N ALIAS,DSSDEPT,ELG,ELGA,ENR,I,INSUR,J,JJ,MST,MSTEI,PAYOR,SAI,TOT,WRD,STATE,CNTY,ZIP,VAPA,X,Y
"RTN","ECXADM",20,0)
 S ECTM=$$ECXTIME^ECXUTL(ECD)
"RTN","ECXADM",21,0)
 S X=$$PRIMARY^ECXUTL2(DFN,ECD,ECPRO),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXADM",22,0)
 S ECM=$P($G(^DG(408.32,+$P(PAT,U,14),0)),U,2)
"RTN","ECXADM",23,0)
 K VAPA D ADD^VADPT
"RTN","ECXADM",24,0)
 S STATE=VAPA(5),CNTY=VAPA(7),ZIP=VAPA(6)
"RTN","ECXADM",25,0)
 S STATE=$P($G(^DIC(5,+STATE,0)),U,3),CNTY=$P($G(^DIC(5,+STATE,1,+CNTY,0)),U,3)
"RTN","ECXADM",26,0)
 S ELG=$P($G(^DIC(8,+$G(^DPT(DFN,.36)),0)),U,9) I ELG S ELG=$C(ELG+64)
"RTN","ECXADM",27,0)
 S ENR=$P($G(^DPT(DFN,"ENR")),U,2) I ENR D
"RTN","ECXADM",28,0)
 .S DIC="^DIC(4,",DA=ENR,DR="99;",DIQ(0)="I",DIQ="ENR"
"RTN","ECXADM",29,0)
 .D EN^DIQ1 S ENR=ENR(4,ENR,99,"I")
"RTN","ECXADM",30,0)
 .K DIC,DIQ,DA,DR
"RTN","ECXADM",31,0)
 S W=$P(EC,U,6),WRD=$P($G(^DIC(42,+W,44)),U),FAC=$P($G(^DIC(42,+W,0)),U,11),DSSDEPT=$P($G(^ECX(727.4,W,0)),U,2)
"RTN","ECXADM",32,0)
 S ELGA=$P($G(^DIC(8,+$P(EC,U,20),0)),U,9) I ELGA S ELGA=$C(ELGA+64)
"RTN","ECXADM",33,0)
 S (ECDRG,ECDIA)="",ECPTF=+$P(EC,U,16) I ECPTF,$D(^DGPT(ECPTF,"M")) D PTF
"RTN","ECXADM",34,0)
 S ECTS="" F J=1:1:100 S ECT1=$G(^DGPM(ECDA+J,0)) I $P(ECT1,U,14)=ECDA,$P(ECT1,U,2)=6 S ECTS=ECT1 Q
"RTN","ECXADM",35,0)
 ;get corresponding Treating specialty - should be the next one, but must be close
"RTN","ECXADM",36,0)
 ;it's possible that variable ects is still null at this point
"RTN","ECXADM",37,0)
 S ECXPRV="",ECXPRV=$P(ECTS,U,8) S:ECXPRV]"" ECXPRV=ECPRO_ECXPRV
"RTN","ECXADM",38,0)
 S ECXATT="",ECXATT=$P(ECTS,U,19) S:ECXATT]"" ECXATT=ECPRO_ECXATT
"RTN","ECXADM",39,0)
 S ECXSPC=$P($G(^DIC(45.7,+$P(ECTS,U,9),0)),U,2)
"RTN","ECXADM",40,0)
 S (MST,MSTEI)=""
"RTN","ECXADM",41,0)
 ;get visn 19 sharing agreement data
"RTN","ECXADM",42,0)
 D VISN19^ECXUTL2(DFN,.PAYOR,.SAI)
"RTN","ECXADM",43,0)
 D FILE
"RTN","ECXADM",44,0)
 Q
"RTN","ECXADM",45,0)
 ;
"RTN","ECXADM",46,0)
FILE ;file the extract record
"RTN","ECXADM",47,0)
 ;node0
"RTN","ECXADM",48,0)
 ;facility^dfn^ssn^name^in/out^day^primary care team^sex^dob^religion^employment status^health ins^state^county^zip^
"RTN","ECXADM",49,0)
 ;eligibility^vet^vietnam^agent orange^radiation^pow^period of service^means test^marital status^
"RTN","ECXADM",50,0)
 ;ward^treating specialty^attending physician^mov #^DRG^diagnosis^time^primary care provider^race^primary ward provider
"RTN","ECXADM",51,0)
 ;node1
"RTN","ECXADM",52,0)
 ;mpi^dss dept^attending npi^pc provider npi^ward provider npi^admission elig^mst status^mst indicator^sharing payor^sharing insurance^enrollment location^pc prov person class
"RTN","ECXADM",53,0)
 N DA,DIK
"RTN","ECXADM",54,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXADM",55,0)
 S ECODE=EC7_U_EC23
"RTN","ECXADM",56,0)
 S ECODE=ECODE_U_FAC_U_DFN_U_$P(PAT,U,9)_U_$E($P($P(PAT,U),",")_"    ",1,4)_U_"3"_U_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECPTTM_U_$P(PAT,U,2)_U_$$ECXDOB^ECXUTL($P(PAT,U,3))_U_$P(PAT,U,8)_U_$P($G(^DPT(DFN,.311)),U,15)_U_+$$INSURED^IBCNS1(DFN,ECD)
"RTN","ECXADM",57,0)
 S ECODE=ECODE_U_STATE_U_CNTY_U_ZIP
"RTN","ECXADM",58,0)
 S ECODE=ECODE_U_ELG_U_$P($G(^DPT(DFN,"VET")),U)_U_$P($G(^DPT(DFN,.321))_"^^^^",U,1,3)_U_$P($G(^DPT(DFN,.52)),U,5)_U_$P($G(^DIC(21,+$P($G(^DPT(DFN,.32)),U,3),0)),U,3)_U_ECM_U_$P(PAT,U,5)
"RTN","ECXADM",59,0)
 S ECODE=ECODE_U_WRD_U_ECXSPC_U_ECXATT_U_ECDA
"RTN","ECXADM",60,0)
 S ECODE=ECODE_U_ECDRG_U_ECDIA_U_ECTM_U_ECPTPR_U_$P($G(^DIC(10,+$P(PAT,U,6),0)),U,2)_U_ECXPRV
"RTN","ECXADM",61,0)
 S ECODE1=U_DSSDEPT_U_U_U_U_ELGA_U_MST_U_MSTEI_U_PAYOR_U_SAI_U_ENR_U_ECCLAS
"RTN","ECXADM",62,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXADM",63,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXADM",64,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXADM",65,0)
 Q
"RTN","ECXADM",66,0)
 ;
"RTN","ECXADM",67,0)
PTF ; get admitting DRG and diagnosis from PTF
"RTN","ECXADM",68,0)
 ;use number for DRG and .01 for diagnosis
"RTN","ECXADM",69,0)
 N EC,EC1
"RTN","ECXADM",70,0)
 S EC=1 I $D(^DGPT(ECPTF,"M",2,0)) S EC=2
"RTN","ECXADM",71,0)
 S EC1=+$P(^DGPT(ECPTF,"M",EC,0),U,5),ECDRG=$P($G(^DGPT(ECPTF,"M",EC,"P")),U)
"RTN","ECXADM",72,0)
 S ECDIA=$P($G(^ICD9(EC1,0)),U)
"RTN","ECXADM",73,0)
 Q
"RTN","ECXADM",74,0)
 ;
"RTN","ECXADM",75,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXADM",76,0)
 S ECHEAD="ADM"
"RTN","ECXADM",77,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXADM",78,0)
 Q
"RTN","ECXADM",79,0)
 ;
"RTN","ECXADM",80,0)
 ;
"RTN","ECXADM",81,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXADM",82,0)
 ; should be queued with a 1D frequency
"RTN","ECXADM",83,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXADM",84,0)
 ;
"RTN","ECXADM",85,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXADM",86,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXADM",87,0)
 ;
"RTN","ECXDENT")
0^2^B5788394
"RTN","ECXDENT",1,0)
ECXDENT ;ALB/JAP,BIR/DMA,PTD-Dental Extract for DSS ; [ 11/22/96  5:23 PM ]
"RTN","ECXDENT",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13**;Dec 22, 1997
"RTN","ECXDENT",3,0)
BEG ;entry point from option
"RTN","ECXDENT",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXDENT",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXDENT",6,0)
 Q
"RTN","ECXDENT",7,0)
 ;
"RTN","ECXDENT",8,0)
START ;start package specific extract
"RTN","ECXDENT",9,0)
 N DATA,X,Y
"RTN","ECXDENT",10,0)
 S QFLG=0
"RTN","ECXDENT",11,0)
 K ECXDD D FIELD^DID(220.5,.01,,"SPECIFIER","ECXDD") S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXDENT",12,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXDENT",13,0)
 F  S ECD=$O(^DENT(221,"B",ECD)),J=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S J=$O(^DENT(221,"B",ECD,J)) Q:'J  D  Q:QFLG
"RTN","ECXDENT",14,0)
 .Q:'$D(^DENT(221,J,0)) 
"RTN","ECXDENT",15,0)
 .S DATA=^DENT(221,J,0),$P(DATA,U,50)="" D STUFF
"RTN","ECXDENT",16,0)
 Q
"RTN","ECXDENT",17,0)
 ;
"RTN","ECXDENT",18,0)
STUFF ;get data
"RTN","ECXDENT",19,0)
 S DFN=+$P(DATA,U,4) Q:'$D(^DPT(DFN,0))
"RTN","ECXDENT",20,0)
 S ECP=^DPT(DFN,0),SSN=$P(ECP,U,9),ECNA=$E($P($P(ECP,U),",")_"    ",1,4)
"RTN","ECXDENT",21,0)
 S X=$$INP^ECXUTL2(DFN,ECD),ECA=$P(X,U,1),ECMN=$P(X,U,2),ECTS=$P(X,U,3)
"RTN","ECXDENT",22,0)
 S ECDEN=$P(DATA,U,3),ECDEN=$P($G(^DENT(220.5,ECDEN,0)),U) S:ECDEN]"" ECDEN=ECPRO_ECDEN
"RTN","ECXDENT",23,0)
 S X=$$PRIMARY^ECXUTL2(DFN,ECD,ECPRO),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXDENT",24,0)
 D FILE
"RTN","ECXDENT",25,0)
 Q
"RTN","ECXDENT",26,0)
 ;
"RTN","ECXDENT",27,0)
FILE ;file record
"RTN","ECXDENT",28,0)
 ;node0
"RTN","ECXDENT",29,0)
 ;inst^dfn^ssn^name^in/out^day^provider^screen/complete^admin proc^x-rays ex^x-rays int^prophy natural^prophy denture^op room^neoplasm malig^
"RTN","ECXDENT",30,0)
 ;neoplasm removed^biopsy/smear^fracture^pat category^other sig surg^surface restored^root canal^periodontal quads (surg)^perio quads (root plane)^
"RTN","ECXDENT",31,0)
 ;patient ed^spot check exam^indiv crowns^posts & cores^fixed partials (abut)^fixed partials (pont)^removable partials^complete dentures^prosthetic repair^
"RTN","ECXDENT",32,0)
 ;splints & spec procs^extractions^surg extractions^other sig treatment^div^completion/termination^interdisc consult^evaluation^pre-auth 2nd opinion^
"RTN","ECXDENT",33,0)
 ;spot check discrepancy^mov #^treat spec^primary care team^primary care provider^time
"RTN","ECXDENT",34,0)
 ;node1
"RTN","ECXDENT",35,0)
 ;mpi^dss dept^provider npi^pc provider npi^pc prov person class
"RTN","ECXDENT",36,0)
 N DA,DIK
"RTN","ECXDENT",37,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXDENT",38,0)
 S ECODE=EC7_U_EC23
"RTN","ECXDENT",39,0)
 S ECODE=ECODE_U_$P(DATA,U,40)_U_DFN_U_SSN_U_ECNA_U_ECA_U_$$ECXDATE^ECXUTL($P(DATA,U),ECXYM)_U_ECDEN
"RTN","ECXDENT",40,0)
 S ECODE=ECODE_U_$P(DATA,U,7,9)_U_$P(DATA,U,11,20)_U_$P(DATA,U,22,38)_U_$P(DATA,U,40,45)_U_ECMN_U_ECTS
"RTN","ECXDENT",41,0)
 S ECODE=ECODE_U_ECPTTM_U_ECPTPR_U_$$ECXTIME^ECXUTL($P(DATA,U))
"RTN","ECXDENT",42,0)
 S ECODE1=U_U_U_U_ECCLAS
"RTN","ECXDENT",43,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXDENT",44,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXDENT",45,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXDENT",46,0)
 Q
"RTN","ECXDENT",47,0)
 ;
"RTN","ECXDENT",48,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXDENT",49,0)
 S ECHEAD="DEN"
"RTN","ECXDENT",50,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXDENT",51,0)
 Q
"RTN","ECXDENT",52,0)
 ;
"RTN","ECXDENT",53,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXDENT",54,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXEC")
0^3^B15226044
"RTN","ECXEC",1,0)
ECXEC ;ALB/JAP,BIR/JLP,PTD-DSS Event Capture Extract  [ 02/14/97   2:26 PM ]
"RTN","ECXEC",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13**;Dec 22, 1997
"RTN","ECXEC",3,0)
BEG ;entry point from option
"RTN","ECXEC",4,0)
 I '$D(^ECH) W !,"Event Capture is not initialized",!! Q
"RTN","ECXEC",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXEC",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXEC",7,0)
 Q
"RTN","ECXEC",8,0)
START ;begin EC extract
"RTN","ECXEC",9,0)
 N QFLG,X,Y
"RTN","ECXEC",10,0)
 S QFLG=0
"RTN","ECXEC",11,0)
 S ECED=ECED+.3
"RTN","ECXEC",12,0)
 K ^TMP("EC",$J)
"RTN","ECXEC",13,0)
 S ECLL=0
"RTN","ECXEC",14,0)
 F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:('ECLL)!(QFLG)  F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)!(QFLG)  D
"RTN","ECXEC",15,0)
 .F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D UPDATE Q:QFLG
"RTN","ECXEC",16,0)
 Q
"RTN","ECXEC",17,0)
UPDATE ;sets record and updates counters
"RTN","ECXEC",18,0)
 S ECCH=^ECH(ECDA,0),ECL=$P(ECCH,U,4),ECDFN=$P(ECCH,U,2),ECDT=$P(ECCH,U,3),ECM=$P(ECCH,U,6),ECC=$P(ECCH,U,8),ECTM=$$ECXTIME^ECXUTL(ECDT)
"RTN","ECXEC",19,0)
 Q:'$D(^DPT(ECDFN,0))  S SSN=$P(^(0),U,9),ECNA=$E($P($P(^(0),U),",")_"    ",1,4)
"RTN","ECXEC",20,0)
 S X=$$PRIMARY^ECXUTL2(ECDFN,ECDT),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXEC",21,0)
 S X=$$INP^ECXUTL2(ECDFN,ECDT),ECA=$P(X,U,1),ECMN=$P(X,U,2),ECTS=$P(X,U,3)
"RTN","ECXEC",22,0)
 S ECP=$P(ECCH,U,9)
"RTN","ECXEC",23,0)
 Q:ECP']""
"RTN","ECXEC",24,0)
 S ECO=$P(ECCH,U,12),ECV=$P(ECCH,U,10),ECDU=$P(ECCH,U,7)
"RTN","ECXEC",25,0)
 S ECXUNIT=$G(^ECD(ECDU,0)),ECCS=+$P(ECXUNIT,U,4),ECDCM=$P(ECXUNIT,U,5),ECUSTOP=$P(ECXUNIT,U,10),ECUPCE=$P(ECXUNIT,U,14)
"RTN","ECXEC",26,0)
 ;derivation of dss identifier depends on whether dss unit is set to send data to pce
"RTN","ECXEC",27,0)
 S ECAC=$P($G(ECCH),U,19)
"RTN","ECXEC",28,0)
 ;if this is a record that 'goes to pce', then get the dss identifier from the clinic stop codes
"RTN","ECXEC",29,0)
 S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",30,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECA=1)) D
"RTN","ECXEC",31,0)
 .I +ECAC D
"RTN","ECXEC",32,0)
 ..S ECAC1=$P($G(^SC(+ECAC,0)),U,7),ECAC2=$P($G(^(0)),U,18)
"RTN","ECXEC",33,0)
 ..I 'ECAC2 S ECAC2S="000"
"RTN","ECXEC",34,0)
 ..I 'ECAC1 S (ECAC1S,ECAC2S)="000" Q
"RTN","ECXEC",35,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECAC1,0)),U,2),ECAC2S=$P($G(^DIC(40.7,+ECAC2,0)),U,2)
"RTN","ECXEC",36,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S=$$RJ^XLFSTR(ECAC2S,3,0)
"RTN","ECXEC",37,0)
 .I 'ECAC D
"RTN","ECXEC",38,0)
 ..S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",39,0)
 ;if this record doesn't go to pce, then get the dss idetifier from the dss unit
"RTN","ECXEC",40,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECA=3)) D
"RTN","ECXEC",41,0)
 .I +ECUSTOP D
"RTN","ECXEC",42,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECUSTOP,0)),U,2),ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0)
"RTN","ECXEC",43,0)
 ..S ECAC2S="000"
"RTN","ECXEC",44,0)
 .I 'ECUSTOP D
"RTN","ECXEC",45,0)
 ..S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",46,0)
 S ECDSS=ECAC1S_ECAC2S
"RTN","ECXEC",47,0)
 ;setup provider(s) as'2'_ien; iens are now only in file #200; keeping obsolete reference
"RTN","ECXEC",48,0)
 ;to file #3.1 for backward compatibility; will be revised in future
"RTN","ECXEC",49,0)
 S ECU=$P(ECCH,U,11),ECUN1=$S(ECU["DIC(3.1":3_$P(ECU,";"),1:2_$P(ECU,";"))
"RTN","ECXEC",50,0)
 S ECU2=$P(ECCH,U,15),ECU2A=$S('ECU2:"",ECU2["DIC(3.1":3_$P(ECU2,";"),1:2_$P(ECU2,";"))
"RTN","ECXEC",51,0)
 S ECU3=$P(ECCH,U,17),ECU3A=$S('ECU3:"",ECU3["DIC(3.1":3_$P(ECU3,";"),1:2_$P(ECU3,";"))
"RTN","ECXEC",52,0)
 ;change for version 2 where ECP is a variable pointer and we want to expand it
"RTN","ECXEC",53,0)
 ;category = category or null if stored as 0
"RTN","ECXEC",54,0)
 I ECP[";" S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U),ECP<90000:$P(^EC(725,+ECP,0),U,2)_"N",1:$P(^EC(725,+ECP,0),U,2)_"L"),ECC=$S(ECC:ECC,1:"")
"RTN","ECXEC",55,0)
 ;pick up EC to PCE data from "P" in File 721
"RTN","ECXEC",56,0)
 S ECPCE=$G(^ECH(ECDA,"P"))
"RTN","ECXEC",57,0)
 S ECPCE1=$P(ECPCE,U),ECPCE1=$P($G(^ICPT(+ECPCE1,0)),U),ECPCE2=$P(ECPCE,U,2),ECPCE3=$P(ECPCE,U,3),ECPCE4=$P(ECPCE,U,4),ECPCE5=$P(ECPCE,U,5),ECPCE6=$P(ECPCE,U,6)
"RTN","ECXEC",58,0)
 S ECPCE7=$S($P(ECPCE,U,7)=1:"Y",1:"N")
"RTN","ECXEC",59,0)
 S ECPCE=ECPCE1_U_ECPCE2_U_ECPCE3_U_ECPCE4_U_ECPCE5_U_ECPCE6_U_ECPCE7
"RTN","ECXEC",60,0)
 D FILE
"RTN","ECXEC",61,0)
 Q
"RTN","ECXEC",62,0)
 ;
"RTN","ECXEC",63,0)
FILE ;file record in #727.815
"RTN","ECXEC",64,0)
 ;node0
"RTN","ECXEC",65,0)
 ;ecode=inst^dfn^ssn^name^i/o status^day^DSS unit^category^procedure^volume^cost center^ordering sec^section^
"RTN","ECXEC",66,0)
 ;provider^^prov 2^^prov 3^^^mov #^treat spec^time^primary care team^primary care provider^pce cpt code^
"RTN","ECXEC",67,0)
 ;icd-9 code^agent orange^radiation exposure^environmental contaminants^service connected^sent to pce^^dss identifier^dss dept
"RTN","ECXEC",68,0)
 ;node1
"RTN","ECXEC",69,0)
 ;mpi^provider npi^provider #2 npi^provider #3 npi^pc provider npi^pc prov person class
"RTN","ECXEC",70,0)
 N DA,DIK
"RTN","ECXEC",71,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXEC",72,0)
 S ECODE=EC7_U_EC23
"RTN","ECXEC",73,0)
 S ECODE=ECODE_U_ECL_U_ECDFN_U_SSN_U_ECNA_U_ECA_U_$$ECXDATE^ECXUTL(ECDT,ECXYM)_U_ECDU_U_ECC_U_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECUN1
"RTN","ECXEC",74,0)
 S ECODE=ECODE_U_U_ECU2A_U_U_ECU3A_U_U_U_ECMN_U_ECTS_U_ECTM_U_ECPTTM_U_ECPTPR_U_ECPCE_U_U_ECDSS_U
"RTN","ECXEC",75,0)
 S ECODE1=U_U_U_U_U_ECCLAS
"RTN","ECXEC",76,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXEC",77,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXEC",78,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXEC",79,0)
 Q
"RTN","ECXEC",80,0)
 ;
"RTN","ECXEC",81,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXEC",82,0)
 S ECHEAD="ECS"
"RTN","ECXEC",83,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXEC",84,0)
 Q
"RTN","ECXEC",85,0)
 ;
"RTN","ECXEC",86,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXEC",87,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLABN")
0^4^B14701376
"RTN","ECXLABN",1,0)
ECXLABN ;ALB/JAP,BIR/CML-Lab Extract for DSS (New Format - With LMIP Codes) ; [ 11/22/96  5:14 PM ]
"RTN","ECXLABN",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13**;Dec 22, 1997
"RTN","ECXLABN",3,0)
BEG ;entry point
"RTN","ECXLABN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABN",6,0)
 Q
"RTN","ECXLABN",7,0)
 ;
"RTN","ECXLABN",8,0)
START ; entry when queued
"RTN","ECXLABN",9,0)
 N QFLG
"RTN","ECXLABN",10,0)
 S QFLG=0
"RTN","ECXLABN",11,0)
 K ^LRO(64.03)
"RTN","ECXLABN",12,0)
 S LRSDT=ECSD,LREDT=ECED
"RTN","ECXLABN",13,0)
 D ^LRCAPDSS
"RTN","ECXLABN",14,0)
 ;quit if no completion date for API compile
"RTN","ECXLABN",15,0)
 I '$P($G(^LRO(64.03,1,1,1,0)),U,4) Q
"RTN","ECXLABN",16,0)
 ;quit if tasked and user sends stop request
"RTN","ECXLABN",17,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","ECXLABN",18,0)
 .K ^LRO(64.03) S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",19,0)
 ;otherwise, continue
"RTN","ECXLABN",20,0)
 K ECXDD D FIELD^DID(64.03,1,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXLABN",21,0)
 S ECLRN=1
"RTN","ECXLABN",22,0)
 F  S ECLRN=$O(^LRO(64.03,ECLRN)) Q:'ECLRN  D  Q:QFLG
"RTN","ECXLABN",23,0)
 .Q:'$D(^LRO(64.03,ECLRN,0))
"RTN","ECXLABN",24,0)
 .S EC1=^LRO(64.03,ECLRN,0)
"RTN","ECXLABN",25,0)
 .S ECDOC=ECPROF_$P(EC1,U,2),ECLOC=$P(EC1,U,15),EC=$P(EC1,U,3)
"RTN","ECXLABN",26,0)
 .I EC]"" D GET
"RTN","ECXLABN",27,0)
 K ^LRO(64.03) S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",28,0)
 Q
"RTN","ECXLABN",29,0)
 ;
"RTN","ECXLABN",30,0)
GET ;get data
"RTN","ECXLABN",31,0)
 N X
"RTN","ECXLABN",32,0)
 S ECF=$S($P(EC,";",2)="DPT(":2,$P(EC,";",2)="LRT(67,":67,1:0) Q:'ECF
"RTN","ECXLABN",33,0)
 S ECIFN=$P(EC,";")
"RTN","ECXLABN",34,0)
 ;resolve ecloc
"RTN","ECXLABN",35,0)
 S ECXL1=+$P(ECLOC,";",1),ECXL2=$P(ECLOC,";",2)
"RTN","ECXLABN",36,0)
 I ECF=2 S ECLOC=$S(ECXL1>0:ECXL1,1:"") I ECXL2]"",ECXL2'="SC(" S ECLOC=""
"RTN","ECXLABN",37,0)
 I ECF=67 D  S ECLOC=ECXSTN
"RTN","ECXLABN",38,0)
 .S (ECXSTN,ECXAGC)=""
"RTN","ECXLABN",39,0)
 .I ECXL2'="DIC(4," S ECXSTN="XXXXX",ECXAGC="XX" Q
"RTN","ECXLABN",40,0)
 .I '$D(^DIC(4,ECXL1)) S ECXSTN="XXXXX",ECXAGC="XX" Q
"RTN","ECXLABN",41,0)
 .I $D(^DIC(4,ECXL1)) S ECXSTN=$P(^DIC(4,ECXL1,"99"),U,1),ECXAGC=$E($P(^(99),U,5),1,2) S:ECXSTN="" ECXSTN="ZZZZZ" S:ECXAGC="" ECXAGC="ZZ"
"RTN","ECXLABN",42,0)
 S ECDT=$P(EC1,U,13),ECD=$P(ECDT,"."),ECTM=$$ECXTIME^ECXUTL(ECDT)
"RTN","ECXLABN",43,0)
 S ECWKLD=$P(EC1,U,11),ECWK="" I $D(^LAM(ECWKLD,0)) S ECWK=$P(^(0),U,2)
"RTN","ECXLABN",44,0)
 S (ECNA,ECSN,ECMN,ECPTTM,ECPTPR)="",ECA=1
"RTN","ECXLABN",45,0)
 ;get the patient data if record is in file #2
"RTN","ECXLABN",46,0)
 I ECF=2,$D(^DPT(ECIFN,0)) D
"RTN","ECXLABN",47,0)
 .S EC0=^DPT(ECIFN,0),ECNA=$E($P($P(EC0,U),",")_"    ",1,4),ECSN=$P(EC0,U,9)
"RTN","ECXLABN",48,0)
 .S X=$$INP^ECXUTL2(ECIFN,ECD),ECA=$P(X,U,1),ECMN=$P(X,U,2)
"RTN","ECXLABN",49,0)
 .S X=$$PRIMARY^ECXUTL2(ECIFN,ECD,ECPROF),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXLABN",50,0)
 ;get patient data if record is in file #67
"RTN","ECXLABN",51,0)
 I ECF=67 S ECSN="000123456",ECNA="RFRL" I $D(^LRT(67,ECIFN,0)) D
"RTN","ECXLABN",52,0)
 .S EC0=^LRT(67,ECIFN,0),ECNA=$E($P($P(EC0,U),",")_"    ",1,4),ECSN=$P(EC0,U,9) D
"RTN","ECXLABN",53,0)
 ..S ECNA=$TR(ECNA,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABN",54,0)
 ..I ECSN="" S ECSN="000123456" Q
"RTN","ECXLABN",55,0)
 ..S ECSN=$TR(ECSN," "),ECSN=$TR(ECSN,"-")
"RTN","ECXLABN",56,0)
 ..I ($L(ECSN)<9)!($L(ECSN)>10) S ECSN="000123456" Q
"RTN","ECXLABN",57,0)
 ..I $L(ECSN)=9,ECSN'?9N S ECSN="000123456" Q
"RTN","ECXLABN",58,0)
 ..I $L(ECSN)=10,ECSN'?9N1"P" S ECSN="000123456"
"RTN","ECXLABN",59,0)
 S ECTREAT=$P(EC1,U,10) I ECTREAT S ECTREAT=$P($G(^DIC(45.7,+ECTREAT,0)),U,2)
"RTN","ECXLABN",60,0)
 ;create extract record only if patient name and accession area exist
"RTN","ECXLABN",61,0)
 I ECNA]"" S ECT=$P(EC1,U,8),ECURG=$P(EC1,U,9),EC=+$P(EC1,U,7) I EC D
"RTN","ECXLABN",62,0)
 .S:ECF=2 ECACA=EC_U_$P($G(^LRO(68,EC,0)),U,11) S:ECF=67 ECACA=ECXAGC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",63,0)
 .D FILE
"RTN","ECXLABN",64,0)
 Q
"RTN","ECXLABN",65,0)
 ;
"RTN","ECXLABN",66,0)
FILE ;file record
"RTN","ECXLABN",67,0)
 ;node0
"RTN","ECXLABN",68,0)
 ;inst^patient number^SSN (or equivalent)^name^in/out^day^accession area^abbreviation^test^urgency^treating spec^location^provider and file^
"RTN","ECXLABN",69,0)
 ;movement number^file^time^workload code^primary care team^primary care provider
"RTN","ECXLABN",70,0)
 ;node1
"RTN","ECXLABN",71,0)
 ;mpi^dss dept^provider npi^pc provider npi^pc prov person class
"RTN","ECXLABN",72,0)
 N DA,DIK
"RTN","ECXLABN",73,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABN",74,0)
 S ECODE=EC7_U_EC23
"RTN","ECXLABN",75,0)
 S ECODE=ECODE_U_ECINST_U_ECIFN_U_ECSN_U_ECNA_U_ECA_U_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECACA_U_ECT_U_ECURG_U_ECTREAT_U_ECLOC_U_ECDOC_U_ECMN_U_ECF_U_ECTM_U_ECWK_U_ECPTTM_U_ECPTPR
"RTN","ECXLABN",76,0)
 ;(ECACA=acc area^abbreviation)
"RTN","ECXLABN",77,0)
 S ECODE1=U_U_U_U_ECCLAS
"RTN","ECXLABN",78,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXLABN",79,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXLABN",80,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABN",81,0)
 Q
"RTN","ECXLABN",82,0)
 ;
"RTN","ECXLABN",83,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABN",84,0)
 S ECHEAD="LAB"
"RTN","ECXLABN",85,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABN",86,0)
 Q
"RTN","ECXLABN",87,0)
 ;
"RTN","ECXLABN",88,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABN",89,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXOPRX")
0^6^B21868657
"RTN","ECXOPRX",1,0)
ECXOPRX ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ; [ 03/26/97  2:09 PM ]
"RTN","ECXOPRX",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13**;Dec 22, 1997
"RTN","ECXOPRX",3,0)
 ;
"RTN","ECXOPRX",4,0)
BEG ;entry point from option
"RTN","ECXOPRX",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXOPRX",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXOPRX",7,0)
 Q
"RTN","ECXOPRX",8,0)
START ;entry when queued
"RTN","ECXOPRX",9,0)
 N QFLG,X,DA,DIC,DIQ,DR
"RTN","ECXOPRX",10,0)
 S QFLG=0
"RTN","ECXOPRX",11,0)
 I '$D(ECINST) D
"RTN","ECXOPRX",12,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXOPRX",13,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXOPRX",14,0)
 ;before V6
"RTN","ECXOPRX",15,0)
 S ECPROF=6
"RTN","ECXOPRX",16,0)
 S ECD=$O(^PSRX("AL",0)) I ECD,ECD<ECSD1 G V6
"RTN","ECXOPRX",17,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",18,0)
 F  S ECD=$O(^PSRX("AD",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  F  S ECRX=$O(^PSRX("AD",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AD",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",19,0)
 Q
"RTN","ECXOPRX",20,0)
 ;
"RTN","ECXOPRX",21,0)
V6 ;version 6 or better
"RTN","ECXOPRX",22,0)
 S ECPROF=2
"RTN","ECXOPRX",23,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",24,0)
 F  S ECD=$O(^PSRX("AL",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  F  S ECRX=$O(^PSRX("AL",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AL",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",25,0)
 S ECREF="P",ECD=ECSD1 F  S ECD=$O(^PSRX("AM",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  F  S ECRX=$O(^PSRX("AM",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AM",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",26,0)
 Q
"RTN","ECXOPRX",27,0)
 ;
"RTN","ECXOPRX",28,0)
STUFF ;get date
"RTN","ECXOPRX",29,0)
 N ELG,SSN,DOB,SEX,ADDR,ZIP,STATE,CNTY,VET,NEW1,VAPA,DFN
"RTN","ECXOPRX",30,0)
 S ECTM=$$ECXTIME^ECXUTL(ECD),ECDATA=^PSRX(ECRX,0) I ECRFL S ECDATA1=$G(^PSRX(ECRX,ECREF,ECRFL,0)) I ECDATA1="" Q
"RTN","ECXOPRX",31,0)
 ;ecref set to 1 in extract+5 and v6+1 and to "P" in v6+2
"RTN","ECXOPRX",32,0)
 ;refill nodes and partial nodes are identical in layout
"RTN","ECXOPRX",33,0)
 ;fills (ie., ecrfl=0) and refills (ie.,ecrfl>0) from the "AL" cross-reference, partials from the "AM"
"RTN","ECXOPRX",34,0)
 S ECDFN=$P(ECDATA,U,2),ECPRO=ECPROF_$P(ECDATA,U,4),ECPRC=$P(ECDATA,U,17),ECDRG=+$P(ECDATA,U,6)
"RTN","ECXOPRX",35,0)
 Q:'$D(^DPT(+ECDFN,0))  S PAT=^DPT(+ECDFN,0)
"RTN","ECXOPRX",36,0)
 S X=$$INP^ECXUTL2(ECDFN,ECD),ECA=$P(X,U,1),ECMN=$P(X,U,2),ECTS=$P(X,U,3)
"RTN","ECXOPRX",37,0)
 S SSN=$P(PAT,U,9),ECPT=$E($P($P(PAT,U),",")_"    ",1,4)
"RTN","ECXOPRX",38,0)
 S DOB=$$ECXDOB^ECXUTL($P(PAT,U,3)),SEX=$P(PAT,U,2)
"RTN","ECXOPRX",39,0)
 K APA S DFN=ECDFN D ADD^VADPT
"RTN","ECXOPRX",40,0)
 S STATE=VAPA(5),CNTY=VAPA(7),ZIP=$P(VAPA(11),U,2)
"RTN","ECXOPRX",41,0)
 S STATE=$P($G(^DIC(5,+STATE,0)),U,3),CNTY=$P($G(^DIC(5,+STATE,1,+CNTY,0)),U,3)
"RTN","ECXOPRX",42,0)
 S VET=$P($G(^DPT(+ECDFN,"VET")),U),ELG=$P($G(^DIC(8,+$G(^DPT(+ECDFN,.36)),0)),U,9) I ELG S ELG=$C(ELG+64)
"RTN","ECXOPRX",43,0)
 S X=$$PRIMARY^ECXUTL2(ECDFN,ECD,ECPROF),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXOPRX",44,0)
 I 'ECRFL D
"RTN","ECXOPRX",45,0)
 .S ECMW=$P(ECDATA,U,11),ECQTY=+$P(ECDATA,U,7),ECDIV=$S($D(^PSRX(ECRX,2)):$P(^(2),U,9),1:1)
"RTN","ECXOPRX",46,0)
 .S ECPRC=+$P(ECDATA,U,17),ECOPAY=$P($G(^PSRX(ECRX,"IB")),U,2)]""
"RTN","ECXOPRX",47,0)
 .S ECPRO="" S:$P(ECDATA,U,4)]"" ECPRO=ECPROF_$P(ECDATA,U,4)
"RTN","ECXOPRX",48,0)
 I ECRFL D
"RTN","ECXOPRX",49,0)
 .S ECMW=$P(ECDATA1,U,2),ECQTY=+$P(ECDATA1,U,4),ECDIV=$S(+$P(ECDATA1,U,9):$P(ECDATA1,U,9),1:1)
"RTN","ECXOPRX",50,0)
 .S ECPRC=+$P(ECDATA1,U,11),ECOPAY=$P($G(^PSRX(ECRX,1,ECRFL,"IB")),U)]""
"RTN","ECXOPRX",51,0)
 .S ECPRO="" S:$P(ECDATA1,U,17)]"" ECPRO=ECPROF_$P(ECDATA1,U,17)
"RTN","ECXOPRX",52,0)
 S ECDS=$S(ECRFL:$P(ECDATA1,U,10),1:$P(ECDATA,U,8))
"RTN","ECXOPRX",53,0)
 S ECCAT=$P(^PSDRUG(ECDRG,0),U,2),ECINV=$P(^(0),U,3)["I",ECINV=$S(ECINV:"I",1:"")
"RTN","ECXOPRX",54,0)
 S ECUI=$P($G(^PSDRUG(ECDRG,660)),U,8)
"RTN","ECXOPRX",55,0)
 S ECNDC=$P($G(^PSDRUG(ECDRG,2)),U,4),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXOPRX",56,0)
 S ECNDF=$G(^PSDRUG(ECDRG,"ND")),P1=$P(ECNDF,U),P3=$P(ECNDF,U,3)
"RTN","ECXOPRX",57,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXOPRX",58,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXOPRX",59,0)
 I ECMW="M" S ECMW=1 I $D(^PSRX("AR",ECD,ECRX)) S ECMW=2
"RTN","ECXOPRX",60,0)
 I ECMW="W" S ECMW=""
"RTN","ECXOPRX",61,0)
 S NEW1="" I ECRFL=0 S NEW1=1
"RTN","ECXOPRX",62,0)
 D FILE
"RTN","ECXOPRX",63,0)
 Q
"RTN","ECXOPRX",64,0)
 ;
"RTN","ECXOPRX",65,0)
FILE ;file record
"RTN","ECXOPRX",66,0)
 ;node0
"RTN","ECXOPRX",67,0)
 ;inst^dfn^ssn^name^in/out^day^division^provider^drug category^mail^placeholder1^new^placeholder2^qty^cost^placeholder3^
"RTN","ECXOPRX",68,0)
 ;mov #^treat spec^placeholder4^unit of issue^dob^elig^vet^copay^feeder key^investigational^days supply^primary care team^primary care provider^time^race
"RTN","ECXOPRX",69,0)
 ;node1
"RTN","ECXOPRX",70,0)
 ;mpi^dss dept^sex^zip+4^provider npi^pc provider npi^state^county^pc prov person class
"RTN","ECXOPRX",71,0)
 N DA,DIK
"RTN","ECXOPRX",72,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXOPRX",73,0)
 S ECODE=EC7_U_EC23
"RTN","ECXOPRX",74,0)
 S ECODE=ECODE_U_ECINST_U_ECDFN_U_SSN_U_ECPT_U_ECA_U_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECDIV_U_ECPRO_U_ECCAT_U_ECMW_U_U_NEW1_U_U_ECQTY_U_(ECQTY*ECPRC)_U_U_ECMN_U_ECTS_U_U_ECUI_U_DOB
"RTN","ECXOPRX",75,0)
 S ECODE=ECODE_U_ELG_U_VET_U_ECOPAY_U_ECNFC_U_ECINV_U_ECDS_U_ECPTTM_U_ECPTPR_U_ECTM_U_$P($G(^DIC(10,+$P(^DPT(ECDFN,0),U,6),0)),U,2)
"RTN","ECXOPRX",76,0)
 S ECODE1=U_U_SEX_U_ZIP_U_U_U_STATE_U_CNTY_U_ECCLAS
"RTN","ECXOPRX",77,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXOPRX",78,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXOPRX",79,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXOPRX",80,0)
 Q
"RTN","ECXOPRX",81,0)
 ;
"RTN","ECXOPRX",82,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXOPRX",83,0)
 S ECHEAD="PRE"
"RTN","ECXOPRX",84,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXOPRX",85,0)
 Q
"RTN","ECXOPRX",86,0)
 ;
"RTN","ECXOPRX",87,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXOPRX",88,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPIVD")
0^7^B12537861
"RTN","ECXPIVD",1,0)
ECXPIVD ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV STATS File (#50.8) ; [ 12/05/96  10:41 AM ]
"RTN","ECXPIVD",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13**;Dec 22, 1997
"RTN","ECXPIVD",3,0)
BEG ;entry point from option
"RTN","ECXPIVD",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPIVD",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXPIVD",6,0)
 Q
"RTN","ECXPIVD",7,0)
 ;
"RTN","ECXPIVD",8,0)
START ; start package specific extract
"RTN","ECXPIVD",9,0)
 N QFLG,X
"RTN","ECXPIVD",10,0)
 S QFLG=0
"RTN","ECXPIVD",11,0)
 S ECED=ECED+.3
"RTN","ECXPIVD",12,0)
 K ^TMP($J)
"RTN","ECXPIVD",13,0)
 S ECIV=0 F  S ECIV=$O(^PS(50.8,ECIV)),ECD=ECSD1 Q:'ECIV  F  S ECD=$O(^PS(50.8,ECIV,2,ECD)) Q:'ECD  Q:ECD>ECED  K ^TMP($J) D  Q:QFLG
"RTN","ECXPIVD",14,0)
 .;go thru AC crossreference to get pointers to 52.6 and 52.7
"RTN","ECXPIVD",15,0)
 .F ECJ=52.6,52.7 S ECK=0 F  S ECK=$O(^PS(50.8,ECIV,2,ECD,2,"AC",ECJ,ECK)),ECL=0 Q:'ECK  F   S ECL=$O(^PS(50.8,ECIV,2,ECD,2,"AC",ECJ,ECK,ECL)) Q:'ECL  S ^TMP($J,ECL,ECK)=""
"RTN","ECXPIVD",16,0)
 .S ECI=0 F  S ECI=$O(^PS(50.8,ECIV,2,ECD,2,ECI)) Q:'ECI  I $D(^(ECI,0)) S ECC=$P(^(0),U,5),ECF=+$P(^(0),U,7),ECDRG=+$O(^TMP($J,ECI,0)),EC50=+$P($G(^PS(ECF,ECDRG,0)),U,2) D  Q:QFLG
"RTN","ECXPIVD",17,0)
 ..S ECCAT=$P($G(^PSDRUG(EC50,0)),U,2),ECNDC=$P($G(^(2)),U,4),ECNDF=$G(^("ND")),ECINV=$P(^(0),U,3),ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXPIVD",18,0)
 ..S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXPIVD",19,0)
 ..S P1=$P(ECNDF,U),P3=$P(ECNDF,U,3)
"RTN","ECXPIVD",20,0)
 ..S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXPIVD",21,0)
 ..I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXPIVD",22,0)
 ..S ECDFN=0 F  S ECDFN=$O(^PS(50.8,ECIV,2,ECD,2,ECI,1,ECDFN)) Q:'ECDFN  I $D(^(ECDFN,0)) S EC=^(0),ECQ=$P(EC,U,2)-$P(EC,U,3)-$P(EC,U,6),ECCS=ECQ*ECC,ECW=$P(EC,U,5) I ECQ D  Q:QFLG
"RTN","ECXPIVD",23,0)
 ...I $D(^DPT(ECDFN,0)) S EC1=^(0),(ECWD,ECMN,ECTS,ECADM)="" D
"RTN","ECXPIVD",24,0)
 ....S X=$$PRIMARY^ECXUTL2(ECDFN,ECD),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXPIVD",25,0)
 ....I ECW=.5 S ECWD="CLI"
"RTN","ECXPIVD",26,0)
 ....E  S ECWD=$P($G(^DIC(42,+ECW,44)),U) K VAIP S VAIP("D")=ECD,DFN=ECDFN D IN5^VADPT S ECMN=VAIP(1),ECTS=$P($G(^DIC(45.7,+VAIP(8),0)),U,2) S:+VAIP(13) ECADM=$P(^DGPM(+VAIP(13),0),U) K VAIP
"RTN","ECXPIVD",27,0)
 ....D FILE K P1,P3
"RTN","ECXPIVD",28,0)
 Q
"RTN","ECXPIVD",29,0)
 ;
"RTN","ECXPIVD",30,0)
FILE ;file record
"RTN","ECXPIVD",31,0)
 ;node0
"RTN","ECXPIVD",32,0)
 ;fac^dfn^ssn^name^i/o^day^va class^qty^ward^cost^movement #^treat spec^ndc^investigational^iv dispensing fee^new feeder key^total doses^primary care team^primary care provider^ivp time^adm date^adm time^dss identifier
"RTN","ECXPIVD",33,0)
 ;node1
"RTN","ECXPIVD",34,0)
 ;mpi^dss dept^pc provider npi^pc prov person class
"RTN","ECXPIVD",35,0)
 N DA,DIK
"RTN","ECXPIVD",36,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPIVD",37,0)
 S ECODE=EC7_U_EC23
"RTN","ECXPIVD",38,0)
 S ECODE=ECODE_U_ECINST_U_ECDFN_U_$P(EC1,U,9)_U_$E($P($P(EC1,U),",")_"    ",1,4)_U_$S(ECW=.5:1,1:3)_U_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECCAT_U_ECQ
"RTN","ECXPIVD",39,0)
 S ECODE=ECODE_U_ECWD_U_ECCS_U_ECMN_U_ECTS_U_ECNDC_U_ECINV_U_U_U_U_ECPTTM_U_ECPTPR_U_"000000"_U_$$ECXDATE^ECXUTL(ECADM,ECXYM)_$$ECXTIME^ECXUTL(ECADM)_U
"RTN","ECXPIVD",40,0)
 ;if this is an outpatient, send null for admission date and "000000" for admission time
"RTN","ECXPIVD",41,0)
 I ECW=.5 S $P(ECODE,U,24)="",$P(ECODE,U,25)="000000"
"RTN","ECXPIVD",42,0)
 S ECODE1=U_U_U_ECCLAS
"RTN","ECXPIVD",43,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXPIVD",44,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXPIVD",45,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPIVD",46,0)
 Q
"RTN","ECXPIVD",47,0)
 ;
"RTN","ECXPIVD",48,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPIVD",49,0)
 S ECHEAD="IVP"
"RTN","ECXPIVD",50,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPIVD",51,0)
 ;variables ecver and ecrtn will be reset in routine ecxtrac if appropriate
"RTN","ECXPIVD",52,0)
 S ECVER=3
"RTN","ECXPIVD",53,0)
 Q
"RTN","ECXPIVD",54,0)
 ;
"RTN","ECXPIVD",55,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPIVD",56,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPIVDN")
0^8^B21115334
"RTN","ECXPIVDN",1,0)
ECXPIVDN ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ; [ 03/26/97  2:10 PM ]
"RTN","ECXPIVDN",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13**;Dec 22, 1997
"RTN","ECXPIVDN",3,0)
START ; start package specific extract
"RTN","ECXPIVDN",4,0)
 N QFLG
"RTN","ECXPIVDN",5,0)
 S QFLG=0
"RTN","ECXPIVDN",6,0)
 I '$D(ECINST) D
"RTN","ECXPIVDN",7,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPIVDN",8,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPIVDN",9,0)
 S ECED=ECED+.3
"RTN","ECXPIVDN",10,0)
 K ^TMP($J)
"RTN","ECXPIVDN",11,0)
 S ECD=ECSD1
"RTN","ECXPIVDN",12,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  I $D(^DPT(DFN,0)) S EC=^(0) D DEMOG F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J) S ECVOL=0 D  Q:QFLG
"RTN","ECXPIVDN",13,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  I $D(^ECX(728.113,DA,0)) S EC=^(0) D  Q:QFLG
"RTN","ECXPIVDN",14,0)
 ..S DRG=$P(EC,U,4) I $P(EC,U,8)]"" D
"RTN","ECXPIVDN",15,0)
 ...I '$D(^TMP($J,"A",DRG)) S ^(DRG)=$P(EC,U,7,8),^(DRG,1)=0,^(2)=$P(EC,U,12)
"RTN","ECXPIVDN",16,0)
 ...S ^(1)=^TMP($J,"A",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",17,0)
 ..I $P(EC,U,9) D
"RTN","ECXPIVDN",18,0)
 ...I '$D(^TMP($J,"S",DRG)) S ^(DRG)=$P(EC,U,9)_"^ML",^(DRG,1)=0,^(2)=$P(EC,U,12),ECVOL=$P(EC,U,9)+ECVOL
"RTN","ECXPIVDN",19,0)
 ...S ^(1)=^TMP($J,"S",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",20,0)
 ..S ECTYP=$P(EC,U,11),ECTOTC=0,ECDTTM=$$ECXTIME^ECXUTL($P(EC,U,5))
"RTN","ECXPIVDN",21,0)
 .;looped thru all DAs for this order - now put it together
"RTN","ECXPIVDN",22,0)
 .;leave the next line in case the decision is made to send volume designations
"RTN","ECXPIVDN",23,0)
 .;I ECTYP="H" S ECTYP=ECTYP_$S(ECVOL'>1000:1,ECVOL'>2000:2,1:3)
"RTN","ECXPIVDN",24,0)
 .F SA="S","A" S DRG="" F  S DRG=$O(^TMP($J,SA,DRG)) Q:DRG=""  S ECST=^(DRG),CNT=^(DRG,1),COST=^(2),ECTOTC=ECTOTC+COST,COST=COST*CNT I $D(^PSDRUG(DRG,0)) S EC0=^(0),EC2=$G(^(2)),ECND=$G(^("ND")) D  Q:QFLG
"RTN","ECXPIVDN",25,0)
 ..S ECDIV="",ECXDSSI=""
"RTN","ECXPIVDN",26,0)
 ..;if outpatient get division from iv rm; get dss identifier for clinic
"RTN","ECXPIVDN",27,0)
 ..I ECA=1 D
"RTN","ECXPIVDN",28,0)
 ...I $D(^PS(55,DFN,"IV",ON,2)) S ECIVRM=$P(^(2),U,2),ECDIV=$P(^PS(59.5,ECIVRM,0),U,4)
"RTN","ECXPIVDN",29,0)
 ...S CLIN=+$P(EC,U,13),(ECXP1,ECXP2)="000"
"RTN","ECXPIVDN",30,0)
 ...S ECXCL=$G(^ECX(728.44,CLIN,0)) Q:ECXCL=""
"RTN","ECXPIVDN",31,0)
 ...S ECSC=$P(ECXCL,U,4),ECCSC=$P(ECXCL,U,5)
"RTN","ECXPIVDN",32,0)
 ...I ECSC="" S ECSC=$P(ECXCL,U,2),ECCSC=$P(ECXCL,U,3)
"RTN","ECXPIVDN",33,0)
 ...I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXPIVDN",34,0)
 ...I ECSC="" S ECSC=$P($G(^SC(ECXSC,0)),U,7),ECCSC=$P($G(^SC(ECXSC,0)),U,18) I ECSC D
"RTN","ECXPIVDN",35,0)
 ....S ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2) S:ECCSC]"" ECXP2=$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXPIVDN",36,0)
 ....S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXPIVDN",37,0)
 ...S ECXDSSI=ECXP1_ECXP2
"RTN","ECXPIVDN",38,0)
 ..;if inpatient get division from ward
"RTN","ECXPIVDN",39,0)
 ..I ECA=3 S ECDIV=$P(^SC(ECW,0),U,15)
"RTN","ECXPIVDN",40,0)
 ..S ECINV=$P(EC0,U,3),ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXPIVDN",41,0)
 ..S ECST=CNT*ECST_" "_$P(ECST,U,2)
"RTN","ECXPIVDN",42,0)
 ..S ECNDC=$P(EC2,U,4),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXPIVDN",43,0)
 ..S P1=$P(ECND,U),P3=$P(ECND,U,3)
"RTN","ECXPIVDN",44,0)
 ..S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXPIVDN",45,0)
 ..I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXPIVDN",46,0)
 ..D FILE
"RTN","ECXPIVDN",47,0)
 K ^TMP($J),CLIN,CNT,COST,DA,DFN,DIC,DIK,DRG,ON,SA,SSN,X,Y,P1,P3
"RTN","ECXPIVDN",48,0)
 Q
"RTN","ECXPIVDN",49,0)
 ;
"RTN","ECXPIVDN",50,0)
FILE ;file record
"RTN","ECXPIVDN",51,0)
 ;node0
"RTN","ECXPIVDN",52,0)
 ;node1
"RTN","ECXPIVDN",53,0)
 ;mpi^dss dept^pc provider npi^pc prov person class
"RTN","ECXPIVDN",54,0)
 N DA,DIK
"RTN","ECXPIVDN",55,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPIVDN",56,0)
 S ECODE=EC7_U_EC23
"RTN","ECXPIVDN",57,0)
 S ECODE=ECODE_U_ECDIV_U_DFN_U_SSN_U_ECNA_U_ECA_U_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_$P(EC0,U,2)_U_CNT_U_ECW_U_COST_U_ECMN_U_ECTS
"RTN","ECXPIVDN",58,0)
 S ECODE=ECODE_U_ECNDC_U_ECINV_U_ECTYP_U_ECNFC_U_ECST_U_ECPTTM_U_ECPTPR_U_ECDTTM_U_$$ECXDATE^ECXUTL(ECADM,ECXYM)_U_$$ECXTIME^ECXUTL(ECADM)_U_ECXDSSI
"RTN","ECXPIVDN",59,0)
 ;if this is an outpatient, send null for admission date and "000000" for admission time
"RTN","ECXPIVDN",60,0)
 I ECA=1 S $P(ECODE,U,24)="",$P(ECODE,U,25)="000000"
"RTN","ECXPIVDN",61,0)
 S ECODE1=U_U_U_ECCLAS
"RTN","ECXPIVDN",62,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXPIVDN",63,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXPIVDN",64,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPIVDN",65,0)
 Q
"RTN","ECXPIVDN",66,0)
 ;
"RTN","ECXPIVDN",67,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPIVDN",68,0)
 S ECHEAD="IVP"
"RTN","ECXPIVDN",69,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPIVDN",70,0)
 ;variables ecver and ecrtn will be reset in routine ecxtrac if appropriate
"RTN","ECXPIVDN",71,0)
 S ECVER=7
"RTN","ECXPIVDN",72,0)
 Q
"RTN","ECXPIVDN",73,0)
 ;
"RTN","ECXPIVDN",74,0)
DEMOG ;new patient - get primary care team and provider, name, SSN, and VAIP
"RTN","ECXPIVDN",75,0)
 N X
"RTN","ECXPIVDN",76,0)
 S X=$$PRIMARY^ECXUTL2(DFN,ECD),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXPIVDN",77,0)
 S SSN=$P(EC,U,9),ECNA=$E($P($P(EC,U),",")_"    ",1,4)
"RTN","ECXPIVDN",78,0)
 ; checks for in/outpatient status and gets movement number
"RTN","ECXPIVDN",79,0)
 S ECA=1,(ECTS,ECADM)="",ECW=.5,(ECWR,ECTSR)="OUTPATIENT" K VAIP S VAIP("D")=ECD D IN5^VADPT S ECMN=VAIP(1)
"RTN","ECXPIVDN",80,0)
 I ECMN S ECA=3,ECTS=$P($G(^DIC(45.7,+VAIP(8),0)),U,2),ECW=+$G(^DIC(42,+VAIP(5),44)),ECWR=$P(VAIP(5),U,2),ECTSR=$P(VAIP(8),U,2)
"RTN","ECXPIVDN",81,0)
 I +VAIP(13) S ECADM=$P(^DGPM(+VAIP(13),0),U)
"RTN","ECXPIVDN",82,0)
 K VAIP,VAERR
"RTN","ECXPIVDN",83,0)
 Q
"RTN","ECXPIVDN",84,0)
 ;
"RTN","ECXPIVDN",85,0)
 ;
"RTN","ECXPIVDN",86,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPIVDN",87,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPRO")
0^9^B19391204
"RTN","ECXPRO",1,0)
ECXPRO ;ALB/GTS - Prosthetics Extract for DSS ; July 16, 1998
"RTN","ECXPRO",2,0)
 ;;3.0;DSS EXTRACTS;**9,13**;Dec 22, 1997
"RTN","ECXPRO",3,0)
BEG ;entry point from option
"RTN","ECXPRO",4,0)
 D SETUP
"RTN","ECXPRO",5,0)
 I +ECINST>0 D ^ECXTRAC
"RTN","ECXPRO",6,0)
 D ^ECXKILL
"RTN","ECXPRO",7,0)
 Q
"RTN","ECXPRO",8,0)
 ;
"RTN","ECXPRO",9,0)
START ;start package specific extract
"RTN","ECXPRO",10,0)
 ;
"RTN","ECXPRO",11,0)
 ; Input
"RTN","ECXPRO",12,0)
 ;  ECSD1   - FM formated Beginning Date (Set by ECXTRAC)
"RTN","ECXPRO",13,0)
 ;  ECED    - FM formated End Date (Set by ECXTRAC)
"RTN","ECXPRO",14,0)
 ;  ECSDN   - Externally formated Start Date (Set by ECXTRAC)
"RTN","ECXPRO",15,0)
 ;  ECEDN   - Externally formated End Date (Set by ECXTRAC)
"RTN","ECXPRO",16,0)
 ;  EC      - IEN from file #727 (Set by ECXTRAC)
"RTN","ECXPRO",17,0)
 ;  ECXYM   - Year and Month of extract (YYYYMM)
"RTN","ECXPRO",18,0)
 ;  ECXINST - IEN for division of selected institution
"RTN","ECXPRO",19,0)
 ;  ECINST  - Station number of selected division
"RTN","ECXPRO",20,0)
 ;
"RTN","ECXPRO",21,0)
 N ECXLNE,ECXCT,ECXDACT,ECX0,ECXLB,ECXED1,ECINSTSV,ECXLNSTR
"RTN","ECXPRO",22,0)
 D ECXBUL^ECXPRO2(.ECXLNE,ECSDN,ECEDN,EC)
"RTN","ECXPRO",23,0)
 S ECXLNSTR=ECXLNE
"RTN","ECXPRO",24,0)
 S ECXED1=ECED+.9999
"RTN","ECXPRO",25,0)
 S ECXCT=ECSD1
"RTN","ECXPRO",26,0)
 F  S ECXCT=$O(^RMPR(660,"CT",ECXCT)) Q:(ECXCT>ECXED1)  Q:(+ECXCT=0)  Q:(QFLG=1)  DO
"RTN","ECXPRO",27,0)
 .S ECXDACT=0
"RTN","ECXPRO",28,0)
 .F  S ECXDACT=$O(^RMPR(660,"CT",ECXCT,ECXDACT)) Q:(+ECXDACT=0)  Q:(QFLG=1)  DO
"RTN","ECXPRO",29,0)
 ..S ECX0=$G(^RMPR(660,ECXDACT,0))
"RTN","ECXPRO",30,0)
 ..S ECXLB=$G(^RMPR(660,ECXDACT,"LB"))
"RTN","ECXPRO",31,0)
 ..I $$NTEG^ECXPRO1(.ECXLNE,ECXDACT,ECX0,ECXLB,ECINST) DO
"RTN","ECXPRO",32,0)
 ...D PROSINFO^ECXPRO1(ECXDACT,ECXLB,ECX0) ;*Prosthetics Info
"RTN","ECXPRO",33,0)
 ...D PATINFO^ECXPRO1(ECXCT) ;*Patient Info
"RTN","ECXPRO",34,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,ECXHCPCS,ECXTYPE,ECXSTAT,ECXRQST,ECXRCST,ECXFORM) ;*Feeder Info
"RTN","ECXPRO",35,0)
 ...;
"RTN","ECXPRO",36,0)
 ...S ECINSTSV=$$PAD^ECXUTL1(ECXSTAT,5,"B"," ")
"RTN","ECXPRO",37,0)
 ...S ECXNA=$$PAD^ECXUTL1(ECXNA,4,"B"," ")
"RTN","ECXPRO",38,0)
 ...S ECXDTSVC=$$ECXDATE^ECXUTL(ECXDTSVC,ECXYM)
"RTN","ECXPRO",39,0)
 ...S ECXQTY=$$PAD^ECXUTL1(ECXQTY,4,"F"," ")
"RTN","ECXPRO",40,0)
 ...S ECXPCT=$$PAD^ECXUTL1(ECXPCT,10,"F"," ")
"RTN","ECXPRO",41,0)
 ...S:(+ECXPCP>0) ECXPCP=$$PAD^ECXUTL1("2"_ECXPCP,11,"F"," ")
"RTN","ECXPRO",42,0)
 ...S:(+ECXPCP=0) ECXPCP="           "
"RTN","ECXPRO",43,0)
 ...S ECXHCPCS=$$PAD^ECXUTL1(ECXHCPCS,8,"B"," ")
"RTN","ECXPRO",44,0)
 ...S ECXRQST=$$PAD^ECXUTL1(ECXRQST,5,"B"," ")
"RTN","ECXPRO",45,0)
 ...S ECXRCST=$$PAD^ECXUTL1(ECXRCST,5,"B"," ")
"RTN","ECXPRO",46,0)
 ...S ECXELIG=$$PAD^ECXUTL1(ECXELIG,3,"F"," ")
"RTN","ECXPRO",47,0)
 ...S ECXDOB=$$ECXDOB^ECXUTL(ECXDOB)
"RTN","ECXPRO",48,0)
 ...S ECXCTAMT=$$PAD^ECXUTL1(ECXCTAMT,9,"F"," ")
"RTN","ECXPRO",49,0)
 ...S ECXLLC=$$PAD^ECXUTL1(ECXLLC,7,"F"," ")
"RTN","ECXPRO",50,0)
 ...S ECXLMC=$$PAD^ECXUTL1(ECXLMC,7,"F"," ")
"RTN","ECXPRO",51,0)
 ...S ECXFELOC=$$PAD^ECXUTL1(ECXFELOC,9,"B"," ")
"RTN","ECXPRO",52,0)
 ...S ECXFEKEY=$$PAD^ECXUTL1(ECXFEKEY,20,"B"," ")
"RTN","ECXPRO",53,0)
 ...;
"RTN","ECXPRO",54,0)
 ...;* Set the Placeholder variables
"RTN","ECXPRO",55,0)
 ...S (ECXICD9,ECXPCHD1,ECXMPI,ECXPCNPI,ECXDEPT)=""
"RTN","ECXPRO",56,0)
 ...;
"RTN","ECXPRO",57,0)
 ...;* Set the NODE variables (ECODE and ECODE1)
"RTN","ECXPRO",58,0)
 ...S ECODE=ECINSTSV_U_DFN_U_ECXSSN_U_ECXNA_U_ECXIOPT_U_ECXDTSVC_U_ECXFELOC_U
"RTN","ECXPRO",59,0)
 ...S ECODE=ECODE_ECXFEKEY_U_ECXQTY_U_ECXPCT_U_ECXPCP_U_ECXHCPCS_U_ECXICD9_U
"RTN","ECXPRO",60,0)
 ...S ECODE=ECODE_ECXAO_U_ECXRE_U_ECXEC_U_ECXELIG_U_ECXCTAMT_U_ECXLLC_U_ECXLMC_U
"RTN","ECXPRO",61,0)
 ...S ECODE=ECODE_ECXBILST_U_ECXVET_U_ECXTYPE_U_ECXRQST_U_ECXRCST_U_ECXPCHD1
"RTN","ECXPRO",62,0)
 ...S ECODE1=ECXZIP_U_ECXDOB_U_ECXSEX_U_ECXGRPR_U_ECXPCNPI_U_ECXMPI_U_ECXDEPT_U_ECCLAS
"RTN","ECXPRO",63,0)
 ...S EC7=-$O(^ECX(ECFILE,"AINV",""))
"RTN","ECXPRO",64,0)
 ...F  S EC7=EC7+1 Q:'$D(^ECX(ECFILE,EC7))
"RTN","ECXPRO",65,0)
 ...S ^ECX(ECFILE,EC7,0)=EC7_U_EC23_U_ECODE
"RTN","ECXPRO",66,0)
 ...S ^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXPRO",67,0)
 ...S ECRN=ECRN+1
"RTN","ECXPRO",68,0)
 ...S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXPRO",69,0)
 ...I $D(ZTQUEUED),(ECRN>499),'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPRO",70,0)
 ...;
"RTN","ECXPRO",71,0)
 ...;* Reinitialize variables
"RTN","ECXPRO",72,0)
 ...S (DFN,ECXNA,ECXSSN,ECXSTAT,ECXDTSVC,ECXTYPE,ECXSRCE,ECXHCPCS,ECXRQST)=""
"RTN","ECXPRO",73,0)
 ...S (ECXRCST,ECXFORM,ECXCTAMT,ECXLLC,ECXLMC,ECXGRPR,ECXBILST,ECXQTY,ECODE)=""
"RTN","ECXPRO",74,0)
 ...S (ECXFELOC,ECXFEKEY,ECODE1,ECXSEX)=""
"RTN","ECXPRO",75,0)
 ...S (ECXIOPT,ECXPCT,ECXPCP,ECXAO,ECXRE,ECXEC,ECXELIG,ECXVET,ECXZIP,ECXDOB)=""
"RTN","ECXPRO",76,0)
 ;
"RTN","ECXPRO",77,0)
 ;* Send the Exception message
"RTN","ECXPRO",78,0)
 I ECXLNSTR<ECXLNE DO
"RTN","ECXPRO",79,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXPRO",80,0)
 .S XMDUZ=.5
"RTN","ECXPRO",81,0)
 .S XMSUB=ECINST_" - Prosthetics DSS Exception Message",XMN=0
"RTN","ECXPRO",82,0)
 .S XMTEXT="^TMP(""ECX-PRO EXC"",$J,"
"RTN","ECXPRO",83,0)
 .D ^XMD
"RTN","ECXPRO",84,0)
 K ^TMP("ECX-PRO EXC",$J),XMDUZ,XMSUB,XMTEXT,XMY
"RTN","ECXPRO",85,0)
 ;
"RTN","ECXPRO",86,0)
CLEAN ;* Cleanup variables
"RTN","ECXPRO",87,0)
 K DFN,ECXNA,ECXSSN,ECXSTAT,ECXDTSVC,ECXTYPE,ECXSRCE,ECXHCPCS,ECXRQST
"RTN","ECXPRO",88,0)
 K ECXRCST,ECXFORM,ECXCTAMT,ECXLLC,ECXLMC,ECXGRPR,ECXBILST,ECXQTY
"RTN","ECXPRO",89,0)
 K ECXFELOC,ECXFEKEY,ECODE1,ECXICD9,ECXPCHD1,ECXMPI,ECXPCNPI,ECXDEPT,DFN
"RTN","ECXPRO",90,0)
 K ECXIOPT,ECXPCT,ECXPCP,ECXAO,ECXRE,ECXEC,ECXELIG,ECXVET,ECXZIP,ECXDOB
"RTN","ECXPRO",91,0)
 K ECXSEX
"RTN","ECXPRO",92,0)
 Q
"RTN","ECXPRO",93,0)
 ;
"RTN","ECXPRO",94,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPRO",95,0)
 S ECHEAD="PRO"
"RTN","ECXPRO",96,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPRO",97,0)
 S ECINST=$$PDIV^ECXPUTL
"RTN","ECXPRO",98,0)
 Q
"RTN","ECXPRO",99,0)
 ;
"RTN","ECXPRO",100,0)
 ;**Note: LOCAL and QUE are carry over from protocols set by other
"RTN","ECXPRO",101,0)
 ;        routines.
"RTN","ECXPRO",102,0)
LOCAL ;to extract nightly for local use not to be transmitted to TSI
"RTN","ECXPRO",103,0)
 ;QUEUE with 1D frequency
"RTN","ECXPRO",104,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXPRO",105,0)
 ;
"RTN","ECXPRO",106,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPRO",107,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPRO1")
0^10^B30321264
"RTN","ECXPRO1",1,0)
ECXPRO1 ;ALB/GTS - Prosthetics Extract for DSS (Continued) ; July 16, 1998
"RTN","ECXPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**9,11,13**;Dec 22, 1997
"RTN","ECXPRO1",3,0)
 ;
"RTN","ECXPRO1",4,0)
NTEG(ECXLNE,ECXPIEN,ECXN0,ECXNLB,ECINST) ;** Check for required fields
"RTN","ECXPRO1",5,0)
 ;
"RTN","ECXPRO1",6,0)
 ;   Input
"RTN","ECXPRO1",7,0)
 ;    ECXLNE   - The line number variable (passed by reference)
"RTN","ECXPRO1",8,0)
 ;    ECXPIEN  - The IEN for the Prosthetics record
"RTN","ECXPRO1",9,0)
 ;    ECXN0    - The zero node of the Prosthetics record
"RTN","ECXPRO1",10,0)
 ;    ECXNLB   - The LB node of the Prosthetics record
"RTN","ECXPRO1",11,0)
 ;    ECINST   - The Station number being extracted
"RTN","ECXPRO1",12,0)
 ;
"RTN","ECXPRO1",13,0)
 ;   Output (to be KILLed by calling routine)
"RTN","ECXPRO1",14,0)
 ;    ^TMP("ECX-PRO EXC",$J) - Array for the exception message       
"RTN","ECXPRO1",15,0)
 ;    ECXLNE                 - The number of the next line in the msg
"RTN","ECXPRO1",16,0)
 ;    DFN                    - Patient's IEN in the Patient file
"RTN","ECXPRO1",17,0)
 ;    ECXNA                  - 1st four character of patient's last name
"RTN","ECXPRO1",18,0)
 ;    ECXSSN                 - Patients Social Security number
"RTN","ECXPRO1",19,0)
 ;    ECXSTAT                - Patient Station Number
"RTN","ECXPRO1",20,0)
 ;    ECXDTSVC               - Delivery Date of Prosthesis
"RTN","ECXPRO1",21,0)
 ;    ECXTYPE                - Type of Transaction work performed
"RTN","ECXPRO1",22,0)
 ;    ECXSRCE                - Source of prosthesis
"RTN","ECXPRO1",23,0)
 ;    ECXHCPCS               - HCPCS code for prosthesis
"RTN","ECXPRO1",24,0)
 ;    ECXRQST                - Requesting Station
"RTN","ECXPRO1",25,0)
 ;    ECXRCST                - Receiving Station
"RTN","ECXPRO1",26,0)
 ;    ECXFORM                - The Form Requested On
"RTN","ECXPRO1",27,0)
 ;
"RTN","ECXPRO1",28,0)
 ;   Output (KILLed by NTEG)
"RTN","ECXPRO1",29,0)
 ;    ECXMIS                 - 1 indicates missing information
"RTN","ECXPRO1",30,0)
 ;
"RTN","ECXPRO1",31,0)
 N ECXGOOD,ECXMISS
"RTN","ECXPRO1",32,0)
 S (ECXRCST,ECXRQST)=""
"RTN","ECXPRO1",33,0)
 S ECXMISS=""
"RTN","ECXPRO1",34,0)
 S ECXGOOD=1
"RTN","ECXPRO1",35,0)
 ;
"RTN","ECXPRO1",36,0)
 ;* Get Facility Station Number
"RTN","ECXPRO1",37,0)
 S ECXSTAT=$P(ECXN0,U,10)
"RTN","ECXPRO1",38,0)
 I ECXSTAT]"" DO
"RTN","ECXPRO1",39,0)
 .K ECXDIC S DA=ECXSTAT,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPRO1",40,0)
 .D EN^DIQ1 S ECXSTAT=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPRO1",41,0)
 ;
"RTN","ECXPRO1",42,0)
 ;** Screen out records
"RTN","ECXPRO1",43,0)
 S:($P(ECXN0,U,17)'="") ECXGOOD=0 ;*SHIP/DEL is not NULL
"RTN","ECXPRO1",44,0)
 S:($P(ECXN0,U,26)'="") ECXGOOD=0 ;*PICKUP/DEL is not NULL
"RTN","ECXPRO1",45,0)
 S:(+($P($G(^RMPR(660,ECXPIEN,"AM")),U,2))=1) ECXGOOD=0 ;*NO ADMIN CT=1
"RTN","ECXPRO1",46,0)
 S:(($P(ECXN0,U,15))'="") ECXGOOD=0 ;*HISTORICAL DATA is not NULL
"RTN","ECXPRO1",47,0)
 ;
"RTN","ECXPRO1",48,0)
 S DFN=$P(ECXN0,U,2)
"RTN","ECXPRO1",49,0)
 S ECXSSN=$P($G(^DPT(+DFN,0)),U,9)
"RTN","ECXPRO1",50,0)
 S ECXNA=$E($P($P($G(^DPT(+DFN,0)),U),",")_"    ",1,4)
"RTN","ECXPRO1",51,0)
 S ECXDTSVC=$P(ECXN0,U,12)
"RTN","ECXPRO1",52,0)
 S ECXTYPE=$P(ECXN0,U,4)
"RTN","ECXPRO1",53,0)
 S ECXSRCE=$P(ECXN0,U,14)
"RTN","ECXPRO1",54,0)
 S ECXHCPCS=$P($G(^ICPT(+$P(ECXN0,U,22),0)),U,1)
"RTN","ECXPRO1",55,0)
 S ECXFORM=$P(ECX0,U,13)
"RTN","ECXPRO1",56,0)
 ;
"RTN","ECXPRO1",57,0)
 ;* Get Requesting Station Number
"RTN","ECXPRO1",58,0)
 I +ECXFORM=4 DO
"RTN","ECXPRO1",59,0)
 .S ECXRQST=$P(ECXNLB,U,1)
"RTN","ECXPRO1",60,0)
 .I ECXRQST]"" DO
"RTN","ECXPRO1",61,0)
 ..S DA=ECXRQST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPRO1",62,0)
 ..D EN^DIQ1 S ECXRQST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPRO1",63,0)
 S:(+ECXFORM'=4) ECXRQST=""
"RTN","ECXPRO1",64,0)
 ;
"RTN","ECXPRO1",65,0)
 ;* Screen out records
"RTN","ECXPRO1",66,0)
 S:(+ECXFORM=13) ECXGOOD=0 ;*FORM REQUESTED ON = 13
"RTN","ECXPRO1",67,0)
 ;
"RTN","ECXPRO1",68,0)
 ;* Get Receiving Station Number
"RTN","ECXPRO1",69,0)
 I +ECXFORM=4 DO
"RTN","ECXPRO1",70,0)
 .S ECXRCST=$P(ECXNLB,U,4)
"RTN","ECXPRO1",71,0)
 .I ECXRCST]"" DO
"RTN","ECXPRO1",72,0)
 ..S DA=ECXRCST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPRO1",73,0)
 ..D EN^DIQ1 S ECXRCST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPRO1",74,0)
 S:(+ECXFORM'=4) ECXRCST=""
"RTN","ECXPRO1",75,0)
 ;
"RTN","ECXPRO1",76,0)
 ;** Check for integrity and set up the problem variable if right DIV
"RTN","ECXPRO1",77,0)
 I ECXGOOD DO
"RTN","ECXPRO1",78,0)
 .I ECXSTAT']"" DO
"RTN","ECXPRO1",79,0)
 ..S ECXMISS="1"
"RTN","ECXPRO1",80,0)
 ..D CHK ;* Set ECXGOOD
"RTN","ECXPRO1",81,0)
 .I ECXSTAT]"" DO
"RTN","ECXPRO1",82,0)
 ..S:(ECINST'=$E(ECXSTAT,1,3)) ECXGOOD=0 ;*Screen for incorrect Station
"RTN","ECXPRO1",83,0)
 ..D:(ECXGOOD=1) CHK ;* Set ECXGOOD
"RTN","ECXPRO1",84,0)
 Q ECXGOOD
"RTN","ECXPRO1",85,0)
 ;
"RTN","ECXPRO1",86,0)
CHK ;*Check variables
"RTN","ECXPRO1",87,0)
 ;
"RTN","ECXPRO1",88,0)
 ; Input
"RTN","ECXPRO1",89,0)
 ;  Variables set in and Output from NTEG^ECXPRO1
"RTN","ECXPRO1",90,0)
 ;
"RTN","ECXPRO1",91,0)
 ; Output
"RTN","ECXPRO1",92,0)
 ;  ^TMP("ECX-PRO EXC",$J,   - Global of records with integrity problems
"RTN","ECXPRO1",93,0)
 ;
"RTN","ECXPRO1",94,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",95,0)
 I DFN']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",96,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",97,0)
 I ECXSSN']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",98,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",99,0)
 I ECXNA="    " S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",100,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",101,0)
 I ECXDTSVC']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",102,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",103,0)
 I ECXTYPE']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",104,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",105,0)
 I ECXSRCE']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",106,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",107,0)
 I ECXHCPCS']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",108,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",109,0)
 I +ECXFORM=4 DO
"RTN","ECXPRO1",110,0)
 .I ECXRQST']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",111,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",112,0)
 I ECXFORM']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",113,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",114,0)
 I +ECXFORM=4 DO
"RTN","ECXPRO1",115,0)
 .I ECXRCST']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",116,0)
 I ECXMISS'="^^^^^^^^^^" DO
"RTN","ECXPRO1",117,0)
 .S ECXGOOD=0
"RTN","ECXPRO1",118,0)
 .D ECXMISLN^ECXPRO2(ECXMISS,.ECXLNE,ECXPIEN)
"RTN","ECXPRO1",119,0)
 Q
"RTN","ECXPRO1",120,0)
 ;
"RTN","ECXPRO1",121,0)
PROSINFO(ECXDA,ECXLB,ECX0) ;*Get Prosthetics Information
"RTN","ECXPRO1",122,0)
 ;
"RTN","ECXPRO1",123,0)
 ;  Input
"RTN","ECXPRO1",124,0)
 ;    ECDA    - The IEN for the Prosthetics record
"RTN","ECXPRO1",125,0)
 ;    ECX0    - The zero node of the Prosthetics record
"RTN","ECXPRO1",126,0)
 ;    ECXLB   - The LB node of the Prosthetics record
"RTN","ECXPRO1",127,0)
 ;    ECXFORM - The Form Requested On (to determine Lab transactions)
"RTN","ECXPRO1",128,0)
 ;
"RTN","ECXPRO1",129,0)
 ;  Output (to be KILLed by calling routine)
"RTN","ECXPRO1",130,0)
 ;    ECXCTAMT   - The Cost of Transaction
"RTN","ECXPRO1",131,0)
 ;    ECXLLC     - The Lab Labor Cost
"RTN","ECXPRO1",132,0)
 ;    ECXLMC     - The Lab Material Cost
"RTN","ECXPRO1",133,0)
 ;    ECXGRPR    - The AMIS Grouper number
"RTN","ECXPRO1",134,0)
 ;    ECXBILST   - The Billing Status
"RTN","ECXPRO1",135,0)
 ;    ECXQTY     - The Quantity
"RTN","ECXPRO1",136,0)
 ;
"RTN","ECXPRO1",137,0)
 S (ECXLLC,ECXLMC,ECXCTAMT)=""
"RTN","ECXPRO1",138,0)
 S ECXBILST=$P($G(^RMPR(660,ECXDA,"AM")),U,3)
"RTN","ECXPRO1",139,0)
 S ECXQTY=$P(ECX0,U,7)
"RTN","ECXPRO1",140,0)
 S:(+ECXQTY=0) ECXQTY=1
"RTN","ECXPRO1",141,0)
 S ECXGRPR=$P($G(^RMPR(660,ECXDA,"AMS")),U,1)
"RTN","ECXPRO1",142,0)
 I +ECXFORM>0,(+ECXFORM<4) S ECXCTAMT=$P(ECX0,U,16)
"RTN","ECXPRO1",143,0)
 I +ECXFORM>4,(+ECXFORM<13) S ECXCTAMT=$P(ECX0,U,16)
"RTN","ECXPRO1",144,0)
 I +ECXFORM=14 S ECXCTAMT=$P(ECX0,U,16)
"RTN","ECXPRO1",145,0)
 I +ECXFORM=4 DO
"RTN","ECXPRO1",146,0)
 .S ECXCTAMT=$P(ECXLB,U,9)
"RTN","ECXPRO1",147,0)
 .S ECXLLC=$P(ECXLB,U,7)
"RTN","ECXPRO1",148,0)
 .S ECXLMC=$P(ECXLB,U,8)
"RTN","ECXPRO1",149,0)
 I ECXCTAMT="" S ECXCTAMT="0.00"
"RTN","ECXPRO1",150,0)
 I ECXLLC="" S ECXLLC="0.00"
"RTN","ECXPRO1",151,0)
 I ECXLMC="" S ECXLMC="0.00"
"RTN","ECXPRO1",152,0)
 ;
"RTN","ECXPRO1",153,0)
 ;* Add decimals if needed
"RTN","ECXPRO1",154,0)
 S:(ECXCTAMT'[".") ECXCTAMT=ECXCTAMT_".00"
"RTN","ECXPRO1",155,0)
 S:($L($P(ECXCTAMT,".",2))<2) $P(ECXCTAMT,".",2)=$$PAD^ECXUTL1($P(ECXCTAMT,".",2),2,"B","0")
"RTN","ECXPRO1",156,0)
 S:(ECXLLC'[".") ECXLLC=ECXLLC_".00"
"RTN","ECXPRO1",157,0)
 S:($L($P(ECXLLC,".",2))<2) $P(ECXLLC,".",2)=$$PAD^ECXUTL1($P(ECXLLC,".",2),2,"B","0")
"RTN","ECXPRO1",158,0)
 S:(ECXLMC'[".") ECXLMC=ECXLMC_".00"
"RTN","ECXPRO1",159,0)
 S:($L($P(ECXLMC,".",2))<2) $P(ECXLMC,".",2)=$$PAD^ECXUTL1($P(ECXLMC,".",2),2,"B","0")
"RTN","ECXPRO1",160,0)
 Q
"RTN","ECXPRO1",161,0)
 ;
"RTN","ECXPRO1",162,0)
PATINFO(ECXDELDT) ;* Get Patient Information
"RTN","ECXPRO1",163,0)
 ;
"RTN","ECXPRO1",164,0)
 ;  Input
"RTN","ECXPRO1",165,0)
 ;    ECXDELDT - The Delivery of the Prosthesis
"RTN","ECXPRO1",166,0)
 ;
"RTN","ECXPRO1",167,0)
 ;  Output (to be KILLed by calling routine)
"RTN","ECXPRO1",168,0)
 ;    ECXIOPT    - The In/Outpatient indicator
"RTN","ECXPRO1",169,0)
 ;    ECXPCT     - The Primary Care Team
"RTN","ECXPRO1",170,0)
 ;    ECXPCP     - The Primary Care Providor
"RTN","ECXPRO1",171,0)
 ;    ECXAO      - The Agent Orange indicator
"RTN","ECXPRO1",172,0)
 ;    ECXRE      - The Radiation Exposure indicator
"RTN","ECXPRO1",173,0)
 ;    ECXEC      - The Environmental Contaminants indicator
"RTN","ECXPRO1",174,0)
 ;    ECXELIG    - The veteran's eligibility
"RTN","ECXPRO1",175,0)
 ;    ECXVET     - The Vet/Non-Vet status
"RTN","ECXPRO1",176,0)
 ;    ECXZIP     - ZIP or ZIP+4
"RTN","ECXPRO1",177,0)
 ;    ECXDOB     - The patient's birth date
"RTN","ECXPRO1",178,0)
 ;    ECXSEX     - The Patient's Gender
"RTN","ECXPRO1",179,0)
 ;
"RTN","ECXPRO1",180,0)
 ;* Determine the In/Outpatient status
"RTN","ECXPRO1",181,0)
 S ECXDELDT=$P(ECXDELDT,".",1)
"RTN","ECXPRO1",182,0)
 S ECXIOPT=1
"RTN","ECXPRO1",183,0)
 K VAIP
"RTN","ECXPRO1",184,0)
 S VAIP("D")=ECXDELDT
"RTN","ECXPRO1",185,0)
 D IN5^VADPT
"RTN","ECXPRO1",186,0)
 I +VAIP(1)>0 S ECXIOPT=3
"RTN","ECXPRO1",187,0)
 K VAIP,VAERR
"RTN","ECXPRO1",188,0)
 ;
"RTN","ECXPRO1",189,0)
 ;* Determine primary care team/provider and eligibility
"RTN","ECXPRO1",190,0)
 S X=$$PRIMARY^ECXUTL2(DFN,ECXDELDT,2),ECXPCT=$P(X,U,1),ECXPCP=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXPRO1",191,0)
 S ECXELIG=$P($G(^DIC(8,+$G(^DPT(DFN,.36)),0)),U,9)
"RTN","ECXPRO1",192,0)
 I ECXELIG S ECXELIG=$C(ECXELIG+64)
"RTN","ECXPRO1",193,0)
 ;
"RTN","ECXPRO1",194,0)
 ;* Determine Agent Orange, Radiation Exposure and Environment Contmnts
"RTN","ECXPRO1",195,0)
 S ECXAO=$P($G(^DPT(DFN,.321)),U,2)
"RTN","ECXPRO1",196,0)
 S ECXRE=$P($G(^DPT(DFN,.321)),U,3)
"RTN","ECXPRO1",197,0)
 S ECXEC=$P($G(^DPT(DFN,.322)),U,13)
"RTN","ECXPRO1",198,0)
 ;
"RTN","ECXPRO1",199,0)
 ;* Get patient's Sex, Date of Birth, Zip Code and Vet/Non-Vet status
"RTN","ECXPRO1",200,0)
 S ECXSEX=$P(^DPT(DFN,0),U,2)
"RTN","ECXPRO1",201,0)
 S:ECXSEX="" ECXSEX="U"
"RTN","ECXPRO1",202,0)
 S ECXDOB=$P(^DPT(DFN,0),U,3)
"RTN","ECXPRO1",203,0)
 S ECXVET=$P($G(^DPT(DFN,"VET")),U,1)
"RTN","ECXPRO1",204,0)
 S VAPA("P")=""
"RTN","ECXPRO1",205,0)
 D ADD^VADPT
"RTN","ECXPRO1",206,0)
 S ECXZIP=$P($G(VAPA(11)),U,2)
"RTN","ECXPRO1",207,0)
 K VAPA
"RTN","ECXPRO1",208,0)
 Q
"RTN","ECXQSR")
0^11^B16219341
"RTN","ECXQSR",1,0)
ECXQSR ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ; 02/14/97 14:07
"RTN","ECXQSR",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13**;Dec 22, 1997
"RTN","ECXQSR",3,0)
BEG ;entry point from option
"RTN","ECXQSR",4,0)
 I '$O(^ACK(509850.8,0)) W !,"You must be using the Quality Audiology & Speech Pathology",!,"Audit & Review (QUASAR) software to run this extract.",!! Q
"RTN","ECXQSR",5,0)
 I '$D(^ACK(509850.8,1,"DSS")) W !,"Linkage has not been established between QUASAR and the DSS UNIT file (#724).",!! Q
"RTN","ECXQSR",6,0)
 I '$O(^ACK(509850.6,0)) W !,"There is no data in the A&SP CLINIC VISIT file (#509850.6).",!! Q
"RTN","ECXQSR",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXQSR",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXQSR",9,0)
 Q
"RTN","ECXQSR",10,0)
 ;
"RTN","ECXQSR",11,0)
START ;entry point from tasked job
"RTN","ECXQSR",12,0)
 N QFLG
"RTN","ECXQSR",13,0)
 S QFLG=0
"RTN","ECXQSR",14,0)
 S ECED=ECED+.9,ECD=ECSD1
"RTN","ECXQSR",15,0)
 ;quasar will be multi-divisional in future
"RTN","ECXQSR",16,0)
 S ECL=+^ACK(509850.8,1,0),ECLINK=^ACK(509850.8,1,"DSS")
"RTN","ECXQSR",17,0)
 F  S ECD=$O(^ACK(509850.6,"B",ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  F  S ECDA=$O(^ACK(509850.6,"B",ECD,ECDA)) Q:'ECDA  D UPDATE Q:QFLG
"RTN","ECXQSR",18,0)
 Q
"RTN","ECXQSR",19,0)
 ;
"RTN","ECXQSR",20,0)
UPDATE ;create record for each unique CPT code for clinic visit, 
"RTN","ECXQSR",21,0)
 N ECZNODE
"RTN","ECXQSR",22,0)
 S ECZNODE=$G(^ACK(509850.6,ECDA,0)),EC2NODE=$G(^ACK(509850.6,ECDA,2))
"RTN","ECXQSR",23,0)
 S ECDT=$P(ECZNODE,U),ECDAY=$$ECXDATE^ECXUTL(ECDT,ECXYM),ECTIME=$$ECXTIME^ECXUTL(ECDT) S:$P(ECDT,".",2)="" ECTIME="000000"
"RTN","ECXQSR",24,0)
 S ECDFN=$P(ECZNODE,U,2)
"RTN","ECXQSR",25,0)
 Q:'$D(^DPT(ECDFN,0))
"RTN","ECXQSR",26,0)
 D INP
"RTN","ECXQSR",27,0)
 S ECSTOP=$P(EC2NODE,U) Q:ECSTOP=""
"RTN","ECXQSR",28,0)
 S ECHL="",(ECHLS,ECHL2S)="000",ECAC=$P($G(ECZNODE),U,6) I ECAC D
"RTN","ECXQSR",29,0)
 .S ECHL=+$P($G(^SC(ECAC,0)),U,7),ECHL2=+$P($G(^(0)),U,18) I ECHL D
"RTN","ECXQSR",30,0)
 ..S ECHLS=$P($G(^DIC(40.7,+ECHL,0)),U,2),ECHL2S=$P($G(^DIC(40.7,+ECHL2,0)),U,2)
"RTN","ECXQSR",31,0)
 ..S ECHLS=$$RJ^XLFSTR(ECHLS,3,0),ECHL2S=$$RJ^XLFSTR(ECHL2S,3,0)
"RTN","ECXQSR",32,0)
 S ECDSS=ECHLS_ECHL2S
"RTN","ECXQSR",33,0)
 S ECDU=$S(ECSTOP="A":$P(ECLINK,U),ECSTOP="S":$P(ECLINK,U,2),1:"") Q:'ECDU
"RTN","ECXQSR",34,0)
 S ECDSSU=$G(^ECD(ECDU,0)),ECCS=+$P(ECDSSU,U,4),(ECO,ECM)=+$P(ECDSSU,U,3),ECDCM=$P(ECDSSU,U,5)
"RTN","ECXQSR",35,0)
 S ECUN1=$P(EC2NODE,U,7) S:ECUN1]"" ECUN1=2_ECUN1
"RTN","ECXQSR",36,0)
 Q:'$O(^ACK(509850.6,ECDA,3,0))
"RTN","ECXQSR",37,0)
 ;Create local array of procedure codes and # of times each procedure was performed.
"RTN","ECXQSR",38,0)
 S ECPN=0 F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",39,0)
 .S XX=+^ACK(509850.6,ECDA,3,ECPN,0),XX=+$G(^ACK(509850.4,XX,0)),XX=$P($G(^ICPT(XX,0)),U)
"RTN","ECXQSR",40,0)
 .I XX]"" S LOC(XX)=$G(LOC(XX))+1
"RTN","ECXQSR",41,0)
 Q:'$O(LOC(0))
"RTN","ECXQSR",42,0)
 Q:'$O(^ACK(509850.6,ECDA,1,0))
"RTN","ECXQSR",43,0)
 S ECIEN=$O(^ACK(509850.6,ECDA,1,0)),ECDIA=+^ACK(509850.6,ECDA,1,ECIEN,0),ECDIA=$P($G(^ICD9(ECDIA,0)),U)
"RTN","ECXQSR",44,0)
 ;Loop through array of unique procedures. Create record in ECODE.
"RTN","ECXQSR",45,0)
 S ECP=0 D
"RTN","ECXQSR",46,0)
 .F  S ECP=$O(LOC(ECP)) Q:'ECP  S ECV=+LOC(ECP) D FILE
"RTN","ECXQSR",47,0)
 .K LOC
"RTN","ECXQSR",48,0)
 Q
"RTN","ECXQSR",49,0)
 ;
"RTN","ECXQSR",50,0)
FILE ;file record in #727.825
"RTN","ECXQSR",51,0)
 ;node0
"RTN","ECXQSR",52,0)
 ;inst^dfn^ssn^name^i/o status^day^DSS unit^category^procedure^volume^cost center^ordering sec^section^
"RTN","ECXQSR",53,0)
 ;provider^^prov 2^^prov 3^^^mov #^treat spec^time^primary care team^primary care provider^pce cpt code^
"RTN","ECXQSR",54,0)
 ;icd-9 code^agent orange^radiation exposure^environmental contaminants^service connected^sent to pce^^dss identifier^dss dept
"RTN","ECXQSR",55,0)
 ;node1
"RTN","ECXQSR",56,0)
 ;mpi^provider npi^provider #2 npi^provider #3 npi^pc provider npi^pc prov person class
"RTN","ECXQSR",57,0)
 N DA,DIK
"RTN","ECXQSR",58,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXQSR",59,0)
 S ECODE=EC7_U_EC23
"RTN","ECXQSR",60,0)
 S ECODE=ECODE_U_ECL_U_ECDFN_U_ECXSSN_U_ECNA_U_ECA_U_ECDAY_U_ECDU_U_U_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECUN1_U_U_U_U_U_U_U_ECMN_U_ECTS_U_ECTIME
"RTN","ECXQSR",61,0)
 S ECODE=ECODE_U_ECPTTM_U_ECPTPR_U_ECP_U_ECDIA_U_ECAO_U_ECRE_U_ECENV_U_ECSC_U_"N"_U_U_ECDSS_U
"RTN","ECXQSR",62,0)
 S ECODE1=U_U_U_U_U_ECCLAS
"RTN","ECXQSR",63,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXQSR",64,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXQSR",65,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXQSR",66,0)
 Q
"RTN","ECXQSR",67,0)
 ;
"RTN","ECXQSR",68,0)
INP ;determine in/outpatient status, demographics, primary care team and provider, eligibility, and service history.
"RTN","ECXQSR",69,0)
 ; ECA=1 (outpatient) or =3 (inpatient)
"RTN","ECXQSR",70,0)
 ; ECTS=null (outpatient) or =treating specialty ien
"RTN","ECXQSR",71,0)
 ; ECMN=movement number ien or null (outpatient)
"RTN","ECXQSR",72,0)
 ; ECXSSN=social security number and ECNA=first 4 of last name
"RTN","ECXQSR",73,0)
 ; ECPTTM=primary care team and ECPTPR=primary care provider
"RTN","ECXQSR",74,0)
 ; ECENV=environmental contaminants status
"RTN","ECXQSR",75,0)
 ; ECAO=agent orange status
"RTN","ECXQSR",76,0)
 ; ECRE=radiation exposure status
"RTN","ECXQSR",77,0)
 ; ECSC=service connected status
"RTN","ECXQSR",78,0)
 N DFN,VAIP,VAEL,VASV
"RTN","ECXQSR",79,0)
 S ECNA=$P($P(^DPT(ECDFN,0),U),",",1),ECNA=$E(ECNA_"    ",1,4),ECXSSN=$P(^DPT(ECDFN,0),U,9)
"RTN","ECXQSR",80,0)
 S ECENV=$P($G(^DPT(ECDFN,.322)),U,13)
"RTN","ECXQSR",81,0)
 S X=$$PRIMARY^ECXUTL2(ECDFN,ECDT),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXQSR",82,0)
 S X=$$INP^ECXUTL2(ECDFN,ECDT),ECA=$P(X,U,1),ECMN=$P(X,U,2),ECTS=$P(X,U,3)
"RTN","ECXQSR",83,0)
 S VAIP("D")=ECDT,DFN=ECDFN D ELIG^VADPT,SVC^VADPT
"RTN","ECXQSR",84,0)
 S ECSC=$S(+VAEL(3):"Y",1:"N")
"RTN","ECXQSR",85,0)
 S ECAO=$S(VASV(2)=1:"Y",VASV(2)=0:"N",1:"U")
"RTN","ECXQSR",86,0)
 S ECRE=$S(VASV(3)=1:"Y",VASV(3)=0:"N",1:"U")
"RTN","ECXQSR",87,0)
 K VAIP,VAEL,VASV,VAERR
"RTN","ECXQSR",88,0)
 Q
"RTN","ECXQSR",89,0)
 ;
"RTN","ECXQSR",90,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR",91,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR",92,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR",93,0)
 Q
"RTN","ECXQSR",94,0)
 ;
"RTN","ECXQSR",95,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR",96,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXRAD")
0^12^B10598732
"RTN","ECXRAD",1,0)
ECXRAD ;ALB/JAP,BIR/PDW,PTD-Extract for Radiology ; [ 11/27/96  10:47 AM ]
"RTN","ECXRAD",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13**;Dec 22, 1997
"RTN","ECXRAD",3,0)
BEG ;entry point from option
"RTN","ECXRAD",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXRAD",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXRAD",6,0)
 Q
"RTN","ECXRAD",7,0)
 ;
"RTN","ECXRAD",8,0)
START ;start rad extract
"RTN","ECXRAD",9,0)
 N QFLG
"RTN","ECXRAD",10,0)
 S QFLG=0
"RTN","ECXRAD",11,0)
 K ECXDD D FIELD^DID(70.03,14,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXRAD",12,0)
 S ECDFN="",ECDT=ECSD-.1,ECED1=ECED+.3
"RTN","ECXRAD",13,0)
 F  S ECDT=$O(^RADPT("AR",ECDT)) Q:ECDT>ECED1!(ECDT'>0)  D  Q:QFLG
"RTN","ECXRAD",14,0)
 .S ECDFN=""
"RTN","ECXRAD",15,0)
 .F  S ECDFN=$O(^RADPT("AR",ECDT,ECDFN)) Q:ECDFN=""  I $D(^DPT(ECDFN,0)) D GET Q:QFLG
"RTN","ECXRAD",16,0)
 Q
"RTN","ECXRAD",17,0)
 ;
"RTN","ECXRAD",18,0)
GET ;get data
"RTN","ECXRAD",19,0)
 N SSN,W,X
"RTN","ECXRAD",20,0)
 S SSN=$P(^DPT(ECDFN,0),U,9),ECNA=$E($P($P(^(0),U),",")_"   ",1,4)
"RTN","ECXRAD",21,0)
 ;with dfn get all exams within date range
"RTN","ECXRAD",22,0)
 S ECXMDT=ECSD-.1
"RTN","ECXRAD",23,0)
 F  S ECXMDT=$O(^RADPT(ECDFN,"DT","B",ECXMDT)) Q:((ECXMDT>ECED1)!(ECXMDT=""))  D  Q:QFLG
"RTN","ECXRAD",24,0)
 .S ECTM=$$ECXTIME^ECXUTL(ECXMDT) S:ECTM>235959 ECTM=235959
"RTN","ECXRAD",25,0)
 .S X=$$PRIMARY^ECXUTL2(ECDFN,ECXMDT,ECPROF),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXRAD",26,0)
 .S X=$$INP^ECXUTL2(ECDFN,ECXMDT),ECA=$P(X,U,1),ECMN=$P(X,U,2),ECTS=$P(X,U,3)
"RTN","ECXRAD",27,0)
 .;for dfn & date get exam(s) ien
"RTN","ECXRAD",28,0)
 .S ECXMDA=""
"RTN","ECXRAD",29,0)
 .F  S ECXMDA=$O(^RADPT(ECDFN,"DT","B",ECXMDT,ECXMDA)) Q:+ECXMDA=0  D
"RTN","ECXRAD",30,0)
 ..S ECXDIV=$P(^RADPT(ECDFN,"DT",ECXMDA,0),U,3),ECLOC=$P(^(0),U,4),ECTY=$P(^(0),U,2),ECXDAY=$$ECXDATE^ECXUTL($P(^(0),U),ECXYM)
"RTN","ECXRAD",31,0)
 ..;proceedures and modifiers for specific exam (case numbers)
"RTN","ECXRAD",32,0)
 ..S ECCN=0
"RTN","ECXRAD",33,0)
 ..F  S ECCN=$O(^RADPT(ECDFN,"DT",ECXMDA,"P",ECCN)) Q:ECCN'>0  D
"RTN","ECXRAD",34,0)
 ...S ECCA=^RADPT(ECDFN,"DT",ECXMDA,"P",ECCN,0)
"RTN","ECXRAD",35,0)
 ...S W=$P(ECCA,U,6),W=$P($G(^DIC(42,+W,44)),U)
"RTN","ECXRAD",36,0)
 ...S:W="" W=$P(ECCA,U,8)
"RTN","ECXRAD",37,0)
 ...S ECS=$P(ECCA,U,7),ECDOC=ECPROF_$P(ECCA,U,14),ECDI=$P(ECCA,U,13)
"RTN","ECXRAD",38,0)
 ...S ECPRO=$P(ECCA,U,2),ECSTAT=$P($G(^RA(72,+$P(ECCA,U,3),0)),U,3)
"RTN","ECXRAD",39,0)
 ...Q:'ECPRO 
"RTN","ECXRAD",40,0)
 ...Q:+ECSTAT=0
"RTN","ECXRAD",41,0)
 ...;pickup CPT code,ward/clinic,service,provider,diagnostic code
"RTN","ECXRAD",42,0)
 ...S ECPT=+$P($G(^RAMIS(71,+ECPRO,0)),U,9),ECPT=$P($G(^ICPT(ECPT,0)),U)
"RTN","ECXRAD",43,0)
 ...;get proceedure modifiers
"RTN","ECXRAD",44,0)
 ...S ECMOD=0,ECMODS=""
"RTN","ECXRAD",45,0)
 ...F  S ECMOD=$O(^RADPT(ECDFN,"DT",ECXMDA,"P",ECCN,"M",ECMOD)) Q:ECMOD'>0  S ECMODS=ECMODS_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",46,0)
 ...D FILE
"RTN","ECXRAD",47,0)
 Q
"RTN","ECXRAD",48,0)
 ;
"RTN","ECXRAD",49,0)
FILE ;file record
"RTN","ECXRAD",50,0)
 ;node0
"RTN","ECXRAD",51,0)
 ;rad div^dfn^ssn^name^in/out^day^cpt code^procedure^img loc^ward^ser^diag code^req physician^
"RTN","ECXRAD",52,0)
 ;modifiers^mov #^treat spec^time^imaging type^primary care team^primary care provider
"RTN","ECXRAD",53,0)
 ;node1
"RTN","ECXRAD",54,0)
 ;mpi^dss dept^req physician npi^pc provider npi^pc prov person class
"RTN","ECXRAD",55,0)
 N DA,DIK
"RTN","ECXRAD",56,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXRAD",57,0)
 S ECODE=EC7_U_EC23
"RTN","ECXRAD",58,0)
 S ECODE=ECODE_U_ECXDIV_U_ECDFN_U_SSN_U_ECNA_U_ECA_U_ECXDAY
"RTN","ECXRAD",59,0)
 S ECODE=ECODE_U_ECPT_U_ECPRO_U_ECLOC_U_W_U_ECS_U_ECDI_U_ECDOC
"RTN","ECXRAD",60,0)
 S ECODE=ECODE_U_ECMODS_U_ECMN_U_ECTS_U_ECTM_U_ECTY_U_ECPTTM_U_ECPTPR
"RTN","ECXRAD",61,0)
 S ECODE1=U_U_U_U_ECCLAS
"RTN","ECXRAD",62,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXRAD",63,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXRAD",64,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXRAD",65,0)
 Q
"RTN","ECXRAD",66,0)
 ;
"RTN","ECXRAD",67,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXRAD",68,0)
 S ECHEAD="RAD"
"RTN","ECXRAD",69,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXRAD",70,0)
 Q
"RTN","ECXSCNS")
0^13^B7087561
"RTN","ECXSCNS",1,0)
ECXSCNS ;ALB/JAP,BIR/DMA,PTD-No Show Clinic Extract ; [ 11/22/96  5:48 PM ]
"RTN","ECXSCNS",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13**;Dec 22, 1997
"RTN","ECXSCNS",3,0)
BEG ;entry point from option
"RTN","ECXSCNS",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSCNS",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSCNS",6,0)
 Q
"RTN","ECXSCNS",7,0)
 ;
"RTN","ECXSCNS",8,0)
START ;start package specific extract
"RTN","ECXSCNS",9,0)
 N QFLG
"RTN","ECXSCNS",10,0)
 S QFLG=0
"RTN","ECXSCNS",11,0)
 S ECED=ECED+.3
"RTN","ECXSCNS",12,0)
 S SC=0
"RTN","ECXSCNS",13,0)
 F  S SC=$O(^SC(SC)) Q:('SC)!(QFLG)  I $D(^(SC,0)) S EC=^(0) I $P(EC,U,3)="C" D  Q:QFLG
"RTN","ECXSCNS",14,0)
 .S SU=$P(EC,U,15)
"RTN","ECXSCNS",15,0)
 .D FEEDER^ECXSCX1(SC,ECSD1,.ECXP1,.ECXP2,.ECXP3,.ECXSEND)
"RTN","ECXSCNS",16,0)
 .Q:ECXSEND=6
"RTN","ECXSCNS",17,0)
 .S ECXDSS=ECXP1_ECXP2,ECD=ECSD1
"RTN","ECXSCNS",18,0)
 .F  S ECD=$O(^SC(SC,"S",ECD)) Q:'ECD  Q:ECD>ECED  D  Q:QFLG
"RTN","ECXSCNS",19,0)
 ..S ECDA=0
"RTN","ECXSCNS",20,0)
 ..F  S ECDA=$O(^SC(SC,"S",ECD,1,ECDA)) Q:'ECDA  I $D(^(ECDA,0)),$S('$D(^("C")):1,1:^("C")="") D
"RTN","ECXSCNS",21,0)
 ...S EC=^SC(SC,"S",ECD,1,ECDA,0),DFN=$P(EC,U)
"RTN","ECXSCNS",22,0)
 ...I $D(^DPT(+DFN,0)) S EC1=^(0) D INP
"RTN","ECXSCNS",23,0)
 ...;log no shows only for outpatients
"RTN","ECXSCNS",24,0)
 ...I ECA=1 D
"RTN","ECXSCNS",25,0)
 ....S DOB=$$ECXDOB^ECXUTL($P(EC1,U,3)),VET=$P($G(^("VET")),U),RACE=$P($G(^DIC(10,+$P(EC1,U,6),0)),U,2),ELG=$P($G(^DIC(8,+$G(^DPT(DFN,.36)),0)),U,9) I ELG S ELG=$C(ELG+64)
"RTN","ECXSCNS",26,0)
 ....I $D(^DPT(DFN,"S",ECD,0)),$P(^(0),U)=SC,$P(^(0),U,2)]"",$P(^(0),U,2)["N"
"RTN","ECXSCNS",27,0)
 ....D FILE
"RTN","ECXSCNS",28,0)
 Q
"RTN","ECXSCNS",29,0)
 ;
"RTN","ECXSCNS",30,0)
FILE ;file record
"RTN","ECXSCNS",31,0)
 ;node0
"RTN","ECXSCNS",32,0)
 ;fac^dfn^ssn^name^in/out^day^^mov #^treat spec^dob^elig^vet^time^primary care team^primary care provider^provider^race^dss identifier
"RTN","ECXSCNS",33,0)
 ;node1
"RTN","ECXSCNS",34,0)
 ;mpi^dss dept^pc provider npi^provider npi^pc prov person class
"RTN","ECXSCNS",35,0)
 N DA,DIK
"RTN","ECXSCNS",36,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSCNS",37,0)
 S ECODE=EC7_U_EC23
"RTN","ECXSCNS",38,0)
 S ECODE=ECODE_U_SU_U_DFN_U_$P(EC1,U,9)_U_$E($P($P(EC1,U),",")_"    ",1,4)_U_ECA_U_$$ECXDATE^ECXUTL(ECD,ECXYM)
"RTN","ECXSCNS",39,0)
 S ECODE=ECODE_U_U_ECMN_U_ECTS_U_DOB_U_ELG_U_VET_U_$$ECXTIME^ECXUTL(ECD)_U_ECPTTM_U_ECPTPR_U_U_RACE_U_ECXDSS
"RTN","ECXSCNS",40,0)
 S ECODE1=U_U_U_U_ECCLAS
"RTN","ECXSCNS",41,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXSCNS",42,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXSCNS",43,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSCNS",44,0)
 Q
"RTN","ECXSCNS",45,0)
 ;
"RTN","ECXSCNS",46,0)
INP ;Determine in/outpatient status, movement number, primary care team and provider.
"RTN","ECXSCNS",47,0)
 N X
"RTN","ECXSCNS",48,0)
 S X=$$INP^ECXUTL2(DFN,ECD),ECA=$P(X,U,1),ECMN=$P(X,U,2),ECTS=$P(X,U,3)
"RTN","ECXSCNS",49,0)
 S X=$$PRIMARY^ECXUTL2(DFN,ECD),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXSCNS",50,0)
 Q
"RTN","ECXSCNS",51,0)
 ;
"RTN","ECXSCNS",52,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSCNS",53,0)
 S ECHEAD="NOS"
"RTN","ECXSCNS",54,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSCNS",55,0)
 Q
"RTN","ECXSCNS",56,0)
 ;
"RTN","ECXSCNS",57,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSCNS",58,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXSCX")
0^14^B63104437
"RTN","ECXSCX",1,0)
ECXSCX ;ALB/JAP,BIR/DMA,CML,PTD-Clinic Extract ; 02/06/97 10:24 [ 03/26/97  2:10 PM ]
"RTN","ECXSCX",2,0)
 ;;3.0;DSS EXTRACTS;**1,3,11,8,13**;Dec 22, 1997
"RTN","ECXSCX",3,0)
BEG ;entry point from option
"RTN","ECXSCX",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSCX",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSCX",6,0)
 Q
"RTN","ECXSCX",7,0)
 ;
"RTN","ECXSCX",8,0)
START ;entry point
"RTN","ECXSCX",9,0)
 N QFLG
"RTN","ECXSCX",10,0)
 K ^TMP("ECXS",$J) S ECXMISS=10,ECED=ECED+.3 S SC=0,QFLG=0
"RTN","ECXSCX",11,0)
 ;scheduled appts. and appended ekgs: loop through the file (#44)
"RTN","ECXSCX",12,0)
 F  S SC=$O(^SC(SC)) Q:('SC)!(QFLG)  I $D(^(SC,0)) S EC=^(0) I $P(EC,U,3)="C" S ECSU=$P(EC,U,15) S:'ECSU ECSU=1 D FEEDER^ECXSCX1(SC,ECSD1,.P1,.P2,.P3,.ECST) I ECST'=6 S ECD=ECSD1 D  Q:QFLG
"RTN","ECXSCX",13,0)
 .F  S ECD=$O(^SC(SC,"S",ECD)) Q:'ECD  Q:ECD>ECED  Q:QFLG  S ECDA=0 F  S ECDA=$O(^SC(SC,"S",ECD,1,ECDA)) Q:'ECDA  I $D(^(ECDA,0)) D  Q:QFLG
"RTN","ECXSCX",14,0)
 ..;for each patient appointment in the date range (skip cancellations), examine the APPOINTMENT multiple in the PATIENT file (#2)
"RTN","ECXSCX",15,0)
 ..I $S('$D(^SC(SC,"S",ECD,1,ECDA,"C")):1,1:$P(^("C"),U,3)]"") S PTADT=^(0),DFN=$P(PTADT,U) I $D(^DPT(+DFN,0)),$P(PTADT,U,9)="",$P($G(^DPT(DFN,"S",ECD,0)),U,2)'["C" D
"RTN","ECXSCX",16,0)
 ...D PAT,AOIRPOW^ECXUTL(DFN,.ECXAIP)
"RTN","ECXSCX",17,0)
 ...S ECL=$P(PTADT,U,2),ECL=$$RJ^XLFSTR(ECL,3,0),ECOB=$G(^SC(SC,"S",ECD,1,ECDA,"OB"))]""
"RTN","ECXSCX",18,0)
 ...;don't continue with record creation if the clinic appointment can't be found in subfile 2.98
"RTN","ECXSCX",19,0)
 ...Q:'$D(^DPT(DFN,"S",ECD,0))  Q:$P(^DPT(DFN,"S",ECD,0),U)'=SC
"RTN","ECXSCX",20,0)
 ...K EC2 S EC2=^DPT(DFN,"S",ECD,0) S ECN=$S($P(EC2,U,2)="N":"N",$P(EC2,U,2)="NA":"N",$P(EC2,U,2)="NT":"Q",1:"0")
"RTN","ECXSCX",21,0)
 ...S ECIEN=$P(EC2,U,20),ECEKG=$P(EC2,U,5)
"RTN","ECXSCX",22,0)
 ...I ECST'=3 S ECFD=P1_P2_ECL_P3_ECN,ECO1=ECO1_U_ECFD_U_ECOB_U_SC D API,FILE
"RTN","ECXSCX",23,0)
 ...I ECST=3 S ECFD=P1_"000"_ECL_P3_ECN,ECO1=ECO1_U_ECFD_U_ECOB_U_SC D API,FILE
"RTN","ECXSCX",24,0)
 ...I ECST=3 S ECFD=P2_"000"_ECL_P3_ECN,ECO1=ECO1_U_ECFD_U_ECOB_U_SC D API,FILE
"RTN","ECXSCX",25,0)
 ...;check for appended visits for EKG (107); if regular appt. is a no-show, append is a no-show
"RTN","ECXSCX",26,0)
 ...Q:'ECEKG  D
"RTN","ECXSCX",27,0)
 ....S $P(ECODE,U,7,9)="1070000280000"_ECN_U_U
"RTN","ECXSCX",28,0)
 ....S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSCX",29,0)
 ....S $P(ECODE,U,1)=EC7
"RTN","ECXSCX",30,0)
 ....D FILE2
"RTN","ECXSCX",31,0)
 ;Dispositions, stand-alones, and appended lab and x-ray: loop through the file (#409.68) for date range
"RTN","ECXSCX",32,0)
 S ECD=ECSD1
"RTN","ECXSCX",33,0)
 F  S ECD=$O(^SCE("B",ECD)) Q:'ECD!(ECD>ECED)  S ECIEN=0 D  Q:QFLG
"RTN","ECXSCX",34,0)
 .F  S ECIEN=$O(^SCE("B",ECD,ECIEN)) Q:'ECIEN  D  Q:QFLG
"RTN","ECXSCX",35,0)
 ..;quit if no outpatient encounter zero node
"RTN","ECXSCX",36,0)
 ..Q:'$D(^SCE(ECIEN,0))
"RTN","ECXSCX",37,0)
 ..;fd=1>x-ray or lab record, fd=2>disposition, fd=0>stand-alone visit
"RTN","ECXSCX",38,0)
 ..S FD=0,NCNTR=^SCE(ECIEN,0),STOP=$P($G(^DIC(40.7,+$P(NCNTR,U,3),0)),U,2)
"RTN","ECXSCX",39,0)
 ..S ENELG=$P($G(^DIC(8,+$P(NCNTR,U,13),0)),U,9) I ENELG S ENELG=$C(ENELG+64)
"RTN","ECXSCX",40,0)
 ..;quit if no clinic stop code for encounter
"RTN","ECXSCX",41,0)
 ..Q:'STOP
"RTN","ECXSCX",42,0)
 ..;clinic stop code equals 105 (x-ray) or 108 (lab)
"RTN","ECXSCX",43,0)
 ..I (STOP=105)!(STOP=108) S FD=1 D BLD Q
"RTN","ECXSCX",44,0)
 ..;quit if encounter not stop code addition or disposition
"RTN","ECXSCX",45,0)
 ..I ($P(NCNTR,U,8)'=2),($P(NCNTR,U,8)'=3) Q
"RTN","ECXSCX",46,0)
 ..;originating process type equals disposition
"RTN","ECXSCX",47,0)
 ..I $P(NCNTR,U,8)=3 S FD=2 D BLD Q
"RTN","ECXSCX",48,0)
 ..;else originating process type equals stop code addition (stand-alone)
"RTN","ECXSCX",49,0)
 ..;quit if there is a parent encounter pointer.
"RTN","ECXSCX",50,0)
 ..Q:$P($G(NCNTR),U,6)
"RTN","ECXSCX",51,0)
 ..D BLD
"RTN","ECXSCX",52,0)
 ;send missing clinic msg if needed
"RTN","ECXSCX",53,0)
 D:$D(^TMP("ECXS",$J)) EN^ECXSCX1
"RTN","ECXSCX",54,0)
 K EC,EC1,EC2,ECA,ECCPT,ECCSC,ECD,ECDA,ECEKG,ECFD,ECICD,ECIEN,ECL,ECMN,ECN,ECO1,ECO2,ECOB,ECODE,ECPROV,ECPTPR,ECPTTM,ECREC,ECSC,ECST,ECSU,ECTS,ECVAL,ECVIS
"RTN","ECXSCX",55,0)
 K C,CPT,DFN,ELIG,P1,P11,P2,P3,PTADT,SC,VAERR,VAIP,SEX,ADDR,STATE,CNTY,ENELG,PAYOR,SAI,ENR,MST,MSTEI
"RTN","ECXSCX",56,0)
 Q
"RTN","ECXSCX",57,0)
 ;
"RTN","ECXSCX",58,0)
BLD ;build record from outpatient encounter
"RTN","ECXSCX",59,0)
 S DFN=+$P(NCNTR,U,2),LOC=$P(NCNTR,U,4),ECSU=1 S:LOC ECSU=$P(^SC(LOC,0),U,15)
"RTN","ECXSCX",60,0)
 Q:'$D(^DPT(DFN,0))
"RTN","ECXSCX",61,0)
 D PAT,AOIRPOW^ECXUTL(DFN,.ECXAIP)
"RTN","ECXSCX",62,0)
 S P1=$$RJ^XLFSTR(STOP,3,0),P2="000",P3="0000",ECST=1
"RTN","ECXSCX",63,0)
 ;for x-ray and lab
"RTN","ECXSCX",64,0)
 I FD=1 S ECO1=ECO1_U_P1_P2_"02800000"_U_U D API,FILE Q
"RTN","ECXSCX",65,0)
 ;for dispositions
"RTN","ECXSCX",66,0)
 I FD=2 S ECO1=ECO1_U_P1_"47906000000"_U_U D API,FILE Q
"RTN","ECXSCX",67,0)
 ;for stand-alone visits
"RTN","ECXSCX",68,0)
 I LOC,$D(^SC(LOC,0)) S SC=LOC,EC=^(0) D FEEDER^ECXSCX1(SC,ECD,.P1,.P2,.P3,.ECST)
"RTN","ECXSCX",69,0)
 I ECST'=6 S ECO1=ECO1_U_P1_P2_"029"_P3_"0"_U_U_SC D API,FILE
"RTN","ECXSCX",70,0)
 Q
"RTN","ECXSCX",71,0)
 ;
"RTN","ECXSCX",72,0)
FILE ;finish record setup
"RTN","ECXSCX",73,0)
 ;node0
"RTN","ECXSCX",74,0)
 ;facility^dfn^ssn^name^in/out status^day^feeder key^overbook^sc^mov #^treat spec^time^primary care team^
"RTN","ECXSCX",75,0)
 ;primary care provider^provider^CPT code^ICD-9 code^dob^eligibility^vet^race^
"RTN","ECXSCX",76,0)
 ;ao status^ao visit^ir statusir visit^pow status^pow location^provider person class
"RTN","ECXSCX",77,0)
 ;node1
"RTN","ECXSCX",78,0)
 ;mpi^dss dept^sex^zip+4^pc provider npi^provider npi^encounter elig^mst status^mst indicator
"RTN","ECXSCX",79,0)
 ;cpt2^cpt3^cpt4^cpt5^cpt6^cpt7^cpt8^cpt9^cpt10^cpt11^sharing payor^sharing insurance^enr location^state^county^pc prov person class
"RTN","ECXSCX",80,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSCX",81,0)
 S ECODE=EC7_U_EC23
"RTN","ECXSCX",82,0)
 S ECODE=ECODE_U_ECO1
"RTN","ECXSCX",83,0)
 S $P(ECODE,U,8)=ECA,ECODE=ECODE_U_ECMN_U_ECTS_U_$$ECXTIME^ECXUTL(ECD)_U_ECPTTM_U_ECPTPR_U_ECPROV_U_ECCPT_U_ECICD
"RTN","ECXSCX",84,0)
 S ECODE=ECODE_U_$$ECXDOB^ECXUTL(DOB)_U_ELIG_U_VET_U_RACE
"RTN","ECXSCX",85,0)
 S ECODE=ECODE_U_ECXAIP("AO")_U_ECVAO_U_ECXAIP("IR")_U_ECVIR_U_ECXAIP("POW")_U_ECXAIP("POWL")_U_ECXPRPC
"RTN","ECXSCX",86,0)
 S CPT="" F C=2:1:11 S CPT=CPT_CPT(C) I C<11 S CPT=CPT_U
"RTN","ECXSCX",87,0)
 S ECODE1=U_U_SEX_U_ZIP_U_U_U_ENELG_U_MST_U_MSTEI_U_CPT_U_PAYOR_U_SAI_U_ENR_U_STATE_U_CNTY_U_ECCLAS
"RTN","ECXSCX",88,0)
 D FILE2
"RTN","ECXSCX",89,0)
 Q
"RTN","ECXSCX",90,0)
 ;
"RTN","ECXSCX",91,0)
FILE2 ;file record
"RTN","ECXSCX",92,0)
 N DA,DIK
"RTN","ECXSCX",93,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXSCX",94,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXSCX",95,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSCX",96,0)
 Q
"RTN","ECXSCX",97,0)
 ;
"RTN","ECXSCX",98,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSCX",99,0)
 S ECHEAD="CLI"
"RTN","ECXSCX",100,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSCX",101,0)
 Q
"RTN","ECXSCX",102,0)
 ;
"RTN","ECXSCX",103,0)
PAT ;patient file data
"RTN","ECXSCX",104,0)
 N VAPA
"RTN","ECXSCX",105,0)
 S EC1=^DPT(DFN,0)
"RTN","ECXSCX",106,0)
 S ECO1=ECSU_U_DFN_U_$P(EC1,U,9)_U_$E($P($P(EC1,U),",")_"    ",1,4)_U_U_$$ECXDATE^ECXUTL(ECD,ECXYM)
"RTN","ECXSCX",107,0)
 S ELIG=$P($G(^DIC(8,+$G(^DPT(DFN,.36)),0)),U,9) I ELIG S ELIG=$C(ELIG+64)
"RTN","ECXSCX",108,0)
 S SEX=$P(EC1,U,2),DOB=$P(EC1,U,3),VET=$P($G(^DPT(DFN,"VET")),U),RACE=$P($G(^DIC(10,+$P(EC1,U,6),0)),U,2)
"RTN","ECXSCX",109,0)
 D ADD^VADPT
"RTN","ECXSCX",110,0)
 S STATE=VAPA(5),CNTY=VAPA(7),ZIP=$P(VAPA(11),U,2)
"RTN","ECXSCX",111,0)
 S STATE=$P($G(^DIC(5,+STATE,0)),U,3),CNTY=$P($G(^DIC(5,+STATE,1,+CNTY,0)),U,3)
"RTN","ECXSCX",112,0)
 S ENR=$P($G(^DPT(DFN,"ENR")),U,2) I ENR D
"RTN","ECXSCX",113,0)
 .S DIC="^DIC(4,",DA=ENR,DR="99;",DIQ(0)="I",DIQ="ENR"
"RTN","ECXSCX",114,0)
 .D EN^DIQ1 S ENR=ENR(4,ENR,99,"I")
"RTN","ECXSCX",115,0)
 .K DIC,DIQ,DA,DR
"RTN","ECXSCX",116,0)
 S (MST,MSTEI)=""
"RTN","ECXSCX",117,0)
 ;get visn 19 sharing agreement data
"RTN","ECXSCX",118,0)
 D VISN19^ECXUTL2(DFN,.PAYOR,.SAI)
"RTN","ECXSCX",119,0)
 Q
"RTN","ECXSCX",120,0)
API ;call external utilities
"RTN","ECXSCX",121,0)
 ;determine in/out status and primary care
"RTN","ECXSCX",122,0)
 N X,PROV
"RTN","ECXSCX",123,0)
 F C=2:1:11 S CPT(C)=""
"RTN","ECXSCX",124,0)
 S X=$$INP^ECXUTL2(DFN,ECD),ECA=$P(X,U,1),ECMN=$P(X,U,2),ECTS=$P(X,U,3)
"RTN","ECXSCX",125,0)
 S X=$$PRIMARY^ECXUTL2(DFN,ECD),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXSCX",126,0)
 ;call pce api for cpt code, diagnosis/provider designated as primary
"RTN","ECXSCX",127,0)
 S ENELG="",ECPROV="",ECXPRPC="",ECCPT=99199,ECICD=799.9,ECVAO="",ECVIR=""
"RTN","ECXSCX",128,0)
 I 'ECIEN Q
"RTN","ECXSCX",129,0)
 I ECIEN D
"RTN","ECXSCX",130,0)
 .S ECVIS=+$P($G(^SCE(ECIEN,0)),U,5)
"RTN","ECXSCX",131,0)
 .S ENELG=+$P($G(^SCE(ECIEN,0)),U,13),ENELG=$P($G(^DIC(8,ENELG,0)),U,9)
"RTN","ECXSCX",132,0)
 .I ENELG S ENELG=$C(ENELG+64)
"RTN","ECXSCX",133,0)
 I 'ECVIS Q
"RTN","ECXSCX",134,0)
 I ECVIS D ENCEVENT^PXAPI(ECVIS)
"RTN","ECXSCX",135,0)
 I $O(^TMP("PXKENC",$J,ECVIS,""))']"" Q
"RTN","ECXSCX",136,0)
 ;get icd9 code; else use 799.9
"RTN","ECXSCX",137,0)
 I $O(^TMP("PXKENC",$J,ECVIS,"POV",0)) D
"RTN","ECXSCX",138,0)
 .S (ECREC,ECVAL)=0
"RTN","ECXSCX",139,0)
 .F  S ECREC=$O(^TMP("PXKENC",$J,ECVIS,"POV",ECREC)) Q:'ECREC  S:($P(^TMP("PXKENC",$J,ECVIS,"POV",ECREC,0),U,12)="P") ECVAL=+^(0) Q:$P(^TMP("PXKENC",$J,ECVIS,"POV",ECREC,0),U,12)="P"
"RTN","ECXSCX",140,0)
 .I 'ECVAL S ECREC=$O(^TMP("PXKENC",$J,ECVIS,"POV",0)) I ECREC S ECVAL=+^(ECREC,0)
"RTN","ECXSCX",141,0)
 .I ECVAL S ECICD=$P($G(^ICD9(ECVAL,0)),U)
"RTN","ECXSCX",142,0)
 ;get first provider designated as primary; if no primary, then get first physician provider; if no physician, then get first provider; if no "prv" array nodes, use null.
"RTN","ECXSCX",143,0)
 I $O(^TMP("PXKENC",$J,ECVIS,"PRV",0)) D
"RTN","ECXSCX",144,0)
 .S (ECREC,ECVAL)=0
"RTN","ECXSCX",145,0)
 .F  S ECREC=$O(^TMP("PXKENC",$J,ECVIS,"PRV",ECREC)) Q:'ECREC  S:($P(^TMP("PXKENC",$J,ECVIS,"PRV",ECREC,0),U,4)="P") ECVAL=+^(0) Q:$P(^TMP("PXKENC",$J,ECVIS,"PRV",ECREC,0),U,4)="P"
"RTN","ECXSCX",146,0)
 .I ECVAL S ECPROV=ECVAL,ECXPRPC=$$PRVCLASS^ECXUTL(ECPROV,ECD)
"RTN","ECXSCX",147,0)
 .I 'ECVAL S ECREC=0 D
"RTN","ECXSCX",148,0)
 ..F  S ECREC=$O(^TMP("PXKENC",$J,ECVIS,"PRV",ECREC)) Q:'ECREC  D  Q:ECVAL
"RTN","ECXSCX",149,0)
 ...S ECVAL=+^TMP("PXKENC",$J,ECVIS,"PRV",ECREC,0) Q:'ECVAL
"RTN","ECXSCX",150,0)
 ...S ECXPRPC=$$PRVCLASS^ECXUTL(ECVAL,ECD) Q:ECXPRPC=""
"RTN","ECXSCX",151,0)
 ...S NUM=$E(ECXPRPC,2,7) S:(NUM<110000)!(NUM>119999) ECVAL=0,ECXPRPC=""
"RTN","ECXSCX",152,0)
 ...I ECVAL S ECPROV=ECVAL
"RTN","ECXSCX",153,0)
 .I 'ECVAL D
"RTN","ECXSCX",154,0)
 ..S ECREC=$O(^TMP("PXKENC",$J,ECVIS,"PRV",0)) Q:'ECREC  S ECVAL=+^(ECREC,0)
"RTN","ECXSCX",155,0)
 ..I ECVAL S ECPROV=ECVAL,ECXPRPC=$$PRVCLASS^ECXUTL(ECPROV,ECD)
"RTN","ECXSCX",156,0)
 .S:ECPROV]"" ECPROV="2"_ECPROV
"RTN","ECXSCX",157,0)
 ;get cpt code for ien
"RTN","ECXSCX",158,0)
 I $O(^TMP("PXKENC",$J,ECVIS,"CPT",0)) D
"RTN","ECXSCX",159,0)
 .S (ECREC,ECVAL)=0
"RTN","ECXSCX",160,0)
 .;if there's a primary provider, get a cpt associated with that provider
"RTN","ECXSCX",161,0)
 .I ECPROV]"" D
"RTN","ECXSCX",162,0)
 ..S PROV=$E(ECPROV,2,99)
"RTN","ECXSCX",163,0)
 ..F  S ECREC=$O(^TMP("PXKENC",$J,ECVIS,"CPT",ECREC)) Q:'ECREC  D  Q:ECVAL
"RTN","ECXSCX",164,0)
 ...I $D(^TMP("PXKENC",$J,ECVIS,"CPT",ECREC,12)) S:$P(^(12),U,4)=PROV ECVAL=+^TMP("PXKENC",$J,ECVIS,"CPT",ECREC,0)
"RTN","ECXSCX",165,0)
 ...I ECVAL D
"RTN","ECXSCX",166,0)
 ....S ECCPT=$P($G(^ICPT(ECVAL,0)),U)
"RTN","ECXSCX",167,0)
 ...;get rid of the cpt record
"RTN","ECXSCX",168,0)
 ...K ^TMP("PXKENC",$J,ECVIS,"CPT",ECREC)
"RTN","ECXSCX",169,0)
 .I ECVAL=0 S ECREC=+$O(^TMP("PXKENC",$J,ECVIS,"CPT",0)) I ECREC S ECVAL=+^(ECREC,0)
"RTN","ECXSCX",170,0)
 .I ECVAL D
"RTN","ECXSCX",171,0)
 ..S ECCPT=$P($G(^ICPT(ECVAL,0)),U)
"RTN","ECXSCX",172,0)
 ..;get rid of the cpt record
"RTN","ECXSCX",173,0)
 ..K ^TMP("PXKENC",$J,ECVIS,"CPT",ECREC)
"RTN","ECXSCX",174,0)
 .;get remaining cpt codes
"RTN","ECXSCX",175,0)
 .S ECREC=0,C=2
"RTN","ECXSCX",176,0)
 .F  S ECREC=$O(^TMP("PXKENC",$J,ECVIS,"CPT",ECREC)) Q:'ECREC!(C>11)  D
"RTN","ECXSCX",177,0)
 ..S ECVAL=+^TMP("PXKENC",$J,ECVIS,"CPT",ECREC,0)
"RTN","ECXSCX",178,0)
 ..I ECVAL S CPT(C)=$P($G(^ICPT(ECVAL,0)),U),C=C+1
"RTN","ECXSCX",179,0)
 ;ao and ir
"RTN","ECXSCX",180,0)
 S (ECVAO,ECVIR)=""
"RTN","ECXSCX",181,0)
 I $D(^TMP("PXKENC",$J,ECVIS,"VST",ECVIS,800)) D
"RTN","ECXSCX",182,0)
 .S ECVAO=$P(^(800),U,2),ECVIR=$P(^(800),U,3)
"RTN","ECXSCX",183,0)
 .S:ECVAO="0" ECVAO="N" S:ECVIR=0 ECVIR="N"
"RTN","ECXSCX",184,0)
 .S:ECVAO="1" ECVAO="Y" S:ECVIR=1 ECVIR="Y"
"RTN","ECXSCX",185,0)
 Q
"RTN","ECXSCX",186,0)
 ;
"RTN","ECXSCX",187,0)
QUE ;entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSCX",188,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXSURG")
0^15^B17096300
"RTN","ECXSURG",1,0)
ECXSURG ;ALB/JAP,BIR/DMA,PTD-Surgery Extract for DSS ; [ 03/20/97  3:04 PM ]
"RTN","ECXSURG",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13**;Dec 22, 1997
"RTN","ECXSURG",3,0)
BEG ;entry point from option
"RTN","ECXSURG",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSURG",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSURG",6,0)
 Q
"RTN","ECXSURG",7,0)
 ;
"RTN","ECXSURG",8,0)
START ;
"RTN","ECXSURG",9,0)
 N QFLG
"RTN","ECXSURG",10,0)
 S QFLG=0
"RTN","ECXSURG",11,0)
 S ECED=ECED+.3
"RTN","ECXSURG",12,0)
 S ECD=ECSD1 F  S ECD=$O(^SRF("AC",ECD)),ECD0=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXSURG",13,0)
 .I $D(^SRF(ECD0,0)) S EC0=^(0),DFN=+EC0 I $D(^DPT(DFN,0)) S ECP=^(0) D STUFF Q:QFLG
"RTN","ECXSURG",14,0)
 Q
"RTN","ECXSURG",15,0)
 ;
"RTN","ECXSURG",16,0)
STUFF ;gather data
"RTN","ECXSURG",17,0)
 N J,X,Y,SSN,DATA1,DATA2,DATAOP
"RTN","ECXSURG",18,0)
 S SSN=$P(ECP,U,9),ECNA=$E($P($P(ECP,U),",")_"    ",1,4)
"RTN","ECXSURG",19,0)
 S X=$$PRIMARY^ECXUTL2(DFN,ECD),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXSURG",20,0)
 S X=$$INP^ECXUTL2(DFN,ECD),ECA=$P(X,U,1),ECMN=$P(X,U,2),ECTS=$P(X,U,3),ECXADD=$P(X,U,4),ECXADD=$$ECXDATE^ECXUTL(ECXADD,ECXYM)
"RTN","ECXSURG",21,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:0),DATA2=$S($D(^(.2)):^(.2),1:""),DATAOP=$S($D(^("OP")):^("OP"),1:""),ECDIV=$S($D(^(8)):^(8),1:ECINST),ECANE="",ECSR=$P(DATA1,U,4),ECAT=$P(DATA1,U,13),ECNO=$G(^("NON"))
"RTN","ECXSURG",22,0)
 S ECTM=$$ECXTIME^ECXUTL($P(DATA2,U,10)) I $P(ECNO,U)="Y" S ECTM=$$ECXTIME^ECXUTL($P(ECNO,U,4))
"RTN","ECXSURG",23,0)
 S ECCAN=$G(^SRF(ECD0,30))>0 I ECCAN!('$P(DATA2,U,10)&($P(ECNO,U)'="Y")) Q
"RTN","ECXSURG",24,0)
 ;quit if cancelled or no pt. in oper. rm. time
"RTN","ECXSURG",25,0)
 ;look for non-OR
"RTN","ECXSURG",26,0)
 I $P(ECNO,U)="Y" S ECSR=$P(ECNO,U,6),ECAT=$P(ECNO,U,7),A1=$P(ECNO,U,5),A2=$P(ECNO,U,4),TIME="##" D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXSURG",27,0)
 S ECNL="" I $P(ECNO,U)="Y" S ECNL=+$P(ECNO,U,2),ECNL=$P($G(^ECX(728.44,ECNL,0)),U,9) I ECNL="" S ECNL="UNKNOWN"
"RTN","ECXSURG",28,0)
 S ECSA=$P($G(^SRF(ECD0,.3)),U,4),ECO=$P($G(^SRF(ECD0,0)),U,2) S ECORTY=$P($G(^SRS(+ECO,2)),U),ECO=$P($G(^SRS(+ECO,0)),U)
"RTN","ECXSURG",29,0)
 ;get service of attending surgeon
"RTN","ECXSURG",30,0)
 S ECATSV=$P($G(^DIC(49,+$G(^VA(200,+ECAT,5)),730)),U)
"RTN","ECXSURG",31,0)
 ;add leading 2s for pointer to 200
"RTN","ECXSURG",32,0)
 S:ECAT ECAT=2_ECAT S:ECSR ECSR=2_ECSR S:ECSA ECSA=2_ECSA
"RTN","ECXSURG",33,0)
 S J=$O(^SRF(ECD0,6,0)) I J,$D(^(J,0)) S ECANE=$P(^(0),U) I $P(^(0),U,3)'="Y" F  S J=$O(^SRF(ECD0,6,J)) Q:'J  I $D(^(J,0)),$P(^(0),U,3)="Y" S ECANE=$P(^(0),U) Q
"RTN","ECXSURG",34,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXSURG",35,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0) S:ECSS="000" ECSS="999"
"RTN","ECXSURG",36,0)
 ;get primary procedure
"RTN","ECXSURG",37,0)
 S ECPT=+$P(DATAOP,U,2),ECPT=$P($G(^ICPT(ECPT,0)),U)
"RTN","ECXSURG",38,0)
 S ECODE0="P"_U_ECPT_U
"RTN","ECXSURG",39,0)
 F J="10,12","2,3","1,4" S A2=$P(DATA2,U,$P(J,",")),A1=$P(DATA2,U,$P(J,",",2)),TIME="##" D:(A1&A2) TIME S ECODE0=ECODE0_U_TIME K TIME
"RTN","ECXSURG",40,0)
 S ECRR="" I $D(^SRF(ECD0,1.1)) S A1=$P(^(1.1),U,8),A2=$P(^(1.1),U,7),TIME="##" D:(A1&A2) TIME S ECRR=TIME K TIME
"RTN","ECXSURG",41,0)
 I ECNL]"" S $P(ECODE0,U,18)=ECNT
"RTN","ECXSURG",42,0)
 ;ecode0=p^cpt code^^patient time^operation time^anesthesia time
"RTN","ECXSURG",43,0)
 D FILE
"RTN","ECXSURG",44,0)
 ;get secondary procedures
"RTN","ECXSURG",45,0)
 S J=0
"RTN","ECXSURG",46,0)
 F  S J=$O(^SRF(ECD0,13,J)) Q:'J  I $D(^(J,0)),$D(^(2)),$P(^(2),U)]"" S ECPT=$P(^(2),U),ECODE0="S"_U_$P($G(^ICPT(ECPT,0)),U) D FILE
"RTN","ECXSURG",47,0)
 ;ecode0=s^cpt code
"RTN","ECXSURG",48,0)
 ;get prostheses
"RTN","ECXSURG",49,0)
 S J=0
"RTN","ECXSURG",50,0)
 F  S J=$O(^SRF(ECD0,1,J)) Q:'J  I $D(^(J,0)) S X=+^(0),Q=$P($G(^(1)),U,2) S:'Q Q=1 S ECODE0="I"_U_U_U_U_U_U_X_U_Q D FILE
"RTN","ECXSURG",51,0)
 ;ecode0=i^^^^^^prosthesis^quantity
"RTN","ECXSURG",52,0)
 Q
"RTN","ECXSURG",53,0)
 ;
"RTN","ECXSURG",54,0)
FILE ;file record
"RTN","ECXSURG",55,0)
 ;node0
"RTN","ECXSURG",56,0)
 ;division^dfn^ssn^name^in/out^day^case #^surg specialty^or room #^surgeon^attending^anesthesia supervisor^anesthesia technique^
"RTN","ECXSURG",57,0)
 ;primary/secondary/prostheses^cpt^^pt time^op time^anes time^prostheses^qty^^
"RTN","ECXSURG",58,0)
 ;movement number^treating speciality^cancelled^time^or type^attending's service^non-or dss id^recovery room time^^primary care team^primary care provider^admission date
"RTN","ECXSURG",59,0)
 ;node1
"RTN","ECXSURG",60,0)
 ;mpi^dss dept^surgeon npi^attending npi^anes supervisor npi^pc provider npi^pc prov person class
"RTN","ECXSURG",61,0)
 N DA,DIK
"RTN","ECXSURG",62,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSURG",63,0)
 S ECODE=EC7_U_EC23
"RTN","ECXSURG",64,0)
 S ECODE=ECODE_U_ECDIV_U_DFN_U_SSN_U_ECNA_U_ECA_U_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECD0_U_ECSS_U_ECO_U_ECSR_U_ECAT_U_ECSA_U_ECANE
"RTN","ECXSURG",65,0)
 S ECODE=ECODE_U_ECODE0
"RTN","ECXSURG",66,0)
 S $P(ECODE,U,26,37)=ECMN_U_ECTS_U_$S(ECCAN:"C",1:"")_U_ECTM_U_ECORTY_U_ECATSV_U_ECNL_U_ECRR_U_U_ECPTTM_U_ECPTPR_U_ECXADD
"RTN","ECXSURG",67,0)
 S ECODE1=U_U_U_U_U_U_ECCLAS
"RTN","ECXSURG",68,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXSURG",69,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXSURG",70,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSURG",71,0)
 ;
"RTN","ECXSURG",72,0)
TIME ; given date/time get increment
"RTN","ECXSURG",73,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG",74,0)
 S TIME=$TR($J($$FMDIFF^XLFDT(A1,A2,2)/900,6,0)," ") I TIME<0 S TIME="###"
"RTN","ECXSURG",75,0)
 Q
"RTN","ECXSURG",76,0)
 ;
"RTN","ECXSURG",77,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG",78,0)
 S ECHEAD="SUR"
"RTN","ECXSURG",79,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG",80,0)
 Q
"RTN","ECXSURG",81,0)
 ;
"RTN","ECXSURG",82,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSURG",83,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXTRANS")
0^17^B31026007
"RTN","ECXTRANS",1,0)
ECXTRANS ;ALB/GTS,JAP,BIR/DMA-Extract from Local Editing Files and Transmit ; [ 11/26/96  2:13 PM ]
"RTN","ECXTRANS",2,0)
 ;;3.0;DSS EXTRACTS;**2,9,12,8,13**;Dec 22, 1997
"RTN","ECXTRANS",3,0)
EN ;entry point from option
"RTN","ECXTRANS",4,0)
 N ECDA,ECRE,ECTMP,ECCHK,ECDIVVR,ECXDIQ,JJ,SS,OUT,DIR,DUOUT,DTOUT,DIRUT,DIC,X,Y
"RTN","ECXTRANS",5,0)
 I $G(^ECX(728,1,"QUEUE"))'?1"DM"1U D  Q
"RTN","ECXTRANS",6,0)
 .W !,"You have not defined a proper transmission queue"
"RTN","ECXTRANS",7,0)
 .W !,"for entry number 1 in the DSS EXTRACTS file (#728)."
"RTN","ECXTRANS",8,0)
 .W !,"No transmission allowed."
"RTN","ECXTRANS",9,0)
 .D PAUSE
"RTN","ECXTRANS",10,0)
 S ECXQUEUE=$G(^ECX(728,1,"QUEUE"))
"RTN","ECXTRANS",11,0)
 ;** check divisions for transmission
"RTN","ECXTRANS",12,0)
 S ECCHK=$$DIV4^XUSER(.ECTMP,DUZ)
"RTN","ECXTRANS",13,0)
 I 'ECCHK D  Q
"RTN","ECXTRANS",14,0)
 .W !,"You do not have any divisions defined in your user set up and cannot transmit."
"RTN","ECXTRANS",15,0)
 .S DIR(0)="FAO^1:1",DIR("A")="Hit Return to continue." D ^DIR K DIR,X,Y
"RTN","ECXTRANS",16,0)
 W !!,"Your user setup will only allow you to transmit extracts from the"
"RTN","ECXTRANS",17,0)
 W !," following divisions:",!
"RTN","ECXTRANS",18,0)
 S ECDIVVR=""
"RTN","ECXTRANS",19,0)
 F  S ECDIVVR=$O(ECTMP(ECDIVVR)) Q:'(+ECDIVVR)  D
"RTN","ECXTRANS",20,0)
 .K ECXDIC S DA=ECDIVVR,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01"
"RTN","ECXTRANS",21,0)
 .D EN^DIQ1 W !,"   ",$G(ECXDIC(4,DA,.01,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTRANS",22,0)
 W !!,"If you can't select an extract, it is probably from another division.",!
"RTN","ECXTRANS",23,0)
 D PAUSE Q:OUT
"RTN","ECXTRANS",24,0)
 S ECRE="",DIC="^ECX(727,",DIC(0)="AEQM",DIC("A")="Transmit which extract: "
"RTN","ECXTRANS",25,0)
 S DIC("S")="I '$D(^ECX(727,+Y,""L"")),'$D(^ECX(727,+Y,""PURG"")),$D(ECTMP(+$P($G(^ECX(727,+Y,""DIV"")),U,1)))"
"RTN","ECXTRANS",26,0)
 D ^DIC
"RTN","ECXTRANS",27,0)
 I Y<0 W !! Q
"RTN","ECXTRANS",28,0)
 ;get data on extract
"RTN","ECXTRANS",29,0)
 S DR="1;6;3;4;5;15",(ECDA,DA)=+Y,DIQ(0)="E",DIQ="ECXDIQ" D EN^DIQ1
"RTN","ECXTRANS",30,0)
 W !!,ECXDIQ(727,ECDA,6,"E")_" Extract",?42,"Records:    ",ECXDIQ(727,ECDA,5,"E")
"RTN","ECXTRANS",31,0)
 W !,"Generated on: ",ECXDIQ(727,ECDA,1,"E"),?42,"Start date: ",ECXDIQ(727,ECDA,3,"E")
"RTN","ECXTRANS",32,0)
 W !,"Division:     ",$E(ECXDIQ(727,ECDA,15,"E"),1,26),?42,"End date:   ",ECXDIQ(727,ECDA,4,"E")
"RTN","ECXTRANS",33,0)
 I $G(^ECX(727,ECDA,"PURG")) S ECX=^("PURG") D  Q
"RTN","ECXTRANS",34,0)
 .W !!,"Data for this extract was purged on ",$TR($$FMTE^XLFDT(ECX,"5DF")," ","0")
"RTN","ECXTRANS",35,0)
 .K ECX
"RTN","ECXTRANS",36,0)
 .D PAUSE
"RTN","ECXTRANS",37,0)
 I $G(^ECX(727,ECDA,"TR")) S ECX=^("TR") D  Q:OUT
"RTN","ECXTRANS",38,0)
 .S OUT=0
"RTN","ECXTRANS",39,0)
 .W !!,"This extract was transmitted on ",$TR($$FMTE^XLFDT(ECX,"5DF")," ","0")
"RTN","ECXTRANS",40,0)
 .K ECX S DIR(0)="Y",DIR("A")="Do you want to retransmit " D ^DIR K DIR
"RTN","ECXTRANS",41,0)
 .I 'Y S OUT=1 Q
"RTN","ECXTRANS",42,0)
 .K ^ECX(727,ECDA,"TR")
"RTN","ECXTRANS",43,0)
 .S ECRE="re"
"RTN","ECXTRANS",44,0)
 S ECTYPE=$P(^ECX(727,ECDA,0),U,3),ECIEN=+$O(^ECX(727.1,"AC",ECTYPE,0)),ECPIECE=$P(^ECX(727.1,ECIEN,0),U,10)
"RTN","ECXTRANS",45,0)
 I ECPIECE>0,$P($G(^ECX(728,1,7.1)),U,ECPIECE)]"" D  Q
"RTN","ECXTRANS",46,0)
 .D MES^XPDUTL(" ")
"RTN","ECXTRANS",47,0)
 .D MES^XPDUTL("An "_ECTYPE_" Extract is currently running or scheduled to run.")
"RTN","ECXTRANS",48,0)
 .D MES^XPDUTL("Please wait until that job has completed before attempting")
"RTN","ECXTRANS",49,0)
 .D MES^XPDUTL("this transmission.")
"RTN","ECXTRANS",50,0)
 .D MES^XPDUTL(" ")
"RTN","ECXTRANS",51,0)
 .D PAUSE
"RTN","ECXTRANS",52,0)
 S ZTSK=$G(^ECX(727,ECDA,"Q")) I ZTSK D STAT^%ZTLOAD I ZTSK(0) I ZTSK(1)<3 D  Q
"RTN","ECXTRANS",53,0)
 .W !!,"Task ",ZTSK," is already queued to transmit this extract."
"RTN","ECXTRANS",54,0)
 .K ZTSK
"RTN","ECXTRANS",55,0)
 .D PAUSE
"RTN","ECXTRANS",56,0)
 S ZTSAVE("ECDA")="",ZTSAVE("ECXQUEUE")="",ZTSAVE("ECRE")="",ZTRTN="START^ECXTRANS",ZTIO="",ZTDESC="Transmission of extract # "_ECDA
"RTN","ECXTRANS",57,0)
 W !! D ^%ZTLOAD
"RTN","ECXTRANS",58,0)
 I $D(ZTSK) D
"RTN","ECXTRANS",59,0)
 .W !,"Request queued as Task #",ZTSK,"."
"RTN","ECXTRANS",60,0)
 .S ^ECX(727,ECDA,"Q")=ZTSK K ZTSK
"RTN","ECXTRANS",61,0)
 .D PAUSE
"RTN","ECXTRANS",62,0)
 Q
"RTN","ECXTRANS",63,0)
START ; entry point from task
"RTN","ECXTRANS",64,0)
 N DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTRANS",65,0)
 S:$P(^ECX(727,ECDA,0),U,3)'="Prosthetics" ECINST=$P(^ECX(728,1,0),U)
"RTN","ECXTRANS",66,0)
 S:$P(^ECX(727,ECDA,0),U,3)="Prosthetics" ECINST=$P(^("DIV"),U)
"RTN","ECXTRANS",67,0)
 S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXTRANS",68,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I"))
"RTN","ECXTRANS",69,0)
 S ECF=^ECX(727,ECDA,"FILE"),ECHEAD=^("HEAD"),ECGRP=^("GRP"),ECED=$P(^(0),U,5),ECPACK=$P(^(0),U,3)
"RTN","ECXTRANS",70,0)
 S ECVER=$G(^("VER")) S:'ECVER ECVER=1 S ECVER=$$RJ^XLFSTR(ECVER,3,0)
"RTN","ECXTRANS",71,0)
 ;all setup extracts for all sites to go to queue DMU - Judy Sine 2/16/95
"RTN","ECXTRANS",72,0)
 I ECPACK["(setup)" S ECXQUEUE="DMU"
"RTN","ECXTRANS",73,0)
 ;all LAR extracts for fy96/fy97 for test sites go to queue DMW;BTSO/AAC 11/18/97
"RTN","ECXTRANS",74,0)
 I ECHEAD="LAR",+ECED<2971001 S ECXQUEUE="DMW"
"RTN","ECXTRANS",75,0)
 K ^TMP($J) S ECHD(1)=ECINST_ECHEAD_$$ECXYM^ECXUTL(ECED)_ECVER,ECRN=0,ECMSN=1,ECMIN=2,ECMAX=200,ECLN=ECMIN
"RTN","ECXTRANS",76,0)
 I ECHEAD="PRO" S ECMAX=150
"RTN","ECXTRANS",77,0)
 I ECHEAD="CLI" S ECMAX=175
"RTN","ECXTRANS",78,0)
 ;* check for and concat nodes 0 and 1 into one message line
"RTN","ECXTRANS",79,0)
 F J=0:0 S J=$O(^ECX(ECF,"AC",ECDA,J)) Q:'J  Q:$$S^%ZTLOAD  I $D(^ECX(ECF,J,0)) D
"RTN","ECXTRANS",80,0)
 .S ^TMP($J,ECMSN,ECLN,0)=$P(^ECX(ECF,J,0),U,4,100)
"RTN","ECXTRANS",81,0)
 .I $D(^ECX(ECF,J,1)) S ^TMP($J,ECMSN,ECLN,0)=^TMP($J,ECMSN,ECLN,0)_U_$P(^ECX(ECF,J,1),U,1,100)
"RTN","ECXTRANS",82,0)
 .S ^TMP($J,ECMSN,ECLN,0)=^TMP($J,ECMSN,ECLN,0)_U_"~"
"RTN","ECXTRANS",83,0)
 .S ECLN=ECLN+1,ECRN=ECRN+1 I ECLN>ECMAX,$O(^ECX(ECF,"AC",ECDA,J)) S ECLN=ECMIN,ECMSN=ECMSN+1
"RTN","ECXTRANS",84,0)
 ;quit if user stopped task
"RTN","ECXTRANS",85,0)
 I $$S^%ZTLOAD D CLEAN Q
"RTN","ECXTRANS",86,0)
 S TIME=$P($$HTE^XLFDT($H),":",1,2)
"RTN","ECXTRANS",87,0)
 ; send message to mail group 'DSS-ECGRP'
"RTN","ECXTRANS",88,0)
 S ECXLNCNT=7
"RTN","ECXTRANS",89,0)
 F ECMS=1:1:ECMSN D SEND
"RTN","ECXTRANS",90,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTRANS",91,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTRANS",92,0)
 S ^TMP($J,"LOC",1,0)="The DSS "_ECPACK_" extract (#"_ECDA_") was "_ECRE_"transmitted on "_$P(TIME,"@")_" at "_$P(TIME,"@",2)_". "
"RTN","ECXTRANS",93,0)
 S ^TMP($J,"LOC",3,0)=" "
"RTN","ECXTRANS",94,0)
 S ^TMP($J,"LOC",4,0)="A total of "_ECRN_" records were written."
"RTN","ECXTRANS",95,0)
 S ^TMP($J,"LOC",5,0)="A total of "_ECMSN_" messages were sent."
"RTN","ECXTRANS",96,0)
 S ^TMP($J,"LOC",6,0)="    Message numbers :"
"RTN","ECXTRANS",97,0)
 S XMTEXT="^TMP($J,""LOC"","
"RTN","ECXTRANS",98,0)
 D ^XMD
"RTN","ECXTRANS",99,0)
 S ^ECX(727,ECDA,"TR")=DT
"RTN","ECXTRANS",100,0)
 D CLEAN
"RTN","ECXTRANS",101,0)
 Q
"RTN","ECXTRANS",102,0)
 ;
"RTN","ECXTRANS",103,0)
SEND ;send individual messages
"RTN","ECXTRANS",104,0)
 N ECXDD,DA,DIC,DIE,DINUM,X,XMDUZ,XMTEXT,XMSUB,XMY,XMZ
"RTN","ECXTRANS",105,0)
 S XMSUB="("_ECGRP_") "_ECINST_" - "_ECPACK_" DSS EXTRACT, MESSAGE "_ECMS_" OF "_ECMSN
"RTN","ECXTRANS",106,0)
 S XMDUZ="DSS SYSTEM"
"RTN","ECXTRANS",107,0)
 F J=1:1:ECMIN-1 S ^TMP($J,ECMS,J,0)=ECHD(J)
"RTN","ECXTRANS",108,0)
 S XMY("XXX@Q-"_ECXQUEUE_".VA.GOV")=""
"RTN","ECXTRANS",109,0)
 S XMTEXT="^TMP($J,ECMS,"
"RTN","ECXTRANS",110,0)
 D ^XMD
"RTN","ECXTRANS",111,0)
 S ^TMP($J,"LOC",ECXLNCNT,0)=XMZ,ECXLNCNT=ECXLNCNT+1
"RTN","ECXTRANS",112,0)
 ;store msg # in extract log
"RTN","ECXTRANS",113,0)
 D FIELD^DID(727,301,,"SPECIFIER","ECXDD")
"RTN","ECXTRANS",114,0)
 S DA(1)=ECDA,DIC(0)="L",DIC("P")=ECXDD("SPECIFIER")
"RTN","ECXTRANS",115,0)
 S DIC="^ECX(727,"_DA(1)_",1,",X=XMZ,DINUM=X
"RTN","ECXTRANS",116,0)
 K DD,DO D FILE^DICN
"RTN","ECXTRANS",117,0)
 Q
"RTN","ECXTRANS",118,0)
 ;
"RTN","ECXTRANS",119,0)
CLEAN ;clean-up
"RTN","ECXTRANS",120,0)
 S ZTREQ="@"
"RTN","ECXTRANS",121,0)
 K ^TMP($J),^ECX(727,ECDA,"Q"),XMDUZ,XMTEXT,XMSUB,XMY,XMZ
"RTN","ECXTRANS",122,0)
 D ^ECXKILL
"RTN","ECXTRANS",123,0)
 I $$S^%ZTLOAD K ZTREQ S ZTSTOP=1
"RTN","ECXTRANS",124,0)
 Q
"RTN","ECXTRANS",125,0)
 ;
"RTN","ECXTRANS",126,0)
PAUSE ;pause screen
"RTN","ECXTRANS",127,0)
 S OUT=0
"RTN","ECXTRANS",128,0)
 I $E(IOST)="C" D
"RTN","ECXTRANS",129,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXTRANS",130,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXTRANS",131,0)
 I 'Y S OUT=1
"RTN","ECXTRANS",132,0)
 W !!
"RTN","ECXTRANS",133,0)
 Q
"RTN","ECXUTL2")
0^16^B14131006
"RTN","ECXUTL2",1,0)
ECXUTL2 ;ALB/JAP - Utilities for DSS Extracts (cont.) ;Aug 5, 1998
"RTN","ECXUTL2",2,0)
 ;;3.0;DSS EXTRACTS;**8,13**;Dec 22, 1997
"RTN","ECXUTL2",3,0)
 ;
"RTN","ECXUTL2",4,0)
ECXDEF(ECXHEAD,ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER) ;variables specific to extract from file #727.1
"RTN","ECXUTL2",5,0)
 ;   input 
"RTN","ECXUTL2",6,0)
 ;   ECXHEAD = extract header code
"RTN","ECXUTL2",7,0)
 ;   all other formal list parameters passed by reference
"RTN","ECXUTL2",8,0)
 ;   output
"RTN","ECXUTL2",9,0)
 ;   ECXPACK = type field (#7)
"RTN","ECXUTL2",10,0)
 ;   ECXGRP  = group field (#9)
"RTN","ECXUTL2",11,0)
 ;   ECXFILE = file number field (#1)
"RTN","ECXUTL2",12,0)
 ;   ECXRTN  = routine field (#4)
"RTN","ECXUTL2",13,0)
 ;   ECXPIECE= running piece field (#11)
"RTN","ECXUTL2",14,0)
 ;   ECXVER  = dss version
"RTN","ECXUTL2",15,0)
 ;
"RTN","ECXUTL2",16,0)
 N ECXIEN,ECXARR,DIC,DA,DR,DIQ
"RTN","ECXUTL2",17,0)
 S (ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER)=""
"RTN","ECXUTL2",18,0)
 S ECXIEN=+$O(^ECX(727.1,"C",ECXHEAD,0)) I ECXIEN=0 D  Q
"RTN","ECXUTL2",19,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",20,0)
 .D MES^XPDUTL(" It appears that you may have a problem with File #727.1 --")
"RTN","ECXUTL2",21,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",22,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is not properly defined.")
"RTN","ECXUTL2",23,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",24,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",25,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",26,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",27,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",28,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",29,0)
 .W !!
"RTN","ECXUTL2",30,0)
 S DIC="^ECX(727.1,",DA=ECXIEN,DR=".01;1;4;7;9;11",DIQ="ECXARR"
"RTN","ECXUTL2",31,0)
 D EN^DIQ1
"RTN","ECXUTL2",32,0)
 S ECXPACK=ECXARR(727.1,ECXIEN,7)
"RTN","ECXUTL2",33,0)
 S ECXGRP=ECXARR(727.1,ECXIEN,9)
"RTN","ECXUTL2",34,0)
 S ECXFILE=ECXARR(727.1,ECXIEN,1)
"RTN","ECXUTL2",35,0)
 S ECXRTN="START^"_ECXARR(727.1,ECXIEN,4)
"RTN","ECXUTL2",36,0)
 S ECXPIECE=ECXARR(727.1,ECXIEN,11)
"RTN","ECXUTL2",37,0)
 ;version of dss/tsi in Austin as specified by btso
"RTN","ECXUTL2",38,0)
 S ECXVER=7
"RTN","ECXUTL2",39,0)
 Q
"RTN","ECXUTL2",40,0)
 ;
"RTN","ECXUTL2",41,0)
PRIMARY(ECXDFN,ECXDATE,ECXPREFX) ;determine patient's pc team and pc provider
"RTN","ECXUTL2",42,0)
 ; input
"RTN","ECXUTL2",43,0)
 ; ECXDFN    = file #2 ien (required)
"RTN","ECXUTL2",44,0)
 ; ECXDATE   = date of interest (required)
"RTN","ECXUTL2",45,0)
 ; ECXPREFX  = prefix for provider data (optional)
"RTN","ECXUTL2",46,0)
 ;             defaults to "2" if not specified otherwise
"RTN","ECXUTL2",47,0)
 ; output
"RTN","ECXUTL2",48,0)
 ; ECXPRIME  = pc team ien^prefix_pc provider ien^pc provider person class
"RTN","ECXUTL2",49,0)
 ;
"RTN","ECXUTL2",50,0)
 N ECPTTM,ECPTPR,ECCLAS,ECPRIME
"RTN","ECXUTL2",51,0)
 S:'$D(ECXPREFX) ECXPREFX=2 S:(+ECXPREFX=0) ECXPREFX=2
"RTN","ECXUTL2",52,0)
 S ECPTTM=+$$OUTPTTM^ECXUTL3(ECXDFN,ECXDATE) S:ECPTTM=0 ECPTTM=""
"RTN","ECXUTL2",53,0)
 S ECPTPR=+$$OUTPTPR^ECXUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",54,0)
 S ECCLAS="" I ECPTPR>0 S ECCLAS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXUTL2",55,0)
 S:ECPTPR=0 ECPTPR="" S:ECPTPR]"" ECPTPR=ECXPREFX_ECPTPR
"RTN","ECXUTL2",56,0)
 S ECXPRIME=ECPTTM_U_ECPTPR_U_ECCLAS
"RTN","ECXUTL2",57,0)
 Q ECXPRIME
"RTN","ECXUTL2",58,0)
 ;
"RTN","ECXUTL2",59,0)
INP(ECXDFN,ECXDATE) ; check for inpatient status
"RTN","ECXUTL2",60,0)
 ; input
"RTN","ECXUTL2",61,0)
 ; ECXDFN  = file #2 ien (required)
"RTN","ECXUTL2",62,0)
 ; ECXDATE = date of interest (required)
"RTN","ECXUTL2",63,0)
 ; output
"RTN","ECXUTL2",64,0)
 ; ECXINP  = patient status^movment #^current treat. spec.^admission date/time^current ward^discharge date/time
"RTN","ECXUTL2",65,0)
 ;           where patient status = 3 for inpatient
"RTN","ECXUTL2",66,0)
 ;                                = 1 for outpatient
"RTN","ECXUTL2",67,0)
 ;
"RTN","ECXUTL2",68,0)
 N DFN,VAIP,ECA,ECADM,ECMN,ECTS,ECWARD,ECDC,ECXINP
"RTN","ECXUTL2",69,0)
 S DFN=ECXDFN
"RTN","ECXUTL2",70,0)
 S ECA=1,(ECMN,ECTS,ECADM,ECWARD,ECDC,ECXINP)=""
"RTN","ECXUTL2",71,0)
 K VAIP S VAIP("D")=ECXDATE D IN5^VADPT
"RTN","ECXUTL2",72,0)
 S ECMN=$G(VAIP(1))
"RTN","ECXUTL2",73,0)
 I ECMN D
"RTN","ECXUTL2",74,0)
 .S ECA=3
"RTN","ECXUTL2",75,0)
 .S ECTS=$P($G(^DIC(45.7,+VAIP(8),0)),U,2) S:ECTS=0 ECTS=""
"RTN","ECXUTL2",76,0)
 .S ECADM=+$G(VAIP(13,1)) S:ECADM=0 ECADM=""
"RTN","ECXUTL2",77,0)
 .S ECWARD=+$G(VAIP(5)) S:ECWARD=0 ECWARD=""
"RTN","ECXUTL2",78,0)
 .S ECDC=+$G(VAIP(17,1)) S:ECDC=0 ECDC=""
"RTN","ECXUTL2",79,0)
 S ECXINP=ECA_U_ECMN_U_ECTS_U_ECADM_U_ECWARD_U_ECDC
"RTN","ECXUTL2",80,0)
 Q ECXINP
"RTN","ECXUTL2",81,0)
 ;
"RTN","ECXUTL2",82,0)
VISN19(ECXDFN,ECXPAYOR,ECXSAI) ;visn 19 sharing agreement data
"RTN","ECXUTL2",83,0)
 ; input  ECXDFN = patient file ien
"RTN","ECXUTL2",84,0)
 ; output ECXPAYOR, ECXSAI (passed by reference)
"RTN","ECXUTL2",85,0)
 ;
"RTN","ECXUTL2",86,0)
 N I,JJ,ALIAS,INSUR,TOT
"RTN","ECXUTL2",87,0)
 S (ECXPAYOR,ECXSAI)=""
"RTN","ECXUTL2",88,0)
 I $D(^DPT(ECXDFN,.01)) S JJ=0 D
"RTN","ECXUTL2",89,0)
 .F  S JJ=$O(^DPT(ECXDFN,.01,JJ)) Q:JJ=""  S ALIAS=$P(^(JJ,0),U,1) D  Q:ECXPAYOR]""
"RTN","ECXUTL2",90,0)
 ..S ECXPAYOR=$S(ALIAS="CAT C":ALIAS,ALIAS="CATEGORY C":ALIAS,ALIAS="CHAMPVA":ALIAS,ALIAS="CHAMPUS":ALIAS,ALIAS="TRICARE":ALIAS,ALIAS="SHARING AGREEMENT":ALIAS,1:"")
"RTN","ECXUTL2",91,0)
 I ECXPAYOR]"",$D(^DPT(ECXDFN,.312)) S (J,JJ)=0 D
"RTN","ECXUTL2",92,0)
 .F  S JJ=$O(^DPT(ECXDFN,.312,JJ)) Q:+JJ=0  S I=$P(^(JJ,0),U,1),J=J+1,INSUR(J)=$P($G(^DIC(36,I,0)),U,1)
"RTN","ECXUTL2",93,0)
 .S TOT=$O(INSUR(99),-1)
"RTN","ECXUTL2",94,0)
 .I TOT=1 S ECXSAI=INSUR(1) Q
"RTN","ECXUTL2",95,0)
 .I TOT=2 S ECXSAI=$E(INSUR(1),1,14)_","_$E(INSUR(2),1,14) Q
"RTN","ECXUTL2",96,0)
 .I TOT=3 S ECXSAI=$E(INSUR(1),1,9)_","_$E(INSUR(2),1,9)_","_$E(INSUR(3),1,9) Q
"RTN","ECXUTL2",97,0)
 .I TOT>3 S ECXSAI=$E(INSUR(1),1,9)_","_$E(INSUR(2),1,9)_","_$E(INSUR(3),1,9_"M")
"RTN","ECXUTL2",98,0)
 Q
"VER")
8.0^21.0
"^DD",727.802,727.802,46,0)
SHARING AGREEMENT INSURANCE^F^^1;10^K:$L(X)>30!($L(X)<3) X
"^DD",727.802,727.802,46,3)
Answer must be 3-30 characters in length.
"^DD",727.802,727.802,46,21,0)
^^2^2^2981103^^^^
"^DD",727.802,727.802,46,21,1,0)
Used to indicate insurer(s) for patients who participate in
"^DD",727.802,727.802,46,21,2,0)
sharing agreements.
"^DD",727.802,727.802,46,23,0)
^^15^15^2981103^^^^
"^DD",727.802,727.802,46,23,1,0)
The INSURANCE TYPE sub-field (#.01) of the INSURANCE TYPE multiple
"^DD",727.802,727.802,46,23,2,0)
field (#.3121) of the PATIENT file (#2).
"^DD",727.802,727.802,46,23,3,0)
 
"^DD",727.802,727.802,46,23,4,0)
If there are multiple insurance companies listed, they shall
"^DD",727.802,727.802,46,23,5,0)
be extracted according to the following:
"^DD",727.802,727.802,46,23,6,0)
a) If there is one insurance company send up to 30 characters.
"^DD",727.802,727.802,46,23,7,0)
b) If there are two insurance companies, send two 14-character
"^DD",727.802,727.802,46,23,8,0)
   names separated by a comma.
"^DD",727.802,727.802,46,23,9,0)
c) If there are three insurance companies, send three 
"^DD",727.802,727.802,46,23,10,0)
   9-character names separated by commas.
"^DD",727.802,727.802,46,23,11,0)
d) If there are 4 or more insurance companies, send the first
"^DD",727.802,727.802,46,23,12,0)
   three 9-character names separated by commas, followed by 
"^DD",727.802,727.802,46,23,13,0)
   another comma and the character M.  M would stand for More
"^DD",727.802,727.802,46,23,14,0)
   and the implication is there are more than 4 insurance 
"^DD",727.802,727.802,46,23,15,0)
   companies.
"^DD",727.802,727.802,46,"DT")
2980713
"^DD",727.802,727.802,48,0)
PC PROVIDER PERSON CLASS^F^^1;12^K:$L(X)>7!($L(X)<7) X
"^DD",727.802,727.802,48,3)
Answer must be 7 characters in length.
"^DD",727.802,727.802,48,21,0)
^^2^2^2981027^^
"^DD",727.802,727.802,48,21,1,0)
The VA Code of the Person Class of the Primary Care Provider 
"^DD",727.802,727.802,48,21,2,0)
associated with this record.
"^DD",727.802,727.802,48,23,0)
^^6^6^2981027^^
"^DD",727.802,727.802,48,23,1,0)
The field will hold the VA Code associated with the active Person
"^DD",727.802,727.802,48,23,2,0)
Class of the patient's Primary Care Provider as of the date of this
"^DD",727.802,727.802,48,23,3,0)
extract record.
"^DD",727.802,727.802,48,23,4,0)
  
"^DD",727.802,727.802,48,23,5,0)
The VA Code is always of the form "V"_six numeric digits; exactly
"^DD",727.802,727.802,48,23,6,0)
7 characters in length.
"^DD",727.802,727.802,48,"DT")
2981026
"^DD",727.803,727.803,51,0)
SHARING AGREEMENT INSURANCE^F^^1;21^K:$L(X)>30!($L(X)<3) X
"^DD",727.803,727.803,51,3)
Answer must be 3-30 characters in length.
"^DD",727.803,727.803,51,21,0)
^^2^2^2981103^^^^
"^DD",727.803,727.803,51,21,1,0)
Used to indicate insurer(s) for patients who participate in
"^DD",727.803,727.803,51,21,2,0)
sharing agreements.
"^DD",727.803,727.803,51,23,0)
^^15^15^2981103^^^^
"^DD",727.803,727.803,51,23,1,0)
The INSURANCE TYPE sub-field (#.01) of the INSURANCE TYPE multiple
"^DD",727.803,727.803,51,23,2,0)
field (#.3121) of the PATIENT file (#2).
"^DD",727.803,727.803,51,23,3,0)
 
"^DD",727.803,727.803,51,23,4,0)
If there are multiple insurance companies listed, they shall
"^DD",727.803,727.803,51,23,5,0)
be extracted according to the following:
"^DD",727.803,727.803,51,23,6,0)
a) If there is one insurance company send up to 30 characters.
"^DD",727.803,727.803,51,23,7,0)
b) If there are two insurance companies, send two 14-character
"^DD",727.803,727.803,51,23,8,0)
   names separated by a comma.
"^DD",727.803,727.803,51,23,9,0)
c) If there are three insurance companies, send three 
"^DD",727.803,727.803,51,23,10,0)
   9-character names separated by commas.
"^DD",727.803,727.803,51,23,11,0)
d) If there are 4 or more insurance companies, send the first
"^DD",727.803,727.803,51,23,12,0)
   three 9-character names separated by commas, followed by 
"^DD",727.803,727.803,51,23,13,0)
   another comma and the character M.  M would stand for More
"^DD",727.803,727.803,51,23,14,0)
   and the implication is there are more than 4 insurance 
"^DD",727.803,727.803,51,23,15,0)
   companies.
"^DD",727.803,727.803,51,"DT")
2980713
"^DD",727.803,727.803,55,0)
PC PROVIDER PERSON CLASS^F^^1;25^K:$L(X)>7!($L(X)<7) X
"^DD",727.803,727.803,55,3)
Answer must be 7 characters in length.
"^DD",727.803,727.803,55,21,0)
^^2^2^2981026^
"^DD",727.803,727.803,55,21,1,0)
The VA Code of the Person Class of the Primary Care Provider 
"^DD",727.803,727.803,55,21,2,0)
associated with this record.
"^DD",727.803,727.803,55,23,0)
^^6^6^2981026^
"^DD",727.803,727.803,55,23,1,0)
The field will hold the VA Code associated with the active Person
"^DD",727.803,727.803,55,23,2,0)
Class of the patient's Primary Care Provider as of the date of this
"^DD",727.803,727.803,55,23,3,0)
extract record.
"^DD",727.803,727.803,55,23,4,0)
  
"^DD",727.803,727.803,55,23,5,0)
The VA Code is always of the form "V"_six numeric digits; exactly
"^DD",727.803,727.803,55,23,6,0)
7 characters in length.
"^DD",727.803,727.803,55,"DT")
2981026
"^DD",727.804,727.804,26,0)
PC PROVIDER PERSON CLASS^F^^1;5^K:$L(X)>7!($L(X)<7) X
"^DD",727.804,727.804,26,3)
Answer must be 7 characters in length.
"^DD",727.804,727.804,26,21,0)
^^2^2^2981026^
"^DD",727.804,727.804,26,21,1,0)
The VA Code of the Person Class of the Primary Care Provider 
"^DD",727.804,727.804,26,21,2,0)
associated with this record.
"^DD",727.804,727.804,26,23,0)
^^6^6^2981026^
"^DD",727.804,727.804,26,23,1,0)
The field will hold the VA Code associated with the active Person
"^DD",727.804,727.804,26,23,2,0)
Class of the patient's Primary Care Provider as of the date of this
"^DD",727.804,727.804,26,23,3,0)
extract record.
"^DD",727.804,727.804,26,23,4,0)
  
"^DD",727.804,727.804,26,23,5,0)
The VA Code is always of the form "V"_six numeric digits; exactly
"^DD",727.804,727.804,26,23,6,0)
7 characters in length.
"^DD",727.804,727.804,26,"DT")
2981026
"^DD",727.806,727.806,55,0)
PC PROVIDER PERSON CLASS^F^^1;5^K:$L(X)>7!($L(X)<7) X
"^DD",727.806,727.806,55,3)
Answer must be 7 characters in length.
"^DD",727.806,727.806,55,21,0)
^^2^2^2981026^
"^DD",727.806,727.806,55,21,1,0)
The VA Code of the Person Class of the Primary Care Provider 
"^DD",727.806,727.806,55,21,2,0)
associated with this record.
"^DD",727.806,727.806,55,23,0)
^^6^6^2981026^
"^DD",727.806,727.806,55,23,1,0)
The field will hold the VA Code associated with the active Person
"^DD",727.806,727.806,55,23,2,0)
Class of the patient's Primary Care Provider as of the date of this
"^DD",727.806,727.806,55,23,3,0)
extract record.
"^DD",727.806,727.806,55,23,4,0)
  
"^DD",727.806,727.806,55,23,5,0)
The VA Code is always of the form "V"_six numeric digits; exactly
"^DD",727.806,727.806,55,23,6,0)
7 characters in length.
"^DD",727.806,727.806,55,"DT")
2981026
"^DD",727.81,727.81,42,0)
PC PROVIDER PERSON CLASS^F^^1;9^K:$L(X)>7!($L(X)<7) X
"^DD",727.81,727.81,42,3)
Answer must be 7 characters in length.
"^DD",727.81,727.81,42,21,0)
^^2^2^2981026^
"^DD",727.81,727.81,42,21,1,0)
The VA Code of the Person Class of the Primary Care Provider 
"^DD",727.81,727.81,42,21,2,0)
associated with this record.
"^DD",727.81,727.81,42,23,0)
^^6^6^2981026^
"^DD",727.81,727.81,42,23,1,0)
The field will hold the VA Code associated with the active Person
"^DD",727.81,727.81,42,23,2,0)
Class of the patient's Primary Care Provider as of the date of this
"^DD",727.81,727.81,42,23,3,0)
extract record.
"^DD",727.81,727.81,42,23,4,0)
  
"^DD",727.81,727.81,42,23,5,0)
The VA Code is always of the form "V"_six numeric digits; exactly
"^DD",727.81,727.81,42,23,6,0)
7 characters in length.
"^DD",727.81,727.81,42,"DT")
2981026
"^DD",727.811,727.811,43,0)
PC PROVIDER PERSON CLASS^F^^1;7^K:$L(X)>7!($L(X)<7) X
"^DD",727.811,727.811,43,3)
Answer must be 7 characters in length.
"^DD",727.811,727.811,43,21,0)
^^2^2^2981026^
"^DD",727.811,727.811,43,21,1,0)
The VA Code of the Person Class of the Primary Care Provider 
"^DD",727.811,727.811,43,21,2,0)
associated with this record.
"^DD",727.811,727.811,43,23,0)
^^6^6^2981026^
"^DD",727.811,727.811,43,23,1,0)
The field will hold the VA Code associated with the active Person
"^DD",727.811,727.811,43,23,2,0)
Class of the patient's Primary Care Provider as of the date of this
"^DD",727.811,727.811,43,23,3,0)
extract record.
"^DD",727.811,727.811,43,23,4,0)
  
"^DD",727.811,727.811,43,23,5,0)
The VA Code is always of the form "V"_six numeric digits; exactly
"^DD",727.811,727.811,43,23,6,0)
7 characters in length.
"^DD",727.811,727.811,43,"DT")
2981026
"^DD",727.813,727.813,26,0)
PC PROVIDER PERSON CLASS^F^^1;5^K:$L(X)>7!($L(X)<7) X
"^DD",727.813,727.813,26,3)
Answer must be 7 characters in length.
"^DD",727.813,727.813,26,21,0)
^^2^2^2981026^
"^DD",727.813,727.813,26,21,1,0)
The VA Code of the Person Class of the Primary Care Provider 
"^DD",727.813,727.813,26,21,2,0)
associated with this record.
"^DD",727.813,727.813,26,23,0)
^^6^6^2981026^
"^DD",727.813,727.813,26,23,1,0)
The field will hold the VA Code associated with the active Person
"^DD",727.813,727.813,26,23,2,0)
Class of the patient's Primary Care Provider as of the date of this
"^DD",727.813,727.813,26,23,3,0)
extract record.
"^DD",727.813,727.813,26,23,4,0)
  
"^DD",727.813,727.813,26,23,5,0)
The VA Code is always of the form "V"_six numeric digits; exactly
"^DD",727.813,727.813,26,23,6,0)
7 characters in length.
"^DD",727.813,727.813,26,"DT")
2981026
"^DD",727.814,727.814,27,0)
PC PROVIDER PERSON CLASS^F^^1;5^K:$L(X)>7!($L(X)<7) X
"^DD",727.814,727.814,27,3)
Answer must be 7 characters in length.
"^DD",727.814,727.814,27,21,0)
^^2^2^2981026^
"^DD",727.814,727.814,27,21,1,0)
The VA Code of the Person Class of the Primary Care Provider 
"^DD",727.814,727.814,27,21,2,0)
associated with this record.
"^DD",727.814,727.814,27,23,0)
^^6^6^2981026^
"^DD",727.814,727.814,27,23,1,0)
The field will hold the VA Code associated with the active Person
"^DD",727.814,727.814,27,23,2,0)
Class of the patient's Primary Care Provider as of the date of this
"^DD",727.814,727.814,27,23,3,0)
extract record.
"^DD",727.814,727.814,27,23,4,0)
  
"^DD",727.814,727.814,27,23,5,0)
The VA Code is always of the form "V"_six numeric digits; exactly
"^DD",727.814,727.814,27,23,6,0)
7 characters in length.
"^DD",727.814,727.814,27,"DT")
2981026
"^DD",727.815,727.815,44,0)
PC PROVIDER PERSON CLASS^F^^1;6^K:$L(X)>7!($L(X)<7) X
"^DD",727.815,727.815,44,3)
Answer must be 7 characters in length.
"^DD",727.815,727.815,44,21,0)
^^2^2^2981103^^^
"^DD",727.815,727.815,44,21,1,0)
The VA Code of the Person Class of the Primary Care Provider 
"^DD",727.815,727.815,44,21,2,0)
associated with this record.
"^DD",727.815,727.815,44,23,0)
^^6^6^2981103^^
"^DD",727.815,727.815,44,23,1,0)
The field will hold the VA Code associated with the active Person
"^DD",727.815,727.815,44,23,2,0)
Class of the patient's Primary Care Provider as of the date of this
"^DD",727.815,727.815,44,23,3,0)
extract record.
"^DD",727.815,727.815,44,23,4,0)
  
"^DD",727.815,727.815,44,23,5,0)
The VA Code is always of the form "V"_six numeric digits; exactly
"^DD",727.815,727.815,44,23,6,0)
7 characters in length.
"^DD",727.815,727.815,44,"DT")
2981103
"^DD",727.819,727.819,30,0)
PC PROVIDER PERSON CLASS^F^^1;4^K:$L(X)>7!($L(X)<7) X
"^DD",727.819,727.819,30,3)
Answer must be 7 characters in length.
"^DD",727.819,727.819,30,21,0)
^^2^2^2981026^
"^DD",727.819,727.819,30,21,1,0)
The VA Code of the Person Class of the Primary Care Provider 
"^DD",727.819,727.819,30,21,2,0)
associated with this record.
"^DD",727.819,727.819,30,23,0)
^^6^6^2981026^
"^DD",727.819,727.819,30,23,1,0)
The field will hold the VA Code associated with the active Person
"^DD",727.819,727.819,30,23,2,0)
Class of the patient's Primary Care Provider as of the date of this
"^DD",727.819,727.819,30,23,3,0)
extract record.
"^DD",727.819,727.819,30,23,4,0)
  
"^DD",727.819,727.819,30,23,5,0)
The VA Code is always of the form "V"_six numeric digits; exactly
"^DD",727.819,727.819,30,23,6,0)
7 characters in length.
"^DD",727.819,727.819,30,"DT")
2981026
"^DD",727.825,727.825,44,0)
PC PROVIDER PERSON CLASS^F^^1;6^K:$L(X)>7!($L(X)<7) X
"^DD",727.825,727.825,44,3)
Answer must be 7 characters in length.
"^DD",727.825,727.825,44,21,0)
^^2^2^2981103^^^^
"^DD",727.825,727.825,44,21,1,0)
The VA Code of the Person Class of the Primary Care Provider 
"^DD",727.825,727.825,44,21,2,0)
associated with this record.
"^DD",727.825,727.825,44,23,0)
^^6^6^2981103^^^
"^DD",727.825,727.825,44,23,1,0)
The field will hold the VA Code associated with the active Person
"^DD",727.825,727.825,44,23,2,0)
Class of the patient's Primary Care Provider as of the date of this
"^DD",727.825,727.825,44,23,3,0)
extract record.
"^DD",727.825,727.825,44,23,4,0)
  
"^DD",727.825,727.825,44,23,5,0)
The VA Code is always of the form "V"_six numeric digits; exactly
"^DD",727.825,727.825,44,23,6,0)
7 characters in length.
"^DD",727.825,727.825,44,"DT")
2981103
"^DD",727.826,727.826,36,0)
PC PROVIDER PERSON CLASS^F^^1;8^K:$L(X)>7!($L(X)<7) X
"^DD",727.826,727.826,36,3)
Answer must be 7 characters in length.
"^DD",727.826,727.826,36,21,0)
^^2^2^2981026^
"^DD",727.826,727.826,36,21,1,0)
The VA Code of the Person Class of the Primary Care Provider 
"^DD",727.826,727.826,36,21,2,0)
associated with this record.
"^DD",727.826,727.826,36,23,0)
^^6^6^2981026^
"^DD",727.826,727.826,36,23,1,0)
The field will hold the VA Code associated with the active Person
"^DD",727.826,727.826,36,23,2,0)
Class of the patient's Primary Care Provider as of the date of this
"^DD",727.826,727.826,36,23,3,0)
extract record.
"^DD",727.826,727.826,36,23,4,0)
  
"^DD",727.826,727.826,36,23,5,0)
The VA Code is always of the form "V"_six numeric digits; exactly
"^DD",727.826,727.826,36,23,6,0)
7 characters in length.
"^DD",727.826,727.826,36,"DT")
2981026
**END**
**END**
